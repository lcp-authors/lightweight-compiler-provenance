
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gcov-dump_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402228 <.init>:
  402228:	stp	x29, x30, [sp, #-16]!
  40222c:	mov	x29, sp
  402230:	bl	4029c4 <ferror@plt+0xf4>
  402234:	ldp	x29, x30, [sp], #16
  402238:	ret

Disassembly of section .plt:

0000000000402240 <memcpy@plt-0x20>:
  402240:	stp	x16, x30, [sp, #-16]!
  402244:	adrp	x16, 487000 <_obstack_memory_used@@Base+0x40094>
  402248:	ldr	x17, [x16, #4088]
  40224c:	add	x16, x16, #0xff8
  402250:	br	x17
  402254:	nop
  402258:	nop
  40225c:	nop

0000000000402260 <memcpy@plt>:
  402260:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402264:	ldr	x17, [x16]
  402268:	add	x16, x16, #0x0
  40226c:	br	x17

0000000000402270 <memmove@plt>:
  402270:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402274:	ldr	x17, [x16, #8]
  402278:	add	x16, x16, #0x8
  40227c:	br	x17

0000000000402280 <ngettext@plt>:
  402280:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402284:	ldr	x17, [x16, #16]
  402288:	add	x16, x16, #0x10
  40228c:	br	x17

0000000000402290 <fwrite_unlocked@plt>:
  402290:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402294:	ldr	x17, [x16, #24]
  402298:	add	x16, x16, #0x18
  40229c:	br	x17

00000000004022a0 <strtoul@plt>:
  4022a0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4022a4:	ldr	x17, [x16, #32]
  4022a8:	add	x16, x16, #0x20
  4022ac:	br	x17

00000000004022b0 <strlen@plt>:
  4022b0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4022b4:	ldr	x17, [x16, #40]
  4022b8:	add	x16, x16, #0x28
  4022bc:	br	x17

00000000004022c0 <fputs@plt>:
  4022c0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4022c4:	ldr	x17, [x16, #48]
  4022c8:	add	x16, x16, #0x30
  4022cc:	br	x17

00000000004022d0 <mbstowcs@plt>:
  4022d0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4022d4:	ldr	x17, [x16, #56]
  4022d8:	add	x16, x16, #0x38
  4022dc:	br	x17

00000000004022e0 <exit@plt>:
  4022e0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4022e4:	ldr	x17, [x16, #64]
  4022e8:	add	x16, x16, #0x40
  4022ec:	br	x17

00000000004022f0 <sbrk@plt>:
  4022f0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4022f4:	ldr	x17, [x16, #72]
  4022f8:	add	x16, x16, #0x48
  4022fc:	br	x17

0000000000402300 <strnlen@plt>:
  402300:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402304:	ldr	x17, [x16, #80]
  402308:	add	x16, x16, #0x50
  40230c:	br	x17

0000000000402310 <iconv_close@plt>:
  402310:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402314:	ldr	x17, [x16, #88]
  402318:	add	x16, x16, #0x58
  40231c:	br	x17

0000000000402320 <setbuf@plt>:
  402320:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402324:	ldr	x17, [x16, #96]
  402328:	add	x16, x16, #0x60
  40232c:	br	x17

0000000000402330 <readlink@plt>:
  402330:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402334:	ldr	x17, [x16, #104]
  402338:	add	x16, x16, #0x68
  40233c:	br	x17

0000000000402340 <ftell@plt>:
  402340:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402344:	ldr	x17, [x16, #112]
  402348:	add	x16, x16, #0x70
  40234c:	br	x17

0000000000402350 <sprintf@plt>:
  402350:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402354:	ldr	x17, [x16, #120]
  402358:	add	x16, x16, #0x78
  40235c:	br	x17

0000000000402360 <opendir@plt>:
  402360:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402364:	ldr	x17, [x16, #128]
  402368:	add	x16, x16, #0x80
  40236c:	br	x17

0000000000402370 <__cxa_atexit@plt>:
  402370:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402374:	ldr	x17, [x16, #136]
  402378:	add	x16, x16, #0x88
  40237c:	br	x17

0000000000402380 <fputc@plt>:
  402380:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402384:	ldr	x17, [x16, #144]
  402388:	add	x16, x16, #0x90
  40238c:	br	x17

0000000000402390 <qsort@plt>:
  402390:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402394:	ldr	x17, [x16, #152]
  402398:	add	x16, x16, #0x98
  40239c:	br	x17

00000000004023a0 <snprintf@plt>:
  4023a0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4023a4:	ldr	x17, [x16, #160]
  4023a8:	add	x16, x16, #0xa0
  4023ac:	br	x17

00000000004023b0 <localtime@plt>:
  4023b0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4023b4:	ldr	x17, [x16, #168]
  4023b8:	add	x16, x16, #0xa8
  4023bc:	br	x17

00000000004023c0 <fclose@plt>:
  4023c0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4023c4:	ldr	x17, [x16, #176]
  4023c8:	add	x16, x16, #0xb0
  4023cc:	br	x17

00000000004023d0 <getpid@plt>:
  4023d0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4023d4:	ldr	x17, [x16, #184]
  4023d8:	add	x16, x16, #0xb8
  4023dc:	br	x17

00000000004023e0 <nl_langinfo@plt>:
  4023e0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4023e4:	ldr	x17, [x16, #192]
  4023e8:	add	x16, x16, #0xc0
  4023ec:	br	x17

00000000004023f0 <fopen@plt>:
  4023f0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4023f4:	ldr	x17, [x16, #200]
  4023f8:	add	x16, x16, #0xc8
  4023fc:	br	x17

0000000000402400 <time@plt>:
  402400:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402404:	ldr	x17, [x16, #208]
  402408:	add	x16, x16, #0xd0
  40240c:	br	x17

0000000000402410 <malloc@plt>:
  402410:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402414:	ldr	x17, [x16, #216]
  402418:	add	x16, x16, #0xd8
  40241c:	br	x17

0000000000402420 <open@plt>:
  402420:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402424:	ldr	x17, [x16, #224]
  402428:	add	x16, x16, #0xe0
  40242c:	br	x17

0000000000402430 <wcswidth@plt>:
  402430:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402434:	ldr	x17, [x16, #232]
  402438:	add	x16, x16, #0xe8
  40243c:	br	x17

0000000000402440 <strncmp@plt>:
  402440:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402444:	ldr	x17, [x16, #240]
  402448:	add	x16, x16, #0xf0
  40244c:	br	x17

0000000000402450 <bindtextdomain@plt>:
  402450:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402454:	ldr	x17, [x16, #248]
  402458:	add	x16, x16, #0xf8
  40245c:	br	x17

0000000000402460 <fileno_unlocked@plt>:
  402460:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402464:	ldr	x17, [x16, #256]
  402468:	add	x16, x16, #0x100
  40246c:	br	x17

0000000000402470 <__libc_start_main@plt>:
  402470:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402474:	ldr	x17, [x16, #264]
  402478:	add	x16, x16, #0x108
  40247c:	br	x17

0000000000402480 <strcat@plt>:
  402480:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402484:	ldr	x17, [x16, #272]
  402488:	add	x16, x16, #0x110
  40248c:	br	x17

0000000000402490 <memset@plt>:
  402490:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402494:	ldr	x17, [x16, #280]
  402498:	add	x16, x16, #0x118
  40249c:	br	x17

00000000004024a0 <fdopen@plt>:
  4024a0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4024a4:	ldr	x17, [x16, #288]
  4024a8:	add	x16, x16, #0x120
  4024ac:	br	x17

00000000004024b0 <calloc@plt>:
  4024b0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4024b4:	ldr	x17, [x16, #296]
  4024b8:	add	x16, x16, #0x128
  4024bc:	br	x17

00000000004024c0 <strcasecmp@plt>:
  4024c0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4024c4:	ldr	x17, [x16, #304]
  4024c8:	add	x16, x16, #0x130
  4024cc:	br	x17

00000000004024d0 <gmtime@plt>:
  4024d0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4024d4:	ldr	x17, [x16, #312]
  4024d8:	add	x16, x16, #0x138
  4024dc:	br	x17

00000000004024e0 <readdir@plt>:
  4024e0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4024e4:	ldr	x17, [x16, #320]
  4024e8:	add	x16, x16, #0x140
  4024ec:	br	x17

00000000004024f0 <realloc@plt>:
  4024f0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4024f4:	ldr	x17, [x16, #328]
  4024f8:	add	x16, x16, #0x148
  4024fc:	br	x17

0000000000402500 <getpagesize@plt>:
  402500:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402504:	ldr	x17, [x16, #336]
  402508:	add	x16, x16, #0x150
  40250c:	br	x17

0000000000402510 <strdup@plt>:
  402510:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402514:	ldr	x17, [x16, #344]
  402518:	add	x16, x16, #0x158
  40251c:	br	x17

0000000000402520 <closedir@plt>:
  402520:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402524:	ldr	x17, [x16, #352]
  402528:	add	x16, x16, #0x160
  40252c:	br	x17

0000000000402530 <strerror@plt>:
  402530:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402534:	ldr	x17, [x16, #360]
  402538:	add	x16, x16, #0x168
  40253c:	br	x17

0000000000402540 <close@plt>:
  402540:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402544:	ldr	x17, [x16, #368]
  402548:	add	x16, x16, #0x170
  40254c:	br	x17

0000000000402550 <strrchr@plt>:
  402550:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402554:	ldr	x17, [x16, #376]
  402558:	add	x16, x16, #0x178
  40255c:	br	x17

0000000000402560 <__gmon_start__@plt>:
  402560:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402564:	ldr	x17, [x16, #384]
  402568:	add	x16, x16, #0x180
  40256c:	br	x17

0000000000402570 <write@plt>:
  402570:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402574:	ldr	x17, [x16, #392]
  402578:	add	x16, x16, #0x188
  40257c:	br	x17

0000000000402580 <fseek@plt>:
  402580:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402584:	ldr	x17, [x16, #400]
  402588:	add	x16, x16, #0x190
  40258c:	br	x17

0000000000402590 <abort@plt>:
  402590:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402594:	ldr	x17, [x16, #408]
  402598:	add	x16, x16, #0x198
  40259c:	br	x17

00000000004025a0 <__overflow@plt>:
  4025a0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4025a4:	ldr	x17, [x16, #416]
  4025a8:	add	x16, x16, #0x1a0
  4025ac:	br	x17

00000000004025b0 <feof@plt>:
  4025b0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4025b4:	ldr	x17, [x16, #424]
  4025b8:	add	x16, x16, #0x1a8
  4025bc:	br	x17

00000000004025c0 <puts@plt>:
  4025c0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4025c4:	ldr	x17, [x16, #432]
  4025c8:	add	x16, x16, #0x1b0
  4025cc:	br	x17

00000000004025d0 <fread_unlocked@plt>:
  4025d0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4025d4:	ldr	x17, [x16, #440]
  4025d8:	add	x16, x16, #0x1b8
  4025dc:	br	x17

00000000004025e0 <memcmp@plt>:
  4025e0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4025e4:	ldr	x17, [x16, #448]
  4025e8:	add	x16, x16, #0x1c0
  4025ec:	br	x17

00000000004025f0 <pthread_once@plt>:
  4025f0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4025f4:	ldr	x17, [x16, #456]
  4025f8:	add	x16, x16, #0x1c8
  4025fc:	br	x17

0000000000402600 <textdomain@plt>:
  402600:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402604:	ldr	x17, [x16, #464]
  402608:	add	x16, x16, #0x1d0
  40260c:	br	x17

0000000000402610 <getopt_long@plt>:
  402610:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402614:	ldr	x17, [x16, #472]
  402618:	add	x16, x16, #0x1d8
  40261c:	br	x17

0000000000402620 <strcmp@plt>:
  402620:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402624:	ldr	x17, [x16, #480]
  402628:	add	x16, x16, #0x1e0
  40262c:	br	x17

0000000000402630 <iconv@plt>:
  402630:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402634:	ldr	x17, [x16, #488]
  402638:	add	x16, x16, #0x1e8
  40263c:	br	x17

0000000000402640 <mmap@plt>:
  402640:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402644:	ldr	x17, [x16, #496]
  402648:	add	x16, x16, #0x1f0
  40264c:	br	x17

0000000000402650 <strtol@plt>:
  402650:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402654:	ldr	x17, [x16, #504]
  402658:	add	x16, x16, #0x1f8
  40265c:	br	x17

0000000000402660 <fread@plt>:
  402660:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402664:	ldr	x17, [x16, #512]
  402668:	add	x16, x16, #0x200
  40266c:	br	x17

0000000000402670 <dl_iterate_phdr@plt>:
  402670:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402674:	ldr	x17, [x16, #520]
  402678:	add	x16, x16, #0x208
  40267c:	br	x17

0000000000402680 <dgettext@plt>:
  402680:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402684:	ldr	x17, [x16, #528]
  402688:	add	x16, x16, #0x210
  40268c:	br	x17

0000000000402690 <free@plt>:
  402690:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402694:	ldr	x17, [x16, #536]
  402698:	add	x16, x16, #0x218
  40269c:	br	x17

00000000004026a0 <ungetc@plt>:
  4026a0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #544]
  4026a8:	add	x16, x16, #0x220
  4026ac:	br	x17

00000000004026b0 <freopen@plt>:
  4026b0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #552]
  4026b8:	add	x16, x16, #0x228
  4026bc:	br	x17

00000000004026c0 <strchr@plt>:
  4026c0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #560]
  4026c8:	add	x16, x16, #0x230
  4026cc:	br	x17

00000000004026d0 <fwrite@plt>:
  4026d0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #568]
  4026d8:	add	x16, x16, #0x238
  4026dc:	br	x17

00000000004026e0 <fcntl@plt>:
  4026e0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #576]
  4026e8:	add	x16, x16, #0x240
  4026ec:	br	x17

00000000004026f0 <munmap@plt>:
  4026f0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #584]
  4026f8:	add	x16, x16, #0x248
  4026fc:	br	x17

0000000000402700 <fflush@plt>:
  402700:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402704:	ldr	x17, [x16, #592]
  402708:	add	x16, x16, #0x250
  40270c:	br	x17

0000000000402710 <strcpy@plt>:
  402710:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402714:	ldr	x17, [x16, #600]
  402718:	add	x16, x16, #0x258
  40271c:	br	x17

0000000000402720 <iconv_open@plt>:
  402720:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402724:	ldr	x17, [x16, #608]
  402728:	add	x16, x16, #0x260
  40272c:	br	x17

0000000000402730 <vsprintf@plt>:
  402730:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402734:	ldr	x17, [x16, #616]
  402738:	add	x16, x16, #0x268
  40273c:	br	x17

0000000000402740 <__lxstat@plt>:
  402740:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402744:	ldr	x17, [x16, #624]
  402748:	add	x16, x16, #0x270
  40274c:	br	x17

0000000000402750 <read@plt>:
  402750:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402754:	ldr	x17, [x16, #632]
  402758:	add	x16, x16, #0x278
  40275c:	br	x17

0000000000402760 <memchr@plt>:
  402760:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402764:	ldr	x17, [x16, #640]
  402768:	add	x16, x16, #0x280
  40276c:	br	x17

0000000000402770 <isatty@plt>:
  402770:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402774:	ldr	x17, [x16, #648]
  402778:	add	x16, x16, #0x288
  40277c:	br	x17

0000000000402780 <asctime@plt>:
  402780:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402784:	ldr	x17, [x16, #656]
  402788:	add	x16, x16, #0x290
  40278c:	br	x17

0000000000402790 <__fxstat@plt>:
  402790:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402794:	ldr	x17, [x16, #664]
  402798:	add	x16, x16, #0x298
  40279c:	br	x17

00000000004027a0 <strstr@plt>:
  4027a0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #672]
  4027a8:	add	x16, x16, #0x2a0
  4027ac:	br	x17

00000000004027b0 <realpath@plt>:
  4027b0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #680]
  4027b8:	add	x16, x16, #0x2a8
  4027bc:	br	x17

00000000004027c0 <fputs_unlocked@plt>:
  4027c0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #688]
  4027c8:	add	x16, x16, #0x2b0
  4027cc:	br	x17

00000000004027d0 <__fsetlocking@plt>:
  4027d0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #696]
  4027d8:	add	x16, x16, #0x2b8
  4027dc:	br	x17

00000000004027e0 <strcspn@plt>:
  4027e0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #704]
  4027e8:	add	x16, x16, #0x2c0
  4027ec:	br	x17

00000000004027f0 <vfprintf@plt>:
  4027f0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #712]
  4027f8:	add	x16, x16, #0x2c8
  4027fc:	br	x17

0000000000402800 <printf@plt>:
  402800:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402804:	ldr	x17, [x16, #720]
  402808:	add	x16, x16, #0x2d0
  40280c:	br	x17

0000000000402810 <__errno_location@plt>:
  402810:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402814:	ldr	x17, [x16, #728]
  402818:	add	x16, x16, #0x2d8
  40281c:	br	x17

0000000000402820 <getenv@plt>:
  402820:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402824:	ldr	x17, [x16, #736]
  402828:	add	x16, x16, #0x2e0
  40282c:	br	x17

0000000000402830 <putchar@plt>:
  402830:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402834:	ldr	x17, [x16, #744]
  402838:	add	x16, x16, #0x2e8
  40283c:	br	x17

0000000000402840 <__xstat@plt>:
  402840:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402844:	ldr	x17, [x16, #752]
  402848:	add	x16, x16, #0x2f0
  40284c:	br	x17

0000000000402850 <pthread_mutex_lock@plt>:
  402850:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402854:	ldr	x17, [x16, #760]
  402858:	add	x16, x16, #0x2f8
  40285c:	br	x17

0000000000402860 <syscall@plt>:
  402860:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402864:	ldr	x17, [x16, #768]
  402868:	add	x16, x16, #0x300
  40286c:	br	x17

0000000000402870 <pthread_mutex_unlock@plt>:
  402870:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402874:	ldr	x17, [x16, #776]
  402878:	add	x16, x16, #0x308
  40287c:	br	x17

0000000000402880 <gettext@plt>:
  402880:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402884:	ldr	x17, [x16, #784]
  402888:	add	x16, x16, #0x310
  40288c:	br	x17

0000000000402890 <fprintf@plt>:
  402890:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  402894:	ldr	x17, [x16, #792]
  402898:	add	x16, x16, #0x318
  40289c:	br	x17

00000000004028a0 <__uflow@plt>:
  4028a0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #800]
  4028a8:	add	x16, x16, #0x320
  4028ac:	br	x17

00000000004028b0 <ioctl@plt>:
  4028b0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #808]
  4028b8:	add	x16, x16, #0x328
  4028bc:	br	x17

00000000004028c0 <setlocale@plt>:
  4028c0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #816]
  4028c8:	add	x16, x16, #0x330
  4028cc:	br	x17

00000000004028d0 <ferror@plt>:
  4028d0:	adrp	x16, 488000 <memcpy@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #824]
  4028d8:	add	x16, x16, #0x338
  4028dc:	br	x17

Disassembly of section .text:

00000000004028e0 <_obstack_begin@@Base-0x44460>:
  4028e0:	stp	x29, x30, [sp, #-16]!
  4028e4:	mov	x0, #0x8                   	// #8
  4028e8:	mov	x29, sp
  4028ec:	bl	448258 <_obstack_memory_used@@Base+0x12ec>
  4028f0:	adrp	x3, 487000 <_obstack_memory_used@@Base+0x40094>
  4028f4:	adrp	x2, 487000 <_obstack_memory_used@@Base+0x40094>
  4028f8:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x40094>
  4028fc:	ldr	x3, [x3, #4000]
  402900:	ldr	x2, [x2, #4032]
  402904:	add	x3, x3, #0x10
  402908:	ldr	x1, [x1, #3928]
  40290c:	str	x3, [x0]
  402910:	bl	449070 <_obstack_memory_used@@Base+0x2104>
  402914:	nop
  402918:	stp	x29, x30, [sp, #-32]!
  40291c:	mov	x29, sp
  402920:	stp	x19, x20, [sp, #16]
  402924:	adrp	x19, 488000 <_obstack_memory_used@@Base+0x41094>
  402928:	add	x19, x19, #0x8e0
  40292c:	mov	x20, #0x1c00                	// #7168
  402930:	movk	x20, #0x1, lsl #16
  402934:	mov	x0, x20
  402938:	stp	xzr, xzr, [x19]
  40293c:	stp	xzr, xzr, [x19, #16]
  402940:	stp	xzr, xzr, [x19, #32]
  402944:	str	x20, [x19, #64]
  402948:	bl	402410 <malloc@plt>
  40294c:	str	x0, [x19, #56]
  402950:	cbz	x0, 402968 <ferror@plt+0x98>
  402954:	stp	x20, xzr, [x0]
  402958:	str	x0, [x19, #48]
  40295c:	ldp	x19, x20, [sp, #16]
  402960:	ldp	x29, x30, [sp], #32
  402964:	ret
  402968:	str	xzr, [x19, #48]
  40296c:	str	xzr, [x19, #64]
  402970:	b	40295c <ferror@plt+0x8c>
  402974:	mov	x29, #0x0                   	// #0
  402978:	mov	x30, #0x0                   	// #0
  40297c:	mov	x5, x0
  402980:	ldr	x1, [sp]
  402984:	add	x2, sp, #0x8
  402988:	mov	x6, sp
  40298c:	movz	x0, #0x0, lsl #48
  402990:	movk	x0, #0x0, lsl #32
  402994:	movk	x0, #0x40, lsl #16
  402998:	movk	x0, #0x3444
  40299c:	movz	x3, #0x0, lsl #48
  4029a0:	movk	x3, #0x0, lsl #32
  4029a4:	movk	x3, #0x45, lsl #16
  4029a8:	movk	x3, #0x7948
  4029ac:	movz	x4, #0x0, lsl #48
  4029b0:	movk	x4, #0x0, lsl #32
  4029b4:	movk	x4, #0x45, lsl #16
  4029b8:	movk	x4, #0x79c8
  4029bc:	bl	402470 <__libc_start_main@plt>
  4029c0:	bl	402590 <abort@plt>
  4029c4:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x40094>
  4029c8:	ldr	x0, [x0, #3960]
  4029cc:	cbz	x0, 4029d4 <ferror@plt+0x104>
  4029d0:	b	402560 <__gmon_start__@plt>
  4029d4:	ret
  4029d8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  4029dc:	add	x0, x0, #0x528
  4029e0:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x41094>
  4029e4:	add	x1, x1, #0x528
  4029e8:	cmp	x1, x0
  4029ec:	b.eq	402a04 <ferror@plt+0x134>  // b.none
  4029f0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x10094>
  4029f4:	ldr	x1, [x1, #2536]
  4029f8:	cbz	x1, 402a04 <ferror@plt+0x134>
  4029fc:	mov	x16, x1
  402a00:	br	x16
  402a04:	ret
  402a08:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  402a0c:	add	x0, x0, #0x528
  402a10:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x41094>
  402a14:	add	x1, x1, #0x528
  402a18:	sub	x1, x1, x0
  402a1c:	lsr	x2, x1, #63
  402a20:	add	x1, x2, x1, asr #3
  402a24:	cmp	xzr, x1, asr #1
  402a28:	asr	x1, x1, #1
  402a2c:	b.eq	402a44 <ferror@plt+0x174>  // b.none
  402a30:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x10094>
  402a34:	ldr	x2, [x2, #2544]
  402a38:	cbz	x2, 402a44 <ferror@plt+0x174>
  402a3c:	mov	x16, x2
  402a40:	br	x16
  402a44:	ret
  402a48:	stp	x29, x30, [sp, #-32]!
  402a4c:	mov	x29, sp
  402a50:	str	x19, [sp, #16]
  402a54:	adrp	x19, 488000 <_obstack_memory_used@@Base+0x41094>
  402a58:	ldrb	w0, [x19, #1360]
  402a5c:	cbnz	w0, 402a6c <ferror@plt+0x19c>
  402a60:	bl	4029d8 <ferror@plt+0x108>
  402a64:	mov	w0, #0x1                   	// #1
  402a68:	strb	w0, [x19, #1360]
  402a6c:	ldr	x19, [sp, #16]
  402a70:	ldp	x29, x30, [sp], #32
  402a74:	ret
  402a78:	b	402a08 <ferror@plt+0x138>
  402a7c:	stp	x29, x30, [sp, #-32]!
  402a80:	mov	x29, sp
  402a84:	stp	x19, x20, [sp, #16]
  402a88:	mov	w19, w1
  402a8c:	mov	w20, w2
  402a90:	mov	x1, x0
  402a94:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  402a98:	add	x0, x0, #0x9f8
  402a9c:	bl	402800 <printf@plt>
  402aa0:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  402aa4:	ldr	w0, [x0, #1368]
  402aa8:	cbnz	w0, 402ad0 <ferror@plt+0x200>
  402aac:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  402ab0:	add	x2, x2, #0xb0
  402ab4:	lsl	w1, w19, #1
  402ab8:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  402abc:	add	x0, x0, #0xa08
  402ac0:	bl	402800 <printf@plt>
  402ac4:	ldp	x19, x20, [sp, #16]
  402ac8:	ldp	x29, x30, [sp], #32
  402acc:	ret
  402ad0:	mov	w1, w20
  402ad4:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  402ad8:	add	x0, x0, #0xa00
  402adc:	bl	402800 <printf@plt>
  402ae0:	b	402aac <ferror@plt+0x1dc>
  402ae4:	stp	x29, x30, [sp, #-48]!
  402ae8:	mov	x29, sp
  402aec:	stp	x19, x20, [sp, #16]
  402af0:	mov	w20, w0
  402af4:	adrp	x2, 488000 <_obstack_memory_used@@Base+0x41094>
  402af8:	add	x2, x2, #0x558
  402afc:	ldr	w1, [x2, #20]
  402b00:	ldr	w19, [x2, #24]
  402b04:	sub	w19, w19, w1
  402b08:	ldr	w0, [x2, #36]
  402b0c:	cmp	w0, #0x0
  402b10:	b.le	402c34 <ferror@plt+0x364>
  402b14:	add	x2, x2, #0x8
  402b18:	cmp	w19, w20
  402b1c:	b.cs	402b9c <ferror@plt+0x2cc>  // b.hs, b.nlast
  402b20:	mov	x0, x2
  402b24:	ldr	w2, [x2, #8]
  402b28:	add	w2, w2, w1
  402b2c:	str	w2, [x0, #8]
  402b30:	cbnz	w19, 402bc4 <ferror@plt+0x2f4>
  402b34:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  402b38:	add	x0, x0, #0x558
  402b3c:	str	wzr, [x0, #20]
  402b40:	str	w19, [x0, #24]
  402b44:	add	w19, w19, w20
  402b48:	ldr	x1, [x0, #48]
  402b4c:	cmp	x19, x1
  402b50:	b.hi	402bdc <ferror@plt+0x30c>  // b.pmore
  402b54:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x41094>
  402b58:	add	x1, x1, #0x558
  402b5c:	add	x19, x1, #0x8
  402b60:	ldr	w0, [x1, #24]
  402b64:	ldr	x2, [x1, #48]
  402b68:	sub	w2, w2, w0
  402b6c:	ldr	x4, [x1, #56]
  402b70:	ldr	x3, [x1, #8]
  402b74:	lsl	w2, w2, #2
  402b78:	mov	x1, #0x1                   	// #1
  402b7c:	add	x0, x4, w0, uxtw #2
  402b80:	bl	402660 <fread@plt>
  402b84:	lsr	x1, x0, #2
  402b88:	ldr	w0, [x19, #16]
  402b8c:	add	w0, w0, w1
  402b90:	str	w0, [x19, #16]
  402b94:	cmp	w0, w20
  402b98:	b.cc	402c18 <ferror@plt+0x348>  // b.lo, b.ul, b.last
  402b9c:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x41094>
  402ba0:	add	x1, x1, #0x558
  402ba4:	ldr	w2, [x1, #20]
  402ba8:	ldr	x0, [x1, #56]
  402bac:	add	x0, x0, w2, uxtw #2
  402bb0:	add	w20, w2, w20
  402bb4:	str	w20, [x1, #20]
  402bb8:	ldp	x19, x20, [sp, #16]
  402bbc:	ldp	x29, x30, [sp], #48
  402bc0:	ret
  402bc4:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  402bc8:	ldr	x0, [x0, #1424]
  402bcc:	lsl	w2, w19, #2
  402bd0:	add	x1, x0, w1, uxtw #2
  402bd4:	bl	402270 <memmove@plt>
  402bd8:	b	402b34 <ferror@plt+0x264>
  402bdc:	str	x21, [sp, #32]
  402be0:	cmp	x1, #0x0
  402be4:	mov	x0, #0x400                 	// #1024
  402be8:	csel	x1, x1, x0, ne  // ne = any
  402bec:	add	x1, x19, x1
  402bf0:	lsl	x0, x1, #1
  402bf4:	adrp	x21, 488000 <_obstack_memory_used@@Base+0x41094>
  402bf8:	add	x21, x21, #0x558
  402bfc:	str	x0, [x21, #48]
  402c00:	lsl	x1, x1, #3
  402c04:	ldr	x0, [x21, #56]
  402c08:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  402c0c:	str	x0, [x21, #56]
  402c10:	ldr	x21, [sp, #32]
  402c14:	b	402b54 <ferror@plt+0x284>
  402c18:	ldr	w2, [x19, #20]
  402c1c:	add	w20, w20, w2
  402c20:	sub	w0, w20, w0
  402c24:	str	w0, [x19, #20]
  402c28:	str	wzr, [x19, #16]
  402c2c:	mov	x0, #0x0                   	// #0
  402c30:	b	402bb8 <ferror@plt+0x2e8>
  402c34:	mov	x0, #0x0                   	// #0
  402c38:	b	402bb8 <ferror@plt+0x2e8>
  402c3c:	stp	x29, x30, [sp, #-16]!
  402c40:	mov	x29, sp
  402c44:	mov	w0, #0x1                   	// #1
  402c48:	bl	402ae4 <ferror@plt+0x214>
  402c4c:	cbz	x0, 402c84 <ferror@plt+0x3b4>
  402c50:	ldr	w0, [x0]
  402c54:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x41094>
  402c58:	ldr	w3, [x1, #1408]
  402c5c:	ror	w1, w0, #16
  402c60:	lsl	w2, w1, #8
  402c64:	and	w2, w2, #0xff00ff00
  402c68:	lsr	w1, w1, #8
  402c6c:	and	w1, w1, #0xff00ff
  402c70:	orr	w1, w2, w1
  402c74:	cmp	w3, #0x0
  402c78:	csel	w0, w1, w0, ne  // ne = any
  402c7c:	ldp	x29, x30, [sp], #16
  402c80:	ret
  402c84:	mov	w0, #0x0                   	// #0
  402c88:	b	402c7c <ferror@plt+0x3ac>
  402c8c:	stp	x29, x30, [sp, #-32]!
  402c90:	mov	x29, sp
  402c94:	str	x19, [sp, #16]
  402c98:	bl	402c3c <ferror@plt+0x36c>
  402c9c:	mov	w19, w0
  402ca0:	bl	402c3c <ferror@plt+0x36c>
  402ca4:	mov	w2, w0
  402ca8:	mov	w1, w19
  402cac:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  402cb0:	add	x0, x0, #0xa10
  402cb4:	bl	402800 <printf@plt>
  402cb8:	ldr	x19, [sp, #16]
  402cbc:	ldp	x29, x30, [sp], #32
  402cc0:	ret
  402cc4:	stp	x29, x30, [sp, #-16]!
  402cc8:	mov	x29, sp
  402ccc:	bl	402c3c <ferror@plt+0x36c>
  402cd0:	mov	w1, w0
  402cd4:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  402cd8:	add	x0, x0, #0xa28
  402cdc:	bl	402800 <printf@plt>
  402ce0:	ldp	x29, x30, [sp], #16
  402ce4:	ret
  402ce8:	stp	x29, x30, [sp, #-16]!
  402cec:	mov	x29, sp
  402cf0:	bl	402c3c <ferror@plt+0x36c>
  402cf4:	mov	w1, w0
  402cf8:	mov	x0, #0x0                   	// #0
  402cfc:	cbz	w1, 402d08 <ferror@plt+0x438>
  402d00:	mov	w0, w1
  402d04:	bl	402ae4 <ferror@plt+0x214>
  402d08:	ldp	x29, x30, [sp], #16
  402d0c:	ret
  402d10:	stp	x29, x30, [sp, #-32]!
  402d14:	mov	x29, sp
  402d18:	str	x19, [sp, #16]
  402d1c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  402d20:	ldr	x0, [x0, #1376]
  402d24:	cbz	x0, 402d3c <ferror@plt+0x46c>
  402d28:	bl	4023c0 <fclose@plt>
  402d2c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  402d30:	add	x0, x0, #0x558
  402d34:	str	xzr, [x0, #8]
  402d38:	str	wzr, [x0, #24]
  402d3c:	adrp	x19, 488000 <_obstack_memory_used@@Base+0x41094>
  402d40:	add	x19, x19, #0x558
  402d44:	ldr	x0, [x19, #56]
  402d48:	bl	402690 <free@plt>
  402d4c:	str	xzr, [x19, #48]
  402d50:	str	xzr, [x19, #56]
  402d54:	str	wzr, [x19, #36]
  402d58:	ldr	w0, [x19, #32]
  402d5c:	ldr	x19, [sp, #16]
  402d60:	ldp	x29, x30, [sp], #32
  402d64:	ret
  402d68:	stp	x29, x30, [sp, #-96]!
  402d6c:	mov	x29, sp
  402d70:	stp	x23, x24, [sp, #48]
  402d74:	mov	x24, x0
  402d78:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  402d7c:	ldr	w0, [x0, #1432]
  402d80:	cbnz	w0, 402d90 <ferror@plt+0x4c0>
  402d84:	ldp	x23, x24, [sp, #48]
  402d88:	ldp	x29, x30, [sp], #96
  402d8c:	ret
  402d90:	stp	x19, x20, [sp, #16]
  402d94:	stp	x21, x22, [sp, #32]
  402d98:	stp	x25, x26, [sp, #64]
  402d9c:	stp	x27, x28, [sp, #80]
  402da0:	mov	w25, w3
  402da4:	bl	402c3c <ferror@plt+0x36c>
  402da8:	mov	w28, w0
  402dac:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  402db0:	ldr	w0, [x0, #1404]
  402db4:	cmp	w0, #0x0
  402db8:	b.le	402ddc <ferror@plt+0x50c>
  402dbc:	mov	x20, #0x0                   	// #0
  402dc0:	adrp	x21, 488000 <_obstack_memory_used@@Base+0x41094>
  402dc4:	add	x21, x21, #0x558
  402dc8:	adrp	x27, 457000 <_obstack_memory_used@@Base+0x10094>
  402dcc:	add	x27, x27, #0xa78
  402dd0:	adrp	x26, 458000 <_obstack_memory_used@@Base+0x11094>
  402dd4:	add	x26, x26, #0x710
  402dd8:	b	402e34 <ferror@plt+0x564>
  402ddc:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x10094>
  402de0:	add	x2, x2, #0xa48
  402de4:	mov	w1, #0x4a                  	// #74
  402de8:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  402dec:	add	x0, x0, #0xa58
  402df0:	bl	4062a0 <ferror@plt+0x39d0>
  402df4:	ldp	x19, x20, [sp, #16]
  402df8:	ldp	x21, x22, [sp, #32]
  402dfc:	ldp	x25, x26, [sp, #64]
  402e00:	ldp	x27, x28, [sp, #80]
  402e04:	b	402d84 <ferror@plt+0x4b4>
  402e08:	cbz	x20, 402e98 <ferror@plt+0x5c8>
  402e0c:	mov	w2, w19
  402e10:	mov	x1, x20
  402e14:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  402e18:	add	x0, x0, #0xa70
  402e1c:	bl	402800 <printf@plt>
  402e20:	adrp	x20, 457000 <_obstack_memory_used@@Base+0x10094>
  402e24:	add	x20, x20, #0xa38
  402e28:	ldr	w0, [x21, #36]
  402e2c:	cmp	w0, #0x0
  402e30:	b.le	402ddc <ferror@plt+0x50c>
  402e34:	ldr	w23, [x21, #16]
  402e38:	ldr	w22, [x21, #20]
  402e3c:	bl	402c3c <ferror@plt+0x36c>
  402e40:	mov	w19, w0
  402e44:	cbnz	w0, 402e08 <ferror@plt+0x538>
  402e48:	bl	402ce8 <ferror@plt+0x418>
  402e4c:	mov	x19, x0
  402e50:	cbz	x0, 402df4 <ferror@plt+0x524>
  402e54:	mov	w0, #0xa                   	// #10
  402e58:	bl	402830 <putchar@plt>
  402e5c:	add	w2, w23, w22
  402e60:	mov	w1, w25
  402e64:	mov	x0, x24
  402e68:	bl	402a7c <ferror@plt+0x1ac>
  402e6c:	mov	w1, w28
  402e70:	mov	x0, x27
  402e74:	bl	402800 <printf@plt>
  402e78:	mov	x2, x19
  402e7c:	mov	x1, x26
  402e80:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  402e84:	add	x0, x0, #0xa90
  402e88:	bl	402800 <printf@plt>
  402e8c:	adrp	x20, 457000 <_obstack_memory_used@@Base+0x10094>
  402e90:	add	x20, x20, #0xa40
  402e94:	b	402e28 <ferror@plt+0x558>
  402e98:	mov	w0, #0xa                   	// #10
  402e9c:	bl	402830 <putchar@plt>
  402ea0:	add	w2, w23, w22
  402ea4:	mov	w1, w25
  402ea8:	mov	x0, x24
  402eac:	bl	402a7c <ferror@plt+0x1ac>
  402eb0:	mov	w1, w28
  402eb4:	mov	x0, x27
  402eb8:	bl	402800 <printf@plt>
  402ebc:	mov	x20, x26
  402ec0:	b	402e0c <ferror@plt+0x53c>
  402ec4:	stp	x29, x30, [sp, #-80]!
  402ec8:	mov	x29, sp
  402ecc:	stp	x19, x20, [sp, #16]
  402ed0:	stp	x21, x22, [sp, #32]
  402ed4:	stp	x23, x24, [sp, #48]
  402ed8:	mov	x22, x0
  402edc:	mov	w19, w2
  402ee0:	mov	w23, w3
  402ee4:	lsr	w21, w2, #1
  402ee8:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  402eec:	add	x0, x0, #0xb0
  402ef0:	mov	w2, #0xfe5f0000            	// #-27328512
  402ef4:	add	w1, w1, w2
  402ef8:	lsr	w1, w1, #17
  402efc:	mov	w2, w21
  402f00:	add	x0, x0, #0x8
  402f04:	ldr	x1, [x0, x1, lsl #3]
  402f08:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  402f0c:	add	x0, x0, #0xa98
  402f10:	bl	402800 <printf@plt>
  402f14:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  402f18:	ldr	w0, [x0, #1432]
  402f1c:	cbz	w0, 402fa8 <ferror@plt+0x6d8>
  402f20:	cmp	w19, #0x1
  402f24:	b.ls	402fa8 <ferror@plt+0x6d8>  // b.plast
  402f28:	str	x25, [sp, #64]
  402f2c:	mov	w19, #0x0                   	// #0
  402f30:	mov	w25, #0xa                   	// #10
  402f34:	adrp	x20, 488000 <_obstack_memory_used@@Base+0x41094>
  402f38:	add	x20, x20, #0x558
  402f3c:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x10094>
  402f40:	add	x24, x24, #0xaa8
  402f44:	b	402fe0 <ferror@plt+0x710>
  402f48:	mov	w0, w25
  402f4c:	bl	402830 <putchar@plt>
  402f50:	ldr	w0, [x20, #36]
  402f54:	cmp	w0, #0x0
  402f58:	b.le	402f84 <ferror@plt+0x6b4>
  402f5c:	ldr	w2, [x20, #16]
  402f60:	ldr	w0, [x20, #20]
  402f64:	add	w2, w2, w0
  402f68:	mov	w1, w23
  402f6c:	mov	x0, x22
  402f70:	bl	402a7c <ferror@plt+0x1ac>
  402f74:	mov	w1, w19
  402f78:	mov	x0, x24
  402f7c:	bl	402800 <printf@plt>
  402f80:	b	402fe8 <ferror@plt+0x718>
  402f84:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x10094>
  402f88:	add	x2, x2, #0xa48
  402f8c:	mov	w1, #0x4a                  	// #74
  402f90:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  402f94:	add	x0, x0, #0xa58
  402f98:	bl	4062a0 <ferror@plt+0x39d0>
  402f9c:	mov	x1, #0x0                   	// #0
  402fa0:	b	402fc8 <ferror@plt+0x6f8>
  402fa4:	ldr	x25, [sp, #64]
  402fa8:	ldp	x19, x20, [sp, #16]
  402fac:	ldp	x21, x22, [sp, #32]
  402fb0:	ldp	x23, x24, [sp, #48]
  402fb4:	ldp	x29, x30, [sp], #80
  402fb8:	ret
  402fbc:	mov	w1, w1
  402fc0:	ldr	w0, [x0, #4]
  402fc4:	orr	x1, x1, x0, lsl #32
  402fc8:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  402fcc:	add	x0, x0, #0xac0
  402fd0:	bl	402800 <printf@plt>
  402fd4:	add	w19, w19, #0x1
  402fd8:	cmp	w21, w19
  402fdc:	b.eq	402fa4 <ferror@plt+0x6d4>  // b.none
  402fe0:	tst	x19, #0x7
  402fe4:	b.eq	402f48 <ferror@plt+0x678>  // b.none
  402fe8:	mov	w0, #0x2                   	// #2
  402fec:	bl	402ae4 <ferror@plt+0x214>
  402ff0:	cbz	x0, 402f9c <ferror@plt+0x6cc>
  402ff4:	ldr	w1, [x0]
  402ff8:	ldr	w2, [x20, #40]
  402ffc:	cbz	w2, 402fbc <ferror@plt+0x6ec>
  403000:	ror	w1, w1, #16
  403004:	lsl	w2, w1, #8
  403008:	and	w2, w2, #0xff00ff00
  40300c:	lsr	w1, w1, #8
  403010:	and	w1, w1, #0xff00ff
  403014:	orr	w1, w2, w1
  403018:	ldr	w2, [x0, #4]
  40301c:	ror	w2, w2, #16
  403020:	lsl	w0, w2, #8
  403024:	and	w0, w0, #0xff00ff00
  403028:	lsr	w2, w2, #8
  40302c:	and	w2, w2, #0xff00ff
  403030:	orr	w0, w0, w2
  403034:	b	402fc4 <ferror@plt+0x6f4>
  403038:	stp	x29, x30, [sp, #-96]!
  40303c:	mov	x29, sp
  403040:	stp	x19, x20, [sp, #16]
  403044:	stp	x21, x22, [sp, #32]
  403048:	stp	x23, x24, [sp, #48]
  40304c:	mov	x23, x0
  403050:	mov	w24, w3
  403054:	sub	w19, w2, #0x1
  403058:	lsr	w22, w19, #1
  40305c:	mov	w1, w22
  403060:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  403064:	add	x0, x0, #0xac8
  403068:	bl	402800 <printf@plt>
  40306c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  403070:	ldr	w0, [x0, #1432]
  403074:	cbnz	w0, 40308c <ferror@plt+0x7bc>
  403078:	ldp	x19, x20, [sp, #16]
  40307c:	ldp	x21, x22, [sp, #32]
  403080:	ldp	x23, x24, [sp, #48]
  403084:	ldp	x29, x30, [sp], #96
  403088:	ret
  40308c:	stp	x25, x26, [sp, #64]
  403090:	bl	402c3c <ferror@plt+0x36c>
  403094:	mov	w26, w0
  403098:	cmp	w19, #0x1
  40309c:	b.ls	4031ac <ferror@plt+0x8dc>  // b.plast
  4030a0:	stp	x27, x28, [sp, #80]
  4030a4:	mov	w20, #0x0                   	// #0
  4030a8:	mov	w28, #0xa                   	// #10
  4030ac:	adrp	x25, 488000 <_obstack_memory_used@@Base+0x41094>
  4030b0:	add	x25, x25, #0x558
  4030b4:	adrp	x27, 457000 <_obstack_memory_used@@Base+0x10094>
  4030b8:	add	x27, x27, #0xa78
  4030bc:	b	40315c <ferror@plt+0x88c>
  4030c0:	mov	w0, w28
  4030c4:	bl	402830 <putchar@plt>
  4030c8:	ldr	w0, [x25, #36]
  4030cc:	cmp	w0, #0x0
  4030d0:	b.le	4030fc <ferror@plt+0x82c>
  4030d4:	ldr	w2, [x25, #16]
  4030d8:	ldr	w0, [x25, #20]
  4030dc:	add	w2, w2, w0
  4030e0:	mov	w1, w24
  4030e4:	mov	x0, x23
  4030e8:	bl	402a7c <ferror@plt+0x1ac>
  4030ec:	mov	w1, w26
  4030f0:	mov	x0, x27
  4030f4:	bl	402800 <printf@plt>
  4030f8:	b	403164 <ferror@plt+0x894>
  4030fc:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x10094>
  403100:	add	x2, x2, #0xa48
  403104:	mov	w1, #0x4a                  	// #74
  403108:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  40310c:	add	x0, x0, #0xa58
  403110:	bl	4062a0 <ferror@plt+0x39d0>
  403114:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  403118:	add	x0, x0, #0xae8
  40311c:	bl	402800 <printf@plt>
  403120:	mov	w1, #0x2c                  	// #44
  403124:	b	403194 <ferror@plt+0x8c4>
  403128:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  40312c:	add	x0, x0, #0xaf0
  403130:	bl	402800 <printf@plt>
  403134:	mov	w1, #0x2c                  	// #44
  403138:	b	403198 <ferror@plt+0x8c8>
  40313c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  403140:	add	x0, x0, #0xaf8
  403144:	bl	402800 <printf@plt>
  403148:	mov	w0, #0x29                  	// #41
  40314c:	bl	402830 <putchar@plt>
  403150:	add	w20, w20, #0x1
  403154:	cmp	w22, w20
  403158:	b.eq	4031a0 <ferror@plt+0x8d0>  // b.none
  40315c:	tst	x20, #0x3
  403160:	b.eq	4030c0 <ferror@plt+0x7f0>  // b.none
  403164:	bl	402c3c <ferror@plt+0x36c>
  403168:	mov	w21, w0
  40316c:	bl	402c3c <ferror@plt+0x36c>
  403170:	mov	w19, w0
  403174:	mov	w2, w0
  403178:	mov	w1, w21
  40317c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  403180:	add	x0, x0, #0xad8
  403184:	bl	402800 <printf@plt>
  403188:	cbz	w19, 403150 <ferror@plt+0x880>
  40318c:	mov	w1, #0x28                  	// #40
  403190:	tbnz	w19, #0, 403114 <ferror@plt+0x844>
  403194:	tbnz	w19, #1, 403128 <ferror@plt+0x858>
  403198:	tbz	w19, #2, 403148 <ferror@plt+0x878>
  40319c:	b	40313c <ferror@plt+0x86c>
  4031a0:	ldp	x25, x26, [sp, #64]
  4031a4:	ldp	x27, x28, [sp, #80]
  4031a8:	b	403078 <ferror@plt+0x7a8>
  4031ac:	ldp	x25, x26, [sp, #64]
  4031b0:	b	403078 <ferror@plt+0x7a8>
  4031b4:	stp	x29, x30, [sp, #-48]!
  4031b8:	mov	x29, sp
  4031bc:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  4031c0:	ldr	w0, [x0, #1404]
  4031c4:	cmp	w0, #0x0
  4031c8:	b.le	4031f0 <ferror@plt+0x920>
  4031cc:	stp	x19, x20, [sp, #16]
  4031d0:	mov	w19, w2
  4031d4:	cbnz	w2, 403210 <ferror@plt+0x940>
  4031d8:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  4031dc:	add	x0, x0, #0xb08
  4031e0:	bl	402800 <printf@plt>
  4031e4:	ldp	x19, x20, [sp, #16]
  4031e8:	ldp	x29, x30, [sp], #48
  4031ec:	ret
  4031f0:	stp	x19, x20, [sp, #16]
  4031f4:	stp	x21, x22, [sp, #32]
  4031f8:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x10094>
  4031fc:	add	x2, x2, #0xa48
  403200:	mov	w1, #0x4a                  	// #74
  403204:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  403208:	add	x0, x0, #0xa58
  40320c:	bl	4062a0 <ferror@plt+0x39d0>
  403210:	stp	x21, x22, [sp, #32]
  403214:	adrp	x20, 488000 <_obstack_memory_used@@Base+0x41094>
  403218:	add	x20, x20, #0x558
  40321c:	ldr	w21, [x20, #16]
  403220:	ldr	w22, [x20, #20]
  403224:	bl	402c3c <ferror@plt+0x36c>
  403228:	mov	w1, w0
  40322c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  403230:	add	x0, x0, #0xb18
  403234:	bl	402800 <printf@plt>
  403238:	bl	402c3c <ferror@plt+0x36c>
  40323c:	mov	w1, w0
  403240:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  403244:	add	x0, x0, #0xb28
  403248:	bl	402800 <printf@plt>
  40324c:	bl	402c3c <ferror@plt+0x36c>
  403250:	mov	w1, w0
  403254:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  403258:	add	x0, x0, #0xb48
  40325c:	bl	402800 <printf@plt>
  403260:	ldr	w0, [x20, #36]
  403264:	cmp	w0, #0x0
  403268:	b.le	40329c <ferror@plt+0x9cc>
  40326c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  403270:	add	x0, x0, #0x558
  403274:	ldr	w1, [x0, #16]
  403278:	add	x0, x0, #0x8
  40327c:	ldr	w0, [x0, #12]
  403280:	add	w0, w1, w0
  403284:	add	w21, w21, w22
  403288:	sub	x0, x0, x21
  40328c:	cmp	x0, w19, uxtw
  403290:	b.cc	4032b4 <ferror@plt+0x9e4>  // b.lo, b.ul, b.last
  403294:	ldp	x21, x22, [sp, #32]
  403298:	b	4031e4 <ferror@plt+0x914>
  40329c:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x10094>
  4032a0:	add	x2, x2, #0xa48
  4032a4:	mov	w1, #0x4a                  	// #74
  4032a8:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  4032ac:	add	x0, x0, #0xa58
  4032b0:	bl	4062a0 <ferror@plt+0x39d0>
  4032b4:	bl	402ce8 <ferror@plt+0x418>
  4032b8:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x10094>
  4032bc:	add	x1, x1, #0xb00
  4032c0:	cmp	x0, #0x0
  4032c4:	csel	x1, x1, x0, eq  // eq = none
  4032c8:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  4032cc:	add	x0, x0, #0xb60
  4032d0:	bl	402800 <printf@plt>
  4032d4:	bl	402c3c <ferror@plt+0x36c>
  4032d8:	mov	w19, w0
  4032dc:	bl	402ce8 <ferror@plt+0x418>
  4032e0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x10094>
  4032e4:	add	x1, x1, #0xb00
  4032e8:	cmp	x0, #0x0
  4032ec:	csel	x1, x1, x0, eq  // eq = none
  4032f0:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  4032f4:	add	x0, x0, #0xe48
  4032f8:	bl	402800 <printf@plt>
  4032fc:	bl	402c3c <ferror@plt+0x36c>
  403300:	mov	w20, w0
  403304:	bl	402c3c <ferror@plt+0x36c>
  403308:	mov	w21, w0
  40330c:	bl	402c3c <ferror@plt+0x36c>
  403310:	mov	w22, w0
  403314:	bl	402c3c <ferror@plt+0x36c>
  403318:	mov	w4, w0
  40331c:	mov	w3, w22
  403320:	mov	w2, w21
  403324:	mov	w1, w20
  403328:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  40332c:	add	x0, x0, #0xb68
  403330:	bl	402800 <printf@plt>
  403334:	cbnz	w19, 403340 <ferror@plt+0xa70>
  403338:	ldp	x21, x22, [sp, #32]
  40333c:	b	4031e4 <ferror@plt+0x914>
  403340:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  403344:	add	x0, x0, #0xb78
  403348:	bl	402800 <printf@plt>
  40334c:	ldp	x21, x22, [sp, #32]
  403350:	b	4031e4 <ferror@plt+0x914>
  403354:	stp	x29, x30, [sp, #-96]!
  403358:	mov	x29, sp
  40335c:	stp	x19, x20, [sp, #16]
  403360:	stp	x21, x22, [sp, #32]
  403364:	stp	x23, x24, [sp, #48]
  403368:	stp	x25, x26, [sp, #64]
  40336c:	stp	x27, x28, [sp, #80]
  403370:	mov	x21, x0
  403374:	bl	4022b0 <strlen@plt>
  403378:	add	x0, x0, #0x1
  40337c:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  403380:	mov	x24, x0
  403384:	mov	x23, x0
  403388:	mov	w27, #0x5e                  	// #94
  40338c:	mov	x26, #0x0                   	// #0
  403390:	mov	x25, #0x2                   	// #2
  403394:	mov	w28, #0x23                  	// #35
  403398:	b	4033c4 <ferror@plt+0xaf4>
  40339c:	mov	x20, x21
  4033a0:	mov	w19, w0
  4033a4:	mov	x22, x26
  4033a8:	mov	x2, x22
  4033ac:	mov	x1, x21
  4033b0:	mov	x0, x23
  4033b4:	bl	402260 <memcpy@plt>
  4033b8:	add	x23, x23, x22
  4033bc:	mov	x21, x20
  4033c0:	cbnz	w19, 403414 <ferror@plt+0xb44>
  4033c4:	ldrb	w0, [x21]
  4033c8:	cbz	w0, 403420 <ferror@plt+0xb50>
  4033cc:	cmp	w0, #0x2f
  4033d0:	b.eq	40339c <ferror@plt+0xacc>  // b.none
  4033d4:	mov	x20, x21
  4033d8:	ldrb	w19, [x20, #1]!
  4033dc:	cmp	w19, #0x2f
  4033e0:	ccmp	w19, #0x0, #0x4, ne  // ne = any
  4033e4:	b.ne	4033d8 <ferror@plt+0xb08>  // b.any
  4033e8:	sub	x22, x20, x21
  4033ec:	cmp	w0, #0x2e
  4033f0:	ccmp	x22, #0x2, #0x0, eq  // eq = none
  4033f4:	b.ne	4033a8 <ferror@plt+0xad8>  // b.any
  4033f8:	ldrb	w0, [x21, #1]
  4033fc:	mov	x22, x25
  403400:	cmp	w0, #0x2e
  403404:	b.ne	4033a8 <ferror@plt+0xad8>  // b.any
  403408:	strb	w27, [x23], #1
  40340c:	mov	x21, x20
  403410:	b	4033c0 <ferror@plt+0xaf0>
  403414:	strb	w28, [x23], #1
  403418:	add	x21, x21, #0x1
  40341c:	b	4033c4 <ferror@plt+0xaf4>
  403420:	strb	wzr, [x23]
  403424:	mov	x0, x24
  403428:	ldp	x19, x20, [sp, #16]
  40342c:	ldp	x21, x22, [sp, #32]
  403430:	ldp	x23, x24, [sp, #48]
  403434:	ldp	x25, x26, [sp, #64]
  403438:	ldp	x27, x28, [sp, #80]
  40343c:	ldp	x29, x30, [sp], #96
  403440:	ret
  403444:	stp	x29, x30, [sp, #-176]!
  403448:	mov	x29, sp
  40344c:	stp	x19, x20, [sp, #16]
  403450:	stp	x21, x22, [sp, #32]
  403454:	stp	x23, x24, [sp, #48]
  403458:	stp	x27, x28, [sp, #80]
  40345c:	mov	w21, w0
  403460:	mov	x28, x1
  403464:	ldr	x19, [x1]
  403468:	mov	x0, x19
  40346c:	bl	4022b0 <strlen@plt>
  403470:	add	x0, x19, x0
  403474:	cmp	x19, x0
  403478:	b.eq	403494 <ferror@plt+0xbc4>  // b.none
  40347c:	ldurb	w1, [x0, #-1]
  403480:	cmp	w1, #0x2f
  403484:	b.eq	403494 <ferror@plt+0xbc4>  // b.none
  403488:	sub	x0, x0, #0x1
  40348c:	cmp	x19, x0
  403490:	b.ne	40347c <ferror@plt+0xbac>  // b.any
  403494:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x41094>
  403498:	str	x0, [x1, #1504]
  40349c:	bl	446f98 <_obstack_memory_used@@Base+0x2c>
  4034a0:	bl	445a50 <ferror@plt+0x43180>
  4034a4:	bl	40f3d8 <ferror@plt+0xcb08>
  4034a8:	mov	w1, #0x0                   	// #0
  4034ac:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  4034b0:	ldr	x0, [x0, #848]
  4034b4:	bl	404780 <ferror@plt+0x1eb0>
  4034b8:	adrp	x19, 458000 <_obstack_memory_used@@Base+0x11094>
  4034bc:	add	x19, x19, #0xb0
  4034c0:	add	x19, x19, #0x128
  4034c4:	adrp	x20, 457000 <_obstack_memory_used@@Base+0x10094>
  4034c8:	add	x20, x20, #0xbe8
  4034cc:	adrp	x24, 488000 <_obstack_memory_used@@Base+0x41094>
  4034d0:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x10094>
  4034d4:	add	x22, x22, #0xe08
  4034d8:	b	4035b4 <ferror@plt+0xce4>
  4034dc:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  4034e0:	ldr	w0, [x0, #1328]
  4034e4:	add	x1, x28, w0, sxtw #3
  4034e8:	ldr	x2, [x28, w0, sxtw #3]
  4034ec:	cbz	x2, 403c80 <ferror@plt+0x13b0>
  4034f0:	stp	x25, x26, [sp, #64]
  4034f4:	adrp	x2, 488000 <_obstack_memory_used@@Base+0x41094>
  4034f8:	add	x2, x2, #0x530
  4034fc:	str	x2, [sp, #104]
  403500:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  403504:	add	x2, x2, #0xb0
  403508:	str	x2, [sp, #112]
  40350c:	add	x2, x2, #0x50
  403510:	str	x2, [sp, #120]
  403514:	b	403a4c <ferror@plt+0x117c>
  403518:	cmp	w0, #0x76
  40351c:	b.ne	403610 <ferror@plt+0xd40>  // b.any
  403520:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  403524:	add	x2, x2, #0xcb8
  403528:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  40352c:	add	x1, x1, #0xcb0
  403530:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  403534:	add	x0, x0, #0xd28
  403538:	bl	402800 <printf@plt>
  40353c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  403540:	add	x0, x0, #0xd38
  403544:	bl	4025c0 <puts@plt>
  403548:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  40354c:	add	x0, x0, #0xd70
  403550:	bl	4025c0 <puts@plt>
  403554:	b	4035b4 <ferror@plt+0xce4>
  403558:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  40355c:	add	x0, x0, #0xbf0
  403560:	bl	4025c0 <puts@plt>
  403564:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  403568:	add	x0, x0, #0xc18
  40356c:	bl	4025c0 <puts@plt>
  403570:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  403574:	add	x0, x0, #0xc38
  403578:	bl	4025c0 <puts@plt>
  40357c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  403580:	add	x0, x0, #0xc60
  403584:	bl	4025c0 <puts@plt>
  403588:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  40358c:	add	x0, x0, #0xc90
  403590:	bl	4025c0 <puts@plt>
  403594:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  403598:	add	x0, x0, #0xcc0
  40359c:	bl	4025c0 <puts@plt>
  4035a0:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  4035a4:	add	x1, x1, #0xcc0
  4035a8:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  4035ac:	add	x0, x0, #0xcf0
  4035b0:	bl	402800 <printf@plt>
  4035b4:	mov	x4, #0x0                   	// #0
  4035b8:	mov	x3, x19
  4035bc:	mov	x2, x20
  4035c0:	mov	x1, x28
  4035c4:	mov	w0, w21
  4035c8:	bl	402610 <getopt_long@plt>
  4035cc:	mov	w23, w0
  4035d0:	cmn	w0, #0x1
  4035d4:	b.eq	4034dc <ferror@plt+0xc0c>  // b.none
  4035d8:	cmp	w0, #0x70
  4035dc:	b.eq	403604 <ferror@plt+0xd34>  // b.none
  4035e0:	b.gt	403518 <ferror@plt+0xc48>
  4035e4:	cmp	w0, #0x68
  4035e8:	b.eq	403558 <ferror@plt+0xc88>  // b.none
  4035ec:	cmp	w0, #0x6c
  4035f0:	b.ne	403610 <ferror@plt+0xd40>  // b.any
  4035f4:	add	x0, x24, #0x558
  4035f8:	mov	w1, #0x1                   	// #1
  4035fc:	str	w1, [x0, #64]
  403600:	b	4035b4 <ferror@plt+0xce4>
  403604:	mov	w0, #0x1                   	// #1
  403608:	str	w0, [x24, #1368]
  40360c:	b	4035b4 <ferror@plt+0xce4>
  403610:	mov	w2, w23
  403614:	mov	x1, x22
  403618:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  40361c:	ldr	x0, [x0, #1320]
  403620:	bl	402890 <fprintf@plt>
  403624:	b	4035b4 <ferror@plt+0xce4>
  403628:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x10094>
  40362c:	add	x2, x2, #0xe20
  403630:	mov	w1, #0x8e                  	// #142
  403634:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  403638:	add	x0, x0, #0xa58
  40363c:	bl	4062a0 <ferror@plt+0x39d0>
  403640:	mov	w0, w19
  403644:	bl	402540 <close@plt>
  403648:	mov	x2, x25
  40364c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x10094>
  403650:	add	x1, x1, #0xfb8
  403654:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  403658:	ldr	x0, [x0, #1320]
  40365c:	bl	402890 <fprintf@plt>
  403660:	b	403a38 <ferror@plt+0x1168>
  403664:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  403668:	mov	w1, #0x1                   	// #1
  40366c:	str	w1, [x0, #1408]
  403670:	mov	w22, w23
  403674:	b	403bb4 <ferror@plt+0x12e4>
  403678:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  40367c:	mov	w1, #0x1                   	// #1
  403680:	str	w1, [x0, #1408]
  403684:	mov	w22, w23
  403688:	b	403ba8 <ferror@plt+0x12d8>
  40368c:	mov	w0, #0x41                  	// #65
  403690:	strb	w0, [sp, #144]
  403694:	mov	w0, #0x39                  	// #57
  403698:	strb	w0, [sp, #145]
  40369c:	mov	w0, #0x32                  	// #50
  4036a0:	strb	w0, [sp, #146]
  4036a4:	mov	w0, #0x2a                  	// #42
  4036a8:	strb	w0, [sp, #147]
  4036ac:	add	x2, sp, #0x90
  4036b0:	mov	x1, x25
  4036b4:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  4036b8:	add	x0, x0, #0xe60
  4036bc:	bl	402800 <printf@plt>
  4036c0:	b	403c50 <ferror@plt+0x1380>
  4036c4:	bl	402ce8 <ferror@plt+0x418>
  4036c8:	mov	x2, x0
  4036cc:	mov	x1, x25
  4036d0:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  4036d4:	add	x0, x0, #0xe98
  4036d8:	bl	402800 <printf@plt>
  4036dc:	bl	402c3c <ferror@plt+0x36c>
  4036e0:	cbnz	w0, 403c6c <ferror@plt+0x139c>
  4036e4:	mov	x1, x25
  4036e8:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  4036ec:	add	x0, x0, #0xea8
  4036f0:	bl	402800 <printf@plt>
  4036f4:	b	403c6c <ferror@plt+0x139c>
  4036f8:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x10094>
  4036fc:	add	x2, x2, #0xa48
  403700:	mov	w1, #0x4a                  	// #74
  403704:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  403708:	add	x0, x0, #0xa58
  40370c:	bl	4062a0 <ferror@plt+0x39d0>
  403710:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x10094>
  403714:	add	x2, x2, #0xa48
  403718:	mov	w1, #0x4a                  	// #74
  40371c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  403720:	add	x0, x0, #0xa58
  403724:	bl	4062a0 <ferror@plt+0x39d0>
  403728:	mov	w24, #0x4                   	// #4
  40372c:	b	403964 <ferror@plt+0x1094>
  403730:	mov	w24, #0x4                   	// #4
  403734:	b	403978 <ferror@plt+0x10a8>
  403738:	mov	w20, #0x1                   	// #1
  40373c:	tst	w21, #0xffff
  403740:	b.ne	40375c <ferror@plt+0xe8c>  // b.any
  403744:	mov	w0, #0xfe5f0000            	// #-27328512
  403748:	add	w0, w21, w0
  40374c:	lsr	w0, w0, #17
  403750:	cmp	w0, #0x9
  403754:	cset	w20, cc  // cc = lo, ul, last
  403758:	add	w20, w20, #0x1
  40375c:	sbfiz	x0, x20, #1, #32
  403760:	add	x20, x0, w20, sxtw
  403764:	ldr	x0, [sp, #120]
  403768:	add	x20, x0, x20, lsl #3
  40376c:	cmp	w27, #0x0
  403770:	ccmp	w27, w24, #0x2, ne  // ne = any
  403774:	b.cs	4037bc <ferror@plt+0xeec>  // b.hs, b.nlast
  403778:	sub	w27, w27, #0x1
  40377c:	add	x0, sp, #0x90
  403780:	ldr	w0, [x0, x27, lsl #2]
  403784:	sub	w1, w0, #0x1
  403788:	eor	w1, w1, w0
  40378c:	cmp	w26, w1, lsr #8
  403790:	b.ne	4037a8 <ferror@plt+0xed8>  // b.any
  403794:	neg	w1, w0
  403798:	eor	w1, w1, w0
  40379c:	eor	w0, w21, w0
  4037a0:	tst	w1, w0
  4037a4:	b.eq	4037bc <ferror@plt+0xeec>  // b.none
  4037a8:	mov	w2, w21
  4037ac:	mov	x1, x25
  4037b0:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  4037b4:	add	x0, x0, #0xef8
  4037b8:	bl	402800 <printf@plt>
  4037bc:	sub	w0, w24, #0x1
  4037c0:	add	x1, sp, #0x90
  4037c4:	str	w21, [x1, x0, lsl #2]
  4037c8:	ldr	w2, [sp, #100]
  4037cc:	mov	w1, w24
  4037d0:	mov	x0, x25
  4037d4:	bl	402a7c <ferror@plt+0x1ac>
  4037d8:	ldr	x3, [x20, #8]
  4037dc:	mov	w2, w22
  4037e0:	mov	w1, w21
  4037e4:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  4037e8:	add	x0, x0, #0xf20
  4037ec:	bl	402800 <printf@plt>
  4037f0:	ldr	x4, [x20, #16]
  4037f4:	cbz	x4, 40380c <ferror@plt+0xf3c>
  4037f8:	mov	w3, w24
  4037fc:	mov	w2, w22
  403800:	mov	w1, w21
  403804:	mov	x0, x25
  403808:	blr	x4
  40380c:	mov	w0, #0xa                   	// #10
  403810:	bl	402830 <putchar@plt>
  403814:	ldr	w0, [x19, #64]
  403818:	cbz	w0, 40389c <ferror@plt+0xfcc>
  40381c:	ldr	x0, [x20, #16]
  403820:	cbz	x0, 40389c <ferror@plt+0xfcc>
  403824:	ldr	w0, [x19, #36]
  403828:	cmp	w0, #0x0
  40382c:	b.le	403870 <ferror@plt+0xfa0>
  403830:	ldr	w2, [x19, #16]
  403834:	ldr	w0, [x19, #20]
  403838:	add	w2, w2, w0
  40383c:	ldr	w1, [sp, #96]
  403840:	sub	w0, w2, w1
  403844:	sub	w2, w2, w1
  403848:	mov	w1, w22
  40384c:	cmp	w22, w0
  403850:	b.cc	403888 <ferror@plt+0xfb8>  // b.lo, b.ul, b.last
  403854:	b.ls	4038a8 <ferror@plt+0xfd8>  // b.plast
  403858:	sub	x2, x1, x2
  40385c:	mov	x1, x25
  403860:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  403864:	add	x0, x0, #0xf60
  403868:	bl	402800 <printf@plt>
  40386c:	b	40389c <ferror@plt+0xfcc>
  403870:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x10094>
  403874:	add	x2, x2, #0xa48
  403878:	mov	w1, #0x4a                  	// #74
  40387c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  403880:	add	x0, x0, #0xa58
  403884:	bl	4062a0 <ferror@plt+0x39d0>
  403888:	sub	x2, x2, x1
  40388c:	mov	x1, x25
  403890:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  403894:	add	x0, x0, #0xf30
  403898:	bl	402800 <printf@plt>
  40389c:	ldr	w0, [x19, #36]
  4038a0:	cmp	w0, #0x0
  4038a4:	b.le	40399c <ferror@plt+0x10cc>
  4038a8:	ldr	w0, [sp, #96]
  4038ac:	add	w22, w22, w0
  4038b0:	ldr	w0, [x19, #16]
  4038b4:	sub	w0, w22, w0
  4038b8:	ldr	w1, [x19, #24]
  4038bc:	cmp	w0, w1
  4038c0:	b.hi	4039b4 <ferror@plt+0x10e4>  // b.pmore
  4038c4:	str	w0, [x19, #20]
  4038c8:	ldr	x0, [x19, #8]
  4038cc:	cbz	x0, 4039fc <ferror@plt+0x112c>
  4038d0:	ldr	w0, [x19, #32]
  4038d4:	cbnz	w0, 4039e0 <ferror@plt+0x1110>
  4038d8:	mov	w27, w24
  4038dc:	ldr	w0, [x19, #36]
  4038e0:	cmp	w0, #0x0
  4038e4:	b.le	4036f8 <ferror@plt+0xe28>
  4038e8:	ldr	w1, [x19, #16]
  4038ec:	ldr	w0, [x19, #20]
  4038f0:	add	w0, w1, w0
  4038f4:	str	w0, [sp, #100]
  4038f8:	bl	402c3c <ferror@plt+0x36c>
  4038fc:	mov	w21, w0
  403900:	cbz	w0, 403a34 <ferror@plt+0x1164>
  403904:	bl	402c3c <ferror@plt+0x36c>
  403908:	mov	w22, w0
  40390c:	ldr	w0, [x19, #36]
  403910:	cmp	w0, #0x0
  403914:	b.le	403710 <ferror@plt+0xe40>
  403918:	ldr	w2, [x19, #16]
  40391c:	ldr	w1, [x19, #20]
  403920:	add	w0, w2, w1
  403924:	str	w0, [sp, #96]
  403928:	sub	w26, w21, #0x1
  40392c:	eor	w26, w26, w21
  403930:	lsr	w0, w26, #1
  403934:	cmp	wzr, w26, lsr #1
  403938:	b.eq	403730 <ferror@plt+0xe60>  // b.none
  40393c:	and	w1, w0, #0xff
  403940:	cmp	w1, #0xff
  403944:	b.ne	403728 <ferror@plt+0xe58>  // b.any
  403948:	mov	w24, #0x4                   	// #4
  40394c:	sub	w24, w24, #0x1
  403950:	lsr	w0, w0, #8
  403954:	cbz	w0, 403978 <ferror@plt+0x10a8>
  403958:	and	w1, w0, #0xff
  40395c:	cmp	w1, #0xff
  403960:	b.eq	40394c <ferror@plt+0x107c>  // b.none
  403964:	mov	w2, w21
  403968:	mov	x1, x25
  40396c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  403970:	add	x0, x0, #0xed8
  403974:	bl	402800 <printf@plt>
  403978:	ldr	x0, [sp, #112]
  40397c:	add	x20, x0, #0x50
  403980:	add	x20, x20, #0x18
  403984:	ldr	x0, [x20, #8]
  403988:	cbz	x0, 403738 <ferror@plt+0xe68>
  40398c:	ldr	w0, [x20]
  403990:	cmp	w21, w0
  403994:	b.ne	403980 <ferror@plt+0x10b0>  // b.any
  403998:	b	40376c <ferror@plt+0xe9c>
  40399c:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x10094>
  4039a0:	add	x2, x2, #0xf90
  4039a4:	mov	w1, #0x271                 	// #625
  4039a8:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  4039ac:	add	x0, x0, #0xa58
  4039b0:	bl	4062a0 <ferror@plt+0x39d0>
  4039b4:	str	wzr, [x19, #24]
  4039b8:	str	wzr, [x19, #20]
  4039bc:	mov	w2, #0x0                   	// #0
  4039c0:	lsl	w1, w22, #2
  4039c4:	ldr	x0, [x19, #8]
  4039c8:	bl	402580 <fseek@plt>
  4039cc:	ldr	x0, [x19, #8]
  4039d0:	bl	402340 <ftell@plt>
  4039d4:	asr	x0, x0, #2
  4039d8:	str	w0, [x19, #16]
  4039dc:	b	4038c8 <ferror@plt+0xff8>
  4039e0:	tbz	w0, #31, 4039f0 <ferror@plt+0x1120>
  4039e4:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  4039e8:	add	x0, x0, #0xbb0
  4039ec:	b	403a04 <ferror@plt+0x1134>
  4039f0:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  4039f4:	add	x0, x0, #0xbd0
  4039f8:	b	403a04 <ferror@plt+0x1134>
  4039fc:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  403a00:	add	x0, x0, #0xbd0
  403a04:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x41094>
  403a08:	ldr	w1, [x1, #1404]
  403a0c:	cmp	w1, #0x0
  403a10:	b.le	403b8c <ferror@plt+0x12bc>
  403a14:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x41094>
  403a18:	add	x1, x1, #0x558
  403a1c:	ldr	w2, [x1, #16]
  403a20:	add	x1, x1, #0x8
  403a24:	ldr	w1, [x1, #12]
  403a28:	add	w2, w2, w1
  403a2c:	mov	x1, x25
  403a30:	bl	402800 <printf@plt>
  403a34:	bl	402d10 <ferror@plt+0x440>
  403a38:	ldr	x0, [sp, #104]
  403a3c:	ldr	w0, [x0]
  403a40:	add	x1, x28, w0, sxtw #3
  403a44:	ldr	x2, [x28, w0, sxtw #3]
  403a48:	cbz	x2, 403c7c <ferror@plt+0x13ac>
  403a4c:	add	w0, w0, #0x1
  403a50:	ldr	x2, [sp, #104]
  403a54:	str	w0, [x2]
  403a58:	ldr	x25, [x1]
  403a5c:	strh	wzr, [sp, #146]
  403a60:	str	xzr, [sp, #152]
  403a64:	str	xzr, [sp, #160]
  403a68:	bl	4023d0 <getpid@plt>
  403a6c:	str	w0, [sp, #168]
  403a70:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  403a74:	ldr	x0, [x0, #1376]
  403a78:	cbnz	x0, 403628 <ferror@plt+0xd58>
  403a7c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  403a80:	add	x0, x0, #0x558
  403a84:	str	wzr, [x0, #16]
  403a88:	str	wzr, [x0, #24]
  403a8c:	str	wzr, [x0, #20]
  403a90:	mov	w1, #0xffffffff            	// #-1
  403a94:	str	w1, [x0, #28]
  403a98:	str	wzr, [x0, #32]
  403a9c:	str	wzr, [x0, #40]
  403aa0:	strh	wzr, [sp, #144]
  403aa4:	mov	w2, #0x180                 	// #384
  403aa8:	mov	w1, #0x0                   	// #0
  403aac:	mov	x0, x25
  403ab0:	bl	402420 <open@plt>
  403ab4:	mov	w19, w0
  403ab8:	tbnz	w0, #31, 403648 <ferror@plt+0xd78>
  403abc:	mov	w20, #0x7                   	// #7
  403ac0:	add	x2, sp, #0x90
  403ac4:	mov	w1, w20
  403ac8:	mov	w0, w19
  403acc:	bl	4026e0 <fcntl@plt>
  403ad0:	cbz	w0, 403ae4 <ferror@plt+0x1214>
  403ad4:	bl	402810 <__errno_location@plt>
  403ad8:	ldr	w0, [x0]
  403adc:	cmp	w0, #0x4
  403ae0:	b.eq	403ac0 <ferror@plt+0x11f0>  // b.none
  403ae4:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x10094>
  403ae8:	add	x1, x1, #0xe30
  403aec:	mov	w0, w19
  403af0:	bl	445acc <ferror@plt+0x431fc>
  403af4:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x41094>
  403af8:	str	x0, [x1, #1376]
  403afc:	cbz	x0, 403640 <ferror@plt+0xd70>
  403b00:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x41094>
  403b04:	mov	w2, #0x1                   	// #1
  403b08:	str	w2, [x1, #1404]
  403b0c:	mov	x1, #0x0                   	// #0
  403b10:	bl	402320 <setbuf@plt>
  403b14:	bl	402c3c <ferror@plt+0x36c>
  403b18:	mov	w19, w0
  403b1c:	mov	w0, #0x6461                	// #25697
  403b20:	movk	w0, #0x6763, lsl #16
  403b24:	cmp	w19, w0
  403b28:	b.eq	403bb0 <ferror@plt+0x12e0>  // b.none
  403b2c:	ror	w0, w19, #16
  403b30:	lsl	w1, w0, #8
  403b34:	and	w1, w1, #0xff00ff00
  403b38:	lsr	w0, w0, #8
  403b3c:	and	w0, w0, #0xff00ff
  403b40:	orr	w0, w1, w0
  403b44:	mov	w1, #0x6461                	// #25697
  403b48:	movk	w1, #0x6763, lsl #16
  403b4c:	cmp	w0, w1
  403b50:	b.eq	403664 <ferror@plt+0xd94>  // b.none
  403b54:	mov	w1, #0x6e6f                	// #28271
  403b58:	movk	w1, #0x6763, lsl #16
  403b5c:	cmp	w19, w1
  403b60:	b.eq	403ba4 <ferror@plt+0x12d4>  // b.none
  403b64:	mov	w1, #0x6e6f                	// #28271
  403b68:	movk	w1, #0x6763, lsl #16
  403b6c:	cmp	w0, w1
  403b70:	b.eq	403678 <ferror@plt+0xda8>  // b.none
  403b74:	mov	x1, x25
  403b78:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  403b7c:	add	x0, x0, #0xfa0
  403b80:	bl	402800 <printf@plt>
  403b84:	bl	402d10 <ferror@plt+0x440>
  403b88:	b	403a38 <ferror@plt+0x1168>
  403b8c:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x10094>
  403b90:	add	x2, x2, #0xa48
  403b94:	mov	w1, #0x4a                  	// #74
  403b98:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  403b9c:	add	x0, x0, #0xa58
  403ba0:	bl	4062a0 <ferror@plt+0x39d0>
  403ba4:	mov	w22, #0x1                   	// #1
  403ba8:	mov	w21, #0x0                   	// #0
  403bac:	b	403bb8 <ferror@plt+0x12e8>
  403bb0:	mov	w22, #0x1                   	// #1
  403bb4:	mov	w21, #0x1                   	// #1
  403bb8:	bl	402c3c <ferror@plt+0x36c>
  403bbc:	mov	w20, w0
  403bc0:	lsr	w0, w0, #24
  403bc4:	strb	w0, [sp, #136]
  403bc8:	lsr	w0, w20, #16
  403bcc:	strb	w0, [sp, #137]
  403bd0:	lsr	w0, w20, #8
  403bd4:	strb	w0, [sp, #138]
  403bd8:	strb	w20, [sp, #139]
  403bdc:	lsr	w0, w19, #24
  403be0:	strb	w0, [sp, #128]
  403be4:	lsr	w0, w19, #16
  403be8:	strb	w0, [sp, #129]
  403bec:	lsr	w0, w19, #8
  403bf0:	strb	w0, [sp, #130]
  403bf4:	strb	w19, [sp, #131]
  403bf8:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x10094>
  403bfc:	add	x0, x2, #0xb90
  403c00:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x10094>
  403c04:	add	x2, x2, #0xb88
  403c08:	cmp	w21, #0x0
  403c0c:	csel	x2, x2, x0, ne  // ne = any
  403c10:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  403c14:	add	x0, x0, #0x710
  403c18:	adrp	x5, 457000 <_obstack_memory_used@@Base+0x10094>
  403c1c:	add	x5, x5, #0xb98
  403c20:	cmp	w22, #0x0
  403c24:	csel	x5, x5, x0, lt  // lt = tstop
  403c28:	add	x4, sp, #0x88
  403c2c:	add	x3, sp, #0x80
  403c30:	mov	x1, x25
  403c34:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  403c38:	add	x0, x0, #0xe38
  403c3c:	bl	402800 <printf@plt>
  403c40:	mov	w0, #0x322a                	// #12842
  403c44:	movk	w0, #0x4139, lsl #16
  403c48:	cmp	w20, w0
  403c4c:	b.ne	40368c <ferror@plt+0xdbc>  // b.any
  403c50:	bl	402c3c <ferror@plt+0x36c>
  403c54:	mov	w2, w0
  403c58:	mov	x1, x25
  403c5c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  403c60:	add	x0, x0, #0xe88
  403c64:	bl	402800 <printf@plt>
  403c68:	cbz	w21, 4036c4 <ferror@plt+0xdf4>
  403c6c:	mov	w27, #0x0                   	// #0
  403c70:	adrp	x19, 488000 <_obstack_memory_used@@Base+0x41094>
  403c74:	add	x19, x19, #0x558
  403c78:	b	4038dc <ferror@plt+0x100c>
  403c7c:	ldp	x25, x26, [sp, #64]
  403c80:	mov	w0, #0x0                   	// #0
  403c84:	ldp	x19, x20, [sp, #16]
  403c88:	ldp	x21, x22, [sp, #32]
  403c8c:	ldp	x23, x24, [sp, #48]
  403c90:	ldp	x27, x28, [sp, #80]
  403c94:	ldp	x29, x30, [sp], #176
  403c98:	ret
  403c9c:	mov	x4, x0
  403ca0:	mov	w2, #0x1e                  	// #30
  403ca4:	mov	w0, #0x0                   	// #0
  403ca8:	adrp	x5, 458000 <_obstack_memory_used@@Base+0x11094>
  403cac:	add	x5, x5, #0x2b0
  403cb0:	b	403cb8 <ferror@plt+0x13e8>
  403cb4:	mov	w2, w1
  403cb8:	cmp	w2, w0
  403cbc:	b.eq	403ce0 <ferror@plt+0x1410>  // b.none
  403cc0:	sub	w1, w2, w0
  403cc4:	add	w1, w0, w1, lsr #1
  403cc8:	ubfiz	x3, x1, #4, #32
  403ccc:	ldr	w3, [x5, x3]
  403cd0:	cmp	x3, x4
  403cd4:	b.cs	403cb4 <ferror@plt+0x13e4>  // b.hs, b.nlast
  403cd8:	add	w0, w1, #0x1
  403cdc:	b	403cb8 <ferror@plt+0x13e8>
  403ce0:	ubfiz	x1, x0, #4, #32
  403ce4:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  403ce8:	add	x2, x2, #0x2b0
  403cec:	ldr	w1, [x2, x1]
  403cf0:	cmp	x1, x4
  403cf4:	b.cc	403cfc <ferror@plt+0x142c>  // b.lo, b.ul, b.last
  403cf8:	ret
  403cfc:	stp	x29, x30, [sp, #-16]!
  403d00:	mov	x29, sp
  403d04:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  403d08:	add	x2, x2, #0x278
  403d0c:	mov	w1, #0x60                  	// #96
  403d10:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  403d14:	add	x0, x0, #0x298
  403d18:	bl	4062a0 <ferror@plt+0x39d0>
  403d1c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  403d20:	add	x0, x0, #0x5a0
  403d24:	ldarb	w0, [x0]
  403d28:	tbz	w0, #0, 403d3c <ferror@plt+0x146c>
  403d2c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  403d30:	add	x0, x0, #0x5a0
  403d34:	add	x0, x0, #0x8
  403d38:	ret
  403d3c:	stp	x29, x30, [sp, #-48]!
  403d40:	mov	x29, sp
  403d44:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  403d48:	add	x0, x0, #0x5a0
  403d4c:	bl	447638 <_obstack_memory_used@@Base+0x6cc>
  403d50:	cbnz	w0, 403d68 <ferror@plt+0x1498>
  403d54:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  403d58:	add	x0, x0, #0x5a0
  403d5c:	add	x0, x0, #0x8
  403d60:	ldp	x29, x30, [sp], #48
  403d64:	ret
  403d68:	stp	x19, x20, [sp, #16]
  403d6c:	str	x21, [sp, #32]
  403d70:	mov	x0, #0x30                  	// #48
  403d74:	bl	447868 <_obstack_memory_used@@Base+0x8fc>
  403d78:	mov	x19, x0
  403d7c:	str	xzr, [x0, #16]
  403d80:	str	xzr, [x0, #24]
  403d84:	str	wzr, [x0, #32]
  403d88:	str	wzr, [x0, #36]
  403d8c:	strb	wzr, [x0, #44]
  403d90:	mov	x0, #0xd                   	// #13
  403d94:	bl	403c9c <ferror@plt+0x13cc>
  403d98:	mov	w20, w0
  403d9c:	ubfiz	x1, x20, #4, #32
  403da0:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  403da4:	add	x0, x0, #0x2b0
  403da8:	ldr	w21, [x0, x1]
  403dac:	mov	x1, #0x10                  	// #16
  403db0:	mov	x0, x21
  403db4:	bl	447084 <_obstack_memory_used@@Base+0x118>
  403db8:	cbz	x21, 403dd0 <ferror@plt+0x1500>
  403dbc:	mov	x1, x0
  403dc0:	add	x2, x0, x21, lsl #4
  403dc4:	str	xzr, [x1], #16
  403dc8:	cmp	x1, x2
  403dcc:	b.ne	403dc4 <ferror@plt+0x14f4>  // b.any
  403dd0:	str	x0, [x19]
  403dd4:	str	x21, [x19, #8]
  403dd8:	str	w20, [x19, #40]
  403ddc:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  403de0:	str	x19, [x0, #1488]
  403de4:	mov	x0, #0x30                  	// #48
  403de8:	bl	447868 <_obstack_memory_used@@Base+0x8fc>
  403dec:	mov	x19, x0
  403df0:	str	xzr, [x0, #16]
  403df4:	str	xzr, [x0, #24]
  403df8:	str	wzr, [x0, #32]
  403dfc:	str	wzr, [x0, #36]
  403e00:	strb	wzr, [x0, #44]
  403e04:	mov	x0, #0xd                   	// #13
  403e08:	bl	403c9c <ferror@plt+0x13cc>
  403e0c:	mov	w21, w0
  403e10:	ubfiz	x1, x21, #4, #32
  403e14:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  403e18:	add	x0, x0, #0x2b0
  403e1c:	ldr	w20, [x0, x1]
  403e20:	mov	x1, #0x18                  	// #24
  403e24:	mov	x0, x20
  403e28:	bl	447084 <_obstack_memory_used@@Base+0x118>
  403e2c:	cbz	x20, 403e48 <ferror@plt+0x1578>
  403e30:	mov	x1, x0
  403e34:	add	x2, x20, x20, lsl #1
  403e38:	add	x2, x0, x2, lsl #3
  403e3c:	str	xzr, [x1], #24
  403e40:	cmp	x2, x1
  403e44:	b.ne	403e3c <ferror@plt+0x156c>  // b.any
  403e48:	str	x0, [x19]
  403e4c:	str	x20, [x19, #8]
  403e50:	str	w21, [x19, #40]
  403e54:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  403e58:	str	x19, [x0, #1496]
  403e5c:	mov	x0, #0x30                  	// #48
  403e60:	bl	447868 <_obstack_memory_used@@Base+0x8fc>
  403e64:	mov	x19, x0
  403e68:	str	xzr, [x0, #16]
  403e6c:	str	xzr, [x0, #24]
  403e70:	str	wzr, [x0, #32]
  403e74:	str	wzr, [x0, #36]
  403e78:	strb	wzr, [x0, #44]
  403e7c:	mov	x0, #0xd                   	// #13
  403e80:	bl	403c9c <ferror@plt+0x13cc>
  403e84:	mov	w21, w0
  403e88:	ubfiz	x1, x21, #4, #32
  403e8c:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  403e90:	add	x0, x0, #0x2b0
  403e94:	ldr	w20, [x0, x1]
  403e98:	mov	x1, #0x18                  	// #24
  403e9c:	mov	x0, x20
  403ea0:	bl	447084 <_obstack_memory_used@@Base+0x118>
  403ea4:	cbz	x20, 403ec0 <ferror@plt+0x15f0>
  403ea8:	mov	x1, x0
  403eac:	add	x2, x20, x20, lsl #1
  403eb0:	add	x2, x0, x2, lsl #3
  403eb4:	str	xzr, [x1], #24
  403eb8:	cmp	x2, x1
  403ebc:	b.ne	403eb4 <ferror@plt+0x15e4>  // b.any
  403ec0:	str	x0, [x19]
  403ec4:	str	x20, [x19, #8]
  403ec8:	str	w21, [x19, #40]
  403ecc:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  403ed0:	add	x0, x0, #0x5a0
  403ed4:	add	x20, x0, #0x8
  403ed8:	str	x19, [x0, #8]
  403edc:	bl	4477c8 <_obstack_memory_used@@Base+0x85c>
  403ee0:	adrp	x2, 488000 <_obstack_memory_used@@Base+0x41094>
  403ee4:	add	x2, x2, #0x348
  403ee8:	mov	x1, x20
  403eec:	adrp	x0, 403000 <ferror@plt+0x730>
  403ef0:	add	x0, x0, #0xf40
  403ef4:	bl	402370 <__cxa_atexit@plt>
  403ef8:	ldp	x19, x20, [sp, #16]
  403efc:	ldr	x21, [sp, #32]
  403f00:	b	403d54 <ferror@plt+0x1484>
  403f04:	ret
  403f08:	ldr	x1, [x0]
  403f0c:	ldr	x3, [x0, #8]
  403f10:	cmp	x1, x3
  403f14:	b.cs	403f34 <ferror@plt+0x1664>  // b.hs, b.nlast
  403f18:	ldr	x2, [x1]
  403f1c:	cmp	x2, #0x1
  403f20:	b.hi	403f3c <ferror@plt+0x166c>  // b.pmore
  403f24:	add	x1, x1, #0x10
  403f28:	str	x1, [x0]
  403f2c:	cmp	x1, x3
  403f30:	b.cc	403f18 <ferror@plt+0x1648>  // b.lo, b.ul, b.last
  403f34:	str	xzr, [x0]
  403f38:	str	xzr, [x0, #8]
  403f3c:	ret
  403f40:	stp	x29, x30, [sp, #-48]!
  403f44:	mov	x29, sp
  403f48:	stp	x19, x20, [sp, #16]
  403f4c:	mov	x20, x0
  403f50:	ldr	x0, [x0, #40]
  403f54:	ldr	x1, [x0]
  403f58:	ldr	x0, [x0, #8]
  403f5c:	add	x0, x1, x0, lsl #4
  403f60:	str	x1, [sp, #32]
  403f64:	str	x0, [sp, #40]
  403f68:	add	x0, sp, #0x20
  403f6c:	bl	403f08 <ferror@plt+0x1638>
  403f70:	mov	x19, #0x20                  	// #32
  403f74:	b	404078 <ferror@plt+0x17a8>
  403f78:	ldr	x0, [sp, #40]
  403f7c:	cbnz	x0, 404080 <ferror@plt+0x17b0>
  403f80:	ldr	x19, [x20, #40]
  403f84:	cbz	x19, 403fbc <ferror@plt+0x16ec>
  403f88:	ldr	x0, [x19, #8]
  403f8c:	sub	x1, x0, #0x1
  403f90:	cbz	x0, 403fa0 <ferror@plt+0x16d0>
  403f94:	sub	x1, x1, #0x1
  403f98:	cmp	x0, x1
  403f9c:	b.hi	403f94 <ferror@plt+0x16c4>  // b.pmore
  403fa0:	ldrb	w0, [x19, #44]
  403fa4:	cbnz	w0, 40408c <ferror@plt+0x17bc>
  403fa8:	ldr	x0, [x19]
  403fac:	bl	402690 <free@plt>
  403fb0:	mov	x1, #0x30                  	// #48
  403fb4:	mov	x0, x19
  403fb8:	bl	447628 <_obstack_memory_used@@Base+0x6bc>
  403fbc:	ldr	x19, [x20, #48]
  403fc0:	cbz	x19, 403ffc <ferror@plt+0x172c>
  403fc4:	ldr	x0, [x19, #8]
  403fc8:	sub	x1, x0, #0x1
  403fcc:	cbz	x0, 403fe0 <ferror@plt+0x1710>
  403fd0:	sub	x1, x1, #0x1
  403fd4:	ldr	x0, [x19, #8]
  403fd8:	cmp	x0, x1
  403fdc:	b.hi	403fd0 <ferror@plt+0x1700>  // b.pmore
  403fe0:	ldrb	w0, [x19, #44]
  403fe4:	cbnz	w0, 404098 <ferror@plt+0x17c8>
  403fe8:	ldr	x0, [x19]
  403fec:	bl	402690 <free@plt>
  403ff0:	mov	x1, #0x30                  	// #48
  403ff4:	mov	x0, x19
  403ff8:	bl	447628 <_obstack_memory_used@@Base+0x6bc>
  403ffc:	ldr	x19, [x20]
  404000:	cbz	x19, 40403c <ferror@plt+0x176c>
  404004:	ldr	x1, [x19, #8]
  404008:	sub	x0, x1, #0x1
  40400c:	cbz	x1, 404020 <ferror@plt+0x1750>
  404010:	sub	x0, x0, #0x1
  404014:	ldr	x1, [x19, #8]
  404018:	cmp	x1, x0
  40401c:	b.hi	404010 <ferror@plt+0x1740>  // b.pmore
  404020:	ldrb	w0, [x19, #44]
  404024:	cbnz	w0, 4040a4 <ferror@plt+0x17d4>
  404028:	ldr	x0, [x19]
  40402c:	bl	402690 <free@plt>
  404030:	mov	x1, #0x30                  	// #48
  404034:	mov	x0, x19
  404038:	bl	447628 <_obstack_memory_used@@Base+0x6bc>
  40403c:	ldp	x19, x20, [sp, #16]
  404040:	ldp	x29, x30, [sp], #48
  404044:	ret
  404048:	mov	x1, x19
  40404c:	bl	447628 <_obstack_memory_used@@Base+0x6bc>
  404050:	ldr	x1, [sp, #32]
  404054:	ldr	x0, [x1, #8]
  404058:	cbz	x0, 404064 <ferror@plt+0x1794>
  40405c:	mov	x1, x19
  404060:	bl	447628 <_obstack_memory_used@@Base+0x6bc>
  404064:	ldr	x1, [sp, #32]
  404068:	add	x1, x1, #0x10
  40406c:	str	x1, [sp, #32]
  404070:	add	x0, sp, #0x20
  404074:	bl	403f08 <ferror@plt+0x1638>
  404078:	ldr	x1, [sp, #32]
  40407c:	cbz	x1, 403f78 <ferror@plt+0x16a8>
  404080:	ldr	x0, [x1]
  404084:	cbnz	x0, 404048 <ferror@plt+0x1778>
  404088:	b	404050 <ferror@plt+0x1780>
  40408c:	ldr	x0, [x19]
  404090:	bl	40412c <ferror@plt+0x185c>
  404094:	b	403fb0 <ferror@plt+0x16e0>
  404098:	ldr	x0, [x19]
  40409c:	bl	40412c <ferror@plt+0x185c>
  4040a0:	b	403ff0 <ferror@plt+0x1720>
  4040a4:	ldr	x0, [x19]
  4040a8:	bl	40412c <ferror@plt+0x185c>
  4040ac:	b	404030 <ferror@plt+0x1760>
  4040b0:	ret
  4040b4:	stp	x29, x30, [sp, #-16]!
  4040b8:	mov	x29, sp
  4040bc:	cbnz	x1, 4040cc <ferror@plt+0x17fc>
  4040c0:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  4040c4:	ldp	x29, x30, [sp], #16
  4040c8:	ret
  4040cc:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  4040d0:	add	x2, x2, #0x490
  4040d4:	mov	w1, #0x2f                  	// #47
  4040d8:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  4040dc:	add	x0, x0, #0x4a8
  4040e0:	bl	4062a0 <ferror@plt+0x39d0>
  4040e4:	stp	x29, x30, [sp, #-16]!
  4040e8:	mov	x29, sp
  4040ec:	cbnz	x1, 404100 <ferror@plt+0x1830>
  4040f0:	mov	x1, #0x1                   	// #1
  4040f4:	bl	447084 <_obstack_memory_used@@Base+0x118>
  4040f8:	ldp	x29, x30, [sp], #16
  4040fc:	ret
  404100:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  404104:	add	x2, x2, #0x4c0
  404108:	mov	w1, #0x37                  	// #55
  40410c:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  404110:	add	x0, x0, #0x4a8
  404114:	bl	4062a0 <ferror@plt+0x39d0>
  404118:	stp	x29, x30, [sp, #-16]!
  40411c:	mov	x29, sp
  404120:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  404124:	ldp	x29, x30, [sp], #16
  404128:	ret
  40412c:	stp	x29, x30, [sp, #-16]!
  404130:	mov	x29, sp
  404134:	bl	402690 <free@plt>
  404138:	ldp	x29, x30, [sp], #16
  40413c:	ret
  404140:	ret
  404144:	stp	x29, x30, [sp, #-32]!
  404148:	mov	x29, sp
  40414c:	stp	x19, x20, [sp, #16]
  404150:	mov	x19, x0
  404154:	ldr	w0, [x0, #56]
  404158:	cbz	w0, 404190 <ferror@plt+0x18c0>
  40415c:	ldrb	w0, [x19, #64]
  404160:	cbz	w0, 40419c <ferror@plt+0x18cc>
  404164:	ldr	x20, [x19]
  404168:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40416c:	add	x0, x0, #0x4e0
  404170:	bl	402880 <gettext@plt>
  404174:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x41094>
  404178:	ldr	x2, [x1, #1504]
  40417c:	mov	x1, x0
  404180:	mov	x0, x20
  404184:	bl	40eca4 <ferror@plt+0xc3d4>
  404188:	ldr	x0, [x19]
  40418c:	bl	40d06c <ferror@plt+0xa79c>
  404190:	ldp	x19, x20, [sp, #16]
  404194:	ldp	x29, x30, [sp], #32
  404198:	ret
  40419c:	ldr	x20, [x19]
  4041a0:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  4041a4:	add	x0, x0, #0x510
  4041a8:	bl	402880 <gettext@plt>
  4041ac:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x41094>
  4041b0:	ldr	x2, [x1, #1504]
  4041b4:	mov	x1, x0
  4041b8:	mov	x0, x20
  4041bc:	bl	40eca4 <ferror@plt+0xc3d4>
  4041c0:	b	404188 <ferror@plt+0x18b8>
  4041c4:	stp	x29, x30, [sp, #-96]!
  4041c8:	mov	x29, sp
  4041cc:	stp	x21, x22, [sp, #32]
  4041d0:	mov	x21, x0
  4041d4:	orr	x0, x2, x4
  4041d8:	cbz	x0, 4042dc <ferror@plt+0x1a0c>
  4041dc:	stp	x19, x20, [sp, #16]
  4041e0:	stp	x23, x24, [sp, #48]
  4041e4:	mov	x22, x1
  4041e8:	mov	x20, x2
  4041ec:	mov	w23, w3
  4041f0:	mov	x19, x4
  4041f4:	ldr	w0, [x21]
  4041f8:	cmp	w0, #0x0
  4041fc:	ccmp	x2, #0x0, #0x4, eq  // eq = none
  404200:	b.ne	404250 <ferror@plt+0x1980>  // b.any
  404204:	ldr	w1, [x21]
  404208:	mov	w0, #0x1                   	// #1
  40420c:	cmp	w1, #0x13
  404210:	b.gt	40439c <ferror@plt+0x1acc>
  404214:	stp	x25, x26, [sp, #64]
  404218:	add	w1, w1, w0
  40421c:	str	w1, [x21]
  404220:	cbz	x19, 4042ec <ferror@plt+0x1a1c>
  404224:	str	x27, [sp, #80]
  404228:	mov	w1, #0x400b                	// #16395
  40422c:	mov	x0, x19
  404230:	bl	444a48 <ferror@plt+0x42178>
  404234:	mov	x26, x0
  404238:	cmp	x0, #0x0
  40423c:	csel	x19, x19, x0, eq  // eq = none
  404240:	mov	x24, #0x0                   	// #0
  404244:	adrp	x27, 458000 <_obstack_memory_used@@Base+0x11094>
  404248:	add	x27, x27, #0xa68
  40424c:	b	404280 <ferror@plt+0x19b0>
  404250:	mov	x0, x2
  404254:	bl	446ba8 <ferror@plt+0x442d8>
  404258:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  40425c:	add	x1, x1, #0x548
  404260:	bl	402620 <strcmp@plt>
  404264:	cbnz	w0, 404204 <ferror@plt+0x1934>
  404268:	ldp	x19, x20, [sp, #16]
  40426c:	ldp	x23, x24, [sp, #48]
  404270:	b	4042e0 <ferror@plt+0x1a10>
  404274:	add	x24, x24, #0x1
  404278:	cmp	x24, #0x4
  40427c:	b.eq	404340 <ferror@plt+0x1a70>  // b.none
  404280:	ldr	x25, [x27, x24, lsl #3]
  404284:	mov	x0, x25
  404288:	bl	4022b0 <strlen@plt>
  40428c:	mov	x21, x0
  404290:	mov	x2, x0
  404294:	mov	x1, x25
  404298:	mov	x0, x19
  40429c:	bl	402440 <strncmp@plt>
  4042a0:	cbnz	w0, 404274 <ferror@plt+0x19a4>
  4042a4:	ldrb	w0, [x19, x21]
  4042a8:	cmp	w0, #0x28
  4042ac:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  4042b0:	b.ne	404274 <ferror@plt+0x19a4>  // b.any
  4042b4:	mov	w0, #0x1                   	// #1
  4042b8:	cbz	x26, 4043a8 <ferror@plt+0x1ad8>
  4042bc:	mov	x0, x26
  4042c0:	bl	402690 <free@plt>
  4042c4:	mov	w0, #0x1                   	// #1
  4042c8:	ldp	x19, x20, [sp, #16]
  4042cc:	ldp	x23, x24, [sp, #48]
  4042d0:	ldp	x25, x26, [sp, #64]
  4042d4:	ldr	x27, [sp, #80]
  4042d8:	b	4042e0 <ferror@plt+0x1a10>
  4042dc:	mov	w0, #0x0                   	// #0
  4042e0:	ldp	x21, x22, [sp, #32]
  4042e4:	ldp	x29, x30, [sp], #96
  4042e8:	ret
  4042ec:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  4042f0:	ldr	x0, [x0, #1320]
  4042f4:	cbz	x20, 40432c <ferror@plt+0x1a5c>
  4042f8:	mov	w5, w23
  4042fc:	mov	x4, x20
  404300:	adrp	x3, 458000 <_obstack_memory_used@@Base+0x11094>
  404304:	add	x3, x3, #0x540
  404308:	mov	x2, x22
  40430c:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  404310:	add	x1, x1, #0x558
  404314:	bl	402890 <fprintf@plt>
  404318:	mov	w0, #0x0                   	// #0
  40431c:	ldp	x19, x20, [sp, #16]
  404320:	ldp	x23, x24, [sp, #48]
  404324:	ldp	x25, x26, [sp, #64]
  404328:	b	4042e0 <ferror@plt+0x1a10>
  40432c:	mov	x26, x20
  404330:	adrp	x19, 458000 <_obstack_memory_used@@Base+0x11094>
  404334:	add	x19, x19, #0x540
  404338:	mov	x20, x19
  40433c:	b	40435c <ferror@plt+0x1a8c>
  404340:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  404344:	ldr	x0, [x0, #1320]
  404348:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  40434c:	add	x1, x1, #0x540
  404350:	cmp	x20, #0x0
  404354:	csel	x20, x1, x20, eq  // eq = none
  404358:	ldr	x27, [sp, #80]
  40435c:	mov	w5, w23
  404360:	mov	x4, x20
  404364:	mov	x3, x19
  404368:	mov	x2, x22
  40436c:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  404370:	add	x1, x1, #0x558
  404374:	bl	402890 <fprintf@plt>
  404378:	mov	w0, #0x0                   	// #0
  40437c:	cbz	x26, 4043bc <ferror@plt+0x1aec>
  404380:	mov	x0, x26
  404384:	bl	402690 <free@plt>
  404388:	mov	w0, #0x0                   	// #0
  40438c:	ldp	x19, x20, [sp, #16]
  404390:	ldp	x23, x24, [sp, #48]
  404394:	ldp	x25, x26, [sp, #64]
  404398:	b	4042e0 <ferror@plt+0x1a10>
  40439c:	ldp	x19, x20, [sp, #16]
  4043a0:	ldp	x23, x24, [sp, #48]
  4043a4:	b	4042e0 <ferror@plt+0x1a10>
  4043a8:	ldp	x19, x20, [sp, #16]
  4043ac:	ldp	x23, x24, [sp, #48]
  4043b0:	ldp	x25, x26, [sp, #64]
  4043b4:	ldr	x27, [sp, #80]
  4043b8:	b	4042e0 <ferror@plt+0x1a10>
  4043bc:	ldp	x19, x20, [sp, #16]
  4043c0:	ldp	x23, x24, [sp, #48]
  4043c4:	ldp	x25, x26, [sp, #64]
  4043c8:	b	4042e0 <ferror@plt+0x1a10>
  4043cc:	tbnz	w2, #31, 404430 <ferror@plt+0x1b60>
  4043d0:	stp	x29, x30, [sp, #-32]!
  4043d4:	mov	x29, sp
  4043d8:	stp	x19, x20, [sp, #16]
  4043dc:	mov	x19, x1
  4043e0:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  4043e4:	ldr	x20, [x0, #1320]
  4043e8:	cbnz	w2, 404418 <ferror@plt+0x1b48>
  4043ec:	adrp	x3, 458000 <_obstack_memory_used@@Base+0x11094>
  4043f0:	add	x3, x3, #0x710
  4043f4:	mov	x4, x3
  4043f8:	mov	x2, x19
  4043fc:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  404400:	add	x1, x1, #0x578
  404404:	mov	x0, x20
  404408:	bl	402890 <fprintf@plt>
  40440c:	ldp	x19, x20, [sp, #16]
  404410:	ldp	x29, x30, [sp], #32
  404414:	ret
  404418:	mov	w0, w2
  40441c:	bl	4471b0 <_obstack_memory_used@@Base+0x244>
  404420:	mov	x4, x0
  404424:	adrp	x3, 458000 <_obstack_memory_used@@Base+0x11094>
  404428:	add	x3, x3, #0x570
  40442c:	b	4043f8 <ferror@plt+0x1b28>
  404430:	ret
  404434:	stp	x29, x30, [sp, #-32]!
  404438:	mov	x29, sp
  40443c:	str	x19, [sp, #16]
  404440:	mov	x19, x0
  404444:	ldr	w2, [x1, #56]
  404448:	ldr	x1, [x1, #40]
  40444c:	bl	40915c <ferror@plt+0x688c>
  404450:	ldr	x0, [x19]
  404454:	bl	40c5a0 <ferror@plt+0x9cd0>
  404458:	ldr	x0, [x19]
  40445c:	bl	40c6e4 <ferror@plt+0x9e14>
  404460:	ldr	x19, [sp, #16]
  404464:	ldp	x29, x30, [sp], #32
  404468:	ret
  40446c:	stp	x29, x30, [sp, #-272]!
  404470:	mov	x29, sp
  404474:	str	x1, [sp, #216]
  404478:	str	x2, [sp, #224]
  40447c:	str	x3, [sp, #232]
  404480:	str	x4, [sp, #240]
  404484:	str	x5, [sp, #248]
  404488:	str	x6, [sp, #256]
  40448c:	str	x7, [sp, #264]
  404490:	str	q0, [sp, #80]
  404494:	str	q1, [sp, #96]
  404498:	str	q2, [sp, #112]
  40449c:	str	q3, [sp, #128]
  4044a0:	str	q4, [sp, #144]
  4044a4:	str	q5, [sp, #160]
  4044a8:	str	q6, [sp, #176]
  4044ac:	str	q7, [sp, #192]
  4044b0:	add	x1, sp, #0x110
  4044b4:	str	x1, [sp, #48]
  4044b8:	str	x1, [sp, #56]
  4044bc:	add	x1, sp, #0xd0
  4044c0:	str	x1, [sp, #64]
  4044c4:	mov	w1, #0xffffffc8            	// #-56
  4044c8:	str	w1, [sp, #72]
  4044cc:	mov	w1, #0xffffff80            	// #-128
  4044d0:	str	w1, [sp, #76]
  4044d4:	ldp	x2, x3, [sp, #48]
  4044d8:	stp	x2, x3, [sp, #16]
  4044dc:	ldp	x2, x3, [sp, #64]
  4044e0:	stp	x2, x3, [sp, #32]
  4044e4:	add	x1, sp, #0x10
  4044e8:	bl	447234 <_obstack_memory_used@@Base+0x2c8>
  4044ec:	ldp	x29, x30, [sp], #272
  4044f0:	ret
  4044f4:	stp	x29, x30, [sp, #-64]!
  4044f8:	mov	x29, sp
  4044fc:	stp	x19, x20, [sp, #16]
  404500:	stp	x21, x22, [sp, #32]
  404504:	str	x23, [sp, #48]
  404508:	mov	x20, x0
  40450c:	mov	x21, x1
  404510:	ldr	x19, [x1]
  404514:	ldr	x22, [x0]
  404518:	mov	x2, #0x5                   	// #5
  40451c:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  404520:	add	x1, x1, #0x590
  404524:	ldrb	w0, [x22, #67]
  404528:	bl	40744c <ferror@plt+0x4b7c>
  40452c:	mov	x23, x0
  404530:	ldrb	w0, [x22, #67]
  404534:	bl	4074e0 <ferror@plt+0x4c10>
  404538:	mov	x22, x0
  40453c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  404540:	ldr	x0, [x0, #1504]
  404544:	cmp	x19, #0x0
  404548:	csel	x19, x0, x19, eq  // eq = none
  40454c:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  404550:	add	x1, x1, #0x598
  404554:	mov	x0, x19
  404558:	bl	402620 <strcmp@plt>
  40455c:	cbz	w0, 4045e8 <ferror@plt+0x1d18>
  404560:	ldr	w3, [x21, #8]
  404564:	ldrb	w0, [x20, #121]
  404568:	cbz	w0, 4045f4 <ferror@plt+0x1d24>
  40456c:	ldr	w4, [x21, #12]
  404570:	cbz	w3, 4045f8 <ferror@plt+0x1d28>
  404574:	cbz	w4, 4045cc <ferror@plt+0x1cfc>
  404578:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  40457c:	add	x2, x2, #0x580
  404580:	mov	x1, #0x20                  	// #32
  404584:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  404588:	add	x0, x0, #0x5e0
  40458c:	add	x0, x0, #0x8
  404590:	bl	4023a0 <snprintf@plt>
  404594:	mov	x4, x22
  404598:	adrp	x3, 488000 <_obstack_memory_used@@Base+0x41094>
  40459c:	add	x3, x3, #0x5e0
  4045a0:	add	x3, x3, #0x8
  4045a4:	mov	x2, x19
  4045a8:	mov	x1, x23
  4045ac:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  4045b0:	add	x0, x0, #0x5a8
  4045b4:	bl	40446c <ferror@plt+0x1b9c>
  4045b8:	ldp	x19, x20, [sp, #16]
  4045bc:	ldp	x21, x22, [sp, #32]
  4045c0:	ldr	x23, [sp, #48]
  4045c4:	ldp	x29, x30, [sp], #64
  4045c8:	ret
  4045cc:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  4045d0:	add	x2, x2, #0x588
  4045d4:	b	404580 <ferror@plt+0x1cb0>
  4045d8:	mov	w4, #0x0                   	// #0
  4045dc:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  4045e0:	add	x2, x2, #0x588
  4045e4:	b	404580 <ferror@plt+0x1cb0>
  4045e8:	mov	w3, w0
  4045ec:	ldrb	w0, [x20, #121]
  4045f0:	cbnz	w0, 4045f8 <ferror@plt+0x1d28>
  4045f4:	cbnz	w3, 4045d8 <ferror@plt+0x1d08>
  4045f8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  4045fc:	strb	wzr, [x0, #1512]
  404600:	b	404594 <ferror@plt+0x1cc4>
  404604:	stp	x29, x30, [sp, #-64]!
  404608:	mov	x29, sp
  40460c:	stp	x19, x20, [sp, #16]
  404610:	mov	x19, x0
  404614:	ldp	x2, x3, [x1]
  404618:	stp	x2, x3, [sp, #32]
  40461c:	ldp	x2, x3, [x1, #16]
  404620:	stp	x2, x3, [sp, #48]
  404624:	add	x1, sp, #0x20
  404628:	bl	4044f4 <ferror@plt+0x1c24>
  40462c:	mov	x20, x0
  404630:	mov	x1, x0
  404634:	ldr	x0, [x19]
  404638:	bl	40cf0c <ferror@plt+0xa63c>
  40463c:	mov	x0, x20
  404640:	bl	402690 <free@plt>
  404644:	ldr	x0, [x19]
  404648:	bl	40c8b0 <ferror@plt+0x9fe0>
  40464c:	ldp	x19, x20, [sp, #16]
  404650:	ldp	x29, x30, [sp], #64
  404654:	ret
  404658:	stp	x29, x30, [sp, #-48]!
  40465c:	mov	x29, sp
  404660:	stp	x19, x20, [sp, #16]
  404664:	str	x21, [sp, #32]
  404668:	mov	x19, x0
  40466c:	mov	x21, x1
  404670:	ldr	x0, [x0]
  404674:	mov	x2, #0x5                   	// #5
  404678:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  40467c:	add	x1, x1, #0x590
  404680:	ldrb	w0, [x0, #67]
  404684:	bl	40744c <ferror@plt+0x4b7c>
  404688:	mov	x20, x0
  40468c:	ldr	x0, [x19]
  404690:	ldrb	w0, [x0, #67]
  404694:	bl	4074e0 <ferror@plt+0x4c10>
  404698:	mov	x3, x0
  40469c:	mov	x2, x21
  4046a0:	mov	x1, x20
  4046a4:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  4046a8:	add	x0, x0, #0x5b8
  4046ac:	bl	40446c <ferror@plt+0x1b9c>
  4046b0:	ldp	x19, x20, [sp, #16]
  4046b4:	ldr	x21, [sp, #32]
  4046b8:	ldp	x29, x30, [sp], #48
  4046bc:	ret
  4046c0:	stp	x29, x30, [sp, #-32]!
  4046c4:	mov	x29, sp
  4046c8:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  4046cc:	add	x0, x0, #0x5c8
  4046d0:	bl	402820 <getenv@plt>
  4046d4:	cbz	x0, 4046ec <ferror@plt+0x1e1c>
  4046d8:	mov	w2, #0xa                   	// #10
  4046dc:	mov	x1, #0x0                   	// #0
  4046e0:	bl	402650 <strtol@plt>
  4046e4:	cmp	w0, #0x0
  4046e8:	b.gt	40471c <ferror@plt+0x1e4c>
  4046ec:	strh	wzr, [sp, #26]
  4046f0:	add	x2, sp, #0x18
  4046f4:	mov	x1, #0x5413                	// #21523
  4046f8:	mov	w0, #0x0                   	// #0
  4046fc:	bl	4028b0 <ioctl@plt>
  404700:	mov	w1, w0
  404704:	mov	w0, #0x7fffffff            	// #2147483647
  404708:	cbnz	w1, 40471c <ferror@plt+0x1e4c>
  40470c:	ldrh	w0, [sp, #26]
  404710:	cmp	w0, #0x0
  404714:	mov	w1, #0x7fffffff            	// #2147483647
  404718:	csel	w0, w0, w1, ne  // ne = any
  40471c:	ldp	x29, x30, [sp], #32
  404720:	ret
  404724:	stp	x29, x30, [sp, #-32]!
  404728:	mov	x29, sp
  40472c:	str	x19, [sp, #16]
  404730:	mov	x19, x0
  404734:	cbz	w1, 404758 <ferror@plt+0x1e88>
  404738:	sub	w1, w1, #0x1
  40473c:	cmp	w1, #0x0
  404740:	mov	w0, #0x7fffffff            	// #2147483647
  404744:	csel	w1, w1, w0, gt
  404748:	str	w1, [x19, #112]
  40474c:	ldr	x19, [sp, #16]
  404750:	ldp	x29, x30, [sp], #32
  404754:	ret
  404758:	ldr	x0, [x0]
  40475c:	ldr	x0, [x0, #8]
  404760:	ldr	x0, [x0, #192]
  404764:	bl	402460 <fileno_unlocked@plt>
  404768:	bl	402770 <isatty@plt>
  40476c:	mov	w1, #0x7fffffff            	// #2147483647
  404770:	cbz	w0, 404748 <ferror@plt+0x1e78>
  404774:	bl	4046c0 <ferror@plt+0x1df0>
  404778:	sub	w1, w0, #0x1
  40477c:	b	40473c <ferror@plt+0x1e6c>
  404780:	stp	x29, x30, [sp, #-48]!
  404784:	mov	x29, sp
  404788:	stp	x19, x20, [sp, #16]
  40478c:	str	x21, [sp, #32]
  404790:	mov	x19, x0
  404794:	mov	w20, w1
  404798:	mov	x0, #0x48                  	// #72
  40479c:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  4047a0:	mov	x21, x19
  4047a4:	str	x0, [x21], #8
  4047a8:	mov	w1, #0x0                   	// #0
  4047ac:	bl	40c5cc <ferror@plt+0x9cfc>
  4047b0:	stp	xzr, xzr, [x19, #8]
  4047b4:	stp	xzr, xzr, [x21, #16]
  4047b8:	stp	xzr, xzr, [x21, #32]
  4047bc:	str	xzr, [x21, #48]
  4047c0:	strb	wzr, [x19, #64]
  4047c4:	str	w20, [x19, #68]
  4047c8:	sbfiz	x0, x20, #2, #32
  4047cc:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  4047d0:	str	x0, [x19, #72]
  4047d4:	cmp	w20, #0x0
  4047d8:	b.le	404800 <ferror@plt+0x1f30>
  4047dc:	sub	w1, w20, #0x1
  4047e0:	add	x1, x1, #0x1
  4047e4:	lsl	x1, x1, #2
  4047e8:	mov	x0, #0x0                   	// #0
  4047ec:	ldr	x2, [x19, #72]
  4047f0:	str	wzr, [x2, x0]
  4047f4:	add	x0, x0, #0x4
  4047f8:	cmp	x1, x0
  4047fc:	b.ne	4047ec <ferror@plt+0x1f1c>  // b.any
  404800:	strb	wzr, [x19, #108]
  404804:	ldr	x0, [x19]
  404808:	ldr	w1, [x0, #40]
  40480c:	mov	x0, x19
  404810:	bl	404724 <ferror@plt+0x1e54>
  404814:	mov	w0, #0x5e                  	// #94
  404818:	strb	w0, [x19, #116]
  40481c:	strb	w0, [x19, #117]
  404820:	strb	w0, [x19, #118]
  404824:	strb	wzr, [x19, #119]
  404828:	strb	wzr, [x19, #120]
  40482c:	strb	wzr, [x19, #121]
  404830:	strb	wzr, [x19, #122]
  404834:	strb	wzr, [x19, #123]
  404838:	str	wzr, [x19, #124]
  40483c:	strb	wzr, [x19, #128]
  404840:	strb	wzr, [x19, #129]
  404844:	strb	wzr, [x19, #130]
  404848:	str	wzr, [x19, #132]
  40484c:	str	xzr, [x19, #160]
  404850:	adrp	x0, 406000 <ferror@plt+0x3730>
  404854:	add	x0, x0, #0x4cc
  404858:	str	x0, [x19, #136]
  40485c:	adrp	x0, 404000 <ferror@plt+0x1730>
  404860:	add	x0, x0, #0x604
  404864:	str	x0, [x19, #144]
  404868:	adrp	x0, 404000 <ferror@plt+0x1730>
  40486c:	add	x0, x0, #0x434
  404870:	str	x0, [x19, #152]
  404874:	str	xzr, [x19, #168]
  404878:	str	xzr, [x19, #176]
  40487c:	str	xzr, [x19, #184]
  404880:	str	wzr, [x19, #200]
  404884:	str	xzr, [x19, #208]
  404888:	str	xzr, [x19, #192]
  40488c:	str	wzr, [x19, #216]
  404890:	strb	wzr, [x19, #220]
  404894:	strb	wzr, [x19, #221]
  404898:	strb	wzr, [x19, #222]
  40489c:	strb	wzr, [x19, #223]
  4048a0:	str	wzr, [x19, #224]
  4048a4:	strb	wzr, [x19, #228]
  4048a8:	strb	wzr, [x19, #229]
  4048ac:	str	xzr, [x19, #232]
  4048b0:	str	wzr, [x19, #240]
  4048b4:	str	wzr, [x19, #244]
  4048b8:	str	xzr, [x19, #248]
  4048bc:	str	xzr, [x19, #256]
  4048c0:	adrp	x0, 404000 <ferror@plt+0x1730>
  4048c4:	add	x0, x0, #0x144
  4048c8:	str	x0, [x19, #264]
  4048cc:	ldp	x19, x20, [sp, #16]
  4048d0:	ldr	x21, [sp, #32]
  4048d4:	ldp	x29, x30, [sp], #48
  4048d8:	ret
  4048dc:	stp	x29, x30, [sp, #-32]!
  4048e0:	mov	x29, sp
  4048e4:	str	x19, [sp, #16]
  4048e8:	cmp	w1, #0x0
  4048ec:	ldr	x19, [x0]
  4048f0:	mov	w0, #0x2                   	// #2
  4048f4:	csel	w0, w1, w0, ge  // ge = tcont
  4048f8:	bl	4074fc <ferror@plt+0x4c2c>
  4048fc:	strb	w0, [x19, #67]
  404900:	ldr	x19, [sp, #16]
  404904:	ldp	x29, x30, [sp], #32
  404908:	ret
  40490c:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  404910:	add	x1, x1, #0xa68
  404914:	add	x1, x1, #0x20
  404918:	ldr	x0, [x1, w0, sxtw #3]
  40491c:	ret
  404920:	stp	x29, x30, [sp, #-96]!
  404924:	mov	x29, sp
  404928:	stp	x19, x20, [sp, #16]
  40492c:	mov	x19, x0
  404930:	mov	w20, w1
  404934:	str	xzr, [sp, #88]
  404938:	ldr	x0, [x0]
  40493c:	ldrb	w1, [x0, #65]
  404940:	cbnz	w1, 404984 <ferror@plt+0x20b4>
  404944:	cmp	w20, #0x1
  404948:	b.ls	404978 <ferror@plt+0x20a8>  // b.plast
  40494c:	add	x3, sp, #0x58
  404950:	mov	w2, #0x2                   	// #2
  404954:	mov	w1, w20
  404958:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  40495c:	ldr	x0, [x0, #1896]
  404960:	bl	4292dc <ferror@plt+0x26a0c>
  404964:	ldr	x0, [sp, #88]
  404968:	cbz	x0, 404978 <ferror@plt+0x20a8>
  40496c:	ldr	x1, [x19, #208]
  404970:	cmp	x0, x1
  404974:	b.ne	404994 <ferror@plt+0x20c4>  // b.any
  404978:	ldp	x19, x20, [sp, #16]
  40497c:	ldp	x29, x30, [sp], #96
  404980:	ret
  404984:	bl	40c8b0 <ferror@plt+0x9fe0>
  404988:	ldr	x0, [x19]
  40498c:	strb	wzr, [x0, #65]
  404990:	b	404944 <ferror@plt+0x2074>
  404994:	str	x0, [x19, #208]
  404998:	ldr	w0, [x0, #20]
  40499c:	cbz	w0, 404978 <ferror@plt+0x20a8>
  4049a0:	stp	x21, x22, [sp, #32]
  4049a4:	stp	x23, x24, [sp, #48]
  4049a8:	str	x25, [sp, #64]
  4049ac:	mov	w24, #0x1                   	// #1
  4049b0:	mov	w22, #0x0                   	// #0
  4049b4:	adrp	x23, 458000 <_obstack_memory_used@@Base+0x11094>
  4049b8:	add	x23, x23, #0x588
  4049bc:	adrp	x21, 488000 <_obstack_memory_used@@Base+0x41094>
  4049c0:	add	x21, x21, #0x5e0
  4049c4:	b	404a50 <ferror@plt+0x2180>
  4049c8:	mov	w4, w22
  4049cc:	mov	x2, x23
  4049d0:	mov	x1, #0x20                  	// #32
  4049d4:	add	x0, x21, #0x8
  4049d8:	bl	4023a0 <snprintf@plt>
  4049dc:	eor	w0, w24, #0x1
  4049e0:	ldr	x25, [x19]
  4049e4:	adrp	x20, 458000 <_obstack_memory_used@@Base+0x11094>
  4049e8:	add	x1, x20, #0x5d0
  4049ec:	adrp	x20, 458000 <_obstack_memory_used@@Base+0x11094>
  4049f0:	add	x20, x20, #0x710
  4049f4:	cmp	w24, #0x0
  4049f8:	csel	x20, x20, x1, ne  // ne = any
  4049fc:	mov	w0, w0
  404a00:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  404a04:	add	x1, x1, #0xa68
  404a08:	add	x0, x1, x0, lsl #3
  404a0c:	ldr	x0, [x0, #152]
  404a10:	bl	402880 <gettext@plt>
  404a14:	add	x6, x21, #0x8
  404a18:	ldr	x1, [sp, #88]
  404a1c:	ldr	x5, [x1, #8]
  404a20:	adrp	x4, 458000 <_obstack_memory_used@@Base+0x11094>
  404a24:	add	x4, x4, #0x590
  404a28:	mov	x3, x0
  404a2c:	mov	x2, x20
  404a30:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  404a34:	add	x1, x1, #0x5d8
  404a38:	mov	x0, x25
  404a3c:	bl	40eca4 <ferror@plt+0xc3d4>
  404a40:	mov	w24, w22
  404a44:	ldr	x0, [sp, #88]
  404a48:	ldr	w0, [x0, #20]
  404a4c:	cbz	w0, 404abc <ferror@plt+0x21ec>
  404a50:	ldr	x1, [sp, #88]
  404a54:	ldr	w20, [x1, #20]
  404a58:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  404a5c:	ldr	x0, [x0, #1896]
  404a60:	bl	4283d8 <ferror@plt+0x25b08>
  404a64:	str	x0, [sp, #88]
  404a68:	ldr	w4, [x0]
  404a6c:	sub	w4, w20, w4
  404a70:	ldrb	w2, [x0, #6]
  404a74:	lsr	w3, w4, w2
  404a78:	ldr	w1, [x0, #16]
  404a7c:	add	w3, w3, w1
  404a80:	cbz	w24, 404ae4 <ferror@plt+0x2214>
  404a84:	ldrb	w1, [x19, #121]
  404a88:	cbz	w1, 404ae4 <ferror@plt+0x2214>
  404a8c:	mov	w1, #0x1                   	// #1
  404a90:	lsl	w1, w1, w2
  404a94:	sub	w1, w1, #0x1
  404a98:	and	w4, w1, w4
  404a9c:	ldrb	w0, [x0, #7]
  404aa0:	lsr	w4, w4, w0
  404aa4:	cbz	w3, 404ae8 <ferror@plt+0x2218>
  404aa8:	mov	x2, x23
  404aac:	cbz	w4, 4049d0 <ferror@plt+0x2100>
  404ab0:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  404ab4:	add	x2, x2, #0x580
  404ab8:	b	4049d0 <ferror@plt+0x2100>
  404abc:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x10094>
  404ac0:	add	x1, x1, #0xa40
  404ac4:	ldr	x0, [x19]
  404ac8:	bl	40eca4 <ferror@plt+0xc3d4>
  404acc:	ldr	x0, [x19]
  404ad0:	bl	40c8b0 <ferror@plt+0x9fe0>
  404ad4:	ldp	x21, x22, [sp, #32]
  404ad8:	ldp	x23, x24, [sp, #48]
  404adc:	ldr	x25, [sp, #64]
  404ae0:	b	404978 <ferror@plt+0x20a8>
  404ae4:	cbnz	w3, 4049c8 <ferror@plt+0x20f8>
  404ae8:	strb	wzr, [x21, #8]
  404aec:	b	4049dc <ferror@plt+0x210c>
  404af0:	stp	x29, x30, [sp, #-64]!
  404af4:	mov	x29, sp
  404af8:	stp	x23, x24, [sp, #48]
  404afc:	mov	w23, #0x0                   	// #0
  404b00:	tbnz	w1, #31, 404c44 <ferror@plt+0x2374>
  404b04:	stp	x19, x20, [sp, #16]
  404b08:	stp	x21, x22, [sp, #32]
  404b0c:	mov	x20, x0
  404b10:	mov	w19, w1
  404b14:	mov	w21, w2
  404b18:	mov	w22, w3
  404b1c:	ldr	w0, [x0, #68]
  404b20:	mov	w23, #0x0                   	// #0
  404b24:	cmp	w0, w1
  404b28:	b.le	404c3c <ferror@plt+0x236c>
  404b2c:	cmp	w2, #0xd
  404b30:	b.gt	404c54 <ferror@plt+0x2384>
  404b34:	sxtw	x24, w1
  404b38:	ldr	x0, [x20, #72]
  404b3c:	ldr	w23, [x0, x24, lsl #2]
  404b40:	cbz	w3, 404c2c <ferror@plt+0x235c>
  404b44:	cbnz	w23, 404b7c <ferror@plt+0x22ac>
  404b48:	ldr	x2, [x20, #168]
  404b4c:	ldr	x1, [x20, #176]
  404b50:	mov	w0, w19
  404b54:	blr	x2
  404b58:	mov	w23, #0x1                   	// #1
  404b5c:	cbz	w0, 404b74 <ferror@plt+0x22a4>
  404b60:	ldrb	w0, [x20, #64]
  404b64:	cmp	w0, #0x0
  404b68:	mov	w23, #0x4                   	// #4
  404b6c:	mov	w0, #0x6                   	// #6
  404b70:	csel	w23, w23, w0, ne  // ne = any
  404b74:	ldr	x0, [x20, #72]
  404b78:	str	w23, [x0, x24, lsl #2]
  404b7c:	ldr	w1, [x20, #88]
  404b80:	subs	w0, w1, #0x1
  404b84:	b.mi	404bd4 <ferror@plt+0x2304>  // b.first
  404b88:	ldr	x3, [x20, #80]
  404b8c:	sbfiz	x2, x0, #1, #32
  404b90:	add	x0, x2, w0, sxtw
  404b94:	lsl	x0, x0, #2
  404b98:	add	x4, x3, x0
  404b9c:	add	x2, x0, #0xc
  404ba0:	sub	w0, w1, #0x1
  404ba4:	add	x0, x0, x0, lsl #1
  404ba8:	sub	x2, x2, x0, lsl #2
  404bac:	sub	x3, x3, #0x18
  404bb0:	add	x2, x2, x3
  404bb4:	ldr	w0, [x4, #4]
  404bb8:	cmp	w0, w19
  404bbc:	b.eq	404bd0 <ferror@plt+0x2300>  // b.none
  404bc0:	sub	x4, x4, #0xc
  404bc4:	cmp	x4, x2
  404bc8:	b.ne	404bb4 <ferror@plt+0x22e4>  // b.any
  404bcc:	b	404bd4 <ferror@plt+0x2304>
  404bd0:	ldr	w23, [x4, #8]
  404bd4:	add	w1, w1, #0x1
  404bd8:	sbfiz	x24, x1, #1, #32
  404bdc:	add	x1, x24, w1, sxtw
  404be0:	lsl	x24, x1, #2
  404be4:	mov	x1, x24
  404be8:	ldr	x0, [x20, #80]
  404bec:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  404bf0:	str	x0, [x20, #80]
  404bf4:	sub	x1, x24, #0xc
  404bf8:	str	w22, [x0, x1]
  404bfc:	ldr	x0, [x20, #80]
  404c00:	add	x0, x0, x1
  404c04:	str	w19, [x0, #4]
  404c08:	ldr	x0, [x20, #80]
  404c0c:	add	x1, x0, x1
  404c10:	str	w21, [x1, #8]
  404c14:	ldr	w0, [x20, #88]
  404c18:	add	w0, w0, #0x1
  404c1c:	str	w0, [x20, #88]
  404c20:	ldp	x19, x20, [sp, #16]
  404c24:	ldp	x21, x22, [sp, #32]
  404c28:	b	404c44 <ferror@plt+0x2374>
  404c2c:	str	w2, [x0, x24, lsl #2]
  404c30:	ldp	x19, x20, [sp, #16]
  404c34:	ldp	x21, x22, [sp, #32]
  404c38:	b	404c44 <ferror@plt+0x2374>
  404c3c:	ldp	x19, x20, [sp, #16]
  404c40:	ldp	x21, x22, [sp, #32]
  404c44:	mov	w0, w23
  404c48:	ldp	x23, x24, [sp, #48]
  404c4c:	ldp	x29, x30, [sp], #64
  404c50:	ret
  404c54:	ldp	x19, x20, [sp, #16]
  404c58:	ldp	x21, x22, [sp, #32]
  404c5c:	b	404c44 <ferror@plt+0x2374>
  404c60:	stp	x29, x30, [sp, #-32]!
  404c64:	mov	x29, sp
  404c68:	str	x19, [sp, #16]
  404c6c:	mov	x19, x0
  404c70:	ldr	w1, [x0, #104]
  404c74:	add	w1, w1, #0x1
  404c78:	sbfiz	x1, x1, #2, #32
  404c7c:	ldr	x0, [x0, #96]
  404c80:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  404c84:	str	x0, [x19, #96]
  404c88:	ldr	w1, [x19, #104]
  404c8c:	add	w2, w1, #0x1
  404c90:	str	w2, [x19, #104]
  404c94:	ldr	w2, [x19, #88]
  404c98:	str	w2, [x0, w1, sxtw #2]
  404c9c:	ldr	x19, [sp, #16]
  404ca0:	ldp	x29, x30, [sp], #32
  404ca4:	ret
  404ca8:	stp	x29, x30, [sp, #-48]!
  404cac:	mov	x29, sp
  404cb0:	stp	x19, x20, [sp, #16]
  404cb4:	stp	x21, x22, [sp, #32]
  404cb8:	mov	x20, x0
  404cbc:	mov	w22, w1
  404cc0:	ldr	w21, [x0, #104]
  404cc4:	cbz	w21, 404cd8 <ferror@plt+0x2408>
  404cc8:	ldr	x0, [x0, #96]
  404ccc:	sub	w21, w21, #0x1
  404cd0:	str	w21, [x20, #104]
  404cd4:	ldr	w21, [x0, w21, sxtw #2]
  404cd8:	ldr	w2, [x20, #88]
  404cdc:	add	w2, w2, #0x1
  404ce0:	sbfiz	x19, x2, #1, #32
  404ce4:	add	x2, x19, w2, sxtw
  404ce8:	lsl	x19, x2, #2
  404cec:	mov	x1, x19
  404cf0:	ldr	x0, [x20, #80]
  404cf4:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  404cf8:	str	x0, [x20, #80]
  404cfc:	sub	x2, x19, #0xc
  404d00:	str	w22, [x0, x2]
  404d04:	ldr	x0, [x20, #80]
  404d08:	add	x0, x0, x2
  404d0c:	str	w21, [x0, #4]
  404d10:	ldr	x0, [x20, #80]
  404d14:	add	x2, x0, x2
  404d18:	mov	w0, #0xf                   	// #15
  404d1c:	str	w0, [x2, #8]
  404d20:	ldr	w0, [x20, #88]
  404d24:	add	w0, w0, #0x1
  404d28:	str	w0, [x20, #88]
  404d2c:	ldp	x19, x20, [sp, #16]
  404d30:	ldp	x21, x22, [sp, #32]
  404d34:	ldp	x29, x30, [sp], #48
  404d38:	ret
  404d3c:	mov	x4, x0
  404d40:	ldrb	w0, [x0]
  404d44:	cmp	w0, #0x2e
  404d48:	b.ne	404df8 <ferror@plt+0x2528>  // b.any
  404d4c:	mov	x0, x4
  404d50:	ldrb	w1, [x0, #1]
  404d54:	cmp	w1, #0x2e
  404d58:	b.ne	404d74 <ferror@plt+0x24a4>  // b.any
  404d5c:	ldrb	w1, [x0, #2]
  404d60:	cmp	w1, #0x2f
  404d64:	b.ne	404d74 <ferror@plt+0x24a4>  // b.any
  404d68:	ldrb	w1, [x0, #3]!
  404d6c:	cmp	w1, #0x2e
  404d70:	b.eq	404d50 <ferror@plt+0x2480>  // b.none
  404d74:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  404d78:	add	x1, x1, #0xa68
  404d7c:	add	x1, x1, #0xa8
  404d80:	ldrb	w2, [x1, #2]
  404d84:	cmp	w2, #0x2f
  404d88:	b.ne	404da4 <ferror@plt+0x24d4>  // b.any
  404d8c:	ldrb	w2, [x1, #3]!
  404d90:	cmp	w2, #0x2e
  404d94:	b.ne	404da4 <ferror@plt+0x24d4>  // b.any
  404d98:	ldrb	w2, [x1, #1]
  404d9c:	cmp	w2, #0x2e
  404da0:	b.eq	404d80 <ferror@plt+0x24b0>  // b.none
  404da4:	ldrb	w2, [x0]
  404da8:	ldrb	w3, [x1]
  404dac:	cmp	w3, #0x0
  404db0:	ccmp	w2, w3, #0x0, ne  // ne = any
  404db4:	ccmp	w2, #0x0, #0x4, eq  // eq = none
  404db8:	b.eq	404dd4 <ferror@plt+0x2504>  // b.none
  404dbc:	ldrb	w3, [x0, #1]!
  404dc0:	ldrb	w2, [x1, #1]!
  404dc4:	cmp	w3, #0x0
  404dc8:	ccmp	w3, w2, #0x0, ne  // ne = any
  404dcc:	ccmp	w2, #0x0, #0x4, eq  // eq = none
  404dd0:	b.ne	404dbc <ferror@plt+0x24ec>  // b.any
  404dd4:	cmp	x4, x0
  404dd8:	b.cs	404df4 <ferror@plt+0x2524>  // b.hs, b.nlast
  404ddc:	ldurb	w1, [x0, #-1]
  404de0:	cmp	w1, #0x2f
  404de4:	b.eq	404df4 <ferror@plt+0x2524>  // b.none
  404de8:	sub	x0, x0, #0x1
  404dec:	cmp	x4, x0
  404df0:	b.ne	404ddc <ferror@plt+0x250c>  // b.any
  404df4:	ret
  404df8:	mov	x0, x4
  404dfc:	b	404d74 <ferror@plt+0x24a4>
  404e00:	stp	x29, x30, [sp, #-304]!
  404e04:	mov	x29, sp
  404e08:	str	x19, [sp, #16]
  404e0c:	mov	x19, x0
  404e10:	str	x1, [sp, #248]
  404e14:	str	x2, [sp, #256]
  404e18:	str	x3, [sp, #264]
  404e1c:	str	x4, [sp, #272]
  404e20:	str	x5, [sp, #280]
  404e24:	str	x6, [sp, #288]
  404e28:	str	x7, [sp, #296]
  404e2c:	str	q0, [sp, #112]
  404e30:	str	q1, [sp, #128]
  404e34:	str	q2, [sp, #144]
  404e38:	str	q3, [sp, #160]
  404e3c:	str	q4, [sp, #176]
  404e40:	str	q5, [sp, #192]
  404e44:	str	q6, [sp, #208]
  404e48:	str	q7, [sp, #224]
  404e4c:	add	x0, sp, #0x130
  404e50:	str	x0, [sp, #40]
  404e54:	str	x0, [sp, #48]
  404e58:	add	x0, sp, #0xf0
  404e5c:	str	x0, [sp, #56]
  404e60:	mov	w0, #0xffffffc8            	// #-56
  404e64:	str	w0, [sp, #64]
  404e68:	mov	w0, #0xffffff80            	// #-128
  404e6c:	str	w0, [sp, #68]
  404e70:	bl	402810 <__errno_location@plt>
  404e74:	ldr	w0, [x0]
  404e78:	str	w0, [sp, #88]
  404e7c:	add	x0, sp, #0x28
  404e80:	str	x0, [sp, #80]
  404e84:	mov	x0, x19
  404e88:	bl	402880 <gettext@plt>
  404e8c:	str	x0, [sp, #72]
  404e90:	str	xzr, [sp, #96]
  404e94:	adrp	x19, 488000 <_obstack_memory_used@@Base+0x41094>
  404e98:	ldr	x0, [x19, #848]
  404e9c:	add	x1, sp, #0x48
  404ea0:	ldr	x0, [x0]
  404ea4:	bl	40ec58 <ferror@plt+0xc388>
  404ea8:	ldr	x0, [x19, #848]
  404eac:	ldr	x0, [x0]
  404eb0:	bl	40d06c <ferror@plt+0xa79c>
  404eb4:	ldr	x19, [sp, #16]
  404eb8:	ldp	x29, x30, [sp], #304
  404ebc:	ret
  404ec0:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  404ec4:	ldr	x0, [x0, #848]
  404ec8:	ldr	x0, [x0, #24]
  404ecc:	cmp	x0, #0x0
  404ed0:	cset	w0, ne  // ne = any
  404ed4:	ret
  404ed8:	stp	x29, x30, [sp, #-272]!
  404edc:	mov	x29, sp
  404ee0:	str	x19, [sp, #16]
  404ee4:	mov	x19, x0
  404ee8:	mov	x0, x1
  404eec:	str	x2, [sp, #224]
  404ef0:	str	x3, [sp, #232]
  404ef4:	str	x4, [sp, #240]
  404ef8:	str	x5, [sp, #248]
  404efc:	str	x6, [sp, #256]
  404f00:	str	x7, [sp, #264]
  404f04:	str	q0, [sp, #96]
  404f08:	str	q1, [sp, #112]
  404f0c:	str	q2, [sp, #128]
  404f10:	str	q3, [sp, #144]
  404f14:	str	q4, [sp, #160]
  404f18:	str	q5, [sp, #176]
  404f1c:	str	q6, [sp, #192]
  404f20:	str	q7, [sp, #208]
  404f24:	add	x1, sp, #0x110
  404f28:	str	x1, [sp, #64]
  404f2c:	str	x1, [sp, #72]
  404f30:	add	x1, sp, #0xe0
  404f34:	str	x1, [sp, #80]
  404f38:	mov	w1, #0xffffffd0            	// #-48
  404f3c:	str	w1, [sp, #88]
  404f40:	mov	w1, #0xffffff80            	// #-128
  404f44:	str	w1, [sp, #92]
  404f48:	bl	402880 <gettext@plt>
  404f4c:	ldp	x2, x3, [sp, #64]
  404f50:	stp	x2, x3, [sp, #32]
  404f54:	ldp	x2, x3, [sp, #80]
  404f58:	stp	x2, x3, [sp, #48]
  404f5c:	add	x2, sp, #0x20
  404f60:	mov	x1, x0
  404f64:	mov	x0, x19
  404f68:	bl	4027f0 <vfprintf@plt>
  404f6c:	ldr	x19, [sp, #16]
  404f70:	ldp	x29, x30, [sp], #272
  404f74:	ret
  404f78:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  404f7c:	ldr	x1, [x0, #848]
  404f80:	ldr	w0, [x1, #240]
  404f84:	add	w0, w0, #0x1
  404f88:	str	w0, [x1, #240]
  404f8c:	ret
  404f90:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  404f94:	ldr	x0, [x0, #848]
  404f98:	ldr	w1, [x0, #240]
  404f9c:	sub	w1, w1, #0x1
  404fa0:	str	w1, [x0, #240]
  404fa4:	cbnz	w1, 404fec <ferror@plt+0x271c>
  404fa8:	ldr	w1, [x0, #244]
  404fac:	cmp	w1, #0x0
  404fb0:	b.le	404fdc <ferror@plt+0x270c>
  404fb4:	ldr	x1, [x0, #256]
  404fb8:	cbz	x1, 404fdc <ferror@plt+0x270c>
  404fbc:	stp	x29, x30, [sp, #-16]!
  404fc0:	mov	x29, sp
  404fc4:	blr	x1
  404fc8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  404fcc:	ldr	x0, [x0, #848]
  404fd0:	str	wzr, [x0, #244]
  404fd4:	ldp	x29, x30, [sp], #16
  404fd8:	ret
  404fdc:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  404fe0:	ldr	x0, [x0, #848]
  404fe4:	str	wzr, [x0, #244]
  404fe8:	ret
  404fec:	ret
  404ff0:	stp	x29, x30, [sp, #-32]!
  404ff4:	mov	x29, sp
  404ff8:	stp	x19, x20, [sp, #16]
  404ffc:	mov	x19, x0
  405000:	ldr	x1, [x0, #264]
  405004:	cbz	x1, 40500c <ferror@plt+0x273c>
  405008:	blr	x1
  40500c:	bl	411c74 <ferror@plt+0xf3a4>
  405010:	ldr	x0, [x19, #72]
  405014:	bl	402690 <free@plt>
  405018:	str	xzr, [x19, #72]
  40501c:	ldr	x0, [x19]
  405020:	ldr	x1, [x0]
  405024:	ldr	x1, [x1]
  405028:	blr	x1
  40502c:	ldr	x0, [x19]
  405030:	bl	402690 <free@plt>
  405034:	str	xzr, [x19]
  405038:	ldr	x20, [x19, #232]
  40503c:	cbz	x20, 40505c <ferror@plt+0x278c>
  405040:	ldr	x1, [x20, #8]
  405044:	add	x0, x20, #0x8
  405048:	bl	407150 <ferror@plt+0x4880>
  40504c:	mov	x1, #0x28                  	// #40
  405050:	mov	x0, x20
  405054:	bl	447628 <_obstack_memory_used@@Base+0x6bc>
  405058:	str	xzr, [x19, #232]
  40505c:	ldp	x19, x20, [sp, #16]
  405060:	ldp	x29, x30, [sp], #32
  405064:	ret
  405068:	ldr	w2, [x0, #132]
  40506c:	cbz	w2, 4050d8 <ferror@plt+0x2808>
  405070:	stp	x29, x30, [sp, #-32]!
  405074:	mov	x29, sp
  405078:	stp	x19, x20, [sp, #16]
  40507c:	mov	x19, x0
  405080:	and	w20, w1, #0xff
  405084:	ldr	w0, [x0, #24]
  405088:	ldr	w1, [x19, #28]
  40508c:	add	w0, w0, w1
  405090:	ldr	w1, [x19, #56]
  405094:	add	w0, w0, w1
  405098:	cmp	w2, w0
  40509c:	b.le	4050ac <ferror@plt+0x27dc>
  4050a0:	ldp	x19, x20, [sp, #16]
  4050a4:	ldp	x29, x30, [sp], #32
  4050a8:	ret
  4050ac:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  4050b0:	add	x1, x1, #0x5e8
  4050b4:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  4050b8:	ldr	x0, [x0, #1320]
  4050bc:	bl	404ed8 <ferror@plt+0x2608>
  4050c0:	cbnz	w20, 4050cc <ferror@plt+0x27fc>
  4050c4:	mov	w0, #0x1                   	// #1
  4050c8:	bl	4022e0 <exit@plt>
  4050cc:	mov	x0, x19
  4050d0:	bl	404ff0 <ferror@plt+0x2720>
  4050d4:	b	4050c4 <ferror@plt+0x27f4>
  4050d8:	ret
  4050dc:	stp	x29, x30, [sp, #-48]!
  4050e0:	mov	x29, sp
  4050e4:	str	x19, [sp, #16]
  4050e8:	mov	x19, x0
  4050ec:	cmp	w1, #0x5
  4050f0:	b.hi	405178 <ferror@plt+0x28a8>  // b.pmore
  4050f4:	cmp	w1, #0x3
  4050f8:	b.hi	4051e4 <ferror@plt+0x2914>  // b.pmore
  4050fc:	cmp	w1, #0x2
  405100:	b.ne	405130 <ferror@plt+0x2860>  // b.any
  405104:	ldrb	w0, [x0, #120]
  405108:	cbnz	w0, 405238 <ferror@plt+0x2968>
  40510c:	mov	x0, x19
  405110:	bl	404ff0 <ferror@plt+0x2720>
  405114:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  405118:	add	x1, x1, #0x6f8
  40511c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  405120:	ldr	x0, [x0, #1320]
  405124:	bl	404ed8 <ferror@plt+0x2608>
  405128:	mov	w0, #0x1                   	// #1
  40512c:	bl	4022e0 <exit@plt>
  405130:	cmp	w1, #0x3
  405134:	b.ne	40523c <ferror@plt+0x296c>  // b.any
  405138:	mov	x3, #0x0                   	// #0
  40513c:	adrp	x2, 404000 <ferror@plt+0x1730>
  405140:	add	x2, x2, #0x3cc
  405144:	mov	w1, #0x0                   	// #0
  405148:	mov	x0, #0x0                   	// #0
  40514c:	bl	43270c <ferror@plt+0x2fe3c>
  405150:	str	wzr, [sp, #44]
  405154:	cbz	x0, 405198 <ferror@plt+0x28c8>
  405158:	add	x4, sp, #0x2c
  40515c:	adrp	x3, 404000 <ferror@plt+0x1730>
  405160:	add	x3, x3, #0x3cc
  405164:	adrp	x2, 404000 <ferror@plt+0x1730>
  405168:	add	x2, x2, #0x1c4
  40516c:	mov	w1, #0x2                   	// #2
  405170:	bl	432818 <ferror@plt+0x2ff48>
  405174:	b	405198 <ferror@plt+0x28c8>
  405178:	cmp	w1, #0x9
  40517c:	b.hi	40518c <ferror@plt+0x28bc>  // b.pmore
  405180:	ldr	x19, [sp, #16]
  405184:	ldp	x29, x30, [sp], #48
  405188:	ret
  40518c:	cmp	w1, #0xd
  405190:	b.ne	40523c <ferror@plt+0x296c>  // b.any
  405194:	str	wzr, [sp, #44]
  405198:	ldrb	w0, [x19, #120]
  40519c:	cbnz	w0, 40521c <ferror@plt+0x294c>
  4051a0:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  4051a4:	add	x1, x1, #0x648
  4051a8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  4051ac:	ldr	x0, [x0, #1320]
  4051b0:	bl	404ed8 <ferror@plt+0x2608>
  4051b4:	ldr	w0, [sp, #44]
  4051b8:	cmp	w0, #0x0
  4051bc:	b.gt	405220 <ferror@plt+0x2950>
  4051c0:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  4051c4:	add	x2, x2, #0xcc0
  4051c8:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  4051cc:	add	x1, x1, #0x6d8
  4051d0:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  4051d4:	ldr	x0, [x0, #1320]
  4051d8:	bl	404ed8 <ferror@plt+0x2608>
  4051dc:	mov	w0, #0x4                   	// #4
  4051e0:	bl	4022e0 <exit@plt>
  4051e4:	ldrb	w0, [x0, #120]
  4051e8:	cbnz	w0, 405218 <ferror@plt+0x2948>
  4051ec:	ldrb	w0, [x19, #128]
  4051f0:	cbz	w0, 405180 <ferror@plt+0x28b0>
  4051f4:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  4051f8:	add	x1, x1, #0x618
  4051fc:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  405200:	ldr	x0, [x0, #1320]
  405204:	bl	404ed8 <ferror@plt+0x2608>
  405208:	mov	x0, x19
  40520c:	bl	404ff0 <ferror@plt+0x2720>
  405210:	mov	w0, #0x1                   	// #1
  405214:	bl	4022e0 <exit@plt>
  405218:	bl	402590 <abort@plt>
  40521c:	bl	402590 <abort@plt>
  405220:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  405224:	add	x1, x1, #0x698
  405228:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  40522c:	ldr	x0, [x0, #1320]
  405230:	bl	404ed8 <ferror@plt+0x2608>
  405234:	b	4051c0 <ferror@plt+0x28f0>
  405238:	bl	402590 <abort@plt>
  40523c:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  405240:	add	x2, x2, #0x718
  405244:	mov	w1, #0x231                 	// #561
  405248:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40524c:	add	x0, x0, #0x738
  405250:	bl	4062a0 <ferror@plt+0x39d0>
  405254:	stp	x29, x30, [sp, #-144]!
  405258:	mov	x29, sp
  40525c:	stp	x19, x20, [sp, #16]
  405260:	stp	x21, x22, [sp, #32]
  405264:	mov	x19, x0
  405268:	mov	x20, x1
  40526c:	mov	w1, #0x0                   	// #0
  405270:	mov	x0, x20
  405274:	bl	40c310 <ferror@plt+0x9a40>
  405278:	mov	w1, w0
  40527c:	ldr	w21, [x20, #56]
  405280:	sub	w0, w21, #0x6
  405284:	tst	w0, #0xfffffffb
  405288:	b.ne	40531c <ferror@plt+0x2a4c>  // b.any
  40528c:	ldrb	w2, [x19, #129]
  405290:	mov	w0, #0x0                   	// #0
  405294:	cbnz	w2, 4054b0 <ferror@plt+0x2be0>
  405298:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  40529c:	ldr	x0, [x0, #1896]
  4052a0:	bl	429234 <ferror@plt+0x26964>
  4052a4:	cbz	w0, 4052b0 <ferror@plt+0x29e0>
  4052a8:	ldrb	w0, [x19, #130]
  4052ac:	cbz	w0, 4054b0 <ferror@plt+0x2be0>
  4052b0:	ldr	w0, [x20, #56]
  4052b4:	cmp	w0, #0xa
  4052b8:	b.ne	40531c <ferror@plt+0x2a4c>  // b.any
  4052bc:	ldrb	w0, [x19, #122]
  4052c0:	cmp	w0, #0x0
  4052c4:	mov	w21, #0x4                   	// #4
  4052c8:	mov	w0, #0x6                   	// #6
  4052cc:	csel	w21, w21, w0, ne  // ne = any
  4052d0:	str	w21, [x20, #56]
  4052d4:	ldr	w1, [x19, #216]
  4052d8:	cmp	w1, #0x0
  4052dc:	b.le	4054e8 <ferror@plt+0x2c18>
  4052e0:	stp	x23, x24, [sp, #48]
  4052e4:	stp	x25, x26, [sp, #64]
  4052e8:	cmp	w1, #0x2
  4052ec:	b.gt	4052f8 <ferror@plt+0x2a28>
  4052f0:	ldr	x0, [x19]
  4052f4:	bl	40d06c <ferror@plt+0xa79c>
  4052f8:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  4052fc:	add	x1, x1, #0x750
  405300:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  405304:	ldr	x0, [x0, #1320]
  405308:	bl	404ed8 <ferror@plt+0x2608>
  40530c:	mov	w1, #0x3                   	// #3
  405310:	mov	x0, x19
  405314:	bl	4050dc <ferror@plt+0x280c>
  405318:	bl	402590 <abort@plt>
  40531c:	ldr	w0, [x20, #56]
  405320:	cmp	w0, #0x8
  405324:	b.ne	4054c0 <ferror@plt+0x2bf0>  // b.any
  405328:	ldrb	w0, [x19, #220]
  40532c:	cbnz	w0, 4057f8 <ferror@plt+0x2f28>
  405330:	ldr	w1, [x19, #216]
  405334:	cmp	w1, #0x0
  405338:	b.gt	4052e0 <ferror@plt+0x2a10>
  40533c:	ldr	w0, [x20, #60]
  405340:	cbz	w0, 405390 <ferror@plt+0x2ac0>
  405344:	ldr	w1, [x19, #124]
  405348:	cmp	w0, w1
  40534c:	b.eq	405390 <ferror@plt+0x2ac0>  // b.none
  405350:	ldr	x2, [x19, #168]
  405354:	ldr	x1, [x19, #176]
  405358:	blr	x2
  40535c:	mov	w1, w0
  405360:	mov	w0, #0x0                   	// #0
  405364:	cbz	w1, 4054b0 <ferror@plt+0x2be0>
  405368:	ldr	w0, [x19, #88]
  40536c:	cmp	w0, #0x0
  405370:	b.gt	40551c <ferror@plt+0x2c4c>
  405374:	ldrsw	x1, [x20, #60]
  405378:	ldr	x0, [x19, #72]
  40537c:	ldr	w0, [x0, x1, lsl #2]
  405380:	cbnz	w0, 4055c0 <ferror@plt+0x2cf0>
  405384:	ldr	w0, [x20, #56]
  405388:	cmp	w0, #0x1
  40538c:	b.eq	405800 <ferror@plt+0x2f30>  // b.none
  405390:	ldr	w0, [x20, #56]
  405394:	cmp	w0, #0x8
  405398:	b.ne	40550c <ferror@plt+0x2c3c>  // b.any
  40539c:	ldr	w0, [x19, #216]
  4053a0:	add	w0, w0, #0x1
  4053a4:	str	w0, [x19, #216]
  4053a8:	ldr	w0, [x20, #56]
  4053ac:	cmp	w0, #0xd
  4053b0:	ccmp	w0, #0x3, #0x4, ne  // ne = any
  4053b4:	b.ne	4053e4 <ferror@plt+0x2b14>  // b.any
  4053b8:	ldr	w0, [x19, #24]
  4053bc:	cmp	w0, #0x0
  4053c0:	b.le	4055c8 <ferror@plt+0x2cf8>
  4053c4:	ldrb	w0, [x19, #120]
  4053c8:	cbz	w0, 4055d8 <ferror@plt+0x2d08>
  4053cc:	ldr	x3, [x19, #160]
  4053d0:	cbz	x3, 4053e4 <ferror@plt+0x2b14>
  4053d4:	ldr	x2, [x20, #8]
  4053d8:	ldr	x1, [x20]
  4053dc:	mov	x0, x19
  4053e0:	blr	x3
  4053e4:	ldr	w0, [x20, #56]
  4053e8:	cmp	w0, #0x4
  4053ec:	ccmp	w21, #0x6, #0x0, eq  // eq = none
  4053f0:	b.eq	405618 <ferror@plt+0x2d48>  // b.none
  4053f4:	add	x0, x19, w0, sxtw #2
  4053f8:	ldr	w1, [x0, #8]
  4053fc:	add	w1, w1, #0x1
  405400:	str	w1, [x0, #8]
  405404:	ldr	w0, [x19, #244]
  405408:	cbnz	w0, 40541c <ferror@plt+0x2b4c>
  40540c:	ldr	x1, [x19, #248]
  405410:	cbz	x1, 40541c <ferror@plt+0x2b4c>
  405414:	mov	x0, x19
  405418:	blr	x1
  40541c:	ldr	w0, [x19, #244]
  405420:	add	w0, w0, #0x1
  405424:	str	w0, [x19, #244]
  405428:	add	x0, x20, #0x30
  40542c:	str	x0, [x20, #24]
  405430:	str	xzr, [x20, #48]
  405434:	mov	x1, x20
  405438:	ldr	x0, [x19]
  40543c:	bl	40d18c <ferror@plt+0xa8bc>
  405440:	ldr	x2, [x19, #136]
  405444:	mov	x1, x20
  405448:	mov	x0, x19
  40544c:	blr	x2
  405450:	ldr	x0, [x19]
  405454:	bl	40cf60 <ferror@plt+0xa690>
  405458:	ldrb	w0, [x19, #119]
  40545c:	cbnz	w0, 405628 <ferror@plt+0x2d58>
  405460:	ldr	x3, [x19, #152]
  405464:	mov	w2, w21
  405468:	mov	x1, x20
  40546c:	mov	x0, x19
  405470:	blr	x3
  405474:	ldrb	w0, [x19, #229]
  405478:	cbnz	w0, 4056d4 <ferror@plt+0x2e04>
  40547c:	ldr	w1, [x20, #56]
  405480:	mov	x0, x19
  405484:	bl	4050dc <ferror@plt+0x280c>
  405488:	str	xzr, [x20, #48]
  40548c:	ldr	x0, [x19, #232]
  405490:	cbz	x0, 4054a0 <ferror@plt+0x2bd0>
  405494:	ldr	x1, [x20, #40]
  405498:	ldrb	w2, [x1, #161]
  40549c:	cbz	w2, 4057f0 <ferror@plt+0x2f20>
  4054a0:	ldr	w0, [x19, #216]
  4054a4:	sub	w0, w0, #0x1
  4054a8:	str	w0, [x19, #216]
  4054ac:	mov	w0, #0x1                   	// #1
  4054b0:	ldp	x19, x20, [sp, #16]
  4054b4:	ldp	x21, x22, [sp, #32]
  4054b8:	ldp	x29, x30, [sp], #144
  4054bc:	ret
  4054c0:	ldr	w1, [x19, #216]
  4054c4:	cmp	w1, #0x0
  4054c8:	b.le	4054e8 <ferror@plt+0x2c18>
  4054cc:	cmp	w0, #0xd
  4054d0:	ccmp	w0, #0x3, #0x4, ne  // ne = any
  4054d4:	b.ne	4052e0 <ferror@plt+0x2a10>  // b.any
  4054d8:	cmp	w1, #0x1
  4054dc:	b.ne	4052e0 <ferror@plt+0x2a10>  // b.any
  4054e0:	ldr	x0, [x19]
  4054e4:	bl	40d06c <ferror@plt+0xa79c>
  4054e8:	ldrb	w0, [x19, #64]
  4054ec:	cbz	w0, 40533c <ferror@plt+0x2a6c>
  4054f0:	ldr	w0, [x20, #56]
  4054f4:	cmp	w0, #0x6
  4054f8:	b.ne	40533c <ferror@plt+0x2a6c>  // b.any
  4054fc:	mov	w0, #0x4                   	// #4
  405500:	str	w0, [x20, #56]
  405504:	ldr	w0, [x20, #60]
  405508:	cbnz	w0, 40581c <ferror@plt+0x2f4c>
  40550c:	mov	w1, #0x0                   	// #0
  405510:	mov	x0, x19
  405514:	bl	405068 <ferror@plt+0x2798>
  405518:	b	40539c <ferror@plt+0x2acc>
  40551c:	stp	x23, x24, [sp, #48]
  405520:	mov	w1, #0x0                   	// #0
  405524:	mov	x0, x20
  405528:	bl	40c310 <ferror@plt+0x9a40>
  40552c:	mov	w23, w0
  405530:	ldr	w22, [x19, #88]
  405534:	subs	w22, w22, #0x1
  405538:	b.mi	405808 <ferror@plt+0x2f38>  // b.first
  40553c:	stp	x25, x26, [sp, #64]
  405540:	adrp	x24, 488000 <_obstack_memory_used@@Base+0x41094>
  405544:	b	405554 <ferror@plt+0x2c84>
  405548:	ldr	w22, [x1, #4]
  40554c:	subs	w22, w22, #0x1
  405550:	b.mi	4055b4 <ferror@plt+0x2ce4>  // b.first
  405554:	sbfiz	x1, x22, #1, #32
  405558:	add	x1, x1, w22, sxtw
  40555c:	lsl	x25, x1, #2
  405560:	ldr	x0, [x19, #80]
  405564:	mov	w2, w23
  405568:	ldr	w1, [x0, x1, lsl #2]
  40556c:	ldr	x0, [x24, #1896]
  405570:	bl	4295bc <ferror@plt+0x26cec>
  405574:	tbnz	w0, #31, 40554c <ferror@plt+0x2c7c>
  405578:	ldr	x1, [x19, #80]
  40557c:	add	x1, x1, x25
  405580:	ldr	w2, [x1, #8]
  405584:	cmp	w2, #0xf
  405588:	b.eq	405548 <ferror@plt+0x2c78>  // b.none
  40558c:	ldr	w0, [x1, #4]
  405590:	cbz	w0, 4055a0 <ferror@plt+0x2cd0>
  405594:	ldr	w1, [x20, #60]
  405598:	cmp	w0, w1
  40559c:	b.ne	40554c <ferror@plt+0x2c7c>  // b.any
  4055a0:	cbz	w2, 405810 <ferror@plt+0x2f40>
  4055a4:	str	w2, [x20, #56]
  4055a8:	ldp	x23, x24, [sp, #48]
  4055ac:	ldp	x25, x26, [sp, #64]
  4055b0:	b	405384 <ferror@plt+0x2ab4>
  4055b4:	ldp	x23, x24, [sp, #48]
  4055b8:	ldp	x25, x26, [sp, #64]
  4055bc:	b	405374 <ferror@plt+0x2aa4>
  4055c0:	str	w0, [x20, #56]
  4055c4:	b	405384 <ferror@plt+0x2ab4>
  4055c8:	ldr	w0, [x19, #28]
  4055cc:	cmp	w0, #0x0
  4055d0:	b.gt	4053c4 <ferror@plt+0x2af4>
  4055d4:	b	4053cc <ferror@plt+0x2afc>
  4055d8:	stp	x23, x24, [sp, #48]
  4055dc:	stp	x25, x26, [sp, #64]
  4055e0:	mov	w1, #0x0                   	// #0
  4055e4:	mov	x0, x20
  4055e8:	bl	40c310 <ferror@plt+0x9a40>
  4055ec:	add	x8, sp, #0x70
  4055f0:	bl	411d34 <ferror@plt+0xf464>
  4055f4:	ldr	w3, [sp, #120]
  4055f8:	ldr	x2, [sp, #112]
  4055fc:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  405600:	add	x1, x1, #0x790
  405604:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  405608:	ldr	x0, [x0, #1320]
  40560c:	bl	404ed8 <ferror@plt+0x2608>
  405610:	mov	w0, #0x4                   	// #4
  405614:	bl	4022e0 <exit@plt>
  405618:	ldr	w0, [x19, #56]
  40561c:	add	w0, w0, #0x1
  405620:	str	w0, [x19, #56]
  405624:	b	405404 <ferror@plt+0x2b34>
  405628:	ldr	x4, [x19, #184]
  40562c:	ldr	w3, [x20, #56]
  405630:	mov	w2, w21
  405634:	ldr	w1, [x20, #60]
  405638:	mov	x0, x19
  40563c:	blr	x4
  405640:	mov	x22, x0
  405644:	cbz	x0, 405460 <ferror@plt+0x2b90>
  405648:	stp	x23, x24, [sp, #48]
  40564c:	ldr	x23, [x19]
  405650:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  405654:	add	x1, x1, #0x7c0
  405658:	mov	x0, x23
  40565c:	bl	40cf0c <ferror@plt+0xa63c>
  405660:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  405664:	add	x0, x0, #0xa68
  405668:	ldrsw	x1, [x20, #56]
  40566c:	add	x0, x0, #0x20
  405670:	ldr	x24, [x0, x1, lsl #3]
  405674:	mov	x0, x24
  405678:	bl	4022b0 <strlen@plt>
  40567c:	mov	x2, x0
  405680:	mov	x1, x24
  405684:	ldrb	w0, [x23, #67]
  405688:	bl	40744c <ferror@plt+0x4b7c>
  40568c:	mov	x1, x0
  405690:	mov	x0, x23
  405694:	bl	40cf0c <ferror@plt+0xa63c>
  405698:	mov	x1, x22
  40569c:	mov	x0, x23
  4056a0:	bl	40cf0c <ferror@plt+0xa63c>
  4056a4:	ldrb	w0, [x23, #67]
  4056a8:	bl	4074e0 <ferror@plt+0x4c10>
  4056ac:	mov	x1, x0
  4056b0:	mov	x0, x23
  4056b4:	bl	40cf0c <ferror@plt+0xa63c>
  4056b8:	mov	w1, #0x5d                  	// #93
  4056bc:	mov	x0, x23
  4056c0:	bl	40c914 <ferror@plt+0xa044>
  4056c4:	mov	x0, x22
  4056c8:	bl	402690 <free@plt>
  4056cc:	ldp	x23, x24, [sp, #48]
  4056d0:	b	405460 <ferror@plt+0x2b90>
  4056d4:	stp	x23, x24, [sp, #48]
  4056d8:	ldr	x22, [x19]
  4056dc:	ldr	x23, [x20, #40]
  4056e0:	cbz	x22, 40570c <ferror@plt+0x2e3c>
  4056e4:	cbz	x23, 405728 <ferror@plt+0x2e58>
  4056e8:	ldr	w0, [x23, #120]
  4056ec:	cbz	w0, 4057e0 <ferror@plt+0x2f10>
  4056f0:	stp	x25, x26, [sp, #64]
  4056f4:	mov	w21, #0x0                   	// #0
  4056f8:	adrp	x25, 458000 <_obstack_memory_used@@Base+0x11094>
  4056fc:	add	x25, x25, #0x7e0
  405700:	adrp	x24, 458000 <_obstack_memory_used@@Base+0x11094>
  405704:	add	x24, x24, #0x7e8
  405708:	b	4057c0 <ferror@plt+0x2ef0>
  40570c:	stp	x25, x26, [sp, #64]
  405710:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  405714:	add	x2, x2, #0x7c8
  405718:	mov	w1, #0x322                 	// #802
  40571c:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  405720:	add	x0, x0, #0x738
  405724:	bl	4062a0 <ferror@plt+0x39d0>
  405728:	stp	x25, x26, [sp, #64]
  40572c:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  405730:	add	x2, x2, #0x7c8
  405734:	mov	w1, #0x323                 	// #803
  405738:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40573c:	add	x0, x0, #0x738
  405740:	bl	4062a0 <ferror@plt+0x39d0>
  405744:	add	x0, x23, w21, sxtw #3
  405748:	add	x0, x0, #0x80
  40574c:	ldr	x26, [x0]
  405750:	add	x8, sp, #0x50
  405754:	ldr	w0, [x26]
  405758:	bl	411d34 <ferror@plt+0xf464>
  40575c:	mov	x1, x25
  405760:	mov	x0, x22
  405764:	bl	40cf0c <ferror@plt+0xa63c>
  405768:	ldr	x1, [sp, #80]
  40576c:	mov	x0, x22
  405770:	bl	406654 <ferror@plt+0x3d84>
  405774:	add	x8, sp, #0x70
  405778:	ldr	w0, [x26, #4]
  40577c:	bl	411d34 <ferror@plt+0xf464>
  405780:	ldr	w5, [sp, #124]
  405784:	ldr	w4, [sp, #120]
  405788:	ldr	w3, [sp, #92]
  40578c:	ldr	w2, [sp, #88]
  405790:	mov	x1, x24
  405794:	mov	x0, x22
  405798:	bl	40ed44 <ferror@plt+0xc474>
  40579c:	ldr	x1, [x26, #8]
  4057a0:	mov	x0, x22
  4057a4:	bl	406654 <ferror@plt+0x3d84>
  4057a8:	mov	x0, x22
  4057ac:	bl	40c8b0 <ferror@plt+0x9fe0>
  4057b0:	add	w21, w21, #0x1
  4057b4:	ldr	w0, [x23, #120]
  4057b8:	cmp	w0, w21
  4057bc:	b.ls	4057dc <ferror@plt+0x2f0c>  // b.plast
  4057c0:	cmp	w21, #0x1
  4057c4:	b.le	405744 <ferror@plt+0x2e74>
  4057c8:	sbfiz	x0, x21, #3, #32
  4057cc:	sub	x1, x0, #0x10
  4057d0:	ldr	x0, [x23, #152]
  4057d4:	add	x0, x0, x1
  4057d8:	b	40574c <ferror@plt+0x2e7c>
  4057dc:	ldp	x25, x26, [sp, #64]
  4057e0:	ldr	x0, [x19]
  4057e4:	bl	40c6e4 <ferror@plt+0x9e14>
  4057e8:	ldp	x23, x24, [sp, #48]
  4057ec:	b	40547c <ferror@plt+0x2bac>
  4057f0:	bl	40badc <ferror@plt+0x920c>
  4057f4:	b	4054a0 <ferror@plt+0x2bd0>
  4057f8:	mov	w0, #0x0                   	// #0
  4057fc:	b	4054b0 <ferror@plt+0x2be0>
  405800:	mov	w0, #0x0                   	// #0
  405804:	b	4054b0 <ferror@plt+0x2be0>
  405808:	ldp	x23, x24, [sp, #48]
  40580c:	b	405374 <ferror@plt+0x2aa4>
  405810:	ldp	x23, x24, [sp, #48]
  405814:	ldp	x25, x26, [sp, #64]
  405818:	b	405374 <ferror@plt+0x2aa4>
  40581c:	ldr	w1, [x19, #124]
  405820:	cmp	w1, w0
  405824:	b.ne	405350 <ferror@plt+0x2a80>  // b.any
  405828:	b	40550c <ferror@plt+0x2c3c>
  40582c:	stp	x29, x30, [sp, #-96]!
  405830:	mov	x29, sp
  405834:	stp	x19, x20, [sp, #16]
  405838:	mov	w20, w1
  40583c:	mov	x1, x2
  405840:	mov	x2, x3
  405844:	cmp	w4, #0xb
  405848:	b.ne	4058a0 <ferror@plt+0x2fd0>  // b.any
  40584c:	adrp	x3, 488000 <_obstack_memory_used@@Base+0x41094>
  405850:	ldr	x3, [x3, #848]
  405854:	ldrb	w3, [x3, #123]
  405858:	cmp	w3, #0x0
  40585c:	mov	w4, #0x6                   	// #6
  405860:	mov	w3, #0x4                   	// #4
  405864:	csel	w4, w4, w3, ne  // ne = any
  405868:	mov	x3, x0
  40586c:	add	x0, sp, #0x20
  405870:	bl	40634c <ferror@plt+0x3a7c>
  405874:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  405878:	ldr	x0, [x0, #848]
  40587c:	ldr	w0, [x0, #124]
  405880:	str	w0, [sp, #92]
  405884:	add	x1, sp, #0x20
  405888:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  40588c:	ldr	x0, [x0, #848]
  405890:	bl	405254 <ferror@plt+0x2984>
  405894:	ldp	x19, x20, [sp, #16]
  405898:	ldp	x29, x30, [sp], #96
  40589c:	ret
  4058a0:	mov	w19, w4
  4058a4:	mov	x3, x0
  4058a8:	add	x0, sp, #0x20
  4058ac:	bl	40634c <ferror@plt+0x3a7c>
  4058b0:	sub	w19, w19, #0x6
  4058b4:	tst	w19, #0xfffffffb
  4058b8:	b.ne	405884 <ferror@plt+0x2fb4>  // b.any
  4058bc:	str	w20, [sp, #92]
  4058c0:	b	405884 <ferror@plt+0x2fb4>
  4058c4:	stp	x29, x30, [sp, #-416]!
  4058c8:	mov	x29, sp
  4058cc:	stp	x19, x20, [sp, #16]
  4058d0:	stp	x21, x22, [sp, #32]
  4058d4:	mov	w21, w0
  4058d8:	mov	w22, w1
  4058dc:	mov	w19, w2
  4058e0:	mov	x20, x3
  4058e4:	str	x4, [sp, #384]
  4058e8:	str	x5, [sp, #392]
  4058ec:	str	x6, [sp, #400]
  4058f0:	str	x7, [sp, #408]
  4058f4:	str	q0, [sp, #256]
  4058f8:	str	q1, [sp, #272]
  4058fc:	str	q2, [sp, #288]
  405900:	str	q3, [sp, #304]
  405904:	str	q4, [sp, #320]
  405908:	str	q5, [sp, #336]
  40590c:	str	q6, [sp, #352]
  405910:	str	q7, [sp, #368]
  405914:	add	x0, sp, #0xf8
  405918:	bl	404f78 <ferror@plt+0x26a8>
  40591c:	add	x0, sp, #0x1a0
  405920:	str	x0, [sp, #216]
  405924:	str	x0, [sp, #224]
  405928:	add	x0, sp, #0x180
  40592c:	str	x0, [sp, #232]
  405930:	mov	w0, #0xffffffe0            	// #-32
  405934:	str	w0, [sp, #240]
  405938:	mov	w0, #0xffffff80            	// #-128
  40593c:	str	w0, [sp, #244]
  405940:	mov	x3, #0x0                   	// #0
  405944:	mov	w2, w22
  405948:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  40594c:	ldr	x1, [x0, #1896]
  405950:	add	x0, sp, #0x30
  405954:	bl	42a37c <ferror@plt+0x27aac>
  405958:	mov	w4, w21
  40595c:	add	x3, sp, #0xd8
  405960:	mov	x2, x20
  405964:	mov	w1, w19
  405968:	add	x0, sp, #0x30
  40596c:	bl	40582c <ferror@plt+0x2f5c>
  405970:	mov	w19, w0
  405974:	add	x0, sp, #0x30
  405978:	bl	42a10c <ferror@plt+0x2783c>
  40597c:	add	x0, sp, #0xf8
  405980:	bl	404f90 <ferror@plt+0x26c0>
  405984:	mov	w0, w19
  405988:	ldp	x19, x20, [sp, #16]
  40598c:	ldp	x21, x22, [sp, #32]
  405990:	ldp	x29, x30, [sp], #416
  405994:	ret
  405998:	stp	x29, x30, [sp, #-256]!
  40599c:	mov	x29, sp
  4059a0:	stp	x19, x20, [sp, #16]
  4059a4:	stp	x21, x22, [sp, #32]
  4059a8:	mov	w22, w0
  4059ac:	mov	x19, x1
  4059b0:	mov	w20, w2
  4059b4:	mov	x21, x3
  4059b8:	str	x4, [sp, #224]
  4059bc:	str	x5, [sp, #232]
  4059c0:	str	x6, [sp, #240]
  4059c4:	str	x7, [sp, #248]
  4059c8:	str	q0, [sp, #96]
  4059cc:	str	q1, [sp, #112]
  4059d0:	str	q2, [sp, #128]
  4059d4:	str	q3, [sp, #144]
  4059d8:	str	q4, [sp, #160]
  4059dc:	str	q5, [sp, #176]
  4059e0:	str	q6, [sp, #192]
  4059e4:	str	q7, [sp, #208]
  4059e8:	add	x0, sp, #0x58
  4059ec:	bl	404f78 <ferror@plt+0x26a8>
  4059f0:	add	x0, sp, #0x100
  4059f4:	str	x0, [sp, #56]
  4059f8:	str	x0, [sp, #64]
  4059fc:	add	x0, sp, #0xe0
  405a00:	str	x0, [sp, #72]
  405a04:	mov	w0, #0xffffffe0            	// #-32
  405a08:	str	w0, [sp, #80]
  405a0c:	mov	w0, #0xffffff80            	// #-128
  405a10:	str	w0, [sp, #84]
  405a14:	mov	w4, w22
  405a18:	add	x3, sp, #0x38
  405a1c:	mov	x2, x21
  405a20:	mov	w1, w20
  405a24:	mov	x0, x19
  405a28:	bl	40582c <ferror@plt+0x2f5c>
  405a2c:	mov	w19, w0
  405a30:	add	x0, sp, #0x58
  405a34:	bl	404f90 <ferror@plt+0x26c0>
  405a38:	mov	w0, w19
  405a3c:	ldp	x19, x20, [sp, #16]
  405a40:	ldp	x21, x22, [sp, #32]
  405a44:	ldp	x29, x30, [sp], #256
  405a48:	ret
  405a4c:	stp	x29, x30, [sp, #-224]!
  405a50:	mov	x29, sp
  405a54:	stp	x19, x20, [sp, #16]
  405a58:	stp	x21, x22, [sp, #32]
  405a5c:	mov	w22, w0
  405a60:	mov	w19, w2
  405a64:	mov	x20, x3
  405a68:	mov	x21, x4
  405a6c:	mov	x3, #0x0                   	// #0
  405a70:	mov	w2, w1
  405a74:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  405a78:	ldr	x1, [x0, #1896]
  405a7c:	add	x0, sp, #0x38
  405a80:	bl	42a37c <ferror@plt+0x27aac>
  405a84:	mov	w4, w22
  405a88:	mov	x3, x21
  405a8c:	mov	x2, x20
  405a90:	mov	w1, w19
  405a94:	add	x0, sp, #0x38
  405a98:	bl	40582c <ferror@plt+0x2f5c>
  405a9c:	mov	w19, w0
  405aa0:	add	x0, sp, #0x38
  405aa4:	bl	42a10c <ferror@plt+0x2783c>
  405aa8:	mov	w0, w19
  405aac:	ldp	x19, x20, [sp, #16]
  405ab0:	ldp	x21, x22, [sp, #32]
  405ab4:	ldp	x29, x30, [sp], #224
  405ab8:	ret
  405abc:	stp	x29, x30, [sp, #-416]!
  405ac0:	mov	x29, sp
  405ac4:	stp	x19, x20, [sp, #16]
  405ac8:	mov	w20, w0
  405acc:	mov	x19, x1
  405ad0:	str	x2, [sp, #368]
  405ad4:	str	x3, [sp, #376]
  405ad8:	str	x4, [sp, #384]
  405adc:	str	x5, [sp, #392]
  405ae0:	str	x6, [sp, #400]
  405ae4:	str	x7, [sp, #408]
  405ae8:	str	q0, [sp, #240]
  405aec:	str	q1, [sp, #256]
  405af0:	str	q2, [sp, #272]
  405af4:	str	q3, [sp, #288]
  405af8:	str	q4, [sp, #304]
  405afc:	str	q5, [sp, #320]
  405b00:	str	q6, [sp, #336]
  405b04:	str	q7, [sp, #352]
  405b08:	add	x0, sp, #0xe8
  405b0c:	bl	404f78 <ferror@plt+0x26a8>
  405b10:	add	x0, sp, #0x1a0
  405b14:	str	x0, [sp, #200]
  405b18:	str	x0, [sp, #208]
  405b1c:	add	x0, sp, #0x170
  405b20:	str	x0, [sp, #216]
  405b24:	mov	w0, #0xffffffd0            	// #-48
  405b28:	str	w0, [sp, #224]
  405b2c:	mov	w0, #0xffffff80            	// #-128
  405b30:	str	w0, [sp, #228]
  405b34:	mov	x3, #0x0                   	// #0
  405b38:	mov	w2, w20
  405b3c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  405b40:	ldr	x1, [x0, #1896]
  405b44:	add	x0, sp, #0x20
  405b48:	bl	42a37c <ferror@plt+0x27aac>
  405b4c:	mov	w4, #0x8                   	// #8
  405b50:	add	x3, sp, #0xc8
  405b54:	mov	x2, x19
  405b58:	mov	w1, #0xffffffff            	// #-1
  405b5c:	add	x0, sp, #0x20
  405b60:	bl	40582c <ferror@plt+0x2f5c>
  405b64:	add	x0, sp, #0x20
  405b68:	bl	42a10c <ferror@plt+0x2783c>
  405b6c:	add	x0, sp, #0xe8
  405b70:	bl	404f90 <ferror@plt+0x26c0>
  405b74:	ldp	x19, x20, [sp, #16]
  405b78:	ldp	x29, x30, [sp], #416
  405b7c:	ret
  405b80:	stp	x29, x30, [sp, #-416]!
  405b84:	mov	x29, sp
  405b88:	stp	x19, x20, [sp, #16]
  405b8c:	mov	w19, w0
  405b90:	mov	x20, x1
  405b94:	str	x2, [sp, #368]
  405b98:	str	x3, [sp, #376]
  405b9c:	str	x4, [sp, #384]
  405ba0:	str	x5, [sp, #392]
  405ba4:	str	x6, [sp, #400]
  405ba8:	str	x7, [sp, #408]
  405bac:	str	q0, [sp, #240]
  405bb0:	str	q1, [sp, #256]
  405bb4:	str	q2, [sp, #272]
  405bb8:	str	q3, [sp, #288]
  405bbc:	str	q4, [sp, #304]
  405bc0:	str	q5, [sp, #320]
  405bc4:	str	q6, [sp, #336]
  405bc8:	str	q7, [sp, #352]
  405bcc:	add	x0, sp, #0xe8
  405bd0:	bl	404f78 <ferror@plt+0x26a8>
  405bd4:	add	x0, sp, #0x1a0
  405bd8:	str	x0, [sp, #200]
  405bdc:	str	x0, [sp, #208]
  405be0:	add	x0, sp, #0x170
  405be4:	str	x0, [sp, #216]
  405be8:	mov	w0, #0xffffffd0            	// #-48
  405bec:	str	w0, [sp, #224]
  405bf0:	mov	w0, #0xffffff80            	// #-128
  405bf4:	str	w0, [sp, #228]
  405bf8:	mov	x3, #0x0                   	// #0
  405bfc:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  405c00:	ldr	w2, [x0, #1920]
  405c04:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  405c08:	ldr	x1, [x0, #1896]
  405c0c:	add	x0, sp, #0x20
  405c10:	bl	42a37c <ferror@plt+0x27aac>
  405c14:	mov	w4, #0x6                   	// #6
  405c18:	add	x3, sp, #0xc8
  405c1c:	mov	x2, x20
  405c20:	mov	w1, w19
  405c24:	add	x0, sp, #0x20
  405c28:	bl	40582c <ferror@plt+0x2f5c>
  405c2c:	mov	w19, w0
  405c30:	add	x0, sp, #0x20
  405c34:	bl	42a10c <ferror@plt+0x2783c>
  405c38:	add	x0, sp, #0xe8
  405c3c:	bl	404f90 <ferror@plt+0x26c0>
  405c40:	mov	w0, w19
  405c44:	ldp	x19, x20, [sp, #16]
  405c48:	ldp	x29, x30, [sp], #416
  405c4c:	ret
  405c50:	stp	x29, x30, [sp, #-432]!
  405c54:	mov	x29, sp
  405c58:	stp	x19, x20, [sp, #16]
  405c5c:	str	x21, [sp, #32]
  405c60:	mov	w21, w0
  405c64:	mov	w19, w1
  405c68:	mov	x20, x2
  405c6c:	str	x3, [sp, #392]
  405c70:	str	x4, [sp, #400]
  405c74:	str	x5, [sp, #408]
  405c78:	str	x6, [sp, #416]
  405c7c:	str	x7, [sp, #424]
  405c80:	str	q0, [sp, #256]
  405c84:	str	q1, [sp, #272]
  405c88:	str	q2, [sp, #288]
  405c8c:	str	q3, [sp, #304]
  405c90:	str	q4, [sp, #320]
  405c94:	str	q5, [sp, #336]
  405c98:	str	q6, [sp, #352]
  405c9c:	str	q7, [sp, #368]
  405ca0:	add	x0, sp, #0xf8
  405ca4:	bl	404f78 <ferror@plt+0x26a8>
  405ca8:	add	x0, sp, #0x1b0
  405cac:	str	x0, [sp, #216]
  405cb0:	str	x0, [sp, #224]
  405cb4:	add	x0, sp, #0x180
  405cb8:	str	x0, [sp, #232]
  405cbc:	mov	w0, #0xffffffd8            	// #-40
  405cc0:	str	w0, [sp, #240]
  405cc4:	mov	w0, #0xffffff80            	// #-128
  405cc8:	str	w0, [sp, #244]
  405ccc:	mov	x3, #0x0                   	// #0
  405cd0:	mov	w2, w21
  405cd4:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  405cd8:	ldr	x1, [x0, #1896]
  405cdc:	add	x0, sp, #0x30
  405ce0:	bl	42a37c <ferror@plt+0x27aac>
  405ce4:	mov	w4, #0x6                   	// #6
  405ce8:	add	x3, sp, #0xd8
  405cec:	mov	x2, x20
  405cf0:	mov	w1, w19
  405cf4:	add	x0, sp, #0x30
  405cf8:	bl	40582c <ferror@plt+0x2f5c>
  405cfc:	mov	w19, w0
  405d00:	add	x0, sp, #0x30
  405d04:	bl	42a10c <ferror@plt+0x2783c>
  405d08:	add	x0, sp, #0xf8
  405d0c:	bl	404f90 <ferror@plt+0x26c0>
  405d10:	mov	w0, w19
  405d14:	ldp	x19, x20, [sp, #16]
  405d18:	ldr	x21, [sp, #32]
  405d1c:	ldp	x29, x30, [sp], #432
  405d20:	ret
  405d24:	stp	x29, x30, [sp, #-432]!
  405d28:	mov	x29, sp
  405d2c:	stp	x19, x20, [sp, #16]
  405d30:	str	x21, [sp, #32]
  405d34:	mov	w21, w0
  405d38:	mov	w19, w1
  405d3c:	mov	x20, x2
  405d40:	str	x3, [sp, #392]
  405d44:	str	x4, [sp, #400]
  405d48:	str	x5, [sp, #408]
  405d4c:	str	x6, [sp, #416]
  405d50:	str	x7, [sp, #424]
  405d54:	str	q0, [sp, #256]
  405d58:	str	q1, [sp, #272]
  405d5c:	str	q2, [sp, #288]
  405d60:	str	q3, [sp, #304]
  405d64:	str	q4, [sp, #320]
  405d68:	str	q5, [sp, #336]
  405d6c:	str	q6, [sp, #352]
  405d70:	str	q7, [sp, #368]
  405d74:	add	x0, sp, #0xf8
  405d78:	bl	404f78 <ferror@plt+0x26a8>
  405d7c:	add	x0, sp, #0x1b0
  405d80:	str	x0, [sp, #216]
  405d84:	str	x0, [sp, #224]
  405d88:	add	x0, sp, #0x180
  405d8c:	str	x0, [sp, #232]
  405d90:	mov	w0, #0xffffffd8            	// #-40
  405d94:	str	w0, [sp, #240]
  405d98:	mov	w0, #0xffffff80            	// #-128
  405d9c:	str	w0, [sp, #244]
  405da0:	mov	x3, #0x0                   	// #0
  405da4:	mov	w2, w21
  405da8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  405dac:	ldr	x1, [x0, #1896]
  405db0:	add	x0, sp, #0x30
  405db4:	bl	42a37c <ferror@plt+0x27aac>
  405db8:	mov	w4, #0xa                   	// #10
  405dbc:	add	x3, sp, #0xd8
  405dc0:	mov	x2, x20
  405dc4:	mov	w1, w19
  405dc8:	add	x0, sp, #0x30
  405dcc:	bl	40582c <ferror@plt+0x2f5c>
  405dd0:	mov	w19, w0
  405dd4:	add	x0, sp, #0x30
  405dd8:	bl	42a10c <ferror@plt+0x2783c>
  405ddc:	add	x0, sp, #0xf8
  405de0:	bl	404f90 <ferror@plt+0x26c0>
  405de4:	mov	w0, w19
  405de8:	ldp	x19, x20, [sp, #16]
  405dec:	ldr	x21, [sp, #32]
  405df0:	ldp	x29, x30, [sp], #432
  405df4:	ret
  405df8:	stp	x29, x30, [sp, #-416]!
  405dfc:	mov	x29, sp
  405e00:	stp	x19, x20, [sp, #16]
  405e04:	mov	w20, w0
  405e08:	mov	x19, x1
  405e0c:	str	x2, [sp, #368]
  405e10:	str	x3, [sp, #376]
  405e14:	str	x4, [sp, #384]
  405e18:	str	x5, [sp, #392]
  405e1c:	str	x6, [sp, #400]
  405e20:	str	x7, [sp, #408]
  405e24:	str	q0, [sp, #240]
  405e28:	str	q1, [sp, #256]
  405e2c:	str	q2, [sp, #272]
  405e30:	str	q3, [sp, #288]
  405e34:	str	q4, [sp, #304]
  405e38:	str	q5, [sp, #320]
  405e3c:	str	q6, [sp, #336]
  405e40:	str	q7, [sp, #352]
  405e44:	add	x0, sp, #0xe8
  405e48:	bl	404f78 <ferror@plt+0x26a8>
  405e4c:	add	x0, sp, #0x1a0
  405e50:	str	x0, [sp, #200]
  405e54:	str	x0, [sp, #208]
  405e58:	add	x0, sp, #0x170
  405e5c:	str	x0, [sp, #216]
  405e60:	mov	w0, #0xffffffd0            	// #-48
  405e64:	str	w0, [sp, #224]
  405e68:	mov	w0, #0xffffff80            	// #-128
  405e6c:	str	w0, [sp, #228]
  405e70:	mov	x3, #0x0                   	// #0
  405e74:	mov	w2, w20
  405e78:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  405e7c:	ldr	x1, [x0, #1896]
  405e80:	add	x0, sp, #0x20
  405e84:	bl	42a37c <ferror@plt+0x27aac>
  405e88:	mov	w4, #0xb                   	// #11
  405e8c:	add	x3, sp, #0xc8
  405e90:	mov	x2, x19
  405e94:	mov	w1, #0xffffffff            	// #-1
  405e98:	add	x0, sp, #0x20
  405e9c:	bl	40582c <ferror@plt+0x2f5c>
  405ea0:	mov	w19, w0
  405ea4:	add	x0, sp, #0x20
  405ea8:	bl	42a10c <ferror@plt+0x2783c>
  405eac:	add	x0, sp, #0xe8
  405eb0:	bl	404f90 <ferror@plt+0x26c0>
  405eb4:	mov	w0, w19
  405eb8:	ldp	x19, x20, [sp, #16]
  405ebc:	ldp	x29, x30, [sp], #416
  405ec0:	ret
  405ec4:	stp	x29, x30, [sp, #-432]!
  405ec8:	mov	x29, sp
  405ecc:	str	x19, [sp, #16]
  405ed0:	mov	x19, x0
  405ed4:	str	x1, [sp, #376]
  405ed8:	str	x2, [sp, #384]
  405edc:	str	x3, [sp, #392]
  405ee0:	str	x4, [sp, #400]
  405ee4:	str	x5, [sp, #408]
  405ee8:	str	x6, [sp, #416]
  405eec:	str	x7, [sp, #424]
  405ef0:	str	q0, [sp, #240]
  405ef4:	str	q1, [sp, #256]
  405ef8:	str	q2, [sp, #272]
  405efc:	str	q3, [sp, #288]
  405f00:	str	q4, [sp, #304]
  405f04:	str	q5, [sp, #320]
  405f08:	str	q6, [sp, #336]
  405f0c:	str	q7, [sp, #352]
  405f10:	add	x0, sp, #0xe8
  405f14:	bl	404f78 <ferror@plt+0x26a8>
  405f18:	add	x0, sp, #0x1b0
  405f1c:	str	x0, [sp, #200]
  405f20:	str	x0, [sp, #208]
  405f24:	add	x0, sp, #0x170
  405f28:	str	x0, [sp, #216]
  405f2c:	mov	w0, #0xffffffc8            	// #-56
  405f30:	str	w0, [sp, #224]
  405f34:	mov	w0, #0xffffff80            	// #-128
  405f38:	str	w0, [sp, #228]
  405f3c:	mov	x3, #0x0                   	// #0
  405f40:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  405f44:	ldr	w2, [x0, #1920]
  405f48:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  405f4c:	ldr	x1, [x0, #1896]
  405f50:	add	x0, sp, #0x20
  405f54:	bl	42a37c <ferror@plt+0x27aac>
  405f58:	mov	w4, #0x4                   	// #4
  405f5c:	add	x3, sp, #0xc8
  405f60:	mov	x2, x19
  405f64:	mov	w1, #0xffffffff            	// #-1
  405f68:	add	x0, sp, #0x20
  405f6c:	bl	40582c <ferror@plt+0x2f5c>
  405f70:	add	x0, sp, #0x20
  405f74:	bl	42a10c <ferror@plt+0x2783c>
  405f78:	add	x0, sp, #0xe8
  405f7c:	bl	404f90 <ferror@plt+0x26c0>
  405f80:	ldr	x19, [sp, #16]
  405f84:	ldp	x29, x30, [sp], #432
  405f88:	ret
  405f8c:	stp	x29, x30, [sp, #-416]!
  405f90:	mov	x29, sp
  405f94:	stp	x19, x20, [sp, #16]
  405f98:	mov	w20, w0
  405f9c:	mov	x19, x1
  405fa0:	str	x2, [sp, #368]
  405fa4:	str	x3, [sp, #376]
  405fa8:	str	x4, [sp, #384]
  405fac:	str	x5, [sp, #392]
  405fb0:	str	x6, [sp, #400]
  405fb4:	str	x7, [sp, #408]
  405fb8:	str	q0, [sp, #240]
  405fbc:	str	q1, [sp, #256]
  405fc0:	str	q2, [sp, #272]
  405fc4:	str	q3, [sp, #288]
  405fc8:	str	q4, [sp, #304]
  405fcc:	str	q5, [sp, #320]
  405fd0:	str	q6, [sp, #336]
  405fd4:	str	q7, [sp, #352]
  405fd8:	add	x0, sp, #0xe8
  405fdc:	bl	404f78 <ferror@plt+0x26a8>
  405fe0:	add	x0, sp, #0x1a0
  405fe4:	str	x0, [sp, #200]
  405fe8:	str	x0, [sp, #208]
  405fec:	add	x0, sp, #0x170
  405ff0:	str	x0, [sp, #216]
  405ff4:	mov	w0, #0xffffffd0            	// #-48
  405ff8:	str	w0, [sp, #224]
  405ffc:	mov	w0, #0xffffff80            	// #-128
  406000:	str	w0, [sp, #228]
  406004:	mov	x3, #0x0                   	// #0
  406008:	mov	w2, w20
  40600c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  406010:	ldr	x1, [x0, #1896]
  406014:	add	x0, sp, #0x20
  406018:	bl	42a37c <ferror@plt+0x27aac>
  40601c:	mov	w4, #0x4                   	// #4
  406020:	add	x3, sp, #0xc8
  406024:	mov	x2, x19
  406028:	mov	w1, #0xffffffff            	// #-1
  40602c:	add	x0, sp, #0x20
  406030:	bl	40582c <ferror@plt+0x2f5c>
  406034:	add	x0, sp, #0x20
  406038:	bl	42a10c <ferror@plt+0x2783c>
  40603c:	add	x0, sp, #0xe8
  406040:	bl	404f90 <ferror@plt+0x26c0>
  406044:	ldp	x19, x20, [sp, #16]
  406048:	ldp	x29, x30, [sp], #416
  40604c:	ret
  406050:	stp	x29, x30, [sp, #-432]!
  406054:	mov	x29, sp
  406058:	str	x19, [sp, #16]
  40605c:	mov	x19, x0
  406060:	str	x1, [sp, #376]
  406064:	str	x2, [sp, #384]
  406068:	str	x3, [sp, #392]
  40606c:	str	x4, [sp, #400]
  406070:	str	x5, [sp, #408]
  406074:	str	x6, [sp, #416]
  406078:	str	x7, [sp, #424]
  40607c:	str	q0, [sp, #240]
  406080:	str	q1, [sp, #256]
  406084:	str	q2, [sp, #272]
  406088:	str	q3, [sp, #288]
  40608c:	str	q4, [sp, #304]
  406090:	str	q5, [sp, #320]
  406094:	str	q6, [sp, #336]
  406098:	str	q7, [sp, #352]
  40609c:	add	x0, sp, #0xe8
  4060a0:	bl	404f78 <ferror@plt+0x26a8>
  4060a4:	add	x0, sp, #0x1b0
  4060a8:	str	x0, [sp, #200]
  4060ac:	str	x0, [sp, #208]
  4060b0:	add	x0, sp, #0x170
  4060b4:	str	x0, [sp, #216]
  4060b8:	mov	w0, #0xffffffc8            	// #-56
  4060bc:	str	w0, [sp, #224]
  4060c0:	mov	w0, #0xffffff80            	// #-128
  4060c4:	str	w0, [sp, #228]
  4060c8:	mov	x3, #0x0                   	// #0
  4060cc:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  4060d0:	ldr	w2, [x0, #1920]
  4060d4:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  4060d8:	ldr	x1, [x0, #1896]
  4060dc:	add	x0, sp, #0x20
  4060e0:	bl	42a37c <ferror@plt+0x27aac>
  4060e4:	mov	w4, #0x5                   	// #5
  4060e8:	add	x3, sp, #0xc8
  4060ec:	mov	x2, x19
  4060f0:	mov	w1, #0xffffffff            	// #-1
  4060f4:	add	x0, sp, #0x20
  4060f8:	bl	40582c <ferror@plt+0x2f5c>
  4060fc:	add	x0, sp, #0x20
  406100:	bl	42a10c <ferror@plt+0x2783c>
  406104:	add	x0, sp, #0xe8
  406108:	bl	404f90 <ferror@plt+0x26c0>
  40610c:	ldr	x19, [sp, #16]
  406110:	ldp	x29, x30, [sp], #432
  406114:	ret
  406118:	stp	x29, x30, [sp, #-416]!
  40611c:	mov	x29, sp
  406120:	stp	x19, x20, [sp, #16]
  406124:	mov	w20, w0
  406128:	mov	x19, x1
  40612c:	str	x2, [sp, #368]
  406130:	str	x3, [sp, #376]
  406134:	str	x4, [sp, #384]
  406138:	str	x5, [sp, #392]
  40613c:	str	x6, [sp, #400]
  406140:	str	x7, [sp, #408]
  406144:	str	q0, [sp, #240]
  406148:	str	q1, [sp, #256]
  40614c:	str	q2, [sp, #272]
  406150:	str	q3, [sp, #288]
  406154:	str	q4, [sp, #304]
  406158:	str	q5, [sp, #320]
  40615c:	str	q6, [sp, #336]
  406160:	str	q7, [sp, #352]
  406164:	add	x0, sp, #0xe8
  406168:	bl	404f78 <ferror@plt+0x26a8>
  40616c:	add	x0, sp, #0x1a0
  406170:	str	x0, [sp, #200]
  406174:	str	x0, [sp, #208]
  406178:	add	x0, sp, #0x170
  40617c:	str	x0, [sp, #216]
  406180:	mov	w0, #0xffffffd0            	// #-48
  406184:	str	w0, [sp, #224]
  406188:	mov	w0, #0xffffff80            	// #-128
  40618c:	str	w0, [sp, #228]
  406190:	mov	x3, #0x0                   	// #0
  406194:	mov	w2, w20
  406198:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  40619c:	ldr	x1, [x0, #1896]
  4061a0:	add	x0, sp, #0x20
  4061a4:	bl	42a37c <ferror@plt+0x27aac>
  4061a8:	mov	w4, #0x5                   	// #5
  4061ac:	add	x3, sp, #0xc8
  4061b0:	mov	x2, x19
  4061b4:	mov	w1, #0xffffffff            	// #-1
  4061b8:	add	x0, sp, #0x20
  4061bc:	bl	40582c <ferror@plt+0x2f5c>
  4061c0:	add	x0, sp, #0x20
  4061c4:	bl	42a10c <ferror@plt+0x2783c>
  4061c8:	add	x0, sp, #0xe8
  4061cc:	bl	404f90 <ferror@plt+0x26c0>
  4061d0:	ldp	x19, x20, [sp, #16]
  4061d4:	ldp	x29, x30, [sp], #416
  4061d8:	ret
  4061dc:	stp	x29, x30, [sp, #-432]!
  4061e0:	mov	x29, sp
  4061e4:	str	x19, [sp, #16]
  4061e8:	mov	x19, x0
  4061ec:	str	x1, [sp, #376]
  4061f0:	str	x2, [sp, #384]
  4061f4:	str	x3, [sp, #392]
  4061f8:	str	x4, [sp, #400]
  4061fc:	str	x5, [sp, #408]
  406200:	str	x6, [sp, #416]
  406204:	str	x7, [sp, #424]
  406208:	str	q0, [sp, #240]
  40620c:	str	q1, [sp, #256]
  406210:	str	q2, [sp, #272]
  406214:	str	q3, [sp, #288]
  406218:	str	q4, [sp, #304]
  40621c:	str	q5, [sp, #320]
  406220:	str	q6, [sp, #336]
  406224:	str	q7, [sp, #352]
  406228:	add	x0, sp, #0xe8
  40622c:	bl	404f78 <ferror@plt+0x26a8>
  406230:	add	x0, sp, #0x1b0
  406234:	str	x0, [sp, #200]
  406238:	str	x0, [sp, #208]
  40623c:	add	x0, sp, #0x170
  406240:	str	x0, [sp, #216]
  406244:	mov	w0, #0xffffffc8            	// #-56
  406248:	str	w0, [sp, #224]
  40624c:	mov	w0, #0xffffff80            	// #-128
  406250:	str	w0, [sp, #228]
  406254:	mov	x3, #0x0                   	// #0
  406258:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  40625c:	ldr	w2, [x0, #1920]
  406260:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  406264:	ldr	x1, [x0, #1896]
  406268:	add	x0, sp, #0x20
  40626c:	bl	42a37c <ferror@plt+0x27aac>
  406270:	mov	w4, #0x3                   	// #3
  406274:	add	x3, sp, #0xc8
  406278:	mov	x2, x19
  40627c:	mov	w1, #0xffffffff            	// #-1
  406280:	add	x0, sp, #0x20
  406284:	bl	40582c <ferror@plt+0x2f5c>
  406288:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  40628c:	add	x2, x2, #0x7f8
  406290:	mov	w1, #0x607                 	// #1543
  406294:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  406298:	add	x0, x0, #0x738
  40629c:	bl	4062a0 <ferror@plt+0x39d0>
  4062a0:	stp	x29, x30, [sp, #-32]!
  4062a4:	mov	x29, sp
  4062a8:	stp	x19, x20, [sp, #16]
  4062ac:	mov	w20, w1
  4062b0:	mov	x19, x2
  4062b4:	bl	404d3c <ferror@plt+0x246c>
  4062b8:	mov	w3, w20
  4062bc:	mov	x2, x0
  4062c0:	mov	x1, x19
  4062c4:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  4062c8:	add	x0, x0, #0x808
  4062cc:	bl	4061dc <ferror@plt+0x390c>
  4062d0:	stp	x29, x30, [sp, #-64]!
  4062d4:	mov	x29, sp
  4062d8:	stp	x19, x20, [sp, #16]
  4062dc:	stp	x21, x22, [sp, #32]
  4062e0:	str	x23, [sp, #48]
  4062e4:	cbz	x3, 406334 <ferror@plt+0x3a64>
  4062e8:	mov	x19, x0
  4062ec:	mov	x22, x1
  4062f0:	mov	x23, x2
  4062f4:	mov	x20, x3
  4062f8:	mov	w21, w4
  4062fc:	bl	402810 <__errno_location@plt>
  406300:	ldr	w0, [x0]
  406304:	str	w0, [x19, #16]
  406308:	str	x23, [x19, #8]
  40630c:	str	x22, [x19]
  406310:	str	x20, [x19, #32]
  406314:	str	x20, [x19, #40]
  406318:	str	w21, [x19, #56]
  40631c:	str	wzr, [x19, #60]
  406320:	ldp	x19, x20, [sp, #16]
  406324:	ldp	x21, x22, [sp, #32]
  406328:	ldr	x23, [sp, #48]
  40632c:	ldp	x29, x30, [sp], #64
  406330:	ret
  406334:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  406338:	add	x2, x2, #0x818
  40633c:	mov	w1, #0x112                 	// #274
  406340:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  406344:	add	x0, x0, #0x738
  406348:	bl	4062a0 <ferror@plt+0x39d0>
  40634c:	stp	x29, x30, [sp, #-48]!
  406350:	mov	x29, sp
  406354:	stp	x19, x20, [sp, #16]
  406358:	stp	x21, x22, [sp, #32]
  40635c:	cbz	x3, 4063a0 <ferror@plt+0x3ad0>
  406360:	mov	x20, x0
  406364:	mov	x0, x1
  406368:	mov	x21, x2
  40636c:	mov	x19, x3
  406370:	mov	w22, w4
  406374:	bl	402880 <gettext@plt>
  406378:	mov	w4, w22
  40637c:	mov	x3, x19
  406380:	mov	x2, x21
  406384:	mov	x1, x0
  406388:	mov	x0, x20
  40638c:	bl	4062d0 <ferror@plt+0x3a00>
  406390:	ldp	x19, x20, [sp, #16]
  406394:	ldp	x21, x22, [sp, #32]
  406398:	ldp	x29, x30, [sp], #48
  40639c:	ret
  4063a0:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  4063a4:	add	x2, x2, #0x838
  4063a8:	mov	w1, #0x123                 	// #291
  4063ac:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  4063b0:	add	x0, x0, #0x738
  4063b4:	bl	4062a0 <ferror@plt+0x39d0>
  4063b8:	stp	x29, x30, [sp, #-128]!
  4063bc:	mov	x29, sp
  4063c0:	stp	x19, x20, [sp, #16]
  4063c4:	stp	x21, x22, [sp, #32]
  4063c8:	stp	x23, x24, [sp, #48]
  4063cc:	mov	x21, x0
  4063d0:	ldr	w0, [x1, #56]
  4063d4:	cmp	w0, #0xd
  4063d8:	b.gt	4064a4 <ferror@plt+0x3bd4>
  4063dc:	mov	x20, x1
  4063e0:	adrp	x19, 458000 <_obstack_memory_used@@Base+0x11094>
  4063e4:	add	x19, x19, #0xa68
  4063e8:	add	x1, x19, #0xc0
  4063ec:	ldr	x0, [x1, w0, sxtw #3]
  4063f0:	bl	402880 <gettext@plt>
  4063f4:	mov	x23, x0
  4063f8:	add	x19, x19, #0x20
  4063fc:	ldrsw	x0, [x20, #56]
  406400:	ldr	x19, [x19, x0, lsl #3]
  406404:	cbz	x19, 4064bc <ferror@plt+0x3bec>
  406408:	ldr	x22, [x21]
  40640c:	mov	x0, x19
  406410:	bl	4022b0 <strlen@plt>
  406414:	mov	x2, x0
  406418:	mov	x1, x19
  40641c:	ldrb	w0, [x22, #67]
  406420:	bl	40744c <ferror@plt+0x4b7c>
  406424:	mov	x24, x0
  406428:	ldrb	w0, [x22, #67]
  40642c:	bl	4074e0 <ferror@plt+0x4c10>
  406430:	mov	x22, x0
  406434:	add	x8, sp, #0x60
  406438:	mov	w1, #0x0                   	// #0
  40643c:	ldr	x0, [x20, #40]
  406440:	bl	42a210 <ferror@plt+0x27940>
  406444:	ldp	x0, x1, [sp, #96]
  406448:	stp	x0, x1, [sp, #64]
  40644c:	ldp	x0, x1, [sp, #112]
  406450:	stp	x0, x1, [sp, #80]
  406454:	add	x1, sp, #0x40
  406458:	mov	x0, x21
  40645c:	bl	4044f4 <ferror@plt+0x1c24>
  406460:	mov	x19, x0
  406464:	mov	x4, x22
  406468:	mov	x3, x23
  40646c:	mov	x2, x24
  406470:	mov	x1, x0
  406474:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  406478:	add	x0, x0, #0x868
  40647c:	bl	40446c <ferror@plt+0x1b9c>
  406480:	mov	x20, x0
  406484:	mov	x0, x19
  406488:	bl	402690 <free@plt>
  40648c:	mov	x0, x20
  406490:	ldp	x19, x20, [sp, #16]
  406494:	ldp	x21, x22, [sp, #32]
  406498:	ldp	x23, x24, [sp, #48]
  40649c:	ldp	x29, x30, [sp], #128
  4064a0:	ret
  4064a4:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  4064a8:	add	x2, x2, #0x850
  4064ac:	mov	w1, #0x16a                 	// #362
  4064b0:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  4064b4:	add	x0, x0, #0x738
  4064b8:	bl	4062a0 <ferror@plt+0x39d0>
  4064bc:	adrp	x22, 458000 <_obstack_memory_used@@Base+0x11094>
  4064c0:	add	x22, x22, #0x710
  4064c4:	mov	x24, x22
  4064c8:	b	406434 <ferror@plt+0x3b64>
  4064cc:	stp	x29, x30, [sp, #-48]!
  4064d0:	mov	x29, sp
  4064d4:	stp	x19, x20, [sp, #16]
  4064d8:	str	x21, [sp, #32]
  4064dc:	mov	x19, x0
  4064e0:	mov	x20, x1
  4064e4:	mov	w1, #0x0                   	// #0
  4064e8:	mov	x0, x20
  4064ec:	bl	40c310 <ferror@plt+0x9a40>
  4064f0:	mov	w1, w0
  4064f4:	mov	x0, x19
  4064f8:	bl	404920 <ferror@plt+0x2050>
  4064fc:	ldr	x21, [x19]
  406500:	mov	x1, x20
  406504:	mov	x0, x19
  406508:	bl	4063b8 <ferror@plt+0x3ae8>
  40650c:	mov	x1, x0
  406510:	mov	x0, x21
  406514:	bl	40c554 <ferror@plt+0x9c84>
  406518:	ldp	x19, x20, [sp, #16]
  40651c:	ldr	x21, [sp, #32]
  406520:	ldp	x29, x30, [sp], #48
  406524:	ret
  406528:	stp	x29, x30, [sp, #-496]!
  40652c:	mov	x29, sp
  406530:	stp	x19, x20, [sp, #16]
  406534:	mov	x19, x0
  406538:	mov	x20, x2
  40653c:	str	x3, [sp, #456]
  406540:	str	x4, [sp, #464]
  406544:	str	x5, [sp, #472]
  406548:	str	x6, [sp, #480]
  40654c:	str	x7, [sp, #488]
  406550:	str	q0, [sp, #320]
  406554:	str	q1, [sp, #336]
  406558:	str	q2, [sp, #352]
  40655c:	str	q3, [sp, #368]
  406560:	str	q4, [sp, #384]
  406564:	str	q5, [sp, #400]
  406568:	str	q6, [sp, #416]
  40656c:	str	q7, [sp, #432]
  406570:	mov	x3, #0x0                   	// #0
  406574:	mov	w2, w1
  406578:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  40657c:	ldr	x1, [x0, #1896]
  406580:	add	x0, sp, #0x38
  406584:	bl	42a37c <ferror@plt+0x27aac>
  406588:	add	x0, sp, #0x1f0
  40658c:	str	x0, [sp, #224]
  406590:	str	x0, [sp, #232]
  406594:	add	x0, sp, #0x1c0
  406598:	str	x0, [sp, #240]
  40659c:	mov	w0, #0xffffffd8            	// #-40
  4065a0:	str	w0, [sp, #248]
  4065a4:	mov	w0, #0xffffff80            	// #-128
  4065a8:	str	w0, [sp, #252]
  4065ac:	mov	w4, #0x8                   	// #8
  4065b0:	add	x3, sp, #0x38
  4065b4:	add	x2, sp, #0xe0
  4065b8:	mov	x1, x20
  4065bc:	add	x0, sp, #0x100
  4065c0:	bl	40634c <ferror@plt+0x3a7c>
  4065c4:	ldrb	w0, [x19, #220]
  4065c8:	cbnz	w0, 406648 <ferror@plt+0x3d78>
  4065cc:	str	x21, [sp, #32]
  4065d0:	ldr	x0, [x19]
  4065d4:	bl	40c590 <ferror@plt+0x9cc0>
  4065d8:	mov	x20, x0
  4065dc:	ldr	x21, [x19]
  4065e0:	add	x1, sp, #0x100
  4065e4:	mov	x0, x19
  4065e8:	bl	4063b8 <ferror@plt+0x3ae8>
  4065ec:	mov	x1, x0
  4065f0:	mov	x0, x21
  4065f4:	bl	40c554 <ferror@plt+0x9c84>
  4065f8:	add	x1, sp, #0x100
  4065fc:	ldr	x0, [x19]
  406600:	bl	40d18c <ferror@plt+0xa8bc>
  406604:	ldr	x0, [x19]
  406608:	bl	40cf60 <ferror@plt+0xa690>
  40660c:	ldr	x0, [x19]
  406610:	bl	40c5a0 <ferror@plt+0x9cd0>
  406614:	mov	x1, x20
  406618:	ldr	x0, [x19]
  40661c:	bl	40c554 <ferror@plt+0x9c84>
  406620:	mov	w2, #0x8                   	// #8
  406624:	add	x1, sp, #0x38
  406628:	mov	x0, x19
  40662c:	bl	40915c <ferror@plt+0x688c>
  406630:	add	x0, sp, #0x38
  406634:	bl	42a10c <ferror@plt+0x2783c>
  406638:	ldr	x21, [sp, #32]
  40663c:	ldp	x19, x20, [sp, #16]
  406640:	ldp	x29, x30, [sp], #496
  406644:	ret
  406648:	add	x0, sp, #0x38
  40664c:	bl	42a10c <ferror@plt+0x2783c>
  406650:	b	40663c <ferror@plt+0x3d6c>
  406654:	stp	x29, x30, [sp, #-64]!
  406658:	mov	x29, sp
  40665c:	cbz	x0, 4066a0 <ferror@plt+0x3dd0>
  406660:	stp	x19, x20, [sp, #16]
  406664:	mov	x20, x0
  406668:	mov	x19, x1
  40666c:	cbz	x1, 4066c4 <ferror@plt+0x3df4>
  406670:	mov	w1, #0x22                  	// #34
  406674:	bl	40c914 <ferror@plt+0xa044>
  406678:	ldrb	w1, [x19]
  40667c:	cbz	w1, 406790 <ferror@plt+0x3ec0>
  406680:	stp	x21, x22, [sp, #32]
  406684:	str	x23, [sp, #48]
  406688:	adrp	x22, 458000 <_obstack_memory_used@@Base+0x11094>
  40668c:	add	x22, x22, #0x8a8
  406690:	adrp	x21, 466000 <_obstack_memory_used@@Base+0x1f094>
  406694:	add	x21, x21, #0xa68
  406698:	adrp	x23, 458000 <_obstack_memory_used@@Base+0x11094>
  40669c:	b	406704 <ferror@plt+0x3e34>
  4066a0:	stp	x19, x20, [sp, #16]
  4066a4:	stp	x21, x22, [sp, #32]
  4066a8:	str	x23, [sp, #48]
  4066ac:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  4066b0:	add	x2, x2, #0x878
  4066b4:	mov	w1, #0x2f5                 	// #757
  4066b8:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  4066bc:	add	x0, x0, #0x738
  4066c0:	bl	4062a0 <ferror@plt+0x39d0>
  4066c4:	stp	x21, x22, [sp, #32]
  4066c8:	str	x23, [sp, #48]
  4066cc:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  4066d0:	add	x2, x2, #0x878
  4066d4:	mov	w1, #0x2f6                 	// #758
  4066d8:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  4066dc:	add	x0, x0, #0x738
  4066e0:	bl	4062a0 <ferror@plt+0x39d0>
  4066e4:	cmp	w1, #0x5c
  4066e8:	b.ne	406758 <ferror@plt+0x3e88>  // b.any
  4066ec:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  4066f0:	add	x1, x1, #0x890
  4066f4:	mov	x0, x20
  4066f8:	bl	40cf0c <ferror@plt+0xa63c>
  4066fc:	ldrb	w1, [x19, #1]!
  406700:	cbz	w1, 406788 <ferror@plt+0x3eb8>
  406704:	cmp	w1, #0x22
  406708:	b.eq	406748 <ferror@plt+0x3e78>  // b.none
  40670c:	b.hi	4066e4 <ferror@plt+0x3e14>  // b.pmore
  406710:	cmp	w1, #0x9
  406714:	b.eq	406734 <ferror@plt+0x3e64>  // b.none
  406718:	cmp	w1, #0xa
  40671c:	b.ne	406758 <ferror@plt+0x3e88>  // b.any
  406720:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  406724:	add	x1, x1, #0x8a0
  406728:	mov	x0, x20
  40672c:	bl	40cf0c <ferror@plt+0xa63c>
  406730:	b	4066fc <ferror@plt+0x3e2c>
  406734:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  406738:	add	x1, x1, #0x898
  40673c:	mov	x0, x20
  406740:	bl	40cf0c <ferror@plt+0xa63c>
  406744:	b	4066fc <ferror@plt+0x3e2c>
  406748:	mov	x1, x22
  40674c:	mov	x0, x20
  406750:	bl	40cf0c <ferror@plt+0xa63c>
  406754:	b	4066fc <ferror@plt+0x3e2c>
  406758:	ldrh	w0, [x21, w1, sxtw #1]
  40675c:	tbz	w0, #4, 40676c <ferror@plt+0x3e9c>
  406760:	mov	x0, x20
  406764:	bl	40c914 <ferror@plt+0xa044>
  406768:	b	4066fc <ferror@plt+0x3e2c>
  40676c:	and	w4, w1, #0x7
  406770:	ubfx	x3, x1, #3, #3
  406774:	lsr	w2, w1, #6
  406778:	add	x1, x23, #0x8b0
  40677c:	mov	x0, x20
  406780:	bl	40ed44 <ferror@plt+0xc474>
  406784:	b	4066fc <ferror@plt+0x3e2c>
  406788:	ldp	x21, x22, [sp, #32]
  40678c:	ldr	x23, [sp, #48]
  406790:	mov	w1, #0x22                  	// #34
  406794:	mov	x0, x20
  406798:	bl	40c914 <ferror@plt+0xa044>
  40679c:	ldp	x19, x20, [sp, #16]
  4067a0:	ldp	x29, x30, [sp], #64
  4067a4:	ret
  4067a8:	tbnz	w0, #31, 4067e4 <ferror@plt+0x3f14>
  4067ac:	mov	w1, w0
  4067b0:	mov	w0, #0x1                   	// #1
  4067b4:	cbz	w1, 4067e0 <ferror@plt+0x3f10>
  4067b8:	mov	w0, #0x0                   	// #0
  4067bc:	mov	w4, #0x6667                	// #26215
  4067c0:	movk	w4, #0x6666, lsl #16
  4067c4:	add	w0, w0, #0x1
  4067c8:	mov	w3, w1
  4067cc:	smull	x2, w1, w4
  4067d0:	asr	x2, x2, #34
  4067d4:	sub	w1, w2, w1, asr #31
  4067d8:	cmp	w3, #0x9
  4067dc:	b.gt	4067c4 <ferror@plt+0x3ef4>
  4067e0:	ret
  4067e4:	stp	x29, x30, [sp, #-16]!
  4067e8:	mov	x29, sp
  4067ec:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  4067f0:	add	x2, x2, #0x8b8
  4067f4:	mov	w1, #0x415                 	// #1045
  4067f8:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  4067fc:	add	x0, x0, #0x738
  406800:	bl	4062a0 <ferror@plt+0x39d0>
  406804:	stp	x29, x30, [sp, #-256]!
  406808:	mov	x29, sp
  40680c:	stp	x19, x20, [sp, #16]
  406810:	str	x2, [sp, #208]
  406814:	str	x3, [sp, #216]
  406818:	str	x4, [sp, #224]
  40681c:	str	x5, [sp, #232]
  406820:	str	x6, [sp, #240]
  406824:	str	x7, [sp, #248]
  406828:	str	q0, [sp, #80]
  40682c:	str	q1, [sp, #96]
  406830:	str	q2, [sp, #112]
  406834:	str	q3, [sp, #128]
  406838:	str	q4, [sp, #144]
  40683c:	str	q5, [sp, #160]
  406840:	str	q6, [sp, #176]
  406844:	str	q7, [sp, #192]
  406848:	cbz	x0, 4068ac <ferror@plt+0x3fdc>
  40684c:	mov	x19, x0
  406850:	mov	x20, x1
  406854:	add	x0, sp, #0x48
  406858:	bl	404f78 <ferror@plt+0x26a8>
  40685c:	add	x0, sp, #0x100
  406860:	str	x0, [sp, #40]
  406864:	str	x0, [sp, #48]
  406868:	add	x0, sp, #0xd0
  40686c:	str	x0, [sp, #56]
  406870:	mov	w0, #0xffffffd0            	// #-48
  406874:	str	w0, [sp, #64]
  406878:	mov	w0, #0xffffff80            	// #-128
  40687c:	str	w0, [sp, #68]
  406880:	mov	w4, #0x8                   	// #8
  406884:	add	x3, sp, #0x28
  406888:	mov	x2, x20
  40688c:	mov	w1, #0xffffffff            	// #-1
  406890:	mov	x0, x19
  406894:	bl	40582c <ferror@plt+0x2f5c>
  406898:	add	x0, sp, #0x48
  40689c:	bl	404f90 <ferror@plt+0x26c0>
  4068a0:	ldp	x19, x20, [sp, #16]
  4068a4:	ldp	x29, x30, [sp], #256
  4068a8:	ret
  4068ac:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  4068b0:	add	x2, x2, #0x8c8
  4068b4:	mov	w1, #0x4dc                 	// #1244
  4068b8:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  4068bc:	add	x0, x0, #0x738
  4068c0:	bl	4062a0 <ferror@plt+0x39d0>
  4068c4:	stp	x29, x30, [sp, #-272]!
  4068c8:	mov	x29, sp
  4068cc:	stp	x19, x20, [sp, #16]
  4068d0:	str	x21, [sp, #32]
  4068d4:	str	x3, [sp, #232]
  4068d8:	str	x4, [sp, #240]
  4068dc:	str	x5, [sp, #248]
  4068e0:	str	x6, [sp, #256]
  4068e4:	str	x7, [sp, #264]
  4068e8:	str	q0, [sp, #96]
  4068ec:	str	q1, [sp, #112]
  4068f0:	str	q2, [sp, #128]
  4068f4:	str	q3, [sp, #144]
  4068f8:	str	q4, [sp, #160]
  4068fc:	str	q5, [sp, #176]
  406900:	str	q6, [sp, #192]
  406904:	str	q7, [sp, #208]
  406908:	cbz	x0, 40697c <ferror@plt+0x40ac>
  40690c:	mov	x19, x0
  406910:	mov	w20, w1
  406914:	mov	x21, x2
  406918:	add	x0, sp, #0x58
  40691c:	bl	404f78 <ferror@plt+0x26a8>
  406920:	add	x0, sp, #0x110
  406924:	str	x0, [sp, #56]
  406928:	str	x0, [sp, #64]
  40692c:	add	x0, sp, #0xe0
  406930:	str	x0, [sp, #72]
  406934:	mov	w0, #0xffffffd8            	// #-40
  406938:	str	w0, [sp, #80]
  40693c:	mov	w0, #0xffffff80            	// #-128
  406940:	str	w0, [sp, #84]
  406944:	mov	w4, #0x6                   	// #6
  406948:	add	x3, sp, #0x38
  40694c:	mov	x2, x21
  406950:	mov	w1, w20
  406954:	mov	x0, x19
  406958:	bl	40582c <ferror@plt+0x2f5c>
  40695c:	mov	w19, w0
  406960:	add	x0, sp, #0x58
  406964:	bl	404f90 <ferror@plt+0x26c0>
  406968:	mov	w0, w19
  40696c:	ldp	x19, x20, [sp, #16]
  406970:	ldr	x21, [sp, #32]
  406974:	ldp	x29, x30, [sp], #272
  406978:	ret
  40697c:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  406980:	add	x2, x2, #0x8d0
  406984:	mov	w1, #0x518                 	// #1304
  406988:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40698c:	add	x0, x0, #0x738
  406990:	bl	4062a0 <ferror@plt+0x39d0>
  406994:	stp	x29, x30, [sp, #-272]!
  406998:	mov	x29, sp
  40699c:	stp	x19, x20, [sp, #16]
  4069a0:	str	x21, [sp, #32]
  4069a4:	str	x3, [sp, #232]
  4069a8:	str	x4, [sp, #240]
  4069ac:	str	x5, [sp, #248]
  4069b0:	str	x6, [sp, #256]
  4069b4:	str	x7, [sp, #264]
  4069b8:	str	q0, [sp, #96]
  4069bc:	str	q1, [sp, #112]
  4069c0:	str	q2, [sp, #128]
  4069c4:	str	q3, [sp, #144]
  4069c8:	str	q4, [sp, #160]
  4069cc:	str	q5, [sp, #176]
  4069d0:	str	q6, [sp, #192]
  4069d4:	str	q7, [sp, #208]
  4069d8:	cbz	x0, 406a4c <ferror@plt+0x417c>
  4069dc:	mov	x19, x0
  4069e0:	mov	w20, w1
  4069e4:	mov	x21, x2
  4069e8:	add	x0, sp, #0x58
  4069ec:	bl	404f78 <ferror@plt+0x26a8>
  4069f0:	add	x0, sp, #0x110
  4069f4:	str	x0, [sp, #56]
  4069f8:	str	x0, [sp, #64]
  4069fc:	add	x0, sp, #0xe0
  406a00:	str	x0, [sp, #72]
  406a04:	mov	w0, #0xffffffd8            	// #-40
  406a08:	str	w0, [sp, #80]
  406a0c:	mov	w0, #0xffffff80            	// #-128
  406a10:	str	w0, [sp, #84]
  406a14:	mov	w4, #0xa                   	// #10
  406a18:	add	x3, sp, #0x38
  406a1c:	mov	x2, x21
  406a20:	mov	w1, w20
  406a24:	mov	x0, x19
  406a28:	bl	40582c <ferror@plt+0x2f5c>
  406a2c:	mov	w19, w0
  406a30:	add	x0, sp, #0x58
  406a34:	bl	404f90 <ferror@plt+0x26c0>
  406a38:	mov	w0, w19
  406a3c:	ldp	x19, x20, [sp, #16]
  406a40:	ldr	x21, [sp, #32]
  406a44:	ldp	x29, x30, [sp], #272
  406a48:	ret
  406a4c:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  406a50:	add	x2, x2, #0x8e0
  406a54:	mov	w1, #0x565                 	// #1381
  406a58:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  406a5c:	add	x0, x0, #0x738
  406a60:	bl	4062a0 <ferror@plt+0x39d0>
  406a64:	stp	x29, x30, [sp, #-256]!
  406a68:	mov	x29, sp
  406a6c:	stp	x19, x20, [sp, #16]
  406a70:	str	x2, [sp, #208]
  406a74:	str	x3, [sp, #216]
  406a78:	str	x4, [sp, #224]
  406a7c:	str	x5, [sp, #232]
  406a80:	str	x6, [sp, #240]
  406a84:	str	x7, [sp, #248]
  406a88:	str	q0, [sp, #80]
  406a8c:	str	q1, [sp, #96]
  406a90:	str	q2, [sp, #112]
  406a94:	str	q3, [sp, #128]
  406a98:	str	q4, [sp, #144]
  406a9c:	str	q5, [sp, #160]
  406aa0:	str	q6, [sp, #176]
  406aa4:	str	q7, [sp, #192]
  406aa8:	cbz	x0, 406b14 <ferror@plt+0x4244>
  406aac:	mov	x19, x0
  406ab0:	mov	x20, x1
  406ab4:	add	x0, sp, #0x48
  406ab8:	bl	404f78 <ferror@plt+0x26a8>
  406abc:	add	x0, sp, #0x100
  406ac0:	str	x0, [sp, #40]
  406ac4:	str	x0, [sp, #48]
  406ac8:	add	x0, sp, #0xd0
  406acc:	str	x0, [sp, #56]
  406ad0:	mov	w0, #0xffffffd0            	// #-48
  406ad4:	str	w0, [sp, #64]
  406ad8:	mov	w0, #0xffffff80            	// #-128
  406adc:	str	w0, [sp, #68]
  406ae0:	mov	w4, #0xb                   	// #11
  406ae4:	add	x3, sp, #0x28
  406ae8:	mov	x2, x20
  406aec:	mov	w1, #0xffffffff            	// #-1
  406af0:	mov	x0, x19
  406af4:	bl	40582c <ferror@plt+0x2f5c>
  406af8:	mov	w19, w0
  406afc:	add	x0, sp, #0x48
  406b00:	bl	404f90 <ferror@plt+0x26c0>
  406b04:	mov	w0, w19
  406b08:	ldp	x19, x20, [sp, #16]
  406b0c:	ldp	x29, x30, [sp], #256
  406b10:	ret
  406b14:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  406b18:	add	x2, x2, #0x8e8
  406b1c:	mov	w1, #0x587                 	// #1415
  406b20:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  406b24:	add	x0, x0, #0x738
  406b28:	bl	4062a0 <ferror@plt+0x39d0>
  406b2c:	stp	x29, x30, [sp, #-256]!
  406b30:	mov	x29, sp
  406b34:	stp	x19, x20, [sp, #16]
  406b38:	str	x2, [sp, #208]
  406b3c:	str	x3, [sp, #216]
  406b40:	str	x4, [sp, #224]
  406b44:	str	x5, [sp, #232]
  406b48:	str	x6, [sp, #240]
  406b4c:	str	x7, [sp, #248]
  406b50:	str	q0, [sp, #80]
  406b54:	str	q1, [sp, #96]
  406b58:	str	q2, [sp, #112]
  406b5c:	str	q3, [sp, #128]
  406b60:	str	q4, [sp, #144]
  406b64:	str	q5, [sp, #160]
  406b68:	str	q6, [sp, #176]
  406b6c:	str	q7, [sp, #192]
  406b70:	cbz	x0, 406bd4 <ferror@plt+0x4304>
  406b74:	mov	x19, x0
  406b78:	mov	x20, x1
  406b7c:	add	x0, sp, #0x48
  406b80:	bl	404f78 <ferror@plt+0x26a8>
  406b84:	add	x0, sp, #0x100
  406b88:	str	x0, [sp, #40]
  406b8c:	str	x0, [sp, #48]
  406b90:	add	x0, sp, #0xd0
  406b94:	str	x0, [sp, #56]
  406b98:	mov	w0, #0xffffffd0            	// #-48
  406b9c:	str	w0, [sp, #64]
  406ba0:	mov	w0, #0xffffff80            	// #-128
  406ba4:	str	w0, [sp, #68]
  406ba8:	mov	w4, #0x4                   	// #4
  406bac:	add	x3, sp, #0x28
  406bb0:	mov	x2, x20
  406bb4:	mov	w1, #0xffffffff            	// #-1
  406bb8:	mov	x0, x19
  406bbc:	bl	40582c <ferror@plt+0x2f5c>
  406bc0:	add	x0, sp, #0x48
  406bc4:	bl	404f90 <ferror@plt+0x26c0>
  406bc8:	ldp	x19, x20, [sp, #16]
  406bcc:	ldp	x29, x30, [sp], #256
  406bd0:	ret
  406bd4:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  406bd8:	add	x2, x2, #0x8f8
  406bdc:	mov	w1, #0x5be                 	// #1470
  406be0:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  406be4:	add	x0, x0, #0x738
  406be8:	bl	4062a0 <ferror@plt+0x39d0>
  406bec:	stp	x29, x30, [sp, #-416]!
  406bf0:	mov	x29, sp
  406bf4:	stp	x19, x20, [sp, #16]
  406bf8:	mov	w20, w0
  406bfc:	mov	x19, x1
  406c00:	str	x2, [sp, #368]
  406c04:	str	x3, [sp, #376]
  406c08:	str	x4, [sp, #384]
  406c0c:	str	x5, [sp, #392]
  406c10:	str	x6, [sp, #400]
  406c14:	str	x7, [sp, #408]
  406c18:	str	q0, [sp, #240]
  406c1c:	str	q1, [sp, #256]
  406c20:	str	q2, [sp, #272]
  406c24:	str	q3, [sp, #288]
  406c28:	str	q4, [sp, #304]
  406c2c:	str	q5, [sp, #320]
  406c30:	str	q6, [sp, #336]
  406c34:	str	q7, [sp, #352]
  406c38:	add	x0, sp, #0xe8
  406c3c:	bl	404f78 <ferror@plt+0x26a8>
  406c40:	add	x0, sp, #0x1a0
  406c44:	str	x0, [sp, #200]
  406c48:	str	x0, [sp, #208]
  406c4c:	add	x0, sp, #0x170
  406c50:	str	x0, [sp, #216]
  406c54:	mov	w0, #0xffffffd0            	// #-48
  406c58:	str	w0, [sp, #224]
  406c5c:	mov	w0, #0xffffff80            	// #-128
  406c60:	str	w0, [sp, #228]
  406c64:	mov	x3, #0x0                   	// #0
  406c68:	mov	w2, w20
  406c6c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  406c70:	ldr	x1, [x0, #1896]
  406c74:	add	x0, sp, #0x20
  406c78:	bl	42a37c <ferror@plt+0x27aac>
  406c7c:	mov	w4, #0x2                   	// #2
  406c80:	add	x3, sp, #0xc8
  406c84:	mov	x2, x19
  406c88:	mov	w1, #0xffffffff            	// #-1
  406c8c:	add	x0, sp, #0x20
  406c90:	bl	40582c <ferror@plt+0x2f5c>
  406c94:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  406c98:	add	x2, x2, #0x908
  406c9c:	mov	w1, #0x5f6                 	// #1526
  406ca0:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  406ca4:	add	x0, x0, #0x738
  406ca8:	bl	4062a0 <ferror@plt+0x39d0>
  406cac:	stp	x29, x30, [sp, #-432]!
  406cb0:	mov	x29, sp
  406cb4:	str	x19, [sp, #16]
  406cb8:	mov	x19, x0
  406cbc:	str	x1, [sp, #376]
  406cc0:	str	x2, [sp, #384]
  406cc4:	str	x3, [sp, #392]
  406cc8:	str	x4, [sp, #400]
  406ccc:	str	x5, [sp, #408]
  406cd0:	str	x6, [sp, #416]
  406cd4:	str	x7, [sp, #424]
  406cd8:	str	q0, [sp, #240]
  406cdc:	str	q1, [sp, #256]
  406ce0:	str	q2, [sp, #272]
  406ce4:	str	q3, [sp, #288]
  406ce8:	str	q4, [sp, #304]
  406cec:	str	q5, [sp, #320]
  406cf0:	str	q6, [sp, #336]
  406cf4:	str	q7, [sp, #352]
  406cf8:	add	x0, sp, #0xe8
  406cfc:	bl	404f78 <ferror@plt+0x26a8>
  406d00:	add	x0, sp, #0x1b0
  406d04:	str	x0, [sp, #200]
  406d08:	str	x0, [sp, #208]
  406d0c:	add	x0, sp, #0x170
  406d10:	str	x0, [sp, #216]
  406d14:	mov	w0, #0xffffffc8            	// #-56
  406d18:	str	w0, [sp, #224]
  406d1c:	mov	w0, #0xffffff80            	// #-128
  406d20:	str	w0, [sp, #228]
  406d24:	mov	x3, #0x0                   	// #0
  406d28:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  406d2c:	ldr	w2, [x0, #1920]
  406d30:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  406d34:	ldr	x1, [x0, #1896]
  406d38:	add	x0, sp, #0x20
  406d3c:	bl	42a37c <ferror@plt+0x27aac>
  406d40:	mov	w4, #0xd                   	// #13
  406d44:	add	x3, sp, #0xc8
  406d48:	mov	x2, x19
  406d4c:	mov	w1, #0xffffffff            	// #-1
  406d50:	add	x0, sp, #0x20
  406d54:	bl	40582c <ferror@plt+0x2f5c>
  406d58:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  406d5c:	add	x2, x2, #0x918
  406d60:	mov	w1, #0x617                 	// #1559
  406d64:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  406d68:	add	x0, x0, #0x738
  406d6c:	bl	4062a0 <ferror@plt+0x39d0>
  406d70:	stp	x29, x30, [sp, #-112]!
  406d74:	mov	x29, sp
  406d78:	stp	x19, x20, [sp, #16]
  406d7c:	stp	x21, x22, [sp, #32]
  406d80:	mov	x21, x0
  406d84:	mov	w22, w1
  406d88:	mov	x0, x3
  406d8c:	mov	x1, x4
  406d90:	mov	x20, x5
  406d94:	mov	w19, w6
  406d98:	bl	402280 <ngettext@plt>
  406d9c:	mov	w4, w19
  406da0:	mov	x3, x21
  406da4:	mov	x2, x20
  406da8:	mov	x1, x0
  406dac:	add	x0, sp, #0x30
  406db0:	bl	4062d0 <ferror@plt+0x3a00>
  406db4:	cmp	w19, #0x6
  406db8:	b.eq	406ddc <ferror@plt+0x450c>  // b.none
  406dbc:	add	x1, sp, #0x30
  406dc0:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  406dc4:	ldr	x0, [x0, #848]
  406dc8:	bl	405254 <ferror@plt+0x2984>
  406dcc:	ldp	x19, x20, [sp, #16]
  406dd0:	ldp	x21, x22, [sp, #32]
  406dd4:	ldp	x29, x30, [sp], #112
  406dd8:	ret
  406ddc:	str	w22, [sp, #108]
  406de0:	b	406dbc <ferror@plt+0x44ec>
  406de4:	stp	x29, x30, [sp, #-416]!
  406de8:	mov	x29, sp
  406dec:	stp	x19, x20, [sp, #16]
  406df0:	stp	x21, x22, [sp, #32]
  406df4:	mov	w22, w0
  406df8:	mov	x19, x1
  406dfc:	mov	x20, x2
  406e00:	mov	x21, x3
  406e04:	str	x4, [sp, #384]
  406e08:	str	x5, [sp, #392]
  406e0c:	str	x6, [sp, #400]
  406e10:	str	x7, [sp, #408]
  406e14:	str	q0, [sp, #256]
  406e18:	str	q1, [sp, #272]
  406e1c:	str	q2, [sp, #288]
  406e20:	str	q3, [sp, #304]
  406e24:	str	q4, [sp, #320]
  406e28:	str	q5, [sp, #336]
  406e2c:	str	q6, [sp, #352]
  406e30:	str	q7, [sp, #368]
  406e34:	add	x0, sp, #0x1a0
  406e38:	str	x0, [sp, #224]
  406e3c:	str	x0, [sp, #232]
  406e40:	add	x0, sp, #0x180
  406e44:	str	x0, [sp, #240]
  406e48:	mov	w0, #0xffffffe0            	// #-32
  406e4c:	str	w0, [sp, #248]
  406e50:	mov	w0, #0xffffff80            	// #-128
  406e54:	str	w0, [sp, #252]
  406e58:	add	x0, sp, #0xd8
  406e5c:	bl	404f78 <ferror@plt+0x26a8>
  406e60:	mov	x3, #0x0                   	// #0
  406e64:	mov	w2, w22
  406e68:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  406e6c:	ldr	x1, [x0, #1896]
  406e70:	add	x0, sp, #0x30
  406e74:	bl	42a37c <ferror@plt+0x27aac>
  406e78:	mov	w6, #0x8                   	// #8
  406e7c:	add	x5, sp, #0xe0
  406e80:	mov	x4, x21
  406e84:	mov	x3, x20
  406e88:	mov	x2, x19
  406e8c:	mov	w1, #0xffffffff            	// #-1
  406e90:	add	x0, sp, #0x30
  406e94:	bl	406d70 <ferror@plt+0x44a0>
  406e98:	add	x0, sp, #0x30
  406e9c:	bl	42a10c <ferror@plt+0x2783c>
  406ea0:	add	x0, sp, #0xd8
  406ea4:	bl	404f90 <ferror@plt+0x26c0>
  406ea8:	ldp	x19, x20, [sp, #16]
  406eac:	ldp	x21, x22, [sp, #32]
  406eb0:	ldp	x29, x30, [sp], #416
  406eb4:	ret
  406eb8:	stp	x29, x30, [sp, #-272]!
  406ebc:	mov	x29, sp
  406ec0:	stp	x19, x20, [sp, #16]
  406ec4:	stp	x21, x22, [sp, #32]
  406ec8:	str	x23, [sp, #48]
  406ecc:	str	x5, [sp, #248]
  406ed0:	str	x6, [sp, #256]
  406ed4:	str	x7, [sp, #264]
  406ed8:	str	q0, [sp, #112]
  406edc:	str	q1, [sp, #128]
  406ee0:	str	q2, [sp, #144]
  406ee4:	str	q3, [sp, #160]
  406ee8:	str	q4, [sp, #176]
  406eec:	str	q5, [sp, #192]
  406ef0:	str	q6, [sp, #208]
  406ef4:	str	q7, [sp, #224]
  406ef8:	cbz	x0, 406f80 <ferror@plt+0x46b0>
  406efc:	mov	x19, x0
  406f00:	mov	w20, w1
  406f04:	mov	x21, x2
  406f08:	mov	x22, x3
  406f0c:	mov	x23, x4
  406f10:	add	x0, sp, #0x68
  406f14:	bl	404f78 <ferror@plt+0x26a8>
  406f18:	add	x0, sp, #0x110
  406f1c:	str	x0, [sp, #72]
  406f20:	str	x0, [sp, #80]
  406f24:	add	x0, sp, #0xf0
  406f28:	str	x0, [sp, #88]
  406f2c:	mov	w0, #0xffffffe8            	// #-24
  406f30:	str	w0, [sp, #96]
  406f34:	mov	w0, #0xffffff80            	// #-128
  406f38:	str	w0, [sp, #100]
  406f3c:	mov	w6, #0x6                   	// #6
  406f40:	add	x5, sp, #0x48
  406f44:	mov	x4, x23
  406f48:	mov	x3, x22
  406f4c:	mov	x2, x21
  406f50:	mov	w1, w20
  406f54:	mov	x0, x19
  406f58:	bl	406d70 <ferror@plt+0x44a0>
  406f5c:	mov	w19, w0
  406f60:	add	x0, sp, #0x68
  406f64:	bl	404f90 <ferror@plt+0x26c0>
  406f68:	mov	w0, w19
  406f6c:	ldp	x19, x20, [sp, #16]
  406f70:	ldp	x21, x22, [sp, #32]
  406f74:	ldr	x23, [sp, #48]
  406f78:	ldp	x29, x30, [sp], #272
  406f7c:	ret
  406f80:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  406f84:	add	x2, x2, #0x938
  406f88:	mov	w1, #0x528                 	// #1320
  406f8c:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  406f90:	add	x0, x0, #0x738
  406f94:	bl	4062a0 <ferror@plt+0x39d0>
  406f98:	stp	x29, x30, [sp, #-432]!
  406f9c:	mov	x29, sp
  406fa0:	stp	x19, x20, [sp, #16]
  406fa4:	stp	x21, x22, [sp, #32]
  406fa8:	str	x23, [sp, #48]
  406fac:	mov	w23, w0
  406fb0:	mov	w19, w1
  406fb4:	mov	x20, x2
  406fb8:	mov	x21, x3
  406fbc:	mov	x22, x4
  406fc0:	str	x5, [sp, #408]
  406fc4:	str	x6, [sp, #416]
  406fc8:	str	x7, [sp, #424]
  406fcc:	str	q0, [sp, #272]
  406fd0:	str	q1, [sp, #288]
  406fd4:	str	q2, [sp, #304]
  406fd8:	str	q3, [sp, #320]
  406fdc:	str	q4, [sp, #336]
  406fe0:	str	q5, [sp, #352]
  406fe4:	str	q6, [sp, #368]
  406fe8:	str	q7, [sp, #384]
  406fec:	add	x0, sp, #0x108
  406ff0:	bl	404f78 <ferror@plt+0x26a8>
  406ff4:	add	x0, sp, #0x1b0
  406ff8:	str	x0, [sp, #232]
  406ffc:	str	x0, [sp, #240]
  407000:	add	x0, sp, #0x190
  407004:	str	x0, [sp, #248]
  407008:	mov	w0, #0xffffffe8            	// #-24
  40700c:	str	w0, [sp, #256]
  407010:	mov	w0, #0xffffff80            	// #-128
  407014:	str	w0, [sp, #260]
  407018:	mov	x3, #0x0                   	// #0
  40701c:	mov	w2, w23
  407020:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  407024:	ldr	x1, [x0, #1896]
  407028:	add	x0, sp, #0x40
  40702c:	bl	42a37c <ferror@plt+0x27aac>
  407030:	mov	w6, #0x6                   	// #6
  407034:	add	x5, sp, #0xe8
  407038:	mov	x4, x22
  40703c:	mov	x3, x21
  407040:	mov	x2, x20
  407044:	mov	w1, w19
  407048:	add	x0, sp, #0x40
  40704c:	bl	406d70 <ferror@plt+0x44a0>
  407050:	mov	w19, w0
  407054:	add	x0, sp, #0x40
  407058:	bl	42a10c <ferror@plt+0x2783c>
  40705c:	add	x0, sp, #0x108
  407060:	bl	404f90 <ferror@plt+0x26c0>
  407064:	mov	w0, w19
  407068:	ldp	x19, x20, [sp, #16]
  40706c:	ldp	x21, x22, [sp, #32]
  407070:	ldr	x23, [sp, #48]
  407074:	ldp	x29, x30, [sp], #432
  407078:	ret
  40707c:	stp	x29, x30, [sp, #-416]!
  407080:	mov	x29, sp
  407084:	stp	x19, x20, [sp, #16]
  407088:	stp	x21, x22, [sp, #32]
  40708c:	mov	w22, w0
  407090:	mov	x19, x1
  407094:	mov	x20, x2
  407098:	mov	x21, x3
  40709c:	str	x4, [sp, #384]
  4070a0:	str	x5, [sp, #392]
  4070a4:	str	x6, [sp, #400]
  4070a8:	str	x7, [sp, #408]
  4070ac:	str	q0, [sp, #256]
  4070b0:	str	q1, [sp, #272]
  4070b4:	str	q2, [sp, #288]
  4070b8:	str	q3, [sp, #304]
  4070bc:	str	q4, [sp, #320]
  4070c0:	str	q5, [sp, #336]
  4070c4:	str	q6, [sp, #352]
  4070c8:	str	q7, [sp, #368]
  4070cc:	add	x0, sp, #0xf8
  4070d0:	bl	404f78 <ferror@plt+0x26a8>
  4070d4:	add	x0, sp, #0x1a0
  4070d8:	str	x0, [sp, #216]
  4070dc:	str	x0, [sp, #224]
  4070e0:	add	x0, sp, #0x180
  4070e4:	str	x0, [sp, #232]
  4070e8:	mov	w0, #0xffffffe0            	// #-32
  4070ec:	str	w0, [sp, #240]
  4070f0:	mov	w0, #0xffffff80            	// #-128
  4070f4:	str	w0, [sp, #244]
  4070f8:	mov	x3, #0x0                   	// #0
  4070fc:	mov	w2, w22
  407100:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  407104:	ldr	x1, [x0, #1896]
  407108:	add	x0, sp, #0x30
  40710c:	bl	42a37c <ferror@plt+0x27aac>
  407110:	mov	w6, #0x4                   	// #4
  407114:	add	x5, sp, #0xd8
  407118:	mov	x4, x21
  40711c:	mov	x3, x20
  407120:	mov	x2, x19
  407124:	mov	w1, #0xffffffff            	// #-1
  407128:	add	x0, sp, #0x30
  40712c:	bl	406d70 <ferror@plt+0x44a0>
  407130:	add	x0, sp, #0x30
  407134:	bl	42a10c <ferror@plt+0x2783c>
  407138:	add	x0, sp, #0xf8
  40713c:	bl	404f90 <ferror@plt+0x26c0>
  407140:	ldp	x19, x20, [sp, #16]
  407144:	ldp	x21, x22, [sp, #32]
  407148:	ldp	x29, x30, [sp], #416
  40714c:	ret
  407150:	cbz	x1, 407254 <ferror@plt+0x4984>
  407154:	stp	x29, x30, [sp, #-64]!
  407158:	mov	x29, sp
  40715c:	stp	x19, x20, [sp, #16]
  407160:	stp	x21, x22, [sp, #32]
  407164:	str	x23, [sp, #48]
  407168:	mov	x22, x0
  40716c:	mov	x19, x1
  407170:	ldr	x1, [x0, #16]
  407174:	cbz	x1, 407180 <ferror@plt+0x48b0>
  407178:	ldr	x0, [x19]
  40717c:	blr	x1
  407180:	ldr	x1, [x22, #24]
  407184:	cbz	x1, 407190 <ferror@plt+0x48c0>
  407188:	ldr	x0, [x19, #8]
  40718c:	blr	x1
  407190:	str	xzr, [x19, #32]
  407194:	mov	x21, #0x0                   	// #0
  407198:	mov	x23, #0x28                  	// #40
  40719c:	b	4071d8 <ferror@plt+0x4908>
  4071a0:	cbz	x21, 407240 <ferror@plt+0x4970>
  4071a4:	mov	x0, x21
  4071a8:	mov	x21, x20
  4071ac:	mov	x20, x0
  4071b0:	b	4071d4 <ferror@plt+0x4904>
  4071b4:	ldr	x0, [x19, #24]
  4071b8:	str	x21, [x0, #32]
  4071bc:	ldr	x21, [x19, #24]
  4071c0:	ldr	x20, [x19, #32]
  4071c4:	mov	x1, x23
  4071c8:	mov	x0, x19
  4071cc:	bl	447628 <_obstack_memory_used@@Base+0x6bc>
  4071d0:	cbz	x20, 4071a0 <ferror@plt+0x48d0>
  4071d4:	mov	x19, x20
  4071d8:	ldr	x0, [x19, #16]
  4071dc:	cbz	x0, 407210 <ferror@plt+0x4940>
  4071e0:	ldr	x1, [x22, #16]
  4071e4:	cbz	x1, 4071f0 <ferror@plt+0x4920>
  4071e8:	ldr	x0, [x0]
  4071ec:	blr	x1
  4071f0:	ldr	x1, [x22, #24]
  4071f4:	cbz	x1, 407204 <ferror@plt+0x4934>
  4071f8:	ldr	x0, [x19, #16]
  4071fc:	ldr	x0, [x0, #8]
  407200:	blr	x1
  407204:	ldr	x0, [x19, #16]
  407208:	str	x21, [x0, #32]
  40720c:	ldr	x21, [x19, #16]
  407210:	ldr	x0, [x19, #24]
  407214:	cbz	x0, 4071c0 <ferror@plt+0x48f0>
  407218:	ldr	x1, [x22, #16]
  40721c:	cbz	x1, 407228 <ferror@plt+0x4958>
  407220:	ldr	x0, [x0]
  407224:	blr	x1
  407228:	ldr	x1, [x22, #24]
  40722c:	cbz	x1, 4071b4 <ferror@plt+0x48e4>
  407230:	ldr	x0, [x19, #24]
  407234:	ldr	x0, [x0, #8]
  407238:	blr	x1
  40723c:	b	4071b4 <ferror@plt+0x48e4>
  407240:	ldp	x19, x20, [sp, #16]
  407244:	ldp	x21, x22, [sp, #32]
  407248:	ldr	x23, [sp, #48]
  40724c:	ldp	x29, x30, [sp], #64
  407250:	ret
  407254:	ret
  407258:	stp	x29, x30, [sp, #-96]!
  40725c:	mov	x29, sp
  407260:	stp	x21, x22, [sp, #32]
  407264:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  407268:	add	x0, x0, #0xba0
  40726c:	bl	402820 <getenv@plt>
  407270:	cbz	x0, 407408 <ferror@plt+0x4b38>
  407274:	stp	x23, x24, [sp, #48]
  407278:	mov	x23, x0
  40727c:	ldrb	w0, [x0]
  407280:	mov	w21, #0x0                   	// #0
  407284:	cbz	w0, 407410 <ferror@plt+0x4b40>
  407288:	stp	x19, x20, [sp, #16]
  40728c:	stp	x25, x26, [sp, #64]
  407290:	stp	x27, x28, [sp, #80]
  407294:	mov	x22, x23
  407298:	mov	x26, #0x0                   	// #0
  40729c:	mov	x20, #0x0                   	// #0
  4072a0:	mov	x24, #0x0                   	// #0
  4072a4:	mov	w28, #0x5b1b                	// #23323
  4072a8:	adrp	x27, 458000 <_obstack_memory_used@@Base+0x11094>
  4072ac:	add	x27, x27, #0xbb0
  4072b0:	b	407330 <ferror@plt+0x4a60>
  4072b4:	cbz	x24, 4072d4 <ferror@plt+0x4a04>
  4072b8:	sub	x26, x22, x24
  4072bc:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  4072c0:	ldr	x0, [x0, #856]
  4072c4:	cbz	x0, 407388 <ferror@plt+0x4ab8>
  4072c8:	adrp	x19, 488000 <_obstack_memory_used@@Base+0x41094>
  4072cc:	add	x19, x19, #0x358
  4072d0:	b	4072f0 <ferror@plt+0x4a20>
  4072d4:	sub	x20, x22, x23
  4072d8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  4072dc:	ldr	x0, [x0, #856]
  4072e0:	cbnz	x0, 4072c8 <ferror@plt+0x49f8>
  4072e4:	b	40731c <ferror@plt+0x4a4c>
  4072e8:	ldr	x0, [x19, #24]!
  4072ec:	cbz	x0, 40730c <ferror@plt+0x4a3c>
  4072f0:	ldrb	w1, [x19, #16]
  4072f4:	cmp	x1, x20
  4072f8:	b.ne	4072e8 <ferror@plt+0x4a18>  // b.any
  4072fc:	mov	x2, x20
  407300:	mov	x1, x23
  407304:	bl	4025e0 <memcmp@plt>
  407308:	cbnz	w0, 4072e8 <ferror@plt+0x4a18>
  40730c:	ldr	x0, [x19, #8]
  407310:	cmp	x24, #0x0
  407314:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  407318:	b.ne	407394 <ferror@plt+0x4ac4>  // b.any
  40731c:	ldrb	w0, [x25]
  407320:	cbz	w0, 407424 <ferror@plt+0x4b54>
  407324:	add	x23, x22, #0x1
  407328:	mov	x24, #0x0                   	// #0
  40732c:	add	x22, x22, #0x1
  407330:	mov	x25, x22
  407334:	ldrb	w0, [x22]
  407338:	cmp	w0, #0x0
  40733c:	cset	w21, eq  // eq = none
  407340:	cmp	w0, #0x3a
  407344:	csinc	w21, w21, wzr, ne  // ne = any
  407348:	cbnz	w21, 4072b4 <ferror@plt+0x49e4>
  40734c:	cmp	w0, #0x3d
  407350:	b.eq	4073e8 <ferror@plt+0x4b18>  // b.none
  407354:	cbz	x24, 40732c <ferror@plt+0x4a5c>
  407358:	cmp	w0, #0x3b
  40735c:	b.eq	40732c <ferror@plt+0x4a5c>  // b.none
  407360:	sub	w0, w0, #0x30
  407364:	and	w0, w0, #0xff
  407368:	cmp	w0, #0x9
  40736c:	b.ls	40732c <ferror@plt+0x4a5c>  // b.plast
  407370:	mov	w21, #0x1                   	// #1
  407374:	ldp	x19, x20, [sp, #16]
  407378:	ldp	x23, x24, [sp, #48]
  40737c:	ldp	x25, x26, [sp, #64]
  407380:	ldp	x27, x28, [sp, #80]
  407384:	b	407414 <ferror@plt+0x4b44>
  407388:	adrp	x19, 488000 <_obstack_memory_used@@Base+0x41094>
  40738c:	add	x19, x19, #0x358
  407390:	b	40730c <ferror@plt+0x4a3c>
  407394:	ldrb	w1, [x19, #17]
  407398:	cbnz	w1, 4073e0 <ferror@plt+0x4b10>
  40739c:	add	x0, x26, #0x7
  4073a0:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  4073a4:	mov	x23, x0
  4073a8:	strh	w28, [x0], #2
  4073ac:	mov	x2, x26
  4073b0:	mov	x1, x24
  4073b4:	bl	402260 <memcpy@plt>
  4073b8:	add	x0, x26, #0x2
  4073bc:	add	x1, x23, x0
  4073c0:	ldr	w2, [x27]
  4073c4:	str	w2, [x23, x0]
  4073c8:	ldrb	w0, [x27, #4]
  4073cc:	strb	w0, [x1, #4]
  4073d0:	str	x23, [x19, #8]
  4073d4:	mov	w0, #0x1                   	// #1
  4073d8:	strb	w0, [x19, #17]
  4073dc:	b	40731c <ferror@plt+0x4a4c>
  4073e0:	bl	402690 <free@plt>
  4073e4:	b	40739c <ferror@plt+0x4acc>
  4073e8:	cmp	x22, x23
  4073ec:	cset	w21, eq  // eq = none
  4073f0:	cmp	x24, #0x0
  4073f4:	csinc	w21, w21, wzr, eq  // eq = none
  4073f8:	cbnz	w21, 407438 <ferror@plt+0x4b68>
  4073fc:	sub	x20, x22, x23
  407400:	add	x24, x22, #0x1
  407404:	b	40732c <ferror@plt+0x4a5c>
  407408:	mov	w21, #0x1                   	// #1
  40740c:	b	407414 <ferror@plt+0x4b44>
  407410:	ldp	x23, x24, [sp, #48]
  407414:	mov	w0, w21
  407418:	ldp	x21, x22, [sp, #32]
  40741c:	ldp	x29, x30, [sp], #96
  407420:	ret
  407424:	ldp	x19, x20, [sp, #16]
  407428:	ldp	x23, x24, [sp, #48]
  40742c:	ldp	x25, x26, [sp, #64]
  407430:	ldp	x27, x28, [sp, #80]
  407434:	b	407414 <ferror@plt+0x4b44>
  407438:	ldp	x19, x20, [sp, #16]
  40743c:	ldp	x23, x24, [sp, #48]
  407440:	ldp	x25, x26, [sp, #64]
  407444:	ldp	x27, x28, [sp, #80]
  407448:	b	407414 <ferror@plt+0x4b44>
  40744c:	tst	w0, #0xff
  407450:	b.eq	4074c8 <ferror@plt+0x4bf8>  // b.none
  407454:	stp	x29, x30, [sp, #-48]!
  407458:	mov	x29, sp
  40745c:	stp	x19, x20, [sp, #16]
  407460:	str	x21, [sp, #32]
  407464:	mov	x21, x1
  407468:	mov	x20, x2
  40746c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  407470:	ldr	x0, [x0, #856]
  407474:	cbz	x0, 4074d4 <ferror@plt+0x4c04>
  407478:	adrp	x19, 488000 <_obstack_memory_used@@Base+0x41094>
  40747c:	add	x19, x19, #0x358
  407480:	b	40748c <ferror@plt+0x4bbc>
  407484:	ldr	x0, [x19, #24]!
  407488:	cbz	x0, 4074bc <ferror@plt+0x4bec>
  40748c:	ldrb	w3, [x19, #16]
  407490:	cmp	x3, x20
  407494:	b.ne	407484 <ferror@plt+0x4bb4>  // b.any
  407498:	mov	x2, x20
  40749c:	mov	x1, x21
  4074a0:	bl	4025e0 <memcmp@plt>
  4074a4:	cbnz	w0, 407484 <ferror@plt+0x4bb4>
  4074a8:	ldr	x0, [x19, #8]
  4074ac:	ldp	x19, x20, [sp, #16]
  4074b0:	ldr	x21, [sp, #32]
  4074b4:	ldp	x29, x30, [sp], #48
  4074b8:	ret
  4074bc:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  4074c0:	add	x0, x0, #0x710
  4074c4:	b	4074ac <ferror@plt+0x4bdc>
  4074c8:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  4074cc:	add	x0, x0, #0x710
  4074d0:	ret
  4074d4:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  4074d8:	add	x0, x0, #0x710
  4074dc:	b	4074ac <ferror@plt+0x4bdc>
  4074e0:	ands	w2, w0, #0xff
  4074e4:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  4074e8:	add	x1, x1, #0x710
  4074ec:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  4074f0:	add	x0, x0, #0xbb8
  4074f4:	csel	x0, x0, x1, ne  // ne = any
  4074f8:	ret
  4074fc:	stp	x29, x30, [sp, #-16]!
  407500:	mov	x29, sp
  407504:	cmp	w0, #0x1
  407508:	b.eq	407568 <ferror@plt+0x4c98>  // b.none
  40750c:	cmp	w0, #0x2
  407510:	b.ne	407554 <ferror@plt+0x4c84>  // b.any
  407514:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  407518:	add	x0, x0, #0xbc0
  40751c:	bl	402820 <getenv@plt>
  407520:	mov	w2, #0x0                   	// #0
  407524:	cbz	x0, 40755c <ferror@plt+0x4c8c>
  407528:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  40752c:	add	x1, x1, #0xbc8
  407530:	bl	402620 <strcmp@plt>
  407534:	mov	w2, #0x0                   	// #0
  407538:	cbz	w0, 40755c <ferror@plt+0x4c8c>
  40753c:	mov	w0, #0x2                   	// #2
  407540:	bl	402770 <isatty@plt>
  407544:	cbz	w0, 40758c <ferror@plt+0x4cbc>
  407548:	bl	407258 <ferror@plt+0x4988>
  40754c:	and	w2, w0, #0xff
  407550:	b	40755c <ferror@plt+0x4c8c>
  407554:	mov	w2, #0x0                   	// #0
  407558:	cbnz	w0, 407574 <ferror@plt+0x4ca4>
  40755c:	mov	w0, w2
  407560:	ldp	x29, x30, [sp], #16
  407564:	ret
  407568:	bl	407258 <ferror@plt+0x4988>
  40756c:	and	w2, w0, #0xff
  407570:	b	40755c <ferror@plt+0x4c8c>
  407574:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  407578:	add	x2, x2, #0xbd0
  40757c:	mov	w1, #0xec                  	// #236
  407580:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  407584:	add	x0, x0, #0xbe0
  407588:	bl	4062a0 <ferror@plt+0x39d0>
  40758c:	mov	w2, #0x0                   	// #0
  407590:	b	40755c <ferror@plt+0x4c8c>
  407594:	ldr	w2, [x0]
  407598:	ldr	w3, [x1]
  40759c:	subs	x2, x2, x3
  4075a0:	b.ne	4075bc <ferror@plt+0x4cec>  // b.any
  4075a4:	ldr	w0, [x0, #4]
  4075a8:	ldr	w1, [x1, #4]
  4075ac:	subs	x1, x0, x1
  4075b0:	mov	w0, #0x0                   	// #0
  4075b4:	b.ne	4075cc <ferror@plt+0x4cfc>  // b.any
  4075b8:	ret
  4075bc:	mov	w0, #0x1                   	// #1
  4075c0:	cmp	x2, #0x1
  4075c4:	cneg	w0, w0, lt  // lt = tstop
  4075c8:	b	4075b8 <ferror@plt+0x4ce8>
  4075cc:	mov	w0, #0xffffffff            	// #-1
  4075d0:	cmp	x1, #0x0
  4075d4:	cneg	w0, w0, gt
  4075d8:	b	4075b8 <ferror@plt+0x4ce8>
  4075dc:	ldr	x2, [x0]
  4075e0:	ldr	x0, [x1]
  4075e4:	ldr	w1, [x2]
  4075e8:	ldr	w0, [x0]
  4075ec:	sub	w0, w1, w0
  4075f0:	ret
  4075f4:	ldr	x4, [x0, #136]
  4075f8:	add	x0, x4, #0x8
  4075fc:	mov	w2, #0x0                   	// #0
  407600:	mov	w5, #0x0                   	// #0
  407604:	b	407610 <ferror@plt+0x4d40>
  407608:	add	w2, w2, #0x1
  40760c:	add	x0, x0, #0x8
  407610:	mov	w3, w5
  407614:	cbz	x4, 40761c <ferror@plt+0x4d4c>
  407618:	ldr	w3, [x4, #4]
  40761c:	cmp	w2, w3
  407620:	b.ge	407644 <ferror@plt+0x4d74>  // b.tcont
  407624:	ldr	w3, [x0]
  407628:	cmp	w1, w3
  40762c:	b.cc	407608 <ferror@plt+0x4d38>  // b.lo, b.ul, b.last
  407630:	ldr	w3, [x0, #4]
  407634:	cmp	w1, w3
  407638:	b.hi	407608 <ferror@plt+0x4d38>  // b.pmore
  40763c:	mov	w0, #0x1                   	// #1
  407640:	ret
  407644:	mov	w0, #0x0                   	// #0
  407648:	b	407640 <ferror@plt+0x4d70>
  40764c:	ldr	w2, [x0, #4]
  407650:	ldr	w3, [x1, #4]
  407654:	subs	x2, x2, x3
  407658:	b.ne	407674 <ferror@plt+0x4da4>  // b.any
  40765c:	ldr	w0, [x0]
  407660:	ldr	w1, [x1]
  407664:	subs	x1, x0, x1
  407668:	mov	w0, #0x0                   	// #0
  40766c:	b.ne	407684 <ferror@plt+0x4db4>  // b.any
  407670:	ret
  407674:	mov	w0, #0x1                   	// #1
  407678:	cmp	x2, #0x1
  40767c:	cneg	w0, w0, lt  // lt = tstop
  407680:	b	407670 <ferror@plt+0x4da0>
  407684:	mov	w0, #0xffffffff            	// #-1
  407688:	cmp	x1, #0x0
  40768c:	cneg	w0, w0, gt
  407690:	b	407670 <ferror@plt+0x4da0>
  407694:	ldr	x7, [x0, #120]
  407698:	cbz	x7, 40782c <ferror@plt+0x4f5c>
  40769c:	add	x6, x7, #0x8
  4076a0:	ldr	w8, [x7, #4]
  4076a4:	mov	w0, #0x0                   	// #0
  4076a8:	mov	w11, w0
  4076ac:	cmp	w0, w8
  4076b0:	b.eq	40784c <ferror@plt+0x4f7c>  // b.none
  4076b4:	mov	x12, x6
  4076b8:	ldr	w9, [x6, #16]
  4076bc:	cmp	w9, #0x2
  4076c0:	b.eq	407840 <ferror@plt+0x4f70>  // b.none
  4076c4:	stp	x29, x30, [sp, #-16]!
  4076c8:	mov	x29, sp
  4076cc:	b	407734 <ferror@plt+0x4e64>
  4076d0:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  4076d4:	add	x2, x2, #0xd18
  4076d8:	mov	w1, #0x1d8                 	// #472
  4076dc:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  4076e0:	add	x0, x0, #0xd28
  4076e4:	bl	4062a0 <ferror@plt+0x39d0>
  4076e8:	ldr	w13, [x12, #4]
  4076ec:	cmp	w2, w13
  4076f0:	b.lt	407710 <ferror@plt+0x4e40>  // b.tstop
  4076f4:	cmp	w9, w10
  4076f8:	b.cc	407790 <ferror@plt+0x4ec0>  // b.lo, b.ul, b.last
  4076fc:	b.ne	407770 <ferror@plt+0x4ea0>  // b.any
  407700:	ldr	w9, [x12, #12]
  407704:	cmp	w2, w9
  407708:	cset	w9, le
  40770c:	cbnz	w9, 407790 <ferror@plt+0x4ec0>
  407710:	add	w0, w0, #0x1
  407714:	add	x6, x6, #0x28
  407718:	mov	w11, w0
  40771c:	cmp	w0, w8
  407720:	b.eq	407834 <ferror@plt+0x4f64>  // b.none
  407724:	mov	x12, x6
  407728:	ldr	w9, [x6, #16]
  40772c:	cmp	w9, #0x2
  407730:	b.eq	407710 <ferror@plt+0x4e40>  // b.none
  407734:	ldr	w9, [x6]
  407738:	ldr	w10, [x6, #8]
  40773c:	cmp	w9, w10
  407740:	b.hi	4076d0 <ferror@plt+0x4e00>  // b.pmore
  407744:	cmp	w1, w9
  407748:	b.cc	407710 <ferror@plt+0x4e40>  // b.lo, b.ul, b.last
  40774c:	b.eq	4076e8 <ferror@plt+0x4e18>  // b.none
  407750:	cmp	w1, w10
  407754:	b.hi	407710 <ferror@plt+0x4e40>  // b.pmore
  407758:	b.cc	407788 <ferror@plt+0x4eb8>  // b.lo, b.ul, b.last
  40775c:	b.ne	4077ec <ferror@plt+0x4f1c>  // b.any
  407760:	ldr	w9, [x12, #12]
  407764:	cmp	w2, w9
  407768:	cset	w9, le
  40776c:	b	40770c <ferror@plt+0x4e3c>
  407770:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  407774:	add	x2, x2, #0xd18
  407778:	mov	w1, #0x1f3                 	// #499
  40777c:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  407780:	add	x0, x0, #0xd28
  407784:	bl	4062a0 <ferror@plt+0x39d0>
  407788:	cmp	w9, w10
  40778c:	b.eq	4077d4 <ferror@plt+0x4f04>  // b.none
  407790:	str	w0, [x5]
  407794:	strb	wzr, [x5, #4]
  407798:	ubfiz	x0, x11, #2, #32
  40779c:	add	x0, x0, w11, uxtw
  4077a0:	add	x0, x7, x0, lsl #3
  4077a4:	ldr	w0, [x0, #24]
  4077a8:	cbnz	w0, 4077c4 <ferror@plt+0x4ef4>
  4077ac:	ubfiz	x0, x11, #2, #32
  4077b0:	add	x0, x0, w11, uxtw
  4077b4:	add	x0, x7, x0, lsl #3
  4077b8:	ldr	w0, [x0, #28]
  4077bc:	cmp	w0, w1
  4077c0:	b.eq	407804 <ferror@plt+0x4f34>  // b.none
  4077c4:	cmp	w2, w3
  4077c8:	ccmp	w2, w4, #0x0, ge  // ge = tcont
  4077cc:	cset	w0, le
  4077d0:	b	407838 <ferror@plt+0x4f68>
  4077d4:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  4077d8:	add	x2, x2, #0xd18
  4077dc:	mov	w1, #0x207                 	// #519
  4077e0:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  4077e4:	add	x0, x0, #0xd28
  4077e8:	bl	4062a0 <ferror@plt+0x39d0>
  4077ec:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  4077f0:	add	x2, x2, #0xd18
  4077f4:	mov	w1, #0x20b                 	// #523
  4077f8:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  4077fc:	add	x0, x0, #0xd28
  407800:	bl	4062a0 <ferror@plt+0x39d0>
  407804:	ubfiz	x0, x11, #2, #32
  407808:	add	x11, x0, w11, uxtw
  40780c:	add	x7, x7, x11, lsl #3
  407810:	ldr	w0, [x7, #32]
  407814:	cmp	w0, w2
  407818:	b.ne	4077c4 <ferror@plt+0x4ef4>  // b.any
  40781c:	mov	w0, #0x1                   	// #1
  407820:	strb	w0, [x5, #4]
  407824:	mov	w0, #0x1                   	// #1
  407828:	b	407838 <ferror@plt+0x4f68>
  40782c:	mov	w0, #0x0                   	// #0
  407830:	ret
  407834:	mov	w0, #0x0                   	// #0
  407838:	ldp	x29, x30, [sp], #16
  40783c:	ret
  407840:	add	w0, w0, #0x1
  407844:	add	x6, x6, #0x28
  407848:	b	4076a8 <ferror@plt+0x4dd8>
  40784c:	mov	w0, #0x0                   	// #0
  407850:	ret
  407854:	stp	x29, x30, [sp, #-32]!
  407858:	mov	x29, sp
  40785c:	stp	x19, x20, [sp, #16]
  407860:	mov	x20, x0
  407864:	mov	x19, x1
  407868:	mov	x0, x1
  40786c:	bl	4022b0 <strlen@plt>
  407870:	ldr	x1, [x20]
  407874:	ldr	x3, [x1]
  407878:	mov	x2, x0
  40787c:	mov	x1, x19
  407880:	ldrb	w0, [x3, #67]
  407884:	bl	40744c <ferror@plt+0x4b7c>
  407888:	ldp	x19, x20, [sp, #16]
  40788c:	ldp	x29, x30, [sp], #32
  407890:	ret
  407894:	stp	x29, x30, [sp, #-48]!
  407898:	mov	x29, sp
  40789c:	stp	x19, x20, [sp, #16]
  4078a0:	mov	x20, x0
  4078a4:	ldrb	w0, [x0, #114]
  4078a8:	cbz	w0, 407924 <ferror@plt+0x5054>
  4078ac:	stp	x21, x22, [sp, #32]
  4078b0:	and	w21, w1, #0xff
  4078b4:	ldr	w0, [x20, #144]
  4078b8:	mov	w19, #0x0                   	// #0
  4078bc:	mov	w22, #0x20                  	// #32
  4078c0:	cmp	w0, #0x3
  4078c4:	b.le	4078e8 <ferror@plt+0x5018>
  4078c8:	mov	w1, w22
  4078cc:	ldr	x0, [x20, #8]
  4078d0:	bl	40c914 <ferror@plt+0xa044>
  4078d4:	add	w19, w19, #0x1
  4078d8:	ldr	w0, [x20, #144]
  4078dc:	sub	w0, w0, #0x3
  4078e0:	cmp	w0, w19
  4078e4:	b.gt	4078c8 <ferror@plt+0x4ff8>
  4078e8:	ldr	w0, [x20, #144]
  4078ec:	cmp	w0, w19
  4078f0:	b.le	407910 <ferror@plt+0x5040>
  4078f4:	mov	w1, w21
  4078f8:	ldr	x0, [x20, #8]
  4078fc:	bl	40c914 <ferror@plt+0xa044>
  407900:	add	w19, w19, #0x1
  407904:	ldr	w0, [x20, #144]
  407908:	cmp	w0, w19
  40790c:	b.gt	4078f4 <ferror@plt+0x5024>
  407910:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  407914:	add	x1, x1, #0xd50
  407918:	ldr	x0, [x20, #8]
  40791c:	bl	40cf0c <ferror@plt+0xa63c>
  407920:	ldp	x21, x22, [sp, #32]
  407924:	ldp	x19, x20, [sp, #16]
  407928:	ldp	x29, x30, [sp], #48
  40792c:	ret
  407930:	ldr	w1, [x0, #12]
  407934:	cmn	w1, #0x1
  407938:	b.ne	407940 <ferror@plt+0x5070>  // b.any
  40793c:	ret
  407940:	stp	x29, x30, [sp, #-16]!
  407944:	mov	x29, sp
  407948:	ldr	x2, [x0]
  40794c:	ldr	x1, [x0, #48]
  407950:	ldr	x0, [x2]
  407954:	bl	40cf0c <ferror@plt+0xa63c>
  407958:	ldp	x29, x30, [sp], #16
  40795c:	ret
  407960:	stp	x29, x30, [sp, #-64]!
  407964:	mov	x29, sp
  407968:	stp	x19, x20, [sp, #16]
  40796c:	stp	x21, x22, [sp, #32]
  407970:	mov	w21, w0
  407974:	mov	w19, w1
  407978:	tbnz	w0, #31, 4079b4 <ferror@plt+0x50e4>
  40797c:	tbnz	w19, #31, 4079cc <ferror@plt+0x50fc>
  407980:	cmp	w21, #0x1
  407984:	cset	w2, ls  // ls = plast
  407988:	cmp	w19, #0x1
  40798c:	cset	w1, ls  // ls = plast
  407990:	orr	w22, w2, w1
  407994:	cbz	w22, 4079e4 <ferror@plt+0x5114>
  407998:	cmp	w21, w19
  40799c:	cset	w22, eq  // eq = none
  4079a0:	mov	w0, w22
  4079a4:	ldp	x19, x20, [sp, #16]
  4079a8:	ldp	x21, x22, [sp, #32]
  4079ac:	ldp	x29, x30, [sp], #64
  4079b0:	ret
  4079b4:	mov	w1, w0
  4079b8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  4079bc:	ldr	x0, [x0, #1896]
  4079c0:	bl	42833c <ferror@plt+0x25a6c>
  4079c4:	mov	w21, w0
  4079c8:	b	40797c <ferror@plt+0x50ac>
  4079cc:	mov	w1, w19
  4079d0:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  4079d4:	ldr	x0, [x0, #1896]
  4079d8:	bl	42833c <ferror@plt+0x25a6c>
  4079dc:	mov	w19, w0
  4079e0:	b	407980 <ferror@plt+0x50b0>
  4079e4:	str	x23, [sp, #48]
  4079e8:	adrp	x20, 488000 <_obstack_memory_used@@Base+0x41094>
  4079ec:	mov	w1, w21
  4079f0:	ldr	x0, [x20, #1896]
  4079f4:	bl	428bdc <ferror@plt+0x2630c>
  4079f8:	mov	x23, x0
  4079fc:	mov	w1, w19
  407a00:	ldr	x0, [x20, #1896]
  407a04:	bl	428bdc <ferror@plt+0x2630c>
  407a08:	mov	x20, x0
  407a0c:	cmp	x23, x0
  407a10:	b.eq	407a2c <ferror@plt+0x515c>  // b.none
  407a14:	mov	x0, x23
  407a18:	bl	428b34 <ferror@plt+0x26264>
  407a1c:	ands	w19, w0, #0xff
  407a20:	b.eq	407a88 <ferror@plt+0x51b8>  // b.none
  407a24:	ldr	x23, [sp, #48]
  407a28:	b	4079a0 <ferror@plt+0x50d0>
  407a2c:	mov	x0, x23
  407a30:	bl	428b34 <ferror@plt+0x26264>
  407a34:	and	w0, w0, #0xff
  407a38:	mov	w22, #0x1                   	// #1
  407a3c:	cbnz	w0, 407a48 <ferror@plt+0x5178>
  407a40:	ldr	x23, [sp, #48]
  407a44:	b	4079a0 <ferror@plt+0x50d0>
  407a48:	adrp	x22, 488000 <_obstack_memory_used@@Base+0x41094>
  407a4c:	mov	w2, w21
  407a50:	mov	x1, x23
  407a54:	ldr	x0, [x22, #1896]
  407a58:	bl	428b54 <ferror@plt+0x26284>
  407a5c:	mov	w20, w0
  407a60:	mov	w2, w19
  407a64:	mov	x1, x23
  407a68:	ldr	x0, [x22, #1896]
  407a6c:	bl	428b54 <ferror@plt+0x26284>
  407a70:	mov	w1, w0
  407a74:	mov	w0, w20
  407a78:	bl	407960 <ferror@plt+0x5090>
  407a7c:	and	w22, w0, #0xff
  407a80:	ldr	x23, [sp, #48]
  407a84:	b	4079a0 <ferror@plt+0x50d0>
  407a88:	mov	x0, x20
  407a8c:	bl	428b34 <ferror@plt+0x26264>
  407a90:	and	w0, w0, #0xff
  407a94:	mov	w22, w19
  407a98:	cbnz	w0, 407ab4 <ferror@plt+0x51e4>
  407a9c:	ldr	x1, [x23, #8]
  407aa0:	ldr	x0, [x20, #8]
  407aa4:	cmp	x1, x0
  407aa8:	cset	w22, eq  // eq = none
  407aac:	ldr	x23, [sp, #48]
  407ab0:	b	4079a0 <ferror@plt+0x50d0>
  407ab4:	ldr	x23, [sp, #48]
  407ab8:	b	4079a0 <ferror@plt+0x50d0>
  407abc:	stp	x29, x30, [sp, #-224]!
  407ac0:	mov	x29, sp
  407ac4:	cbz	x1, 407b50 <ferror@plt+0x5280>
  407ac8:	stp	x19, x20, [sp, #16]
  407acc:	stp	x21, x22, [sp, #32]
  407ad0:	stp	x23, x24, [sp, #48]
  407ad4:	mov	x21, x0
  407ad8:	mov	x19, x1
  407adc:	mov	w22, w2
  407ae0:	and	w24, w3, #0xff
  407ae4:	ldr	w1, [x1]
  407ae8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  407aec:	ldr	x0, [x0, #1896]
  407af0:	bl	428f64 <ferror@plt+0x26694>
  407af4:	mov	x20, x0
  407af8:	lsr	x23, x0, #32
  407afc:	add	x8, sp, #0xc0
  407b00:	mov	w1, #0x1                   	// #1
  407b04:	bl	412104 <ferror@plt+0xf834>
  407b08:	add	x8, sp, #0xa0
  407b0c:	mov	w1, #0x2                   	// #2
  407b10:	mov	w0, w23
  407b14:	bl	412104 <ferror@plt+0xf834>
  407b18:	add	x8, sp, #0x80
  407b1c:	mov	w1, #0x0                   	// #0
  407b20:	ldr	w0, [x19]
  407b24:	bl	412104 <ferror@plt+0xf834>
  407b28:	ldr	x1, [x21, #24]
  407b2c:	mov	w0, #0x0                   	// #0
  407b30:	ldr	x2, [sp, #192]
  407b34:	cmp	x2, x1
  407b38:	b.eq	407b7c <ferror@plt+0x52ac>  // b.none
  407b3c:	ldp	x19, x20, [sp, #16]
  407b40:	ldp	x21, x22, [sp, #32]
  407b44:	ldp	x23, x24, [sp, #48]
  407b48:	ldp	x29, x30, [sp], #224
  407b4c:	ret
  407b50:	stp	x19, x20, [sp, #16]
  407b54:	stp	x21, x22, [sp, #32]
  407b58:	stp	x23, x24, [sp, #48]
  407b5c:	stp	x25, x26, [sp, #64]
  407b60:	stp	x27, x28, [sp, #80]
  407b64:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  407b68:	add	x2, x2, #0xd58
  407b6c:	mov	w1, #0x39f                 	// #927
  407b70:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  407b74:	add	x0, x0, #0xd28
  407b78:	bl	4062a0 <ferror@plt+0x39d0>
  407b7c:	ldr	x2, [sp, #160]
  407b80:	cmp	x1, x2
  407b84:	b.ne	407b3c <ferror@plt+0x526c>  // b.any
  407b88:	stp	x25, x26, [sp, #64]
  407b8c:	stp	x27, x28, [sp, #80]
  407b90:	ldr	w0, [x19, #4]
  407b94:	cbnz	w0, 407bd4 <ferror@plt+0x5304>
  407b98:	ldr	x2, [sp, #128]
  407b9c:	cmp	x1, x2
  407ba0:	b.eq	407bb0 <ferror@plt+0x52e0>  // b.none
  407ba4:	ldp	x25, x26, [sp, #64]
  407ba8:	ldp	x27, x28, [sp, #80]
  407bac:	b	407b3c <ferror@plt+0x526c>
  407bb0:	ldr	x0, [x21, #120]
  407bb4:	cbz	x0, 407bd4 <ferror@plt+0x5304>
  407bb8:	ldr	w0, [x0, #4]
  407bbc:	cbz	w0, 407ec8 <ferror@plt+0x55f8>
  407bc0:	ldr	w1, [x21, #16]
  407bc4:	ldr	w0, [x19]
  407bc8:	bl	407960 <ferror@plt+0x5090>
  407bcc:	ands	w0, w0, #0xff
  407bd0:	b.eq	407ef8 <ferror@plt+0x5628>  // b.none
  407bd4:	ldr	w0, [x19, #4]
  407bd8:	str	w0, [sp, #120]
  407bdc:	ldr	x0, [x19, #8]
  407be0:	str	x0, [sp, #112]
  407be4:	ldr	w27, [sp, #200]
  407be8:	ldr	w28, [sp, #168]
  407bec:	ldr	w25, [sp, #136]
  407bf0:	ldr	w26, [sp, #140]
  407bf4:	cmp	w27, w28
  407bf8:	b.le	407db0 <ferror@plt+0x54e0>
  407bfc:	ldr	x0, [x21, #120]
  407c00:	cbz	x0, 407eb0 <ferror@plt+0x55e0>
  407c04:	ldr	w0, [x0, #4]
  407c08:	cbnz	w0, 407dfc <ferror@plt+0x552c>
  407c0c:	cbz	w24, 407e78 <ferror@plt+0x55a8>
  407c10:	str	w26, [sp, #108]
  407c14:	str	w26, [sp, #104]
  407c18:	str	w25, [sp, #124]
  407c1c:	mov	w23, w25
  407c20:	mov	w1, w27
  407c24:	mov	x0, x21
  407c28:	bl	4075f4 <ferror@plt+0x4d24>
  407c2c:	ands	w0, w0, #0xff
  407c30:	b.eq	407f04 <ferror@plt+0x5634>  // b.none
  407c34:	mov	w1, w28
  407c38:	mov	x0, x21
  407c3c:	bl	4075f4 <ferror@plt+0x4d24>
  407c40:	ands	w0, w0, #0xff
  407c44:	b.eq	407f10 <ferror@plt+0x5640>  // b.none
  407c48:	ldr	w0, [x19, #4]
  407c4c:	cbnz	w0, 407c64 <ferror@plt+0x5394>
  407c50:	mov	w1, w23
  407c54:	mov	x0, x21
  407c58:	bl	4075f4 <ferror@plt+0x4d24>
  407c5c:	ands	w0, w0, #0xff
  407c60:	b.eq	407e0c <ferror@plt+0x553c>  // b.none
  407c64:	ldr	x19, [x21, #120]
  407c68:	cbz	x19, 407e3c <ferror@plt+0x556c>
  407c6c:	ldr	w0, [x19]
  407c70:	ubfx	x0, x0, #0, #31
  407c74:	ldr	w1, [x19, #4]
  407c78:	cmp	w0, w1
  407c7c:	b.ne	407d44 <ferror@plt+0x5474>  // b.any
  407c80:	ldrsb	w0, [x19, #3]
  407c84:	tbnz	w0, #31, 407e28 <ferror@plt+0x5558>
  407c88:	mov	w24, #0x0                   	// #0
  407c8c:	mov	w27, #0x0                   	// #0
  407c90:	mov	w1, #0x1                   	// #1
  407c94:	ldr	x0, [x21, #120]
  407c98:	cbz	x0, 407e4c <ferror@plt+0x557c>
  407c9c:	ldr	w2, [x0, #4]
  407ca0:	ldr	w0, [x0]
  407ca4:	add	w1, w1, w2
  407ca8:	and	w0, w0, #0x7fffffff
  407cac:	bl	40f5bc <ferror@plt+0xccec>
  407cb0:	mov	w20, w0
  407cb4:	ubfiz	x1, x20, #2, #32
  407cb8:	add	x1, x1, w0, uxtw
  407cbc:	lsl	x1, x1, #3
  407cc0:	add	x1, x1, #0x8
  407cc4:	ldr	x0, [x21, #120]
  407cc8:	cbz	x0, 407e70 <ferror@plt+0x55a0>
  407ccc:	ldr	w28, [x0, #4]
  407cd0:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  407cd4:	str	x0, [x21, #120]
  407cd8:	ldr	w1, [x0]
  407cdc:	bfxil	w1, w20, #0, #31
  407ce0:	str	w1, [x0]
  407ce4:	ubfx	x1, x1, #24, #7
  407ce8:	strb	w1, [x0, #3]
  407cec:	str	w28, [x0, #4]
  407cf0:	cbz	w24, 407d44 <ferror@plt+0x5474>
  407cf4:	ldr	x6, [x21, #120]
  407cf8:	cbz	w27, 407d3c <ferror@plt+0x546c>
  407cfc:	sub	w0, w27, #0x1
  407d00:	add	x0, x0, x0, lsl #2
  407d04:	lsl	x3, x0, #3
  407d08:	add	x3, x3, #0x30
  407d0c:	mov	x0, #0x8                   	// #8
  407d10:	add	x1, x6, x0
  407d14:	add	x2, x19, x0
  407d18:	ldp	x4, x5, [x2]
  407d1c:	stp	x4, x5, [x1]
  407d20:	ldp	x4, x5, [x2, #16]
  407d24:	stp	x4, x5, [x1, #16]
  407d28:	ldr	x2, [x2, #32]
  407d2c:	str	x2, [x1, #32]
  407d30:	add	x0, x0, #0x28
  407d34:	cmp	x0, x3
  407d38:	b.ne	407d10 <ferror@plt+0x5440>  // b.any
  407d3c:	ldr	x0, [x21, #120]
  407d40:	str	w27, [x0, #4]
  407d44:	ldr	x2, [x21, #120]
  407d48:	ldr	w0, [x2, #4]
  407d4c:	add	w1, w0, #0x1
  407d50:	str	w1, [x2, #4]
  407d54:	ubfiz	x1, x0, #2, #32
  407d58:	add	x0, x1, w0, uxtw
  407d5c:	lsl	x0, x0, #3
  407d60:	add	x0, x0, #0x8
  407d64:	add	x1, x2, x0
  407d68:	str	w25, [x2, x0]
  407d6c:	ldr	w0, [sp, #104]
  407d70:	str	w0, [x1, #4]
  407d74:	ldr	w0, [sp, #124]
  407d78:	str	w0, [x1, #8]
  407d7c:	ldr	w0, [sp, #108]
  407d80:	str	w0, [x1, #12]
  407d84:	ldr	w0, [sp, #120]
  407d88:	str	w0, [x1, #16]
  407d8c:	str	w23, [x1, #20]
  407d90:	str	w26, [x1, #24]
  407d94:	str	w22, [x1, #28]
  407d98:	ldr	x0, [sp, #112]
  407d9c:	str	x0, [x1, #32]
  407da0:	mov	w0, #0x1                   	// #1
  407da4:	ldp	x25, x26, [sp, #64]
  407da8:	ldp	x27, x28, [sp, #80]
  407dac:	b	407b3c <ferror@plt+0x526c>
  407db0:	ldr	w0, [sp, #204]
  407db4:	str	w0, [sp, #104]
  407db8:	ldr	w0, [sp, #172]
  407dbc:	str	w0, [sp, #108]
  407dc0:	ldr	w1, [x21, #16]
  407dc4:	mov	w0, w20
  407dc8:	bl	407960 <ferror@plt+0x5090>
  407dcc:	and	w0, w0, #0xff
  407dd0:	cbz	w0, 407bfc <ferror@plt+0x532c>
  407dd4:	ldr	w1, [x21, #16]
  407dd8:	mov	w0, w23
  407ddc:	bl	407960 <ferror@plt+0x5090>
  407de0:	and	w0, w0, #0xff
  407de4:	cbz	w0, 407bfc <ferror@plt+0x532c>
  407de8:	cbz	w24, 407e18 <ferror@plt+0x5548>
  407dec:	str	w28, [sp, #124]
  407df0:	mov	w23, w25
  407df4:	mov	w25, w27
  407df8:	b	407c20 <ferror@plt+0x5350>
  407dfc:	mov	w0, #0x0                   	// #0
  407e00:	ldp	x25, x26, [sp, #64]
  407e04:	ldp	x27, x28, [sp, #80]
  407e08:	b	407b3c <ferror@plt+0x526c>
  407e0c:	ldp	x25, x26, [sp, #64]
  407e10:	ldp	x27, x28, [sp, #80]
  407e14:	b	407b3c <ferror@plt+0x526c>
  407e18:	str	w28, [sp, #124]
  407e1c:	mov	w23, w25
  407e20:	mov	w25, w27
  407e24:	b	407c64 <ferror@plt+0x5394>
  407e28:	str	xzr, [x21, #120]
  407e2c:	ldr	w27, [x19, #4]
  407e30:	add	w1, w27, #0x1
  407e34:	mov	w24, #0x1                   	// #1
  407e38:	b	407c94 <ferror@plt+0x53c4>
  407e3c:	mov	w24, #0x0                   	// #0
  407e40:	mov	w27, #0x0                   	// #0
  407e44:	mov	w1, #0x1                   	// #1
  407e48:	b	407c94 <ferror@plt+0x53c4>
  407e4c:	mov	w2, #0x4                   	// #4
  407e50:	cmp	w1, w2
  407e54:	csel	w20, w1, w2, cs  // cs = hs, nlast
  407e58:	csel	w1, w1, w2, cs  // cs = hs, nlast
  407e5c:	add	x1, x1, x1, lsl #2
  407e60:	lsl	x1, x1, #3
  407e64:	add	x1, x1, #0x8
  407e68:	mov	w28, #0x0                   	// #0
  407e6c:	b	407cd0 <ferror@plt+0x5400>
  407e70:	mov	w28, #0x0                   	// #0
  407e74:	b	407cd0 <ferror@plt+0x5400>
  407e78:	ldr	x19, [x21, #120]
  407e7c:	str	w26, [sp, #108]
  407e80:	str	w26, [sp, #104]
  407e84:	str	w25, [sp, #124]
  407e88:	mov	w23, w25
  407e8c:	b	407c6c <ferror@plt+0x539c>
  407e90:	ldr	x19, [x21, #120]
  407e94:	str	w26, [sp, #108]
  407e98:	str	w26, [sp, #104]
  407e9c:	str	w25, [sp, #124]
  407ea0:	mov	w23, w25
  407ea4:	mov	w27, #0x0                   	// #0
  407ea8:	mov	w1, #0x1                   	// #1
  407eac:	b	407c94 <ferror@plt+0x53c4>
  407eb0:	cbz	w24, 407e90 <ferror@plt+0x55c0>
  407eb4:	str	w26, [sp, #108]
  407eb8:	str	w26, [sp, #104]
  407ebc:	str	w25, [sp, #124]
  407ec0:	mov	w23, w25
  407ec4:	b	407c20 <ferror@plt+0x5350>
  407ec8:	ldr	w0, [x19, #4]
  407ecc:	str	w0, [sp, #120]
  407ed0:	ldr	x0, [x19, #8]
  407ed4:	str	x0, [sp, #112]
  407ed8:	ldr	w27, [sp, #200]
  407edc:	ldr	w28, [sp, #168]
  407ee0:	ldr	w25, [sp, #136]
  407ee4:	ldr	w26, [sp, #140]
  407ee8:	cmp	w27, w28
  407eec:	b.le	407db0 <ferror@plt+0x54e0>
  407ef0:	ldr	x0, [x21, #120]
  407ef4:	b	407c04 <ferror@plt+0x5334>
  407ef8:	ldp	x25, x26, [sp, #64]
  407efc:	ldp	x27, x28, [sp, #80]
  407f00:	b	407b3c <ferror@plt+0x526c>
  407f04:	ldp	x25, x26, [sp, #64]
  407f08:	ldp	x27, x28, [sp, #80]
  407f0c:	b	407b3c <ferror@plt+0x526c>
  407f10:	ldp	x25, x26, [sp, #64]
  407f14:	ldp	x27, x28, [sp, #80]
  407f18:	b	407b3c <ferror@plt+0x526c>
  407f1c:	stp	x29, x30, [sp, #-144]!
  407f20:	mov	x29, sp
  407f24:	stp	x19, x20, [sp, #16]
  407f28:	stp	x21, x22, [sp, #32]
  407f2c:	stp	x23, x24, [sp, #48]
  407f30:	stp	x25, x26, [sp, #64]
  407f34:	stp	x27, x28, [sp, #80]
  407f38:	mov	x20, x0
  407f3c:	mov	x25, x1
  407f40:	mov	x19, x2
  407f44:	mov	w22, w3
  407f48:	str	x1, [x0]
  407f4c:	ldr	x0, [x1]
  407f50:	str	x0, [x20, #8]
  407f54:	mov	w1, #0x0                   	// #0
  407f58:	mov	x0, x2
  407f5c:	bl	42a1e8 <ferror@plt+0x27918>
  407f60:	ldr	w0, [x0]
  407f64:	str	w0, [x20, #16]
  407f68:	add	x8, x20, #0x18
  407f6c:	mov	w1, #0x0                   	// #0
  407f70:	mov	x0, x19
  407f74:	bl	42a210 <ferror@plt+0x27940>
  407f78:	add	x21, x20, #0x38
  407f7c:	str	x25, [x20, #56]
  407f80:	str	w22, [x20, #64]
  407f84:	mov	w0, #0xffffffff            	// #-1
  407f88:	str	w0, [x20, #68]
  407f8c:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  407f90:	add	x1, x1, #0xc30
  407f94:	mov	x0, x21
  407f98:	bl	407854 <ferror@plt+0x4f84>
  407f9c:	str	x0, [x20, #72]
  407fa0:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  407fa4:	add	x1, x1, #0xc48
  407fa8:	mov	x0, x21
  407fac:	bl	407854 <ferror@plt+0x4f84>
  407fb0:	str	x0, [x20, #80]
  407fb4:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  407fb8:	add	x1, x1, #0xc78
  407fbc:	mov	x0, x21
  407fc0:	bl	407854 <ferror@plt+0x4f84>
  407fc4:	str	x0, [x20, #88]
  407fc8:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  407fcc:	add	x1, x1, #0xc88
  407fd0:	mov	x0, x21
  407fd4:	bl	407854 <ferror@plt+0x4f84>
  407fd8:	str	x0, [x20, #96]
  407fdc:	ldr	x0, [x25]
  407fe0:	ldrb	w0, [x0, #67]
  407fe4:	bl	4074e0 <ferror@plt+0x4c10>
  407fe8:	str	x0, [x20, #104]
  407fec:	ldrb	w0, [x25, #221]
  407ff0:	strb	w0, [x20, #112]
  407ff4:	ldrb	w0, [x25, #222]
  407ff8:	strb	w0, [x20, #113]
  407ffc:	ldrb	w0, [x25, #223]
  408000:	strb	w0, [x20, #114]
  408004:	ldr	w21, [x19, #8]
  408008:	str	xzr, [x20, #120]
  40800c:	cbnz	w21, 4080e8 <ferror@plt+0x5818>
  408010:	ldr	w21, [x19, #120]
  408014:	str	xzr, [x20, #128]
  408018:	cbnz	w21, 408120 <ferror@plt+0x5850>
  40801c:	ldr	w0, [x19, #8]
  408020:	str	xzr, [x20, #136]
  408024:	adds	w21, w0, #0x1
  408028:	b.ne	408150 <ferror@plt+0x5880>  // b.any
  40802c:	str	wzr, [x20, #144]
  408030:	str	wzr, [x20, #148]
  408034:	ldr	w0, [x19, #8]
  408038:	mov	w21, #0x0                   	// #0
  40803c:	cbz	w0, 408070 <ferror@plt+0x57a0>
  408040:	mov	w1, w21
  408044:	mov	x0, x19
  408048:	bl	42a1e8 <ferror@plt+0x27918>
  40804c:	mov	w3, #0x0                   	// #0
  408050:	mov	w2, w21
  408054:	mov	x1, x0
  408058:	mov	x0, x20
  40805c:	bl	407abc <ferror@plt+0x51ec>
  408060:	add	w21, w21, #0x1
  408064:	ldr	w0, [x19, #8]
  408068:	cmp	w0, w21
  40806c:	b.hi	408040 <ferror@plt+0x5770>  // b.pmore
  408070:	ldr	w0, [x19, #120]
  408074:	mov	w21, #0x0                   	// #0
  408078:	cbnz	w0, 4081b8 <ferror@plt+0x58e8>
  40807c:	ldr	x0, [x20, #128]
  408080:	cbz	x0, 408090 <ferror@plt+0x57c0>
  408084:	ldr	w1, [x0, #4]
  408088:	cmp	w1, #0x1
  40808c:	b.hi	408314 <ferror@plt+0x5a44>  // b.pmore
  408090:	ldr	x0, [x20, #136]
  408094:	cbz	x0, 4080a0 <ferror@plt+0x57d0>
  408098:	ldr	w0, [x0, #4]
  40809c:	cbnz	w0, 408330 <ferror@plt+0x5a60>
  4080a0:	ldr	x0, [x20, #120]
  4080a4:	cbz	x0, 408e30 <ferror@plt+0x6560>
  4080a8:	ldr	w0, [x0, #4]
  4080ac:	adds	w21, w0, #0x1
  4080b0:	b.ne	408348 <ferror@plt+0x5a78>  // b.any
  4080b4:	ldr	w22, [x20, #32]
  4080b8:	mov	x1, #0x28                  	// #40
  4080bc:	mov	x0, #0x0                   	// #0
  4080c0:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  4080c4:	mov	x19, x0
  4080c8:	ldr	w0, [x0]
  4080cc:	mov	w1, #0x4                   	// #4
  4080d0:	bfxil	w0, w1, #0, #31
  4080d4:	str	w0, [x19]
  4080d8:	ubfx	x0, x0, #24, #7
  4080dc:	strb	w0, [x19, #3]
  4080e0:	str	wzr, [x19, #4]
  4080e4:	b	4083d0 <ferror@plt+0x5b00>
  4080e8:	ubfiz	x1, x21, #2, #32
  4080ec:	add	x1, x1, w21, uxtw
  4080f0:	lsl	x1, x1, #3
  4080f4:	add	x1, x1, #0x8
  4080f8:	mov	x0, #0x0                   	// #0
  4080fc:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  408100:	str	x0, [x20, #120]
  408104:	ldr	w1, [x0]
  408108:	bfxil	w1, w21, #0, #31
  40810c:	str	w1, [x0]
  408110:	ubfx	x1, x1, #24, #7
  408114:	strb	w1, [x0, #3]
  408118:	str	wzr, [x0, #4]
  40811c:	b	408010 <ferror@plt+0x5740>
  408120:	ubfiz	x1, x21, #3, #32
  408124:	add	x1, x1, #0x8
  408128:	mov	x0, #0x0                   	// #0
  40812c:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  408130:	str	x0, [x20, #128]
  408134:	ldr	w1, [x0]
  408138:	bfxil	w1, w21, #0, #31
  40813c:	str	w1, [x0]
  408140:	ubfx	x1, x1, #24, #7
  408144:	strb	w1, [x0, #3]
  408148:	str	wzr, [x0, #4]
  40814c:	b	40801c <ferror@plt+0x574c>
  408150:	ubfiz	x1, x21, #3, #32
  408154:	add	x1, x1, #0x8
  408158:	mov	x0, #0x0                   	// #0
  40815c:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  408160:	str	x0, [x20, #136]
  408164:	ldr	w1, [x0]
  408168:	bfxil	w1, w21, #0, #31
  40816c:	str	w1, [x0]
  408170:	ubfx	x1, x1, #24, #7
  408174:	strb	w1, [x0, #3]
  408178:	str	wzr, [x0, #4]
  40817c:	b	40802c <ferror@plt+0x575c>
  408180:	add	x0, x19, w21, sxtw #3
  408184:	add	x0, x0, #0x80
  408188:	ldr	x22, [x0]
  40818c:	add	x8, sp, #0x70
  408190:	ldr	w0, [x22]
  408194:	bl	411d34 <ferror@plt+0xf464>
  408198:	ldr	x0, [x20, #24]
  40819c:	ldr	x1, [sp, #112]
  4081a0:	cmp	x1, x0
  4081a4:	b.eq	4081d4 <ferror@plt+0x5904>  // b.none
  4081a8:	add	w21, w21, #0x1
  4081ac:	ldr	w0, [x19, #120]
  4081b0:	cmp	w21, w0
  4081b4:	b.cs	40807c <ferror@plt+0x57ac>  // b.hs, b.nlast
  4081b8:	cmp	w21, #0x1
  4081bc:	b.le	408180 <ferror@plt+0x58b0>
  4081c0:	sbfiz	x0, x21, #3, #32
  4081c4:	sub	x1, x0, #0x10
  4081c8:	ldr	x0, [x19, #152]
  4081cc:	add	x0, x0, x1
  4081d0:	b	408188 <ferror@plt+0x58b8>
  4081d4:	add	x8, sp, #0x70
  4081d8:	ldr	w0, [x22, #4]
  4081dc:	bl	411d34 <ferror@plt+0xf464>
  4081e0:	ldr	x0, [x20, #24]
  4081e4:	ldr	x1, [sp, #112]
  4081e8:	cmp	x1, x0
  4081ec:	b.ne	4081a8 <ferror@plt+0x58d8>  // b.any
  4081f0:	ldr	x23, [x20, #128]
  4081f4:	cbz	x23, 408238 <ferror@plt+0x5968>
  4081f8:	ldr	w0, [x23]
  4081fc:	ubfx	x0, x0, #0, #31
  408200:	ldr	w1, [x23, #4]
  408204:	cmp	w0, w1
  408208:	b.ne	4082d0 <ferror@plt+0x5a00>  // b.any
  40820c:	ldrsb	w0, [x23, #3]
  408210:	tbnz	w0, #31, 408224 <ferror@plt+0x5954>
  408214:	mov	w27, #0x0                   	// #0
  408218:	mov	w26, #0x0                   	// #0
  40821c:	mov	w1, #0x1                   	// #1
  408220:	b	408244 <ferror@plt+0x5974>
  408224:	str	xzr, [x20, #128]
  408228:	ldr	w26, [x23, #4]
  40822c:	add	w1, w26, #0x1
  408230:	mov	w27, #0x1                   	// #1
  408234:	b	408244 <ferror@plt+0x5974>
  408238:	mov	w27, #0x0                   	// #0
  40823c:	mov	w26, #0x0                   	// #0
  408240:	mov	w1, #0x1                   	// #1
  408244:	ldr	x0, [x20, #128]
  408248:	cbz	x0, 4082ec <ferror@plt+0x5a1c>
  40824c:	ldr	w2, [x0, #4]
  408250:	ldr	w0, [x0]
  408254:	add	w1, w1, w2
  408258:	and	w0, w0, #0x7fffffff
  40825c:	bl	40f5bc <ferror@plt+0xccec>
  408260:	mov	w24, w0
  408264:	ubfiz	x1, x24, #3, #32
  408268:	add	x1, x1, #0x8
  40826c:	ldr	x0, [x20, #128]
  408270:	cbz	x0, 40830c <ferror@plt+0x5a3c>
  408274:	ldr	w28, [x0, #4]
  408278:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  40827c:	str	x0, [x20, #128]
  408280:	ldr	w1, [x0]
  408284:	bfxil	w1, w24, #0, #31
  408288:	str	w1, [x0]
  40828c:	ubfx	x1, x1, #24, #7
  408290:	strb	w1, [x0, #3]
  408294:	str	w28, [x0, #4]
  408298:	cbz	w27, 4082d0 <ferror@plt+0x5a00>
  40829c:	ldr	x3, [x20, #128]
  4082a0:	cbz	w26, 4082c8 <ferror@plt+0x59f8>
  4082a4:	sub	w2, w26, #0x1
  4082a8:	add	x2, x2, #0x2
  4082ac:	lsl	x2, x2, #3
  4082b0:	mov	x0, #0x8                   	// #8
  4082b4:	ldr	x1, [x23, x0]
  4082b8:	str	x1, [x3, x0]
  4082bc:	add	x0, x0, #0x8
  4082c0:	cmp	x0, x2
  4082c4:	b.ne	4082b4 <ferror@plt+0x59e4>  // b.any
  4082c8:	ldr	x0, [x20, #128]
  4082cc:	str	w26, [x0, #4]
  4082d0:	ldr	x1, [x20, #128]
  4082d4:	ldr	w0, [x1, #4]
  4082d8:	add	w2, w0, #0x1
  4082dc:	str	w2, [x1, #4]
  4082e0:	add	x0, x1, w0, uxtw #3
  4082e4:	str	x22, [x0, #8]
  4082e8:	b	4081a8 <ferror@plt+0x58d8>
  4082ec:	cmp	w1, #0x4
  4082f0:	mov	w2, #0x4                   	// #4
  4082f4:	csel	w24, w1, w2, cs  // cs = hs, nlast
  4082f8:	csel	w1, w1, w2, cs  // cs = hs, nlast
  4082fc:	add	x1, x1, #0x1
  408300:	lsl	x1, x1, #3
  408304:	mov	w28, #0x0                   	// #0
  408308:	b	408278 <ferror@plt+0x59a8>
  40830c:	mov	w28, #0x0                   	// #0
  408310:	b	408278 <ferror@plt+0x59a8>
  408314:	adrp	x3, 407000 <ferror@plt+0x4730>
  408318:	add	x3, x3, #0x5dc
  40831c:	mov	x2, #0x8                   	// #8
  408320:	mov	w1, w1
  408324:	add	x0, x0, x2
  408328:	bl	414540 <ferror@plt+0x11c70>
  40832c:	b	408090 <ferror@plt+0x57c0>
  408330:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  408334:	add	x2, x2, #0xd78
  408338:	mov	w1, #0x49b                 	// #1179
  40833c:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  408340:	add	x0, x0, #0xd28
  408344:	bl	4062a0 <ferror@plt+0x39d0>
  408348:	ubfiz	x1, x21, #3, #32
  40834c:	add	x1, x1, #0x8
  408350:	mov	x0, #0x0                   	// #0
  408354:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  408358:	mov	x19, x0
  40835c:	ldr	w0, [x0]
  408360:	bfxil	w0, w21, #0, #31
  408364:	str	w0, [x19]
  408368:	ubfx	x0, x0, #24, #7
  40836c:	strb	w0, [x19, #3]
  408370:	str	wzr, [x19, #4]
  408374:	ldr	w22, [x20, #32]
  408378:	tst	x21, #0x7fffffff
  40837c:	b.ne	4083d0 <ferror@plt+0x5b00>  // b.any
  408380:	sxtb	w0, w0
  408384:	tbnz	w0, #31, 4080b8 <ferror@plt+0x57e8>
  408388:	ldr	w1, [x19, #4]
  40838c:	ldr	w0, [x19]
  408390:	add	w1, w1, #0x1
  408394:	and	w0, w0, #0x7fffffff
  408398:	bl	40f5bc <ferror@plt+0xccec>
  40839c:	mov	w21, w0
  4083a0:	ldr	w23, [x19, #4]
  4083a4:	ubfiz	x1, x21, #3, #32
  4083a8:	add	x1, x1, #0x8
  4083ac:	mov	x0, x19
  4083b0:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  4083b4:	mov	x19, x0
  4083b8:	ldr	w1, [x0]
  4083bc:	bfxil	w1, w21, #0, #31
  4083c0:	str	w1, [x0]
  4083c4:	ubfx	x1, x1, #24, #7
  4083c8:	strb	w1, [x0, #3]
  4083cc:	str	w23, [x0, #4]
  4083d0:	ldr	w0, [x19, #4]
  4083d4:	add	w1, w0, #0x1
  4083d8:	str	w1, [x19, #4]
  4083dc:	ubfiz	x0, x0, #3, #32
  4083e0:	add	x0, x0, #0x8
  4083e4:	add	x1, x19, x0
  4083e8:	str	w22, [x19, x0]
  4083ec:	str	w22, [x1, #4]
  4083f0:	mov	w21, #0x0                   	// #0
  4083f4:	mov	w27, #0x4                   	// #4
  4083f8:	b	408c54 <ferror@plt+0x6384>
  4083fc:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  408400:	add	x2, x2, #0xd78
  408404:	mov	w1, #0x4a4                 	// #1188
  408408:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40840c:	add	x0, x0, #0xd28
  408410:	bl	4062a0 <ferror@plt+0x39d0>
  408414:	mov	w21, #0x0                   	// #0
  408418:	mov	w26, #0x4                   	// #4
  40841c:	mov	w27, #0x1                   	// #1
  408420:	b	408d1c <ferror@plt+0x644c>
  408424:	mov	w21, #0x0                   	// #0
  408428:	b	408418 <ferror@plt+0x5b48>
  40842c:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  408430:	add	x2, x2, #0xd78
  408434:	mov	w1, #0x4ad                 	// #1197
  408438:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40843c:	add	x0, x0, #0xd28
  408440:	bl	4062a0 <ferror@plt+0x39d0>
  408444:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  408448:	add	x2, x2, #0xd90
  40844c:	mov	w1, #0xa5                  	// #165
  408450:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  408454:	add	x0, x0, #0xd28
  408458:	bl	4062a0 <ferror@plt+0x39d0>
  40845c:	cbz	x19, 4084c4 <ferror@plt+0x5bf4>
  408460:	ldr	w1, [x19, #4]
  408464:	cmp	w1, #0x1
  408468:	b.hi	4084a8 <ferror@plt+0x5bd8>  // b.pmore
  40846c:	ldr	w0, [x19, #4]
  408470:	cbz	w0, 4084c4 <ferror@plt+0x5bf4>
  408474:	ldr	x21, [x20, #136]
  408478:	cbz	x21, 4084f0 <ferror@plt+0x5c20>
  40847c:	ldr	w0, [x21]
  408480:	ubfx	x0, x0, #0, #31
  408484:	ldr	w1, [x21, #4]
  408488:	cmp	w0, w1
  40848c:	b.ne	408588 <ferror@plt+0x5cb8>  // b.any
  408490:	ldrsb	w0, [x21, #3]
  408494:	tbnz	w0, #31, 4084dc <ferror@plt+0x5c0c>
  408498:	mov	w24, #0x0                   	// #0
  40849c:	mov	w22, #0x0                   	// #0
  4084a0:	mov	w1, #0x1                   	// #1
  4084a4:	b	4084fc <ferror@plt+0x5c2c>
  4084a8:	adrp	x3, 407000 <ferror@plt+0x4730>
  4084ac:	add	x3, x3, #0x594
  4084b0:	mov	x2, #0x8                   	// #8
  4084b4:	mov	w1, w1
  4084b8:	add	x0, x19, x2
  4084bc:	bl	414540 <ferror@plt+0x11c70>
  4084c0:	b	40846c <ferror@plt+0x5b9c>
  4084c4:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  4084c8:	add	x2, x2, #0xd78
  4084cc:	mov	w1, #0x4b6                 	// #1206
  4084d0:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  4084d4:	add	x0, x0, #0xd28
  4084d8:	bl	4062a0 <ferror@plt+0x39d0>
  4084dc:	str	xzr, [x20, #136]
  4084e0:	ldr	w22, [x21, #4]
  4084e4:	add	w1, w22, #0x1
  4084e8:	mov	w24, #0x1                   	// #1
  4084ec:	b	4084fc <ferror@plt+0x5c2c>
  4084f0:	mov	w24, #0x0                   	// #0
  4084f4:	mov	w22, #0x0                   	// #0
  4084f8:	mov	w1, #0x1                   	// #1
  4084fc:	ldr	x0, [x20, #136]
  408500:	cbz	x0, 4085bc <ferror@plt+0x5cec>
  408504:	ldr	w2, [x0, #4]
  408508:	ldr	w0, [x0]
  40850c:	add	w1, w1, w2
  408510:	and	w0, w0, #0x7fffffff
  408514:	bl	40f5bc <ferror@plt+0xccec>
  408518:	mov	w23, w0
  40851c:	ubfiz	x1, x23, #3, #32
  408520:	add	x1, x1, #0x8
  408524:	ldr	x0, [x20, #136]
  408528:	cbz	x0, 4085dc <ferror@plt+0x5d0c>
  40852c:	ldr	w26, [x0, #4]
  408530:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  408534:	str	x0, [x20, #136]
  408538:	ldr	w1, [x0]
  40853c:	bfxil	w1, w23, #0, #31
  408540:	str	w1, [x0]
  408544:	ubfx	x1, x1, #24, #7
  408548:	strb	w1, [x0, #3]
  40854c:	str	w26, [x0, #4]
  408550:	cbz	w24, 408588 <ferror@plt+0x5cb8>
  408554:	ldr	x3, [x20, #136]
  408558:	cbz	w22, 408580 <ferror@plt+0x5cb0>
  40855c:	sub	w2, w22, #0x1
  408560:	add	x2, x2, #0x2
  408564:	lsl	x2, x2, #3
  408568:	mov	x0, #0x8                   	// #8
  40856c:	ldr	x1, [x21, x0]
  408570:	str	x1, [x3, x0]
  408574:	add	x0, x0, #0x8
  408578:	cmp	x2, x0
  40857c:	b.ne	40856c <ferror@plt+0x5c9c>  // b.any
  408580:	ldr	x0, [x20, #136]
  408584:	str	w22, [x0, #4]
  408588:	ldr	x1, [x20, #136]
  40858c:	ldr	w0, [x1, #4]
  408590:	add	w2, w0, #0x1
  408594:	str	w2, [x1, #4]
  408598:	add	x0, x1, w0, uxtw #3
  40859c:	ldr	x1, [x19, #8]
  4085a0:	str	x1, [x0, #8]
  4085a4:	ldr	w0, [x19, #4]
  4085a8:	cmp	w0, #0x1
  4085ac:	b.ls	408778 <ferror@plt+0x5ea8>  // b.plast
  4085b0:	mov	w22, #0x1                   	// #1
  4085b4:	mov	w23, #0x0                   	// #0
  4085b8:	b	4086e0 <ferror@plt+0x5e10>
  4085bc:	mov	w2, #0x4                   	// #4
  4085c0:	cmp	w1, w2
  4085c4:	csel	w23, w1, w2, cs  // cs = hs, nlast
  4085c8:	csel	w1, w1, w2, cs  // cs = hs, nlast
  4085cc:	add	x1, x1, #0x1
  4085d0:	lsl	x1, x1, #3
  4085d4:	mov	w26, #0x0                   	// #0
  4085d8:	b	408530 <ferror@plt+0x5c60>
  4085dc:	mov	w26, #0x0                   	// #0
  4085e0:	b	408530 <ferror@plt+0x5c60>
  4085e4:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  4085e8:	add	x2, x2, #0xd78
  4085ec:	mov	w1, #0x4bc                 	// #1212
  4085f0:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  4085f4:	add	x0, x0, #0xd28
  4085f8:	bl	4062a0 <ferror@plt+0x39d0>
  4085fc:	ldr	w0, [x21]
  408600:	ubfx	x0, x0, #0, #31
  408604:	ldr	w1, [x21, #4]
  408608:	cmp	w0, w1
  40860c:	b.ne	4086b0 <ferror@plt+0x5de0>  // b.any
  408610:	ldrsb	w0, [x21, #3]
  408614:	tbnz	w0, #31, 40873c <ferror@plt+0x5e6c>
  408618:	mov	w28, w23
  40861c:	mov	w26, w23
  408620:	mov	w1, #0x1                   	// #1
  408624:	ldr	x0, [x20, #136]
  408628:	cbz	x0, 408750 <ferror@plt+0x5e80>
  40862c:	ldr	w2, [x0, #4]
  408630:	ldr	w0, [x0]
  408634:	add	w1, w1, w2
  408638:	and	w0, w0, #0x7fffffff
  40863c:	bl	40f5bc <ferror@plt+0xccec>
  408640:	mov	w24, w0
  408644:	ubfiz	x1, x24, #3, #32
  408648:	add	x1, x1, #0x8
  40864c:	ldr	x0, [x20, #136]
  408650:	cbz	x0, 408770 <ferror@plt+0x5ea0>
  408654:	ldr	w27, [x0, #4]
  408658:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  40865c:	str	x0, [x20, #136]
  408660:	ldr	w1, [x0]
  408664:	bfxil	w1, w24, #0, #31
  408668:	str	w1, [x0]
  40866c:	ubfx	x1, x1, #24, #7
  408670:	strb	w1, [x0, #3]
  408674:	str	w27, [x0, #4]
  408678:	cbz	w28, 4086b0 <ferror@plt+0x5de0>
  40867c:	ldr	x3, [x20, #136]
  408680:	cbz	w26, 4086a8 <ferror@plt+0x5dd8>
  408684:	sub	w2, w26, #0x1
  408688:	add	x2, x2, #0x2
  40868c:	lsl	x2, x2, #3
  408690:	mov	x0, #0x8                   	// #8
  408694:	ldr	x1, [x21, x0]
  408698:	str	x1, [x3, x0]
  40869c:	add	x0, x0, #0x8
  4086a0:	cmp	x0, x2
  4086a4:	b.ne	408694 <ferror@plt+0x5dc4>  // b.any
  4086a8:	ldr	x0, [x20, #136]
  4086ac:	str	w26, [x0, #4]
  4086b0:	ldr	x1, [x20, #136]
  4086b4:	ldr	w0, [x1, #4]
  4086b8:	add	w2, w0, #0x1
  4086bc:	str	w2, [x1, #4]
  4086c0:	add	x0, x1, w0, uxtw #3
  4086c4:	add	x1, x19, w22, uxtw #3
  4086c8:	ldr	x1, [x1, #8]
  4086cc:	str	x1, [x0, #8]
  4086d0:	add	w22, w22, #0x1
  4086d4:	ldr	w0, [x19, #4]
  4086d8:	cmp	w0, w22
  4086dc:	b.ls	408778 <ferror@plt+0x5ea8>  // b.plast
  4086e0:	ldr	x21, [x20, #136]
  4086e4:	mov	w0, w23
  4086e8:	cbz	x21, 4086f0 <ferror@plt+0x5e20>
  4086ec:	ldr	w0, [x21, #4]
  4086f0:	add	x4, x19, w22, uxtw #3
  4086f4:	ldr	w2, [x4, #8]
  4086f8:	sub	w0, w0, #0x1
  4086fc:	add	x0, x21, x0, lsl #3
  408700:	ldr	w1, [x0, #8]
  408704:	cmp	w2, w1
  408708:	b.cc	4085e4 <ferror@plt+0x5d14>  // b.lo, b.ul, b.last
  40870c:	ldr	w3, [x0, #12]
  408710:	mov	w1, w3
  408714:	add	x1, x1, #0x1
  408718:	ldrb	w5, [x20, #114]
  40871c:	add	x1, x1, x5
  408720:	cmp	x1, w2, uxtw
  408724:	b.lt	4085fc <ferror@plt+0x5d2c>  // b.tstop
  408728:	ldr	w1, [x4, #12]
  40872c:	cmp	w3, w1
  408730:	b.cs	4086d0 <ferror@plt+0x5e00>  // b.hs, b.nlast
  408734:	str	w1, [x0, #12]
  408738:	b	4086d0 <ferror@plt+0x5e00>
  40873c:	str	xzr, [x20, #136]
  408740:	ldr	w26, [x21, #4]
  408744:	add	w1, w26, #0x1
  408748:	mov	w28, #0x1                   	// #1
  40874c:	b	408624 <ferror@plt+0x5d54>
  408750:	cmp	w1, #0x4
  408754:	mov	w2, #0x4                   	// #4
  408758:	csel	w24, w1, w2, cs  // cs = hs, nlast
  40875c:	csel	w1, w1, w2, cs  // cs = hs, nlast
  408760:	add	x1, x1, #0x1
  408764:	lsl	x1, x1, #3
  408768:	mov	w27, w23
  40876c:	b	408658 <ferror@plt+0x5d88>
  408770:	mov	w27, w23
  408774:	b	408658 <ferror@plt+0x5d88>
  408778:	ldr	x5, [x20, #136]
  40877c:	cbz	x5, 4088dc <ferror@plt+0x600c>
  408780:	ldr	w1, [x5, #4]
  408784:	cbz	w1, 4088dc <ferror@plt+0x600c>
  408788:	cmp	w1, #0x1
  40878c:	b.ls	4087e0 <ferror@plt+0x5f10>  // b.plast
  408790:	add	x0, x5, #0x8
  408794:	sub	w1, w1, #0x2
  408798:	add	x5, x5, #0x10
  40879c:	add	x5, x5, x1, lsl #3
  4087a0:	ldr	w3, [x0]
  4087a4:	ldr	w1, [x0, #4]
  4087a8:	cmp	w3, w1
  4087ac:	b.hi	4088f4 <ferror@plt+0x6024>  // b.pmore
  4087b0:	ldr	w2, [x0, #8]
  4087b4:	ldr	w4, [x0, #12]
  4087b8:	cmp	w2, w4
  4087bc:	b.hi	40890c <ferror@plt+0x603c>  // b.pmore
  4087c0:	cmp	w3, w2
  4087c4:	b.cs	408924 <ferror@plt+0x6054>  // b.hs, b.nlast
  4087c8:	add	w1, w1, #0x1
  4087cc:	cmp	w2, w1
  4087d0:	b.ls	40893c <ferror@plt+0x606c>  // b.plast
  4087d4:	add	x0, x0, #0x8
  4087d8:	cmp	x0, x5
  4087dc:	b.ne	4087a0 <ferror@plt+0x5ed0>  // b.any
  4087e0:	ldrsb	w0, [x19, #3]
  4087e4:	tbnz	w0, #31, 408954 <ferror@plt+0x6084>
  4087e8:	mov	x0, x19
  4087ec:	bl	402690 <free@plt>
  4087f0:	ldr	x1, [x20, #136]
  4087f4:	cbz	x1, 40895c <ferror@plt+0x608c>
  4087f8:	ldr	w0, [x1, #4]
  4087fc:	cbz	w0, 40895c <ferror@plt+0x608c>
  408800:	sub	w0, w0, #0x1
  408804:	add	x0, x1, x0, lsl #3
  408808:	ldr	w0, [x0, #12]
  40880c:	cmp	w0, #0x0
  408810:	csel	w0, w0, wzr, ge  // ge = tcont
  408814:	bl	4067a8 <ferror@plt+0x3ed8>
  408818:	str	w0, [x20, #144]
  40881c:	ldr	x1, [x20, #136]
  408820:	cbz	x1, 408840 <ferror@plt+0x5f70>
  408824:	ldr	w1, [x1, #4]
  408828:	cmp	w1, #0x1
  40882c:	b.ls	408840 <ferror@plt+0x5f70>  // b.plast
  408830:	cmp	w0, #0x3
  408834:	mov	w1, #0x3                   	// #3
  408838:	csel	w0, w0, w1, ge  // ge = tcont
  40883c:	str	w0, [x20, #144]
  408840:	ldr	w1, [x25, #224]
  408844:	ldr	w0, [x20, #144]
  408848:	sub	w2, w1, #0x1
  40884c:	cmp	w1, w0
  408850:	csel	w0, w2, w0, gt
  408854:	str	w0, [x20, #144]
  408858:	ldr	x0, [x20]
  40885c:	ldrsw	x19, [x0, #112]
  408860:	ldr	w1, [x20, #32]
  408864:	ldr	x0, [x20, #24]
  408868:	bl	411ee4 <ferror@plt+0xf614>
  40886c:	cbz	x0, 4088b8 <ferror@plt+0x5fe8>
  408870:	ldrsw	x0, [x20, #36]
  408874:	cmp	x1, x0
  408878:	b.cc	4088b8 <ferror@plt+0x5fe8>  // b.lo, b.ul, b.last
  40887c:	ldrb	w2, [x20, #114]
  408880:	cbz	w2, 408890 <ferror@plt+0x5fc0>
  408884:	ldr	w2, [x20, #144]
  408888:	add	w2, w2, #0x2
  40888c:	add	x0, x0, w2, sxtw
  408890:	sub	x2, x1, x0
  408894:	cmp	x2, #0xa
  408898:	mov	x3, #0xa                   	// #10
  40889c:	csel	x2, x2, x3, cc  // cc = lo, ul, last
  4088a0:	sub	x2, x19, x2
  4088a4:	cmp	x0, x2
  4088a8:	ccmp	x1, x19, #0x0, hi  // hi = pmore
  4088ac:	b.cs	408974 <ferror@plt+0x60a4>  // b.hs, b.nlast
  4088b0:	ldr	w0, [x20, #148]
  4088b4:	tbnz	w0, #31, 408980 <ferror@plt+0x60b0>
  4088b8:	ldrb	w0, [x25, #228]
  4088bc:	cbnz	w0, 408998 <ferror@plt+0x60c8>
  4088c0:	ldp	x19, x20, [sp, #16]
  4088c4:	ldp	x21, x22, [sp, #32]
  4088c8:	ldp	x23, x24, [sp, #48]
  4088cc:	ldp	x25, x26, [sp, #64]
  4088d0:	ldp	x27, x28, [sp, #80]
  4088d4:	ldp	x29, x30, [sp], #144
  4088d8:	ret
  4088dc:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  4088e0:	add	x2, x2, #0xd78
  4088e4:	mov	w1, #0x4cd                 	// #1229
  4088e8:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  4088ec:	add	x0, x0, #0xd28
  4088f0:	bl	4062a0 <ferror@plt+0x39d0>
  4088f4:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  4088f8:	add	x2, x2, #0xd78
  4088fc:	mov	w1, #0x4d3                 	// #1235
  408900:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  408904:	add	x0, x0, #0xd28
  408908:	bl	4062a0 <ferror@plt+0x39d0>
  40890c:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  408910:	add	x2, x2, #0xd78
  408914:	mov	w1, #0x4d4                 	// #1236
  408918:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40891c:	add	x0, x0, #0xd28
  408920:	bl	4062a0 <ferror@plt+0x39d0>
  408924:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  408928:	add	x2, x2, #0xd78
  40892c:	mov	w1, #0x4d6                 	// #1238
  408930:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  408934:	add	x0, x0, #0xd28
  408938:	bl	4062a0 <ferror@plt+0x39d0>
  40893c:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  408940:	add	x2, x2, #0xd78
  408944:	mov	w1, #0x4d8                 	// #1240
  408948:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40894c:	add	x0, x0, #0xd28
  408950:	bl	4062a0 <ferror@plt+0x39d0>
  408954:	str	wzr, [x19, #4]
  408958:	b	4087f0 <ferror@plt+0x5f20>
  40895c:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  408960:	add	x2, x2, #0xda0
  408964:	mov	w1, #0x36a                 	// #874
  408968:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40896c:	add	x0, x0, #0xd28
  408970:	bl	4062a0 <ferror@plt+0x39d0>
  408974:	sub	w0, w0, w2
  408978:	str	w0, [x20, #148]
  40897c:	b	4088b0 <ferror@plt+0x5fe0>
  408980:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  408984:	add	x2, x2, #0xda0
  408988:	mov	w1, #0x386                 	// #902
  40898c:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  408990:	add	x0, x0, #0xd28
  408994:	bl	4062a0 <ferror@plt+0x39d0>
  408998:	ldr	w21, [x20, #148]
  40899c:	add	w21, w21, w19
  4089a0:	cmp	w21, #0x63
  4089a4:	b.gt	4089e4 <ferror@plt+0x6114>
  4089a8:	mov	w1, #0x20                  	// #32
  4089ac:	mov	x0, x20
  4089b0:	bl	407894 <ferror@plt+0x4fc4>
  4089b4:	mov	w1, #0x20                  	// #32
  4089b8:	ldr	x0, [x20, #8]
  4089bc:	bl	40c914 <ferror@plt+0xa044>
  4089c0:	ldr	w19, [x20, #148]
  4089c4:	add	w19, w19, #0x1
  4089c8:	cmp	w21, w19
  4089cc:	b.lt	408af4 <ferror@plt+0x6224>  // b.tstop
  4089d0:	add	w23, w21, #0x1
  4089d4:	mov	w22, #0x6667                	// #26215
  4089d8:	movk	w22, #0x6666, lsl #16
  4089dc:	mov	w24, #0x20                  	// #32
  4089e0:	b	408acc <ferror@plt+0x61fc>
  4089e4:	mov	w1, #0x20                  	// #32
  4089e8:	mov	x0, x20
  4089ec:	bl	407894 <ferror@plt+0x4fc4>
  4089f0:	mov	w1, #0x20                  	// #32
  4089f4:	ldr	x0, [x20, #8]
  4089f8:	bl	40c914 <ferror@plt+0xa044>
  4089fc:	ldr	w19, [x20, #148]
  408a00:	add	w19, w19, #0x1
  408a04:	cmp	w21, w19
  408a08:	b.lt	408a88 <ferror@plt+0x61b8>  // b.tstop
  408a0c:	add	w23, w21, #0x1
  408a10:	mov	w22, #0x6667                	// #26215
  408a14:	movk	w22, #0x6666, lsl #16
  408a18:	mov	w25, #0x20                  	// #32
  408a1c:	mov	w24, #0x851f                	// #34079
  408a20:	movk	w24, #0x51eb, lsl #16
  408a24:	b	408a40 <ferror@plt+0x6170>
  408a28:	mov	w1, w25
  408a2c:	ldr	x0, [x20, #8]
  408a30:	bl	40c914 <ferror@plt+0xa044>
  408a34:	add	w19, w19, #0x1
  408a38:	cmp	w23, w19
  408a3c:	b.eq	408a88 <ferror@plt+0x61b8>  // b.none
  408a40:	smull	x0, w19, w22
  408a44:	asr	x0, x0, #34
  408a48:	sub	w0, w0, w19, asr #31
  408a4c:	add	w0, w0, w0, lsl #2
  408a50:	cmp	w19, w0, lsl #1
  408a54:	b.ne	408a28 <ferror@plt+0x6158>  // b.any
  408a58:	smull	x1, w19, w24
  408a5c:	asr	x1, x1, #37
  408a60:	sub	w1, w1, w19, asr #31
  408a64:	smull	x0, w1, w22
  408a68:	asr	x0, x0, #34
  408a6c:	sub	w0, w0, w1, asr #31
  408a70:	add	w0, w0, w0, lsl #2
  408a74:	sub	w1, w1, w0, lsl #1
  408a78:	add	w1, w1, #0x30
  408a7c:	ldr	x0, [x20, #8]
  408a80:	bl	40c914 <ferror@plt+0xa044>
  408a84:	b	408a34 <ferror@plt+0x6164>
  408a88:	ldr	x0, [x20, #8]
  408a8c:	bl	40c8b0 <ferror@plt+0x9fe0>
  408a90:	b	4089a8 <ferror@plt+0x60d8>
  408a94:	smull	x1, w19, w22
  408a98:	asr	x1, x1, #34
  408a9c:	sub	w0, w1, w19, asr #31
  408aa0:	smull	x1, w0, w22
  408aa4:	asr	x1, x1, #34
  408aa8:	sub	w1, w1, w0, asr #31
  408aac:	add	w1, w1, w1, lsl #2
  408ab0:	sub	w1, w0, w1, lsl #1
  408ab4:	add	w1, w1, #0x30
  408ab8:	ldr	x0, [x20, #8]
  408abc:	bl	40c914 <ferror@plt+0xa044>
  408ac0:	add	w19, w19, #0x1
  408ac4:	cmp	w19, w23
  408ac8:	b.eq	408af4 <ferror@plt+0x6224>  // b.none
  408acc:	smull	x0, w19, w22
  408ad0:	asr	x0, x0, #34
  408ad4:	sub	w0, w0, w19, asr #31
  408ad8:	add	w0, w0, w0, lsl #2
  408adc:	cmp	w19, w0, lsl #1
  408ae0:	b.eq	408a94 <ferror@plt+0x61c4>  // b.none
  408ae4:	mov	w1, w24
  408ae8:	ldr	x0, [x20, #8]
  408aec:	bl	40c914 <ferror@plt+0xa044>
  408af0:	b	408ac0 <ferror@plt+0x61f0>
  408af4:	ldr	x0, [x20, #8]
  408af8:	bl	40c8b0 <ferror@plt+0x9fe0>
  408afc:	mov	w1, #0x20                  	// #32
  408b00:	mov	x0, x20
  408b04:	bl	407894 <ferror@plt+0x4fc4>
  408b08:	mov	w1, #0x20                  	// #32
  408b0c:	ldr	x0, [x20, #8]
  408b10:	bl	40c914 <ferror@plt+0xa044>
  408b14:	ldr	w19, [x20, #148]
  408b18:	add	w19, w19, #0x1
  408b1c:	cmp	w21, w19
  408b20:	b.lt	408b5c <ferror@plt+0x628c>  // b.tstop
  408b24:	add	w21, w21, #0x1
  408b28:	mov	w22, #0x6667                	// #26215
  408b2c:	movk	w22, #0x6666, lsl #16
  408b30:	smull	x1, w19, w22
  408b34:	asr	x1, x1, #34
  408b38:	sub	w1, w1, w19, asr #31
  408b3c:	add	w1, w1, w1, lsl #2
  408b40:	sub	w1, w19, w1, lsl #1
  408b44:	add	w1, w1, #0x30
  408b48:	ldr	x0, [x20, #8]
  408b4c:	bl	40c914 <ferror@plt+0xa044>
  408b50:	add	w19, w19, #0x1
  408b54:	cmp	w21, w19
  408b58:	b.ne	408b30 <ferror@plt+0x6260>  // b.any
  408b5c:	ldr	x0, [x20, #8]
  408b60:	bl	40c8b0 <ferror@plt+0x9fe0>
  408b64:	b	4088c0 <ferror@plt+0x5ff0>
  408b68:	mov	w26, #0x0                   	// #0
  408b6c:	mov	w24, #0x0                   	// #0
  408b70:	mov	w1, #0x1                   	// #1
  408b74:	cmp	w1, #0x4
  408b78:	csel	w28, w1, w27, cs  // cs = hs, nlast
  408b7c:	csel	w1, w1, w27, cs  // cs = hs, nlast
  408b80:	add	x1, x1, #0x1
  408b84:	lsl	x1, x1, #3
  408b88:	mov	x0, #0x0                   	// #0
  408b8c:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  408b90:	ldr	w1, [x0]
  408b94:	bfxil	w1, w28, #0, #31
  408b98:	str	w1, [x0]
  408b9c:	ubfx	x1, x1, #24, #7
  408ba0:	strb	w1, [x0, #3]
  408ba4:	str	wzr, [x0, #4]
  408ba8:	cbz	w26, 408be0 <ferror@plt+0x6310>
  408bac:	cbz	w24, 408bd4 <ferror@plt+0x6304>
  408bb0:	sub	w2, w24, #0x1
  408bb4:	add	x2, x2, #0x2
  408bb8:	lsl	x2, x2, #3
  408bbc:	mov	x1, #0x8                   	// #8
  408bc0:	ldr	x3, [x19, x1]
  408bc4:	str	x3, [x0, x1]
  408bc8:	add	x1, x1, #0x8
  408bcc:	cmp	x1, x2
  408bd0:	b.ne	408bc0 <ferror@plt+0x62f0>  // b.any
  408bd4:	str	w24, [x0, #4]
  408bd8:	mov	x19, x0
  408bdc:	b	408c30 <ferror@plt+0x6360>
  408be0:	mov	x19, x0
  408be4:	b	408c30 <ferror@plt+0x6360>
  408be8:	ldr	w1, [x19, #4]
  408bec:	ldr	w0, [x19]
  408bf0:	add	w1, w1, #0x1
  408bf4:	and	w0, w0, #0x7fffffff
  408bf8:	bl	40f5bc <ferror@plt+0xccec>
  408bfc:	mov	w24, w0
  408c00:	ldr	w26, [x19, #4]
  408c04:	ubfiz	x1, x24, #3, #32
  408c08:	add	x1, x1, #0x8
  408c0c:	mov	x0, x19
  408c10:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  408c14:	mov	x19, x0
  408c18:	ldr	w0, [x0]
  408c1c:	bfxil	w0, w24, #0, #31
  408c20:	str	w0, [x19]
  408c24:	ubfx	x0, x0, #24, #7
  408c28:	strb	w0, [x19, #3]
  408c2c:	str	w26, [x19, #4]
  408c30:	ldr	w0, [x19, #4]
  408c34:	add	w1, w0, #0x1
  408c38:	str	w1, [x19, #4]
  408c3c:	ubfiz	x0, x0, #3, #32
  408c40:	add	x0, x0, #0x8
  408c44:	add	x1, x19, x0
  408c48:	str	w22, [x19, x0]
  408c4c:	str	w23, [x1, #4]
  408c50:	add	w21, w21, #0x1
  408c54:	ldr	x1, [x20, #120]
  408c58:	cbz	x1, 408414 <ferror@plt+0x5b44>
  408c5c:	ldr	w0, [x1, #4]
  408c60:	cmp	w0, w21
  408c64:	b.ls	408424 <ferror@plt+0x5b54>  // b.plast
  408c68:	ubfiz	x0, x21, #2, #32
  408c6c:	add	x0, x0, w21, uxtw
  408c70:	add	x0, x1, x0, lsl #3
  408c74:	ldr	w22, [x0, #8]
  408c78:	ldr	w23, [x0, #16]
  408c7c:	cmp	w22, w23
  408c80:	b.hi	4083fc <ferror@plt+0x5b2c>  // b.pmore
  408c84:	cbz	x19, 408b68 <ferror@plt+0x6298>
  408c88:	ldr	w24, [x19, #4]
  408c8c:	ldr	w0, [x19]
  408c90:	ubfx	x0, x0, #0, #31
  408c94:	cmp	w0, w24
  408c98:	b.ne	408c30 <ferror@plt+0x6360>  // b.any
  408c9c:	ldrsb	w0, [x19, #3]
  408ca0:	add	w1, w24, #0x1
  408ca4:	mov	w26, #0x1                   	// #1
  408ca8:	tbz	w0, #31, 408be8 <ferror@plt+0x6318>
  408cac:	b	408b74 <ferror@plt+0x62a4>
  408cb0:	ldr	w1, [x19, #4]
  408cb4:	ldr	w0, [x19]
  408cb8:	add	w1, w1, #0x1
  408cbc:	and	w0, w0, #0x7fffffff
  408cc0:	bl	40f5bc <ferror@plt+0xccec>
  408cc4:	mov	w23, w0
  408cc8:	ldr	w28, [x19, #4]
  408ccc:	ubfiz	x1, x23, #3, #32
  408cd0:	add	x1, x1, #0x8
  408cd4:	mov	x0, x19
  408cd8:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  408cdc:	mov	x19, x0
  408ce0:	ldr	w0, [x0]
  408ce4:	bfxil	w0, w23, #0, #31
  408ce8:	str	w0, [x19]
  408cec:	ubfx	x0, x0, #24, #7
  408cf0:	strb	w0, [x19, #3]
  408cf4:	str	w28, [x19, #4]
  408cf8:	ldr	w0, [x19, #4]
  408cfc:	add	w1, w0, #0x1
  408d00:	str	w1, [x19, #4]
  408d04:	ubfiz	x0, x0, #3, #32
  408d08:	add	x0, x0, #0x8
  408d0c:	add	x1, x19, x0
  408d10:	str	w24, [x19, x0]
  408d14:	str	w22, [x1, #4]
  408d18:	add	w21, w21, #0x1
  408d1c:	ldr	x0, [x20, #128]
  408d20:	cbz	x0, 40845c <ferror@plt+0x5b8c>
  408d24:	ldr	w1, [x0, #4]
  408d28:	cmp	w1, w21
  408d2c:	b.ls	40845c <ferror@plt+0x5b8c>  // b.plast
  408d30:	add	x0, x0, w21, uxtw #3
  408d34:	ldr	x22, [x0, #8]
  408d38:	cbz	x22, 40842c <ferror@plt+0x5b5c>
  408d3c:	add	x8, sp, #0x70
  408d40:	ldr	w0, [x22]
  408d44:	bl	411d34 <ferror@plt+0xf464>
  408d48:	ldr	w23, [sp, #120]
  408d4c:	mov	x0, x22
  408d50:	bl	42a6a4 <ferror@plt+0x27dd4>
  408d54:	ands	w0, w0, #0xff
  408d58:	ccmp	w23, #0x1, #0x4, ne  // ne = any
  408d5c:	cset	w0, gt
  408d60:	sub	w23, w23, w0
  408d64:	mov	w24, w23
  408d68:	add	x8, sp, #0x70
  408d6c:	ldr	w0, [x22, #4]
  408d70:	bl	411d34 <ferror@plt+0xf464>
  408d74:	ldr	w22, [sp, #120]
  408d78:	cmp	w23, w22
  408d7c:	b.hi	408444 <ferror@plt+0x5b74>  // b.pmore
  408d80:	cbz	x19, 408dac <ferror@plt+0x64dc>
  408d84:	ldr	w23, [x19, #4]
  408d88:	ldr	w0, [x19]
  408d8c:	ubfx	x0, x0, #0, #31
  408d90:	cmp	w0, w23
  408d94:	b.ne	408cf8 <ferror@plt+0x6428>  // b.any
  408d98:	ldrsb	w0, [x19, #3]
  408d9c:	tbz	w0, #31, 408cb0 <ferror@plt+0x63e0>
  408da0:	add	w1, w23, #0x1
  408da4:	str	w27, [sp, #108]
  408da8:	b	408db8 <ferror@plt+0x64e8>
  408dac:	str	wzr, [sp, #108]
  408db0:	mov	w23, #0x0                   	// #0
  408db4:	mov	w1, w27
  408db8:	cmp	w1, #0x4
  408dbc:	csel	w28, w1, w26, cs  // cs = hs, nlast
  408dc0:	csel	w1, w1, w26, cs  // cs = hs, nlast
  408dc4:	add	x1, x1, #0x1
  408dc8:	lsl	x1, x1, #3
  408dcc:	mov	x0, #0x0                   	// #0
  408dd0:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  408dd4:	ldr	w1, [x0]
  408dd8:	bfxil	w1, w28, #0, #31
  408ddc:	str	w1, [x0]
  408de0:	ubfx	x1, x1, #24, #7
  408de4:	strb	w1, [x0, #3]
  408de8:	str	wzr, [x0, #4]
  408dec:	ldr	w1, [sp, #108]
  408df0:	cbz	w1, 408e28 <ferror@plt+0x6558>
  408df4:	cbz	w23, 408e1c <ferror@plt+0x654c>
  408df8:	sub	w2, w23, #0x1
  408dfc:	add	x2, x2, #0x2
  408e00:	lsl	x2, x2, #3
  408e04:	mov	x1, #0x8                   	// #8
  408e08:	ldr	x3, [x19, x1]
  408e0c:	str	x3, [x0, x1]
  408e10:	add	x1, x1, #0x8
  408e14:	cmp	x2, x1
  408e18:	b.ne	408e08 <ferror@plt+0x6538>  // b.any
  408e1c:	str	w23, [x0, #4]
  408e20:	mov	x19, x0
  408e24:	b	408cf8 <ferror@plt+0x6428>
  408e28:	mov	x19, x0
  408e2c:	b	408cf8 <ferror@plt+0x6428>
  408e30:	mov	x1, #0x10                  	// #16
  408e34:	mov	x0, #0x0                   	// #0
  408e38:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  408e3c:	mov	x19, x0
  408e40:	ldr	w0, [x0]
  408e44:	mov	w1, #0x1                   	// #1
  408e48:	bfxil	w0, w1, #0, #31
  408e4c:	str	w0, [x19]
  408e50:	ubfx	x0, x0, #24, #7
  408e54:	strb	w0, [x19, #3]
  408e58:	str	wzr, [x19, #4]
  408e5c:	ldr	w22, [x20, #32]
  408e60:	b	4083d0 <ferror@plt+0x5b00>
  408e64:	stp	x29, x30, [sp, #-48]!
  408e68:	mov	x29, sp
  408e6c:	stp	x19, x20, [sp, #16]
  408e70:	mov	x20, x0
  408e74:	ldr	w0, [x0, #12]
  408e78:	cmp	w0, w1
  408e7c:	b.ne	408e8c <ferror@plt+0x65bc>  // b.any
  408e80:	ldp	x19, x20, [sp, #16]
  408e84:	ldp	x29, x30, [sp], #48
  408e88:	ret
  408e8c:	mov	w19, w1
  408e90:	cmn	w0, #0x1
  408e94:	b.ne	408ed4 <ferror@plt+0x6604>  // b.any
  408e98:	str	w19, [x20, #12]
  408e9c:	cbz	w19, 408f20 <ferror@plt+0x6650>
  408ea0:	cmp	w19, #0x0
  408ea4:	b.gt	408ee8 <ferror@plt+0x6618>
  408ea8:	cmn	w19, #0x2
  408eac:	b.eq	408f0c <ferror@plt+0x663c>  // b.none
  408eb0:	cmn	w19, #0x1
  408eb4:	b.eq	408e80 <ferror@plt+0x65b0>  // b.none
  408eb8:	cmn	w19, #0x3
  408ebc:	b.ne	408f78 <ferror@plt+0x66a8>  // b.any
  408ec0:	ldr	x0, [x20]
  408ec4:	ldr	x1, [x20, #40]
  408ec8:	ldr	x0, [x0]
  408ecc:	bl	40cf0c <ferror@plt+0xa63c>
  408ed0:	b	408e80 <ferror@plt+0x65b0>
  408ed4:	ldr	x0, [x20]
  408ed8:	ldr	x1, [x20, #48]
  408edc:	ldr	x0, [x0]
  408ee0:	bl	40cf0c <ferror@plt+0xa63c>
  408ee4:	b	408e98 <ferror@plt+0x65c8>
  408ee8:	cmp	w19, #0x1
  408eec:	b.eq	408f64 <ferror@plt+0x6694>  // b.none
  408ef0:	cmp	w19, #0x2
  408ef4:	b.ne	408f78 <ferror@plt+0x66a8>  // b.any
  408ef8:	ldr	x0, [x20]
  408efc:	ldr	x1, [x20, #24]
  408f00:	ldr	x0, [x0]
  408f04:	bl	40cf0c <ferror@plt+0xa63c>
  408f08:	b	408e80 <ferror@plt+0x65b0>
  408f0c:	ldr	x0, [x20]
  408f10:	ldr	x1, [x20, #32]
  408f14:	ldr	x0, [x0]
  408f18:	bl	40cf0c <ferror@plt+0xa63c>
  408f1c:	b	408e80 <ferror@plt+0x65b0>
  408f20:	stp	x21, x22, [sp, #32]
  408f24:	ldr	x0, [x20]
  408f28:	ldr	x21, [x0]
  408f2c:	ldrb	w22, [x21, #67]
  408f30:	ldr	w0, [x20, #8]
  408f34:	bl	40490c <ferror@plt+0x203c>
  408f38:	mov	x19, x0
  408f3c:	bl	4022b0 <strlen@plt>
  408f40:	mov	x2, x0
  408f44:	mov	x1, x19
  408f48:	mov	w0, w22
  408f4c:	bl	40744c <ferror@plt+0x4b7c>
  408f50:	mov	x1, x0
  408f54:	mov	x0, x21
  408f58:	bl	40cf0c <ferror@plt+0xa63c>
  408f5c:	ldp	x21, x22, [sp, #32]
  408f60:	b	408e80 <ferror@plt+0x65b0>
  408f64:	ldr	x0, [x20]
  408f68:	ldr	x1, [x20, #16]
  408f6c:	ldr	x0, [x0]
  408f70:	bl	40cf0c <ferror@plt+0xa63c>
  408f74:	b	408e80 <ferror@plt+0x65b0>
  408f78:	cmp	w19, #0x2
  408f7c:	b.le	408f98 <ferror@plt+0x66c8>
  408f80:	ldr	x0, [x20]
  408f84:	ldr	x0, [x0]
  408f88:	tbz	w19, #0, 408fb4 <ferror@plt+0x66e4>
  408f8c:	ldr	x1, [x20, #16]
  408f90:	bl	40cf0c <ferror@plt+0xa63c>
  408f94:	b	408e80 <ferror@plt+0x65b0>
  408f98:	stp	x21, x22, [sp, #32]
  408f9c:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  408fa0:	add	x2, x2, #0xda8
  408fa4:	mov	w1, #0x17f                 	// #383
  408fa8:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  408fac:	add	x0, x0, #0xd28
  408fb0:	bl	4062a0 <ferror@plt+0x39d0>
  408fb4:	ldr	x1, [x20, #24]
  408fb8:	b	408f90 <ferror@plt+0x66c0>
  408fbc:	stp	x29, x30, [sp, #-32]!
  408fc0:	mov	x29, sp
  408fc4:	str	x19, [sp, #16]
  408fc8:	mov	x19, x0
  408fcc:	mov	w1, #0xffffffff            	// #-1
  408fd0:	add	x0, x0, #0x38
  408fd4:	bl	408e64 <ferror@plt+0x6594>
  408fd8:	ldr	x0, [x19, #8]
  408fdc:	bl	40c8b0 <ferror@plt+0x9fe0>
  408fe0:	ldr	x19, [sp, #16]
  408fe4:	ldp	x29, x30, [sp], #32
  408fe8:	ret
  408fec:	stp	x29, x30, [sp, #-48]!
  408ff0:	mov	x29, sp
  408ff4:	stp	x19, x20, [sp, #16]
  408ff8:	stp	x21, x22, [sp, #32]
  408ffc:	mov	x22, x0
  409000:	mov	x19, x1
  409004:	mov	w20, w2
  409008:	ldr	w1, [x1]
  40900c:	cmp	w1, w2
  409010:	b.gt	409054 <ferror@plt+0x6784>
  409014:	ldr	w1, [x19]
  409018:	cmp	w20, w1
  40901c:	b.le	409044 <ferror@plt+0x6774>
  409020:	mov	w21, #0x20                  	// #32
  409024:	mov	w1, w21
  409028:	ldr	x0, [x22, #8]
  40902c:	bl	40c914 <ferror@plt+0xa044>
  409030:	ldr	w3, [x19]
  409034:	add	w3, w3, #0x1
  409038:	str	w3, [x19]
  40903c:	cmp	w3, w20
  409040:	b.lt	409024 <ferror@plt+0x6754>  // b.tstop
  409044:	ldp	x19, x20, [sp, #16]
  409048:	ldp	x21, x22, [sp, #32]
  40904c:	ldp	x29, x30, [sp], #48
  409050:	ret
  409054:	and	w21, w3, #0xff
  409058:	bl	408fbc <ferror@plt+0x66ec>
  40905c:	cbnz	w21, 40906c <ferror@plt+0x679c>
  409060:	ldr	w0, [x22, #148]
  409064:	str	w0, [x19]
  409068:	b	409014 <ferror@plt+0x6744>
  40906c:	mov	w1, #0x20                  	// #32
  409070:	mov	x0, x22
  409074:	bl	407894 <ferror@plt+0x4fc4>
  409078:	b	409060 <ferror@plt+0x6790>
  40907c:	stp	x29, x30, [sp, #-224]!
  409080:	mov	x29, sp
  409084:	stp	x19, x20, [sp, #16]
  409088:	str	x21, [sp, #32]
  40908c:	mov	x19, x0
  409090:	mov	w20, w1
  409094:	mov	w3, #0x4                   	// #4
  409098:	mov	x2, x0
  40909c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  4090a0:	ldr	x1, [x0, #848]
  4090a4:	add	x0, sp, #0x48
  4090a8:	bl	407f1c <ferror@plt+0x564c>
  4090ac:	str	w20, [sp, #56]
  4090b0:	mov	w3, #0x1                   	// #1
  4090b4:	str	w3, [sp, #60]
  4090b8:	mov	w2, #0x0                   	// #0
  4090bc:	add	x1, sp, #0x38
  4090c0:	add	x0, sp, #0x48
  4090c4:	bl	407abc <ferror@plt+0x51ec>
  4090c8:	mov	w21, w0
  4090cc:	tst	w0, #0xff
  4090d0:	b.ne	40912c <ferror@plt+0x685c>  // b.any
  4090d4:	ldr	x0, [sp, #208]
  4090d8:	cbz	x0, 4090e8 <ferror@plt+0x6818>
  4090dc:	ldrsb	w1, [x0, #3]
  4090e0:	tbnz	w1, #31, 409144 <ferror@plt+0x6874>
  4090e4:	bl	402690 <free@plt>
  4090e8:	ldr	x0, [sp, #200]
  4090ec:	cbz	x0, 4090fc <ferror@plt+0x682c>
  4090f0:	ldrsb	w1, [x0, #3]
  4090f4:	tbnz	w1, #31, 40914c <ferror@plt+0x687c>
  4090f8:	bl	402690 <free@plt>
  4090fc:	ldr	x0, [sp, #192]
  409100:	cbz	x0, 409110 <ferror@plt+0x6840>
  409104:	ldrsb	w1, [x0, #3]
  409108:	tbnz	w1, #31, 409154 <ferror@plt+0x6884>
  40910c:	bl	402690 <free@plt>
  409110:	add	x0, sp, #0x80
  409114:	bl	407930 <ferror@plt+0x5060>
  409118:	mov	w0, w21
  40911c:	ldp	x19, x20, [sp, #16]
  409120:	ldr	x21, [sp, #32]
  409124:	ldp	x29, x30, [sp], #224
  409128:	ret
  40912c:	mov	x3, #0x0                   	// #0
  409130:	mov	w2, #0x1                   	// #1
  409134:	mov	w1, w20
  409138:	mov	x0, x19
  40913c:	bl	42a2b0 <ferror@plt+0x279e0>
  409140:	b	4090d4 <ferror@plt+0x6804>
  409144:	str	wzr, [x0, #4]
  409148:	b	4090e8 <ferror@plt+0x6818>
  40914c:	str	wzr, [x0, #4]
  409150:	b	4090fc <ferror@plt+0x682c>
  409154:	str	wzr, [x0, #4]
  409158:	b	409110 <ferror@plt+0x6840>
  40915c:	stp	x29, x30, [sp, #-448]!
  409160:	mov	x29, sp
  409164:	stp	x19, x20, [sp, #16]
  409168:	stp	x21, x22, [sp, #32]
  40916c:	mov	x21, x0
  409170:	str	x0, [sp, #152]
  409174:	mov	x19, x1
  409178:	mov	w20, w2
  40917c:	ldr	x0, [x0]
  409180:	bl	40c8b0 <ferror@plt+0x9fe0>
  409184:	mov	w1, #0x0                   	// #0
  409188:	mov	x0, x19
  40918c:	bl	42a1d0 <ferror@plt+0x27900>
  409190:	ldrb	w3, [x21, #108]
  409194:	eor	w1, w3, #0x1
  409198:	cmp	w0, #0x1
  40919c:	cset	w3, ls  // ls = plast
  4091a0:	orr	w3, w3, w1
  4091a4:	ands	w1, w3, #0xff
  4091a8:	str	w1, [sp, #160]
  4091ac:	b.eq	4091c0 <ferror@plt+0x68f0>  // b.none
  4091b0:	ldp	x19, x20, [sp, #16]
  4091b4:	ldp	x21, x22, [sp, #32]
  4091b8:	ldp	x29, x30, [sp], #448
  4091bc:	ret
  4091c0:	ldr	w1, [x21, #200]
  4091c4:	cmp	w1, w0
  4091c8:	b.ne	4091d4 <ferror@plt+0x6904>  // b.any
  4091cc:	ldr	w1, [x19, #120]
  4091d0:	cbz	w1, 4091b0 <ferror@plt+0x68e0>
  4091d4:	stp	x23, x24, [sp, #48]
  4091d8:	stp	x25, x26, [sp, #64]
  4091dc:	stp	x27, x28, [sp, #80]
  4091e0:	ldr	x21, [sp, #152]
  4091e4:	str	w0, [x21, #200]
  4091e8:	ldr	x0, [x21]
  4091ec:	bl	40c590 <ferror@plt+0x9cc0>
  4091f0:	str	x0, [sp, #184]
  4091f4:	mov	x1, #0x0                   	// #0
  4091f8:	ldr	x0, [x21]
  4091fc:	bl	40c554 <ferror@plt+0x9c84>
  409200:	mov	w3, w20
  409204:	mov	x2, x19
  409208:	mov	x1, x21
  40920c:	add	x0, sp, #0x128
  409210:	bl	407f1c <ferror@plt+0x564c>
  409214:	str	wzr, [sp, #136]
  409218:	add	x21, sp, #0x160
  40921c:	str	x21, [sp, #176]
  409220:	mov	x26, x21
  409224:	b	409284 <ferror@plt+0x69b4>
  409228:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  40922c:	add	x2, x2, #0xdb8
  409230:	mov	w1, #0x408                 	// #1032
  409234:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  409238:	add	x0, x0, #0xd28
  40923c:	bl	4062a0 <ferror@plt+0x39d0>
  409240:	ldr	w0, [sp, #136]
  409244:	cmp	w0, #0x0
  409248:	b.gt	4092f8 <ferror@plt+0x6a28>
  40924c:	ldr	w0, [x21, #12]
  409250:	ldr	w1, [sp, #328]
  409254:	cmp	w1, w0
  409258:	b.gt	4092f8 <ferror@plt+0x6a28>
  40925c:	add	x0, x21, w20, uxtw #3
  409260:	ldr	w1, [x0, #12]
  409264:	str	x1, [sp, #120]
  409268:	ldr	w0, [x0, #8]
  40926c:	str	x0, [sp, #104]
  409270:	cmp	x1, x0
  409274:	b.ge	40a310 <ferror@plt+0x7a40>  // b.tcont
  409278:	ldr	w0, [sp, #136]
  40927c:	add	w0, w0, #0x1
  409280:	str	w0, [sp, #136]
  409284:	ldr	x21, [sp, #432]
  409288:	mov	w0, #0x0                   	// #0
  40928c:	cbz	x21, 409294 <ferror@plt+0x69c4>
  409290:	ldr	w0, [x21, #4]
  409294:	ldr	w1, [sp, #136]
  409298:	cmp	w1, w0
  40929c:	b.ge	40a1b0 <ferror@plt+0x78e0>  // b.tcont
  4092a0:	mov	w20, w1
  4092a4:	ldr	x0, [sp, #152]
  4092a8:	ldrb	w0, [x0, #223]
  4092ac:	cbz	w0, 409240 <ferror@plt+0x6970>
  4092b0:	cmp	w1, #0x0
  4092b4:	b.le	40925c <ferror@plt+0x698c>
  4092b8:	ldrb	w0, [sp, #410]
  4092bc:	cbz	w0, 409228 <ferror@plt+0x6958>
  4092c0:	ldr	w0, [sp, #440]
  4092c4:	tbnz	w0, #31, 4092ec <ferror@plt+0x6a1c>
  4092c8:	mov	w19, #0x0                   	// #0
  4092cc:	mov	w22, #0x2e                  	// #46
  4092d0:	mov	w1, w22
  4092d4:	ldr	x0, [sp, #304]
  4092d8:	bl	40c914 <ferror@plt+0xa044>
  4092dc:	add	w19, w19, #0x1
  4092e0:	ldr	w0, [sp, #440]
  4092e4:	cmp	w0, w19
  4092e8:	b.ge	4092d0 <ferror@plt+0x6a00>  // b.tcont
  4092ec:	ldr	x0, [sp, #304]
  4092f0:	bl	40c8b0 <ferror@plt+0x9fe0>
  4092f4:	b	40925c <ferror@plt+0x698c>
  4092f8:	ldr	w0, [sp, #328]
  4092fc:	add	x19, x21, w20, uxtw #3
  409300:	ldr	w3, [x19, #8]
  409304:	cmp	w0, w3
  409308:	b.cc	40932c <ferror@plt+0x6a5c>  // b.lo, b.ul, b.last
  40930c:	ldr	w1, [x19, #12]
  409310:	cmp	w0, w1
  409314:	b.hi	40932c <ferror@plt+0x6a5c>  // b.pmore
  409318:	ldp	x0, x1, [sp, #320]
  40931c:	stp	x0, x1, [sp, #232]
  409320:	ldp	x0, x1, [sp, #336]
  409324:	stp	x0, x1, [sp, #248]
  409328:	b	4093b4 <ferror@plt+0x6ae4>
  40932c:	ldr	x2, [sp, #416]
  409330:	mov	w0, #0x0                   	// #0
  409334:	mov	w4, #0x0                   	// #0
  409338:	b	409340 <ferror@plt+0x6a70>
  40933c:	add	w0, w0, #0x1
  409340:	mov	w1, w4
  409344:	cbz	x2, 40934c <ferror@plt+0x6a7c>
  409348:	ldr	w1, [x2, #4]
  40934c:	cmp	w0, w1
  409350:	b.cs	4093d8 <ferror@plt+0x6b08>  // b.hs, b.nlast
  409354:	ubfiz	x1, x0, #2, #32
  409358:	add	x1, x1, w0, uxtw
  40935c:	add	x1, x2, x1, lsl #3
  409360:	ldr	w1, [x1, #8]
  409364:	cmp	w3, w1
  409368:	b.hi	40933c <ferror@plt+0x6a6c>  // b.pmore
  40936c:	ldr	w5, [x19, #12]
  409370:	cmp	w1, w5
  409374:	b.hi	40933c <ferror@plt+0x6a6c>  // b.pmore
  409378:	ldp	x4, x5, [sp, #320]
  40937c:	add	x3, sp, #0x200
  409380:	stp	x4, x5, [x3, #-248]
  409384:	ldp	x4, x5, [sp, #336]
  409388:	stp	x4, x5, [x3, #-232]
  40938c:	ubfiz	x3, x0, #2, #32
  409390:	add	x0, x3, w0, uxtw
  409394:	add	x0, x2, x0, lsl #3
  409398:	ldr	w0, [x0, #12]
  40939c:	str	w1, [sp, #272]
  4093a0:	str	w0, [sp, #276]
  4093a4:	add	x0, sp, #0x200
  4093a8:	ldp	x0, x1, [x0, #-248]
  4093ac:	stp	x0, x1, [sp, #232]
  4093b0:	stp	x4, x5, [sp, #248]
  4093b4:	ldp	x0, x1, [sp, #232]
  4093b8:	stp	x0, x1, [sp, #192]
  4093bc:	ldp	x0, x1, [sp, #248]
  4093c0:	stp	x0, x1, [sp, #208]
  4093c4:	ldr	x0, [sp, #152]
  4093c8:	ldr	x2, [x0, #144]
  4093cc:	add	x1, sp, #0xc0
  4093d0:	blr	x2
  4093d4:	b	40925c <ferror@plt+0x698c>
  4093d8:	mov	w22, #0x0                   	// #0
  4093dc:	b	4093e4 <ferror@plt+0x6b14>
  4093e0:	add	w22, w22, #0x1
  4093e4:	ldr	x0, [sp, #424]
  4093e8:	cbz	x0, 409444 <ferror@plt+0x6b74>
  4093ec:	ldr	w1, [x0, #4]
  4093f0:	cmp	w1, w22
  4093f4:	b.ls	409444 <ferror@plt+0x6b74>  // b.plast
  4093f8:	add	x0, x0, w22, uxtw #3
  4093fc:	ldr	x0, [x0, #8]
  409400:	add	x8, sp, #0x108
  409404:	ldr	w0, [x0]
  409408:	bl	411d34 <ferror@plt+0xf464>
  40940c:	ldr	w0, [sp, #272]
  409410:	ldr	w1, [x19, #8]
  409414:	cmp	w0, w1
  409418:	b.cc	4093e0 <ferror@plt+0x6b10>  // b.lo, b.ul, b.last
  40941c:	ldr	w1, [x19, #12]
  409420:	cmp	w0, w1
  409424:	b.hi	4093e0 <ferror@plt+0x6b10>  // b.pmore
  409428:	add	x0, sp, #0x200
  40942c:	ldp	x0, x1, [x0, #-248]
  409430:	stp	x0, x1, [sp, #232]
  409434:	add	x0, sp, #0x200
  409438:	ldp	x0, x1, [x0, #-232]
  40943c:	stp	x0, x1, [sp, #248]
  409440:	b	4093b4 <ferror@plt+0x6ae4>
  409444:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  409448:	add	x2, x2, #0xdd8
  40944c:	mov	w1, #0x449                 	// #1097
  409450:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  409454:	add	x0, x0, #0xd28
  409458:	bl	4062a0 <ferror@plt+0x39d0>
  40945c:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  409460:	add	x2, x2, #0xdf0
  409464:	mov	w1, #0x638                 	// #1592
  409468:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40946c:	add	x0, x0, #0xd28
  409470:	bl	4062a0 <ferror@plt+0x39d0>
  409474:	ldr	x0, [x19, #8]
  409478:	ldrb	w1, [x0, x23]
  40947c:	ldr	x0, [sp, #304]
  409480:	bl	40c914 <ferror@plt+0xa044>
  409484:	add	x23, x23, #0x1
  409488:	ldr	x0, [x19, #16]
  40948c:	sub	x0, x0, #0x1
  409490:	cmp	x0, x23
  409494:	b.hi	409474 <ferror@plt+0x6ba4>  // b.pmore
  409498:	mov	w1, w24
  40949c:	mov	x0, x26
  4094a0:	bl	408e64 <ferror@plt+0x6594>
  4094a4:	ldr	x0, [sp, #304]
  4094a8:	bl	40c8b0 <ferror@plt+0x9fe0>
  4094ac:	add	w21, w21, #0x1
  4094b0:	ldr	x0, [sp, #424]
  4094b4:	cbz	x0, 409548 <ferror@plt+0x6c78>
  4094b8:	ldr	w1, [x0, #4]
  4094bc:	cmp	w1, w21
  4094c0:	b.ls	409548 <ferror@plt+0x6c78>  // b.plast
  4094c4:	add	x0, x0, w21, uxtw #3
  4094c8:	ldr	x19, [x0, #8]
  4094cc:	mov	x0, x19
  4094d0:	bl	42a6a4 <ferror@plt+0x27dd4>
  4094d4:	and	w0, w0, #0xff
  4094d8:	cbz	w0, 4094ac <ferror@plt+0x6bdc>
  4094dc:	ldr	w1, [x19]
  4094e0:	ldr	w0, [x19, #4]
  4094e4:	cmp	w1, w0
  4094e8:	b.ne	40945c <ferror@plt+0x6b8c>  // b.any
  4094ec:	ldr	w2, [sp, #96]
  4094f0:	ldr	x1, [sp, #320]
  4094f4:	mov	x0, x19
  4094f8:	bl	42a588 <ferror@plt+0x27cb8>
  4094fc:	and	w0, w0, #0xff
  409500:	cbz	w0, 4094ac <ferror@plt+0x6bdc>
  409504:	mov	w1, w24
  409508:	mov	x0, x26
  40950c:	bl	408e64 <ferror@plt+0x6594>
  409510:	mov	w1, w27
  409514:	add	x0, sp, #0x128
  409518:	bl	407894 <ferror@plt+0x4fc4>
  40951c:	mov	w1, w25
  409520:	ldr	x0, [sp, #304]
  409524:	bl	40c914 <ferror@plt+0xa044>
  409528:	mov	w1, #0xfffffffe            	// #-2
  40952c:	mov	x0, x26
  409530:	bl	408e64 <ferror@plt+0x6594>
  409534:	ldr	x0, [x19, #16]
  409538:	cmp	x0, #0x1
  40953c:	b.eq	409498 <ferror@plt+0x6bc8>  // b.none
  409540:	mov	x23, #0x0                   	// #0
  409544:	b	409474 <ferror@plt+0x6ba4>
  409548:	mov	w1, #0xffffffff            	// #-1
  40954c:	mov	x0, x26
  409550:	bl	408e64 <ferror@plt+0x6594>
  409554:	cmp	w22, #0x0
  409558:	b.le	40a488 <ferror@plt+0x7bb8>
  40955c:	add	x1, x20, w22, sxtw
  409560:	mov	w21, w22
  409564:	ldurb	w2, [x1, #-1]
  409568:	and	w0, w2, #0xfffffffb
  40956c:	and	w0, w0, #0xff
  409570:	cmp	w2, #0x20
  409574:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  409578:	b.ne	409638 <ferror@plt+0x6d68>  // b.any
  40957c:	sub	x1, x1, #0x1
  409580:	subs	w21, w21, #0x1
  409584:	b.ne	409564 <ferror@plt+0x6c94>  // b.any
  409588:	cbz	w21, 4095a8 <ferror@plt+0x6cd8>
  40958c:	add	x0, x20, w21, sxtw
  409590:	ldurb	w1, [x0, #-1]
  409594:	and	w0, w1, #0xfffffffb
  409598:	and	w0, w0, #0xff
  40959c:	cmp	w1, #0x20
  4095a0:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  4095a4:	b.eq	409674 <ferror@plt+0x6da4>  // b.none
  4095a8:	ldrsw	x0, [sp, #444]
  4095ac:	add	x20, x20, x0
  4095b0:	ldrb	w0, [sp, #410]
  4095b4:	cbz	w0, 40968c <ferror@plt+0x6dbc>
  4095b8:	ldr	w0, [sp, #96]
  4095bc:	bl	4067a8 <ferror@plt+0x3ed8>
  4095c0:	mov	w22, w0
  4095c4:	ldr	w0, [sp, #440]
  4095c8:	sub	w0, w0, w22
  4095cc:	cmp	w0, #0x0
  4095d0:	b.le	4095fc <ferror@plt+0x6d2c>
  4095d4:	mov	w19, #0x0                   	// #0
  4095d8:	mov	w23, #0x20                  	// #32
  4095dc:	mov	w1, w23
  4095e0:	ldr	x0, [sp, #304]
  4095e4:	bl	40c914 <ferror@plt+0xa044>
  4095e8:	add	w19, w19, #0x1
  4095ec:	ldr	w0, [sp, #440]
  4095f0:	sub	w0, w0, w22
  4095f4:	cmp	w0, w19
  4095f8:	b.gt	4095dc <ferror@plt+0x6d0c>
  4095fc:	ldr	w2, [sp, #100]
  409600:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  409604:	add	x1, x1, #0xe38
  409608:	ldr	x0, [sp, #304]
  40960c:	bl	40ed44 <ferror@plt+0xc474>
  409610:	ldr	w19, [sp, #444]
  409614:	add	w19, w19, #0x1
  409618:	cmp	w19, w21
  40961c:	b.gt	409730 <ferror@plt+0x6e60>
  409620:	add	w21, w21, #0x1
  409624:	mov	w23, #0x0                   	// #0
  409628:	mov	w22, #0x7fffffff            	// #2147483647
  40962c:	mov	w24, w22
  409630:	mov	w25, #0xffffffff            	// #-1
  409634:	b	409704 <ferror@plt+0x6e34>
  409638:	tbnz	w21, #31, 40965c <ferror@plt+0x6d8c>
  40963c:	cmp	w22, w21
  409640:	b.ge	409588 <ferror@plt+0x6cb8>  // b.tcont
  409644:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  409648:	add	x2, x2, #0xe08
  40964c:	mov	w1, #0x2ba                 	// #698
  409650:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  409654:	add	x0, x0, #0xd28
  409658:	bl	4062a0 <ferror@plt+0x39d0>
  40965c:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  409660:	add	x2, x2, #0xe08
  409664:	mov	w1, #0x2b9                 	// #697
  409668:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40966c:	add	x0, x0, #0xd28
  409670:	bl	4062a0 <ferror@plt+0x39d0>
  409674:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  409678:	add	x2, x2, #0xe08
  40967c:	mov	w1, #0x2bb                 	// #699
  409680:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  409684:	add	x0, x0, #0xd28
  409688:	bl	4062a0 <ferror@plt+0x39d0>
  40968c:	mov	w1, #0x20                  	// #32
  409690:	ldr	x0, [sp, #304]
  409694:	bl	40c914 <ferror@plt+0xa044>
  409698:	b	409610 <ferror@plt+0x6d40>
  40969c:	add	x5, sp, #0x108
  4096a0:	mov	w4, w24
  4096a4:	mov	w3, #0x0                   	// #0
  4096a8:	mov	w2, w19
  4096ac:	ldr	w1, [sp, #100]
  4096b0:	add	x0, sp, #0x128
  4096b4:	bl	407694 <ferror@plt+0x4dc4>
  4096b8:	and	w0, w0, #0xff
  4096bc:	cbz	w0, 4096d0 <ferror@plt+0x6e00>
  4096c0:	ldr	w1, [sp, #264]
  4096c4:	mov	x0, x26
  4096c8:	bl	408e64 <ferror@plt+0x6594>
  4096cc:	b	40970c <ferror@plt+0x6e3c>
  4096d0:	mov	w1, w25
  4096d4:	mov	x0, x26
  4096d8:	bl	408e64 <ferror@plt+0x6594>
  4096dc:	b	40970c <ferror@plt+0x6e3c>
  4096e0:	cmp	w22, w24
  4096e4:	mov	w23, w19
  4096e8:	csel	w22, w22, w19, ne  // ne = any
  4096ec:	ldr	x0, [sp, #304]
  4096f0:	bl	40c914 <ferror@plt+0xa044>
  4096f4:	add	x20, x20, #0x1
  4096f8:	add	w19, w19, #0x1
  4096fc:	cmp	w19, w21
  409700:	b.eq	409738 <ferror@plt+0x6e68>  // b.none
  409704:	ldrb	w0, [sp, #408]
  409708:	cbnz	w0, 40969c <ferror@plt+0x6dcc>
  40970c:	ldrb	w1, [x20]
  409710:	and	w2, w1, #0xffffffdf
  409714:	and	w0, w1, #0xfffffffb
  409718:	and	w0, w0, #0xff
  40971c:	tst	w2, #0xff
  409720:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  409724:	b.ne	4096e0 <ferror@plt+0x6e10>  // b.any
  409728:	mov	w1, #0x20                  	// #32
  40972c:	b	4096ec <ferror@plt+0x6e1c>
  409730:	mov	w23, #0x0                   	// #0
  409734:	mov	w22, #0x7fffffff            	// #2147483647
  409738:	add	x0, sp, #0x128
  40973c:	bl	408fbc <ferror@plt+0x66ec>
  409740:	ldr	x0, [sp, #416]
  409744:	cbz	x0, 40a634 <ferror@plt+0x7d64>
  409748:	add	x2, x0, #0x8
  40974c:	ldr	w0, [x0, #4]
  409750:	add	x0, x0, x0, lsl #2
  409754:	add	x0, x2, x0, lsl #3
  409758:	mov	x1, x2
  40975c:	cmp	x1, x0
  409760:	b.eq	40a62c <ferror@plt+0x7d5c>  // b.none
  409764:	ldr	w3, [x1, #16]
  409768:	cmp	w3, #0x2
  40976c:	b.eq	40a62c <ferror@plt+0x7d5c>  // b.none
  409770:	ldr	w3, [x1]
  409774:	ldr	w4, [x1, #8]
  409778:	cmp	w3, w4
  40977c:	b.hi	4097dc <ferror@plt+0x6f0c>  // b.pmore
  409780:	add	x1, x1, #0x28
  409784:	ldr	w5, [sp, #100]
  409788:	cmp	w4, w5
  40978c:	ccmp	w3, w5, #0x2, cs  // cs = hs, nlast
  409790:	b.hi	40975c <ferror@plt+0x6e8c>  // b.pmore
  409794:	ldr	w20, [sp, #332]
  409798:	add	w20, w20, #0x1
  40979c:	add	w3, w23, #0x1
  4097a0:	cmp	x0, x2
  4097a4:	b.eq	409804 <ferror@plt+0x6f34>  // b.none
  4097a8:	ldr	w1, [x2]
  4097ac:	ldr	w5, [sp, #100]
  4097b0:	cmp	w1, w5
  4097b4:	b.hi	4097d4 <ferror@plt+0x6f04>  // b.pmore
  4097b8:	ldr	w1, [x2, #8]
  4097bc:	cmp	w1, w5
  4097c0:	b.eq	4097f4 <ferror@plt+0x6f24>  // b.none
  4097c4:	cmp	w23, w20
  4097c8:	ldr	w4, [sp, #100]
  4097cc:	ccmp	w1, w4, #0x0, ge  // ge = tcont
  4097d0:	csel	w20, w3, w20, hi  // hi = pmore
  4097d4:	add	x2, x2, #0x28
  4097d8:	b	4097a0 <ferror@plt+0x6ed0>
  4097dc:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  4097e0:	add	x2, x2, #0xe40
  4097e4:	mov	w1, #0x215                 	// #533
  4097e8:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  4097ec:	add	x0, x0, #0xd28
  4097f0:	bl	4062a0 <ferror@plt+0x39d0>
  4097f4:	ldr	w1, [x2, #12]
  4097f8:	cmp	w1, w20
  4097fc:	csinc	w20, w20, w1, lt  // lt = tstop
  409800:	b	4097d4 <ferror@plt+0x6f04>
  409804:	mov	w1, #0x20                  	// #32
  409808:	add	x0, sp, #0x128
  40980c:	bl	407894 <ferror@plt+0x4fc4>
  409810:	mov	w1, #0x20                  	// #32
  409814:	ldr	x0, [sp, #304]
  409818:	bl	40c914 <ferror@plt+0xa044>
  40981c:	ldr	w19, [sp, #444]
  409820:	add	w19, w19, #0x1
  409824:	cmp	w19, w20
  409828:	b.ge	4098d0 <ferror@plt+0x7000>  // b.tcont
  40982c:	mov	w24, #0xffffffff            	// #-1
  409830:	mov	w21, #0x20                  	// #32
  409834:	ldr	w25, [sp, #100]
  409838:	b	409870 <ferror@plt+0x6fa0>
  40983c:	mov	w1, #0x7e                  	// #126
  409840:	ldr	x0, [sp, #304]
  409844:	bl	40c914 <ferror@plt+0xa044>
  409848:	b	409864 <ferror@plt+0x6f94>
  40984c:	mov	w1, w24
  409850:	mov	x0, x26
  409854:	bl	408e64 <ferror@plt+0x6594>
  409858:	mov	w1, w21
  40985c:	ldr	x0, [sp, #304]
  409860:	bl	40c914 <ferror@plt+0xa044>
  409864:	add	w19, w19, #0x1
  409868:	cmp	w19, w20
  40986c:	b.eq	4098d0 <ferror@plt+0x7000>  // b.none
  409870:	add	x5, sp, #0x108
  409874:	mov	w4, w23
  409878:	mov	w3, w22
  40987c:	mov	w2, w19
  409880:	mov	w1, w25
  409884:	add	x0, sp, #0x128
  409888:	bl	407694 <ferror@plt+0x4dc4>
  40988c:	and	w0, w0, #0xff
  409890:	cbz	w0, 40984c <ferror@plt+0x6f7c>
  409894:	ldr	w1, [sp, #264]
  409898:	mov	x0, x26
  40989c:	bl	408e64 <ferror@plt+0x6594>
  4098a0:	ldrb	w0, [sp, #268]
  4098a4:	cbz	w0, 40983c <ferror@plt+0x6f6c>
  4098a8:	ldr	w0, [sp, #264]
  4098ac:	mov	w1, #0x5e                  	// #94
  4098b0:	cmp	w0, #0x2
  4098b4:	b.gt	4098c4 <ferror@plt+0x6ff4>
  4098b8:	ldr	x1, [sp, #296]
  4098bc:	add	x0, x1, w0, sxtw
  4098c0:	ldrb	w1, [x0, #116]
  4098c4:	ldr	x0, [sp, #304]
  4098c8:	bl	40c914 <ferror@plt+0xa044>
  4098cc:	b	409864 <ferror@plt+0x6f94>
  4098d0:	add	x0, sp, #0x128
  4098d4:	bl	408fbc <ferror@plt+0x66ec>
  4098d8:	ldrb	w0, [sp, #409]
  4098dc:	cbz	w0, 40a634 <ferror@plt+0x7d64>
  4098e0:	ldr	x20, [sp, #416]
  4098e4:	cbnz	x20, 40a498 <ferror@plt+0x7bc8>
  4098e8:	b	40a634 <ferror@plt+0x7d64>
  4098ec:	add	w0, w20, #0x1
  4098f0:	str	w24, [sp, #128]
  4098f4:	b	40a3e8 <ferror@plt+0x7b18>
  4098f8:	cmp	w1, #0x1
  4098fc:	b.hi	409950 <ferror@plt+0x7080>  // b.pmore
  409900:	ldr	w2, [x19, #4]
  409904:	sub	w0, w2, #0x1
  409908:	cbz	w2, 40998c <ferror@plt+0x70bc>
  40990c:	mov	w24, #0x1                   	// #1
  409910:	mov	w6, #0x7fffffff            	// #2147483647
  409914:	mov	w5, w0
  409918:	ubfiz	x1, x0, #2, #32
  40991c:	add	x3, x1, x5
  409920:	add	x3, x19, x3, lsl #3
  409924:	ldrsw	x4, [x3, #12]
  409928:	ldr	x1, [x3, #32]
  40992c:	add	x1, x4, x1
  409930:	cmp	x1, w6, sxtw
  409934:	cinc	w24, w24, cs  // cs = hs, nlast
  409938:	str	w24, [x3, #40]
  40993c:	sub	w0, w0, #0x1
  409940:	cmp	w2, w0
  409944:	b.ls	40a3b0 <ferror@plt+0x7ae0>  // b.plast
  409948:	ldr	w6, [x3, #12]
  40994c:	b	409914 <ferror@plt+0x7044>
  409950:	adrp	x3, 407000 <ferror@plt+0x4730>
  409954:	add	x3, x3, #0x64c
  409958:	mov	x2, #0x28                  	// #40
  40995c:	mov	w1, w1
  409960:	add	x0, x19, #0x8
  409964:	bl	414540 <ferror@plt+0x11c70>
  409968:	b	409900 <ferror@plt+0x7030>
  40996c:	ldr	x26, [sp, #128]
  409970:	ldr	w0, [x19, #4]
  409974:	cbnz	w0, 40a3b4 <ferror@plt+0x7ae4>
  409978:	ldrsb	w0, [x19, #3]
  40997c:	tbnz	w0, #31, 409b0c <ferror@plt+0x723c>
  409980:	mov	x0, x19
  409984:	bl	402690 <free@plt>
  409988:	b	40a634 <ferror@plt+0x7d64>
  40998c:	mov	w24, #0x1                   	// #1
  409990:	mov	w25, #0x0                   	// #0
  409994:	mov	w20, #0x0                   	// #0
  409998:	add	x0, sp, #0x108
  40999c:	str	x0, [sp, #112]
  4099a0:	str	x26, [sp, #128]
  4099a4:	ldr	x26, [sp, #176]
  4099a8:	b	409a28 <ferror@plt+0x7158>
  4099ac:	ldr	w2, [x21, #4]
  4099b0:	ldr	w0, [sp, #264]
  4099b4:	cmp	w2, w0
  4099b8:	b.lt	409ad0 <ferror@plt+0x7200>  // b.tstop
  4099bc:	mov	w3, w27
  4099c0:	ldr	x1, [sp, #112]
  4099c4:	add	x0, sp, #0x128
  4099c8:	bl	408fec <ferror@plt+0x671c>
  4099cc:	ldr	w1, [x21]
  4099d0:	mov	x0, x26
  4099d4:	bl	408e64 <ferror@plt+0x6594>
  4099d8:	ldr	x1, [x21, #8]
  4099dc:	ldr	x0, [sp, #304]
  4099e0:	bl	40cf0c <ferror@plt+0xa63c>
  4099e4:	mov	w1, #0xffffffff            	// #-1
  4099e8:	mov	x0, x26
  4099ec:	bl	408e64 <ferror@plt+0x6594>
  4099f0:	ldr	x1, [x21, #24]
  4099f4:	ldr	w0, [sp, #264]
  4099f8:	add	w0, w0, w1
  4099fc:	str	w0, [sp, #264]
  409a00:	add	w22, w22, #0x1
  409a04:	add	x21, x21, #0x28
  409a08:	ldr	w0, [x19, #4]
  409a0c:	cmp	w0, w22
  409a10:	b.hi	409a64 <ferror@plt+0x7194>  // b.pmore
  409a14:	add	x0, sp, #0x128
  409a18:	bl	408fbc <ferror@plt+0x66ec>
  409a1c:	add	w20, w20, #0x1
  409a20:	cmp	w20, w24
  409a24:	b.gt	40996c <ferror@plt+0x709c>
  409a28:	mov	w1, #0x20                  	// #32
  409a2c:	add	x0, sp, #0x128
  409a30:	bl	407894 <ferror@plt+0x4fc4>
  409a34:	mov	w1, #0x20                  	// #32
  409a38:	ldr	x0, [sp, #304]
  409a3c:	bl	40c914 <ferror@plt+0xa044>
  409a40:	ldr	w0, [sp, #444]
  409a44:	add	w0, w0, #0x1
  409a48:	str	w0, [sp, #264]
  409a4c:	ldr	w0, [x19, #4]
  409a50:	cbz	w0, 409a14 <ferror@plt+0x7144>
  409a54:	add	x21, x19, #0x8
  409a58:	mov	w22, #0x0                   	// #0
  409a5c:	mov	w27, #0x1                   	// #1
  409a60:	mov	w28, #0x7c                  	// #124
  409a64:	ldr	w0, [x21, #32]
  409a68:	cmp	w0, w20
  409a6c:	b.lt	409a14 <ferror@plt+0x7144>  // b.tstop
  409a70:	b.eq	4099ac <ferror@plt+0x70dc>  // b.none
  409a74:	ldr	w2, [x21, #4]
  409a78:	cmp	w2, w25
  409a7c:	b.eq	409a00 <ferror@plt+0x7130>  // b.none
  409a80:	ldr	w0, [sp, #264]
  409a84:	cmp	w2, w0
  409a88:	b.lt	409ae8 <ferror@plt+0x7218>  // b.tstop
  409a8c:	mov	w3, w27
  409a90:	ldr	x1, [sp, #112]
  409a94:	add	x0, sp, #0x128
  409a98:	bl	408fec <ferror@plt+0x671c>
  409a9c:	ldr	w1, [x21]
  409aa0:	mov	x0, x26
  409aa4:	bl	408e64 <ferror@plt+0x6594>
  409aa8:	mov	w1, w28
  409aac:	ldr	x0, [sp, #304]
  409ab0:	bl	40c914 <ferror@plt+0xa044>
  409ab4:	mov	w1, #0xffffffff            	// #-1
  409ab8:	mov	x0, x26
  409abc:	bl	408e64 <ferror@plt+0x6594>
  409ac0:	ldr	w25, [sp, #264]
  409ac4:	add	w0, w25, #0x1
  409ac8:	str	w0, [sp, #264]
  409acc:	b	409a00 <ferror@plt+0x7130>
  409ad0:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  409ad4:	add	x2, x2, #0xe58
  409ad8:	mov	w1, #0x609                 	// #1545
  409adc:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  409ae0:	add	x0, x0, #0xd28
  409ae4:	bl	4062a0 <ferror@plt+0x39d0>
  409ae8:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  409aec:	add	x2, x2, #0xe58
  409af0:	mov	w1, #0x612                 	// #1554
  409af4:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  409af8:	add	x0, x0, #0xd28
  409afc:	bl	4062a0 <ferror@plt+0x39d0>
  409b00:	ldr	x0, [x20]
  409b04:	bl	402690 <free@plt>
  409b08:	b	40a3c4 <ferror@plt+0x7af4>
  409b0c:	str	wzr, [x19, #4]
  409b10:	b	40a634 <ferror@plt+0x7d64>
  409b14:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  409b18:	add	x2, x2, #0xe70
  409b1c:	mov	w1, #0x6bc                 	// #1724
  409b20:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  409b24:	add	x0, x0, #0xd28
  409b28:	bl	4062a0 <ferror@plt+0x39d0>
  409b2c:	add	x8, sp, #0x108
  409b30:	bl	411d34 <ferror@plt+0xf464>
  409b34:	ldr	w22, [sp, #276]
  409b38:	sub	w22, w22, #0x1
  409b3c:	cmp	w27, w22
  409b40:	csel	w22, w27, w22, ge  // ge = tcont
  409b44:	cmp	w21, w22
  409b48:	b.le	409b7c <ferror@plt+0x72ac>
  409b4c:	sub	w0, w21, #0x1
  409b50:	cmp	w22, w0
  409b54:	b.ne	409b60 <ferror@plt+0x7290>  // b.any
  409b58:	mov	w22, w0
  409b5c:	b	409b7c <ferror@plt+0x72ac>
  409b60:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  409b64:	add	x2, x2, #0xe70
  409b68:	mov	w1, #0x6bc                 	// #1724
  409b6c:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  409b70:	add	x0, x0, #0xd28
  409b74:	bl	4062a0 <ferror@plt+0x39d0>
  409b78:	mov	w22, w27
  409b7c:	cbz	x19, 40a234 <ferror@plt+0x7964>
  409b80:	ldr	w0, [x19, #4]
  409b84:	cbz	w0, 409bf8 <ferror@plt+0x7328>
  409b88:	sub	w0, w0, #0x1
  409b8c:	add	x0, x19, x0, lsl #3
  409b90:	ldr	x24, [x0, #8]
  409b94:	ldr	w0, [x24]
  409b98:	cmp	w0, w25
  409b9c:	b.gt	409d90 <ferror@plt+0x74c0>
  409ba0:	ldr	w0, [x24, #8]
  409ba4:	cmp	w0, w21
  409ba8:	b.gt	409da8 <ferror@plt+0x74d8>
  409bac:	ldr	w0, [x24, #12]
  409bb0:	cmp	w0, w21
  409bb4:	b.lt	409bf8 <ferror@plt+0x7328>  // b.tstop
  409bb8:	ldr	w0, [x24, #4]
  409bbc:	str	w0, [sp, #140]
  409bc0:	add	w1, w0, #0x1
  409bc4:	str	w1, [sp, #164]
  409bc8:	sub	w27, w21, #0x1
  409bcc:	cmp	w0, w27
  409bd0:	ccmp	w1, w27, #0x4, ne  // ne = any
  409bd4:	b.gt	409dc0 <ferror@plt+0x74f0>
  409bd8:	ldr	w1, [sp, #96]
  409bdc:	ldr	x0, [sp, #128]
  409be0:	bl	411ee4 <ferror@plt+0xf614>
  409be4:	str	x0, [sp, #168]
  409be8:	str	x1, [sp, #144]
  409bec:	cmp	x0, #0x0
  409bf0:	ccmp	w27, w1, #0x0, ne  // ne = any
  409bf4:	b.lt	409dd8 <ferror@plt+0x7508>  // b.tstop
  409bf8:	ldr	x24, [x20, #8]
  409bfc:	ldr	x27, [x20, #16]
  409c00:	mov	x0, #0x28                  	// #40
  409c04:	bl	447868 <_obstack_memory_used@@Base+0x8fc>
  409c08:	mov	x20, x0
  409c0c:	str	w25, [x0]
  409c10:	str	w26, [x0, #4]
  409c14:	str	w21, [x0, #8]
  409c18:	str	w22, [x0, #12]
  409c1c:	mov	x0, x24
  409c20:	bl	447178 <_obstack_memory_used@@Base+0x20c>
  409c24:	str	x0, [x20, #16]
  409c28:	str	x27, [x20, #24]
  409c2c:	add	x27, x27, #0x1
  409c30:	str	x27, [x20, #32]
  409c34:	ldr	w21, [x19, #4]
  409c38:	ldr	w0, [x19]
  409c3c:	ubfx	x0, x0, #0, #31
  409c40:	cmp	w0, w21
  409c44:	b.ne	409ca0 <ferror@plt+0x73d0>  // b.any
  409c48:	ldrsb	w0, [x19, #3]
  409c4c:	add	w1, w21, #0x1
  409c50:	mov	w24, w28
  409c54:	tbnz	w0, #31, 40a278 <ferror@plt+0x79a8>
  409c58:	ldr	w1, [x19, #4]
  409c5c:	ldr	w0, [x19]
  409c60:	add	w1, w1, #0x1
  409c64:	and	w0, w0, #0x7fffffff
  409c68:	bl	40f5bc <ferror@plt+0xccec>
  409c6c:	mov	w21, w0
  409c70:	ldr	w22, [x19, #4]
  409c74:	ubfiz	x1, x21, #3, #32
  409c78:	add	x1, x1, #0x8
  409c7c:	mov	x0, x19
  409c80:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  409c84:	mov	x19, x0
  409c88:	ldr	w1, [x0]
  409c8c:	bfxil	w1, w21, #0, #31
  409c90:	str	w1, [x0]
  409c94:	ubfx	x1, x1, #24, #7
  409c98:	strb	w1, [x0, #3]
  409c9c:	str	w22, [x0, #4]
  409ca0:	ldr	w0, [x19, #4]
  409ca4:	add	w1, w0, #0x1
  409ca8:	str	w1, [x19, #4]
  409cac:	add	x0, x19, w0, uxtw #3
  409cb0:	str	x20, [x0, #8]
  409cb4:	add	w23, w23, #0x1
  409cb8:	ldr	x0, [sp, #424]
  409cbc:	cbz	x0, 409fe4 <ferror@plt+0x7714>
  409cc0:	ldr	w1, [x0, #4]
  409cc4:	cmp	w1, w23
  409cc8:	b.ls	409fe4 <ferror@plt+0x7714>  // b.plast
  409ccc:	add	x0, x0, w23, uxtw #3
  409cd0:	ldr	x20, [x0, #8]
  409cd4:	mov	x0, x20
  409cd8:	bl	42a6a4 <ferror@plt+0x27dd4>
  409cdc:	and	w0, w0, #0xff
  409ce0:	cbnz	w0, 409cb4 <ferror@plt+0x73e4>
  409ce4:	ldr	w2, [sp, #96]
  409ce8:	ldr	x1, [sp, #320]
  409cec:	mov	x0, x20
  409cf0:	bl	42a588 <ferror@plt+0x27cb8>
  409cf4:	ands	w28, w0, #0xff
  409cf8:	b.eq	409cb4 <ferror@plt+0x73e4>  // b.none
  409cfc:	add	x8, sp, #0x108
  409d00:	ldr	w0, [x20]
  409d04:	bl	411d34 <ferror@plt+0xf464>
  409d08:	ldr	w25, [sp, #276]
  409d0c:	add	x8, sp, #0x108
  409d10:	ldr	w0, [x20, #4]
  409d14:	bl	411d34 <ferror@plt+0xf464>
  409d18:	ldr	w0, [sp, #276]
  409d1c:	sub	w26, w0, #0x1
  409d20:	cmp	w25, w0
  409d24:	cset	w24, ne  // ne = any
  409d28:	cmp	w25, w26
  409d2c:	cset	w0, gt
  409d30:	ands	w24, w24, w0
  409d34:	b.ne	409b14 <ferror@plt+0x7244>  // b.any
  409d38:	add	x8, sp, #0x108
  409d3c:	ldr	w0, [x20]
  409d40:	bl	411d34 <ferror@plt+0xf464>
  409d44:	ldr	w21, [sp, #276]
  409d48:	ldr	x0, [x20, #16]
  409d4c:	sub	w27, w21, #0x1
  409d50:	add	w27, w27, w0
  409d54:	ldr	w0, [x20, #4]
  409d58:	ldr	w1, [x20]
  409d5c:	cmp	w1, w0
  409d60:	b.ne	409b2c <ferror@plt+0x725c>  // b.any
  409d64:	cmp	w21, w27
  409d68:	b.le	409b78 <ferror@plt+0x72a8>
  409d6c:	sub	w22, w21, #0x1
  409d70:	cmp	w27, w22
  409d74:	b.eq	409b7c <ferror@plt+0x72ac>  // b.none
  409d78:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  409d7c:	add	x2, x2, #0xe70
  409d80:	mov	w1, #0x6bc                 	// #1724
  409d84:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  409d88:	add	x0, x0, #0xd28
  409d8c:	bl	4062a0 <ferror@plt+0x39d0>
  409d90:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  409d94:	add	x2, x2, #0xe80
  409d98:	mov	w1, #0x77a                 	// #1914
  409d9c:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  409da0:	add	x0, x0, #0xd28
  409da4:	bl	4062a0 <ferror@plt+0x39d0>
  409da8:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  409dac:	add	x2, x2, #0xe80
  409db0:	mov	w1, #0x77c                 	// #1916
  409db4:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  409db8:	add	x0, x0, #0xd28
  409dbc:	bl	4062a0 <ferror@plt+0x39d0>
  409dc0:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  409dc4:	add	x2, x2, #0xe70
  409dc8:	mov	w1, #0x6bc                 	// #1724
  409dcc:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  409dd0:	add	x0, x0, #0xd28
  409dd4:	bl	4062a0 <ferror@plt+0x39d0>
  409dd8:	ldr	x22, [x24, #24]
  409ddc:	tbnz	w22, #31, 409ed8 <ferror@plt+0x7608>
  409de0:	ldr	w0, [sp, #164]
  409de4:	subs	w27, w21, w0
  409de8:	b.mi	409ef0 <ferror@plt+0x7620>  // b.first
  409dec:	add	w28, w27, w22
  409df0:	ldr	x0, [x20, #16]
  409df4:	adds	w0, w28, w0
  409df8:	str	w0, [sp, #164]
  409dfc:	b.mi	409f08 <ferror@plt+0x7638>  // b.first
  409e00:	ldrsw	x25, [sp, #164]
  409e04:	add	x21, x25, #0x1
  409e08:	ldr	x0, [x24, #32]
  409e0c:	cmp	x0, x21
  409e10:	b.cc	409f20 <ferror@plt+0x7650>  // b.lo, b.ul, b.last
  409e14:	ldr	w0, [sp, #140]
  409e18:	tbnz	w0, #31, 409f3c <ferror@plt+0x766c>
  409e1c:	ldr	w0, [sp, #140]
  409e20:	ldr	w1, [sp, #144]
  409e24:	cmp	w0, w1
  409e28:	b.ge	409f54 <ferror@plt+0x7684>  // b.tcont
  409e2c:	ldr	w0, [sp, #140]
  409e30:	add	w0, w0, w27
  409e34:	ldr	w1, [sp, #144]
  409e38:	cmp	w1, w0
  409e3c:	b.lt	409f6c <ferror@plt+0x769c>  // b.tstop
  409e40:	ldr	w0, [sp, #140]
  409e44:	ldr	x1, [sp, #168]
  409e48:	add	x1, x1, w0, sxtw
  409e4c:	sxtw	x21, w27
  409e50:	sxtw	x0, w22
  409e54:	add	x22, x21, w22, sxtw
  409e58:	ldr	x2, [x24, #32]
  409e5c:	cmp	x22, x2
  409e60:	b.cs	409f84 <ferror@plt+0x76b4>  // b.hs, b.nlast
  409e64:	ldr	x3, [x24, #16]
  409e68:	mov	x2, x21
  409e6c:	add	x0, x3, x0
  409e70:	bl	402260 <memcpy@plt>
  409e74:	ldr	x1, [x20, #8]
  409e78:	ldr	x2, [x20, #16]
  409e7c:	tbnz	w28, #31, 409f9c <ferror@plt+0x76cc>
  409e80:	sxtw	x28, w28
  409e84:	add	x3, x2, x28
  409e88:	ldr	x0, [x24, #32]
  409e8c:	cmp	x3, x0
  409e90:	b.cs	409fb4 <ferror@plt+0x76e4>  // b.hs, b.nlast
  409e94:	ldr	x0, [x24, #16]
  409e98:	add	x0, x0, x28
  409e9c:	bl	402260 <memcpy@plt>
  409ea0:	str	x25, [x24, #24]
  409ea4:	ldr	x0, [x24, #32]
  409ea8:	cmp	x25, x0
  409eac:	b.cs	409fcc <ferror@plt+0x76fc>  // b.hs, b.nlast
  409eb0:	ldr	x0, [x24, #16]
  409eb4:	ldr	w1, [sp, #164]
  409eb8:	strb	wzr, [x0, w1, sxtw]
  409ebc:	str	w26, [x24, #4]
  409ec0:	ldr	x27, [x20, #16]
  409ec4:	add	x21, x21, x27
  409ec8:	ldr	w0, [x24, #12]
  409ecc:	add	w21, w0, w21
  409ed0:	str	w21, [x24, #12]
  409ed4:	b	409cb4 <ferror@plt+0x73e4>
  409ed8:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  409edc:	add	x2, x2, #0xe80
  409ee0:	mov	w1, #0x792                 	// #1938
  409ee4:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  409ee8:	add	x0, x0, #0xd28
  409eec:	bl	4062a0 <ferror@plt+0x39d0>
  409ef0:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  409ef4:	add	x2, x2, #0xe80
  409ef8:	mov	w1, #0x794                 	// #1940
  409efc:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  409f00:	add	x0, x0, #0xd28
  409f04:	bl	4062a0 <ferror@plt+0x39d0>
  409f08:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  409f0c:	add	x2, x2, #0xe80
  409f10:	mov	w1, #0x796                 	// #1942
  409f14:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  409f18:	add	x0, x0, #0xd28
  409f1c:	bl	4062a0 <ferror@plt+0x39d0>
  409f20:	lsl	x21, x21, #1
  409f24:	mov	x1, x21
  409f28:	ldr	x0, [x24, #16]
  409f2c:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  409f30:	str	x0, [x24, #16]
  409f34:	str	x21, [x24, #32]
  409f38:	b	409e14 <ferror@plt+0x7544>
  409f3c:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  409f40:	add	x2, x2, #0xe90
  409f44:	mov	w1, #0x44                  	// #68
  409f48:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  409f4c:	add	x0, x0, #0xe98
  409f50:	bl	4062a0 <ferror@plt+0x39d0>
  409f54:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  409f58:	add	x2, x2, #0xe90
  409f5c:	mov	w1, #0x45                  	// #69
  409f60:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  409f64:	add	x0, x0, #0xe98
  409f68:	bl	4062a0 <ferror@plt+0x39d0>
  409f6c:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  409f70:	add	x2, x2, #0xe90
  409f74:	mov	w1, #0x47                  	// #71
  409f78:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  409f7c:	add	x0, x0, #0xe98
  409f80:	bl	4062a0 <ferror@plt+0x39d0>
  409f84:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  409f88:	add	x2, x2, #0xeb0
  409f8c:	mov	w1, #0x706                 	// #1798
  409f90:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  409f94:	add	x0, x0, #0xd28
  409f98:	bl	4062a0 <ferror@plt+0x39d0>
  409f9c:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  409fa0:	add	x2, x2, #0xeb0
  409fa4:	mov	w1, #0x705                 	// #1797
  409fa8:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  409fac:	add	x0, x0, #0xd28
  409fb0:	bl	4062a0 <ferror@plt+0x39d0>
  409fb4:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  409fb8:	add	x2, x2, #0xeb0
  409fbc:	mov	w1, #0x706                 	// #1798
  409fc0:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  409fc4:	add	x0, x0, #0xd28
  409fc8:	bl	4062a0 <ferror@plt+0x39d0>
  409fcc:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  409fd0:	add	x2, x2, #0xec0
  409fd4:	mov	w1, #0x732                 	// #1842
  409fd8:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  409fdc:	add	x0, x0, #0xd28
  409fe0:	bl	4062a0 <ferror@plt+0x39d0>
  409fe4:	ldr	x26, [sp, #112]
  409fe8:	ldr	w0, [sp, #444]
  409fec:	str	w0, [sp, #264]
  409ff0:	cbz	x19, 40a398 <ferror@plt+0x7ac8>
  409ff4:	ldr	w0, [x19, #4]
  409ff8:	cbz	w0, 40a348 <ferror@plt+0x7a78>
  409ffc:	mov	w1, #0x20                  	// #32
  40a000:	add	x0, sp, #0x128
  40a004:	bl	407894 <ferror@plt+0x4fc4>
  40a008:	mov	w21, #0x0                   	// #0
  40a00c:	mov	w25, #0x1                   	// #1
  40a010:	mov	w27, #0xfffffffe            	// #-2
  40a014:	b	40a148 <ferror@plt+0x7878>
  40a018:	mov	w3, w25
  40a01c:	ldr	w2, [x20, #8]
  40a020:	add	x1, sp, #0x108
  40a024:	add	x0, sp, #0x128
  40a028:	bl	408fec <ferror@plt+0x671c>
  40a02c:	mov	w1, w27
  40a030:	mov	x0, x26
  40a034:	bl	408e64 <ferror@plt+0x6594>
  40a038:	ldr	x1, [x20, #16]
  40a03c:	ldr	x0, [sp, #304]
  40a040:	bl	40cf0c <ferror@plt+0xa63c>
  40a044:	mov	w1, #0xffffffff            	// #-1
  40a048:	mov	x0, x26
  40a04c:	bl	408e64 <ferror@plt+0x6594>
  40a050:	ldr	x1, [x20, #24]
  40a054:	ldr	w0, [sp, #264]
  40a058:	add	w0, w0, w1
  40a05c:	str	w0, [sp, #264]
  40a060:	b	40a144 <ferror@plt+0x7874>
  40a064:	ldr	w2, [x1, #4]
  40a068:	cmp	w23, w2
  40a06c:	b.ne	40a1a0 <ferror@plt+0x78d0>  // b.any
  40a070:	ldr	w2, [x1, #8]
  40a074:	ldr	w4, [sp, #100]
  40a078:	cmp	w4, w2
  40a07c:	b.ne	40a1a0 <ferror@plt+0x78d0>  // b.any
  40a080:	ldr	w2, [x1, #12]
  40a084:	cmp	w22, w2
  40a088:	b.ne	40a1a0 <ferror@plt+0x78d0>  // b.any
  40a08c:	ldr	x0, [x20, #24]
  40a090:	cbz	x0, 40a0e0 <ferror@plt+0x7810>
  40a094:	mov	w3, w25
  40a098:	mov	w2, w23
  40a09c:	add	x1, sp, #0x108
  40a0a0:	add	x0, sp, #0x128
  40a0a4:	bl	408fec <ferror@plt+0x671c>
  40a0a8:	mov	w1, w27
  40a0ac:	mov	x0, x26
  40a0b0:	bl	408e64 <ferror@plt+0x6594>
  40a0b4:	ldr	x1, [x20, #16]
  40a0b8:	ldr	x0, [sp, #304]
  40a0bc:	bl	40cf0c <ferror@plt+0xa63c>
  40a0c0:	mov	w1, #0xffffffff            	// #-1
  40a0c4:	mov	x0, x26
  40a0c8:	bl	408e64 <ferror@plt+0x6594>
  40a0cc:	ldr	x1, [x20, #24]
  40a0d0:	ldr	w0, [sp, #264]
  40a0d4:	add	w0, w0, w1
  40a0d8:	str	w0, [sp, #264]
  40a0dc:	b	40a144 <ferror@plt+0x7874>
  40a0e0:	mov	w3, w25
  40a0e4:	mov	w2, w23
  40a0e8:	add	x1, sp, #0x108
  40a0ec:	add	x0, sp, #0x128
  40a0f0:	bl	408fec <ferror@plt+0x671c>
  40a0f4:	mov	w1, #0xfffffffd            	// #-3
  40a0f8:	mov	x0, x26
  40a0fc:	bl	408e64 <ferror@plt+0x6594>
  40a100:	ldr	w0, [sp, #264]
  40a104:	cmp	w22, w0
  40a108:	b.lt	40a130 <ferror@plt+0x7860>  // b.tstop
  40a10c:	mov	w24, #0x2d                  	// #45
  40a110:	mov	w1, w24
  40a114:	ldr	x0, [sp, #304]
  40a118:	bl	40c914 <ferror@plt+0xa044>
  40a11c:	ldr	w0, [sp, #264]
  40a120:	add	w0, w0, #0x1
  40a124:	str	w0, [sp, #264]
  40a128:	cmp	w22, w0
  40a12c:	b.ge	40a110 <ferror@plt+0x7840>  // b.tcont
  40a130:	mov	w1, #0xffffffff            	// #-1
  40a134:	mov	x0, x26
  40a138:	bl	408e64 <ferror@plt+0x6594>
  40a13c:	ldr	x0, [x20, #24]
  40a140:	cbnz	x0, 40a094 <ferror@plt+0x77c4>
  40a144:	add	w21, w21, #0x1
  40a148:	ldr	w0, [x19, #4]
  40a14c:	cmp	w0, w21
  40a150:	b.ls	40a348 <ferror@plt+0x7a78>  // b.plast
  40a154:	add	x0, x19, w21, uxtw #3
  40a158:	ldr	x20, [x0, #8]
  40a15c:	ldr	w23, [x20]
  40a160:	ldr	w22, [x20, #4]
  40a164:	add	w0, w22, #0x1
  40a168:	cmp	w23, w0
  40a16c:	b.eq	40a018 <ferror@plt+0x7748>  // b.none
  40a170:	ldr	x0, [sp, #416]
  40a174:	cbz	x0, 40a0e0 <ferror@plt+0x7810>
  40a178:	add	x1, x0, #0x8
  40a17c:	ldr	w0, [x0, #4]
  40a180:	add	x0, x0, x0, lsl #2
  40a184:	add	x0, x1, x0, lsl #3
  40a188:	cmp	x0, x1
  40a18c:	b.eq	40a0e0 <ferror@plt+0x7810>  // b.none
  40a190:	ldr	w2, [x1]
  40a194:	ldr	w4, [sp, #100]
  40a198:	cmp	w4, w2
  40a19c:	b.eq	40a064 <ferror@plt+0x7794>  // b.none
  40a1a0:	add	x1, x1, #0x28
  40a1a4:	b	40a188 <ferror@plt+0x78b8>
  40a1a8:	str	wzr, [x19, #4]
  40a1ac:	b	40a2f8 <ferror@plt+0x7a28>
  40a1b0:	ldr	x1, [sp, #184]
  40a1b4:	ldr	x0, [sp, #152]
  40a1b8:	ldr	x0, [x0]
  40a1bc:	bl	40c554 <ferror@plt+0x9c84>
  40a1c0:	ldr	x0, [sp, #432]
  40a1c4:	cbz	x0, 40a1d4 <ferror@plt+0x7904>
  40a1c8:	ldrsb	w1, [x0, #3]
  40a1cc:	tbnz	w1, #31, 40a214 <ferror@plt+0x7944>
  40a1d0:	bl	402690 <free@plt>
  40a1d4:	ldr	x0, [sp, #424]
  40a1d8:	cbz	x0, 40a1e8 <ferror@plt+0x7918>
  40a1dc:	ldrsb	w1, [x0, #3]
  40a1e0:	tbnz	w1, #31, 40a21c <ferror@plt+0x794c>
  40a1e4:	bl	402690 <free@plt>
  40a1e8:	ldr	x0, [sp, #416]
  40a1ec:	cbz	x0, 40a1fc <ferror@plt+0x792c>
  40a1f0:	ldrsb	w1, [x0, #3]
  40a1f4:	tbnz	w1, #31, 40a224 <ferror@plt+0x7954>
  40a1f8:	bl	402690 <free@plt>
  40a1fc:	add	x0, sp, #0x160
  40a200:	bl	407930 <ferror@plt+0x5060>
  40a204:	ldp	x23, x24, [sp, #48]
  40a208:	ldp	x25, x26, [sp, #64]
  40a20c:	ldp	x27, x28, [sp, #80]
  40a210:	b	4091b0 <ferror@plt+0x68e0>
  40a214:	str	wzr, [x0, #4]
  40a218:	b	40a1d4 <ferror@plt+0x7904>
  40a21c:	str	wzr, [x0, #4]
  40a220:	b	40a1e8 <ferror@plt+0x7918>
  40a224:	str	wzr, [x0, #4]
  40a228:	b	40a1fc <ferror@plt+0x792c>
  40a22c:	mov	x19, x0
  40a230:	b	409ca0 <ferror@plt+0x73d0>
  40a234:	ldr	x28, [x20, #8]
  40a238:	ldr	x27, [x20, #16]
  40a23c:	mov	x0, #0x28                  	// #40
  40a240:	bl	447868 <_obstack_memory_used@@Base+0x8fc>
  40a244:	mov	x20, x0
  40a248:	str	w25, [x0]
  40a24c:	str	w26, [x0, #4]
  40a250:	str	w21, [x0, #8]
  40a254:	str	w22, [x0, #12]
  40a258:	mov	x0, x28
  40a25c:	bl	447178 <_obstack_memory_used@@Base+0x20c>
  40a260:	str	x0, [x20, #16]
  40a264:	str	x27, [x20, #24]
  40a268:	add	x27, x27, #0x1
  40a26c:	str	x27, [x20, #32]
  40a270:	mov	w21, #0x0                   	// #0
  40a274:	mov	w1, #0x1                   	// #1
  40a278:	cmp	w1, #0x4
  40a27c:	mov	w0, #0x4                   	// #4
  40a280:	csel	w22, w1, w0, cs  // cs = hs, nlast
  40a284:	csel	w1, w1, w0, cs  // cs = hs, nlast
  40a288:	add	x1, x1, #0x1
  40a28c:	lsl	x1, x1, #3
  40a290:	mov	x0, #0x0                   	// #0
  40a294:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  40a298:	ldr	w1, [x0]
  40a29c:	bfxil	w1, w22, #0, #31
  40a2a0:	str	w1, [x0]
  40a2a4:	ubfx	x1, x1, #24, #7
  40a2a8:	strb	w1, [x0, #3]
  40a2ac:	str	wzr, [x0, #4]
  40a2b0:	cbz	w24, 40a22c <ferror@plt+0x795c>
  40a2b4:	cbz	w21, 40a2dc <ferror@plt+0x7a0c>
  40a2b8:	sub	w2, w21, #0x1
  40a2bc:	add	x2, x2, #0x2
  40a2c0:	lsl	x2, x2, #3
  40a2c4:	mov	x1, #0x8                   	// #8
  40a2c8:	ldr	x3, [x19, x1]
  40a2cc:	str	x3, [x0, x1]
  40a2d0:	add	x1, x1, #0x8
  40a2d4:	cmp	x2, x1
  40a2d8:	b.ne	40a2c8 <ferror@plt+0x79f8>  // b.any
  40a2dc:	str	w21, [x0, #4]
  40a2e0:	mov	x19, x0
  40a2e4:	b	409ca0 <ferror@plt+0x73d0>
  40a2e8:	ldrsb	w0, [x19, #3]
  40a2ec:	tbnz	w0, #31, 40a1a8 <ferror@plt+0x78d8>
  40a2f0:	mov	x0, x19
  40a2f4:	bl	402690 <free@plt>
  40a2f8:	ldr	x0, [sp, #104]
  40a2fc:	add	x0, x0, #0x1
  40a300:	str	x0, [sp, #104]
  40a304:	ldr	x1, [sp, #120]
  40a308:	cmp	x1, x0
  40a30c:	b.lt	409278 <ferror@plt+0x69a8>  // b.tstop
  40a310:	ldr	x0, [sp, #104]
  40a314:	mov	w1, w0
  40a318:	str	w0, [sp, #100]
  40a31c:	str	w0, [sp, #96]
  40a320:	ldr	x0, [sp, #320]
  40a324:	bl	411ee4 <ferror@plt+0xf614>
  40a328:	mov	x20, x0
  40a32c:	mov	x22, x1
  40a330:	mov	w21, #0x0                   	// #0
  40a334:	cbz	x0, 40a2f8 <ferror@plt+0x7a28>
  40a338:	mov	w24, #0xffffffff            	// #-1
  40a33c:	mov	w27, #0x2b                  	// #43
  40a340:	mov	w25, #0x2b                  	// #43
  40a344:	b	4094b0 <ferror@plt+0x6be0>
  40a348:	mov	w3, #0x0                   	// #0
  40a34c:	mov	w2, #0x0                   	// #0
  40a350:	add	x1, sp, #0x108
  40a354:	add	x0, sp, #0x128
  40a358:	bl	408fec <ferror@plt+0x671c>
  40a35c:	mov	w20, #0x0                   	// #0
  40a360:	mov	x22, #0x28                  	// #40
  40a364:	ldr	w0, [x19, #4]
  40a368:	cmp	w20, w0
  40a36c:	b.cs	40a2e8 <ferror@plt+0x7a18>  // b.hs, b.nlast
  40a370:	add	x0, x19, w20, uxtw #3
  40a374:	ldr	x21, [x0, #8]
  40a378:	cbz	x21, 40a390 <ferror@plt+0x7ac0>
  40a37c:	ldr	x0, [x21, #16]
  40a380:	bl	402690 <free@plt>
  40a384:	mov	x1, x22
  40a388:	mov	x0, x21
  40a38c:	bl	447628 <_obstack_memory_used@@Base+0x6bc>
  40a390:	add	w20, w20, #0x1
  40a394:	b	40a364 <ferror@plt+0x7a94>
  40a398:	mov	w3, #0x0                   	// #0
  40a39c:	mov	w2, #0x0                   	// #0
  40a3a0:	add	x1, sp, #0x108
  40a3a4:	add	x0, sp, #0x128
  40a3a8:	bl	408fec <ferror@plt+0x671c>
  40a3ac:	b	40a2f8 <ferror@plt+0x7a28>
  40a3b0:	tbz	w24, #31, 409990 <ferror@plt+0x70c0>
  40a3b4:	add	x20, x19, #0x10
  40a3b8:	mov	w21, #0x0                   	// #0
  40a3bc:	ldrb	w0, [x20, #8]
  40a3c0:	cbnz	w0, 409b00 <ferror@plt+0x7230>
  40a3c4:	add	w21, w21, #0x1
  40a3c8:	add	x20, x20, #0x28
  40a3cc:	ldr	w0, [x19, #4]
  40a3d0:	cmp	w0, w21
  40a3d4:	b.hi	40a3bc <ferror@plt+0x7aec>  // b.pmore
  40a3d8:	b	409978 <ferror@plt+0x70a8>
  40a3dc:	str	w28, [sp, #128]
  40a3e0:	mov	w20, #0x0                   	// #0
  40a3e4:	mov	w0, w24
  40a3e8:	cmp	w0, #0x4
  40a3ec:	csel	w1, w0, w23, cs  // cs = hs, nlast
  40a3f0:	str	w1, [sp, #140]
  40a3f4:	csel	w0, w0, w23, cs  // cs = hs, nlast
  40a3f8:	add	x0, x0, x0, lsl #2
  40a3fc:	lsl	x1, x0, #3
  40a400:	add	x1, x1, #0x8
  40a404:	mov	x0, #0x0                   	// #0
  40a408:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  40a40c:	ldr	w1, [x0]
  40a410:	ldr	w2, [sp, #140]
  40a414:	bfxil	w1, w2, #0, #31
  40a418:	str	w1, [x0]
  40a41c:	ubfx	x1, x1, #24, #7
  40a420:	strb	w1, [x0, #3]
  40a424:	str	wzr, [x0, #4]
  40a428:	ldr	w1, [sp, #128]
  40a42c:	cbz	w1, 40a480 <ferror@plt+0x7bb0>
  40a430:	cbz	w20, 40a474 <ferror@plt+0x7ba4>
  40a434:	sub	w1, w20, #0x1
  40a438:	add	x1, x1, x1, lsl #2
  40a43c:	lsl	x6, x1, #3
  40a440:	add	x6, x6, #0x30
  40a444:	mov	x1, #0x8                   	// #8
  40a448:	add	x2, x0, x1
  40a44c:	add	x3, x19, x1
  40a450:	ldp	x4, x5, [x3]
  40a454:	stp	x4, x5, [x2]
  40a458:	ldp	x4, x5, [x3, #16]
  40a45c:	stp	x4, x5, [x2, #16]
  40a460:	ldr	x3, [x3, #32]
  40a464:	str	x3, [x2, #32]
  40a468:	add	x1, x1, #0x28
  40a46c:	cmp	x1, x6
  40a470:	b.ne	40a448 <ferror@plt+0x7b78>  // b.any
  40a474:	str	w20, [x0, #4]
  40a478:	mov	x19, x0
  40a47c:	b	40a5c4 <ferror@plt+0x7cf4>
  40a480:	mov	x19, x0
  40a484:	b	40a5c4 <ferror@plt+0x7cf4>
  40a488:	tbnz	w22, #31, 40965c <ferror@plt+0x6d8c>
  40a48c:	mov	w21, w22
  40a490:	b	409588 <ferror@plt+0x6cb8>
  40a494:	ldr	x20, [sp, #416]
  40a498:	mov	x19, #0x0                   	// #0
  40a49c:	mov	w22, #0x0                   	// #0
  40a4a0:	mov	w23, #0x4                   	// #4
  40a4a4:	ldr	w28, [sp, #160]
  40a4a8:	mov	w24, #0x1                   	// #1
  40a4ac:	mov	w27, w22
  40a4b0:	ldr	w0, [x20, #4]
  40a4b4:	cmp	w0, w22
  40a4b8:	b.ls	40a60c <ferror@plt+0x7d3c>  // b.plast
  40a4bc:	ubfiz	x0, x22, #2, #32
  40a4c0:	add	x0, x0, w22, uxtw
  40a4c4:	add	x0, x20, x0, lsl #3
  40a4c8:	ldr	x0, [x0, #40]
  40a4cc:	cbz	x0, 40a600 <ferror@plt+0x7d30>
  40a4d0:	ubfiz	x1, x27, #2, #32
  40a4d4:	add	x1, x1, w22, uxtw
  40a4d8:	add	x1, x20, x1, lsl #3
  40a4dc:	ldr	w1, [x1, #28]
  40a4e0:	ldr	w2, [sp, #100]
  40a4e4:	cmp	w1, w2
  40a4e8:	b.ne	40a600 <ferror@plt+0x7d30>  // b.any
  40a4ec:	ubfiz	x1, x27, #2, #32
  40a4f0:	add	x1, x1, w22, uxtw
  40a4f4:	add	x1, x20, x1, lsl #3
  40a4f8:	ldr	w2, [x1, #32]
  40a4fc:	ldr	w1, [sp, #444]
  40a500:	cmp	w2, w1
  40a504:	b.le	40a600 <ferror@plt+0x7d30>
  40a508:	ubfiz	x1, x27, #2, #32
  40a50c:	add	x1, x1, w22, uxtw
  40a510:	add	x1, x20, x1, lsl #3
  40a514:	ldr	x2, [x0]
  40a518:	ldr	x2, [x2, #16]
  40a51c:	ldr	w1, [x1, #36]
  40a520:	blr	x2
  40a524:	mov	x21, x0
  40a528:	and	w25, w1, #0xff
  40a52c:	cbz	x0, 40a600 <ferror@plt+0x7d30>
  40a530:	ubfiz	x0, x27, #2, #32
  40a534:	add	x27, x0, w22, uxtw
  40a538:	add	x20, x20, x27, lsl #3
  40a53c:	ldr	w27, [x20, #32]
  40a540:	mov	x0, x21
  40a544:	bl	4022b0 <strlen@plt>
  40a548:	str	x0, [sp, #112]
  40a54c:	cbz	x19, 40a3dc <ferror@plt+0x7b0c>
  40a550:	ldr	w20, [x19, #4]
  40a554:	ldr	w0, [x19]
  40a558:	ubfx	x0, x0, #0, #31
  40a55c:	cmp	w0, w20
  40a560:	b.ne	40a5c4 <ferror@plt+0x7cf4>  // b.any
  40a564:	ldrsb	w0, [x19, #3]
  40a568:	tbnz	w0, #31, 4098ec <ferror@plt+0x701c>
  40a56c:	ldr	w1, [x19, #4]
  40a570:	ldr	w0, [x19]
  40a574:	add	w1, w1, #0x1
  40a578:	and	w0, w0, #0x7fffffff
  40a57c:	bl	40f5bc <ferror@plt+0xccec>
  40a580:	mov	w20, w0
  40a584:	ldr	w0, [x19, #4]
  40a588:	str	w0, [sp, #128]
  40a58c:	ubfiz	x1, x20, #2, #32
  40a590:	add	x1, x1, w20, uxtw
  40a594:	lsl	x1, x1, #3
  40a598:	add	x1, x1, #0x8
  40a59c:	mov	x0, x19
  40a5a0:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  40a5a4:	mov	x19, x0
  40a5a8:	ldr	w0, [x0]
  40a5ac:	bfxil	w0, w20, #0, #31
  40a5b0:	str	w0, [x19]
  40a5b4:	ubfx	x0, x0, #24, #7
  40a5b8:	strb	w0, [x19, #3]
  40a5bc:	ldr	w0, [sp, #128]
  40a5c0:	str	w0, [x19, #4]
  40a5c4:	ldr	w0, [x19, #4]
  40a5c8:	add	w1, w0, #0x1
  40a5cc:	str	w1, [x19, #4]
  40a5d0:	ubfiz	x1, x0, #2, #32
  40a5d4:	add	x0, x1, w0, uxtw
  40a5d8:	lsl	x0, x0, #3
  40a5dc:	add	x0, x0, #0x8
  40a5e0:	add	x1, x19, x0
  40a5e4:	str	w22, [x19, x0]
  40a5e8:	str	w27, [x1, #4]
  40a5ec:	str	x21, [x1, #8]
  40a5f0:	strb	w25, [x1, #16]
  40a5f4:	ldr	x0, [sp, #112]
  40a5f8:	str	x0, [x1, #24]
  40a5fc:	str	wzr, [x1, #32]
  40a600:	add	w22, w22, #0x1
  40a604:	ldr	x20, [sp, #416]
  40a608:	cbnz	x20, 40a4ac <ferror@plt+0x7bdc>
  40a60c:	cbz	x19, 40a634 <ferror@plt+0x7d64>
  40a610:	ldr	w1, [x19, #4]
  40a614:	cbnz	w1, 4098f8 <ferror@plt+0x7028>
  40a618:	ldrsb	w0, [x19, #3]
  40a61c:	tbnz	w0, #31, 40a634 <ferror@plt+0x7d64>
  40a620:	mov	x0, x19
  40a624:	bl	402690 <free@plt>
  40a628:	b	40a634 <ferror@plt+0x7d64>
  40a62c:	ldrb	w0, [sp, #409]
  40a630:	cbnz	w0, 40a494 <ferror@plt+0x7bc4>
  40a634:	ldr	x0, [sp, #320]
  40a638:	str	x0, [sp, #128]
  40a63c:	mov	x19, #0x0                   	// #0
  40a640:	mov	w23, #0x0                   	// #0
  40a644:	str	x26, [sp, #112]
  40a648:	b	409cb8 <ferror@plt+0x73e8>
  40a64c:	sub	w0, w0, w1
  40a650:	ret
  40a654:	stp	x29, x30, [sp, #-48]!
  40a658:	mov	x29, sp
  40a65c:	stp	x19, x20, [sp, #16]
  40a660:	stp	x21, x22, [sp, #32]
  40a664:	mov	x21, x0
  40a668:	mov	x20, x2
  40a66c:	mov	w22, w3
  40a670:	and	w1, w1, #0xff
  40a674:	bl	40c914 <ferror@plt+0xa044>
  40a678:	cmp	w22, #0x0
  40a67c:	b.le	40a6a4 <ferror@plt+0x7dd4>
  40a680:	mov	x19, x20
  40a684:	add	x20, x20, #0x1
  40a688:	sub	w22, w22, #0x1
  40a68c:	add	x20, x20, x22
  40a690:	ldrb	w1, [x19], #1
  40a694:	mov	x0, x21
  40a698:	bl	40c914 <ferror@plt+0xa044>
  40a69c:	cmp	x19, x20
  40a6a0:	b.ne	40a690 <ferror@plt+0x7dc0>  // b.any
  40a6a4:	mov	w1, #0xa                   	// #10
  40a6a8:	mov	x0, x21
  40a6ac:	bl	40c914 <ferror@plt+0xa044>
  40a6b0:	ldp	x19, x20, [sp, #16]
  40a6b4:	ldp	x21, x22, [sp, #32]
  40a6b8:	ldp	x29, x30, [sp], #48
  40a6bc:	ret
  40a6c0:	mov	x1, x0
  40a6c4:	mov	w2, #0x1                   	// #1
  40a6c8:	strb	w2, [x1], #8
  40a6cc:	str	xzr, [x0, #8]
  40a6d0:	adrp	x0, 402000 <memcpy@plt-0x260>
  40a6d4:	add	x0, x0, #0x620
  40a6d8:	str	x0, [x1, #8]
  40a6dc:	str	xzr, [x1, #16]
  40a6e0:	adrp	x0, 40a000 <ferror@plt+0x7730>
  40a6e4:	add	x0, x0, #0xf88
  40a6e8:	str	x0, [x1, #24]
  40a6ec:	ret
  40a6f0:	ldrb	w3, [x0]
  40a6f4:	cbnz	w3, 40a6fc <ferror@plt+0x7e2c>
  40a6f8:	ret
  40a6fc:	stp	x29, x30, [sp, #-48]!
  40a700:	mov	x29, sp
  40a704:	stp	x19, x20, [sp, #16]
  40a708:	and	w2, w2, #0xff
  40a70c:	str	x1, [sp, #32]
  40a710:	strb	w2, [sp, #40]
  40a714:	ldr	x20, [x0, #8]
  40a718:	mov	x19, #0x0                   	// #0
  40a71c:	b	40a748 <ferror@plt+0x7e78>
  40a720:	cbz	x19, 40a758 <ferror@plt+0x7e88>
  40a724:	ldr	x20, [x19, #32]
  40a728:	add	x2, sp, #0x20
  40a72c:	ldr	x1, [x19, #8]
  40a730:	ldr	x0, [x19]
  40a734:	bl	40c13c <ferror@plt+0x986c>
  40a738:	cbnz	w0, 40a758 <ferror@plt+0x7e88>
  40a73c:	ldr	x0, [x19, #24]
  40a740:	mov	x19, x20
  40a744:	mov	x20, x0
  40a748:	cbz	x20, 40a720 <ferror@plt+0x7e50>
  40a74c:	str	x19, [x20, #32]
  40a750:	ldr	x0, [x20, #16]
  40a754:	b	40a740 <ferror@plt+0x7e70>
  40a758:	ldp	x19, x20, [sp, #16]
  40a75c:	ldp	x29, x30, [sp], #48
  40a760:	ret
  40a764:	mov	x2, x0
  40a768:	str	x1, [x2], #8
  40a76c:	str	xzr, [x0, #8]
  40a770:	adrp	x1, 40a000 <ferror@plt+0x7730>
  40a774:	add	x1, x1, #0x64c
  40a778:	str	x1, [x2, #8]
  40a77c:	str	xzr, [x2, #16]
  40a780:	adrp	x1, 40a000 <ferror@plt+0x7730>
  40a784:	add	x1, x1, #0x8c8
  40a788:	str	x1, [x2, #24]
  40a78c:	mov	w1, #0xffffffff            	// #-1
  40a790:	str	w1, [x0, #40]
  40a794:	ret
  40a798:	stp	x29, x30, [sp, #-32]!
  40a79c:	mov	x29, sp
  40a7a0:	stp	x19, x20, [sp, #16]
  40a7a4:	cbz	x1, 40a7d8 <ferror@plt+0x7f08>
  40a7a8:	mov	x19, x0
  40a7ac:	mov	x20, x1
  40a7b0:	ldr	w0, [x0, #40]
  40a7b4:	cmn	w0, #0x1
  40a7b8:	b.eq	40a7f0 <ferror@plt+0x7f20>  // b.none
  40a7bc:	ldr	x0, [x19]
  40a7c0:	bl	411ea0 <ferror@plt+0xf5d0>
  40a7c4:	strb	w0, [x20]
  40a7c8:	ldr	w0, [x19, #40]
  40a7cc:	ldp	x19, x20, [sp, #16]
  40a7d0:	ldp	x29, x30, [sp], #32
  40a7d4:	ret
  40a7d8:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  40a7dc:	add	x2, x2, #0xed8
  40a7e0:	mov	w1, #0x296                 	// #662
  40a7e4:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40a7e8:	add	x0, x0, #0xee8
  40a7ec:	bl	4062a0 <ferror@plt+0x39d0>
  40a7f0:	str	wzr, [x19, #40]
  40a7f4:	ldr	w1, [x19, #40]
  40a7f8:	add	w1, w1, #0x1
  40a7fc:	ldr	x0, [x19]
  40a800:	bl	411ee4 <ferror@plt+0xf614>
  40a804:	cbz	x0, 40a7bc <ferror@plt+0x7eec>
  40a808:	ldr	w0, [x19, #40]
  40a80c:	add	w0, w0, #0x1
  40a810:	str	w0, [x19, #40]
  40a814:	b	40a7f4 <ferror@plt+0x7f24>
  40a818:	stp	x29, x30, [sp, #-48]!
  40a81c:	mov	x29, sp
  40a820:	stp	x19, x20, [sp, #16]
  40a824:	mov	x19, x0
  40a828:	ldr	x0, [x0, #8]
  40a82c:	bl	402690 <free@plt>
  40a830:	ldr	x0, [x19, #32]
  40a834:	cbz	x0, 40a8a8 <ferror@plt+0x7fd8>
  40a838:	stp	x21, x22, [sp, #32]
  40a83c:	mov	w20, #0x0                   	// #0
  40a840:	mov	x22, #0x10                  	// #16
  40a844:	ldr	w1, [x0, #4]
  40a848:	cmp	w1, w20
  40a84c:	b.ls	40a898 <ferror@plt+0x7fc8>  // b.plast
  40a850:	add	x1, x0, w20, uxtw #3
  40a854:	ldr	x21, [x1, #8]
  40a858:	cbz	x21, 40a870 <ferror@plt+0x7fa0>
  40a85c:	ldr	x0, [x21]
  40a860:	bl	402690 <free@plt>
  40a864:	mov	x1, x22
  40a868:	mov	x0, x21
  40a86c:	bl	447628 <_obstack_memory_used@@Base+0x6bc>
  40a870:	add	w20, w20, #0x1
  40a874:	ldr	x0, [x19, #32]
  40a878:	cbnz	x0, 40a844 <ferror@plt+0x7f74>
  40a87c:	ldp	x21, x22, [sp, #32]
  40a880:	b	40a8a8 <ferror@plt+0x7fd8>
  40a884:	str	wzr, [x0, #4]
  40a888:	ldp	x21, x22, [sp, #32]
  40a88c:	b	40a8a8 <ferror@plt+0x7fd8>
  40a890:	str	wzr, [x0, #4]
  40a894:	b	40a8bc <ferror@plt+0x7fec>
  40a898:	ldrsb	w1, [x0, #3]
  40a89c:	tbnz	w1, #31, 40a884 <ferror@plt+0x7fb4>
  40a8a0:	bl	402690 <free@plt>
  40a8a4:	ldp	x21, x22, [sp, #32]
  40a8a8:	ldr	x0, [x19, #24]
  40a8ac:	cbz	x0, 40a8bc <ferror@plt+0x7fec>
  40a8b0:	ldrsb	w1, [x0, #3]
  40a8b4:	tbnz	w1, #31, 40a890 <ferror@plt+0x7fc0>
  40a8b8:	bl	402690 <free@plt>
  40a8bc:	ldp	x19, x20, [sp, #16]
  40a8c0:	ldp	x29, x30, [sp], #48
  40a8c4:	ret
  40a8c8:	cbz	x0, 40a8f8 <ferror@plt+0x8028>
  40a8cc:	stp	x29, x30, [sp, #-32]!
  40a8d0:	mov	x29, sp
  40a8d4:	str	x19, [sp, #16]
  40a8d8:	mov	x19, x0
  40a8dc:	bl	40a818 <ferror@plt+0x7f48>
  40a8e0:	mov	x1, #0x28                  	// #40
  40a8e4:	mov	x0, x19
  40a8e8:	bl	447628 <_obstack_memory_used@@Base+0x6bc>
  40a8ec:	ldr	x19, [sp, #16]
  40a8f0:	ldp	x29, x30, [sp], #32
  40a8f4:	ret
  40a8f8:	ret
  40a8fc:	ldr	x0, [x0, #24]
  40a900:	cbz	x0, 40a938 <ferror@plt+0x8068>
  40a904:	add	x2, x0, #0x8
  40a908:	ldr	w3, [x0, #4]
  40a90c:	add	x3, x2, x3, lsl #3
  40a910:	mov	w0, w1
  40a914:	cmp	x2, x3
  40a918:	b.eq	40a93c <ferror@plt+0x806c>  // b.none
  40a91c:	ldr	w1, [x2]
  40a920:	cmp	w1, w0
  40a924:	b.gt	40a930 <ferror@plt+0x8060>
  40a928:	ldr	w1, [x2, #4]
  40a92c:	add	w0, w0, w1
  40a930:	add	x2, x2, #0x8
  40a934:	b	40a914 <ferror@plt+0x8044>
  40a938:	mov	w0, w1
  40a93c:	ret
  40a940:	ldr	x0, [x0, #32]
  40a944:	cbz	x0, 40a954 <ferror@plt+0x8084>
  40a948:	ldr	w0, [x0, #4]
  40a94c:	add	w0, w0, #0x1
  40a950:	ret
  40a954:	mov	w0, #0x0                   	// #0
  40a958:	b	40a94c <ferror@plt+0x807c>
  40a95c:	stp	x29, x30, [sp, #-48]!
  40a960:	mov	x29, sp
  40a964:	stp	x19, x20, [sp, #16]
  40a968:	mov	x19, x0
  40a96c:	mov	x20, x1
  40a970:	ldr	x2, [x0, #32]
  40a974:	cbz	x2, 40a9c0 <ferror@plt+0x80f0>
  40a978:	str	x21, [sp, #32]
  40a97c:	mov	w21, #0x0                   	// #0
  40a980:	ldr	w0, [x2, #4]
  40a984:	cmp	w0, w21
  40a988:	b.ls	40a9bc <ferror@plt+0x80ec>  // b.plast
  40a98c:	add	x2, x2, w21, uxtw #3
  40a990:	ldr	x0, [x2, #8]
  40a994:	ldr	x1, [x0]
  40a998:	mov	x0, x20
  40a99c:	bl	40cf0c <ferror@plt+0xa63c>
  40a9a0:	mov	x0, x20
  40a9a4:	bl	40c8b0 <ferror@plt+0x9fe0>
  40a9a8:	add	w21, w21, #0x1
  40a9ac:	ldr	x2, [x19, #32]
  40a9b0:	cbnz	x2, 40a980 <ferror@plt+0x80b0>
  40a9b4:	ldr	x21, [sp, #32]
  40a9b8:	b	40a9c0 <ferror@plt+0x80f0>
  40a9bc:	ldr	x21, [sp, #32]
  40a9c0:	ldr	x1, [x19, #8]
  40a9c4:	mov	x0, x20
  40a9c8:	bl	40cf0c <ferror@plt+0xa63c>
  40a9cc:	ldp	x19, x20, [sp, #16]
  40a9d0:	ldp	x29, x30, [sp], #48
  40a9d4:	ret
  40a9d8:	stp	x29, x30, [sp, #-48]!
  40a9dc:	mov	x29, sp
  40a9e0:	stp	x19, x20, [sp, #16]
  40a9e4:	mov	x19, x0
  40a9e8:	mov	x20, x1
  40a9ec:	ldr	x0, [x0, #32]
  40a9f0:	cbz	x0, 40aa40 <ferror@plt+0x8170>
  40a9f4:	stp	x21, x22, [sp, #32]
  40a9f8:	mov	w21, #0x0                   	// #0
  40a9fc:	mov	w22, #0x2b                  	// #43
  40aa00:	ldr	w1, [x0, #4]
  40aa04:	cmp	w1, w21
  40aa08:	b.ls	40aa3c <ferror@plt+0x816c>  // b.plast
  40aa0c:	add	x0, x0, w21, uxtw #3
  40aa10:	ldr	x0, [x0, #8]
  40aa14:	ldr	w3, [x0, #8]
  40aa18:	ldr	x2, [x0]
  40aa1c:	mov	w1, w22
  40aa20:	mov	x0, x20
  40aa24:	bl	40a654 <ferror@plt+0x7d84>
  40aa28:	add	w21, w21, #0x1
  40aa2c:	ldr	x0, [x19, #32]
  40aa30:	cbnz	x0, 40aa00 <ferror@plt+0x8130>
  40aa34:	ldp	x21, x22, [sp, #32]
  40aa38:	b	40aa40 <ferror@plt+0x8170>
  40aa3c:	ldp	x21, x22, [sp, #32]
  40aa40:	ldr	x0, [x19, #24]
  40aa44:	cbz	x0, 40aa50 <ferror@plt+0x8180>
  40aa48:	ldr	w0, [x0, #4]
  40aa4c:	cbnz	w0, 40aa70 <ferror@plt+0x81a0>
  40aa50:	ldr	w3, [x19, #16]
  40aa54:	ldr	x2, [x19, #8]
  40aa58:	mov	w1, #0x20                  	// #32
  40aa5c:	mov	x0, x20
  40aa60:	bl	40a654 <ferror@plt+0x7d84>
  40aa64:	ldp	x19, x20, [sp, #16]
  40aa68:	ldp	x29, x30, [sp], #48
  40aa6c:	ret
  40aa70:	ldr	w3, [x19, #16]
  40aa74:	ldr	x2, [x19, #8]
  40aa78:	mov	w1, #0x2b                  	// #43
  40aa7c:	mov	x0, x20
  40aa80:	bl	40a654 <ferror@plt+0x7d84>
  40aa84:	b	40aa64 <ferror@plt+0x8194>
  40aa88:	stp	x29, x30, [sp, #-32]!
  40aa8c:	mov	x29, sp
  40aa90:	stp	x19, x20, [sp, #16]
  40aa94:	mov	x20, x0
  40aa98:	ldr	w0, [x0, #20]
  40aa9c:	cmp	w0, w1
  40aaa0:	b.le	40aab0 <ferror@plt+0x81e0>
  40aaa4:	ldp	x19, x20, [sp, #16]
  40aaa8:	ldp	x29, x30, [sp], #32
  40aaac:	ret
  40aab0:	add	w1, w1, #0x1
  40aab4:	lsl	w19, w1, #1
  40aab8:	sxtw	x1, w19
  40aabc:	ldr	x0, [x20, #8]
  40aac0:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  40aac4:	str	x0, [x20, #8]
  40aac8:	str	w19, [x20, #20]
  40aacc:	b	40aaa4 <ferror@plt+0x81d4>
  40aad0:	ldr	w1, [x0, #16]
  40aad4:	ldr	w2, [x0, #20]
  40aad8:	cmp	w1, w2
  40aadc:	b.ge	40aaec <ferror@plt+0x821c>  // b.tcont
  40aae0:	ldr	x0, [x0, #8]
  40aae4:	strb	wzr, [x0, w1, sxtw]
  40aae8:	ret
  40aaec:	stp	x29, x30, [sp, #-16]!
  40aaf0:	mov	x29, sp
  40aaf4:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  40aaf8:	add	x2, x2, #0xec0
  40aafc:	mov	w1, #0x36b                 	// #875
  40ab00:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40ab04:	add	x0, x0, #0xee8
  40ab08:	bl	4062a0 <ferror@plt+0x39d0>
  40ab0c:	stp	x29, x30, [sp, #-32]!
  40ab10:	mov	x29, sp
  40ab14:	stp	x19, x20, [sp, #16]
  40ab18:	mov	x19, x0
  40ab1c:	mov	x0, x1
  40ab20:	mov	w1, w2
  40ab24:	str	w2, [x19]
  40ab28:	str	xzr, [x19, #8]
  40ab2c:	str	wzr, [x19, #16]
  40ab30:	str	wzr, [x19, #20]
  40ab34:	str	xzr, [x19, #24]
  40ab38:	str	xzr, [x19, #32]
  40ab3c:	bl	411ee4 <ferror@plt+0xf614>
  40ab40:	cbz	x0, 40ab6c <ferror@plt+0x829c>
  40ab44:	mov	x20, x0
  40ab48:	str	w1, [x19, #16]
  40ab4c:	mov	x0, x19
  40ab50:	bl	40aa88 <ferror@plt+0x81b8>
  40ab54:	ldrsw	x2, [x19, #16]
  40ab58:	mov	x1, x20
  40ab5c:	ldr	x0, [x19, #8]
  40ab60:	bl	402260 <memcpy@plt>
  40ab64:	mov	x0, x19
  40ab68:	bl	40aad0 <ferror@plt+0x8200>
  40ab6c:	ldp	x19, x20, [sp, #16]
  40ab70:	ldp	x29, x30, [sp], #32
  40ab74:	ret
  40ab78:	stp	x29, x30, [sp, #-96]!
  40ab7c:	mov	x29, sp
  40ab80:	stp	x19, x20, [sp, #16]
  40ab84:	stp	x21, x22, [sp, #32]
  40ab88:	stp	x23, x24, [sp, #48]
  40ab8c:	mov	x19, x0
  40ab90:	mov	w21, w2
  40ab94:	mov	x23, x3
  40ab98:	mov	w22, w4
  40ab9c:	cmp	w4, #0x1
  40aba0:	b.le	40abb4 <ferror@plt+0x82e4>
  40aba4:	add	x0, x3, w4, sxtw
  40aba8:	ldurb	w0, [x0, #-1]
  40abac:	cmp	w0, #0xa
  40abb0:	b.eq	40ac1c <ferror@plt+0x834c>  // b.none
  40abb4:	stp	x25, x26, [sp, #64]
  40abb8:	mov	x0, x19
  40abbc:	bl	40a8fc <ferror@plt+0x802c>
  40abc0:	mov	w20, w0
  40abc4:	mov	w1, w21
  40abc8:	mov	x0, x19
  40abcc:	bl	40a8fc <ferror@plt+0x802c>
  40abd0:	mov	w1, w0
  40abd4:	sub	w24, w0, #0x1
  40abd8:	subs	w25, w20, #0x1
  40abdc:	b.mi	40ad7c <ferror@plt+0x84ac>  // b.first
  40abe0:	tbnz	w24, #31, 40ad98 <ferror@plt+0x84c8>
  40abe4:	cmp	w20, w0
  40abe8:	b.gt	40af7c <ferror@plt+0x86ac>
  40abec:	ldr	w2, [x19, #16]
  40abf0:	cmp	w25, w24
  40abf4:	csel	w3, w25, w24, ge  // ge = tcont
  40abf8:	mov	w0, #0x0                   	// #0
  40abfc:	cmp	w2, w3
  40ac00:	b.ge	40adb4 <ferror@plt+0x84e4>  // b.tcont
  40ac04:	ldp	x25, x26, [sp, #64]
  40ac08:	ldp	x19, x20, [sp, #16]
  40ac0c:	ldp	x21, x22, [sp, #32]
  40ac10:	ldp	x23, x24, [sp, #48]
  40ac14:	ldp	x29, x30, [sp], #96
  40ac18:	ret
  40ac1c:	mov	x0, #0x10                  	// #16
  40ac20:	bl	447868 <_obstack_memory_used@@Base+0x8fc>
  40ac24:	mov	x24, x0
  40ac28:	sub	w22, w22, #0x1
  40ac2c:	sxtw	x1, w22
  40ac30:	mov	x0, x23
  40ac34:	bl	4471f8 <_obstack_memory_used@@Base+0x28c>
  40ac38:	str	x0, [x24]
  40ac3c:	str	w22, [x24, #8]
  40ac40:	ldr	x20, [x19, #32]
  40ac44:	cbz	x20, 40ac8c <ferror@plt+0x83bc>
  40ac48:	ldr	w0, [x20]
  40ac4c:	ubfx	x0, x0, #0, #31
  40ac50:	ldr	w1, [x20, #4]
  40ac54:	cmp	w0, w1
  40ac58:	b.ne	40ad2c <ferror@plt+0x845c>  // b.any
  40ac5c:	stp	x25, x26, [sp, #64]
  40ac60:	ldrsb	w0, [x20, #3]
  40ac64:	tbnz	w0, #31, 40ac78 <ferror@plt+0x83a8>
  40ac68:	mov	w23, #0x0                   	// #0
  40ac6c:	mov	w21, #0x0                   	// #0
  40ac70:	mov	w1, #0x1                   	// #1
  40ac74:	b	40ac9c <ferror@plt+0x83cc>
  40ac78:	str	xzr, [x19, #32]
  40ac7c:	ldr	w21, [x20, #4]
  40ac80:	add	w1, w21, #0x1
  40ac84:	mov	w23, #0x1                   	// #1
  40ac88:	b	40ac9c <ferror@plt+0x83cc>
  40ac8c:	stp	x25, x26, [sp, #64]
  40ac90:	mov	w23, #0x0                   	// #0
  40ac94:	mov	w21, #0x0                   	// #0
  40ac98:	mov	w1, #0x1                   	// #1
  40ac9c:	ldr	x0, [x19, #32]
  40aca0:	cbz	x0, 40ad4c <ferror@plt+0x847c>
  40aca4:	ldr	w2, [x0, #4]
  40aca8:	ldr	w0, [x0]
  40acac:	add	w1, w1, w2
  40acb0:	and	w0, w0, #0x7fffffff
  40acb4:	bl	40f5bc <ferror@plt+0xccec>
  40acb8:	mov	w22, w0
  40acbc:	ubfiz	x1, x22, #3, #32
  40acc0:	add	x1, x1, #0x8
  40acc4:	ldr	x0, [x19, #32]
  40acc8:	cbz	x0, 40ad6c <ferror@plt+0x849c>
  40accc:	ldr	w25, [x0, #4]
  40acd0:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  40acd4:	str	x0, [x19, #32]
  40acd8:	ldr	w1, [x0]
  40acdc:	bfxil	w1, w22, #0, #31
  40ace0:	str	w1, [x0]
  40ace4:	ubfx	x1, x1, #24, #7
  40ace8:	strb	w1, [x0, #3]
  40acec:	str	w25, [x0, #4]
  40acf0:	cbz	w23, 40ad74 <ferror@plt+0x84a4>
  40acf4:	ldr	x3, [x19, #32]
  40acf8:	cbz	w21, 40ad20 <ferror@plt+0x8450>
  40acfc:	sub	w2, w21, #0x1
  40ad00:	add	x2, x2, #0x2
  40ad04:	lsl	x2, x2, #3
  40ad08:	mov	x1, #0x8                   	// #8
  40ad0c:	ldr	x0, [x20, x1]
  40ad10:	str	x0, [x3, x1]
  40ad14:	add	x1, x1, #0x8
  40ad18:	cmp	x1, x2
  40ad1c:	b.ne	40ad0c <ferror@plt+0x843c>  // b.any
  40ad20:	ldr	x0, [x19, #32]
  40ad24:	str	w21, [x0, #4]
  40ad28:	ldp	x25, x26, [sp, #64]
  40ad2c:	ldr	x1, [x19, #32]
  40ad30:	ldr	w0, [x1, #4]
  40ad34:	add	w2, w0, #0x1
  40ad38:	str	w2, [x1, #4]
  40ad3c:	add	x0, x1, w0, uxtw #3
  40ad40:	str	x24, [x0, #8]
  40ad44:	mov	w0, #0x1                   	// #1
  40ad48:	b	40ac08 <ferror@plt+0x8338>
  40ad4c:	mov	w2, #0x4                   	// #4
  40ad50:	cmp	w1, w2
  40ad54:	csel	w22, w1, w2, cs  // cs = hs, nlast
  40ad58:	csel	w1, w1, w2, cs  // cs = hs, nlast
  40ad5c:	add	x1, x1, #0x1
  40ad60:	lsl	x1, x1, #3
  40ad64:	mov	w25, #0x0                   	// #0
  40ad68:	b	40acd0 <ferror@plt+0x8400>
  40ad6c:	mov	w25, #0x0                   	// #0
  40ad70:	b	40acd0 <ferror@plt+0x8400>
  40ad74:	ldp	x25, x26, [sp, #64]
  40ad78:	b	40ad2c <ferror@plt+0x845c>
  40ad7c:	str	x27, [sp, #80]
  40ad80:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  40ad84:	add	x2, x2, #0xf08
  40ad88:	mov	w1, #0x2fa                 	// #762
  40ad8c:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40ad90:	add	x0, x0, #0xee8
  40ad94:	bl	4062a0 <ferror@plt+0x39d0>
  40ad98:	str	x27, [sp, #80]
  40ad9c:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  40ada0:	add	x2, x2, #0xf08
  40ada4:	mov	w1, #0x2fb                 	// #763
  40ada8:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40adac:	add	x0, x0, #0xee8
  40adb0:	bl	4062a0 <ferror@plt+0x39d0>
  40adb4:	str	x27, [sp, #80]
  40adb8:	sub	w21, w1, w20
  40adbc:	add	w2, w2, w22
  40adc0:	sub	w26, w2, w21
  40adc4:	mov	w1, w26
  40adc8:	mov	x0, x19
  40adcc:	bl	40aa88 <ferror@plt+0x81b8>
  40add0:	ldr	x0, [x19, #8]
  40add4:	add	x1, x0, w24, sxtw
  40add8:	ldr	w2, [x19, #16]
  40addc:	add	x3, x0, w2, sxtw
  40ade0:	cmp	x1, x3
  40ade4:	b.hi	40ae5c <ferror@plt+0x858c>  // b.pmore
  40ade8:	sxtw	x25, w25
  40adec:	sxtw	x27, w22
  40adf0:	sxtw	x2, w2
  40adf4:	add	x3, x25, x27
  40adf8:	sub	x2, x2, w24, sxtw
  40adfc:	add	x0, x0, x3
  40ae00:	bl	402270 <memmove@plt>
  40ae04:	ldr	x0, [x19, #8]
  40ae08:	mov	x2, x27
  40ae0c:	mov	x1, x23
  40ae10:	add	x0, x0, x25
  40ae14:	bl	402260 <memcpy@plt>
  40ae18:	str	w26, [x19, #16]
  40ae1c:	mov	x0, x19
  40ae20:	bl	40aad0 <ferror@plt+0x8200>
  40ae24:	sub	w21, w22, w21
  40ae28:	ldr	x22, [x19, #24]
  40ae2c:	cbz	x22, 40ae88 <ferror@plt+0x85b8>
  40ae30:	ldr	w0, [x22]
  40ae34:	ubfx	x0, x0, #0, #31
  40ae38:	ldr	w1, [x22, #4]
  40ae3c:	cmp	w0, w1
  40ae40:	b.ne	40af20 <ferror@plt+0x8650>  // b.any
  40ae44:	ldrsb	w0, [x22, #3]
  40ae48:	tbnz	w0, #31, 40ae74 <ferror@plt+0x85a4>
  40ae4c:	mov	w25, #0x0                   	// #0
  40ae50:	mov	w23, #0x0                   	// #0
  40ae54:	mov	w1, #0x1                   	// #1
  40ae58:	b	40ae94 <ferror@plt+0x85c4>
  40ae5c:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  40ae60:	add	x2, x2, #0xf08
  40ae64:	mov	w1, #0x30b                 	// #779
  40ae68:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40ae6c:	add	x0, x0, #0xee8
  40ae70:	bl	4062a0 <ferror@plt+0x39d0>
  40ae74:	str	xzr, [x19, #24]
  40ae78:	ldr	w23, [x22, #4]
  40ae7c:	add	w1, w23, #0x1
  40ae80:	mov	w25, #0x1                   	// #1
  40ae84:	b	40ae94 <ferror@plt+0x85c4>
  40ae88:	mov	w25, #0x0                   	// #0
  40ae8c:	mov	w23, #0x0                   	// #0
  40ae90:	mov	w1, #0x1                   	// #1
  40ae94:	ldr	x0, [x19, #24]
  40ae98:	cbz	x0, 40af54 <ferror@plt+0x8684>
  40ae9c:	ldr	w2, [x0, #4]
  40aea0:	ldr	w0, [x0]
  40aea4:	add	w1, w1, w2
  40aea8:	and	w0, w0, #0x7fffffff
  40aeac:	bl	40f5bc <ferror@plt+0xccec>
  40aeb0:	mov	w24, w0
  40aeb4:	ubfiz	x1, x24, #3, #32
  40aeb8:	add	x1, x1, #0x8
  40aebc:	ldr	x0, [x19, #24]
  40aec0:	cbz	x0, 40af74 <ferror@plt+0x86a4>
  40aec4:	ldr	w26, [x0, #4]
  40aec8:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  40aecc:	str	x0, [x19, #24]
  40aed0:	ldr	w1, [x0]
  40aed4:	bfxil	w1, w24, #0, #31
  40aed8:	str	w1, [x0]
  40aedc:	ubfx	x1, x1, #24, #7
  40aee0:	strb	w1, [x0, #3]
  40aee4:	str	w26, [x0, #4]
  40aee8:	cbz	w25, 40af20 <ferror@plt+0x8650>
  40aeec:	ldr	x3, [x19, #24]
  40aef0:	cbz	w23, 40af18 <ferror@plt+0x8648>
  40aef4:	sub	w2, w23, #0x1
  40aef8:	add	x2, x2, #0x2
  40aefc:	lsl	x2, x2, #3
  40af00:	mov	x0, #0x8                   	// #8
  40af04:	ldr	x1, [x22, x0]
  40af08:	str	x1, [x3, x0]
  40af0c:	add	x0, x0, #0x8
  40af10:	cmp	x0, x2
  40af14:	b.ne	40af04 <ferror@plt+0x8634>  // b.any
  40af18:	ldr	x0, [x19, #24]
  40af1c:	str	w23, [x0, #4]
  40af20:	ldr	x1, [x19, #24]
  40af24:	ldr	w0, [x1, #4]
  40af28:	add	w2, w0, #0x1
  40af2c:	str	w2, [x1, #4]
  40af30:	ubfiz	x0, x0, #3, #32
  40af34:	add	x0, x0, #0x8
  40af38:	add	x2, x1, x0
  40af3c:	str	w20, [x1, x0]
  40af40:	str	w21, [x2, #4]
  40af44:	mov	w0, #0x1                   	// #1
  40af48:	ldp	x25, x26, [sp, #64]
  40af4c:	ldr	x27, [sp, #80]
  40af50:	b	40ac08 <ferror@plt+0x8338>
  40af54:	mov	w2, #0x4                   	// #4
  40af58:	cmp	w1, w2
  40af5c:	csel	w24, w1, w2, cs  // cs = hs, nlast
  40af60:	csel	w1, w1, w2, cs  // cs = hs, nlast
  40af64:	add	x1, x1, #0x1
  40af68:	lsl	x1, x1, #3
  40af6c:	mov	w26, #0x0                   	// #0
  40af70:	b	40aec8 <ferror@plt+0x85f8>
  40af74:	mov	w26, #0x0                   	// #0
  40af78:	b	40aec8 <ferror@plt+0x85f8>
  40af7c:	mov	w0, #0x0                   	// #0
  40af80:	ldp	x25, x26, [sp, #64]
  40af84:	b	40ac08 <ferror@plt+0x8338>
  40af88:	cbz	x0, 40afc0 <ferror@plt+0x86f0>
  40af8c:	stp	x29, x30, [sp, #-32]!
  40af90:	mov	x29, sp
  40af94:	str	x19, [sp, #16]
  40af98:	mov	x19, x0
  40af9c:	ldr	x1, [x0, #8]
  40afa0:	add	x0, x0, #0x8
  40afa4:	bl	40bc74 <ferror@plt+0x93a4>
  40afa8:	mov	x1, #0x30                  	// #48
  40afac:	mov	x0, x19
  40afb0:	bl	447628 <_obstack_memory_used@@Base+0x6bc>
  40afb4:	ldr	x19, [sp, #16]
  40afb8:	ldp	x29, x30, [sp], #32
  40afbc:	ret
  40afc0:	ret
  40afc4:	stp	x29, x30, [sp, #-32]!
  40afc8:	mov	x29, sp
  40afcc:	stp	x19, x20, [sp, #16]
  40afd0:	cbz	x1, 40b018 <ferror@plt+0x8748>
  40afd4:	mov	x19, x0
  40afd8:	mov	x20, x1
  40afdc:	add	x0, x0, #0x8
  40afe0:	bl	40bd7c <ferror@plt+0x94ac>
  40afe4:	ldr	x0, [x19, #8]
  40afe8:	cbz	x0, 40b030 <ferror@plt+0x8760>
  40afec:	ldr	x2, [x19, #16]
  40aff0:	mov	x1, x20
  40aff4:	ldr	x0, [x0]
  40aff8:	blr	x2
  40affc:	cbnz	w0, 40b030 <ferror@plt+0x8760>
  40b000:	ldr	x0, [x19, #8]
  40b004:	cbz	x0, 40b00c <ferror@plt+0x873c>
  40b008:	ldr	x0, [x0, #8]
  40b00c:	ldp	x19, x20, [sp, #16]
  40b010:	ldp	x29, x30, [sp], #32
  40b014:	ret
  40b018:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  40b01c:	add	x2, x2, #0xf18
  40b020:	mov	w1, #0x140                 	// #320
  40b024:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40b028:	add	x0, x0, #0xee8
  40b02c:	bl	4062a0 <ferror@plt+0x39d0>
  40b030:	mov	x0, #0x0                   	// #0
  40b034:	b	40b00c <ferror@plt+0x873c>
  40b038:	stp	x29, x30, [sp, #-48]!
  40b03c:	mov	x29, sp
  40b040:	stp	x19, x20, [sp, #16]
  40b044:	stp	x21, x22, [sp, #32]
  40b048:	cbz	x1, 40b074 <ferror@plt+0x87a4>
  40b04c:	mov	x21, x0
  40b050:	mov	x20, x1
  40b054:	bl	40afc4 <ferror@plt+0x86f4>
  40b058:	mov	x19, x0
  40b05c:	cbz	x0, 40b08c <ferror@plt+0x87bc>
  40b060:	mov	x0, x19
  40b064:	ldp	x19, x20, [sp, #16]
  40b068:	ldp	x21, x22, [sp, #32]
  40b06c:	ldp	x29, x30, [sp], #48
  40b070:	ret
  40b074:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  40b078:	add	x2, x2, #0xf28
  40b07c:	mov	w1, #0x149                 	// #329
  40b080:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40b084:	add	x0, x0, #0xee8
  40b088:	bl	4062a0 <ferror@plt+0x39d0>
  40b08c:	mov	x0, #0x30                  	// #48
  40b090:	bl	447868 <_obstack_memory_used@@Base+0x8fc>
  40b094:	mov	x19, x0
  40b098:	str	x20, [x0], #8
  40b09c:	str	xzr, [x19, #8]
  40b0a0:	adrp	x1, 40a000 <ferror@plt+0x7730>
  40b0a4:	add	x1, x1, #0x64c
  40b0a8:	str	x1, [x0, #8]
  40b0ac:	str	xzr, [x0, #16]
  40b0b0:	adrp	x1, 40a000 <ferror@plt+0x7730>
  40b0b4:	add	x1, x1, #0x8c8
  40b0b8:	str	x1, [x0, #24]
  40b0bc:	mov	w0, #0xffffffff            	// #-1
  40b0c0:	str	w0, [x19, #40]
  40b0c4:	mov	x1, x20
  40b0c8:	add	x0, x21, #0x8
  40b0cc:	bl	40bd7c <ferror@plt+0x94ac>
  40b0d0:	ldr	x0, [x21, #8]
  40b0d4:	cbz	x0, 40b154 <ferror@plt+0x8884>
  40b0d8:	ldr	x2, [x21, #16]
  40b0dc:	mov	x1, x20
  40b0e0:	ldr	x0, [x0]
  40b0e4:	blr	x2
  40b0e8:	mov	w22, w0
  40b0ec:	ldr	x0, [x21, #8]
  40b0f0:	cmp	w22, #0x0
  40b0f4:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  40b0f8:	b.eq	40b118 <ferror@plt+0x8848>  // b.none
  40b0fc:	ldr	x1, [x21, #32]
  40b100:	cbz	x1, 40b10c <ferror@plt+0x883c>
  40b104:	ldr	x0, [x0, #8]
  40b108:	blr	x1
  40b10c:	ldr	x0, [x21, #8]
  40b110:	str	x19, [x0, #8]
  40b114:	b	40b060 <ferror@plt+0x8790>
  40b118:	mov	x0, #0x28                  	// #40
  40b11c:	bl	447868 <_obstack_memory_used@@Base+0x8fc>
  40b120:	str	x20, [x0]
  40b124:	str	x19, [x0, #8]
  40b128:	ldr	x1, [x21, #8]
  40b12c:	cbz	x1, 40b148 <ferror@plt+0x8878>
  40b130:	tbz	w22, #31, 40b16c <ferror@plt+0x889c>
  40b134:	str	x1, [x0, #16]
  40b138:	ldr	x2, [x1, #24]
  40b13c:	str	x2, [x0, #24]
  40b140:	str	xzr, [x1, #24]
  40b144:	b	40b17c <ferror@plt+0x88ac>
  40b148:	str	xzr, [x0, #24]
  40b14c:	str	xzr, [x0, #16]
  40b150:	b	40b17c <ferror@plt+0x88ac>
  40b154:	mov	x0, #0x28                  	// #40
  40b158:	bl	447868 <_obstack_memory_used@@Base+0x8fc>
  40b15c:	str	x20, [x0]
  40b160:	str	x19, [x0, #8]
  40b164:	ldr	x1, [x21, #8]
  40b168:	cbz	x1, 40b148 <ferror@plt+0x8878>
  40b16c:	str	x1, [x0, #24]
  40b170:	ldr	x2, [x1, #16]
  40b174:	str	x2, [x0, #16]
  40b178:	str	xzr, [x1, #16]
  40b17c:	str	x0, [x21, #8]
  40b180:	b	40b060 <ferror@plt+0x8790>
  40b184:	stp	x29, x30, [sp, #-32]!
  40b188:	mov	x29, sp
  40b18c:	stp	x19, x20, [sp, #16]
  40b190:	mov	x19, x0
  40b194:	mov	w20, w1
  40b198:	add	x0, x0, #0x8
  40b19c:	bl	40bf24 <ferror@plt+0x9654>
  40b1a0:	ldr	x0, [x19, #8]
  40b1a4:	cbz	x0, 40b1d4 <ferror@plt+0x8904>
  40b1a8:	ldr	x2, [x19, #16]
  40b1ac:	mov	w1, w20
  40b1b0:	ldr	w0, [x0]
  40b1b4:	blr	x2
  40b1b8:	cbnz	w0, 40b1d4 <ferror@plt+0x8904>
  40b1bc:	ldr	x0, [x19, #8]
  40b1c0:	cbz	x0, 40b1c8 <ferror@plt+0x88f8>
  40b1c4:	ldr	x0, [x0, #8]
  40b1c8:	ldp	x19, x20, [sp, #16]
  40b1cc:	ldp	x29, x30, [sp], #32
  40b1d0:	ret
  40b1d4:	mov	x0, #0x0                   	// #0
  40b1d8:	b	40b1c8 <ferror@plt+0x88f8>
  40b1dc:	stp	x29, x30, [sp, #-32]!
  40b1e0:	mov	x29, sp
  40b1e4:	str	x19, [sp, #16]
  40b1e8:	mov	w19, w2
  40b1ec:	bl	40b184 <ferror@plt+0x88b4>
  40b1f0:	cbz	x0, 40b208 <ferror@plt+0x8938>
  40b1f4:	mov	w1, w19
  40b1f8:	bl	40a8fc <ferror@plt+0x802c>
  40b1fc:	ldr	x19, [sp, #16]
  40b200:	ldp	x29, x30, [sp], #32
  40b204:	ret
  40b208:	mov	w0, w19
  40b20c:	b	40b1fc <ferror@plt+0x892c>
  40b210:	stp	x29, x30, [sp, #-32]!
  40b214:	mov	x29, sp
  40b218:	stp	x19, x20, [sp, #16]
  40b21c:	mov	w20, w2
  40b220:	mov	w19, w3
  40b224:	bl	40afc4 <ferror@plt+0x86f4>
  40b228:	cbz	x0, 40b244 <ferror@plt+0x8974>
  40b22c:	mov	w2, w19
  40b230:	mov	w1, w20
  40b234:	bl	40b1dc <ferror@plt+0x890c>
  40b238:	ldp	x19, x20, [sp, #16]
  40b23c:	ldp	x29, x30, [sp], #32
  40b240:	ret
  40b244:	mov	w0, w19
  40b248:	b	40b238 <ferror@plt+0x8968>
  40b24c:	stp	x29, x30, [sp, #-112]!
  40b250:	mov	x29, sp
  40b254:	stp	x21, x22, [sp, #32]
  40b258:	stp	x23, x24, [sp, #48]
  40b25c:	mov	x23, x0
  40b260:	mov	x21, x1
  40b264:	add	x1, sp, #0x6f
  40b268:	bl	40a798 <ferror@plt+0x7ec8>
  40b26c:	cmp	w0, #0x0
  40b270:	b.le	40b378 <ferror@plt+0x8aa8>
  40b274:	stp	x19, x20, [sp, #16]
  40b278:	stp	x25, x26, [sp, #64]
  40b27c:	stp	x27, x28, [sp, #80]
  40b280:	mov	w22, w0
  40b284:	mov	w19, #0x1                   	// #1
  40b288:	mov	w26, #0x0                   	// #0
  40b28c:	mov	x24, #0x80000000            	// #2147483648
  40b290:	mov	w25, #0xa                   	// #10
  40b294:	b	40b348 <ferror@plt+0x8a78>
  40b298:	mov	w1, w19
  40b29c:	ldr	x0, [x23]
  40b2a0:	bl	411ee4 <ferror@plt+0xf614>
  40b2a4:	mov	x27, x1
  40b2a8:	mov	x28, x0
  40b2ac:	cbz	x0, 40b2c0 <ferror@plt+0x89f0>
  40b2b0:	mov	x20, #0x0                   	// #0
  40b2b4:	mov	w0, w26
  40b2b8:	cbnz	x1, 40b2dc <ferror@plt+0x8a0c>
  40b2bc:	b	40b360 <ferror@plt+0x8a90>
  40b2c0:	ldp	x19, x20, [sp, #16]
  40b2c4:	ldp	x25, x26, [sp, #64]
  40b2c8:	ldp	x27, x28, [sp, #80]
  40b2cc:	b	40b380 <ferror@plt+0x8ab0>
  40b2d0:	mov	w0, w20
  40b2d4:	cmp	x20, x24
  40b2d8:	b.eq	40b300 <ferror@plt+0x8a30>  // b.none
  40b2dc:	cmp	x27, w0, sxtw
  40b2e0:	b.ls	40b318 <ferror@plt+0x8a48>  // b.plast
  40b2e4:	ldrb	w1, [x28, w0, sxtw]
  40b2e8:	mov	x0, x21
  40b2ec:	bl	40c914 <ferror@plt+0xa044>
  40b2f0:	add	x20, x20, #0x1
  40b2f4:	cmp	x27, x20
  40b2f8:	b.ne	40b2d0 <ferror@plt+0x8a00>  // b.any
  40b2fc:	b	40b360 <ferror@plt+0x8a90>
  40b300:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  40b304:	add	x2, x2, #0xf40
  40b308:	mov	w1, #0x3d                  	// #61
  40b30c:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40b310:	add	x0, x0, #0xe98
  40b314:	bl	4062a0 <ferror@plt+0x39d0>
  40b318:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  40b31c:	add	x2, x2, #0xf40
  40b320:	mov	w1, #0x3e                  	// #62
  40b324:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40b328:	add	x0, x0, #0xe98
  40b32c:	bl	4062a0 <ferror@plt+0x39d0>
  40b330:	mov	w1, w25
  40b334:	mov	x0, x21
  40b338:	bl	40c914 <ferror@plt+0xa044>
  40b33c:	add	w19, w19, #0x1
  40b340:	cmp	w22, w19
  40b344:	b.lt	40b36c <ferror@plt+0x8a9c>  // b.tstop
  40b348:	mov	w1, w19
  40b34c:	mov	x0, x23
  40b350:	bl	40b184 <ferror@plt+0x88b4>
  40b354:	cbz	x0, 40b298 <ferror@plt+0x89c8>
  40b358:	mov	x1, x21
  40b35c:	bl	40a95c <ferror@plt+0x808c>
  40b360:	cmp	w22, w19
  40b364:	b.le	40b33c <ferror@plt+0x8a6c>
  40b368:	b	40b330 <ferror@plt+0x8a60>
  40b36c:	ldp	x19, x20, [sp, #16]
  40b370:	ldp	x25, x26, [sp, #64]
  40b374:	ldp	x27, x28, [sp, #80]
  40b378:	ldrb	w0, [sp, #111]
  40b37c:	cbz	w0, 40b390 <ferror@plt+0x8ac0>
  40b380:	ldp	x21, x22, [sp, #32]
  40b384:	ldp	x23, x24, [sp, #48]
  40b388:	ldp	x29, x30, [sp], #112
  40b38c:	ret
  40b390:	mov	w1, #0xa                   	// #10
  40b394:	mov	x0, x21
  40b398:	bl	40c914 <ferror@plt+0xa044>
  40b39c:	mov	w0, #0x1                   	// #1
  40b3a0:	b	40b380 <ferror@plt+0x8ab0>
  40b3a4:	stp	x29, x30, [sp, #-64]!
  40b3a8:	mov	x29, sp
  40b3ac:	stp	x19, x20, [sp, #16]
  40b3b0:	stp	x21, x22, [sp, #32]
  40b3b4:	stp	x23, x24, [sp, #48]
  40b3b8:	mov	x21, x0
  40b3bc:	mov	x22, x1
  40b3c0:	mov	w19, w2
  40b3c4:	mov	w23, w3
  40b3c8:	mov	x2, #0xb                   	// #11
  40b3cc:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  40b3d0:	add	x1, x1, #0xcd8
  40b3d4:	ldrb	w0, [x22, #67]
  40b3d8:	bl	40744c <ferror@plt+0x4b7c>
  40b3dc:	mov	x1, x0
  40b3e0:	mov	x0, x22
  40b3e4:	bl	40cf0c <ferror@plt+0xa63c>
  40b3e8:	cmp	w19, w23
  40b3ec:	b.gt	40b4fc <ferror@plt+0x8c2c>
  40b3f0:	mov	w20, w19
  40b3f4:	mov	w24, #0x2d                  	// #45
  40b3f8:	b	40b440 <ferror@plt+0x8b70>
  40b3fc:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  40b400:	add	x2, x2, #0xf50
  40b404:	mov	w1, #0x239                 	// #569
  40b408:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40b40c:	add	x0, x0, #0xee8
  40b410:	bl	4062a0 <ferror@plt+0x39d0>
  40b414:	mov	w1, w20
  40b418:	ldr	x0, [x21]
  40b41c:	bl	411ee4 <ferror@plt+0xf614>
  40b420:	mov	w3, w1
  40b424:	mov	x2, x0
  40b428:	mov	w1, w24
  40b42c:	mov	x0, x22
  40b430:	bl	40a654 <ferror@plt+0x7d84>
  40b434:	add	w20, w20, #0x1
  40b438:	cmp	w23, w20
  40b43c:	b.lt	40b47c <ferror@plt+0x8bac>  // b.tstop
  40b440:	mov	w1, w20
  40b444:	mov	x0, x21
  40b448:	bl	40b184 <ferror@plt+0x88b4>
  40b44c:	cbz	x0, 40b3fc <ferror@plt+0x8b2c>
  40b450:	ldr	x2, [x0, #24]
  40b454:	cbz	x2, 40b434 <ferror@plt+0x8b64>
  40b458:	ldr	w0, [x2, #4]
  40b45c:	cbz	w0, 40b434 <ferror@plt+0x8b64>
  40b460:	b	40b414 <ferror@plt+0x8b44>
  40b464:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  40b468:	add	x2, x2, #0xf50
  40b46c:	mov	w1, #0x24b                 	// #587
  40b470:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40b474:	add	x0, x0, #0xee8
  40b478:	bl	4062a0 <ferror@plt+0x39d0>
  40b47c:	ldrb	w0, [x22, #67]
  40b480:	bl	4074e0 <ferror@plt+0x4c10>
  40b484:	mov	x1, x0
  40b488:	mov	x0, x22
  40b48c:	bl	40cf0c <ferror@plt+0xa63c>
  40b490:	mov	x2, #0xb                   	// #11
  40b494:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  40b498:	add	x1, x1, #0xce8
  40b49c:	ldrb	w0, [x22, #67]
  40b4a0:	bl	40744c <ferror@plt+0x4b7c>
  40b4a4:	mov	x1, x0
  40b4a8:	mov	x0, x22
  40b4ac:	bl	40cf0c <ferror@plt+0xa63c>
  40b4b0:	mov	w1, w19
  40b4b4:	mov	x0, x21
  40b4b8:	bl	40b184 <ferror@plt+0x88b4>
  40b4bc:	cbz	x0, 40b464 <ferror@plt+0x8b94>
  40b4c0:	mov	x1, x22
  40b4c4:	bl	40a9d8 <ferror@plt+0x8108>
  40b4c8:	add	w19, w19, #0x1
  40b4cc:	cmp	w23, w19
  40b4d0:	b.ge	40b4b0 <ferror@plt+0x8be0>  // b.tcont
  40b4d4:	ldrb	w0, [x22, #67]
  40b4d8:	bl	4074e0 <ferror@plt+0x4c10>
  40b4dc:	mov	x1, x0
  40b4e0:	mov	x0, x22
  40b4e4:	bl	40cf0c <ferror@plt+0xa63c>
  40b4e8:	ldp	x19, x20, [sp, #16]
  40b4ec:	ldp	x21, x22, [sp, #32]
  40b4f0:	ldp	x23, x24, [sp, #48]
  40b4f4:	ldp	x29, x30, [sp], #64
  40b4f8:	ret
  40b4fc:	ldrb	w0, [x22, #67]
  40b500:	bl	4074e0 <ferror@plt+0x4c10>
  40b504:	mov	x1, x0
  40b508:	mov	x0, x22
  40b50c:	bl	40cf0c <ferror@plt+0xa63c>
  40b510:	mov	x2, #0xb                   	// #11
  40b514:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  40b518:	add	x1, x1, #0xce8
  40b51c:	ldrb	w0, [x22, #67]
  40b520:	bl	40744c <ferror@plt+0x4b7c>
  40b524:	mov	x1, x0
  40b528:	mov	x0, x22
  40b52c:	bl	40cf0c <ferror@plt+0xa63c>
  40b530:	b	40b4d4 <ferror@plt+0x8c04>
  40b534:	stp	x29, x30, [sp, #-48]!
  40b538:	mov	x29, sp
  40b53c:	stp	x19, x20, [sp, #16]
  40b540:	cmp	w1, w2
  40b544:	b.gt	40b5a0 <ferror@plt+0x8cd0>
  40b548:	stp	x21, x22, [sp, #32]
  40b54c:	mov	x22, x0
  40b550:	mov	w19, w1
  40b554:	add	w21, w2, #0x1
  40b558:	mov	w20, #0x0                   	// #0
  40b55c:	b	40b570 <ferror@plt+0x8ca0>
  40b560:	add	w20, w20, #0x1
  40b564:	add	w19, w19, #0x1
  40b568:	cmp	w19, w21
  40b56c:	b.eq	40b58c <ferror@plt+0x8cbc>  // b.none
  40b570:	mov	w1, w19
  40b574:	mov	x0, x22
  40b578:	bl	40b184 <ferror@plt+0x88b4>
  40b57c:	cbz	x0, 40b560 <ferror@plt+0x8c90>
  40b580:	bl	40a940 <ferror@plt+0x8070>
  40b584:	add	w20, w20, w0
  40b588:	b	40b564 <ferror@plt+0x8c94>
  40b58c:	ldp	x21, x22, [sp, #32]
  40b590:	mov	w0, w20
  40b594:	ldp	x19, x20, [sp, #16]
  40b598:	ldp	x29, x30, [sp], #48
  40b59c:	ret
  40b5a0:	mov	w20, #0x0                   	// #0
  40b5a4:	b	40b590 <ferror@plt+0x8cc0>
  40b5a8:	stp	x29, x30, [sp, #-80]!
  40b5ac:	mov	x29, sp
  40b5b0:	stp	x19, x20, [sp, #16]
  40b5b4:	stp	x21, x22, [sp, #32]
  40b5b8:	stp	x23, x24, [sp, #48]
  40b5bc:	stp	x25, x26, [sp, #64]
  40b5c0:	mov	x20, x0
  40b5c4:	mov	x22, x1
  40b5c8:	mov	w21, w2
  40b5cc:	mov	w23, w3
  40b5d0:	mov	w19, w4
  40b5d4:	sub	w24, w3, w2
  40b5d8:	add	w24, w24, #0x1
  40b5dc:	mov	w2, w3
  40b5e0:	mov	w1, w21
  40b5e4:	bl	40b534 <ferror@plt+0x8c64>
  40b5e8:	mov	w25, w0
  40b5ec:	mov	x2, #0x9                   	// #9
  40b5f0:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  40b5f4:	add	x1, x1, #0xcb8
  40b5f8:	ldrb	w0, [x22, #67]
  40b5fc:	bl	40744c <ferror@plt+0x4b7c>
  40b600:	mov	x1, x0
  40b604:	mov	x0, x22
  40b608:	bl	40cf0c <ferror@plt+0xa63c>
  40b60c:	mov	w5, w25
  40b610:	mov	w4, w19
  40b614:	mov	w3, w24
  40b618:	mov	w2, w21
  40b61c:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  40b620:	add	x1, x1, #0xf70
  40b624:	mov	x0, x22
  40b628:	bl	40ed44 <ferror@plt+0xc474>
  40b62c:	ldrb	w0, [x22, #67]
  40b630:	bl	4074e0 <ferror@plt+0x4c10>
  40b634:	mov	x1, x0
  40b638:	mov	x0, x22
  40b63c:	bl	40cf0c <ferror@plt+0xa63c>
  40b640:	cmp	w23, w21
  40b644:	b.lt	40b6c4 <ferror@plt+0x8df4>  // b.tstop
  40b648:	mov	w26, #0x20                  	// #32
  40b64c:	b	40b670 <ferror@plt+0x8da0>
  40b650:	sub	w3, w19, #0x1
  40b654:	mov	w2, w21
  40b658:	mov	x1, x22
  40b65c:	mov	x0, x20
  40b660:	bl	40b3a4 <ferror@plt+0x8ad4>
  40b664:	mov	w21, w19
  40b668:	cmp	w23, w21
  40b66c:	b.lt	40b6c4 <ferror@plt+0x8df4>  // b.tstop
  40b670:	mov	w1, w21
  40b674:	mov	x0, x20
  40b678:	bl	40b184 <ferror@plt+0x88b4>
  40b67c:	cbz	x0, 40b69c <ferror@plt+0x8dcc>
  40b680:	mov	w19, w21
  40b684:	mov	w1, w19
  40b688:	mov	x0, x20
  40b68c:	bl	40b184 <ferror@plt+0x88b4>
  40b690:	cbz	x0, 40b650 <ferror@plt+0x8d80>
  40b694:	add	w19, w19, #0x1
  40b698:	b	40b684 <ferror@plt+0x8db4>
  40b69c:	mov	w1, w21
  40b6a0:	ldr	x0, [x20]
  40b6a4:	bl	411ee4 <ferror@plt+0xf614>
  40b6a8:	mov	w3, w1
  40b6ac:	mov	x2, x0
  40b6b0:	mov	w1, w26
  40b6b4:	mov	x0, x22
  40b6b8:	bl	40a654 <ferror@plt+0x7d84>
  40b6bc:	add	w21, w21, #0x1
  40b6c0:	b	40b668 <ferror@plt+0x8d98>
  40b6c4:	sub	w0, w25, w24
  40b6c8:	ldp	x19, x20, [sp, #16]
  40b6cc:	ldp	x21, x22, [sp, #32]
  40b6d0:	ldp	x23, x24, [sp, #48]
  40b6d4:	ldp	x25, x26, [sp, #64]
  40b6d8:	ldp	x29, x30, [sp], #80
  40b6dc:	ret
  40b6e0:	stp	x29, x30, [sp, #-96]!
  40b6e4:	mov	x29, sp
  40b6e8:	stp	x21, x22, [sp, #32]
  40b6ec:	stp	x23, x24, [sp, #48]
  40b6f0:	stp	x25, x26, [sp, #64]
  40b6f4:	mov	x24, x0
  40b6f8:	mov	x25, x1
  40b6fc:	tst	w2, #0xff
  40b700:	b.ne	40b744 <ferror@plt+0x8e74>  // b.any
  40b704:	add	x21, x24, #0x8
  40b708:	ldr	x0, [x24, #8]
  40b70c:	cbz	x0, 40b864 <ferror@plt+0x8f94>
  40b710:	stp	x19, x20, [sp, #16]
  40b714:	mov	x1, x0
  40b718:	ldr	x0, [x0, #16]
  40b71c:	cbnz	x0, 40b714 <ferror@plt+0x8e44>
  40b720:	ldr	x19, [x1, #8]
  40b724:	add	x1, sp, #0x5f
  40b728:	mov	x0, x24
  40b72c:	bl	40a798 <ferror@plt+0x7ec8>
  40b730:	mov	w23, w0
  40b734:	cbz	x19, 40b88c <ferror@plt+0x8fbc>
  40b738:	mov	w22, #0x0                   	// #0
  40b73c:	mov	w26, #0x1                   	// #1
  40b740:	b	40b848 <ferror@plt+0x8f78>
  40b744:	mov	x2, #0xd                   	// #13
  40b748:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  40b74c:	add	x1, x1, #0xca8
  40b750:	ldrb	w0, [x25, #67]
  40b754:	bl	40744c <ferror@plt+0x4b7c>
  40b758:	mov	x1, x0
  40b75c:	mov	x0, x25
  40b760:	bl	40cf0c <ferror@plt+0xa63c>
  40b764:	ldr	x2, [x24]
  40b768:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  40b76c:	add	x1, x1, #0xf88
  40b770:	mov	x0, x25
  40b774:	bl	40ed44 <ferror@plt+0xc474>
  40b778:	ldr	x2, [x24]
  40b77c:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  40b780:	add	x1, x1, #0xf90
  40b784:	mov	x0, x25
  40b788:	bl	40ed44 <ferror@plt+0xc474>
  40b78c:	ldrb	w0, [x25, #67]
  40b790:	bl	4074e0 <ferror@plt+0x4c10>
  40b794:	mov	x1, x0
  40b798:	mov	x0, x25
  40b79c:	bl	40cf0c <ferror@plt+0xa63c>
  40b7a0:	b	40b704 <ferror@plt+0x8e34>
  40b7a4:	add	w2, w2, #0x2
  40b7a8:	ldr	w1, [x0]
  40b7ac:	sub	w1, w1, #0x3
  40b7b0:	cmp	w1, w2
  40b7b4:	b.gt	40b7f0 <ferror@plt+0x8f20>
  40b7b8:	mov	x19, x0
  40b7bc:	ldr	w1, [x19]
  40b7c0:	mov	x0, x21
  40b7c4:	bl	40c0cc <ferror@plt+0x97fc>
  40b7c8:	cbz	x0, 40b7f0 <ferror@plt+0x8f20>
  40b7cc:	ldr	x0, [x0, #8]
  40b7d0:	cbz	x0, 40b7f0 <ferror@plt+0x8f20>
  40b7d4:	ldr	w2, [x19]
  40b7d8:	ldr	x1, [x19, #24]
  40b7dc:	cbz	x1, 40b7a4 <ferror@plt+0x8ed4>
  40b7e0:	ldr	w1, [x1, #4]
  40b7e4:	cbz	w1, 40b7a4 <ferror@plt+0x8ed4>
  40b7e8:	add	w2, w2, #0x3
  40b7ec:	b	40b7a8 <ferror@plt+0x8ed8>
  40b7f0:	ldr	w3, [x19]
  40b7f4:	ldr	x0, [x19, #24]
  40b7f8:	cbz	x0, 40b80c <ferror@plt+0x8f3c>
  40b7fc:	ldr	w0, [x0, #4]
  40b800:	cbz	w0, 40b80c <ferror@plt+0x8f3c>
  40b804:	add	w3, w3, #0x3
  40b808:	b	40b810 <ferror@plt+0x8f40>
  40b80c:	add	w3, w3, #0x2
  40b810:	cmp	w3, w23
  40b814:	add	w4, w20, w22
  40b818:	csel	w3, w3, w23, le
  40b81c:	mov	w2, w20
  40b820:	mov	x1, x25
  40b824:	mov	x0, x24
  40b828:	bl	40b5a8 <ferror@plt+0x8cd8>
  40b82c:	add	w22, w22, w0
  40b830:	ldr	w1, [x19]
  40b834:	mov	x0, x21
  40b838:	bl	40c0cc <ferror@plt+0x97fc>
  40b83c:	cbz	x0, 40b874 <ferror@plt+0x8fa4>
  40b840:	ldr	x19, [x0, #8]
  40b844:	cbz	x19, 40b85c <ferror@plt+0x8f8c>
  40b848:	ldr	w20, [x19]
  40b84c:	sub	w20, w20, #0x3
  40b850:	cmp	w20, #0x0
  40b854:	csel	w20, w20, w26, gt
  40b858:	b	40b7bc <ferror@plt+0x8eec>
  40b85c:	ldp	x19, x20, [sp, #16]
  40b860:	b	40b878 <ferror@plt+0x8fa8>
  40b864:	add	x1, sp, #0x5f
  40b868:	mov	x0, x24
  40b86c:	bl	40a798 <ferror@plt+0x7ec8>
  40b870:	b	40b878 <ferror@plt+0x8fa8>
  40b874:	ldp	x19, x20, [sp, #16]
  40b878:	ldp	x21, x22, [sp, #32]
  40b87c:	ldp	x23, x24, [sp, #48]
  40b880:	ldp	x25, x26, [sp, #64]
  40b884:	ldp	x29, x30, [sp], #96
  40b888:	ret
  40b88c:	ldp	x19, x20, [sp, #16]
  40b890:	b	40b878 <ferror@plt+0x8fa8>
  40b894:	stp	x29, x30, [sp, #-48]!
  40b898:	mov	x29, sp
  40b89c:	stp	x19, x20, [sp, #16]
  40b8a0:	stp	x21, x22, [sp, #32]
  40b8a4:	mov	x20, x0
  40b8a8:	mov	w21, w1
  40b8ac:	bl	40b184 <ferror@plt+0x88b4>
  40b8b0:	mov	x19, x0
  40b8b4:	cbz	x0, 40b8cc <ferror@plt+0x8ffc>
  40b8b8:	mov	x0, x19
  40b8bc:	ldp	x19, x20, [sp, #16]
  40b8c0:	ldp	x21, x22, [sp, #32]
  40b8c4:	ldp	x29, x30, [sp], #48
  40b8c8:	ret
  40b8cc:	mov	x0, #0x28                  	// #40
  40b8d0:	bl	447868 <_obstack_memory_used@@Base+0x8fc>
  40b8d4:	mov	x19, x0
  40b8d8:	mov	w2, w21
  40b8dc:	ldr	x1, [x20]
  40b8e0:	bl	40ab0c <ferror@plt+0x823c>
  40b8e4:	ldr	x22, [x19, #8]
  40b8e8:	cbz	x22, 40b940 <ferror@plt+0x9070>
  40b8ec:	mov	w1, w21
  40b8f0:	add	x0, x20, #0x8
  40b8f4:	bl	40bf24 <ferror@plt+0x9654>
  40b8f8:	ldr	x0, [x20, #8]
  40b8fc:	cbz	x0, 40b998 <ferror@plt+0x90c8>
  40b900:	ldr	x2, [x20, #16]
  40b904:	mov	w1, w21
  40b908:	ldr	w0, [x0]
  40b90c:	blr	x2
  40b910:	mov	w22, w0
  40b914:	ldr	x0, [x20, #8]
  40b918:	cmp	x0, #0x0
  40b91c:	ccmp	w22, #0x0, #0x0, ne  // ne = any
  40b920:	b.ne	40b95c <ferror@plt+0x908c>  // b.any
  40b924:	ldr	x1, [x20, #32]
  40b928:	cbz	x1, 40b934 <ferror@plt+0x9064>
  40b92c:	ldr	x0, [x0, #8]
  40b930:	blr	x1
  40b934:	ldr	x0, [x20, #8]
  40b938:	str	x19, [x0, #8]
  40b93c:	b	40b8b8 <ferror@plt+0x8fe8>
  40b940:	mov	x0, x19
  40b944:	bl	40a818 <ferror@plt+0x7f48>
  40b948:	mov	x1, #0x28                  	// #40
  40b94c:	mov	x0, x19
  40b950:	bl	447628 <_obstack_memory_used@@Base+0x6bc>
  40b954:	mov	x19, x22
  40b958:	b	40b8b8 <ferror@plt+0x8fe8>
  40b95c:	mov	x0, #0x28                  	// #40
  40b960:	bl	447868 <_obstack_memory_used@@Base+0x8fc>
  40b964:	str	w21, [x0]
  40b968:	str	x19, [x0, #8]
  40b96c:	ldr	x1, [x20, #8]
  40b970:	cbz	x1, 40b98c <ferror@plt+0x90bc>
  40b974:	tbz	w22, #31, 40b9b0 <ferror@plt+0x90e0>
  40b978:	str	x1, [x0, #16]
  40b97c:	ldr	x2, [x1, #24]
  40b980:	str	x2, [x0, #24]
  40b984:	str	xzr, [x1, #24]
  40b988:	b	40b9c0 <ferror@plt+0x90f0>
  40b98c:	str	xzr, [x0, #24]
  40b990:	str	xzr, [x0, #16]
  40b994:	b	40b9c0 <ferror@plt+0x90f0>
  40b998:	mov	x0, #0x28                  	// #40
  40b99c:	bl	447868 <_obstack_memory_used@@Base+0x8fc>
  40b9a0:	str	w21, [x0]
  40b9a4:	str	x19, [x0, #8]
  40b9a8:	ldr	x1, [x20, #8]
  40b9ac:	cbz	x1, 40b98c <ferror@plt+0x90bc>
  40b9b0:	str	x1, [x0, #24]
  40b9b4:	ldr	x2, [x1, #16]
  40b9b8:	str	x2, [x0, #16]
  40b9bc:	str	xzr, [x1, #16]
  40b9c0:	str	x0, [x20, #8]
  40b9c4:	b	40b8b8 <ferror@plt+0x8fe8>
  40b9c8:	stp	x29, x30, [sp, #-48]!
  40b9cc:	mov	x29, sp
  40b9d0:	stp	x19, x20, [sp, #16]
  40b9d4:	stp	x21, x22, [sp, #32]
  40b9d8:	mov	w19, w2
  40b9dc:	mov	w20, w3
  40b9e0:	mov	x21, x4
  40b9e4:	mov	w22, w5
  40b9e8:	bl	40b894 <ferror@plt+0x8fc4>
  40b9ec:	cbz	x0, 40ba18 <ferror@plt+0x9148>
  40b9f0:	mov	w4, w22
  40b9f4:	mov	x3, x21
  40b9f8:	mov	w2, w20
  40b9fc:	mov	w1, w19
  40ba00:	bl	40ab78 <ferror@plt+0x82a8>
  40ba04:	and	w0, w0, #0xff
  40ba08:	ldp	x19, x20, [sp, #16]
  40ba0c:	ldp	x21, x22, [sp, #32]
  40ba10:	ldp	x29, x30, [sp], #48
  40ba14:	ret
  40ba18:	mov	w0, #0x0                   	// #0
  40ba1c:	b	40ba08 <ferror@plt+0x9138>
  40ba20:	stp	x29, x30, [sp, #-128]!
  40ba24:	mov	x29, sp
  40ba28:	stp	x19, x20, [sp, #16]
  40ba2c:	stp	x21, x22, [sp, #32]
  40ba30:	stp	x23, x24, [sp, #48]
  40ba34:	mov	x21, x0
  40ba38:	mov	x19, x1
  40ba3c:	add	x8, sp, #0x60
  40ba40:	ldr	w0, [x1]
  40ba44:	bl	411d34 <ferror@plt+0xf464>
  40ba48:	ldr	x20, [sp, #96]
  40ba4c:	ldr	w22, [sp, #104]
  40ba50:	ldr	w23, [sp, #108]
  40ba54:	add	x8, sp, #0x40
  40ba58:	ldr	w0, [x19, #4]
  40ba5c:	bl	411d34 <ferror@plt+0xf464>
  40ba60:	ldr	x1, [sp, #64]
  40ba64:	mov	w0, #0x0                   	// #0
  40ba68:	cmp	x1, x20
  40ba6c:	b.eq	40ba84 <ferror@plt+0x91b4>  // b.none
  40ba70:	ldp	x19, x20, [sp, #16]
  40ba74:	ldp	x21, x22, [sp, #32]
  40ba78:	ldp	x23, x24, [sp, #48]
  40ba7c:	ldp	x29, x30, [sp], #128
  40ba80:	ret
  40ba84:	ldr	w24, [sp, #76]
  40ba88:	cmp	w23, #0x0
  40ba8c:	ldr	w0, [sp, #72]
  40ba90:	ccmp	w0, w22, #0x0, ne  // ne = any
  40ba94:	mov	w0, #0x0                   	// #0
  40ba98:	ccmp	w24, #0x0, #0x4, eq  // eq = none
  40ba9c:	b.eq	40ba70 <ferror@plt+0x91a0>  // b.none
  40baa0:	mov	x1, x20
  40baa4:	mov	x0, x21
  40baa8:	bl	40b038 <ferror@plt+0x8768>
  40baac:	mov	x6, x0
  40bab0:	ldrb	w0, [x21]
  40bab4:	cbz	w0, 40ba70 <ferror@plt+0x91a0>
  40bab8:	ldr	w5, [x19, #16]
  40babc:	ldr	x4, [x19, #8]
  40bac0:	mov	w3, w24
  40bac4:	mov	w2, w23
  40bac8:	mov	w1, w22
  40bacc:	mov	x0, x6
  40bad0:	bl	40b9c8 <ferror@plt+0x90f8>
  40bad4:	and	w0, w0, #0xff
  40bad8:	b	40ba70 <ferror@plt+0x91a0>
  40badc:	stp	x29, x30, [sp, #-48]!
  40bae0:	mov	x29, sp
  40bae4:	str	x21, [sp, #32]
  40bae8:	mov	x21, x0
  40baec:	ldrb	w0, [x0]
  40baf0:	cbz	w0, 40bb74 <ferror@plt+0x92a4>
  40baf4:	stp	x19, x20, [sp, #16]
  40baf8:	mov	x20, x1
  40bafc:	ldrb	w0, [x1, #160]
  40bb00:	cbnz	w0, 40bb14 <ferror@plt+0x9244>
  40bb04:	ldr	w0, [x1, #120]
  40bb08:	cbz	w0, 40bb80 <ferror@plt+0x92b0>
  40bb0c:	mov	w19, #0x0                   	// #0
  40bb10:	b	40bb3c <ferror@plt+0x926c>
  40bb14:	strb	wzr, [x21]
  40bb18:	ldp	x19, x20, [sp, #16]
  40bb1c:	b	40bb74 <ferror@plt+0x92a4>
  40bb20:	add	x2, x20, w19, sxtw #3
  40bb24:	add	x2, x2, #0x80
  40bb28:	b	40bb54 <ferror@plt+0x9284>
  40bb2c:	add	w19, w19, #0x1
  40bb30:	ldr	w0, [x20, #120]
  40bb34:	cmp	w0, w19
  40bb38:	b.ls	40bb70 <ferror@plt+0x92a0>  // b.plast
  40bb3c:	cmp	w19, #0x1
  40bb40:	b.le	40bb20 <ferror@plt+0x9250>
  40bb44:	sbfiz	x2, x19, #3, #32
  40bb48:	sub	x0, x2, #0x10
  40bb4c:	ldr	x2, [x20, #152]
  40bb50:	add	x2, x2, x0
  40bb54:	ldr	x1, [x2]
  40bb58:	mov	x0, x21
  40bb5c:	bl	40ba20 <ferror@plt+0x9150>
  40bb60:	and	w2, w0, #0xff
  40bb64:	cbnz	w2, 40bb2c <ferror@plt+0x925c>
  40bb68:	strb	wzr, [x21]
  40bb6c:	b	40bb2c <ferror@plt+0x925c>
  40bb70:	ldp	x19, x20, [sp, #16]
  40bb74:	ldr	x21, [sp, #32]
  40bb78:	ldp	x29, x30, [sp], #48
  40bb7c:	ret
  40bb80:	ldp	x19, x20, [sp, #16]
  40bb84:	b	40bb74 <ferror@plt+0x92a4>
  40bb88:	stp	x29, x30, [sp, #-112]!
  40bb8c:	mov	x29, sp
  40bb90:	stp	x19, x20, [sp, #16]
  40bb94:	mov	x19, x0
  40bb98:	ldrb	w0, [x0]
  40bb9c:	cbz	w0, 40bbe8 <ferror@plt+0x9318>
  40bba0:	and	w20, w1, #0xff
  40bba4:	mov	w1, #0x0                   	// #0
  40bba8:	add	x0, sp, #0x28
  40bbac:	bl	40c5cc <ferror@plt+0x9cfc>
  40bbb0:	mov	w2, w20
  40bbb4:	add	x1, sp, #0x28
  40bbb8:	mov	x0, x19
  40bbbc:	bl	40a6f0 <ferror@plt+0x7e20>
  40bbc0:	add	x0, sp, #0x28
  40bbc4:	bl	40c658 <ferror@plt+0x9d88>
  40bbc8:	bl	447178 <_obstack_memory_used@@Base+0x20c>
  40bbcc:	mov	x19, x0
  40bbd0:	add	x0, sp, #0x28
  40bbd4:	bl	40c468 <ferror@plt+0x9b98>
  40bbd8:	mov	x0, x19
  40bbdc:	ldp	x19, x20, [sp, #16]
  40bbe0:	ldp	x29, x30, [sp], #112
  40bbe4:	ret
  40bbe8:	mov	x19, #0x0                   	// #0
  40bbec:	b	40bbd8 <ferror@plt+0x9308>
  40bbf0:	stp	x29, x30, [sp, #-112]!
  40bbf4:	mov	x29, sp
  40bbf8:	str	x19, [sp, #16]
  40bbfc:	mov	x19, x0
  40bc00:	mov	w1, #0x0                   	// #0
  40bc04:	add	x0, sp, #0x28
  40bc08:	bl	40c5cc <ferror@plt+0x9cfc>
  40bc0c:	add	x1, sp, #0x28
  40bc10:	mov	x0, x19
  40bc14:	bl	40b24c <ferror@plt+0x897c>
  40bc18:	and	w0, w0, #0xff
  40bc1c:	mov	x19, #0x0                   	// #0
  40bc20:	cbz	w0, 40bc34 <ferror@plt+0x9364>
  40bc24:	add	x0, sp, #0x28
  40bc28:	bl	40c658 <ferror@plt+0x9d88>
  40bc2c:	bl	447178 <_obstack_memory_used@@Base+0x20c>
  40bc30:	mov	x19, x0
  40bc34:	add	x0, sp, #0x28
  40bc38:	bl	40c468 <ferror@plt+0x9b98>
  40bc3c:	mov	x0, x19
  40bc40:	ldr	x19, [sp, #16]
  40bc44:	ldp	x29, x30, [sp], #112
  40bc48:	ret
  40bc4c:	ldrb	w2, [x0]
  40bc50:	cbz	w2, 40bc6c <ferror@plt+0x939c>
  40bc54:	stp	x29, x30, [sp, #-16]!
  40bc58:	mov	x29, sp
  40bc5c:	bl	40b038 <ferror@plt+0x8768>
  40bc60:	bl	40bbf0 <ferror@plt+0x9320>
  40bc64:	ldp	x29, x30, [sp], #16
  40bc68:	ret
  40bc6c:	mov	x0, #0x0                   	// #0
  40bc70:	ret
  40bc74:	cbz	x1, 40bd78 <ferror@plt+0x94a8>
  40bc78:	stp	x29, x30, [sp, #-64]!
  40bc7c:	mov	x29, sp
  40bc80:	stp	x19, x20, [sp, #16]
  40bc84:	stp	x21, x22, [sp, #32]
  40bc88:	str	x23, [sp, #48]
  40bc8c:	mov	x22, x0
  40bc90:	mov	x19, x1
  40bc94:	ldr	x1, [x0, #16]
  40bc98:	cbz	x1, 40bca4 <ferror@plt+0x93d4>
  40bc9c:	ldr	w0, [x19]
  40bca0:	blr	x1
  40bca4:	ldr	x1, [x22, #24]
  40bca8:	cbz	x1, 40bcb4 <ferror@plt+0x93e4>
  40bcac:	ldr	x0, [x19, #8]
  40bcb0:	blr	x1
  40bcb4:	str	xzr, [x19, #32]
  40bcb8:	mov	x21, #0x0                   	// #0
  40bcbc:	mov	x23, #0x28                  	// #40
  40bcc0:	b	40bcfc <ferror@plt+0x942c>
  40bcc4:	cbz	x21, 40bd64 <ferror@plt+0x9494>
  40bcc8:	mov	x0, x21
  40bccc:	mov	x21, x20
  40bcd0:	mov	x20, x0
  40bcd4:	b	40bcf8 <ferror@plt+0x9428>
  40bcd8:	ldr	x0, [x19, #24]
  40bcdc:	str	x21, [x0, #32]
  40bce0:	ldr	x21, [x19, #24]
  40bce4:	ldr	x20, [x19, #32]
  40bce8:	mov	x1, x23
  40bcec:	mov	x0, x19
  40bcf0:	bl	447628 <_obstack_memory_used@@Base+0x6bc>
  40bcf4:	cbz	x20, 40bcc4 <ferror@plt+0x93f4>
  40bcf8:	mov	x19, x20
  40bcfc:	ldr	x0, [x19, #16]
  40bd00:	cbz	x0, 40bd34 <ferror@plt+0x9464>
  40bd04:	ldr	x1, [x22, #16]
  40bd08:	cbz	x1, 40bd14 <ferror@plt+0x9444>
  40bd0c:	ldr	w0, [x0]
  40bd10:	blr	x1
  40bd14:	ldr	x1, [x22, #24]
  40bd18:	cbz	x1, 40bd28 <ferror@plt+0x9458>
  40bd1c:	ldr	x0, [x19, #16]
  40bd20:	ldr	x0, [x0, #8]
  40bd24:	blr	x1
  40bd28:	ldr	x0, [x19, #16]
  40bd2c:	str	x21, [x0, #32]
  40bd30:	ldr	x21, [x19, #16]
  40bd34:	ldr	x0, [x19, #24]
  40bd38:	cbz	x0, 40bce4 <ferror@plt+0x9414>
  40bd3c:	ldr	x1, [x22, #16]
  40bd40:	cbz	x1, 40bd4c <ferror@plt+0x947c>
  40bd44:	ldr	w0, [x0]
  40bd48:	blr	x1
  40bd4c:	ldr	x1, [x22, #24]
  40bd50:	cbz	x1, 40bcd8 <ferror@plt+0x9408>
  40bd54:	ldr	x0, [x19, #24]
  40bd58:	ldr	x0, [x0, #8]
  40bd5c:	blr	x1
  40bd60:	b	40bcd8 <ferror@plt+0x9408>
  40bd64:	ldp	x19, x20, [sp, #16]
  40bd68:	ldp	x21, x22, [sp, #32]
  40bd6c:	ldr	x23, [sp, #48]
  40bd70:	ldp	x29, x30, [sp], #64
  40bd74:	ret
  40bd78:	ret
  40bd7c:	stp	x29, x30, [sp, #-64]!
  40bd80:	mov	x29, sp
  40bd84:	stp	x21, x22, [sp, #32]
  40bd88:	str	x23, [sp, #48]
  40bd8c:	mov	x22, x0
  40bd90:	mov	x23, x1
  40bd94:	ldr	x0, [x0]
  40bd98:	cbz	x0, 40be80 <ferror@plt+0x95b0>
  40bd9c:	stp	x19, x20, [sp, #16]
  40bda0:	b	40bdec <ferror@plt+0x951c>
  40bda4:	ldr	x19, [x21, #16]
  40bda8:	b	40be10 <ferror@plt+0x9540>
  40bdac:	ldr	x1, [x19, #16]
  40bdb0:	cbz	x1, 40be68 <ferror@plt+0x9598>
  40bdb4:	lsr	w2, w20, #31
  40bdb8:	lsr	w1, w0, #31
  40bdbc:	cmp	w2, #0x0
  40bdc0:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40bdc4:	b.eq	40becc <ferror@plt+0x95fc>  // b.none
  40bdc8:	ldr	x2, [x19, #16]
  40bdcc:	ldr	x0, [x2, #24]
  40bdd0:	str	x19, [x2, #24]
  40bdd4:	str	x0, [x19, #16]
  40bdd8:	str	x2, [x21, #16]
  40bddc:	ldr	x0, [x2, #24]
  40bde0:	str	x21, [x2, #24]
  40bde4:	str	x0, [x21, #16]
  40bde8:	str	x2, [x22]
  40bdec:	ldr	x21, [x22]
  40bdf0:	ldr	x2, [x22, #8]
  40bdf4:	ldr	x1, [x21]
  40bdf8:	mov	x0, x23
  40bdfc:	blr	x2
  40be00:	mov	w20, w0
  40be04:	cbz	w0, 40bf14 <ferror@plt+0x9644>
  40be08:	tbnz	w0, #31, 40bda4 <ferror@plt+0x94d4>
  40be0c:	ldr	x19, [x21, #24]
  40be10:	cbz	x19, 40bf1c <ferror@plt+0x964c>
  40be14:	ldr	x2, [x22, #8]
  40be18:	ldr	x1, [x19]
  40be1c:	mov	x0, x23
  40be20:	blr	x2
  40be24:	cbz	w0, 40be68 <ferror@plt+0x9598>
  40be28:	tbnz	w0, #31, 40bdac <ferror@plt+0x94dc>
  40be2c:	ldr	x2, [x19, #24]
  40be30:	cbz	x2, 40be68 <ferror@plt+0x9598>
  40be34:	cmp	w20, #0x0
  40be38:	b.gt	40bea8 <ferror@plt+0x95d8>
  40be3c:	tbz	w20, #31, 40bdec <ferror@plt+0x951c>
  40be40:	ldr	x0, [x19, #24]
  40be44:	ldr	x1, [x0, #16]
  40be48:	str	x19, [x0, #16]
  40be4c:	str	x1, [x19, #24]
  40be50:	str	x0, [x21, #16]
  40be54:	ldr	x1, [x0, #24]
  40be58:	str	x21, [x0, #24]
  40be5c:	str	x1, [x21, #16]
  40be60:	str	x0, [x22]
  40be64:	b	40bdec <ferror@plt+0x951c>
  40be68:	tbnz	w20, #31, 40be90 <ferror@plt+0x95c0>
  40be6c:	ldr	x0, [x19, #16]
  40be70:	str	x21, [x19, #16]
  40be74:	str	x0, [x21, #24]
  40be78:	str	x19, [x22]
  40be7c:	ldp	x19, x20, [sp, #16]
  40be80:	ldp	x21, x22, [sp, #32]
  40be84:	ldr	x23, [sp, #48]
  40be88:	ldp	x29, x30, [sp], #64
  40be8c:	ret
  40be90:	ldr	x0, [x19, #24]
  40be94:	str	x21, [x19, #24]
  40be98:	str	x0, [x21, #16]
  40be9c:	str	x19, [x22]
  40bea0:	ldp	x19, x20, [sp, #16]
  40bea4:	b	40be80 <ferror@plt+0x95b0>
  40bea8:	ldr	x0, [x2, #16]
  40beac:	str	x19, [x2, #16]
  40beb0:	str	x0, [x19, #24]
  40beb4:	str	x2, [x21, #24]
  40beb8:	ldr	x0, [x2, #16]
  40bebc:	str	x21, [x2, #16]
  40bec0:	str	x0, [x21, #24]
  40bec4:	str	x2, [x22]
  40bec8:	b	40bdec <ferror@plt+0x951c>
  40becc:	cmp	w20, #0x0
  40bed0:	cset	w3, gt
  40bed4:	cmp	w0, #0x0
  40bed8:	ccmp	w2, #0x0, #0x4, gt
  40bedc:	b.ne	40be40 <ferror@plt+0x9570>  // b.any
  40bee0:	cmp	w3, #0x0
  40bee4:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40bee8:	b.eq	40bdec <ferror@plt+0x951c>  // b.none
  40beec:	ldr	x0, [x19, #16]
  40bef0:	ldr	x1, [x0, #24]
  40bef4:	str	x19, [x0, #24]
  40bef8:	str	x1, [x19, #16]
  40befc:	str	x0, [x21, #24]
  40bf00:	ldr	x1, [x0, #16]
  40bf04:	str	x21, [x0, #16]
  40bf08:	str	x1, [x21, #24]
  40bf0c:	str	x0, [x22]
  40bf10:	b	40bdec <ferror@plt+0x951c>
  40bf14:	ldp	x19, x20, [sp, #16]
  40bf18:	b	40be80 <ferror@plt+0x95b0>
  40bf1c:	ldp	x19, x20, [sp, #16]
  40bf20:	b	40be80 <ferror@plt+0x95b0>
  40bf24:	stp	x29, x30, [sp, #-64]!
  40bf28:	mov	x29, sp
  40bf2c:	stp	x21, x22, [sp, #32]
  40bf30:	str	x23, [sp, #48]
  40bf34:	mov	x22, x0
  40bf38:	mov	w23, w1
  40bf3c:	ldr	x0, [x0]
  40bf40:	cbz	x0, 40c028 <ferror@plt+0x9758>
  40bf44:	stp	x19, x20, [sp, #16]
  40bf48:	b	40bf94 <ferror@plt+0x96c4>
  40bf4c:	ldr	x19, [x21, #16]
  40bf50:	b	40bfb8 <ferror@plt+0x96e8>
  40bf54:	ldr	x1, [x19, #16]
  40bf58:	cbz	x1, 40c010 <ferror@plt+0x9740>
  40bf5c:	lsr	w2, w20, #31
  40bf60:	lsr	w1, w0, #31
  40bf64:	cmp	w2, #0x0
  40bf68:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40bf6c:	b.eq	40c074 <ferror@plt+0x97a4>  // b.none
  40bf70:	ldr	x2, [x19, #16]
  40bf74:	ldr	x0, [x2, #24]
  40bf78:	str	x19, [x2, #24]
  40bf7c:	str	x0, [x19, #16]
  40bf80:	str	x2, [x21, #16]
  40bf84:	ldr	x0, [x2, #24]
  40bf88:	str	x21, [x2, #24]
  40bf8c:	str	x0, [x21, #16]
  40bf90:	str	x2, [x22]
  40bf94:	ldr	x21, [x22]
  40bf98:	ldr	x2, [x22, #8]
  40bf9c:	ldr	w1, [x21]
  40bfa0:	mov	w0, w23
  40bfa4:	blr	x2
  40bfa8:	mov	w20, w0
  40bfac:	cbz	w0, 40c0bc <ferror@plt+0x97ec>
  40bfb0:	tbnz	w0, #31, 40bf4c <ferror@plt+0x967c>
  40bfb4:	ldr	x19, [x21, #24]
  40bfb8:	cbz	x19, 40c0c4 <ferror@plt+0x97f4>
  40bfbc:	ldr	x2, [x22, #8]
  40bfc0:	ldr	w1, [x19]
  40bfc4:	mov	w0, w23
  40bfc8:	blr	x2
  40bfcc:	cbz	w0, 40c010 <ferror@plt+0x9740>
  40bfd0:	tbnz	w0, #31, 40bf54 <ferror@plt+0x9684>
  40bfd4:	ldr	x2, [x19, #24]
  40bfd8:	cbz	x2, 40c010 <ferror@plt+0x9740>
  40bfdc:	cmp	w20, #0x0
  40bfe0:	b.gt	40c050 <ferror@plt+0x9780>
  40bfe4:	tbz	w20, #31, 40bf94 <ferror@plt+0x96c4>
  40bfe8:	ldr	x0, [x19, #24]
  40bfec:	ldr	x1, [x0, #16]
  40bff0:	str	x19, [x0, #16]
  40bff4:	str	x1, [x19, #24]
  40bff8:	str	x0, [x21, #16]
  40bffc:	ldr	x1, [x0, #24]
  40c000:	str	x21, [x0, #24]
  40c004:	str	x1, [x21, #16]
  40c008:	str	x0, [x22]
  40c00c:	b	40bf94 <ferror@plt+0x96c4>
  40c010:	tbnz	w20, #31, 40c038 <ferror@plt+0x9768>
  40c014:	ldr	x0, [x19, #16]
  40c018:	str	x21, [x19, #16]
  40c01c:	str	x0, [x21, #24]
  40c020:	str	x19, [x22]
  40c024:	ldp	x19, x20, [sp, #16]
  40c028:	ldp	x21, x22, [sp, #32]
  40c02c:	ldr	x23, [sp, #48]
  40c030:	ldp	x29, x30, [sp], #64
  40c034:	ret
  40c038:	ldr	x0, [x19, #24]
  40c03c:	str	x21, [x19, #24]
  40c040:	str	x0, [x21, #16]
  40c044:	str	x19, [x22]
  40c048:	ldp	x19, x20, [sp, #16]
  40c04c:	b	40c028 <ferror@plt+0x9758>
  40c050:	ldr	x0, [x2, #16]
  40c054:	str	x19, [x2, #16]
  40c058:	str	x0, [x19, #24]
  40c05c:	str	x2, [x21, #24]
  40c060:	ldr	x0, [x2, #16]
  40c064:	str	x21, [x2, #16]
  40c068:	str	x0, [x21, #24]
  40c06c:	str	x2, [x22]
  40c070:	b	40bf94 <ferror@plt+0x96c4>
  40c074:	cmp	w20, #0x0
  40c078:	cset	w3, gt
  40c07c:	cmp	w0, #0x0
  40c080:	ccmp	w2, #0x0, #0x4, gt
  40c084:	b.ne	40bfe8 <ferror@plt+0x9718>  // b.any
  40c088:	cmp	w3, #0x0
  40c08c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40c090:	b.eq	40bf94 <ferror@plt+0x96c4>  // b.none
  40c094:	ldr	x0, [x19, #16]
  40c098:	ldr	x1, [x0, #24]
  40c09c:	str	x19, [x0, #24]
  40c0a0:	str	x1, [x19, #16]
  40c0a4:	str	x0, [x21, #24]
  40c0a8:	ldr	x1, [x0, #16]
  40c0ac:	str	x21, [x0, #16]
  40c0b0:	str	x1, [x21, #24]
  40c0b4:	str	x0, [x22]
  40c0b8:	b	40bf94 <ferror@plt+0x96c4>
  40c0bc:	ldp	x19, x20, [sp, #16]
  40c0c0:	b	40c028 <ferror@plt+0x9758>
  40c0c4:	ldp	x19, x20, [sp, #16]
  40c0c8:	b	40c028 <ferror@plt+0x9758>
  40c0cc:	stp	x29, x30, [sp, #-32]!
  40c0d0:	mov	x29, sp
  40c0d4:	stp	x19, x20, [sp, #16]
  40c0d8:	mov	x19, x0
  40c0dc:	ldr	x0, [x0]
  40c0e0:	cbz	x0, 40c130 <ferror@plt+0x9860>
  40c0e4:	mov	w20, w1
  40c0e8:	mov	x0, x19
  40c0ec:	bl	40bf24 <ferror@plt+0x9654>
  40c0f0:	ldr	x0, [x19]
  40c0f4:	ldr	x2, [x19, #8]
  40c0f8:	mov	w1, w20
  40c0fc:	ldr	w0, [x0]
  40c100:	blr	x2
  40c104:	cmp	w0, #0x0
  40c108:	b.gt	40c12c <ferror@plt+0x985c>
  40c10c:	ldr	x0, [x19]
  40c110:	ldr	x1, [x0, #24]
  40c114:	mov	x0, x1
  40c118:	cbz	x1, 40c130 <ferror@plt+0x9860>
  40c11c:	mov	x0, x1
  40c120:	ldr	x1, [x1, #16]
  40c124:	cbnz	x1, 40c11c <ferror@plt+0x984c>
  40c128:	b	40c130 <ferror@plt+0x9860>
  40c12c:	ldr	x0, [x19]
  40c130:	ldp	x19, x20, [sp, #16]
  40c134:	ldp	x29, x30, [sp], #32
  40c138:	ret
  40c13c:	stp	x29, x30, [sp, #-16]!
  40c140:	mov	x29, sp
  40c144:	mov	x0, x1
  40c148:	mov	x1, x2
  40c14c:	ldrb	w2, [x2, #8]
  40c150:	ldr	x1, [x1]
  40c154:	bl	40b6e0 <ferror@plt+0x8e10>
  40c158:	mov	w0, #0x0                   	// #0
  40c15c:	ldp	x29, x30, [sp], #16
  40c160:	ret
  40c164:	ldrb	w7, [x0]
  40c168:	cbz	x1, 40c1a8 <ferror@plt+0x98d8>
  40c16c:	mov	w4, w7
  40c170:	tbz	w7, #7, 40c288 <ferror@plt+0x99b8>
  40c174:	mov	x3, #0x0                   	// #0
  40c178:	mov	x6, x3
  40c17c:	add	x3, x3, #0x1
  40c180:	lsl	w4, w4, #1
  40c184:	tbnz	w4, #7, 40c178 <ferror@plt+0x98a8>
  40c188:	sub	x6, x6, #0x1
  40c18c:	cmp	x6, #0x4
  40c190:	ccmp	x1, x3, #0x0, ls  // ls = plast
  40c194:	b.cs	40c1c8 <ferror@plt+0x98f8>  // b.hs, b.nlast
  40c198:	mov	w0, #0xffffffff            	// #-1
  40c19c:	str	w0, [x2]
  40c1a0:	mov	w0, #0x0                   	// #0
  40c1a4:	ret
  40c1a8:	stp	x29, x30, [sp, #-16]!
  40c1ac:	mov	x29, sp
  40c1b0:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  40c1b4:	add	x2, x2, #0xf98
  40c1b8:	mov	w1, #0x71b                 	// #1819
  40c1bc:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40c1c0:	add	x0, x0, #0xfb0
  40c1c4:	bl	4062a0 <ferror@plt+0x39d0>
  40c1c8:	mov	w5, #0x7                   	// #7
  40c1cc:	sub	w1, w5, w3
  40c1d0:	mov	w5, #0x1                   	// #1
  40c1d4:	lsl	w5, w5, w1
  40c1d8:	sub	w5, w5, #0x1
  40c1dc:	and	w5, w5, w7
  40c1e0:	mov	x1, #0x1                   	// #1
  40c1e4:	ldrb	w4, [x0, x1]
  40c1e8:	and	w6, w4, #0xc0
  40c1ec:	cmp	w6, #0x80
  40c1f0:	b.ne	40c26c <ferror@plt+0x999c>  // b.any
  40c1f4:	bfi	w4, w5, #6, #26
  40c1f8:	mov	w5, w4
  40c1fc:	add	x1, x1, #0x1
  40c200:	cmp	x3, x1
  40c204:	b.hi	40c1e4 <ferror@plt+0x9914>  // b.pmore
  40c208:	cmp	w4, #0x7f
  40c20c:	b.ls	40c25c <ferror@plt+0x998c>  // b.plast
  40c210:	cmp	w4, #0x7ff
  40c214:	ccmp	x3, #0x2, #0x0, ls  // ls = plast
  40c218:	b.hi	40c25c <ferror@plt+0x998c>  // b.pmore
  40c21c:	mov	w0, #0xffff                	// #65535
  40c220:	cmp	w4, w0
  40c224:	ccmp	x3, #0x3, #0x0, ls  // ls = plast
  40c228:	b.hi	40c25c <ferror@plt+0x998c>  // b.pmore
  40c22c:	mov	w0, #0x1fffff              	// #2097151
  40c230:	cmp	w4, w0
  40c234:	ccmp	x3, #0x4, #0x0, ls  // ls = plast
  40c238:	b.hi	40c25c <ferror@plt+0x998c>  // b.pmore
  40c23c:	mov	w0, #0x3ffffff             	// #67108863
  40c240:	cmp	w4, w0
  40c244:	ccmp	x3, #0x6, #0x0, ls  // ls = plast
  40c248:	b.eq	40c25c <ferror@plt+0x998c>  // b.none
  40c24c:	sub	w0, w4, #0xd, lsl #12
  40c250:	sub	w0, w0, #0x800
  40c254:	cmp	w0, #0x7ff
  40c258:	b.hi	40c27c <ferror@plt+0x99ac>  // b.pmore
  40c25c:	mov	w0, #0xffffffff            	// #-1
  40c260:	str	w0, [x2]
  40c264:	mov	w0, #0x0                   	// #0
  40c268:	ret
  40c26c:	mov	w0, #0xffffffff            	// #-1
  40c270:	str	w0, [x2]
  40c274:	mov	w0, #0x0                   	// #0
  40c278:	ret
  40c27c:	str	w4, [x2]
  40c280:	mov	w0, w3
  40c284:	ret
  40c288:	str	w7, [x2]
  40c28c:	mov	w0, #0x1                   	// #1
  40c290:	ret
  40c294:	stp	x29, x30, [sp, #-32]!
  40c298:	mov	x29, sp
  40c29c:	stp	x19, x20, [sp, #16]
  40c2a0:	mov	x19, x0
  40c2a4:	ldr	w20, [x0, #40]
  40c2a8:	cmp	w20, #0x0
  40c2ac:	b.le	40c2bc <ferror@plt+0x99ec>
  40c2b0:	ldr	w0, [x0, #36]
  40c2b4:	cmp	w0, #0x1
  40c2b8:	b.hi	40c2cc <ferror@plt+0x99fc>  // b.pmore
  40c2bc:	str	w20, [x19, #28]
  40c2c0:	ldp	x19, x20, [sp, #16]
  40c2c4:	ldp	x29, x30, [sp], #32
  40c2c8:	ret
  40c2cc:	ldr	x0, [x19, #16]
  40c2d0:	mov	w1, #0x0                   	// #0
  40c2d4:	cbz	x0, 40c2e0 <ferror@plt+0x9a10>
  40c2d8:	bl	4022b0 <strlen@plt>
  40c2dc:	mov	w1, w0
  40c2e0:	sub	w1, w20, w1
  40c2e4:	add	w0, w20, #0x20
  40c2e8:	cmp	w1, #0x20
  40c2ec:	csel	w20, w0, w20, lt  // lt = tstop
  40c2f0:	str	w20, [x19, #28]
  40c2f4:	b	40c2c0 <ferror@plt+0x99f0>
  40c2f8:	stp	x29, x30, [sp, #-16]!
  40c2fc:	mov	x29, sp
  40c300:	ldr	x0, [x0, #32]
  40c304:	bl	42a3cc <ferror@plt+0x27afc>
  40c308:	ldp	x29, x30, [sp], #16
  40c30c:	ret
  40c310:	cbz	w1, 40c31c <ferror@plt+0x9a4c>
  40c314:	mov	w0, #0x0                   	// #0
  40c318:	ret
  40c31c:	stp	x29, x30, [sp, #-16]!
  40c320:	mov	x29, sp
  40c324:	ldr	x0, [x0, #32]
  40c328:	bl	42a1d0 <ferror@plt+0x27900>
  40c32c:	ldp	x29, x30, [sp], #16
  40c330:	ret
  40c334:	stp	x29, x30, [sp, #-48]!
  40c338:	mov	x29, sp
  40c33c:	stp	x19, x20, [sp, #16]
  40c340:	str	x21, [sp, #32]
  40c344:	mov	x19, x0
  40c348:	str	xzr, [x0]
  40c34c:	str	xzr, [x0, #8]
  40c350:	str	xzr, [x0, #16]
  40c354:	str	xzr, [x0, #24]
  40c358:	str	xzr, [x0, #32]
  40c35c:	str	xzr, [x0, #40]
  40c360:	str	xzr, [x0, #48]
  40c364:	str	xzr, [x0, #56]
  40c368:	str	xzr, [x0, #64]
  40c36c:	str	xzr, [x0, #72]
  40c370:	ldrb	w0, [x0, #80]
  40c374:	and	w0, w0, #0xfffffff8
  40c378:	strb	w0, [x19, #80]
  40c37c:	str	xzr, [x19, #88]
  40c380:	str	xzr, [x19, #96]
  40c384:	str	xzr, [x19, #104]
  40c388:	str	xzr, [x19, #112]
  40c38c:	str	xzr, [x19, #120]
  40c390:	str	xzr, [x19, #128]
  40c394:	str	xzr, [x19, #136]
  40c398:	str	xzr, [x19, #144]
  40c39c:	str	xzr, [x19, #152]
  40c3a0:	str	xzr, [x19, #160]
  40c3a4:	ldrb	w0, [x19, #168]
  40c3a8:	and	w0, w0, #0xfffffff8
  40c3ac:	strb	w0, [x19, #168]
  40c3b0:	str	x19, [x19, #176]
  40c3b4:	str	xzr, [x19, #184]
  40c3b8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  40c3bc:	ldr	x0, [x0, #1320]
  40c3c0:	str	x0, [x19, #192]
  40c3c4:	str	wzr, [x19, #200]
  40c3c8:	add	x1, x19, #0xcc
  40c3cc:	add	x2, x19, #0x14c
  40c3d0:	strb	wzr, [x1], #1
  40c3d4:	cmp	x1, x2
  40c3d8:	b.ne	40c3d0 <ferror@plt+0x9b00>  // b.any
  40c3dc:	mov	w0, #0x1                   	// #1
  40c3e0:	strb	w0, [x19, #332]
  40c3e4:	adrp	x21, 413000 <ferror@plt+0x10730>
  40c3e8:	add	x21, x21, #0xec0
  40c3ec:	adrp	x20, 413000 <ferror@plt+0x10730>
  40c3f0:	add	x20, x20, #0xe7c
  40c3f4:	mov	x4, x21
  40c3f8:	mov	x3, x20
  40c3fc:	mov	x2, #0x0                   	// #0
  40c400:	mov	x1, #0x0                   	// #0
  40c404:	mov	x0, x19
  40c408:	bl	446d40 <_obstack_begin@@Base>
  40c40c:	mov	x4, x21
  40c410:	mov	x3, x20
  40c414:	mov	x2, #0x0                   	// #0
  40c418:	mov	x1, #0x0                   	// #0
  40c41c:	add	x0, x19, #0x58
  40c420:	bl	446d40 <_obstack_begin@@Base>
  40c424:	ldp	x19, x20, [sp, #16]
  40c428:	ldr	x21, [sp, #32]
  40c42c:	ldp	x29, x30, [sp], #48
  40c430:	ret
  40c434:	stp	x29, x30, [sp, #-32]!
  40c438:	mov	x29, sp
  40c43c:	str	x19, [sp, #16]
  40c440:	mov	x19, x0
  40c444:	mov	x1, #0x0                   	// #0
  40c448:	add	x0, x0, #0x58
  40c44c:	bl	446eec <_obstack_free@@Base>
  40c450:	mov	x1, #0x0                   	// #0
  40c454:	mov	x0, x19
  40c458:	bl	446eec <_obstack_free@@Base>
  40c45c:	ldr	x19, [sp, #16]
  40c460:	ldp	x29, x30, [sp], #32
  40c464:	ret
  40c468:	stp	x29, x30, [sp, #-32]!
  40c46c:	mov	x29, sp
  40c470:	str	x19, [sp, #16]
  40c474:	mov	x19, x0
  40c478:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  40c47c:	add	x0, x0, #0xe8
  40c480:	str	x0, [x19]
  40c484:	ldr	x0, [x19, #56]
  40c488:	cbz	x0, 40c498 <ferror@plt+0x9bc8>
  40c48c:	ldr	x1, [x0]
  40c490:	ldr	x1, [x1, #8]
  40c494:	blr	x1
  40c498:	ldr	x0, [x19, #8]
  40c49c:	bl	40c434 <ferror@plt+0x9b64>
  40c4a0:	ldr	x0, [x19, #8]
  40c4a4:	bl	402690 <free@plt>
  40c4a8:	ldr	x0, [x19, #16]
  40c4ac:	bl	402690 <free@plt>
  40c4b0:	ldr	x19, [sp, #16]
  40c4b4:	ldp	x29, x30, [sp], #32
  40c4b8:	ret
  40c4bc:	stp	x29, x30, [sp, #-32]!
  40c4c0:	mov	x29, sp
  40c4c4:	str	x19, [sp, #16]
  40c4c8:	mov	x19, x0
  40c4cc:	bl	40c468 <ferror@plt+0x9b98>
  40c4d0:	mov	x1, #0x48                  	// #72
  40c4d4:	mov	x0, x19
  40c4d8:	bl	447628 <_obstack_memory_used@@Base+0x6bc>
  40c4dc:	ldr	x19, [sp, #16]
  40c4e0:	ldp	x29, x30, [sp], #32
  40c4e4:	ret
  40c4e8:	stp	x29, x30, [sp, #-16]!
  40c4ec:	mov	x29, sp
  40c4f0:	str	w1, [x0, #40]
  40c4f4:	bl	40c294 <ferror@plt+0x99c4>
  40c4f8:	ldp	x29, x30, [sp], #16
  40c4fc:	ret
  40c500:	stp	x29, x30, [sp, #-32]!
  40c504:	mov	x29, sp
  40c508:	str	x19, [sp, #16]
  40c50c:	mov	x19, x0
  40c510:	ldr	x0, [x0, #8]
  40c514:	ldr	x0, [x0, #176]
  40c518:	ldr	x1, [x0, #16]
  40c51c:	ldr	x2, [x0, #8]
  40c520:	cmp	x2, x1
  40c524:	b.cs	40c53c <ferror@plt+0x9c6c>  // b.hs, b.nlast
  40c528:	ldr	x2, [x0, #32]
  40c52c:	cmp	x2, x1
  40c530:	b.ls	40c53c <ferror@plt+0x9c6c>  // b.plast
  40c534:	str	x1, [x0, #24]
  40c538:	b	40c540 <ferror@plt+0x9c70>
  40c53c:	bl	446eec <_obstack_free@@Base>
  40c540:	ldr	x0, [x19, #8]
  40c544:	str	wzr, [x0, #200]
  40c548:	ldr	x19, [sp, #16]
  40c54c:	ldp	x29, x30, [sp], #32
  40c550:	ret
  40c554:	stp	x29, x30, [sp, #-32]!
  40c558:	mov	x29, sp
  40c55c:	stp	x19, x20, [sp, #16]
  40c560:	mov	x19, x0
  40c564:	mov	x20, x1
  40c568:	ldr	x0, [x0, #16]
  40c56c:	bl	402690 <free@plt>
  40c570:	str	x20, [x19, #16]
  40c574:	mov	x0, x19
  40c578:	bl	40c294 <ferror@plt+0x99c4>
  40c57c:	strb	wzr, [x19, #64]
  40c580:	str	wzr, [x19, #32]
  40c584:	ldp	x19, x20, [sp, #16]
  40c588:	ldp	x29, x30, [sp], #32
  40c58c:	ret
  40c590:	mov	x1, x0
  40c594:	ldr	x0, [x0, #16]
  40c598:	str	xzr, [x1, #16]
  40c59c:	ret
  40c5a0:	stp	x29, x30, [sp, #-32]!
  40c5a4:	mov	x29, sp
  40c5a8:	str	x19, [sp, #16]
  40c5ac:	mov	x19, x0
  40c5b0:	ldr	x0, [x0, #16]
  40c5b4:	cbz	x0, 40c5c0 <ferror@plt+0x9cf0>
  40c5b8:	bl	402690 <free@plt>
  40c5bc:	str	xzr, [x19, #16]
  40c5c0:	ldr	x19, [sp, #16]
  40c5c4:	ldp	x29, x30, [sp], #32
  40c5c8:	ret
  40c5cc:	stp	x29, x30, [sp, #-48]!
  40c5d0:	mov	x29, sp
  40c5d4:	stp	x19, x20, [sp, #16]
  40c5d8:	str	x21, [sp, #32]
  40c5dc:	mov	x19, x0
  40c5e0:	mov	w20, w1
  40c5e4:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  40c5e8:	add	x0, x0, #0xe8
  40c5ec:	str	x0, [x19]
  40c5f0:	mov	x1, #0x150                 	// #336
  40c5f4:	mov	x0, #0x1                   	// #1
  40c5f8:	bl	447084 <_obstack_memory_used@@Base+0x118>
  40c5fc:	mov	x21, x0
  40c600:	bl	40c334 <ferror@plt+0x9a64>
  40c604:	str	x21, [x19, #8]
  40c608:	str	xzr, [x19, #16]
  40c60c:	str	wzr, [x19, #24]
  40c610:	str	wzr, [x19, #28]
  40c614:	str	wzr, [x19, #32]
  40c618:	str	wzr, [x19, #36]
  40c61c:	str	xzr, [x19, #48]
  40c620:	str	xzr, [x19, #56]
  40c624:	strb	wzr, [x19, #64]
  40c628:	strb	wzr, [x19, #65]
  40c62c:	mov	w0, #0x1                   	// #1
  40c630:	strb	w0, [x19, #66]
  40c634:	strb	wzr, [x19, #67]
  40c638:	str	w20, [x19, #40]
  40c63c:	mov	x1, #0x0                   	// #0
  40c640:	mov	x0, x19
  40c644:	bl	40c554 <ferror@plt+0x9c84>
  40c648:	ldp	x19, x20, [sp, #16]
  40c64c:	ldr	x21, [sp, #32]
  40c650:	ldp	x29, x30, [sp], #48
  40c654:	ret
  40c658:	stp	x29, x30, [sp, #-32]!
  40c65c:	mov	x29, sp
  40c660:	stp	x19, x20, [sp, #16]
  40c664:	ldr	x20, [x0, #8]
  40c668:	ldr	x19, [x20, #176]
  40c66c:	ldr	x1, [x19, #32]
  40c670:	ldr	x0, [x19, #24]
  40c674:	cmp	x1, x0
  40c678:	b.eq	40c6a0 <ferror@plt+0x9dd0>  // b.none
  40c67c:	ldr	x0, [x19, #24]
  40c680:	add	x1, x0, #0x1
  40c684:	str	x1, [x19, #24]
  40c688:	strb	wzr, [x0]
  40c68c:	ldr	x0, [x20, #176]
  40c690:	ldr	x0, [x0, #16]
  40c694:	ldp	x19, x20, [sp, #16]
  40c698:	ldp	x29, x30, [sp], #32
  40c69c:	ret
  40c6a0:	mov	x1, #0x1                   	// #1
  40c6a4:	mov	x0, x19
  40c6a8:	bl	446d94 <_obstack_newchunk@@Base>
  40c6ac:	b	40c67c <ferror@plt+0x9dac>
  40c6b0:	stp	x29, x30, [sp, #-32]!
  40c6b4:	mov	x29, sp
  40c6b8:	str	x19, [sp, #16]
  40c6bc:	mov	x19, x0
  40c6c0:	bl	40c658 <ferror@plt+0x9d88>
  40c6c4:	ldr	x1, [x19, #8]
  40c6c8:	ldr	x1, [x1, #192]
  40c6cc:	bl	4022c0 <fputs@plt>
  40c6d0:	mov	x0, x19
  40c6d4:	bl	40c500 <ferror@plt+0x9c30>
  40c6d8:	ldr	x19, [sp, #16]
  40c6dc:	ldp	x29, x30, [sp], #32
  40c6e0:	ret
  40c6e4:	stp	x29, x30, [sp, #-32]!
  40c6e8:	mov	x29, sp
  40c6ec:	str	x19, [sp, #16]
  40c6f0:	mov	x19, x0
  40c6f4:	strb	wzr, [x0, #64]
  40c6f8:	str	wzr, [x0, #32]
  40c6fc:	ldr	x0, [x0, #8]
  40c700:	ldrb	w0, [x0, #332]
  40c704:	cbnz	w0, 40c714 <ferror@plt+0x9e44>
  40c708:	ldr	x19, [sp, #16]
  40c70c:	ldp	x29, x30, [sp], #32
  40c710:	ret
  40c714:	mov	x0, x19
  40c718:	bl	40c6b0 <ferror@plt+0x9de0>
  40c71c:	ldr	x0, [x19, #8]
  40c720:	ldr	x0, [x0, #192]
  40c724:	bl	402700 <fflush@plt>
  40c728:	b	40c708 <ferror@plt+0x9e38>
  40c72c:	stp	x29, x30, [sp, #-32]!
  40c730:	mov	x29, sp
  40c734:	str	x19, [sp, #16]
  40c738:	mov	x19, x0
  40c73c:	strb	wzr, [x0, #64]
  40c740:	str	wzr, [x0, #32]
  40c744:	bl	40c6b0 <ferror@plt+0x9de0>
  40c748:	ldr	x0, [x19, #8]
  40c74c:	ldr	x0, [x0, #192]
  40c750:	bl	402700 <fflush@plt>
  40c754:	ldr	x19, [sp, #16]
  40c758:	ldp	x29, x30, [sp], #32
  40c75c:	ret
  40c760:	stp	x29, x30, [sp, #-80]!
  40c764:	mov	x29, sp
  40c768:	stp	x19, x20, [sp, #16]
  40c76c:	stp	x21, x22, [sp, #32]
  40c770:	stp	x23, x24, [sp, #48]
  40c774:	mov	x22, x0
  40c778:	and	w24, w1, #0xff
  40c77c:	bl	40c658 <ferror@plt+0x9d88>
  40c780:	mov	x19, x0
  40c784:	ldr	x0, [x22, #8]
  40c788:	ldr	x20, [x0, #192]
  40c78c:	ldrb	w1, [x19]
  40c790:	cbz	w1, 40c860 <ferror@plt+0x9f90>
  40c794:	stp	x25, x26, [sp, #64]
  40c798:	mov	w21, #0x5c                  	// #92
  40c79c:	adrp	x23, 458000 <_obstack_memory_used@@Base+0x11094>
  40c7a0:	add	x23, x23, #0xfd0
  40c7a4:	mov	x26, #0x2                   	// #2
  40c7a8:	mov	x25, #0x1                   	// #1
  40c7ac:	b	40c7ec <ferror@plt+0x9f1c>
  40c7b0:	cmp	w1, #0xa
  40c7b4:	b.ne	40c818 <ferror@plt+0x9f48>  // b.any
  40c7b8:	mov	x3, x20
  40c7bc:	mov	x2, x26
  40c7c0:	mov	x1, x25
  40c7c4:	mov	x0, x23
  40c7c8:	bl	4026d0 <fwrite@plt>
  40c7cc:	mov	x1, x20
  40c7d0:	mov	w0, w21
  40c7d4:	bl	402380 <fputc@plt>
  40c7d8:	mov	x1, x20
  40c7dc:	ldrb	w0, [x19]
  40c7e0:	bl	402380 <fputc@plt>
  40c7e4:	ldrb	w1, [x19, #1]!
  40c7e8:	cbz	w1, 40c85c <ferror@plt+0x9f8c>
  40c7ec:	cmp	w1, #0x22
  40c7f0:	b.eq	40c7cc <ferror@plt+0x9efc>  // b.none
  40c7f4:	b.ls	40c7b0 <ferror@plt+0x9ee0>  // b.plast
  40c7f8:	cmp	w1, #0x5c
  40c7fc:	b.eq	40c83c <ferror@plt+0x9f6c>  // b.none
  40c800:	b.ls	40c828 <ferror@plt+0x9f58>  // b.plast
  40c804:	sub	w1, w1, #0x7b
  40c808:	and	w1, w1, #0xff
  40c80c:	cmp	w1, #0x2
  40c810:	b.hi	40c7d8 <ferror@plt+0x9f08>  // b.pmore
  40c814:	b	40c820 <ferror@plt+0x9f50>
  40c818:	cmp	w1, #0x20
  40c81c:	b.ne	40c7d8 <ferror@plt+0x9f08>  // b.any
  40c820:	cbz	w24, 40c7d8 <ferror@plt+0x9f08>
  40c824:	b	40c7cc <ferror@plt+0x9efc>
  40c828:	and	w1, w1, #0xfffffffd
  40c82c:	and	w1, w1, #0xff
  40c830:	cmp	w1, #0x3c
  40c834:	b.ne	40c7d8 <ferror@plt+0x9f08>  // b.any
  40c838:	b	40c820 <ferror@plt+0x9f50>
  40c83c:	ldrb	w0, [x19, #1]
  40c840:	cbnz	w0, 40c7cc <ferror@plt+0x9efc>
  40c844:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  40c848:	add	x2, x2, #0xfd8
  40c84c:	mov	w1, #0x378                 	// #888
  40c850:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40c854:	add	x0, x0, #0xfb0
  40c858:	bl	4062a0 <ferror@plt+0x39d0>
  40c85c:	ldp	x25, x26, [sp, #64]
  40c860:	mov	x0, x22
  40c864:	bl	40c500 <ferror@plt+0x9c30>
  40c868:	ldp	x19, x20, [sp, #16]
  40c86c:	ldp	x21, x22, [sp, #32]
  40c870:	ldp	x23, x24, [sp, #48]
  40c874:	ldp	x29, x30, [sp], #80
  40c878:	ret
  40c87c:	ldr	x0, [x0, #8]
  40c880:	ldr	x0, [x0, #176]
  40c884:	ldr	x1, [x0, #24]
  40c888:	ldr	x2, [x0, #16]
  40c88c:	sub	x0, x1, #0x1
  40c890:	cmp	x2, x1
  40c894:	csel	x0, x0, xzr, ne  // ne = any
  40c898:	ret
  40c89c:	ldr	x2, [x0, #8]
  40c8a0:	ldr	w1, [x0, #28]
  40c8a4:	ldr	w0, [x2, #200]
  40c8a8:	sub	w0, w1, w0
  40c8ac:	ret
  40c8b0:	stp	x29, x30, [sp, #-32]!
  40c8b4:	mov	x29, sp
  40c8b8:	stp	x19, x20, [sp, #16]
  40c8bc:	mov	x19, x0
  40c8c0:	ldr	x0, [x0, #8]
  40c8c4:	ldr	x20, [x0, #176]
  40c8c8:	ldr	x1, [x20, #32]
  40c8cc:	ldr	x0, [x20, #24]
  40c8d0:	cmp	x1, x0
  40c8d4:	b.eq	40c904 <ferror@plt+0xa034>  // b.none
  40c8d8:	ldr	x0, [x20, #24]
  40c8dc:	add	x1, x0, #0x1
  40c8e0:	str	x1, [x20, #24]
  40c8e4:	mov	w1, #0xa                   	// #10
  40c8e8:	strb	w1, [x0]
  40c8ec:	strb	wzr, [x19, #65]
  40c8f0:	ldr	x0, [x19, #8]
  40c8f4:	str	wzr, [x0, #200]
  40c8f8:	ldp	x19, x20, [sp, #16]
  40c8fc:	ldp	x29, x30, [sp], #32
  40c900:	ret
  40c904:	mov	x1, #0x1                   	// #1
  40c908:	mov	x0, x20
  40c90c:	bl	446d94 <_obstack_newchunk@@Base>
  40c910:	b	40c8d8 <ferror@plt+0xa008>
  40c914:	stp	x29, x30, [sp, #-48]!
  40c918:	mov	x29, sp
  40c91c:	stp	x19, x20, [sp, #16]
  40c920:	str	x21, [sp, #32]
  40c924:	mov	x19, x0
  40c928:	mov	w21, w1
  40c92c:	ldr	w0, [x0, #40]
  40c930:	cmp	w0, #0x0
  40c934:	b.le	40c950 <ferror@plt+0xa080>
  40c938:	ldr	x1, [x19, #8]
  40c93c:	ldr	w0, [x19, #28]
  40c940:	ldr	w1, [x1, #200]
  40c944:	sub	w0, w0, w1
  40c948:	cmp	w0, #0x0
  40c94c:	b.le	40c998 <ferror@plt+0xa0c8>
  40c950:	ldr	x0, [x19, #8]
  40c954:	ldr	x20, [x0, #176]
  40c958:	ldr	x1, [x20, #32]
  40c95c:	ldr	x0, [x20, #24]
  40c960:	cmp	x1, x0
  40c964:	b.eq	40c9b8 <ferror@plt+0xa0e8>  // b.none
  40c968:	ldr	x0, [x20, #24]
  40c96c:	add	x1, x0, #0x1
  40c970:	str	x1, [x20, #24]
  40c974:	strb	w21, [x0]
  40c978:	ldr	x1, [x19, #8]
  40c97c:	ldr	w0, [x1, #200]
  40c980:	add	w0, w0, #0x1
  40c984:	str	w0, [x1, #200]
  40c988:	ldp	x19, x20, [sp, #16]
  40c98c:	ldr	x21, [sp, #32]
  40c990:	ldp	x29, x30, [sp], #48
  40c994:	ret
  40c998:	mov	x0, x19
  40c99c:	bl	40c8b0 <ferror@plt+0x9fe0>
  40c9a0:	and	x1, x21, #0xff
  40c9a4:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1f094>
  40c9a8:	add	x0, x0, #0xa68
  40c9ac:	ldrh	w0, [x0, x1, lsl #1]
  40c9b0:	tbz	w0, #6, 40c950 <ferror@plt+0xa080>
  40c9b4:	b	40c988 <ferror@plt+0xa0b8>
  40c9b8:	mov	x1, #0x1                   	// #1
  40c9bc:	mov	x0, x20
  40c9c0:	bl	446d94 <_obstack_newchunk@@Base>
  40c9c4:	b	40c968 <ferror@plt+0xa098>
  40c9c8:	stp	x29, x30, [sp, #-48]!
  40c9cc:	mov	x29, sp
  40c9d0:	stp	x21, x22, [sp, #32]
  40c9d4:	ldr	w21, [x0, #32]
  40c9d8:	cmp	w21, #0x0
  40c9dc:	b.le	40ca0c <ferror@plt+0xa13c>
  40c9e0:	stp	x19, x20, [sp, #16]
  40c9e4:	mov	x20, x0
  40c9e8:	mov	w19, #0x0                   	// #0
  40c9ec:	mov	w22, #0x20                  	// #32
  40c9f0:	mov	w1, w22
  40c9f4:	mov	x0, x20
  40c9f8:	bl	40c914 <ferror@plt+0xa044>
  40c9fc:	add	w19, w19, #0x1
  40ca00:	cmp	w21, w19
  40ca04:	b.ne	40c9f0 <ferror@plt+0xa120>  // b.any
  40ca08:	ldp	x19, x20, [sp, #16]
  40ca0c:	ldp	x21, x22, [sp, #32]
  40ca10:	ldp	x29, x30, [sp], #48
  40ca14:	ret
  40ca18:	stp	x29, x30, [sp, #-64]!
  40ca1c:	mov	x29, sp
  40ca20:	stp	x19, x20, [sp, #16]
  40ca24:	ldr	x20, [x0, #16]
  40ca28:	cbz	x20, 40cb28 <ferror@plt+0xa258>
  40ca2c:	mov	x19, x0
  40ca30:	ldr	w0, [x0, #36]
  40ca34:	cbz	w0, 40cab0 <ferror@plt+0xa1e0>
  40ca38:	cmp	w0, #0x2
  40ca3c:	b.ne	40cb28 <ferror@plt+0xa258>  // b.any
  40ca40:	stp	x21, x22, [sp, #32]
  40ca44:	stp	x23, x24, [sp, #48]
  40ca48:	mov	x0, x20
  40ca4c:	bl	4022b0 <strlen@plt>
  40ca50:	mov	x21, x0
  40ca54:	ldr	x22, [x19, #8]
  40ca58:	ldr	x23, [x22, #176]
  40ca5c:	sxtw	x24, w0
  40ca60:	ldr	x0, [x23, #32]
  40ca64:	ldr	x1, [x23, #24]
  40ca68:	sub	x0, x0, x1
  40ca6c:	cmp	x0, w21, sxtw
  40ca70:	b.cc	40cadc <ferror@plt+0xa20c>  // b.lo, b.ul, b.last
  40ca74:	mov	x2, x24
  40ca78:	mov	x1, x20
  40ca7c:	ldr	x0, [x23, #24]
  40ca80:	bl	402260 <memcpy@plt>
  40ca84:	ldr	x2, [x23, #24]
  40ca88:	add	x2, x2, x24
  40ca8c:	str	x2, [x23, #24]
  40ca90:	cmp	w21, #0x0
  40ca94:	b.le	40cb18 <ferror@plt+0xa248>
  40ca98:	mov	x1, x20
  40ca9c:	add	x20, x20, #0x1
  40caa0:	sub	w21, w21, #0x1
  40caa4:	add	x20, x20, x21
  40caa8:	mov	w3, #0x0                   	// #0
  40caac:	b	40cb04 <ferror@plt+0xa234>
  40cab0:	ldrb	w0, [x19, #64]
  40cab4:	cbnz	w0, 40cad0 <ferror@plt+0xa200>
  40cab8:	stp	x21, x22, [sp, #32]
  40cabc:	stp	x23, x24, [sp, #48]
  40cac0:	ldr	w0, [x19, #32]
  40cac4:	add	w0, w0, #0x3
  40cac8:	str	w0, [x19, #32]
  40cacc:	b	40ca48 <ferror@plt+0xa178>
  40cad0:	mov	x0, x19
  40cad4:	bl	40c9c8 <ferror@plt+0xa0f8>
  40cad8:	b	40cb28 <ferror@plt+0xa258>
  40cadc:	mov	x1, x24
  40cae0:	mov	x0, x23
  40cae4:	bl	446d94 <_obstack_newchunk@@Base>
  40cae8:	b	40ca74 <ferror@plt+0xa1a4>
  40caec:	ldr	w0, [x22, #200]
  40caf0:	add	w0, w0, #0x1
  40caf4:	str	w0, [x22, #200]
  40caf8:	add	x1, x1, #0x1
  40cafc:	cmp	x1, x20
  40cb00:	b.eq	40cb18 <ferror@plt+0xa248>  // b.none
  40cb04:	ldrb	w2, [x1]
  40cb08:	mov	w0, w3
  40cb0c:	cmp	w2, #0xa
  40cb10:	b.ne	40caec <ferror@plt+0xa21c>  // b.any
  40cb14:	b	40caf4 <ferror@plt+0xa224>
  40cb18:	mov	w0, #0x1                   	// #1
  40cb1c:	strb	w0, [x19, #64]
  40cb20:	ldp	x21, x22, [sp, #32]
  40cb24:	ldp	x23, x24, [sp, #48]
  40cb28:	ldp	x19, x20, [sp, #16]
  40cb2c:	ldp	x29, x30, [sp], #64
  40cb30:	ret
  40cb34:	stp	x29, x30, [sp, #-64]!
  40cb38:	mov	x29, sp
  40cb3c:	stp	x19, x20, [sp, #16]
  40cb40:	stp	x21, x22, [sp, #32]
  40cb44:	stp	x23, x24, [sp, #48]
  40cb48:	mov	x21, x0
  40cb4c:	mov	x19, x1
  40cb50:	mov	x20, x2
  40cb54:	ldr	x0, [x0, #8]
  40cb58:	ldr	w0, [x0, #200]
  40cb5c:	cbz	w0, 40cbc4 <ferror@plt+0xa2f4>
  40cb60:	sub	x20, x20, x19
  40cb64:	mov	w22, w20
  40cb68:	ldr	x23, [x21, #8]
  40cb6c:	ldr	x21, [x23, #176]
  40cb70:	sxtw	x24, w20
  40cb74:	ldr	x0, [x21, #32]
  40cb78:	ldr	x1, [x21, #24]
  40cb7c:	sub	x0, x0, x1
  40cb80:	cmp	x0, w20, sxtw
  40cb84:	b.cc	40cc10 <ferror@plt+0xa340>  // b.lo, b.ul, b.last
  40cb88:	mov	x2, x24
  40cb8c:	mov	x1, x19
  40cb90:	ldr	x0, [x21, #24]
  40cb94:	bl	402260 <memcpy@plt>
  40cb98:	ldr	x20, [x21, #24]
  40cb9c:	add	x20, x20, x24
  40cba0:	str	x20, [x21, #24]
  40cba4:	cmp	w22, #0x0
  40cba8:	b.le	40cc54 <ferror@plt+0xa384>
  40cbac:	mov	x2, x19
  40cbb0:	add	x19, x19, #0x1
  40cbb4:	sub	w22, w22, #0x1
  40cbb8:	add	x19, x19, x22
  40cbbc:	mov	w3, #0x0                   	// #0
  40cbc0:	b	40cc38 <ferror@plt+0xa368>
  40cbc4:	mov	x0, x21
  40cbc8:	bl	40ca18 <ferror@plt+0xa148>
  40cbcc:	ldr	w0, [x21, #40]
  40cbd0:	cmp	w0, #0x0
  40cbd4:	b.le	40cb60 <ferror@plt+0xa290>
  40cbd8:	cmp	x19, x20
  40cbdc:	b.eq	40cc4c <ferror@plt+0xa37c>  // b.none
  40cbe0:	ldrb	w0, [x19]
  40cbe4:	cmp	w0, #0x20
  40cbe8:	b.ne	40cb60 <ferror@plt+0xa290>  // b.any
  40cbec:	add	x19, x19, #0x1
  40cbf0:	cmp	x20, x19
  40cbf4:	b.ne	40cbe0 <ferror@plt+0xa310>  // b.any
  40cbf8:	sub	x20, x20, x19
  40cbfc:	mov	w22, w20
  40cc00:	ldr	x23, [x21, #8]
  40cc04:	ldr	x21, [x23, #176]
  40cc08:	sxtw	x24, w20
  40cc0c:	b	40cb88 <ferror@plt+0xa2b8>
  40cc10:	mov	x1, x24
  40cc14:	mov	x0, x21
  40cc18:	bl	446d94 <_obstack_newchunk@@Base>
  40cc1c:	b	40cb88 <ferror@plt+0xa2b8>
  40cc20:	ldr	w0, [x23, #200]
  40cc24:	add	w0, w0, #0x1
  40cc28:	str	w0, [x23, #200]
  40cc2c:	add	x2, x2, #0x1
  40cc30:	cmp	x2, x19
  40cc34:	b.eq	40cc54 <ferror@plt+0xa384>  // b.none
  40cc38:	ldrb	w1, [x2]
  40cc3c:	mov	w0, w3
  40cc40:	cmp	w1, #0xa
  40cc44:	b.ne	40cc20 <ferror@plt+0xa350>  // b.any
  40cc48:	b	40cc28 <ferror@plt+0xa358>
  40cc4c:	mov	x19, x20
  40cc50:	b	40cbf8 <ferror@plt+0xa328>
  40cc54:	ldp	x19, x20, [sp, #16]
  40cc58:	ldp	x21, x22, [sp, #32]
  40cc5c:	ldp	x23, x24, [sp, #48]
  40cc60:	ldp	x29, x30, [sp], #64
  40cc64:	ret
  40cc68:	stp	x29, x30, [sp, #-80]!
  40cc6c:	mov	x29, sp
  40cc70:	stp	x23, x24, [sp, #48]
  40cc74:	ldr	w24, [x0, #40]
  40cc78:	cmp	x1, x2
  40cc7c:	b.eq	40cdc0 <ferror@plt+0xa4f0>  // b.none
  40cc80:	stp	x19, x20, [sp, #16]
  40cc84:	stp	x21, x22, [sp, #32]
  40cc88:	str	x25, [sp, #64]
  40cc8c:	mov	x23, x0
  40cc90:	mov	x22, x1
  40cc94:	mov	x20, x2
  40cc98:	adrp	x21, 466000 <_obstack_memory_used@@Base+0x1f094>
  40cc9c:	add	x21, x21, #0xa68
  40cca0:	mov	w25, #0x20                  	// #32
  40cca4:	b	40cd00 <ferror@plt+0xa430>
  40cca8:	cmp	w24, #0x0
  40ccac:	b.le	40cccc <ferror@plt+0xa3fc>
  40ccb0:	sub	x0, x19, x22
  40ccb4:	ldr	x2, [x23, #8]
  40ccb8:	ldr	w1, [x23, #28]
  40ccbc:	ldr	w2, [x2, #200]
  40ccc0:	sub	w1, w1, w2
  40ccc4:	cmp	x0, w1, sxtw
  40ccc8:	b.ge	40cd54 <ferror@plt+0xa484>  // b.tcont
  40cccc:	mov	x2, x19
  40ccd0:	mov	x1, x22
  40ccd4:	mov	x0, x23
  40ccd8:	bl	40cb34 <ferror@plt+0xa264>
  40ccdc:	cmp	x20, x19
  40cce0:	b.eq	40cdb4 <ferror@plt+0xa4e4>  // b.none
  40cce4:	ldrb	w0, [x19]
  40cce8:	ldrh	w0, [x21, x0, lsl #1]
  40ccec:	tbnz	w0, #0, 40cd60 <ferror@plt+0xa490>
  40ccf0:	ldrb	w0, [x19]
  40ccf4:	cmp	w0, #0xa
  40ccf8:	b.eq	40cd88 <ferror@plt+0xa4b8>  // b.none
  40ccfc:	mov	x22, x19
  40cd00:	cmp	x20, x22
  40cd04:	b.eq	40cdac <ferror@plt+0xa4dc>  // b.none
  40cd08:	mov	x19, x22
  40cd0c:	ldrb	w3, [x19]
  40cd10:	ldrh	w4, [x21, w3, sxtw #1]
  40cd14:	tst	x4, #0x1
  40cd18:	ccmp	w3, #0xa, #0x4, eq  // eq = none
  40cd1c:	b.eq	40cca8 <ferror@plt+0xa3d8>  // b.none
  40cd20:	add	x19, x19, #0x1
  40cd24:	cmp	x20, x19
  40cd28:	b.ne	40cd0c <ferror@plt+0xa43c>  // b.any
  40cd2c:	cmp	w24, #0x0
  40cd30:	b.gt	40ccb0 <ferror@plt+0xa3e0>
  40cd34:	mov	x2, x19
  40cd38:	mov	x1, x22
  40cd3c:	mov	x0, x23
  40cd40:	bl	40cb34 <ferror@plt+0xa264>
  40cd44:	ldp	x19, x20, [sp, #16]
  40cd48:	ldp	x21, x22, [sp, #32]
  40cd4c:	ldr	x25, [sp, #64]
  40cd50:	b	40cdc0 <ferror@plt+0xa4f0>
  40cd54:	mov	x0, x23
  40cd58:	bl	40c8b0 <ferror@plt+0x9fe0>
  40cd5c:	b	40cccc <ferror@plt+0xa3fc>
  40cd60:	mov	w1, w25
  40cd64:	mov	x0, x23
  40cd68:	bl	40c914 <ferror@plt+0xa044>
  40cd6c:	add	x19, x19, #0x1
  40cd70:	cmp	x20, x19
  40cd74:	b.ne	40ccf0 <ferror@plt+0xa420>  // b.any
  40cd78:	ldp	x19, x20, [sp, #16]
  40cd7c:	ldp	x21, x22, [sp, #32]
  40cd80:	ldr	x25, [sp, #64]
  40cd84:	b	40cdc0 <ferror@plt+0xa4f0>
  40cd88:	mov	x0, x23
  40cd8c:	bl	40c8b0 <ferror@plt+0x9fe0>
  40cd90:	add	x19, x19, #0x1
  40cd94:	cmp	x20, x19
  40cd98:	b.ne	40ccfc <ferror@plt+0xa42c>  // b.any
  40cd9c:	ldp	x19, x20, [sp, #16]
  40cda0:	ldp	x21, x22, [sp, #32]
  40cda4:	ldr	x25, [sp, #64]
  40cda8:	b	40cdc0 <ferror@plt+0xa4f0>
  40cdac:	mov	x19, x22
  40cdb0:	b	40cd2c <ferror@plt+0xa45c>
  40cdb4:	ldp	x19, x20, [sp, #16]
  40cdb8:	ldp	x21, x22, [sp, #32]
  40cdbc:	ldr	x25, [sp, #64]
  40cdc0:	ldp	x23, x24, [sp, #48]
  40cdc4:	ldp	x29, x30, [sp], #80
  40cdc8:	ret
  40cdcc:	stp	x29, x30, [sp, #-96]!
  40cdd0:	mov	x29, sp
  40cdd4:	stp	x19, x20, [sp, #16]
  40cdd8:	stp	x21, x22, [sp, #32]
  40cddc:	mov	x20, x0
  40cde0:	mov	x21, x1
  40cde4:	cmn	x2, #0x1
  40cde8:	b.eq	40ce18 <ferror@plt+0xa548>  // b.none
  40cdec:	cbz	x2, 40cef0 <ferror@plt+0xa620>
  40cdf0:	stp	x23, x24, [sp, #48]
  40cdf4:	str	x25, [sp, #64]
  40cdf8:	add	x22, x21, x2
  40cdfc:	mov	x19, x21
  40ce00:	adrp	x23, 466000 <_obstack_memory_used@@Base+0x1f094>
  40ce04:	add	x23, x23, #0xa68
  40ce08:	adrp	x24, 459000 <_obstack_memory_used@@Base+0x12094>
  40ce0c:	add	x24, x24, #0x0
  40ce10:	add	x25, sp, #0x54
  40ce14:	b	40ce78 <ferror@plt+0xa5a8>
  40ce18:	mov	x0, x1
  40ce1c:	bl	4022b0 <strlen@plt>
  40ce20:	mov	x2, x0
  40ce24:	b	40cdec <ferror@plt+0xa51c>
  40ce28:	sub	x2, x19, #0x1
  40ce2c:	ldr	w0, [x20, #40]
  40ce30:	cmp	w0, #0x0
  40ce34:	b.le	40ce48 <ferror@plt+0xa578>
  40ce38:	mov	x1, x21
  40ce3c:	mov	x0, x20
  40ce40:	bl	40cc68 <ferror@plt+0xa398>
  40ce44:	b	40ce8c <ferror@plt+0xa5bc>
  40ce48:	mov	x1, x21
  40ce4c:	mov	x0, x20
  40ce50:	bl	40cb34 <ferror@plt+0xa264>
  40ce54:	b	40ce8c <ferror@plt+0xa5bc>
  40ce58:	mov	x2, x25
  40ce5c:	add	x1, sp, #0x50
  40ce60:	mov	x0, x20
  40ce64:	bl	40cb34 <ferror@plt+0xa264>
  40ce68:	add	x21, x19, #0x1
  40ce6c:	add	x19, x19, #0x1
  40ce70:	cmp	x22, x19
  40ce74:	b.eq	40cebc <ferror@plt+0xa5ec>  // b.none
  40ce78:	ldrb	w0, [x19]
  40ce7c:	ldrh	w0, [x23, x0, lsl #1]
  40ce80:	tbnz	w0, #4, 40ce6c <ferror@plt+0xa59c>
  40ce84:	cmp	x21, x19
  40ce88:	b.cc	40ce28 <ferror@plt+0xa558>  // b.lo, b.ul, b.last
  40ce8c:	ldrb	w2, [x19]
  40ce90:	mov	x1, x24
  40ce94:	add	x0, sp, #0x50
  40ce98:	bl	402350 <sprintf@plt>
  40ce9c:	ldr	w0, [x20, #40]
  40cea0:	cmp	w0, #0x0
  40cea4:	b.le	40ce58 <ferror@plt+0xa588>
  40cea8:	mov	x2, x25
  40ceac:	add	x1, sp, #0x50
  40ceb0:	mov	x0, x20
  40ceb4:	bl	40cc68 <ferror@plt+0xa398>
  40ceb8:	b	40ce68 <ferror@plt+0xa598>
  40cebc:	ldp	x23, x24, [sp, #48]
  40cec0:	ldr	x25, [sp, #64]
  40cec4:	ldr	w0, [x20, #40]
  40cec8:	cmp	w0, #0x0
  40cecc:	b.le	40cef8 <ferror@plt+0xa628>
  40ced0:	mov	x2, x22
  40ced4:	mov	x1, x21
  40ced8:	mov	x0, x20
  40cedc:	bl	40cc68 <ferror@plt+0xa398>
  40cee0:	ldp	x19, x20, [sp, #16]
  40cee4:	ldp	x21, x22, [sp, #32]
  40cee8:	ldp	x29, x30, [sp], #96
  40ceec:	ret
  40cef0:	mov	x22, x21
  40cef4:	b	40cec4 <ferror@plt+0xa5f4>
  40cef8:	mov	x2, x22
  40cefc:	mov	x1, x21
  40cf00:	mov	x0, x20
  40cf04:	bl	40cb34 <ferror@plt+0xa264>
  40cf08:	b	40cee0 <ferror@plt+0xa610>
  40cf0c:	stp	x29, x30, [sp, #-32]!
  40cf10:	mov	x29, sp
  40cf14:	stp	x19, x20, [sp, #16]
  40cf18:	mov	x20, x0
  40cf1c:	mov	x19, x1
  40cf20:	mov	x0, x1
  40cf24:	bl	4022b0 <strlen@plt>
  40cf28:	add	x2, x19, x0
  40cf2c:	ldr	w0, [x20, #40]
  40cf30:	cmp	w0, #0x0
  40cf34:	b.le	40cf50 <ferror@plt+0xa680>
  40cf38:	mov	x1, x19
  40cf3c:	mov	x0, x20
  40cf40:	bl	40cc68 <ferror@plt+0xa398>
  40cf44:	ldp	x19, x20, [sp, #16]
  40cf48:	ldp	x29, x30, [sp], #32
  40cf4c:	ret
  40cf50:	mov	x1, x19
  40cf54:	mov	x0, x20
  40cf58:	bl	40cb34 <ferror@plt+0xa264>
  40cf5c:	b	40cf44 <ferror@plt+0xa674>
  40cf60:	stp	x29, x30, [sp, #-64]!
  40cf64:	mov	x29, sp
  40cf68:	stp	x19, x20, [sp, #16]
  40cf6c:	stp	x21, x22, [sp, #32]
  40cf70:	str	x23, [sp, #48]
  40cf74:	mov	x20, x0
  40cf78:	ldr	x21, [x0, #8]
  40cf7c:	ldr	x23, [x21, #184]
  40cf80:	ldr	x0, [x21, #176]
  40cf84:	cmp	x0, x21
  40cf88:	b.ne	40cfe4 <ferror@plt+0xa714>  // b.any
  40cf8c:	add	x22, x23, #0x8
  40cf90:	ldr	w0, [x21, #200]
  40cf94:	cbnz	w0, 40cffc <ferror@plt+0xa72c>
  40cf98:	ldr	x1, [x23, #8]
  40cf9c:	cbz	x1, 40cfb8 <ferror@plt+0xa6e8>
  40cfa0:	mov	w19, #0x0                   	// #0
  40cfa4:	mov	x0, x20
  40cfa8:	bl	40cf0c <ferror@plt+0xa63c>
  40cfac:	add	w19, w19, #0x1
  40cfb0:	ldr	x1, [x22, w19, uxtw #3]
  40cfb4:	cbnz	x1, 40cfa4 <ferror@plt+0xa6d4>
  40cfb8:	ldr	x0, [x23]
  40cfbc:	str	x0, [x21, #184]
  40cfc0:	ldr	x0, [x21, #96]
  40cfc4:	cmp	x0, x23
  40cfc8:	b.cs	40d014 <ferror@plt+0xa744>  // b.hs, b.nlast
  40cfcc:	ldr	x0, [x21, #120]
  40cfd0:	cmp	x0, x23
  40cfd4:	b.ls	40d014 <ferror@plt+0xa744>  // b.plast
  40cfd8:	str	x23, [x21, #104]
  40cfdc:	str	x23, [x21, #112]
  40cfe0:	b	40d020 <ferror@plt+0xa750>
  40cfe4:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  40cfe8:	add	x2, x2, #0x8
  40cfec:	mov	w1, #0x595                 	// #1429
  40cff0:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40cff4:	add	x0, x0, #0xfb0
  40cff8:	bl	4062a0 <ferror@plt+0x39d0>
  40cffc:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  40d000:	add	x2, x2, #0x8
  40d004:	mov	w1, #0x596                 	// #1430
  40d008:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40d00c:	add	x0, x0, #0xfb0
  40d010:	bl	4062a0 <ferror@plt+0x39d0>
  40d014:	mov	x1, x23
  40d018:	add	x0, x21, #0x58
  40d01c:	bl	446eec <_obstack_free@@Base>
  40d020:	ldp	x19, x20, [sp, #16]
  40d024:	ldp	x21, x22, [sp, #32]
  40d028:	ldr	x23, [sp, #48]
  40d02c:	ldp	x29, x30, [sp], #64
  40d030:	ret
  40d034:	stp	x29, x30, [sp, #-32]!
  40d038:	mov	x29, sp
  40d03c:	str	x19, [sp, #16]
  40d040:	mov	x19, x0
  40d044:	ldr	w0, [x0, #24]
  40d048:	cbnz	w0, 40d058 <ferror@plt+0xa788>
  40d04c:	ldr	x19, [sp, #16]
  40d050:	ldp	x29, x30, [sp], #32
  40d054:	ret
  40d058:	mov	w1, #0x20                  	// #32
  40d05c:	mov	x0, x19
  40d060:	bl	40c914 <ferror@plt+0xa044>
  40d064:	str	wzr, [x19, #24]
  40d068:	b	40d04c <ferror@plt+0xa77c>
  40d06c:	stp	x29, x30, [sp, #-32]!
  40d070:	mov	x29, sp
  40d074:	str	x19, [sp, #16]
  40d078:	mov	x19, x0
  40d07c:	bl	40c8b0 <ferror@plt+0x9fe0>
  40d080:	mov	x0, x19
  40d084:	bl	40c6e4 <ferror@plt+0x9e14>
  40d088:	strb	wzr, [x19, #65]
  40d08c:	ldr	x19, [sp, #16]
  40d090:	ldp	x29, x30, [sp], #32
  40d094:	ret
  40d098:	stp	x29, x30, [sp, #-32]!
  40d09c:	mov	x29, sp
  40d0a0:	str	x19, [sp, #16]
  40d0a4:	mov	x19, x0
  40d0a8:	ldr	w2, [x0, #32]
  40d0ac:	add	w2, w2, w1
  40d0b0:	str	w2, [x0, #32]
  40d0b4:	bl	40c8b0 <ferror@plt+0x9fe0>
  40d0b8:	mov	x0, x19
  40d0bc:	bl	40c9c8 <ferror@plt+0xa0f8>
  40d0c0:	strb	wzr, [x19, #65]
  40d0c4:	ldr	x19, [sp, #16]
  40d0c8:	ldp	x29, x30, [sp], #32
  40d0cc:	ret
  40d0d0:	stp	x29, x30, [sp, #-32]!
  40d0d4:	mov	x29, sp
  40d0d8:	str	x19, [sp, #16]
  40d0dc:	mov	x19, x0
  40d0e0:	and	w1, w1, #0xff
  40d0e4:	bl	40c914 <ferror@plt+0xa044>
  40d0e8:	mov	w1, #0x20                  	// #32
  40d0ec:	mov	x0, x19
  40d0f0:	bl	40c914 <ferror@plt+0xa044>
  40d0f4:	ldr	x19, [sp, #16]
  40d0f8:	ldp	x29, x30, [sp], #32
  40d0fc:	ret
  40d100:	stp	x29, x30, [sp, #-32]!
  40d104:	mov	x29, sp
  40d108:	stp	x19, x20, [sp, #16]
  40d10c:	mov	x19, x0
  40d110:	and	w20, w1, #0xff
  40d114:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x41094>
  40d118:	ldr	x1, [x1, #1232]
  40d11c:	bl	40cf0c <ferror@plt+0xa63c>
  40d120:	mov	x2, #0x5                   	// #5
  40d124:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  40d128:	add	x1, x1, #0xc70
  40d12c:	mov	w0, w20
  40d130:	bl	40744c <ferror@plt+0x4b7c>
  40d134:	mov	x1, x0
  40d138:	mov	x0, x19
  40d13c:	bl	40cf0c <ferror@plt+0xa63c>
  40d140:	ldp	x19, x20, [sp, #16]
  40d144:	ldp	x29, x30, [sp], #32
  40d148:	ret
  40d14c:	stp	x29, x30, [sp, #-32]!
  40d150:	mov	x29, sp
  40d154:	str	x19, [sp, #16]
  40d158:	mov	x19, x0
  40d15c:	mov	w0, w1
  40d160:	bl	4074e0 <ferror@plt+0x4c10>
  40d164:	mov	x1, x0
  40d168:	mov	x0, x19
  40d16c:	bl	40cf0c <ferror@plt+0xa63c>
  40d170:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  40d174:	ldr	x1, [x0, #1240]
  40d178:	mov	x0, x19
  40d17c:	bl	40cf0c <ferror@plt+0xa63c>
  40d180:	ldr	x19, [sp, #16]
  40d184:	ldp	x29, x30, [sp], #32
  40d188:	ret
  40d18c:	sub	sp, sp, #0x1b0
  40d190:	stp	x29, x30, [sp, #16]
  40d194:	add	x29, sp, #0x10
  40d198:	stp	x19, x20, [sp, #32]
  40d19c:	stp	x21, x22, [sp, #48]
  40d1a0:	stp	x23, x24, [sp, #64]
  40d1a4:	stp	x25, x26, [sp, #80]
  40d1a8:	stp	x27, x28, [sp, #96]
  40d1ac:	mov	x21, x0
  40d1b0:	str	x1, [sp, #120]
  40d1b4:	ldr	x19, [x0, #8]
  40d1b8:	add	x25, x19, #0x58
  40d1bc:	ldr	x0, [x25, #32]
  40d1c0:	ldr	x1, [x25, #24]
  40d1c4:	sub	x0, x0, x1
  40d1c8:	cmp	x0, #0x1e7
  40d1cc:	b.ls	40d274 <ferror@plt+0xa9a4>  // b.plast
  40d1d0:	add	x0, x19, #0x58
  40d1d4:	ldr	x1, [x19, #112]
  40d1d8:	add	x1, x1, #0x1e8
  40d1dc:	ldr	x28, [x19, #104]
  40d1e0:	cmp	x1, x28
  40d1e4:	b.eq	40d284 <ferror@plt+0xa9b4>  // b.none
  40d1e8:	ldr	x0, [x19, #136]
  40d1ec:	add	x1, x1, x0
  40d1f0:	bic	x0, x1, x0
  40d1f4:	str	x0, [x19, #112]
  40d1f8:	ldr	x1, [x19, #96]
  40d1fc:	ldr	x2, [x19, #120]
  40d200:	sub	x0, x0, x1
  40d204:	sub	x1, x2, x1
  40d208:	cmp	x0, x1
  40d20c:	b.ls	40d214 <ferror@plt+0xa944>  // b.plast
  40d210:	str	x2, [x19, #112]
  40d214:	ldr	x1, [x19, #112]
  40d218:	str	x1, [x19, #104]
  40d21c:	ldr	x0, [x19, #184]
  40d220:	str	x0, [x28]
  40d224:	str	x28, [x19, #184]
  40d228:	add	x28, x28, #0x8
  40d22c:	mov	x2, #0xf0                  	// #240
  40d230:	mov	w1, #0x0                   	// #0
  40d234:	add	x0, sp, #0xc0
  40d238:	bl	402490 <memset@plt>
  40d23c:	ldr	x0, [sp, #120]
  40d240:	ldr	x20, [x0]
  40d244:	ldrb	w0, [x20]
  40d248:	cbz	w0, 40ec34 <ferror@plt+0xc364>
  40d24c:	str	wzr, [sp, #160]
  40d250:	str	wzr, [sp, #164]
  40d254:	mov	w26, #0x0                   	// #0
  40d258:	mov	w27, #0x0                   	// #0
  40d25c:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1f094>
  40d260:	add	x0, x0, #0xa68
  40d264:	str	x0, [sp, #136]
  40d268:	adrp	x24, 459000 <_obstack_memory_used@@Base+0x12094>
  40d26c:	add	x24, x24, #0x38
  40d270:	b	40d514 <ferror@plt+0xac44>
  40d274:	mov	x1, #0x1e8                 	// #488
  40d278:	mov	x0, x25
  40d27c:	bl	446d94 <_obstack_newchunk@@Base>
  40d280:	b	40d1d0 <ferror@plt+0xa900>
  40d284:	mov	x2, x0
  40d288:	ldrb	w0, [x0, #80]
  40d28c:	orr	w0, w0, #0x2
  40d290:	strb	w0, [x2, #80]
  40d294:	b	40d1e8 <ferror@plt+0xa918>
  40d298:	ldr	x0, [x19, #112]
  40d29c:	add	x2, x0, #0x1
  40d2a0:	str	x2, [x19, #112]
  40d2a4:	ldrb	w1, [x20]
  40d2a8:	strb	w1, [x0]
  40d2ac:	ldrb	w0, [x20, #1]!
  40d2b0:	cmp	w0, #0x25
  40d2b4:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40d2b8:	b.eq	40d2dc <ferror@plt+0xaa0c>  // b.none
  40d2bc:	ldr	x1, [x19, #120]
  40d2c0:	ldr	x0, [x19, #112]
  40d2c4:	cmp	x1, x0
  40d2c8:	b.ne	40d298 <ferror@plt+0xa9c8>  // b.any
  40d2cc:	mov	x1, x22
  40d2d0:	mov	x0, x25
  40d2d4:	bl	446d94 <_obstack_newchunk@@Base>
  40d2d8:	b	40d298 <ferror@plt+0xa9c8>
  40d2dc:	cbz	w0, 40dac8 <ferror@plt+0xb1f8>
  40d2e0:	ldrb	w0, [x20, #1]
  40d2e4:	cmp	w0, #0x3e
  40d2e8:	b.eq	40d480 <ferror@plt+0xabb0>  // b.none
  40d2ec:	b.hi	40d3d8 <ferror@plt+0xab08>  // b.pmore
  40d2f0:	cmp	w0, #0x27
  40d2f4:	b.eq	40d4c4 <ferror@plt+0xabf4>  // b.none
  40d2f8:	b.ls	40d3a0 <ferror@plt+0xaad0>  // b.plast
  40d2fc:	cmp	w0, #0x3c
  40d300:	b.ne	40d5b8 <ferror@plt+0xace8>  // b.any
  40d304:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  40d308:	ldr	x0, [x0, #1232]
  40d30c:	bl	4022b0 <strlen@plt>
  40d310:	mov	x23, x0
  40d314:	ldr	x0, [x19, #120]
  40d318:	ldr	x1, [x19, #112]
  40d31c:	sub	x0, x0, x1
  40d320:	cmp	x23, x0
  40d324:	b.hi	40d460 <ferror@plt+0xab90>  // b.pmore
  40d328:	mov	x2, x23
  40d32c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  40d330:	ldr	x1, [x0, #1232]
  40d334:	ldr	x0, [x19, #112]
  40d338:	bl	402260 <memcpy@plt>
  40d33c:	ldr	x0, [x19, #112]
  40d340:	add	x23, x0, x23
  40d344:	str	x23, [x19, #112]
  40d348:	mov	x2, #0x5                   	// #5
  40d34c:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  40d350:	add	x1, x1, #0xc70
  40d354:	ldrb	w0, [x21, #67]
  40d358:	bl	40744c <ferror@plt+0x4b7c>
  40d35c:	str	x0, [sp, #128]
  40d360:	bl	4022b0 <strlen@plt>
  40d364:	mov	x23, x0
  40d368:	ldr	x0, [x19, #120]
  40d36c:	ldr	x1, [x19, #112]
  40d370:	sub	x0, x0, x1
  40d374:	cmp	x23, x0
  40d378:	b.hi	40d470 <ferror@plt+0xaba0>  // b.pmore
  40d37c:	mov	x2, x23
  40d380:	ldr	x1, [sp, #128]
  40d384:	ldr	x0, [x19, #112]
  40d388:	bl	402260 <memcpy@plt>
  40d38c:	ldr	x0, [x19, #112]
  40d390:	add	x23, x0, x23
  40d394:	str	x23, [x19, #112]
  40d398:	add	x20, x20, #0x2
  40d39c:	b	40d50c <ferror@plt+0xac3c>
  40d3a0:	cbz	w0, 40d438 <ferror@plt+0xab68>
  40d3a4:	cmp	w0, #0x25
  40d3a8:	b.ne	40d5b8 <ferror@plt+0xace8>  // b.any
  40d3ac:	ldr	x1, [x19, #120]
  40d3b0:	ldr	x0, [x19, #112]
  40d3b4:	cmp	x1, x0
  40d3b8:	b.eq	40d450 <ferror@plt+0xab80>  // b.none
  40d3bc:	ldr	x0, [x19, #112]
  40d3c0:	add	x2, x0, #0x1
  40d3c4:	str	x2, [x19, #112]
  40d3c8:	mov	w1, #0x25                  	// #37
  40d3cc:	strb	w1, [x0]
  40d3d0:	add	x20, x20, #0x2
  40d3d4:	b	40d50c <ferror@plt+0xac3c>
  40d3d8:	cmp	w0, #0x52
  40d3dc:	b.eq	40d54c <ferror@plt+0xac7c>  // b.none
  40d3e0:	cmp	w0, #0x6d
  40d3e4:	b.ne	40d5b8 <ferror@plt+0xace8>  // b.any
  40d3e8:	ldr	x0, [sp, #120]
  40d3ec:	ldr	w0, [x0, #16]
  40d3f0:	bl	4471b0 <_obstack_memory_used@@Base+0x244>
  40d3f4:	str	x0, [sp, #128]
  40d3f8:	bl	4022b0 <strlen@plt>
  40d3fc:	mov	x23, x0
  40d400:	ldr	x0, [x19, #120]
  40d404:	ldr	x1, [x19, #112]
  40d408:	sub	x0, x0, x1
  40d40c:	cmp	x23, x0
  40d410:	b.hi	40d5a8 <ferror@plt+0xacd8>  // b.pmore
  40d414:	mov	x2, x23
  40d418:	ldr	x1, [sp, #128]
  40d41c:	ldr	x0, [x19, #112]
  40d420:	bl	402260 <memcpy@plt>
  40d424:	ldr	x0, [x19, #112]
  40d428:	add	x23, x0, x23
  40d42c:	str	x23, [x19, #112]
  40d430:	add	x20, x20, #0x2
  40d434:	b	40d50c <ferror@plt+0xac3c>
  40d438:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  40d43c:	add	x2, x2, #0x28
  40d440:	mov	w1, #0x41e                 	// #1054
  40d444:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40d448:	add	x0, x0, #0xfb0
  40d44c:	bl	4062a0 <ferror@plt+0x39d0>
  40d450:	mov	x1, #0x1                   	// #1
  40d454:	mov	x0, x25
  40d458:	bl	446d94 <_obstack_newchunk@@Base>
  40d45c:	b	40d3bc <ferror@plt+0xaaec>
  40d460:	mov	x1, x23
  40d464:	mov	x0, x25
  40d468:	bl	446d94 <_obstack_newchunk@@Base>
  40d46c:	b	40d328 <ferror@plt+0xaa58>
  40d470:	mov	x1, x23
  40d474:	mov	x0, x25
  40d478:	bl	446d94 <_obstack_newchunk@@Base>
  40d47c:	b	40d37c <ferror@plt+0xaaac>
  40d480:	ldrb	w0, [x21, #67]
  40d484:	bl	4074e0 <ferror@plt+0x4c10>
  40d488:	str	x0, [sp, #128]
  40d48c:	bl	4022b0 <strlen@plt>
  40d490:	mov	x23, x0
  40d494:	ldr	x0, [x19, #120]
  40d498:	ldr	x1, [x19, #112]
  40d49c:	sub	x0, x0, x1
  40d4a0:	cmp	x23, x0
  40d4a4:	b.hi	40d52c <ferror@plt+0xac5c>  // b.pmore
  40d4a8:	mov	x2, x23
  40d4ac:	ldr	x1, [sp, #128]
  40d4b0:	ldr	x0, [x19, #112]
  40d4b4:	bl	402260 <memcpy@plt>
  40d4b8:	ldr	x0, [x19, #112]
  40d4bc:	add	x23, x0, x23
  40d4c0:	str	x23, [x19, #112]
  40d4c4:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  40d4c8:	ldr	x0, [x0, #1240]
  40d4cc:	bl	4022b0 <strlen@plt>
  40d4d0:	mov	x22, x0
  40d4d4:	ldr	x0, [x19, #120]
  40d4d8:	ldr	x1, [x19, #112]
  40d4dc:	sub	x0, x0, x1
  40d4e0:	cmp	x22, x0
  40d4e4:	b.hi	40d53c <ferror@plt+0xac6c>  // b.pmore
  40d4e8:	mov	x2, x22
  40d4ec:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  40d4f0:	ldr	x1, [x0, #1240]
  40d4f4:	ldr	x0, [x19, #112]
  40d4f8:	bl	402260 <memcpy@plt>
  40d4fc:	ldr	x0, [x19, #112]
  40d500:	add	x22, x0, x22
  40d504:	str	x22, [x19, #112]
  40d508:	add	x20, x20, #0x2
  40d50c:	ldrb	w0, [x20]
  40d510:	cbz	w0, 40dac8 <ferror@plt+0xb1f8>
  40d514:	ldrb	w0, [x20]
  40d518:	cmp	w0, #0x25
  40d51c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40d520:	b.eq	40d2dc <ferror@plt+0xaa0c>  // b.none
  40d524:	mov	x22, #0x1                   	// #1
  40d528:	b	40d2bc <ferror@plt+0xa9ec>
  40d52c:	mov	x1, x23
  40d530:	mov	x0, x25
  40d534:	bl	446d94 <_obstack_newchunk@@Base>
  40d538:	b	40d4a8 <ferror@plt+0xabd8>
  40d53c:	mov	x1, x22
  40d540:	mov	x0, x25
  40d544:	bl	446d94 <_obstack_newchunk@@Base>
  40d548:	b	40d4e8 <ferror@plt+0xac18>
  40d54c:	ldrb	w0, [x21, #67]
  40d550:	bl	4074e0 <ferror@plt+0x4c10>
  40d554:	str	x0, [sp, #128]
  40d558:	bl	4022b0 <strlen@plt>
  40d55c:	mov	x23, x0
  40d560:	ldr	x0, [x19, #120]
  40d564:	ldr	x1, [x19, #112]
  40d568:	sub	x0, x0, x1
  40d56c:	cmp	x23, x0
  40d570:	b.hi	40d598 <ferror@plt+0xacc8>  // b.pmore
  40d574:	mov	x2, x23
  40d578:	ldr	x1, [sp, #128]
  40d57c:	ldr	x0, [x19, #112]
  40d580:	bl	402260 <memcpy@plt>
  40d584:	ldr	x0, [x19, #112]
  40d588:	add	x23, x0, x23
  40d58c:	str	x23, [x19, #112]
  40d590:	add	x20, x20, #0x2
  40d594:	b	40d50c <ferror@plt+0xac3c>
  40d598:	mov	x1, x23
  40d59c:	mov	x0, x25
  40d5a0:	bl	446d94 <_obstack_newchunk@@Base>
  40d5a4:	b	40d574 <ferror@plt+0xaca4>
  40d5a8:	mov	x1, x23
  40d5ac:	mov	x0, x25
  40d5b0:	bl	446d94 <_obstack_newchunk@@Base>
  40d5b4:	b	40d414 <ferror@plt+0xab44>
  40d5b8:	ldr	x1, [x19, #120]
  40d5bc:	ldr	x0, [x19, #112]
  40d5c0:	cmp	x1, x0
  40d5c4:	b.eq	40d698 <ferror@plt+0xadc8>  // b.none
  40d5c8:	ldr	x0, [x19, #112]
  40d5cc:	add	x2, x0, #0x1
  40d5d0:	str	x2, [x19, #112]
  40d5d4:	strb	wzr, [x0]
  40d5d8:	cmp	w26, #0x3b
  40d5dc:	b.hi	40d6a8 <ferror@plt+0xadd8>  // b.pmore
  40d5e0:	add	w0, w26, #0x1
  40d5e4:	str	w0, [sp, #128]
  40d5e8:	mov	w4, w26
  40d5ec:	add	x0, x19, #0x58
  40d5f0:	ldr	x3, [x19, #104]
  40d5f4:	ldr	x1, [x19, #112]
  40d5f8:	cmp	x1, x3
  40d5fc:	b.eq	40d6c0 <ferror@plt+0xadf0>  // b.none
  40d600:	ldr	x0, [x19, #136]
  40d604:	add	x1, x1, x0
  40d608:	bic	x0, x1, x0
  40d60c:	str	x0, [x19, #112]
  40d610:	ldr	x1, [x19, #96]
  40d614:	ldr	x2, [x19, #120]
  40d618:	sub	x0, x0, x1
  40d61c:	sub	x1, x2, x1
  40d620:	cmp	x0, x1
  40d624:	b.ls	40d62c <ferror@plt+0xad5c>  // b.plast
  40d628:	str	x2, [x19, #112]
  40d62c:	add	x22, x20, #0x1
  40d630:	ldr	x1, [x19, #112]
  40d634:	str	x1, [x19, #104]
  40d638:	str	x3, [x28, x4, lsl #3]
  40d63c:	ldrb	w0, [x20, #1]
  40d640:	ldr	x1, [sp, #136]
  40d644:	ldrh	w0, [x1, x0, lsl #1]
  40d648:	tbnz	w0, #2, 40d6d4 <ferror@plt+0xae04>
  40d64c:	add	w0, w27, #0x1
  40d650:	str	w0, [sp, #148]
  40d654:	ldr	w0, [sp, #160]
  40d658:	cbnz	w0, 40d748 <ferror@plt+0xae78>
  40d65c:	mov	w0, #0x1                   	// #1
  40d660:	str	w0, [sp, #164]
  40d664:	cmp	w27, #0x1d
  40d668:	b.hi	40d760 <ferror@plt+0xae90>  // b.pmore
  40d66c:	add	x0, sp, #0xc0
  40d670:	ldr	x0, [x0, w27, uxtw #3]
  40d674:	cbnz	x0, 40d778 <ferror@plt+0xaea8>
  40d678:	ldr	w0, [sp, #128]
  40d67c:	mov	w1, w0
  40d680:	str	x1, [sp, #152]
  40d684:	add	x0, x28, w0, uxtw #3
  40d688:	str	x0, [sp, #168]
  40d68c:	add	x1, sp, #0xc0
  40d690:	str	x0, [x1, w27, uxtw #3]
  40d694:	b	40d7c0 <ferror@plt+0xaef0>
  40d698:	mov	x1, #0x1                   	// #1
  40d69c:	mov	x0, x25
  40d6a0:	bl	446d94 <_obstack_newchunk@@Base>
  40d6a4:	b	40d5c8 <ferror@plt+0xacf8>
  40d6a8:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  40d6ac:	add	x2, x2, #0x28
  40d6b0:	mov	w1, #0x450                 	// #1104
  40d6b4:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40d6b8:	add	x0, x0, #0xfb0
  40d6bc:	bl	4062a0 <ferror@plt+0x39d0>
  40d6c0:	mov	x2, x0
  40d6c4:	ldrb	w0, [x0, #80]
  40d6c8:	orr	w0, w0, #0x2
  40d6cc:	strb	w0, [x2, #80]
  40d6d0:	b	40d600 <ferror@plt+0xad30>
  40d6d4:	mov	w2, #0xa                   	// #10
  40d6d8:	add	x1, sp, #0xb8
  40d6dc:	mov	x0, x22
  40d6e0:	bl	4022a0 <strtoul@plt>
  40d6e4:	sub	w0, w0, #0x1
  40d6e8:	ldr	x22, [sp, #184]
  40d6ec:	ldrb	w1, [x22]
  40d6f0:	cmp	w1, #0x24
  40d6f4:	b.ne	40d718 <ferror@plt+0xae48>  // b.any
  40d6f8:	add	x22, x22, #0x1
  40d6fc:	ldr	w1, [sp, #164]
  40d700:	cbnz	w1, 40d730 <ferror@plt+0xae60>
  40d704:	str	w27, [sp, #148]
  40d708:	mov	w27, w0
  40d70c:	mov	w0, #0x1                   	// #1
  40d710:	str	w0, [sp, #160]
  40d714:	b	40d664 <ferror@plt+0xad94>
  40d718:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  40d71c:	add	x2, x2, #0x28
  40d720:	mov	w1, #0x45a                 	// #1114
  40d724:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40d728:	add	x0, x0, #0xfb0
  40d72c:	bl	4062a0 <ferror@plt+0x39d0>
  40d730:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  40d734:	add	x2, x2, #0x28
  40d738:	mov	w1, #0x45e                 	// #1118
  40d73c:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40d740:	add	x0, x0, #0xfb0
  40d744:	bl	4062a0 <ferror@plt+0x39d0>
  40d748:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  40d74c:	add	x2, x2, #0x28
  40d750:	mov	w1, #0x464                 	// #1124
  40d754:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40d758:	add	x0, x0, #0xfb0
  40d75c:	bl	4062a0 <ferror@plt+0x39d0>
  40d760:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  40d764:	add	x2, x2, #0x28
  40d768:	mov	w1, #0x466                 	// #1126
  40d76c:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40d770:	add	x0, x0, #0xfb0
  40d774:	bl	4062a0 <ferror@plt+0x39d0>
  40d778:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  40d77c:	add	x2, x2, #0x28
  40d780:	mov	w1, #0x467                 	// #1127
  40d784:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40d788:	add	x0, x0, #0xfb0
  40d78c:	bl	4062a0 <ferror@plt+0x39d0>
  40d790:	ldr	x0, [x19, #112]
  40d794:	add	x2, x0, #0x1
  40d798:	str	x2, [x19, #112]
  40d79c:	ldrb	w1, [x22]
  40d7a0:	strb	w1, [x0]
  40d7a4:	mov	x20, x22
  40d7a8:	ldrb	w23, [x20], #1
  40d7ac:	mov	w1, w23
  40d7b0:	mov	x0, x24
  40d7b4:	bl	4026c0 <strchr@plt>
  40d7b8:	cbz	x0, 40d7e0 <ferror@plt+0xaf10>
  40d7bc:	mov	x22, x20
  40d7c0:	ldr	x1, [x19, #120]
  40d7c4:	ldr	x0, [x19, #112]
  40d7c8:	cmp	x1, x0
  40d7cc:	b.ne	40d790 <ferror@plt+0xaec0>  // b.any
  40d7d0:	mov	x1, #0x1                   	// #1
  40d7d4:	mov	x0, x25
  40d7d8:	bl	446d94 <_obstack_newchunk@@Base>
  40d7dc:	b	40d790 <ferror@plt+0xaec0>
  40d7e0:	cmp	w23, #0x2e
  40d7e4:	b.eq	40d878 <ferror@plt+0xafa8>  // b.none
  40d7e8:	ldrb	w0, [x20]
  40d7ec:	cbz	w0, 40dac4 <ferror@plt+0xb1f4>
  40d7f0:	ldr	x1, [x19, #120]
  40d7f4:	ldr	x0, [x19, #112]
  40d7f8:	cmp	x1, x0
  40d7fc:	b.eq	40da88 <ferror@plt+0xb1b8>  // b.none
  40d800:	ldr	x0, [x19, #112]
  40d804:	add	x2, x0, #0x1
  40d808:	str	x2, [x19, #112]
  40d80c:	strb	wzr, [x0]
  40d810:	ldr	w0, [sp, #128]
  40d814:	cmp	w0, #0x3b
  40d818:	b.hi	40da98 <ferror@plt+0xb1c8>  // b.pmore
  40d81c:	add	w26, w26, #0x2
  40d820:	add	x0, x19, #0x58
  40d824:	ldr	x3, [x19, #104]
  40d828:	ldr	x1, [x19, #112]
  40d82c:	cmp	x1, x3
  40d830:	b.eq	40dab0 <ferror@plt+0xb1e0>  // b.none
  40d834:	ldr	x0, [x19, #136]
  40d838:	add	x1, x1, x0
  40d83c:	bic	x0, x1, x0
  40d840:	str	x0, [x19, #112]
  40d844:	ldr	x1, [x19, #96]
  40d848:	ldr	x2, [x19, #120]
  40d84c:	sub	x0, x0, x1
  40d850:	sub	x1, x2, x1
  40d854:	cmp	x0, x1
  40d858:	b.ls	40d860 <ferror@plt+0xaf90>  // b.plast
  40d85c:	str	x2, [x19, #112]
  40d860:	ldr	x1, [x19, #112]
  40d864:	str	x1, [x19, #104]
  40d868:	ldr	x0, [sp, #152]
  40d86c:	str	x3, [x28, x0, lsl #3]
  40d870:	ldr	w27, [sp, #148]
  40d874:	b	40d50c <ferror@plt+0xac3c>
  40d878:	ldrb	w0, [x20]
  40d87c:	ldr	x1, [sp, #136]
  40d880:	ldrh	w1, [x1, w0, sxtw #1]
  40d884:	tbnz	w1, #2, 40d924 <ferror@plt+0xb054>
  40d888:	cmp	w0, #0x2a
  40d88c:	b.ne	40d990 <ferror@plt+0xb0c0>  // b.any
  40d890:	ldr	x1, [x19, #120]
  40d894:	ldr	x0, [x19, #112]
  40d898:	cmp	x1, x0
  40d89c:	b.eq	40d9a8 <ferror@plt+0xb0d8>  // b.none
  40d8a0:	ldr	x0, [x19, #112]
  40d8a4:	add	x2, x0, #0x1
  40d8a8:	str	x2, [x19, #112]
  40d8ac:	mov	w1, #0x2a                  	// #42
  40d8b0:	strb	w1, [x0]
  40d8b4:	add	x22, x22, #0x2
  40d8b8:	ldrb	w0, [x20, #1]
  40d8bc:	ldr	x1, [sp, #136]
  40d8c0:	ldrh	w0, [x1, x0, lsl #1]
  40d8c4:	tbnz	w0, #2, 40d9b8 <ferror@plt+0xb0e8>
  40d8c8:	ldr	w0, [sp, #160]
  40d8cc:	cbnz	w0, 40da48 <ferror@plt+0xb178>
  40d8d0:	add	w27, w27, #0x1
  40d8d4:	add	x0, sp, #0xc0
  40d8d8:	ldr	x1, [sp, #168]
  40d8dc:	str	x1, [x0, x27, lsl #3]
  40d8e0:	ldr	w0, [sp, #148]
  40d8e4:	add	w0, w0, #0x1
  40d8e8:	str	w0, [sp, #148]
  40d8ec:	ldrb	w0, [x22]
  40d8f0:	cmp	w0, #0x73
  40d8f4:	b.ne	40da60 <ferror@plt+0xb190>  // b.any
  40d8f8:	ldr	x1, [x19, #120]
  40d8fc:	ldr	x0, [x19, #112]
  40d900:	cmp	x1, x0
  40d904:	b.eq	40da78 <ferror@plt+0xb1a8>  // b.none
  40d908:	ldr	x0, [x19, #112]
  40d90c:	add	x2, x0, #0x1
  40d910:	str	x2, [x19, #112]
  40d914:	mov	w1, #0x73                  	// #115
  40d918:	strb	w1, [x0]
  40d91c:	add	x20, x22, #0x1
  40d920:	b	40d7e8 <ferror@plt+0xaf18>
  40d924:	mov	x22, #0x1                   	// #1
  40d928:	b	40d950 <ferror@plt+0xb080>
  40d92c:	ldr	x0, [x19, #112]
  40d930:	add	x2, x0, #0x1
  40d934:	str	x2, [x19, #112]
  40d938:	ldrb	w1, [x20]
  40d93c:	strb	w1, [x0]
  40d940:	ldrb	w0, [x20], #1
  40d944:	ldr	x1, [sp, #136]
  40d948:	ldrh	w1, [x1, w0, sxtw #1]
  40d94c:	tbz	w1, #2, 40d970 <ferror@plt+0xb0a0>
  40d950:	ldr	x1, [x19, #120]
  40d954:	ldr	x0, [x19, #112]
  40d958:	cmp	x1, x0
  40d95c:	b.ne	40d92c <ferror@plt+0xb05c>  // b.any
  40d960:	mov	x1, x22
  40d964:	mov	x0, x25
  40d968:	bl	446d94 <_obstack_newchunk@@Base>
  40d96c:	b	40d92c <ferror@plt+0xb05c>
  40d970:	cmp	w0, #0x73
  40d974:	b.eq	40d7e8 <ferror@plt+0xaf18>  // b.none
  40d978:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  40d97c:	add	x2, x2, #0x28
  40d980:	mov	w1, #0x47c                 	// #1148
  40d984:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40d988:	add	x0, x0, #0xfb0
  40d98c:	bl	4062a0 <ferror@plt+0x39d0>
  40d990:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  40d994:	add	x2, x2, #0x28
  40d998:	mov	w1, #0x480                 	// #1152
  40d99c:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40d9a0:	add	x0, x0, #0xfb0
  40d9a4:	bl	4062a0 <ferror@plt+0x39d0>
  40d9a8:	mov	x1, #0x1                   	// #1
  40d9ac:	mov	x0, x25
  40d9b0:	bl	446d94 <_obstack_newchunk@@Base>
  40d9b4:	b	40d8a0 <ferror@plt+0xafd0>
  40d9b8:	mov	w2, #0xa                   	// #10
  40d9bc:	add	x1, sp, #0xb8
  40d9c0:	mov	x0, x22
  40d9c4:	bl	4022a0 <strtoul@plt>
  40d9c8:	sub	w1, w0, #0x1
  40d9cc:	ldr	x22, [sp, #184]
  40d9d0:	cmp	w0, w27
  40d9d4:	b.ne	40da00 <ferror@plt+0xb130>  // b.any
  40d9d8:	ldr	w0, [sp, #164]
  40d9dc:	cbnz	w0, 40da18 <ferror@plt+0xb148>
  40d9e0:	ldrb	w0, [x22]
  40d9e4:	cmp	w0, #0x24
  40d9e8:	b.ne	40da30 <ferror@plt+0xb160>  // b.any
  40d9ec:	add	x22, x22, #0x1
  40d9f0:	add	x0, sp, #0xc0
  40d9f4:	ldr	x2, [sp, #168]
  40d9f8:	str	x2, [x0, w1, uxtw #3]
  40d9fc:	b	40d8ec <ferror@plt+0xb01c>
  40da00:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  40da04:	add	x2, x2, #0x28
  40da08:	mov	w1, #0x489                 	// #1161
  40da0c:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40da10:	add	x0, x0, #0xfb0
  40da14:	bl	4062a0 <ferror@plt+0x39d0>
  40da18:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  40da1c:	add	x2, x2, #0x28
  40da20:	mov	w1, #0x48a                 	// #1162
  40da24:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40da28:	add	x0, x0, #0xfb0
  40da2c:	bl	4062a0 <ferror@plt+0x39d0>
  40da30:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  40da34:	add	x2, x2, #0x28
  40da38:	mov	w1, #0x48b                 	// #1163
  40da3c:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40da40:	add	x0, x0, #0xfb0
  40da44:	bl	4062a0 <ferror@plt+0x39d0>
  40da48:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  40da4c:	add	x2, x2, #0x28
  40da50:	mov	w1, #0x492                 	// #1170
  40da54:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40da58:	add	x0, x0, #0xfb0
  40da5c:	bl	4062a0 <ferror@plt+0x39d0>
  40da60:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  40da64:	add	x2, x2, #0x28
  40da68:	mov	w1, #0x496                 	// #1174
  40da6c:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40da70:	add	x0, x0, #0xfb0
  40da74:	bl	4062a0 <ferror@plt+0x39d0>
  40da78:	mov	x1, #0x1                   	// #1
  40da7c:	mov	x0, x25
  40da80:	bl	446d94 <_obstack_newchunk@@Base>
  40da84:	b	40d908 <ferror@plt+0xb038>
  40da88:	mov	x1, #0x1                   	// #1
  40da8c:	mov	x0, x25
  40da90:	bl	446d94 <_obstack_newchunk@@Base>
  40da94:	b	40d800 <ferror@plt+0xaf30>
  40da98:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  40da9c:	add	x2, x2, #0x28
  40daa0:	mov	w1, #0x49f                 	// #1183
  40daa4:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40daa8:	add	x0, x0, #0xfb0
  40daac:	bl	4062a0 <ferror@plt+0x39d0>
  40dab0:	mov	x2, x0
  40dab4:	ldrb	w0, [x0, #80]
  40dab8:	orr	w0, w0, #0x2
  40dabc:	strb	w0, [x2, #80]
  40dac0:	b	40d834 <ferror@plt+0xaf64>
  40dac4:	ldr	w26, [sp, #128]
  40dac8:	ldr	x1, [x19, #120]
  40dacc:	ldr	x0, [x19, #112]
  40dad0:	cmp	x1, x0
  40dad4:	b.eq	40db7c <ferror@plt+0xb2ac>  // b.none
  40dad8:	ldr	x0, [x19, #112]
  40dadc:	add	x2, x0, #0x1
  40dae0:	str	x2, [x19, #112]
  40dae4:	strb	wzr, [x0]
  40dae8:	cmp	w26, #0x3b
  40daec:	b.hi	40db8c <ferror@plt+0xb2bc>  // b.pmore
  40daf0:	add	w4, w26, #0x1
  40daf4:	mov	w26, w26
  40daf8:	add	x0, x19, #0x58
  40dafc:	ldr	x3, [x19, #104]
  40db00:	ldr	x1, [x19, #112]
  40db04:	cmp	x1, x3
  40db08:	b.eq	40dba4 <ferror@plt+0xb2d4>  // b.none
  40db0c:	ldr	x0, [x19, #136]
  40db10:	add	x1, x1, x0
  40db14:	bic	x0, x1, x0
  40db18:	str	x0, [x19, #112]
  40db1c:	ldr	x1, [x19, #96]
  40db20:	ldr	x2, [x19, #120]
  40db24:	sub	x0, x0, x1
  40db28:	sub	x1, x2, x1
  40db2c:	cmp	x0, x1
  40db30:	b.ls	40db38 <ferror@plt+0xb268>  // b.plast
  40db34:	str	x2, [x19, #112]
  40db38:	ldr	x1, [x19, #112]
  40db3c:	str	x1, [x19, #104]
  40db40:	str	x3, [x28, x26, lsl #3]
  40db44:	str	xzr, [x28, w4, uxtw #3]
  40db48:	str	x25, [x19, #176]
  40db4c:	ldr	w0, [x21, #36]
  40db50:	str	w0, [sp, #128]
  40db54:	ldr	w0, [x21, #40]
  40db58:	str	w0, [sp, #136]
  40db5c:	str	wzr, [x21, #40]
  40db60:	mov	w0, #0x1                   	// #1
  40db64:	str	w0, [x21, #36]
  40db68:	ldr	x26, [sp, #192]
  40db6c:	cbz	x26, 40ebdc <ferror@plt+0xc30c>
  40db70:	mov	w24, #0x0                   	// #0
  40db74:	b	40dfac <ferror@plt+0xb6dc>
  40db78:	mov	w26, #0x0                   	// #0
  40db7c:	mov	x1, #0x1                   	// #1
  40db80:	mov	x0, x25
  40db84:	bl	446d94 <_obstack_newchunk@@Base>
  40db88:	b	40dad8 <ferror@plt+0xb208>
  40db8c:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  40db90:	add	x2, x2, #0x28
  40db94:	mov	w1, #0x4a4                 	// #1188
  40db98:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40db9c:	add	x0, x0, #0xfb0
  40dba0:	bl	4062a0 <ferror@plt+0x39d0>
  40dba4:	mov	x2, x0
  40dba8:	ldrb	w0, [x0, #80]
  40dbac:	orr	w0, w0, #0x2
  40dbb0:	strb	w0, [x2, #80]
  40dbb4:	b	40db0c <ferror@plt+0xb23c>
  40dbb8:	cmp	w0, #0x23
  40dbbc:	b.eq	40dc44 <ferror@plt+0xb374>  // b.none
  40dbc0:	cmp	w0, #0x2b
  40dbc4:	b.ne	40dca8 <ferror@plt+0xb3d8>  // b.any
  40dbc8:	cbnz	w27, 40dc2c <ferror@plt+0xb35c>
  40dbcc:	mov	w27, #0x1                   	// #1
  40dbd0:	b	40dbe4 <ferror@plt+0xb314>
  40dbd4:	ldrb	w0, [sp, #183]
  40dbd8:	cbnz	w0, 40dc14 <ferror@plt+0xb344>
  40dbdc:	mov	w0, #0x1                   	// #1
  40dbe0:	strb	w0, [sp, #183]
  40dbe4:	add	x20, x20, #0x1
  40dbe8:	ldrb	w0, [x20]
  40dbec:	cmp	w0, #0x6c
  40dbf0:	b.eq	40dc80 <ferror@plt+0xb3b0>  // b.none
  40dbf4:	b.ls	40dbb8 <ferror@plt+0xb2e8>  // b.plast
  40dbf8:	cmp	w0, #0x71
  40dbfc:	b.eq	40dbd4 <ferror@plt+0xb304>  // b.none
  40dc00:	cmp	w0, #0x77
  40dc04:	b.ne	40dca8 <ferror@plt+0xb3d8>  // b.any
  40dc08:	cbnz	w23, 40dc68 <ferror@plt+0xb398>
  40dc0c:	mov	w23, #0x1                   	// #1
  40dc10:	b	40dbe4 <ferror@plt+0xb314>
  40dc14:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  40dc18:	add	x2, x2, #0x28
  40dc1c:	mov	w1, #0x4c0                 	// #1216
  40dc20:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40dc24:	add	x0, x0, #0xfb0
  40dc28:	bl	4062a0 <ferror@plt+0x39d0>
  40dc2c:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  40dc30:	add	x2, x2, #0x28
  40dc34:	mov	w1, #0x4c5                 	// #1221
  40dc38:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40dc3c:	add	x0, x0, #0xfb0
  40dc40:	bl	4062a0 <ferror@plt+0x39d0>
  40dc44:	cbnz	w28, 40dc50 <ferror@plt+0xb380>
  40dc48:	mov	w28, #0x1                   	// #1
  40dc4c:	b	40dbe4 <ferror@plt+0xb314>
  40dc50:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  40dc54:	add	x2, x2, #0x28
  40dc58:	mov	w1, #0x4ca                 	// #1226
  40dc5c:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40dc60:	add	x0, x0, #0xfb0
  40dc64:	bl	4062a0 <ferror@plt+0x39d0>
  40dc68:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  40dc6c:	add	x2, x2, #0x28
  40dc70:	mov	w1, #0x4cf                 	// #1231
  40dc74:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40dc78:	add	x0, x0, #0xfb0
  40dc7c:	bl	4062a0 <ferror@plt+0x39d0>
  40dc80:	cmp	w22, #0x1
  40dc84:	b.gt	40dc90 <ferror@plt+0xb3c0>
  40dc88:	add	w22, w22, #0x1
  40dc8c:	b	40dbe4 <ferror@plt+0xb314>
  40dc90:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  40dc94:	add	x2, x2, #0x28
  40dc98:	mov	w1, #0x4d5                 	// #1237
  40dc9c:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40dca0:	add	x0, x0, #0xfb0
  40dca4:	bl	4062a0 <ferror@plt+0x39d0>
  40dca8:	cmp	w22, #0x0
  40dcac:	ccmp	w23, #0x0, #0x4, ne  // ne = any
  40dcb0:	b.ne	40dd4c <ferror@plt+0xb47c>  // b.any
  40dcb4:	ldrb	w0, [sp, #183]
  40dcb8:	cbnz	w0, 40dd64 <ferror@plt+0xb494>
  40dcbc:	ldrb	w0, [x20]
  40dcc0:	cmp	w0, #0x6f
  40dcc4:	b.eq	40e21c <ferror@plt+0xb94c>  // b.none
  40dcc8:	b.hi	40de40 <ferror@plt+0xb570>  // b.pmore
  40dccc:	cmp	w0, #0x63
  40dcd0:	b.eq	40dff4 <ferror@plt+0xb724>  // b.none
  40dcd4:	b.ls	40dd74 <ferror@plt+0xb4a4>  // b.plast
  40dcd8:	cmp	w0, #0x66
  40dcdc:	b.eq	40e748 <ferror@plt+0xbe78>  // b.none
  40dce0:	cmp	w0, #0x69
  40dce4:	b.ne	40dde8 <ferror@plt+0xb518>  // b.any
  40dce8:	cbnz	w23, 40e088 <ferror@plt+0xb7b8>
  40dcec:	cmp	w22, #0x1
  40dcf0:	b.eq	40e12c <ferror@plt+0xb85c>  // b.none
  40dcf4:	cmp	w22, #0x2
  40dcf8:	b.eq	40e1a4 <ferror@plt+0xb8d4>  // b.none
  40dcfc:	cbnz	w22, 40df20 <ferror@plt+0xb650>
  40dd00:	ldr	x0, [x21, #8]
  40dd04:	add	x0, x0, #0xcc
  40dd08:	ldr	x1, [sp, #120]
  40dd0c:	ldr	x2, [x1, #8]
  40dd10:	ldr	w3, [x2, #24]
  40dd14:	ldr	x1, [x2]
  40dd18:	tbnz	w3, #31, 40e100 <ferror@plt+0xb830>
  40dd1c:	add	x3, x1, #0xb
  40dd20:	and	x3, x3, #0xfffffffffffffff8
  40dd24:	str	x3, [x2]
  40dd28:	ldr	w2, [x1]
  40dd2c:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  40dd30:	add	x1, x1, #0x40
  40dd34:	bl	402350 <sprintf@plt>
  40dd38:	ldr	x1, [x21, #8]
  40dd3c:	add	x1, x1, #0xcc
  40dd40:	mov	x0, x21
  40dd44:	bl	40cf0c <ferror@plt+0xa63c>
  40dd48:	b	40df20 <ferror@plt+0xb650>
  40dd4c:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  40dd50:	add	x2, x2, #0x28
  40dd54:	mov	w1, #0x4dc                 	// #1244
  40dd58:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40dd5c:	add	x0, x0, #0xfb0
  40dd60:	bl	4062a0 <ferror@plt+0x39d0>
  40dd64:	ldrb	w1, [x21, #67]
  40dd68:	mov	x0, x21
  40dd6c:	bl	40d100 <ferror@plt+0xa830>
  40dd70:	b	40dcbc <ferror@plt+0xb3ec>
  40dd74:	cmp	w0, #0x2e
  40dd78:	b.eq	40ea00 <ferror@plt+0xc130>  // b.none
  40dd7c:	cmp	w0, #0x5a
  40dd80:	b.ne	40ddf0 <ferror@plt+0xb520>  // b.any
  40dd84:	ldr	x0, [sp, #120]
  40dd88:	ldr	x0, [x0, #8]
  40dd8c:	ldr	w2, [x0, #24]
  40dd90:	ldr	x1, [x0]
  40dd94:	tbnz	w2, #31, 40e7c0 <ferror@plt+0xbef0>
  40dd98:	add	x2, x1, #0xf
  40dd9c:	and	x2, x2, #0xfffffffffffffff8
  40dda0:	str	x2, [x0]
  40dda4:	ldr	x23, [x1]
  40dda8:	ldr	x0, [sp, #120]
  40ddac:	ldr	x0, [x0, #8]
  40ddb0:	ldr	w2, [x0, #24]
  40ddb4:	ldr	x1, [x0]
  40ddb8:	tbnz	w2, #31, 40e7ec <ferror@plt+0xbf1c>
  40ddbc:	add	x2, x1, #0xb
  40ddc0:	and	x2, x2, #0xfffffffffffffff8
  40ddc4:	str	x2, [x0]
  40ddc8:	ldr	w22, [x1]
  40ddcc:	cbz	w22, 40df20 <ferror@plt+0xb650>
  40ddd0:	mov	x20, #0x0                   	// #0
  40ddd4:	adrp	x27, 459000 <_obstack_memory_used@@Base+0x12094>
  40ddd8:	add	x27, x27, #0x90
  40dddc:	sub	w26, w22, #0x1
  40dde0:	mov	w28, #0x2c                  	// #44
  40dde4:	b	40e824 <ferror@plt+0xbf54>
  40dde8:	cmp	w0, #0x64
  40ddec:	b.eq	40dce8 <ferror@plt+0xb418>  // b.none
  40ddf0:	ldr	x8, [x21, #48]
  40ddf4:	cbz	x8, 40eb90 <ferror@plt+0xc2c0>
  40ddf8:	str	x26, [sp]
  40ddfc:	add	x7, sp, #0xb7
  40de00:	mov	w6, w28
  40de04:	mov	w5, w27
  40de08:	mov	w4, w23
  40de0c:	mov	w3, w22
  40de10:	mov	x2, x20
  40de14:	ldr	x1, [sp, #120]
  40de18:	mov	x0, x21
  40de1c:	blr	x8
  40de20:	and	w0, w0, #0xff
  40de24:	cbnz	w0, 40df20 <ferror@plt+0xb650>
  40de28:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  40de2c:	add	x2, x2, #0x28
  40de30:	mov	w1, #0x571                 	// #1393
  40de34:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40de38:	add	x0, x0, #0xfb0
  40de3c:	bl	4062a0 <ferror@plt+0x39d0>
  40de40:	cmp	w0, #0x73
  40de44:	b.eq	40e414 <ferror@plt+0xbb44>  // b.none
  40de48:	cmp	w0, #0x73
  40de4c:	b.ls	40dec4 <ferror@plt+0xb5f4>  // b.plast
  40de50:	cmp	w0, #0x75
  40de54:	b.eq	40e550 <ferror@plt+0xbc80>  // b.none
  40de58:	cmp	w0, #0x78
  40de5c:	b.ne	40ddf0 <ferror@plt+0xb520>  // b.any
  40de60:	cbnz	w23, 40e86c <ferror@plt+0xbf9c>
  40de64:	cmp	w22, #0x1
  40de68:	b.eq	40e910 <ferror@plt+0xc040>  // b.none
  40de6c:	cmp	w22, #0x2
  40de70:	b.eq	40e988 <ferror@plt+0xc0b8>  // b.none
  40de74:	cbnz	w22, 40df20 <ferror@plt+0xb650>
  40de78:	ldr	x0, [x21, #8]
  40de7c:	add	x0, x0, #0xcc
  40de80:	ldr	x1, [sp, #120]
  40de84:	ldr	x2, [x1, #8]
  40de88:	ldr	w3, [x2, #24]
  40de8c:	ldr	x1, [x2]
  40de90:	tbnz	w3, #31, 40e8e4 <ferror@plt+0xc014>
  40de94:	add	x3, x1, #0xb
  40de98:	and	x3, x3, #0xfffffffffffffff8
  40de9c:	str	x3, [x2]
  40dea0:	ldr	w2, [x1]
  40dea4:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  40dea8:	add	x1, x1, #0xa0
  40deac:	bl	402350 <sprintf@plt>
  40deb0:	ldr	x1, [x21, #8]
  40deb4:	add	x1, x1, #0xcc
  40deb8:	mov	x0, x21
  40debc:	bl	40cf0c <ferror@plt+0xa63c>
  40dec0:	b	40df20 <ferror@plt+0xb650>
  40dec4:	cmp	w0, #0x70
  40dec8:	b.eq	40e4d8 <ferror@plt+0xbc08>  // b.none
  40decc:	cmp	w0, #0x72
  40ded0:	b.ne	40ddf0 <ferror@plt+0xb520>  // b.any
  40ded4:	ldrb	w22, [x21, #67]
  40ded8:	ldr	x0, [sp, #120]
  40dedc:	ldr	x0, [x0, #8]
  40dee0:	ldr	w2, [x0, #24]
  40dee4:	ldr	x1, [x0]
  40dee8:	tbnz	w2, #31, 40dfc8 <ferror@plt+0xb6f8>
  40deec:	add	x2, x1, #0xf
  40def0:	and	x2, x2, #0xfffffffffffffff8
  40def4:	str	x2, [x0]
  40def8:	ldr	x20, [x1]
  40defc:	mov	x0, x20
  40df00:	bl	4022b0 <strlen@plt>
  40df04:	mov	x2, x0
  40df08:	mov	x1, x20
  40df0c:	mov	w0, w22
  40df10:	bl	40744c <ferror@plt+0x4b7c>
  40df14:	mov	x1, x0
  40df18:	mov	x0, x21
  40df1c:	bl	40cf0c <ferror@plt+0xa63c>
  40df20:	ldrb	w0, [sp, #183]
  40df24:	cbnz	w0, 40eba8 <ferror@plt+0xc2d8>
  40df28:	ldr	x1, [x19, #120]
  40df2c:	ldr	x0, [x19, #112]
  40df30:	cmp	x1, x0
  40df34:	b.eq	40ebb8 <ferror@plt+0xc2e8>  // b.none
  40df38:	add	x0, x19, #0x58
  40df3c:	ldr	x1, [x19, #112]
  40df40:	add	x2, x1, #0x1
  40df44:	str	x2, [x19, #112]
  40df48:	strb	wzr, [x1]
  40df4c:	add	x1, sp, #0xc0
  40df50:	ldr	x4, [x1, w24, uxtw #3]
  40df54:	ldr	x3, [x19, #104]
  40df58:	ldr	x1, [x19, #112]
  40df5c:	cmp	x1, x3
  40df60:	b.eq	40ebc8 <ferror@plt+0xc2f8>  // b.none
  40df64:	ldr	x0, [x19, #136]
  40df68:	add	x1, x1, x0
  40df6c:	bic	x0, x1, x0
  40df70:	str	x0, [x19, #112]
  40df74:	ldr	x1, [x19, #96]
  40df78:	ldr	x2, [x19, #120]
  40df7c:	sub	x0, x0, x1
  40df80:	sub	x1, x2, x1
  40df84:	cmp	x0, x1
  40df88:	b.ls	40df90 <ferror@plt+0xb6c0>  // b.plast
  40df8c:	str	x2, [x19, #112]
  40df90:	ldr	x1, [x19, #112]
  40df94:	str	x1, [x19, #104]
  40df98:	str	x3, [x4]
  40df9c:	add	w24, w24, #0x1
  40dfa0:	add	x0, sp, #0xc0
  40dfa4:	ldr	x26, [x0, w24, uxtw #3]
  40dfa8:	cbz	x26, 40ebdc <ferror@plt+0xc30c>
  40dfac:	strb	wzr, [sp, #183]
  40dfb0:	ldr	x20, [x26]
  40dfb4:	mov	w28, #0x0                   	// #0
  40dfb8:	mov	w27, #0x0                   	// #0
  40dfbc:	mov	w23, #0x0                   	// #0
  40dfc0:	mov	w22, #0x0                   	// #0
  40dfc4:	b	40dbe8 <ferror@plt+0xb318>
  40dfc8:	add	w3, w2, #0x8
  40dfcc:	str	w3, [x0, #24]
  40dfd0:	cmp	w3, #0x0
  40dfd4:	b.le	40dfe8 <ferror@plt+0xb718>
  40dfd8:	add	x2, x1, #0xf
  40dfdc:	and	x2, x2, #0xfffffffffffffff8
  40dfe0:	str	x2, [x0]
  40dfe4:	b	40def8 <ferror@plt+0xb628>
  40dfe8:	ldr	x1, [x0, #8]
  40dfec:	add	x1, x1, w2, sxtw
  40dff0:	b	40def8 <ferror@plt+0xb628>
  40dff4:	ldr	x0, [sp, #120]
  40dff8:	ldr	x0, [x0, #8]
  40dffc:	ldr	w2, [x0, #24]
  40e000:	ldr	x1, [x0]
  40e004:	tbnz	w2, #31, 40e040 <ferror@plt+0xb770>
  40e008:	add	x2, x1, #0xb
  40e00c:	and	x2, x2, #0xfffffffffffffff8
  40e010:	str	x2, [x0]
  40e014:	ldr	w1, [x1]
  40e018:	and	x2, x1, #0xff
  40e01c:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1f094>
  40e020:	add	x0, x0, #0xa68
  40e024:	ldrh	w0, [x0, x2, lsl #1]
  40e028:	tbnz	w0, #4, 40e034 <ferror@plt+0xb764>
  40e02c:	ldrb	w0, [sp, #183]
  40e030:	cbnz	w0, 40e06c <ferror@plt+0xb79c>
  40e034:	mov	x0, x21
  40e038:	bl	40c914 <ferror@plt+0xa044>
  40e03c:	b	40df20 <ferror@plt+0xb650>
  40e040:	add	w3, w2, #0x8
  40e044:	str	w3, [x0, #24]
  40e048:	cmp	w3, #0x0
  40e04c:	b.le	40e060 <ferror@plt+0xb790>
  40e050:	add	x2, x1, #0xb
  40e054:	and	x2, x2, #0xfffffffffffffff8
  40e058:	str	x2, [x0]
  40e05c:	b	40e014 <ferror@plt+0xb744>
  40e060:	ldr	x1, [x0, #8]
  40e064:	add	x1, x1, w2, sxtw
  40e068:	b	40e014 <ferror@plt+0xb744>
  40e06c:	strb	wzr, [sp, #185]
  40e070:	strb	w1, [sp, #184]
  40e074:	mov	x2, #0x1                   	// #1
  40e078:	add	x1, sp, #0xb8
  40e07c:	mov	x0, x21
  40e080:	bl	40cdcc <ferror@plt+0xa4fc>
  40e084:	b	40df20 <ferror@plt+0xb650>
  40e088:	ldr	x0, [sp, #120]
  40e08c:	ldr	x0, [x0, #8]
  40e090:	ldr	w2, [x0, #24]
  40e094:	ldr	x1, [x0]
  40e098:	tbnz	w2, #31, 40e0d4 <ferror@plt+0xb804>
  40e09c:	add	x2, x1, #0xf
  40e0a0:	and	x2, x2, #0xfffffffffffffff8
  40e0a4:	str	x2, [x0]
  40e0a8:	ldr	x0, [x21, #8]
  40e0ac:	ldr	x2, [x1]
  40e0b0:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  40e0b4:	add	x1, x1, #0xd0
  40e0b8:	add	x0, x0, #0xcc
  40e0bc:	bl	402350 <sprintf@plt>
  40e0c0:	ldr	x1, [x21, #8]
  40e0c4:	add	x1, x1, #0xcc
  40e0c8:	mov	x0, x21
  40e0cc:	bl	40cf0c <ferror@plt+0xa63c>
  40e0d0:	b	40df20 <ferror@plt+0xb650>
  40e0d4:	add	w3, w2, #0x8
  40e0d8:	str	w3, [x0, #24]
  40e0dc:	cmp	w3, #0x0
  40e0e0:	b.le	40e0f4 <ferror@plt+0xb824>
  40e0e4:	add	x2, x1, #0xf
  40e0e8:	and	x2, x2, #0xfffffffffffffff8
  40e0ec:	str	x2, [x0]
  40e0f0:	b	40e0a8 <ferror@plt+0xb7d8>
  40e0f4:	ldr	x1, [x0, #8]
  40e0f8:	add	x1, x1, w2, sxtw
  40e0fc:	b	40e0a8 <ferror@plt+0xb7d8>
  40e100:	add	w4, w3, #0x8
  40e104:	str	w4, [x2, #24]
  40e108:	cmp	w4, #0x0
  40e10c:	b.le	40e120 <ferror@plt+0xb850>
  40e110:	add	x3, x1, #0xb
  40e114:	and	x3, x3, #0xfffffffffffffff8
  40e118:	str	x3, [x2]
  40e11c:	b	40dd28 <ferror@plt+0xb458>
  40e120:	ldr	x1, [x2, #8]
  40e124:	add	x1, x1, w3, sxtw
  40e128:	b	40dd28 <ferror@plt+0xb458>
  40e12c:	ldr	x0, [x21, #8]
  40e130:	add	x0, x0, #0xcc
  40e134:	ldr	x1, [sp, #120]
  40e138:	ldr	x2, [x1, #8]
  40e13c:	ldr	w3, [x2, #24]
  40e140:	ldr	x1, [x2]
  40e144:	tbnz	w3, #31, 40e178 <ferror@plt+0xb8a8>
  40e148:	add	x3, x1, #0xf
  40e14c:	and	x3, x3, #0xfffffffffffffff8
  40e150:	str	x3, [x2]
  40e154:	ldr	x2, [x1]
  40e158:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  40e15c:	add	x1, x1, #0xd0
  40e160:	bl	402350 <sprintf@plt>
  40e164:	ldr	x1, [x21, #8]
  40e168:	add	x1, x1, #0xcc
  40e16c:	mov	x0, x21
  40e170:	bl	40cf0c <ferror@plt+0xa63c>
  40e174:	b	40df20 <ferror@plt+0xb650>
  40e178:	add	w4, w3, #0x8
  40e17c:	str	w4, [x2, #24]
  40e180:	cmp	w4, #0x0
  40e184:	b.le	40e198 <ferror@plt+0xb8c8>
  40e188:	add	x3, x1, #0xf
  40e18c:	and	x3, x3, #0xfffffffffffffff8
  40e190:	str	x3, [x2]
  40e194:	b	40e154 <ferror@plt+0xb884>
  40e198:	ldr	x1, [x2, #8]
  40e19c:	add	x1, x1, w3, sxtw
  40e1a0:	b	40e154 <ferror@plt+0xb884>
  40e1a4:	ldr	x0, [x21, #8]
  40e1a8:	add	x0, x0, #0xcc
  40e1ac:	ldr	x1, [sp, #120]
  40e1b0:	ldr	x2, [x1, #8]
  40e1b4:	ldr	w3, [x2, #24]
  40e1b8:	ldr	x1, [x2]
  40e1bc:	tbnz	w3, #31, 40e1f0 <ferror@plt+0xb920>
  40e1c0:	add	x3, x1, #0xf
  40e1c4:	and	x3, x3, #0xfffffffffffffff8
  40e1c8:	str	x3, [x2]
  40e1cc:	ldr	x2, [x1]
  40e1d0:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  40e1d4:	add	x1, x1, #0x48
  40e1d8:	bl	402350 <sprintf@plt>
  40e1dc:	ldr	x1, [x21, #8]
  40e1e0:	add	x1, x1, #0xcc
  40e1e4:	mov	x0, x21
  40e1e8:	bl	40cf0c <ferror@plt+0xa63c>
  40e1ec:	b	40df20 <ferror@plt+0xb650>
  40e1f0:	add	w4, w3, #0x8
  40e1f4:	str	w4, [x2, #24]
  40e1f8:	cmp	w4, #0x0
  40e1fc:	b.le	40e210 <ferror@plt+0xb940>
  40e200:	add	x3, x1, #0xf
  40e204:	and	x3, x3, #0xfffffffffffffff8
  40e208:	str	x3, [x2]
  40e20c:	b	40e1cc <ferror@plt+0xb8fc>
  40e210:	ldr	x1, [x2, #8]
  40e214:	add	x1, x1, w3, sxtw
  40e218:	b	40e1cc <ferror@plt+0xb8fc>
  40e21c:	cbnz	w23, 40e280 <ferror@plt+0xb9b0>
  40e220:	cmp	w22, #0x1
  40e224:	b.eq	40e324 <ferror@plt+0xba54>  // b.none
  40e228:	cmp	w22, #0x2
  40e22c:	b.eq	40e39c <ferror@plt+0xbacc>  // b.none
  40e230:	cbnz	w22, 40df20 <ferror@plt+0xb650>
  40e234:	ldr	x0, [x21, #8]
  40e238:	add	x0, x0, #0xcc
  40e23c:	ldr	x1, [sp, #120]
  40e240:	ldr	x2, [x1, #8]
  40e244:	ldr	w3, [x2, #24]
  40e248:	ldr	x1, [x2]
  40e24c:	tbnz	w3, #31, 40e2f8 <ferror@plt+0xba28>
  40e250:	add	x3, x1, #0xb
  40e254:	and	x3, x3, #0xfffffffffffffff8
  40e258:	str	x3, [x2]
  40e25c:	ldr	w2, [x1]
  40e260:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  40e264:	add	x1, x1, #0x58
  40e268:	bl	402350 <sprintf@plt>
  40e26c:	ldr	x1, [x21, #8]
  40e270:	add	x1, x1, #0xcc
  40e274:	mov	x0, x21
  40e278:	bl	40cf0c <ferror@plt+0xa63c>
  40e27c:	b	40df20 <ferror@plt+0xb650>
  40e280:	ldr	x0, [x21, #8]
  40e284:	add	x0, x0, #0xcc
  40e288:	ldr	x1, [sp, #120]
  40e28c:	ldr	x2, [x1, #8]
  40e290:	ldr	w3, [x2, #24]
  40e294:	ldr	x1, [x2]
  40e298:	tbnz	w3, #31, 40e2cc <ferror@plt+0xb9fc>
  40e29c:	add	x3, x1, #0xf
  40e2a0:	and	x3, x3, #0xfffffffffffffff8
  40e2a4:	str	x3, [x2]
  40e2a8:	ldr	x2, [x1]
  40e2ac:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  40e2b0:	add	x1, x1, #0x50
  40e2b4:	bl	402350 <sprintf@plt>
  40e2b8:	ldr	x1, [x21, #8]
  40e2bc:	add	x1, x1, #0xcc
  40e2c0:	mov	x0, x21
  40e2c4:	bl	40cf0c <ferror@plt+0xa63c>
  40e2c8:	b	40df20 <ferror@plt+0xb650>
  40e2cc:	add	w4, w3, #0x8
  40e2d0:	str	w4, [x2, #24]
  40e2d4:	cmp	w4, #0x0
  40e2d8:	b.le	40e2ec <ferror@plt+0xba1c>
  40e2dc:	add	x3, x1, #0xf
  40e2e0:	and	x3, x3, #0xfffffffffffffff8
  40e2e4:	str	x3, [x2]
  40e2e8:	b	40e2a8 <ferror@plt+0xb9d8>
  40e2ec:	ldr	x1, [x2, #8]
  40e2f0:	add	x1, x1, w3, sxtw
  40e2f4:	b	40e2a8 <ferror@plt+0xb9d8>
  40e2f8:	add	w4, w3, #0x8
  40e2fc:	str	w4, [x2, #24]
  40e300:	cmp	w4, #0x0
  40e304:	b.le	40e318 <ferror@plt+0xba48>
  40e308:	add	x3, x1, #0xb
  40e30c:	and	x3, x3, #0xfffffffffffffff8
  40e310:	str	x3, [x2]
  40e314:	b	40e25c <ferror@plt+0xb98c>
  40e318:	ldr	x1, [x2, #8]
  40e31c:	add	x1, x1, w3, sxtw
  40e320:	b	40e25c <ferror@plt+0xb98c>
  40e324:	ldr	x0, [x21, #8]
  40e328:	add	x0, x0, #0xcc
  40e32c:	ldr	x1, [sp, #120]
  40e330:	ldr	x2, [x1, #8]
  40e334:	ldr	w3, [x2, #24]
  40e338:	ldr	x1, [x2]
  40e33c:	tbnz	w3, #31, 40e370 <ferror@plt+0xbaa0>
  40e340:	add	x3, x1, #0xf
  40e344:	and	x3, x3, #0xfffffffffffffff8
  40e348:	str	x3, [x2]
  40e34c:	ldr	x2, [x1]
  40e350:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  40e354:	add	x1, x1, #0x50
  40e358:	bl	402350 <sprintf@plt>
  40e35c:	ldr	x1, [x21, #8]
  40e360:	add	x1, x1, #0xcc
  40e364:	mov	x0, x21
  40e368:	bl	40cf0c <ferror@plt+0xa63c>
  40e36c:	b	40df20 <ferror@plt+0xb650>
  40e370:	add	w4, w3, #0x8
  40e374:	str	w4, [x2, #24]
  40e378:	cmp	w4, #0x0
  40e37c:	b.le	40e390 <ferror@plt+0xbac0>
  40e380:	add	x3, x1, #0xf
  40e384:	and	x3, x3, #0xfffffffffffffff8
  40e388:	str	x3, [x2]
  40e38c:	b	40e34c <ferror@plt+0xba7c>
  40e390:	ldr	x1, [x2, #8]
  40e394:	add	x1, x1, w3, sxtw
  40e398:	b	40e34c <ferror@plt+0xba7c>
  40e39c:	ldr	x0, [x21, #8]
  40e3a0:	add	x0, x0, #0xcc
  40e3a4:	ldr	x1, [sp, #120]
  40e3a8:	ldr	x2, [x1, #8]
  40e3ac:	ldr	w3, [x2, #24]
  40e3b0:	ldr	x1, [x2]
  40e3b4:	tbnz	w3, #31, 40e3e8 <ferror@plt+0xbb18>
  40e3b8:	add	x3, x1, #0xf
  40e3bc:	and	x3, x3, #0xfffffffffffffff8
  40e3c0:	str	x3, [x2]
  40e3c4:	ldr	x2, [x1]
  40e3c8:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  40e3cc:	add	x1, x1, #0x60
  40e3d0:	bl	402350 <sprintf@plt>
  40e3d4:	ldr	x1, [x21, #8]
  40e3d8:	add	x1, x1, #0xcc
  40e3dc:	mov	x0, x21
  40e3e0:	bl	40cf0c <ferror@plt+0xa63c>
  40e3e4:	b	40df20 <ferror@plt+0xb650>
  40e3e8:	add	w4, w3, #0x8
  40e3ec:	str	w4, [x2, #24]
  40e3f0:	cmp	w4, #0x0
  40e3f4:	b.le	40e408 <ferror@plt+0xbb38>
  40e3f8:	add	x3, x1, #0xf
  40e3fc:	and	x3, x3, #0xfffffffffffffff8
  40e400:	str	x3, [x2]
  40e404:	b	40e3c4 <ferror@plt+0xbaf4>
  40e408:	ldr	x1, [x2, #8]
  40e40c:	add	x1, x1, w3, sxtw
  40e410:	b	40e3c4 <ferror@plt+0xbaf4>
  40e414:	ldrb	w0, [sp, #183]
  40e418:	cbz	w0, 40e47c <ferror@plt+0xbbac>
  40e41c:	ldr	x0, [sp, #120]
  40e420:	ldr	x0, [x0, #8]
  40e424:	ldr	w2, [x0, #24]
  40e428:	ldr	x1, [x0]
  40e42c:	tbnz	w2, #31, 40e450 <ferror@plt+0xbb80>
  40e430:	add	x2, x1, #0xf
  40e434:	and	x2, x2, #0xfffffffffffffff8
  40e438:	str	x2, [x0]
  40e43c:	mov	x2, #0xffffffffffffffff    	// #-1
  40e440:	ldr	x1, [x1]
  40e444:	mov	x0, x21
  40e448:	bl	40cdcc <ferror@plt+0xa4fc>
  40e44c:	b	40df20 <ferror@plt+0xb650>
  40e450:	add	w3, w2, #0x8
  40e454:	str	w3, [x0, #24]
  40e458:	cmp	w3, #0x0
  40e45c:	b.le	40e470 <ferror@plt+0xbba0>
  40e460:	add	x2, x1, #0xf
  40e464:	and	x2, x2, #0xfffffffffffffff8
  40e468:	str	x2, [x0]
  40e46c:	b	40e43c <ferror@plt+0xbb6c>
  40e470:	ldr	x1, [x0, #8]
  40e474:	add	x1, x1, w2, sxtw
  40e478:	b	40e43c <ferror@plt+0xbb6c>
  40e47c:	ldr	x0, [sp, #120]
  40e480:	ldr	x0, [x0, #8]
  40e484:	ldr	w2, [x0, #24]
  40e488:	ldr	x1, [x0]
  40e48c:	tbnz	w2, #31, 40e4ac <ferror@plt+0xbbdc>
  40e490:	add	x2, x1, #0xf
  40e494:	and	x2, x2, #0xfffffffffffffff8
  40e498:	str	x2, [x0]
  40e49c:	ldr	x1, [x1]
  40e4a0:	mov	x0, x21
  40e4a4:	bl	40cf0c <ferror@plt+0xa63c>
  40e4a8:	b	40df20 <ferror@plt+0xb650>
  40e4ac:	add	w3, w2, #0x8
  40e4b0:	str	w3, [x0, #24]
  40e4b4:	cmp	w3, #0x0
  40e4b8:	b.le	40e4cc <ferror@plt+0xbbfc>
  40e4bc:	add	x2, x1, #0xf
  40e4c0:	and	x2, x2, #0xfffffffffffffff8
  40e4c4:	str	x2, [x0]
  40e4c8:	b	40e49c <ferror@plt+0xbbcc>
  40e4cc:	ldr	x1, [x0, #8]
  40e4d0:	add	x1, x1, w2, sxtw
  40e4d4:	b	40e49c <ferror@plt+0xbbcc>
  40e4d8:	ldr	x0, [x21, #8]
  40e4dc:	add	x0, x0, #0xcc
  40e4e0:	ldr	x1, [sp, #120]
  40e4e4:	ldr	x1, [x1, #8]
  40e4e8:	ldr	w3, [x1, #24]
  40e4ec:	ldr	x2, [x1]
  40e4f0:	tbnz	w3, #31, 40e524 <ferror@plt+0xbc54>
  40e4f4:	add	x3, x2, #0xf
  40e4f8:	and	x3, x3, #0xfffffffffffffff8
  40e4fc:	str	x3, [x1]
  40e500:	ldr	x2, [x2]
  40e504:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  40e508:	add	x1, x1, #0x68
  40e50c:	bl	402350 <sprintf@plt>
  40e510:	ldr	x1, [x21, #8]
  40e514:	add	x1, x1, #0xcc
  40e518:	mov	x0, x21
  40e51c:	bl	40cf0c <ferror@plt+0xa63c>
  40e520:	b	40df20 <ferror@plt+0xb650>
  40e524:	add	w4, w3, #0x8
  40e528:	str	w4, [x1, #24]
  40e52c:	cmp	w4, #0x0
  40e530:	b.le	40e544 <ferror@plt+0xbc74>
  40e534:	add	x3, x2, #0xf
  40e538:	and	x3, x3, #0xfffffffffffffff8
  40e53c:	str	x3, [x1]
  40e540:	b	40e500 <ferror@plt+0xbc30>
  40e544:	ldr	x2, [x1, #8]
  40e548:	add	x2, x2, w3, sxtw
  40e54c:	b	40e500 <ferror@plt+0xbc30>
  40e550:	cbnz	w23, 40e5b4 <ferror@plt+0xbce4>
  40e554:	cmp	w22, #0x1
  40e558:	b.eq	40e658 <ferror@plt+0xbd88>  // b.none
  40e55c:	cmp	w22, #0x2
  40e560:	b.eq	40e6d0 <ferror@plt+0xbe00>  // b.none
  40e564:	cbnz	w22, 40df20 <ferror@plt+0xb650>
  40e568:	ldr	x0, [x21, #8]
  40e56c:	add	x0, x0, #0xcc
  40e570:	ldr	x1, [sp, #120]
  40e574:	ldr	x2, [x1, #8]
  40e578:	ldr	w3, [x2, #24]
  40e57c:	ldr	x1, [x2]
  40e580:	tbnz	w3, #31, 40e62c <ferror@plt+0xbd5c>
  40e584:	add	x3, x1, #0xb
  40e588:	and	x3, x3, #0xfffffffffffffff8
  40e58c:	str	x3, [x2]
  40e590:	ldr	w2, [x1]
  40e594:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  40e598:	add	x1, x1, #0x78
  40e59c:	bl	402350 <sprintf@plt>
  40e5a0:	ldr	x1, [x21, #8]
  40e5a4:	add	x1, x1, #0xcc
  40e5a8:	mov	x0, x21
  40e5ac:	bl	40cf0c <ferror@plt+0xa63c>
  40e5b0:	b	40df20 <ferror@plt+0xb650>
  40e5b4:	ldr	x0, [x21, #8]
  40e5b8:	add	x0, x0, #0xcc
  40e5bc:	ldr	x1, [sp, #120]
  40e5c0:	ldr	x2, [x1, #8]
  40e5c4:	ldr	w3, [x2, #24]
  40e5c8:	ldr	x1, [x2]
  40e5cc:	tbnz	w3, #31, 40e600 <ferror@plt+0xbd30>
  40e5d0:	add	x3, x1, #0xf
  40e5d4:	and	x3, x3, #0xfffffffffffffff8
  40e5d8:	str	x3, [x2]
  40e5dc:	ldr	x2, [x1]
  40e5e0:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  40e5e4:	add	x1, x1, #0x70
  40e5e8:	bl	402350 <sprintf@plt>
  40e5ec:	ldr	x1, [x21, #8]
  40e5f0:	add	x1, x1, #0xcc
  40e5f4:	mov	x0, x21
  40e5f8:	bl	40cf0c <ferror@plt+0xa63c>
  40e5fc:	b	40df20 <ferror@plt+0xb650>
  40e600:	add	w4, w3, #0x8
  40e604:	str	w4, [x2, #24]
  40e608:	cmp	w4, #0x0
  40e60c:	b.le	40e620 <ferror@plt+0xbd50>
  40e610:	add	x3, x1, #0xf
  40e614:	and	x3, x3, #0xfffffffffffffff8
  40e618:	str	x3, [x2]
  40e61c:	b	40e5dc <ferror@plt+0xbd0c>
  40e620:	ldr	x1, [x2, #8]
  40e624:	add	x1, x1, w3, sxtw
  40e628:	b	40e5dc <ferror@plt+0xbd0c>
  40e62c:	add	w4, w3, #0x8
  40e630:	str	w4, [x2, #24]
  40e634:	cmp	w4, #0x0
  40e638:	b.le	40e64c <ferror@plt+0xbd7c>
  40e63c:	add	x3, x1, #0xb
  40e640:	and	x3, x3, #0xfffffffffffffff8
  40e644:	str	x3, [x2]
  40e648:	b	40e590 <ferror@plt+0xbcc0>
  40e64c:	ldr	x1, [x2, #8]
  40e650:	add	x1, x1, w3, sxtw
  40e654:	b	40e590 <ferror@plt+0xbcc0>
  40e658:	ldr	x0, [x21, #8]
  40e65c:	add	x0, x0, #0xcc
  40e660:	ldr	x1, [sp, #120]
  40e664:	ldr	x2, [x1, #8]
  40e668:	ldr	w3, [x2, #24]
  40e66c:	ldr	x1, [x2]
  40e670:	tbnz	w3, #31, 40e6a4 <ferror@plt+0xbdd4>
  40e674:	add	x3, x1, #0xf
  40e678:	and	x3, x3, #0xfffffffffffffff8
  40e67c:	str	x3, [x2]
  40e680:	ldr	x2, [x1]
  40e684:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  40e688:	add	x1, x1, #0x70
  40e68c:	bl	402350 <sprintf@plt>
  40e690:	ldr	x1, [x21, #8]
  40e694:	add	x1, x1, #0xcc
  40e698:	mov	x0, x21
  40e69c:	bl	40cf0c <ferror@plt+0xa63c>
  40e6a0:	b	40df20 <ferror@plt+0xb650>
  40e6a4:	add	w4, w3, #0x8
  40e6a8:	str	w4, [x2, #24]
  40e6ac:	cmp	w4, #0x0
  40e6b0:	b.le	40e6c4 <ferror@plt+0xbdf4>
  40e6b4:	add	x3, x1, #0xf
  40e6b8:	and	x3, x3, #0xfffffffffffffff8
  40e6bc:	str	x3, [x2]
  40e6c0:	b	40e680 <ferror@plt+0xbdb0>
  40e6c4:	ldr	x1, [x2, #8]
  40e6c8:	add	x1, x1, w3, sxtw
  40e6cc:	b	40e680 <ferror@plt+0xbdb0>
  40e6d0:	ldr	x0, [x21, #8]
  40e6d4:	add	x0, x0, #0xcc
  40e6d8:	ldr	x1, [sp, #120]
  40e6dc:	ldr	x2, [x1, #8]
  40e6e0:	ldr	w3, [x2, #24]
  40e6e4:	ldr	x1, [x2]
  40e6e8:	tbnz	w3, #31, 40e71c <ferror@plt+0xbe4c>
  40e6ec:	add	x3, x1, #0xf
  40e6f0:	and	x3, x3, #0xfffffffffffffff8
  40e6f4:	str	x3, [x2]
  40e6f8:	ldr	x2, [x1]
  40e6fc:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  40e700:	add	x1, x1, #0x80
  40e704:	bl	402350 <sprintf@plt>
  40e708:	ldr	x1, [x21, #8]
  40e70c:	add	x1, x1, #0xcc
  40e710:	mov	x0, x21
  40e714:	bl	40cf0c <ferror@plt+0xa63c>
  40e718:	b	40df20 <ferror@plt+0xb650>
  40e71c:	add	w4, w3, #0x8
  40e720:	str	w4, [x2, #24]
  40e724:	cmp	w4, #0x0
  40e728:	b.le	40e73c <ferror@plt+0xbe6c>
  40e72c:	add	x3, x1, #0xf
  40e730:	and	x3, x3, #0xfffffffffffffff8
  40e734:	str	x3, [x2]
  40e738:	b	40e6f8 <ferror@plt+0xbe28>
  40e73c:	ldr	x1, [x2, #8]
  40e740:	add	x1, x1, w3, sxtw
  40e744:	b	40e6f8 <ferror@plt+0xbe28>
  40e748:	ldr	x0, [x21, #8]
  40e74c:	add	x0, x0, #0xcc
  40e750:	ldr	x1, [sp, #120]
  40e754:	ldr	x1, [x1, #8]
  40e758:	ldr	w3, [x1, #28]
  40e75c:	ldr	x2, [x1]
  40e760:	tbnz	w3, #31, 40e794 <ferror@plt+0xbec4>
  40e764:	add	x3, x2, #0xf
  40e768:	and	x3, x3, #0xfffffffffffffff8
  40e76c:	str	x3, [x1]
  40e770:	ldr	d0, [x2]
  40e774:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  40e778:	add	x1, x1, #0x88
  40e77c:	bl	402350 <sprintf@plt>
  40e780:	ldr	x1, [x21, #8]
  40e784:	add	x1, x1, #0xcc
  40e788:	mov	x0, x21
  40e78c:	bl	40cf0c <ferror@plt+0xa63c>
  40e790:	b	40df20 <ferror@plt+0xb650>
  40e794:	add	w4, w3, #0x10
  40e798:	str	w4, [x1, #28]
  40e79c:	cmp	w4, #0x0
  40e7a0:	b.le	40e7b4 <ferror@plt+0xbee4>
  40e7a4:	add	x3, x2, #0xf
  40e7a8:	and	x3, x3, #0xfffffffffffffff8
  40e7ac:	str	x3, [x1]
  40e7b0:	b	40e770 <ferror@plt+0xbea0>
  40e7b4:	ldr	x2, [x1, #16]
  40e7b8:	add	x2, x2, w3, sxtw
  40e7bc:	b	40e770 <ferror@plt+0xbea0>
  40e7c0:	add	w3, w2, #0x8
  40e7c4:	str	w3, [x0, #24]
  40e7c8:	cmp	w3, #0x0
  40e7cc:	b.le	40e7e0 <ferror@plt+0xbf10>
  40e7d0:	add	x2, x1, #0xf
  40e7d4:	and	x2, x2, #0xfffffffffffffff8
  40e7d8:	str	x2, [x0]
  40e7dc:	b	40dda4 <ferror@plt+0xb4d4>
  40e7e0:	ldr	x1, [x0, #8]
  40e7e4:	add	x1, x1, w2, sxtw
  40e7e8:	b	40dda4 <ferror@plt+0xb4d4>
  40e7ec:	add	w3, w2, #0x8
  40e7f0:	str	w3, [x0, #24]
  40e7f4:	cmp	w3, #0x0
  40e7f8:	b.le	40e80c <ferror@plt+0xbf3c>
  40e7fc:	add	x2, x1, #0xb
  40e800:	and	x2, x2, #0xfffffffffffffff8
  40e804:	str	x2, [x0]
  40e808:	b	40ddc8 <ferror@plt+0xb4f8>
  40e80c:	ldr	x1, [x0, #8]
  40e810:	add	x1, x1, w2, sxtw
  40e814:	b	40ddc8 <ferror@plt+0xb4f8>
  40e818:	add	x20, x20, #0x1
  40e81c:	cmp	w22, w20
  40e820:	b.ls	40df20 <ferror@plt+0xb650>  // b.plast
  40e824:	ldr	x0, [x21, #8]
  40e828:	ldr	w2, [x23, x20, lsl #2]
  40e82c:	mov	x1, x27
  40e830:	add	x0, x0, #0xcc
  40e834:	bl	402350 <sprintf@plt>
  40e838:	ldr	x1, [x21, #8]
  40e83c:	add	x1, x1, #0xcc
  40e840:	mov	x0, x21
  40e844:	bl	40cf0c <ferror@plt+0xa63c>
  40e848:	cmp	w26, w20
  40e84c:	b.ls	40e818 <ferror@plt+0xbf48>  // b.plast
  40e850:	mov	w1, w28
  40e854:	mov	x0, x21
  40e858:	bl	40c914 <ferror@plt+0xa044>
  40e85c:	mov	w1, #0x20                  	// #32
  40e860:	mov	x0, x21
  40e864:	bl	40c914 <ferror@plt+0xa044>
  40e868:	b	40e818 <ferror@plt+0xbf48>
  40e86c:	ldr	x0, [x21, #8]
  40e870:	add	x0, x0, #0xcc
  40e874:	ldr	x1, [sp, #120]
  40e878:	ldr	x2, [x1, #8]
  40e87c:	ldr	w3, [x2, #24]
  40e880:	ldr	x1, [x2]
  40e884:	tbnz	w3, #31, 40e8b8 <ferror@plt+0xbfe8>
  40e888:	add	x3, x1, #0xf
  40e88c:	and	x3, x3, #0xfffffffffffffff8
  40e890:	str	x3, [x2]
  40e894:	ldr	x2, [x1]
  40e898:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  40e89c:	add	x1, x1, #0x98
  40e8a0:	bl	402350 <sprintf@plt>
  40e8a4:	ldr	x1, [x21, #8]
  40e8a8:	add	x1, x1, #0xcc
  40e8ac:	mov	x0, x21
  40e8b0:	bl	40cf0c <ferror@plt+0xa63c>
  40e8b4:	b	40df20 <ferror@plt+0xb650>
  40e8b8:	add	w4, w3, #0x8
  40e8bc:	str	w4, [x2, #24]
  40e8c0:	cmp	w4, #0x0
  40e8c4:	b.le	40e8d8 <ferror@plt+0xc008>
  40e8c8:	add	x3, x1, #0xf
  40e8cc:	and	x3, x3, #0xfffffffffffffff8
  40e8d0:	str	x3, [x2]
  40e8d4:	b	40e894 <ferror@plt+0xbfc4>
  40e8d8:	ldr	x1, [x2, #8]
  40e8dc:	add	x1, x1, w3, sxtw
  40e8e0:	b	40e894 <ferror@plt+0xbfc4>
  40e8e4:	add	w4, w3, #0x8
  40e8e8:	str	w4, [x2, #24]
  40e8ec:	cmp	w4, #0x0
  40e8f0:	b.le	40e904 <ferror@plt+0xc034>
  40e8f4:	add	x3, x1, #0xb
  40e8f8:	and	x3, x3, #0xfffffffffffffff8
  40e8fc:	str	x3, [x2]
  40e900:	b	40dea0 <ferror@plt+0xb5d0>
  40e904:	ldr	x1, [x2, #8]
  40e908:	add	x1, x1, w3, sxtw
  40e90c:	b	40dea0 <ferror@plt+0xb5d0>
  40e910:	ldr	x0, [x21, #8]
  40e914:	add	x0, x0, #0xcc
  40e918:	ldr	x1, [sp, #120]
  40e91c:	ldr	x2, [x1, #8]
  40e920:	ldr	w3, [x2, #24]
  40e924:	ldr	x1, [x2]
  40e928:	tbnz	w3, #31, 40e95c <ferror@plt+0xc08c>
  40e92c:	add	x3, x1, #0xf
  40e930:	and	x3, x3, #0xfffffffffffffff8
  40e934:	str	x3, [x2]
  40e938:	ldr	x2, [x1]
  40e93c:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  40e940:	add	x1, x1, #0xa8
  40e944:	bl	402350 <sprintf@plt>
  40e948:	ldr	x1, [x21, #8]
  40e94c:	add	x1, x1, #0xcc
  40e950:	mov	x0, x21
  40e954:	bl	40cf0c <ferror@plt+0xa63c>
  40e958:	b	40df20 <ferror@plt+0xb650>
  40e95c:	add	w4, w3, #0x8
  40e960:	str	w4, [x2, #24]
  40e964:	cmp	w4, #0x0
  40e968:	b.le	40e97c <ferror@plt+0xc0ac>
  40e96c:	add	x3, x1, #0xf
  40e970:	and	x3, x3, #0xfffffffffffffff8
  40e974:	str	x3, [x2]
  40e978:	b	40e938 <ferror@plt+0xc068>
  40e97c:	ldr	x1, [x2, #8]
  40e980:	add	x1, x1, w3, sxtw
  40e984:	b	40e938 <ferror@plt+0xc068>
  40e988:	ldr	x0, [x21, #8]
  40e98c:	add	x0, x0, #0xcc
  40e990:	ldr	x1, [sp, #120]
  40e994:	ldr	x2, [x1, #8]
  40e998:	ldr	w3, [x2, #24]
  40e99c:	ldr	x1, [x2]
  40e9a0:	tbnz	w3, #31, 40e9d4 <ferror@plt+0xc104>
  40e9a4:	add	x3, x1, #0xf
  40e9a8:	and	x3, x3, #0xfffffffffffffff8
  40e9ac:	str	x3, [x2]
  40e9b0:	ldr	x2, [x1]
  40e9b4:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  40e9b8:	add	x1, x1, #0xb0
  40e9bc:	bl	402350 <sprintf@plt>
  40e9c0:	ldr	x1, [x21, #8]
  40e9c4:	add	x1, x1, #0xcc
  40e9c8:	mov	x0, x21
  40e9cc:	bl	40cf0c <ferror@plt+0xa63c>
  40e9d0:	b	40df20 <ferror@plt+0xb650>
  40e9d4:	add	w4, w3, #0x8
  40e9d8:	str	w4, [x2, #24]
  40e9dc:	cmp	w4, #0x0
  40e9e0:	b.le	40e9f4 <ferror@plt+0xc124>
  40e9e4:	add	x3, x1, #0xf
  40e9e8:	and	x3, x3, #0xfffffffffffffff8
  40e9ec:	str	x3, [x2]
  40e9f0:	b	40e9b0 <ferror@plt+0xc0e0>
  40e9f4:	ldr	x1, [x2, #8]
  40e9f8:	add	x1, x1, w3, sxtw
  40e9fc:	b	40e9b0 <ferror@plt+0xc0e0>
  40ea00:	ldrb	w1, [x20, #1]
  40ea04:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1f094>
  40ea08:	add	x0, x0, #0xa68
  40ea0c:	ldrh	w0, [x0, w1, sxtw #1]
  40ea10:	tbnz	w0, #2, 40eaa8 <ferror@plt+0xc1d8>
  40ea14:	cmp	w1, #0x2a
  40ea18:	b.ne	40eae4 <ferror@plt+0xc214>  // b.any
  40ea1c:	ldrb	w0, [x20, #2]
  40ea20:	cmp	w0, #0x73
  40ea24:	b.ne	40eafc <ferror@plt+0xc22c>  // b.any
  40ea28:	ldr	x0, [sp, #120]
  40ea2c:	ldr	x0, [x0, #8]
  40ea30:	ldr	w2, [x0, #24]
  40ea34:	ldr	x1, [x0]
  40ea38:	tbnz	w2, #31, 40eb14 <ferror@plt+0xc244>
  40ea3c:	add	x2, x1, #0xb
  40ea40:	and	x2, x2, #0xfffffffffffffff8
  40ea44:	str	x2, [x0]
  40ea48:	ldr	w1, [x1]
  40ea4c:	add	w24, w24, #0x1
  40ea50:	add	x0, sp, #0xc0
  40ea54:	ldr	x0, [x0, w24, uxtw #3]
  40ea58:	cmp	x0, x26
  40ea5c:	b.ne	40eb40 <ferror@plt+0xc270>  // b.any
  40ea60:	ldr	x0, [sp, #120]
  40ea64:	ldr	x0, [x0, #8]
  40ea68:	ldr	w3, [x0, #24]
  40ea6c:	ldr	x2, [x0]
  40ea70:	tbnz	w3, #31, 40eb58 <ferror@plt+0xc288>
  40ea74:	add	x3, x2, #0xf
  40ea78:	and	x3, x3, #0xfffffffffffffff8
  40ea7c:	str	x3, [x0]
  40ea80:	ldr	x20, [x2]
  40ea84:	tbnz	w1, #31, 40eb84 <ferror@plt+0xc2b4>
  40ea88:	sxtw	x1, w1
  40ea8c:	mov	x0, x20
  40ea90:	bl	402300 <strnlen@plt>
  40ea94:	add	x2, x20, x0
  40ea98:	mov	x1, x20
  40ea9c:	mov	x0, x21
  40eaa0:	bl	40cb34 <ferror@plt+0xa264>
  40eaa4:	b	40df20 <ferror@plt+0xb650>
  40eaa8:	mov	w2, #0xa                   	// #10
  40eaac:	add	x1, sp, #0xb8
  40eab0:	add	x0, x20, #0x1
  40eab4:	bl	4022a0 <strtoul@plt>
  40eab8:	mov	w1, w0
  40eabc:	ldr	x0, [sp, #184]
  40eac0:	ldrb	w0, [x0]
  40eac4:	cmp	w0, #0x73
  40eac8:	b.eq	40ea60 <ferror@plt+0xc190>  // b.none
  40eacc:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  40ead0:	add	x2, x2, #0x28
  40ead4:	mov	w1, #0x54b                 	// #1355
  40ead8:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40eadc:	add	x0, x0, #0xfb0
  40eae0:	bl	4062a0 <ferror@plt+0x39d0>
  40eae4:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  40eae8:	add	x2, x2, #0x28
  40eaec:	mov	w1, #0x54f                 	// #1359
  40eaf0:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40eaf4:	add	x0, x0, #0xfb0
  40eaf8:	bl	4062a0 <ferror@plt+0x39d0>
  40eafc:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  40eb00:	add	x2, x2, #0x28
  40eb04:	mov	w1, #0x551                 	// #1361
  40eb08:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40eb0c:	add	x0, x0, #0xfb0
  40eb10:	bl	4062a0 <ferror@plt+0x39d0>
  40eb14:	add	w3, w2, #0x8
  40eb18:	str	w3, [x0, #24]
  40eb1c:	cmp	w3, #0x0
  40eb20:	b.le	40eb34 <ferror@plt+0xc264>
  40eb24:	add	x2, x1, #0xb
  40eb28:	and	x2, x2, #0xfffffffffffffff8
  40eb2c:	str	x2, [x0]
  40eb30:	b	40ea48 <ferror@plt+0xc178>
  40eb34:	ldr	x1, [x0, #8]
  40eb38:	add	x1, x1, w2, sxtw
  40eb3c:	b	40ea48 <ferror@plt+0xc178>
  40eb40:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  40eb44:	add	x2, x2, #0x28
  40eb48:	mov	w1, #0x555                 	// #1365
  40eb4c:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40eb50:	add	x0, x0, #0xfb0
  40eb54:	bl	4062a0 <ferror@plt+0x39d0>
  40eb58:	add	w4, w3, #0x8
  40eb5c:	str	w4, [x0, #24]
  40eb60:	cmp	w4, #0x0
  40eb64:	b.le	40eb78 <ferror@plt+0xc2a8>
  40eb68:	add	x3, x2, #0xf
  40eb6c:	and	x3, x3, #0xfffffffffffffff8
  40eb70:	str	x3, [x0]
  40eb74:	b	40ea80 <ferror@plt+0xc1b0>
  40eb78:	ldr	x2, [x0, #8]
  40eb7c:	add	x2, x2, w3, sxtw
  40eb80:	b	40ea80 <ferror@plt+0xc1b0>
  40eb84:	mov	x0, x20
  40eb88:	bl	4022b0 <strlen@plt>
  40eb8c:	b	40ea94 <ferror@plt+0xc1c4>
  40eb90:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  40eb94:	add	x2, x2, #0x28
  40eb98:	mov	w1, #0x56d                 	// #1389
  40eb9c:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  40eba0:	add	x0, x0, #0xfb0
  40eba4:	bl	4062a0 <ferror@plt+0x39d0>
  40eba8:	ldrb	w1, [x21, #67]
  40ebac:	mov	x0, x21
  40ebb0:	bl	40d14c <ferror@plt+0xa87c>
  40ebb4:	b	40df28 <ferror@plt+0xb658>
  40ebb8:	mov	x1, #0x1                   	// #1
  40ebbc:	mov	x0, x25
  40ebc0:	bl	446d94 <_obstack_newchunk@@Base>
  40ebc4:	b	40df38 <ferror@plt+0xb668>
  40ebc8:	mov	x2, x0
  40ebcc:	ldrb	w0, [x0, #80]
  40ebd0:	orr	w0, w0, #0x2
  40ebd4:	strb	w0, [x2, #80]
  40ebd8:	b	40df64 <ferror@plt+0xb694>
  40ebdc:	ldr	x0, [x21, #56]
  40ebe0:	cbz	x0, 40ebf4 <ferror@plt+0xc324>
  40ebe4:	ldr	x1, [x0]
  40ebe8:	ldr	x2, [x1, #16]
  40ebec:	mov	x1, x21
  40ebf0:	blr	x2
  40ebf4:	str	x19, [x19, #176]
  40ebf8:	str	wzr, [x19, #200]
  40ebfc:	ldr	w0, [sp, #128]
  40ec00:	str	w0, [x21, #36]
  40ec04:	ldr	w0, [sp, #136]
  40ec08:	str	w0, [x21, #40]
  40ec0c:	strb	wzr, [x21, #64]
  40ec10:	str	wzr, [x21, #32]
  40ec14:	ldp	x19, x20, [sp, #32]
  40ec18:	ldp	x21, x22, [sp, #48]
  40ec1c:	ldp	x23, x24, [sp, #64]
  40ec20:	ldp	x25, x26, [sp, #80]
  40ec24:	ldp	x27, x28, [sp, #96]
  40ec28:	ldp	x29, x30, [sp, #16]
  40ec2c:	add	sp, sp, #0x1b0
  40ec30:	ret
  40ec34:	ldr	x0, [x19, #112]
  40ec38:	ldr	x1, [x19, #120]
  40ec3c:	cmp	x1, x0
  40ec40:	b.eq	40db78 <ferror@plt+0xb2a8>  // b.none
  40ec44:	add	x1, x0, #0x1
  40ec48:	str	x1, [x19, #112]
  40ec4c:	strb	wzr, [x0]
  40ec50:	mov	w26, #0x0                   	// #0
  40ec54:	b	40daf0 <ferror@plt+0xb220>
  40ec58:	stp	x29, x30, [sp, #-48]!
  40ec5c:	mov	x29, sp
  40ec60:	stp	x19, x20, [sp, #16]
  40ec64:	str	x21, [sp, #32]
  40ec68:	mov	x19, x0
  40ec6c:	ldr	w21, [x0, #36]
  40ec70:	ldr	w20, [x0, #40]
  40ec74:	str	wzr, [x0, #40]
  40ec78:	mov	w2, #0x1                   	// #1
  40ec7c:	str	w2, [x0, #36]
  40ec80:	bl	40d18c <ferror@plt+0xa8bc>
  40ec84:	mov	x0, x19
  40ec88:	bl	40cf60 <ferror@plt+0xa690>
  40ec8c:	str	w21, [x19, #36]
  40ec90:	str	w20, [x19, #40]
  40ec94:	ldp	x19, x20, [sp, #16]
  40ec98:	ldr	x21, [sp, #32]
  40ec9c:	ldp	x29, x30, [sp], #48
  40eca0:	ret
  40eca4:	stp	x29, x30, [sp, #-288]!
  40eca8:	mov	x29, sp
  40ecac:	stp	x19, x20, [sp, #16]
  40ecb0:	mov	x19, x0
  40ecb4:	mov	x20, x1
  40ecb8:	str	x2, [sp, #240]
  40ecbc:	str	x3, [sp, #248]
  40ecc0:	str	x4, [sp, #256]
  40ecc4:	str	x5, [sp, #264]
  40ecc8:	str	x6, [sp, #272]
  40eccc:	str	x7, [sp, #280]
  40ecd0:	str	q0, [sp, #112]
  40ecd4:	str	q1, [sp, #128]
  40ecd8:	str	q2, [sp, #144]
  40ecdc:	str	q3, [sp, #160]
  40ece0:	str	q4, [sp, #176]
  40ece4:	str	q5, [sp, #192]
  40ece8:	str	q6, [sp, #208]
  40ecec:	str	q7, [sp, #224]
  40ecf0:	add	x0, sp, #0x120
  40ecf4:	str	x0, [sp, #40]
  40ecf8:	str	x0, [sp, #48]
  40ecfc:	add	x0, sp, #0xf0
  40ed00:	str	x0, [sp, #56]
  40ed04:	mov	w0, #0xffffffd0            	// #-48
  40ed08:	str	w0, [sp, #64]
  40ed0c:	mov	w0, #0xffffff80            	// #-128
  40ed10:	str	w0, [sp, #68]
  40ed14:	bl	402810 <__errno_location@plt>
  40ed18:	ldr	w0, [x0]
  40ed1c:	str	w0, [sp, #88]
  40ed20:	add	x0, sp, #0x28
  40ed24:	str	x0, [sp, #80]
  40ed28:	str	x20, [sp, #72]
  40ed2c:	add	x1, sp, #0x48
  40ed30:	mov	x0, x19
  40ed34:	bl	40ec58 <ferror@plt+0xc388>
  40ed38:	ldp	x19, x20, [sp, #16]
  40ed3c:	ldp	x29, x30, [sp], #288
  40ed40:	ret
  40ed44:	stp	x29, x30, [sp, #-288]!
  40ed48:	mov	x29, sp
  40ed4c:	stp	x19, x20, [sp, #16]
  40ed50:	mov	x19, x0
  40ed54:	mov	x20, x1
  40ed58:	str	x2, [sp, #240]
  40ed5c:	str	x3, [sp, #248]
  40ed60:	str	x4, [sp, #256]
  40ed64:	str	x5, [sp, #264]
  40ed68:	str	x6, [sp, #272]
  40ed6c:	str	x7, [sp, #280]
  40ed70:	str	q0, [sp, #112]
  40ed74:	str	q1, [sp, #128]
  40ed78:	str	q2, [sp, #144]
  40ed7c:	str	q3, [sp, #160]
  40ed80:	str	q4, [sp, #176]
  40ed84:	str	q5, [sp, #192]
  40ed88:	str	q6, [sp, #208]
  40ed8c:	str	q7, [sp, #224]
  40ed90:	add	x0, sp, #0x120
  40ed94:	str	x0, [sp, #40]
  40ed98:	str	x0, [sp, #48]
  40ed9c:	add	x0, sp, #0xf0
  40eda0:	str	x0, [sp, #56]
  40eda4:	mov	w0, #0xffffffd0            	// #-48
  40eda8:	str	w0, [sp, #64]
  40edac:	mov	w0, #0xffffff80            	// #-128
  40edb0:	str	w0, [sp, #68]
  40edb4:	bl	402810 <__errno_location@plt>
  40edb8:	ldr	w0, [x0]
  40edbc:	str	w0, [sp, #88]
  40edc0:	add	x0, sp, #0x28
  40edc4:	str	x0, [sp, #80]
  40edc8:	str	x20, [sp, #72]
  40edcc:	add	x1, sp, #0x48
  40edd0:	mov	x0, x19
  40edd4:	bl	40d18c <ferror@plt+0xa8bc>
  40edd8:	mov	x0, x19
  40eddc:	bl	40cf60 <ferror@plt+0xa690>
  40ede0:	ldp	x19, x20, [sp, #16]
  40ede4:	ldp	x29, x30, [sp], #288
  40ede8:	ret
  40edec:	stp	x29, x30, [sp, #-112]!
  40edf0:	mov	x29, sp
  40edf4:	stp	x21, x22, [sp, #32]
  40edf8:	stp	x23, x24, [sp, #48]
  40edfc:	mov	x22, x0
  40ee00:	bl	4022b0 <strlen@plt>
  40ee04:	cbz	x0, 40f0d4 <ferror@plt+0xc804>
  40ee08:	stp	x19, x20, [sp, #16]
  40ee0c:	mov	x20, x0
  40ee10:	mov	x19, #0x0                   	// #0
  40ee14:	mov	w21, #0x1                   	// #1
  40ee18:	mov	w23, #0x0                   	// #0
  40ee1c:	add	x2, sp, #0x68
  40ee20:	sub	x1, x20, x19
  40ee24:	add	x0, x22, x19
  40ee28:	bl	40c164 <ferror@plt+0x9894>
  40ee2c:	sxtw	x2, w0
  40ee30:	cbz	w0, 40ef30 <ferror@plt+0xc660>
  40ee34:	ldr	w1, [sp, #104]
  40ee38:	cmp	w1, #0x1f
  40ee3c:	b.ls	40ef30 <ferror@plt+0xc660>  // b.plast
  40ee40:	sub	w1, w1, #0x7f
  40ee44:	cmp	w1, #0x20
  40ee48:	b.ls	40ef30 <ferror@plt+0xc660>  // b.plast
  40ee4c:	cmp	x2, #0x2
  40ee50:	csel	w21, w21, w23, cc  // cc = lo, ul, last
  40ee54:	add	x19, x19, x2
  40ee58:	cmp	x20, x19
  40ee5c:	b.hi	40ee1c <ferror@plt+0xc54c>  // b.pmore
  40ee60:	mov	x23, x22
  40ee64:	cbnz	w21, 40ef60 <ferror@plt+0xc690>
  40ee68:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  40ee6c:	ldrb	w0, [x0, #1824]
  40ee70:	cbnz	w0, 40f0dc <ferror@plt+0xc80c>
  40ee74:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  40ee78:	ldr	x0, [x0, #1816]
  40ee7c:	cbz	x0, 40f040 <ferror@plt+0xc770>
  40ee80:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  40ee84:	add	x1, x1, #0xc0
  40ee88:	bl	402720 <iconv_open@plt>
  40ee8c:	mov	x19, x0
  40ee90:	cmn	x0, #0x1
  40ee94:	b.eq	40f074 <ferror@plt+0xc7a4>  // b.none
  40ee98:	lsl	x21, x20, #2
  40ee9c:	add	x21, x21, #0x1
  40eea0:	adrp	x24, 488000 <_obstack_memory_used@@Base+0x41094>
  40eea4:	str	x22, [sp, #80]
  40eea8:	str	x20, [sp, #96]
  40eeac:	sub	x0, x21, #0x1
  40eeb0:	str	x0, [sp, #104]
  40eeb4:	ldr	x1, [x24, #1216]
  40eeb8:	mov	x0, x21
  40eebc:	blr	x1
  40eec0:	mov	x23, x0
  40eec4:	str	x0, [sp, #88]
  40eec8:	mov	x4, #0x0                   	// #0
  40eecc:	mov	x3, #0x0                   	// #0
  40eed0:	mov	x2, #0x0                   	// #0
  40eed4:	mov	x1, #0x0                   	// #0
  40eed8:	mov	x0, x19
  40eedc:	bl	402630 <iconv@plt>
  40eee0:	cmn	x0, #0x1
  40eee4:	b.eq	40ef20 <ferror@plt+0xc650>  // b.none
  40eee8:	add	x4, sp, #0x68
  40eeec:	add	x3, sp, #0x58
  40eef0:	add	x2, sp, #0x60
  40eef4:	add	x1, sp, #0x50
  40eef8:	mov	x0, x19
  40eefc:	bl	402630 <iconv@plt>
  40ef00:	cmn	x0, #0x1
  40ef04:	b.eq	40ef10 <ferror@plt+0xc640>  // b.none
  40ef08:	ldr	x1, [sp, #96]
  40ef0c:	cbz	x1, 40efdc <ferror@plt+0xc70c>
  40ef10:	bl	402810 <__errno_location@plt>
  40ef14:	ldr	w0, [x0]
  40ef18:	cmp	w0, #0x7
  40ef1c:	b.eq	40efc4 <ferror@plt+0xc6f4>  // b.none
  40ef20:	str	x25, [sp, #64]
  40ef24:	mov	x0, x19
  40ef28:	bl	402310 <iconv_close@plt>
  40ef2c:	b	40f044 <ferror@plt+0xc774>
  40ef30:	lsl	x0, x20, #2
  40ef34:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x41094>
  40ef38:	ldr	x1, [x1, #1216]
  40ef3c:	add	x0, x0, #0x1
  40ef40:	blr	x1
  40ef44:	mov	x23, x0
  40ef48:	mov	x21, x22
  40ef4c:	add	x20, x22, x20
  40ef50:	mov	x19, x0
  40ef54:	adrp	x22, 459000 <_obstack_memory_used@@Base+0x12094>
  40ef58:	add	x22, x22, #0xb8
  40ef5c:	b	40ef84 <ferror@plt+0xc6b4>
  40ef60:	ldp	x19, x20, [sp, #16]
  40ef64:	b	40efb0 <ferror@plt+0xc6e0>
  40ef68:	mov	x1, x22
  40ef6c:	mov	x0, x19
  40ef70:	bl	402350 <sprintf@plt>
  40ef74:	add	x19, x19, #0x4
  40ef78:	add	x21, x21, #0x1
  40ef7c:	cmp	x20, x21
  40ef80:	b.eq	40efa8 <ferror@plt+0xc6d8>  // b.none
  40ef84:	ldrb	w2, [x21]
  40ef88:	sub	w1, w2, #0x20
  40ef8c:	and	w1, w1, #0xff
  40ef90:	cmp	w1, #0x5e
  40ef94:	b.hi	40ef68 <ferror@plt+0xc698>  // b.pmore
  40ef98:	mov	x0, x19
  40ef9c:	strb	w2, [x0], #1
  40efa0:	mov	x19, x0
  40efa4:	b	40ef78 <ferror@plt+0xc6a8>
  40efa8:	strb	wzr, [x19]
  40efac:	ldp	x19, x20, [sp, #16]
  40efb0:	mov	x0, x23
  40efb4:	ldp	x21, x22, [sp, #32]
  40efb8:	ldp	x23, x24, [sp, #48]
  40efbc:	ldp	x29, x30, [sp], #112
  40efc0:	ret
  40efc4:	lsl	x21, x21, #1
  40efc8:	add	x0, x24, #0x4c0
  40efcc:	ldr	x1, [x0, #8]
  40efd0:	mov	x0, x23
  40efd4:	blr	x1
  40efd8:	b	40eea4 <ferror@plt+0xc5d4>
  40efdc:	cbnz	x0, 40ef20 <ferror@plt+0xc650>
  40efe0:	add	x4, sp, #0x68
  40efe4:	add	x3, sp, #0x58
  40efe8:	mov	x2, #0x0                   	// #0
  40efec:	mov	x1, #0x0                   	// #0
  40eff0:	mov	x0, x19
  40eff4:	bl	402630 <iconv@plt>
  40eff8:	cmn	x0, #0x1
  40effc:	b.ne	40f028 <ferror@plt+0xc758>  // b.any
  40f000:	bl	402810 <__errno_location@plt>
  40f004:	ldr	w0, [x0]
  40f008:	cmp	w0, #0x7
  40f00c:	b.ne	40ef20 <ferror@plt+0xc650>  // b.any
  40f010:	lsl	x21, x21, #1
  40f014:	add	x0, x24, #0x4c0
  40f018:	ldr	x1, [x0, #8]
  40f01c:	mov	x0, x23
  40f020:	blr	x1
  40f024:	b	40eea4 <ferror@plt+0xc5d4>
  40f028:	ldr	x0, [sp, #88]
  40f02c:	strb	wzr, [x0]
  40f030:	mov	x0, x19
  40f034:	bl	402310 <iconv_close@plt>
  40f038:	ldp	x19, x20, [sp, #16]
  40f03c:	b	40efb0 <ferror@plt+0xc6e0>
  40f040:	str	x25, [sp, #64]
  40f044:	add	x0, x20, x20, lsl #2
  40f048:	lsl	x0, x0, #1
  40f04c:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x41094>
  40f050:	ldr	x1, [x1, #1216]
  40f054:	add	x0, x0, #0x1
  40f058:	blr	x1
  40f05c:	mov	x23, x0
  40f060:	mov	x21, x0
  40f064:	mov	x19, #0x0                   	// #0
  40f068:	adrp	x25, 459000 <_obstack_memory_used@@Base+0x12094>
  40f06c:	add	x25, x25, #0xc8
  40f070:	b	40f09c <ferror@plt+0xc7cc>
  40f074:	str	x25, [sp, #64]
  40f078:	b	40f044 <ferror@plt+0xc774>
  40f07c:	ldr	w2, [sp, #104]
  40f080:	mov	x1, x25
  40f084:	mov	x0, x21
  40f088:	bl	402350 <sprintf@plt>
  40f08c:	add	x21, x21, #0xa
  40f090:	add	x19, x19, x24
  40f094:	cmp	x20, x19
  40f098:	b.ls	40f0c4 <ferror@plt+0xc7f4>  // b.plast
  40f09c:	add	x2, sp, #0x68
  40f0a0:	sub	x1, x20, x19
  40f0a4:	add	x0, x22, x19
  40f0a8:	bl	40c164 <ferror@plt+0x9894>
  40f0ac:	sxtw	x24, w0
  40f0b0:	cmp	w0, #0x1
  40f0b4:	b.ne	40f07c <ferror@plt+0xc7ac>  // b.any
  40f0b8:	ldrb	w0, [x22, x19]
  40f0bc:	strb	w0, [x21], #1
  40f0c0:	b	40f090 <ferror@plt+0xc7c0>
  40f0c4:	strb	wzr, [x21]
  40f0c8:	ldp	x19, x20, [sp, #16]
  40f0cc:	ldr	x25, [sp, #64]
  40f0d0:	b	40efb0 <ferror@plt+0xc6e0>
  40f0d4:	mov	x23, x22
  40f0d8:	b	40efb0 <ferror@plt+0xc6e0>
  40f0dc:	ldp	x19, x20, [sp, #16]
  40f0e0:	b	40efb0 <ferror@plt+0xc6e0>
  40f0e4:	stp	x29, x30, [sp, #-64]!
  40f0e8:	mov	x29, sp
  40f0ec:	stp	x19, x20, [sp, #16]
  40f0f0:	mov	x19, x0
  40f0f4:	mov	x20, x1
  40f0f8:	ldr	x0, [x1, #8]
  40f0fc:	cbnz	x0, 40f134 <ferror@plt+0xc864>
  40f100:	ldr	x0, [x19, #8]
  40f104:	ldr	x2, [x1]
  40f108:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  40f10c:	add	x1, x1, #0xd0
  40f110:	add	x0, x0, #0xcc
  40f114:	bl	402350 <sprintf@plt>
  40f118:	ldr	x1, [x19, #8]
  40f11c:	add	x1, x1, #0xcc
  40f120:	mov	x0, x19
  40f124:	bl	40cf0c <ferror@plt+0xa63c>
  40f128:	ldp	x19, x20, [sp, #16]
  40f12c:	ldp	x29, x30, [sp], #64
  40f130:	ret
  40f134:	stp	x21, x22, [sp, #32]
  40f138:	str	x23, [sp, #48]
  40f13c:	mov	w1, #0x5b                  	// #91
  40f140:	mov	x0, x19
  40f144:	bl	40c914 <ferror@plt+0xa044>
  40f148:	mov	x21, #0x0                   	// #0
  40f14c:	adrp	x22, 459000 <_obstack_memory_used@@Base+0x12094>
  40f150:	add	x22, x22, #0xd0
  40f154:	mov	w23, #0x2c                  	// #44
  40f158:	b	40f1b4 <ferror@plt+0xc8e4>
  40f15c:	mov	w1, w23
  40f160:	mov	x0, x19
  40f164:	bl	40c914 <ferror@plt+0xa044>
  40f168:	ldr	x0, [x19, #8]
  40f16c:	ldr	x2, [x20, x21, lsl #3]
  40f170:	mov	x1, x22
  40f174:	add	x0, x0, #0xcc
  40f178:	bl	402350 <sprintf@plt>
  40f17c:	ldr	x1, [x19, #8]
  40f180:	add	x1, x1, #0xcc
  40f184:	mov	x0, x19
  40f188:	bl	40cf0c <ferror@plt+0xa63c>
  40f18c:	add	w0, w21, #0x1
  40f190:	cmp	w0, #0x1
  40f194:	b.ls	40f1b0 <ferror@plt+0xc8e0>  // b.plast
  40f198:	mov	w1, #0x5d                  	// #93
  40f19c:	mov	x0, x19
  40f1a0:	bl	40c914 <ferror@plt+0xa044>
  40f1a4:	ldp	x21, x22, [sp, #32]
  40f1a8:	ldr	x23, [sp, #48]
  40f1ac:	b	40f128 <ferror@plt+0xc858>
  40f1b0:	add	x21, x21, #0x1
  40f1b4:	cbnz	w21, 40f15c <ferror@plt+0xc88c>
  40f1b8:	ldr	x0, [x19, #8]
  40f1bc:	ldr	x2, [x20, x21, lsl #3]
  40f1c0:	mov	x1, x22
  40f1c4:	add	x0, x0, #0xcc
  40f1c8:	bl	402350 <sprintf@plt>
  40f1cc:	ldr	x1, [x19, #8]
  40f1d0:	add	x1, x1, #0xcc
  40f1d4:	mov	x0, x19
  40f1d8:	bl	40cf0c <ferror@plt+0xa63c>
  40f1dc:	b	40f1b0 <ferror@plt+0xc8e0>
  40f1e0:	stp	x29, x30, [sp, #-64]!
  40f1e4:	mov	x29, sp
  40f1e8:	stp	x19, x20, [sp, #16]
  40f1ec:	mov	x19, x0
  40f1f0:	mov	x20, x1
  40f1f4:	ldrh	w0, [x1, #2]
  40f1f8:	cbnz	w0, 40f230 <ferror@plt+0xc960>
  40f1fc:	ldr	x0, [x19, #8]
  40f200:	ldrh	w2, [x1]
  40f204:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  40f208:	add	x1, x1, #0xd0
  40f20c:	add	x0, x0, #0xcc
  40f210:	bl	402350 <sprintf@plt>
  40f214:	ldr	x1, [x19, #8]
  40f218:	add	x1, x1, #0xcc
  40f21c:	mov	x0, x19
  40f220:	bl	40cf0c <ferror@plt+0xa63c>
  40f224:	ldp	x19, x20, [sp, #16]
  40f228:	ldp	x29, x30, [sp], #64
  40f22c:	ret
  40f230:	stp	x21, x22, [sp, #32]
  40f234:	str	x23, [sp, #48]
  40f238:	mov	w1, #0x5b                  	// #91
  40f23c:	mov	x0, x19
  40f240:	bl	40c914 <ferror@plt+0xa044>
  40f244:	mov	x21, #0x0                   	// #0
  40f248:	adrp	x22, 459000 <_obstack_memory_used@@Base+0x12094>
  40f24c:	add	x22, x22, #0xd0
  40f250:	mov	w23, #0x2c                  	// #44
  40f254:	b	40f2b0 <ferror@plt+0xc9e0>
  40f258:	mov	w1, w23
  40f25c:	mov	x0, x19
  40f260:	bl	40c914 <ferror@plt+0xa044>
  40f264:	ldr	x0, [x19, #8]
  40f268:	ldrh	w2, [x20, x21, lsl #1]
  40f26c:	mov	x1, x22
  40f270:	add	x0, x0, #0xcc
  40f274:	bl	402350 <sprintf@plt>
  40f278:	ldr	x1, [x19, #8]
  40f27c:	add	x1, x1, #0xcc
  40f280:	mov	x0, x19
  40f284:	bl	40cf0c <ferror@plt+0xa63c>
  40f288:	add	w0, w21, #0x1
  40f28c:	cmp	w0, #0x1
  40f290:	b.ls	40f2ac <ferror@plt+0xc9dc>  // b.plast
  40f294:	mov	w1, #0x5d                  	// #93
  40f298:	mov	x0, x19
  40f29c:	bl	40c914 <ferror@plt+0xa044>
  40f2a0:	ldp	x21, x22, [sp, #32]
  40f2a4:	ldr	x23, [sp, #48]
  40f2a8:	b	40f224 <ferror@plt+0xc954>
  40f2ac:	add	x21, x21, #0x1
  40f2b0:	cbnz	w21, 40f258 <ferror@plt+0xc988>
  40f2b4:	ldr	x0, [x19, #8]
  40f2b8:	ldrh	w2, [x20, x21, lsl #1]
  40f2bc:	mov	x1, x22
  40f2c0:	add	x0, x0, #0xcc
  40f2c4:	bl	402350 <sprintf@plt>
  40f2c8:	ldr	x1, [x19, #8]
  40f2cc:	add	x1, x1, #0xcc
  40f2d0:	mov	x0, x19
  40f2d4:	bl	40cf0c <ferror@plt+0xa63c>
  40f2d8:	b	40f2ac <ferror@plt+0xc9dc>
  40f2dc:	stp	x29, x30, [sp, #-64]!
  40f2e0:	mov	x29, sp
  40f2e4:	stp	x19, x20, [sp, #16]
  40f2e8:	mov	x19, x0
  40f2ec:	mov	x20, x1
  40f2f0:	ldr	x0, [x1, #8]
  40f2f4:	cbnz	x0, 40f32c <ferror@plt+0xca5c>
  40f2f8:	ldr	x0, [x19, #8]
  40f2fc:	ldr	x2, [x1]
  40f300:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  40f304:	add	x1, x1, #0xd0
  40f308:	add	x0, x0, #0xcc
  40f30c:	bl	402350 <sprintf@plt>
  40f310:	ldr	x1, [x19, #8]
  40f314:	add	x1, x1, #0xcc
  40f318:	mov	x0, x19
  40f31c:	bl	40cf0c <ferror@plt+0xa63c>
  40f320:	ldp	x19, x20, [sp, #16]
  40f324:	ldp	x29, x30, [sp], #64
  40f328:	ret
  40f32c:	stp	x21, x22, [sp, #32]
  40f330:	str	x23, [sp, #48]
  40f334:	mov	w1, #0x5b                  	// #91
  40f338:	mov	x0, x19
  40f33c:	bl	40c914 <ferror@plt+0xa044>
  40f340:	mov	x21, #0x0                   	// #0
  40f344:	adrp	x22, 459000 <_obstack_memory_used@@Base+0x12094>
  40f348:	add	x22, x22, #0xd0
  40f34c:	mov	w23, #0x2c                  	// #44
  40f350:	b	40f3ac <ferror@plt+0xcadc>
  40f354:	mov	w1, w23
  40f358:	mov	x0, x19
  40f35c:	bl	40c914 <ferror@plt+0xa044>
  40f360:	ldr	x0, [x19, #8]
  40f364:	ldr	x2, [x20, x21, lsl #3]
  40f368:	mov	x1, x22
  40f36c:	add	x0, x0, #0xcc
  40f370:	bl	402350 <sprintf@plt>
  40f374:	ldr	x1, [x19, #8]
  40f378:	add	x1, x1, #0xcc
  40f37c:	mov	x0, x19
  40f380:	bl	40cf0c <ferror@plt+0xa63c>
  40f384:	add	w0, w21, #0x1
  40f388:	cmp	w0, #0x1
  40f38c:	b.ls	40f3a8 <ferror@plt+0xcad8>  // b.plast
  40f390:	mov	w1, #0x5d                  	// #93
  40f394:	mov	x0, x19
  40f398:	bl	40c914 <ferror@plt+0xa044>
  40f39c:	ldp	x21, x22, [sp, #32]
  40f3a0:	ldr	x23, [sp, #48]
  40f3a4:	b	40f320 <ferror@plt+0xca50>
  40f3a8:	add	x21, x21, #0x1
  40f3ac:	cbnz	w21, 40f354 <ferror@plt+0xca84>
  40f3b0:	ldr	x0, [x19, #8]
  40f3b4:	ldr	x2, [x20, x21, lsl #3]
  40f3b8:	mov	x1, x22
  40f3bc:	add	x0, x0, #0xcc
  40f3c0:	bl	402350 <sprintf@plt>
  40f3c4:	ldr	x1, [x19, #8]
  40f3c8:	add	x1, x1, #0xcc
  40f3cc:	mov	x0, x19
  40f3d0:	bl	40cf0c <ferror@plt+0xa63c>
  40f3d4:	b	40f3a8 <ferror@plt+0xcad8>
  40f3d8:	stp	x29, x30, [sp, #-32]!
  40f3dc:	mov	x29, sp
  40f3e0:	str	x19, [sp, #16]
  40f3e4:	adrp	x19, 458000 <_obstack_memory_used@@Base+0x11094>
  40f3e8:	add	x19, x19, #0x710
  40f3ec:	mov	x1, x19
  40f3f0:	mov	w0, #0x0                   	// #0
  40f3f4:	bl	4028c0 <setlocale@plt>
  40f3f8:	mov	x1, x19
  40f3fc:	mov	w0, #0x5                   	// #5
  40f400:	bl	4028c0 <setlocale@plt>
  40f404:	adrp	x19, 459000 <_obstack_memory_used@@Base+0x12094>
  40f408:	add	x19, x19, #0x110
  40f40c:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  40f410:	add	x1, x1, #0xf8
  40f414:	mov	x0, x19
  40f418:	bl	402450 <bindtextdomain@plt>
  40f41c:	mov	x0, x19
  40f420:	bl	402600 <textdomain@plt>
  40f424:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  40f428:	add	x0, x0, #0x118
  40f42c:	bl	402880 <gettext@plt>
  40f430:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x41094>
  40f434:	add	x19, x1, #0x4d0
  40f438:	str	x0, [x1, #1232]
  40f43c:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a094>
  40f440:	add	x0, x0, #0x548
  40f444:	bl	402880 <gettext@plt>
  40f448:	str	x0, [x19, #8]
  40f44c:	mov	w0, #0xe                   	// #14
  40f450:	bl	4023e0 <nl_langinfo@plt>
  40f454:	mov	x19, x0
  40f458:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  40f45c:	str	x19, [x0, #1816]
  40f460:	cbz	x19, 40f498 <ferror@plt+0xcbc8>
  40f464:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  40f468:	add	x1, x1, #0x120
  40f46c:	mov	x0, x19
  40f470:	bl	4024c0 <strcasecmp@plt>
  40f474:	cbz	w0, 40f48c <ferror@plt+0xcbbc>
  40f478:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  40f47c:	add	x1, x1, #0x128
  40f480:	mov	x0, x19
  40f484:	bl	4024c0 <strcasecmp@plt>
  40f488:	cbnz	w0, 40f498 <ferror@plt+0xcbc8>
  40f48c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  40f490:	mov	w1, #0x1                   	// #1
  40f494:	strb	w1, [x0, #1824]
  40f498:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  40f49c:	add	x1, x1, #0x118
  40f4a0:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  40f4a4:	ldr	x0, [x0, #1232]
  40f4a8:	bl	402620 <strcmp@plt>
  40f4ac:	cbnz	w0, 40f500 <ferror@plt+0xcc30>
  40f4b0:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a094>
  40f4b4:	add	x1, x1, #0x548
  40f4b8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  40f4bc:	ldr	x0, [x0, #1240]
  40f4c0:	bl	402620 <strcmp@plt>
  40f4c4:	cbnz	w0, 40f500 <ferror@plt+0xcc30>
  40f4c8:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x41094>
  40f4cc:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a094>
  40f4d0:	add	x0, x0, #0x548
  40f4d4:	str	x0, [x1, #1232]
  40f4d8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  40f4dc:	ldrb	w0, [x0, #1824]
  40f4e0:	cbz	w0, 40f500 <ferror@plt+0xcc30>
  40f4e4:	add	x2, x1, #0x4d0
  40f4e8:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  40f4ec:	add	x0, x0, #0x130
  40f4f0:	str	x0, [x1, #1232]
  40f4f4:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  40f4f8:	add	x0, x0, #0x138
  40f4fc:	str	x0, [x2, #8]
  40f500:	ldr	x19, [sp, #16]
  40f504:	ldp	x29, x30, [sp], #32
  40f508:	ret
  40f50c:	stp	x29, x30, [sp, #-48]!
  40f510:	mov	x29, sp
  40f514:	stp	x19, x20, [sp, #16]
  40f518:	str	x21, [sp, #32]
  40f51c:	mov	x20, x0
  40f520:	mov	x2, #0x0                   	// #0
  40f524:	mov	x1, x0
  40f528:	mov	x0, #0x0                   	// #0
  40f52c:	bl	4022d0 <mbstowcs@plt>
  40f530:	mov	x19, x0
  40f534:	add	x2, x0, #0x1
  40f538:	lsl	x1, x2, #2
  40f53c:	add	x1, x1, #0xf
  40f540:	and	x1, x1, #0xfffffffffffffff0
  40f544:	sub	sp, sp, x1
  40f548:	mov	x21, sp
  40f54c:	mov	x1, x20
  40f550:	mov	x0, x21
  40f554:	bl	4022d0 <mbstowcs@plt>
  40f558:	mov	x1, x19
  40f55c:	mov	x0, x21
  40f560:	bl	402430 <wcswidth@plt>
  40f564:	sxtw	x0, w0
  40f568:	mov	sp, x29
  40f56c:	ldp	x19, x20, [sp, #16]
  40f570:	ldr	x21, [sp, #32]
  40f574:	ldp	x29, x30, [sp], #48
  40f578:	ret
  40f57c:	stp	x29, x30, [sp, #-32]!
  40f580:	mov	x29, sp
  40f584:	stp	x19, x20, [sp, #16]
  40f588:	bl	40f50c <ferror@plt+0xcc3c>
  40f58c:	mov	x19, x0
  40f590:	add	x0, x0, #0x1
  40f594:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  40f598:	mov	x20, x0
  40f59c:	mov	x2, x19
  40f5a0:	mov	w1, #0x20                  	// #32
  40f5a4:	bl	402490 <memset@plt>
  40f5a8:	strb	wzr, [x20, x19]
  40f5ac:	mov	x0, x20
  40f5b0:	ldp	x19, x20, [sp, #16]
  40f5b4:	ldp	x29, x30, [sp], #32
  40f5b8:	ret
  40f5bc:	cmp	w0, w1
  40f5c0:	b.cs	40f5ec <ferror@plt+0xcd1c>  // b.hs, b.nlast
  40f5c4:	mov	w2, #0x4                   	// #4
  40f5c8:	cbz	w0, 40f5e0 <ferror@plt+0xcd10>
  40f5cc:	lsl	w3, w0, #1
  40f5d0:	add	w2, w0, w0, lsl #1
  40f5d4:	lsr	w2, w2, #1
  40f5d8:	cmp	w0, #0xf
  40f5dc:	csel	w2, w2, w3, hi  // hi = pmore
  40f5e0:	cmp	w2, w1
  40f5e4:	csel	w0, w2, w1, cs  // cs = hs, nlast
  40f5e8:	ret
  40f5ec:	stp	x29, x30, [sp, #-16]!
  40f5f0:	mov	x29, sp
  40f5f4:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  40f5f8:	add	x2, x2, #0x198
  40f5fc:	mov	w1, #0xa2                  	// #162
  40f600:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  40f604:	add	x0, x0, #0x1b0
  40f608:	bl	4062a0 <ferror@plt+0x39d0>
  40f60c:	stp	x29, x30, [sp, #-144]!
  40f610:	mov	x29, sp
  40f614:	stp	x19, x20, [sp, #16]
  40f618:	stp	x21, x22, [sp, #32]
  40f61c:	stp	x23, x24, [sp, #48]
  40f620:	mov	x19, x1
  40f624:	mov	x20, x2
  40f628:	mov	x21, x3
  40f62c:	and	w23, w4, #0xff
  40f630:	str	x1, [sp, #120]
  40f634:	asr	x22, x1, #3
  40f638:	mov	w2, w22
  40f63c:	add	x1, sp, #0x78
  40f640:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  40f644:	ldr	x0, [x0, #1880]
  40f648:	bl	410580 <ferror@plt+0xdcb0>
  40f64c:	ldr	x0, [x0]
  40f650:	cbz	x0, 40f6b0 <ferror@plt+0xcde0>
  40f654:	str	x19, [sp, #136]
  40f658:	mov	w2, w22
  40f65c:	add	x1, sp, #0x88
  40f660:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  40f664:	ldr	x0, [x0, #1880]
  40f668:	bl	410580 <ferror@plt+0xdcb0>
  40f66c:	ldr	x24, [x0]
  40f670:	cbz	x24, 40f690 <ferror@plt+0xcdc0>
  40f674:	ldr	x24, [x0, #8]
  40f678:	ldr	x2, [x24]
  40f67c:	cmp	x20, x2
  40f680:	b.hi	40f838 <ferror@plt+0xcf68>  // b.pmore
  40f684:	sub	x2, x2, x20
  40f688:	str	x2, [x24]
  40f68c:	cbnz	w23, 40f858 <ferror@plt+0xcf88>
  40f690:	ldr	x3, [x24, #32]
  40f694:	sub	x21, x3, x21
  40f698:	str	x21, [x24, #32]
  40f69c:	ldp	x19, x20, [sp, #16]
  40f6a0:	ldp	x21, x22, [sp, #32]
  40f6a4:	ldp	x23, x24, [sp, #48]
  40f6a8:	ldp	x29, x30, [sp], #144
  40f6ac:	ret
  40f6b0:	stp	x25, x26, [sp, #64]
  40f6b4:	mov	x0, #0x20                  	// #32
  40f6b8:	bl	447868 <_obstack_memory_used@@Base+0x8fc>
  40f6bc:	mov	x25, x0
  40f6c0:	str	xzr, [x0]
  40f6c4:	str	xzr, [x0, #8]
  40f6c8:	str	wzr, [x0, #16]
  40f6cc:	mov	w0, #0x3                   	// #3
  40f6d0:	str	w0, [x25, #20]
  40f6d4:	strb	wzr, [x25, #24]
  40f6d8:	str	x19, [sp, #104]
  40f6dc:	str	x25, [sp, #112]
  40f6e0:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  40f6e4:	ldr	x24, [x0, #1872]
  40f6e8:	str	xzr, [sp, #120]
  40f6ec:	mov	w2, #0x0                   	// #0
  40f6f0:	mov	x1, #0x8                   	// #8
  40f6f4:	add	x0, sp, #0x78
  40f6f8:	bl	446820 <ferror@plt+0x43f50>
  40f6fc:	ldr	x1, [x25, #8]
  40f700:	str	x1, [sp, #120]
  40f704:	mov	w2, w0
  40f708:	mov	x1, #0x8                   	// #8
  40f70c:	add	x0, sp, #0x78
  40f710:	bl	446820 <ferror@plt+0x43f50>
  40f714:	ldr	w1, [x25, #16]
  40f718:	mov	w2, #0x79b9                	// #31161
  40f71c:	movk	w2, #0x9e37, lsl #16
  40f720:	sub	w2, w2, w0
  40f724:	sub	w2, w2, w1
  40f728:	eor	w2, w2, w0, lsr #13
  40f72c:	sub	w1, w1, w0
  40f730:	sub	w1, w1, w2
  40f734:	eor	w1, w1, w2, lsl #8
  40f738:	sub	w0, w0, w2
  40f73c:	sub	w0, w0, w1
  40f740:	eor	w0, w0, w1, lsr #13
  40f744:	sub	w2, w2, w1
  40f748:	sub	w2, w2, w0
  40f74c:	eor	w2, w2, w0, lsr #12
  40f750:	sub	w1, w1, w0
  40f754:	sub	w1, w1, w2
  40f758:	eor	w1, w1, w2, lsl #16
  40f75c:	sub	w0, w0, w2
  40f760:	sub	w0, w0, w1
  40f764:	eor	w0, w0, w1, lsr #5
  40f768:	sub	w3, w2, w1
  40f76c:	sub	w3, w3, w0
  40f770:	eor	w3, w3, w0, lsr #3
  40f774:	sub	w2, w1, w0
  40f778:	sub	w2, w2, w3
  40f77c:	eor	w2, w2, w3, lsl #10
  40f780:	sub	w0, w0, w3
  40f784:	sub	w0, w0, w2
  40f788:	eor	w2, w0, w2, lsr #15
  40f78c:	add	x1, sp, #0x70
  40f790:	mov	x0, x24
  40f794:	bl	41067c <ferror@plt+0xddac>
  40f798:	mov	x24, x0
  40f79c:	ldr	x0, [x0]
  40f7a0:	cbz	x0, 40f894 <ferror@plt+0xcfc4>
  40f7a4:	ldr	x0, [sp, #112]
  40f7a8:	cbz	x0, 40f7b4 <ferror@plt+0xcee4>
  40f7ac:	mov	x1, #0x20                  	// #32
  40f7b0:	bl	447628 <_obstack_memory_used@@Base+0x6bc>
  40f7b4:	ldr	x24, [x24, #8]
  40f7b8:	ldr	x0, [x24, #24]
  40f7bc:	add	x0, x0, #0x1
  40f7c0:	str	x0, [x24, #24]
  40f7c4:	ldr	x2, [sp, #104]
  40f7c8:	ubfx	x2, x2, #3, #32
  40f7cc:	add	x1, sp, #0x68
  40f7d0:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  40f7d4:	ldr	x0, [x0, #1880]
  40f7d8:	bl	410580 <ferror@plt+0xdcb0>
  40f7dc:	ldr	x0, [x0]
  40f7e0:	cbz	x0, 40f7f8 <ferror@plt+0xcf28>
  40f7e4:	ldp	x25, x26, [sp, #64]
  40f7e8:	b	40f654 <ferror@plt+0xcd84>
  40f7ec:	ldr	x1, [sp, #112]
  40f7f0:	str	x1, [x0]
  40f7f4:	b	40f990 <ferror@plt+0xd0c0>
  40f7f8:	mov	w3, #0x1                   	// #1
  40f7fc:	ldr	x2, [sp, #104]
  40f800:	ubfx	x2, x2, #3, #32
  40f804:	add	x1, sp, #0x68
  40f808:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  40f80c:	ldr	x0, [x0, #1880]
  40f810:	bl	410e54 <ferror@plt+0xe584>
  40f814:	ldr	x1, [x0]
  40f818:	cbz	x1, 40f82c <ferror@plt+0xcf5c>
  40f81c:	str	x24, [x0, #8]
  40f820:	str	xzr, [x0, #16]
  40f824:	ldp	x25, x26, [sp, #64]
  40f828:	b	40f654 <ferror@plt+0xcd84>
  40f82c:	ldr	x1, [sp, #104]
  40f830:	str	x1, [x0]
  40f834:	b	40f81c <ferror@plt+0xcf4c>
  40f838:	stp	x25, x26, [sp, #64]
  40f83c:	str	x27, [sp, #80]
  40f840:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  40f844:	add	x2, x2, #0x1c0
  40f848:	mov	w1, #0x97                  	// #151
  40f84c:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  40f850:	add	x0, x0, #0x1d8
  40f854:	bl	4062a0 <ferror@plt+0x39d0>
  40f858:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  40f85c:	ldr	x20, [x0, #1880]
  40f860:	str	x19, [sp, #128]
  40f864:	mov	w3, #0x0                   	// #0
  40f868:	mov	w2, w22
  40f86c:	add	x1, sp, #0x80
  40f870:	mov	x0, x20
  40f874:	bl	410e54 <ferror@plt+0xe584>
  40f878:	cbz	x0, 40f690 <ferror@plt+0xcdc0>
  40f87c:	mov	x1, #0x1                   	// #1
  40f880:	str	x1, [x0]
  40f884:	ldr	x0, [x20, #24]
  40f888:	add	x0, x0, x1
  40f88c:	str	x0, [x20, #24]
  40f890:	b	40f690 <ferror@plt+0xcdc0>
  40f894:	str	x27, [sp, #80]
  40f898:	mov	x0, #0x38                  	// #56
  40f89c:	bl	447868 <_obstack_memory_used@@Base+0x8fc>
  40f8a0:	mov	x24, x0
  40f8a4:	str	xzr, [x0]
  40f8a8:	str	xzr, [x0, #8]
  40f8ac:	str	xzr, [x0, #16]
  40f8b0:	mov	x25, #0x1                   	// #1
  40f8b4:	str	x25, [x0, #24]
  40f8b8:	str	xzr, [x0, #32]
  40f8bc:	str	xzr, [x0, #40]
  40f8c0:	str	xzr, [x0, #48]
  40f8c4:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  40f8c8:	ldr	x26, [x0, #1872]
  40f8cc:	ldr	x27, [sp, #112]
  40f8d0:	ldr	x0, [x27]
  40f8d4:	str	x0, [sp, #120]
  40f8d8:	mov	w2, #0x0                   	// #0
  40f8dc:	mov	x1, #0x8                   	// #8
  40f8e0:	add	x0, sp, #0x78
  40f8e4:	bl	446820 <ferror@plt+0x43f50>
  40f8e8:	ldr	x1, [x27, #8]
  40f8ec:	str	x1, [sp, #120]
  40f8f0:	mov	w2, w0
  40f8f4:	mov	x1, #0x8                   	// #8
  40f8f8:	add	x0, sp, #0x78
  40f8fc:	bl	446820 <ferror@plt+0x43f50>
  40f900:	ldr	w1, [x27, #16]
  40f904:	mov	w3, #0x79b9                	// #31161
  40f908:	movk	w3, #0x9e37, lsl #16
  40f90c:	sub	w3, w3, w1
  40f910:	sub	w3, w3, w0
  40f914:	eor	w3, w3, w0, lsr #13
  40f918:	sub	w2, w1, w0
  40f91c:	sub	w2, w2, w3
  40f920:	eor	w2, w2, w3, lsl #8
  40f924:	sub	w1, w0, w3
  40f928:	sub	w1, w1, w2
  40f92c:	eor	w1, w1, w2, lsr #13
  40f930:	sub	w3, w3, w2
  40f934:	sub	w3, w3, w1
  40f938:	eor	w3, w3, w1, lsr #12
  40f93c:	sub	w0, w2, w1
  40f940:	sub	w0, w0, w3
  40f944:	eor	w0, w0, w3, lsl #16
  40f948:	sub	w1, w1, w3
  40f94c:	sub	w1, w1, w0
  40f950:	eor	w1, w1, w0, lsr #5
  40f954:	sub	w3, w3, w0
  40f958:	sub	w3, w3, w1
  40f95c:	eor	w3, w3, w1, lsr #3
  40f960:	sub	w2, w0, w1
  40f964:	sub	w2, w2, w3
  40f968:	eor	w2, w2, w3, lsl #10
  40f96c:	sub	w1, w1, w3
  40f970:	sub	w1, w1, w2
  40f974:	mov	w3, w25
  40f978:	eor	w2, w1, w2, lsr #15
  40f97c:	add	x1, sp, #0x70
  40f980:	mov	x0, x26
  40f984:	bl	410a60 <ferror@plt+0xe190>
  40f988:	ldr	x1, [x0]
  40f98c:	cbz	x1, 40f7ec <ferror@plt+0xcf1c>
  40f990:	str	x24, [x0, #8]
  40f994:	ldr	x27, [sp, #80]
  40f998:	b	40f7c4 <ferror@plt+0xcef4>
  40f99c:	stp	x29, x30, [sp, #-112]!
  40f9a0:	mov	x29, sp
  40f9a4:	stp	x19, x20, [sp, #16]
  40f9a8:	stp	x21, x22, [sp, #32]
  40f9ac:	stp	x23, x24, [sp, #48]
  40f9b0:	mov	x19, x1
  40f9b4:	mov	x20, x2
  40f9b8:	mov	x21, x3
  40f9bc:	mov	x0, #0x20                  	// #32
  40f9c0:	bl	447868 <_obstack_memory_used@@Base+0x8fc>
  40f9c4:	mov	x23, x0
  40f9c8:	str	xzr, [x0]
  40f9cc:	str	xzr, [x0, #8]
  40f9d0:	str	wzr, [x0, #16]
  40f9d4:	mov	w0, #0x3                   	// #3
  40f9d8:	str	w0, [x23, #20]
  40f9dc:	strb	wzr, [x23, #24]
  40f9e0:	str	x19, [sp, #88]
  40f9e4:	str	x23, [sp, #96]
  40f9e8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  40f9ec:	ldr	x22, [x0, #1872]
  40f9f0:	str	xzr, [sp, #104]
  40f9f4:	mov	w2, #0x0                   	// #0
  40f9f8:	mov	x1, #0x8                   	// #8
  40f9fc:	add	x0, sp, #0x68
  40fa00:	bl	446820 <ferror@plt+0x43f50>
  40fa04:	ldr	x1, [x23, #8]
  40fa08:	str	x1, [sp, #104]
  40fa0c:	mov	w2, w0
  40fa10:	mov	x1, #0x8                   	// #8
  40fa14:	add	x0, sp, #0x68
  40fa18:	bl	446820 <ferror@plt+0x43f50>
  40fa1c:	ldr	w1, [x23, #16]
  40fa20:	mov	w2, #0x79b9                	// #31161
  40fa24:	movk	w2, #0x9e37, lsl #16
  40fa28:	sub	w2, w2, w0
  40fa2c:	sub	w2, w2, w1
  40fa30:	eor	w2, w2, w0, lsr #13
  40fa34:	sub	w1, w1, w0
  40fa38:	sub	w1, w1, w2
  40fa3c:	eor	w1, w1, w2, lsl #8
  40fa40:	sub	w0, w0, w2
  40fa44:	sub	w0, w0, w1
  40fa48:	eor	w0, w0, w1, lsr #13
  40fa4c:	sub	w2, w2, w1
  40fa50:	sub	w2, w2, w0
  40fa54:	eor	w2, w2, w0, lsr #12
  40fa58:	sub	w1, w1, w0
  40fa5c:	sub	w1, w1, w2
  40fa60:	eor	w1, w1, w2, lsl #16
  40fa64:	sub	w0, w0, w2
  40fa68:	sub	w0, w0, w1
  40fa6c:	eor	w0, w0, w1, lsr #5
  40fa70:	sub	w3, w2, w1
  40fa74:	sub	w3, w3, w0
  40fa78:	eor	w3, w3, w0, lsr #3
  40fa7c:	sub	w2, w1, w0
  40fa80:	sub	w2, w2, w3
  40fa84:	eor	w2, w2, w3, lsl #10
  40fa88:	sub	w0, w0, w3
  40fa8c:	sub	w0, w0, w2
  40fa90:	eor	w2, w0, w2, lsr #15
  40fa94:	add	x1, sp, #0x60
  40fa98:	mov	x0, x22
  40fa9c:	bl	41067c <ferror@plt+0xddac>
  40faa0:	mov	x22, x0
  40faa4:	ldr	x0, [x0]
  40faa8:	cbz	x0, 40fbb8 <ferror@plt+0xd2e8>
  40faac:	ldr	x0, [sp, #96]
  40fab0:	cbz	x0, 40fabc <ferror@plt+0xd1ec>
  40fab4:	mov	x1, #0x20                  	// #32
  40fab8:	bl	447628 <_obstack_memory_used@@Base+0x6bc>
  40fabc:	ldr	x22, [x22, #8]
  40fac0:	ldr	x0, [x22, #24]
  40fac4:	add	x0, x0, #0x1
  40fac8:	str	x0, [x22, #24]
  40facc:	ldr	x2, [sp, #88]
  40fad0:	ubfx	x2, x2, #3, #32
  40fad4:	add	x1, sp, #0x58
  40fad8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  40fadc:	ldr	x0, [x0, #1880]
  40fae0:	bl	410580 <ferror@plt+0xdcb0>
  40fae4:	ldr	x0, [x0]
  40fae8:	cbz	x0, 40fb7c <ferror@plt+0xd2ac>
  40faec:	mul	x22, x20, x21
  40faf0:	str	x19, [sp, #104]
  40faf4:	ubfx	x2, x19, #3, #32
  40faf8:	add	x1, sp, #0x68
  40fafc:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  40fb00:	ldr	x0, [x0, #1880]
  40fb04:	bl	410580 <ferror@plt+0xdcb0>
  40fb08:	ldr	x1, [x0]
  40fb0c:	cbz	x1, 40fb3c <ferror@plt+0xd26c>
  40fb10:	ldr	x1, [x0, #8]
  40fb14:	ldr	x0, [x1]
  40fb18:	add	x0, x22, x0
  40fb1c:	str	x0, [x1]
  40fb20:	ldr	x2, [x1, #8]
  40fb24:	add	x2, x2, #0x1
  40fb28:	str	x2, [x1, #8]
  40fb2c:	ldr	x2, [x1, #16]
  40fb30:	cmp	x0, x2
  40fb34:	b.ls	40fb3c <ferror@plt+0xd26c>  // b.plast
  40fb38:	str	x0, [x1, #16]
  40fb3c:	str	x21, [x1, #48]
  40fb40:	ldr	x2, [x1, #32]
  40fb44:	add	x20, x20, x2
  40fb48:	str	x20, [x1, #32]
  40fb4c:	ldr	x0, [x1, #40]
  40fb50:	cmp	x20, x0
  40fb54:	b.ls	40fb5c <ferror@plt+0xd28c>  // b.plast
  40fb58:	str	x20, [x1, #40]
  40fb5c:	ldp	x19, x20, [sp, #16]
  40fb60:	ldp	x21, x22, [sp, #32]
  40fb64:	ldp	x23, x24, [sp, #48]
  40fb68:	ldp	x29, x30, [sp], #112
  40fb6c:	ret
  40fb70:	ldr	x1, [sp, #96]
  40fb74:	str	x1, [x0]
  40fb78:	b	40fcb4 <ferror@plt+0xd3e4>
  40fb7c:	mov	w3, #0x1                   	// #1
  40fb80:	ldr	x2, [sp, #88]
  40fb84:	ubfx	x2, x2, #3, #32
  40fb88:	add	x1, sp, #0x58
  40fb8c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  40fb90:	ldr	x0, [x0, #1880]
  40fb94:	bl	410e54 <ferror@plt+0xe584>
  40fb98:	ldr	x1, [x0]
  40fb9c:	cbz	x1, 40fbac <ferror@plt+0xd2dc>
  40fba0:	str	x22, [x0, #8]
  40fba4:	str	xzr, [x0, #16]
  40fba8:	b	40faec <ferror@plt+0xd21c>
  40fbac:	ldr	x1, [sp, #88]
  40fbb0:	str	x1, [x0]
  40fbb4:	b	40fba0 <ferror@plt+0xd2d0>
  40fbb8:	str	x25, [sp, #64]
  40fbbc:	mov	x0, #0x38                  	// #56
  40fbc0:	bl	447868 <_obstack_memory_used@@Base+0x8fc>
  40fbc4:	mov	x22, x0
  40fbc8:	str	xzr, [x0]
  40fbcc:	str	xzr, [x0, #8]
  40fbd0:	str	xzr, [x0, #16]
  40fbd4:	mov	x23, #0x1                   	// #1
  40fbd8:	str	x23, [x0, #24]
  40fbdc:	str	xzr, [x0, #32]
  40fbe0:	str	xzr, [x0, #40]
  40fbe4:	str	xzr, [x0, #48]
  40fbe8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  40fbec:	ldr	x24, [x0, #1872]
  40fbf0:	ldr	x25, [sp, #96]
  40fbf4:	ldr	x0, [x25]
  40fbf8:	str	x0, [sp, #104]
  40fbfc:	mov	w2, #0x0                   	// #0
  40fc00:	mov	x1, #0x8                   	// #8
  40fc04:	add	x0, sp, #0x68
  40fc08:	bl	446820 <ferror@plt+0x43f50>
  40fc0c:	ldr	x1, [x25, #8]
  40fc10:	str	x1, [sp, #104]
  40fc14:	mov	w2, w0
  40fc18:	mov	x1, #0x8                   	// #8
  40fc1c:	add	x0, sp, #0x68
  40fc20:	bl	446820 <ferror@plt+0x43f50>
  40fc24:	ldr	w2, [x25, #16]
  40fc28:	mov	w3, #0x79b9                	// #31161
  40fc2c:	movk	w3, #0x9e37, lsl #16
  40fc30:	sub	w3, w3, w2
  40fc34:	sub	w3, w3, w0
  40fc38:	eor	w3, w3, w0, lsr #13
  40fc3c:	sub	w2, w2, w0
  40fc40:	sub	w2, w2, w3
  40fc44:	eor	w2, w2, w3, lsl #8
  40fc48:	sub	w1, w0, w3
  40fc4c:	sub	w1, w1, w2
  40fc50:	eor	w1, w1, w2, lsr #13
  40fc54:	sub	w3, w3, w2
  40fc58:	sub	w3, w3, w1
  40fc5c:	eor	w3, w3, w1, lsr #12
  40fc60:	sub	w0, w2, w1
  40fc64:	sub	w0, w0, w3
  40fc68:	eor	w0, w0, w3, lsl #16
  40fc6c:	sub	w1, w1, w3
  40fc70:	sub	w1, w1, w0
  40fc74:	eor	w1, w1, w0, lsr #5
  40fc78:	sub	w3, w3, w0
  40fc7c:	sub	w3, w3, w1
  40fc80:	eor	w3, w3, w1, lsr #3
  40fc84:	sub	w2, w0, w1
  40fc88:	sub	w2, w2, w3
  40fc8c:	eor	w2, w2, w3, lsl #10
  40fc90:	sub	w1, w1, w3
  40fc94:	sub	w1, w1, w2
  40fc98:	mov	w3, w23
  40fc9c:	eor	w2, w1, w2, lsr #15
  40fca0:	add	x1, sp, #0x60
  40fca4:	mov	x0, x24
  40fca8:	bl	410a60 <ferror@plt+0xe190>
  40fcac:	ldr	x1, [x0]
  40fcb0:	cbz	x1, 40fb70 <ferror@plt+0xd2a0>
  40fcb4:	str	x22, [x0, #8]
  40fcb8:	ldr	x25, [sp, #64]
  40fcbc:	b	40facc <ferror@plt+0xd1fc>
  40fcc0:	sub	sp, sp, #0x90
  40fcc4:	stp	x29, x30, [sp, #16]
  40fcc8:	add	x29, sp, #0x10
  40fccc:	stp	x19, x20, [sp, #32]
  40fcd0:	stp	x21, x22, [sp, #48]
  40fcd4:	str	x23, [sp, #64]
  40fcd8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  40fcdc:	ldr	x1, [x0, #1320]
  40fce0:	mov	w0, #0xa                   	// #10
  40fce4:	bl	402380 <fputc@plt>
  40fce8:	adrp	x19, 488000 <_obstack_memory_used@@Base+0x41094>
  40fcec:	add	x19, x19, #0x728
  40fcf0:	ldr	x1, [x19, #40]
  40fcf4:	ldr	x2, [x1, #16]
  40fcf8:	ldr	x0, [x1, #24]
  40fcfc:	mov	x1, #0x10                  	// #16
  40fd00:	sub	x0, x2, x0
  40fd04:	bl	447084 <_obstack_memory_used@@Base+0x118>
  40fd08:	mov	x22, x0
  40fd0c:	ldr	x0, [x19, #40]
  40fd10:	ldr	x1, [x0]
  40fd14:	ldr	x0, [x0, #8]
  40fd18:	add	x0, x1, x0, lsl #4
  40fd1c:	str	x1, [sp, #88]
  40fd20:	str	x0, [sp, #96]
  40fd24:	add	x0, sp, #0x58
  40fd28:	bl	411000 <ferror@plt+0xe730>
  40fd2c:	mov	w19, #0x0                   	// #0
  40fd30:	b	40fdb0 <ferror@plt+0xd4e0>
  40fd34:	ldr	x1, [sp, #96]
  40fd38:	cbnz	x1, 40fdb8 <ferror@plt+0xd4e8>
  40fd3c:	adrp	x3, 410000 <ferror@plt+0xd730>
  40fd40:	add	x3, x3, #0x1bc
  40fd44:	mov	x2, #0x10                  	// #16
  40fd48:	mov	w1, w19
  40fd4c:	mov	x0, x22
  40fd50:	bl	414540 <ferror@plt+0x11c70>
  40fd54:	adrp	x20, 488000 <_obstack_memory_used@@Base+0x41094>
  40fd58:	add	x20, x20, #0x728
  40fd5c:	ldr	x1, [x20, #40]
  40fd60:	ldr	x2, [x1, #16]
  40fd64:	ldr	x0, [x1, #24]
  40fd68:	mov	x1, #0x10                  	// #16
  40fd6c:	sub	x0, x2, x0
  40fd70:	bl	447084 <_obstack_memory_used@@Base+0x118>
  40fd74:	mov	x21, x0
  40fd78:	ldr	x0, [x20, #40]
  40fd7c:	ldr	x1, [x0]
  40fd80:	ldr	x0, [x0, #8]
  40fd84:	add	x0, x1, x0, lsl #4
  40fd88:	str	x1, [sp, #88]
  40fd8c:	str	x0, [sp, #96]
  40fd90:	add	x0, sp, #0x58
  40fd94:	bl	411000 <ferror@plt+0xe730>
  40fd98:	mov	w20, #0x0                   	// #0
  40fd9c:	b	410124 <ferror@plt+0xd854>
  40fda0:	add	x0, x0, #0x10
  40fda4:	str	x0, [sp, #88]
  40fda8:	add	x0, sp, #0x58
  40fdac:	bl	411000 <ferror@plt+0xe730>
  40fdb0:	ldr	x0, [sp, #88]
  40fdb4:	cbz	x0, 40fd34 <ferror@plt+0xd464>
  40fdb8:	ldr	x2, [x0]
  40fdbc:	ldr	w1, [x2, #20]
  40fdc0:	cmp	w1, #0x3
  40fdc4:	b.ne	40fda0 <ferror@plt+0xd4d0>  // b.any
  40fdc8:	ubfiz	x1, x19, #4, #32
  40fdcc:	add	x3, x22, x1
  40fdd0:	ldr	x4, [x0, #8]
  40fdd4:	str	x2, [x22, x1]
  40fdd8:	str	x4, [x3, #8]
  40fddc:	add	w19, w19, #0x1
  40fde0:	b	40fda0 <ferror@plt+0xd4d0>
  40fde4:	ldr	x1, [sp, #96]
  40fde8:	cbnz	x1, 41012c <ferror@plt+0xd85c>
  40fdec:	adrp	x3, 410000 <ferror@plt+0xd730>
  40fdf0:	add	x3, x3, #0x1bc
  40fdf4:	mov	x2, #0x10                  	// #16
  40fdf8:	mov	w1, w20
  40fdfc:	mov	x0, x21
  40fe00:	bl	414540 <ferror@plt+0x11c70>
  40fe04:	str	xzr, [sp, #88]
  40fe08:	str	xzr, [sp, #96]
  40fe0c:	str	xzr, [sp, #104]
  40fe10:	mov	x0, #0x1                   	// #1
  40fe14:	str	x0, [sp, #112]
  40fe18:	str	xzr, [sp, #120]
  40fe1c:	str	xzr, [sp, #128]
  40fe20:	str	xzr, [sp, #136]
  40fe24:	cbz	w20, 40fe9c <ferror@plt+0xd5cc>
  40fe28:	add	x5, x21, #0x8
  40fe2c:	sub	w20, w20, #0x1
  40fe30:	add	x0, x21, #0x18
  40fe34:	add	x20, x0, x20, lsl #4
  40fe38:	ldr	x0, [x5], #16
  40fe3c:	ldr	x1, [x0, #8]
  40fe40:	ldr	x4, [sp, #96]
  40fe44:	add	x4, x4, x1
  40fe48:	ldr	x1, [x0, #16]
  40fe4c:	ldr	x3, [sp, #104]
  40fe50:	add	x3, x3, x1
  40fe54:	ldr	x1, [x0, #32]
  40fe58:	ldr	x2, [sp, #120]
  40fe5c:	add	x2, x2, x1
  40fe60:	ldr	x6, [x0, #40]
  40fe64:	ldr	x1, [sp, #128]
  40fe68:	add	x1, x1, x6
  40fe6c:	ldr	x6, [x0]
  40fe70:	ldr	x0, [sp, #88]
  40fe74:	add	x0, x0, x6
  40fe78:	str	x0, [sp, #88]
  40fe7c:	str	x4, [sp, #96]
  40fe80:	str	x3, [sp, #104]
  40fe84:	str	xzr, [sp, #112]
  40fe88:	str	x2, [sp, #120]
  40fe8c:	str	x1, [sp, #128]
  40fe90:	str	xzr, [sp, #136]
  40fe94:	cmp	x20, x5
  40fe98:	b.ne	40fe38 <ferror@plt+0xd568>  // b.any
  40fe9c:	mov	x0, x21
  40fea0:	bl	402690 <free@plt>
  40fea4:	mov	x20, #0x8c                  	// #140
  40fea8:	adrp	x23, 488000 <_obstack_memory_used@@Base+0x41094>
  40feac:	mov	w21, #0x2d                  	// #45
  40feb0:	ldr	x1, [x23, #1320]
  40feb4:	mov	w0, w21
  40feb8:	bl	402380 <fputc@plt>
  40febc:	subs	x20, x20, #0x1
  40fec0:	b.ne	40feb0 <ferror@plt+0xd5e0>  // b.any
  40fec4:	adrp	x20, 488000 <_obstack_memory_used@@Base+0x41094>
  40fec8:	ldr	x1, [x20, #1320]
  40fecc:	mov	w0, #0xa                   	// #10
  40fed0:	bl	402380 <fputc@plt>
  40fed4:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  40fed8:	add	x0, x0, #0x258
  40fedc:	str	x0, [sp]
  40fee0:	adrp	x7, 459000 <_obstack_memory_used@@Base+0x12094>
  40fee4:	add	x7, x7, #0x1f0
  40fee8:	adrp	x6, 459000 <_obstack_memory_used@@Base+0x12094>
  40feec:	add	x6, x6, #0x200
  40fef0:	adrp	x5, 459000 <_obstack_memory_used@@Base+0x12094>
  40fef4:	add	x5, x5, #0x208
  40fef8:	adrp	x4, 459000 <_obstack_memory_used@@Base+0x12094>
  40fefc:	add	x4, x4, #0x210
  40ff00:	adrp	x3, 459000 <_obstack_memory_used@@Base+0x12094>
  40ff04:	add	x3, x3, #0x218
  40ff08:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  40ff0c:	add	x2, x2, #0x228
  40ff10:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  40ff14:	add	x1, x1, #0x238
  40ff18:	ldr	x0, [x20, #1320]
  40ff1c:	bl	402890 <fprintf@plt>
  40ff20:	mov	x20, #0x8c                  	// #140
  40ff24:	adrp	x23, 488000 <_obstack_memory_used@@Base+0x41094>
  40ff28:	mov	w21, #0x2d                  	// #45
  40ff2c:	ldr	x1, [x23, #1320]
  40ff30:	mov	w0, w21
  40ff34:	bl	402380 <fputc@plt>
  40ff38:	subs	x20, x20, #0x1
  40ff3c:	b.ne	40ff2c <ferror@plt+0xd65c>  // b.any
  40ff40:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  40ff44:	ldr	x1, [x0, #1320]
  40ff48:	mov	w0, #0xa                   	// #10
  40ff4c:	bl	402380 <fputc@plt>
  40ff50:	sub	w19, w19, #0x1
  40ff54:	add	x20, x22, w19, sxtw #4
  40ff58:	tbnz	w19, #31, 40ff78 <ferror@plt+0xd6a8>
  40ff5c:	add	x2, sp, #0x58
  40ff60:	ldr	x1, [x20]
  40ff64:	ldr	x0, [x20, #8]
  40ff68:	bl	410238 <ferror@plt+0xd968>
  40ff6c:	sub	x20, x20, #0x10
  40ff70:	subs	w19, w19, #0x1
  40ff74:	b.pl	40ff5c <ferror@plt+0xd68c>  // b.nfrst
  40ff78:	mov	x19, #0x8c                  	// #140
  40ff7c:	adrp	x21, 488000 <_obstack_memory_used@@Base+0x41094>
  40ff80:	mov	w20, #0x2d                  	// #45
  40ff84:	ldr	x1, [x21, #1320]
  40ff88:	mov	w0, w20
  40ff8c:	bl	402380 <fputc@plt>
  40ff90:	subs	x19, x19, #0x1
  40ff94:	b.ne	40ff84 <ferror@plt+0xd6b4>  // b.any
  40ff98:	adrp	x19, 488000 <_obstack_memory_used@@Base+0x41094>
  40ff9c:	ldr	x1, [x19, #1320]
  40ffa0:	mov	w0, #0xa                   	// #10
  40ffa4:	bl	402380 <fputc@plt>
  40ffa8:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  40ffac:	add	x0, x0, #0x258
  40ffb0:	str	x0, [sp]
  40ffb4:	adrp	x7, 459000 <_obstack_memory_used@@Base+0x12094>
  40ffb8:	add	x7, x7, #0x1f0
  40ffbc:	adrp	x6, 459000 <_obstack_memory_used@@Base+0x12094>
  40ffc0:	add	x6, x6, #0x200
  40ffc4:	adrp	x5, 459000 <_obstack_memory_used@@Base+0x12094>
  40ffc8:	add	x5, x5, #0x208
  40ffcc:	adrp	x4, 459000 <_obstack_memory_used@@Base+0x12094>
  40ffd0:	add	x4, x4, #0x210
  40ffd4:	adrp	x3, 459000 <_obstack_memory_used@@Base+0x12094>
  40ffd8:	add	x3, x3, #0x218
  40ffdc:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  40ffe0:	add	x2, x2, #0x228
  40ffe4:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  40ffe8:	add	x1, x1, #0x238
  40ffec:	ldr	x0, [x19, #1320]
  40fff0:	bl	402890 <fprintf@plt>
  40fff4:	mov	x19, #0x8c                  	// #140
  40fff8:	adrp	x21, 488000 <_obstack_memory_used@@Base+0x41094>
  40fffc:	mov	w20, #0x2d                  	// #45
  410000:	ldr	x1, [x21, #1320]
  410004:	mov	w0, w20
  410008:	bl	402380 <fputc@plt>
  41000c:	subs	x19, x19, #0x1
  410010:	b.ne	410000 <ferror@plt+0xd730>  // b.any
  410014:	adrp	x19, 488000 <_obstack_memory_used@@Base+0x41094>
  410018:	ldr	x1, [x19, #1320]
  41001c:	mov	w0, #0xa                   	// #10
  410020:	bl	402380 <fputc@plt>
  410024:	ldr	x0, [x19, #1320]
  410028:	ldr	x3, [sp, #88]
  41002c:	mov	w4, #0x20                  	// #32
  410030:	mov	x1, #0x27ff                	// #10239
  410034:	cmp	x3, x1
  410038:	b.ls	410050 <ferror@plt+0xd780>  // b.plast
  41003c:	mov	w1, #0x9fffff              	// #10485759
  410040:	cmp	x3, x1
  410044:	b.hi	410158 <ferror@plt+0xd888>  // b.pmore
  410048:	lsr	x3, x3, #10
  41004c:	mov	w4, #0x6b                  	// #107
  410050:	ldr	x5, [sp, #96]
  410054:	mov	w6, #0x20                  	// #32
  410058:	mov	x1, #0x27ff                	// #10239
  41005c:	cmp	x5, x1
  410060:	b.ls	410078 <ferror@plt+0xd7a8>  // b.plast
  410064:	mov	w1, #0x9fffff              	// #10485759
  410068:	cmp	x5, x1
  41006c:	b.hi	410164 <ferror@plt+0xd894>  // b.pmore
  410070:	lsr	x5, x5, #10
  410074:	mov	w6, #0x6b                  	// #107
  410078:	ldr	x7, [sp, #120]
  41007c:	mov	w1, #0x20                  	// #32
  410080:	mov	x2, #0x27ff                	// #10239
  410084:	cmp	x7, x2
  410088:	b.ls	4100a0 <ferror@plt+0xd7d0>  // b.plast
  41008c:	mov	w1, #0x9fffff              	// #10485759
  410090:	cmp	x7, x1
  410094:	b.hi	410170 <ferror@plt+0xd8a0>  // b.pmore
  410098:	lsr	x7, x7, #10
  41009c:	mov	w1, #0x6b                  	// #107
  4100a0:	str	w1, [sp]
  4100a4:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  4100a8:	add	x2, x2, #0x268
  4100ac:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  4100b0:	add	x1, x1, #0x270
  4100b4:	bl	402890 <fprintf@plt>
  4100b8:	mov	x19, #0x8c                  	// #140
  4100bc:	adrp	x21, 488000 <_obstack_memory_used@@Base+0x41094>
  4100c0:	mov	w20, #0x2d                  	// #45
  4100c4:	ldr	x1, [x21, #1320]
  4100c8:	mov	w0, w20
  4100cc:	bl	402380 <fputc@plt>
  4100d0:	subs	x19, x19, #0x1
  4100d4:	b.ne	4100c4 <ferror@plt+0xd7f4>  // b.any
  4100d8:	adrp	x19, 488000 <_obstack_memory_used@@Base+0x41094>
  4100dc:	ldr	x1, [x19, #1320]
  4100e0:	mov	w0, #0xa                   	// #10
  4100e4:	bl	402380 <fputc@plt>
  4100e8:	mov	x0, x22
  4100ec:	bl	402690 <free@plt>
  4100f0:	ldr	x1, [x19, #1320]
  4100f4:	mov	w0, #0xa                   	// #10
  4100f8:	bl	402380 <fputc@plt>
  4100fc:	ldp	x19, x20, [sp, #32]
  410100:	ldp	x21, x22, [sp, #48]
  410104:	ldr	x23, [sp, #64]
  410108:	ldp	x29, x30, [sp, #16]
  41010c:	add	sp, sp, #0x90
  410110:	ret
  410114:	add	x0, x0, #0x10
  410118:	str	x0, [sp, #88]
  41011c:	add	x0, sp, #0x58
  410120:	bl	411000 <ferror@plt+0xe730>
  410124:	ldr	x0, [sp, #88]
  410128:	cbz	x0, 40fde4 <ferror@plt+0xd514>
  41012c:	ldr	x2, [x0]
  410130:	ldr	w1, [x2, #20]
  410134:	cmp	w1, #0x3
  410138:	b.ne	410114 <ferror@plt+0xd844>  // b.any
  41013c:	ubfiz	x1, x20, #4, #32
  410140:	add	x3, x21, x1
  410144:	ldr	x4, [x0, #8]
  410148:	str	x2, [x21, x1]
  41014c:	str	x4, [x3, #8]
  410150:	add	w20, w20, #0x1
  410154:	b	410114 <ferror@plt+0xd844>
  410158:	lsr	x3, x3, #20
  41015c:	mov	w4, #0x4d                  	// #77
  410160:	b	410050 <ferror@plt+0xd780>
  410164:	lsr	x5, x5, #20
  410168:	mov	w6, #0x4d                  	// #77
  41016c:	b	410078 <ferror@plt+0xd7a8>
  410170:	lsr	x7, x7, #20
  410174:	mov	w1, #0x4d                  	// #77
  410178:	b	4100a0 <ferror@plt+0xd7d0>
  41017c:	stp	x29, x30, [sp, #-32]!
  410180:	mov	x29, sp
  410184:	str	x19, [sp, #16]
  410188:	adrp	x19, 488000 <_obstack_memory_used@@Base+0x41094>
  41018c:	add	x19, x19, #0x728
  410190:	mov	x0, x19
  410194:	bl	410404 <ferror@plt+0xdb34>
  410198:	adrp	x2, 488000 <_obstack_memory_used@@Base+0x41094>
  41019c:	add	x2, x2, #0x348
  4101a0:	mov	x1, x19
  4101a4:	adrp	x0, 411000 <ferror@plt+0xe730>
  4101a8:	add	x0, x0, #0x38
  4101ac:	bl	402370 <__cxa_atexit@plt>
  4101b0:	ldr	x19, [sp, #16]
  4101b4:	ldp	x29, x30, [sp], #32
  4101b8:	ret
  4101bc:	ldr	x4, [x0, #8]
  4101c0:	ldr	x3, [x1, #8]
  4101c4:	ldr	x0, [x4]
  4101c8:	ldr	x1, [x3]
  4101cc:	cmp	x1, x0
  4101d0:	cset	w2, hi  // hi = pmore
  4101d4:	b.eq	4101e8 <ferror@plt+0xd918>  // b.none
  4101d8:	mov	w0, #0xffffffff            	// #-1
  4101dc:	cmp	w2, #0x0
  4101e0:	cneg	w0, w0, ne  // ne = any
  4101e4:	ret
  4101e8:	ldr	x1, [x4, #16]
  4101ec:	ldr	x0, [x3, #16]
  4101f0:	cmp	x1, x0
  4101f4:	cset	w2, cc  // cc = lo, ul, last
  4101f8:	b.ne	4101d8 <ferror@plt+0xd908>  // b.any
  4101fc:	ldr	x2, [x4, #8]
  410200:	ldr	x1, [x3, #8]
  410204:	mov	w0, #0x0                   	// #0
  410208:	cmp	x2, x1
  41020c:	b.eq	4101e4 <ferror@plt+0xd914>  // b.none
  410210:	ldr	x2, [x4, #8]
  410214:	ldr	x1, [x3, #8]
  410218:	mov	w0, #0xffffffff            	// #-1
  41021c:	cmp	x2, x1
  410220:	b.eq	4101e4 <ferror@plt+0xd914>  // b.none
  410224:	ldr	x1, [x4, #8]
  410228:	ldr	x0, [x3, #8]
  41022c:	cmp	x1, x0
  410230:	cset	w2, cc  // cc = lo, ul, last
  410234:	b	4101d8 <ferror@plt+0xd908>
  410238:	mov	x12, #0x1070                	// #4208
  41023c:	sub	sp, sp, x12
  410240:	stp	x29, x30, [sp, #48]
  410244:	add	x29, sp, #0x30
  410248:	stp	x19, x20, [sp, #64]
  41024c:	stp	x21, x22, [sp, #80]
  410250:	str	x23, [sp, #96]
  410254:	mov	x21, x0
  410258:	mov	x22, x1
  41025c:	mov	x23, x2
  410260:	ldr	x19, [x1]
  410264:	adrp	x20, 459000 <_obstack_memory_used@@Base+0x12094>
  410268:	add	x20, x20, #0x140
  41026c:	mov	x1, x20
  410270:	mov	x0, x19
  410274:	bl	4027a0 <strstr@plt>
  410278:	cbz	x0, 410284 <ferror@plt+0xd9b4>
  41027c:	add	x19, x0, #0x4
  410280:	b	41026c <ferror@plt+0xd99c>
  410284:	ldr	x4, [x22, #8]
  410288:	ldr	w3, [x22, #16]
  41028c:	mov	x2, x19
  410290:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  410294:	add	x1, x1, #0x148
  410298:	add	x0, sp, #0x70
  41029c:	bl	402350 <sprintf@plt>
  4102a0:	strb	wzr, [sp, #160]
  4102a4:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  4102a8:	ldr	x0, [x0, #1320]
  4102ac:	ldr	x3, [x21, #48]
  4102b0:	ldr	x1, [x21]
  4102b4:	mov	x2, #0x27ff                	// #10239
  4102b8:	cmp	x1, x2
  4102bc:	b.ls	4102e4 <ferror@plt+0xda14>  // b.plast
  4102c0:	mov	w2, #0x9fffff              	// #10485759
  4102c4:	cmp	x1, x2
  4102c8:	b.hi	4102d8 <ferror@plt+0xda08>  // b.pmore
  4102cc:	lsr	x4, x1, #10
  4102d0:	mov	w5, #0x6b                  	// #107
  4102d4:	b	4102ec <ferror@plt+0xda1c>
  4102d8:	lsr	x4, x1, #20
  4102dc:	mov	w5, #0x4d                  	// #77
  4102e0:	b	4102ec <ferror@plt+0xda1c>
  4102e4:	mov	x4, x1
  4102e8:	mov	w5, #0x20                  	// #32
  4102ec:	ucvtf	d0, x1
  4102f0:	mov	x1, #0x4059000000000000    	// #4636737291354636288
  4102f4:	fmov	d1, x1
  4102f8:	fmul	d0, d0, d1
  4102fc:	ldr	d1, [x23]
  410300:	ucvtf	d1, d1
  410304:	fdiv	d0, d0, d1
  410308:	ldr	x6, [x21, #16]
  41030c:	mov	w7, #0x20                  	// #32
  410310:	mov	x1, #0x27ff                	// #10239
  410314:	cmp	x6, x1
  410318:	b.ls	410330 <ferror@plt+0xda60>  // b.plast
  41031c:	mov	w1, #0x9fffff              	// #10485759
  410320:	cmp	x6, x1
  410324:	b.hi	4103e0 <ferror@plt+0xdb10>  // b.pmore
  410328:	lsr	x6, x6, #10
  41032c:	mov	w7, #0x6b                  	// #107
  410330:	ldr	d3, [x21, #8]
  410334:	ucvtf	d1, d3
  410338:	mov	x1, #0x4059000000000000    	// #4636737291354636288
  41033c:	fmov	d2, x1
  410340:	fmul	d1, d1, d2
  410344:	ldr	d2, [x23, #8]
  410348:	ucvtf	d2, d2
  41034c:	fdiv	d1, d1, d2
  410350:	ldr	x1, [x21, #32]
  410354:	mov	w8, #0x20                  	// #32
  410358:	mov	x2, #0x27ff                	// #10239
  41035c:	cmp	x1, x2
  410360:	b.ls	410378 <ferror@plt+0xdaa8>  // b.plast
  410364:	mov	w2, #0x9fffff              	// #10485759
  410368:	cmp	x1, x2
  41036c:	b.hi	4103ec <ferror@plt+0xdb1c>  // b.pmore
  410370:	lsr	x1, x1, #10
  410374:	mov	w8, #0x6b                  	// #107
  410378:	ldr	x2, [x21, #40]
  41037c:	mov	w9, #0x20                  	// #32
  410380:	mov	x10, #0x27ff                	// #10239
  410384:	cmp	x2, x10
  410388:	b.ls	4103a0 <ferror@plt+0xdad0>  // b.plast
  41038c:	mov	w9, #0x9fffff              	// #10485759
  410390:	cmp	x2, x9
  410394:	b.hi	4103f8 <ferror@plt+0xdb28>  // b.pmore
  410398:	lsr	x2, x2, #10
  41039c:	mov	w9, #0x6b                  	// #107
  4103a0:	str	w9, [sp, #32]
  4103a4:	str	x2, [sp, #24]
  4103a8:	str	w8, [sp, #16]
  4103ac:	str	x1, [sp, #8]
  4103b0:	str	d3, [sp]
  4103b4:	add	x2, sp, #0x70
  4103b8:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  4103bc:	add	x1, x1, #0x158
  4103c0:	bl	402890 <fprintf@plt>
  4103c4:	ldp	x19, x20, [sp, #64]
  4103c8:	ldp	x21, x22, [sp, #80]
  4103cc:	ldr	x23, [sp, #96]
  4103d0:	ldp	x29, x30, [sp, #48]
  4103d4:	mov	x12, #0x1070                	// #4208
  4103d8:	add	sp, sp, x12
  4103dc:	ret
  4103e0:	lsr	x6, x6, #20
  4103e4:	mov	w7, #0x4d                  	// #77
  4103e8:	b	410330 <ferror@plt+0xda60>
  4103ec:	lsr	x1, x1, #20
  4103f0:	mov	w8, #0x4d                  	// #77
  4103f4:	b	410378 <ferror@plt+0xdaa8>
  4103f8:	lsr	x2, x2, #20
  4103fc:	mov	w9, #0x4d                  	// #77
  410400:	b	4103a0 <ferror@plt+0xdad0>
  410404:	stp	x29, x30, [sp, #-48]!
  410408:	mov	x29, sp
  41040c:	stp	x19, x20, [sp, #16]
  410410:	stp	x21, x22, [sp, #32]
  410414:	mov	x20, x0
  410418:	mov	x0, #0x30                  	// #48
  41041c:	bl	447868 <_obstack_memory_used@@Base+0x8fc>
  410420:	mov	x19, x0
  410424:	str	xzr, [x0, #16]
  410428:	str	xzr, [x0, #24]
  41042c:	str	wzr, [x0, #32]
  410430:	str	wzr, [x0, #36]
  410434:	strb	wzr, [x0, #44]
  410438:	mov	x0, #0xd                   	// #13
  41043c:	bl	403c9c <ferror@plt+0x13cc>
  410440:	mov	w21, w0
  410444:	ubfiz	x1, x21, #4, #32
  410448:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  41044c:	add	x0, x0, #0x2b0
  410450:	ldr	w22, [x0, x1]
  410454:	mov	x1, #0x10                  	// #16
  410458:	mov	x0, x22
  41045c:	bl	447084 <_obstack_memory_used@@Base+0x118>
  410460:	cbz	x22, 410478 <ferror@plt+0xdba8>
  410464:	mov	x1, x0
  410468:	add	x2, x0, x22, lsl #4
  41046c:	str	xzr, [x1], #16
  410470:	cmp	x1, x2
  410474:	b.ne	41046c <ferror@plt+0xdb9c>  // b.any
  410478:	str	x0, [x19]
  41047c:	str	x22, [x19, #8]
  410480:	str	w21, [x19, #40]
  410484:	str	x19, [x20, #40]
  410488:	mov	x0, #0x30                  	// #48
  41048c:	bl	447868 <_obstack_memory_used@@Base+0x8fc>
  410490:	mov	x19, x0
  410494:	str	xzr, [x0, #16]
  410498:	str	xzr, [x0, #24]
  41049c:	str	wzr, [x0, #32]
  4104a0:	str	wzr, [x0, #36]
  4104a4:	strb	wzr, [x0, #44]
  4104a8:	mov	x0, #0xd                   	// #13
  4104ac:	bl	403c9c <ferror@plt+0x13cc>
  4104b0:	mov	w22, w0
  4104b4:	ubfiz	x1, x22, #4, #32
  4104b8:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  4104bc:	add	x0, x0, #0x2b0
  4104c0:	ldr	w21, [x0, x1]
  4104c4:	mov	x1, #0x18                  	// #24
  4104c8:	mov	x0, x21
  4104cc:	bl	447084 <_obstack_memory_used@@Base+0x118>
  4104d0:	cbz	x21, 4104ec <ferror@plt+0xdc1c>
  4104d4:	mov	x1, x0
  4104d8:	add	x2, x21, x21, lsl #1
  4104dc:	add	x2, x0, x2, lsl #3
  4104e0:	str	xzr, [x1], #24
  4104e4:	cmp	x2, x1
  4104e8:	b.ne	4104e0 <ferror@plt+0xdc10>  // b.any
  4104ec:	str	x0, [x19]
  4104f0:	str	x21, [x19, #8]
  4104f4:	str	w22, [x19, #40]
  4104f8:	str	x19, [x20, #48]
  4104fc:	mov	x0, #0x30                  	// #48
  410500:	bl	447868 <_obstack_memory_used@@Base+0x8fc>
  410504:	mov	x19, x0
  410508:	str	xzr, [x0, #16]
  41050c:	str	xzr, [x0, #24]
  410510:	str	wzr, [x0, #32]
  410514:	str	wzr, [x0, #36]
  410518:	strb	wzr, [x0, #44]
  41051c:	mov	x0, #0xd                   	// #13
  410520:	bl	403c9c <ferror@plt+0x13cc>
  410524:	mov	w22, w0
  410528:	ubfiz	x1, x22, #4, #32
  41052c:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  410530:	add	x0, x0, #0x2b0
  410534:	ldr	w21, [x0, x1]
  410538:	mov	x1, #0x18                  	// #24
  41053c:	mov	x0, x21
  410540:	bl	447084 <_obstack_memory_used@@Base+0x118>
  410544:	cbz	x21, 410560 <ferror@plt+0xdc90>
  410548:	mov	x1, x0
  41054c:	add	x2, x21, x21, lsl #1
  410550:	add	x2, x0, x2, lsl #3
  410554:	str	xzr, [x1], #24
  410558:	cmp	x2, x1
  41055c:	b.ne	410554 <ferror@plt+0xdc84>  // b.any
  410560:	str	x0, [x19]
  410564:	str	x21, [x19, #8]
  410568:	str	w22, [x19, #40]
  41056c:	str	x19, [x20]
  410570:	ldp	x19, x20, [sp, #16]
  410574:	ldp	x21, x22, [sp, #32]
  410578:	ldp	x29, x30, [sp], #48
  41057c:	ret
  410580:	mov	x7, x0
  410584:	ldr	w0, [x0, #32]
  410588:	add	w0, w0, #0x1
  41058c:	str	w0, [x7, #32]
  410590:	ldr	w9, [x7, #40]
  410594:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  410598:	add	x0, x0, #0x2b0
  41059c:	ubfiz	x4, x9, #4, #32
  4105a0:	add	x3, x0, x4
  4105a4:	ldr	w6, [x0, x4]
  4105a8:	ldr	w11, [x3, #12]
  4105ac:	mov	w4, w2
  4105b0:	ldr	w3, [x3, #4]
  4105b4:	mul	x3, x3, x4
  4105b8:	lsr	x3, x3, #32
  4105bc:	sub	w5, w2, w3
  4105c0:	add	w3, w3, w5, lsr #1
  4105c4:	lsr	w3, w3, w11
  4105c8:	msub	w3, w3, w6, w2
  4105cc:	ldr	x8, [x7]
  4105d0:	ubfiz	x5, x3, #1, #32
  4105d4:	add	x5, x5, w3, uxtw
  4105d8:	lsl	x5, x5, #3
  4105dc:	add	x0, x8, x5
  4105e0:	ldr	x5, [x8, x5]
  4105e4:	cbz	x5, 410678 <ferror@plt+0xdda8>
  4105e8:	cmp	x5, #0x1
  4105ec:	b.eq	4105fc <ferror@plt+0xdd2c>  // b.none
  4105f0:	ldr	x10, [x1]
  4105f4:	cmp	x5, x10
  4105f8:	b.eq	410678 <ferror@plt+0xdda8>  // b.none
  4105fc:	ldr	x5, [x7, #8]
  410600:	ubfiz	x9, x9, #4, #32
  410604:	adrp	x10, 458000 <_obstack_memory_used@@Base+0x11094>
  410608:	add	x10, x10, #0x2b0
  41060c:	add	x9, x10, x9
  410610:	ldr	w0, [x9, #8]
  410614:	mul	x0, x0, x4
  410618:	lsr	x0, x0, #32
  41061c:	add	w9, w2, #0x1
  410620:	sub	w4, w2, w0
  410624:	add	w4, w0, w4, lsr #1
  410628:	lsr	w4, w4, w11
  41062c:	sub	w6, w6, #0x2
  410630:	msub	w4, w4, w6, w9
  410634:	ldr	w2, [x7, #36]
  410638:	add	w2, w2, #0x1
  41063c:	str	w2, [x7, #36]
  410640:	add	w3, w3, w4
  410644:	sub	w2, w3, w5
  410648:	cmp	x5, w3, uxtw
  41064c:	csel	w3, w2, w3, ls  // ls = plast
  410650:	ubfiz	x2, x3, #1, #32
  410654:	add	x2, x2, w3, uxtw
  410658:	add	x0, x8, x2, lsl #3
  41065c:	ldr	x2, [x8, x2, lsl #3]
  410660:	cbz	x2, 410678 <ferror@plt+0xdda8>
  410664:	cmp	x2, #0x1
  410668:	b.eq	410634 <ferror@plt+0xdd64>  // b.none
  41066c:	ldr	x6, [x1]
  410670:	cmp	x2, x6
  410674:	b.ne	410634 <ferror@plt+0xdd64>  // b.any
  410678:	ret
  41067c:	mov	x9, x0
  410680:	ldr	w0, [x0, #32]
  410684:	add	w0, w0, #0x1
  410688:	str	w0, [x9, #32]
  41068c:	ldr	w7, [x9, #40]
  410690:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  410694:	add	x0, x0, #0x2b0
  410698:	ubfiz	x4, x7, #4, #32
  41069c:	add	x3, x0, x4
  4106a0:	ldr	w6, [x0, x4]
  4106a4:	ldr	w8, [x3, #12]
  4106a8:	mov	w11, w2
  4106ac:	ldr	w3, [x3, #4]
  4106b0:	mul	x3, x3, x11
  4106b4:	lsr	x3, x3, #32
  4106b8:	sub	w5, w2, w3
  4106bc:	add	w3, w3, w5, lsr #1
  4106c0:	lsr	w3, w3, w8
  4106c4:	msub	w3, w3, w6, w2
  4106c8:	ldr	x10, [x9]
  4106cc:	ubfiz	x5, x3, #4, #32
  4106d0:	add	x0, x10, x5
  4106d4:	ldr	x5, [x10, x5]
  4106d8:	cbz	x5, 410798 <ferror@plt+0xdec8>
  4106dc:	cmp	x5, #0x1
  4106e0:	b.eq	4106f8 <ferror@plt+0xde28>  // b.none
  4106e4:	ldr	x4, [x1]
  4106e8:	ldr	x13, [x5]
  4106ec:	ldr	x12, [x4]
  4106f0:	cmp	x13, x12
  4106f4:	b.eq	41079c <ferror@plt+0xdecc>  // b.none
  4106f8:	ldr	x5, [x9, #8]
  4106fc:	ubfiz	x7, x7, #4, #32
  410700:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  410704:	add	x0, x0, #0x2b0
  410708:	add	x0, x0, x7
  41070c:	ldr	w4, [x0, #8]
  410710:	mul	x4, x4, x11
  410714:	lsr	x4, x4, #32
  410718:	add	w0, w2, #0x1
  41071c:	sub	w2, w2, w4
  410720:	add	w4, w4, w2, lsr #1
  410724:	lsr	w4, w4, w8
  410728:	sub	w6, w6, #0x2
  41072c:	msub	w4, w4, w6, w0
  410730:	ldr	w2, [x9, #36]
  410734:	add	w2, w2, #0x1
  410738:	str	w2, [x9, #36]
  41073c:	add	w3, w3, w4
  410740:	sub	w2, w3, w5
  410744:	cmp	x5, w3, uxtw
  410748:	csel	w3, w2, w3, ls  // ls = plast
  41074c:	ubfiz	x2, x3, #4, #32
  410750:	add	x0, x10, x2
  410754:	ldr	x2, [x10, x2]
  410758:	cbz	x2, 410798 <ferror@plt+0xdec8>
  41075c:	cmp	x2, #0x1
  410760:	b.eq	410730 <ferror@plt+0xde60>  // b.none
  410764:	ldr	x6, [x1]
  410768:	ldr	x8, [x2]
  41076c:	ldr	x7, [x6]
  410770:	cmp	x8, x7
  410774:	b.ne	410730 <ferror@plt+0xde60>  // b.any
  410778:	ldr	x8, [x2, #8]
  41077c:	ldr	x7, [x6, #8]
  410780:	cmp	x8, x7
  410784:	b.ne	410730 <ferror@plt+0xde60>  // b.any
  410788:	ldr	w7, [x2, #16]
  41078c:	ldr	w2, [x6, #16]
  410790:	cmp	w7, w2
  410794:	b.ne	410730 <ferror@plt+0xde60>  // b.any
  410798:	ret
  41079c:	ldr	x13, [x5, #8]
  4107a0:	ldr	x12, [x4, #8]
  4107a4:	cmp	x13, x12
  4107a8:	b.ne	4106f8 <ferror@plt+0xde28>  // b.any
  4107ac:	ldr	w5, [x5, #16]
  4107b0:	ldr	w4, [x4, #16]
  4107b4:	cmp	w5, w4
  4107b8:	b.ne	4106f8 <ferror@plt+0xde28>  // b.any
  4107bc:	b	410798 <ferror@plt+0xdec8>
  4107c0:	stp	x29, x30, [sp, #-96]!
  4107c4:	mov	x29, sp
  4107c8:	stp	x19, x20, [sp, #16]
  4107cc:	stp	x21, x22, [sp, #32]
  4107d0:	stp	x23, x24, [sp, #48]
  4107d4:	stp	x25, x26, [sp, #64]
  4107d8:	mov	x20, x0
  4107dc:	ldr	x25, [x0]
  4107e0:	ldr	w21, [x0, #40]
  4107e4:	ldr	x19, [x0, #8]
  4107e8:	add	x22, x25, x19, lsl #4
  4107ec:	ldr	x1, [x0, #16]
  4107f0:	ldr	x0, [x0, #24]
  4107f4:	sub	x1, x1, x0
  4107f8:	lsl	x0, x1, #1
  4107fc:	cmp	x19, x1, lsl #1
  410800:	b.cc	41081c <ferror@plt+0xdf4c>  // b.lo, b.ul, b.last
  410804:	lsl	w1, w1, #3
  410808:	cmp	x1, #0x20
  41080c:	mov	x2, #0x20                  	// #32
  410810:	csel	x1, x1, x2, cs  // cs = hs, nlast
  410814:	cmp	x19, x1
  410818:	b.ls	410834 <ferror@plt+0xdf64>  // b.plast
  41081c:	bl	403c9c <ferror@plt+0x13cc>
  410820:	mov	w21, w0
  410824:	ubfiz	x1, x21, #4, #32
  410828:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  41082c:	add	x0, x0, #0x2b0
  410830:	ldr	w19, [x0, x1]
  410834:	ldrb	w0, [x20, #44]
  410838:	cbnz	w0, 41084c <ferror@plt+0xdf7c>
  41083c:	mov	x1, #0x10                  	// #16
  410840:	mov	x0, x19
  410844:	bl	447084 <_obstack_memory_used@@Base+0x118>
  410848:	b	410864 <ferror@plt+0xdf94>
  41084c:	mov	x3, #0x0                   	// #0
  410850:	mov	x2, #0x0                   	// #0
  410854:	mov	x1, #0x0                   	// #0
  410858:	lsl	x0, x19, #4
  41085c:	bl	4040e4 <ferror@plt+0x1814>
  410860:	cbz	x0, 4108b8 <ferror@plt+0xdfe8>
  410864:	cbz	x19, 41087c <ferror@plt+0xdfac>
  410868:	mov	x1, x0
  41086c:	add	x2, x0, x19, lsl #4
  410870:	str	xzr, [x1], #16
  410874:	cmp	x2, x1
  410878:	b.ne	410870 <ferror@plt+0xdfa0>  // b.any
  41087c:	str	x0, [x20]
  410880:	str	x19, [x20, #8]
  410884:	str	w21, [x20, #40]
  410888:	ldr	x0, [x20, #16]
  41088c:	ldr	x1, [x20, #24]
  410890:	sub	x0, x0, x1
  410894:	str	x0, [x20, #16]
  410898:	str	xzr, [x20, #24]
  41089c:	mov	x19, x25
  4108a0:	mov	x23, #0x8                   	// #8
  4108a4:	mov	w24, #0x79b9                	// #31161
  4108a8:	movk	w24, #0x9e37, lsl #16
  4108ac:	adrp	x21, 458000 <_obstack_memory_used@@Base+0x11094>
  4108b0:	add	x21, x21, #0x2b0
  4108b4:	b	4108e4 <ferror@plt+0xe014>
  4108b8:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  4108bc:	add	x2, x2, #0x290
  4108c0:	mov	w1, #0x2b5                 	// #693
  4108c4:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  4108c8:	add	x0, x0, #0x2a0
  4108cc:	bl	4062a0 <ferror@plt+0x39d0>
  4108d0:	ldp	x0, x1, [x19]
  4108d4:	stp	x0, x1, [x5]
  4108d8:	add	x19, x19, #0x10
  4108dc:	cmp	x22, x19
  4108e0:	b.ls	410a2c <ferror@plt+0xe15c>  // b.plast
  4108e4:	ldr	x26, [x19]
  4108e8:	cmp	x26, #0x1
  4108ec:	b.ls	4108d8 <ferror@plt+0xe008>  // b.plast
  4108f0:	ldr	x0, [x26]
  4108f4:	str	x0, [sp, #88]
  4108f8:	mov	w2, #0x0                   	// #0
  4108fc:	mov	x1, x23
  410900:	add	x0, sp, #0x58
  410904:	bl	446820 <ferror@plt+0x43f50>
  410908:	ldr	x1, [x26, #8]
  41090c:	str	x1, [sp, #88]
  410910:	mov	w2, w0
  410914:	mov	x1, x23
  410918:	add	x0, sp, #0x58
  41091c:	bl	446820 <ferror@plt+0x43f50>
  410920:	ldr	w1, [x26, #16]
  410924:	sub	w3, w24, w1
  410928:	sub	w3, w3, w0
  41092c:	eor	w3, w3, w0, lsr #13
  410930:	sub	w1, w1, w0
  410934:	sub	w1, w1, w3
  410938:	eor	w1, w1, w3, lsl #8
  41093c:	sub	w2, w0, w3
  410940:	sub	w2, w2, w1
  410944:	eor	w2, w2, w1, lsr #13
  410948:	sub	w3, w3, w1
  41094c:	sub	w3, w3, w2
  410950:	eor	w3, w3, w2, lsr #12
  410954:	sub	w0, w1, w2
  410958:	sub	w0, w0, w3
  41095c:	eor	w0, w0, w3, lsl #16
  410960:	sub	w2, w2, w3
  410964:	sub	w2, w2, w0
  410968:	eor	w2, w2, w0, lsr #5
  41096c:	sub	w3, w3, w0
  410970:	sub	w3, w3, w2
  410974:	eor	w3, w3, w2, lsr #3
  410978:	sub	w1, w0, w2
  41097c:	sub	w1, w1, w3
  410980:	eor	w1, w1, w3, lsl #10
  410984:	sub	w2, w2, w3
  410988:	sub	w2, w2, w1
  41098c:	eor	w1, w2, w1, lsr #15
  410990:	ldr	w3, [x20, #40]
  410994:	ubfiz	x2, x3, #4, #32
  410998:	add	x0, x21, x2
  41099c:	ldr	w6, [x21, x2]
  4109a0:	ldr	w7, [x0, #12]
  4109a4:	mov	w8, w1
  4109a8:	ldr	w0, [x0, #4]
  4109ac:	mul	x0, x0, x8
  4109b0:	lsr	x0, x0, #32
  4109b4:	sub	w2, w1, w0
  4109b8:	add	w0, w0, w2, lsr #1
  4109bc:	lsr	w0, w0, w7
  4109c0:	msub	w0, w0, w6, w1
  4109c4:	ldr	x2, [x20]
  4109c8:	ubfiz	x4, x0, #4, #32
  4109cc:	add	x5, x2, x4
  4109d0:	ldr	x4, [x2, x4]
  4109d4:	cbz	x4, 4108d0 <ferror@plt+0xe000>
  4109d8:	ldr	x4, [x20, #8]
  4109dc:	ubfiz	x3, x3, #4, #32
  4109e0:	add	x3, x21, x3
  4109e4:	ldr	w3, [x3, #8]
  4109e8:	mul	x3, x3, x8
  4109ec:	lsr	x3, x3, #32
  4109f0:	add	w5, w1, #0x1
  4109f4:	sub	w1, w1, w3
  4109f8:	add	w1, w3, w1, lsr #1
  4109fc:	lsr	w1, w1, w7
  410a00:	sub	w6, w6, #0x2
  410a04:	msub	w1, w1, w6, w5
  410a08:	add	w0, w0, w1
  410a0c:	sub	w3, w0, w4
  410a10:	cmp	x4, w0, uxtw
  410a14:	csel	w0, w3, w0, ls  // ls = plast
  410a18:	ubfiz	x3, x0, #4, #32
  410a1c:	add	x5, x2, x3
  410a20:	ldr	x3, [x2, x3]
  410a24:	cbnz	x3, 410a08 <ferror@plt+0xe138>
  410a28:	b	4108d0 <ferror@plt+0xe000>
  410a2c:	ldrb	w0, [x20, #44]
  410a30:	cbnz	w0, 410a54 <ferror@plt+0xe184>
  410a34:	mov	x0, x25
  410a38:	bl	402690 <free@plt>
  410a3c:	ldp	x19, x20, [sp, #16]
  410a40:	ldp	x21, x22, [sp, #32]
  410a44:	ldp	x23, x24, [sp, #48]
  410a48:	ldp	x25, x26, [sp, #64]
  410a4c:	ldp	x29, x30, [sp], #96
  410a50:	ret
  410a54:	mov	x0, x25
  410a58:	bl	40412c <ferror@plt+0x185c>
  410a5c:	b	410a3c <ferror@plt+0xe16c>
  410a60:	stp	x29, x30, [sp, #-48]!
  410a64:	mov	x29, sp
  410a68:	stp	x19, x20, [sp, #16]
  410a6c:	stp	x21, x22, [sp, #32]
  410a70:	mov	x19, x0
  410a74:	mov	x20, x1
  410a78:	mov	w22, w2
  410a7c:	mov	w21, w3
  410a80:	cmp	w3, #0x1
  410a84:	b.eq	410b30 <ferror@plt+0xe260>  // b.none
  410a88:	ldr	w0, [x19, #32]
  410a8c:	add	w0, w0, #0x1
  410a90:	str	w0, [x19, #32]
  410a94:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  410a98:	add	x1, x1, #0x2b0
  410a9c:	ldr	w0, [x19, #40]
  410aa0:	lsl	x0, x0, #4
  410aa4:	add	x3, x1, x0
  410aa8:	ldr	w2, [x1, x0]
  410aac:	ldr	w5, [x3, #12]
  410ab0:	mov	w6, w22
  410ab4:	ldr	w1, [x3, #4]
  410ab8:	mul	x1, x1, x6
  410abc:	lsr	x1, x1, #32
  410ac0:	sub	w4, w22, w1
  410ac4:	add	w4, w1, w4, lsr #1
  410ac8:	lsr	w4, w4, w5
  410acc:	msub	w4, w4, w2, w22
  410ad0:	ldr	w0, [x3, #8]
  410ad4:	mul	x0, x0, x6
  410ad8:	lsr	x0, x0, #32
  410adc:	add	w1, w22, #0x1
  410ae0:	sub	w6, w22, w0
  410ae4:	add	w6, w0, w6, lsr #1
  410ae8:	lsr	w6, w6, w5
  410aec:	sub	w2, w2, #0x2
  410af0:	msub	w6, w6, w2, w1
  410af4:	ldr	x5, [x19]
  410af8:	ubfiz	x0, x4, #4, #32
  410afc:	add	x9, x5, x0
  410b00:	ldr	x0, [x5, x0]
  410b04:	cbz	x0, 410c2c <ferror@plt+0xe35c>
  410b08:	cmp	x0, #0x1
  410b0c:	b.eq	410b28 <ferror@plt+0xe258>  // b.none
  410b10:	ldr	x1, [x20]
  410b14:	ldr	x3, [x0]
  410b18:	ldr	x2, [x1]
  410b1c:	cmp	x3, x2
  410b20:	b.eq	410b50 <ferror@plt+0xe280>  // b.none
  410b24:	mov	x9, #0x0                   	// #0
  410b28:	ldr	x1, [x19, #8]
  410b2c:	b	410b8c <ferror@plt+0xe2bc>
  410b30:	ldr	x0, [x0, #8]
  410b34:	add	x0, x0, x0, lsl #1
  410b38:	ldr	x1, [x19, #16]
  410b3c:	cmp	x0, x1, lsl #2
  410b40:	b.hi	410a88 <ferror@plt+0xe1b8>  // b.pmore
  410b44:	mov	x0, x19
  410b48:	bl	4107c0 <ferror@plt+0xdef0>
  410b4c:	b	410a88 <ferror@plt+0xe1b8>
  410b50:	ldr	x3, [x0, #8]
  410b54:	ldr	x2, [x1, #8]
  410b58:	cmp	x3, x2
  410b5c:	b.eq	410b68 <ferror@plt+0xe298>  // b.none
  410b60:	mov	x9, #0x0                   	// #0
  410b64:	b	410b28 <ferror@plt+0xe258>
  410b68:	ldr	w2, [x0, #16]
  410b6c:	ldr	w1, [x1, #16]
  410b70:	mov	x0, x9
  410b74:	mov	x9, #0x0                   	// #0
  410b78:	cmp	w2, w1
  410b7c:	b.ne	410b28 <ferror@plt+0xe258>  // b.any
  410b80:	b	410c14 <ferror@plt+0xe344>
  410b84:	cmp	x9, #0x0
  410b88:	csel	x9, x9, x0, ne  // ne = any
  410b8c:	ldr	w2, [x19, #36]
  410b90:	add	w2, w2, #0x1
  410b94:	str	w2, [x19, #36]
  410b98:	add	w4, w4, w6
  410b9c:	sub	w0, w4, w1
  410ba0:	cmp	x1, w4, uxtw
  410ba4:	csel	w4, w0, w4, ls  // ls = plast
  410ba8:	ubfiz	x2, x4, #4, #32
  410bac:	add	x0, x5, x2
  410bb0:	ldr	x2, [x5, x2]
  410bb4:	cbz	x2, 410bf8 <ferror@plt+0xe328>
  410bb8:	cmp	x2, #0x1
  410bbc:	b.eq	410b84 <ferror@plt+0xe2b4>  // b.none
  410bc0:	ldr	x3, [x20]
  410bc4:	ldr	x8, [x2]
  410bc8:	ldr	x7, [x3]
  410bcc:	cmp	x8, x7
  410bd0:	b.ne	410b8c <ferror@plt+0xe2bc>  // b.any
  410bd4:	ldr	x8, [x2, #8]
  410bd8:	ldr	x7, [x3, #8]
  410bdc:	cmp	x8, x7
  410be0:	b.ne	410b8c <ferror@plt+0xe2bc>  // b.any
  410be4:	ldr	w7, [x2, #16]
  410be8:	ldr	w2, [x3, #16]
  410bec:	cmp	w7, w2
  410bf0:	b.ne	410b8c <ferror@plt+0xe2bc>  // b.any
  410bf4:	b	410c14 <ferror@plt+0xe344>
  410bf8:	cbz	w21, 410c24 <ferror@plt+0xe354>
  410bfc:	cbz	x9, 410c30 <ferror@plt+0xe360>
  410c00:	ldr	x0, [x19, #24]
  410c04:	sub	x0, x0, #0x1
  410c08:	str	x0, [x19, #24]
  410c0c:	str	xzr, [x9]
  410c10:	mov	x0, x9
  410c14:	ldp	x19, x20, [sp, #16]
  410c18:	ldp	x21, x22, [sp, #32]
  410c1c:	ldp	x29, x30, [sp], #48
  410c20:	ret
  410c24:	mov	x0, x2
  410c28:	b	410c14 <ferror@plt+0xe344>
  410c2c:	cbz	w21, 410c14 <ferror@plt+0xe344>
  410c30:	ldr	x0, [x19, #16]
  410c34:	add	x0, x0, #0x1
  410c38:	str	x0, [x19, #16]
  410c3c:	ubfiz	x0, x4, #4, #32
  410c40:	add	x0, x5, x0
  410c44:	b	410c14 <ferror@plt+0xe344>
  410c48:	stp	x29, x30, [sp, #-64]!
  410c4c:	mov	x29, sp
  410c50:	stp	x19, x20, [sp, #16]
  410c54:	stp	x21, x22, [sp, #32]
  410c58:	str	x23, [sp, #48]
  410c5c:	mov	x19, x0
  410c60:	ldr	x21, [x0]
  410c64:	ldr	w23, [x0, #40]
  410c68:	ldr	x22, [x0, #8]
  410c6c:	add	x20, x22, x22, lsl #1
  410c70:	add	x20, x21, x20, lsl #3
  410c74:	ldr	x1, [x0, #16]
  410c78:	ldr	x0, [x0, #24]
  410c7c:	sub	x1, x1, x0
  410c80:	lsl	x0, x1, #1
  410c84:	cmp	x22, x1, lsl #1
  410c88:	b.cc	410ca4 <ferror@plt+0xe3d4>  // b.lo, b.ul, b.last
  410c8c:	lsl	w1, w1, #3
  410c90:	cmp	x1, #0x20
  410c94:	mov	x2, #0x20                  	// #32
  410c98:	csel	x1, x1, x2, cs  // cs = hs, nlast
  410c9c:	cmp	x22, x1
  410ca0:	b.ls	410cbc <ferror@plt+0xe3ec>  // b.plast
  410ca4:	bl	403c9c <ferror@plt+0x13cc>
  410ca8:	mov	w23, w0
  410cac:	ubfiz	x1, x23, #4, #32
  410cb0:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  410cb4:	add	x0, x0, #0x2b0
  410cb8:	ldr	w22, [x0, x1]
  410cbc:	ldrb	w0, [x19, #44]
  410cc0:	cbnz	w0, 410cd4 <ferror@plt+0xe404>
  410cc4:	mov	x1, #0x18                  	// #24
  410cc8:	mov	x0, x22
  410ccc:	bl	447084 <_obstack_memory_used@@Base+0x118>
  410cd0:	b	410cf0 <ferror@plt+0xe420>
  410cd4:	add	x0, x22, x22, lsl #1
  410cd8:	mov	x3, #0x0                   	// #0
  410cdc:	mov	x2, #0x0                   	// #0
  410ce0:	mov	x1, #0x0                   	// #0
  410ce4:	lsl	x0, x0, #3
  410ce8:	bl	4040e4 <ferror@plt+0x1814>
  410cec:	cbz	x0, 410d3c <ferror@plt+0xe46c>
  410cf0:	cbz	x22, 410d0c <ferror@plt+0xe43c>
  410cf4:	mov	x1, x0
  410cf8:	add	x2, x22, x22, lsl #1
  410cfc:	add	x2, x0, x2, lsl #3
  410d00:	str	xzr, [x1], #24
  410d04:	cmp	x1, x2
  410d08:	b.ne	410d00 <ferror@plt+0xe430>  // b.any
  410d0c:	str	x0, [x19]
  410d10:	str	x22, [x19, #8]
  410d14:	str	w23, [x19, #40]
  410d18:	ldr	x0, [x19, #16]
  410d1c:	ldr	x1, [x19, #24]
  410d20:	sub	x0, x0, x1
  410d24:	str	x0, [x19, #16]
  410d28:	str	xzr, [x19, #24]
  410d2c:	mov	x6, x21
  410d30:	adrp	x9, 458000 <_obstack_memory_used@@Base+0x11094>
  410d34:	add	x9, x9, #0x2b0
  410d38:	b	410d70 <ferror@plt+0xe4a0>
  410d3c:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  410d40:	add	x2, x2, #0x290
  410d44:	mov	w1, #0x2b5                 	// #693
  410d48:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  410d4c:	add	x0, x0, #0x2a0
  410d50:	bl	4062a0 <ferror@plt+0x39d0>
  410d54:	ldp	x0, x1, [x6]
  410d58:	stp	x0, x1, [x7]
  410d5c:	ldr	x0, [x6, #16]
  410d60:	str	x0, [x7, #16]
  410d64:	add	x6, x6, #0x18
  410d68:	cmp	x20, x6
  410d6c:	b.ls	410e24 <ferror@plt+0xe554>  // b.plast
  410d70:	ldr	x0, [x6]
  410d74:	cmp	x0, #0x1
  410d78:	b.ls	410d64 <ferror@plt+0xe494>  // b.plast
  410d7c:	asr	x3, x0, #3
  410d80:	ldr	w8, [x19, #40]
  410d84:	ubfiz	x2, x8, #4, #32
  410d88:	add	x1, x9, x2
  410d8c:	ldr	w10, [x9, x2]
  410d90:	ldr	w11, [x1, #12]
  410d94:	ubfx	x0, x0, #3, #32
  410d98:	ldr	w1, [x1, #4]
  410d9c:	mul	x1, x1, x0
  410da0:	lsr	x1, x1, #32
  410da4:	sub	w2, w3, w1
  410da8:	add	w1, w1, w2, lsr #1
  410dac:	lsr	w1, w1, w11
  410db0:	msub	w1, w1, w10, w3
  410db4:	ldr	x4, [x19]
  410db8:	ubfiz	x2, x1, #1, #32
  410dbc:	add	x2, x2, w1, uxtw
  410dc0:	add	x7, x4, x2, lsl #3
  410dc4:	ldr	x2, [x4, x2, lsl #3]
  410dc8:	cbz	x2, 410d54 <ferror@plt+0xe484>
  410dcc:	ldr	x5, [x19, #8]
  410dd0:	ubfiz	x8, x8, #4, #32
  410dd4:	add	x8, x9, x8
  410dd8:	ldr	w2, [x8, #8]
  410ddc:	mul	x0, x2, x0
  410de0:	lsr	x0, x0, #32
  410de4:	add	w2, w3, #0x1
  410de8:	sub	w3, w3, w0
  410dec:	add	w3, w0, w3, lsr #1
  410df0:	lsr	w3, w3, w11
  410df4:	sub	w10, w10, #0x2
  410df8:	msub	w3, w3, w10, w2
  410dfc:	add	w1, w1, w3
  410e00:	sub	w0, w1, w5
  410e04:	cmp	x5, w1, uxtw
  410e08:	csel	w1, w0, w1, ls  // ls = plast
  410e0c:	ubfiz	x2, x1, #1, #32
  410e10:	add	x2, x2, w1, uxtw
  410e14:	add	x7, x4, x2, lsl #3
  410e18:	ldr	x0, [x4, x2, lsl #3]
  410e1c:	cbnz	x0, 410dfc <ferror@plt+0xe52c>
  410e20:	b	410d54 <ferror@plt+0xe484>
  410e24:	ldrb	w0, [x19, #44]
  410e28:	cbnz	w0, 410e48 <ferror@plt+0xe578>
  410e2c:	mov	x0, x21
  410e30:	bl	402690 <free@plt>
  410e34:	ldp	x19, x20, [sp, #16]
  410e38:	ldp	x21, x22, [sp, #32]
  410e3c:	ldr	x23, [sp, #48]
  410e40:	ldp	x29, x30, [sp], #64
  410e44:	ret
  410e48:	mov	x0, x21
  410e4c:	bl	40412c <ferror@plt+0x185c>
  410e50:	b	410e34 <ferror@plt+0xe564>
  410e54:	stp	x29, x30, [sp, #-48]!
  410e58:	mov	x29, sp
  410e5c:	stp	x19, x20, [sp, #16]
  410e60:	stp	x21, x22, [sp, #32]
  410e64:	mov	x19, x0
  410e68:	mov	x20, x1
  410e6c:	mov	w22, w2
  410e70:	mov	w21, w3
  410e74:	cmp	w3, #0x1
  410e78:	b.eq	410f34 <ferror@plt+0xe664>  // b.none
  410e7c:	ldr	w0, [x19, #32]
  410e80:	add	w0, w0, #0x1
  410e84:	str	w0, [x19, #32]
  410e88:	ldr	w2, [x19, #40]
  410e8c:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  410e90:	add	x0, x0, #0x2b0
  410e94:	ubfiz	x3, x2, #4, #32
  410e98:	add	x1, x0, x3
  410e9c:	ldr	w8, [x0, x3]
  410ea0:	ldr	w9, [x1, #12]
  410ea4:	mov	w5, w22
  410ea8:	ldr	w0, [x1, #4]
  410eac:	mul	x0, x0, x5
  410eb0:	lsr	x0, x0, #32
  410eb4:	sub	w4, w22, w0
  410eb8:	add	w4, w0, w4, lsr #1
  410ebc:	lsr	w4, w4, w9
  410ec0:	msub	w4, w4, w8, w22
  410ec4:	ldr	x7, [x19]
  410ec8:	ubfiz	x0, x4, #1, #32
  410ecc:	add	x0, x0, w4, uxtw
  410ed0:	lsl	x0, x0, #3
  410ed4:	add	x6, x7, x0
  410ed8:	ldr	x0, [x7, x0]
  410edc:	cbz	x0, 410fe0 <ferror@plt+0xe710>
  410ee0:	cmp	x0, #0x1
  410ee4:	b.eq	410ef8 <ferror@plt+0xe628>  // b.none
  410ee8:	ldr	x1, [x20]
  410eec:	cmp	x0, x1
  410ef0:	b.eq	410fd0 <ferror@plt+0xe700>  // b.none
  410ef4:	mov	x6, #0x0                   	// #0
  410ef8:	ubfiz	x3, x2, #4, #32
  410efc:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  410f00:	add	x2, x2, #0x2b0
  410f04:	add	x2, x2, x3
  410f08:	ldr	w0, [x2, #8]
  410f0c:	mul	x0, x0, x5
  410f10:	lsr	x0, x0, #32
  410f14:	ldr	x5, [x19, #8]
  410f18:	add	w2, w22, #0x1
  410f1c:	sub	w1, w22, w0
  410f20:	add	w1, w0, w1, lsr #1
  410f24:	lsr	w1, w1, w9
  410f28:	sub	w8, w8, #0x2
  410f2c:	msub	w1, w1, w8, w2
  410f30:	b	410f5c <ferror@plt+0xe68c>
  410f34:	ldr	x0, [x0, #8]
  410f38:	add	x0, x0, x0, lsl #1
  410f3c:	ldr	x1, [x19, #16]
  410f40:	cmp	x0, x1, lsl #2
  410f44:	b.hi	410e7c <ferror@plt+0xe5ac>  // b.pmore
  410f48:	mov	x0, x19
  410f4c:	bl	410c48 <ferror@plt+0xe378>
  410f50:	b	410e7c <ferror@plt+0xe5ac>
  410f54:	cmp	x6, #0x0
  410f58:	csel	x6, x6, x0, ne  // ne = any
  410f5c:	ldr	w2, [x19, #36]
  410f60:	add	w2, w2, #0x1
  410f64:	str	w2, [x19, #36]
  410f68:	add	w4, w4, w1
  410f6c:	sub	w0, w4, w5
  410f70:	cmp	x5, w4, uxtw
  410f74:	csel	w4, w0, w4, ls  // ls = plast
  410f78:	ubfiz	x2, x4, #1, #32
  410f7c:	add	x2, x2, w4, uxtw
  410f80:	add	x0, x7, x2, lsl #3
  410f84:	ldr	x2, [x7, x2, lsl #3]
  410f88:	cbz	x2, 410fb0 <ferror@plt+0xe6e0>
  410f8c:	cmp	x2, #0x1
  410f90:	b.eq	410f54 <ferror@plt+0xe684>  // b.none
  410f94:	ldr	x3, [x20]
  410f98:	cmp	x2, x3
  410f9c:	b.ne	410f5c <ferror@plt+0xe68c>  // b.any
  410fa0:	ldp	x19, x20, [sp, #16]
  410fa4:	ldp	x21, x22, [sp, #32]
  410fa8:	ldp	x29, x30, [sp], #48
  410fac:	ret
  410fb0:	cbz	w21, 410fd8 <ferror@plt+0xe708>
  410fb4:	cbz	x6, 410fe4 <ferror@plt+0xe714>
  410fb8:	ldr	x0, [x19, #24]
  410fbc:	sub	x0, x0, #0x1
  410fc0:	str	x0, [x19, #24]
  410fc4:	str	xzr, [x6]
  410fc8:	mov	x0, x6
  410fcc:	b	410fa0 <ferror@plt+0xe6d0>
  410fd0:	mov	x0, x6
  410fd4:	b	410fa0 <ferror@plt+0xe6d0>
  410fd8:	mov	x0, x2
  410fdc:	b	410fa0 <ferror@plt+0xe6d0>
  410fe0:	cbz	w21, 410fa0 <ferror@plt+0xe6d0>
  410fe4:	ldr	x0, [x19, #16]
  410fe8:	add	x0, x0, #0x1
  410fec:	str	x0, [x19, #16]
  410ff0:	ubfiz	x0, x4, #1, #32
  410ff4:	add	x0, x0, w4, uxtw
  410ff8:	add	x0, x7, x0, lsl #3
  410ffc:	b	410fa0 <ferror@plt+0xe6d0>
  411000:	ldr	x1, [x0]
  411004:	ldr	x3, [x0, #8]
  411008:	cmp	x1, x3
  41100c:	b.cs	41102c <ferror@plt+0xe75c>  // b.hs, b.nlast
  411010:	ldr	x2, [x1]
  411014:	cmp	x2, #0x1
  411018:	b.hi	411034 <ferror@plt+0xe764>  // b.pmore
  41101c:	add	x1, x1, #0x10
  411020:	str	x1, [x0]
  411024:	cmp	x1, x3
  411028:	b.cc	411010 <ferror@plt+0xe740>  // b.lo, b.ul, b.last
  41102c:	str	xzr, [x0]
  411030:	str	xzr, [x0, #8]
  411034:	ret
  411038:	stp	x29, x30, [sp, #-64]!
  41103c:	mov	x29, sp
  411040:	stp	x19, x20, [sp, #16]
  411044:	str	x21, [sp, #32]
  411048:	mov	x19, x0
  41104c:	ldr	x0, [x0, #40]
  411050:	ldr	x1, [x0]
  411054:	ldr	x0, [x0, #8]
  411058:	add	x0, x1, x0, lsl #4
  41105c:	str	x1, [sp, #48]
  411060:	str	x0, [sp, #56]
  411064:	add	x0, sp, #0x30
  411068:	bl	411000 <ferror@plt+0xe730>
  41106c:	mov	x21, #0x20                  	// #32
  411070:	mov	x20, #0x38                  	// #56
  411074:	b	41117c <ferror@plt+0xe8ac>
  411078:	ldr	x0, [sp, #56]
  41107c:	cbnz	x0, 411184 <ferror@plt+0xe8b4>
  411080:	ldr	x20, [x19, #40]
  411084:	cbz	x20, 4110bc <ferror@plt+0xe7ec>
  411088:	ldr	x0, [x20, #8]
  41108c:	sub	x1, x0, #0x1
  411090:	cbz	x0, 4110a0 <ferror@plt+0xe7d0>
  411094:	sub	x1, x1, #0x1
  411098:	cmp	x0, x1
  41109c:	b.hi	411094 <ferror@plt+0xe7c4>  // b.pmore
  4110a0:	ldrb	w0, [x20, #44]
  4110a4:	cbnz	w0, 411190 <ferror@plt+0xe8c0>
  4110a8:	ldr	x0, [x20]
  4110ac:	bl	402690 <free@plt>
  4110b0:	mov	x1, #0x30                  	// #48
  4110b4:	mov	x0, x20
  4110b8:	bl	447628 <_obstack_memory_used@@Base+0x6bc>
  4110bc:	ldr	x20, [x19, #48]
  4110c0:	cbz	x20, 4110fc <ferror@plt+0xe82c>
  4110c4:	ldr	x0, [x20, #8]
  4110c8:	sub	x1, x0, #0x1
  4110cc:	cbz	x0, 4110e0 <ferror@plt+0xe810>
  4110d0:	sub	x1, x1, #0x1
  4110d4:	ldr	x2, [x20, #8]
  4110d8:	cmp	x2, x1
  4110dc:	b.hi	4110d0 <ferror@plt+0xe800>  // b.pmore
  4110e0:	ldrb	w0, [x20, #44]
  4110e4:	cbnz	w0, 41119c <ferror@plt+0xe8cc>
  4110e8:	ldr	x0, [x20]
  4110ec:	bl	402690 <free@plt>
  4110f0:	mov	x1, #0x30                  	// #48
  4110f4:	mov	x0, x20
  4110f8:	bl	447628 <_obstack_memory_used@@Base+0x6bc>
  4110fc:	ldr	x19, [x19]
  411100:	cbz	x19, 41113c <ferror@plt+0xe86c>
  411104:	ldr	x1, [x19, #8]
  411108:	sub	x0, x1, #0x1
  41110c:	cbz	x1, 411120 <ferror@plt+0xe850>
  411110:	sub	x0, x0, #0x1
  411114:	ldr	x1, [x19, #8]
  411118:	cmp	x1, x0
  41111c:	b.hi	411110 <ferror@plt+0xe840>  // b.pmore
  411120:	ldrb	w0, [x19, #44]
  411124:	cbnz	w0, 4111a8 <ferror@plt+0xe8d8>
  411128:	ldr	x0, [x19]
  41112c:	bl	402690 <free@plt>
  411130:	mov	x1, #0x30                  	// #48
  411134:	mov	x0, x19
  411138:	bl	447628 <_obstack_memory_used@@Base+0x6bc>
  41113c:	ldp	x19, x20, [sp, #16]
  411140:	ldr	x21, [sp, #32]
  411144:	ldp	x29, x30, [sp], #64
  411148:	ret
  41114c:	mov	x1, x21
  411150:	bl	447628 <_obstack_memory_used@@Base+0x6bc>
  411154:	ldr	x1, [sp, #48]
  411158:	ldr	x0, [x1, #8]
  41115c:	cbz	x0, 411168 <ferror@plt+0xe898>
  411160:	mov	x1, x20
  411164:	bl	447628 <_obstack_memory_used@@Base+0x6bc>
  411168:	ldr	x1, [sp, #48]
  41116c:	add	x1, x1, #0x10
  411170:	str	x1, [sp, #48]
  411174:	add	x0, sp, #0x30
  411178:	bl	411000 <ferror@plt+0xe730>
  41117c:	ldr	x1, [sp, #48]
  411180:	cbz	x1, 411078 <ferror@plt+0xe7a8>
  411184:	ldr	x0, [x1]
  411188:	cbnz	x0, 41114c <ferror@plt+0xe87c>
  41118c:	b	411154 <ferror@plt+0xe884>
  411190:	ldr	x0, [x20]
  411194:	bl	40412c <ferror@plt+0x185c>
  411198:	b	4110b0 <ferror@plt+0xe7e0>
  41119c:	ldr	x0, [x20]
  4111a0:	bl	40412c <ferror@plt+0x185c>
  4111a4:	b	4110f0 <ferror@plt+0xe820>
  4111a8:	ldr	x0, [x19]
  4111ac:	bl	40412c <ferror@plt+0x185c>
  4111b0:	b	411130 <ferror@plt+0xe860>
  4111b4:	stp	x29, x30, [sp, #-32]!
  4111b8:	mov	x29, sp
  4111bc:	stp	x19, x20, [sp, #16]
  4111c0:	mov	x19, x0
  4111c4:	ldr	x0, [x0, #16]
  4111c8:	bl	4025b0 <feof@plt>
  4111cc:	mov	w1, #0x0                   	// #0
  4111d0:	cbz	w0, 4111e4 <ferror@plt+0xe914>
  4111d4:	mov	w0, w1
  4111d8:	ldp	x19, x20, [sp, #16]
  4111dc:	ldp	x29, x30, [sp], #32
  4111e0:	ret
  4111e4:	ldr	x0, [x19, #16]
  4111e8:	bl	4028d0 <ferror@plt>
  4111ec:	mov	w1, #0x0                   	// #0
  4111f0:	cbnz	w0, 4111d4 <ferror@plt+0xe904>
  4111f4:	ldr	x0, [x19, #32]
  4111f8:	ldr	x1, [x19, #40]
  4111fc:	cmp	x1, x0
  411200:	b.ne	411228 <ferror@plt+0xe958>  // b.any
  411204:	lsl	x20, x0, #1
  411208:	cmp	x0, #0x0
  41120c:	mov	x0, #0x1000                	// #4096
  411210:	csel	x20, x20, x0, ne  // ne = any
  411214:	mov	x1, x20
  411218:	ldr	x0, [x19, #24]
  41121c:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  411220:	str	x0, [x19, #24]
  411224:	str	x20, [x19, #32]
  411228:	ldr	x0, [x19, #40]
  41122c:	ldr	x2, [x19, #32]
  411230:	ldr	x4, [x19, #24]
  411234:	ldr	x3, [x19, #16]
  411238:	sub	x2, x2, x0
  41123c:	mov	x1, #0x1                   	// #1
  411240:	add	x0, x4, x0
  411244:	bl	402660 <fread@plt>
  411248:	mov	x20, x0
  41124c:	ldr	x0, [x19, #16]
  411250:	bl	4028d0 <ferror@plt>
  411254:	mov	w1, #0x0                   	// #0
  411258:	cbnz	w0, 4111d4 <ferror@plt+0xe904>
  41125c:	ldr	x0, [x19, #40]
  411260:	add	x0, x0, x20
  411264:	str	x0, [x19, #40]
  411268:	cmp	x20, #0x0
  41126c:	cset	w1, ne  // ne = any
  411270:	b	4111d4 <ferror@plt+0xe904>
  411274:	stp	x29, x30, [sp, #-112]!
  411278:	mov	x29, sp
  41127c:	stp	x19, x20, [sp, #16]
  411280:	stp	x21, x22, [sp, #32]
  411284:	stp	x23, x24, [sp, #48]
  411288:	mov	x21, x8
  41128c:	mov	w19, w0
  411290:	and	w23, w1, #0xff
  411294:	mov	w20, w2
  411298:	mov	x22, #0x0                   	// #0
  41129c:	tbnz	w0, #31, 411310 <ferror@plt+0xea40>
  4112a0:	stp	xzr, xzr, [sp, #80]
  4112a4:	stp	xzr, xzr, [sp, #96]
  4112a8:	cmp	w19, #0x1
  4112ac:	b.ls	4113f8 <ferror@plt+0xeb28>  // b.plast
  4112b0:	mov	w2, #0x0                   	// #0
  4112b4:	cbz	w23, 411338 <ferror@plt+0xea68>
  4112b8:	add	x3, sp, #0x48
  4112bc:	mov	w1, w19
  4112c0:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  4112c4:	ldr	x0, [x0, #1896]
  4112c8:	bl	4292dc <ferror@plt+0x26a0c>
  4112cc:	mov	w19, w0
  4112d0:	cmp	w20, #0x1
  4112d4:	b.eq	4113bc <ferror@plt+0xeaec>  // b.none
  4112d8:	cmp	w20, #0x2
  4112dc:	b.ne	411358 <ferror@plt+0xea88>  // b.any
  4112e0:	mov	w1, w0
  4112e4:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  4112e8:	ldr	x0, [x0, #1896]
  4112ec:	bl	428f64 <ferror@plt+0x26694>
  4112f0:	lsr	x0, x0, #32
  4112f4:	cmp	w19, w0
  4112f8:	b.eq	41135c <ferror@plt+0xea8c>  // b.none
  4112fc:	mov	x8, x21
  411300:	mov	w2, #0x2                   	// #2
  411304:	mov	w1, w23
  411308:	bl	411274 <ferror@plt+0xe9a4>
  41130c:	b	411390 <ferror@plt+0xeac0>
  411310:	adrp	x24, 488000 <_obstack_memory_used@@Base+0x41094>
  411314:	mov	w1, w0
  411318:	ldr	x0, [x24, #1896]
  41131c:	bl	428320 <ferror@plt+0x25a50>
  411320:	mov	x22, x0
  411324:	mov	w1, w19
  411328:	ldr	x0, [x24, #1896]
  41132c:	bl	42833c <ferror@plt+0x25a6c>
  411330:	mov	w19, w0
  411334:	b	4112a0 <ferror@plt+0xe9d0>
  411338:	mov	x2, #0x0                   	// #0
  41133c:	mov	w1, w19
  411340:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  411344:	ldr	x0, [x0, #1896]
  411348:	bl	4298d0 <ferror@plt+0x27000>
  41134c:	mov	w19, w0
  411350:	mov	w2, #0x1                   	// #1
  411354:	b	4112b8 <ferror@plt+0xe9e8>
  411358:	cbnz	w20, 4113a4 <ferror@plt+0xead4>
  41135c:	add	x8, sp, #0x50
  411360:	mov	w2, w19
  411364:	ldr	x1, [sp, #72]
  411368:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  41136c:	ldr	x0, [x0, #1896]
  411370:	bl	4299e0 <ferror@plt+0x27110>
  411374:	str	x22, [sp, #96]
  411378:	cmp	w19, #0x1
  41137c:	b.ls	4113fc <ferror@plt+0xeb2c>  // b.plast
  411380:	ldp	x0, x1, [sp, #80]
  411384:	stp	x0, x1, [x21]
  411388:	ldp	x0, x1, [sp, #96]
  41138c:	stp	x0, x1, [x21, #16]
  411390:	ldp	x19, x20, [sp, #16]
  411394:	ldp	x21, x22, [sp, #32]
  411398:	ldp	x23, x24, [sp, #48]
  41139c:	ldp	x29, x30, [sp], #112
  4113a0:	ret
  4113a4:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  4113a8:	add	x2, x2, #0x2b8
  4113ac:	mov	w1, #0xc7                  	// #199
  4113b0:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  4113b4:	add	x0, x0, #0x2d0
  4113b8:	bl	4062a0 <ferror@plt+0x39d0>
  4113bc:	mov	w1, w0
  4113c0:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  4113c4:	ldr	x0, [x0, #1896]
  4113c8:	bl	428f64 <ferror@plt+0x26694>
  4113cc:	cmp	w19, w0
  4113d0:	b.eq	41135c <ferror@plt+0xea8c>  // b.none
  4113d4:	mov	x8, x21
  4113d8:	mov	w2, #0x1                   	// #1
  4113dc:	mov	w1, w23
  4113e0:	bl	411274 <ferror@plt+0xe9a4>
  4113e4:	b	411390 <ferror@plt+0xeac0>
  4113e8:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  4113ec:	add	x0, x0, #0x598
  4113f0:	bl	402880 <gettext@plt>
  4113f4:	b	411404 <ferror@plt+0xeb34>
  4113f8:	str	x22, [sp, #96]
  4113fc:	mov	x0, #0x0                   	// #0
  411400:	cbnz	w19, 4113e8 <ferror@plt+0xeb18>
  411404:	str	x0, [sp, #80]
  411408:	b	411380 <ferror@plt+0xeab0>
  41140c:	stp	x29, x30, [sp, #-48]!
  411410:	mov	x29, sp
  411414:	stp	x19, x20, [sp, #16]
  411418:	str	x21, [sp, #32]
  41141c:	mov	x19, x0
  411420:	mov	w20, w2
  411424:	mov	w21, w3
  411428:	mov	x2, x1
  41142c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x10094>
  411430:	add	x1, x1, #0xea0
  411434:	bl	402890 <fprintf@plt>
  411438:	mov	w3, w21
  41143c:	mov	w2, w20
  411440:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  411444:	add	x1, x1, #0x2e8
  411448:	mov	x0, x19
  41144c:	bl	402890 <fprintf@plt>
  411450:	mov	x1, x19
  411454:	mov	w0, #0xa                   	// #10
  411458:	bl	402380 <fputc@plt>
  41145c:	ldp	x19, x20, [sp, #16]
  411460:	ldr	x21, [sp, #32]
  411464:	ldp	x29, x30, [sp], #48
  411468:	ret
  41146c:	stp	x29, x30, [sp, #-80]!
  411470:	mov	x29, sp
  411474:	stp	x19, x20, [sp, #16]
  411478:	stp	x21, x22, [sp, #32]
  41147c:	stp	x23, x24, [sp, #48]
  411480:	mov	x20, x0
  411484:	mov	x22, x2
  411488:	mov	w23, w3
  41148c:	mov	w21, w4
  411490:	mov	w24, w5
  411494:	mov	w3, #0x20                  	// #32
  411498:	mov	w2, w1
  41149c:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  4114a0:	add	x1, x1, #0x310
  4114a4:	bl	402890 <fprintf@plt>
  4114a8:	mov	x1, x20
  4114ac:	mov	w0, #0x7c                  	// #124
  4114b0:	bl	402380 <fputc@plt>
  4114b4:	cmp	w21, #0x1
  4114b8:	b.le	41150c <ferror@plt+0xec3c>
  4114bc:	str	x25, [sp, #64]
  4114c0:	mov	w19, #0x1                   	// #1
  4114c4:	mov	w25, #0x6667                	// #26215
  4114c8:	movk	w25, #0x6666, lsl #16
  4114cc:	ldrb	w0, [x22, #7]
  4114d0:	lsl	w0, w19, w0
  4114d4:	add	w0, w0, w23
  4114d8:	udiv	w0, w0, w24
  4114dc:	smull	x1, w0, w25
  4114e0:	asr	x1, x1, #34
  4114e4:	sub	w1, w1, w0, asr #31
  4114e8:	add	w1, w1, w1, lsl #2
  4114ec:	sub	w0, w0, w1, lsl #1
  4114f0:	mov	x1, x20
  4114f4:	add	w0, w0, #0x30
  4114f8:	bl	402380 <fputc@plt>
  4114fc:	add	w19, w19, #0x1
  411500:	cmp	w21, w19
  411504:	b.ne	4114cc <ferror@plt+0xebfc>  // b.any
  411508:	ldr	x25, [sp, #64]
  41150c:	mov	x1, x20
  411510:	mov	w0, #0xa                   	// #10
  411514:	bl	402380 <fputc@plt>
  411518:	ldp	x19, x20, [sp, #16]
  41151c:	ldp	x21, x22, [sp, #32]
  411520:	ldp	x23, x24, [sp, #48]
  411524:	ldp	x29, x30, [sp], #80
  411528:	ret
  41152c:	stp	x29, x30, [sp, #-112]!
  411530:	mov	x29, sp
  411534:	stp	x19, x20, [sp, #16]
  411538:	stp	x21, x22, [sp, #32]
  41153c:	stp	x23, x24, [sp, #48]
  411540:	mov	x19, x0
  411544:	mov	x24, x1
  411548:	mov	x21, x2
  41154c:	ldr	x0, [x0, #40]
  411550:	cbz	x0, 411630 <ferror@plt+0xed60>
  411554:	ldr	x1, [x19, #32]
  411558:	cmp	x0, x1
  41155c:	b.eq	411630 <ferror@plt+0xed60>  // b.none
  411560:	sub	x0, x0, #0x1
  411564:	ldr	x1, [x19, #48]
  411568:	cmp	x1, x0
  41156c:	b.cs	411630 <ferror@plt+0xed60>  // b.hs, b.nlast
  411570:	ldr	x0, [x19, #48]
  411574:	ldr	x2, [x19, #40]
  411578:	subs	x2, x2, x0
  41157c:	b.eq	4119f0 <ferror@plt+0xf120>  // b.none
  411580:	ldr	x22, [x19, #24]
  411584:	add	x22, x22, x0
  411588:	mov	w1, #0xa                   	// #10
  41158c:	mov	x0, x22
  411590:	bl	402760 <memchr@plt>
  411594:	mov	x20, x0
  411598:	cbz	x0, 41163c <ferror@plt+0xed6c>
  41159c:	add	x23, x0, #0x1
  4115a0:	strb	wzr, [x19, #72]
  4115a4:	ldr	x0, [x19, #16]
  4115a8:	bl	4028d0 <ferror@plt>
  4115ac:	mov	w1, #0x0                   	// #0
  4115b0:	cbnz	w0, 411618 <ferror@plt+0xed48>
  4115b4:	stp	x25, x26, [sp, #64]
  4115b8:	sub	x25, x20, x22
  4115bc:	ldr	x1, [x19, #48]
  4115c0:	ldr	x0, [x19, #40]
  4115c4:	cmp	x1, x0
  4115c8:	b.cs	4115d0 <ferror@plt+0xed00>  // b.hs, b.nlast
  4115cc:	str	x22, [x24]
  4115d0:	ldr	x22, [x19, #56]
  4115d4:	add	x22, x22, #0x1
  4115d8:	str	x22, [x19, #56]
  4115dc:	ldr	x0, [x19, #64]
  4115e0:	cmp	x22, x0
  4115e4:	b.hi	4115fc <ferror@plt+0xed2c>  // b.pmore
  4115e8:	ldr	x24, [x19, #80]
  4115ec:	cbz	x24, 4116fc <ferror@plt+0xee2c>
  4115f0:	ldr	w1, [x24, #4]
  4115f4:	cmp	w1, #0x63
  4115f8:	b.ls	411a04 <ferror@plt+0xf134>  // b.plast
  4115fc:	cbz	x23, 4119e8 <ferror@plt+0xf118>
  411600:	ldr	x0, [x19, #24]
  411604:	sub	x23, x23, x0
  411608:	str	x23, [x19, #48]
  41160c:	str	x25, [x21]
  411610:	mov	w1, #0x1                   	// #1
  411614:	ldp	x25, x26, [sp, #64]
  411618:	mov	w0, w1
  41161c:	ldp	x19, x20, [sp, #16]
  411620:	ldp	x21, x22, [sp, #32]
  411624:	ldp	x23, x24, [sp, #48]
  411628:	ldp	x29, x30, [sp], #112
  41162c:	ret
  411630:	mov	x0, x19
  411634:	bl	4111b4 <ferror@plt+0xe8e4>
  411638:	b	411570 <ferror@plt+0xeca0>
  41163c:	mov	w23, #0xa                   	// #10
  411640:	b	411678 <ferror@plt+0xeda8>
  411644:	mov	x0, x19
  411648:	bl	4111b4 <ferror@plt+0xe8e4>
  41164c:	and	w0, w0, #0xff
  411650:	cbz	w0, 41169c <ferror@plt+0xedcc>
  411654:	ldr	x0, [x19, #48]
  411658:	ldr	x22, [x19, #24]
  41165c:	add	x22, x22, x0
  411660:	ldr	x2, [x19, #40]
  411664:	sub	x2, x2, x0
  411668:	mov	w1, w23
  41166c:	mov	x0, x22
  411670:	bl	402760 <memchr@plt>
  411674:	cbnz	x0, 4116d0 <ferror@plt+0xee00>
  411678:	ldr	x0, [x19, #40]
  41167c:	cbz	x0, 411644 <ferror@plt+0xed74>
  411680:	ldr	x1, [x19, #32]
  411684:	cmp	x0, x1
  411688:	b.eq	411644 <ferror@plt+0xed74>  // b.none
  41168c:	sub	x0, x0, #0x1
  411690:	ldr	x1, [x19, #48]
  411694:	cmp	x1, x0
  411698:	b.cs	411644 <ferror@plt+0xed74>  // b.hs, b.nlast
  41169c:	stp	x25, x26, [sp, #64]
  4116a0:	ldr	x23, [x19, #24]
  4116a4:	ldr	x25, [x19, #40]
  4116a8:	mov	w0, #0x1                   	// #1
  4116ac:	strb	w0, [x19, #72]
  4116b0:	ldr	x0, [x19, #16]
  4116b4:	bl	4028d0 <ferror@plt>
  4116b8:	cbnz	w0, 4119f8 <ferror@plt+0xf128>
  4116bc:	adds	x0, x23, x25
  4116c0:	b.eq	4116e0 <ferror@plt+0xee10>  // b.none
  4116c4:	mov	x23, x20
  4116c8:	mov	x20, x0
  4116cc:	b	4115b8 <ferror@plt+0xece8>
  4116d0:	add	x23, x0, #0x1
  4116d4:	strb	wzr, [x19, #72]
  4116d8:	mov	x20, x0
  4116dc:	b	4115a4 <ferror@plt+0xecd4>
  4116e0:	stp	x27, x28, [sp, #80]
  4116e4:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  4116e8:	add	x2, x2, #0x318
  4116ec:	mov	w1, #0x241                 	// #577
  4116f0:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  4116f4:	add	x0, x0, #0x2d0
  4116f8:	bl	4062a0 <ferror@plt+0x39d0>
  4116fc:	cmp	x0, #0x64
  411700:	b.hi	411810 <ferror@plt+0xef40>  // b.pmore
  411704:	cbz	x22, 4115fc <ferror@plt+0xed2c>
  411708:	stp	x27, x28, [sp, #80]
  41170c:	ldr	x27, [x19, #48]
  411710:	ldr	x0, [x19, #24]
  411714:	sub	x20, x20, x0
  411718:	str	wzr, [sp, #104]
  41171c:	mov	w28, #0x0                   	// #0
  411720:	mov	w1, #0x1                   	// #1
  411724:	ldr	x0, [x19, #80]
  411728:	cbz	x0, 411978 <ferror@plt+0xf0a8>
  41172c:	ldr	w2, [x0, #4]
  411730:	ldr	w0, [x0]
  411734:	add	w1, w1, w2
  411738:	and	w0, w0, #0x7fffffff
  41173c:	bl	40f5bc <ferror@plt+0xccec>
  411740:	mov	w26, w0
  411744:	ubfiz	x1, x26, #1, #32
  411748:	add	x1, x1, w0, uxtw
  41174c:	lsl	x1, x1, #3
  411750:	add	x1, x1, #0x8
  411754:	ldr	x0, [x19, #80]
  411758:	cbz	x0, 41199c <ferror@plt+0xf0cc>
  41175c:	ldr	w2, [x0, #4]
  411760:	str	w2, [sp, #108]
  411764:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  411768:	str	x0, [x19, #80]
  41176c:	ldr	w1, [x0]
  411770:	bfxil	w1, w26, #0, #31
  411774:	str	w1, [x0]
  411778:	ubfx	x1, x1, #24, #7
  41177c:	strb	w1, [x0, #3]
  411780:	ldr	w1, [sp, #108]
  411784:	str	w1, [x0, #4]
  411788:	ldr	w0, [sp, #104]
  41178c:	cbz	w0, 4117d8 <ferror@plt+0xef08>
  411790:	ldr	x6, [x19, #80]
  411794:	cbz	w28, 4117d0 <ferror@plt+0xef00>
  411798:	sub	w0, w28, #0x1
  41179c:	add	x0, x0, x0, lsl #1
  4117a0:	lsl	x3, x0, #3
  4117a4:	add	x3, x3, #0x20
  4117a8:	mov	x0, #0x8                   	// #8
  4117ac:	add	x1, x6, x0
  4117b0:	add	x2, x24, x0
  4117b4:	ldp	x4, x5, [x2]
  4117b8:	stp	x4, x5, [x1]
  4117bc:	ldr	x2, [x2, #16]
  4117c0:	str	x2, [x1, #16]
  4117c4:	add	x0, x0, #0x18
  4117c8:	cmp	x0, x3
  4117cc:	b.ne	4117ac <ferror@plt+0xeedc>  // b.any
  4117d0:	ldr	x0, [x19, #80]
  4117d4:	str	w28, [x0, #4]
  4117d8:	ldr	x1, [x19, #80]
  4117dc:	ldr	w0, [x1, #4]
  4117e0:	add	w2, w0, #0x1
  4117e4:	str	w2, [x1, #4]
  4117e8:	ubfiz	x2, x0, #1, #32
  4117ec:	add	x0, x2, w0, uxtw
  4117f0:	lsl	x0, x0, #3
  4117f4:	add	x0, x0, #0x8
  4117f8:	add	x2, x1, x0
  4117fc:	str	x22, [x1, x0]
  411800:	str	x27, [x2, #8]
  411804:	str	x20, [x2, #16]
  411808:	ldp	x27, x28, [sp, #80]
  41180c:	b	4115fc <ferror@plt+0xed2c>
  411810:	stp	x27, x28, [sp, #80]
  411814:	ldr	x27, [x19, #48]
  411818:	ldr	x0, [x19, #24]
  41181c:	sub	x20, x20, x0
  411820:	str	wzr, [sp, #104]
  411824:	mov	w28, #0x0                   	// #0
  411828:	mov	w1, #0x1                   	// #1
  41182c:	ldr	x0, [x19, #80]
  411830:	cbz	x0, 4119bc <ferror@plt+0xf0ec>
  411834:	ldr	w2, [x0, #4]
  411838:	ldr	w0, [x0]
  41183c:	add	w1, w1, w2
  411840:	and	w0, w0, #0x7fffffff
  411844:	bl	40f5bc <ferror@plt+0xccec>
  411848:	mov	w26, w0
  41184c:	ubfiz	x1, x26, #1, #32
  411850:	add	x1, x1, w0, uxtw
  411854:	lsl	x1, x1, #3
  411858:	add	x1, x1, #0x8
  41185c:	ldr	x0, [x19, #80]
  411860:	cbz	x0, 4119e0 <ferror@plt+0xf110>
  411864:	ldr	w2, [x0, #4]
  411868:	str	w2, [sp, #108]
  41186c:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  411870:	str	x0, [x19, #80]
  411874:	ldr	w1, [x0]
  411878:	bfxil	w1, w26, #0, #31
  41187c:	str	w1, [x0]
  411880:	ubfx	x1, x1, #24, #7
  411884:	strb	w1, [x0, #3]
  411888:	ldr	w1, [sp, #108]
  41188c:	str	w1, [x0, #4]
  411890:	ldr	w0, [sp, #104]
  411894:	cbz	w0, 4118e0 <ferror@plt+0xf010>
  411898:	ldr	x6, [x19, #80]
  41189c:	cbz	w28, 4118d8 <ferror@plt+0xf008>
  4118a0:	sub	w0, w28, #0x1
  4118a4:	add	x0, x0, x0, lsl #1
  4118a8:	lsl	x3, x0, #3
  4118ac:	add	x3, x3, #0x20
  4118b0:	mov	x0, #0x8                   	// #8
  4118b4:	add	x1, x6, x0
  4118b8:	add	x2, x24, x0
  4118bc:	ldp	x4, x5, [x2]
  4118c0:	stp	x4, x5, [x1]
  4118c4:	ldr	x2, [x2, #16]
  4118c8:	str	x2, [x1, #16]
  4118cc:	add	x0, x0, #0x18
  4118d0:	cmp	x0, x3
  4118d4:	b.ne	4118b4 <ferror@plt+0xefe4>  // b.any
  4118d8:	ldr	x0, [x19, #80]
  4118dc:	str	w28, [x0, #4]
  4118e0:	ldr	x1, [x19, #80]
  4118e4:	ldr	w0, [x1, #4]
  4118e8:	add	w2, w0, #0x1
  4118ec:	str	w2, [x1, #4]
  4118f0:	ubfiz	x2, x0, #1, #32
  4118f4:	add	x0, x2, w0, uxtw
  4118f8:	lsl	x0, x0, #3
  4118fc:	add	x0, x0, #0x8
  411900:	add	x2, x1, x0
  411904:	str	x22, [x1, x0]
  411908:	str	x27, [x2, #8]
  41190c:	str	x20, [x2, #16]
  411910:	ldp	x27, x28, [sp, #80]
  411914:	b	4115fc <ferror@plt+0xed2c>
  411918:	ldr	w0, [x24, #4]
  41191c:	cmp	x22, x0
  411920:	b.ls	4115fc <ferror@plt+0xed2c>  // b.plast
  411924:	stp	x27, x28, [sp, #80]
  411928:	ldr	x27, [x19, #48]
  41192c:	ldr	x0, [x19, #24]
  411930:	sub	x20, x20, x0
  411934:	ldr	w0, [x24]
  411938:	ubfx	x0, x0, #0, #31
  41193c:	ldr	w1, [x24, #4]
  411940:	cmp	w0, w1
  411944:	b.ne	4117d8 <ferror@plt+0xef08>  // b.any
  411948:	ldrsb	w0, [x24, #3]
  41194c:	tbnz	w0, #31, 411960 <ferror@plt+0xf090>
  411950:	str	wzr, [sp, #104]
  411954:	mov	w28, #0x0                   	// #0
  411958:	mov	w1, #0x1                   	// #1
  41195c:	b	411724 <ferror@plt+0xee54>
  411960:	str	xzr, [x19, #80]
  411964:	ldr	w28, [x24, #4]
  411968:	add	w1, w28, #0x1
  41196c:	mov	w0, #0x1                   	// #1
  411970:	str	w0, [sp, #104]
  411974:	b	411724 <ferror@plt+0xee54>
  411978:	mov	w2, #0x4                   	// #4
  41197c:	cmp	w1, w2
  411980:	csel	w26, w1, w2, cs  // cs = hs, nlast
  411984:	csel	w1, w1, w2, cs  // cs = hs, nlast
  411988:	add	x1, x1, x1, lsl #1
  41198c:	lsl	x1, x1, #3
  411990:	add	x1, x1, #0x8
  411994:	str	wzr, [sp, #108]
  411998:	b	411764 <ferror@plt+0xee94>
  41199c:	str	wzr, [sp, #108]
  4119a0:	b	411764 <ferror@plt+0xee94>
  4119a4:	str	xzr, [x19, #80]
  4119a8:	ldr	w28, [x24, #4]
  4119ac:	add	w1, w28, #0x1
  4119b0:	mov	w0, #0x1                   	// #1
  4119b4:	str	w0, [sp, #104]
  4119b8:	b	41182c <ferror@plt+0xef5c>
  4119bc:	mov	w2, #0x4                   	// #4
  4119c0:	cmp	w1, w2
  4119c4:	csel	w26, w1, w2, cs  // cs = hs, nlast
  4119c8:	csel	w1, w1, w2, cs  // cs = hs, nlast
  4119cc:	add	x1, x1, x1, lsl #1
  4119d0:	lsl	x1, x1, #3
  4119d4:	add	x1, x1, #0x8
  4119d8:	str	wzr, [sp, #108]
  4119dc:	b	41186c <ferror@plt+0xef9c>
  4119e0:	str	wzr, [sp, #108]
  4119e4:	b	41186c <ferror@plt+0xef9c>
  4119e8:	ldr	x23, [x19, #40]
  4119ec:	b	411608 <ferror@plt+0xed38>
  4119f0:	mov	w1, #0x0                   	// #0
  4119f4:	b	411618 <ferror@plt+0xed48>
  4119f8:	mov	w1, #0x0                   	// #0
  4119fc:	ldp	x25, x26, [sp, #64]
  411a00:	b	411618 <ferror@plt+0xed48>
  411a04:	cmp	x0, #0x64
  411a08:	b.ls	411918 <ferror@plt+0xf048>  // b.plast
  411a0c:	ldr	w2, [x24, #4]
  411a10:	cbz	w2, 411a2c <ferror@plt+0xf15c>
  411a14:	add	x1, x22, x22, lsl #1
  411a18:	add	x1, x22, x1, lsl #3
  411a1c:	lsl	x1, x1, #2
  411a20:	udiv	x0, x1, x0
  411a24:	cmp	x0, w2, uxtw
  411a28:	b.cc	4115fc <ferror@plt+0xed2c>  // b.lo, b.ul, b.last
  411a2c:	stp	x27, x28, [sp, #80]
  411a30:	ldr	x27, [x19, #48]
  411a34:	ldr	x0, [x19, #24]
  411a38:	sub	x20, x20, x0
  411a3c:	ldr	w0, [x24]
  411a40:	ubfx	x0, x0, #0, #31
  411a44:	cmp	w2, w0
  411a48:	b.ne	4118e0 <ferror@plt+0xf010>  // b.any
  411a4c:	ldrsb	w0, [x24, #3]
  411a50:	tbnz	w0, #31, 4119a4 <ferror@plt+0xf0d4>
  411a54:	str	wzr, [sp, #104]
  411a58:	mov	w28, #0x0                   	// #0
  411a5c:	mov	w1, #0x1                   	// #1
  411a60:	b	41182c <ferror@plt+0xef5c>
  411a64:	str	wzr, [x0]
  411a68:	str	xzr, [x0, #8]
  411a6c:	str	xzr, [x0, #16]
  411a70:	str	xzr, [x0, #24]
  411a74:	str	xzr, [x0, #32]
  411a78:	str	xzr, [x0, #40]
  411a7c:	str	xzr, [x0, #48]
  411a80:	str	xzr, [x0, #56]
  411a84:	str	xzr, [x0, #64]
  411a88:	mov	w1, #0x1                   	// #1
  411a8c:	strb	w1, [x0, #72]
  411a90:	str	xzr, [x0, #80]
  411a94:	ret
  411a98:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  411a9c:	ldr	x0, [x0, #1904]
  411aa0:	cbz	x0, 411aa8 <ferror@plt+0xf1d8>
  411aa4:	ret
  411aa8:	stp	x29, x30, [sp, #-48]!
  411aac:	mov	x29, sp
  411ab0:	stp	x19, x20, [sp, #16]
  411ab4:	str	x21, [sp, #32]
  411ab8:	mov	x0, #0x588                 	// #1416
  411abc:	bl	4478d0 <_obstack_memory_used@@Base+0x964>
  411ac0:	mov	x21, x0
  411ac4:	mov	x1, #0x10                  	// #16
  411ac8:	str	x1, [x21], #8
  411acc:	mov	x19, x21
  411ad0:	add	x20, x0, #0x588
  411ad4:	mov	x0, x19
  411ad8:	bl	411a64 <ferror@plt+0xf194>
  411adc:	add	x19, x19, #0x58
  411ae0:	cmp	x19, x20
  411ae4:	b.ne	411ad4 <ferror@plt+0xf204>  // b.any
  411ae8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  411aec:	str	x21, [x0, #1904]
  411af0:	ldp	x19, x20, [sp, #16]
  411af4:	ldr	x21, [sp, #32]
  411af8:	ldp	x29, x30, [sp], #48
  411afc:	ret
  411b00:	stp	x29, x30, [sp, #-64]!
  411b04:	mov	x29, sp
  411b08:	stp	x21, x22, [sp, #32]
  411b0c:	str	x23, [sp, #48]
  411b10:	mov	x22, x0
  411b14:	cbz	x0, 411b90 <ferror@plt+0xf2c0>
  411b18:	stp	x19, x20, [sp, #16]
  411b1c:	bl	411a98 <ferror@plt+0xf1c8>
  411b20:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  411b24:	ldr	x19, [x0, #1904]
  411b28:	add	x21, x19, #0x580
  411b2c:	mov	x23, #0x0                   	// #0
  411b30:	b	411b40 <ferror@plt+0xf270>
  411b34:	add	x19, x19, #0x58
  411b38:	cmp	x19, x21
  411b3c:	b.eq	411b68 <ferror@plt+0xf298>  // b.none
  411b40:	ldr	x0, [x19, #8]
  411b44:	cbz	x0, 411b34 <ferror@plt+0xf264>
  411b48:	mov	x1, x22
  411b4c:	bl	402620 <strcmp@plt>
  411b50:	cbnz	w0, 411b34 <ferror@plt+0xf264>
  411b54:	ldr	w1, [x19]
  411b58:	add	w1, w1, #0x1
  411b5c:	str	w1, [x19]
  411b60:	mov	x23, x19
  411b64:	b	411b34 <ferror@plt+0xf264>
  411b68:	cbz	x23, 411b98 <ferror@plt+0xf2c8>
  411b6c:	ldr	w0, [x23]
  411b70:	add	w0, w0, #0x1
  411b74:	str	w0, [x23]
  411b78:	ldp	x19, x20, [sp, #16]
  411b7c:	mov	x0, x23
  411b80:	ldp	x21, x22, [sp, #32]
  411b84:	ldr	x23, [sp, #48]
  411b88:	ldp	x29, x30, [sp], #64
  411b8c:	ret
  411b90:	mov	x23, x0
  411b94:	b	411b7c <ferror@plt+0xf2ac>
  411b98:	ldp	x19, x20, [sp, #16]
  411b9c:	b	411b7c <ferror@plt+0xf2ac>
  411ba0:	stp	x29, x30, [sp, #-32]!
  411ba4:	mov	x29, sp
  411ba8:	str	x19, [sp, #16]
  411bac:	cbz	x0, 411c04 <ferror@plt+0xf334>
  411bb0:	bl	411b00 <ferror@plt+0xf230>
  411bb4:	mov	x19, x0
  411bb8:	cbz	x0, 411bf8 <ferror@plt+0xf328>
  411bbc:	str	xzr, [x0, #8]
  411bc0:	ldr	x0, [x0, #16]
  411bc4:	cbz	x0, 411bcc <ferror@plt+0xf2fc>
  411bc8:	bl	4023c0 <fclose@plt>
  411bcc:	str	xzr, [x19, #16]
  411bd0:	str	xzr, [x19, #40]
  411bd4:	str	xzr, [x19, #48]
  411bd8:	str	xzr, [x19, #56]
  411bdc:	ldr	x0, [x19, #80]
  411be0:	cbz	x0, 411be8 <ferror@plt+0xf318>
  411be4:	str	wzr, [x0, #4]
  411be8:	str	wzr, [x19]
  411bec:	str	xzr, [x19, #64]
  411bf0:	mov	w0, #0x1                   	// #1
  411bf4:	strb	w0, [x19, #72]
  411bf8:	ldr	x19, [sp, #16]
  411bfc:	ldp	x29, x30, [sp], #32
  411c00:	ret
  411c04:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  411c08:	add	x2, x2, #0x328
  411c0c:	mov	w1, #0x133                 	// #307
  411c10:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  411c14:	add	x0, x0, #0x2d0
  411c18:	bl	4062a0 <ferror@plt+0x39d0>
  411c1c:	stp	x29, x30, [sp, #-32]!
  411c20:	mov	x29, sp
  411c24:	str	x19, [sp, #16]
  411c28:	mov	x19, x0
  411c2c:	ldr	x0, [x0, #16]
  411c30:	cbz	x0, 411c3c <ferror@plt+0xf36c>
  411c34:	bl	4023c0 <fclose@plt>
  411c38:	str	xzr, [x19, #16]
  411c3c:	ldr	x0, [x19, #24]
  411c40:	cbz	x0, 411c4c <ferror@plt+0xf37c>
  411c44:	bl	402690 <free@plt>
  411c48:	str	xzr, [x19, #24]
  411c4c:	ldr	x0, [x19, #80]
  411c50:	cbz	x0, 411c60 <ferror@plt+0xf390>
  411c54:	ldrsb	w1, [x0, #3]
  411c58:	tbnz	w1, #31, 411c6c <ferror@plt+0xf39c>
  411c5c:	bl	402690 <free@plt>
  411c60:	ldr	x19, [sp, #16]
  411c64:	ldp	x29, x30, [sp], #32
  411c68:	ret
  411c6c:	str	wzr, [x0, #4]
  411c70:	b	411c60 <ferror@plt+0xf390>
  411c74:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  411c78:	ldr	x0, [x0, #1904]
  411c7c:	cbz	x0, 411cfc <ferror@plt+0xf42c>
  411c80:	stp	x29, x30, [sp, #-32]!
  411c84:	mov	x29, sp
  411c88:	stp	x19, x20, [sp, #16]
  411c8c:	ldur	x1, [x0, #-8]
  411c90:	add	x19, x1, x1, lsl #1
  411c94:	lsl	x19, x19, #2
  411c98:	sub	x19, x19, x1
  411c9c:	add	x19, x0, x19, lsl #3
  411ca0:	cmp	x0, x19
  411ca4:	b.eq	411cc8 <ferror@plt+0xf3f8>  // b.none
  411ca8:	adrp	x20, 488000 <_obstack_memory_used@@Base+0x41094>
  411cac:	add	x20, x20, #0x768
  411cb0:	sub	x19, x19, #0x58
  411cb4:	mov	x0, x19
  411cb8:	bl	411c1c <ferror@plt+0xf34c>
  411cbc:	ldr	x0, [x20, #8]
  411cc0:	cmp	x0, x19
  411cc4:	b.ne	411cb0 <ferror@plt+0xf3e0>  // b.any
  411cc8:	mov	x0, x19
  411ccc:	ldr	x2, [x0, #-8]!
  411cd0:	add	x1, x2, x2, lsl #1
  411cd4:	lsl	x1, x1, #2
  411cd8:	sub	x1, x1, x2
  411cdc:	lsl	x1, x1, #3
  411ce0:	add	x1, x1, #0x8
  411ce4:	bl	447630 <_obstack_memory_used@@Base+0x6c4>
  411ce8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  411cec:	str	xzr, [x0, #1904]
  411cf0:	ldp	x19, x20, [sp, #16]
  411cf4:	ldp	x29, x30, [sp], #32
  411cf8:	ret
  411cfc:	ret
  411d00:	stp	x29, x30, [sp, #-32]!
  411d04:	mov	x29, sp
  411d08:	str	xzr, [sp, #24]
  411d0c:	add	x3, sp, #0x18
  411d10:	mov	w2, #0x1                   	// #1
  411d14:	mov	w1, w0
  411d18:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  411d1c:	ldr	x0, [x0, #1896]
  411d20:	bl	4292dc <ferror@plt+0x26a0c>
  411d24:	cmp	w0, #0x1
  411d28:	cset	w0, eq  // eq = none
  411d2c:	ldp	x29, x30, [sp], #32
  411d30:	ret
  411d34:	stp	x29, x30, [sp, #-16]!
  411d38:	mov	x29, sp
  411d3c:	mov	w2, #0x0                   	// #0
  411d40:	mov	w1, #0x1                   	// #1
  411d44:	bl	411274 <ferror@plt+0xe9a4>
  411d48:	ldp	x29, x30, [sp], #16
  411d4c:	ret
  411d50:	stp	x29, x30, [sp, #-96]!
  411d54:	mov	x29, sp
  411d58:	stp	x19, x20, [sp, #16]
  411d5c:	stp	x21, x22, [sp, #32]
  411d60:	mov	x22, x0
  411d64:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x19094>
  411d68:	add	x1, x1, #0xdb8
  411d6c:	bl	4023f0 <fopen@plt>
  411d70:	mov	x21, x0
  411d74:	cbz	x0, 411e98 <ferror@plt+0xf5c8>
  411d78:	bl	411a98 <ferror@plt+0xf1c8>
  411d7c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  411d80:	ldr	x19, [x0, #1904]
  411d84:	mov	x1, x19
  411d88:	ldr	w20, [x1], #88
  411d8c:	add	x4, x19, #0x580
  411d90:	b	411db0 <ferror@plt+0xf4e0>
  411d94:	mov	x19, x1
  411d98:	cmp	w20, w2
  411d9c:	csel	w20, w20, w2, cs  // cs = hs, nlast
  411da0:	cbz	x3, 411e54 <ferror@plt+0xf584>
  411da4:	add	x1, x1, #0x58
  411da8:	cmp	x1, x4
  411dac:	b.eq	411de4 <ferror@plt+0xf514>  // b.none
  411db0:	mov	x5, x1
  411db4:	ldr	x3, [x1, #8]
  411db8:	ldr	w2, [x1]
  411dbc:	ldr	w0, [x19]
  411dc0:	cmp	w2, w0
  411dc4:	b.cc	411d94 <ferror@plt+0xf4c4>  // b.lo, b.ul, b.last
  411dc8:	ldr	x0, [x19, #8]
  411dcc:	cmp	x0, #0x0
  411dd0:	ccmp	x3, #0x0, #0x0, ne  // ne = any
  411dd4:	b.ne	411d98 <ferror@plt+0xf4c8>  // b.any
  411dd8:	cmp	w20, w2
  411ddc:	csel	w20, w20, w2, cs  // cs = hs, nlast
  411de0:	mov	x19, x5
  411de4:	str	x22, [x19, #8]
  411de8:	ldr	x0, [x19, #16]
  411dec:	cbz	x0, 411df4 <ferror@plt+0xf524>
  411df0:	bl	4023c0 <fclose@plt>
  411df4:	str	x21, [x19, #16]
  411df8:	str	xzr, [x19, #40]
  411dfc:	str	xzr, [x19, #48]
  411e00:	str	xzr, [x19, #56]
  411e04:	ldr	x1, [x19, #80]
  411e08:	cbz	x1, 411e10 <ferror@plt+0xf540>
  411e0c:	str	wzr, [x1, #4]
  411e10:	add	w20, w20, #0x1
  411e14:	str	w20, [x19]
  411e18:	str	wzr, [sp, #60]
  411e1c:	add	x2, sp, #0x3c
  411e20:	mov	x1, x22
  411e24:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  411e28:	ldr	x0, [x0, #1896]
  411e2c:	bl	429dc4 <ferror@plt+0x274f4>
  411e30:	and	w0, w0, #0xff
  411e34:	cbz	w0, 411e74 <ferror@plt+0xf5a4>
  411e38:	ldr	w0, [sp, #60]
  411e3c:	cmp	w0, #0x1
  411e40:	b.ls	411e5c <ferror@plt+0xf58c>  // b.plast
  411e44:	add	x8, sp, #0x40
  411e48:	bl	411d34 <ferror@plt+0xf464>
  411e4c:	ldrsw	x0, [sp, #72]
  411e50:	b	411e78 <ferror@plt+0xf5a8>
  411e54:	mov	x5, x19
  411e58:	b	411de0 <ferror@plt+0xf510>
  411e5c:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  411e60:	add	x2, x2, #0x358
  411e64:	mov	w1, #0x107                 	// #263
  411e68:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  411e6c:	add	x0, x0, #0x2d0
  411e70:	bl	4062a0 <ferror@plt+0x39d0>
  411e74:	mov	x0, #0x0                   	// #0
  411e78:	str	x0, [x19, #64]
  411e7c:	mov	w0, #0x1                   	// #1
  411e80:	strb	w0, [x19, #72]
  411e84:	mov	x0, x19
  411e88:	ldp	x19, x20, [sp, #16]
  411e8c:	ldp	x21, x22, [sp, #32]
  411e90:	ldp	x29, x30, [sp], #96
  411e94:	ret
  411e98:	mov	x19, x0
  411e9c:	b	411e84 <ferror@plt+0xf5b4>
  411ea0:	stp	x29, x30, [sp, #-32]!
  411ea4:	mov	x29, sp
  411ea8:	str	x19, [sp, #16]
  411eac:	mov	x19, x0
  411eb0:	bl	411b00 <ferror@plt+0xf230>
  411eb4:	mov	x1, x0
  411eb8:	cbz	x0, 411ecc <ferror@plt+0xf5fc>
  411ebc:	ldrb	w0, [x1, #72]
  411ec0:	ldr	x19, [sp, #16]
  411ec4:	ldp	x29, x30, [sp], #32
  411ec8:	ret
  411ecc:	mov	x0, x19
  411ed0:	bl	411d50 <ferror@plt+0xf480>
  411ed4:	mov	x1, x0
  411ed8:	mov	w0, #0x0                   	// #0
  411edc:	cbz	x1, 411ec0 <ferror@plt+0xf5f0>
  411ee0:	b	411ebc <ferror@plt+0xf5ec>
  411ee4:	stp	x29, x30, [sp, #-80]!
  411ee8:	mov	x29, sp
  411eec:	str	xzr, [sp, #72]
  411ef0:	cbnz	w1, 411f04 <ferror@plt+0xf634>
  411ef4:	mov	x0, #0x0                   	// #0
  411ef8:	mov	x1, #0x0                   	// #0
  411efc:	ldp	x29, x30, [sp], #80
  411f00:	ret
  411f04:	stp	x19, x20, [sp, #16]
  411f08:	str	x21, [sp, #32]
  411f0c:	mov	x21, x0
  411f10:	mov	w20, w1
  411f14:	bl	411b00 <ferror@plt+0xf230>
  411f18:	mov	x19, x0
  411f1c:	cbz	x0, 411fac <ferror@plt+0xf6dc>
  411f20:	sxtw	x1, w20
  411f24:	ldr	x0, [x19, #56]
  411f28:	cmp	x0, w20, sxtw
  411f2c:	b.cc	411fd8 <ferror@plt+0xf708>  // b.lo, b.ul, b.last
  411f30:	ldr	x2, [x19, #80]
  411f34:	cbz	x2, 411fd0 <ferror@plt+0xf700>
  411f38:	ldr	w3, [x2, #4]
  411f3c:	cbz	w3, 411fd0 <ferror@plt+0xf700>
  411f40:	ldr	x0, [x19, #64]
  411f44:	cmp	x0, #0x64
  411f48:	b.ls	412014 <ferror@plt+0xf744>  // b.plast
  411f4c:	cmp	x1, x0
  411f50:	b.hi	412088 <ferror@plt+0xf7b8>  // b.pmore
  411f54:	add	x4, x1, x1, lsl #1
  411f58:	add	x4, x1, x4, lsl #3
  411f5c:	lsl	x4, x4, #2
  411f60:	udiv	x4, x4, x0
  411f64:	cmp	x4, w3, uxtw
  411f68:	b.cs	4120dc <ferror@plt+0xf80c>  // b.hs, b.nlast
  411f6c:	ubfiz	x0, x4, #1, #32
  411f70:	add	x0, x0, w4, uxtw
  411f74:	add	x0, x2, x0, lsl #3
  411f78:	add	x0, x0, #0x8
  411f7c:	ubfiz	x3, x4, #1, #32
  411f80:	add	x4, x3, w4, uxtw
  411f84:	add	x2, x2, x4, lsl #3
  411f88:	ldr	x2, [x2, #8]
  411f8c:	cmp	x1, x2
  411f90:	b.cs	412038 <ferror@plt+0xf768>  // b.hs, b.nlast
  411f94:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  411f98:	add	x2, x2, #0x368
  411f9c:	mov	w1, #0x2c1                 	// #705
  411fa0:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  411fa4:	add	x0, x0, #0x2d0
  411fa8:	bl	4062a0 <ferror@plt+0x39d0>
  411fac:	mov	x0, x21
  411fb0:	bl	411d50 <ferror@plt+0xf480>
  411fb4:	mov	x19, x0
  411fb8:	cbnz	x0, 411f20 <ferror@plt+0xf650>
  411fbc:	mov	x0, #0x0                   	// #0
  411fc0:	mov	x1, #0x0                   	// #0
  411fc4:	ldp	x19, x20, [sp, #16]
  411fc8:	ldr	x21, [sp, #32]
  411fcc:	b	411efc <ferror@plt+0xf62c>
  411fd0:	str	xzr, [x19, #48]
  411fd4:	str	xzr, [x19, #56]
  411fd8:	sub	x20, x1, #0x1
  411fdc:	ldr	x0, [x19, #56]
  411fe0:	cmp	x0, x20
  411fe4:	b.cs	4120b0 <ferror@plt+0xf7e0>  // b.hs, b.nlast
  411fe8:	add	x2, sp, #0x38
  411fec:	add	x1, sp, #0x30
  411ff0:	mov	x0, x19
  411ff4:	bl	41152c <ferror@plt+0xec5c>
  411ff8:	and	w0, w0, #0xff
  411ffc:	cbnz	w0, 411fdc <ferror@plt+0xf70c>
  412000:	mov	x0, #0x0                   	// #0
  412004:	mov	x1, #0x0                   	// #0
  412008:	ldp	x19, x20, [sp, #16]
  41200c:	ldr	x21, [sp, #32]
  412010:	b	411efc <ferror@plt+0xf62c>
  412014:	cmp	x1, x0
  412018:	b.hi	41205c <ferror@plt+0xf78c>  // b.pmore
  41201c:	sub	w20, w20, #0x1
  412020:	add	x20, x20, x20, lsl #1
  412024:	add	x0, x2, x20, lsl #3
  412028:	add	x0, x0, #0x8
  41202c:	ldr	x2, [x0]
  412030:	cmp	x1, x2
  412034:	b.cc	412070 <ferror@plt+0xf7a0>  // b.lo, b.ul, b.last
  412038:	ldr	x2, [x0]
  41203c:	cmp	x1, x2
  412040:	b.eq	412090 <ferror@plt+0xf7c0>  // b.none
  412044:	ldr	x2, [x0, #8]
  412048:	str	x2, [x19, #48]
  41204c:	ldr	x0, [x0]
  412050:	sub	x0, x0, #0x1
  412054:	str	x0, [x19, #56]
  412058:	b	411fd8 <ferror@plt+0xf708>
  41205c:	sub	w0, w0, #0x1
  412060:	add	x0, x0, x0, lsl #1
  412064:	add	x0, x2, x0, lsl #3
  412068:	add	x0, x0, #0x8
  41206c:	b	41202c <ferror@plt+0xf75c>
  412070:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  412074:	add	x2, x2, #0x368
  412078:	mov	w1, #0x2b2                 	// #690
  41207c:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  412080:	add	x0, x0, #0x2d0
  412084:	bl	4062a0 <ferror@plt+0x39d0>
  412088:	sub	w4, w3, #0x1
  41208c:	b	411f64 <ferror@plt+0xf694>
  412090:	ldr	x2, [x0, #8]
  412094:	ldr	x1, [x19, #24]
  412098:	add	x1, x1, x2
  41209c:	str	x1, [sp, #72]
  4120a0:	ldr	x0, [x0, #16]
  4120a4:	sub	x0, x0, x2
  4120a8:	str	x0, [sp, #64]
  4120ac:	b	4120c8 <ferror@plt+0xf7f8>
  4120b0:	add	x2, sp, #0x40
  4120b4:	add	x1, sp, #0x48
  4120b8:	mov	x0, x19
  4120bc:	bl	41152c <ferror@plt+0xec5c>
  4120c0:	and	w0, w0, #0xff
  4120c4:	cbz	w0, 412000 <ferror@plt+0xf730>
  4120c8:	ldr	x0, [sp, #72]
  4120cc:	ldr	x1, [sp, #64]
  4120d0:	ldp	x19, x20, [sp, #16]
  4120d4:	ldr	x21, [sp, #32]
  4120d8:	b	411efc <ferror@plt+0xf62c>
  4120dc:	str	xzr, [x19, #48]
  4120e0:	str	xzr, [x19, #56]
  4120e4:	b	411fd8 <ferror@plt+0xf708>
  4120e8:	stp	x29, x30, [sp, #-16]!
  4120ec:	mov	x29, sp
  4120f0:	mov	w2, w1
  4120f4:	mov	w1, #0x0                   	// #0
  4120f8:	bl	411274 <ferror@plt+0xe9a4>
  4120fc:	ldp	x29, x30, [sp], #16
  412100:	ret
  412104:	stp	x29, x30, [sp, #-16]!
  412108:	mov	x29, sp
  41210c:	mov	w2, w1
  412110:	mov	w1, #0x0                   	// #0
  412114:	bl	411274 <ferror@plt+0xe9a4>
  412118:	ldp	x29, x30, [sp], #16
  41211c:	ret
  412120:	stp	x29, x30, [sp, #-32]!
  412124:	mov	x29, sp
  412128:	str	x19, [sp, #16]
  41212c:	mov	w19, w0
  412130:	mov	w1, w0
  412134:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  412138:	ldr	x0, [x0, #1896]
  41213c:	bl	429234 <ferror@plt+0x26964>
  412140:	cbnz	w0, 412154 <ferror@plt+0xf884>
  412144:	mov	w0, w19
  412148:	ldr	x19, [sp, #16]
  41214c:	ldp	x29, x30, [sp], #32
  412150:	ret
  412154:	mov	x3, #0x0                   	// #0
  412158:	mov	w2, #0x0                   	// #0
  41215c:	mov	w1, w19
  412160:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  412164:	ldr	x0, [x0, #1896]
  412168:	bl	4292dc <ferror@plt+0x26a0c>
  41216c:	mov	w19, w0
  412170:	b	412144 <ferror@plt+0xf874>
  412174:	stp	x29, x30, [sp, #-16]!
  412178:	mov	x29, sp
  41217c:	mov	x3, #0x0                   	// #0
  412180:	mov	w2, #0x0                   	// #0
  412184:	mov	w1, w0
  412188:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  41218c:	ldr	x0, [x0, #1896]
  412190:	bl	4292dc <ferror@plt+0x26a0c>
  412194:	ldp	x29, x30, [sp], #16
  412198:	ret
  41219c:	stp	x29, x30, [sp, #-48]!
  4121a0:	mov	x29, sp
  4121a4:	stp	x19, x20, [sp, #16]
  4121a8:	stp	x21, x22, [sp, #32]
  4121ac:	mov	w21, w1
  4121b0:	mov	w22, w2
  4121b4:	adrp	x19, 488000 <_obstack_memory_used@@Base+0x41094>
  4121b8:	mov	w1, w0
  4121bc:	ldr	x0, [x19, #1896]
  4121c0:	bl	429074 <ferror@plt+0x267a4>
  4121c4:	mov	w20, w0
  4121c8:	mov	w1, w21
  4121cc:	ldr	x0, [x19, #1896]
  4121d0:	bl	428f64 <ferror@plt+0x26694>
  4121d4:	mov	x21, x0
  4121d8:	mov	w1, w22
  4121dc:	ldr	x0, [x19, #1896]
  4121e0:	bl	428f64 <ferror@plt+0x26694>
  4121e4:	mov	x3, #0x0                   	// #0
  4121e8:	bfxil	x0, x21, #0, #32
  4121ec:	mov	x2, x0
  4121f0:	mov	w1, w20
  4121f4:	ldr	x0, [x19, #1896]
  4121f8:	bl	428d00 <ferror@plt+0x26430>
  4121fc:	ldp	x19, x20, [sp, #16]
  412200:	ldp	x21, x22, [sp, #32]
  412204:	ldp	x29, x30, [sp], #48
  412208:	ret
  41220c:	stp	x29, x30, [sp, #-32]!
  412210:	mov	x29, sp
  412214:	stp	x19, x20, [sp, #16]
  412218:	mov	x19, x1
  41221c:	adrp	x20, 488000 <_obstack_memory_used@@Base+0x41094>
  412220:	mov	w1, w0
  412224:	ldr	x0, [x20, #1896]
  412228:	bl	429074 <ferror@plt+0x267a4>
  41222c:	mov	x3, #0x0                   	// #0
  412230:	mov	x2, x19
  412234:	mov	w1, w0
  412238:	ldr	x0, [x20, #1896]
  41223c:	bl	428d00 <ferror@plt+0x26430>
  412240:	ldp	x19, x20, [sp, #16]
  412244:	ldp	x29, x30, [sp], #32
  412248:	ret
  41224c:	stp	x29, x30, [sp, #-160]!
  412250:	mov	x29, sp
  412254:	stp	x19, x20, [sp, #16]
  412258:	stp	x21, x22, [sp, #32]
  41225c:	stp	xzr, xzr, [sp, #56]
  412260:	stp	xzr, xzr, [sp, #72]
  412264:	stp	xzr, xzr, [sp, #88]
  412268:	stp	xzr, xzr, [sp, #104]
  41226c:	stp	xzr, xzr, [sp, #120]
  412270:	stp	xzr, xzr, [sp, #136]
  412274:	str	xzr, [sp, #152]
  412278:	add	x1, sp, #0x38
  41227c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  412280:	ldr	x0, [x0, #1896]
  412284:	bl	429ea0 <ferror@plt+0x275d0>
  412288:	ldr	x0, [sp, #120]
  41228c:	ldr	x19, [sp, #128]
  412290:	add	x21, x0, x19
  412294:	ldr	x20, [sp, #72]
  412298:	ldr	x2, [sp, #112]
  41229c:	add	x20, x20, x2
  4122a0:	add	x20, x20, x19
  4122a4:	ldr	x2, [sp, #80]
  4122a8:	add	x0, x0, x2
  4122ac:	add	x19, x0, x19
  4122b0:	ldr	x2, [sp, #88]
  4122b4:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  4122b8:	add	x1, x1, #0x378
  4122bc:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  4122c0:	ldr	x0, [x0, #1320]
  4122c4:	bl	402890 <fprintf@plt>
  4122c8:	ldr	x0, [sp, #88]
  4122cc:	cbnz	x0, 412518 <ferror@plt+0xfc48>
  4122d0:	adrp	x22, 488000 <_obstack_memory_used@@Base+0x41094>
  4122d4:	ldr	x3, [x22, #1320]
  4122d8:	mov	x2, #0x37                  	// #55
  4122dc:	mov	x1, #0x1                   	// #1
  4122e0:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  4122e4:	add	x0, x0, #0x3e8
  4122e8:	bl	4026d0 <fwrite@plt>
  4122ec:	ldr	x0, [x22, #1320]
  4122f0:	ldr	x2, [sp, #64]
  4122f4:	mov	x1, #0x27ff                	// #10239
  4122f8:	mov	w3, #0x20                  	// #32
  4122fc:	cmp	x2, x1
  412300:	b.le	412324 <ferror@plt+0xfa54>
  412304:	mov	w1, #0x9fffff              	// #10485759
  412308:	cmp	x2, x1
  41230c:	b.gt	412538 <ferror@plt+0xfc68>
  412310:	add	x1, x2, #0x3ff
  412314:	cmp	x2, #0x0
  412318:	csel	x2, x1, x2, lt  // lt = tstop
  41231c:	asr	x2, x2, #10
  412320:	mov	w3, #0x6b                  	// #107
  412324:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  412328:	add	x1, x1, #0x420
  41232c:	bl	402890 <fprintf@plt>
  412330:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  412334:	ldr	x0, [x0, #1320]
  412338:	ldr	x2, [sp, #80]
  41233c:	mov	x1, #0x27ff                	// #10239
  412340:	mov	w3, #0x20                  	// #32
  412344:	cmp	x2, x1
  412348:	b.le	41236c <ferror@plt+0xfa9c>
  41234c:	mov	w1, #0x9fffff              	// #10485759
  412350:	cmp	x2, x1
  412354:	b.gt	412554 <ferror@plt+0xfc84>
  412358:	add	x1, x2, #0x3ff
  41235c:	cmp	x2, #0x0
  412360:	csel	x2, x1, x2, lt  // lt = tstop
  412364:	asr	x2, x2, #10
  412368:	mov	w3, #0x6b                  	// #107
  41236c:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  412370:	add	x1, x1, #0x450
  412374:	bl	402890 <fprintf@plt>
  412378:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  41237c:	ldr	x0, [x0, #1320]
  412380:	ldr	x2, [sp, #56]
  412384:	mov	x1, #0x27ff                	// #10239
  412388:	mov	w3, #0x20                  	// #32
  41238c:	cmp	x2, x1
  412390:	b.le	4123b4 <ferror@plt+0xfae4>
  412394:	mov	w1, #0x9fffff              	// #10485759
  412398:	cmp	x2, x1
  41239c:	b.gt	412570 <ferror@plt+0xfca0>
  4123a0:	add	x1, x2, #0x3ff
  4123a4:	cmp	x2, #0x0
  4123a8:	csel	x2, x1, x2, lt  // lt = tstop
  4123ac:	asr	x2, x2, #10
  4123b0:	mov	w3, #0x6b                  	// #107
  4123b4:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  4123b8:	add	x1, x1, #0x480
  4123bc:	bl	402890 <fprintf@plt>
  4123c0:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  4123c4:	ldr	x0, [x0, #1320]
  4123c8:	ldr	x2, [sp, #72]
  4123cc:	mov	x1, #0x27ff                	// #10239
  4123d0:	mov	w3, #0x20                  	// #32
  4123d4:	cmp	x2, x1
  4123d8:	b.le	4123fc <ferror@plt+0xfb2c>
  4123dc:	mov	w1, #0x9fffff              	// #10485759
  4123e0:	cmp	x2, x1
  4123e4:	b.gt	41258c <ferror@plt+0xfcbc>
  4123e8:	add	x1, x2, #0x3ff
  4123ec:	cmp	x2, #0x0
  4123f0:	csel	x2, x1, x2, lt  // lt = tstop
  4123f4:	asr	x2, x2, #10
  4123f8:	mov	w3, #0x6b                  	// #107
  4123fc:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  412400:	add	x1, x1, #0x4b0
  412404:	bl	402890 <fprintf@plt>
  412408:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  41240c:	ldr	x0, [x0, #1320]
  412410:	ldr	x2, [sp, #104]
  412414:	mov	x1, #0x27ff                	// #10239
  412418:	mov	w3, #0x20                  	// #32
  41241c:	cmp	x2, x1
  412420:	b.le	412444 <ferror@plt+0xfb74>
  412424:	mov	w1, #0x9fffff              	// #10485759
  412428:	cmp	x2, x1
  41242c:	b.gt	4125a8 <ferror@plt+0xfcd8>
  412430:	add	x1, x2, #0x3ff
  412434:	cmp	x2, #0x0
  412438:	csel	x2, x1, x2, lt  // lt = tstop
  41243c:	asr	x2, x2, #10
  412440:	mov	w3, #0x6b                  	// #107
  412444:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  412448:	add	x1, x1, #0x4e0
  41244c:	bl	402890 <fprintf@plt>
  412450:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  412454:	ldr	x0, [x0, #1320]
  412458:	ldr	x2, [sp, #120]
  41245c:	mov	x1, #0x27ff                	// #10239
  412460:	mov	w3, #0x20                  	// #32
  412464:	cmp	x2, x1
  412468:	b.le	41248c <ferror@plt+0xfbbc>
  41246c:	mov	w1, #0x9fffff              	// #10485759
  412470:	cmp	x2, x1
  412474:	b.gt	4125c4 <ferror@plt+0xfcf4>
  412478:	add	x1, x2, #0x3ff
  41247c:	cmp	x2, #0x0
  412480:	csel	x2, x1, x2, lt  // lt = tstop
  412484:	asr	x2, x2, #10
  412488:	mov	w3, #0x6b                  	// #107
  41248c:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  412490:	add	x1, x1, #0x510
  412494:	bl	402890 <fprintf@plt>
  412498:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  41249c:	ldr	x0, [x0, #1320]
  4124a0:	ldr	x2, [sp, #128]
  4124a4:	mov	x1, #0x27ff                	// #10239
  4124a8:	mov	w3, #0x20                  	// #32
  4124ac:	cmp	x2, x1
  4124b0:	b.le	4124d4 <ferror@plt+0xfc04>
  4124b4:	mov	w1, #0x9fffff              	// #10485759
  4124b8:	cmp	x2, x1
  4124bc:	b.gt	4125e0 <ferror@plt+0xfd10>
  4124c0:	add	x1, x2, #0x3ff
  4124c4:	cmp	x2, #0x0
  4124c8:	csel	x2, x1, x2, lt  // lt = tstop
  4124cc:	asr	x2, x2, #10
  4124d0:	mov	w3, #0x6b                  	// #107
  4124d4:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  4124d8:	add	x1, x1, #0x540
  4124dc:	bl	402890 <fprintf@plt>
  4124e0:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  4124e4:	ldr	x0, [x0, #1320]
  4124e8:	mov	x1, #0x27ff                	// #10239
  4124ec:	cmp	x21, x1
  4124f0:	b.le	412618 <ferror@plt+0xfd48>
  4124f4:	mov	w1, #0x9fffff              	// #10485759
  4124f8:	cmp	x21, x1
  4124fc:	b.gt	4125fc <ferror@plt+0xfd2c>
  412500:	add	x2, x21, #0x3ff
  412504:	cmp	x21, #0x0
  412508:	csel	x21, x2, x21, lt  // lt = tstop
  41250c:	asr	x2, x21, #10
  412510:	mov	w3, #0x6b                  	// #107
  412514:	b	412620 <ferror@plt+0xfd50>
  412518:	ldr	x2, [sp, #96]
  41251c:	sdiv	x2, x2, x0
  412520:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  412524:	add	x1, x1, #0x3b0
  412528:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  41252c:	ldr	x0, [x0, #1320]
  412530:	bl	402890 <fprintf@plt>
  412534:	b	4122d0 <ferror@plt+0xfa00>
  412538:	add	x1, x2, #0xff, lsl #12
  41253c:	add	x1, x1, #0xfff
  412540:	cmp	x2, #0x0
  412544:	csel	x2, x1, x2, lt  // lt = tstop
  412548:	asr	x2, x2, #20
  41254c:	mov	w3, #0x4d                  	// #77
  412550:	b	412324 <ferror@plt+0xfa54>
  412554:	add	x1, x2, #0xff, lsl #12
  412558:	add	x1, x1, #0xfff
  41255c:	cmp	x2, #0x0
  412560:	csel	x2, x1, x2, lt  // lt = tstop
  412564:	asr	x2, x2, #20
  412568:	mov	w3, #0x4d                  	// #77
  41256c:	b	41236c <ferror@plt+0xfa9c>
  412570:	add	x1, x2, #0xff, lsl #12
  412574:	add	x1, x1, #0xfff
  412578:	cmp	x2, #0x0
  41257c:	csel	x2, x1, x2, lt  // lt = tstop
  412580:	asr	x2, x2, #20
  412584:	mov	w3, #0x4d                  	// #77
  412588:	b	4123b4 <ferror@plt+0xfae4>
  41258c:	add	x1, x2, #0xff, lsl #12
  412590:	add	x1, x1, #0xfff
  412594:	cmp	x2, #0x0
  412598:	csel	x2, x1, x2, lt  // lt = tstop
  41259c:	asr	x2, x2, #20
  4125a0:	mov	w3, #0x4d                  	// #77
  4125a4:	b	4123fc <ferror@plt+0xfb2c>
  4125a8:	add	x1, x2, #0xff, lsl #12
  4125ac:	add	x1, x1, #0xfff
  4125b0:	cmp	x2, #0x0
  4125b4:	csel	x2, x1, x2, lt  // lt = tstop
  4125b8:	asr	x2, x2, #20
  4125bc:	mov	w3, #0x4d                  	// #77
  4125c0:	b	412444 <ferror@plt+0xfb74>
  4125c4:	add	x1, x2, #0xff, lsl #12
  4125c8:	add	x1, x1, #0xfff
  4125cc:	cmp	x2, #0x0
  4125d0:	csel	x2, x1, x2, lt  // lt = tstop
  4125d4:	asr	x2, x2, #20
  4125d8:	mov	w3, #0x4d                  	// #77
  4125dc:	b	41248c <ferror@plt+0xfbbc>
  4125e0:	add	x1, x2, #0xff, lsl #12
  4125e4:	add	x1, x1, #0xfff
  4125e8:	cmp	x2, #0x0
  4125ec:	csel	x2, x1, x2, lt  // lt = tstop
  4125f0:	asr	x2, x2, #20
  4125f4:	mov	w3, #0x4d                  	// #77
  4125f8:	b	4124d4 <ferror@plt+0xfc04>
  4125fc:	add	x2, x21, #0xff, lsl #12
  412600:	add	x2, x2, #0xfff
  412604:	cmp	x21, #0x0
  412608:	csel	x21, x2, x21, lt  // lt = tstop
  41260c:	asr	x2, x21, #20
  412610:	mov	w3, #0x4d                  	// #77
  412614:	b	412620 <ferror@plt+0xfd50>
  412618:	mov	x2, x21
  41261c:	mov	w3, #0x20                  	// #32
  412620:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  412624:	add	x1, x1, #0x570
  412628:	bl	402890 <fprintf@plt>
  41262c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  412630:	ldr	x0, [x0, #1320]
  412634:	ldr	x2, [sp, #136]
  412638:	mov	x1, #0x27ff                	// #10239
  41263c:	mov	w3, #0x20                  	// #32
  412640:	cmp	x2, x1
  412644:	b.le	412668 <ferror@plt+0xfd98>
  412648:	mov	w1, #0x9fffff              	// #10485759
  41264c:	cmp	x2, x1
  412650:	b.gt	4126ac <ferror@plt+0xfddc>
  412654:	add	x1, x2, #0x3ff
  412658:	cmp	x2, #0x0
  41265c:	csel	x2, x1, x2, lt  // lt = tstop
  412660:	asr	x2, x2, #10
  412664:	mov	w3, #0x6b                  	// #107
  412668:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  41266c:	add	x1, x1, #0x5a0
  412670:	bl	402890 <fprintf@plt>
  412674:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  412678:	ldr	x0, [x0, #1320]
  41267c:	mov	x1, #0x27ff                	// #10239
  412680:	cmp	x20, x1
  412684:	b.le	4126e4 <ferror@plt+0xfe14>
  412688:	mov	w1, #0x9fffff              	// #10485759
  41268c:	cmp	x20, x1
  412690:	b.gt	4126c8 <ferror@plt+0xfdf8>
  412694:	add	x2, x20, #0x3ff
  412698:	cmp	x20, #0x0
  41269c:	csel	x20, x2, x20, lt  // lt = tstop
  4126a0:	asr	x2, x20, #10
  4126a4:	mov	w3, #0x6b                  	// #107
  4126a8:	b	4126ec <ferror@plt+0xfe1c>
  4126ac:	add	x1, x2, #0xff, lsl #12
  4126b0:	add	x1, x1, #0xfff
  4126b4:	cmp	x2, #0x0
  4126b8:	csel	x2, x1, x2, lt  // lt = tstop
  4126bc:	asr	x2, x2, #20
  4126c0:	mov	w3, #0x4d                  	// #77
  4126c4:	b	412668 <ferror@plt+0xfd98>
  4126c8:	add	x2, x20, #0xff, lsl #12
  4126cc:	add	x2, x2, #0xfff
  4126d0:	cmp	x20, #0x0
  4126d4:	csel	x20, x2, x20, lt  // lt = tstop
  4126d8:	asr	x2, x20, #20
  4126dc:	mov	w3, #0x4d                  	// #77
  4126e0:	b	4126ec <ferror@plt+0xfe1c>
  4126e4:	mov	x2, x20
  4126e8:	mov	w3, #0x20                  	// #32
  4126ec:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  4126f0:	add	x1, x1, #0x5d0
  4126f4:	bl	402890 <fprintf@plt>
  4126f8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  4126fc:	ldr	x0, [x0, #1320]
  412700:	mov	x1, #0x27ff                	// #10239
  412704:	cmp	x19, x1
  412708:	b.le	41274c <ferror@plt+0xfe7c>
  41270c:	mov	w1, #0x9fffff              	// #10485759
  412710:	cmp	x19, x1
  412714:	b.gt	412730 <ferror@plt+0xfe60>
  412718:	add	x2, x19, #0x3ff
  41271c:	cmp	x19, #0x0
  412720:	csel	x19, x2, x19, lt  // lt = tstop
  412724:	asr	x2, x19, #10
  412728:	mov	w3, #0x6b                  	// #107
  41272c:	b	412754 <ferror@plt+0xfe84>
  412730:	add	x2, x19, #0xff, lsl #12
  412734:	add	x2, x2, #0xfff
  412738:	cmp	x19, #0x0
  41273c:	csel	x19, x2, x19, lt  // lt = tstop
  412740:	asr	x2, x19, #20
  412744:	mov	w3, #0x4d                  	// #77
  412748:	b	412754 <ferror@plt+0xfe84>
  41274c:	mov	x2, x19
  412750:	mov	w3, #0x20                  	// #32
  412754:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  412758:	add	x1, x1, #0x600
  41275c:	bl	402890 <fprintf@plt>
  412760:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  412764:	ldr	x0, [x0, #1320]
  412768:	ldr	x2, [sp, #144]
  41276c:	mov	x1, #0x27ff                	// #10239
  412770:	mov	w3, #0x20                  	// #32
  412774:	cmp	x2, x1
  412778:	b.le	41279c <ferror@plt+0xfecc>
  41277c:	mov	w1, #0x9fffff              	// #10485759
  412780:	cmp	x2, x1
  412784:	b.gt	412878 <ferror@plt+0xffa8>
  412788:	add	x1, x2, #0x3ff
  41278c:	cmp	x2, #0x0
  412790:	csel	x2, x1, x2, lt  // lt = tstop
  412794:	asr	x2, x2, #10
  412798:	mov	w3, #0x6b                  	// #107
  41279c:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  4127a0:	add	x1, x1, #0x630
  4127a4:	bl	402890 <fprintf@plt>
  4127a8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  4127ac:	ldr	x0, [x0, #1320]
  4127b0:	ldr	x2, [sp, #152]
  4127b4:	mov	x1, #0x27ff                	// #10239
  4127b8:	mov	w3, #0x20                  	// #32
  4127bc:	cmp	x2, x1
  4127c0:	b.le	4127e4 <ferror@plt+0xff14>
  4127c4:	mov	w1, #0x9fffff              	// #10485759
  4127c8:	cmp	x2, x1
  4127cc:	b.gt	412894 <ferror@plt+0xffc4>
  4127d0:	add	x1, x2, #0x3ff
  4127d4:	cmp	x2, #0x0
  4127d8:	csel	x2, x1, x2, lt  // lt = tstop
  4127dc:	asr	x2, x2, #10
  4127e0:	mov	w3, #0x6b                  	// #107
  4127e4:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  4127e8:	add	x1, x1, #0x660
  4127ec:	bl	402890 <fprintf@plt>
  4127f0:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  4127f4:	ldr	x0, [x0, #1320]
  4127f8:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x41094>
  4127fc:	ldr	x1, [x1, #1896]
  412800:	ldr	w2, [x1, #124]
  412804:	mov	w1, #0x27ff                	// #10239
  412808:	cmp	w2, w1
  41280c:	b.hi	4128b0 <ferror@plt+0xffe0>  // b.pmore
  412810:	mov	w2, w2
  412814:	mov	w3, #0x20                  	// #32
  412818:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  41281c:	add	x1, x1, #0x690
  412820:	bl	402890 <fprintf@plt>
  412824:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  412828:	ldr	x0, [x0, #1320]
  41282c:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x41094>
  412830:	ldr	x1, [x1, #1896]
  412834:	ldr	w2, [x1, #128]
  412838:	mov	w1, #0x27ff                	// #10239
  41283c:	cmp	w2, w1
  412840:	b.hi	4128d4 <ferror@plt+0x10004>  // b.pmore
  412844:	mov	w2, w2
  412848:	mov	w3, #0x20                  	// #32
  41284c:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  412850:	add	x1, x1, #0x6c0
  412854:	bl	402890 <fprintf@plt>
  412858:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  41285c:	ldr	x1, [x0, #1320]
  412860:	mov	w0, #0xa                   	// #10
  412864:	bl	402380 <fputc@plt>
  412868:	ldp	x19, x20, [sp, #16]
  41286c:	ldp	x21, x22, [sp, #32]
  412870:	ldp	x29, x30, [sp], #160
  412874:	ret
  412878:	add	x1, x2, #0xff, lsl #12
  41287c:	add	x1, x1, #0xfff
  412880:	cmp	x2, #0x0
  412884:	csel	x2, x1, x2, lt  // lt = tstop
  412888:	asr	x2, x2, #20
  41288c:	mov	w3, #0x4d                  	// #77
  412890:	b	41279c <ferror@plt+0xfecc>
  412894:	add	x1, x2, #0xff, lsl #12
  412898:	add	x1, x1, #0xfff
  41289c:	cmp	x2, #0x0
  4128a0:	csel	x2, x1, x2, lt  // lt = tstop
  4128a4:	asr	x2, x2, #20
  4128a8:	mov	w3, #0x4d                  	// #77
  4128ac:	b	4127e4 <ferror@plt+0xff14>
  4128b0:	mov	w1, #0x9fffff              	// #10485759
  4128b4:	cmp	w2, w1
  4128b8:	b.hi	4128c8 <ferror@plt+0xfff8>  // b.pmore
  4128bc:	lsr	w2, w2, #10
  4128c0:	mov	w3, #0x6b                  	// #107
  4128c4:	b	412818 <ferror@plt+0xff48>
  4128c8:	lsr	w2, w2, #20
  4128cc:	mov	w3, #0x4d                  	// #77
  4128d0:	b	412818 <ferror@plt+0xff48>
  4128d4:	mov	w1, #0x9fffff              	// #10485759
  4128d8:	cmp	w2, w1
  4128dc:	b.hi	4128ec <ferror@plt+0x1001c>  // b.pmore
  4128e0:	lsr	w2, w2, #10
  4128e4:	mov	w3, #0x6b                  	// #107
  4128e8:	b	41284c <ferror@plt+0xff7c>
  4128ec:	lsr	w2, w2, #20
  4128f0:	mov	w3, #0x4d                  	// #77
  4128f4:	b	41284c <ferror@plt+0xff7c>
  4128f8:	stp	x29, x30, [sp, #-144]!
  4128fc:	mov	x29, sp
  412900:	stp	x19, x20, [sp, #16]
  412904:	stp	x21, x22, [sp, #32]
  412908:	stp	x23, x24, [sp, #48]
  41290c:	stp	x25, x26, [sp, #64]
  412910:	stp	x27, x28, [sp, #80]
  412914:	mov	x23, x0
  412918:	mov	w3, #0x2                   	// #2
  41291c:	mov	w2, #0x0                   	// #0
  412920:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  412924:	add	x1, x1, #0x750
  412928:	bl	41140c <ferror@plt+0xeb3c>
  41292c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  412930:	ldr	x1, [x0, #1896]
  412934:	ldr	w0, [x1, #12]
  412938:	cbz	w0, 412cd0 <ferror@plt+0x10400>
  41293c:	str	wzr, [sp, #96]
  412940:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  412944:	add	x2, x2, #0x860
  412948:	str	x2, [sp, #104]
  41294c:	b	412bcc <ferror@plt+0x102fc>
  412950:	ldr	w26, [x1, #56]
  412954:	b	412bf8 <ferror@plt+0x10328>
  412958:	adrp	x3, 459000 <_obstack_memory_used@@Base+0x12094>
  41295c:	add	x0, x3, #0x718
  412960:	adrp	x3, 459000 <_obstack_memory_used@@Base+0x12094>
  412964:	add	x3, x3, #0x6f8
  412968:	cmp	w2, #0x0
  41296c:	csel	x3, x3, x0, ne  // ne = any
  412970:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  412974:	add	x1, x1, #0x7f8
  412978:	mov	x0, x23
  41297c:	bl	402890 <fprintf@plt>
  412980:	mov	x1, x22
  412984:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  412988:	ldr	x0, [x0, #1896]
  41298c:	bl	4283d8 <ferror@plt+0x25b08>
  412990:	mov	x21, x0
  412994:	ldr	w2, [x22, #20]
  412998:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  41299c:	add	x1, x1, #0x810
  4129a0:	mov	x0, x23
  4129a4:	bl	402890 <fprintf@plt>
  4129a8:	cbz	x21, 4129dc <ferror@plt+0x1010c>
  4129ac:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  4129b0:	ldr	x0, [x0, #1896]
  4129b4:	ldr	x2, [x0]
  4129b8:	sub	x21, x21, x2
  4129bc:	asr	x21, x21, #3
  4129c0:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4129c4:	movk	x2, #0xaaab
  4129c8:	mul	w2, w21, w2
  4129cc:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  4129d0:	add	x1, x1, #0x830
  4129d4:	mov	x0, x23
  4129d8:	bl	402890 <fprintf@plt>
  4129dc:	mov	x1, x23
  4129e0:	mov	w0, #0xa                   	// #10
  4129e4:	bl	402380 <fputc@plt>
  4129e8:	ldr	w19, [x20, x19]
  4129ec:	cmp	w19, w26
  4129f0:	b.cs	412ba0 <ferror@plt+0x102d0>  // b.hs, b.nlast
  4129f4:	adrp	x25, 488000 <_obstack_memory_used@@Base+0x41094>
  4129f8:	mov	w27, #0x1                   	// #1
  4129fc:	b	412ac4 <ferror@plt+0x101f4>
  412a00:	adrp	x3, 459000 <_obstack_memory_used@@Base+0x12094>
  412a04:	add	x3, x3, #0x708
  412a08:	b	412970 <ferror@plt+0x100a0>
  412a0c:	adrp	x3, 459000 <_obstack_memory_used@@Base+0x12094>
  412a10:	add	x3, x3, #0x728
  412a14:	b	412970 <ferror@plt+0x100a0>
  412a18:	adrp	x3, 459000 <_obstack_memory_used@@Base+0x12094>
  412a1c:	add	x3, x3, #0x6f0
  412a20:	b	412970 <ferror@plt+0x100a0>
  412a24:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  412a28:	add	x2, x2, #0x848
  412a2c:	mov	w1, #0x454                 	// #1108
  412a30:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  412a34:	add	x0, x0, #0x2d0
  412a38:	bl	4062a0 <ferror@plt+0x39d0>
  412a3c:	mov	w5, #0x3e8                 	// #1000
  412a40:	mov	w4, w21
  412a44:	mov	w3, w19
  412a48:	mov	x2, x22
  412a4c:	mov	w1, w20
  412a50:	mov	x0, x23
  412a54:	bl	41146c <ferror@plt+0xeb9c>
  412a58:	b	412b94 <ferror@plt+0x102c4>
  412a5c:	mov	w5, #0x64                  	// #100
  412a60:	mov	w4, w21
  412a64:	mov	w3, w19
  412a68:	mov	x2, x22
  412a6c:	mov	w1, w20
  412a70:	mov	x0, x23
  412a74:	bl	41146c <ferror@plt+0xeb9c>
  412a78:	mov	w5, #0xa                   	// #10
  412a7c:	mov	w4, w21
  412a80:	mov	w3, w19
  412a84:	mov	x2, x22
  412a88:	mov	w1, w20
  412a8c:	mov	x0, x23
  412a90:	bl	41146c <ferror@plt+0xeb9c>
  412a94:	mov	w5, w27
  412a98:	mov	w4, w21
  412a9c:	mov	w3, w19
  412aa0:	mov	x2, x22
  412aa4:	mov	w1, w20
  412aa8:	mov	x0, x23
  412aac:	bl	41146c <ferror@plt+0xeb9c>
  412ab0:	ldrb	w0, [x22, #7]
  412ab4:	lsl	w0, w27, w0
  412ab8:	add	w19, w19, w0
  412abc:	cmp	w19, w26
  412ac0:	b.cs	412ba0 <ferror@plt+0x102d0>  // b.hs, b.nlast
  412ac4:	mov	w1, w19
  412ac8:	ldr	x0, [x25, #1896]
  412acc:	bl	429028 <ferror@plt+0x26758>
  412ad0:	and	w0, w0, #0xff
  412ad4:	cbz	w0, 412a24 <ferror@plt+0x10154>
  412ad8:	add	x8, sp, #0x70
  412adc:	mov	w2, w19
  412ae0:	mov	x1, x22
  412ae4:	ldr	x0, [x25, #1896]
  412ae8:	bl	4299e0 <ferror@plt+0x27110>
  412aec:	ldr	w0, [sp, #124]
  412af0:	cbnz	w0, 412ab0 <ferror@plt+0x101e0>
  412af4:	ldr	x28, [sp, #112]
  412af8:	ldr	w24, [sp, #120]
  412afc:	mov	w1, w24
  412b00:	mov	x0, x28
  412b04:	bl	411ee4 <ferror@plt+0xf614>
  412b08:	mov	x6, x0
  412b0c:	mov	x20, x1
  412b10:	cbz	x0, 412ba0 <ferror@plt+0x102d0>
  412b14:	mov	w5, w1
  412b18:	mov	w4, w19
  412b1c:	mov	w3, w24
  412b20:	mov	x2, x28
  412b24:	ldr	x1, [sp, #104]
  412b28:	mov	x0, x23
  412b2c:	bl	402890 <fprintf@plt>
  412b30:	ldrb	w21, [x22, #6]
  412b34:	lsl	w21, w27, w21
  412b38:	sub	w21, w21, #0x1
  412b3c:	sxtw	x21, w21
  412b40:	cmp	x20, x21
  412b44:	csinc	x21, x21, x20, cs  // cs = hs, nlast
  412b48:	mov	w0, w24
  412b4c:	bl	4067a8 <ferror@plt+0x3ed8>
  412b50:	mov	w20, w0
  412b54:	mov	w0, w19
  412b58:	bl	4067a8 <ferror@plt+0x3ed8>
  412b5c:	mov	w24, w0
  412b60:	mov	x0, x28
  412b64:	bl	4022b0 <strlen@plt>
  412b68:	cmp	w20, #0x3
  412b6c:	mov	w1, #0x3                   	// #3
  412b70:	csel	w20, w20, w1, ge  // ge = tcont
  412b74:	cmp	w24, #0x5
  412b78:	mov	w1, #0x5                   	// #5
  412b7c:	csel	w24, w24, w1, ge  // ge = tcont
  412b80:	add	w20, w20, w24
  412b84:	add	w0, w0, #0x6
  412b88:	add	w20, w20, w0
  412b8c:	cmp	w26, #0x3e7
  412b90:	b.hi	412a3c <ferror@plt+0x1016c>  // b.pmore
  412b94:	cmp	w26, #0x63
  412b98:	b.ls	412a78 <ferror@plt+0x101a8>  // b.plast
  412b9c:	b	412a5c <ferror@plt+0x1018c>
  412ba0:	mov	x1, x23
  412ba4:	mov	w0, #0xa                   	// #10
  412ba8:	bl	402380 <fputc@plt>
  412bac:	ldr	w0, [sp, #96]
  412bb0:	add	w2, w0, #0x1
  412bb4:	str	w2, [sp, #96]
  412bb8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  412bbc:	ldr	x1, [x0, #1896]
  412bc0:	ldr	w0, [x1, #12]
  412bc4:	cmp	w0, w2
  412bc8:	b.ls	412cd0 <ferror@plt+0x10400>  // b.plast
  412bcc:	sub	w0, w0, #0x1
  412bd0:	ldr	w2, [sp, #96]
  412bd4:	cmp	w0, w2
  412bd8:	b.eq	412950 <ferror@plt+0x10080>  // b.none
  412bdc:	ldr	w0, [sp, #96]
  412be0:	add	w0, w0, #0x1
  412be4:	ldr	x2, [x1]
  412be8:	sbfiz	x3, x0, #1, #32
  412bec:	add	x0, x3, w0, sxtw
  412bf0:	lsl	x0, x0, #3
  412bf4:	ldr	w26, [x2, x0]
  412bf8:	ldr	w2, [sp, #96]
  412bfc:	sbfiz	x19, x2, #1, #32
  412c00:	add	x19, x19, w2, sxtw
  412c04:	lsl	x19, x19, #3
  412c08:	ldr	x20, [x1]
  412c0c:	add	x22, x20, x19
  412c10:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  412c14:	add	x1, x1, #0x768
  412c18:	mov	x0, x23
  412c1c:	bl	402890 <fprintf@plt>
  412c20:	mov	w3, w26
  412c24:	ldr	w2, [x20, x19]
  412c28:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  412c2c:	add	x1, x1, #0x2e8
  412c30:	mov	x0, x23
  412c34:	bl	402890 <fprintf@plt>
  412c38:	ldr	x2, [x22, #8]
  412c3c:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  412c40:	add	x1, x1, #0x780
  412c44:	mov	x0, x23
  412c48:	bl	402890 <fprintf@plt>
  412c4c:	ldr	w2, [x22, #16]
  412c50:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  412c54:	add	x1, x1, #0x790
  412c58:	mov	x0, x23
  412c5c:	bl	402890 <fprintf@plt>
  412c60:	ldrb	w2, [x22, #6]
  412c64:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  412c68:	add	x1, x1, #0x7a8
  412c6c:	mov	x0, x23
  412c70:	bl	402890 <fprintf@plt>
  412c74:	ldrb	w2, [x22, #6]
  412c78:	ldrb	w0, [x22, #7]
  412c7c:	sub	w2, w2, w0
  412c80:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  412c84:	add	x1, x1, #0x7c8
  412c88:	mov	x0, x23
  412c8c:	bl	402890 <fprintf@plt>
  412c90:	ldrb	w2, [x22, #7]
  412c94:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  412c98:	add	x1, x1, #0x7e0
  412c9c:	mov	x0, x23
  412ca0:	bl	402890 <fprintf@plt>
  412ca4:	ldrb	w2, [x22, #4]
  412ca8:	cmp	w2, #0x2
  412cac:	b.eq	412a00 <ferror@plt+0x10130>  // b.none
  412cb0:	b.ls	412958 <ferror@plt+0x10088>  // b.plast
  412cb4:	cmp	w2, #0x3
  412cb8:	b.eq	412a0c <ferror@plt+0x1013c>  // b.none
  412cbc:	cmp	w2, #0x4
  412cc0:	b.ne	412a18 <ferror@plt+0x10148>  // b.any
  412cc4:	adrp	x3, 459000 <_obstack_memory_used@@Base+0x12094>
  412cc8:	add	x3, x3, #0x740
  412ccc:	b	412970 <ferror@plt+0x100a0>
  412cd0:	ldr	w2, [x1, #56]
  412cd4:	ldr	w0, [x1, #36]
  412cd8:	mov	w3, #0x80000000            	// #-2147483648
  412cdc:	cbz	w0, 412cf0 <ferror@plt+0x10420>
  412ce0:	sub	w0, w0, #0x1
  412ce4:	ldr	x1, [x1, #24]
  412ce8:	sbfiz	x0, x0, #5, #32
  412cec:	ldr	w3, [x1, x0]
  412cf0:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  412cf4:	add	x1, x1, #0x878
  412cf8:	mov	x0, x23
  412cfc:	bl	41140c <ferror@plt+0xeb3c>
  412d00:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  412d04:	ldr	x1, [x0, #1896]
  412d08:	ldr	w0, [x1, #36]
  412d0c:	cbz	w0, 412ebc <ferror@plt+0x105ec>
  412d10:	mov	w28, #0x0                   	// #0
  412d14:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  412d18:	add	x2, x2, #0x890
  412d1c:	str	x2, [sp, #96]
  412d20:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  412d24:	add	x2, x2, #0x2e8
  412d28:	str	x2, [sp, #104]
  412d2c:	adrp	x27, 459000 <_obstack_memory_used@@Base+0x12094>
  412d30:	add	x27, x27, #0x980
  412d34:	b	412e0c <ferror@plt+0x1053c>
  412d38:	sub	w3, w19, w3
  412d3c:	mov	w2, w19
  412d40:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  412d44:	add	x1, x1, #0x948
  412d48:	mov	x0, x23
  412d4c:	bl	402890 <fprintf@plt>
  412d50:	b	412d7c <ferror@plt+0x104ac>
  412d54:	mov	w3, w19
  412d58:	mov	w2, w20
  412d5c:	mov	x1, x27
  412d60:	mov	w0, w19
  412d64:	bl	405abc <ferror@plt+0x31ec>
  412d68:	mov	w3, w22
  412d6c:	mov	w2, w20
  412d70:	mov	x1, x26
  412d74:	mov	w0, w19
  412d78:	bl	405abc <ferror@plt+0x31ec>
  412d7c:	add	w20, w20, #0x1
  412d80:	add	w21, w21, #0x2
  412d84:	ldr	w0, [x24, #4]
  412d88:	cmp	w20, w0
  412d8c:	b.cs	412de8 <ferror@plt+0x10518>  // b.hs, b.nlast
  412d90:	ldr	x0, [x24, #16]
  412d94:	ldr	w19, [x0, w21, uxtw #2]
  412d98:	add	w1, w21, #0x1
  412d9c:	ldr	w22, [x0, x1, lsl #2]
  412da0:	mov	w4, w22
  412da4:	mov	w3, w19
  412da8:	mov	w2, w20
  412dac:	mov	x1, x25
  412db0:	mov	x0, x23
  412db4:	bl	402890 <fprintf@plt>
  412db8:	cmp	w19, w22
  412dbc:	b.ne	412d54 <ferror@plt+0x10484>  // b.any
  412dc0:	ldr	w3, [x24]
  412dc4:	cmp	w19, w3
  412dc8:	b.cs	412d38 <ferror@plt+0x10468>  // b.hs, b.nlast
  412dcc:	mov	w3, w19
  412dd0:	mov	w2, w20
  412dd4:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  412dd8:	add	x1, x1, #0x918
  412ddc:	mov	w0, w19
  412de0:	bl	405abc <ferror@plt+0x31ec>
  412de4:	b	412d7c <ferror@plt+0x104ac>
  412de8:	mov	x1, x23
  412dec:	mov	w0, #0xa                   	// #10
  412df0:	bl	402380 <fputc@plt>
  412df4:	add	w28, w28, #0x1
  412df8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  412dfc:	ldr	x1, [x0, #1896]
  412e00:	ldr	w0, [x1, #36]
  412e04:	cmp	w0, w28
  412e08:	b.ls	412ebc <ferror@plt+0x105ec>  // b.plast
  412e0c:	sub	w0, w0, #0x1
  412e10:	sub	w19, w0, w28
  412e14:	sbfiz	x20, x19, #5, #32
  412e18:	ldr	x21, [x1, #24]
  412e1c:	add	x24, x21, x20
  412e20:	mov	x0, x24
  412e24:	bl	428b98 <ferror@plt+0x262c8>
  412e28:	ldr	w4, [x24, #4]
  412e2c:	mov	x3, x0
  412e30:	mov	w2, w19
  412e34:	ldr	x1, [sp, #96]
  412e38:	mov	x0, x23
  412e3c:	bl	402890 <fprintf@plt>
  412e40:	ldr	w2, [x21, x20]
  412e44:	ldr	w3, [x24, #4]
  412e48:	add	w3, w2, w3
  412e4c:	ldr	x1, [sp, #104]
  412e50:	mov	x0, x23
  412e54:	bl	402890 <fprintf@plt>
  412e58:	ldr	w0, [x24, #24]
  412e5c:	mov	w2, w0
  412e60:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  412e64:	add	x1, x1, #0x8b0
  412e68:	bl	405abc <ferror@plt+0x31ec>
  412e6c:	ldr	w2, [x21, x20]
  412e70:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  412e74:	add	x1, x1, #0x8d0
  412e78:	mov	x0, x23
  412e7c:	bl	402890 <fprintf@plt>
  412e80:	mov	x3, x23
  412e84:	mov	x2, #0x13                  	// #19
  412e88:	mov	x1, #0x1                   	// #1
  412e8c:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  412e90:	add	x0, x0, #0x8f0
  412e94:	bl	4026d0 <fwrite@plt>
  412e98:	ldr	w0, [x24, #4]
  412e9c:	cbz	w0, 412de8 <ferror@plt+0x10518>
  412ea0:	mov	w21, #0x0                   	// #0
  412ea4:	mov	w20, #0x0                   	// #0
  412ea8:	adrp	x25, 459000 <_obstack_memory_used@@Base+0x12094>
  412eac:	add	x25, x25, #0x908
  412eb0:	adrp	x26, 459000 <_obstack_memory_used@@Base+0x12094>
  412eb4:	add	x26, x26, #0x9a0
  412eb8:	b	412d90 <ferror@plt+0x104c0>
  412ebc:	mov	w3, #0x80000000            	// #-2147483648
  412ec0:	mov	w2, #0x7fffffff            	// #2147483647
  412ec4:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  412ec8:	add	x1, x1, #0x9c0
  412ecc:	mov	x0, x23
  412ed0:	bl	41140c <ferror@plt+0xeb3c>
  412ed4:	mov	w3, #0xffffffff            	// #-1
  412ed8:	mov	w2, #0x80000000            	// #-2147483648
  412edc:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  412ee0:	add	x1, x1, #0x9d0
  412ee4:	mov	x0, x23
  412ee8:	bl	41140c <ferror@plt+0xeb3c>
  412eec:	ldp	x19, x20, [sp, #16]
  412ef0:	ldp	x21, x22, [sp, #32]
  412ef4:	ldp	x23, x24, [sp, #48]
  412ef8:	ldp	x25, x26, [sp, #64]
  412efc:	ldp	x27, x28, [sp, #80]
  412f00:	ldp	x29, x30, [sp], #144
  412f04:	ret
  412f08:	stp	x29, x30, [sp, #-48]!
  412f0c:	mov	x29, sp
  412f10:	stp	x19, x20, [sp, #16]
  412f14:	str	x21, [sp, #32]
  412f18:	mov	x21, x0
  412f1c:	mov	w19, w1
  412f20:	mov	x20, x2
  412f24:	str	w1, [x0]
  412f28:	mov	x3, #0x0                   	// #0
  412f2c:	mov	x2, #0x0                   	// #0
  412f30:	mov	x1, #0x0                   	// #0
  412f34:	sbfiz	x0, x19, #2, #32
  412f38:	bl	4040b4 <ferror@plt+0x17e4>
  412f3c:	str	x0, [x21, #8]
  412f40:	cmp	w19, #0x0
  412f44:	b.le	412f60 <ferror@plt+0x10690>
  412f48:	mov	x3, #0x0                   	// #0
  412f4c:	ldr	w4, [x20, x3, lsl #2]
  412f50:	str	w4, [x0, x3, lsl #2]
  412f54:	add	x3, x3, #0x1
  412f58:	cmp	w19, w3
  412f5c:	b.gt	412f4c <ferror@plt+0x1067c>
  412f60:	ldp	x19, x20, [sp, #16]
  412f64:	ldr	x21, [sp, #32]
  412f68:	ldp	x29, x30, [sp], #48
  412f6c:	ret
  412f70:	stp	x29, x30, [sp, #-64]!
  412f74:	mov	x29, sp
  412f78:	stp	x19, x20, [sp, #16]
  412f7c:	stp	x21, x22, [sp, #32]
  412f80:	str	x23, [sp, #48]
  412f84:	mov	x22, x0
  412f88:	mov	x3, #0x1                   	// #1
  412f8c:	mov	x2, #0x0                   	// #0
  412f90:	adrp	x1, 413000 <ferror@plt+0x10730>
  412f94:	add	x1, x1, #0xc10
  412f98:	mov	x0, #0x30                  	// #48
  412f9c:	bl	4040b4 <ferror@plt+0x17e4>
  412fa0:	mov	x19, x0
  412fa4:	str	xzr, [x0, #16]
  412fa8:	str	xzr, [x0, #24]
  412fac:	str	wzr, [x0, #32]
  412fb0:	str	wzr, [x0, #36]
  412fb4:	mov	w0, #0x1                   	// #1
  412fb8:	strb	w0, [x19, #44]
  412fbc:	mov	x0, #0x40                  	// #64
  412fc0:	bl	403c9c <ferror@plt+0x13cc>
  412fc4:	mov	w20, w0
  412fc8:	ubfiz	x1, x20, #4, #32
  412fcc:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  412fd0:	add	x0, x0, #0x2b0
  412fd4:	ldr	w23, [x0, x1]
  412fd8:	lsl	x21, x23, #4
  412fdc:	mov	x3, #0x0                   	// #0
  412fe0:	mov	x2, #0x0                   	// #0
  412fe4:	mov	x1, #0x0                   	// #0
  412fe8:	mov	x0, x21
  412fec:	bl	4040e4 <ferror@plt+0x1814>
  412ff0:	cbz	x0, 413030 <ferror@plt+0x10760>
  412ff4:	mov	x1, x0
  412ff8:	cbz	x23, 41300c <ferror@plt+0x1073c>
  412ffc:	add	x21, x21, x0
  413000:	str	wzr, [x0], #16
  413004:	cmp	x0, x21
  413008:	b.ne	413000 <ferror@plt+0x10730>  // b.any
  41300c:	str	x1, [x19]
  413010:	str	x23, [x19, #8]
  413014:	str	w20, [x19, #40]
  413018:	str	x19, [x22]
  41301c:	ldp	x19, x20, [sp, #16]
  413020:	ldp	x21, x22, [sp, #32]
  413024:	ldr	x23, [sp, #48]
  413028:	ldp	x29, x30, [sp], #64
  41302c:	ret
  413030:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  413034:	add	x2, x2, #0x290
  413038:	mov	w1, #0x2b5                 	// #693
  41303c:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  413040:	add	x0, x0, #0x2a0
  413044:	bl	4062a0 <ferror@plt+0x39d0>
  413048:	stp	x29, x30, [sp, #-32]!
  41304c:	mov	x29, sp
  413050:	str	x19, [sp, #16]
  413054:	adrp	x19, 488000 <_obstack_memory_used@@Base+0x41094>
  413058:	mov	x3, #0x0                   	// #0
  41305c:	mov	w2, #0x1                   	// #1
  413060:	mov	w1, w0
  413064:	ldr	x0, [x19, #1896]
  413068:	bl	4292dc <ferror@plt+0x26a0c>
  41306c:	mov	w1, w0
  413070:	ldr	x0, [x19, #1896]
  413074:	bl	428f64 <ferror@plt+0x26694>
  413078:	ldr	x19, [sp, #16]
  41307c:	ldp	x29, x30, [sp], #32
  413080:	ret
  413084:	stp	x29, x30, [sp, #-48]!
  413088:	mov	x29, sp
  41308c:	stp	x19, x20, [sp, #16]
  413090:	str	x21, [sp, #32]
  413094:	cbz	x2, 413150 <ferror@plt+0x10880>
  413098:	mov	x21, x0
  41309c:	mov	w0, w1
  4130a0:	mov	x20, x2
  4130a4:	mov	x19, x3
  4130a8:	cbz	x3, 413168 <ferror@plt+0x10898>
  4130ac:	bl	413048 <ferror@plt+0x10778>
  4130b0:	ldr	x2, [x21]
  4130b4:	ldr	w1, [x2, #32]
  4130b8:	add	w1, w1, #0x1
  4130bc:	str	w1, [x2, #32]
  4130c0:	ldr	w7, [x2, #40]
  4130c4:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  4130c8:	add	x1, x1, #0x2b0
  4130cc:	ubfiz	x4, x7, #4, #32
  4130d0:	add	x3, x1, x4
  4130d4:	ldr	w6, [x1, x4]
  4130d8:	ldr	w9, [x3, #12]
  4130dc:	mov	w5, w0
  4130e0:	ldr	w1, [x3, #4]
  4130e4:	mul	x1, x1, x5
  4130e8:	lsr	x1, x1, #32
  4130ec:	sub	w4, w0, w1
  4130f0:	add	w1, w1, w4, lsr #1
  4130f4:	lsr	w1, w1, w9
  4130f8:	msub	w1, w1, w6, w0
  4130fc:	ldr	x3, [x2]
  413100:	ubfiz	x8, x1, #4, #32
  413104:	add	x4, x3, x8
  413108:	ldr	w8, [x3, x8]
  41310c:	cmp	w8, #0x0
  413110:	ccmp	w0, w8, #0x4, ne  // ne = any
  413114:	b.ne	413180 <ferror@plt+0x108b0>  // b.any
  413118:	ldr	w1, [x4]
  41311c:	mov	w0, #0x0                   	// #0
  413120:	cbz	w1, 413140 <ferror@plt+0x10870>
  413124:	ldr	x0, [x4, #8]
  413128:	ldr	w0, [x0]
  41312c:	str	w0, [x20]
  413130:	ldr	x0, [x4, #8]
  413134:	ldr	x0, [x0, #8]
  413138:	str	x0, [x19]
  41313c:	mov	w0, #0x1                   	// #1
  413140:	ldp	x19, x20, [sp, #16]
  413144:	ldr	x21, [sp, #32]
  413148:	ldp	x29, x30, [sp], #48
  41314c:	ret
  413150:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  413154:	add	x2, x2, #0x9e8
  413158:	mov	w1, #0x50d                 	// #1293
  41315c:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  413160:	add	x0, x0, #0x2d0
  413164:	bl	4062a0 <ferror@plt+0x39d0>
  413168:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  41316c:	add	x2, x2, #0x9e8
  413170:	mov	w1, #0x50e                 	// #1294
  413174:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  413178:	add	x0, x0, #0x2d0
  41317c:	bl	4062a0 <ferror@plt+0x39d0>
  413180:	ldr	x10, [x2, #8]
  413184:	ubfiz	x7, x7, #4, #32
  413188:	adrp	x8, 458000 <_obstack_memory_used@@Base+0x11094>
  41318c:	add	x8, x8, #0x2b0
  413190:	add	x7, x8, x7
  413194:	ldr	w4, [x7, #8]
  413198:	mul	x4, x4, x5
  41319c:	lsr	x7, x4, #32
  4131a0:	add	w5, w0, #0x1
  4131a4:	sub	w4, w0, w7
  4131a8:	add	w4, w7, w4, lsr #1
  4131ac:	lsr	w4, w4, w9
  4131b0:	sub	w6, w6, #0x2
  4131b4:	msub	w5, w4, w6, w5
  4131b8:	ldr	w4, [x2, #36]
  4131bc:	add	w4, w4, #0x1
  4131c0:	str	w4, [x2, #36]
  4131c4:	add	w1, w1, w5
  4131c8:	sub	w4, w1, w10
  4131cc:	cmp	x10, w1, uxtw
  4131d0:	csel	w1, w4, w1, ls  // ls = plast
  4131d4:	ubfiz	x6, x1, #4, #32
  4131d8:	add	x4, x3, x6
  4131dc:	ldr	w6, [x3, x6]
  4131e0:	cmp	w6, #0x0
  4131e4:	ccmp	w0, w6, #0x4, ne  // ne = any
  4131e8:	b.ne	4131b8 <ferror@plt+0x108e8>  // b.any
  4131ec:	b	413118 <ferror@plt+0x10848>
  4131f0:	stp	x29, x30, [sp, #-288]!
  4131f4:	mov	x29, sp
  4131f8:	str	x0, [sp, #104]
  4131fc:	str	w3, [sp, #144]
  413200:	str	w4, [sp, #116]
  413204:	str	w5, [sp, #128]
  413208:	str	w6, [sp, #132]
  41320c:	str	x7, [sp, #136]
  413210:	cbz	x7, 413260 <ferror@plt+0x10990>
  413214:	stp	x19, x20, [sp, #16]
  413218:	mov	x20, x1
  41321c:	mov	w19, w2
  413220:	add	x0, sp, #0x110
  413224:	bl	415a7c <ferror@plt+0x131ac>
  413228:	str	w19, [sp, #160]
  41322c:	ldr	x0, [sp, #104]
  413230:	cbz	x0, 41328c <ferror@plt+0x109bc>
  413234:	stp	x21, x22, [sp, #32]
  413238:	cbnz	w19, 4132b4 <ferror@plt+0x109e4>
  41323c:	adrp	x21, 459000 <_obstack_memory_used@@Base+0x12094>
  413240:	add	x21, x21, #0xc00
  413244:	add	x0, sp, #0x110
  413248:	bl	415ab4 <ferror@plt+0x131e4>
  41324c:	mov	x0, x21
  413250:	ldp	x19, x20, [sp, #16]
  413254:	ldp	x21, x22, [sp, #32]
  413258:	ldp	x29, x30, [sp], #288
  41325c:	ret
  413260:	stp	x19, x20, [sp, #16]
  413264:	stp	x21, x22, [sp, #32]
  413268:	stp	x23, x24, [sp, #48]
  41326c:	stp	x25, x26, [sp, #64]
  413270:	stp	x27, x28, [sp, #80]
  413274:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  413278:	add	x2, x2, #0xc50
  41327c:	mov	w1, #0x5fa                 	// #1530
  413280:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  413284:	add	x0, x0, #0x2d0
  413288:	bl	4062a0 <ferror@plt+0x39d0>
  41328c:	stp	x21, x22, [sp, #32]
  413290:	stp	x23, x24, [sp, #48]
  413294:	stp	x25, x26, [sp, #64]
  413298:	stp	x27, x28, [sp, #80]
  41329c:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  4132a0:	add	x2, x2, #0xc70
  4132a4:	mov	w1, #0x551                 	// #1361
  4132a8:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  4132ac:	add	x0, x0, #0x2d0
  4132b0:	bl	4062a0 <ferror@plt+0x39d0>
  4132b4:	ldr	x0, [sp, #104]
  4132b8:	bl	41bb80 <ferror@plt+0x192b0>
  4132bc:	ldrb	w0, [x0, #45]
  4132c0:	cmp	w0, #0x2
  4132c4:	b.ne	413628 <ferror@plt+0x10d58>  // b.any
  4132c8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  4132cc:	ldr	x0, [x0, #1896]
  4132d0:	ldrb	w0, [x0, #116]
  4132d4:	str	w0, [sp, #148]
  4132d8:	cbnz	w0, 413634 <ferror@plt+0x10d64>
  4132dc:	mov	w0, #0x1                   	// #1
  4132e0:	str	w0, [sp, #164]
  4132e4:	add	x0, sp, #0xa0
  4132e8:	str	x0, [sp, #168]
  4132ec:	cbz	x20, 413338 <ferror@plt+0x10a68>
  4132f0:	add	x3, sp, #0xa8
  4132f4:	add	x2, sp, #0xa4
  4132f8:	ldr	w1, [sp, #160]
  4132fc:	mov	x0, x20
  413300:	bl	413084 <ferror@plt+0x107b4>
  413304:	ldrsw	x0, [sp, #164]
  413308:	mov	w20, w0
  41330c:	cbnz	w0, 41333c <ferror@plt+0x10a6c>
  413310:	ldr	w3, [sp, #164]
  413314:	cmp	w3, #0x0
  413318:	b.le	4135b8 <ferror@plt+0x10ce8>
  41331c:	stp	x23, x24, [sp, #48]
  413320:	stp	x25, x26, [sp, #64]
  413324:	stp	x27, x28, [sp, #80]
  413328:	mov	x20, #0x0                   	// #0
  41332c:	mov	x19, #0x0                   	// #0
  413330:	mov	x27, #0x0                   	// #0
  413334:	b	4136fc <ferror@plt+0x10e2c>
  413338:	mov	w20, #0x1                   	// #1
  41333c:	ubfiz	x1, x20, #4, #32
  413340:	add	x1, x1, #0x8
  413344:	mov	x0, #0x0                   	// #0
  413348:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  41334c:	mov	x19, x0
  413350:	ldr	w0, [x0]
  413354:	bfxil	w0, w20, #0, #31
  413358:	str	w0, [x19]
  41335c:	ubfx	x0, x0, #24, #7
  413360:	strb	w0, [x19, #3]
  413364:	str	wzr, [x19, #4]
  413368:	ldrsw	x21, [sp, #164]
  41336c:	cbz	w21, 413a4c <ferror@plt+0x1117c>
  413370:	ubfiz	x1, x21, #4, #32
  413374:	add	x1, x1, #0x8
  413378:	mov	x0, #0x0                   	// #0
  41337c:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  413380:	mov	x20, x0
  413384:	ldr	w0, [x0]
  413388:	bfxil	w0, w21, #0, #31
  41338c:	str	w0, [x20]
  413390:	ubfx	x0, x0, #24, #7
  413394:	strb	w0, [x20, #3]
  413398:	str	wzr, [x20, #4]
  41339c:	ldr	w3, [sp, #164]
  4133a0:	cmp	w3, #0x0
  4133a4:	b.le	413448 <ferror@plt+0x10b78>
  4133a8:	stp	x23, x24, [sp, #48]
  4133ac:	stp	x25, x26, [sp, #64]
  4133b0:	stp	x27, x28, [sp, #80]
  4133b4:	b	413330 <ferror@plt+0x10a60>
  4133b8:	mov	w0, #0x5fffffff            	// #1610612735
  4133bc:	cmp	w22, w0
  4133c0:	b.hi	4134c8 <ferror@plt+0x10bf8>  // b.pmore
  4133c4:	cmp	w24, w0
  4133c8:	b.ls	413748 <ferror@plt+0x10e78>  // b.plast
  4133cc:	adrp	x21, 459000 <_obstack_memory_used@@Base+0x12094>
  4133d0:	add	x21, x21, #0xaa8
  4133d4:	ldp	x23, x24, [sp, #48]
  4133d8:	ldp	x25, x26, [sp, #64]
  4133dc:	ldp	x27, x28, [sp, #80]
  4133e0:	b	413470 <ferror@plt+0x10ba0>
  4133e4:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  4133e8:	add	x2, x2, #0xe90
  4133ec:	mov	w1, #0x44                  	// #68
  4133f0:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  4133f4:	add	x0, x0, #0xe98
  4133f8:	bl	4062a0 <ferror@plt+0x39d0>
  4133fc:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  413400:	add	x2, x2, #0xe90
  413404:	mov	w1, #0x45                  	// #69
  413408:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  41340c:	add	x0, x0, #0xe98
  413410:	bl	4062a0 <ferror@plt+0x39d0>
  413414:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  413418:	add	x2, x2, #0xe90
  41341c:	mov	w1, #0x47                  	// #71
  413420:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  413424:	add	x0, x0, #0xe98
  413428:	bl	4062a0 <ferror@plt+0x39d0>
  41342c:	add	w1, w28, #0x1
  413430:	mov	w0, #0x1                   	// #1
  413434:	str	w0, [sp, #152]
  413438:	b	4139c8 <ferror@plt+0x110f8>
  41343c:	ldp	x23, x24, [sp, #48]
  413440:	ldp	x25, x26, [sp, #64]
  413444:	ldp	x27, x28, [sp, #80]
  413448:	add	x1, x19, #0x8
  41344c:	add	x2, x20, #0x8
  413450:	cmp	x20, #0x0
  413454:	ldr	w5, [sp, #144]
  413458:	add	x4, sp, #0x110
  41345c:	sxtw	x3, w3
  413460:	csel	x2, x2, x20, ne  // ne = any
  413464:	ldr	x0, [sp, #104]
  413468:	bl	418ca8 <ferror@plt+0x163d8>
  41346c:	mov	x21, x0
  413470:	cbz	x20, 413484 <ferror@plt+0x10bb4>
  413474:	ldrsb	w0, [x20, #3]
  413478:	tbnz	w0, #31, 4135c8 <ferror@plt+0x10cf8>
  41347c:	mov	x0, x20
  413480:	bl	402690 <free@plt>
  413484:	cbz	x19, 413650 <ferror@plt+0x10d80>
  413488:	mov	x20, #0x0                   	// #0
  41348c:	add	x22, x19, #0x10
  413490:	ldr	w0, [x19, #4]
  413494:	cmp	w0, w20
  413498:	b.ls	413640 <ferror@plt+0x10d70>  // b.plast
  41349c:	lsl	x0, x20, #4
  4134a0:	ldr	x0, [x22, x0]
  4134a4:	bl	402690 <free@plt>
  4134a8:	add	x20, x20, #0x1
  4134ac:	b	413490 <ferror@plt+0x10bc0>
  4134b0:	adrp	x21, 459000 <_obstack_memory_used@@Base+0x12094>
  4134b4:	add	x21, x21, #0xa60
  4134b8:	ldp	x23, x24, [sp, #48]
  4134bc:	ldp	x25, x26, [sp, #64]
  4134c0:	ldp	x27, x28, [sp, #80]
  4134c4:	b	413470 <ferror@plt+0x10ba0>
  4134c8:	adrp	x21, 459000 <_obstack_memory_used@@Base+0x12094>
  4134cc:	add	x21, x21, #0xa70
  4134d0:	ldp	x23, x24, [sp, #48]
  4134d4:	ldp	x25, x26, [sp, #64]
  4134d8:	ldp	x27, x28, [sp, #80]
  4134dc:	b	413470 <ferror@plt+0x10ba0>
  4134e0:	adrp	x21, 459000 <_obstack_memory_used@@Base+0x12094>
  4134e4:	add	x21, x21, #0xae0
  4134e8:	ldp	x23, x24, [sp, #48]
  4134ec:	ldp	x25, x26, [sp, #64]
  4134f0:	ldp	x27, x28, [sp, #80]
  4134f4:	b	413470 <ferror@plt+0x10ba0>
  4134f8:	adrp	x21, 459000 <_obstack_memory_used@@Base+0x12094>
  4134fc:	add	x21, x21, #0xb08
  413500:	ldp	x23, x24, [sp, #48]
  413504:	ldp	x25, x26, [sp, #64]
  413508:	ldp	x27, x28, [sp, #80]
  41350c:	b	413470 <ferror@plt+0x10ba0>
  413510:	adrp	x21, 459000 <_obstack_memory_used@@Base+0x12094>
  413514:	add	x21, x21, #0xb30
  413518:	ldp	x23, x24, [sp, #48]
  41351c:	ldp	x25, x26, [sp, #64]
  413520:	ldp	x27, x28, [sp, #80]
  413524:	b	413470 <ferror@plt+0x10ba0>
  413528:	adrp	x21, 459000 <_obstack_memory_used@@Base+0x12094>
  41352c:	add	x21, x21, #0xb50
  413530:	ldp	x23, x24, [sp, #48]
  413534:	ldp	x25, x26, [sp, #64]
  413538:	ldp	x27, x28, [sp, #80]
  41353c:	b	413470 <ferror@plt+0x10ba0>
  413540:	adrp	x21, 459000 <_obstack_memory_used@@Base+0x12094>
  413544:	add	x21, x21, #0xb70
  413548:	ldp	x23, x24, [sp, #48]
  41354c:	ldp	x25, x26, [sp, #64]
  413550:	ldp	x27, x28, [sp, #80]
  413554:	b	413470 <ferror@plt+0x10ba0>
  413558:	adrp	x21, 459000 <_obstack_memory_used@@Base+0x12094>
  41355c:	add	x21, x21, #0xa08
  413560:	ldp	x23, x24, [sp, #48]
  413564:	ldp	x25, x26, [sp, #64]
  413568:	ldp	x27, x28, [sp, #80]
  41356c:	b	413470 <ferror@plt+0x10ba0>
  413570:	adrp	x21, 459000 <_obstack_memory_used@@Base+0x12094>
  413574:	add	x21, x21, #0xa08
  413578:	ldp	x23, x24, [sp, #48]
  41357c:	ldp	x25, x26, [sp, #64]
  413580:	ldp	x27, x28, [sp, #80]
  413584:	b	413470 <ferror@plt+0x10ba0>
  413588:	adrp	x21, 459000 <_obstack_memory_used@@Base+0x12094>
  41358c:	add	x21, x21, #0xa28
  413590:	ldp	x23, x24, [sp, #48]
  413594:	ldp	x25, x26, [sp, #64]
  413598:	ldp	x27, x28, [sp, #80]
  41359c:	b	413470 <ferror@plt+0x10ba0>
  4135a0:	adrp	x21, 459000 <_obstack_memory_used@@Base+0x12094>
  4135a4:	add	x21, x21, #0xb88
  4135a8:	ldp	x23, x24, [sp, #48]
  4135ac:	ldp	x25, x26, [sp, #64]
  4135b0:	ldp	x27, x28, [sp, #80]
  4135b4:	b	413470 <ferror@plt+0x10ba0>
  4135b8:	mov	x20, #0x0                   	// #0
  4135bc:	mov	x19, #0x0                   	// #0
  4135c0:	mov	x1, #0x0                   	// #0
  4135c4:	b	41344c <ferror@plt+0x10b7c>
  4135c8:	str	wzr, [x20, #4]
  4135cc:	b	413484 <ferror@plt+0x10bb4>
  4135d0:	str	wzr, [x19, #4]
  4135d4:	b	413650 <ferror@plt+0x10d80>
  4135d8:	ldr	x0, [sp, #272]
  4135dc:	ldr	w1, [sp, #132]
  4135e0:	add	x6, x0, w1, sxtw #3
  4135e4:	ldr	w1, [sp, #128]
  4135e8:	sbfiz	x5, x1, #3, #32
  4135ec:	ldr	w1, [sp, #116]
  4135f0:	sbfiz	x4, x1, #3, #32
  4135f4:	ldr	w2, [x6, #4]
  4135f8:	ldr	w1, [x0, x5]
  4135fc:	ldr	w0, [x0, x4]
  413600:	bl	41219c <ferror@plt+0xf8cc>
  413604:	ldr	x1, [sp, #136]
  413608:	str	w0, [x1]
  41360c:	b	413244 <ferror@plt+0x10974>
  413610:	adrp	x21, 459000 <_obstack_memory_used@@Base+0x12094>
  413614:	add	x21, x21, #0xbd0
  413618:	b	413244 <ferror@plt+0x10974>
  41361c:	adrp	x21, 459000 <_obstack_memory_used@@Base+0x12094>
  413620:	add	x21, x21, #0xbb8
  413624:	b	413244 <ferror@plt+0x10974>
  413628:	adrp	x21, 459000 <_obstack_memory_used@@Base+0x12094>
  41362c:	add	x21, x21, #0xc18
  413630:	b	413244 <ferror@plt+0x10974>
  413634:	adrp	x21, 459000 <_obstack_memory_used@@Base+0x12094>
  413638:	add	x21, x21, #0xc38
  41363c:	b	413244 <ferror@plt+0x10974>
  413640:	ldrsb	w0, [x19, #3]
  413644:	tbnz	w0, #31, 4135d0 <ferror@plt+0x10d00>
  413648:	mov	x0, x19
  41364c:	bl	402690 <free@plt>
  413650:	cbnz	x21, 413244 <ferror@plt+0x10974>
  413654:	ldr	w0, [sp, #280]
  413658:	ldr	w1, [sp, #116]
  41365c:	cmp	w1, w0
  413660:	b.ge	413610 <ferror@plt+0x10d40>  // b.tcont
  413664:	ldr	w1, [sp, #128]
  413668:	cmp	w1, w0
  41366c:	b.ge	41361c <ferror@plt+0x10d4c>  // b.tcont
  413670:	ldr	w1, [sp, #132]
  413674:	cmp	w0, w1
  413678:	b.gt	4135d8 <ferror@plt+0x10d08>
  41367c:	adrp	x21, 459000 <_obstack_memory_used@@Base+0x12094>
  413680:	add	x21, x21, #0xbe8
  413684:	b	413244 <ferror@plt+0x10974>
  413688:	ldr	w1, [x20, #4]
  41368c:	ldr	w0, [x20]
  413690:	add	w1, w1, #0x1
  413694:	and	w0, w0, #0x7fffffff
  413698:	bl	40f5bc <ferror@plt+0xccec>
  41369c:	mov	w21, w0
  4136a0:	ldr	w22, [x20, #4]
  4136a4:	ubfiz	x1, x21, #4, #32
  4136a8:	add	x1, x1, #0x8
  4136ac:	mov	x0, x20
  4136b0:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  4136b4:	mov	x20, x0
  4136b8:	ldr	w0, [x0]
  4136bc:	bfxil	w0, w21, #0, #31
  4136c0:	str	w0, [x20]
  4136c4:	ubfx	x0, x0, #24, #7
  4136c8:	strb	w0, [x20, #3]
  4136cc:	str	w22, [x20, #4]
  4136d0:	ldr	w0, [x20, #4]
  4136d4:	add	w1, w0, #0x1
  4136d8:	str	w1, [x20, #4]
  4136dc:	ubfiz	x0, x0, #4, #32
  4136e0:	add	x0, x20, x0
  4136e4:	ldp	x2, x3, [sp, #192]
  4136e8:	stp	x2, x3, [x0, #8]
  4136ec:	ldr	w3, [sp, #164]
  4136f0:	add	x27, x27, #0x1
  4136f4:	cmp	w3, w27
  4136f8:	b.le	41343c <ferror@plt+0x10b6c>
  4136fc:	adrp	x21, 488000 <_obstack_memory_used@@Base+0x41094>
  413700:	ldr	x0, [sp, #168]
  413704:	ldr	w1, [x0, x27, lsl #2]
  413708:	ldr	x0, [x21, #1896]
  41370c:	bl	428f64 <ferror@plt+0x26694>
  413710:	mov	x22, x0
  413714:	lsr	x24, x0, #32
  413718:	ldr	x2, [x21, #1896]
  41371c:	ldr	w0, [x2, #36]
  413720:	mov	w1, #0x80000000            	// #-2147483648
  413724:	cbz	w0, 413738 <ferror@plt+0x10e68>
  413728:	sub	w0, w0, #0x1
  41372c:	ldr	x1, [x2, #24]
  413730:	sbfiz	x0, x0, #5, #32
  413734:	ldr	w1, [x1, x0]
  413738:	cmp	w22, w1
  41373c:	b.cc	4133b8 <ferror@plt+0x10ae8>  // b.lo, b.ul, b.last
  413740:	cmp	w22, w24
  413744:	b.ne	4134b0 <ferror@plt+0x10be0>  // b.any
  413748:	add	x8, sp, #0xd0
  41374c:	mov	w1, #0x1                   	// #1
  413750:	mov	w0, w22
  413754:	bl	4120e8 <ferror@plt+0xf818>
  413758:	ldr	x25, [sp, #208]
  41375c:	ldr	w26, [sp, #216]
  413760:	ldr	w23, [sp, #220]
  413764:	add	x8, sp, #0xf0
  413768:	mov	w1, #0x2                   	// #2
  41376c:	mov	w0, w24
  413770:	bl	4120e8 <ferror@plt+0xf818>
  413774:	ldr	w21, [sp, #252]
  413778:	ldr	x0, [sp, #240]
  41377c:	cmp	x25, x0
  413780:	b.ne	4134e0 <ferror@plt+0x10c10>  // b.any
  413784:	ldr	w0, [sp, #248]
  413788:	cmp	w26, w0
  41378c:	b.ne	4134f8 <ferror@plt+0x10c28>  // b.any
  413790:	cmp	w23, w21
  413794:	b.gt	413510 <ferror@plt+0x10c40>
  413798:	mov	w1, w26
  41379c:	mov	x0, x25
  4137a0:	bl	411ee4 <ferror@plt+0xf614>
  4137a4:	mov	x3, x1
  4137a8:	cbz	x0, 413528 <ferror@plt+0x10c58>
  4137ac:	sub	w21, w21, w23
  4137b0:	add	w21, w21, #0x1
  4137b4:	sxtw	x1, w21
  4137b8:	sub	w2, w23, #0x1
  4137bc:	sxtw	x4, w2
  4137c0:	add	x5, x1, x4
  4137c4:	cmp	x3, x5
  4137c8:	b.cc	413540 <ferror@plt+0x10c70>  // b.lo, b.ul, b.last
  4137cc:	tbnz	w2, #31, 4133e4 <ferror@plt+0x10b14>
  4137d0:	cmp	w2, w3
  4137d4:	b.ge	4133fc <ferror@plt+0x10b2c>  // b.tcont
  4137d8:	add	w2, w21, w2
  4137dc:	cmp	w3, w2
  4137e0:	b.lt	413414 <ferror@plt+0x10b44>  // b.tstop
  4137e4:	add	x0, x0, x4
  4137e8:	bl	4471f8 <_obstack_memory_used@@Base+0x28c>
  4137ec:	str	x0, [sp, #120]
  4137f0:	cbz	x19, 4139b8 <ferror@plt+0x110e8>
  4137f4:	ldr	w28, [x19, #4]
  4137f8:	ldr	w0, [x19]
  4137fc:	ubfx	x0, x0, #0, #31
  413800:	cmp	w0, w28
  413804:	b.ne	413860 <ferror@plt+0x10f90>  // b.any
  413808:	ldrsb	w0, [x19, #3]
  41380c:	tbnz	w0, #31, 41342c <ferror@plt+0x10b5c>
  413810:	ldr	w1, [x19, #4]
  413814:	ldr	w0, [x19]
  413818:	add	w1, w1, #0x1
  41381c:	and	w0, w0, #0x7fffffff
  413820:	bl	40f5bc <ferror@plt+0xccec>
  413824:	mov	w28, w0
  413828:	ldr	w0, [x19, #4]
  41382c:	str	w0, [sp, #152]
  413830:	ubfiz	x1, x28, #4, #32
  413834:	add	x1, x1, #0x8
  413838:	mov	x0, x19
  41383c:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  413840:	mov	x19, x0
  413844:	ldr	w0, [x0]
  413848:	bfxil	w0, w28, #0, #31
  41384c:	str	w0, [x19]
  413850:	ubfx	x0, x0, #24, #7
  413854:	strb	w0, [x19, #3]
  413858:	ldr	w0, [sp, #152]
  41385c:	str	w0, [x19, #4]
  413860:	ldr	w0, [x19, #4]
  413864:	add	w1, w0, #0x1
  413868:	str	w1, [x19, #4]
  41386c:	ubfiz	x0, x0, #4, #32
  413870:	add	x0, x0, #0x8
  413874:	add	x1, x19, x0
  413878:	str	w21, [x19, x0]
  41387c:	ldr	x0, [sp, #120]
  413880:	str	x0, [x1, #8]
  413884:	adrp	x21, 488000 <_obstack_memory_used@@Base+0x41094>
  413888:	add	x3, sp, #0xb0
  41388c:	mov	w2, #0x1                   	// #1
  413890:	mov	w1, w22
  413894:	ldr	x0, [x21, #1896]
  413898:	bl	4292dc <ferror@plt+0x26a0c>
  41389c:	add	x3, sp, #0xb8
  4138a0:	mov	w2, #0x1                   	// #1
  4138a4:	mov	w1, w24
  4138a8:	ldr	x0, [x21, #1896]
  4138ac:	bl	4292dc <ferror@plt+0x26a0c>
  4138b0:	ldr	x0, [sp, #176]
  4138b4:	cbz	x0, 413558 <ferror@plt+0x10c88>
  4138b8:	ldr	x1, [sp, #184]
  4138bc:	cbz	x1, 413570 <ferror@plt+0x10ca0>
  4138c0:	cmp	x0, x1
  4138c4:	b.eq	4138d8 <ferror@plt+0x11008>  // b.none
  4138c8:	ldr	x3, [x0, #8]
  4138cc:	ldr	x2, [x1, #8]
  4138d0:	cmp	x3, x2
  4138d4:	b.ne	413588 <ferror@plt+0x10cb8>  // b.any
  4138d8:	ldr	x0, [x0, #8]
  4138dc:	cmp	x25, x0
  4138e0:	b.ne	4135a0 <ferror@plt+0x10cd0>  // b.any
  4138e4:	adrp	x21, 488000 <_obstack_memory_used@@Base+0x41094>
  4138e8:	mov	w3, w23
  4138ec:	mov	w2, w26
  4138f0:	ldr	x0, [x21, #1896]
  4138f4:	bl	428ab4 <ferror@plt+0x261e4>
  4138f8:	ldr	x2, [x21, #1896]
  4138fc:	mov	w1, w0
  413900:	add	x0, sp, #0xc0
  413904:	bl	415ef8 <ferror@plt+0x13628>
  413908:	cbz	x20, 413934 <ferror@plt+0x11064>
  41390c:	ldr	w21, [x20, #4]
  413910:	ldr	w0, [x20]
  413914:	ubfx	x0, x0, #0, #31
  413918:	cmp	w0, w21
  41391c:	b.ne	4136d0 <ferror@plt+0x10e00>  // b.any
  413920:	ldrsb	w0, [x20, #3]
  413924:	add	w1, w21, #0x1
  413928:	mov	w23, #0x1                   	// #1
  41392c:	tbz	w0, #31, 413688 <ferror@plt+0x10db8>
  413930:	b	413940 <ferror@plt+0x11070>
  413934:	ldr	w23, [sp, #148]
  413938:	mov	w21, #0x0                   	// #0
  41393c:	mov	w1, #0x1                   	// #1
  413940:	mov	w0, #0x4                   	// #4
  413944:	cmp	w1, w0
  413948:	csel	w22, w1, w0, cs  // cs = hs, nlast
  41394c:	csel	w1, w1, w0, cs  // cs = hs, nlast
  413950:	lsl	x1, x1, #4
  413954:	add	x1, x1, #0x8
  413958:	mov	x0, #0x0                   	// #0
  41395c:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  413960:	ldr	w1, [x0]
  413964:	bfxil	w1, w22, #0, #31
  413968:	str	w1, [x0]
  41396c:	ubfx	x1, x1, #24, #7
  413970:	strb	w1, [x0, #3]
  413974:	str	wzr, [x0, #4]
  413978:	cbz	w23, 4139b0 <ferror@plt+0x110e0>
  41397c:	add	x2, x0, #0x8
  413980:	add	x1, x20, #0x8
  413984:	cbz	w21, 4139a4 <ferror@plt+0x110d4>
  413988:	sub	w3, w21, #0x1
  41398c:	add	x20, x20, x3, lsl #4
  413990:	add	x20, x20, #0x18
  413994:	ldp	x4, x5, [x1], #16
  413998:	stp	x4, x5, [x2], #16
  41399c:	cmp	x20, x1
  4139a0:	b.ne	413994 <ferror@plt+0x110c4>  // b.any
  4139a4:	str	w21, [x0, #4]
  4139a8:	mov	x20, x0
  4139ac:	b	4136d0 <ferror@plt+0x10e00>
  4139b0:	mov	x20, x0
  4139b4:	b	4136d0 <ferror@plt+0x10e00>
  4139b8:	ldr	w0, [sp, #148]
  4139bc:	str	w0, [sp, #152]
  4139c0:	mov	w28, #0x0                   	// #0
  4139c4:	mov	w1, #0x1                   	// #1
  4139c8:	mov	w0, #0x4                   	// #4
  4139cc:	cmp	w1, w0
  4139d0:	csel	w2, w1, w0, cs  // cs = hs, nlast
  4139d4:	str	w2, [sp, #156]
  4139d8:	csel	w1, w1, w0, cs  // cs = hs, nlast
  4139dc:	lsl	x1, x1, #4
  4139e0:	add	x1, x1, #0x8
  4139e4:	mov	x0, #0x0                   	// #0
  4139e8:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  4139ec:	ldr	w1, [x0]
  4139f0:	ldr	w2, [sp, #156]
  4139f4:	bfxil	w1, w2, #0, #31
  4139f8:	str	w1, [x0]
  4139fc:	ubfx	x1, x1, #24, #7
  413a00:	strb	w1, [x0, #3]
  413a04:	str	wzr, [x0, #4]
  413a08:	ldr	w1, [sp, #152]
  413a0c:	cbz	w1, 413a44 <ferror@plt+0x11174>
  413a10:	add	x2, x0, #0x8
  413a14:	add	x1, x19, #0x8
  413a18:	cbz	w28, 413a38 <ferror@plt+0x11168>
  413a1c:	sub	w3, w28, #0x1
  413a20:	add	x19, x19, x3, lsl #4
  413a24:	add	x19, x19, #0x18
  413a28:	ldp	x4, x5, [x1], #16
  413a2c:	stp	x4, x5, [x2], #16
  413a30:	cmp	x19, x1
  413a34:	b.ne	413a28 <ferror@plt+0x11158>  // b.any
  413a38:	str	w28, [x0, #4]
  413a3c:	mov	x19, x0
  413a40:	b	413860 <ferror@plt+0x10f90>
  413a44:	mov	x19, x0
  413a48:	b	413860 <ferror@plt+0x10f90>
  413a4c:	mov	x20, #0x0                   	// #0
  413a50:	b	41339c <ferror@plt+0x10acc>
  413a54:	stp	x29, x30, [sp, #-64]!
  413a58:	mov	x29, sp
  413a5c:	stp	x19, x20, [sp, #16]
  413a60:	stp	x21, x22, [sp, #32]
  413a64:	str	x23, [sp, #48]
  413a68:	cmp	w1, #0x1
  413a6c:	b.le	413b9c <ferror@plt+0x112cc>
  413a70:	mov	x23, x0
  413a74:	mov	w22, w1
  413a78:	mov	x21, x2
  413a7c:	cbz	x2, 413bb4 <ferror@plt+0x112e4>
  413a80:	ldr	w0, [x2]
  413a84:	bl	413048 <ferror@plt+0x10778>
  413a88:	mov	w19, w0
  413a8c:	mov	x3, #0x1                   	// #1
  413a90:	mov	x2, #0x0                   	// #0
  413a94:	mov	x1, #0x0                   	// #0
  413a98:	mov	x0, #0x10                  	// #16
  413a9c:	bl	4040b4 <ferror@plt+0x17e4>
  413aa0:	mov	x20, x0
  413aa4:	mov	x2, x21
  413aa8:	mov	w1, w22
  413aac:	bl	412f08 <ferror@plt+0x10638>
  413ab0:	ldr	x21, [x23]
  413ab4:	ldr	x0, [x21, #8]
  413ab8:	add	x0, x0, x0, lsl #1
  413abc:	ldr	x1, [x21, #16]
  413ac0:	cmp	x0, x1, lsl #2
  413ac4:	b.ls	413bcc <ferror@plt+0x112fc>  // b.plast
  413ac8:	ldr	w0, [x21, #32]
  413acc:	add	w0, w0, #0x1
  413ad0:	str	w0, [x21, #32]
  413ad4:	ldr	w7, [x21, #40]
  413ad8:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  413adc:	add	x0, x0, #0x2b0
  413ae0:	ubfiz	x2, x7, #4, #32
  413ae4:	add	x1, x0, x2
  413ae8:	ldr	w6, [x0, x2]
  413aec:	ldr	w9, [x1, #12]
  413af0:	mov	w4, w19
  413af4:	ldr	w1, [x1, #4]
  413af8:	mul	x1, x1, x4
  413afc:	lsr	x1, x1, #32
  413b00:	sub	w2, w19, w1
  413b04:	add	w1, w1, w2, lsr #1
  413b08:	lsr	w1, w1, w9
  413b0c:	msub	w1, w1, w6, w19
  413b10:	ldr	x0, [x21]
  413b14:	ubfiz	x8, x1, #4, #32
  413b18:	add	x5, x0, x8
  413b1c:	ldr	w8, [x0, x8]
  413b20:	cbz	w8, 413bd8 <ferror@plt+0x11308>
  413b24:	cmp	w19, w8
  413b28:	b.eq	413bf8 <ferror@plt+0x11328>  // b.none
  413b2c:	ubfiz	x7, x7, #4, #32
  413b30:	adrp	x5, 458000 <_obstack_memory_used@@Base+0x11094>
  413b34:	add	x5, x5, #0x2b0
  413b38:	add	x7, x5, x7
  413b3c:	ldr	w3, [x7, #8]
  413b40:	mul	x3, x3, x4
  413b44:	lsr	x4, x3, #32
  413b48:	ldr	x7, [x21, #8]
  413b4c:	add	w2, w19, #0x1
  413b50:	sub	w3, w19, w4
  413b54:	add	w3, w4, w3, lsr #1
  413b58:	lsr	w3, w3, w9
  413b5c:	sub	w6, w6, #0x2
  413b60:	msub	w2, w3, w6, w2
  413b64:	ldr	w3, [x21, #36]
  413b68:	add	w3, w3, #0x1
  413b6c:	str	w3, [x21, #36]
  413b70:	add	w1, w1, w2
  413b74:	sub	w3, w1, w7
  413b78:	cmp	x7, w1, uxtw
  413b7c:	csel	w1, w3, w1, ls  // ls = plast
  413b80:	ubfiz	x3, x1, #4, #32
  413b84:	add	x5, x0, x3
  413b88:	ldr	w3, [x0, x3]
  413b8c:	cbz	w3, 413bd8 <ferror@plt+0x11308>
  413b90:	cmp	w19, w3
  413b94:	b.ne	413b64 <ferror@plt+0x11294>  // b.any
  413b98:	b	413bf8 <ferror@plt+0x11328>
  413b9c:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  413ba0:	add	x2, x2, #0xc90
  413ba4:	mov	w1, #0x4f6                 	// #1270
  413ba8:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  413bac:	add	x0, x0, #0x2d0
  413bb0:	bl	4062a0 <ferror@plt+0x39d0>
  413bb4:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  413bb8:	add	x2, x2, #0xc90
  413bbc:	mov	w1, #0x4f7                 	// #1271
  413bc0:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  413bc4:	add	x0, x0, #0x2d0
  413bc8:	bl	4062a0 <ferror@plt+0x39d0>
  413bcc:	mov	x0, x21
  413bd0:	bl	413c54 <ferror@plt+0x11384>
  413bd4:	b	413ac8 <ferror@plt+0x111f8>
  413bd8:	ldr	x2, [x21, #16]
  413bdc:	add	x2, x2, #0x1
  413be0:	str	x2, [x21, #16]
  413be4:	ubfiz	x1, x1, #4, #32
  413be8:	add	x5, x0, x1
  413bec:	ldr	w2, [x0, x1]
  413bf0:	cbnz	w2, 413bf8 <ferror@plt+0x11328>
  413bf4:	str	w19, [x0, x1]
  413bf8:	str	x20, [x5, #8]
  413bfc:	ldp	x19, x20, [sp, #16]
  413c00:	ldp	x21, x22, [sp, #32]
  413c04:	ldr	x23, [sp, #48]
  413c08:	ldp	x29, x30, [sp], #64
  413c0c:	ret
  413c10:	stp	x29, x30, [sp, #-16]!
  413c14:	mov	x29, sp
  413c18:	ldr	x1, [x0, #8]
  413c1c:	sub	x2, x1, #0x1
  413c20:	cbz	x1, 413c30 <ferror@plt+0x11360>
  413c24:	sub	x2, x2, #0x1
  413c28:	cmp	x1, x2
  413c2c:	b.hi	413c24 <ferror@plt+0x11354>  // b.pmore
  413c30:	ldrb	w1, [x0, #44]
  413c34:	cbnz	w1, 413c48 <ferror@plt+0x11378>
  413c38:	ldr	x0, [x0]
  413c3c:	bl	402690 <free@plt>
  413c40:	ldp	x29, x30, [sp], #16
  413c44:	ret
  413c48:	ldr	x0, [x0]
  413c4c:	bl	40412c <ferror@plt+0x185c>
  413c50:	b	413c40 <ferror@plt+0x11370>
  413c54:	stp	x29, x30, [sp, #-64]!
  413c58:	mov	x29, sp
  413c5c:	stp	x19, x20, [sp, #16]
  413c60:	stp	x21, x22, [sp, #32]
  413c64:	str	x23, [sp, #48]
  413c68:	mov	x19, x0
  413c6c:	ldr	x21, [x0]
  413c70:	ldr	w23, [x0, #40]
  413c74:	ldr	x22, [x0, #8]
  413c78:	add	x20, x21, x22, lsl #4
  413c7c:	ldr	x1, [x0, #16]
  413c80:	ldr	x0, [x0, #24]
  413c84:	sub	x1, x1, x0
  413c88:	lsl	x0, x1, #1
  413c8c:	cmp	x22, x1, lsl #1
  413c90:	b.cc	413cac <ferror@plt+0x113dc>  // b.lo, b.ul, b.last
  413c94:	lsl	w1, w1, #3
  413c98:	cmp	x1, #0x20
  413c9c:	mov	x2, #0x20                  	// #32
  413ca0:	csel	x1, x1, x2, cs  // cs = hs, nlast
  413ca4:	cmp	x22, x1
  413ca8:	b.ls	413cc4 <ferror@plt+0x113f4>  // b.plast
  413cac:	bl	403c9c <ferror@plt+0x13cc>
  413cb0:	mov	w23, w0
  413cb4:	ubfiz	x1, x23, #4, #32
  413cb8:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  413cbc:	add	x0, x0, #0x2b0
  413cc0:	ldr	w22, [x0, x1]
  413cc4:	ldrb	w0, [x19, #44]
  413cc8:	cbnz	w0, 413cdc <ferror@plt+0x1140c>
  413ccc:	mov	x1, #0x10                  	// #16
  413cd0:	mov	x0, x22
  413cd4:	bl	447084 <_obstack_memory_used@@Base+0x118>
  413cd8:	b	413cf4 <ferror@plt+0x11424>
  413cdc:	mov	x3, #0x0                   	// #0
  413ce0:	mov	x2, #0x0                   	// #0
  413ce4:	mov	x1, #0x0                   	// #0
  413ce8:	lsl	x0, x22, #4
  413cec:	bl	4040e4 <ferror@plt+0x1814>
  413cf0:	cbz	x0, 413d3c <ferror@plt+0x1146c>
  413cf4:	cbz	x22, 413d0c <ferror@plt+0x1143c>
  413cf8:	mov	x1, x0
  413cfc:	add	x2, x0, x22, lsl #4
  413d00:	str	wzr, [x1], #16
  413d04:	cmp	x1, x2
  413d08:	b.ne	413d00 <ferror@plt+0x11430>  // b.any
  413d0c:	str	x0, [x19]
  413d10:	str	x22, [x19, #8]
  413d14:	str	w23, [x19, #40]
  413d18:	ldr	x0, [x19, #16]
  413d1c:	ldr	x1, [x19, #24]
  413d20:	sub	x0, x0, x1
  413d24:	str	x0, [x19, #16]
  413d28:	str	xzr, [x19, #24]
  413d2c:	mov	x0, x21
  413d30:	adrp	x8, 458000 <_obstack_memory_used@@Base+0x11094>
  413d34:	add	x8, x8, #0x2b0
  413d38:	b	413d68 <ferror@plt+0x11498>
  413d3c:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  413d40:	add	x2, x2, #0x290
  413d44:	mov	w1, #0x2b5                 	// #693
  413d48:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  413d4c:	add	x0, x0, #0x2a0
  413d50:	bl	4062a0 <ferror@plt+0x39d0>
  413d54:	ldp	x2, x3, [x0]
  413d58:	stp	x2, x3, [x6]
  413d5c:	add	x0, x0, #0x10
  413d60:	cmp	x20, x0
  413d64:	b.ls	413e0c <ferror@plt+0x1153c>  // b.plast
  413d68:	ldr	w2, [x0]
  413d6c:	cbz	w2, 413d5c <ferror@plt+0x1148c>
  413d70:	ldr	w7, [x19, #40]
  413d74:	ubfiz	x3, x7, #4, #32
  413d78:	add	x1, x8, x3
  413d7c:	ldr	w9, [x8, x3]
  413d80:	ldr	w10, [x1, #12]
  413d84:	mov	w11, w2
  413d88:	ldr	w1, [x1, #4]
  413d8c:	mul	x1, x1, x11
  413d90:	lsr	x3, x1, #32
  413d94:	sub	w1, w2, w3
  413d98:	add	w1, w3, w1, lsr #1
  413d9c:	lsr	w1, w1, w10
  413da0:	msub	w1, w1, w9, w2
  413da4:	ldr	x4, [x19]
  413da8:	ubfiz	x5, x1, #4, #32
  413dac:	add	x6, x4, x5
  413db0:	ldr	w3, [x4, x5]
  413db4:	cbz	w3, 413d54 <ferror@plt+0x11484>
  413db8:	ldr	x5, [x19, #8]
  413dbc:	ubfiz	x7, x7, #4, #32
  413dc0:	add	x7, x8, x7
  413dc4:	ldr	w3, [x7, #8]
  413dc8:	mul	x3, x3, x11
  413dcc:	lsr	x3, x3, #32
  413dd0:	add	w6, w2, #0x1
  413dd4:	sub	w2, w2, w3
  413dd8:	add	w2, w3, w2, lsr #1
  413ddc:	lsr	w2, w2, w10
  413de0:	sub	w9, w9, #0x2
  413de4:	msub	w2, w2, w9, w6
  413de8:	add	w1, w1, w2
  413dec:	sub	w3, w1, w5
  413df0:	cmp	x5, w1, uxtw
  413df4:	csel	w1, w3, w1, ls  // ls = plast
  413df8:	ubfiz	x3, x1, #4, #32
  413dfc:	add	x6, x4, x3
  413e00:	ldr	w3, [x4, x3]
  413e04:	cbnz	w3, 413de8 <ferror@plt+0x11518>
  413e08:	b	413d54 <ferror@plt+0x11484>
  413e0c:	ldrb	w0, [x19, #44]
  413e10:	cbnz	w0, 413e30 <ferror@plt+0x11560>
  413e14:	mov	x0, x21
  413e18:	bl	402690 <free@plt>
  413e1c:	ldp	x19, x20, [sp, #16]
  413e20:	ldp	x21, x22, [sp, #32]
  413e24:	ldr	x23, [sp, #48]
  413e28:	ldp	x29, x30, [sp], #64
  413e2c:	ret
  413e30:	mov	x0, x21
  413e34:	bl	40412c <ferror@plt+0x185c>
  413e38:	b	413e1c <ferror@plt+0x1154c>
  413e3c:	str	xzr, [x0]
  413e40:	ret
  413e44:	stp	x29, x30, [sp, #-32]!
  413e48:	mov	x29, sp
  413e4c:	stp	x19, x20, [sp, #16]
  413e50:	mov	x20, x0
  413e54:	ldr	x19, [x0]
  413e58:	cbz	x19, 413e70 <ferror@plt+0x115a0>
  413e5c:	mov	x0, x19
  413e60:	ldr	x19, [x19]
  413e64:	bl	402690 <free@plt>
  413e68:	str	x19, [x20]
  413e6c:	cbnz	x19, 413e5c <ferror@plt+0x1158c>
  413e70:	ldp	x19, x20, [sp, #16]
  413e74:	ldp	x29, x30, [sp], #32
  413e78:	ret
  413e7c:	stp	x29, x30, [sp, #-16]!
  413e80:	mov	x29, sp
  413e84:	cmp	x0, #0x10, lsl #12
  413e88:	b.ne	413eb4 <ferror@plt+0x115e4>  // b.any
  413e8c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  413e90:	ldr	x0, [x0, #1928]
  413e94:	cbz	x0, 413ea8 <ferror@plt+0x115d8>
  413e98:	ldr	x2, [x0]
  413e9c:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x41094>
  413ea0:	str	x2, [x1, #1928]
  413ea4:	b	413eb8 <ferror@plt+0x115e8>
  413ea8:	mov	x0, #0x10000               	// #65536
  413eac:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  413eb0:	b	413eb8 <ferror@plt+0x115e8>
  413eb4:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  413eb8:	ldp	x29, x30, [sp], #16
  413ebc:	ret
  413ec0:	ldr	x1, [x0]
  413ec4:	sub	x1, x1, x0
  413ec8:	cmp	x1, #0x10, lsl #12
  413ecc:	b.ne	413ee4 <ferror@plt+0x11614>  // b.any
  413ed0:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x41094>
  413ed4:	ldr	x2, [x1, #1928]
  413ed8:	str	x2, [x0]
  413edc:	str	x0, [x1, #1928]
  413ee0:	ret
  413ee4:	stp	x29, x30, [sp, #-16]!
  413ee8:	mov	x29, sp
  413eec:	bl	402690 <free@plt>
  413ef0:	ldp	x29, x30, [sp], #16
  413ef4:	ret
  413ef8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  413efc:	str	xzr, [x0, #1928]
  413f00:	ret
  413f04:	stp	x29, x30, [sp, #-32]!
  413f08:	mov	x29, sp
  413f0c:	str	x19, [sp, #16]
  413f10:	eor	x19, x1, x0
  413f14:	blr	x2
  413f18:	asr	w0, w0, #31
  413f1c:	sxtw	x0, w0
  413f20:	and	x0, x0, x19
  413f24:	ldr	x19, [sp, #16]
  413f28:	ldp	x29, x30, [sp], #32
  413f2c:	ret
  413f30:	stp	x29, x30, [sp, #-96]!
  413f34:	mov	x29, sp
  413f38:	stp	x19, x20, [sp, #16]
  413f3c:	stp	x21, x22, [sp, #32]
  413f40:	stp	x23, x24, [sp, #48]
  413f44:	stp	x25, x26, [sp, #64]
  413f48:	mov	x23, x0
  413f4c:	mov	x19, x1
  413f50:	mov	x21, x2
  413f54:	mov	x20, x3
  413f58:	ldr	x0, [x1, #32]
  413f5c:	cmp	x0, x2
  413f60:	b.cc	414390 <ferror@plt+0x11ac0>  // b.lo, b.ul, b.last
  413f64:	str	x3, [x19, #8]
  413f68:	str	x2, [x19, #16]
  413f6c:	ldr	x20, [x1, #24]
  413f70:	add	x22, x23, x20
  413f74:	add	x20, x22, x20
  413f78:	ldr	x2, [x1]
  413f7c:	mov	x1, x23
  413f80:	mov	x0, x22
  413f84:	bl	413f04 <ferror@plt+0x11634>
  413f88:	eor	x23, x23, x0
  413f8c:	mov	x25, x23
  413f90:	eor	x22, x22, x0
  413f94:	mov	x21, x22
  413f98:	ldr	x0, [x19, #16]
  413f9c:	cmp	x0, #0x3
  413fa0:	b.ne	413fd4 <ferror@plt+0x11704>  // b.any
  413fa4:	ldr	x2, [x19]
  413fa8:	mov	x1, x22
  413fac:	mov	x0, x20
  413fb0:	bl	413f04 <ferror@plt+0x11634>
  413fb4:	eor	x22, x22, x0
  413fb8:	eor	x20, x20, x0
  413fbc:	ldr	x2, [x19]
  413fc0:	mov	x1, x23
  413fc4:	mov	x0, x22
  413fc8:	bl	413f04 <ferror@plt+0x11634>
  413fcc:	eor	x25, x23, x0
  413fd0:	eor	x21, x22, x0
  413fd4:	ldr	x1, [x19, #16]
  413fd8:	cmp	x1, #0x3
  413fdc:	b.ls	414120 <ferror@plt+0x11850>  // b.plast
  413fe0:	ldr	x22, [x19, #24]
  413fe4:	add	x24, x20, x22
  413fe8:	add	x22, x24, x22
  413fec:	cmp	x1, #0x5
  413ff0:	b.ne	414024 <ferror@plt+0x11754>  // b.any
  413ff4:	ldr	x2, [x19]
  413ff8:	mov	x1, x24
  413ffc:	mov	x0, x22
  414000:	bl	413f04 <ferror@plt+0x11634>
  414004:	eor	x24, x24, x0
  414008:	eor	x22, x22, x0
  41400c:	ldr	x2, [x19]
  414010:	mov	x1, x20
  414014:	mov	x0, x22
  414018:	bl	413f04 <ferror@plt+0x11634>
  41401c:	eor	x20, x20, x0
  414020:	eor	x22, x22, x0
  414024:	ldr	x2, [x19]
  414028:	mov	x1, x20
  41402c:	mov	x0, x24
  414030:	bl	413f04 <ferror@plt+0x11634>
  414034:	eor	x26, x20, x0
  414038:	eor	x23, x24, x0
  41403c:	mov	x24, x23
  414040:	ldr	x0, [x19, #16]
  414044:	cmp	x0, #0x5
  414048:	b.ne	41407c <ferror@plt+0x117ac>  // b.any
  41404c:	ldr	x2, [x19]
  414050:	mov	x1, x25
  414054:	mov	x0, x23
  414058:	bl	413f04 <ferror@plt+0x11634>
  41405c:	eor	x25, x25, x0
  414060:	eor	x24, x23, x0
  414064:	ldr	x2, [x19]
  414068:	mov	x1, x21
  41406c:	mov	x0, x22
  414070:	bl	413f04 <ferror@plt+0x11634>
  414074:	eor	x21, x21, x0
  414078:	eor	x22, x22, x0
  41407c:	ldr	x2, [x19]
  414080:	mov	x1, x25
  414084:	mov	x0, x26
  414088:	bl	413f04 <ferror@plt+0x11634>
  41408c:	eor	x25, x25, x0
  414090:	eor	x26, x26, x0
  414094:	ldr	x2, [x19]
  414098:	mov	x1, x21
  41409c:	mov	x0, x24
  4140a0:	bl	413f04 <ferror@plt+0x11634>
  4140a4:	eor	x21, x21, x0
  4140a8:	eor	x24, x24, x0
  4140ac:	ldr	x2, [x19]
  4140b0:	mov	x1, x21
  4140b4:	mov	x0, x26
  4140b8:	bl	413f04 <ferror@plt+0x11634>
  4140bc:	eor	x21, x21, x0
  4140c0:	eor	x0, x26, x0
  4140c4:	ldr	x1, [x19, #24]
  4140c8:	cmp	x1, #0x8
  4140cc:	b.ne	414244 <ferror@plt+0x11974>  // b.any
  4140d0:	ldr	x4, [x25]
  4140d4:	ldr	x3, [x21]
  4140d8:	ldr	x2, [x0]
  4140dc:	ldr	x1, [x24]
  4140e0:	ldr	x0, [x19, #8]
  4140e4:	ldr	x5, [x19, #16]
  4140e8:	cmp	x5, #0x5
  4140ec:	b.ne	4140f8 <ferror@plt+0x11828>  // b.any
  4140f0:	ldr	x5, [x22]
  4140f4:	str	x5, [x0, #32]
  4140f8:	str	x4, [x0]
  4140fc:	str	x3, [x0, #8]
  414100:	str	x2, [x0, #16]
  414104:	str	x1, [x0, #24]
  414108:	ldp	x19, x20, [sp, #16]
  41410c:	ldp	x21, x22, [sp, #32]
  414110:	ldp	x23, x24, [sp, #48]
  414114:	ldp	x25, x26, [sp, #64]
  414118:	ldp	x29, x30, [sp], #96
  41411c:	ret
  414120:	ldr	x0, [x19, #24]
  414124:	cmp	x0, #0x8
  414128:	b.ne	414154 <ferror@plt+0x11884>  // b.any
  41412c:	ldr	x3, [x25]
  414130:	ldr	x2, [x21]
  414134:	ldr	x0, [x19, #8]
  414138:	cmp	x1, #0x3
  41413c:	b.ne	414148 <ferror@plt+0x11878>  // b.any
  414140:	ldr	x1, [x20]
  414144:	str	x1, [x0, #16]
  414148:	str	x3, [x0]
  41414c:	str	x2, [x0, #8]
  414150:	b	414108 <ferror@plt+0x11838>
  414154:	cmp	x0, #0x4
  414158:	b.ne	414184 <ferror@plt+0x118b4>  // b.any
  41415c:	ldr	w3, [x25]
  414160:	ldr	w2, [x21]
  414164:	ldr	x0, [x19, #8]
  414168:	cmp	x1, #0x3
  41416c:	b.ne	414178 <ferror@plt+0x118a8>  // b.any
  414170:	ldr	w1, [x20]
  414174:	str	w1, [x0, #8]
  414178:	str	w3, [x0]
  41417c:	str	w2, [x0, #4]
  414180:	b	414108 <ferror@plt+0x11838>
  414184:	mov	x1, #0x8                   	// #8
  414188:	cmp	x0, #0x7
  41418c:	b.ls	4141ec <ferror@plt+0x1191c>  // b.plast
  414190:	sub	x9, x25, #0x8
  414194:	sub	x8, x21, #0x8
  414198:	sub	x10, x20, #0x8
  41419c:	ldr	x6, [x9, x1]
  4141a0:	ldr	x5, [x8, x1]
  4141a4:	sub	x2, x1, #0x8
  4141a8:	ldr	x3, [x19, #8]
  4141ac:	add	x4, x3, x2
  4141b0:	ldr	x7, [x19, #16]
  4141b4:	cmp	x7, #0x3
  4141b8:	b.ne	4141c8 <ferror@plt+0x118f8>  // b.any
  4141bc:	ldr	x7, [x10, x1]
  4141c0:	lsl	x0, x0, #1
  4141c4:	str	x7, [x4, x0]
  4141c8:	str	x6, [x3, x2]
  4141cc:	ldr	x0, [x19, #24]
  4141d0:	str	x5, [x4, x0]
  4141d4:	add	x2, x1, #0x8
  4141d8:	ldr	x0, [x19, #24]
  4141dc:	cmp	x2, x0
  4141e0:	b.hi	4141f0 <ferror@plt+0x11920>  // b.pmore
  4141e4:	mov	x1, x2
  4141e8:	b	41419c <ferror@plt+0x118cc>
  4141ec:	mov	x1, #0x0                   	// #0
  4141f0:	ldr	x2, [x19, #24]
  4141f4:	cmp	x2, x1
  4141f8:	b.ls	414108 <ferror@plt+0x11838>  // b.plast
  4141fc:	ldrb	w4, [x25, x1]
  414200:	ldrb	w3, [x21, x1]
  414204:	ldr	x0, [x19, #8]
  414208:	add	x0, x0, x1
  41420c:	ldr	x5, [x19, #16]
  414210:	cmp	x5, #0x3
  414214:	b.ne	414224 <ferror@plt+0x11954>  // b.any
  414218:	ldrb	w5, [x20, x1]
  41421c:	lsl	x2, x2, #1
  414220:	strb	w5, [x0, x2]
  414224:	strb	w4, [x0]
  414228:	ldr	x2, [x19, #24]
  41422c:	strb	w3, [x0, x2]
  414230:	add	x1, x1, #0x1
  414234:	ldr	x2, [x19, #24]
  414238:	cmp	x2, x1
  41423c:	b.hi	4141fc <ferror@plt+0x1192c>  // b.pmore
  414240:	b	414108 <ferror@plt+0x11838>
  414244:	cmp	x1, #0x4
  414248:	b.ne	414288 <ferror@plt+0x119b8>  // b.any
  41424c:	ldr	w4, [x25]
  414250:	ldr	w3, [x21]
  414254:	ldr	w2, [x0]
  414258:	ldr	w1, [x24]
  41425c:	ldr	x0, [x19, #8]
  414260:	ldr	x5, [x19, #16]
  414264:	cmp	x5, #0x5
  414268:	b.ne	414274 <ferror@plt+0x119a4>  // b.any
  41426c:	ldr	w5, [x22]
  414270:	str	w5, [x0, #16]
  414274:	str	w4, [x0]
  414278:	str	w3, [x0, #4]
  41427c:	str	w2, [x0, #8]
  414280:	str	w1, [x0, #12]
  414284:	b	414108 <ferror@plt+0x11838>
  414288:	mov	x2, #0x8                   	// #8
  41428c:	sub	x11, x22, #0x8
  414290:	cmp	x1, #0x7
  414294:	b.ls	414318 <ferror@plt+0x11a48>  // b.plast
  414298:	add	x3, x25, x2
  41429c:	ldur	x9, [x3, #-8]
  4142a0:	add	x3, x21, x2
  4142a4:	ldur	x8, [x3, #-8]
  4142a8:	add	x3, x0, x2
  4142ac:	ldur	x7, [x3, #-8]
  4142b0:	add	x3, x24, x2
  4142b4:	ldur	x6, [x3, #-8]
  4142b8:	sub	x4, x2, #0x8
  4142bc:	ldr	x5, [x19, #8]
  4142c0:	add	x3, x5, x4
  4142c4:	ldr	x10, [x19, #16]
  4142c8:	cmp	x10, #0x5
  4142cc:	b.ne	4142dc <ferror@plt+0x11a0c>  // b.any
  4142d0:	ldr	x10, [x11, x2]
  4142d4:	lsl	x1, x1, #2
  4142d8:	str	x10, [x3, x1]
  4142dc:	str	x9, [x5, x4]
  4142e0:	ldr	x1, [x19, #24]
  4142e4:	add	x4, x3, x1
  4142e8:	str	x8, [x3, x1]
  4142ec:	ldr	x1, [x19, #24]
  4142f0:	add	x3, x4, x1
  4142f4:	str	x7, [x4, x1]
  4142f8:	ldr	x1, [x19, #24]
  4142fc:	str	x6, [x3, x1]
  414300:	ldr	x1, [x19, #24]
  414304:	add	x3, x2, #0x8
  414308:	cmp	x1, x3
  41430c:	b.cc	41431c <ferror@plt+0x11a4c>  // b.lo, b.ul, b.last
  414310:	mov	x2, x3
  414314:	b	414298 <ferror@plt+0x119c8>
  414318:	mov	x2, #0x0                   	// #0
  41431c:	ldr	x3, [x19, #24]
  414320:	cmp	x3, x2
  414324:	b.ls	414108 <ferror@plt+0x11838>  // b.plast
  414328:	ldrb	w4, [x25, x2]
  41432c:	ldrb	w7, [x21, x2]
  414330:	ldrb	w6, [x0, x2]
  414334:	ldrb	w5, [x24, x2]
  414338:	ldr	x1, [x19, #8]
  41433c:	add	x1, x1, x2
  414340:	ldr	x8, [x19, #16]
  414344:	cmp	x8, #0x5
  414348:	b.ne	414358 <ferror@plt+0x11a88>  // b.any
  41434c:	ldrb	w8, [x22, x2]
  414350:	lsl	x3, x3, #2
  414354:	strb	w8, [x1, x3]
  414358:	strb	w4, [x1]
  41435c:	ldr	x4, [x19, #24]
  414360:	add	x3, x1, x4
  414364:	strb	w7, [x1, x4]
  414368:	ldr	x1, [x19, #24]
  41436c:	add	x4, x3, x1
  414370:	strb	w6, [x3, x1]
  414374:	ldr	x1, [x19, #24]
  414378:	strb	w5, [x4, x1]
  41437c:	add	x2, x2, #0x1
  414380:	ldr	x3, [x19, #24]
  414384:	cmp	x3, x2
  414388:	b.hi	414328 <ferror@plt+0x11a58>  // b.pmore
  41438c:	b	414108 <ferror@plt+0x11838>
  414390:	str	x27, [sp, #80]
  414394:	lsr	x26, x2, #1
  414398:	ldr	x25, [x1, #24]
  41439c:	mul	x25, x26, x25
  4143a0:	add	x27, x23, x25
  4143a4:	add	x22, x3, x25
  4143a8:	cmp	x23, x3
  4143ac:	csel	x24, x4, x23, eq  // eq = none
  4143b0:	mov	x3, x22
  4143b4:	sub	x2, x2, x26
  4143b8:	mov	x0, x27
  4143bc:	bl	413f30 <ferror@plt+0x11660>
  4143c0:	mov	x4, x27
  4143c4:	mov	x3, x24
  4143c8:	mov	x2, x26
  4143cc:	mov	x1, x19
  4143d0:	mov	x0, x23
  4143d4:	bl	413f30 <ferror@plt+0x11660>
  4143d8:	ldr	x1, [x19, #24]
  4143dc:	sub	x1, x25, x1
  4143e0:	ldr	x2, [x19]
  4143e4:	add	x1, x24, x1
  4143e8:	mov	x0, x22
  4143ec:	blr	x2
  4143f0:	tbz	w0, #31, 414454 <ferror@plt+0x11b84>
  4143f4:	ldr	x0, [x19, #24]
  4143f8:	madd	x21, x0, x21, x20
  4143fc:	cmp	x0, #0x8
  414400:	b.ne	41446c <ferror@plt+0x11b9c>  // b.any
  414404:	ldr	x2, [x19]
  414408:	mov	x1, x24
  41440c:	mov	x0, x22
  414410:	blr	x2
  414414:	asr	w0, w0, #31
  414418:	sxtw	x1, w0
  41441c:	eor	x2, x22, x24
  414420:	and	x2, x2, x1
  414424:	eor	x2, x24, x2
  414428:	ldr	x2, [x2]
  41442c:	str	x2, [x20], #8
  414430:	and	w0, w0, #0x8
  414434:	add	x22, x22, w0, sxtw
  414438:	cmp	x20, x22
  41443c:	b.eq	414528 <ferror@plt+0x11c58>  // b.none
  414440:	mvn	x1, x1
  414444:	and	x1, x1, #0x8
  414448:	add	x24, x24, x1
  41444c:	cmp	x21, x22
  414450:	b.ne	414404 <ferror@plt+0x11b34>  // b.any
  414454:	sub	x2, x22, x20
  414458:	mov	x1, x24
  41445c:	mov	x0, x20
  414460:	bl	402260 <memcpy@plt>
  414464:	ldr	x27, [sp, #80]
  414468:	b	414108 <ferror@plt+0x11838>
  41446c:	cmp	x0, #0x4
  414470:	b.ne	4144c8 <ferror@plt+0x11bf8>  // b.any
  414474:	ldr	x2, [x19]
  414478:	mov	x1, x24
  41447c:	mov	x0, x22
  414480:	blr	x2
  414484:	asr	w0, w0, #31
  414488:	sxtw	x1, w0
  41448c:	eor	x2, x22, x24
  414490:	and	x2, x2, x1
  414494:	eor	x2, x24, x2
  414498:	ldr	w2, [x2]
  41449c:	str	w2, [x20], #4
  4144a0:	and	w0, w0, #0x4
  4144a4:	add	x22, x22, w0, sxtw
  4144a8:	cmp	x20, x22
  4144ac:	b.eq	414530 <ferror@plt+0x11c60>  // b.none
  4144b0:	mvn	x1, x1
  4144b4:	and	x1, x1, #0x4
  4144b8:	add	x24, x24, x1
  4144bc:	cmp	x21, x22
  4144c0:	b.ne	414474 <ferror@plt+0x11ba4>  // b.any
  4144c4:	b	414454 <ferror@plt+0x11b84>
  4144c8:	ldr	x2, [x19]
  4144cc:	mov	x1, x24
  4144d0:	mov	x0, x22
  4144d4:	blr	x2
  4144d8:	asr	w23, w0, #31
  4144dc:	sxtw	x23, w23
  4144e0:	eor	x1, x22, x24
  4144e4:	and	x1, x1, x23
  4144e8:	ldr	x2, [x19, #24]
  4144ec:	eor	x1, x24, x1
  4144f0:	mov	x0, x20
  4144f4:	bl	402260 <memcpy@plt>
  4144f8:	ldr	x1, [x19, #24]
  4144fc:	add	x20, x0, x1
  414500:	and	x0, x23, x1
  414504:	add	x22, x22, x0
  414508:	cmp	x20, x22
  41450c:	b.eq	414538 <ferror@plt+0x11c68>  // b.none
  414510:	mvn	x0, x23
  414514:	and	x0, x0, x1
  414518:	add	x24, x24, x0
  41451c:	cmp	x21, x22
  414520:	b.ne	4144c8 <ferror@plt+0x11bf8>  // b.any
  414524:	b	414454 <ferror@plt+0x11b84>
  414528:	ldr	x27, [sp, #80]
  41452c:	b	414108 <ferror@plt+0x11838>
  414530:	ldr	x27, [sp, #80]
  414534:	b	414108 <ferror@plt+0x11838>
  414538:	ldr	x27, [sp, #80]
  41453c:	b	414108 <ferror@plt+0x11838>
  414540:	cmp	x1, #0x1
  414544:	b.ls	4145ec <ferror@plt+0x11d1c>  // b.plast
  414548:	stp	x29, x30, [sp, #-352]!
  41454c:	mov	x29, sp
  414550:	stp	x19, x20, [sp, #16]
  414554:	mov	x20, x0
  414558:	mov	x19, x1
  41455c:	mov	x0, #0x5                   	// #5
  414560:	tbnz	x2, #63, 4145a4 <ferror@plt+0x11cd4>
  414564:	str	x3, [sp, #312]
  414568:	str	x20, [sp, #320]
  41456c:	str	x19, [sp, #328]
  414570:	str	x2, [sp, #336]
  414574:	str	x0, [sp, #344]
  414578:	lsr	x1, x19, #1
  41457c:	mul	x0, x1, x2
  414580:	cmp	x0, #0x100
  414584:	b.hi	4145b0 <ferror@plt+0x11ce0>  // b.pmore
  414588:	add	x4, sp, #0x38
  41458c:	mov	x3, x20
  414590:	mov	x2, x19
  414594:	add	x1, sp, #0x138
  414598:	mov	x0, x20
  41459c:	bl	413f30 <ferror@plt+0x11660>
  4145a0:	b	4145e0 <ferror@plt+0x11d10>
  4145a4:	mvn	x2, x2
  4145a8:	mov	x0, #0x3                   	// #3
  4145ac:	b	414564 <ferror@plt+0x11c94>
  4145b0:	str	x21, [sp, #32]
  4145b4:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  4145b8:	mov	x21, x0
  4145bc:	mov	x4, x0
  4145c0:	mov	x3, x20
  4145c4:	mov	x2, x19
  4145c8:	add	x1, sp, #0x138
  4145cc:	mov	x0, x20
  4145d0:	bl	413f30 <ferror@plt+0x11660>
  4145d4:	mov	x0, x21
  4145d8:	bl	402690 <free@plt>
  4145dc:	ldr	x21, [sp, #32]
  4145e0:	ldp	x19, x20, [sp, #16]
  4145e4:	ldp	x29, x30, [sp], #352
  4145e8:	ret
  4145ec:	ret
  4145f0:	stp	x29, x30, [sp, #-16]!
  4145f4:	mov	x29, sp
  4145f8:	mvn	x2, x2
  4145fc:	bl	414540 <ferror@plt+0x11c70>
  414600:	ldp	x29, x30, [sp], #16
  414604:	ret
  414608:	mov	x9, x0
  41460c:	ldr	x5, [x4]
  414610:	mov	w0, #0x7                   	// #7
  414614:	cmp	x5, #0x3
  414618:	b.ls	4146d4 <ferror@plt+0x11e04>  // b.plast
  41461c:	ldr	x11, [x2]
  414620:	mov	w0, #0x16                  	// #22
  414624:	cbz	x11, 4146d4 <ferror@plt+0x11e04>
  414628:	ldr	x12, [x1]
  41462c:	ldrb	w13, [x12]
  414630:	mov	w6, w13
  414634:	mov	x5, #0x2                   	// #2
  414638:	cmp	w13, #0x7f
  41463c:	b.ls	41467c <ferror@plt+0x11dac>  // b.plast
  414640:	adrp	x7, 45c000 <_obstack_memory_used@@Base+0x15094>
  414644:	add	x7, x7, #0x410
  414648:	add	x14, x7, #0x8
  41464c:	add	x0, x7, x5
  414650:	ldurb	w8, [x0, #-1]
  414654:	bic	w10, w6, w8
  414658:	add	x0, x14, x5
  41465c:	ldurb	w0, [x0, #-1]
  414660:	cmp	w10, w0
  414664:	b.eq	4146d8 <ferror@plt+0x11e08>  // b.none
  414668:	add	x5, x5, #0x1
  41466c:	cmp	x5, #0x7
  414670:	b.ne	41464c <ferror@plt+0x11d7c>  // b.any
  414674:	mov	w0, #0x54                  	// #84
  414678:	b	4146d4 <ferror@plt+0x11e04>
  41467c:	sub	x11, x11, #0x1
  414680:	str	x11, [x2]
  414684:	ldr	x0, [x1]
  414688:	add	x0, x0, #0x1
  41468c:	str	x0, [x1]
  414690:	ldr	x1, [x3]
  414694:	cbz	x9, 4147a4 <ferror@plt+0x11ed4>
  414698:	strb	w6, [x1, #3]
  41469c:	lsr	w0, w6, #8
  4146a0:	strb	w0, [x1, #2]
  4146a4:	lsr	w0, w6, #16
  4146a8:	strb	w0, [x1, #1]
  4146ac:	lsr	w6, w6, #24
  4146b0:	mov	x0, #0x0                   	// #0
  4146b4:	strb	w6, [x1, x0]
  4146b8:	ldr	x0, [x3]
  4146bc:	add	x0, x0, #0x4
  4146c0:	str	x0, [x3]
  4146c4:	ldr	x0, [x4]
  4146c8:	sub	x0, x0, #0x4
  4146cc:	str	x0, [x4]
  4146d0:	mov	w0, #0x0                   	// #0
  4146d4:	ret
  4146d8:	mov	w0, #0x16                  	// #22
  4146dc:	cmp	x5, x11
  4146e0:	b.hi	4146d4 <ferror@plt+0x11e04>  // b.pmore
  4146e4:	and	w6, w13, w8
  4146e8:	add	x0, x12, #0x1
  4146ec:	cmp	x5, #0x1
  4146f0:	b.ls	41479c <ferror@plt+0x11ecc>  // b.plast
  4146f4:	add	x12, x12, x5
  4146f8:	ldrb	w7, [x0], #1
  4146fc:	and	w8, w7, #0xc0
  414700:	cmp	w8, #0x80
  414704:	b.ne	4147c4 <ferror@plt+0x11ef4>  // b.any
  414708:	and	w7, w7, #0x3f
  41470c:	add	w6, w7, w6, lsl #6
  414710:	cmp	x0, x12
  414714:	b.ne	4146f8 <ferror@plt+0x11e28>  // b.any
  414718:	mov	w0, #0x54                  	// #84
  41471c:	cmp	w6, #0x7f
  414720:	b.ls	4146d4 <ferror@plt+0x11e04>  // b.plast
  414724:	cmp	w6, #0x7ff
  414728:	mov	w0, #0x54                  	// #84
  41472c:	ccmp	x5, #0x2, #0x0, ls  // ls = plast
  414730:	b.hi	4146d4 <ferror@plt+0x11e04>  // b.pmore
  414734:	mov	w0, #0xffff                	// #65535
  414738:	cmp	w6, w0
  41473c:	mov	w0, #0x54                  	// #84
  414740:	ccmp	x5, #0x3, #0x0, ls  // ls = plast
  414744:	b.hi	4146d4 <ferror@plt+0x11e04>  // b.pmore
  414748:	mov	w0, #0x1fffff              	// #2097151
  41474c:	cmp	w6, w0
  414750:	mov	w0, #0x54                  	// #84
  414754:	ccmp	x5, #0x4, #0x0, ls  // ls = plast
  414758:	b.hi	4146d4 <ferror@plt+0x11e04>  // b.pmore
  41475c:	mov	w0, #0x3ffffff             	// #67108863
  414760:	cmp	w6, w0
  414764:	mov	w0, #0x54                  	// #84
  414768:	ccmp	x5, #0x5, #0x0, ls  // ls = plast
  41476c:	b.hi	4146d4 <ferror@plt+0x11e04>  // b.pmore
  414770:	sub	w0, w6, #0xd, lsl #12
  414774:	sub	w0, w0, #0x800
  414778:	cmp	w0, #0x7ff
  41477c:	mov	w0, #0x54                  	// #84
  414780:	ccmp	w6, #0x0, #0x1, hi  // hi = pmore
  414784:	b.lt	4146d4 <ferror@plt+0x11e04>  // b.tstop
  414788:	str	x12, [x1]
  41478c:	ldr	x0, [x2]
  414790:	sub	x5, x0, x5
  414794:	str	x5, [x2]
  414798:	b	414690 <ferror@plt+0x11dc0>
  41479c:	mov	x12, x0
  4147a0:	b	414724 <ferror@plt+0x11e54>
  4147a4:	strb	w6, [x1]
  4147a8:	lsr	w0, w6, #8
  4147ac:	strb	w0, [x1, #1]
  4147b0:	lsr	w0, w6, #16
  4147b4:	strb	w0, [x1, #2]
  4147b8:	lsr	w6, w6, #24
  4147bc:	mov	x0, #0x3                   	// #3
  4147c0:	b	4146b4 <ferror@plt+0x11de4>
  4147c4:	mov	w0, #0x54                  	// #84
  4147c8:	b	4146d4 <ferror@plt+0x11e04>
  4147cc:	ldr	x7, [x1]
  4147d0:	ldr	x8, [x2]
  4147d4:	cmp	x8, #0x1
  4147d8:	b.ls	41499c <ferror@plt+0x120cc>  // b.plast
  4147dc:	mov	x6, x0
  4147e0:	cmp	x0, #0x0
  4147e4:	cset	w0, eq  // eq = none
  4147e8:	ldrb	w5, [x7, w0, uxtw]
  4147ec:	cset	w0, ne  // ne = any
  4147f0:	ldrb	w0, [x7, w0, uxtw]
  4147f4:	add	w5, w0, w5, lsl #8
  4147f8:	sub	w9, w5, #0xd, lsl #12
  4147fc:	sub	w9, w9, #0xc00
  414800:	mov	w0, #0x54                  	// #84
  414804:	cmp	w9, #0x3ff
  414808:	b.ls	4149bc <ferror@plt+0x120ec>  // b.plast
  41480c:	sub	sp, sp, #0x10
  414810:	sub	w9, w5, #0xd, lsl #12
  414814:	sub	w9, w9, #0x800
  414818:	cmp	w9, #0x3ff
  41481c:	b.hi	4148ec <ferror@plt+0x1201c>  // b.pmore
  414820:	mov	w0, #0x16                  	// #22
  414824:	cmp	x8, #0x3
  414828:	b.ls	414974 <ferror@plt+0x120a4>  // b.plast
  41482c:	cbz	x6, 4149ac <ferror@plt+0x120dc>
  414830:	ldrb	w5, [x7, #2]
  414834:	lsl	w0, w5, #8
  414838:	mov	x5, #0x3                   	// #3
  41483c:	ldrb	w5, [x7, x5]
  414840:	add	w5, w5, w0
  414844:	sub	w6, w5, #0xd, lsl #12
  414848:	sub	w6, w6, #0xc00
  41484c:	mov	w0, #0x54                  	// #84
  414850:	cmp	w6, #0x3ff
  414854:	b.hi	414974 <ferror@plt+0x120a4>  // b.pmore
  414858:	add	w5, w5, w9, lsl #10
  41485c:	add	w5, w5, #0x2, lsl #12
  414860:	add	w5, w5, #0x400
  414864:	ldr	x9, [x3]
  414868:	mov	w0, w5
  41486c:	add	x8, sp, #0xe
  414870:	mov	x6, #0x1                   	// #1
  414874:	adrp	x10, 45c000 <_obstack_memory_used@@Base+0x15094>
  414878:	add	x10, x10, #0x410
  41487c:	add	x10, x10, #0x10
  414880:	mov	x11, x8
  414884:	and	w7, w0, #0x3f
  414888:	orr	w7, w7, #0xffffff80
  41488c:	strb	w7, [x8, #-1]!
  414890:	lsr	w0, w0, #6
  414894:	mov	x12, x6
  414898:	add	x6, x6, #0x1
  41489c:	cmp	w0, #0x3e
  4148a0:	b.hi	414880 <ferror@plt+0x11fb0>  // b.pmore
  4148a4:	add	x7, x10, x6
  4148a8:	ldurb	w7, [x7, #-1]
  4148ac:	tst	w7, w0
  4148b0:	b.ne	414880 <ferror@plt+0x11fb0>  // b.any
  4148b4:	sub	x7, x11, #0x2
  4148b8:	adrp	x8, 45c000 <_obstack_memory_used@@Base+0x15094>
  4148bc:	add	x8, x8, #0x410
  4148c0:	add	x8, x8, #0x18
  4148c4:	ldrb	w8, [x8, x12]
  4148c8:	orr	w0, w0, w8
  4148cc:	sturb	w0, [x11, #-2]
  4148d0:	ldr	x0, [x4]
  4148d4:	cmp	x6, x0
  4148d8:	b.hi	4149a4 <ferror@plt+0x120d4>  // b.pmore
  4148dc:	add	x0, sp, #0xe
  4148e0:	cmp	x7, x0
  4148e4:	b.cc	41490c <ferror@plt+0x1203c>  // b.lo, b.ul, b.last
  4148e8:	b	41493c <ferror@plt+0x1206c>
  4148ec:	ldr	x9, [x3]
  4148f0:	cmp	w5, #0x7f
  4148f4:	b.hi	414868 <ferror@plt+0x11f98>  // b.pmore
  4148f8:	strb	w5, [sp, #13]
  4148fc:	ldr	x0, [x4]
  414900:	cbz	x0, 4149a4 <ferror@plt+0x120d4>
  414904:	add	x7, sp, #0xd
  414908:	mov	x6, #0x1                   	// #1
  41490c:	mov	x11, x7
  414910:	add	x8, sp, #0xe
  414914:	sub	x8, x8, x7
  414918:	mov	x0, #0x0                   	// #0
  41491c:	ldrb	w10, [x7, x0]
  414920:	strb	w10, [x9, x0]
  414924:	add	x0, x0, #0x1
  414928:	cmp	x8, x0
  41492c:	b.ne	41491c <ferror@plt+0x1204c>  // b.any
  414930:	add	x0, sp, #0xe
  414934:	sub	x0, x0, x11
  414938:	add	x9, x9, x0
  41493c:	ldr	x0, [x4]
  414940:	sub	x6, x0, x6
  414944:	str	x6, [x4]
  414948:	str	x9, [x3]
  41494c:	mov	w0, #0xffff                	// #65535
  414950:	cmp	w5, w0
  414954:	b.hi	41497c <ferror@plt+0x120ac>  // b.pmore
  414958:	ldr	x0, [x1]
  41495c:	add	x0, x0, #0x2
  414960:	str	x0, [x1]
  414964:	ldr	x0, [x2]
  414968:	sub	x0, x0, #0x2
  41496c:	str	x0, [x2]
  414970:	mov	w0, #0x0                   	// #0
  414974:	add	sp, sp, #0x10
  414978:	ret
  41497c:	ldr	x0, [x1]
  414980:	add	x0, x0, #0x4
  414984:	str	x0, [x1]
  414988:	ldr	x0, [x2]
  41498c:	sub	x0, x0, #0x4
  414990:	str	x0, [x2]
  414994:	mov	w0, #0x0                   	// #0
  414998:	b	414974 <ferror@plt+0x120a4>
  41499c:	mov	w0, #0x16                  	// #22
  4149a0:	ret
  4149a4:	mov	w0, #0x7                   	// #7
  4149a8:	b	414974 <ferror@plt+0x120a4>
  4149ac:	ldrb	w5, [x7, #3]
  4149b0:	lsl	w0, w5, #8
  4149b4:	mov	x5, #0x2                   	// #2
  4149b8:	b	41483c <ferror@plt+0x11f6c>
  4149bc:	ret
  4149c0:	cmp	w1, #0x3f
  4149c4:	b.eq	414a68 <ferror@plt+0x12198>  // b.none
  4149c8:	b.hi	414a20 <ferror@plt+0x12150>  // b.pmore
  4149cc:	cmp	w1, #0x3b
  4149d0:	b.eq	414a50 <ferror@plt+0x12180>  // b.none
  4149d4:	b.ls	4149f8 <ferror@plt+0x12128>  // b.plast
  4149d8:	cmp	w1, #0x3c
  4149dc:	b.ne	414a38 <ferror@plt+0x12168>  // b.any
  4149e0:	add	x0, x0, #0x220
  4149e4:	ldp	x2, x3, [x0]
  4149e8:	stp	x2, x3, [x8]
  4149ec:	ldr	x0, [x0, #16]
  4149f0:	str	x0, [x8, #16]
  4149f4:	b	414a4c <ferror@plt+0x1217c>
  4149f8:	cmp	w1, #0x39
  4149fc:	b.eq	414a68 <ferror@plt+0x12198>  // b.none
  414a00:	cmp	w1, #0x3a
  414a04:	b.ne	414a38 <ferror@plt+0x12168>  // b.any
  414a08:	add	x0, x0, #0x238
  414a0c:	ldp	x2, x3, [x0]
  414a10:	stp	x2, x3, [x8]
  414a14:	ldr	x0, [x0, #16]
  414a18:	str	x0, [x8, #16]
  414a1c:	b	414a4c <ferror@plt+0x1217c>
  414a20:	cmp	w1, #0x41
  414a24:	b.eq	414a50 <ferror@plt+0x12180>  // b.none
  414a28:	cmp	w1, #0x42
  414a2c:	b.eq	4149e0 <ferror@plt+0x12110>  // b.none
  414a30:	cmp	w1, #0x40
  414a34:	b.eq	414a08 <ferror@plt+0x12138>  // b.none
  414a38:	add	x0, x0, #0x208
  414a3c:	ldp	x2, x3, [x0]
  414a40:	stp	x2, x3, [x8]
  414a44:	ldr	x0, [x0, #16]
  414a48:	str	x0, [x8, #16]
  414a4c:	ret
  414a50:	add	x0, x0, #0x250
  414a54:	ldp	x2, x3, [x0]
  414a58:	stp	x2, x3, [x8]
  414a5c:	ldr	x0, [x0, #16]
  414a60:	str	x0, [x8, #16]
  414a64:	b	414a4c <ferror@plt+0x1217c>
  414a68:	add	x0, x0, #0x268
  414a6c:	ldp	x2, x3, [x0]
  414a70:	stp	x2, x3, [x8]
  414a74:	ldr	x0, [x0, #16]
  414a78:	str	x0, [x8, #16]
  414a7c:	b	414a4c <ferror@plt+0x1217c>
  414a80:	mov	w0, #0x1                   	// #1
  414a84:	ret
  414a88:	stp	x29, x30, [sp, #-80]!
  414a8c:	mov	x29, sp
  414a90:	stp	x19, x20, [sp, #16]
  414a94:	stp	x21, x22, [sp, #32]
  414a98:	stp	x23, x24, [sp, #48]
  414a9c:	str	x25, [sp, #64]
  414aa0:	mov	x20, x8
  414aa4:	mov	x25, x0
  414aa8:	mov	x23, x1
  414aac:	mov	x22, x2
  414ab0:	mov	x1, x2
  414ab4:	mov	x0, x23
  414ab8:	bl	4024c0 <strcasecmp@plt>
  414abc:	cbnz	w0, 414af4 <ferror@plt+0x12224>
  414ac0:	adrp	x0, 414000 <ferror@plt+0x11730>
  414ac4:	add	x0, x0, #0xfcc
  414ac8:	str	x0, [x20]
  414acc:	mov	x0, #0xffffffffffffffff    	// #-1
  414ad0:	str	x0, [x20, #8]
  414ad4:	str	w0, [x20, #16]
  414ad8:	mov	sp, x29
  414adc:	ldp	x19, x20, [sp, #16]
  414ae0:	ldp	x21, x22, [sp, #32]
  414ae4:	ldp	x23, x24, [sp, #48]
  414ae8:	ldr	x25, [sp, #64]
  414aec:	ldp	x29, x30, [sp], #80
  414af0:	ret
  414af4:	mov	x0, x23
  414af8:	bl	4022b0 <strlen@plt>
  414afc:	mov	x19, x0
  414b00:	mov	x0, x22
  414b04:	bl	4022b0 <strlen@plt>
  414b08:	add	x19, x19, x0
  414b0c:	add	x19, x19, #0x11
  414b10:	and	x19, x19, #0xfffffffffffffff0
  414b14:	sub	sp, sp, x19
  414b18:	mov	x24, sp
  414b1c:	mov	x1, x22
  414b20:	mov	x0, x24
  414b24:	bl	402710 <strcpy@plt>
  414b28:	mov	x0, x24
  414b2c:	bl	4022b0 <strlen@plt>
  414b30:	mov	w1, #0x2f                  	// #47
  414b34:	strh	w1, [x24, x0]
  414b38:	mov	x1, x23
  414b3c:	mov	x0, x24
  414b40:	bl	402480 <strcat@plt>
  414b44:	adrp	x19, 45c000 <_obstack_memory_used@@Base+0x15094>
  414b48:	add	x19, x19, #0x410
  414b4c:	add	x19, x19, #0x20
  414b50:	mov	x21, #0x0                   	// #0
  414b54:	ldr	x1, [x19]
  414b58:	mov	x0, x24
  414b5c:	bl	4024c0 <strcasecmp@plt>
  414b60:	cbz	w0, 414bd4 <ferror@plt+0x12304>
  414b64:	add	x21, x21, #0x1
  414b68:	add	x19, x19, #0x18
  414b6c:	cmp	x21, #0x8
  414b70:	b.ne	414b54 <ferror@plt+0x12284>  // b.any
  414b74:	adrp	x0, 414000 <ferror@plt+0x11730>
  414b78:	add	x0, x0, #0xc30
  414b7c:	str	x0, [x20]
  414b80:	mov	x1, x22
  414b84:	mov	x0, x23
  414b88:	bl	402720 <iconv_open@plt>
  414b8c:	str	x0, [x20, #8]
  414b90:	mov	w1, #0xffffffff            	// #-1
  414b94:	str	w1, [x20, #16]
  414b98:	cmn	x0, #0x1
  414b9c:	b.ne	414ad8 <ferror@plt+0x12208>  // b.any
  414ba0:	bl	402810 <__errno_location@plt>
  414ba4:	ldr	w0, [x0]
  414ba8:	cmp	w0, #0x16
  414bac:	b.eq	414c10 <ferror@plt+0x12340>  // b.none
  414bb0:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  414bb4:	add	x2, x2, #0xd10
  414bb8:	mov	w1, #0x3                   	// #3
  414bbc:	mov	x0, x25
  414bc0:	bl	41cf08 <ferror@plt+0x1a638>
  414bc4:	adrp	x0, 414000 <ferror@plt+0x11730>
  414bc8:	add	x0, x0, #0xfcc
  414bcc:	str	x0, [x20]
  414bd0:	b	414ad8 <ferror@plt+0x12208>
  414bd4:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x15094>
  414bd8:	add	x0, x0, #0x410
  414bdc:	add	x1, x0, #0x20
  414be0:	lsl	x0, x21, #1
  414be4:	add	x2, x0, x21
  414be8:	add	x2, x1, x2, lsl #3
  414bec:	ldr	x2, [x2, #8]
  414bf0:	str	x2, [x20]
  414bf4:	add	x0, x0, x21
  414bf8:	add	x0, x1, x0, lsl #3
  414bfc:	ldr	x0, [x0, #16]
  414c00:	str	x0, [x20, #8]
  414c04:	mov	w0, #0xffffffff            	// #-1
  414c08:	str	w0, [x20, #16]
  414c0c:	b	414ad8 <ferror@plt+0x12208>
  414c10:	mov	x4, x23
  414c14:	mov	x3, x22
  414c18:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  414c1c:	add	x2, x2, #0xce0
  414c20:	mov	w1, #0x3                   	// #3
  414c24:	mov	x0, x25
  414c28:	bl	41c9fc <ferror@plt+0x1a12c>
  414c2c:	b	414bc4 <ferror@plt+0x122f4>
  414c30:	stp	x29, x30, [sp, #-80]!
  414c34:	mov	x29, sp
  414c38:	stp	x19, x20, [sp, #16]
  414c3c:	stp	x21, x22, [sp, #32]
  414c40:	mov	x20, x0
  414c44:	mov	x22, x1
  414c48:	mov	x21, x2
  414c4c:	mov	x19, x3
  414c50:	mov	x4, #0x0                   	// #0
  414c54:	mov	x3, #0x0                   	// #0
  414c58:	mov	x2, #0x0                   	// #0
  414c5c:	mov	x1, #0x0                   	// #0
  414c60:	bl	402630 <iconv@plt>
  414c64:	cmn	x0, #0x1
  414c68:	b.eq	414db4 <ferror@plt+0x124e4>  // b.none
  414c6c:	str	x22, [sp, #72]
  414c70:	str	x21, [sp, #56]
  414c74:	ldr	x2, [x19, #16]
  414c78:	ldr	x1, [x19]
  414c7c:	add	x1, x1, x2
  414c80:	str	x1, [sp, #64]
  414c84:	ldr	x0, [x19, #8]
  414c88:	sub	x0, x0, x2
  414c8c:	str	x0, [sp, #48]
  414c90:	add	x4, sp, #0x30
  414c94:	add	x3, sp, #0x40
  414c98:	add	x2, sp, #0x38
  414c9c:	add	x1, sp, #0x48
  414ca0:	mov	x0, x20
  414ca4:	bl	402630 <iconv@plt>
  414ca8:	ldr	x0, [sp, #56]
  414cac:	cbnz	x0, 414d68 <ferror@plt+0x12498>
  414cb0:	add	x4, sp, #0x30
  414cb4:	add	x3, sp, #0x40
  414cb8:	mov	x2, #0x0                   	// #0
  414cbc:	mov	x1, #0x0                   	// #0
  414cc0:	mov	x0, x20
  414cc4:	bl	402630 <iconv@plt>
  414cc8:	cmn	x0, #0x1
  414ccc:	b.ne	414d44 <ferror@plt+0x12474>  // b.any
  414cd0:	bl	402810 <__errno_location@plt>
  414cd4:	ldr	w1, [x0]
  414cd8:	mov	w0, #0x0                   	// #0
  414cdc:	cmp	w1, #0x7
  414ce0:	b.ne	414d58 <ferror@plt+0x12488>  // b.any
  414ce4:	ldr	x0, [sp, #48]
  414ce8:	add	x0, x0, #0x100
  414cec:	str	x0, [sp, #48]
  414cf0:	ldr	x1, [x19, #8]
  414cf4:	add	x1, x1, #0x100
  414cf8:	str	x1, [x19, #8]
  414cfc:	ldr	x0, [x19]
  414d00:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  414d04:	str	x0, [x19]
  414d08:	ldr	x1, [x19, #8]
  414d0c:	ldr	x2, [sp, #48]
  414d10:	sub	x1, x1, x2
  414d14:	add	x0, x0, x1
  414d18:	str	x0, [sp, #64]
  414d1c:	add	x4, sp, #0x30
  414d20:	add	x3, sp, #0x40
  414d24:	mov	x2, #0x0                   	// #0
  414d28:	mov	x1, #0x0                   	// #0
  414d2c:	mov	x0, x20
  414d30:	bl	402630 <iconv@plt>
  414d34:	mov	x1, x0
  414d38:	mov	w0, #0x0                   	// #0
  414d3c:	cmn	x1, #0x1
  414d40:	b.eq	414d58 <ferror@plt+0x12488>  // b.none
  414d44:	ldr	x0, [x19, #8]
  414d48:	ldr	x1, [sp, #48]
  414d4c:	sub	x0, x0, x1
  414d50:	str	x0, [x19, #16]
  414d54:	mov	w0, #0x1                   	// #1
  414d58:	ldp	x19, x20, [sp, #16]
  414d5c:	ldp	x21, x22, [sp, #32]
  414d60:	ldp	x29, x30, [sp], #80
  414d64:	ret
  414d68:	bl	402810 <__errno_location@plt>
  414d6c:	ldr	w0, [x0]
  414d70:	cmp	w0, #0x7
  414d74:	b.ne	414dbc <ferror@plt+0x124ec>  // b.any
  414d78:	ldr	x0, [sp, #48]
  414d7c:	add	x0, x0, #0x100
  414d80:	str	x0, [sp, #48]
  414d84:	ldr	x1, [x19, #8]
  414d88:	add	x1, x1, #0x100
  414d8c:	str	x1, [x19, #8]
  414d90:	ldr	x0, [x19]
  414d94:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  414d98:	str	x0, [x19]
  414d9c:	ldr	x1, [x19, #8]
  414da0:	ldr	x2, [sp, #48]
  414da4:	sub	x1, x1, x2
  414da8:	add	x0, x0, x1
  414dac:	str	x0, [sp, #64]
  414db0:	b	414c90 <ferror@plt+0x123c0>
  414db4:	mov	w0, #0x0                   	// #0
  414db8:	b	414d58 <ferror@plt+0x12488>
  414dbc:	mov	w0, #0x0                   	// #0
  414dc0:	b	414d58 <ferror@plt+0x12488>
  414dc4:	stp	x29, x30, [sp, #-80]!
  414dc8:	mov	x29, sp
  414dcc:	stp	x19, x20, [sp, #16]
  414dd0:	str	x21, [sp, #32]
  414dd4:	mov	x21, x0
  414dd8:	mov	x19, x3
  414ddc:	str	x1, [sp, #48]
  414de0:	str	x2, [sp, #64]
  414de4:	ldr	x0, [x3, #16]
  414de8:	ldr	x2, [x3]
  414dec:	add	x2, x2, x0
  414df0:	str	x2, [sp, #56]
  414df4:	ldr	x1, [x3, #8]
  414df8:	sub	x1, x1, x0
  414dfc:	str	x1, [sp, #72]
  414e00:	add	x4, sp, #0x48
  414e04:	add	x3, sp, #0x38
  414e08:	add	x2, sp, #0x40
  414e0c:	add	x1, sp, #0x30
  414e10:	mov	x0, x21
  414e14:	bl	415494 <ferror@plt+0x12bc4>
  414e18:	mov	w20, w0
  414e1c:	ldr	x2, [sp, #64]
  414e20:	cmp	w0, #0x0
  414e24:	cset	w1, ne  // ne = any
  414e28:	cmp	x2, #0x0
  414e2c:	csinc	w0, w1, wzr, ne  // ne = any
  414e30:	cbz	w0, 414e00 <ferror@plt+0x12530>
  414e34:	cbnz	x2, 414e58 <ferror@plt+0x12588>
  414e38:	ldr	x1, [x19, #8]
  414e3c:	ldr	x2, [sp, #72]
  414e40:	sub	x1, x1, x2
  414e44:	str	x1, [x19, #16]
  414e48:	ldp	x19, x20, [sp, #16]
  414e4c:	ldr	x21, [sp, #32]
  414e50:	ldp	x29, x30, [sp], #80
  414e54:	ret
  414e58:	cmp	w20, #0x7
  414e5c:	b.ne	414e9c <ferror@plt+0x125cc>  // b.any
  414e60:	ldr	x0, [sp, #72]
  414e64:	add	x0, x0, #0x100
  414e68:	str	x0, [sp, #72]
  414e6c:	ldr	x1, [x19, #8]
  414e70:	add	x1, x1, #0x100
  414e74:	str	x1, [x19, #8]
  414e78:	ldr	x0, [x19]
  414e7c:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  414e80:	str	x0, [x19]
  414e84:	ldr	x1, [x19, #8]
  414e88:	ldr	x2, [sp, #72]
  414e8c:	sub	x1, x1, x2
  414e90:	add	x0, x0, x1
  414e94:	str	x0, [sp, #56]
  414e98:	b	414e00 <ferror@plt+0x12530>
  414e9c:	bl	402810 <__errno_location@plt>
  414ea0:	str	w20, [x0]
  414ea4:	mov	w0, #0x0                   	// #0
  414ea8:	b	414e48 <ferror@plt+0x12578>
  414eac:	stp	x29, x30, [sp, #-80]!
  414eb0:	mov	x29, sp
  414eb4:	stp	x19, x20, [sp, #16]
  414eb8:	stp	x21, x22, [sp, #32]
  414ebc:	stp	x25, x26, [sp, #64]
  414ec0:	mov	w19, w1
  414ec4:	mov	x20, x2
  414ec8:	ldrsw	x26, [x3, #16]
  414ecc:	ldr	x21, [x0, #1216]
  414ed0:	cmp	x21, x26
  414ed4:	b.eq	414f88 <ferror@plt+0x126b8>  // b.none
  414ed8:	stp	x23, x24, [sp, #48]
  414edc:	ldrb	w25, [x0, #1242]
  414ee0:	cmp	x21, #0x20
  414ee4:	mov	x22, #0x20                  	// #32
  414ee8:	csel	x0, x21, x22, ls  // ls = plast
  414eec:	mov	x22, #0x1                   	// #1
  414ef0:	lsl	x22, x22, x0
  414ef4:	sub	x22, x22, #0x1
  414ef8:	udiv	x23, x26, x21
  414efc:	ldr	x24, [x2, #16]
  414f00:	ldr	x1, [x2, #8]
  414f04:	add	x0, x23, x24
  414f08:	cmp	x0, x1
  414f0c:	b.hi	414f70 <ferror@plt+0x126a0>  // b.pmore
  414f10:	cmp	x21, x26
  414f14:	b.hi	414f4c <ferror@plt+0x1267c>  // b.pmore
  414f18:	mov	x0, #0x0                   	// #0
  414f1c:	sub	x4, x23, #0x1
  414f20:	and	w2, w19, w22
  414f24:	lsr	w19, w19, w21
  414f28:	ldr	x3, [x20]
  414f2c:	sub	x1, x4, x0
  414f30:	cmp	w25, #0x0
  414f34:	csel	x1, x1, x0, ne  // ne = any
  414f38:	add	x3, x3, x1
  414f3c:	strb	w2, [x3, x24]
  414f40:	add	x0, x0, #0x1
  414f44:	cmp	x23, x0
  414f48:	b.hi	414f20 <ferror@plt+0x12650>  // b.pmore
  414f4c:	ldr	x0, [x20, #16]
  414f50:	add	x23, x0, x23
  414f54:	str	x23, [x20, #16]
  414f58:	ldp	x23, x24, [sp, #48]
  414f5c:	ldp	x19, x20, [sp, #16]
  414f60:	ldp	x21, x22, [sp, #32]
  414f64:	ldp	x25, x26, [sp, #64]
  414f68:	ldp	x29, x30, [sp], #80
  414f6c:	ret
  414f70:	add	x1, x1, #0x100
  414f74:	str	x1, [x2, #8]
  414f78:	ldr	x0, [x2]
  414f7c:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  414f80:	str	x0, [x20]
  414f84:	b	414f10 <ferror@plt+0x12640>
  414f88:	ldr	x1, [x2, #8]
  414f8c:	ldr	x0, [x2, #16]
  414f90:	add	x0, x0, #0x1
  414f94:	cmp	x0, x1
  414f98:	b.hi	414fb4 <ferror@plt+0x126e4>  // b.pmore
  414f9c:	ldr	x1, [x20]
  414fa0:	ldr	x0, [x20, #16]
  414fa4:	add	x2, x0, #0x1
  414fa8:	str	x2, [x20, #16]
  414fac:	strb	w19, [x1, x0]
  414fb0:	b	414f5c <ferror@plt+0x1268c>
  414fb4:	add	x1, x1, #0x100
  414fb8:	str	x1, [x2, #8]
  414fbc:	ldr	x0, [x2]
  414fc0:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  414fc4:	str	x0, [x20]
  414fc8:	b	414f9c <ferror@plt+0x126cc>
  414fcc:	stp	x29, x30, [sp, #-48]!
  414fd0:	mov	x29, sp
  414fd4:	stp	x19, x20, [sp, #16]
  414fd8:	str	x21, [sp, #32]
  414fdc:	mov	x21, x1
  414fe0:	mov	x20, x2
  414fe4:	mov	x19, x3
  414fe8:	ldr	x0, [x3, #16]
  414fec:	add	x0, x2, x0
  414ff0:	ldr	x1, [x3, #8]
  414ff4:	cmp	x0, x1
  414ff8:	b.hi	415034 <ferror@plt+0x12764>  // b.pmore
  414ffc:	ldr	x3, [x19]
  415000:	ldr	x0, [x19, #16]
  415004:	mov	x2, x20
  415008:	mov	x1, x21
  41500c:	add	x0, x3, x0
  415010:	bl	402260 <memcpy@plt>
  415014:	ldr	x2, [x19, #16]
  415018:	add	x20, x2, x20
  41501c:	str	x20, [x19, #16]
  415020:	mov	w0, #0x1                   	// #1
  415024:	ldp	x19, x20, [sp, #16]
  415028:	ldr	x21, [sp, #32]
  41502c:	ldp	x29, x30, [sp], #48
  415030:	ret
  415034:	add	x1, x0, x0, lsr #2
  415038:	str	x1, [x3, #8]
  41503c:	ldr	x0, [x3]
  415040:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  415044:	str	x0, [x19]
  415048:	b	414ffc <ferror@plt+0x1272c>
  41504c:	stp	x29, x30, [sp, #-80]!
  415050:	mov	x29, sp
  415054:	stp	x19, x20, [sp, #16]
  415058:	str	x21, [sp, #32]
  41505c:	mov	x21, x0
  415060:	mov	x19, x3
  415064:	str	x1, [sp, #48]
  415068:	str	x2, [sp, #64]
  41506c:	ldr	x0, [x3, #16]
  415070:	ldr	x2, [x3]
  415074:	add	x2, x2, x0
  415078:	str	x2, [sp, #56]
  41507c:	ldr	x1, [x3, #8]
  415080:	sub	x1, x1, x0
  415084:	str	x1, [sp, #72]
  415088:	add	x4, sp, #0x48
  41508c:	add	x3, sp, #0x38
  415090:	add	x2, sp, #0x40
  415094:	add	x1, sp, #0x30
  415098:	mov	x0, x21
  41509c:	bl	415304 <ferror@plt+0x12a34>
  4150a0:	mov	w20, w0
  4150a4:	ldr	x2, [sp, #64]
  4150a8:	cmp	w0, #0x0
  4150ac:	cset	w1, ne  // ne = any
  4150b0:	cmp	x2, #0x0
  4150b4:	csinc	w0, w1, wzr, ne  // ne = any
  4150b8:	cbz	w0, 415088 <ferror@plt+0x127b8>
  4150bc:	cbnz	x2, 4150e0 <ferror@plt+0x12810>
  4150c0:	ldr	x1, [x19, #8]
  4150c4:	ldr	x2, [sp, #72]
  4150c8:	sub	x1, x1, x2
  4150cc:	str	x1, [x19, #16]
  4150d0:	ldp	x19, x20, [sp, #16]
  4150d4:	ldr	x21, [sp, #32]
  4150d8:	ldp	x29, x30, [sp], #80
  4150dc:	ret
  4150e0:	cmp	w20, #0x7
  4150e4:	b.ne	415124 <ferror@plt+0x12854>  // b.any
  4150e8:	ldr	x0, [sp, #72]
  4150ec:	add	x0, x0, #0x100
  4150f0:	str	x0, [sp, #72]
  4150f4:	ldr	x1, [x19, #8]
  4150f8:	add	x1, x1, #0x100
  4150fc:	str	x1, [x19, #8]
  415100:	ldr	x0, [x19]
  415104:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  415108:	str	x0, [x19]
  41510c:	ldr	x1, [x19, #8]
  415110:	ldr	x2, [sp, #72]
  415114:	sub	x1, x1, x2
  415118:	add	x0, x0, x1
  41511c:	str	x0, [sp, #56]
  415120:	b	415088 <ferror@plt+0x127b8>
  415124:	bl	402810 <__errno_location@plt>
  415128:	str	w20, [x0]
  41512c:	mov	w0, #0x0                   	// #0
  415130:	b	4150d0 <ferror@plt+0x12800>
  415134:	stp	x29, x30, [sp, #-80]!
  415138:	mov	x29, sp
  41513c:	stp	x19, x20, [sp, #16]
  415140:	str	x21, [sp, #32]
  415144:	mov	x21, x0
  415148:	mov	x19, x3
  41514c:	str	x1, [sp, #48]
  415150:	str	x2, [sp, #64]
  415154:	ldr	x0, [x3, #16]
  415158:	ldr	x2, [x3]
  41515c:	add	x2, x2, x0
  415160:	str	x2, [sp, #56]
  415164:	ldr	x1, [x3, #8]
  415168:	sub	x1, x1, x0
  41516c:	str	x1, [sp, #72]
  415170:	add	x4, sp, #0x48
  415174:	add	x3, sp, #0x38
  415178:	add	x2, sp, #0x40
  41517c:	add	x1, sp, #0x30
  415180:	mov	x0, x21
  415184:	bl	414608 <ferror@plt+0x11d38>
  415188:	mov	w20, w0
  41518c:	ldr	x2, [sp, #64]
  415190:	cmp	w0, #0x0
  415194:	cset	w1, ne  // ne = any
  415198:	cmp	x2, #0x0
  41519c:	csinc	w0, w1, wzr, ne  // ne = any
  4151a0:	cbz	w0, 415170 <ferror@plt+0x128a0>
  4151a4:	cbnz	x2, 4151c8 <ferror@plt+0x128f8>
  4151a8:	ldr	x1, [x19, #8]
  4151ac:	ldr	x2, [sp, #72]
  4151b0:	sub	x1, x1, x2
  4151b4:	str	x1, [x19, #16]
  4151b8:	ldp	x19, x20, [sp, #16]
  4151bc:	ldr	x21, [sp, #32]
  4151c0:	ldp	x29, x30, [sp], #80
  4151c4:	ret
  4151c8:	cmp	w20, #0x7
  4151cc:	b.ne	41520c <ferror@plt+0x1293c>  // b.any
  4151d0:	ldr	x0, [sp, #72]
  4151d4:	add	x0, x0, #0x100
  4151d8:	str	x0, [sp, #72]
  4151dc:	ldr	x1, [x19, #8]
  4151e0:	add	x1, x1, #0x100
  4151e4:	str	x1, [x19, #8]
  4151e8:	ldr	x0, [x19]
  4151ec:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  4151f0:	str	x0, [x19]
  4151f4:	ldr	x1, [x19, #8]
  4151f8:	ldr	x2, [sp, #72]
  4151fc:	sub	x1, x1, x2
  415200:	add	x0, x0, x1
  415204:	str	x0, [sp, #56]
  415208:	b	415170 <ferror@plt+0x128a0>
  41520c:	bl	402810 <__errno_location@plt>
  415210:	str	w20, [x0]
  415214:	mov	w0, #0x0                   	// #0
  415218:	b	4151b8 <ferror@plt+0x128e8>
  41521c:	stp	x29, x30, [sp, #-80]!
  415220:	mov	x29, sp
  415224:	stp	x19, x20, [sp, #16]
  415228:	str	x21, [sp, #32]
  41522c:	mov	x21, x0
  415230:	mov	x19, x3
  415234:	str	x1, [sp, #48]
  415238:	str	x2, [sp, #64]
  41523c:	ldr	x0, [x3, #16]
  415240:	ldr	x2, [x3]
  415244:	add	x2, x2, x0
  415248:	str	x2, [sp, #56]
  41524c:	ldr	x1, [x3, #8]
  415250:	sub	x1, x1, x0
  415254:	str	x1, [sp, #72]
  415258:	add	x4, sp, #0x48
  41525c:	add	x3, sp, #0x38
  415260:	add	x2, sp, #0x40
  415264:	add	x1, sp, #0x30
  415268:	mov	x0, x21
  41526c:	bl	4147cc <ferror@plt+0x11efc>
  415270:	mov	w20, w0
  415274:	ldr	x2, [sp, #64]
  415278:	cmp	w0, #0x0
  41527c:	cset	w1, ne  // ne = any
  415280:	cmp	x2, #0x0
  415284:	csinc	w0, w1, wzr, ne  // ne = any
  415288:	cbz	w0, 415258 <ferror@plt+0x12988>
  41528c:	cbnz	x2, 4152b0 <ferror@plt+0x129e0>
  415290:	ldr	x1, [x19, #8]
  415294:	ldr	x2, [sp, #72]
  415298:	sub	x1, x1, x2
  41529c:	str	x1, [x19, #16]
  4152a0:	ldp	x19, x20, [sp, #16]
  4152a4:	ldr	x21, [sp, #32]
  4152a8:	ldp	x29, x30, [sp], #80
  4152ac:	ret
  4152b0:	cmp	w20, #0x7
  4152b4:	b.ne	4152f4 <ferror@plt+0x12a24>  // b.any
  4152b8:	ldr	x0, [sp, #72]
  4152bc:	add	x0, x0, #0x100
  4152c0:	str	x0, [sp, #72]
  4152c4:	ldr	x1, [x19, #8]
  4152c8:	add	x1, x1, #0x100
  4152cc:	str	x1, [x19, #8]
  4152d0:	ldr	x0, [x19]
  4152d4:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  4152d8:	str	x0, [x19]
  4152dc:	ldr	x1, [x19, #8]
  4152e0:	ldr	x2, [sp, #72]
  4152e4:	sub	x1, x1, x2
  4152e8:	add	x0, x0, x1
  4152ec:	str	x0, [sp, #56]
  4152f0:	b	415258 <ferror@plt+0x12988>
  4152f4:	bl	402810 <__errno_location@plt>
  4152f8:	str	w20, [x0]
  4152fc:	mov	w0, #0x0                   	// #0
  415300:	b	4152a0 <ferror@plt+0x129d0>
  415304:	ldr	x5, [x2]
  415308:	cmp	x5, #0x3
  41530c:	b.ls	415460 <ferror@plt+0x12b90>  // b.plast
  415310:	ldr	x6, [x1]
  415314:	cbz	x0, 415470 <ferror@plt+0x12ba0>
  415318:	ldrb	w0, [x6]
  41531c:	ldrb	w5, [x6, #1]
  415320:	lsl	w5, w5, #16
  415324:	add	w0, w5, w0, lsl #24
  415328:	ldrb	w5, [x6, #2]
  41532c:	add	w0, w0, w5, lsl #8
  415330:	mov	x5, #0x3                   	// #3
  415334:	ldrb	w5, [x6, x5]
  415338:	add	w5, w5, w0
  41533c:	sub	w0, w5, #0xd, lsl #12
  415340:	sub	w0, w0, #0x800
  415344:	cmp	w0, #0x7ff
  415348:	mov	w0, #0x54                  	// #84
  41534c:	mov	w6, #0x7ffffffe            	// #2147483646
  415350:	ccmp	w5, w6, #0x2, hi  // hi = pmore
  415354:	b.hi	415490 <ferror@plt+0x12bc0>  // b.pmore
  415358:	sub	sp, sp, #0x10
  41535c:	ldr	x8, [x3]
  415360:	cmp	w5, #0x7f
  415364:	b.hi	4153e0 <ferror@plt+0x12b10>  // b.pmore
  415368:	strb	w5, [sp, #13]
  41536c:	ldr	x0, [x4]
  415370:	cbz	x0, 415468 <ferror@plt+0x12b98>
  415374:	add	x7, sp, #0xd
  415378:	mov	x6, #0x1                   	// #1
  41537c:	mov	x10, x7
  415380:	add	x5, sp, #0xe
  415384:	sub	x5, x5, x7
  415388:	mov	x0, #0x0                   	// #0
  41538c:	ldrb	w9, [x7, x0]
  415390:	strb	w9, [x8, x0]
  415394:	add	x0, x0, #0x1
  415398:	cmp	x5, x0
  41539c:	b.ne	41538c <ferror@plt+0x12abc>  // b.any
  4153a0:	add	x0, sp, #0xe
  4153a4:	sub	x0, x0, x10
  4153a8:	add	x8, x8, x0
  4153ac:	ldr	x0, [x4]
  4153b0:	sub	x6, x0, x6
  4153b4:	str	x6, [x4]
  4153b8:	str	x8, [x3]
  4153bc:	ldr	x0, [x1]
  4153c0:	add	x0, x0, #0x4
  4153c4:	str	x0, [x1]
  4153c8:	ldr	x0, [x2]
  4153cc:	sub	x0, x0, #0x4
  4153d0:	str	x0, [x2]
  4153d4:	mov	w0, #0x0                   	// #0
  4153d8:	add	sp, sp, #0x10
  4153dc:	ret
  4153e0:	add	x7, sp, #0xe
  4153e4:	mov	x6, #0x1                   	// #1
  4153e8:	adrp	x9, 45c000 <_obstack_memory_used@@Base+0x15094>
  4153ec:	add	x9, x9, #0x410
  4153f0:	add	x9, x9, #0x10
  4153f4:	mov	x10, x7
  4153f8:	and	w0, w5, #0x3f
  4153fc:	orr	w0, w0, #0xffffff80
  415400:	strb	w0, [x7, #-1]!
  415404:	lsr	w5, w5, #6
  415408:	mov	x11, x6
  41540c:	add	x6, x6, #0x1
  415410:	cmp	w5, #0x3e
  415414:	b.hi	4153f4 <ferror@plt+0x12b24>  // b.pmore
  415418:	add	x0, x9, x6
  41541c:	ldurb	w0, [x0, #-1]
  415420:	tst	w0, w5
  415424:	b.ne	4153f4 <ferror@plt+0x12b24>  // b.any
  415428:	sub	x7, x10, #0x2
  41542c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x15094>
  415430:	add	x0, x0, #0x410
  415434:	add	x0, x0, #0x18
  415438:	ldrb	w0, [x0, x11]
  41543c:	orr	w5, w5, w0
  415440:	sturb	w5, [x10, #-2]
  415444:	ldr	x0, [x4]
  415448:	cmp	x6, x0
  41544c:	b.hi	415468 <ferror@plt+0x12b98>  // b.pmore
  415450:	add	x0, sp, #0xe
  415454:	cmp	x7, x0
  415458:	b.cc	41537c <ferror@plt+0x12aac>  // b.lo, b.ul, b.last
  41545c:	b	4153ac <ferror@plt+0x12adc>
  415460:	mov	w0, #0x16                  	// #22
  415464:	ret
  415468:	mov	w0, #0x7                   	// #7
  41546c:	b	4153d8 <ferror@plt+0x12b08>
  415470:	ldrb	w0, [x6, #3]
  415474:	ldrb	w5, [x6, #2]
  415478:	lsl	w5, w5, #16
  41547c:	add	w0, w5, w0, lsl #24
  415480:	ldrb	w5, [x6, #1]
  415484:	add	w0, w0, w5, lsl #8
  415488:	mov	x5, #0x0                   	// #0
  41548c:	b	415334 <ferror@plt+0x12a64>
  415490:	ret
  415494:	mov	x12, x0
  415498:	ldr	x8, [x2]
  41549c:	mov	w0, #0x16                  	// #22
  4154a0:	cbz	x8, 4154f8 <ferror@plt+0x12c28>
  4154a4:	ldr	x11, [x1]
  4154a8:	ldr	x14, [x3]
  4154ac:	ldrb	w9, [x11]
  4154b0:	mov	w6, w9
  4154b4:	mov	x5, #0x2                   	// #2
  4154b8:	cmp	w9, #0x7f
  4154bc:	b.ls	4154fc <ferror@plt+0x12c2c>  // b.plast
  4154c0:	adrp	x7, 45c000 <_obstack_memory_used@@Base+0x15094>
  4154c4:	add	x7, x7, #0x410
  4154c8:	add	x15, x7, #0x8
  4154cc:	add	x0, x7, x5
  4154d0:	ldurb	w10, [x0, #-1]
  4154d4:	bic	w13, w6, w10
  4154d8:	add	x0, x15, x5
  4154dc:	ldurb	w0, [x0, #-1]
  4154e0:	cmp	w13, w0
  4154e4:	b.eq	415554 <ferror@plt+0x12c84>  // b.none
  4154e8:	add	x5, x5, #0x1
  4154ec:	cmp	x5, #0x7
  4154f0:	b.ne	4154cc <ferror@plt+0x12bfc>  // b.any
  4154f4:	mov	w0, #0x54                  	// #84
  4154f8:	ret
  4154fc:	sub	x0, x8, #0x1
  415500:	str	x0, [x2]
  415504:	ldr	x0, [x1]
  415508:	add	x0, x0, #0x1
  41550c:	str	x0, [x1]
  415510:	ldr	x0, [x4]
  415514:	cmp	x0, #0x1
  415518:	b.ls	4156b4 <ferror@plt+0x12de4>  // b.plast
  41551c:	cmp	x12, #0x0
  415520:	cset	w0, ne  // ne = any
  415524:	strb	w6, [x14, w0, uxtw]
  415528:	cset	w0, eq  // eq = none
  41552c:	lsr	w6, w6, #8
  415530:	strb	w6, [x14, w0, uxtw]
  415534:	ldr	x0, [x3]
  415538:	add	x0, x0, #0x2
  41553c:	str	x0, [x3]
  415540:	ldr	x0, [x4]
  415544:	sub	x0, x0, #0x2
  415548:	str	x0, [x4]
  41554c:	mov	w0, #0x0                   	// #0
  415550:	b	4154f8 <ferror@plt+0x12c28>
  415554:	mov	w0, #0x16                  	// #22
  415558:	cmp	x8, x5
  41555c:	b.cc	4154f8 <ferror@plt+0x12c28>  // b.lo, b.ul, b.last
  415560:	and	w6, w9, w10
  415564:	add	x9, x11, #0x1
  415568:	cmp	x5, #0x1
  41556c:	b.ls	41569c <ferror@plt+0x12dcc>  // b.plast
  415570:	add	x10, x11, x5
  415574:	ldrb	w7, [x9], #1
  415578:	and	w0, w7, #0xc0
  41557c:	cmp	w0, #0x80
  415580:	b.ne	4156e4 <ferror@plt+0x12e14>  // b.any
  415584:	and	w7, w7, #0x3f
  415588:	add	w6, w7, w6, lsl #6
  41558c:	cmp	x9, x10
  415590:	b.ne	415574 <ferror@plt+0x12ca4>  // b.any
  415594:	mov	w0, #0x54                  	// #84
  415598:	cmp	w6, #0x7f
  41559c:	b.ls	4154f8 <ferror@plt+0x12c28>  // b.plast
  4155a0:	cmp	w6, #0x7ff
  4155a4:	mov	w0, #0x54                  	// #84
  4155a8:	ccmp	x5, #0x2, #0x0, ls  // ls = plast
  4155ac:	b.hi	4154f8 <ferror@plt+0x12c28>  // b.pmore
  4155b0:	mov	w0, #0xffff                	// #65535
  4155b4:	cmp	w6, w0
  4155b8:	mov	w0, #0x54                  	// #84
  4155bc:	ccmp	x5, #0x3, #0x0, ls  // ls = plast
  4155c0:	b.hi	4154f8 <ferror@plt+0x12c28>  // b.pmore
  4155c4:	mov	w0, #0x1fffff              	// #2097151
  4155c8:	cmp	w6, w0
  4155cc:	mov	w0, #0x54                  	// #84
  4155d0:	ccmp	x5, #0x4, #0x0, ls  // ls = plast
  4155d4:	b.hi	4154f8 <ferror@plt+0x12c28>  // b.pmore
  4155d8:	mov	w0, #0x3ffffff             	// #67108863
  4155dc:	cmp	w6, w0
  4155e0:	mov	w0, #0x54                  	// #84
  4155e4:	ccmp	x5, #0x5, #0x0, ls  // ls = plast
  4155e8:	b.hi	4154f8 <ferror@plt+0x12c28>  // b.pmore
  4155ec:	sub	w0, w6, #0xd, lsl #12
  4155f0:	sub	w0, w0, #0x800
  4155f4:	cmp	w0, #0x7ff
  4155f8:	mov	w0, #0x54                  	// #84
  4155fc:	ccmp	w6, #0x0, #0x1, hi  // hi = pmore
  415600:	b.lt	4154f8 <ferror@plt+0x12c28>  // b.tstop
  415604:	str	x10, [x1]
  415608:	ldr	x0, [x2]
  41560c:	sub	x5, x0, x5
  415610:	str	x5, [x2]
  415614:	mov	w0, #0x10ffff              	// #1114111
  415618:	cmp	w6, w0
  41561c:	b.hi	4156a4 <ferror@plt+0x12dd4>  // b.pmore
  415620:	mov	w0, #0xffff                	// #65535
  415624:	cmp	w6, w0
  415628:	b.ls	415510 <ferror@plt+0x12c40>  // b.plast
  41562c:	ldr	x0, [x4]
  415630:	cmp	x0, #0x3
  415634:	b.ls	4156c4 <ferror@plt+0x12df4>  // b.plast
  415638:	sub	w0, w6, #0x10, lsl #12
  41563c:	mov	w1, #0xd800                	// #55296
  415640:	add	w0, w1, w0, lsr #10
  415644:	and	w6, w6, #0x3ff
  415648:	add	w6, w6, #0xd, lsl #12
  41564c:	add	w6, w6, #0xc00
  415650:	cmp	x12, #0x0
  415654:	cset	w1, ne  // ne = any
  415658:	strb	w0, [x14, w1, uxtw]
  41565c:	cset	w1, eq  // eq = none
  415660:	lsr	w0, w0, #8
  415664:	strb	w0, [x14, w1, uxtw]
  415668:	cbz	x12, 4156d4 <ferror@plt+0x12e04>
  41566c:	strb	w6, [x14, #3]
  415670:	lsr	w6, w6, #8
  415674:	mov	x0, #0x2                   	// #2
  415678:	strb	w6, [x14, x0]
  41567c:	ldr	x0, [x3]
  415680:	add	x0, x0, #0x4
  415684:	str	x0, [x3]
  415688:	ldr	x0, [x4]
  41568c:	sub	x0, x0, #0x4
  415690:	str	x0, [x4]
  415694:	mov	w0, #0x0                   	// #0
  415698:	b	4154f8 <ferror@plt+0x12c28>
  41569c:	mov	x10, x9
  4156a0:	b	4155a0 <ferror@plt+0x12cd0>
  4156a4:	str	x11, [x1]
  4156a8:	str	x8, [x2]
  4156ac:	mov	w0, #0x54                  	// #84
  4156b0:	b	4154f8 <ferror@plt+0x12c28>
  4156b4:	str	x11, [x1]
  4156b8:	str	x8, [x2]
  4156bc:	mov	w0, #0x7                   	// #7
  4156c0:	b	4154f8 <ferror@plt+0x12c28>
  4156c4:	str	x11, [x1]
  4156c8:	str	x8, [x2]
  4156cc:	mov	w0, #0x7                   	// #7
  4156d0:	b	4154f8 <ferror@plt+0x12c28>
  4156d4:	strb	w6, [x14, #2]
  4156d8:	lsr	w6, w6, #8
  4156dc:	mov	x0, #0x3                   	// #3
  4156e0:	b	415678 <ferror@plt+0x12da8>
  4156e4:	mov	w0, #0x54                  	// #84
  4156e8:	b	4154f8 <ferror@plt+0x12c28>
  4156ec:	stp	x29, x30, [sp, #-96]!
  4156f0:	mov	x29, sp
  4156f4:	stp	x19, x20, [sp, #16]
  4156f8:	stp	x21, x22, [sp, #32]
  4156fc:	str	x23, [sp, #48]
  415700:	mov	x19, x0
  415704:	ldr	x1, [x0, #1168]
  415708:	ldr	x21, [x0, #1176]
  41570c:	ldrb	w22, [x0, #1242]
  415710:	ldr	x0, [x0, #1232]
  415714:	cmp	x0, #0x1f
  415718:	b.ls	415864 <ferror@plt+0x12f94>  // b.plast
  41571c:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  415720:	add	x2, x0, #0xd40
  415724:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  415728:	add	x0, x0, #0xd30
  41572c:	cmp	w22, #0x0
  415730:	csel	x0, x0, x2, ne  // ne = any
  415734:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  415738:	add	x2, x2, #0xc0
  41573c:	cmp	x1, #0x0
  415740:	csel	x1, x2, x1, eq  // eq = none
  415744:	cmp	x21, #0x0
  415748:	csel	x21, x21, x0, ne  // ne = any
  41574c:	add	x23, x19, #0x208
  415750:	mov	x20, x2
  415754:	add	x8, sp, #0x40
  415758:	mov	x0, x19
  41575c:	bl	414a88 <ferror@plt+0x121b8>
  415760:	ldp	x2, x3, [sp, #64]
  415764:	stp	x2, x3, [x23]
  415768:	ldr	x1, [sp, #80]
  41576c:	str	x1, [x23, #16]
  415770:	ldr	x0, [x19, #1216]
  415774:	str	w0, [x19, #536]
  415778:	add	x23, x19, #0x220
  41577c:	add	x8, sp, #0x40
  415780:	mov	x2, x20
  415784:	mov	x1, x20
  415788:	mov	x0, x19
  41578c:	bl	414a88 <ferror@plt+0x121b8>
  415790:	ldp	x2, x3, [sp, #64]
  415794:	stp	x2, x3, [x23]
  415798:	ldr	x1, [sp, #80]
  41579c:	str	x1, [x23, #16]
  4157a0:	ldr	x0, [x19, #1216]
  4157a4:	str	w0, [x19, #560]
  4157a8:	cbnz	w22, 415894 <ferror@plt+0x12fc4>
  4157ac:	add	x20, x19, #0x238
  4157b0:	add	x8, sp, #0x40
  4157b4:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  4157b8:	add	x2, x2, #0xc0
  4157bc:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  4157c0:	add	x1, x1, #0xd50
  4157c4:	mov	x0, x19
  4157c8:	bl	414a88 <ferror@plt+0x121b8>
  4157cc:	ldp	x2, x3, [sp, #64]
  4157d0:	stp	x2, x3, [x20]
  4157d4:	ldr	x1, [sp, #80]
  4157d8:	str	x1, [x20, #16]
  4157dc:	mov	w0, #0x10                  	// #16
  4157e0:	str	w0, [x19, #584]
  4157e4:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  4157e8:	add	x1, x1, #0xd40
  4157ec:	add	x22, x19, #0x250
  4157f0:	adrp	x20, 459000 <_obstack_memory_used@@Base+0x12094>
  4157f4:	add	x20, x20, #0xc0
  4157f8:	add	x8, sp, #0x40
  4157fc:	mov	x2, x20
  415800:	mov	x0, x19
  415804:	bl	414a88 <ferror@plt+0x121b8>
  415808:	ldp	x0, x1, [sp, #64]
  41580c:	stp	x0, x1, [x22]
  415810:	ldr	x0, [sp, #80]
  415814:	str	x0, [x19, #608]
  415818:	mov	w0, #0x20                  	// #32
  41581c:	str	w0, [x19, #608]
  415820:	add	x22, x19, #0x268
  415824:	add	x8, sp, #0x40
  415828:	mov	x2, x20
  41582c:	mov	x1, x21
  415830:	mov	x0, x19
  415834:	bl	414a88 <ferror@plt+0x121b8>
  415838:	ldp	x0, x1, [sp, #64]
  41583c:	stp	x0, x1, [x22]
  415840:	ldr	x0, [sp, #80]
  415844:	str	x0, [x19, #632]
  415848:	ldr	x0, [x19, #1232]
  41584c:	str	w0, [x19, #632]
  415850:	ldp	x19, x20, [sp, #16]
  415854:	ldp	x21, x22, [sp, #32]
  415858:	ldr	x23, [sp, #48]
  41585c:	ldp	x29, x30, [sp], #96
  415860:	ret
  415864:	cmp	x0, #0xf
  415868:	b.ls	415888 <ferror@plt+0x12fb8>  // b.plast
  41586c:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  415870:	add	x2, x0, #0xd50
  415874:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  415878:	add	x0, x0, #0xd20
  41587c:	cmp	w22, #0x0
  415880:	csel	x0, x0, x2, ne  // ne = any
  415884:	b	415734 <ferror@plt+0x12e64>
  415888:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  41588c:	add	x0, x0, #0xc0
  415890:	b	415734 <ferror@plt+0x12e64>
  415894:	add	x20, x19, #0x238
  415898:	add	x8, sp, #0x40
  41589c:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  4158a0:	add	x2, x2, #0xc0
  4158a4:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  4158a8:	add	x1, x1, #0xd20
  4158ac:	mov	x0, x19
  4158b0:	bl	414a88 <ferror@plt+0x121b8>
  4158b4:	ldp	x2, x3, [sp, #64]
  4158b8:	stp	x2, x3, [x20]
  4158bc:	ldr	x1, [sp, #80]
  4158c0:	str	x1, [x20, #16]
  4158c4:	mov	w0, #0x10                  	// #16
  4158c8:	str	w0, [x19, #584]
  4158cc:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  4158d0:	add	x1, x1, #0xd30
  4158d4:	b	4157ec <ferror@plt+0x12f1c>
  4158d8:	stp	x29, x30, [sp, #-32]!
  4158dc:	mov	x29, sp
  4158e0:	str	x19, [sp, #16]
  4158e4:	mov	x19, x0
  4158e8:	ldr	x1, [x0, #520]
  4158ec:	adrp	x0, 414000 <ferror@plt+0x11730>
  4158f0:	add	x0, x0, #0xc30
  4158f4:	cmp	x1, x0
  4158f8:	b.eq	415958 <ferror@plt+0x13088>  // b.none
  4158fc:	ldr	x1, [x19, #544]
  415900:	adrp	x0, 414000 <ferror@plt+0x11730>
  415904:	add	x0, x0, #0xc30
  415908:	cmp	x1, x0
  41590c:	b.eq	415964 <ferror@plt+0x13094>  // b.none
  415910:	ldr	x1, [x19, #568]
  415914:	adrp	x0, 414000 <ferror@plt+0x11730>
  415918:	add	x0, x0, #0xc30
  41591c:	cmp	x1, x0
  415920:	b.eq	415970 <ferror@plt+0x130a0>  // b.none
  415924:	ldr	x1, [x19, #592]
  415928:	adrp	x0, 414000 <ferror@plt+0x11730>
  41592c:	add	x0, x0, #0xc30
  415930:	cmp	x1, x0
  415934:	b.eq	41597c <ferror@plt+0x130ac>  // b.none
  415938:	ldr	x1, [x19, #616]
  41593c:	adrp	x0, 414000 <ferror@plt+0x11730>
  415940:	add	x0, x0, #0xc30
  415944:	cmp	x1, x0
  415948:	b.eq	415988 <ferror@plt+0x130b8>  // b.none
  41594c:	ldr	x19, [sp, #16]
  415950:	ldp	x29, x30, [sp], #32
  415954:	ret
  415958:	ldr	x0, [x19, #528]
  41595c:	bl	402310 <iconv_close@plt>
  415960:	b	4158fc <ferror@plt+0x1302c>
  415964:	ldr	x0, [x19, #552]
  415968:	bl	402310 <iconv_close@plt>
  41596c:	b	415910 <ferror@plt+0x13040>
  415970:	ldr	x0, [x19, #576]
  415974:	bl	402310 <iconv_close@plt>
  415978:	b	415924 <ferror@plt+0x13054>
  41597c:	ldr	x0, [x19, #600]
  415980:	bl	402310 <iconv_close@plt>
  415984:	b	415938 <ferror@plt+0x13068>
  415988:	ldr	x0, [x19, #624]
  41598c:	bl	402310 <iconv_close@plt>
  415990:	b	41594c <ferror@plt+0x1307c>
  415994:	stp	x29, x30, [sp, #-80]!
  415998:	mov	x29, sp
  41599c:	stp	x19, x20, [sp, #16]
  4159a0:	mov	x20, x0
  4159a4:	mov	w19, w1
  4159a8:	cmp	w1, #0x7e
  4159ac:	b.hi	415a20 <ferror@plt+0x13150>  // b.pmore
  4159b0:	str	x21, [sp, #32]
  4159b4:	strb	w1, [sp, #72]
  4159b8:	mov	x21, #0x1                   	// #1
  4159bc:	str	x21, [sp, #56]
  4159c0:	mov	x0, x21
  4159c4:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  4159c8:	str	x0, [sp, #48]
  4159cc:	str	xzr, [sp, #64]
  4159d0:	ldr	x4, [x20, #520]
  4159d4:	add	x3, sp, #0x30
  4159d8:	mov	x2, x21
  4159dc:	add	x1, sp, #0x48
  4159e0:	ldr	x0, [x20, #528]
  4159e4:	blr	x4
  4159e8:	and	w0, w0, #0xff
  4159ec:	cbz	w0, 415a48 <ferror@plt+0x13178>
  4159f0:	ldr	x0, [sp, #64]
  4159f4:	cmp	x0, #0x1
  4159f8:	b.eq	415a68 <ferror@plt+0x13198>  // b.none
  4159fc:	mov	w3, w19
  415a00:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  415a04:	add	x2, x2, #0xdc8
  415a08:	mov	w1, #0x4                   	// #4
  415a0c:	mov	x0, x20
  415a10:	bl	41c9fc <ferror@plt+0x1a12c>
  415a14:	mov	w19, #0x0                   	// #0
  415a18:	ldr	x21, [sp, #32]
  415a1c:	b	415a38 <ferror@plt+0x13168>
  415a20:	mov	w3, w1
  415a24:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  415a28:	add	x2, x2, #0xd60
  415a2c:	mov	w1, #0x4                   	// #4
  415a30:	bl	41c9fc <ferror@plt+0x1a12c>
  415a34:	mov	w19, #0x0                   	// #0
  415a38:	mov	w0, w19
  415a3c:	ldp	x19, x20, [sp, #16]
  415a40:	ldp	x29, x30, [sp], #80
  415a44:	ret
  415a48:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  415a4c:	add	x2, x2, #0xda0
  415a50:	mov	w1, #0x4                   	// #4
  415a54:	mov	x0, x20
  415a58:	bl	41cf08 <ferror@plt+0x1a638>
  415a5c:	mov	w19, #0x0                   	// #0
  415a60:	ldr	x21, [sp, #32]
  415a64:	b	415a38 <ferror@plt+0x13168>
  415a68:	ldr	x0, [sp, #48]
  415a6c:	ldrb	w19, [x0]
  415a70:	bl	402690 <free@plt>
  415a74:	ldr	x21, [sp, #32]
  415a78:	b	415a38 <ferror@plt+0x13168>
  415a7c:	stp	x29, x30, [sp, #-32]!
  415a80:	mov	x29, sp
  415a84:	str	x19, [sp, #16]
  415a88:	mov	x19, x0
  415a8c:	str	xzr, [x0]
  415a90:	str	wzr, [x0, #8]
  415a94:	mov	w0, #0x8                   	// #8
  415a98:	str	w0, [x19, #12]
  415a9c:	mov	x0, #0x40                  	// #64
  415aa0:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  415aa4:	str	x0, [x19]
  415aa8:	ldr	x19, [sp, #16]
  415aac:	ldp	x29, x30, [sp], #32
  415ab0:	ret
  415ab4:	stp	x29, x30, [sp, #-16]!
  415ab8:	mov	x29, sp
  415abc:	ldr	x0, [x0]
  415ac0:	bl	402690 <free@plt>
  415ac4:	ldp	x29, x30, [sp], #16
  415ac8:	ret
  415acc:	stp	x29, x30, [sp, #-32]!
  415ad0:	mov	x29, sp
  415ad4:	stp	x19, x20, [sp, #16]
  415ad8:	mov	x19, x0
  415adc:	mov	x20, x1
  415ae0:	ldr	w1, [x0, #12]
  415ae4:	ldr	w0, [x0, #8]
  415ae8:	cmp	w0, w1
  415aec:	b.ge	415b10 <ferror@plt+0x13240>  // b.tcont
  415af0:	ldr	x1, [x19]
  415af4:	ldr	w0, [x19, #8]
  415af8:	add	w2, w0, #0x1
  415afc:	str	w2, [x19, #8]
  415b00:	str	x20, [x1, w0, sxtw #3]
  415b04:	ldp	x19, x20, [sp, #16]
  415b08:	ldp	x29, x30, [sp], #32
  415b0c:	ret
  415b10:	lsl	w1, w1, #1
  415b14:	str	w1, [x19, #12]
  415b18:	sbfiz	x1, x1, #3, #32
  415b1c:	ldr	x0, [x19]
  415b20:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  415b24:	str	x0, [x19]
  415b28:	b	415af0 <ferror@plt+0x13220>
  415b2c:	stp	x29, x30, [sp, #-64]!
  415b30:	mov	x29, sp
  415b34:	stp	x19, x20, [sp, #16]
  415b38:	str	x21, [sp, #32]
  415b3c:	mov	x21, x0
  415b40:	add	x0, x2, #0x10
  415b44:	and	x0, x0, #0xfffffffffffffff0
  415b48:	sub	sp, sp, x0
  415b4c:	mov	x20, sp
  415b50:	cbz	x2, 415cdc <ferror@plt+0x1340c>
  415b54:	mov	x19, x20
  415b58:	mov	x3, #0x0                   	// #0
  415b5c:	mov	w13, #0x4                   	// #4
  415b60:	mov	w12, #0x8                   	// #8
  415b64:	add	x0, x29, #0x38
  415b68:	add	x11, x29, #0x3e
  415b6c:	add	x15, x0, #0x5
  415b70:	adrp	x7, 466000 <_obstack_memory_used@@Base+0x1f094>
  415b74:	add	x7, x7, #0xa68
  415b78:	adrp	x8, 466000 <_obstack_memory_used@@Base+0x1f094>
  415b7c:	add	x8, x8, #0x750
  415b80:	adrp	x9, 45c000 <_obstack_memory_used@@Base+0x15094>
  415b84:	add	x9, x9, #0x410
  415b88:	add	x10, x9, #0x10
  415b8c:	add	x9, x9, #0x18
  415b90:	mov	w14, #0x24                  	// #36
  415b94:	b	415cc0 <ferror@plt+0x133f0>
  415b98:	add	x4, x3, #0x1
  415b9c:	ldrb	w0, [x1, x4]
  415ba0:	cmp	w0, #0x75
  415ba4:	csel	w6, w13, w12, eq  // eq = none
  415ba8:	add	x0, x3, #0x2
  415bac:	cmp	x2, x0
  415bb0:	b.ls	415c70 <ferror@plt+0x133a0>  // b.plast
  415bb4:	mov	x3, x0
  415bb8:	mov	w4, #0x0                   	// #0
  415bbc:	add	w6, w6, w0
  415bc0:	ldrb	w5, [x1, x3]
  415bc4:	ldrh	w0, [x7, w5, sxtw #1]
  415bc8:	tbz	w0, #8, 415be4 <ferror@plt+0x13314>
  415bcc:	ldrb	w0, [x8, w5, sxtw]
  415bd0:	add	w4, w0, w4, lsl #4
  415bd4:	add	x3, x3, #0x1
  415bd8:	cmp	w6, w3
  415bdc:	ccmp	x2, x3, #0x0, ne  // ne = any
  415be0:	b.hi	415bc0 <ferror@plt+0x132f0>  // b.pmore
  415be4:	sub	x3, x3, #0x1
  415be8:	cmp	w4, #0x24
  415bec:	b.eq	415c60 <ferror@plt+0x13390>  // b.none
  415bf0:	add	x6, x29, #0x3e
  415bf4:	mov	x5, #0x1                   	// #1
  415bf8:	cmp	w4, #0x7f
  415bfc:	b.ls	415c78 <ferror@plt+0x133a8>  // b.plast
  415c00:	mov	x16, x6
  415c04:	and	w0, w4, #0x3f
  415c08:	orr	w0, w0, #0xffffff80
  415c0c:	strb	w0, [x6, #-1]!
  415c10:	lsr	w4, w4, #6
  415c14:	mov	x0, x5
  415c18:	add	x5, x5, #0x1
  415c1c:	cmp	w4, #0x3e
  415c20:	b.hi	415c00 <ferror@plt+0x13330>  // b.pmore
  415c24:	add	x17, x10, x5
  415c28:	ldurb	w17, [x17, #-1]
  415c2c:	tst	w17, w4
  415c30:	b.ne	415c00 <ferror@plt+0x13330>  // b.any
  415c34:	sub	x6, x16, #0x2
  415c38:	ldrb	w0, [x9, x0]
  415c3c:	orr	w4, w4, w0
  415c40:	sturb	w4, [x16, #-2]
  415c44:	sub	x0, x19, x20
  415c48:	sub	x0, x2, x0
  415c4c:	cmp	x0, x5
  415c50:	b.cc	415ce4 <ferror@plt+0x13414>  // b.lo, b.ul, b.last
  415c54:	cmp	x6, x11
  415c58:	b.cc	415c8c <ferror@plt+0x133bc>  // b.lo, b.ul, b.last
  415c5c:	b	415cb4 <ferror@plt+0x133e4>
  415c60:	mov	x4, x19
  415c64:	strb	w14, [x4], #1
  415c68:	mov	x19, x4
  415c6c:	b	415cb4 <ferror@plt+0x133e4>
  415c70:	mov	x3, x4
  415c74:	mov	w4, #0x0                   	// #0
  415c78:	strb	w4, [x29, #61]
  415c7c:	sub	x0, x19, x20
  415c80:	cmp	x2, x0
  415c84:	b.eq	415ce4 <ferror@plt+0x13414>  // b.none
  415c88:	mov	x6, x15
  415c8c:	mov	x16, x6
  415c90:	sub	x5, x11, x6
  415c94:	mov	x4, #0x0                   	// #0
  415c98:	ldrb	w0, [x6, x4]
  415c9c:	strb	w0, [x19, x4]
  415ca0:	add	x4, x4, #0x1
  415ca4:	cmp	x4, x5
  415ca8:	b.ne	415c98 <ferror@plt+0x133c8>  // b.any
  415cac:	sub	x0, x11, x16
  415cb0:	add	x19, x19, x0
  415cb4:	add	x3, x3, #0x1
  415cb8:	cmp	x2, x3
  415cbc:	b.ls	415d04 <ferror@plt+0x13434>  // b.plast
  415cc0:	ldrb	w0, [x1, x3]
  415cc4:	cmp	w0, #0x5c
  415cc8:	b.eq	415b98 <ferror@plt+0x132c8>  // b.none
  415ccc:	mov	x4, x19
  415cd0:	strb	w0, [x4], #1
  415cd4:	mov	x19, x4
  415cd8:	b	415cb4 <ferror@plt+0x133e4>
  415cdc:	mov	x19, x20
  415ce0:	b	415d04 <ferror@plt+0x13434>
  415ce4:	bl	402810 <__errno_location@plt>
  415ce8:	mov	w1, #0x7                   	// #7
  415cec:	str	w1, [x0]
  415cf0:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  415cf4:	add	x2, x2, #0xe08
  415cf8:	mov	w1, #0x3                   	// #3
  415cfc:	mov	x0, x21
  415d00:	bl	41cf08 <ferror@plt+0x1a638>
  415d04:	mov	w3, #0x1                   	// #1
  415d08:	sub	x2, x19, x20
  415d0c:	mov	x1, x20
  415d10:	ldr	x0, [x21, #1088]
  415d14:	bl	42fdb8 <ferror@plt+0x2d4e8>
  415d18:	mov	sp, x29
  415d1c:	ldp	x19, x20, [sp, #16]
  415d20:	ldr	x21, [sp, #32]
  415d24:	ldp	x29, x30, [sp], #64
  415d28:	ret
  415d2c:	stp	x29, x30, [sp, #-128]!
  415d30:	mov	x29, sp
  415d34:	stp	x19, x20, [sp, #16]
  415d38:	stp	x21, x22, [sp, #32]
  415d3c:	stp	x23, x24, [sp, #48]
  415d40:	str	x25, [sp, #64]
  415d44:	mov	x24, x0
  415d48:	mov	x20, x2
  415d4c:	mov	x23, x3
  415d50:	mov	x19, x4
  415d54:	mov	x22, x5
  415d58:	mov	x21, x6
  415d5c:	add	x8, sp, #0x68
  415d60:	mov	x2, x1
  415d64:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  415d68:	add	x1, x1, #0xc0
  415d6c:	bl	414a88 <ferror@plt+0x121b8>
  415d70:	ldr	x25, [sp, #104]
  415d74:	adrp	x1, 414000 <ferror@plt+0x11730>
  415d78:	add	x1, x1, #0xfcc
  415d7c:	cmp	x25, x1
  415d80:	b.eq	415de4 <ferror@plt+0x13514>  // b.none
  415d84:	ldr	x23, [sp, #112]
  415d88:	cmp	x19, #0x10, lsl #12
  415d8c:	mov	x0, #0x10000               	// #65536
  415d90:	csel	x0, x19, x0, cs  // cs = hs, nlast
  415d94:	str	x0, [sp, #88]
  415d98:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  415d9c:	str	x0, [sp, #80]
  415da0:	str	xzr, [sp, #96]
  415da4:	add	x3, sp, #0x50
  415da8:	mov	x2, x19
  415dac:	mov	x1, x20
  415db0:	mov	x0, x23
  415db4:	blr	x25
  415db8:	and	w0, w0, #0xff
  415dbc:	cbz	w0, 415e98 <ferror@plt+0x135c8>
  415dc0:	mov	x0, x20
  415dc4:	bl	402690 <free@plt>
  415dc8:	adrp	x0, 414000 <ferror@plt+0x11730>
  415dcc:	add	x0, x0, #0xc30
  415dd0:	cmp	x25, x0
  415dd4:	b.ne	415df0 <ferror@plt+0x13520>  // b.any
  415dd8:	mov	x0, x23
  415ddc:	bl	402310 <iconv_close@plt>
  415de0:	b	415df0 <ferror@plt+0x13520>
  415de4:	str	x20, [sp, #80]
  415de8:	str	x23, [sp, #88]
  415dec:	str	x19, [sp, #96]
  415df0:	ldr	x1, [sp, #96]
  415df4:	ldr	x0, [sp, #88]
  415df8:	add	x2, x1, #0x1, lsl #12
  415dfc:	cmp	x2, x0
  415e00:	b.cc	415e10 <ferror@plt+0x13540>  // b.lo, b.ul, b.last
  415e04:	add	x2, x1, #0x10
  415e08:	cmp	x0, x2
  415e0c:	b.cs	415e20 <ferror@plt+0x13550>  // b.hs, b.nlast
  415e10:	add	x1, x1, #0x10
  415e14:	ldr	x0, [sp, #80]
  415e18:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  415e1c:	str	x0, [sp, #80]
  415e20:	ldr	x0, [sp, #80]
  415e24:	ldr	x1, [sp, #96]
  415e28:	add	x0, x0, x1
  415e2c:	stp	xzr, xzr, [x0]
  415e30:	ldr	x0, [sp, #96]
  415e34:	cbz	x0, 415e4c <ferror@plt+0x1357c>
  415e38:	ldr	x1, [sp, #80]
  415e3c:	add	x2, x1, x0
  415e40:	ldurb	w2, [x2, #-1]
  415e44:	cmp	w2, #0xd
  415e48:	b.eq	415ebc <ferror@plt+0x135ec>  // b.none
  415e4c:	ldr	x1, [sp, #80]
  415e50:	mov	w2, #0xa                   	// #10
  415e54:	strb	w2, [x1, x0]
  415e58:	ldr	x1, [sp, #80]
  415e5c:	ldr	x2, [sp, #96]
  415e60:	str	x2, [x21]
  415e64:	mov	x0, x1
  415e68:	cmp	x2, #0x2
  415e6c:	b.ls	415e7c <ferror@plt+0x135ac>  // b.plast
  415e70:	ldrb	w3, [x1]
  415e74:	cmp	w3, #0xef
  415e78:	b.eq	415ec4 <ferror@plt+0x135f4>  // b.none
  415e7c:	str	x1, [x22]
  415e80:	ldp	x19, x20, [sp, #16]
  415e84:	ldp	x21, x22, [sp, #32]
  415e88:	ldp	x23, x24, [sp, #48]
  415e8c:	ldr	x25, [sp, #64]
  415e90:	ldp	x29, x30, [sp], #128
  415e94:	ret
  415e98:	adrp	x4, 459000 <_obstack_memory_used@@Base+0x12094>
  415e9c:	add	x4, x4, #0xc0
  415ea0:	ldr	x3, [x24, #1184]
  415ea4:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  415ea8:	add	x2, x2, #0xe30
  415eac:	mov	w1, #0x3                   	// #3
  415eb0:	mov	x0, x24
  415eb4:	bl	41c9fc <ferror@plt+0x1a12c>
  415eb8:	b	415dc0 <ferror@plt+0x134f0>
  415ebc:	strb	w2, [x1, x0]
  415ec0:	b	415e58 <ferror@plt+0x13588>
  415ec4:	ldrb	w3, [x1, #1]
  415ec8:	cmp	w3, #0xbb
  415ecc:	b.ne	415e7c <ferror@plt+0x135ac>  // b.any
  415ed0:	ldrb	w3, [x1, #2]
  415ed4:	cmp	w3, #0xbf
  415ed8:	b.ne	415e7c <ferror@plt+0x135ac>  // b.any
  415edc:	sub	x2, x2, #0x3
  415ee0:	str	x2, [x21]
  415ee4:	add	x0, x1, #0x3
  415ee8:	b	415e7c <ferror@plt+0x135ac>
  415eec:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  415ef0:	add	x0, x0, #0xc0
  415ef4:	ret
  415ef8:	stp	x29, x30, [sp, #-32]!
  415efc:	mov	x29, sp
  415f00:	stp	x19, x20, [sp, #16]
  415f04:	mov	x20, x0
  415f08:	mov	x19, x2
  415f0c:	str	x2, [x0, #8]
  415f10:	mov	x0, x2
  415f14:	bl	428f64 <ferror@plt+0x26694>
  415f18:	mov	x3, #0x0                   	// #0
  415f1c:	mov	w2, #0x1                   	// #1
  415f20:	mov	w1, w0
  415f24:	mov	x0, x19
  415f28:	bl	4292dc <ferror@plt+0x26a0c>
  415f2c:	mov	w1, w0
  415f30:	str	w0, [x20]
  415f34:	mov	x0, x19
  415f38:	bl	428bdc <ferror@plt+0x2630c>
  415f3c:	ldrb	w1, [x0, #7]
  415f40:	mov	w0, #0x1                   	// #1
  415f44:	lsl	w0, w0, w1
  415f48:	str	w0, [x20, #4]
  415f4c:	ldp	x19, x20, [sp, #16]
  415f50:	ldp	x29, x30, [sp], #32
  415f54:	ret
  415f58:	mov	x1, x0
  415f5c:	ldr	w0, [x0]
  415f60:	mov	w2, #0x60000000            	// #1610612736
  415f64:	cmp	w0, w2
  415f68:	b.hi	415f78 <ferror@plt+0x136a8>  // b.pmore
  415f6c:	ldr	w2, [x1, #4]
  415f70:	add	w2, w2, w0
  415f74:	str	w2, [x1]
  415f78:	bfi	x0, x0, #32, #32
  415f7c:	ret
  415f80:	cmp	w1, #0x0
  415f84:	b.le	415fd8 <ferror@plt+0x13708>
  415f88:	stp	x29, x30, [sp, #-48]!
  415f8c:	mov	x29, sp
  415f90:	stp	x19, x20, [sp, #16]
  415f94:	stp	x21, x22, [sp, #32]
  415f98:	mov	x21, x0
  415f9c:	mov	w20, w1
  415fa0:	mov	x22, x2
  415fa4:	mov	w19, #0x0                   	// #0
  415fa8:	mov	x0, x22
  415fac:	bl	415f58 <ferror@plt+0x13688>
  415fb0:	mov	x1, x0
  415fb4:	mov	x0, x21
  415fb8:	bl	415acc <ferror@plt+0x131fc>
  415fbc:	add	w19, w19, #0x1
  415fc0:	cmp	w20, w19
  415fc4:	b.ne	415fa8 <ferror@plt+0x136d8>  // b.any
  415fc8:	ldp	x19, x20, [sp, #16]
  415fcc:	ldp	x21, x22, [sp, #32]
  415fd0:	ldp	x29, x30, [sp], #48
  415fd4:	ret
  415fd8:	ret
  415fdc:	stp	x29, x30, [sp, #-144]!
  415fe0:	mov	x29, sp
  415fe4:	stp	x19, x20, [sp, #16]
  415fe8:	stp	x21, x22, [sp, #32]
  415fec:	stp	x23, x24, [sp, #48]
  415ff0:	stp	x25, x26, [sp, #64]
  415ff4:	stp	x27, x28, [sp, #80]
  415ff8:	mov	x28, x0
  415ffc:	str	x1, [sp, #128]
  416000:	mov	x27, x2
  416004:	str	w3, [sp, #116]
  416008:	str	x4, [sp, #136]
  41600c:	str	x5, [sp, #120]
  416010:	mov	x24, x6
  416014:	mov	x23, x7
  416018:	ldr	x0, [x1]
  41601c:	str	x0, [sp, #104]
  416020:	ldrb	w0, [x28, #1120]
  416024:	cbnz	w0, 41603c <ferror@plt+0x1376c>
  416028:	ldrb	w0, [x28, #1152]
  41602c:	cbz	w0, 41608c <ferror@plt+0x137bc>
  416030:	ldrsb	w0, [x28, #1198]
  416034:	cmp	w0, #0x0
  416038:	b.gt	4160a4 <ferror@plt+0x137d4>
  41603c:	ldrb	w0, [x28, #1138]
  416040:	cmp	w0, #0x0
  416044:	ldr	w0, [sp, #116]
  416048:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  41604c:	b.eq	4160bc <ferror@plt+0x137ec>  // b.none
  416050:	ldr	x0, [sp, #104]
  416054:	ldurb	w0, [x0, #-1]
  416058:	mov	w21, #0x4                   	// #4
  41605c:	cmp	w0, #0x75
  416060:	b.eq	416070 <ferror@plt+0x137a0>  // b.none
  416064:	mov	w21, #0x8                   	// #8
  416068:	cmp	w0, #0x55
  41606c:	b.ne	4160dc <ferror@plt+0x1380c>  // b.any
  416070:	ldr	x19, [sp, #104]
  416074:	mov	w20, #0x0                   	// #0
  416078:	adrp	x25, 466000 <_obstack_memory_used@@Base+0x1f094>
  41607c:	add	x25, x25, #0xa68
  416080:	adrp	x26, 466000 <_obstack_memory_used@@Base+0x1f094>
  416084:	add	x26, x26, #0x750
  416088:	b	416124 <ferror@plt+0x13854>
  41608c:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  416090:	add	x2, x2, #0xe50
  416094:	mov	w1, #0x0                   	// #0
  416098:	mov	x0, x28
  41609c:	bl	41c9fc <ferror@plt+0x1a12c>
  4160a0:	b	416050 <ferror@plt+0x13780>
  4160a4:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  4160a8:	add	x2, x2, #0xe88
  4160ac:	mov	w1, #0x0                   	// #0
  4160b0:	mov	x0, x28
  4160b4:	bl	41c9fc <ferror@plt+0x1a12c>
  4160b8:	b	416050 <ferror@plt+0x13780>
  4160bc:	ldr	x0, [sp, #104]
  4160c0:	ldurb	w3, [x0, #-1]
  4160c4:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  4160c8:	add	x2, x2, #0xec8
  4160cc:	mov	w1, #0x6                   	// #6
  4160d0:	mov	x0, x28
  4160d4:	bl	41ca74 <ferror@plt+0x1a1a4>
  4160d8:	b	416050 <ferror@plt+0x13780>
  4160dc:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  4160e0:	add	x2, x2, #0xf00
  4160e4:	mov	w1, #0x4                   	// #4
  4160e8:	mov	x0, x28
  4160ec:	bl	41c9fc <ferror@plt+0x1a12c>
  4160f0:	mov	w21, #0x4                   	// #4
  4160f4:	b	416070 <ferror@plt+0x137a0>
  4160f8:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  4160fc:	add	x2, x2, #0xf20
  416100:	mov	w1, #0x434                 	// #1076
  416104:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  416108:	add	x0, x0, #0xf30
  41610c:	bl	4062a0 <ferror@plt+0x39d0>
  416110:	ldrb	w0, [x26, w22, sxtw]
  416114:	add	w20, w0, w20, lsl #4
  416118:	subs	w21, w21, #0x1
  41611c:	ccmp	x19, x27, #0x2, ne  // ne = any
  416120:	b.cs	416154 <ferror@plt+0x13884>  // b.hs, b.nlast
  416124:	ldrb	w22, [x19]
  416128:	mov	w0, w22
  41612c:	ldrh	w0, [x25, x0, lsl #1]
  416130:	tbz	w0, #8, 416154 <ferror@plt+0x13884>
  416134:	add	x19, x19, #0x1
  416138:	cbz	x23, 416110 <ferror@plt+0x13840>
  41613c:	cbz	x24, 4160f8 <ferror@plt+0x13828>
  416140:	mov	x0, x23
  416144:	bl	415f58 <ferror@plt+0x13688>
  416148:	lsr	x0, x0, #32
  41614c:	str	w0, [x24, #4]
  416150:	b	416110 <ferror@plt+0x13840>
  416154:	ldr	w0, [sp, #116]
  416158:	cmp	w0, #0x0
  41615c:	cset	w0, ne  // ne = any
  416160:	cmp	w21, #0x0
  416164:	csel	w2, w0, wzr, ne  // ne = any
  416168:	cbnz	w2, 4161e4 <ferror@plt+0x13914>
  41616c:	ldr	x1, [sp, #104]
  416170:	sub	x22, x1, #0x2
  416174:	ldr	x1, [sp, #128]
  416178:	str	x19, [x1]
  41617c:	cbnz	w21, 4161f4 <ferror@plt+0x13924>
  416180:	cmp	w20, #0x9f
  416184:	b.hi	416218 <ferror@plt+0x13948>  // b.pmore
  416188:	ldrb	w1, [x28, #1120]
  41618c:	cbnz	w1, 4161a4 <ferror@plt+0x138d4>
  416190:	and	w1, w20, #0xffffffdf
  416194:	cmp	w1, #0x40
  416198:	mov	w1, #0x24                  	// #36
  41619c:	ccmp	w20, w1, #0x4, ne  // ne = any
  4161a0:	b.ne	41621c <ferror@plt+0x1394c>  // b.any
  4161a4:	cmp	w20, #0x24
  4161a8:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  4161ac:	b.ne	416264 <ferror@plt+0x13994>  // b.any
  4161b0:	ldr	w0, [sp, #116]
  4161b4:	cbz	w0, 41623c <ferror@plt+0x1396c>
  4161b8:	mov	w0, #0x10ffff              	// #1114111
  4161bc:	cmp	w20, w0
  4161c0:	b.ls	4162ac <ferror@plt+0x139dc>  // b.plast
  4161c4:	mov	x4, x22
  4161c8:	sub	w3, w19, w22
  4161cc:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x13094>
  4161d0:	add	x2, x2, #0x28
  4161d4:	mov	w1, #0x3                   	// #3
  4161d8:	mov	x0, x28
  4161dc:	bl	41c9fc <ferror@plt+0x1a12c>
  4161e0:	b	41623c <ferror@plt+0x1396c>
  4161e4:	ldr	x0, [sp, #120]
  4161e8:	str	wzr, [x0]
  4161ec:	mov	w0, #0x0                   	// #0
  4161f0:	b	416248 <ferror@plt+0x13978>
  4161f4:	mov	x4, x22
  4161f8:	sub	w3, w19, w22
  4161fc:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  416200:	add	x2, x2, #0xf48
  416204:	mov	w1, #0x3                   	// #3
  416208:	mov	x0, x28
  41620c:	bl	41c9fc <ferror@plt+0x1a12c>
  416210:	mov	w20, #0x1                   	// #1
  416214:	b	41623c <ferror@plt+0x1396c>
  416218:	tbz	w20, #31, 417cb0 <ferror@plt+0x153e0>
  41621c:	mov	x4, x22
  416220:	sub	w3, w19, w22
  416224:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  416228:	add	x2, x2, #0xf78
  41622c:	mov	w1, #0x3                   	// #3
  416230:	mov	x0, x28
  416234:	bl	41c9fc <ferror@plt+0x1a12c>
  416238:	mov	w20, #0x1                   	// #1
  41623c:	ldr	x0, [sp, #120]
  416240:	str	w20, [x0]
  416244:	mov	w0, #0x1                   	// #1
  416248:	ldp	x19, x20, [sp, #16]
  41624c:	ldp	x21, x22, [sp, #32]
  416250:	ldp	x23, x24, [sp, #48]
  416254:	ldp	x25, x26, [sp, #64]
  416258:	ldp	x27, x28, [sp, #80]
  41625c:	ldp	x29, x30, [sp], #144
  416260:	ret
  416264:	ldrb	w0, [x28, #1146]
  416268:	cbz	w0, 4162b8 <ferror@plt+0x139e8>
  41626c:	ldrb	w0, [x28, #1148]
  416270:	cbz	w0, 41627c <ferror@plt+0x139ac>
  416274:	ldrb	w0, [x28, #18]
  416278:	cbz	w0, 416290 <ferror@plt+0x139c0>
  41627c:	mov	w20, #0x24                  	// #36
  416280:	ldr	x0, [sp, #136]
  416284:	str	w20, [x0]
  416288:	strb	wzr, [x0, #4]
  41628c:	b	41623c <ferror@plt+0x1396c>
  416290:	strb	wzr, [x28, #1148]
  416294:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  416298:	add	x2, x2, #0xfa0
  41629c:	mov	w1, #0x2                   	// #2
  4162a0:	mov	x0, x28
  4162a4:	bl	41c9fc <ferror@plt+0x1a12c>
  4162a8:	b	41627c <ferror@plt+0x139ac>
  4162ac:	mov	w1, #0x73c                 	// #1852
  4162b0:	mov	w3, #0x0                   	// #0
  4162b4:	b	4162c0 <ferror@plt+0x139f0>
  4162b8:	mov	w1, #0x73c                 	// #1852
  4162bc:	mov	w3, #0x0                   	// #0
  4162c0:	adrp	x5, 45c000 <_obstack_memory_used@@Base+0x15094>
  4162c4:	add	x5, x5, #0x4f0
  4162c8:	b	4162d0 <ferror@plt+0x13a00>
  4162cc:	mov	w1, w0
  4162d0:	cmp	w1, w3
  4162d4:	b.eq	4162fc <ferror@plt+0x13a2c>  // b.none
  4162d8:	add	w0, w1, w3
  4162dc:	add	w0, w0, w0, lsr #31
  4162e0:	asr	w0, w0, #1
  4162e4:	add	x4, x5, w0, sxtw #3
  4162e8:	ldr	w4, [x4, #4]
  4162ec:	cmp	w20, w4
  4162f0:	b.ls	4162cc <ferror@plt+0x139fc>  // b.plast
  4162f4:	add	w3, w0, #0x1
  4162f8:	b	4162d0 <ferror@plt+0x13a00>
  4162fc:	ldrb	w0, [x28, #1154]
  416300:	cbz	w0, 416348 <ferror@plt+0x13a78>
  416304:	ldrb	w0, [x28, #1164]
  416308:	cbnz	w0, 417c94 <ferror@plt+0x153c4>
  41630c:	ldrb	w1, [x28, #1152]
  416310:	mov	w0, #0x1                   	// #1
  416314:	cbnz	w1, 41632c <ferror@plt+0x13a5c>
  416318:	ldrb	w0, [x28, #1120]
  41631c:	cmp	w0, #0x0
  416320:	mov	w0, #0xd                   	// #13
  416324:	mov	w1, #0x4                   	// #4
  416328:	csel	w0, w0, w1, eq  // eq = none
  41632c:	sbfiz	x1, x3, #3, #32
  416330:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0x15094>
  416334:	add	x4, x4, #0x4f0
  416338:	ldrh	w21, [x4, x1]
  41633c:	tst	w0, w21
  416340:	b.ne	416370 <ferror@plt+0x13aa0>  // b.any
  416344:	b	4161c4 <ferror@plt+0x138f4>
  416348:	sbfiz	x0, x3, #3, #32
  41634c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x15094>
  416350:	add	x1, x1, #0x4f0
  416354:	ldrh	w21, [x1, x0]
  416358:	mov	w0, #0xd                   	// #13
  41635c:	tst	w21, w0
  416360:	b.eq	4161c4 <ferror@plt+0x138f4>  // b.none
  416364:	ldrb	w0, [x28, #1164]
  416368:	mov	w23, #0x10                  	// #16
  41636c:	cbnz	w0, 416380 <ferror@plt+0x13ab0>
  416370:	ldrb	w0, [x28, #1152]
  416374:	cmp	w0, #0x0
  416378:	cset	w23, ne  // ne = any
  41637c:	lsl	w23, w23, #1
  416380:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x15094>
  416384:	add	x0, x0, #0x4f0
  416388:	add	x3, x0, w3, sxtw #3
  41638c:	ldrb	w24, [x3, #2]
  416390:	cbz	w24, 4163b0 <ferror@plt+0x13ae0>
  416394:	ldr	x1, [sp, #136]
  416398:	ldrb	w0, [x1, #4]
  41639c:	cmp	w0, w24
  4163a0:	b.ls	4163b0 <ferror@plt+0x13ae0>  // b.plast
  4163a4:	mov	w0, #0x3                   	// #3
  4163a8:	str	w0, [x1, #8]
  4163ac:	b	4163ec <ferror@plt+0x13b1c>
  4163b0:	tbz	w21, #8, 417c44 <ferror@plt+0x15374>
  4163b4:	ldr	x0, [sp, #136]
  4163b8:	ldr	w0, [x0]
  4163bc:	sub	w1, w20, #0x1, lsl #12
  4163c0:	sub	w1, w1, #0x161
  4163c4:	cmp	w1, #0x14
  4163c8:	b.hi	416428 <ferror@plt+0x13b58>  // b.pmore
  4163cc:	sub	w0, w0, #0x1, lsl #12
  4163d0:	sub	w0, w0, #0x100
  4163d4:	cmp	w0, #0x12
  4163d8:	cset	w0, hi  // hi = pmore
  4163dc:	cbz	w0, 417c28 <ferror@plt+0x15358>
  4163e0:	cbnz	w24, 4163ec <ferror@plt+0x13b1c>
  4163e4:	ldr	x0, [sp, #136]
  4163e8:	str	w20, [x0]
  4163ec:	ldr	x0, [sp, #136]
  4163f0:	strb	w24, [x0, #4]
  4163f4:	tst	w23, w21
  4163f8:	b.eq	41623c <ferror@plt+0x1396c>  // b.none
  4163fc:	ldr	w0, [sp, #116]
  416400:	cmp	w0, #0x1
  416404:	b.ne	41623c <ferror@plt+0x1396c>  // b.any
  416408:	mov	x4, x22
  41640c:	sub	w3, w19, w22
  416410:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  416414:	add	x2, x2, #0xfe0
  416418:	mov	w1, #0x3                   	// #3
  41641c:	mov	x0, x28
  416420:	bl	41c9fc <ferror@plt+0x1a12c>
  416424:	b	41623c <ferror@plt+0x1396c>
  416428:	sub	w1, w20, #0x1, lsl #12
  41642c:	sub	w1, w1, #0x1a8
  416430:	cmp	w1, #0x1a
  416434:	b.hi	416464 <ferror@plt+0x13b94>  // b.pmore
  416438:	sub	w1, w0, #0xa, lsl #12
  41643c:	sub	w1, w1, #0xc00
  416440:	mov	w0, #0x2ba3                	// #11171
  416444:	cmp	w1, w0
  416448:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  41644c:	mov	w2, #0x1c                  	// #28
  416450:	udiv	w0, w1, w2
  416454:	msub	w0, w0, w2, w1
  416458:	cmp	w0, #0x0
  41645c:	cset	w0, ne  // ne = any
  416460:	b	4163dc <ferror@plt+0x13b0c>
  416464:	cmp	w20, #0x345
  416468:	b.hi	416498 <ferror@plt+0x13bc8>  // b.pmore
  41646c:	cmp	w20, #0x2ff
  416470:	b.ls	417c00 <ferror@plt+0x15330>  // b.plast
  416474:	sub	w3, w20, #0x300
  416478:	cmp	w3, #0x45
  41647c:	b.hi	417c00 <ferror@plt+0x15330>  // b.pmore
  416480:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x13094>
  416484:	add	x1, x1, #0x3c8
  416488:	ldrh	w1, [x1, w3, uxtw #1]
  41648c:	adr	x3, 416498 <ferror@plt+0x13bc8>
  416490:	add	x1, x3, w1, sxth #2
  416494:	br	x1
  416498:	cmp	w20, #0xcd5
  41649c:	b.eq	417ae4 <ferror@plt+0x15214>  // b.none
  4164a0:	b.ls	4164f4 <ferror@plt+0x13c24>  // b.plast
  4164a4:	mov	w1, #0x102e                	// #4142
  4164a8:	cmp	w20, w1
  4164ac:	b.eq	417b3c <ferror@plt+0x1526c>  // b.none
  4164b0:	b.ls	4165cc <ferror@plt+0x13cfc>  // b.plast
  4164b4:	mov	w1, #0x309a                	// #12442
  4164b8:	cmp	w20, w1
  4164bc:	b.eq	417b78 <ferror@plt+0x152a8>  // b.none
  4164c0:	b.ls	416628 <ferror@plt+0x13d58>  // b.plast
  4164c4:	mov	w1, #0x10ba                	// #4282
  4164c8:	movk	w1, #0x1, lsl #16
  4164cc:	cmp	w20, w1
  4164d0:	b.eq	417bd8 <ferror@plt+0x15308>  // b.none
  4164d4:	add	w1, w1, #0x6d
  4164d8:	cmp	w20, w1
  4164dc:	b.ne	417c00 <ferror@plt+0x15330>  // b.any
  4164e0:	sub	w0, w0, #0x11, lsl #12
  4164e4:	sub	w0, w0, #0x131
  4164e8:	cmp	w0, #0x1
  4164ec:	cset	w0, hi  // hi = pmore
  4164f0:	b	416584 <ferror@plt+0x13cb4>
  4164f4:	cmp	w20, #0xb3e
  4164f8:	b.eq	417aac <ferror@plt+0x151dc>  // b.none
  4164fc:	b.ls	416528 <ferror@plt+0x13c58>  // b.plast
  416500:	cmp	w20, #0xbd7
  416504:	b.eq	417ac4 <ferror@plt+0x151f4>  // b.none
  416508:	b.ls	416598 <ferror@plt+0x13cc8>  // b.plast
  41650c:	cmp	w20, #0xc56
  416510:	b.eq	417ad8 <ferror@plt+0x15208>  // b.none
  416514:	cmp	w20, #0xcc2
  416518:	b.ne	417c00 <ferror@plt+0x15330>  // b.any
  41651c:	cmp	w0, #0xcc6
  416520:	cset	w0, ne  // ne = any
  416524:	b	416584 <ferror@plt+0x13cb4>
  416528:	cmp	w20, #0x93c
  41652c:	b.eq	417a78 <ferror@plt+0x151a8>  // b.none
  416530:	b.ls	416550 <ferror@plt+0x13c80>  // b.plast
  416534:	cmp	w20, #0x9be
  416538:	b.eq	417aa0 <ferror@plt+0x151d0>  // b.none
  41653c:	cmp	w20, #0x9d7
  416540:	b.ne	417c00 <ferror@plt+0x15330>  // b.any
  416544:	cmp	w0, #0x9c7
  416548:	cset	w0, ne  // ne = any
  41654c:	b	416584 <ferror@plt+0x13cb4>
  416550:	cmp	w20, #0x654
  416554:	b.eq	417a14 <ferror@plt+0x15144>  // b.none
  416558:	cmp	w20, #0x655
  41655c:	b.ne	416574 <ferror@plt+0x13ca4>  // b.any
  416560:	cmp	w0, #0x623
  416564:	b.hi	417a6c <ferror@plt+0x1519c>  // b.pmore
  416568:	cmp	w0, #0x621
  41656c:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  416570:	b	416588 <ferror@plt+0x13cb8>
  416574:	cmp	w20, #0x653
  416578:	b.ne	417c00 <ferror@plt+0x15330>  // b.any
  41657c:	cmp	w0, #0x627
  416580:	cset	w0, ne  // ne = any
  416584:	cbnz	w0, 4163e0 <ferror@plt+0x13b10>
  416588:	mov	w0, #0x3                   	// #3
  41658c:	ldr	x1, [sp, #136]
  416590:	str	w0, [x1, #8]
  416594:	b	4163e0 <ferror@plt+0x13b10>
  416598:	cmp	w20, #0xb57
  41659c:	b.eq	417ab8 <ferror@plt+0x151e8>  // b.none
  4165a0:	cmp	w20, #0xbbe
  4165a4:	b.ne	4165b8 <ferror@plt+0x13ce8>  // b.any
  4165a8:	sub	w0, w0, #0xbc6
  4165ac:	cmp	w0, #0x1
  4165b0:	cset	w0, hi  // hi = pmore
  4165b4:	b	416584 <ferror@plt+0x13cb4>
  4165b8:	cmp	w20, #0xb56
  4165bc:	b.ne	417c00 <ferror@plt+0x15330>  // b.any
  4165c0:	cmp	w0, #0xb47
  4165c4:	cset	w0, ne  // ne = any
  4165c8:	b	416584 <ferror@plt+0x13cb4>
  4165cc:	cmp	w20, #0xdca
  4165d0:	b.eq	417b18 <ferror@plt+0x15248>  // b.none
  4165d4:	b.ls	4165f8 <ferror@plt+0x13d28>  // b.plast
  4165d8:	cmp	w20, #0xdcf
  4165dc:	b.eq	417b2c <ferror@plt+0x1525c>  // b.none
  4165e0:	cmp	w20, #0xddf
  4165e4:	b.ne	417c00 <ferror@plt+0x15330>  // b.any
  4165e8:	sub	w0, w0, #0xdd9
  4165ec:	cmp	w0, #0x1
  4165f0:	cset	w0, hi  // hi = pmore
  4165f4:	b	416584 <ferror@plt+0x13cb4>
  4165f8:	cmp	w20, #0xd3e
  4165fc:	b.eq	417b08 <ferror@plt+0x15238>  // b.none
  416600:	cmp	w20, #0xd57
  416604:	b.ne	416614 <ferror@plt+0x13d44>  // b.any
  416608:	cmp	w0, #0xd46
  41660c:	cset	w0, ne  // ne = any
  416610:	b	416584 <ferror@plt+0x13cb4>
  416614:	cmp	w20, #0xcd6
  416618:	b.ne	417c00 <ferror@plt+0x15330>  // b.any
  41661c:	cmp	w0, #0xcc6
  416620:	cset	w0, ne  // ne = any
  416624:	b	416584 <ferror@plt+0x13cb4>
  416628:	mov	w1, #0x1b35                	// #6965
  41662c:	cmp	w20, w1
  416630:	b.eq	417b4c <ferror@plt+0x1527c>  // b.none
  416634:	mov	w1, #0x3099                	// #12441
  416638:	cmp	w20, w1
  41663c:	b.ne	417c00 <ferror@plt+0x15330>  // b.any
  416640:	sub	w0, w0, #0x3, lsl #12
  416644:	sub	w0, w0, #0x46
  416648:	cmp	w0, #0xb7
  41664c:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  416650:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x13094>
  416654:	add	x1, x1, #0x454
  416658:	ldrh	w0, [x1, w0, uxtw #1]
  41665c:	adr	x1, 416668 <ferror@plt+0x13d98>
  416660:	add	x0, x1, w0, sxth #2
  416664:	br	x0
  416668:	cmp	w0, #0x3cb
  41666c:	b.hi	416704 <ferror@plt+0x13e34>  // b.pmore
  416670:	cmp	w0, #0x390
  416674:	b.hi	4166ac <ferror@plt+0x13ddc>  // b.pmore
  416678:	cmp	w0, #0x113
  41667c:	b.hi	4166d4 <ferror@plt+0x13e04>  // b.pmore
  416680:	cmp	w0, #0x40
  416684:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  416688:	sub	w0, w0, #0x41
  41668c:	cmp	w0, #0xd2
  416690:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  416694:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x13094>
  416698:	add	x1, x1, #0x5c4
  41669c:	ldrh	w0, [x1, w0, uxtw #1]
  4166a0:	adr	x1, 4166ac <ferror@plt+0x13ddc>
  4166a4:	add	x0, x1, w0, sxth #2
  4166a8:	br	x0
  4166ac:	sub	w1, w0, #0x391
  4166b0:	mov	x0, #0x1                   	// #1
  4166b4:	lsl	x0, x0, x1
  4166b8:	mov	x1, #0x4151                	// #16721
  4166bc:	movk	x1, #0x110, lsl #16
  4166c0:	movk	x1, #0x4151, lsl #32
  4166c4:	movk	x1, #0x710, lsl #48
  4166c8:	tst	x0, x1
  4166cc:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  4166d0:	b	416588 <ferror@plt+0x13cb8>
  4166d4:	cmp	w0, #0x1a1
  4166d8:	b.hi	4166f4 <ferror@plt+0x13e24>  // b.pmore
  4166dc:	cmp	w0, #0x19f
  4166e0:	b.hi	416588 <ferror@plt+0x13cb8>  // b.pmore
  4166e4:	sub	w0, w0, #0x14c
  4166e8:	cmp	w0, #0x1
  4166ec:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  4166f0:	b	416588 <ferror@plt+0x13cb8>
  4166f4:	sub	w0, w0, #0x1af
  4166f8:	cmp	w0, #0x1
  4166fc:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  416700:	b	416588 <ferror@plt+0x13cb8>
  416704:	cmp	w0, #0x438
  416708:	b.ls	416744 <ferror@plt+0x13e74>  // b.plast
  41670c:	sub	w1, w0, #0x1, lsl #12
  416710:	sub	w1, w1, #0xf00
  416714:	cmp	w1, #0xfe
  416718:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  41671c:	sub	w0, w0, #0x1, lsl #12
  416720:	sub	w0, w0, #0xf00
  416724:	cmp	w0, #0xfe
  416728:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  41672c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x13094>
  416730:	add	x1, x1, #0x76c
  416734:	ldrh	w0, [x1, w0, uxtw #1]
  416738:	adr	x1, 416744 <ferror@plt+0x13e74>
  41673c:	add	x0, x1, w0, sxth #2
  416740:	br	x0
  416744:	cmp	w0, #0x414
  416748:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  41674c:	sub	w1, w0, #0x415
  416750:	mov	x0, #0x1                   	// #1
  416754:	lsl	x0, x0, x1
  416758:	mov	x1, #0x9                   	// #9
  41675c:	movk	x1, #0x9, lsl #32
  416760:	tst	x0, x1
  416764:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  416768:	b	416588 <ferror@plt+0x13cb8>
  41676c:	cmp	w0, #0x41a
  416770:	b.hi	4167d0 <ferror@plt+0x13f00>  // b.pmore
  416774:	cmp	w0, #0x390
  416778:	b.hi	4167ac <ferror@plt+0x13edc>  // b.pmore
  41677c:	sub	w1, w0, #0x41
  416780:	cmp	w1, #0x16f
  416784:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  416788:	sub	w0, w0, #0x41
  41678c:	cmp	w0, #0x16f
  416790:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  416794:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x13094>
  416798:	add	x1, x1, #0x96c
  41679c:	ldrh	w0, [x1, w0, uxtw #1]
  4167a0:	adr	x1, 4167ac <ferror@plt+0x13edc>
  4167a4:	add	x0, x1, w0, sxth #2
  4167a8:	br	x0
  4167ac:	sub	w0, w0, #0x391
  4167b0:	cmp	w0, #0x89
  4167b4:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  4167b8:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x13094>
  4167bc:	add	x1, x1, #0xc4c
  4167c0:	ldrh	w0, [x1, w0, uxtw #1]
  4167c4:	adr	x1, 4167d0 <ferror@plt+0x13f00>
  4167c8:	add	x0, x1, w0, sxth #2
  4167cc:	br	x0
  4167d0:	mov	w1, #0x1ffe                	// #8190
  4167d4:	cmp	w0, w1
  4167d8:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  4167dc:	mov	w1, #0x1eff                	// #7935
  4167e0:	cmp	w0, w1
  4167e4:	b.ls	416810 <ferror@plt+0x13f40>  // b.plast
  4167e8:	sub	w0, w0, #0x1, lsl #12
  4167ec:	sub	w0, w0, #0xf00
  4167f0:	cmp	w0, #0xfe
  4167f4:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  4167f8:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x13094>
  4167fc:	add	x1, x1, #0xd60
  416800:	ldrh	w0, [x1, w0, uxtw #1]
  416804:	adr	x1, 416810 <ferror@plt+0x13f40>
  416808:	add	x0, x1, w0, sxth #2
  41680c:	br	x0
  416810:	cmp	w0, #0x433
  416814:	b.eq	416588 <ferror@plt+0x13cb8>  // b.none
  416818:	cmp	w0, #0x43a
  41681c:	b.ne	4163e0 <ferror@plt+0x13b10>  // b.any
  416820:	b	416588 <ferror@plt+0x13cb8>
  416824:	cmp	w0, #0x7a
  416828:	b.hi	416858 <ferror@plt+0x13f88>  // b.pmore
  41682c:	cmp	w0, #0x40
  416830:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  416834:	sub	w0, w0, #0x41
  416838:	cmp	w0, #0x39
  41683c:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  416840:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x13094>
  416844:	add	x1, x1, #0xf60
  416848:	ldrh	w0, [x1, w0, uxtw #1]
  41684c:	adr	x1, 416858 <ferror@plt+0x13f88>
  416850:	add	x0, x1, w0, sxth #2
  416854:	br	x0
  416858:	sub	w1, w0, #0x1, lsl #12
  41685c:	sub	w1, w1, #0xea0
  416860:	cmp	w1, #0x2d
  416864:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  416868:	mov	x0, #0x1                   	// #1
  41686c:	lsl	x0, x0, x1
  416870:	mov	x1, #0x3                   	// #3
  416874:	movk	x1, #0x300, lsl #16
  416878:	movk	x1, #0x3000, lsl #32
  41687c:	tst	x0, x1
  416880:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  416884:	b	416588 <ferror@plt+0x13cb8>
  416888:	cmp	w0, #0x79
  41688c:	b.hi	4168e8 <ferror@plt+0x14018>  // b.pmore
  416890:	cmp	w0, #0x40
  416894:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  416898:	sub	w1, w0, #0x41
  41689c:	mov	x0, #0x1                   	// #1
  4168a0:	lsl	x0, x0, x1
  4168a4:	mov	x1, #0x6111                	// #24849
  4168a8:	movk	x1, #0x130, lsl #16
  4168ac:	movk	x1, #0x6111, lsl #32
  4168b0:	movk	x1, #0x130, lsl #48
  4168b4:	tst	x0, x1
  4168b8:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  4168bc:	b	416588 <ferror@plt+0x13cb8>
  4168c0:	sub	w1, w0, #0xca
  4168c4:	mov	x0, #0x1                   	// #1
  4168c8:	lsl	x0, x0, x1
  4168cc:	mov	x1, #0x401                 	// #1025
  4168d0:	movk	x1, #0x100, lsl #16
  4168d4:	movk	x1, #0x401, lsl #32
  4168d8:	movk	x1, #0x300, lsl #48
  4168dc:	tst	x0, x1
  4168e0:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  4168e4:	b	416588 <ferror@plt+0x13cb8>
  4168e8:	cmp	w0, #0x103
  4168ec:	b.hi	416904 <ferror@plt+0x14034>  // b.pmore
  4168f0:	cmp	w0, #0xc9
  4168f4:	b.hi	4168c0 <ferror@plt+0x13ff0>  // b.pmore
  4168f8:	cmp	w0, #0xc2
  4168fc:	b.ne	4163e0 <ferror@plt+0x13b10>  // b.any
  416900:	b	416588 <ferror@plt+0x13cb8>
  416904:	cmp	w0, #0x1a1
  416908:	b.hi	416918 <ferror@plt+0x14048>  // b.pmore
  41690c:	cmp	w0, #0x19f
  416910:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  416914:	b	416588 <ferror@plt+0x13cb8>
  416918:	sub	w0, w0, #0x1af
  41691c:	cmp	w0, #0x1
  416920:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  416924:	b	416588 <ferror@plt+0x13cb8>
  416928:	cmp	w0, #0xfc
  41692c:	b.hi	416984 <ferror@plt+0x140b4>  // b.pmore
  416930:	cmp	w0, #0x40
  416934:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  416938:	sub	w0, w0, #0x41
  41693c:	cmp	w0, #0xbb
  416940:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  416944:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x13094>
  416948:	add	x1, x1, #0xfd4
  41694c:	ldrh	w0, [x1, w0, uxtw #1]
  416950:	adr	x1, 41695c <ferror@plt+0x1408c>
  416954:	add	x0, x1, w0, sxth #2
  416958:	br	x0
  41695c:	sub	w1, w0, #0x391
  416960:	mov	x0, #0x1                   	// #1
  416964:	lsl	x0, x0, x1
  416968:	mov	x1, #0x101                 	// #257
  41696c:	movk	x1, #0x10, lsl #16
  416970:	movk	x1, #0x101, lsl #32
  416974:	movk	x1, #0x10, lsl #48
  416978:	tst	x0, x1
  41697c:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  416980:	b	416588 <ferror@plt+0x13cb8>
  416984:	cmp	w0, #0x3c5
  416988:	b.hi	4169c4 <ferror@plt+0x140f4>  // b.pmore
  41698c:	cmp	w0, #0x390
  416990:	b.hi	41695c <ferror@plt+0x1408c>  // b.pmore
  416994:	cmp	w0, #0x227
  416998:	b.hi	4169b4 <ferror@plt+0x140e4>  // b.pmore
  41699c:	cmp	w0, #0x225
  4169a0:	b.hi	416588 <ferror@plt+0x13cb8>  // b.pmore
  4169a4:	sub	w0, w0, #0x1ea
  4169a8:	cmp	w0, #0x1
  4169ac:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  4169b0:	b	416588 <ferror@plt+0x13cb8>
  4169b4:	sub	w0, w0, #0x22e
  4169b8:	cmp	w0, #0x1
  4169bc:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  4169c0:	b	416588 <ferror@plt+0x13cb8>
  4169c4:	mov	w1, #0x1e37                	// #7735
  4169c8:	cmp	w0, w1
  4169cc:	b.hi	416a04 <ferror@plt+0x14134>  // b.pmore
  4169d0:	mov	w1, #0x1e35                	// #7733
  4169d4:	cmp	w0, w1
  4169d8:	b.hi	416588 <ferror@plt+0x13cb8>  // b.pmore
  4169dc:	sub	w1, w0, #0x418
  4169e0:	cmp	w1, #0x2b
  4169e4:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  4169e8:	mov	x0, #0x1                   	// #1
  4169ec:	lsl	x0, x0, x1
  4169f0:	mov	x1, #0x801                 	// #2049
  4169f4:	movk	x1, #0x801, lsl #32
  4169f8:	tst	x0, x1
  4169fc:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  416a00:	b	416588 <ferror@plt+0x13cb8>
  416a04:	mov	w1, #0x1fb3                	// #8115
  416a08:	cmp	w0, w1
  416a0c:	b.eq	416588 <ferror@plt+0x13cb8>  // b.none
  416a10:	b.ls	416a24 <ferror@plt+0x14154>  // b.plast
  416a14:	mov	w1, #0x1fbc                	// #8124
  416a18:	cmp	w0, w1
  416a1c:	b.ne	4163e0 <ferror@plt+0x13b10>  // b.any
  416a20:	b	416588 <ferror@plt+0x13cb8>
  416a24:	sub	w0, w0, #0x1, lsl #12
  416a28:	sub	w0, w0, #0xe5a
  416a2c:	cmp	w0, #0x1
  416a30:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  416a34:	b	416588 <ferror@plt+0x13cb8>
  416a38:	cmp	w0, #0x3c5
  416a3c:	b.hi	416ab8 <ferror@plt+0x141e8>  // b.pmore
  416a40:	cmp	w0, #0x390
  416a44:	b.hi	416a80 <ferror@plt+0x141b0>  // b.pmore
  416a48:	cmp	w0, #0x75
  416a4c:	b.hi	416aa8 <ferror@plt+0x141d8>  // b.pmore
  416a50:	cmp	w0, #0x40
  416a54:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  416a58:	sub	w1, w0, #0x41
  416a5c:	mov	x0, #0x1                   	// #1
  416a60:	lsl	x0, x0, x1
  416a64:	mov	x1, #0x4151                	// #16721
  416a68:	movk	x1, #0x10, lsl #16
  416a6c:	movk	x1, #0x4151, lsl #32
  416a70:	movk	x1, #0x10, lsl #48
  416a74:	tst	x0, x1
  416a78:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  416a7c:	b	416588 <ferror@plt+0x13cb8>
  416a80:	sub	w1, w0, #0x391
  416a84:	mov	x0, #0x1                   	// #1
  416a88:	lsl	x0, x0, x1
  416a8c:	mov	x1, #0x101                 	// #257
  416a90:	movk	x1, #0x10, lsl #16
  416a94:	movk	x1, #0x101, lsl #32
  416a98:	movk	x1, #0x10, lsl #48
  416a9c:	tst	x0, x1
  416aa0:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  416aa4:	b	416588 <ferror@plt+0x13cb8>
  416aa8:	sub	w0, w0, #0x228
  416aac:	cmp	w0, #0x1
  416ab0:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  416ab4:	b	416588 <ferror@plt+0x13cb8>
  416ab8:	cmp	w0, #0x443
  416abc:	b.hi	416af0 <ferror@plt+0x14220>  // b.pmore
  416ac0:	cmp	w0, #0x40f
  416ac4:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  416ac8:	sub	w1, w0, #0x410
  416acc:	mov	x0, #0x1                   	// #1
  416ad0:	lsl	x0, x0, x1
  416ad4:	mov	x1, #0x161                 	// #353
  416ad8:	movk	x1, #0x8, lsl #16
  416adc:	movk	x1, #0x161, lsl #32
  416ae0:	movk	x1, #0x8, lsl #48
  416ae4:	tst	x0, x1
  416ae8:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  416aec:	b	416588 <ferror@plt+0x13cb8>
  416af0:	mov	w1, #0x1fb3                	// #8115
  416af4:	cmp	w0, w1
  416af8:	b.eq	416588 <ferror@plt+0x13cb8>  // b.none
  416afc:	b.ls	416b10 <ferror@plt+0x14240>  // b.plast
  416b00:	mov	w1, #0x1fbc                	// #8124
  416b04:	cmp	w0, w1
  416b08:	b.ne	4163e0 <ferror@plt+0x13b10>  // b.any
  416b0c:	b	416588 <ferror@plt+0x13cb8>
  416b10:	sub	w0, w0, #0x1, lsl #12
  416b14:	sub	w0, w0, #0xea0
  416b18:	cmp	w0, #0x1
  416b1c:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  416b20:	b	416588 <ferror@plt+0x13cb8>
  416b24:	cmp	w0, #0x7a
  416b28:	b.hi	416b5c <ferror@plt+0x1428c>  // b.pmore
  416b2c:	cmp	w0, #0x40
  416b30:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  416b34:	sub	w1, w0, #0x41
  416b38:	mov	x0, #0x1                   	// #1
  416b3c:	lsl	x0, x0, x1
  416b40:	mov	x1, #0xf1ff                	// #61951
  416b44:	movk	x1, #0x3ce, lsl #16
  416b48:	movk	x1, #0xf0ff, lsl #32
  416b4c:	movk	x1, #0x3ce, lsl #48
  416b50:	tst	x0, x1
  416b54:	b.ne	416588 <ferror@plt+0x13cb8>  // b.any
  416b58:	b	4163e0 <ferror@plt+0x13b10>
  416b5c:	cmp	w0, #0x17f
  416b60:	b.hi	416b8c <ferror@plt+0x142bc>  // b.pmore
  416b64:	cmp	w0, #0x159
  416b68:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  416b6c:	sub	w1, w0, #0x15a
  416b70:	mov	x0, #0x1                   	// #1
  416b74:	lsl	x0, x0, x1
  416b78:	mov	x1, #0xc3                  	// #195
  416b7c:	movk	x1, #0x20, lsl #32
  416b80:	tst	x0, x1
  416b84:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  416b88:	b	416588 <ferror@plt+0x13cb8>
  416b8c:	sub	w0, w0, #0x1, lsl #12
  416b90:	sub	w0, w0, #0xe62
  416b94:	cmp	w0, #0x1
  416b98:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  416b9c:	b	416588 <ferror@plt+0x13cb8>
  416ba0:	cmp	w0, #0x456
  416ba4:	b.hi	416c40 <ferror@plt+0x14370>  // b.pmore
  416ba8:	cmp	w0, #0x3b8
  416bac:	b.hi	416be8 <ferror@plt+0x14318>  // b.pmore
  416bb0:	cmp	w0, #0x79
  416bb4:	b.hi	416c0c <ferror@plt+0x1433c>  // b.pmore
  416bb8:	cmp	w0, #0x40
  416bbc:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  416bc0:	sub	w1, w0, #0x41
  416bc4:	mov	x0, #0x1                   	// #1
  416bc8:	lsl	x0, x0, x1
  416bcc:	mov	x1, #0x4191                	// #16785
  416bd0:	movk	x1, #0x1d0, lsl #16
  416bd4:	movk	x1, #0x4191, lsl #32
  416bd8:	movk	x1, #0x1d8, lsl #48
  416bdc:	tst	x0, x1
  416be0:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  416be4:	b	416588 <ferror@plt+0x13cb8>
  416be8:	sub	w0, w0, #0x3b9
  416bec:	cmp	w0, #0x9d
  416bf0:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  416bf4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x14094>
  416bf8:	add	x1, x1, #0x14c
  416bfc:	ldrh	w0, [x1, w0, uxtw #1]
  416c00:	adr	x1, 416c0c <ferror@plt+0x1433c>
  416c04:	add	x0, x1, w0, sxth #2
  416c08:	br	x0
  416c0c:	cmp	w0, #0x16b
  416c10:	b.hi	416c2c <ferror@plt+0x1435c>  // b.pmore
  416c14:	cmp	w0, #0x169
  416c18:	b.hi	416588 <ferror@plt+0x13cb8>  // b.pmore
  416c1c:	and	w0, w0, #0xffffffdf
  416c20:	cmp	w0, #0xd5
  416c24:	b.ne	4163e0 <ferror@plt+0x13b10>  // b.any
  416c28:	b	416588 <ferror@plt+0x13cb8>
  416c2c:	cmp	w0, #0x399
  416c30:	b.eq	416588 <ferror@plt+0x13cb8>  // b.none
  416c34:	cmp	w0, #0x3a5
  416c38:	b.ne	4163e0 <ferror@plt+0x13b10>  // b.any
  416c3c:	b	416588 <ferror@plt+0x13cb8>
  416c40:	cmp	w0, #0x4d9
  416c44:	b.hi	416c54 <ferror@plt+0x14384>  // b.pmore
  416c48:	cmp	w0, #0x4d7
  416c4c:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  416c50:	b	416588 <ferror@plt+0x13cb8>
  416c54:	sub	w0, w0, #0x4e8
  416c58:	cmp	w0, #0x1
  416c5c:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  416c60:	b	416588 <ferror@plt+0x13cb8>
  416c64:	cmp	w0, #0x79
  416c68:	b.hi	416cc4 <ferror@plt+0x143f4>  // b.pmore
  416c6c:	cmp	w0, #0x40
  416c70:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  416c74:	sub	w1, w0, #0x41
  416c78:	mov	x0, #0x1                   	// #1
  416c7c:	lsl	x0, x0, x1
  416c80:	mov	x1, #0x4111                	// #16657
  416c84:	movk	x1, #0x110, lsl #16
  416c88:	movk	x1, #0x4111, lsl #32
  416c8c:	movk	x1, #0x110, lsl #48
  416c90:	tst	x0, x1
  416c94:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  416c98:	b	416588 <ferror@plt+0x13cb8>
  416c9c:	sub	w1, w0, #0xca
  416ca0:	mov	x0, #0x1                   	// #1
  416ca4:	lsl	x0, x0, x1
  416ca8:	mov	x1, #0x401                 	// #1025
  416cac:	movk	x1, #0x100, lsl #16
  416cb0:	movk	x1, #0x401, lsl #32
  416cb4:	movk	x1, #0x300, lsl #48
  416cb8:	tst	x0, x1
  416cbc:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  416cc0:	b	416588 <ferror@plt+0x13cb8>
  416cc4:	cmp	w0, #0x103
  416cc8:	b.hi	416ce0 <ferror@plt+0x14410>  // b.pmore
  416ccc:	cmp	w0, #0xc9
  416cd0:	b.hi	416c9c <ferror@plt+0x143cc>  // b.pmore
  416cd4:	cmp	w0, #0xc2
  416cd8:	b.ne	4163e0 <ferror@plt+0x13b10>  // b.any
  416cdc:	b	416588 <ferror@plt+0x13cb8>
  416ce0:	cmp	w0, #0x1a1
  416ce4:	b.hi	416cf4 <ferror@plt+0x14424>  // b.pmore
  416ce8:	cmp	w0, #0x19f
  416cec:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  416cf0:	b	416588 <ferror@plt+0x13cb8>
  416cf4:	sub	w0, w0, #0x1af
  416cf8:	cmp	w0, #0x1
  416cfc:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  416d00:	b	416588 <ferror@plt+0x13cb8>
  416d04:	sub	w1, w0, #0x41
  416d08:	cmp	w1, #0x38
  416d0c:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  416d10:	mov	x0, #0x1                   	// #1
  416d14:	lsl	x0, x0, x1
  416d18:	mov	x1, #0x1                   	// #1
  416d1c:	movk	x1, #0x10, lsl #16
  416d20:	movk	x1, #0x1, lsl #32
  416d24:	movk	x1, #0x150, lsl #48
  416d28:	tst	x0, x1
  416d2c:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  416d30:	b	416588 <ferror@plt+0x13cb8>
  416d34:	cmp	w0, #0x75
  416d38:	b.hi	416d64 <ferror@plt+0x14494>  // b.pmore
  416d3c:	cmp	w0, #0x4e
  416d40:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  416d44:	sub	w1, w0, #0x4f
  416d48:	mov	x0, #0x1                   	// #1
  416d4c:	lsl	x0, x0, x1
  416d50:	mov	x1, #0x41                  	// #65
  416d54:	movk	x1, #0x41, lsl #32
  416d58:	tst	x0, x1
  416d5c:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  416d60:	b	416588 <ferror@plt+0x13cb8>
  416d64:	sub	w0, w0, #0x423
  416d68:	tst	w0, #0xffffffdf
  416d6c:	b.ne	4163e0 <ferror@plt+0x13b10>  // b.any
  416d70:	b	416588 <ferror@plt+0x13cb8>
  416d74:	cmp	w0, #0x7a
  416d78:	b.hi	416dac <ferror@plt+0x144dc>  // b.pmore
  416d7c:	cmp	w0, #0x40
  416d80:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  416d84:	sub	w1, w0, #0x41
  416d88:	mov	x0, #0x1                   	// #1
  416d8c:	lsl	x0, x0, x1
  416d90:	mov	x1, #0x6ddd                	// #28125
  416d94:	movk	x1, #0x21e, lsl #16
  416d98:	movk	x1, #0x6fdd, lsl #32
  416d9c:	movk	x1, #0x21e, lsl #48
  416da0:	tst	x0, x1
  416da4:	b.ne	416588 <ferror@plt+0x13cb8>  // b.any
  416da8:	b	4163e0 <ferror@plt+0x13b10>
  416dac:	cmp	w0, #0x1b7
  416db0:	b.eq	416588 <ferror@plt+0x13cb8>  // b.none
  416db4:	b.ls	416dc4 <ferror@plt+0x144f4>  // b.plast
  416db8:	cmp	w0, #0x292
  416dbc:	b.ne	4163e0 <ferror@plt+0x13b10>  // b.any
  416dc0:	b	416588 <ferror@plt+0x13cb8>
  416dc4:	and	w0, w0, #0xffffffdf
  416dc8:	cmp	w0, #0xdc
  416dcc:	b.ne	4163e0 <ferror@plt+0x13b10>  // b.any
  416dd0:	b	416588 <ferror@plt+0x13cb8>
  416dd4:	cmp	w0, #0x75
  416dd8:	b.hi	416e0c <ferror@plt+0x1453c>  // b.pmore
  416ddc:	cmp	w0, #0x40
  416de0:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  416de4:	sub	w1, w0, #0x41
  416de8:	mov	x0, #0x1                   	// #1
  416dec:	lsl	x0, x0, x1
  416df0:	mov	x1, #0x4111                	// #16657
  416df4:	movk	x1, #0x12, lsl #16
  416df8:	movk	x1, #0x4111, lsl #32
  416dfc:	movk	x1, #0x12, lsl #48
  416e00:	tst	x0, x1
  416e04:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  416e08:	b	416588 <ferror@plt+0x13cb8>
  416e0c:	sub	w0, w0, #0x474
  416e10:	cmp	w0, #0x1
  416e14:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  416e18:	b	416588 <ferror@plt+0x13cb8>
  416e1c:	sub	w1, w0, #0x41
  416e20:	cmp	w1, #0x34
  416e24:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  416e28:	mov	x0, #0x1                   	// #1
  416e2c:	lsl	x0, x0, x1
  416e30:	mov	x1, #0x4111                	// #16657
  416e34:	movk	x1, #0x12, lsl #16
  416e38:	movk	x1, #0x4111, lsl #32
  416e3c:	movk	x1, #0x12, lsl #48
  416e40:	tst	x0, x1
  416e44:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  416e48:	b	416588 <ferror@plt+0x13cb8>
  416e4c:	cmp	w0, #0x3c9
  416e50:	b.hi	416ea8 <ferror@plt+0x145d8>  // b.pmore
  416e54:	cmp	w0, #0x390
  416e58:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  416e5c:	sub	w1, w0, #0x391
  416e60:	mov	x0, #0x1                   	// #1
  416e64:	lsl	x0, x0, x1
  416e68:	mov	x1, #0x4151                	// #16721
  416e6c:	movk	x1, #0x100, lsl #16
  416e70:	movk	x1, #0x4151, lsl #32
  416e74:	movk	x1, #0x111, lsl #48
  416e78:	tst	x0, x1
  416e7c:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  416e80:	b	416588 <ferror@plt+0x13cb8>
  416e84:	sub	w1, w0, #0x1, lsl #12
  416e88:	sub	w1, w1, #0xfc3
  416e8c:	mov	x0, #0x1                   	// #1
  416e90:	lsl	x0, x0, x1
  416e94:	mov	x1, #0x201                 	// #513
  416e98:	movk	x1, #0x201, lsl #48
  416e9c:	tst	x0, x1
  416ea0:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  416ea4:	b	416588 <ferror@plt+0x13cb8>
  416ea8:	mov	w1, #0x1ffc                	// #8188
  416eac:	cmp	w0, w1
  416eb0:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  416eb4:	mov	w1, #0x1fc2                	// #8130
  416eb8:	cmp	w0, w1
  416ebc:	b.hi	416e84 <ferror@plt+0x145b4>  // b.pmore
  416ec0:	mov	w1, #0x1fb3                	// #8115
  416ec4:	cmp	w0, w1
  416ec8:	b.eq	416588 <ferror@plt+0x13cb8>  // b.none
  416ecc:	mov	w1, #0x1fbc                	// #8124
  416ed0:	cmp	w0, w1
  416ed4:	b.ne	4163e0 <ferror@plt+0x13b10>  // b.any
  416ed8:	b	416588 <ferror@plt+0x13cb8>
  416edc:	cmp	w0, #0x3c9
  416ee0:	b.hi	416f38 <ferror@plt+0x14668>  // b.pmore
  416ee4:	cmp	w0, #0x390
  416ee8:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  416eec:	sub	w1, w0, #0x391
  416ef0:	mov	x0, #0x1                   	// #1
  416ef4:	lsl	x0, x0, x1
  416ef8:	mov	x1, #0x4151                	// #16721
  416efc:	movk	x1, #0x111, lsl #16
  416f00:	movk	x1, #0x4151, lsl #32
  416f04:	movk	x1, #0x111, lsl #48
  416f08:	tst	x0, x1
  416f0c:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  416f10:	b	416588 <ferror@plt+0x13cb8>
  416f14:	sub	w1, w0, #0x1, lsl #12
  416f18:	sub	w1, w1, #0xfc3
  416f1c:	mov	x0, #0x1                   	// #1
  416f20:	lsl	x0, x0, x1
  416f24:	mov	x1, #0x201                 	// #513
  416f28:	movk	x1, #0x201, lsl #48
  416f2c:	tst	x0, x1
  416f30:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  416f34:	b	416588 <ferror@plt+0x13cb8>
  416f38:	mov	w1, #0x1ffc                	// #8188
  416f3c:	cmp	w0, w1
  416f40:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  416f44:	mov	w1, #0x1fc2                	// #8130
  416f48:	cmp	w0, w1
  416f4c:	b.hi	416f14 <ferror@plt+0x14644>  // b.pmore
  416f50:	mov	w1, #0x1fb3                	// #8115
  416f54:	cmp	w0, w1
  416f58:	b.eq	416588 <ferror@plt+0x13cb8>  // b.none
  416f5c:	mov	w1, #0x1fbc                	// #8124
  416f60:	cmp	w0, w1
  416f64:	b.ne	4163e0 <ferror@plt+0x13b10>  // b.any
  416f68:	b	416588 <ferror@plt+0x13cb8>
  416f6c:	cmp	w0, #0x171
  416f70:	b.hi	416fe4 <ferror@plt+0x14714>  // b.pmore
  416f74:	cmp	w0, #0x167
  416f78:	b.hi	416588 <ferror@plt+0x13cb8>  // b.pmore
  416f7c:	cmp	w0, #0xfc
  416f80:	b.hi	416fd4 <ferror@plt+0x14704>  // b.pmore
  416f84:	cmp	w0, #0xd1
  416f88:	b.hi	416fb4 <ferror@plt+0x146e4>  // b.pmore
  416f8c:	sub	w1, w0, #0x4f
  416f90:	cmp	w1, #0x26
  416f94:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  416f98:	mov	x0, #0x1                   	// #1
  416f9c:	lsl	x0, x0, x1
  416fa0:	mov	x1, #0x41                  	// #65
  416fa4:	movk	x1, #0x41, lsl #32
  416fa8:	tst	x0, x1
  416fac:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  416fb0:	b	416588 <ferror@plt+0x13cb8>
  416fb4:	sub	w1, w0, #0xd2
  416fb8:	mov	x0, #0x1                   	// #1
  416fbc:	lsl	x0, x0, x1
  416fc0:	mov	x1, #0x79f                 	// #1951
  416fc4:	movk	x1, #0x79f, lsl #32
  416fc8:	tst	x0, x1
  416fcc:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  416fd0:	b	416588 <ferror@plt+0x13cb8>
  416fd4:	sub	w0, w0, #0x14c
  416fd8:	cmp	w0, #0x5
  416fdc:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  416fe0:	b	416588 <ferror@plt+0x13cb8>
  416fe4:	mov	w1, #0x1e53                	// #7763
  416fe8:	cmp	w0, w1
  416fec:	b.hi	417038 <ferror@plt+0x14768>  // b.pmore
  416ff0:	mov	w1, #0x1e4b                	// #7755
  416ff4:	cmp	w0, w1
  416ff8:	b.hi	416588 <ferror@plt+0x13cb8>  // b.pmore
  416ffc:	cmp	w0, #0x1dc
  417000:	b.ls	41702c <ferror@plt+0x1475c>  // b.plast
  417004:	sub	w1, w0, #0x20c
  417008:	cmp	w1, #0x25
  41700c:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  417010:	mov	x0, #0x1                   	// #1
  417014:	lsl	x0, x0, x1
  417018:	mov	x1, #0x3fc0000000          	// #273804165120
  41701c:	movk	x1, #0xf0f
  417020:	tst	x0, x1
  417024:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  417028:	b	416588 <ferror@plt+0x13cb8>
  41702c:	cmp	w0, #0x1d0
  417030:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  417034:	b	416588 <ferror@plt+0x13cb8>
  417038:	mov	w1, #0x1ed9                	// #7897
  41703c:	cmp	w0, w1
  417040:	b.hi	417064 <ferror@plt+0x14794>  // b.pmore
  417044:	mov	w1, #0x1ecb                	// #7883
  417048:	cmp	w0, w1
  41704c:	b.hi	416588 <ferror@plt+0x13cb8>  // b.pmore
  417050:	sub	w0, w0, #0x1, lsl #12
  417054:	sub	w0, w0, #0xe72
  417058:	cmp	w0, #0x9
  41705c:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  417060:	b	416588 <ferror@plt+0x13cb8>
  417064:	sub	w0, w0, #0x1, lsl #12
  417068:	sub	w0, w0, #0xee4
  41706c:	cmp	w0, #0x3
  417070:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  417074:	b	416588 <ferror@plt+0x13cb8>
  417078:	cmp	w0, #0x233
  41707c:	b.hi	4170ac <ferror@plt+0x147dc>  // b.pmore
  417080:	cmp	w0, #0x40
  417084:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  417088:	sub	w0, w0, #0x41
  41708c:	cmp	w0, #0x1f2
  417090:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  417094:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x14094>
  417098:	add	x1, x1, #0x288
  41709c:	ldrh	w0, [x1, w0, uxtw #1]
  4170a0:	adr	x1, 4170ac <ferror@plt+0x147dc>
  4170a4:	add	x0, x1, w0, sxth #2
  4170a8:	br	x0
  4170ac:	sub	w1, w0, #0x1, lsl #12
  4170b0:	sub	w1, w1, #0xe02
  4170b4:	cmp	w1, #0xf7
  4170b8:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  4170bc:	sub	w0, w0, #0x1, lsl #12
  4170c0:	sub	w0, w0, #0xe02
  4170c4:	cmp	w0, #0xf7
  4170c8:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  4170cc:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x14094>
  4170d0:	add	x1, x1, #0x670
  4170d4:	ldrh	w0, [x1, w0, uxtw #1]
  4170d8:	adr	x1, 4170e4 <ferror@plt+0x14814>
  4170dc:	add	x0, x1, w0, sxth #2
  4170e0:	br	x0
  4170e4:	cmp	w0, #0x171
  4170e8:	b.hi	417124 <ferror@plt+0x14854>  // b.pmore
  4170ec:	cmp	w0, #0x167
  4170f0:	b.hi	416588 <ferror@plt+0x13cb8>  // b.pmore
  4170f4:	cmp	w0, #0xdc
  4170f8:	b.hi	417114 <ferror@plt+0x14844>  // b.pmore
  4170fc:	cmp	w0, #0xd8
  417100:	b.hi	416588 <ferror@plt+0x13cb8>  // b.pmore
  417104:	and	w0, w0, #0xffffffdf
  417108:	cmp	w0, #0x55
  41710c:	b.ne	4163e0 <ferror@plt+0x13b10>  // b.any
  417110:	b	416588 <ferror@plt+0x13cb8>
  417114:	sub	w0, w0, #0xf9
  417118:	cmp	w0, #0x3
  41711c:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  417120:	b	416588 <ferror@plt+0x13cb8>
  417124:	mov	w1, #0x1e7b                	// #7803
  417128:	cmp	w0, w1
  41712c:	b.hi	417160 <ferror@plt+0x14890>  // b.pmore
  417130:	mov	w1, #0x1e77                	// #7799
  417134:	cmp	w0, w1
  417138:	b.hi	416588 <ferror@plt+0x13cb8>  // b.pmore
  41713c:	cmp	w0, #0x1dc
  417140:	b.hi	417150 <ferror@plt+0x14880>  // b.pmore
  417144:	cmp	w0, #0x1d2
  417148:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  41714c:	b	416588 <ferror@plt+0x13cb8>
  417150:	sub	w0, w0, #0x214
  417154:	cmp	w0, #0x3
  417158:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  41715c:	b	416588 <ferror@plt+0x13cb8>
  417160:	sub	w0, w0, #0x1, lsl #12
  417164:	sub	w0, w0, #0xee6
  417168:	cmp	w0, #0x1
  41716c:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  417170:	b	416588 <ferror@plt+0x13cb8>
  417174:	cmp	w0, #0x1e1
  417178:	b.hi	4171e0 <ferror@plt+0x14910>  // b.pmore
  41717c:	cmp	w0, #0x1dd
  417180:	b.hi	416588 <ferror@plt+0x13cb8>  // b.pmore
  417184:	cmp	w0, #0xe5
  417188:	b.hi	4171bc <ferror@plt+0x148ec>  // b.pmore
  41718c:	cmp	w0, #0xdf
  417190:	b.hi	416588 <ferror@plt+0x13cb8>  // b.pmore
  417194:	cmp	w0, #0x61
  417198:	b.eq	416588 <ferror@plt+0x13cb8>  // b.none
  41719c:	b.ls	4171b0 <ferror@plt+0x148e0>  // b.plast
  4171a0:	sub	w0, w0, #0xc0
  4171a4:	cmp	w0, #0x5
  4171a8:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  4171ac:	b	416588 <ferror@plt+0x13cb8>
  4171b0:	cmp	w0, #0x41
  4171b4:	b.ne	4163e0 <ferror@plt+0x13b10>  // b.any
  4171b8:	b	416588 <ferror@plt+0x13cb8>
  4171bc:	cmp	w0, #0x103
  4171c0:	b.hi	4171d0 <ferror@plt+0x14900>  // b.pmore
  4171c4:	cmp	w0, #0xff
  4171c8:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  4171cc:	b	416588 <ferror@plt+0x13cb8>
  4171d0:	sub	w0, w0, #0x1cd
  4171d4:	cmp	w0, #0x1
  4171d8:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  4171dc:	b	416588 <ferror@plt+0x13cb8>
  4171e0:	cmp	w0, #0x227
  4171e4:	b.hi	417210 <ferror@plt+0x14940>  // b.pmore
  4171e8:	cmp	w0, #0x1f9
  4171ec:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  4171f0:	sub	w1, w0, #0x1fa
  4171f4:	mov	x0, #0x1                   	// #1
  4171f8:	lsl	x0, x0, x1
  4171fc:	mov	x1, #0x3c3                 	// #963
  417200:	movk	x1, #0x3000, lsl #32
  417204:	tst	x0, x1
  417208:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  41720c:	b	416588 <ferror@plt+0x13cb8>
  417210:	mov	w1, #0x1eab                	// #7851
  417214:	cmp	w0, w1
  417218:	b.hi	41722c <ferror@plt+0x1495c>  // b.pmore
  41721c:	mov	w1, #0x1ea1                	// #7841
  417220:	cmp	w0, w1
  417224:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  417228:	b	416588 <ferror@plt+0x13cb8>
  41722c:	sub	w0, w0, #0x1, lsl #12
  417230:	sub	w0, w0, #0xeae
  417234:	cmp	w0, #0x7
  417238:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  41723c:	b	416588 <ferror@plt+0x13cb8>
  417240:	cmp	w0, #0x165
  417244:	b.hi	417290 <ferror@plt+0x149c0>  // b.pmore
  417248:	cmp	w0, #0x159
  41724c:	b.hi	417264 <ferror@plt+0x14994>  // b.pmore
  417250:	cmp	w0, #0x54
  417254:	b.hi	417280 <ferror@plt+0x149b0>  // b.pmore
  417258:	cmp	w0, #0x52
  41725c:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  417260:	b	416588 <ferror@plt+0x13cb8>
  417264:	sub	w1, w0, #0x15a
  417268:	mov	x0, #0x1                   	// #1
  41726c:	lsl	x0, x0, x1
  417270:	mov	x1, #0xccf                 	// #3279
  417274:	tst	x0, x1
  417278:	b.ne	416588 <ferror@plt+0x13cb8>  // b.any
  41727c:	b	4163e0 <ferror@plt+0x13b10>
  417280:	sub	w0, w0, #0x73
  417284:	cmp	w0, #0x1
  417288:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  41728c:	b	416588 <ferror@plt+0x13cb8>
  417290:	sub	w1, w0, #0x1, lsl #12
  417294:	sub	w1, w1, #0xe60
  417298:	cmp	w1, #0x37
  41729c:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  4172a0:	mov	x0, #0x1                   	// #1
  4172a4:	lsl	x0, x0, x1
  4172a8:	mov	x1, #0xcf3                 	// #3315
  4172ac:	movk	x1, #0x80, lsl #48
  4172b0:	tst	x0, x1
  4172b4:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  4172b8:	b	416588 <ferror@plt+0x13cb8>
  4172bc:	cmp	w0, #0x21f
  4172c0:	b.hi	4172f0 <ferror@plt+0x14a20>  // b.pmore
  4172c4:	cmp	w0, #0x42
  4172c8:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  4172cc:	sub	w0, w0, #0x43
  4172d0:	cmp	w0, #0x1dc
  4172d4:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  4172d8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x14094>
  4172dc:	add	x1, x1, #0x860
  4172e0:	ldrh	w0, [x1, w0, uxtw #1]
  4172e4:	adr	x1, 4172f0 <ferror@plt+0x14a20>
  4172e8:	add	x0, x1, w0, sxth #2
  4172ec:	br	x0
  4172f0:	mov	w1, #0x1e3d                	// #7741
  4172f4:	cmp	w0, w1
  4172f8:	b.hi	417334 <ferror@plt+0x14a64>  // b.pmore
  4172fc:	mov	w1, #0x1e09                	// #7689
  417300:	cmp	w0, w1
  417304:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  417308:	sub	w1, w0, #0x1, lsl #12
  41730c:	sub	w1, w1, #0xe0a
  417310:	mov	x0, #0x1                   	// #1
  417314:	lsl	x0, x0, x1
  417318:	mov	x1, #0xff3f                	// #65343
  41731c:	movk	x1, #0x3fc3, lsl #16
  417320:	movk	x1, #0xffc3, lsl #32
  417324:	movk	x1, #0xf, lsl #48
  417328:	tst	x0, x1
  41732c:	b.ne	416588 <ferror@plt+0x13cb8>  // b.any
  417330:	b	4163e0 <ferror@plt+0x13b10>
  417334:	mov	w1, #0x1e97                	// #7831
  417338:	cmp	w0, w1
  41733c:	b.hi	41737c <ferror@plt+0x14aac>  // b.pmore
  417340:	mov	w1, #0x1e95                	// #7829
  417344:	cmp	w0, w1
  417348:	b.hi	416588 <ferror@plt+0x13cb8>  // b.pmore
  41734c:	mov	w1, #0x1e4b                	// #7755
  417350:	cmp	w0, w1
  417354:	b.hi	417368 <ferror@plt+0x14a98>  // b.pmore
  417358:	mov	w1, #0x1e43                	// #7747
  41735c:	cmp	w0, w1
  417360:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  417364:	b	416588 <ferror@plt+0x13cb8>
  417368:	sub	w0, w0, #0x1, lsl #12
  41736c:	sub	w0, w0, #0xe58
  417370:	cmp	w0, #0x19
  417374:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  417378:	b	416588 <ferror@plt+0x13cb8>
  41737c:	sub	w0, w0, #0x1, lsl #12
  417380:	sub	w0, w0, #0xeb8
  417384:	cmp	w0, #0xf
  417388:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  41738c:	b	416588 <ferror@plt+0x13cb8>
  417390:	cmp	w0, #0x231
  417394:	b.hi	4173f4 <ferror@plt+0x14b24>  // b.pmore
  417398:	cmp	w0, #0xbf
  41739c:	b.hi	4173d0 <ferror@plt+0x14b00>  // b.pmore
  4173a0:	sub	w1, w0, #0x41
  4173a4:	cmp	w1, #0x34
  4173a8:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  4173ac:	mov	x0, #0x1                   	// #1
  4173b0:	lsl	x0, x0, x1
  4173b4:	mov	x1, #0x4111                	// #16657
  4173b8:	movk	x1, #0x10, lsl #16
  4173bc:	movk	x1, #0x4111, lsl #32
  4173c0:	movk	x1, #0x10, lsl #48
  4173c4:	tst	x0, x1
  4173c8:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  4173cc:	b	416588 <ferror@plt+0x13cb8>
  4173d0:	sub	w0, w0, #0xc0
  4173d4:	cmp	w0, #0x171
  4173d8:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  4173dc:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x14094>
  4173e0:	add	x1, x1, #0xc1c
  4173e4:	ldrh	w0, [x1, w0, uxtw #1]
  4173e8:	adr	x1, 4173f4 <ferror@plt+0x14b24>
  4173ec:	add	x0, x1, w0, sxth #2
  4173f0:	br	x0
  4173f4:	mov	w1, #0x1e53                	// #7763
  4173f8:	cmp	w0, w1
  4173fc:	b.hi	41743c <ferror@plt+0x14b6c>  // b.pmore
  417400:	mov	w1, #0x1e4b                	// #7755
  417404:	cmp	w0, w1
  417408:	b.hi	416588 <ferror@plt+0x13cb8>  // b.pmore
  41740c:	sub	w1, w0, #0x1, lsl #12
  417410:	sub	w1, w1, #0xe00
  417414:	cmp	w1, #0x2f
  417418:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  41741c:	mov	x0, #0x1                   	// #1
  417420:	lsl	x0, x0, x1
  417424:	mov	x1, #0x3                   	// #3
  417428:	movk	x1, #0xff0, lsl #16
  41742c:	movk	x1, #0xf000, lsl #32
  417430:	tst	x0, x1
  417434:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  417438:	b	416588 <ferror@plt+0x13cb8>
  41743c:	mov	w1, #0x1e7b                	// #7803
  417440:	cmp	w0, w1
  417444:	b.hi	417458 <ferror@plt+0x14b88>  // b.pmore
  417448:	mov	w1, #0x1e71                	// #7793
  41744c:	cmp	w0, w1
  417450:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  417454:	b	416588 <ferror@plt+0x13cb8>
  417458:	sub	w0, w0, #0x1, lsl #12
  41745c:	sub	w0, w0, #0xea0
  417460:	cmp	w0, #0x51
  417464:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  417468:	b	416588 <ferror@plt+0x13cb8>
  41746c:	cmp	w0, #0x171
  417470:	b.hi	4174c4 <ferror@plt+0x14bf4>  // b.pmore
  417474:	cmp	w0, #0x43
  417478:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  41747c:	sub	w0, w0, #0x44
  417480:	cmp	w0, #0x12d
  417484:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  417488:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x14094>
  41748c:	add	x1, x1, #0xf00
  417490:	ldrh	w0, [x1, w0, uxtw #1]
  417494:	adr	x1, 4174a0 <ferror@plt+0x14bd0>
  417498:	add	x0, x1, w0, sxth #2
  41749c:	br	x0
  4174a0:	sub	w1, w0, #0x1, lsl #12
  4174a4:	sub	w1, w1, #0xe0a
  4174a8:	mov	x0, #0x1                   	// #1
  4174ac:	lsl	x0, x0, x1
  4174b0:	mov	x1, #0x3c03                	// #15363
  4174b4:	movk	x1, #0xc00, lsl #48
  4174b8:	tst	x0, x1
  4174bc:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  4174c0:	b	416588 <ferror@plt+0x13cb8>
  4174c4:	mov	w1, #0x1e45                	// #7749
  4174c8:	cmp	w0, w1
  4174cc:	b.hi	417518 <ferror@plt+0x14c48>  // b.pmore
  4174d0:	mov	w1, #0x1e09                	// #7689
  4174d4:	cmp	w0, w1
  4174d8:	b.hi	4174a0 <ferror@plt+0x14bd0>  // b.pmore
  4174dc:	cmp	w0, #0x1dc
  4174e0:	b.ls	41750c <ferror@plt+0x14c3c>  // b.plast
  4174e4:	sub	w1, w0, #0x1f8
  4174e8:	cmp	w1, #0x1f
  4174ec:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  4174f0:	mov	x0, #0x1                   	// #1
  4174f4:	lsl	x0, x0, x1
  4174f8:	mov	x1, #0xf003                	// #61443
  4174fc:	movk	x1, #0xf000, lsl #16
  417500:	tst	x0, x1
  417504:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  417508:	b	416588 <ferror@plt+0x13cb8>
  41750c:	cmp	w0, #0x1d2
  417510:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  417514:	b	416588 <ferror@plt+0x13cb8>
  417518:	mov	w1, #0x1e97                	// #7831
  41751c:	cmp	w0, w1
  417520:	b.hi	417558 <ferror@plt+0x14c88>  // b.pmore
  417524:	mov	w1, #0x1e69                	// #7785
  417528:	cmp	w0, w1
  41752c:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  417530:	sub	w1, w0, #0x1, lsl #12
  417534:	sub	w1, w1, #0xe6a
  417538:	mov	x0, #0x1                   	// #1
  41753c:	lsl	x0, x0, x1
  417540:	mov	x1, #0xc003                	// #49155
  417544:	movk	x1, #0x3, lsl #16
  417548:	movk	x1, #0x2000, lsl #32
  41754c:	tst	x0, x1
  417550:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  417554:	b	416588 <ferror@plt+0x13cb8>
  417558:	mov	w1, #0x1ec5                	// #7877
  41755c:	cmp	w0, w1
  417560:	b.hi	417574 <ferror@plt+0x14ca4>  // b.pmore
  417564:	mov	w1, #0x1eb9                	// #7865
  417568:	cmp	w0, w1
  41756c:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  417570:	b	416588 <ferror@plt+0x13cb8>
  417574:	sub	w0, w0, #0x1, lsl #12
  417578:	sub	w0, w0, #0xee6
  41757c:	cmp	w0, #0x1
  417580:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  417584:	b	416588 <ferror@plt+0x13cb8>
  417588:	cmp	w0, #0x21f
  41758c:	b.hi	4175c0 <ferror@plt+0x14cf0>  // b.pmore
  417590:	cmp	w0, #0x21d
  417594:	b.hi	416588 <ferror@plt+0x13cb8>  // b.pmore
  417598:	cmp	w0, #0x68
  41759c:	b.eq	416588 <ferror@plt+0x13cb8>  // b.none
  4175a0:	b.ls	4175b4 <ferror@plt+0x14ce4>  // b.plast
  4175a4:	sub	w0, w0, #0x124
  4175a8:	cmp	w0, #0x1
  4175ac:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  4175b0:	b	416588 <ferror@plt+0x13cb8>
  4175b4:	cmp	w0, #0x48
  4175b8:	b.ne	4163e0 <ferror@plt+0x13b10>  // b.any
  4175bc:	b	416588 <ferror@plt+0x13cb8>
  4175c0:	mov	w1, #0x1e23                	// #7715
  4175c4:	cmp	w0, w1
  4175c8:	b.hi	4175dc <ferror@plt+0x14d0c>  // b.pmore
  4175cc:	mov	w1, #0x1e21                	// #7713
  4175d0:	cmp	w0, w1
  4175d4:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  4175d8:	b	416588 <ferror@plt+0x13cb8>
  4175dc:	sub	w0, w0, #0x1, lsl #12
  4175e0:	sub	w0, w0, #0xe26
  4175e4:	cmp	w0, #0x1
  4175e8:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  4175ec:	b	416588 <ferror@plt+0x13cb8>
  4175f0:	cmp	w0, #0x130
  4175f4:	b.hi	4176ac <ferror@plt+0x14ddc>  // b.pmore
  4175f8:	cmp	w0, #0xf8
  4175fc:	b.hi	41765c <ferror@plt+0x14d8c>  // b.pmore
  417600:	cmp	w0, #0x75
  417604:	b.hi	417684 <ferror@plt+0x14db4>  // b.pmore
  417608:	cmp	w0, #0x44
  41760c:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  417610:	sub	w1, w0, #0x45
  417614:	mov	x0, #0x1                   	// #1
  417618:	lsl	x0, x0, x1
  41761c:	mov	x1, #0x11                  	// #17
  417620:	movk	x1, #0x1, lsl #16
  417624:	movk	x1, #0x11, lsl #32
  417628:	movk	x1, #0x1, lsl #48
  41762c:	tst	x0, x1
  417630:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  417634:	b	416588 <ferror@plt+0x13cb8>
  417638:	sub	w1, w0, #0x1, lsl #12
  41763c:	sub	w1, w1, #0xeba
  417640:	mov	x0, #0x1                   	// #1
  417644:	lsl	x0, x0, x1
  417648:	mov	x1, #0xcfff                	// #53247
  41764c:	movk	x1, #0x3000, lsl #32
  417650:	tst	x0, x1
  417654:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  417658:	b	416588 <ferror@plt+0x13cb8>
  41765c:	sub	w1, w0, #0xf9
  417660:	mov	x0, #0x1                   	// #1
  417664:	lsl	x0, x0, x1
  417668:	mov	x1, #0xf                   	// #15
  41766c:	movk	x1, #0x7e00, lsl #16
  417670:	movk	x1, #0x8006, lsl #32
  417674:	movk	x1, #0x9f, lsl #48
  417678:	tst	x0, x1
  41767c:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  417680:	b	416588 <ferror@plt+0x13cb8>
  417684:	sub	w1, w0, #0xc8
  417688:	cmp	w1, #0x27
  41768c:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  417690:	mov	x0, #0x1                   	// #1
  417694:	lsl	x0, x0, x1
  417698:	mov	x1, #0xff000000ff          	// #1095216660735
  41769c:	movk	x1, #0x1e, lsl #16
  4176a0:	tst	x0, x1
  4176a4:	b.ne	416588 <ferror@plt+0x13cb8>  // b.any
  4176a8:	b	4163e0 <ferror@plt+0x13b10>
  4176ac:	mov	w1, #0x1e17                	// #7703
  4176b0:	cmp	w0, w1
  4176b4:	b.hi	41771c <ferror@plt+0x14e4c>  // b.pmore
  4176b8:	mov	w1, #0x1e13                	// #7699
  4176bc:	cmp	w0, w1
  4176c0:	b.hi	416588 <ferror@plt+0x13cb8>  // b.pmore
  4176c4:	cmp	w0, #0x1dc
  4176c8:	b.hi	4176f8 <ferror@plt+0x14e28>  // b.pmore
  4176cc:	cmp	w0, #0x1d2
  4176d0:	b.hi	416588 <ferror@plt+0x13cb8>  // b.pmore
  4176d4:	cmp	w0, #0x171
  4176d8:	b.hi	4176e8 <ferror@plt+0x14e18>  // b.pmore
  4176dc:	cmp	w0, #0x167
  4176e0:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  4176e4:	b	416588 <ferror@plt+0x13cb8>
  4176e8:	sub	w0, w0, #0x1cf
  4176ec:	cmp	w0, #0x1
  4176f0:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  4176f4:	b	416588 <ferror@plt+0x13cb8>
  4176f8:	cmp	w0, #0x20b
  4176fc:	b.hi	41770c <ferror@plt+0x14e3c>  // b.pmore
  417700:	cmp	w0, #0x203
  417704:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  417708:	b	416588 <ferror@plt+0x13cb8>
  41770c:	sub	w0, w0, #0x214
  417710:	cmp	w0, #0x3
  417714:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  417718:	b	416588 <ferror@plt+0x13cb8>
  41771c:	mov	w1, #0x1ee7                	// #7911
  417720:	cmp	w0, w1
  417724:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  417728:	mov	w1, #0x1eb9                	// #7865
  41772c:	cmp	w0, w1
  417730:	b.hi	417638 <ferror@plt+0x14d68>  // b.pmore
  417734:	mov	w1, #0x1e2f                	// #7727
  417738:	cmp	w0, w1
  41773c:	b.hi	417750 <ferror@plt+0x14e80>  // b.pmore
  417740:	mov	w1, #0x1e2d                	// #7725
  417744:	cmp	w0, w1
  417748:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  41774c:	b	416588 <ferror@plt+0x13cb8>
  417750:	sub	w0, w0, #0x1, lsl #12
  417754:	sub	w0, w0, #0xe78
  417758:	cmp	w0, #0x3
  41775c:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  417760:	b	416588 <ferror@plt+0x13cb8>
  417764:	cmp	w0, #0x13e
  417768:	b.hi	41780c <ferror@plt+0x14f3c>  // b.pmore
  41776c:	cmp	w0, #0x10d
  417770:	b.hi	4177d4 <ferror@plt+0x14f04>  // b.pmore
  417774:	cmp	w0, #0x7a
  417778:	b.hi	4177fc <ferror@plt+0x14f2c>  // b.pmore
  41777c:	cmp	w0, #0x41
  417780:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  417784:	sub	w1, w0, #0x42
  417788:	mov	x0, #0x1                   	// #1
  41778c:	lsl	x0, x0, x1
  417790:	mov	x1, #0x1605                	// #5637
  417794:	movk	x1, #0x105, lsl #16
  417798:	movk	x1, #0x1645, lsl #32
  41779c:	movk	x1, #0x105, lsl #48
  4177a0:	tst	x0, x1
  4177a4:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  4177a8:	b	416588 <ferror@plt+0x13cb8>
  4177ac:	sub	w1, w0, #0x1, lsl #12
  4177b0:	sub	w1, w1, #0xe23
  4177b4:	mov	x0, #0x1                   	// #1
  4177b8:	lsl	x0, x0, x1
  4177bc:	mov	x1, #0x6011                	// #24593
  4177c0:	movk	x1, #0x6, lsl #32
  4177c4:	movk	x1, #0x60, lsl #48
  4177c8:	tst	x0, x1
  4177cc:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  4177d0:	b	416588 <ferror@plt+0x13cb8>
  4177d4:	sub	w1, w0, #0x10e
  4177d8:	mov	x0, #0x1                   	// #1
  4177dc:	lsl	x0, x0, x1
  4177e0:	mov	x1, #0x3                   	// #3
  4177e4:	movk	x1, #0x80, lsl #16
  4177e8:	movk	x1, #0x9800, lsl #32
  4177ec:	movk	x1, #0x1, lsl #48
  4177f0:	tst	x0, x1
  4177f4:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  4177f8:	b	416588 <ferror@plt+0x13cb8>
  4177fc:	and	w0, w0, #0xffffffdf
  417800:	cmp	w0, #0xd1
  417804:	b.ne	4163e0 <ferror@plt+0x13b10>  // b.any
  417808:	b	416588 <ferror@plt+0x13cb8>
  41780c:	mov	w1, #0x1e03                	// #7683
  417810:	cmp	w0, w1
  417814:	b.hi	41788c <ferror@plt+0x14fbc>  // b.pmore
  417818:	mov	w1, #0x1e01                	// #7681
  41781c:	cmp	w0, w1
  417820:	b.hi	416588 <ferror@plt+0x13cb8>  // b.pmore
  417824:	cmp	w0, #0x17e
  417828:	b.hi	41785c <ferror@plt+0x14f8c>  // b.pmore
  41782c:	cmp	w0, #0x142
  417830:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  417834:	sub	w1, w0, #0x143
  417838:	mov	x0, #0x1                   	// #1
  41783c:	lsl	x0, x0, x1
  417840:	mov	x1, #0x33                  	// #51
  417844:	movk	x1, #0x66, lsl #16
  417848:	movk	x1, #0x6, lsl #32
  41784c:	movk	x1, #0xfc0, lsl #48
  417850:	tst	x0, x1
  417854:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  417858:	b	416588 <ferror@plt+0x13cb8>
  41785c:	sub	w1, w0, #0x1e8
  417860:	cmp	w1, #0x37
  417864:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  417868:	mov	x0, #0x1                   	// #1
  41786c:	lsl	x0, x0, x1
  417870:	mov	x1, #0x3                   	// #3
  417874:	movk	x1, #0x3, lsl #16
  417878:	movk	x1, #0xf00, lsl #32
  41787c:	movk	x1, #0x80, lsl #48
  417880:	tst	x0, x1
  417884:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  417888:	b	416588 <ferror@plt+0x13cb8>
  41788c:	mov	w1, #0x1e59                	// #7769
  417890:	cmp	w0, w1
  417894:	b.hi	4178b8 <ferror@plt+0x14fe8>  // b.pmore
  417898:	mov	w1, #0x1e22                	// #7714
  41789c:	cmp	w0, w1
  4178a0:	b.hi	4177ac <ferror@plt+0x14edc>  // b.pmore
  4178a4:	sub	w0, w0, #0x1, lsl #12
  4178a8:	sub	w0, w0, #0xe0a
  4178ac:	cmp	w0, #0x1
  4178b0:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  4178b4:	b	416588 <ferror@plt+0x13cb8>
  4178b8:	sub	w1, w0, #0x1, lsl #12
  4178bc:	sub	w1, w1, #0xe6a
  4178c0:	cmp	w1, #0x2d
  4178c4:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  4178c8:	mov	x0, #0x1                   	// #1
  4178cc:	lsl	x0, x0, x1
  4178d0:	mov	x1, #0x3                   	// #3
  4178d4:	movk	x1, #0x20c0, lsl #32
  4178d8:	tst	x0, x1
  4178dc:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  4178e0:	b	416588 <ferror@plt+0x13cb8>
  4178e4:	mov	w1, #0x1ffe                	// #8190
  4178e8:	cmp	w0, w1
  4178ec:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  4178f0:	mov	w1, #0x1eff                	// #7935
  4178f4:	cmp	w0, w1
  4178f8:	b.ls	417924 <ferror@plt+0x15054>  // b.plast
  4178fc:	sub	w0, w0, #0x1, lsl #12
  417900:	sub	w0, w0, #0xf00
  417904:	cmp	w0, #0xfe
  417908:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  41790c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x15094>
  417910:	add	x1, x1, #0x15c
  417914:	ldrh	w0, [x1, w0, uxtw #1]
  417918:	adr	x1, 417924 <ferror@plt+0x15054>
  41791c:	add	x0, x1, w0, sxth #2
  417920:	br	x0
  417924:	cmp	w0, #0xa8
  417928:	b.eq	416588 <ferror@plt+0x13cb8>  // b.none
  41792c:	sub	w1, w0, #0x3b1
  417930:	cmp	w1, #0x1a
  417934:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  417938:	mov	x0, #0x1                   	// #1
  41793c:	lsl	x0, x0, x1
  417940:	mov	x1, #0x141                 	// #321
  417944:	movk	x1, #0x710, lsl #16
  417948:	tst	x0, x1
  41794c:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  417950:	b	416588 <ferror@plt+0x13cb8>
  417954:	cmp	w0, #0x3ce
  417958:	b.hi	41798c <ferror@plt+0x150bc>  // b.pmore
  41795c:	cmp	w0, #0x390
  417960:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  417964:	sub	w1, w0, #0x391
  417968:	mov	x0, #0x1                   	// #1
  41796c:	lsl	x0, x0, x1
  417970:	mov	x1, #0x41                  	// #65
  417974:	movk	x1, #0x2900, lsl #16
  417978:	movk	x1, #0x41, lsl #32
  41797c:	movk	x1, #0x2100, lsl #48
  417980:	tst	x0, x1
  417984:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  417988:	b	416588 <ferror@plt+0x13cb8>
  41798c:	mov	w1, #0x1f7c                	// #8060
  417990:	cmp	w0, w1
  417994:	b.eq	416588 <ferror@plt+0x13cb8>  // b.none
  417998:	b.ls	4179bc <ferror@plt+0x150ec>  // b.plast
  41799c:	mov	w1, #0x1fc6                	// #8134
  4179a0:	cmp	w0, w1
  4179a4:	b.eq	416588 <ferror@plt+0x13cb8>  // b.none
  4179a8:	and	w0, w0, #0xffffffbf
  4179ac:	mov	w1, #0x1fb6                	// #8118
  4179b0:	cmp	w0, w1
  4179b4:	b.ne	4163e0 <ferror@plt+0x13b10>  // b.any
  4179b8:	b	416588 <ferror@plt+0x13cb8>
  4179bc:	mov	w1, #0x1f70                	// #8048
  4179c0:	cmp	w0, w1
  4179c4:	b.hi	417a04 <ferror@plt+0x15134>  // b.pmore
  4179c8:	mov	w1, #0x1f5f                	// #8031
  4179cc:	cmp	w0, w1
  4179d0:	b.hi	416588 <ferror@plt+0x13cb8>  // b.pmore
  4179d4:	mov	w1, #0x1f0f                	// #7951
  4179d8:	cmp	w0, w1
  4179dc:	b.hi	4179f0 <ferror@plt+0x15120>  // b.pmore
  4179e0:	mov	w1, #0x1eff                	// #7935
  4179e4:	cmp	w0, w1
  4179e8:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  4179ec:	b	416588 <ferror@plt+0x13cb8>
  4179f0:	sub	w0, w0, #0x1, lsl #12
  4179f4:	sub	w0, w0, #0xf20
  4179f8:	cmp	w0, #0xf
  4179fc:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  417a00:	b	416588 <ferror@plt+0x13cb8>
  417a04:	mov	w1, #0x1f74                	// #8052
  417a08:	cmp	w0, w1
  417a0c:	b.ne	4163e0 <ferror@plt+0x13b10>  // b.any
  417a10:	b	416588 <ferror@plt+0x13cb8>
  417a14:	cmp	w0, #0x64a
  417a18:	b.hi	417a44 <ferror@plt+0x15174>  // b.pmore
  417a1c:	cmp	w0, #0x626
  417a20:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  417a24:	sub	w1, w0, #0x627
  417a28:	mov	x0, #0x1                   	// #1
  417a2c:	lsl	x0, x0, x1
  417a30:	mov	x1, #0x1                   	// #1
  417a34:	movk	x1, #0xa, lsl #32
  417a38:	tst	x0, x1
  417a3c:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  417a40:	b	416588 <ferror@plt+0x13cb8>
  417a44:	sub	w1, w0, #0x6c1
  417a48:	cmp	w1, #0x14
  417a4c:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  417a50:	mov	x0, #0x1                   	// #1
  417a54:	lsl	x0, x0, x1
  417a58:	mov	x1, #0x1                   	// #1
  417a5c:	movk	x1, #0x12, lsl #16
  417a60:	tst	x0, x1
  417a64:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  417a68:	b	416588 <ferror@plt+0x13cb8>
  417a6c:	cmp	w0, #0x627
  417a70:	b.eq	416588 <ferror@plt+0x13cb8>  // b.none
  417a74:	b	4163e0 <ferror@plt+0x13b10>
  417a78:	sub	w1, w0, #0x915
  417a7c:	cmp	w1, #0x1e
  417a80:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  417a84:	mov	x0, #0x1                   	// #1
  417a88:	lsl	x0, x0, x1
  417a8c:	mov	x1, #0x3087                	// #12423
  417a90:	movk	x1, #0x4c48, lsl #16
  417a94:	tst	x0, x1
  417a98:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  417a9c:	b	416588 <ferror@plt+0x13cb8>
  417aa0:	cmp	w0, #0x9c7
  417aa4:	cset	w0, ne  // ne = any
  417aa8:	b	416584 <ferror@plt+0x13cb4>
  417aac:	cmp	w0, #0xb47
  417ab0:	cset	w0, ne  // ne = any
  417ab4:	b	416584 <ferror@plt+0x13cb4>
  417ab8:	cmp	w0, #0xb47
  417abc:	cset	w0, ne  // ne = any
  417ac0:	b	416584 <ferror@plt+0x13cb4>
  417ac4:	cmp	w0, #0xb92
  417ac8:	b.eq	416588 <ferror@plt+0x13cb8>  // b.none
  417acc:	cmp	w0, #0xbc6
  417ad0:	b.ne	4163e0 <ferror@plt+0x13b10>  // b.any
  417ad4:	b	416588 <ferror@plt+0x13cb8>
  417ad8:	cmp	w0, #0xc46
  417adc:	cset	w0, ne  // ne = any
  417ae0:	b	416584 <ferror@plt+0x13cb4>
  417ae4:	sub	w1, w0, #0xcbf
  417ae8:	cmp	w1, #0xb
  417aec:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  417af0:	mov	x0, #0x1                   	// #1
  417af4:	lsl	x0, x0, x1
  417af8:	mov	x1, #0x881                 	// #2177
  417afc:	tst	x0, x1
  417b00:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  417b04:	b	416588 <ferror@plt+0x13cb8>
  417b08:	sub	w0, w0, #0xd46
  417b0c:	cmp	w0, #0x1
  417b10:	cset	w0, hi  // hi = pmore
  417b14:	b	416584 <ferror@plt+0x13cb4>
  417b18:	cmp	w0, #0xdd9
  417b1c:	b.eq	416588 <ferror@plt+0x13cb8>  // b.none
  417b20:	cmp	w0, #0xddc
  417b24:	b.ne	4163e0 <ferror@plt+0x13b10>  // b.any
  417b28:	b	416588 <ferror@plt+0x13cb8>
  417b2c:	sub	w0, w0, #0xdd9
  417b30:	cmp	w0, #0x1
  417b34:	cset	w0, hi  // hi = pmore
  417b38:	b	416584 <ferror@plt+0x13cb4>
  417b3c:	mov	w1, #0x1025                	// #4133
  417b40:	cmp	w0, w1
  417b44:	cset	w0, ne  // ne = any
  417b48:	b	416584 <ferror@plt+0x13cb4>
  417b4c:	sub	w1, w0, #0x1, lsl #12
  417b50:	sub	w1, w1, #0xb05
  417b54:	cmp	w1, #0x3d
  417b58:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  417b5c:	mov	x0, #0x1                   	// #1
  417b60:	lsl	x0, x0, x1
  417b64:	mov	x1, #0x1155                	// #4437
  417b68:	movk	x1, #0x26a0, lsl #48
  417b6c:	tst	x0, x1
  417b70:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  417b74:	b	416588 <ferror@plt+0x13cb8>
  417b78:	mov	w1, #0x307b                	// #12411
  417b7c:	cmp	w0, w1
  417b80:	b.hi	417bb0 <ferror@plt+0x152e0>  // b.pmore
  417b84:	mov	w1, #0x306e                	// #12398
  417b88:	cmp	w0, w1
  417b8c:	b.ls	4163e0 <ferror@plt+0x13b10>  // b.plast
  417b90:	sub	w1, w0, #0x3, lsl #12
  417b94:	sub	w1, w1, #0x6f
  417b98:	mov	x0, #0x1                   	// #1
  417b9c:	lsl	x0, x0, x1
  417ba0:	mov	x1, #0x1249                	// #4681
  417ba4:	tst	x0, x1
  417ba8:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  417bac:	b	416588 <ferror@plt+0x13cb8>
  417bb0:	sub	w1, w0, #0x3, lsl #12
  417bb4:	sub	w1, w1, #0xcf
  417bb8:	cmp	w1, #0xc
  417bbc:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  417bc0:	mov	x0, #0x1                   	// #1
  417bc4:	lsl	x0, x0, x1
  417bc8:	mov	x1, #0x1249                	// #4681
  417bcc:	tst	x0, x1
  417bd0:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  417bd4:	b	416588 <ferror@plt+0x13cb8>
  417bd8:	sub	w1, w0, #0x11, lsl #12
  417bdc:	sub	w1, w1, #0x99
  417be0:	cmp	w1, #0xc
  417be4:	b.hi	4163e0 <ferror@plt+0x13b10>  // b.pmore
  417be8:	mov	x0, #0x1                   	// #1
  417bec:	lsl	x0, x0, x1
  417bf0:	mov	x1, #0x1005                	// #4101
  417bf4:	tst	x0, x1
  417bf8:	b.eq	4163e0 <ferror@plt+0x13b10>  // b.none
  417bfc:	b	416588 <ferror@plt+0x13cb8>
  417c00:	mov	w3, w20
  417c04:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  417c08:	add	x2, x2, #0xfc0
  417c0c:	mov	w1, #0x4                   	// #4
  417c10:	mov	x0, x28
  417c14:	bl	41c9fc <ferror@plt+0x1a12c>
  417c18:	b	4163e0 <ferror@plt+0x13b10>
  417c1c:	mov	w2, #0x1                   	// #1
  417c20:	cbz	w2, 416588 <ferror@plt+0x13cb8>
  417c24:	b	4163e0 <ferror@plt+0x13b10>
  417c28:	ldr	x2, [sp, #136]
  417c2c:	ldr	w0, [x2, #8]
  417c30:	cmp	w0, #0x2
  417c34:	mov	w1, #0x2                   	// #2
  417c38:	csel	w0, w0, w1, ge  // ge = tcont
  417c3c:	str	w0, [x2, #8]
  417c40:	b	4163e0 <ferror@plt+0x13b10>
  417c44:	tbnz	w21, #7, 4163e0 <ferror@plt+0x13b10>
  417c48:	tbz	w21, #6, 417c64 <ferror@plt+0x15394>
  417c4c:	ldr	x1, [sp, #136]
  417c50:	ldr	w0, [x1, #8]
  417c54:	cmp	w0, #0x0
  417c58:	csinc	w0, w0, wzr, gt
  417c5c:	str	w0, [x1, #8]
  417c60:	b	4163e0 <ferror@plt+0x13b10>
  417c64:	tbz	w21, #5, 417c84 <ferror@plt+0x153b4>
  417c68:	ldr	x2, [sp, #136]
  417c6c:	ldr	w0, [x2, #8]
  417c70:	cmp	w0, #0x2
  417c74:	mov	w1, #0x2                   	// #2
  417c78:	csel	w0, w0, w1, ge  // ge = tcont
  417c7c:	str	w0, [x2, #8]
  417c80:	b	4163e0 <ferror@plt+0x13b10>
  417c84:	mov	w0, #0x3                   	// #3
  417c88:	ldr	x1, [sp, #136]
  417c8c:	str	w0, [x1, #8]
  417c90:	b	4163e0 <ferror@plt+0x13b10>
  417c94:	sbfiz	x0, x3, #3, #32
  417c98:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x15094>
  417c9c:	add	x1, x1, #0x4f0
  417ca0:	ldrh	w21, [x1, x0]
  417ca4:	mov	w23, #0x10                  	// #16
  417ca8:	tbnz	w21, #3, 416380 <ferror@plt+0x13ab0>
  417cac:	b	4161c4 <ferror@plt+0x138f4>
  417cb0:	sub	w0, w20, #0xd, lsl #12
  417cb4:	sub	w0, w0, #0x800
  417cb8:	cmp	w0, #0x7ff
  417cbc:	b.ls	41621c <ferror@plt+0x1394c>  // b.plast
  417cc0:	b	4161b0 <ferror@plt+0x138e0>
  417cc4:	stp	x29, x30, [sp, #-384]!
  417cc8:	mov	x29, sp
  417ccc:	stp	x19, x20, [sp, #16]
  417cd0:	stp	x21, x22, [sp, #32]
  417cd4:	stp	x23, x24, [sp, #48]
  417cd8:	str	x0, [sp, #112]
  417cdc:	mov	x19, x1
  417ce0:	str	x2, [sp, #184]
  417ce4:	str	x3, [sp, #136]
  417ce8:	mov	w1, w4
  417cec:	mov	x21, x5
  417cf0:	str	x5, [sp, #192]
  417cf4:	mov	x20, x6
  417cf8:	str	x6, [sp, #104]
  417cfc:	add	x8, sp, #0x150
  417d00:	bl	4149c0 <ferror@plt+0x120f0>
  417d04:	ldr	x23, [sp, #336]
  417d08:	ldr	x24, [sp, #344]
  417d0c:	cmp	x20, #0x0
  417d10:	cset	w1, ne  // ne = any
  417d14:	str	w1, [sp, #176]
  417d18:	cmp	x21, #0x0
  417d1c:	cset	w0, ne  // ne = any
  417d20:	cmp	w0, w1
  417d24:	b.ne	417d98 <ferror@plt+0x154c8>  // b.any
  417d28:	ldr	x0, [sp, #136]
  417d2c:	cbz	x0, 4188b4 <ferror@plt+0x15fe4>
  417d30:	ldr	w0, [x19]
  417d34:	cmp	w0, #0x100
  417d38:	mov	w1, #0x100                 	// #256
  417d3c:	csel	w0, w0, w1, cs  // cs = hs, nlast
  417d40:	str	x0, [sp, #368]
  417d44:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  417d48:	str	x0, [sp, #360]
  417d4c:	str	xzr, [sp, #376]
  417d50:	ldr	x0, [sp, #184]
  417d54:	cbz	x0, 4187bc <ferror@plt+0x15eec>
  417d58:	stp	x25, x26, [sp, #64]
  417d5c:	stp	x27, x28, [sp, #80]
  417d60:	ldr	x0, [sp, #136]
  417d64:	cmp	x0, #0x0
  417d68:	add	x27, sp, #0x168
  417d6c:	csel	x27, x27, xzr, ne  // ne = any
  417d70:	add	x0, x19, #0x8
  417d74:	str	x0, [sp, #152]
  417d78:	mov	x21, #0x0                   	// #0
  417d7c:	str	xzr, [sp, #160]
  417d80:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x15094>
  417d84:	add	x0, x0, #0x410
  417d88:	str	x0, [sp, #200]
  417d8c:	add	x0, x0, #0x10
  417d90:	str	x0, [sp, #144]
  417d94:	b	417ef4 <ferror@plt+0x15624>
  417d98:	stp	x25, x26, [sp, #64]
  417d9c:	stp	x27, x28, [sp, #80]
  417da0:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x13094>
  417da4:	add	x2, x2, #0x60
  417da8:	mov	w1, #0x5fc                 	// #1532
  417dac:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  417db0:	add	x0, x0, #0xf30
  417db4:	bl	4062a0 <ferror@plt+0x39d0>
  417db8:	add	x19, x20, #0x1
  417dbc:	cbz	x21, 417de8 <ferror@plt+0x15518>
  417dc0:	mov	x0, x21
  417dc4:	bl	415f58 <ferror@plt+0x13688>
  417dc8:	ldrb	w0, [x20, #1]
  417dcc:	cmp	w0, #0x38
  417dd0:	b.eq	418834 <ferror@plt+0x15f64>  // b.none
  417dd4:	ldrb	w0, [x20, #1]
  417dd8:	cmp	w0, #0x52
  417ddc:	b.eq	41888c <ferror@plt+0x15fbc>  // b.none
  417de0:	mov	x20, x19
  417de4:	b	417f3c <ferror@plt+0x1566c>
  417de8:	ldrb	w0, [x20, #1]
  417dec:	cmp	w0, #0x38
  417df0:	b.eq	417e08 <ferror@plt+0x15538>  // b.none
  417df4:	ldrb	w0, [x20, #1]
  417df8:	cmp	w0, #0x52
  417dfc:	b.eq	418880 <ferror@plt+0x15fb0>  // b.none
  417e00:	mov	x20, x19
  417e04:	b	417f3c <ferror@plt+0x1566c>
  417e08:	add	x20, x20, #0x2
  417e0c:	b	417f30 <ferror@plt+0x15660>
  417e10:	add	x26, x20, #0x2
  417e14:	cbnz	x21, 418890 <ferror@plt+0x15fc0>
  417e18:	ldrb	w0, [x20, #2]
  417e1c:	cmp	w0, #0x28
  417e20:	b.ne	4188ac <ferror@plt+0x15fdc>  // b.any
  417e24:	add	x20, x20, #0x3
  417e28:	b	417e60 <ferror@plt+0x15590>
  417e2c:	ldrb	w0, [x19]
  417e30:	cmp	w0, #0x28
  417e34:	b.eq	417e50 <ferror@plt+0x15580>  // b.none
  417e38:	mov	x20, x19
  417e3c:	add	x19, x19, #0x1
  417e40:	cbz	x21, 417e2c <ferror@plt+0x1555c>
  417e44:	mov	x0, x21
  417e48:	bl	415f58 <ferror@plt+0x13688>
  417e4c:	b	417e2c <ferror@plt+0x1555c>
  417e50:	add	x20, x20, #0x2
  417e54:	cbz	x21, 417e60 <ferror@plt+0x15590>
  417e58:	mov	x0, x21
  417e5c:	bl	415f58 <ferror@plt+0x13688>
  417e60:	ldur	w19, [x25, #-8]
  417e64:	ldr	x0, [x25]
  417e68:	add	x19, x0, x19
  417e6c:	sub	x26, x20, x26
  417e70:	add	x1, x26, #0x1
  417e74:	add	x1, x20, x1
  417e78:	mvn	x26, x26
  417e7c:	add	x0, x19, x26
  417e80:	cmp	x19, x1
  417e84:	csel	x19, x0, x19, cs  // cs = hs, nlast
  417e88:	ldr	x0, [sp, #136]
  417e8c:	cbz	x0, 417eac <ferror@plt+0x155dc>
  417e90:	add	x3, sp, #0x168
  417e94:	sub	x2, x19, x20
  417e98:	mov	x1, x20
  417e9c:	mov	x0, x24
  417ea0:	blr	x23
  417ea4:	and	w0, w0, #0xff
  417ea8:	cbz	w0, 4187c4 <ferror@plt+0x15ef4>
  417eac:	cbz	x21, 417ed0 <ferror@plt+0x15600>
  417eb0:	adrp	x0, 414000 <ferror@plt+0x11730>
  417eb4:	add	x0, x0, #0xfcc
  417eb8:	cmp	x23, x0
  417ebc:	b.ne	417f70 <ferror@plt+0x156a0>  // b.any
  417ec0:	mov	x2, x21
  417ec4:	sub	w1, w19, w20
  417ec8:	ldr	x0, [sp, #104]
  417ecc:	bl	415f80 <ferror@plt+0x136b0>
  417ed0:	ldr	x0, [sp, #160]
  417ed4:	add	x0, x0, #0x1
  417ed8:	str	x0, [sp, #160]
  417edc:	ldr	x1, [sp, #152]
  417ee0:	add	x1, x1, #0x10
  417ee4:	str	x1, [sp, #152]
  417ee8:	ldr	x1, [sp, #184]
  417eec:	cmp	x1, x0
  417ef0:	b.eq	418730 <ferror@plt+0x15e60>  // b.none
  417ef4:	ldr	x0, [sp, #160]
  417ef8:	ldr	x1, [sp, #192]
  417efc:	add	x0, x1, x0, lsl #4
  417f00:	cmp	x1, #0x0
  417f04:	csel	x21, x0, x21, ne  // ne = any
  417f08:	ldr	x0, [sp, #152]
  417f0c:	mov	x25, x0
  417f10:	ldr	x20, [x0]
  417f14:	ldrb	w0, [x20]
  417f18:	cmp	w0, #0x75
  417f1c:	b.eq	417db8 <ferror@plt+0x154e8>  // b.none
  417f20:	cmp	w0, #0x4c
  417f24:	mov	w1, #0x55                  	// #85
  417f28:	ccmp	w0, w1, #0x4, ne  // ne = any
  417f2c:	cinc	x20, x20, eq  // eq = none
  417f30:	ldrb	w0, [x20]
  417f34:	cmp	w0, #0x52
  417f38:	b.eq	417e10 <ferror@plt+0x15540>  // b.none
  417f3c:	cmp	w0, #0x27
  417f40:	mov	w1, #0x22                  	// #34
  417f44:	ccmp	w0, w1, #0x4, ne  // ne = any
  417f48:	b.ne	417f88 <ferror@plt+0x156b8>  // b.any
  417f4c:	add	x20, x20, #0x1
  417f50:	cbz	x21, 417f5c <ferror@plt+0x1568c>
  417f54:	mov	x0, x21
  417f58:	bl	415f58 <ferror@plt+0x13688>
  417f5c:	ldur	w0, [x25, #-8]
  417f60:	sub	x0, x0, #0x1
  417f64:	ldr	x19, [x25]
  417f68:	add	x19, x19, x0
  417f6c:	b	418574 <ferror@plt+0x15ca4>
  417f70:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x13094>
  417f74:	add	x2, x2, #0x60
  417f78:	mov	w1, #0x641                 	// #1601
  417f7c:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  417f80:	add	x0, x0, #0xf30
  417f84:	bl	4062a0 <ferror@plt+0x39d0>
  417f88:	ldr	x0, [sp, #104]
  417f8c:	cbz	x0, 417fc8 <ferror@plt+0x156f8>
  417f90:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x13094>
  417f94:	add	x2, x2, #0x78
  417f98:	mov	w1, #0x3                   	// #3
  417f9c:	ldr	x0, [sp, #112]
  417fa0:	bl	41c9fc <ferror@plt+0x1a12c>
  417fa4:	mov	w0, #0x0                   	// #0
  417fa8:	ldr	x1, [sp, #136]
  417fac:	cbz	x1, 4188c4 <ferror@plt+0x15ff4>
  417fb0:	ldr	x0, [sp, #360]
  417fb4:	bl	402690 <free@plt>
  417fb8:	mov	w0, #0x0                   	// #0
  417fbc:	ldp	x25, x26, [sp, #64]
  417fc0:	ldp	x27, x28, [sp, #80]
  417fc4:	b	4187ec <ferror@plt+0x15f1c>
  417fc8:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x13094>
  417fcc:	add	x2, x2, #0x60
  417fd0:	mov	w1, #0x64d                 	// #1613
  417fd4:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  417fd8:	add	x0, x0, #0xf30
  417fdc:	bl	4062a0 <ferror@plt+0x39d0>
  417fe0:	cmp	x20, x25
  417fe4:	b.cc	41859c <ferror@plt+0x15ccc>  // b.lo, b.ul, b.last
  417fe8:	cmp	x19, x25
  417fec:	b.ls	417ed0 <ferror@plt+0x15600>  // b.plast
  417ff0:	add	x26, x25, #0x1
  417ff4:	str	x23, [sp, #336]
  417ff8:	str	x24, [sp, #344]
  417ffc:	ldp	x0, x1, [sp, #336]
  418000:	add	x2, sp, #0x200
  418004:	stp	x0, x1, [x2, #-232]
  418008:	ldr	x0, [sp, #352]
  41800c:	str	x0, [sp, #296]
  418010:	cbz	x21, 418620 <ferror@plt+0x15d50>
  418014:	b	41860c <ferror@plt+0x15d3c>
  418018:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x13094>
  41801c:	add	x2, x2, #0x60
  418020:	mov	w1, #0x66c                 	// #1644
  418024:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  418028:	add	x0, x0, #0xf30
  41802c:	bl	4062a0 <ferror@plt+0x39d0>
  418030:	str	x26, [sp, #264]
  418034:	ldr	x0, [sp, #120]
  418038:	bfi	x22, x0, #32, #32
  41803c:	str	x22, [sp, #272]
  418040:	str	wzr, [sp, #304]
  418044:	strb	wzr, [sp, #308]
  418048:	str	wzr, [sp, #312]
  41804c:	cmp	x21, #0x0
  418050:	cset	w0, ne  // ne = any
  418054:	ldr	w1, [sp, #176]
  418058:	cmp	w0, w1
  41805c:	b.ne	418120 <ferror@plt+0x15850>  // b.any
  418060:	add	x25, x25, #0x2
  418064:	str	x25, [sp, #264]
  418068:	cbz	x21, 41807c <ferror@plt+0x157ac>
  41806c:	mov	x0, x21
  418070:	bl	415f58 <ferror@plt+0x13688>
  418074:	lsr	x0, x0, #32
  418078:	str	w0, [sp, #276]
  41807c:	mov	x7, x21
  418080:	add	x6, sp, #0x110
  418084:	add	x5, sp, #0xf4
  418088:	add	x4, sp, #0x130
  41808c:	mov	w3, #0x0                   	// #0
  418090:	mov	x2, x19
  418094:	add	x1, sp, #0x108
  418098:	ldr	x0, [sp, #112]
  41809c:	bl	415fdc <ferror@plt+0x1370c>
  4180a0:	ldr	w0, [sp, #244]
  4180a4:	cmp	w0, #0x7f
  4180a8:	b.hi	418138 <ferror@plt+0x15868>  // b.pmore
  4180ac:	strb	w0, [sp, #261]
  4180b0:	add	x0, sp, #0x105
  4180b4:	mov	x20, #0x1                   	// #1
  4180b8:	add	x1, sp, #0xf8
  4180bc:	add	x3, sp, #0x106
  4180c0:	ldrb	w2, [x0], #1
  4180c4:	strb	w2, [x1], #1
  4180c8:	cmp	x0, x3
  4180cc:	b.ne	4180c0 <ferror@plt+0x157f0>  // b.any
  4180d0:	cbz	x27, 4180f0 <ferror@plt+0x15820>
  4180d4:	mov	x3, x27
  4180d8:	mov	x2, x20
  4180dc:	add	x1, sp, #0xf8
  4180e0:	mov	x0, x24
  4180e4:	blr	x23
  4180e8:	and	w0, w0, #0xff
  4180ec:	cbz	w0, 4181a8 <ferror@plt+0x158d8>
  4180f0:	cbz	x21, 418118 <ferror@plt+0x15848>
  4180f4:	cmp	w20, #0x0
  4180f8:	b.le	418118 <ferror@plt+0x15848>
  4180fc:	mov	w25, #0x0                   	// #0
  418100:	ldr	x1, [sp, #272]
  418104:	ldr	x0, [sp, #104]
  418108:	bl	415acc <ferror@plt+0x131fc>
  41810c:	add	w25, w25, #0x1
  418110:	cmp	w20, w25
  418114:	b.ne	418100 <ferror@plt+0x15830>  // b.any
  418118:	ldr	x20, [sp, #264]
  41811c:	b	418574 <ferror@plt+0x15ca4>
  418120:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x13094>
  418124:	add	x2, x2, #0x90
  418128:	mov	w1, #0x48d                 	// #1165
  41812c:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  418130:	add	x0, x0, #0xf30
  418134:	bl	4062a0 <ferror@plt+0x39d0>
  418138:	add	x3, sp, #0x106
  41813c:	mov	x20, #0x1                   	// #1
  418140:	mov	x1, x3
  418144:	and	w2, w0, #0x3f
  418148:	orr	w2, w2, #0xffffff80
  41814c:	strb	w2, [x3, #-1]!
  418150:	lsr	w0, w0, #6
  418154:	mov	x2, x20
  418158:	add	x20, x20, #0x1
  41815c:	cmp	w0, #0x3e
  418160:	b.hi	418140 <ferror@plt+0x15870>  // b.pmore
  418164:	ldr	x4, [sp, #144]
  418168:	add	x4, x4, x20
  41816c:	ldurb	w4, [x4, #-1]
  418170:	tst	w4, w0
  418174:	b.ne	418140 <ferror@plt+0x15870>  // b.any
  418178:	ldr	x3, [sp, #200]
  41817c:	add	x3, x3, #0x18
  418180:	ldrb	w2, [x3, x2]
  418184:	orr	w0, w0, w2
  418188:	sturb	w0, [x1, #-2]
  41818c:	cmp	x20, #0x6
  418190:	b.hi	418808 <ferror@plt+0x15f38>  // b.pmore
  418194:	sub	x0, x1, #0x2
  418198:	add	x1, sp, #0x106
  41819c:	cmp	x0, x1
  4181a0:	b.cc	4180b8 <ferror@plt+0x157e8>  // b.lo, b.ul, b.last
  4181a4:	b	4180d0 <ferror@plt+0x15800>
  4181a8:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x13094>
  4181ac:	add	x2, x2, #0xa0
  4181b0:	mov	w1, #0x3                   	// #3
  4181b4:	ldr	x0, [sp, #112]
  4181b8:	bl	41cf08 <ferror@plt+0x1a638>
  4181bc:	b	4180f0 <ferror@plt+0x15820>
  4181c0:	str	x23, [sp, #280]
  4181c4:	str	x24, [sp, #288]
  4181c8:	add	x0, sp, #0x200
  4181cc:	ldp	x0, x1, [x0, #-232]
  4181d0:	stp	x0, x1, [sp, #304]
  4181d4:	ldr	x0, [sp, #296]
  4181d8:	str	x0, [sp, #320]
  4181dc:	ldr	w0, [sp, #296]
  4181e0:	str	w0, [sp, #180]
  4181e4:	ldr	x1, [sp, #120]
  4181e8:	bfi	x22, x1, #32, #32
  4181ec:	mov	x28, x22
  4181f0:	sxtw	x0, w0
  4181f4:	cmp	x0, #0x20
  4181f8:	mov	x1, #0x20                  	// #32
  4181fc:	csel	x0, x0, x1, ls  // ls = plast
  418200:	mov	x1, #0x1                   	// #1
  418204:	lsl	x0, x1, x0
  418208:	sub	x0, x0, #0x1
  41820c:	str	x0, [sp, #168]
  418210:	cmp	x21, #0x0
  418214:	cset	w0, ne  // ne = any
  418218:	ldr	w1, [sp, #176]
  41821c:	cmp	w0, w1
  418220:	b.ne	41826c <ferror@plt+0x1599c>  // b.any
  418224:	ldr	x0, [sp, #112]
  418228:	ldrb	w0, [x0, #1138]
  41822c:	cbnz	w0, 418284 <ferror@plt+0x159b4>
  418230:	add	x20, x25, #0x2
  418234:	cbz	x21, 418248 <ferror@plt+0x15978>
  418238:	mov	x0, x21
  41823c:	bl	415f58 <ferror@plt+0x13688>
  418240:	lsr	x0, x0, #32
  418244:	bfi	x28, x0, #32, #32
  418248:	cmp	x19, x20
  41824c:	b.ls	4182f0 <ferror@plt+0x15a20>  // b.plast
  418250:	mov	w1, #0x0                   	// #0
  418254:	str	wzr, [sp, #96]
  418258:	mov	w25, #0x0                   	// #0
  41825c:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1f094>
  418260:	add	x0, x0, #0x750
  418264:	str	x0, [sp, #128]
  418268:	b	4182bc <ferror@plt+0x159ec>
  41826c:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x13094>
  418270:	add	x2, x2, #0xd0
  418274:	mov	w1, #0x4f9                 	// #1273
  418278:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  41827c:	add	x0, x0, #0xf30
  418280:	bl	4062a0 <ferror@plt+0x39d0>
  418284:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x13094>
  418288:	add	x2, x2, #0xe0
  41828c:	mov	w1, #0x6                   	// #6
  418290:	ldr	x0, [sp, #112]
  418294:	bl	41ca74 <ferror@plt+0x1a1a4>
  418298:	b	418230 <ferror@plt+0x15960>
  41829c:	and	w0, w25, #0xf0000000
  4182a0:	ldr	w1, [sp, #96]
  4182a4:	orr	w0, w1, w0
  4182a8:	str	w0, [sp, #96]
  4182ac:	add	w25, w26, w25, lsl #4
  4182b0:	mov	w1, #0x1                   	// #1
  4182b4:	cmp	x19, x20
  4182b8:	b.eq	418308 <ferror@plt+0x15a38>  // b.none
  4182bc:	ldrb	w0, [x20]
  4182c0:	ldr	x2, [sp, #128]
  4182c4:	ldrb	w26, [x2, w0, sxtw]
  4182c8:	cmp	w26, #0x63
  4182cc:	b.eq	4182ec <ferror@plt+0x15a1c>  // b.none
  4182d0:	add	x20, x20, #0x1
  4182d4:	cbz	x21, 41829c <ferror@plt+0x159cc>
  4182d8:	mov	x0, x21
  4182dc:	bl	415f58 <ferror@plt+0x13688>
  4182e0:	lsr	x0, x0, #32
  4182e4:	bfi	x28, x0, #32, #32
  4182e8:	b	41829c <ferror@plt+0x159cc>
  4182ec:	cbnz	w1, 41830c <ferror@plt+0x15a3c>
  4182f0:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x13094>
  4182f4:	add	x2, x2, #0x118
  4182f8:	mov	w1, #0x3                   	// #3
  4182fc:	ldr	x0, [sp, #112]
  418300:	bl	41c9fc <ferror@plt+0x1a12c>
  418304:	b	418574 <ferror@plt+0x15ca4>
  418308:	mov	x20, x19
  41830c:	ldr	w0, [sp, #168]
  418310:	and	w0, w25, w0
  418314:	cmp	x0, w25, uxtw
  418318:	cset	w0, ne  // ne = any
  41831c:	ldr	w1, [sp, #96]
  418320:	orr	w0, w0, w1
  418324:	cbnz	w0, 41836c <ferror@plt+0x15a9c>
  418328:	cbz	x27, 418358 <ferror@plt+0x15a88>
  41832c:	ldr	w0, [sp, #180]
  418330:	str	w0, [sp, #320]
  418334:	ldp	x0, x1, [sp, #304]
  418338:	stp	x0, x1, [sp, #208]
  41833c:	ldr	x0, [sp, #320]
  418340:	str	x0, [sp, #224]
  418344:	add	x3, sp, #0xd0
  418348:	mov	x2, x27
  41834c:	mov	w1, w25
  418350:	ldr	x0, [sp, #112]
  418354:	bl	414eac <ferror@plt+0x125dc>
  418358:	ldr	x0, [sp, #104]
  41835c:	cbz	x0, 418574 <ferror@plt+0x15ca4>
  418360:	mov	x1, x28
  418364:	bl	415acc <ferror@plt+0x131fc>
  418368:	b	418574 <ferror@plt+0x15ca4>
  41836c:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x13094>
  418370:	add	x2, x2, #0x140
  418374:	mov	w1, #0x2                   	// #2
  418378:	ldr	x0, [sp, #112]
  41837c:	bl	41c9fc <ferror@plt+0x1a12c>
  418380:	ldr	w0, [sp, #168]
  418384:	and	w25, w25, w0
  418388:	b	418328 <ferror@plt+0x15a58>
  41838c:	str	x23, [sp, #280]
  418390:	str	x24, [sp, #288]
  418394:	add	x0, sp, #0x200
  418398:	ldp	x0, x1, [x0, #-232]
  41839c:	stp	x0, x1, [sp, #304]
  4183a0:	ldr	x0, [sp, #296]
  4183a4:	str	x0, [sp, #320]
  4183a8:	ldr	w0, [sp, #296]
  4183ac:	str	w0, [sp, #168]
  4183b0:	ldr	x1, [sp, #120]
  4183b4:	bfi	x22, x1, #32, #32
  4183b8:	str	x22, [sp, #96]
  4183bc:	sxtw	x0, w0
  4183c0:	cmp	x0, #0x20
  4183c4:	mov	x1, #0x20                  	// #32
  4183c8:	csel	x0, x0, x1, ls  // ls = plast
  4183cc:	mov	x1, #0x1                   	// #1
  4183d0:	lsl	x0, x1, x0
  4183d4:	sub	x0, x0, #0x1
  4183d8:	str	x0, [sp, #128]
  4183dc:	cmp	x21, #0x0
  4183e0:	cset	w0, ne  // ne = any
  4183e4:	ldr	w1, [sp, #176]
  4183e8:	cmp	w0, w1
  4183ec:	b.ne	418404 <ferror@plt+0x15b34>  // b.any
  4183f0:	cmp	x19, x26
  4183f4:	b.ls	4184e0 <ferror@plt+0x15c10>  // b.plast
  4183f8:	add	x20, x25, #0x4
  4183fc:	mov	w25, #0x0                   	// #0
  418400:	b	418434 <ferror@plt+0x15b64>
  418404:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x13094>
  418408:	add	x2, x2, #0x168
  41840c:	mov	w1, #0x540                 	// #1344
  418410:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x12094>
  418414:	add	x0, x0, #0xf30
  418418:	bl	4062a0 <ferror@plt+0x39d0>
  41841c:	add	w25, w28, w25, lsl #3
  418420:	sub	w25, w25, #0x30
  418424:	cmp	x19, x26
  418428:	b.eq	418468 <ferror@plt+0x15b98>  // b.none
  41842c:	cmp	x20, x26
  418430:	b.eq	418474 <ferror@plt+0x15ba4>  // b.none
  418434:	ldrb	w28, [x26]
  418438:	sub	w0, w28, #0x30
  41843c:	cmp	w0, #0x7
  418440:	b.hi	418470 <ferror@plt+0x15ba0>  // b.pmore
  418444:	add	x26, x26, #0x1
  418448:	cbz	x21, 41841c <ferror@plt+0x15b4c>
  41844c:	mov	x0, x21
  418450:	bl	415f58 <ferror@plt+0x13688>
  418454:	lsr	x0, x0, #32
  418458:	ldr	x1, [sp, #96]
  41845c:	bfi	x1, x0, #32, #32
  418460:	str	x1, [sp, #96]
  418464:	b	41841c <ferror@plt+0x15b4c>
  418468:	mov	x20, x19
  41846c:	b	418474 <ferror@plt+0x15ba4>
  418470:	mov	x20, x26
  418474:	ldr	x26, [sp, #128]
  418478:	and	w0, w25, w26
  41847c:	cmp	x0, w25, uxtw
  418480:	b.eq	41849c <ferror@plt+0x15bcc>  // b.none
  418484:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x13094>
  418488:	add	x2, x2, #0x178
  41848c:	mov	w1, #0x2                   	// #2
  418490:	ldr	x0, [sp, #112]
  418494:	bl	41c9fc <ferror@plt+0x1a12c>
  418498:	and	w25, w25, w26
  41849c:	cbz	x27, 4184cc <ferror@plt+0x15bfc>
  4184a0:	ldr	w0, [sp, #168]
  4184a4:	str	w0, [sp, #320]
  4184a8:	ldp	x0, x1, [sp, #304]
  4184ac:	stp	x0, x1, [sp, #208]
  4184b0:	ldr	x0, [sp, #320]
  4184b4:	str	x0, [sp, #224]
  4184b8:	add	x3, sp, #0xd0
  4184bc:	mov	x2, x27
  4184c0:	mov	w1, w25
  4184c4:	ldr	x0, [sp, #112]
  4184c8:	bl	414eac <ferror@plt+0x125dc>
  4184cc:	ldr	x0, [sp, #104]
  4184d0:	cbz	x0, 418574 <ferror@plt+0x15ca4>
  4184d4:	ldr	x1, [sp, #96]
  4184d8:	bl	415acc <ferror@plt+0x131fc>
  4184dc:	b	418574 <ferror@plt+0x15ca4>
  4184e0:	mov	x20, x26
  4184e4:	mov	w25, #0x0                   	// #0
  4184e8:	b	41849c <ferror@plt+0x15bcc>
  4184ec:	ldr	x0, [sp, #112]
  4184f0:	ldrb	w0, [x0, #1154]
  4184f4:	cbz	w0, 418530 <ferror@plt+0x15c60>
  4184f8:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1f094>
  4184fc:	add	x0, x0, #0xa68
  418500:	ldrh	w0, [x0, w3, sxtw #1]
  418504:	mov	w1, #0xac                  	// #172
  418508:	tst	w1, w0
  41850c:	b.eq	4186e8 <ferror@plt+0x15e18>  // b.none
  418510:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x13094>
  418514:	add	x2, x2, #0x200
  418518:	mov	w1, #0x2                   	// #2
  41851c:	ldr	x0, [sp, #112]
  418520:	bl	41c9fc <ferror@plt+0x1a12c>
  418524:	b	418530 <ferror@plt+0x15c60>
  418528:	mov	w0, #0x8                   	// #8
  41852c:	strb	w0, [sp, #243]
  418530:	cbz	x27, 418550 <ferror@plt+0x15c80>
  418534:	mov	x3, x27
  418538:	mov	x2, #0x1                   	// #1
  41853c:	add	x1, sp, #0xf3
  418540:	mov	x0, x24
  418544:	blr	x23
  418548:	and	w0, w0, #0xff
  41854c:	cbz	w0, 418718 <ferror@plt+0x15e48>
  418550:	cbz	x21, 418570 <ferror@plt+0x15ca0>
  418554:	mov	x0, x21
  418558:	bl	415f58 <ferror@plt+0x13688>
  41855c:	lsr	x0, x0, #32
  418560:	bfi	x22, x0, #32, #32
  418564:	mov	x1, x22
  418568:	ldr	x0, [sp, #104]
  41856c:	bl	415acc <ferror@plt+0x131fc>
  418570:	add	x20, x25, #0x2
  418574:	cmp	x20, x19
  418578:	b.cs	417ed0 <ferror@plt+0x15600>  // b.hs, b.nlast
  41857c:	mov	x25, x20
  418580:	ldrb	w0, [x25]
  418584:	cmp	w0, #0x5c
  418588:	b.eq	417fe0 <ferror@plt+0x15710>  // b.none
  41858c:	add	x25, x25, #0x1
  418590:	cmp	x19, x25
  418594:	b.ne	418580 <ferror@plt+0x15cb0>  // b.any
  418598:	mov	x25, x19
  41859c:	ldr	x0, [sp, #136]
  4185a0:	cbz	x0, 4185c0 <ferror@plt+0x15cf0>
  4185a4:	add	x3, sp, #0x168
  4185a8:	sub	x2, x25, x20
  4185ac:	mov	x1, x20
  4185b0:	mov	x0, x24
  4185b4:	blr	x23
  4185b8:	and	w0, w0, #0xff
  4185bc:	cbz	w0, 4187c4 <ferror@plt+0x15ef4>
  4185c0:	cbz	x21, 418854 <ferror@plt+0x15f84>
  4185c4:	adrp	x0, 414000 <ferror@plt+0x11730>
  4185c8:	add	x0, x0, #0xfcc
  4185cc:	cmp	x23, x0
  4185d0:	b.ne	418018 <ferror@plt+0x15748>  // b.any
  4185d4:	mov	x2, x21
  4185d8:	sub	w1, w25, w20
  4185dc:	ldr	x0, [sp, #104]
  4185e0:	bl	415f80 <ferror@plt+0x136b0>
  4185e4:	cmp	x19, x25
  4185e8:	b.ls	417ed0 <ferror@plt+0x15600>  // b.plast
  4185ec:	add	x26, x25, #0x1
  4185f0:	str	x23, [sp, #336]
  4185f4:	str	x24, [sp, #344]
  4185f8:	ldp	x0, x1, [sp, #336]
  4185fc:	add	x2, sp, #0x200
  418600:	stp	x0, x1, [x2, #-232]
  418604:	ldr	x0, [sp, #352]
  418608:	str	x0, [sp, #296]
  41860c:	mov	x0, x21
  418610:	bl	415f58 <ferror@plt+0x13688>
  418614:	mov	x22, x0
  418618:	lsr	x0, x0, #32
  41861c:	str	x0, [sp, #120]
  418620:	ldrb	w3, [x25, #1]
  418624:	strb	w3, [sp, #243]
  418628:	sub	w0, w3, #0x22
  41862c:	cmp	w0, #0x59
  418630:	b.hi	4184f8 <ferror@plt+0x15c28>  // b.pmore
  418634:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x15094>
  418638:	add	x1, x1, #0x35c
  41863c:	ldrh	w0, [x1, w0, uxtw #1]
  418640:	adr	x1, 41864c <ferror@plt+0x15d7c>
  418644:	add	x0, x1, w0, sxth #2
  418648:	br	x0
  41864c:	mov	w0, #0xc                   	// #12
  418650:	strb	w0, [sp, #243]
  418654:	b	418530 <ferror@plt+0x15c60>
  418658:	mov	w0, #0xa                   	// #10
  41865c:	strb	w0, [sp, #243]
  418660:	b	418530 <ferror@plt+0x15c60>
  418664:	mov	w0, #0xd                   	// #13
  418668:	strb	w0, [sp, #243]
  41866c:	b	418530 <ferror@plt+0x15c60>
  418670:	mov	w0, #0x9                   	// #9
  418674:	strb	w0, [sp, #243]
  418678:	b	418530 <ferror@plt+0x15c60>
  41867c:	mov	w0, #0xb                   	// #11
  418680:	strb	w0, [sp, #243]
  418684:	b	418530 <ferror@plt+0x15c60>
  418688:	ldr	x0, [sp, #112]
  41868c:	ldrb	w0, [x0, #1138]
  418690:	cbnz	w0, 4186a0 <ferror@plt+0x15dd0>
  418694:	mov	w0, #0x7                   	// #7
  418698:	strb	w0, [sp, #243]
  41869c:	b	418530 <ferror@plt+0x15c60>
  4186a0:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x13094>
  4186a4:	add	x2, x2, #0x1a0
  4186a8:	mov	w1, #0x6                   	// #6
  4186ac:	ldr	x0, [sp, #112]
  4186b0:	bl	41ca74 <ferror@plt+0x1a1a4>
  4186b4:	b	418694 <ferror@plt+0x15dc4>
  4186b8:	ldr	x0, [sp, #112]
  4186bc:	ldrb	w0, [x0, #1154]
  4186c0:	cbnz	w0, 4186d0 <ferror@plt+0x15e00>
  4186c4:	mov	w0, #0x1b                  	// #27
  4186c8:	strb	w0, [sp, #243]
  4186cc:	b	418530 <ferror@plt+0x15c60>
  4186d0:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x13094>
  4186d4:	add	x2, x2, #0x1d8
  4186d8:	mov	w1, #0x2                   	// #2
  4186dc:	ldr	x0, [sp, #112]
  4186e0:	bl	41c9fc <ferror@plt+0x1a12c>
  4186e4:	b	4186c4 <ferror@plt+0x15df4>
  4186e8:	mov	w2, w3
  4186ec:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x13094>
  4186f0:	add	x1, x1, #0x220
  4186f4:	add	x0, sp, #0x130
  4186f8:	bl	402350 <sprintf@plt>
  4186fc:	add	x3, sp, #0x130
  418700:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x13094>
  418704:	add	x2, x2, #0x228
  418708:	mov	w1, #0x2                   	// #2
  41870c:	ldr	x0, [sp, #112]
  418710:	bl	41c9fc <ferror@plt+0x1a12c>
  418714:	b	418530 <ferror@plt+0x15c60>
  418718:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x13094>
  41871c:	add	x2, x2, #0x248
  418720:	mov	w1, #0x3                   	// #3
  418724:	ldr	x0, [sp, #112]
  418728:	bl	41cf08 <ferror@plt+0x1a638>
  41872c:	b	418550 <ferror@plt+0x15c80>
  418730:	ldr	x0, [sp, #136]
  418734:	cbz	x0, 4187b0 <ferror@plt+0x15ee0>
  418738:	ldp	x25, x26, [sp, #64]
  41873c:	ldp	x27, x28, [sp, #80]
  418740:	str	x23, [sp, #336]
  418744:	str	x24, [sp, #344]
  418748:	ldp	x0, x1, [sp, #336]
  41874c:	stp	x0, x1, [sp, #208]
  418750:	ldr	x0, [sp, #352]
  418754:	str	x0, [sp, #224]
  418758:	add	x3, sp, #0xd0
  41875c:	add	x2, sp, #0x168
  418760:	mov	w1, #0x0                   	// #0
  418764:	ldr	x0, [sp, #112]
  418768:	bl	414eac <ferror@plt+0x125dc>
  41876c:	ldr	x1, [sp, #376]
  418770:	ldr	x0, [sp, #360]
  418774:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  418778:	str	x0, [sp, #360]
  41877c:	ldr	x1, [sp, #136]
  418780:	str	x0, [x1, #8]
  418784:	ldr	x0, [sp, #376]
  418788:	str	w0, [x1]
  41878c:	mov	w0, #0x1                   	// #1
  418790:	cbz	x21, 4187ec <ferror@plt+0x15f1c>
  418794:	mov	x0, x21
  418798:	bl	415f58 <ferror@plt+0x13688>
  41879c:	mov	x1, x0
  4187a0:	ldr	x0, [sp, #104]
  4187a4:	bl	415acc <ferror@plt+0x131fc>
  4187a8:	mov	w0, #0x1                   	// #1
  4187ac:	b	4187ec <ferror@plt+0x15f1c>
  4187b0:	ldp	x25, x26, [sp, #64]
  4187b4:	ldp	x27, x28, [sp, #80]
  4187b8:	b	41878c <ferror@plt+0x15ebc>
  4187bc:	mov	x21, #0x0                   	// #0
  4187c0:	b	418740 <ferror@plt+0x15e70>
  4187c4:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  4187c8:	add	x2, x2, #0xda0
  4187cc:	mov	w1, #0x3                   	// #3
  4187d0:	ldr	x0, [sp, #112]
  4187d4:	bl	41cf08 <ferror@plt+0x1a638>
  4187d8:	ldr	x0, [sp, #360]
  4187dc:	bl	402690 <free@plt>
  4187e0:	mov	w0, #0x0                   	// #0
  4187e4:	ldp	x25, x26, [sp, #64]
  4187e8:	ldp	x27, x28, [sp, #80]
  4187ec:	ldp	x19, x20, [sp, #16]
  4187f0:	ldp	x21, x22, [sp, #32]
  4187f4:	ldp	x23, x24, [sp, #48]
  4187f8:	ldp	x29, x30, [sp], #384
  4187fc:	ret
  418800:	add	x20, x26, #0x1
  418804:	b	417e58 <ferror@plt+0x15588>
  418808:	bl	402810 <__errno_location@plt>
  41880c:	mov	w1, #0x7                   	// #7
  418810:	str	w1, [x0]
  418814:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  418818:	add	x2, x2, #0xe08
  41881c:	mov	w1, #0x3                   	// #3
  418820:	ldr	x0, [sp, #112]
  418824:	bl	41cf08 <ferror@plt+0x1a638>
  418828:	b	418118 <ferror@plt+0x15848>
  41882c:	add	x26, x20, #0x4
  418830:	b	418890 <ferror@plt+0x15fc0>
  418834:	add	x19, x20, #0x2
  418838:	mov	x0, x21
  41883c:	bl	415f58 <ferror@plt+0x13688>
  418840:	ldrb	w0, [x20, #2]
  418844:	cmp	w0, #0x52
  418848:	b.eq	41882c <ferror@plt+0x15f5c>  // b.none
  41884c:	mov	x20, x19
  418850:	b	417f3c <ferror@plt+0x1566c>
  418854:	cmp	x19, x25
  418858:	b.ls	417ed0 <ferror@plt+0x15600>  // b.plast
  41885c:	add	x26, x25, #0x1
  418860:	str	x23, [sp, #336]
  418864:	str	x24, [sp, #344]
  418868:	ldp	x0, x1, [sp, #336]
  41886c:	add	x2, sp, #0x200
  418870:	stp	x0, x1, [x2, #-232]
  418874:	ldr	x0, [sp, #352]
  418878:	str	x0, [sp, #296]
  41887c:	b	418620 <ferror@plt+0x15d50>
  418880:	add	x26, x20, #0x3
  418884:	mov	x20, x19
  418888:	b	417e18 <ferror@plt+0x15548>
  41888c:	add	x26, x20, #0x3
  418890:	mov	x0, x21
  418894:	bl	415f58 <ferror@plt+0x13688>
  418898:	mov	x0, x21
  41889c:	bl	415f58 <ferror@plt+0x13688>
  4188a0:	ldrb	w0, [x26]
  4188a4:	cmp	w0, #0x28
  4188a8:	b.eq	418800 <ferror@plt+0x15f30>  // b.none
  4188ac:	mov	x19, x26
  4188b0:	b	417e38 <ferror@plt+0x15568>
  4188b4:	ldr	x0, [sp, #184]
  4188b8:	cbnz	x0, 417d58 <ferror@plt+0x15488>
  4188bc:	mov	w0, #0x1                   	// #1
  4188c0:	b	4187ec <ferror@plt+0x15f1c>
  4188c4:	ldp	x25, x26, [sp, #64]
  4188c8:	ldp	x27, x28, [sp, #80]
  4188cc:	b	4187ec <ferror@plt+0x15f1c>
  4188d0:	stp	x29, x30, [sp, #-16]!
  4188d4:	mov	x29, sp
  4188d8:	mov	x6, #0x0                   	// #0
  4188dc:	mov	x5, #0x0                   	// #0
  4188e0:	bl	417cc4 <ferror@plt+0x153f4>
  4188e4:	ldp	x29, x30, [sp], #16
  4188e8:	ret
  4188ec:	stp	x29, x30, [sp, #-64]!
  4188f0:	mov	x29, sp
  4188f4:	str	x19, [sp, #16]
  4188f8:	add	x19, x0, #0x208
  4188fc:	ldp	x6, x7, [x19]
  418900:	stp	x6, x7, [sp, #40]
  418904:	ldr	x5, [x0, #536]
  418908:	str	x5, [sp, #56]
  41890c:	adrp	x5, 414000 <ferror@plt+0x11730>
  418910:	add	x5, x5, #0xfcc
  418914:	str	x5, [x0, #520]
  418918:	mov	x5, #0xffffffffffffffff    	// #-1
  41891c:	str	x5, [x0, #528]
  418920:	ldr	x5, [x0, #1216]
  418924:	str	w5, [x0, #536]
  418928:	mov	w4, #0x3e                  	// #62
  41892c:	bl	4188d0 <ferror@plt+0x16000>
  418930:	ldp	x2, x3, [sp, #40]
  418934:	stp	x2, x3, [x19]
  418938:	ldr	x1, [sp, #56]
  41893c:	str	x1, [x19, #16]
  418940:	ldr	x19, [sp, #16]
  418944:	ldp	x29, x30, [sp], #64
  418948:	ret
  41894c:	stp	x29, x30, [sp, #-144]!
  418950:	mov	x29, sp
  418954:	stp	x19, x20, [sp, #16]
  418958:	stp	x21, x22, [sp, #32]
  41895c:	stp	x23, x24, [sp, #48]
  418960:	mov	x21, x0
  418964:	mov	x20, x1
  418968:	mov	x22, x2
  41896c:	mov	x23, x3
  418970:	str	wzr, [sp, #104]
  418974:	str	xzr, [sp, #112]
  418978:	ldrb	w4, [x1, #4]
  41897c:	and	w19, w4, #0xfffffffb
  418980:	and	w19, w19, #0xff
  418984:	cmp	w19, #0x38
  418988:	cset	w1, ne  // ne = any
  41898c:	cmp	w4, #0x3c
  418990:	cset	w0, eq  // eq = none
  418994:	ldr	w2, [x20, #8]
  418998:	add	w1, w1, #0x2
  41899c:	add	w0, w1, w0, lsl #1
  4189a0:	cmp	x2, w0, sxtw
  4189a4:	b.eq	418a48 <ferror@plt+0x16178>  // b.none
  4189a8:	add	x3, sp, #0x68
  4189ac:	mov	x2, #0x1                   	// #1
  4189b0:	add	x1, x20, #0x8
  4189b4:	mov	x0, x21
  4189b8:	bl	4188d0 <ferror@plt+0x16000>
  4189bc:	and	w0, w0, #0xff
  4189c0:	cbz	w0, 418a6c <ferror@plt+0x1619c>
  4189c4:	stp	x25, x26, [sp, #64]
  4189c8:	cmp	w19, #0x38
  4189cc:	b.eq	418b78 <ferror@plt+0x162a8>  // b.none
  4189d0:	str	x27, [sp, #80]
  4189d4:	ldrb	w25, [x20, #4]
  4189d8:	ldr	w19, [sp, #104]
  4189dc:	ldr	x27, [sp, #112]
  4189e0:	ldrb	w26, [x21, #1242]
  4189e4:	add	x8, sp, #0x78
  4189e8:	mov	w1, w25
  4189ec:	mov	x0, x21
  4189f0:	bl	4149c0 <ferror@plt+0x120f0>
  4189f4:	ldrsw	x24, [sp, #136]
  4189f8:	ldr	x2, [x21, #1216]
  4189fc:	cmp	x2, #0x20
  418a00:	mov	x3, #0x20                  	// #32
  418a04:	csel	x0, x2, x3, ls  // ls = plast
  418a08:	mov	x3, #0x1                   	// #1
  418a0c:	lsl	x3, x3, x0
  418a10:	sub	x3, x3, #0x1
  418a14:	udiv	x5, x24, x2
  418a18:	mov	w6, w19
  418a1c:	lsl	x7, x5, #1
  418a20:	sub	x1, x6, x7
  418a24:	cmp	x24, x2
  418a28:	b.cc	418aa8 <ferror@plt+0x161d8>  // b.lo, b.ul, b.last
  418a2c:	mov	w19, #0x0                   	// #0
  418a30:	mov	x0, #0x0                   	// #0
  418a34:	add	x4, x5, x1
  418a38:	sub	x4, x4, #0x1
  418a3c:	add	x4, x27, x4
  418a40:	add	x27, x27, x1
  418a44:	b	418a9c <ferror@plt+0x161cc>
  418a48:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x13094>
  418a4c:	add	x2, x2, #0x280
  418a50:	mov	w1, #0x3                   	// #3
  418a54:	mov	x0, x21
  418a58:	bl	41c9fc <ferror@plt+0x1a12c>
  418a5c:	str	wzr, [x22]
  418a60:	str	wzr, [x23]
  418a64:	mov	w19, #0x0                   	// #0
  418a68:	b	418b3c <ferror@plt+0x1626c>
  418a6c:	str	wzr, [x22]
  418a70:	str	wzr, [x23]
  418a74:	mov	w19, #0x0                   	// #0
  418a78:	b	418b3c <ferror@plt+0x1626c>
  418a7c:	neg	x1, x0
  418a80:	ldrb	w1, [x4, x1]
  418a84:	lsl	w19, w19, w2
  418a88:	and	w1, w1, w3
  418a8c:	orr	w19, w1, w19
  418a90:	add	x0, x0, #0x1
  418a94:	cmp	x5, x0
  418a98:	b.ls	418aac <ferror@plt+0x161dc>  // b.plast
  418a9c:	cbz	w26, 418a7c <ferror@plt+0x161ac>
  418aa0:	ldrb	w1, [x27, x0]
  418aa4:	b	418a84 <ferror@plt+0x161b4>
  418aa8:	mov	w19, #0x0                   	// #0
  418aac:	cmp	x6, x7
  418ab0:	b.hi	418b54 <ferror@plt+0x16284>  // b.pmore
  418ab4:	cmp	x24, #0x1f
  418ab8:	b.hi	418b00 <ferror@plt+0x16230>  // b.pmore
  418abc:	cmp	x24, #0x20
  418ac0:	mov	x0, #0x20                  	// #32
  418ac4:	csel	x1, x24, x0, ls  // ls = plast
  418ac8:	mov	x0, #0x1                   	// #1
  418acc:	lsl	x0, x0, x1
  418ad0:	sub	w1, w25, #0x3a
  418ad4:	cmp	w1, #0x1
  418ad8:	b.ls	418af8 <ferror@plt+0x16228>  // b.plast
  418adc:	ldrb	w1, [x21, #1241]
  418ae0:	cbnz	w1, 418af8 <ferror@plt+0x16228>
  418ae4:	sub	w24, w24, #0x1
  418ae8:	mov	w1, #0x1                   	// #1
  418aec:	lsl	w24, w1, w24
  418af0:	tst	w24, w19
  418af4:	b.ne	418b6c <ferror@plt+0x1629c>  // b.any
  418af8:	sub	x0, x0, #0x1
  418afc:	and	w19, w19, w0
  418b00:	sub	w25, w25, #0x3a
  418b04:	mov	w0, #0x1                   	// #1
  418b08:	cmp	w25, w0
  418b0c:	b.ls	418b14 <ferror@plt+0x16244>  // b.plast
  418b10:	ldrb	w0, [x21, #1241]
  418b14:	str	w0, [x23]
  418b18:	mov	w0, #0x1                   	// #1
  418b1c:	str	w0, [x22]
  418b20:	ldr	x27, [sp, #80]
  418b24:	ldr	x0, [sp, #112]
  418b28:	ldr	x1, [x20, #16]
  418b2c:	cmp	x0, x1
  418b30:	b.eq	418ca0 <ferror@plt+0x163d0>  // b.none
  418b34:	bl	402690 <free@plt>
  418b38:	ldp	x25, x26, [sp, #64]
  418b3c:	mov	w0, w19
  418b40:	ldp	x19, x20, [sp, #16]
  418b44:	ldp	x21, x22, [sp, #32]
  418b48:	ldp	x23, x24, [sp, #48]
  418b4c:	ldp	x29, x30, [sp], #144
  418b50:	ret
  418b54:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x13094>
  418b58:	add	x2, x2, #0x2a0
  418b5c:	mov	w1, #0x0                   	// #0
  418b60:	mov	x0, x21
  418b64:	bl	41c9fc <ferror@plt+0x1a12c>
  418b68:	b	418ab4 <ferror@plt+0x161e4>
  418b6c:	neg	x0, x0
  418b70:	orr	w19, w19, w0
  418b74:	b	418b10 <ferror@plt+0x16240>
  418b78:	ldr	x3, [sp, #112]
  418b7c:	ldr	x24, [x21, #1216]
  418b80:	ldr	x26, [x21, #1224]
  418b84:	udiv	x26, x26, x24
  418b88:	cmp	x24, #0x20
  418b8c:	mov	x2, #0x20                  	// #32
  418b90:	csel	x0, x24, x2, ls  // ls = plast
  418b94:	mov	x2, #0x1                   	// #1
  418b98:	lsl	x2, x2, x0
  418b9c:	sub	x2, x2, #0x1
  418ba0:	ldr	w25, [sp, #104]
  418ba4:	sub	w25, w25, #0x1
  418ba8:	cbz	x25, 418c98 <ferror@plt+0x163c8>
  418bac:	mov	w19, #0x0                   	// #0
  418bb0:	mov	x1, #0x0                   	// #0
  418bb4:	ldrb	w0, [x3, x1]
  418bb8:	and	w0, w0, w2
  418bbc:	lsl	w19, w19, w24
  418bc0:	orr	w19, w0, w19
  418bc4:	cmp	x24, #0x20
  418bc8:	csel	w19, w19, w0, cc  // cc = lo, ul, last
  418bcc:	add	x1, x1, #0x1
  418bd0:	cmp	x1, x25
  418bd4:	b.ne	418bb4 <ferror@plt+0x162e4>  // b.any
  418bd8:	cmp	x26, x25
  418bdc:	b.cc	418c30 <ferror@plt+0x16360>  // b.lo, b.ul, b.last
  418be0:	cmp	x25, #0x1
  418be4:	b.ls	418c50 <ferror@plt+0x16380>  // b.plast
  418be8:	ldrb	w0, [x21, #1137]
  418bec:	cbnz	w0, 418c80 <ferror@plt+0x163b0>
  418bf0:	ldr	x0, [x21, #1224]
  418bf4:	mov	w1, #0x0                   	// #0
  418bf8:	cmp	x0, #0x1f
  418bfc:	b.hi	418c74 <ferror@plt+0x163a4>  // b.pmore
  418c00:	mov	w2, w0
  418c04:	mov	w24, #0x1                   	// #1
  418c08:	lsl	w24, w24, w0
  418c0c:	mov	w1, #0x0                   	// #0
  418c10:	sub	w2, w2, #0x1
  418c14:	mov	w0, #0x1                   	// #1
  418c18:	lsl	w2, w0, w2
  418c1c:	tst	w2, w19
  418c20:	b.eq	418c6c <ferror@plt+0x1639c>  // b.none
  418c24:	neg	w24, w24
  418c28:	orr	w19, w19, w24
  418c2c:	b	418c74 <ferror@plt+0x163a4>
  418c30:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x13094>
  418c34:	add	x2, x2, #0x2a0
  418c38:	mov	w1, #0x0                   	// #0
  418c3c:	mov	x0, x21
  418c40:	bl	41c9fc <ferror@plt+0x1a12c>
  418c44:	mov	x25, x26
  418c48:	cmp	x26, #0x1
  418c4c:	b.hi	418bf0 <ferror@plt+0x16320>  // b.pmore
  418c50:	ldrb	w1, [x21, #1240]
  418c54:	cmp	x24, #0x1f
  418c58:	b.hi	418c74 <ferror@plt+0x163a4>  // b.pmore
  418c5c:	mov	w2, w24
  418c60:	mov	w0, #0x1                   	// #1
  418c64:	lsl	w24, w0, w24
  418c68:	cbz	w1, 418c10 <ferror@plt+0x16340>
  418c6c:	sub	w24, w24, #0x1
  418c70:	and	w19, w19, w24
  418c74:	str	w25, [x22]
  418c78:	str	w1, [x23]
  418c7c:	b	418b24 <ferror@plt+0x16254>
  418c80:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x13094>
  418c84:	add	x2, x2, #0x2d0
  418c88:	mov	w1, #0x5                   	// #5
  418c8c:	mov	x0, x21
  418c90:	bl	41ca74 <ferror@plt+0x1a1a4>
  418c94:	b	418bf0 <ferror@plt+0x16320>
  418c98:	mov	w19, #0x0                   	// #0
  418c9c:	b	418c50 <ferror@plt+0x16380>
  418ca0:	ldp	x25, x26, [sp, #64]
  418ca4:	b	418b3c <ferror@plt+0x1626c>
  418ca8:	stp	x29, x30, [sp, #-112]!
  418cac:	mov	x29, sp
  418cb0:	stp	x19, x20, [sp, #16]
  418cb4:	stp	x21, x22, [sp, #32]
  418cb8:	stp	x23, x24, [sp, #48]
  418cbc:	mov	x20, x0
  418cc0:	mov	x21, x1
  418cc4:	mov	x23, x2
  418cc8:	mov	x22, x3
  418ccc:	mov	x24, x4
  418cd0:	mov	w19, w5
  418cd4:	add	x8, sp, #0x58
  418cd8:	mov	w1, w5
  418cdc:	bl	4149c0 <ferror@plt+0x120f0>
  418ce0:	adrp	x5, 414000 <ferror@plt+0x11730>
  418ce4:	add	x5, x5, #0xfcc
  418ce8:	ldr	x6, [sp, #88]
  418cec:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x13094>
  418cf0:	add	x0, x0, #0x2f8
  418cf4:	cmp	x6, x5
  418cf8:	b.eq	418d10 <ferror@plt+0x16440>  // b.none
  418cfc:	ldp	x19, x20, [sp, #16]
  418d00:	ldp	x21, x22, [sp, #32]
  418d04:	ldp	x23, x24, [sp, #48]
  418d08:	ldp	x29, x30, [sp], #112
  418d0c:	ret
  418d10:	str	x25, [sp, #64]
  418d14:	ldr	x25, [x20, #1000]
  418d18:	adrp	x0, 414000 <ferror@plt+0x11730>
  418d1c:	add	x0, x0, #0xa80
  418d20:	str	x0, [x20, #1000]
  418d24:	mov	x6, x24
  418d28:	mov	x5, x23
  418d2c:	mov	w4, w19
  418d30:	mov	x3, #0x0                   	// #0
  418d34:	mov	x2, x22
  418d38:	mov	x1, x21
  418d3c:	mov	x0, x20
  418d40:	bl	417cc4 <ferror@plt+0x153f4>
  418d44:	ands	w1, w0, #0xff
  418d48:	str	x25, [x20, #1000]
  418d4c:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x13094>
  418d50:	add	x0, x0, #0x328
  418d54:	csel	x0, x0, xzr, eq  // eq = none
  418d58:	ldr	x25, [sp, #64]
  418d5c:	b	418cfc <ferror@plt+0x1642c>
  418d60:	ldrb	w0, [x1, #18]
  418d64:	and	w0, w0, #0xfffffffc
  418d68:	strb	w0, [x1, #18]
  418d6c:	str	xzr, [x1, #24]
  418d70:	ldrh	w0, [x1, #18]
  418d74:	ubfx	x2, x0, #2, #8
  418d78:	mov	w3, #0xffffffcd            	// #-51
  418d7c:	and	w2, w2, w3
  418d80:	bfi	w0, w2, #2, #8
  418d84:	strh	w0, [x1, #18]
  418d88:	mov	w0, #0x1                   	// #1
  418d8c:	ret
  418d90:	stp	x29, x30, [sp, #-32]!
  418d94:	mov	x29, sp
  418d98:	stp	x19, x20, [sp, #16]
  418d9c:	mov	w20, #0x0                   	// #0
  418da0:	cbz	x0, 418dd4 <ferror@plt+0x16504>
  418da4:	mov	x19, x0
  418da8:	mov	w20, #0x0                   	// #0
  418dac:	b	418dc8 <ferror@plt+0x164f8>
  418db0:	ldr	x0, [x19, #24]
  418db4:	bl	418d90 <ferror@plt+0x164c0>
  418db8:	add	w20, w20, w0
  418dbc:	add	w20, w20, #0x1
  418dc0:	ldr	x19, [x19]
  418dc4:	cbz	x19, 418dd4 <ferror@plt+0x16504>
  418dc8:	ldrb	w0, [x19, #16]
  418dcc:	cbz	w0, 418dbc <ferror@plt+0x164ec>
  418dd0:	b	418db0 <ferror@plt+0x164e0>
  418dd4:	mov	w0, w20
  418dd8:	ldp	x19, x20, [sp, #16]
  418ddc:	ldp	x29, x30, [sp], #32
  418de0:	ret
  418de4:	stp	x29, x30, [sp, #-32]!
  418de8:	mov	x29, sp
  418dec:	stp	x19, x20, [sp, #16]
  418df0:	mov	x19, x0
  418df4:	and	w20, w1, #0xff
  418df8:	bl	427bcc <ferror@plt+0x252fc>
  418dfc:	ldrb	w1, [x0, #4]
  418e00:	cmp	w1, #0x35
  418e04:	b.eq	418e3c <ferror@plt+0x1656c>  // b.none
  418e08:	ldrh	w2, [x0, #6]
  418e0c:	tbnz	w2, #4, 418eb0 <ferror@plt+0x165e0>
  418e10:	cmp	w1, #0x16
  418e14:	b.eq	418ed4 <ferror@plt+0x16604>  // b.none
  418e18:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x18094>
  418e1c:	add	x2, x2, #0xfa8
  418e20:	mov	w1, #0x3                   	// #3
  418e24:	mov	x0, x19
  418e28:	bl	41c9fc <ferror@plt+0x1a12c>
  418e2c:	mov	x0, #0x0                   	// #0
  418e30:	ldp	x19, x20, [sp, #16]
  418e34:	ldp	x29, x30, [sp], #32
  418e38:	ret
  418e3c:	ldr	x0, [x0, #8]
  418e40:	cbz	w20, 418e68 <ferror@plt+0x16598>
  418e44:	ldr	x1, [x19, #1248]
  418e48:	cmp	x1, x0
  418e4c:	b.eq	418e78 <ferror@plt+0x165a8>  // b.none
  418e50:	ldr	x1, [x19, #1288]
  418e54:	cmp	x1, x0
  418e58:	b.eq	418e94 <ferror@plt+0x165c4>  // b.none
  418e5c:	ldr	x1, [x19, #1296]
  418e60:	cmp	x1, x0
  418e64:	b.eq	418e94 <ferror@plt+0x165c4>  // b.none
  418e68:	ldrh	w1, [x0, #18]
  418e6c:	tst	x1, #0x8
  418e70:	csel	x0, x0, xzr, eq  // eq = none
  418e74:	b	418e30 <ferror@plt+0x16560>
  418e78:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x18094>
  418e7c:	add	x2, x2, #0xed8
  418e80:	mov	w1, #0x3                   	// #3
  418e84:	mov	x0, x19
  418e88:	bl	41c9fc <ferror@plt+0x1a12c>
  418e8c:	mov	x0, #0x0                   	// #0
  418e90:	b	418e30 <ferror@plt+0x16560>
  418e94:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x18094>
  418e98:	add	x2, x2, #0xf08
  418e9c:	mov	w1, #0x3                   	// #3
  418ea0:	mov	x0, x19
  418ea4:	bl	41c9fc <ferror@plt+0x1a12c>
  418ea8:	mov	x0, #0x0                   	// #0
  418eac:	b	418e30 <ferror@plt+0x16560>
  418eb0:	ldr	x0, [x0, #8]
  418eb4:	ldr	x3, [x0]
  418eb8:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x18094>
  418ebc:	add	x2, x2, #0xf40
  418ec0:	mov	w1, #0x3                   	// #3
  418ec4:	mov	x0, x19
  418ec8:	bl	41c9fc <ferror@plt+0x1a12c>
  418ecc:	mov	x0, #0x0                   	// #0
  418ed0:	b	418e30 <ferror@plt+0x16560>
  418ed4:	ldr	x0, [x19, #144]
  418ed8:	ldr	x3, [x0, #8]
  418edc:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x18094>
  418ee0:	add	x2, x2, #0xf80
  418ee4:	mov	w1, #0x3                   	// #3
  418ee8:	mov	x0, x19
  418eec:	bl	41c9fc <ferror@plt+0x1a12c>
  418ef0:	mov	x0, #0x0                   	// #0
  418ef4:	b	418e30 <ferror@plt+0x16560>
  418ef8:	stp	x29, x30, [sp, #-32]!
  418efc:	mov	x29, sp
  418f00:	stp	x19, x20, [sp, #16]
  418f04:	mov	x20, x0
  418f08:	mov	w19, w1
  418f0c:	bl	427bcc <ferror@plt+0x252fc>
  418f10:	mov	x1, x0
  418f14:	ldrb	w2, [x0, #4]
  418f18:	cmp	w2, #0x37
  418f1c:	b.eq	418f38 <ferror@plt+0x16668>  // b.none
  418f20:	mov	w0, #0x0                   	// #0
  418f24:	cmp	w2, #0x16
  418f28:	b.ne	418f44 <ferror@plt+0x16674>  // b.any
  418f2c:	ldp	x19, x20, [sp, #16]
  418f30:	ldp	x29, x30, [sp], #32
  418f34:	ret
  418f38:	ldr	w0, [x0, #8]
  418f3c:	cmp	w0, #0x1
  418f40:	b.eq	418f6c <ferror@plt+0x1669c>  // b.none
  418f44:	mov	x0, x20
  418f48:	bl	427e40 <ferror@plt+0x25570>
  418f4c:	mov	x3, x0
  418f50:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x18094>
  418f54:	add	x2, x2, #0xfc8
  418f58:	mov	w1, #0x3                   	// #3
  418f5c:	mov	x0, x20
  418f60:	bl	41c9fc <ferror@plt+0x1a12c>
  418f64:	mov	w0, #0x0                   	// #0
  418f68:	b	418f2c <ferror@plt+0x1665c>
  418f6c:	ldr	x0, [x1, #16]
  418f70:	ldrb	w2, [x0]
  418f74:	sub	w0, w2, #0x30
  418f78:	cmp	w0, w19
  418f7c:	ccmp	w0, #0x4, #0x2, hi  // hi = pmore
  418f80:	b.hi	418f44 <ferror@plt+0x16674>  // b.pmore
  418f84:	cmp	w0, #0x4
  418f88:	ccmp	w19, #0x3, #0x4, eq  // eq = none
  418f8c:	b.ne	418f44 <ferror@plt+0x16674>  // b.any
  418f90:	cmp	w19, #0x0
  418f94:	ccmp	w0, #0x2, #0x0, ne  // ne = any
  418f98:	b.eq	418f44 <ferror@plt+0x16674>  // b.none
  418f9c:	b	418f2c <ferror@plt+0x1665c>
  418fa0:	stp	x29, x30, [sp, #-32]!
  418fa4:	mov	x29, sp
  418fa8:	str	x19, [sp, #16]
  418fac:	mov	x19, x0
  418fb0:	mov	x0, x19
  418fb4:	bl	42ea88 <ferror@plt+0x2c1b8>
  418fb8:	ldrb	w1, [x0, #4]
  418fbc:	cmp	w1, #0x53
  418fc0:	b.eq	418fb0 <ferror@plt+0x166e0>  // b.none
  418fc4:	ldr	x19, [sp, #16]
  418fc8:	ldp	x29, x30, [sp], #32
  418fcc:	ret
  418fd0:	stp	x29, x30, [sp, #-48]!
  418fd4:	mov	x29, sp
  418fd8:	stp	x19, x20, [sp, #16]
  418fdc:	mov	x20, x0
  418fe0:	bl	418fa0 <ferror@plt+0x166d0>
  418fe4:	mov	x19, x0
  418fe8:	ldrb	w0, [x0, #4]
  418fec:	cmp	w0, #0x16
  418ff0:	b.eq	41906c <ferror@plt+0x1679c>  // b.none
  418ff4:	ldrb	w0, [x19, #4]
  418ff8:	mov	x19, #0x0                   	// #0
  418ffc:	cmp	w0, #0x14
  419000:	b.ne	41905c <ferror@plt+0x1678c>  // b.any
  419004:	mov	x0, x20
  419008:	bl	418fa0 <ferror@plt+0x166d0>
  41900c:	mov	x19, x0
  419010:	ldrb	w0, [x0, #4]
  419014:	cmp	w0, #0x16
  419018:	b.eq	41907c <ferror@plt+0x167ac>  // b.none
  41901c:	ldrb	w0, [x19, #4]
  419020:	sub	w0, w0, #0x3e
  419024:	and	w0, w0, #0xff
  419028:	cmp	w0, #0x4
  41902c:	b.hi	41909c <ferror@plt+0x167cc>  // b.pmore
  419030:	str	x21, [sp, #32]
  419034:	mov	x0, x20
  419038:	bl	418fa0 <ferror@plt+0x166d0>
  41903c:	mov	x21, x0
  419040:	ldrb	w0, [x0, #4]
  419044:	cmp	w0, #0x16
  419048:	b.eq	41908c <ferror@plt+0x167bc>  // b.none
  41904c:	ldrb	w0, [x21, #4]
  419050:	cmp	w0, #0x15
  419054:	csel	x19, x19, xzr, eq  // eq = none
  419058:	ldr	x21, [sp, #32]
  41905c:	mov	x0, x19
  419060:	ldp	x19, x20, [sp, #16]
  419064:	ldp	x29, x30, [sp], #48
  419068:	ret
  41906c:	mov	w1, #0x1                   	// #1
  419070:	mov	x0, x20
  419074:	bl	42b95c <ferror@plt+0x2908c>
  419078:	b	418ff4 <ferror@plt+0x16724>
  41907c:	mov	w1, #0x1                   	// #1
  419080:	mov	x0, x20
  419084:	bl	42b95c <ferror@plt+0x2908c>
  419088:	b	41901c <ferror@plt+0x1674c>
  41908c:	mov	w1, #0x1                   	// #1
  419090:	mov	x0, x20
  419094:	bl	42b95c <ferror@plt+0x2908c>
  419098:	b	41904c <ferror@plt+0x1677c>
  41909c:	mov	x19, #0x0                   	// #0
  4190a0:	b	41905c <ferror@plt+0x1678c>
  4190a4:	stp	x29, x30, [sp, #-32]!
  4190a8:	mov	x29, sp
  4190ac:	stp	x19, x20, [sp, #16]
  4190b0:	mov	x19, x0
  4190b4:	ldr	x0, [x0, #448]
  4190b8:	ldurb	w0, [x0, #-20]
  4190bc:	cmp	w0, #0x16
  4190c0:	b.eq	4190e4 <ferror@plt+0x16814>  // b.none
  4190c4:	and	w1, w1, #0xff
  4190c8:	mov	w20, w2
  4190cc:	cbz	w1, 4190f0 <ferror@plt+0x16820>
  4190d0:	mov	x0, x19
  4190d4:	bl	42ea88 <ferror@plt+0x2c1b8>
  4190d8:	ldrb	w0, [x0, #4]
  4190dc:	cmp	w0, #0x16
  4190e0:	b.ne	4190fc <ferror@plt+0x1682c>  // b.any
  4190e4:	ldp	x19, x20, [sp, #16]
  4190e8:	ldp	x29, x30, [sp], #32
  4190ec:	ret
  4190f0:	mov	x0, x19
  4190f4:	bl	427bcc <ferror@plt+0x252fc>
  4190f8:	b	4190d8 <ferror@plt+0x16808>
  4190fc:	ldr	x0, [x19, #144]
  419100:	ldr	x3, [x0, #8]
  419104:	adrp	x2, 45f000 <_obstack_memory_used@@Base+0x18094>
  419108:	add	x2, x2, #0xff0
  41910c:	mov	w1, w20
  419110:	mov	x0, x19
  419114:	bl	41caf0 <ferror@plt+0x1a220>
  419118:	b	4190e4 <ferror@plt+0x16814>
  41911c:	stp	x29, x30, [sp, #-16]!
  419120:	mov	x29, sp
  419124:	mov	w2, #0x0                   	// #0
  419128:	bl	4190a4 <ferror@plt+0x167d4>
  41912c:	ldp	x29, x30, [sp], #16
  419130:	ret
  419134:	stp	x29, x30, [sp, #-32]!
  419138:	mov	x29, sp
  41913c:	str	x19, [sp, #16]
  419140:	mov	x19, x0
  419144:	bl	42ea88 <ferror@plt+0x2c1b8>
  419148:	ldrb	w1, [x0, #4]
  41914c:	cmp	w1, #0x3e
  419150:	b.ne	419170 <ferror@plt+0x168a0>  // b.any
  419154:	ldr	x3, [x19, #952]
  419158:	cbz	x3, 41918c <ferror@plt+0x168bc>
  41915c:	add	x2, x0, #0x8
  419160:	ldr	w1, [x19, #48]
  419164:	mov	x0, x19
  419168:	blr	x3
  41916c:	b	41918c <ferror@plt+0x168bc>
  419170:	ldr	x0, [x19, #144]
  419174:	ldr	x3, [x0, #8]
  419178:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41917c:	add	x2, x2, #0x18
  419180:	mov	w1, #0x3                   	// #3
  419184:	mov	x0, x19
  419188:	bl	41c9fc <ferror@plt+0x1a12c>
  41918c:	mov	w1, #0x0                   	// #0
  419190:	mov	x0, x19
  419194:	bl	41911c <ferror@plt+0x1684c>
  419198:	ldr	x19, [sp, #16]
  41919c:	ldp	x29, x30, [sp], #32
  4191a0:	ret
  4191a4:	stp	x29, x30, [sp, #-32]!
  4191a8:	mov	x29, sp
  4191ac:	str	x19, [sp, #16]
  4191b0:	mov	x19, x0
  4191b4:	ldr	x0, [x0, #136]
  4191b8:	ldr	x0, [x0, #8]
  4191bc:	cbz	x0, 4191d4 <ferror@plt+0x16904>
  4191c0:	mov	x0, x19
  4191c4:	bl	42b7d8 <ferror@plt+0x28f08>
  4191c8:	ldr	x0, [x19, #136]
  4191cc:	ldr	x0, [x0, #8]
  4191d0:	cbnz	x0, 4191c0 <ferror@plt+0x168f0>
  4191d4:	ldr	x0, [x19, #448]
  4191d8:	ldurb	w0, [x0, #-20]
  4191dc:	cmp	w0, #0x16
  4191e0:	b.eq	4191f8 <ferror@plt+0x16928>  // b.none
  4191e4:	mov	x0, x19
  4191e8:	bl	427bcc <ferror@plt+0x252fc>
  4191ec:	ldrb	w0, [x0, #4]
  4191f0:	cmp	w0, #0x16
  4191f4:	b.ne	4191e4 <ferror@plt+0x16914>  // b.any
  4191f8:	ldr	x19, [sp, #16]
  4191fc:	ldp	x29, x30, [sp], #32
  419200:	ret
  419204:	stp	x29, x30, [sp, #-48]!
  419208:	mov	x29, sp
  41920c:	stp	x19, x20, [sp, #16]
  419210:	str	x21, [sp, #32]
  419214:	mov	x20, x0
  419218:	mov	w0, #0x1                   	// #1
  41921c:	strb	w0, [x20, #23]
  419220:	adrp	x21, 460000 <_obstack_memory_used@@Base+0x19094>
  419224:	add	x21, x21, #0x58
  419228:	b	41927c <ferror@plt+0x169ac>
  41922c:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  419230:	add	x2, x2, #0x30
  419234:	mov	w1, #0x3                   	// #3
  419238:	mov	x0, x20
  41923c:	bl	41c9fc <ferror@plt+0x1a12c>
  419240:	strb	wzr, [x20, #23]
  419244:	ldp	x19, x20, [sp, #16]
  419248:	ldr	x21, [sp, #32]
  41924c:	ldp	x29, x30, [sp], #48
  419250:	ret
  419254:	ldr	x3, [x19]
  419258:	mov	x2, x21
  41925c:	mov	w1, #0x0                   	// #0
  419260:	mov	x0, x20
  419264:	bl	41c9fc <ferror@plt+0x1a12c>
  419268:	mov	x0, x19
  41926c:	bl	42bbec <ferror@plt+0x2931c>
  419270:	ldrh	w1, [x19, #18]
  419274:	orr	w1, w1, #0x18
  419278:	strh	w1, [x19, #18]
  41927c:	mov	x0, x20
  419280:	bl	427bcc <ferror@plt+0x252fc>
  419284:	ldrb	w1, [x0, #4]
  419288:	cmp	w1, #0x16
  41928c:	b.eq	419240 <ferror@plt+0x16970>  // b.none
  419290:	cmp	w1, #0x35
  419294:	b.ne	41922c <ferror@plt+0x1695c>  // b.any
  419298:	ldr	x19, [x0, #8]
  41929c:	ldrh	w1, [x19, #18]
  4192a0:	tbnz	w1, #3, 41927c <ferror@plt+0x169ac>
  4192a4:	ldrb	w0, [x19, #18]
  4192a8:	tbz	w0, #1, 419268 <ferror@plt+0x16998>
  4192ac:	b	419254 <ferror@plt+0x16984>
  4192b0:	stp	x29, x30, [sp, #-32]!
  4192b4:	mov	x29, sp
  4192b8:	stp	x19, x20, [sp, #16]
  4192bc:	mov	x20, x0
  4192c0:	ldr	x0, [x0]
  4192c4:	ldr	x19, [x0, #96]
  4192c8:	cbz	x19, 419310 <ferror@plt+0x16a40>
  4192cc:	ldr	w0, [x19, #28]
  4192d0:	cmp	w0, #0x5
  4192d4:	b.eq	419328 <ferror@plt+0x16a58>  // b.none
  4192d8:	mov	w0, #0x5                   	// #5
  4192dc:	str	w0, [x19, #28]
  4192e0:	ldrb	w0, [x19, #24]
  4192e4:	strb	w0, [x20, #18]
  4192e8:	mov	w0, #0x1                   	// #1
  4192ec:	strb	w0, [x19, #24]
  4192f0:	str	xzr, [x19, #16]
  4192f4:	ldrb	w0, [x19, #25]
  4192f8:	cbnz	w0, 419304 <ferror@plt+0x16a34>
  4192fc:	ldrb	w0, [x20, #1140]
  419300:	cbnz	w0, 41935c <ferror@plt+0x16a8c>
  419304:	ldp	x19, x20, [sp, #16]
  419308:	ldp	x29, x30, [sp], #32
  41930c:	ret
  419310:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  419314:	add	x2, x2, #0x78
  419318:	mov	w1, #0x3                   	// #3
  41931c:	mov	x0, x20
  419320:	bl	41c9fc <ferror@plt+0x1a12c>
  419324:	b	419304 <ferror@plt+0x16a34>
  419328:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41932c:	add	x2, x2, #0x90
  419330:	mov	w1, #0x3                   	// #3
  419334:	mov	x0, x20
  419338:	bl	41c9fc <ferror@plt+0x1a12c>
  41933c:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x19094>
  419340:	add	x4, x4, #0xa8
  419344:	mov	w3, #0x0                   	// #0
  419348:	ldr	w2, [x19, #8]
  41934c:	mov	w1, #0x3                   	// #3
  419350:	mov	x0, x20
  419354:	bl	41cbe8 <ferror@plt+0x1a318>
  419358:	b	4192d8 <ferror@plt+0x16a08>
  41935c:	mov	w2, #0x8                   	// #8
  419360:	mov	w1, #0x0                   	// #0
  419364:	mov	x0, x20
  419368:	bl	4190a4 <ferror@plt+0x167d4>
  41936c:	b	419304 <ferror@plt+0x16a34>
  419370:	stp	x29, x30, [sp, #-80]!
  419374:	mov	x29, sp
  419378:	stp	x19, x20, [sp, #16]
  41937c:	stp	x21, x22, [sp, #32]
  419380:	stp	x23, x24, [sp, #48]
  419384:	stp	x25, x26, [sp, #64]
  419388:	mov	x19, x0
  41938c:	mov	w20, w1
  419390:	mov	x23, x2
  419394:	ldrb	w2, [x0, #24]
  419398:	add	w2, w2, #0x1
  41939c:	strb	w2, [x0, #24]
  4193a0:	str	xzr, [x23]
  4193a4:	bl	42ea88 <ferror@plt+0x2c1b8>
  4193a8:	mov	x22, x0
  4193ac:	ldrb	w0, [x0, #4]
  4193b0:	cmp	w0, #0x16
  4193b4:	b.eq	419410 <ferror@plt+0x16b40>  // b.none
  4193b8:	cmp	w0, #0x35
  4193bc:	b.ne	41942c <ferror@plt+0x16b5c>  // b.any
  4193c0:	ldr	w21, [x22]
  4193c4:	mov	x0, x19
  4193c8:	bl	42ea88 <ferror@plt+0x2c1b8>
  4193cc:	ldrb	w0, [x0, #4]
  4193d0:	cmp	w0, #0x14
  4193d4:	b.eq	419484 <ferror@plt+0x16bb4>  // b.none
  4193d8:	cmp	w20, #0x4
  4193dc:	b.eq	419474 <ferror@plt+0x16ba4>  // b.none
  4193e0:	cmp	w20, #0x11
  4193e4:	ccmp	w0, #0x16, #0x0, eq  // eq = none
  4193e8:	b.eq	419590 <ferror@plt+0x16cc0>  // b.none
  4193ec:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x19094>
  4193f0:	add	x4, x4, #0x108
  4193f4:	mov	w3, #0x0                   	// #0
  4193f8:	mov	w2, w21
  4193fc:	mov	w1, #0x3                   	// #3
  419400:	mov	x0, x19
  419404:	bl	41cbe8 <ferror@plt+0x1a318>
  419408:	mov	x0, #0x0                   	// #0
  41940c:	b	41944c <ferror@plt+0x16b7c>
  419410:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  419414:	add	x2, x2, #0xc8
  419418:	mov	w1, #0x3                   	// #3
  41941c:	mov	x0, x19
  419420:	bl	41c9fc <ferror@plt+0x1a12c>
  419424:	mov	x0, #0x0                   	// #0
  419428:	b	41944c <ferror@plt+0x16b7c>
  41942c:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x19094>
  419430:	add	x4, x4, #0xe8
  419434:	mov	w3, #0x0                   	// #0
  419438:	ldr	w2, [x22]
  41943c:	mov	w1, #0x3                   	// #3
  419440:	mov	x0, x19
  419444:	bl	41cbe8 <ferror@plt+0x1a318>
  419448:	mov	x0, #0x0                   	// #0
  41944c:	ldrb	w1, [x19, #24]
  419450:	sub	w1, w1, #0x1
  419454:	strb	w1, [x19, #24]
  419458:	mov	sp, x29
  41945c:	ldp	x19, x20, [sp, #16]
  419460:	ldp	x21, x22, [sp, #32]
  419464:	ldp	x23, x24, [sp, #48]
  419468:	ldp	x25, x26, [sp, #64]
  41946c:	ldp	x29, x30, [sp], #80
  419470:	ret
  419474:	mov	w1, #0x1                   	// #1
  419478:	mov	x0, x19
  41947c:	bl	42b95c <ferror@plt+0x2908c>
  419480:	b	419590 <ferror@plt+0x16cc0>
  419484:	ldr	x1, [x19, #56]
  419488:	ldr	x0, [x1, #24]
  41948c:	ldr	x1, [x1, #16]
  419490:	sub	x0, x0, x1
  419494:	cmp	x0, #0x2f
  419498:	b.ls	4194c8 <ferror@plt+0x16bf8>  // b.plast
  41949c:	ldr	x0, [x19, #56]
  4194a0:	ldr	x2, [x0, #16]
  4194a4:	mov	w1, #0x1                   	// #1
  4194a8:	mov	x0, x19
  4194ac:	bl	42bd78 <ferror@plt+0x294a8>
  4194b0:	mov	x26, x0
  4194b4:	str	xzr, [x0]
  4194b8:	mov	w20, #0x0                   	// #0
  4194bc:	add	x25, x19, #0x38
  4194c0:	mov	x24, #0x18                  	// #24
  4194c4:	b	41952c <ferror@plt+0x16c5c>
  4194c8:	mov	x2, #0x30                  	// #48
  4194cc:	add	x1, x19, #0x38
  4194d0:	mov	x0, x19
  4194d4:	bl	42539c <ferror@plt+0x22acc>
  4194d8:	b	41949c <ferror@plt+0x16bcc>
  4194dc:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  4194e0:	add	x2, x2, #0x128
  4194e4:	mov	w1, #0x3                   	// #3
  4194e8:	mov	x0, x19
  4194ec:	bl	41c9fc <ferror@plt+0x1a12c>
  4194f0:	b	419408 <ferror@plt+0x16b38>
  4194f4:	mov	x2, x24
  4194f8:	mov	x1, x25
  4194fc:	mov	x0, x19
  419500:	bl	42539c <ferror@plt+0x22acc>
  419504:	ldr	x0, [x19, #56]
  419508:	ldr	x26, [x0, #16]
  41950c:	ubfiz	x1, x20, #1, #32
  419510:	add	x1, x1, w20, uxtw
  419514:	add	x1, x26, x1, lsl #3
  419518:	ldp	x2, x3, [x21]
  41951c:	stp	x2, x3, [x1, #24]
  419520:	ldr	x0, [x21, #16]
  419524:	str	x0, [x1, #40]
  419528:	add	w20, w20, #0x1
  41952c:	mov	x0, x19
  419530:	bl	42ea88 <ferror@plt+0x2c1b8>
  419534:	mov	x21, x0
  419538:	ldrb	w0, [x0, #4]
  41953c:	cmp	w0, #0x15
  419540:	b.eq	419578 <ferror@plt+0x16ca8>  // b.none
  419544:	cmp	w0, #0x16
  419548:	b.eq	4194dc <ferror@plt+0x16c0c>  // b.none
  41954c:	ldr	x1, [x19, #56]
  419550:	ldr	x0, [x1, #24]
  419554:	ldr	x1, [x1, #16]
  419558:	sub	x0, x0, x1
  41955c:	ubfiz	x1, x20, #1, #32
  419560:	add	x1, x1, w20, uxtw
  419564:	lsl	x1, x1, #3
  419568:	add	x1, x1, #0x48
  41956c:	cmp	x0, x1
  419570:	b.cs	419504 <ferror@plt+0x16c34>  // b.hs, b.nlast
  419574:	b	4194f4 <ferror@plt+0x16c24>
  419578:	cbz	w20, 4195e0 <ferror@plt+0x16d10>
  41957c:	ldrh	w0, [x26, #30]
  419580:	and	w0, w0, #0xfffffffe
  419584:	strh	w0, [x26, #30]
  419588:	str	w20, [x26, #12]
  41958c:	str	x26, [x23]
  419590:	ldr	x0, [x22, #8]
  419594:	ldr	w2, [x0, #8]
  419598:	add	w21, w2, #0x1
  41959c:	add	w0, w2, #0x1
  4195a0:	add	x0, x0, #0xf
  4195a4:	and	x0, x0, #0x1fffffff0
  4195a8:	sub	sp, sp, x0
  4195ac:	mov	x20, sp
  4195b0:	mov	x0, x20
  4195b4:	mov	w1, #0x23                  	// #35
  4195b8:	strb	w1, [x0], #1
  4195bc:	ldr	x1, [x22, #8]
  4195c0:	mov	w2, w2
  4195c4:	ldr	x1, [x1]
  4195c8:	bl	402260 <memcpy@plt>
  4195cc:	mov	w2, w21
  4195d0:	mov	x1, x20
  4195d4:	mov	x0, x19
  4195d8:	bl	4232a0 <ferror@plt+0x209d0>
  4195dc:	b	41944c <ferror@plt+0x16b7c>
  4195e0:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  4195e4:	add	x2, x2, #0x148
  4195e8:	mov	w1, #0x3                   	// #3
  4195ec:	mov	x0, x19
  4195f0:	bl	41c9fc <ferror@plt+0x1a12c>
  4195f4:	b	419408 <ferror@plt+0x16b38>
  4195f8:	stp	x29, x30, [sp, #-48]!
  4195fc:	mov	x29, sp
  419600:	stp	x19, x20, [sp, #16]
  419604:	stp	x21, x22, [sp, #32]
  419608:	mov	x22, x1
  41960c:	add	x21, x0, #0x18
  419610:	ldr	x19, [x0, #24]
  419614:	cbnz	x19, 419644 <ferror@plt+0x16d74>
  419618:	mov	x0, x21
  41961c:	ldp	x19, x20, [sp, #16]
  419620:	ldp	x21, x22, [sp, #32]
  419624:	ldp	x29, x30, [sp], #48
  419628:	ret
  41962c:	ldr	w0, [x19, #12]
  419630:	cmp	w0, w20
  419634:	b.eq	419618 <ferror@plt+0x16d48>  // b.none
  419638:	ldr	x21, [x21]
  41963c:	ldr	x19, [x21]
  419640:	cbz	x19, 419618 <ferror@plt+0x16d48>
  419644:	ldr	w0, [x19, #12]
  419648:	ldr	w1, [x22, #12]
  41964c:	cmp	w0, w1
  419650:	b.ne	419638 <ferror@plt+0x16d68>  // b.any
  419654:	cbz	w0, 419618 <ferror@plt+0x16d48>
  419658:	mov	w20, #0x0                   	// #0
  41965c:	mov	w0, w20
  419660:	add	x0, x0, #0x1
  419664:	add	x0, x0, x0, lsl #1
  419668:	lsl	x0, x0, #3
  41966c:	add	x1, x22, x0
  419670:	add	x0, x19, x0
  419674:	bl	424b38 <ferror@plt+0x22268>
  419678:	cbz	w0, 41962c <ferror@plt+0x16d5c>
  41967c:	add	w20, w20, #0x1
  419680:	ldr	w0, [x19, #12]
  419684:	cmp	w0, w20
  419688:	b.hi	41965c <ferror@plt+0x16d8c>  // b.pmore
  41968c:	b	41962c <ferror@plt+0x16d5c>
  419690:	stp	x29, x30, [sp, #-48]!
  419694:	mov	x29, sp
  419698:	str	x19, [sp, #16]
  41969c:	mov	x19, x0
  4196a0:	add	x2, sp, #0x28
  4196a4:	mov	w1, #0x11                  	// #17
  4196a8:	bl	419370 <ferror@plt+0x16aa0>
  4196ac:	cbz	x0, 4196d8 <ferror@plt+0x16e08>
  4196b0:	ldr	x1, [sp, #40]
  4196b4:	cbz	x1, 4196e4 <ferror@plt+0x16e14>
  4196b8:	bl	4195f8 <ferror@plt+0x16d28>
  4196bc:	ldr	x1, [x0]
  4196c0:	cbz	x1, 4196cc <ferror@plt+0x16dfc>
  4196c4:	ldr	x1, [x1]
  4196c8:	str	x1, [x0]
  4196cc:	mov	w1, #0x0                   	// #0
  4196d0:	mov	x0, x19
  4196d4:	bl	41911c <ferror@plt+0x1684c>
  4196d8:	ldr	x19, [sp, #16]
  4196dc:	ldp	x29, x30, [sp], #48
  4196e0:	ret
  4196e4:	bl	42bbec <ferror@plt+0x2931c>
  4196e8:	b	4196d8 <ferror@plt+0x16e08>
  4196ec:	stp	x29, x30, [sp, #-48]!
  4196f0:	mov	x29, sp
  4196f4:	stp	x19, x20, [sp, #16]
  4196f8:	mov	x20, x0
  4196fc:	add	x2, sp, #0x28
  419700:	mov	w1, #0x10                  	// #16
  419704:	bl	419370 <ferror@plt+0x16aa0>
  419708:	cbz	x0, 41973c <ferror@plt+0x16e6c>
  41970c:	mov	x19, x0
  419710:	ldr	x1, [sp, #40]
  419714:	bl	4195f8 <ferror@plt+0x16d28>
  419718:	ldr	x0, [x0]
  41971c:	cbz	x0, 419748 <ferror@plt+0x16e78>
  419720:	ldr	x3, [x19]
  419724:	add	x3, x3, #0x1
  419728:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41972c:	add	x2, x2, #0x168
  419730:	mov	w1, #0x0                   	// #0
  419734:	mov	x0, x20
  419738:	bl	41c9fc <ferror@plt+0x1a12c>
  41973c:	ldp	x19, x20, [sp, #16]
  419740:	ldp	x29, x30, [sp], #48
  419744:	ret
  419748:	ldr	x0, [sp, #40]
  41974c:	ldr	w1, [x0, #12]
  419750:	add	x1, x1, #0x1
  419754:	add	x1, x1, x1, lsl #1
  419758:	lsl	x1, x1, #3
  41975c:	mov	x0, x20
  419760:	bl	427f00 <ferror@plt+0x25630>
  419764:	str	x0, [sp, #40]
  419768:	ldr	x1, [x19, #24]
  41976c:	str	x1, [x0]
  419770:	ldr	x0, [sp, #40]
  419774:	str	x0, [x19, #24]
  419778:	mov	w1, #0x0                   	// #0
  41977c:	mov	x0, x20
  419780:	bl	41911c <ferror@plt+0x1684c>
  419784:	b	41973c <ferror@plt+0x16e6c>
  419788:	stp	x29, x30, [sp, #-48]!
  41978c:	mov	x29, sp
  419790:	stp	x19, x20, [sp, #16]
  419794:	mov	x19, x0
  419798:	and	w20, w1, #0xff
  41979c:	bl	427bcc <ferror@plt+0x252fc>
  4197a0:	ldrb	w1, [x0, #4]
  4197a4:	cmp	w1, #0x3e
  4197a8:	b.eq	4197e4 <ferror@plt+0x16f14>  // b.none
  4197ac:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  4197b0:	add	x0, x0, #0xa60
  4197b4:	adrp	x3, 466000 <_obstack_memory_used@@Base+0x1f094>
  4197b8:	add	x3, x3, #0xdc8
  4197bc:	cmp	w20, #0x0
  4197c0:	csel	x3, x3, x0, ne  // ne = any
  4197c4:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  4197c8:	add	x2, x2, #0x180
  4197cc:	mov	w1, #0x3                   	// #3
  4197d0:	mov	x0, x19
  4197d4:	bl	41c9fc <ferror@plt+0x1a12c>
  4197d8:	ldp	x19, x20, [sp, #16]
  4197dc:	ldp	x29, x30, [sp], #48
  4197e0:	ret
  4197e4:	mov	w4, #0x3e                  	// #62
  4197e8:	add	x3, sp, #0x20
  4197ec:	mov	x2, #0x1                   	// #1
  4197f0:	add	x1, x0, #0x8
  4197f4:	mov	x0, x19
  4197f8:	bl	4188ec <ferror@plt+0x1601c>
  4197fc:	and	w0, w0, #0xff
  419800:	cbz	w0, 4197ac <ferror@plt+0x16edc>
  419804:	ldr	w0, [sp, #32]
  419808:	cbz	w0, 4197ac <ferror@plt+0x16edc>
  41980c:	cmp	w20, #0x0
  419810:	ldr	x3, [sp, #40]
  419814:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  419818:	add	x2, x2, #0x2c0
  41981c:	mov	w1, #0x3                   	// #3
  419820:	csel	w1, w1, wzr, ne  // ne = any
  419824:	mov	x0, x19
  419828:	bl	41c9fc <ferror@plt+0x1a12c>
  41982c:	ldr	x0, [sp, #40]
  419830:	bl	402690 <free@plt>
  419834:	b	4197d8 <ferror@plt+0x16f08>
  419838:	stp	x29, x30, [sp, #-16]!
  41983c:	mov	x29, sp
  419840:	mov	w1, #0x1                   	// #1
  419844:	bl	419788 <ferror@plt+0x16eb8>
  419848:	ldp	x29, x30, [sp], #16
  41984c:	ret
  419850:	stp	x29, x30, [sp, #-16]!
  419854:	mov	x29, sp
  419858:	mov	w1, #0x0                   	// #0
  41985c:	bl	419788 <ferror@plt+0x16eb8>
  419860:	ldp	x29, x30, [sp], #16
  419864:	ret
  419868:	stp	x29, x30, [sp, #-80]!
  41986c:	mov	x29, sp
  419870:	stp	x19, x20, [sp, #16]
  419874:	stp	x21, x22, [sp, #32]
  419878:	stp	x23, x24, [sp, #48]
  41987c:	str	x25, [sp, #64]
  419880:	mov	x22, x0
  419884:	mov	x0, #0x400                 	// #1024
  419888:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  41988c:	mov	x21, x0
  419890:	mov	x25, #0x400                 	// #1024
  419894:	mov	x20, #0x0                   	// #0
  419898:	mov	w24, #0x20                  	// #32
  41989c:	mov	w23, #0x1                   	// #1
  4198a0:	b	41990c <ferror@plt+0x1703c>
  4198a4:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  4198a8:	add	x2, x2, #0x1a8
  4198ac:	mov	w1, #0x3                   	// #3
  4198b0:	mov	x0, x22
  4198b4:	bl	41c9fc <ferror@plt+0x1a12c>
  4198b8:	strb	wzr, [x21, x20]
  4198bc:	mov	x0, x21
  4198c0:	ldp	x19, x20, [sp, #16]
  4198c4:	ldp	x21, x22, [sp, #32]
  4198c8:	ldp	x23, x24, [sp, #48]
  4198cc:	ldr	x25, [sp, #64]
  4198d0:	ldp	x29, x30, [sp], #80
  4198d4:	ret
  4198d8:	add	x1, x25, x1
  4198dc:	lsl	x25, x1, #1
  4198e0:	mov	x1, x25
  4198e4:	mov	x0, x21
  4198e8:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  4198ec:	mov	x21, x0
  4198f0:	b	419940 <ferror@plt+0x17070>
  4198f4:	mov	w3, w23
  4198f8:	add	x2, x21, x20
  4198fc:	mov	x1, x19
  419900:	mov	x0, x22
  419904:	bl	424774 <ferror@plt+0x21ea4>
  419908:	sub	x20, x0, x21
  41990c:	mov	x0, x22
  419910:	bl	418fa0 <ferror@plt+0x166d0>
  419914:	mov	x19, x0
  419918:	ldrb	w1, [x0, #4]
  41991c:	cmp	w1, #0x2
  419920:	b.eq	4198b8 <ferror@plt+0x16fe8>  // b.none
  419924:	cmp	w1, #0x16
  419928:	b.eq	4198a4 <ferror@plt+0x16fd4>  // b.none
  41992c:	bl	4246a8 <ferror@plt+0x21dd8>
  419930:	add	w1, w0, #0x2
  419934:	add	x0, x20, x1
  419938:	cmp	x0, x25
  41993c:	b.hi	4198d8 <ferror@plt+0x17008>  // b.pmore
  419940:	ldrh	w0, [x19, #6]
  419944:	tbz	w0, #0, 4198f4 <ferror@plt+0x17024>
  419948:	strb	w24, [x21, x20]
  41994c:	add	x20, x20, #0x1
  419950:	b	4198f4 <ferror@plt+0x17024>
  419954:	stp	x29, x30, [sp, #-112]!
  419958:	mov	x29, sp
  41995c:	stp	x19, x20, [sp, #16]
  419960:	stp	x21, x22, [sp, #32]
  419964:	stp	x23, x24, [sp, #48]
  419968:	mov	x19, x0
  41996c:	mov	x23, x1
  419970:	mov	x22, x2
  419974:	mov	x20, x3
  419978:	bl	418fa0 <ferror@plt+0x166d0>
  41997c:	mov	x21, x0
  419980:	ldr	w0, [x0]
  419984:	str	w0, [x20]
  419988:	ldrb	w0, [x21, #4]
  41998c:	cmp	w0, #0x3e
  419990:	b.eq	4199bc <ferror@plt+0x170ec>  // b.none
  419994:	cmp	w0, #0x44
  419998:	b.eq	4199cc <ferror@plt+0x170fc>  // b.none
  41999c:	cmp	w0, #0x3
  4199a0:	b.ne	419a54 <ferror@plt+0x17184>  // b.any
  4199a4:	mov	x0, x19
  4199a8:	bl	419868 <ferror@plt+0x16f98>
  4199ac:	mov	x20, x0
  4199b0:	mov	w0, #0x1                   	// #1
  4199b4:	str	w0, [x23]
  4199b8:	b	419a0c <ferror@plt+0x1713c>
  4199bc:	ldr	x0, [x21, #16]
  4199c0:	ldrb	w0, [x0]
  4199c4:	cmp	w0, #0x52
  4199c8:	b.eq	419a54 <ferror@plt+0x17184>  // b.none
  4199cc:	ldr	w0, [x21, #8]
  4199d0:	sub	w0, w0, #0x1
  4199d4:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  4199d8:	mov	x20, x0
  4199dc:	ldr	w2, [x21, #8]
  4199e0:	ldr	x1, [x21, #16]
  4199e4:	sub	w2, w2, #0x2
  4199e8:	add	x1, x1, #0x1
  4199ec:	bl	402260 <memcpy@plt>
  4199f0:	ldr	w0, [x21, #8]
  4199f4:	sub	w0, w0, #0x2
  4199f8:	strb	wzr, [x20, w0, uxtw]
  4199fc:	ldrb	w0, [x21, #4]
  419a00:	cmp	w0, #0x44
  419a04:	cset	w0, eq  // eq = none
  419a08:	str	w0, [x23]
  419a0c:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x19094>
  419a10:	add	x0, x0, #0x900
  419a14:	ldr	x1, [x19, #144]
  419a18:	add	x0, x0, #0x108
  419a1c:	cmp	x1, x0
  419a20:	b.eq	419a3c <ferror@plt+0x1716c>  // b.none
  419a24:	cbz	x22, 419a30 <ferror@plt+0x17160>
  419a28:	ldrb	w0, [x19, #1123]
  419a2c:	cbz	w0, 419a98 <ferror@plt+0x171c8>
  419a30:	mov	w1, #0x1                   	// #1
  419a34:	mov	x0, x19
  419a38:	bl	41911c <ferror@plt+0x1684c>
  419a3c:	mov	x0, x20
  419a40:	ldp	x19, x20, [sp, #16]
  419a44:	ldp	x21, x22, [sp, #32]
  419a48:	ldp	x23, x24, [sp, #48]
  419a4c:	ldp	x29, x30, [sp], #112
  419a50:	ret
  419a54:	ldr	x1, [x19, #144]
  419a58:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x19094>
  419a5c:	add	x0, x0, #0x900
  419a60:	add	x0, x0, #0x108
  419a64:	cmp	x1, x0
  419a68:	b.eq	419a8c <ferror@plt+0x171bc>  // b.none
  419a6c:	ldr	x3, [x1, #8]
  419a70:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  419a74:	add	x2, x2, #0x1e0
  419a78:	mov	w1, #0x3                   	// #3
  419a7c:	mov	x0, x19
  419a80:	bl	41c9fc <ferror@plt+0x1a12c>
  419a84:	mov	x20, #0x0                   	// #0
  419a88:	b	419a3c <ferror@plt+0x1716c>
  419a8c:	adrp	x3, 460000 <_obstack_memory_used@@Base+0x19094>
  419a90:	add	x3, x3, #0x1c8
  419a94:	b	419a70 <ferror@plt+0x171a0>
  419a98:	stp	x25, x26, [sp, #64]
  419a9c:	mov	x0, #0x40                  	// #64
  419aa0:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  419aa4:	mov	x23, x0
  419aa8:	ldr	x0, [x19, #448]
  419aac:	ldurb	w0, [x0, #-20]
  419ab0:	mov	x26, #0x8                   	// #8
  419ab4:	mov	x24, #0x0                   	// #0
  419ab8:	cmp	w0, #0x16
  419abc:	b.eq	419ad4 <ferror@plt+0x17204>  // b.none
  419ac0:	stp	x27, x28, [sp, #80]
  419ac4:	adrp	x27, 45f000 <_obstack_memory_used@@Base+0x18094>
  419ac8:	add	x27, x27, #0xff0
  419acc:	mov	w28, #0x2                   	// #2
  419ad0:	b	419b00 <ferror@plt+0x17230>
  419ad4:	mov	x24, #0x0                   	// #0
  419ad8:	b	419b50 <ferror@plt+0x17280>
  419adc:	ldr	x0, [x19, #144]
  419ae0:	ldr	x3, [x0, #8]
  419ae4:	mov	x2, x27
  419ae8:	mov	w1, w28
  419aec:	mov	x0, x19
  419af0:	bl	41c9fc <ferror@plt+0x1a12c>
  419af4:	b	419b00 <ferror@plt+0x17230>
  419af8:	str	x21, [x23, x24, lsl #3]
  419afc:	mov	x24, x25
  419b00:	mov	x0, x19
  419b04:	bl	427bcc <ferror@plt+0x252fc>
  419b08:	mov	x21, x0
  419b0c:	ldrb	w0, [x0, #4]
  419b10:	cmp	w0, #0x16
  419b14:	b.eq	419b4c <ferror@plt+0x1727c>  // b.none
  419b18:	cmp	w0, #0x4f
  419b1c:	b.ne	419adc <ferror@plt+0x1720c>  // b.any
  419b20:	add	x25, x24, #0x1
  419b24:	cmp	x25, x26
  419b28:	b.cc	419af8 <ferror@plt+0x17228>  // b.lo, b.ul, b.last
  419b2c:	lsl	x0, x26, #1
  419b30:	str	x0, [sp, #104]
  419b34:	lsl	x1, x26, #4
  419b38:	mov	x0, x23
  419b3c:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  419b40:	mov	x23, x0
  419b44:	ldr	x26, [sp, #104]
  419b48:	b	419af8 <ferror@plt+0x17228>
  419b4c:	ldp	x27, x28, [sp, #80]
  419b50:	str	xzr, [x23, x24, lsl #3]
  419b54:	str	x23, [x22]
  419b58:	ldp	x25, x26, [sp, #64]
  419b5c:	b	419a3c <ferror@plt+0x1716c>
  419b60:	stp	x29, x30, [sp, #-80]!
  419b64:	mov	x29, sp
  419b68:	stp	x19, x20, [sp, #16]
  419b6c:	str	x21, [sp, #32]
  419b70:	mov	x19, x0
  419b74:	mov	w21, w1
  419b78:	str	xzr, [sp, #64]
  419b7c:	ldrb	w2, [x0, #1123]
  419b80:	cmp	w2, #0x0
  419b84:	cset	w2, eq  // eq = none
  419b88:	strb	w2, [x0, #21]
  419b8c:	add	x3, sp, #0x3c
  419b90:	add	x2, sp, #0x40
  419b94:	add	x1, sp, #0x4c
  419b98:	bl	419954 <ferror@plt+0x17084>
  419b9c:	mov	x20, x0
  419ba0:	cbz	x0, 419bd0 <ferror@plt+0x17300>
  419ba4:	ldrb	w0, [x0]
  419ba8:	cbz	w0, 419bf4 <ferror@plt+0x17324>
  419bac:	ldr	x0, [x19, #40]
  419bb0:	ldr	w0, [x0, #48]
  419bb4:	cmp	w0, #0xc7
  419bb8:	b.ls	419c1c <ferror@plt+0x1734c>  // b.plast
  419bbc:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  419bc0:	add	x2, x2, #0x220
  419bc4:	mov	w1, #0x3                   	// #3
  419bc8:	mov	x0, x19
  419bcc:	bl	41c9fc <ferror@plt+0x1a12c>
  419bd0:	mov	x0, x20
  419bd4:	bl	402690 <free@plt>
  419bd8:	ldr	x0, [sp, #64]
  419bdc:	cbz	x0, 419be4 <ferror@plt+0x17314>
  419be0:	bl	402690 <free@plt>
  419be4:	ldp	x19, x20, [sp, #16]
  419be8:	ldr	x21, [sp, #32]
  419bec:	ldp	x29, x30, [sp], #80
  419bf0:	ret
  419bf4:	ldr	x0, [x19, #144]
  419bf8:	ldr	x5, [x0, #8]
  419bfc:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x19094>
  419c00:	add	x4, x4, #0x208
  419c04:	mov	w3, #0x0                   	// #0
  419c08:	ldr	w2, [sp, #60]
  419c0c:	mov	w1, #0x3                   	// #3
  419c10:	mov	x0, x19
  419c14:	bl	41cbe8 <ferror@plt+0x1a318>
  419c18:	b	419bd0 <ferror@plt+0x17300>
  419c1c:	mov	x0, x19
  419c20:	bl	4191a4 <ferror@plt+0x168d4>
  419c24:	ldr	x6, [x19, #928]
  419c28:	cbz	x6, 419c4c <ferror@plt+0x1737c>
  419c2c:	ldr	x0, [x19, #144]
  419c30:	ldr	x5, [sp, #64]
  419c34:	ldr	w4, [sp, #76]
  419c38:	mov	x3, x20
  419c3c:	ldr	x2, [x0, #8]
  419c40:	ldr	w1, [x19, #48]
  419c44:	mov	x0, x19
  419c48:	blr	x6
  419c4c:	ldr	w4, [sp, #60]
  419c50:	mov	w3, w21
  419c54:	ldr	w2, [sp, #76]
  419c58:	mov	x1, x20
  419c5c:	mov	x0, x19
  419c60:	bl	4227a0 <ferror@plt+0x1fed0>
  419c64:	b	419bd0 <ferror@plt+0x17300>
  419c68:	stp	x29, x30, [sp, #-16]!
  419c6c:	mov	x29, sp
  419c70:	mov	w1, #0x2                   	// #2
  419c74:	bl	419b60 <ferror@plt+0x17290>
  419c78:	ldp	x29, x30, [sp], #16
  419c7c:	ret
  419c80:	stp	x29, x30, [sp, #-32]!
  419c84:	mov	x29, sp
  419c88:	str	x19, [sp, #16]
  419c8c:	mov	x19, x0
  419c90:	ldr	x0, [x0, #40]
  419c94:	ldr	w0, [x0, #48]
  419c98:	mov	w1, #0x1                   	// #1
  419c9c:	cmp	w0, w1
  419ca0:	b.eq	419cb8 <ferror@plt+0x173e8>  // b.none
  419ca4:	mov	x0, x19
  419ca8:	bl	419b60 <ferror@plt+0x17290>
  419cac:	ldr	x19, [sp, #16]
  419cb0:	ldp	x29, x30, [sp], #32
  419cb4:	ret
  419cb8:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  419cbc:	add	x2, x2, #0x240
  419cc0:	mov	w1, #0x0                   	// #0
  419cc4:	mov	x0, x19
  419cc8:	bl	41c9fc <ferror@plt+0x1a12c>
  419ccc:	mov	w1, #0x0                   	// #0
  419cd0:	b	419ca4 <ferror@plt+0x173d4>
  419cd4:	stp	x29, x30, [sp, #-16]!
  419cd8:	mov	x29, sp
  419cdc:	mov	w1, #0x0                   	// #0
  419ce0:	bl	419b60 <ferror@plt+0x17290>
  419ce4:	ldp	x29, x30, [sp], #16
  419ce8:	ret
  419cec:	stp	x29, x30, [sp, #-64]!
  419cf0:	mov	x29, sp
  419cf4:	stp	x19, x20, [sp, #16]
  419cf8:	stp	x21, x22, [sp, #32]
  419cfc:	str	x23, [sp, #48]
  419d00:	mov	x19, x0
  419d04:	mov	w20, w1
  419d08:	mov	w22, w2
  419d0c:	ldr	x0, [x0, #448]
  419d10:	ldur	w23, [x0, #-24]
  419d14:	mov	x1, #0x0                   	// #0
  419d18:	cbz	w3, 419d24 <ferror@plt+0x17454>
  419d1c:	ldr	x0, [x19, #144]
  419d20:	ldr	x1, [x0, #8]
  419d24:	ldrb	w0, [x19, #24]
  419d28:	add	w0, w0, #0x1
  419d2c:	strb	w0, [x19, #24]
  419d30:	mov	x0, x19
  419d34:	bl	425088 <ferror@plt+0x227b8>
  419d38:	mov	x21, x0
  419d3c:	ldrb	w0, [x19, #24]
  419d40:	sub	w0, w0, #0x1
  419d44:	strb	w0, [x19, #24]
  419d48:	cmp	w22, #0x0
  419d4c:	cset	w0, ne  // ne = any
  419d50:	cmp	w0, #0x0
  419d54:	ccmp	w20, #0x1, #0x0, ne  // ne = any
  419d58:	b.eq	419da4 <ferror@plt+0x174d4>  // b.none
  419d5c:	cmp	w20, #0x0
  419d60:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  419d64:	b.eq	419dc8 <ferror@plt+0x174f8>  // b.none
  419d68:	mov	x5, x21
  419d6c:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x19094>
  419d70:	add	x4, x4, #0x2c0
  419d74:	mov	w3, #0x0                   	// #0
  419d78:	mov	w2, w23
  419d7c:	mov	w1, w22
  419d80:	mov	x0, x19
  419d84:	bl	41cc60 <ferror@plt+0x1a390>
  419d88:	mov	x0, x21
  419d8c:	bl	402690 <free@plt>
  419d90:	ldp	x19, x20, [sp, #16]
  419d94:	ldp	x21, x22, [sp, #32]
  419d98:	ldr	x23, [sp, #48]
  419d9c:	ldp	x29, x30, [sp], #64
  419da0:	ret
  419da4:	mov	x5, x21
  419da8:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x19094>
  419dac:	add	x4, x4, #0x2c0
  419db0:	mov	w3, #0x0                   	// #0
  419db4:	mov	w2, w23
  419db8:	mov	w1, w22
  419dbc:	mov	x0, x19
  419dc0:	bl	41cd58 <ferror@plt+0x1a488>
  419dc4:	b	419d88 <ferror@plt+0x174b8>
  419dc8:	mov	x5, x21
  419dcc:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x19094>
  419dd0:	add	x4, x4, #0x2c0
  419dd4:	mov	w3, #0x0                   	// #0
  419dd8:	mov	w2, w23
  419ddc:	mov	w1, w20
  419de0:	mov	x0, x19
  419de4:	bl	41cbe8 <ferror@plt+0x1a318>
  419de8:	b	419d88 <ferror@plt+0x174b8>
  419dec:	stp	x29, x30, [sp, #-16]!
  419df0:	mov	x29, sp
  419df4:	mov	w3, #0x1                   	// #1
  419df8:	mov	w2, #0x12                  	// #18
  419dfc:	mov	w1, w3
  419e00:	bl	419cec <ferror@plt+0x1741c>
  419e04:	ldp	x29, x30, [sp], #16
  419e08:	ret
  419e0c:	stp	x29, x30, [sp, #-16]!
  419e10:	mov	x29, sp
  419e14:	mov	w3, #0x1                   	// #1
  419e18:	mov	w2, #0x0                   	// #0
  419e1c:	mov	w1, #0x3                   	// #3
  419e20:	bl	419cec <ferror@plt+0x1741c>
  419e24:	ldp	x29, x30, [sp], #16
  419e28:	ret
  419e2c:	stp	x29, x30, [sp, #-32]!
  419e30:	mov	x29, sp
  419e34:	stp	x19, x20, [sp, #16]
  419e38:	mov	x20, x0
  419e3c:	ldr	x0, [x0]
  419e40:	ldr	x19, [x0, #96]
  419e44:	cbz	x19, 419e7c <ferror@plt+0x175ac>
  419e48:	ldr	w0, [x19, #28]
  419e4c:	cmp	w0, #0x5
  419e50:	b.eq	419e94 <ferror@plt+0x175c4>  // b.none
  419e54:	mov	w0, #0x9                   	// #9
  419e58:	str	w0, [x19, #28]
  419e5c:	ldrb	w0, [x19, #24]
  419e60:	cbz	w0, 419ec8 <ferror@plt+0x175f8>
  419e64:	mov	w0, #0x1                   	// #1
  419e68:	strb	w0, [x20, #18]
  419e6c:	str	xzr, [x19, #16]
  419e70:	ldp	x19, x20, [sp, #16]
  419e74:	ldp	x29, x30, [sp], #32
  419e78:	ret
  419e7c:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  419e80:	add	x2, x2, #0x268
  419e84:	mov	w1, #0x3                   	// #3
  419e88:	mov	x0, x20
  419e8c:	bl	41c9fc <ferror@plt+0x1a12c>
  419e90:	b	419e70 <ferror@plt+0x175a0>
  419e94:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  419e98:	add	x2, x2, #0x280
  419e9c:	mov	w1, #0x3                   	// #3
  419ea0:	mov	x0, x20
  419ea4:	bl	41c9fc <ferror@plt+0x1a12c>
  419ea8:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x19094>
  419eac:	add	x4, x4, #0xa8
  419eb0:	mov	w3, #0x0                   	// #0
  419eb4:	ldr	w2, [x19, #8]
  419eb8:	mov	w1, #0x3                   	// #3
  419ebc:	mov	x0, x20
  419ec0:	bl	41cbe8 <ferror@plt+0x1a318>
  419ec4:	b	419e54 <ferror@plt+0x17584>
  419ec8:	mov	w1, #0x0                   	// #0
  419ecc:	mov	x0, x20
  419ed0:	bl	41f1e4 <ferror@plt+0x1c914>
  419ed4:	eor	w1, w0, #0x1
  419ed8:	strb	w1, [x20, #18]
  419edc:	strb	w0, [x19, #24]
  419ee0:	b	419e6c <ferror@plt+0x1759c>
  419ee4:	stp	x29, x30, [sp, #-32]!
  419ee8:	mov	x29, sp
  419eec:	stp	x19, x20, [sp, #16]
  419ef0:	mov	x19, x0
  419ef4:	mov	w1, #0x1                   	// #1
  419ef8:	bl	418de4 <ferror@plt+0x16514>
  419efc:	cbz	x0, 419f5c <ferror@plt+0x1768c>
  419f00:	mov	x20, x0
  419f04:	ldr	x1, [x19, #1024]
  419f08:	cbz	x1, 419f14 <ferror@plt+0x17644>
  419f0c:	mov	x0, x19
  419f10:	blr	x1
  419f14:	ldr	x3, [x19, #944]
  419f18:	cbz	x3, 419f2c <ferror@plt+0x1765c>
  419f1c:	mov	x2, x20
  419f20:	ldr	w1, [x19, #48]
  419f24:	mov	x0, x19
  419f28:	blr	x3
  419f2c:	ldrb	w0, [x20, #18]
  419f30:	tbz	w0, #1, 419f5c <ferror@plt+0x1768c>
  419f34:	ldrh	w0, [x20, #18]
  419f38:	tbnz	w0, #5, 419f74 <ferror@plt+0x176a4>
  419f3c:	ldrb	w0, [x20, #18]
  419f40:	and	w0, w0, #0x3
  419f44:	cmp	w0, #0x3
  419f48:	b.eq	419f90 <ferror@plt+0x176c0>  // b.none
  419f4c:	ldrb	w0, [x19, #1151]
  419f50:	cbnz	w0, 419fbc <ferror@plt+0x176ec>
  419f54:	mov	x0, x20
  419f58:	bl	42bbec <ferror@plt+0x2931c>
  419f5c:	mov	w1, #0x0                   	// #0
  419f60:	mov	x0, x19
  419f64:	bl	41911c <ferror@plt+0x1684c>
  419f68:	ldp	x19, x20, [sp, #16]
  419f6c:	ldp	x29, x30, [sp], #32
  419f70:	ret
  419f74:	ldr	x3, [x20]
  419f78:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  419f7c:	add	x2, x2, #0x298
  419f80:	mov	w1, #0x0                   	// #0
  419f84:	mov	x0, x19
  419f88:	bl	41c9fc <ferror@plt+0x1a12c>
  419f8c:	b	419f4c <ferror@plt+0x1767c>
  419f90:	ldrb	w0, [x19, #1143]
  419f94:	cbz	w0, 419f4c <ferror@plt+0x1767c>
  419f98:	ldr	x5, [x20]
  419f9c:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x19094>
  419fa0:	add	x4, x4, #0x298
  419fa4:	mov	w3, #0x0                   	// #0
  419fa8:	ldr	w2, [x19, #48]
  419fac:	mov	w1, #0xb                   	// #11
  419fb0:	mov	x0, x19
  419fb4:	bl	41cc60 <ferror@plt+0x1a390>
  419fb8:	b	419f4c <ferror@plt+0x1767c>
  419fbc:	mov	x2, #0x0                   	// #0
  419fc0:	mov	x1, x20
  419fc4:	mov	x0, x19
  419fc8:	bl	42af40 <ferror@plt+0x28670>
  419fcc:	b	419f54 <ferror@plt+0x17684>
  419fd0:	stp	x29, x30, [sp, #-64]!
  419fd4:	mov	x29, sp
  419fd8:	stp	x19, x20, [sp, #16]
  419fdc:	stp	x21, x22, [sp, #32]
  419fe0:	str	x23, [sp, #48]
  419fe4:	mov	x19, x0
  419fe8:	mov	w21, w1
  419fec:	mov	w22, w2
  419ff0:	mov	x20, x3
  419ff4:	ldr	x23, [x0]
  419ff8:	ldr	x0, [x0, #840]
  419ffc:	ldr	x1, [x19, #832]
  41a000:	sub	x0, x0, x1
  41a004:	cmp	x0, #0x1f
  41a008:	b.ls	41a0c0 <ferror@plt+0x177f0>  // b.plast
  41a00c:	ldr	x5, [x19, #832]
  41a010:	add	x5, x5, #0x20
  41a014:	ldr	x0, [x19, #824]
  41a018:	cmp	x5, x0
  41a01c:	b.eq	41a0d0 <ferror@plt+0x17800>  // b.none
  41a020:	ldr	x4, [x19, #856]
  41a024:	add	x5, x5, x4
  41a028:	bic	x4, x5, x4
  41a02c:	str	x4, [x19, #832]
  41a030:	ldr	x1, [x19, #816]
  41a034:	ldr	x2, [x19, #840]
  41a038:	sub	x4, x4, x1
  41a03c:	sub	x1, x2, x1
  41a040:	cmp	x4, x1
  41a044:	b.ls	41a04c <ferror@plt+0x1777c>  // b.plast
  41a048:	str	x2, [x19, #832]
  41a04c:	ldr	x2, [x19, #832]
  41a050:	str	x2, [x19, #824]
  41a054:	ldr	w1, [x19, #48]
  41a058:	str	w1, [x0, #8]
  41a05c:	ldr	x1, [x23, #96]
  41a060:	str	x1, [x0]
  41a064:	ldrb	w1, [x19, #18]
  41a068:	cmp	w1, #0x0
  41a06c:	ccmp	w21, #0x0, #0x4, eq  // eq = none
  41a070:	cset	w1, eq  // eq = none
  41a074:	strb	w1, [x0, #24]
  41a078:	ldrb	w1, [x19, #18]
  41a07c:	cmp	w1, #0x0
  41a080:	cset	w1, ne  // ne = any
  41a084:	strb	w1, [x0, #25]
  41a088:	str	w22, [x0, #28]
  41a08c:	ldrb	w1, [x19, #440]
  41a090:	cbz	w1, 41a0e0 <ferror@plt+0x17810>
  41a094:	ldr	x1, [x19, #424]
  41a098:	cmp	x1, #0x0
  41a09c:	csel	x20, x20, xzr, eq  // eq = none
  41a0a0:	str	x20, [x0, #16]
  41a0a4:	strb	w21, [x19, #18]
  41a0a8:	str	x0, [x23, #96]
  41a0ac:	ldp	x19, x20, [sp, #16]
  41a0b0:	ldp	x21, x22, [sp, #32]
  41a0b4:	ldr	x23, [sp, #48]
  41a0b8:	ldp	x29, x30, [sp], #64
  41a0bc:	ret
  41a0c0:	mov	x1, #0x20                  	// #32
  41a0c4:	add	x0, x19, #0x328
  41a0c8:	bl	446d94 <_obstack_newchunk@@Base>
  41a0cc:	b	41a00c <ferror@plt+0x1773c>
  41a0d0:	ldrb	w1, [x19, #888]
  41a0d4:	orr	w1, w1, #0x2
  41a0d8:	strb	w1, [x19, #888]
  41a0dc:	b	41a020 <ferror@plt+0x17750>
  41a0e0:	mov	x20, #0x0                   	// #0
  41a0e4:	b	41a0a0 <ferror@plt+0x177d0>
  41a0e8:	stp	x29, x30, [sp, #-32]!
  41a0ec:	mov	x29, sp
  41a0f0:	str	x19, [sp, #16]
  41a0f4:	mov	x19, x0
  41a0f8:	ldrb	w0, [x0, #18]
  41a0fc:	mov	w1, #0x1                   	// #1
  41a100:	cbz	w0, 41a120 <ferror@plt+0x17850>
  41a104:	ldr	x3, [x19, #432]
  41a108:	mov	w2, #0x4                   	// #4
  41a10c:	mov	x0, x19
  41a110:	bl	419fd0 <ferror@plt+0x17700>
  41a114:	ldr	x19, [sp, #16]
  41a118:	ldp	x29, x30, [sp], #32
  41a11c:	ret
  41a120:	mov	x0, x19
  41a124:	bl	41f1e4 <ferror@plt+0x1c914>
  41a128:	and	w1, w0, #0xff
  41a12c:	eor	w1, w1, #0x1
  41a130:	b	41a104 <ferror@plt+0x17834>
  41a134:	stp	x29, x30, [sp, #-48]!
  41a138:	mov	x29, sp
  41a13c:	stp	x19, x20, [sp, #16]
  41a140:	str	x21, [sp, #32]
  41a144:	mov	x19, x0
  41a148:	ldrb	w0, [x0, #18]
  41a14c:	mov	x20, #0x0                   	// #0
  41a150:	mov	w21, #0x1                   	// #1
  41a154:	cbz	w0, 41a17c <ferror@plt+0x178ac>
  41a158:	mov	x3, x20
  41a15c:	mov	w2, #0x6                   	// #6
  41a160:	mov	w1, w21
  41a164:	mov	x0, x19
  41a168:	bl	419fd0 <ferror@plt+0x17700>
  41a16c:	ldp	x19, x20, [sp, #16]
  41a170:	ldr	x21, [sp, #32]
  41a174:	ldp	x29, x30, [sp], #48
  41a178:	ret
  41a17c:	mov	w1, #0x0                   	// #0
  41a180:	mov	x0, x19
  41a184:	bl	418de4 <ferror@plt+0x16514>
  41a188:	mov	x20, x0
  41a18c:	cbz	x0, 41a158 <ferror@plt+0x17888>
  41a190:	ldrb	w0, [x0, #18]
  41a194:	mov	w21, #0x0                   	// #0
  41a198:	tbz	w0, #1, 41a1ac <ferror@plt+0x178dc>
  41a19c:	ldrh	w21, [x20, #18]
  41a1a0:	ubfx	x21, x21, #8, #2
  41a1a4:	eor	w21, w21, #0x1
  41a1a8:	and	w21, w21, #0x1
  41a1ac:	ldrb	w0, [x20, #18]
  41a1b0:	and	w0, w0, #0x3
  41a1b4:	cmp	w0, #0x2
  41a1b8:	b.eq	41a1ec <ferror@plt+0x1791c>  // b.none
  41a1bc:	ldrh	w0, [x20, #18]
  41a1c0:	tbz	w0, #7, 41a200 <ferror@plt+0x17930>
  41a1c4:	ldr	x3, [x19, #1032]
  41a1c8:	cbz	x3, 41a1dc <ferror@plt+0x1790c>
  41a1cc:	mov	x2, x20
  41a1d0:	ldr	w1, [x19, #48]
  41a1d4:	mov	x0, x19
  41a1d8:	blr	x3
  41a1dc:	mov	w1, #0x0                   	// #0
  41a1e0:	mov	x0, x19
  41a1e4:	bl	41911c <ferror@plt+0x1684c>
  41a1e8:	b	41a158 <ferror@plt+0x17888>
  41a1ec:	ldr	x1, [x20, #24]
  41a1f0:	ldrb	w0, [x1, #19]
  41a1f4:	orr	w0, w0, #0x20
  41a1f8:	strb	w0, [x1, #19]
  41a1fc:	b	41a1bc <ferror@plt+0x178ec>
  41a200:	mov	x1, x20
  41a204:	mov	x0, x19
  41a208:	bl	42ccb4 <ferror@plt+0x2a3e4>
  41a20c:	b	41a1c4 <ferror@plt+0x178f4>
  41a210:	stp	x29, x30, [sp, #-48]!
  41a214:	mov	x29, sp
  41a218:	stp	x19, x20, [sp, #16]
  41a21c:	mov	x19, x0
  41a220:	ldrb	w0, [x0, #18]
  41a224:	mov	w20, #0x1                   	// #1
  41a228:	cbz	w0, 41a24c <ferror@plt+0x1797c>
  41a22c:	mov	x3, #0x0                   	// #0
  41a230:	mov	w2, #0x3                   	// #3
  41a234:	mov	w1, w20
  41a238:	mov	x0, x19
  41a23c:	bl	419fd0 <ferror@plt+0x17700>
  41a240:	ldp	x19, x20, [sp, #16]
  41a244:	ldp	x29, x30, [sp], #48
  41a248:	ret
  41a24c:	str	x21, [sp, #32]
  41a250:	mov	w1, #0x0                   	// #0
  41a254:	mov	x0, x19
  41a258:	bl	418de4 <ferror@plt+0x16514>
  41a25c:	mov	x21, x0
  41a260:	cbz	x0, 41a2dc <ferror@plt+0x17a0c>
  41a264:	ldrb	w0, [x0, #18]
  41a268:	tbz	w0, #1, 41a274 <ferror@plt+0x179a4>
  41a26c:	ldrh	w20, [x21, #18]
  41a270:	ubfx	x20, x20, #8, #1
  41a274:	ldrb	w1, [x21, #18]
  41a278:	and	w1, w1, #0x3
  41a27c:	cmp	w1, #0x2
  41a280:	b.eq	41a2b8 <ferror@plt+0x179e8>  // b.none
  41a284:	ldrh	w0, [x21, #18]
  41a288:	tbz	w0, #7, 41a2cc <ferror@plt+0x179fc>
  41a28c:	ldr	x3, [x19, #1032]
  41a290:	cbz	x3, 41a2a4 <ferror@plt+0x179d4>
  41a294:	mov	x2, x21
  41a298:	ldr	w1, [x19, #48]
  41a29c:	mov	x0, x19
  41a2a0:	blr	x3
  41a2a4:	mov	w1, #0x0                   	// #0
  41a2a8:	mov	x0, x19
  41a2ac:	bl	41911c <ferror@plt+0x1684c>
  41a2b0:	ldr	x21, [sp, #32]
  41a2b4:	b	41a22c <ferror@plt+0x1795c>
  41a2b8:	ldr	x1, [x21, #24]
  41a2bc:	ldrb	w0, [x1, #19]
  41a2c0:	orr	w0, w0, #0x20
  41a2c4:	strb	w0, [x1, #19]
  41a2c8:	b	41a284 <ferror@plt+0x179b4>
  41a2cc:	mov	x1, x21
  41a2d0:	mov	x0, x19
  41a2d4:	bl	42ccb4 <ferror@plt+0x2a3e4>
  41a2d8:	b	41a28c <ferror@plt+0x179bc>
  41a2dc:	ldr	x21, [sp, #32]
  41a2e0:	b	41a22c <ferror@plt+0x1795c>
  41a2e4:	stp	x29, x30, [sp, #-32]!
  41a2e8:	mov	x29, sp
  41a2ec:	stp	x19, x20, [sp, #16]
  41a2f0:	mov	x19, x0
  41a2f4:	mov	w1, #0x1                   	// #1
  41a2f8:	bl	418de4 <ferror@plt+0x16514>
  41a2fc:	cbz	x0, 41a364 <ferror@plt+0x17a94>
  41a300:	mov	x20, x0
  41a304:	ldrb	w0, [x19, #1124]
  41a308:	cmp	w0, #0x0
  41a30c:	cset	w0, eq  // eq = none
  41a310:	strb	w0, [x19, #21]
  41a314:	ldr	x1, [x19, #1024]
  41a318:	cbz	x1, 41a324 <ferror@plt+0x17a54>
  41a31c:	mov	x0, x19
  41a320:	blr	x1
  41a324:	mov	x1, x20
  41a328:	mov	x0, x19
  41a32c:	bl	42bdec <ferror@plt+0x2951c>
  41a330:	and	w0, w0, #0xff
  41a334:	cbz	w0, 41a350 <ferror@plt+0x17a80>
  41a338:	ldr	x3, [x19, #936]
  41a33c:	cbz	x3, 41a350 <ferror@plt+0x17a80>
  41a340:	mov	x2, x20
  41a344:	ldr	w1, [x19, #48]
  41a348:	mov	x0, x19
  41a34c:	blr	x3
  41a350:	ldrh	w0, [x20, #18]
  41a354:	ubfx	x1, x0, #2, #8
  41a358:	and	w1, w1, #0xffffffdf
  41a35c:	bfi	w0, w1, #2, #8
  41a360:	strh	w0, [x20, #18]
  41a364:	ldp	x19, x20, [sp, #16]
  41a368:	ldp	x29, x30, [sp], #32
  41a36c:	ret
  41a370:	stp	x29, x30, [sp, #-32]!
  41a374:	mov	x29, sp
  41a378:	stp	x19, x20, [sp, #16]
  41a37c:	mov	x19, x0
  41a380:	ldr	x0, [x0, #144]
  41a384:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x19094>
  41a388:	add	x1, x1, #0x900
  41a38c:	cmp	x0, x1
  41a390:	b.eq	41a49c <ferror@plt+0x17bcc>  // b.none
  41a394:	cbz	x0, 41a3ec <ferror@plt+0x17b1c>
  41a398:	ldrb	w1, [x0, #19]
  41a39c:	tbz	w1, #4, 41a420 <ferror@plt+0x17b50>
  41a3a0:	ldrb	w1, [x19, #18]
  41a3a4:	cmp	w1, #0x0
  41a3a8:	cset	w20, ne  // ne = any
  41a3ac:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x19094>
  41a3b0:	add	x1, x1, #0x900
  41a3b4:	add	x2, x1, #0xd8
  41a3b8:	cmp	x0, x2
  41a3bc:	cset	w2, eq  // eq = none
  41a3c0:	add	x1, x1, #0x60
  41a3c4:	cmp	x0, x1
  41a3c8:	csinc	w1, w2, wzr, ne  // ne = any
  41a3cc:	strb	w1, [x19, #20]
  41a3d0:	mov	w0, #0x0                   	// #0
  41a3d4:	cbnz	w1, 41a454 <ferror@plt+0x17b84>
  41a3d8:	mov	w2, #0x0                   	// #0
  41a3dc:	mov	x1, #0x0                   	// #0
  41a3e0:	mov	x0, x19
  41a3e4:	bl	430928 <ferror@plt+0x2e058>
  41a3e8:	b	41a484 <ferror@plt+0x17bb4>
  41a3ec:	ldrb	w1, [x19, #18]
  41a3f0:	cmp	w1, #0x0
  41a3f4:	cset	w20, ne  // ne = any
  41a3f8:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x19094>
  41a3fc:	add	x1, x1, #0x900
  41a400:	add	x2, x1, #0xd8
  41a404:	add	x1, x1, #0x60
  41a408:	cmp	x0, x2
  41a40c:	ccmp	x0, x1, #0x4, ne  // ne = any
  41a410:	cset	w0, eq  // eq = none
  41a414:	strb	w0, [x19, #20]
  41a418:	mov	w0, #0x0                   	// #0
  41a41c:	b	41a458 <ferror@plt+0x17b88>
  41a420:	ldrb	w1, [x19, #18]
  41a424:	cmp	w1, #0x0
  41a428:	cset	w20, ne  // ne = any
  41a42c:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41a430:	add	x2, x2, #0x900
  41a434:	add	x1, x2, #0xd8
  41a438:	cmp	x0, x1
  41a43c:	cset	w1, eq  // eq = none
  41a440:	add	x2, x2, #0x60
  41a444:	cmp	x0, x2
  41a448:	csinc	w0, w1, wzr, ne  // ne = any
  41a44c:	strb	w0, [x19, #20]
  41a450:	cbz	w0, 41a45c <ferror@plt+0x17b8c>
  41a454:	strb	wzr, [x19, #18]
  41a458:	cbz	w0, 41a3d8 <ferror@plt+0x17b08>
  41a45c:	ldrb	w0, [x19, #24]
  41a460:	add	w0, w0, #0x1
  41a464:	strb	w0, [x19, #24]
  41a468:	mov	w2, #0x0                   	// #0
  41a46c:	mov	x1, #0x0                   	// #0
  41a470:	mov	x0, x19
  41a474:	bl	430928 <ferror@plt+0x2e058>
  41a478:	ldrb	w0, [x19, #24]
  41a47c:	sub	w0, w0, #0x1
  41a480:	strb	w0, [x19, #24]
  41a484:	strb	w20, [x19, #18]
  41a488:	ldr	x1, [x19, #1312]
  41a48c:	ldr	x2, [x19, #1328]
  41a490:	sub	x2, x2, x1
  41a494:	mov	x0, x19
  41a498:	bl	4308c4 <ferror@plt+0x2dff4>
  41a49c:	ldrb	w0, [x19, #24]
  41a4a0:	add	w0, w0, #0x1
  41a4a4:	strb	w0, [x19, #24]
  41a4a8:	ldp	x19, x20, [sp, #16]
  41a4ac:	ldp	x29, x30, [sp], #32
  41a4b0:	ret
  41a4b4:	stp	x29, x30, [sp, #-32]!
  41a4b8:	mov	x29, sp
  41a4bc:	str	x19, [sp, #16]
  41a4c0:	mov	x19, x0
  41a4c4:	ldrb	w0, [x0, #1160]
  41a4c8:	cbz	w0, 41a500 <ferror@plt+0x17c30>
  41a4cc:	ldrb	w0, [x19, #32]
  41a4d0:	cbnz	w0, 41a4e0 <ferror@plt+0x17c10>
  41a4d4:	ldrb	w0, [x19, #24]
  41a4d8:	sub	w0, w0, #0x1
  41a4dc:	strb	w0, [x19, #24]
  41a4e0:	ldr	x1, [x19, #144]
  41a4e4:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x19094>
  41a4e8:	add	x0, x0, #0x900
  41a4ec:	cmp	x1, x0
  41a4f0:	b.eq	41a510 <ferror@plt+0x17c40>  // b.none
  41a4f4:	mov	x0, x19
  41a4f8:	bl	4308fc <ferror@plt+0x2e02c>
  41a4fc:	b	41a510 <ferror@plt+0x17c40>
  41a500:	ldrb	w0, [x19, #32]
  41a504:	cmp	w0, #0x0
  41a508:	ccmp	w1, #0x0, #0x4, eq  // eq = none
  41a50c:	b.ne	41a53c <ferror@plt+0x17c6c>  // b.any
  41a510:	ldrb	w0, [x19, #1123]
  41a514:	cmp	w0, #0x0
  41a518:	cset	w0, eq  // eq = none
  41a51c:	strb	w0, [x19, #21]
  41a520:	strb	wzr, [x19, #16]
  41a524:	strb	wzr, [x19, #20]
  41a528:	strb	wzr, [x19, #19]
  41a52c:	str	xzr, [x19, #144]
  41a530:	ldr	x19, [sp, #16]
  41a534:	ldp	x29, x30, [sp], #32
  41a538:	ret
  41a53c:	mov	x0, x19
  41a540:	bl	4191a4 <ferror@plt+0x168d4>
  41a544:	ldr	w0, [x19, #500]
  41a548:	cbnz	w0, 41a510 <ferror@plt+0x17c40>
  41a54c:	add	x0, x19, #0x1c8
  41a550:	str	x0, [x19, #488]
  41a554:	ldr	x0, [x19, #472]
  41a558:	str	x0, [x19, #448]
  41a55c:	b	41a510 <ferror@plt+0x17c40>
  41a560:	stp	x29, x30, [sp, #-48]!
  41a564:	mov	x29, sp
  41a568:	stp	x19, x20, [sp, #16]
  41a56c:	stp	x21, x22, [sp, #32]
  41a570:	mov	x22, x0
  41a574:	mov	x19, x1
  41a578:	mov	x20, x2
  41a57c:	cbnz	x1, 41a5d8 <ferror@plt+0x17d08>
  41a580:	mov	x0, x20
  41a584:	ldp	x19, x20, [sp, #16]
  41a588:	ldp	x21, x22, [sp, #32]
  41a58c:	ldp	x29, x30, [sp], #48
  41a590:	ret
  41a594:	mov	x2, x20
  41a598:	ldr	x1, [x19, #24]
  41a59c:	mov	x0, x22
  41a5a0:	bl	41a560 <ferror@plt+0x17c90>
  41a5a4:	mov	x20, x0
  41a5a8:	ldr	x21, [x20]
  41a5ac:	mov	x0, x21
  41a5b0:	bl	4022b0 <strlen@plt>
  41a5b4:	mov	w2, w0
  41a5b8:	mov	x1, x21
  41a5bc:	mov	x0, x22
  41a5c0:	bl	4232a0 <ferror@plt+0x209d0>
  41a5c4:	str	x0, [x19, #8]
  41a5c8:	ldr	x0, [x20], #8
  41a5cc:	bl	402690 <free@plt>
  41a5d0:	ldr	x19, [x19]
  41a5d4:	cbz	x19, 41a580 <ferror@plt+0x17cb0>
  41a5d8:	ldrb	w0, [x19, #16]
  41a5dc:	cbz	w0, 41a5a8 <ferror@plt+0x17cd8>
  41a5e0:	b	41a594 <ferror@plt+0x17cc4>
  41a5e4:	stp	x29, x30, [sp, #-48]!
  41a5e8:	mov	x29, sp
  41a5ec:	stp	x19, x20, [sp, #16]
  41a5f0:	mov	x20, x0
  41a5f4:	add	x3, sp, #0x28
  41a5f8:	mov	x2, #0x0                   	// #0
  41a5fc:	add	x1, sp, #0x2c
  41a600:	bl	419954 <ferror@plt+0x17084>
  41a604:	cbz	x0, 41a630 <ferror@plt+0x17d60>
  41a608:	mov	x19, x0
  41a60c:	ldr	w2, [sp, #44]
  41a610:	mov	x1, x0
  41a614:	mov	x0, x20
  41a618:	bl	422d64 <ferror@plt+0x20494>
  41a61c:	tbnz	w0, #31, 41a63c <ferror@plt+0x17d6c>
  41a620:	cmp	w0, #0x0
  41a624:	b.gt	41a658 <ferror@plt+0x17d88>
  41a628:	mov	x0, x19
  41a62c:	bl	402690 <free@plt>
  41a630:	ldp	x19, x20, [sp, #16]
  41a634:	ldp	x29, x30, [sp], #48
  41a638:	ret
  41a63c:	mov	x3, x19
  41a640:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41a644:	add	x2, x2, #0x2a8
  41a648:	mov	w1, #0x0                   	// #0
  41a64c:	mov	x0, x20
  41a650:	bl	41c9fc <ferror@plt+0x1a12c>
  41a654:	b	41a628 <ferror@plt+0x17d58>
  41a658:	mov	x3, x19
  41a65c:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41a660:	add	x2, x2, #0x2c8
  41a664:	mov	w1, #0x0                   	// #0
  41a668:	mov	x0, x20
  41a66c:	bl	41c9fc <ferror@plt+0x1a12c>
  41a670:	mov	x0, x20
  41a674:	bl	42ea88 <ferror@plt+0x2c1b8>
  41a678:	ldrb	w0, [x0, #4]
  41a67c:	cmp	w0, #0x16
  41a680:	b.eq	41a628 <ferror@plt+0x17d58>  // b.none
  41a684:	mov	w1, #0x1                   	// #1
  41a688:	mov	x0, x20
  41a68c:	bl	42b95c <ferror@plt+0x2908c>
  41a690:	mov	w3, #0x0                   	// #0
  41a694:	mov	w2, #0x0                   	// #0
  41a698:	mov	w1, #0x0                   	// #0
  41a69c:	mov	x0, x20
  41a6a0:	bl	419cec <ferror@plt+0x1741c>
  41a6a4:	b	41a628 <ferror@plt+0x17d58>
  41a6a8:	stp	x29, x30, [sp, #-32]!
  41a6ac:	mov	x29, sp
  41a6b0:	str	x19, [sp, #16]
  41a6b4:	mov	x19, x0
  41a6b8:	ldr	x0, [x0, #40]
  41a6bc:	ldr	w0, [x0, #48]
  41a6c0:	cmp	w0, #0x1
  41a6c4:	b.eq	41a6f8 <ferror@plt+0x17e28>  // b.none
  41a6c8:	mov	w1, #0x0                   	// #0
  41a6cc:	mov	x0, x19
  41a6d0:	bl	41911c <ferror@plt+0x1684c>
  41a6d4:	mov	x0, x19
  41a6d8:	bl	4191a4 <ferror@plt+0x168d4>
  41a6dc:	mov	w2, #0x0                   	// #0
  41a6e0:	mov	w1, #0x1                   	// #1
  41a6e4:	mov	x0, x19
  41a6e8:	bl	422be0 <ferror@plt+0x20310>
  41a6ec:	ldr	x19, [sp, #16]
  41a6f0:	ldp	x29, x30, [sp], #32
  41a6f4:	ret
  41a6f8:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41a6fc:	add	x2, x2, #0x2e8
  41a700:	mov	w1, #0x0                   	// #0
  41a704:	mov	x0, x19
  41a708:	bl	41c9fc <ferror@plt+0x1a12c>
  41a70c:	b	41a6ec <ferror@plt+0x17e1c>
  41a710:	stp	x29, x30, [sp, #-64]!
  41a714:	mov	x29, sp
  41a718:	stp	x19, x20, [sp, #16]
  41a71c:	stp	x21, x22, [sp, #32]
  41a720:	str	x23, [sp, #48]
  41a724:	mov	x19, x0
  41a728:	bl	418fd0 <ferror@plt+0x16700>
  41a72c:	cbz	x0, 41a780 <ferror@plt+0x17eb0>
  41a730:	ldr	w2, [x0, #8]
  41a734:	add	w1, w2, #0x2
  41a738:	add	x1, x1, #0xf
  41a73c:	and	x1, x1, #0x1fffffff0
  41a740:	sub	sp, sp, x1
  41a744:	mov	x20, sp
  41a748:	ldr	x5, [x0, #16]
  41a74c:	ldrb	w0, [x5]
  41a750:	cmp	w0, #0x4c
  41a754:	cset	x1, eq  // eq = none
  41a758:	add	x1, x1, #0x1
  41a75c:	add	x1, x5, x1
  41a760:	mov	w2, w2
  41a764:	sub	x2, x2, #0x1
  41a768:	add	x5, x5, x2
  41a76c:	cmp	x1, x5
  41a770:	b.cs	41a7f0 <ferror@plt+0x17f20>  // b.hs, b.nlast
  41a774:	mov	x3, x20
  41a778:	mov	w6, #0x5c                  	// #92
  41a77c:	b	41a7cc <ferror@plt+0x17efc>
  41a780:	ldr	x0, [x19, #448]
  41a784:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x19094>
  41a788:	add	x4, x4, #0x320
  41a78c:	mov	w3, #0x0                   	// #0
  41a790:	ldur	w2, [x0, #-24]
  41a794:	mov	w1, #0x3                   	// #3
  41a798:	mov	x0, x19
  41a79c:	bl	41cbe8 <ferror@plt+0x1a318>
  41a7a0:	mov	w1, #0x0                   	// #0
  41a7a4:	mov	x0, x19
  41a7a8:	bl	41911c <ferror@plt+0x1684c>
  41a7ac:	mov	x0, x19
  41a7b0:	bl	4191a4 <ferror@plt+0x168d4>
  41a7b4:	b	41a874 <ferror@plt+0x17fa4>
  41a7b8:	mov	x1, x2
  41a7bc:	ldrb	w2, [x1], #1
  41a7c0:	strb	w2, [x3], #1
  41a7c4:	cmp	x5, x1
  41a7c8:	b.ls	41a7f4 <ferror@plt+0x17f24>  // b.plast
  41a7cc:	ldrb	w4, [x1]
  41a7d0:	mov	x2, x1
  41a7d4:	cmp	w4, #0x5c
  41a7d8:	b.ne	41a7b8 <ferror@plt+0x17ee8>  // b.any
  41a7dc:	ldrb	w0, [x1, #1]
  41a7e0:	cmp	w0, #0x22
  41a7e4:	ccmp	w0, w6, #0x4, ne  // ne = any
  41a7e8:	cinc	x2, x1, eq  // eq = none
  41a7ec:	b	41a7b8 <ferror@plt+0x17ee8>
  41a7f0:	mov	x3, x20
  41a7f4:	strb	wzr, [x3]
  41a7f8:	mov	w1, #0x0                   	// #0
  41a7fc:	mov	x0, x19
  41a800:	bl	41911c <ferror@plt+0x1684c>
  41a804:	mov	x0, x19
  41a808:	bl	4191a4 <ferror@plt+0x168d4>
  41a80c:	mov	x0, #0x20                  	// #32
  41a810:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  41a814:	mov	x21, x0
  41a818:	stp	xzr, xzr, [x0]
  41a81c:	stp	xzr, xzr, [x0, #16]
  41a820:	mov	x0, x20
  41a824:	bl	4022b0 <strlen@plt>
  41a828:	add	x0, x0, #0x1
  41a82c:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  41a830:	mov	x22, x0
  41a834:	str	x0, [x21, #8]
  41a838:	mov	x1, x20
  41a83c:	bl	402710 <strcpy@plt>
  41a840:	ldr	x0, [x19, #1400]
  41a844:	str	x0, [x21]
  41a848:	mov	x1, x22
  41a84c:	mov	x0, x19
  41a850:	bl	42429c <ferror@plt+0x219cc>
  41a854:	mov	x20, x0
  41a858:	ldrb	w0, [x0, #18]
  41a85c:	tst	x0, #0x3
  41a860:	b.ne	41a88c <ferror@plt+0x17fbc>  // b.any
  41a864:	ldrb	w0, [x21, #28]
  41a868:	orr	w0, w0, #0x4
  41a86c:	strb	w0, [x21, #28]
  41a870:	str	x21, [x19, #1400]
  41a874:	mov	sp, x29
  41a878:	ldp	x19, x20, [sp, #16]
  41a87c:	ldp	x21, x22, [sp, #32]
  41a880:	ldr	x23, [sp, #48]
  41a884:	ldp	x29, x30, [sp], #64
  41a888:	ret
  41a88c:	mov	x1, x20
  41a890:	mov	x0, x19
  41a894:	bl	42eb40 <ferror@plt+0x2c270>
  41a898:	mov	x23, x0
  41a89c:	bl	4022b0 <strlen@plt>
  41a8a0:	mov	x22, x0
  41a8a4:	add	x0, x0, #0x2
  41a8a8:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  41a8ac:	str	x0, [x21, #16]
  41a8b0:	mov	w2, #0xa                   	// #10
  41a8b4:	strb	w2, [x0, x22]
  41a8b8:	add	x1, x0, x22
  41a8bc:	strb	wzr, [x1, #1]
  41a8c0:	ldr	x1, [x20, #24]
  41a8c4:	ldr	w1, [x1, #8]
  41a8c8:	str	w1, [x21, #24]
  41a8cc:	ldr	x1, [x20, #24]
  41a8d0:	ldrb	w2, [x1, #19]
  41a8d4:	ubfx	x2, x2, #4, #1
  41a8d8:	ldrb	w1, [x21, #28]
  41a8dc:	bfxil	w1, w2, #0, #1
  41a8e0:	strb	w1, [x21, #28]
  41a8e4:	ldr	x2, [x20, #24]
  41a8e8:	ldrb	w2, [x2, #19]
  41a8ec:	ubfx	x2, x2, #5, #1
  41a8f0:	bfi	w1, w2, #1, #1
  41a8f4:	strb	w1, [x21, #28]
  41a8f8:	mov	x2, x22
  41a8fc:	mov	x1, x23
  41a900:	bl	402260 <memcpy@plt>
  41a904:	b	41a870 <ferror@plt+0x17fa0>
  41a908:	stp	x29, x30, [sp, #-32]!
  41a90c:	mov	x29, sp
  41a910:	str	x19, [sp, #16]
  41a914:	mov	x19, x0
  41a918:	ldr	x0, [x0, #40]
  41a91c:	ldr	w0, [x0, #48]
  41a920:	cmp	w0, #0x1
  41a924:	b.eq	41a950 <ferror@plt+0x18080>  // b.none
  41a928:	mov	w1, #0x0                   	// #0
  41a92c:	mov	x0, x19
  41a930:	bl	41911c <ferror@plt+0x1684c>
  41a934:	ldr	x0, [x19]
  41a938:	ldr	x1, [x0, #80]
  41a93c:	mov	x0, x19
  41a940:	bl	422790 <ferror@plt+0x1fec0>
  41a944:	ldr	x19, [sp, #16]
  41a948:	ldp	x29, x30, [sp], #32
  41a94c:	ret
  41a950:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41a954:	add	x2, x2, #0x348
  41a958:	mov	w1, #0x0                   	// #0
  41a95c:	mov	x0, x19
  41a960:	bl	41c9fc <ferror@plt+0x1a12c>
  41a964:	b	41a928 <ferror@plt+0x18058>
  41a968:	stp	x29, x30, [sp, #-32]!
  41a96c:	mov	x29, sp
  41a970:	stp	x19, x20, [sp, #16]
  41a974:	mov	x19, x0
  41a978:	mov	x20, x1
  41a97c:	cbnz	x0, 41a9c4 <ferror@plt+0x180f4>
  41a980:	mov	x0, x20
  41a984:	ldp	x19, x20, [sp, #16]
  41a988:	ldp	x29, x30, [sp], #32
  41a98c:	ret
  41a990:	mov	x1, x20
  41a994:	ldr	x0, [x19, #24]
  41a998:	bl	41a968 <ferror@plt+0x18098>
  41a99c:	ldr	x3, [x19, #8]
  41a9a0:	ldr	w1, [x3, #8]
  41a9a4:	mov	x20, x0
  41a9a8:	add	w2, w1, #0x1
  41a9ac:	mov	w1, w1
  41a9b0:	ldr	x0, [x3]
  41a9b4:	bl	447114 <_obstack_memory_used@@Base+0x1a8>
  41a9b8:	str	x0, [x20], #8
  41a9bc:	ldr	x19, [x19]
  41a9c0:	cbz	x19, 41a980 <ferror@plt+0x180b0>
  41a9c4:	ldrb	w1, [x19, #16]
  41a9c8:	mov	x0, x20
  41a9cc:	cbz	w1, 41a99c <ferror@plt+0x180cc>
  41a9d0:	b	41a990 <ferror@plt+0x180c0>
  41a9d4:	stp	x29, x30, [sp, #-64]!
  41a9d8:	mov	x29, sp
  41a9dc:	stp	x19, x20, [sp, #16]
  41a9e0:	stp	x21, x22, [sp, #32]
  41a9e4:	stp	x23, x24, [sp, #48]
  41a9e8:	mov	x22, x0
  41a9ec:	mov	x20, x1
  41a9f0:	mov	x21, x2
  41a9f4:	and	w24, w3, #0xff
  41a9f8:	cbz	x1, 41aa8c <ferror@plt+0x181bc>
  41a9fc:	mov	x0, x1
  41aa00:	bl	4022b0 <strlen@plt>
  41aa04:	mov	w2, w0
  41aa08:	mov	x1, x20
  41aa0c:	mov	x0, x22
  41aa10:	bl	4232a0 <ferror@plt+0x209d0>
  41aa14:	mov	x23, x0
  41aa18:	ldr	x3, [x22, #896]
  41aa1c:	cbz	x3, 41aa34 <ferror@plt+0x18164>
  41aa20:	ldr	x0, [x3, #8]
  41aa24:	cmp	x23, x0
  41aa28:	b.eq	41ab90 <ferror@plt+0x182c0>  // b.none
  41aa2c:	ldr	x3, [x3]
  41aa30:	cbnz	x3, 41aa20 <ferror@plt+0x18150>
  41aa34:	mov	x1, #0x20                  	// #32
  41aa38:	mov	x0, x22
  41aa3c:	bl	427e9c <ferror@plt+0x255cc>
  41aa40:	mov	x3, x0
  41aa44:	stp	xzr, xzr, [x0]
  41aa48:	stp	xzr, xzr, [x0, #16]
  41aa4c:	ldr	x0, [x22, #896]
  41aa50:	str	x0, [x3]
  41aa54:	str	x3, [x22, #896]
  41aa58:	str	x23, [x3, #8]
  41aa5c:	mov	w0, #0x1                   	// #1
  41aa60:	strb	w0, [x3, #16]
  41aa64:	strb	w24, [x3, #19]
  41aa68:	b	41aba4 <ferror@plt+0x182d4>
  41aa6c:	mov	x3, x20
  41aa70:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41aa74:	add	x2, x2, #0x368
  41aa78:	mov	w1, #0x4                   	// #4
  41aa7c:	mov	x0, x22
  41aa80:	bl	41c9fc <ferror@plt+0x1a12c>
  41aa84:	mov	x0, #0x0                   	// #0
  41aa88:	b	41ab7c <ferror@plt+0x182ac>
  41aa8c:	add	x19, x0, #0x380
  41aa90:	cbnz	w24, 41aaf4 <ferror@plt+0x18224>
  41aa94:	mov	x0, x21
  41aa98:	bl	4022b0 <strlen@plt>
  41aa9c:	mov	w2, w0
  41aaa0:	mov	x1, x21
  41aaa4:	mov	x0, x22
  41aaa8:	bl	4232a0 <ferror@plt+0x209d0>
  41aaac:	mov	x23, x0
  41aab0:	ldr	x1, [x19]
  41aab4:	cbz	x1, 41aacc <ferror@plt+0x181fc>
  41aab8:	ldr	x0, [x1, #8]
  41aabc:	cmp	x23, x0
  41aac0:	b.eq	41ab50 <ferror@plt+0x18280>  // b.none
  41aac4:	ldr	x1, [x1]
  41aac8:	cbnz	x1, 41aab8 <ferror@plt+0x181e8>
  41aacc:	mov	x1, #0x20                  	// #32
  41aad0:	mov	x0, x22
  41aad4:	bl	427e9c <ferror@plt+0x255cc>
  41aad8:	stp	xzr, xzr, [x0]
  41aadc:	stp	xzr, xzr, [x0, #16]
  41aae0:	ldr	x1, [x19]
  41aae4:	str	x1, [x0]
  41aae8:	str	x0, [x19]
  41aaec:	str	x23, [x0, #8]
  41aaf0:	b	41ab7c <ferror@plt+0x182ac>
  41aaf4:	mov	x3, x2
  41aaf8:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41aafc:	add	x2, x2, #0x3b0
  41ab00:	mov	w1, #0x4                   	// #4
  41ab04:	bl	41c9fc <ferror@plt+0x1a12c>
  41ab08:	mov	x0, x20
  41ab0c:	b	41ab7c <ferror@plt+0x182ac>
  41ab10:	ldr	x3, [x23]
  41ab14:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41ab18:	add	x2, x2, #0x3f0
  41ab1c:	mov	w1, #0x4                   	// #4
  41ab20:	mov	x0, x22
  41ab24:	bl	41c9fc <ferror@plt+0x1a12c>
  41ab28:	mov	x0, #0x0                   	// #0
  41ab2c:	b	41ab7c <ferror@plt+0x182ac>
  41ab30:	mov	x3, x21
  41ab34:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41ab38:	add	x2, x2, #0x458
  41ab3c:	mov	w1, #0x4                   	// #4
  41ab40:	mov	x0, x22
  41ab44:	bl	41c9fc <ferror@plt+0x1a12c>
  41ab48:	mov	x0, x20
  41ab4c:	b	41ab7c <ferror@plt+0x182ac>
  41ab50:	ldrb	w0, [x1, #16]
  41ab54:	cbnz	w0, 41ab10 <ferror@plt+0x18240>
  41ab58:	cbz	x20, 41ab30 <ferror@plt+0x18260>
  41ab5c:	mov	x4, x21
  41ab60:	mov	x3, x20
  41ab64:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41ab68:	add	x2, x2, #0x430
  41ab6c:	mov	w1, #0x4                   	// #4
  41ab70:	mov	x0, x22
  41ab74:	bl	41c9fc <ferror@plt+0x1a12c>
  41ab78:	mov	x0, #0x0                   	// #0
  41ab7c:	ldp	x19, x20, [sp, #16]
  41ab80:	ldp	x21, x22, [sp, #32]
  41ab84:	ldp	x23, x24, [sp, #48]
  41ab88:	ldp	x29, x30, [sp], #64
  41ab8c:	ret
  41ab90:	ldrb	w0, [x3, #16]
  41ab94:	cbz	w0, 41ab10 <ferror@plt+0x18240>
  41ab98:	ldrb	w0, [x3, #19]
  41ab9c:	cmp	w0, w24
  41aba0:	b.ne	41aa6c <ferror@plt+0x1819c>  // b.any
  41aba4:	add	x19, x3, #0x18
  41aba8:	b	41aa94 <ferror@plt+0x181c4>
  41abac:	stp	x29, x30, [sp, #-32]!
  41abb0:	mov	x29, sp
  41abb4:	str	x19, [sp, #16]
  41abb8:	mov	x19, x3
  41abbc:	mov	w3, #0x0                   	// #0
  41abc0:	bl	41a9d4 <ferror@plt+0x18104>
  41abc4:	mov	w1, #0x1                   	// #1
  41abc8:	strb	w1, [x0, #17]
  41abcc:	str	x19, [x0, #24]
  41abd0:	ldr	x19, [sp, #16]
  41abd4:	ldp	x29, x30, [sp], #32
  41abd8:	ret
  41abdc:	stp	x29, x30, [sp, #-96]!
  41abe0:	mov	x29, sp
  41abe4:	stp	x19, x20, [sp, #16]
  41abe8:	stp	x21, x22, [sp, #32]
  41abec:	mov	x19, x0
  41abf0:	str	wzr, [sp, #92]
  41abf4:	ldrb	w1, [x0, #24]
  41abf8:	add	w1, w1, #0x1
  41abfc:	strb	w1, [x0, #24]
  41ac00:	add	x1, sp, #0x5c
  41ac04:	bl	42eb2c <ferror@plt+0x2c25c>
  41ac08:	mov	x21, x0
  41ac0c:	ldp	x0, x1, [x0]
  41ac10:	stp	x0, x1, [sp, #64]
  41ac14:	ldr	x0, [x21, #16]
  41ac18:	str	x0, [sp, #80]
  41ac1c:	ldrb	w0, [x21, #4]
  41ac20:	cmp	w0, #0x35
  41ac24:	b.eq	41ac4c <ferror@plt+0x1837c>  // b.none
  41ac28:	ldr	x0, [x19, #960]
  41ac2c:	cbnz	x0, 41add0 <ferror@plt+0x18500>
  41ac30:	ldrb	w0, [x19, #24]
  41ac34:	sub	w0, w0, #0x1
  41ac38:	strb	w0, [x19, #24]
  41ac3c:	ldp	x19, x20, [sp, #16]
  41ac40:	ldp	x21, x22, [sp, #32]
  41ac44:	ldp	x29, x30, [sp], #96
  41ac48:	ret
  41ac4c:	ldr	x20, [x19, #896]
  41ac50:	ldr	x1, [x21, #8]
  41ac54:	cbz	x20, 41ac28 <ferror@plt+0x18358>
  41ac58:	str	x23, [sp, #48]
  41ac5c:	ldr	x0, [x20, #8]
  41ac60:	cmp	x1, x0
  41ac64:	b.eq	41adfc <ferror@plt+0x1852c>  // b.none
  41ac68:	ldr	x20, [x20]
  41ac6c:	cbnz	x20, 41ac5c <ferror@plt+0x1838c>
  41ac70:	ldr	x23, [sp, #48]
  41ac74:	b	41ac28 <ferror@plt+0x18358>
  41ac78:	ldrb	w23, [x20, #19]
  41ac7c:	cbz	w23, 41ac8c <ferror@plt+0x183bc>
  41ac80:	ldrb	w0, [x19, #24]
  41ac84:	sub	w0, w0, #0x1
  41ac88:	strb	w0, [x19, #24]
  41ac8c:	mov	x0, x19
  41ac90:	bl	42ea88 <ferror@plt+0x2c1b8>
  41ac94:	mov	x22, x0
  41ac98:	ldrb	w0, [x0, #4]
  41ac9c:	cmp	w0, #0x35
  41aca0:	b.eq	41acc4 <ferror@plt+0x183f4>  // b.none
  41aca4:	cbz	w23, 41acb4 <ferror@plt+0x183e4>
  41aca8:	ldrb	w0, [x19, #24]
  41acac:	add	w0, w0, #0x1
  41acb0:	strb	w0, [x19, #24]
  41acb4:	ldr	x0, [x19, #960]
  41acb8:	cbnz	x0, 41ad3c <ferror@plt+0x1846c>
  41acbc:	ldr	x23, [sp, #48]
  41acc0:	b	41ac30 <ferror@plt+0x18360>
  41acc4:	ldr	x20, [x20, #24]
  41acc8:	ldr	x1, [x22, #8]
  41accc:	cbz	x20, 41aca4 <ferror@plt+0x183d4>
  41acd0:	ldr	x0, [x20, #8]
  41acd4:	cmp	x1, x0
  41acd8:	b.eq	41ade8 <ferror@plt+0x18518>  // b.none
  41acdc:	ldr	x20, [x20]
  41ace0:	cbnz	x20, 41acd0 <ferror@plt+0x18400>
  41ace4:	b	41aca4 <ferror@plt+0x183d4>
  41ace8:	ldr	x3, [x19, #904]
  41acec:	cbz	x3, 41ad00 <ferror@plt+0x18430>
  41acf0:	mov	w2, #0x0                   	// #0
  41acf4:	mov	x1, x21
  41acf8:	mov	x0, x19
  41acfc:	blr	x3
  41ad00:	ldrb	w0, [x20, #19]
  41ad04:	cbz	w0, 41ad14 <ferror@plt+0x18444>
  41ad08:	ldrb	w0, [x19, #24]
  41ad0c:	sub	w0, w0, #0x1
  41ad10:	strb	w0, [x19, #24]
  41ad14:	ldr	x1, [x20, #24]
  41ad18:	mov	x0, x19
  41ad1c:	blr	x1
  41ad20:	ldrb	w0, [x20, #19]
  41ad24:	cbz	w0, 41ade0 <ferror@plt+0x18510>
  41ad28:	ldrb	w0, [x19, #24]
  41ad2c:	add	w0, w0, #0x1
  41ad30:	strb	w0, [x19, #24]
  41ad34:	ldr	x23, [sp, #48]
  41ad38:	b	41ac30 <ferror@plt+0x18360>
  41ad3c:	ldr	x0, [x19, #136]
  41ad40:	ldr	x0, [x0, #8]
  41ad44:	cbz	x0, 41adac <ferror@plt+0x184dc>
  41ad48:	mov	x0, #0x30                  	// #48
  41ad4c:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  41ad50:	mov	x2, x0
  41ad54:	ldr	x1, [sp, #64]
  41ad58:	str	x1, [x0]
  41ad5c:	ldr	x0, [sp, #72]
  41ad60:	str	x0, [x2, #8]
  41ad64:	ldr	x0, [sp, #80]
  41ad68:	str	x0, [x2, #16]
  41ad6c:	lsr	x1, x1, #48
  41ad70:	orr	w1, w1, #0x400
  41ad74:	strh	w1, [x2, #6]
  41ad78:	ldp	x4, x5, [x22]
  41ad7c:	stp	x4, x5, [x2, #24]
  41ad80:	ldr	x1, [x22, #16]
  41ad84:	str	x1, [x2, #40]
  41ad88:	ldrh	w1, [x2, #30]
  41ad8c:	orr	w1, w1, #0x400
  41ad90:	strh	w1, [x2, #30]
  41ad94:	mov	w3, #0x2                   	// #2
  41ad98:	mov	x1, #0x0                   	// #0
  41ad9c:	mov	x0, x19
  41ada0:	bl	42b56c <ferror@plt+0x28c9c>
  41ada4:	ldr	x23, [sp, #48]
  41ada8:	b	41adbc <ferror@plt+0x184ec>
  41adac:	mov	w1, #0x2                   	// #2
  41adb0:	ldr	x23, [sp, #48]
  41adb4:	mov	x0, x19
  41adb8:	bl	42b95c <ferror@plt+0x2908c>
  41adbc:	ldr	x2, [x19, #960]
  41adc0:	ldr	w1, [x19, #48]
  41adc4:	mov	x0, x19
  41adc8:	blr	x2
  41adcc:	b	41ac30 <ferror@plt+0x18360>
  41add0:	mov	w1, #0x1                   	// #1
  41add4:	b	41adb4 <ferror@plt+0x184e4>
  41add8:	ldr	x23, [sp, #48]
  41addc:	b	41ac30 <ferror@plt+0x18360>
  41ade0:	ldr	x23, [sp, #48]
  41ade4:	b	41ac30 <ferror@plt+0x18360>
  41ade8:	cbz	w23, 41ae04 <ferror@plt+0x18534>
  41adec:	ldrb	w0, [x19, #24]
  41adf0:	add	w0, w0, #0x1
  41adf4:	strb	w0, [x19, #24]
  41adf8:	b	41ae04 <ferror@plt+0x18534>
  41adfc:	ldrb	w0, [x20, #16]
  41ae00:	cbnz	w0, 41ac78 <ferror@plt+0x183a8>
  41ae04:	ldrb	w0, [x20, #18]
  41ae08:	cbz	w0, 41ace8 <ferror@plt+0x18418>
  41ae0c:	ldr	w0, [sp, #92]
  41ae10:	str	w0, [x19, #152]
  41ae14:	mov	w0, #0x51                  	// #81
  41ae18:	strb	w0, [x19, #156]
  41ae1c:	ldrh	w0, [x21, #6]
  41ae20:	strh	w0, [x19, #158]
  41ae24:	ldr	w0, [x20, #24]
  41ae28:	str	w0, [x19, #160]
  41ae2c:	mov	w0, #0x1                   	// #1
  41ae30:	strb	w0, [x19, #32]
  41ae34:	ldrb	w0, [x20, #19]
  41ae38:	strb	w0, [x19, #33]
  41ae3c:	ldrb	w0, [x20, #19]
  41ae40:	cbnz	w0, 41add8 <ferror@plt+0x18508>
  41ae44:	ldrb	w0, [x19, #24]
  41ae48:	add	w0, w0, #0x1
  41ae4c:	strb	w0, [x19, #24]
  41ae50:	ldr	x23, [sp, #48]
  41ae54:	b	41ac30 <ferror@plt+0x18360>
  41ae58:	stp	x29, x30, [sp, #-48]!
  41ae5c:	mov	x29, sp
  41ae60:	stp	x19, x20, [sp, #16]
  41ae64:	str	x21, [sp, #32]
  41ae68:	mov	x19, x0
  41ae6c:	ldr	x20, [x0]
  41ae70:	ldr	x21, [x20, #96]
  41ae74:	cbz	x21, 41aec4 <ferror@plt+0x185f4>
  41ae78:	ldrb	w0, [x21, #25]
  41ae7c:	cbnz	w0, 41ae88 <ferror@plt+0x185b8>
  41ae80:	ldrb	w0, [x19, #1140]
  41ae84:	cbnz	w0, 41aed8 <ferror@plt+0x18608>
  41ae88:	ldr	x0, [x21]
  41ae8c:	cbz	x0, 41aeec <ferror@plt+0x1861c>
  41ae90:	ldr	x0, [x21]
  41ae94:	str	x0, [x20, #96]
  41ae98:	ldrb	w0, [x21, #25]
  41ae9c:	strb	w0, [x19, #18]
  41aea0:	ldr	x0, [x19, #816]
  41aea4:	cmp	x0, x21
  41aea8:	b.cs	41af08 <ferror@plt+0x18638>  // b.hs, b.nlast
  41aeac:	ldr	x0, [x19, #840]
  41aeb0:	cmp	x0, x21
  41aeb4:	b.ls	41af08 <ferror@plt+0x18638>  // b.plast
  41aeb8:	str	x21, [x19, #824]
  41aebc:	str	x21, [x19, #832]
  41aec0:	b	41af14 <ferror@plt+0x18644>
  41aec4:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41aec8:	add	x2, x2, #0x480
  41aecc:	mov	w1, #0x3                   	// #3
  41aed0:	bl	41c9fc <ferror@plt+0x1a12c>
  41aed4:	b	41af14 <ferror@plt+0x18644>
  41aed8:	mov	w2, #0x8                   	// #8
  41aedc:	mov	w1, #0x0                   	// #0
  41aee0:	mov	x0, x19
  41aee4:	bl	4190a4 <ferror@plt+0x167d4>
  41aee8:	b	41ae88 <ferror@plt+0x185b8>
  41aeec:	ldr	x0, [x21, #16]
  41aef0:	cbz	x0, 41ae90 <ferror@plt+0x185c0>
  41aef4:	mov	w0, #0x1                   	// #1
  41aef8:	strb	w0, [x19, #440]
  41aefc:	ldr	x0, [x21, #16]
  41af00:	str	x0, [x19, #424]
  41af04:	b	41ae90 <ferror@plt+0x185c0>
  41af08:	mov	x1, x21
  41af0c:	add	x0, x19, #0x328
  41af10:	bl	446eec <_obstack_free@@Base>
  41af14:	ldp	x19, x20, [sp, #16]
  41af18:	ldr	x21, [sp, #32]
  41af1c:	ldp	x29, x30, [sp], #48
  41af20:	ret
  41af24:	stp	x29, x30, [sp, #-240]!
  41af28:	mov	x29, sp
  41af2c:	stp	x19, x20, [sp, #16]
  41af30:	stp	x21, x22, [sp, #32]
  41af34:	stp	x23, x24, [sp, #48]
  41af38:	mov	x19, x0
  41af3c:	mov	w21, w1
  41af40:	ldrb	w22, [x0, #25]
  41af44:	ldrb	w23, [x0, #27]
  41af48:	cbz	w23, 41af50 <ferror@plt+0x18680>
  41af4c:	strb	wzr, [x0, #24]
  41af50:	cbz	w22, 41af64 <ferror@plt+0x18694>
  41af54:	ldrb	w0, [x19, #1154]
  41af58:	cbnz	w0, 41afe0 <ferror@plt+0x18710>
  41af5c:	strb	wzr, [x19, #25]
  41af60:	strb	wzr, [x19, #24]
  41af64:	mov	w0, #0x1                   	// #1
  41af68:	strb	w0, [x19, #16]
  41af6c:	strb	wzr, [x19, #21]
  41af70:	mov	w0, #0x53                  	// #83
  41af74:	strb	w0, [x19, #156]
  41af78:	ldr	x0, [x19, #40]
  41af7c:	ldr	w0, [x0, #60]
  41af80:	str	w0, [x19, #48]
  41af84:	mov	x0, x19
  41af88:	bl	427bcc <ferror@plt+0x252fc>
  41af8c:	mov	x20, x0
  41af90:	ldrb	w0, [x0, #4]
  41af94:	cmp	w0, #0x35
  41af98:	b.eq	41aff8 <ferror@plt+0x18728>  // b.none
  41af9c:	cmp	w0, #0x37
  41afa0:	b.eq	41b0d0 <ferror@plt+0x18800>  // b.none
  41afa4:	cmp	w0, #0x16
  41afa8:	b.eq	41afc0 <ferror@plt+0x186f0>  // b.none
  41afac:	ldr	w0, [x19, #1116]
  41afb0:	cmp	w0, #0x15
  41afb4:	b.eq	41b2fc <ferror@plt+0x18a2c>  // b.none
  41afb8:	ldrb	w0, [x19, #18]
  41afbc:	cbz	w0, 41b24c <ferror@plt+0x1897c>
  41afc0:	str	xzr, [x19, #144]
  41afc4:	ldrb	w0, [x19, #1160]
  41afc8:	mov	w20, #0x1                   	// #1
  41afcc:	cbz	w0, 41b084 <ferror@plt+0x187b4>
  41afd0:	mov	x0, x19
  41afd4:	bl	41a370 <ferror@plt+0x17aa0>
  41afd8:	mov	w20, #0x1                   	// #1
  41afdc:	b	41b084 <ferror@plt+0x187b4>
  41afe0:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41afe4:	add	x2, x2, #0x498
  41afe8:	mov	w1, #0x2                   	// #2
  41afec:	mov	x0, x19
  41aff0:	bl	41c9fc <ferror@plt+0x1a12c>
  41aff4:	b	41af5c <ferror@plt+0x1868c>
  41aff8:	ldr	x0, [x20, #8]
  41affc:	ldrb	w1, [x0, #16]
  41b000:	tbz	w1, #0, 41afac <ferror@plt+0x186dc>
  41b004:	ldrb	w0, [x0, #16]
  41b008:	ubfx	x1, x0, #1, #7
  41b00c:	and	x20, x0, #0xfe
  41b010:	add	x20, x20, x1
  41b014:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x19094>
  41b018:	add	x0, x0, #0x900
  41b01c:	add	x20, x0, x20, lsl #3
  41b020:	ldrb	w0, [x20, #19]
  41b024:	tbz	w0, #1, 41b100 <ferror@plt+0x18830>
  41b028:	ldrb	w0, [x19, #1155]
  41b02c:	cbz	w0, 41b330 <ferror@plt+0x18a60>
  41b030:	ldrb	w0, [x19, #1244]
  41b034:	cbnz	w0, 41b044 <ferror@plt+0x18774>
  41b038:	cbnz	w21, 41b2fc <ferror@plt+0x18a2c>
  41b03c:	ldrb	w0, [x20, #19]
  41b040:	tbz	w0, #3, 41b2fc <ferror@plt+0x18a2c>
  41b044:	ldrb	w0, [x20, #19]
  41b048:	and	w0, w0, #0x4
  41b04c:	strb	w0, [x19, #19]
  41b050:	ldrb	w0, [x20, #19]
  41b054:	and	w0, w0, #0x4
  41b058:	strb	w0, [x19, #17]
  41b05c:	ldrb	w0, [x19, #18]
  41b060:	cbnz	w0, 41b358 <ferror@plt+0x18a88>
  41b064:	str	x20, [x19, #144]
  41b068:	ldrb	w0, [x19, #1160]
  41b06c:	cbnz	w0, 41b364 <ferror@plt+0x18a94>
  41b070:	ldr	x0, [x19, #144]
  41b074:	ldr	x1, [x0]
  41b078:	mov	x0, x19
  41b07c:	blr	x1
  41b080:	mov	w20, #0x1                   	// #1
  41b084:	mov	w1, w20
  41b088:	mov	x0, x19
  41b08c:	bl	41a4b4 <ferror@plt+0x17be4>
  41b090:	cbz	w22, 41b0ac <ferror@plt+0x187dc>
  41b094:	ldrb	w0, [x19, #32]
  41b098:	cbnz	w0, 41b0ac <ferror@plt+0x187dc>
  41b09c:	mov	w0, #0x2                   	// #2
  41b0a0:	strb	w0, [x19, #25]
  41b0a4:	mov	w0, #0x1                   	// #1
  41b0a8:	strb	w0, [x19, #24]
  41b0ac:	cbz	w23, 41b0b8 <ferror@plt+0x187e8>
  41b0b0:	mov	w0, #0x1                   	// #1
  41b0b4:	strb	w0, [x19, #24]
  41b0b8:	mov	w0, w20
  41b0bc:	ldp	x19, x20, [sp, #16]
  41b0c0:	ldp	x21, x22, [sp, #32]
  41b0c4:	ldp	x23, x24, [sp, #48]
  41b0c8:	ldp	x29, x30, [sp], #240
  41b0cc:	ret
  41b0d0:	ldr	w0, [x19, #1116]
  41b0d4:	cmp	w0, #0x15
  41b0d8:	b.eq	41b2fc <ferror@plt+0x18a2c>  // b.none
  41b0dc:	ldrb	w0, [x19, #1154]
  41b0e0:	cbz	w0, 41b0f4 <ferror@plt+0x18824>
  41b0e4:	ldrb	w0, [x19, #1155]
  41b0e8:	cbnz	w0, 41b0f4 <ferror@plt+0x18824>
  41b0ec:	ldrb	w0, [x19, #18]
  41b0f0:	cbz	w0, 41b108 <ferror@plt+0x18838>
  41b0f4:	adrp	x20, 460000 <_obstack_memory_used@@Base+0x19094>
  41b0f8:	add	x20, x20, #0x900
  41b0fc:	add	x20, x20, #0x1c8
  41b100:	strb	wzr, [x19, #440]
  41b104:	b	41b028 <ferror@plt+0x18758>
  41b108:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41b10c:	add	x2, x2, #0x4d8
  41b110:	mov	w1, #0x2                   	// #2
  41b114:	mov	x0, x19
  41b118:	bl	41c9fc <ferror@plt+0x1a12c>
  41b11c:	b	41b0f4 <ferror@plt+0x18824>
  41b120:	ldrb	w0, [x20, #18]
  41b124:	cmp	w0, #0x2
  41b128:	b.eq	41b180 <ferror@plt+0x188b0>  // b.none
  41b12c:	ldrb	w0, [x20, #19]
  41b130:	tbz	w0, #5, 41b1cc <ferror@plt+0x188fc>
  41b134:	ldrb	w0, [x19, #1132]
  41b138:	cbnz	w0, 41b1ec <ferror@plt+0x1891c>
  41b13c:	ldrb	w0, [x19, #1138]
  41b140:	cbz	w0, 41b064 <ferror@plt+0x18794>
  41b144:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x19094>
  41b148:	add	x0, x0, #0x900
  41b14c:	add	x0, x0, #0xd8
  41b150:	cmp	x20, x0
  41b154:	b.eq	41b210 <ferror@plt+0x18940>  // b.none
  41b158:	cbz	w21, 41b228 <ferror@plt+0x18958>
  41b15c:	ldrb	w0, [x20, #18]
  41b160:	cbnz	w0, 41b05c <ferror@plt+0x1878c>
  41b164:	ldr	x3, [x20, #8]
  41b168:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41b16c:	add	x2, x2, #0x578
  41b170:	mov	w1, #0x6                   	// #6
  41b174:	mov	x0, x19
  41b178:	bl	41ca74 <ferror@plt+0x1a1a4>
  41b17c:	b	41b05c <ferror@plt+0x1878c>
  41b180:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x19094>
  41b184:	add	x0, x0, #0x900
  41b188:	add	x0, x0, #0x168
  41b18c:	cmp	x20, x0
  41b190:	b.eq	41b1b8 <ferror@plt+0x188e8>  // b.none
  41b194:	ldrb	w0, [x19, #1154]
  41b198:	cbz	w0, 41b12c <ferror@plt+0x1885c>
  41b19c:	ldr	x3, [x20, #8]
  41b1a0:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41b1a4:	add	x2, x2, #0x508
  41b1a8:	mov	w1, #0x2                   	// #2
  41b1ac:	mov	x0, x19
  41b1b0:	bl	41c9fc <ferror@plt+0x1a12c>
  41b1b4:	b	41b204 <ferror@plt+0x18934>
  41b1b8:	ldrb	w0, [x19, #1122]
  41b1bc:	cbz	w0, 41b324 <ferror@plt+0x18a54>
  41b1c0:	ldrb	w0, [x19, #1138]
  41b1c4:	cbnz	w0, 41b158 <ferror@plt+0x18888>
  41b1c8:	b	41b064 <ferror@plt+0x18794>
  41b1cc:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x19094>
  41b1d0:	add	x0, x0, #0x900
  41b1d4:	add	x0, x0, #0x168
  41b1d8:	cmp	x20, x0
  41b1dc:	b.ne	41b13c <ferror@plt+0x1886c>  // b.any
  41b1e0:	ldrb	w0, [x19, #1122]
  41b1e4:	cbz	w0, 41b134 <ferror@plt+0x18864>
  41b1e8:	b	41b1c0 <ferror@plt+0x188f0>
  41b1ec:	ldr	x3, [x20, #8]
  41b1f0:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41b1f4:	add	x2, x2, #0x520
  41b1f8:	mov	w1, #0x1                   	// #1
  41b1fc:	mov	x0, x19
  41b200:	bl	41ca74 <ferror@plt+0x1a1a4>
  41b204:	ldrb	w0, [x19, #1138]
  41b208:	cbz	w0, 41b05c <ferror@plt+0x1878c>
  41b20c:	b	41b144 <ferror@plt+0x18874>
  41b210:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41b214:	add	x2, x2, #0x548
  41b218:	mov	w1, #0x6                   	// #6
  41b21c:	mov	x0, x19
  41b220:	bl	41ca74 <ferror@plt+0x1a1a4>
  41b224:	b	41b05c <ferror@plt+0x1878c>
  41b228:	ldrb	w0, [x20, #18]
  41b22c:	cbz	w0, 41b05c <ferror@plt+0x1878c>
  41b230:	ldr	x3, [x20, #8]
  41b234:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41b238:	add	x2, x2, #0x5a8
  41b23c:	mov	w1, #0x6                   	// #6
  41b240:	mov	x0, x19
  41b244:	bl	41ca74 <ferror@plt+0x1a1a4>
  41b248:	b	41b05c <ferror@plt+0x1878c>
  41b24c:	mov	x1, x20
  41b250:	mov	x0, x19
  41b254:	bl	427e40 <ferror@plt+0x25570>
  41b258:	mov	x21, x0
  41b25c:	ldr	x3, [x19, #1064]
  41b260:	cbz	x3, 41b2e0 <ferror@plt+0x18a10>
  41b264:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41b268:	add	x2, x2, #0x900
  41b26c:	add	x2, x2, #0x1e0
  41b270:	mov	x1, x0
  41b274:	mov	x0, x19
  41b278:	blr	x3
  41b27c:	mov	x24, x0
  41b280:	cbz	x0, 41b2e0 <ferror@plt+0x18a10>
  41b284:	mov	x3, #0x0                   	// #0
  41b288:	ldr	w2, [x20]
  41b28c:	ldr	x1, [x19, #40]
  41b290:	add	x0, sp, #0x48
  41b294:	bl	42a37c <ferror@plt+0x27aac>
  41b298:	ldr	w1, [x20]
  41b29c:	ldr	x0, [x19, #40]
  41b2a0:	bl	428f64 <ferror@plt+0x26694>
  41b2a4:	mov	x2, x24
  41b2a8:	mov	x1, x0
  41b2ac:	add	x0, sp, #0x48
  41b2b0:	bl	42a9e8 <ferror@plt+0x28118>
  41b2b4:	mov	x5, x24
  41b2b8:	mov	x4, x21
  41b2bc:	adrp	x3, 460000 <_obstack_memory_used@@Base+0x19094>
  41b2c0:	add	x3, x3, #0x5e8
  41b2c4:	add	x2, sp, #0x48
  41b2c8:	mov	w1, #0x3                   	// #3
  41b2cc:	mov	x0, x19
  41b2d0:	bl	41ce90 <ferror@plt+0x1a5c0>
  41b2d4:	add	x0, sp, #0x48
  41b2d8:	bl	42a10c <ferror@plt+0x2783c>
  41b2dc:	b	41afc0 <ferror@plt+0x186f0>
  41b2e0:	mov	x3, x21
  41b2e4:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41b2e8:	add	x2, x2, #0x620
  41b2ec:	mov	w1, #0x3                   	// #3
  41b2f0:	mov	x0, x19
  41b2f4:	bl	41c9fc <ferror@plt+0x1a12c>
  41b2f8:	b	41afc0 <ferror@plt+0x186f0>
  41b2fc:	str	xzr, [x19, #144]
  41b300:	ldrb	w0, [x19, #1160]
  41b304:	cbz	w0, 41b310 <ferror@plt+0x18a40>
  41b308:	mov	x0, x19
  41b30c:	bl	41a370 <ferror@plt+0x17aa0>
  41b310:	mov	w1, #0x1                   	// #1
  41b314:	mov	x0, x19
  41b318:	bl	42b95c <ferror@plt+0x2908c>
  41b31c:	mov	w20, #0x0                   	// #0
  41b320:	b	41b084 <ferror@plt+0x187b4>
  41b324:	ldrb	w0, [x19, #1154]
  41b328:	cbz	w0, 41b134 <ferror@plt+0x18864>
  41b32c:	b	41b19c <ferror@plt+0x188cc>
  41b330:	ldrb	w0, [x20, #19]
  41b334:	and	w0, w0, #0x4
  41b338:	strb	w0, [x19, #19]
  41b33c:	ldrb	w0, [x20, #19]
  41b340:	and	w0, w0, #0x4
  41b344:	strb	w0, [x19, #17]
  41b348:	ldrb	w0, [x19, #18]
  41b34c:	cbz	w0, 41b120 <ferror@plt+0x18850>
  41b350:	ldrb	w0, [x19, #1138]
  41b354:	cbnz	w0, 41b144 <ferror@plt+0x18874>
  41b358:	ldrb	w0, [x20, #19]
  41b35c:	tbz	w0, #0, 41afc0 <ferror@plt+0x186f0>
  41b360:	b	41b064 <ferror@plt+0x18794>
  41b364:	mov	x0, x19
  41b368:	bl	41a370 <ferror@plt+0x17aa0>
  41b36c:	b	41b070 <ferror@plt+0x187a0>
  41b370:	stp	x29, x30, [sp, #-16]!
  41b374:	mov	x29, sp
  41b378:	mov	x2, #0x0                   	// #0
  41b37c:	adrp	x1, 418000 <ferror@plt+0x15730>
  41b380:	add	x1, x1, #0xd60
  41b384:	bl	423434 <ferror@plt+0x20b64>
  41b388:	ldp	x29, x30, [sp], #16
  41b38c:	ret
  41b390:	stp	x29, x30, [sp, #-32]!
  41b394:	mov	x29, sp
  41b398:	stp	x19, x20, [sp, #16]
  41b39c:	mov	x19, x0
  41b3a0:	mov	w0, w4
  41b3a4:	mov	w4, w3
  41b3a8:	mov	x3, x2
  41b3ac:	mov	w2, w0
  41b3b0:	ldr	x0, [x19, #40]
  41b3b4:	bl	428468 <ferror@plt+0x25b98>
  41b3b8:	mov	x20, x0
  41b3bc:	cbz	x0, 41b3d0 <ferror@plt+0x18b00>
  41b3c0:	mov	w2, #0x7f                  	// #127
  41b3c4:	ldr	w1, [x0, #16]
  41b3c8:	ldr	x0, [x19, #40]
  41b3cc:	bl	4287b4 <ferror@plt+0x25ee4>
  41b3d0:	ldr	x2, [x19, #912]
  41b3d4:	cbz	x2, 41b3e4 <ferror@plt+0x18b14>
  41b3d8:	mov	x1, x20
  41b3dc:	mov	x0, x19
  41b3e0:	blr	x2
  41b3e4:	ldp	x19, x20, [sp, #16]
  41b3e8:	ldp	x29, x30, [sp], #32
  41b3ec:	ret
  41b3f0:	stp	x29, x30, [sp, #-80]!
  41b3f4:	mov	x29, sp
  41b3f8:	stp	x19, x20, [sp, #16]
  41b3fc:	stp	x21, x22, [sp, #32]
  41b400:	stp	x23, x24, [sp, #48]
  41b404:	mov	x20, x0
  41b408:	ldr	x21, [x0, #40]
  41b40c:	ldr	w1, [x21, #12]
  41b410:	sub	w1, w1, #0x1
  41b414:	sbfiz	x2, x1, #1, #32
  41b418:	add	x1, x2, w1, sxtw
  41b41c:	ldr	x2, [x21]
  41b420:	add	x1, x2, x1, lsl #3
  41b424:	ldr	x22, [x1, #8]
  41b428:	ldrb	w23, [x1, #5]
  41b42c:	mov	w1, #0x1                   	// #1
  41b430:	bl	42b95c <ferror@plt+0x2908c>
  41b434:	mov	x0, x20
  41b438:	bl	42ea88 <ferror@plt+0x2c1b8>
  41b43c:	mov	x1, x0
  41b440:	ldrb	w0, [x0, #4]
  41b444:	cmp	w0, #0x37
  41b448:	b.ne	41b4ec <ferror@plt+0x18c1c>  // b.any
  41b44c:	ldr	x3, [x1, #16]
  41b450:	ldr	w2, [x1, #8]
  41b454:	cbz	x2, 41b69c <ferror@plt+0x18dcc>
  41b458:	mov	x0, x3
  41b45c:	mov	w19, #0x0                   	// #0
  41b460:	adrp	x4, 466000 <_obstack_memory_used@@Base+0x1f094>
  41b464:	add	x4, x4, #0xa68
  41b468:	add	x3, x3, x2
  41b46c:	ldrb	w2, [x0], #1
  41b470:	ldrh	w5, [x4, w2, sxtw #1]
  41b474:	tbz	w5, #2, 41b4ec <ferror@plt+0x18c1c>
  41b478:	add	w19, w19, w19, lsl #2
  41b47c:	add	w19, w2, w19, lsl #1
  41b480:	sub	w19, w19, #0x30
  41b484:	cmp	x0, x3
  41b488:	b.ne	41b46c <ferror@plt+0x18b9c>  // b.any
  41b48c:	mov	x0, x20
  41b490:	bl	42ea88 <ferror@plt+0x2c1b8>
  41b494:	mov	x1, x0
  41b498:	ldrb	w0, [x0, #4]
  41b49c:	cmp	w0, #0x3e
  41b4a0:	b.eq	41b520 <ferror@plt+0x18c50>  // b.none
  41b4a4:	cmp	w0, #0x16
  41b4a8:	b.ne	41b670 <ferror@plt+0x18da0>  // b.any
  41b4ac:	mov	x0, x20
  41b4b0:	bl	4191a4 <ferror@plt+0x168d4>
  41b4b4:	mov	w24, #0x3                   	// #3
  41b4b8:	ldr	x1, [x20, #40]
  41b4bc:	ldr	w0, [x1, #56]
  41b4c0:	sub	w0, w0, #0x1
  41b4c4:	str	w0, [x1, #56]
  41b4c8:	mov	w4, w23
  41b4cc:	mov	w3, w19
  41b4d0:	mov	x2, x22
  41b4d4:	mov	w1, w24
  41b4d8:	mov	x0, x20
  41b4dc:	bl	41b390 <ferror@plt+0x18ac0>
  41b4e0:	mov	w0, #0x1                   	// #1
  41b4e4:	strb	w0, [x21, #116]
  41b4e8:	b	41b50c <ferror@plt+0x18c3c>
  41b4ec:	mov	x0, x20
  41b4f0:	bl	427e40 <ferror@plt+0x25570>
  41b4f4:	mov	x3, x0
  41b4f8:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41b4fc:	add	x2, x2, #0x648
  41b500:	mov	w1, #0x3                   	// #3
  41b504:	mov	x0, x20
  41b508:	bl	41c9fc <ferror@plt+0x1a12c>
  41b50c:	ldp	x19, x20, [sp, #16]
  41b510:	ldp	x21, x22, [sp, #32]
  41b514:	ldp	x23, x24, [sp, #48]
  41b518:	ldp	x29, x30, [sp], #80
  41b51c:	ret
  41b520:	str	wzr, [sp, #64]
  41b524:	str	xzr, [sp, #72]
  41b528:	mov	w4, #0x3e                  	// #62
  41b52c:	add	x3, sp, #0x40
  41b530:	mov	x2, #0x1                   	// #1
  41b534:	add	x1, x1, #0x8
  41b538:	mov	x0, x20
  41b53c:	bl	4188ec <ferror@plt+0x1601c>
  41b540:	ands	w0, w0, #0xff
  41b544:	ldr	x0, [sp, #72]
  41b548:	csel	x22, x0, x22, ne  // ne = any
  41b54c:	mov	w1, #0x0                   	// #0
  41b550:	mov	x0, x20
  41b554:	bl	418ef8 <ferror@plt+0x16628>
  41b558:	cmp	w0, #0x1
  41b55c:	b.eq	41b610 <ferror@plt+0x18d40>  // b.none
  41b560:	mov	w24, #0x3                   	// #3
  41b564:	cmp	w0, #0x2
  41b568:	b.eq	41b630 <ferror@plt+0x18d60>  // b.none
  41b56c:	cmp	w0, #0x3
  41b570:	b.ne	41b6a4 <ferror@plt+0x18dd4>  // b.any
  41b574:	mov	w1, #0x3                   	// #3
  41b578:	mov	x0, x20
  41b57c:	bl	418ef8 <ferror@plt+0x16628>
  41b580:	cmp	w0, #0x4
  41b584:	cset	w23, eq  // eq = none
  41b588:	add	w23, w23, #0x1
  41b58c:	ldr	x0, [x20]
  41b590:	strb	w23, [x0, #106]
  41b594:	mov	w1, #0x0                   	// #0
  41b598:	mov	x0, x20
  41b59c:	bl	41911c <ferror@plt+0x1684c>
  41b5a0:	mov	x0, x20
  41b5a4:	bl	4191a4 <ferror@plt+0x168d4>
  41b5a8:	cmp	w24, #0x1
  41b5ac:	b.ne	41b4b8 <ferror@plt+0x18be8>  // b.any
  41b5b0:	ldr	w24, [x21, #12]
  41b5b4:	sub	w24, w24, #0x1
  41b5b8:	sbfiz	x0, x24, #1, #32
  41b5bc:	add	x24, x0, w24, sxtw
  41b5c0:	ldr	x0, [x21]
  41b5c4:	add	x24, x0, x24, lsl #3
  41b5c8:	mov	x1, x24
  41b5cc:	mov	x0, x21
  41b5d0:	bl	4283d8 <ferror@plt+0x25b08>
  41b5d4:	ldr	w1, [x24, #20]
  41b5d8:	cbz	w1, 41b5f4 <ferror@plt+0x18d24>
  41b5dc:	cbz	x0, 41b694 <ferror@plt+0x18dc4>
  41b5e0:	mov	x1, x22
  41b5e4:	ldr	x0, [x0, #8]
  41b5e8:	bl	445944 <ferror@plt+0x43074>
  41b5ec:	mov	w24, #0x1                   	// #1
  41b5f0:	cbz	w0, 41b4b8 <ferror@plt+0x18be8>
  41b5f4:	mov	x3, x22
  41b5f8:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41b5fc:	add	x2, x2, #0x690
  41b600:	mov	w1, #0x0                   	// #0
  41b604:	mov	x0, x20
  41b608:	bl	41ca74 <ferror@plt+0x1a1a4>
  41b60c:	b	41b50c <ferror@plt+0x18c3c>
  41b610:	mov	x1, x22
  41b614:	mov	x0, x20
  41b618:	bl	422bb0 <ferror@plt+0x202e0>
  41b61c:	mov	w1, #0x1                   	// #1
  41b620:	mov	x0, x20
  41b624:	bl	418ef8 <ferror@plt+0x16628>
  41b628:	mov	w24, #0x0                   	// #0
  41b62c:	b	41b56c <ferror@plt+0x18c9c>
  41b630:	mov	w1, #0x2                   	// #2
  41b634:	mov	x0, x20
  41b638:	bl	418ef8 <ferror@plt+0x16628>
  41b63c:	cmp	w0, w24
  41b640:	b.eq	41b668 <ferror@plt+0x18d98>  // b.none
  41b644:	ldr	x0, [x20]
  41b648:	strb	wzr, [x0, #106]
  41b64c:	mov	w1, #0x0                   	// #0
  41b650:	mov	x0, x20
  41b654:	bl	41911c <ferror@plt+0x1684c>
  41b658:	mov	x0, x20
  41b65c:	bl	4191a4 <ferror@plt+0x168d4>
  41b660:	mov	w23, #0x0                   	// #0
  41b664:	b	41b5b0 <ferror@plt+0x18ce0>
  41b668:	mov	w24, #0x1                   	// #1
  41b66c:	b	41b574 <ferror@plt+0x18ca4>
  41b670:	mov	x0, x20
  41b674:	bl	427e40 <ferror@plt+0x25570>
  41b678:	mov	x3, x0
  41b67c:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41b680:	add	x2, x2, #0x670
  41b684:	mov	w1, #0x3                   	// #3
  41b688:	mov	x0, x20
  41b68c:	bl	41c9fc <ferror@plt+0x1a12c>
  41b690:	b	41b50c <ferror@plt+0x18c3c>
  41b694:	mov	w24, #0x1                   	// #1
  41b698:	b	41b4b8 <ferror@plt+0x18be8>
  41b69c:	mov	w19, #0x0                   	// #0
  41b6a0:	b	41b48c <ferror@plt+0x18bbc>
  41b6a4:	ldr	x0, [x20]
  41b6a8:	strb	wzr, [x0, #106]
  41b6ac:	mov	w1, #0x0                   	// #0
  41b6b0:	mov	x0, x20
  41b6b4:	bl	41911c <ferror@plt+0x1684c>
  41b6b8:	mov	x0, x20
  41b6bc:	bl	4191a4 <ferror@plt+0x168d4>
  41b6c0:	mov	w23, #0x0                   	// #0
  41b6c4:	b	41b4b8 <ferror@plt+0x18be8>
  41b6c8:	stp	x29, x30, [sp, #-80]!
  41b6cc:	mov	x29, sp
  41b6d0:	stp	x19, x20, [sp, #16]
  41b6d4:	stp	x21, x22, [sp, #32]
  41b6d8:	stp	x23, x24, [sp, #48]
  41b6dc:	mov	x19, x0
  41b6e0:	ldr	x21, [x0, #40]
  41b6e4:	ldr	w1, [x21, #12]
  41b6e8:	sub	w1, w1, #0x1
  41b6ec:	sbfiz	x0, x1, #1, #32
  41b6f0:	add	x1, x0, w1, sxtw
  41b6f4:	ldr	x0, [x21]
  41b6f8:	add	x1, x0, x1, lsl #3
  41b6fc:	ldrb	w23, [x1, #5]
  41b700:	ldr	x24, [x1, #8]
  41b704:	ldrb	w0, [x19, #1152]
  41b708:	cmp	w0, #0x0
  41b70c:	mov	w22, #0x7fffffff            	// #2147483647
  41b710:	mov	w0, #0x7fff                	// #32767
  41b714:	csel	w22, w22, w0, ne  // ne = any
  41b718:	mov	x0, x19
  41b71c:	bl	42ea88 <ferror@plt+0x2c1b8>
  41b720:	mov	x1, x0
  41b724:	ldrb	w0, [x0, #4]
  41b728:	cmp	w0, #0x37
  41b72c:	b.eq	41b76c <ferror@plt+0x18e9c>  // b.none
  41b730:	cmp	w0, #0x16
  41b734:	b.eq	41b7e8 <ferror@plt+0x18f18>  // b.none
  41b738:	mov	x0, x19
  41b73c:	bl	427e40 <ferror@plt+0x25570>
  41b740:	mov	x3, x0
  41b744:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41b748:	add	x2, x2, #0x6f0
  41b74c:	mov	w1, #0x3                   	// #3
  41b750:	mov	x0, x19
  41b754:	bl	41c9fc <ferror@plt+0x1a12c>
  41b758:	ldp	x19, x20, [sp, #16]
  41b75c:	ldp	x21, x22, [sp, #32]
  41b760:	ldp	x23, x24, [sp, #48]
  41b764:	ldp	x29, x30, [sp], #80
  41b768:	ret
  41b76c:	ldr	x5, [x1, #16]
  41b770:	ldr	w0, [x1, #8]
  41b774:	mov	x3, x5
  41b778:	mov	w4, #0x0                   	// #0
  41b77c:	mov	w2, #0x0                   	// #0
  41b780:	cbz	x0, 41b8d8 <ferror@plt+0x19008>
  41b784:	adrp	x7, 466000 <_obstack_memory_used@@Base+0x1f094>
  41b788:	add	x7, x7, #0xa68
  41b78c:	mov	w8, #0x1                   	// #1
  41b790:	add	x5, x5, x0
  41b794:	b	41b79c <ferror@plt+0x18ecc>
  41b798:	mov	w2, w20
  41b79c:	ldrb	w0, [x3], #1
  41b7a0:	ldrh	w6, [x7, w0, sxtw #1]
  41b7a4:	tbz	w6, #2, 41b738 <ferror@plt+0x18e68>
  41b7a8:	add	w20, w2, w2, lsl #2
  41b7ac:	sub	w0, w0, #0x30
  41b7b0:	add	w20, w0, w20, lsl #1
  41b7b4:	cmp	w2, w20
  41b7b8:	csel	w4, w4, w8, ls  // ls = plast
  41b7bc:	cmp	x3, x5
  41b7c0:	b.ne	41b798 <ferror@plt+0x18ec8>  // b.any
  41b7c4:	ldrb	w0, [x19, #1154]
  41b7c8:	cbnz	w0, 41b800 <ferror@plt+0x18f30>
  41b7cc:	cbz	w4, 41b824 <ferror@plt+0x18f54>
  41b7d0:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41b7d4:	add	x2, x2, #0x720
  41b7d8:	mov	w1, #0x0                   	// #0
  41b7dc:	mov	x0, x19
  41b7e0:	bl	41c9fc <ferror@plt+0x1a12c>
  41b7e4:	b	41b824 <ferror@plt+0x18f54>
  41b7e8:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41b7ec:	add	x2, x2, #0x6c8
  41b7f0:	mov	w1, #0x3                   	// #3
  41b7f4:	mov	x0, x19
  41b7f8:	bl	41c9fc <ferror@plt+0x1a12c>
  41b7fc:	b	41b758 <ferror@plt+0x18e88>
  41b800:	cmp	w20, #0x0
  41b804:	ccmp	w22, w20, #0x0, ne  // ne = any
  41b808:	ccmp	w4, #0x0, #0x0, cs  // cs = hs, nlast
  41b80c:	b.eq	41b824 <ferror@plt+0x18f54>  // b.none
  41b810:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41b814:	add	x2, x2, #0x720
  41b818:	mov	w1, #0x2                   	// #2
  41b81c:	mov	x0, x19
  41b820:	bl	41c9fc <ferror@plt+0x1a12c>
  41b824:	mov	x0, x19
  41b828:	bl	42ea88 <ferror@plt+0x2c1b8>
  41b82c:	mov	x1, x0
  41b830:	ldrb	w0, [x0, #4]
  41b834:	cmp	w0, #0x3e
  41b838:	b.eq	41b878 <ferror@plt+0x18fa8>  // b.none
  41b83c:	cmp	w0, #0x16
  41b840:	b.ne	41b8b4 <ferror@plt+0x18fe4>  // b.any
  41b844:	mov	x0, x19
  41b848:	bl	4191a4 <ferror@plt+0x168d4>
  41b84c:	mov	w4, w23
  41b850:	mov	w3, w20
  41b854:	mov	x2, x24
  41b858:	mov	w1, #0x3                   	// #3
  41b85c:	mov	x0, x19
  41b860:	bl	41b390 <ferror@plt+0x18ac0>
  41b864:	mov	w0, #0x1                   	// #1
  41b868:	strb	w0, [x21, #116]
  41b86c:	b	41b758 <ferror@plt+0x18e88>
  41b870:	mov	w20, #0x0                   	// #0
  41b874:	b	41b810 <ferror@plt+0x18f40>
  41b878:	str	wzr, [sp, #64]
  41b87c:	str	xzr, [sp, #72]
  41b880:	mov	w4, #0x3e                  	// #62
  41b884:	add	x3, sp, #0x40
  41b888:	mov	x2, #0x1                   	// #1
  41b88c:	add	x1, x1, #0x8
  41b890:	mov	x0, x19
  41b894:	bl	4188ec <ferror@plt+0x1601c>
  41b898:	ands	w0, w0, #0xff
  41b89c:	ldr	x0, [sp, #72]
  41b8a0:	csel	x24, x0, x24, ne  // ne = any
  41b8a4:	mov	w1, #0x1                   	// #1
  41b8a8:	mov	x0, x19
  41b8ac:	bl	41911c <ferror@plt+0x1684c>
  41b8b0:	b	41b844 <ferror@plt+0x18f74>
  41b8b4:	mov	x0, x19
  41b8b8:	bl	427e40 <ferror@plt+0x25570>
  41b8bc:	mov	x3, x0
  41b8c0:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41b8c4:	add	x2, x2, #0x670
  41b8c8:	mov	w1, #0x3                   	// #3
  41b8cc:	mov	x0, x19
  41b8d0:	bl	41c9fc <ferror@plt+0x1a12c>
  41b8d4:	b	41b758 <ferror@plt+0x18e88>
  41b8d8:	ldrb	w0, [x19, #1154]
  41b8dc:	cbnz	w0, 41b870 <ferror@plt+0x18fa0>
  41b8e0:	mov	w4, #0x0                   	// #0
  41b8e4:	mov	w20, #0x0                   	// #0
  41b8e8:	b	41b7cc <ferror@plt+0x18efc>
  41b8ec:	stp	x29, x30, [sp, #-32]!
  41b8f0:	mov	x29, sp
  41b8f4:	cbz	x3, 41b924 <ferror@plt+0x19054>
  41b8f8:	stp	x19, x20, [sp, #16]
  41b8fc:	mov	x19, x3
  41b900:	and	w20, w4, #0xff
  41b904:	mov	w3, #0x0                   	// #0
  41b908:	bl	41a9d4 <ferror@plt+0x18104>
  41b90c:	cbz	x0, 41b938 <ferror@plt+0x19068>
  41b910:	strb	w20, [x0, #19]
  41b914:	str	x19, [x0, #24]
  41b918:	ldp	x19, x20, [sp, #16]
  41b91c:	ldp	x29, x30, [sp], #32
  41b920:	ret
  41b924:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41b928:	add	x2, x2, #0x740
  41b92c:	mov	w1, #0x4                   	// #4
  41b930:	bl	41c9fc <ferror@plt+0x1a12c>
  41b934:	b	41b91c <ferror@plt+0x1904c>
  41b938:	ldp	x19, x20, [sp, #16]
  41b93c:	b	41b91c <ferror@plt+0x1904c>
  41b940:	stp	x29, x30, [sp, #-32]!
  41b944:	mov	x29, sp
  41b948:	stp	x19, x20, [sp, #16]
  41b94c:	mov	w19, w3
  41b950:	and	w20, w4, #0xff
  41b954:	mov	w3, w5
  41b958:	bl	41a9d4 <ferror@plt+0x18104>
  41b95c:	cbz	x0, 41b970 <ferror@plt+0x190a0>
  41b960:	mov	w1, #0x1                   	// #1
  41b964:	strb	w1, [x0, #18]
  41b968:	strb	w20, [x0, #19]
  41b96c:	str	w19, [x0, #24]
  41b970:	ldp	x19, x20, [sp, #16]
  41b974:	ldp	x29, x30, [sp], #32
  41b978:	ret
  41b97c:	stp	x29, x30, [sp, #-32]!
  41b980:	mov	x29, sp
  41b984:	stp	x19, x20, [sp, #16]
  41b988:	mov	x19, x0
  41b98c:	adrp	x3, 41a000 <ferror@plt+0x17730>
  41b990:	add	x3, x3, #0x908
  41b994:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41b998:	add	x2, x2, #0x768
  41b99c:	mov	x1, #0x0                   	// #0
  41b9a0:	bl	41abac <ferror@plt+0x182dc>
  41b9a4:	adrp	x3, 41a000 <ferror@plt+0x17730>
  41b9a8:	add	x3, x3, #0x710
  41b9ac:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41b9b0:	add	x2, x2, #0x770
  41b9b4:	mov	x1, #0x0                   	// #0
  41b9b8:	mov	x0, x19
  41b9bc:	bl	41abac <ferror@plt+0x182dc>
  41b9c0:	adrp	x3, 41b000 <ferror@plt+0x18730>
  41b9c4:	add	x3, x3, #0xdf8
  41b9c8:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41b9cc:	add	x2, x2, #0x780
  41b9d0:	mov	x1, #0x0                   	// #0
  41b9d4:	mov	x0, x19
  41b9d8:	bl	41abac <ferror@plt+0x182dc>
  41b9dc:	adrp	x20, 460000 <_obstack_memory_used@@Base+0x19094>
  41b9e0:	add	x20, x20, #0x798
  41b9e4:	adrp	x3, 419000 <ferror@plt+0x16730>
  41b9e8:	add	x3, x3, #0x204
  41b9ec:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41b9f0:	add	x2, x2, #0x790
  41b9f4:	mov	x1, x20
  41b9f8:	mov	x0, x19
  41b9fc:	bl	41abac <ferror@plt+0x182dc>
  41ba00:	adrp	x3, 41a000 <ferror@plt+0x17730>
  41ba04:	add	x3, x3, #0x6a8
  41ba08:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41ba0c:	add	x2, x2, #0x7a0
  41ba10:	mov	x1, x20
  41ba14:	mov	x0, x19
  41ba18:	bl	41abac <ferror@plt+0x182dc>
  41ba1c:	adrp	x3, 41a000 <ferror@plt+0x17730>
  41ba20:	add	x3, x3, #0x5e4
  41ba24:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41ba28:	add	x2, x2, #0x7b0
  41ba2c:	mov	x1, x20
  41ba30:	mov	x0, x19
  41ba34:	bl	41abac <ferror@plt+0x182dc>
  41ba38:	adrp	x3, 419000 <ferror@plt+0x16730>
  41ba3c:	add	x3, x3, #0x850
  41ba40:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  41ba44:	add	x2, x2, #0xa60
  41ba48:	mov	x1, x20
  41ba4c:	mov	x0, x19
  41ba50:	bl	41abac <ferror@plt+0x182dc>
  41ba54:	adrp	x3, 419000 <ferror@plt+0x16730>
  41ba58:	add	x3, x3, #0x838
  41ba5c:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1f094>
  41ba60:	add	x2, x2, #0xdc8
  41ba64:	mov	x1, x20
  41ba68:	mov	x0, x19
  41ba6c:	bl	41abac <ferror@plt+0x182dc>
  41ba70:	ldp	x19, x20, [sp, #16]
  41ba74:	ldp	x29, x30, [sp], #32
  41ba78:	ret
  41ba7c:	stp	x29, x30, [sp, #-32]!
  41ba80:	mov	x29, sp
  41ba84:	stp	x19, x20, [sp, #16]
  41ba88:	mov	x20, x0
  41ba8c:	ldr	x0, [x0, #896]
  41ba90:	bl	418d90 <ferror@plt+0x164c0>
  41ba94:	sbfiz	x0, x0, #3, #32
  41ba98:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  41ba9c:	mov	x19, x0
  41baa0:	mov	x1, x0
  41baa4:	ldr	x0, [x20, #896]
  41baa8:	bl	41a968 <ferror@plt+0x18098>
  41baac:	mov	x0, x19
  41bab0:	ldp	x19, x20, [sp, #16]
  41bab4:	ldp	x29, x30, [sp], #32
  41bab8:	ret
  41babc:	stp	x29, x30, [sp, #-32]!
  41bac0:	mov	x29, sp
  41bac4:	str	x19, [sp, #16]
  41bac8:	mov	x19, x1
  41bacc:	mov	x2, x1
  41bad0:	ldr	x1, [x0, #896]
  41bad4:	bl	41a560 <ferror@plt+0x17c90>
  41bad8:	mov	x0, x19
  41badc:	bl	402690 <free@plt>
  41bae0:	ldr	x19, [sp, #16]
  41bae4:	ldp	x29, x30, [sp], #32
  41bae8:	ret
  41baec:	stp	x29, x30, [sp, #-64]!
  41baf0:	mov	x29, sp
  41baf4:	stp	x19, x20, [sp, #16]
  41baf8:	str	x21, [sp, #32]
  41bafc:	mov	x21, x0
  41bb00:	mov	x20, x1
  41bb04:	add	x2, sp, #0x38
  41bb08:	mov	w1, #0x4                   	// #4
  41bb0c:	bl	419370 <ferror@plt+0x16aa0>
  41bb10:	mov	x19, x0
  41bb14:	str	wzr, [x20]
  41bb18:	cbz	x0, 41bb60 <ferror@plt+0x19290>
  41bb1c:	ldr	x0, [x0, #24]
  41bb20:	cbz	x0, 41bb48 <ferror@plt+0x19278>
  41bb24:	ldr	x1, [sp, #56]
  41bb28:	mov	w0, #0x1                   	// #1
  41bb2c:	cbz	x1, 41bb44 <ferror@plt+0x19274>
  41bb30:	mov	x0, x19
  41bb34:	bl	4195f8 <ferror@plt+0x16d28>
  41bb38:	ldr	x0, [x0]
  41bb3c:	cmp	x0, #0x0
  41bb40:	cset	w0, ne  // ne = any
  41bb44:	str	w0, [x20]
  41bb48:	cmp	x19, #0x0
  41bb4c:	cset	w0, eq  // eq = none
  41bb50:	ldp	x19, x20, [sp, #16]
  41bb54:	ldr	x21, [sp, #32]
  41bb58:	ldp	x29, x30, [sp], #64
  41bb5c:	ret
  41bb60:	ldr	x0, [x21, #448]
  41bb64:	ldurb	w0, [x0, #-20]
  41bb68:	cmp	w0, #0x16
  41bb6c:	b.ne	41bb48 <ferror@plt+0x19278>  // b.any
  41bb70:	mov	w1, #0x1                   	// #1
  41bb74:	mov	x0, x21
  41bb78:	bl	42b95c <ferror@plt+0x2908c>
  41bb7c:	b	41bb48 <ferror@plt+0x19278>
  41bb80:	add	x0, x0, #0x458
  41bb84:	ret
  41bb88:	add	x0, x0, #0x388
  41bb8c:	ret
  41bb90:	stp	x29, x30, [sp, #-16]!
  41bb94:	mov	x29, sp
  41bb98:	mov	x2, #0xb8                  	// #184
  41bb9c:	add	x0, x0, #0x388
  41bba0:	bl	402260 <memcpy@plt>
  41bba4:	ldp	x29, x30, [sp], #16
  41bba8:	ret
  41bbac:	stp	x29, x30, [sp, #-32]!
  41bbb0:	mov	x29, sp
  41bbb4:	str	x19, [sp, #16]
  41bbb8:	mov	x19, x0
  41bbbc:	ldr	x0, [x0, #712]
  41bbc0:	cbz	x0, 41bbd4 <ferror@plt+0x19304>
  41bbc4:	ldr	x0, [x19, #712]
  41bbc8:	ldr	x19, [sp, #16]
  41bbcc:	ldp	x29, x30, [sp], #32
  41bbd0:	ret
  41bbd4:	bl	42f0d8 <ferror@plt+0x2c808>
  41bbd8:	str	x0, [x19, #712]
  41bbdc:	b	41bbc4 <ferror@plt+0x192f4>
  41bbe0:	stp	x29, x30, [sp, #-48]!
  41bbe4:	mov	x29, sp
  41bbe8:	stp	x19, x20, [sp, #16]
  41bbec:	stp	x21, x22, [sp, #32]
  41bbf0:	mov	x19, x0
  41bbf4:	mov	x20, x1
  41bbf8:	mov	x22, x2
  41bbfc:	mov	w21, w3
  41bc00:	ldr	x0, [x0, #840]
  41bc04:	ldr	x1, [x19, #832]
  41bc08:	sub	x0, x0, x1
  41bc0c:	cmp	x0, #0xc7
  41bc10:	b.ls	41bccc <ferror@plt+0x193fc>  // b.plast
  41bc14:	ldr	x5, [x19, #832]
  41bc18:	add	x5, x5, #0xc8
  41bc1c:	ldr	x0, [x19, #824]
  41bc20:	cmp	x5, x0
  41bc24:	b.eq	41bcdc <ferror@plt+0x1940c>  // b.none
  41bc28:	ldr	x4, [x19, #856]
  41bc2c:	add	x5, x5, x4
  41bc30:	bic	x4, x5, x4
  41bc34:	str	x4, [x19, #832]
  41bc38:	ldr	x1, [x19, #816]
  41bc3c:	ldr	x2, [x19, #840]
  41bc40:	sub	x4, x4, x1
  41bc44:	sub	x1, x2, x1
  41bc48:	cmp	x4, x1
  41bc4c:	b.ls	41bc54 <ferror@plt+0x19384>  // b.plast
  41bc50:	str	x2, [x19, #832]
  41bc54:	ldr	x2, [x19, #832]
  41bc58:	str	x2, [x19, #824]
  41bc5c:	stp	xzr, xzr, [x0]
  41bc60:	stp	xzr, xzr, [x0, #32]
  41bc64:	stp	xzr, xzr, [x0, #48]
  41bc68:	stp	xzr, xzr, [x0, #64]
  41bc6c:	stp	xzr, xzr, [x0, #80]
  41bc70:	stp	xzr, xzr, [x0, #96]
  41bc74:	stp	xzr, xzr, [x0, #112]
  41bc78:	stp	xzr, xzr, [x0, #128]
  41bc7c:	stp	xzr, xzr, [x0, #144]
  41bc80:	stp	xzr, xzr, [x0, #160]
  41bc84:	stp	xzr, xzr, [x0, #176]
  41bc88:	str	xzr, [x0, #192]
  41bc8c:	str	x20, [x0, #24]
  41bc90:	str	x20, [x0, #16]
  41bc94:	add	x20, x20, x22
  41bc98:	str	x20, [x0, #32]
  41bc9c:	ldrb	w1, [x0, #105]
  41bca0:	bfi	w1, w21, #1, #1
  41bca4:	strb	w1, [x0, #105]
  41bca8:	ldr	x1, [x19]
  41bcac:	str	x1, [x0, #72]
  41bcb0:	mov	w1, #0x1                   	// #1
  41bcb4:	strb	w1, [x0, #104]
  41bcb8:	str	x0, [x19]
  41bcbc:	ldp	x19, x20, [sp, #16]
  41bcc0:	ldp	x21, x22, [sp, #32]
  41bcc4:	ldp	x29, x30, [sp], #48
  41bcc8:	ret
  41bccc:	mov	x1, #0xc8                  	// #200
  41bcd0:	add	x0, x19, #0x328
  41bcd4:	bl	446d94 <_obstack_newchunk@@Base>
  41bcd8:	b	41bc14 <ferror@plt+0x19344>
  41bcdc:	ldrb	w1, [x19, #888]
  41bce0:	orr	w1, w1, #0x2
  41bce4:	strb	w1, [x19, #888]
  41bce8:	b	41bc28 <ferror@plt+0x19358>
  41bcec:	stp	x29, x30, [sp, #-80]!
  41bcf0:	mov	x29, sp
  41bcf4:	stp	x19, x20, [sp, #16]
  41bcf8:	stp	x23, x24, [sp, #48]
  41bcfc:	mov	x20, x0
  41bd00:	ldr	x23, [x0]
  41bd04:	ldr	x24, [x23, #80]
  41bd08:	ldr	x19, [x23, #96]
  41bd0c:	cbz	x19, 41bd64 <ferror@plt+0x19494>
  41bd10:	stp	x21, x22, [sp, #32]
  41bd14:	str	x25, [sp, #64]
  41bd18:	adrp	x22, 460000 <_obstack_memory_used@@Base+0x19094>
  41bd1c:	add	x22, x22, #0x900
  41bd20:	adrp	x21, 460000 <_obstack_memory_used@@Base+0x19094>
  41bd24:	add	x21, x21, #0x7c0
  41bd28:	mov	w25, #0x3                   	// #3
  41bd2c:	ldrsw	x1, [x19, #28]
  41bd30:	add	x1, x1, x1, lsl #1
  41bd34:	add	x1, x22, x1, lsl #3
  41bd38:	ldr	x5, [x1, #8]
  41bd3c:	mov	x4, x21
  41bd40:	mov	w3, #0x0                   	// #0
  41bd44:	ldr	w2, [x19, #8]
  41bd48:	mov	w1, w25
  41bd4c:	mov	x0, x20
  41bd50:	bl	41cbe8 <ferror@plt+0x1a318>
  41bd54:	ldr	x19, [x19]
  41bd58:	cbnz	x19, 41bd2c <ferror@plt+0x1945c>
  41bd5c:	ldp	x21, x22, [sp, #32]
  41bd60:	ldr	x25, [sp, #64]
  41bd64:	strb	wzr, [x20, #18]
  41bd68:	ldr	x0, [x23, #72]
  41bd6c:	str	x0, [x20]
  41bd70:	ldr	x19, [x23, #40]
  41bd74:	ldr	x0, [x23, #48]
  41bd78:	bl	402690 <free@plt>
  41bd7c:	ldr	x0, [x20, #816]
  41bd80:	cmp	x0, x23
  41bd84:	b.cs	41bda0 <ferror@plt+0x194d0>  // b.hs, b.nlast
  41bd88:	ldr	x0, [x20, #840]
  41bd8c:	cmp	x0, x23
  41bd90:	b.ls	41bda0 <ferror@plt+0x194d0>  // b.plast
  41bd94:	str	x23, [x20, #824]
  41bd98:	str	x23, [x20, #832]
  41bd9c:	b	41bdac <ferror@plt+0x194dc>
  41bda0:	mov	x1, x23
  41bda4:	add	x0, x20, #0x328
  41bda8:	bl	446eec <_obstack_free@@Base>
  41bdac:	cbz	x24, 41bde8 <ferror@plt+0x19518>
  41bdb0:	mov	x2, x19
  41bdb4:	mov	x1, x24
  41bdb8:	mov	x0, x20
  41bdbc:	bl	422e48 <ferror@plt+0x20578>
  41bdc0:	mov	w4, #0x0                   	// #0
  41bdc4:	mov	w3, #0x0                   	// #0
  41bdc8:	mov	x2, #0x0                   	// #0
  41bdcc:	mov	w1, #0x1                   	// #1
  41bdd0:	mov	x0, x20
  41bdd4:	bl	41b390 <ferror@plt+0x18ac0>
  41bdd8:	ldp	x19, x20, [sp, #16]
  41bddc:	ldp	x23, x24, [sp, #48]
  41bde0:	ldp	x29, x30, [sp], #80
  41bde4:	ret
  41bde8:	cbz	x19, 41bdd8 <ferror@plt+0x19508>
  41bdec:	mov	x0, x19
  41bdf0:	bl	402690 <free@plt>
  41bdf4:	b	41bdd8 <ferror@plt+0x19508>
  41bdf8:	stp	x29, x30, [sp, #-64]!
  41bdfc:	mov	x29, sp
  41be00:	stp	x19, x20, [sp, #16]
  41be04:	stp	x21, x22, [sp, #32]
  41be08:	str	x23, [sp, #48]
  41be0c:	mov	x21, x0
  41be10:	ldr	x19, [x0, #1400]
  41be14:	bl	418fd0 <ferror@plt+0x16700>
  41be18:	cbz	x0, 41be6c <ferror@plt+0x1959c>
  41be1c:	ldr	w2, [x0, #8]
  41be20:	add	w1, w2, #0x2
  41be24:	add	x1, x1, #0xf
  41be28:	and	x1, x1, #0x1fffffff0
  41be2c:	sub	sp, sp, x1
  41be30:	mov	x20, sp
  41be34:	ldr	x4, [x0, #16]
  41be38:	ldrb	w0, [x4]
  41be3c:	cmp	w0, #0x4c
  41be40:	cset	x1, eq  // eq = none
  41be44:	add	x1, x1, #0x1
  41be48:	add	x1, x4, x1
  41be4c:	mov	w2, w2
  41be50:	sub	x2, x2, #0x1
  41be54:	add	x4, x4, x2
  41be58:	cmp	x1, x4
  41be5c:	b.cs	41bedc <ferror@plt+0x1960c>  // b.hs, b.nlast
  41be60:	mov	x3, x20
  41be64:	mov	w5, #0x5c                  	// #92
  41be68:	b	41beb8 <ferror@plt+0x195e8>
  41be6c:	ldr	x0, [x21, #448]
  41be70:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x19094>
  41be74:	add	x4, x4, #0x7d8
  41be78:	mov	w3, #0x0                   	// #0
  41be7c:	ldur	w2, [x0, #-24]
  41be80:	mov	w1, #0x3                   	// #3
  41be84:	mov	x0, x21
  41be88:	bl	41cbe8 <ferror@plt+0x1a318>
  41be8c:	mov	w1, #0x0                   	// #0
  41be90:	mov	x0, x21
  41be94:	bl	41911c <ferror@plt+0x1684c>
  41be98:	mov	x0, x21
  41be9c:	bl	4191a4 <ferror@plt+0x168d4>
  41bea0:	b	41bfa8 <ferror@plt+0x196d8>
  41bea4:	mov	x1, x2
  41bea8:	ldrb	w2, [x1], #1
  41beac:	strb	w2, [x3], #1
  41beb0:	cmp	x4, x1
  41beb4:	b.ls	41bee0 <ferror@plt+0x19610>  // b.plast
  41beb8:	ldrb	w0, [x1]
  41bebc:	mov	x2, x1
  41bec0:	cmp	w0, #0x5c
  41bec4:	b.ne	41bea4 <ferror@plt+0x195d4>  // b.any
  41bec8:	ldrb	w0, [x1, #1]
  41becc:	cmp	w0, #0x22
  41bed0:	ccmp	w0, w5, #0x4, ne  // ne = any
  41bed4:	cinc	x2, x1, eq  // eq = none
  41bed8:	b	41bea4 <ferror@plt+0x195d4>
  41bedc:	mov	x3, x20
  41bee0:	strb	wzr, [x3]
  41bee4:	mov	w1, #0x0                   	// #0
  41bee8:	mov	x0, x21
  41beec:	bl	41911c <ferror@plt+0x1684c>
  41bef0:	mov	x0, x21
  41bef4:	bl	4191a4 <ferror@plt+0x168d4>
  41bef8:	cbz	x19, 41bfa8 <ferror@plt+0x196d8>
  41befc:	mov	x22, #0x0                   	// #0
  41bf00:	b	41bf08 <ferror@plt+0x19638>
  41bf04:	mov	x19, x1
  41bf08:	mov	x1, x20
  41bf0c:	ldr	x0, [x19, #8]
  41bf10:	bl	402620 <strcmp@plt>
  41bf14:	cbz	w0, 41bf28 <ferror@plt+0x19658>
  41bf18:	ldr	x1, [x19]
  41bf1c:	mov	x22, x19
  41bf20:	cbnz	x1, 41bf04 <ferror@plt+0x19634>
  41bf24:	b	41bfa8 <ferror@plt+0x196d8>
  41bf28:	cbz	x22, 41bfc0 <ferror@plt+0x196f0>
  41bf2c:	ldr	x0, [x19]
  41bf30:	str	x0, [x22]
  41bf34:	ldr	x1, [x19, #8]
  41bf38:	mov	x0, x21
  41bf3c:	bl	42429c <ferror@plt+0x219cc>
  41bf40:	mov	x20, x0
  41bf44:	cbz	x0, 41bf90 <ferror@plt+0x196c0>
  41bf48:	ldr	x1, [x21, #1024]
  41bf4c:	cbz	x1, 41bf58 <ferror@plt+0x19688>
  41bf50:	mov	x0, x21
  41bf54:	blr	x1
  41bf58:	ldrb	w0, [x20, #18]
  41bf5c:	tbz	w0, #1, 41bf88 <ferror@plt+0x196b8>
  41bf60:	ldr	x3, [x21, #944]
  41bf64:	cbz	x3, 41bf78 <ferror@plt+0x196a8>
  41bf68:	mov	x2, x20
  41bf6c:	ldr	w1, [x21, #48]
  41bf70:	mov	x0, x21
  41bf74:	blr	x3
  41bf78:	ldrb	w0, [x21, #1151]
  41bf7c:	cbnz	w0, 41bfcc <ferror@plt+0x196fc>
  41bf80:	mov	x0, x20
  41bf84:	bl	42bbec <ferror@plt+0x2931c>
  41bf88:	ldrb	w0, [x19, #28]
  41bf8c:	tbz	w0, #2, 41bfe0 <ferror@plt+0x19710>
  41bf90:	ldr	x0, [x19, #16]
  41bf94:	bl	402690 <free@plt>
  41bf98:	ldr	x0, [x19, #8]
  41bf9c:	bl	402690 <free@plt>
  41bfa0:	mov	x0, x19
  41bfa4:	bl	402690 <free@plt>
  41bfa8:	mov	sp, x29
  41bfac:	ldp	x19, x20, [sp, #16]
  41bfb0:	ldp	x21, x22, [sp, #32]
  41bfb4:	ldr	x23, [sp, #48]
  41bfb8:	ldp	x29, x30, [sp], #64
  41bfbc:	ret
  41bfc0:	ldr	x0, [x19]
  41bfc4:	str	x0, [x21, #1400]
  41bfc8:	b	41bf34 <ferror@plt+0x19664>
  41bfcc:	mov	x2, #0x0                   	// #0
  41bfd0:	mov	x1, x20
  41bfd4:	mov	x0, x21
  41bfd8:	bl	42af40 <ferror@plt+0x28670>
  41bfdc:	b	41bf80 <ferror@plt+0x196b0>
  41bfe0:	ldr	x20, [x19, #16]
  41bfe4:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x19094>
  41bfe8:	add	x1, x1, #0x800
  41bfec:	mov	x0, x20
  41bff0:	bl	4027e0 <strcspn@plt>
  41bff4:	sxtw	x23, w0
  41bff8:	mov	w2, w23
  41bffc:	mov	x1, x20
  41c000:	mov	x0, x21
  41c004:	bl	4232a0 <ferror@plt+0x209d0>
  41c008:	mov	x20, x0
  41c00c:	ldr	x22, [x19, #16]
  41c010:	add	x22, x22, x23
  41c014:	mov	w1, #0xa                   	// #10
  41c018:	mov	x0, x22
  41c01c:	bl	4026c0 <strchr@plt>
  41c020:	mov	w3, #0x1                   	// #1
  41c024:	sub	x2, x0, x22
  41c028:	mov	x1, x22
  41c02c:	mov	x0, x21
  41c030:	bl	41bbe0 <ferror@plt+0x19310>
  41c034:	mov	x22, x0
  41c038:	cbz	x0, 41c0bc <ferror@plt+0x197ec>
  41c03c:	mov	x0, x21
  41c040:	bl	423a20 <ferror@plt+0x21150>
  41c044:	mov	w0, #0x1                   	// #1
  41c048:	strb	w0, [x22, #106]
  41c04c:	mov	x1, x20
  41c050:	mov	x0, x21
  41c054:	bl	42bdec <ferror@plt+0x2951c>
  41c058:	and	w0, w0, #0xff
  41c05c:	cbz	w0, 41c0a4 <ferror@plt+0x197d4>
  41c060:	mov	x0, x21
  41c064:	bl	41bcec <ferror@plt+0x1941c>
  41c068:	ldr	x0, [x20, #24]
  41c06c:	ldr	w1, [x19, #24]
  41c070:	str	w1, [x0, #8]
  41c074:	ldr	x0, [x20, #24]
  41c078:	ldrb	w2, [x19, #28]
  41c07c:	ldrb	w1, [x0, #19]
  41c080:	bfi	w1, w2, #4, #1
  41c084:	strb	w1, [x0, #19]
  41c088:	ldr	x1, [x20, #24]
  41c08c:	ldrb	w0, [x19, #28]
  41c090:	ubfx	x0, x0, #1, #1
  41c094:	ldrb	w2, [x1, #19]
  41c098:	bfi	w2, w0, #5, #1
  41c09c:	strb	w2, [x1, #19]
  41c0a0:	b	41bf90 <ferror@plt+0x196c0>
  41c0a4:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41c0a8:	add	x2, x2, #0x808
  41c0ac:	mov	w1, #0x9a8                 	// #2472
  41c0b0:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x19094>
  41c0b4:	add	x0, x0, #0x820
  41c0b8:	bl	4062a0 <ferror@plt+0x39d0>
  41c0bc:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41c0c0:	add	x2, x2, #0x808
  41c0c4:	mov	w1, #0x9ac                 	// #2476
  41c0c8:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x19094>
  41c0cc:	add	x0, x0, #0x820
  41c0d0:	bl	4062a0 <ferror@plt+0x39d0>
  41c0d4:	stp	x29, x30, [sp, #-96]!
  41c0d8:	mov	x29, sp
  41c0dc:	stp	x19, x20, [sp, #16]
  41c0e0:	stp	x21, x22, [sp, #32]
  41c0e4:	stp	x23, x24, [sp, #48]
  41c0e8:	stp	x25, x26, [sp, #64]
  41c0ec:	str	x27, [sp, #80]
  41c0f0:	mov	x19, x0
  41c0f4:	mov	w21, w2
  41c0f8:	ldr	w0, [x1]
  41c0fc:	sub	w2, w0, #0x1
  41c100:	add	x2, x2, #0xf
  41c104:	and	x2, x2, #0x1fffffff0
  41c108:	sub	sp, sp, x2
  41c10c:	mov	x22, sp
  41c110:	ldr	x2, [x1, #8]
  41c114:	ldrb	w1, [x2]
  41c118:	cmp	w1, #0x4c
  41c11c:	cset	x1, eq  // eq = none
  41c120:	add	x1, x1, #0x1
  41c124:	add	x1, x2, x1
  41c128:	mov	w0, w0
  41c12c:	sub	x0, x0, #0x1
  41c130:	add	x2, x2, x0
  41c134:	cmp	x1, x2
  41c138:	b.cs	41c180 <ferror@plt+0x198b0>  // b.hs, b.nlast
  41c13c:	mov	x20, x22
  41c140:	mov	w4, #0x5c                  	// #92
  41c144:	b	41c15c <ferror@plt+0x1988c>
  41c148:	mov	x1, x0
  41c14c:	ldrb	w0, [x1], #1
  41c150:	strb	w0, [x20], #1
  41c154:	cmp	x2, x1
  41c158:	b.ls	41c184 <ferror@plt+0x198b4>  // b.plast
  41c15c:	ldrb	w3, [x1]
  41c160:	mov	x0, x1
  41c164:	cmp	w3, #0x5c
  41c168:	b.ne	41c148 <ferror@plt+0x19878>  // b.any
  41c16c:	ldrb	w0, [x1, #1]
  41c170:	cmp	w0, #0x22
  41c174:	ccmp	w0, w4, #0x4, ne  // ne = any
  41c178:	cinc	x0, x1, eq  // eq = none
  41c17c:	b	41c148 <ferror@plt+0x19878>
  41c180:	mov	x20, x22
  41c184:	mov	w0, #0xa                   	// #10
  41c188:	strb	w0, [x20]
  41c18c:	ldr	x25, [x19, #136]
  41c190:	ldr	x24, [x19, #448]
  41c194:	ldr	x23, [x19, #488]
  41c198:	mov	x1, #0x38                  	// #56
  41c19c:	mov	x0, #0x1                   	// #1
  41c1a0:	bl	447084 <_obstack_memory_used@@Base+0x118>
  41c1a4:	str	x0, [x19, #136]
  41c1a8:	mov	w3, #0x1                   	// #1
  41c1ac:	sub	x2, x20, x22
  41c1b0:	mov	x1, x22
  41c1b4:	mov	x0, x19
  41c1b8:	bl	41bbe0 <ferror@plt+0x19310>
  41c1bc:	ldr	x0, [x19]
  41c1c0:	ldr	x1, [x0, #72]
  41c1c4:	cbz	x1, 41c1d0 <ferror@plt+0x19900>
  41c1c8:	ldr	x1, [x1, #80]
  41c1cc:	str	x1, [x0, #80]
  41c1d0:	mov	w0, #0x1                   	// #1
  41c1d4:	strb	w0, [x19, #16]
  41c1d8:	strb	wzr, [x19, #21]
  41c1dc:	mov	w0, #0x53                  	// #83
  41c1e0:	strb	w0, [x19, #156]
  41c1e4:	ldr	x0, [x19, #40]
  41c1e8:	ldr	w0, [x0, #60]
  41c1ec:	str	w0, [x19, #48]
  41c1f0:	mov	x0, x19
  41c1f4:	bl	423a20 <ferror@plt+0x21150>
  41c1f8:	ldr	x20, [x19, #144]
  41c1fc:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x19094>
  41c200:	add	x0, x0, #0x900
  41c204:	add	x0, x0, #0x108
  41c208:	str	x0, [x19, #144]
  41c20c:	mov	x0, x19
  41c210:	bl	41abdc <ferror@plt+0x1830c>
  41c214:	mov	w1, #0x1                   	// #1
  41c218:	mov	x0, x19
  41c21c:	bl	41a4b4 <ferror@plt+0x17be4>
  41c220:	str	x20, [x19, #144]
  41c224:	ldrb	w0, [x19, #156]
  41c228:	cmp	w0, #0x51
  41c22c:	b.eq	41c2c0 <ferror@plt+0x199f0>  // b.none
  41c230:	mov	x0, #0x18                  	// #24
  41c234:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  41c238:	mov	x20, x0
  41c23c:	ldp	x0, x1, [x19, #152]
  41c240:	stp	x0, x1, [x20]
  41c244:	ldr	x0, [x19, #168]
  41c248:	str	x0, [x20, #16]
  41c24c:	ldr	x3, [x19, #904]
  41c250:	mov	w26, #0x1                   	// #1
  41c254:	cbz	x3, 41c268 <ferror@plt+0x19998>
  41c258:	mov	w2, #0x0                   	// #0
  41c25c:	ldr	x1, [x19, #448]
  41c260:	mov	x0, x19
  41c264:	blr	x3
  41c268:	ldr	x0, [x19]
  41c26c:	str	xzr, [x0, #80]
  41c270:	mov	x0, x19
  41c274:	bl	41bcec <ferror@plt+0x1941c>
  41c278:	ldr	x0, [x19, #136]
  41c27c:	bl	402690 <free@plt>
  41c280:	str	x25, [x19, #136]
  41c284:	str	x24, [x19, #448]
  41c288:	str	x23, [x19, #488]
  41c28c:	mov	w3, w26
  41c290:	mov	x2, x20
  41c294:	mov	x1, #0x0                   	// #0
  41c298:	mov	x0, x19
  41c29c:	bl	42b56c <ferror@plt+0x28c9c>
  41c2a0:	mov	sp, x29
  41c2a4:	ldp	x19, x20, [sp, #16]
  41c2a8:	ldp	x21, x22, [sp, #32]
  41c2ac:	ldp	x23, x24, [sp, #48]
  41c2b0:	ldp	x25, x26, [sp, #64]
  41c2b4:	ldr	x27, [sp, #80]
  41c2b8:	ldp	x29, x30, [sp], #96
  41c2bc:	ret
  41c2c0:	mov	x0, #0x4b0                 	// #1200
  41c2c4:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  41c2c8:	mov	x20, x0
  41c2cc:	ldp	x0, x1, [x19, #152]
  41c2d0:	stp	x0, x1, [x20]
  41c2d4:	ldr	x0, [x19, #168]
  41c2d8:	str	x0, [x20, #16]
  41c2dc:	mov	x22, #0x18                  	// #24
  41c2e0:	mov	w26, #0x1                   	// #1
  41c2e4:	mov	w27, #0x32                  	// #50
  41c2e8:	b	41c314 <ferror@plt+0x19a44>
  41c2ec:	add	w27, w27, w27, lsl #1
  41c2f0:	add	w27, w27, w27, lsr #31
  41c2f4:	asr	w27, w27, #1
  41c2f8:	sbfiz	x1, x27, #1, #32
  41c2fc:	add	x1, x1, w27, sxtw
  41c300:	lsl	x1, x1, #3
  41c304:	mov	x0, x20
  41c308:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  41c30c:	mov	x20, x0
  41c310:	add	x22, x22, #0x18
  41c314:	mov	x0, x19
  41c318:	bl	42ea88 <ferror@plt+0x2c1b8>
  41c31c:	add	x1, x20, x22
  41c320:	ldp	x2, x3, [x0]
  41c324:	stp	x2, x3, [x1]
  41c328:	ldr	x0, [x0, #16]
  41c32c:	str	x0, [x1, #16]
  41c330:	str	w21, [x20, x22]
  41c334:	add	w26, w26, #0x1
  41c338:	ldrh	w0, [x1, #6]
  41c33c:	orr	w0, w0, #0x400
  41c340:	strh	w0, [x1, #6]
  41c344:	ldrb	w0, [x1, #4]
  41c348:	cmp	w0, #0x52
  41c34c:	b.eq	41c268 <ferror@plt+0x19998>  // b.none
  41c350:	cmp	w27, w26
  41c354:	b.ne	41c310 <ferror@plt+0x19a40>  // b.any
  41c358:	b	41c2ec <ferror@plt+0x19a1c>
  41c35c:	stp	x29, x30, [sp, #-32]!
  41c360:	mov	x29, sp
  41c364:	stp	x19, x20, [sp, #16]
  41c368:	mov	x19, x0
  41c36c:	mov	w20, w1
  41c370:	bl	418fd0 <ferror@plt+0x16700>
  41c374:	mov	w1, #0x53                  	// #83
  41c378:	strb	w1, [x19, #156]
  41c37c:	cbz	x0, 41c3a0 <ferror@plt+0x19ad0>
  41c380:	mov	w2, w20
  41c384:	add	x1, x0, #0x8
  41c388:	mov	x0, x19
  41c38c:	bl	41c0d4 <ferror@plt+0x19804>
  41c390:	mov	w0, #0x1                   	// #1
  41c394:	ldp	x19, x20, [sp, #16]
  41c398:	ldp	x29, x30, [sp], #32
  41c39c:	ret
  41c3a0:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41c3a4:	add	x2, x2, #0x840
  41c3a8:	mov	w1, #0x3                   	// #3
  41c3ac:	mov	x0, x19
  41c3b0:	bl	41c9fc <ferror@plt+0x1a12c>
  41c3b4:	mov	w0, #0x0                   	// #0
  41c3b8:	b	41c394 <ferror@plt+0x19ac4>
  41c3bc:	stp	x29, x30, [sp, #-32]!
  41c3c0:	mov	x29, sp
  41c3c4:	stp	x19, x20, [sp, #16]
  41c3c8:	mov	x19, x0
  41c3cc:	mov	w20, w1
  41c3d0:	mov	x1, x2
  41c3d4:	mov	x2, x3
  41c3d8:	mov	w3, #0x1                   	// #1
  41c3dc:	bl	41bbe0 <ferror@plt+0x19310>
  41c3e0:	mov	w0, #0x1                   	// #1
  41c3e4:	strb	w0, [x19, #16]
  41c3e8:	strb	wzr, [x19, #21]
  41c3ec:	mov	w0, #0x53                  	// #83
  41c3f0:	strb	w0, [x19, #156]
  41c3f4:	ldr	x0, [x19, #40]
  41c3f8:	ldr	w0, [x0, #60]
  41c3fc:	str	w0, [x19, #48]
  41c400:	mov	x0, x19
  41c404:	bl	423a20 <ferror@plt+0x21150>
  41c408:	sbfiz	x1, x20, #1, #32
  41c40c:	add	x20, x1, w20, sxtw
  41c410:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x19094>
  41c414:	add	x1, x1, #0x900
  41c418:	add	x20, x1, x20, lsl #3
  41c41c:	str	x20, [x19, #144]
  41c420:	ldrb	w0, [x19, #1160]
  41c424:	cbnz	w0, 41c458 <ferror@plt+0x19b88>
  41c428:	ldr	x0, [x19, #144]
  41c42c:	ldr	x1, [x0]
  41c430:	mov	x0, x19
  41c434:	blr	x1
  41c438:	mov	w1, #0x1                   	// #1
  41c43c:	mov	x0, x19
  41c440:	bl	41a4b4 <ferror@plt+0x17be4>
  41c444:	mov	x0, x19
  41c448:	bl	41bcec <ferror@plt+0x1941c>
  41c44c:	ldp	x19, x20, [sp, #16]
  41c450:	ldp	x29, x30, [sp], #32
  41c454:	ret
  41c458:	mov	x0, x19
  41c45c:	bl	41a370 <ferror@plt+0x17aa0>
  41c460:	b	41c428 <ferror@plt+0x19b58>
  41c464:	stp	x29, x30, [sp, #-48]!
  41c468:	mov	x29, sp
  41c46c:	stp	x19, x20, [sp, #16]
  41c470:	stp	x21, x22, [sp, #32]
  41c474:	mov	x22, x0
  41c478:	mov	x20, x1
  41c47c:	mov	x0, x1
  41c480:	bl	4022b0 <strlen@plt>
  41c484:	mov	x19, x0
  41c488:	add	x0, x0, #0x12
  41c48c:	and	x0, x0, #0xfffffffffffffff0
  41c490:	sub	sp, sp, x0
  41c494:	mov	x21, sp
  41c498:	mov	x2, x19
  41c49c:	mov	x1, x20
  41c4a0:	mov	x0, x21
  41c4a4:	bl	402260 <memcpy@plt>
  41c4a8:	mov	w1, #0x3d                  	// #61
  41c4ac:	mov	x0, x20
  41c4b0:	bl	4026c0 <strchr@plt>
  41c4b4:	cbz	x0, 41c4f4 <ferror@plt+0x19c24>
  41c4b8:	sub	x20, x0, x20
  41c4bc:	mov	w0, #0x20                  	// #32
  41c4c0:	strb	w0, [x21, x20]
  41c4c4:	mov	w0, #0xa                   	// #10
  41c4c8:	strb	w0, [x21, x19]
  41c4cc:	mov	x3, x19
  41c4d0:	mov	x2, x21
  41c4d4:	mov	w1, #0x0                   	// #0
  41c4d8:	mov	x0, x22
  41c4dc:	bl	41c3bc <ferror@plt+0x19aec>
  41c4e0:	mov	sp, x29
  41c4e4:	ldp	x19, x20, [sp, #16]
  41c4e8:	ldp	x21, x22, [sp, #32]
  41c4ec:	ldp	x29, x30, [sp], #48
  41c4f0:	ret
  41c4f4:	add	x0, x19, #0x1
  41c4f8:	mov	w1, #0x20                  	// #32
  41c4fc:	strb	w1, [x21, x19]
  41c500:	mov	w1, #0x31                  	// #49
  41c504:	strb	w1, [x21, x0]
  41c508:	add	x19, x19, #0x2
  41c50c:	b	41c4c4 <ferror@plt+0x19bf4>
  41c510:	stp	x29, x30, [sp, #-272]!
  41c514:	mov	x29, sp
  41c518:	stp	x19, x20, [sp, #16]
  41c51c:	mov	x20, x0
  41c520:	mov	x0, x1
  41c524:	str	x2, [sp, #224]
  41c528:	str	x3, [sp, #232]
  41c52c:	str	x4, [sp, #240]
  41c530:	str	x5, [sp, #248]
  41c534:	str	x6, [sp, #256]
  41c538:	str	x7, [sp, #264]
  41c53c:	str	q0, [sp, #96]
  41c540:	str	q1, [sp, #112]
  41c544:	str	q2, [sp, #128]
  41c548:	str	q3, [sp, #144]
  41c54c:	str	q4, [sp, #160]
  41c550:	str	q5, [sp, #176]
  41c554:	str	q6, [sp, #192]
  41c558:	str	q7, [sp, #208]
  41c55c:	add	x1, sp, #0x110
  41c560:	str	x1, [sp, #64]
  41c564:	str	x1, [sp, #72]
  41c568:	add	x1, sp, #0xe0
  41c56c:	str	x1, [sp, #80]
  41c570:	mov	w1, #0xffffffd0            	// #-48
  41c574:	str	w1, [sp, #88]
  41c578:	mov	w1, #0xffffff80            	// #-128
  41c57c:	str	w1, [sp, #92]
  41c580:	ldp	x2, x3, [sp, #64]
  41c584:	stp	x2, x3, [sp, #32]
  41c588:	ldp	x2, x3, [sp, #80]
  41c58c:	stp	x2, x3, [sp, #48]
  41c590:	add	x1, sp, #0x20
  41c594:	bl	447234 <_obstack_memory_used@@Base+0x2c8>
  41c598:	mov	x19, x0
  41c59c:	mov	x1, x0
  41c5a0:	mov	x0, x20
  41c5a4:	bl	41c464 <ferror@plt+0x19b94>
  41c5a8:	mov	x0, x19
  41c5ac:	bl	402690 <free@plt>
  41c5b0:	ldp	x19, x20, [sp, #16]
  41c5b4:	ldp	x29, x30, [sp], #272
  41c5b8:	ret
  41c5bc:	stp	x29, x30, [sp, #-48]!
  41c5c0:	mov	x29, sp
  41c5c4:	stp	x19, x20, [sp, #16]
  41c5c8:	stp	x21, x22, [sp, #32]
  41c5cc:	mov	x21, x0
  41c5d0:	mov	x20, x1
  41c5d4:	mov	x0, x1
  41c5d8:	bl	4022b0 <strlen@plt>
  41c5dc:	mov	x19, x0
  41c5e0:	add	x0, x0, #0x10
  41c5e4:	and	x0, x0, #0xfffffffffffffff0
  41c5e8:	sub	sp, sp, x0
  41c5ec:	mov	x22, sp
  41c5f0:	mov	x2, x19
  41c5f4:	mov	x1, x20
  41c5f8:	mov	x0, x22
  41c5fc:	bl	402260 <memcpy@plt>
  41c600:	mov	w0, #0xa                   	// #10
  41c604:	strb	w0, [x22, x19]
  41c608:	mov	x3, x19
  41c60c:	mov	x2, x22
  41c610:	mov	w1, #0x0                   	// #0
  41c614:	mov	x0, x21
  41c618:	bl	41c3bc <ferror@plt+0x19aec>
  41c61c:	mov	sp, x29
  41c620:	ldp	x19, x20, [sp, #16]
  41c624:	ldp	x21, x22, [sp, #32]
  41c628:	ldp	x29, x30, [sp], #48
  41c62c:	ret
  41c630:	stp	x29, x30, [sp, #-48]!
  41c634:	mov	x29, sp
  41c638:	stp	x19, x20, [sp, #16]
  41c63c:	stp	x21, x22, [sp, #32]
  41c640:	mov	x21, x0
  41c644:	mov	x20, x1
  41c648:	mov	x0, x1
  41c64c:	bl	4022b0 <strlen@plt>
  41c650:	mov	x19, x0
  41c654:	add	x0, x0, #0x10
  41c658:	and	x0, x0, #0xfffffffffffffff0
  41c65c:	sub	sp, sp, x0
  41c660:	mov	x22, sp
  41c664:	mov	x2, x19
  41c668:	mov	x1, x20
  41c66c:	mov	x0, x22
  41c670:	bl	402260 <memcpy@plt>
  41c674:	mov	w0, #0xa                   	// #10
  41c678:	strb	w0, [x22, x19]
  41c67c:	mov	x3, x19
  41c680:	mov	x2, x22
  41c684:	mov	w1, #0x7                   	// #7
  41c688:	mov	x0, x21
  41c68c:	bl	41c3bc <ferror@plt+0x19aec>
  41c690:	mov	sp, x29
  41c694:	ldp	x19, x20, [sp, #16]
  41c698:	ldp	x21, x22, [sp, #32]
  41c69c:	ldp	x29, x30, [sp], #48
  41c6a0:	ret
  41c6a4:	stp	x29, x30, [sp, #-64]!
  41c6a8:	mov	x29, sp
  41c6ac:	stp	x19, x20, [sp, #16]
  41c6b0:	stp	x21, x22, [sp, #32]
  41c6b4:	stp	x23, x24, [sp, #48]
  41c6b8:	mov	x23, x0
  41c6bc:	mov	x20, x1
  41c6c0:	mov	w24, w2
  41c6c4:	mov	x0, x1
  41c6c8:	bl	4022b0 <strlen@plt>
  41c6cc:	mov	x19, x0
  41c6d0:	mov	w1, #0x3d                  	// #61
  41c6d4:	mov	x0, x20
  41c6d8:	bl	4026c0 <strchr@plt>
  41c6dc:	mov	x21, x0
  41c6e0:	add	x0, x19, #0x11
  41c6e4:	and	x0, x0, #0xfffffffffffffff0
  41c6e8:	sub	sp, sp, x0
  41c6ec:	mov	x22, sp
  41c6f0:	mov	x2, x19
  41c6f4:	mov	x1, x20
  41c6f8:	mov	x0, x22
  41c6fc:	bl	402260 <memcpy@plt>
  41c700:	mov	x3, x19
  41c704:	cbz	x21, 41c720 <ferror@plt+0x19e50>
  41c708:	sub	x20, x21, x20
  41c70c:	mov	w0, #0x28                  	// #40
  41c710:	strb	w0, [x22, x20]
  41c714:	add	x3, x19, #0x1
  41c718:	mov	w0, #0x29                  	// #41
  41c71c:	strb	w0, [x22, x19]
  41c720:	mov	w0, #0xa                   	// #10
  41c724:	strb	w0, [x22, x3]
  41c728:	mov	x2, x22
  41c72c:	mov	w1, w24
  41c730:	mov	x0, x23
  41c734:	bl	41c3bc <ferror@plt+0x19aec>
  41c738:	mov	sp, x29
  41c73c:	ldp	x19, x20, [sp, #16]
  41c740:	ldp	x21, x22, [sp, #32]
  41c744:	ldp	x23, x24, [sp, #48]
  41c748:	ldp	x29, x30, [sp], #64
  41c74c:	ret
  41c750:	stp	x29, x30, [sp, #-16]!
  41c754:	mov	x29, sp
  41c758:	mov	w2, #0x10                  	// #16
  41c75c:	bl	41c6a4 <ferror@plt+0x19dd4>
  41c760:	ldp	x29, x30, [sp], #16
  41c764:	ret
  41c768:	stp	x29, x30, [sp, #-16]!
  41c76c:	mov	x29, sp
  41c770:	mov	w2, #0x11                  	// #17
  41c774:	bl	41c6a4 <ferror@plt+0x19dd4>
  41c778:	ldp	x29, x30, [sp], #16
  41c77c:	ret
  41c780:	stp	x29, x30, [sp, #-48]!
  41c784:	mov	x29, sp
  41c788:	stp	x19, x20, [sp, #16]
  41c78c:	str	x21, [sp, #32]
  41c790:	mov	x21, x0
  41c794:	adrp	x20, 460000 <_obstack_memory_used@@Base+0x19094>
  41c798:	add	x20, x20, #0x900
  41c79c:	add	x20, x20, #0x8
  41c7a0:	mov	w19, #0x0                   	// #0
  41c7a4:	ldrh	w2, [x20, #8]
  41c7a8:	ldr	x1, [x20], #24
  41c7ac:	mov	x0, x21
  41c7b0:	bl	4232a0 <ferror@plt+0x209d0>
  41c7b4:	ldrb	w1, [x0, #16]
  41c7b8:	orr	w1, w1, #0x1
  41c7bc:	bfi	w1, w19, #1, #7
  41c7c0:	strb	w1, [x0, #16]
  41c7c4:	add	w19, w19, #0x1
  41c7c8:	cmp	w19, #0x13
  41c7cc:	b.ne	41c7a4 <ferror@plt+0x19ed4>  // b.any
  41c7d0:	ldp	x19, x20, [sp, #16]
  41c7d4:	ldr	x21, [sp, #32]
  41c7d8:	ldp	x29, x30, [sp], #48
  41c7dc:	ret
  41c7e0:	stp	x29, x30, [sp, #-16]!
  41c7e4:	mov	x29, sp
  41c7e8:	bl	419868 <ferror@plt+0x16f98>
  41c7ec:	ldp	x29, x30, [sp], #16
  41c7f0:	ret
  41c7f4:	stp	x29, x30, [sp, #-64]!
  41c7f8:	mov	x29, sp
  41c7fc:	stp	x19, x20, [sp, #16]
  41c800:	stp	x21, x22, [sp, #32]
  41c804:	stp	x23, x24, [sp, #48]
  41c808:	ldr	x22, [x0, #1000]
  41c80c:	cbz	x22, 41c864 <ferror@plt+0x19f94>
  41c810:	mov	x19, x0
  41c814:	mov	w20, w1
  41c818:	mov	w24, w2
  41c81c:	mov	x23, x3
  41c820:	mov	x1, x4
  41c824:	mov	x21, x5
  41c828:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x19094>
  41c82c:	add	x0, x0, #0xbb0
  41c830:	bl	402680 <dgettext@plt>
  41c834:	mov	x5, x21
  41c838:	mov	x4, x0
  41c83c:	mov	x3, x23
  41c840:	mov	w2, w24
  41c844:	mov	w1, w20
  41c848:	mov	x0, x19
  41c84c:	blr	x22
  41c850:	ldp	x19, x20, [sp, #16]
  41c854:	ldp	x21, x22, [sp, #32]
  41c858:	ldp	x23, x24, [sp, #48]
  41c85c:	ldp	x29, x30, [sp], #64
  41c860:	ret
  41c864:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41c868:	add	x2, x2, #0xb80
  41c86c:	mov	w1, #0x29                  	// #41
  41c870:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x19094>
  41c874:	add	x0, x0, #0xb98
  41c878:	bl	4062a0 <ferror@plt+0x39d0>
  41c87c:	stp	x29, x30, [sp, #-240]!
  41c880:	mov	x29, sp
  41c884:	stp	x19, x20, [sp, #16]
  41c888:	stp	x21, x22, [sp, #32]
  41c88c:	str	x23, [sp, #48]
  41c890:	mov	x19, x0
  41c894:	mov	w20, w1
  41c898:	mov	w21, w2
  41c89c:	mov	x22, x3
  41c8a0:	mov	x23, x4
  41c8a4:	ldrb	w0, [x0, #1160]
  41c8a8:	cbz	w0, 41c8c8 <ferror@plt+0x19ff8>
  41c8ac:	ldrb	w0, [x19, #16]
  41c8b0:	cbz	w0, 41c8bc <ferror@plt+0x19fec>
  41c8b4:	ldr	w2, [x19, #48]
  41c8b8:	b	41c8e4 <ferror@plt+0x1a014>
  41c8bc:	ldr	x0, [x19, #40]
  41c8c0:	ldr	w2, [x0, #60]
  41c8c4:	b	41c8e4 <ferror@plt+0x1a014>
  41c8c8:	ldr	x0, [x19, #448]
  41c8cc:	ldr	x1, [x19, #488]
  41c8d0:	ldr	x1, [x1, #16]
  41c8d4:	mov	w2, #0x0                   	// #0
  41c8d8:	cmp	x0, x1
  41c8dc:	b.eq	41c8e4 <ferror@plt+0x1a014>  // b.none
  41c8e0:	ldur	w2, [x0, #-24]
  41c8e4:	mov	x3, #0x0                   	// #0
  41c8e8:	ldr	x1, [x19, #40]
  41c8ec:	add	x0, sp, #0x48
  41c8f0:	bl	42a37c <ferror@plt+0x27aac>
  41c8f4:	mov	x5, x23
  41c8f8:	mov	x4, x22
  41c8fc:	add	x3, sp, #0x48
  41c900:	mov	w2, w21
  41c904:	mov	w1, w20
  41c908:	mov	x0, x19
  41c90c:	bl	41c7f4 <ferror@plt+0x19f24>
  41c910:	mov	w19, w0
  41c914:	add	x0, sp, #0x48
  41c918:	bl	42a10c <ferror@plt+0x2783c>
  41c91c:	mov	w0, w19
  41c920:	ldp	x19, x20, [sp, #16]
  41c924:	ldp	x21, x22, [sp, #32]
  41c928:	ldr	x23, [sp, #48]
  41c92c:	ldp	x29, x30, [sp], #240
  41c930:	ret
  41c934:	stp	x29, x30, [sp, #-240]!
  41c938:	mov	x29, sp
  41c93c:	stp	x19, x20, [sp, #16]
  41c940:	stp	x21, x22, [sp, #32]
  41c944:	stp	x23, x24, [sp, #48]
  41c948:	mov	x19, x0
  41c94c:	ldr	x0, [x0, #1000]
  41c950:	cbz	x0, 41c9d4 <ferror@plt+0x1a104>
  41c954:	mov	w21, w1
  41c958:	mov	w22, w2
  41c95c:	mov	w2, w3
  41c960:	mov	w20, w4
  41c964:	mov	x23, x5
  41c968:	mov	x24, x6
  41c96c:	mov	x3, #0x0                   	// #0
  41c970:	ldr	x1, [x19, #40]
  41c974:	add	x0, sp, #0x48
  41c978:	bl	42a37c <ferror@plt+0x27aac>
  41c97c:	cbnz	w20, 41c9ec <ferror@plt+0x1a11c>
  41c980:	ldr	x20, [x19, #1000]
  41c984:	mov	x1, x23
  41c988:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x19094>
  41c98c:	add	x0, x0, #0xbb0
  41c990:	bl	402680 <dgettext@plt>
  41c994:	mov	x5, x24
  41c998:	mov	x4, x0
  41c99c:	add	x3, sp, #0x48
  41c9a0:	mov	w2, w22
  41c9a4:	mov	w1, w21
  41c9a8:	mov	x0, x19
  41c9ac:	blr	x20
  41c9b0:	mov	w19, w0
  41c9b4:	add	x0, sp, #0x48
  41c9b8:	bl	42a10c <ferror@plt+0x2783c>
  41c9bc:	mov	w0, w19
  41c9c0:	ldp	x19, x20, [sp, #16]
  41c9c4:	ldp	x21, x22, [sp, #32]
  41c9c8:	ldp	x23, x24, [sp, #48]
  41c9cc:	ldp	x29, x30, [sp], #240
  41c9d0:	ret
  41c9d4:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41c9d8:	add	x2, x2, #0xbb8
  41c9dc:	mov	w1, #0x9f                  	// #159
  41c9e0:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x19094>
  41c9e4:	add	x0, x0, #0xb98
  41c9e8:	bl	4062a0 <ferror@plt+0x39d0>
  41c9ec:	mov	w1, w20
  41c9f0:	add	x0, sp, #0x48
  41c9f4:	bl	42a2a4 <ferror@plt+0x279d4>
  41c9f8:	b	41c980 <ferror@plt+0x1a0b0>
  41c9fc:	stp	x29, x30, [sp, #-224]!
  41ca00:	mov	x29, sp
  41ca04:	str	x3, [sp, #184]
  41ca08:	str	x4, [sp, #192]
  41ca0c:	str	x5, [sp, #200]
  41ca10:	str	x6, [sp, #208]
  41ca14:	str	x7, [sp, #216]
  41ca18:	str	q0, [sp, #48]
  41ca1c:	str	q1, [sp, #64]
  41ca20:	str	q2, [sp, #80]
  41ca24:	str	q3, [sp, #96]
  41ca28:	str	q4, [sp, #112]
  41ca2c:	str	q5, [sp, #128]
  41ca30:	str	q6, [sp, #144]
  41ca34:	str	q7, [sp, #160]
  41ca38:	add	x3, sp, #0xe0
  41ca3c:	str	x3, [sp, #16]
  41ca40:	str	x3, [sp, #24]
  41ca44:	add	x3, sp, #0xb0
  41ca48:	str	x3, [sp, #32]
  41ca4c:	mov	w3, #0xffffffd8            	// #-40
  41ca50:	str	w3, [sp, #40]
  41ca54:	mov	w3, #0xffffff80            	// #-128
  41ca58:	str	w3, [sp, #44]
  41ca5c:	add	x4, sp, #0x10
  41ca60:	mov	x3, x2
  41ca64:	mov	w2, #0x0                   	// #0
  41ca68:	bl	41c87c <ferror@plt+0x19fac>
  41ca6c:	ldp	x29, x30, [sp], #224
  41ca70:	ret
  41ca74:	stp	x29, x30, [sp, #-224]!
  41ca78:	mov	x29, sp
  41ca7c:	str	x3, [sp, #184]
  41ca80:	str	x4, [sp, #192]
  41ca84:	str	x5, [sp, #200]
  41ca88:	str	x6, [sp, #208]
  41ca8c:	str	x7, [sp, #216]
  41ca90:	str	q0, [sp, #48]
  41ca94:	str	q1, [sp, #64]
  41ca98:	str	q2, [sp, #80]
  41ca9c:	str	q3, [sp, #96]
  41caa0:	str	q4, [sp, #112]
  41caa4:	str	q5, [sp, #128]
  41caa8:	str	q6, [sp, #144]
  41caac:	str	q7, [sp, #160]
  41cab0:	add	x3, sp, #0xe0
  41cab4:	str	x3, [sp, #16]
  41cab8:	str	x3, [sp, #24]
  41cabc:	add	x3, sp, #0xb0
  41cac0:	str	x3, [sp, #32]
  41cac4:	mov	w3, #0xffffffd8            	// #-40
  41cac8:	str	w3, [sp, #40]
  41cacc:	mov	w3, #0xffffff80            	// #-128
  41cad0:	str	w3, [sp, #44]
  41cad4:	add	x4, sp, #0x10
  41cad8:	mov	x3, x2
  41cadc:	mov	w2, w1
  41cae0:	mov	w1, #0x0                   	// #0
  41cae4:	bl	41c87c <ferror@plt+0x19fac>
  41cae8:	ldp	x29, x30, [sp], #224
  41caec:	ret
  41caf0:	stp	x29, x30, [sp, #-224]!
  41caf4:	mov	x29, sp
  41caf8:	str	x3, [sp, #184]
  41cafc:	str	x4, [sp, #192]
  41cb00:	str	x5, [sp, #200]
  41cb04:	str	x6, [sp, #208]
  41cb08:	str	x7, [sp, #216]
  41cb0c:	str	q0, [sp, #48]
  41cb10:	str	q1, [sp, #64]
  41cb14:	str	q2, [sp, #80]
  41cb18:	str	q3, [sp, #96]
  41cb1c:	str	q4, [sp, #112]
  41cb20:	str	q5, [sp, #128]
  41cb24:	str	q6, [sp, #144]
  41cb28:	str	q7, [sp, #160]
  41cb2c:	add	x3, sp, #0xe0
  41cb30:	str	x3, [sp, #16]
  41cb34:	str	x3, [sp, #24]
  41cb38:	add	x3, sp, #0xb0
  41cb3c:	str	x3, [sp, #32]
  41cb40:	mov	w3, #0xffffffd8            	// #-40
  41cb44:	str	w3, [sp, #40]
  41cb48:	mov	w3, #0xffffff80            	// #-128
  41cb4c:	str	w3, [sp, #44]
  41cb50:	add	x4, sp, #0x10
  41cb54:	mov	x3, x2
  41cb58:	mov	w2, w1
  41cb5c:	mov	w1, #0x2                   	// #2
  41cb60:	bl	41c87c <ferror@plt+0x19fac>
  41cb64:	ldp	x29, x30, [sp], #224
  41cb68:	ret
  41cb6c:	stp	x29, x30, [sp, #-224]!
  41cb70:	mov	x29, sp
  41cb74:	str	x3, [sp, #184]
  41cb78:	str	x4, [sp, #192]
  41cb7c:	str	x5, [sp, #200]
  41cb80:	str	x6, [sp, #208]
  41cb84:	str	x7, [sp, #216]
  41cb88:	str	q0, [sp, #48]
  41cb8c:	str	q1, [sp, #64]
  41cb90:	str	q2, [sp, #80]
  41cb94:	str	q3, [sp, #96]
  41cb98:	str	q4, [sp, #112]
  41cb9c:	str	q5, [sp, #128]
  41cba0:	str	q6, [sp, #144]
  41cba4:	str	q7, [sp, #160]
  41cba8:	add	x3, sp, #0xe0
  41cbac:	str	x3, [sp, #16]
  41cbb0:	str	x3, [sp, #24]
  41cbb4:	add	x3, sp, #0xb0
  41cbb8:	str	x3, [sp, #32]
  41cbbc:	mov	w3, #0xffffffd8            	// #-40
  41cbc0:	str	w3, [sp, #40]
  41cbc4:	mov	w3, #0xffffff80            	// #-128
  41cbc8:	str	w3, [sp, #44]
  41cbcc:	add	x4, sp, #0x10
  41cbd0:	mov	x3, x2
  41cbd4:	mov	w2, w1
  41cbd8:	mov	w1, #0x1                   	// #1
  41cbdc:	bl	41c87c <ferror@plt+0x19fac>
  41cbe0:	ldp	x29, x30, [sp], #224
  41cbe4:	ret
  41cbe8:	stp	x29, x30, [sp, #-208]!
  41cbec:	mov	x29, sp
  41cbf0:	str	x5, [sp, #184]
  41cbf4:	str	x6, [sp, #192]
  41cbf8:	str	x7, [sp, #200]
  41cbfc:	str	q0, [sp, #48]
  41cc00:	str	q1, [sp, #64]
  41cc04:	str	q2, [sp, #80]
  41cc08:	str	q3, [sp, #96]
  41cc0c:	str	q4, [sp, #112]
  41cc10:	str	q5, [sp, #128]
  41cc14:	str	q6, [sp, #144]
  41cc18:	str	q7, [sp, #160]
  41cc1c:	add	x5, sp, #0xd0
  41cc20:	str	x5, [sp, #16]
  41cc24:	str	x5, [sp, #24]
  41cc28:	add	x5, sp, #0xb0
  41cc2c:	str	x5, [sp, #32]
  41cc30:	mov	w5, #0xffffffe8            	// #-24
  41cc34:	str	w5, [sp, #40]
  41cc38:	mov	w5, #0xffffff80            	// #-128
  41cc3c:	str	w5, [sp, #44]
  41cc40:	add	x6, sp, #0x10
  41cc44:	mov	x5, x4
  41cc48:	mov	w4, w3
  41cc4c:	mov	w3, w2
  41cc50:	mov	w2, #0x0                   	// #0
  41cc54:	bl	41c934 <ferror@plt+0x1a064>
  41cc58:	ldp	x29, x30, [sp], #208
  41cc5c:	ret
  41cc60:	stp	x29, x30, [sp, #-208]!
  41cc64:	mov	x29, sp
  41cc68:	str	x5, [sp, #184]
  41cc6c:	str	x6, [sp, #192]
  41cc70:	str	x7, [sp, #200]
  41cc74:	str	q0, [sp, #48]
  41cc78:	str	q1, [sp, #64]
  41cc7c:	str	q2, [sp, #80]
  41cc80:	str	q3, [sp, #96]
  41cc84:	str	q4, [sp, #112]
  41cc88:	str	q5, [sp, #128]
  41cc8c:	str	q6, [sp, #144]
  41cc90:	str	q7, [sp, #160]
  41cc94:	add	x5, sp, #0xd0
  41cc98:	str	x5, [sp, #16]
  41cc9c:	str	x5, [sp, #24]
  41cca0:	add	x5, sp, #0xb0
  41cca4:	str	x5, [sp, #32]
  41cca8:	mov	w5, #0xffffffe8            	// #-24
  41ccac:	str	w5, [sp, #40]
  41ccb0:	mov	w5, #0xffffff80            	// #-128
  41ccb4:	str	w5, [sp, #44]
  41ccb8:	add	x6, sp, #0x10
  41ccbc:	mov	x5, x4
  41ccc0:	mov	w4, w3
  41ccc4:	mov	w3, w2
  41ccc8:	mov	w2, w1
  41cccc:	mov	w1, #0x0                   	// #0
  41ccd0:	bl	41c934 <ferror@plt+0x1a064>
  41ccd4:	ldp	x29, x30, [sp], #208
  41ccd8:	ret
  41ccdc:	stp	x29, x30, [sp, #-208]!
  41cce0:	mov	x29, sp
  41cce4:	str	x5, [sp, #184]
  41cce8:	str	x6, [sp, #192]
  41ccec:	str	x7, [sp, #200]
  41ccf0:	str	q0, [sp, #48]
  41ccf4:	str	q1, [sp, #64]
  41ccf8:	str	q2, [sp, #80]
  41ccfc:	str	q3, [sp, #96]
  41cd00:	str	q4, [sp, #112]
  41cd04:	str	q5, [sp, #128]
  41cd08:	str	q6, [sp, #144]
  41cd0c:	str	q7, [sp, #160]
  41cd10:	add	x5, sp, #0xd0
  41cd14:	str	x5, [sp, #16]
  41cd18:	str	x5, [sp, #24]
  41cd1c:	add	x5, sp, #0xb0
  41cd20:	str	x5, [sp, #32]
  41cd24:	mov	w5, #0xffffffe8            	// #-24
  41cd28:	str	w5, [sp, #40]
  41cd2c:	mov	w5, #0xffffff80            	// #-128
  41cd30:	str	w5, [sp, #44]
  41cd34:	add	x6, sp, #0x10
  41cd38:	mov	x5, x4
  41cd3c:	mov	w4, w3
  41cd40:	mov	w3, w2
  41cd44:	mov	w2, w1
  41cd48:	mov	w1, #0x2                   	// #2
  41cd4c:	bl	41c934 <ferror@plt+0x1a064>
  41cd50:	ldp	x29, x30, [sp], #208
  41cd54:	ret
  41cd58:	stp	x29, x30, [sp, #-208]!
  41cd5c:	mov	x29, sp
  41cd60:	str	x5, [sp, #184]
  41cd64:	str	x6, [sp, #192]
  41cd68:	str	x7, [sp, #200]
  41cd6c:	str	q0, [sp, #48]
  41cd70:	str	q1, [sp, #64]
  41cd74:	str	q2, [sp, #80]
  41cd78:	str	q3, [sp, #96]
  41cd7c:	str	q4, [sp, #112]
  41cd80:	str	q5, [sp, #128]
  41cd84:	str	q6, [sp, #144]
  41cd88:	str	q7, [sp, #160]
  41cd8c:	add	x5, sp, #0xd0
  41cd90:	str	x5, [sp, #16]
  41cd94:	str	x5, [sp, #24]
  41cd98:	add	x5, sp, #0xb0
  41cd9c:	str	x5, [sp, #32]
  41cda0:	mov	w5, #0xffffffe8            	// #-24
  41cda4:	str	w5, [sp, #40]
  41cda8:	mov	w5, #0xffffff80            	// #-128
  41cdac:	str	w5, [sp, #44]
  41cdb0:	add	x6, sp, #0x10
  41cdb4:	mov	x5, x4
  41cdb8:	mov	w4, w3
  41cdbc:	mov	w3, w2
  41cdc0:	mov	w2, w1
  41cdc4:	mov	w1, #0x1                   	// #1
  41cdc8:	bl	41c934 <ferror@plt+0x1a064>
  41cdcc:	ldp	x29, x30, [sp], #208
  41cdd0:	ret
  41cdd4:	stp	x29, x30, [sp, #-416]!
  41cdd8:	mov	x29, sp
  41cddc:	stp	x19, x20, [sp, #16]
  41cde0:	str	x21, [sp, #32]
  41cde4:	mov	x19, x0
  41cde8:	mov	w20, w1
  41cdec:	mov	x21, x3
  41cdf0:	str	x4, [sp, #384]
  41cdf4:	str	x5, [sp, #392]
  41cdf8:	str	x6, [sp, #400]
  41cdfc:	str	x7, [sp, #408]
  41ce00:	str	q0, [sp, #256]
  41ce04:	str	q1, [sp, #272]
  41ce08:	str	q2, [sp, #288]
  41ce0c:	str	q3, [sp, #304]
  41ce10:	str	q4, [sp, #320]
  41ce14:	str	q5, [sp, #336]
  41ce18:	str	q6, [sp, #352]
  41ce1c:	str	q7, [sp, #368]
  41ce20:	add	x0, sp, #0x1a0
  41ce24:	str	x0, [sp, #224]
  41ce28:	str	x0, [sp, #232]
  41ce2c:	add	x0, sp, #0x180
  41ce30:	str	x0, [sp, #240]
  41ce34:	mov	w0, #0xffffffe0            	// #-32
  41ce38:	str	w0, [sp, #248]
  41ce3c:	mov	w0, #0xffffff80            	// #-128
  41ce40:	str	w0, [sp, #252]
  41ce44:	mov	x3, #0x0                   	// #0
  41ce48:	ldr	x1, [x19, #40]
  41ce4c:	add	x0, sp, #0x38
  41ce50:	bl	42a37c <ferror@plt+0x27aac>
  41ce54:	add	x5, sp, #0xe0
  41ce58:	mov	x4, x21
  41ce5c:	add	x3, sp, #0x38
  41ce60:	mov	w2, #0x0                   	// #0
  41ce64:	mov	w1, w20
  41ce68:	mov	x0, x19
  41ce6c:	bl	41c7f4 <ferror@plt+0x19f24>
  41ce70:	mov	w19, w0
  41ce74:	add	x0, sp, #0x38
  41ce78:	bl	42a10c <ferror@plt+0x2783c>
  41ce7c:	mov	w0, w19
  41ce80:	ldp	x19, x20, [sp, #16]
  41ce84:	ldr	x21, [sp, #32]
  41ce88:	ldp	x29, x30, [sp], #416
  41ce8c:	ret
  41ce90:	stp	x29, x30, [sp, #-208]!
  41ce94:	mov	x29, sp
  41ce98:	str	x4, [sp, #176]
  41ce9c:	str	x5, [sp, #184]
  41cea0:	str	x6, [sp, #192]
  41cea4:	str	x7, [sp, #200]
  41cea8:	str	q0, [sp, #48]
  41ceac:	str	q1, [sp, #64]
  41ceb0:	str	q2, [sp, #80]
  41ceb4:	str	q3, [sp, #96]
  41ceb8:	str	q4, [sp, #112]
  41cebc:	str	q5, [sp, #128]
  41cec0:	str	q6, [sp, #144]
  41cec4:	str	q7, [sp, #160]
  41cec8:	add	x4, sp, #0xd0
  41cecc:	str	x4, [sp, #16]
  41ced0:	str	x4, [sp, #24]
  41ced4:	add	x4, sp, #0xb0
  41ced8:	str	x4, [sp, #32]
  41cedc:	mov	w4, #0xffffffe0            	// #-32
  41cee0:	str	w4, [sp, #40]
  41cee4:	mov	w4, #0xffffff80            	// #-128
  41cee8:	str	w4, [sp, #44]
  41ceec:	add	x5, sp, #0x10
  41cef0:	mov	x4, x3
  41cef4:	mov	x3, x2
  41cef8:	mov	w2, #0x0                   	// #0
  41cefc:	bl	41c7f4 <ferror@plt+0x19f24>
  41cf00:	ldp	x29, x30, [sp], #208
  41cf04:	ret
  41cf08:	stp	x29, x30, [sp, #-48]!
  41cf0c:	mov	x29, sp
  41cf10:	stp	x19, x20, [sp, #16]
  41cf14:	str	x21, [sp, #32]
  41cf18:	mov	x19, x0
  41cf1c:	mov	w20, w1
  41cf20:	mov	x1, x2
  41cf24:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x19094>
  41cf28:	add	x0, x0, #0xbb0
  41cf2c:	bl	402680 <dgettext@plt>
  41cf30:	mov	x21, x0
  41cf34:	bl	402810 <__errno_location@plt>
  41cf38:	ldr	w0, [x0]
  41cf3c:	bl	4471b0 <_obstack_memory_used@@Base+0x244>
  41cf40:	mov	x4, x0
  41cf44:	mov	x3, x21
  41cf48:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41cf4c:	add	x2, x2, #0xbd8
  41cf50:	mov	w1, w20
  41cf54:	mov	x0, x19
  41cf58:	bl	41c9fc <ferror@plt+0x1a12c>
  41cf5c:	ldp	x19, x20, [sp, #16]
  41cf60:	ldr	x21, [sp, #32]
  41cf64:	ldp	x29, x30, [sp], #48
  41cf68:	ret
  41cf6c:	stp	x29, x30, [sp, #-48]!
  41cf70:	mov	x29, sp
  41cf74:	stp	x19, x20, [sp, #16]
  41cf78:	stp	x21, x22, [sp, #32]
  41cf7c:	mov	x20, x0
  41cf80:	mov	w21, w1
  41cf84:	mov	x19, x2
  41cf88:	mov	w22, w3
  41cf8c:	ldrb	w0, [x2]
  41cf90:	cbz	w0, 41cfd0 <ferror@plt+0x1a700>
  41cf94:	bl	402810 <__errno_location@plt>
  41cf98:	ldr	w0, [x0]
  41cf9c:	bl	4471b0 <_obstack_memory_used@@Base+0x244>
  41cfa0:	mov	x5, x0
  41cfa4:	mov	x4, x19
  41cfa8:	adrp	x3, 460000 <_obstack_memory_used@@Base+0x19094>
  41cfac:	add	x3, x3, #0xbd8
  41cfb0:	mov	w2, w22
  41cfb4:	mov	w1, w21
  41cfb8:	mov	x0, x20
  41cfbc:	bl	41cdd4 <ferror@plt+0x1a504>
  41cfc0:	ldp	x19, x20, [sp, #16]
  41cfc4:	ldp	x21, x22, [sp, #32]
  41cfc8:	ldp	x29, x30, [sp], #48
  41cfcc:	ret
  41cfd0:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x19094>
  41cfd4:	add	x1, x1, #0xbe0
  41cfd8:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x19094>
  41cfdc:	add	x0, x0, #0xbb0
  41cfe0:	bl	402680 <dgettext@plt>
  41cfe4:	mov	x19, x0
  41cfe8:	b	41cf94 <ferror@plt+0x1a6c4>
  41cfec:	mov	x6, x0
  41cff0:	cmp	x2, #0x2
  41cff4:	b.eq	41d050 <ferror@plt+0x1a780>  // b.none
  41cff8:	ldrb	w12, [x6, #1163]
  41cffc:	cmp	x2, #0x0
  41d000:	cset	w3, ne  // ne = any
  41d004:	cmp	w12, #0x0
  41d008:	csel	w3, w3, wzr, ne  // ne = any
  41d00c:	cbnz	w3, 41d0fc <ferror@plt+0x1a82c>
  41d010:	sub	x5, x2, #0x1
  41d014:	cbz	x2, 41d568 <ferror@plt+0x1ac98>
  41d018:	stp	x29, x30, [sp, #-16]!
  41d01c:	mov	x29, sp
  41d020:	mov	x4, x1
  41d024:	mov	x13, #0x0                   	// #0
  41d028:	mov	x16, #0x0                   	// #0
  41d02c:	mov	x15, #0x0                   	// #0
  41d030:	mov	x7, #0x0                   	// #0
  41d034:	mov	x9, #0x0                   	// #0
  41d038:	mov	x8, #0x0                   	// #0
  41d03c:	mov	x11, #0x0                   	// #0
  41d040:	mov	x10, #0x0                   	// #0
  41d044:	mov	x0, #0x0                   	// #0
  41d048:	mov	x18, #0x0                   	// #0
  41d04c:	b	41d254 <ferror@plt+0x1a984>
  41d050:	ldrb	w3, [x1]
  41d054:	and	w0, w3, #0xffffffdf
  41d058:	and	w0, w0, #0xff
  41d05c:	cmp	w0, #0x44
  41d060:	b.ne	41d544 <ferror@plt+0x1ac74>  // b.any
  41d064:	ldrb	w0, [x1, #1]
  41d068:	cmp	w0, #0x64
  41d06c:	b.eq	41d0ec <ferror@plt+0x1a81c>  // b.none
  41d070:	b.hi	41d0ac <ferror@plt+0x1a7dc>  // b.pmore
  41d074:	cmp	w0, #0x46
  41d078:	b.eq	41d0dc <ferror@plt+0x1a80c>  // b.none
  41d07c:	cmp	w0, #0x4c
  41d080:	b.ne	41d094 <ferror@plt+0x1a7c4>  // b.any
  41d084:	cmp	w3, #0x44
  41d088:	mov	w0, #0x4040                	// #16448
  41d08c:	csel	w0, w0, wzr, eq  // eq = none
  41d090:	ret
  41d094:	cmp	w0, #0x44
  41d098:	b.ne	41cff8 <ferror@plt+0x1a728>  // b.any
  41d09c:	cmp	w3, #0x44
  41d0a0:	mov	w0, #0x4020                	// #16416
  41d0a4:	csel	w0, w0, wzr, eq  // eq = none
  41d0a8:	ret
  41d0ac:	cmp	w0, #0x66
  41d0b0:	b.eq	41d0cc <ferror@plt+0x1a7fc>  // b.none
  41d0b4:	cmp	w0, #0x6c
  41d0b8:	b.ne	41cff8 <ferror@plt+0x1a728>  // b.any
  41d0bc:	cmp	w3, #0x44
  41d0c0:	mov	w0, #0x4040                	// #16448
  41d0c4:	csel	w0, w0, wzr, ne  // ne = any
  41d0c8:	ret
  41d0cc:	cmp	w3, #0x44
  41d0d0:	mov	w0, #0x4010                	// #16400
  41d0d4:	csel	w0, w0, wzr, ne  // ne = any
  41d0d8:	ret
  41d0dc:	cmp	w3, #0x44
  41d0e0:	mov	w0, #0x4010                	// #16400
  41d0e4:	csel	w0, w0, wzr, eq  // eq = none
  41d0e8:	ret
  41d0ec:	cmp	w3, #0x44
  41d0f0:	mov	w0, #0x4020                	// #16416
  41d0f4:	csel	w0, w0, wzr, ne  // ne = any
  41d0f8:	ret
  41d0fc:	sub	x4, x2, #0x1
  41d100:	ldrb	w0, [x1, x4]
  41d104:	cmp	w0, #0x6b
  41d108:	b.eq	41d1b0 <ferror@plt+0x1a8e0>  // b.none
  41d10c:	cmp	w0, #0x6b
  41d110:	b.hi	41d1a0 <ferror@plt+0x1a8d0>  // b.pmore
  41d114:	cmp	w0, #0x4b
  41d118:	b.eq	41d1b8 <ferror@plt+0x1a8e8>  // b.none
  41d11c:	mov	x3, #0x100000              	// #1048576
  41d120:	cmp	w0, #0x52
  41d124:	b.ne	41d1a8 <ferror@plt+0x1a8d8>  // b.any
  41d128:	cmp	x2, #0x1
  41d12c:	b.eq	41d1c8 <ferror@plt+0x1a8f8>  // b.none
  41d130:	ldrb	w0, [x1]
  41d134:	and	w0, w0, #0xffffffdf
  41d138:	and	w0, w0, #0xff
  41d13c:	cmp	w0, #0x55
  41d140:	b.ne	41d158 <ferror@plt+0x1a888>  // b.any
  41d144:	orr	x3, x3, #0x1000
  41d148:	cmp	x4, #0x1
  41d14c:	b.eq	41d1d0 <ferror@plt+0x1a900>  // b.none
  41d150:	sub	x4, x2, #0x2
  41d154:	add	x1, x1, #0x1
  41d158:	ldrb	w0, [x1]
  41d15c:	cmp	w0, #0x68
  41d160:	b.eq	41d218 <ferror@plt+0x1a948>  // b.none
  41d164:	b.hi	41d1e0 <ferror@plt+0x1a910>  // b.pmore
  41d168:	cmp	w0, #0x48
  41d16c:	b.eq	41d218 <ferror@plt+0x1a948>  // b.none
  41d170:	cmp	w0, #0x4c
  41d174:	b.ne	41d1d8 <ferror@plt+0x1a908>  // b.any
  41d178:	cmp	x4, #0x1
  41d17c:	b.eq	41d230 <ferror@plt+0x1a960>  // b.none
  41d180:	mov	w0, #0x0                   	// #0
  41d184:	cmp	x4, #0x2
  41d188:	b.ne	41d5a4 <ferror@plt+0x1acd4>  // b.any
  41d18c:	ldrb	w1, [x1, #1]
  41d190:	orr	x0, x3, #0x40
  41d194:	cmp	w1, #0x4c
  41d198:	csel	w0, w0, wzr, eq  // eq = none
  41d19c:	ret
  41d1a0:	cmp	w0, #0x72
  41d1a4:	b.eq	41d1c0 <ferror@plt+0x1a8f0>  // b.none
  41d1a8:	sub	x5, x2, #0x1
  41d1ac:	b	41d018 <ferror@plt+0x1a748>
  41d1b0:	mov	x3, #0x200000              	// #2097152
  41d1b4:	b	41d128 <ferror@plt+0x1a858>
  41d1b8:	mov	x3, #0x200000              	// #2097152
  41d1bc:	b	41d128 <ferror@plt+0x1a858>
  41d1c0:	mov	x3, #0x100000              	// #1048576
  41d1c4:	b	41d128 <ferror@plt+0x1a858>
  41d1c8:	mov	w0, w3
  41d1cc:	ret
  41d1d0:	mov	w0, w3
  41d1d4:	ret
  41d1d8:	mov	w0, #0x0                   	// #0
  41d1dc:	ret
  41d1e0:	cmp	w0, #0x6c
  41d1e4:	b.ne	41d210 <ferror@plt+0x1a940>  // b.any
  41d1e8:	cmp	x4, #0x1
  41d1ec:	b.eq	41d228 <ferror@plt+0x1a958>  // b.none
  41d1f0:	mov	w0, #0x0                   	// #0
  41d1f4:	cmp	x4, #0x2
  41d1f8:	b.ne	41d5a4 <ferror@plt+0x1acd4>  // b.any
  41d1fc:	ldrb	w1, [x1, #1]
  41d200:	orr	x0, x3, #0x40
  41d204:	cmp	w1, #0x6c
  41d208:	csel	w0, w0, wzr, eq  // eq = none
  41d20c:	ret
  41d210:	mov	w0, #0x0                   	// #0
  41d214:	ret
  41d218:	orr	x0, x3, #0x10
  41d21c:	cmp	x4, #0x1
  41d220:	csel	w0, w0, wzr, eq  // eq = none
  41d224:	ret
  41d228:	orr	w0, w3, #0x20
  41d22c:	ret
  41d230:	orr	w0, w3, #0x20
  41d234:	ret
  41d238:	cmp	w3, #0x44
  41d23c:	b.ne	41d298 <ferror@plt+0x1a9c8>  // b.any
  41d240:	add	x10, x10, #0x1
  41d244:	mov	x3, x5
  41d248:	add	x4, x4, #0x1
  41d24c:	sub	x5, x3, #0x1
  41d250:	cbz	x3, 41d3c0 <ferror@plt+0x1aaf0>
  41d254:	ldrb	w3, [x4]
  41d258:	cmp	w3, #0x64
  41d25c:	b.eq	41d240 <ferror@plt+0x1a970>  // b.none
  41d260:	b.hi	41d2c4 <ferror@plt+0x1a9f4>  // b.pmore
  41d264:	cmp	w3, #0x4c
  41d268:	b.eq	41d3a8 <ferror@plt+0x1aad8>  // b.none
  41d26c:	b.hi	41d2a0 <ferror@plt+0x1a9d0>  // b.pmore
  41d270:	cmp	w3, #0x46
  41d274:	b.eq	41d30c <ferror@plt+0x1aa3c>  // b.none
  41d278:	b.ls	41d238 <ferror@plt+0x1a968>  // b.plast
  41d27c:	sub	w3, w3, #0x49
  41d280:	and	w3, w3, #0xff
  41d284:	cmp	w3, #0x1
  41d288:	b.hi	41d4e4 <ferror@plt+0x1ac14>  // b.pmore
  41d28c:	add	x7, x7, #0x1
  41d290:	mov	x3, x5
  41d294:	b	41d248 <ferror@plt+0x1a978>
  41d298:	mov	w0, #0x0                   	// #0
  41d29c:	b	41d304 <ferror@plt+0x1aa34>
  41d2a0:	cmp	w3, #0x51
  41d2a4:	b.eq	41d3b4 <ferror@plt+0x1aae4>  // b.none
  41d2a8:	cmp	w3, #0x57
  41d2ac:	b.ne	41d2bc <ferror@plt+0x1a9ec>  // b.any
  41d2b0:	add	x8, x8, #0x1
  41d2b4:	mov	x3, x5
  41d2b8:	b	41d248 <ferror@plt+0x1a978>
  41d2bc:	mov	w0, #0x0                   	// #0
  41d2c0:	b	41d304 <ferror@plt+0x1aa34>
  41d2c4:	cmp	w3, #0x6c
  41d2c8:	b.eq	41d3a8 <ferror@plt+0x1aad8>  // b.none
  41d2cc:	b.ls	41d2e8 <ferror@plt+0x1aa18>  // b.plast
  41d2d0:	cmp	w3, #0x71
  41d2d4:	b.eq	41d3b4 <ferror@plt+0x1aae4>  // b.none
  41d2d8:	cmp	w3, #0x77
  41d2dc:	b.eq	41d2b0 <ferror@plt+0x1a9e0>  // b.none
  41d2e0:	mov	w0, #0x0                   	// #0
  41d2e4:	b	41d304 <ferror@plt+0x1aa34>
  41d2e8:	cmp	w3, #0x66
  41d2ec:	b.eq	41d30c <ferror@plt+0x1aa3c>  // b.none
  41d2f0:	sub	w3, w3, #0x69
  41d2f4:	and	w3, w3, #0xff
  41d2f8:	cmp	w3, #0x1
  41d2fc:	b.ls	41d28c <ferror@plt+0x1a9bc>  // b.plast
  41d300:	mov	w0, #0x0                   	// #0
  41d304:	ldp	x29, x30, [sp], #16
  41d308:	ret
  41d30c:	add	x14, x0, #0x1
  41d310:	cbz	x5, 41d3c4 <ferror@plt+0x1aaf4>
  41d314:	ldrb	w3, [x6, #1120]
  41d318:	cbnz	w3, 41d334 <ferror@plt+0x1aa64>
  41d31c:	ldrb	w17, [x4, #1]
  41d320:	sub	w3, w17, #0x31
  41d324:	and	w3, w3, #0xff
  41d328:	cmp	x13, #0x0
  41d32c:	ccmp	w3, #0x8, #0x2, eq  // eq = none
  41d330:	b.ls	41d344 <ferror@plt+0x1aa74>  // b.plast
  41d334:	add	x4, x4, #0x1
  41d338:	sub	x5, x5, #0x1
  41d33c:	mov	x0, x14
  41d340:	b	41d254 <ferror@plt+0x1a984>
  41d344:	mov	x13, x18
  41d348:	add	x13, x13, x13, lsl #2
  41d34c:	sub	w3, w17, #0x30
  41d350:	sxtw	x3, w3
  41d354:	add	x13, x3, x13, lsl #1
  41d358:	mov	x3, x5
  41d35c:	mov	x30, x4
  41d360:	add	x4, x4, #0x1
  41d364:	subs	x5, x5, #0x1
  41d368:	b.eq	41d38c <ferror@plt+0x1aabc>  // b.none
  41d36c:	ldrb	w17, [x4, #1]
  41d370:	sub	w14, w17, #0x30
  41d374:	and	w14, w14, #0xff
  41d378:	cmp	x13, #0xef
  41d37c:	ccmp	w14, #0x9, #0x2, ls  // ls = plast
  41d380:	b.ls	41d348 <ferror@plt+0x1aa78>  // b.plast
  41d384:	cmp	w17, #0x78
  41d388:	b.eq	41d398 <ferror@plt+0x1aac8>  // b.none
  41d38c:	add	x15, x15, #0x1
  41d390:	mov	x3, x5
  41d394:	b	41d248 <ferror@plt+0x1a978>
  41d398:	add	x16, x16, #0x1
  41d39c:	sub	x3, x3, #0x2
  41d3a0:	add	x4, x30, #0x2
  41d3a4:	b	41d248 <ferror@plt+0x1a978>
  41d3a8:	add	x11, x11, #0x1
  41d3ac:	mov	x3, x5
  41d3b0:	b	41d248 <ferror@plt+0x1a978>
  41d3b4:	add	x9, x9, #0x1
  41d3b8:	mov	x3, x5
  41d3bc:	b	41d248 <ferror@plt+0x1a978>
  41d3c0:	mov	x14, x0
  41d3c4:	add	x3, x11, x8
  41d3c8:	add	x0, x14, x10
  41d3cc:	add	x3, x3, x0
  41d3d0:	add	x0, x9, x15
  41d3d4:	add	x3, x3, x0
  41d3d8:	add	x3, x3, x16
  41d3dc:	cmp	x13, #0xf0
  41d3e0:	ccmp	x7, #0x1, #0x2, ls  // ls = plast
  41d3e4:	mov	w0, #0x0                   	// #0
  41d3e8:	ccmp	x3, #0x1, #0x2, ls  // ls = plast
  41d3ec:	b.hi	41d304 <ferror@plt+0x1aa34>  // b.pmore
  41d3f0:	cmp	x16, #0x0
  41d3f4:	cset	w3, ne  // ne = any
  41d3f8:	sub	x0, x13, #0x20
  41d3fc:	tst	x0, #0xffffffffffffffdf
  41d400:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  41d404:	b.eq	41d470 <ferror@plt+0x1aba0>  // b.none
  41d408:	mov	w0, #0x0                   	// #0
  41d40c:	cmp	x15, #0x0
  41d410:	cset	w4, ne  // ne = any
  41d414:	cmp	x13, #0x80
  41d418:	b.ne	41d304 <ferror@plt+0x1aa34>  // b.any
  41d41c:	cmp	x13, #0x60
  41d420:	mov	w0, #0x0                   	// #0
  41d424:	ccmp	w4, #0x0, #0x4, eq  // eq = none
  41d428:	b.ne	41d304 <ferror@plt+0x1aa34>  // b.any
  41d42c:	cbz	x7, 41d4fc <ferror@plt+0x1ac2c>
  41d430:	cbz	w12, 41d304 <ferror@plt+0x1aa34>
  41d434:	ldrb	w0, [x6, #1120]
  41d438:	cbz	w0, 41d4b0 <ferror@plt+0x1abe0>
  41d43c:	ldr	w0, [x6, #1116]
  41d440:	cmp	w0, #0xe
  41d444:	b.le	41d4b8 <ferror@plt+0x1abe8>
  41d448:	ldrb	w5, [x1]
  41d44c:	mov	w0, #0x2000                	// #8192
  41d450:	cmp	w5, #0x69
  41d454:	b.ne	41d510 <ferror@plt+0x1ac40>  // b.any
  41d458:	cmp	x2, #0x1
  41d45c:	b.eq	41d4ec <ferror@plt+0x1ac1c>  // b.none
  41d460:	cmp	x2, #0x2
  41d464:	b.eq	41d494 <ferror@plt+0x1abc4>  // b.none
  41d468:	mov	w0, #0x2000                	// #8192
  41d46c:	b	41d510 <ferror@plt+0x1ac40>
  41d470:	cmp	x15, #0x0
  41d474:	cset	w4, ne  // ne = any
  41d478:	cmp	w4, #0x0
  41d47c:	ccmp	x13, #0x10, #0x4, ne  // ne = any
  41d480:	b.eq	41d41c <ferror@plt+0x1ab4c>  // b.none
  41d484:	mov	w0, #0x0                   	// #0
  41d488:	tst	x13, #0x1f
  41d48c:	b.ne	41d304 <ferror@plt+0x1aa34>  // b.any
  41d490:	b	41d41c <ferror@plt+0x1ab4c>
  41d494:	ldrb	w0, [x1, #1]
  41d498:	cmp	w0, #0x6c
  41d49c:	mov	w1, #0x66                  	// #102
  41d4a0:	ccmp	w0, w1, #0x4, ne  // ne = any
  41d4a4:	b.eq	41d4f4 <ferror@plt+0x1ac24>  // b.none
  41d4a8:	mov	w0, #0x2000                	// #8192
  41d4ac:	b	41d510 <ferror@plt+0x1ac40>
  41d4b0:	mov	w0, #0x2000                	// #8192
  41d4b4:	b	41d510 <ferror@plt+0x1ac40>
  41d4b8:	mov	w0, #0x2000                	// #8192
  41d4bc:	b	41d510 <ferror@plt+0x1ac40>
  41d4c0:	lsl	w1, w13, #24
  41d4c4:	orr	w1, w1, #0x800000
  41d4c8:	cmp	w3, #0x0
  41d4cc:	mov	w2, #0x8000                	// #32768
  41d4d0:	csel	w1, w1, w2, ne  // ne = any
  41d4d4:	b	41d4dc <ferror@plt+0x1ac0c>
  41d4d8:	mov	w1, #0x20000               	// #131072
  41d4dc:	orr	w0, w0, w1
  41d4e0:	b	41d304 <ferror@plt+0x1aa34>
  41d4e4:	mov	w0, #0x0                   	// #0
  41d4e8:	b	41d304 <ferror@plt+0x1aa34>
  41d4ec:	mov	w0, #0x0                   	// #0
  41d4f0:	b	41d304 <ferror@plt+0x1aa34>
  41d4f4:	mov	w0, #0x0                   	// #0
  41d4f8:	b	41d304 <ferror@plt+0x1aa34>
  41d4fc:	orr	x0, x9, x8
  41d500:	cmp	x0, #0x0
  41d504:	mov	w0, #0x0                   	// #0
  41d508:	ccmp	w12, #0x0, #0x0, ne  // ne = any
  41d50c:	b.eq	41d304 <ferror@plt+0x1aa34>  // b.none
  41d510:	mov	w1, #0x10                  	// #16
  41d514:	cbnz	x14, 41d4dc <ferror@plt+0x1ac0c>
  41d518:	mov	w1, #0x20                  	// #32
  41d51c:	cbnz	x10, 41d4dc <ferror@plt+0x1ac0c>
  41d520:	mov	w1, #0x40                  	// #64
  41d524:	cbnz	x11, 41d4dc <ferror@plt+0x1ac0c>
  41d528:	mov	w1, #0x10000               	// #65536
  41d52c:	cbnz	x8, 41d4dc <ferror@plt+0x1ac0c>
  41d530:	cbnz	x9, 41d4d8 <ferror@plt+0x1ac08>
  41d534:	cbz	w4, 41d4c0 <ferror@plt+0x1abf0>
  41d538:	lsl	w1, w13, #24
  41d53c:	orr	w1, w1, #0x400000
  41d540:	b	41d4dc <ferror@plt+0x1ac0c>
  41d544:	ldrb	w12, [x6, #1163]
  41d548:	mov	x5, #0x1                   	// #1
  41d54c:	cbz	w12, 41d018 <ferror@plt+0x1a748>
  41d550:	sub	x4, x2, #0x1
  41d554:	ldrb	w0, [x1, x4]
  41d558:	cmp	w0, #0x6b
  41d55c:	b.ne	41d10c <ferror@plt+0x1a83c>  // b.any
  41d560:	mov	x3, #0x200000              	// #2097152
  41d564:	b	41d130 <ferror@plt+0x1a860>
  41d568:	mov	x13, x2
  41d56c:	mov	x7, x2
  41d570:	mov	x9, x2
  41d574:	mov	x8, x2
  41d578:	mov	x11, x2
  41d57c:	mov	x10, x2
  41d580:	mov	x14, x2
  41d584:	cmp	x2, #0x0
  41d588:	cset	w4, ne  // ne = any
  41d58c:	cmp	w4, #0x0
  41d590:	ccmp	x2, #0x10, #0x4, ne  // ne = any
  41d594:	b.eq	41d5a8 <ferror@plt+0x1acd8>  // b.none
  41d598:	mov	w0, #0x0                   	// #0
  41d59c:	tst	x2, #0x1f
  41d5a0:	b.eq	41d5a8 <ferror@plt+0x1acd8>  // b.none
  41d5a4:	ret
  41d5a8:	cmp	x13, #0x60
  41d5ac:	mov	w0, #0x0                   	// #0
  41d5b0:	ccmp	w4, #0x0, #0x4, eq  // eq = none
  41d5b4:	b.ne	41d5a4 <ferror@plt+0x1acd4>  // b.any
  41d5b8:	cbz	x7, 41d65c <ferror@plt+0x1ad8c>
  41d5bc:	cbz	w12, 41d5a4 <ferror@plt+0x1acd4>
  41d5c0:	ldrb	w0, [x6, #1120]
  41d5c4:	cbz	w0, 41d618 <ferror@plt+0x1ad48>
  41d5c8:	ldr	w0, [x6, #1116]
  41d5cc:	cmp	w0, #0xe
  41d5d0:	b.le	41d620 <ferror@plt+0x1ad50>
  41d5d4:	ldrb	w5, [x1]
  41d5d8:	mov	w0, #0x2000                	// #8192
  41d5dc:	cmp	w5, #0x69
  41d5e0:	b.ne	41d670 <ferror@plt+0x1ada0>  // b.any
  41d5e4:	cmp	x2, #0x1
  41d5e8:	b.eq	41d64c <ferror@plt+0x1ad7c>  // b.none
  41d5ec:	cmp	x2, #0x2
  41d5f0:	b.eq	41d5fc <ferror@plt+0x1ad2c>  // b.none
  41d5f4:	mov	w0, #0x2000                	// #8192
  41d5f8:	b	41d670 <ferror@plt+0x1ada0>
  41d5fc:	ldrb	w0, [x1, #1]
  41d600:	cmp	w0, #0x6c
  41d604:	mov	w1, #0x66                  	// #102
  41d608:	ccmp	w0, w1, #0x4, ne  // ne = any
  41d60c:	b.eq	41d654 <ferror@plt+0x1ad84>  // b.none
  41d610:	mov	w0, #0x2000                	// #8192
  41d614:	b	41d670 <ferror@plt+0x1ada0>
  41d618:	mov	w0, #0x2000                	// #8192
  41d61c:	b	41d670 <ferror@plt+0x1ada0>
  41d620:	mov	w0, #0x2000                	// #8192
  41d624:	b	41d670 <ferror@plt+0x1ada0>
  41d628:	lsl	w1, w13, #24
  41d62c:	orr	w1, w1, #0x800000
  41d630:	cmp	w3, #0x0
  41d634:	mov	w2, #0x8000                	// #32768
  41d638:	csel	w1, w1, w2, ne  // ne = any
  41d63c:	b	41d644 <ferror@plt+0x1ad74>
  41d640:	mov	w1, #0x20000               	// #131072
  41d644:	orr	w0, w0, w1
  41d648:	ret
  41d64c:	mov	w0, #0x0                   	// #0
  41d650:	ret
  41d654:	mov	w0, #0x0                   	// #0
  41d658:	ret
  41d65c:	orr	x0, x9, x8
  41d660:	cmp	x0, #0x0
  41d664:	mov	w0, #0x0                   	// #0
  41d668:	ccmp	w12, #0x0, #0x0, ne  // ne = any
  41d66c:	b.eq	41d5a4 <ferror@plt+0x1acd4>  // b.none
  41d670:	mov	w1, #0x10                  	// #16
  41d674:	cbnz	x14, 41d644 <ferror@plt+0x1ad74>
  41d678:	mov	w1, #0x20                  	// #32
  41d67c:	cbnz	x10, 41d644 <ferror@plt+0x1ad74>
  41d680:	mov	w1, #0x40                  	// #64
  41d684:	cbnz	x11, 41d644 <ferror@plt+0x1ad74>
  41d688:	mov	w1, #0x10000               	// #65536
  41d68c:	cbnz	x8, 41d644 <ferror@plt+0x1ad74>
  41d690:	cbnz	x9, 41d640 <ferror@plt+0x1ad70>
  41d694:	cbz	w4, 41d628 <ferror@plt+0x1ad58>
  41d698:	lsl	w1, w13, #24
  41d69c:	orr	w1, w1, #0x400000
  41d6a0:	b	41d644 <ferror@plt+0x1ad74>
  41d6a4:	mov	x10, x0
  41d6a8:	cbz	x2, 41d7cc <ferror@plt+0x1aefc>
  41d6ac:	add	x4, x1, x2
  41d6b0:	mov	x9, x1
  41d6b4:	mov	x11, #0x0                   	// #0
  41d6b8:	mov	x8, #0x0                   	// #0
  41d6bc:	mov	x12, #0x0                   	// #0
  41d6c0:	mov	x6, #0x1                   	// #1
  41d6c4:	b	41d6d8 <ferror@plt+0x1ae08>
  41d6c8:	add	x12, x12, #0x1
  41d6cc:	sub	x4, x4, #0x1
  41d6d0:	cmp	x9, x4
  41d6d4:	b.eq	41d738 <ferror@plt+0x1ae68>  // b.none
  41d6d8:	ldurb	w5, [x4, #-1]
  41d6dc:	sub	w3, w5, #0x49
  41d6e0:	and	w3, w3, #0xff
  41d6e4:	cmp	w3, #0x2c
  41d6e8:	b.hi	41d7f8 <ferror@plt+0x1af28>  // b.pmore
  41d6ec:	lsl	x3, x6, x3
  41d6f0:	tst	x3, #0x300000003
  41d6f4:	b.ne	41d710 <ferror@plt+0x1ae40>  // b.any
  41d6f8:	tst	x3, #0x800000008
  41d6fc:	b.ne	41d718 <ferror@plt+0x1ae48>  // b.any
  41d700:	tst	x3, #0x100000001000
  41d704:	b.ne	41d6c8 <ferror@plt+0x1adf8>  // b.any
  41d708:	mov	w0, #0x0                   	// #0
  41d70c:	b	41d7fc <ferror@plt+0x1af2c>
  41d710:	add	x11, x11, #0x1
  41d714:	b	41d6cc <ferror@plt+0x1adfc>
  41d718:	add	x8, x8, #0x1
  41d71c:	cmp	x8, #0x2
  41d720:	b.ne	41d6cc <ferror@plt+0x1adfc>  // b.any
  41d724:	ldrb	w0, [x4]
  41d728:	cmp	w0, w5
  41d72c:	b.eq	41d6cc <ferror@plt+0x1adfc>  // b.none
  41d730:	mov	w0, #0x0                   	// #0
  41d734:	b	41d7fc <ferror@plt+0x1af2c>
  41d738:	cmp	x8, #0x2
  41d73c:	ccmp	x12, #0x1, #0x2, ls  // ls = plast
  41d740:	mov	w0, #0x0                   	// #0
  41d744:	ccmp	x11, #0x1, #0x2, ls  // ls = plast
  41d748:	b.hi	41d7fc <ferror@plt+0x1af2c>  // b.pmore
  41d74c:	cbz	x11, 41d7a4 <ferror@plt+0x1aed4>
  41d750:	ldrb	w3, [x10, #1163]
  41d754:	cbz	w3, 41d7fc <ferror@plt+0x1af2c>
  41d758:	ldrb	w0, [x10, #1120]
  41d75c:	cbz	w0, 41d7bc <ferror@plt+0x1aeec>
  41d760:	ldr	w0, [x10, #1116]
  41d764:	cmp	w0, #0xe
  41d768:	b.le	41d7c4 <ferror@plt+0x1aef4>
  41d76c:	ldrb	w0, [x1]
  41d770:	mov	w3, #0x2000                	// #8192
  41d774:	cmp	w0, #0x69
  41d778:	b.ne	41d7a8 <ferror@plt+0x1aed8>  // b.any
  41d77c:	mov	w0, #0x0                   	// #0
  41d780:	cmp	x2, #0x1
  41d784:	b.eq	41d7fc <ferror@plt+0x1af2c>  // b.none
  41d788:	cmp	x2, #0x2
  41d78c:	b.ne	41d7a8 <ferror@plt+0x1aed8>  // b.any
  41d790:	ldrb	w0, [x1, #1]
  41d794:	cmp	w0, #0x6c
  41d798:	b.ne	41d7a8 <ferror@plt+0x1aed8>  // b.any
  41d79c:	mov	w0, #0x0                   	// #0
  41d7a0:	b	41d7fc <ferror@plt+0x1af2c>
  41d7a4:	mov	w3, #0x0                   	// #0
  41d7a8:	mov	x2, x8
  41d7ac:	cmp	x12, #0x0
  41d7b0:	mov	w0, #0x1000                	// #4096
  41d7b4:	csel	w0, w0, wzr, ne  // ne = any
  41d7b8:	b	41d7d4 <ferror@plt+0x1af04>
  41d7bc:	mov	w3, #0x2000                	// #8192
  41d7c0:	b	41d7a8 <ferror@plt+0x1aed8>
  41d7c4:	mov	w3, #0x2000                	// #8192
  41d7c8:	b	41d7a8 <ferror@plt+0x1aed8>
  41d7cc:	mov	w3, #0x0                   	// #0
  41d7d0:	mov	w0, #0x0                   	// #0
  41d7d4:	orr	w0, w0, w3
  41d7d8:	mov	w1, #0x10                  	// #16
  41d7dc:	cbz	x2, 41d7f0 <ferror@plt+0x1af20>
  41d7e0:	cmp	x2, #0x1
  41d7e4:	mov	w1, #0x20                  	// #32
  41d7e8:	mov	w2, #0x40                  	// #64
  41d7ec:	csel	w1, w1, w2, eq  // eq = none
  41d7f0:	orr	w0, w0, w1
  41d7f4:	b	41d7fc <ferror@plt+0x1af2c>
  41d7f8:	mov	w0, #0x0                   	// #0
  41d7fc:	ret
  41d800:	ldr	x2, [x0]
  41d804:	ldr	x4, [x0, #8]
  41d808:	cmp	x1, #0x40
  41d80c:	b.ls	41d844 <ferror@plt+0x1af74>  // b.plast
  41d810:	sub	x1, x1, #0x40
  41d814:	mov	x3, #0xffffffffffffffff    	// #-1
  41d818:	lsl	x3, x3, x1
  41d81c:	bic	x3, x2, x3
  41d820:	cmp	x1, #0x40
  41d824:	csel	x2, x3, x2, cc  // cc = lo, ul, last
  41d828:	str	x2, [x0]
  41d82c:	str	x4, [x0, #8]
  41d830:	ldp	x2, x3, [x0]
  41d834:	stp	x2, x3, [x8]
  41d838:	ldr	x0, [x0, #16]
  41d83c:	str	x0, [x8, #16]
  41d840:	ret
  41d844:	mov	x2, #0x0                   	// #0
  41d848:	cmp	x1, #0x3f
  41d84c:	b.hi	41d828 <ferror@plt+0x1af58>  // b.pmore
  41d850:	mov	x2, #0xffffffffffffffff    	// #-1
  41d854:	lsl	x1, x2, x1
  41d858:	bic	x4, x4, x1
  41d85c:	mov	x2, #0x0                   	// #0
  41d860:	b	41d828 <ferror@plt+0x1af58>
  41d864:	cmp	x1, #0x40
  41d868:	b.hi	41d884 <ferror@plt+0x1afb4>  // b.pmore
  41d86c:	sub	w1, w1, #0x1
  41d870:	ldr	x0, [x0, #8]
  41d874:	lsr	x0, x0, x1
  41d878:	eor	x0, x0, #0x1
  41d87c:	and	w0, w0, #0x1
  41d880:	ret
  41d884:	sub	w1, w1, #0x41
  41d888:	ldr	x0, [x0]
  41d88c:	lsr	x0, x0, x1
  41d890:	eor	x0, x0, #0x1
  41d894:	and	w0, w0, #0x1
  41d898:	b	41d880 <ferror@plt+0x1afb0>
  41d89c:	stp	x29, x30, [sp, #-112]!
  41d8a0:	mov	x29, sp
  41d8a4:	stp	x19, x20, [sp, #16]
  41d8a8:	stp	x21, x22, [sp, #32]
  41d8ac:	mov	x20, x8
  41d8b0:	mov	x19, x0
  41d8b4:	ldr	x21, [x0]
  41d8b8:	ldr	x22, [x0, #8]
  41d8bc:	neg	x0, x21
  41d8c0:	negs	x2, x22
  41d8c4:	csinv	x0, x0, x21, eq  // eq = none
  41d8c8:	str	x0, [x19]
  41d8cc:	str	x2, [x19, #8]
  41d8d0:	ldp	x2, x3, [x19]
  41d8d4:	stp	x2, x3, [sp, #48]
  41d8d8:	ldr	x0, [x19, #16]
  41d8dc:	str	x0, [sp, #64]
  41d8e0:	add	x8, sp, #0x50
  41d8e4:	add	x0, sp, #0x30
  41d8e8:	bl	41d800 <ferror@plt+0x1af30>
  41d8ec:	ldr	x1, [sp, #80]
  41d8f0:	str	x1, [x19]
  41d8f4:	ldr	x0, [sp, #88]
  41d8f8:	str	x0, [x19, #8]
  41d8fc:	ldr	x0, [sp, #96]
  41d900:	str	x0, [x19, #16]
  41d904:	ldr	x3, [x19, #8]
  41d908:	cmp	x22, x3
  41d90c:	ccmp	x21, x1, #0x0, eq  // eq = none
  41d910:	cset	w2, eq  // eq = none
  41d914:	eor	w0, w0, #0x1
  41d918:	ands	w0, w2, w0
  41d91c:	b.ne	41d944 <ferror@plt+0x1b074>  // b.any
  41d920:	strb	w0, [x19, #17]
  41d924:	ldp	x0, x1, [x19]
  41d928:	stp	x0, x1, [x20]
  41d92c:	ldr	x0, [x19, #16]
  41d930:	str	x0, [x20, #16]
  41d934:	ldp	x19, x20, [sp, #16]
  41d938:	ldp	x21, x22, [sp, #32]
  41d93c:	ldp	x29, x30, [sp], #112
  41d940:	ret
  41d944:	orr	x1, x1, x3
  41d948:	cmp	x1, #0x0
  41d94c:	cset	w0, ne  // ne = any
  41d950:	b	41d920 <ferror@plt+0x1b050>
  41d954:	stp	x29, x30, [sp, #-128]!
  41d958:	mov	x29, sp
  41d95c:	stp	x19, x20, [sp, #16]
  41d960:	stp	x21, x22, [sp, #32]
  41d964:	stp	x23, x24, [sp, #48]
  41d968:	mov	x22, x8
  41d96c:	mov	x19, x0
  41d970:	mov	x21, x1
  41d974:	mov	x20, x2
  41d978:	ldr	x24, [x0]
  41d97c:	ldr	x23, [x0, #8]
  41d980:	ldp	x2, x3, [x0]
  41d984:	stp	x2, x3, [sp, #96]
  41d988:	ldr	x0, [x0, #16]
  41d98c:	str	x0, [sp, #112]
  41d990:	add	x0, sp, #0x60
  41d994:	bl	41d864 <ferror@plt+0x1af94>
  41d998:	and	w0, w0, #0xff
  41d99c:	ldrb	w1, [x19, #16]
  41d9a0:	orr	w0, w0, w1
  41d9a4:	eor	w0, w0, #0x1
  41d9a8:	and	x0, x0, #0xff
  41d9ac:	neg	x0, x0
  41d9b0:	cmp	x21, x20
  41d9b4:	b.ls	41da20 <ferror@plt+0x1b150>  // b.plast
  41d9b8:	cmp	x21, #0x3f
  41d9bc:	b.hi	41da08 <ferror@plt+0x1b138>  // b.pmore
  41d9c0:	lsl	x1, x0, x21
  41d9c4:	orr	x23, x23, x1
  41d9c8:	mov	x24, x0
  41d9cc:	cmp	x20, #0x3f
  41d9d0:	b.ls	41d9e0 <ferror@plt+0x1b110>  // b.plast
  41d9d4:	sub	x20, x20, #0x40
  41d9d8:	mov	x23, x24
  41d9dc:	mov	x24, x0
  41d9e0:	cbz	x20, 41da80 <ferror@plt+0x1b1b0>
  41d9e4:	mov	w1, #0x40                  	// #64
  41d9e8:	sub	w1, w1, w20
  41d9ec:	lsr	x23, x23, x20
  41d9f0:	lsl	x2, x24, x1
  41d9f4:	orr	x23, x23, x2
  41d9f8:	lsr	x20, x24, x20
  41d9fc:	lsl	x0, x0, x1
  41da00:	orr	x0, x20, x0
  41da04:	b	41da24 <ferror@plt+0x1b154>
  41da08:	sub	w1, w21, #0x40
  41da0c:	lsl	x1, x0, x1
  41da10:	orr	x1, x24, x1
  41da14:	cmp	x21, #0x80
  41da18:	csel	x24, x1, x24, cc  // cc = lo, ul, last
  41da1c:	b	41d9cc <ferror@plt+0x1b0fc>
  41da20:	mov	x23, x0
  41da24:	str	x0, [x19]
  41da28:	str	x23, [x19, #8]
  41da2c:	ldp	x0, x1, [x19]
  41da30:	stp	x0, x1, [sp, #64]
  41da34:	ldr	x0, [x19, #16]
  41da38:	str	x0, [sp, #80]
  41da3c:	add	x8, sp, #0x60
  41da40:	mov	x1, x21
  41da44:	add	x0, sp, #0x40
  41da48:	bl	41d800 <ferror@plt+0x1af30>
  41da4c:	ldp	x0, x1, [sp, #96]
  41da50:	stp	x0, x1, [x19]
  41da54:	ldr	x2, [sp, #112]
  41da58:	str	x2, [x19, #16]
  41da5c:	strb	wzr, [x19, #17]
  41da60:	stp	x0, x1, [x22]
  41da64:	ldr	x0, [x19, #16]
  41da68:	str	x0, [x22, #16]
  41da6c:	ldp	x19, x20, [sp, #16]
  41da70:	ldp	x21, x22, [sp, #32]
  41da74:	ldp	x23, x24, [sp, #48]
  41da78:	ldp	x29, x30, [sp], #128
  41da7c:	ret
  41da80:	mov	x0, x24
  41da84:	b	41da24 <ferror@plt+0x1b154>
  41da88:	stp	x29, x30, [sp, #-192]!
  41da8c:	mov	x29, sp
  41da90:	stp	x19, x20, [sp, #16]
  41da94:	stp	x21, x22, [sp, #32]
  41da98:	stp	x23, x24, [sp, #48]
  41da9c:	stp	x25, x26, [sp, #64]
  41daa0:	str	x27, [sp, #80]
  41daa4:	mov	x21, x8
  41daa8:	mov	x19, x0
  41daac:	ldr	x25, [x0]
  41dab0:	ldr	x26, [x0, #8]
  41dab4:	cmp	x2, x1
  41dab8:	b.cc	41db18 <ferror@plt+0x1b248>  // b.lo, b.ul, b.last
  41dabc:	ldrb	w23, [x0, #16]
  41dac0:	mov	w0, #0x0                   	// #0
  41dac4:	cbnz	w23, 41dad4 <ferror@plt+0x1b204>
  41dac8:	orr	x25, x25, x26
  41dacc:	cmp	x25, #0x0
  41dad0:	cset	w0, ne  // ne = any
  41dad4:	mov	x27, #0x0                   	// #0
  41dad8:	mov	x24, #0x0                   	// #0
  41dadc:	str	x24, [x19]
  41dae0:	str	x27, [x19, #8]
  41dae4:	strb	w23, [x19, #16]
  41dae8:	strb	w0, [x19, #17]
  41daec:	ldp	x0, x1, [x19]
  41daf0:	stp	x0, x1, [x21]
  41daf4:	ldr	x0, [x19, #16]
  41daf8:	str	x0, [x21, #16]
  41dafc:	ldp	x19, x20, [sp, #16]
  41db00:	ldp	x21, x22, [sp, #32]
  41db04:	ldp	x23, x24, [sp, #48]
  41db08:	ldp	x25, x26, [sp, #64]
  41db0c:	ldr	x27, [sp, #80]
  41db10:	ldp	x29, x30, [sp], #192
  41db14:	ret
  41db18:	mov	x22, x1
  41db1c:	mov	x20, x2
  41db20:	cmp	x2, #0x3f
  41db24:	b.ls	41db38 <ferror@plt+0x1b268>  // b.plast
  41db28:	sub	x2, x2, #0x40
  41db2c:	mov	x0, x26
  41db30:	mov	x1, #0x0                   	// #0
  41db34:	b	41db40 <ferror@plt+0x1b270>
  41db38:	mov	x1, x26
  41db3c:	mov	x0, x25
  41db40:	cbz	x2, 41db58 <ferror@plt+0x1b288>
  41db44:	neg	w3, w2
  41db48:	lsr	x3, x1, x3
  41db4c:	lsl	x0, x0, x2
  41db50:	orr	x0, x3, x0
  41db54:	lsl	x1, x1, x2
  41db58:	str	x0, [x19]
  41db5c:	str	x1, [x19, #8]
  41db60:	ldp	x0, x1, [x19]
  41db64:	stp	x0, x1, [sp, #96]
  41db68:	ldr	x0, [x19, #16]
  41db6c:	str	x0, [sp, #112]
  41db70:	add	x8, sp, #0x80
  41db74:	mov	x1, x22
  41db78:	add	x0, sp, #0x60
  41db7c:	bl	41d800 <ferror@plt+0x1af30>
  41db80:	ldr	x24, [sp, #128]
  41db84:	str	x24, [x19]
  41db88:	ldr	x0, [sp, #136]
  41db8c:	str	x0, [x19, #8]
  41db90:	ldr	x23, [sp, #144]
  41db94:	str	x23, [x19, #16]
  41db98:	mov	x27, x0
  41db9c:	mov	w0, #0x0                   	// #0
  41dba0:	ands	w23, w23, #0xff
  41dba4:	b.ne	41dadc <ferror@plt+0x1b20c>  // b.any
  41dba8:	ldp	x0, x1, [x19]
  41dbac:	stp	x0, x1, [sp, #96]
  41dbb0:	ldr	x0, [x19, #16]
  41dbb4:	str	x0, [sp, #112]
  41dbb8:	add	x8, sp, #0xa8
  41dbbc:	mov	x2, x20
  41dbc0:	mov	x1, x22
  41dbc4:	add	x0, sp, #0x60
  41dbc8:	bl	41d954 <ferror@plt+0x1b084>
  41dbcc:	mov	w0, #0x1                   	// #1
  41dbd0:	ldr	x1, [sp, #176]
  41dbd4:	cmp	x1, x26
  41dbd8:	b.ne	41dadc <ferror@plt+0x1b20c>  // b.any
  41dbdc:	ldr	x0, [sp, #168]
  41dbe0:	cmp	x0, x25
  41dbe4:	cset	w0, ne  // ne = any
  41dbe8:	b	41dadc <ferror@plt+0x1b20c>
  41dbec:	and	x2, x0, #0xffffffff
  41dbf0:	and	x3, x1, #0xffffffff
  41dbf4:	mul	x5, x2, x3
  41dbf8:	lsr	x0, x0, #32
  41dbfc:	lsr	x1, x1, #32
  41dc00:	mul	x4, x0, x1
  41dc04:	mul	x1, x2, x1
  41dc08:	mul	x0, x3, x0
  41dc0c:	add	x2, x5, x1, lsl #32
  41dc10:	cmp	x5, x2
  41dc14:	cinc	x3, x4, hi  // hi = pmore
  41dc18:	str	x3, [x8]
  41dc1c:	add	x3, x2, x0, lsl #32
  41dc20:	str	x3, [x8, #8]
  41dc24:	cmp	x2, x3
  41dc28:	b.ls	41dc38 <ferror@plt+0x1b368>  // b.plast
  41dc2c:	ldr	x2, [x8]
  41dc30:	add	x2, x2, #0x1
  41dc34:	str	x2, [x8]
  41dc38:	lsr	x0, x0, #32
  41dc3c:	add	x1, x0, x1, lsr #32
  41dc40:	ldr	x0, [x8]
  41dc44:	add	x1, x0, x1
  41dc48:	str	x1, [x8]
  41dc4c:	mov	w0, #0x1                   	// #1
  41dc50:	strb	w0, [x8, #16]
  41dc54:	strb	wzr, [x8, #17]
  41dc58:	ret
  41dc5c:	stp	x29, x30, [sp, #-176]!
  41dc60:	mov	x29, sp
  41dc64:	stp	x19, x20, [sp, #16]
  41dc68:	stp	x21, x22, [sp, #32]
  41dc6c:	stp	x23, x24, [sp, #48]
  41dc70:	stp	x25, x26, [sp, #64]
  41dc74:	mov	x22, x8
  41dc78:	mov	x19, x1
  41dc7c:	mov	x20, x2
  41dc80:	mov	w21, w3
  41dc84:	ldr	x1, [x1]
  41dc88:	ldr	x2, [x19, #8]
  41dc8c:	ldrb	w3, [x19, #16]
  41dc90:	ldr	x25, [x20]
  41dc94:	ldr	x24, [x20, #8]
  41dc98:	ldrb	w23, [x20, #16]
  41dc9c:	ldr	x26, [x0, #1208]
  41dca0:	cmp	w21, #0x5
  41dca4:	b.eq	41de8c <ferror@plt+0x1b5bc>  // b.none
  41dca8:	b.hi	41dd70 <ferror@plt+0x1b4a0>  // b.pmore
  41dcac:	cmp	w21, #0x4
  41dcb0:	b.ne	41dfa0 <ferror@plt+0x1b6d0>  // b.any
  41dcb4:	adds	x24, x2, x24
  41dcb8:	adc	x25, x25, x1
  41dcbc:	cmp	w3, #0x0
  41dcc0:	csinc	w23, w23, wzr, eq  // eq = none
  41dcc4:	str	x25, [sp, #152]
  41dcc8:	str	x24, [sp, #160]
  41dccc:	strb	w23, [sp, #168]
  41dcd0:	strb	wzr, [sp, #169]
  41dcd4:	ldp	x0, x1, [sp, #152]
  41dcd8:	stp	x0, x1, [sp, #112]
  41dcdc:	ldr	x0, [sp, #168]
  41dce0:	str	x0, [sp, #128]
  41dce4:	add	x8, sp, #0x50
  41dce8:	mov	x1, x26
  41dcec:	add	x0, sp, #0x70
  41dcf0:	bl	41d800 <ferror@plt+0x1af30>
  41dcf4:	ldp	x0, x1, [sp, #80]
  41dcf8:	stp	x0, x1, [sp, #152]
  41dcfc:	ldr	x0, [sp, #96]
  41dd00:	str	x0, [sp, #168]
  41dd04:	ubfx	w1, w0, #8, #8
  41dd08:	ands	w21, w0, #0xff
  41dd0c:	b.ne	41dd58 <ferror@plt+0x1b488>  // b.any
  41dd10:	ldp	x0, x1, [x19]
  41dd14:	stp	x0, x1, [sp, #80]
  41dd18:	ldr	x0, [x19, #16]
  41dd1c:	str	x0, [sp, #96]
  41dd20:	mov	x1, x26
  41dd24:	add	x0, sp, #0x50
  41dd28:	bl	41d864 <ferror@plt+0x1af94>
  41dd2c:	and	w19, w0, #0xff
  41dd30:	ldp	x0, x1, [x20]
  41dd34:	stp	x0, x1, [sp, #80]
  41dd38:	ldr	x0, [x20, #16]
  41dd3c:	str	x0, [sp, #96]
  41dd40:	mov	x1, x26
  41dd44:	add	x0, sp, #0x50
  41dd48:	bl	41d864 <ferror@plt+0x1af94>
  41dd4c:	cmp	w19, w0, uxtb
  41dd50:	b.eq	41df78 <ferror@plt+0x1b6a8>  // b.none
  41dd54:	mov	w1, w21
  41dd58:	strb	w1, [sp, #169]
  41dd5c:	ldp	x0, x1, [sp, #152]
  41dd60:	stp	x0, x1, [x22]
  41dd64:	ldr	x0, [sp, #168]
  41dd68:	str	x0, [x22, #16]
  41dd6c:	b	41dff4 <ferror@plt+0x1b724>
  41dd70:	sub	w1, w21, #0xc
  41dd74:	cmp	w1, #0x1
  41dd78:	b.hi	41dfa0 <ferror@plt+0x1b6d0>  // b.pmore
  41dd7c:	cbnz	w23, 41ddec <ferror@plt+0x1b51c>
  41dd80:	ldp	x0, x1, [x20]
  41dd84:	stp	x0, x1, [sp, #112]
  41dd88:	ldr	x0, [x20, #16]
  41dd8c:	str	x0, [sp, #128]
  41dd90:	mov	x1, x26
  41dd94:	add	x0, sp, #0x70
  41dd98:	bl	41d864 <ferror@plt+0x1af94>
  41dd9c:	and	w0, w0, #0xff
  41dda0:	cbnz	w0, 41ddec <ferror@plt+0x1b51c>
  41dda4:	cmp	w21, #0xd
  41dda8:	cset	w21, ne  // ne = any
  41ddac:	add	w21, w21, #0xc
  41ddb0:	ldp	x0, x1, [x20]
  41ddb4:	stp	x0, x1, [sp, #80]
  41ddb8:	ldr	x0, [x20, #16]
  41ddbc:	str	x0, [sp, #96]
  41ddc0:	add	x8, sp, #0x70
  41ddc4:	mov	x1, x26
  41ddc8:	add	x0, sp, #0x50
  41ddcc:	bl	41d89c <ferror@plt+0x1afcc>
  41ddd0:	ldr	x25, [sp, #112]
  41ddd4:	str	x25, [x20]
  41ddd8:	ldr	x0, [sp, #120]
  41dddc:	str	x0, [x20, #8]
  41dde0:	ldr	x0, [sp, #128]
  41dde4:	str	x0, [x20, #16]
  41dde8:	ldr	x24, [x20, #8]
  41ddec:	cmp	x25, #0x0
  41ddf0:	csinv	x24, x24, xzr, eq  // eq = none
  41ddf4:	cmp	w21, #0xd
  41ddf8:	b.eq	41de44 <ferror@plt+0x1b574>  // b.none
  41ddfc:	ldp	x0, x1, [x19]
  41de00:	stp	x0, x1, [sp, #112]
  41de04:	ldr	x0, [x19, #16]
  41de08:	str	x0, [sp, #128]
  41de0c:	add	x8, sp, #0x50
  41de10:	mov	x2, x24
  41de14:	mov	x1, x26
  41de18:	add	x0, sp, #0x70
  41de1c:	bl	41d954 <ferror@plt+0x1b084>
  41de20:	ldr	x25, [sp, #80]
  41de24:	str	x25, [x19]
  41de28:	ldr	x0, [sp, #88]
  41de2c:	str	x0, [x19, #8]
  41de30:	ldr	x23, [sp, #96]
  41de34:	str	x23, [x19, #16]
  41de38:	mov	x24, x0
  41de3c:	and	w23, w23, #0xff
  41de40:	b	41dfd8 <ferror@plt+0x1b708>
  41de44:	ldp	x0, x1, [x19]
  41de48:	stp	x0, x1, [sp, #112]
  41de4c:	ldr	x0, [x19, #16]
  41de50:	str	x0, [sp, #128]
  41de54:	add	x8, sp, #0x50
  41de58:	mov	x2, x24
  41de5c:	mov	x1, x26
  41de60:	add	x0, sp, #0x70
  41de64:	bl	41da88 <ferror@plt+0x1b1b8>
  41de68:	ldr	x25, [sp, #80]
  41de6c:	str	x25, [x19]
  41de70:	ldr	x0, [sp, #88]
  41de74:	str	x0, [x19, #8]
  41de78:	ldr	x23, [sp, #96]
  41de7c:	str	x23, [x19, #16]
  41de80:	mov	x24, x0
  41de84:	and	w23, w23, #0xff
  41de88:	b	41dfd8 <ferror@plt+0x1b708>
  41de8c:	sub	x24, x2, x24
  41de90:	sub	x25, x1, x25
  41de94:	cmp	x24, x2
  41de98:	cset	x0, hi  // hi = pmore
  41de9c:	sub	x25, x25, x0
  41dea0:	cmp	w3, #0x0
  41dea4:	csinc	w23, w23, wzr, eq  // eq = none
  41dea8:	str	x25, [sp, #152]
  41deac:	str	x24, [sp, #160]
  41deb0:	strb	w23, [sp, #168]
  41deb4:	strb	wzr, [sp, #169]
  41deb8:	ldp	x0, x1, [sp, #152]
  41debc:	stp	x0, x1, [sp, #112]
  41dec0:	ldr	x0, [sp, #168]
  41dec4:	str	x0, [sp, #128]
  41dec8:	add	x8, sp, #0x50
  41decc:	mov	x1, x26
  41ded0:	add	x0, sp, #0x70
  41ded4:	bl	41d800 <ferror@plt+0x1af30>
  41ded8:	ldp	x0, x1, [sp, #80]
  41dedc:	stp	x0, x1, [sp, #152]
  41dee0:	ldr	x0, [sp, #96]
  41dee4:	str	x0, [sp, #168]
  41dee8:	ubfx	w1, w0, #8, #8
  41deec:	ands	w21, w0, #0xff
  41def0:	b.ne	41df60 <ferror@plt+0x1b690>  // b.any
  41def4:	ldp	x0, x1, [x19]
  41def8:	stp	x0, x1, [sp, #80]
  41defc:	ldr	x0, [x19, #16]
  41df00:	str	x0, [sp, #96]
  41df04:	mov	x1, x26
  41df08:	add	x0, sp, #0x50
  41df0c:	bl	41d864 <ferror@plt+0x1af94>
  41df10:	and	w19, w0, #0xff
  41df14:	ldp	x0, x1, [x20]
  41df18:	stp	x0, x1, [sp, #80]
  41df1c:	ldr	x0, [x20, #16]
  41df20:	str	x0, [sp, #96]
  41df24:	mov	x1, x26
  41df28:	add	x0, sp, #0x50
  41df2c:	bl	41d864 <ferror@plt+0x1af94>
  41df30:	cmp	w19, w0, uxtb
  41df34:	b.eq	41df5c <ferror@plt+0x1b68c>  // b.none
  41df38:	ldp	x0, x1, [sp, #152]
  41df3c:	stp	x0, x1, [sp, #80]
  41df40:	ldr	x0, [sp, #168]
  41df44:	str	x0, [sp, #96]
  41df48:	mov	x1, x26
  41df4c:	add	x0, sp, #0x50
  41df50:	bl	41d864 <ferror@plt+0x1af94>
  41df54:	cmp	w19, w0, uxtb
  41df58:	cset	w21, ne  // ne = any
  41df5c:	mov	w1, w21
  41df60:	strb	w1, [sp, #169]
  41df64:	ldp	x0, x1, [sp, #152]
  41df68:	stp	x0, x1, [x22]
  41df6c:	ldr	x0, [sp, #168]
  41df70:	str	x0, [x22, #16]
  41df74:	b	41dff4 <ferror@plt+0x1b724>
  41df78:	ldp	x0, x1, [sp, #152]
  41df7c:	stp	x0, x1, [sp, #80]
  41df80:	ldr	x0, [sp, #168]
  41df84:	str	x0, [sp, #96]
  41df88:	mov	x1, x26
  41df8c:	add	x0, sp, #0x50
  41df90:	bl	41d864 <ferror@plt+0x1af94>
  41df94:	cmp	w19, w0, uxtb
  41df98:	cset	w21, ne  // ne = any
  41df9c:	b	41dd54 <ferror@plt+0x1b484>
  41dfa0:	ldrb	w1, [x0, #1154]
  41dfa4:	cbz	w1, 41dfc8 <ferror@plt+0x1b6f8>
  41dfa8:	ldrb	w1, [x0, #1152]
  41dfac:	cbz	w1, 41dfb8 <ferror@plt+0x1b6e8>
  41dfb0:	ldr	w1, [x0, #28]
  41dfb4:	cbnz	w1, 41dfc8 <ferror@plt+0x1b6f8>
  41dfb8:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41dfbc:	add	x2, x2, #0xbe8
  41dfc0:	mov	w1, #0x15                  	// #21
  41dfc4:	bl	41caf0 <ferror@plt+0x1a220>
  41dfc8:	ldp	x0, x1, [x20]
  41dfcc:	stp	x0, x1, [x19]
  41dfd0:	ldr	x0, [x20, #16]
  41dfd4:	str	x0, [x19, #16]
  41dfd8:	str	x25, [x19]
  41dfdc:	str	x24, [x19, #8]
  41dfe0:	strb	w23, [x19, #16]
  41dfe4:	ldp	x0, x1, [x19]
  41dfe8:	stp	x0, x1, [x22]
  41dfec:	ldr	x0, [x19, #16]
  41dff0:	str	x0, [x22, #16]
  41dff4:	ldp	x19, x20, [sp, #16]
  41dff8:	ldp	x21, x22, [sp, #32]
  41dffc:	ldp	x23, x24, [sp, #48]
  41e000:	ldp	x25, x26, [sp, #64]
  41e004:	ldp	x29, x30, [sp], #176
  41e008:	ret
  41e00c:	stp	x29, x30, [sp, #-80]!
  41e010:	mov	x29, sp
  41e014:	stp	x19, x20, [sp, #16]
  41e018:	stp	x21, x22, [sp, #32]
  41e01c:	stp	x23, x24, [sp, #48]
  41e020:	str	x25, [sp, #64]
  41e024:	mov	x21, x8
  41e028:	mov	x19, x0
  41e02c:	mov	w23, w1
  41e030:	strb	wzr, [x8, #16]
  41e034:	str	xzr, [x8]
  41e038:	strb	wzr, [x8, #17]
  41e03c:	str	xzr, [x8, #8]
  41e040:	ldrb	w2, [x0, #26]
  41e044:	add	w2, w2, #0x1
  41e048:	strb	w2, [x0, #26]
  41e04c:	bl	42ea88 <ferror@plt+0x2c1b8>
  41e050:	mov	x20, x0
  41e054:	ldrb	w0, [x0, #4]
  41e058:	mov	w25, #0x0                   	// #0
  41e05c:	cmp	w0, #0x14
  41e060:	b.eq	41e11c <ferror@plt+0x1b84c>  // b.none
  41e064:	ldrb	w0, [x20, #4]
  41e068:	cmp	w0, #0x44
  41e06c:	cset	w24, eq  // eq = none
  41e070:	cmp	w0, #0x3e
  41e074:	ccmp	w24, #0x0, #0x0, ne  // ne = any
  41e078:	b.eq	41e130 <ferror@plt+0x1b860>  // b.none
  41e07c:	ldr	w0, [x20, #8]
  41e080:	sub	w0, w0, #0x1
  41e084:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  41e088:	mov	x22, x0
  41e08c:	ldr	w2, [x20, #8]
  41e090:	ldr	x1, [x20, #16]
  41e094:	sub	w2, w2, #0x2
  41e098:	add	x1, x1, #0x1
  41e09c:	bl	402260 <memcpy@plt>
  41e0a0:	ldr	w0, [x20, #8]
  41e0a4:	sub	w0, w0, #0x2
  41e0a8:	strb	wzr, [x22, w0, uxtw]
  41e0ac:	ldr	x20, [x20, #8]
  41e0b0:	mov	w3, w23
  41e0b4:	mov	w2, w24
  41e0b8:	mov	x1, x22
  41e0bc:	mov	x0, x19
  41e0c0:	bl	423168 <ferror@plt+0x20898>
  41e0c4:	and	w0, w0, #0xff
  41e0c8:	cbz	w0, 41e0d4 <ferror@plt+0x1b804>
  41e0cc:	mov	x0, #0x1                   	// #1
  41e0d0:	str	x0, [x21, #8]
  41e0d4:	mov	x0, x22
  41e0d8:	bl	402690 <free@plt>
  41e0dc:	cbz	w25, 41e0f0 <ferror@plt+0x1b820>
  41e0e0:	ldr	x0, [x19, #448]
  41e0e4:	ldurb	w0, [x0, #-20]
  41e0e8:	cmp	w0, #0x16
  41e0ec:	b.ne	41e174 <ferror@plt+0x1b8a4>  // b.any
  41e0f0:	cbz	x20, 41e0f8 <ferror@plt+0x1b828>
  41e0f4:	str	x20, [x19, #432]
  41e0f8:	ldrb	w0, [x19, #26]
  41e0fc:	sub	w0, w0, #0x1
  41e100:	strb	w0, [x19, #26]
  41e104:	ldp	x19, x20, [sp, #16]
  41e108:	ldp	x21, x22, [sp, #32]
  41e10c:	ldp	x23, x24, [sp, #48]
  41e110:	ldr	x25, [sp, #64]
  41e114:	ldp	x29, x30, [sp], #80
  41e118:	ret
  41e11c:	mov	x0, x19
  41e120:	bl	42ea88 <ferror@plt+0x2c1b8>
  41e124:	mov	x20, x0
  41e128:	mov	w25, #0x1                   	// #1
  41e12c:	b	41e064 <ferror@plt+0x1b794>
  41e130:	cmp	w0, #0x3
  41e134:	b.eq	41e158 <ferror@plt+0x1b888>  // b.none
  41e138:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41e13c:	add	x2, x2, #0xc10
  41e140:	mov	w1, #0x3                   	// #3
  41e144:	mov	x0, x19
  41e148:	bl	41c9fc <ferror@plt+0x1a12c>
  41e14c:	cbz	w25, 41e0f8 <ferror@plt+0x1b828>
  41e150:	mov	x20, #0x0                   	// #0
  41e154:	b	41e0e0 <ferror@plt+0x1b810>
  41e158:	mov	x0, x19
  41e15c:	bl	41c7e0 <ferror@plt+0x19f10>
  41e160:	mov	x22, x0
  41e164:	mov	w24, #0x1                   	// #1
  41e168:	mov	x20, #0x0                   	// #0
  41e16c:	cbnz	x0, 41e0b0 <ferror@plt+0x1b7e0>
  41e170:	b	41e14c <ferror@plt+0x1b87c>
  41e174:	mov	x0, x19
  41e178:	bl	42ea88 <ferror@plt+0x2c1b8>
  41e17c:	ldrb	w0, [x0, #4]
  41e180:	cmp	w0, #0x15
  41e184:	b.eq	41e0f0 <ferror@plt+0x1b820>  // b.none
  41e188:	adrp	x2, 460000 <_obstack_memory_used@@Base+0x19094>
  41e18c:	add	x2, x2, #0xc48
  41e190:	mov	w1, #0x3                   	// #3
  41e194:	mov	x0, x19
  41e198:	bl	41c9fc <ferror@plt+0x1a12c>
  41e19c:	b	41e0f0 <ferror@plt+0x1b820>
  41e1a0:	stp	x29, x30, [sp, #-16]!
  41e1a4:	mov	x29, sp
  41e1a8:	bl	41cfec <ferror@plt+0x1a71c>
  41e1ac:	ldp	x29, x30, [sp], #16
  41e1b0:	ret
  41e1b4:	stp	x29, x30, [sp, #-16]!
  41e1b8:	mov	x29, sp
  41e1bc:	bl	41d6a4 <ferror@plt+0x1add4>
  41e1c0:	ldp	x29, x30, [sp], #16
  41e1c4:	ret
  41e1c8:	cmp	w0, #0x4a
  41e1cc:	b.eq	41e1f8 <ferror@plt+0x1b928>  // b.none
  41e1d0:	cmp	w0, #0x4b
  41e1d4:	b.eq	41e200 <ferror@plt+0x1b930>  // b.none
  41e1d8:	cmp	w0, #0x4c
  41e1dc:	b.eq	41e208 <ferror@plt+0x1b938>  // b.none
  41e1e0:	cmp	w0, #0x4d
  41e1e4:	b.eq	41e210 <ferror@plt+0x1b940>  // b.none
  41e1e8:	cmp	w0, #0x4e
  41e1ec:	mov	w1, #0x42                  	// #66
  41e1f0:	csel	w0, w0, w1, ne  // ne = any
  41e1f4:	ret
  41e1f8:	mov	w0, #0x3e                  	// #62
  41e1fc:	b	41e1f4 <ferror@plt+0x1b924>
  41e200:	mov	w0, #0x3f                  	// #63
  41e204:	b	41e1f4 <ferror@plt+0x1b924>
  41e208:	mov	w0, #0x40                  	// #64
  41e20c:	b	41e1f4 <ferror@plt+0x1b924>
  41e210:	mov	w0, #0x41                  	// #65
  41e214:	b	41e1f4 <ferror@plt+0x1b924>
  41e218:	cmp	w0, #0x3e
  41e21c:	b.eq	41e248 <ferror@plt+0x1b978>  // b.none
  41e220:	cmp	w0, #0x3f
  41e224:	b.eq	41e250 <ferror@plt+0x1b980>  // b.none
  41e228:	cmp	w0, #0x40
  41e22c:	b.eq	41e258 <ferror@plt+0x1b988>  // b.none
  41e230:	cmp	w0, #0x41
  41e234:	b.eq	41e260 <ferror@plt+0x1b990>  // b.none
  41e238:	cmp	w0, #0x42
  41e23c:	mov	w1, #0x4e                  	// #78
  41e240:	csel	w0, w0, w1, ne  // ne = any
  41e244:	ret
  41e248:	mov	w0, #0x4a                  	// #74
  41e24c:	b	41e244 <ferror@plt+0x1b974>
  41e250:	mov	w0, #0x4b                  	// #75
  41e254:	b	41e244 <ferror@plt+0x1b974>
  41e258:	mov	w0, #0x4c                  	// #76
  41e25c:	b	41e244 <ferror@plt+0x1b974>
  41e260:	mov	w0, #0x4d                  	// #77
  41e264:	b	41e244 <ferror@plt+0x1b974>
  41e268:	cmp	w0, #0x45
  41e26c:	b.eq	41e298 <ferror@plt+0x1b9c8>  // b.none
  41e270:	cmp	w0, #0x46
  41e274:	b.eq	41e2a0 <ferror@plt+0x1b9d0>  // b.none
  41e278:	cmp	w0, #0x47
  41e27c:	b.eq	41e2a8 <ferror@plt+0x1b9d8>  // b.none
  41e280:	cmp	w0, #0x48
  41e284:	b.eq	41e2b0 <ferror@plt+0x1b9e0>  // b.none
  41e288:	cmp	w0, #0x49
  41e28c:	mov	w1, #0x3c                  	// #60
  41e290:	csel	w0, w0, w1, ne  // ne = any
  41e294:	ret
  41e298:	mov	w0, #0x38                  	// #56
  41e29c:	b	41e294 <ferror@plt+0x1b9c4>
  41e2a0:	mov	w0, #0x39                  	// #57
  41e2a4:	b	41e294 <ferror@plt+0x1b9c4>
  41e2a8:	mov	w0, #0x3a                  	// #58
  41e2ac:	b	41e294 <ferror@plt+0x1b9c4>
  41e2b0:	mov	w0, #0x3b                  	// #59
  41e2b4:	b	41e294 <ferror@plt+0x1b9c4>
  41e2b8:	cmp	w0, #0x38
  41e2bc:	b.eq	41e2e8 <ferror@plt+0x1ba18>  // b.none
  41e2c0:	cmp	w0, #0x39
  41e2c4:	b.eq	41e2f0 <ferror@plt+0x1ba20>  // b.none
  41e2c8:	cmp	w0, #0x3a
  41e2cc:	b.eq	41e2f8 <ferror@plt+0x1ba28>  // b.none
  41e2d0:	cmp	w0, #0x3b
  41e2d4:	b.eq	41e300 <ferror@plt+0x1ba30>  // b.none
  41e2d8:	cmp	w0, #0x3c
  41e2dc:	mov	w1, #0x49                  	// #73
  41e2e0:	csel	w0, w0, w1, ne  // ne = any
  41e2e4:	ret
  41e2e8:	mov	w0, #0x45                  	// #69
  41e2ec:	b	41e2e4 <ferror@plt+0x1ba14>
  41e2f0:	mov	w0, #0x46                  	// #70
  41e2f4:	b	41e2e4 <ferror@plt+0x1ba14>
  41e2f8:	mov	w0, #0x47                  	// #71
  41e2fc:	b	41e2e4 <ferror@plt+0x1ba14>
  41e300:	mov	w0, #0x48                  	// #72
  41e304:	b	41e2e4 <ferror@plt+0x1ba14>
  41e308:	sub	w0, w0, #0x4a
  41e30c:	cmp	w0, #0x4
  41e310:	cset	w0, ls  // ls = plast
  41e314:	ret
  41e318:	sub	w0, w0, #0x45
  41e31c:	cmp	w0, #0x4
  41e320:	cset	w0, ls  // ls = plast
  41e324:	ret
  41e328:	ldr	w2, [x0, #8]
  41e32c:	ldr	x0, [x0, #16]
  41e330:	cbz	w2, 41e38c <ferror@plt+0x1babc>
  41e334:	mov	x1, #0x0                   	// #0
  41e338:	mov	w5, #0x27                  	// #39
  41e33c:	mov	w4, w1
  41e340:	ldrb	w3, [x0, x1]
  41e344:	cmp	w3, #0x22
  41e348:	ccmp	w3, w5, #0x4, ne  // ne = any
  41e34c:	b.eq	41e360 <ferror@plt+0x1ba90>  // b.none
  41e350:	add	w4, w1, #0x1
  41e354:	add	x1, x1, #0x1
  41e358:	cmp	w2, w1
  41e35c:	b.hi	41e33c <ferror@plt+0x1ba6c>  // b.pmore
  41e360:	cmp	w2, w4
  41e364:	b.eq	41e390 <ferror@plt+0x1bac0>  // b.none
  41e368:	ldrb	w3, [x0, w4, uxtw]
  41e36c:	mov	w4, w2
  41e370:	sub	w2, w2, #0x1
  41e374:	ldrb	w1, [x0, w2, uxtw]
  41e378:	cmp	w1, w3
  41e37c:	b.eq	41e398 <ferror@plt+0x1bac8>  // b.none
  41e380:	cbnz	w2, 41e36c <ferror@plt+0x1ba9c>
  41e384:	add	x0, x0, w2, uxtw
  41e388:	ret
  41e38c:	mov	w4, w2
  41e390:	add	x0, x0, w4, uxtw
  41e394:	b	41e388 <ferror@plt+0x1bab8>
  41e398:	mov	w2, w4
  41e39c:	b	41e384 <ferror@plt+0x1bab4>
  41e3a0:	stp	x29, x30, [sp, #-96]!
  41e3a4:	mov	x29, sp
  41e3a8:	stp	x21, x22, [sp, #32]
  41e3ac:	stp	x25, x26, [sp, #64]
  41e3b0:	stp	x27, x28, [sp, #80]
  41e3b4:	mov	x25, x0
  41e3b8:	mov	x26, x2
  41e3bc:	mov	w27, w3
  41e3c0:	ldr	x8, [x1, #16]
  41e3c4:	cbz	x2, 41e3cc <ferror@plt+0x1bafc>
  41e3c8:	str	xzr, [x2]
  41e3cc:	ldr	w28, [x1, #8]
  41e3d0:	cmp	w28, #0x1
  41e3d4:	b.eq	41ed74 <ferror@plt+0x1c4a4>  // b.none
  41e3d8:	stp	x19, x20, [sp, #16]
  41e3dc:	stp	x23, x24, [sp, #48]
  41e3e0:	ldrb	w0, [x8]
  41e3e4:	mov	x20, x8
  41e3e8:	mov	w24, #0xa                   	// #10
  41e3ec:	cmp	w0, #0x30
  41e3f0:	b.eq	41e420 <ferror@plt+0x1bb50>  // b.none
  41e3f4:	mov	w22, #0x0                   	// #0
  41e3f8:	mov	w6, #0x0                   	// #0
  41e3fc:	mov	w23, #0x0                   	// #0
  41e400:	mov	w21, #0x0                   	// #0
  41e404:	adrp	x3, 466000 <_obstack_memory_used@@Base+0x1f094>
  41e408:	add	x3, x3, #0xa68
  41e40c:	adrp	x5, 466000 <_obstack_memory_used@@Base+0x1f094>
  41e410:	add	x5, x5, #0x750
  41e414:	mov	w7, #0x0                   	// #0
  41e418:	mov	w4, #0x1                   	// #1
  41e41c:	b	41e528 <ferror@plt+0x1bc58>
  41e420:	add	x20, x8, #0x1
  41e424:	ldrb	w0, [x8, #1]
  41e428:	and	w0, w0, #0xffffffdf
  41e42c:	and	w0, w0, #0xff
  41e430:	cmp	w0, #0x58
  41e434:	b.ne	41e4a8 <ferror@plt+0x1bbd8>  // b.any
  41e438:	ldrb	w0, [x8, #2]
  41e43c:	cmp	w0, #0x2e
  41e440:	b.eq	41e454 <ferror@plt+0x1bb84>  // b.none
  41e444:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1f094>
  41e448:	add	x1, x1, #0xa68
  41e44c:	ldrh	w1, [x1, w0, sxtw #1]
  41e450:	tbz	w1, #8, 41e468 <ferror@plt+0x1bb98>
  41e454:	add	x20, x8, #0x2
  41e458:	mov	w24, #0x10                  	// #16
  41e45c:	b	41e3f4 <ferror@plt+0x1bb24>
  41e460:	mov	w24, #0x8                   	// #8
  41e464:	b	41e3f4 <ferror@plt+0x1bb24>
  41e468:	mov	w24, #0x8                   	// #8
  41e46c:	cmp	w0, #0x27
  41e470:	b.ne	41e3f4 <ferror@plt+0x1bb24>  // b.any
  41e474:	ldrb	w0, [x25, #1166]
  41e478:	cbz	w0, 41e3f4 <ferror@plt+0x1bb24>
  41e47c:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x19094>
  41e480:	add	x4, x4, #0xd20
  41e484:	mov	w3, #0x0                   	// #0
  41e488:	mov	w2, w27
  41e48c:	mov	w1, #0x3                   	// #3
  41e490:	mov	x0, x25
  41e494:	bl	41cbe8 <ferror@plt+0x1a318>
  41e498:	mov	w21, #0x0                   	// #0
  41e49c:	ldp	x19, x20, [sp, #16]
  41e4a0:	ldp	x23, x24, [sp, #48]
  41e4a4:	b	41e5e4 <ferror@plt+0x1bd14>
  41e4a8:	cmp	w0, #0x42
  41e4ac:	b.ne	41e460 <ferror@plt+0x1bb90>  // b.any
  41e4b0:	ldrb	w1, [x8, #2]
  41e4b4:	sub	w0, w1, #0x30
  41e4b8:	and	w0, w0, #0xff
  41e4bc:	cmp	w0, #0x1
  41e4c0:	b.ls	41e504 <ferror@plt+0x1bc34>  // b.plast
  41e4c4:	mov	w24, #0x8                   	// #8
  41e4c8:	cmp	w1, #0x27
  41e4cc:	b.ne	41e3f4 <ferror@plt+0x1bb24>  // b.any
  41e4d0:	ldrb	w0, [x25, #1166]
  41e4d4:	cbz	w0, 41e3f4 <ferror@plt+0x1bb24>
  41e4d8:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x19094>
  41e4dc:	add	x4, x4, #0xd20
  41e4e0:	mov	w3, #0x0                   	// #0
  41e4e4:	mov	w2, w27
  41e4e8:	mov	w1, #0x3                   	// #3
  41e4ec:	mov	x0, x25
  41e4f0:	bl	41cbe8 <ferror@plt+0x1a318>
  41e4f4:	mov	w21, #0x0                   	// #0
  41e4f8:	ldp	x19, x20, [sp, #16]
  41e4fc:	ldp	x23, x24, [sp, #48]
  41e500:	b	41e5e4 <ferror@plt+0x1bd14>
  41e504:	add	x20, x8, #0x2
  41e508:	mov	w24, #0x2                   	// #2
  41e50c:	b	41e3f4 <ferror@plt+0x1bb24>
  41e510:	ldrb	w0, [x5, w0, sxtw]
  41e514:	cmp	w21, w0
  41e518:	csel	w21, w21, w0, cs  // cs = hs, nlast
  41e51c:	mov	w22, w7
  41e520:	mov	w6, w4
  41e524:	mov	x20, x19
  41e528:	mov	x19, x20
  41e52c:	ldrb	w0, [x19], #1
  41e530:	mov	w1, w0
  41e534:	ldrh	w1, [x3, x1, lsl #1]
  41e538:	tbnz	w1, #2, 41e510 <ferror@plt+0x1bc40>
  41e53c:	tst	x1, #0x100
  41e540:	ccmp	w24, #0x10, #0x0, ne  // ne = any
  41e544:	b.eq	41e510 <ferror@plt+0x1bc40>  // b.none
  41e548:	cmp	w0, #0x27
  41e54c:	b.eq	41e574 <ferror@plt+0x1bca4>  // b.none
  41e550:	cmp	w0, #0x2e
  41e554:	b.ne	41e628 <ferror@plt+0x1bd58>  // b.any
  41e558:	cbnz	w22, 41e5bc <ferror@plt+0x1bcec>
  41e55c:	ldrb	w0, [x19]
  41e560:	cmp	w0, #0x27
  41e564:	b.eq	41e5b4 <ferror@plt+0x1bce4>  // b.none
  41e568:	cbnz	w23, 41e5fc <ferror@plt+0x1bd2c>
  41e56c:	mov	w23, w4
  41e570:	b	41e524 <ferror@plt+0x1bc54>
  41e574:	ldrb	w0, [x25, #1166]
  41e578:	cbz	w0, 41edb4 <ferror@plt+0x1c4e4>
  41e57c:	cbnz	w22, 41e588 <ferror@plt+0x1bcb8>
  41e580:	mov	w22, w4
  41e584:	b	41e524 <ferror@plt+0x1bc54>
  41e588:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x19094>
  41e58c:	add	x4, x4, #0xd48
  41e590:	mov	w3, #0x0                   	// #0
  41e594:	mov	w2, w27
  41e598:	mov	w1, #0x3                   	// #3
  41e59c:	mov	x0, x25
  41e5a0:	bl	41cbe8 <ferror@plt+0x1a318>
  41e5a4:	mov	w21, #0x0                   	// #0
  41e5a8:	ldp	x19, x20, [sp, #16]
  41e5ac:	ldp	x23, x24, [sp, #48]
  41e5b0:	b	41e5e4 <ferror@plt+0x1bd14>
  41e5b4:	ldrb	w0, [x25, #1166]
  41e5b8:	cbz	w0, 41e568 <ferror@plt+0x1bc98>
  41e5bc:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x19094>
  41e5c0:	add	x4, x4, #0xd68
  41e5c4:	mov	w3, #0x0                   	// #0
  41e5c8:	mov	w2, w27
  41e5cc:	mov	w1, #0x3                   	// #3
  41e5d0:	mov	x0, x25
  41e5d4:	bl	41cbe8 <ferror@plt+0x1a318>
  41e5d8:	mov	w21, #0x0                   	// #0
  41e5dc:	ldp	x19, x20, [sp, #16]
  41e5e0:	ldp	x23, x24, [sp, #48]
  41e5e4:	mov	w0, w21
  41e5e8:	ldp	x21, x22, [sp, #32]
  41e5ec:	ldp	x25, x26, [sp, #64]
  41e5f0:	ldp	x27, x28, [sp, #80]
  41e5f4:	ldp	x29, x30, [sp], #96
  41e5f8:	ret
  41e5fc:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x19094>
  41e600:	add	x4, x4, #0xd98
  41e604:	mov	w3, #0x0                   	// #0
  41e608:	mov	w2, w27
  41e60c:	mov	w1, #0x3                   	// #3
  41e610:	mov	x0, x25
  41e614:	bl	41cbe8 <ferror@plt+0x1a318>
  41e618:	mov	w21, #0x0                   	// #0
  41e61c:	ldp	x19, x20, [sp, #16]
  41e620:	ldp	x23, x24, [sp, #48]
  41e624:	b	41e5e4 <ferror@plt+0x1bd14>
  41e628:	add	x28, x8, w28, uxtw
  41e62c:	cmp	w24, #0xa
  41e630:	b.hi	41edbc <ferror@plt+0x1c4ec>  // b.pmore
  41e634:	and	w1, w0, #0xffffffdf
  41e638:	and	w1, w1, #0xff
  41e63c:	cmp	w1, #0x45
  41e640:	b.ne	41edbc <ferror@plt+0x1c4ec>  // b.any
  41e644:	cbnz	w22, 41e70c <ferror@plt+0x1be3c>
  41e648:	ldrb	w0, [x19]
  41e64c:	mov	w23, #0x2                   	// #2
  41e650:	cmp	w0, #0x27
  41e654:	b.eq	41e704 <ferror@plt+0x1be34>  // b.none
  41e658:	cmp	w23, #0x0
  41e65c:	cset	w0, ne  // ne = any
  41e660:	cmp	w0, #0x0
  41e664:	ccmp	w24, #0x8, #0x0, ne  // ne = any
  41e668:	b.ne	41e7a0 <ferror@plt+0x1bed0>  // b.any
  41e66c:	mov	w24, #0xa                   	// #10
  41e670:	cmp	w21, #0x9
  41e674:	b.ls	41e864 <ferror@plt+0x1bf94>  // b.plast
  41e678:	add	w5, w21, #0x30
  41e67c:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x19094>
  41e680:	add	x4, x4, #0xe68
  41e684:	mov	w3, #0x0                   	// #0
  41e688:	mov	w2, w27
  41e68c:	mov	w1, #0x3                   	// #3
  41e690:	mov	x0, x25
  41e694:	bl	41cbe8 <ferror@plt+0x1a318>
  41e698:	mov	w21, #0x0                   	// #0
  41e69c:	ldp	x19, x20, [sp, #16]
  41e6a0:	ldp	x23, x24, [sp, #48]
  41e6a4:	b	41e5e4 <ferror@plt+0x1bd14>
  41e6a8:	and	w0, w0, #0xffffffdf
  41e6ac:	and	w0, w0, #0xff
  41e6b0:	cmp	w0, #0x50
  41e6b4:	b.eq	41e644 <ferror@plt+0x1bd74>  // b.none
  41e6b8:	cmp	w23, #0x0
  41e6bc:	cset	w0, ne  // ne = any
  41e6c0:	cbnz	w22, 41e738 <ferror@plt+0x1be68>
  41e6c4:	cmp	w21, w24
  41e6c8:	b.cc	41e7a8 <ferror@plt+0x1bed8>  // b.lo, b.ul, b.last
  41e6cc:	cmp	w24, #0x2
  41e6d0:	b.ne	41e678 <ferror@plt+0x1bda8>  // b.any
  41e6d4:	add	w5, w21, #0x30
  41e6d8:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x19094>
  41e6dc:	add	x4, x4, #0xe40
  41e6e0:	mov	w3, #0x0                   	// #0
  41e6e4:	mov	w2, w27
  41e6e8:	mov	w1, #0x3                   	// #3
  41e6ec:	mov	x0, x25
  41e6f0:	bl	41cbe8 <ferror@plt+0x1a318>
  41e6f4:	mov	w21, #0x0                   	// #0
  41e6f8:	ldp	x19, x20, [sp, #16]
  41e6fc:	ldp	x23, x24, [sp, #48]
  41e700:	b	41e5e4 <ferror@plt+0x1bd14>
  41e704:	ldrb	w0, [x25, #1166]
  41e708:	cbz	w0, 41e658 <ferror@plt+0x1bd88>
  41e70c:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x19094>
  41e710:	add	x4, x4, #0xdc0
  41e714:	mov	w3, #0x0                   	// #0
  41e718:	mov	w2, w27
  41e71c:	mov	w1, #0x3                   	// #3
  41e720:	mov	x0, x25
  41e724:	bl	41cbe8 <ferror@plt+0x1a318>
  41e728:	mov	w21, #0x0                   	// #0
  41e72c:	ldp	x19, x20, [sp, #16]
  41e730:	ldp	x23, x24, [sp, #48]
  41e734:	b	41e5e4 <ferror@plt+0x1bd14>
  41e738:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x19094>
  41e73c:	add	x4, x4, #0xde8
  41e740:	mov	w3, #0x0                   	// #0
  41e744:	mov	w2, w27
  41e748:	mov	w1, #0x3                   	// #3
  41e74c:	mov	x0, x25
  41e750:	bl	41cbe8 <ferror@plt+0x1a318>
  41e754:	mov	w21, #0x0                   	// #0
  41e758:	ldp	x19, x20, [sp, #16]
  41e75c:	ldp	x23, x24, [sp, #48]
  41e760:	b	41e5e4 <ferror@plt+0x1bd14>
  41e764:	orr	w19, w0, #0x2
  41e768:	cmp	w24, #0x8
  41e76c:	b.eq	41ed7c <ferror@plt+0x1c4ac>  // b.none
  41e770:	ldrb	w0, [x25, #1154]
  41e774:	cbz	w0, 41ec58 <ferror@plt+0x1c388>
  41e778:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x19094>
  41e77c:	add	x4, x4, #0xe10
  41e780:	mov	w3, #0x0                   	// #0
  41e784:	mov	w2, w27
  41e788:	mov	w1, #0x2                   	// #2
  41e78c:	mov	x0, x25
  41e790:	bl	41cbe8 <ferror@plt+0x1a318>
  41e794:	b	41ec4c <ferror@plt+0x1c37c>
  41e798:	mov	x19, x20
  41e79c:	b	41e658 <ferror@plt+0x1bd88>
  41e7a0:	mov	x20, x19
  41e7a4:	b	41e6c4 <ferror@plt+0x1bdf4>
  41e7a8:	cbnz	w0, 41e82c <ferror@plt+0x1bf5c>
  41e7ac:	sub	x28, x28, x20
  41e7b0:	mov	x2, x28
  41e7b4:	mov	x1, x20
  41e7b8:	mov	x0, x25
  41e7bc:	bl	41d6a4 <ferror@plt+0x1add4>
  41e7c0:	mov	w21, w0
  41e7c4:	cbnz	w0, 41ec34 <ferror@plt+0x1c364>
  41e7c8:	ldrb	w0, [x25, #1161]
  41e7cc:	cbz	w0, 41ec04 <ferror@plt+0x1c334>
  41e7d0:	cbz	x26, 41e7d8 <ferror@plt+0x1bf08>
  41e7d4:	str	x20, [x26]
  41e7d8:	ldrb	w0, [x25, #1138]
  41e7dc:	cbnz	w0, 41ed9c <ferror@plt+0x1c4cc>
  41e7e0:	mov	w21, #0x1040                	// #4160
  41e7e4:	movk	w21, #0x100, lsl #16
  41e7e8:	ldrb	w0, [x25, #1139]
  41e7ec:	cbz	w0, 41ec48 <ferror@plt+0x1c378>
  41e7f0:	ldrb	w1, [x25, #1120]
  41e7f4:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x19094>
  41e7f8:	add	x0, x0, #0xc98
  41e7fc:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x19094>
  41e800:	add	x4, x4, #0xc70
  41e804:	cmp	w1, #0x0
  41e808:	csel	x4, x4, x0, ne  // ne = any
  41e80c:	ldrb	w0, [x25, #1152]
  41e810:	cbz	w0, 41ecec <ferror@plt+0x1c41c>
  41e814:	mov	w3, #0x0                   	// #0
  41e818:	mov	w2, w27
  41e81c:	mov	w1, #0x7                   	// #7
  41e820:	mov	x0, x25
  41e824:	bl	41cc60 <ferror@plt+0x1a390>
  41e828:	b	41ec48 <ferror@plt+0x1c378>
  41e82c:	cmp	w24, #0x2
  41e830:	b.ne	41e860 <ferror@plt+0x1bf90>  // b.any
  41e834:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x19094>
  41e838:	add	x4, x4, #0xe90
  41e83c:	mov	w3, #0x0                   	// #0
  41e840:	mov	w2, w27
  41e844:	mov	w1, #0x3                   	// #3
  41e848:	mov	x0, x25
  41e84c:	bl	41cbe8 <ferror@plt+0x1a318>
  41e850:	mov	w21, #0x0                   	// #0
  41e854:	ldp	x19, x20, [sp, #16]
  41e858:	ldp	x23, x24, [sp, #48]
  41e85c:	b	41e5e4 <ferror@plt+0x1bd14>
  41e860:	mov	x19, x20
  41e864:	cmp	w24, #0x10
  41e868:	eor	w6, w6, #0x1
  41e86c:	csel	w20, w6, wzr, eq  // eq = none
  41e870:	cbnz	w20, 41e920 <ferror@plt+0x1c050>
  41e874:	b.eq	41e94c <ferror@plt+0x1c07c>  // b.none
  41e878:	cmp	w23, #0x2
  41e87c:	b.eq	41e988 <ferror@plt+0x1c0b8>  // b.none
  41e880:	cbnz	w22, 41eaac <ferror@plt+0x1c1dc>
  41e884:	sub	x20, x28, x19
  41e888:	mov	x2, x20
  41e88c:	mov	x1, x19
  41e890:	mov	x0, x25
  41e894:	bl	41cfec <ferror@plt+0x1a71c>
  41e898:	mov	w21, w0
  41e89c:	cbnz	w0, 41eb08 <ferror@plt+0x1c238>
  41e8a0:	ldrb	w0, [x25, #1161]
  41e8a4:	cbz	w0, 41ead8 <ferror@plt+0x1c208>
  41e8a8:	cbz	x26, 41e8b0 <ferror@plt+0x1bfe0>
  41e8ac:	str	x19, [x26]
  41e8b0:	mov	w21, #0x40                  	// #64
  41e8b4:	movk	w21, #0x100, lsl #16
  41e8b8:	cmp	x19, x28
  41e8bc:	b.eq	41e8e0 <ferror@plt+0x1c010>  // b.none
  41e8c0:	ldrb	w0, [x25, #1138]
  41e8c4:	cbnz	w0, 41eb54 <ferror@plt+0x1c284>
  41e8c8:	mov	w21, #0x40                  	// #64
  41e8cc:	movk	w21, #0x100, lsl #16
  41e8d0:	ubfx	x22, x21, #14, #1
  41e8d4:	cmp	w22, #0x0
  41e8d8:	ccmp	w24, #0xa, #0x4, ne  // ne = any
  41e8dc:	b.ne	41ebb0 <ferror@plt+0x1c2e0>  // b.any
  41e8e0:	tst	w21, #0x300000
  41e8e4:	b.eq	41eb28 <ferror@plt+0x1c258>  // b.none
  41e8e8:	ldrb	w0, [x25, #1154]
  41e8ec:	cbnz	w0, 41ebe4 <ferror@plt+0x1c314>
  41e8f0:	orr	w19, w21, #0x2
  41e8f4:	tbz	w21, #13, 41ec60 <ferror@plt+0x1c390>
  41e8f8:	ldrb	w0, [x25, #1154]
  41e8fc:	cbz	w0, 41ec60 <ferror@plt+0x1c390>
  41e900:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a094>
  41e904:	add	x4, x4, #0xc8
  41e908:	mov	w3, #0x0                   	// #0
  41e90c:	mov	w2, w27
  41e910:	mov	w1, #0x2                   	// #2
  41e914:	mov	x0, x25
  41e918:	bl	41cbe8 <ferror@plt+0x1a318>
  41e91c:	b	41ec58 <ferror@plt+0x1c388>
  41e920:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x19094>
  41e924:	add	x4, x4, #0xec0
  41e928:	mov	w3, #0x0                   	// #0
  41e92c:	mov	w2, w27
  41e930:	mov	w1, #0x3                   	// #3
  41e934:	mov	x0, x25
  41e938:	bl	41cbe8 <ferror@plt+0x1a318>
  41e93c:	mov	w21, #0x0                   	// #0
  41e940:	ldp	x19, x20, [sp, #16]
  41e944:	ldp	x23, x24, [sp, #48]
  41e948:	b	41e5e4 <ferror@plt+0x1bd14>
  41e94c:	ldrb	w0, [x25, #1154]
  41e950:	cbz	w0, 41e980 <ferror@plt+0x1c0b0>
  41e954:	ldrb	w0, [x25, #1127]
  41e958:	cbnz	w0, 41e980 <ferror@plt+0x1c0b0>
  41e95c:	ldrb	w0, [x25, #1120]
  41e960:	cbz	w0, 41e9e8 <ferror@plt+0x1c118>
  41e964:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x19094>
  41e968:	add	x4, x4, #0xef0
  41e96c:	mov	w3, #0x0                   	// #0
  41e970:	mov	w2, w27
  41e974:	mov	w1, #0x2                   	// #2
  41e978:	mov	x0, x25
  41e97c:	bl	41cbe8 <ferror@plt+0x1a318>
  41e980:	cmp	w23, #0x2
  41e984:	b.ne	41ea80 <ferror@plt+0x1c1b0>  // b.any
  41e988:	ldrb	w0, [x19]
  41e98c:	sub	w0, w0, #0x2b
  41e990:	and	w0, w0, #0xfffffffd
  41e994:	tst	w0, #0xff
  41e998:	cinc	x19, x19, eq  // eq = none
  41e99c:	ldrb	w1, [x19]
  41e9a0:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1f094>
  41e9a4:	add	x0, x0, #0xa68
  41e9a8:	ldrh	w0, [x0, w1, sxtw #1]
  41e9ac:	tbz	w0, #2, 41ea08 <ferror@plt+0x1c138>
  41e9b0:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1f094>
  41e9b4:	add	x0, x0, #0xa68
  41e9b8:	ldrb	w1, [x19]
  41e9bc:	mov	w22, w20
  41e9c0:	cmp	w1, #0x27
  41e9c4:	b.eq	41ea70 <ferror@plt+0x1c1a0>  // b.none
  41e9c8:	ldrb	w1, [x19, #1]!
  41e9cc:	ldrh	w2, [x0, w1, sxtw #1]
  41e9d0:	tbnz	w2, #2, 41e9b8 <ferror@plt+0x1c0e8>
  41e9d4:	cmp	w1, #0x27
  41e9d8:	b.ne	41e880 <ferror@plt+0x1bfb0>  // b.any
  41e9dc:	ldrb	w1, [x25, #1166]
  41e9e0:	cbnz	w1, 41e9b8 <ferror@plt+0x1c0e8>
  41e9e4:	b	41e880 <ferror@plt+0x1bfb0>
  41e9e8:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x19094>
  41e9ec:	add	x4, x4, #0xf20
  41e9f0:	mov	w3, #0x0                   	// #0
  41e9f4:	mov	w2, w27
  41e9f8:	mov	w1, #0x2                   	// #2
  41e9fc:	mov	x0, x25
  41ea00:	bl	41cbe8 <ferror@plt+0x1a318>
  41ea04:	b	41e980 <ferror@plt+0x1c0b0>
  41ea08:	cmp	w1, #0x27
  41ea0c:	b.ne	41ea18 <ferror@plt+0x1c148>  // b.any
  41ea10:	ldrb	w0, [x25, #1166]
  41ea14:	cbnz	w0, 41ea44 <ferror@plt+0x1c174>
  41ea18:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x19094>
  41ea1c:	add	x4, x4, #0xf50
  41ea20:	mov	w3, #0x0                   	// #0
  41ea24:	mov	w2, w27
  41ea28:	mov	w1, #0x3                   	// #3
  41ea2c:	mov	x0, x25
  41ea30:	bl	41cbe8 <ferror@plt+0x1a318>
  41ea34:	mov	w21, #0x0                   	// #0
  41ea38:	ldp	x19, x20, [sp, #16]
  41ea3c:	ldp	x23, x24, [sp, #48]
  41ea40:	b	41e5e4 <ferror@plt+0x1bd14>
  41ea44:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x19094>
  41ea48:	add	x4, x4, #0xdc0
  41ea4c:	mov	w3, #0x0                   	// #0
  41ea50:	mov	w2, w27
  41ea54:	mov	w1, #0x3                   	// #3
  41ea58:	mov	x0, x25
  41ea5c:	bl	41cbe8 <ferror@plt+0x1a318>
  41ea60:	mov	w21, #0x0                   	// #0
  41ea64:	ldp	x19, x20, [sp, #16]
  41ea68:	ldp	x23, x24, [sp, #48]
  41ea6c:	b	41e5e4 <ferror@plt+0x1bd14>
  41ea70:	ldrb	w1, [x25, #1166]
  41ea74:	cmp	w1, #0x0
  41ea78:	cset	w22, ne  // ne = any
  41ea7c:	b	41e9c8 <ferror@plt+0x1c0f8>
  41ea80:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x19094>
  41ea84:	add	x4, x4, #0xf68
  41ea88:	mov	w3, #0x0                   	// #0
  41ea8c:	mov	w2, w27
  41ea90:	mov	w1, #0x3                   	// #3
  41ea94:	mov	x0, x25
  41ea98:	bl	41cbe8 <ferror@plt+0x1a318>
  41ea9c:	mov	w21, #0x0                   	// #0
  41eaa0:	ldp	x19, x20, [sp, #16]
  41eaa4:	ldp	x23, x24, [sp, #48]
  41eaa8:	b	41e5e4 <ferror@plt+0x1bd14>
  41eaac:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x19094>
  41eab0:	add	x4, x4, #0xde8
  41eab4:	mov	w3, #0x0                   	// #0
  41eab8:	mov	w2, w27
  41eabc:	mov	w1, #0x3                   	// #3
  41eac0:	mov	x0, x25
  41eac4:	bl	41cbe8 <ferror@plt+0x1a318>
  41eac8:	mov	w21, #0x0                   	// #0
  41eacc:	ldp	x19, x20, [sp, #16]
  41ead0:	ldp	x23, x24, [sp, #48]
  41ead4:	b	41e5e4 <ferror@plt+0x1bd14>
  41ead8:	mov	x6, x19
  41eadc:	mov	w5, w20
  41eae0:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x19094>
  41eae4:	add	x4, x4, #0xfa0
  41eae8:	mov	w3, #0x0                   	// #0
  41eaec:	mov	w2, w27
  41eaf0:	mov	w1, #0x3                   	// #3
  41eaf4:	mov	x0, x25
  41eaf8:	bl	41cbe8 <ferror@plt+0x1a318>
  41eafc:	ldp	x19, x20, [sp, #16]
  41eb00:	ldp	x23, x24, [sp, #48]
  41eb04:	b	41e5e4 <ferror@plt+0x1bd14>
  41eb08:	cmp	x19, x28
  41eb0c:	b.eq	41eb18 <ferror@plt+0x1c248>  // b.none
  41eb10:	ldrb	w0, [x25, #1138]
  41eb14:	cbnz	w0, 41eb5c <ferror@plt+0x1c28c>
  41eb18:	cmp	w21, #0x20
  41eb1c:	b.ne	41e8d0 <ferror@plt+0x1c000>  // b.any
  41eb20:	ldrb	w0, [x25, #1154]
  41eb24:	cbnz	w0, 41eb90 <ferror@plt+0x1c2c0>
  41eb28:	cbz	w22, 41e8f0 <ferror@plt+0x1c020>
  41eb2c:	ldrb	w0, [x25, #1154]
  41eb30:	cbz	w0, 41e8f0 <ferror@plt+0x1c020>
  41eb34:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a094>
  41eb38:	add	x4, x4, #0x68
  41eb3c:	mov	w3, #0x0                   	// #0
  41eb40:	mov	w2, w27
  41eb44:	mov	w1, #0x2                   	// #2
  41eb48:	mov	x0, x25
  41eb4c:	bl	41cbe8 <ferror@plt+0x1a318>
  41eb50:	b	41e8f0 <ferror@plt+0x1c020>
  41eb54:	mov	w21, #0x40                  	// #64
  41eb58:	movk	w21, #0x100, lsl #16
  41eb5c:	mov	x0, x25
  41eb60:	bl	42b8c8 <ferror@plt+0x28ff8>
  41eb64:	cbnz	w0, 41eb18 <ferror@plt+0x1c248>
  41eb68:	mov	x6, x19
  41eb6c:	mov	w5, w20
  41eb70:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x19094>
  41eb74:	add	x4, x4, #0xfd0
  41eb78:	mov	w3, #0x0                   	// #0
  41eb7c:	mov	w2, w27
  41eb80:	mov	w1, #0x6                   	// #6
  41eb84:	mov	x0, x25
  41eb88:	bl	41cc60 <ferror@plt+0x1a390>
  41eb8c:	b	41eb18 <ferror@plt+0x1c248>
  41eb90:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x19094>
  41eb94:	add	x4, x4, #0xff8
  41eb98:	mov	w3, #0x0                   	// #0
  41eb9c:	mov	w2, w27
  41eba0:	mov	w1, #0x2                   	// #2
  41eba4:	mov	x0, x25
  41eba8:	bl	41cbe8 <ferror@plt+0x1a318>
  41ebac:	b	41eb28 <ferror@plt+0x1c258>
  41ebb0:	mov	x6, x19
  41ebb4:	mov	w5, w20
  41ebb8:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a094>
  41ebbc:	add	x4, x4, #0x28
  41ebc0:	mov	w3, #0x0                   	// #0
  41ebc4:	mov	w2, w27
  41ebc8:	mov	w1, #0x3                   	// #3
  41ebcc:	mov	x0, x25
  41ebd0:	bl	41cbe8 <ferror@plt+0x1a318>
  41ebd4:	mov	w21, #0x0                   	// #0
  41ebd8:	ldp	x19, x20, [sp, #16]
  41ebdc:	ldp	x23, x24, [sp, #48]
  41ebe0:	b	41e5e4 <ferror@plt+0x1bd14>
  41ebe4:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x19094>
  41ebe8:	add	x4, x4, #0xe10
  41ebec:	mov	w3, #0x0                   	// #0
  41ebf0:	mov	w2, w27
  41ebf4:	mov	w1, #0x2                   	// #2
  41ebf8:	mov	x0, x25
  41ebfc:	bl	41cbe8 <ferror@plt+0x1a318>
  41ec00:	b	41eb28 <ferror@plt+0x1c258>
  41ec04:	mov	x6, x20
  41ec08:	mov	w5, w28
  41ec0c:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a094>
  41ec10:	add	x4, x4, #0x98
  41ec14:	mov	w3, #0x0                   	// #0
  41ec18:	mov	w2, w27
  41ec1c:	mov	w1, #0x3                   	// #3
  41ec20:	mov	x0, x25
  41ec24:	bl	41cbe8 <ferror@plt+0x1a318>
  41ec28:	ldp	x19, x20, [sp, #16]
  41ec2c:	ldp	x23, x24, [sp, #48]
  41ec30:	b	41e5e4 <ferror@plt+0x1bd14>
  41ec34:	ldrb	w0, [x25, #1138]
  41ec38:	cbnz	w0, 41ec88 <ferror@plt+0x1c3b8>
  41ec3c:	and	w0, w21, #0xf0
  41ec40:	cmp	w0, #0x40
  41ec44:	b.eq	41e7e8 <ferror@plt+0x1bf18>  // b.none
  41ec48:	orr	w19, w21, #0x1
  41ec4c:	tbz	w19, #13, 41ec58 <ferror@plt+0x1c388>
  41ec50:	ldrb	w0, [x25, #1154]
  41ec54:	cbnz	w0, 41e900 <ferror@plt+0x1c030>
  41ec58:	cmp	w24, #0x2
  41ec5c:	b.eq	41ed04 <ferror@plt+0x1c434>  // b.none
  41ec60:	cmp	w24, #0xa
  41ec64:	b.eq	41ed54 <ferror@plt+0x1c484>  // b.none
  41ec68:	cmp	w24, #0x10
  41ec6c:	b.eq	41ed64 <ferror@plt+0x1c494>  // b.none
  41ec70:	orr	w21, w19, #0x400
  41ec74:	cmp	w24, #0x2
  41ec78:	b.eq	41ed44 <ferror@plt+0x1c474>  // b.none
  41ec7c:	ldp	x19, x20, [sp, #16]
  41ec80:	ldp	x23, x24, [sp, #48]
  41ec84:	b	41e5e4 <ferror@plt+0x1bd14>
  41ec88:	mov	x0, x25
  41ec8c:	bl	42b8c8 <ferror@plt+0x28ff8>
  41ec90:	cbnz	w0, 41ec3c <ferror@plt+0x1c36c>
  41ec94:	and	w0, w21, #0x3000
  41ec98:	and	w1, w21, #0xf0
  41ec9c:	cmp	w1, #0x40
  41eca0:	b.eq	41ecdc <ferror@plt+0x1c40c>  // b.none
  41eca4:	cbz	w0, 41ec48 <ferror@plt+0x1c378>
  41eca8:	mov	w1, #0x6                   	// #6
  41ecac:	mov	x6, x20
  41ecb0:	mov	w5, w28
  41ecb4:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x19094>
  41ecb8:	add	x4, x4, #0xfd0
  41ecbc:	mov	w3, #0x0                   	// #0
  41ecc0:	mov	w2, w27
  41ecc4:	mov	x0, x25
  41ecc8:	bl	41cc60 <ferror@plt+0x1a390>
  41eccc:	b	41ec3c <ferror@plt+0x1c36c>
  41ecd0:	mov	w21, #0x1040                	// #4160
  41ecd4:	movk	w21, #0x100, lsl #16
  41ecd8:	mov	w0, #0x1000                	// #4096
  41ecdc:	ldrb	w1, [x25, #1139]
  41ece0:	cbz	w1, 41ed90 <ferror@plt+0x1c4c0>
  41ece4:	mov	w1, #0x7                   	// #7
  41ece8:	b	41ecac <ferror@plt+0x1c3dc>
  41ecec:	mov	w3, #0x0                   	// #0
  41ecf0:	mov	w2, w27
  41ecf4:	mov	w1, #0x7                   	// #7
  41ecf8:	mov	x0, x25
  41ecfc:	bl	41ccdc <ferror@plt+0x1a40c>
  41ed00:	b	41ec48 <ferror@plt+0x1c378>
  41ed04:	ldrb	w0, [x25, #1165]
  41ed08:	cbnz	w0, 41ed44 <ferror@plt+0x1c474>
  41ed0c:	ldrb	w0, [x25, #1154]
  41ed10:	cbz	w0, 41ed44 <ferror@plt+0x1c474>
  41ed14:	ldrb	w1, [x25, #1120]
  41ed18:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x19094>
  41ed1c:	add	x0, x0, #0xcf8
  41ed20:	adrp	x4, 460000 <_obstack_memory_used@@Base+0x19094>
  41ed24:	add	x4, x4, #0xcc0
  41ed28:	cmp	w1, #0x0
  41ed2c:	csel	x4, x4, x0, ne  // ne = any
  41ed30:	mov	w3, #0x0                   	// #0
  41ed34:	mov	w2, w27
  41ed38:	mov	w1, #0x2                   	// #2
  41ed3c:	mov	x0, x25
  41ed40:	bl	41cbe8 <ferror@plt+0x1a318>
  41ed44:	orr	w21, w19, #0x800
  41ed48:	ldp	x19, x20, [sp, #16]
  41ed4c:	ldp	x23, x24, [sp, #48]
  41ed50:	b	41e5e4 <ferror@plt+0x1bd14>
  41ed54:	orr	w21, w19, #0x100
  41ed58:	ldp	x19, x20, [sp, #16]
  41ed5c:	ldp	x23, x24, [sp, #48]
  41ed60:	b	41e5e4 <ferror@plt+0x1bd14>
  41ed64:	orr	w21, w19, #0x200
  41ed68:	ldp	x19, x20, [sp, #16]
  41ed6c:	ldp	x23, x24, [sp, #48]
  41ed70:	b	41e5e4 <ferror@plt+0x1bd14>
  41ed74:	mov	w21, #0x111                 	// #273
  41ed78:	b	41e5e4 <ferror@plt+0x1bd14>
  41ed7c:	ldrb	w0, [x25, #1154]
  41ed80:	mov	w24, #0xa                   	// #10
  41ed84:	cbz	w0, 41ec60 <ferror@plt+0x1c390>
  41ed88:	mov	w24, #0xa                   	// #10
  41ed8c:	b	41e778 <ferror@plt+0x1bea8>
  41ed90:	cbz	w0, 41e7e8 <ferror@plt+0x1bf18>
  41ed94:	mov	w1, #0x6                   	// #6
  41ed98:	b	41ecac <ferror@plt+0x1c3dc>
  41ed9c:	mov	x0, x25
  41eda0:	bl	42b8c8 <ferror@plt+0x28ff8>
  41eda4:	cbz	w0, 41ecd0 <ferror@plt+0x1c400>
  41eda8:	mov	w21, #0x1040                	// #4160
  41edac:	movk	w21, #0x100, lsl #16
  41edb0:	b	41ec3c <ferror@plt+0x1c36c>
  41edb4:	add	x28, x8, w28, uxtw
  41edb8:	mov	w0, #0x27                  	// #39
  41edbc:	cmp	w24, #0x10
  41edc0:	b.eq	41e6a8 <ferror@plt+0x1bdd8>  // b.none
  41edc4:	cbnz	w22, 41e738 <ferror@plt+0x1be68>
  41edc8:	cmp	w23, #0x0
  41edcc:	ccmp	w24, #0x10, #0x4, eq  // eq = none
  41edd0:	b.eq	41e798 <ferror@plt+0x1bec8>  // b.none
  41edd4:	sub	x2, x28, x20
  41edd8:	mov	x1, x20
  41eddc:	mov	x0, x25
  41ede0:	bl	41cfec <ferror@plt+0x1a71c>
  41ede4:	tst	w0, #0x300000
  41ede8:	b.ne	41e764 <ferror@plt+0x1be94>  // b.any
  41edec:	cmp	w21, w24
  41edf0:	b.cs	41e6cc <ferror@plt+0x1bdfc>  // b.hs, b.nlast
  41edf4:	b	41e7ac <ferror@plt+0x1bedc>
  41edf8:	stp	x29, x30, [sp, #-224]!
  41edfc:	mov	x29, sp
  41ee00:	stp	x19, x20, [sp, #16]
  41ee04:	stp	x21, x22, [sp, #32]
  41ee08:	stp	x23, x24, [sp, #48]
  41ee0c:	mov	x19, x8
  41ee10:	mov	x22, x0
  41ee14:	mov	w23, w2
  41ee18:	str	xzr, [x8, #8]
  41ee1c:	str	xzr, [x8]
  41ee20:	ubfx	x0, x23, #12, #1
  41ee24:	strb	w0, [x8, #16]
  41ee28:	strb	wzr, [x8, #17]
  41ee2c:	ldr	x2, [x1, #16]
  41ee30:	ldr	w21, [x1, #8]
  41ee34:	cmp	w21, #0x1
  41ee38:	b.eq	41eec8 <ferror@plt+0x1c5f8>  // b.none
  41ee3c:	stp	x25, x26, [sp, #64]
  41ee40:	stp	x27, x28, [sp, #80]
  41ee44:	ldr	x28, [x22, #1208]
  41ee48:	and	w0, w23, #0xf00
  41ee4c:	add	x20, x2, #0x1
  41ee50:	mov	w25, #0x8                   	// #8
  41ee54:	cmp	w0, #0x400
  41ee58:	b.eq	41ee7c <ferror@plt+0x1c5ac>  // b.none
  41ee5c:	add	x20, x2, #0x2
  41ee60:	mov	w25, #0x10                  	// #16
  41ee64:	cmp	w0, #0x200
  41ee68:	b.eq	41ee7c <ferror@plt+0x1c5ac>  // b.none
  41ee6c:	mov	x20, x2
  41ee70:	mov	w25, #0xa                   	// #10
  41ee74:	cmp	w0, #0x800
  41ee78:	b.eq	41eeec <ferror@plt+0x1c61c>  // b.none
  41ee7c:	neg	w0, w28
  41ee80:	mov	x1, #0xffffffffffffffff    	// #-1
  41ee84:	lsr	x0, x1, x0
  41ee88:	cmp	x28, #0x40
  41ee8c:	csel	x0, x0, x1, cc  // cc = lo, ul, last
  41ee90:	add	x21, x2, w21, uxtw
  41ee94:	mov	w27, w25
  41ee98:	sub	x0, x0, x27
  41ee9c:	add	x0, x0, #0x1
  41eea0:	udiv	x0, x0, x27
  41eea4:	add	x0, x0, #0x1
  41eea8:	cmp	x20, x21
  41eeac:	b.cs	41ef98 <ferror@plt+0x1c6c8>  // b.hs, b.nlast
  41eeb0:	str	wzr, [sp, #108]
  41eeb4:	adrp	x24, 466000 <_obstack_memory_used@@Base+0x1f094>
  41eeb8:	add	x24, x24, #0xa68
  41eebc:	adrp	x26, 466000 <_obstack_memory_used@@Base+0x1f094>
  41eec0:	add	x26, x26, #0x750
  41eec4:	b	41ef64 <ferror@plt+0x1c694>
  41eec8:	ldrb	w0, [x2]
  41eecc:	sub	w0, w0, #0x30
  41eed0:	sxtw	x0, w0
  41eed4:	str	x0, [x8, #8]
  41eed8:	ldp	x19, x20, [sp, #16]
  41eedc:	ldp	x21, x22, [sp, #32]
  41eee0:	ldp	x23, x24, [sp, #48]
  41eee4:	ldp	x29, x30, [sp], #224
  41eee8:	ret
  41eeec:	add	x20, x2, #0x2
  41eef0:	mov	w25, #0x2                   	// #2
  41eef4:	b	41ee7c <ferror@plt+0x1c5ac>
  41eef8:	tbz	w2, #8, 41ef7c <ferror@plt+0x1c6ac>
  41eefc:	ldrb	w2, [x26, w1, sxtw]
  41ef00:	ldr	x1, [x19, #8]
  41ef04:	cmp	x0, x1
  41ef08:	b.hi	41ef4c <ferror@plt+0x1c67c>  // b.pmore
  41ef0c:	ldr	x3, [x19]
  41ef10:	ldrb	w7, [x19, #16]
  41ef14:	cmp	xzr, x3, lsr #60
  41ef18:	cset	w6, ne  // ne = any
  41ef1c:	lsl	x5, x1, #4
  41ef20:	extr	x4, x3, x1, #60
  41ef24:	add	x0, x5, w2, uxtb
  41ef28:	str	x0, [sp, #112]
  41ef2c:	cmp	x5, x0
  41ef30:	b.hi	41f0ec <ferror@plt+0x1c81c>  // b.pmore
  41ef34:	str	x4, [sp, #120]
  41ef38:	b	41f058 <ferror@plt+0x1c788>
  41ef3c:	ldrb	w2, [x26, w1, sxtw]
  41ef40:	ldr	x1, [x19, #8]
  41ef44:	cmp	x1, x0
  41ef48:	b.cs	41eff0 <ferror@plt+0x1c720>  // b.hs, b.nlast
  41ef4c:	and	x2, x2, #0xff
  41ef50:	madd	x1, x27, x1, x2
  41ef54:	str	x1, [x19, #8]
  41ef58:	add	x20, x20, #0x1
  41ef5c:	cmp	x21, x20
  41ef60:	b.eq	41ef8c <ferror@plt+0x1c6bc>  // b.none
  41ef64:	ldrb	w1, [x20]
  41ef68:	mov	w2, w1
  41ef6c:	ldrh	w2, [x24, x2, lsl #1]
  41ef70:	tbnz	w2, #2, 41ef3c <ferror@plt+0x1c66c>
  41ef74:	cmp	w25, #0x10
  41ef78:	b.eq	41eef8 <ferror@plt+0x1c628>  // b.none
  41ef7c:	cmp	w1, #0x27
  41ef80:	b.ne	41ef8c <ferror@plt+0x1c6bc>  // b.any
  41ef84:	ldrb	w1, [x22, #1166]
  41ef88:	cbnz	w1, 41ef58 <ferror@plt+0x1c688>
  41ef8c:	ldr	w0, [sp, #108]
  41ef90:	cbz	w0, 41ef98 <ferror@plt+0x1c6c8>
  41ef94:	tbz	w23, #24, 41f104 <ferror@plt+0x1c834>
  41ef98:	ldrb	w0, [x19, #16]
  41ef9c:	cbnz	w0, 41f15c <ferror@plt+0x1c88c>
  41efa0:	ldrb	w0, [x22, #1160]
  41efa4:	cbz	w0, 41efb0 <ferror@plt+0x1c6e0>
  41efa8:	ldrb	w0, [x22, #16]
  41efac:	cbnz	w0, 41f168 <ferror@plt+0x1c898>
  41efb0:	ldp	x0, x1, [x19]
  41efb4:	stp	x0, x1, [sp, #128]
  41efb8:	ldr	x0, [x19, #16]
  41efbc:	str	x0, [sp, #144]
  41efc0:	mov	x1, x28
  41efc4:	add	x0, sp, #0x80
  41efc8:	bl	41d864 <ferror@plt+0x1af94>
  41efcc:	and	w0, w0, #0xff
  41efd0:	cbnz	w0, 41f174 <ferror@plt+0x1c8a4>
  41efd4:	cmp	w25, #0xa
  41efd8:	b.eq	41f124 <ferror@plt+0x1c854>  // b.none
  41efdc:	mov	w0, #0x1                   	// #1
  41efe0:	strb	w0, [x19, #16]
  41efe4:	ldp	x25, x26, [sp, #64]
  41efe8:	ldp	x27, x28, [sp, #80]
  41efec:	b	41eed8 <ferror@plt+0x1c608>
  41eff0:	ldr	x3, [x19]
  41eff4:	ldrb	w7, [x19, #16]
  41eff8:	cmp	w25, #0x2
  41effc:	b.eq	41f148 <ferror@plt+0x1c878>  // b.none
  41f000:	cmp	w25, #0x10
  41f004:	b.eq	41ef14 <ferror@plt+0x1c644>  // b.none
  41f008:	cmp	xzr, x3, lsr #61
  41f00c:	cset	w6, ne  // ne = any
  41f010:	lsl	x5, x1, #3
  41f014:	extr	x4, x3, x1, #61
  41f018:	cmp	w25, #0xa
  41f01c:	b.ne	41ef24 <ferror@plt+0x1c654>  // b.any
  41f020:	lsl	x8, x1, #1
  41f024:	lsr	x0, x1, #63
  41f028:	add	x1, x0, x3, lsl #1
  41f02c:	add	x2, x8, w2, uxtb
  41f030:	cmp	x8, x2
  41f034:	b.ls	41f03c <ferror@plt+0x1c76c>  // b.plast
  41f038:	add	x1, x1, #0x1
  41f03c:	adds	x0, x5, x2
  41f040:	str	x0, [sp, #112]
  41f044:	b.cc	41f04c <ferror@plt+0x1c77c>  // b.lo, b.ul, b.last
  41f048:	add	x1, x1, #0x1
  41f04c:	adds	x0, x1, x4
  41f050:	str	x0, [sp, #120]
  41f054:	csinc	w6, w6, wzr, cc  // cc = lo, ul, last
  41f058:	ldr	x0, [sp, #120]
  41f05c:	str	x0, [sp, #200]
  41f060:	ldr	x0, [sp, #112]
  41f064:	str	x0, [sp, #208]
  41f068:	strb	w7, [sp, #216]
  41f06c:	strb	w6, [sp, #217]
  41f070:	ldp	x0, x1, [sp, #200]
  41f074:	stp	x0, x1, [sp, #128]
  41f078:	ldr	x0, [sp, #216]
  41f07c:	str	x0, [sp, #144]
  41f080:	add	x8, sp, #0xa0
  41f084:	mov	x1, x28
  41f088:	add	x0, sp, #0x80
  41f08c:	bl	41d800 <ferror@plt+0x1af30>
  41f090:	ldr	x1, [sp, #160]
  41f094:	ldr	x0, [sp, #168]
  41f098:	str	x1, [sp, #200]
  41f09c:	str	x0, [sp, #208]
  41f0a0:	ldr	x0, [sp, #176]
  41f0a4:	str	x0, [sp, #216]
  41f0a8:	ubfx	w0, w0, #8, #8
  41f0ac:	ldr	x2, [sp, #208]
  41f0b0:	ldr	x3, [sp, #112]
  41f0b4:	cmp	x3, x2
  41f0b8:	b.eq	41f0f4 <ferror@plt+0x1c824>  // b.none
  41f0bc:	mov	w0, #0x1                   	// #1
  41f0c0:	strb	w0, [sp, #217]
  41f0c4:	ldp	x0, x1, [sp, #200]
  41f0c8:	stp	x0, x1, [x19]
  41f0cc:	ldr	x0, [sp, #216]
  41f0d0:	str	x0, [x19, #16]
  41f0d4:	ubfx	w0, w0, #8, #8
  41f0d8:	ldr	w1, [sp, #108]
  41f0dc:	orr	w0, w0, w1
  41f0e0:	str	w0, [sp, #108]
  41f0e4:	mov	x0, #0x0                   	// #0
  41f0e8:	b	41ef58 <ferror@plt+0x1c688>
  41f0ec:	mov	x1, #0x0                   	// #0
  41f0f0:	b	41f048 <ferror@plt+0x1c778>
  41f0f4:	ldr	x2, [sp, #120]
  41f0f8:	cmp	x2, x1
  41f0fc:	csinc	w0, w0, wzr, eq  // eq = none
  41f100:	b	41f0c0 <ferror@plt+0x1c7f0>
  41f104:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  41f108:	add	x2, x2, #0xf0
  41f10c:	mov	w1, #0x2                   	// #2
  41f110:	mov	x0, x22
  41f114:	bl	41c9fc <ferror@plt+0x1a12c>
  41f118:	ldp	x25, x26, [sp, #64]
  41f11c:	ldp	x27, x28, [sp, #80]
  41f120:	b	41eed8 <ferror@plt+0x1c608>
  41f124:	ldrb	w0, [x22, #1152]
  41f128:	cmp	w0, #0x0
  41f12c:	cset	w1, ne  // ne = any
  41f130:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  41f134:	add	x2, x2, #0x120
  41f138:	lsl	w1, w1, #1
  41f13c:	mov	x0, x22
  41f140:	bl	41c9fc <ferror@plt+0x1a12c>
  41f144:	b	41efdc <ferror@plt+0x1c70c>
  41f148:	cmp	x3, #0x0
  41f14c:	cset	w6, lt  // lt = tstop
  41f150:	lsl	x5, x1, #1
  41f154:	extr	x4, x3, x1, #63
  41f158:	b	41ef24 <ferror@plt+0x1c654>
  41f15c:	ldp	x25, x26, [sp, #64]
  41f160:	ldp	x27, x28, [sp, #80]
  41f164:	b	41eed8 <ferror@plt+0x1c608>
  41f168:	ldp	x25, x26, [sp, #64]
  41f16c:	ldp	x27, x28, [sp, #80]
  41f170:	b	41eed8 <ferror@plt+0x1c608>
  41f174:	ldp	x25, x26, [sp, #64]
  41f178:	ldp	x27, x28, [sp, #80]
  41f17c:	b	41eed8 <ferror@plt+0x1c608>
  41f180:	stp	x29, x30, [sp, #-48]!
  41f184:	mov	x29, sp
  41f188:	stp	x19, x20, [sp, #16]
  41f18c:	str	x21, [sp, #32]
  41f190:	mov	x20, x0
  41f194:	ldr	x0, [x0, #1096]
  41f198:	ldr	x21, [x20, #1104]
  41f19c:	sub	x21, x21, x0
  41f1a0:	asr	x19, x21, #3
  41f1a4:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
  41f1a8:	movk	x1, #0xcccd
  41f1ac:	mul	x19, x19, x1
  41f1b0:	add	x19, x19, #0xa
  41f1b4:	add	x19, x19, x19, lsl #2
  41f1b8:	lsl	x19, x19, #4
  41f1bc:	mov	x1, x19
  41f1c0:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  41f1c4:	str	x0, [x20, #1096]
  41f1c8:	add	x19, x0, x19
  41f1cc:	str	x19, [x20, #1104]
  41f1d0:	add	x0, x0, x21
  41f1d4:	ldp	x19, x20, [sp, #16]
  41f1d8:	ldr	x21, [sp, #32]
  41f1dc:	ldp	x29, x30, [sp], #48
  41f1e0:	ret
  41f1e4:	sub	sp, sp, #0x270
  41f1e8:	stp	x29, x30, [sp]
  41f1ec:	mov	x29, sp
  41f1f0:	stp	x19, x20, [sp, #16]
  41f1f4:	stp	x21, x22, [sp, #32]
  41f1f8:	stp	x23, x24, [sp, #48]
  41f1fc:	stp	x25, x26, [sp, #64]
  41f200:	stp	x27, x28, [sp, #80]
  41f204:	mov	x26, x0
  41f208:	and	w0, w1, #0xff
  41f20c:	str	w0, [sp, #212]
  41f210:	ldr	x28, [x26, #1096]
  41f214:	str	wzr, [sp, #452]
  41f218:	str	wzr, [x26, #28]
  41f21c:	str	xzr, [x26, #432]
  41f220:	mov	w0, #0x16                  	// #22
  41f224:	str	w0, [x28, #36]
  41f228:	mov	w0, #0x1                   	// #1
  41f22c:	str	w0, [sp, #128]
  41f230:	str	wzr, [sp, #196]
  41f234:	str	wzr, [sp, #116]
  41f238:	add	x0, sp, #0x120
  41f23c:	str	x0, [sp, #216]
  41f240:	add	x1, sp, #0x100
  41f244:	str	x1, [sp, #136]
  41f248:	str	x0, [sp, #176]
  41f24c:	mov	x27, x26
  41f250:	b	4207fc <ferror@plt+0x1df2c>
  41f254:	cmp	w0, #0x35
  41f258:	b.eq	420d40 <ferror@plt+0x1e470>  // b.none
  41f25c:	cmp	w0, #0x35
  41f260:	b.ls	41f284 <ferror@plt+0x1c9b4>  // b.plast
  41f264:	sub	w1, w0, #0x37
  41f268:	and	w1, w1, #0xff
  41f26c:	cmp	w1, #0x5
  41f270:	b.hi	41f7d0 <ferror@plt+0x1cf00>  // b.pmore
  41f274:	ldr	w1, [sp, #128]
  41f278:	cbnz	w1, 41f2e8 <ferror@plt+0x1ca18>
  41f27c:	mov	x26, x27
  41f280:	b	41f298 <ferror@plt+0x1c9c8>
  41f284:	cmp	w0, #0x25
  41f288:	b.ne	41f7c0 <ferror@plt+0x1cef0>  // b.any
  41f28c:	ldr	w0, [sp, #128]
  41f290:	cbnz	w0, 420d50 <ferror@plt+0x1e480>
  41f294:	mov	x26, x27
  41f298:	ldr	x1, [sp, #120]
  41f29c:	mov	x0, x26
  41f2a0:	bl	427e40 <ferror@plt+0x25570>
  41f2a4:	mov	x5, x0
  41f2a8:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a094>
  41f2ac:	add	x4, x4, #0x168
  41f2b0:	mov	w3, #0x0                   	// #0
  41f2b4:	ldr	w2, [sp, #132]
  41f2b8:	mov	w1, #0x3                   	// #3
  41f2bc:	mov	x0, x26
  41f2c0:	bl	41cbe8 <ferror@plt+0x1a318>
  41f2c4:	mov	w0, #0x0                   	// #0
  41f2c8:	ldp	x19, x20, [sp, #16]
  41f2cc:	ldp	x21, x22, [sp, #32]
  41f2d0:	ldp	x23, x24, [sp, #48]
  41f2d4:	ldp	x25, x26, [sp, #64]
  41f2d8:	ldp	x27, x28, [sp, #80]
  41f2dc:	ldp	x29, x30, [sp]
  41f2e0:	add	sp, sp, #0x270
  41f2e4:	ret
  41f2e8:	str	wzr, [sp, #400]
  41f2ec:	cmp	w0, #0x37
  41f2f0:	b.eq	41f40c <ferror@plt+0x1cb3c>  // b.none
  41f2f4:	b.ls	41f390 <ferror@plt+0x1cac0>  // b.plast
  41f2f8:	sub	w0, w0, #0x38
  41f2fc:	and	w0, w0, #0xff
  41f300:	cmp	w0, #0x4
  41f304:	b.hi	41f6e0 <ferror@plt+0x1ce10>  // b.pmore
  41f308:	add	x3, sp, #0x190
  41f30c:	add	x2, sp, #0x178
  41f310:	ldr	x1, [sp, #120]
  41f314:	mov	x0, x27
  41f318:	bl	41894c <ferror@plt+0x1607c>
  41f31c:	mov	w1, w0
  41f320:	ldr	w2, [sp, #400]
  41f324:	cbnz	w2, 41f708 <ferror@plt+0x1ce38>
  41f328:	mov	x3, #0x0                   	// #0
  41f32c:	tbz	w0, #31, 420d84 <ferror@plt+0x1e4b4>
  41f330:	mov	x0, #0xffffffffffffffff    	// #-1
  41f334:	str	x0, [sp, #424]
  41f338:	orr	x1, x1, #0xffffffff00000000
  41f33c:	str	x1, [sp, #432]
  41f340:	strb	wzr, [sp, #440]
  41f344:	strb	wzr, [sp, #441]
  41f348:	add	x0, sp, #0x280
  41f34c:	ldp	x0, x1, [x0, #-216]
  41f350:	stp	x0, x1, [sp, #256]
  41f354:	ldr	x0, [sp, #440]
  41f358:	str	x0, [sp, #272]
  41f35c:	ldr	x8, [sp, #216]
  41f360:	ldr	x1, [x27, #1208]
  41f364:	ldr	x0, [sp, #136]
  41f368:	bl	41d800 <ferror@plt+0x1af30>
  41f36c:	ldr	x3, [sp, #288]
  41f370:	ldr	x0, [sp, #296]
  41f374:	str	x3, [sp, #424]
  41f378:	str	x0, [sp, #432]
  41f37c:	ldr	x2, [sp, #304]
  41f380:	str	x2, [sp, #440]
  41f384:	mov	x1, x0
  41f388:	ubfx	w2, w2, #8, #8
  41f38c:	b	420d84 <ferror@plt+0x1e4b4>
  41f390:	cmp	w0, #0x25
  41f394:	b.eq	420d54 <ferror@plt+0x1e484>  // b.none
  41f398:	cmp	w0, #0x35
  41f39c:	b.ne	41f6e0 <ferror@plt+0x1ce10>  // b.any
  41f3a0:	ldr	x0, [sp, #120]
  41f3a4:	ldr	x0, [x0, #8]
  41f3a8:	ldr	x1, [x27, #1248]
  41f3ac:	cmp	x0, x1
  41f3b0:	b.eq	41f4d8 <ferror@plt+0x1cc08>  // b.none
  41f3b4:	ldr	x1, [x27, #1288]
  41f3b8:	cmp	x0, x1
  41f3bc:	b.eq	41f614 <ferror@plt+0x1cd44>  // b.none
  41f3c0:	ldr	x1, [x27, #1296]
  41f3c4:	cmp	x0, x1
  41f3c8:	b.eq	41f638 <ferror@plt+0x1cd68>  // b.none
  41f3cc:	ldrb	w1, [x27, #1120]
  41f3d0:	cbz	w1, 41f3ec <ferror@plt+0x1cb1c>
  41f3d4:	ldr	x1, [x27, #1256]
  41f3d8:	cmp	x0, x1
  41f3dc:	b.eq	41f65c <ferror@plt+0x1cd8c>  // b.none
  41f3e0:	ldr	x2, [x27, #1264]
  41f3e4:	cmp	x0, x2
  41f3e8:	b.eq	41f65c <ferror@plt+0x1cd8c>  // b.none
  41f3ec:	ldrb	w2, [x27, #1149]
  41f3f0:	cbz	w2, 41f714 <ferror@plt+0x1ce44>
  41f3f4:	ldr	w1, [x27, #28]
  41f3f8:	cbz	w1, 41f670 <ferror@plt+0x1cda0>
  41f3fc:	mov	w2, #0x0                   	// #0
  41f400:	mov	x1, #0x0                   	// #0
  41f404:	mov	x3, #0x0                   	// #0
  41f408:	b	420d84 <ferror@plt+0x1e4b4>
  41f40c:	ldr	w3, [sp, #132]
  41f410:	mov	x2, #0x0                   	// #0
  41f414:	ldr	x1, [sp, #120]
  41f418:	mov	x0, x27
  41f41c:	bl	41e3a0 <ferror@plt+0x1bad0>
  41f420:	str	w0, [sp, #376]
  41f424:	tbnz	w0, #24, 41f46c <ferror@plt+0x1cb9c>
  41f428:	ldr	w2, [sp, #376]
  41f42c:	and	w0, w2, #0xf
  41f430:	cmp	w0, #0x1
  41f434:	b.eq	41f484 <ferror@plt+0x1cbb4>  // b.none
  41f438:	cmp	w0, #0x2
  41f43c:	b.ne	41f6f8 <ferror@plt+0x1ce28>  // b.any
  41f440:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a094>
  41f444:	add	x4, x4, #0x1c8
  41f448:	mov	w3, #0x0                   	// #0
  41f44c:	ldr	w2, [sp, #132]
  41f450:	mov	w1, #0x3                   	// #3
  41f454:	mov	x0, x27
  41f458:	bl	41cbe8 <ferror@plt+0x1a318>
  41f45c:	mov	w2, #0x0                   	// #0
  41f460:	mov	x1, #0x0                   	// #0
  41f464:	mov	x3, #0x0                   	// #0
  41f468:	b	420d84 <ferror@plt+0x1e4b4>
  41f46c:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  41f470:	add	x2, x2, #0x198
  41f474:	mov	w1, #0x3                   	// #3
  41f478:	mov	x0, x27
  41f47c:	bl	41c9fc <ferror@plt+0x1a12c>
  41f480:	b	41f428 <ferror@plt+0x1cb58>
  41f484:	tbnz	w2, #13, 41f4ac <ferror@plt+0x1cbdc>
  41f488:	add	x8, sp, #0x1c8
  41f48c:	ldr	x1, [sp, #120]
  41f490:	mov	x0, x27
  41f494:	bl	41edf8 <ferror@plt+0x1c528>
  41f498:	ldr	x3, [sp, #456]
  41f49c:	ldr	x1, [sp, #464]
  41f4a0:	ldrb	w0, [sp, #472]
  41f4a4:	ldrb	w2, [sp, #473]
  41f4a8:	b	420da8 <ferror@plt+0x1e4d8>
  41f4ac:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a094>
  41f4b0:	add	x4, x4, #0x1f8
  41f4b4:	mov	w3, #0x0                   	// #0
  41f4b8:	ldr	w2, [sp, #132]
  41f4bc:	mov	w1, #0x3                   	// #3
  41f4c0:	mov	x0, x27
  41f4c4:	bl	41cbe8 <ferror@plt+0x1a318>
  41f4c8:	mov	w2, #0x0                   	// #0
  41f4cc:	mov	x1, #0x0                   	// #0
  41f4d0:	mov	x3, #0x0                   	// #0
  41f4d4:	b	420d84 <ferror@plt+0x1e4b4>
  41f4d8:	ldr	x20, [x27, #136]
  41f4dc:	ldrb	w0, [x27, #24]
  41f4e0:	add	w0, w0, #0x1
  41f4e4:	strb	w0, [x27, #24]
  41f4e8:	mov	x0, x27
  41f4ec:	bl	42ea88 <ferror@plt+0x2c1b8>
  41f4f0:	mov	x19, x0
  41f4f4:	ldrb	w0, [x0, #4]
  41f4f8:	cmp	w0, #0x14
  41f4fc:	b.eq	41f538 <ferror@plt+0x1cc68>  // b.none
  41f500:	cmp	w0, #0x35
  41f504:	b.eq	420cc4 <ferror@plt+0x1e3f4>  // b.none
  41f508:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  41f50c:	add	x2, x2, #0x248
  41f510:	mov	w1, #0x3                   	// #3
  41f514:	mov	x0, x27
  41f518:	bl	41c9fc <ferror@plt+0x1a12c>
  41f51c:	ldrh	w0, [x19, #6]
  41f520:	tbnz	w0, #4, 41f580 <ferror@plt+0x1ccb0>
  41f524:	ldrb	w0, [x27, #24]
  41f528:	sub	w0, w0, #0x1
  41f52c:	strb	w0, [x27, #24]
  41f530:	mov	w1, #0x0                   	// #0
  41f534:	b	420d24 <ferror@plt+0x1e454>
  41f538:	mov	x0, x27
  41f53c:	bl	42ea88 <ferror@plt+0x2c1b8>
  41f540:	mov	x19, x0
  41f544:	ldrb	w0, [x0, #4]
  41f548:	cmp	w0, #0x35
  41f54c:	b.ne	41f508 <ferror@plt+0x1cc38>  // b.any
  41f550:	ldr	x19, [x19, #8]
  41f554:	mov	x0, x27
  41f558:	bl	42ea88 <ferror@plt+0x2c1b8>
  41f55c:	ldrb	w0, [x0, #4]
  41f560:	cmp	w0, #0x15
  41f564:	b.eq	420cc8 <ferror@plt+0x1e3f8>  // b.none
  41f568:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  41f56c:	add	x2, x2, #0x228
  41f570:	mov	w1, #0x3                   	// #3
  41f574:	mov	x0, x27
  41f578:	bl	41c9fc <ferror@plt+0x1a12c>
  41f57c:	b	41f524 <ferror@plt+0x1cc54>
  41f580:	strh	wzr, [sp, #430]
  41f584:	ldrb	w0, [x19, #4]
  41f588:	strb	w0, [sp, #428]
  41f58c:	mov	x1, x19
  41f590:	mov	x0, x27
  41f594:	bl	427e40 <ferror@plt+0x25570>
  41f598:	mov	x19, x0
  41f59c:	add	x1, sp, #0x1a8
  41f5a0:	mov	x0, x27
  41f5a4:	bl	427e40 <ferror@plt+0x25570>
  41f5a8:	mov	x4, x0
  41f5ac:	mov	x3, x19
  41f5b0:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  41f5b4:	add	x2, x2, #0x278
  41f5b8:	mov	w1, #0x3                   	// #3
  41f5bc:	mov	x0, x27
  41f5c0:	bl	41c9fc <ferror@plt+0x1a12c>
  41f5c4:	b	41f524 <ferror@plt+0x1cc54>
  41f5c8:	add	x0, x27, #0x50
  41f5cc:	cmp	x20, x0
  41f5d0:	b.ne	420cd8 <ferror@plt+0x1e408>  // b.any
  41f5d4:	b	420ce0 <ferror@plt+0x1e410>
  41f5d8:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  41f5dc:	add	x2, x2, #0x2a8
  41f5e0:	mov	w1, #0x18                  	// #24
  41f5e4:	mov	x0, x27
  41f5e8:	bl	41caf0 <ferror@plt+0x1a220>
  41f5ec:	b	420ce0 <ferror@plt+0x1e410>
  41f5f0:	ldr	x1, [x19, #24]
  41f5f4:	ldrb	w0, [x1, #19]
  41f5f8:	orr	w0, w0, #0x20
  41f5fc:	strb	w0, [x1, #19]
  41f600:	b	420cf0 <ferror@plt+0x1e420>
  41f604:	mov	x1, x19
  41f608:	mov	x0, x27
  41f60c:	bl	42ccb4 <ferror@plt+0x2a3e4>
  41f610:	b	420cf8 <ferror@plt+0x1e428>
  41f614:	add	x8, sp, #0x1c8
  41f618:	mov	w1, #0x0                   	// #0
  41f61c:	mov	x0, x27
  41f620:	bl	41e00c <ferror@plt+0x1b73c>
  41f624:	ldr	x3, [sp, #456]
  41f628:	ldr	x1, [sp, #464]
  41f62c:	ldrb	w0, [sp, #472]
  41f630:	ldrb	w2, [sp, #473]
  41f634:	b	420da8 <ferror@plt+0x1e4d8>
  41f638:	add	x8, sp, #0x1c8
  41f63c:	mov	w1, #0x1                   	// #1
  41f640:	mov	x0, x27
  41f644:	bl	41e00c <ferror@plt+0x1b73c>
  41f648:	ldr	x3, [sp, #456]
  41f64c:	ldr	x1, [sp, #464]
  41f650:	ldrb	w0, [sp, #472]
  41f654:	ldrb	w2, [sp, #473]
  41f658:	b	420da8 <ferror@plt+0x1e4d8>
  41f65c:	cmp	x0, x1
  41f660:	cset	x1, eq  // eq = none
  41f664:	mov	w2, #0x0                   	// #0
  41f668:	mov	x3, #0x0                   	// #0
  41f66c:	b	420d84 <ferror@plt+0x1e4b4>
  41f670:	ldr	x5, [x0]
  41f674:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a094>
  41f678:	add	x4, x4, #0x2d8
  41f67c:	mov	w3, #0x0                   	// #0
  41f680:	ldr	w2, [sp, #132]
  41f684:	mov	w1, #0xd                   	// #13
  41f688:	mov	x0, x27
  41f68c:	bl	41cc60 <ferror@plt+0x1a390>
  41f690:	mov	w2, #0x0                   	// #0
  41f694:	mov	x1, #0x0                   	// #0
  41f698:	mov	x3, #0x0                   	// #0
  41f69c:	b	420d84 <ferror@plt+0x1e4b4>
  41f6a0:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a094>
  41f6a4:	add	x4, x4, #0x300
  41f6a8:	mov	w3, #0x0                   	// #0
  41f6ac:	ldr	w2, [sp, #132]
  41f6b0:	mov	w1, #0x2                   	// #2
  41f6b4:	mov	x0, x27
  41f6b8:	bl	41cbe8 <ferror@plt+0x1a318>
  41f6bc:	b	420d6c <ferror@plt+0x1e49c>
  41f6c0:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a094>
  41f6c4:	add	x4, x4, #0x320
  41f6c8:	mov	w3, #0x0                   	// #0
  41f6cc:	ldr	w2, [sp, #132]
  41f6d0:	mov	w1, #0x1                   	// #1
  41f6d4:	mov	x0, x27
  41f6d8:	bl	41cc60 <ferror@plt+0x1a390>
  41f6dc:	b	420d6c <ferror@plt+0x1e49c>
  41f6e0:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  41f6e4:	add	x2, x2, #0x348
  41f6e8:	mov	w1, #0x4ad                 	// #1197
  41f6ec:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a094>
  41f6f0:	add	x0, x0, #0x358
  41f6f4:	bl	4062a0 <ferror@plt+0x39d0>
  41f6f8:	mov	w2, #0x0                   	// #0
  41f6fc:	mov	x1, #0x0                   	// #0
  41f700:	mov	x3, #0x0                   	// #0
  41f704:	b	420d84 <ferror@plt+0x1e4b4>
  41f708:	mov	w2, #0x0                   	// #0
  41f70c:	mov	x3, #0x0                   	// #0
  41f710:	b	420d84 <ferror@plt+0x1e4b4>
  41f714:	mov	x1, #0x0                   	// #0
  41f718:	mov	x3, #0x0                   	// #0
  41f71c:	b	420d84 <ferror@plt+0x1e4b4>
  41f720:	ldr	w0, [sp, #116]
  41f724:	cmp	w0, #0x1
  41f728:	cset	w0, eq  // eq = none
  41f72c:	str	w0, [sp, #196]
  41f730:	mov	w26, #0x1                   	// #1
  41f734:	mov	w3, w26
  41f738:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a094>
  41f73c:	add	x0, x0, #0x610
  41f740:	add	x0, x0, w26, sxtw #1
  41f744:	ldrb	w0, [x0, #1]
  41f748:	tbz	w0, #0, 41f80c <ferror@plt+0x1cf3c>
  41f74c:	ldr	w1, [sp, #128]
  41f750:	cbz	w1, 41f804 <ferror@plt+0x1cf34>
  41f754:	ldr	w1, [x28, #36]
  41f758:	sub	w2, w1, #0x1
  41f75c:	cmp	w2, #0x1b
  41f760:	b.hi	41f904 <ferror@plt+0x1d034>  // b.pmore
  41f764:	cmp	w26, #0x14
  41f768:	b.eq	4207d0 <ferror@plt+0x1df00>  // b.none
  41f76c:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  41f770:	add	x2, x2, #0x610
  41f774:	sbfiz	x3, x3, #1, #32
  41f778:	ldrb	w3, [x2, x3]
  41f77c:	ubfx	x0, x0, #1, #1
  41f780:	sub	w3, w3, w0
  41f784:	str	w3, [sp, #152]
  41f788:	mov	w0, w1
  41f78c:	sbfiz	x1, x1, #1, #32
  41f790:	ldrb	w1, [x2, x1]
  41f794:	cmp	w3, w1
  41f798:	b.cs	4208c0 <ferror@plt+0x1dff0>  // b.hs, b.nlast
  41f79c:	str	x2, [sp, #104]
  41f7a0:	str	w26, [sp, #156]
  41f7a4:	mov	x26, x27
  41f7a8:	b	420444 <ferror@plt+0x1db74>
  41f7ac:	ldr	w0, [sp, #128]
  41f7b0:	mov	w26, #0x5                   	// #5
  41f7b4:	cbz	w0, 420c1c <ferror@plt+0x1e34c>
  41f7b8:	mov	w26, #0x1c                  	// #28
  41f7bc:	b	420854 <ferror@plt+0x1df84>
  41f7c0:	mov	w26, w0
  41f7c4:	sub	w0, w0, #0x1
  41f7c8:	cmp	w0, #0x19
  41f7cc:	b.ls	41f734 <ferror@plt+0x1ce64>  // b.plast
  41f7d0:	ldr	x1, [sp, #120]
  41f7d4:	mov	x0, x27
  41f7d8:	bl	427e40 <ferror@plt+0x25570>
  41f7dc:	mov	x5, x0
  41f7e0:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a094>
  41f7e4:	add	x4, x4, #0x370
  41f7e8:	mov	w3, #0x0                   	// #0
  41f7ec:	ldr	w2, [sp, #132]
  41f7f0:	mov	w1, #0x3                   	// #3
  41f7f4:	mov	x0, x27
  41f7f8:	bl	41cbe8 <ferror@plt+0x1a318>
  41f7fc:	mov	w0, #0x0                   	// #0
  41f800:	b	41f2c8 <ferror@plt+0x1c9f8>
  41f804:	mov	x26, x27
  41f808:	b	420c90 <ferror@plt+0x1e3c0>
  41f80c:	ldr	w1, [sp, #128]
  41f810:	cbz	w1, 41f754 <ferror@plt+0x1ce84>
  41f814:	cmp	w26, #0x15
  41f818:	b.ne	41f894 <ferror@plt+0x1cfc4>  // b.any
  41f81c:	ldr	w1, [x28, #36]
  41f820:	cmp	w1, #0x14
  41f824:	b.eq	41f870 <ferror@plt+0x1cfa0>  // b.none
  41f828:	ldr	w1, [x28, #36]
  41f82c:	and	w1, w1, #0xfffffffd
  41f830:	cmp	w1, #0x14
  41f834:	b.eq	41f754 <ferror@plt+0x1ce84>  // b.none
  41f838:	mov	x26, x27
  41f83c:	ldr	x1, [x28]
  41f840:	mov	x0, x26
  41f844:	bl	427e40 <ferror@plt+0x25570>
  41f848:	mov	x5, x0
  41f84c:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a094>
  41f850:	add	x4, x4, #0x3e8
  41f854:	mov	w3, #0x0                   	// #0
  41f858:	ldr	w2, [sp, #132]
  41f85c:	mov	w1, #0x3                   	// #3
  41f860:	mov	x0, x26
  41f864:	bl	41cbe8 <ferror@plt+0x1a318>
  41f868:	mov	w0, #0x0                   	// #0
  41f86c:	b	41f2c8 <ferror@plt+0x1c9f8>
  41f870:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a094>
  41f874:	add	x4, x4, #0x3a8
  41f878:	mov	w3, #0x0                   	// #0
  41f87c:	ldr	w2, [sp, #132]
  41f880:	mov	w1, #0x3                   	// #3
  41f884:	mov	x0, x27
  41f888:	bl	41cbe8 <ferror@plt+0x1a318>
  41f88c:	mov	w0, #0x0                   	// #0
  41f890:	b	41f2c8 <ferror@plt+0x1c9f8>
  41f894:	cmp	w26, #0x16
  41f898:	b.ne	420c3c <ferror@plt+0x1e36c>  // b.any
  41f89c:	ldr	w1, [x28, #36]
  41f8a0:	cmp	w1, #0x16
  41f8a4:	b.eq	41f8bc <ferror@plt+0x1cfec>  // b.none
  41f8a8:	and	w1, w1, #0xfffffffd
  41f8ac:	cmp	w1, #0x14
  41f8b0:	b.eq	42086c <ferror@plt+0x1df9c>  // b.none
  41f8b4:	mov	x26, x27
  41f8b8:	b	41f83c <ferror@plt+0x1cf6c>
  41f8bc:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a094>
  41f8c0:	add	x0, x0, #0x160
  41f8c4:	adrp	x5, 461000 <_obstack_memory_used@@Base+0x1a094>
  41f8c8:	add	x5, x5, #0x158
  41f8cc:	ldr	w1, [sp, #212]
  41f8d0:	cmp	w1, #0x0
  41f8d4:	csel	x5, x5, x0, ne  // ne = any
  41f8d8:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a094>
  41f8dc:	add	x4, x4, #0x3d0
  41f8e0:	mov	w3, #0x0                   	// #0
  41f8e4:	ldr	w2, [sp, #132]
  41f8e8:	mov	w1, #0x3                   	// #3
  41f8ec:	mov	x0, x27
  41f8f0:	bl	41cbe8 <ferror@plt+0x1a318>
  41f8f4:	mov	w0, #0x0                   	// #0
  41f8f8:	b	41f2c8 <ferror@plt+0x1c9f8>
  41f8fc:	mov	x26, x27
  41f900:	b	41f83c <ferror@plt+0x1cf6c>
  41f904:	mov	x26, x27
  41f908:	ldr	w3, [x28, #36]
  41f90c:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  41f910:	add	x2, x2, #0x438
  41f914:	mov	w1, #0x4                   	// #4
  41f918:	mov	x0, x26
  41f91c:	bl	41c9fc <ferror@plt+0x1a12c>
  41f920:	mov	w0, #0x0                   	// #0
  41f924:	b	41f2c8 <ferror@plt+0x1c9f8>
  41f928:	ldrb	w0, [x28, #24]
  41f92c:	ldurb	w1, [x28, #-16]
  41f930:	cmp	w1, w0
  41f934:	b.eq	42045c <ferror@plt+0x1db8c>  // b.none
  41f938:	cbz	w0, 41f994 <ferror@plt+0x1d0c4>
  41f93c:	ldp	x0, x1, [x28, #-32]
  41f940:	stp	x0, x1, [sp, #256]
  41f944:	ldur	x0, [x28, #-16]
  41f948:	str	x0, [sp, #272]
  41f94c:	ldr	x1, [x26, #1208]
  41f950:	ldr	x0, [sp, #136]
  41f954:	bl	41d864 <ferror@plt+0x1af94>
  41f958:	and	w0, w0, #0xff
  41f95c:	cbnz	w0, 42045c <ferror@plt+0x1db8c>
  41f960:	ldur	w19, [x28, #-8]
  41f964:	ldr	x1, [x28]
  41f968:	mov	x0, x26
  41f96c:	bl	427e40 <ferror@plt+0x25570>
  41f970:	mov	x5, x0
  41f974:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a094>
  41f978:	add	x4, x4, #0x458
  41f97c:	mov	w3, #0x0                   	// #0
  41f980:	mov	w2, w19
  41f984:	mov	w1, #0x0                   	// #0
  41f988:	mov	x0, x26
  41f98c:	bl	41cbe8 <ferror@plt+0x1a318>
  41f990:	b	42045c <ferror@plt+0x1db8c>
  41f994:	ldp	x0, x1, [x28, #8]
  41f998:	stp	x0, x1, [sp, #256]
  41f99c:	ldr	x0, [x28, #24]
  41f9a0:	str	x0, [sp, #272]
  41f9a4:	ldr	x1, [x26, #1208]
  41f9a8:	ldr	x0, [sp, #136]
  41f9ac:	bl	41d864 <ferror@plt+0x1af94>
  41f9b0:	and	w0, w0, #0xff
  41f9b4:	cbnz	w0, 42045c <ferror@plt+0x1db8c>
  41f9b8:	ldr	w19, [x28, #32]
  41f9bc:	ldr	x1, [x28]
  41f9c0:	mov	x0, x26
  41f9c4:	bl	427e40 <ferror@plt+0x25570>
  41f9c8:	mov	x5, x0
  41f9cc:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a094>
  41f9d0:	add	x4, x4, #0x490
  41f9d4:	mov	w3, #0x0                   	// #0
  41f9d8:	mov	w2, w19
  41f9dc:	mov	w1, #0x0                   	// #0
  41f9e0:	mov	x0, x26
  41f9e4:	bl	41cbe8 <ferror@plt+0x1a318>
  41f9e8:	b	42045c <ferror@plt+0x1db8c>
  41f9ec:	ldp	x0, x1, [x28, #8]
  41f9f0:	add	x2, sp, #0x280
  41f9f4:	stp	x0, x1, [x2, #-216]
  41f9f8:	ldr	x0, [x28, #24]
  41f9fc:	str	x0, [sp, #440]
  41fa00:	ldr	x19, [x28, #8]
  41fa04:	ldr	x20, [x28, #16]
  41fa08:	ldrb	w22, [x28, #24]
  41fa0c:	ldrb	w0, [x28, #25]
  41fa10:	cmp	w21, #0x1b
  41fa14:	b.eq	41fa44 <ferror@plt+0x1d174>  // b.none
  41fa18:	cmp	w21, #0x1c
  41fa1c:	b.eq	41fa74 <ferror@plt+0x1d1a4>  // b.none
  41fa20:	cmp	w21, #0xe
  41fa24:	b.eq	41fb10 <ferror@plt+0x1d240>  // b.none
  41fa28:	orr	x19, x19, x20
  41fa2c:	cmp	x19, #0x0
  41fa30:	cset	x20, eq  // eq = none
  41fa34:	mov	w0, #0x0                   	// #0
  41fa38:	mov	w22, #0x0                   	// #0
  41fa3c:	mov	x19, #0x0                   	// #0
  41fa40:	b	41facc <ferror@plt+0x1d1fc>
  41fa44:	ldrb	w0, [x26, #1138]
  41fa48:	cbz	w0, 41facc <ferror@plt+0x1d1fc>
  41fa4c:	ldr	w1, [x26, #28]
  41fa50:	mov	w0, #0x0                   	// #0
  41fa54:	cbnz	w1, 41facc <ferror@plt+0x1d1fc>
  41fa58:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  41fa5c:	add	x2, x2, #0x4c8
  41fa60:	mov	w1, #0x6                   	// #6
  41fa64:	mov	x0, x26
  41fa68:	bl	41ca74 <ferror@plt+0x1a1a4>
  41fa6c:	mov	w0, #0x0                   	// #0
  41fa70:	b	41facc <ferror@plt+0x1d1fc>
  41fa74:	str	x19, [sp, #424]
  41fa78:	str	x20, [sp, #432]
  41fa7c:	strb	w22, [sp, #440]
  41fa80:	strb	w0, [sp, #441]
  41fa84:	add	x0, sp, #0x280
  41fa88:	ldp	x0, x1, [x0, #-216]
  41fa8c:	stp	x0, x1, [sp, #288]
  41fa90:	ldr	x0, [sp, #440]
  41fa94:	str	x0, [sp, #304]
  41fa98:	ldr	x8, [sp, #136]
  41fa9c:	ldr	x1, [x26, #1208]
  41faa0:	ldr	x0, [sp, #176]
  41faa4:	bl	41d89c <ferror@plt+0x1afcc>
  41faa8:	ldr	x19, [sp, #256]
  41faac:	ldr	x0, [sp, #264]
  41fab0:	str	x19, [sp, #424]
  41fab4:	str	x0, [sp, #432]
  41fab8:	ldr	x0, [sp, #272]
  41fabc:	str	x0, [sp, #440]
  41fac0:	ldr	x20, [sp, #432]
  41fac4:	and	w22, w0, #0xff
  41fac8:	ubfx	w0, w0, #8, #8
  41facc:	str	x19, [sp, #424]
  41fad0:	str	x20, [sp, #432]
  41fad4:	strb	w22, [sp, #440]
  41fad8:	strb	w0, [sp, #441]
  41fadc:	ldr	x1, [sp, #440]
  41fae0:	str	x1, [sp, #496]
  41fae4:	str	x19, [sp, #480]
  41fae8:	str	x20, [sp, #488]
  41faec:	strb	w22, [sp, #496]
  41faf0:	strb	w0, [sp, #497]
  41faf4:	ldp	x0, x1, [sp, #480]
  41faf8:	stp	x0, x1, [x28, #-32]
  41fafc:	ldr	x0, [sp, #496]
  41fb00:	stur	x0, [x28, #-16]
  41fb04:	ldr	w0, [x28, #32]
  41fb08:	stur	w0, [x28, #-8]
  41fb0c:	b	420410 <ferror@plt+0x1db40>
  41fb10:	mvn	x19, x19
  41fb14:	str	x19, [sp, #424]
  41fb18:	mvn	x20, x20
  41fb1c:	str	x20, [sp, #432]
  41fb20:	strb	w22, [sp, #440]
  41fb24:	strb	w0, [sp, #441]
  41fb28:	add	x0, sp, #0x280
  41fb2c:	ldp	x0, x1, [x0, #-216]
  41fb30:	stp	x0, x1, [sp, #288]
  41fb34:	ldr	x0, [sp, #440]
  41fb38:	str	x0, [sp, #304]
  41fb3c:	ldr	x8, [sp, #136]
  41fb40:	ldr	x1, [x26, #1208]
  41fb44:	ldr	x0, [sp, #176]
  41fb48:	bl	41d800 <ferror@plt+0x1af30>
  41fb4c:	ldr	x19, [sp, #256]
  41fb50:	ldr	x0, [sp, #264]
  41fb54:	str	x19, [sp, #424]
  41fb58:	str	x0, [sp, #432]
  41fb5c:	ldr	x22, [sp, #272]
  41fb60:	str	x22, [sp, #440]
  41fb64:	mov	x20, x0
  41fb68:	and	w22, w22, #0xff
  41fb6c:	mov	w0, #0x0                   	// #0
  41fb70:	b	41facc <ferror@plt+0x1d1fc>
  41fb74:	ldp	x0, x1, [x28, #-32]
  41fb78:	stp	x0, x1, [sp, #288]
  41fb7c:	ldur	x0, [x28, #-16]
  41fb80:	str	x0, [sp, #304]
  41fb84:	ldp	x0, x1, [x28, #8]
  41fb88:	stp	x0, x1, [sp, #224]
  41fb8c:	ldr	x0, [x28, #24]
  41fb90:	str	x0, [sp, #240]
  41fb94:	ldr	x8, [sp, #136]
  41fb98:	mov	w3, w21
  41fb9c:	add	x2, sp, #0xe0
  41fba0:	ldr	x1, [sp, #176]
  41fba4:	mov	x0, x26
  41fba8:	bl	41dc5c <ferror@plt+0x1b38c>
  41fbac:	ldp	x0, x1, [sp, #256]
  41fbb0:	stp	x0, x1, [x28, #-32]
  41fbb4:	ldr	x0, [sp, #272]
  41fbb8:	stur	x0, [x28, #-16]
  41fbbc:	ldr	w0, [x28, #32]
  41fbc0:	stur	w0, [x28, #-8]
  41fbc4:	b	420410 <ferror@plt+0x1db40>
  41fbc8:	ldur	x0, [x28, #-16]
  41fbcc:	str	x0, [sp, #368]
  41fbd0:	ldur	x22, [x28, #-32]
  41fbd4:	ldur	x24, [x28, #-24]
  41fbd8:	ldurb	w0, [x28, #-16]
  41fbdc:	ldurb	w2, [x28, #-15]
  41fbe0:	ldp	x4, x5, [x28, #8]
  41fbe4:	add	x1, sp, #0x200
  41fbe8:	stp	x4, x5, [x1, #-136]
  41fbec:	ldr	x1, [x28, #24]
  41fbf0:	str	x1, [sp, #392]
  41fbf4:	ldr	x20, [x28, #8]
  41fbf8:	ldr	x23, [x28, #16]
  41fbfc:	ldr	x25, [x26, #1208]
  41fc00:	str	x22, [sp, #352]
  41fc04:	str	x24, [sp, #360]
  41fc08:	strb	w0, [sp, #368]
  41fc0c:	strb	w2, [sp, #369]
  41fc10:	ldp	x2, x3, [sp, #352]
  41fc14:	stp	x2, x3, [sp, #400]
  41fc18:	ldr	x2, [sp, #368]
  41fc1c:	str	x2, [sp, #416]
  41fc20:	str	x20, [sp, #376]
  41fc24:	str	x23, [sp, #384]
  41fc28:	add	x2, sp, #0x200
  41fc2c:	ldp	x2, x3, [x2, #-136]
  41fc30:	add	x4, sp, #0x280
  41fc34:	stp	x2, x3, [x4, #-216]
  41fc38:	str	x1, [sp, #440]
  41fc3c:	cbnz	w0, 41fc98 <ferror@plt+0x1d3c8>
  41fc40:	ldrb	w27, [sp, #392]
  41fc44:	cbnz	w27, 41fc98 <ferror@plt+0x1d3c8>
  41fc48:	strb	w0, [sp, #416]
  41fc4c:	ldp	x0, x1, [sp, #400]
  41fc50:	stp	x0, x1, [sp, #224]
  41fc54:	ldr	x0, [sp, #416]
  41fc58:	str	x0, [sp, #240]
  41fc5c:	mov	x1, x25
  41fc60:	add	x0, sp, #0xe0
  41fc64:	bl	41d864 <ferror@plt+0x1af94>
  41fc68:	and	w19, w0, #0xff
  41fc6c:	strb	w27, [sp, #440]
  41fc70:	add	x0, sp, #0x280
  41fc74:	ldp	x0, x1, [x0, #-216]
  41fc78:	stp	x0, x1, [sp, #224]
  41fc7c:	ldr	x0, [sp, #440]
  41fc80:	str	x0, [sp, #240]
  41fc84:	mov	x1, x25
  41fc88:	add	x0, sp, #0xe0
  41fc8c:	bl	41d864 <ferror@plt+0x1af94>
  41fc90:	cmp	w19, w0, uxtb
  41fc94:	b.ne	41fcb4 <ferror@plt+0x1d3e4>  // b.any
  41fc98:	mov	w19, #0x1                   	// #1
  41fc9c:	cmp	x22, x20
  41fca0:	b.hi	41fcb4 <ferror@plt+0x1d3e4>  // b.pmore
  41fca4:	cset	w19, eq  // eq = none
  41fca8:	cmp	x24, x23
  41fcac:	cset	w0, cs  // cs = hs, nlast
  41fcb0:	and	w19, w19, w0
  41fcb4:	cmp	w21, #0x19
  41fcb8:	b.eq	41fcec <ferror@plt+0x1d41c>  // b.none
  41fcbc:	cmp	w21, #0x3
  41fcc0:	b.eq	41fd38 <ferror@plt+0x1d468>  // b.none
  41fcc4:	cmp	w21, #0x2
  41fcc8:	b.eq	41fd44 <ferror@plt+0x1d474>  // b.none
  41fccc:	mov	w0, #0x1                   	// #1
  41fcd0:	cbz	w19, 41fce4 <ferror@plt+0x1d414>
  41fcd4:	cmp	x24, x23
  41fcd8:	cset	w0, eq  // eq = none
  41fcdc:	cmp	x22, x20
  41fce0:	csel	w0, w0, wzr, eq  // eq = none
  41fce4:	and	x19, x0, #0xff
  41fce8:	b	41fcf0 <ferror@plt+0x1d420>
  41fcec:	and	x19, x19, #0xff
  41fcf0:	str	xzr, [sp, #352]
  41fcf4:	str	x19, [sp, #360]
  41fcf8:	strb	wzr, [sp, #368]
  41fcfc:	strb	wzr, [sp, #369]
  41fd00:	ldr	x0, [sp, #368]
  41fd04:	str	x0, [sp, #520]
  41fd08:	str	xzr, [sp, #504]
  41fd0c:	str	x19, [sp, #512]
  41fd10:	strb	wzr, [sp, #520]
  41fd14:	strb	wzr, [sp, #521]
  41fd18:	add	x0, sp, #0x280
  41fd1c:	ldp	x0, x1, [x0, #-136]
  41fd20:	stp	x0, x1, [x28, #-32]
  41fd24:	ldr	x0, [sp, #520]
  41fd28:	stur	x0, [x28, #-16]
  41fd2c:	ldr	w0, [x28, #32]
  41fd30:	stur	w0, [x28, #-8]
  41fd34:	b	420410 <ferror@plt+0x1db40>
  41fd38:	eor	w19, w19, #0x1
  41fd3c:	and	x19, x19, #0xff
  41fd40:	b	41fcf0 <ferror@plt+0x1d420>
  41fd44:	cbz	w19, 41fd58 <ferror@plt+0x1d488>
  41fd48:	cmp	x22, x20
  41fd4c:	cset	w19, ne  // ne = any
  41fd50:	cmp	x24, x23
  41fd54:	csinc	w19, w19, wzr, eq  // eq = none
  41fd58:	and	x19, x19, #0xff
  41fd5c:	b	41fcf0 <ferror@plt+0x1d420>
  41fd60:	ldp	x0, x1, [x28, #-32]
  41fd64:	add	x2, sp, #0x280
  41fd68:	stp	x0, x1, [x2, #-216]
  41fd6c:	ldur	x0, [x28, #-16]
  41fd70:	str	x0, [sp, #440]
  41fd74:	ldur	x4, [x28, #-32]
  41fd78:	ldr	x3, [x28, #8]
  41fd7c:	ldur	x2, [x28, #-24]
  41fd80:	ldr	x1, [x28, #16]
  41fd84:	mov	w0, #0x0                   	// #0
  41fd88:	cmp	x2, x1
  41fd8c:	b.eq	41fdec <ferror@plt+0x1d51c>  // b.none
  41fd90:	eor	w1, w0, #0x1
  41fd94:	and	w1, w1, #0xff
  41fd98:	cmp	w21, #0x18
  41fd9c:	csel	w0, w1, w0, eq  // eq = none
  41fda0:	and	x0, x0, #0xff
  41fda4:	str	xzr, [sp, #424]
  41fda8:	str	x0, [sp, #432]
  41fdac:	strb	wzr, [sp, #440]
  41fdb0:	strb	wzr, [sp, #441]
  41fdb4:	ldr	x1, [sp, #440]
  41fdb8:	str	x1, [sp, #544]
  41fdbc:	str	xzr, [sp, #528]
  41fdc0:	str	x0, [sp, #536]
  41fdc4:	strb	wzr, [sp, #544]
  41fdc8:	strb	wzr, [sp, #545]
  41fdcc:	add	x0, sp, #0x200
  41fdd0:	ldp	x0, x1, [x0, #16]
  41fdd4:	stp	x0, x1, [x28, #-32]
  41fdd8:	ldr	x0, [sp, #544]
  41fddc:	stur	x0, [x28, #-16]
  41fde0:	ldr	w0, [x28, #32]
  41fde4:	stur	w0, [x28, #-8]
  41fde8:	b	420410 <ferror@plt+0x1db40>
  41fdec:	cmp	x4, x3
  41fdf0:	cset	w0, eq  // eq = none
  41fdf4:	b	41fd90 <ferror@plt+0x1d4c0>
  41fdf8:	ldp	x0, x1, [x28, #-32]
  41fdfc:	add	x2, sp, #0x280
  41fe00:	stp	x0, x1, [x2, #-216]
  41fe04:	ldur	x0, [x28, #-16]
  41fe08:	str	x0, [sp, #440]
  41fe0c:	ldur	x4, [x28, #-32]
  41fe10:	ldur	x6, [x28, #-24]
  41fe14:	ldr	x3, [x28, #8]
  41fe18:	ldr	x5, [x28, #16]
  41fe1c:	ldrb	w0, [x28, #24]
  41fe20:	ldurb	w1, [x28, #-16]
  41fe24:	cmp	w1, #0x0
  41fe28:	csinc	w0, w0, wzr, eq  // eq = none
  41fe2c:	and	x1, x6, x5
  41fe30:	and	x2, x4, x3
  41fe34:	cmp	w21, #0x9
  41fe38:	b.eq	41fe4c <ferror@plt+0x1d57c>  // b.none
  41fe3c:	eor	x1, x6, x5
  41fe40:	eor	x2, x4, x3
  41fe44:	cmp	w21, #0xa
  41fe48:	b.eq	41fe94 <ferror@plt+0x1d5c4>  // b.none
  41fe4c:	str	x2, [sp, #424]
  41fe50:	str	x1, [sp, #432]
  41fe54:	strb	w0, [sp, #440]
  41fe58:	strb	wzr, [sp, #441]
  41fe5c:	ldr	x3, [sp, #440]
  41fe60:	str	x3, [sp, #568]
  41fe64:	str	x2, [sp, #552]
  41fe68:	str	x1, [sp, #560]
  41fe6c:	strb	w0, [sp, #568]
  41fe70:	strb	wzr, [sp, #569]
  41fe74:	add	x0, sp, #0x280
  41fe78:	ldp	x0, x1, [x0, #-88]
  41fe7c:	stp	x0, x1, [x28, #-32]
  41fe80:	ldr	x0, [sp, #568]
  41fe84:	stur	x0, [x28, #-16]
  41fe88:	ldr	w0, [x28, #32]
  41fe8c:	stur	w0, [x28, #-8]
  41fe90:	b	420410 <ferror@plt+0x1db40>
  41fe94:	orr	x1, x6, x5
  41fe98:	orr	x2, x4, x3
  41fe9c:	b	41fe4c <ferror@plt+0x1d57c>
  41fea0:	ldp	x0, x1, [x28, #-32]
  41fea4:	add	x2, sp, #0x200
  41fea8:	stp	x0, x1, [x2, #-136]
  41feac:	ldur	x0, [x28, #-16]
  41feb0:	str	x0, [sp, #392]
  41feb4:	ldur	x24, [x28, #-32]
  41feb8:	ldur	x23, [x28, #-24]
  41febc:	ldurb	w0, [x28, #-16]
  41fec0:	ldp	x2, x3, [x28, #8]
  41fec4:	stp	x2, x3, [sp, #400]
  41fec8:	ldr	x1, [x28, #24]
  41fecc:	str	x1, [sp, #416]
  41fed0:	ldr	x25, [x28, #8]
  41fed4:	ldr	x19, [x28, #16]
  41fed8:	mov	w20, w0
  41fedc:	cbnz	w0, 420a10 <ferror@plt+0x1e140>
  41fee0:	ldrb	w21, [x28, #24]
  41fee4:	mov	w27, w21
  41fee8:	ldr	x22, [x26, #1208]
  41feec:	cbnz	w21, 420a1c <ferror@plt+0x1e14c>
  41fef0:	str	x24, [sp, #376]
  41fef4:	str	x23, [sp, #384]
  41fef8:	strb	w0, [sp, #392]
  41fefc:	add	x0, sp, #0x200
  41ff00:	ldp	x0, x1, [x0, #-136]
  41ff04:	stp	x0, x1, [sp, #224]
  41ff08:	ldr	x0, [sp, #392]
  41ff0c:	str	x0, [sp, #240]
  41ff10:	mov	x1, x22
  41ff14:	add	x0, sp, #0xe0
  41ff18:	bl	41d864 <ferror@plt+0x1af94>
  41ff1c:	and	w0, w0, #0xff
  41ff20:	mov	w20, w21
  41ff24:	cbz	w0, 41ffa0 <ferror@plt+0x1d6d0>
  41ff28:	str	x25, [sp, #400]
  41ff2c:	str	x19, [sp, #408]
  41ff30:	strb	w21, [sp, #416]
  41ff34:	ldp	x0, x1, [sp, #400]
  41ff38:	stp	x0, x1, [sp, #224]
  41ff3c:	ldr	x0, [sp, #416]
  41ff40:	str	x0, [sp, #240]
  41ff44:	mov	x1, x22
  41ff48:	add	x0, sp, #0xe0
  41ff4c:	bl	41d864 <ferror@plt+0x1af94>
  41ff50:	ands	w21, w0, #0xff
  41ff54:	b.ne	420a1c <ferror@plt+0x1e14c>  // b.any
  41ff58:	eor	w20, w20, #0x1
  41ff5c:	ldp	x0, x1, [sp, #400]
  41ff60:	stp	x0, x1, [sp, #256]
  41ff64:	ldr	x0, [sp, #416]
  41ff68:	str	x0, [sp, #272]
  41ff6c:	add	x8, sp, #0xe0
  41ff70:	mov	x1, x22
  41ff74:	ldr	x0, [sp, #136]
  41ff78:	bl	41d89c <ferror@plt+0x1afcc>
  41ff7c:	ldr	x25, [sp, #224]
  41ff80:	str	x25, [sp, #400]
  41ff84:	ldr	x0, [sp, #232]
  41ff88:	str	x0, [sp, #408]
  41ff8c:	ldr	x0, [sp, #240]
  41ff90:	str	x0, [sp, #416]
  41ff94:	ldr	x19, [sp, #408]
  41ff98:	mov	w27, w21
  41ff9c:	b	420a1c <ferror@plt+0x1e14c>
  41ffa0:	add	x0, sp, #0x200
  41ffa4:	ldp	x0, x1, [x0, #-136]
  41ffa8:	stp	x0, x1, [sp, #256]
  41ffac:	ldr	x0, [sp, #392]
  41ffb0:	str	x0, [sp, #272]
  41ffb4:	add	x8, sp, #0xe0
  41ffb8:	mov	x1, x22
  41ffbc:	ldr	x0, [sp, #136]
  41ffc0:	bl	41d89c <ferror@plt+0x1afcc>
  41ffc4:	ldr	x24, [sp, #224]
  41ffc8:	str	x24, [sp, #376]
  41ffcc:	ldr	x0, [sp, #232]
  41ffd0:	str	x0, [sp, #384]
  41ffd4:	ldr	x0, [sp, #240]
  41ffd8:	str	x0, [sp, #392]
  41ffdc:	ldr	x23, [sp, #384]
  41ffe0:	mov	w20, #0x1                   	// #1
  41ffe4:	b	41ff28 <ferror@plt+0x1d658>
  41ffe8:	cmp	x21, x23
  41ffec:	csinc	w19, w19, wzr, eq  // eq = none
  41fff0:	b	420ae4 <ferror@plt+0x1e214>
  41fff4:	add	x0, sp, #0x200
  41fff8:	ldp	x0, x1, [x0, #64]
  41fffc:	stp	x0, x1, [sp, #256]
  420000:	ldr	x0, [sp, #592]
  420004:	str	x0, [sp, #272]
  420008:	add	x8, sp, #0xe0
  42000c:	mov	x1, x22
  420010:	ldr	x0, [sp, #136]
  420014:	bl	41d89c <ferror@plt+0x1afcc>
  420018:	ldr	x23, [sp, #224]
  42001c:	str	x23, [sp, #576]
  420020:	ldr	x0, [sp, #232]
  420024:	str	x0, [sp, #584]
  420028:	ldr	x0, [sp, #240]
  42002c:	str	x0, [sp, #592]
  420030:	ldr	x24, [sp, #584]
  420034:	and	w2, w0, #0xff
  420038:	ubfx	w0, w0, #8, #8
  42003c:	b	420af0 <ferror@plt+0x1e220>
  420040:	ldr	w25, [x28, #32]
  420044:	ldp	x0, x1, [x28, #-32]
  420048:	add	x2, sp, #0x200
  42004c:	stp	x0, x1, [x2, #-184]
  420050:	ldur	x0, [x28, #-16]
  420054:	str	x0, [sp, #344]
  420058:	ldurb	w20, [x28, #-16]
  42005c:	ldurb	w24, [x28, #-15]
  420060:	ldp	x0, x1, [x28, #8]
  420064:	stp	x0, x1, [sp, #352]
  420068:	ldr	x0, [x28, #24]
  42006c:	str	x0, [sp, #368]
  420070:	ldr	x19, [x28, #8]
  420074:	ldr	x22, [x28, #16]
  420078:	str	w20, [sp, #184]
  42007c:	cbnz	w20, 420b78 <ferror@plt+0x1e2a8>
  420080:	ldrb	w23, [x28, #24]
  420084:	str	w23, [sp, #192]
  420088:	ldr	x2, [x26, #1208]
  42008c:	str	x2, [sp, #144]
  420090:	cbnz	w23, 4201a0 <ferror@plt+0x1d8d0>
  420094:	strb	w20, [sp, #344]
  420098:	strb	w24, [sp, #345]
  42009c:	add	x0, sp, #0x200
  4200a0:	ldp	x0, x1, [x0, #-184]
  4200a4:	stp	x0, x1, [sp, #224]
  4200a8:	ldr	x0, [sp, #344]
  4200ac:	str	x0, [sp, #240]
  4200b0:	mov	x1, x2
  4200b4:	add	x0, sp, #0xe0
  4200b8:	bl	41d864 <ferror@plt+0x1af94>
  4200bc:	and	w0, w0, #0xff
  4200c0:	str	w23, [sp, #188]
  4200c4:	cbz	w0, 420154 <ferror@plt+0x1d884>
  4200c8:	str	x19, [sp, #352]
  4200cc:	str	x22, [sp, #360]
  4200d0:	strb	w23, [sp, #368]
  4200d4:	ldp	x0, x1, [sp, #352]
  4200d8:	stp	x0, x1, [sp, #224]
  4200dc:	ldr	x0, [sp, #368]
  4200e0:	str	x0, [sp, #240]
  4200e4:	ldr	x1, [sp, #144]
  4200e8:	add	x0, sp, #0xe0
  4200ec:	bl	41d864 <ferror@plt+0x1af94>
  4200f0:	ldr	w1, [sp, #188]
  4200f4:	str	w1, [sp, #184]
  4200f8:	ands	w23, w0, #0xff
  4200fc:	b.ne	420b8c <ferror@plt+0x1e2bc>  // b.any
  420100:	ldr	w0, [sp, #188]
  420104:	eor	w0, w0, #0x1
  420108:	and	w0, w0, #0xff
  42010c:	str	w0, [sp, #184]
  420110:	ldp	x0, x1, [sp, #352]
  420114:	stp	x0, x1, [sp, #256]
  420118:	ldr	x0, [sp, #368]
  42011c:	str	x0, [sp, #272]
  420120:	add	x8, sp, #0xe0
  420124:	ldr	x1, [sp, #144]
  420128:	ldr	x0, [sp, #136]
  42012c:	bl	41d89c <ferror@plt+0x1afcc>
  420130:	ldr	x19, [sp, #224]
  420134:	str	x19, [sp, #352]
  420138:	ldr	x0, [sp, #232]
  42013c:	str	x0, [sp, #360]
  420140:	ldr	x0, [sp, #240]
  420144:	str	x0, [sp, #368]
  420148:	ldr	x22, [sp, #360]
  42014c:	str	w23, [sp, #192]
  420150:	b	420b8c <ferror@plt+0x1e2bc>
  420154:	add	x0, sp, #0x200
  420158:	ldp	x0, x1, [x0, #-184]
  42015c:	stp	x0, x1, [sp, #256]
  420160:	ldr	x0, [sp, #344]
  420164:	str	x0, [sp, #272]
  420168:	add	x8, sp, #0xe0
  42016c:	ldr	x1, [sp, #144]
  420170:	ldr	x0, [sp, #136]
  420174:	bl	41d89c <ferror@plt+0x1afcc>
  420178:	ldp	x0, x1, [sp, #224]
  42017c:	add	x2, sp, #0x200
  420180:	stp	x0, x1, [x2, #-184]
  420184:	ldr	x0, [sp, #240]
  420188:	str	x0, [sp, #344]
  42018c:	and	w20, w0, #0xff
  420190:	ubfx	w24, w0, #8, #8
  420194:	mov	w0, #0x1                   	// #1
  420198:	str	w0, [sp, #188]
  42019c:	b	4200c8 <ferror@plt+0x1d7f8>
  4201a0:	ldr	w0, [sp, #184]
  4201a4:	str	w0, [sp, #188]
  4201a8:	b	420b8c <ferror@plt+0x1e2bc>
  4201ac:	cbz	x22, 4201e8 <ferror@plt+0x1d918>
  4201b0:	ldr	x1, [sp, #144]
  4201b4:	sub	x20, x1, #0x41
  4201b8:	sub	x0, x1, #0x1
  4201bc:	cmp	x1, #0x41
  4201c0:	csel	x0, x0, x20, cc  // cc = lo, ul, last
  4201c4:	mov	x1, #0x1                   	// #1
  4201c8:	lsl	x1, x1, x0
  4201cc:	tst	x22, x1
  4201d0:	b.ne	420bbc <ferror@plt+0x1e2ec>  // b.any
  4201d4:	sub	x0, x0, #0x1
  4201d8:	lsr	x1, x1, #1
  4201dc:	tst	x22, x1
  4201e0:	b.eq	4201d4 <ferror@plt+0x1d904>  // b.none
  4201e4:	b	420bbc <ferror@plt+0x1e2ec>
  4201e8:	ldr	w0, [x26, #28]
  4201ec:	cbz	w0, 420214 <ferror@plt+0x1d944>
  4201f0:	strb	w20, [sp, #344]
  4201f4:	strb	w24, [sp, #345]
  4201f8:	ldr	x0, [sp, #344]
  4201fc:	str	x0, [sp, #616]
  420200:	ldr	x0, [sp, #328]
  420204:	str	x0, [sp, #160]
  420208:	ldr	x0, [sp, #336]
  42020c:	str	x0, [sp, #168]
  420210:	b	4203dc <ferror@plt+0x1db0c>
  420214:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a094>
  420218:	add	x4, x4, #0x4f8
  42021c:	mov	w3, #0x0                   	// #0
  420220:	mov	w2, w25
  420224:	mov	w1, #0x3                   	// #3
  420228:	mov	x0, x26
  42022c:	bl	41cbe8 <ferror@plt+0x1a318>
  420230:	b	4201f0 <ferror@plt+0x1d920>
  420234:	cbnz	w23, 420304 <ferror@plt+0x1da34>
  420238:	cbz	x20, 42039c <ferror@plt+0x1dacc>
  42023c:	extr	x22, x19, x22, #1
  420240:	lsr	x19, x19, #1
  420244:	sub	x20, x20, #0x1
  420248:	strb	w27, [sp, #344]
  42024c:	strb	w24, [sp, #345]
  420250:	add	x0, sp, #0x200
  420254:	ldp	x0, x1, [x0, #-184]
  420258:	stp	x0, x1, [sp, #400]
  42025c:	ldr	x0, [sp, #344]
  420260:	str	x0, [sp, #416]
  420264:	ldr	x21, [sp, #328]
  420268:	ldr	x25, [sp, #336]
  42026c:	str	x19, [sp, #376]
  420270:	str	x22, [sp, #384]
  420274:	add	x0, sp, #0x200
  420278:	ldp	x0, x1, [x0, #-136]
  42027c:	add	x2, sp, #0x280
  420280:	stp	x0, x1, [x2, #-216]
  420284:	ldr	x0, [sp, #392]
  420288:	str	x0, [sp, #440]
  42028c:	cbnz	w27, 4202f0 <ferror@plt+0x1da20>
  420290:	ldrb	w28, [sp, #392]
  420294:	cbnz	w28, 4202f0 <ferror@plt+0x1da20>
  420298:	str	x21, [sp, #400]
  42029c:	str	x25, [sp, #408]
  4202a0:	strb	w27, [sp, #416]
  4202a4:	ldp	x0, x1, [sp, #400]
  4202a8:	stp	x0, x1, [sp, #224]
  4202ac:	ldr	x0, [sp, #416]
  4202b0:	str	x0, [sp, #240]
  4202b4:	ldr	x1, [sp, #144]
  4202b8:	add	x0, sp, #0xe0
  4202bc:	bl	41d864 <ferror@plt+0x1af94>
  4202c0:	and	w23, w0, #0xff
  4202c4:	strb	w28, [sp, #440]
  4202c8:	add	x0, sp, #0x280
  4202cc:	ldp	x0, x1, [x0, #-216]
  4202d0:	stp	x0, x1, [sp, #224]
  4202d4:	ldr	x0, [sp, #440]
  4202d8:	str	x0, [sp, #240]
  4202dc:	ldr	x1, [sp, #144]
  4202e0:	add	x0, sp, #0xe0
  4202e4:	bl	41d864 <ferror@plt+0x1af94>
  4202e8:	cmp	w23, w0, uxtb
  4202ec:	b.ne	420234 <ferror@plt+0x1d964>  // b.any
  4202f0:	cmp	x19, x21
  4202f4:	b.cc	420304 <ferror@plt+0x1da34>  // b.lo, b.ul, b.last
  4202f8:	b.ne	420238 <ferror@plt+0x1d968>  // b.any
  4202fc:	cmp	x22, x25
  420300:	b.hi	420238 <ferror@plt+0x1d968>  // b.pmore
  420304:	add	x0, sp, #0x200
  420308:	ldp	x0, x1, [x0, #-184]
  42030c:	stp	x0, x1, [sp, #256]
  420310:	ldr	x0, [sp, #344]
  420314:	str	x0, [sp, #272]
  420318:	add	x0, sp, #0x200
  42031c:	ldp	x0, x1, [x0, #-136]
  420320:	stp	x0, x1, [sp, #288]
  420324:	ldr	x0, [sp, #392]
  420328:	str	x0, [sp, #304]
  42032c:	add	x8, sp, #0xe0
  420330:	mov	w3, #0x5                   	// #5
  420334:	ldr	x2, [sp, #176]
  420338:	ldr	x1, [sp, #136]
  42033c:	mov	x0, x26
  420340:	bl	41dc5c <ferror@plt+0x1b38c>
  420344:	ldp	x0, x1, [sp, #224]
  420348:	add	x2, sp, #0x200
  42034c:	stp	x0, x1, [x2, #-184]
  420350:	ldr	x24, [sp, #240]
  420354:	str	x24, [sp, #344]
  420358:	and	w27, w24, #0xff
  42035c:	ubfx	w24, w24, #8, #8
  420360:	cmp	x20, #0x3f
  420364:	b.ls	420384 <ferror@plt+0x1dab4>  // b.plast
  420368:	sub	w0, w20, #0x40
  42036c:	mov	x1, #0x1                   	// #1
  420370:	lsl	x0, x1, x0
  420374:	ldr	x1, [sp, #160]
  420378:	orr	x0, x1, x0
  42037c:	str	x0, [sp, #160]
  420380:	b	42023c <ferror@plt+0x1d96c>
  420384:	mov	x0, #0x1                   	// #1
  420388:	lsl	x0, x0, x20
  42038c:	ldr	x1, [sp, #168]
  420390:	orr	x0, x1, x0
  420394:	str	x0, [sp, #168]
  420398:	b	420238 <ferror@plt+0x1d968>
  42039c:	ldr	x28, [sp, #200]
  4203a0:	ldr	w21, [sp, #208]
  4203a4:	cmp	w21, #0x7
  4203a8:	b.eq	420484 <ferror@plt+0x1dbb4>  // b.none
  4203ac:	ldr	w20, [sp, #192]
  4203b0:	mov	w24, #0x0                   	// #0
  4203b4:	ldr	w0, [sp, #188]
  4203b8:	cbnz	w0, 420594 <ferror@plt+0x1dcc4>
  4203bc:	strb	w20, [sp, #344]
  4203c0:	strb	w24, [sp, #345]
  4203c4:	ldr	x0, [sp, #344]
  4203c8:	str	x0, [sp, #616]
  4203cc:	ldr	x0, [sp, #328]
  4203d0:	str	x0, [sp, #160]
  4203d4:	ldr	x0, [sp, #336]
  4203d8:	str	x0, [sp, #168]
  4203dc:	ldr	x0, [sp, #160]
  4203e0:	str	x0, [sp, #600]
  4203e4:	ldr	x0, [sp, #168]
  4203e8:	str	x0, [sp, #608]
  4203ec:	strb	w20, [sp, #616]
  4203f0:	strb	w24, [sp, #617]
  4203f4:	add	x0, sp, #0x280
  4203f8:	ldp	x0, x1, [x0, #-40]
  4203fc:	stp	x0, x1, [x28, #-32]
  420400:	ldr	x0, [sp, #616]
  420404:	stur	x0, [x28, #-16]
  420408:	ldr	w0, [x28, #32]
  42040c:	stur	w0, [x28, #-8]
  420410:	sub	x19, x28, #0x28
  420414:	ldurb	w0, [x28, #-15]
  420418:	cbz	w0, 420424 <ferror@plt+0x1db54>
  42041c:	ldr	w0, [x26, #28]
  420420:	cbz	w0, 42089c <ferror@plt+0x1dfcc>
  420424:	ldr	w0, [x19, #36]
  420428:	sbfiz	x1, x0, #1, #32
  42042c:	ldr	x2, [sp, #104]
  420430:	ldrb	w1, [x2, x1]
  420434:	ldr	w2, [sp, #152]
  420438:	cmp	w2, w1
  42043c:	b.cs	4208b4 <ferror@plt+0x1dfe4>  // b.hs, b.nlast
  420440:	mov	x28, x19
  420444:	ldrb	w1, [x26, #1141]
  420448:	cbz	w1, 42045c <ferror@plt+0x1db8c>
  42044c:	ldr	x1, [sp, #104]
  420450:	add	x0, x1, w0, sxtw #1
  420454:	ldrb	w0, [x0, #1]
  420458:	tbnz	w0, #2, 41f928 <ferror@plt+0x1d058>
  42045c:	ldr	w21, [x28, #36]
  420460:	sub	w1, w21, #0x1
  420464:	cmp	w1, #0x1b
  420468:	b.hi	41f908 <ferror@plt+0x1d038>  // b.pmore
  42046c:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a094>
  420470:	add	x0, x0, #0x5d8
  420474:	ldrh	w0, [x0, w1, uxtw #1]
  420478:	adr	x1, 420484 <ferror@plt+0x1dbb4>
  42047c:	add	x0, x1, w0, sxth #2
  420480:	br	x0
  420484:	ldr	w0, [sp, #192]
  420488:	cbnz	w0, 420588 <ferror@plt+0x1dcb8>
  42048c:	mov	w20, #0x0                   	// #0
  420490:	ldr	w1, [sp, #184]
  420494:	cbnz	w1, 42051c <ferror@plt+0x1dc4c>
  420498:	ldr	x19, [sp, #160]
  42049c:	str	x19, [sp, #424]
  4204a0:	ldr	x21, [sp, #168]
  4204a4:	str	x21, [sp, #432]
  4204a8:	strb	w20, [sp, #440]
  4204ac:	strb	w0, [sp, #441]
  4204b0:	add	x0, sp, #0x280
  4204b4:	ldp	x0, x1, [x0, #-216]
  4204b8:	stp	x0, x1, [sp, #224]
  4204bc:	ldr	x0, [sp, #440]
  4204c0:	str	x0, [sp, #240]
  4204c4:	ldr	x1, [sp, #144]
  4204c8:	add	x0, sp, #0xe0
  4204cc:	bl	41d864 <ferror@plt+0x1af94>
  4204d0:	ldr	w1, [sp, #184]
  4204d4:	eor	w1, w1, #0x1
  4204d8:	and	w1, w1, #0xff
  4204dc:	cmp	w1, w0, uxtb
  4204e0:	b.eq	4204f4 <ferror@plt+0x1dc24>  // b.none
  4204e4:	orr	x0, x19, x21
  4204e8:	cmp	x0, #0x0
  4204ec:	cset	w0, ne  // ne = any
  4204f0:	str	w0, [sp, #192]
  4204f4:	ldr	w24, [sp, #192]
  4204f8:	ldr	x0, [sp, #160]
  4204fc:	str	x0, [sp, #424]
  420500:	ldr	x0, [sp, #168]
  420504:	str	x0, [sp, #432]
  420508:	strb	w20, [sp, #440]
  42050c:	strb	w24, [sp, #441]
  420510:	ldr	x0, [sp, #440]
  420514:	str	x0, [sp, #616]
  420518:	b	4203dc <ferror@plt+0x1db0c>
  42051c:	ldr	x0, [sp, #160]
  420520:	str	x0, [sp, #424]
  420524:	ldr	x0, [sp, #168]
  420528:	str	x0, [sp, #432]
  42052c:	strb	wzr, [sp, #440]
  420530:	strb	wzr, [sp, #441]
  420534:	add	x0, sp, #0x280
  420538:	ldp	x0, x1, [x0, #-216]
  42053c:	stp	x0, x1, [sp, #256]
  420540:	ldr	x0, [sp, #440]
  420544:	str	x0, [sp, #272]
  420548:	add	x8, sp, #0xe0
  42054c:	ldr	x1, [sp, #144]
  420550:	ldr	x0, [sp, #136]
  420554:	bl	41d89c <ferror@plt+0x1afcc>
  420558:	ldr	x1, [sp, #224]
  42055c:	str	x1, [sp, #424]
  420560:	ldr	x0, [sp, #232]
  420564:	str	x0, [sp, #432]
  420568:	ldr	x0, [sp, #240]
  42056c:	str	x0, [sp, #440]
  420570:	str	x1, [sp, #160]
  420574:	ldr	x1, [sp, #432]
  420578:	str	x1, [sp, #168]
  42057c:	and	w20, w0, #0xff
  420580:	ubfx	w0, w0, #8, #8
  420584:	b	420498 <ferror@plt+0x1dbc8>
  420588:	mov	w24, #0x0                   	// #0
  42058c:	mov	w20, #0x1                   	// #1
  420590:	b	4204f8 <ferror@plt+0x1dc28>
  420594:	ldrb	w0, [sp, #192]
  420598:	strb	w0, [sp, #344]
  42059c:	strb	wzr, [sp, #345]
  4205a0:	add	x0, sp, #0x200
  4205a4:	ldp	x0, x1, [x0, #-184]
  4205a8:	stp	x0, x1, [sp, #256]
  4205ac:	ldr	x0, [sp, #344]
  4205b0:	str	x0, [sp, #272]
  4205b4:	add	x8, sp, #0xe0
  4205b8:	ldr	x1, [sp, #144]
  4205bc:	ldr	x0, [sp, #136]
  4205c0:	bl	41d89c <ferror@plt+0x1afcc>
  4205c4:	ldp	x0, x1, [sp, #224]
  4205c8:	add	x2, sp, #0x200
  4205cc:	stp	x0, x1, [x2, #-184]
  4205d0:	ldr	x0, [sp, #240]
  4205d4:	str	x0, [sp, #344]
  4205d8:	and	w20, w0, #0xff
  4205dc:	ubfx	w24, w0, #8, #8
  4205e0:	b	4203bc <ferror@plt+0x1daec>
  4205e4:	sub	x19, x28, #0x28
  4205e8:	ldur	x0, [x28, #-24]
  4205ec:	ldur	x1, [x28, #-32]
  4205f0:	orr	x0, x0, x1
  4205f4:	cbz	x0, 420638 <ferror@plt+0x1dd68>
  4205f8:	ldr	w0, [x26, #28]
  4205fc:	sub	w0, w0, #0x1
  420600:	str	w0, [x26, #28]
  420604:	ldur	x1, [x28, #-24]
  420608:	ldur	x0, [x28, #-32]
  42060c:	orr	x1, x1, x0
  420610:	mov	w0, #0x1                   	// #1
  420614:	cbz	x1, 420638 <ferror@plt+0x1dd68>
  420618:	and	x0, x0, #0xff
  42061c:	stur	x0, [x28, #-24]
  420620:	stur	xzr, [x28, #-32]
  420624:	sturb	wzr, [x28, #-16]
  420628:	sturb	wzr, [x28, #-15]
  42062c:	ldr	w0, [x28, #32]
  420630:	stur	w0, [x28, #-8]
  420634:	b	420424 <ferror@plt+0x1db54>
  420638:	ldr	x0, [x28, #16]
  42063c:	ldr	x1, [x28, #8]
  420640:	orr	x0, x0, x1
  420644:	cmp	x0, #0x0
  420648:	cset	w0, ne  // ne = any
  42064c:	b	420618 <ferror@plt+0x1dd48>
  420650:	sub	x19, x28, #0x28
  420654:	ldur	x0, [x28, #-24]
  420658:	ldur	x1, [x28, #-32]
  42065c:	orr	x0, x0, x1
  420660:	cbnz	x0, 4206a4 <ferror@plt+0x1ddd4>
  420664:	ldr	w0, [x26, #28]
  420668:	sub	w0, w0, #0x1
  42066c:	str	w0, [x26, #28]
  420670:	ldur	x0, [x28, #-24]
  420674:	ldur	x1, [x28, #-32]
  420678:	orr	x0, x0, x1
  42067c:	cbnz	x0, 4206a4 <ferror@plt+0x1ddd4>
  420680:	mov	w0, #0x0                   	// #0
  420684:	and	x0, x0, #0xff
  420688:	stur	x0, [x28, #-24]
  42068c:	stur	xzr, [x28, #-32]
  420690:	sturb	wzr, [x28, #-16]
  420694:	sturb	wzr, [x28, #-15]
  420698:	ldr	w0, [x28, #32]
  42069c:	stur	w0, [x28, #-8]
  4206a0:	b	420424 <ferror@plt+0x1db54>
  4206a4:	ldr	x1, [x28, #16]
  4206a8:	ldr	x0, [x28, #8]
  4206ac:	orr	x1, x1, x0
  4206b0:	mov	w0, #0x1                   	// #1
  4206b4:	cbnz	x1, 420684 <ferror@plt+0x1ddb4>
  4206b8:	b	420680 <ferror@plt+0x1ddb0>
  4206bc:	mov	x27, x26
  4206c0:	ldr	w26, [sp, #156]
  4206c4:	cmp	w26, #0x15
  4206c8:	b.ne	4206f0 <ferror@plt+0x1de20>  // b.any
  4206cc:	sub	x0, x28, #0x28
  4206d0:	ldp	x2, x3, [x28, #8]
  4206d4:	stp	x2, x3, [x28, #-32]
  4206d8:	ldr	x1, [x28, #24]
  4206dc:	stur	x1, [x28, #-16]
  4206e0:	ldr	w1, [x28, #32]
  4206e4:	stur	w1, [x28, #-8]
  4206e8:	mov	x28, x0
  4206ec:	b	4207fc <ferror@plt+0x1df2c>
  4206f0:	ldr	x0, [x28]
  4206f4:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a094>
  4206f8:	add	x4, x4, #0x510
  4206fc:	mov	w3, #0x0                   	// #0
  420700:	ldr	w2, [x0]
  420704:	mov	w1, #0x3                   	// #3
  420708:	mov	x0, x27
  42070c:	bl	41cbe8 <ferror@plt+0x1a318>
  420710:	b	41f920 <ferror@plt+0x1d050>
  420714:	sub	x19, x28, #0x50
  420718:	ldur	x0, [x28, #-64]
  42071c:	ldur	x1, [x28, #-72]
  420720:	orr	x0, x0, x1
  420724:	cbz	x0, 420760 <ferror@plt+0x1de90>
  420728:	ldr	w0, [x26, #28]
  42072c:	sub	w0, w0, #0x1
  420730:	str	w0, [x26, #28]
  420734:	ldp	x0, x1, [x28, #-32]
  420738:	stp	x0, x1, [x28, #-72]
  42073c:	ldur	x0, [x28, #-16]
  420740:	stur	x0, [x28, #-56]
  420744:	ldur	w0, [x28, #-8]
  420748:	stur	w0, [x28, #-48]
  42074c:	ldurb	w0, [x28, #-16]
  420750:	cbnz	w0, 420758 <ferror@plt+0x1de88>
  420754:	ldrb	w0, [x28, #24]
  420758:	sturb	w0, [x28, #-56]
  42075c:	b	420424 <ferror@plt+0x1db54>
  420760:	ldp	x0, x1, [x28, #8]
  420764:	stp	x0, x1, [x28, #-72]
  420768:	ldr	x0, [x28, #24]
  42076c:	stur	x0, [x28, #-56]
  420770:	ldr	w0, [x28, #32]
  420774:	stur	w0, [x28, #-48]
  420778:	b	42074c <ferror@plt+0x1de7c>
  42077c:	mov	x27, x26
  420780:	ldr	w26, [sp, #156]
  420784:	sub	w0, w26, #0x12
  420788:	cmp	w0, #0x1
  42078c:	b.hi	420884 <ferror@plt+0x1dfb4>  // b.pmore
  420790:	cmp	w26, #0x16
  420794:	b.eq	420984 <ferror@plt+0x1e0b4>  // b.none
  420798:	cmp	w26, #0x11
  42079c:	b.eq	420920 <ferror@plt+0x1e050>  // b.none
  4207a0:	b.hi	4208e0 <ferror@plt+0x1e010>  // b.pmore
  4207a4:	cmp	w26, #0xf
  4207a8:	b.eq	420920 <ferror@plt+0x1e050>  // b.none
  4207ac:	cmp	w26, #0x10
  4207b0:	b.ne	4207d0 <ferror@plt+0x1df00>  // b.any
  4207b4:	ldr	x0, [x28, #16]
  4207b8:	ldr	x1, [x28, #8]
  4207bc:	orr	x0, x0, x1
  4207c0:	cbz	x0, 4207d0 <ferror@plt+0x1df00>
  4207c4:	ldr	w0, [x27, #28]
  4207c8:	add	w0, w0, #0x1
  4207cc:	str	w0, [x27, #28]
  4207d0:	add	x28, x28, #0x28
  4207d4:	ldr	x0, [x27, #1104]
  4207d8:	cmp	x0, x28
  4207dc:	b.eq	420974 <ferror@plt+0x1e0a4>  // b.none
  4207e0:	str	w26, [x28, #36]
  4207e4:	ldr	x0, [sp, #120]
  4207e8:	str	x0, [x28]
  4207ec:	ldr	w0, [sp, #132]
  4207f0:	str	w0, [x28, #32]
  4207f4:	mov	w0, #0x1                   	// #1
  4207f8:	str	w0, [sp, #128]
  4207fc:	ldr	w0, [sp, #116]
  420800:	add	w0, w0, #0x1
  420804:	str	w0, [sp, #116]
  420808:	add	x1, sp, #0x1c4
  42080c:	mov	x0, x27
  420810:	bl	42eb2c <ferror@plt+0x2c25c>
  420814:	str	x0, [sp, #120]
  420818:	ldrb	w0, [x0, #4]
  42081c:	ldr	w1, [sp, #452]
  420820:	str	w1, [sp, #132]
  420824:	cmp	w0, #0x5
  420828:	b.eq	41f7ac <ferror@plt+0x1cedc>  // b.none
  42082c:	cmp	w0, #0x5
  420830:	b.hi	41f254 <ferror@plt+0x1c984>  // b.pmore
  420834:	cmp	w0, #0x1
  420838:	b.eq	41f720 <ferror@plt+0x1ce50>  // b.none
  42083c:	cmp	w0, #0x4
  420840:	b.ne	41f7c0 <ferror@plt+0x1cef0>  // b.any
  420844:	ldr	w0, [sp, #128]
  420848:	mov	w26, #0x4                   	// #4
  42084c:	cbz	w0, 420c1c <ferror@plt+0x1e34c>
  420850:	mov	w26, #0x1b                  	// #27
  420854:	mov	w3, w26
  420858:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a094>
  42085c:	add	x0, x0, #0x610
  420860:	add	x0, x0, w26, sxtw #1
  420864:	ldrb	w0, [x0, #1]
  420868:	tbz	w0, #0, 420c34 <ferror@plt+0x1e364>
  42086c:	ldr	w1, [x28, #36]
  420870:	sub	w2, w1, #0x1
  420874:	cmp	w2, #0x1b
  420878:	b.ls	41f76c <ferror@plt+0x1ce9c>  // b.plast
  42087c:	mov	x26, x27
  420880:	b	41f908 <ferror@plt+0x1d038>
  420884:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  420888:	add	x2, x2, #0x530
  42088c:	mov	w1, #0x3                   	// #3
  420890:	mov	x0, x27
  420894:	bl	41c9fc <ferror@plt+0x1a12c>
  420898:	b	41f920 <ferror@plt+0x1d050>
  42089c:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  4208a0:	add	x2, x2, #0x550
  4208a4:	mov	w1, #0x2                   	// #2
  4208a8:	mov	x0, x26
  4208ac:	bl	41c9fc <ferror@plt+0x1a12c>
  4208b0:	b	420424 <ferror@plt+0x1db54>
  4208b4:	mov	x27, x26
  4208b8:	ldr	w26, [sp, #156]
  4208bc:	mov	x28, x19
  4208c0:	cmp	w26, #0x15
  4208c4:	b.ne	420790 <ferror@plt+0x1dec0>  // b.any
  4208c8:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  4208cc:	add	x2, x2, #0x580
  4208d0:	mov	w1, #0x3                   	// #3
  4208d4:	mov	x0, x27
  4208d8:	bl	41c9fc <ferror@plt+0x1a12c>
  4208dc:	b	41f920 <ferror@plt+0x1d050>
  4208e0:	cmp	w26, #0x12
  4208e4:	b.ne	420914 <ferror@plt+0x1e044>  // b.any
  4208e8:	ldr	w0, [x28, #36]
  4208ec:	cmp	w0, #0x11
  4208f0:	b.ne	420940 <ferror@plt+0x1e070>  // b.any
  4208f4:	ldur	x0, [x28, #-24]
  4208f8:	ldur	x1, [x28, #-32]
  4208fc:	orr	x0, x0, x1
  420900:	cbz	x0, 420964 <ferror@plt+0x1e094>
  420904:	ldr	w0, [x27, #28]
  420908:	add	w0, w0, #0x1
  42090c:	str	w0, [x27, #28]
  420910:	b	4207d0 <ferror@plt+0x1df00>
  420914:	cmp	w26, #0x15
  420918:	b.eq	4207fc <ferror@plt+0x1df2c>  // b.none
  42091c:	b	4207d0 <ferror@plt+0x1df00>
  420920:	ldr	x0, [x28, #16]
  420924:	ldr	x1, [x28, #8]
  420928:	orr	x0, x0, x1
  42092c:	cbnz	x0, 4207d0 <ferror@plt+0x1df00>
  420930:	ldr	w0, [x27, #28]
  420934:	add	w0, w0, #0x1
  420938:	str	w0, [x27, #28]
  42093c:	b	4207d0 <ferror@plt+0x1df00>
  420940:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a094>
  420944:	add	x4, x4, #0x5a0
  420948:	mov	w3, #0x0                   	// #0
  42094c:	ldr	w2, [sp, #132]
  420950:	mov	w1, #0x3                   	// #3
  420954:	mov	x0, x27
  420958:	bl	41cbe8 <ferror@plt+0x1a318>
  42095c:	mov	w0, #0x0                   	// #0
  420960:	b	41f2c8 <ferror@plt+0x1c9f8>
  420964:	ldr	w0, [x27, #28]
  420968:	sub	w0, w0, #0x1
  42096c:	str	w0, [x27, #28]
  420970:	b	4207d0 <ferror@plt+0x1df00>
  420974:	mov	x0, x27
  420978:	bl	41f180 <ferror@plt+0x1c8b0>
  42097c:	mov	x28, x0
  420980:	b	4207e0 <ferror@plt+0x1df10>
  420984:	mov	x26, x27
  420988:	ldr	x0, [x27, #432]
  42098c:	cbz	x0, 4209ac <ferror@plt+0x1e0dc>
  420990:	ldr	w0, [sp, #196]
  420994:	eor	w0, w0, #0x1
  420998:	ldr	w1, [sp, #116]
  42099c:	cmp	w1, #0x3
  4209a0:	csinc	w0, w0, wzr, eq  // eq = none
  4209a4:	cbz	w0, 4209ac <ferror@plt+0x1e0dc>
  4209a8:	str	xzr, [x27, #432]
  4209ac:	ldr	x0, [x26, #1096]
  4209b0:	cmp	x0, x28
  4209b4:	b.eq	4209f8 <ferror@plt+0x1e128>  // b.none
  4209b8:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a094>
  4209bc:	add	x0, x0, #0x160
  4209c0:	adrp	x5, 461000 <_obstack_memory_used@@Base+0x1a094>
  4209c4:	add	x5, x5, #0x158
  4209c8:	ldr	w1, [sp, #212]
  4209cc:	cmp	w1, #0x0
  4209d0:	csel	x5, x5, x0, ne  // ne = any
  4209d4:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a094>
  4209d8:	add	x4, x4, #0x5c0
  4209dc:	mov	w3, #0x0                   	// #0
  4209e0:	ldr	w2, [x28, #32]
  4209e4:	mov	w1, #0x4                   	// #4
  4209e8:	mov	x0, x26
  4209ec:	bl	41cbe8 <ferror@plt+0x1a318>
  4209f0:	mov	w0, #0x0                   	// #0
  4209f4:	b	41f2c8 <ferror@plt+0x1c9f8>
  4209f8:	ldr	x0, [x28, #16]
  4209fc:	ldr	x1, [x28, #8]
  420a00:	orr	x0, x0, x1
  420a04:	cmp	x0, #0x0
  420a08:	cset	w0, ne  // ne = any
  420a0c:	b	41f2c8 <ferror@plt+0x1c9f8>
  420a10:	ldr	x22, [x26, #1208]
  420a14:	mov	w27, w0
  420a18:	mov	w20, #0x0                   	// #0
  420a1c:	add	x8, sp, #0x240
  420a20:	mov	x1, x19
  420a24:	mov	x0, x23
  420a28:	bl	41dbec <ferror@plt+0x1b31c>
  420a2c:	ldr	x21, [sp, #576]
  420a30:	ldr	x0, [sp, #584]
  420a34:	str	x0, [sp, #144]
  420a38:	add	x8, sp, #0x1a8
  420a3c:	mov	x1, x19
  420a40:	mov	x0, x24
  420a44:	bl	41dbec <ferror@plt+0x1b31c>
  420a48:	ldr	x0, [sp, #432]
  420a4c:	add	x21, x21, x0
  420a50:	ldr	x0, [sp, #424]
  420a54:	mov	w19, #0x1                   	// #1
  420a58:	cbnz	x0, 420a6c <ferror@plt+0x1e19c>
  420a5c:	cmp	x25, #0x0
  420a60:	cset	w19, ne  // ne = any
  420a64:	cmp	x24, #0x0
  420a68:	csel	w19, w19, wzr, ne  // ne = any
  420a6c:	add	x8, sp, #0x1a8
  420a70:	mov	x1, x25
  420a74:	mov	x0, x23
  420a78:	bl	41dbec <ferror@plt+0x1b31c>
  420a7c:	ldr	x0, [sp, #432]
  420a80:	add	x21, x21, x0
  420a84:	ldr	x0, [sp, #424]
  420a88:	cmp	x0, #0x0
  420a8c:	csinc	w19, w19, wzr, eq  // eq = none
  420a90:	str	x21, [sp, #576]
  420a94:	add	x0, sp, #0x200
  420a98:	ldp	x0, x1, [x0, #64]
  420a9c:	stp	x0, x1, [sp, #256]
  420aa0:	ldr	x0, [sp, #592]
  420aa4:	str	x0, [sp, #272]
  420aa8:	add	x8, sp, #0xe0
  420aac:	mov	x1, x22
  420ab0:	ldr	x0, [sp, #136]
  420ab4:	bl	41d800 <ferror@plt+0x1af30>
  420ab8:	ldr	x23, [sp, #224]
  420abc:	str	x23, [sp, #576]
  420ac0:	ldr	x0, [sp, #232]
  420ac4:	str	x0, [sp, #584]
  420ac8:	ldr	x0, [sp, #240]
  420acc:	str	x0, [sp, #592]
  420ad0:	ldr	x24, [sp, #584]
  420ad4:	ldr	x0, [sp, #144]
  420ad8:	cmp	x0, x24
  420adc:	b.eq	41ffe8 <ferror@plt+0x1d718>  // b.none
  420ae0:	mov	w19, #0x1                   	// #1
  420ae4:	cbnz	w20, 41fff4 <ferror@plt+0x1d724>
  420ae8:	ldrb	w2, [sp, #592]
  420aec:	ldrb	w0, [sp, #593]
  420af0:	mov	w1, #0x0                   	// #0
  420af4:	cbnz	w27, 420b48 <ferror@plt+0x1e278>
  420af8:	cbnz	w19, 420b44 <ferror@plt+0x1e274>
  420afc:	str	x23, [sp, #576]
  420b00:	str	x24, [sp, #584]
  420b04:	strb	w2, [sp, #592]
  420b08:	strb	w0, [sp, #593]
  420b0c:	add	x0, sp, #0x200
  420b10:	ldp	x0, x1, [x0, #64]
  420b14:	stp	x0, x1, [sp, #224]
  420b18:	ldr	x0, [sp, #592]
  420b1c:	str	x0, [sp, #240]
  420b20:	mov	x1, x22
  420b24:	add	x0, sp, #0xe0
  420b28:	bl	41d864 <ferror@plt+0x1af94>
  420b2c:	eor	w20, w20, #0x1
  420b30:	cmp	w20, w0, uxtb
  420b34:	b.eq	420b44 <ferror@plt+0x1e274>  // b.none
  420b38:	orr	x0, x23, x24
  420b3c:	cmp	x0, #0x0
  420b40:	cset	w19, ne  // ne = any
  420b44:	mov	w1, w19
  420b48:	str	x23, [sp, #576]
  420b4c:	str	x24, [sp, #584]
  420b50:	strb	w27, [sp, #592]
  420b54:	strb	w1, [sp, #593]
  420b58:	add	x0, sp, #0x200
  420b5c:	ldp	x0, x1, [x0, #64]
  420b60:	stp	x0, x1, [x28, #-32]
  420b64:	ldr	x0, [sp, #592]
  420b68:	stur	x0, [x28, #-16]
  420b6c:	ldr	w0, [x28, #32]
  420b70:	stur	w0, [x28, #-8]
  420b74:	b	420410 <ferror@plt+0x1db40>
  420b78:	ldr	x0, [x26, #1208]
  420b7c:	str	x0, [sp, #144]
  420b80:	str	w20, [sp, #192]
  420b84:	str	wzr, [sp, #188]
  420b88:	str	wzr, [sp, #184]
  420b8c:	cbz	x19, 4201ac <ferror@plt+0x1d8dc>
  420b90:	ldr	x1, [sp, #144]
  420b94:	sub	x0, x1, #0x1
  420b98:	sub	w2, w1, #0x41
  420b9c:	mov	x1, #0x1                   	// #1
  420ba0:	lsl	x1, x1, x2
  420ba4:	tst	x19, x1
  420ba8:	b.ne	420bbc <ferror@plt+0x1e2ec>  // b.any
  420bac:	sub	x0, x0, #0x1
  420bb0:	lsr	x1, x1, #1
  420bb4:	tst	x19, x1
  420bb8:	b.eq	420bac <ferror@plt+0x1e2dc>  // b.none
  420bbc:	ldr	x3, [sp, #144]
  420bc0:	sub	x20, x3, #0x1
  420bc4:	sub	x20, x20, x0
  420bc8:	str	x19, [sp, #352]
  420bcc:	str	x22, [sp, #360]
  420bd0:	mov	w0, #0x1                   	// #1
  420bd4:	strb	w0, [sp, #368]
  420bd8:	ldp	x0, x1, [sp, #352]
  420bdc:	stp	x0, x1, [sp, #224]
  420be0:	ldr	x0, [sp, #368]
  420be4:	str	x0, [sp, #240]
  420be8:	add	x8, sp, #0x178
  420bec:	mov	x2, x20
  420bf0:	mov	x1, x3
  420bf4:	add	x0, sp, #0xe0
  420bf8:	bl	41da88 <ferror@plt+0x1b1b8>
  420bfc:	ldr	x19, [sp, #376]
  420c00:	ldr	x22, [sp, #384]
  420c04:	str	xzr, [sp, #168]
  420c08:	str	xzr, [sp, #160]
  420c0c:	mov	w27, #0x1                   	// #1
  420c10:	str	x28, [sp, #200]
  420c14:	str	w21, [sp, #208]
  420c18:	b	420248 <ferror@plt+0x1d978>
  420c1c:	mov	w3, w26
  420c20:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a094>
  420c24:	add	x0, x0, #0x610
  420c28:	add	x0, x0, w26, sxtw #1
  420c2c:	ldrb	w0, [x0, #1]
  420c30:	tbnz	w0, #0, 420c8c <ferror@plt+0x1e3bc>
  420c34:	ldr	w1, [sp, #128]
  420c38:	cbz	w1, 41f754 <ferror@plt+0x1ce84>
  420c3c:	ldr	w1, [x28, #36]
  420c40:	and	w1, w1, #0xfffffffd
  420c44:	cmp	w1, #0x14
  420c48:	b.ne	41f8fc <ferror@plt+0x1d02c>  // b.any
  420c4c:	sub	w1, w26, #0x15
  420c50:	cmp	w1, #0x1
  420c54:	b.ls	41f754 <ferror@plt+0x1ce84>  // b.plast
  420c58:	ldr	x1, [sp, #120]
  420c5c:	mov	x0, x27
  420c60:	bl	427e40 <ferror@plt+0x25570>
  420c64:	mov	x5, x0
  420c68:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a094>
  420c6c:	add	x4, x4, #0x410
  420c70:	mov	w3, #0x0                   	// #0
  420c74:	ldr	w2, [sp, #132]
  420c78:	mov	w1, #0x3                   	// #3
  420c7c:	mov	x0, x27
  420c80:	bl	41cbe8 <ferror@plt+0x1a318>
  420c84:	mov	w0, #0x0                   	// #0
  420c88:	b	41f2c8 <ferror@plt+0x1c9f8>
  420c8c:	mov	x26, x27
  420c90:	ldr	x1, [sp, #120]
  420c94:	mov	x0, x26
  420c98:	bl	427e40 <ferror@plt+0x25570>
  420c9c:	mov	x5, x0
  420ca0:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a094>
  420ca4:	add	x4, x4, #0x168
  420ca8:	mov	w3, #0x0                   	// #0
  420cac:	ldr	w2, [sp, #132]
  420cb0:	mov	w1, #0x3                   	// #3
  420cb4:	mov	x0, x26
  420cb8:	bl	41cbe8 <ferror@plt+0x1a318>
  420cbc:	mov	w0, #0x0                   	// #0
  420cc0:	b	41f2c8 <ferror@plt+0x1c9f8>
  420cc4:	ldr	x19, [x19, #8]
  420cc8:	cbz	x19, 41f524 <ferror@plt+0x1cc54>
  420ccc:	ldr	x0, [x27, #136]
  420cd0:	cmp	x20, x0
  420cd4:	b.eq	41f5c8 <ferror@plt+0x1ccf8>  // b.none
  420cd8:	ldrb	w0, [x27, #1150]
  420cdc:	cbnz	w0, 41f5d8 <ferror@plt+0x1cd08>
  420ce0:	ldrb	w0, [x19, #18]
  420ce4:	and	w0, w0, #0x3
  420ce8:	cmp	w0, #0x2
  420cec:	b.eq	41f5f0 <ferror@plt+0x1cd20>  // b.none
  420cf0:	ldrh	w0, [x19, #18]
  420cf4:	tbz	w0, #7, 41f604 <ferror@plt+0x1cd34>
  420cf8:	str	x19, [x27, #432]
  420cfc:	ldrb	w0, [x27, #24]
  420d00:	sub	w0, w0, #0x1
  420d04:	strb	w0, [x27, #24]
  420d08:	ldrb	w0, [x19, #18]
  420d0c:	mov	w1, #0x0                   	// #0
  420d10:	tbz	w0, #1, 420d24 <ferror@plt+0x1e454>
  420d14:	ldrh	w1, [x19, #18]
  420d18:	ubfx	x1, x1, #8, #2
  420d1c:	eor	w1, w1, #0x1
  420d20:	and	w1, w1, #0x1
  420d24:	and	x1, x1, #0xff
  420d28:	mov	w2, #0x0                   	// #0
  420d2c:	mov	w0, #0x0                   	// #0
  420d30:	mov	x3, #0x0                   	// #0
  420d34:	b	420da8 <ferror@plt+0x1e4d8>
  420d38:	str	wzr, [sp, #400]
  420d3c:	b	41f3a0 <ferror@plt+0x1cad0>
  420d40:	ldr	w0, [sp, #128]
  420d44:	cbnz	w0, 420d38 <ferror@plt+0x1e468>
  420d48:	mov	x26, x27
  420d4c:	b	41f298 <ferror@plt+0x1c9c8>
  420d50:	str	wzr, [sp, #400]
  420d54:	ldrb	w0, [x27, #18]
  420d58:	cbnz	w0, 420d6c <ferror@plt+0x1e49c>
  420d5c:	ldrb	w0, [x27, #1154]
  420d60:	cbnz	w0, 41f6a0 <ferror@plt+0x1cdd0>
  420d64:	ldrb	w0, [x27, #1132]
  420d68:	cbnz	w0, 41f6c0 <ferror@plt+0x1cdf0>
  420d6c:	add	x1, sp, #0x178
  420d70:	mov	x0, x27
  420d74:	bl	41baec <ferror@plt+0x1921c>
  420d78:	ldr	w1, [sp, #376]
  420d7c:	mov	w2, #0x0                   	// #0
  420d80:	mov	x3, #0x0                   	// #0
  420d84:	ldr	w0, [sp, #400]
  420d88:	cmp	w0, #0x0
  420d8c:	cset	w0, ne  // ne = any
  420d90:	str	x3, [sp, #424]
  420d94:	str	x1, [sp, #432]
  420d98:	strb	w0, [sp, #440]
  420d9c:	strb	w2, [sp, #441]
  420da0:	ldr	x4, [sp, #440]
  420da4:	str	x4, [sp, #472]
  420da8:	str	x3, [sp, #456]
  420dac:	str	x1, [sp, #464]
  420db0:	strb	w0, [sp, #472]
  420db4:	strb	w2, [sp, #473]
  420db8:	add	x0, sp, #0x280
  420dbc:	ldp	x0, x1, [x0, #-184]
  420dc0:	stp	x0, x1, [x28, #8]
  420dc4:	ldr	x0, [sp, #472]
  420dc8:	str	x0, [x28, #24]
  420dcc:	str	wzr, [sp, #128]
  420dd0:	b	4207fc <ferror@plt+0x1df2c>
  420dd4:	ldr	x2, [x0]
  420dd8:	ldr	x3, [x0, #8]
  420ddc:	ldrb	w4, [x0, #16]
  420de0:	cbnz	w4, 420e14 <ferror@plt+0x1e544>
  420de4:	cmp	x1, #0x40
  420de8:	b.ls	420e30 <ferror@plt+0x1e560>  // b.plast
  420dec:	sub	x1, x1, #0x40
  420df0:	cmp	x1, #0x3f
  420df4:	b.hi	420e14 <ferror@plt+0x1e544>  // b.pmore
  420df8:	sub	w4, w1, #0x1
  420dfc:	lsr	x4, x2, x4
  420e00:	tbz	w4, #0, 420e14 <ferror@plt+0x1e544>
  420e04:	neg	w1, w1
  420e08:	mov	x4, #0xffffffffffffffff    	// #-1
  420e0c:	lsr	x1, x4, x1
  420e10:	orn	x2, x2, x1
  420e14:	str	x2, [x0]
  420e18:	str	x3, [x0, #8]
  420e1c:	ldp	x2, x3, [x0]
  420e20:	stp	x2, x3, [x8]
  420e24:	ldr	x0, [x0, #16]
  420e28:	str	x0, [x8, #16]
  420e2c:	ret
  420e30:	sub	w4, w1, #0x1
  420e34:	lsr	x4, x3, x4
  420e38:	tbz	w4, #0, 420e14 <ferror@plt+0x1e544>
  420e3c:	mov	x2, #0xffffffffffffffff    	// #-1
  420e40:	cmp	x1, #0x3f
  420e44:	b.hi	420e14 <ferror@plt+0x1e544>  // b.pmore
  420e48:	neg	w1, w1
  420e4c:	lsr	x1, x2, x1
  420e50:	orn	x3, x3, x1
  420e54:	b	420e14 <ferror@plt+0x1e544>
  420e58:	stp	x29, x30, [sp, #-16]!
  420e5c:	mov	x29, sp
  420e60:	ldr	x1, [x0, #8]
  420e64:	cbz	x1, 420e7c <ferror@plt+0x1e5ac>
  420e68:	ldr	x0, [x0, #24]
  420e6c:	ldr	x0, [x0]
  420e70:	bl	4467f0 <ferror@plt+0x43f20>
  420e74:	ldp	x29, x30, [sp], #16
  420e78:	ret
  420e7c:	ldr	x0, [x0, #24]
  420e80:	ldr	x0, [x0, #8]
  420e84:	b	420e70 <ferror@plt+0x1e5a0>
  420e88:	stp	x29, x30, [sp, #-32]!
  420e8c:	mov	x29, sp
  420e90:	str	x19, [sp, #16]
  420e94:	mov	x19, x0
  420e98:	ldr	x0, [x0, #48]
  420e9c:	bl	402690 <free@plt>
  420ea0:	ldr	x0, [x19]
  420ea4:	bl	402690 <free@plt>
  420ea8:	ldr	x0, [x19, #8]
  420eac:	bl	402690 <free@plt>
  420eb0:	mov	x0, x19
  420eb4:	bl	402690 <free@plt>
  420eb8:	ldr	x19, [sp, #16]
  420ebc:	ldp	x29, x30, [sp], #32
  420ec0:	ret
  420ec4:	ldr	x0, [x0]
  420ec8:	ldr	x2, [x0, #8]
  420ecc:	cbz	x2, 420f54 <ferror@plt+0x1e684>
  420ed0:	stp	x29, x30, [sp, #-32]!
  420ed4:	mov	x29, sp
  420ed8:	stp	x19, x20, [sp, #16]
  420edc:	mov	x19, x1
  420ee0:	ldr	x20, [x0, #24]
  420ee4:	ldrb	w0, [x20, #210]
  420ee8:	cbnz	w0, 420ef4 <ferror@plt+0x1e624>
  420eec:	ldr	x0, [x20, #56]
  420ef0:	cbz	x0, 420f04 <ferror@plt+0x1e634>
  420ef4:	mov	w0, #0x1                   	// #1
  420ef8:	ldp	x19, x20, [sp, #16]
  420efc:	ldp	x29, x30, [sp], #32
  420f00:	ret
  420f04:	ldrh	w0, [x20, #208]
  420f08:	cmp	w0, #0x1
  420f0c:	b.ne	420ef4 <ferror@plt+0x1e624>  // b.any
  420f10:	ldrb	w0, [x20, #212]
  420f14:	cbnz	w0, 420ef4 <ferror@plt+0x1e624>
  420f18:	ldr	x0, [x1]
  420f1c:	cbz	x0, 420f3c <ferror@plt+0x1e66c>
  420f20:	ldr	x1, [x19]
  420f24:	ldr	x0, [x19, #8]
  420f28:	add	x2, x0, #0x1
  420f2c:	str	x2, [x19, #8]
  420f30:	ldr	x2, [x20, #8]
  420f34:	str	x2, [x1, x0, lsl #3]
  420f38:	b	420ef4 <ferror@plt+0x1e624>
  420f3c:	mov	x1, #0x8                   	// #8
  420f40:	ldr	x0, [x19, #8]
  420f44:	bl	447084 <_obstack_memory_used@@Base+0x118>
  420f48:	str	x0, [x19]
  420f4c:	str	xzr, [x19, #8]
  420f50:	b	420f20 <ferror@plt+0x1e650>
  420f54:	mov	w0, #0x1                   	// #1
  420f58:	ret
  420f5c:	stp	x29, x30, [sp, #-16]!
  420f60:	mov	x29, sp
  420f64:	bl	445944 <ferror@plt+0x43074>
  420f68:	cmp	w0, #0x0
  420f6c:	cset	w0, eq  // eq = none
  420f70:	ldp	x29, x30, [sp], #16
  420f74:	ret
  420f78:	stp	x29, x30, [sp, #-16]!
  420f7c:	mov	x29, sp
  420f80:	ldr	x2, [x0, #8]
  420f84:	cbz	x2, 420fa4 <ferror@plt+0x1e6d4>
  420f88:	ldr	x0, [x0, #24]
  420f8c:	ldr	x0, [x0]
  420f90:	bl	445944 <ferror@plt+0x43074>
  420f94:	cmp	w0, #0x0
  420f98:	cset	w0, eq  // eq = none
  420f9c:	ldp	x29, x30, [sp], #16
  420fa0:	ret
  420fa4:	ldr	x0, [x0, #24]
  420fa8:	ldr	x0, [x0, #8]
  420fac:	b	420f90 <ferror@plt+0x1e6c0>
  420fb0:	stp	x29, x30, [sp, #-64]!
  420fb4:	mov	x29, sp
  420fb8:	stp	x19, x20, [sp, #16]
  420fbc:	stp	x21, x22, [sp, #32]
  420fc0:	str	x23, [sp, #48]
  420fc4:	mov	x23, x0
  420fc8:	mov	x22, x1
  420fcc:	ldr	w19, [x1, #16]
  420fd0:	bl	4022b0 <strlen@plt>
  420fd4:	mov	x21, x0
  420fd8:	add	x0, x19, #0x2
  420fdc:	add	x0, x0, x21
  420fe0:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  420fe4:	mov	x20, x0
  420fe8:	mov	x2, x19
  420fec:	ldr	x1, [x22, #8]
  420ff0:	bl	402260 <memcpy@plt>
  420ff4:	cbz	x19, 421014 <ferror@plt+0x1e744>
  420ff8:	add	x0, x20, x19
  420ffc:	ldurb	w0, [x0, #-1]
  421000:	cmp	w0, #0x2f
  421004:	b.eq	421014 <ferror@plt+0x1e744>  // b.none
  421008:	mov	w0, #0x2f                  	// #47
  42100c:	strb	w0, [x20, x19]
  421010:	add	x19, x19, #0x1
  421014:	add	x2, x21, #0x1
  421018:	mov	x1, x23
  42101c:	add	x0, x20, x19
  421020:	bl	402260 <memcpy@plt>
  421024:	mov	x0, x20
  421028:	ldp	x19, x20, [sp, #16]
  42102c:	ldp	x21, x22, [sp, #32]
  421030:	ldr	x23, [sp, #48]
  421034:	ldp	x29, x30, [sp], #64
  421038:	ret
  42103c:	stp	x29, x30, [sp, #-32]!
  421040:	mov	x29, sp
  421044:	str	x19, [sp, #16]
  421048:	mov	x19, x0
  42104c:	ldr	x0, [x0, #312]
  421050:	ldr	w0, [x0]
  421054:	cmp	w0, #0x7f
  421058:	b.eq	421088 <ferror@plt+0x1e7b8>  // b.none
  42105c:	ldr	x0, [x19, #312]
  421060:	ldr	w1, [x0]
  421064:	add	w2, w1, #0x1
  421068:	str	w2, [x0]
  42106c:	ubfiz	x1, x1, #5, #32
  421070:	add	x1, x1, #0x10
  421074:	ldr	x0, [x19, #312]
  421078:	add	x0, x0, x1
  42107c:	ldr	x19, [sp, #16]
  421080:	ldp	x29, x30, [sp], #32
  421084:	ret
  421088:	mov	x0, #0xff0                 	// #4080
  42108c:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  421090:	str	wzr, [x0]
  421094:	ldr	x1, [x19, #312]
  421098:	str	x1, [x0, #8]
  42109c:	str	x0, [x19, #312]
  4210a0:	b	42105c <ferror@plt+0x1e78c>
  4210a4:	stp	x29, x30, [sp, #-64]!
  4210a8:	mov	x29, sp
  4210ac:	stp	x19, x20, [sp, #16]
  4210b0:	stp	x21, x22, [sp, #32]
  4210b4:	str	x23, [sp, #48]
  4210b8:	mov	x21, x0
  4210bc:	mov	x20, x1
  4210c0:	mov	w23, w2
  4210c4:	ldr	x19, [x0, #304]
  4210c8:	mov	x0, x1
  4210cc:	bl	4467f0 <ferror@plt+0x43f20>
  4210d0:	mov	w3, #0x1                   	// #1
  4210d4:	mov	w2, w0
  4210d8:	mov	x1, x20
  4210dc:	mov	x0, x19
  4210e0:	bl	4463b0 <ferror@plt+0x43ae0>
  4210e4:	mov	x22, x0
  4210e8:	ldr	x3, [x0]
  4210ec:	cbz	x3, 421100 <ferror@plt+0x1e830>
  4210f0:	ldr	x4, [x3, #8]
  4210f4:	cbz	x4, 421170 <ferror@plt+0x1e8a0>
  4210f8:	ldr	x3, [x3]
  4210fc:	cbnz	x3, 4210f0 <ferror@plt+0x1e820>
  421100:	mov	x1, #0x40                  	// #64
  421104:	mov	x0, #0x1                   	// #1
  421108:	bl	447084 <_obstack_memory_used@@Base+0x118>
  42110c:	mov	x19, x0
  421110:	ldr	x0, [x21, #200]
  421114:	str	x0, [x19]
  421118:	str	x20, [x19, #8]
  42111c:	mov	x0, x20
  421120:	bl	4022b0 <strlen@plt>
  421124:	str	w0, [x19, #16]
  421128:	strb	w23, [x19, #20]
  42112c:	str	xzr, [x19, #40]
  421130:	mov	x0, x21
  421134:	bl	42103c <ferror@plt+0x1e76c>
  421138:	ldr	x1, [x22]
  42113c:	str	x1, [x0]
  421140:	str	xzr, [x0, #8]
  421144:	ldr	x1, [x21, #40]
  421148:	ldr	w1, [x1, #56]
  42114c:	str	w1, [x0, #16]
  421150:	str	x19, [x0, #24]
  421154:	str	x0, [x22]
  421158:	mov	x0, x19
  42115c:	ldp	x19, x20, [sp, #16]
  421160:	ldp	x21, x22, [sp, #32]
  421164:	ldr	x23, [sp, #48]
  421168:	ldp	x29, x30, [sp], #64
  42116c:	ret
  421170:	ldr	x19, [x3, #24]
  421174:	b	421158 <ferror@plt+0x1e888>
  421178:	stp	x29, x30, [sp, #-80]!
  42117c:	mov	x29, sp
  421180:	stp	x19, x20, [sp, #16]
  421184:	stp	x21, x22, [sp, #32]
  421188:	mov	w20, w0
  42118c:	mov	x21, x1
  421190:	mov	x0, #0x15                  	// #21
  421194:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  421198:	mov	x22, x0
  42119c:	and	x1, x20, #0xff
  4211a0:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1f094>
  4211a4:	add	x0, x0, #0xa68
  4211a8:	ldrh	w0, [x0, x1, lsl #1]
  4211ac:	mov	x19, x22
  4211b0:	tst	w0, #0xc00
  4211b4:	b.ne	4211f0 <ferror@plt+0x1e920>  // b.any
  4211b8:	stp	x23, x24, [sp, #48]
  4211bc:	str	x25, [sp, #64]
  4211c0:	strb	w20, [x19], #1
  4211c4:	mov	w23, #0x14                  	// #20
  4211c8:	adrp	x24, 466000 <_obstack_memory_used@@Base+0x1f094>
  4211cc:	add	x24, x24, #0xa68
  4211d0:	b	421238 <ferror@plt+0x1e968>
  4211d4:	mov	x0, x21
  4211d8:	bl	4028a0 <__uflow@plt>
  4211dc:	mov	w20, w0
  4211e0:	cmn	w0, #0x1
  4211e4:	b.ne	421254 <ferror@plt+0x1e984>  // b.any
  4211e8:	ldp	x23, x24, [sp, #48]
  4211ec:	ldr	x25, [sp, #64]
  4211f0:	strb	wzr, [x19]
  4211f4:	mov	x1, x21
  4211f8:	mov	w0, w20
  4211fc:	bl	4026a0 <ungetc@plt>
  421200:	mov	x0, x22
  421204:	ldp	x19, x20, [sp, #16]
  421208:	ldp	x21, x22, [sp, #32]
  42120c:	ldp	x29, x30, [sp], #80
  421210:	ret
  421214:	lsl	w25, w23, #1
  421218:	add	w1, w25, #0x1
  42121c:	sxtw	x1, w1
  421220:	mov	x0, x22
  421224:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  421228:	mov	x22, x0
  42122c:	add	x19, x0, w23, sxtw
  421230:	mov	w23, w25
  421234:	strb	w20, [x19], #1
  421238:	ldr	x2, [x21, #8]
  42123c:	ldr	x0, [x21, #16]
  421240:	cmp	x2, x0
  421244:	b.cs	4211d4 <ferror@plt+0x1e904>  // b.hs, b.nlast
  421248:	add	x0, x2, #0x1
  42124c:	str	x0, [x21, #8]
  421250:	ldrb	w20, [x2]
  421254:	and	x0, x20, #0xff
  421258:	ldrh	w0, [x24, x0, lsl #1]
  42125c:	tst	w0, #0xc00
  421260:	b.ne	421274 <ferror@plt+0x1e9a4>  // b.any
  421264:	sub	x0, x19, x22
  421268:	cmp	x0, w23, sxtw
  42126c:	b.ne	421234 <ferror@plt+0x1e964>  // b.any
  421270:	b	421214 <ferror@plt+0x1e944>
  421274:	ldp	x23, x24, [sp, #48]
  421278:	ldr	x25, [sp, #64]
  42127c:	b	4211f0 <ferror@plt+0x1e920>
  421280:	stp	x29, x30, [sp, #-96]!
  421284:	mov	x29, sp
  421288:	stp	x19, x20, [sp, #16]
  42128c:	stp	x21, x22, [sp, #32]
  421290:	stp	x23, x24, [sp, #48]
  421294:	stp	x25, x26, [sp, #64]
  421298:	str	x27, [sp, #80]
  42129c:	mov	x21, x0
  4212a0:	ldr	w19, [x0, #16]
  4212a4:	add	x0, x19, #0x1b
  4212a8:	and	x0, x0, #0x1fffffff0
  4212ac:	sub	sp, sp, x0
  4212b0:	mov	x20, sp
  4212b4:	mov	x2, x19
  4212b8:	ldr	x1, [x21, #8]
  4212bc:	mov	x0, x20
  4212c0:	bl	402260 <memcpy@plt>
  4212c4:	cbz	x19, 4212e4 <ferror@plt+0x1ea14>
  4212c8:	add	x0, x20, x19
  4212cc:	ldurb	w0, [x0, #-1]
  4212d0:	cmp	w0, #0x2f
  4212d4:	b.eq	4212e4 <ferror@plt+0x1ea14>  // b.none
  4212d8:	mov	w0, #0x2f                  	// #47
  4212dc:	strb	w0, [x20, x19]
  4212e0:	add	x19, x19, #0x1
  4212e4:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a094>
  4212e8:	add	x0, x0, #0x650
  4212ec:	add	x1, x20, x19
  4212f0:	ldr	x2, [x0]
  4212f4:	str	x2, [x20, x19]
  4212f8:	ldur	w0, [x0, #7]
  4212fc:	stur	w0, [x1, #7]
  421300:	adrp	x1, 460000 <_obstack_memory_used@@Base+0x19094>
  421304:	add	x1, x1, #0xdb8
  421308:	mov	x0, x20
  42130c:	bl	445a9c <ferror@plt+0x431cc>
  421310:	mov	x19, x0
  421314:	mov	x0, #0x48                  	// #72
  421318:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  42131c:	str	x0, [x21, #32]
  421320:	mov	x23, #0x0                   	// #0
  421324:	cbz	x19, 421358 <ferror@plt+0x1ea88>
  421328:	mov	x22, #0x0                   	// #0
  42132c:	mov	x24, #0x9                   	// #9
  421330:	adrp	x20, 466000 <_obstack_memory_used@@Base+0x1f094>
  421334:	add	x20, x20, #0xa68
  421338:	b	4213f8 <ferror@plt+0x1eb28>
  42133c:	mov	x0, x19
  421340:	bl	4028a0 <__uflow@plt>
  421344:	mov	w25, w0
  421348:	cmn	w0, #0x1
  42134c:	b.ne	421414 <ferror@plt+0x1eb44>  // b.any
  421350:	mov	x0, x19
  421354:	bl	4023c0 <fclose@plt>
  421358:	ldr	x0, [x21, #32]
  42135c:	str	xzr, [x0, x23, lsl #3]
  421360:	mov	sp, x29
  421364:	ldp	x19, x20, [sp, #16]
  421368:	ldp	x21, x22, [sp, #32]
  42136c:	ldp	x23, x24, [sp, #48]
  421370:	ldp	x25, x26, [sp, #64]
  421374:	ldr	x27, [sp, #80]
  421378:	ldp	x29, x30, [sp], #96
  42137c:	ret
  421380:	add	x24, x24, #0x8
  421384:	lsl	x1, x24, #3
  421388:	ldr	x0, [x21, #32]
  42138c:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  421390:	str	x0, [x21, #32]
  421394:	b	421430 <ferror@plt+0x1eb60>
  421398:	mov	x0, x19
  42139c:	bl	4028a0 <__uflow@plt>
  4213a0:	cmn	w0, #0x1
  4213a4:	b.ne	421460 <ferror@plt+0x1eb90>  // b.any
  4213a8:	mov	x1, x19
  4213ac:	bl	421178 <ferror@plt+0x1e8a8>
  4213b0:	mov	x25, x0
  4213b4:	ldrb	w0, [x0]
  4213b8:	cmp	w0, #0x2f
  4213bc:	b.ne	421470 <ferror@plt+0x1eba0>  // b.any
  4213c0:	ldr	x0, [x21, #32]
  4213c4:	add	x0, x0, x22
  4213c8:	str	x25, [x0, #8]
  4213cc:	ldr	x1, [x19, #8]
  4213d0:	ldr	x0, [x19, #16]
  4213d4:	cmp	x1, x0
  4213d8:	b.cs	421494 <ferror@plt+0x1ebc4>  // b.hs, b.nlast
  4213dc:	add	x0, x1, #0x1
  4213e0:	str	x0, [x19, #8]
  4213e4:	ldrb	w0, [x1]
  4213e8:	cmp	w0, #0xa
  4213ec:	ccmn	w0, #0x1, #0x4, ne  // ne = any
  4213f0:	b.ne	4213cc <ferror@plt+0x1eafc>  // b.any
  4213f4:	add	x22, x22, #0x10
  4213f8:	ldr	x0, [x19, #8]
  4213fc:	ldr	x1, [x19, #16]
  421400:	cmp	x0, x1
  421404:	b.cs	42133c <ferror@plt+0x1ea6c>  // b.hs, b.nlast
  421408:	add	x1, x0, #0x1
  42140c:	str	x1, [x19, #8]
  421410:	ldrb	w25, [x0]
  421414:	and	x0, x25, #0xff
  421418:	ldrh	w0, [x20, x0, lsl #1]
  42141c:	tst	w0, #0xc00
  421420:	b.ne	4213f8 <ferror@plt+0x1eb28>  // b.any
  421424:	add	x23, x23, #0x2
  421428:	cmp	x23, x24
  42142c:	b.hi	421380 <ferror@plt+0x1eab0>  // b.pmore
  421430:	ldr	x26, [x21, #32]
  421434:	mov	x1, x19
  421438:	mov	w0, w25
  42143c:	bl	421178 <ferror@plt+0x1e8a8>
  421440:	str	x0, [x26, x22]
  421444:	ldr	x1, [x19, #8]
  421448:	ldr	x0, [x19, #16]
  42144c:	cmp	x1, x0
  421450:	b.cs	421398 <ferror@plt+0x1eac8>  // b.hs, b.nlast
  421454:	add	x0, x1, #0x1
  421458:	str	x0, [x19, #8]
  42145c:	ldrb	w0, [x1]
  421460:	and	x1, x0, #0xff
  421464:	ldrh	w1, [x20, x1, lsl #1]
  421468:	tbnz	w1, #0, 421444 <ferror@plt+0x1eb74>
  42146c:	b	4213a8 <ferror@plt+0x1ead8>
  421470:	add	x26, x22, #0x8
  421474:	ldr	x27, [x21, #32]
  421478:	mov	x1, x21
  42147c:	mov	x0, x25
  421480:	bl	420fb0 <ferror@plt+0x1e6e0>
  421484:	str	x0, [x27, x26]
  421488:	mov	x0, x25
  42148c:	bl	402690 <free@plt>
  421490:	b	4213cc <ferror@plt+0x1eafc>
  421494:	mov	x0, x19
  421498:	bl	4028a0 <__uflow@plt>
  42149c:	b	4213e8 <ferror@plt+0x1eb18>
  4214a0:	stp	x29, x30, [sp, #-16]!
  4214a4:	mov	x29, sp
  4214a8:	ldr	x1, [x1]
  4214ac:	ldr	x0, [x0]
  4214b0:	bl	402620 <strcmp@plt>
  4214b4:	ldp	x29, x30, [sp], #16
  4214b8:	ret
  4214bc:	stp	x29, x30, [sp, #-32]!
  4214c0:	mov	x29, sp
  4214c4:	str	x19, [sp, #16]
  4214c8:	mov	x19, x0
  4214cc:	ldr	x0, [x0, #8]
  4214d0:	ldrb	w1, [x0]
  4214d4:	cbnz	w1, 421508 <ferror@plt+0x1ec38>
  4214d8:	str	wzr, [x19, #200]
  4214dc:	add	x2, x19, #0x48
  4214e0:	mov	w0, #0x0                   	// #0
  4214e4:	bl	402790 <__fxstat@plt>
  4214e8:	cbnz	w0, 42155c <ferror@plt+0x1ec8c>
  4214ec:	ldr	w0, [x19, #88]
  4214f0:	and	w0, w0, #0xf000
  4214f4:	cmp	w0, #0x4, lsl #12
  4214f8:	b.eq	421550 <ferror@plt+0x1ec80>  // b.none
  4214fc:	str	wzr, [x19, #204]
  421500:	mov	w0, #0x1                   	// #1
  421504:	b	421544 <ferror@plt+0x1ec74>
  421508:	mov	w2, #0x1b6                 	// #438
  42150c:	mov	w1, #0x100                 	// #256
  421510:	bl	402420 <open@plt>
  421514:	mov	w1, w0
  421518:	str	w0, [x19, #200]
  42151c:	cmn	w0, #0x1
  421520:	b.ne	4214dc <ferror@plt+0x1ec0c>  // b.any
  421524:	bl	402810 <__errno_location@plt>
  421528:	ldr	w1, [x0]
  42152c:	cmp	w1, #0x14
  421530:	b.eq	421570 <ferror@plt+0x1eca0>  // b.none
  421534:	bl	402810 <__errno_location@plt>
  421538:	ldr	w0, [x0]
  42153c:	str	w0, [x19, #204]
  421540:	mov	w0, #0x0                   	// #0
  421544:	ldr	x19, [sp, #16]
  421548:	ldp	x29, x30, [sp], #32
  42154c:	ret
  421550:	bl	402810 <__errno_location@plt>
  421554:	mov	w1, #0x2                   	// #2
  421558:	str	w1, [x0]
  42155c:	ldr	w0, [x19, #200]
  421560:	bl	402540 <close@plt>
  421564:	mov	w0, #0xffffffff            	// #-1
  421568:	str	w0, [x19, #200]
  42156c:	b	421534 <ferror@plt+0x1ec64>
  421570:	mov	w1, #0x2                   	// #2
  421574:	str	w1, [x0]
  421578:	b	421534 <ferror@plt+0x1ec64>
  42157c:	stp	x29, x30, [sp, #-96]!
  421580:	mov	x29, sp
  421584:	stp	x19, x20, [sp, #16]
  421588:	stp	x21, x22, [sp, #32]
  42158c:	stp	x23, x24, [sp, #48]
  421590:	stp	x25, x26, [sp, #64]
  421594:	mov	x20, x0
  421598:	mov	x19, x1
  42159c:	mov	x23, x2
  4215a0:	ldr	x26, [x1, #8]
  4215a4:	str	x2, [x1, #8]
  4215a8:	mov	x0, x1
  4215ac:	bl	4214bc <ferror@plt+0x1ebec>
  4215b0:	ands	w22, w0, #0xff
  4215b4:	b.eq	421664 <ferror@plt+0x1ed94>  // b.none
  4215b8:	stp	x27, x28, [sp, #80]
  4215bc:	ldr	x3, [x20, #968]
  4215c0:	ldr	w2, [x19, #200]
  4215c4:	mov	x1, x23
  4215c8:	mov	x0, x20
  4215cc:	blr	x3
  4215d0:	and	w22, w0, #0x1
  4215d4:	mov	w27, w22
  4215d8:	tbz	w0, #0, 421684 <ferror@plt+0x1edb4>
  4215dc:	ldrb	w0, [x20, #1131]
  4215e0:	cbz	w0, 4216a4 <ferror@plt+0x1edd4>
  4215e4:	ldr	x0, [x20, #40]
  4215e8:	ldr	w0, [x0, #48]
  4215ec:	cmp	w0, #0x1
  4215f0:	b.ls	421638 <ferror@plt+0x1ed68>  // b.plast
  4215f4:	mov	w21, #0x1                   	// #1
  4215f8:	adrp	x24, 488000 <_obstack_memory_used@@Base+0x41094>
  4215fc:	mov	w25, #0x2e                  	// #46
  421600:	mov	w28, #0x2e                  	// #46
  421604:	ldr	x0, [x24, #1320]
  421608:	ldr	x1, [x0, #40]
  42160c:	ldr	x2, [x0, #48]
  421610:	cmp	x1, x2
  421614:	b.cs	421698 <ferror@plt+0x1edc8>  // b.hs, b.nlast
  421618:	add	x2, x1, #0x1
  42161c:	str	x2, [x0, #40]
  421620:	strb	w25, [x1]
  421624:	add	w21, w21, #0x1
  421628:	ldr	x0, [x20, #40]
  42162c:	ldr	w0, [x0, #48]
  421630:	cmp	w0, w21
  421634:	b.hi	421604 <ferror@plt+0x1ed34>  // b.pmore
  421638:	cmp	w27, #0x0
  42163c:	mov	x3, x23
  421640:	mov	w2, #0x21                  	// #33
  421644:	mov	w0, #0x78                  	// #120
  421648:	csel	w2, w2, w0, ne  // ne = any
  42164c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a094>
  421650:	add	x1, x1, #0x660
  421654:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  421658:	ldr	x0, [x0, #1320]
  42165c:	bl	402890 <fprintf@plt>
  421660:	ldp	x27, x28, [sp, #80]
  421664:	str	x26, [x19, #8]
  421668:	mov	w0, w22
  42166c:	ldp	x19, x20, [sp, #16]
  421670:	ldp	x21, x22, [sp, #32]
  421674:	ldp	x23, x24, [sp, #48]
  421678:	ldp	x25, x26, [sp, #64]
  42167c:	ldp	x29, x30, [sp], #96
  421680:	ret
  421684:	ldr	w0, [x19, #200]
  421688:	bl	402540 <close@plt>
  42168c:	mov	w0, #0xffffffff            	// #-1
  421690:	str	w0, [x19, #200]
  421694:	b	4215dc <ferror@plt+0x1ed0c>
  421698:	mov	w1, w28
  42169c:	bl	4025a0 <__overflow@plt>
  4216a0:	b	421624 <ferror@plt+0x1ed54>
  4216a4:	ldp	x27, x28, [sp, #80]
  4216a8:	b	421664 <ferror@plt+0x1ed94>
  4216ac:	stp	x29, x30, [sp, #-64]!
  4216b0:	mov	x29, sp
  4216b4:	stp	x19, x20, [sp, #16]
  4216b8:	stp	x21, x22, [sp, #32]
  4216bc:	stp	x23, x24, [sp, #48]
  4216c0:	mov	x19, x0
  4216c4:	mov	x20, x1
  4216c8:	mov	w22, w2
  4216cc:	mov	w23, w3
  4216d0:	ldr	x0, [x0, #40]
  4216d4:	ldr	w0, [x0, #60]
  4216d8:	mov	w21, #0x0                   	// #0
  4216dc:	cmp	w0, #0x1
  4216e0:	b.ls	4216f0 <ferror@plt+0x1ee20>  // b.plast
  4216e4:	ldr	x0, [x19]
  4216e8:	cbz	x0, 4216f0 <ferror@plt+0x1ee20>
  4216ec:	ldrb	w21, [x0, #106]
  4216f0:	ldrb	w0, [x19, #26]
  4216f4:	cbnz	w0, 421748 <ferror@plt+0x1ee78>
  4216f8:	ldr	w24, [x19, #1200]
  4216fc:	bl	402810 <__errno_location@plt>
  421700:	ldr	w1, [x20, #204]
  421704:	str	w1, [x0]
  421708:	orr	w21, w21, w22
  42170c:	cmp	w21, #0x0
  421710:	cset	w0, ne  // ne = any
  421714:	cmp	w24, w0
  421718:	b.le	421794 <ferror@plt+0x1eec4>
  42171c:	cmp	w1, #0x2
  421720:	cset	w1, eq  // eq = none
  421724:	ldrb	w0, [x19, #1204]
  421728:	tst	w1, w0
  42172c:	b.ne	42175c <ferror@plt+0x1ee8c>  // b.any
  421730:	ldr	x2, [x20, #8]
  421734:	cbz	x2, 4217c0 <ferror@plt+0x1eef0>
  421738:	mov	w3, w23
  42173c:	mov	w1, #0x6                   	// #6
  421740:	mov	x0, x19
  421744:	bl	41cf6c <ferror@plt+0x1a69c>
  421748:	ldp	x19, x20, [sp, #16]
  42174c:	ldp	x21, x22, [sp, #32]
  421750:	ldp	x23, x24, [sp, #48]
  421754:	ldp	x29, x30, [sp], #64
  421758:	ret
  42175c:	ldr	x1, [x20]
  421760:	ldr	x0, [x19, #712]
  421764:	bl	42f31c <ferror@plt+0x2ca4c>
  421768:	ldrb	w0, [x19, #1207]
  42176c:	cbz	w0, 421748 <ferror@plt+0x1ee78>
  421770:	ldr	x2, [x20, #8]
  421774:	cbz	x2, 42178c <ferror@plt+0x1eebc>
  421778:	mov	w3, w23
  42177c:	mov	w1, #0x6                   	// #6
  421780:	mov	x0, x19
  421784:	bl	41cf6c <ferror@plt+0x1a69c>
  421788:	b	421748 <ferror@plt+0x1ee78>
  42178c:	ldr	x2, [x20]
  421790:	b	421778 <ferror@plt+0x1eea8>
  421794:	ldr	w0, [x19, #1200]
  421798:	cbz	w0, 421730 <ferror@plt+0x1ee60>
  42179c:	ldrb	w0, [x19, #1207]
  4217a0:	cbnz	w0, 421730 <ferror@plt+0x1ee60>
  4217a4:	ldr	x2, [x20, #8]
  4217a8:	cbz	x2, 4217c8 <ferror@plt+0x1eef8>
  4217ac:	mov	w3, w23
  4217b0:	mov	w1, #0x0                   	// #0
  4217b4:	mov	x0, x19
  4217b8:	bl	41cf6c <ferror@plt+0x1a69c>
  4217bc:	b	421748 <ferror@plt+0x1ee78>
  4217c0:	ldr	x2, [x20]
  4217c4:	b	421738 <ferror@plt+0x1ee68>
  4217c8:	ldr	x2, [x20]
  4217cc:	b	4217ac <ferror@plt+0x1eedc>
  4217d0:	stp	x29, x30, [sp, #-16]!
  4217d4:	mov	x29, sp
  4217d8:	mov	x2, #0x20                  	// #32
  4217dc:	bl	4025e0 <memcmp@plt>
  4217e0:	ldp	x29, x30, [sp], #16
  4217e4:	ret
  4217e8:	stp	x29, x30, [sp, #-96]!
  4217ec:	mov	x29, sp
  4217f0:	stp	x19, x20, [sp, #16]
  4217f4:	ldrb	w20, [x1, #213]
  4217f8:	cbnz	w20, 421974 <ferror@plt+0x1f0a4>
  4217fc:	stp	x23, x24, [sp, #48]
  421800:	stp	x25, x26, [sp, #64]
  421804:	mov	x23, x0
  421808:	mov	x19, x1
  42180c:	mov	w24, w2
  421810:	ldrb	w25, [x1, #211]
  421814:	cbnz	w25, 4219d4 <ferror@plt+0x1f104>
  421818:	ldr	w0, [x1, #204]
  42181c:	mov	w20, w25
  421820:	cbnz	w0, 4219e0 <ferror@plt+0x1f110>
  421824:	ldr	w0, [x1, #200]
  421828:	cmn	w0, #0x1
  42182c:	b.eq	4218ac <ferror@plt+0x1efdc>  // b.none
  421830:	ldr	w26, [x19, #88]
  421834:	and	w26, w26, #0xf000
  421838:	cmp	w26, #0x6, lsl #12
  42183c:	b.eq	4218dc <ferror@plt+0x1f00c>  // b.none
  421840:	stp	x21, x22, [sp, #32]
  421844:	str	x27, [sp, #80]
  421848:	cmp	w26, #0x8, lsl #12
  42184c:	cset	w27, eq  // eq = none
  421850:	mov	x20, #0x2000                	// #8192
  421854:	b.eq	4218fc <ferror@plt+0x1f02c>  // b.none
  421858:	add	x0, x20, #0x10
  42185c:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  421860:	mov	x21, x0
  421864:	mov	x22, #0x0                   	// #0
  421868:	sub	x2, x20, x22
  42186c:	add	x1, x21, x22
  421870:	ldr	w0, [x19, #200]
  421874:	bl	402750 <read@plt>
  421878:	cmp	x0, #0x0
  42187c:	b.le	421904 <ferror@plt+0x1f034>
  421880:	add	x22, x22, x0
  421884:	cmp	x20, x22
  421888:	b.ne	421868 <ferror@plt+0x1ef98>  // b.any
  42188c:	cmp	w26, #0x8, lsl #12
  421890:	b.eq	4219cc <ferror@plt+0x1f0fc>  // b.none
  421894:	lsl	x20, x20, #1
  421898:	add	x1, x20, #0x10
  42189c:	mov	x0, x21
  4218a0:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  4218a4:	mov	x21, x0
  4218a8:	b	421868 <ferror@plt+0x1ef98>
  4218ac:	mov	x0, x1
  4218b0:	bl	4214bc <ferror@plt+0x1ebec>
  4218b4:	ands	w20, w0, #0xff
  4218b8:	b.ne	421830 <ferror@plt+0x1ef60>  // b.any
  4218bc:	mov	w3, w24
  4218c0:	mov	w2, #0x0                   	// #0
  4218c4:	mov	x1, x19
  4218c8:	mov	x0, x23
  4218cc:	bl	4216ac <ferror@plt+0x1eddc>
  4218d0:	ldp	x23, x24, [sp, #48]
  4218d4:	ldp	x25, x26, [sp, #64]
  4218d8:	b	421974 <ferror@plt+0x1f0a4>
  4218dc:	ldr	x4, [x19, #8]
  4218e0:	adrp	x3, 461000 <_obstack_memory_used@@Base+0x1a094>
  4218e4:	add	x3, x3, #0x668
  4218e8:	mov	w2, w24
  4218ec:	mov	w1, #0x3                   	// #3
  4218f0:	mov	x0, x23
  4218f4:	bl	41cdd4 <ferror@plt+0x1a504>
  4218f8:	b	42194c <ferror@plt+0x1f07c>
  4218fc:	ldr	x20, [x19, #120]
  421900:	b	421858 <ferror@plt+0x1ef88>
  421904:	tbnz	x0, #63, 421984 <ferror@plt+0x1f0b4>
  421908:	cmp	w27, #0x0
  42190c:	ccmp	x22, x20, #0x4, ne  // ne = any
  421910:	b.ne	4219ac <ferror@plt+0x1f0dc>  // b.any
  421914:	add	x6, x19, #0x78
  421918:	add	x5, x19, #0x30
  42191c:	mov	x4, x22
  421920:	add	x3, x20, #0x10
  421924:	mov	x2, x21
  421928:	ldr	x1, [x23, #1184]
  42192c:	mov	x0, x23
  421930:	bl	415d2c <ferror@plt+0x1345c>
  421934:	str	x0, [x19, #40]
  421938:	mov	w0, #0x1                   	// #1
  42193c:	strb	w0, [x19, #213]
  421940:	mov	w25, #0x1                   	// #1
  421944:	ldp	x21, x22, [sp, #32]
  421948:	ldr	x27, [sp, #80]
  42194c:	eor	w25, w25, #0x1
  421950:	strb	w25, [x19, #211]
  421954:	ldr	w0, [x19, #200]
  421958:	bl	402540 <close@plt>
  42195c:	mov	w0, #0xffffffff            	// #-1
  421960:	str	w0, [x19, #200]
  421964:	ldrb	w20, [x19, #211]
  421968:	eor	w20, w20, #0x1
  42196c:	ldp	x23, x24, [sp, #48]
  421970:	ldp	x25, x26, [sp, #64]
  421974:	mov	w0, w20
  421978:	ldp	x19, x20, [sp, #16]
  42197c:	ldp	x29, x30, [sp], #96
  421980:	ret
  421984:	mov	w3, w24
  421988:	ldr	x2, [x19, #8]
  42198c:	mov	w1, #0x3                   	// #3
  421990:	mov	x0, x23
  421994:	bl	41cf6c <ferror@plt+0x1a69c>
  421998:	mov	x0, x21
  42199c:	bl	402690 <free@plt>
  4219a0:	ldp	x21, x22, [sp, #32]
  4219a4:	ldr	x27, [sp, #80]
  4219a8:	b	42194c <ferror@plt+0x1f07c>
  4219ac:	ldr	x4, [x19, #8]
  4219b0:	adrp	x3, 461000 <_obstack_memory_used@@Base+0x1a094>
  4219b4:	add	x3, x3, #0x680
  4219b8:	mov	w2, w24
  4219bc:	mov	w1, #0x0                   	// #0
  4219c0:	mov	x0, x23
  4219c4:	bl	41cdd4 <ferror@plt+0x1a504>
  4219c8:	b	421914 <ferror@plt+0x1f044>
  4219cc:	mov	x20, x22
  4219d0:	b	421914 <ferror@plt+0x1f044>
  4219d4:	ldp	x23, x24, [sp, #48]
  4219d8:	ldp	x25, x26, [sp, #64]
  4219dc:	b	421974 <ferror@plt+0x1f0a4>
  4219e0:	ldp	x23, x24, [sp, #48]
  4219e4:	ldp	x25, x26, [sp, #64]
  4219e8:	b	421974 <ferror@plt+0x1f0a4>
  4219ec:	stp	x29, x30, [sp, #-48]!
  4219f0:	mov	x29, sp
  4219f4:	stp	x19, x20, [sp, #16]
  4219f8:	mov	x19, x0
  4219fc:	ldrb	w0, [x1]
  421a00:	add	x20, x19, #0xd8
  421a04:	cmp	w0, #0x2f
  421a08:	b.eq	421a2c <ferror@plt+0x1f15c>  // b.none
  421a0c:	ldr	x0, [x19]
  421a10:	cbz	x0, 421a3c <ferror@plt+0x1f16c>
  421a14:	ldr	x20, [x0, #80]
  421a18:	cmp	w3, #0x1
  421a1c:	b.eq	421a44 <ferror@plt+0x1f174>  // b.none
  421a20:	cbz	w2, 421a60 <ferror@plt+0x1f190>
  421a24:	ldr	x20, [x19, #208]
  421a28:	cbz	x20, 421afc <ferror@plt+0x1f22c>
  421a2c:	mov	x0, x20
  421a30:	ldp	x19, x20, [sp, #16]
  421a34:	ldp	x29, x30, [sp], #48
  421a38:	ret
  421a3c:	ldr	x20, [x19, #288]
  421a40:	b	421a18 <ferror@plt+0x1f148>
  421a44:	ldr	x0, [x20, #64]
  421a48:	cbz	x0, 421b18 <ferror@plt+0x1f248>
  421a4c:	add	x3, x19, #0xd8
  421a50:	cmp	x0, x3
  421a54:	b.eq	421b18 <ferror@plt+0x1f248>  // b.none
  421a58:	ldr	x20, [x0]
  421a5c:	b	421a28 <ferror@plt+0x1f158>
  421a60:	cmp	w3, #0x3
  421a64:	b.eq	421a78 <ferror@plt+0x1f1a8>  // b.none
  421a68:	ldrb	w0, [x19, #416]
  421a6c:	cbz	w0, 421a94 <ferror@plt+0x1f1c4>
  421a70:	ldr	x20, [x19, #200]
  421a74:	b	421a28 <ferror@plt+0x1f158>
  421a78:	mov	w2, #0x0                   	// #0
  421a7c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a094>
  421a80:	add	x1, x1, #0x6a0
  421a84:	mov	x0, x19
  421a88:	bl	4210a4 <ferror@plt+0x1e7d4>
  421a8c:	mov	x20, x0
  421a90:	b	421a2c <ferror@plt+0x1f15c>
  421a94:	ldr	x0, [x20, #24]
  421a98:	cbz	x0, 421ac0 <ferror@plt+0x1f1f0>
  421a9c:	ldr	x1, [x20, #24]
  421aa0:	ldr	x0, [x19]
  421aa4:	mov	w2, #0x0                   	// #0
  421aa8:	cbz	x0, 421ab0 <ferror@plt+0x1f1e0>
  421aac:	ldrb	w2, [x0, #106]
  421ab0:	mov	x0, x19
  421ab4:	bl	4210a4 <ferror@plt+0x1e7d4>
  421ab8:	mov	x20, x0
  421abc:	b	421a2c <ferror@plt+0x1f15c>
  421ac0:	stp	x21, x22, [sp, #32]
  421ac4:	ldr	x0, [x20, #8]
  421ac8:	bl	446ba8 <ferror@plt+0x442d8>
  421acc:	ldr	x21, [x20, #8]
  421ad0:	sub	x21, x0, x21
  421ad4:	add	x0, x21, #0x1
  421ad8:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  421adc:	mov	x22, x0
  421ae0:	mov	x2, x21
  421ae4:	ldr	x1, [x20, #8]
  421ae8:	bl	402260 <memcpy@plt>
  421aec:	strb	wzr, [x22, x21]
  421af0:	str	x22, [x20, #24]
  421af4:	ldp	x21, x22, [sp, #32]
  421af8:	b	421a9c <ferror@plt+0x1f1cc>
  421afc:	mov	x3, x1
  421b00:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  421b04:	add	x2, x2, #0x6a8
  421b08:	mov	w1, #0x3                   	// #3
  421b0c:	mov	x0, x19
  421b10:	bl	41c9fc <ferror@plt+0x1a12c>
  421b14:	b	421a2c <ferror@plt+0x1f15c>
  421b18:	cbnz	w2, 421a24 <ferror@plt+0x1f154>
  421b1c:	b	421a68 <ferror@plt+0x1f198>
  421b20:	ldr	w0, [x0, #204]
  421b24:	cmp	w0, #0x0
  421b28:	cset	w0, ne  // ne = any
  421b2c:	ret
  421b30:	stp	x29, x30, [sp, #-304]!
  421b34:	mov	x29, sp
  421b38:	stp	x19, x20, [sp, #16]
  421b3c:	stp	x21, x22, [sp, #32]
  421b40:	stp	x23, x24, [sp, #48]
  421b44:	stp	x25, x26, [sp, #64]
  421b48:	mov	x20, x0
  421b4c:	str	x1, [sp, #112]
  421b50:	mov	x23, x2
  421b54:	and	w0, w3, #0xff
  421b58:	str	w0, [sp, #136]
  421b5c:	str	w4, [sp, #144]
  421b60:	and	w0, w5, #0xff
  421b64:	str	w0, [sp, #132]
  421b68:	str	w6, [sp, #140]
  421b6c:	cbz	x2, 421c44 <ferror@plt+0x1f374>
  421b70:	ldr	x19, [x20, #296]
  421b74:	ldr	x21, [sp, #112]
  421b78:	mov	x0, x21
  421b7c:	bl	4467f0 <ferror@plt+0x43f20>
  421b80:	mov	w3, #0x1                   	// #1
  421b84:	mov	w2, w0
  421b88:	mov	x1, x21
  421b8c:	mov	x0, x19
  421b90:	bl	4463b0 <ferror@plt+0x43ae0>
  421b94:	mov	x25, x0
  421b98:	ldr	x0, [x0]
  421b9c:	cbz	x0, 421bb4 <ferror@plt+0x1f2e4>
  421ba0:	ldr	x1, [x0, #8]
  421ba4:	cmp	x23, x1
  421ba8:	b.eq	422368 <ferror@plt+0x1fa98>  // b.none
  421bac:	ldr	x0, [x0]
  421bb0:	cbnz	x0, 421ba0 <ferror@plt+0x1f2d0>
  421bb4:	mov	x1, #0xd8                  	// #216
  421bb8:	mov	x0, #0x1                   	// #1
  421bbc:	bl	447084 <_obstack_memory_used@@Base+0x118>
  421bc0:	mov	x19, x0
  421bc4:	ldr	x0, [x20]
  421bc8:	cmp	x0, #0x0
  421bcc:	cset	w0, eq  // eq = none
  421bd0:	strb	w0, [x19, #212]
  421bd4:	mov	w0, #0xffffffff            	// #-1
  421bd8:	str	w0, [x19, #200]
  421bdc:	str	x23, [x19, #64]
  421be0:	ldr	x0, [sp, #112]
  421be4:	bl	447178 <_obstack_memory_used@@Base+0x20c>
  421be8:	str	x0, [x19]
  421bec:	ldr	w1, [sp, #132]
  421bf0:	mov	w0, w1
  421bf4:	cbnz	w1, 421c0c <ferror@plt+0x1f33c>
  421bf8:	ldr	x1, [x20]
  421bfc:	ldr	w0, [sp, #132]
  421c00:	cbz	x1, 421c0c <ferror@plt+0x1f33c>
  421c04:	ldr	x0, [x1, #80]
  421c08:	ldrb	w0, [x0, #214]
  421c0c:	strb	w0, [x19, #214]
  421c10:	ldr	w0, [sp, #136]
  421c14:	cbnz	w0, 42222c <ferror@plt+0x1f95c>
  421c18:	stp	x27, x28, [sp, #80]
  421c1c:	str	w0, [sp, #168]
  421c20:	str	w0, [sp, #128]
  421c24:	str	w0, [sp, #148]
  421c28:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a094>
  421c2c:	add	x0, x0, #0x760
  421c30:	str	x0, [sp, #160]
  421c34:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1f094>
  421c38:	add	x0, x0, #0x4c0
  421c3c:	str	x0, [sp, #152]
  421c40:	b	421dec <ferror@plt+0x1f51c>
  421c44:	adrp	x3, 461000 <_obstack_memory_used@@Base+0x1a094>
  421c48:	add	x3, x3, #0x6d8
  421c4c:	mov	w2, w6
  421c50:	mov	w1, #0x4                   	// #4
  421c54:	mov	x0, x20
  421c58:	bl	41cdd4 <ferror@plt+0x1a504>
  421c5c:	b	421b70 <ferror@plt+0x1f2a0>
  421c60:	ldr	x21, [x19, #64]
  421c64:	ldr	x22, [x19]
  421c68:	ldr	x0, [x21, #32]
  421c6c:	cbz	x0, 421d60 <ferror@plt+0x1f490>
  421c70:	ldr	x0, [x21, #32]
  421c74:	ldr	x0, [x0]
  421c78:	cbz	x0, 421c9c <ferror@plt+0x1f3cc>
  421c7c:	mov	x24, #0x0                   	// #0
  421c80:	mov	x1, x22
  421c84:	bl	445944 <ferror@plt+0x43074>
  421c88:	cbz	w0, 421d6c <ferror@plt+0x1f49c>
  421c8c:	add	x24, x24, #0x2
  421c90:	ldr	x0, [x21, #32]
  421c94:	ldr	x0, [x0, x24, lsl #3]
  421c98:	cbnz	x0, 421c80 <ferror@plt+0x1f3b0>
  421c9c:	ldrb	w0, [x22]
  421ca0:	cmp	w0, #0x2f
  421ca4:	b.eq	421df4 <ferror@plt+0x1f524>  // b.none
  421ca8:	mov	w1, #0x2f                  	// #47
  421cac:	mov	x0, x22
  421cb0:	bl	4026c0 <strchr@plt>
  421cb4:	mov	x24, x0
  421cb8:	cmp	x0, #0x0
  421cbc:	ccmp	x22, x0, #0x4, ne  // ne = any
  421cc0:	b.eq	421df4 <ferror@plt+0x1f524>  // b.none
  421cc4:	sub	x28, x0, x22
  421cc8:	add	x0, x28, #0x1
  421ccc:	str	x0, [sp, #120]
  421cd0:	ldr	w27, [x21, #16]
  421cd4:	add	x27, x27, x0
  421cd8:	add	x0, x27, #0x2
  421cdc:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  421ce0:	mov	x26, x0
  421ce4:	ldr	w28, [x21, #16]
  421ce8:	add	x1, x0, x28
  421cec:	str	x1, [sp, #104]
  421cf0:	mov	x2, x28
  421cf4:	ldr	x1, [x21, #8]
  421cf8:	bl	402260 <memcpy@plt>
  421cfc:	ldr	w0, [x21, #16]
  421d00:	cbz	w0, 421d30 <ferror@plt+0x1f460>
  421d04:	sub	w0, w0, #0x1
  421d08:	ldr	x1, [x21, #8]
  421d0c:	ldrb	w0, [x1, w0, uxtw]
  421d10:	cmp	w0, #0x2f
  421d14:	b.eq	421d30 <ferror@plt+0x1f460>  // b.none
  421d18:	mov	w0, #0x2f                  	// #47
  421d1c:	strb	w0, [x26, x28]
  421d20:	add	x27, x27, #0x1
  421d24:	ldr	x1, [sp, #104]
  421d28:	add	x0, x1, #0x1
  421d2c:	str	x0, [sp, #104]
  421d30:	ldr	x2, [sp, #120]
  421d34:	mov	x1, x22
  421d38:	ldr	x0, [sp, #104]
  421d3c:	bl	402260 <memcpy@plt>
  421d40:	strb	wzr, [x26, x27]
  421d44:	ldrb	w2, [x21, #20]
  421d48:	mov	x1, x26
  421d4c:	mov	x0, x20
  421d50:	bl	4210a4 <ferror@plt+0x1e7d4>
  421d54:	mov	x21, x0
  421d58:	add	x22, x24, #0x1
  421d5c:	b	421c68 <ferror@plt+0x1f398>
  421d60:	mov	x0, x21
  421d64:	bl	421280 <ferror@plt+0x1e9b0>
  421d68:	b	421c70 <ferror@plt+0x1f3a0>
  421d6c:	add	x24, x24, #0x1
  421d70:	ldr	x0, [x21, #32]
  421d74:	ldr	x0, [x0, x24, lsl #3]
  421d78:	bl	447178 <_obstack_memory_used@@Base+0x20c>
  421d7c:	mov	x21, x0
  421d80:	b	421e10 <ferror@plt+0x1f540>
  421d84:	ldr	x0, [x19]
  421d88:	bl	420fb0 <ferror@plt+0x1e6e0>
  421d8c:	mov	x21, x0
  421d90:	b	421e0c <ferror@plt+0x1f53c>
  421d94:	mov	x0, x24
  421d98:	bl	402690 <free@plt>
  421d9c:	mov	x0, x21
  421da0:	bl	4467f0 <ferror@plt+0x43f20>
  421da4:	mov	w22, w0
  421da8:	mov	w2, w0
  421dac:	mov	x1, x21
  421db0:	ldr	x0, [x20, #320]
  421db4:	bl	44623c <ferror@plt+0x4396c>
  421db8:	cbz	x0, 421e5c <ferror@plt+0x1f58c>
  421dbc:	mov	w0, #0x2                   	// #2
  421dc0:	str	w0, [x19, #204]
  421dc4:	ldr	x0, [x19, #64]
  421dc8:	ldr	x21, [x0]
  421dcc:	str	x21, [x19, #64]
  421dd0:	cbz	x21, 42203c <ferror@plt+0x1f76c>
  421dd4:	ldr	x0, [x20, #208]
  421dd8:	cmp	x21, x0
  421ddc:	b.eq	422180 <ferror@plt+0x1f8b0>  // b.none
  421de0:	ldr	x0, [x20, #200]
  421de4:	cmp	x21, x0
  421de8:	b.eq	422158 <ferror@plt+0x1f888>  // b.none
  421dec:	ldrb	w0, [x20, #1145]
  421df0:	cbnz	w0, 421c60 <ferror@plt+0x1f390>
  421df4:	ldr	x1, [x19, #64]
  421df8:	ldr	x2, [x1, #40]
  421dfc:	cbz	x2, 421d84 <ferror@plt+0x1f4b4>
  421e00:	ldr	x0, [x19]
  421e04:	blr	x2
  421e08:	mov	x21, x0
  421e0c:	cbz	x21, 42202c <ferror@plt+0x1f75c>
  421e10:	ldrb	w0, [x20, #1245]
  421e14:	cbz	w0, 421d9c <ferror@plt+0x1f4cc>
  421e18:	ldr	x0, [x19, #64]
  421e1c:	ldrb	w0, [x0, #20]
  421e20:	cbz	w0, 421d9c <ferror@plt+0x1f4cc>
  421e24:	mov	x0, x21
  421e28:	bl	446bbc <ferror@plt+0x442ec>
  421e2c:	mov	x24, x0
  421e30:	cbz	x0, 421d94 <ferror@plt+0x1f4c4>
  421e34:	bl	4022b0 <strlen@plt>
  421e38:	mov	x22, x0
  421e3c:	mov	x0, x21
  421e40:	bl	4022b0 <strlen@plt>
  421e44:	cmp	x22, x0
  421e48:	b.cs	421d94 <ferror@plt+0x1f4c4>  // b.hs, b.nlast
  421e4c:	mov	x0, x21
  421e50:	bl	402690 <free@plt>
  421e54:	mov	x21, x24
  421e58:	b	421d9c <ferror@plt+0x1f4cc>
  421e5c:	str	x21, [x19, #8]
  421e60:	ldr	x0, [x19]
  421e64:	ldrb	w0, [x0]
  421e68:	cbz	w0, 422290 <ferror@plt+0x1f9c0>
  421e6c:	ldr	x0, [x20, #968]
  421e70:	cbz	x0, 422290 <ferror@plt+0x1f9c0>
  421e74:	ldr	x0, [x20, #280]
  421e78:	cbz	x0, 421e8c <ferror@plt+0x1f5bc>
  421e7c:	ldrb	w1, [x0, #214]
  421e80:	cbnz	w1, 421f14 <ferror@plt+0x1f644>
  421e84:	ldrb	w0, [x0, #212]
  421e88:	cbz	w0, 422290 <ferror@plt+0x1f9c0>
  421e8c:	mov	x0, x21
  421e90:	bl	4022b0 <strlen@plt>
  421e94:	mov	x26, x0
  421e98:	add	x27, x0, #0x5
  421e9c:	mov	x0, x27
  421ea0:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  421ea4:	mov	x24, x0
  421ea8:	mov	x2, x26
  421eac:	mov	x1, x21
  421eb0:	bl	402260 <memcpy@plt>
  421eb4:	add	x0, x24, x26
  421eb8:	ldr	x2, [sp, #160]
  421ebc:	ldr	w1, [x2]
  421ec0:	str	w1, [x24, x26]
  421ec4:	ldrb	w1, [x2, #4]
  421ec8:	strb	w1, [x0, #4]
  421ecc:	add	x2, sp, #0xb0
  421ed0:	mov	x1, x24
  421ed4:	mov	w0, #0x0                   	// #0
  421ed8:	bl	402840 <__xstat@plt>
  421edc:	cbnz	w0, 422288 <ferror@plt+0x1f9b8>
  421ee0:	ldr	w0, [sp, #192]
  421ee4:	and	w0, w0, #0xf000
  421ee8:	cmp	w0, #0x4, lsl #12
  421eec:	b.eq	421f20 <ferror@plt+0x1f650>  // b.none
  421ef0:	mov	x2, x24
  421ef4:	mov	x1, x19
  421ef8:	mov	x0, x20
  421efc:	bl	42157c <ferror@plt+0x1ecac>
  421f00:	and	w26, w0, #0xff
  421f04:	cbz	w26, 422280 <ferror@plt+0x1f9b0>
  421f08:	str	x24, [x19, #16]
  421f0c:	ldp	x27, x28, [sp, #80]
  421f10:	b	42226c <ferror@plt+0x1f99c>
  421f14:	ldr	x0, [x0, #32]
  421f18:	cbnz	x0, 421e7c <ferror@plt+0x1f5ac>
  421f1c:	b	421e8c <ferror@plt+0x1f5bc>
  421f20:	mov	x0, x24
  421f24:	bl	402360 <opendir@plt>
  421f28:	str	x0, [sp, #104]
  421f2c:	cbz	x0, 422280 <ferror@plt+0x1f9b0>
  421f30:	add	x26, x24, x26
  421f34:	mov	w0, #0x2f                  	// #47
  421f38:	strb	w0, [x26, #4]
  421f3c:	str	x27, [sp, #120]
  421f40:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a094>
  421f44:	add	x0, x0, #0x6f8
  421f48:	str	x0, [sp, #168]
  421f4c:	b	421f94 <ferror@plt+0x1f6c4>
  421f50:	add	x0, x1, #0x40
  421f54:	add	x0, x28, x0
  421f58:	str	x0, [sp, #120]
  421f5c:	mov	x1, x0
  421f60:	mov	x0, x24
  421f64:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  421f68:	mov	x24, x0
  421f6c:	mov	x2, x28
  421f70:	mov	x1, x26
  421f74:	add	x0, x24, x27
  421f78:	bl	402260 <memcpy@plt>
  421f7c:	mov	x2, x24
  421f80:	mov	x1, x19
  421f84:	mov	x0, x20
  421f88:	bl	42157c <ferror@plt+0x1ecac>
  421f8c:	ands	w26, w0, #0xff
  421f90:	b.ne	421fe8 <ferror@plt+0x1f718>  // b.any
  421f94:	ldr	x0, [sp, #104]
  421f98:	bl	4024e0 <readdir@plt>
  421f9c:	cbz	x0, 421fe4 <ferror@plt+0x1f714>
  421fa0:	add	x26, x0, #0x13
  421fa4:	ldr	x1, [sp, #152]
  421fa8:	mov	x0, x26
  421fac:	bl	402620 <strcmp@plt>
  421fb0:	cbz	w0, 421f94 <ferror@plt+0x1f6c4>
  421fb4:	ldr	x1, [sp, #168]
  421fb8:	mov	x0, x26
  421fbc:	bl	402620 <strcmp@plt>
  421fc0:	cbz	w0, 421f94 <ferror@plt+0x1f6c4>
  421fc4:	mov	x0, x26
  421fc8:	bl	4022b0 <strlen@plt>
  421fcc:	add	x28, x0, #0x1
  421fd0:	add	x0, x27, x28
  421fd4:	ldr	x1, [sp, #120]
  421fd8:	cmp	x0, x1
  421fdc:	b.ls	421f6c <ferror@plt+0x1f69c>  // b.plast
  421fe0:	b	421f50 <ferror@plt+0x1f680>
  421fe4:	ldr	w26, [sp, #136]
  421fe8:	ldr	x0, [sp, #104]
  421fec:	bl	402520 <closedir@plt>
  421ff0:	b	421f04 <ferror@plt+0x1f634>
  421ff4:	ldr	w3, [sp, #140]
  421ff8:	mov	w2, #0x0                   	// #0
  421ffc:	mov	x1, x19
  422000:	mov	x0, x20
  422004:	bl	4216ac <ferror@plt+0x1eddc>
  422008:	ldp	x27, x28, [sp, #80]
  42200c:	b	42226c <ferror@plt+0x1f99c>
  422010:	add	x0, x20, #0x148
  422014:	bl	446d94 <_obstack_newchunk@@Base>
  422018:	b	4222d0 <ferror@plt+0x1fa00>
  42201c:	ldrb	w0, [x24, #80]
  422020:	orr	w0, w0, #0x2
  422024:	strb	w0, [x24, #80]
  422028:	b	422308 <ferror@plt+0x1fa38>
  42202c:	mov	w0, #0x2                   	// #2
  422030:	str	w0, [x19, #204]
  422034:	str	xzr, [x19, #8]
  422038:	b	421dc4 <ferror@plt+0x1f4f4>
  42203c:	ldr	x3, [x20, #984]
  422040:	cbz	x3, 422098 <ferror@plt+0x1f7c8>
  422044:	add	x2, x19, #0x40
  422048:	ldr	x1, [sp, #112]
  42204c:	mov	x0, x20
  422050:	blr	x3
  422054:	str	x0, [x19, #8]
  422058:	cbz	x0, 422090 <ferror@plt+0x1f7c0>
  42205c:	mov	x0, x19
  422060:	bl	4214bc <ferror@plt+0x1ebec>
  422064:	and	w0, w0, #0xff
  422068:	cbz	w0, 422088 <ferror@plt+0x1f7b8>
  42206c:	ldr	x0, [x20, #280]
  422070:	str	x0, [x19, #32]
  422074:	str	x19, [x20, #280]
  422078:	ldr	x0, [x25]
  42207c:	cbz	x0, 4220c4 <ferror@plt+0x1f7f4>
  422080:	ldp	x27, x28, [sp, #80]
  422084:	b	42236c <ferror@plt+0x1fa9c>
  422088:	ldr	x0, [x19, #8]
  42208c:	bl	402690 <free@plt>
  422090:	ldr	x0, [x19]
  422094:	str	x0, [x19, #8]
  422098:	ldr	w0, [sp, #168]
  42209c:	cbnz	w0, 4220dc <ferror@plt+0x1f80c>
  4220a0:	ldr	w0, [sp, #132]
  4220a4:	cbnz	w0, 422118 <ferror@plt+0x1f848>
  4220a8:	ldr	w3, [sp, #140]
  4220ac:	ldr	w2, [sp, #144]
  4220b0:	mov	x1, x19
  4220b4:	mov	x0, x20
  4220b8:	bl	4216ac <ferror@plt+0x1eddc>
  4220bc:	ldp	x27, x28, [sp, #80]
  4220c0:	b	42226c <ferror@plt+0x1f99c>
  4220c4:	str	x19, [x25]
  4220c8:	mov	x1, x25
  4220cc:	ldr	x0, [x20, #296]
  4220d0:	bl	446694 <ferror@plt+0x43dc4>
  4220d4:	ldp	x27, x28, [sp, #80]
  4220d8:	b	42236c <ferror@plt+0x1fa9c>
  4220dc:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  4220e0:	add	x2, x2, #0x700
  4220e4:	mov	w1, #0x3                   	// #3
  4220e8:	mov	x0, x20
  4220ec:	bl	41c9fc <ferror@plt+0x1a12c>
  4220f0:	mov	x0, x20
  4220f4:	bl	41bb80 <ferror@plt+0x192b0>
  4220f8:	ldrb	w0, [x0, #84]
  4220fc:	cbnz	w0, 4220a0 <ferror@plt+0x1f7d0>
  422100:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  422104:	add	x2, x2, #0x738
  422108:	mov	w1, #0x3                   	// #3
  42210c:	mov	x0, x20
  422110:	bl	41c9fc <ferror@plt+0x1a12c>
  422114:	b	4220a0 <ferror@plt+0x1f7d0>
  422118:	ldr	x0, [x19]
  42211c:	bl	402690 <free@plt>
  422120:	mov	x0, x19
  422124:	bl	402690 <free@plt>
  422128:	ldr	x22, [x25]
  42212c:	cbz	x22, 42213c <ferror@plt+0x1f86c>
  422130:	mov	x19, x21
  422134:	ldp	x27, x28, [sp, #80]
  422138:	b	42236c <ferror@plt+0x1fa9c>
  42213c:	str	x19, [x25]
  422140:	mov	x1, x25
  422144:	ldr	x0, [x20, #296]
  422148:	bl	446694 <ferror@plt+0x43dc4>
  42214c:	mov	x19, x22
  422150:	ldp	x27, x28, [sp, #80]
  422154:	b	42236c <ferror@plt+0x1fa9c>
  422158:	mov	w0, #0x1                   	// #1
  42215c:	str	w0, [sp, #128]
  422160:	ldr	x22, [x25]
  422164:	cbz	x22, 421dec <ferror@plt+0x1f51c>
  422168:	ldr	x24, [x22, #8]
  42216c:	cmp	x21, x24
  422170:	b.eq	42218c <ferror@plt+0x1f8bc>  // b.none
  422174:	ldr	x22, [x22]
  422178:	cbnz	x22, 422168 <ferror@plt+0x1f898>
  42217c:	b	421dec <ferror@plt+0x1f51c>
  422180:	mov	w0, #0x1                   	// #1
  422184:	str	w0, [sp, #148]
  422188:	b	422160 <ferror@plt+0x1f890>
  42218c:	ldr	x0, [x19]
  422190:	bl	402690 <free@plt>
  422194:	mov	x0, x19
  422198:	bl	402690 <free@plt>
  42219c:	ldr	x19, [x22, #24]
  4221a0:	ldp	x27, x28, [sp, #80]
  4221a4:	mov	x0, x20
  4221a8:	bl	42103c <ferror@plt+0x1e76c>
  4221ac:	ldr	x1, [x25]
  4221b0:	str	x1, [x0]
  4221b4:	str	x23, [x0, #8]
  4221b8:	ldr	x1, [x20, #40]
  4221bc:	ldr	w1, [x1, #56]
  4221c0:	str	w1, [x0, #16]
  4221c4:	str	x19, [x0, #24]
  4221c8:	str	x0, [x25]
  4221cc:	ldr	w0, [sp, #148]
  4221d0:	cbz	w0, 4221e4 <ferror@plt+0x1f914>
  4221d4:	ldr	x0, [x20, #208]
  4221d8:	cmp	x0, x24
  4221dc:	ccmp	x0, x23, #0x4, ne  // ne = any
  4221e0:	b.ne	422238 <ferror@plt+0x1f968>  // b.any
  4221e4:	ldr	w0, [sp, #128]
  4221e8:	cbz	w0, 42236c <ferror@plt+0x1fa9c>
  4221ec:	ldr	x0, [x20, #200]
  4221f0:	cmp	x0, x23
  4221f4:	ccmp	x0, x24, #0x4, ne  // ne = any
  4221f8:	b.eq	42236c <ferror@plt+0x1fa9c>  // b.none
  4221fc:	mov	x0, x20
  422200:	bl	42103c <ferror@plt+0x1e76c>
  422204:	ldr	x1, [x25]
  422208:	str	x1, [x0]
  42220c:	ldr	x1, [x20, #200]
  422210:	str	x1, [x0, #8]
  422214:	ldr	x1, [x20, #40]
  422218:	ldr	w1, [x1, #56]
  42221c:	str	w1, [x0, #16]
  422220:	str	x19, [x0, #24]
  422224:	str	x0, [x25]
  422228:	b	42236c <ferror@plt+0x1fa9c>
  42222c:	str	wzr, [sp, #128]
  422230:	str	wzr, [sp, #148]
  422234:	b	42226c <ferror@plt+0x1f99c>
  422238:	mov	x0, x20
  42223c:	bl	42103c <ferror@plt+0x1e76c>
  422240:	ldr	x1, [x25]
  422244:	str	x1, [x0]
  422248:	ldr	x1, [x20, #208]
  42224c:	str	x1, [x0, #8]
  422250:	ldr	x1, [x20, #40]
  422254:	ldr	w1, [x1, #56]
  422258:	str	w1, [x0, #16]
  42225c:	str	x19, [x0, #24]
  422260:	str	x0, [x25]
  422264:	b	4221e4 <ferror@plt+0x1f914>
  422268:	ldp	x27, x28, [sp, #80]
  42226c:	ldr	x0, [x20, #280]
  422270:	str	x0, [x19, #32]
  422274:	str	x19, [x20, #280]
  422278:	mov	x24, #0x0                   	// #0
  42227c:	b	4221a4 <ferror@plt+0x1f8d4>
  422280:	mov	w0, #0x1                   	// #1
  422284:	str	w0, [sp, #168]
  422288:	mov	x0, x24
  42228c:	bl	402690 <free@plt>
  422290:	mov	x0, x19
  422294:	bl	4214bc <ferror@plt+0x1ebec>
  422298:	and	w0, w0, #0xff
  42229c:	cbnz	w0, 422268 <ferror@plt+0x1f998>
  4222a0:	ldr	w0, [x19, #204]
  4222a4:	cmp	w0, #0x2
  4222a8:	b.ne	421ff4 <ferror@plt+0x1f724>  // b.any
  4222ac:	mov	x0, x21
  4222b0:	bl	4022b0 <strlen@plt>
  4222b4:	mov	x26, x0
  4222b8:	add	x1, x0, #0x1
  4222bc:	ldr	x0, [x20, #360]
  4222c0:	ldr	x2, [x20, #352]
  4222c4:	sub	x0, x0, x2
  4222c8:	cmp	x0, x1
  4222cc:	b.cc	422010 <ferror@plt+0x1f740>  // b.lo, b.ul, b.last
  4222d0:	add	x24, x20, #0x148
  4222d4:	mov	x2, x26
  4222d8:	mov	x1, x21
  4222dc:	ldr	x0, [x20, #352]
  4222e0:	bl	402260 <memcpy@plt>
  4222e4:	ldr	x1, [x20, #352]
  4222e8:	add	x0, x1, x26
  4222ec:	add	x0, x0, #0x1
  4222f0:	str	x0, [x20, #352]
  4222f4:	strb	wzr, [x1, x26]
  4222f8:	ldr	x26, [x20, #344]
  4222fc:	ldr	x1, [x20, #352]
  422300:	cmp	x26, x1
  422304:	b.eq	42201c <ferror@plt+0x1f74c>  // b.none
  422308:	ldr	x0, [x20, #376]
  42230c:	add	x1, x1, x0
  422310:	bic	x0, x1, x0
  422314:	str	x0, [x20, #352]
  422318:	ldr	x1, [x20, #336]
  42231c:	ldr	x2, [x20, #360]
  422320:	sub	x0, x0, x1
  422324:	sub	x1, x2, x1
  422328:	cmp	x0, x1
  42232c:	b.ls	422334 <ferror@plt+0x1fa64>  // b.plast
  422330:	str	x2, [x20, #352]
  422334:	ldr	x1, [x20, #352]
  422338:	str	x1, [x20, #344]
  42233c:	mov	x0, x21
  422340:	bl	402690 <free@plt>
  422344:	mov	w3, #0x1                   	// #1
  422348:	mov	w2, w22
  42234c:	mov	x1, x26
  422350:	ldr	x0, [x20, #320]
  422354:	bl	4463b0 <ferror@plt+0x43ae0>
  422358:	str	x26, [x0]
  42235c:	ldr	x0, [x19]
  422360:	str	x0, [x19, #8]
  422364:	b	421dc4 <ferror@plt+0x1f4f4>
  422368:	ldr	x19, [x0, #24]
  42236c:	mov	x0, x19
  422370:	ldp	x19, x20, [sp, #16]
  422374:	ldp	x21, x22, [sp, #32]
  422378:	ldp	x23, x24, [sp, #48]
  42237c:	ldp	x25, x26, [sp, #64]
  422380:	ldp	x29, x30, [sp], #304
  422384:	ret
  422388:	stp	x29, x30, [sp, #-160]!
  42238c:	mov	x29, sp
  422390:	stp	x21, x22, [sp, #32]
  422394:	stp	x23, x24, [sp, #48]
  422398:	str	w3, [sp, #100]
  42239c:	ldrb	w21, [x1, #210]
  4223a0:	cbnz	w21, 4223fc <ferror@plt+0x1fb2c>
  4223a4:	stp	x19, x20, [sp, #16]
  4223a8:	mov	x20, x0
  4223ac:	mov	x19, x1
  4223b0:	and	w23, w2, #0xff
  4223b4:	cbnz	w23, 422404 <ferror@plt+0x1fb34>
  4223b8:	ldr	x0, [x19, #56]
  4223bc:	cbz	x0, 4223c8 <ferror@plt+0x1faf8>
  4223c0:	ldrb	w0, [x0, #18]
  4223c4:	tbnz	w0, #1, 4226b4 <ferror@plt+0x1fde4>
  4223c8:	ldr	x1, [x19, #16]
  4223cc:	cbz	x1, 422420 <ferror@plt+0x1fb50>
  4223d0:	ldr	x4, [x20, #976]
  4223d4:	ldr	x3, [x19, #8]
  4223d8:	ldr	w2, [x19, #200]
  4223dc:	mov	x0, x20
  4223e0:	blr	x4
  4223e4:	mov	w0, #0xffffffff            	// #-1
  4223e8:	str	w0, [x19, #200]
  4223ec:	ldr	x0, [x19, #16]
  4223f0:	bl	402690 <free@plt>
  4223f4:	str	xzr, [x19, #16]
  4223f8:	ldp	x19, x20, [sp, #16]
  4223fc:	mov	w24, #0x0                   	// #0
  422400:	b	4226a0 <ferror@plt+0x1fdd0>
  422404:	mov	w0, #0x1                   	// #1
  422408:	strb	w0, [x20, #417]
  42240c:	strb	w0, [x1, #210]
  422410:	ldrh	w0, [x1, #208]
  422414:	cbz	w0, 4223b8 <ferror@plt+0x1fae8>
  422418:	ldp	x19, x20, [sp, #16]
  42241c:	b	4223fc <ferror@plt+0x1fb2c>
  422420:	ldr	w2, [sp, #100]
  422424:	mov	x1, x19
  422428:	mov	x0, x20
  42242c:	bl	4217e8 <ferror@plt+0x1ef18>
  422430:	ands	w24, w0, #0xff
  422434:	b.ne	422440 <ferror@plt+0x1fb70>  // b.any
  422438:	ldp	x19, x20, [sp, #16]
  42243c:	b	4223fc <ferror@plt+0x1fb2c>
  422440:	stp	x27, x28, [sp, #80]
  422444:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  422448:	ldr	x28, [x0, #1936]
  42244c:	cbz	x28, 42254c <ferror@plt+0x1fc7c>
  422450:	cbnz	w23, 42245c <ferror@plt+0x1fb8c>
  422454:	ldrb	w0, [x28, #8]
  422458:	cbz	w0, 42254c <ferror@plt+0x1fc7c>
  42245c:	ldr	x0, [x19, #120]
  422460:	str	x0, [sp, #120]
  422464:	strb	wzr, [sp, #144]
  422468:	str	x19, [sp, #152]
  42246c:	strb	w23, [sp, #145]
  422470:	ldr	x27, [x28], #16
  422474:	cbz	x27, 42254c <ferror@plt+0x1fc7c>
  422478:	stp	x25, x26, [sp, #64]
  42247c:	mov	x26, #0x0                   	// #0
  422480:	add	x0, sp, #0x80
  422484:	str	x0, [sp, #104]
  422488:	b	4224c8 <ferror@plt+0x1fbf8>
  42248c:	ldr	x0, [sp, #152]
  422490:	ldr	x2, [sp, #104]
  422494:	ldr	x1, [x0, #120]
  422498:	ldr	x0, [x0, #40]
  42249c:	bl	445810 <ferror@plt+0x42f40>
  4224a0:	mov	w0, #0x1                   	// #1
  4224a4:	strb	w0, [sp, #144]
  4224a8:	b	4224f0 <ferror@plt+0x1fc20>
  4224ac:	ldrb	w0, [x25, #24]
  4224b0:	eor	w0, w0, #0x1
  4224b4:	cmp	w0, #0x0
  4224b8:	b.le	42250c <ferror@plt+0x1fc3c>
  4224bc:	add	x26, x22, #0x1
  4224c0:	cmp	x26, x27
  4224c4:	b.cs	422548 <ferror@plt+0x1fc78>  // b.hs, b.nlast
  4224c8:	add	x22, x27, x26
  4224cc:	lsr	x22, x22, #1
  4224d0:	add	x25, x28, x22, lsl #5
  4224d4:	mov	x2, #0x8                   	// #8
  4224d8:	mov	x1, x25
  4224dc:	add	x0, sp, #0x78
  4224e0:	bl	4025e0 <memcmp@plt>
  4224e4:	cbnz	w0, 422520 <ferror@plt+0x1fc50>
  4224e8:	ldrb	w0, [sp, #144]
  4224ec:	cbz	w0, 42248c <ferror@plt+0x1fbbc>
  4224f0:	mov	x2, #0x10                  	// #16
  4224f4:	add	x1, x25, #0x8
  4224f8:	ldr	x0, [sp, #104]
  4224fc:	bl	4025e0 <memcmp@plt>
  422500:	cbnz	w0, 422520 <ferror@plt+0x1fc50>
  422504:	ldrb	w0, [sp, #145]
  422508:	cbz	w0, 4224ac <ferror@plt+0x1fbdc>
  42250c:	cbz	w23, 42252c <ferror@plt+0x1fc5c>
  422510:	ldp	x19, x20, [sp, #16]
  422514:	ldp	x25, x26, [sp, #64]
  422518:	ldp	x27, x28, [sp, #80]
  42251c:	b	4223fc <ferror@plt+0x1fb2c>
  422520:	tbz	w0, #31, 4224b4 <ferror@plt+0x1fbe4>
  422524:	mov	x27, x22
  422528:	b	4224c0 <ferror@plt+0x1fbf0>
  42252c:	mov	w0, #0x1                   	// #1
  422530:	strb	w0, [x20, #417]
  422534:	strb	w0, [x19, #210]
  422538:	ldp	x19, x20, [sp, #16]
  42253c:	ldp	x25, x26, [sp, #64]
  422540:	ldp	x27, x28, [sp, #80]
  422544:	b	4223fc <ferror@plt+0x1fb2c>
  422548:	ldp	x25, x26, [sp, #64]
  42254c:	ldrb	w0, [x20, #417]
  422550:	cbz	w0, 4225cc <ferror@plt+0x1fcfc>
  422554:	ldr	x22, [x20, #280]
  422558:	cbz	x22, 4225cc <ferror@plt+0x1fcfc>
  42255c:	mov	x28, #0xd8                  	// #216
  422560:	mov	w27, #0xffffffff            	// #-1
  422564:	b	4226d8 <ferror@plt+0x1fe08>
  422568:	ldr	x25, [x22, #64]
  42256c:	ldr	x0, [x22]
  422570:	str	x0, [sp, #104]
  422574:	mov	x1, x28
  422578:	mov	x0, #0x1                   	// #1
  42257c:	bl	447084 <_obstack_memory_used@@Base+0x118>
  422580:	mov	x26, x0
  422584:	ldr	x0, [x20]
  422588:	cmp	x0, #0x0
  42258c:	cset	w0, eq  // eq = none
  422590:	strb	w0, [x26, #212]
  422594:	str	w27, [x26, #200]
  422598:	str	x25, [x26, #64]
  42259c:	ldr	x0, [sp, #104]
  4225a0:	bl	447178 <_obstack_memory_used@@Base+0x20c>
  4225a4:	str	x0, [x26]
  4225a8:	ldr	x0, [x22, #8]
  4225ac:	str	x0, [x26, #8]
  4225b0:	b	42272c <ferror@plt+0x1fe5c>
  4225b4:	str	xzr, [x26, #8]
  4225b8:	mov	x0, x26
  4225bc:	bl	420e88 <ferror@plt+0x1e5b8>
  4225c0:	cbnz	w25, 422774 <ferror@plt+0x1fea4>
  4225c4:	ldp	x25, x26, [sp, #64]
  4225c8:	b	4226d0 <ferror@plt+0x1fe00>
  4225cc:	ldr	x0, [x20]
  4225d0:	mov	w22, #0x0                   	// #0
  4225d4:	cbz	x0, 4225f8 <ferror@plt+0x1fd28>
  4225d8:	ldr	x1, [x19, #64]
  4225dc:	cbz	x1, 4225f8 <ferror@plt+0x1fd28>
  4225e0:	ldrb	w0, [x0, #106]
  4225e4:	ldrb	w2, [x1, #20]
  4225e8:	ldrb	w22, [x1, #20]
  4225ec:	cmp	w2, w0, uxtb
  4225f0:	csel	w22, w22, w0, cs  // cs = hs, nlast
  4225f4:	and	w22, w22, #0xff
  4225f8:	cmp	w22, #0x0
  4225fc:	cset	w0, ne  // ne = any
  422600:	ldr	w1, [x20, #1200]
  422604:	cmp	w1, w0
  422608:	b.le	422630 <ferror@plt+0x1fd60>
  42260c:	ldrh	w0, [x19, #208]
  422610:	cbnz	w0, 422630 <ferror@plt+0x1fd60>
  422614:	ldrb	w0, [x19, #212]
  422618:	cbz	w0, 422624 <ferror@plt+0x1fd54>
  42261c:	ldrb	w0, [x20, #1206]
  422620:	cbnz	w0, 422630 <ferror@plt+0x1fd60>
  422624:	ldr	x1, [x19, #8]
  422628:	ldr	x0, [x20, #712]
  42262c:	bl	42f31c <ferror@plt+0x2ca4c>
  422630:	strb	wzr, [x19, #213]
  422634:	ldrh	w0, [x19, #208]
  422638:	add	w0, w0, #0x1
  42263c:	strh	w0, [x19, #208]
  422640:	ldr	x1, [x19, #40]
  422644:	ldr	x2, [x19, #120]
  422648:	ldrb	w0, [x20, #1155]
  42264c:	cbz	w0, 422658 <ferror@plt+0x1fd88>
  422650:	ldrb	w21, [x20, #1244]
  422654:	eor	w21, w21, #0x1
  422658:	mov	w3, w21
  42265c:	mov	x0, x20
  422660:	bl	41bbe0 <ferror@plt+0x19310>
  422664:	str	x19, [x0, #80]
  422668:	strb	w22, [x0, #106]
  42266c:	ldr	x1, [x19, #48]
  422670:	str	x1, [x0, #40]
  422674:	mov	w0, #0x1                   	// #1
  422678:	strb	w0, [x20, #440]
  42267c:	str	xzr, [x20, #424]
  422680:	mov	w4, w22
  422684:	mov	w3, #0x1                   	// #1
  422688:	ldr	x2, [x19, #8]
  42268c:	mov	w1, #0x0                   	// #0
  422690:	mov	x0, x20
  422694:	bl	41b390 <ferror@plt+0x18ac0>
  422698:	ldp	x19, x20, [sp, #16]
  42269c:	ldp	x27, x28, [sp, #80]
  4226a0:	mov	w0, w24
  4226a4:	ldp	x21, x22, [sp, #32]
  4226a8:	ldp	x23, x24, [sp, #48]
  4226ac:	ldp	x29, x30, [sp], #160
  4226b0:	ret
  4226b4:	ldp	x19, x20, [sp, #16]
  4226b8:	b	4223fc <ferror@plt+0x1fb2c>
  4226bc:	ldr	x0, [x22, #40]
  4226c0:	cbz	x0, 422788 <ferror@plt+0x1feb8>
  4226c4:	ldrb	w25, [x22, #213]
  4226c8:	cbz	w25, 4225b4 <ferror@plt+0x1fce4>
  4226cc:	ldp	x25, x26, [sp, #64]
  4226d0:	ldr	x22, [x22, #32]
  4226d4:	cbz	x22, 4225cc <ferror@plt+0x1fcfc>
  4226d8:	cmp	x19, x22
  4226dc:	b.eq	4226d0 <ferror@plt+0x1fe00>  // b.none
  4226e0:	cbnz	w23, 4226ec <ferror@plt+0x1fe1c>
  4226e4:	ldrb	w0, [x22, #210]
  4226e8:	cbz	w0, 4226d0 <ferror@plt+0x1fe00>
  4226ec:	ldr	w0, [x22, #204]
  4226f0:	cbnz	w0, 4226d0 <ferror@plt+0x1fe00>
  4226f4:	ldr	x1, [x22, #160]
  4226f8:	ldr	x0, [x19, #160]
  4226fc:	cmp	x1, x0
  422700:	b.ne	4226d0 <ferror@plt+0x1fe00>  // b.any
  422704:	ldr	x1, [x22, #120]
  422708:	ldr	x0, [x19, #120]
  42270c:	cmp	x1, x0
  422710:	b.ne	4226d0 <ferror@plt+0x1fe00>  // b.any
  422714:	stp	x25, x26, [sp, #64]
  422718:	ldr	x0, [x22, #40]
  42271c:	mov	x26, x22
  422720:	cbz	x0, 42272c <ferror@plt+0x1fe5c>
  422724:	ldrb	w0, [x22, #213]
  422728:	cbz	w0, 422568 <ferror@plt+0x1fc98>
  42272c:	ldr	w2, [sp, #100]
  422730:	mov	x1, x26
  422734:	mov	x0, x20
  422738:	bl	4217e8 <ferror@plt+0x1ef18>
  42273c:	ands	w25, w0, #0xff
  422740:	b.eq	4226bc <ferror@plt+0x1fdec>  // b.none
  422744:	ldr	x2, [x19, #120]
  422748:	ldr	x0, [x26, #120]
  42274c:	cmp	x0, x2
  422750:	b.ne	4226bc <ferror@plt+0x1fdec>  // b.any
  422754:	ldr	x1, [x19, #40]
  422758:	ldr	x0, [x26, #40]
  42275c:	bl	4025e0 <memcmp@plt>
  422760:	cbnz	w0, 4226bc <ferror@plt+0x1fdec>
  422764:	ldr	x0, [x22, #40]
  422768:	cbz	x0, 422774 <ferror@plt+0x1fea4>
  42276c:	ldrb	w0, [x22, #213]
  422770:	cbz	w0, 4225b4 <ferror@plt+0x1fce4>
  422774:	mov	w24, w21
  422778:	ldp	x19, x20, [sp, #16]
  42277c:	ldp	x25, x26, [sp, #64]
  422780:	ldp	x27, x28, [sp, #80]
  422784:	b	4226a0 <ferror@plt+0x1fdd0>
  422788:	ldp	x25, x26, [sp, #64]
  42278c:	b	4226d0 <ferror@plt+0x1fe00>
  422790:	mov	w2, #0x1                   	// #1
  422794:	strb	w2, [x0, #417]
  422798:	strb	w2, [x1, #210]
  42279c:	ret
  4227a0:	stp	x29, x30, [sp, #-64]!
  4227a4:	mov	x29, sp
  4227a8:	stp	x19, x20, [sp, #16]
  4227ac:	stp	x21, x22, [sp, #32]
  4227b0:	stp	x23, x24, [sp, #48]
  4227b4:	mov	x19, x0
  4227b8:	mov	x22, x1
  4227bc:	mov	w23, w2
  4227c0:	mov	w20, w3
  4227c4:	mov	w21, w4
  4227c8:	cmp	w3, #0x3
  4227cc:	b.eq	42282c <ferror@plt+0x1ff5c>  // b.none
  4227d0:	bl	4219ec <ferror@plt+0x1f11c>
  4227d4:	mov	x2, x0
  4227d8:	mov	w0, #0x0                   	// #0
  4227dc:	cbz	x2, 422818 <ferror@plt+0x1ff48>
  4227e0:	cmp	w20, #0x4
  4227e4:	cset	w24, eq  // eq = none
  4227e8:	mov	w6, w21
  4227ec:	mov	w5, w24
  4227f0:	mov	w4, w23
  4227f4:	mov	w3, #0x0                   	// #0
  4227f8:	mov	x1, x22
  4227fc:	mov	x0, x19
  422800:	bl	421b30 <ferror@plt+0x1f260>
  422804:	mov	x22, x0
  422808:	cmp	x0, #0x0
  42280c:	mov	w0, #0x0                   	// #0
  422810:	ccmp	w24, #0x0, #0x4, eq  // eq = none
  422814:	b.eq	422884 <ferror@plt+0x1ffb4>  // b.none
  422818:	ldp	x19, x20, [sp, #16]
  42281c:	ldp	x21, x22, [sp, #32]
  422820:	ldp	x23, x24, [sp, #48]
  422824:	ldp	x29, x30, [sp], #64
  422828:	ret
  42282c:	ldr	x0, [x0, #448]
  422830:	ldr	x1, [x19, #488]
  422834:	ldr	x1, [x1, #16]
  422838:	cmp	x0, x1
  42283c:	b.eq	422844 <ferror@plt+0x1ff74>  // b.none
  422840:	stur	wzr, [x0, #-24]
  422844:	mov	w3, #0x3                   	// #3
  422848:	mov	w2, w23
  42284c:	mov	x1, x22
  422850:	mov	x0, x19
  422854:	bl	4219ec <ferror@plt+0x1f11c>
  422858:	mov	x2, x0
  42285c:	mov	w0, #0x0                   	// #0
  422860:	cbz	x2, 422818 <ferror@plt+0x1ff48>
  422864:	mov	w6, w21
  422868:	mov	w5, #0x0                   	// #0
  42286c:	mov	w4, w23
  422870:	mov	w3, #0x0                   	// #0
  422874:	mov	x1, x22
  422878:	mov	x0, x19
  42287c:	bl	421b30 <ferror@plt+0x1f260>
  422880:	mov	x22, x0
  422884:	ldr	x0, [x22, #16]
  422888:	cbz	x0, 4228ac <ferror@plt+0x1ffdc>
  42288c:	cmp	w20, #0x2
  422890:	mov	w3, w21
  422894:	cset	w2, eq  // eq = none
  422898:	mov	x1, x22
  42289c:	mov	x0, x19
  4228a0:	bl	422388 <ferror@plt+0x1fab8>
  4228a4:	and	w0, w0, #0xff
  4228a8:	b	422818 <ferror@plt+0x1ff48>
  4228ac:	ldr	w0, [x22, #204]
  4228b0:	cbnz	w0, 42288c <ferror@plt+0x1ffbc>
  4228b4:	sub	w0, w20, #0x3
  4228b8:	cmp	w0, #0x1
  4228bc:	b.ls	42288c <ferror@plt+0x1ffbc>  // b.plast
  4228c0:	ldr	x0, [x19, #40]
  4228c4:	ldr	w1, [x0, #56]
  4228c8:	bl	429174 <ferror@plt+0x268a4>
  4228cc:	mov	w23, w0
  4228d0:	mov	w1, w21
  4228d4:	ldr	x0, [x19, #40]
  4228d8:	bl	429174 <ferror@plt+0x268a4>
  4228dc:	cmp	w23, w0
  4228e0:	b.le	42288c <ferror@plt+0x1ffbc>
  4228e4:	ldr	x1, [x19, #40]
  4228e8:	ldr	w0, [x1, #56]
  4228ec:	sub	w0, w0, #0x1
  4228f0:	str	w0, [x1, #56]
  4228f4:	cmp	w20, #0x2
  4228f8:	mov	w3, w21
  4228fc:	cset	w2, eq  // eq = none
  422900:	mov	x1, x22
  422904:	mov	x0, x19
  422908:	bl	422388 <ferror@plt+0x1fab8>
  42290c:	ands	w0, w0, #0xff
  422910:	b.ne	422818 <ferror@plt+0x1ff48>  // b.any
  422914:	ldr	x2, [x19, #40]
  422918:	ldr	w1, [x2, #56]
  42291c:	add	w1, w1, #0x1
  422920:	str	w1, [x2, #56]
  422924:	b	422818 <ferror@plt+0x1ff48>
  422928:	stp	x29, x30, [sp, #-32]!
  42292c:	mov	x29, sp
  422930:	stp	x19, x20, [sp, #16]
  422934:	mov	x19, x1
  422938:	ldr	x20, [x0, #296]
  42293c:	mov	x0, x1
  422940:	bl	4467f0 <ferror@plt+0x43f20>
  422944:	mov	w2, w0
  422948:	mov	x1, x19
  42294c:	mov	x0, x20
  422950:	bl	44623c <ferror@plt+0x4396c>
  422954:	cbnz	x0, 422964 <ferror@plt+0x20094>
  422958:	b	422978 <ferror@plt+0x200a8>
  42295c:	ldr	x0, [x0]
  422960:	cbz	x0, 422978 <ferror@plt+0x200a8>
  422964:	ldr	x1, [x0, #8]
  422968:	cbz	x1, 42295c <ferror@plt+0x2008c>
  42296c:	ldr	x1, [x0, #24]
  422970:	ldr	w1, [x1, #204]
  422974:	cbnz	w1, 42295c <ferror@plt+0x2008c>
  422978:	cmp	x0, #0x0
  42297c:	cset	w0, ne  // ne = any
  422980:	ldp	x19, x20, [sp, #16]
  422984:	ldp	x29, x30, [sp], #32
  422988:	ret
  42298c:	stp	x29, x30, [sp, #-48]!
  422990:	mov	x29, sp
  422994:	stp	x19, x20, [sp, #16]
  422998:	stp	x21, x22, [sp, #32]
  42299c:	mov	x21, x0
  4229a0:	mov	x19, x1
  4229a4:	mov	w20, w2
  4229a8:	ldr	x22, [x0, #296]
  4229ac:	mov	x0, x1
  4229b0:	bl	4467f0 <ferror@plt+0x43f20>
  4229b4:	mov	w2, w0
  4229b8:	mov	x1, x19
  4229bc:	mov	x0, x22
  4229c0:	bl	44623c <ferror@plt+0x4396c>
  4229c4:	mov	x19, x0
  4229c8:	tbnz	w20, #31, 4229d4 <ferror@plt+0x20104>
  4229cc:	cbnz	x19, 4229f0 <ferror@plt+0x20120>
  4229d0:	b	422a10 <ferror@plt+0x20140>
  4229d4:	mov	w1, w20
  4229d8:	ldr	x0, [x21, #40]
  4229dc:	bl	42833c <ferror@plt+0x25a6c>
  4229e0:	mov	w20, w0
  4229e4:	b	4229cc <ferror@plt+0x200fc>
  4229e8:	ldr	x19, [x19]
  4229ec:	cbz	x19, 422a10 <ferror@plt+0x20140>
  4229f0:	ldr	x1, [x19, #8]
  4229f4:	cbz	x1, 4229e8 <ferror@plt+0x20118>
  4229f8:	ldr	x1, [x19, #24]
  4229fc:	ldr	w1, [x1, #204]
  422a00:	cbnz	w1, 4229e8 <ferror@plt+0x20118>
  422a04:	ldr	w0, [x19, #16]
  422a08:	cmp	w0, w20
  422a0c:	b.hi	4229e8 <ferror@plt+0x20118>  // b.pmore
  422a10:	cmp	x19, #0x0
  422a14:	cset	w0, ne  // ne = any
  422a18:	ldp	x19, x20, [sp, #16]
  422a1c:	ldp	x21, x22, [sp, #32]
  422a20:	ldp	x29, x30, [sp], #48
  422a24:	ret
  422a28:	stp	x29, x30, [sp, #-64]!
  422a2c:	mov	x29, sp
  422a30:	stp	x19, x20, [sp, #16]
  422a34:	stp	x21, x22, [sp, #32]
  422a38:	str	x23, [sp, #48]
  422a3c:	mov	x19, x0
  422a40:	adrp	x20, 402000 <memcpy@plt-0x260>
  422a44:	add	x20, x20, #0x690
  422a48:	adrp	x21, 447000 <_obstack_memory_used@@Base+0x94>
  422a4c:	add	x21, x21, #0x84
  422a50:	adrp	x23, 420000 <ferror@plt+0x1d730>
  422a54:	add	x23, x23, #0xf78
  422a58:	adrp	x22, 420000 <ferror@plt+0x1d730>
  422a5c:	add	x22, x22, #0xe58
  422a60:	mov	x5, x20
  422a64:	mov	x4, x21
  422a68:	mov	x3, #0x0                   	// #0
  422a6c:	mov	x2, x23
  422a70:	mov	x1, x22
  422a74:	mov	x0, #0x7f                  	// #127
  422a78:	bl	446008 <ferror@plt+0x43738>
  422a7c:	str	x0, [x19, #296]
  422a80:	mov	x5, x20
  422a84:	mov	x4, x21
  422a88:	mov	x3, #0x0                   	// #0
  422a8c:	mov	x2, x23
  422a90:	mov	x1, x22
  422a94:	mov	x0, #0x7f                  	// #127
  422a98:	bl	446008 <ferror@plt+0x43738>
  422a9c:	str	x0, [x19, #304]
  422aa0:	mov	x0, #0xff0                 	// #4080
  422aa4:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  422aa8:	str	wzr, [x0]
  422aac:	ldr	x1, [x19, #312]
  422ab0:	str	x1, [x0, #8]
  422ab4:	str	x0, [x19, #312]
  422ab8:	mov	x5, x20
  422abc:	mov	x4, x21
  422ac0:	mov	x3, #0x0                   	// #0
  422ac4:	adrp	x2, 420000 <ferror@plt+0x1d730>
  422ac8:	add	x2, x2, #0xf5c
  422acc:	adrp	x1, 446000 <ferror@plt+0x43730>
  422ad0:	add	x1, x1, #0x7f0
  422ad4:	mov	x0, #0x7f                  	// #127
  422ad8:	bl	446008 <ferror@plt+0x43738>
  422adc:	str	x0, [x19, #320]
  422ae0:	mov	x4, x20
  422ae4:	adrp	x3, 447000 <_obstack_memory_used@@Base+0x94>
  422ae8:	add	x3, x3, #0x50
  422aec:	mov	x2, #0x0                   	// #0
  422af0:	mov	x1, #0x0                   	// #0
  422af4:	add	x0, x19, #0x148
  422af8:	bl	446d40 <_obstack_begin@@Base>
  422afc:	ldp	x19, x20, [sp, #16]
  422b00:	ldp	x21, x22, [sp, #32]
  422b04:	ldr	x23, [sp, #48]
  422b08:	ldp	x29, x30, [sp], #64
  422b0c:	ret
  422b10:	stp	x29, x30, [sp, #-32]!
  422b14:	mov	x29, sp
  422b18:	stp	x19, x20, [sp, #16]
  422b1c:	mov	x19, x0
  422b20:	ldr	x0, [x0, #296]
  422b24:	bl	446088 <ferror@plt+0x437b8>
  422b28:	ldr	x0, [x19, #304]
  422b2c:	bl	446088 <ferror@plt+0x437b8>
  422b30:	ldr	x0, [x19, #320]
  422b34:	bl	446088 <ferror@plt+0x437b8>
  422b38:	mov	x1, #0x0                   	// #0
  422b3c:	add	x0, x19, #0x148
  422b40:	bl	446eec <_obstack_free@@Base>
  422b44:	ldr	x20, [x19, #312]
  422b48:	cbz	x20, 422b5c <ferror@plt+0x2028c>
  422b4c:	mov	x0, x20
  422b50:	ldr	x20, [x20, #8]
  422b54:	bl	402690 <free@plt>
  422b58:	cbnz	x20, 422b4c <ferror@plt+0x2027c>
  422b5c:	ldr	x19, [x19, #280]
  422b60:	cbz	x19, 422b74 <ferror@plt+0x202a4>
  422b64:	mov	x0, x19
  422b68:	ldr	x19, [x19, #32]
  422b6c:	bl	420e88 <ferror@plt+0x1e5b8>
  422b70:	cbnz	x19, 422b64 <ferror@plt+0x20294>
  422b74:	ldp	x19, x20, [sp, #16]
  422b78:	ldp	x29, x30, [sp], #32
  422b7c:	ret
  422b80:	stp	x29, x30, [sp, #-32]!
  422b84:	mov	x29, sp
  422b88:	str	x19, [sp, #16]
  422b8c:	mov	x19, x0
  422b90:	bl	422b10 <ferror@plt+0x20240>
  422b94:	str	xzr, [x19, #312]
  422b98:	str	xzr, [x19, #280]
  422b9c:	mov	x0, x19
  422ba0:	bl	422a28 <ferror@plt+0x20158>
  422ba4:	ldr	x19, [sp, #16]
  422ba8:	ldp	x29, x30, [sp], #32
  422bac:	ret
  422bb0:	stp	x29, x30, [sp, #-16]!
  422bb4:	mov	x29, sp
  422bb8:	ldr	x2, [x0]
  422bbc:	ldr	x2, [x2, #80]
  422bc0:	mov	w6, #0x0                   	// #0
  422bc4:	mov	w5, #0x0                   	// #0
  422bc8:	mov	w4, #0x0                   	// #0
  422bcc:	mov	w3, #0x1                   	// #1
  422bd0:	ldr	x2, [x2, #64]
  422bd4:	bl	421b30 <ferror@plt+0x1f260>
  422bd8:	ldp	x29, x30, [sp], #16
  422bdc:	ret
  422be0:	stp	x29, x30, [sp, #-16]!
  422be4:	mov	x29, sp
  422be8:	mov	w4, w1
  422bec:	ldr	x1, [x0, #40]
  422bf0:	ldr	w5, [x1, #12]
  422bf4:	sub	w5, w5, #0x1
  422bf8:	sbfiz	x3, x5, #1, #32
  422bfc:	add	x5, x3, w5, sxtw
  422c00:	lsl	x5, x5, #3
  422c04:	ldr	x3, [x1]
  422c08:	add	x6, x3, x5
  422c0c:	cbz	w4, 422c1c <ferror@plt+0x2034c>
  422c10:	cmp	w2, #0x0
  422c14:	cset	w4, ne  // ne = any
  422c18:	add	w4, w4, #0x1
  422c1c:	ldr	x1, [x0]
  422c20:	strb	w4, [x1, #106]
  422c24:	ldr	x1, [x0, #40]
  422c28:	ldr	w1, [x1, #60]
  422c2c:	ldr	w3, [x3, x5]
  422c30:	sub	w1, w1, w3
  422c34:	ldrb	w3, [x6, #6]
  422c38:	lsr	w1, w1, w3
  422c3c:	ldr	w3, [x6, #16]
  422c40:	add	w3, w1, w3
  422c44:	ldr	x2, [x6, #8]
  422c48:	mov	w1, #0x2                   	// #2
  422c4c:	bl	41b390 <ferror@plt+0x18ac0>
  422c50:	ldp	x29, x30, [sp], #16
  422c54:	ret
  422c58:	stp	x29, x30, [sp, #-16]!
  422c5c:	mov	x29, sp
  422c60:	mov	w4, #0x0                   	// #0
  422c64:	mov	w3, #0x1                   	// #1
  422c68:	bl	41b390 <ferror@plt+0x18ac0>
  422c6c:	ldp	x29, x30, [sp], #16
  422c70:	ret
  422c74:	stp	x29, x30, [sp, #-64]!
  422c78:	mov	x29, sp
  422c7c:	stp	x19, x20, [sp, #16]
  422c80:	mov	x19, x0
  422c84:	str	xzr, [sp, #48]
  422c88:	ldr	x0, [x0, #296]
  422c8c:	bl	445e48 <ferror@plt+0x43578>
  422c90:	str	x0, [sp, #56]
  422c94:	add	x2, sp, #0x30
  422c98:	adrp	x1, 420000 <ferror@plt+0x1d730>
  422c9c:	add	x1, x1, #0xec4
  422ca0:	ldr	x0, [x19, #296]
  422ca4:	bl	446760 <ferror@plt+0x43e90>
  422ca8:	ldr	x0, [sp, #48]
  422cac:	cbz	x0, 422d4c <ferror@plt+0x2047c>
  422cb0:	adrp	x3, 421000 <ferror@plt+0x1e730>
  422cb4:	add	x3, x3, #0x4a0
  422cb8:	mov	x2, #0x8                   	// #8
  422cbc:	ldr	x1, [sp, #56]
  422cc0:	bl	402390 <qsort@plt>
  422cc4:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a094>
  422cc8:	add	x1, x1, #0x768
  422ccc:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x19094>
  422cd0:	add	x0, x0, #0xbb0
  422cd4:	bl	402680 <dgettext@plt>
  422cd8:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x41094>
  422cdc:	ldr	x1, [x1, #1320]
  422ce0:	bl	4027c0 <fputs_unlocked@plt>
  422ce4:	ldr	x0, [sp, #56]
  422ce8:	cbz	x0, 422d44 <ferror@plt+0x20474>
  422cec:	stp	x21, x22, [sp, #32]
  422cf0:	mov	x19, #0x0                   	// #0
  422cf4:	adrp	x20, 488000 <_obstack_memory_used@@Base+0x41094>
  422cf8:	mov	w21, #0xa                   	// #10
  422cfc:	mov	w22, #0xa                   	// #10
  422d00:	ldr	x1, [x20, #1320]
  422d04:	ldr	x0, [sp, #48]
  422d08:	ldr	x0, [x0, x19, lsl #3]
  422d0c:	bl	4027c0 <fputs_unlocked@plt>
  422d10:	ldr	x0, [x20, #1320]
  422d14:	ldr	x1, [x0, #40]
  422d18:	ldr	x2, [x0, #48]
  422d1c:	cmp	x1, x2
  422d20:	b.cs	422d58 <ferror@plt+0x20488>  // b.hs, b.nlast
  422d24:	add	x2, x1, #0x1
  422d28:	str	x2, [x0, #40]
  422d2c:	strb	w21, [x1]
  422d30:	add	x19, x19, #0x1
  422d34:	ldr	x0, [sp, #56]
  422d38:	cmp	x0, x19
  422d3c:	b.hi	422d00 <ferror@plt+0x20430>  // b.pmore
  422d40:	ldp	x21, x22, [sp, #32]
  422d44:	ldr	x0, [sp, #48]
  422d48:	bl	402690 <free@plt>
  422d4c:	ldp	x19, x20, [sp, #16]
  422d50:	ldp	x29, x30, [sp], #64
  422d54:	ret
  422d58:	mov	w1, w22
  422d5c:	bl	4025a0 <__overflow@plt>
  422d60:	b	422d30 <ferror@plt+0x20460>
  422d64:	stp	x29, x30, [sp, #-48]!
  422d68:	mov	x29, sp
  422d6c:	stp	x19, x20, [sp, #16]
  422d70:	str	x21, [sp, #32]
  422d74:	mov	x19, x0
  422d78:	mov	x20, x1
  422d7c:	mov	w21, w2
  422d80:	mov	w3, #0x0                   	// #0
  422d84:	bl	4219ec <ferror@plt+0x1f11c>
  422d88:	cbz	x0, 422e00 <ferror@plt+0x20530>
  422d8c:	mov	x2, x0
  422d90:	mov	w6, #0x0                   	// #0
  422d94:	mov	w5, #0x0                   	// #0
  422d98:	mov	w4, w21
  422d9c:	mov	w3, #0x0                   	// #0
  422da0:	mov	x1, x20
  422da4:	mov	x0, x19
  422da8:	bl	421b30 <ferror@plt+0x1f260>
  422dac:	mov	x20, x0
  422db0:	ldr	w1, [x0, #204]
  422db4:	mov	w0, #0xffffffff            	// #-1
  422db8:	cbnz	w1, 422de0 <ferror@plt+0x20510>
  422dbc:	ldr	w0, [x20, #200]
  422dc0:	cmn	w0, #0x1
  422dc4:	b.ne	422df0 <ferror@plt+0x20520>  // b.any
  422dc8:	ldr	x0, [x19]
  422dcc:	ldr	x0, [x0, #80]
  422dd0:	ldr	x1, [x20, #160]
  422dd4:	ldr	x0, [x0, #160]
  422dd8:	cmp	x1, x0
  422ddc:	cset	w0, gt
  422de0:	ldp	x19, x20, [sp, #16]
  422de4:	ldr	x21, [sp, #32]
  422de8:	ldp	x29, x30, [sp], #48
  422dec:	ret
  422df0:	bl	402540 <close@plt>
  422df4:	mov	w0, #0xffffffff            	// #-1
  422df8:	str	w0, [x20, #200]
  422dfc:	b	422dc8 <ferror@plt+0x204f8>
  422e00:	mov	w0, #0xffffffff            	// #-1
  422e04:	b	422de0 <ferror@plt+0x20510>
  422e08:	stp	x29, x30, [sp, #-16]!
  422e0c:	mov	x29, sp
  422e10:	mov	w4, #0x0                   	// #0
  422e14:	mov	w3, #0x3                   	// #3
  422e18:	mov	w2, #0x0                   	// #0
  422e1c:	bl	4227a0 <ferror@plt+0x1fed0>
  422e20:	ldp	x29, x30, [sp], #16
  422e24:	ret
  422e28:	stp	x29, x30, [sp, #-16]!
  422e2c:	mov	x29, sp
  422e30:	mov	w4, #0x0                   	// #0
  422e34:	mov	w3, #0x4                   	// #4
  422e38:	mov	w2, #0x1                   	// #1
  422e3c:	bl	4227a0 <ferror@plt+0x1fed0>
  422e40:	ldp	x29, x30, [sp], #16
  422e44:	ret
  422e48:	mov	x3, x0
  422e4c:	mov	x0, x2
  422e50:	ldrb	w2, [x3, #440]
  422e54:	cbz	w2, 422e60 <ferror@plt+0x20590>
  422e58:	ldr	x2, [x1, #56]
  422e5c:	cbz	x2, 422e88 <ferror@plt+0x205b8>
  422e60:	strb	wzr, [x3, #440]
  422e64:	cbz	x0, 422ea4 <ferror@plt+0x205d4>
  422e68:	stp	x29, x30, [sp, #-16]!
  422e6c:	mov	x29, sp
  422e70:	ldr	x2, [x1, #48]
  422e74:	cmp	x2, x0
  422e78:	b.eq	422e94 <ferror@plt+0x205c4>  // b.none
  422e7c:	bl	402690 <free@plt>
  422e80:	ldp	x29, x30, [sp], #16
  422e84:	ret
  422e88:	ldr	x2, [x3, #424]
  422e8c:	str	x2, [x1, #56]
  422e90:	b	422e60 <ferror@plt+0x20590>
  422e94:	str	xzr, [x1, #48]
  422e98:	str	xzr, [x1, #40]
  422e9c:	strb	wzr, [x1, #213]
  422ea0:	b	422e7c <ferror@plt+0x205ac>
  422ea4:	ret
  422ea8:	ldr	x0, [x0]
  422eac:	ret
  422eb0:	add	x0, x0, #0x48
  422eb4:	ret
  422eb8:	stp	x29, x30, [sp, #-48]!
  422ebc:	mov	x29, sp
  422ec0:	stp	x19, x20, [sp, #16]
  422ec4:	str	x21, [sp, #32]
  422ec8:	mov	x21, x0
  422ecc:	mov	x19, x1
  422ed0:	mov	x20, x2
  422ed4:	str	x1, [x0, #200]
  422ed8:	str	x1, [x0, #208]
  422edc:	cmp	w3, #0x0
  422ee0:	cset	w0, ne  // ne = any
  422ee4:	strb	w0, [x21, #416]
  422ee8:	cbnz	x1, 422f08 <ferror@plt+0x20638>
  422eec:	ldp	x19, x20, [sp, #16]
  422ef0:	ldr	x21, [sp, #32]
  422ef4:	ldp	x29, x30, [sp], #48
  422ef8:	ret
  422efc:	str	x20, [x21, #208]
  422f00:	ldr	x19, [x19]
  422f04:	cbz	x19, 422eec <ferror@plt+0x2061c>
  422f08:	str	xzr, [x19, #32]
  422f0c:	ldr	x0, [x19, #8]
  422f10:	bl	4022b0 <strlen@plt>
  422f14:	str	w0, [x19, #16]
  422f18:	cmp	x20, x19
  422f1c:	b.ne	422f00 <ferror@plt+0x20630>  // b.any
  422f20:	b	422efc <ferror@plt+0x2062c>
  422f24:	ldr	x0, [x0, #8]
  422f28:	ret
  422f2c:	ldr	x0, [x0, #64]
  422f30:	ret
  422f34:	ldr	x0, [x0]
  422f38:	ret
  422f3c:	ldr	x0, [x0, #80]
  422f40:	ret
  422f44:	ldr	x0, [x0, #72]
  422f48:	ret
  422f4c:	stp	x29, x30, [sp, #-80]!
  422f50:	mov	x29, sp
  422f54:	stp	x19, x20, [sp, #16]
  422f58:	stp	x21, x22, [sp, #32]
  422f5c:	stp	x23, x24, [sp, #48]
  422f60:	stp	x25, x26, [sp, #64]
  422f64:	mov	x22, x0
  422f68:	mov	x23, x1
  422f6c:	ldr	x2, [x0, #280]
  422f70:	cbz	x2, 422fb4 <ferror@plt+0x206e4>
  422f74:	mov	x1, #0x0                   	// #0
  422f78:	add	x1, x1, #0x1
  422f7c:	ldr	x2, [x2, #32]
  422f80:	cbnz	x2, 422f78 <ferror@plt+0x206a8>
  422f84:	lsl	x1, x1, #5
  422f88:	add	x1, x1, #0x10
  422f8c:	mov	x0, #0x1                   	// #1
  422f90:	bl	447084 <_obstack_memory_used@@Base+0x118>
  422f94:	mov	x20, x0
  422f98:	str	xzr, [x0]
  422f9c:	strb	wzr, [x0, #8]
  422fa0:	ldr	x19, [x22, #280]
  422fa4:	cbz	x19, 423088 <ferror@plt+0x207b8>
  422fa8:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x10094>
  422fac:	add	x24, x24, #0xe30
  422fb0:	b	42300c <ferror@plt+0x2073c>
  422fb4:	mov	x1, #0x0                   	// #0
  422fb8:	b	422f84 <ferror@plt+0x206b4>
  422fbc:	ldr	w26, [x19, #200]
  422fc0:	mov	x0, x19
  422fc4:	bl	4214bc <ferror@plt+0x1ebec>
  422fc8:	ands	w25, w0, #0xff
  422fcc:	b.eq	423068 <ferror@plt+0x20798>  // b.none
  422fd0:	mov	x1, x24
  422fd4:	ldr	w0, [x19, #200]
  422fd8:	bl	445acc <ferror@plt+0x431fc>
  422fdc:	mov	x25, x0
  422fe0:	add	x1, x20, x21, lsl #5
  422fe4:	add	x1, x1, #0x18
  422fe8:	bl	445860 <ferror@plt+0x42f90>
  422fec:	mov	x0, x25
  422ff0:	bl	4023c0 <fclose@plt>
  422ff4:	str	w26, [x19, #200]
  422ff8:	ldr	x0, [x19, #120]
  422ffc:	add	x21, x20, x21, lsl #5
  423000:	str	x0, [x21, #16]
  423004:	ldr	x19, [x19, #32]
  423008:	cbz	x19, 423088 <ferror@plt+0x207b8>
  42300c:	ldrb	w2, [x19, #211]
  423010:	cbnz	w2, 423004 <ferror@plt+0x20734>
  423014:	ldr	w0, [x19, #204]
  423018:	cbnz	w0, 423004 <ferror@plt+0x20734>
  42301c:	ldrh	w0, [x19, #208]
  423020:	cbz	w0, 423004 <ferror@plt+0x20734>
  423024:	ldr	x21, [x20]
  423028:	add	x0, x21, #0x1
  42302c:	str	x0, [x20]
  423030:	ldrb	w2, [x19, #210]
  423034:	add	x0, x20, x0, lsl #5
  423038:	strb	w2, [x0, #8]
  42303c:	ldrb	w0, [x20, #8]
  423040:	orr	w2, w2, w0
  423044:	strb	w2, [x20, #8]
  423048:	ldrb	w0, [x19, #213]
  42304c:	cbz	w0, 422fbc <ferror@plt+0x206ec>
  423050:	add	x2, x20, x21, lsl #5
  423054:	add	x2, x2, #0x18
  423058:	ldr	x1, [x19, #120]
  42305c:	ldr	x0, [x19, #40]
  423060:	bl	445810 <ferror@plt+0x42f40>
  423064:	b	422ff8 <ferror@plt+0x20728>
  423068:	mov	w3, #0x0                   	// #0
  42306c:	mov	w2, #0x0                   	// #0
  423070:	mov	x1, x19
  423074:	mov	x0, x22
  423078:	bl	4216ac <ferror@plt+0x1eddc>
  42307c:	mov	x0, x20
  423080:	bl	402690 <free@plt>
  423084:	b	4230cc <ferror@plt+0x207fc>
  423088:	mov	x0, x20
  42308c:	ldr	x19, [x0], #16
  423090:	adrp	x3, 421000 <ferror@plt+0x1e730>
  423094:	add	x3, x3, #0x7d0
  423098:	mov	x2, #0x20                  	// #32
  42309c:	mov	x1, x19
  4230a0:	bl	402390 <qsort@plt>
  4230a4:	lsl	x1, x19, #5
  4230a8:	mov	x3, x23
  4230ac:	mov	x2, #0x1                   	// #1
  4230b0:	add	x1, x1, #0x10
  4230b4:	mov	x0, x20
  4230b8:	bl	402290 <fwrite_unlocked@plt>
  4230bc:	cmp	x0, #0x1
  4230c0:	cset	w25, eq  // eq = none
  4230c4:	mov	x0, x20
  4230c8:	bl	402690 <free@plt>
  4230cc:	mov	w0, w25
  4230d0:	ldp	x19, x20, [sp, #16]
  4230d4:	ldp	x21, x22, [sp, #32]
  4230d8:	ldp	x23, x24, [sp, #48]
  4230dc:	ldp	x25, x26, [sp, #64]
  4230e0:	ldp	x29, x30, [sp], #80
  4230e4:	ret
  4230e8:	stp	x29, x30, [sp, #-80]!
  4230ec:	mov	x29, sp
  4230f0:	str	x19, [sp, #16]
  4230f4:	mov	x19, x1
  4230f8:	mov	x3, x1
  4230fc:	mov	x2, #0x1                   	// #1
  423100:	mov	x1, #0x10                  	// #16
  423104:	add	x0, sp, #0x20
  423108:	bl	4025d0 <fread_unlocked@plt>
  42310c:	mov	w1, #0x0                   	// #0
  423110:	cmp	x0, #0x1
  423114:	b.eq	423128 <ferror@plt+0x20858>  // b.none
  423118:	mov	w0, w1
  42311c:	ldr	x19, [sp, #16]
  423120:	ldp	x29, x30, [sp], #80
  423124:	ret
  423128:	ldr	x0, [sp, #32]
  42312c:	lsl	x0, x0, #5
  423130:	add	x0, x0, #0x10
  423134:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  423138:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x41094>
  42313c:	str	x0, [x1, #1936]
  423140:	ldp	x2, x3, [sp, #32]
  423144:	stp	x2, x3, [x0], #16
  423148:	mov	x3, x19
  42314c:	ldr	x2, [sp, #32]
  423150:	mov	x1, #0x20                  	// #32
  423154:	bl	4025d0 <fread_unlocked@plt>
  423158:	ldr	x1, [sp, #32]
  42315c:	cmp	x1, x0
  423160:	cset	w1, eq  // eq = none
  423164:	b	423118 <ferror@plt+0x20848>
  423168:	stp	x29, x30, [sp, #-48]!
  42316c:	mov	x29, sp
  423170:	stp	x19, x20, [sp, #16]
  423174:	str	x21, [sp, #32]
  423178:	mov	x19, x0
  42317c:	mov	x20, x1
  423180:	mov	w21, w2
  423184:	bl	4219ec <ferror@plt+0x1f11c>
  423188:	mov	w6, #0x0                   	// #0
  42318c:	mov	w5, #0x0                   	// #0
  423190:	mov	w4, w21
  423194:	mov	w3, #0x0                   	// #0
  423198:	mov	x2, x0
  42319c:	mov	x1, x20
  4231a0:	mov	x0, x19
  4231a4:	bl	421b30 <ferror@plt+0x1f260>
  4231a8:	ldr	w0, [x0, #204]
  4231ac:	cmp	w0, #0x2
  4231b0:	cset	w0, ne  // ne = any
  4231b4:	ldp	x19, x20, [sp, #16]
  4231b8:	ldr	x21, [sp, #32]
  4231bc:	ldp	x29, x30, [sp], #48
  4231c0:	ret
  4231c4:	stp	x29, x30, [sp, #-32]!
  4231c8:	mov	x29, sp
  4231cc:	str	x19, [sp, #16]
  4231d0:	ldr	x19, [x0, #120]
  4231d4:	ldr	x0, [x19, #752]
  4231d8:	ldr	x1, [x19, #744]
  4231dc:	sub	x0, x0, x1
  4231e0:	cmp	x0, #0x1f
  4231e4:	b.ls	423244 <ferror@plt+0x20974>  // b.plast
  4231e8:	ldr	x2, [x19, #744]
  4231ec:	add	x2, x2, #0x20
  4231f0:	ldr	x0, [x19, #736]
  4231f4:	cmp	x2, x0
  4231f8:	b.eq	423254 <ferror@plt+0x20984>  // b.none
  4231fc:	ldr	x1, [x19, #768]
  423200:	add	x2, x2, x1
  423204:	bic	x1, x2, x1
  423208:	str	x1, [x19, #744]
  42320c:	ldr	x2, [x19, #728]
  423210:	ldr	x3, [x19, #752]
  423214:	sub	x1, x1, x2
  423218:	sub	x2, x3, x2
  42321c:	cmp	x1, x2
  423220:	b.ls	423228 <ferror@plt+0x20958>  // b.plast
  423224:	str	x3, [x19, #744]
  423228:	ldr	x1, [x19, #744]
  42322c:	str	x1, [x19, #736]
  423230:	stp	xzr, xzr, [x0]
  423234:	stp	xzr, xzr, [x0, #16]
  423238:	ldr	x19, [sp, #16]
  42323c:	ldp	x29, x30, [sp], #32
  423240:	ret
  423244:	mov	x1, #0x20                  	// #32
  423248:	add	x0, x19, #0x2d0
  42324c:	bl	446d94 <_obstack_newchunk@@Base>
  423250:	b	4231e8 <ferror@plt+0x20918>
  423254:	ldrb	w1, [x19, #800]
  423258:	orr	w1, w1, #0x2
  42325c:	strb	w1, [x19, #800]
  423260:	b	4231fc <ferror@plt+0x2092c>
  423264:	stp	x29, x30, [sp, #-32]!
  423268:	mov	x29, sp
  42326c:	str	x19, [sp, #16]
  423270:	mov	x19, x0
  423274:	ldrb	w0, [x0, #1304]
  423278:	cbnz	w0, 423288 <ferror@plt+0x209b8>
  42327c:	ldr	x19, [sp, #16]
  423280:	ldp	x29, x30, [sp], #32
  423284:	ret
  423288:	ldr	x0, [x19, #1088]
  42328c:	bl	42fa68 <ferror@plt+0x2d198>
  423290:	mov	x1, #0x0                   	// #0
  423294:	add	x0, x19, #0x2d0
  423298:	bl	446eec <_obstack_free@@Base>
  42329c:	b	42327c <ferror@plt+0x209ac>
  4232a0:	stp	x29, x30, [sp, #-16]!
  4232a4:	mov	x29, sp
  4232a8:	mov	w3, #0x1                   	// #1
  4232ac:	mov	w2, w2
  4232b0:	ldr	x0, [x0, #1088]
  4232b4:	bl	42fdb8 <ferror@plt+0x2d4e8>
  4232b8:	ldp	x29, x30, [sp], #16
  4232bc:	ret
  4232c0:	stp	x29, x30, [sp, #-32]!
  4232c4:	mov	x29, sp
  4232c8:	stp	x19, x20, [sp, #16]
  4232cc:	mov	x19, x0
  4232d0:	mov	x20, x1
  4232d4:	cbz	x1, 4233bc <ferror@plt+0x20aec>
  4232d8:	str	x19, [x20, #120]
  4232dc:	str	x20, [x19, #1088]
  4232e0:	mov	x0, x19
  4232e4:	bl	41c780 <ferror@plt+0x19eb0>
  4232e8:	mov	x0, x19
  4232ec:	bl	41b97c <ferror@plt+0x190ac>
  4232f0:	mov	w2, #0x7                   	// #7
  4232f4:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a094>
  4232f8:	add	x1, x1, #0x798
  4232fc:	mov	x0, x19
  423300:	bl	4232a0 <ferror@plt+0x209d0>
  423304:	str	x0, [x19, #1248]
  423308:	mov	w2, #0x4                   	// #4
  42330c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a094>
  423310:	add	x1, x1, #0x7a0
  423314:	mov	x0, x19
  423318:	bl	4232a0 <ferror@plt+0x209d0>
  42331c:	str	x0, [x19, #1256]
  423320:	mov	w2, #0x5                   	// #5
  423324:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a094>
  423328:	add	x1, x1, #0x7a8
  42332c:	mov	x0, x19
  423330:	bl	4232a0 <ferror@plt+0x209d0>
  423334:	str	x0, [x19, #1264]
  423338:	mov	w2, #0xb                   	// #11
  42333c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a094>
  423340:	add	x1, x1, #0x7b0
  423344:	mov	x0, x19
  423348:	bl	4232a0 <ferror@plt+0x209d0>
  42334c:	str	x0, [x19, #1272]
  423350:	ldrh	w1, [x0, #18]
  423354:	orr	w1, w1, #0x10
  423358:	strh	w1, [x0, #18]
  42335c:	mov	w2, #0xa                   	// #10
  423360:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a094>
  423364:	add	x1, x1, #0x7c0
  423368:	mov	x0, x19
  42336c:	bl	4232a0 <ferror@plt+0x209d0>
  423370:	str	x0, [x19, #1280]
  423374:	ldrh	w1, [x0, #18]
  423378:	orr	w1, w1, #0x10
  42337c:	strh	w1, [x0, #18]
  423380:	mov	w2, #0xf                   	// #15
  423384:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a094>
  423388:	add	x1, x1, #0x7d0
  42338c:	mov	x0, x19
  423390:	bl	4232a0 <ferror@plt+0x209d0>
  423394:	str	x0, [x19, #1288]
  423398:	mov	w2, #0x14                  	// #20
  42339c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a094>
  4233a0:	add	x1, x1, #0x7e0
  4233a4:	mov	x0, x19
  4233a8:	bl	4232a0 <ferror@plt+0x209d0>
  4233ac:	str	x0, [x19, #1296]
  4233b0:	ldp	x19, x20, [sp, #16]
  4233b4:	ldp	x29, x30, [sp], #32
  4233b8:	ret
  4233bc:	mov	w0, #0x1                   	// #1
  4233c0:	strb	w0, [x19, #1304]
  4233c4:	mov	w0, #0xd                   	// #13
  4233c8:	bl	42f9f4 <ferror@plt+0x2d124>
  4233cc:	mov	x20, x0
  4233d0:	adrp	x0, 423000 <ferror@plt+0x20730>
  4233d4:	add	x0, x0, #0x1c4
  4233d8:	str	x0, [x20, #96]
  4233dc:	adrp	x4, 402000 <memcpy@plt-0x260>
  4233e0:	add	x4, x4, #0x690
  4233e4:	adrp	x3, 447000 <_obstack_memory_used@@Base+0x94>
  4233e8:	add	x3, x3, #0x50
  4233ec:	mov	x2, #0x0                   	// #0
  4233f0:	mov	x1, #0x0                   	// #0
  4233f4:	add	x0, x19, #0x2d0
  4233f8:	bl	446d40 <_obstack_begin@@Base>
  4233fc:	b	4232d8 <ferror@plt+0x20a08>
  423400:	stp	x29, x30, [sp, #-16]!
  423404:	mov	x29, sp
  423408:	mov	w3, #0x0                   	// #0
  42340c:	sxtw	x2, w2
  423410:	ldr	x0, [x0, #1088]
  423414:	bl	42fdb8 <ferror@plt+0x2d4e8>
  423418:	cbz	x0, 42342c <ferror@plt+0x20b5c>
  42341c:	ldrb	w0, [x0, #18]
  423420:	ubfx	x0, x0, #1, #1
  423424:	ldp	x29, x30, [sp], #16
  423428:	ret
  42342c:	mov	w0, #0x0                   	// #0
  423430:	b	423424 <ferror@plt+0x20b54>
  423434:	stp	x29, x30, [sp, #-16]!
  423438:	mov	x29, sp
  42343c:	ldr	x0, [x0, #1088]
  423440:	bl	42fe08 <ferror@plt+0x2d538>
  423444:	ldp	x29, x30, [sp], #16
  423448:	ret
  42344c:	stp	x29, x30, [sp, #-48]!
  423450:	mov	x29, sp
  423454:	stp	x19, x20, [sp, #16]
  423458:	str	x21, [sp, #32]
  42345c:	mov	x19, x0
  423460:	mov	x21, x1
  423464:	mov	w20, w2
  423468:	ldr	w0, [x0, #64]
  42346c:	ldr	w1, [x19, #60]
  423470:	cmp	w1, w0
  423474:	b.eq	4234b4 <ferror@plt+0x20be4>  // b.none
  423478:	ldr	w0, [x19, #60]
  42347c:	ldr	x1, [x19, #48]
  423480:	lsl	x0, x0, #4
  423484:	str	x21, [x1, x0]
  423488:	ldr	w0, [x19, #60]
  42348c:	ldr	x1, [x19, #48]
  423490:	add	x0, x1, x0, lsl #4
  423494:	str	w20, [x0, #8]
  423498:	ldr	w0, [x19, #60]
  42349c:	add	w0, w0, #0x1
  4234a0:	str	w0, [x19, #60]
  4234a4:	ldp	x19, x20, [sp, #16]
  4234a8:	ldr	x21, [sp, #32]
  4234ac:	ldp	x29, x30, [sp], #48
  4234b0:	ret
  4234b4:	add	w0, w0, #0x64
  4234b8:	lsl	w0, w0, #1
  4234bc:	str	w0, [x19, #64]
  4234c0:	mov	w0, w0
  4234c4:	lsl	x1, x0, #4
  4234c8:	ldr	x0, [x19, #48]
  4234cc:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  4234d0:	str	x0, [x19, #48]
  4234d4:	b	423478 <ferror@plt+0x20ba8>
  4234d8:	ldrb	w6, [x1]
  4234dc:	tbz	w6, #7, 4235a4 <ferror@plt+0x20cd4>
  4234e0:	mov	w2, w6
  4234e4:	mov	w4, #0x0                   	// #0
  4234e8:	mov	w5, w4
  4234ec:	add	w4, w4, #0x1
  4234f0:	lsl	w2, w2, #1
  4234f4:	tbnz	w2, #7, 4234e8 <ferror@plt+0x20c18>
  4234f8:	mov	w3, #0x7f                  	// #127
  4234fc:	asr	w3, w3, w4
  423500:	and	w3, w3, w6
  423504:	sxtw	x3, w3
  423508:	cmp	w4, #0x1
  42350c:	b.le	423540 <ferror@plt+0x20c70>
  423510:	mov	x2, #0x0                   	// #0
  423514:	add	x6, x1, #0x1
  423518:	ldrb	w1, [x6, x2]
  42351c:	mov	x7, x1
  423520:	bfi	x7, x3, #6, #58
  423524:	mov	x3, x7
  423528:	and	w1, w1, #0xffffffc0
  42352c:	cmp	w1, #0x80
  423530:	b.ne	423584 <ferror@plt+0x20cb4>  // b.any
  423534:	add	x2, x2, #0x1
  423538:	cmp	w5, w2
  42353c:	b.gt	423518 <ferror@plt+0x20c48>
  423540:	mov	w1, #0x5c                  	// #92
  423544:	strb	w1, [x0]
  423548:	mov	w1, #0x55                  	// #85
  42354c:	strb	w1, [x0, #1]
  423550:	add	x0, x0, #0x2
  423554:	mov	w1, #0x1c                  	// #28
  423558:	adrp	x5, 461000 <_obstack_memory_used@@Base+0x1a094>
  42355c:	add	x5, x5, #0x820
  423560:	lsr	x2, x3, x1
  423564:	and	x2, x2, #0xf
  423568:	ldrb	w2, [x5, x2]
  42356c:	strb	w2, [x0], #1
  423570:	sub	w1, w1, #0x4
  423574:	cmn	w1, #0x4
  423578:	b.ne	423560 <ferror@plt+0x20c90>  // b.any
  42357c:	sxtw	x0, w4
  423580:	ret
  423584:	stp	x29, x30, [sp, #-16]!
  423588:	mov	x29, sp
  42358c:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  423590:	add	x2, x2, #0x7f8
  423594:	mov	w1, #0xc89                 	// #3209
  423598:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a094>
  42359c:	add	x0, x0, #0x808
  4235a0:	bl	4062a0 <ferror@plt+0x39d0>
  4235a4:	and	x3, x6, #0x7f
  4235a8:	mov	w4, #0x0                   	// #0
  4235ac:	b	423540 <ferror@plt+0x20c70>
  4235b0:	ldrb	w3, [x1]
  4235b4:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1f094>
  4235b8:	add	x2, x2, #0xa68
  4235bc:	ldrh	w2, [x2, w3, sxtw #1]
  4235c0:	tbz	w2, #9, 423648 <ferror@plt+0x20d78>
  4235c4:	stp	x29, x30, [sp, #-16]!
  4235c8:	mov	x29, sp
  4235cc:	sub	w3, w3, #0x71
  4235d0:	add	x2, x1, #0x1
  4235d4:	ldrb	w4, [x1, #1]
  4235d8:	adrp	x5, 466000 <_obstack_memory_used@@Base+0x1f094>
  4235dc:	add	x5, x5, #0xa68
  4235e0:	ldrh	w5, [x5, w4, sxtw #1]
  4235e4:	mov	w6, #0x204                 	// #516
  4235e8:	tst	w6, w5
  4235ec:	b.eq	423618 <ferror@plt+0x20d48>  // b.none
  4235f0:	mov	w8, #0x43                  	// #67
  4235f4:	adrp	x6, 466000 <_obstack_memory_used@@Base+0x1f094>
  4235f8:	add	x6, x6, #0xa68
  4235fc:	mov	w7, #0x204                 	// #516
  423600:	madd	w3, w3, w8, w4
  423604:	sub	w3, w3, #0x71
  423608:	ldrb	w4, [x2, #1]!
  42360c:	ldrh	w5, [x6, w4, sxtw #1]
  423610:	tst	w7, w5
  423614:	b.ne	423600 <ferror@plt+0x20d30>  // b.any
  423618:	sub	x2, x2, x1
  42361c:	mov	w4, #0x0                   	// #0
  423620:	add	w3, w3, w2
  423624:	ldr	x0, [x0, #1088]
  423628:	bl	42faa8 <ferror@plt+0x2d1d8>
  42362c:	mov	x1, x0
  423630:	mov	w0, #0x0                   	// #0
  423634:	cbz	x1, 423640 <ferror@plt+0x20d70>
  423638:	ldrb	w0, [x1, #18]
  42363c:	ubfx	x0, x0, #1, #1
  423640:	ldp	x29, x30, [sp], #16
  423644:	ret
  423648:	mov	w0, #0x0                   	// #0
  42364c:	ret
  423650:	stp	x29, x30, [sp, #-16]!
  423654:	mov	x29, sp
  423658:	ldrb	w1, [x0, #1154]
  42365c:	cbz	w1, 42368c <ferror@plt+0x20dbc>
  423660:	ldrb	w1, [x0, #1167]
  423664:	cbnz	w1, 42368c <ferror@plt+0x20dbc>
  423668:	ldr	x1, [x0]
  42366c:	cbz	x1, 423678 <ferror@plt+0x20da8>
  423670:	ldrb	w1, [x1, #106]
  423674:	cbnz	w1, 423694 <ferror@plt+0x20dc4>
  423678:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  42367c:	add	x2, x2, #0x838
  423680:	mov	w1, #0x2                   	// #2
  423684:	bl	41c9fc <ferror@plt+0x1a12c>
  423688:	b	423694 <ferror@plt+0x20dc4>
  42368c:	ldrb	w1, [x0, #22]
  423690:	cbz	w1, 42369c <ferror@plt+0x20dcc>
  423694:	ldp	x29, x30, [sp], #16
  423698:	ret
  42369c:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  4236a0:	add	x2, x2, #0x860
  4236a4:	mov	w1, #0x2                   	// #2
  4236a8:	bl	41c9fc <ferror@plt+0x1a12c>
  4236ac:	b	423694 <ferror@plt+0x20dc4>
  4236b0:	stp	x29, x30, [sp, #-48]!
  4236b4:	mov	x29, sp
  4236b8:	str	x19, [sp, #16]
  4236bc:	mov	x8, x0
  4236c0:	ldr	x19, [x0]
  4236c4:	ldr	x3, [x19]
  4236c8:	ldrb	w4, [x3]
  4236cc:	cmp	w4, #0x24
  4236d0:	b.eq	4236f8 <ferror@plt+0x20e28>  // b.none
  4236d4:	ldrb	w0, [x0, #1147]
  4236d8:	cmp	w0, #0x0
  4236dc:	cset	w0, ne  // ne = any
  4236e0:	cmp	w4, #0x5c
  4236e4:	csel	w0, w0, wzr, eq  // eq = none
  4236e8:	cbnz	w0, 423740 <ferror@plt+0x20e70>
  4236ec:	ldr	x19, [sp, #16]
  4236f0:	ldp	x29, x30, [sp], #48
  4236f4:	ret
  4236f8:	ldrb	w1, [x0, #1146]
  4236fc:	mov	w0, #0x0                   	// #0
  423700:	cbz	w1, 4236ec <ferror@plt+0x20e1c>
  423704:	add	x3, x3, #0x1
  423708:	str	x3, [x19]
  42370c:	ldrb	w1, [x8, #1148]
  423710:	mov	w0, #0x1                   	// #1
  423714:	cbz	w1, 4236ec <ferror@plt+0x20e1c>
  423718:	ldrb	w1, [x8, #18]
  42371c:	cbnz	w1, 4236ec <ferror@plt+0x20e1c>
  423720:	strb	wzr, [x8, #1148]
  423724:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x12094>
  423728:	add	x2, x2, #0xfa0
  42372c:	mov	w1, #0x2                   	// #2
  423730:	mov	x0, x8
  423734:	bl	41c9fc <ferror@plt+0x1a12c>
  423738:	mov	w0, #0x1                   	// #1
  42373c:	b	4236ec <ferror@plt+0x20e1c>
  423740:	ldrb	w4, [x3, #1]
  423744:	and	w4, w4, #0xffffffdf
  423748:	and	w4, w4, #0xff
  42374c:	mov	w0, #0x0                   	// #0
  423750:	cmp	w4, #0x55
  423754:	b.ne	4236ec <ferror@plt+0x20e1c>  // b.any
  423758:	add	x3, x3, #0x2
  42375c:	str	x3, [x19]
  423760:	cmp	w1, #0x0
  423764:	cset	w3, eq  // eq = none
  423768:	mov	x7, #0x0                   	// #0
  42376c:	mov	x6, #0x0                   	// #0
  423770:	add	x5, sp, #0x2c
  423774:	mov	x4, x2
  423778:	add	w3, w3, #0x1
  42377c:	ldr	x2, [x19, #32]
  423780:	mov	x1, x19
  423784:	mov	x0, x8
  423788:	bl	415fdc <ferror@plt+0x1370c>
  42378c:	ands	w0, w0, #0xff
  423790:	b.ne	4236ec <ferror@plt+0x20e1c>  // b.any
  423794:	ldr	x1, [x19]
  423798:	sub	x1, x1, #0x2
  42379c:	str	x1, [x19]
  4237a0:	b	4236ec <ferror@plt+0x20e1c>
  4237a4:	stp	x29, x30, [sp, #-64]!
  4237a8:	mov	x29, sp
  4237ac:	stp	x19, x20, [sp, #16]
  4237b0:	stp	x21, x22, [sp, #32]
  4237b4:	stp	x23, x24, [sp, #48]
  4237b8:	mov	x19, x0
  4237bc:	mov	x23, x1
  4237c0:	mov	x20, x3
  4237c4:	mov	x24, x4
  4237c8:	ldr	x0, [x0]
  4237cc:	ldr	x21, [x0]
  4237d0:	tst	w2, #0xff
  4237d4:	b.ne	423850 <ferror@plt+0x20f80>  // b.any
  4237d8:	ldrb	w0, [x1]
  4237dc:	sub	w22, w0, #0x71
  4237e0:	ldrb	w0, [x21]
  4237e4:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1f094>
  4237e8:	add	x1, x1, #0xa68
  4237ec:	ldrh	w1, [x1, w0, sxtw #1]
  4237f0:	mov	w2, #0x204                 	// #516
  4237f4:	tst	w2, w1
  4237f8:	b.eq	423824 <ferror@plt+0x20f54>  // b.none
  4237fc:	mov	w4, #0x43                  	// #67
  423800:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1f094>
  423804:	add	x2, x2, #0xa68
  423808:	mov	w3, #0x204                 	// #516
  42380c:	madd	w0, w22, w4, w0
  423810:	sub	w22, w0, #0x71
  423814:	ldrb	w0, [x21, #1]!
  423818:	ldrh	w1, [x2, w0, sxtw #1]
  42381c:	tst	w3, w1
  423820:	b.ne	42380c <ferror@plt+0x20f3c>  // b.any
  423824:	ldurb	w0, [x21, #-1]
  423828:	str	w0, [x20]
  42382c:	strb	wzr, [x20, #4]
  423830:	ldr	x0, [x19]
  423834:	str	x21, [x0]
  423838:	mov	x2, x20
  42383c:	mov	w1, #0x0                   	// #0
  423840:	mov	x0, x19
  423844:	bl	4236b0 <ferror@plt+0x20de0>
  423848:	and	w0, w0, #0xff
  42384c:	cbz	w0, 423860 <ferror@plt+0x20f90>
  423850:	adrp	x21, 466000 <_obstack_memory_used@@Base+0x1f094>
  423854:	add	x21, x21, #0xa68
  423858:	mov	w22, #0x204                 	// #516
  42385c:	b	4238a0 <ferror@plt+0x20fd0>
  423860:	sub	x3, x21, x23
  423864:	mov	w4, #0x1                   	// #1
  423868:	add	w3, w22, w3
  42386c:	sub	w2, w21, w23
  423870:	mov	x1, x23
  423874:	ldr	x0, [x19, #1088]
  423878:	bl	42faa8 <ferror@plt+0x2d1d8>
  42387c:	mov	x20, x0
  423880:	str	x0, [x24]
  423884:	b	423908 <ferror@plt+0x21038>
  423888:	str	w0, [x20]
  42388c:	strb	wzr, [x20, #4]
  423890:	ldr	x1, [x19]
  423894:	ldr	x0, [x1]
  423898:	add	x0, x0, #0x1
  42389c:	str	x0, [x1]
  4238a0:	ldr	x0, [x19]
  4238a4:	ldr	x0, [x0]
  4238a8:	ldrb	w0, [x0]
  4238ac:	ldrh	w1, [x21, w0, sxtw #1]
  4238b0:	tst	w22, w1
  4238b4:	b.ne	423888 <ferror@plt+0x20fb8>  // b.any
  4238b8:	mov	x2, x20
  4238bc:	mov	w1, #0x0                   	// #0
  4238c0:	mov	x0, x19
  4238c4:	bl	4236b0 <ferror@plt+0x20de0>
  4238c8:	and	w0, w0, #0xff
  4238cc:	cbnz	w0, 4238a0 <ferror@plt+0x20fd0>
  4238d0:	ldr	x0, [x19]
  4238d4:	ldr	x2, [x0]
  4238d8:	sub	x2, x2, x23
  4238dc:	mov	x1, x23
  4238e0:	mov	x0, x19
  4238e4:	bl	415b2c <ferror@plt+0x1325c>
  4238e8:	mov	x20, x0
  4238ec:	ldr	x0, [x19]
  4238f0:	ldr	x2, [x0]
  4238f4:	sub	w2, w2, w23
  4238f8:	mov	x1, x23
  4238fc:	mov	x0, x19
  423900:	bl	4232a0 <ferror@plt+0x209d0>
  423904:	str	x0, [x24]
  423908:	ldrh	w0, [x20, #18]
  42390c:	ubfx	x1, x0, #2, #8
  423910:	tbnz	w0, #4, 42392c <ferror@plt+0x2105c>
  423914:	mov	x0, x20
  423918:	ldp	x19, x20, [sp, #16]
  42391c:	ldp	x21, x22, [sp, #32]
  423920:	ldp	x23, x24, [sp, #48]
  423924:	ldp	x29, x30, [sp], #64
  423928:	ret
  42392c:	ldrb	w0, [x19, #18]
  423930:	cbnz	w0, 423914 <ferror@plt+0x21044>
  423934:	tbz	w1, #1, 423940 <ferror@plt+0x21070>
  423938:	ldrb	w0, [x19, #23]
  42393c:	cbz	w0, 42397c <ferror@plt+0x210ac>
  423940:	ldr	x0, [x19, #1272]
  423944:	cmp	x0, x20
  423948:	b.eq	423998 <ferror@plt+0x210c8>  // b.none
  42394c:	ldr	x0, [x19, #1280]
  423950:	cmp	x0, x20
  423954:	b.eq	4239d8 <ferror@plt+0x21108>  // b.none
  423958:	ldrh	w0, [x20, #18]
  42395c:	tbz	w0, #9, 423914 <ferror@plt+0x21044>
  423960:	ldr	x3, [x20]
  423964:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  423968:	add	x2, x2, #0x958
  42396c:	mov	w1, #0xf                   	// #15
  423970:	mov	x0, x19
  423974:	bl	41ca74 <ferror@plt+0x1a1a4>
  423978:	b	423914 <ferror@plt+0x21044>
  42397c:	ldr	x3, [x20]
  423980:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  423984:	add	x2, x2, #0x8a8
  423988:	mov	w1, #0x3                   	// #3
  42398c:	mov	x0, x19
  423990:	bl	41c9fc <ferror@plt+0x1a12c>
  423994:	b	423940 <ferror@plt+0x21070>
  423998:	ldrb	w0, [x19, #22]
  42399c:	cbnz	w0, 42394c <ferror@plt+0x2107c>
  4239a0:	ldrb	w0, [x19, #1120]
  4239a4:	cbz	w0, 4239c0 <ferror@plt+0x210f0>
  4239a8:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  4239ac:	add	x2, x2, #0x8c8
  4239b0:	mov	w1, #0x2                   	// #2
  4239b4:	mov	x0, x19
  4239b8:	bl	41c9fc <ferror@plt+0x1a12c>
  4239bc:	b	42394c <ferror@plt+0x2107c>
  4239c0:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  4239c4:	add	x2, x2, #0x910
  4239c8:	mov	w1, #0x2                   	// #2
  4239cc:	mov	x0, x19
  4239d0:	bl	41c9fc <ferror@plt+0x1a12c>
  4239d4:	b	42394c <ferror@plt+0x2107c>
  4239d8:	mov	x0, x19
  4239dc:	bl	423650 <ferror@plt+0x20d80>
  4239e0:	b	423958 <ferror@plt+0x21088>
  4239e4:	ldrb	w2, [x0, #4]
  4239e8:	cmp	w2, #0x35
  4239ec:	b.ne	423a14 <ferror@plt+0x21144>  // b.any
  4239f0:	stp	x29, x30, [sp, #-16]!
  4239f4:	mov	x29, sp
  4239f8:	ldr	x0, [x0, #8]
  4239fc:	ldr	x0, [x0]
  423a00:	bl	402620 <strcmp@plt>
  423a04:	cmp	w0, #0x0
  423a08:	cset	w0, eq  // eq = none
  423a0c:	ldp	x29, x30, [sp], #16
  423a10:	ret
  423a14:	mov	w0, #0x0                   	// #0
  423a18:	ret
  423a1c:	ret
  423a20:	stp	x29, x30, [sp, #-96]!
  423a24:	mov	x29, sp
  423a28:	stp	x19, x20, [sp, #16]
  423a2c:	stp	x21, x22, [sp, #32]
  423a30:	stp	x23, x24, [sp, #48]
  423a34:	mov	x23, x0
  423a38:	ldr	x20, [x0]
  423a3c:	str	wzr, [x20, #60]
  423a40:	str	wzr, [x20, #56]
  423a44:	ldr	x19, [x20, #16]
  423a48:	str	x19, [x20, #8]
  423a4c:	str	x19, [x20]
  423a50:	strb	wzr, [x20, #104]
  423a54:	ldrb	w0, [x20, #105]
  423a58:	tbnz	w0, #1, 423e28 <ferror@plt+0x21558>
  423a5c:	mov	x24, #0x0                   	// #0
  423a60:	mov	x22, #0x1000                	// #4096
  423a64:	adrp	x21, 488000 <_obstack_memory_used@@Base+0x41094>
  423a68:	add	x21, x21, #0x7a8
  423a6c:	mov	x3, x19
  423a70:	and	x1, x19, #0xfffffffffffffff0
  423a74:	and	x0, x19, #0xfff
  423a78:	sub	x0, x22, x0
  423a7c:	cmp	x0, #0xf
  423a80:	b.ls	423b98 <ferror@plt+0x212c8>  // b.plast
  423a84:	ldr	q1, [x19]
  423a88:	movi	v0.16b, #0xa
  423a8c:	cmeq	v0.16b, v1.16b, v0.16b
  423a90:	movi	v2.16b, #0xd
  423a94:	cmeq	v2.16b, v1.16b, v2.16b
  423a98:	orr	v0.16b, v0.16b, v2.16b
  423a9c:	movi	v2.16b, #0x5c
  423aa0:	cmeq	v2.16b, v1.16b, v2.16b
  423aa4:	orr	v0.16b, v0.16b, v2.16b
  423aa8:	movi	v2.16b, #0x3f
  423aac:	cmeq	v1.16b, v1.16b, v2.16b
  423ab0:	orr	v0.16b, v0.16b, v1.16b
  423ab4:	addp	d1, v0.2d
  423ab8:	fmov	x0, d1
  423abc:	cbnz	x0, 423afc <ferror@plt+0x2122c>
  423ac0:	movi	v6.16b, #0xa
  423ac4:	movi	v5.16b, #0xd
  423ac8:	movi	v4.16b, #0x5c
  423acc:	movi	v3.16b, #0x3f
  423ad0:	ldr	q1, [x1, #16]!
  423ad4:	cmeq	v0.16b, v1.16b, v6.16b
  423ad8:	cmeq	v2.16b, v1.16b, v5.16b
  423adc:	orr	v0.16b, v0.16b, v2.16b
  423ae0:	cmeq	v2.16b, v1.16b, v4.16b
  423ae4:	orr	v0.16b, v0.16b, v2.16b
  423ae8:	cmeq	v1.16b, v1.16b, v3.16b
  423aec:	orr	v0.16b, v0.16b, v1.16b
  423af0:	addp	d1, v0.2d
  423af4:	fmov	x2, d1
  423af8:	cbz	x2, 423ad0 <ferror@plt+0x21200>
  423afc:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b094>
  423b00:	ldr	q1, [x0, #2112]
  423b04:	and	v0.16b, v0.16b, v1.16b
  423b08:	uaddlp	v0.8h, v0.16b
  423b0c:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b094>
  423b10:	ldr	q1, [x0, #2128]
  423b14:	ushl	v0.8h, v0.8h, v1.8h
  423b18:	addv	h0, v0.8h
  423b1c:	umov	w2, v0.h[0]
  423b20:	cmp	x1, x3
  423b24:	csel	x19, x19, x1, cc  // cc = lo, ul, last
  423b28:	rbit	w2, w2
  423b2c:	clz	w2, w2
  423b30:	add	x19, x19, w2, sxtw
  423b34:	ldrb	w0, [x19]
  423b38:	cmp	w0, #0x5c
  423b3c:	b.eq	423c10 <ferror@plt+0x21340>  // b.none
  423b40:	cmp	w0, #0x3f
  423b44:	b.eq	423c1c <ferror@plt+0x2134c>  // b.none
  423b48:	ldr	x1, [x20, #32]
  423b4c:	cmp	x1, x19
  423b50:	b.eq	423e70 <ferror@plt+0x215a0>  // b.none
  423b54:	mov	x22, x19
  423b58:	cmp	w0, #0xd
  423b5c:	b.eq	423c78 <ferror@plt+0x213a8>  // b.none
  423b60:	cbnz	x24, 423c94 <ferror@plt+0x213c4>
  423b64:	mov	x1, x19
  423b68:	mov	w0, #0xa                   	// #10
  423b6c:	strb	w0, [x1], #1
  423b70:	mov	w2, #0xa                   	// #10
  423b74:	mov	x0, x20
  423b78:	bl	42344c <ferror@plt+0x20b7c>
  423b7c:	add	x22, x22, #0x1
  423b80:	str	x22, [x20, #16]
  423b84:	ldp	x19, x20, [sp, #16]
  423b88:	ldp	x21, x22, [sp, #32]
  423b8c:	ldp	x23, x24, [sp, #48]
  423b90:	ldp	x29, x30, [sp], #96
  423b94:	ret
  423b98:	ldr	q1, [x1]
  423b9c:	movi	v0.16b, #0xa
  423ba0:	cmeq	v0.16b, v1.16b, v0.16b
  423ba4:	movi	v2.16b, #0xd
  423ba8:	cmeq	v2.16b, v1.16b, v2.16b
  423bac:	orr	v0.16b, v0.16b, v2.16b
  423bb0:	movi	v2.16b, #0x5c
  423bb4:	cmeq	v2.16b, v1.16b, v2.16b
  423bb8:	orr	v0.16b, v0.16b, v2.16b
  423bbc:	movi	v2.16b, #0x3f
  423bc0:	cmeq	v1.16b, v1.16b, v2.16b
  423bc4:	orr	v0.16b, v0.16b, v1.16b
  423bc8:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b094>
  423bcc:	ldr	q1, [x0, #2112]
  423bd0:	and	v0.16b, v0.16b, v1.16b
  423bd4:	uaddlp	v0.8h, v0.16b
  423bd8:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b094>
  423bdc:	ldr	q1, [x0, #2128]
  423be0:	ushl	v0.8h, v0.8h, v1.8h
  423be4:	addv	h0, v0.8h
  423be8:	and	w0, w19, #0xf
  423bec:	mov	w2, #0xffffffff            	// #-1
  423bf0:	lsl	w2, w2, w0
  423bf4:	umov	w0, v0.h[0]
  423bf8:	ands	w0, w2, w0
  423bfc:	b.eq	423ac0 <ferror@plt+0x211f0>  // b.none
  423c00:	rbit	w0, w0
  423c04:	clz	w0, w0
  423c08:	add	x19, x1, w0, sxtw
  423c0c:	b	423b34 <ferror@plt+0x21264>
  423c10:	mov	x24, x19
  423c14:	add	x19, x19, #0x1
  423c18:	b	423a6c <ferror@plt+0x2119c>
  423c1c:	ldrb	w0, [x19, #1]
  423c20:	cmp	w0, #0x3f
  423c24:	b.eq	423c30 <ferror@plt+0x21360>  // b.none
  423c28:	add	x19, x19, #0x1
  423c2c:	b	423a6c <ferror@plt+0x2119c>
  423c30:	ldrb	w2, [x19, #2]
  423c34:	ldrb	w0, [x21, w2, sxtw]
  423c38:	cbz	w0, 423c28 <ferror@plt+0x21358>
  423c3c:	mov	x1, x19
  423c40:	mov	x0, x20
  423c44:	bl	42344c <ferror@plt+0x20b7c>
  423c48:	ldrb	w0, [x23, #1125]
  423c4c:	cbz	w0, 423c28 <ferror@plt+0x21358>
  423c50:	stp	x25, x26, [sp, #64]
  423c54:	str	x27, [sp, #80]
  423c58:	ldrb	w1, [x19, #2]
  423c5c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  423c60:	add	x0, x0, #0x7a8
  423c64:	ldrb	w0, [x0, x1]
  423c68:	mov	x27, x19
  423c6c:	strb	w0, [x27], #2
  423c70:	mov	x21, x19
  423c74:	b	423d04 <ferror@plt+0x21434>
  423c78:	ldrb	w0, [x19, #1]
  423c7c:	cmp	w0, #0xa
  423c80:	b.ne	423b60 <ferror@plt+0x21290>  // b.any
  423c84:	add	x22, x19, #0x1
  423c88:	cmp	x1, x22
  423c8c:	b.ne	423b60 <ferror@plt+0x21290>  // b.any
  423c90:	b	423b64 <ferror@plt+0x21294>
  423c94:	ldurb	w1, [x19, #-1]
  423c98:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1f094>
  423c9c:	add	x0, x0, #0xa68
  423ca0:	ldrh	w0, [x0, x1, lsl #1]
  423ca4:	tbz	w0, #11, 423ebc <ferror@plt+0x215ec>
  423ca8:	mov	x21, x19
  423cac:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1f094>
  423cb0:	add	x2, x2, #0xa68
  423cb4:	mov	x1, x21
  423cb8:	sub	x21, x21, #0x1
  423cbc:	ldurb	w0, [x21, #-1]
  423cc0:	ldrh	w0, [x2, x0, lsl #1]
  423cc4:	tbnz	w0, #11, 423cb4 <ferror@plt+0x213e4>
  423cc8:	sub	x1, x1, #0x2
  423ccc:	cmp	x24, x1
  423cd0:	b.ne	423b64 <ferror@plt+0x21294>  // b.any
  423cd4:	stp	x25, x26, [sp, #64]
  423cd8:	str	x27, [sp, #80]
  423cdc:	cmp	x21, x19
  423ce0:	mov	w2, #0x20                  	// #32
  423ce4:	mov	w0, #0x5c                  	// #92
  423ce8:	csel	w2, w2, w0, ne  // ne = any
  423cec:	mov	x1, x24
  423cf0:	mov	x0, x20
  423cf4:	bl	42344c <ferror@plt+0x20b7c>
  423cf8:	sub	x21, x21, #0x2
  423cfc:	str	x24, [x20, #16]
  423d00:	mov	x27, x22
  423d04:	adrp	x26, 488000 <_obstack_memory_used@@Base+0x41094>
  423d08:	add	x26, x26, #0x7a8
  423d0c:	adrp	x24, 466000 <_obstack_memory_used@@Base+0x1f094>
  423d10:	add	x24, x24, #0xa68
  423d14:	mov	w25, #0x20                  	// #32
  423d18:	b	423d7c <ferror@plt+0x214ac>
  423d1c:	ldr	x0, [x20, #32]
  423d20:	cmp	x0, x22
  423d24:	b.eq	423e80 <ferror@plt+0x215b0>  // b.none
  423d28:	ldrb	w0, [x27, #2]
  423d2c:	cmp	w0, #0xa
  423d30:	b.ne	423dac <ferror@plt+0x214dc>  // b.any
  423d34:	add	x22, x27, #0x2
  423d38:	b	423da0 <ferror@plt+0x214d0>
  423d3c:	cmp	x1, x21
  423d40:	b.eq	423ea4 <ferror@plt+0x215d4>  // b.none
  423d44:	ldurb	w0, [x21, #-1]
  423d48:	cmp	w0, #0x5c
  423d4c:	b.ne	423eb0 <ferror@plt+0x215e0>  // b.any
  423d50:	sub	x27, x21, #0x1
  423d54:	cmp	x19, x21
  423d58:	mov	w2, #0x5c                  	// #92
  423d5c:	csel	w2, w25, w2, ne  // ne = any
  423d60:	mov	x1, x27
  423d64:	mov	x0, x20
  423d68:	bl	42344c <ferror@plt+0x20b7c>
  423d6c:	sub	x19, x21, #0x2
  423d70:	str	x27, [x20, #16]
  423d74:	mov	x21, x19
  423d78:	mov	x27, x22
  423d7c:	add	x22, x27, #0x1
  423d80:	ldrb	w0, [x27, #1]
  423d84:	add	x19, x21, #0x1
  423d88:	strb	w0, [x21, #1]
  423d8c:	cmp	w0, #0xa
  423d90:	ccmp	w0, #0xd, #0x4, ne  // ne = any
  423d94:	b.ne	423de0 <ferror@plt+0x21510>  // b.any
  423d98:	cmp	w0, #0xd
  423d9c:	b.eq	423d1c <ferror@plt+0x2144c>  // b.none
  423da0:	ldr	x0, [x20, #32]
  423da4:	cmp	x0, x22
  423da8:	b.eq	423e8c <ferror@plt+0x215bc>  // b.none
  423dac:	ldr	x1, [x20, #16]
  423db0:	cmp	x1, x19
  423db4:	b.eq	423e98 <ferror@plt+0x215c8>  // b.none
  423db8:	mov	x21, x19
  423dbc:	ldurb	w0, [x21, #-1]
  423dc0:	ldrh	w0, [x24, x0, lsl #1]
  423dc4:	tbz	w0, #11, 423d3c <ferror@plt+0x2146c>
  423dc8:	sub	x21, x21, #0x1
  423dcc:	cmp	x1, x21
  423dd0:	b.ne	423dbc <ferror@plt+0x214ec>  // b.any
  423dd4:	ldp	x25, x26, [sp, #64]
  423dd8:	ldr	x27, [sp, #80]
  423ddc:	b	423b64 <ferror@plt+0x21294>
  423de0:	cmp	w0, #0x3f
  423de4:	b.ne	423d74 <ferror@plt+0x214a4>  // b.any
  423de8:	ldrb	w0, [x27, #2]
  423dec:	cmp	w0, #0x3f
  423df0:	b.ne	423d74 <ferror@plt+0x214a4>  // b.any
  423df4:	ldrb	w2, [x27, #3]
  423df8:	ldrb	w0, [x26, w2, sxtw]
  423dfc:	cbz	w0, 423d74 <ferror@plt+0x214a4>
  423e00:	mov	x1, x19
  423e04:	mov	x0, x20
  423e08:	bl	42344c <ferror@plt+0x20b7c>
  423e0c:	ldrb	w0, [x23, #1125]
  423e10:	cbz	w0, 423d74 <ferror@plt+0x214a4>
  423e14:	mov	x22, x27
  423e18:	ldrb	w0, [x22, #3]!
  423e1c:	ldrb	w0, [x26, w0, sxtw]
  423e20:	strb	w0, [x21, #1]
  423e24:	b	423d74 <ferror@plt+0x214a4>
  423e28:	ldrb	w0, [x19]
  423e2c:	cmp	w0, #0xa
  423e30:	ccmp	w0, #0xd, #0x4, ne  // ne = any
  423e34:	b.eq	423e48 <ferror@plt+0x21578>  // b.none
  423e38:	ldrb	w0, [x19, #1]!
  423e3c:	cmp	w0, #0xa
  423e40:	ccmp	w0, #0xd, #0x4, ne  // ne = any
  423e44:	b.ne	423e38 <ferror@plt+0x21568>  // b.any
  423e48:	mov	x22, x19
  423e4c:	cmp	w0, #0xd
  423e50:	b.ne	423b64 <ferror@plt+0x21294>  // b.any
  423e54:	ldr	x22, [x20, #32]
  423e58:	cmp	x19, x22
  423e5c:	b.eq	423e78 <ferror@plt+0x215a8>  // b.none
  423e60:	ldrb	w0, [x19, #1]
  423e64:	cmp	w0, #0xa
  423e68:	cinc	x22, x19, eq  // eq = none
  423e6c:	b	423b64 <ferror@plt+0x21294>
  423e70:	mov	x22, x19
  423e74:	b	423b64 <ferror@plt+0x21294>
  423e78:	mov	x19, x22
  423e7c:	b	423b64 <ferror@plt+0x21294>
  423e80:	ldp	x25, x26, [sp, #64]
  423e84:	ldr	x27, [sp, #80]
  423e88:	b	423b64 <ferror@plt+0x21294>
  423e8c:	ldp	x25, x26, [sp, #64]
  423e90:	ldr	x27, [sp, #80]
  423e94:	b	423b64 <ferror@plt+0x21294>
  423e98:	ldp	x25, x26, [sp, #64]
  423e9c:	ldr	x27, [sp, #80]
  423ea0:	b	423b64 <ferror@plt+0x21294>
  423ea4:	ldp	x25, x26, [sp, #64]
  423ea8:	ldr	x27, [sp, #80]
  423eac:	b	423b64 <ferror@plt+0x21294>
  423eb0:	ldp	x25, x26, [sp, #64]
  423eb4:	ldr	x27, [sp, #80]
  423eb8:	b	423b64 <ferror@plt+0x21294>
  423ebc:	sub	x0, x19, #0x1
  423ec0:	cmp	x24, x0
  423ec4:	b.ne	423b64 <ferror@plt+0x21294>  // b.any
  423ec8:	stp	x25, x26, [sp, #64]
  423ecc:	str	x27, [sp, #80]
  423ed0:	mov	x21, x19
  423ed4:	mov	w2, #0x5c                  	// #92
  423ed8:	b	423cec <ferror@plt+0x2141c>
  423edc:	stp	x29, x30, [sp, #-80]!
  423ee0:	mov	x29, sp
  423ee4:	stp	x19, x20, [sp, #16]
  423ee8:	stp	x21, x22, [sp, #32]
  423eec:	stp	x25, x26, [sp, #64]
  423ef0:	mov	x20, x0
  423ef4:	mov	w21, w1
  423ef8:	ldr	x19, [x0]
  423efc:	ldr	w0, [x19, #56]
  423f00:	ubfiz	x1, x0, #4, #32
  423f04:	ldr	x2, [x19, #48]
  423f08:	add	x25, x2, x1
  423f0c:	ldr	x2, [x2, x1]
  423f10:	ldr	x1, [x19]
  423f14:	cmp	x2, x1
  423f18:	b.hi	424124 <ferror@plt+0x21854>  // b.pmore
  423f1c:	stp	x23, x24, [sp, #48]
  423f20:	adrp	x22, 488000 <_obstack_memory_used@@Base+0x41094>
  423f24:	add	x22, x22, #0x7a8
  423f28:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x1a094>
  423f2c:	add	x23, x23, #0xa08
  423f30:	mov	w24, #0x4                   	// #4
  423f34:	b	423ff4 <ferror@plt+0x21724>
  423f38:	ldr	x0, [x20, #40]
  423f3c:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a094>
  423f40:	add	x4, x4, #0x990
  423f44:	mov	w3, w26
  423f48:	ldr	w2, [x0, #60]
  423f4c:	mov	w1, #0x0                   	// #0
  423f50:	mov	x0, x20
  423f54:	bl	41cbe8 <ferror@plt+0x1a318>
  423f58:	b	424030 <ferror@plt+0x21760>
  423f5c:	ldr	x0, [x20, #40]
  423f60:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a094>
  423f64:	add	x4, x4, #0x9c0
  423f68:	mov	w3, w26
  423f6c:	ldr	w2, [x0, #60]
  423f70:	mov	w1, #0x2                   	// #2
  423f74:	mov	x0, x20
  423f78:	bl	41cbe8 <ferror@plt+0x1a318>
  423f7c:	ldr	x0, [x19, #32]
  423f80:	str	x0, [x19, #16]
  423f84:	ldr	x0, [x25]
  423f88:	str	x0, [x19, #8]
  423f8c:	ldr	x0, [x20, #40]
  423f90:	ldr	w2, [x0, #12]
  423f94:	sub	w2, w2, #0x1
  423f98:	sbfiz	x1, x2, #1, #32
  423f9c:	add	x2, x1, w2, sxtw
  423fa0:	lsl	x2, x2, #3
  423fa4:	ldr	x1, [x0]
  423fa8:	add	x4, x1, x2
  423fac:	ldr	w3, [x0, #60]
  423fb0:	ldr	w1, [x1, x2]
  423fb4:	sub	w3, w3, w1
  423fb8:	ldrb	w1, [x4, #6]
  423fbc:	lsr	w3, w3, w1
  423fc0:	ldr	w1, [x4, #16]
  423fc4:	add	w1, w1, #0x1
  423fc8:	mov	w2, #0x0                   	// #0
  423fcc:	add	w1, w3, w1
  423fd0:	bl	4287b4 <ferror@plt+0x25ee4>
  423fd4:	ldr	w0, [x19, #56]
  423fd8:	ubfiz	x1, x0, #4, #32
  423fdc:	ldr	x2, [x19, #48]
  423fe0:	add	x25, x2, x1
  423fe4:	ldr	x2, [x2, x1]
  423fe8:	ldr	x1, [x19]
  423fec:	cmp	x2, x1
  423ff0:	b.hi	424120 <ferror@plt+0x21850>  // b.pmore
  423ff4:	add	w0, w0, #0x1
  423ff8:	str	w0, [x19, #56]
  423ffc:	ldr	x1, [x25]
  424000:	add	x26, x1, #0x1
  424004:	ldr	x0, [x19, #8]
  424008:	sub	x26, x26, x0
  42400c:	ldr	w5, [x25, #8]
  424010:	cmp	w5, #0x20
  424014:	cset	w0, eq  // eq = none
  424018:	cmp	w5, #0x5c
  42401c:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  424020:	b.eq	424044 <ferror@plt+0x21774>  // b.none
  424024:	cmp	w21, #0x0
  424028:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  42402c:	b.ne	423f38 <ferror@plt+0x21668>  // b.any
  424030:	ldr	x1, [x19, #16]
  424034:	ldr	x0, [x19, #32]
  424038:	cmp	x1, x0
  42403c:	b.ls	423f84 <ferror@plt+0x216b4>  // b.plast
  424040:	b	423f5c <ferror@plt+0x2168c>
  424044:	ldrb	w6, [x22, w5, uxtw]
  424048:	cbz	w6, 424104 <ferror@plt+0x21834>
  42404c:	ldrb	w0, [x20, #1136]
  424050:	cbz	w0, 423fd4 <ferror@plt+0x21704>
  424054:	cbnz	w21, 424080 <ferror@plt+0x217b0>
  424058:	ldrb	w0, [x20, #1125]
  42405c:	cbnz	w0, 4240e0 <ferror@plt+0x21810>
  424060:	ldr	x0, [x20, #40]
  424064:	mov	x4, x23
  424068:	mov	w3, w26
  42406c:	ldr	w2, [x0, #60]
  424070:	mov	w1, w24
  424074:	mov	x0, x20
  424078:	bl	41cc60 <ferror@plt+0x1a390>
  42407c:	b	423fd4 <ferror@plt+0x21704>
  424080:	cmp	w5, #0x2f
  424084:	b.ne	423fd4 <ferror@plt+0x21704>  // b.any
  424088:	ldrb	w0, [x20, #1125]
  42408c:	cbnz	w0, 4240d4 <ferror@plt+0x21804>
  424090:	add	x2, x1, #0x3
  424094:	ldrb	w0, [x1, #3]
  424098:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1f094>
  42409c:	add	x1, x1, #0xa68
  4240a0:	ldrh	w1, [x1, w0, sxtw #1]
  4240a4:	tbz	w1, #11, 4240bc <ferror@plt+0x217ec>
  4240a8:	adrp	x3, 466000 <_obstack_memory_used@@Base+0x1f094>
  4240ac:	add	x3, x3, #0xa68
  4240b0:	ldrb	w0, [x2, #1]!
  4240b4:	ldrh	w1, [x3, w0, sxtw #1]
  4240b8:	tbnz	w1, #11, 4240b0 <ferror@plt+0x217e0>
  4240bc:	cmp	w0, #0xa
  4240c0:	b.ne	423fd4 <ferror@plt+0x21704>  // b.any
  4240c4:	ldr	x0, [x25, #16]
  4240c8:	cmp	x0, x2
  4240cc:	b.hi	424060 <ferror@plt+0x21790>  // b.pmore
  4240d0:	b	423fd4 <ferror@plt+0x21704>
  4240d4:	ldr	x0, [x25, #16]
  4240d8:	cmp	x1, x0
  4240dc:	b.ne	423fd4 <ferror@plt+0x21704>  // b.any
  4240e0:	ldr	x0, [x20, #40]
  4240e4:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a094>
  4240e8:	add	x4, x4, #0x9e8
  4240ec:	mov	w3, w26
  4240f0:	ldr	w2, [x0, #60]
  4240f4:	mov	w1, w24
  4240f8:	mov	x0, x20
  4240fc:	bl	41cc60 <ferror@plt+0x1a390>
  424100:	b	423fd4 <ferror@plt+0x21704>
  424104:	cbz	w5, 423fd4 <ferror@plt+0x21704>
  424108:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  42410c:	add	x2, x2, #0xa38
  424110:	mov	w1, #0x48b                 	// #1163
  424114:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a094>
  424118:	add	x0, x0, #0x808
  42411c:	bl	4062a0 <ferror@plt+0x39d0>
  424120:	ldp	x23, x24, [sp, #48]
  424124:	ldp	x19, x20, [sp, #16]
  424128:	ldp	x21, x22, [sp, #32]
  42412c:	ldp	x25, x26, [sp, #64]
  424130:	ldp	x29, x30, [sp], #80
  424134:	ret
  424138:	stp	x29, x30, [sp, #-64]!
  42413c:	mov	x29, sp
  424140:	stp	x19, x20, [sp, #16]
  424144:	stp	x21, x22, [sp, #32]
  424148:	stp	x23, x24, [sp, #48]
  42414c:	mov	x21, x0
  424150:	ldr	x20, [x0]
  424154:	ldr	x1, [x20]
  424158:	ldrb	w0, [x1, #1]
  42415c:	cmp	w0, #0x2f
  424160:	cinc	x1, x1, eq  // eq = none
  424164:	add	x1, x1, #0x1
  424168:	mov	w22, #0x1                   	// #1
  42416c:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x1a094>
  424170:	add	x23, x23, #0xa50
  424174:	mov	w24, #0x2                   	// #2
  424178:	b	4241a0 <ferror@plt+0x218d0>
  42417c:	ldurb	w0, [x1, #-1]
  424180:	cmp	w0, #0x2a
  424184:	b.eq	42426c <ferror@plt+0x2199c>  // b.none
  424188:	ldrb	w0, [x21, #1133]
  42418c:	cbz	w0, 42419c <ferror@plt+0x218cc>
  424190:	ldrb	w0, [x1, #1]
  424194:	cmp	w0, #0x2a
  424198:	b.eq	424238 <ferror@plt+0x21968>  // b.none
  42419c:	mov	x1, x19
  4241a0:	mov	x19, x1
  4241a4:	ldrb	w2, [x19], #1
  4241a8:	cmp	w2, #0x2f
  4241ac:	b.eq	42417c <ferror@plt+0x218ac>  // b.none
  4241b0:	cmp	w2, #0xa
  4241b4:	b.ne	42419c <ferror@plt+0x218cc>  // b.any
  4241b8:	str	x1, [x20]
  4241bc:	mov	w1, w22
  4241c0:	mov	x0, x21
  4241c4:	bl	423edc <ferror@plt+0x2160c>
  4241c8:	ldr	x1, [x20, #16]
  4241cc:	ldr	x0, [x20, #32]
  4241d0:	cmp	x1, x0
  4241d4:	b.cs	424294 <ferror@plt+0x219c4>  // b.hs, b.nlast
  4241d8:	mov	x0, x21
  4241dc:	bl	423a20 <ferror@plt+0x21150>
  4241e0:	ldr	x0, [x21, #40]
  4241e4:	ldr	w1, [x0, #12]
  4241e8:	sub	w1, w1, #0x1
  4241ec:	sbfiz	x2, x1, #1, #32
  4241f0:	add	x1, x2, w1, sxtw
  4241f4:	lsl	x1, x1, #3
  4241f8:	ldr	x5, [x0]
  4241fc:	add	x4, x5, x1
  424200:	ldr	x6, [x20, #16]
  424204:	ldr	x2, [x20, #8]
  424208:	ldr	w3, [x0, #60]
  42420c:	ldr	w1, [x5, x1]
  424210:	sub	w1, w3, w1
  424214:	ldrb	w3, [x4, #6]
  424218:	lsr	w1, w1, w3
  42421c:	ldr	w3, [x4, #16]
  424220:	add	w3, w3, #0x1
  424224:	sub	w2, w6, w2
  424228:	add	w1, w1, w3
  42422c:	bl	4287b4 <ferror@plt+0x25ee4>
  424230:	ldr	x19, [x20]
  424234:	b	42419c <ferror@plt+0x218cc>
  424238:	ldrb	w0, [x1, #2]
  42423c:	cmp	w0, #0x2f
  424240:	b.eq	42419c <ferror@plt+0x218cc>  // b.none
  424244:	str	x19, [x20]
  424248:	ldr	x3, [x20, #8]
  42424c:	ldr	x0, [x21, #40]
  424250:	mov	x4, x23
  424254:	sub	w3, w19, w3
  424258:	ldr	w2, [x0, #60]
  42425c:	mov	w1, w24
  424260:	mov	x0, x21
  424264:	bl	41cc60 <ferror@plt+0x1a390>
  424268:	b	42419c <ferror@plt+0x218cc>
  42426c:	str	x19, [x20]
  424270:	mov	w1, #0x1                   	// #1
  424274:	mov	x0, x21
  424278:	bl	423edc <ferror@plt+0x2160c>
  42427c:	mov	w0, #0x0                   	// #0
  424280:	ldp	x19, x20, [sp, #16]
  424284:	ldp	x21, x22, [sp, #32]
  424288:	ldp	x23, x24, [sp, #48]
  42428c:	ldp	x29, x30, [sp], #64
  424290:	ret
  424294:	mov	w0, #0x1                   	// #1
  424298:	b	424280 <ferror@plt+0x219b0>
  42429c:	stp	x29, x30, [sp, #-32]!
  4242a0:	mov	x29, sp
  4242a4:	stp	x19, x20, [sp, #16]
  4242a8:	mov	x20, x0
  4242ac:	mov	x2, x1
  4242b0:	ldrb	w5, [x2], #1
  4242b4:	sub	w5, w5, #0x71
  4242b8:	ldrb	w3, [x1, #1]
  4242bc:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1f094>
  4242c0:	add	x0, x0, #0xa68
  4242c4:	ldrh	w0, [x0, w3, sxtw #1]
  4242c8:	mov	w4, #0x204                 	// #516
  4242cc:	tst	w4, w0
  4242d0:	b.eq	4242fc <ferror@plt+0x21a2c>  // b.none
  4242d4:	mov	w7, #0x43                  	// #67
  4242d8:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1f094>
  4242dc:	add	x0, x0, #0xa68
  4242e0:	mov	w6, w4
  4242e4:	madd	w5, w5, w7, w3
  4242e8:	sub	w5, w5, #0x71
  4242ec:	ldrb	w3, [x2, #1]!
  4242f0:	ldrh	w4, [x0, w3, sxtw #1]
  4242f4:	tst	w6, w4
  4242f8:	b.ne	4242e4 <ferror@plt+0x21a14>  // b.any
  4242fc:	sub	x3, x2, x1
  424300:	mov	w4, #0x1                   	// #1
  424304:	add	w3, w5, w3
  424308:	sub	w2, w2, w1
  42430c:	ldr	x0, [x20, #1088]
  424310:	bl	42faa8 <ferror@plt+0x2d1d8>
  424314:	mov	x19, x0
  424318:	ldrh	w0, [x0, #18]
  42431c:	ubfx	x1, x0, #2, #8
  424320:	tbnz	w0, #4, 424334 <ferror@plt+0x21a64>
  424324:	mov	x0, x19
  424328:	ldp	x19, x20, [sp, #16]
  42432c:	ldp	x29, x30, [sp], #32
  424330:	ret
  424334:	ldrb	w0, [x20, #18]
  424338:	cbnz	w0, 424324 <ferror@plt+0x21a54>
  42433c:	tbz	w1, #1, 424348 <ferror@plt+0x21a78>
  424340:	ldrb	w0, [x20, #23]
  424344:	cbz	w0, 424384 <ferror@plt+0x21ab4>
  424348:	ldr	x0, [x20, #1272]
  42434c:	cmp	x19, x0
  424350:	b.eq	4243a0 <ferror@plt+0x21ad0>  // b.none
  424354:	ldr	x0, [x20, #1280]
  424358:	cmp	x19, x0
  42435c:	b.eq	4243e0 <ferror@plt+0x21b10>  // b.none
  424360:	ldrh	w0, [x19, #18]
  424364:	tbz	w0, #9, 424324 <ferror@plt+0x21a54>
  424368:	ldr	x3, [x19]
  42436c:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  424370:	add	x2, x2, #0x958
  424374:	mov	w1, #0xf                   	// #15
  424378:	mov	x0, x20
  42437c:	bl	41ca74 <ferror@plt+0x1a1a4>
  424380:	b	424324 <ferror@plt+0x21a54>
  424384:	ldr	x3, [x19]
  424388:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  42438c:	add	x2, x2, #0x8a8
  424390:	mov	w1, #0x3                   	// #3
  424394:	mov	x0, x20
  424398:	bl	41c9fc <ferror@plt+0x1a12c>
  42439c:	b	424348 <ferror@plt+0x21a78>
  4243a0:	ldrb	w0, [x20, #22]
  4243a4:	cbnz	w0, 424354 <ferror@plt+0x21a84>
  4243a8:	ldrb	w0, [x20, #1120]
  4243ac:	cbz	w0, 4243c8 <ferror@plt+0x21af8>
  4243b0:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  4243b4:	add	x2, x2, #0x8c8
  4243b8:	mov	w1, #0x2                   	// #2
  4243bc:	mov	x0, x20
  4243c0:	bl	41c9fc <ferror@plt+0x1a12c>
  4243c4:	b	424354 <ferror@plt+0x21a84>
  4243c8:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  4243cc:	add	x2, x2, #0x910
  4243d0:	mov	w1, #0x2                   	// #2
  4243d4:	mov	x0, x20
  4243d8:	bl	41c9fc <ferror@plt+0x1a12c>
  4243dc:	b	424354 <ferror@plt+0x21a84>
  4243e0:	mov	x0, x20
  4243e4:	bl	423650 <ferror@plt+0x20d80>
  4243e8:	b	424360 <ferror@plt+0x21a90>
  4243ec:	add	x0, x0, #0x568
  4243f0:	ret
  4243f4:	stp	x29, x30, [sp, #-32]!
  4243f8:	mov	x29, sp
  4243fc:	stp	x19, x20, [sp, #16]
  424400:	mov	x20, x0
  424404:	ubfiz	x19, x1, #1, #32
  424408:	add	x1, x19, w1, uxtw
  42440c:	lsl	x19, x1, #3
  424410:	mov	x0, x19
  424414:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  424418:	str	x0, [x20, #16]
  42441c:	add	x19, x0, x19
  424420:	str	x19, [x20, #24]
  424424:	str	xzr, [x20]
  424428:	ldp	x19, x20, [sp, #16]
  42442c:	ldp	x29, x30, [sp], #32
  424430:	ret
  424434:	stp	x29, x30, [sp, #-32]!
  424438:	mov	x29, sp
  42443c:	str	x19, [sp, #16]
  424440:	mov	x19, x0
  424444:	ldr	x0, [x0]
  424448:	cbz	x0, 42445c <ferror@plt+0x21b8c>
  42444c:	ldr	x0, [x19]
  424450:	ldr	x19, [sp, #16]
  424454:	ldp	x29, x30, [sp], #32
  424458:	ret
  42445c:	mov	x0, #0x20                  	// #32
  424460:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  424464:	str	x0, [x19]
  424468:	str	x19, [x0, #8]
  42446c:	mov	w1, #0xfa                  	// #250
  424470:	bl	4243f4 <ferror@plt+0x21b24>
  424474:	b	42444c <ferror@plt+0x21b7c>
  424478:	ldr	w1, [x0, #48]
  42447c:	cmp	w1, #0x1
  424480:	b.eq	4244a0 <ferror@plt+0x21bd0>  // b.none
  424484:	tst	w1, #0xfffffffd
  424488:	b.ne	4244c0 <ferror@plt+0x21bf0>  // b.any
  42448c:	ldr	x1, [x0, #24]
  424490:	ldr	x0, [x0, #16]
  424494:	sub	x0, x1, x0
  424498:	ubfx	x0, x0, #3, #32
  42449c:	ret
  4244a0:	ldr	x1, [x0, #24]
  4244a4:	ldr	x0, [x0, #16]
  4244a8:	sub	x0, x1, x0
  4244ac:	asr	x0, x0, #3
  4244b0:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4244b4:	movk	x1, #0xaaab
  4244b8:	mul	w0, w0, w1
  4244bc:	ret
  4244c0:	stp	x29, x30, [sp, #-16]!
  4244c4:	mov	x29, sp
  4244c8:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  4244cc:	add	x2, x2, #0xa68
  4244d0:	mov	w1, #0x99f                 	// #2463
  4244d4:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a094>
  4244d8:	add	x0, x0, #0x808
  4244dc:	bl	4062a0 <ferror@plt+0x39d0>
  4244e0:	stp	x29, x30, [sp, #-64]!
  4244e4:	mov	x29, sp
  4244e8:	stp	x19, x20, [sp, #16]
  4244ec:	stp	x21, x22, [sp, #32]
  4244f0:	stp	x23, x24, [sp, #48]
  4244f4:	mov	x19, x0
  4244f8:	ldr	x0, [x0, #488]
  4244fc:	ldr	x22, [x19, #448]
  424500:	ldr	x20, [x0, #24]
  424504:	sub	x20, x20, x22
  424508:	ldr	w23, [x19, #496]
  42450c:	cbz	x23, 424530 <ferror@plt+0x21c60>
  424510:	asr	x21, x20, #3
  424514:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  424518:	movk	x1, #0xaaab
  42451c:	mul	x21, x21, x1
  424520:	cmp	x21, x23
  424524:	b.le	424570 <ferror@plt+0x21ca0>
  424528:	cmp	x20, #0x18
  42452c:	b.gt	4245bc <ferror@plt+0x21cec>
  424530:	cbnz	x20, 424548 <ferror@plt+0x21c78>
  424534:	ldr	x0, [x19, #488]
  424538:	ldr	x2, [x19, #448]
  42453c:	ldr	x1, [x0, #24]
  424540:	cmp	x2, x1
  424544:	b.eq	4245e0 <ferror@plt+0x21d10>  // b.none
  424548:	ldr	x0, [x19, #448]
  42454c:	add	x1, x0, #0x18
  424550:	str	x1, [x19, #448]
  424554:	ldur	w1, [x22, #-24]
  424558:	str	w1, [x0]
  42455c:	ldp	x19, x20, [sp, #16]
  424560:	ldp	x21, x22, [sp, #32]
  424564:	ldp	x23, x24, [sp, #48]
  424568:	ldp	x29, x30, [sp], #64
  42456c:	ret
  424570:	bl	424434 <ferror@plt+0x21b64>
  424574:	mov	x24, x0
  424578:	cmp	x21, x23
  42457c:	b.lt	4245a0 <ferror@plt+0x21cd0>  // b.tstop
  424580:	ldr	x0, [x19, #488]
  424584:	ldr	x1, [x0, #24]
  424588:	ldr	x0, [x24, #16]
  42458c:	ldp	x2, x3, [x1, #-24]
  424590:	stp	x2, x3, [x0]
  424594:	ldur	x1, [x1, #-8]
  424598:	str	x1, [x0, #16]
  42459c:	b	424528 <ferror@plt+0x21c58>
  4245a0:	ldr	x1, [x0, #16]
  4245a4:	sub	x2, x23, x21
  4245a8:	add	x2, x2, x2, lsl #1
  4245ac:	lsl	x2, x2, #3
  4245b0:	add	x0, x1, #0x18
  4245b4:	bl	402270 <memmove@plt>
  4245b8:	b	424580 <ferror@plt+0x21cb0>
  4245bc:	ldr	x1, [x19, #448]
  4245c0:	sub	x2, x21, #0x1
  4245c4:	cmp	x2, x23
  4245c8:	csel	x2, x2, x23, le
  4245cc:	add	x2, x2, x2, lsl #1
  4245d0:	lsl	x2, x2, #3
  4245d4:	add	x0, x1, #0x18
  4245d8:	bl	402270 <memmove@plt>
  4245dc:	b	424548 <ferror@plt+0x21c78>
  4245e0:	bl	424434 <ferror@plt+0x21b64>
  4245e4:	str	x0, [x19, #488]
  4245e8:	ldr	x0, [x0, #16]
  4245ec:	str	x0, [x19, #448]
  4245f0:	b	424548 <ferror@plt+0x21c78>
  4245f4:	stp	x29, x30, [sp, #-32]!
  4245f8:	mov	x29, sp
  4245fc:	stp	x19, x20, [sp, #16]
  424600:	mov	x20, x0
  424604:	ldrb	w0, [x0, #16]
  424608:	mov	w19, #0x0                   	// #0
  42460c:	cbz	w0, 42464c <ferror@plt+0x21d7c>
  424610:	mov	w0, w19
  424614:	ldp	x19, x20, [sp, #16]
  424618:	ldp	x29, x30, [sp], #32
  42461c:	ret
  424620:	mov	x0, x20
  424624:	bl	423a20 <ferror@plt+0x21150>
  424628:	b	424610 <ferror@plt+0x21d40>
  42462c:	ldrb	w19, [x1, #105]
  424630:	ubfx	x19, x19, #2, #1
  424634:	mov	x0, x20
  424638:	bl	41bcec <ferror@plt+0x1941c>
  42463c:	ldr	x0, [x20]
  424640:	cmp	x0, #0x0
  424644:	csinc	w19, w19, wzr, ne  // ne = any
  424648:	cbnz	w19, 424690 <ferror@plt+0x21dc0>
  42464c:	ldr	x1, [x20]
  424650:	ldrb	w19, [x1, #104]
  424654:	cbz	w19, 424698 <ferror@plt+0x21dc8>
  424658:	ldr	x2, [x1, #16]
  42465c:	ldr	x0, [x1, #32]
  424660:	cmp	x2, x0
  424664:	b.cc	424620 <ferror@plt+0x21d50>  // b.lo, b.ul, b.last
  424668:	ldrb	w3, [x20, #25]
  42466c:	cbnz	w3, 4246a0 <ferror@plt+0x21dd0>
  424670:	ldr	x3, [x1, #24]
  424674:	cmp	x3, x0
  424678:	ccmp	x2, x0, #0x0, ne  // ne = any
  42467c:	b.ls	42462c <ferror@plt+0x21d5c>  // b.plast
  424680:	ldrb	w2, [x1, #105]
  424684:	tbnz	w2, #1, 42462c <ferror@plt+0x21d5c>
  424688:	str	x0, [x1, #16]
  42468c:	b	42462c <ferror@plt+0x21d5c>
  424690:	mov	w19, #0x0                   	// #0
  424694:	b	424610 <ferror@plt+0x21d40>
  424698:	mov	w19, #0x1                   	// #1
  42469c:	b	424610 <ferror@plt+0x21d40>
  4246a0:	mov	w19, #0x0                   	// #0
  4246a4:	b	424610 <ferror@plt+0x21d40>
  4246a8:	mov	x1, x0
  4246ac:	ldrb	w0, [x0, #4]
  4246b0:	lsl	x0, x0, #4
  4246b4:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b094>
  4246b8:	add	x2, x2, #0x2d0
  4246bc:	ldr	w2, [x2, x0]
  4246c0:	cmp	w2, #0x1
  4246c4:	b.eq	4246dc <ferror@plt+0x21e0c>  // b.none
  4246c8:	mov	w0, #0x6                   	// #6
  4246cc:	cmp	w2, #0x2
  4246d0:	b.ne	4246d8 <ferror@plt+0x21e08>  // b.any
  4246d4:	ldr	w0, [x1, #8]
  4246d8:	ret
  4246dc:	ldr	x0, [x1, #8]
  4246e0:	ldr	w0, [x0, #8]
  4246e4:	add	w0, w0, w0, lsl #2
  4246e8:	lsl	w0, w0, #1
  4246ec:	b	4246d8 <ferror@plt+0x21e08>
  4246f0:	stp	x29, x30, [sp, #-48]!
  4246f4:	mov	x29, sp
  4246f8:	stp	x19, x20, [sp, #16]
  4246fc:	stp	x21, x22, [sp, #32]
  424700:	mov	x20, x0
  424704:	ldr	x21, [x1]
  424708:	ldr	w0, [x1, #8]
  42470c:	cbz	w0, 424760 <ferror@plt+0x21e90>
  424710:	mov	x22, x1
  424714:	mov	x19, #0x0                   	// #0
  424718:	b	424740 <ferror@plt+0x21e70>
  42471c:	mov	x0, x20
  424720:	bl	4234d8 <ferror@plt+0x20c08>
  424724:	sub	x19, x19, #0x1
  424728:	add	x19, x0, x19
  42472c:	add	x20, x20, #0xa
  424730:	add	x19, x19, #0x1
  424734:	ldr	w0, [x22, #8]
  424738:	cmp	x0, x19
  42473c:	b.ls	424760 <ferror@plt+0x21e90>  // b.plast
  424740:	add	x1, x21, x19
  424744:	ldrb	w2, [x21, x19]
  424748:	tst	w2, #0xffffff80
  42474c:	b.ne	42471c <ferror@plt+0x21e4c>  // b.any
  424750:	mov	x0, x20
  424754:	strb	w2, [x0], #1
  424758:	mov	x20, x0
  42475c:	b	424730 <ferror@plt+0x21e60>
  424760:	mov	x0, x20
  424764:	ldp	x19, x20, [sp, #16]
  424768:	ldp	x21, x22, [sp, #32]
  42476c:	ldp	x29, x30, [sp], #48
  424770:	ret
  424774:	stp	x29, x30, [sp, #-32]!
  424778:	mov	x29, sp
  42477c:	stp	x19, x20, [sp, #16]
  424780:	mov	x20, x1
  424784:	mov	x19, x2
  424788:	ldrb	w2, [x1, #4]
  42478c:	sbfiz	x4, x2, #4, #32
  424790:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b094>
  424794:	add	x1, x1, #0x2d0
  424798:	ldr	w1, [x1, x4]
  42479c:	cmp	w1, #0x2
  4247a0:	b.eq	424880 <ferror@plt+0x21fb0>  // b.none
  4247a4:	and	w3, w3, #0xff
  4247a8:	b.hi	4247d8 <ferror@plt+0x21f08>  // b.pmore
  4247ac:	cbz	w1, 424818 <ferror@plt+0x21f48>
  4247b0:	cbz	w3, 424870 <ferror@plt+0x21fa0>
  4247b4:	ldr	x0, [x20, #16]
  4247b8:	ldr	w2, [x0, #8]
  4247bc:	ldr	x1, [x0]
  4247c0:	mov	x0, x19
  4247c4:	bl	402260 <memcpy@plt>
  4247c8:	ldr	x0, [x20, #16]
  4247cc:	ldr	w0, [x0, #8]
  4247d0:	add	x0, x19, x0
  4247d4:	b	42480c <ferror@plt+0x21f3c>
  4247d8:	cmp	w1, #0x3
  4247dc:	b.ne	424808 <ferror@plt+0x21f38>  // b.any
  4247e0:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b094>
  4247e4:	add	x1, x1, #0x2d0
  4247e8:	add	x2, x1, w2, sxtw #4
  4247ec:	ldr	x3, [x2, #8]
  4247f0:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  4247f4:	add	x2, x2, #0xa90
  4247f8:	mov	w1, #0x4                   	// #4
  4247fc:	bl	41c9fc <ferror@plt+0x1a12c>
  424800:	mov	x0, x19
  424804:	b	42480c <ferror@plt+0x21f3c>
  424808:	mov	x0, x19
  42480c:	ldp	x19, x20, [sp, #16]
  424810:	ldp	x29, x30, [sp], #32
  424814:	ret
  424818:	ldrh	w0, [x20, #6]
  42481c:	tbz	w0, #1, 424858 <ferror@plt+0x21f88>
  424820:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b094>
  424824:	add	x0, x0, #0x2d0
  424828:	add	x0, x0, #0x540
  42482c:	sub	w2, w2, #0x25
  424830:	ldr	x1, [x0, w2, sxtw #3]
  424834:	ldrb	w0, [x1], #1
  424838:	cbz	w0, 424850 <ferror@plt+0x21f80>
  42483c:	strb	w0, [x19], #1
  424840:	ldrb	w0, [x1], #1
  424844:	cbnz	w0, 42483c <ferror@plt+0x21f6c>
  424848:	mov	x0, x19
  42484c:	b	42480c <ferror@plt+0x21f3c>
  424850:	mov	x0, x19
  424854:	b	42480c <ferror@plt+0x21f3c>
  424858:	tbnz	w0, #4, 4247b0 <ferror@plt+0x21ee0>
  42485c:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b094>
  424860:	add	x0, x0, #0x2d0
  424864:	add	x2, x0, w2, sxtw #4
  424868:	ldr	x1, [x2, #8]
  42486c:	b	424834 <ferror@plt+0x21f64>
  424870:	ldr	x1, [x20, #8]
  424874:	mov	x0, x19
  424878:	bl	4246f0 <ferror@plt+0x21e20>
  42487c:	b	42480c <ferror@plt+0x21f3c>
  424880:	ldr	w2, [x20, #8]
  424884:	ldr	x1, [x20, #16]
  424888:	mov	x0, x19
  42488c:	bl	402260 <memcpy@plt>
  424890:	ldr	w0, [x20, #8]
  424894:	add	x0, x19, x0
  424898:	b	42480c <ferror@plt+0x21f3c>
  42489c:	stp	x29, x30, [sp, #-48]!
  4248a0:	mov	x29, sp
  4248a4:	stp	x19, x20, [sp, #16]
  4248a8:	mov	x19, x0
  4248ac:	mov	x20, x2
  4248b0:	ldr	w2, [x0, #1192]
  4248b4:	ldr	w0, [x20, #8]
  4248b8:	cmp	w2, w0
  4248bc:	b.ge	4248d4 <ferror@plt+0x22004>  // b.tcont
  4248c0:	stp	x21, x22, [sp, #32]
  4248c4:	mov	x21, x1
  4248c8:	ldrb	w0, [x19, #18]
  4248cc:	cbz	w0, 4248e0 <ferror@plt+0x22010>
  4248d0:	ldp	x21, x22, [sp, #32]
  4248d4:	ldp	x19, x20, [sp, #16]
  4248d8:	ldp	x29, x30, [sp], #48
  4248dc:	ret
  4248e0:	mov	x0, x1
  4248e4:	bl	4246a8 <ferror@plt+0x21dd8>
  4248e8:	mov	w0, w0
  4248ec:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  4248f0:	mov	x22, x0
  4248f4:	mov	w3, #0x0                   	// #0
  4248f8:	mov	x2, x0
  4248fc:	mov	x1, x21
  424900:	mov	x0, x19
  424904:	bl	424774 <ferror@plt+0x21ea4>
  424908:	sub	x5, x0, x22
  42490c:	ldr	w0, [x20, #8]
  424910:	cmp	w0, #0x1
  424914:	b.eq	424948 <ferror@plt+0x22078>  // b.none
  424918:	mov	x6, x22
  42491c:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a094>
  424920:	add	x4, x4, #0xac0
  424924:	mov	w3, #0x0                   	// #0
  424928:	ldr	w2, [x21]
  42492c:	mov	w1, #0x10                  	// #16
  424930:	mov	x0, x19
  424934:	bl	41cc60 <ferror@plt+0x1a390>
  424938:	mov	x0, x22
  42493c:	bl	402690 <free@plt>
  424940:	ldp	x21, x22, [sp, #32]
  424944:	b	4248d4 <ferror@plt+0x22004>
  424948:	mov	x6, x22
  42494c:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a094>
  424950:	add	x4, x4, #0xaa8
  424954:	mov	w3, #0x0                   	// #0
  424958:	ldr	w2, [x21]
  42495c:	mov	w1, #0x10                  	// #16
  424960:	mov	x0, x19
  424964:	bl	41cc60 <ferror@plt+0x1a390>
  424968:	b	424938 <ferror@plt+0x22068>
  42496c:	tst	w1, #0x2
  424970:	b.eq	42498c <ferror@plt+0x220bc>  // b.none
  424974:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b094>
  424978:	add	x1, x1, #0x2d0
  42497c:	add	x1, x1, #0x540
  424980:	sub	w0, w0, #0x25
  424984:	ldr	x0, [x1, w0, sxtw #3]
  424988:	ret
  42498c:	and	w2, w1, #0xff
  424990:	tbnz	w2, #4, 4249a8 <ferror@plt+0x220d8>
  424994:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b094>
  424998:	add	x1, x1, #0x2d0
  42499c:	add	x0, x1, w0, sxtw #4
  4249a0:	ldr	x0, [x0, #8]
  4249a4:	ret
  4249a8:	stp	x29, x30, [sp, #-16]!
  4249ac:	mov	x29, sp
  4249b0:	bl	4320c4 <ferror@plt+0x2f7f4>
  4249b4:	ldp	x29, x30, [sp], #16
  4249b8:	ret
  4249bc:	stp	x29, x30, [sp, #-80]!
  4249c0:	mov	x29, sp
  4249c4:	stp	x19, x20, [sp, #16]
  4249c8:	stp	x21, x22, [sp, #32]
  4249cc:	mov	x21, x0
  4249d0:	mov	x20, x1
  4249d4:	ldrb	w1, [x0, #4]
  4249d8:	sbfiz	x2, x1, #4, #32
  4249dc:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b094>
  4249e0:	add	x0, x0, #0x2d0
  4249e4:	ldr	w0, [x0, x2]
  4249e8:	cmp	w0, #0x1
  4249ec:	b.eq	424a78 <ferror@plt+0x221a8>  // b.none
  4249f0:	cmp	w0, #0x2
  4249f4:	b.eq	424b20 <ferror@plt+0x22250>  // b.none
  4249f8:	cbz	w0, 424a0c <ferror@plt+0x2213c>
  4249fc:	ldp	x19, x20, [sp, #16]
  424a00:	ldp	x21, x22, [sp, #32]
  424a04:	ldp	x29, x30, [sp], #80
  424a08:	ret
  424a0c:	ldrh	w0, [x21, #6]
  424a10:	tbz	w0, #1, 424a54 <ferror@plt+0x22184>
  424a14:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b094>
  424a18:	add	x0, x0, #0x2d0
  424a1c:	add	x0, x0, #0x540
  424a20:	sub	w1, w1, #0x25
  424a24:	ldr	x19, [x0, w1, sxtw #3]
  424a28:	ldrb	w1, [x19]
  424a2c:	ldr	x0, [x20, #40]
  424a30:	ldr	x2, [x20, #48]
  424a34:	cmp	x0, x2
  424a38:	b.cs	424a6c <ferror@plt+0x2219c>  // b.hs, b.nlast
  424a3c:	add	x2, x0, #0x1
  424a40:	str	x2, [x20, #40]
  424a44:	strb	w1, [x0]
  424a48:	ldrb	w1, [x19, #1]!
  424a4c:	cbnz	w1, 424a2c <ferror@plt+0x2215c>
  424a50:	b	4249fc <ferror@plt+0x2212c>
  424a54:	tbnz	w0, #4, 424a78 <ferror@plt+0x221a8>
  424a58:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b094>
  424a5c:	add	x0, x0, #0x2d0
  424a60:	add	x1, x0, w1, sxtw #4
  424a64:	ldr	x19, [x1, #8]
  424a68:	b	424a28 <ferror@plt+0x22158>
  424a6c:	mov	x0, x20
  424a70:	bl	4025a0 <__overflow@plt>
  424a74:	b	424a48 <ferror@plt+0x22178>
  424a78:	ldr	x0, [x21, #8]
  424a7c:	ldr	x22, [x0]
  424a80:	ldr	w1, [x0, #8]
  424a84:	cbz	w1, 4249fc <ferror@plt+0x2212c>
  424a88:	stp	x23, x24, [sp, #48]
  424a8c:	mov	x19, #0x0                   	// #0
  424a90:	mov	x24, #0xa                   	// #10
  424a94:	mov	x23, #0x1                   	// #1
  424a98:	b	424ae4 <ferror@plt+0x22214>
  424a9c:	add	x0, sp, #0x40
  424aa0:	bl	4234d8 <ferror@plt+0x20c08>
  424aa4:	sub	x19, x19, #0x1
  424aa8:	add	x19, x0, x19
  424aac:	mov	x3, x20
  424ab0:	mov	x2, x24
  424ab4:	mov	x1, x23
  424ab8:	add	x0, sp, #0x40
  424abc:	bl	402290 <fwrite_unlocked@plt>
  424ac0:	b	424ad0 <ferror@plt+0x22200>
  424ac4:	add	x2, x0, #0x1
  424ac8:	str	x2, [x20, #40]
  424acc:	strb	w1, [x0]
  424ad0:	add	x19, x19, #0x1
  424ad4:	ldr	x0, [x21, #8]
  424ad8:	ldr	w1, [x0, #8]
  424adc:	cmp	x1, x19
  424ae0:	b.ls	424b18 <ferror@plt+0x22248>  // b.plast
  424ae4:	add	x1, x22, x19
  424ae8:	ldrb	w2, [x22, x19]
  424aec:	tst	w2, #0xffffff80
  424af0:	b.ne	424a9c <ferror@plt+0x221cc>  // b.any
  424af4:	ldr	x0, [x0]
  424af8:	ldrb	w1, [x0, x19]
  424afc:	ldr	x0, [x20, #40]
  424b00:	ldr	x2, [x20, #48]
  424b04:	cmp	x0, x2
  424b08:	b.cc	424ac4 <ferror@plt+0x221f4>  // b.lo, b.ul, b.last
  424b0c:	mov	x0, x20
  424b10:	bl	4025a0 <__overflow@plt>
  424b14:	b	424ad0 <ferror@plt+0x22200>
  424b18:	ldp	x23, x24, [sp, #48]
  424b1c:	b	4249fc <ferror@plt+0x2212c>
  424b20:	mov	x3, x20
  424b24:	ldr	w2, [x21, #8]
  424b28:	mov	x1, #0x1                   	// #1
  424b2c:	ldr	x0, [x21, #16]
  424b30:	bl	402290 <fwrite_unlocked@plt>
  424b34:	b	4249fc <ferror@plt+0x2212c>
  424b38:	ldr	w3, [x0, #4]
  424b3c:	and	w3, w3, #0xffff00ff
  424b40:	ldr	w2, [x1, #4]
  424b44:	and	w2, w2, #0xffff00ff
  424b48:	cmp	w3, w2
  424b4c:	b.eq	424b58 <ferror@plt+0x22288>  // b.none
  424b50:	mov	w0, #0x0                   	// #0
  424b54:	ret
  424b58:	ldrb	w3, [x0, #4]
  424b5c:	sbfiz	x4, x3, #4, #32
  424b60:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b094>
  424b64:	add	x2, x2, #0x2d0
  424b68:	ldr	w2, [x2, x4]
  424b6c:	cmp	w2, #0x2
  424b70:	b.eq	424c18 <ferror@plt+0x22348>  // b.none
  424b74:	cmp	w2, #0x3
  424b78:	b.eq	424bac <ferror@plt+0x222dc>  // b.none
  424b7c:	cmp	w2, #0x1
  424b80:	b.eq	424be8 <ferror@plt+0x22318>  // b.none
  424b84:	mov	w2, #0x1                   	// #1
  424b88:	cmp	w3, #0x26
  424b8c:	b.eq	424b98 <ferror@plt+0x222c8>  // b.none
  424b90:	mov	w0, w2
  424b94:	ret
  424b98:	ldr	w2, [x0, #8]
  424b9c:	ldr	w0, [x1, #8]
  424ba0:	cmp	w2, w0
  424ba4:	cset	w2, eq  // eq = none
  424ba8:	b	424b90 <ferror@plt+0x222c0>
  424bac:	mov	w2, #0x1                   	// #1
  424bb0:	cmp	w3, #0x50
  424bb4:	b.eq	424bc0 <ferror@plt+0x222f0>  // b.none
  424bb8:	mov	w0, w2
  424bbc:	ret
  424bc0:	ldr	w4, [x0, #8]
  424bc4:	ldr	w3, [x1, #8]
  424bc8:	mov	w2, #0x0                   	// #0
  424bcc:	cmp	w4, w3
  424bd0:	b.ne	424bb8 <ferror@plt+0x222e8>  // b.any
  424bd4:	ldr	x2, [x0, #16]
  424bd8:	ldr	x0, [x1, #16]
  424bdc:	cmp	x2, x0
  424be0:	cset	w2, eq  // eq = none
  424be4:	b	424bb8 <ferror@plt+0x222e8>
  424be8:	ldr	x4, [x0, #8]
  424bec:	ldr	x3, [x1, #8]
  424bf0:	mov	w2, #0x0                   	// #0
  424bf4:	cmp	x4, x3
  424bf8:	b.eq	424c04 <ferror@plt+0x22334>  // b.none
  424bfc:	mov	w0, w2
  424c00:	ret
  424c04:	ldr	x2, [x0, #16]
  424c08:	ldr	x0, [x1, #16]
  424c0c:	cmp	x2, x0
  424c10:	cset	w2, eq  // eq = none
  424c14:	b	424bfc <ferror@plt+0x2232c>
  424c18:	ldr	w2, [x0, #8]
  424c1c:	ldr	w4, [x1, #8]
  424c20:	mov	w3, #0x0                   	// #0
  424c24:	cmp	w2, w4
  424c28:	b.eq	424c34 <ferror@plt+0x22364>  // b.none
  424c2c:	mov	w0, w3
  424c30:	ret
  424c34:	stp	x29, x30, [sp, #-16]!
  424c38:	mov	x29, sp
  424c3c:	mov	w2, w2
  424c40:	ldr	x1, [x1, #16]
  424c44:	ldr	x0, [x0, #16]
  424c48:	bl	4025e0 <memcmp@plt>
  424c4c:	cmp	w0, #0x0
  424c50:	cset	w3, eq  // eq = none
  424c54:	mov	w0, w3
  424c58:	ldp	x29, x30, [sp], #16
  424c5c:	ret
  424c60:	mov	x8, x0
  424c64:	ldrb	w3, [x1, #4]
  424c68:	ldrb	w6, [x2, #4]
  424c6c:	ldrh	w4, [x1, #6]
  424c70:	tst	x4, #0x10
  424c74:	mov	w4, #0x35                  	// #53
  424c78:	csel	w3, w3, w4, eq  // eq = none
  424c7c:	ldrh	w5, [x2, #6]
  424c80:	tst	x5, #0x10
  424c84:	csel	w4, w6, w4, eq  // eq = none
  424c88:	tbz	w5, #1, 424cec <ferror@plt+0x2241c>
  424c8c:	adrp	x5, 462000 <_obstack_memory_used@@Base+0x1b094>
  424c90:	add	x5, x5, #0x2d0
  424c94:	add	x5, x5, #0x540
  424c98:	sub	w0, w4, #0x25
  424c9c:	ldr	x0, [x5, w0, sxtw #3]
  424ca0:	ldrb	w5, [x0]
  424ca4:	cmp	w5, #0x3d
  424ca8:	mov	w0, #0x1                   	// #1
  424cac:	ccmp	w3, #0xd, #0x0, eq  // eq = none
  424cb0:	b.le	424fac <ferror@plt+0x226dc>
  424cb4:	mov	w7, w4
  424cb8:	cmp	w3, #0x12
  424cbc:	b.eq	424eb8 <ferror@plt+0x225e8>  // b.none
  424cc0:	b.hi	424d8c <ferror@plt+0x224bc>  // b.pmore
  424cc4:	cmp	w3, #0x7
  424cc8:	b.eq	424e98 <ferror@plt+0x225c8>  // b.none
  424ccc:	b.ls	424d18 <ferror@plt+0x22448>  // b.plast
  424cd0:	cmp	w3, #0x9
  424cd4:	b.eq	424eac <ferror@plt+0x225dc>  // b.none
  424cd8:	cmp	w3, #0xa
  424cdc:	b.ne	424d70 <ferror@plt+0x224a0>  // b.any
  424ce0:	cmp	w5, #0x7c
  424ce4:	cset	w0, eq  // eq = none
  424ce8:	b	424fac <ferror@plt+0x226dc>
  424cec:	sbfiz	x5, x4, #4, #32
  424cf0:	adrp	x7, 462000 <_obstack_memory_used@@Base+0x1b094>
  424cf4:	add	x7, x7, #0x2d0
  424cf8:	ldr	w0, [x7, x5]
  424cfc:	cbnz	w0, 424d10 <ferror@plt+0x22440>
  424d00:	add	x0, x7, w4, sxtw #4
  424d04:	ldr	x0, [x0, #8]
  424d08:	ldrb	w5, [x0]
  424d0c:	b	424ca4 <ferror@plt+0x223d4>
  424d10:	mov	w5, #0xffffffff            	// #-1
  424d14:	b	424cb4 <ferror@plt+0x223e4>
  424d18:	cmp	w3, #0x4
  424d1c:	b.eq	424e8c <ferror@plt+0x225bc>  // b.none
  424d20:	b.ls	424d44 <ferror@plt+0x22474>  // b.plast
  424d24:	mov	w0, #0x0                   	// #0
  424d28:	cmp	w3, #0x5
  424d2c:	b.ne	424fac <ferror@plt+0x226dc>  // b.any
  424d30:	cmp	w5, #0x2d
  424d34:	mov	w0, #0x3e                  	// #62
  424d38:	ccmp	w5, w0, #0x4, ne  // ne = any
  424d3c:	cset	w0, eq  // eq = none
  424d40:	b	424fac <ferror@plt+0x226dc>
  424d44:	cmp	w3, #0x2
  424d48:	b.eq	424e80 <ferror@plt+0x225b0>  // b.none
  424d4c:	mov	w0, #0x0                   	// #0
  424d50:	cmp	w3, #0x3
  424d54:	b.ne	424fac <ferror@plt+0x226dc>  // b.any
  424d58:	sub	w0, w5, #0x3a
  424d5c:	and	w0, w0, #0xfffffffd
  424d60:	cmp	w5, #0x25
  424d64:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  424d68:	cset	w0, eq  // eq = none
  424d6c:	b	424fac <ferror@plt+0x226dc>
  424d70:	mov	w0, #0x0                   	// #0
  424d74:	cmp	w3, #0x8
  424d78:	b.ne	424fac <ferror@plt+0x226dc>  // b.any
  424d7c:	and	w5, w5, #0xfffffffb
  424d80:	cmp	w5, #0x3a
  424d84:	cset	w0, eq  // eq = none
  424d88:	b	424fac <ferror@plt+0x226dc>
  424d8c:	cmp	w3, #0x35
  424d90:	b.eq	424ed4 <ferror@plt+0x22604>  // b.none
  424d94:	b.ls	424e00 <ferror@plt+0x22530>  // b.plast
  424d98:	cmp	w3, #0x3d
  424d9c:	b.eq	424f60 <ferror@plt+0x22690>  // b.none
  424da0:	b.ls	424e48 <ferror@plt+0x22578>  // b.plast
  424da4:	sub	w3, w3, #0x3e
  424da8:	cmp	w3, #0x4
  424dac:	b.hi	424fa8 <ferror@plt+0x226d8>  // b.pmore
  424db0:	ldrb	w1, [x8, #1161]
  424db4:	mov	w0, #0x0                   	// #0
  424db8:	cbz	w1, 424fac <ferror@plt+0x226dc>
  424dbc:	mov	w0, #0x1                   	// #1
  424dc0:	cmp	w4, #0x35
  424dc4:	b.eq	424fac <ferror@plt+0x226dc>  // b.none
  424dc8:	sbfiz	x6, x6, #4, #32
  424dcc:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b094>
  424dd0:	add	x0, x0, #0x2d0
  424dd4:	ldr	w1, [x0, x6]
  424dd8:	mov	w0, #0x0                   	// #0
  424ddc:	cmp	w1, #0x2
  424de0:	b.ne	424fac <ferror@plt+0x226dc>  // b.any
  424de4:	ldr	x0, [x2, #16]
  424de8:	ldrb	w1, [x0]
  424dec:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1f094>
  424df0:	add	x0, x0, #0xa68
  424df4:	ldrh	w0, [x0, x1, lsl #1]
  424df8:	ubfx	x0, x0, #9, #1
  424dfc:	b	424fac <ferror@plt+0x226dc>
  424e00:	cmp	w3, #0x2f
  424e04:	b.eq	424ec8 <ferror@plt+0x225f8>  // b.none
  424e08:	cmp	w3, #0x30
  424e0c:	b.ne	424e2c <ferror@plt+0x2255c>  // b.any
  424e10:	cmp	w5, #0x2e
  424e14:	mov	w0, #0x25                  	// #37
  424e18:	ccmp	w5, w0, #0x4, ne  // ne = any
  424e1c:	mov	w0, #0x37                  	// #55
  424e20:	ccmp	w4, w0, #0x4, ne  // ne = any
  424e24:	cset	w0, eq  // eq = none
  424e28:	b	424fac <ferror@plt+0x226dc>
  424e2c:	mov	w0, #0x0                   	// #0
  424e30:	cmp	w3, #0x25
  424e34:	b.ne	424fac <ferror@plt+0x226dc>  // b.any
  424e38:	sub	w5, w5, #0x23
  424e3c:	tst	w5, #0xfffffffd
  424e40:	cset	w0, eq  // eq = none
  424e44:	b	424fac <ferror@plt+0x226dc>
  424e48:	mov	w0, #0x0                   	// #0
  424e4c:	cmp	w3, #0x37
  424e50:	b.ne	424fac <ferror@plt+0x226dc>  // b.any
  424e54:	and	w4, w4, #0xfffffffd
  424e58:	and	w4, w4, #0xff
  424e5c:	mov	w0, #0x1                   	// #1
  424e60:	cmp	w4, #0x35
  424e64:	b.eq	424fac <ferror@plt+0x226dc>  // b.none
  424e68:	sub	w0, w5, #0x2d
  424e6c:	cmp	w0, #0x1
  424e70:	cset	w0, ls  // ls = plast
  424e74:	cmp	w5, #0x2b
  424e78:	csinc	w0, w0, wzr, ne  // ne = any
  424e7c:	b	424fac <ferror@plt+0x226dc>
  424e80:	cmp	w5, #0x3e
  424e84:	cset	w0, eq  // eq = none
  424e88:	b	424fac <ferror@plt+0x226dc>
  424e8c:	cmp	w5, #0x2b
  424e90:	cset	w0, eq  // eq = none
  424e94:	b	424fac <ferror@plt+0x226dc>
  424e98:	cmp	w5, #0x2f
  424e9c:	mov	w0, #0x2a                  	// #42
  424ea0:	ccmp	w5, w0, #0x4, ne  // ne = any
  424ea4:	cset	w0, eq  // eq = none
  424ea8:	b	424fac <ferror@plt+0x226dc>
  424eac:	cmp	w5, #0x26
  424eb0:	cset	w0, eq  // eq = none
  424eb4:	b	424fac <ferror@plt+0x226dc>
  424eb8:	and	w5, w5, #0xfffffffb
  424ebc:	cmp	w5, #0x3a
  424ec0:	cset	w0, eq  // eq = none
  424ec4:	b	424fac <ferror@plt+0x226dc>
  424ec8:	cmp	w5, #0x2a
  424ecc:	cset	w0, eq  // eq = none
  424ed0:	b	424fac <ferror@plt+0x226dc>
  424ed4:	cmp	w4, #0x37
  424ed8:	b.eq	424ef8 <ferror@plt+0x22628>  // b.none
  424edc:	cmp	w7, #0x35
  424ee0:	mov	w0, #0x38                  	// #56
  424ee4:	ccmp	w7, w0, #0x4, ne  // ne = any
  424ee8:	cset	w0, eq  // eq = none
  424eec:	cmp	w7, #0x3e
  424ef0:	csinc	w0, w0, wzr, ne  // ne = any
  424ef4:	b	424fac <ferror@plt+0x226dc>
  424ef8:	ldr	w1, [x2, #8]
  424efc:	cbz	w1, 424f50 <ferror@plt+0x22680>
  424f00:	ldr	x0, [x2, #16]
  424f04:	sub	w1, w1, #0x1
  424f08:	add	x3, x0, #0x1
  424f0c:	add	x3, x1, x3
  424f10:	adrp	x4, 466000 <_obstack_memory_used@@Base+0x1f094>
  424f14:	add	x4, x4, #0xa68
  424f18:	mov	w5, #0x204                 	// #516
  424f1c:	b	424f2c <ferror@plt+0x2265c>
  424f20:	add	x0, x0, #0x1
  424f24:	cmp	x3, x0
  424f28:	b.eq	424f58 <ferror@plt+0x22688>  // b.none
  424f2c:	ldrb	w1, [x0]
  424f30:	ldrh	w2, [x4, w1, sxtw #1]
  424f34:	tst	w5, w2
  424f38:	b.ne	424f20 <ferror@plt+0x22650>  // b.any
  424f3c:	cmp	w1, #0x24
  424f40:	b.ne	424edc <ferror@plt+0x2260c>  // b.any
  424f44:	ldrb	w1, [x8, #1146]
  424f48:	cbnz	w1, 424f20 <ferror@plt+0x22650>
  424f4c:	b	424edc <ferror@plt+0x2260c>
  424f50:	mov	w0, #0x1                   	// #1
  424f54:	b	424fac <ferror@plt+0x226dc>
  424f58:	mov	w0, #0x1                   	// #1
  424f5c:	b	424fac <ferror@plt+0x226dc>
  424f60:	ldr	x0, [x1, #16]
  424f64:	ldrb	w2, [x0]
  424f68:	cmp	w4, #0x35
  424f6c:	cset	w3, eq  // eq = none
  424f70:	cmp	w2, #0x5c
  424f74:	csel	w1, w3, wzr, eq  // eq = none
  424f78:	cbnz	w1, 424f94 <ferror@plt+0x226c4>
  424f7c:	ldrb	w0, [x8, #1122]
  424f80:	cmp	w0, #0x0
  424f84:	cset	w0, ne  // ne = any
  424f88:	cmp	w2, #0x40
  424f8c:	csel	w1, w0, wzr, eq  // eq = none
  424f90:	cbnz	w1, 424f9c <ferror@plt+0x226cc>
  424f94:	mov	w0, w1
  424f98:	b	424fac <ferror@plt+0x226dc>
  424f9c:	cmp	w4, #0x3e
  424fa0:	csinc	w1, w3, wzr, ne  // ne = any
  424fa4:	b	424f94 <ferror@plt+0x226c4>
  424fa8:	mov	w0, #0x0                   	// #0
  424fac:	ret
  424fb0:	stp	x29, x30, [sp, #-64]!
  424fb4:	mov	x29, sp
  424fb8:	stp	x19, x20, [sp, #16]
  424fbc:	stp	x21, x22, [sp, #32]
  424fc0:	mov	x21, x0
  424fc4:	mov	x20, x1
  424fc8:	bl	42ea88 <ferror@plt+0x2c1b8>
  424fcc:	mov	x19, x0
  424fd0:	ldrb	w0, [x0, #4]
  424fd4:	cmp	w0, #0x16
  424fd8:	b.eq	425048 <ferror@plt+0x22778>  // b.none
  424fdc:	str	x23, [sp, #48]
  424fe0:	mov	w22, #0x20                  	// #32
  424fe4:	mov	w23, #0x20                  	// #32
  424fe8:	b	425004 <ferror@plt+0x22734>
  424fec:	add	x0, x1, #0x1
  424ff0:	str	x0, [x20, #40]
  424ff4:	strb	w22, [x1]
  424ff8:	ldrb	w1, [x19, #4]
  424ffc:	cmp	w1, #0x16
  425000:	b.eq	425044 <ferror@plt+0x22774>  // b.none
  425004:	mov	x1, x20
  425008:	mov	x0, x19
  42500c:	bl	4249bc <ferror@plt+0x220ec>
  425010:	mov	x0, x21
  425014:	bl	42ea88 <ferror@plt+0x2c1b8>
  425018:	mov	x19, x0
  42501c:	ldrh	w2, [x0, #6]
  425020:	tbz	w2, #0, 424ff8 <ferror@plt+0x22728>
  425024:	ldr	x1, [x20, #40]
  425028:	ldr	x0, [x20, #48]
  42502c:	cmp	x1, x0
  425030:	b.cc	424fec <ferror@plt+0x2271c>  // b.lo, b.ul, b.last
  425034:	mov	w1, w23
  425038:	mov	x0, x20
  42503c:	bl	4025a0 <__overflow@plt>
  425040:	b	424ff8 <ferror@plt+0x22728>
  425044:	ldr	x23, [sp, #48]
  425048:	ldr	x0, [x20, #40]
  42504c:	ldr	x1, [x20, #48]
  425050:	cmp	x0, x1
  425054:	b.cs	425078 <ferror@plt+0x227a8>  // b.hs, b.nlast
  425058:	add	x1, x0, #0x1
  42505c:	str	x1, [x20, #40]
  425060:	mov	w1, #0xa                   	// #10
  425064:	strb	w1, [x0]
  425068:	ldp	x19, x20, [sp, #16]
  42506c:	ldp	x21, x22, [sp, #32]
  425070:	ldp	x29, x30, [sp], #64
  425074:	ret
  425078:	mov	w1, #0xa                   	// #10
  42507c:	mov	x0, x20
  425080:	bl	4025a0 <__overflow@plt>
  425084:	b	425068 <ferror@plt+0x22798>
  425088:	stp	x29, x30, [sp, #-80]!
  42508c:	mov	x29, sp
  425090:	stp	x19, x20, [sp, #16]
  425094:	stp	x21, x22, [sp, #32]
  425098:	stp	x23, x24, [sp, #48]
  42509c:	str	x25, [sp, #64]
  4250a0:	mov	x22, x0
  4250a4:	cbz	x1, 42517c <ferror@plt+0x228ac>
  4250a8:	mov	x19, x1
  4250ac:	mov	x0, x1
  4250b0:	bl	4022b0 <strlen@plt>
  4250b4:	mov	x25, x0
  4250b8:	add	w23, w0, #0x78
  4250bc:	add	w0, w0, #0x78
  4250c0:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  4250c4:	mov	x21, x0
  4250c8:	mov	x2, x19
  4250cc:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a094>
  4250d0:	add	x1, x1, #0xad8
  4250d4:	bl	402350 <sprintf@plt>
  4250d8:	add	w25, w25, #0x2
  4250dc:	mov	x0, x22
  4250e0:	bl	42ea88 <ferror@plt+0x2c1b8>
  4250e4:	mov	x19, x0
  4250e8:	ldrb	w0, [x0, #4]
  4250ec:	cmp	w0, #0x16
  4250f0:	b.eq	425194 <ferror@plt+0x228c4>  // b.none
  4250f4:	mov	w24, #0x20                  	// #32
  4250f8:	b	425108 <ferror@plt+0x22838>
  4250fc:	ldrb	w0, [x19, #4]
  425100:	cmp	w0, #0x16
  425104:	b.eq	425194 <ferror@plt+0x228c4>  // b.none
  425108:	mov	x0, x19
  42510c:	bl	4246a8 <ferror@plt+0x21dd8>
  425110:	add	w1, w0, w25
  425114:	add	w1, w1, #0x2
  425118:	cmp	w1, w23
  42511c:	b.hi	42515c <ferror@plt+0x2288c>  // b.pmore
  425120:	mov	w3, #0x0                   	// #0
  425124:	add	x2, x21, w25, uxtw
  425128:	mov	x1, x19
  42512c:	mov	x0, x22
  425130:	bl	424774 <ferror@plt+0x21ea4>
  425134:	sub	x20, x0, x21
  425138:	mov	w25, w20
  42513c:	mov	x0, x22
  425140:	bl	42ea88 <ferror@plt+0x2c1b8>
  425144:	mov	x19, x0
  425148:	ldrh	w0, [x0, #6]
  42514c:	tbz	w0, #0, 4250fc <ferror@plt+0x2282c>
  425150:	add	w25, w20, #0x1
  425154:	strb	w24, [x21, w20, uxtw]
  425158:	b	4250fc <ferror@plt+0x2282c>
  42515c:	lsl	w0, w23, #1
  425160:	cmp	w1, w0
  425164:	csel	w23, w1, w0, cs  // cs = hs, nlast
  425168:	csel	w1, w1, w0, cs  // cs = hs, nlast
  42516c:	mov	x0, x21
  425170:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  425174:	mov	x21, x0
  425178:	b	425120 <ferror@plt+0x22850>
  42517c:	mov	x0, #0x78                  	// #120
  425180:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  425184:	mov	x21, x0
  425188:	mov	w23, #0x78                  	// #120
  42518c:	mov	w25, #0x0                   	// #0
  425190:	b	4250dc <ferror@plt+0x2280c>
  425194:	strb	wzr, [x21, w25, uxtw]
  425198:	mov	x0, x21
  42519c:	ldp	x19, x20, [sp, #16]
  4251a0:	ldp	x21, x22, [sp, #32]
  4251a4:	ldp	x23, x24, [sp, #48]
  4251a8:	ldr	x25, [sp, #64]
  4251ac:	ldp	x29, x30, [sp], #80
  4251b0:	ret
  4251b4:	mov	x2, x1
  4251b8:	mov	x3, x2
  4251bc:	ldr	x2, [x2]
  4251c0:	cbnz	x2, 4251b8 <ferror@plt+0x228e8>
  4251c4:	ldr	x2, [x0, #72]
  4251c8:	str	x2, [x3]
  4251cc:	str	x1, [x0, #72]
  4251d0:	ret
  4251d4:	add	x4, x0, #0x48
  4251d8:	ldr	x0, [x0, #72]
  4251dc:	cbz	x0, 4251f0 <ferror@plt+0x22920>
  4251e0:	add	x5, x1, x1, lsl #1
  4251e4:	mov	x2, #0x1f40                	// #8000
  4251e8:	add	x5, x2, x5, lsr #1
  4251ec:	b	425248 <ferror@plt+0x22978>
  4251f0:	stp	x29, x30, [sp, #-32]!
  4251f4:	mov	x29, sp
  4251f8:	str	x19, [sp, #16]
  4251fc:	mov	x19, #0x1f40                	// #8000
  425200:	cmp	x1, x19
  425204:	csel	x19, x1, x19, cs  // cs = hs, nlast
  425208:	add	x19, x19, #0x7
  42520c:	and	x19, x19, #0xfffffffffffffff8
  425210:	add	x0, x19, #0x20
  425214:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  425218:	mov	x1, x0
  42521c:	add	x0, x0, x19
  425220:	str	x1, [x0, #8]
  425224:	str	x1, [x0, #16]
  425228:	str	x0, [x0, #24]
  42522c:	str	xzr, [x1, x19]
  425230:	ldr	x19, [sp, #16]
  425234:	ldp	x29, x30, [sp], #32
  425238:	ret
  42523c:	mov	x4, x0
  425240:	ldr	x0, [x0]
  425244:	cbz	x0, 4251f0 <ferror@plt+0x22920>
  425248:	ldr	x2, [x0, #24]
  42524c:	ldr	x3, [x0, #8]
  425250:	sub	x2, x2, x3
  425254:	cmp	x2, x1
  425258:	b.cc	42523c <ferror@plt+0x2296c>  // b.lo, b.ul, b.last
  42525c:	cmp	x5, x2
  425260:	b.cc	42523c <ferror@plt+0x2296c>  // b.lo, b.ul, b.last
  425264:	ldr	x1, [x0]
  425268:	str	x1, [x4]
  42526c:	str	xzr, [x0]
  425270:	ldr	x1, [x0, #8]
  425274:	str	x1, [x0, #16]
  425278:	ret
  42527c:	stp	x29, x30, [sp, #-32]!
  425280:	mov	x29, sp
  425284:	stp	x19, x20, [sp, #16]
  425288:	mov	x19, x1
  42528c:	ldr	x3, [x1, #24]
  425290:	ldr	x1, [x1, #16]
  425294:	sub	x1, x3, x1
  425298:	add	x1, x2, x1, lsl #1
  42529c:	bl	4251d4 <ferror@plt+0x22904>
  4252a0:	mov	x20, x0
  4252a4:	str	x0, [x19]
  4252a8:	ldr	x1, [x19, #16]
  4252ac:	ldr	x2, [x19, #24]
  4252b0:	sub	x2, x2, x1
  4252b4:	ldr	x0, [x0, #8]
  4252b8:	bl	402260 <memcpy@plt>
  4252bc:	mov	x0, x20
  4252c0:	ldp	x19, x20, [sp, #16]
  4252c4:	ldp	x29, x30, [sp], #32
  4252c8:	ret
  4252cc:	stp	x29, x30, [sp, #-80]!
  4252d0:	mov	x29, sp
  4252d4:	stp	x19, x20, [sp, #16]
  4252d8:	stp	x21, x22, [sp, #32]
  4252dc:	stp	x23, x24, [sp, #48]
  4252e0:	stp	x25, x26, [sp, #64]
  4252e4:	mov	x26, x0
  4252e8:	mov	x24, x1
  4252ec:	mov	x20, x2
  4252f0:	mov	x23, x3
  4252f4:	mov	x21, x4
  4252f8:	ldr	x25, [x3]
  4252fc:	ldr	x19, [x4]
  425300:	cbz	x25, 425354 <ferror@plt+0x22a84>
  425304:	ldr	x0, [x19, #16]
  425308:	ldr	x22, [x19, #24]
  42530c:	sub	x22, x22, x0
  425310:	cmp	x22, x2
  425314:	b.cc	425368 <ferror@plt+0x22a98>  // b.lo, b.ul, b.last
  425318:	mov	x2, x20
  42531c:	mov	x1, x24
  425320:	ldr	x0, [x19, #16]
  425324:	bl	402260 <memcpy@plt>
  425328:	ldr	x2, [x19, #16]
  42532c:	add	x20, x2, x20
  425330:	str	x20, [x19, #16]
  425334:	str	x25, [x23]
  425338:	str	x19, [x21]
  42533c:	ldp	x19, x20, [sp, #16]
  425340:	ldp	x21, x22, [sp, #32]
  425344:	ldp	x23, x24, [sp, #48]
  425348:	ldp	x25, x26, [sp, #64]
  42534c:	ldp	x29, x30, [sp], #80
  425350:	ret
  425354:	mov	x1, x2
  425358:	bl	4251d4 <ferror@plt+0x22904>
  42535c:	mov	x25, x0
  425360:	mov	x19, x0
  425364:	b	425318 <ferror@plt+0x22a48>
  425368:	mov	x2, x22
  42536c:	bl	402260 <memcpy@plt>
  425370:	ldr	x0, [x19, #16]
  425374:	add	x0, x0, x22
  425378:	str	x0, [x19, #16]
  42537c:	add	x24, x24, x22
  425380:	sub	x20, x20, x22
  425384:	mov	x2, x20
  425388:	mov	x1, x19
  42538c:	mov	x0, x26
  425390:	bl	42527c <ferror@plt+0x229ac>
  425394:	mov	x19, x0
  425398:	b	425318 <ferror@plt+0x22a48>
  42539c:	stp	x29, x30, [sp, #-48]!
  4253a0:	mov	x29, sp
  4253a4:	stp	x19, x20, [sp, #16]
  4253a8:	str	x21, [sp, #32]
  4253ac:	mov	x21, x1
  4253b0:	ldr	x20, [x1]
  4253b4:	ldr	x3, [x20, #24]
  4253b8:	ldr	x1, [x20, #16]
  4253bc:	sub	x1, x3, x1
  4253c0:	add	x1, x2, x1, lsl #1
  4253c4:	bl	4251d4 <ferror@plt+0x22904>
  4253c8:	mov	x19, x0
  4253cc:	ldr	x1, [x20, #16]
  4253d0:	ldr	x2, [x20, #24]
  4253d4:	sub	x2, x2, x1
  4253d8:	ldr	x0, [x0, #8]
  4253dc:	bl	402260 <memcpy@plt>
  4253e0:	str	x20, [x19]
  4253e4:	str	x19, [x21]
  4253e8:	ldp	x19, x20, [sp, #16]
  4253ec:	ldr	x21, [sp, #32]
  4253f0:	ldp	x29, x30, [sp], #48
  4253f4:	ret
  4253f8:	stp	x29, x30, [sp, #-32]!
  4253fc:	mov	x29, sp
  425400:	str	x19, [sp, #16]
  425404:	mov	x19, x0
  425408:	cbz	x0, 425420 <ferror@plt+0x22b50>
  42540c:	mov	x0, x19
  425410:	ldr	x19, [x19]
  425414:	ldr	x0, [x0, #8]
  425418:	bl	402690 <free@plt>
  42541c:	cbnz	x19, 42540c <ferror@plt+0x22b3c>
  425420:	ldr	x19, [sp, #16]
  425424:	ldp	x29, x30, [sp], #32
  425428:	ret
  42542c:	stp	x29, x30, [sp, #-32]!
  425430:	mov	x29, sp
  425434:	stp	x19, x20, [sp, #16]
  425438:	mov	x20, x0
  42543c:	mov	x19, x1
  425440:	ldr	x1, [x0, #64]
  425444:	ldr	x0, [x1, #16]
  425448:	ldr	x2, [x1, #24]
  42544c:	sub	x2, x2, x0
  425450:	cmp	x2, x19
  425454:	b.cc	42546c <ferror@plt+0x22b9c>  // b.lo, b.ul, b.last
  425458:	add	x19, x0, x19
  42545c:	str	x19, [x1, #16]
  425460:	ldp	x19, x20, [sp, #16]
  425464:	ldp	x29, x30, [sp], #32
  425468:	ret
  42546c:	mov	x1, x19
  425470:	mov	x0, x20
  425474:	bl	4251d4 <ferror@plt+0x22904>
  425478:	mov	x1, x0
  42547c:	ldr	x0, [x20, #64]
  425480:	str	x0, [x1]
  425484:	str	x1, [x20, #64]
  425488:	ldr	x0, [x1, #16]
  42548c:	b	425458 <ferror@plt+0x22b88>
  425490:	stp	x29, x30, [sp, #-80]!
  425494:	mov	x29, sp
  425498:	stp	x19, x20, [sp, #16]
  42549c:	stp	x21, x22, [sp, #32]
  4254a0:	stp	x23, x24, [sp, #48]
  4254a4:	str	x25, [sp, #64]
  4254a8:	mov	x22, x0
  4254ac:	mov	x23, x1
  4254b0:	mov	x20, x2
  4254b4:	ldr	x0, [x0]
  4254b8:	ldr	x24, [x0]
  4254bc:	sub	x24, x24, #0x1
  4254c0:	adrp	x21, 466000 <_obstack_memory_used@@Base+0x1f094>
  4254c4:	add	x21, x21, #0xa68
  4254c8:	mov	w25, #0x204                 	// #516
  4254cc:	b	425590 <ferror@plt+0x22cc0>
  4254d0:	ldrb	w1, [x22, #1166]
  4254d4:	cbz	w1, 425540 <ferror@plt+0x22c70>
  4254d8:	str	w0, [x20]
  4254dc:	strb	wzr, [x20, #4]
  4254e0:	add	x19, x19, #0x1
  4254e4:	ldrb	w0, [x19]
  4254e8:	ldrh	w1, [x21, w0, sxtw #1]
  4254ec:	and	w1, w25, w1
  4254f0:	cmp	w0, #0x2e
  4254f4:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  4254f8:	b.ne	4254d8 <ferror@plt+0x22c08>  // b.any
  4254fc:	cmp	w0, #0x27
  425500:	b.eq	4254d0 <ferror@plt+0x22c00>  // b.none
  425504:	sub	w1, w0, #0x2b
  425508:	and	w1, w1, #0xfffffffd
  42550c:	tst	w1, #0xff
  425510:	b.ne	425540 <ferror@plt+0x22c70>  // b.any
  425514:	ldurb	w1, [x19, #-1]
  425518:	and	w1, w1, #0xffffffdf
  42551c:	and	w1, w1, #0xff
  425520:	cmp	w1, #0x45
  425524:	b.eq	4254d8 <ferror@plt+0x22c08>  // b.none
  425528:	cmp	w1, #0x50
  42552c:	b.ne	425540 <ferror@plt+0x22c70>  // b.any
  425530:	ldrb	w1, [x22, #1127]
  425534:	cbnz	w1, 4254d8 <ferror@plt+0x22c08>
  425538:	ldr	x2, [x22]
  42553c:	b	425574 <ferror@plt+0x22ca4>
  425540:	ldr	x2, [x22]
  425544:	ldr	x1, [x2]
  425548:	cmp	x19, x1
  42554c:	b.ls	425574 <ferror@plt+0x22ca4>  // b.plast
  425550:	ldurb	w0, [x19, #-1]
  425554:	cmp	w0, #0x27
  425558:	b.ne	425574 <ferror@plt+0x22ca4>  // b.any
  42555c:	ldrb	w0, [x22, #1166]
  425560:	cbz	w0, 425574 <ferror@plt+0x22ca4>
  425564:	sub	x19, x19, #0x1
  425568:	cmp	x19, x1
  42556c:	b.ne	425550 <ferror@plt+0x22c80>  // b.any
  425570:	mov	x19, x1
  425574:	str	x19, [x2]
  425578:	mov	x2, x20
  42557c:	mov	w1, #0x0                   	// #0
  425580:	mov	x0, x22
  425584:	bl	4236b0 <ferror@plt+0x20de0>
  425588:	and	w0, w0, #0xff
  42558c:	cbz	w0, 42559c <ferror@plt+0x22ccc>
  425590:	ldr	x0, [x22]
  425594:	ldr	x19, [x0]
  425598:	b	4254e4 <ferror@plt+0x22c14>
  42559c:	sub	x1, x19, x24
  4255a0:	str	w1, [x23]
  4255a4:	add	w1, w1, #0x1
  4255a8:	mov	x0, x22
  4255ac:	bl	42542c <ferror@plt+0x22b5c>
  4255b0:	mov	x19, x0
  4255b4:	ldr	w2, [x23]
  4255b8:	mov	x1, x24
  4255bc:	bl	402260 <memcpy@plt>
  4255c0:	ldr	w0, [x23]
  4255c4:	strb	wzr, [x19, x0]
  4255c8:	str	x19, [x23, #8]
  4255cc:	ldp	x19, x20, [sp, #16]
  4255d0:	ldp	x21, x22, [sp, #32]
  4255d4:	ldp	x23, x24, [sp, #48]
  4255d8:	ldr	x25, [sp, #64]
  4255dc:	ldp	x29, x30, [sp], #80
  4255e0:	ret
  4255e4:	stp	x29, x30, [sp, #-64]!
  4255e8:	mov	x29, sp
  4255ec:	stp	x19, x20, [sp, #16]
  4255f0:	stp	x21, x22, [sp, #32]
  4255f4:	str	x23, [sp, #48]
  4255f8:	mov	x20, x1
  4255fc:	mov	x23, x2
  425600:	mov	w19, w3
  425604:	mov	w22, w4
  425608:	add	w1, w3, #0x1
  42560c:	bl	42542c <ferror@plt+0x22b5c>
  425610:	mov	x21, x0
  425614:	mov	w2, w19
  425618:	mov	x1, x23
  42561c:	bl	402260 <memcpy@plt>
  425620:	strb	wzr, [x21, w19, uxtw]
  425624:	strb	w22, [x20, #4]
  425628:	str	w19, [x20, #8]
  42562c:	str	x21, [x20, #16]
  425630:	ldp	x19, x20, [sp, #16]
  425634:	ldp	x21, x22, [sp, #32]
  425638:	ldr	x23, [sp, #48]
  42563c:	ldp	x29, x30, [sp], #64
  425640:	ret
  425644:	stp	x29, x30, [sp, #-224]!
  425648:	mov	x29, sp
  42564c:	stp	x19, x20, [sp, #16]
  425650:	stp	x21, x22, [sp, #32]
  425654:	stp	x23, x24, [sp, #48]
  425658:	mov	x22, x0
  42565c:	str	x1, [sp, #112]
  425660:	str	x2, [sp, #104]
  425664:	ldrb	w0, [x2]
  425668:	cmp	w0, #0x4c
  42566c:	mov	w1, #0x55                  	// #85
  425670:	ccmp	w0, w1, #0x4, ne  // ne = any
  425674:	b.ne	4256ac <ferror@plt+0x22ddc>  // b.any
  425678:	add	x19, x2, #0x2
  42567c:	ldrb	w21, [x2, #1]
  425680:	cmp	w21, #0x52
  425684:	b.eq	425744 <ferror@plt+0x22e74>  // b.none
  425688:	cmp	w21, #0x22
  42568c:	b.eq	426074 <ferror@plt+0x237a4>  // b.none
  425690:	cmp	w21, #0x27
  425694:	b.eq	42609c <ferror@plt+0x237cc>  // b.none
  425698:	mov	w23, #0x44                  	// #68
  42569c:	mov	w21, #0x3e                  	// #62
  4256a0:	mov	w2, #0x0                   	// #0
  4256a4:	mov	w0, #0x1                   	// #1
  4256a8:	b	4260f8 <ferror@plt+0x23828>
  4256ac:	mov	w21, w0
  4256b0:	cmp	w0, #0x75
  4256b4:	b.eq	4256f4 <ferror@plt+0x22e24>  // b.none
  4256b8:	ldr	x1, [sp, #104]
  4256bc:	add	x19, x1, #0x1
  4256c0:	cmp	w0, #0x52
  4256c4:	b.ne	425688 <ferror@plt+0x22db8>  // b.any
  4256c8:	stp	x25, x26, [sp, #64]
  4256cc:	stp	x27, x28, [sp, #80]
  4256d0:	str	xzr, [sp, #160]
  4256d4:	str	xzr, [sp, #168]
  4256d8:	ldr	x0, [x22]
  4256dc:	ldr	w20, [x0, #56]
  4256e0:	ldr	x0, [x0, #48]
  4256e4:	add	x20, x0, x20, lsl #4
  4256e8:	mov	w0, #0x3e                  	// #62
  4256ec:	str	w0, [sp, #140]
  4256f0:	b	425774 <ferror@plt+0x22ea4>
  4256f4:	ldr	x1, [sp, #104]
  4256f8:	ldrb	w21, [x1, #1]
  4256fc:	add	x19, x1, #0x2
  425700:	cmp	w21, #0x38
  425704:	b.eq	425738 <ferror@plt+0x22e68>  // b.none
  425708:	cmp	w21, #0x52
  42570c:	b.eq	426300 <ferror@plt+0x23a30>  // b.none
  425710:	cmp	w21, #0x22
  425714:	b.ne	425690 <ferror@plt+0x22dc0>  // b.any
  425718:	ldr	x0, [sp, #104]
  42571c:	ldrb	w0, [x0, #1]
  425720:	cmp	w0, #0x38
  425724:	mov	w23, #0x42                  	// #66
  425728:	mov	w0, #0x40                  	// #64
  42572c:	csel	w23, w23, w0, eq  // eq = none
  425730:	mov	w21, #0x22                  	// #34
  425734:	b	4256a0 <ferror@plt+0x22dd0>
  425738:	add	x19, x1, #0x3
  42573c:	ldrb	w21, [x1, #2]
  425740:	b	425708 <ferror@plt+0x22e38>
  425744:	stp	x25, x26, [sp, #64]
  425748:	stp	x27, x28, [sp, #80]
  42574c:	str	xzr, [sp, #160]
  425750:	str	xzr, [sp, #168]
  425754:	ldr	x1, [x22]
  425758:	ldr	w20, [x1, #56]
  42575c:	ldr	x1, [x1, #48]
  425760:	add	x20, x1, x20, lsl #4
  425764:	mov	w1, #0x3f                  	// #63
  425768:	str	w1, [sp, #140]
  42576c:	cmp	w0, #0x4c
  425770:	b.ne	4257ac <ferror@plt+0x22edc>  // b.any
  425774:	add	x19, x19, #0x1
  425778:	ldr	x23, [sp, #104]
  42577c:	sub	x0, x19, x23
  425780:	str	x0, [sp, #128]
  425784:	mov	x24, #0x0                   	// #0
  425788:	mov	x21, #0x0                   	// #0
  42578c:	str	wzr, [sp, #120]
  425790:	str	wzr, [sp, #124]
  425794:	str	wzr, [sp, #136]
  425798:	mov	x27, #0xffffffff77ffffff    	// #-2281701377
  42579c:	movk	x27, #0x3fff, lsl #48
  4257a0:	mov	x26, #0xfcee00000000        	// #278099132416000
  4257a4:	movk	x26, #0xffff, lsl #48
  4257a8:	b	425af8 <ferror@plt+0x23228>
  4257ac:	mov	w1, #0x41                  	// #65
  4257b0:	str	w1, [sp, #140]
  4257b4:	cmp	w0, #0x55
  4257b8:	b.eq	425774 <ferror@plt+0x22ea4>  // b.none
  4257bc:	mov	w1, #0x3e                  	// #62
  4257c0:	str	w1, [sp, #140]
  4257c4:	cmp	w0, #0x75
  4257c8:	b.ne	425774 <ferror@plt+0x22ea4>  // b.any
  4257cc:	b	426320 <ferror@plt+0x23a50>
  4257d0:	mov	x20, x1
  4257d4:	mov	x19, x25
  4257d8:	b	425af8 <ferror@plt+0x23228>
  4257dc:	mov	x20, x1
  4257e0:	mov	x24, x0
  4257e4:	mov	x19, x25
  4257e8:	b	425af8 <ferror@plt+0x23228>
  4257ec:	mov	x20, x1
  4257f0:	mov	x19, x25
  4257f4:	mov	x24, #0x0                   	// #0
  4257f8:	mov	w0, #0x2                   	// #2
  4257fc:	str	w0, [sp, #120]
  425800:	str	wzr, [sp, #124]
  425804:	b	425af8 <ferror@plt+0x23228>
  425808:	b.ne	425ab4 <ferror@plt+0x231e4>  // b.any
  42580c:	adrp	x25, 459000 <_obstack_memory_used@@Base+0x12094>
  425810:	add	x25, x25, #0x8a8
  425814:	b	4258b4 <ferror@plt+0x22fe4>
  425818:	sub	x28, x19, x23
  42581c:	add	x4, sp, #0xa8
  425820:	add	x3, sp, #0xa0
  425824:	mov	x2, x28
  425828:	mov	x1, x23
  42582c:	mov	x0, x22
  425830:	bl	4252cc <ferror@plt+0x229fc>
  425834:	add	x21, x21, #0x1
  425838:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x1a094>
  42583c:	add	x23, x23, #0xae0
  425840:	add	x4, sp, #0xa8
  425844:	add	x3, sp, #0xa0
  425848:	mov	x2, #0x1                   	// #1
  42584c:	mov	x1, x23
  425850:	mov	x0, x22
  425854:	bl	4252cc <ferror@plt+0x229fc>
  425858:	add	x21, x28, x21
  42585c:	cmp	x24, #0x10
  425860:	ccmp	x19, x23, #0x4, ls  // ls = plast
  425864:	b.ne	42599c <ferror@plt+0x230cc>  // b.any
  425868:	ldr	w0, [x20, #8]
  42586c:	cmp	w0, #0x20
  425870:	b.eq	4259b0 <ferror@plt+0x230e0>  // b.none
  425874:	add	x4, sp, #0xa8
  425878:	add	x3, sp, #0xa0
  42587c:	mov	x2, #0x1                   	// #1
  425880:	mov	x1, x25
  425884:	mov	x0, x22
  425888:	bl	4252cc <ferror@plt+0x229fc>
  42588c:	add	x21, x21, #0x1
  425890:	cmp	x19, x25
  425894:	mov	x23, x19
  425898:	ccmp	x24, #0x10, #0x2, ne  // ne = any
  42589c:	b.ls	4259f4 <ferror@plt+0x23124>  // b.plast
  4258a0:	add	x1, x20, #0x10
  4258a4:	ldr	x0, [x20, #16]
  4258a8:	cmp	x19, x0
  4258ac:	b.ne	425ab8 <ferror@plt+0x231e8>  // b.any
  4258b0:	mov	x20, x1
  4258b4:	ldr	w0, [x20, #8]
  4258b8:	cmp	w0, #0x20
  4258bc:	b.eq	425818 <ferror@plt+0x22f48>  // b.none
  4258c0:	cmp	w0, #0x5c
  4258c4:	b.eq	425818 <ferror@plt+0x22f48>  // b.none
  4258c8:	cbz	w0, 4258a0 <ferror@plt+0x22fd0>
  4258cc:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x41094>
  4258d0:	add	x1, x1, #0x7a8
  4258d4:	ldrb	w1, [x1, w0, uxtw]
  4258d8:	cbz	w1, 425a9c <ferror@plt+0x231cc>
  4258dc:	strb	w0, [sp, #159]
  4258e0:	str	wzr, [x20, #8]
  4258e4:	ldrb	w0, [x22, #1125]
  4258e8:	cbz	w0, 4258a0 <ferror@plt+0x22fd0>
  4258ec:	sub	x28, x19, x23
  4258f0:	add	x4, sp, #0xa8
  4258f4:	add	x3, sp, #0xa0
  4258f8:	mov	x2, x28
  4258fc:	mov	x1, x23
  425900:	mov	x0, x22
  425904:	bl	4252cc <ferror@plt+0x229fc>
  425908:	add	x21, x28, x21
  42590c:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x1a094>
  425910:	add	x23, x23, #0xae8
  425914:	add	x4, sp, #0xa8
  425918:	add	x3, sp, #0xa0
  42591c:	mov	x2, #0x2                   	// #2
  425920:	mov	x1, x23
  425924:	mov	x0, x22
  425928:	bl	4252cc <ferror@plt+0x229fc>
  42592c:	cmp	x24, #0x10
  425930:	ccmp	x19, x23, #0x4, ls  // ls = plast
  425934:	b.ne	425a08 <ferror@plt+0x23138>  // b.any
  425938:	ldrb	w0, [sp, #159]
  42593c:	cmp	w0, #0x2f
  425940:	b.ne	425a48 <ferror@plt+0x23178>  // b.any
  425944:	ldr	x0, [x20, #16]
  425948:	cmp	x19, x0
  42594c:	b.ne	425a48 <ferror@plt+0x23178>  // b.any
  425950:	ldr	w0, [x20, #24]
  425954:	cmp	w0, #0x20
  425958:	mov	w1, #0x5c                  	// #92
  42595c:	ccmp	w0, w1, #0x4, ne  // ne = any
  425960:	b.ne	425a1c <ferror@plt+0x2314c>  // b.any
  425964:	adrp	x23, 463000 <_obstack_memory_used@@Base+0x1c094>
  425968:	add	x23, x23, #0xfe0
  42596c:	add	x4, sp, #0xa8
  425970:	add	x3, sp, #0xa0
  425974:	mov	x2, #0x1                   	// #1
  425978:	mov	x1, x23
  42597c:	mov	x0, x22
  425980:	bl	4252cc <ferror@plt+0x229fc>
  425984:	add	x21, x21, #0x3
  425988:	cmp	x19, x23
  42598c:	ccmp	x24, #0x10, #0x2, ne  // ne = any
  425990:	b.ls	425a34 <ferror@plt+0x23164>  // b.plast
  425994:	add	x20, x20, #0x10
  425998:	b	425868 <ferror@plt+0x22f98>
  42599c:	mov	w0, #0x5c                  	// #92
  4259a0:	add	x1, sp, #0xc8
  4259a4:	strb	w0, [x1, x24]
  4259a8:	add	x24, x24, #0x1
  4259ac:	b	425868 <ferror@plt+0x22f98>
  4259b0:	adrp	x23, 458000 <_obstack_memory_used@@Base+0x11094>
  4259b4:	add	x23, x23, #0xa08
  4259b8:	add	x4, sp, #0xa8
  4259bc:	add	x3, sp, #0xa0
  4259c0:	mov	x2, #0x1                   	// #1
  4259c4:	mov	x1, x23
  4259c8:	mov	x0, x22
  4259cc:	bl	4252cc <ferror@plt+0x229fc>
  4259d0:	add	x21, x21, #0x1
  4259d4:	cmp	x19, x23
  4259d8:	ccmp	x24, #0x10, #0x2, ne  // ne = any
  4259dc:	b.hi	425874 <ferror@plt+0x22fa4>  // b.pmore
  4259e0:	mov	w0, #0x20                  	// #32
  4259e4:	add	x1, sp, #0xc8
  4259e8:	strb	w0, [x1, x24]
  4259ec:	add	x24, x24, #0x1
  4259f0:	b	425874 <ferror@plt+0x22fa4>
  4259f4:	mov	w0, #0xa                   	// #10
  4259f8:	add	x1, sp, #0xc8
  4259fc:	strb	w0, [x1, x24]
  425a00:	add	x24, x24, #0x1
  425a04:	b	4258a0 <ferror@plt+0x22fd0>
  425a08:	mov	w0, #0x3f3f                	// #16191
  425a0c:	add	x1, sp, #0xc8
  425a10:	strh	w0, [x1, x24]
  425a14:	add	x24, x24, #0x2
  425a18:	b	425938 <ferror@plt+0x23068>
  425a1c:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  425a20:	add	x2, x2, #0xaf0
  425a24:	mov	w1, #0x6e1                 	// #1761
  425a28:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a094>
  425a2c:	add	x0, x0, #0x808
  425a30:	bl	4062a0 <ferror@plt+0x39d0>
  425a34:	mov	w0, #0x2f                  	// #47
  425a38:	add	x1, sp, #0xc8
  425a3c:	strb	w0, [x1, x24]
  425a40:	add	x24, x24, #0x1
  425a44:	b	425994 <ferror@plt+0x230c4>
  425a48:	add	x23, x19, #0x1
  425a4c:	add	x19, sp, #0x9f
  425a50:	add	x4, sp, #0xa8
  425a54:	add	x3, sp, #0xa0
  425a58:	mov	x2, #0x1                   	// #1
  425a5c:	mov	x1, x19
  425a60:	mov	x0, x22
  425a64:	bl	4252cc <ferror@plt+0x229fc>
  425a68:	add	x21, x21, #0x3
  425a6c:	cmp	x24, #0x10
  425a70:	ccmp	x19, x23, #0x4, ls  // ls = plast
  425a74:	b.ne	425a88 <ferror@plt+0x231b8>  // b.any
  425a78:	ldrb	w2, [sp, #159]
  425a7c:	mov	x1, x20
  425a80:	mov	x25, x23
  425a84:	b	425acc <ferror@plt+0x231fc>
  425a88:	add	x0, sp, #0xc8
  425a8c:	ldrb	w1, [sp, #159]
  425a90:	strb	w1, [x0, x24]
  425a94:	add	x24, x24, #0x1
  425a98:	b	425a78 <ferror@plt+0x231a8>
  425a9c:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  425aa0:	add	x2, x2, #0xaf0
  425aa4:	mov	w1, #0x6f0                 	// #1776
  425aa8:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a094>
  425aac:	add	x0, x0, #0x808
  425ab0:	bl	4062a0 <ferror@plt+0x39d0>
  425ab4:	mov	x1, x20
  425ab8:	mov	x25, x19
  425abc:	ldrb	w0, [x25], #1
  425ac0:	mov	w2, w0
  425ac4:	cmp	x24, #0x10
  425ac8:	b.ls	425b0c <ferror@plt+0x2323c>  // b.plast
  425acc:	ldr	w0, [sp, #120]
  425ad0:	cbz	w0, 425b1c <ferror@plt+0x2324c>
  425ad4:	ldr	w0, [sp, #120]
  425ad8:	cmp	w0, #0x2
  425adc:	b.eq	425cb4 <ferror@plt+0x233e4>  // b.none
  425ae0:	cmp	w2, #0x29
  425ae4:	b.eq	4257ec <ferror@plt+0x22f1c>  // b.none
  425ae8:	mov	x20, x1
  425aec:	mov	x19, x25
  425af0:	cmp	w2, #0xa
  425af4:	b.eq	425d58 <ferror@plt+0x23488>  // b.none
  425af8:	ldr	x0, [x20]
  425afc:	cmp	x0, x19
  425b00:	b.cs	425808 <ferror@plt+0x22f38>  // b.hs, b.nlast
  425b04:	add	x20, x20, #0x10
  425b08:	b	425af8 <ferror@plt+0x23228>
  425b0c:	add	x3, sp, #0xc8
  425b10:	strb	w0, [x3, x24]
  425b14:	add	x24, x24, #0x1
  425b18:	b	425acc <ferror@plt+0x231fc>
  425b1c:	ldr	w0, [sp, #136]
  425b20:	mov	w6, w0
  425b24:	cmp	x24, w0, uxtw
  425b28:	b.ls	4257d0 <ferror@plt+0x22f00>  // b.plast
  425b2c:	mov	w4, w0
  425b30:	mov	x3, #0x0                   	// #0
  425b34:	add	x2, sp, #0xc8
  425b38:	add	x7, x2, x6
  425b3c:	add	x2, sp, #0xb0
  425b40:	add	x6, x2, x6
  425b44:	mov	x2, #0x1                   	// #1
  425b48:	add	w0, w0, #0x1
  425b4c:	sub	x8, x0, #0x1
  425b50:	ldrb	w5, [x7, x3]
  425b54:	strb	w5, [x6, x3]
  425b58:	cmp	w5, #0x3f
  425b5c:	b.ls	425c10 <ferror@plt+0x23340>  // b.plast
  425b60:	sub	w0, w5, #0x41
  425b64:	and	w0, w0, #0xff
  425b68:	cmp	w0, #0x3d
  425b6c:	b.hi	425b84 <ferror@plt+0x232b4>  // b.pmore
  425b70:	lsl	x0, x2, x0
  425b74:	tst	x0, x27
  425b78:	b.eq	425b84 <ferror@plt+0x232b4>  // b.none
  425b7c:	cmp	w4, #0xf
  425b80:	b.ls	425c28 <ferror@plt+0x23358>  // b.plast
  425b84:	cmp	w5, #0x28
  425b88:	b.eq	425c8c <ferror@plt+0x233bc>  // b.none
  425b8c:	ldr	x0, [x22]
  425b90:	ldr	x0, [x0, #8]
  425b94:	sub	x25, x25, x0
  425b98:	add	w3, w25, #0x1
  425b9c:	cmp	w4, #0x10
  425ba0:	b.eq	425c4c <ferror@plt+0x2337c>  // b.none
  425ba4:	cmp	w5, #0xa
  425ba8:	b.eq	425c6c <ferror@plt+0x2339c>  // b.none
  425bac:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a094>
  425bb0:	add	x4, x4, #0xb60
  425bb4:	ldr	x0, [sp, #112]
  425bb8:	ldr	w2, [x0]
  425bbc:	mov	w1, #0x3                   	// #3
  425bc0:	mov	x0, x22
  425bc4:	bl	41cbe8 <ferror@plt+0x1a318>
  425bc8:	ldr	x1, [x22]
  425bcc:	ldr	x3, [sp, #128]
  425bd0:	sub	x0, x3, #0x1
  425bd4:	ldr	x2, [sp, #104]
  425bd8:	add	x0, x2, x0
  425bdc:	str	x0, [x1]
  425be0:	mov	w4, #0x3d                  	// #61
  425be4:	sub	w3, w3, #0x1
  425be8:	ldr	x1, [sp, #112]
  425bec:	mov	x0, x22
  425bf0:	bl	4255e4 <ferror@plt+0x22d14>
  425bf4:	ldr	x1, [sp, #160]
  425bf8:	cbz	x1, 426368 <ferror@plt+0x23a98>
  425bfc:	mov	x0, x22
  425c00:	bl	4251b4 <ferror@plt+0x228e4>
  425c04:	ldp	x25, x26, [sp, #64]
  425c08:	ldp	x27, x28, [sp, #80]
  425c0c:	b	426194 <ferror@plt+0x238c4>
  425c10:	cmp	w5, #0x20
  425c14:	b.ls	425b84 <ferror@plt+0x232b4>  // b.plast
  425c18:	lsl	x0, x2, x5
  425c1c:	tst	x0, x26
  425c20:	b.ne	425b7c <ferror@plt+0x232ac>  // b.any
  425c24:	b	425b84 <ferror@plt+0x232b4>
  425c28:	add	w4, w4, #0x1
  425c2c:	add	x3, x3, #0x1
  425c30:	add	x0, x8, x3
  425c34:	cmp	x24, x0
  425c38:	b.hi	425b50 <ferror@plt+0x23280>  // b.pmore
  425c3c:	mov	x20, x1
  425c40:	str	w4, [sp, #136]
  425c44:	mov	x19, x25
  425c48:	b	425af8 <ferror@plt+0x23228>
  425c4c:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a094>
  425c50:	add	x4, x4, #0xb00
  425c54:	ldr	x0, [sp, #112]
  425c58:	ldr	w2, [x0]
  425c5c:	mov	w1, #0x3                   	// #3
  425c60:	mov	x0, x22
  425c64:	bl	41cbe8 <ferror@plt+0x1a318>
  425c68:	b	425bc8 <ferror@plt+0x232f8>
  425c6c:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a094>
  425c70:	add	x4, x4, #0xb30
  425c74:	ldr	x0, [sp, #112]
  425c78:	ldr	w2, [x0]
  425c7c:	mov	w1, #0x3                   	// #3
  425c80:	mov	x0, x22
  425c84:	bl	41cbe8 <ferror@plt+0x1a318>
  425c88:	b	425bc8 <ferror@plt+0x232f8>
  425c8c:	add	x0, sp, #0xb0
  425c90:	mov	w2, #0x22                  	// #34
  425c94:	strb	w2, [x0, w4, uxtw]
  425c98:	mov	x20, x1
  425c9c:	str	w4, [sp, #136]
  425ca0:	mov	x19, x25
  425ca4:	mov	x24, #0x11                  	// #17
  425ca8:	mov	w0, #0x1                   	// #1
  425cac:	str	w0, [sp, #120]
  425cb0:	b	425af8 <ferror@plt+0x23228>
  425cb4:	ldr	w3, [sp, #136]
  425cb8:	ldr	w0, [sp, #124]
  425cbc:	cmp	w3, w0
  425cc0:	b.cc	425e2c <ferror@plt+0x2355c>  // b.lo, b.ul, b.last
  425cc4:	mov	w5, w0
  425cc8:	cmp	x24, w0, uxtw
  425ccc:	b.ls	4262f4 <ferror@plt+0x23a24>  // b.plast
  425cd0:	add	w3, w0, #0x1
  425cd4:	mov	x0, x3
  425cd8:	sub	x5, x5, x3
  425cdc:	add	x3, sp, #0xc8
  425ce0:	add	x6, x3, x5
  425ce4:	add	x3, sp, #0xb0
  425ce8:	add	x5, x3, x5
  425cec:	mov	w7, w0
  425cf0:	sub	w3, w0, #0x1
  425cf4:	str	w3, [sp, #124]
  425cf8:	ldrb	w4, [x6, x0]
  425cfc:	ldrb	w3, [x5, x0]
  425d00:	cmp	w4, w3
  425d04:	b.ne	425d28 <ferror@plt+0x23458>  // b.any
  425d08:	ldr	w3, [sp, #136]
  425d0c:	cmp	w3, w0
  425d10:	b.cc	425e2c <ferror@plt+0x2355c>  // b.lo, b.ul, b.last
  425d14:	add	x3, x0, #0x1
  425d18:	cmp	x24, x0
  425d1c:	b.ls	4262f8 <ferror@plt+0x23a28>  // b.plast
  425d20:	mov	x0, x3
  425d24:	b	425cec <ferror@plt+0x2341c>
  425d28:	ldr	w0, [sp, #136]
  425d2c:	ldr	w3, [sp, #124]
  425d30:	cmp	w0, w3
  425d34:	b.cc	425e2c <ferror@plt+0x2355c>  // b.lo, b.ul, b.last
  425d38:	ldr	w3, [sp, #124]
  425d3c:	mov	w0, w3
  425d40:	cmp	x24, w3, uxtw
  425d44:	b.eq	4257dc <ferror@plt+0x22f0c>  // b.none
  425d48:	mov	x24, #0x11                  	// #17
  425d4c:	mov	w0, #0x1                   	// #1
  425d50:	str	w0, [sp, #120]
  425d54:	b	425ae0 <ferror@plt+0x23210>
  425d58:	ldrb	w0, [x22, #16]
  425d5c:	cbnz	w0, 425e00 <ferror@plt+0x23530>
  425d60:	ldrb	w0, [x22, #25]
  425d64:	cbz	w0, 425d7c <ferror@plt+0x234ac>
  425d68:	ldr	x0, [x22]
  425d6c:	ldr	x1, [x0, #16]
  425d70:	ldr	x0, [x0, #32]
  425d74:	cmp	x1, x0
  425d78:	b.cs	425e00 <ferror@plt+0x23530>  // b.hs, b.nlast
  425d7c:	sub	x19, x25, x23
  425d80:	add	x4, sp, #0xa8
  425d84:	add	x3, sp, #0xa0
  425d88:	mov	x2, x19
  425d8c:	mov	x1, x23
  425d90:	mov	x0, x22
  425d94:	bl	4252cc <ferror@plt+0x229fc>
  425d98:	add	x21, x21, x19
  425d9c:	ldr	x0, [x22]
  425da0:	ldr	x1, [x0]
  425da4:	ldr	x0, [x0, #32]
  425da8:	cmp	x1, x0
  425dac:	b.cc	425ee0 <ferror@plt+0x23610>  // b.lo, b.ul, b.last
  425db0:	ldr	x0, [x22]
  425db4:	mov	w1, #0x1                   	// #1
  425db8:	strb	w1, [x0, #104]
  425dbc:	ldr	x0, [x22]
  425dc0:	sub	x25, x25, #0x1
  425dc4:	str	x25, [x0]
  425dc8:	mov	w1, #0x0                   	// #0
  425dcc:	mov	x0, x22
  425dd0:	bl	423edc <ferror@plt+0x2160c>
  425dd4:	mov	x0, x22
  425dd8:	bl	4245f4 <ferror@plt+0x21d24>
  425ddc:	and	w0, w0, #0xff
  425de0:	cbz	w0, 425f2c <ferror@plt+0x2365c>
  425de4:	ldr	x0, [x22]
  425de8:	ldr	x23, [x0]
  425dec:	ldr	w20, [x0, #56]
  425df0:	ldr	x0, [x0, #48]
  425df4:	add	x20, x0, x20, lsl #4
  425df8:	mov	x19, x23
  425dfc:	b	425af8 <ferror@plt+0x23228>
  425e00:	sub	x25, x25, #0x1
  425e04:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a094>
  425e08:	add	x4, x4, #0xb90
  425e0c:	mov	w3, #0x0                   	// #0
  425e10:	ldr	x0, [sp, #112]
  425e14:	ldr	w2, [x0]
  425e18:	mov	w1, #0x3                   	// #3
  425e1c:	mov	x0, x22
  425e20:	bl	41cbe8 <ferror@plt+0x1a318>
  425e24:	mov	w0, #0x3d                  	// #61
  425e28:	str	w0, [sp, #140]
  425e2c:	ldrb	w0, [x22, #1161]
  425e30:	cbnz	w0, 425f88 <ferror@plt+0x236b8>
  425e34:	ldr	x0, [x22]
  425e38:	str	x25, [x0]
  425e3c:	ldr	x0, [sp, #160]
  425e40:	cbz	x0, 426050 <ferror@plt+0x23780>
  425e44:	sub	x25, x25, x23
  425e48:	add	x1, x21, #0x1
  425e4c:	add	x1, x1, x25
  425e50:	mov	x0, x22
  425e54:	bl	42542c <ferror@plt+0x22b5c>
  425e58:	mov	x19, x0
  425e5c:	ldr	x0, [sp, #112]
  425e60:	ldrb	w1, [sp, #140]
  425e64:	strb	w1, [x0, #4]
  425e68:	add	w21, w25, w21
  425e6c:	str	w21, [x0, #8]
  425e70:	str	x19, [x0, #16]
  425e74:	ldr	x0, [sp, #160]
  425e78:	str	x0, [sp, #168]
  425e7c:	cbz	x0, 425eb4 <ferror@plt+0x235e4>
  425e80:	ldr	x1, [x0, #8]
  425e84:	ldr	x2, [x0, #16]
  425e88:	sub	x2, x2, x1
  425e8c:	mov	x0, x19
  425e90:	bl	402260 <memcpy@plt>
  425e94:	ldr	x0, [sp, #168]
  425e98:	ldr	x1, [x0, #16]
  425e9c:	ldr	x2, [x0, #8]
  425ea0:	sub	x1, x1, x2
  425ea4:	add	x19, x19, x1
  425ea8:	ldr	x0, [x0]
  425eac:	str	x0, [sp, #168]
  425eb0:	cbnz	x0, 425e80 <ferror@plt+0x235b0>
  425eb4:	ldr	x1, [sp, #160]
  425eb8:	mov	x0, x22
  425ebc:	bl	4251b4 <ferror@plt+0x228e4>
  425ec0:	mov	x2, x25
  425ec4:	mov	x1, x23
  425ec8:	mov	x0, x19
  425ecc:	bl	402260 <memcpy@plt>
  425ed0:	strb	wzr, [x19, x25]
  425ed4:	ldp	x25, x26, [sp, #64]
  425ed8:	ldp	x27, x28, [sp, #80]
  425edc:	b	426194 <ferror@plt+0x238c4>
  425ee0:	ldr	x0, [x22, #40]
  425ee4:	ldr	w1, [x0, #12]
  425ee8:	sub	w1, w1, #0x1
  425eec:	sbfiz	x2, x1, #1, #32
  425ef0:	add	x1, x2, w1, sxtw
  425ef4:	lsl	x1, x1, #3
  425ef8:	ldr	x4, [x0]
  425efc:	add	x3, x4, x1
  425f00:	ldr	w2, [x0, #60]
  425f04:	ldr	w1, [x4, x1]
  425f08:	sub	w1, w2, w1
  425f0c:	ldrb	w2, [x3, #6]
  425f10:	lsr	w1, w1, w2
  425f14:	ldr	w3, [x3, #16]
  425f18:	add	w3, w3, #0x1
  425f1c:	mov	w2, #0x0                   	// #0
  425f20:	add	w1, w1, w3
  425f24:	bl	4287b4 <ferror@plt+0x25ee4>
  425f28:	b	425db0 <ferror@plt+0x234e0>
  425f2c:	ldr	x1, [sp, #112]
  425f30:	ldr	w19, [x1]
  425f34:	mov	w0, #0x16                  	// #22
  425f38:	strb	w0, [x1, #4]
  425f3c:	ldr	x0, [x22, #40]
  425f40:	ldr	w0, [x0, #60]
  425f44:	str	w0, [x1]
  425f48:	mov	w0, #0x40                  	// #64
  425f4c:	strh	w0, [x1, #6]
  425f50:	ldr	x1, [sp, #160]
  425f54:	cbz	x1, 425f60 <ferror@plt+0x23690>
  425f58:	mov	x0, x22
  425f5c:	bl	4251b4 <ferror@plt+0x228e4>
  425f60:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a094>
  425f64:	add	x4, x4, #0xb90
  425f68:	mov	w3, #0x0                   	// #0
  425f6c:	mov	w2, w19
  425f70:	mov	w1, #0x3                   	// #3
  425f74:	mov	x0, x22
  425f78:	bl	41cbe8 <ferror@plt+0x1a318>
  425f7c:	ldp	x25, x26, [sp, #64]
  425f80:	ldp	x27, x28, [sp, #80]
  425f84:	b	426194 <ferror@plt+0x238c4>
  425f88:	ldrb	w0, [x25]
  425f8c:	cmp	w0, #0x5f
  425f90:	b.ne	425fa0 <ferror@plt+0x236d0>  // b.any
  425f94:	ldrb	w0, [x25, #1]
  425f98:	cmp	w0, #0x5f
  425f9c:	b.ne	425fe8 <ferror@plt+0x23718>  // b.any
  425fa0:	mov	x1, x25
  425fa4:	mov	x0, x22
  425fa8:	bl	4235b0 <ferror@plt+0x20ce0>
  425fac:	and	w0, w0, #0xff
  425fb0:	cbz	w0, 425fe8 <ferror@plt+0x23718>
  425fb4:	ldrb	w0, [x22, #1162]
  425fb8:	cbz	w0, 425e34 <ferror@plt+0x23564>
  425fbc:	ldrb	w0, [x22, #18]
  425fc0:	cbnz	w0, 425e34 <ferror@plt+0x23564>
  425fc4:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a094>
  425fc8:	add	x4, x4, #0xba8
  425fcc:	mov	w3, #0x0                   	// #0
  425fd0:	ldr	x0, [sp, #112]
  425fd4:	ldr	w2, [x0]
  425fd8:	mov	w1, #0x13                  	// #19
  425fdc:	mov	x0, x22
  425fe0:	bl	41cc60 <ferror@plt+0x1a390>
  425fe4:	b	425e34 <ferror@plt+0x23564>
  425fe8:	ldrb	w1, [x25]
  425fec:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1f094>
  425ff0:	add	x0, x0, #0xa68
  425ff4:	ldrh	w0, [x0, x1, lsl #1]
  425ff8:	tbz	w0, #9, 425e34 <ferror@plt+0x23564>
  425ffc:	ldr	w0, [sp, #140]
  426000:	bl	41e218 <ferror@plt+0x1b948>
  426004:	str	w0, [sp, #140]
  426008:	add	x0, x25, #0x1
  42600c:	ldrb	w2, [x25, #1]
  426010:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1f094>
  426014:	add	x1, x1, #0xa68
  426018:	ldrh	w1, [x1, x2, lsl #1]
  42601c:	mov	w2, #0x204                 	// #516
  426020:	tst	w2, w1
  426024:	b.eq	426048 <ferror@plt+0x23778>  // b.none
  426028:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1f094>
  42602c:	add	x1, x1, #0xa68
  426030:	ldrb	w3, [x0, #1]!
  426034:	ldrh	w3, [x1, x3, lsl #1]
  426038:	tst	w2, w3
  42603c:	b.ne	426030 <ferror@plt+0x23760>  // b.any
  426040:	mov	x25, x0
  426044:	b	425e34 <ferror@plt+0x23564>
  426048:	mov	x25, x0
  42604c:	b	425e34 <ferror@plt+0x23564>
  426050:	ldr	w4, [sp, #140]
  426054:	sub	w3, w25, w23
  426058:	mov	x2, x23
  42605c:	ldr	x1, [sp, #112]
  426060:	mov	x0, x22
  426064:	bl	4255e4 <ferror@plt+0x22d14>
  426068:	ldp	x25, x26, [sp, #64]
  42606c:	ldp	x27, x28, [sp, #80]
  426070:	b	426194 <ferror@plt+0x238c4>
  426074:	mov	w23, #0x3f                  	// #63
  426078:	cmp	w0, #0x4c
  42607c:	b.eq	4256a0 <ferror@plt+0x22dd0>  // b.none
  426080:	mov	w23, #0x41                  	// #65
  426084:	cmp	w0, #0x55
  426088:	b.eq	4256a0 <ferror@plt+0x22dd0>  // b.none
  42608c:	mov	w23, #0x3e                  	// #62
  426090:	cmp	w0, #0x75
  426094:	b.ne	4256a0 <ferror@plt+0x22dd0>  // b.any
  426098:	b	425718 <ferror@plt+0x22e48>
  42609c:	mov	w23, #0x39                  	// #57
  4260a0:	cmp	w0, #0x4c
  4260a4:	b.eq	4256a0 <ferror@plt+0x22dd0>  // b.none
  4260a8:	mov	w23, #0x3b                  	// #59
  4260ac:	cmp	w0, #0x55
  4260b0:	b.eq	4256a0 <ferror@plt+0x22dd0>  // b.none
  4260b4:	mov	w23, #0x38                  	// #56
  4260b8:	cmp	w0, #0x75
  4260bc:	b.ne	4256a0 <ferror@plt+0x22dd0>  // b.any
  4260c0:	ldr	x0, [sp, #104]
  4260c4:	ldrb	w0, [x0, #1]
  4260c8:	cmp	w0, w23
  4260cc:	mov	w23, #0x3c                  	// #60
  4260d0:	mov	w0, #0x3a                  	// #58
  4260d4:	csel	w23, w23, w0, eq  // eq = none
  4260d8:	b	4256a0 <ferror@plt+0x22dd0>
  4260dc:	ldrb	w1, [x22, #19]
  4260e0:	cbnz	w1, 4260f4 <ferror@plt+0x23824>
  4260e4:	ldrb	w1, [x19, #1]
  4260e8:	add	x19, x19, #0x2
  4260ec:	cmp	w1, #0xa
  4260f0:	csel	x20, x19, x20, ne  // ne = any
  4260f4:	mov	x19, x20
  4260f8:	mov	x20, x19
  4260fc:	ldrb	w1, [x20], #1
  426100:	cmp	w1, #0x5c
  426104:	b.eq	4260dc <ferror@plt+0x2380c>  // b.none
  426108:	cmp	w1, w21
  42610c:	b.eq	426158 <ferror@plt+0x23888>  // b.none
  426110:	cmp	w1, #0xa
  426114:	b.eq	426124 <ferror@plt+0x23854>  // b.none
  426118:	cmp	w1, #0x0
  42611c:	csel	w2, w2, w0, ne  // ne = any
  426120:	b	4260f4 <ferror@plt+0x23824>
  426124:	cmp	w21, #0x3e
  426128:	b.eq	426148 <ferror@plt+0x23878>  // b.none
  42612c:	cbnz	w2, 426340 <ferror@plt+0x23a70>
  426130:	ldr	w0, [x22, #1116]
  426134:	cmp	w0, #0x15
  426138:	b.ne	4261c0 <ferror@plt+0x238f0>  // b.any
  42613c:	mov	x20, x19
  426140:	mov	w23, #0x3d                  	// #61
  426144:	b	426164 <ferror@plt+0x23894>
  426148:	mov	w0, #0x3                   	// #3
  42614c:	ldr	x1, [sp, #112]
  426150:	strb	w0, [x1, #4]
  426154:	b	426194 <ferror@plt+0x238c4>
  426158:	cbnz	w2, 4261a8 <ferror@plt+0x238d8>
  42615c:	cmp	w23, #0x3d
  426160:	b.eq	4261b8 <ferror@plt+0x238e8>  // b.none
  426164:	ldrb	w0, [x22, #1161]
  426168:	cbnz	w0, 4261e4 <ferror@plt+0x23914>
  42616c:	ldrb	w0, [x22, #1199]
  426170:	cbnz	w0, 4262ac <ferror@plt+0x239dc>
  426174:	ldr	x0, [x22]
  426178:	str	x20, [x0]
  42617c:	mov	w4, w23
  426180:	ldr	x2, [sp, #104]
  426184:	sub	w3, w20, w2
  426188:	ldr	x1, [sp, #112]
  42618c:	mov	x0, x22
  426190:	bl	4255e4 <ferror@plt+0x22d14>
  426194:	ldp	x19, x20, [sp, #16]
  426198:	ldp	x21, x22, [sp, #32]
  42619c:	ldp	x23, x24, [sp, #48]
  4261a0:	ldp	x29, x30, [sp], #224
  4261a4:	ret
  4261a8:	ldrb	w0, [x22, #18]
  4261ac:	mov	x19, x20
  4261b0:	cbnz	w0, 42615c <ferror@plt+0x2388c>
  4261b4:	b	42634c <ferror@plt+0x23a7c>
  4261b8:	mov	x19, x20
  4261bc:	b	426130 <ferror@plt+0x23860>
  4261c0:	mov	w3, w21
  4261c4:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  4261c8:	add	x2, x2, #0xc28
  4261cc:	mov	w1, #0x2                   	// #2
  4261d0:	mov	x0, x22
  4261d4:	bl	41c9fc <ferror@plt+0x1a12c>
  4261d8:	mov	x20, x19
  4261dc:	mov	w23, #0x3d                  	// #61
  4261e0:	b	426164 <ferror@plt+0x23894>
  4261e4:	ldrb	w0, [x20]
  4261e8:	cmp	w0, #0x5f
  4261ec:	b.ne	4261fc <ferror@plt+0x2392c>  // b.any
  4261f0:	ldrb	w0, [x20, #1]
  4261f4:	cmp	w0, #0x5f
  4261f8:	b.ne	426244 <ferror@plt+0x23974>  // b.any
  4261fc:	mov	x1, x20
  426200:	mov	x0, x22
  426204:	bl	4235b0 <ferror@plt+0x20ce0>
  426208:	and	w0, w0, #0xff
  42620c:	cbz	w0, 426244 <ferror@plt+0x23974>
  426210:	ldrb	w0, [x22, #1162]
  426214:	cbz	w0, 426174 <ferror@plt+0x238a4>
  426218:	ldrb	w0, [x22, #18]
  42621c:	cbnz	w0, 426174 <ferror@plt+0x238a4>
  426220:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a094>
  426224:	add	x4, x4, #0xba8
  426228:	mov	w3, #0x0                   	// #0
  42622c:	ldr	x0, [sp, #112]
  426230:	ldr	w2, [x0]
  426234:	mov	w1, #0x13                  	// #19
  426238:	mov	x0, x22
  42623c:	bl	41cc60 <ferror@plt+0x1a390>
  426240:	b	426174 <ferror@plt+0x238a4>
  426244:	ldrb	w1, [x20]
  426248:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1f094>
  42624c:	add	x0, x0, #0xa68
  426250:	ldrh	w0, [x0, x1, lsl #1]
  426254:	tbz	w0, #9, 426174 <ferror@plt+0x238a4>
  426258:	mov	w0, w23
  42625c:	bl	41e2b8 <ferror@plt+0x1b9e8>
  426260:	bl	41e218 <ferror@plt+0x1b948>
  426264:	mov	w23, w0
  426268:	add	x0, x20, #0x1
  42626c:	ldrb	w2, [x20, #1]
  426270:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1f094>
  426274:	add	x1, x1, #0xa68
  426278:	ldrh	w1, [x1, x2, lsl #1]
  42627c:	mov	w2, #0x204                 	// #516
  426280:	tst	w2, w1
  426284:	b.eq	4262ec <ferror@plt+0x23a1c>  // b.none
  426288:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1f094>
  42628c:	add	x2, x2, #0xa68
  426290:	mov	w3, #0x204                 	// #516
  426294:	ldrb	w1, [x0, #1]!
  426298:	ldrh	w1, [x2, x1, lsl #1]
  42629c:	tst	w3, w1
  4262a0:	b.ne	426294 <ferror@plt+0x239c4>  // b.any
  4262a4:	mov	x20, x0
  4262a8:	b	426174 <ferror@plt+0x238a4>
  4262ac:	mov	x1, x20
  4262b0:	mov	x0, x22
  4262b4:	bl	4235b0 <ferror@plt+0x20ce0>
  4262b8:	and	w0, w0, #0xff
  4262bc:	cbz	w0, 426174 <ferror@plt+0x238a4>
  4262c0:	ldrb	w0, [x22, #18]
  4262c4:	cbnz	w0, 426174 <ferror@plt+0x238a4>
  4262c8:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a094>
  4262cc:	add	x4, x4, #0xc50
  4262d0:	mov	w3, #0x0                   	// #0
  4262d4:	ldr	x0, [sp, #112]
  4262d8:	ldr	w2, [x0]
  4262dc:	mov	w1, #0x17                  	// #23
  4262e0:	mov	x0, x22
  4262e4:	bl	41cc60 <ferror@plt+0x1a390>
  4262e8:	b	426174 <ferror@plt+0x238a4>
  4262ec:	mov	x20, x0
  4262f0:	b	426174 <ferror@plt+0x238a4>
  4262f4:	ldr	w7, [sp, #124]
  4262f8:	str	w7, [sp, #124]
  4262fc:	b	425d38 <ferror@plt+0x23468>
  426300:	stp	x25, x26, [sp, #64]
  426304:	stp	x27, x28, [sp, #80]
  426308:	str	xzr, [sp, #160]
  42630c:	str	xzr, [sp, #168]
  426310:	ldr	x0, [x22]
  426314:	ldr	w20, [x0, #56]
  426318:	ldr	x0, [x0, #48]
  42631c:	add	x20, x0, x20, lsl #4
  426320:	ldr	x0, [sp, #104]
  426324:	ldrb	w0, [x0, #1]
  426328:	cmp	w0, #0x38
  42632c:	mov	w1, #0x42                  	// #66
  426330:	mov	w0, #0x40                  	// #64
  426334:	csel	w0, w1, w0, eq  // eq = none
  426338:	str	w0, [sp, #140]
  42633c:	b	425774 <ferror@plt+0x22ea4>
  426340:	ldrb	w0, [x22, #18]
  426344:	cbnz	w0, 426130 <ferror@plt+0x23860>
  426348:	mov	w23, #0x3d                  	// #61
  42634c:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  426350:	add	x2, x2, #0xc00
  426354:	mov	w1, #0x0                   	// #0
  426358:	mov	x0, x22
  42635c:	bl	41c9fc <ferror@plt+0x1a12c>
  426360:	mov	x20, x19
  426364:	b	42615c <ferror@plt+0x2388c>
  426368:	ldp	x25, x26, [sp, #64]
  42636c:	ldp	x27, x28, [sp, #80]
  426370:	b	426194 <ferror@plt+0x238c4>
  426374:	stp	x29, x30, [sp, #-144]!
  426378:	mov	x29, sp
  42637c:	stp	x19, x20, [sp, #16]
  426380:	stp	x21, x22, [sp, #32]
  426384:	stp	x23, x24, [sp, #48]
  426388:	stp	x25, x26, [sp, #64]
  42638c:	mov	x19, x0
  426390:	ldr	x20, [x0, #448]
  426394:	add	x0, x20, #0x18
  426398:	str	x0, [x19, #448]
  42639c:	mov	w25, #0x0                   	// #0
  4263a0:	adrp	x23, 461000 <_obstack_memory_used@@Base+0x1a094>
  4263a4:	add	x23, x23, #0xc98
  4263a8:	strh	wzr, [x20, #6]
  4263ac:	ldr	x21, [x19]
  4263b0:	ldrb	w0, [x21, #104]
  4263b4:	cbz	w0, 426414 <ferror@plt+0x23b44>
  4263b8:	ldrb	w0, [x19, #32]
  4263bc:	cbnz	w0, 426488 <ferror@plt+0x23bb8>
  4263c0:	mov	x0, x19
  4263c4:	bl	4245f4 <ferror@plt+0x21d24>
  4263c8:	and	w0, w0, #0xff
  4263cc:	cbz	w0, 4264ac <ferror@plt+0x23bdc>
  4263d0:	ldr	x0, [x19]
  4263d4:	cmp	x0, x21
  4263d8:	csel	w25, w25, wzr, eq  // eq = none
  4263dc:	ldr	w0, [x19, #500]
  4263e0:	cbnz	w0, 4263f8 <ferror@plt+0x23b28>
  4263e4:	add	x0, x19, #0x1c8
  4263e8:	str	x0, [x19, #488]
  4263ec:	ldr	x20, [x19, #472]
  4263f0:	add	x0, x20, #0x18
  4263f4:	str	x0, [x19, #448]
  4263f8:	mov	w1, #0x40                  	// #64
  4263fc:	strh	w1, [x20, #6]
  426400:	ldrb	w0, [x19, #25]
  426404:	cmp	w0, #0x2
  426408:	mov	w0, #0x41                  	// #65
  42640c:	csel	w0, w0, w1, eq  // eq = none
  426410:	strh	w0, [x20, #6]
  426414:	ldr	x21, [x19]
  426418:	adrp	x22, 462000 <_obstack_memory_used@@Base+0x1b094>
  42641c:	add	x22, x22, #0x1d0
  426420:	ldr	x0, [x19, #40]
  426424:	ldr	w0, [x0, #60]
  426428:	str	w0, [x20]
  42642c:	ldr	w0, [x21, #56]
  426430:	ldr	x2, [x21, #48]
  426434:	lsl	x0, x0, #4
  426438:	ldr	x1, [x21]
  42643c:	ldr	x0, [x2, x0]
  426440:	cmp	x1, x0
  426444:	b.cc	426450 <ferror@plt+0x23b80>  // b.lo, b.ul, b.last
  426448:	ldr	x0, [x19, #8]
  42644c:	cbz	x0, 4264d4 <ferror@plt+0x23c04>
  426450:	ldr	x0, [x21]
  426454:	add	x1, x0, #0x1
  426458:	str	x1, [x21]
  42645c:	ldrb	w26, [x0]
  426460:	mov	w24, w26
  426464:	ldr	w0, [x19, #1408]
  426468:	cbz	w0, 4264f0 <ferror@plt+0x23c20>
  42646c:	str	w0, [x20]
  426470:	cmp	w26, #0x7e
  426474:	b.hi	427a80 <ferror@plt+0x251b0>  // b.pmore
  426478:	ldrh	w0, [x22, w26, uxtw #1]
  42647c:	adr	x1, 426488 <ferror@plt+0x23bb8>
  426480:	add	x0, x1, w0, sxth #2
  426484:	br	x0
  426488:	mov	w0, #0x52                  	// #82
  42648c:	strb	w0, [x20, #4]
  426490:	strb	wzr, [x19, #32]
  426494:	ldrb	w0, [x19, #33]
  426498:	cbnz	w0, 4279b0 <ferror@plt+0x250e0>
  42649c:	ldrb	w0, [x19, #24]
  4264a0:	sub	w0, w0, #0x1
  4264a4:	strb	w0, [x19, #24]
  4264a8:	b	4279b0 <ferror@plt+0x250e0>
  4264ac:	mov	w0, #0x16                  	// #22
  4264b0:	strb	w0, [x20, #4]
  4264b4:	ldrb	w0, [x19, #16]
  4264b8:	cbnz	w0, 4279b0 <ferror@plt+0x250e0>
  4264bc:	ldr	x0, [x19, #40]
  4264c0:	ldr	w0, [x0, #60]
  4264c4:	str	w0, [x20]
  4264c8:	mov	w0, #0x40                  	// #64
  4264cc:	strh	w0, [x20, #6]
  4264d0:	b	4279b0 <ferror@plt+0x250e0>
  4264d4:	mov	w1, #0x0                   	// #0
  4264d8:	mov	x0, x19
  4264dc:	bl	423edc <ferror@plt+0x2160c>
  4264e0:	ldr	x0, [x19, #40]
  4264e4:	ldr	w0, [x0, #60]
  4264e8:	str	w0, [x20]
  4264ec:	b	426450 <ferror@plt+0x23b80>
  4264f0:	ldr	x0, [x21, #8]
  4264f4:	sub	w1, w1, w0
  4264f8:	ldr	x0, [x19, #40]
  4264fc:	bl	4289e0 <ferror@plt+0x26110>
  426500:	str	w0, [x20]
  426504:	b	426470 <ferror@plt+0x23ba0>
  426508:	stp	x27, x28, [sp, #80]
  42650c:	ldrh	w0, [x20, #6]
  426510:	orr	w0, w0, #0x1
  426514:	strh	w0, [x20, #6]
  426518:	ldr	x26, [x19]
  42651c:	mov	w28, #0x0                   	// #0
  426520:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a094>
  426524:	add	x0, x0, #0xc88
  426528:	str	x0, [sp, #104]
  42652c:	adrp	x27, 466000 <_obstack_memory_used@@Base+0x1f094>
  426530:	add	x27, x27, #0xa68
  426534:	b	426558 <ferror@plt+0x23c88>
  426538:	mov	w28, #0x1                   	// #1
  42653c:	ldr	x0, [x26]
  426540:	add	x1, x0, #0x1
  426544:	str	x1, [x26]
  426548:	ldrb	w24, [x0]
  42654c:	mov	w0, w24
  426550:	ldrh	w0, [x27, x0, lsl #1]
  426554:	tbz	w0, #11, 4265b0 <ferror@plt+0x23ce0>
  426558:	cmp	w24, #0x20
  42655c:	ccmp	w24, #0x9, #0x4, ne  // ne = any
  426560:	b.eq	42653c <ferror@plt+0x23c6c>  // b.none
  426564:	cbz	w24, 426538 <ferror@plt+0x23c68>
  426568:	ldrb	w0, [x19, #16]
  42656c:	cbz	w0, 42653c <ferror@plt+0x23c6c>
  426570:	ldrb	w0, [x19, #1154]
  426574:	cbz	w0, 42653c <ferror@plt+0x23c6c>
  426578:	ldr	x0, [x19, #40]
  42657c:	ldr	x3, [x26]
  426580:	ldr	x1, [x26, #8]
  426584:	cmp	w24, #0xc
  426588:	ldr	x2, [sp, #104]
  42658c:	csel	x5, x2, x23, eq  // eq = none
  426590:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a094>
  426594:	add	x4, x4, #0xcc8
  426598:	sub	w3, w3, w1
  42659c:	ldr	w2, [x0, #60]
  4265a0:	mov	w1, #0x2                   	// #2
  4265a4:	mov	x0, x19
  4265a8:	bl	41cbe8 <ferror@plt+0x1a318>
  4265ac:	b	42653c <ferror@plt+0x23c6c>
  4265b0:	cbnz	w28, 4265c8 <ferror@plt+0x23cf8>
  4265b4:	ldr	x0, [x26]
  4265b8:	sub	x0, x0, #0x1
  4265bc:	str	x0, [x26]
  4265c0:	ldp	x27, x28, [sp, #80]
  4265c4:	b	42642c <ferror@plt+0x23b5c>
  4265c8:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  4265cc:	add	x2, x2, #0xce8
  4265d0:	mov	w1, #0x0                   	// #0
  4265d4:	mov	x0, x19
  4265d8:	bl	41c9fc <ferror@plt+0x1a12c>
  4265dc:	b	4265b4 <ferror@plt+0x23ce4>
  4265e0:	ldr	x1, [x21]
  4265e4:	ldr	x0, [x21, #32]
  4265e8:	cmp	x1, x0
  4265ec:	b.cc	4265fc <ferror@plt+0x23d2c>  // b.lo, b.ul, b.last
  4265f0:	mov	w0, #0x1                   	// #1
  4265f4:	strb	w0, [x21, #104]
  4265f8:	b	4263a8 <ferror@plt+0x23ad8>
  4265fc:	ldr	x0, [x19, #40]
  426600:	ldr	w1, [x0, #12]
  426604:	sub	w1, w1, #0x1
  426608:	sbfiz	x2, x1, #1, #32
  42660c:	add	x1, x2, w1, sxtw
  426610:	lsl	x1, x1, #3
  426614:	ldr	x4, [x0]
  426618:	add	x3, x4, x1
  42661c:	ldr	w2, [x0, #60]
  426620:	ldr	w1, [x4, x1]
  426624:	sub	w1, w2, w1
  426628:	ldrb	w2, [x3, #6]
  42662c:	lsr	w1, w1, w2
  426630:	ldr	w3, [x3, #16]
  426634:	add	w3, w3, #0x1
  426638:	mov	w2, #0x0                   	// #0
  42663c:	add	w1, w1, w3
  426640:	bl	4287b4 <ferror@plt+0x25ee4>
  426644:	b	4265f0 <ferror@plt+0x23d20>
  426648:	str	wzr, [sp, #128]
  42664c:	strb	wzr, [sp, #132]
  426650:	str	wzr, [sp, #136]
  426654:	mov	w0, #0x37                  	// #55
  426658:	strb	w0, [x20, #4]
  42665c:	add	x2, sp, #0x80
  426660:	add	x1, x20, #0x8
  426664:	mov	x0, x19
  426668:	bl	425490 <ferror@plt+0x22bc0>
  42666c:	add	x2, sp, #0x80
  426670:	mov	x1, x20
  426674:	mov	x0, x19
  426678:	bl	42489c <ferror@plt+0x21fcc>
  42667c:	b	427a9c <ferror@plt+0x251cc>
  426680:	cmp	w24, #0x4c
  426684:	b.eq	4266a0 <ferror@plt+0x23dd0>  // b.none
  426688:	ldrb	w0, [x19, #1130]
  42668c:	cbnz	w0, 4266a0 <ferror@plt+0x23dd0>
  426690:	cmp	w24, #0x52
  426694:	b.eq	4266e0 <ferror@plt+0x23e10>  // b.none
  426698:	ldrb	w0, [x19, #1128]
  42669c:	cbz	w0, 4266e0 <ferror@plt+0x23e10>
  4266a0:	ldr	x2, [x21]
  4266a4:	ldrb	w0, [x2]
  4266a8:	cmp	w24, #0x52
  4266ac:	cset	w1, ne  // ne = any
  4266b0:	cmp	w0, #0x27
  4266b4:	ccmp	w1, #0x0, #0x4, eq  // eq = none
  4266b8:	b.ne	426770 <ferror@plt+0x23ea0>  // b.any
  4266bc:	cmp	w0, #0x22
  4266c0:	b.eq	426770 <ferror@plt+0x23ea0>  // b.none
  4266c4:	cmp	w0, #0x52
  4266c8:	ccmp	w1, #0x0, #0x4, eq  // eq = none
  4266cc:	b.ne	42675c <ferror@plt+0x23e8c>  // b.any
  4266d0:	cmp	w24, #0x75
  4266d4:	mov	w1, #0x38                  	// #56
  4266d8:	ccmp	w0, w1, #0x0, eq  // eq = none
  4266dc:	b.eq	426784 <ferror@plt+0x23eb4>  // b.none
  4266e0:	mov	w0, #0x35                  	// #53
  4266e4:	strb	w0, [x20, #4]
  4266e8:	str	wzr, [sp, #128]
  4266ec:	strb	wzr, [sp, #132]
  4266f0:	str	wzr, [sp, #136]
  4266f4:	ldr	x1, [x21]
  4266f8:	add	x4, x20, #0x10
  4266fc:	add	x3, sp, #0x80
  426700:	mov	w2, #0x0                   	// #0
  426704:	sub	x1, x1, #0x1
  426708:	mov	x0, x19
  42670c:	bl	4237a4 <ferror@plt+0x20ed4>
  426710:	str	x0, [x20, #8]
  426714:	add	x2, sp, #0x80
  426718:	mov	x1, x20
  42671c:	mov	x0, x19
  426720:	bl	42489c <ferror@plt+0x21fcc>
  426724:	ldr	x0, [x20, #8]
  426728:	ldrh	w1, [x0, #18]
  42672c:	tbz	w1, #2, 426748 <ferror@plt+0x23e78>
  426730:	ldrh	w1, [x20, #6]
  426734:	orr	w1, w1, #0x10
  426738:	strh	w1, [x20, #6]
  42673c:	ldrb	w0, [x0, #16]
  426740:	ubfx	x0, x0, #1, #7
  426744:	strb	w0, [x20, #4]
  426748:	cbz	w25, 427a9c <ferror@plt+0x251cc>
  42674c:	ldrh	w0, [x20, #6]
  426750:	orr	w0, w0, #0x20
  426754:	strh	w0, [x20, #6]
  426758:	b	427a9c <ferror@plt+0x251cc>
  42675c:	ldrb	w0, [x2, #1]
  426760:	cmp	w0, #0x22
  426764:	b.ne	4266e0 <ferror@plt+0x23e10>  // b.any
  426768:	ldrb	w0, [x19, #1130]
  42676c:	cbz	w0, 4266e0 <ferror@plt+0x23e10>
  426770:	sub	x2, x2, #0x1
  426774:	mov	x1, x20
  426778:	mov	x0, x19
  42677c:	bl	425644 <ferror@plt+0x22d74>
  426780:	b	427a9c <ferror@plt+0x251cc>
  426784:	ldrb	w0, [x2, #1]
  426788:	cmp	w0, #0x22
  42678c:	b.eq	426770 <ferror@plt+0x23ea0>  // b.none
  426790:	cmp	w0, #0x27
  426794:	b.eq	4267b8 <ferror@plt+0x23ee8>  // b.none
  426798:	cmp	w0, #0x52
  42679c:	b.ne	4266e0 <ferror@plt+0x23e10>  // b.any
  4267a0:	ldrb	w0, [x2, #2]
  4267a4:	cmp	w0, #0x22
  4267a8:	b.ne	4266e0 <ferror@plt+0x23e10>  // b.any
  4267ac:	ldrb	w0, [x19, #1130]
  4267b0:	cbz	w0, 4266e0 <ferror@plt+0x23e10>
  4267b4:	b	426770 <ferror@plt+0x23ea0>
  4267b8:	ldrb	w0, [x19, #1129]
  4267bc:	cbnz	w0, 426770 <ferror@plt+0x23ea0>
  4267c0:	b	4266e0 <ferror@plt+0x23e10>
  4267c4:	ldr	x2, [x21]
  4267c8:	sub	x2, x2, #0x1
  4267cc:	mov	x1, x20
  4267d0:	mov	x0, x19
  4267d4:	bl	425644 <ferror@plt+0x22d74>
  4267d8:	b	427a9c <ferror@plt+0x251cc>
  4267dc:	stp	x27, x28, [sp, #80]
  4267e0:	ldr	x27, [x21]
  4267e4:	ldrb	w28, [x27]
  4267e8:	cmp	w28, #0x2a
  4267ec:	b.eq	426840 <ferror@plt+0x23f70>  // b.none
  4267f0:	cmp	w28, #0x2f
  4267f4:	b.ne	426a58 <ferror@plt+0x24188>  // b.any
  4267f8:	ldrb	w0, [x19, #1160]
  4267fc:	cbnz	w0, 426a78 <ferror@plt+0x241a8>
  426800:	ldr	x0, [x19]
  426804:	cbz	x0, 426810 <ferror@plt+0x23f40>
  426808:	ldrb	w0, [x0, #106]
  42680c:	cbnz	w0, 4268f4 <ferror@plt+0x24024>
  426810:	ldr	w0, [x19, #1116]
  426814:	cbnz	w0, 4268ac <ferror@plt+0x23fdc>
  426818:	ldrb	w1, [x19, #1154]
  42681c:	cbz	w1, 426828 <ferror@plt+0x23f58>
  426820:	ldrb	w1, [x21, #105]
  426824:	tbz	w1, #0, 426868 <ferror@plt+0x23f98>
  426828:	ldrsb	w1, [x19, #1198]
  42682c:	cmp	w1, #0x0
  426830:	b.le	4268f4 <ferror@plt+0x24024>
  426834:	ldrb	w1, [x19, #1120]
  426838:	cbnz	w1, 4268f4 <ferror@plt+0x24024>
  42683c:	b	4268c0 <ferror@plt+0x23ff0>
  426840:	mov	x0, x19
  426844:	bl	424138 <ferror@plt+0x21868>
  426848:	and	w0, w0, #0xff
  42684c:	cbz	w0, 426948 <ferror@plt+0x24078>
  426850:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  426854:	add	x2, x2, #0xd08
  426858:	mov	w1, #0x3                   	// #3
  42685c:	mov	x0, x19
  426860:	bl	41c9fc <ferror@plt+0x1a12c>
  426864:	b	426948 <ferror@plt+0x24078>
  426868:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  42686c:	add	x2, x2, #0xd20
  426870:	mov	w1, #0x2                   	// #2
  426874:	mov	x0, x19
  426878:	bl	41c9fc <ferror@plt+0x1a12c>
  42687c:	and	w0, w0, #0xff
  426880:	cbnz	w0, 426894 <ferror@plt+0x23fc4>
  426884:	ldrb	w0, [x21, #105]
  426888:	orr	w0, w0, #0x1
  42688c:	strb	w0, [x21, #105]
  426890:	b	4268f4 <ferror@plt+0x24024>
  426894:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  426898:	add	x2, x2, #0xd50
  42689c:	mov	w1, #0x5                   	// #5
  4268a0:	mov	x0, x19
  4268a4:	bl	41c9fc <ferror@plt+0x1a12c>
  4268a8:	b	426884 <ferror@plt+0x23fb4>
  4268ac:	ldrsb	w1, [x19, #1198]
  4268b0:	cmp	w1, #0x0
  4268b4:	b.le	4268c8 <ferror@plt+0x23ff8>
  4268b8:	ldrb	w1, [x19, #1120]
  4268bc:	cbnz	w1, 4268c8 <ferror@plt+0x23ff8>
  4268c0:	ldrb	w1, [x21, #105]
  4268c4:	tbz	w1, #0, 4269a8 <ferror@plt+0x240d8>
  4268c8:	sub	w0, w0, #0x5
  4268cc:	cmp	w0, #0x1
  4268d0:	b.hi	4268f4 <ferror@plt+0x24024>  // b.pmore
  4268d4:	ldrb	w0, [x27, #1]
  4268d8:	cmp	w0, #0x2a
  4268dc:	b.eq	4269ec <ferror@plt+0x2411c>  // b.none
  4268e0:	ldr	w0, [x19, #16]
  4268e4:	tst	w0, #0xff00ff
  4268e8:	b.ne	4269ec <ferror@plt+0x2411c>  // b.any
  4268ec:	ldrb	w0, [x21, #105]
  4268f0:	tbz	w0, #0, 4269fc <ferror@plt+0x2412c>
  4268f4:	ldr	x2, [x19]
  4268f8:	ldr	x0, [x19, #40]
  4268fc:	ldr	w24, [x0, #60]
  426900:	ldr	x0, [x2]
  426904:	ldrb	w1, [x0]
  426908:	cmp	w1, #0xa
  42690c:	b.eq	426924 <ferror@plt+0x24054>  // b.none
  426910:	add	x0, x0, #0x1
  426914:	str	x0, [x2]
  426918:	ldrb	w1, [x0], #1
  42691c:	cmp	w1, #0xa
  426920:	b.ne	426914 <ferror@plt+0x24044>  // b.any
  426924:	mov	w1, #0x1                   	// #1
  426928:	mov	x0, x19
  42692c:	bl	423edc <ferror@plt+0x2160c>
  426930:	ldr	x0, [x19, #40]
  426934:	ldr	w0, [x0, #60]
  426938:	cmp	w24, w0
  42693c:	b.eq	426948 <ferror@plt+0x24078>  // b.none
  426940:	ldrb	w0, [x19, #1133]
  426944:	cbnz	w0, 426a40 <ferror@plt+0x24170>
  426948:	add	x24, x27, #0x1
  42694c:	ldrb	w0, [x19, #1144]
  426950:	cmp	w0, #0x2
  426954:	b.eq	426a88 <ferror@plt+0x241b8>  // b.none
  426958:	b.hi	427b40 <ferror@plt+0x25270>  // b.pmore
  42695c:	cmp	w0, #0x1
  426960:	csinc	w25, w25, wzr, ne  // ne = any
  426964:	ldr	x4, [x19, #1072]
  426968:	cbz	x4, 42698c <ferror@plt+0x240bc>
  42696c:	ldr	x0, [x19]
  426970:	ldr	x3, [x0]
  426974:	sub	x3, x3, x27
  426978:	add	x3, x3, #0x1
  42697c:	sub	x2, x27, #0x1
  426980:	ldr	w1, [x20]
  426984:	mov	x0, x19
  426988:	blr	x4
  42698c:	ldrb	w0, [x19, #21]
  426990:	cbnz	w0, 42713c <ferror@plt+0x2486c>
  426994:	ldrh	w0, [x20, #6]
  426998:	orr	w0, w0, #0x1
  42699c:	strh	w0, [x20, #6]
  4269a0:	ldp	x27, x28, [sp, #80]
  4269a4:	b	426420 <ferror@plt+0x23b50>
  4269a8:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  4269ac:	add	x2, x2, #0xd88
  4269b0:	mov	w1, #0x0                   	// #0
  4269b4:	mov	x0, x19
  4269b8:	bl	41c9fc <ferror@plt+0x1a12c>
  4269bc:	and	w0, w0, #0xff
  4269c0:	cbnz	w0, 4269d4 <ferror@plt+0x24104>
  4269c4:	ldrb	w0, [x21, #105]
  4269c8:	orr	w0, w0, #0x1
  4269cc:	strb	w0, [x21, #105]
  4269d0:	b	4268f4 <ferror@plt+0x24024>
  4269d4:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  4269d8:	add	x2, x2, #0xd50
  4269dc:	mov	w1, #0x5                   	// #5
  4269e0:	mov	x0, x19
  4269e4:	bl	41c9fc <ferror@plt+0x1a12c>
  4269e8:	b	4269c4 <ferror@plt+0x240f4>
  4269ec:	mov	w0, #0x7                   	// #7
  4269f0:	strb	w0, [x20, #4]
  4269f4:	ldp	x27, x28, [sp, #80]
  4269f8:	b	427948 <ferror@plt+0x25078>
  4269fc:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  426a00:	add	x2, x2, #0xd20
  426a04:	mov	w1, #0x3                   	// #3
  426a08:	mov	x0, x19
  426a0c:	bl	41c9fc <ferror@plt+0x1a12c>
  426a10:	and	w0, w0, #0xff
  426a14:	cbnz	w0, 426a28 <ferror@plt+0x24158>
  426a18:	ldrb	w0, [x21, #105]
  426a1c:	orr	w0, w0, #0x1
  426a20:	strb	w0, [x21, #105]
  426a24:	b	4268f4 <ferror@plt+0x24024>
  426a28:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  426a2c:	add	x2, x2, #0xd50
  426a30:	mov	w1, #0x5                   	// #5
  426a34:	mov	x0, x19
  426a38:	bl	41c9fc <ferror@plt+0x1a12c>
  426a3c:	b	426a18 <ferror@plt+0x24148>
  426a40:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  426a44:	add	x2, x2, #0xdb8
  426a48:	mov	w1, #0x2                   	// #2
  426a4c:	mov	x0, x19
  426a50:	bl	41ca74 <ferror@plt+0x1a1a4>
  426a54:	b	426948 <ferror@plt+0x24078>
  426a58:	cmp	w28, #0x3d
  426a5c:	b.ne	426a78 <ferror@plt+0x241a8>  // b.any
  426a60:	add	x27, x27, #0x1
  426a64:	str	x27, [x21]
  426a68:	mov	w0, #0x1e                  	// #30
  426a6c:	strb	w0, [x20, #4]
  426a70:	ldp	x27, x28, [sp, #80]
  426a74:	b	427948 <ferror@plt+0x25078>
  426a78:	mov	w0, #0x7                   	// #7
  426a7c:	strb	w0, [x20, #4]
  426a80:	ldp	x27, x28, [sp, #80]
  426a84:	b	427948 <ferror@plt+0x25078>
  426a88:	ldr	x0, [x19]
  426a8c:	ldr	x2, [x0]
  426a90:	sub	x0, x2, x24
  426a94:	cmp	x0, #0x7
  426a98:	b.ls	426964 <ferror@plt+0x24094>  // b.plast
  426a9c:	mov	w1, #0x2d                  	// #45
  426aa0:	b	426ab4 <ferror@plt+0x241e4>
  426aa4:	add	x24, x24, #0x1
  426aa8:	sub	x0, x2, x24
  426aac:	cmp	x0, #0x7
  426ab0:	b.ls	426964 <ferror@plt+0x24094>  // b.plast
  426ab4:	ldrb	w0, [x24]
  426ab8:	and	w0, w0, #0xffffffdf
  426abc:	and	w0, w0, #0xff
  426ac0:	cmp	w0, #0x46
  426ac4:	b.ne	426aa4 <ferror@plt+0x241d4>  // b.any
  426ac8:	ldrb	w0, [x24, #1]
  426acc:	and	w0, w0, #0xffffffdf
  426ad0:	and	w0, w0, #0xff
  426ad4:	cmp	w0, #0x41
  426ad8:	b.ne	426aa4 <ferror@plt+0x241d4>  // b.any
  426adc:	ldrb	w0, [x24, #2]
  426ae0:	and	w0, w0, #0xffffffdf
  426ae4:	and	w0, w0, #0xff
  426ae8:	cmp	w0, #0x4c
  426aec:	b.ne	426aa4 <ferror@plt+0x241d4>  // b.any
  426af0:	ldrb	w0, [x24, #3]
  426af4:	and	w0, w0, #0xffffffdf
  426af8:	and	w0, w0, #0xff
  426afc:	cmp	w0, #0x4c
  426b00:	b.ne	426aa4 <ferror@plt+0x241d4>  // b.any
  426b04:	ldrb	w0, [x24, #4]
  426b08:	and	w0, w0, #0xffffffdf
  426b0c:	and	w0, w0, #0xff
  426b10:	cmp	w0, #0x53
  426b14:	cinc	x24, x24, eq  // eq = none
  426b18:	ldrb	w0, [x24, #4]!
  426b1c:	cmp	w0, #0x20
  426b20:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  426b24:	ccmp	w0, w1, #0x4, ne  // ne = any
  426b28:	b.ne	426b40 <ferror@plt+0x24270>  // b.any
  426b2c:	ldrb	w0, [x24, #1]!
  426b30:	cmp	w0, #0x20
  426b34:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  426b38:	ccmp	w0, w1, #0x4, ne  // ne = any
  426b3c:	b.eq	426b2c <ferror@plt+0x2425c>  // b.none
  426b40:	and	w0, w0, #0xffffffdf
  426b44:	and	w0, w0, #0xff
  426b48:	cmp	w0, #0x54
  426b4c:	b.ne	426aa4 <ferror@plt+0x241d4>  // b.any
  426b50:	ldrb	w0, [x24, #1]
  426b54:	and	w0, w0, #0xffffffdf
  426b58:	and	w0, w0, #0xff
  426b5c:	cmp	w0, #0x48
  426b60:	b.ne	426aa4 <ferror@plt+0x241d4>  // b.any
  426b64:	ldrb	w0, [x24, #2]
  426b68:	and	w0, w0, #0xffffffdf
  426b6c:	and	w0, w0, #0xff
  426b70:	cmp	w0, #0x52
  426b74:	b.ne	426aa4 <ferror@plt+0x241d4>  // b.any
  426b78:	ldrb	w0, [x24, #3]
  426b7c:	and	w0, w0, #0xffffffdf
  426b80:	and	w0, w0, #0xff
  426b84:	cmp	w0, #0x55
  426b88:	b.eq	427134 <ferror@plt+0x24864>  // b.none
  426b8c:	cmp	w0, #0x4f
  426b90:	b.ne	426aa4 <ferror@plt+0x241d4>  // b.any
  426b94:	ldrb	w0, [x24, #4]
  426b98:	and	w0, w0, #0xffffffdf
  426b9c:	and	w0, w0, #0xff
  426ba0:	cmp	w0, #0x55
  426ba4:	b.ne	426aa4 <ferror@plt+0x241d4>  // b.any
  426ba8:	ldrb	w0, [x24, #5]
  426bac:	and	w0, w0, #0xffffffdf
  426bb0:	and	w0, w0, #0xff
  426bb4:	cmp	w0, #0x47
  426bb8:	b.ne	426aa4 <ferror@plt+0x241d4>  // b.any
  426bbc:	ldrb	w0, [x24, #6]
  426bc0:	and	w0, w0, #0xffffffdf
  426bc4:	and	w0, w0, #0xff
  426bc8:	cmp	w0, #0x48
  426bcc:	b.ne	426aa4 <ferror@plt+0x241d4>  // b.any
  426bd0:	mov	w25, #0x1                   	// #1
  426bd4:	b	426964 <ferror@plt+0x24094>
  426bd8:	ldrb	w0, [x27, #13]
  426bdc:	cmp	w0, #0x40
  426be0:	b.ne	426964 <ferror@plt+0x24094>  // b.any
  426be4:	mov	x0, #0xc                   	// #12
  426be8:	b	427ba8 <ferror@plt+0x252d8>
  426bec:	cmp	w26, #0x6c
  426bf0:	b.eq	426de0 <ferror@plt+0x24510>  // b.none
  426bf4:	cmp	w0, #0x4
  426bf8:	b.eq	426e38 <ferror@plt+0x24568>  // b.none
  426bfc:	sub	w0, w26, #0x20
  426c00:	and	w0, w0, #0xff
  426c04:	cmp	w26, #0x2e
  426c08:	ccmp	w26, #0x9, #0x4, ne  // ne = any
  426c0c:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  426c10:	b.hi	426c30 <ferror@plt+0x24360>  // b.pmore
  426c14:	ldrb	w26, [x24, #1]!
  426c18:	sub	w0, w26, #0x20
  426c1c:	and	w0, w0, #0xff
  426c20:	cmp	w26, #0x2e
  426c24:	ccmp	w26, #0x9, #0x4, ne  // ne = any
  426c28:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  426c2c:	b.ls	426c14 <ferror@plt+0x24344>  // b.plast
  426c30:	and	w0, w26, #0xffffffdf
  426c34:	and	w0, w0, #0xff
  426c38:	cmp	w0, #0x45
  426c3c:	b.ne	426f14 <ferror@plt+0x24644>  // b.any
  426c40:	ldr	x0, [x19]
  426c44:	ldr	x0, [x0]
  426c48:	sub	x0, x0, x24
  426c4c:	cmp	x0, #0xc
  426c50:	b.ls	426964 <ferror@plt+0x24094>  // b.plast
  426c54:	cmp	w26, #0x45
  426c58:	b.eq	426ee0 <ferror@plt+0x24610>  // b.none
  426c5c:	mov	x2, #0x3                   	// #3
  426c60:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a094>
  426c64:	add	x1, x1, #0xe10
  426c68:	add	x0, x24, #0x1
  426c6c:	bl	4025e0 <memcmp@plt>
  426c70:	cbnz	w0, 426964 <ferror@plt+0x24094>
  426c74:	mov	x1, x24
  426c78:	ldrb	w2, [x1, #4]!
  426c7c:	add	x0, x24, #0x5
  426c80:	cmp	w2, #0x2c
  426c84:	csel	x0, x0, x1, eq  // eq = none
  426c88:	ldrb	w1, [x0]
  426c8c:	cmp	w1, #0x20
  426c90:	b.ne	426964 <ferror@plt+0x24094>  // b.any
  426c94:	add	x24, x0, #0x1
  426c98:	ldr	w1, [sp, #104]
  426c9c:	cbz	w1, 426cac <ferror@plt+0x243dc>
  426ca0:	ldrb	w1, [x0, #1]
  426ca4:	cmp	w1, #0x66
  426ca8:	b.eq	426964 <ferror@plt+0x24094>  // b.none
  426cac:	cmp	w26, #0x65
  426cb0:	b.eq	426f04 <ferror@plt+0x24634>  // b.none
  426cb4:	ldrb	w26, [x0, #1]
  426cb8:	and	w0, w26, #0xffffffdf
  426cbc:	and	w0, w0, #0xff
  426cc0:	cmp	w0, #0x46
  426cc4:	b.ne	426964 <ferror@plt+0x24094>  // b.any
  426cc8:	ldr	x0, [x19]
  426ccc:	ldr	x0, [x0]
  426cd0:	str	x0, [sp, #120]
  426cd4:	sub	x0, x0, x24
  426cd8:	cmp	x0, #0x7
  426cdc:	b.ls	426964 <ferror@plt+0x24094>  // b.plast
  426ce0:	cmp	w26, #0x46
  426ce4:	b.eq	426fcc <ferror@plt+0x246fc>  // b.none
  426ce8:	ldr	w0, [sp, #104]
  426cec:	cbnz	w0, 426964 <ferror@plt+0x24094>
  426cf0:	mov	x2, #0x3                   	// #3
  426cf4:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a094>
  426cf8:	add	x1, x1, #0xe40
  426cfc:	add	x0, x24, #0x1
  426d00:	bl	4025e0 <memcmp@plt>
  426d04:	cbnz	w0, 426964 <ferror@plt+0x24094>
  426d08:	add	x0, x24, #0x4
  426d0c:	str	x0, [sp, #112]
  426d10:	ldrb	w0, [x24, #4]
  426d14:	mov	w1, w0
  426d18:	mov	w2, #0x73                  	// #115
  426d1c:	cmp	w2, w1
  426d20:	b.eq	427004 <ferror@plt+0x24734>  // b.none
  426d24:	cmp	w0, #0x2d
  426d28:	mov	w2, #0x20                  	// #32
  426d2c:	ccmp	w0, w2, #0x4, ne  // ne = any
  426d30:	b.ne	42701c <ferror@plt+0x2474c>  // b.any
  426d34:	add	x0, x24, #0x5
  426d38:	str	x0, [sp, #112]
  426d3c:	cmp	w26, #0x66
  426d40:	b.eq	426d54 <ferror@plt+0x24484>  // b.none
  426d44:	ldr	x0, [sp, #112]
  426d48:	ldrb	w0, [x0]
  426d4c:	cmp	w0, #0x54
  426d50:	b.eq	42703c <ferror@plt+0x2476c>  // b.none
  426d54:	ldr	w0, [sp, #104]
  426d58:	cbnz	w0, 426964 <ferror@plt+0x24094>
  426d5c:	ldr	x0, [sp, #112]
  426d60:	ldrb	w0, [x0]
  426d64:	cmp	w0, #0x74
  426d68:	b.ne	426964 <ferror@plt+0x24094>  // b.any
  426d6c:	ldr	x0, [sp, #120]
  426d70:	ldr	x1, [sp, #112]
  426d74:	sub	x24, x0, x1
  426d78:	cmp	x24, #0x3
  426d7c:	b.ls	426964 <ferror@plt+0x24094>  // b.plast
  426d80:	ldr	x0, [sp, #112]
  426d84:	add	x26, x0, #0x1
  426d88:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a094>
  426d8c:	add	x1, x1, #0xca8
  426d90:	mov	x2, #0x3                   	// #3
  426d94:	mov	x0, x26
  426d98:	bl	4025e0 <memcmp@plt>
  426d9c:	cbz	w0, 427074 <ferror@plt+0x247a4>
  426da0:	cmp	x24, #0x6
  426da4:	b.ls	426964 <ferror@plt+0x24094>  // b.plast
  426da8:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a094>
  426dac:	add	x0, x0, #0xcc0
  426db0:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a094>
  426db4:	add	x1, x1, #0xcb8
  426db8:	ldr	w2, [sp, #104]
  426dbc:	cmp	w2, #0x0
  426dc0:	mov	x2, #0x6                   	// #6
  426dc4:	csel	x1, x1, x0, ne  // ne = any
  426dc8:	mov	x0, x26
  426dcc:	bl	4025e0 <memcmp@plt>
  426dd0:	cbnz	w0, 426964 <ferror@plt+0x24094>
  426dd4:	ldr	x0, [sp, #112]
  426dd8:	add	x24, x0, #0x7
  426ddc:	b	42707c <ferror@plt+0x247ac>
  426de0:	ldr	x0, [x19]
  426de4:	ldr	x0, [x0]
  426de8:	sub	x0, x0, x24
  426dec:	sub	x0, x0, #0x1
  426df0:	cmp	x0, #0xf
  426df4:	b.ls	426964 <ferror@plt+0x24094>  // b.plast
  426df8:	mov	x2, #0x10                  	// #16
  426dfc:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a094>
  426e00:	add	x1, x1, #0xde0
  426e04:	add	x0, x27, #0x2
  426e08:	bl	4025e0 <memcmp@plt>
  426e0c:	cbnz	w0, 426964 <ferror@plt+0x24094>
  426e10:	add	x24, x27, #0x12
  426e14:	ldrb	w0, [x27, #18]
  426e18:	cmp	w0, #0x20
  426e1c:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  426e20:	b.ne	427bb0 <ferror@plt+0x252e0>  // b.any
  426e24:	ldrb	w0, [x24, #1]!
  426e28:	cmp	w0, #0x20
  426e2c:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  426e30:	b.eq	426e24 <ferror@plt+0x24554>  // b.none
  426e34:	b	427bb0 <ferror@plt+0x252e0>
  426e38:	cmp	w26, #0x20
  426e3c:	ccmp	w26, #0x9, #0x4, ne  // ne = any
  426e40:	b.ne	426e54 <ferror@plt+0x24584>  // b.any
  426e44:	ldrb	w0, [x24, #1]!
  426e48:	cmp	w0, #0x20
  426e4c:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  426e50:	b.eq	426e44 <ferror@plt+0x24574>  // b.none
  426e54:	ldr	x0, [x19]
  426e58:	ldr	x26, [x0]
  426e5c:	sub	x0, x26, x24
  426e60:	cmp	x0, #0x7
  426e64:	b.ls	426964 <ferror@plt+0x24094>  // b.plast
  426e68:	mov	x2, #0x7                   	// #7
  426e6c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a094>
  426e70:	add	x1, x1, #0xdf8
  426e74:	mov	x0, x24
  426e78:	bl	4025e0 <memcmp@plt>
  426e7c:	cbnz	w0, 426964 <ferror@plt+0x24094>
  426e80:	ldrb	w0, [x24, #7]
  426e84:	cmp	w0, #0x55
  426e88:	b.eq	426eb8 <ferror@plt+0x245e8>  // b.none
  426e8c:	add	x0, x24, #0x7
  426e90:	sub	x1, x26, x0
  426e94:	cmp	x1, #0x3
  426e98:	b.ls	426964 <ferror@plt+0x24094>  // b.plast
  426e9c:	mov	x2, #0x4                   	// #4
  426ea0:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a094>
  426ea4:	add	x1, x1, #0xe00
  426ea8:	bl	4025e0 <memcmp@plt>
  426eac:	cbnz	w0, 426964 <ferror@plt+0x24094>
  426eb0:	add	x24, x24, #0xb
  426eb4:	b	426ebc <ferror@plt+0x245ec>
  426eb8:	add	x24, x24, #0x8
  426ebc:	ldrb	w0, [x24]
  426ec0:	cmp	w0, #0x20
  426ec4:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  426ec8:	b.ne	427bb0 <ferror@plt+0x252e0>  // b.any
  426ecc:	ldrb	w0, [x24, #1]!
  426ed0:	cmp	w0, #0x20
  426ed4:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  426ed8:	b.eq	426ecc <ferror@plt+0x245fc>  // b.none
  426edc:	b	427bb0 <ferror@plt+0x252e0>
  426ee0:	mov	x2, #0x3                   	// #3
  426ee4:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a094>
  426ee8:	add	x1, x1, #0xe08
  426eec:	add	x0, x24, #0x1
  426ef0:	bl	4025e0 <memcmp@plt>
  426ef4:	cbnz	w0, 426c5c <ferror@plt+0x2438c>
  426ef8:	mov	w0, #0x1                   	// #1
  426efc:	str	w0, [sp, #104]
  426f00:	b	426c74 <ferror@plt+0x243a4>
  426f04:	ldrb	w1, [x0, #1]
  426f08:	cmp	w1, #0x46
  426f0c:	b.ne	426cb4 <ferror@plt+0x243e4>  // b.any
  426f10:	b	426964 <ferror@plt+0x24094>
  426f14:	cmp	w0, #0x49
  426f18:	b.ne	426cb8 <ferror@plt+0x243e8>  // b.any
  426f1c:	ldr	x0, [x19]
  426f20:	ldr	x0, [x0]
  426f24:	sub	x0, x0, x24
  426f28:	cmp	x0, #0x13
  426f2c:	b.ls	426964 <ferror@plt+0x24094>  // b.plast
  426f30:	cmp	w26, #0x49
  426f34:	b.eq	426f7c <ferror@plt+0x246ac>  // b.none
  426f38:	mov	x2, #0xa                   	// #10
  426f3c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a094>
  426f40:	add	x1, x1, #0xe28
  426f44:	add	x0, x24, #0x1
  426f48:	bl	4025e0 <memcmp@plt>
  426f4c:	cbnz	w0, 426964 <ferror@plt+0x24094>
  426f50:	add	x0, x24, #0xb
  426f54:	ldrb	w1, [x24, #11]
  426f58:	cmp	w1, #0x20
  426f5c:	b.eq	427b00 <ferror@plt+0x25230>  // b.none
  426f60:	mov	x2, #0x3                   	// #3
  426f64:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a094>
  426f68:	add	x1, x1, #0xe50
  426f6c:	bl	4025e0 <memcmp@plt>
  426f70:	cbnz	w0, 426964 <ferror@plt+0x24094>
  426f74:	add	x0, x24, #0xe
  426f78:	b	427b2c <ferror@plt+0x2525c>
  426f7c:	mov	x2, #0xa                   	// #10
  426f80:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a094>
  426f84:	add	x1, x1, #0xe18
  426f88:	add	x0, x24, #0x1
  426f8c:	bl	4025e0 <memcmp@plt>
  426f90:	cbnz	w0, 426f38 <ferror@plt+0x24668>
  426f94:	ldrb	w0, [x24, #11]
  426f98:	cmp	w0, #0x20
  426f9c:	b.ne	427b08 <ferror@plt+0x25238>  // b.any
  426fa0:	add	x0, x24, #0xc
  426fa4:	ldrb	w1, [x24, #12]
  426fa8:	cmp	w1, #0x66
  426fac:	b.eq	426964 <ferror@plt+0x24094>  // b.none
  426fb0:	mov	w1, #0x1                   	// #1
  426fb4:	str	w1, [sp, #104]
  426fb8:	b	427b34 <ferror@plt+0x25264>
  426fbc:	ldrb	w1, [x0]
  426fc0:	cmp	w1, #0x46
  426fc4:	b.ne	427b34 <ferror@plt+0x25264>  // b.any
  426fc8:	b	426964 <ferror@plt+0x24094>
  426fcc:	mov	x2, #0x3                   	// #3
  426fd0:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a094>
  426fd4:	add	x1, x1, #0xe38
  426fd8:	add	x0, x24, #0x1
  426fdc:	bl	4025e0 <memcmp@plt>
  426fe0:	cbnz	w0, 426ce8 <ferror@plt+0x24418>
  426fe4:	add	x0, x24, #0x4
  426fe8:	str	x0, [sp, #112]
  426fec:	ldrb	w0, [x24, #4]
  426ff0:	mov	w1, w0
  426ff4:	mov	w2, #0x1                   	// #1
  426ff8:	str	w2, [sp, #104]
  426ffc:	mov	w2, #0x53                  	// #83
  427000:	b	426d1c <ferror@plt+0x2444c>
  427004:	ldrb	w2, [x24, #5]
  427008:	cmp	w2, #0x20
  42700c:	b.ne	426d24 <ferror@plt+0x24454>  // b.any
  427010:	add	x0, x24, #0x6
  427014:	str	x0, [sp, #112]
  427018:	b	426d3c <ferror@plt+0x2446c>
  42701c:	ldr	w0, [sp, #104]
  427020:	cmp	w0, #0x0
  427024:	mov	w0, #0x54                  	// #84
  427028:	mov	w2, #0x74                  	// #116
  42702c:	csel	w0, w0, w2, ne  // ne = any
  427030:	cmp	w0, w1
  427034:	b.ne	426964 <ferror@plt+0x24094>  // b.any
  427038:	b	426d3c <ferror@plt+0x2446c>
  42703c:	ldr	x1, [sp, #120]
  427040:	ldr	x0, [sp, #112]
  427044:	sub	x24, x1, x0
  427048:	cmp	x24, #0x3
  42704c:	b.ls	426964 <ferror@plt+0x24094>  // b.plast
  427050:	add	x26, x0, #0x1
  427054:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a094>
  427058:	add	x0, x0, #0xca8
  42705c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a094>
  427060:	add	x1, x1, #0xcb0
  427064:	ldr	w2, [sp, #104]
  427068:	cmp	w2, #0x0
  42706c:	csel	x1, x1, x0, ne  // ne = any
  427070:	b	426d90 <ferror@plt+0x244c0>
  427074:	ldr	x0, [sp, #112]
  427078:	add	x24, x0, #0x4
  42707c:	ldrb	w0, [x24]
  427080:	sub	w1, w0, #0x20
  427084:	and	w1, w1, #0xff
  427088:	cmp	w0, #0x2e
  42708c:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  427090:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  427094:	b.hi	4270a0 <ferror@plt+0x247d0>  // b.pmore
  427098:	add	x24, x24, #0x1
  42709c:	b	42707c <ferror@plt+0x247ac>
  4270a0:	cmp	w0, #0x2d
  4270a4:	b.ne	427bb0 <ferror@plt+0x252e0>  // b.any
  4270a8:	add	x0, x24, #0x1
  4270ac:	ldrb	w1, [x27]
  4270b0:	cmp	w1, #0x2a
  4270b4:	b.ne	427118 <ferror@plt+0x24848>  // b.any
  4270b8:	add	x0, x24, #0x2
  4270bc:	b	4270c4 <ferror@plt+0x247f4>
  4270c0:	add	x0, x0, #0x1
  4270c4:	sub	x24, x0, #0x1
  4270c8:	ldurb	w1, [x0, #-1]
  4270cc:	and	w2, w1, #0xffffffdf
  4270d0:	and	w2, w2, #0xff
  4270d4:	cmp	w1, #0x0
  4270d8:	ccmp	w1, #0xd, #0x4, ne  // ne = any
  4270dc:	ccmp	w2, #0xa, #0x4, ne  // ne = any
  4270e0:	b.ne	4270c0 <ferror@plt+0x247f0>  // b.any
  4270e4:	cmp	w1, #0x2a
  4270e8:	b.ne	4270f8 <ferror@plt+0x24828>  // b.any
  4270ec:	ldrb	w1, [x0]
  4270f0:	cmp	w1, #0x2f
  4270f4:	b.ne	4270c0 <ferror@plt+0x247f0>  // b.any
  4270f8:	ldrb	w0, [x24]
  4270fc:	cmp	w0, #0x2a
  427100:	b.ne	426964 <ferror@plt+0x24094>  // b.any
  427104:	ldrb	w0, [x24, #1]
  427108:	cmp	w0, #0x2f
  42710c:	csinc	w25, w25, wzr, ne  // ne = any
  427110:	b	426964 <ferror@plt+0x24094>
  427114:	add	x0, x0, #0x1
  427118:	ldrb	w1, [x0]
  42711c:	cmp	w1, #0x0
  427120:	ccmp	w1, #0xa, #0x4, ne  // ne = any
  427124:	ccmp	w1, #0xd, #0x4, ne  // ne = any
  427128:	b.ne	427114 <ferror@plt+0x24844>  // b.any
  42712c:	mov	x24, x0
  427130:	b	427bbc <ferror@plt+0x252ec>
  427134:	mov	w25, #0x1                   	// #1
  427138:	b	426964 <ferror@plt+0x24094>
  42713c:	cbz	w25, 42714c <ferror@plt+0x2487c>
  427140:	ldrh	w0, [x20, #6]
  427144:	orr	w0, w0, #0x20
  427148:	strh	w0, [x20, #6]
  42714c:	ldr	x0, [x19]
  427150:	ldr	x0, [x0]
  427154:	ldurb	w2, [x0, #-1]
  427158:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1f094>
  42715c:	add	x1, x1, #0xa68
  427160:	ldrh	w1, [x1, x2, lsl #1]
  427164:	tst	x1, #0x400
  427168:	sub	w0, w0, w27
  42716c:	cinc	w23, w0, eq  // eq = none
  427170:	ldrb	w0, [x19, #16]
  427174:	cbnz	w0, 427180 <ferror@plt+0x248b0>
  427178:	ldrb	w0, [x19, #25]
  42717c:	cbz	w0, 4272bc <ferror@plt+0x249ec>
  427180:	cmp	w28, #0x2f
  427184:	b.eq	42726c <ferror@plt+0x2499c>  // b.none
  427188:	mov	w1, w23
  42718c:	mov	x0, x19
  427190:	bl	42542c <ferror@plt+0x22b5c>
  427194:	mov	x22, x0
  427198:	mov	w0, #0x4f                  	// #79
  42719c:	strb	w0, [x20, #4]
  4271a0:	str	w23, [x20, #8]
  4271a4:	str	x22, [x20, #16]
  4271a8:	mov	x0, x22
  4271ac:	mov	w1, #0x2f                  	// #47
  4271b0:	strb	w1, [x0], #1
  4271b4:	sub	w2, w23, #0x1
  4271b8:	mov	x1, x27
  4271bc:	bl	402260 <memcpy@plt>
  4271c0:	ldrb	w0, [x19, #16]
  4271c4:	cbnz	w0, 4271d8 <ferror@plt+0x24908>
  4271c8:	ldrb	w0, [x19, #25]
  4271cc:	cbz	w0, 4271d8 <ferror@plt+0x24908>
  4271d0:	cmp	w28, #0x2f
  4271d4:	b.eq	427300 <ferror@plt+0x24a30>  // b.none
  4271d8:	ldr	w0, [x19, #1396]
  4271dc:	cbz	w0, 42737c <ferror@plt+0x24aac>
  4271e0:	ldr	w1, [x19, #1396]
  4271e4:	ldr	w0, [x19, #1392]
  4271e8:	cmp	w0, w1
  4271ec:	b.eq	427394 <ferror@plt+0x24ac4>  // b.none
  4271f0:	ldr	w22, [x20, #8]
  4271f4:	ldrsw	x23, [x19, #1392]
  4271f8:	lsl	x23, x23, #4
  4271fc:	ldr	x24, [x19, #1384]
  427200:	add	w0, w22, #0x1
  427204:	sxtw	x0, w0
  427208:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  42720c:	str	x0, [x24, x23]
  427210:	sxtw	x22, w22
  427214:	ldrsw	x0, [x19, #1392]
  427218:	ldr	x3, [x19, #1384]
  42721c:	lsl	x0, x0, #4
  427220:	mov	x2, x22
  427224:	ldr	x1, [x20, #16]
  427228:	ldr	x0, [x3, x0]
  42722c:	bl	402260 <memcpy@plt>
  427230:	ldrsw	x0, [x19, #1392]
  427234:	ldr	x1, [x19, #1384]
  427238:	lsl	x0, x0, #4
  42723c:	ldr	x0, [x1, x0]
  427240:	strb	wzr, [x0, x22]
  427244:	ldr	w1, [x20]
  427248:	ldrsw	x0, [x19, #1392]
  42724c:	ldr	x2, [x19, #1384]
  427250:	add	x0, x2, x0, lsl #4
  427254:	str	w1, [x0, #8]
  427258:	ldr	w0, [x19, #1392]
  42725c:	add	w0, w0, #0x1
  427260:	str	w0, [x19, #1392]
  427264:	ldp	x27, x28, [sp, #80]
  427268:	b	427a9c <ferror@plt+0x251cc>
  42726c:	add	w24, w23, #0x2
  427270:	add	w1, w23, #0x2
  427274:	mov	x0, x19
  427278:	bl	42542c <ferror@plt+0x22b5c>
  42727c:	mov	x22, x0
  427280:	mov	w0, #0x4f                  	// #79
  427284:	strb	w0, [x20, #4]
  427288:	str	w24, [x20, #8]
  42728c:	str	x22, [x20, #16]
  427290:	mov	x0, x22
  427294:	mov	w1, #0x2f                  	// #47
  427298:	strb	w1, [x0], #1
  42729c:	sub	w2, w23, #0x1
  4272a0:	mov	x1, x27
  4272a4:	bl	402260 <memcpy@plt>
  4272a8:	ldrb	w0, [x19, #16]
  4272ac:	cbnz	w0, 427304 <ferror@plt+0x24a34>
  4272b0:	ldrb	w0, [x19, #25]
  4272b4:	cbz	w0, 4271d8 <ferror@plt+0x24908>
  4272b8:	b	427304 <ferror@plt+0x24a34>
  4272bc:	mov	w1, w23
  4272c0:	mov	x0, x19
  4272c4:	bl	42542c <ferror@plt+0x22b5c>
  4272c8:	mov	x22, x0
  4272cc:	mov	w0, #0x4f                  	// #79
  4272d0:	strb	w0, [x20, #4]
  4272d4:	str	w23, [x20, #8]
  4272d8:	str	x22, [x20, #16]
  4272dc:	mov	x0, x22
  4272e0:	mov	w1, #0x2f                  	// #47
  4272e4:	strb	w1, [x0], #1
  4272e8:	sub	w2, w23, #0x1
  4272ec:	mov	x1, x27
  4272f0:	bl	402260 <memcpy@plt>
  4272f4:	ldrb	w0, [x19, #16]
  4272f8:	cbnz	w0, 4271d0 <ferror@plt+0x24900>
  4272fc:	b	4271c8 <ferror@plt+0x248f8>
  427300:	mov	w24, w23
  427304:	mov	w0, #0x2a                  	// #42
  427308:	strb	w0, [x22, #1]
  42730c:	sub	w1, w24, #0x2
  427310:	strb	w0, [x22, w1, uxtw]
  427314:	sub	w0, w24, #0x1
  427318:	mov	w2, #0x2f                  	// #47
  42731c:	strb	w2, [x22, x0]
  427320:	cmp	w1, #0x2
  427324:	b.ls	4271d8 <ferror@plt+0x24908>  // b.plast
  427328:	add	x0, x22, #0x1
  42732c:	add	x1, x22, #0x2
  427330:	sub	w24, w24, #0x5
  427334:	add	x1, x1, x24
  427338:	mov	w3, #0x7c                  	// #124
  42733c:	b	427350 <ferror@plt+0x24a80>
  427340:	strb	w3, [x2, #1]
  427344:	add	x0, x0, #0x1
  427348:	cmp	x0, x1
  42734c:	b.eq	4271d8 <ferror@plt+0x24908>  // b.none
  427350:	mov	x2, x0
  427354:	ldrb	w4, [x0, #1]
  427358:	cmp	w4, #0x2f
  42735c:	b.ne	427344 <ferror@plt+0x24a74>  // b.any
  427360:	ldrb	w4, [x0]
  427364:	cmp	w4, #0x2a
  427368:	b.eq	427340 <ferror@plt+0x24a70>  // b.none
  42736c:	ldrb	w4, [x0, #2]
  427370:	cmp	w4, #0x2a
  427374:	b.ne	427344 <ferror@plt+0x24a74>  // b.any
  427378:	b	427340 <ferror@plt+0x24a70>
  42737c:	mov	w0, #0x100                 	// #256
  427380:	str	w0, [x19, #1396]
  427384:	mov	x0, #0x1000                	// #4096
  427388:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  42738c:	str	x0, [x19, #1384]
  427390:	b	4271e0 <ferror@plt+0x24910>
  427394:	lsl	w1, w1, #1
  427398:	str	w1, [x19, #1396]
  42739c:	sbfiz	x1, x1, #4, #32
  4273a0:	ldr	x0, [x19, #1384]
  4273a4:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  4273a8:	str	x0, [x19, #1384]
  4273ac:	b	4271f0 <ferror@plt+0x24920>
  4273b0:	ldrb	w0, [x19, #19]
  4273b4:	cbnz	w0, 427410 <ferror@plt+0x24b40>
  4273b8:	mov	w0, #0x3                   	// #3
  4273bc:	strb	w0, [x20, #4]
  4273c0:	ldr	x0, [x21]
  4273c4:	ldrb	w1, [x0]
  4273c8:	cmp	w1, #0x3d
  4273cc:	b.eq	427434 <ferror@plt+0x24b64>  // b.none
  4273d0:	cmp	w1, #0x3c
  4273d4:	b.eq	427448 <ferror@plt+0x24b78>  // b.none
  4273d8:	ldrb	w2, [x19, #1126]
  4273dc:	cbz	w2, 427948 <ferror@plt+0x25078>
  4273e0:	cmp	w1, #0x3a
  4273e4:	b.eq	42747c <ferror@plt+0x24bac>  // b.none
  4273e8:	cmp	w1, #0x25
  4273ec:	b.ne	427948 <ferror@plt+0x25078>  // b.any
  4273f0:	add	x0, x0, #0x1
  4273f4:	str	x0, [x21]
  4273f8:	ldrh	w0, [x20, #6]
  4273fc:	orr	w0, w0, #0x2
  427400:	strh	w0, [x20, #6]
  427404:	mov	w0, #0x29                  	// #41
  427408:	strb	w0, [x20, #4]
  42740c:	b	427948 <ferror@plt+0x25078>
  427410:	ldr	x2, [x21]
  427414:	sub	x2, x2, #0x1
  427418:	mov	x1, x20
  42741c:	mov	x0, x19
  427420:	bl	425644 <ferror@plt+0x22d74>
  427424:	ldrb	w0, [x20, #4]
  427428:	cmp	w0, #0x3
  42742c:	b.ne	427a9c <ferror@plt+0x251cc>  // b.any
  427430:	b	4273b8 <ferror@plt+0x24ae8>
  427434:	add	x0, x0, #0x1
  427438:	str	x0, [x21]
  42743c:	mov	w0, #0x1a                  	// #26
  427440:	strb	w0, [x20, #4]
  427444:	b	427948 <ferror@plt+0x25078>
  427448:	add	x0, x0, #0x1
  42744c:	str	x0, [x21]
  427450:	mov	w0, #0xd                   	// #13
  427454:	strb	w0, [x20, #4]
  427458:	ldr	x0, [x21]
  42745c:	ldrb	w1, [x0]
  427460:	cmp	w1, #0x3d
  427464:	b.ne	427948 <ferror@plt+0x25078>  // b.any
  427468:	add	x0, x0, #0x1
  42746c:	str	x0, [x21]
  427470:	mov	w0, #0x24                  	// #36
  427474:	strb	w0, [x20, #4]
  427478:	b	427948 <ferror@plt+0x25078>
  42747c:	ldrb	w1, [x19, #1120]
  427480:	cbz	w1, 427494 <ferror@plt+0x24bc4>
  427484:	ldr	w1, [x19, #1116]
  427488:	sub	w1, w1, #0xb
  42748c:	cmp	w1, #0x1
  427490:	b.hi	4274b4 <ferror@plt+0x24be4>  // b.pmore
  427494:	add	x0, x0, #0x1
  427498:	str	x0, [x21]
  42749c:	ldrh	w0, [x20, #6]
  4274a0:	orr	w0, w0, #0x2
  4274a4:	strh	w0, [x20, #6]
  4274a8:	mov	w0, #0x27                  	// #39
  4274ac:	strb	w0, [x20, #4]
  4274b0:	b	427948 <ferror@plt+0x25078>
  4274b4:	ldrb	w1, [x0, #1]
  4274b8:	cmp	w1, #0x3a
  4274bc:	b.ne	427494 <ferror@plt+0x24bc4>  // b.any
  4274c0:	ldrb	w1, [x0, #2]
  4274c4:	and	w1, w1, #0xfffffffb
  4274c8:	and	w1, w1, #0xff
  4274cc:	cmp	w1, #0x3a
  4274d0:	b.eq	427494 <ferror@plt+0x24bc4>  // b.none
  4274d4:	b	427948 <ferror@plt+0x25078>
  4274d8:	mov	w0, #0x2                   	// #2
  4274dc:	strb	w0, [x20, #4]
  4274e0:	ldr	x0, [x21]
  4274e4:	ldrb	w1, [x0]
  4274e8:	cmp	w1, #0x3d
  4274ec:	b.eq	42752c <ferror@plt+0x24c5c>  // b.none
  4274f0:	cmp	w1, #0x3e
  4274f4:	b.ne	427948 <ferror@plt+0x25078>  // b.any
  4274f8:	add	x0, x0, #0x1
  4274fc:	str	x0, [x21]
  427500:	mov	w0, #0xc                   	// #12
  427504:	strb	w0, [x20, #4]
  427508:	ldr	x0, [x21]
  42750c:	ldrb	w1, [x0]
  427510:	cmp	w1, #0x3d
  427514:	b.ne	427948 <ferror@plt+0x25078>  // b.any
  427518:	add	x0, x0, #0x1
  42751c:	str	x0, [x21]
  427520:	mov	w0, #0x23                  	// #35
  427524:	strb	w0, [x20, #4]
  427528:	b	427948 <ferror@plt+0x25078>
  42752c:	add	x0, x0, #0x1
  427530:	str	x0, [x21]
  427534:	mov	w0, #0x19                  	// #25
  427538:	strb	w0, [x20, #4]
  42753c:	b	427948 <ferror@plt+0x25078>
  427540:	mov	w0, #0x8                   	// #8
  427544:	strb	w0, [x20, #4]
  427548:	ldr	x0, [x21]
  42754c:	ldrb	w1, [x0]
  427550:	cmp	w1, #0x3d
  427554:	b.eq	427590 <ferror@plt+0x24cc0>  // b.none
  427558:	ldrb	w2, [x19, #1126]
  42755c:	cbz	w2, 427948 <ferror@plt+0x25078>
  427560:	cmp	w1, #0x3a
  427564:	b.eq	4275a4 <ferror@plt+0x24cd4>  // b.none
  427568:	cmp	w1, #0x3e
  42756c:	b.ne	427948 <ferror@plt+0x25078>  // b.any
  427570:	add	x0, x0, #0x1
  427574:	str	x0, [x21]
  427578:	ldrh	w0, [x20, #6]
  42757c:	orr	w0, w0, #0x2
  427580:	strh	w0, [x20, #6]
  427584:	mov	w0, #0x2a                  	// #42
  427588:	strb	w0, [x20, #4]
  42758c:	b	427948 <ferror@plt+0x25078>
  427590:	add	x0, x0, #0x1
  427594:	str	x0, [x21]
  427598:	mov	w0, #0x1f                  	// #31
  42759c:	strb	w0, [x20, #4]
  4275a0:	b	427948 <ferror@plt+0x25078>
  4275a4:	add	x0, x0, #0x1
  4275a8:	str	x0, [x21]
  4275ac:	ldrh	w0, [x20, #6]
  4275b0:	orr	w0, w0, #0x2
  4275b4:	strh	w0, [x20, #6]
  4275b8:	mov	w0, #0x25                  	// #37
  4275bc:	strb	w0, [x20, #4]
  4275c0:	ldr	x0, [x21]
  4275c4:	ldrb	w1, [x0]
  4275c8:	cmp	w1, #0x25
  4275cc:	b.ne	427948 <ferror@plt+0x25078>  // b.any
  4275d0:	ldrb	w1, [x0, #1]
  4275d4:	cmp	w1, #0x3a
  4275d8:	b.ne	427948 <ferror@plt+0x25078>  // b.any
  4275dc:	add	x0, x0, #0x2
  4275e0:	str	x0, [x21]
  4275e4:	mov	w0, #0x26                  	// #38
  4275e8:	strb	w0, [x20, #4]
  4275ec:	str	wzr, [x20, #8]
  4275f0:	b	427948 <ferror@plt+0x25078>
  4275f4:	mov	w0, #0x30                  	// #48
  4275f8:	strb	w0, [x20, #4]
  4275fc:	ldr	x2, [x21]
  427600:	ldrb	w1, [x2]
  427604:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1f094>
  427608:	add	x0, x0, #0xa68
  42760c:	ldrh	w0, [x0, w1, sxtw #1]
  427610:	tbnz	w0, #2, 427640 <ferror@plt+0x24d70>
  427614:	cmp	w1, #0x2e
  427618:	b.eq	427678 <ferror@plt+0x24da8>  // b.none
  42761c:	cmp	w1, #0x2a
  427620:	b.ne	427948 <ferror@plt+0x25078>  // b.any
  427624:	ldrb	w0, [x19, #1120]
  427628:	cbz	w0, 427948 <ferror@plt+0x25078>
  42762c:	add	x2, x2, #0x1
  427630:	str	x2, [x21]
  427634:	mov	w0, #0x33                  	// #51
  427638:	strb	w0, [x20, #4]
  42763c:	b	427948 <ferror@plt+0x25078>
  427640:	str	wzr, [sp, #128]
  427644:	strb	wzr, [sp, #132]
  427648:	str	wzr, [sp, #136]
  42764c:	mov	w0, #0x37                  	// #55
  427650:	strb	w0, [x20, #4]
  427654:	add	x2, sp, #0x80
  427658:	add	x1, x20, #0x8
  42765c:	mov	x0, x19
  427660:	bl	425490 <ferror@plt+0x22bc0>
  427664:	add	x2, sp, #0x80
  427668:	mov	x1, x20
  42766c:	mov	x0, x19
  427670:	bl	42489c <ferror@plt+0x21fcc>
  427674:	b	427a9c <ferror@plt+0x251cc>
  427678:	ldrb	w0, [x2, #1]
  42767c:	cmp	w0, #0x2e
  427680:	b.ne	427948 <ferror@plt+0x25078>  // b.any
  427684:	add	x2, x2, #0x2
  427688:	str	x2, [x21]
  42768c:	mov	w0, #0x2c                  	// #44
  427690:	strb	w0, [x20, #4]
  427694:	b	427948 <ferror@plt+0x25078>
  427698:	mov	w0, #0x4                   	// #4
  42769c:	strb	w0, [x20, #4]
  4276a0:	ldr	x0, [x21]
  4276a4:	ldrb	w1, [x0]
  4276a8:	cmp	w1, #0x2b
  4276ac:	b.eq	4276cc <ferror@plt+0x24dfc>  // b.none
  4276b0:	cmp	w1, #0x3d
  4276b4:	b.ne	427948 <ferror@plt+0x25078>  // b.any
  4276b8:	add	x0, x0, #0x1
  4276bc:	str	x0, [x21]
  4276c0:	mov	w0, #0x1b                  	// #27
  4276c4:	strb	w0, [x20, #4]
  4276c8:	b	427948 <ferror@plt+0x25078>
  4276cc:	add	x0, x0, #0x1
  4276d0:	str	x0, [x21]
  4276d4:	mov	w0, #0x2d                  	// #45
  4276d8:	strb	w0, [x20, #4]
  4276dc:	b	427948 <ferror@plt+0x25078>
  4276e0:	mov	w0, #0x5                   	// #5
  4276e4:	strb	w0, [x20, #4]
  4276e8:	ldr	x0, [x21]
  4276ec:	ldrb	w1, [x0]
  4276f0:	cmp	w1, #0x3e
  4276f4:	b.eq	42771c <ferror@plt+0x24e4c>  // b.none
  4276f8:	cmp	w1, #0x2d
  4276fc:	b.eq	427758 <ferror@plt+0x24e88>  // b.none
  427700:	cmp	w1, #0x3d
  427704:	b.ne	427948 <ferror@plt+0x25078>  // b.any
  427708:	add	x0, x0, #0x1
  42770c:	str	x0, [x21]
  427710:	mov	w0, #0x1c                  	// #28
  427714:	strb	w0, [x20, #4]
  427718:	b	427948 <ferror@plt+0x25078>
  42771c:	add	x0, x0, #0x1
  427720:	str	x0, [x21]
  427724:	mov	w0, #0x2f                  	// #47
  427728:	strb	w0, [x20, #4]
  42772c:	ldr	x0, [x21]
  427730:	ldrb	w1, [x0]
  427734:	cmp	w1, #0x2a
  427738:	b.ne	427948 <ferror@plt+0x25078>  // b.any
  42773c:	ldrb	w1, [x19, #1120]
  427740:	cbz	w1, 427948 <ferror@plt+0x25078>
  427744:	add	x0, x0, #0x1
  427748:	str	x0, [x21]
  42774c:	mov	w0, #0x32                  	// #50
  427750:	strb	w0, [x20, #4]
  427754:	b	427948 <ferror@plt+0x25078>
  427758:	add	x0, x0, #0x1
  42775c:	str	x0, [x21]
  427760:	mov	w0, #0x2e                  	// #46
  427764:	strb	w0, [x20, #4]
  427768:	b	427948 <ferror@plt+0x25078>
  42776c:	mov	w0, #0x9                   	// #9
  427770:	strb	w0, [x20, #4]
  427774:	ldr	x0, [x21]
  427778:	ldrb	w1, [x0]
  42777c:	cmp	w1, #0x26
  427780:	b.eq	4277a0 <ferror@plt+0x24ed0>  // b.none
  427784:	cmp	w1, #0x3d
  427788:	b.ne	427948 <ferror@plt+0x25078>  // b.any
  42778c:	add	x0, x0, #0x1
  427790:	str	x0, [x21]
  427794:	mov	w0, #0x20                  	// #32
  427798:	strb	w0, [x20, #4]
  42779c:	b	427948 <ferror@plt+0x25078>
  4277a0:	add	x0, x0, #0x1
  4277a4:	str	x0, [x21]
  4277a8:	mov	w0, #0xf                   	// #15
  4277ac:	strb	w0, [x20, #4]
  4277b0:	b	427948 <ferror@plt+0x25078>
  4277b4:	mov	w0, #0xa                   	// #10
  4277b8:	strb	w0, [x20, #4]
  4277bc:	ldr	x0, [x21]
  4277c0:	ldrb	w1, [x0]
  4277c4:	cmp	w1, #0x7c
  4277c8:	b.eq	4277e8 <ferror@plt+0x24f18>  // b.none
  4277cc:	cmp	w1, #0x3d
  4277d0:	b.ne	427948 <ferror@plt+0x25078>  // b.any
  4277d4:	add	x0, x0, #0x1
  4277d8:	str	x0, [x21]
  4277dc:	mov	w0, #0x21                  	// #33
  4277e0:	strb	w0, [x20, #4]
  4277e4:	b	427948 <ferror@plt+0x25078>
  4277e8:	add	x0, x0, #0x1
  4277ec:	str	x0, [x21]
  4277f0:	mov	w0, #0x10                  	// #16
  4277f4:	strb	w0, [x20, #4]
  4277f8:	b	427948 <ferror@plt+0x25078>
  4277fc:	mov	w0, #0x12                  	// #18
  427800:	strb	w0, [x20, #4]
  427804:	ldr	x0, [x21]
  427808:	ldrb	w1, [x0]
  42780c:	cmp	w1, #0x3a
  427810:	b.eq	427844 <ferror@plt+0x24f74>  // b.none
  427814:	cmp	w1, #0x3e
  427818:	b.ne	427948 <ferror@plt+0x25078>  // b.any
  42781c:	ldrb	w1, [x19, #1126]
  427820:	cbz	w1, 427948 <ferror@plt+0x25078>
  427824:	add	x0, x0, #0x1
  427828:	str	x0, [x21]
  42782c:	ldrh	w0, [x20, #6]
  427830:	orr	w0, w0, #0x2
  427834:	strh	w0, [x20, #6]
  427838:	mov	w0, #0x28                  	// #40
  42783c:	strb	w0, [x20, #4]
  427840:	b	427948 <ferror@plt+0x25078>
  427844:	ldrb	w1, [x19, #1120]
  427848:	cbz	w1, 427948 <ferror@plt+0x25078>
  42784c:	add	x0, x0, #0x1
  427850:	str	x0, [x21]
  427854:	mov	w0, #0x31                  	// #49
  427858:	strb	w0, [x20, #4]
  42785c:	b	427948 <ferror@plt+0x25078>
  427860:	mov	w0, #0x6                   	// #6
  427864:	strb	w0, [x20, #4]
  427868:	ldr	x0, [x21]
  42786c:	ldrb	w1, [x0]
  427870:	cmp	w1, #0x3d
  427874:	b.ne	427948 <ferror@plt+0x25078>  // b.any
  427878:	add	x0, x0, #0x1
  42787c:	str	x0, [x21]
  427880:	mov	w0, #0x1d                  	// #29
  427884:	strb	w0, [x20, #4]
  427888:	b	427948 <ferror@plt+0x25078>
  42788c:	strb	wzr, [x20, #4]
  427890:	ldr	x0, [x21]
  427894:	ldrb	w1, [x0]
  427898:	cmp	w1, #0x3d
  42789c:	b.ne	427948 <ferror@plt+0x25078>  // b.any
  4278a0:	add	x0, x0, #0x1
  4278a4:	str	x0, [x21]
  4278a8:	mov	w0, #0x17                  	// #23
  4278ac:	strb	w0, [x20, #4]
  4278b0:	b	427948 <ferror@plt+0x25078>
  4278b4:	mov	w0, #0x1                   	// #1
  4278b8:	strb	w0, [x20, #4]
  4278bc:	ldr	x0, [x21]
  4278c0:	ldrb	w1, [x0]
  4278c4:	cmp	w1, #0x3d
  4278c8:	b.ne	427948 <ferror@plt+0x25078>  // b.any
  4278cc:	add	x0, x0, #0x1
  4278d0:	str	x0, [x21]
  4278d4:	mov	w0, #0x18                  	// #24
  4278d8:	strb	w0, [x20, #4]
  4278dc:	b	427948 <ferror@plt+0x25078>
  4278e0:	mov	w0, #0xb                   	// #11
  4278e4:	strb	w0, [x20, #4]
  4278e8:	ldr	x0, [x21]
  4278ec:	ldrb	w1, [x0]
  4278f0:	cmp	w1, #0x3d
  4278f4:	b.ne	427948 <ferror@plt+0x25078>  // b.any
  4278f8:	add	x0, x0, #0x1
  4278fc:	str	x0, [x21]
  427900:	mov	w0, #0x22                  	// #34
  427904:	strb	w0, [x20, #4]
  427908:	b	427948 <ferror@plt+0x25078>
  42790c:	mov	w0, #0x25                  	// #37
  427910:	strb	w0, [x20, #4]
  427914:	ldr	x0, [x21]
  427918:	ldrb	w1, [x0]
  42791c:	cmp	w1, #0x23
  427920:	b.eq	42792c <ferror@plt+0x2505c>  // b.none
  427924:	str	wzr, [x20, #8]
  427928:	b	427a9c <ferror@plt+0x251cc>
  42792c:	add	x0, x0, #0x1
  427930:	str	x0, [x21]
  427934:	mov	w0, #0x26                  	// #38
  427938:	strb	w0, [x20, #4]
  42793c:	b	427924 <ferror@plt+0x25054>
  427940:	mov	w0, #0x11                  	// #17
  427944:	strb	w0, [x20, #4]
  427948:	ldr	w0, [x20]
  42794c:	cmp	w0, #0x1
  427950:	b.ls	4279b0 <ferror@plt+0x250e0>  // b.plast
  427954:	ldr	w0, [x21, #56]
  427958:	ldr	x2, [x21, #48]
  42795c:	lsl	x0, x0, #4
  427960:	ldr	x1, [x21]
  427964:	ldr	x0, [x2, x0]
  427968:	cmp	x1, x0
  42796c:	b.cc	427978 <ferror@plt+0x250a8>  // b.lo, b.ul, b.last
  427970:	ldr	x0, [x19, #8]
  427974:	cbz	x0, 427af0 <ferror@plt+0x25220>
  427978:	ldr	w22, [x20]
  42797c:	ldr	x1, [x21]
  427980:	ldr	x0, [x21, #8]
  427984:	sub	w1, w1, w0
  427988:	ldr	x0, [x19, #40]
  42798c:	bl	4289e0 <ferror@plt+0x26110>
  427990:	mov	x2, #0x0                   	// #0
  427994:	bfxil	x2, x22, #0, #32
  427998:	bfi	x2, x0, #32, #32
  42799c:	mov	x3, #0x0                   	// #0
  4279a0:	ldr	w1, [x20]
  4279a4:	ldr	x0, [x19, #40]
  4279a8:	bl	428d00 <ferror@plt+0x26430>
  4279ac:	str	w0, [x20]
  4279b0:	mov	x0, x20
  4279b4:	ldp	x19, x20, [sp, #16]
  4279b8:	ldp	x21, x22, [sp, #32]
  4279bc:	ldp	x23, x24, [sp, #48]
  4279c0:	ldp	x25, x26, [sp, #64]
  4279c4:	ldp	x29, x30, [sp], #144
  4279c8:	ret
  4279cc:	mov	w0, #0xe                   	// #14
  4279d0:	strb	w0, [x20, #4]
  4279d4:	b	427948 <ferror@plt+0x25078>
  4279d8:	mov	w0, #0x13                  	// #19
  4279dc:	strb	w0, [x20, #4]
  4279e0:	b	427948 <ferror@plt+0x25078>
  4279e4:	mov	w0, #0x14                  	// #20
  4279e8:	strb	w0, [x20, #4]
  4279ec:	b	427948 <ferror@plt+0x25078>
  4279f0:	mov	w0, #0x15                  	// #21
  4279f4:	strb	w0, [x20, #4]
  4279f8:	b	427948 <ferror@plt+0x25078>
  4279fc:	mov	w0, #0x27                  	// #39
  427a00:	strb	w0, [x20, #4]
  427a04:	b	427948 <ferror@plt+0x25078>
  427a08:	mov	w0, #0x28                  	// #40
  427a0c:	strb	w0, [x20, #4]
  427a10:	b	427948 <ferror@plt+0x25078>
  427a14:	mov	w0, #0x29                  	// #41
  427a18:	strb	w0, [x20, #4]
  427a1c:	b	427948 <ferror@plt+0x25078>
  427a20:	mov	w0, #0x2a                  	// #42
  427a24:	strb	w0, [x20, #4]
  427a28:	b	427948 <ferror@plt+0x25078>
  427a2c:	mov	w0, #0x2b                  	// #43
  427a30:	strb	w0, [x20, #4]
  427a34:	b	427948 <ferror@plt+0x25078>
  427a38:	mov	w0, #0x34                  	// #52
  427a3c:	strb	w0, [x20, #4]
  427a40:	b	427948 <ferror@plt+0x25078>
  427a44:	ldr	x22, [x21]
  427a48:	sub	x22, x22, #0x1
  427a4c:	str	x22, [x21]
  427a50:	str	wzr, [sp, #128]
  427a54:	strb	wzr, [sp, #132]
  427a58:	str	wzr, [sp, #136]
  427a5c:	add	x2, sp, #0x80
  427a60:	mov	w1, #0x1                   	// #1
  427a64:	mov	x0, x19
  427a68:	bl	4236b0 <ferror@plt+0x20de0>
  427a6c:	and	w0, w0, #0xff
  427a70:	cbnz	w0, 427ab8 <ferror@plt+0x251e8>
  427a74:	ldr	x0, [x21]
  427a78:	add	x0, x0, #0x1
  427a7c:	str	x0, [x21]
  427a80:	ldr	x2, [x21]
  427a84:	mov	w4, #0x3d                  	// #61
  427a88:	mov	w3, #0x1                   	// #1
  427a8c:	sub	x2, x2, #0x1
  427a90:	mov	x1, x20
  427a94:	mov	x0, x19
  427a98:	bl	4255e4 <ferror@plt+0x22d14>
  427a9c:	ldr	w0, [x20]
  427aa0:	cmp	w0, #0x1
  427aa4:	b.ls	4279b0 <ferror@plt+0x250e0>  // b.plast
  427aa8:	ldrb	w0, [x20, #4]
  427aac:	cmp	w0, #0x16
  427ab0:	b.eq	4279b0 <ferror@plt+0x250e0>  // b.none
  427ab4:	b	427954 <ferror@plt+0x25084>
  427ab8:	mov	w0, #0x35                  	// #53
  427abc:	strb	w0, [x20, #4]
  427ac0:	add	x4, x20, #0x10
  427ac4:	add	x3, sp, #0x80
  427ac8:	mov	w2, #0x1                   	// #1
  427acc:	mov	x1, x22
  427ad0:	mov	x0, x19
  427ad4:	bl	4237a4 <ferror@plt+0x20ed4>
  427ad8:	str	x0, [x20, #8]
  427adc:	add	x2, sp, #0x80
  427ae0:	mov	x1, x20
  427ae4:	mov	x0, x19
  427ae8:	bl	42489c <ferror@plt+0x21fcc>
  427aec:	b	427a9c <ferror@plt+0x251cc>
  427af0:	mov	w1, #0x0                   	// #0
  427af4:	mov	x0, x19
  427af8:	bl	423edc <ferror@plt+0x2160c>
  427afc:	b	427978 <ferror@plt+0x250a8>
  427b00:	add	x0, x24, #0xc
  427b04:	b	427b2c <ferror@plt+0x2525c>
  427b08:	mov	x2, #0x4                   	// #4
  427b0c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a094>
  427b10:	add	x1, x1, #0xe48
  427b14:	add	x0, x24, #0xb
  427b18:	bl	4025e0 <memcmp@plt>
  427b1c:	cbnz	w0, 426964 <ferror@plt+0x24094>
  427b20:	add	x0, x24, #0xe
  427b24:	mov	w1, #0x1                   	// #1
  427b28:	str	w1, [sp, #104]
  427b2c:	cmp	w26, #0x69
  427b30:	b.eq	426fbc <ferror@plt+0x246ec>  // b.none
  427b34:	ldrb	w26, [x0]
  427b38:	mov	x24, x0
  427b3c:	b	426cb8 <ferror@plt+0x243e8>
  427b40:	sub	w1, w0, #0x3
  427b44:	and	w1, w1, #0xff
  427b48:	cmp	w1, #0x1
  427b4c:	b.hi	426964 <ferror@plt+0x24094>  // b.pmore
  427b50:	ldrb	w26, [x27, #1]
  427b54:	cmp	w26, #0x40
  427b58:	cset	w1, eq  // eq = none
  427b5c:	cmp	w26, #0x2d
  427b60:	csinc	w1, w1, wzr, ne  // ne = any
  427b64:	str	w1, [sp, #104]
  427b68:	cbz	w1, 426bec <ferror@plt+0x2431c>
  427b6c:	ldr	x0, [x19]
  427b70:	ldr	x0, [x0]
  427b74:	sub	x0, x0, x24
  427b78:	sub	x0, x0, #0x1
  427b7c:	cmp	x0, #0xa
  427b80:	b.ls	426964 <ferror@plt+0x24094>  // b.plast
  427b84:	mov	x2, #0xb                   	// #11
  427b88:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a094>
  427b8c:	add	x1, x1, #0xdd0
  427b90:	add	x0, x27, #0x2
  427b94:	bl	4025e0 <memcmp@plt>
  427b98:	cbnz	w0, 426964 <ferror@plt+0x24094>
  427b9c:	mov	x0, #0xb                   	// #11
  427ba0:	cmp	w26, #0x40
  427ba4:	b.eq	426bd8 <ferror@plt+0x24308>  // b.none
  427ba8:	add	x0, x0, #0x1
  427bac:	add	x24, x24, x0
  427bb0:	ldrb	w0, [x27]
  427bb4:	cmp	w0, #0x2a
  427bb8:	b.eq	4270f8 <ferror@plt+0x24828>  // b.none
  427bbc:	ldrb	w0, [x24]
  427bc0:	cmp	w0, #0xa
  427bc4:	csinc	w25, w25, wzr, ne  // ne = any
  427bc8:	b	426964 <ferror@plt+0x24094>
  427bcc:	stp	x29, x30, [sp, #-48]!
  427bd0:	mov	x29, sp
  427bd4:	stp	x19, x20, [sp, #16]
  427bd8:	str	x21, [sp, #32]
  427bdc:	mov	x19, x0
  427be0:	add	x21, x0, #0x98
  427be4:	b	427c7c <ferror@plt+0x253ac>
  427be8:	bl	424434 <ferror@plt+0x21b64>
  427bec:	str	x0, [x19, #488]
  427bf0:	ldr	x0, [x0, #16]
  427bf4:	str	x0, [x19, #448]
  427bf8:	b	427c90 <ferror@plt+0x253c0>
  427bfc:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  427c00:	add	x2, x2, #0xe58
  427c04:	mov	w1, #0xa1d                 	// #2589
  427c08:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a094>
  427c0c:	add	x0, x0, #0x808
  427c10:	bl	4062a0 <ferror@plt+0x39d0>
  427c14:	mov	x0, x19
  427c18:	bl	426374 <ferror@plt+0x23aa4>
  427c1c:	mov	x20, x0
  427c20:	b	427cc8 <ferror@plt+0x253f8>
  427c24:	ldrb	w0, [x19, #25]
  427c28:	cmp	w0, #0x1
  427c2c:	b.eq	427cdc <ferror@plt+0x2540c>  // b.none
  427c30:	and	w1, w1, #0x1
  427c34:	mov	x0, x19
  427c38:	bl	41af24 <ferror@plt+0x18654>
  427c3c:	cbz	w0, 427ce8 <ferror@plt+0x25418>
  427c40:	ldrb	w0, [x19, #156]
  427c44:	cmp	w0, #0x53
  427c48:	b.eq	427c7c <ferror@plt+0x253ac>  // b.none
  427c4c:	mov	x20, x21
  427c50:	b	427ce8 <ferror@plt+0x25418>
  427c54:	ldrb	w0, [x19, #16]
  427c58:	cbnz	w0, 427d0c <ferror@plt+0x2543c>
  427c5c:	ldrb	w0, [x19, #32]
  427c60:	cbnz	w0, 427d0c <ferror@plt+0x2543c>
  427c64:	strb	wzr, [x19, #440]
  427c68:	ldrb	w0, [x19, #18]
  427c6c:	cbz	w0, 427d0c <ferror@plt+0x2543c>
  427c70:	ldrb	w0, [x20, #4]
  427c74:	cmp	w0, #0x16
  427c78:	b.eq	427d0c <ferror@plt+0x2543c>  // b.none
  427c7c:	ldr	x0, [x19, #488]
  427c80:	ldr	x2, [x19, #448]
  427c84:	ldr	x1, [x0, #24]
  427c88:	cmp	x2, x1
  427c8c:	b.eq	427be8 <ferror@plt+0x25318>  // b.none
  427c90:	ldr	x20, [x19, #448]
  427c94:	ldr	x0, [x19, #488]
  427c98:	ldr	x1, [x0, #16]
  427c9c:	cmp	x20, x1
  427ca0:	b.cc	427bfc <ferror@plt+0x2532c>  // b.lo, b.ul, b.last
  427ca4:	ldr	x0, [x0, #24]
  427ca8:	cmp	x20, x0
  427cac:	b.cs	427bfc <ferror@plt+0x2532c>  // b.hs, b.nlast
  427cb0:	ldr	w0, [x19, #496]
  427cb4:	cbz	w0, 427c14 <ferror@plt+0x25344>
  427cb8:	sub	w0, w0, #0x1
  427cbc:	str	w0, [x19, #496]
  427cc0:	add	x0, x20, #0x18
  427cc4:	str	x0, [x19, #448]
  427cc8:	ldrh	w1, [x20, #6]
  427ccc:	tbz	w1, #6, 427c54 <ferror@plt+0x25384>
  427cd0:	ldrb	w0, [x20, #4]
  427cd4:	cmp	w0, #0x25
  427cd8:	b.eq	427c24 <ferror@plt+0x25354>  // b.none
  427cdc:	ldrb	w0, [x19, #32]
  427ce0:	cmp	w0, #0x0
  427ce4:	csel	x20, x21, x20, ne  // ne = any
  427ce8:	ldr	x3, [x19, #904]
  427cec:	cbz	x3, 427c54 <ferror@plt+0x25384>
  427cf0:	ldrb	w0, [x19, #18]
  427cf4:	cbnz	w0, 427c54 <ferror@plt+0x25384>
  427cf8:	ldrb	w2, [x19, #25]
  427cfc:	mov	x1, x20
  427d00:	mov	x0, x19
  427d04:	blr	x3
  427d08:	b	427c54 <ferror@plt+0x25384>
  427d0c:	mov	x0, x20
  427d10:	ldp	x19, x20, [sp, #16]
  427d14:	ldr	x21, [sp, #32]
  427d18:	ldp	x29, x30, [sp], #48
  427d1c:	ret
  427d20:	stp	x29, x30, [sp, #-64]!
  427d24:	mov	x29, sp
  427d28:	stp	x19, x20, [sp, #16]
  427d2c:	stp	x21, x22, [sp, #32]
  427d30:	mov	x22, x0
  427d34:	mov	w19, w1
  427d38:	ldr	x21, [x0, #136]
  427d3c:	ldr	x20, [x21, #8]
  427d40:	cbnz	x20, 427d50 <ferror@plt+0x25480>
  427d44:	str	x23, [sp, #48]
  427d48:	b	427d74 <ferror@plt+0x254a4>
  427d4c:	mov	x20, x1
  427d50:	mov	x0, x21
  427d54:	bl	424478 <ferror@plt+0x21ba8>
  427d58:	cmp	w0, w19
  427d5c:	b.gt	427d90 <ferror@plt+0x254c0>
  427d60:	sub	w19, w19, w0
  427d64:	ldr	x1, [x20, #8]
  427d68:	mov	x21, x20
  427d6c:	cbnz	x1, 427d4c <ferror@plt+0x2547c>
  427d70:	str	x23, [sp, #48]
  427d74:	ldr	w0, [x22, #500]
  427d78:	add	w0, w0, #0x1
  427d7c:	str	w0, [x22, #500]
  427d80:	ldr	x23, [x22, #904]
  427d84:	str	xzr, [x22, #904]
  427d88:	mov	w21, w19
  427d8c:	b	427de4 <ferror@plt+0x25514>
  427d90:	ldr	w0, [x21, #48]
  427d94:	cmp	w0, #0x1
  427d98:	b.eq	427db0 <ferror@plt+0x254e0>  // b.none
  427d9c:	tst	w0, #0xfffffffd
  427da0:	b.ne	427dc4 <ferror@plt+0x254f4>  // b.any
  427da4:	ldr	x0, [x21, #16]
  427da8:	ldr	x20, [x0, w19, sxtw #3]
  427dac:	b	427e2c <ferror@plt+0x2555c>
  427db0:	sbfiz	x20, x19, #1, #32
  427db4:	add	x19, x20, w19, sxtw
  427db8:	ldr	x20, [x21, #16]
  427dbc:	add	x20, x20, x19, lsl #3
  427dc0:	b	427e2c <ferror@plt+0x2555c>
  427dc4:	str	x23, [sp, #48]
  427dc8:	adrp	x2, 461000 <_obstack_memory_used@@Base+0x1a094>
  427dcc:	add	x2, x2, #0xe68
  427dd0:	mov	w1, #0x9ad                 	// #2477
  427dd4:	adrp	x0, 461000 <_obstack_memory_used@@Base+0x1a094>
  427dd8:	add	x0, x0, #0x808
  427ddc:	bl	4062a0 <ferror@plt+0x39d0>
  427de0:	mov	w21, w1
  427de4:	mov	x0, x22
  427de8:	bl	427bcc <ferror@plt+0x252fc>
  427dec:	mov	x20, x0
  427df0:	ldrb	w0, [x0, #4]
  427df4:	cmp	w0, #0x16
  427df8:	b.eq	427e08 <ferror@plt+0x25538>  // b.none
  427dfc:	sub	w1, w21, #0x1
  427e00:	cbnz	w21, 427de0 <ferror@plt+0x25510>
  427e04:	b	427e0c <ferror@plt+0x2553c>
  427e08:	sub	w1, w21, #0x1
  427e0c:	sub	w1, w19, w1
  427e10:	mov	x0, x22
  427e14:	bl	42b904 <ferror@plt+0x29034>
  427e18:	ldr	w0, [x22, #500]
  427e1c:	sub	w0, w0, #0x1
  427e20:	str	w0, [x22, #500]
  427e24:	str	x23, [x22, #904]
  427e28:	ldr	x23, [sp, #48]
  427e2c:	mov	x0, x20
  427e30:	ldp	x19, x20, [sp, #16]
  427e34:	ldp	x21, x22, [sp, #32]
  427e38:	ldp	x29, x30, [sp], #64
  427e3c:	ret
  427e40:	stp	x29, x30, [sp, #-48]!
  427e44:	mov	x29, sp
  427e48:	stp	x19, x20, [sp, #16]
  427e4c:	str	x21, [sp, #32]
  427e50:	mov	x20, x0
  427e54:	mov	x21, x1
  427e58:	mov	x0, x1
  427e5c:	bl	4246a8 <ferror@plt+0x21dd8>
  427e60:	add	w1, w0, #0x1
  427e64:	mov	x0, x20
  427e68:	bl	42542c <ferror@plt+0x22b5c>
  427e6c:	mov	x19, x0
  427e70:	mov	w3, #0x0                   	// #0
  427e74:	mov	x2, x0
  427e78:	mov	x1, x21
  427e7c:	mov	x0, x20
  427e80:	bl	424774 <ferror@plt+0x21ea4>
  427e84:	strb	wzr, [x0]
  427e88:	mov	x0, x19
  427e8c:	ldp	x19, x20, [sp, #16]
  427e90:	ldr	x21, [sp, #32]
  427e94:	ldp	x29, x30, [sp], #48
  427e98:	ret
  427e9c:	stp	x29, x30, [sp, #-32]!
  427ea0:	mov	x29, sp
  427ea4:	stp	x19, x20, [sp, #16]
  427ea8:	mov	x20, x0
  427eac:	mov	x19, x1
  427eb0:	ldr	x1, [x0, #56]
  427eb4:	ldr	x0, [x1, #16]
  427eb8:	ldr	x2, [x1, #24]
  427ebc:	sub	x2, x2, x0
  427ec0:	cmp	x2, x19
  427ec4:	b.cc	427edc <ferror@plt+0x2560c>  // b.lo, b.ul, b.last
  427ec8:	add	x19, x0, x19
  427ecc:	str	x19, [x1, #16]
  427ed0:	ldp	x19, x20, [sp, #16]
  427ed4:	ldp	x29, x30, [sp], #32
  427ed8:	ret
  427edc:	mov	x1, x19
  427ee0:	mov	x0, x20
  427ee4:	bl	4251d4 <ferror@plt+0x22904>
  427ee8:	mov	x1, x0
  427eec:	ldr	x0, [x20, #56]
  427ef0:	str	x0, [x1]
  427ef4:	str	x1, [x20, #56]
  427ef8:	ldr	x0, [x1, #16]
  427efc:	b	427ec8 <ferror@plt+0x255f8>
  427f00:	stp	x29, x30, [sp, #-48]!
  427f04:	mov	x29, sp
  427f08:	stp	x19, x20, [sp, #16]
  427f0c:	str	x21, [sp, #32]
  427f10:	mov	x19, x1
  427f14:	ldr	x2, [x0, #56]
  427f18:	ldr	x21, [x2, #16]
  427f1c:	ldr	x0, [x0, #1088]
  427f20:	ldr	x1, [x0, #104]
  427f24:	cbz	x1, 427f54 <ferror@plt+0x25684>
  427f28:	mov	x0, x19
  427f2c:	blr	x1
  427f30:	mov	x20, x0
  427f34:	mov	x2, x19
  427f38:	mov	x1, x21
  427f3c:	bl	402260 <memcpy@plt>
  427f40:	mov	x0, x20
  427f44:	ldp	x19, x20, [sp, #16]
  427f48:	ldr	x21, [sp, #32]
  427f4c:	ldp	x29, x30, [sp], #48
  427f50:	ret
  427f54:	add	x19, x21, x19
  427f58:	str	x19, [x2, #16]
  427f5c:	mov	x20, x21
  427f60:	b	427f40 <ferror@plt+0x25670>
  427f64:	ldrb	w1, [x0, #4]
  427f68:	sbfiz	x2, x1, #4, #32
  427f6c:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b094>
  427f70:	add	x0, x0, #0x2d0
  427f74:	ldr	w0, [x0, x2]
  427f78:	cmp	w0, #0x2
  427f7c:	b.eq	427f8c <ferror@plt+0x256bc>  // b.none
  427f80:	b.hi	427f90 <ferror@plt+0x256c0>  // b.pmore
  427f84:	cbz	w0, 427fc4 <ferror@plt+0x256f4>
  427f88:	mov	w0, #0x0                   	// #0
  427f8c:	ret
  427f90:	cmp	w0, #0x3
  427f94:	b.ne	427fbc <ferror@plt+0x256ec>  // b.any
  427f98:	cmp	w1, #0x50
  427f9c:	b.eq	427f8c <ferror@plt+0x256bc>  // b.none
  427fa0:	mov	w0, #0x1                   	// #1
  427fa4:	cmp	w1, #0x53
  427fa8:	b.eq	427f8c <ferror@plt+0x256bc>  // b.none
  427fac:	cmp	w1, #0x51
  427fb0:	cset	w0, ne  // ne = any
  427fb4:	add	w0, w0, #0x5
  427fb8:	b	427f8c <ferror@plt+0x256bc>
  427fbc:	mov	w0, #0x6                   	// #6
  427fc0:	b	427f8c <ferror@plt+0x256bc>
  427fc4:	cmp	w1, #0x26
  427fc8:	mov	w0, #0x4                   	// #4
  427fcc:	mov	w1, #0x6                   	// #6
  427fd0:	csel	w0, w0, w1, eq  // eq = none
  427fd4:	b	427f8c <ferror@plt+0x256bc>
  427fd8:	str	w1, [x0, #1408]
  427fdc:	ret
  427fe0:	str	wzr, [x0, #1408]
  427fe4:	ret
  427fe8:	ldr	w2, [x0]
  427fec:	ldr	w1, [x0, #4]
  427ff0:	add	w2, w2, w1
  427ff4:	ldr	x3, [x0, #16]
  427ff8:	ldr	w1, [x0, #8]
  427ffc:	add	w0, w1, w3
  428000:	add	w0, w2, w0
  428004:	ret
  428008:	mov	x2, x0
  42800c:	ldr	x3, [x0]
  428010:	ldr	x0, [x1]
  428014:	cmp	x3, x0
  428018:	b.eq	428024 <ferror@plt+0x25754>  // b.none
  42801c:	mov	w0, #0x0                   	// #0
  428020:	ret
  428024:	ldr	w4, [x2, #8]
  428028:	ldr	w3, [x1, #8]
  42802c:	mov	w0, #0x0                   	// #0
  428030:	cmp	w4, w3
  428034:	b.ne	428020 <ferror@plt+0x25750>  // b.any
  428038:	ldr	x2, [x2, #16]
  42803c:	ldr	x0, [x1, #16]
  428040:	cmp	x2, x0
  428044:	cset	w0, eq  // eq = none
  428048:	b	428020 <ferror@plt+0x25750>
  42804c:	ldr	x2, [x0]
  428050:	ldr	x1, [x1]
  428054:	add	x2, x2, x1
  428058:	str	x2, [x0]
  42805c:	mov	w0, #0x1                   	// #1
  428060:	ret
  428064:	mov	x8, x0
  428068:	tbnz	w1, #31, 4280c8 <ferror@plt+0x257f8>
  42806c:	cmp	x8, #0x0
  428070:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  428074:	b.ls	42812c <ferror@plt+0x2585c>  // b.plast
  428078:	ldr	w4, [x8, #16]
  42807c:	ldr	x7, [x8]
  428080:	sbfiz	x2, x4, #1, #32
  428084:	add	x2, x2, w4, sxtw
  428088:	lsl	x2, x2, #3
  42808c:	add	x0, x7, x2
  428090:	ldr	w2, [x7, x2]
  428094:	mov	w3, #0x0                   	// #0
  428098:	cmp	w1, w2
  42809c:	b.cc	42810c <ferror@plt+0x2583c>  // b.lo, b.ul, b.last
  4280a0:	ldr	w2, [x8, #12]
  4280a4:	add	w3, w4, #0x1
  4280a8:	cmp	w3, w2
  4280ac:	b.eq	428128 <ferror@plt+0x25858>  // b.none
  4280b0:	ldr	w3, [x0, #24]
  4280b4:	cmp	w1, w3
  4280b8:	b.cc	428128 <ferror@plt+0x25858>  // b.lo, b.ul, b.last
  4280bc:	mov	w3, w4
  4280c0:	mov	w4, w2
  4280c4:	b	42810c <ferror@plt+0x2583c>
  4280c8:	and	x0, x1, #0x7fffffff
  4280cc:	lsl	w1, w1, #1
  4280d0:	add	x1, x1, x0
  4280d4:	lsl	x1, x1, #3
  4280d8:	ldr	x0, [x8, #104]
  4280dc:	ldr	w1, [x0, x1]
  4280e0:	b	42806c <ferror@plt+0x2579c>
  4280e4:	add	w2, w3, w4
  4280e8:	lsr	w5, w2, #1
  4280ec:	lsr	w6, w2, #1
  4280f0:	and	x2, x2, #0xfffffffe
  4280f4:	add	x2, x2, x6
  4280f8:	lsl	x2, x2, #3
  4280fc:	ldr	w2, [x7, x2]
  428100:	cmp	w1, w2
  428104:	csel	w3, w3, w5, cc  // cc = lo, ul, last
  428108:	csel	w4, w5, w4, cc  // cc = lo, ul, last
  42810c:	sub	w2, w4, w3
  428110:	cmp	w2, #0x1
  428114:	b.hi	4280e4 <ferror@plt+0x25814>  // b.pmore
  428118:	str	w3, [x8, #16]
  42811c:	sbfiz	x0, x3, #1, #32
  428120:	add	x0, x0, w3, sxtw
  428124:	add	x0, x7, x0, lsl #3
  428128:	ret
  42812c:	mov	x0, #0x0                   	// #0
  428130:	b	428128 <ferror@plt+0x25858>
  428134:	stp	x29, x30, [sp, #-80]!
  428138:	mov	x29, sp
  42813c:	stp	x19, x20, [sp, #16]
  428140:	stp	x21, x22, [sp, #32]
  428144:	stp	x25, x26, [sp, #64]
  428148:	mov	x20, x0
  42814c:	mov	w21, w1
  428150:	mov	w0, #0x6fffffff            	// #1879048191
  428154:	cmp	w1, w0
  428158:	b.ls	428224 <ferror@plt+0x25954>  // b.plast
  42815c:	ldr	w0, [x20, #32]
  428160:	add	x22, x20, #0x24
  428164:	ldr	w19, [x20, #36]
  428168:	cmp	w0, w19
  42816c:	b.eq	4281a0 <ferror@plt+0x258d0>  // b.none
  428170:	ubfiz	x19, x19, #5, #32
  428174:	ldr	x0, [x20, #24]
  428178:	add	x0, x0, x19
  42817c:	ldr	w1, [x22]
  428180:	add	w1, w1, #0x1
  428184:	str	w1, [x22]
  428188:	str	w21, [x0]
  42818c:	ldp	x19, x20, [sp, #16]
  428190:	ldp	x21, x22, [sp, #32]
  428194:	ldp	x25, x26, [sp, #64]
  428198:	ldp	x29, x30, [sp], #80
  42819c:	ret
  4281a0:	stp	x23, x24, [sp, #48]
  4281a4:	add	x25, x20, #0x20
  4281a8:	cbz	w0, 428268 <ferror@plt+0x25998>
  4281ac:	lsl	w0, w0, #1
  4281b0:	mov	w1, #0x6fffffff            	// #1879048191
  4281b4:	cmp	w21, w1
  4281b8:	b.ls	42825c <ferror@plt+0x2598c>  // b.plast
  4281bc:	ldr	x26, [x20, #24]
  4281c0:	mov	x24, #0x20                  	// #32
  4281c4:	mov	w0, w0
  4281c8:	ldr	x1, [x20, #80]
  4281cc:	mul	x0, x0, x24
  4281d0:	blr	x1
  4281d4:	udiv	x23, x0, x24
  4281d8:	and	x1, x23, #0xffffffff
  4281dc:	ldr	x2, [x20, #72]
  4281e0:	mul	x1, x1, x24
  4281e4:	mov	x0, x26
  4281e8:	blr	x2
  4281ec:	mov	x26, x0
  4281f0:	sub	w2, w23, w19
  4281f4:	mov	w0, w19
  4281f8:	mul	x2, x2, x24
  4281fc:	mov	w1, #0x0                   	// #0
  428200:	madd	x0, x0, x24, x26
  428204:	bl	402490 <memset@plt>
  428208:	mov	w0, #0x6fffffff            	// #1879048191
  42820c:	cmp	w21, w0
  428210:	b.ls	428270 <ferror@plt+0x259a0>  // b.plast
  428214:	str	x26, [x20, #24]
  428218:	str	w23, [x25]
  42821c:	ldp	x23, x24, [sp, #48]
  428220:	b	428170 <ferror@plt+0x258a0>
  428224:	ldr	w0, [x20, #8]
  428228:	add	x22, x20, #0xc
  42822c:	ldr	w19, [x20, #12]
  428230:	cmp	w0, w19
  428234:	b.eq	42824c <ferror@plt+0x2597c>  // b.none
  428238:	ubfiz	x0, x19, #1, #32
  42823c:	add	x19, x0, w19, uxtw
  428240:	ldr	x0, [x20]
  428244:	add	x0, x0, x19, lsl #3
  428248:	b	42817c <ferror@plt+0x258ac>
  42824c:	stp	x23, x24, [sp, #48]
  428250:	add	x25, x20, #0x8
  428254:	cbnz	w0, 4281ac <ferror@plt+0x258dc>
  428258:	mov	w0, #0x100                 	// #256
  42825c:	ldr	x26, [x20]
  428260:	mov	x24, #0x18                  	// #24
  428264:	b	4281c4 <ferror@plt+0x258f4>
  428268:	mov	w0, #0x100                 	// #256
  42826c:	b	4281bc <ferror@plt+0x258ec>
  428270:	str	x26, [x20]
  428274:	str	w23, [x25]
  428278:	ldp	x23, x24, [sp, #48]
  42827c:	b	428238 <ferror@plt+0x25968>
  428280:	ldr	x0, [x0, #88]
  428284:	cbz	x0, 42829c <ferror@plt+0x259cc>
  428288:	stp	x29, x30, [sp, #-16]!
  42828c:	mov	x29, sp
  428290:	bl	446088 <ferror@plt+0x437b8>
  428294:	ldp	x29, x30, [sp], #16
  428298:	ret
  42829c:	ret
  4282a0:	stp	x29, x30, [sp, #-48]!
  4282a4:	mov	x29, sp
  4282a8:	stp	x19, x20, [sp, #16]
  4282ac:	mov	x20, x0
  4282b0:	mov	x3, #0x0                   	// #0
  4282b4:	adrp	x2, 428000 <ferror@plt+0x25730>
  4282b8:	add	x2, x2, #0x8
  4282bc:	adrp	x1, 427000 <ferror@plt+0x24730>
  4282c0:	add	x1, x1, #0xfe8
  4282c4:	mov	x0, #0x64                  	// #100
  4282c8:	bl	446040 <ferror@plt+0x43770>
  4282cc:	str	x0, [x20, #88]
  4282d0:	ldr	w0, [x20, #96]
  4282d4:	cbz	w0, 428314 <ferror@plt+0x25a44>
  4282d8:	str	x21, [sp, #32]
  4282dc:	mov	w19, #0x0                   	// #0
  4282e0:	mov	w21, #0x1                   	// #1
  4282e4:	ubfiz	x1, x19, #1, #32
  4282e8:	add	x1, x1, w19, uxtw
  4282ec:	ldr	x0, [x20, #104]
  4282f0:	mov	w2, w21
  4282f4:	add	x1, x0, x1, lsl #3
  4282f8:	ldr	x0, [x20, #88]
  4282fc:	bl	4465bc <ferror@plt+0x43cec>
  428300:	add	w19, w19, #0x1
  428304:	ldr	w0, [x20, #96]
  428308:	cmp	w0, w19
  42830c:	b.hi	4282e4 <ferror@plt+0x25a14>  // b.pmore
  428310:	ldr	x21, [sp, #32]
  428314:	ldp	x19, x20, [sp, #16]
  428318:	ldp	x29, x30, [sp], #48
  42831c:	ret
  428320:	and	x2, x1, #0x7fffffff
  428324:	ldr	x0, [x0, #104]
  428328:	lsl	w1, w1, #1
  42832c:	add	x1, x1, x2
  428330:	add	x1, x0, x1, lsl #3
  428334:	ldr	x0, [x1, #16]
  428338:	ret
  42833c:	and	x2, x1, #0x7fffffff
  428340:	ldr	x0, [x0, #104]
  428344:	lsl	w1, w1, #1
  428348:	add	x1, x1, x2
  42834c:	lsl	x1, x1, #3
  428350:	ldr	w0, [x0, x1]
  428354:	ret
  428358:	stp	x29, x30, [sp, #-32]!
  42835c:	mov	x29, sp
  428360:	stp	x19, x20, [sp, #16]
  428364:	mov	x19, x0
  428368:	mov	w20, w1
  42836c:	stp	xzr, xzr, [x0]
  428370:	stp	xzr, xzr, [x0, #16]
  428374:	stp	xzr, xzr, [x0, #32]
  428378:	stp	xzr, xzr, [x0, #48]
  42837c:	stp	xzr, xzr, [x0, #64]
  428380:	stp	xzr, xzr, [x0, #80]
  428384:	stp	xzr, xzr, [x0, #96]
  428388:	stp	xzr, xzr, [x0, #112]
  42838c:	str	xzr, [x0, #128]
  428390:	adrp	x0, 447000 <_obstack_memory_used@@Base+0x94>
  428394:	add	x0, x0, #0xd0
  428398:	str	x0, [x19, #72]
  42839c:	mov	w0, #0x1                   	// #1
  4283a0:	str	w0, [x19, #56]
  4283a4:	str	w0, [x19, #60]
  4283a8:	mov	x3, #0x0                   	// #0
  4283ac:	adrp	x2, 428000 <ferror@plt+0x25730>
  4283b0:	add	x2, x2, #0x8
  4283b4:	adrp	x1, 427000 <ferror@plt+0x24730>
  4283b8:	add	x1, x1, #0xfe8
  4283bc:	mov	x0, #0x64                  	// #100
  4283c0:	bl	446040 <ferror@plt+0x43770>
  4283c4:	str	x0, [x19, #88]
  4283c8:	str	w20, [x19, #112]
  4283cc:	ldp	x19, x20, [sp, #16]
  4283d0:	ldp	x29, x30, [sp], #32
  4283d4:	ret
  4283d8:	stp	x29, x30, [sp, #-16]!
  4283dc:	mov	x29, sp
  4283e0:	ldr	w1, [x1, #20]
  4283e4:	bl	428064 <ferror@plt+0x25794>
  4283e8:	ldp	x29, x30, [sp], #16
  4283ec:	ret
  4283f0:	stp	x29, x30, [sp, #-48]!
  4283f4:	mov	x29, sp
  4283f8:	stp	x19, x20, [sp, #16]
  4283fc:	mov	x20, x0
  428400:	ldr	w19, [x0, #12]
  428404:	sub	w19, w19, #0x1
  428408:	sbfiz	x0, x19, #1, #32
  42840c:	add	x19, x0, w19, sxtw
  428410:	ldr	x0, [x20]
  428414:	add	x19, x0, x19, lsl #3
  428418:	ldr	w0, [x19, #20]
  42841c:	cbz	w0, 42845c <ferror@plt+0x25b8c>
  428420:	stp	x21, x22, [sp, #32]
  428424:	adrp	x21, 462000 <_obstack_memory_used@@Base+0x1b094>
  428428:	add	x21, x21, #0x870
  42842c:	adrp	x22, 488000 <_obstack_memory_used@@Base+0x41094>
  428430:	ldr	x2, [x19, #8]
  428434:	mov	x1, x21
  428438:	ldr	x0, [x22, #1320]
  42843c:	bl	402890 <fprintf@plt>
  428440:	mov	x1, x19
  428444:	mov	x0, x20
  428448:	bl	4283d8 <ferror@plt+0x25b08>
  42844c:	mov	x19, x0
  428450:	ldr	w1, [x0, #20]
  428454:	cbnz	w1, 428430 <ferror@plt+0x25b60>
  428458:	ldp	x21, x22, [sp, #32]
  42845c:	ldp	x19, x20, [sp, #16]
  428460:	ldp	x29, x30, [sp], #48
  428464:	ret
  428468:	stp	x29, x30, [sp, #-80]!
  42846c:	mov	x29, sp
  428470:	stp	x19, x20, [sp, #16]
  428474:	stp	x21, x22, [sp, #32]
  428478:	stp	x23, x24, [sp, #48]
  42847c:	str	x25, [sp, #64]
  428480:	mov	x19, x0
  428484:	mov	w21, w1
  428488:	mov	w25, w2
  42848c:	mov	x23, x3
  428490:	mov	w24, w4
  428494:	ldr	w1, [x0, #56]
  428498:	add	w22, w1, #0x1
  42849c:	mov	w0, #0x5fffffff            	// #1610612735
  4284a0:	cmp	w1, w0
  4284a4:	b.hi	4284c8 <ferror@plt+0x25bf8>  // b.pmore
  4284a8:	ldr	w2, [x19, #120]
  4284ac:	mov	w0, #0x1                   	// #1
  4284b0:	lsl	w0, w0, w2
  4284b4:	add	w22, w0, w1
  4284b8:	neg	w0, w0
  4284bc:	and	w0, w22, w0
  4284c0:	cmp	w2, #0x0
  4284c4:	csel	w22, w0, w22, ne  // ne = any
  4284c8:	cmp	w21, #0x1
  4284cc:	b.eq	4285a8 <ferror@plt+0x25cd8>  // b.none
  4284d0:	mov	w0, #0x6fffffff            	// #1879048191
  4284d4:	cmp	w22, w0
  4284d8:	csel	w22, w22, wzr, ls  // ls = plast
  4284dc:	mov	w1, w22
  4284e0:	mov	x0, x19
  4284e4:	bl	428134 <ferror@plt+0x25864>
  4284e8:	mov	x20, x0
  4284ec:	strb	w21, [x0, #4]
  4284f0:	cbz	x23, 428504 <ferror@plt+0x25c34>
  4284f4:	ldrb	w0, [x23]
  4284f8:	cmp	w0, #0x0
  4284fc:	ccmp	w21, #0x3, #0x4, eq  // eq = none
  428500:	b.ne	4285e4 <ferror@plt+0x25d14>  // b.any
  428504:	cmp	w21, #0x3
  428508:	b.eq	428628 <ferror@plt+0x25d58>  // b.none
  42850c:	mov	x0, #0x0                   	// #0
  428510:	cmp	w21, #0x1
  428514:	b.eq	4285f0 <ferror@plt+0x25d20>  // b.none
  428518:	strb	w25, [x20, #5]
  42851c:	str	x23, [x20, #8]
  428520:	str	w24, [x20, #16]
  428524:	ldr	w1, [x19, #12]
  428528:	sub	w1, w1, #0x1
  42852c:	str	w1, [x19, #16]
  428530:	strb	wzr, [x20, #6]
  428534:	strb	wzr, [x20, #7]
  428538:	str	w22, [x19, #56]
  42853c:	str	w22, [x19, #60]
  428540:	str	wzr, [x19, #64]
  428544:	cbnz	w21, 428694 <ferror@plt+0x25dc4>
  428548:	ldr	w0, [x19, #48]
  42854c:	cbz	w0, 428574 <ferror@plt+0x25ca4>
  428550:	ldur	w2, [x20, #-24]
  428554:	ldr	w0, [x20]
  428558:	sub	w0, w0, #0x1
  42855c:	sub	w0, w0, w2
  428560:	ldurb	w3, [x20, #-18]
  428564:	mov	w1, #0xffffffff            	// #-1
  428568:	lsl	w1, w1, w3
  42856c:	and	w0, w0, w1
  428570:	add	w0, w0, w2
  428574:	str	w0, [x20, #20]
  428578:	ldr	w21, [x19, #48]
  42857c:	add	w0, w21, #0x1
  428580:	str	w0, [x19, #48]
  428584:	ldrb	w0, [x19, #52]
  428588:	cbnz	w0, 428634 <ferror@plt+0x25d64>
  42858c:	mov	x0, x20
  428590:	ldp	x19, x20, [sp, #16]
  428594:	ldp	x21, x22, [sp, #32]
  428598:	ldp	x23, x24, [sp, #48]
  42859c:	ldr	x25, [sp, #64]
  4285a0:	ldp	x29, x30, [sp], #80
  4285a4:	ret
  4285a8:	ldr	w0, [x19, #12]
  4285ac:	sub	w0, w0, #0x1
  4285b0:	ldr	x1, [x19]
  4285b4:	sbfiz	x2, x0, #1, #32
  4285b8:	add	x0, x2, w0, sxtw
  4285bc:	add	x0, x1, x0, lsl #3
  4285c0:	ldr	w0, [x0, #20]
  4285c4:	cmp	w0, #0x0
  4285c8:	ccmp	x23, #0x0, #0x0, eq  // eq = none
  4285cc:	b.ne	4284d0 <ferror@plt+0x25c00>  // b.any
  4285d0:	ldr	w0, [x19, #48]
  4285d4:	sub	w0, w0, #0x1
  4285d8:	str	w0, [x19, #48]
  4285dc:	mov	x20, #0x0                   	// #0
  4285e0:	b	42858c <ferror@plt+0x25cbc>
  4285e4:	adrp	x23, 462000 <_obstack_memory_used@@Base+0x1b094>
  4285e8:	add	x23, x23, #0x8a0
  4285ec:	b	42850c <ferror@plt+0x25c3c>
  4285f0:	sub	x1, x20, #0x18
  4285f4:	mov	x0, x19
  4285f8:	bl	4283d8 <ferror@plt+0x25b08>
  4285fc:	cbnz	x23, 428518 <ferror@plt+0x25c48>
  428600:	ldr	x23, [x0, #8]
  428604:	ldr	w24, [x0, #24]
  428608:	ldr	w1, [x0]
  42860c:	sub	w24, w24, w1
  428610:	ldrb	w1, [x0, #6]
  428614:	lsr	w24, w24, w1
  428618:	ldr	w4, [x0, #16]
  42861c:	add	w24, w24, w4
  428620:	ldrb	w25, [x0, #5]
  428624:	b	428518 <ferror@plt+0x25c48>
  428628:	mov	w21, #0x2                   	// #2
  42862c:	mov	x0, #0x0                   	// #0
  428630:	b	428518 <ferror@plt+0x25c48>
  428634:	adrp	x22, 488000 <_obstack_memory_used@@Base+0x41094>
  428638:	mov	w19, #0x2e                  	// #46
  42863c:	mov	w23, #0x2e                  	// #46
  428640:	cbz	w21, 42866c <ferror@plt+0x25d9c>
  428644:	ldr	x0, [x22, #1320]
  428648:	ldr	x1, [x0, #40]
  42864c:	ldr	x2, [x0, #48]
  428650:	cmp	x1, x2
  428654:	b.cs	428688 <ferror@plt+0x25db8>  // b.hs, b.nlast
  428658:	add	x2, x1, #0x1
  42865c:	str	x2, [x0, #40]
  428660:	strb	w19, [x1]
  428664:	subs	w21, w21, #0x1
  428668:	b.ne	428644 <ferror@plt+0x25d74>  // b.any
  42866c:	ldr	x2, [x20, #8]
  428670:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b094>
  428674:	add	x1, x1, #0x8a8
  428678:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  42867c:	ldr	x0, [x0, #1320]
  428680:	bl	402890 <fprintf@plt>
  428684:	b	42858c <ferror@plt+0x25cbc>
  428688:	mov	w1, w23
  42868c:	bl	4025a0 <__overflow@plt>
  428690:	b	428664 <ferror@plt+0x25d94>
  428694:	cmp	w21, #0x2
  428698:	b.eq	4286bc <ferror@plt+0x25dec>  // b.none
  42869c:	cmp	w21, #0x1
  4286a0:	b.ne	42858c <ferror@plt+0x25cbc>  // b.any
  4286a4:	ldr	w1, [x19, #48]
  4286a8:	sub	w1, w1, #0x1
  4286ac:	str	w1, [x19, #48]
  4286b0:	ldr	w0, [x0, #20]
  4286b4:	str	w0, [x20, #20]
  4286b8:	b	42858c <ferror@plt+0x25cbc>
  4286bc:	ldur	w0, [x20, #-4]
  4286c0:	str	w0, [x20, #20]
  4286c4:	b	42858c <ferror@plt+0x25cbc>
  4286c8:	ldr	x0, [x0, #24]
  4286cc:	cmp	x0, #0x0
  4286d0:	cset	w0, ne  // ne = any
  4286d4:	ret
  4286d8:	stp	x29, x30, [sp, #-64]!
  4286dc:	mov	x29, sp
  4286e0:	stp	x19, x20, [sp, #16]
  4286e4:	stp	x21, x22, [sp, #32]
  4286e8:	str	x23, [sp, #48]
  4286ec:	mov	x21, x0
  4286f0:	mov	x23, x1
  4286f4:	mov	w22, w2
  4286f8:	mov	w19, w3
  4286fc:	ldr	w3, [x0, #36]
  428700:	mov	w0, #0x80000000            	// #-2147483648
  428704:	cbz	w3, 428718 <ferror@plt+0x25e48>
  428708:	sub	w3, w3, #0x1
  42870c:	ldr	x0, [x21, #24]
  428710:	sbfiz	x3, x3, #5, #32
  428714:	ldr	w0, [x0, x3]
  428718:	sub	w1, w0, w19
  42871c:	mov	x20, #0x0                   	// #0
  428720:	mov	w0, #0x6fffffff            	// #1879048191
  428724:	cmp	w1, w0
  428728:	b.ls	428774 <ferror@plt+0x25ea4>  // b.plast
  42872c:	mov	x0, x21
  428730:	bl	428134 <ferror@plt+0x25864>
  428734:	mov	x20, x0
  428738:	str	x23, [x0, #8]
  42873c:	str	w19, [x0, #4]
  428740:	ubfiz	x19, x19, #3, #31
  428744:	ldr	x2, [x21, #72]
  428748:	mov	x1, x19
  42874c:	mov	x0, #0x0                   	// #0
  428750:	blr	x2
  428754:	str	x0, [x20, #16]
  428758:	str	w22, [x20, #24]
  42875c:	mov	x2, x19
  428760:	mov	w1, #0x0                   	// #0
  428764:	bl	402490 <memset@plt>
  428768:	ldr	w0, [x21, #36]
  42876c:	sub	w0, w0, #0x1
  428770:	str	w0, [x21, #40]
  428774:	mov	x0, x20
  428778:	ldp	x19, x20, [sp, #16]
  42877c:	ldp	x21, x22, [sp, #32]
  428780:	ldr	x23, [sp, #48]
  428784:	ldp	x29, x30, [sp], #64
  428788:	ret
  42878c:	lsl	w4, w1, #1
  428790:	lsl	w6, w1, #1
  428794:	ldr	x5, [x0, #16]
  428798:	str	w2, [x5, x6, lsl #2]
  42879c:	add	w4, w4, #0x1
  4287a0:	ldr	x2, [x0, #16]
  4287a4:	str	w3, [x2, x4, lsl #2]
  4287a8:	ldr	w0, [x0]
  4287ac:	add	w0, w1, w0
  4287b0:	ret
  4287b4:	stp	x29, x30, [sp, #-64]!
  4287b8:	mov	x29, sp
  4287bc:	stp	x19, x20, [sp, #16]
  4287c0:	stp	x21, x22, [sp, #32]
  4287c4:	str	x23, [sp, #48]
  4287c8:	mov	x20, x0
  4287cc:	mov	w22, w1
  4287d0:	ldr	w4, [x0, #12]
  4287d4:	sub	w4, w4, #0x1
  4287d8:	sbfiz	x0, x4, #1, #32
  4287dc:	add	x4, x0, w4, sxtw
  4287e0:	lsl	x4, x4, #3
  4287e4:	ldr	x0, [x20]
  4287e8:	add	x5, x0, x4
  4287ec:	ldr	w9, [x20, #56]
  4287f0:	ldr	w3, [x20, #60]
  4287f4:	ldr	w7, [x0, x4]
  4287f8:	ldrb	w4, [x5, #6]
  4287fc:	ldr	w8, [x5, #16]
  428800:	sub	w1, w3, w7
  428804:	lsr	w1, w1, w4
  428808:	add	w1, w1, w8
  42880c:	ldrb	w10, [x5, #7]
  428810:	subs	w6, w22, w1
  428814:	b.mi	4288ac <ferror@plt+0x25fdc>  // b.first
  428818:	cmp	w6, #0xa
  42881c:	b.le	42882c <ferror@plt+0x25f5c>
  428820:	mul	w0, w6, w4
  428824:	cmp	w0, #0x3e8
  428828:	b.gt	4288ac <ferror@plt+0x25fdc>
  42882c:	sub	w11, w4, w10
  428830:	mov	w0, #0x1                   	// #1
  428834:	lsl	w0, w0, w11
  428838:	cmp	w0, w2
  42883c:	b.ls	4288ac <ferror@plt+0x25fdc>  // b.plast
  428840:	cmp	w2, #0x50
  428844:	ccmp	w11, #0x9, #0x4, ls  // ls = plast
  428848:	b.gt	4288ac <ferror@plt+0x25fdc>
  42884c:	cmp	w10, #0x0
  428850:	mov	w0, #0x50000000            	// #1342177280
  428854:	ccmp	w9, w0, #0x0, ne  // ne = any
  428858:	b.hi	4289c8 <ferror@plt+0x260f8>  // b.pmore
  42885c:	mov	w0, #0x60000000            	// #1610612736
  428860:	cmp	w9, w0
  428864:	b.ls	42889c <ferror@plt+0x25fcc>  // b.plast
  428868:	ldr	w0, [x20, #64]
  42886c:	cmp	w0, #0x0
  428870:	mov	w0, #0x6fffffff            	// #1879048191
  428874:	ccmp	w9, w0, #0x2, eq  // eq = none
  428878:	b.ls	42889c <ferror@plt+0x25fcc>  // b.plast
  42887c:	mov	w0, #0x0                   	// #0
  428880:	mov	w2, #0x6fffffff            	// #1879048191
  428884:	cmp	w9, w2
  428888:	b.hi	42895c <ferror@plt+0x2608c>  // b.pmore
  42888c:	mov	w23, #0x0                   	// #0
  428890:	mov	w19, #0x0                   	// #0
  428894:	mov	w21, #0x0                   	// #0
  428898:	b	4288f4 <ferror@plt+0x26024>
  42889c:	ldr	w21, [x20, #64]
  4288a0:	lsl	w0, w6, w4
  4288a4:	add	w0, w0, w3
  4288a8:	b	428938 <ferror@plt+0x26068>
  4288ac:	cmp	w2, #0x1, lsl #12
  4288b0:	mov	w0, #0x60000000            	// #1610612736
  4288b4:	ccmp	w9, w0, #0x2, ls  // ls = plast
  4288b8:	b.hi	42887c <ferror@plt+0x25fac>  // b.pmore
  4288bc:	mov	w23, #0x0                   	// #0
  4288c0:	mov	w0, #0x50000000            	// #1342177280
  4288c4:	cmp	w9, w0
  4288c8:	b.hi	4288d0 <ferror@plt+0x26000>  // b.pmore
  4288cc:	ldr	w23, [x20, #120]
  4288d0:	cmp	w2, #0x7f
  4288d4:	b.ls	428970 <ferror@plt+0x260a0>  // b.plast
  4288d8:	mov	w3, #0x7                   	// #7
  4288dc:	mov	w0, #0x1                   	// #1
  4288e0:	add	w3, w3, #0x1
  4288e4:	lsl	w21, w0, w3
  4288e8:	cmp	w21, w2
  4288ec:	b.ls	4288e0 <ferror@plt+0x26010>  // b.plast
  4288f0:	add	w19, w23, w3
  4288f4:	cmp	w6, #0x0
  4288f8:	ccmp	w1, w8, #0x0, ge  // ge = tcont
  4288fc:	b.eq	42897c <ferror@plt+0x260ac>  // b.none
  428900:	mov	w4, w22
  428904:	ldr	x3, [x5, #8]
  428908:	ldrb	w2, [x5, #5]
  42890c:	mov	w1, #0x2                   	// #2
  428910:	mov	x0, x20
  428914:	bl	428468 <ferror@plt+0x25b98>
  428918:	mov	x5, x0
  42891c:	strb	w19, [x5, #6]
  428920:	strb	w23, [x5, #7]
  428924:	ldr	w3, [x5, #16]
  428928:	sub	w3, w22, w3
  42892c:	lsl	w3, w3, w19
  428930:	ldr	w0, [x5]
  428934:	add	w0, w3, w0
  428938:	mov	w1, #0x6fffffff            	// #1879048191
  42893c:	cmp	w0, w1
  428940:	b.hi	4289c0 <ferror@plt+0x260f0>  // b.pmore
  428944:	str	w0, [x20, #60]
  428948:	ldr	w1, [x20, #56]
  42894c:	cmp	w1, w0
  428950:	b.cs	428958 <ferror@plt+0x26088>  // b.hs, b.nlast
  428954:	str	w0, [x20, #56]
  428958:	str	w21, [x20, #64]
  42895c:	ldp	x19, x20, [sp, #16]
  428960:	ldp	x21, x22, [sp, #32]
  428964:	ldr	x23, [sp, #48]
  428968:	ldp	x29, x30, [sp], #64
  42896c:	ret
  428970:	mov	w3, #0x7                   	// #7
  428974:	mov	w21, #0x80                  	// #128
  428978:	b	4288f0 <ferror@plt+0x26020>
  42897c:	mov	w0, #0x1                   	// #1
  428980:	lsl	w0, w0, w4
  428984:	sub	w0, w0, #0x1
  428988:	sub	w7, w9, w7
  42898c:	and	w0, w0, w7
  428990:	lsr	w0, w0, w10
  428994:	sub	w1, w19, w23
  428998:	lsr	w0, w0, w1
  42899c:	cbnz	w0, 428900 <ferror@plt+0x26030>
  4289a0:	sub	w0, w22, w8
  4289a4:	mov	w1, #0x20                  	// #32
  4289a8:	sub	w1, w1, w19
  4289ac:	lsr	x0, x0, x1
  4289b0:	cmp	x0, #0x0
  4289b4:	ccmp	w10, w23, #0x0, eq  // eq = none
  4289b8:	b.gt	428900 <ferror@plt+0x26030>
  4289bc:	b	42891c <ferror@plt+0x2604c>
  4289c0:	mov	w0, #0x0                   	// #0
  4289c4:	b	42895c <ferror@plt+0x2608c>
  4289c8:	cmp	w2, #0x1, lsl #12
  4289cc:	mov	w0, #0x60000000            	// #1610612736
  4289d0:	ccmp	w9, w0, #0x2, ls  // ls = plast
  4289d4:	mov	w23, #0x0                   	// #0
  4289d8:	b.ls	4288d0 <ferror@plt+0x26000>  // b.plast
  4289dc:	b	42887c <ferror@plt+0x25fac>
  4289e0:	stp	x29, x30, [sp, #-32]!
  4289e4:	mov	x29, sp
  4289e8:	stp	x19, x20, [sp, #16]
  4289ec:	mov	x19, x0
  4289f0:	mov	w20, w1
  4289f4:	ldr	w0, [x0, #60]
  4289f8:	ldr	w1, [x19, #64]
  4289fc:	cmp	w1, w20
  428a00:	b.hi	428a74 <ferror@plt+0x261a4>  // b.pmore
  428a04:	cmp	w20, #0x1, lsl #12
  428a08:	mov	w1, #0x60000000            	// #1610612736
  428a0c:	ccmp	w0, w1, #0x2, ls  // ls = plast
  428a10:	b.hi	428aa8 <ferror@plt+0x261d8>  // b.pmore
  428a14:	ldr	w1, [x19, #12]
  428a18:	sub	w1, w1, #0x1
  428a1c:	sbfiz	x2, x1, #1, #32
  428a20:	add	x1, x2, w1, sxtw
  428a24:	lsl	x1, x1, #3
  428a28:	ldr	x3, [x19]
  428a2c:	add	x2, x3, x1
  428a30:	ldr	w1, [x3, x1]
  428a34:	sub	w0, w0, w1
  428a38:	ldrb	w1, [x2, #6]
  428a3c:	lsr	w0, w0, w1
  428a40:	ldr	w1, [x2, #16]
  428a44:	add	w2, w20, #0x32
  428a48:	add	w1, w0, w1
  428a4c:	mov	x0, x19
  428a50:	bl	4287b4 <ferror@plt+0x25ee4>
  428a54:	ldr	w1, [x19, #12]
  428a58:	sub	w1, w1, #0x1
  428a5c:	ldr	x2, [x19]
  428a60:	sbfiz	x3, x1, #1, #32
  428a64:	add	x1, x3, w1, sxtw
  428a68:	add	x1, x2, x1, lsl #3
  428a6c:	ldrb	w1, [x1, #6]
  428a70:	cbz	w1, 428aa8 <ferror@plt+0x261d8>
  428a74:	ldr	w1, [x19, #12]
  428a78:	sub	w1, w1, #0x1
  428a7c:	ldr	x2, [x19]
  428a80:	sbfiz	x3, x1, #1, #32
  428a84:	add	x1, x3, w1, sxtw
  428a88:	add	x1, x2, x1, lsl #3
  428a8c:	ldrb	w1, [x1, #7]
  428a90:	lsl	w20, w20, w1
  428a94:	add	w0, w0, w20
  428a98:	ldr	w1, [x19, #56]
  428a9c:	cmp	w1, w0
  428aa0:	b.hi	428aa8 <ferror@plt+0x261d8>  // b.pmore
  428aa4:	str	w0, [x19, #56]
  428aa8:	ldp	x19, x20, [sp, #16]
  428aac:	ldp	x29, x30, [sp], #32
  428ab0:	ret
  428ab4:	mov	x4, x0
  428ab8:	ldrb	w5, [x1, #6]
  428abc:	ldr	w0, [x1, #16]
  428ac0:	sub	w2, w2, w0
  428ac4:	lsl	w2, w2, w5
  428ac8:	ldr	w0, [x1]
  428acc:	add	w0, w2, w0
  428ad0:	mov	w2, #0x60000000            	// #1610612736
  428ad4:	cmp	w0, w2
  428ad8:	b.hi	428af8 <ferror@plt+0x26228>  // b.pmore
  428adc:	mov	w2, #0x1                   	// #1
  428ae0:	lsl	w2, w2, w5
  428ae4:	sub	w2, w2, #0x1
  428ae8:	and	w3, w2, w3
  428aec:	ldrb	w1, [x1, #7]
  428af0:	lsl	w1, w3, w1
  428af4:	add	w0, w0, w1
  428af8:	ldr	w1, [x4, #36]
  428afc:	mov	w2, #0x80000000            	// #-2147483648
  428b00:	cbz	w1, 428b14 <ferror@plt+0x26244>
  428b04:	sub	w1, w1, #0x1
  428b08:	ldr	x2, [x4, #24]
  428b0c:	sbfiz	x1, x1, #5, #32
  428b10:	ldr	w2, [x2, x1]
  428b14:	sub	w1, w2, #0x1
  428b18:	cmp	w0, w2
  428b1c:	csel	w0, w1, w0, cs  // cs = hs, nlast
  428b20:	ldr	w1, [x4, #56]
  428b24:	cmp	w1, w0
  428b28:	b.cs	428b30 <ferror@plt+0x26260>  // b.hs, b.nlast
  428b2c:	str	w0, [x4, #56]
  428b30:	ret
  428b34:	cbz	x0, 428b4c <ferror@plt+0x2627c>
  428b38:	ldr	w1, [x0]
  428b3c:	mov	w0, #0x6fffffff            	// #1879048191
  428b40:	cmp	w1, w0
  428b44:	cset	w0, hi  // hi = pmore
  428b48:	ret
  428b4c:	mov	w0, #0x0                   	// #0
  428b50:	b	428b48 <ferror@plt+0x26278>
  428b54:	stp	x29, x30, [sp, #-32]!
  428b58:	mov	x29, sp
  428b5c:	str	x19, [sp, #16]
  428b60:	mov	x19, x1
  428b64:	tbnz	w2, #31, 428b88 <ferror@plt+0x262b8>
  428b68:	ldr	w0, [x19]
  428b6c:	sub	w2, w2, w0
  428b70:	lsl	w2, w2, #1
  428b74:	ldr	x0, [x19, #16]
  428b78:	ldr	w0, [x0, x2, lsl #2]
  428b7c:	ldr	x19, [sp, #16]
  428b80:	ldp	x29, x30, [sp], #32
  428b84:	ret
  428b88:	mov	w1, w2
  428b8c:	bl	42833c <ferror@plt+0x25a6c>
  428b90:	mov	w2, w0
  428b94:	b	428b68 <ferror@plt+0x26298>
  428b98:	ldr	x0, [x0, #8]
  428b9c:	ldr	x0, [x0]
  428ba0:	ret
  428ba4:	tbnz	w1, #31, 428bc0 <ferror@plt+0x262f0>
  428ba8:	mov	w0, #0x90000000            	// #-1879048192
  428bac:	add	w1, w1, w0
  428bb0:	mov	w0, #0xfffffff             	// #268435455
  428bb4:	cmp	w1, w0
  428bb8:	cset	w0, ls  // ls = plast
  428bbc:	ret
  428bc0:	and	x2, x1, #0x7fffffff
  428bc4:	lsl	w1, w1, #1
  428bc8:	add	x1, x1, x2
  428bcc:	lsl	x1, x1, #3
  428bd0:	ldr	x0, [x0, #104]
  428bd4:	ldr	w1, [x0, x1]
  428bd8:	b	428ba8 <ferror@plt+0x262d8>
  428bdc:	stp	x29, x30, [sp, #-48]!
  428be0:	mov	x29, sp
  428be4:	stp	x19, x20, [sp, #16]
  428be8:	mov	x20, x0
  428bec:	mov	w19, w1
  428bf0:	tbnz	w1, #31, 428c18 <ferror@plt+0x26348>
  428bf4:	bl	428ba4 <ferror@plt+0x262d4>
  428bf8:	and	w0, w0, #0xff
  428bfc:	cbnz	w0, 428c68 <ferror@plt+0x26398>
  428c00:	mov	w1, w19
  428c04:	mov	x0, x20
  428c08:	bl	428064 <ferror@plt+0x25794>
  428c0c:	ldp	x19, x20, [sp, #16]
  428c10:	ldp	x29, x30, [sp], #48
  428c14:	ret
  428c18:	str	x21, [sp, #32]
  428c1c:	ldr	x21, [x0, #104]
  428c20:	and	x0, x19, #0x7fffffff
  428c24:	lsl	w19, w1, #1
  428c28:	add	x19, x19, x0
  428c2c:	lsl	x19, x19, #3
  428c30:	ldr	w19, [x21, x19]
  428c34:	mov	w1, w19
  428c38:	mov	x0, x20
  428c3c:	bl	428ba4 <ferror@plt+0x262d4>
  428c40:	and	w0, w0, #0xff
  428c44:	cbz	w0, 428cf0 <ferror@plt+0x26420>
  428c48:	tbz	w19, #31, 428ca8 <ferror@plt+0x263d8>
  428c4c:	and	x0, x19, #0x7fffffff
  428c50:	lsl	w19, w19, #1
  428c54:	add	x19, x19, x0
  428c58:	lsl	x19, x19, #3
  428c5c:	ldr	w19, [x21, x19]
  428c60:	ldr	x21, [sp, #32]
  428c64:	b	428c6c <ferror@plt+0x2639c>
  428c68:	cbz	x20, 428cf8 <ferror@plt+0x26428>
  428c6c:	ldr	w3, [x20, #40]
  428c70:	ldr	w2, [x20, #36]
  428c74:	ldr	x4, [x20, #24]
  428c78:	sbfiz	x1, x3, #5, #32
  428c7c:	add	x0, x4, x1
  428c80:	ldr	w1, [x4, x1]
  428c84:	cmp	w1, w19
  428c88:	b.hi	428cb4 <ferror@plt+0x263e4>  // b.pmore
  428c8c:	cbz	w3, 428c0c <ferror@plt+0x2633c>
  428c90:	ldur	w1, [x0, #-32]
  428c94:	cmp	w1, w19
  428c98:	b.hi	428c0c <ferror@plt+0x2633c>  // b.pmore
  428c9c:	sub	w2, w3, #0x1
  428ca0:	mov	w3, #0x0                   	// #0
  428ca4:	b	428cb4 <ferror@plt+0x263e4>
  428ca8:	ldr	x21, [sp, #32]
  428cac:	b	428c6c <ferror@plt+0x2639c>
  428cb0:	mov	w2, w0
  428cb4:	cmp	w2, w3
  428cb8:	b.ls	428ce0 <ferror@plt+0x26410>  // b.plast
  428cbc:	add	w1, w2, w3
  428cc0:	lsr	w0, w1, #1
  428cc4:	lsr	w1, w1, #1
  428cc8:	lsl	x1, x1, #5
  428ccc:	ldr	w1, [x4, x1]
  428cd0:	cmp	w1, w19
  428cd4:	b.ls	428cb0 <ferror@plt+0x263e0>  // b.plast
  428cd8:	add	w3, w0, #0x1
  428cdc:	b	428cb4 <ferror@plt+0x263e4>
  428ce0:	str	w2, [x20, #40]
  428ce4:	sbfiz	x0, x2, #5, #32
  428ce8:	add	x0, x4, x0
  428cec:	b	428c0c <ferror@plt+0x2633c>
  428cf0:	ldr	x21, [sp, #32]
  428cf4:	b	428c00 <ferror@plt+0x26330>
  428cf8:	mov	x0, x20
  428cfc:	b	428c0c <ferror@plt+0x2633c>
  428d00:	stp	x29, x30, [sp, #-96]!
  428d04:	mov	x29, sp
  428d08:	stp	x19, x20, [sp, #16]
  428d0c:	stp	x21, x22, [sp, #32]
  428d10:	stp	x23, x24, [sp, #48]
  428d14:	mov	x21, x0
  428d18:	mov	w19, w1
  428d1c:	mov	x20, x2
  428d20:	mov	x22, x3
  428d24:	tbnz	w1, #31, 428de4 <ferror@plt+0x26514>
  428d28:	cmp	x22, #0x0
  428d2c:	cset	w23, eq  // eq = none
  428d30:	cmp	w19, #0x0
  428d34:	mov	w0, #0x0                   	// #0
  428d38:	ccmp	w23, #0x0, #0x4, eq  // eq = none
  428d3c:	b.ne	428dd0 <ferror@plt+0x26500>  // b.any
  428d40:	lsr	x24, x20, #32
  428d44:	cmp	w24, w20
  428d48:	ccmp	w20, #0x1, #0x0, cs  // cs = hs, nlast
  428d4c:	cset	w0, ls  // ls = plast
  428d50:	cmp	w19, w20
  428d54:	mov	w1, #0x4fffffff            	// #1342177279
  428d58:	ccmp	w19, w1, #0x2, eq  // eq = none
  428d5c:	cset	w1, hi  // hi = pmore
  428d60:	orr	w0, w0, w1
  428d64:	cmp	x22, #0x0
  428d68:	csinc	w0, w0, wzr, eq  // eq = none
  428d6c:	cbz	w0, 428e00 <ferror@plt+0x26530>
  428d70:	cmp	w19, w24
  428d74:	ccmp	w19, w20, #0x0, eq  // eq = none
  428d78:	ccmp	w23, #0x0, #0x4, eq  // eq = none
  428d7c:	b.ne	428f54 <ferror@plt+0x26684>  // b.any
  428d80:	cbz	x22, 428e6c <ferror@plt+0x2659c>
  428d84:	str	w19, [sp, #72]
  428d88:	str	w20, [sp, #76]
  428d8c:	str	w24, [sp, #80]
  428d90:	str	x22, [sp, #88]
  428d94:	mov	w2, #0x1                   	// #1
  428d98:	add	x1, sp, #0x48
  428d9c:	ldr	x0, [x21, #88]
  428da0:	bl	4465bc <ferror@plt+0x43cec>
  428da4:	mov	x19, x0
  428da8:	ldr	x0, [x0]
  428dac:	cbz	x0, 428e90 <ferror@plt+0x265c0>
  428db0:	ldr	x1, [x19]
  428db4:	ldr	x0, [x21, #104]
  428db8:	sub	x0, x1, x0
  428dbc:	asr	x0, x0, #3
  428dc0:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  428dc4:	movk	x1, #0xaaab
  428dc8:	mul	x0, x0, x1
  428dcc:	orr	w0, w0, #0x80000000
  428dd0:	ldp	x19, x20, [sp, #16]
  428dd4:	ldp	x21, x22, [sp, #32]
  428dd8:	ldp	x23, x24, [sp, #48]
  428ddc:	ldp	x29, x30, [sp], #96
  428de0:	ret
  428de4:	and	x0, x19, #0x7fffffff
  428de8:	lsl	w19, w1, #1
  428dec:	add	x19, x19, x0
  428df0:	lsl	x19, x19, #3
  428df4:	ldr	x0, [x21, #104]
  428df8:	ldr	w19, [x0, x19]
  428dfc:	b	428d28 <ferror@plt+0x26458>
  428e00:	ldr	w0, [x21, #36]
  428e04:	mov	w1, #0x80000000            	// #-2147483648
  428e08:	cbz	w0, 428e1c <ferror@plt+0x2654c>
  428e0c:	sub	w0, w0, #0x1
  428e10:	ldr	x1, [x21, #24]
  428e14:	sbfiz	x0, x0, #5, #32
  428e18:	ldr	w1, [x1, x0]
  428e1c:	cmp	w24, w20
  428e20:	csel	w0, w24, w20, cs  // cs = hs, nlast
  428e24:	cmp	w0, w19
  428e28:	csel	w0, w0, w19, cs  // cs = hs, nlast
  428e2c:	cmp	w0, w1
  428e30:	b.cs	428e5c <ferror@plt+0x2658c>  // b.hs, b.nlast
  428e34:	mov	w1, w19
  428e38:	mov	x0, x21
  428e3c:	bl	428bdc <ferror@plt+0x2630c>
  428e40:	ldrb	w2, [x0, #7]
  428e44:	sub	w1, w24, w20
  428e48:	lsr	w1, w1, w2
  428e4c:	mov	w0, #0x1                   	// #1
  428e50:	lsl	w0, w0, w2
  428e54:	cmp	w0, w1
  428e58:	b.hi	428e7c <ferror@plt+0x265ac>  // b.pmore
  428e5c:	cmp	w19, w20
  428e60:	ccmp	w19, w24, #0x0, eq  // eq = none
  428e64:	ccmp	w23, #0x0, #0x4, eq  // eq = none
  428e68:	b.ne	428f5c <ferror@plt+0x2668c>  // b.any
  428e6c:	ldr	w0, [x21, #128]
  428e70:	add	w0, w0, #0x1
  428e74:	str	w0, [x21, #128]
  428e78:	b	428d84 <ferror@plt+0x264b4>
  428e7c:	orr	w0, w19, w1
  428e80:	ldr	w1, [x21, #124]
  428e84:	add	w1, w1, #0x1
  428e88:	str	w1, [x21, #124]
  428e8c:	b	428dd0 <ferror@plt+0x26500>
  428e90:	ldr	w0, [x21, #100]
  428e94:	ldr	w1, [x21, #96]
  428e98:	cmp	w1, w0
  428e9c:	b.cc	428ef8 <ferror@plt+0x26628>  // b.lo, b.ul, b.last
  428ea0:	ldr	x20, [x21, #104]
  428ea4:	ldr	x2, [x21, #72]
  428ea8:	adrp	x1, 447000 <_obstack_memory_used@@Base+0x94>
  428eac:	add	x1, x1, #0xd0
  428eb0:	cmp	x2, #0x0
  428eb4:	csel	x2, x1, x2, eq  // eq = none
  428eb8:	lsl	w1, w0, #1
  428ebc:	cmp	w0, #0x0
  428ec0:	mov	w0, #0x80                  	// #128
  428ec4:	csel	w1, w1, w0, ne  // ne = any
  428ec8:	str	w1, [x21, #100]
  428ecc:	mov	w1, w1
  428ed0:	add	x1, x1, x1, lsl #1
  428ed4:	lsl	x1, x1, #3
  428ed8:	mov	x0, x20
  428edc:	blr	x2
  428ee0:	str	x0, [x21, #104]
  428ee4:	sub	x0, x0, x20
  428ee8:	str	x0, [sp, #64]
  428eec:	ldr	w0, [x21, #100]
  428ef0:	cmp	w0, #0x80
  428ef4:	b.hi	428f3c <ferror@plt+0x2666c>  // b.pmore
  428ef8:	ldr	w0, [x21, #96]
  428efc:	add	x0, x0, x0, lsl #1
  428f00:	ldr	x1, [x21, #104]
  428f04:	add	x0, x1, x0, lsl #3
  428f08:	str	x0, [x19]
  428f0c:	ldr	x1, [x21, #104]
  428f10:	ldr	w0, [x21, #96]
  428f14:	add	w2, w0, #0x1
  428f18:	str	w2, [x21, #96]
  428f1c:	ubfiz	x2, x0, #1, #32
  428f20:	add	x0, x2, w0, uxtw
  428f24:	add	x0, x1, x0, lsl #3
  428f28:	ldp	x2, x3, [sp, #72]
  428f2c:	stp	x2, x3, [x0]
  428f30:	ldr	x1, [sp, #88]
  428f34:	str	x1, [x0, #16]
  428f38:	b	428db0 <ferror@plt+0x264e0>
  428f3c:	add	x2, sp, #0x40
  428f40:	adrp	x1, 428000 <ferror@plt+0x25730>
  428f44:	add	x1, x1, #0x4c
  428f48:	ldr	x0, [x21, #88]
  428f4c:	bl	446760 <ferror@plt+0x43e90>
  428f50:	b	428ef8 <ferror@plt+0x26628>
  428f54:	mov	w0, w19
  428f58:	b	428dd0 <ferror@plt+0x26500>
  428f5c:	mov	w0, w19
  428f60:	b	428dd0 <ferror@plt+0x26500>
  428f64:	stp	x29, x30, [sp, #-32]!
  428f68:	mov	x29, sp
  428f6c:	str	x19, [sp, #16]
  428f70:	mov	w19, w1
  428f74:	tbnz	w1, #31, 428fc4 <ferror@plt+0x266f4>
  428f78:	cmp	w1, #0x1
  428f7c:	b.ls	428fac <ferror@plt+0x266dc>  // b.plast
  428f80:	ldr	w1, [x0, #36]
  428f84:	mov	w2, #0x80000000            	// #-2147483648
  428f88:	cbz	w1, 428f9c <ferror@plt+0x266cc>
  428f8c:	sub	w1, w1, #0x1
  428f90:	ldr	x2, [x0, #24]
  428f94:	sbfiz	x1, x1, #5, #32
  428f98:	ldr	w2, [x2, x1]
  428f9c:	mov	w1, #0x50000000            	// #1342177280
  428fa0:	cmp	w19, w1
  428fa4:	ccmp	w19, w2, #0x2, ls  // ls = plast
  428fa8:	b.cc	428ff0 <ferror@plt+0x26720>  // b.lo, b.ul, b.last
  428fac:	mov	x0, #0x0                   	// #0
  428fb0:	bfxil	x0, x19, #0, #32
  428fb4:	bfi	x0, x19, #32, #32
  428fb8:	ldr	x19, [sp, #16]
  428fbc:	ldp	x29, x30, [sp], #32
  428fc0:	ret
  428fc4:	and	x1, x19, #0x7fffffff
  428fc8:	lsl	w19, w19, #1
  428fcc:	add	x19, x19, x1
  428fd0:	ldr	x0, [x0, #104]
  428fd4:	add	x19, x0, x19, lsl #3
  428fd8:	ldr	w1, [x19, #4]
  428fdc:	mov	x0, #0x0                   	// #0
  428fe0:	bfxil	x0, x1, #0, #32
  428fe4:	ldr	w1, [x19, #8]
  428fe8:	bfi	x0, x1, #32, #32
  428fec:	b	428fb8 <ferror@plt+0x266e8>
  428ff0:	mov	w1, w19
  428ff4:	bl	428bdc <ferror@plt+0x2630c>
  428ff8:	ldrb	w2, [x0, #7]
  428ffc:	mov	w0, #0x1                   	// #1
  429000:	lsl	w0, w0, w2
  429004:	sub	w0, w0, #0x1
  429008:	and	w1, w0, w19
  42900c:	bic	w19, w19, w0
  429010:	mov	x0, #0x0                   	// #0
  429014:	bfxil	x0, x19, #0, #32
  429018:	lsl	w1, w1, w2
  42901c:	add	w19, w1, w19
  429020:	bfi	x0, x19, #32, #32
  429024:	b	428fb8 <ferror@plt+0x266e8>
  429028:	tbnz	w1, #31, 429064 <ferror@plt+0x26794>
  42902c:	stp	x29, x30, [sp, #-32]!
  429030:	mov	x29, sp
  429034:	str	x19, [sp, #16]
  429038:	mov	w19, w1
  42903c:	bl	428bdc <ferror@plt+0x2630c>
  429040:	cbz	x0, 42906c <ferror@plt+0x2679c>
  429044:	ldrb	w1, [x0, #7]
  429048:	mov	w0, #0xffffffff            	// #-1
  42904c:	lsl	w0, w0, w1
  429050:	bics	wzr, w19, w0
  429054:	cset	w0, eq  // eq = none
  429058:	ldr	x19, [sp, #16]
  42905c:	ldp	x29, x30, [sp], #32
  429060:	ret
  429064:	mov	w0, #0x0                   	// #0
  429068:	ret
  42906c:	mov	w0, #0x1                   	// #1
  429070:	b	429058 <ferror@plt+0x26788>
  429074:	stp	x29, x30, [sp, #-32]!
  429078:	mov	x29, sp
  42907c:	str	x19, [sp, #16]
  429080:	mov	w19, w1
  429084:	tbnz	w1, #31, 4290c0 <ferror@plt+0x267f0>
  429088:	ldr	w1, [x0, #36]
  42908c:	mov	w2, #0x80000000            	// #-2147483648
  429090:	cbz	w1, 4290a4 <ferror@plt+0x267d4>
  429094:	sub	w1, w1, #0x1
  429098:	ldr	x2, [x0, #24]
  42909c:	sbfiz	x1, x1, #5, #32
  4290a0:	ldr	w2, [x2, x1]
  4290a4:	cmp	w19, #0x1
  4290a8:	ccmp	w19, w2, #0x2, hi  // hi = pmore
  4290ac:	b.cc	4290dc <ferror@plt+0x2680c>  // b.lo, b.ul, b.last
  4290b0:	mov	w0, w19
  4290b4:	ldr	x19, [sp, #16]
  4290b8:	ldp	x29, x30, [sp], #32
  4290bc:	ret
  4290c0:	and	x1, x19, #0x7fffffff
  4290c4:	lsl	w19, w19, #1
  4290c8:	add	x19, x19, x1
  4290cc:	lsl	x19, x19, #3
  4290d0:	ldr	x1, [x0, #104]
  4290d4:	ldr	w19, [x1, x19]
  4290d8:	b	429088 <ferror@plt+0x267b8>
  4290dc:	mov	w1, w19
  4290e0:	bl	428bdc <ferror@plt+0x2630c>
  4290e4:	ldrb	w1, [x0, #7]
  4290e8:	mov	w0, #0xffffffff            	// #-1
  4290ec:	lsl	w0, w0, w1
  4290f0:	and	w19, w19, w0
  4290f4:	b	4290b0 <ferror@plt+0x267e0>
  4290f8:	stp	x29, x30, [sp, #-48]!
  4290fc:	mov	x29, sp
  429100:	stp	x19, x20, [sp, #16]
  429104:	stp	x21, x22, [sp, #32]
  429108:	mov	x21, x0
  42910c:	mov	w20, w1
  429110:	mov	x22, x2
  429114:	tbnz	w1, #31, 42913c <ferror@plt+0x2686c>
  429118:	mov	w1, w20
  42911c:	mov	x0, x21
  429120:	bl	428bdc <ferror@plt+0x2630c>
  429124:	mov	x19, x0
  429128:	bl	428b34 <ferror@plt+0x26264>
  42912c:	and	w3, w0, #0xff
  429130:	cbz	w3, 429158 <ferror@plt+0x26888>
  429134:	ldr	w20, [x19, #24]
  429138:	b	429118 <ferror@plt+0x26848>
  42913c:	and	x0, x20, #0x7fffffff
  429140:	lsl	w1, w1, #1
  429144:	add	x1, x1, x0
  429148:	lsl	x1, x1, #3
  42914c:	ldr	x0, [x21, #104]
  429150:	ldr	w20, [x0, x1]
  429154:	b	429118 <ferror@plt+0x26848>
  429158:	cbz	x22, 429160 <ferror@plt+0x26890>
  42915c:	str	x19, [x22]
  429160:	mov	w0, w20
  429164:	ldp	x19, x20, [sp, #16]
  429168:	ldp	x21, x22, [sp, #32]
  42916c:	ldp	x29, x30, [sp], #48
  429170:	ret
  429174:	stp	x29, x30, [sp, #-32]!
  429178:	mov	x29, sp
  42917c:	mov	x3, x0
  429180:	str	xzr, [sp, #24]
  429184:	tbnz	w1, #31, 4291c4 <ferror@plt+0x268f4>
  429188:	mov	w0, #0x0                   	// #0
  42918c:	cmp	w1, #0x1
  429190:	b.ls	4291bc <ferror@plt+0x268ec>  // b.plast
  429194:	add	x2, sp, #0x18
  429198:	mov	x0, x3
  42919c:	bl	4290f8 <ferror@plt+0x26828>
  4291a0:	ldr	x1, [sp, #24]
  4291a4:	ldr	w2, [x1]
  4291a8:	sub	w0, w0, w2
  4291ac:	ldrb	w2, [x1, #6]
  4291b0:	lsr	w0, w0, w2
  4291b4:	ldr	w1, [x1, #16]
  4291b8:	add	w0, w0, w1
  4291bc:	ldp	x29, x30, [sp], #32
  4291c0:	ret
  4291c4:	and	x0, x1, #0x7fffffff
  4291c8:	lsl	w1, w1, #1
  4291cc:	add	x1, x1, x0
  4291d0:	lsl	x1, x1, #3
  4291d4:	ldr	x0, [x3, #104]
  4291d8:	ldr	w1, [x0, x1]
  4291dc:	b	429188 <ferror@plt+0x268b8>
  4291e0:	stp	x29, x30, [sp, #-32]!
  4291e4:	mov	x29, sp
  4291e8:	str	xzr, [sp, #24]
  4291ec:	tbnz	w1, #31, 429218 <ferror@plt+0x26948>
  4291f0:	mov	x2, #0x0                   	// #0
  4291f4:	cmp	w1, #0x1
  4291f8:	b.ls	42920c <ferror@plt+0x2693c>  // b.plast
  4291fc:	add	x2, sp, #0x18
  429200:	bl	4290f8 <ferror@plt+0x26828>
  429204:	ldr	x0, [sp, #24]
  429208:	ldr	x2, [x0, #8]
  42920c:	mov	x0, x2
  429210:	ldp	x29, x30, [sp], #32
  429214:	ret
  429218:	and	x2, x1, #0x7fffffff
  42921c:	lsl	w1, w1, #1
  429220:	add	x1, x1, x2
  429224:	lsl	x1, x1, #3
  429228:	ldr	x2, [x0, #104]
  42922c:	ldr	w1, [x2, x1]
  429230:	b	4291f0 <ferror@plt+0x26920>
  429234:	stp	x29, x30, [sp, #-48]!
  429238:	mov	x29, sp
  42923c:	stp	x19, x20, [sp, #16]
  429240:	str	x21, [sp, #32]
  429244:	mov	x21, x0
  429248:	mov	w19, w1
  42924c:	tbnz	w1, #31, 429260 <ferror@plt+0x26990>
  429250:	mov	w0, #0x0                   	// #0
  429254:	cmp	w19, #0x1
  429258:	b.hi	429288 <ferror@plt+0x269b8>  // b.pmore
  42925c:	b	4292cc <ferror@plt+0x269fc>
  429260:	and	x0, x19, #0x7fffffff
  429264:	lsl	w1, w1, #1
  429268:	add	x1, x1, x0
  42926c:	lsl	x1, x1, #3
  429270:	ldr	x0, [x21, #104]
  429274:	ldr	w19, [x0, x1]
  429278:	b	429250 <ferror@plt+0x26980>
  42927c:	ldrb	w0, [x20, #5]
  429280:	b	4292cc <ferror@plt+0x269fc>
  429284:	ldr	w19, [x20, #24]
  429288:	mov	w1, w19
  42928c:	mov	x0, x21
  429290:	bl	428bdc <ferror@plt+0x2630c>
  429294:	mov	x20, x0
  429298:	cbz	x0, 4292c8 <ferror@plt+0x269f8>
  42929c:	bl	428b34 <ferror@plt+0x26264>
  4292a0:	and	w0, w0, #0xff
  4292a4:	cbz	w0, 42927c <ferror@plt+0x269ac>
  4292a8:	mov	w2, w19
  4292ac:	mov	x1, x20
  4292b0:	mov	x0, x21
  4292b4:	bl	428b54 <ferror@plt+0x26284>
  4292b8:	mov	w19, w0
  4292bc:	cmp	w0, #0x1
  4292c0:	b.hi	429288 <ferror@plt+0x269b8>  // b.pmore
  4292c4:	b	429284 <ferror@plt+0x269b4>
  4292c8:	mov	w0, #0x0                   	// #0
  4292cc:	ldp	x19, x20, [sp, #16]
  4292d0:	ldr	x21, [sp, #32]
  4292d4:	ldp	x29, x30, [sp], #48
  4292d8:	ret
  4292dc:	stp	x29, x30, [sp, #-64]!
  4292e0:	mov	x29, sp
  4292e4:	stp	x19, x20, [sp, #16]
  4292e8:	stp	x21, x22, [sp, #32]
  4292ec:	mov	x21, x0
  4292f0:	mov	w19, w1
  4292f4:	mov	x22, x3
  4292f8:	mov	w0, w1
  4292fc:	tbnz	w1, #31, 42933c <ferror@plt+0x26a6c>
  429300:	cmp	w0, #0x1
  429304:	b.ls	429358 <ferror@plt+0x26a88>  // b.plast
  429308:	mov	w20, #0x6fffffff            	// #1879048191
  42930c:	cmp	w2, #0x1
  429310:	b.eq	429394 <ferror@plt+0x26ac4>  // b.none
  429314:	cmp	w2, #0x2
  429318:	b.eq	429368 <ferror@plt+0x26a98>  // b.none
  42931c:	cbz	w2, 429374 <ferror@plt+0x26aa4>
  429320:	str	x23, [sp, #48]
  429324:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b094>
  429328:	add	x2, x2, #0x8b0
  42932c:	mov	w1, #0x621                 	// #1569
  429330:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b094>
  429334:	add	x0, x0, #0x8d0
  429338:	bl	4062a0 <ferror@plt+0x39d0>
  42933c:	and	x3, x19, #0x7fffffff
  429340:	ldr	x1, [x21, #104]
  429344:	lsl	w0, w19, #1
  429348:	add	x0, x0, x3
  42934c:	lsl	x0, x0, #3
  429350:	ldr	w0, [x1, x0]
  429354:	b	429300 <ferror@plt+0x26a30>
  429358:	mov	w0, w19
  42935c:	cbz	x22, 429384 <ferror@plt+0x26ab4>
  429360:	str	xzr, [x22]
  429364:	b	429384 <ferror@plt+0x26ab4>
  429368:	str	x23, [sp, #48]
  42936c:	mov	w23, #0x6fffffff            	// #1879048191
  429370:	b	429418 <ferror@plt+0x26b48>
  429374:	mov	x2, x22
  429378:	mov	w1, w19
  42937c:	mov	x0, x21
  429380:	bl	4290f8 <ferror@plt+0x26828>
  429384:	ldp	x19, x20, [sp, #16]
  429388:	ldp	x21, x22, [sp, #32]
  42938c:	ldp	x29, x30, [sp], #64
  429390:	ret
  429394:	mov	w1, w19
  429398:	mov	x0, x21
  42939c:	bl	428bdc <ferror@plt+0x2630c>
  4293a0:	mov	x1, x0
  4293a4:	cbz	x0, 4293c8 <ferror@plt+0x26af8>
  4293a8:	ldr	w0, [x0]
  4293ac:	cmp	w0, w20
  4293b0:	b.ls	4293c8 <ferror@plt+0x26af8>  // b.plast
  4293b4:	mov	w2, w19
  4293b8:	mov	x0, x21
  4293bc:	bl	428b54 <ferror@plt+0x26284>
  4293c0:	mov	w19, w0
  4293c4:	b	429394 <ferror@plt+0x26ac4>
  4293c8:	mov	w0, w19
  4293cc:	cbz	x22, 429384 <ferror@plt+0x26ab4>
  4293d0:	str	x1, [x22]
  4293d4:	b	429384 <ferror@plt+0x26ab4>
  4293d8:	mov	w1, w19
  4293dc:	mov	x0, x21
  4293e0:	bl	42833c <ferror@plt+0x25a6c>
  4293e4:	mov	w20, w0
  4293e8:	mov	w1, w20
  4293ec:	mov	x0, x21
  4293f0:	bl	428bdc <ferror@plt+0x2630c>
  4293f4:	cbz	x0, 429424 <ferror@plt+0x26b54>
  4293f8:	ldr	w1, [x0]
  4293fc:	cmp	w1, w23
  429400:	b.ls	429424 <ferror@plt+0x26b54>  // b.plast
  429404:	sub	w20, w20, w1
  429408:	lsl	w20, w20, #1
  42940c:	add	w20, w20, #0x1
  429410:	ldr	x0, [x0, #16]
  429414:	ldr	w19, [x0, x20, lsl #2]
  429418:	mov	w20, w19
  42941c:	tbz	w19, #31, 4293e8 <ferror@plt+0x26b18>
  429420:	b	4293d8 <ferror@plt+0x26b08>
  429424:	cbz	x22, 429438 <ferror@plt+0x26b68>
  429428:	str	x0, [x22]
  42942c:	mov	w0, w19
  429430:	ldr	x23, [sp, #48]
  429434:	b	429384 <ferror@plt+0x26ab4>
  429438:	mov	w0, w19
  42943c:	ldr	x23, [sp, #48]
  429440:	b	429384 <ferror@plt+0x26ab4>
  429444:	stp	x29, x30, [sp, #-64]!
  429448:	mov	x29, sp
  42944c:	stp	x19, x20, [sp, #16]
  429450:	str	x21, [sp, #32]
  429454:	mov	x21, x0
  429458:	mov	w19, w1
  42945c:	mov	w20, w2
  429460:	str	xzr, [sp, #56]
  429464:	tbnz	w1, #31, 42949c <ferror@plt+0x26bcc>
  429468:	mov	w1, w19
  42946c:	mov	x0, x21
  429470:	bl	428ba4 <ferror@plt+0x262d4>
  429474:	and	w0, w0, #0xff
  429478:	cbnz	w0, 429488 <ferror@plt+0x26bb8>
  42947c:	cmp	w20, #0x0
  429480:	ccmp	w19, #0x1, #0x0, ne  // ne = any
  429484:	b.hi	4294b8 <ferror@plt+0x26be8>  // b.pmore
  429488:	mov	w0, w19
  42948c:	ldp	x19, x20, [sp, #16]
  429490:	ldr	x21, [sp, #32]
  429494:	ldp	x29, x30, [sp], #64
  429498:	ret
  42949c:	and	x0, x19, #0x7fffffff
  4294a0:	lsl	w19, w1, #1
  4294a4:	add	x19, x19, x0
  4294a8:	lsl	x19, x19, #3
  4294ac:	ldr	x0, [x21, #104]
  4294b0:	ldr	w19, [x0, x19]
  4294b4:	b	429468 <ferror@plt+0x26b98>
  4294b8:	add	x3, sp, #0x38
  4294bc:	mov	w2, #0x1                   	// #1
  4294c0:	mov	w1, w19
  4294c4:	mov	x0, x21
  4294c8:	bl	4292dc <ferror@plt+0x26a0c>
  4294cc:	mov	w19, w0
  4294d0:	ldr	x0, [sp, #56]
  4294d4:	ldr	w3, [x0]
  4294d8:	ldrb	w7, [x0, #7]
  4294dc:	lsl	w1, w20, w7
  4294e0:	add	w1, w1, w19
  4294e4:	cmp	w1, w3
  4294e8:	b.ls	429488 <ferror@plt+0x26bb8>  // b.plast
  4294ec:	sub	w6, w19, w3
  4294f0:	ldrb	w5, [x0, #6]
  4294f4:	lsr	w1, w6, w5
  4294f8:	ldr	w2, [x0, #16]
  4294fc:	add	w2, w1, w2
  429500:	ldr	w1, [x21, #12]
  429504:	sub	w1, w1, #0x1
  429508:	sbfiz	x0, x1, #1, #32
  42950c:	add	x1, x0, w1, sxtw
  429510:	ldr	x0, [x21]
  429514:	add	x1, x0, x1, lsl #3
  429518:	ldr	x3, [sp, #56]
  42951c:	cmp	x3, x1
  429520:	b.eq	429558 <ferror@plt+0x26c88>  // b.none
  429524:	ldrb	w4, [x3, #7]
  429528:	lsl	w4, w20, w4
  42952c:	add	w4, w4, w19
  429530:	ldr	w0, [x3, #24]
  429534:	cmp	w4, w0
  429538:	b.cc	429554 <ferror@plt+0x26c84>  // b.lo, b.ul, b.last
  42953c:	add	x3, x3, #0x18
  429540:	str	x3, [sp, #56]
  429544:	ldr	w0, [x3, #16]
  429548:	cmp	w2, w0
  42954c:	b.cs	429518 <ferror@plt+0x26c48>  // b.hs, b.nlast
  429550:	b	429488 <ferror@plt+0x26bb8>
  429554:	mov	x1, x3
  429558:	mov	w0, #0x1                   	// #1
  42955c:	lsl	w3, w0, w5
  429560:	sub	w3, w3, #0x1
  429564:	and	w3, w3, w6
  429568:	lsr	w3, w3, w7
  42956c:	add	w3, w3, w20
  429570:	ldrb	w4, [x1, #6]
  429574:	ldrb	w5, [x1, #7]
  429578:	sub	w4, w4, w5
  42957c:	lsl	w0, w0, w4
  429580:	cmp	w0, w3
  429584:	b.ls	429488 <ferror@plt+0x26bb8>  // b.plast
  429588:	mov	x0, x21
  42958c:	bl	428ab4 <ferror@plt+0x261e4>
  429590:	mov	w20, w0
  429594:	ldr	w0, [x21, #56]
  429598:	cmp	w0, w20
  42959c:	b.cc	429488 <ferror@plt+0x26bb8>  // b.lo, b.ul, b.last
  4295a0:	mov	w1, w20
  4295a4:	mov	x0, x21
  4295a8:	bl	428bdc <ferror@plt+0x2630c>
  4295ac:	ldr	x1, [sp, #56]
  4295b0:	cmp	x1, x0
  4295b4:	csel	w19, w19, w20, ne  // ne = any
  4295b8:	b	429488 <ferror@plt+0x26bb8>
  4295bc:	stp	x29, x30, [sp, #-64]!
  4295c0:	mov	x29, sp
  4295c4:	stp	x19, x20, [sp, #16]
  4295c8:	stp	x21, x22, [sp, #32]
  4295cc:	stp	x23, x24, [sp, #48]
  4295d0:	mov	x20, x0
  4295d4:	mov	w21, w1
  4295d8:	mov	w22, w2
  4295dc:	mov	w24, w1
  4295e0:	tbnz	w1, #31, 42963c <ferror@plt+0x26d6c>
  4295e4:	mov	w19, w22
  4295e8:	tbnz	w22, #31, 429648 <ferror@plt+0x26d78>
  4295ec:	cmp	w24, w19
  4295f0:	b.eq	42977c <ferror@plt+0x26eac>  // b.none
  4295f4:	mov	w1, w24
  4295f8:	mov	x0, x20
  4295fc:	bl	428ba4 <ferror@plt+0x262d4>
  429600:	ands	w23, w0, #0xff
  429604:	b.ne	42965c <ferror@plt+0x26d8c>  // b.any
  429608:	mov	w1, w19
  42960c:	mov	x0, x20
  429610:	bl	428ba4 <ferror@plt+0x262d4>
  429614:	and	w1, w0, #0xff
  429618:	cbnz	w1, 429678 <ferror@plt+0x26da8>
  42961c:	tbnz	w24, #31, 429754 <ferror@plt+0x26e84>
  429620:	tbnz	w19, #31, 429768 <ferror@plt+0x26e98>
  429624:	sub	w0, w19, w24
  429628:	ldp	x19, x20, [sp, #16]
  42962c:	ldp	x21, x22, [sp, #32]
  429630:	ldp	x23, x24, [sp, #48]
  429634:	ldp	x29, x30, [sp], #64
  429638:	ret
  42963c:	bl	42833c <ferror@plt+0x25a6c>
  429640:	mov	w24, w0
  429644:	b	4295e4 <ferror@plt+0x26d14>
  429648:	mov	w1, w22
  42964c:	mov	x0, x20
  429650:	bl	42833c <ferror@plt+0x25a6c>
  429654:	mov	w19, w0
  429658:	b	4295ec <ferror@plt+0x26d1c>
  42965c:	mov	x3, #0x0                   	// #0
  429660:	mov	w2, #0x0                   	// #0
  429664:	mov	w1, w24
  429668:	mov	x0, x20
  42966c:	bl	4292dc <ferror@plt+0x26a0c>
  429670:	mov	w24, w0
  429674:	b	429608 <ferror@plt+0x26d38>
  429678:	mov	x3, #0x0                   	// #0
  42967c:	mov	w2, #0x0                   	// #0
  429680:	mov	w1, w19
  429684:	mov	x0, x20
  429688:	bl	4292dc <ferror@plt+0x26a0c>
  42968c:	mov	w19, w0
  429690:	cmp	w0, w24
  429694:	b.ne	42961c <ferror@plt+0x26d4c>  // b.any
  429698:	cbz	w23, 42974c <ferror@plt+0x26e7c>
  42969c:	mov	w1, w21
  4296a0:	mov	x0, x20
  4296a4:	bl	428bdc <ferror@plt+0x2630c>
  4296a8:	mov	x19, x0
  4296ac:	mov	w1, w22
  4296b0:	mov	x0, x20
  4296b4:	bl	428bdc <ferror@plt+0x2630c>
  4296b8:	mov	x23, x0
  4296bc:	b	4296f4 <ferror@plt+0x26e24>
  4296c0:	cmp	x19, x23
  4296c4:	b.eq	429740 <ferror@plt+0x26e70>  // b.none
  4296c8:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b094>
  4296cc:	add	x2, x2, #0x8e8
  4296d0:	mov	w1, #0x549                 	// #1353
  4296d4:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b094>
  4296d8:	add	x0, x0, #0x8d0
  4296dc:	bl	4062a0 <ferror@plt+0x39d0>
  4296e0:	ldr	w21, [x19, #24]
  4296e4:	mov	w1, w21
  4296e8:	mov	x0, x20
  4296ec:	bl	428bdc <ferror@plt+0x2630c>
  4296f0:	mov	x19, x0
  4296f4:	mov	x0, x19
  4296f8:	bl	428b34 <ferror@plt+0x26264>
  4296fc:	and	w0, w0, #0xff
  429700:	cbz	w0, 4296c0 <ferror@plt+0x26df0>
  429704:	mov	x0, x23
  429708:	bl	428b34 <ferror@plt+0x26264>
  42970c:	ands	w0, w0, #0xff
  429710:	ccmp	x19, x23, #0x4, ne  // ne = any
  429714:	b.eq	4296c0 <ferror@plt+0x26df0>  // b.none
  429718:	ldr	w1, [x19]
  42971c:	ldr	w0, [x23]
  429720:	cmp	w1, w0
  429724:	b.cc	4296e0 <ferror@plt+0x26e10>  // b.lo, b.ul, b.last
  429728:	ldr	w22, [x23, #24]
  42972c:	mov	w1, w22
  429730:	mov	x0, x20
  429734:	bl	428bdc <ferror@plt+0x2630c>
  429738:	mov	x23, x0
  42973c:	b	4296f4 <ferror@plt+0x26e24>
  429740:	sub	w0, w22, w21
  429744:	cbnz	x19, 429628 <ferror@plt+0x26d58>
  429748:	b	4296c8 <ferror@plt+0x26df8>
  42974c:	mov	w19, w24
  429750:	b	42961c <ferror@plt+0x26d4c>
  429754:	mov	w1, w24
  429758:	mov	x0, x20
  42975c:	bl	42833c <ferror@plt+0x25a6c>
  429760:	mov	w24, w0
  429764:	b	429620 <ferror@plt+0x26d50>
  429768:	mov	w1, w19
  42976c:	mov	x0, x20
  429770:	bl	42833c <ferror@plt+0x25a6c>
  429774:	mov	w19, w0
  429778:	b	429624 <ferror@plt+0x26d54>
  42977c:	mov	w0, #0x0                   	// #0
  429780:	b	429628 <ferror@plt+0x26d58>
  429784:	stp	x29, x30, [sp, #-48]!
  429788:	mov	x29, sp
  42978c:	stp	x19, x20, [sp, #16]
  429790:	stp	x21, x22, [sp, #32]
  429794:	mov	x21, x0
  429798:	mov	w19, w1
  42979c:	tbnz	w1, #31, 429820 <ferror@plt+0x26f50>
  4297a0:	mov	w1, w19
  4297a4:	mov	x0, x21
  4297a8:	bl	428ba4 <ferror@plt+0x262d4>
  4297ac:	ands	w0, w0, #0xff
  4297b0:	b.eq	429810 <ferror@plt+0x26f40>  // b.none
  4297b4:	mov	w1, w19
  4297b8:	mov	x0, x21
  4297bc:	bl	428bdc <ferror@plt+0x2630c>
  4297c0:	mov	x20, x0
  4297c4:	mov	w22, w19
  4297c8:	mov	w2, w19
  4297cc:	mov	x1, x0
  4297d0:	mov	x0, x21
  4297d4:	bl	428b54 <ferror@plt+0x26284>
  4297d8:	mov	w19, w0
  4297dc:	mov	w1, w0
  4297e0:	mov	x0, x21
  4297e4:	bl	428ba4 <ferror@plt+0x262d4>
  4297e8:	and	w0, w0, #0xff
  4297ec:	cbnz	w0, 4297b4 <ferror@plt+0x26ee4>
  4297f0:	ldr	w0, [x20]
  4297f4:	sub	w0, w22, w0
  4297f8:	lsl	w0, w0, #1
  4297fc:	add	w0, w0, #0x1
  429800:	ldr	x1, [x20, #16]
  429804:	ldr	w0, [x1, x0, lsl #2]
  429808:	cmp	w0, w19
  42980c:	cset	w0, eq  // eq = none
  429810:	ldp	x19, x20, [sp, #16]
  429814:	ldp	x21, x22, [sp, #32]
  429818:	ldp	x29, x30, [sp], #48
  42981c:	ret
  429820:	bl	42833c <ferror@plt+0x25a6c>
  429824:	mov	w19, w0
  429828:	b	4297a0 <ferror@plt+0x26ed0>
  42982c:	stp	x29, x30, [sp, #-64]!
  429830:	mov	x29, sp
  429834:	stp	x19, x20, [sp, #16]
  429838:	stp	x21, x22, [sp, #32]
  42983c:	str	x23, [sp, #48]
  429840:	mov	x19, x0
  429844:	mov	x21, x2
  429848:	ldr	x23, [x2]
  42984c:	tbnz	w1, #31, 42989c <ferror@plt+0x26fcc>
  429850:	mov	w2, w1
  429854:	mov	x1, x23
  429858:	mov	x0, x19
  42985c:	bl	428b54 <ferror@plt+0x26284>
  429860:	mov	w20, w0
  429864:	mov	w1, w0
  429868:	mov	x0, x19
  42986c:	bl	428bdc <ferror@plt+0x2630c>
  429870:	mov	x22, x0
  429874:	bl	428b34 <ferror@plt+0x26264>
  429878:	and	w0, w0, #0xff
  42987c:	cbz	w0, 4298b8 <ferror@plt+0x26fe8>
  429880:	str	x22, [x21]
  429884:	mov	w0, w20
  429888:	ldp	x19, x20, [sp, #16]
  42988c:	ldp	x21, x22, [sp, #32]
  429890:	ldr	x23, [sp, #48]
  429894:	ldp	x29, x30, [sp], #64
  429898:	ret
  42989c:	and	x0, x1, #0x7fffffff
  4298a0:	lsl	w1, w1, #1
  4298a4:	add	x1, x1, x0
  4298a8:	lsl	x1, x1, #3
  4298ac:	ldr	x0, [x19, #104]
  4298b0:	ldr	w1, [x0, x1]
  4298b4:	b	429850 <ferror@plt+0x26f80>
  4298b8:	ldr	w20, [x23, #24]
  4298bc:	mov	w1, w20
  4298c0:	mov	x0, x19
  4298c4:	bl	428bdc <ferror@plt+0x2630c>
  4298c8:	mov	x22, x0
  4298cc:	b	429880 <ferror@plt+0x26fb0>
  4298d0:	stp	x29, x30, [sp, #-80]!
  4298d4:	mov	x29, sp
  4298d8:	stp	x19, x20, [sp, #16]
  4298dc:	stp	x21, x22, [sp, #32]
  4298e0:	stp	x23, x24, [sp, #48]
  4298e4:	mov	x22, x0
  4298e8:	mov	w19, w1
  4298ec:	mov	x23, x2
  4298f0:	str	xzr, [sp, #72]
  4298f4:	str	xzr, [sp, #64]
  4298f8:	tbnz	w1, #31, 429930 <ferror@plt+0x27060>
  4298fc:	mov	w1, w19
  429900:	mov	x0, x22
  429904:	bl	428bdc <ferror@plt+0x2630c>
  429908:	str	x0, [sp, #72]
  42990c:	bl	428b34 <ferror@plt+0x26264>
  429910:	and	w0, w0, #0xff
  429914:	cbnz	w0, 42994c <ferror@plt+0x2707c>
  429918:	mov	w0, w19
  42991c:	ldp	x19, x20, [sp, #16]
  429920:	ldp	x21, x22, [sp, #32]
  429924:	ldp	x23, x24, [sp, #48]
  429928:	ldp	x29, x30, [sp], #80
  42992c:	ret
  429930:	and	x1, x19, #0x7fffffff
  429934:	lsl	w0, w19, #1
  429938:	add	x0, x0, x1
  42993c:	lsl	x0, x0, #3
  429940:	ldr	x1, [x22, #104]
  429944:	ldr	w19, [x1, x0]
  429948:	b	4298fc <ferror@plt+0x2702c>
  42994c:	add	x3, sp, #0x40
  429950:	mov	w2, #0x1                   	// #1
  429954:	mov	w1, w19
  429958:	mov	x0, x22
  42995c:	bl	4292dc <ferror@plt+0x26a0c>
  429960:	mov	w20, w0
  429964:	cmp	w0, #0x1
  429968:	b.ls	429978 <ferror@plt+0x270a8>  // b.plast
  42996c:	ldr	x0, [sp, #64]
  429970:	ldrb	w0, [x0, #5]
  429974:	cbz	w0, 429918 <ferror@plt+0x27048>
  429978:	mov	w24, #0x1                   	// #1
  42997c:	b	4299ac <ferror@plt+0x270dc>
  429980:	add	x2, sp, #0x48
  429984:	mov	w1, w19
  429988:	mov	x0, x22
  42998c:	bl	42982c <ferror@plt+0x26f5c>
  429990:	mov	w19, w0
  429994:	add	x3, sp, #0x40
  429998:	mov	w2, w24
  42999c:	mov	w1, w0
  4299a0:	mov	x0, x22
  4299a4:	bl	4292dc <ferror@plt+0x26a0c>
  4299a8:	mov	w20, w0
  4299ac:	ldr	x21, [sp, #72]
  4299b0:	mov	x0, x21
  4299b4:	bl	428b34 <ferror@plt+0x26264>
  4299b8:	and	w0, w0, #0xff
  4299bc:	cbz	w0, 4299d4 <ferror@plt+0x27104>
  4299c0:	cmp	w20, #0x1
  4299c4:	b.ls	429980 <ferror@plt+0x270b0>  // b.plast
  4299c8:	ldr	x0, [sp, #64]
  4299cc:	ldrb	w0, [x0, #5]
  4299d0:	cbnz	w0, 429980 <ferror@plt+0x270b0>
  4299d4:	cbz	x23, 429918 <ferror@plt+0x27048>
  4299d8:	str	x21, [x23]
  4299dc:	b	429918 <ferror@plt+0x27048>
  4299e0:	stp	x29, x30, [sp, #-48]!
  4299e4:	mov	x29, sp
  4299e8:	stp	x19, x20, [sp, #16]
  4299ec:	str	x21, [sp, #32]
  4299f0:	mov	x20, x8
  4299f4:	mov	x21, x1
  4299f8:	mov	w19, w2
  4299fc:	stp	xzr, xzr, [x8]
  429a00:	stp	xzr, xzr, [x8, #16]
  429a04:	tbnz	w2, #31, 429a84 <ferror@plt+0x271b4>
  429a08:	cmp	w19, #0x1
  429a0c:	b.ls	429a74 <ferror@plt+0x271a4>  // b.plast
  429a10:	cbz	x21, 429aac <ferror@plt+0x271dc>
  429a14:	mov	w1, w19
  429a18:	bl	428ba4 <ferror@plt+0x262d4>
  429a1c:	and	w0, w0, #0xff
  429a20:	cbnz	w0, 429ac4 <ferror@plt+0x271f4>
  429a24:	ldr	x0, [x21, #8]
  429a28:	str	x0, [x20]
  429a2c:	ldr	w2, [x21]
  429a30:	sub	w19, w19, w2
  429a34:	ldrb	w1, [x21, #6]
  429a38:	lsr	w0, w19, w1
  429a3c:	ldr	w2, [x21, #16]
  429a40:	add	w0, w0, w2
  429a44:	str	w0, [x20, #8]
  429a48:	mov	w2, #0x1                   	// #1
  429a4c:	lsl	w2, w2, w1
  429a50:	sub	w2, w2, #0x1
  429a54:	and	w19, w2, w19
  429a58:	ldrb	w0, [x21, #7]
  429a5c:	lsr	w19, w19, w0
  429a60:	str	w19, [x20, #12]
  429a64:	ldrb	w0, [x21, #5]
  429a68:	cmp	w0, #0x0
  429a6c:	cset	w0, ne  // ne = any
  429a70:	strb	w0, [x20, #24]
  429a74:	ldp	x19, x20, [sp, #16]
  429a78:	ldr	x21, [sp, #32]
  429a7c:	ldp	x29, x30, [sp], #48
  429a80:	ret
  429a84:	and	x1, x19, #0x7fffffff
  429a88:	lsl	w19, w2, #1
  429a8c:	add	x19, x19, x1
  429a90:	lsl	x19, x19, #3
  429a94:	ldr	x1, [x0, #104]
  429a98:	add	x2, x1, x19
  429a9c:	ldr	x2, [x2, #16]
  429aa0:	str	x2, [x8, #16]
  429aa4:	ldr	w19, [x1, x19]
  429aa8:	b	429a08 <ferror@plt+0x27138>
  429aac:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b094>
  429ab0:	add	x2, x2, #0x908
  429ab4:	mov	w1, #0x6bd                 	// #1725
  429ab8:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b094>
  429abc:	add	x0, x0, #0x8d0
  429ac0:	bl	4062a0 <ferror@plt+0x39d0>
  429ac4:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b094>
  429ac8:	add	x2, x2, #0x908
  429acc:	mov	w1, #0x6c5                 	// #1733
  429ad0:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b094>
  429ad4:	add	x0, x0, #0x8d0
  429ad8:	bl	4062a0 <ferror@plt+0x39d0>
  429adc:	stp	x29, x30, [sp, #-96]!
  429ae0:	mov	x29, sp
  429ae4:	stp	x19, x20, [sp, #16]
  429ae8:	stp	x21, x22, [sp, #32]
  429aec:	mov	x19, x0
  429af0:	mov	x21, x1
  429af4:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b094>
  429af8:	add	x0, x0, #0xaa0
  429afc:	ldp	x4, x5, [x0]
  429b00:	stp	x4, x5, [sp, #56]
  429b04:	ldp	x4, x5, [x0, #16]
  429b08:	stp	x4, x5, [sp, #72]
  429b0c:	ldr	x0, [x0, #32]
  429b10:	str	x0, [sp, #88]
  429b14:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  429b18:	ldr	x0, [x0, #1320]
  429b1c:	cmp	x19, #0x0
  429b20:	csel	x19, x0, x19, eq  // eq = none
  429b24:	ands	w3, w3, #0xff
  429b28:	b.ne	429bfc <ferror@plt+0x2732c>  // b.any
  429b2c:	sbfiz	x0, x2, #1, #32
  429b30:	add	x0, x0, w2, sxtw
  429b34:	lsl	x0, x0, #3
  429b38:	ldr	x4, [x1]
  429b3c:	add	x20, x4, x0
  429b40:	ldrb	w1, [x20, #4]
  429b44:	ldr	w4, [x4, x0]
  429b48:	cmp	w1, #0x4
  429b4c:	b.ls	429c10 <ferror@plt+0x27340>  // b.plast
  429b50:	adrp	x5, 458000 <_obstack_memory_used@@Base+0x11094>
  429b54:	add	x5, x5, #0x540
  429b58:	ldrb	w1, [x20, #5]
  429b5c:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b094>
  429b60:	add	x0, x0, #0x930
  429b64:	adrp	x6, 462000 <_obstack_memory_used@@Base+0x1b094>
  429b68:	add	x6, x6, #0x928
  429b6c:	cmp	w1, #0x0
  429b70:	csel	x6, x6, x0, ne  // ne = any
  429b74:	mov	x3, x20
  429b78:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b094>
  429b7c:	add	x1, x1, #0x950
  429b80:	mov	x0, x19
  429b84:	bl	402890 <fprintf@plt>
  429b88:	mov	x1, x20
  429b8c:	mov	x0, x21
  429b90:	bl	4283d8 <ferror@plt+0x25b08>
  429b94:	mov	x22, x0
  429b98:	ldr	w3, [x20, #16]
  429b9c:	ldr	x2, [x20, #8]
  429ba0:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b094>
  429ba4:	add	x1, x1, #0x998
  429ba8:	mov	x0, x19
  429bac:	bl	402890 <fprintf@plt>
  429bb0:	cbz	x22, 429c5c <ferror@plt+0x2738c>
  429bb4:	ldr	x2, [x21]
  429bb8:	sub	x2, x22, x2
  429bbc:	asr	x2, x2, #3
  429bc0:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  429bc4:	movk	x0, #0xaaab
  429bc8:	mul	w2, w2, w0
  429bcc:	ldr	x3, [x22, #8]
  429bd0:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b094>
  429bd4:	add	x1, x1, #0x938
  429bd8:	mov	x0, x19
  429bdc:	bl	402890 <fprintf@plt>
  429be0:	mov	x1, x19
  429be4:	mov	w0, #0xa                   	// #10
  429be8:	bl	402380 <fputc@plt>
  429bec:	ldp	x19, x20, [sp, #16]
  429bf0:	ldp	x21, x22, [sp, #32]
  429bf4:	ldp	x29, x30, [sp], #96
  429bf8:	ret
  429bfc:	sbfiz	x0, x2, #5, #32
  429c00:	ldr	x1, [x1, #24]
  429c04:	add	x20, x1, x0
  429c08:	ldr	w4, [x1, x0]
  429c0c:	mov	w1, #0x4                   	// #4
  429c10:	add	x0, sp, #0x60
  429c14:	add	x1, x0, w1, uxtb #3
  429c18:	ldur	x5, [x1, #-40]
  429c1c:	cbz	w3, 429b58 <ferror@plt+0x27288>
  429c20:	adrp	x6, 462000 <_obstack_memory_used@@Base+0x1b094>
  429c24:	add	x6, x6, #0x930
  429c28:	mov	x3, x20
  429c2c:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b094>
  429c30:	add	x1, x1, #0x950
  429c34:	mov	x0, x19
  429c38:	bl	402890 <fprintf@plt>
  429c3c:	ldr	x0, [x20, #8]
  429c40:	ldr	w3, [x20, #4]
  429c44:	ldr	x2, [x0]
  429c48:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b094>
  429c4c:	add	x1, x1, #0x980
  429c50:	mov	x0, x19
  429c54:	bl	402890 <fprintf@plt>
  429c58:	b	429be0 <ferror@plt+0x27310>
  429c5c:	mov	w2, #0xffffffff            	// #-1
  429c60:	adrp	x3, 462000 <_obstack_memory_used@@Base+0x1b094>
  429c64:	add	x3, x3, #0x920
  429c68:	b	429bd0 <ferror@plt+0x27300>
  429c6c:	sub	sp, sp, #0x80
  429c70:	stp	x29, x30, [sp, #32]
  429c74:	add	x29, sp, #0x20
  429c78:	stp	x19, x20, [sp, #48]
  429c7c:	stp	x21, x22, [sp, #64]
  429c80:	mov	x20, x0
  429c84:	mov	w19, w1
  429c88:	mov	x22, x2
  429c8c:	tbnz	w1, #31, 429ca8 <ferror@plt+0x273d8>
  429c90:	cbnz	w19, 429cc4 <ferror@plt+0x273f4>
  429c94:	ldp	x19, x20, [sp, #48]
  429c98:	ldp	x21, x22, [sp, #64]
  429c9c:	ldp	x29, x30, [sp, #32]
  429ca0:	add	sp, sp, #0x80
  429ca4:	ret
  429ca8:	and	x0, x19, #0x7fffffff
  429cac:	lsl	w19, w1, #1
  429cb0:	add	x19, x19, x0
  429cb4:	lsl	x19, x19, #3
  429cb8:	ldr	x0, [x20, #104]
  429cbc:	ldr	w19, [x0, x19]
  429cc0:	b	429c90 <ferror@plt+0x273c0>
  429cc4:	stp	x23, x24, [sp, #80]
  429cc8:	stp	x25, x26, [sp, #96]
  429ccc:	add	x3, sp, #0x78
  429cd0:	mov	w2, #0x2                   	// #2
  429cd4:	mov	w1, w19
  429cd8:	mov	x0, x20
  429cdc:	bl	4292dc <ferror@plt+0x26a0c>
  429ce0:	mov	w23, w0
  429ce4:	ldr	x1, [sp, #120]
  429ce8:	cbz	x1, 429d94 <ferror@plt+0x274c4>
  429cec:	ldr	x25, [x1, #8]
  429cf0:	ldr	w21, [x1]
  429cf4:	sub	w0, w0, w21
  429cf8:	ldrb	w2, [x1, #6]
  429cfc:	lsr	w24, w0, w2
  429d00:	ldr	w3, [x1, #16]
  429d04:	add	w24, w24, w3
  429d08:	mov	w21, #0x1                   	// #1
  429d0c:	lsl	w21, w21, w2
  429d10:	sub	w21, w21, #0x1
  429d14:	and	w21, w21, w0
  429d18:	ldrb	w0, [x1, #7]
  429d1c:	lsr	w21, w21, w0
  429d20:	ldrb	w0, [x1, #5]
  429d24:	cmp	w0, #0x0
  429d28:	cset	w26, ne  // ne = any
  429d2c:	cmp	w19, w23
  429d30:	cset	w0, ne  // ne = any
  429d34:	adrp	x3, 462000 <_obstack_memory_used@@Base+0x1b094>
  429d38:	add	x3, x3, #0x9a8
  429d3c:	b.eq	429d7c <ferror@plt+0x274ac>  // b.none
  429d40:	str	w23, [sp, #16]
  429d44:	str	w19, [sp, #8]
  429d48:	str	w0, [sp]
  429d4c:	ldr	x7, [sp, #120]
  429d50:	mov	w6, w26
  429d54:	mov	w5, w21
  429d58:	mov	w4, w24
  429d5c:	mov	x2, x25
  429d60:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b094>
  429d64:	add	x1, x1, #0x9b8
  429d68:	mov	x0, x22
  429d6c:	bl	402890 <fprintf@plt>
  429d70:	ldp	x23, x24, [sp, #80]
  429d74:	ldp	x25, x26, [sp, #96]
  429d78:	b	429c94 <ferror@plt+0x273c4>
  429d7c:	mov	x0, x20
  429d80:	bl	4283d8 <ferror@plt+0x25b08>
  429d84:	cbz	x0, 429db4 <ferror@plt+0x274e4>
  429d88:	ldr	x3, [x0, #8]
  429d8c:	mov	w0, #0x0                   	// #0
  429d90:	b	429d40 <ferror@plt+0x27470>
  429d94:	mov	w0, #0xffffffff            	// #-1
  429d98:	mov	w26, w0
  429d9c:	mov	w21, w0
  429da0:	mov	w24, w0
  429da4:	adrp	x3, 458000 <_obstack_memory_used@@Base+0x11094>
  429da8:	add	x3, x3, #0x710
  429dac:	mov	x25, x3
  429db0:	b	429d40 <ferror@plt+0x27470>
  429db4:	mov	w0, #0x0                   	// #0
  429db8:	adrp	x3, 462000 <_obstack_memory_used@@Base+0x1b094>
  429dbc:	add	x3, x3, #0x9b0
  429dc0:	b	429d40 <ferror@plt+0x27470>
  429dc4:	cbz	x0, 429e88 <ferror@plt+0x275b8>
  429dc8:	stp	x29, x30, [sp, #-64]!
  429dcc:	mov	x29, sp
  429dd0:	stp	x19, x20, [sp, #16]
  429dd4:	stp	x21, x22, [sp, #32]
  429dd8:	str	x23, [sp, #48]
  429ddc:	mov	x22, x0
  429de0:	mov	x23, x1
  429de4:	mov	x21, x2
  429de8:	ldr	w19, [x0, #12]
  429dec:	mov	w0, #0x0                   	// #0
  429df0:	cbz	w19, 429e6c <ferror@plt+0x2759c>
  429df4:	subs	w19, w19, #0x1
  429df8:	b.mi	429e98 <ferror@plt+0x275c8>  // b.first
  429dfc:	sbfiz	x20, x19, #1, #32
  429e00:	add	x20, x20, w19, sxtw
  429e04:	lsl	x20, x20, #3
  429e08:	b	429e18 <ferror@plt+0x27548>
  429e0c:	sub	x20, x20, #0x18
  429e10:	subs	w19, w19, #0x1
  429e14:	b.mi	429e98 <ferror@plt+0x275c8>  // b.first
  429e18:	ldr	x3, [x22]
  429e1c:	add	x3, x3, x20
  429e20:	ldr	x0, [x3, #8]
  429e24:	cbz	x0, 429e0c <ferror@plt+0x2753c>
  429e28:	mov	x1, x23
  429e2c:	bl	445944 <ferror@plt+0x43074>
  429e30:	cbnz	w0, 429e0c <ferror@plt+0x2753c>
  429e34:	tbnz	w19, #31, 429e90 <ferror@plt+0x275c0>
  429e38:	ldr	w0, [x22, #12]
  429e3c:	sub	w0, w0, #0x1
  429e40:	cmp	w0, w19
  429e44:	b.eq	429e80 <ferror@plt+0x275b0>  // b.none
  429e48:	sxtw	x19, w19
  429e4c:	add	x19, x19, #0x1
  429e50:	ldr	x0, [x22]
  429e54:	add	x19, x19, x19, lsl #1
  429e58:	lsl	x19, x19, #3
  429e5c:	ldr	w0, [x0, x19]
  429e60:	sub	w0, w0, #0x1
  429e64:	str	w0, [x21]
  429e68:	mov	w0, #0x1                   	// #1
  429e6c:	ldp	x19, x20, [sp, #16]
  429e70:	ldp	x21, x22, [sp, #32]
  429e74:	ldr	x23, [sp, #48]
  429e78:	ldp	x29, x30, [sp], #64
  429e7c:	ret
  429e80:	ldr	w0, [x22, #56]
  429e84:	b	429e64 <ferror@plt+0x27594>
  429e88:	mov	w0, #0x0                   	// #0
  429e8c:	ret
  429e90:	mov	w0, #0x0                   	// #0
  429e94:	b	429e6c <ferror@plt+0x2759c>
  429e98:	mov	w0, #0x0                   	// #0
  429e9c:	b	429e6c <ferror@plt+0x2759c>
  429ea0:	ldr	w14, [x0, #8]
  429ea4:	ubfiz	x13, x14, #1, #32
  429ea8:	add	x13, x13, w14, uxtw
  429eac:	lsl	x13, x13, #3
  429eb0:	ldr	w2, [x0, #12]
  429eb4:	add	x2, x2, x2, lsl #1
  429eb8:	lsl	x12, x2, #3
  429ebc:	ldr	w15, [x0, #32]
  429ec0:	lsl	x15, x15, #5
  429ec4:	ldr	x9, [x0, #24]
  429ec8:	cbz	x9, 429ee8 <ferror@plt+0x27618>
  429ecc:	ldr	w11, [x0, #36]
  429ed0:	sub	w11, w11, #0x1
  429ed4:	sbfiz	x11, x11, #5, #32
  429ed8:	add	x11, x9, x11
  429edc:	mov	x3, #0x0                   	// #0
  429ee0:	mov	x10, #0x0                   	// #0
  429ee4:	b	429f60 <ferror@plt+0x27690>
  429ee8:	mov	x3, #0x0                   	// #0
  429eec:	mov	x10, #0x0                   	// #0
  429ef0:	ldr	w2, [x0, #36]
  429ef4:	lsl	x2, x2, #5
  429ef8:	mov	w14, w14
  429efc:	str	x14, [x1]
  429f00:	ldr	w4, [x0, #12]
  429f04:	str	x4, [x1, #8]
  429f08:	str	x13, [x1, #16]
  429f0c:	str	x12, [x1, #24]
  429f10:	adrp	x4, 488000 <_obstack_memory_used@@Base+0x41094>
  429f14:	ldr	w4, [x4, #1948]
  429f18:	str	x4, [x1, #32]
  429f1c:	adrp	x4, 488000 <_obstack_memory_used@@Base+0x41094>
  429f20:	ldr	w4, [x4, #1944]
  429f24:	str	x4, [x1, #40]
  429f28:	ldr	w4, [x0, #36]
  429f2c:	str	x4, [x1, #48]
  429f30:	str	x15, [x1, #56]
  429f34:	str	x10, [x1, #72]
  429f38:	str	x2, [x1, #64]
  429f3c:	str	x3, [x1, #80]
  429f40:	ldr	w2, [x0, #100]
  429f44:	add	x2, x2, x2, lsl #1
  429f48:	lsl	x2, x2, #3
  429f4c:	str	x2, [x1, #88]
  429f50:	ldr	w0, [x0, #96]
  429f54:	str	x0, [x1, #96]
  429f58:	ret
  429f5c:	add	x9, x9, #0x20
  429f60:	cmp	x11, x9
  429f64:	b.cc	429ef0 <ferror@plt+0x27620>  // b.lo, b.ul, b.last
  429f68:	ldr	w2, [x9, #4]
  429f6c:	lsl	w8, w2, #1
  429f70:	ubfiz	x4, x2, #3, #31
  429f74:	add	x10, x4, x10
  429f78:	cmp	wzr, w2, lsl #1
  429f7c:	b.eq	429f5c <ferror@plt+0x2768c>  // b.none
  429f80:	ldr	x4, [x9, #16]
  429f84:	mov	w2, #0x0                   	// #0
  429f88:	add	w5, w2, #0x1
  429f8c:	ldr	w7, [x4, w2, uxtw #2]
  429f90:	ldr	w6, [x4, x5, lsl #2]
  429f94:	add	x5, x3, #0x4
  429f98:	cmp	w7, w6
  429f9c:	csel	x3, x5, x3, eq  // eq = none
  429fa0:	add	w2, w2, #0x2
  429fa4:	cmp	w8, w2
  429fa8:	b.hi	429f88 <ferror@plt+0x276b8>  // b.pmore
  429fac:	b	429f5c <ferror@plt+0x2768c>
  429fb0:	cbz	x1, 42a108 <ferror@plt+0x27838>
  429fb4:	stp	x29, x30, [sp, #-64]!
  429fb8:	mov	x29, sp
  429fbc:	stp	x19, x20, [sp, #16]
  429fc0:	stp	x21, x22, [sp, #32]
  429fc4:	str	x23, [sp, #48]
  429fc8:	mov	x20, x0
  429fcc:	mov	x19, x1
  429fd0:	mov	w23, w2
  429fd4:	mov	w22, w3
  429fd8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  429fdc:	ldr	x0, [x0, #1320]
  429fe0:	cmp	x20, #0x0
  429fe4:	csel	x20, x0, x20, eq  // eq = none
  429fe8:	ldr	w2, [x1, #12]
  429fec:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b094>
  429ff0:	add	x1, x1, #0x9f0
  429ff4:	mov	x0, x20
  429ff8:	bl	402890 <fprintf@plt>
  429ffc:	ldr	w2, [x19, #36]
  42a000:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b094>
  42a004:	add	x1, x1, #0xa10
  42a008:	mov	x0, x20
  42a00c:	bl	402890 <fprintf@plt>
  42a010:	ldr	w2, [x19, #48]
  42a014:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b094>
  42a018:	add	x1, x1, #0xa30
  42a01c:	mov	x0, x20
  42a020:	bl	402890 <fprintf@plt>
  42a024:	ldr	w2, [x19, #56]
  42a028:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b094>
  42a02c:	add	x1, x1, #0xa50
  42a030:	mov	x0, x20
  42a034:	bl	402890 <fprintf@plt>
  42a038:	cbnz	w23, 42a054 <ferror@plt+0x27784>
  42a03c:	cbnz	w22, 42a0ac <ferror@plt+0x277dc>
  42a040:	ldp	x19, x20, [sp, #16]
  42a044:	ldp	x21, x22, [sp, #32]
  42a048:	ldr	x23, [sp, #48]
  42a04c:	ldp	x29, x30, [sp], #64
  42a050:	ret
  42a054:	mov	x3, x20
  42a058:	mov	x2, #0x14                  	// #20
  42a05c:	mov	x1, #0x1                   	// #1
  42a060:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b094>
  42a064:	add	x0, x0, #0xa70
  42a068:	bl	4026d0 <fwrite@plt>
  42a06c:	mov	w21, #0x0                   	// #0
  42a070:	ldr	w0, [x19, #12]
  42a074:	cmp	w0, w21
  42a078:	b.ls	42a09c <ferror@plt+0x277cc>  // b.plast
  42a07c:	mov	w3, #0x0                   	// #0
  42a080:	mov	w2, w21
  42a084:	mov	x1, x19
  42a088:	mov	x0, x20
  42a08c:	bl	429adc <ferror@plt+0x2720c>
  42a090:	add	w21, w21, #0x1
  42a094:	cmp	w23, w21
  42a098:	b.ne	42a070 <ferror@plt+0x277a0>  // b.any
  42a09c:	mov	x1, x20
  42a0a0:	mov	w0, #0xa                   	// #10
  42a0a4:	bl	402380 <fputc@plt>
  42a0a8:	b	42a03c <ferror@plt+0x2776c>
  42a0ac:	mov	x3, x20
  42a0b0:	mov	x2, #0x11                  	// #17
  42a0b4:	mov	x1, #0x1                   	// #1
  42a0b8:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b094>
  42a0bc:	add	x0, x0, #0xa88
  42a0c0:	bl	4026d0 <fwrite@plt>
  42a0c4:	mov	w21, #0x0                   	// #0
  42a0c8:	mov	w23, #0x1                   	// #1
  42a0cc:	ldr	w0, [x19, #36]
  42a0d0:	cmp	w0, w21
  42a0d4:	b.ls	42a0f8 <ferror@plt+0x27828>  // b.plast
  42a0d8:	mov	w3, w23
  42a0dc:	mov	w2, w21
  42a0e0:	mov	x1, x19
  42a0e4:	mov	x0, x20
  42a0e8:	bl	429adc <ferror@plt+0x2720c>
  42a0ec:	add	w21, w21, #0x1
  42a0f0:	cmp	w22, w21
  42a0f4:	b.ne	42a0cc <ferror@plt+0x277fc>  // b.any
  42a0f8:	mov	x1, x20
  42a0fc:	mov	w0, #0xa                   	// #10
  42a100:	bl	402380 <fputc@plt>
  42a104:	b	42a040 <ferror@plt+0x27770>
  42a108:	ret
  42a10c:	stp	x29, x30, [sp, #-48]!
  42a110:	mov	x29, sp
  42a114:	stp	x21, x22, [sp, #32]
  42a118:	mov	x21, x0
  42a11c:	ldr	w0, [x0, #120]
  42a120:	cbz	w0, 42a18c <ferror@plt+0x278bc>
  42a124:	stp	x19, x20, [sp, #16]
  42a128:	mov	w19, #0x0                   	// #0
  42a12c:	mov	x22, #0x18                  	// #24
  42a130:	b	42a164 <ferror@plt+0x27894>
  42a134:	add	x1, x21, w19, sxtw #3
  42a138:	add	x1, x1, #0x80
  42a13c:	b	42a17c <ferror@plt+0x278ac>
  42a140:	ldr	x0, [x20, #8]
  42a144:	bl	402690 <free@plt>
  42a148:	mov	x1, x22
  42a14c:	mov	x0, x20
  42a150:	bl	447628 <_obstack_memory_used@@Base+0x6bc>
  42a154:	add	w19, w19, #0x1
  42a158:	ldr	w0, [x21, #120]
  42a15c:	cmp	w0, w19
  42a160:	b.ls	42a188 <ferror@plt+0x278b8>  // b.plast
  42a164:	cmp	w19, #0x1
  42a168:	b.le	42a134 <ferror@plt+0x27864>
  42a16c:	sbfiz	x1, x19, #3, #32
  42a170:	sub	x0, x1, #0x10
  42a174:	ldr	x1, [x21, #152]
  42a178:	add	x1, x1, x0
  42a17c:	ldr	x20, [x1]
  42a180:	cbnz	x20, 42a140 <ferror@plt+0x27870>
  42a184:	b	42a154 <ferror@plt+0x27884>
  42a188:	ldp	x19, x20, [sp, #16]
  42a18c:	ldr	x0, [x21, #152]
  42a190:	bl	402690 <free@plt>
  42a194:	ldr	x0, [x21, #72]
  42a198:	bl	402690 <free@plt>
  42a19c:	ldp	x21, x22, [sp, #32]
  42a1a0:	ldp	x29, x30, [sp], #48
  42a1a4:	ret
  42a1a8:	cmp	w1, #0x2
  42a1ac:	b.gt	42a1bc <ferror@plt+0x278ec>
  42a1b0:	add	x1, x0, w1, sxtw #4
  42a1b4:	add	x0, x1, #0x10
  42a1b8:	ret
  42a1bc:	sbfiz	x1, x1, #4, #32
  42a1c0:	sub	x1, x1, #0x30
  42a1c4:	ldr	x0, [x0, #72]
  42a1c8:	add	x0, x0, x1
  42a1cc:	b	42a1b8 <ferror@plt+0x278e8>
  42a1d0:	stp	x29, x30, [sp, #-16]!
  42a1d4:	mov	x29, sp
  42a1d8:	bl	42a1a8 <ferror@plt+0x278d8>
  42a1dc:	ldr	w0, [x0]
  42a1e0:	ldp	x29, x30, [sp], #16
  42a1e4:	ret
  42a1e8:	cmp	w1, #0x2
  42a1ec:	b.gt	42a1fc <ferror@plt+0x2792c>
  42a1f0:	add	x1, x0, w1, sxtw #4
  42a1f4:	add	x0, x1, #0x10
  42a1f8:	ret
  42a1fc:	sbfiz	x1, x1, #4, #32
  42a200:	sub	x1, x1, #0x30
  42a204:	ldr	x0, [x0, #72]
  42a208:	add	x0, x0, x1
  42a20c:	b	42a1f8 <ferror@plt+0x27928>
  42a210:	stp	x29, x30, [sp, #-80]!
  42a214:	mov	x29, sp
  42a218:	stp	x19, x20, [sp, #16]
  42a21c:	mov	x20, x8
  42a220:	mov	x19, x0
  42a224:	cbnz	w1, 42a290 <ferror@plt+0x279c0>
  42a228:	ldrb	w0, [x0, #84]
  42a22c:	cbz	w0, 42a24c <ferror@plt+0x2797c>
  42a230:	ldp	x0, x1, [x19, #88]
  42a234:	stp	x0, x1, [x20]
  42a238:	ldp	x0, x1, [x19, #104]
  42a23c:	stp	x0, x1, [x20, #16]
  42a240:	ldp	x19, x20, [sp, #16]
  42a244:	ldp	x29, x30, [sp], #80
  42a248:	ret
  42a24c:	str	x21, [sp, #32]
  42a250:	mov	x0, x19
  42a254:	bl	42a1d0 <ferror@plt+0x27900>
  42a258:	add	x8, sp, #0x30
  42a25c:	mov	w1, #0x0                   	// #0
  42a260:	bl	412104 <ferror@plt+0xf834>
  42a264:	ldp	x0, x1, [sp, #48]
  42a268:	stp	x0, x1, [x19, #88]
  42a26c:	ldp	x0, x1, [sp, #64]
  42a270:	stp	x0, x1, [x19, #104]
  42a274:	ldr	w0, [x19, #80]
  42a278:	cbz	w0, 42a280 <ferror@plt+0x279b0>
  42a27c:	str	w0, [x19, #100]
  42a280:	mov	w0, #0x1                   	// #1
  42a284:	strb	w0, [x19, #84]
  42a288:	ldr	x21, [sp, #32]
  42a28c:	b	42a230 <ferror@plt+0x27960>
  42a290:	bl	42a1d0 <ferror@plt+0x27900>
  42a294:	mov	x8, x20
  42a298:	mov	w1, #0x0                   	// #0
  42a29c:	bl	412104 <ferror@plt+0xf834>
  42a2a0:	b	42a240 <ferror@plt+0x27970>
  42a2a4:	str	w1, [x0, #80]
  42a2a8:	strb	wzr, [x0, #84]
  42a2ac:	ret
  42a2b0:	stp	x29, x30, [sp, #-64]!
  42a2b4:	mov	x29, sp
  42a2b8:	stp	x19, x20, [sp, #16]
  42a2bc:	stp	x21, x22, [sp, #32]
  42a2c0:	stp	x23, x24, [sp, #48]
  42a2c4:	mov	x20, x0
  42a2c8:	mov	w23, w1
  42a2cc:	mov	w22, w2
  42a2d0:	mov	x21, x3
  42a2d4:	ldr	w4, [x0, #8]
  42a2d8:	add	w0, w4, #0x1
  42a2dc:	str	w0, [x20, #8]
  42a2e0:	cmp	w4, #0x2
  42a2e4:	b.gt	42a318 <ferror@plt+0x27a48>
  42a2e8:	add	x20, x20, #0x8
  42a2ec:	sbfiz	x4, x4, #4, #32
  42a2f0:	add	x4, x4, #0x8
  42a2f4:	add	x1, x20, x4
  42a2f8:	str	w23, [x20, x4]
  42a2fc:	str	w2, [x1, #4]
  42a300:	str	x3, [x1, #8]
  42a304:	ldp	x19, x20, [sp, #16]
  42a308:	ldp	x21, x22, [sp, #32]
  42a30c:	ldp	x23, x24, [sp, #48]
  42a310:	ldp	x29, x30, [sp], #64
  42a314:	ret
  42a318:	sub	w19, w4, #0x3
  42a31c:	ldr	x0, [x20, #72]
  42a320:	cbz	x0, 42a34c <ferror@plt+0x27a7c>
  42a324:	ldr	w1, [x20, #64]
  42a328:	cmp	w19, w1
  42a32c:	b.ge	42a364 <ferror@plt+0x27a94>  // b.tcont
  42a330:	sbfiz	x4, x19, #4, #32
  42a334:	ldr	x1, [x20, #72]
  42a338:	add	x0, x1, x4
  42a33c:	str	w23, [x1, x4]
  42a340:	str	w22, [x0, #4]
  42a344:	str	x21, [x0, #8]
  42a348:	b	42a304 <ferror@plt+0x27a34>
  42a34c:	mov	w0, #0x10                  	// #16
  42a350:	str	w0, [x20, #64]
  42a354:	mov	x0, #0x100                 	// #256
  42a358:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  42a35c:	str	x0, [x20, #72]
  42a360:	b	42a330 <ferror@plt+0x27a60>
  42a364:	lsl	w1, w1, #1
  42a368:	str	w1, [x20, #64]
  42a36c:	sbfiz	x1, x1, #4, #32
  42a370:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  42a374:	str	x0, [x20, #72]
  42a378:	b	42a330 <ferror@plt+0x27a60>
  42a37c:	stp	x29, x30, [sp, #-16]!
  42a380:	mov	x29, sp
  42a384:	mov	x5, x1
  42a388:	mov	w1, w2
  42a38c:	mov	x2, x0
  42a390:	str	x5, [x2], #8
  42a394:	str	wzr, [x0, #8]
  42a398:	str	wzr, [x2, #56]
  42a39c:	str	xzr, [x2, #64]
  42a3a0:	str	wzr, [x0, #80]
  42a3a4:	strb	wzr, [x0, #84]
  42a3a8:	str	wzr, [x0, #120]
  42a3ac:	str	wzr, [x0, #144]
  42a3b0:	str	xzr, [x0, #152]
  42a3b4:	strb	wzr, [x0, #160]
  42a3b8:	strb	wzr, [x0, #161]
  42a3bc:	mov	w2, #0x0                   	// #0
  42a3c0:	bl	42a2b0 <ferror@plt+0x279e0>
  42a3c4:	ldp	x29, x30, [sp], #16
  42a3c8:	ret
  42a3cc:	stp	x29, x30, [sp, #-48]!
  42a3d0:	mov	x29, sp
  42a3d4:	stp	x19, x20, [sp, #16]
  42a3d8:	stp	x21, x22, [sp, #32]
  42a3dc:	mov	x20, x0
  42a3e0:	mov	w19, w1
  42a3e4:	mov	w22, w2
  42a3e8:	mov	w21, w3
  42a3ec:	ldr	w0, [x0, #8]
  42a3f0:	cmp	w0, w1
  42a3f4:	b.eq	42a420 <ferror@plt+0x27b50>  // b.none
  42a3f8:	mov	x0, x20
  42a3fc:	bl	42a1e8 <ferror@plt+0x27918>
  42a400:	str	w22, [x0]
  42a404:	str	w21, [x0, #4]
  42a408:	cbnz	w19, 42a410 <ferror@plt+0x27b40>
  42a40c:	strb	wzr, [x20, #84]
  42a410:	ldp	x19, x20, [sp, #16]
  42a414:	ldp	x21, x22, [sp, #32]
  42a418:	ldp	x29, x30, [sp], #48
  42a41c:	ret
  42a420:	mov	x3, #0x0                   	// #0
  42a424:	mov	w2, w21
  42a428:	mov	w1, w22
  42a42c:	mov	x0, x20
  42a430:	bl	42a2b0 <ferror@plt+0x279e0>
  42a434:	b	42a408 <ferror@plt+0x27b38>
  42a438:	ldr	w1, [x0, #120]
  42a43c:	cbz	w1, 42a470 <ferror@plt+0x27ba0>
  42a440:	sub	w1, w1, #0x1
  42a444:	cmp	w1, #0x1
  42a448:	b.le	42a464 <ferror@plt+0x27b94>
  42a44c:	sbfiz	x1, x1, #3, #32
  42a450:	sub	x1, x1, #0x10
  42a454:	ldr	x0, [x0, #152]
  42a458:	add	x1, x0, x1
  42a45c:	ldr	x0, [x1]
  42a460:	ret
  42a464:	add	x1, x0, w1, sxtw #3
  42a468:	add	x1, x1, #0x80
  42a46c:	b	42a45c <ferror@plt+0x27b8c>
  42a470:	mov	x0, #0x0                   	// #0
  42a474:	b	42a460 <ferror@plt+0x27b90>
  42a478:	stp	x29, x30, [sp, #-48]!
  42a47c:	mov	x29, sp
  42a480:	stp	x21, x22, [sp, #32]
  42a484:	mov	x21, x0
  42a488:	mov	w0, #0x1                   	// #1
  42a48c:	strb	w0, [x21, #160]
  42a490:	ldr	w0, [x21, #120]
  42a494:	cbz	w0, 42a500 <ferror@plt+0x27c30>
  42a498:	stp	x19, x20, [sp, #16]
  42a49c:	mov	w19, #0x0                   	// #0
  42a4a0:	mov	x22, #0x18                  	// #24
  42a4a4:	b	42a4d8 <ferror@plt+0x27c08>
  42a4a8:	add	x1, x21, w19, sxtw #3
  42a4ac:	add	x1, x1, #0x80
  42a4b0:	b	42a4f0 <ferror@plt+0x27c20>
  42a4b4:	ldr	x0, [x20, #8]
  42a4b8:	bl	402690 <free@plt>
  42a4bc:	mov	x1, x22
  42a4c0:	mov	x0, x20
  42a4c4:	bl	447628 <_obstack_memory_used@@Base+0x6bc>
  42a4c8:	add	w19, w19, #0x1
  42a4cc:	ldr	w0, [x21, #120]
  42a4d0:	cmp	w0, w19
  42a4d4:	b.ls	42a4fc <ferror@plt+0x27c2c>  // b.plast
  42a4d8:	cmp	w19, #0x1
  42a4dc:	b.le	42a4a8 <ferror@plt+0x27bd8>
  42a4e0:	sbfiz	x1, x19, #3, #32
  42a4e4:	sub	x0, x1, #0x10
  42a4e8:	ldr	x1, [x21, #152]
  42a4ec:	add	x1, x1, x0
  42a4f0:	ldr	x20, [x1]
  42a4f4:	cbnz	x20, 42a4b4 <ferror@plt+0x27be4>
  42a4f8:	b	42a4c8 <ferror@plt+0x27bf8>
  42a4fc:	ldp	x19, x20, [sp, #16]
  42a500:	str	wzr, [x21, #120]
  42a504:	ldp	x21, x22, [sp, #32]
  42a508:	ldp	x29, x30, [sp], #48
  42a50c:	ret
  42a510:	ldrb	w2, [x0, #160]
  42a514:	cbnz	w2, 42a524 <ferror@plt+0x27c54>
  42a518:	mov	w3, #0x60000000            	// #1610612736
  42a51c:	cmp	w1, w3
  42a520:	b.hi	42a52c <ferror@plt+0x27c5c>  // b.pmore
  42a524:	mov	w0, w2
  42a528:	ret
  42a52c:	stp	x29, x30, [sp, #-16]!
  42a530:	mov	x29, sp
  42a534:	bl	42a478 <ferror@plt+0x27ba8>
  42a538:	mov	w2, #0x1                   	// #1
  42a53c:	mov	w0, w2
  42a540:	ldp	x29, x30, [sp], #16
  42a544:	ret
  42a548:	stp	x29, x30, [sp, #-32]!
  42a54c:	mov	x29, sp
  42a550:	stp	x19, x20, [sp, #16]
  42a554:	mov	x19, x0
  42a558:	mov	x20, x3
  42a55c:	str	w1, [x0]
  42a560:	str	w2, [x0, #4]
  42a564:	mov	x0, x3
  42a568:	bl	447178 <_obstack_memory_used@@Base+0x20c>
  42a56c:	str	x0, [x19, #8]
  42a570:	mov	x0, x20
  42a574:	bl	4022b0 <strlen@plt>
  42a578:	str	x0, [x19, #16]
  42a57c:	ldp	x19, x20, [sp, #16]
  42a580:	ldp	x29, x30, [sp], #32
  42a584:	ret
  42a588:	stp	x29, x30, [sp, #-112]!
  42a58c:	mov	x29, sp
  42a590:	stp	x19, x20, [sp, #16]
  42a594:	str	x21, [sp, #32]
  42a598:	mov	x20, x0
  42a59c:	mov	x19, x1
  42a5a0:	mov	w21, w2
  42a5a4:	add	x8, sp, #0x50
  42a5a8:	mov	w1, #0x1                   	// #1
  42a5ac:	ldr	w0, [x0]
  42a5b0:	bl	412104 <ferror@plt+0xf834>
  42a5b4:	ldr	x0, [sp, #80]
  42a5b8:	cmp	x0, x19
  42a5bc:	b.eq	42a5d4 <ferror@plt+0x27d04>  // b.none
  42a5c0:	mov	w0, #0x0                   	// #0
  42a5c4:	ldp	x19, x20, [sp, #16]
  42a5c8:	ldr	x21, [sp, #32]
  42a5cc:	ldp	x29, x30, [sp], #112
  42a5d0:	ret
  42a5d4:	mov	w0, #0x0                   	// #0
  42a5d8:	ldr	w1, [sp, #88]
  42a5dc:	cmp	w1, w21
  42a5e0:	b.gt	42a5c4 <ferror@plt+0x27cf4>
  42a5e4:	add	x8, sp, #0x30
  42a5e8:	mov	w1, #0x1                   	// #1
  42a5ec:	ldr	w0, [x20, #4]
  42a5f0:	bl	412104 <ferror@plt+0xf834>
  42a5f4:	mov	w0, #0x0                   	// #0
  42a5f8:	ldr	x1, [sp, #48]
  42a5fc:	cmp	x1, x19
  42a600:	b.ne	42a5c4 <ferror@plt+0x27cf4>  // b.any
  42a604:	ldr	w0, [sp, #56]
  42a608:	cmp	w0, w21
  42a60c:	cset	w0, ge  // ge = tcont
  42a610:	b	42a5c4 <ferror@plt+0x27cf4>
  42a614:	stp	x29, x30, [sp, #-48]!
  42a618:	mov	x29, sp
  42a61c:	stp	x19, x20, [sp, #16]
  42a620:	mov	x19, x0
  42a624:	ldr	w0, [x0, #4]
  42a628:	cmp	w0, w1
  42a62c:	b.eq	42a640 <ferror@plt+0x27d70>  // b.none
  42a630:	mov	w0, #0x0                   	// #0
  42a634:	ldp	x19, x20, [sp, #16]
  42a638:	ldp	x29, x30, [sp], #48
  42a63c:	ret
  42a640:	str	x21, [sp, #32]
  42a644:	mov	x21, x3
  42a648:	str	w2, [x19, #4]
  42a64c:	mov	x0, x3
  42a650:	bl	4022b0 <strlen@plt>
  42a654:	mov	x20, x0
  42a658:	ldr	x1, [x19, #16]
  42a65c:	add	x1, x1, #0x1
  42a660:	add	x1, x1, x0
  42a664:	ldr	x0, [x19, #8]
  42a668:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  42a66c:	str	x0, [x19, #8]
  42a670:	ldr	x3, [x19, #16]
  42a674:	mov	x2, x20
  42a678:	mov	x1, x21
  42a67c:	add	x0, x0, x3
  42a680:	bl	402260 <memcpy@plt>
  42a684:	ldr	x0, [x19, #16]
  42a688:	add	x20, x20, x0
  42a68c:	str	x20, [x19, #16]
  42a690:	ldr	x0, [x19, #8]
  42a694:	strb	wzr, [x0, x20]
  42a698:	mov	w0, #0x1                   	// #1
  42a69c:	ldr	x21, [sp, #32]
  42a6a0:	b	42a634 <ferror@plt+0x27d64>
  42a6a4:	ldr	x1, [x0, #16]
  42a6a8:	cbz	x1, 42a6c4 <ferror@plt+0x27df4>
  42a6ac:	ldr	x0, [x0, #8]
  42a6b0:	add	x1, x0, x1
  42a6b4:	ldurb	w0, [x1, #-1]
  42a6b8:	cmp	w0, #0xa
  42a6bc:	cset	w0, eq  // eq = none
  42a6c0:	ret
  42a6c4:	mov	w0, #0x0                   	// #0
  42a6c8:	b	42a6c0 <ferror@plt+0x27df0>
  42a6cc:	stp	x29, x30, [sp, #-128]!
  42a6d0:	mov	x29, sp
  42a6d4:	stp	x19, x20, [sp, #16]
  42a6d8:	stp	x21, x22, [sp, #32]
  42a6dc:	mov	x22, x0
  42a6e0:	mov	w21, w1
  42a6e4:	mov	w20, w2
  42a6e8:	mov	x19, x3
  42a6ec:	bl	42a510 <ferror@plt+0x27c40>
  42a6f0:	and	w4, w0, #0xff
  42a6f4:	cbz	w4, 42a708 <ferror@plt+0x27e38>
  42a6f8:	ldp	x19, x20, [sp, #16]
  42a6fc:	ldp	x21, x22, [sp, #32]
  42a700:	ldp	x29, x30, [sp], #128
  42a704:	ret
  42a708:	mov	w1, w20
  42a70c:	mov	x0, x22
  42a710:	bl	42a510 <ferror@plt+0x27c40>
  42a714:	and	w0, w0, #0xff
  42a718:	cbnz	w0, 42a6f8 <ferror@plt+0x27e28>
  42a71c:	str	x23, [sp, #48]
  42a720:	add	x8, sp, #0x60
  42a724:	mov	w1, #0x1                   	// #1
  42a728:	mov	w0, w21
  42a72c:	bl	412104 <ferror@plt+0xf834>
  42a730:	ldr	w23, [sp, #108]
  42a734:	add	x8, sp, #0x40
  42a738:	mov	w1, #0x1                   	// #1
  42a73c:	mov	w0, w20
  42a740:	bl	412104 <ferror@plt+0xf834>
  42a744:	ldr	x1, [sp, #96]
  42a748:	ldr	x0, [sp, #64]
  42a74c:	cmp	x1, x0
  42a750:	b.ne	42a80c <ferror@plt+0x27f3c>  // b.any
  42a754:	ldr	w1, [sp, #104]
  42a758:	ldr	w0, [sp, #72]
  42a75c:	cmp	w1, w0
  42a760:	b.ne	42a81c <ferror@plt+0x27f4c>  // b.any
  42a764:	ldr	w0, [sp, #76]
  42a768:	cmp	w0, w23
  42a76c:	b.lt	42a82c <ferror@plt+0x27f5c>  // b.tstop
  42a770:	mov	w1, #0xa                   	// #10
  42a774:	mov	x0, x19
  42a778:	bl	4026c0 <strchr@plt>
  42a77c:	cbz	x0, 42a798 <ferror@plt+0x27ec8>
  42a780:	cmp	w21, w20
  42a784:	b.ne	42a83c <ferror@plt+0x27f6c>  // b.any
  42a788:	cmp	w23, #0x1
  42a78c:	b.ne	42a84c <ferror@plt+0x27f7c>  // b.any
  42a790:	ldrb	w0, [x0, #1]
  42a794:	cbnz	w0, 42a85c <ferror@plt+0x27f8c>
  42a798:	mov	x0, x22
  42a79c:	bl	42a438 <ferror@plt+0x27b68>
  42a7a0:	mov	x23, x0
  42a7a4:	cbz	x0, 42a7b4 <ferror@plt+0x27ee4>
  42a7a8:	bl	42a6a4 <ferror@plt+0x27dd4>
  42a7ac:	and	w0, w0, #0xff
  42a7b0:	cbz	w0, 42a86c <ferror@plt+0x27f9c>
  42a7b4:	mov	x0, #0x18                  	// #24
  42a7b8:	bl	447868 <_obstack_memory_used@@Base+0x8fc>
  42a7bc:	mov	x23, x0
  42a7c0:	mov	x3, x19
  42a7c4:	mov	w2, w20
  42a7c8:	mov	w1, w21
  42a7cc:	bl	42a548 <ferror@plt+0x27c78>
  42a7d0:	ldr	w1, [x22, #120]
  42a7d4:	add	w2, w1, #0x1
  42a7d8:	str	w2, [x22, #120]
  42a7dc:	cmp	w1, #0x1
  42a7e0:	b.le	42a890 <ferror@plt+0x27fc0>
  42a7e4:	sub	w19, w1, #0x2
  42a7e8:	ldr	x0, [x22, #152]
  42a7ec:	cbz	x0, 42a8a0 <ferror@plt+0x27fd0>
  42a7f0:	ldr	w1, [x22, #144]
  42a7f4:	cmp	w19, w1
  42a7f8:	b.ge	42a8b8 <ferror@plt+0x27fe8>  // b.tcont
  42a7fc:	ldr	x0, [x22, #152]
  42a800:	str	x23, [x0, w19, sxtw #3]
  42a804:	ldr	x23, [sp, #48]
  42a808:	b	42a6f8 <ferror@plt+0x27e28>
  42a80c:	mov	x0, x22
  42a810:	bl	42a478 <ferror@plt+0x27ba8>
  42a814:	ldr	x23, [sp, #48]
  42a818:	b	42a6f8 <ferror@plt+0x27e28>
  42a81c:	mov	x0, x22
  42a820:	bl	42a478 <ferror@plt+0x27ba8>
  42a824:	ldr	x23, [sp, #48]
  42a828:	b	42a6f8 <ferror@plt+0x27e28>
  42a82c:	mov	x0, x22
  42a830:	bl	42a478 <ferror@plt+0x27ba8>
  42a834:	ldr	x23, [sp, #48]
  42a838:	b	42a6f8 <ferror@plt+0x27e28>
  42a83c:	mov	x0, x22
  42a840:	bl	42a478 <ferror@plt+0x27ba8>
  42a844:	ldr	x23, [sp, #48]
  42a848:	b	42a6f8 <ferror@plt+0x27e28>
  42a84c:	mov	x0, x22
  42a850:	bl	42a478 <ferror@plt+0x27ba8>
  42a854:	ldr	x23, [sp, #48]
  42a858:	b	42a6f8 <ferror@plt+0x27e28>
  42a85c:	mov	x0, x22
  42a860:	bl	42a478 <ferror@plt+0x27ba8>
  42a864:	ldr	x23, [sp, #48]
  42a868:	b	42a6f8 <ferror@plt+0x27e28>
  42a86c:	mov	x3, x19
  42a870:	mov	w2, w20
  42a874:	mov	w1, w21
  42a878:	mov	x0, x23
  42a87c:	bl	42a614 <ferror@plt+0x27d44>
  42a880:	and	w0, w0, #0xff
  42a884:	cbz	w0, 42a7b4 <ferror@plt+0x27ee4>
  42a888:	ldr	x23, [sp, #48]
  42a88c:	b	42a6f8 <ferror@plt+0x27e28>
  42a890:	add	x1, x22, w1, sxtw #3
  42a894:	str	x23, [x1, #128]
  42a898:	ldr	x23, [sp, #48]
  42a89c:	b	42a6f8 <ferror@plt+0x27e28>
  42a8a0:	mov	w0, #0x10                  	// #16
  42a8a4:	str	w0, [x22, #144]
  42a8a8:	mov	x0, #0x80                  	// #128
  42a8ac:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  42a8b0:	str	x0, [x22, #152]
  42a8b4:	b	42a7fc <ferror@plt+0x27f2c>
  42a8b8:	lsl	w1, w1, #1
  42a8bc:	str	w1, [x22, #144]
  42a8c0:	sbfiz	x1, x1, #3, #32
  42a8c4:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  42a8c8:	str	x0, [x22, #152]
  42a8cc:	b	42a7fc <ferror@plt+0x27f2c>
  42a8d0:	stp	x29, x30, [sp, #-32]!
  42a8d4:	mov	x29, sp
  42a8d8:	stp	x19, x20, [sp, #16]
  42a8dc:	mov	x19, x0
  42a8e0:	mov	x20, x2
  42a8e4:	ldr	x0, [x0]
  42a8e8:	bl	428f64 <ferror@plt+0x26694>
  42a8ec:	mov	x1, x0
  42a8f0:	mov	x3, x20
  42a8f4:	mov	w2, w0
  42a8f8:	mov	x0, x19
  42a8fc:	bl	42a6cc <ferror@plt+0x27dfc>
  42a900:	ldp	x19, x20, [sp, #16]
  42a904:	ldp	x29, x30, [sp], #32
  42a908:	ret
  42a90c:	stp	x29, x30, [sp, #-32]!
  42a910:	mov	x29, sp
  42a914:	stp	x19, x20, [sp, #16]
  42a918:	mov	x19, x0
  42a91c:	mov	x20, x1
  42a920:	mov	w1, #0x0                   	// #0
  42a924:	bl	42a1d0 <ferror@plt+0x27900>
  42a928:	mov	x2, x20
  42a92c:	mov	w1, w0
  42a930:	mov	x0, x19
  42a934:	bl	42a8d0 <ferror@plt+0x28000>
  42a938:	ldp	x19, x20, [sp, #16]
  42a93c:	ldp	x29, x30, [sp], #32
  42a940:	ret
  42a944:	stp	x29, x30, [sp, #-48]!
  42a948:	mov	x29, sp
  42a94c:	stp	x19, x20, [sp, #16]
  42a950:	str	x21, [sp, #32]
  42a954:	mov	x19, x0
  42a958:	mov	x21, x2
  42a95c:	ldr	x0, [x0]
  42a960:	bl	428f64 <ferror@plt+0x26694>
  42a964:	lsr	x20, x0, #32
  42a968:	mov	w2, #0x1                   	// #1
  42a96c:	mov	w1, w20
  42a970:	ldr	x0, [x19]
  42a974:	bl	429444 <ferror@plt+0x26b74>
  42a978:	cmp	w20, w0
  42a97c:	b.eq	42a9a4 <ferror@plt+0x280d4>  // b.none
  42a980:	mov	w1, w0
  42a984:	mov	x3, x21
  42a988:	mov	w2, w0
  42a98c:	mov	x0, x19
  42a990:	bl	42a6cc <ferror@plt+0x27dfc>
  42a994:	ldp	x19, x20, [sp, #16]
  42a998:	ldr	x21, [sp, #32]
  42a99c:	ldp	x29, x30, [sp], #48
  42a9a0:	ret
  42a9a4:	mov	x0, x19
  42a9a8:	bl	42a478 <ferror@plt+0x27ba8>
  42a9ac:	b	42a994 <ferror@plt+0x280c4>
  42a9b0:	stp	x29, x30, [sp, #-32]!
  42a9b4:	mov	x29, sp
  42a9b8:	stp	x19, x20, [sp, #16]
  42a9bc:	mov	x19, x0
  42a9c0:	mov	x20, x1
  42a9c4:	mov	w1, #0x0                   	// #0
  42a9c8:	bl	42a1d0 <ferror@plt+0x27900>
  42a9cc:	mov	x2, x20
  42a9d0:	mov	w1, w0
  42a9d4:	mov	x0, x19
  42a9d8:	bl	42a944 <ferror@plt+0x28074>
  42a9dc:	ldp	x19, x20, [sp, #16]
  42a9e0:	ldp	x29, x30, [sp], #32
  42a9e4:	ret
  42a9e8:	stp	x29, x30, [sp, #-48]!
  42a9ec:	mov	x29, sp
  42a9f0:	stp	x19, x20, [sp, #16]
  42a9f4:	stp	x21, x22, [sp, #32]
  42a9f8:	mov	x19, x0
  42a9fc:	mov	x20, x1
  42aa00:	mov	x22, x2
  42aa04:	ldr	x0, [x0]
  42aa08:	bl	429074 <ferror@plt+0x267a4>
  42aa0c:	mov	w21, w0
  42aa10:	lsr	x1, x20, #32
  42aa14:	ldr	x0, [x19]
  42aa18:	bl	429074 <ferror@plt+0x267a4>
  42aa1c:	mov	w20, w0
  42aa20:	mov	w2, #0x1                   	// #1
  42aa24:	mov	w1, w0
  42aa28:	ldr	x0, [x19]
  42aa2c:	bl	429444 <ferror@plt+0x26b74>
  42aa30:	cmp	w20, w0
  42aa34:	b.eq	42aa5c <ferror@plt+0x2818c>  // b.none
  42aa38:	mov	w2, w0
  42aa3c:	mov	x3, x22
  42aa40:	mov	w1, w21
  42aa44:	mov	x0, x19
  42aa48:	bl	42a6cc <ferror@plt+0x27dfc>
  42aa4c:	ldp	x19, x20, [sp, #16]
  42aa50:	ldp	x21, x22, [sp, #32]
  42aa54:	ldp	x29, x30, [sp], #48
  42aa58:	ret
  42aa5c:	mov	x0, x19
  42aa60:	bl	42a478 <ferror@plt+0x27ba8>
  42aa64:	b	42aa4c <ferror@plt+0x2817c>
  42aa68:	stp	x29, x30, [sp, #-16]!
  42aa6c:	mov	x29, sp
  42aa70:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x11094>
  42aa74:	add	x2, x2, #0x710
  42aa78:	bl	42a9e8 <ferror@plt+0x28118>
  42aa7c:	ldp	x29, x30, [sp], #16
  42aa80:	ret
  42aa84:	stp	x29, x30, [sp, #-32]!
  42aa88:	mov	x29, sp
  42aa8c:	str	x19, [sp, #16]
  42aa90:	mov	x19, x0
  42aa94:	ldr	x0, [x0]
  42aa98:	bl	428f64 <ferror@plt+0x26694>
  42aa9c:	mov	x1, x0
  42aaa0:	mov	x0, x19
  42aaa4:	bl	42aa68 <ferror@plt+0x28198>
  42aaa8:	ldr	x19, [sp, #16]
  42aaac:	ldp	x29, x30, [sp], #32
  42aab0:	ret
  42aab4:	stp	x29, x30, [sp, #-32]!
  42aab8:	mov	x29, sp
  42aabc:	str	x19, [sp, #16]
  42aac0:	mov	x19, x0
  42aac4:	mov	w1, #0x0                   	// #0
  42aac8:	bl	42a1d0 <ferror@plt+0x27900>
  42aacc:	mov	w1, w0
  42aad0:	mov	x0, x19
  42aad4:	bl	42aa84 <ferror@plt+0x281b4>
  42aad8:	ldr	x19, [sp, #16]
  42aadc:	ldp	x29, x30, [sp], #32
  42aae0:	ret
  42aae4:	stp	x29, x30, [sp, #-32]!
  42aae8:	mov	x29, sp
  42aaec:	stp	x19, x20, [sp, #16]
  42aaf0:	mov	x19, x0
  42aaf4:	mov	x20, x2
  42aaf8:	ldr	x0, [x0]
  42aafc:	bl	428f64 <ferror@plt+0x26694>
  42ab00:	mov	x2, x20
  42ab04:	mov	x1, x0
  42ab08:	mov	x0, x19
  42ab0c:	bl	42a9e8 <ferror@plt+0x28118>
  42ab10:	ldp	x19, x20, [sp, #16]
  42ab14:	ldp	x29, x30, [sp], #32
  42ab18:	ret
  42ab1c:	stp	x29, x30, [sp, #-32]!
  42ab20:	mov	x29, sp
  42ab24:	stp	x19, x20, [sp, #16]
  42ab28:	mov	x19, x0
  42ab2c:	mov	x20, x1
  42ab30:	mov	w1, #0x0                   	// #0
  42ab34:	bl	42a1d0 <ferror@plt+0x27900>
  42ab38:	mov	x2, x20
  42ab3c:	mov	w1, w0
  42ab40:	mov	x0, x19
  42ab44:	bl	42aae4 <ferror@plt+0x28214>
  42ab48:	ldp	x19, x20, [sp, #16]
  42ab4c:	ldp	x29, x30, [sp], #32
  42ab50:	ret
  42ab54:	mov	x4, x0
  42ab58:	cmp	w2, #0x1
  42ab5c:	b.eq	42ab98 <ferror@plt+0x282c8>  // b.none
  42ab60:	cmp	w2, #0x2
  42ab64:	b.eq	42abac <ferror@plt+0x282dc>  // b.none
  42ab68:	mov	x0, #0x0                   	// #0
  42ab6c:	cbz	w2, 42ab74 <ferror@plt+0x282a4>
  42ab70:	ret
  42ab74:	ldr	x0, [x4]
  42ab78:	cbz	x0, 42ab70 <ferror@plt+0x282a0>
  42ab7c:	cbz	x3, 42ab90 <ferror@plt+0x282c0>
  42ab80:	cbnz	w2, 42abb4 <ferror@plt+0x282e4>
  42ab84:	ldr	x2, [x4, #32]
  42ab88:	add	x2, x2, x1, lsl #2
  42ab8c:	str	x2, [x3]
  42ab90:	add	x0, x0, x1, lsl #3
  42ab94:	b	42ab70 <ferror@plt+0x282a0>
  42ab98:	add	x0, x0, #0x10
  42ab9c:	cbz	x3, 42ab90 <ferror@plt+0x282c0>
  42aba0:	ldr	x2, [x0, x1, lsl #3]
  42aba4:	str	x2, [x3]
  42aba8:	b	42ab90 <ferror@plt+0x282c0>
  42abac:	ldr	x0, [x0, #8]
  42abb0:	b	42ab78 <ferror@plt+0x282a8>
  42abb4:	cmp	w2, #0x2
  42abb8:	b.eq	42abc8 <ferror@plt+0x282f8>  // b.none
  42abbc:	cmp	w2, #0x1
  42abc0:	b.ne	42ab90 <ferror@plt+0x282c0>  // b.any
  42abc4:	b	42aba0 <ferror@plt+0x282d0>
  42abc8:	ldr	x2, [x4, #40]
  42abcc:	add	x2, x2, x1, lsl #2
  42abd0:	str	x2, [x3]
  42abd4:	b	42ab90 <ferror@plt+0x282c0>
  42abd8:	stp	x29, x30, [sp, #-48]!
  42abdc:	mov	x29, sp
  42abe0:	stp	x19, x20, [sp, #16]
  42abe4:	mov	x19, x1
  42abe8:	mov	w20, w2
  42abec:	mov	x1, x3
  42abf0:	mov	w2, w4
  42abf4:	str	xzr, [sp, #40]
  42abf8:	tst	w5, #0xff
  42abfc:	add	x3, sp, #0x28
  42ac00:	csel	x3, x3, xzr, ne  // ne = any
  42ac04:	bl	42ab54 <ferror@plt+0x28284>
  42ac08:	str	x19, [x0]
  42ac0c:	ldr	x0, [sp, #40]
  42ac10:	cbz	x0, 42ac18 <ferror@plt+0x28348>
  42ac14:	str	w20, [x0]
  42ac18:	ldp	x19, x20, [sp, #16]
  42ac1c:	ldp	x29, x30, [sp], #48
  42ac20:	ret
  42ac24:	stp	x29, x30, [sp, #-32]!
  42ac28:	mov	x29, sp
  42ac2c:	str	xzr, [sp, #24]
  42ac30:	add	x3, sp, #0x18
  42ac34:	mov	w2, w1
  42ac38:	mov	x1, #0x0                   	// #0
  42ac3c:	bl	42ab54 <ferror@plt+0x28284>
  42ac40:	cmp	x0, #0x0
  42ac44:	ldr	x1, [sp, #24]
  42ac48:	csel	x0, x1, x0, ne  // ne = any
  42ac4c:	ldp	x29, x30, [sp], #32
  42ac50:	ret
  42ac54:	ldr	w1, [x0, #4]
  42ac58:	tst	w1, #0xfffffffd
  42ac5c:	b.eq	42ac64 <ferror@plt+0x28394>  // b.none
  42ac60:	ret
  42ac64:	ldr	x1, [x0, #8]
  42ac68:	add	x1, x1, #0x8
  42ac6c:	str	x1, [x0, #8]
  42ac70:	ldrb	w1, [x0]
  42ac74:	cbz	w1, 42ac60 <ferror@plt+0x28390>
  42ac78:	ldr	x1, [x0, #16]
  42ac7c:	add	x1, x1, #0x4
  42ac80:	str	x1, [x0, #16]
  42ac84:	b	42ac60 <ferror@plt+0x28390>
  42ac88:	cbz	x1, 42acac <ferror@plt+0x283dc>
  42ac8c:	ldr	x2, [x0, #16]
  42ac90:	ldr	x3, [x0, #8]
  42ac94:	sub	x0, x2, #0x8
  42ac98:	cmp	x2, x3
  42ac9c:	csel	x0, x0, xzr, ne  // ne = any
  42aca0:	cmp	x1, x0
  42aca4:	cset	w0, eq  // eq = none
  42aca8:	ret
  42acac:	mov	w0, #0x0                   	// #0
  42acb0:	b	42aca8 <ferror@plt+0x283d8>
  42acb4:	cbz	x0, 42acc8 <ferror@plt+0x283f8>
  42acb8:	ldr	w1, [x0, #48]
  42acbc:	cmp	w1, #0x2
  42acc0:	b.eq	42accc <ferror@plt+0x283fc>  // b.none
  42acc4:	ldr	x0, [x0, #40]
  42acc8:	ret
  42accc:	ldr	x0, [x0, #40]
  42acd0:	ldr	x0, [x0]
  42acd4:	b	42acc8 <ferror@plt+0x283f8>
  42acd8:	stp	x29, x30, [sp, #-32]!
  42acdc:	mov	x29, sp
  42ace0:	str	x19, [sp, #16]
  42ace4:	mov	x19, x0
  42ace8:	ldr	x0, [x0, #136]
  42acec:	ldr	x0, [x0]
  42acf0:	cbz	x0, 42ad04 <ferror@plt+0x28434>
  42acf4:	str	x0, [x19, #136]
  42acf8:	ldr	x19, [sp, #16]
  42acfc:	ldp	x29, x30, [sp], #32
  42ad00:	ret
  42ad04:	mov	x0, #0x38                  	// #56
  42ad08:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  42ad0c:	stp	xzr, xzr, [x0]
  42ad10:	stp	xzr, xzr, [x0, #16]
  42ad14:	stp	xzr, xzr, [x0, #32]
  42ad18:	str	xzr, [x0, #48]
  42ad1c:	ldr	x1, [x19, #136]
  42ad20:	str	x1, [x0, #8]
  42ad24:	str	x0, [x1]
  42ad28:	b	42acf4 <ferror@plt+0x28424>
  42ad2c:	stp	x29, x30, [sp, #-64]!
  42ad30:	mov	x29, sp
  42ad34:	stp	x19, x20, [sp, #16]
  42ad38:	stp	x21, x22, [sp, #32]
  42ad3c:	stp	x23, x24, [sp, #48]
  42ad40:	mov	x19, x0
  42ad44:	mov	x21, x1
  42ad48:	mov	x24, x2
  42ad4c:	mov	x23, x3
  42ad50:	mov	x22, x4
  42ad54:	mov	w20, w5
  42ad58:	cbz	x1, 42adac <ferror@plt+0x284dc>
  42ad5c:	mov	x0, x19
  42ad60:	bl	42acd8 <ferror@plt+0x28408>
  42ad64:	mov	x19, x0
  42ad68:	mov	w0, #0x2                   	// #2
  42ad6c:	str	w0, [x19, #48]
  42ad70:	str	x24, [x19, #32]
  42ad74:	mov	x0, #0x18                  	// #24
  42ad78:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  42ad7c:	str	x21, [x0]
  42ad80:	str	x23, [x0, #8]
  42ad84:	str	x23, [x0, #16]
  42ad88:	str	x0, [x19, #40]
  42ad8c:	str	x22, [x19, #16]
  42ad90:	add	x20, x22, w20, uxtw #3
  42ad94:	str	x20, [x19, #24]
  42ad98:	ldp	x19, x20, [sp, #16]
  42ad9c:	ldp	x21, x22, [sp, #32]
  42ada0:	ldp	x23, x24, [sp, #48]
  42ada4:	ldp	x29, x30, [sp], #64
  42ada8:	ret
  42adac:	ldr	x0, [x0, #136]
  42adb0:	bl	42acb4 <ferror@plt+0x283e4>
  42adb4:	mov	x21, x0
  42adb8:	b	42ad5c <ferror@plt+0x2848c>
  42adbc:	stp	x29, x30, [sp, #-32]!
  42adc0:	mov	x29, sp
  42adc4:	stp	x19, x20, [sp, #16]
  42adc8:	mov	x19, x1
  42adcc:	mov	x20, x2
  42add0:	bl	4244e0 <ferror@plt+0x21c10>
  42add4:	ldr	x1, [x19]
  42add8:	ldrb	w1, [x1, #4]
  42addc:	strb	w1, [x0, #4]
  42ade0:	ldr	x1, [x19]
  42ade4:	ldp	x2, x3, [x1, #8]
  42ade8:	stp	x2, x3, [x0, #8]
  42adec:	ldrh	w1, [x20, #6]
  42adf0:	tbz	w1, #3, 42ae14 <ferror@plt+0x28544>
  42adf4:	ldr	x1, [x19]
  42adf8:	ldrh	w1, [x1, #6]
  42adfc:	orr	w1, w1, #0x8
  42ae00:	strh	w1, [x0, #6]
  42ae04:	str	x0, [x19]
  42ae08:	ldp	x19, x20, [sp, #16]
  42ae0c:	ldp	x29, x30, [sp], #32
  42ae10:	ret
  42ae14:	ldr	x1, [x19]
  42ae18:	ldrh	w1, [x1, #6]
  42ae1c:	and	w1, w1, #0xfffffff7
  42ae20:	and	w1, w1, #0xffff
  42ae24:	b	42ae00 <ferror@plt+0x28530>
  42ae28:	stp	x29, x30, [sp, #-32]!
  42ae2c:	mov	x29, sp
  42ae30:	str	x19, [sp, #16]
  42ae34:	mov	x19, x1
  42ae38:	bl	4244e0 <ferror@plt+0x21c10>
  42ae3c:	mov	w1, #0x53                  	// #83
  42ae40:	strb	w1, [x0, #4]
  42ae44:	str	x19, [x0, #8]
  42ae48:	strh	wzr, [x0, #6]
  42ae4c:	ldr	x19, [sp, #16]
  42ae50:	ldp	x29, x30, [sp], #32
  42ae54:	ret
  42ae58:	stp	x29, x30, [sp, #-48]!
  42ae5c:	mov	x29, sp
  42ae60:	stp	x19, x20, [sp, #16]
  42ae64:	str	x21, [sp, #32]
  42ae68:	mov	x20, x0
  42ae6c:	lsl	x21, x1, #3
  42ae70:	cbz	x2, 42ae84 <ferror@plt+0x285b4>
  42ae74:	mov	x19, x2
  42ae78:	lsl	x0, x1, #4
  42ae7c:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  42ae80:	str	x0, [x19]
  42ae84:	mov	x1, x21
  42ae88:	mov	x0, x20
  42ae8c:	bl	4251d4 <ferror@plt+0x22904>
  42ae90:	ldp	x19, x20, [sp, #16]
  42ae94:	ldr	x21, [sp, #32]
  42ae98:	ldp	x29, x30, [sp], #48
  42ae9c:	ret
  42aea0:	stp	x29, x30, [sp, #-64]!
  42aea4:	mov	x29, sp
  42aea8:	stp	x19, x20, [sp, #16]
  42aeac:	mov	x20, x0
  42aeb0:	ldr	x19, [x0, #16]
  42aeb4:	ldr	x0, [x0, #24]
  42aeb8:	cmp	x19, x0
  42aebc:	b.hi	42af20 <ferror@plt+0x28650>  // b.pmore
  42aec0:	stp	x21, x22, [sp, #32]
  42aec4:	mov	x21, x1
  42aec8:	mov	x22, x2
  42aecc:	mov	w2, w3
  42aed0:	cbz	x1, 42af04 <ferror@plt+0x28634>
  42aed4:	str	x23, [sp, #48]
  42aed8:	ldr	x23, [x20, #8]
  42aedc:	cbz	x5, 42aef4 <ferror@plt+0x28624>
  42aee0:	mov	w3, w4
  42aee4:	mov	w1, w6
  42aee8:	mov	x0, x5
  42aeec:	bl	42878c <ferror@plt+0x25ebc>
  42aef0:	mov	w2, w0
  42aef4:	sub	x23, x19, x23
  42aef8:	ubfx	x23, x23, #3, #32
  42aefc:	str	w2, [x21, x23, lsl #2]
  42af00:	ldr	x23, [sp, #48]
  42af04:	mov	x0, x19
  42af08:	str	x22, [x0], #8
  42af0c:	str	x0, [x20, #16]
  42af10:	ldp	x21, x22, [sp, #32]
  42af14:	ldp	x19, x20, [sp, #16]
  42af18:	ldp	x29, x30, [sp], #64
  42af1c:	ret
  42af20:	stp	x21, x22, [sp, #32]
  42af24:	str	x23, [sp, #48]
  42af28:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b094>
  42af2c:	add	x2, x2, #0xb80
  42af30:	mov	w1, #0x953                 	// #2387
  42af34:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b094>
  42af38:	add	x0, x0, #0xb98
  42af3c:	bl	4062a0 <ferror@plt+0x39d0>
  42af40:	stp	x29, x30, [sp, #-48]!
  42af44:	mov	x29, sp
  42af48:	stp	x19, x20, [sp, #16]
  42af4c:	mov	x19, x1
  42af50:	ldrb	w1, [x1, #18]
  42af54:	and	w1, w1, #0x3
  42af58:	cmp	w1, #0x2
  42af5c:	b.eq	42af70 <ferror@plt+0x286a0>  // b.none
  42af60:	mov	w0, #0x1                   	// #1
  42af64:	ldp	x19, x20, [sp, #16]
  42af68:	ldp	x29, x30, [sp], #48
  42af6c:	ret
  42af70:	str	x21, [sp, #32]
  42af74:	mov	x20, x0
  42af78:	ldr	x21, [x19, #24]
  42af7c:	ldrb	w0, [x21, #19]
  42af80:	tbz	w0, #5, 42af8c <ferror@plt+0x286bc>
  42af84:	ldr	x21, [sp, #32]
  42af88:	b	42af60 <ferror@plt+0x28690>
  42af8c:	ldr	w1, [x21, #8]
  42af90:	ldr	x0, [x20, #40]
  42af94:	bl	428bdc <ferror@plt+0x2630c>
  42af98:	ldr	w0, [x0, #20]
  42af9c:	cbz	w0, 42afa8 <ferror@plt+0x286d8>
  42afa0:	ldr	x21, [sp, #32]
  42afa4:	b	42af60 <ferror@plt+0x28690>
  42afa8:	ldr	x5, [x19]
  42afac:	adrp	x4, 462000 <_obstack_memory_used@@Base+0x1b094>
  42afb0:	add	x4, x4, #0xbb0
  42afb4:	mov	w3, #0x0                   	// #0
  42afb8:	ldr	w2, [x21, #8]
  42afbc:	mov	w1, #0xe                   	// #14
  42afc0:	mov	x0, x20
  42afc4:	bl	41cc60 <ferror@plt+0x1a390>
  42afc8:	ldr	x21, [sp, #32]
  42afcc:	b	42af60 <ferror@plt+0x28690>
  42afd0:	sub	w3, w2, #0x1
  42afd4:	cbz	w2, 42b030 <ferror@plt+0x28760>
  42afd8:	mov	w4, w3
  42afdc:	add	x4, x4, #0x1
  42afe0:	add	x4, x1, x4
  42afe4:	mov	w5, #0x5c                  	// #92
  42afe8:	mov	w6, #0x6e                  	// #110
  42afec:	b	42b008 <ferror@plt+0x28738>
  42aff0:	mov	x3, x0
  42aff4:	strb	w5, [x3], #1
  42aff8:	mov	x0, x3
  42affc:	strb	w2, [x0], #1
  42b000:	cmp	x4, x1
  42b004:	b.eq	42b030 <ferror@plt+0x28760>  // b.none
  42b008:	ldrb	w2, [x1], #1
  42b00c:	cmp	w2, #0x22
  42b010:	b.eq	42aff0 <ferror@plt+0x28720>  // b.none
  42b014:	cmp	w2, #0x5c
  42b018:	b.eq	42aff0 <ferror@plt+0x28720>  // b.none
  42b01c:	mov	x3, x0
  42b020:	cmp	w2, #0xa
  42b024:	b.ne	42aff8 <ferror@plt+0x28728>  // b.any
  42b028:	mov	w2, w6
  42b02c:	b	42aff0 <ferror@plt+0x28720>
  42b030:	ret
  42b034:	stp	x29, x30, [sp, #-80]!
  42b038:	mov	x29, sp
  42b03c:	stp	x19, x20, [sp, #16]
  42b040:	stp	x21, x22, [sp, #32]
  42b044:	mov	x19, x0
  42b048:	mov	x20, x1
  42b04c:	ldr	w3, [x1, #24]
  42b050:	cmp	w3, #0x5
  42b054:	b.eq	42b2c8 <ferror@plt+0x289f8>  // b.none
  42b058:	mov	w1, w2
  42b05c:	b.ls	42b084 <ferror@plt+0x287b4>  // b.plast
  42b060:	cmp	w3, #0x9
  42b064:	b.eq	42b418 <ferror@plt+0x28b48>  // b.none
  42b068:	b.ls	42b0b8 <ferror@plt+0x287e8>  // b.plast
  42b06c:	cmp	w3, #0xa
  42b070:	b.ne	42b0f4 <ferror@plt+0x28824>  // b.any
  42b074:	ldr	x1, [x0, #1040]
  42b078:	blr	x1
  42b07c:	mov	w21, w0
  42b080:	b	42b110 <ferror@plt+0x28840>
  42b084:	cmp	w3, #0x3
  42b088:	b.hi	42b284 <ferror@plt+0x289b4>  // b.pmore
  42b08c:	cmp	w3, #0x1
  42b090:	b.hi	42b1e8 <ferror@plt+0x28918>  // b.pmore
  42b094:	cbnz	w3, 42b2c8 <ferror@plt+0x289f8>
  42b098:	ldrb	w0, [x0, #1160]
  42b09c:	cbz	w0, 42b294 <ferror@plt+0x289c4>
  42b0a0:	ldr	x0, [x19, #40]
  42b0a4:	ldr	w1, [x0, #60]
  42b0a8:	ldr	x0, [x19, #40]
  42b0ac:	bl	429174 <ferror@plt+0x268a4>
  42b0b0:	mov	w21, w0
  42b0b4:	b	42b110 <ferror@plt+0x28840>
  42b0b8:	cmp	w3, #0x6
  42b0bc:	b.eq	42b2ac <ferror@plt+0x289dc>  // b.none
  42b0c0:	cmp	w3, #0x8
  42b0c4:	b.ne	42b0f4 <ferror@plt+0x28824>  // b.any
  42b0c8:	ldrb	w0, [x0, #1134]
  42b0cc:	cbnz	w0, 42b144 <ferror@plt+0x28874>
  42b0d0:	mov	x0, x19
  42b0d4:	bl	422f34 <ferror@plt+0x20664>
  42b0d8:	mov	x20, x0
  42b0dc:	ldr	x0, [x0, #88]
  42b0e0:	cbz	x0, 42b160 <ferror@plt+0x28890>
  42b0e4:	ldr	x20, [x20, #88]
  42b0e8:	cbnz	x20, 42b130 <ferror@plt+0x28860>
  42b0ec:	mov	w21, #0x1                   	// #1
  42b0f0:	b	42b110 <ferror@plt+0x28840>
  42b0f4:	ldr	x3, [x20]
  42b0f8:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b094>
  42b0fc:	add	x2, x2, #0xbc8
  42b100:	mov	w1, #0x4                   	// #4
  42b104:	mov	x0, x19
  42b108:	bl	41c9fc <ferror@plt+0x1a12c>
  42b10c:	mov	w21, #0x1                   	// #1
  42b110:	mov	x1, #0x15                  	// #21
  42b114:	mov	x0, x19
  42b118:	bl	42542c <ferror@plt+0x22b5c>
  42b11c:	mov	x20, x0
  42b120:	mov	w2, w21
  42b124:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  42b128:	add	x1, x1, #0x78
  42b12c:	bl	402350 <sprintf@plt>
  42b130:	mov	x0, x20
  42b134:	ldp	x19, x20, [sp, #16]
  42b138:	ldp	x21, x22, [sp, #32]
  42b13c:	ldp	x29, x30, [sp], #80
  42b140:	ret
  42b144:	ldr	x3, [x20]
  42b148:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b094>
  42b14c:	add	x2, x2, #0xbe8
  42b150:	mov	w1, #0x14                  	// #20
  42b154:	mov	x0, x19
  42b158:	bl	41ca74 <ferror@plt+0x1a1a4>
  42b15c:	b	42b0d0 <ferror@plt+0x28800>
  42b160:	mov	x0, x20
  42b164:	bl	422f3c <ferror@plt+0x2066c>
  42b168:	cbz	x0, 42b0e4 <ferror@plt+0x28814>
  42b16c:	bl	422eb0 <ferror@plt+0x205e0>
  42b170:	cbz	x0, 42b1c4 <ferror@plt+0x288f4>
  42b174:	add	x0, x0, #0x58
  42b178:	bl	4023b0 <localtime@plt>
  42b17c:	cbz	x0, 42b1c4 <ferror@plt+0x288f4>
  42b180:	stp	x23, x24, [sp, #48]
  42b184:	bl	402780 <asctime@plt>
  42b188:	mov	x23, x0
  42b18c:	bl	4022b0 <strlen@plt>
  42b190:	mov	x22, x0
  42b194:	add	x1, x0, #0x2
  42b198:	mov	x0, x19
  42b19c:	bl	42542c <ferror@plt+0x22b5c>
  42b1a0:	mov	x21, x0
  42b1a4:	mov	w24, #0x22                  	// #34
  42b1a8:	strb	w24, [x0], #1
  42b1ac:	mov	x1, x23
  42b1b0:	bl	402710 <strcpy@plt>
  42b1b4:	strb	w24, [x21, x22]
  42b1b8:	str	x21, [x20, #88]
  42b1bc:	ldp	x23, x24, [sp, #48]
  42b1c0:	b	42b0e4 <ferror@plt+0x28814>
  42b1c4:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b094>
  42b1c8:	add	x2, x2, #0xc18
  42b1cc:	mov	w1, #0x0                   	// #0
  42b1d0:	mov	x0, x19
  42b1d4:	bl	41cf08 <ferror@plt+0x1a638>
  42b1d8:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b094>
  42b1dc:	add	x0, x0, #0xc40
  42b1e0:	str	x0, [x20, #88]
  42b1e4:	b	42b0e4 <ferror@plt+0x28814>
  42b1e8:	cmp	w3, #0x2
  42b1ec:	b.eq	42b254 <ferror@plt+0x28984>  // b.none
  42b1f0:	ldr	x0, [x0, #288]
  42b1f4:	bl	422ea8 <ferror@plt+0x205d8>
  42b1f8:	mov	x21, x0
  42b1fc:	cbz	x0, 42b268 <ferror@plt+0x28998>
  42b200:	ldr	x1, [x19, #1080]
  42b204:	cbz	x1, 42b214 <ferror@plt+0x28944>
  42b208:	mov	x0, x21
  42b20c:	blr	x1
  42b210:	mov	x21, x0
  42b214:	mov	x0, x21
  42b218:	bl	4022b0 <strlen@plt>
  42b21c:	mov	x22, x0
  42b220:	lsl	w1, w0, #1
  42b224:	add	w1, w1, #0x3
  42b228:	mov	x0, x19
  42b22c:	bl	42542c <ferror@plt+0x22b5c>
  42b230:	mov	x20, x0
  42b234:	mov	w19, #0x22                  	// #34
  42b238:	strb	w19, [x0], #1
  42b23c:	mov	w2, w22
  42b240:	mov	x1, x21
  42b244:	bl	42afd0 <ferror@plt+0x28700>
  42b248:	strb	w19, [x0]
  42b24c:	strb	wzr, [x0, #1]
  42b250:	b	42b130 <ferror@plt+0x28860>
  42b254:	ldr	x0, [x0, #40]
  42b258:	ldr	w1, [x0, #60]
  42b25c:	bl	4291e0 <ferror@plt+0x26910>
  42b260:	mov	x21, x0
  42b264:	b	42b200 <ferror@plt+0x28930>
  42b268:	stp	x23, x24, [sp, #48]
  42b26c:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b094>
  42b270:	add	x2, x2, #0xc60
  42b274:	mov	w1, #0x1c5                 	// #453
  42b278:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b094>
  42b27c:	add	x0, x0, #0xb98
  42b280:	bl	4062a0 <ferror@plt+0x39d0>
  42b284:	ldr	x0, [x0, #40]
  42b288:	ldr	w21, [x0, #48]
  42b28c:	sub	w21, w21, #0x1
  42b290:	b	42b110 <ferror@plt+0x28840>
  42b294:	mov	x3, #0x0                   	// #0
  42b298:	mov	w2, #0x0                   	// #0
  42b29c:	ldr	x0, [x19, #40]
  42b2a0:	bl	4292dc <ferror@plt+0x26a0c>
  42b2a4:	mov	w1, w0
  42b2a8:	b	42b0a8 <ferror@plt+0x287d8>
  42b2ac:	ldr	x0, [x0]
  42b2b0:	mov	w21, #0x1                   	// #1
  42b2b4:	cbz	x0, 42b110 <ferror@plt+0x28840>
  42b2b8:	ldrb	w0, [x0, #106]
  42b2bc:	cmp	w0, #0x0
  42b2c0:	cset	w21, eq  // eq = none
  42b2c4:	b	42b110 <ferror@plt+0x28840>
  42b2c8:	ldrb	w0, [x19, #1134]
  42b2cc:	cbnz	w0, 42b2ec <ferror@plt+0x28a1c>
  42b2d0:	ldr	x0, [x19, #640]
  42b2d4:	cbz	x0, 42b308 <ferror@plt+0x28a38>
  42b2d8:	ldr	w0, [x20, #24]
  42b2dc:	cmp	w0, #0x1
  42b2e0:	b.eq	42b410 <ferror@plt+0x28b40>  // b.none
  42b2e4:	ldr	x20, [x19, #648]
  42b2e8:	b	42b0e8 <ferror@plt+0x28818>
  42b2ec:	ldr	x3, [x20]
  42b2f0:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b094>
  42b2f4:	add	x2, x2, #0xbe8
  42b2f8:	mov	w1, #0x14                  	// #20
  42b2fc:	mov	x0, x19
  42b300:	bl	41ca74 <ferror@plt+0x1a1a4>
  42b304:	b	42b2d0 <ferror@plt+0x28a00>
  42b308:	ldr	x0, [x19, #656]
  42b30c:	cmn	x0, #0x2
  42b310:	b.eq	42b390 <ferror@plt+0x28ac0>  // b.none
  42b314:	ldr	x0, [x19, #656]
  42b318:	tbnz	x0, #63, 42b3a8 <ferror@plt+0x28ad8>
  42b31c:	add	x0, x19, #0x290
  42b320:	bl	4024d0 <gmtime@plt>
  42b324:	mov	x21, x0
  42b328:	cbz	x21, 42b3e0 <ferror@plt+0x28b10>
  42b32c:	mov	x1, #0xe                   	// #14
  42b330:	mov	x0, x19
  42b334:	bl	42542c <ferror@plt+0x22b5c>
  42b338:	str	x0, [x19, #640]
  42b33c:	ldr	w4, [x21, #20]
  42b340:	ldrsw	x2, [x21, #16]
  42b344:	add	w4, w4, #0x76c
  42b348:	ldr	w3, [x21, #12]
  42b34c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  42b350:	add	x1, x1, #0x460
  42b354:	ldr	x2, [x1, x2, lsl #3]
  42b358:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b094>
  42b35c:	add	x1, x1, #0xc78
  42b360:	bl	402350 <sprintf@plt>
  42b364:	mov	x1, #0xb                   	// #11
  42b368:	mov	x0, x19
  42b36c:	bl	42542c <ferror@plt+0x22b5c>
  42b370:	str	x0, [x19, #648]
  42b374:	ldr	w4, [x21]
  42b378:	ldr	w3, [x21, #4]
  42b37c:	ldr	w2, [x21, #8]
  42b380:	adrp	x1, 462000 <_obstack_memory_used@@Base+0x1b094>
  42b384:	add	x1, x1, #0xc88
  42b388:	bl	402350 <sprintf@plt>
  42b38c:	b	42b2d8 <ferror@plt+0x28a08>
  42b390:	ldr	x1, [x19, #1056]
  42b394:	cbz	x1, 42b3a8 <ferror@plt+0x28ad8>
  42b398:	mov	x0, x19
  42b39c:	blr	x1
  42b3a0:	str	x0, [x19, #656]
  42b3a4:	b	42b314 <ferror@plt+0x28a44>
  42b3a8:	bl	402810 <__errno_location@plt>
  42b3ac:	mov	x21, x0
  42b3b0:	str	wzr, [x0]
  42b3b4:	mov	x0, #0x0                   	// #0
  42b3b8:	bl	402400 <time@plt>
  42b3bc:	str	x0, [sp, #72]
  42b3c0:	cmn	x0, #0x1
  42b3c4:	b.ne	42b3d0 <ferror@plt+0x28b00>  // b.any
  42b3c8:	ldr	w0, [x21]
  42b3cc:	cbnz	w0, 42b3e0 <ferror@plt+0x28b10>
  42b3d0:	add	x0, sp, #0x48
  42b3d4:	bl	4023b0 <localtime@plt>
  42b3d8:	mov	x21, x0
  42b3dc:	b	42b328 <ferror@plt+0x28a58>
  42b3e0:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b094>
  42b3e4:	add	x2, x2, #0xca0
  42b3e8:	mov	w1, #0x0                   	// #0
  42b3ec:	mov	x0, x19
  42b3f0:	bl	41cf08 <ferror@plt+0x1a638>
  42b3f4:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b094>
  42b3f8:	add	x0, x0, #0xcc8
  42b3fc:	str	x0, [x19, #640]
  42b400:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b094>
  42b404:	add	x0, x0, #0xcd8
  42b408:	str	x0, [x19, #648]
  42b40c:	b	42b2d8 <ferror@plt+0x28a08>
  42b410:	ldr	x20, [x19, #640]
  42b414:	b	42b0e8 <ferror@plt+0x28818>
  42b418:	ldrb	w0, [x0, #1244]
  42b41c:	cbz	w0, 42b428 <ferror@plt+0x28b58>
  42b420:	ldrb	w0, [x19, #16]
  42b424:	cbnz	w0, 42b438 <ferror@plt+0x28b68>
  42b428:	ldr	w21, [x19, #1376]
  42b42c:	add	w0, w21, #0x1
  42b430:	str	w0, [x19, #1376]
  42b434:	b	42b110 <ferror@plt+0x28840>
  42b438:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b094>
  42b43c:	add	x2, x2, #0xce8
  42b440:	mov	w1, #0x3                   	// #3
  42b444:	mov	x0, x19
  42b448:	bl	41c9fc <ferror@plt+0x1a12c>
  42b44c:	b	42b428 <ferror@plt+0x28b58>
  42b450:	ldrh	w4, [x1, #16]
  42b454:	cmp	w4, w3
  42b458:	b.eq	42b564 <ferror@plt+0x28c94>  // b.none
  42b45c:	stp	x29, x30, [sp, #-48]!
  42b460:	mov	x29, sp
  42b464:	stp	x19, x20, [sp, #16]
  42b468:	str	x21, [sp, #32]
  42b46c:	mov	x20, x0
  42b470:	mov	x19, x1
  42b474:	mov	x21, x2
  42b478:	b.ls	42b524 <ferror@plt+0x28c54>  // b.plast
  42b47c:	add	w0, w3, #0x1
  42b480:	cmp	w4, w0
  42b484:	b.ne	42b490 <ferror@plt+0x28bc0>  // b.any
  42b488:	ldrb	w1, [x1, #19]
  42b48c:	tbnz	w1, #3, 42b4cc <ferror@plt+0x28bfc>
  42b490:	mov	w5, w3
  42b494:	ldr	x3, [x21]
  42b498:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b094>
  42b49c:	add	x2, x2, #0xdc8
  42b4a0:	mov	w1, #0x3                   	// #3
  42b4a4:	mov	x0, x20
  42b4a8:	bl	41c9fc <ferror@plt+0x1a12c>
  42b4ac:	ldr	w2, [x19, #8]
  42b4b0:	mov	w0, #0x0                   	// #0
  42b4b4:	cmp	w2, #0x2
  42b4b8:	b.hi	42b544 <ferror@plt+0x28c74>  // b.pmore
  42b4bc:	ldp	x19, x20, [sp, #16]
  42b4c0:	ldr	x21, [sp, #32]
  42b4c4:	ldp	x29, x30, [sp], #48
  42b4c8:	ret
  42b4cc:	ldrb	w2, [x20, #1154]
  42b4d0:	mov	w0, #0x1                   	// #1
  42b4d4:	cbz	w2, 42b4bc <ferror@plt+0x28bec>
  42b4d8:	tbnz	w1, #4, 42b4bc <ferror@plt+0x28bec>
  42b4dc:	ldrb	w1, [x20, #1167]
  42b4e0:	cbnz	w1, 42b4bc <ferror@plt+0x28bec>
  42b4e4:	ldrb	w0, [x20, #1120]
  42b4e8:	cbz	w0, 42b508 <ferror@plt+0x28c38>
  42b4ec:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b094>
  42b4f0:	add	x2, x2, #0xd28
  42b4f4:	mov	w1, #0x2                   	// #2
  42b4f8:	mov	x0, x20
  42b4fc:	bl	41c9fc <ferror@plt+0x1a12c>
  42b500:	mov	w0, #0x1                   	// #1
  42b504:	b	42b4bc <ferror@plt+0x28bec>
  42b508:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b094>
  42b50c:	add	x2, x2, #0xd78
  42b510:	mov	w1, #0x2                   	// #2
  42b514:	mov	x0, x20
  42b518:	bl	41c9fc <ferror@plt+0x1a12c>
  42b51c:	mov	w0, #0x1                   	// #1
  42b520:	b	42b4bc <ferror@plt+0x28bec>
  42b524:	mov	w5, w4
  42b528:	mov	w4, w3
  42b52c:	ldr	x3, [x2]
  42b530:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b094>
  42b534:	add	x2, x2, #0xe00
  42b538:	mov	w1, #0x3                   	// #3
  42b53c:	bl	41c9fc <ferror@plt+0x1a12c>
  42b540:	b	42b4ac <ferror@plt+0x28bdc>
  42b544:	ldr	x4, [x21]
  42b548:	adrp	x3, 462000 <_obstack_memory_used@@Base+0x1b094>
  42b54c:	add	x3, x3, #0xe38
  42b550:	mov	w1, #0x5                   	// #5
  42b554:	mov	x0, x20
  42b558:	bl	41cdd4 <ferror@plt+0x1a504>
  42b55c:	mov	w0, #0x0                   	// #0
  42b560:	b	42b4bc <ferror@plt+0x28bec>
  42b564:	mov	w0, #0x1                   	// #1
  42b568:	ret
  42b56c:	stp	x29, x30, [sp, #-48]!
  42b570:	mov	x29, sp
  42b574:	stp	x19, x20, [sp, #16]
  42b578:	stp	x21, x22, [sp, #32]
  42b57c:	mov	x22, x0
  42b580:	mov	x20, x1
  42b584:	mov	x21, x2
  42b588:	mov	w19, w3
  42b58c:	cbz	x1, 42b5cc <ferror@plt+0x28cfc>
  42b590:	mov	x0, x22
  42b594:	bl	42acd8 <ferror@plt+0x28408>
  42b598:	mov	w1, #0x1                   	// #1
  42b59c:	str	w1, [x0, #48]
  42b5a0:	str	x20, [x0, #40]
  42b5a4:	str	xzr, [x0, #32]
  42b5a8:	str	x21, [x0, #16]
  42b5ac:	ubfiz	x3, x19, #1, #32
  42b5b0:	add	x19, x3, w19, uxtw
  42b5b4:	add	x19, x21, x19, lsl #3
  42b5b8:	str	x19, [x0, #24]
  42b5bc:	ldp	x19, x20, [sp, #16]
  42b5c0:	ldp	x21, x22, [sp, #32]
  42b5c4:	ldp	x29, x30, [sp], #48
  42b5c8:	ret
  42b5cc:	ldr	x0, [x0, #136]
  42b5d0:	bl	42acb4 <ferror@plt+0x283e4>
  42b5d4:	mov	x20, x0
  42b5d8:	b	42b590 <ferror@plt+0x28cc0>
  42b5dc:	stp	x29, x30, [sp, #-80]!
  42b5e0:	mov	x29, sp
  42b5e4:	stp	x19, x20, [sp, #16]
  42b5e8:	stp	x21, x22, [sp, #32]
  42b5ec:	stp	x23, x24, [sp, #48]
  42b5f0:	mov	x19, x0
  42b5f4:	mov	w22, w2
  42b5f8:	ldr	w0, [x1, #24]
  42b5fc:	cmp	w0, #0x7
  42b600:	b.ne	42b620 <ferror@plt+0x28d50>  // b.any
  42b604:	ldrb	w1, [x19, #16]
  42b608:	mov	w0, #0x0                   	// #0
  42b60c:	cbnz	w1, 42b6f8 <ferror@plt+0x28e28>
  42b610:	mov	w1, w2
  42b614:	mov	x0, x19
  42b618:	bl	41c35c <ferror@plt+0x19a8c>
  42b61c:	b	42b6f8 <ferror@plt+0x28e28>
  42b620:	mov	x20, x1
  42b624:	mov	w2, w3
  42b628:	mov	x0, x19
  42b62c:	bl	42b034 <ferror@plt+0x28764>
  42b630:	mov	x24, x0
  42b634:	bl	4022b0 <strlen@plt>
  42b638:	mov	x21, x0
  42b63c:	add	x0, x0, #0x10
  42b640:	and	x0, x0, #0xfffffffffffffff0
  42b644:	sub	sp, sp, x0
  42b648:	mov	x23, sp
  42b64c:	mov	x2, x21
  42b650:	mov	x1, x24
  42b654:	mov	x0, x23
  42b658:	bl	402260 <memcpy@plt>
  42b65c:	mov	w0, #0xa                   	// #10
  42b660:	strb	w0, [x23, x21]
  42b664:	mov	w3, #0x1                   	// #1
  42b668:	mov	x2, x21
  42b66c:	mov	x1, x23
  42b670:	mov	x0, x19
  42b674:	bl	41bbe0 <ferror@plt+0x19310>
  42b678:	mov	x0, x19
  42b67c:	bl	423a20 <ferror@plt+0x21150>
  42b680:	mov	x0, x19
  42b684:	bl	4244e0 <ferror@plt+0x21c10>
  42b688:	str	x0, [x19, #448]
  42b68c:	mov	x0, x19
  42b690:	bl	426374 <ferror@plt+0x23aa4>
  42b694:	mov	x21, x0
  42b698:	str	w22, [x0]
  42b69c:	ldr	x0, [x19, #136]
  42b6a0:	ldr	w0, [x0, #48]
  42b6a4:	cmp	w0, #0x2
  42b6a8:	b.eq	42b710 <ferror@plt+0x28e40>  // b.none
  42b6ac:	mov	w3, #0x1                   	// #1
  42b6b0:	mov	x2, x21
  42b6b4:	mov	x1, #0x0                   	// #0
  42b6b8:	mov	x0, x19
  42b6bc:	bl	42b56c <ferror@plt+0x28c9c>
  42b6c0:	ldr	x0, [x19]
  42b6c4:	ldr	x1, [x0]
  42b6c8:	ldr	x0, [x0, #32]
  42b6cc:	cmp	x1, x0
  42b6d0:	b.eq	42b6ec <ferror@plt+0x28e1c>  // b.none
  42b6d4:	ldr	x3, [x20]
  42b6d8:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b094>
  42b6dc:	add	x2, x2, #0xbc8
  42b6e0:	mov	w1, #0x4                   	// #4
  42b6e4:	mov	x0, x19
  42b6e8:	bl	41c9fc <ferror@plt+0x1a12c>
  42b6ec:	mov	x0, x19
  42b6f0:	bl	41bcec <ferror@plt+0x1941c>
  42b6f4:	mov	w0, #0x1                   	// #1
  42b6f8:	mov	sp, x29
  42b6fc:	ldp	x19, x20, [sp, #16]
  42b700:	ldp	x21, x22, [sp, #32]
  42b704:	ldp	x23, x24, [sp, #48]
  42b708:	ldp	x29, x30, [sp], #80
  42b70c:	ret
  42b710:	str	xzr, [x29, #72]
  42b714:	add	x2, x29, #0x48
  42b718:	mov	x1, #0x1                   	// #1
  42b71c:	mov	x0, x19
  42b720:	bl	42ae58 <ferror@plt+0x28588>
  42b724:	mov	x23, x0
  42b728:	mov	w3, #0x1                   	// #1
  42b72c:	mov	w2, w22
  42b730:	mov	x1, x20
  42b734:	ldr	x0, [x19, #40]
  42b738:	bl	4286d8 <ferror@plt+0x25e08>
  42b73c:	ldr	x1, [x19, #40]
  42b740:	ldr	w3, [x1, #112]
  42b744:	mov	w6, #0x0                   	// #0
  42b748:	mov	x5, x0
  42b74c:	mov	w4, w3
  42b750:	mov	x2, x21
  42b754:	ldr	x1, [x29, #72]
  42b758:	mov	x0, x23
  42b75c:	bl	42aea0 <ferror@plt+0x285d0>
  42b760:	mov	w5, #0x1                   	// #1
  42b764:	ldr	x4, [x23, #8]
  42b768:	ldr	x3, [x29, #72]
  42b76c:	mov	x2, x23
  42b770:	mov	x1, x20
  42b774:	mov	x0, x19
  42b778:	bl	42ad2c <ferror@plt+0x2845c>
  42b77c:	b	42b6c0 <ferror@plt+0x28df0>
  42b780:	stp	x29, x30, [sp, #-48]!
  42b784:	mov	x29, sp
  42b788:	stp	x19, x20, [sp, #16]
  42b78c:	str	x21, [sp, #32]
  42b790:	mov	x20, x1
  42b794:	mov	x19, x2
  42b798:	mov	x21, x3
  42b79c:	bl	42acd8 <ferror@plt+0x28408>
  42b7a0:	mov	w1, #0x1                   	// #1
  42b7a4:	str	w1, [x0, #48]
  42b7a8:	str	x20, [x0, #40]
  42b7ac:	str	xzr, [x0, #32]
  42b7b0:	str	x19, [x0, #16]
  42b7b4:	add	x19, x19, x21
  42b7b8:	str	x19, [x0, #24]
  42b7bc:	ldrh	w0, [x20, #18]
  42b7c0:	orr	w0, w0, #0x40
  42b7c4:	strh	w0, [x20, #18]
  42b7c8:	ldp	x19, x20, [sp, #16]
  42b7cc:	ldr	x21, [sp, #32]
  42b7d0:	ldp	x29, x30, [sp], #48
  42b7d4:	ret
  42b7d8:	stp	x29, x30, [sp, #-48]!
  42b7dc:	mov	x29, sp
  42b7e0:	stp	x19, x20, [sp, #16]
  42b7e4:	stp	x21, x22, [sp, #32]
  42b7e8:	mov	x20, x0
  42b7ec:	ldr	x19, [x0, #136]
  42b7f0:	add	x0, x0, #0x50
  42b7f4:	cmp	x19, x0
  42b7f8:	b.eq	42b870 <ferror@plt+0x28fa0>  // b.none
  42b7fc:	ldr	x21, [x19, #40]
  42b800:	cbz	x21, 42b840 <ferror@plt+0x28f70>
  42b804:	ldr	w0, [x19, #48]
  42b808:	cmp	w0, #0x2
  42b80c:	b.eq	42b888 <ferror@plt+0x28fb8>  // b.none
  42b810:	ldr	x0, [x19, #8]
  42b814:	bl	42acb4 <ferror@plt+0x283e4>
  42b818:	cmp	x21, x0
  42b81c:	b.eq	42b834 <ferror@plt+0x28f64>  // b.none
  42b820:	ldrh	w0, [x21, #18]
  42b824:	ubfx	x1, x0, #2, #8
  42b828:	and	w1, w1, #0xffffffef
  42b82c:	bfi	w0, w1, #2, #8
  42b830:	strh	w0, [x21, #18]
  42b834:	ldr	x0, [x20, #184]
  42b838:	cmp	x0, x21
  42b83c:	b.eq	42b8b8 <ferror@plt+0x28fe8>  // b.none
  42b840:	ldr	x0, [x19, #32]
  42b844:	cbz	x0, 42b84c <ferror@plt+0x28f7c>
  42b848:	bl	4253f8 <ferror@plt+0x22b28>
  42b84c:	ldr	x0, [x19, #8]
  42b850:	str	x0, [x20, #136]
  42b854:	str	xzr, [x0]
  42b858:	mov	x0, x19
  42b85c:	bl	402690 <free@plt>
  42b860:	ldp	x19, x20, [sp, #16]
  42b864:	ldp	x21, x22, [sp, #32]
  42b868:	ldp	x29, x30, [sp], #48
  42b86c:	ret
  42b870:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b094>
  42b874:	add	x2, x2, #0xe50
  42b878:	mov	w1, #0x9eb                 	// #2539
  42b87c:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b094>
  42b880:	add	x0, x0, #0xb98
  42b884:	bl	4062a0 <ferror@plt+0x39d0>
  42b888:	ldr	x22, [x21]
  42b88c:	ldr	x0, [x19, #32]
  42b890:	cbz	x0, 42b8a0 <ferror@plt+0x28fd0>
  42b894:	ldr	x0, [x21, #8]
  42b898:	cbz	x0, 42b8a0 <ferror@plt+0x28fd0>
  42b89c:	bl	402690 <free@plt>
  42b8a0:	mov	x0, x21
  42b8a4:	bl	402690 <free@plt>
  42b8a8:	str	xzr, [x19, #40]
  42b8ac:	mov	x21, x22
  42b8b0:	cbz	x22, 42b834 <ferror@plt+0x28f64>
  42b8b4:	b	42b810 <ferror@plt+0x28f40>
  42b8b8:	ldr	x0, [x19, #8]
  42b8bc:	cbnz	x0, 42b840 <ferror@plt+0x28f70>
  42b8c0:	str	xzr, [x20, #184]
  42b8c4:	b	42b840 <ferror@plt+0x28f70>
  42b8c8:	ldr	x0, [x0, #136]
  42b8cc:	ldr	w1, [x0, #48]
  42b8d0:	cmp	w1, #0x2
  42b8d4:	b.eq	42b8f8 <ferror@plt+0x29028>  // b.none
  42b8d8:	ldr	x1, [x0, #40]
  42b8dc:	mov	w0, #0x0                   	// #0
  42b8e0:	cbz	x1, 42b8f4 <ferror@plt+0x29024>
  42b8e4:	ldr	x1, [x1, #24]
  42b8e8:	cbz	x1, 42b8f4 <ferror@plt+0x29024>
  42b8ec:	ldrb	w0, [x1, #19]
  42b8f0:	ubfx	x0, x0, #4, #1
  42b8f4:	ret
  42b8f8:	ldr	x0, [x0, #40]
  42b8fc:	ldr	x1, [x0]
  42b900:	b	42b8dc <ferror@plt+0x2900c>
  42b904:	ldr	w2, [x0, #496]
  42b908:	add	w2, w2, w1
  42b90c:	str	w2, [x0, #496]
  42b910:	sub	w2, w1, #0x1
  42b914:	cbnz	w1, 42b928 <ferror@plt+0x29058>
  42b918:	ret
  42b91c:	sub	w2, w2, #0x1
  42b920:	cmn	w2, #0x1
  42b924:	b.eq	42b918 <ferror@plt+0x29048>  // b.none
  42b928:	ldr	x1, [x0, #448]
  42b92c:	sub	x1, x1, #0x18
  42b930:	str	x1, [x0, #448]
  42b934:	ldr	x3, [x0, #488]
  42b938:	ldr	x4, [x3, #16]
  42b93c:	cmp	x1, x4
  42b940:	b.ne	42b91c <ferror@plt+0x2904c>  // b.any
  42b944:	ldr	x1, [x3, #8]
  42b948:	cbz	x1, 42b91c <ferror@plt+0x2904c>
  42b94c:	str	x1, [x0, #488]
  42b950:	ldr	x1, [x1, #24]
  42b954:	str	x1, [x0, #448]
  42b958:	b	42b91c <ferror@plt+0x2904c>
  42b95c:	stp	x29, x30, [sp, #-16]!
  42b960:	mov	x29, sp
  42b964:	ldr	x2, [x0, #136]
  42b968:	ldr	x3, [x2, #8]
  42b96c:	cbz	x3, 42b998 <ferror@plt+0x290c8>
  42b970:	cmp	w1, #0x1
  42b974:	b.ne	42b9a0 <ferror@plt+0x290d0>  // b.any
  42b978:	ldr	w1, [x2, #48]
  42b97c:	cmp	w1, #0x1
  42b980:	b.eq	42b9b8 <ferror@plt+0x290e8>  // b.none
  42b984:	cbnz	w1, 42b9cc <ferror@plt+0x290fc>
  42b988:	ldr	x0, [x2, #16]
  42b98c:	sub	x0, x0, #0x8
  42b990:	str	x0, [x2, #16]
  42b994:	b	42b9c4 <ferror@plt+0x290f4>
  42b998:	bl	42b904 <ferror@plt+0x29034>
  42b99c:	b	42b9c4 <ferror@plt+0x290f4>
  42b9a0:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b094>
  42b9a4:	add	x2, x2, #0xe68
  42b9a8:	mov	w1, #0xb8f                 	// #2959
  42b9ac:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b094>
  42b9b0:	add	x0, x0, #0xb98
  42b9b4:	bl	4062a0 <ferror@plt+0x39d0>
  42b9b8:	ldr	x0, [x2, #16]
  42b9bc:	sub	x0, x0, #0x18
  42b9c0:	str	x0, [x2, #16]
  42b9c4:	ldp	x29, x30, [sp], #16
  42b9c8:	ret
  42b9cc:	cmp	w1, #0x2
  42b9d0:	b.ne	42ba14 <ferror@plt+0x29144>  // b.any
  42b9d4:	ldr	x1, [x2, #16]
  42b9d8:	sub	x1, x1, #0x8
  42b9dc:	str	x1, [x2, #16]
  42b9e0:	ldr	x0, [x0, #136]
  42b9e4:	ldr	x0, [x0, #40]
  42b9e8:	cbz	x0, 42b9fc <ferror@plt+0x2912c>
  42b9ec:	ldr	x1, [x0, #16]
  42b9f0:	sub	x1, x1, #0x4
  42b9f4:	str	x1, [x0, #16]
  42b9f8:	b	42b9c4 <ferror@plt+0x290f4>
  42b9fc:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b094>
  42ba00:	add	x2, x2, #0xe68
  42ba04:	mov	w1, #0xb9e                 	// #2974
  42ba08:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b094>
  42ba0c:	add	x0, x0, #0xb98
  42ba10:	bl	4062a0 <ferror@plt+0x39d0>
  42ba14:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b094>
  42ba18:	add	x2, x2, #0xe68
  42ba1c:	mov	w1, #0xba1                 	// #2977
  42ba20:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b094>
  42ba24:	add	x0, x0, #0xb98
  42ba28:	bl	4062a0 <ferror@plt+0x39d0>
  42ba2c:	stp	x29, x30, [sp, #-80]!
  42ba30:	mov	x29, sp
  42ba34:	stp	x19, x20, [sp, #16]
  42ba38:	stp	x21, x22, [sp, #32]
  42ba3c:	stp	x23, x24, [sp, #48]
  42ba40:	stp	x25, x26, [sp, #64]
  42ba44:	mov	x19, x0
  42ba48:	mov	w23, w1
  42ba4c:	mov	x21, x2
  42ba50:	mov	x22, x3
  42ba54:	ldr	x0, [x2]
  42ba58:	bl	4246a8 <ferror@plt+0x21dd8>
  42ba5c:	mov	w20, w0
  42ba60:	mov	x0, x22
  42ba64:	bl	4246a8 <ferror@plt+0x21dd8>
  42ba68:	add	w20, w20, w0
  42ba6c:	add	w20, w20, #0x1
  42ba70:	add	x20, x20, #0xf
  42ba74:	and	x20, x20, #0x1fffffff0
  42ba78:	sub	sp, sp, x20
  42ba7c:	mov	x25, sp
  42ba80:	mov	w3, #0x1                   	// #1
  42ba84:	mov	x2, x25
  42ba88:	ldr	x1, [x21]
  42ba8c:	mov	x0, x19
  42ba90:	bl	424774 <ferror@plt+0x21ea4>
  42ba94:	mov	x24, x0
  42ba98:	ldr	x0, [x21]
  42ba9c:	ldrb	w0, [x0, #4]
  42baa0:	mov	x2, x24
  42baa4:	cmp	w0, #0x7
  42baa8:	b.eq	42bb94 <ferror@plt+0x292c4>  // b.none
  42baac:	ldrb	w0, [x22, #4]
  42bab0:	cmp	w0, #0x53
  42bab4:	b.ne	42bba8 <ferror@plt+0x292d8>  // b.any
  42bab8:	mov	w0, #0xa                   	// #10
  42babc:	strb	w0, [x2]
  42bac0:	mov	w3, #0x1                   	// #1
  42bac4:	sub	x2, x2, x25
  42bac8:	mov	x1, x25
  42bacc:	mov	x0, x19
  42bad0:	bl	41bbe0 <ferror@plt+0x19310>
  42bad4:	mov	x0, x19
  42bad8:	bl	423a20 <ferror@plt+0x21150>
  42badc:	mov	x0, x19
  42bae0:	bl	4244e0 <ferror@plt+0x21c10>
  42bae4:	str	x0, [x19, #448]
  42bae8:	mov	x0, x19
  42baec:	bl	426374 <ferror@plt+0x23aa4>
  42baf0:	mov	x20, x0
  42baf4:	ldr	x0, [x19]
  42baf8:	ldr	x1, [x0]
  42bafc:	ldr	x0, [x0, #32]
  42bb00:	cmp	x1, x0
  42bb04:	b.eq	42bbc0 <ferror@plt+0x292f0>  // b.none
  42bb08:	ldr	w26, [x20]
  42bb0c:	mov	x0, x19
  42bb10:	bl	41bcec <ferror@plt+0x1941c>
  42bb14:	mov	w1, #0x1                   	// #1
  42bb18:	mov	x0, x19
  42bb1c:	bl	42b95c <ferror@plt+0x2908c>
  42bb20:	strb	wzr, [x24]
  42bb24:	ldr	x0, [x21]
  42bb28:	ldp	x2, x3, [x0]
  42bb2c:	stp	x2, x3, [x20]
  42bb30:	ldr	x0, [x0, #16]
  42bb34:	str	x0, [x20, #16]
  42bb38:	str	x20, [x21]
  42bb3c:	str	w26, [x20]
  42bb40:	ldrh	w0, [x20, #6]
  42bb44:	and	w0, w0, #0xfffffff7
  42bb48:	strh	w0, [x20, #6]
  42bb4c:	ldr	w1, [x19, #1116]
  42bb50:	mov	w0, #0x0                   	// #0
  42bb54:	cmp	w1, #0x15
  42bb58:	b.eq	42bbd0 <ferror@plt+0x29300>  // b.none
  42bb5c:	mov	x1, x22
  42bb60:	mov	x0, x19
  42bb64:	bl	427e40 <ferror@plt+0x25570>
  42bb68:	mov	x6, x0
  42bb6c:	mov	x5, x25
  42bb70:	adrp	x4, 462000 <_obstack_memory_used@@Base+0x1b094>
  42bb74:	add	x4, x4, #0xe80
  42bb78:	mov	w3, #0x0                   	// #0
  42bb7c:	mov	w2, w23
  42bb80:	mov	w1, #0x3                   	// #3
  42bb84:	mov	x0, x19
  42bb88:	bl	41cbe8 <ferror@plt+0x1a318>
  42bb8c:	mov	w0, #0x0                   	// #0
  42bb90:	b	42bbd0 <ferror@plt+0x29300>
  42bb94:	ldrb	w0, [x22, #4]
  42bb98:	cbz	w0, 42bba8 <ferror@plt+0x292d8>
  42bb9c:	mov	w0, #0x20                  	// #32
  42bba0:	strb	w0, [x2], #1
  42bba4:	b	42baac <ferror@plt+0x291dc>
  42bba8:	mov	w3, #0x1                   	// #1
  42bbac:	mov	x1, x22
  42bbb0:	mov	x0, x19
  42bbb4:	bl	424774 <ferror@plt+0x21ea4>
  42bbb8:	mov	x2, x0
  42bbbc:	b	42bab8 <ferror@plt+0x291e8>
  42bbc0:	str	x20, [x21]
  42bbc4:	mov	x0, x19
  42bbc8:	bl	41bcec <ferror@plt+0x1941c>
  42bbcc:	mov	w0, #0x1                   	// #1
  42bbd0:	mov	sp, x29
  42bbd4:	ldp	x19, x20, [sp, #16]
  42bbd8:	ldp	x21, x22, [sp, #32]
  42bbdc:	ldp	x23, x24, [sp, #48]
  42bbe0:	ldp	x25, x26, [sp, #64]
  42bbe4:	ldp	x29, x30, [sp], #80
  42bbe8:	ret
  42bbec:	ldrb	w1, [x0, #18]
  42bbf0:	and	w1, w1, #0xfffffffc
  42bbf4:	strb	w1, [x0, #18]
  42bbf8:	str	xzr, [x0, #24]
  42bbfc:	ldrh	w1, [x0, #18]
  42bc00:	ubfx	x2, x1, #2, #8
  42bc04:	and	w2, w2, #0xffffffcf
  42bc08:	bfi	w1, w2, #2, #8
  42bc0c:	strh	w1, [x0, #18]
  42bc10:	ret
  42bc14:	stp	x29, x30, [sp, #-64]!
  42bc18:	mov	x29, sp
  42bc1c:	stp	x19, x20, [sp, #16]
  42bc20:	stp	x21, x22, [sp, #32]
  42bc24:	mov	x21, x0
  42bc28:	mov	x19, x2
  42bc2c:	ldrb	w0, [x2, #18]
  42bc30:	and	w0, w0, #0x3
  42bc34:	cmp	w0, #0x1
  42bc38:	b.eq	42bce4 <ferror@plt+0x29414>  // b.none
  42bc3c:	str	x23, [sp, #48]
  42bc40:	mov	w20, w1
  42bc44:	mov	x22, x3
  42bc48:	add	w0, w1, #0x1
  42bc4c:	add	w0, w0, w0, lsl #1
  42bc50:	lsl	w23, w0, #3
  42bc54:	ldr	w1, [x21, #512]
  42bc58:	cmp	w1, w0, lsl #3
  42bc5c:	b.cc	42bd04 <ferror@plt+0x29434>  // b.lo, b.ul, b.last
  42bc60:	mov	w23, w20
  42bc64:	add	x0, x23, w20, uxtw #1
  42bc68:	lsl	x0, x0, #3
  42bc6c:	ldr	x2, [x21, #504]
  42bc70:	add	x1, x2, x0
  42bc74:	str	x19, [x2, x0]
  42bc78:	ldr	x0, [x19, #24]
  42bc7c:	str	x0, [x1, #8]
  42bc80:	ldrb	w0, [x19, #18]
  42bc84:	and	w0, w0, #0x3
  42bc88:	str	w0, [x1, #16]
  42bc8c:	lsl	x0, x23, #3
  42bc90:	ldr	x2, [x21, #56]
  42bc94:	ldr	x1, [x2, #24]
  42bc98:	ldr	x2, [x2, #16]
  42bc9c:	sub	x1, x1, x2
  42bca0:	add	x0, x0, #0x8
  42bca4:	cmp	x1, x0
  42bca8:	b.cc	42bd1c <ferror@plt+0x2944c>  // b.lo, b.ul, b.last
  42bcac:	ldr	x0, [x21, #56]
  42bcb0:	ldr	x0, [x0, #16]
  42bcb4:	str	x22, [x0, x23, lsl #3]
  42bcb8:	ldrb	w1, [x19, #18]
  42bcbc:	mov	w0, #0x1                   	// #1
  42bcc0:	bfxil	w1, w0, #0, #2
  42bcc4:	strb	w1, [x19, #18]
  42bcc8:	add	w20, w20, w0
  42bccc:	strh	w20, [x19, #24]
  42bcd0:	ldr	x23, [sp, #48]
  42bcd4:	ldp	x19, x20, [sp, #16]
  42bcd8:	ldp	x21, x22, [sp, #32]
  42bcdc:	ldp	x29, x30, [sp], #64
  42bce0:	ret
  42bce4:	ldr	x3, [x2]
  42bce8:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b094>
  42bcec:	add	x2, x2, #0xec0
  42bcf0:	mov	w1, #0x3                   	// #3
  42bcf4:	mov	x0, x21
  42bcf8:	bl	41c9fc <ferror@plt+0x1a12c>
  42bcfc:	mov	w0, #0x0                   	// #0
  42bd00:	b	42bcd4 <ferror@plt+0x29404>
  42bd04:	mov	w1, w23
  42bd08:	ldr	x0, [x21, #504]
  42bd0c:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  42bd10:	str	x0, [x21, #504]
  42bd14:	str	w23, [x21, #512]
  42bd18:	b	42bc60 <ferror@plt+0x29390>
  42bd1c:	mov	x2, #0x8                   	// #8
  42bd20:	add	x1, x21, #0x38
  42bd24:	mov	x0, x21
  42bd28:	bl	42539c <ferror@plt+0x22acc>
  42bd2c:	b	42bcac <ferror@plt+0x293dc>
  42bd30:	sub	w2, w1, #0x1
  42bd34:	cbz	w1, 42bd74 <ferror@plt+0x294a4>
  42bd38:	ubfiz	x1, x2, #1, #32
  42bd3c:	add	x1, x1, w2, uxtw
  42bd40:	lsl	x1, x1, #3
  42bd44:	ldr	x2, [x0, #504]
  42bd48:	add	x3, x2, x1
  42bd4c:	ldr	x2, [x2, x1]
  42bd50:	ldrb	w4, [x2, #18]
  42bd54:	ldr	w5, [x3, #16]
  42bd58:	bfxil	w4, w5, #0, #2
  42bd5c:	strb	w4, [x2, #18]
  42bd60:	ldr	x3, [x3, #8]
  42bd64:	str	x3, [x2, #24]
  42bd68:	sub	x1, x1, #0x18
  42bd6c:	cmn	x1, #0x18
  42bd70:	b.ne	42bd44 <ferror@plt+0x29474>  // b.any
  42bd74:	ret
  42bd78:	mov	x3, x0
  42bd7c:	mov	x0, x2
  42bd80:	ldr	w2, [x3, #48]
  42bd84:	str	w2, [x0, #8]
  42bd88:	str	xzr, [x0]
  42bd8c:	strb	wzr, [x0, #18]
  42bd90:	strh	wzr, [x0, #16]
  42bd94:	ldrb	w2, [x0, #19]
  42bd98:	and	w2, w2, #0xfffffff7
  42bd9c:	strb	w2, [x0, #19]
  42bda0:	ldrb	w4, [x3, #1151]
  42bda4:	cmp	w4, #0x0
  42bda8:	cset	w4, eq  // eq = none
  42bdac:	bfi	w2, w4, #5, #1
  42bdb0:	str	wzr, [x0, #12]
  42bdb4:	and	w2, w2, #0xfffffffb
  42bdb8:	and	w2, w2, #0xffffffbf
  42bdbc:	strb	w2, [x0, #19]
  42bdc0:	ldr	x2, [x3]
  42bdc4:	mov	w3, #0x0                   	// #0
  42bdc8:	cbz	x2, 42bdd8 <ferror@plt+0x29508>
  42bdcc:	ldrb	w2, [x2, #106]
  42bdd0:	cmp	w2, #0x0
  42bdd4:	cset	w3, ne  // ne = any
  42bdd8:	ldrb	w2, [x0, #19]
  42bddc:	bfi	w2, w3, #4, #1
  42bde0:	bfxil	w2, w1, #0, #2
  42bde4:	strb	w2, [x0, #19]
  42bde8:	ret
  42bdec:	stp	x29, x30, [sp, #-240]!
  42bdf0:	mov	x29, sp
  42bdf4:	stp	x19, x20, [sp, #16]
  42bdf8:	stp	x23, x24, [sp, #48]
  42bdfc:	mov	x19, x0
  42be00:	mov	x23, x1
  42be04:	ldrb	w0, [x0, #1160]
  42be08:	str	w0, [sp, #104]
  42be0c:	cbz	w0, 42bed0 <ferror@plt+0x29600>
  42be10:	mov	x0, x19
  42be14:	bl	431718 <ferror@plt+0x2ee48>
  42be18:	mov	x20, x0
  42be1c:	cbz	x20, 42cac0 <ferror@plt+0x2a1f0>
  42be20:	ldrb	w0, [x23, #18]
  42be24:	tbz	w0, #1, 42c9d0 <ferror@plt+0x2a100>
  42be28:	ldrb	w0, [x19, #1151]
  42be2c:	cbnz	w0, 42c8e0 <ferror@plt+0x2a010>
  42be30:	ldrh	w0, [x23, #18]
  42be34:	ubfx	x1, x0, #2, #8
  42be38:	tbnz	w0, #5, 42c980 <ferror@plt+0x2a0b0>
  42be3c:	ldrb	w0, [x23, #18]
  42be40:	and	w0, w0, #0x3
  42be44:	cmp	w0, #0x3
  42be48:	b.eq	42c8f4 <ferror@plt+0x2a024>  // b.none
  42be4c:	tbnz	w1, #6, 42c9c8 <ferror@plt+0x2a0f8>
  42be50:	stp	x21, x22, [sp, #32]
  42be54:	ldr	x21, [x23, #24]
  42be58:	ldrb	w2, [x21, #18]
  42be5c:	cbz	w2, 42be78 <ferror@plt+0x295a8>
  42be60:	ldr	x3, [x19, #1048]
  42be64:	sub	w2, w2, #0x1
  42be68:	mov	x1, x21
  42be6c:	mov	x0, x19
  42be70:	blr	x3
  42be74:	strb	wzr, [x21, #18]
  42be78:	ldrh	w1, [x21, #16]
  42be7c:	ldrh	w0, [x20, #16]
  42be80:	cmp	w0, w1
  42be84:	b.ne	42c97c <ferror@plt+0x2a0ac>  // b.any
  42be88:	ldrb	w4, [x21, #19]
  42be8c:	ldrb	w0, [x20, #19]
  42be90:	eor	w0, w4, w0
  42be94:	tst	w0, #0xc
  42be98:	b.ne	42ca70 <ferror@plt+0x2a1a0>  // b.any
  42be9c:	sub	w1, w1, #0x1
  42bea0:	cmn	w1, #0x1
  42bea4:	b.eq	42c904 <ferror@plt+0x2a034>  // b.none
  42bea8:	mov	w0, w1
  42beac:	ldr	x2, [x21]
  42beb0:	ldr	x3, [x20]
  42beb4:	ldr	x2, [x2, x0, lsl #3]
  42beb8:	sub	w1, w1, #0x1
  42bebc:	ldr	x0, [x3, x0, lsl #3]
  42bec0:	cmp	x2, x0
  42bec4:	b.eq	42bea0 <ferror@plt+0x295d0>  // b.none
  42bec8:	ldp	x21, x22, [sp, #32]
  42becc:	b	42c980 <ferror@plt+0x2a0b0>
  42bed0:	stp	x21, x22, [sp, #32]
  42bed4:	stp	x25, x26, [sp, #64]
  42bed8:	ldr	x20, [x19, #448]
  42bedc:	add	x0, sp, #0xb0
  42bee0:	str	x0, [x19, #448]
  42bee4:	mov	x0, x19
  42bee8:	bl	426374 <ferror@plt+0x23aa4>
  42beec:	mov	x21, x0
  42bef0:	str	x20, [x19, #448]
  42bef4:	ldrh	w0, [x0, #6]
  42bef8:	tbnz	w0, #0, 42cb34 <ferror@plt+0x2a264>
  42befc:	ldrb	w0, [x21, #4]
  42bf00:	cmp	w0, #0x14
  42bf04:	b.eq	42bf58 <ferror@plt+0x29688>  // b.none
  42bf08:	stp	x27, x28, [sp, #80]
  42bf0c:	cmp	w0, #0x16
  42bf10:	b.eq	42cb38 <ferror@plt+0x2a268>  // b.none
  42bf14:	cmp	w0, #0x4f
  42bf18:	b.eq	42c1fc <ferror@plt+0x2992c>  // b.none
  42bf1c:	ldrb	w1, [x19, #1152]
  42bf20:	cbnz	w1, 42c210 <ferror@plt+0x29940>
  42bf24:	cmp	w0, #0x3d
  42bf28:	b.eq	42c24c <ferror@plt+0x2997c>  // b.none
  42bf2c:	b.hi	42c23c <ferror@plt+0x2996c>  // b.pmore
  42bf30:	and	w0, w0, #0xfffffffd
  42bf34:	and	w0, w0, #0xff
  42bf38:	cmp	w0, #0x34
  42bf3c:	cset	w1, eq  // eq = none
  42bf40:	lsl	w1, w1, #1
  42bf44:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c094>
  42bf48:	add	x2, x2, #0x40
  42bf4c:	mov	x0, x19
  42bf50:	bl	41c9fc <ferror@plt+0x1a12c>
  42bf54:	b	42cb38 <ferror@plt+0x2a268>
  42bf58:	mov	w21, #0x0                   	// #0
  42bf5c:	mov	w20, #0x0                   	// #0
  42bf60:	str	wzr, [sp, #160]
  42bf64:	adrp	x24, 462000 <_obstack_memory_used@@Base+0x1b094>
  42bf68:	add	x24, x24, #0xf80
  42bf6c:	adrp	x22, 462000 <_obstack_memory_used@@Base+0x1b094>
  42bf70:	add	x22, x22, #0xf50
  42bf74:	mov	w25, #0xa                   	// #10
  42bf78:	b	42c088 <ferror@plt+0x297b8>
  42bf7c:	cmp	w2, #0x13
  42bf80:	b.eq	42c070 <ferror@plt+0x297a0>  // b.none
  42bf84:	cmp	w2, #0x15
  42bf88:	b.ne	42bfd8 <ferror@plt+0x29708>  // b.any
  42bf8c:	cmp	w20, #0x0
  42bf90:	ccmp	w21, #0x0, #0x0, eq  // eq = none
  42bf94:	ldr	w1, [sp, #160]
  42bf98:	ccmp	w1, #0x0, #0x4, eq  // eq = none
  42bf9c:	b.eq	42cbbc <ferror@plt+0x2a2ec>  // b.none
  42bfa0:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  42bfa4:	add	x1, x1, #0x460
  42bfa8:	ldp	x4, x5, [x1, #96]
  42bfac:	stp	x4, x5, [sp, #200]
  42bfb0:	ldp	x4, x5, [x1, #112]
  42bfb4:	stp	x4, x5, [sp, #216]
  42bfb8:	ldr	x1, [x1, #128]
  42bfbc:	str	x1, [sp, #232]
  42bfc0:	mov	w21, w20
  42bfc4:	cmp	w2, #0x16
  42bfc8:	b.ne	42c0e4 <ferror@plt+0x29814>  // b.any
  42bfcc:	add	w21, w20, #0x2
  42bfd0:	mov	x3, #0x0                   	// #0
  42bfd4:	b	42c004 <ferror@plt+0x29734>
  42bfd8:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  42bfdc:	add	x1, x1, #0x460
  42bfe0:	ldp	x4, x5, [x1, #96]
  42bfe4:	stp	x4, x5, [sp, #200]
  42bfe8:	ldp	x4, x5, [x1, #112]
  42bfec:	stp	x4, x5, [sp, #216]
  42bff0:	ldr	x1, [x1, #128]
  42bff4:	str	x1, [sp, #232]
  42bff8:	cbz	w21, 42bfc0 <ferror@plt+0x296f0>
  42bffc:	mov	x3, #0x0                   	// #0
  42c000:	mov	w21, #0x4                   	// #4
  42c004:	add	x0, sp, #0xc8
  42c008:	ldr	x2, [x0, w21, uxtw #3]
  42c00c:	mov	w1, #0x3                   	// #3
  42c010:	mov	x0, x19
  42c014:	bl	41c9fc <ferror@plt+0x1a12c>
  42c018:	b	42c7a4 <ferror@plt+0x29ed4>
  42c01c:	mov	x3, #0x0                   	// #0
  42c020:	mov	w21, #0x4                   	// #4
  42c024:	b	42c004 <ferror@plt+0x29734>
  42c028:	mov	x3, #0x0                   	// #0
  42c02c:	mov	w21, #0x4                   	// #4
  42c030:	b	42c004 <ferror@plt+0x29734>
  42c034:	orr	w26, w20, w21
  42c038:	ands	w26, w26, #0xff
  42c03c:	b.ne	42c0bc <ferror@plt+0x297ec>  // b.any
  42c040:	ldr	x3, [x0, #16]
  42c044:	ldr	x2, [x0, #8]
  42c048:	ldr	w21, [sp, #160]
  42c04c:	mov	w1, w21
  42c050:	mov	x0, x19
  42c054:	bl	42bc14 <ferror@plt+0x29344>
  42c058:	ands	w20, w0, #0xff
  42c05c:	b.eq	42c7a4 <ferror@plt+0x29ed4>  // b.none
  42c060:	add	w0, w21, #0x1
  42c064:	str	w0, [sp, #160]
  42c068:	mov	w21, w26
  42c06c:	b	42c088 <ferror@plt+0x297b8>
  42c070:	eor	w1, w20, #0x1
  42c074:	orr	w1, w21, w1
  42c078:	ands	w1, w1, #0xff
  42c07c:	b.ne	42c0f8 <ferror@plt+0x29828>  // b.any
  42c080:	mov	w21, w1
  42c084:	mov	w20, w1
  42c088:	mov	x0, x19
  42c08c:	bl	427bcc <ferror@plt+0x252fc>
  42c090:	ldrb	w2, [x0, #4]
  42c094:	cmp	w2, #0x2c
  42c098:	b.eq	42c124 <ferror@plt+0x29854>  // b.none
  42c09c:	cmp	w2, #0x2c
  42c0a0:	b.ls	42bf7c <ferror@plt+0x296ac>  // b.plast
  42c0a4:	cmp	w2, #0x35
  42c0a8:	b.eq	42c034 <ferror@plt+0x29764>  // b.none
  42c0ac:	cmp	w2, #0x4f
  42c0b0:	b.ne	42bfd8 <ferror@plt+0x29708>  // b.any
  42c0b4:	ldrb	w1, [x19, #1124]
  42c0b8:	cbz	w1, 42c088 <ferror@plt+0x297b8>
  42c0bc:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  42c0c0:	add	x1, x1, #0x460
  42c0c4:	ldp	x4, x5, [x1, #96]
  42c0c8:	stp	x4, x5, [sp, #200]
  42c0cc:	ldp	x4, x5, [x1, #112]
  42c0d0:	stp	x4, x5, [sp, #216]
  42c0d4:	ldr	x1, [x1, #128]
  42c0d8:	str	x1, [sp, #232]
  42c0dc:	cbnz	w21, 42c028 <ferror@plt+0x29758>
  42c0e0:	mov	w21, w20
  42c0e4:	mov	x1, x0
  42c0e8:	mov	x0, x19
  42c0ec:	bl	427e40 <ferror@plt+0x25570>
  42c0f0:	mov	x3, x0
  42c0f4:	b	42c004 <ferror@plt+0x29734>
  42c0f8:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  42c0fc:	add	x1, x1, #0x460
  42c100:	ldp	x4, x5, [x1, #96]
  42c104:	stp	x4, x5, [sp, #200]
  42c108:	ldp	x4, x5, [x1, #112]
  42c10c:	stp	x4, x5, [sp, #216]
  42c110:	ldr	x1, [x1, #128]
  42c114:	str	x1, [sp, #232]
  42c118:	cbnz	w21, 42c01c <ferror@plt+0x2974c>
  42c11c:	mov	w21, w20
  42c120:	b	42c0e4 <ferror@plt+0x29814>
  42c124:	cbnz	w21, 42cc20 <ferror@plt+0x2a350>
  42c128:	cbz	w20, 42c15c <ferror@plt+0x2988c>
  42c12c:	ldrb	w0, [x19, #1154]
  42c130:	mov	w21, w20
  42c134:	cbz	w0, 42c088 <ferror@plt+0x297b8>
  42c138:	ldrb	w0, [x19, #1142]
  42c13c:	cbz	w0, 42c088 <ferror@plt+0x297b8>
  42c140:	ldrb	w0, [x19, #1120]
  42c144:	cmp	w0, #0x0
  42c148:	csel	x2, x22, x24, ne  // ne = any
  42c14c:	mov	w1, w25
  42c150:	mov	x0, x19
  42c154:	bl	41caf0 <ferror@plt+0x1a220>
  42c158:	b	42c088 <ferror@plt+0x297b8>
  42c15c:	ldr	x2, [x19, #1272]
  42c160:	mov	x3, x2
  42c164:	ldr	w21, [sp, #160]
  42c168:	mov	w1, w21
  42c16c:	mov	x0, x19
  42c170:	bl	42bc14 <ferror@plt+0x29344>
  42c174:	add	w0, w21, #0x1
  42c178:	str	w0, [sp, #160]
  42c17c:	mov	w0, #0x1                   	// #1
  42c180:	strb	w0, [x19, #22]
  42c184:	ldrb	w0, [x19, #1152]
  42c188:	cbnz	w0, 42c1cc <ferror@plt+0x298fc>
  42c18c:	ldrb	w0, [x19, #1154]
  42c190:	cbz	w0, 42c1cc <ferror@plt+0x298fc>
  42c194:	ldrb	w0, [x19, #1142]
  42c198:	cbz	w0, 42c1cc <ferror@plt+0x298fc>
  42c19c:	ldrb	w1, [x19, #1120]
  42c1a0:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b094>
  42c1a4:	add	x0, x0, #0xf18
  42c1a8:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b094>
  42c1ac:	add	x2, x2, #0xee0
  42c1b0:	cmp	w1, #0x0
  42c1b4:	csel	x2, x2, x0, ne  // ne = any
  42c1b8:	mov	w1, w25
  42c1bc:	mov	x0, x19
  42c1c0:	bl	41caf0 <ferror@plt+0x1a220>
  42c1c4:	mov	w21, #0x1                   	// #1
  42c1c8:	b	42c088 <ferror@plt+0x297b8>
  42c1cc:	ldrsb	w0, [x19, #1198]
  42c1d0:	mov	w21, #0x1                   	// #1
  42c1d4:	cmp	w0, #0x0
  42c1d8:	b.le	42c088 <ferror@plt+0x297b8>
  42c1dc:	ldrb	w0, [x19, #1120]
  42c1e0:	cbnz	w0, 42c088 <ferror@plt+0x297b8>
  42c1e4:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b094>
  42c1e8:	add	x2, x2, #0xf18
  42c1ec:	mov	w1, #0x0                   	// #0
  42c1f0:	mov	x0, x19
  42c1f4:	bl	41c9fc <ferror@plt+0x1a12c>
  42c1f8:	b	42c088 <ferror@plt+0x297b8>
  42c1fc:	ldrb	w0, [x19, #1124]
  42c200:	cbz	w0, 42cb38 <ferror@plt+0x2a268>
  42c204:	ldrb	w0, [x19, #1152]
  42c208:	mov	w1, #0x0                   	// #0
  42c20c:	cbz	w0, 42bf44 <ferror@plt+0x29674>
  42c210:	ldrb	w1, [x19, #1120]
  42c214:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b094>
  42c218:	add	x0, x0, #0xfe8
  42c21c:	adrp	x2, 462000 <_obstack_memory_used@@Base+0x1b094>
  42c220:	add	x2, x2, #0xfb0
  42c224:	cmp	w1, #0x0
  42c228:	csel	x2, x2, x0, ne  // ne = any
  42c22c:	mov	w1, #0x2                   	// #2
  42c230:	mov	x0, x19
  42c234:	bl	41c9fc <ferror@plt+0x1a12c>
  42c238:	b	42cb38 <ferror@plt+0x2a268>
  42c23c:	cmp	w0, #0x43
  42c240:	cset	w1, eq  // eq = none
  42c244:	lsl	w1, w1, #1
  42c248:	b	42bf44 <ferror@plt+0x29674>
  42c24c:	ldr	x0, [x21, #16]
  42c250:	ldrb	w1, [x0]
  42c254:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1c094>
  42c258:	add	x0, x0, #0x20
  42c25c:	bl	4026c0 <strchr@plt>
  42c260:	cmp	x0, #0x0
  42c264:	cset	w1, eq  // eq = none
  42c268:	lsl	w1, w1, #1
  42c26c:	b	42bf44 <ferror@plt+0x29674>
  42c270:	ldr	x0, [x19, #56]
  42c274:	ldr	x1, [x0, #24]
  42c278:	ldr	x0, [x0, #16]
  42c27c:	sub	x1, x1, x0
  42c280:	ldr	w0, [x20, #12]
  42c284:	add	x0, x0, #0x2
  42c288:	add	x0, x0, x0, lsl #1
  42c28c:	cmp	x1, x0, lsl #3
  42c290:	b.cc	42c30c <ferror@plt+0x29a3c>  // b.lo, b.ul, b.last
  42c294:	ldr	x0, [x19, #56]
  42c298:	ldr	x20, [x0, #16]
  42c29c:	ldr	x21, [x19, #448]
  42c2a0:	ldr	w0, [x20, #12]
  42c2a4:	add	x0, x0, #0x1
  42c2a8:	add	x0, x0, x0, lsl #1
  42c2ac:	add	x0, x20, x0, lsl #3
  42c2b0:	str	x0, [x19, #448]
  42c2b4:	mov	x0, x19
  42c2b8:	bl	426374 <ferror@plt+0x23aa4>
  42c2bc:	str	x21, [x19, #448]
  42c2c0:	ldrb	w1, [x0, #4]
  42c2c4:	cmp	w1, #0x35
  42c2c8:	b.eq	42c320 <ferror@plt+0x29a50>  // b.none
  42c2cc:	ldrb	w2, [x19, #1138]
  42c2d0:	cbz	w2, 42c2ec <ferror@plt+0x29a1c>
  42c2d4:	ldrh	w2, [x20, #16]
  42c2d8:	cbz	w2, 42c2ec <ferror@plt+0x29a1c>
  42c2dc:	cmp	w1, #0x38
  42c2e0:	mov	w2, #0x3e                  	// #62
  42c2e4:	ccmp	w1, w2, #0x4, ne  // ne = any
  42c2e8:	b.eq	42c348 <ferror@plt+0x29a78>  // b.none
  42c2ec:	ldr	w0, [x20, #12]
  42c2f0:	add	w1, w0, #0x1
  42c2f4:	str	w1, [x20, #12]
  42c2f8:	mov	w0, w0
  42c2fc:	add	x0, x0, #0x1
  42c300:	add	x0, x0, x0, lsl #1
  42c304:	add	x0, x20, x0, lsl #3
  42c308:	b	42c72c <ferror@plt+0x29e5c>
  42c30c:	mov	x2, #0x18                  	// #24
  42c310:	add	x1, x19, #0x38
  42c314:	mov	x0, x19
  42c318:	bl	42539c <ferror@plt+0x22acc>
  42c31c:	b	42c294 <ferror@plt+0x299c4>
  42c320:	ldr	x3, [x0, #8]
  42c324:	ldrb	w2, [x3, #18]
  42c328:	and	w2, w2, #0x3
  42c32c:	cmp	w2, #0x1
  42c330:	b.ne	42c2cc <ferror@plt+0x299fc>  // b.any
  42c334:	mov	w1, #0x50                  	// #80
  42c338:	strb	w1, [x0, #4]
  42c33c:	ldrh	w1, [x3, #24]
  42c340:	str	w1, [x0, #8]
  42c344:	b	42c2ec <ferror@plt+0x29a1c>
  42c348:	ldr	x21, [x0, #16]
  42c34c:	ldr	w24, [x0, #8]
  42c350:	sub	x24, x24, #0x1
  42c354:	add	x24, x21, x24
  42c358:	add	x21, x21, #0x1
  42c35c:	cmp	x24, x21
  42c360:	b.hi	42c458 <ferror@plt+0x29b88>  // b.pmore
  42c364:	b	42c2ec <ferror@plt+0x29a1c>
  42c368:	mov	x21, x0
  42c36c:	b	42c450 <ferror@plt+0x29b80>
  42c370:	add	x21, x21, #0x1
  42c374:	cmp	x24, x21
  42c378:	b.eq	42cb28 <ferror@plt+0x2a258>  // b.none
  42c37c:	ldrb	w0, [x21]
  42c380:	ldr	x1, [sp, #120]
  42c384:	ldrh	w1, [x1, w0, sxtw #1]
  42c388:	tbnz	w1, #9, 42c39c <ferror@plt+0x29acc>
  42c38c:	cmp	w0, #0x24
  42c390:	b.ne	42c370 <ferror@plt+0x29aa0>  // b.any
  42c394:	ldrb	w0, [x19, #1146]
  42c398:	cbz	w0, 42c370 <ferror@plt+0x29aa0>
  42c39c:	cmp	x24, x21
  42c3a0:	b.ls	42caec <ferror@plt+0x2a21c>  // b.plast
  42c3a4:	mov	x0, x21
  42c3a8:	mov	w3, #0x204                 	// #516
  42c3ac:	b	42c3bc <ferror@plt+0x29aec>
  42c3b0:	add	x0, x0, #0x1
  42c3b4:	cmp	x24, x0
  42c3b8:	b.eq	42caf4 <ferror@plt+0x2a224>  // b.none
  42c3bc:	ldrb	w1, [x0]
  42c3c0:	ldr	x2, [sp, #120]
  42c3c4:	ldrh	w2, [x2, w1, sxtw #1]
  42c3c8:	tst	w3, w2
  42c3cc:	b.ne	42c3b0 <ferror@plt+0x29ae0>  // b.any
  42c3d0:	cmp	w1, #0x24
  42c3d4:	b.ne	42c3e0 <ferror@plt+0x29b10>  // b.any
  42c3d8:	ldrb	w1, [x19, #1146]
  42c3dc:	cbnz	w1, 42c3b0 <ferror@plt+0x29ae0>
  42c3e0:	sub	x1, x0, x21
  42c3e4:	str	w1, [sp, #144]
  42c3e8:	ldrh	w28, [x20, #16]
  42c3ec:	cbz	w28, 42c368 <ferror@plt+0x29a98>
  42c3f0:	str	x21, [sp, #112]
  42c3f4:	mov	x21, x0
  42c3f8:	b	42cb10 <ferror@plt+0x2a240>
  42c3fc:	add	x25, x25, #0x1
  42c400:	cmp	w28, w25
  42c404:	b.ls	42c450 <ferror@plt+0x29b80>  // b.plast
  42c408:	ldr	x0, [sp, #128]
  42c40c:	ldr	x0, [x0, x25, lsl #3]
  42c410:	ldr	w1, [x0, #8]
  42c414:	ldr	w2, [sp, #144]
  42c418:	cmp	w1, w2
  42c41c:	b.ne	42c3fc <ferror@plt+0x29b2c>  // b.any
  42c420:	ldr	x0, [x0]
  42c424:	str	x0, [sp, #152]
  42c428:	ldr	x2, [sp, #136]
  42c42c:	mov	x1, x0
  42c430:	ldr	x0, [sp, #112]
  42c434:	bl	4025e0 <memcmp@plt>
  42c438:	cbnz	w0, 42c3fc <ferror@plt+0x29b2c>
  42c43c:	ldr	x3, [sp, #152]
  42c440:	ldr	x2, [sp, #168]
  42c444:	mov	w1, #0x6                   	// #6
  42c448:	mov	x0, x19
  42c44c:	bl	41ca74 <ferror@plt+0x1a1a4>
  42c450:	cmp	x24, x21
  42c454:	b.ls	42c2ec <ferror@plt+0x29a1c>  // b.plast
  42c458:	cmp	x21, x24
  42c45c:	b.cc	42c37c <ferror@plt+0x29aac>  // b.lo, b.ul, b.last
  42c460:	b	42cb2c <ferror@plt+0x2a25c>
  42c464:	ldrb	w1, [x20, #19]
  42c468:	tbz	w1, #2, 42c744 <ferror@plt+0x29e74>
  42c46c:	ldrb	w1, [x0, #4]
  42c470:	cmp	w1, #0x50
  42c474:	b.eq	42c4a0 <ferror@plt+0x29bd0>  // b.none
  42c478:	ldr	w1, [x19, #1116]
  42c47c:	cmp	w1, #0x15
  42c480:	b.eq	42c744 <ferror@plt+0x29e74>  // b.none
  42c484:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c094>
  42c488:	add	x2, x2, #0xa8
  42c48c:	mov	w1, #0x3                   	// #3
  42c490:	mov	x0, x19
  42c494:	bl	41c9fc <ferror@plt+0x1a12c>
  42c498:	ldp	x27, x28, [sp, #80]
  42c49c:	b	42c7a4 <ferror@plt+0x29ed4>
  42c4a0:	ldrh	w1, [x0, #6]
  42c4a4:	tbz	w1, #0, 42c4b0 <ferror@plt+0x29be0>
  42c4a8:	orr	w1, w1, #0x200
  42c4ac:	strh	w1, [x0, #6]
  42c4b0:	ldurh	w2, [x0, #-18]
  42c4b4:	tbz	w2, #1, 42c4c4 <ferror@plt+0x29bf4>
  42c4b8:	ldrh	w1, [x0, #6]
  42c4bc:	orr	w1, w1, #0x100
  42c4c0:	strh	w1, [x0, #6]
  42c4c4:	ldrh	w1, [x0, #6]
  42c4c8:	and	w1, w1, #0xfffffffe
  42c4cc:	orr	w1, w1, #0x4
  42c4d0:	and	w2, w2, #0x1
  42c4d4:	orr	w1, w1, w2
  42c4d8:	strh	w1, [x0, #6]
  42c4dc:	ldp	x2, x3, [x0]
  42c4e0:	stp	x2, x3, [x0, #-24]
  42c4e4:	ldr	x1, [x0, #16]
  42c4e8:	stur	x1, [x0, #-8]
  42c4ec:	ldr	w1, [x20, #12]
  42c4f0:	sub	w1, w1, #0x1
  42c4f4:	str	w1, [x20, #12]
  42c4f8:	b	42c744 <ferror@plt+0x29e74>
  42c4fc:	cbnz	w26, 42c594 <ferror@plt+0x29cc4>
  42c500:	cbz	w27, 42c5d0 <ferror@plt+0x29d00>
  42c504:	cbnz	w22, 42c5b0 <ferror@plt+0x29ce0>
  42c508:	ldr	w1, [x20, #12]
  42c50c:	sub	w1, w1, #0x1
  42c510:	str	w1, [x20, #12]
  42c514:	mov	w1, w1
  42c518:	add	x1, x1, #0x1
  42c51c:	add	x1, x1, x1, lsl #1
  42c520:	lsl	x1, x1, #3
  42c524:	mov	x0, x19
  42c528:	bl	427f00 <ferror@plt+0x25630>
  42c52c:	mov	x20, x0
  42c530:	ldr	w0, [x0, #12]
  42c534:	cbz	w0, 42c544 <ferror@plt+0x29c74>
  42c538:	ldrh	w0, [x20, #30]
  42c53c:	and	w0, w0, #0xfffffffe
  42c540:	strh	w0, [x20, #30]
  42c544:	ldr	w1, [sp, #108]
  42c548:	cbz	w1, 42c8c0 <ferror@plt+0x29ff0>
  42c54c:	ubfiz	x0, x1, #1, #32
  42c550:	add	x0, x0, w1, uxtw
  42c554:	lsl	x21, x0, #3
  42c558:	ldr	x2, [x19, #56]
  42c55c:	ldr	x1, [x2, #24]
  42c560:	ldr	x2, [x2, #16]
  42c564:	sub	x1, x1, x2
  42c568:	cmp	x1, x0, lsl #3
  42c56c:	b.cc	42c820 <ferror@plt+0x29f50>  // b.lo, b.ul, b.last
  42c570:	ldr	x0, [x19, #56]
  42c574:	ldr	x1, [x0, #16]
  42c578:	add	x0, x20, #0x18
  42c57c:	ldr	w5, [x20, #12]
  42c580:	cbz	w5, 42c8a0 <ferror@plt+0x29fd0>
  42c584:	mov	w5, #0x0                   	// #0
  42c588:	mov	w8, #0x0                   	// #0
  42c58c:	mov	w3, #0x0                   	// #0
  42c590:	b	42c864 <ferror@plt+0x29f94>
  42c594:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c094>
  42c598:	add	x2, x2, #0xd8
  42c59c:	mov	w1, #0x3                   	// #3
  42c5a0:	mov	x0, x19
  42c5a4:	bl	41c9fc <ferror@plt+0x1a12c>
  42c5a8:	ldp	x27, x28, [sp, #80]
  42c5ac:	b	42c7a4 <ferror@plt+0x29ed4>
  42c5b0:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c094>
  42c5b4:	add	x3, x3, #0x110
  42c5b8:	ldr	w2, [sp, #148]
  42c5bc:	mov	w1, #0x3                   	// #3
  42c5c0:	mov	x0, x19
  42c5c4:	bl	41cdd4 <ferror@plt+0x1a504>
  42c5c8:	ldp	x27, x28, [sp, #80]
  42c5cc:	b	42c7a4 <ferror@plt+0x29ed4>
  42c5d0:	cbz	w22, 42c508 <ferror@plt+0x29c38>
  42c5d4:	ldp	x27, x28, [sp, #80]
  42c5d8:	b	42c7a4 <ferror@plt+0x29ed4>
  42c5dc:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c094>
  42c5e0:	add	x2, x2, #0xd8
  42c5e4:	mov	w1, #0x3                   	// #3
  42c5e8:	mov	x0, x19
  42c5ec:	bl	41c9fc <ferror@plt+0x1a12c>
  42c5f0:	ldp	x27, x28, [sp, #80]
  42c5f4:	b	42c7a4 <ferror@plt+0x29ed4>
  42c5f8:	sub	w1, w1, #0x1
  42c5fc:	str	w1, [x20, #12]
  42c600:	ldurh	w1, [x0, #-18]
  42c604:	orr	w2, w1, #0x8
  42c608:	sturh	w2, [x0, #-18]
  42c60c:	ldrh	w2, [x0, #6]
  42c610:	tbz	w2, #1, 42c620 <ferror@plt+0x29d50>
  42c614:	mov	w3, #0x108                 	// #264
  42c618:	orr	w1, w1, w3
  42c61c:	sturh	w1, [x0, #-18]
  42c620:	mov	w26, #0x1                   	// #1
  42c624:	tbz	w2, #0, 42c63c <ferror@plt+0x29d6c>
  42c628:	ldurh	w1, [x0, #-18]
  42c62c:	orr	w1, w1, #0x200
  42c630:	sturh	w1, [x0, #-18]
  42c634:	b	42c63c <ferror@plt+0x29d6c>
  42c638:	mov	w26, #0x0                   	// #0
  42c63c:	cbz	w27, 42c724 <ferror@plt+0x29e54>
  42c640:	ldrb	w1, [x0, #4]
  42c644:	cmp	w1, #0x35
  42c648:	b.eq	42c6b0 <ferror@plt+0x29de0>  // b.none
  42c64c:	cmp	w22, #0x1
  42c650:	b.eq	42c718 <ferror@plt+0x29e48>  // b.none
  42c654:	b.le	42c724 <ferror@plt+0x29e54>
  42c658:	cmp	w1, #0x26
  42c65c:	cset	w3, eq  // eq = none
  42c660:	cmp	w22, #0x2
  42c664:	cset	w2, eq  // eq = none
  42c668:	cmp	w2, #0x0
  42c66c:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  42c670:	b.ne	42c7c4 <ferror@plt+0x29ef4>  // b.any
  42c674:	cbnz	w2, 42c7e4 <ferror@plt+0x29f14>
  42c678:	cbnz	w3, 42cac8 <ferror@plt+0x2a1f8>
  42c67c:	ldr	w2, [sp, #100]
  42c680:	cmp	w1, #0x14
  42c684:	b.eq	42c7f0 <ferror@plt+0x29f20>  // b.none
  42c688:	cmp	w1, #0x15
  42c68c:	b.ne	42cad4 <ferror@plt+0x2a204>  // b.any
  42c690:	sub	w22, w22, #0x1
  42c694:	cmp	w22, #0x2
  42c698:	b.ne	42cae0 <ferror@plt+0x2a210>  // b.any
  42c69c:	cbnz	w2, 42c800 <ferror@plt+0x29f30>
  42c6a0:	ldr	w0, [sp, #104]
  42c6a4:	str	w0, [sp, #100]
  42c6a8:	mov	w22, #0x0                   	// #0
  42c6ac:	b	42c724 <ferror@plt+0x29e54>
  42c6b0:	ldr	x3, [x0, #8]
  42c6b4:	ldr	x2, [x19, #1280]
  42c6b8:	cmp	x3, x2
  42c6bc:	b.eq	42c6e0 <ferror@plt+0x29e10>  // b.none
  42c6c0:	cmp	w22, #0x1
  42c6c4:	b.eq	42c788 <ferror@plt+0x29eb8>  // b.none
  42c6c8:	b.le	42c724 <ferror@plt+0x29e54>
  42c6cc:	cmp	w1, #0x26
  42c6d0:	cset	w3, eq  // eq = none
  42c6d4:	cmp	w22, #0x2
  42c6d8:	cset	w2, eq  // eq = none
  42c6dc:	b	42c674 <ferror@plt+0x29da4>
  42c6e0:	cmp	w22, #0x0
  42c6e4:	b.le	42c708 <ferror@plt+0x29e38>
  42c6e8:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c094>
  42c6ec:	add	x3, x3, #0x128
  42c6f0:	ldr	w2, [x0]
  42c6f4:	mov	w1, #0x3                   	// #3
  42c6f8:	mov	x0, x19
  42c6fc:	bl	41cdd4 <ferror@plt+0x1a504>
  42c700:	ldp	x27, x28, [sp, #80]
  42c704:	b	42c7a4 <ferror@plt+0x29ed4>
  42c708:	add	w22, w22, #0x1
  42c70c:	ldr	w0, [x0]
  42c710:	str	w0, [sp, #148]
  42c714:	b	42c724 <ferror@plt+0x29e54>
  42c718:	cmp	w1, #0x14
  42c71c:	b.ne	42c788 <ferror@plt+0x29eb8>  // b.any
  42c720:	mov	w22, #0x2                   	// #2
  42c724:	mov	x0, #0x0                   	// #0
  42c728:	cbz	x0, 42c270 <ferror@plt+0x299a0>
  42c72c:	ldr	w1, [x20, #12]
  42c730:	cmp	w1, #0x1
  42c734:	b.ls	42c744 <ferror@plt+0x29e74>  // b.plast
  42c738:	ldurb	w1, [x0, #-20]
  42c73c:	cmp	w1, #0x25
  42c740:	b.eq	42c464 <ferror@plt+0x29b94>  // b.none
  42c744:	ldrb	w1, [x0, #4]
  42c748:	cmp	w1, #0x16
  42c74c:	b.eq	42c4fc <ferror@plt+0x29c2c>  // b.none
  42c750:	cmp	w1, #0x26
  42c754:	b.ne	42c638 <ferror@plt+0x29d68>  // b.any
  42c758:	ldr	w1, [x20, #12]
  42c75c:	cmp	w1, #0x1
  42c760:	b.eq	42c5dc <ferror@plt+0x29d0c>  // b.none
  42c764:	cbz	w26, 42c5f8 <ferror@plt+0x29d28>
  42c768:	ldr	w2, [sp, #108]
  42c76c:	add	w2, w2, #0x1
  42c770:	str	w2, [sp, #108]
  42c774:	sub	w1, w1, #0x1
  42c778:	str	w1, [x0, #8]
  42c77c:	cbz	w27, 42c724 <ferror@plt+0x29e54>
  42c780:	ldrb	w1, [x0, #4]
  42c784:	b	42c64c <ferror@plt+0x29d7c>
  42c788:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c094>
  42c78c:	add	x3, x3, #0x158
  42c790:	ldr	w2, [sp, #148]
  42c794:	mov	w1, #0x3                   	// #3
  42c798:	mov	x0, x19
  42c79c:	bl	41cdd4 <ferror@plt+0x1a504>
  42c7a0:	ldp	x27, x28, [sp, #80]
  42c7a4:	strb	wzr, [x19, #22]
  42c7a8:	ldr	w1, [sp, #160]
  42c7ac:	mov	x0, x19
  42c7b0:	bl	42bd30 <ferror@plt+0x29460>
  42c7b4:	mov	x20, #0x0                   	// #0
  42c7b8:	ldp	x21, x22, [sp, #32]
  42c7bc:	ldp	x25, x26, [sp, #64]
  42c7c0:	b	42be1c <ferror@plt+0x2954c>
  42c7c4:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c094>
  42c7c8:	add	x3, x3, #0x190
  42c7cc:	ldr	w2, [x0]
  42c7d0:	mov	w1, #0x3                   	// #3
  42c7d4:	mov	x0, x19
  42c7d8:	bl	41cdd4 <ferror@plt+0x1a504>
  42c7dc:	ldp	x27, x28, [sp, #80]
  42c7e0:	b	42c7a4 <ferror@plt+0x29ed4>
  42c7e4:	ldr	w2, [sp, #100]
  42c7e8:	mov	w22, #0x3                   	// #3
  42c7ec:	b	42c680 <ferror@plt+0x29db0>
  42c7f0:	add	w22, w22, #0x1
  42c7f4:	ldr	w0, [sp, #104]
  42c7f8:	str	w0, [sp, #100]
  42c7fc:	b	42c724 <ferror@plt+0x29e54>
  42c800:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c094>
  42c804:	add	x3, x3, #0x190
  42c808:	ldr	w2, [x0]
  42c80c:	mov	w1, #0x3                   	// #3
  42c810:	mov	x0, x19
  42c814:	bl	41cdd4 <ferror@plt+0x1a504>
  42c818:	ldp	x27, x28, [sp, #80]
  42c81c:	b	42c7a4 <ferror@plt+0x29ed4>
  42c820:	mov	x2, x21
  42c824:	add	x1, x19, #0x38
  42c828:	mov	x0, x19
  42c82c:	bl	42539c <ferror@plt+0x22acc>
  42c830:	b	42c570 <ferror@plt+0x29ca0>
  42c834:	ubfiz	x4, x8, #1, #32
  42c838:	add	x4, x4, w8, uxtw
  42c83c:	add	x4, x1, x4, lsl #3
  42c840:	ldp	x6, x7, [x2]
  42c844:	stp	x6, x7, [x4]
  42c848:	ldr	x2, [x2, #16]
  42c84c:	str	x2, [x4, #16]
  42c850:	add	w8, w8, #0x1
  42c854:	add	w3, w3, #0x1
  42c858:	ldr	w2, [x20, #12]
  42c85c:	cmp	w2, w3
  42c860:	b.eq	42c8a0 <ferror@plt+0x29fd0>  // b.none
  42c864:	ubfiz	x2, x3, #1, #32
  42c868:	add	x2, x2, w3, uxtw
  42c86c:	add	x2, x0, x2, lsl #3
  42c870:	ldrb	w4, [x2, #4]
  42c874:	cmp	w4, #0x26
  42c878:	b.eq	42c834 <ferror@plt+0x29f64>  // b.none
  42c87c:	ubfiz	x4, x5, #1, #32
  42c880:	add	x4, x4, w5, uxtw
  42c884:	add	x4, x0, x4, lsl #3
  42c888:	ldp	x6, x7, [x2]
  42c88c:	stp	x6, x7, [x4]
  42c890:	ldr	x2, [x2, #16]
  42c894:	str	x2, [x4, #16]
  42c898:	add	w5, w5, #0x1
  42c89c:	b	42c854 <ferror@plt+0x29f84>
  42c8a0:	ubfiz	x2, x5, #1, #32
  42c8a4:	add	x5, x2, w5, uxtw
  42c8a8:	mov	x2, x21
  42c8ac:	add	x0, x0, x5, lsl #3
  42c8b0:	bl	402260 <memcpy@plt>
  42c8b4:	ldrb	w0, [x20, #19]
  42c8b8:	orr	w0, w0, #0x40
  42c8bc:	strb	w0, [x20, #19]
  42c8c0:	strb	wzr, [x19, #22]
  42c8c4:	ldr	w1, [sp, #160]
  42c8c8:	mov	x0, x19
  42c8cc:	bl	42bd30 <ferror@plt+0x29460>
  42c8d0:	ldp	x21, x22, [sp, #32]
  42c8d4:	ldp	x25, x26, [sp, #64]
  42c8d8:	ldp	x27, x28, [sp, #80]
  42c8dc:	b	42be1c <ferror@plt+0x2954c>
  42c8e0:	mov	x2, #0x0                   	// #0
  42c8e4:	mov	x1, x23
  42c8e8:	mov	x0, x19
  42c8ec:	bl	42af40 <ferror@plt+0x28670>
  42c8f0:	b	42be30 <ferror@plt+0x29560>
  42c8f4:	ldrb	w0, [x19, #1143]
  42c8f8:	cbz	w0, 42c9c8 <ferror@plt+0x2a0f8>
  42c8fc:	mov	w1, #0xb                   	// #11
  42c900:	b	42c994 <ferror@plt+0x2a0c4>
  42c904:	and	w4, w4, #0x3
  42c908:	cmp	w4, #0x2
  42c90c:	b.eq	42c958 <ferror@plt+0x2a088>  // b.none
  42c910:	ldr	w22, [x21, #12]
  42c914:	ldr	w0, [x20, #12]
  42c918:	cmp	w22, w0
  42c91c:	b.ne	42ca78 <ferror@plt+0x2a1a8>  // b.any
  42c920:	sub	w22, w22, #0x1
  42c924:	cmn	w22, #0x1
  42c928:	b.eq	42cab8 <ferror@plt+0x2a1e8>  // b.none
  42c92c:	mov	w0, w22
  42c930:	add	x0, x0, #0x1
  42c934:	add	x0, x0, x0, lsl #1
  42c938:	lsl	x0, x0, #3
  42c93c:	add	x1, x20, x0
  42c940:	add	x0, x21, x0
  42c944:	bl	424b38 <ferror@plt+0x22268>
  42c948:	sub	w22, w22, #0x1
  42c94c:	cbnz	w0, 42c924 <ferror@plt+0x2a054>
  42c950:	ldp	x21, x22, [sp, #32]
  42c954:	b	42c980 <ferror@plt+0x2a0b0>
  42c958:	mov	x1, x20
  42c95c:	mov	x0, x21
  42c960:	bl	4319c4 <ferror@plt+0x2f0f4>
  42c964:	and	w0, w0, #0xff
  42c968:	cbnz	w0, 42c974 <ferror@plt+0x2a0a4>
  42c96c:	ldp	x21, x22, [sp, #32]
  42c970:	b	42c9c8 <ferror@plt+0x2a0f8>
  42c974:	ldp	x21, x22, [sp, #32]
  42c978:	b	42c980 <ferror@plt+0x2a0b0>
  42c97c:	ldp	x21, x22, [sp, #32]
  42c980:	ldrb	w0, [x23, #18]
  42c984:	and	w0, w0, #0x3
  42c988:	mov	w1, #0x0                   	// #0
  42c98c:	cmp	w0, #0x3
  42c990:	b.eq	42ca80 <ferror@plt+0x2a1b0>  // b.none
  42c994:	ldr	x5, [x23]
  42c998:	adrp	x4, 463000 <_obstack_memory_used@@Base+0x1c094>
  42c99c:	add	x4, x4, #0x1c0
  42c9a0:	mov	w3, #0x0                   	// #0
  42c9a4:	ldr	w2, [x19, #48]
  42c9a8:	mov	x0, x19
  42c9ac:	bl	41ccdc <ferror@plt+0x1a40c>
  42c9b0:	and	w0, w0, #0xff
  42c9b4:	cbz	w0, 42c9c8 <ferror@plt+0x2a0f8>
  42c9b8:	ldrb	w0, [x23, #18]
  42c9bc:	and	w0, w0, #0x3
  42c9c0:	cmp	w0, #0x2
  42c9c4:	b.eq	42ca94 <ferror@plt+0x2a1c4>  // b.none
  42c9c8:	mov	x0, x23
  42c9cc:	bl	42bbec <ferror@plt+0x2931c>
  42c9d0:	ldrb	w0, [x23, #18]
  42c9d4:	mov	w1, #0x2                   	// #2
  42c9d8:	bfxil	w0, w1, #0, #2
  42c9dc:	strb	w0, [x23, #18]
  42c9e0:	str	x20, [x23, #24]
  42c9e4:	ldr	x19, [x23]
  42c9e8:	mov	x2, #0x7                   	// #7
  42c9ec:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  42c9f0:	add	x1, x1, #0x200
  42c9f4:	mov	x0, x19
  42c9f8:	bl	402440 <strncmp@plt>
  42c9fc:	cbnz	w0, 42ca48 <ferror@plt+0x2a178>
  42ca00:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  42ca04:	add	x1, x1, #0x208
  42ca08:	mov	x0, x19
  42ca0c:	bl	402620 <strcmp@plt>
  42ca10:	cbz	w0, 42ca48 <ferror@plt+0x2a178>
  42ca14:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  42ca18:	add	x1, x1, #0x220
  42ca1c:	mov	x0, x19
  42ca20:	bl	402620 <strcmp@plt>
  42ca24:	cbz	w0, 42ca48 <ferror@plt+0x2a178>
  42ca28:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  42ca2c:	add	x1, x1, #0x238
  42ca30:	mov	x0, x19
  42ca34:	bl	402620 <strcmp@plt>
  42ca38:	cbz	w0, 42ca48 <ferror@plt+0x2a178>
  42ca3c:	ldrh	w0, [x23, #18]
  42ca40:	orr	w0, w0, #0x20
  42ca44:	strh	w0, [x23, #18]
  42ca48:	ldrh	w0, [x23, #18]
  42ca4c:	ubfx	x1, x0, #2, #8
  42ca50:	and	w1, w1, #0xffffffbf
  42ca54:	bfi	w0, w1, #2, #8
  42ca58:	strh	w0, [x23, #18]
  42ca5c:	mov	w0, #0x1                   	// #1
  42ca60:	ldp	x19, x20, [sp, #16]
  42ca64:	ldp	x23, x24, [sp, #48]
  42ca68:	ldp	x29, x30, [sp], #240
  42ca6c:	ret
  42ca70:	ldp	x21, x22, [sp, #32]
  42ca74:	b	42c980 <ferror@plt+0x2a0b0>
  42ca78:	ldp	x21, x22, [sp, #32]
  42ca7c:	b	42c980 <ferror@plt+0x2a0b0>
  42ca80:	ldrh	w0, [x23, #18]
  42ca84:	tst	x0, #0x20
  42ca88:	mov	w1, #0xb                   	// #11
  42ca8c:	csel	w1, w1, wzr, eq  // eq = none
  42ca90:	b	42c994 <ferror@plt+0x2a0c4>
  42ca94:	ldr	x0, [x23, #24]
  42ca98:	adrp	x4, 463000 <_obstack_memory_used@@Base+0x1c094>
  42ca9c:	add	x4, x4, #0x1d0
  42caa0:	mov	w3, #0x0                   	// #0
  42caa4:	ldr	w2, [x0, #8]
  42caa8:	mov	w1, #0x5                   	// #5
  42caac:	mov	x0, x19
  42cab0:	bl	41cbe8 <ferror@plt+0x1a318>
  42cab4:	b	42c9c8 <ferror@plt+0x2a0f8>
  42cab8:	ldp	x21, x22, [sp, #32]
  42cabc:	b	42c9c8 <ferror@plt+0x2a0f8>
  42cac0:	mov	w0, #0x0                   	// #0
  42cac4:	b	42ca60 <ferror@plt+0x2a190>
  42cac8:	mov	w0, #0x1                   	// #1
  42cacc:	str	w0, [sp, #100]
  42cad0:	b	42c724 <ferror@plt+0x29e54>
  42cad4:	ldr	w0, [sp, #104]
  42cad8:	str	w0, [sp, #100]
  42cadc:	b	42c724 <ferror@plt+0x29e54>
  42cae0:	ldr	w0, [sp, #104]
  42cae4:	str	w0, [sp, #100]
  42cae8:	b	42c724 <ferror@plt+0x29e54>
  42caec:	str	x21, [sp, #112]
  42caf0:	b	42cafc <ferror@plt+0x2a22c>
  42caf4:	str	x21, [sp, #112]
  42caf8:	mov	x21, x24
  42cafc:	ldr	x0, [sp, #112]
  42cb00:	sub	x1, x21, x0
  42cb04:	str	w1, [sp, #144]
  42cb08:	ldrh	w28, [x20, #16]
  42cb0c:	cbz	w28, 42c2ec <ferror@plt+0x29a1c>
  42cb10:	ldr	x0, [x20]
  42cb14:	str	x0, [sp, #128]
  42cb18:	mov	x25, #0x0                   	// #0
  42cb1c:	and	x0, x1, #0xffffffff
  42cb20:	str	x0, [sp, #136]
  42cb24:	b	42c408 <ferror@plt+0x29b38>
  42cb28:	mov	x21, x24
  42cb2c:	str	x21, [sp, #112]
  42cb30:	b	42cafc <ferror@plt+0x2a22c>
  42cb34:	stp	x27, x28, [sp, #80]
  42cb38:	ldr	x0, [x19, #56]
  42cb3c:	ldr	x2, [x0, #16]
  42cb40:	ldr	x0, [x0, #24]
  42cb44:	sub	x0, x0, x2
  42cb48:	cmp	x0, #0x2f
  42cb4c:	b.ls	42cc78 <ferror@plt+0x2a3a8>  // b.plast
  42cb50:	mov	w1, #0x0                   	// #0
  42cb54:	mov	x0, x19
  42cb58:	bl	42bd78 <ferror@plt+0x294a8>
  42cb5c:	mov	x20, x0
  42cb60:	add	x0, x20, #0x18
  42cb64:	ldp	x2, x3, [x21]
  42cb68:	stp	x2, x3, [x20, #24]
  42cb6c:	ldr	x1, [x21, #16]
  42cb70:	str	x1, [x0, #16]
  42cb74:	mov	w1, #0x1                   	// #1
  42cb78:	str	w1, [x20, #12]
  42cb7c:	str	wzr, [sp, #160]
  42cb80:	ldrb	w27, [x20, #19]
  42cb84:	and	w27, w27, #0x8
  42cb88:	ldr	w1, [sp, #104]
  42cb8c:	str	w1, [sp, #100]
  42cb90:	str	wzr, [sp, #148]
  42cb94:	mov	w22, #0x0                   	// #0
  42cb98:	str	wzr, [sp, #108]
  42cb9c:	mov	w26, #0x0                   	// #0
  42cba0:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1f094>
  42cba4:	add	x1, x1, #0xa68
  42cba8:	str	x1, [sp, #120]
  42cbac:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  42cbb0:	add	x1, x1, #0x68
  42cbb4:	str	x1, [sp, #168]
  42cbb8:	b	42c728 <ferror@plt+0x29e58>
  42cbbc:	stp	x27, x28, [sp, #80]
  42cbc0:	ldr	x0, [sp, #160]
  42cbc4:	ubfiz	x1, x0, #3, #32
  42cbc8:	mov	x0, x19
  42cbcc:	bl	427f00 <ferror@plt+0x25630>
  42cbd0:	mov	x22, x0
  42cbd4:	ldr	x0, [x19, #56]
  42cbd8:	ldr	x2, [x0, #16]
  42cbdc:	ldr	x0, [x0, #24]
  42cbe0:	sub	x0, x0, x2
  42cbe4:	cmp	x0, #0x2f
  42cbe8:	b.ls	42cc4c <ferror@plt+0x2a37c>  // b.plast
  42cbec:	mov	w1, #0x0                   	// #0
  42cbf0:	mov	x0, x19
  42cbf4:	bl	42bd78 <ferror@plt+0x294a8>
  42cbf8:	mov	x20, x0
  42cbfc:	ldrb	w1, [x20, #19]
  42cc00:	bfi	w1, w21, #3, #1
  42cc04:	ldrh	w0, [sp, #160]
  42cc08:	strh	w0, [x20, #16]
  42cc0c:	str	x22, [x20]
  42cc10:	orr	w1, w1, #0x4
  42cc14:	strb	w1, [x20, #19]
  42cc18:	mov	x0, #0x0                   	// #0
  42cc1c:	b	42cb80 <ferror@plt+0x2a2b0>
  42cc20:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1c094>
  42cc24:	add	x0, x0, #0x460
  42cc28:	ldp	x2, x3, [x0, #96]
  42cc2c:	stp	x2, x3, [sp, #200]
  42cc30:	ldp	x2, x3, [x0, #112]
  42cc34:	stp	x2, x3, [sp, #216]
  42cc38:	ldr	x0, [x0, #128]
  42cc3c:	str	x0, [sp, #232]
  42cc40:	mov	x3, #0x0                   	// #0
  42cc44:	mov	w21, #0x4                   	// #4
  42cc48:	b	42c004 <ferror@plt+0x29734>
  42cc4c:	mov	x2, #0x30                  	// #48
  42cc50:	add	x1, x19, #0x38
  42cc54:	mov	x0, x19
  42cc58:	bl	42539c <ferror@plt+0x22acc>
  42cc5c:	ldr	x0, [x19, #56]
  42cc60:	ldr	x2, [x0, #16]
  42cc64:	mov	w1, #0x0                   	// #0
  42cc68:	mov	x0, x19
  42cc6c:	bl	42bd78 <ferror@plt+0x294a8>
  42cc70:	mov	x20, x0
  42cc74:	b	42cbfc <ferror@plt+0x2a32c>
  42cc78:	mov	x2, #0x30                  	// #48
  42cc7c:	add	x1, x19, #0x38
  42cc80:	mov	x0, x19
  42cc84:	bl	42539c <ferror@plt+0x22acc>
  42cc88:	ldr	x0, [x19, #56]
  42cc8c:	ldr	x2, [x0, #16]
  42cc90:	mov	w1, #0x0                   	// #0
  42cc94:	mov	x0, x19
  42cc98:	bl	42bd78 <ferror@plt+0x294a8>
  42cc9c:	mov	x20, x0
  42cca0:	b	42cb60 <ferror@plt+0x2a290>
  42cca4:	ldr	x0, [x1, #24]
  42cca8:	add	w2, w2, #0x1
  42ccac:	strb	w2, [x0, #18]
  42ccb0:	ret
  42ccb4:	stp	x29, x30, [sp, #-48]!
  42ccb8:	mov	x29, sp
  42ccbc:	stp	x19, x20, [sp, #16]
  42ccc0:	mov	x20, x0
  42ccc4:	mov	x19, x1
  42ccc8:	ldrh	w2, [x1, #18]
  42cccc:	orr	w2, w2, #0x80
  42ccd0:	strh	w2, [x1, #18]
  42ccd4:	and	w2, w2, #0x3
  42ccd8:	cmp	w2, #0x2
  42ccdc:	b.eq	42cd08 <ferror@plt+0x2a438>  // b.none
  42cce0:	cmp	w2, #0x3
  42cce4:	b.eq	42cd30 <ferror@plt+0x2a460>  // b.none
  42cce8:	cbz	w2, 42cd5c <ferror@plt+0x2a48c>
  42ccec:	str	x21, [sp, #32]
  42ccf0:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c094>
  42ccf4:	add	x2, x2, #0x250
  42ccf8:	mov	w1, #0xe0b                 	// #3595
  42ccfc:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b094>
  42cd00:	add	x0, x0, #0xb98
  42cd04:	bl	4062a0 <ferror@plt+0x39d0>
  42cd08:	str	x21, [sp, #32]
  42cd0c:	ldr	x21, [x1, #24]
  42cd10:	ldrb	w2, [x21, #18]
  42cd14:	cbz	w2, 42cd54 <ferror@plt+0x2a484>
  42cd18:	ldr	x3, [x0, #1048]
  42cd1c:	sub	w2, w2, #0x1
  42cd20:	mov	x1, x21
  42cd24:	blr	x3
  42cd28:	strb	wzr, [x21, #18]
  42cd2c:	ldr	x21, [sp, #32]
  42cd30:	ldr	x3, [x20, #1008]
  42cd34:	cbz	x3, 42cd48 <ferror@plt+0x2a478>
  42cd38:	mov	x2, x19
  42cd3c:	ldr	w1, [x20, #48]
  42cd40:	mov	x0, x20
  42cd44:	blr	x3
  42cd48:	ldp	x19, x20, [sp, #16]
  42cd4c:	ldp	x29, x30, [sp], #48
  42cd50:	ret
  42cd54:	ldr	x21, [sp, #32]
  42cd58:	b	42cd30 <ferror@plt+0x2a460>
  42cd5c:	ldr	x3, [x0, #1016]
  42cd60:	cbz	x3, 42cd48 <ferror@plt+0x2a478>
  42cd64:	mov	x2, x1
  42cd68:	ldr	w1, [x0, #48]
  42cd6c:	blr	x3
  42cd70:	b	42cd48 <ferror@plt+0x2a478>
  42cd74:	stp	x29, x30, [sp, #-288]!
  42cd78:	mov	x29, sp
  42cd7c:	stp	x25, x26, [sp, #64]
  42cd80:	stp	x27, x28, [sp, #80]
  42cd84:	mov	x26, x0
  42cd88:	mov	x28, x1
  42cd8c:	str	x2, [sp, #104]
  42cd90:	str	w3, [sp, #100]
  42cd94:	strb	wzr, [x0, #440]
  42cd98:	strb	wzr, [x0, #19]
  42cd9c:	mov	w0, #0x1                   	// #1
  42cda0:	strb	w0, [x26, #192]
  42cda4:	ldrb	w0, [x1, #18]
  42cda8:	and	w0, w0, #0x3
  42cdac:	cmp	w0, #0x2
  42cdb0:	b.eq	42cdf0 <ferror@plt+0x2a520>  // b.none
  42cdb4:	strb	wzr, [x26, #192]
  42cdb8:	ldr	x1, [x26, #184]
  42cdbc:	ldrb	w0, [x1, #18]
  42cdc0:	and	w0, w0, #0x3
  42cdc4:	cmp	w0, #0x2
  42cdc8:	b.eq	42e170 <ferror@plt+0x2b8a0>  // b.none
  42cdcc:	ldr	w3, [x26, #176]
  42cdd0:	ldr	w2, [sp, #100]
  42cdd4:	mov	x1, x28
  42cdd8:	mov	x0, x26
  42cddc:	bl	42b5dc <ferror@plt+0x28d0c>
  42cde0:	ldp	x25, x26, [sp, #64]
  42cde4:	ldp	x27, x28, [sp, #80]
  42cde8:	ldp	x29, x30, [sp], #288
  42cdec:	ret
  42cdf0:	stp	x19, x20, [sp, #16]
  42cdf4:	stp	x21, x22, [sp, #32]
  42cdf8:	ldr	x0, [x1, #24]
  42cdfc:	str	x0, [sp, #112]
  42ce00:	ldrb	w0, [x0, #19]
  42ce04:	mov	x27, #0x0                   	// #0
  42ce08:	tbnz	w0, #2, 42ce84 <ferror@plt+0x2a5b4>
  42ce0c:	ldrh	w0, [x28, #18]
  42ce10:	ubfx	x1, x0, #2, #8
  42ce14:	orr	w2, w1, #0x10
  42ce18:	bfi	w0, w2, #2, #8
  42ce1c:	strh	w0, [x28, #18]
  42ce20:	tbz	w1, #5, 42df84 <ferror@plt+0x2b6b4>
  42ce24:	ldr	x3, [x26, #1032]
  42ce28:	cbz	x3, 42ce3c <ferror@plt+0x2a56c>
  42ce2c:	mov	x2, x28
  42ce30:	ldr	w1, [sp, #100]
  42ce34:	mov	x0, x26
  42ce38:	blr	x3
  42ce3c:	ldr	x1, [sp, #112]
  42ce40:	ldrb	w0, [x1, #19]
  42ce44:	orr	w0, w0, #0x20
  42ce48:	strb	w0, [x1, #19]
  42ce4c:	ldrh	w0, [x1, #16]
  42ce50:	cbnz	w0, 42e0ac <ferror@plt+0x2b7dc>
  42ce54:	ldrb	w0, [x1, #19]
  42ce58:	tbnz	w0, #6, 42df94 <ferror@plt+0x2b6c4>
  42ce5c:	ldr	w21, [x1, #12]
  42ce60:	ldrb	w0, [x26, #1157]
  42ce64:	cbnz	w0, 42e008 <ferror@plt+0x2b738>
  42ce68:	mov	w3, w21
  42ce6c:	ldr	x0, [sp, #112]
  42ce70:	add	x2, x0, #0x18
  42ce74:	mov	x1, x28
  42ce78:	mov	x0, x26
  42ce7c:	bl	42b56c <ferror@plt+0x28c9c>
  42ce80:	b	42e09c <ferror@plt+0x2b7cc>
  42ce84:	ldrb	w0, [x26, #24]
  42ce88:	add	w0, w0, #0x1
  42ce8c:	strb	w0, [x26, #24]
  42ce90:	ldr	w0, [x26, #500]
  42ce94:	add	w0, w0, #0x1
  42ce98:	str	w0, [x26, #500]
  42ce9c:	mov	w0, #0x1                   	// #1
  42cea0:	strb	w0, [x26, #25]
  42cea4:	mov	x19, #0x0                   	// #0
  42cea8:	b	42cec0 <ferror@plt+0x2a5f0>
  42ceac:	mov	x19, x0
  42ceb0:	b	42cec0 <ferror@plt+0x2a5f0>
  42ceb4:	ldr	x1, [x0, #8]
  42ceb8:	cmp	x1, #0x0
  42cebc:	csel	x19, x19, x0, ne  // ne = any
  42cec0:	mov	x0, x26
  42cec4:	bl	42ea88 <ferror@plt+0x2c1b8>
  42cec8:	ldrb	w1, [x0, #4]
  42cecc:	cmp	w1, #0x53
  42ced0:	b.ne	42cee4 <ferror@plt+0x2a614>  // b.any
  42ced4:	cbz	x19, 42ceac <ferror@plt+0x2a5dc>
  42ced8:	ldrh	w1, [x19, #6]
  42cedc:	tbnz	w1, #0, 42cec0 <ferror@plt+0x2a5f0>
  42cee0:	b	42ceb4 <ferror@plt+0x2a5e4>
  42cee4:	cmp	w1, #0x14
  42cee8:	b.eq	42cf74 <ferror@plt+0x2a6a4>  // b.none
  42ceec:	cmp	w1, #0x16
  42cef0:	b.ne	42cf00 <ferror@plt+0x2a630>  // b.any
  42cef4:	add	x1, x26, #0x2b0
  42cef8:	cmp	x0, x1
  42cefc:	b.ne	42cf24 <ferror@plt+0x2a654>  // b.any
  42cf00:	mov	w1, #0x1                   	// #1
  42cf04:	mov	x0, x26
  42cf08:	bl	42b95c <ferror@plt+0x2908c>
  42cf0c:	cbz	x19, 42cf24 <ferror@plt+0x2a654>
  42cf10:	mov	w3, #0x1                   	// #1
  42cf14:	mov	x2, x19
  42cf18:	mov	x1, #0x0                   	// #0
  42cf1c:	mov	x0, x26
  42cf20:	bl	42b56c <ferror@plt+0x28c9c>
  42cf24:	strb	wzr, [x26, #25]
  42cf28:	ldr	w0, [x26, #500]
  42cf2c:	sub	w0, w0, #0x1
  42cf30:	str	w0, [x26, #500]
  42cf34:	ldrb	w0, [x26, #24]
  42cf38:	sub	w0, w0, #0x1
  42cf3c:	strb	w0, [x26, #24]
  42cf40:	ldrb	w0, [x26, #1138]
  42cf44:	mov	x27, #0x0                   	// #0
  42cf48:	cbz	w0, 42d3fc <ferror@plt+0x2ab2c>
  42cf4c:	ldr	x0, [x28, #24]
  42cf50:	ldrb	w0, [x0, #19]
  42cf54:	tbnz	w0, #4, 42d3ec <ferror@plt+0x2ab1c>
  42cf58:	ldr	x3, [x28]
  42cf5c:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c094>
  42cf60:	add	x2, x2, #0x298
  42cf64:	mov	w1, #0x6                   	// #6
  42cf68:	mov	x0, x26
  42cf6c:	bl	41ca74 <ferror@plt+0x1a1a4>
  42cf70:	b	42d3ec <ferror@plt+0x2ab1c>
  42cf74:	stp	x23, x24, [sp, #48]
  42cf78:	mov	w0, #0x2                   	// #2
  42cf7c:	strb	w0, [x26, #25]
  42cf80:	ldrb	w25, [x26, #1157]
  42cf84:	ldr	x0, [x28, #24]
  42cf88:	str	x0, [sp, #120]
  42cf8c:	ldrh	w1, [x0, #16]
  42cf90:	ldrh	w0, [x0, #16]
  42cf94:	cmp	w1, #0x0
  42cf98:	csinc	w0, w0, wzr, ne  // ne = any
  42cf9c:	and	x19, x0, #0xffff
  42cfa0:	ubfiz	x0, x0, #3, #16
  42cfa4:	sub	x1, x0, x19
  42cfa8:	lsl	x1, x1, #6
  42cfac:	mov	x0, x26
  42cfb0:	bl	4251d4 <ferror@plt+0x22904>
  42cfb4:	mov	x20, x0
  42cfb8:	str	x0, [sp, #136]
  42cfbc:	ldr	x21, [x0, #8]
  42cfc0:	str	x21, [sp, #152]
  42cfc4:	add	x19, x19, x19, lsl #1
  42cfc8:	lsl	x19, x19, #4
  42cfcc:	mov	x2, x19
  42cfd0:	mov	w1, #0x0                   	// #0
  42cfd4:	mov	x0, x21
  42cfd8:	bl	402490 <memset@plt>
  42cfdc:	add	x19, x21, x19
  42cfe0:	str	x19, [x20, #16]
  42cfe4:	mov	x22, x20
  42cfe8:	mov	x27, #0x0                   	// #0
  42cfec:	str	wzr, [sp, #128]
  42cff0:	str	x28, [sp, #144]
  42cff4:	b	42d280 <ferror@plt+0x2a9b0>
  42cff8:	mov	x0, #0xc8                  	// #200
  42cffc:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  42d000:	str	x0, [x21, #32]
  42d004:	b	42d29c <ferror@plt+0x2a9cc>
  42d008:	mov	x2, x28
  42d00c:	mov	x1, x22
  42d010:	mov	x0, x26
  42d014:	bl	42527c <ferror@plt+0x229ac>
  42d018:	mov	x22, x0
  42d01c:	ldr	x0, [x0, #16]
  42d020:	str	x0, [x21]
  42d024:	b	42d088 <ferror@plt+0x2a7b8>
  42d028:	add	w24, w24, #0x3e8
  42d02c:	ubfiz	x1, x24, #2, #32
  42d030:	ldr	x0, [x21, #32]
  42d034:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  42d038:	str	x0, [x21, #32]
  42d03c:	b	42d094 <ferror@plt+0x2a7c4>
  42d040:	cbz	w20, 42d06c <ferror@plt+0x2a79c>
  42d044:	ldrb	w0, [x26, #1157]
  42d048:	cmp	w0, #0x0
  42d04c:	cset	w5, ne  // ne = any
  42d050:	mov	w4, #0x0                   	// #0
  42d054:	mov	w3, w20
  42d058:	ldr	w2, [sp, #264]
  42d05c:	mov	x1, x19
  42d060:	mov	x0, x21
  42d064:	bl	42abd8 <ferror@plt+0x28308>
  42d068:	add	w20, w20, #0x1
  42d06c:	add	w19, w20, #0x2
  42d070:	add	w0, w20, #0x2
  42d074:	ldr	x1, [x21]
  42d078:	add	x0, x1, x0, lsl #3
  42d07c:	ldr	x1, [x22, #24]
  42d080:	cmp	x1, x0
  42d084:	b.cc	42d008 <ferror@plt+0x2a738>  // b.lo, b.ul, b.last
  42d088:	cmp	w25, #0x0
  42d08c:	ccmp	w19, w24, #0x0, ne  // ne = any
  42d090:	b.hi	42d028 <ferror@plt+0x2a758>  // b.pmore
  42d094:	add	x1, sp, #0x108
  42d098:	mov	x0, x26
  42d09c:	bl	42e5b4 <ferror@plt+0x2bce4>
  42d0a0:	mov	x19, x0
  42d0a4:	ldrb	w0, [x0, #4]
  42d0a8:	cmp	w0, #0x53
  42d0ac:	b.eq	42d040 <ferror@plt+0x2a770>  // b.none
  42d0b0:	cmp	w0, #0x14
  42d0b4:	b.eq	42d100 <ferror@plt+0x2a830>  // b.none
  42d0b8:	cmp	w0, #0x15
  42d0bc:	b.eq	42d108 <ferror@plt+0x2a838>  // b.none
  42d0c0:	cmp	w0, #0x13
  42d0c4:	b.eq	42d118 <ferror@plt+0x2a848>  // b.none
  42d0c8:	cmp	w0, #0x16
  42d0cc:	b.eq	42d1f4 <ferror@plt+0x2a924>  // b.none
  42d0d0:	cmp	w0, #0x25
  42d0d4:	b.eq	42d13c <ferror@plt+0x2a86c>  // b.none
  42d0d8:	cmp	w0, #0x51
  42d0dc:	b.ne	42d044 <ferror@plt+0x2a774>  // b.any
  42d0e0:	mov	x0, x26
  42d0e4:	bl	4244e0 <ferror@plt+0x21c10>
  42d0e8:	ldp	x2, x3, [x19]
  42d0ec:	stp	x2, x3, [x0]
  42d0f0:	ldr	x1, [x19, #16]
  42d0f4:	str	x1, [x0, #16]
  42d0f8:	mov	x19, x0
  42d0fc:	b	42d1b4 <ferror@plt+0x2a8e4>
  42d100:	add	w23, w23, #0x1
  42d104:	b	42d044 <ferror@plt+0x2a774>
  42d108:	sub	w0, w23, #0x1
  42d10c:	cbz	w23, 42d1f4 <ferror@plt+0x2a924>
  42d110:	mov	w23, w0
  42d114:	b	42d044 <ferror@plt+0x2a774>
  42d118:	cbnz	w23, 42d044 <ferror@plt+0x2a774>
  42d11c:	ldr	x1, [sp, #120]
  42d120:	ldrb	w0, [x1, #19]
  42d124:	tbz	w0, #3, 42d1f4 <ferror@plt+0x2a924>
  42d128:	ldrh	w0, [x1, #16]
  42d12c:	ldr	w1, [sp, #128]
  42d130:	cmp	w1, w0
  42d134:	b.eq	42d044 <ferror@plt+0x2a774>  // b.none
  42d138:	b	42d1f4 <ferror@plt+0x2a924>
  42d13c:	ldrh	w0, [x19, #6]
  42d140:	tbz	w0, #6, 42d044 <ferror@plt+0x2a774>
  42d144:	b	42d1f4 <ferror@plt+0x2a924>
  42d148:	mov	x1, #0x100                 	// #256
  42d14c:	mov	x0, x26
  42d150:	bl	4251d4 <ferror@plt+0x22904>
  42d154:	mov	x27, x0
  42d158:	b	42d178 <ferror@plt+0x2a8a8>
  42d15c:	ldr	x0, [x27, #8]
  42d160:	sub	x1, x1, x0
  42d164:	lsl	x1, x1, #1
  42d168:	mov	x0, x26
  42d16c:	bl	4251d4 <ferror@plt+0x22904>
  42d170:	str	x27, [x0]
  42d174:	mov	x27, x0
  42d178:	ldr	x0, [x27, #16]
  42d17c:	str	x19, [x0]
  42d180:	ldr	x0, [x27, #16]
  42d184:	add	x0, x0, #0x8
  42d188:	str	x0, [x27, #16]
  42d18c:	ldrb	w0, [x19, #4]
  42d190:	cmp	w0, #0x52
  42d194:	b.eq	42d1d0 <ferror@plt+0x2a900>  // b.none
  42d198:	add	x1, sp, #0x108
  42d19c:	mov	x0, x26
  42d1a0:	bl	42e5b4 <ferror@plt+0x2bce4>
  42d1a4:	mov	x19, x0
  42d1a8:	ldrb	w0, [x0, #4]
  42d1ac:	cmp	w0, #0x16
  42d1b0:	b.eq	42d1d0 <ferror@plt+0x2a900>  // b.none
  42d1b4:	cbz	x27, 42d148 <ferror@plt+0x2a878>
  42d1b8:	ldr	x1, [x27, #16]
  42d1bc:	ldr	x0, [x27, #24]
  42d1c0:	sub	x0, x0, x1
  42d1c4:	cmp	x0, #0x7
  42d1c8:	b.ls	42d15c <ferror@plt+0x2a88c>  // b.plast
  42d1cc:	b	42d178 <ferror@plt+0x2a8a8>
  42d1d0:	mov	w0, #0x2                   	// #2
  42d1d4:	strb	w0, [x26, #25]
  42d1d8:	mov	w0, #0x1                   	// #1
  42d1dc:	strb	w0, [x26, #24]
  42d1e0:	ldrb	w0, [x19, #4]
  42d1e4:	cmp	w0, #0x16
  42d1e8:	b.eq	42d1f4 <ferror@plt+0x2a924>  // b.none
  42d1ec:	b	42d06c <ferror@plt+0x2a79c>
  42d1f0:	mov	w20, w0
  42d1f4:	cbz	w20, 42d210 <ferror@plt+0x2a940>
  42d1f8:	sub	w0, w20, #0x1
  42d1fc:	ldr	x1, [x21]
  42d200:	ldr	x1, [x1, w0, uxtw #3]
  42d204:	ldrb	w1, [x1, #4]
  42d208:	cmp	w1, #0x53
  42d20c:	b.eq	42d1f0 <ferror@plt+0x2a920>  // b.none
  42d210:	str	w20, [x21, #24]
  42d214:	ldrb	w0, [x26, #1157]
  42d218:	cmp	w0, #0x0
  42d21c:	cset	w5, ne  // ne = any
  42d220:	mov	w4, #0x0                   	// #0
  42d224:	mov	w3, w20
  42d228:	ldr	w2, [x26, #688]
  42d22c:	add	x1, x26, #0x2b0
  42d230:	mov	x0, x21
  42d234:	bl	42abd8 <ferror@plt+0x28308>
  42d238:	ldr	x1, [sp, #120]
  42d23c:	ldrh	w0, [x1, #16]
  42d240:	ldr	w2, [sp, #128]
  42d244:	cmp	w2, w0
  42d248:	b.hi	42d26c <ferror@plt+0x2a99c>  // b.pmore
  42d24c:	add	w20, w20, #0x1
  42d250:	ldr	x0, [x21]
  42d254:	add	x20, x0, x20, lsl #3
  42d258:	str	x20, [x22, #16]
  42d25c:	ldrh	w1, [x1, #16]
  42d260:	add	x0, x21, #0x30
  42d264:	cmp	w2, w1
  42d268:	csel	x21, x0, x21, ne  // ne = any
  42d26c:	ldrb	w1, [x19, #4]
  42d270:	sub	w0, w1, #0x15
  42d274:	and	w0, w0, #0xff
  42d278:	cmp	w0, #0x1
  42d27c:	b.ls	42d2b0 <ferror@plt+0x2a9e0>  // b.plast
  42d280:	ldr	w0, [sp, #128]
  42d284:	str	w0, [sp, #132]
  42d288:	add	w0, w0, #0x1
  42d28c:	str	w0, [sp, #128]
  42d290:	ldr	x0, [x22, #16]
  42d294:	str	x0, [x21]
  42d298:	cbnz	w25, 42cff8 <ferror@plt+0x2a728>
  42d29c:	mov	w24, #0x32                  	// #50
  42d2a0:	mov	w20, #0x0                   	// #0
  42d2a4:	mov	w23, #0x0                   	// #0
  42d2a8:	mov	x28, #0x1f40                	// #8000
  42d2ac:	b	42d06c <ferror@plt+0x2a79c>
  42d2b0:	ldr	x28, [sp, #144]
  42d2b4:	cmp	w1, #0x16
  42d2b8:	b.eq	42d388 <ferror@plt+0x2aab8>  // b.none
  42d2bc:	ldr	w0, [sp, #128]
  42d2c0:	mov	w19, w0
  42d2c4:	cmp	w0, #0x1
  42d2c8:	b.eq	42d41c <ferror@plt+0x2ab4c>  // b.none
  42d2cc:	mov	w3, w19
  42d2d0:	mov	x2, x28
  42d2d4:	ldr	x20, [sp, #120]
  42d2d8:	mov	x1, x20
  42d2dc:	mov	x0, x26
  42d2e0:	bl	42b450 <ferror@plt+0x28b80>
  42d2e4:	ands	w0, w0, #0xff
  42d2e8:	str	w0, [sp, #200]
  42d2ec:	b.eq	42d3b8 <ferror@plt+0x2aae8>  // b.none
  42d2f0:	ldrb	w0, [x20, #19]
  42d2f4:	tbz	w0, #3, 42d334 <ferror@plt+0x2aa64>
  42d2f8:	ldrh	w0, [x20, #16]
  42d2fc:	cmp	w19, w0
  42d300:	b.cc	42d320 <ferror@plt+0x2aa50>  // b.lo, b.ul, b.last
  42d304:	cmp	w19, #0x1
  42d308:	b.ne	42d334 <ferror@plt+0x2aa64>  // b.any
  42d30c:	ldr	x1, [sp, #152]
  42d310:	ldr	w1, [x1, #24]
  42d314:	cbnz	w1, 42d334 <ferror@plt+0x2aa64>
  42d318:	ldrb	w1, [x26, #1153]
  42d31c:	cbnz	w1, 42d334 <ferror@plt+0x2aa64>
  42d320:	ubfiz	x1, x0, #1, #16
  42d324:	add	x0, x1, w0, uxth
  42d328:	ldr	x1, [sp, #152]
  42d32c:	add	x0, x1, x0, lsl #4
  42d330:	stur	xzr, [x0, #-48]
  42d334:	strb	wzr, [x26, #25]
  42d338:	ldr	w0, [x26, #500]
  42d33c:	sub	w0, w0, #0x1
  42d340:	str	w0, [x26, #500]
  42d344:	ldrb	w0, [x26, #24]
  42d348:	sub	w0, w0, #0x1
  42d34c:	strb	w0, [x26, #24]
  42d350:	ldr	x0, [sp, #112]
  42d354:	ldrh	w0, [x0, #16]
  42d358:	cbnz	w0, 42d448 <ferror@plt+0x2ab78>
  42d35c:	ldr	x0, [sp, #136]
  42d360:	ldr	x0, [x0, #8]
  42d364:	ldr	w1, [sp, #128]
  42d368:	cbz	w1, 42df74 <ferror@plt+0x2b6a4>
  42d36c:	add	x19, x0, #0x8
  42d370:	ldr	w1, [sp, #132]
  42d374:	ubfiz	x21, x1, #1, #32
  42d378:	add	x21, x21, w1, uxtw
  42d37c:	add	x0, x0, #0x38
  42d380:	add	x21, x0, x21, lsl #4
  42d384:	b	42df3c <ferror@plt+0x2b66c>
  42d388:	ldr	x0, [x26, #136]
  42d38c:	ldr	x0, [x0, #8]
  42d390:	cbz	x0, 42d410 <ferror@plt+0x2ab40>
  42d394:	mov	w1, #0x1                   	// #1
  42d398:	mov	x0, x26
  42d39c:	bl	42b95c <ferror@plt+0x2908c>
  42d3a0:	ldr	x3, [x28]
  42d3a4:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c094>
  42d3a8:	add	x2, x2, #0x268
  42d3ac:	mov	w1, #0x3                   	// #3
  42d3b0:	mov	x0, x26
  42d3b4:	bl	41c9fc <ferror@plt+0x1a12c>
  42d3b8:	ldr	x1, [sp, #136]
  42d3bc:	mov	x0, x26
  42d3c0:	bl	4251b4 <ferror@plt+0x228e4>
  42d3c4:	strb	wzr, [x26, #25]
  42d3c8:	ldr	w0, [x26, #500]
  42d3cc:	sub	w0, w0, #0x1
  42d3d0:	str	w0, [x26, #500]
  42d3d4:	ldrb	w0, [x26, #24]
  42d3d8:	sub	w0, w0, #0x1
  42d3dc:	strb	w0, [x26, #24]
  42d3e0:	ldrb	w0, [x26, #1138]
  42d3e4:	cbnz	w0, 42d440 <ferror@plt+0x2ab70>
  42d3e8:	ldp	x23, x24, [sp, #48]
  42d3ec:	cbz	x27, 42d3fc <ferror@plt+0x2ab2c>
  42d3f0:	mov	x1, x27
  42d3f4:	mov	x0, x26
  42d3f8:	bl	4251b4 <ferror@plt+0x228e4>
  42d3fc:	strb	wzr, [x26, #192]
  42d400:	mov	w0, #0x0                   	// #0
  42d404:	ldp	x19, x20, [sp, #16]
  42d408:	ldp	x21, x22, [sp, #32]
  42d40c:	b	42cde0 <ferror@plt+0x2a510>
  42d410:	ldrb	w0, [x26, #16]
  42d414:	cbz	w0, 42d3a0 <ferror@plt+0x2aad0>
  42d418:	b	42d394 <ferror@plt+0x2aac4>
  42d41c:	ldr	x0, [sp, #120]
  42d420:	ldrh	w0, [x0, #16]
  42d424:	ldr	w19, [sp, #128]
  42d428:	cbnz	w0, 42d2cc <ferror@plt+0x2a9fc>
  42d42c:	ldr	x0, [sp, #152]
  42d430:	ldr	w0, [x0, #24]
  42d434:	cmp	w0, #0x0
  42d438:	cset	w19, ne  // ne = any
  42d43c:	b	42d2cc <ferror@plt+0x2a9fc>
  42d440:	ldp	x23, x24, [sp, #48]
  42d444:	b	42cf4c <ferror@plt+0x2a67c>
  42d448:	ldr	x0, [sp, #136]
  42d44c:	ldr	x0, [x0, #8]
  42d450:	str	x0, [sp, #144]
  42d454:	str	xzr, [sp, #256]
  42d458:	ldr	x1, [sp, #112]
  42d45c:	ldrb	w0, [x1, #19]
  42d460:	tbnz	w0, #6, 42d4a4 <ferror@plt+0x2abd4>
  42d464:	ldr	w19, [x1, #12]
  42d468:	ldr	x0, [sp, #112]
  42d46c:	add	x25, x0, #0x18
  42d470:	str	x25, [sp, #120]
  42d474:	ubfiz	x0, x19, #1, #32
  42d478:	add	x0, x0, w19, uxtw
  42d47c:	add	x24, x25, x0, lsl #3
  42d480:	cmp	x25, x24
  42d484:	b.cs	42d9b0 <ferror@plt+0x2b0e0>  // b.hs, b.nlast
  42d488:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1c094>
  42d48c:	add	x0, x0, #0x2e0
  42d490:	str	x0, [sp, #192]
  42d494:	str	x27, [sp, #168]
  42d498:	str	x28, [sp, #176]
  42d49c:	mov	w28, w19
  42d4a0:	b	42d73c <ferror@plt+0x2ae6c>
  42d4a4:	ldr	x2, [sp, #112]
  42d4a8:	ldr	w1, [x2, #12]
  42d4ac:	mov	w19, w1
  42d4b0:	sub	w1, w1, #0x1
  42d4b4:	cbz	w19, 42e504 <ferror@plt+0x2bc34>
  42d4b8:	ubfiz	x0, x1, #1, #32
  42d4bc:	add	x0, x0, w1, uxtw
  42d4c0:	add	x0, x2, x0, lsl #3
  42d4c4:	ldrb	w0, [x0, #28]
  42d4c8:	cmp	w0, #0x26
  42d4cc:	b.eq	42d4ac <ferror@plt+0x2abdc>  // b.none
  42d4d0:	b	42d468 <ferror@plt+0x2ab98>
  42d4d4:	mov	x2, #0x3                   	// #3
  42d4d8:	add	x1, x26, #0x40
  42d4dc:	mov	x0, x26
  42d4e0:	bl	42539c <ferror@plt+0x22acc>
  42d4e4:	b	42d79c <ferror@plt+0x2aecc>
  42d4e8:	cbz	x27, 42d4fc <ferror@plt+0x2ac2c>
  42d4ec:	ldrh	w0, [x27, #6]
  42d4f0:	tbnz	w0, #0, 42d5d0 <ferror@plt+0x2ad00>
  42d4f4:	ldr	x0, [x22, #8]
  42d4f8:	cbnz	x0, 42d5d0 <ferror@plt+0x2ad00>
  42d4fc:	ldr	x27, [x22, #8]
  42d500:	b	42d5d0 <ferror@plt+0x2ad00>
  42d504:	bl	41e308 <ferror@plt+0x1ba38>
  42d508:	and	w0, w0, #0xff
  42d50c:	cbnz	w0, 42d610 <ferror@plt+0x2ad40>
  42d510:	ldrb	w0, [x22, #4]
  42d514:	bl	41e318 <ferror@plt+0x1ba48>
  42d518:	and	w24, w0, #0xff
  42d51c:	mov	x0, x22
  42d520:	bl	4246a8 <ferror@plt+0x21dd8>
  42d524:	mov	w20, w0
  42d528:	cbnz	w24, 42d61c <ferror@plt+0x2ad4c>
  42d52c:	add	x20, x20, #0x3
  42d530:	ldr	x1, [x26, #64]
  42d534:	ldr	x0, [x1, #24]
  42d538:	sub	x0, x0, x19
  42d53c:	cmp	x20, x0
  42d540:	b.hi	42d628 <ferror@plt+0x2ad58>  // b.pmore
  42d544:	sub	x0, x19, #0x1
  42d548:	ldr	x1, [x26, #64]
  42d54c:	ldr	x1, [x1, #16]
  42d550:	cmp	x1, x0
  42d554:	b.eq	42d570 <ferror@plt+0x2aca0>  // b.none
  42d558:	cmp	x27, #0x0
  42d55c:	csel	x27, x27, x22, ne  // ne = any
  42d560:	ldrh	w0, [x27, #6]
  42d564:	tbz	w0, #0, 42d570 <ferror@plt+0x2aca0>
  42d568:	mov	w0, #0x20                  	// #32
  42d56c:	strb	w0, [x19], #1
  42d570:	cbz	w24, 42d650 <ferror@plt+0x2ad80>
  42d574:	mov	x1, x20
  42d578:	mov	x0, x26
  42d57c:	bl	4251d4 <ferror@plt+0x22904>
  42d580:	mov	x20, x0
  42d584:	ldr	x24, [x0, #16]
  42d588:	mov	w3, #0x1                   	// #1
  42d58c:	mov	x2, x24
  42d590:	mov	x1, x22
  42d594:	mov	x0, x26
  42d598:	bl	424774 <ferror@plt+0x21ea4>
  42d59c:	sub	w2, w0, w24
  42d5a0:	mov	x1, x24
  42d5a4:	mov	x0, x19
  42d5a8:	bl	42afd0 <ferror@plt+0x28700>
  42d5ac:	mov	x19, x0
  42d5b0:	mov	x1, x20
  42d5b4:	mov	x0, x26
  42d5b8:	bl	4251b4 <ferror@plt+0x228e4>
  42d5bc:	ldrb	w0, [x22, #4]
  42d5c0:	cmp	w0, #0x3d
  42d5c4:	b.eq	42d66c <ferror@plt+0x2ad9c>  // b.none
  42d5c8:	ldr	x27, [sp, #152]
  42d5cc:	str	wzr, [sp, #160]
  42d5d0:	add	w23, w23, #0x1
  42d5d4:	ldr	w0, [x21, #24]
  42d5d8:	cmp	w0, w23
  42d5dc:	b.ls	42d69c <ferror@plt+0x2adcc>  // b.plast
  42d5e0:	ldr	x0, [x21]
  42d5e4:	ldr	x22, [x0, w23, uxtw #3]
  42d5e8:	ldrb	w0, [x22, #4]
  42d5ec:	cmp	w0, #0x53
  42d5f0:	b.eq	42d4e8 <ferror@plt+0x2ac18>  // b.none
  42d5f4:	sub	w2, w0, #0x38
  42d5f8:	and	w2, w2, #0xff
  42d5fc:	sub	w1, w0, #0x3e
  42d600:	and	w1, w1, #0xff
  42d604:	cmp	w2, #0x4
  42d608:	ccmp	w1, #0x4, #0x0, hi  // hi = pmore
  42d60c:	b.hi	42d504 <ferror@plt+0x2ac34>  // b.pmore
  42d610:	mov	x0, x22
  42d614:	bl	4246a8 <ferror@plt+0x21dd8>
  42d618:	mov	w20, w0
  42d61c:	lsl	x20, x20, #2
  42d620:	ldr	w24, [sp, #188]
  42d624:	b	42d52c <ferror@plt+0x2ac5c>
  42d628:	ldr	x0, [x1, #16]
  42d62c:	sub	x19, x19, x0
  42d630:	mov	x2, x20
  42d634:	ldr	x1, [sp, #208]
  42d638:	mov	x0, x26
  42d63c:	bl	42539c <ferror@plt+0x22acc>
  42d640:	ldr	x0, [x26, #64]
  42d644:	ldr	x0, [x0, #16]
  42d648:	add	x19, x0, x19
  42d64c:	b	42d544 <ferror@plt+0x2ac74>
  42d650:	mov	w3, #0x1                   	// #1
  42d654:	mov	x2, x19
  42d658:	mov	x1, x22
  42d65c:	mov	x0, x26
  42d660:	bl	424774 <ferror@plt+0x21ea4>
  42d664:	mov	x19, x0
  42d668:	b	42d5bc <ferror@plt+0x2acec>
  42d66c:	ldr	x0, [x22, #16]
  42d670:	ldrb	w0, [x0]
  42d674:	cmp	w0, #0x5c
  42d678:	b.eq	42d688 <ferror@plt+0x2adb8>  // b.none
  42d67c:	ldr	x27, [sp, #152]
  42d680:	str	wzr, [sp, #160]
  42d684:	b	42d5d0 <ferror@plt+0x2ad00>
  42d688:	ldr	w0, [sp, #160]
  42d68c:	add	w0, w0, #0x1
  42d690:	str	w0, [sp, #160]
  42d694:	ldr	x27, [sp, #152]
  42d698:	b	42d5d0 <ferror@plt+0x2ad00>
  42d69c:	ldr	x24, [sp, #216]
  42d6a0:	ldr	x0, [sp, #160]
  42d6a4:	tbnz	w0, #0, 42d6f4 <ferror@plt+0x2ae24>
  42d6a8:	add	x20, x19, #0x1
  42d6ac:	mov	x0, x19
  42d6b0:	mov	w1, #0x22                  	// #34
  42d6b4:	strb	w1, [x0], #2
  42d6b8:	ldr	x1, [x26, #64]
  42d6bc:	ldr	x19, [x1, #16]
  42d6c0:	sub	x20, x20, x19
  42d6c4:	str	x0, [x1, #16]
  42d6c8:	mov	x0, x26
  42d6cc:	bl	4244e0 <ferror@plt+0x21c10>
  42d6d0:	strb	wzr, [x19, w20, uxtw]
  42d6d4:	mov	w1, #0x3e                  	// #62
  42d6d8:	strb	w1, [x0, #4]
  42d6dc:	str	w20, [x0, #8]
  42d6e0:	str	x19, [x0, #16]
  42d6e4:	strh	wzr, [x0, #6]
  42d6e8:	str	x0, [x21, #16]
  42d6ec:	ldr	w19, [sp, #184]
  42d6f0:	b	42d730 <ferror@plt+0x2ae60>
  42d6f4:	ldr	x2, [sp, #192]
  42d6f8:	mov	w1, #0x0                   	// #0
  42d6fc:	mov	x0, x26
  42d700:	bl	41c9fc <ferror@plt+0x1a12c>
  42d704:	sub	x19, x19, #0x1
  42d708:	b	42d6a8 <ferror@plt+0x2add8>
  42d70c:	tbnz	w0, #3, 42d724 <ferror@plt+0x2ae54>
  42d710:	ldr	x0, [sp, #120]
  42d714:	cmp	x0, x25
  42d718:	b.eq	42d7d8 <ferror@plt+0x2af08>  // b.none
  42d71c:	ldurh	w0, [x25, #-18]
  42d720:	tbz	w0, #3, 42d7d8 <ferror@plt+0x2af08>
  42d724:	add	w19, w19, #0x1
  42d728:	ldr	w0, [x21, #24]
  42d72c:	add	w19, w19, w0
  42d730:	add	x25, x25, #0x18
  42d734:	cmp	x24, x25
  42d738:	b.ls	42d940 <ferror@plt+0x2b070>  // b.plast
  42d73c:	ldrb	w0, [x25, #4]
  42d740:	cmp	w0, #0x50
  42d744:	b.ne	42d730 <ferror@plt+0x2ae60>  // b.any
  42d748:	add	w1, w19, #0x2
  42d74c:	str	w1, [sp, #184]
  42d750:	add	w28, w28, #0x2
  42d754:	ldr	w20, [x25, #8]
  42d758:	sub	w20, w20, #0x1
  42d75c:	add	x20, x20, x20, lsl #1
  42d760:	lsl	x20, x20, #4
  42d764:	ldr	x0, [sp, #144]
  42d768:	add	x21, x0, x20
  42d76c:	ldrh	w0, [x25, #6]
  42d770:	tbz	w0, #2, 42d70c <ferror@plt+0x2ae3c>
  42d774:	ldr	x0, [x21, #16]
  42d778:	str	x0, [sp, #152]
  42d77c:	mov	w19, w1
  42d780:	cbnz	x0, 42d730 <ferror@plt+0x2ae60>
  42d784:	ldr	x1, [x26, #64]
  42d788:	ldr	x0, [x1, #24]
  42d78c:	ldr	x1, [x1, #16]
  42d790:	sub	x0, x0, x1
  42d794:	cmp	x0, #0x2
  42d798:	b.ls	42d4d4 <ferror@plt+0x2ac04>  // b.plast
  42d79c:	ldr	x0, [x26, #64]
  42d7a0:	ldr	x19, [x0, #16]
  42d7a4:	mov	w0, #0x22                  	// #34
  42d7a8:	strb	w0, [x19], #1
  42d7ac:	ldr	w0, [x21, #24]
  42d7b0:	cbz	w0, 42d6a8 <ferror@plt+0x2add8>
  42d7b4:	ldr	x27, [sp, #152]
  42d7b8:	str	wzr, [sp, #160]
  42d7bc:	mov	w23, #0x0                   	// #0
  42d7c0:	add	x0, x26, #0x40
  42d7c4:	str	x0, [sp, #208]
  42d7c8:	ldr	w0, [sp, #200]
  42d7cc:	str	w0, [sp, #188]
  42d7d0:	str	x24, [sp, #216]
  42d7d4:	b	42d5e0 <ferror@plt+0x2ad10>
  42d7d8:	ldr	x0, [x21, #8]
  42d7dc:	cbz	x0, 42d7f0 <ferror@plt+0x2af20>
  42d7e0:	add	w19, w19, #0x1
  42d7e4:	ldr	w0, [x21, #28]
  42d7e8:	add	w19, w19, w0
  42d7ec:	b	42d730 <ferror@plt+0x2ae60>
  42d7f0:	ldr	w0, [x21, #24]
  42d7f4:	cbz	w0, 42d7e0 <ferror@plt+0x2af10>
  42d7f8:	ldrb	w22, [x26, #1157]
  42d7fc:	ldrb	w0, [x26, #1138]
  42d800:	cmp	w0, #0x0
  42d804:	cset	w23, ne  // ne = any
  42d808:	strb	wzr, [x26, #1138]
  42d80c:	mov	x0, #0x800                 	// #2048
  42d810:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  42d814:	str	x0, [x21, #8]
  42d818:	ldrb	w0, [x26, #1157]
  42d81c:	cbnz	w0, 42d854 <ferror@plt+0x2af84>
  42d820:	cbz	w22, 42d864 <ferror@plt+0x2af94>
  42d824:	ldr	w5, [x21, #24]
  42d828:	add	w5, w5, #0x1
  42d82c:	ldr	x0, [sp, #144]
  42d830:	ldr	x4, [x0, x20]
  42d834:	ldr	x3, [x21, #32]
  42d838:	mov	x2, #0x0                   	// #0
  42d83c:	mov	x1, #0x0                   	// #0
  42d840:	mov	x0, x26
  42d844:	bl	42ad2c <ferror@plt+0x2845c>
  42d848:	mov	x22, #0x100                 	// #256
  42d84c:	mov	w27, #0x2                   	// #2
  42d850:	b	42d8ec <ferror@plt+0x2b01c>
  42d854:	mov	x0, #0x400                 	// #1024
  42d858:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  42d85c:	str	x0, [x21, #40]
  42d860:	b	42d820 <ferror@plt+0x2af50>
  42d864:	ldr	x0, [sp, #144]
  42d868:	ldr	x22, [x0, x20]
  42d86c:	ldr	w20, [x21, #24]
  42d870:	add	w20, w20, #0x1
  42d874:	mov	x0, x26
  42d878:	bl	42acd8 <ferror@plt+0x28408>
  42d87c:	str	wzr, [x0, #48]
  42d880:	str	xzr, [x0, #40]
  42d884:	str	xzr, [x0, #32]
  42d888:	str	x22, [x0, #16]
  42d88c:	add	x20, x22, w20, uxtw #3
  42d890:	str	x20, [x0, #24]
  42d894:	b	42d848 <ferror@plt+0x2af78>
  42d898:	lsl	x0, x20, #3
  42d89c:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  42d8a0:	str	x0, [x21, #40]
  42d8a4:	add	x1, sp, #0x108
  42d8a8:	mov	x0, x26
  42d8ac:	bl	42e5b4 <ferror@plt+0x2bce4>
  42d8b0:	mov	x1, x0
  42d8b4:	ldrb	w0, [x0, #4]
  42d8b8:	cmp	w0, #0x16
  42d8bc:	b.eq	42d930 <ferror@plt+0x2b060>  // b.none
  42d8c0:	ldrb	w0, [x26, #1157]
  42d8c4:	cmp	w0, #0x0
  42d8c8:	cset	w5, ne  // ne = any
  42d8cc:	mov	w4, w27
  42d8d0:	ldr	w3, [x21, #28]
  42d8d4:	ldr	w2, [sp, #264]
  42d8d8:	mov	x0, x21
  42d8dc:	bl	42abd8 <ferror@plt+0x28308>
  42d8e0:	ldr	w0, [x21, #28]
  42d8e4:	add	w0, w0, #0x1
  42d8e8:	str	w0, [x21, #28]
  42d8ec:	ldr	w20, [x21, #28]
  42d8f0:	add	w20, w20, #0x1
  42d8f4:	cmp	x20, x22
  42d8f8:	b.ls	42d8a4 <ferror@plt+0x2afd4>  // b.plast
  42d8fc:	lsl	x22, x20, #1
  42d900:	lsl	x1, x20, #4
  42d904:	ldr	x0, [x21, #8]
  42d908:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  42d90c:	str	x0, [x21, #8]
  42d910:	ldrb	w0, [x26, #1157]
  42d914:	cbz	w0, 42d8a4 <ferror@plt+0x2afd4>
  42d918:	ldr	x0, [x21, #40]
  42d91c:	cbz	x0, 42d898 <ferror@plt+0x2afc8>
  42d920:	lsl	x1, x20, #3
  42d924:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  42d928:	str	x0, [x21, #40]
  42d92c:	b	42d8a4 <ferror@plt+0x2afd4>
  42d930:	mov	x0, x26
  42d934:	bl	42b7d8 <ferror@plt+0x28f08>
  42d938:	strb	w23, [x26, #1138]
  42d93c:	b	42d7e0 <ferror@plt+0x2af10>
  42d940:	mov	w20, w28
  42d944:	ldr	x27, [sp, #168]
  42d948:	ldr	x28, [sp, #176]
  42d94c:	ldrb	w0, [x26, #1157]
  42d950:	str	w0, [sp, #192]
  42d954:	mov	w1, w19
  42d958:	cbnz	w0, 42e458 <ferror@plt+0x2bb88>
  42d95c:	mov	x2, #0x0                   	// #0
  42d960:	mov	x0, x26
  42d964:	bl	42ae58 <ferror@plt+0x28588>
  42d968:	mov	x25, x0
  42d96c:	ldr	x0, [x0, #8]
  42d970:	str	x0, [sp, #208]
  42d974:	ldr	x1, [sp, #112]
  42d978:	ldrb	w0, [x1, #19]
  42d97c:	and	w0, w0, #0x8
  42d980:	mov	w2, w0
  42d984:	ldrh	w0, [x1, #16]
  42d988:	add	x0, x0, x0, lsl #1
  42d98c:	ldr	x1, [sp, #144]
  42d990:	add	x0, x1, x0, lsl #4
  42d994:	ldur	w0, [x0, #-24]
  42d998:	str	w0, [sp, #188]
  42d99c:	ldr	x0, [sp, #120]
  42d9a0:	cmp	x0, x24
  42d9a4:	b.cs	42def8 <ferror@plt+0x2b628>  // b.hs, b.nlast
  42d9a8:	str	xzr, [sp, #168]
  42d9ac:	b	42e4c4 <ferror@plt+0x2bbf4>
  42d9b0:	mov	w20, w19
  42d9b4:	b	42d94c <ferror@plt+0x2b07c>
  42d9b8:	ldr	x2, [x19, #8]
  42d9bc:	ldr	x1, [x26, #1280]
  42d9c0:	cmp	x2, x1
  42d9c4:	b.eq	42d9e8 <ferror@plt+0x2b118>  // b.none
  42d9c8:	cmp	w22, #0x1
  42d9cc:	b.eq	42da54 <ferror@plt+0x2b184>  // b.none
  42d9d0:	b.le	42e234 <ferror@plt+0x2b964>
  42d9d4:	cmp	w0, #0x26
  42d9d8:	cset	w2, eq  // eq = none
  42d9dc:	cmp	w22, #0x2
  42d9e0:	cset	w1, eq  // eq = none
  42d9e4:	b	42e3e4 <ferror@plt+0x2bb14>
  42d9e8:	cmp	w22, #0x0
  42d9ec:	b.le	42da0c <ferror@plt+0x2b13c>
  42d9f0:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c094>
  42d9f4:	add	x3, x3, #0x128
  42d9f8:	ldr	w2, [x19]
  42d9fc:	mov	w1, #0x3                   	// #3
  42da00:	mov	x0, x26
  42da04:	bl	41cdd4 <ferror@plt+0x1a504>
  42da08:	b	42e3a0 <ferror@plt+0x2bad0>
  42da0c:	add	w22, w22, #0x1
  42da10:	ldr	w0, [x19]
  42da14:	str	w0, [sp, #176]
  42da18:	ldr	x0, [sp, #120]
  42da1c:	cmp	x19, x0
  42da20:	b.eq	42da2c <ferror@plt+0x2b15c>  // b.none
  42da24:	ldurh	w0, [x19, #-18]
  42da28:	tbz	w0, #3, 42dae0 <ferror@plt+0x2b210>
  42da2c:	ldr	x0, [x25, #16]
  42da30:	ldr	x2, [x25, #8]
  42da34:	sub	x1, x0, #0x8
  42da38:	cmp	x0, x2
  42da3c:	csel	x0, x1, xzr, ne  // ne = any
  42da40:	str	x0, [sp, #160]
  42da44:	b	42e3a0 <ferror@plt+0x2bad0>
  42da48:	mov	w22, #0x2                   	// #2
  42da4c:	cmp	w0, #0x14
  42da50:	b.eq	42e3a0 <ferror@plt+0x2bad0>  // b.none
  42da54:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c094>
  42da58:	add	x3, x3, #0x158
  42da5c:	ldr	w2, [sp, #176]
  42da60:	mov	w1, #0x3                   	// #3
  42da64:	mov	x0, x26
  42da68:	bl	41cdd4 <ferror@plt+0x1a504>
  42da6c:	mov	w22, #0x1                   	// #1
  42da70:	b	42e3a0 <ferror@plt+0x2bad0>
  42da74:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c094>
  42da78:	add	x3, x3, #0x190
  42da7c:	ldr	w2, [x19]
  42da80:	mov	w1, #0x3                   	// #3
  42da84:	mov	x0, x26
  42da88:	bl	41cdd4 <ferror@plt+0x1a504>
  42da8c:	mov	w22, #0x2                   	// #2
  42da90:	b	42e3a0 <ferror@plt+0x2bad0>
  42da94:	ldr	w1, [sp, #184]
  42da98:	mov	w22, #0x3                   	// #3
  42da9c:	b	42e3f0 <ferror@plt+0x2bb20>
  42daa0:	add	w22, w22, #0x1
  42daa4:	str	wzr, [sp, #184]
  42daa8:	b	42e524 <ferror@plt+0x2bc54>
  42daac:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c094>
  42dab0:	add	x3, x3, #0x190
  42dab4:	ldr	w2, [x19]
  42dab8:	mov	w1, #0x3                   	// #3
  42dabc:	mov	x0, x26
  42dac0:	bl	41cdd4 <ferror@plt+0x1a504>
  42dac4:	mov	w22, #0x0                   	// #0
  42dac8:	str	wzr, [sp, #184]
  42dacc:	b	42e3a0 <ferror@plt+0x2bad0>
  42dad0:	ldr	w0, [sp, #188]
  42dad4:	cbnz	w0, 42e230 <ferror@plt+0x2b960>
  42dad8:	str	wzr, [sp, #184]
  42dadc:	b	42e3a0 <ferror@plt+0x2bad0>
  42dae0:	mov	x1, x19
  42dae4:	mov	x0, x26
  42dae8:	bl	42ae28 <ferror@plt+0x28558>
  42daec:	mov	x2, x0
  42daf0:	ldrb	w0, [x26, #1157]
  42daf4:	ldr	x1, [sp, #120]
  42daf8:	sub	x6, x19, x1
  42dafc:	asr	x6, x6, #3
  42db00:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  42db04:	movk	x1, #0xaaab
  42db08:	mul	x6, x6, x1
  42db0c:	cmp	w0, #0x2
  42db10:	ldr	w3, [x2]
  42db14:	csel	w6, w6, w23, cc  // cc = lo, ul, last
  42db18:	ldr	x5, [sp, #168]
  42db1c:	mov	w4, w3
  42db20:	ldr	x1, [sp, #256]
  42db24:	mov	x0, x25
  42db28:	bl	42aea0 <ferror@plt+0x285d0>
  42db2c:	b	42da2c <ferror@plt+0x2b15c>
  42db30:	ldr	x1, [x25, #16]
  42db34:	cmp	x2, x1
  42db38:	b.eq	42e57c <ferror@plt+0x2bcac>  // b.none
  42db3c:	sub	x1, x1, #0x8
  42db40:	cmp	x3, x1
  42db44:	b.eq	42e430 <ferror@plt+0x2bb60>  // b.none
  42db48:	ldr	x0, [x1]
  42db4c:	ldrb	w0, [x0, #4]
  42db50:	cmp	w0, #0x53
  42db54:	b.ne	42e1c4 <ferror@plt+0x2b8f4>  // b.any
  42db58:	ldr	x0, [x25, #16]
  42db5c:	cmp	x0, x2
  42db60:	b.ls	42db30 <ferror@plt+0x2b260>  // b.plast
  42db64:	sub	x0, x0, #0x8
  42db68:	str	x0, [x25, #16]
  42db6c:	b	42db30 <ferror@plt+0x2b260>
  42db70:	ldrb	w1, [x26, #1157]
  42db74:	cmp	w1, #0x0
  42db78:	cset	w2, ne  // ne = any
  42db7c:	strb	w2, [sp, #264]
  42db80:	mov	w2, #0x1                   	// #1
  42db84:	str	w2, [sp, #268]
  42db88:	add	x2, x0, #0x10
  42db8c:	str	x2, [sp, #272]
  42db90:	str	xzr, [sp, #280]
  42db94:	mov	w21, #0x1                   	// #1
  42db98:	cbz	w1, 42e2b8 <ferror@plt+0x2b9e8>
  42db9c:	mov	w1, w21
  42dba0:	bl	42ac24 <ferror@plt+0x28354>
  42dba4:	str	x0, [sp, #280]
  42dba8:	b	42e2b8 <ferror@plt+0x2b9e8>
  42dbac:	ldr	w21, [x0, #24]
  42dbb0:	ldrb	w2, [x26, #1157]
  42dbb4:	ldr	x3, [sp, #144]
  42dbb8:	ldr	x1, [x3, x1]
  42dbbc:	cmp	w2, #0x0
  42dbc0:	cset	w3, ne  // ne = any
  42dbc4:	strb	w3, [sp, #264]
  42dbc8:	str	wzr, [sp, #268]
  42dbcc:	str	x1, [sp, #272]
  42dbd0:	str	xzr, [sp, #280]
  42dbd4:	cbz	w2, 42e2b8 <ferror@plt+0x2b9e8>
  42dbd8:	mov	w1, #0x0                   	// #0
  42dbdc:	bl	42ac24 <ferror@plt+0x28354>
  42dbe0:	str	x0, [sp, #280]
  42dbe4:	b	42e2b8 <ferror@plt+0x2b9e8>
  42dbe8:	ldr	w21, [x0, #24]
  42dbec:	ldrb	w2, [x26, #1157]
  42dbf0:	ldr	x3, [sp, #144]
  42dbf4:	ldr	x1, [x3, x1]
  42dbf8:	cmp	w2, #0x0
  42dbfc:	cset	w3, ne  // ne = any
  42dc00:	strb	w3, [sp, #264]
  42dc04:	str	wzr, [sp, #268]
  42dc08:	str	x1, [sp, #272]
  42dc0c:	str	xzr, [sp, #280]
  42dc10:	cbnz	w2, 42dc78 <ferror@plt+0x2b3a8>
  42dc14:	ldr	x0, [x25, #16]
  42dc18:	ldr	x1, [x25, #8]
  42dc1c:	sub	x2, x0, x1
  42dc20:	str	xzr, [sp, #152]
  42dc24:	tst	x2, #0x7fffffff8
  42dc28:	b.eq	42dc64 <ferror@plt+0x2b394>  // b.none
  42dc2c:	sub	x2, x0, #0x8
  42dc30:	cmp	x0, x1
  42dc34:	csel	x2, x2, xzr, ne  // ne = any
  42dc38:	str	x2, [sp, #152]
  42dc3c:	ldr	x2, [x2]
  42dc40:	ldrb	w2, [x2, #4]
  42dc44:	cmp	w2, #0x13
  42dc48:	b.eq	42dc88 <ferror@plt+0x2b3b8>  // b.none
  42dc4c:	cmp	w21, #0x0
  42dc50:	ldr	x1, [sp, #160]
  42dc54:	ldr	x0, [sp, #152]
  42dc58:	ccmp	x1, x0, #0x4, eq  // eq = none
  42dc5c:	csel	x0, x0, xzr, ne  // ne = any
  42dc60:	str	x0, [sp, #152]
  42dc64:	ldrb	w0, [x26, #16]
  42dc68:	cbz	w0, 42e2dc <ferror@plt+0x2ba0c>
  42dc6c:	ldrb	w0, [x26, #17]
  42dc70:	cbnz	w0, 42e2dc <ferror@plt+0x2ba0c>
  42dc74:	b	42e2f8 <ferror@plt+0x2ba28>
  42dc78:	mov	w1, #0x0                   	// #0
  42dc7c:	bl	42ac24 <ferror@plt+0x28354>
  42dc80:	str	x0, [sp, #280]
  42dc84:	b	42dc14 <ferror@plt+0x2b344>
  42dc88:	ldr	x3, [sp, #112]
  42dc8c:	ldrb	w2, [x3, #19]
  42dc90:	tbz	w2, #3, 42dc4c <ferror@plt+0x2b37c>
  42dc94:	ldrh	w2, [x3, #16]
  42dc98:	ldr	w3, [x19, #8]
  42dc9c:	cmp	w3, w2
  42dca0:	b.ne	42dc4c <ferror@plt+0x2b37c>  // b.any
  42dca4:	ldr	x2, [sp, #272]
  42dca8:	cbz	x2, 42dcb4 <ferror@plt+0x2b3e4>
  42dcac:	ldr	x2, [x2]
  42dcb0:	cbnz	x2, 42dc64 <ferror@plt+0x2b394>
  42dcb4:	cmp	x0, x1
  42dcb8:	b.ls	42e228 <ferror@plt+0x2b958>  // b.plast
  42dcbc:	sub	x0, x0, #0x8
  42dcc0:	str	x0, [x25, #16]
  42dcc4:	str	xzr, [sp, #152]
  42dcc8:	b	42dc64 <ferror@plt+0x2b394>
  42dccc:	mov	w1, w3
  42dcd0:	bl	42ac24 <ferror@plt+0x28354>
  42dcd4:	str	x0, [sp, #280]
  42dcd8:	b	42e2a4 <ferror@plt+0x2b9d4>
  42dcdc:	cbz	w21, 42e2b8 <ferror@plt+0x2b9e8>
  42dce0:	ldr	x0, [sp, #272]
  42dce4:	cbz	x0, 42dcec <ferror@plt+0x2b41c>
  42dce8:	ldr	x0, [x0]
  42dcec:	ldrb	w0, [x0, #4]
  42dcf0:	cmp	w0, #0x53
  42dcf4:	b.ne	42e2b8 <ferror@plt+0x2b9e8>  // b.any
  42dcf8:	add	x0, sp, #0x108
  42dcfc:	bl	42ac54 <ferror@plt+0x28384>
  42dd00:	subs	w21, w21, #0x1
  42dd04:	b.ne	42dce0 <ferror@plt+0x2b410>  // b.any
  42dd08:	b	42e2b8 <ferror@plt+0x2b9e8>
  42dd0c:	mov	x1, x19
  42dd10:	mov	x0, x26
  42dd14:	bl	42ae28 <ferror@plt+0x28558>
  42dd18:	mov	x2, x0
  42dd1c:	ldrb	w0, [x26, #1157]
  42dd20:	ldr	x1, [sp, #120]
  42dd24:	sub	x6, x19, x1
  42dd28:	asr	x6, x6, #3
  42dd2c:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  42dd30:	movk	x1, #0xaaab
  42dd34:	mul	x6, x6, x1
  42dd38:	cmp	w0, #0x2
  42dd3c:	ldr	w3, [x2]
  42dd40:	csel	w6, w6, w23, cc  // cc = lo, ul, last
  42dd44:	ldr	x5, [sp, #168]
  42dd48:	mov	w4, w3
  42dd4c:	ldr	x1, [sp, #256]
  42dd50:	mov	x0, x25
  42dd54:	bl	42aea0 <ferror@plt+0x285d0>
  42dd58:	b	42e2f8 <ferror@plt+0x2ba28>
  42dd5c:	ldr	x0, [sp, #120]
  42dd60:	sub	x27, x19, x0
  42dd64:	asr	x27, x27, #3
  42dd68:	mov	w0, #0xaaab                	// #43691
  42dd6c:	movk	w0, #0xaaaa, lsl #16
  42dd70:	mul	w27, w27, w0
  42dd74:	add	w0, w23, w21
  42dd78:	mov	w20, w23
  42dd7c:	str	x24, [sp, #232]
  42dd80:	ldr	w24, [sp, #192]
  42dd84:	str	w22, [sp, #240]
  42dd88:	mov	w22, w0
  42dd8c:	str	w21, [sp, #244]
  42dd90:	ldr	x21, [sp, #168]
  42dd94:	b	42ddcc <ferror@plt+0x2b4fc>
  42dd98:	mov	x2, x0
  42dd9c:	b	42ddf0 <ferror@plt+0x2b520>
  42dda0:	ldr	x0, [x0]
  42dda4:	ldr	w3, [x0]
  42dda8:	mov	x5, x21
  42ddac:	ldr	w4, [x19]
  42ddb0:	mov	x0, x25
  42ddb4:	bl	42aea0 <ferror@plt+0x285d0>
  42ddb8:	add	x0, sp, #0x108
  42ddbc:	bl	42ac54 <ferror@plt+0x28384>
  42ddc0:	add	w20, w20, #0x1
  42ddc4:	cmp	w20, w22
  42ddc8:	b.eq	42de04 <ferror@plt+0x2b534>  // b.none
  42ddcc:	cmp	w24, #0x1
  42ddd0:	csel	w6, w20, w23, gt
  42ddd4:	ldrb	w0, [x26, #1157]
  42ddd8:	cmp	w0, #0x1
  42dddc:	csel	w6, w6, w27, hi  // hi = pmore
  42dde0:	ldr	x1, [sp, #256]
  42dde4:	ldr	x0, [sp, #272]
  42dde8:	cbz	x0, 42dd98 <ferror@plt+0x2b4c8>
  42ddec:	ldr	x2, [x0]
  42ddf0:	ldrb	w3, [sp, #264]
  42ddf4:	cbz	w3, 42dda0 <ferror@plt+0x2b4d0>
  42ddf8:	ldr	x0, [sp, #280]
  42ddfc:	ldr	w3, [x0]
  42de00:	b	42dda8 <ferror@plt+0x2b4d8>
  42de04:	ldr	x24, [sp, #232]
  42de08:	ldr	w22, [sp, #240]
  42de0c:	ldr	w21, [sp, #244]
  42de10:	ldrh	w0, [x19, #6]
  42de14:	tbz	w0, #3, 42e1e8 <ferror@plt+0x2b918>
  42de18:	ldr	x0, [x25, #16]
  42de1c:	ldr	x1, [x25, #8]
  42de20:	cmp	x0, x1
  42de24:	b.eq	42e39c <ferror@plt+0x2bacc>  // b.none
  42de28:	sub	x0, x0, #0x8
  42de2c:	str	x0, [sp, #152]
  42de30:	b	42e38c <ferror@plt+0x2babc>
  42de34:	ldrb	w0, [x26, #1120]
  42de38:	cbnz	w0, 42de6c <ferror@plt+0x2b59c>
  42de3c:	ldrsb	w0, [x26, #1198]
  42de40:	cbz	w0, 42e374 <ferror@plt+0x2baa4>
  42de44:	cmp	w0, #0x0
  42de48:	cset	w1, gt
  42de4c:	ldr	w4, [x19, #8]
  42de50:	ldr	x0, [sp, #200]
  42de54:	ldr	x3, [x0]
  42de58:	ldr	x2, [sp, #224]
  42de5c:	add	w1, w1, #0x15
  42de60:	mov	x0, x26
  42de64:	bl	41caf0 <ferror@plt+0x1a220>
  42de68:	b	42e374 <ferror@plt+0x2baa4>
  42de6c:	ldr	w4, [x19, #8]
  42de70:	ldr	x0, [sp, #200]
  42de74:	ldr	x3, [x0]
  42de78:	ldr	x2, [sp, #248]
  42de7c:	mov	w1, #0x15                  	// #21
  42de80:	mov	x0, x26
  42de84:	bl	41caf0 <ferror@plt+0x1a220>
  42de88:	b	42e374 <ferror@plt+0x2baa4>
  42de8c:	mov	w22, #0x0                   	// #0
  42de90:	str	wzr, [sp, #184]
  42de94:	str	xzr, [sp, #160]
  42de98:	b	42e3a0 <ferror@plt+0x2bad0>
  42de9c:	ldr	x27, [sp, #216]
  42dea0:	ldr	x28, [sp, #200]
  42dea4:	ldr	w0, [sp, #192]
  42dea8:	cbz	w0, 42def8 <ferror@plt+0x2b628>
  42deac:	ldr	x5, [x25, #16]
  42deb0:	ldr	x0, [x25, #8]
  42deb4:	sub	x5, x5, x0
  42deb8:	ubfx	x5, x5, #3, #32
  42debc:	ldr	x4, [sp, #208]
  42dec0:	ldr	x3, [sp, #256]
  42dec4:	mov	x2, x25
  42dec8:	mov	x1, x28
  42decc:	mov	x0, x26
  42ded0:	bl	42ad2c <ferror@plt+0x2845c>
  42ded4:	adrp	x2, 488000 <_obstack_memory_used@@Base+0x41094>
  42ded8:	ldr	x0, [x25, #16]
  42dedc:	ldr	x1, [x25, #8]
  42dee0:	sub	x0, x0, x1
  42dee4:	lsr	x0, x0, #3
  42dee8:	ldr	w1, [x2, #1944]
  42deec:	add	w0, w1, w0
  42def0:	str	w0, [x2, #1944]
  42def4:	b	42d35c <ferror@plt+0x2aa8c>
  42def8:	ldr	x19, [x25, #16]
  42defc:	ldr	x0, [x25, #8]
  42df00:	sub	x19, x19, x0
  42df04:	lsr	x19, x19, #3
  42df08:	mov	x0, x26
  42df0c:	bl	42acd8 <ferror@plt+0x28408>
  42df10:	str	wzr, [x0, #48]
  42df14:	str	x28, [x0, #40]
  42df18:	str	x25, [x0, #32]
  42df1c:	ldr	x1, [sp, #208]
  42df20:	str	x1, [x0, #16]
  42df24:	add	x19, x1, w19, uxtw #3
  42df28:	str	x19, [x0, #24]
  42df2c:	b	42ded4 <ferror@plt+0x2b604>
  42df30:	add	x19, x19, #0x30
  42df34:	cmp	x21, x19
  42df38:	b.eq	42df74 <ferror@plt+0x2b6a4>  // b.none
  42df3c:	mov	x20, x19
  42df40:	ldr	x0, [x19]
  42df44:	cbz	x0, 42df50 <ferror@plt+0x2b680>
  42df48:	bl	402690 <free@plt>
  42df4c:	str	xzr, [x19]
  42df50:	ldr	x0, [x20, #24]
  42df54:	cbz	x0, 42df60 <ferror@plt+0x2b690>
  42df58:	bl	402690 <free@plt>
  42df5c:	str	xzr, [x20, #24]
  42df60:	ldr	x0, [x20, #32]
  42df64:	cbz	x0, 42df30 <ferror@plt+0x2b660>
  42df68:	bl	402690 <free@plt>
  42df6c:	str	xzr, [x20, #32]
  42df70:	b	42df30 <ferror@plt+0x2b660>
  42df74:	ldr	x0, [sp, #136]
  42df78:	bl	4253f8 <ferror@plt+0x22b28>
  42df7c:	ldp	x23, x24, [sp, #48]
  42df80:	b	42ce0c <ferror@plt+0x2a53c>
  42df84:	mov	x1, x28
  42df88:	mov	x0, x26
  42df8c:	bl	42ccb4 <ferror@plt+0x2a3e4>
  42df90:	b	42ce24 <ferror@plt+0x2a554>
  42df94:	ldr	x2, [sp, #112]
  42df98:	ldr	w1, [x2, #12]
  42df9c:	mov	w21, w1
  42dfa0:	sub	w1, w1, #0x1
  42dfa4:	cbz	w21, 42e18c <ferror@plt+0x2b8bc>
  42dfa8:	ubfiz	x0, x1, #1, #32
  42dfac:	add	x0, x0, w1, uxtw
  42dfb0:	add	x0, x2, x0, lsl #3
  42dfb4:	ldrb	w0, [x0, #28]
  42dfb8:	cmp	w0, #0x26
  42dfbc:	b.eq	42df9c <ferror@plt+0x2b6cc>  // b.none
  42dfc0:	ldrb	w0, [x26, #1157]
  42dfc4:	cbz	w0, 42ce68 <ferror@plt+0x2a598>
  42dfc8:	stp	x23, x24, [sp, #48]
  42dfcc:	ldr	x0, [sp, #112]
  42dfd0:	add	x19, x0, #0x18
  42dfd4:	str	xzr, [sp, #264]
  42dfd8:	add	x2, sp, #0x108
  42dfdc:	mov	w1, w21
  42dfe0:	mov	x0, x26
  42dfe4:	bl	42ae58 <ferror@plt+0x28588>
  42dfe8:	mov	x22, x0
  42dfec:	mov	w3, w21
  42dff0:	ldr	w2, [sp, #100]
  42dff4:	mov	x1, x28
  42dff8:	ldr	x0, [x26, #40]
  42dffc:	bl	4286d8 <ferror@plt+0x25e08>
  42e000:	mov	x23, x0
  42e004:	b	42e048 <ferror@plt+0x2b778>
  42e008:	stp	x23, x24, [sp, #48]
  42e00c:	ldr	x0, [sp, #112]
  42e010:	add	x19, x0, #0x18
  42e014:	str	xzr, [sp, #264]
  42e018:	add	x2, sp, #0x108
  42e01c:	mov	w1, w21
  42e020:	mov	x0, x26
  42e024:	bl	42ae58 <ferror@plt+0x28588>
  42e028:	mov	x22, x0
  42e02c:	mov	w3, w21
  42e030:	ldr	w2, [sp, #100]
  42e034:	mov	x1, x28
  42e038:	ldr	x0, [x26, #40]
  42e03c:	bl	4286d8 <ferror@plt+0x25e08>
  42e040:	mov	x23, x0
  42e044:	cbz	w21, 42e0c4 <ferror@plt+0x2b7f4>
  42e048:	mov	w20, #0x0                   	// #0
  42e04c:	ldr	w3, [x19]
  42e050:	mov	w6, w20
  42e054:	mov	x5, x23
  42e058:	mov	w4, w3
  42e05c:	mov	x2, x19
  42e060:	ldr	x1, [sp, #264]
  42e064:	mov	x0, x22
  42e068:	bl	42aea0 <ferror@plt+0x285d0>
  42e06c:	add	x19, x19, #0x18
  42e070:	add	w20, w20, #0x1
  42e074:	cmp	w20, w21
  42e078:	b.cc	42e04c <ferror@plt+0x2b77c>  // b.lo, b.ul, b.last
  42e07c:	ldp	x23, x24, [sp, #48]
  42e080:	mov	w5, w21
  42e084:	ldr	x4, [x22, #8]
  42e088:	ldr	x3, [sp, #264]
  42e08c:	mov	x2, x22
  42e090:	mov	x1, x28
  42e094:	mov	x0, x26
  42e098:	bl	42ad2c <ferror@plt+0x2845c>
  42e09c:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x41094>
  42e0a0:	ldr	w0, [x1, #1944]
  42e0a4:	add	w21, w0, w21
  42e0a8:	str	w21, [x1, #1944]
  42e0ac:	cbz	x27, 42e15c <ferror@plt+0x2b88c>
  42e0b0:	ldrb	w0, [x26, #16]
  42e0b4:	cbz	w0, 42e0cc <ferror@plt+0x2b7fc>
  42e0b8:	adrp	x22, 488000 <_obstack_memory_used@@Base+0x41094>
  42e0bc:	add	x22, x22, #0x798
  42e0c0:	b	42e100 <ferror@plt+0x2b830>
  42e0c4:	ldp	x23, x24, [sp, #48]
  42e0c8:	b	42e080 <ferror@plt+0x2b7b0>
  42e0cc:	ldr	x1, [sp, #104]
  42e0d0:	mov	x0, x26
  42e0d4:	bl	42ae28 <ferror@plt+0x28558>
  42e0d8:	mov	w3, #0x1                   	// #1
  42e0dc:	mov	x2, x0
  42e0e0:	mov	x1, #0x0                   	// #0
  42e0e4:	mov	x0, x26
  42e0e8:	bl	42b56c <ferror@plt+0x28c9c>
  42e0ec:	b	42e0b8 <ferror@plt+0x2b7e8>
  42e0f0:	ldr	w0, [x22]
  42e0f4:	add	w19, w0, w19
  42e0f8:	str	w19, [x22]
  42e0fc:	cbz	x27, 42e148 <ferror@plt+0x2b878>
  42e100:	mov	x21, x27
  42e104:	ldr	x27, [x27]
  42e108:	str	xzr, [x21]
  42e10c:	ldr	x20, [x21, #8]
  42e110:	ldr	x19, [x21, #16]
  42e114:	sub	x19, x19, x20
  42e118:	asr	x19, x19, #3
  42e11c:	mov	x0, x26
  42e120:	bl	42acd8 <ferror@plt+0x28408>
  42e124:	str	wzr, [x0, #48]
  42e128:	str	xzr, [x0, #40]
  42e12c:	str	x21, [x0, #32]
  42e130:	str	x20, [x0, #16]
  42e134:	add	x20, x20, w19, uxtw #3
  42e138:	str	x20, [x0, #24]
  42e13c:	ldrb	w0, [x26, #1157]
  42e140:	cbnz	w0, 42e0fc <ferror@plt+0x2b82c>
  42e144:	b	42e0f0 <ferror@plt+0x2b820>
  42e148:	strb	wzr, [x26, #192]
  42e14c:	mov	w0, #0x2                   	// #2
  42e150:	ldp	x19, x20, [sp, #16]
  42e154:	ldp	x21, x22, [sp, #32]
  42e158:	b	42cde0 <ferror@plt+0x2a510>
  42e15c:	strb	wzr, [x26, #192]
  42e160:	mov	w0, #0x1                   	// #1
  42e164:	ldp	x19, x20, [sp, #16]
  42e168:	ldp	x21, x22, [sp, #32]
  42e16c:	b	42cde0 <ferror@plt+0x2a510>
  42e170:	ldr	x0, [x1, #24]
  42e174:	ldrb	w0, [x0, #19]
  42e178:	tbz	w0, #2, 42cdcc <ferror@plt+0x2a4fc>
  42e17c:	ldrb	w0, [x26, #1157]
  42e180:	ldr	w3, [sp, #100]
  42e184:	cbnz	w0, 42cdd0 <ferror@plt+0x2a500>
  42e188:	b	42cdcc <ferror@plt+0x2a4fc>
  42e18c:	ldrb	w0, [x26, #1157]
  42e190:	cbz	w0, 42ce68 <ferror@plt+0x2a598>
  42e194:	str	xzr, [sp, #264]
  42e198:	add	x2, sp, #0x108
  42e19c:	mov	x1, #0x0                   	// #0
  42e1a0:	mov	x0, x26
  42e1a4:	bl	42ae58 <ferror@plt+0x28588>
  42e1a8:	mov	x22, x0
  42e1ac:	mov	w3, #0x0                   	// #0
  42e1b0:	ldr	w2, [sp, #100]
  42e1b4:	mov	x1, x28
  42e1b8:	ldr	x0, [x26, #40]
  42e1bc:	bl	4286d8 <ferror@plt+0x25e08>
  42e1c0:	b	42e080 <ferror@plt+0x2b7b0>
  42e1c4:	ldrh	w0, [x19, #6]
  42e1c8:	tbz	w0, #3, 42e584 <ferror@plt+0x2bcb4>
  42e1cc:	mov	x2, x19
  42e1d0:	mov	x0, x26
  42e1d4:	bl	42adbc <ferror@plt+0x284ec>
  42e1d8:	mov	w22, #0x0                   	// #0
  42e1dc:	str	wzr, [sp, #184]
  42e1e0:	str	xzr, [sp, #160]
  42e1e4:	b	42e3a0 <ferror@plt+0x2bad0>
  42e1e8:	ldrb	w0, [x26, #16]
  42e1ec:	cbnz	w0, 42e384 <ferror@plt+0x2bab4>
  42e1f0:	ldr	x1, [sp, #160]
  42e1f4:	mov	x0, x25
  42e1f8:	bl	42ac88 <ferror@plt+0x283b8>
  42e1fc:	and	w0, w0, #0xff
  42e200:	cbnz	w0, 42e384 <ferror@plt+0x2bab4>
  42e204:	ldr	w3, [x26, #664]
  42e208:	mov	w6, #0x0                   	// #0
  42e20c:	mov	x5, #0x0                   	// #0
  42e210:	mov	w4, w3
  42e214:	add	x2, x26, #0x298
  42e218:	ldr	x1, [sp, #256]
  42e21c:	mov	x0, x25
  42e220:	bl	42aea0 <ferror@plt+0x285d0>
  42e224:	b	42e384 <ferror@plt+0x2bab4>
  42e228:	str	xzr, [sp, #152]
  42e22c:	b	42dc64 <ferror@plt+0x2b394>
  42e230:	str	wzr, [sp, #184]
  42e234:	ldrb	w0, [x19, #4]
  42e238:	cmp	w0, #0x50
  42e23c:	b.ne	42e52c <ferror@plt+0x2bc5c>  // b.any
  42e240:	ldr	w0, [x19, #8]
  42e244:	sub	w0, w0, #0x1
  42e248:	add	x0, x0, x0, lsl #1
  42e24c:	lsl	x1, x0, #4
  42e250:	ldr	x0, [sp, #144]
  42e254:	add	x0, x0, x1
  42e258:	ldrh	w2, [x19, #6]
  42e25c:	tbnz	w2, #2, 42db70 <ferror@plt+0x2b2a0>
  42e260:	tbnz	w2, #3, 42dbac <ferror@plt+0x2b2dc>
  42e264:	ldr	x2, [sp, #120]
  42e268:	cmp	x19, x2
  42e26c:	b.eq	42e278 <ferror@plt+0x2b9a8>  // b.none
  42e270:	ldurh	w2, [x19, #-18]
  42e274:	tbnz	w2, #3, 42dbe8 <ferror@plt+0x2b318>
  42e278:	ldr	w21, [x0, #28]
  42e27c:	ldrb	w1, [x26, #1157]
  42e280:	ldr	x2, [x0, #8]
  42e284:	cmp	w1, #0x0
  42e288:	cset	w3, ne  // ne = any
  42e28c:	strb	w3, [sp, #264]
  42e290:	mov	w3, #0x2                   	// #2
  42e294:	str	w3, [sp, #268]
  42e298:	str	x2, [sp, #272]
  42e29c:	str	xzr, [sp, #280]
  42e2a0:	cbnz	w1, 42dccc <ferror@plt+0x2b3fc>
  42e2a4:	ldr	x1, [sp, #160]
  42e2a8:	mov	x0, x25
  42e2ac:	bl	42ac88 <ferror@plt+0x283b8>
  42e2b0:	and	w0, w0, #0xff
  42e2b4:	cbnz	w0, 42dcdc <ferror@plt+0x2b40c>
  42e2b8:	ldrb	w0, [x26, #16]
  42e2bc:	cbz	w0, 42e2cc <ferror@plt+0x2b9fc>
  42e2c0:	ldrb	w0, [x26, #17]
  42e2c4:	str	xzr, [sp, #152]
  42e2c8:	cbz	w0, 42e2f8 <ferror@plt+0x2ba28>
  42e2cc:	str	xzr, [sp, #152]
  42e2d0:	ldr	x0, [sp, #120]
  42e2d4:	cmp	x19, x0
  42e2d8:	b.eq	42e2f8 <ferror@plt+0x2ba28>  // b.none
  42e2dc:	ldurh	w0, [x19, #-18]
  42e2e0:	tbnz	w0, #3, 42e2f8 <ferror@plt+0x2ba28>
  42e2e4:	ldr	x1, [sp, #160]
  42e2e8:	mov	x0, x25
  42e2ec:	bl	42ac88 <ferror@plt+0x283b8>
  42e2f0:	and	w0, w0, #0xff
  42e2f4:	cbz	w0, 42dd0c <ferror@plt+0x2b43c>
  42e2f8:	cbnz	w21, 42dd5c <ferror@plt+0x2b48c>
  42e2fc:	ldrb	w0, [x26, #1154]
  42e300:	cbz	w0, 42e328 <ferror@plt+0x2ba58>
  42e304:	ldrb	w0, [x26, #1152]
  42e308:	cbnz	w0, 42e328 <ferror@plt+0x2ba58>
  42e30c:	ldr	x0, [sp, #112]
  42e310:	ldrb	w0, [x0, #19]
  42e314:	tbnz	w0, #4, 42e328 <ferror@plt+0x2ba58>
  42e318:	ldr	x0, [x26]
  42e31c:	cbz	x0, 42de34 <ferror@plt+0x2b564>
  42e320:	ldrb	w0, [x0, #106]
  42e324:	cbz	w0, 42de34 <ferror@plt+0x2b564>
  42e328:	ldrsb	w0, [x26, #1198]
  42e32c:	cmp	w0, #0x0
  42e330:	b.le	42e374 <ferror@plt+0x2baa4>
  42e334:	ldrb	w0, [x26, #1120]
  42e338:	cbnz	w0, 42e374 <ferror@plt+0x2baa4>
  42e33c:	ldr	x0, [sp, #112]
  42e340:	ldrb	w0, [x0, #19]
  42e344:	tbnz	w0, #4, 42e374 <ferror@plt+0x2baa4>
  42e348:	ldr	x0, [x26]
  42e34c:	cbz	x0, 42e358 <ferror@plt+0x2ba88>
  42e350:	ldrb	w0, [x0, #106]
  42e354:	cbnz	w0, 42e374 <ferror@plt+0x2baa4>
  42e358:	ldr	w4, [x19, #8]
  42e35c:	ldr	x0, [sp, #200]
  42e360:	ldr	x3, [x0]
  42e364:	ldr	x2, [sp, #224]
  42e368:	mov	w1, #0x16                  	// #22
  42e36c:	mov	x0, x26
  42e370:	bl	41ca74 <ferror@plt+0x1a1a4>
  42e374:	ldrb	w0, [x26, #16]
  42e378:	cbnz	w0, 42e384 <ferror@plt+0x2bab4>
  42e37c:	ldrh	w0, [x19, #6]
  42e380:	tbz	w0, #3, 42e1f0 <ferror@plt+0x2b920>
  42e384:	ldr	x0, [sp, #152]
  42e388:	cbz	x0, 42e39c <ferror@plt+0x2bacc>
  42e38c:	mov	x2, x19
  42e390:	ldr	x1, [sp, #152]
  42e394:	mov	x0, x26
  42e398:	bl	42adbc <ferror@plt+0x284ec>
  42e39c:	add	w23, w23, w21
  42e3a0:	add	x19, x19, #0x18
  42e3a4:	cmp	x19, x24
  42e3a8:	b.cs	42de9c <ferror@plt+0x2b5cc>  // b.hs, b.nlast
  42e3ac:	cbz	w28, 42e234 <ferror@plt+0x2b964>
  42e3b0:	ldrb	w0, [x19, #4]
  42e3b4:	cmp	w0, #0x35
  42e3b8:	b.eq	42d9b8 <ferror@plt+0x2b0e8>  // b.none
  42e3bc:	cmp	w22, #0x1
  42e3c0:	b.eq	42da48 <ferror@plt+0x2b178>  // b.none
  42e3c4:	b.le	42e234 <ferror@plt+0x2b964>
  42e3c8:	cmp	w0, #0x26
  42e3cc:	cset	w2, eq  // eq = none
  42e3d0:	cmp	w22, #0x2
  42e3d4:	cset	w1, eq  // eq = none
  42e3d8:	cmp	w1, #0x0
  42e3dc:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  42e3e0:	b.ne	42da74 <ferror@plt+0x2b1a4>  // b.any
  42e3e4:	cbnz	w1, 42da94 <ferror@plt+0x2b1c4>
  42e3e8:	cbnz	w2, 42e51c <ferror@plt+0x2bc4c>
  42e3ec:	ldr	w1, [sp, #184]
  42e3f0:	cmp	w0, #0x14
  42e3f4:	b.eq	42daa0 <ferror@plt+0x2b1d0>  // b.none
  42e3f8:	cmp	w0, #0x15
  42e3fc:	b.ne	42dad0 <ferror@plt+0x2b200>  // b.any
  42e400:	sub	w22, w22, #0x1
  42e404:	cmp	w22, #0x2
  42e408:	b.ne	42e574 <ferror@plt+0x2bca4>  // b.any
  42e40c:	cbnz	w1, 42daac <ferror@plt+0x2b1dc>
  42e410:	ldr	x1, [x25, #16]
  42e414:	ldr	x2, [x25, #8]
  42e418:	cmp	x1, x2
  42e41c:	b.eq	42e57c <ferror@plt+0x2bcac>  // b.none
  42e420:	sub	x1, x1, #0x8
  42e424:	ldr	x3, [sp, #160]
  42e428:	cmp	x3, x1
  42e42c:	b.ne	42db48 <ferror@plt+0x2b278>  // b.any
  42e430:	ldrh	w0, [x19, #6]
  42e434:	tbz	w0, #3, 42e584 <ferror@plt+0x2bcb4>
  42e438:	ldr	x0, [x1]
  42e43c:	ldrb	w0, [x0, #4]
  42e440:	cmp	w0, #0x53
  42e444:	b.ne	42e1cc <ferror@plt+0x2b8fc>  // b.any
  42e448:	mov	w22, #0x0                   	// #0
  42e44c:	str	wzr, [sp, #184]
  42e450:	str	xzr, [sp, #160]
  42e454:	b	42e3a0 <ferror@plt+0x2bad0>
  42e458:	add	x2, sp, #0x100
  42e45c:	mov	x0, x26
  42e460:	bl	42ae58 <ferror@plt+0x28588>
  42e464:	mov	x25, x0
  42e468:	ldr	x0, [x0, #8]
  42e46c:	str	x0, [sp, #208]
  42e470:	ldr	w0, [sp, #192]
  42e474:	cmp	w0, #0x1
  42e478:	csel	w3, w19, w20, gt
  42e47c:	ldr	w2, [sp, #100]
  42e480:	mov	x1, x28
  42e484:	ldr	x0, [x26, #40]
  42e488:	bl	4286d8 <ferror@plt+0x25e08>
  42e48c:	str	x0, [sp, #168]
  42e490:	ldr	x1, [sp, #112]
  42e494:	ldrb	w0, [x1, #19]
  42e498:	and	w0, w0, #0x8
  42e49c:	mov	w2, w0
  42e4a0:	ldrh	w0, [x1, #16]
  42e4a4:	add	x0, x0, x0, lsl #1
  42e4a8:	ldr	x1, [sp, #144]
  42e4ac:	add	x0, x1, x0, lsl #4
  42e4b0:	ldur	w0, [x0, #-24]
  42e4b4:	str	w0, [sp, #188]
  42e4b8:	ldr	x0, [sp, #120]
  42e4bc:	cmp	x0, x24
  42e4c0:	b.cs	42deac <ferror@plt+0x2b5dc>  // b.hs, b.nlast
  42e4c4:	ldr	x19, [sp, #120]
  42e4c8:	str	wzr, [sp, #176]
  42e4cc:	mov	w22, #0x0                   	// #0
  42e4d0:	str	wzr, [sp, #184]
  42e4d4:	mov	w23, #0x0                   	// #0
  42e4d8:	str	xzr, [sp, #160]
  42e4dc:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1c094>
  42e4e0:	add	x0, x0, #0x360
  42e4e4:	str	x0, [sp, #224]
  42e4e8:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1c094>
  42e4ec:	add	x0, x0, #0x310
  42e4f0:	str	x0, [sp, #248]
  42e4f4:	str	x27, [sp, #216]
  42e4f8:	str	x28, [sp, #200]
  42e4fc:	mov	w28, w2
  42e500:	b	42e3ac <ferror@plt+0x2badc>
  42e504:	ldr	x0, [sp, #112]
  42e508:	add	x0, x0, #0x18
  42e50c:	str	x0, [sp, #120]
  42e510:	mov	x24, x0
  42e514:	mov	w20, w19
  42e518:	b	42d94c <ferror@plt+0x2b07c>
  42e51c:	mov	w0, #0x1                   	// #1
  42e520:	str	w0, [sp, #184]
  42e524:	ldr	w0, [sp, #188]
  42e528:	cbz	w0, 42e3a0 <ferror@plt+0x2bad0>
  42e52c:	ldrb	w0, [x26, #1157]
  42e530:	ldr	x1, [sp, #120]
  42e534:	sub	x6, x19, x1
  42e538:	asr	x6, x6, #3
  42e53c:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  42e540:	movk	x1, #0xaaab
  42e544:	mul	x6, x6, x1
  42e548:	cmp	w0, #0x2
  42e54c:	ldr	w3, [x19]
  42e550:	csel	w6, w6, w23, cc  // cc = lo, ul, last
  42e554:	ldr	x5, [sp, #168]
  42e558:	mov	w4, w3
  42e55c:	mov	x2, x19
  42e560:	ldr	x1, [sp, #256]
  42e564:	mov	x0, x25
  42e568:	bl	42aea0 <ferror@plt+0x285d0>
  42e56c:	add	w23, w23, #0x1
  42e570:	b	42e3a0 <ferror@plt+0x2bad0>
  42e574:	str	wzr, [sp, #184]
  42e578:	b	42e524 <ferror@plt+0x2bc54>
  42e57c:	ldrh	w0, [x19, #6]
  42e580:	tbnz	w0, #3, 42de8c <ferror@plt+0x2b5bc>
  42e584:	ldr	w3, [x26, #664]
  42e588:	mov	w6, #0x0                   	// #0
  42e58c:	mov	x5, #0x0                   	// #0
  42e590:	mov	w4, w3
  42e594:	add	x2, x26, #0x298
  42e598:	ldr	x1, [sp, #256]
  42e59c:	mov	x0, x25
  42e5a0:	bl	42aea0 <ferror@plt+0x285d0>
  42e5a4:	mov	w22, #0x0                   	// #0
  42e5a8:	str	wzr, [sp, #184]
  42e5ac:	str	xzr, [sp, #160]
  42e5b0:	b	42e3a0 <ferror@plt+0x2bad0>
  42e5b4:	stp	x29, x30, [sp, #-112]!
  42e5b8:	mov	x29, sp
  42e5bc:	stp	x19, x20, [sp, #16]
  42e5c0:	stp	x21, x22, [sp, #32]
  42e5c4:	stp	x23, x24, [sp, #48]
  42e5c8:	stp	x25, x26, [sp, #64]
  42e5cc:	mov	x19, x0
  42e5d0:	mov	x23, x1
  42e5d4:	ldrb	w26, [x0, #192]
  42e5d8:	mov	w24, #0x0                   	// #0
  42e5dc:	adrp	x25, 488000 <_obstack_memory_used@@Base+0x41094>
  42e5e0:	add	x25, x25, #0x798
  42e5e4:	ldr	x0, [x19, #136]
  42e5e8:	ldr	x1, [x0, #8]
  42e5ec:	cbz	x1, 42e6a0 <ferror@plt+0x2bdd0>
  42e5f0:	ldr	w1, [x0, #48]
  42e5f4:	cmp	w1, #0x1
  42e5f8:	b.eq	42e79c <ferror@plt+0x2becc>  // b.none
  42e5fc:	tst	w1, #0xfffffffd
  42e600:	b.ne	42e7f8 <ferror@plt+0x2bf28>  // b.any
  42e604:	ldr	x2, [x0, #16]
  42e608:	ldr	x3, [x0, #24]
  42e60c:	cmp	x2, x3
  42e610:	b.ne	42e814 <ferror@plt+0x2bf44>  // b.any
  42e614:	ldr	x0, [x0, #40]
  42e618:	cbz	x0, 42e628 <ferror@plt+0x2bd58>
  42e61c:	ldr	w0, [x25, #4]
  42e620:	add	w0, w0, #0x1
  42e624:	str	w0, [x25, #4]
  42e628:	mov	x0, x19
  42e62c:	bl	42b7d8 <ferror@plt+0x28f08>
  42e630:	ldrb	w0, [x19, #16]
  42e634:	cbnz	w0, 42e5e4 <ferror@plt+0x2bd14>
  42e638:	add	x20, x19, #0x298
  42e63c:	cbz	x23, 42e680 <ferror@plt+0x2bdb0>
  42e640:	cbnz	w24, 42e648 <ferror@plt+0x2bd78>
  42e644:	ldr	w24, [x20]
  42e648:	str	w24, [x23]
  42e64c:	ldrb	w0, [x19, #1157]
  42e650:	cbnz	w0, 42e668 <ferror@plt+0x2bd98>
  42e654:	ldr	x0, [x19, #136]
  42e658:	bl	42acb4 <ferror@plt+0x283e4>
  42e65c:	cbz	x0, 42e668 <ferror@plt+0x2bd98>
  42e660:	ldr	w0, [x19, #176]
  42e664:	str	w0, [x23]
  42e668:	ldr	w0, [x23]
  42e66c:	ldrb	w1, [x19, #1160]
  42e670:	cbz	w1, 42e67c <ferror@plt+0x2bdac>
  42e674:	ldrb	w1, [x19, #16]
  42e678:	cbnz	w1, 42ea80 <ferror@plt+0x2c1b0>
  42e67c:	str	w0, [x23]
  42e680:	strb	w26, [x19, #192]
  42e684:	mov	x0, x20
  42e688:	ldp	x19, x20, [sp, #16]
  42e68c:	ldp	x21, x22, [sp, #32]
  42e690:	ldp	x23, x24, [sp, #48]
  42e694:	ldp	x25, x26, [sp, #64]
  42e698:	ldp	x29, x30, [sp], #112
  42e69c:	ret
  42e6a0:	mov	x0, x19
  42e6a4:	bl	427bcc <ferror@plt+0x252fc>
  42e6a8:	mov	x20, x0
  42e6ac:	ldr	w24, [x0]
  42e6b0:	ldrb	w0, [x19, #16]
  42e6b4:	cbz	w0, 42e6c4 <ferror@plt+0x2bdf4>
  42e6b8:	ldrb	w0, [x20, #4]
  42e6bc:	cmp	w0, #0x4f
  42e6c0:	b.eq	42e5e4 <ferror@plt+0x2bd14>  // b.none
  42e6c4:	ldrb	w0, [x20, #4]
  42e6c8:	cmp	w0, #0x35
  42e6cc:	b.ne	42e63c <ferror@plt+0x2bd6c>  // b.any
  42e6d0:	ldr	x21, [x20, #8]
  42e6d4:	ldrb	w0, [x21, #18]
  42e6d8:	tst	x0, #0x3
  42e6dc:	b.eq	42e63c <ferror@plt+0x2bd6c>  // b.none
  42e6e0:	ldrh	w0, [x20, #6]
  42e6e4:	tbnz	w0, #10, 42e63c <ferror@plt+0x2bd6c>
  42e6e8:	ldrh	w0, [x21, #18]
  42e6ec:	tbnz	w0, #6, 42ea54 <ferror@plt+0x2c184>
  42e6f0:	ldrb	w0, [x19, #192]
  42e6f4:	cbnz	w0, 42e710 <ferror@plt+0x2be40>
  42e6f8:	ldr	x0, [x19, #136]
  42e6fc:	bl	42acb4 <ferror@plt+0x283e4>
  42e700:	cbnz	x0, 42e710 <ferror@plt+0x2be40>
  42e704:	ldr	w0, [x20]
  42e708:	str	w0, [x19, #176]
  42e70c:	str	x21, [x19, #184]
  42e710:	ldrb	w0, [x19, #24]
  42e714:	cbnz	w0, 42e63c <ferror@plt+0x2bd6c>
  42e718:	ldrh	w0, [x21, #18]
  42e71c:	tbz	w0, #8, 42ea3c <ferror@plt+0x2c16c>
  42e720:	ldr	x0, [x19, #992]
  42e724:	cbz	x0, 42e63c <ferror@plt+0x2bd6c>
  42e728:	mov	w1, #0x0                   	// #0
  42e72c:	mov	x0, x19
  42e730:	bl	427d20 <ferror@plt+0x25450>
  42e734:	ldrb	w1, [x0, #4]
  42e738:	mov	w21, #0x1                   	// #1
  42e73c:	cmp	w1, #0x53
  42e740:	b.eq	42e74c <ferror@plt+0x2be7c>  // b.none
  42e744:	ldrb	w21, [x0, #6]
  42e748:	and	w21, w21, #0x1
  42e74c:	ldr	x2, [x19, #992]
  42e750:	mov	x1, x20
  42e754:	mov	x0, x19
  42e758:	blr	x2
  42e75c:	mov	x1, x0
  42e760:	cbz	x0, 42e9f4 <ferror@plt+0x2c124>
  42e764:	mov	w3, w24
  42e768:	mov	x2, x20
  42e76c:	mov	x0, x19
  42e770:	bl	42cd74 <ferror@plt+0x2a4a4>
  42e774:	cbz	w0, 42e63c <ferror@plt+0x2bd6c>
  42e778:	ldrb	w1, [x19, #16]
  42e77c:	cmp	w1, #0x0
  42e780:	ccmp	w0, #0x2, #0x4, eq  // eq = none
  42e784:	b.eq	42e5e4 <ferror@plt+0x2bd14>  // b.none
  42e788:	mov	x1, x20
  42e78c:	mov	x0, x19
  42e790:	bl	42ae28 <ferror@plt+0x28558>
  42e794:	mov	x20, x0
  42e798:	b	42e63c <ferror@plt+0x2bd6c>
  42e79c:	ldr	x20, [x0, #16]
  42e7a0:	ldr	x1, [x0, #24]
  42e7a4:	cmp	x20, x1
  42e7a8:	b.eq	42e614 <ferror@plt+0x2bd44>  // b.none
  42e7ac:	mov	x1, x20
  42e7b0:	ldr	w24, [x1], #24
  42e7b4:	str	x1, [x0, #16]
  42e7b8:	ldrh	w0, [x20, #6]
  42e7bc:	tbz	w0, #3, 42e6b0 <ferror@plt+0x2bde0>
  42e7c0:	str	x27, [sp, #80]
  42e7c4:	str	x20, [sp, #96]
  42e7c8:	ldr	x22, [x19, #136]
  42e7cc:	mov	x0, x22
  42e7d0:	bl	42acb4 <ferror@plt+0x283e4>
  42e7d4:	cbz	x0, 42e880 <ferror@plt+0x2bfb0>
  42e7d8:	ldrh	w0, [x20, #6]
  42e7dc:	tbz	w0, #3, 42e880 <ferror@plt+0x2bfb0>
  42e7e0:	ldr	w0, [x22, #48]
  42e7e4:	cmp	w0, #0x2
  42e7e8:	b.eq	42e898 <ferror@plt+0x2bfc8>  // b.none
  42e7ec:	ldr	w27, [x19, #176]
  42e7f0:	mov	x21, #0x0                   	// #0
  42e7f4:	b	42e8ec <ferror@plt+0x2c01c>
  42e7f8:	str	x27, [sp, #80]
  42e7fc:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c094>
  42e800:	add	x2, x2, #0x3b0
  42e804:	mov	w1, #0xa2f                 	// #2607
  42e808:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b094>
  42e80c:	add	x0, x0, #0xb98
  42e810:	bl	4062a0 <ferror@plt+0x39d0>
  42e814:	cbnz	w1, 42e828 <ferror@plt+0x2bf58>
  42e818:	ldr	x20, [x2], #8
  42e81c:	ldr	w24, [x20]
  42e820:	str	x2, [x0, #16]
  42e824:	b	42e7b8 <ferror@plt+0x2bee8>
  42e828:	cmp	w1, #0x2
  42e82c:	b.ne	42e864 <ferror@plt+0x2bf94>  // b.any
  42e830:	ldr	x1, [x0, #40]
  42e834:	ldr	x20, [x2]
  42e838:	ldr	x2, [x1, #8]
  42e83c:	cbz	x2, 42e85c <ferror@plt+0x2bf8c>
  42e840:	ldr	x2, [x1, #16]
  42e844:	ldr	w24, [x2], #4
  42e848:	str	x2, [x1, #16]
  42e84c:	ldr	x1, [x0, #16]
  42e850:	add	x1, x1, #0x8
  42e854:	str	x1, [x0, #16]
  42e858:	b	42e7b8 <ferror@plt+0x2bee8>
  42e85c:	ldr	w24, [x20]
  42e860:	b	42e84c <ferror@plt+0x2bf7c>
  42e864:	str	x27, [sp, #80]
  42e868:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c094>
  42e86c:	add	x2, x2, #0x3c8
  42e870:	mov	w1, #0xa59                 	// #2649
  42e874:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b094>
  42e878:	add	x0, x0, #0xb98
  42e87c:	bl	4062a0 <ferror@plt+0x39d0>
  42e880:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c094>
  42e884:	add	x2, x2, #0x3e8
  42e888:	mov	w1, #0x352                 	// #850
  42e88c:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b094>
  42e890:	add	x0, x0, #0xb98
  42e894:	bl	4062a0 <ferror@plt+0x39d0>
  42e898:	ldr	x0, [x22, #40]
  42e89c:	ldr	x0, [x0, #16]
  42e8a0:	ldur	w27, [x0, #-4]
  42e8a4:	b	42e7f0 <ferror@plt+0x2bf20>
  42e8a8:	ldr	x21, [x22, #16]
  42e8ac:	add	x0, x21, #0x18
  42e8b0:	str	x0, [x22, #16]
  42e8b4:	ldrb	w0, [x21, #4]
  42e8b8:	cmp	w0, #0x53
  42e8bc:	b.ne	42e8c8 <ferror@plt+0x2bff8>  // b.any
  42e8c0:	ldrh	w0, [x21, #6]
  42e8c4:	tbnz	w0, #3, 42e93c <ferror@plt+0x2c06c>
  42e8c8:	mov	x3, x21
  42e8cc:	add	x2, sp, #0x60
  42e8d0:	mov	w1, w27
  42e8d4:	mov	x0, x19
  42e8d8:	bl	42ba2c <ferror@plt+0x2915c>
  42e8dc:	and	w0, w0, #0xff
  42e8e0:	cbz	w0, 42e954 <ferror@plt+0x2c084>
  42e8e4:	ldrh	w0, [x21, #6]
  42e8e8:	tbz	w0, #3, 42e954 <ferror@plt+0x2c084>
  42e8ec:	ldr	w0, [x22, #48]
  42e8f0:	cmp	w0, #0x1
  42e8f4:	b.eq	42e8a8 <ferror@plt+0x2bfd8>  // b.none
  42e8f8:	cbnz	w0, 42e910 <ferror@plt+0x2c040>
  42e8fc:	ldr	x0, [x22, #16]
  42e900:	add	x1, x0, #0x8
  42e904:	str	x1, [x22, #16]
  42e908:	ldr	x21, [x0]
  42e90c:	b	42e8b4 <ferror@plt+0x2bfe4>
  42e910:	cmp	w0, #0x2
  42e914:	b.ne	42e8b4 <ferror@plt+0x2bfe4>  // b.any
  42e918:	ldr	x0, [x22, #16]
  42e91c:	add	x1, x0, #0x8
  42e920:	str	x1, [x22, #16]
  42e924:	ldr	x21, [x0]
  42e928:	ldr	x1, [x22, #40]
  42e92c:	ldr	x0, [x1, #16]
  42e930:	add	x0, x0, #0x4
  42e934:	str	x0, [x1, #16]
  42e938:	b	42e8b4 <ferror@plt+0x2bfe4>
  42e93c:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c094>
  42e940:	add	x2, x2, #0x3e8
  42e944:	mov	w1, #0x380                 	// #896
  42e948:	adrp	x0, 462000 <_obstack_memory_used@@Base+0x1b094>
  42e94c:	add	x0, x0, #0xb98
  42e950:	bl	4062a0 <ferror@plt+0x39d0>
  42e954:	ldr	w0, [x22, #48]
  42e958:	cmp	w0, #0x2
  42e95c:	b.eq	42e984 <ferror@plt+0x2c0b4>  // b.none
  42e960:	mov	w3, #0x1                   	// #1
  42e964:	ldr	x2, [sp, #96]
  42e968:	mov	x1, #0x0                   	// #0
  42e96c:	mov	x0, x19
  42e970:	bl	42b56c <ferror@plt+0x28c9c>
  42e974:	ldrb	w0, [x19, #16]
  42e978:	cbz	w0, 42e9dc <ferror@plt+0x2c10c>
  42e97c:	ldr	x27, [sp, #80]
  42e980:	b	42e5e4 <ferror@plt+0x2bd14>
  42e984:	str	xzr, [sp, #104]
  42e988:	add	x2, sp, #0x68
  42e98c:	mov	x1, #0x1                   	// #1
  42e990:	mov	x0, x19
  42e994:	bl	42ae58 <ferror@plt+0x28588>
  42e998:	mov	x21, x0
  42e99c:	mov	w6, #0x0                   	// #0
  42e9a0:	mov	x5, #0x0                   	// #0
  42e9a4:	mov	w4, #0x0                   	// #0
  42e9a8:	mov	w3, w27
  42e9ac:	ldr	x2, [sp, #96]
  42e9b0:	ldr	x1, [sp, #104]
  42e9b4:	bl	42aea0 <ferror@plt+0x285d0>
  42e9b8:	ldr	x0, [x22, #40]
  42e9bc:	mov	w5, #0x1                   	// #1
  42e9c0:	ldr	x4, [x21, #8]
  42e9c4:	ldr	x3, [sp, #104]
  42e9c8:	mov	x2, x21
  42e9cc:	ldr	x1, [x0]
  42e9d0:	mov	x0, x19
  42e9d4:	bl	42ad2c <ferror@plt+0x2845c>
  42e9d8:	b	42e974 <ferror@plt+0x2c0a4>
  42e9dc:	mov	x1, x20
  42e9e0:	mov	x0, x19
  42e9e4:	bl	42ae28 <ferror@plt+0x28558>
  42e9e8:	mov	x20, x0
  42e9ec:	ldr	x27, [sp, #80]
  42e9f0:	b	42e63c <ferror@plt+0x2bd6c>
  42e9f4:	cbz	w21, 42e63c <ferror@plt+0x2bd6c>
  42e9f8:	mov	w1, #0x0                   	// #0
  42e9fc:	mov	x0, x19
  42ea00:	bl	427d20 <ferror@plt+0x25450>
  42ea04:	mov	x1, x0
  42ea08:	ldrb	w0, [x0, #4]
  42ea0c:	cmp	w0, #0x53
  42ea10:	b.eq	42e63c <ferror@plt+0x2bd6c>  // b.none
  42ea14:	ldrh	w0, [x1, #6]
  42ea18:	tbnz	w0, #0, 42e63c <ferror@plt+0x2bd6c>
  42ea1c:	mov	x0, x19
  42ea20:	bl	42ae28 <ferror@plt+0x28558>
  42ea24:	mov	w3, #0x1                   	// #1
  42ea28:	mov	x2, x0
  42ea2c:	mov	x1, #0x0                   	// #0
  42ea30:	mov	x0, x19
  42ea34:	bl	42b56c <ferror@plt+0x28c9c>
  42ea38:	b	42e63c <ferror@plt+0x2bd6c>
  42ea3c:	mov	w3, w24
  42ea40:	mov	x2, x20
  42ea44:	mov	x1, x21
  42ea48:	mov	x0, x19
  42ea4c:	bl	42cd74 <ferror@plt+0x2a4a4>
  42ea50:	b	42e774 <ferror@plt+0x2bea4>
  42ea54:	mov	x0, x19
  42ea58:	bl	4244e0 <ferror@plt+0x21c10>
  42ea5c:	ldrb	w1, [x20, #4]
  42ea60:	strb	w1, [x0, #4]
  42ea64:	ldrh	w1, [x20, #6]
  42ea68:	orr	w1, w1, #0x400
  42ea6c:	strh	w1, [x0, #6]
  42ea70:	ldp	x2, x3, [x20, #8]
  42ea74:	stp	x2, x3, [x0, #8]
  42ea78:	mov	x20, x0
  42ea7c:	b	42e63c <ferror@plt+0x2bd6c>
  42ea80:	ldr	w0, [x19, #48]
  42ea84:	b	42e67c <ferror@plt+0x2bdac>
  42ea88:	stp	x29, x30, [sp, #-16]!
  42ea8c:	mov	x29, sp
  42ea90:	mov	x1, #0x0                   	// #0
  42ea94:	bl	42e5b4 <ferror@plt+0x2bce4>
  42ea98:	ldp	x29, x30, [sp], #16
  42ea9c:	ret
  42eaa0:	stp	x29, x30, [sp, #-32]!
  42eaa4:	mov	x29, sp
  42eaa8:	str	x19, [sp, #16]
  42eaac:	mov	x19, x0
  42eab0:	ldr	x1, [x0]
  42eab4:	ldrb	w0, [x1, #105]
  42eab8:	orr	w0, w0, #0x4
  42eabc:	strb	w0, [x1, #105]
  42eac0:	ldrb	w0, [x19, #27]
  42eac4:	add	w0, w0, #0x1
  42eac8:	strb	w0, [x19, #27]
  42eacc:	ldrb	w0, [x19, #24]
  42ead0:	add	w0, w0, #0x1
  42ead4:	strb	w0, [x19, #24]
  42ead8:	ldrb	w0, [x19, #1160]
  42eadc:	cbz	w0, 42eb14 <ferror@plt+0x2c244>
  42eae0:	mov	x0, x19
  42eae4:	bl	43159c <ferror@plt+0x2eccc>
  42eae8:	and	w0, w0, #0xff
  42eaec:	cbnz	w0, 42eae0 <ferror@plt+0x2c210>
  42eaf0:	ldrb	w0, [x19, #27]
  42eaf4:	sub	w0, w0, #0x1
  42eaf8:	strb	w0, [x19, #27]
  42eafc:	ldrb	w0, [x19, #24]
  42eb00:	sub	w0, w0, #0x1
  42eb04:	strb	w0, [x19, #24]
  42eb08:	ldr	x19, [sp, #16]
  42eb0c:	ldp	x29, x30, [sp], #32
  42eb10:	ret
  42eb14:	mov	x0, x19
  42eb18:	bl	42ea88 <ferror@plt+0x2c1b8>
  42eb1c:	ldrb	w0, [x0, #4]
  42eb20:	cmp	w0, #0x16
  42eb24:	b.ne	42eb14 <ferror@plt+0x2c244>  // b.any
  42eb28:	b	42eaf0 <ferror@plt+0x2c220>
  42eb2c:	stp	x29, x30, [sp, #-16]!
  42eb30:	mov	x29, sp
  42eb34:	bl	42e5b4 <ferror@plt+0x2bce4>
  42eb38:	ldp	x29, x30, [sp], #16
  42eb3c:	ret
  42eb40:	stp	x29, x30, [sp, #-96]!
  42eb44:	mov	x29, sp
  42eb48:	stp	x19, x20, [sp, #16]
  42eb4c:	stp	x21, x22, [sp, #32]
  42eb50:	stp	x23, x24, [sp, #48]
  42eb54:	stp	x25, x26, [sp, #64]
  42eb58:	mov	x23, x0
  42eb5c:	mov	x25, x1
  42eb60:	ldr	x20, [x1, #24]
  42eb64:	ldr	w0, [x1, #8]
  42eb68:	add	w0, w0, w0, lsl #2
  42eb6c:	lsl	w0, w0, #1
  42eb70:	ldrb	w4, [x20, #19]
  42eb74:	add	w19, w0, #0x2
  42eb78:	tbz	w4, #2, 42ebac <ferror@plt+0x2c2dc>
  42eb7c:	add	w19, w0, #0x6
  42eb80:	ldrh	w2, [x20, #16]
  42eb84:	cbz	w2, 42ebac <ferror@plt+0x2c2dc>
  42eb88:	ldr	x3, [x20]
  42eb8c:	mov	x0, #0x0                   	// #0
  42eb90:	ldr	x1, [x3, x0, lsl #3]
  42eb94:	ldr	w1, [x1, #8]
  42eb98:	add	w1, w1, #0x1
  42eb9c:	add	w19, w19, w1
  42eba0:	add	x0, x0, #0x1
  42eba4:	cmp	w2, w0
  42eba8:	b.hi	42eb90 <ferror@plt+0x2c2c0>  // b.pmore
  42ebac:	ldrb	w0, [x23, #1160]
  42ebb0:	cbnz	w0, 42ebcc <ferror@plt+0x2c2fc>
  42ebb4:	tbnz	w4, #6, 42ec1c <ferror@plt+0x2c34c>
  42ebb8:	ldr	w24, [x20, #12]
  42ebbc:	cbz	w24, 42ebd8 <ferror@plt+0x2c308>
  42ebc0:	add	x22, x20, #0x18
  42ebc4:	mov	w21, #0x0                   	// #0
  42ebc8:	b	42ec84 <ferror@plt+0x2c3b4>
  42ebcc:	mov	x0, x20
  42ebd0:	bl	431600 <ferror@plt+0x2ed30>
  42ebd4:	add	w19, w19, w0
  42ebd8:	ldr	w0, [x23, #512]
  42ebdc:	cmp	w0, w19
  42ebe0:	b.cc	42ecac <ferror@plt+0x2c3dc>  // b.lo, b.ul, b.last
  42ebe4:	mov	x1, x25
  42ebe8:	ldr	x0, [x23, #504]
  42ebec:	bl	4246f0 <ferror@plt+0x21e20>
  42ebf0:	mov	x19, x0
  42ebf4:	ldrb	w0, [x20, #19]
  42ebf8:	tbz	w0, #2, 42ed34 <ferror@plt+0x2c464>
  42ebfc:	mov	w0, #0x28                  	// #40
  42ec00:	strb	w0, [x19], #1
  42ec04:	ldrh	w0, [x20, #16]
  42ec08:	cbz	w0, 42ed2c <ferror@plt+0x2c45c>
  42ec0c:	mov	w22, #0x0                   	// #0
  42ec10:	mov	w24, #0x2e                  	// #46
  42ec14:	mov	w25, #0x2c                  	// #44
  42ec18:	b	42ece8 <ferror@plt+0x2c418>
  42ec1c:	ldr	w1, [x20, #12]
  42ec20:	mov	w24, w1
  42ec24:	sub	w1, w1, #0x1
  42ec28:	cbz	w24, 42ebd8 <ferror@plt+0x2c308>
  42ec2c:	ubfiz	x0, x1, #1, #32
  42ec30:	add	x0, x0, w1, uxtw
  42ec34:	add	x0, x20, x0, lsl #3
  42ec38:	ldrb	w0, [x0, #28]
  42ec3c:	cmp	w0, #0x26
  42ec40:	b.eq	42ec20 <ferror@plt+0x2c350>  // b.none
  42ec44:	b	42ebc0 <ferror@plt+0x2c2f0>
  42ec48:	mov	x0, x22
  42ec4c:	bl	4246a8 <ferror@plt+0x21dd8>
  42ec50:	add	w19, w19, w0
  42ec54:	ldrh	w2, [x22, #6]
  42ec58:	ubfx	x0, x2, #2, #1
  42ec5c:	add	w19, w19, w0
  42ec60:	add	w0, w19, #0x3
  42ec64:	tst	x2, #0x8
  42ec68:	csel	w19, w0, w19, ne  // ne = any
  42ec6c:	and	w2, w2, #0x1
  42ec70:	add	w19, w19, w2
  42ec74:	add	w21, w21, #0x1
  42ec78:	add	x22, x22, #0x18
  42ec7c:	cmp	w21, w24
  42ec80:	b.cs	42ebd8 <ferror@plt+0x2c308>  // b.hs, b.nlast
  42ec84:	ubfiz	x2, x21, #1, #32
  42ec88:	add	x2, x2, w21, uxtw
  42ec8c:	add	x2, x20, x2, lsl #3
  42ec90:	ldrb	w0, [x2, #28]
  42ec94:	cmp	w0, #0x50
  42ec98:	b.ne	42ec48 <ferror@plt+0x2c378>  // b.any
  42ec9c:	ldr	x0, [x22, #16]
  42eca0:	ldr	w0, [x0, #8]
  42eca4:	add	w19, w19, w0
  42eca8:	b	42ec54 <ferror@plt+0x2c384>
  42ecac:	mov	w1, w19
  42ecb0:	ldr	x0, [x23, #504]
  42ecb4:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  42ecb8:	str	x0, [x23, #504]
  42ecbc:	str	w19, [x23, #512]
  42ecc0:	b	42ebe4 <ferror@plt+0x2c314>
  42ecc4:	ldrb	w0, [x20, #19]
  42ecc8:	tbz	w0, #3, 42ed2c <ferror@plt+0x2c45c>
  42eccc:	strb	w24, [x19]
  42ecd0:	strb	w24, [x19, #1]
  42ecd4:	strb	w24, [x19, #2]
  42ecd8:	add	x19, x19, #0x3
  42ecdc:	ldrh	w0, [x20, #16]
  42ece0:	cmp	w0, w22
  42ece4:	b.ls	42ed2c <ferror@plt+0x2c45c>  // b.plast
  42ece8:	ldr	x0, [x20]
  42ecec:	ldr	x21, [x0, w22, uxtw #3]
  42ecf0:	ldr	x0, [x23, #1272]
  42ecf4:	cmp	x0, x21
  42ecf8:	b.eq	42ed14 <ferror@plt+0x2c444>  // b.none
  42ecfc:	ldr	w2, [x21, #8]
  42ed00:	ldr	x1, [x21]
  42ed04:	mov	x0, x19
  42ed08:	bl	402260 <memcpy@plt>
  42ed0c:	ldr	w0, [x21, #8]
  42ed10:	add	x19, x19, x0
  42ed14:	add	w22, w22, #0x1
  42ed18:	ldrh	w0, [x20, #16]
  42ed1c:	cmp	w22, w0
  42ed20:	b.cs	42ecc4 <ferror@plt+0x2c3f4>  // b.hs, b.nlast
  42ed24:	strb	w25, [x19], #1
  42ed28:	b	42ecdc <ferror@plt+0x2c40c>
  42ed2c:	mov	w0, #0x29                  	// #41
  42ed30:	strb	w0, [x19], #1
  42ed34:	mov	w0, #0x20                  	// #32
  42ed38:	strb	w0, [x19], #1
  42ed3c:	ldrb	w0, [x23, #1160]
  42ed40:	cbnz	w0, 42ed70 <ferror@plt+0x2c4a0>
  42ed44:	ldr	w25, [x20, #12]
  42ed48:	cbz	w25, 42ed80 <ferror@plt+0x2c4b0>
  42ed4c:	ldrb	w0, [x20, #19]
  42ed50:	tbnz	w0, #6, 42ee4c <ferror@plt+0x2c57c>
  42ed54:	stp	x27, x28, [sp, #80]
  42ed58:	add	x24, x20, #0x18
  42ed5c:	mov	w21, #0x0                   	// #0
  42ed60:	mov	w27, #0x20                  	// #32
  42ed64:	mov	w26, #0x23                  	// #35
  42ed68:	mov	w28, #0x1                   	// #1
  42ed6c:	b	42eddc <ferror@plt+0x2c50c>
  42ed70:	mov	x1, x19
  42ed74:	mov	x0, x20
  42ed78:	bl	431668 <ferror@plt+0x2ed98>
  42ed7c:	mov	x19, x0
  42ed80:	strb	wzr, [x19]
  42ed84:	ldr	x0, [x23, #504]
  42ed88:	ldp	x19, x20, [sp, #16]
  42ed8c:	ldp	x21, x22, [sp, #32]
  42ed90:	ldp	x23, x24, [sp, #48]
  42ed94:	ldp	x25, x26, [sp, #64]
  42ed98:	ldp	x29, x30, [sp], #96
  42ed9c:	ret
  42eda0:	stp	x27, x28, [sp, #80]
  42eda4:	b	42ed58 <ferror@plt+0x2c488>
  42eda8:	ldr	x0, [x22, #16]
  42edac:	ldr	w2, [x0, #8]
  42edb0:	ldr	x1, [x0]
  42edb4:	mov	x0, x19
  42edb8:	bl	402260 <memcpy@plt>
  42edbc:	ldr	x0, [x22, #16]
  42edc0:	ldr	w0, [x0, #8]
  42edc4:	add	x19, x19, x0
  42edc8:	b	42ee28 <ferror@plt+0x2c558>
  42edcc:	add	w21, w21, #0x1
  42edd0:	add	x24, x24, #0x18
  42edd4:	cmp	w25, w21
  42edd8:	b.ls	42ee44 <ferror@plt+0x2c574>  // b.plast
  42eddc:	mov	x22, x24
  42ede0:	ldrh	w0, [x24, #6]
  42ede4:	tbz	w0, #0, 42edec <ferror@plt+0x2c51c>
  42ede8:	strb	w27, [x19], #1
  42edec:	ldrh	w0, [x22, #6]
  42edf0:	tbz	w0, #2, 42edf8 <ferror@plt+0x2c528>
  42edf4:	strb	w26, [x19], #1
  42edf8:	ubfiz	x0, x21, #1, #32
  42edfc:	add	x0, x0, w21, uxtw
  42ee00:	add	x0, x20, x0, lsl #3
  42ee04:	ldrb	w0, [x0, #28]
  42ee08:	cmp	w0, #0x50
  42ee0c:	b.eq	42eda8 <ferror@plt+0x2c4d8>  // b.none
  42ee10:	mov	w3, w28
  42ee14:	mov	x2, x19
  42ee18:	mov	x1, x22
  42ee1c:	mov	x0, x23
  42ee20:	bl	424774 <ferror@plt+0x21ea4>
  42ee24:	mov	x19, x0
  42ee28:	ldrh	w0, [x22, #6]
  42ee2c:	tbz	w0, #3, 42edcc <ferror@plt+0x2c4fc>
  42ee30:	strb	w27, [x19]
  42ee34:	strb	w26, [x19, #1]
  42ee38:	strb	w26, [x19, #2]
  42ee3c:	add	x19, x19, #0x3
  42ee40:	b	42edcc <ferror@plt+0x2c4fc>
  42ee44:	ldp	x27, x28, [sp, #80]
  42ee48:	b	42ed80 <ferror@plt+0x2c4b0>
  42ee4c:	sub	w1, w25, #0x1
  42ee50:	add	w25, w1, #0x1
  42ee54:	ubfiz	x0, x1, #1, #32
  42ee58:	add	x0, x0, w1, uxtw
  42ee5c:	add	x0, x20, x0, lsl #3
  42ee60:	ldrb	w0, [x0, #28]
  42ee64:	cmp	w0, #0x26
  42ee68:	b.ne	42eda0 <ferror@plt+0x2c4d0>  // b.any
  42ee6c:	sub	w1, w1, #0x1
  42ee70:	cmn	w1, #0x1
  42ee74:	b.ne	42ee50 <ferror@plt+0x2c580>  // b.any
  42ee78:	b	42ed80 <ferror@plt+0x2c4b0>
  42ee7c:	stp	x29, x30, [sp, #-48]!
  42ee80:	mov	x29, sp
  42ee84:	stp	x19, x20, [sp, #16]
  42ee88:	stp	x21, x22, [sp, #32]
  42ee8c:	mov	x21, x0
  42ee90:	mov	x19, x1
  42ee94:	ldr	x0, [x0, #32]
  42ee98:	cbz	x0, 42ef20 <ferror@plt+0x2c650>
  42ee9c:	ldr	w0, [x21, #48]
  42eea0:	cbz	w0, 42ef20 <ferror@plt+0x2c650>
  42eea4:	mov	w20, #0x0                   	// #0
  42eea8:	b	42eebc <ferror@plt+0x2c5ec>
  42eeac:	add	w20, w20, #0x1
  42eeb0:	ldr	w0, [x21, #48]
  42eeb4:	cmp	w0, w20
  42eeb8:	b.ls	42ef20 <ferror@plt+0x2c650>  // b.plast
  42eebc:	mov	w22, w20
  42eec0:	ldr	x1, [x21, #40]
  42eec4:	ldr	x0, [x21, #32]
  42eec8:	ldr	x2, [x1, x22, lsl #3]
  42eecc:	mov	x1, x19
  42eed0:	ldr	x0, [x0, x22, lsl #3]
  42eed4:	bl	445958 <ferror@plt+0x43088>
  42eed8:	cbnz	w0, 42eeac <ferror@plt+0x2c5dc>
  42eedc:	ldr	x0, [x21, #40]
  42eee0:	ldr	x0, [x0, x22, lsl #3]
  42eee4:	add	x1, x19, x0
  42eee8:	ldrb	w2, [x19, x0]
  42eeec:	cmp	w2, #0x2f
  42eef0:	b.ne	42eeac <ferror@plt+0x2c5dc>  // b.any
  42eef4:	ldrb	w2, [x1, #1]
  42eef8:	cmp	w2, #0x2e
  42eefc:	b.ne	42ef18 <ferror@plt+0x2c648>  // b.any
  42ef00:	ldrb	w2, [x1, #2]
  42ef04:	cmp	w2, #0x2e
  42ef08:	b.ne	42ef18 <ferror@plt+0x2c648>  // b.any
  42ef0c:	ldrb	w1, [x1, #3]
  42ef10:	cmp	w1, #0x2f
  42ef14:	b.eq	42eeac <ferror@plt+0x2c5dc>  // b.none
  42ef18:	add	x0, x0, #0x1
  42ef1c:	add	x19, x19, x0
  42ef20:	ldrb	w0, [x19]
  42ef24:	cmp	w0, #0x2e
  42ef28:	b.eq	42ef40 <ferror@plt+0x2c670>  // b.none
  42ef2c:	mov	x0, x19
  42ef30:	b	42ef74 <ferror@plt+0x2c6a4>
  42ef34:	ldrb	w0, [x19]
  42ef38:	cmp	w0, #0x2e
  42ef3c:	b.ne	42ef84 <ferror@plt+0x2c6b4>  // b.any
  42ef40:	ldrb	w0, [x19, #1]
  42ef44:	cmp	w0, #0x2f
  42ef48:	b.ne	42ef70 <ferror@plt+0x2c6a0>  // b.any
  42ef4c:	add	x0, x19, #0x2
  42ef50:	ldrb	w1, [x19, #2]
  42ef54:	mov	x19, x0
  42ef58:	cmp	w1, #0x2f
  42ef5c:	b.ne	42ef34 <ferror@plt+0x2c664>  // b.any
  42ef60:	ldrb	w0, [x19, #1]!
  42ef64:	cmp	w0, #0x2f
  42ef68:	b.eq	42ef60 <ferror@plt+0x2c690>  // b.none
  42ef6c:	b	42ef34 <ferror@plt+0x2c664>
  42ef70:	mov	x0, x19
  42ef74:	ldp	x19, x20, [sp, #16]
  42ef78:	ldp	x21, x22, [sp, #32]
  42ef7c:	ldp	x29, x30, [sp], #48
  42ef80:	ret
  42ef84:	mov	x0, x19
  42ef88:	b	42ef74 <ferror@plt+0x2c6a4>
  42ef8c:	stp	x29, x30, [sp, #-32]!
  42ef90:	mov	x29, sp
  42ef94:	str	x19, [sp, #16]
  42ef98:	mov	x19, x0
  42ef9c:	ldrb	w0, [x0]
  42efa0:	cbz	w0, 42f020 <ferror@plt+0x2c750>
  42efa4:	sub	x4, x19, #0x1
  42efa8:	mov	x3, x4
  42efac:	mov	w1, #0x0                   	// #0
  42efb0:	b	42efcc <ferror@plt+0x2c6fc>
  42efb4:	cmp	w0, #0x24
  42efb8:	cinc	w1, w1, eq  // eq = none
  42efbc:	add	w1, w1, #0x1
  42efc0:	add	x3, x3, #0x1
  42efc4:	ldrb	w0, [x3, #1]
  42efc8:	cbz	w0, 42f024 <ferror@plt+0x2c754>
  42efcc:	cmp	w0, #0x23
  42efd0:	b.eq	42f018 <ferror@plt+0x2c748>  // b.none
  42efd4:	b.hi	42efb4 <ferror@plt+0x2c6e4>  // b.pmore
  42efd8:	cmp	w0, #0x9
  42efdc:	b.eq	42efe8 <ferror@plt+0x2c718>  // b.none
  42efe0:	cmp	w0, #0x20
  42efe4:	b.ne	42efbc <ferror@plt+0x2c6ec>  // b.any
  42efe8:	mov	x2, x3
  42efec:	cmp	x19, x3
  42eff0:	b.hi	42f010 <ferror@plt+0x2c740>  // b.pmore
  42eff4:	ldrb	w0, [x2]
  42eff8:	cmp	w0, #0x5c
  42effc:	b.ne	42f010 <ferror@plt+0x2c740>  // b.any
  42f000:	add	w1, w1, #0x1
  42f004:	sub	x2, x2, #0x1
  42f008:	cmp	x2, x4
  42f00c:	b.ne	42eff4 <ferror@plt+0x2c724>  // b.any
  42f010:	add	w1, w1, #0x1
  42f014:	b	42efbc <ferror@plt+0x2c6ec>
  42f018:	add	w1, w1, #0x1
  42f01c:	b	42efbc <ferror@plt+0x2c6ec>
  42f020:	mov	w1, #0x0                   	// #0
  42f024:	add	w1, w1, #0x1
  42f028:	sxtw	x0, w1
  42f02c:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  42f030:	ldrb	w3, [x19]
  42f034:	cbz	w3, 42f0c4 <ferror@plt+0x2c7f4>
  42f038:	sub	x7, x19, #0x1
  42f03c:	mov	x5, x7
  42f040:	mov	x1, x0
  42f044:	mov	w6, #0x5c                  	// #92
  42f048:	mov	w8, #0x24                  	// #36
  42f04c:	b	42f074 <ferror@plt+0x2c7a4>
  42f050:	cmp	w3, #0x24
  42f054:	b.ne	42f064 <ferror@plt+0x2c794>  // b.any
  42f058:	strb	w8, [x1], #1
  42f05c:	b	42f064 <ferror@plt+0x2c794>
  42f060:	strb	w6, [x1], #1
  42f064:	strb	w3, [x1], #1
  42f068:	add	x5, x5, #0x1
  42f06c:	ldrb	w3, [x5, #1]
  42f070:	cbz	w3, 42f0c8 <ferror@plt+0x2c7f8>
  42f074:	cmp	w3, #0x23
  42f078:	b.eq	42f0bc <ferror@plt+0x2c7ec>  // b.none
  42f07c:	b.hi	42f050 <ferror@plt+0x2c780>  // b.pmore
  42f080:	cmp	w3, #0x9
  42f084:	b.eq	42f090 <ferror@plt+0x2c7c0>  // b.none
  42f088:	cmp	w3, #0x20
  42f08c:	b.ne	42f064 <ferror@plt+0x2c794>  // b.any
  42f090:	mov	x2, x5
  42f094:	cmp	x19, x5
  42f098:	b.hi	42f060 <ferror@plt+0x2c790>  // b.pmore
  42f09c:	ldrb	w4, [x2]
  42f0a0:	cmp	w4, #0x5c
  42f0a4:	b.ne	42f060 <ferror@plt+0x2c790>  // b.any
  42f0a8:	strb	w6, [x1], #1
  42f0ac:	sub	x2, x2, #0x1
  42f0b0:	cmp	x2, x7
  42f0b4:	b.ne	42f09c <ferror@plt+0x2c7cc>  // b.any
  42f0b8:	b	42f060 <ferror@plt+0x2c790>
  42f0bc:	strb	w6, [x1], #1
  42f0c0:	b	42f064 <ferror@plt+0x2c794>
  42f0c4:	mov	x1, x0
  42f0c8:	strb	wzr, [x1]
  42f0cc:	ldr	x19, [sp, #16]
  42f0d0:	ldp	x29, x30, [sp], #32
  42f0d4:	ret
  42f0d8:	stp	x29, x30, [sp, #-16]!
  42f0dc:	mov	x29, sp
  42f0e0:	mov	x1, #0x38                  	// #56
  42f0e4:	mov	x0, #0x1                   	// #1
  42f0e8:	bl	447084 <_obstack_memory_used@@Base+0x118>
  42f0ec:	ldp	x29, x30, [sp], #16
  42f0f0:	ret
  42f0f4:	stp	x29, x30, [sp, #-32]!
  42f0f8:	mov	x29, sp
  42f0fc:	stp	x19, x20, [sp, #16]
  42f100:	mov	x19, x0
  42f104:	ldr	x0, [x0]
  42f108:	cbz	x0, 42f13c <ferror@plt+0x2c86c>
  42f10c:	ldr	w0, [x19, #8]
  42f110:	cbz	w0, 42f134 <ferror@plt+0x2c864>
  42f114:	mov	w20, #0x0                   	// #0
  42f118:	ldr	x0, [x19]
  42f11c:	ldr	x0, [x0, w20, uxtw #3]
  42f120:	bl	402690 <free@plt>
  42f124:	add	w20, w20, #0x1
  42f128:	ldr	w0, [x19, #8]
  42f12c:	cmp	w0, w20
  42f130:	b.hi	42f118 <ferror@plt+0x2c848>  // b.pmore
  42f134:	ldr	x0, [x19]
  42f138:	bl	402690 <free@plt>
  42f13c:	ldr	x0, [x19, #16]
  42f140:	cbz	x0, 42f174 <ferror@plt+0x2c8a4>
  42f144:	ldr	w0, [x19, #24]
  42f148:	cbz	w0, 42f16c <ferror@plt+0x2c89c>
  42f14c:	mov	w20, #0x0                   	// #0
  42f150:	ldr	x0, [x19, #16]
  42f154:	ldr	x0, [x0, w20, uxtw #3]
  42f158:	bl	402690 <free@plt>
  42f15c:	add	w20, w20, #0x1
  42f160:	ldr	w0, [x19, #24]
  42f164:	cmp	w0, w20
  42f168:	b.hi	42f150 <ferror@plt+0x2c880>  // b.pmore
  42f16c:	ldr	x0, [x19, #16]
  42f170:	bl	402690 <free@plt>
  42f174:	ldr	x0, [x19, #32]
  42f178:	cbz	x0, 42f1b4 <ferror@plt+0x2c8e4>
  42f17c:	ldr	w0, [x19, #48]
  42f180:	cbz	w0, 42f1a4 <ferror@plt+0x2c8d4>
  42f184:	mov	w20, #0x0                   	// #0
  42f188:	ldr	x0, [x19, #32]
  42f18c:	ldr	x0, [x0, w20, uxtw #3]
  42f190:	bl	402690 <free@plt>
  42f194:	add	w20, w20, #0x1
  42f198:	ldr	w0, [x19, #48]
  42f19c:	cmp	w0, w20
  42f1a0:	b.hi	42f188 <ferror@plt+0x2c8b8>  // b.pmore
  42f1a4:	ldr	x0, [x19, #32]
  42f1a8:	bl	402690 <free@plt>
  42f1ac:	ldr	x0, [x19, #40]
  42f1b0:	bl	402690 <free@plt>
  42f1b4:	mov	x0, x19
  42f1b8:	bl	402690 <free@plt>
  42f1bc:	ldp	x19, x20, [sp, #16]
  42f1c0:	ldp	x29, x30, [sp], #32
  42f1c4:	ret
  42f1c8:	stp	x29, x30, [sp, #-48]!
  42f1cc:	mov	x29, sp
  42f1d0:	stp	x19, x20, [sp, #16]
  42f1d4:	str	x21, [sp, #32]
  42f1d8:	mov	x19, x0
  42f1dc:	mov	x21, x1
  42f1e0:	mov	w20, w2
  42f1e4:	ldr	w0, [x0, #12]
  42f1e8:	ldr	w1, [x19, #8]
  42f1ec:	cmp	w1, w0
  42f1f0:	b.eq	42f22c <ferror@plt+0x2c95c>  // b.none
  42f1f4:	mov	x1, x21
  42f1f8:	mov	x0, x19
  42f1fc:	bl	42ee7c <ferror@plt+0x2c5ac>
  42f200:	cbz	w20, 42f250 <ferror@plt+0x2c980>
  42f204:	bl	42ef8c <ferror@plt+0x2c6bc>
  42f208:	ldr	x2, [x19]
  42f20c:	ldr	w1, [x19, #8]
  42f210:	add	w3, w1, #0x1
  42f214:	str	w3, [x19, #8]
  42f218:	str	x0, [x2, w1, uxtw #3]
  42f21c:	ldp	x19, x20, [sp, #16]
  42f220:	ldr	x21, [sp, #32]
  42f224:	ldp	x29, x30, [sp], #48
  42f228:	ret
  42f22c:	add	w0, w0, #0x2
  42f230:	lsl	w0, w0, #1
  42f234:	str	w0, [x19, #12]
  42f238:	mov	w0, w0
  42f23c:	lsl	x1, x0, #3
  42f240:	ldr	x0, [x19]
  42f244:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  42f248:	str	x0, [x19]
  42f24c:	b	42f1f4 <ferror@plt+0x2c924>
  42f250:	bl	447178 <_obstack_memory_used@@Base+0x20c>
  42f254:	b	42f208 <ferror@plt+0x2c938>
  42f258:	stp	x29, x30, [sp, #-48]!
  42f25c:	mov	x29, sp
  42f260:	stp	x19, x20, [sp, #16]
  42f264:	str	x21, [sp, #32]
  42f268:	mov	x19, x0
  42f26c:	ldr	w0, [x0, #8]
  42f270:	cbnz	w0, 42f290 <ferror@plt+0x2c9c0>
  42f274:	ldrb	w0, [x1]
  42f278:	cbnz	w0, 42f2a4 <ferror@plt+0x2c9d4>
  42f27c:	mov	w2, #0x1                   	// #1
  42f280:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a094>
  42f284:	add	x1, x1, #0xea0
  42f288:	mov	x0, x19
  42f28c:	bl	42f1c8 <ferror@plt+0x2c8f8>
  42f290:	mov	sp, x29
  42f294:	ldp	x19, x20, [sp, #16]
  42f298:	ldr	x21, [sp, #32]
  42f29c:	ldp	x29, x30, [sp], #48
  42f2a0:	ret
  42f2a4:	mov	x0, x1
  42f2a8:	bl	446ba8 <ferror@plt+0x442d8>
  42f2ac:	mov	x21, x0
  42f2b0:	bl	4022b0 <strlen@plt>
  42f2b4:	add	x1, x0, #0x12
  42f2b8:	and	x1, x1, #0xfffffffffffffff0
  42f2bc:	sub	sp, sp, x1
  42f2c0:	mov	x20, sp
  42f2c4:	mov	x1, x21
  42f2c8:	mov	x0, x20
  42f2cc:	bl	402710 <strcpy@plt>
  42f2d0:	mov	w1, #0x2e                  	// #46
  42f2d4:	mov	x0, x20
  42f2d8:	bl	402550 <strrchr@plt>
  42f2dc:	cbz	x0, 42f30c <ferror@plt+0x2ca3c>
  42f2e0:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  42f2e4:	add	x1, x1, #0x4e8
  42f2e8:	ldrh	w2, [x1]
  42f2ec:	strh	w2, [x0]
  42f2f0:	ldrb	w1, [x1, #2]
  42f2f4:	strb	w1, [x0, #2]
  42f2f8:	mov	w2, #0x1                   	// #1
  42f2fc:	mov	x1, x20
  42f300:	mov	x0, x19
  42f304:	bl	42f1c8 <ferror@plt+0x2c8f8>
  42f308:	b	42f290 <ferror@plt+0x2c9c0>
  42f30c:	mov	x0, x20
  42f310:	bl	4022b0 <strlen@plt>
  42f314:	add	x0, x20, x0
  42f318:	b	42f2e0 <ferror@plt+0x2ca10>
  42f31c:	stp	x29, x30, [sp, #-32]!
  42f320:	mov	x29, sp
  42f324:	stp	x19, x20, [sp, #16]
  42f328:	mov	x19, x0
  42f32c:	bl	42ee7c <ferror@plt+0x2c5ac>
  42f330:	bl	42ef8c <ferror@plt+0x2c6bc>
  42f334:	mov	x20, x0
  42f338:	ldr	w0, [x19, #28]
  42f33c:	ldr	w1, [x19, #24]
  42f340:	cmp	w1, w0
  42f344:	b.eq	42f368 <ferror@plt+0x2ca98>  // b.none
  42f348:	ldr	x1, [x19, #16]
  42f34c:	ldr	w0, [x19, #24]
  42f350:	add	w2, w0, #0x1
  42f354:	str	w2, [x19, #24]
  42f358:	str	x20, [x1, w0, uxtw #3]
  42f35c:	ldp	x19, x20, [sp, #16]
  42f360:	ldp	x29, x30, [sp], #32
  42f364:	ret
  42f368:	add	w0, w0, #0x4
  42f36c:	lsl	w0, w0, #1
  42f370:	str	w0, [x19, #28]
  42f374:	mov	w0, w0
  42f378:	lsl	x1, x0, #3
  42f37c:	ldr	x0, [x19, #16]
  42f380:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  42f384:	str	x0, [x19, #16]
  42f388:	b	42f348 <ferror@plt+0x2ca78>
  42f38c:	stp	x29, x30, [sp, #-64]!
  42f390:	mov	x29, sp
  42f394:	stp	x19, x20, [sp, #16]
  42f398:	stp	x21, x22, [sp, #32]
  42f39c:	mov	x20, x0
  42f3a0:	mov	x21, x1
  42f3a4:	ldrb	w0, [x1]
  42f3a8:	cbz	w0, 42f484 <ferror@plt+0x2cbb4>
  42f3ac:	str	x23, [sp, #48]
  42f3b0:	b	42f3e8 <ferror@plt+0x2cb18>
  42f3b4:	mov	x19, x21
  42f3b8:	b	42f40c <ferror@plt+0x2cb3c>
  42f3bc:	ldr	w1, [x20, #48]
  42f3c0:	ldr	x0, [x20, #32]
  42f3c4:	str	x23, [x0, x1, lsl #3]
  42f3c8:	ldr	w1, [x20, #48]
  42f3cc:	ldr	x0, [x20, #40]
  42f3d0:	str	x22, [x0, x1, lsl #3]
  42f3d4:	ldr	w0, [x20, #48]
  42f3d8:	add	w0, w0, #0x1
  42f3dc:	str	w0, [x20, #48]
  42f3e0:	ldrb	w0, [x21]
  42f3e4:	cbz	w0, 42f480 <ferror@plt+0x2cbb0>
  42f3e8:	ldrb	w0, [x21]
  42f3ec:	cmp	w0, #0x3a
  42f3f0:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  42f3f4:	b.eq	42f3b4 <ferror@plt+0x2cae4>  // b.none
  42f3f8:	mov	x19, x21
  42f3fc:	ldrb	w2, [x19, #1]!
  42f400:	cmp	w2, #0x3a
  42f404:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  42f408:	b.ne	42f3fc <ferror@plt+0x2cb2c>  // b.any
  42f40c:	sub	x22, x19, x21
  42f410:	add	x0, x22, #0x1
  42f414:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  42f418:	mov	x23, x0
  42f41c:	mov	x2, x22
  42f420:	mov	x1, x21
  42f424:	bl	402260 <memcpy@plt>
  42f428:	strb	wzr, [x23, x22]
  42f42c:	ldrb	w0, [x19]
  42f430:	cmp	w0, #0x3a
  42f434:	cinc	x21, x19, eq  // eq = none
  42f438:	ldr	w0, [x20, #52]
  42f43c:	ldr	w1, [x20, #48]
  42f440:	cmp	w1, w0
  42f444:	b.ne	42f3bc <ferror@plt+0x2caec>  // b.any
  42f448:	add	w0, w0, #0x4
  42f44c:	lsl	w0, w0, #1
  42f450:	str	w0, [x20, #52]
  42f454:	mov	w0, w0
  42f458:	lsl	x1, x0, #3
  42f45c:	ldr	x0, [x20, #32]
  42f460:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  42f464:	str	x0, [x20, #32]
  42f468:	ldr	w1, [x20, #52]
  42f46c:	lsl	x1, x1, #3
  42f470:	ldr	x0, [x20, #40]
  42f474:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  42f478:	str	x0, [x20, #40]
  42f47c:	b	42f3bc <ferror@plt+0x2caec>
  42f480:	ldr	x23, [sp, #48]
  42f484:	ldp	x19, x20, [sp, #16]
  42f488:	ldp	x21, x22, [sp, #32]
  42f48c:	ldp	x29, x30, [sp], #64
  42f490:	ret
  42f494:	stp	x29, x30, [sp, #-96]!
  42f498:	mov	x29, sp
  42f49c:	stp	x19, x20, [sp, #16]
  42f4a0:	stp	x21, x22, [sp, #32]
  42f4a4:	stp	x23, x24, [sp, #48]
  42f4a8:	stp	x25, x26, [sp, #64]
  42f4ac:	stp	x27, x28, [sp, #80]
  42f4b0:	mov	x20, x0
  42f4b4:	mov	x21, x1
  42f4b8:	sub	w0, w2, #0x1
  42f4bc:	cmp	w0, #0x20
  42f4c0:	mov	w24, #0x22                  	// #34
  42f4c4:	csel	w24, w2, w24, hi  // hi = pmore
  42f4c8:	ldr	w19, [x20, #8]
  42f4cc:	cbz	w19, 42f590 <ferror@plt+0x2ccc0>
  42f4d0:	ldr	x0, [x20]
  42f4d4:	ldr	x0, [x0]
  42f4d8:	bl	4022b0 <strlen@plt>
  42f4dc:	mov	w19, w0
  42f4e0:	mov	w22, #0x0                   	// #0
  42f4e4:	mov	x25, #0x0                   	// #0
  42f4e8:	mov	w27, #0x20                  	// #32
  42f4ec:	adrp	x26, 463000 <_obstack_memory_used@@Base+0x1c094>
  42f4f0:	add	x26, x26, #0x4f0
  42f4f4:	mov	x28, #0x4                   	// #4
  42f4f8:	b	42f528 <ferror@plt+0x2cc58>
  42f4fc:	mov	x3, x21
  42f500:	mov	x2, x28
  42f504:	mov	x1, #0x1                   	// #1
  42f508:	mov	x0, x26
  42f50c:	bl	402290 <fwrite_unlocked@plt>
  42f510:	add	w19, w23, #0x1
  42f514:	b	42f528 <ferror@plt+0x2cc58>
  42f518:	mov	w1, #0x20                  	// #32
  42f51c:	mov	x0, x21
  42f520:	bl	4025a0 <__overflow@plt>
  42f524:	add	w19, w19, #0x1
  42f528:	ldr	x0, [x20]
  42f52c:	mov	x1, x21
  42f530:	ldr	x0, [x0, x25]
  42f534:	bl	4027c0 <fputs_unlocked@plt>
  42f538:	add	w22, w22, #0x1
  42f53c:	ldr	w0, [x20, #8]
  42f540:	cmp	w0, w22
  42f544:	b.ls	42f590 <ferror@plt+0x2ccc0>  // b.plast
  42f548:	ubfiz	x25, x22, #3, #32
  42f54c:	ldr	x0, [x20]
  42f550:	ldr	x0, [x0, w22, uxtw #3]
  42f554:	bl	4022b0 <strlen@plt>
  42f558:	mov	x23, x0
  42f55c:	add	w19, w19, w0
  42f560:	cbz	w22, 42f528 <ferror@plt+0x2cc58>
  42f564:	cmp	w24, #0x0
  42f568:	ccmp	w24, w19, #0x2, ne  // ne = any
  42f56c:	b.cc	42f4fc <ferror@plt+0x2cc2c>  // b.lo, b.ul, b.last
  42f570:	ldr	x0, [x21, #40]
  42f574:	ldr	x1, [x21, #48]
  42f578:	cmp	x0, x1
  42f57c:	b.cs	42f518 <ferror@plt+0x2cc48>  // b.hs, b.nlast
  42f580:	add	x1, x0, #0x1
  42f584:	str	x1, [x21, #40]
  42f588:	strb	w27, [x0]
  42f58c:	b	42f524 <ferror@plt+0x2cc54>
  42f590:	ldr	x0, [x21, #40]
  42f594:	ldr	x1, [x21, #48]
  42f598:	cmp	x0, x1
  42f59c:	b.cs	42f5d4 <ferror@plt+0x2cd04>  // b.hs, b.nlast
  42f5a0:	add	x1, x0, #0x1
  42f5a4:	str	x1, [x21, #40]
  42f5a8:	mov	w1, #0x3a                  	// #58
  42f5ac:	strb	w1, [x0]
  42f5b0:	add	w19, w19, #0x1
  42f5b4:	ldr	w0, [x20, #24]
  42f5b8:	cbz	w0, 42f674 <ferror@plt+0x2cda4>
  42f5bc:	mov	w23, #0x0                   	// #0
  42f5c0:	mov	w26, #0x20                  	// #32
  42f5c4:	adrp	x27, 463000 <_obstack_memory_used@@Base+0x1c094>
  42f5c8:	add	x27, x27, #0x4f0
  42f5cc:	mov	x28, #0x4                   	// #4
  42f5d0:	b	42f630 <ferror@plt+0x2cd60>
  42f5d4:	mov	w1, #0x3a                  	// #58
  42f5d8:	mov	x0, x21
  42f5dc:	bl	4025a0 <__overflow@plt>
  42f5e0:	b	42f5b0 <ferror@plt+0x2cce0>
  42f5e4:	mov	x3, x21
  42f5e8:	mov	x2, x28
  42f5ec:	mov	x1, #0x1                   	// #1
  42f5f0:	mov	x0, x27
  42f5f4:	bl	402290 <fwrite_unlocked@plt>
  42f5f8:	add	w19, w22, #0x1
  42f5fc:	b	42f610 <ferror@plt+0x2cd40>
  42f600:	add	x1, x0, #0x1
  42f604:	str	x1, [x21, #40]
  42f608:	strb	w26, [x0]
  42f60c:	add	w19, w19, #0x1
  42f610:	ldr	x0, [x20, #16]
  42f614:	mov	x1, x21
  42f618:	ldr	x0, [x0, x25, lsl #3]
  42f61c:	bl	4027c0 <fputs_unlocked@plt>
  42f620:	add	w23, w23, #0x1
  42f624:	ldr	w0, [x20, #24]
  42f628:	cmp	w0, w23
  42f62c:	b.ls	42f674 <ferror@plt+0x2cda4>  // b.plast
  42f630:	mov	w25, w23
  42f634:	ldr	x0, [x20, #16]
  42f638:	ldr	x0, [x0, x25, lsl #3]
  42f63c:	bl	4022b0 <strlen@plt>
  42f640:	mov	x22, x0
  42f644:	add	w19, w19, w0
  42f648:	cmp	w24, #0x0
  42f64c:	ccmp	w24, w19, #0x2, ne  // ne = any
  42f650:	b.cc	42f5e4 <ferror@plt+0x2cd14>  // b.lo, b.ul, b.last
  42f654:	ldr	x0, [x21, #40]
  42f658:	ldr	x1, [x21, #48]
  42f65c:	cmp	x0, x1
  42f660:	b.cc	42f600 <ferror@plt+0x2cd30>  // b.lo, b.ul, b.last
  42f664:	mov	w1, #0x20                  	// #32
  42f668:	mov	x0, x21
  42f66c:	bl	4025a0 <__overflow@plt>
  42f670:	b	42f60c <ferror@plt+0x2cd3c>
  42f674:	ldr	x0, [x21, #40]
  42f678:	ldr	x1, [x21, #48]
  42f67c:	cmp	x0, x1
  42f680:	b.cs	42f6b0 <ferror@plt+0x2cde0>  // b.hs, b.nlast
  42f684:	add	x1, x0, #0x1
  42f688:	str	x1, [x21, #40]
  42f68c:	mov	w1, #0xa                   	// #10
  42f690:	strb	w1, [x0]
  42f694:	ldp	x19, x20, [sp, #16]
  42f698:	ldp	x21, x22, [sp, #32]
  42f69c:	ldp	x23, x24, [sp, #48]
  42f6a0:	ldp	x25, x26, [sp, #64]
  42f6a4:	ldp	x27, x28, [sp, #80]
  42f6a8:	ldp	x29, x30, [sp], #96
  42f6ac:	ret
  42f6b0:	mov	w1, #0xa                   	// #10
  42f6b4:	mov	x0, x21
  42f6b8:	bl	4025a0 <__overflow@plt>
  42f6bc:	b	42f694 <ferror@plt+0x2cdc4>
  42f6c0:	stp	x29, x30, [sp, #-80]!
  42f6c4:	mov	x29, sp
  42f6c8:	stp	x21, x22, [sp, #32]
  42f6cc:	mov	x21, x0
  42f6d0:	ldr	w0, [x0, #24]
  42f6d4:	cmp	w0, #0x1
  42f6d8:	b.ls	42f780 <ferror@plt+0x2ceb0>  // b.plast
  42f6dc:	stp	x19, x20, [sp, #16]
  42f6e0:	stp	x23, x24, [sp, #48]
  42f6e4:	str	x25, [sp, #64]
  42f6e8:	mov	x19, x1
  42f6ec:	mov	w20, #0x1                   	// #1
  42f6f0:	mov	w22, #0xa                   	// #10
  42f6f4:	mov	w24, #0xa                   	// #10
  42f6f8:	mov	w23, #0x3a                  	// #58
  42f6fc:	mov	w25, #0x3a                  	// #58
  42f700:	ldr	x1, [x19, #40]
  42f704:	ldr	x0, [x19, #48]
  42f708:	cmp	x1, x0
  42f70c:	b.cs	42f78c <ferror@plt+0x2cebc>  // b.hs, b.nlast
  42f710:	add	x0, x1, #0x1
  42f714:	str	x0, [x19, #40]
  42f718:	strb	w22, [x1]
  42f71c:	ldr	x0, [x21, #16]
  42f720:	mov	x1, x19
  42f724:	ldr	x0, [x0, w20, uxtw #3]
  42f728:	bl	4027c0 <fputs_unlocked@plt>
  42f72c:	ldr	x1, [x19, #40]
  42f730:	ldr	x0, [x19, #48]
  42f734:	cmp	x1, x0
  42f738:	b.cs	42f79c <ferror@plt+0x2cecc>  // b.hs, b.nlast
  42f73c:	add	x0, x1, #0x1
  42f740:	str	x0, [x19, #40]
  42f744:	strb	w23, [x1]
  42f748:	ldr	x1, [x19, #40]
  42f74c:	ldr	x0, [x19, #48]
  42f750:	cmp	x1, x0
  42f754:	b.cs	42f7ac <ferror@plt+0x2cedc>  // b.hs, b.nlast
  42f758:	add	x0, x1, #0x1
  42f75c:	str	x0, [x19, #40]
  42f760:	strb	w22, [x1]
  42f764:	add	w20, w20, #0x1
  42f768:	ldr	w0, [x21, #24]
  42f76c:	cmp	w0, w20
  42f770:	b.hi	42f700 <ferror@plt+0x2ce30>  // b.pmore
  42f774:	ldp	x19, x20, [sp, #16]
  42f778:	ldp	x23, x24, [sp, #48]
  42f77c:	ldr	x25, [sp, #64]
  42f780:	ldp	x21, x22, [sp, #32]
  42f784:	ldp	x29, x30, [sp], #80
  42f788:	ret
  42f78c:	mov	w1, w24
  42f790:	mov	x0, x19
  42f794:	bl	4025a0 <__overflow@plt>
  42f798:	b	42f71c <ferror@plt+0x2ce4c>
  42f79c:	mov	w1, w25
  42f7a0:	mov	x0, x19
  42f7a4:	bl	4025a0 <__overflow@plt>
  42f7a8:	b	42f748 <ferror@plt+0x2ce78>
  42f7ac:	mov	w1, w24
  42f7b0:	mov	x0, x19
  42f7b4:	bl	4025a0 <__overflow@plt>
  42f7b8:	b	42f764 <ferror@plt+0x2ce94>
  42f7bc:	stp	x29, x30, [sp, #-80]!
  42f7c0:	mov	x29, sp
  42f7c4:	stp	x19, x20, [sp, #16]
  42f7c8:	stp	x21, x22, [sp, #32]
  42f7cc:	mov	x20, x0
  42f7d0:	mov	x22, x1
  42f7d4:	mov	x3, x1
  42f7d8:	mov	x2, #0x1                   	// #1
  42f7dc:	mov	x1, #0x4                   	// #4
  42f7e0:	add	x0, x0, #0x18
  42f7e4:	bl	402290 <fwrite_unlocked@plt>
  42f7e8:	cmp	x0, #0x1
  42f7ec:	b.ne	42f88c <ferror@plt+0x2cfbc>  // b.any
  42f7f0:	ldr	w0, [x20, #24]
  42f7f4:	cbz	w0, 42f894 <ferror@plt+0x2cfc4>
  42f7f8:	stp	x23, x24, [sp, #48]
  42f7fc:	mov	w19, #0x0                   	// #0
  42f800:	mov	x23, #0x1                   	// #1
  42f804:	mov	x24, #0x8                   	// #8
  42f808:	mov	w21, w19
  42f80c:	ldr	x0, [x20, #16]
  42f810:	ldr	x0, [x0, x21, lsl #3]
  42f814:	bl	4022b0 <strlen@plt>
  42f818:	str	x0, [sp, #72]
  42f81c:	mov	x3, x22
  42f820:	mov	x2, x23
  42f824:	mov	x1, x24
  42f828:	add	x0, sp, #0x48
  42f82c:	bl	402290 <fwrite_unlocked@plt>
  42f830:	cmp	x0, #0x1
  42f834:	b.ne	42f874 <ferror@plt+0x2cfa4>  // b.any
  42f838:	ldr	x0, [x20, #16]
  42f83c:	mov	x3, x22
  42f840:	mov	x2, x23
  42f844:	ldr	x1, [sp, #72]
  42f848:	ldr	x0, [x0, x21, lsl #3]
  42f84c:	bl	402290 <fwrite_unlocked@plt>
  42f850:	cmp	x0, #0x1
  42f854:	b.ne	42f874 <ferror@plt+0x2cfa4>  // b.any
  42f858:	add	w19, w19, #0x1
  42f85c:	ldr	w0, [x20, #24]
  42f860:	cmp	w0, w19
  42f864:	b.hi	42f808 <ferror@plt+0x2cf38>  // b.pmore
  42f868:	mov	w0, #0x0                   	// #0
  42f86c:	ldp	x23, x24, [sp, #48]
  42f870:	b	42f87c <ferror@plt+0x2cfac>
  42f874:	mov	w0, #0xffffffff            	// #-1
  42f878:	ldp	x23, x24, [sp, #48]
  42f87c:	ldp	x19, x20, [sp, #16]
  42f880:	ldp	x21, x22, [sp, #32]
  42f884:	ldp	x29, x30, [sp], #80
  42f888:	ret
  42f88c:	mov	w0, #0xffffffff            	// #-1
  42f890:	b	42f87c <ferror@plt+0x2cfac>
  42f894:	mov	w0, #0x0                   	// #0
  42f898:	b	42f87c <ferror@plt+0x2cfac>
  42f89c:	stp	x29, x30, [sp, #-96]!
  42f8a0:	mov	x29, sp
  42f8a4:	stp	x21, x22, [sp, #32]
  42f8a8:	stp	x23, x24, [sp, #48]
  42f8ac:	stp	x25, x26, [sp, #64]
  42f8b0:	mov	x26, x0
  42f8b4:	mov	x21, x1
  42f8b8:	mov	x23, x2
  42f8bc:	mov	x3, x1
  42f8c0:	mov	x2, #0x4                   	// #4
  42f8c4:	mov	x1, #0x1                   	// #1
  42f8c8:	add	x0, sp, #0x5c
  42f8cc:	bl	4025d0 <fread_unlocked@plt>
  42f8d0:	cmp	x0, #0x4
  42f8d4:	b.ne	42f9ec <ferror@plt+0x2d11c>  // b.any
  42f8d8:	stp	x19, x20, [sp, #16]
  42f8dc:	mov	x0, #0x200                 	// #512
  42f8e0:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  42f8e4:	mov	x19, x0
  42f8e8:	ldr	w0, [sp, #92]
  42f8ec:	cbz	w0, 42f9c8 <ferror@plt+0x2d0f8>
  42f8f0:	mov	x24, #0x200                 	// #512
  42f8f4:	mov	w20, #0x0                   	// #0
  42f8f8:	mov	x25, #0x8                   	// #8
  42f8fc:	mov	x22, #0x1                   	// #1
  42f900:	b	42f960 <ferror@plt+0x2d090>
  42f904:	mov	x0, x19
  42f908:	bl	402690 <free@plt>
  42f90c:	mov	w0, #0xffffffff            	// #-1
  42f910:	ldp	x19, x20, [sp, #16]
  42f914:	b	42f9d8 <ferror@plt+0x2d108>
  42f918:	add	x24, x1, #0x80
  42f91c:	mov	x1, x24
  42f920:	mov	x0, x19
  42f924:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  42f928:	mov	x19, x0
  42f92c:	b	42f98c <ferror@plt+0x2d0bc>
  42f930:	mov	x0, x19
  42f934:	bl	402690 <free@plt>
  42f938:	mov	w0, #0xffffffff            	// #-1
  42f93c:	ldp	x19, x20, [sp, #16]
  42f940:	b	42f9d8 <ferror@plt+0x2d108>
  42f944:	mov	x1, x19
  42f948:	mov	x0, x26
  42f94c:	bl	42f31c <ferror@plt+0x2ca4c>
  42f950:	add	w20, w20, #0x1
  42f954:	ldr	w0, [sp, #92]
  42f958:	cmp	w0, w20
  42f95c:	b.ls	42f9c8 <ferror@plt+0x2d0f8>  // b.plast
  42f960:	mov	x3, x21
  42f964:	mov	x2, x25
  42f968:	mov	x1, x22
  42f96c:	add	x0, sp, #0x50
  42f970:	bl	4025d0 <fread_unlocked@plt>
  42f974:	cmp	x0, #0x8
  42f978:	b.ne	42f904 <ferror@plt+0x2d034>  // b.any
  42f97c:	ldr	x1, [sp, #80]
  42f980:	add	x0, x1, #0x1
  42f984:	cmp	x0, x24
  42f988:	b.hi	42f918 <ferror@plt+0x2d048>  // b.pmore
  42f98c:	mov	x3, x21
  42f990:	ldr	x2, [sp, #80]
  42f994:	mov	x1, x22
  42f998:	mov	x0, x19
  42f99c:	bl	4025d0 <fread_unlocked@plt>
  42f9a0:	ldr	x3, [sp, #80]
  42f9a4:	cmp	x0, x3
  42f9a8:	b.ne	42f930 <ferror@plt+0x2d060>  // b.any
  42f9ac:	strb	wzr, [x19, x3]
  42f9b0:	cbz	x23, 42f950 <ferror@plt+0x2d080>
  42f9b4:	mov	x1, x23
  42f9b8:	mov	x0, x19
  42f9bc:	bl	445944 <ferror@plt+0x43074>
  42f9c0:	cbz	w0, 42f950 <ferror@plt+0x2d080>
  42f9c4:	b	42f944 <ferror@plt+0x2d074>
  42f9c8:	mov	x0, x19
  42f9cc:	bl	402690 <free@plt>
  42f9d0:	mov	w0, #0x0                   	// #0
  42f9d4:	ldp	x19, x20, [sp, #16]
  42f9d8:	ldp	x21, x22, [sp, #32]
  42f9dc:	ldp	x23, x24, [sp, #48]
  42f9e0:	ldp	x25, x26, [sp, #64]
  42f9e4:	ldp	x29, x30, [sp], #96
  42f9e8:	ret
  42f9ec:	mov	w0, #0xffffffff            	// #-1
  42f9f0:	b	42f9d8 <ferror@plt+0x2d108>
  42f9f4:	stp	x29, x30, [sp, #-48]!
  42f9f8:	mov	x29, sp
  42f9fc:	stp	x19, x20, [sp, #16]
  42fa00:	str	x21, [sp, #32]
  42fa04:	mov	w21, #0x1                   	// #1
  42fa08:	lsl	w20, w21, w0
  42fa0c:	mov	x1, #0x90                  	// #144
  42fa10:	mov	x0, #0x1                   	// #1
  42fa14:	bl	447084 <_obstack_memory_used@@Base+0x118>
  42fa18:	mov	x19, x0
  42fa1c:	adrp	x4, 402000 <memcpy@plt-0x260>
  42fa20:	add	x4, x4, #0x690
  42fa24:	adrp	x3, 447000 <_obstack_memory_used@@Base+0x94>
  42fa28:	add	x3, x3, #0x50
  42fa2c:	mov	x2, #0x0                   	// #0
  42fa30:	mov	x1, #0x0                   	// #0
  42fa34:	bl	446d40 <_obstack_begin@@Base>
  42fa38:	str	xzr, [x19, #48]
  42fa3c:	mov	x1, #0x8                   	// #8
  42fa40:	mov	w0, w20
  42fa44:	bl	447084 <_obstack_memory_used@@Base+0x118>
  42fa48:	str	x0, [x19, #88]
  42fa4c:	strb	w21, [x19, #136]
  42fa50:	str	w20, [x19, #112]
  42fa54:	mov	x0, x19
  42fa58:	ldp	x19, x20, [sp, #16]
  42fa5c:	ldr	x21, [sp, #32]
  42fa60:	ldp	x29, x30, [sp], #48
  42fa64:	ret
  42fa68:	stp	x29, x30, [sp, #-32]!
  42fa6c:	mov	x29, sp
  42fa70:	str	x19, [sp, #16]
  42fa74:	mov	x19, x0
  42fa78:	mov	x1, #0x0                   	// #0
  42fa7c:	bl	446eec <_obstack_free@@Base>
  42fa80:	ldrb	w0, [x19, #136]
  42fa84:	cbnz	w0, 42fa9c <ferror@plt+0x2d1cc>
  42fa88:	mov	x0, x19
  42fa8c:	bl	402690 <free@plt>
  42fa90:	ldr	x19, [sp, #16]
  42fa94:	ldp	x29, x30, [sp], #32
  42fa98:	ret
  42fa9c:	ldr	x0, [x19, #88]
  42faa0:	bl	402690 <free@plt>
  42faa4:	b	42fa88 <ferror@plt+0x2d1b8>
  42faa8:	stp	x29, x30, [sp, #-112]!
  42faac:	mov	x29, sp
  42fab0:	stp	x19, x20, [sp, #16]
  42fab4:	stp	x21, x22, [sp, #32]
  42fab8:	stp	x23, x24, [sp, #48]
  42fabc:	stp	x25, x26, [sp, #64]
  42fac0:	stp	x27, x28, [sp, #80]
  42fac4:	mov	x20, x0
  42fac8:	str	x1, [sp, #96]
  42facc:	mov	x27, x2
  42fad0:	mov	w23, w3
  42fad4:	str	w4, [sp, #108]
  42fad8:	ldr	w28, [x0, #112]
  42fadc:	sub	w21, w28, #0x1
  42fae0:	and	w22, w21, w3
  42fae4:	ldr	w0, [x0, #128]
  42fae8:	add	w0, w0, #0x1
  42faec:	str	w0, [x20, #128]
  42faf0:	ldr	x25, [x20, #88]
  42faf4:	and	w0, w21, w3
  42faf8:	ldr	x19, [x25, x0, lsl #3]
  42fafc:	cbz	x19, 42fda8 <ferror@plt+0x2d4d8>
  42fb00:	cmn	x19, #0x1
  42fb04:	b.eq	42fbf4 <ferror@plt+0x2d324>  // b.none
  42fb08:	ldr	w0, [x19, #12]
  42fb0c:	mov	w26, w28
  42fb10:	cmp	w0, w3
  42fb14:	b.eq	42fbd8 <ferror@plt+0x2d308>  // b.none
  42fb18:	add	w24, w23, w23, lsl #4
  42fb1c:	and	w24, w24, w21
  42fb20:	orr	w24, w24, #0x1
  42fb24:	ldr	w0, [x20, #132]
  42fb28:	add	w0, w0, #0x1
  42fb2c:	str	w0, [x20, #132]
  42fb30:	add	w0, w22, w24
  42fb34:	and	w22, w21, w0
  42fb38:	and	w0, w21, w0
  42fb3c:	ldr	x19, [x25, x0, lsl #3]
  42fb40:	cbnz	x19, 42fc24 <ferror@plt+0x2d354>
  42fb44:	ldr	w0, [sp, #108]
  42fb48:	cbz	w0, 42fda0 <ferror@plt+0x2d4d0>
  42fb4c:	cmp	w26, w28
  42fb50:	csel	w26, w26, w22, ne  // ne = any
  42fb54:	ldr	x1, [x20, #96]
  42fb58:	mov	x0, x20
  42fb5c:	blr	x1
  42fb60:	mov	x19, x0
  42fb64:	ldr	x0, [x20, #88]
  42fb68:	str	x19, [x0, w26, uxtw #3]
  42fb6c:	str	w27, [x19, #8]
  42fb70:	str	w23, [x19, #12]
  42fb74:	ldr	x1, [x20, #104]
  42fb78:	cbz	x1, 42fc5c <ferror@plt+0x2d38c>
  42fb7c:	add	x0, x27, #0x1
  42fb80:	blr	x1
  42fb84:	mov	x21, x0
  42fb88:	mov	x2, x27
  42fb8c:	ldr	x1, [sp, #96]
  42fb90:	bl	402260 <memcpy@plt>
  42fb94:	strb	wzr, [x21, x27]
  42fb98:	str	x21, [x19]
  42fb9c:	ldr	w1, [x20, #116]
  42fba0:	add	w1, w1, #0x1
  42fba4:	str	w1, [x20, #116]
  42fba8:	ldr	w0, [x20, #112]
  42fbac:	add	w2, w0, w0, lsl #1
  42fbb0:	cmp	w2, w1, lsl #2
  42fbb4:	b.ls	42fcf8 <ferror@plt+0x2d428>  // b.plast
  42fbb8:	mov	x0, x19
  42fbbc:	ldp	x19, x20, [sp, #16]
  42fbc0:	ldp	x21, x22, [sp, #32]
  42fbc4:	ldp	x23, x24, [sp, #48]
  42fbc8:	ldp	x25, x26, [sp, #64]
  42fbcc:	ldp	x27, x28, [sp, #80]
  42fbd0:	ldp	x29, x30, [sp], #112
  42fbd4:	ret
  42fbd8:	ldr	w0, [x19, #8]
  42fbdc:	cmp	w0, w2
  42fbe0:	b.ne	42fb18 <ferror@plt+0x2d248>  // b.any
  42fbe4:	ldr	x0, [x19]
  42fbe8:	bl	4025e0 <memcmp@plt>
  42fbec:	cbnz	w0, 42fb18 <ferror@plt+0x2d248>
  42fbf0:	b	42fbb8 <ferror@plt+0x2d2e8>
  42fbf4:	mov	w26, w22
  42fbf8:	b	42fb18 <ferror@plt+0x2d248>
  42fbfc:	cmp	w28, w26
  42fc00:	csel	w26, w26, w22, eq  // eq = none
  42fc04:	ldr	w0, [x20, #132]
  42fc08:	add	w0, w0, #0x1
  42fc0c:	str	w0, [x20, #132]
  42fc10:	add	w0, w24, w22
  42fc14:	and	w22, w21, w0
  42fc18:	and	w0, w21, w0
  42fc1c:	ldr	x19, [x25, x0, lsl #3]
  42fc20:	cbz	x19, 42fb44 <ferror@plt+0x2d274>
  42fc24:	cmn	x19, #0x1
  42fc28:	b.eq	42fbfc <ferror@plt+0x2d32c>  // b.none
  42fc2c:	ldr	w0, [x19, #12]
  42fc30:	cmp	w0, w23
  42fc34:	b.ne	42fc04 <ferror@plt+0x2d334>  // b.any
  42fc38:	ldr	w0, [x19, #8]
  42fc3c:	cmp	w0, w27
  42fc40:	b.ne	42fc04 <ferror@plt+0x2d334>  // b.any
  42fc44:	mov	x2, x27
  42fc48:	ldr	x1, [sp, #96]
  42fc4c:	ldr	x0, [x19]
  42fc50:	bl	4025e0 <memcmp@plt>
  42fc54:	cbnz	w0, 42fc04 <ferror@plt+0x2d334>
  42fc58:	b	42fbb8 <ferror@plt+0x2d2e8>
  42fc5c:	add	x1, x27, #0x1
  42fc60:	ldr	x0, [x20, #32]
  42fc64:	ldr	x2, [x20, #24]
  42fc68:	sub	x0, x0, x2
  42fc6c:	cmp	x1, x0
  42fc70:	b.hi	42fcdc <ferror@plt+0x2d40c>  // b.pmore
  42fc74:	mov	x2, x27
  42fc78:	ldr	x1, [sp, #96]
  42fc7c:	ldr	x0, [x20, #24]
  42fc80:	bl	402260 <memcpy@plt>
  42fc84:	ldr	x1, [x20, #24]
  42fc88:	add	x0, x1, x27
  42fc8c:	add	x0, x0, #0x1
  42fc90:	str	x0, [x20, #24]
  42fc94:	strb	wzr, [x1, x27]
  42fc98:	ldr	x2, [x20, #16]
  42fc9c:	ldr	x1, [x20, #24]
  42fca0:	cmp	x1, x2
  42fca4:	b.eq	42fce8 <ferror@plt+0x2d418>  // b.none
  42fca8:	ldr	x0, [x20, #48]
  42fcac:	add	x1, x1, x0
  42fcb0:	bic	x0, x1, x0
  42fcb4:	ldr	x1, [x20, #8]
  42fcb8:	ldr	x3, [x20, #32]
  42fcbc:	sub	x4, x0, x1
  42fcc0:	sub	x1, x3, x1
  42fcc4:	cmp	x4, x1
  42fcc8:	csel	x0, x0, x3, ls  // ls = plast
  42fccc:	str	x0, [x20, #24]
  42fcd0:	str	x0, [x20, #16]
  42fcd4:	str	x2, [x19]
  42fcd8:	b	42fb9c <ferror@plt+0x2d2cc>
  42fcdc:	mov	x0, x20
  42fce0:	bl	446d94 <_obstack_newchunk@@Base>
  42fce4:	b	42fc74 <ferror@plt+0x2d3a4>
  42fce8:	ldrb	w0, [x20, #80]
  42fcec:	orr	w0, w0, #0x2
  42fcf0:	strb	w0, [x20, #80]
  42fcf4:	b	42fca8 <ferror@plt+0x2d3d8>
  42fcf8:	lsl	w22, w0, #1
  42fcfc:	mov	x1, #0x8                   	// #8
  42fd00:	lsl	w0, w0, #1
  42fd04:	bl	447084 <_obstack_memory_used@@Base+0x118>
  42fd08:	mov	x21, x0
  42fd0c:	sub	w2, w22, #0x1
  42fd10:	ldr	x0, [x20, #88]
  42fd14:	ldr	w7, [x20, #112]
  42fd18:	add	x7, x0, x7, lsl #3
  42fd1c:	mov	x5, x0
  42fd20:	b	42fd34 <ferror@plt+0x2d464>
  42fd24:	str	x6, [x21, w3, uxtw #3]
  42fd28:	add	x5, x5, #0x8
  42fd2c:	cmp	x7, x5
  42fd30:	b.ls	42fd7c <ferror@plt+0x2d4ac>  // b.plast
  42fd34:	ldr	x6, [x5]
  42fd38:	sub	x1, x6, #0x1
  42fd3c:	cmn	x1, #0x3
  42fd40:	b.hi	42fd28 <ferror@plt+0x2d458>  // b.pmore
  42fd44:	ldr	w1, [x6, #12]
  42fd48:	and	w3, w2, w1
  42fd4c:	and	w4, w2, w1
  42fd50:	ldr	x4, [x21, x4, lsl #3]
  42fd54:	cbz	x4, 42fd24 <ferror@plt+0x2d454>
  42fd58:	add	w1, w1, w1, lsl #4
  42fd5c:	and	w4, w1, w2
  42fd60:	orr	w4, w4, #0x1
  42fd64:	add	w1, w4, w3
  42fd68:	and	w3, w2, w1
  42fd6c:	and	w1, w2, w1
  42fd70:	ldr	x1, [x21, x1, lsl #3]
  42fd74:	cbnz	x1, 42fd64 <ferror@plt+0x2d494>
  42fd78:	b	42fd24 <ferror@plt+0x2d454>
  42fd7c:	ldrb	w1, [x20, #136]
  42fd80:	cbnz	w1, 42fd98 <ferror@plt+0x2d4c8>
  42fd84:	mov	w0, #0x1                   	// #1
  42fd88:	strb	w0, [x20, #136]
  42fd8c:	str	x21, [x20, #88]
  42fd90:	str	w22, [x20, #112]
  42fd94:	b	42fbb8 <ferror@plt+0x2d2e8>
  42fd98:	bl	402690 <free@plt>
  42fd9c:	b	42fd84 <ferror@plt+0x2d4b4>
  42fda0:	mov	x19, #0x0                   	// #0
  42fda4:	b	42fbb8 <ferror@plt+0x2d2e8>
  42fda8:	ldr	w0, [sp, #108]
  42fdac:	cbz	w0, 42fbb8 <ferror@plt+0x2d2e8>
  42fdb0:	mov	w26, w22
  42fdb4:	b	42fb54 <ferror@plt+0x2d284>
  42fdb8:	stp	x29, x30, [sp, #-16]!
  42fdbc:	mov	x29, sp
  42fdc0:	mov	w4, w3
  42fdc4:	cbz	x2, 42fe00 <ferror@plt+0x2d530>
  42fdc8:	add	x8, x1, x2
  42fdcc:	mov	x6, x1
  42fdd0:	mov	w5, #0x0                   	// #0
  42fdd4:	mov	w7, #0x43                  	// #67
  42fdd8:	mul	w5, w5, w7
  42fddc:	sub	w5, w5, #0x71
  42fde0:	ldrb	w3, [x6], #1
  42fde4:	add	w5, w3, w5
  42fde8:	cmp	x8, x6
  42fdec:	b.ne	42fdd8 <ferror@plt+0x2d508>  // b.any
  42fdf0:	add	w3, w5, w2
  42fdf4:	bl	42faa8 <ferror@plt+0x2d1d8>
  42fdf8:	ldp	x29, x30, [sp], #16
  42fdfc:	ret
  42fe00:	mov	w5, #0x0                   	// #0
  42fe04:	b	42fdf0 <ferror@plt+0x2d520>
  42fe08:	stp	x29, x30, [sp, #-64]!
  42fe0c:	mov	x29, sp
  42fe10:	stp	x19, x20, [sp, #16]
  42fe14:	stp	x21, x22, [sp, #32]
  42fe18:	str	x23, [sp, #48]
  42fe1c:	mov	x21, x0
  42fe20:	mov	x23, x1
  42fe24:	mov	x22, x2
  42fe28:	ldr	x19, [x0, #88]
  42fe2c:	ldr	w20, [x0, #112]
  42fe30:	add	x20, x19, x20, lsl #3
  42fe34:	b	42fe44 <ferror@plt+0x2d574>
  42fe38:	add	x19, x19, #0x8
  42fe3c:	cmp	x20, x19
  42fe40:	b.ls	42fe64 <ferror@plt+0x2d594>  // b.plast
  42fe44:	ldr	x1, [x19]
  42fe48:	sub	x3, x1, #0x1
  42fe4c:	cmn	x3, #0x3
  42fe50:	b.hi	42fe38 <ferror@plt+0x2d568>  // b.pmore
  42fe54:	mov	x2, x22
  42fe58:	ldr	x0, [x21, #120]
  42fe5c:	blr	x23
  42fe60:	cbnz	w0, 42fe38 <ferror@plt+0x2d568>
  42fe64:	ldp	x19, x20, [sp, #16]
  42fe68:	ldp	x21, x22, [sp, #32]
  42fe6c:	ldr	x23, [sp, #48]
  42fe70:	ldp	x29, x30, [sp], #64
  42fe74:	ret
  42fe78:	stp	x29, x30, [sp, #-64]!
  42fe7c:	mov	x29, sp
  42fe80:	stp	x19, x20, [sp, #16]
  42fe84:	stp	x21, x22, [sp, #32]
  42fe88:	stp	x23, x24, [sp, #48]
  42fe8c:	mov	x21, x0
  42fe90:	mov	x23, x1
  42fe94:	mov	x22, x2
  42fe98:	ldr	x19, [x0, #88]
  42fe9c:	ldr	w20, [x0, #112]
  42fea0:	add	x20, x19, x20, lsl #3
  42fea4:	mov	x24, #0xffffffffffffffff    	// #-1
  42fea8:	b	42feb8 <ferror@plt+0x2d5e8>
  42feac:	add	x19, x19, #0x8
  42feb0:	cmp	x20, x19
  42feb4:	b.ls	42fee0 <ferror@plt+0x2d610>  // b.plast
  42feb8:	ldr	x1, [x19]
  42febc:	sub	x3, x1, #0x1
  42fec0:	cmn	x3, #0x3
  42fec4:	b.hi	42feac <ferror@plt+0x2d5dc>  // b.pmore
  42fec8:	mov	x2, x22
  42fecc:	ldr	x0, [x21, #120]
  42fed0:	blr	x23
  42fed4:	cbz	w0, 42feac <ferror@plt+0x2d5dc>
  42fed8:	str	x24, [x19]
  42fedc:	b	42feac <ferror@plt+0x2d5dc>
  42fee0:	ldp	x19, x20, [sp, #16]
  42fee4:	ldp	x21, x22, [sp, #32]
  42fee8:	ldp	x23, x24, [sp, #48]
  42feec:	ldp	x29, x30, [sp], #64
  42fef0:	ret
  42fef4:	stp	x29, x30, [sp, #-64]!
  42fef8:	mov	x29, sp
  42fefc:	stp	x19, x20, [sp, #16]
  42ff00:	stp	x21, x22, [sp, #32]
  42ff04:	str	x23, [sp, #48]
  42ff08:	mov	x19, x0
  42ff0c:	mov	x22, x1
  42ff10:	mov	w21, w2
  42ff14:	mov	w20, w3
  42ff18:	and	w23, w4, #0xff
  42ff1c:	ldrb	w0, [x0, #136]
  42ff20:	cbnz	w0, 42ff48 <ferror@plt+0x2d678>
  42ff24:	str	x22, [x19, #88]
  42ff28:	str	w21, [x19, #112]
  42ff2c:	str	w20, [x19, #116]
  42ff30:	strb	w23, [x19, #136]
  42ff34:	ldp	x19, x20, [sp, #16]
  42ff38:	ldp	x21, x22, [sp, #32]
  42ff3c:	ldr	x23, [sp, #48]
  42ff40:	ldp	x29, x30, [sp], #64
  42ff44:	ret
  42ff48:	ldr	x0, [x19, #88]
  42ff4c:	bl	402690 <free@plt>
  42ff50:	b	42ff24 <ferror@plt+0x2d654>
  42ff54:	stp	x29, x30, [sp, #-112]!
  42ff58:	mov	x29, sp
  42ff5c:	stp	x19, x20, [sp, #16]
  42ff60:	stp	x21, x22, [sp, #32]
  42ff64:	stp	x23, x24, [sp, #48]
  42ff68:	stp	x25, x26, [sp, #64]
  42ff6c:	stp	d8, d9, [sp, #80]
  42ff70:	str	d10, [sp, #96]
  42ff74:	mov	x22, x0
  42ff78:	ldr	x1, [x0, #88]
  42ff7c:	ldr	w23, [x0, #112]
  42ff80:	lsl	x23, x23, #3
  42ff84:	add	x0, x1, x23
  42ff88:	movi	d8, #0x0
  42ff8c:	mov	x24, #0x0                   	// #0
  42ff90:	mov	x20, #0x0                   	// #0
  42ff94:	mov	x19, #0x0                   	// #0
  42ff98:	mov	x21, #0x0                   	// #0
  42ff9c:	b	42ffb0 <ferror@plt+0x2d6e0>
  42ffa0:	add	x24, x24, #0x1
  42ffa4:	add	x1, x1, #0x8
  42ffa8:	cmp	x0, x1
  42ffac:	b.ls	42ffe8 <ferror@plt+0x2d718>  // b.plast
  42ffb0:	ldr	x2, [x1]
  42ffb4:	cmn	x2, #0x1
  42ffb8:	b.eq	42ffa0 <ferror@plt+0x2d6d0>  // b.none
  42ffbc:	cbz	x2, 42ffa4 <ferror@plt+0x2d6d4>
  42ffc0:	ldr	w2, [x2, #8]
  42ffc4:	mov	w3, w2
  42ffc8:	add	x19, x19, x3
  42ffcc:	ucvtf	d0, w2
  42ffd0:	fmul	d0, d0, d0
  42ffd4:	fadd	d8, d8, d0
  42ffd8:	cmp	x20, x3
  42ffdc:	csel	x20, x20, x3, cs  // cs = hs, nlast
  42ffe0:	add	x21, x21, #0x1
  42ffe4:	b	42ffa4 <ferror@plt+0x2d6d4>
  42ffe8:	ldr	w26, [x22, #116]
  42ffec:	adrp	x25, 488000 <_obstack_memory_used@@Base+0x41094>
  42fff0:	mov	w3, w26
  42fff4:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c094>
  42fff8:	add	x2, x2, #0x4f8
  42fffc:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  430000:	add	x1, x1, #0x508
  430004:	ldr	x0, [x25, #1320]
  430008:	bl	402890 <fprintf@plt>
  43000c:	ucvtf	d10, w26
  430010:	ucvtf	d0, x21
  430014:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  430018:	fmov	d1, x0
  43001c:	fmul	d0, d0, d1
  430020:	fdiv	d0, d0, d10
  430024:	mov	x3, x21
  430028:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c094>
  43002c:	add	x2, x2, #0x520
  430030:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  430034:	add	x1, x1, #0x530
  430038:	ldr	x0, [x25, #1320]
  43003c:	bl	402890 <fprintf@plt>
  430040:	adrp	x21, 463000 <_obstack_memory_used@@Base+0x1c094>
  430044:	add	x21, x21, #0x550
  430048:	ldr	w3, [x22, #112]
  43004c:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c094>
  430050:	add	x2, x2, #0x548
  430054:	mov	x1, x21
  430058:	ldr	x0, [x25, #1320]
  43005c:	bl	402890 <fprintf@plt>
  430060:	mov	x3, x24
  430064:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c094>
  430068:	add	x2, x2, #0x560
  43006c:	mov	x1, x21
  430070:	ldr	x0, [x25, #1320]
  430074:	bl	402890 <fprintf@plt>
  430078:	ldr	x0, [x22, #104]
  43007c:	cbz	x0, 430214 <ferror@plt+0x2d944>
  430080:	ldr	x0, [x25, #1320]
  430084:	mov	x1, #0x27ff                	// #10239
  430088:	cmp	x19, x1
  43008c:	b.ls	4300b4 <ferror@plt+0x2d7e4>  // b.plast
  430090:	mov	w1, #0x9fffff              	// #10485759
  430094:	cmp	x19, x1
  430098:	b.hi	4300a8 <ferror@plt+0x2d7d8>  // b.pmore
  43009c:	lsr	x3, x19, #10
  4300a0:	mov	w4, #0x6b                  	// #107
  4300a4:	b	4300bc <ferror@plt+0x2d7ec>
  4300a8:	lsr	x3, x19, #20
  4300ac:	mov	w4, #0x4d                  	// #77
  4300b0:	b	4300bc <ferror@plt+0x2d7ec>
  4300b4:	mov	x3, x19
  4300b8:	mov	w4, #0x20                  	// #32
  4300bc:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c094>
  4300c0:	add	x2, x2, #0x570
  4300c4:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  4300c8:	add	x1, x1, #0x580
  4300cc:	bl	402890 <fprintf@plt>
  4300d0:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  4300d4:	ldr	x0, [x0, #1320]
  4300d8:	mov	w4, #0x20                  	// #32
  4300dc:	mov	x1, #0x27ff                	// #10239
  4300e0:	cmp	x23, x1
  4300e4:	b.ls	4300fc <ferror@plt+0x2d82c>  // b.plast
  4300e8:	mov	w1, #0x9fffff              	// #10485759
  4300ec:	cmp	x23, x1
  4300f0:	b.hi	4302a8 <ferror@plt+0x2d9d8>  // b.pmore
  4300f4:	lsr	x23, x23, #10
  4300f8:	mov	w4, #0x6b                  	// #107
  4300fc:	mov	x3, x23
  430100:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c094>
  430104:	add	x2, x2, #0x5c0
  430108:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  43010c:	add	x1, x1, #0x580
  430110:	bl	402890 <fprintf@plt>
  430114:	ucvtf	d9, x19
  430118:	fdiv	d9, d9, d10
  43011c:	ldr	w0, [x22, #132]
  430120:	ucvtf	d1, w0
  430124:	ldr	w0, [x22, #128]
  430128:	ucvtf	d0, w0
  43012c:	adrp	x19, 463000 <_obstack_memory_used@@Base+0x1c094>
  430130:	add	x19, x19, #0x5e0
  430134:	adrp	x21, 488000 <_obstack_memory_used@@Base+0x41094>
  430138:	fdiv	d0, d1, d0
  43013c:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c094>
  430140:	add	x2, x2, #0x5d0
  430144:	mov	x1, x19
  430148:	ldr	x0, [x21, #1320]
  43014c:	bl	402890 <fprintf@plt>
  430150:	ldr	w0, [x22, #128]
  430154:	ucvtf	d0, w0
  430158:	fdiv	d0, d10, d0
  43015c:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c094>
  430160:	add	x2, x2, #0x5f0
  430164:	mov	x1, x19
  430168:	ldr	x0, [x21, #1320]
  43016c:	bl	402890 <fprintf@plt>
  430170:	ldr	x0, [x21, #1320]
  430174:	fdiv	d8, d8, d10
  430178:	fmul	d0, d9, d9
  43017c:	fsub	d8, d8, d0
  430180:	fcmpe	d8, #0.0
  430184:	b.mi	4302b4 <ferror@plt+0x2d9e4>  // b.first
  430188:	movi	d1, #0x0
  43018c:	fcmp	d8, d1
  430190:	b.eq	4301bc <ferror@plt+0x2d8ec>  // b.none
  430194:	fmov	d1, d8
  430198:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  43019c:	ldr	d3, [x1, #1640]
  4301a0:	fmul	d0, d1, d1
  4301a4:	fsub	d0, d0, d8
  4301a8:	fadd	d2, d1, d1
  4301ac:	fdiv	d0, d0, d2
  4301b0:	fsub	d1, d1, d0
  4301b4:	fcmpe	d0, d3
  4301b8:	b.gt	4301a0 <ferror@plt+0x2d8d0>
  4301bc:	fmov	d0, d9
  4301c0:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c094>
  4301c4:	add	x2, x2, #0x628
  4301c8:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  4301cc:	add	x1, x1, #0x638
  4301d0:	bl	402890 <fprintf@plt>
  4301d4:	mov	x3, x20
  4301d8:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c094>
  4301dc:	add	x2, x2, #0x658
  4301e0:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  4301e4:	add	x1, x1, #0x550
  4301e8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  4301ec:	ldr	x0, [x0, #1320]
  4301f0:	bl	402890 <fprintf@plt>
  4301f4:	ldp	x19, x20, [sp, #16]
  4301f8:	ldp	x21, x22, [sp, #32]
  4301fc:	ldp	x23, x24, [sp, #48]
  430200:	ldp	x25, x26, [sp, #64]
  430204:	ldp	d8, d9, [sp, #80]
  430208:	ldr	d10, [sp, #96]
  43020c:	ldp	x29, x30, [sp], #112
  430210:	ret
  430214:	mov	x0, x22
  430218:	bl	446f6c <_obstack_memory_used@@Base>
  43021c:	sub	x5, x0, x19
  430220:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  430224:	ldr	x0, [x0, #1320]
  430228:	mov	x1, #0x27ff                	// #10239
  43022c:	cmp	x19, x1
  430230:	b.ls	430258 <ferror@plt+0x2d988>  // b.plast
  430234:	mov	w1, #0x9fffff              	// #10485759
  430238:	cmp	x19, x1
  43023c:	b.hi	43024c <ferror@plt+0x2d97c>  // b.pmore
  430240:	lsr	x3, x19, #10
  430244:	mov	w4, #0x6b                  	// #107
  430248:	b	430260 <ferror@plt+0x2d990>
  43024c:	lsr	x3, x19, #20
  430250:	mov	w4, #0x4d                  	// #77
  430254:	b	430260 <ferror@plt+0x2d990>
  430258:	mov	x3, x19
  43025c:	mov	w4, #0x20                  	// #32
  430260:	mov	w6, #0x20                  	// #32
  430264:	mov	x1, #0x27ff                	// #10239
  430268:	cmp	x5, x1
  43026c:	b.ls	430284 <ferror@plt+0x2d9b4>  // b.plast
  430270:	mov	w1, #0x9fffff              	// #10485759
  430274:	cmp	x5, x1
  430278:	b.hi	43029c <ferror@plt+0x2d9cc>  // b.pmore
  43027c:	lsr	x5, x5, #10
  430280:	mov	w6, #0x6b                  	// #107
  430284:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c094>
  430288:	add	x2, x2, #0x590
  43028c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  430290:	add	x1, x1, #0x5a0
  430294:	bl	402890 <fprintf@plt>
  430298:	b	4300d0 <ferror@plt+0x2d800>
  43029c:	lsr	x5, x5, #20
  4302a0:	mov	w6, #0x4d                  	// #77
  4302a4:	b	430284 <ferror@plt+0x2d9b4>
  4302a8:	lsr	x23, x23, #20
  4302ac:	mov	w4, #0x4d                  	// #77
  4302b0:	b	4300fc <ferror@plt+0x2d82c>
  4302b4:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c094>
  4302b8:	add	x2, x2, #0x600
  4302bc:	mov	w1, #0x165                 	// #357
  4302c0:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1c094>
  4302c4:	add	x0, x0, #0x610
  4302c8:	bl	4062a0 <ferror@plt+0x39d0>
  4302cc:	ldr	w2, [x0, #40]
  4302d0:	add	w2, w2, #0x1
  4302d4:	str	w2, [x0, #40]
  4302d8:	ldr	w3, [x0, #36]
  4302dc:	cmp	w2, w3
  4302e0:	b.hi	4302ec <ferror@plt+0x2da1c>  // b.pmore
  4302e4:	ldr	x0, [x0, #8]
  4302e8:	str	x1, [x0, w2, uxtw #3]
  4302ec:	ret
  4302f0:	ldrb	w6, [x3]
  4302f4:	cbz	x2, 43038c <ferror@plt+0x2dabc>
  4302f8:	add	x5, x0, #0x1
  4302fc:	adrp	x7, 466000 <_obstack_memory_used@@Base+0x1f094>
  430300:	add	x7, x7, #0xa68
  430304:	mov	w11, #0x20                  	// #32
  430308:	mov	w9, #0x27                  	// #39
  43030c:	mov	w10, #0x0                   	// #0
  430310:	b	43035c <ferror@plt+0x2da8c>
  430314:	add	x1, x1, #0x1
  430318:	subs	x2, x2, #0x1
  43031c:	b.eq	430330 <ferror@plt+0x2da60>  // b.none
  430320:	ldrb	w4, [x1]
  430324:	ldrh	w4, [x7, x4, lsl #1]
  430328:	tst	w4, #0xc00
  43032c:	b.ne	430314 <ferror@plt+0x2da44>  // b.any
  430330:	mov	x8, x5
  430334:	sturb	w11, [x5, #-1]
  430338:	mov	w6, #0x0                   	// #0
  43033c:	b	430354 <ferror@plt+0x2da84>
  430340:	mov	w6, w4
  430344:	add	x1, x1, #0x1
  430348:	mov	x8, x5
  43034c:	sturb	w4, [x5, #-1]
  430350:	sub	x2, x2, #0x1
  430354:	add	x5, x5, #0x1
  430358:	cbz	x2, 430390 <ferror@plt+0x2dac0>
  43035c:	ldrb	w4, [x1]
  430360:	ldrh	w8, [x7, w4, sxtw #1]
  430364:	tst	w8, #0xc00
  430368:	ccmp	w6, #0x0, #0x0, ne  // ne = any
  43036c:	b.eq	430314 <ferror@plt+0x2da44>  // b.none
  430370:	cmp	w4, #0x22
  430374:	ccmp	w4, w9, #0x4, ne  // ne = any
  430378:	b.ne	430344 <ferror@plt+0x2da74>  // b.any
  43037c:	cbz	w6, 430340 <ferror@plt+0x2da70>
  430380:	cmp	w4, w6
  430384:	csel	w6, w6, w10, ne  // ne = any
  430388:	b	430344 <ferror@plt+0x2da74>
  43038c:	mov	x8, x0
  430390:	strb	w6, [x3]
  430394:	sub	x0, x8, x0
  430398:	ret
  43039c:	stp	x29, x30, [sp, #-64]!
  4303a0:	mov	x29, sp
  4303a4:	stp	x19, x20, [sp, #16]
  4303a8:	stp	x21, x22, [sp, #32]
  4303ac:	stp	x23, x24, [sp, #48]
  4303b0:	mov	x19, x0
  4303b4:	mov	x20, x1
  4303b8:	mov	w21, w2
  4303bc:	ldr	x0, [x0, #40]
  4303c0:	ldr	w23, [x0, #60]
  4303c4:	ldr	x22, [x19]
  4303c8:	str	x1, [x22]
  4303cc:	ldr	x0, [x19, #136]
  4303d0:	ldr	x0, [x0, #8]
  4303d4:	cbz	x0, 43044c <ferror@plt+0x2db7c>
  4303d8:	ldr	x2, [x19]
  4303dc:	ldr	x0, [x2]
  4303e0:	ldrb	w1, [x0, #1]
  4303e4:	cmp	w1, #0x2f
  4303e8:	cinc	x0, x0, eq  // eq = none
  4303ec:	add	x0, x0, #0x1
  4303f0:	b	430400 <ferror@plt+0x2db30>
  4303f4:	ldurb	w1, [x0, #-2]
  4303f8:	cmp	w1, #0x2a
  4303fc:	b.eq	430440 <ferror@plt+0x2db70>  // b.none
  430400:	mov	x3, x0
  430404:	ldrb	w1, [x0], #1
  430408:	cmp	w1, #0x2f
  43040c:	b.eq	4303f4 <ferror@plt+0x2db24>  // b.none
  430410:	cmp	w1, #0xa
  430414:	b.ne	430400 <ferror@plt+0x2db30>  // b.any
  430418:	str	x3, [x2]
  43041c:	adrp	x4, 461000 <_obstack_memory_used@@Base+0x1a094>
  430420:	add	x4, x4, #0xd08
  430424:	mov	w3, #0x0                   	// #0
  430428:	mov	w2, w23
  43042c:	mov	w1, #0x3                   	// #3
  430430:	mov	x0, x19
  430434:	bl	41cbe8 <ferror@plt+0x1a318>
  430438:	mov	w24, #0x1                   	// #1
  43043c:	b	43045c <ferror@plt+0x2db8c>
  430440:	str	x0, [x2]
  430444:	mov	w24, #0x0                   	// #0
  430448:	b	43045c <ferror@plt+0x2db8c>
  43044c:	mov	x0, x19
  430450:	bl	424138 <ferror@plt+0x21868>
  430454:	ands	w24, w0, #0xff
  430458:	b.ne	43041c <ferror@plt+0x2db4c>  // b.any
  43045c:	ldrb	w1, [x19, #16]
  430460:	cbz	w1, 4304a4 <ferror@plt+0x2dbd4>
  430464:	cbz	w21, 430480 <ferror@plt+0x2dbb0>
  430468:	ldrb	w0, [x19, #1124]
  43046c:	cbz	w0, 4304bc <ferror@plt+0x2dbec>
  430470:	ldr	x0, [x19, #1328]
  430474:	sub	x0, x0, #0x1
  430478:	str	x0, [x19, #1328]
  43047c:	b	43048c <ferror@plt+0x2dbbc>
  430480:	ldr	x0, [x19, #1328]
  430484:	mov	w1, #0x20                  	// #32
  430488:	sturb	w1, [x0, #-1]
  43048c:	ldr	x0, [x22]
  430490:	ldp	x19, x20, [sp, #16]
  430494:	ldp	x21, x22, [sp, #32]
  430498:	ldp	x23, x24, [sp, #48]
  43049c:	ldp	x29, x30, [sp], #64
  4304a0:	ret
  4304a4:	ldrb	w0, [x19, #1123]
  4304a8:	cbz	w0, 4304bc <ferror@plt+0x2dbec>
  4304ac:	ldr	x0, [x19, #1328]
  4304b0:	sub	x0, x0, #0x1
  4304b4:	str	x0, [x19, #1328]
  4304b8:	b	43048c <ferror@plt+0x2dbbc>
  4304bc:	ldr	x21, [x22]
  4304c0:	sub	x21, x21, x20
  4304c4:	mov	x2, x21
  4304c8:	mov	x1, x20
  4304cc:	ldr	x0, [x19, #1328]
  4304d0:	bl	402260 <memcpy@plt>
  4304d4:	ldr	x1, [x19, #1328]
  4304d8:	add	x0, x1, x21
  4304dc:	cbnz	w24, 4304e8 <ferror@plt+0x2dc18>
  4304e0:	str	x0, [x19, #1328]
  4304e4:	b	43048c <ferror@plt+0x2dbbc>
  4304e8:	add	x0, x0, #0x1
  4304ec:	str	x0, [x19, #1328]
  4304f0:	mov	w0, #0x2a                  	// #42
  4304f4:	strb	w0, [x1, x21]
  4304f8:	ldr	x0, [x19, #1328]
  4304fc:	add	x1, x0, #0x1
  430500:	str	x1, [x19, #1328]
  430504:	mov	w1, #0x2f                  	// #47
  430508:	strb	w1, [x0]
  43050c:	b	43048c <ferror@plt+0x2dbbc>
  430510:	stp	x29, x30, [sp, #-48]!
  430514:	mov	x29, sp
  430518:	stp	x19, x20, [sp, #16]
  43051c:	str	x21, [sp, #32]
  430520:	mov	x19, x0
  430524:	mov	x0, x1
  430528:	mov	w21, w2
  43052c:	ldr	x5, [x19, #1328]
  430530:	adrp	x20, 466000 <_obstack_memory_used@@Base+0x1f094>
  430534:	add	x20, x20, #0xa68
  430538:	mov	x1, x0
  43053c:	ldrb	w3, [x1], #1
  430540:	mov	x4, x5
  430544:	strb	w3, [x4], #1
  430548:	mov	w2, w3
  43054c:	ldrh	w2, [x20, x2, lsl #1]
  430550:	tbnz	w2, #11, 430580 <ferror@plt+0x2dcb0>
  430554:	cmp	w3, #0x2f
  430558:	b.ne	43056c <ferror@plt+0x2dc9c>  // b.any
  43055c:	ldrb	w2, [x0, #1]
  430560:	cmp	w2, #0x2a
  430564:	ccmp	w21, #0x0, #0x4, eq  // eq = none
  430568:	b.ne	43058c <ferror@plt+0x2dcbc>  // b.any
  43056c:	str	x5, [x19, #1328]
  430570:	ldp	x19, x20, [sp, #16]
  430574:	ldr	x21, [sp, #32]
  430578:	ldp	x29, x30, [sp], #48
  43057c:	ret
  430580:	mov	x5, x4
  430584:	mov	x0, x1
  430588:	b	430538 <ferror@plt+0x2dc68>
  43058c:	str	x4, [x19, #1328]
  430590:	mov	w2, #0x0                   	// #0
  430594:	mov	x0, x19
  430598:	bl	43039c <ferror@plt+0x2dacc>
  43059c:	ldr	x5, [x19, #1328]
  4305a0:	b	430538 <ferror@plt+0x2dc68>
  4305a4:	stp	x29, x30, [sp, #-64]!
  4305a8:	mov	x29, sp
  4305ac:	stp	x19, x20, [sp, #16]
  4305b0:	stp	x21, x22, [sp, #32]
  4305b4:	mov	x19, x0
  4305b8:	mov	x20, x1
  4305bc:	ldr	x21, [x0, #1328]
  4305c0:	ldr	x0, [x0, #1312]
  4305c4:	sub	x21, x21, x0
  4305c8:	ldrh	w0, [x1, #16]
  4305cc:	cbz	w0, 43065c <ferror@plt+0x2dd8c>
  4305d0:	str	x23, [sp, #48]
  4305d4:	mov	w22, w2
  4305d8:	add	x0, x21, #0xd
  4305dc:	and	x23, x0, #0xfffffffffffffff8
  4305e0:	ldr	w2, [x1, #12]
  4305e4:	add	x2, x2, x23
  4305e8:	ldr	x1, [x19, #56]
  4305ec:	ldr	x0, [x1, #24]
  4305f0:	ldr	x1, [x1, #16]
  4305f4:	sub	x0, x0, x1
  4305f8:	cmp	x2, x0
  4305fc:	b.hi	43068c <ferror@plt+0x2ddbc>  // b.pmore
  430600:	ldr	x0, [x19, #56]
  430604:	ldr	x1, [x0, #16]
  430608:	ldr	w2, [x20, #12]
  43060c:	add	x0, x1, x2
  430610:	str	x1, [x20, #24]
  430614:	str	w21, [x1, x2]
  430618:	strh	w22, [x0, #4]
  43061c:	mov	x2, x21
  430620:	ldr	x1, [x19, #1312]
  430624:	add	x0, x0, #0x6
  430628:	bl	402260 <memcpy@plt>
  43062c:	ldr	x0, [x19, #1312]
  430630:	str	x0, [x19, #1328]
  430634:	ldr	w0, [x20, #12]
  430638:	add	w0, w0, w23
  43063c:	str	w0, [x20, #12]
  430640:	cbnz	w22, 43069c <ferror@plt+0x2ddcc>
  430644:	ldr	x1, [x19, #56]
  430648:	ldr	x2, [x1, #16]
  43064c:	add	x0, x2, w0, uxtw
  430650:	str	x0, [x1, #16]
  430654:	ldr	x23, [sp, #48]
  430658:	b	4306a0 <ferror@plt+0x2ddd0>
  43065c:	add	x1, x21, #0x1
  430660:	mov	x0, x19
  430664:	bl	42542c <ferror@plt+0x22b5c>
  430668:	mov	x22, x0
  43066c:	mov	x2, x21
  430670:	ldr	x1, [x19, #1312]
  430674:	bl	402260 <memcpy@plt>
  430678:	mov	w0, #0xa                   	// #10
  43067c:	strb	w0, [x22, x21]
  430680:	str	x22, [x20, #24]
  430684:	str	w21, [x20, #12]
  430688:	b	4306a0 <ferror@plt+0x2ddd0>
  43068c:	add	x1, x19, #0x38
  430690:	mov	x0, x19
  430694:	bl	42539c <ferror@plt+0x22acc>
  430698:	b	430600 <ferror@plt+0x2dd30>
  43069c:	ldr	x23, [sp, #48]
  4306a0:	ldp	x19, x20, [sp, #16]
  4306a4:	ldp	x21, x22, [sp, #32]
  4306a8:	ldp	x29, x30, [sp], #64
  4306ac:	ret
  4306b0:	ldrh	w2, [x1, #18]
  4306b4:	tbz	w2, #6, 430734 <ferror@plt+0x2de64>
  4306b8:	ldrb	w2, [x1, #18]
  4306bc:	and	w2, w2, #0x3
  4306c0:	cmp	w2, #0x3
  4306c4:	b.eq	430724 <ferror@plt+0x2de54>  // b.none
  4306c8:	ldr	x2, [x1, #24]
  4306cc:	ldrb	w2, [x2, #19]
  4306d0:	ubfx	x2, x2, #2, #1
  4306d4:	cbz	w2, 4306fc <ferror@plt+0x2de2c>
  4306d8:	ldr	x2, [x0, #136]
  4306dc:	mov	x3, #0x1                   	// #1
  4306e0:	ldr	x2, [x2, #8]
  4306e4:	cbz	x2, 43073c <ferror@plt+0x2de6c>
  4306e8:	add	x3, x3, #0x1
  4306ec:	ldr	x4, [x2, #40]
  4306f0:	cmp	x4, x1
  4306f4:	ccmp	x3, #0x14, #0x0, eq  // eq = none
  4306f8:	b.ls	4306e0 <ferror@plt+0x2de10>  // b.plast
  4306fc:	stp	x29, x30, [sp, #-16]!
  430700:	mov	x29, sp
  430704:	ldr	x3, [x1]
  430708:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c094>
  43070c:	add	x2, x2, #0x670
  430710:	mov	w1, #0x3                   	// #3
  430714:	bl	41c9fc <ferror@plt+0x1a12c>
  430718:	mov	w0, #0x1                   	// #1
  43071c:	ldp	x29, x30, [sp], #16
  430720:	ret
  430724:	ldr	w2, [x1, #24]
  430728:	cmp	w2, #0xa
  43072c:	cset	w2, eq  // eq = none
  430730:	b	4306d4 <ferror@plt+0x2de04>
  430734:	mov	w0, #0x0                   	// #0
  430738:	ret
  43073c:	mov	w0, #0x0                   	// #0
  430740:	ret
  430744:	stp	x29, x30, [sp, #-48]!
  430748:	mov	x29, sp
  43074c:	stp	x19, x20, [sp, #16]
  430750:	mov	x20, x0
  430754:	add	x1, x1, #0x3
  430758:	ldr	x2, [x0, #1328]
  43075c:	ldr	x0, [x0, #1320]
  430760:	sub	x0, x0, x2
  430764:	cmp	x0, x1
  430768:	b.cc	430778 <ferror@plt+0x2dea8>  // b.lo, b.ul, b.last
  43076c:	ldp	x19, x20, [sp, #16]
  430770:	ldp	x29, x30, [sp], #48
  430774:	ret
  430778:	str	x21, [sp, #32]
  43077c:	ldr	x0, [x20, #1312]
  430780:	sub	x21, x2, x0
  430784:	add	x1, x1, x21
  430788:	add	x1, x1, x1, lsl #1
  43078c:	lsr	x19, x1, #1
  430790:	mov	x1, x19
  430794:	bl	4470d0 <_obstack_memory_used@@Base+0x164>
  430798:	str	x0, [x20, #1312]
  43079c:	add	x19, x0, x19
  4307a0:	str	x19, [x20, #1320]
  4307a4:	add	x0, x0, x21
  4307a8:	str	x0, [x20, #1328]
  4307ac:	ldr	x21, [sp, #32]
  4307b0:	b	43076c <ferror@plt+0x2de9c>
  4307b4:	stp	x29, x30, [sp, #-64]!
  4307b8:	mov	x29, sp
  4307bc:	stp	x19, x20, [sp, #16]
  4307c0:	stp	x21, x22, [sp, #32]
  4307c4:	mov	x20, x0
  4307c8:	mov	x19, x1
  4307cc:	ldrb	w0, [x1, #18]
  4307d0:	and	w0, w0, #0x3
  4307d4:	cmp	w0, #0x3
  4307d8:	b.eq	430818 <ferror@plt+0x2df48>  // b.none
  4307dc:	ldr	x1, [x1, #24]
  4307e0:	ldrb	w0, [x1, #19]
  4307e4:	orr	w0, w0, #0x20
  4307e8:	strb	w0, [x1, #19]
  4307ec:	ldr	x22, [x1, #24]
  4307f0:	ldr	w21, [x1, #12]
  4307f4:	mov	x3, x21
  4307f8:	mov	x2, x22
  4307fc:	mov	x1, x19
  430800:	mov	x0, x20
  430804:	bl	42b780 <ferror@plt+0x28eb0>
  430808:	ldp	x19, x20, [sp, #16]
  43080c:	ldp	x21, x22, [sp, #32]
  430810:	ldp	x29, x30, [sp], #64
  430814:	ret
  430818:	str	x23, [sp, #48]
  43081c:	mov	w2, #0x0                   	// #0
  430820:	mov	x0, x20
  430824:	bl	42b034 <ferror@plt+0x28764>
  430828:	mov	x23, x0
  43082c:	bl	4022b0 <strlen@plt>
  430830:	mov	x21, x0
  430834:	add	x1, x0, #0x1
  430838:	mov	x0, x20
  43083c:	bl	42542c <ferror@plt+0x22b5c>
  430840:	mov	x22, x0
  430844:	mov	x2, x21
  430848:	mov	x1, x23
  43084c:	bl	402260 <memcpy@plt>
  430850:	mov	w0, #0xa                   	// #10
  430854:	strb	w0, [x22, x21]
  430858:	ldr	x23, [sp, #48]
  43085c:	b	4307f4 <ferror@plt+0x2df24>
  430860:	stp	x29, x30, [sp, #-32]!
  430864:	mov	x29, sp
  430868:	stp	x19, x20, [sp, #16]
  43086c:	mov	x20, x0
  430870:	ldr	x19, [x0, #1328]
  430874:	adrp	x3, 466000 <_obstack_memory_used@@Base+0x1f094>
  430878:	add	x3, x3, #0xa68
  43087c:	mov	w4, #0x204                 	// #516
  430880:	ldrb	w2, [x1], #1
  430884:	strb	w2, [x19], #1
  430888:	ldrb	w2, [x1]
  43088c:	ldrh	w2, [x3, x2, lsl #1]
  430890:	tst	w4, w2
  430894:	b.ne	430880 <ferror@plt+0x2dfb0>  // b.any
  430898:	ldr	x0, [x20, #136]
  43089c:	str	x1, [x0, #16]
  4308a0:	ldr	x1, [x20, #1328]
  4308a4:	mov	w3, #0x1                   	// #1
  4308a8:	sub	x2, x19, x1
  4308ac:	ldr	x0, [x20, #1088]
  4308b0:	bl	42fdb8 <ferror@plt+0x2d4e8>
  4308b4:	str	x19, [x20, #1328]
  4308b8:	ldp	x19, x20, [sp, #16]
  4308bc:	ldp	x29, x30, [sp], #32
  4308c0:	ret
  4308c4:	ldr	x3, [x0]
  4308c8:	str	x3, [x0, #8]
  4308cc:	ldr	x4, [x3]
  4308d0:	str	x4, [x0, #1344]
  4308d4:	ldr	x4, [x3, #32]
  4308d8:	str	x4, [x0, #1352]
  4308dc:	ldr	x4, [x3, #16]
  4308e0:	str	x4, [x0, #1360]
  4308e4:	strb	wzr, [x3, #104]
  4308e8:	str	x1, [x3]
  4308ec:	str	x1, [x3, #8]
  4308f0:	add	x1, x1, x2
  4308f4:	str	x1, [x3, #32]
  4308f8:	ret
  4308fc:	ldr	x1, [x0, #8]
  430900:	ldr	x2, [x0, #1344]
  430904:	str	x2, [x1]
  430908:	ldr	x2, [x0, #1352]
  43090c:	str	x2, [x1, #32]
  430910:	ldr	x2, [x0, #1360]
  430914:	str	x2, [x1, #8]
  430918:	mov	w2, #0x1                   	// #1
  43091c:	strb	w2, [x1, #104]
  430920:	str	xzr, [x0, #8]
  430924:	ret
  430928:	stp	x29, x30, [sp, #-272]!
  43092c:	mov	x29, sp
  430930:	stp	x19, x20, [sp, #16]
  430934:	stp	x21, x22, [sp, #32]
  430938:	stp	x23, x24, [sp, #48]
  43093c:	stp	x25, x26, [sp, #64]
  430940:	stp	x27, x28, [sp, #80]
  430944:	mov	x21, x0
  430948:	str	x1, [sp, #128]
  43094c:	str	xzr, [sp, #224]
  430950:	str	xzr, [sp, #232]
  430954:	str	xzr, [sp, #240]
  430958:	str	xzr, [sp, #248]
  43095c:	str	wzr, [sp, #256]
  430960:	str	wzr, [sp, #260]
  430964:	str	wzr, [sp, #264]
  430968:	ldrb	w0, [x0, #19]
  43096c:	cmp	w0, #0x0
  430970:	cset	w25, ne  // ne = any
  430974:	ldr	x0, [x21, #136]
  430978:	ldr	x1, [x21]
  43097c:	ldr	x1, [x1]
  430980:	str	x1, [x0, #16]
  430984:	ldr	x0, [x21, #136]
  430988:	ldr	x1, [x21]
  43098c:	ldr	x1, [x1, #32]
  430990:	str	x1, [x0, #24]
  430994:	ands	w27, w2, #0xff
  430998:	b.ne	4309b0 <ferror@plt+0x2e0e0>  // b.any
  43099c:	ldr	x0, [x21, #1312]
  4309a0:	str	x0, [x21, #1328]
  4309a4:	ldr	x0, [x21, #40]
  4309a8:	ldr	w0, [x0, #60]
  4309ac:	str	w0, [x21, #1336]
  4309b0:	ldr	x0, [x21]
  4309b4:	ldr	x0, [x0]
  4309b8:	str	x0, [sp, #120]
  4309bc:	mov	w22, #0x0                   	// #0
  4309c0:	mov	w28, #0x0                   	// #0
  4309c4:	str	wzr, [sp, #112]
  4309c8:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1c094>
  4309cc:	add	x0, x0, #0x6c8
  4309d0:	str	x0, [sp, #104]
  4309d4:	ldr	x26, [x21, #136]
  4309d8:	ldr	x23, [x26, #16]
  4309dc:	ldr	x1, [x26, #24]
  4309e0:	sub	x1, x1, x23
  4309e4:	mov	x0, x21
  4309e8:	bl	430744 <ferror@plt+0x2de74>
  4309ec:	ldr	x24, [x21, #1328]
  4309f0:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1f094>
  4309f4:	add	x0, x0, #0xa68
  4309f8:	str	x0, [sp, #136]
  4309fc:	b	430a44 <ferror@plt+0x2e174>
  430a00:	mov	x24, x20
  430a04:	mov	x23, x19
  430a08:	b	430a44 <ferror@plt+0x2e174>
  430a0c:	mov	x24, x20
  430a10:	mov	x23, x19
  430a14:	mov	w22, #0x6                   	// #6
  430a18:	b	430a44 <ferror@plt+0x2e174>
  430a1c:	mov	x24, x20
  430a20:	mov	x23, x19
  430a24:	mov	w22, #0x3                   	// #3
  430a28:	b	430a44 <ferror@plt+0x2e174>
  430a2c:	mov	x24, x20
  430a30:	mov	x23, x19
  430a34:	mov	w22, #0x8                   	// #8
  430a38:	b	430a44 <ferror@plt+0x2e174>
  430a3c:	mov	w25, #0x0                   	// #0
  430a40:	mov	w22, #0x0                   	// #0
  430a44:	ldr	x0, [x26, #8]
  430a48:	cmp	x0, #0x0
  430a4c:	ccmp	w27, #0x0, #0x0, eq  // eq = none
  430a50:	b.eq	430a90 <ferror@plt+0x2e1c0>  // b.none
  430a54:	mov	x19, x23
  430a58:	ldrb	w0, [x19], #1
  430a5c:	mov	x20, x24
  430a60:	strb	w0, [x20], #1
  430a64:	cmp	w0, #0x7a
  430a68:	b.hi	430bdc <ferror@plt+0x2e30c>  // b.pmore
  430a6c:	ldr	x1, [sp, #104]
  430a70:	ldrh	w1, [x1, w0, uxtw #1]
  430a74:	adr	x2, 430a80 <ferror@plt+0x2e1b0>
  430a78:	add	x1, x2, w1, sxth #2
  430a7c:	br	x1
  430a80:	mov	x24, x20
  430a84:	mov	x23, x19
  430a88:	mov	w22, #0x5                   	// #5
  430a8c:	b	430a44 <ferror@plt+0x2e174>
  430a90:	ldr	x1, [x21]
  430a94:	ldr	w0, [x1, #56]
  430a98:	ldr	x2, [x1, #48]
  430a9c:	lsl	x0, x0, #4
  430aa0:	ldr	x0, [x2, x0]
  430aa4:	cmp	x0, x23
  430aa8:	b.hi	430a54 <ferror@plt+0x2e184>  // b.pmore
  430aac:	str	x23, [x1]
  430ab0:	mov	w1, #0x0                   	// #0
  430ab4:	mov	x0, x21
  430ab8:	bl	423edc <ferror@plt+0x2160c>
  430abc:	b	430a54 <ferror@plt+0x2e184>
  430ac0:	ldr	x0, [x26, #8]
  430ac4:	cbnz	x0, 430b8c <ferror@plt+0x2e2bc>
  430ac8:	str	x24, [x21, #1328]
  430acc:	ldr	x0, [x21]
  430ad0:	str	x19, [x0]
  430ad4:	cbnz	w27, 430b54 <ferror@plt+0x2e284>
  430ad8:	ldr	x0, [x21]
  430adc:	mov	w1, #0x1                   	// #1
  430ae0:	strb	w1, [x0, #104]
  430ae4:	ldr	x0, [x21, #40]
  430ae8:	ldr	w1, [x0, #12]
  430aec:	sub	w1, w1, #0x1
  430af0:	sbfiz	x2, x1, #1, #32
  430af4:	add	x1, x2, w1, sxtw
  430af8:	lsl	x1, x1, #3
  430afc:	ldr	x4, [x0]
  430b00:	add	x3, x4, x1
  430b04:	ldr	w2, [x0, #60]
  430b08:	ldr	w1, [x4, x1]
  430b0c:	sub	w1, w2, w1
  430b10:	ldrb	w2, [x3, #6]
  430b14:	lsr	w1, w1, w2
  430b18:	ldr	w3, [x3, #16]
  430b1c:	add	w3, w3, #0x1
  430b20:	mov	w2, #0x0                   	// #0
  430b24:	add	w1, w1, w3
  430b28:	bl	4287b4 <ferror@plt+0x25ee4>
  430b2c:	sub	w0, w22, #0x1
  430b30:	cmp	w0, #0x1
  430b34:	b.hi	430b9c <ferror@plt+0x2e2cc>  // b.pmore
  430b38:	ldrb	w0, [x21, #16]
  430b3c:	cbnz	w0, 431544 <ferror@plt+0x2ec74>
  430b40:	mov	x0, x21
  430b44:	bl	4245f4 <ferror@plt+0x21d24>
  430b48:	and	w0, w0, #0xff
  430b4c:	cbnz	w0, 430bac <ferror@plt+0x2e2dc>
  430b50:	mov	w27, #0x1                   	// #1
  430b54:	ldr	x1, [sp, #224]
  430b58:	cbz	x1, 430b64 <ferror@plt+0x2e294>
  430b5c:	mov	x0, x21
  430b60:	bl	4251b4 <ferror@plt+0x228e4>
  430b64:	cmp	w22, #0x2
  430b68:	b.eq	43154c <ferror@plt+0x2ec7c>  // b.none
  430b6c:	mov	w0, w27
  430b70:	ldp	x19, x20, [sp, #16]
  430b74:	ldp	x21, x22, [sp, #32]
  430b78:	ldp	x23, x24, [sp, #48]
  430b7c:	ldp	x25, x26, [sp, #64]
  430b80:	ldp	x27, x28, [sp, #80]
  430b84:	ldp	x29, x30, [sp], #272
  430b88:	ret
  430b8c:	str	x24, [x21, #1328]
  430b90:	mov	x0, x21
  430b94:	bl	42b7d8 <ferror@plt+0x28f08>
  430b98:	b	4309d4 <ferror@plt+0x2e104>
  430b9c:	ldr	x1, [sp, #224]
  430ba0:	mov	w27, #0x1                   	// #1
  430ba4:	cbnz	x1, 430b5c <ferror@plt+0x2e28c>
  430ba8:	b	430b6c <ferror@plt+0x2e29c>
  430bac:	cmp	w22, #0x2
  430bb0:	b.eq	430bc4 <ferror@plt+0x2e2f4>  // b.none
  430bb4:	ldr	x0, [x21]
  430bb8:	ldr	x23, [x0]
  430bbc:	mov	x24, x20
  430bc0:	b	430a44 <ferror@plt+0x2e174>
  430bc4:	mov	w0, #0x20                  	// #32
  430bc8:	strb	w0, [x24]
  430bcc:	b	430bb4 <ferror@plt+0x2e2e4>
  430bd0:	cmp	w25, #0x0
  430bd4:	mov	w0, #0x3e                  	// #62
  430bd8:	csel	w28, w28, w0, eq  // eq = none
  430bdc:	ldrb	w0, [x21, #16]
  430be0:	cbnz	w0, 431538 <ferror@plt+0x2ec68>
  430be4:	strb	wzr, [x21, #440]
  430be8:	mov	x24, x20
  430bec:	mov	x23, x19
  430bf0:	cmp	w22, #0x1
  430bf4:	b.ls	430a3c <ferror@plt+0x2e16c>  // b.plast
  430bf8:	cmp	w22, #0x3
  430bfc:	ccmp	w22, #0x8, #0x4, ne  // ne = any
  430c00:	cset	w25, eq  // eq = none
  430c04:	sub	w0, w22, #0x5
  430c08:	cmp	w0, #0x1
  430c0c:	cset	w0, ls  // ls = plast
  430c10:	orr	w25, w25, w0
  430c14:	cbz	w25, 430a44 <ferror@plt+0x2e174>
  430c18:	mov	w25, #0x0                   	// #0
  430c1c:	mov	w22, #0x0                   	// #0
  430c20:	b	430a44 <ferror@plt+0x2e174>
  430c24:	cmp	w28, #0x3e
  430c28:	csel	w28, w28, wzr, ne  // ne = any
  430c2c:	b	430bdc <ferror@plt+0x2e30c>
  430c30:	cmp	w28, w0
  430c34:	b.eq	431524 <ferror@plt+0x2ec54>  // b.none
  430c38:	cmp	w28, #0x0
  430c3c:	csel	w28, w28, w0, ne  // ne = any
  430c40:	b	430bdc <ferror@plt+0x2e30c>
  430c44:	ldrb	w0, [x23, #1]
  430c48:	cmp	w0, #0x22
  430c4c:	mov	w1, #0x5c                  	// #92
  430c50:	ccmp	w0, w1, #0x4, ne  // ne = any
  430c54:	mov	w1, #0x27                  	// #39
  430c58:	ccmp	w0, w1, #0x4, ne  // ne = any
  430c5c:	b.ne	430bdc <ferror@plt+0x2e30c>  // b.any
  430c60:	add	x19, x23, #0x2
  430c64:	add	x20, x24, #0x2
  430c68:	strb	w0, [x24, #1]
  430c6c:	b	430bdc <ferror@plt+0x2e30c>
  430c70:	cbnz	w28, 430bdc <ferror@plt+0x2e30c>
  430c74:	ldrb	w0, [x23, #1]
  430c78:	cmp	w0, #0x2a
  430c7c:	b.ne	430bdc <ferror@plt+0x2e30c>  // b.any
  430c80:	str	x20, [x21, #1328]
  430c84:	ldr	x0, [sp, #128]
  430c88:	cmp	x0, #0x0
  430c8c:	cset	w2, ne  // ne = any
  430c90:	mov	x1, x19
  430c94:	mov	x0, x21
  430c98:	bl	43039c <ferror@plt+0x2dacc>
  430c9c:	mov	x23, x0
  430ca0:	ldr	x24, [x21, #1328]
  430ca4:	b	430a44 <ferror@plt+0x2e174>
  430ca8:	ldrb	w0, [x21, #18]
  430cac:	cbnz	w0, 430bdc <ferror@plt+0x2e30c>
  430cb0:	cmp	w28, #0x0
  430cb4:	ldr	x0, [sp, #128]
  430cb8:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  430cbc:	b.eq	430bdc <ferror@plt+0x2e30c>  // b.none
  430cc0:	str	x24, [x21, #1328]
  430cc4:	mov	x1, x23
  430cc8:	mov	x0, x21
  430ccc:	bl	430860 <ferror@plt+0x2df90>
  430cd0:	mov	x23, x0
  430cd4:	ldr	x20, [x21, #1328]
  430cd8:	ldr	x19, [x26, #16]
  430cdc:	ldrb	w0, [x0, #18]
  430ce0:	tst	x0, #0x2
  430ce4:	ccmp	w22, #0x1, #0x2, ne  // ne = any
  430ce8:	b.ls	430d48 <ferror@plt+0x2e478>  // b.plast
  430cec:	ldr	x0, [sp, #128]
  430cf0:	cbz	x0, 430d04 <ferror@plt+0x2e434>
  430cf4:	ldrb	w0, [x23, #18]
  430cf8:	and	w0, w0, #0x3
  430cfc:	cmp	w0, #0x1
  430d00:	b.eq	430d68 <ferror@plt+0x2e498>  // b.none
  430d04:	cmp	w22, #0x5
  430d08:	b.eq	430a0c <ferror@plt+0x2e13c>  // b.none
  430d0c:	ldrb	w0, [x21, #20]
  430d10:	cbz	w0, 430bdc <ferror@plt+0x2e30c>
  430d14:	ldr	x0, [x21, #1248]
  430d18:	cmp	x0, x23
  430d1c:	b.eq	430a1c <ferror@plt+0x2e14c>  // b.none
  430d20:	ldr	x0, [x21, #1288]
  430d24:	cmp	x0, x23
  430d28:	b.eq	430a2c <ferror@plt+0x2e15c>  // b.none
  430d2c:	ldr	x0, [x21, #1296]
  430d30:	cmp	x0, x23
  430d34:	b.ne	430bdc <ferror@plt+0x2e30c>  // b.any
  430d38:	mov	x24, x20
  430d3c:	mov	x23, x19
  430d40:	mov	w22, #0x8                   	// #8
  430d44:	b	430a44 <ferror@plt+0x2e174>
  430d48:	ldrb	w0, [x21, #24]
  430d4c:	cbz	w0, 430d84 <ferror@plt+0x2e4b4>
  430d50:	ldr	x0, [sp, #128]
  430d54:	cbz	x0, 430d0c <ferror@plt+0x2e43c>
  430d58:	ldrb	w0, [x23, #18]
  430d5c:	and	w0, w0, #0x3
  430d60:	cmp	w0, #0x1
  430d64:	b.ne	430d0c <ferror@plt+0x2e43c>  // b.any
  430d68:	str	x24, [x21, #1328]
  430d6c:	ldrh	w2, [x23, #24]
  430d70:	ldr	x1, [sp, #128]
  430d74:	mov	x0, x21
  430d78:	bl	4305a4 <ferror@plt+0x2dcd4>
  430d7c:	ldr	x20, [x21, #1312]
  430d80:	b	430bdc <ferror@plt+0x2e30c>
  430d84:	strb	wzr, [x21, #440]
  430d88:	ldrb	w0, [x23, #18]
  430d8c:	and	w0, w0, #0x3
  430d90:	cmp	w0, #0x3
  430d94:	b.eq	430dd0 <ferror@plt+0x2e500>  // b.none
  430d98:	ldr	x0, [x23, #24]
  430d9c:	ldrb	w1, [x0, #19]
  430da0:	tbnz	w1, #2, 430de4 <ferror@plt+0x2e514>
  430da4:	mov	x1, x23
  430da8:	mov	x0, x21
  430dac:	bl	4306b0 <ferror@plt+0x2dde0>
  430db0:	and	w0, w0, #0xff
  430db4:	cbnz	w0, 430bdc <ferror@plt+0x2e30c>
  430db8:	str	x24, [x21, #1328]
  430dbc:	mov	x1, x23
  430dc0:	mov	x0, x21
  430dc4:	bl	4307b4 <ferror@plt+0x2dee4>
  430dc8:	mov	w22, #0x0                   	// #0
  430dcc:	b	4309d4 <ferror@plt+0x2e104>
  430dd0:	ldr	w0, [x23, #24]
  430dd4:	cmp	w0, #0xa
  430dd8:	b.ne	430da4 <ferror@plt+0x2e4d4>  // b.any
  430ddc:	mov	w22, #0x1                   	// #1
  430de0:	b	430de8 <ferror@plt+0x2e518>
  430de4:	ldrh	w22, [x0, #16]
  430de8:	ldr	x1, [sp, #224]
  430dec:	cbz	x1, 430df8 <ferror@plt+0x2e528>
  430df0:	mov	x0, x21
  430df4:	bl	4251b4 <ferror@plt+0x228e4>
  430df8:	add	w1, w22, #0x1
  430dfc:	ubfiz	x1, x1, #3, #17
  430e00:	mov	x0, x21
  430e04:	bl	4251d4 <ferror@plt+0x22904>
  430e08:	str	x0, [sp, #224]
  430e0c:	ldr	x0, [x0, #16]
  430e10:	str	x0, [sp, #232]
  430e14:	str	x23, [sp, #240]
  430e18:	ldr	x0, [x21, #1312]
  430e1c:	sub	x24, x24, x0
  430e20:	str	x24, [sp, #248]
  430e24:	str	w22, [sp, #260]
  430e28:	str	wzr, [sp, #264]
  430e2c:	ldr	x0, [x21, #40]
  430e30:	ldr	w0, [x0, #60]
  430e34:	str	w0, [sp, #256]
  430e38:	mov	x24, x20
  430e3c:	mov	x23, x19
  430e40:	mov	w22, #0x1                   	// #1
  430e44:	b	430a44 <ferror@plt+0x2e174>
  430e48:	cbnz	w28, 430bdc <ferror@plt+0x2e30c>
  430e4c:	ldr	w0, [sp, #112]
  430e50:	add	w0, w0, #0x1
  430e54:	str	w0, [sp, #112]
  430e58:	cmp	w22, #0x1
  430e5c:	b.eq	430e80 <ferror@plt+0x2e5b0>  // b.none
  430e60:	cmp	w22, #0x6
  430e64:	b.eq	431574 <ferror@plt+0x2eca4>  // b.none
  430e68:	cmp	w22, #0x3
  430e6c:	b.eq	431594 <ferror@plt+0x2ecc4>  // b.none
  430e70:	cmp	w22, #0x8
  430e74:	b.ne	430bdc <ferror@plt+0x2e30c>  // b.any
  430e78:	mov	w22, #0x9                   	// #9
  430e7c:	b	431578 <ferror@plt+0x2eca8>
  430e80:	ldr	x1, [sp, #240]
  430e84:	mov	x0, x21
  430e88:	bl	4306b0 <ferror@plt+0x2dde0>
  430e8c:	and	w0, w0, #0xff
  430e90:	cbnz	w0, 4313c8 <ferror@plt+0x2eaf8>
  430e94:	ldr	x0, [sp, #248]
  430e98:	ldr	x20, [x21, #1312]
  430e9c:	add	x20, x20, x0
  430ea0:	ldr	x1, [sp, #232]
  430ea4:	str	x0, [x1]
  430ea8:	str	w22, [sp, #112]
  430eac:	mov	w22, #0x2                   	// #2
  430eb0:	b	431578 <ferror@plt+0x2eca8>
  430eb4:	cmp	w28, #0x0
  430eb8:	ccmp	w22, #0x2, #0x0, eq  // eq = none
  430ebc:	ldr	w0, [sp, #112]
  430ec0:	ccmp	w0, #0x1, #0x0, eq  // eq = none
  430ec4:	b.ne	430bdc <ferror@plt+0x2e30c>  // b.any
  430ec8:	ldr	x1, [x21, #1312]
  430ecc:	sub	x1, x20, x1
  430ed0:	add	x0, sp, #0xe0
  430ed4:	bl	4302cc <ferror@plt+0x2d9fc>
  430ed8:	mov	w22, #0x2                   	// #2
  430edc:	mov	w0, #0x1                   	// #1
  430ee0:	str	w0, [sp, #112]
  430ee4:	b	431578 <ferror@plt+0x2eca8>
  430ee8:	cbnz	w28, 430bdc <ferror@plt+0x2e30c>
  430eec:	ldr	w0, [sp, #112]
  430ef0:	subs	w0, w0, #0x1
  430ef4:	str	w0, [sp, #112]
  430ef8:	ccmp	w22, #0x2, #0x0, eq  // eq = none
  430efc:	b.ne	4313b8 <ferror@plt+0x2eae8>  // b.any
  430f00:	ldr	x1, [sp, #240]
  430f04:	ldrb	w0, [x1, #18]
  430f08:	and	w0, w0, #0x3
  430f0c:	cmp	w0, #0x3
  430f10:	b.eq	430f64 <ferror@plt+0x2e694>  // b.none
  430f14:	ldr	x22, [x1, #24]
  430f18:	ldrb	w0, [x22, #19]
  430f1c:	orr	w0, w0, #0x20
  430f20:	strb	w0, [x22, #19]
  430f24:	ldr	x1, [x21, #1312]
  430f28:	sub	x1, x20, x1
  430f2c:	add	x0, sp, #0xe0
  430f30:	bl	4302cc <ferror@plt+0x2d9fc>
  430f34:	ldr	w0, [sp, #264]
  430f38:	cmp	w0, #0x1
  430f3c:	b.eq	4311b0 <ferror@plt+0x2e8e0>  // b.none
  430f40:	ldr	w3, [sp, #264]
  430f44:	ldr	x2, [sp, #240]
  430f48:	mov	x1, x22
  430f4c:	mov	x0, x21
  430f50:	bl	42b450 <ferror@plt+0x28b80>
  430f54:	and	w0, w0, #0xff
  430f58:	cbnz	w0, 4311d8 <ferror@plt+0x2e908>
  430f5c:	str	w28, [sp, #112]
  430f60:	b	4313c8 <ferror@plt+0x2eaf8>
  430f64:	ldr	x1, [x21, #1312]
  430f68:	sub	x1, x20, x1
  430f6c:	add	x0, sp, #0xe0
  430f70:	bl	4302cc <ferror@plt+0x2d9fc>
  430f74:	stp	xzr, xzr, [sp, #176]
  430f78:	stp	xzr, xzr, [sp, #192]
  430f7c:	stp	xzr, xzr, [sp, #208]
  430f80:	ldr	w0, [sp, #260]
  430f84:	strh	w0, [sp, #192]
  430f88:	ldr	w3, [sp, #264]
  430f8c:	ldr	x2, [sp, #240]
  430f90:	add	x1, sp, #0xb0
  430f94:	mov	x0, x21
  430f98:	bl	42b450 <ferror@plt+0x28b80>
  430f9c:	and	w0, w0, #0xff
  430fa0:	cbnz	w0, 430fac <ferror@plt+0x2e6dc>
  430fa4:	str	w28, [sp, #112]
  430fa8:	b	4313c8 <ferror@plt+0x2eaf8>
  430fac:	ldr	x0, [sp, #232]
  430fb0:	ldr	x1, [x0, #8]
  430fb4:	ldr	x22, [x0]
  430fb8:	sub	x22, x1, x22
  430fbc:	ldr	x0, [x21, #1312]
  430fc0:	ldr	x1, [sp, #248]
  430fc4:	add	x0, x0, x1
  430fc8:	str	x0, [x21, #1328]
  430fcc:	str	x19, [x26, #16]
  430fd0:	add	x1, x22, #0x2
  430fd4:	mov	x0, x21
  430fd8:	bl	42542c <ferror@plt+0x22b5c>
  430fdc:	mov	x20, x0
  430fe0:	mov	w1, #0x28                  	// #40
  430fe4:	strb	w1, [x0], #1
  430fe8:	ldr	x3, [x21, #1312]
  430fec:	ldr	x1, [sp, #232]
  430ff0:	ldr	x1, [x1]
  430ff4:	mov	x2, x22
  430ff8:	add	x1, x3, x1
  430ffc:	bl	402260 <memcpy@plt>
  431000:	add	x0, x22, #0x1
  431004:	add	x1, x20, x0
  431008:	mov	w22, #0xa                   	// #10
  43100c:	strb	w22, [x20, x0]
  431010:	ldr	x0, [x26, #24]
  431014:	str	x0, [sp, #112]
  431018:	ldr	x0, [x21]
  43101c:	ldr	x24, [x0]
  431020:	ldr	x3, [x0, #32]
  431024:	str	x3, [sp, #136]
  431028:	ldr	x4, [x0, #8]
  43102c:	str	x4, [sp, #144]
  431030:	ldrb	w5, [x0, #104]
  431034:	str	w5, [sp, #156]
  431038:	ldr	x6, [x21, #8]
  43103c:	str	x6, [sp, #160]
  431040:	str	x20, [x0]
  431044:	ldr	x0, [x21]
  431048:	str	x20, [x0, #8]
  43104c:	ldr	x0, [x21]
  431050:	str	x1, [x0, #32]
  431054:	ldr	x0, [x21]
  431058:	strb	wzr, [x0, #104]
  43105c:	ldr	x0, [x21]
  431060:	str	x0, [x21, #8]
  431064:	ldrb	w0, [x21, #16]
  431068:	cmp	w0, #0x0
  43106c:	cset	w20, ne  // ne = any
  431070:	mov	w2, #0x1                   	// #1
  431074:	strb	w2, [x21, #16]
  431078:	ldr	x23, [x26, #8]
  43107c:	str	xzr, [x26, #8]
  431080:	mov	x1, #0x0                   	// #0
  431084:	mov	x0, x21
  431088:	bl	430928 <ferror@plt+0x2e058>
  43108c:	strb	w20, [x21, #16]
  431090:	mov	x1, #0x1                   	// #1
  431094:	mov	x0, x21
  431098:	bl	430744 <ferror@plt+0x2de74>
  43109c:	ldr	x0, [x21, #1328]
  4310a0:	strb	w22, [x0]
  4310a4:	ldr	x1, [x21]
  4310a8:	ldr	x0, [x21, #1312]
  4310ac:	ldr	x2, [sp, #248]
  4310b0:	add	x0, x0, x2
  4310b4:	str	x0, [x1]
  4310b8:	ldr	x0, [x21]
  4310bc:	ldr	x1, [x0]
  4310c0:	str	x1, [x0, #8]
  4310c4:	ldr	x0, [x21]
  4310c8:	ldr	x1, [x21, #1328]
  4310cc:	str	x1, [x0, #32]
  4310d0:	ldr	x0, [x21]
  4310d4:	ldr	x0, [x0]
  4310d8:	str	x0, [x26, #16]
  4310dc:	ldr	x0, [x21]
  4310e0:	ldr	x0, [x0, #32]
  4310e4:	str	x0, [x26, #24]
  4310e8:	ldrb	w0, [x21, #24]
  4310ec:	add	w0, w0, #0x1
  4310f0:	strb	w0, [x21, #24]
  4310f4:	mov	w2, #0x0                   	// #0
  4310f8:	ldr	x1, [sp, #240]
  4310fc:	mov	x0, x21
  431100:	bl	42b034 <ferror@plt+0x28764>
  431104:	str	x0, [sp, #168]
  431108:	ldrb	w1, [x21, #24]
  43110c:	sub	w1, w1, #0x1
  431110:	strb	w1, [x21, #24]
  431114:	str	x23, [x26, #8]
  431118:	ldr	x1, [x21]
  43111c:	str	x24, [x1]
  431120:	ldr	x1, [x21]
  431124:	ldr	x3, [sp, #136]
  431128:	str	x3, [x1, #32]
  43112c:	ldr	x1, [x21]
  431130:	ldr	x4, [sp, #144]
  431134:	str	x4, [x1, #8]
  431138:	ldr	x1, [x21]
  43113c:	ldrb	w3, [sp, #156]
  431140:	strb	w3, [x1, #104]
  431144:	ldr	x6, [sp, #160]
  431148:	str	x6, [x21, #8]
  43114c:	ldr	x1, [x21, #1312]
  431150:	ldr	x2, [sp, #248]
  431154:	add	x1, x1, x2
  431158:	str	x1, [x21, #1328]
  43115c:	str	x19, [x26, #16]
  431160:	ldr	x2, [sp, #112]
  431164:	str	x2, [x26, #24]
  431168:	bl	4022b0 <strlen@plt>
  43116c:	mov	x19, x0
  431170:	add	x1, x0, #0x1
  431174:	mov	x0, x21
  431178:	bl	42542c <ferror@plt+0x22b5c>
  43117c:	mov	x20, x0
  431180:	mov	x2, x19
  431184:	ldr	x1, [sp, #168]
  431188:	bl	402260 <memcpy@plt>
  43118c:	strb	w22, [x20, x19]
  431190:	mov	x3, x19
  431194:	mov	x2, x20
  431198:	ldr	x1, [sp, #240]
  43119c:	mov	x0, x21
  4311a0:	bl	42b780 <ferror@plt+0x28eb0>
  4311a4:	mov	w22, w28
  4311a8:	str	w28, [sp, #112]
  4311ac:	b	4309d4 <ferror@plt+0x2e104>
  4311b0:	ldrh	w0, [x22, #16]
  4311b4:	cbnz	w0, 430f40 <ferror@plt+0x2e670>
  4311b8:	ldr	x0, [sp, #248]
  4311bc:	add	x1, x0, #0x1
  4311c0:	ldr	x0, [x21, #1312]
  4311c4:	add	x0, x0, x1
  4311c8:	cmp	x20, x0
  4311cc:	b.ne	430f40 <ferror@plt+0x2e670>  // b.any
  4311d0:	str	wzr, [sp, #264]
  4311d4:	b	430f40 <ferror@plt+0x2e670>
  4311d8:	ldr	x0, [x21, #1312]
  4311dc:	ldr	x1, [sp, #248]
  4311e0:	add	x0, x0, x1
  4311e4:	str	x0, [x21, #1328]
  4311e8:	str	x19, [x26, #16]
  4311ec:	ldr	x1, [sp, #240]
  4311f0:	ldr	x20, [x1, #24]
  4311f4:	ldrh	w0, [x20, #16]
  4311f8:	cbz	w0, 431278 <ferror@plt+0x2e9a8>
  4311fc:	ldr	x4, [x20, #24]
  431200:	ldr	w0, [x4]
  431204:	ldrh	w2, [x4, #4]
  431208:	cbz	w2, 43128c <ferror@plt+0x2e9bc>
  43120c:	ldr	x5, [sp, #232]
  431210:	mov	x1, x0
  431214:	and	x3, x2, #0xffff
  431218:	add	x0, x0, #0xd
  43121c:	and	x0, x0, #0xfffffffffffffff8
  431220:	add	x4, x4, x0
  431224:	ldr	w0, [x4]
  431228:	ldr	x3, [x5, x3, lsl #3]
  43122c:	sub	x3, x3, #0x1
  431230:	add	x2, x5, w2, uxth #3
  431234:	ldur	x2, [x2, #-8]
  431238:	sub	x2, x3, x2
  43123c:	add	x2, x0, x2, lsl #1
  431240:	add	x1, x1, x2
  431244:	ldrh	w2, [x4, #4]
  431248:	cbnz	w2, 431214 <ferror@plt+0x2e944>
  43124c:	add	x1, x1, #0x1
  431250:	mov	x0, x21
  431254:	bl	4251d4 <ferror@plt+0x22904>
  431258:	mov	x19, x0
  43125c:	ldr	x5, [x0, #16]
  431260:	ldr	x8, [x20, #24]
  431264:	mov	w0, #0x0                   	// #0
  431268:	mov	x3, #0x0                   	// #0
  43126c:	mov	w10, #0x0                   	// #0
  431270:	mov	w9, #0x5c                  	// #92
  431274:	b	431310 <ferror@plt+0x2ea40>
  431278:	mov	x0, x21
  43127c:	bl	4307b4 <ferror@plt+0x2dee4>
  431280:	mov	w22, w28
  431284:	str	w28, [sp, #112]
  431288:	b	4309d4 <ferror@plt+0x2e104>
  43128c:	mov	x1, x0
  431290:	b	43124c <ferror@plt+0x2e97c>
  431294:	cmp	x11, x1
  431298:	b.cs	4312b0 <ferror@plt+0x2e9e0>  // b.hs, b.nlast
  43129c:	ldurb	w2, [x1, #-1]
  4312a0:	cmp	w2, #0x5c
  4312a4:	mov	w6, w7
  4312a8:	eor	w7, w7, #0x1
  4312ac:	csel	w7, w7, w6, ne  // ne = any
  4312b0:	mov	x2, x5
  4312b4:	strb	w9, [x2], #1
  4312b8:	add	x3, x3, #0x1
  4312bc:	mov	x5, x2
  4312c0:	ldrb	w2, [x1], #1
  4312c4:	strb	w2, [x5], #1
  4312c8:	add	x3, x3, #0x1
  4312cc:	cmp	x1, x4
  4312d0:	b.eq	431300 <ferror@plt+0x2ea30>  // b.none
  4312d4:	mov	x2, x5
  4312d8:	cbz	w0, 4312bc <ferror@plt+0x2e9ec>
  4312dc:	ldrb	w6, [x1]
  4312e0:	cmp	w6, #0x22
  4312e4:	b.eq	431294 <ferror@plt+0x2e9c4>  // b.none
  4312e8:	cbz	w7, 4312bc <ferror@plt+0x2e9ec>
  4312ec:	cmp	w6, #0x5c
  4312f0:	b.ne	4312bc <ferror@plt+0x2e9ec>  // b.any
  4312f4:	strb	w9, [x2], #1
  4312f8:	add	x3, x3, #0x1
  4312fc:	b	4312bc <ferror@plt+0x2e9ec>
  431300:	ldr	w1, [x8]
  431304:	add	x1, x1, #0xd
  431308:	and	x1, x1, #0xfffffffffffffff8
  43130c:	add	x8, x8, x1
  431310:	ldr	w6, [x8]
  431314:	add	x3, x3, x6
  431318:	cbz	x6, 43134c <ferror@plt+0x2ea7c>
  43131c:	mov	x1, #0x0                   	// #0
  431320:	add	x7, x8, #0x6
  431324:	ldrb	w2, [x7, x1]
  431328:	cmp	w2, #0x22
  43132c:	mov	w4, w0
  431330:	eor	w0, w0, #0x1
  431334:	csel	w0, w0, w4, eq  // eq = none
  431338:	strb	w2, [x5, x1]
  43133c:	add	x1, x1, #0x1
  431340:	cmp	x6, x1
  431344:	b.ne	431324 <ferror@plt+0x2ea54>  // b.any
  431348:	add	x5, x5, x1
  43134c:	ldrh	w1, [x8, #4]
  431350:	cbz	w1, 43138c <ferror@plt+0x2eabc>
  431354:	ldr	x4, [sp, #232]
  431358:	and	x6, x1, #0xffff
  43135c:	add	x1, x4, w1, uxth #3
  431360:	ldur	x2, [x1, #-8]
  431364:	ldr	x1, [x4, x6, lsl #3]
  431368:	sub	x1, x1, #0x1
  43136c:	ldr	x4, [x21, #1312]
  431370:	add	x11, x4, x2
  431374:	cmp	x1, x2
  431378:	b.eq	431300 <ferror@plt+0x2ea30>  // b.none
  43137c:	add	x4, x4, x1
  431380:	mov	x1, x11
  431384:	mov	w7, w10
  431388:	b	4312d4 <ferror@plt+0x2ea04>
  43138c:	mov	w0, #0xa                   	// #10
  431390:	strb	w0, [x5]
  431394:	ldr	x2, [x19, #16]
  431398:	ldr	x1, [sp, #240]
  43139c:	mov	x0, x21
  4313a0:	bl	42b780 <ferror@plt+0x28eb0>
  4313a4:	ldr	x0, [x21, #136]
  4313a8:	str	x19, [x0, #32]
  4313ac:	mov	w22, w28
  4313b0:	str	w28, [sp, #112]
  4313b4:	b	4309d4 <ferror@plt+0x2e104>
  4313b8:	sub	w0, w22, #0x7
  4313bc:	tst	w0, #0xfffffffd
  4313c0:	ccmp	w22, #0x4, #0x4, ne  // ne = any
  4313c4:	b.ne	430bdc <ferror@plt+0x2e30c>  // b.any
  4313c8:	ldrb	w0, [x21, #16]
  4313cc:	cbz	w0, 43152c <ferror@plt+0x2ec5c>
  4313d0:	mov	x24, x20
  4313d4:	mov	x23, x19
  4313d8:	mov	w25, #0x0                   	// #0
  4313dc:	mov	w22, #0x0                   	// #0
  4313e0:	mov	w28, #0x0                   	// #0
  4313e4:	b	430a44 <ferror@plt+0x2e174>
  4313e8:	ldr	x0, [sp, #120]
  4313ec:	cmp	x23, x0
  4313f0:	b.eq	43140c <ferror@plt+0x2eb3c>  // b.none
  4313f4:	ldrb	w0, [x21, #20]
  4313f8:	cbz	w0, 430bdc <ferror@plt+0x2e30c>
  4313fc:	mov	x24, x20
  431400:	mov	x23, x19
  431404:	mov	w22, #0x5                   	// #5
  431408:	b	430a44 <ferror@plt+0x2e174>
  43140c:	ldr	x0, [x21, #136]
  431410:	ldr	x0, [x0, #8]
  431414:	cbnz	x0, 4313f4 <ferror@plt+0x2eb24>
  431418:	ldrb	w0, [x21, #16]
  43141c:	cbz	w0, 431434 <ferror@plt+0x2eb64>
  431420:	ldrb	w0, [x21, #20]
  431424:	cbnz	w0, 430a80 <ferror@plt+0x2e1b0>
  431428:	mov	x24, x20
  43142c:	mov	x23, x19
  431430:	b	430bf0 <ferror@plt+0x2e320>
  431434:	str	x20, [x21, #1328]
  431438:	mov	w2, #0x1                   	// #1
  43143c:	mov	x1, x19
  431440:	mov	x0, x21
  431444:	bl	430510 <ferror@plt+0x2dc40>
  431448:	mov	x19, x0
  43144c:	ldr	x20, [x21, #1328]
  431450:	ldrb	w0, [x0]
  431454:	cmp	w0, #0xa
  431458:	b.eq	4314a8 <ferror@plt+0x2ebd8>  // b.none
  43145c:	ldr	x1, [sp, #136]
  431460:	ldrh	w1, [x1, w0, sxtw #1]
  431464:	tbz	w1, #2, 431474 <ferror@plt+0x2eba4>
  431468:	ldr	w2, [x21, #1116]
  43146c:	cmp	w2, #0x15
  431470:	b.ne	43148c <ferror@plt+0x2ebbc>  // b.any
  431474:	tbnz	w1, #9, 43150c <ferror@plt+0x2ec3c>
  431478:	cmp	w0, #0x24
  43147c:	b.eq	431504 <ferror@plt+0x2ec34>  // b.none
  431480:	ldr	w0, [x21, #1116]
  431484:	cmp	w0, #0x15
  431488:	b.eq	4313f4 <ferror@plt+0x2eb24>  // b.none
  43148c:	ldr	x0, [x21]
  431490:	str	x19, [x0]
  431494:	mov	w1, #0x0                   	// #0
  431498:	mov	x0, x21
  43149c:	bl	41af24 <ferror@plt+0x18654>
  4314a0:	mov	w27, #0x0                   	// #0
  4314a4:	b	430b54 <ferror@plt+0x2e284>
  4314a8:	ldr	x0, [x21]
  4314ac:	mov	w1, #0x1                   	// #1
  4314b0:	strb	w1, [x0, #104]
  4314b4:	ldr	x0, [x21, #40]
  4314b8:	ldr	w1, [x0, #12]
  4314bc:	sub	w1, w1, #0x1
  4314c0:	sbfiz	x2, x1, #1, #32
  4314c4:	add	x1, x2, w1, sxtw
  4314c8:	lsl	x1, x1, #3
  4314cc:	ldr	x4, [x0]
  4314d0:	add	x3, x4, x1
  4314d4:	ldr	w2, [x0, #60]
  4314d8:	ldr	w1, [x4, x1]
  4314dc:	sub	w1, w2, w1
  4314e0:	ldrb	w2, [x3, #6]
  4314e4:	lsr	w1, w1, w2
  4314e8:	ldr	w3, [x3, #16]
  4314ec:	add	w3, w3, #0x1
  4314f0:	mov	w2, #0x0                   	// #0
  4314f4:	add	w1, w1, w3
  4314f8:	bl	4287b4 <ferror@plt+0x25ee4>
  4314fc:	mov	w27, #0x0                   	// #0
  431500:	b	430b54 <ferror@plt+0x2e284>
  431504:	ldrb	w0, [x21, #1146]
  431508:	cbz	w0, 431480 <ferror@plt+0x2ebb0>
  43150c:	mov	x1, x19
  431510:	mov	x0, x21
  431514:	bl	430860 <ferror@plt+0x2df90>
  431518:	ldrb	w0, [x0, #16]
  43151c:	tbz	w0, #0, 431480 <ferror@plt+0x2ebb0>
  431520:	b	43148c <ferror@plt+0x2ebbc>
  431524:	mov	w28, #0x0                   	// #0
  431528:	b	430bdc <ferror@plt+0x2e30c>
  43152c:	mov	w22, #0x0                   	// #0
  431530:	mov	w28, #0x0                   	// #0
  431534:	b	430be4 <ferror@plt+0x2e314>
  431538:	mov	x24, x20
  43153c:	mov	x23, x19
  431540:	b	430bf0 <ferror@plt+0x2e320>
  431544:	mov	w27, #0x1                   	// #1
  431548:	b	430b54 <ferror@plt+0x2e284>
  43154c:	ldr	x0, [sp, #240]
  431550:	ldr	x5, [x0]
  431554:	adrp	x4, 463000 <_obstack_memory_used@@Base+0x1c094>
  431558:	add	x4, x4, #0x268
  43155c:	mov	w3, #0x0                   	// #0
  431560:	ldr	w2, [sp, #256]
  431564:	mov	w1, #0x3                   	// #3
  431568:	mov	x0, x21
  43156c:	bl	41cbe8 <ferror@plt+0x1a318>
  431570:	b	430b6c <ferror@plt+0x2e29c>
  431574:	mov	w22, #0x7                   	// #7
  431578:	ldrb	w0, [x21, #16]
  43157c:	mov	w28, #0x0                   	// #0
  431580:	cbz	w0, 430be4 <ferror@plt+0x2e314>
  431584:	mov	x24, x20
  431588:	mov	x23, x19
  43158c:	mov	w25, #0x0                   	// #0
  431590:	b	430a44 <ferror@plt+0x2e174>
  431594:	mov	w22, #0x4                   	// #4
  431598:	b	431578 <ferror@plt+0x2eca8>
  43159c:	stp	x29, x30, [sp, #-32]!
  4315a0:	mov	x29, sp
  4315a4:	str	x19, [sp, #16]
  4315a8:	mov	x19, x0
  4315ac:	ldr	x0, [x19]
  4315b0:	ldrb	w0, [x0, #104]
  4315b4:	cbz	w0, 4315c8 <ferror@plt+0x2ecf8>
  4315b8:	mov	x0, x19
  4315bc:	bl	4245f4 <ferror@plt+0x21d24>
  4315c0:	ands	w0, w0, #0xff
  4315c4:	b.eq	4315f4 <ferror@plt+0x2ed24>  // b.none
  4315c8:	mov	w2, #0x0                   	// #0
  4315cc:	mov	x1, #0x0                   	// #0
  4315d0:	mov	x0, x19
  4315d4:	bl	430928 <ferror@plt+0x2e058>
  4315d8:	and	w0, w0, #0xff
  4315dc:	cbz	w0, 4315ac <ferror@plt+0x2ecdc>
  4315e0:	ldrb	w0, [x19, #18]
  4315e4:	cbnz	w0, 4315ac <ferror@plt+0x2ecdc>
  4315e8:	ldr	x0, [x19]
  4315ec:	cmp	x0, #0x0
  4315f0:	cset	w0, ne  // ne = any
  4315f4:	ldr	x19, [sp, #16]
  4315f8:	ldp	x29, x30, [sp], #32
  4315fc:	ret
  431600:	ldrb	w1, [x0, #19]
  431604:	tbz	w1, #2, 431658 <ferror@plt+0x2ed88>
  431608:	ldrh	w1, [x0, #16]
  43160c:	cbz	w1, 431658 <ferror@plt+0x2ed88>
  431610:	ldr	x3, [x0, #24]
  431614:	ldr	w1, [x3]
  431618:	ldrh	w2, [x3, #4]
  43161c:	cbz	w2, 431660 <ferror@plt+0x2ed90>
  431620:	ldr	x4, [x0]
  431624:	mov	x0, x1
  431628:	add	x1, x1, #0xd
  43162c:	and	x1, x1, #0xfffffffffffffff8
  431630:	add	x3, x3, x1
  431634:	ldr	w1, [x3]
  431638:	add	x2, x4, w2, uxth #3
  43163c:	ldur	x2, [x2, #-8]
  431640:	ldr	w2, [x2, #8]
  431644:	add	x2, x2, x1
  431648:	add	x0, x0, x2
  43164c:	ldrh	w2, [x3, #4]
  431650:	cbnz	w2, 431628 <ferror@plt+0x2ed58>
  431654:	b	43165c <ferror@plt+0x2ed8c>
  431658:	ldr	w0, [x0, #12]
  43165c:	ret
  431660:	mov	x0, x1
  431664:	b	43165c <ferror@plt+0x2ed8c>
  431668:	stp	x29, x30, [sp, #-48]!
  43166c:	mov	x29, sp
  431670:	stp	x19, x20, [sp, #16]
  431674:	stp	x21, x22, [sp, #32]
  431678:	mov	x21, x0
  43167c:	mov	x19, x1
  431680:	ldrb	w0, [x0, #19]
  431684:	tbz	w0, #2, 4316ec <ferror@plt+0x2ee1c>
  431688:	ldrh	w0, [x21, #16]
  43168c:	cbz	w0, 4316ec <ferror@plt+0x2ee1c>
  431690:	ldr	x20, [x21, #24]
  431694:	mov	x1, x20
  431698:	ldr	w2, [x1], #6
  43169c:	mov	x0, x19
  4316a0:	bl	402260 <memcpy@plt>
  4316a4:	ldr	w1, [x20]
  4316a8:	add	x19, x19, x1
  4316ac:	ldrh	w1, [x20, #4]
  4316b0:	cbz	w1, 431704 <ferror@plt+0x2ee34>
  4316b4:	ldr	x0, [x21]
  4316b8:	add	x1, x0, w1, uxth #3
  4316bc:	ldur	x22, [x1, #-8]
  4316c0:	ldr	w2, [x22, #8]
  4316c4:	ldr	x1, [x22]
  4316c8:	mov	x0, x19
  4316cc:	bl	402260 <memcpy@plt>
  4316d0:	ldr	w1, [x22, #8]
  4316d4:	add	x19, x19, x1
  4316d8:	ldr	w1, [x20]
  4316dc:	add	x1, x1, #0xd
  4316e0:	and	x1, x1, #0xfffffffffffffff8
  4316e4:	add	x20, x20, x1
  4316e8:	b	431694 <ferror@plt+0x2edc4>
  4316ec:	ldr	w2, [x21, #12]
  4316f0:	ldr	x1, [x21, #24]
  4316f4:	mov	x0, x19
  4316f8:	bl	402260 <memcpy@plt>
  4316fc:	ldr	w1, [x21, #12]
  431700:	add	x19, x19, x1
  431704:	mov	x0, x19
  431708:	ldp	x19, x20, [sp, #16]
  43170c:	ldp	x21, x22, [sp, #32]
  431710:	ldp	x29, x30, [sp], #48
  431714:	ret
  431718:	stp	x29, x30, [sp, #-64]!
  43171c:	mov	x29, sp
  431720:	stp	x19, x20, [sp, #16]
  431724:	stp	x21, x22, [sp, #32]
  431728:	stp	x23, x24, [sp, #48]
  43172c:	mov	x19, x0
  431730:	ldr	x21, [x0, #136]
  431734:	ldr	x1, [x0, #1312]
  431738:	str	x1, [x0, #1328]
  43173c:	ldr	x1, [x0]
  431740:	ldr	x1, [x1]
  431744:	str	x1, [x21, #16]
  431748:	ldr	x2, [x0]
  43174c:	ldr	x2, [x2, #32]
  431750:	str	x2, [x21, #24]
  431754:	sub	x1, x2, x1
  431758:	bl	430744 <ferror@plt+0x2de74>
  43175c:	ldr	x0, [x21, #16]
  431760:	ldrb	w0, [x0]
  431764:	cmp	w0, #0x28
  431768:	b.eq	43185c <ferror@plt+0x2ef8c>  // b.none
  43176c:	mov	w22, #0x0                   	// #0
  431770:	mov	x23, #0x0                   	// #0
  431774:	mov	w24, #0x0                   	// #0
  431778:	mov	x1, #0x30                  	// #48
  43177c:	mov	x0, x19
  431780:	bl	427e9c <ferror@plt+0x255cc>
  431784:	mov	x2, x0
  431788:	mov	w1, #0x2                   	// #2
  43178c:	mov	x0, x19
  431790:	bl	42bd78 <ferror@plt+0x294a8>
  431794:	mov	x20, x0
  431798:	str	x23, [x0]
  43179c:	strh	w22, [x0, #16]
  4317a0:	ldrb	w0, [x0, #19]
  4317a4:	bfi	w0, w24, #2, #1
  4317a8:	strb	w0, [x20, #19]
  4317ac:	ldr	x23, [x19]
  4317b0:	ldrb	w2, [x19, #1124]
  4317b4:	ldr	x1, [x21, #16]
  4317b8:	mov	x0, x19
  4317bc:	bl	430510 <ferror@plt+0x2dc40>
  4317c0:	str	x0, [x23]
  4317c4:	ldrb	w0, [x19, #24]
  4317c8:	add	w0, w0, #0x1
  4317cc:	strb	w0, [x19, #24]
  4317d0:	mov	w2, #0x0                   	// #0
  4317d4:	mov	x1, x20
  4317d8:	mov	x0, x19
  4317dc:	bl	430928 <ferror@plt+0x2e058>
  4317e0:	ldrb	w0, [x19, #24]
  4317e4:	sub	w0, w0, #0x1
  4317e8:	strb	w0, [x19, #24]
  4317ec:	mov	w1, w22
  4317f0:	mov	x0, x19
  4317f4:	bl	42bd30 <ferror@plt+0x29460>
  4317f8:	ldr	x3, [x19, #1312]
  4317fc:	ldr	x1, [x19, #1328]
  431800:	cmp	x3, x1
  431804:	b.cs	431830 <ferror@plt+0x2ef60>  // b.hs, b.nlast
  431808:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1f094>
  43180c:	add	x0, x0, #0xa68
  431810:	ldurb	w2, [x1, #-1]
  431814:	ldrh	w2, [x0, x2, lsl #1]
  431818:	tst	w2, #0xc00
  43181c:	b.eq	431830 <ferror@plt+0x2ef60>  // b.none
  431820:	sub	x1, x1, #0x1
  431824:	cmp	x3, x1
  431828:	b.ne	431810 <ferror@plt+0x2ef40>  // b.any
  43182c:	mov	x1, x3
  431830:	str	x1, [x19, #1328]
  431834:	mov	w2, #0x0                   	// #0
  431838:	mov	x1, x20
  43183c:	mov	x0, x19
  431840:	bl	4305a4 <ferror@plt+0x2dcd4>
  431844:	mov	x0, x20
  431848:	ldp	x19, x20, [sp, #16]
  43184c:	ldp	x21, x22, [sp, #32]
  431850:	ldp	x23, x24, [sp, #48]
  431854:	ldp	x29, x30, [sp], #64
  431858:	ret
  43185c:	ldr	x0, [x19, #136]
  431860:	ldr	x1, [x0, #16]
  431864:	add	x1, x1, #0x1
  431868:	mov	w22, #0x0                   	// #0
  43186c:	mov	w24, #0x1                   	// #1
  431870:	adrp	x23, 466000 <_obstack_memory_used@@Base+0x1f094>
  431874:	add	x23, x23, #0xa68
  431878:	mov	w2, w24
  43187c:	mov	x0, x19
  431880:	bl	430510 <ferror@plt+0x2dc40>
  431884:	mov	x20, x0
  431888:	ldrb	w0, [x0]
  43188c:	ldrh	w1, [x23, w0, sxtw #1]
  431890:	tbnz	w1, #9, 4318a4 <ferror@plt+0x2efd4>
  431894:	cmp	w0, #0x24
  431898:	b.ne	431934 <ferror@plt+0x2f064>  // b.any
  43189c:	ldrb	w1, [x19, #1146]
  4318a0:	cbz	w1, 431934 <ferror@plt+0x2f064>
  4318a4:	mov	x1, x20
  4318a8:	mov	x0, x19
  4318ac:	bl	430860 <ferror@plt+0x2df90>
  4318b0:	mov	x2, x0
  4318b4:	mov	x3, x0
  4318b8:	mov	w1, w22
  4318bc:	mov	x0, x19
  4318c0:	bl	42bc14 <ferror@plt+0x29344>
  4318c4:	and	w0, w0, #0xff
  4318c8:	cbz	w0, 431948 <ferror@plt+0x2f078>
  4318cc:	add	w22, w22, #0x1
  4318d0:	ldr	x0, [x19, #136]
  4318d4:	mov	w2, w24
  4318d8:	ldr	x1, [x0, #16]
  4318dc:	mov	x0, x19
  4318e0:	bl	430510 <ferror@plt+0x2dc40>
  4318e4:	mov	x20, x0
  4318e8:	ldrb	w0, [x0]
  4318ec:	cmp	w0, #0x2c
  4318f0:	b.eq	43192c <ferror@plt+0x2f05c>  // b.none
  4318f4:	cmp	w0, #0x29
  4318f8:	cset	w0, eq  // eq = none
  4318fc:	cbz	w0, 431948 <ferror@plt+0x2f078>
  431900:	ldr	x0, [x19, #136]
  431904:	ldrb	w1, [x20]
  431908:	cmp	w1, #0x29
  43190c:	cinc	x20, x20, eq  // eq = none
  431910:	str	x20, [x0, #16]
  431914:	ubfiz	x1, x22, #3, #32
  431918:	mov	x0, x19
  43191c:	bl	427f00 <ferror@plt+0x25630>
  431920:	mov	x23, x0
  431924:	mov	w24, #0x1                   	// #1
  431928:	b	431778 <ferror@plt+0x2eea8>
  43192c:	add	x1, x20, #0x1
  431930:	b	431878 <ferror@plt+0x2efa8>
  431934:	cmp	w0, #0x29
  431938:	cset	w0, eq  // eq = none
  43193c:	cmp	w22, #0x0
  431940:	csel	w0, w0, wzr, eq  // eq = none
  431944:	b	4318fc <ferror@plt+0x2f02c>
  431948:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c094>
  43194c:	add	x2, x2, #0x6a0
  431950:	mov	w1, #0x3                   	// #3
  431954:	mov	x0, x19
  431958:	bl	41c9fc <ferror@plt+0x1a12c>
  43195c:	ldr	x0, [x19, #136]
  431960:	ldrb	w1, [x20]
  431964:	cmp	w1, #0x29
  431968:	cinc	x20, x20, eq  // eq = none
  43196c:	str	x20, [x0, #16]
  431970:	ldr	x20, [x19]
  431974:	ldrb	w2, [x19, #1124]
  431978:	ldr	x1, [x21, #16]
  43197c:	mov	x0, x19
  431980:	bl	430510 <ferror@plt+0x2dc40>
  431984:	str	x0, [x20]
  431988:	ldrb	w0, [x19, #24]
  43198c:	add	w0, w0, #0x1
  431990:	strb	w0, [x19, #24]
  431994:	mov	w2, #0x0                   	// #0
  431998:	mov	x1, #0x0                   	// #0
  43199c:	mov	x0, x19
  4319a0:	bl	430928 <ferror@plt+0x2e058>
  4319a4:	ldrb	w0, [x19, #24]
  4319a8:	sub	w0, w0, #0x1
  4319ac:	strb	w0, [x19, #24]
  4319b0:	mov	w1, w22
  4319b4:	mov	x0, x19
  4319b8:	bl	42bd30 <ferror@plt+0x29460>
  4319bc:	mov	x20, #0x0                   	// #0
  4319c0:	b	431844 <ferror@plt+0x2ef74>
  4319c4:	stp	x29, x30, [sp, #-80]!
  4319c8:	mov	x29, sp
  4319cc:	stp	x19, x20, [sp, #16]
  4319d0:	stp	x21, x22, [sp, #32]
  4319d4:	mov	x19, x0
  4319d8:	mov	x20, x1
  4319dc:	ldr	w1, [x0, #12]
  4319e0:	ldr	w0, [x20, #12]
  4319e4:	add	w0, w1, w0
  4319e8:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  4319ec:	mov	x21, x0
  4319f0:	ldr	w2, [x19, #12]
  4319f4:	add	x22, x0, x2
  4319f8:	strb	wzr, [sp, #79]
  4319fc:	strb	wzr, [sp, #78]
  431a00:	ldrh	w0, [x19, #16]
  431a04:	cbz	w0, 431ab0 <ferror@plt+0x2f1e0>
  431a08:	ldr	x19, [x19, #24]
  431a0c:	ldr	x20, [x20, #24]
  431a10:	ldrh	w1, [x19, #4]
  431a14:	ldrh	w0, [x20, #4]
  431a18:	cmp	w1, w0
  431a1c:	b.ne	431b28 <ferror@plt+0x2f258>  // b.any
  431a20:	str	x23, [sp, #48]
  431a24:	mov	x1, x19
  431a28:	add	x3, sp, #0x4f
  431a2c:	ldr	w2, [x1], #6
  431a30:	mov	x0, x21
  431a34:	bl	4302f0 <ferror@plt+0x2da20>
  431a38:	mov	x23, x0
  431a3c:	mov	x1, x20
  431a40:	add	x3, sp, #0x4e
  431a44:	ldr	w2, [x1], #6
  431a48:	mov	x0, x22
  431a4c:	bl	4302f0 <ferror@plt+0x2da20>
  431a50:	cmp	x23, x0
  431a54:	b.ne	431b30 <ferror@plt+0x2f260>  // b.any
  431a58:	mov	x2, x23
  431a5c:	mov	x1, x22
  431a60:	mov	x0, x21
  431a64:	bl	4025e0 <memcmp@plt>
  431a68:	cbnz	w0, 431b3c <ferror@plt+0x2f26c>
  431a6c:	ldrh	w0, [x19, #4]
  431a70:	cbz	w0, 431b48 <ferror@plt+0x2f278>
  431a74:	ldr	w1, [x19]
  431a78:	add	x1, x1, #0xd
  431a7c:	and	x1, x1, #0xfffffffffffffff8
  431a80:	add	x19, x19, x1
  431a84:	ldr	w1, [x20]
  431a88:	add	x1, x1, #0xd
  431a8c:	and	x1, x1, #0xfffffffffffffff8
  431a90:	add	x20, x20, x1
  431a94:	ldrh	w1, [x19, #4]
  431a98:	ldrh	w0, [x20, #4]
  431a9c:	cmp	w1, w0
  431aa0:	b.eq	431a24 <ferror@plt+0x2f154>  // b.none
  431aa4:	mov	w19, #0x1                   	// #1
  431aa8:	ldr	x23, [sp, #48]
  431aac:	b	431aec <ferror@plt+0x2f21c>
  431ab0:	str	x23, [sp, #48]
  431ab4:	add	x3, sp, #0x4f
  431ab8:	ldr	x1, [x19, #24]
  431abc:	mov	x0, x21
  431ac0:	bl	4302f0 <ferror@plt+0x2da20>
  431ac4:	mov	x23, x0
  431ac8:	add	x3, sp, #0x4e
  431acc:	ldr	w2, [x20, #12]
  431ad0:	ldr	x1, [x20, #24]
  431ad4:	mov	x0, x22
  431ad8:	bl	4302f0 <ferror@plt+0x2da20>
  431adc:	mov	w19, #0x1                   	// #1
  431ae0:	cmp	x23, x0
  431ae4:	b.eq	431b08 <ferror@plt+0x2f238>  // b.none
  431ae8:	ldr	x23, [sp, #48]
  431aec:	mov	x0, x21
  431af0:	bl	402690 <free@plt>
  431af4:	mov	w0, w19
  431af8:	ldp	x19, x20, [sp, #16]
  431afc:	ldp	x21, x22, [sp, #32]
  431b00:	ldp	x29, x30, [sp], #80
  431b04:	ret
  431b08:	mov	x2, x23
  431b0c:	mov	x1, x22
  431b10:	mov	x0, x21
  431b14:	bl	4025e0 <memcmp@plt>
  431b18:	cmp	w0, #0x0
  431b1c:	cset	w19, ne  // ne = any
  431b20:	ldr	x23, [sp, #48]
  431b24:	b	431aec <ferror@plt+0x2f21c>
  431b28:	mov	w19, #0x1                   	// #1
  431b2c:	b	431aec <ferror@plt+0x2f21c>
  431b30:	mov	w19, #0x1                   	// #1
  431b34:	ldr	x23, [sp, #48]
  431b38:	b	431aec <ferror@plt+0x2f21c>
  431b3c:	mov	w19, #0x1                   	// #1
  431b40:	ldr	x23, [sp, #48]
  431b44:	b	431aec <ferror@plt+0x2f21c>
  431b48:	mov	w19, #0x0                   	// #0
  431b4c:	ldr	x23, [sp, #48]
  431b50:	b	431aec <ferror@plt+0x2f21c>
  431b54:	stp	x29, x30, [sp, #-48]!
  431b58:	mov	x29, sp
  431b5c:	stp	x19, x20, [sp, #16]
  431b60:	stp	x21, x22, [sp, #32]
  431b64:	mov	x19, x0
  431b68:	bl	426374 <ferror@plt+0x23aa4>
  431b6c:	ldrb	w0, [x0, #4]
  431b70:	cmp	w0, #0x25
  431b74:	b.eq	431b98 <ferror@plt+0x2f2c8>  // b.none
  431b78:	mov	w1, #0x1                   	// #1
  431b7c:	mov	x0, x19
  431b80:	bl	42b95c <ferror@plt+0x2908c>
  431b84:	mov	sp, x29
  431b88:	ldp	x19, x20, [sp, #16]
  431b8c:	ldp	x21, x22, [sp, #32]
  431b90:	ldp	x29, x30, [sp], #48
  431b94:	ret
  431b98:	mov	x0, x19
  431b9c:	bl	426374 <ferror@plt+0x23aa4>
  431ba0:	ldrb	w0, [x0, #4]
  431ba4:	cmp	w0, #0x37
  431ba8:	b.eq	431bbc <ferror@plt+0x2f2ec>  // b.none
  431bac:	mov	w1, #0x2                   	// #2
  431bb0:	mov	x0, x19
  431bb4:	bl	42b95c <ferror@plt+0x2908c>
  431bb8:	b	431b84 <ferror@plt+0x2f2b4>
  431bbc:	mov	x0, x19
  431bc0:	bl	426374 <ferror@plt+0x23aa4>
  431bc4:	mov	x20, x0
  431bc8:	ldrb	w0, [x0, #4]
  431bcc:	cmp	w0, #0x3e
  431bd0:	b.ne	431c08 <ferror@plt+0x2f338>  // b.any
  431bd4:	ldr	w2, [x20, #8]
  431bd8:	cmp	w2, #0x4
  431bdc:	b.ls	431c08 <ferror@plt+0x2f338>  // b.plast
  431be0:	ldr	x1, [x20, #16]
  431be4:	sub	w0, w2, #0x2
  431be8:	ldrb	w0, [x1, w0, uxtw]
  431bec:	cmp	w0, #0x2f
  431bf0:	b.ne	431c08 <ferror@plt+0x2f338>  // b.any
  431bf4:	sub	w0, w2, #0x3
  431bf8:	mov	w3, w0
  431bfc:	ldrb	w0, [x1, w0, uxtw]
  431c00:	cmp	w0, #0x2f
  431c04:	b.eq	431c18 <ferror@plt+0x2f348>  // b.none
  431c08:	mov	w1, #0x3                   	// #3
  431c0c:	mov	x0, x19
  431c10:	bl	42b95c <ferror@plt+0x2908c>
  431c14:	b	431b84 <ferror@plt+0x2f2b4>
  431c18:	ldr	x21, [x19, #920]
  431c1c:	cbz	x21, 431b84 <ferror@plt+0x2f2b4>
  431c20:	add	x0, x3, #0xf
  431c24:	and	x0, x0, #0x1fffffff0
  431c28:	sub	sp, sp, x0
  431c2c:	mov	x22, sp
  431c30:	sub	w2, w2, #0x4
  431c34:	add	x1, x1, #0x1
  431c38:	mov	x0, x22
  431c3c:	bl	402260 <memcpy@plt>
  431c40:	ldr	w0, [x20, #8]
  431c44:	sub	w0, w0, #0x4
  431c48:	strb	wzr, [x22, w0, uxtw]
  431c4c:	mov	x1, x22
  431c50:	mov	x0, x19
  431c54:	blr	x21
  431c58:	b	431b84 <ferror@plt+0x2f2b4>
  431c5c:	str	w1, [x0, #1116]
  431c60:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c094>
  431c64:	add	x3, x3, #0xa88
  431c68:	sbfiz	x2, x1, #4, #32
  431c6c:	sub	x1, x2, w1, sxtw
  431c70:	add	x2, x3, x1
  431c74:	ldrb	w1, [x3, x1]
  431c78:	strb	w1, [x0, #1152]
  431c7c:	ldrb	w1, [x2, #1]
  431c80:	strb	w1, [x0, #1120]
  431c84:	ldrb	w1, [x2, #2]
  431c88:	strb	w1, [x0, #1127]
  431c8c:	ldrb	w1, [x2, #3]
  431c90:	strb	w1, [x0, #1147]
  431c94:	ldrb	w1, [x2, #4]
  431c98:	strb	w1, [x0, #1164]
  431c9c:	ldrb	w1, [x2, #5]
  431ca0:	strb	w1, [x0, #1153]
  431ca4:	ldrb	w1, [x2, #6]
  431ca8:	strb	w1, [x0, #1126]
  431cac:	ldrb	w1, [x2, #7]
  431cb0:	strb	w1, [x0, #1128]
  431cb4:	ldrb	w1, [x2, #8]
  431cb8:	strb	w1, [x0, #1130]
  431cbc:	ldrb	w1, [x2, #9]
  431cc0:	strb	w1, [x0, #1161]
  431cc4:	ldrb	w1, [x2, #10]
  431cc8:	strb	w1, [x0, #1165]
  431ccc:	ldrb	w1, [x2, #11]
  431cd0:	strb	w1, [x0, #1166]
  431cd4:	ldrb	w1, [x2, #12]
  431cd8:	strb	w1, [x0, #1125]
  431cdc:	ldrb	w1, [x2, #13]
  431ce0:	strb	w1, [x0, #1129]
  431ce4:	ldrb	w1, [x2, #14]
  431ce8:	strb	w1, [x0, #1167]
  431cec:	ret
  431cf0:	stp	x29, x30, [sp, #-64]!
  431cf4:	mov	x29, sp
  431cf8:	stp	x19, x20, [sp, #16]
  431cfc:	stp	x21, x22, [sp, #32]
  431d00:	str	x23, [sp, #48]
  431d04:	mov	w23, w0
  431d08:	mov	x21, x1
  431d0c:	mov	x22, x2
  431d10:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  431d14:	ldr	w0, [x0, #1952]
  431d18:	cbz	w0, 431ed8 <ferror@plt+0x2f608>
  431d1c:	mov	x1, #0x588                 	// #1416
  431d20:	mov	x0, #0x1                   	// #1
  431d24:	bl	447084 <_obstack_memory_used@@Base+0x118>
  431d28:	mov	x19, x0
  431d2c:	add	x20, x0, #0x50
  431d30:	stp	xzr, xzr, [x0, #80]
  431d34:	stp	xzr, xzr, [x0, #96]
  431d38:	stp	xzr, xzr, [x0, #112]
  431d3c:	str	xzr, [x0, #128]
  431d40:	mov	w1, w23
  431d44:	bl	431c5c <ferror@plt+0x2f38c>
  431d48:	mov	w0, #0x1                   	// #1
  431d4c:	strb	w0, [x19, #1137]
  431d50:	strb	w0, [x19, #1123]
  431d54:	strb	w0, [x19, #1124]
  431d58:	mov	w1, #0x8                   	// #8
  431d5c:	str	w1, [x19, #1112]
  431d60:	strb	w0, [x19, #1158]
  431d64:	mov	w1, #0x2                   	// #2
  431d68:	strb	w1, [x19, #1136]
  431d6c:	strb	w0, [x19, #1140]
  431d70:	mov	w2, #0xffffffff            	// #-1
  431d74:	strb	w2, [x19, #1198]
  431d78:	strb	wzr, [x19, #1199]
  431d7c:	strb	w0, [x19, #1132]
  431d80:	strb	wzr, [x19, #1139]
  431d84:	strb	w0, [x19, #1146]
  431d88:	strb	w0, [x19, #1148]
  431d8c:	strb	w0, [x19, #1142]
  431d90:	strb	w0, [x19, #1143]
  431d94:	strb	wzr, [x19, #1144]
  431d98:	strb	w1, [x19, #1157]
  431d9c:	mov	w1, #0x1                   	// #1
  431da0:	str	w1, [x19, #1192]
  431da4:	strb	w0, [x19, #1162]
  431da8:	strb	w0, [x19, #1245]
  431dac:	strb	w0, [x19, #1163]
  431db0:	strb	wzr, [x19, #1134]
  431db4:	mov	x1, #0x40                  	// #64
  431db8:	str	x1, [x19, #1208]
  431dbc:	mov	x1, #0x8                   	// #8
  431dc0:	str	x1, [x19, #1216]
  431dc4:	mov	x1, #0x20                  	// #32
  431dc8:	str	x1, [x19, #1232]
  431dcc:	str	x1, [x19, #1224]
  431dd0:	strb	wzr, [x19, #1240]
  431dd4:	strb	w0, [x19, #1241]
  431dd8:	strb	w0, [x19, #1242]
  431ddc:	bl	415eec <ferror@plt+0x1361c>
  431de0:	str	x0, [x19, #1168]
  431de4:	str	xzr, [x19, #1176]
  431de8:	bl	415eec <ferror@plt+0x1361c>
  431dec:	str	x0, [x19, #1184]
  431df0:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  431df4:	add	x0, x0, #0x710
  431df8:	str	x0, [x19, #224]
  431dfc:	str	x22, [x19, #40]
  431e00:	ldrb	w0, [x19, #1123]
  431e04:	cmp	w0, #0x0
  431e08:	cset	w0, eq  // eq = none
  431e0c:	strb	w0, [x19, #21]
  431e10:	mov	w0, #0x53                  	// #83
  431e14:	strb	w0, [x19, #668]
  431e18:	str	xzr, [x19, #672]
  431e1c:	mov	w0, #0x16                  	// #22
  431e20:	strb	w0, [x19, #692]
  431e24:	strh	wzr, [x19, #694]
  431e28:	add	x22, x19, #0x1c8
  431e2c:	mov	w1, #0xfa                  	// #250
  431e30:	mov	x0, x22
  431e34:	bl	4243f4 <ferror@plt+0x21b24>
  431e38:	str	x22, [x19, #488]
  431e3c:	ldr	x0, [x19, #472]
  431e40:	str	x0, [x19, #448]
  431e44:	str	x20, [x19, #136]
  431e48:	str	xzr, [x19, #120]
  431e4c:	str	xzr, [x19, #80]
  431e50:	str	xzr, [x19, #88]
  431e54:	mov	x1, #0x0                   	// #0
  431e58:	mov	x0, x19
  431e5c:	bl	4251d4 <ferror@plt+0x22904>
  431e60:	str	x0, [x19, #56]
  431e64:	mov	x1, #0x0                   	// #0
  431e68:	mov	x0, x19
  431e6c:	bl	4251d4 <ferror@plt+0x22904>
  431e70:	str	x0, [x19, #64]
  431e74:	str	xzr, [x19, #1400]
  431e78:	str	wzr, [x19, #1408]
  431e7c:	mov	x0, #0xfffffffffffffffe    	// #-2
  431e80:	str	x0, [x19, #656]
  431e84:	mov	x0, x19
  431e88:	bl	41f180 <ferror@plt+0x1c8b0>
  431e8c:	adrp	x4, 402000 <memcpy@plt-0x260>
  431e90:	add	x4, x4, #0x690
  431e94:	adrp	x3, 447000 <_obstack_memory_used@@Base+0x94>
  431e98:	add	x3, x3, #0x50
  431e9c:	mov	x2, #0x0                   	// #0
  431ea0:	mov	x1, #0x0                   	// #0
  431ea4:	add	x0, x19, #0x328
  431ea8:	bl	446d40 <_obstack_begin@@Base>
  431eac:	mov	x0, x19
  431eb0:	bl	422a28 <ferror@plt+0x20158>
  431eb4:	mov	x1, x21
  431eb8:	mov	x0, x19
  431ebc:	bl	4232c0 <ferror@plt+0x209f0>
  431ec0:	mov	x0, x19
  431ec4:	ldp	x19, x20, [sp, #16]
  431ec8:	ldp	x21, x22, [sp, #32]
  431ecc:	ldr	x23, [sp, #48]
  431ed0:	ldp	x29, x30, [sp], #64
  431ed4:	ret
  431ed8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  431edc:	add	x19, x0, #0x7a0
  431ee0:	mov	w1, #0x1                   	// #1
  431ee4:	str	w1, [x0, #1952]
  431ee8:	bl	423a1c <ferror@plt+0x2114c>
  431eec:	mov	w1, #0x23                  	// #35
  431ef0:	strb	w1, [x19, #69]
  431ef4:	mov	w1, #0x5d                  	// #93
  431ef8:	strb	w1, [x19, #49]
  431efc:	mov	w1, #0x7c                  	// #124
  431f00:	strb	w1, [x19, #41]
  431f04:	mov	w1, #0x5b                  	// #91
  431f08:	strb	w1, [x19, #48]
  431f0c:	mov	w1, #0x5e                  	// #94
  431f10:	strb	w1, [x19, #47]
  431f14:	mov	w1, #0x7d                  	// #125
  431f18:	strb	w1, [x19, #70]
  431f1c:	mov	w1, #0x5c                  	// #92
  431f20:	strb	w1, [x19, #55]
  431f24:	mov	w1, #0x7b                  	// #123
  431f28:	strb	w1, [x19, #68]
  431f2c:	mov	w1, #0x7e                  	// #126
  431f30:	strb	w1, [x19, #53]
  431f34:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  431f38:	add	x1, x1, #0xf8
  431f3c:	adrp	x0, 460000 <_obstack_memory_used@@Base+0x19094>
  431f40:	add	x0, x0, #0xbb0
  431f44:	bl	402450 <bindtextdomain@plt>
  431f48:	b	431d1c <ferror@plt+0x2f44c>
  431f4c:	str	x1, [x0, #40]
  431f50:	ret
  431f54:	stp	x29, x30, [sp, #-48]!
  431f58:	mov	x29, sp
  431f5c:	stp	x19, x20, [sp, #16]
  431f60:	stp	x21, x22, [sp, #32]
  431f64:	mov	x19, x0
  431f68:	ldr	x0, [x0, #1096]
  431f6c:	bl	402690 <free@plt>
  431f70:	ldr	x0, [x19]
  431f74:	cbz	x0, 431f88 <ferror@plt+0x2f6b8>
  431f78:	mov	x0, x19
  431f7c:	bl	41bcec <ferror@plt+0x1941c>
  431f80:	ldr	x0, [x19]
  431f84:	cbnz	x0, 431f78 <ferror@plt+0x2f6a8>
  431f88:	ldr	x0, [x19, #1312]
  431f8c:	bl	402690 <free@plt>
  431f90:	ldr	x0, [x19, #504]
  431f94:	cbz	x0, 431fa4 <ferror@plt+0x2f6d4>
  431f98:	bl	402690 <free@plt>
  431f9c:	str	xzr, [x19, #504]
  431fa0:	str	wzr, [x19, #512]
  431fa4:	ldr	x0, [x19, #712]
  431fa8:	cbz	x0, 431fb0 <ferror@plt+0x2f6e0>
  431fac:	bl	42f0f4 <ferror@plt+0x2c824>
  431fb0:	mov	x1, #0x0                   	// #0
  431fb4:	add	x0, x19, #0x328
  431fb8:	bl	446eec <_obstack_free@@Base>
  431fbc:	mov	x0, x19
  431fc0:	bl	423264 <ferror@plt+0x20994>
  431fc4:	mov	x0, x19
  431fc8:	bl	422b10 <ferror@plt+0x20240>
  431fcc:	mov	x0, x19
  431fd0:	bl	4158d8 <ferror@plt+0x13008>
  431fd4:	ldr	x0, [x19, #56]
  431fd8:	bl	4253f8 <ferror@plt+0x22b28>
  431fdc:	ldr	x0, [x19, #64]
  431fe0:	bl	4253f8 <ferror@plt+0x22b28>
  431fe4:	ldr	x0, [x19, #72]
  431fe8:	bl	4253f8 <ferror@plt+0x22b28>
  431fec:	add	x22, x19, #0x1c8
  431ff0:	ldr	x20, [x19, #456]
  431ff4:	ldr	x0, [x22, #16]
  431ff8:	bl	402690 <free@plt>
  431ffc:	b	43200c <ferror@plt+0x2f73c>
  432000:	mov	x0, x20
  432004:	bl	402690 <free@plt>
  432008:	mov	x20, x21
  43200c:	cbz	x20, 432028 <ferror@plt+0x2f758>
  432010:	ldr	x21, [x20]
  432014:	ldr	x0, [x20, #16]
  432018:	bl	402690 <free@plt>
  43201c:	cmp	x20, x22
  432020:	b.ne	432000 <ferror@plt+0x2f730>  // b.any
  432024:	b	432008 <ferror@plt+0x2f738>
  432028:	ldr	x20, [x19, #80]
  43202c:	cbz	x20, 432040 <ferror@plt+0x2f770>
  432030:	mov	x0, x20
  432034:	ldr	x20, [x20]
  432038:	bl	402690 <free@plt>
  43203c:	cbnz	x20, 432030 <ferror@plt+0x2f760>
  432040:	ldr	x0, [x19, #1384]
  432044:	cbz	x0, 432080 <ferror@plt+0x2f7b0>
  432048:	ldr	w0, [x19, #1392]
  43204c:	cmp	w0, #0x0
  432050:	b.le	432078 <ferror@plt+0x2f7a8>
  432054:	mov	x20, #0x0                   	// #0
  432058:	ldr	x1, [x19, #1384]
  43205c:	lsl	x0, x20, #4
  432060:	ldr	x0, [x1, x0]
  432064:	bl	402690 <free@plt>
  432068:	add	x20, x20, #0x1
  43206c:	ldr	w0, [x19, #1392]
  432070:	cmp	w0, w20
  432074:	b.gt	432058 <ferror@plt+0x2f788>
  432078:	ldr	x0, [x19, #1384]
  43207c:	bl	402690 <free@plt>
  432080:	ldr	x0, [x19, #1400]
  432084:	cbz	x0, 4320ac <ferror@plt+0x2f7dc>
  432088:	ldr	x20, [x19, #1400]
  43208c:	ldr	x0, [x20]
  432090:	str	x0, [x19, #1400]
  432094:	ldr	x0, [x20, #8]
  432098:	bl	402690 <free@plt>
  43209c:	mov	x0, x20
  4320a0:	bl	402690 <free@plt>
  4320a4:	ldr	x0, [x19, #1400]
  4320a8:	cbnz	x0, 432088 <ferror@plt+0x2f7b8>
  4320ac:	mov	x0, x19
  4320b0:	bl	402690 <free@plt>
  4320b4:	ldp	x19, x20, [sp, #16]
  4320b8:	ldp	x21, x22, [sp, #32]
  4320bc:	ldp	x29, x30, [sp], #48
  4320c0:	ret
  4320c4:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  4320c8:	add	x1, x1, #0xa88
  4320cc:	add	x1, x1, #0x150
  4320d0:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c094>
  4320d4:	add	x3, x3, #0xa88
  4320d8:	add	x3, x3, #0x200
  4320dc:	ldrh	w2, [x1, #10]
  4320e0:	cmp	w2, w0
  4320e4:	b.eq	4320fc <ferror@plt+0x2f82c>  // b.none
  4320e8:	add	x1, x1, #0x10
  4320ec:	cmp	x1, x3
  4320f0:	b.ne	4320dc <ferror@plt+0x2f80c>  // b.any
  4320f4:	mov	x0, #0x0                   	// #0
  4320f8:	ret
  4320fc:	ldr	x0, [x1]
  432100:	b	4320f8 <ferror@plt+0x2f828>
  432104:	stp	x29, x30, [sp, #-48]!
  432108:	mov	x29, sp
  43210c:	stp	x19, x20, [sp, #16]
  432110:	str	x21, [sp, #32]
  432114:	mov	x20, x0
  432118:	ldrb	w0, [x0, #1160]
  43211c:	mov	x21, #0xa                   	// #10
  432120:	cbnz	w0, 432140 <ferror@plt+0x2f870>
  432124:	ldrb	w0, [x20, #1243]
  432128:	mov	x21, #0xb                   	// #11
  43212c:	cbz	w0, 432140 <ferror@plt+0x2f870>
  432130:	ldrb	w0, [x20, #1153]
  432134:	cmp	w0, #0x0
  432138:	cset	x21, eq  // eq = none
  43213c:	add	x21, x21, #0xb
  432140:	adrp	x19, 463000 <_obstack_memory_used@@Base+0x1c094>
  432144:	add	x19, x19, #0xa88
  432148:	add	x19, x19, #0x200
  43214c:	add	x21, x19, x21, lsl #4
  432150:	b	432198 <ferror@plt+0x2f8c8>
  432154:	ldrh	w2, [x19, #8]
  432158:	ldr	x1, [x19]
  43215c:	mov	x0, x20
  432160:	bl	4232a0 <ferror@plt+0x209d0>
  432164:	ldrb	w1, [x0, #18]
  432168:	orr	w1, w1, #0x3
  43216c:	strb	w1, [x0, #18]
  432170:	ldrb	w1, [x19, #12]
  432174:	cbz	w1, 432184 <ferror@plt+0x2f8b4>
  432178:	ldrh	w1, [x0, #18]
  43217c:	orr	w1, w1, #0x20
  432180:	strh	w1, [x0, #18]
  432184:	ldrh	w1, [x19, #10]
  432188:	str	w1, [x0, #24]
  43218c:	add	x19, x19, #0x10
  432190:	cmp	x19, x21
  432194:	b.cs	4321bc <ferror@plt+0x2f8ec>  // b.hs, b.nlast
  432198:	ldrh	w0, [x19, #10]
  43219c:	cmp	w0, #0xa
  4321a0:	b.ne	432154 <ferror@plt+0x2f884>  // b.any
  4321a4:	ldr	w0, [x20, #1116]
  4321a8:	cmp	w0, #0x15
  4321ac:	b.eq	43218c <ferror@plt+0x2f8bc>  // b.none
  4321b0:	ldr	x0, [x20, #1040]
  4321b4:	cbnz	x0, 432154 <ferror@plt+0x2f884>
  4321b8:	b	43218c <ferror@plt+0x2f8bc>
  4321bc:	ldp	x19, x20, [sp, #16]
  4321c0:	ldr	x21, [sp, #32]
  4321c4:	ldp	x29, x30, [sp], #48
  4321c8:	ret
  4321cc:	stp	x29, x30, [sp, #-32]!
  4321d0:	mov	x29, sp
  4321d4:	stp	x19, x20, [sp, #16]
  4321d8:	mov	x19, x0
  4321dc:	mov	w20, w1
  4321e0:	bl	432104 <ferror@plt+0x2f834>
  4321e4:	ldrb	w0, [x19, #1160]
  4321e8:	cbnz	w0, 43220c <ferror@plt+0x2f93c>
  4321ec:	ldrb	w0, [x19, #1243]
  4321f0:	cbz	w0, 4321fc <ferror@plt+0x2f92c>
  4321f4:	ldrb	w0, [x19, #1153]
  4321f8:	cbz	w0, 43220c <ferror@plt+0x2f93c>
  4321fc:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  432200:	add	x1, x1, #0x7c0
  432204:	mov	x0, x19
  432208:	bl	41c5bc <ferror@plt+0x19cec>
  43220c:	ldrb	w0, [x19, #1120]
  432210:	cbz	w0, 4322ac <ferror@plt+0x2f9dc>
  432214:	ldr	w0, [x19, #1116]
  432218:	sub	w1, w0, #0x13
  43221c:	cmp	w1, #0x1
  432220:	b.ls	43225c <ferror@plt+0x2f98c>  // b.plast
  432224:	sub	w1, w0, #0x11
  432228:	cmp	w1, #0x1
  43222c:	b.ls	432270 <ferror@plt+0x2f9a0>  // b.plast
  432230:	sub	w1, w0, #0xf
  432234:	cmp	w1, #0x1
  432238:	b.ls	432284 <ferror@plt+0x2f9b4>  // b.plast
  43223c:	sub	w0, w0, #0xd
  432240:	cmp	w0, #0x1
  432244:	b.ls	432298 <ferror@plt+0x2f9c8>  // b.plast
  432248:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  43224c:	add	x1, x1, #0x830
  432250:	mov	x0, x19
  432254:	bl	41c5bc <ferror@plt+0x19cec>
  432258:	b	432330 <ferror@plt+0x2fa60>
  43225c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  432260:	add	x1, x1, #0x7d0
  432264:	mov	x0, x19
  432268:	bl	41c5bc <ferror@plt+0x19cec>
  43226c:	b	432330 <ferror@plt+0x2fa60>
  432270:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  432274:	add	x1, x1, #0x7e8
  432278:	mov	x0, x19
  43227c:	bl	41c5bc <ferror@plt+0x19cec>
  432280:	b	432330 <ferror@plt+0x2fa60>
  432284:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  432288:	add	x1, x1, #0x800
  43228c:	mov	x0, x19
  432290:	bl	41c5bc <ferror@plt+0x19cec>
  432294:	b	432330 <ferror@plt+0x2fa60>
  432298:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  43229c:	add	x1, x1, #0x818
  4322a0:	mov	x0, x19
  4322a4:	bl	41c5bc <ferror@plt+0x19cec>
  4322a8:	b	432330 <ferror@plt+0x2fa60>
  4322ac:	ldr	w0, [x19, #1116]
  4322b0:	cmp	w0, #0x15
  4322b4:	b.eq	4322f8 <ferror@plt+0x2fa28>  // b.none
  4322b8:	cmp	w0, #0x6
  4322bc:	b.eq	43230c <ferror@plt+0x2fa3c>  // b.none
  4322c0:	cmp	w0, #0x4
  4322c4:	ccmp	w0, #0xa, #0x4, ne  // ne = any
  4322c8:	b.eq	432320 <ferror@plt+0x2fa50>  // b.none
  4322cc:	cmp	w0, #0x3
  4322d0:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  4322d4:	b.eq	432398 <ferror@plt+0x2fac8>  // b.none
  4322d8:	cmp	w0, #0x2
  4322dc:	ccmp	w0, #0x8, #0x4, ne  // ne = any
  4322e0:	b.eq	4323ac <ferror@plt+0x2fadc>  // b.none
  4322e4:	ldrb	w0, [x19, #1152]
  4322e8:	cbnz	w0, 4323c0 <ferror@plt+0x2faf0>
  4322ec:	ldrb	w0, [x19, #1128]
  4322f0:	cbnz	w0, 432350 <ferror@plt+0x2fa80>
  4322f4:	b	432370 <ferror@plt+0x2faa0>
  4322f8:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  4322fc:	add	x1, x1, #0x848
  432300:	mov	x0, x19
  432304:	bl	41c5bc <ferror@plt+0x19cec>
  432308:	b	432330 <ferror@plt+0x2fa60>
  43230c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  432310:	add	x1, x1, #0x858
  432314:	mov	x0, x19
  432318:	bl	41c5bc <ferror@plt+0x19cec>
  43231c:	b	432330 <ferror@plt+0x2fa60>
  432320:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  432324:	add	x1, x1, #0x878
  432328:	mov	x0, x19
  43232c:	bl	41c5bc <ferror@plt+0x19cec>
  432330:	ldrb	w0, [x19, #1128]
  432334:	cbz	w0, 432370 <ferror@plt+0x2faa0>
  432338:	ldrb	w0, [x19, #1120]
  43233c:	cbz	w0, 432350 <ferror@plt+0x2fa80>
  432340:	ldr	w0, [x19, #1116]
  432344:	sub	w0, w0, #0xb
  432348:	cmp	w0, #0x1
  43234c:	b.ls	432370 <ferror@plt+0x2faa0>  // b.plast
  432350:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  432354:	add	x1, x1, #0x8f8
  432358:	mov	x0, x19
  43235c:	bl	41c5bc <ferror@plt+0x19cec>
  432360:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  432364:	add	x1, x1, #0x910
  432368:	mov	x0, x19
  43236c:	bl	41c5bc <ferror@plt+0x19cec>
  432370:	cbz	w20, 4323d4 <ferror@plt+0x2fb04>
  432374:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  432378:	add	x1, x1, #0x928
  43237c:	mov	x0, x19
  432380:	bl	41c5bc <ferror@plt+0x19cec>
  432384:	ldrb	w0, [x19, #1122]
  432388:	cbnz	w0, 4323e8 <ferror@plt+0x2fb18>
  43238c:	ldp	x19, x20, [sp, #16]
  432390:	ldp	x29, x30, [sp], #32
  432394:	ret
  432398:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  43239c:	add	x1, x1, #0x898
  4323a0:	mov	x0, x19
  4323a4:	bl	41c5bc <ferror@plt+0x19cec>
  4323a8:	b	432330 <ferror@plt+0x2fa60>
  4323ac:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  4323b0:	add	x1, x1, #0x8b8
  4323b4:	mov	x0, x19
  4323b8:	bl	41c5bc <ferror@plt+0x19cec>
  4323bc:	b	432330 <ferror@plt+0x2fa60>
  4323c0:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  4323c4:	add	x1, x1, #0x8d8
  4323c8:	mov	x0, x19
  4323cc:	bl	41c5bc <ferror@plt+0x19cec>
  4323d0:	b	432330 <ferror@plt+0x2fa60>
  4323d4:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  4323d8:	add	x1, x1, #0x940
  4323dc:	mov	x0, x19
  4323e0:	bl	41c5bc <ferror@plt+0x19cec>
  4323e4:	b	432384 <ferror@plt+0x2fab4>
  4323e8:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  4323ec:	add	x1, x1, #0x958
  4323f0:	mov	x0, x19
  4323f4:	bl	41c5bc <ferror@plt+0x19cec>
  4323f8:	b	43238c <ferror@plt+0x2fabc>
  4323fc:	stp	x29, x30, [sp, #-48]!
  432400:	mov	x29, sp
  432404:	stp	x19, x20, [sp, #16]
  432408:	stp	x21, x22, [sp, #32]
  43240c:	mov	x19, x0
  432410:	ldrb	w0, [x0, #1120]
  432414:	cbz	w0, 43241c <ferror@plt+0x2fb4c>
  432418:	strb	wzr, [x19, #1138]
  43241c:	ldrb	w1, [x19, #1155]
  432420:	cbz	w1, 432448 <ferror@plt+0x2fb78>
  432424:	ldrb	w1, [x19, #1244]
  432428:	cbnz	w1, 432434 <ferror@plt+0x2fb64>
  43242c:	mov	w1, #0x1                   	// #1
  432430:	strb	w1, [x19, #24]
  432434:	strb	wzr, [x19, #1160]
  432438:	ldrb	w1, [x19, #1136]
  43243c:	cmp	w1, #0x2
  432440:	b.ne	432474 <ferror@plt+0x2fba4>  // b.any
  432444:	b	432454 <ferror@plt+0x2fb84>
  432448:	ldrb	w1, [x19, #1136]
  43244c:	cmp	w1, #0x2
  432450:	b.ne	432464 <ferror@plt+0x2fb94>  // b.any
  432454:	ldrb	w1, [x19, #1125]
  432458:	cmp	w1, #0x0
  43245c:	cset	w1, eq  // eq = none
  432460:	strb	w1, [x19, #1136]
  432464:	ldrb	w1, [x19, #1160]
  432468:	cbz	w1, 432474 <ferror@plt+0x2fba4>
  43246c:	strb	wzr, [x19, #1125]
  432470:	strb	wzr, [x19, #1136]
  432474:	cbz	w0, 43250c <ferror@plt+0x2fc3c>
  432478:	ldrb	w0, [x19, #1158]
  43247c:	cmp	w0, #0x0
  432480:	cset	w21, ne  // ne = any
  432484:	ldrb	w1, [x19, #1159]
  432488:	cbz	w1, 4324f8 <ferror@plt+0x2fc28>
  43248c:	mov	w0, #0x84                  	// #132
  432490:	orr	w21, w21, w0
  432494:	adrp	x20, 463000 <_obstack_memory_used@@Base+0x1c094>
  432498:	add	x20, x20, #0xa88
  43249c:	add	x20, x20, #0x150
  4324a0:	adrp	x22, 463000 <_obstack_memory_used@@Base+0x1c094>
  4324a4:	add	x22, x22, #0xa88
  4324a8:	add	x22, x22, #0x200
  4324ac:	ldrh	w2, [x20, #8]
  4324b0:	ldr	x1, [x20]
  4324b4:	mov	x0, x19
  4324b8:	bl	4232a0 <ferror@plt+0x209d0>
  4324bc:	ldrh	w1, [x0, #18]
  4324c0:	ubfx	x2, x1, #2, #8
  4324c4:	orr	w2, w21, w2
  4324c8:	bfi	w1, w2, #2, #8
  4324cc:	strh	w1, [x0, #18]
  4324d0:	ldrb	w1, [x0, #16]
  4324d4:	and	w1, w1, #0xfffffffe
  4324d8:	strb	w1, [x0, #16]
  4324dc:	ldrh	w2, [x20, #10]
  4324e0:	bfi	w1, w2, #1, #7
  4324e4:	strb	w1, [x0, #16]
  4324e8:	add	x20, x20, #0x10
  4324ec:	cmp	x20, x22
  4324f0:	b.ne	4324ac <ferror@plt+0x2fbdc>  // b.any
  4324f4:	b	4324fc <ferror@plt+0x2fc2c>
  4324f8:	cbnz	w0, 432494 <ferror@plt+0x2fbc4>
  4324fc:	ldp	x19, x20, [sp, #16]
  432500:	ldp	x21, x22, [sp, #32]
  432504:	ldp	x29, x30, [sp], #48
  432508:	ret
  43250c:	ldrb	w0, [x19, #1159]
  432510:	cbz	w0, 4324fc <ferror@plt+0x2fc2c>
  432514:	mov	w21, #0x0                   	// #0
  432518:	b	43248c <ferror@plt+0x2fbbc>
  43251c:	stp	x29, x30, [sp, #-48]!
  432520:	mov	x29, sp
  432524:	stp	x19, x20, [sp, #16]
  432528:	mov	x19, x0
  43252c:	mov	x20, x1
  432530:	ldr	w0, [x0, #1200]
  432534:	cbz	w0, 43254c <ferror@plt+0x2fc7c>
  432538:	ldr	x0, [x19, #712]
  43253c:	cbz	x0, 4325ac <ferror@plt+0x2fcdc>
  432540:	mov	x1, x20
  432544:	ldr	x0, [x19, #712]
  432548:	bl	42f258 <ferror@plt+0x2c988>
  43254c:	mov	w6, #0x0                   	// #0
  432550:	mov	w5, #0x0                   	// #0
  432554:	mov	w4, #0x0                   	// #0
  432558:	mov	w3, #0x0                   	// #0
  43255c:	add	x2, x19, #0xd8
  432560:	mov	x1, x20
  432564:	mov	x0, x19
  432568:	bl	421b30 <ferror@plt+0x1f260>
  43256c:	str	x0, [x19, #288]
  432570:	bl	421b20 <ferror@plt+0x1f250>
  432574:	and	w1, w0, #0xff
  432578:	mov	x0, #0x0                   	// #0
  43257c:	cbnz	w1, 4325a0 <ferror@plt+0x2fcd0>
  432580:	mov	w3, #0x0                   	// #0
  432584:	mov	w2, #0x0                   	// #0
  432588:	ldr	x1, [x19, #288]
  43258c:	mov	x0, x19
  432590:	bl	422388 <ferror@plt+0x1fab8>
  432594:	ldrb	w1, [x19, #1155]
  432598:	mov	x0, x20
  43259c:	cbnz	w1, 4325b8 <ferror@plt+0x2fce8>
  4325a0:	ldp	x19, x20, [sp, #16]
  4325a4:	ldp	x29, x30, [sp], #48
  4325a8:	ret
  4325ac:	bl	42f0d8 <ferror@plt+0x2c808>
  4325b0:	str	x0, [x19, #712]
  4325b4:	b	432540 <ferror@plt+0x2fc70>
  4325b8:	mov	x0, x19
  4325bc:	bl	426374 <ferror@plt+0x23aa4>
  4325c0:	mov	x20, x0
  4325c4:	ldrb	w0, [x0, #4]
  4325c8:	cmp	w0, #0x25
  4325cc:	b.eq	432600 <ferror@plt+0x2fd30>  // b.none
  4325d0:	mov	w1, #0x1                   	// #1
  4325d4:	mov	x0, x19
  4325d8:	bl	42b95c <ferror@plt+0x2908c>
  4325dc:	ldr	x1, [x19, #40]
  4325e0:	ldr	w0, [x1, #12]
  4325e4:	sub	w0, w0, #0x1
  4325e8:	ldr	x1, [x1]
  4325ec:	sbfiz	x2, x0, #1, #32
  4325f0:	add	x0, x2, w0, sxtw
  4325f4:	add	x0, x1, x0, lsl #3
  4325f8:	ldr	x0, [x0, #8]
  4325fc:	b	4325a0 <ferror@plt+0x2fcd0>
  432600:	str	x21, [sp, #32]
  432604:	mov	w0, #0x1                   	// #1
  432608:	strb	w0, [x19, #16]
  43260c:	mov	x0, x19
  432610:	bl	426374 <ferror@plt+0x23aa4>
  432614:	mov	x21, x0
  432618:	mov	w1, #0x1                   	// #1
  43261c:	mov	x0, x19
  432620:	bl	42b95c <ferror@plt+0x2908c>
  432624:	strb	wzr, [x19, #16]
  432628:	ldrb	w0, [x21, #4]
  43262c:	cmp	w0, #0x37
  432630:	b.eq	43263c <ferror@plt+0x2fd6c>  // b.none
  432634:	ldr	x21, [sp, #32]
  432638:	b	4325d0 <ferror@plt+0x2fd00>
  43263c:	ldrh	w1, [x20, #6]
  432640:	and	w1, w1, #0x1
  432644:	mov	x0, x19
  432648:	bl	41af24 <ferror@plt+0x18654>
  43264c:	cbnz	w0, 432658 <ferror@plt+0x2fd88>
  432650:	ldr	x21, [sp, #32]
  432654:	b	4325d0 <ferror@plt+0x2fd00>
  432658:	mov	x0, x19
  43265c:	bl	431b54 <ferror@plt+0x2f284>
  432660:	ldr	x21, [sp, #32]
  432664:	b	4325dc <ferror@plt+0x2fd0c>
  432668:	stp	x29, x30, [sp, #-32]!
  43266c:	mov	x29, sp
  432670:	stp	x19, x20, [sp, #16]
  432674:	mov	x19, x0
  432678:	mov	x20, x1
  43267c:	ldrb	w0, [x0, #1151]
  432680:	cbnz	w0, 4326c0 <ferror@plt+0x2fdf0>
  432684:	ldr	x0, [x19]
  432688:	cbz	x0, 43269c <ferror@plt+0x2fdcc>
  43268c:	mov	x0, x19
  432690:	bl	41bcec <ferror@plt+0x1941c>
  432694:	ldr	x0, [x19]
  432698:	cbnz	x0, 43268c <ferror@plt+0x2fdbc>
  43269c:	ldr	w0, [x19, #1200]
  4326a0:	cmp	w0, #0x0
  4326a4:	ccmp	x20, #0x0, #0x4, ne  // ne = any
  4326a8:	b.ne	4326d8 <ferror@plt+0x2fe08>  // b.any
  4326ac:	ldrb	w0, [x19, #1131]
  4326b0:	cbnz	w0, 432700 <ferror@plt+0x2fe30>
  4326b4:	ldp	x19, x20, [sp, #16]
  4326b8:	ldp	x29, x30, [sp], #32
  4326bc:	ret
  4326c0:	mov	x2, #0x0                   	// #0
  4326c4:	adrp	x1, 42a000 <ferror@plt+0x27730>
  4326c8:	add	x1, x1, #0xf40
  4326cc:	mov	x0, x19
  4326d0:	bl	423434 <ferror@plt+0x20b64>
  4326d4:	b	432684 <ferror@plt+0x2fdb4>
  4326d8:	mov	w2, #0x48                  	// #72
  4326dc:	mov	x1, x20
  4326e0:	ldr	x0, [x19, #712]
  4326e4:	bl	42f494 <ferror@plt+0x2cbc4>
  4326e8:	ldrb	w0, [x19, #1205]
  4326ec:	cbz	w0, 4326ac <ferror@plt+0x2fddc>
  4326f0:	mov	x1, x20
  4326f4:	ldr	x0, [x19, #712]
  4326f8:	bl	42f6c0 <ferror@plt+0x2cdf0>
  4326fc:	b	4326ac <ferror@plt+0x2fddc>
  432700:	mov	x0, x19
  432704:	bl	422c74 <ferror@plt+0x203a4>
  432708:	b	4326b4 <ferror@plt+0x2fde4>
  43270c:	stp	x29, x30, [sp, #-96]!
  432710:	mov	x29, sp
  432714:	mov	x5, x0
  432718:	add	x0, sp, #0x18
  43271c:	stp	xzr, xzr, [sp, #32]
  432720:	stp	xzr, xzr, [x0, #24]
  432724:	stp	xzr, xzr, [x0, #40]
  432728:	stp	xzr, xzr, [x0, #56]
  43272c:	str	x5, [sp, #24]
  432730:	str	w1, [sp, #32]
  432734:	mov	x1, #0x48                  	// #72
  432738:	bl	4329cc <ferror@plt+0x300fc>
  43273c:	cbz	x0, 432768 <ferror@plt+0x2fe98>
  432740:	ldp	x2, x3, [sp, #24]
  432744:	stp	x2, x3, [x0]
  432748:	ldp	x2, x3, [sp, #40]
  43274c:	stp	x2, x3, [x0, #16]
  432750:	ldp	x2, x3, [sp, #56]
  432754:	stp	x2, x3, [x0, #32]
  432758:	ldp	x2, x3, [sp, #72]
  43275c:	stp	x2, x3, [x0, #48]
  432760:	ldr	x1, [sp, #88]
  432764:	str	x1, [x0, #64]
  432768:	ldp	x29, x30, [sp], #96
  43276c:	ret
  432770:	stp	x29, x30, [sp, #-48]!
  432774:	mov	x29, sp
  432778:	str	x19, [sp, #16]
  43277c:	mov	x19, x1
  432780:	str	wzr, [sp, #44]
  432784:	add	x1, sp, #0x2c
  432788:	bl	455760 <_obstack_memory_used@@Base+0xe7f4>
  43278c:	mov	x1, x0
  432790:	ldr	w0, [x19]
  432794:	cmp	w0, #0x0
  432798:	b.gt	4327ec <ferror@plt+0x2ff1c>
  43279c:	ldr	w0, [sp, #44]
  4327a0:	cmp	w0, #0x0
  4327a4:	cset	x0, eq  // eq = none
  4327a8:	sub	x1, x1, x0
  4327ac:	ldr	w0, [x19, #44]
  4327b0:	cbnz	w0, 4327fc <ferror@plt+0x2ff2c>
  4327b4:	ldr	x5, [x19, #16]
  4327b8:	mov	x4, #0x0                   	// #0
  4327bc:	mov	w3, #0x0                   	// #0
  4327c0:	mov	x2, #0x0                   	// #0
  4327c4:	ldr	x0, [x19, #32]
  4327c8:	blr	x5
  4327cc:	str	w0, [x19, #40]
  4327d0:	ldr	w0, [x19, #40]
  4327d4:	cmp	w0, #0x0
  4327d8:	mov	w0, #0x5                   	// #5
  4327dc:	csel	w0, w0, wzr, ne  // ne = any
  4327e0:	ldr	x19, [sp, #16]
  4327e4:	ldp	x29, x30, [sp], #48
  4327e8:	ret
  4327ec:	sub	w0, w0, #0x1
  4327f0:	str	w0, [x19]
  4327f4:	mov	w0, #0x0                   	// #0
  4327f8:	b	4327e0 <ferror@plt+0x2ff10>
  4327fc:	ldr	x4, [x19, #32]
  432800:	ldr	x3, [x19, #24]
  432804:	ldr	x2, [x19, #16]
  432808:	ldr	x0, [x19, #8]
  43280c:	bl	432ee0 <ferror@plt+0x30610>
  432810:	str	w0, [x19, #40]
  432814:	b	4327d0 <ferror@plt+0x2ff00>
  432818:	stp	x29, x30, [sp, #-80]!
  43281c:	mov	x29, sp
  432820:	str	x19, [sp, #16]
  432824:	mov	x19, x0
  432828:	add	w1, w1, #0x1
  43282c:	str	w1, [sp, #32]
  432830:	str	x0, [sp, #40]
  432834:	str	x2, [sp, #48]
  432838:	str	x3, [sp, #56]
  43283c:	str	x4, [sp, #64]
  432840:	str	wzr, [sp, #72]
  432844:	mov	x3, #0x0                   	// #0
  432848:	mov	x2, #0x0                   	// #0
  43284c:	mov	x1, #0x1000                	// #4096
  432850:	bl	4329cc <ferror@plt+0x300fc>
  432854:	cbz	x0, 432898 <ferror@plt+0x2ffc8>
  432858:	mov	x1, x0
  43285c:	mov	x4, #0x0                   	// #0
  432860:	mov	x3, #0x0                   	// #0
  432864:	mov	x2, #0x1000                	// #4096
  432868:	mov	x0, x19
  43286c:	bl	432920 <ferror@plt+0x30050>
  432870:	mov	w0, #0x1                   	// #1
  432874:	str	w0, [sp, #76]
  432878:	add	x1, sp, #0x20
  43287c:	adrp	x0, 432000 <ferror@plt+0x2f730>
  432880:	add	x0, x0, #0x770
  432884:	bl	455da8 <_obstack_memory_used@@Base+0xee3c>
  432888:	ldr	w0, [sp, #72]
  43288c:	ldr	x19, [sp, #16]
  432890:	ldp	x29, x30, [sp], #80
  432894:	ret
  432898:	str	wzr, [sp, #76]
  43289c:	b	432878 <ferror@plt+0x2ffa8>
  4328a0:	cmp	x2, #0xf
  4328a4:	b.ls	43291c <ferror@plt+0x3004c>  // b.plast
  4328a8:	add	x4, x0, #0x40
  4328ac:	ldr	x3, [x0, #64]
  4328b0:	mov	x5, #0x0                   	// #0
  4328b4:	cbnz	x3, 4328c0 <ferror@plt+0x2fff0>
  4328b8:	b	43290c <ferror@plt+0x3003c>
  4328bc:	mov	x4, x6
  4328c0:	add	x5, x5, #0x1
  4328c4:	mov	x6, x3
  4328c8:	ldr	x3, [x3]
  4328cc:	cbz	x3, 4328ec <ferror@plt+0x3001c>
  4328d0:	cbz	x4, 4328bc <ferror@plt+0x2ffec>
  4328d4:	ldr	x7, [x4]
  4328d8:	ldr	x8, [x3, #8]
  4328dc:	ldr	x7, [x7, #8]
  4328e0:	cmp	x8, x7
  4328e4:	csel	x4, x4, x6, cs  // cs = hs, nlast
  4328e8:	b	4328c0 <ferror@plt+0x2fff0>
  4328ec:	cmp	x5, #0xf
  4328f0:	b.ls	43290c <ferror@plt+0x3003c>  // b.plast
  4328f4:	ldr	x3, [x4]
  4328f8:	ldr	x5, [x3, #8]
  4328fc:	cmp	x5, x2
  432900:	b.cs	43291c <ferror@plt+0x3004c>  // b.hs, b.nlast
  432904:	ldr	x3, [x3]
  432908:	str	x3, [x4]
  43290c:	ldr	x3, [x0, #64]
  432910:	str	x3, [x1]
  432914:	str	x2, [x1, #8]
  432918:	str	x1, [x0, #64]
  43291c:	ret
  432920:	stp	x29, x30, [sp, #-48]!
  432924:	mov	x29, sp
  432928:	stp	x19, x20, [sp, #16]
  43292c:	str	x21, [sp, #32]
  432930:	mov	x19, x0
  432934:	mov	x21, x1
  432938:	mov	x20, x2
  43293c:	mov	x0, #0xffff                	// #65535
  432940:	cmp	x2, x0
  432944:	b.ls	432960 <ferror@plt+0x30090>  // b.plast
  432948:	bl	402500 <getpagesize@plt>
  43294c:	sxtw	x0, w0
  432950:	sub	x0, x0, #0x1
  432954:	orr	x1, x21, x20
  432958:	tst	x0, x1
  43295c:	b.eq	4329ac <ferror@plt+0x300dc>  // b.none
  432960:	ldr	w0, [x19, #8]
  432964:	cbz	w0, 432984 <ferror@plt+0x300b4>
  432968:	add	x0, x19, #0x3c
  43296c:	mov	w2, #0x1                   	// #1
  432970:	ldxr	w1, [x0]
  432974:	stxr	w3, w2, [x0]
  432978:	cbnz	w3, 432970 <ferror@plt+0x300a0>
  43297c:	dmb	ish
  432980:	cbnz	w1, 43299c <ferror@plt+0x300cc>
  432984:	mov	x2, x20
  432988:	mov	x1, x21
  43298c:	mov	x0, x19
  432990:	bl	4328a0 <ferror@plt+0x2ffd0>
  432994:	ldr	w0, [x19, #8]
  432998:	cbnz	w0, 4329c0 <ferror@plt+0x300f0>
  43299c:	ldp	x19, x20, [sp, #16]
  4329a0:	ldr	x21, [sp, #32]
  4329a4:	ldp	x29, x30, [sp], #48
  4329a8:	ret
  4329ac:	mov	x1, x20
  4329b0:	mov	x0, x21
  4329b4:	bl	4026f0 <munmap@plt>
  4329b8:	cbnz	w0, 432960 <ferror@plt+0x30090>
  4329bc:	b	43299c <ferror@plt+0x300cc>
  4329c0:	add	x19, x19, #0x3c
  4329c4:	stlr	wzr, [x19]
  4329c8:	b	43299c <ferror@plt+0x300cc>
  4329cc:	stp	x29, x30, [sp, #-64]!
  4329d0:	mov	x29, sp
  4329d4:	stp	x19, x20, [sp, #16]
  4329d8:	stp	x21, x22, [sp, #32]
  4329dc:	stp	x23, x24, [sp, #48]
  4329e0:	mov	x21, x0
  4329e4:	mov	x20, x1
  4329e8:	mov	x22, x2
  4329ec:	mov	x23, x3
  4329f0:	ldr	w0, [x0, #8]
  4329f4:	cbnz	w0, 432a30 <ferror@plt+0x30160>
  4329f8:	add	x1, x21, #0x40
  4329fc:	ldr	x19, [x21, #64]
  432a00:	cbz	x19, 432a1c <ferror@plt+0x3014c>
  432a04:	ldr	x4, [x19, #8]
  432a08:	cmp	x4, x20
  432a0c:	b.cs	432ab8 <ferror@plt+0x301e8>  // b.hs, b.nlast
  432a10:	mov	x1, x19
  432a14:	ldr	x19, [x19]
  432a18:	cbnz	x19, 432a04 <ferror@plt+0x30134>
  432a1c:	ldr	w0, [x21, #8]
  432a20:	cbz	w0, 432a4c <ferror@plt+0x3017c>
  432a24:	add	x0, x21, #0x3c
  432a28:	stlr	wzr, [x0]
  432a2c:	b	432a4c <ferror@plt+0x3017c>
  432a30:	add	x0, x21, #0x3c
  432a34:	mov	w2, #0x1                   	// #1
  432a38:	ldxr	w1, [x0]
  432a3c:	stxr	w3, w2, [x0]
  432a40:	cbnz	w3, 432a38 <ferror@plt+0x30168>
  432a44:	dmb	ish
  432a48:	cbz	w1, 4329f8 <ferror@plt+0x30128>
  432a4c:	bl	402500 <getpagesize@plt>
  432a50:	sxtw	x0, w0
  432a54:	sub	x24, x20, #0x1
  432a58:	add	x24, x24, x0
  432a5c:	neg	x0, x0
  432a60:	and	x24, x24, x0
  432a64:	mov	x5, #0x0                   	// #0
  432a68:	mov	w4, #0xffffffff            	// #-1
  432a6c:	mov	w3, #0x22                  	// #34
  432a70:	mov	w2, #0x3                   	// #3
  432a74:	mov	x1, x24
  432a78:	mov	x0, #0x0                   	// #0
  432a7c:	bl	402640 <mmap@plt>
  432a80:	mov	x19, x0
  432a84:	cmn	x0, #0x1
  432a88:	b.eq	432b08 <ferror@plt+0x30238>  // b.none
  432a8c:	add	x1, x20, #0x7
  432a90:	and	x1, x1, #0xfffffffffffffff8
  432a94:	cmp	x24, x1
  432a98:	b.ls	432adc <ferror@plt+0x3020c>  // b.plast
  432a9c:	mov	x4, x23
  432aa0:	mov	x3, x22
  432aa4:	sub	x2, x24, x1
  432aa8:	add	x1, x0, x1
  432aac:	mov	x0, x21
  432ab0:	bl	432920 <ferror@plt+0x30050>
  432ab4:	b	432adc <ferror@plt+0x3020c>
  432ab8:	ldr	x0, [x19]
  432abc:	str	x0, [x1]
  432ac0:	add	x1, x20, #0x7
  432ac4:	and	x1, x1, #0xfffffffffffffff8
  432ac8:	ldr	x2, [x19, #8]
  432acc:	cmp	x2, x1
  432ad0:	b.hi	432af4 <ferror@plt+0x30224>  // b.pmore
  432ad4:	ldr	w0, [x21, #8]
  432ad8:	cbnz	w0, 432b2c <ferror@plt+0x3025c>
  432adc:	mov	x0, x19
  432ae0:	ldp	x19, x20, [sp, #16]
  432ae4:	ldp	x21, x22, [sp, #32]
  432ae8:	ldp	x23, x24, [sp, #48]
  432aec:	ldp	x29, x30, [sp], #64
  432af0:	ret
  432af4:	sub	x2, x2, x1
  432af8:	add	x1, x19, x1
  432afc:	mov	x0, x21
  432b00:	bl	4328a0 <ferror@plt+0x2ffd0>
  432b04:	b	432ad4 <ferror@plt+0x30204>
  432b08:	mov	x19, #0x0                   	// #0
  432b0c:	cbz	x22, 432adc <ferror@plt+0x3020c>
  432b10:	bl	402810 <__errno_location@plt>
  432b14:	ldr	w2, [x0]
  432b18:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  432b1c:	add	x1, x1, #0xd48
  432b20:	mov	x0, x23
  432b24:	blr	x22
  432b28:	b	432adc <ferror@plt+0x3020c>
  432b2c:	add	x21, x21, #0x3c
  432b30:	stlr	wzr, [x21]
  432b34:	b	432adc <ferror@plt+0x3020c>
  432b38:	stp	x29, x30, [sp, #-96]!
  432b3c:	mov	x29, sp
  432b40:	stp	x19, x20, [sp, #16]
  432b44:	stp	x21, x22, [sp, #32]
  432b48:	stp	x23, x24, [sp, #48]
  432b4c:	mov	x23, x0
  432b50:	mov	x21, x1
  432b54:	mov	x19, x4
  432b58:	ldr	x0, [x4, #16]
  432b5c:	cmp	x0, x1
  432b60:	b.cs	432bec <ferror@plt+0x3031c>  // b.hs, b.nlast
  432b64:	stp	x25, x26, [sp, #64]
  432b68:	mov	x24, x2
  432b6c:	mov	x25, x3
  432b70:	ldr	x0, [x4, #8]
  432b74:	add	x22, x0, x1
  432b78:	cbnz	x0, 432c24 <ferror@plt+0x30354>
  432b7c:	lsl	x22, x22, #4
  432b80:	mov	x3, x25
  432b84:	mov	x2, x24
  432b88:	mov	x1, x22
  432b8c:	mov	x0, x23
  432b90:	bl	4329cc <ferror@plt+0x300fc>
  432b94:	mov	x20, x0
  432b98:	cbz	x0, 432c58 <ferror@plt+0x30388>
  432b9c:	ldr	x26, [x19]
  432ba0:	cbz	x26, 432bd8 <ferror@plt+0x30308>
  432ba4:	str	x27, [sp, #80]
  432ba8:	ldr	x27, [x19, #8]
  432bac:	mov	x2, x27
  432bb0:	mov	x1, x26
  432bb4:	bl	402260 <memcpy@plt>
  432bb8:	ldr	x2, [x19, #16]
  432bbc:	mov	x4, x25
  432bc0:	mov	x3, x24
  432bc4:	add	x2, x27, x2
  432bc8:	mov	x1, x26
  432bcc:	mov	x0, x23
  432bd0:	bl	432920 <ferror@plt+0x30050>
  432bd4:	ldr	x27, [sp, #80]
  432bd8:	str	x20, [x19]
  432bdc:	ldr	x0, [x19, #8]
  432be0:	sub	x22, x22, x0
  432be4:	str	x22, [x19, #16]
  432be8:	ldp	x25, x26, [sp, #64]
  432bec:	ldr	x1, [x19, #8]
  432bf0:	ldr	x20, [x19]
  432bf4:	add	x20, x20, x1
  432bf8:	add	x1, x1, x21
  432bfc:	str	x1, [x19, #8]
  432c00:	ldr	x1, [x19, #16]
  432c04:	sub	x21, x1, x21
  432c08:	str	x21, [x19, #16]
  432c0c:	mov	x0, x20
  432c10:	ldp	x19, x20, [sp, #16]
  432c14:	ldp	x21, x22, [sp, #32]
  432c18:	ldp	x23, x24, [sp, #48]
  432c1c:	ldp	x29, x30, [sp], #96
  432c20:	ret
  432c24:	bl	402500 <getpagesize@plt>
  432c28:	sxtw	x1, w0
  432c2c:	cmp	x22, w0, sxtw
  432c30:	b.cs	432c44 <ferror@plt+0x30374>  // b.hs, b.nlast
  432c34:	lsl	x22, x22, #1
  432c38:	cmp	x22, x1
  432c3c:	csel	x22, x22, x1, ls  // ls = plast
  432c40:	b	432b80 <ferror@plt+0x302b0>
  432c44:	add	x22, x1, x22, lsl #1
  432c48:	sub	x22, x22, #0x1
  432c4c:	neg	x1, x1
  432c50:	and	x22, x1, x22
  432c54:	b	432b80 <ferror@plt+0x302b0>
  432c58:	ldp	x25, x26, [sp, #64]
  432c5c:	b	432c0c <ferror@plt+0x3033c>
  432c60:	ldr	x0, [x1]
  432c64:	ldr	x2, [x1, #8]
  432c68:	add	x2, x0, x2
  432c6c:	str	x2, [x1]
  432c70:	str	xzr, [x1, #8]
  432c74:	ret
  432c78:	stp	x29, x30, [sp, #-32]!
  432c7c:	mov	x29, sp
  432c80:	str	x19, [sp, #16]
  432c84:	mov	x19, x1
  432c88:	ldr	x5, [x1, #8]
  432c8c:	add	x1, x5, #0x7
  432c90:	and	x1, x1, #0xfffffffffffffff8
  432c94:	ldr	x4, [x19, #16]
  432c98:	add	x5, x5, x4
  432c9c:	ldr	x6, [x19]
  432ca0:	mov	x4, x3
  432ca4:	mov	x3, x2
  432ca8:	sub	x2, x5, x1
  432cac:	add	x1, x6, x1
  432cb0:	bl	432920 <ferror@plt+0x30050>
  432cb4:	str	xzr, [x19, #16]
  432cb8:	ldr	x0, [x19, #8]
  432cbc:	cbnz	x0, 432cc4 <ferror@plt+0x303f4>
  432cc0:	str	xzr, [x19]
  432cc4:	mov	w0, #0x1                   	// #1
  432cc8:	ldr	x19, [sp, #16]
  432ccc:	ldp	x29, x30, [sp], #32
  432cd0:	ret
  432cd4:	stp	x29, x30, [sp, #-160]!
  432cd8:	mov	x29, sp
  432cdc:	stp	x19, x20, [sp, #16]
  432ce0:	stp	x21, x22, [sp, #32]
  432ce4:	stp	x23, x24, [sp, #48]
  432ce8:	mov	x20, x0
  432cec:	mov	x22, x1
  432cf0:	mov	x23, x2
  432cf4:	ldr	w0, [x0, #8]
  432cf8:	cbnz	w0, 432d2c <ferror@plt+0x3045c>
  432cfc:	ldr	w0, [x20, #56]
  432d00:	cbnz	w0, 432d50 <ferror@plt+0x30480>
  432d04:	ldr	x0, [x20, #24]
  432d08:	str	x0, [sp, #152]
  432d0c:	ldr	x1, [sp, #152]
  432d10:	mov	w0, #0x1                   	// #1
  432d14:	cbz	x1, 432d6c <ferror@plt+0x3049c>
  432d18:	ldp	x19, x20, [sp, #16]
  432d1c:	ldp	x21, x22, [sp, #32]
  432d20:	ldp	x23, x24, [sp, #48]
  432d24:	ldp	x29, x30, [sp], #160
  432d28:	ret
  432d2c:	add	x0, x20, #0x38
  432d30:	ldar	w0, [x0]
  432d34:	cbnz	w0, 432d50 <ferror@plt+0x30480>
  432d38:	ldr	w0, [x20, #8]
  432d3c:	cbz	w0, 432d04 <ferror@plt+0x30434>
  432d40:	add	x0, x20, #0x18
  432d44:	ldar	x0, [x0]
  432d48:	str	x0, [sp, #152]
  432d4c:	b	432d0c <ferror@plt+0x3043c>
  432d50:	mov	w2, #0xffffffff            	// #-1
  432d54:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  432d58:	add	x1, x1, #0xd78
  432d5c:	mov	x0, x23
  432d60:	blr	x22
  432d64:	mov	w0, #0x0                   	// #0
  432d68:	b	432d18 <ferror@plt+0x30448>
  432d6c:	stp	x25, x26, [sp, #64]
  432d70:	mov	w0, #0xffffffff            	// #-1
  432d74:	mov	w19, #0x0                   	// #0
  432d78:	add	x26, sp, #0x54
  432d7c:	adrp	x25, 463000 <_obstack_memory_used@@Base+0x1c094>
  432d80:	add	x25, x25, #0xd50
  432d84:	adrp	x24, 463000 <_obstack_memory_used@@Base+0x1c094>
  432d88:	add	x24, x24, #0xd60
  432d8c:	b	432dac <ferror@plt+0x304dc>
  432d90:	cbz	w19, 432dec <ferror@plt+0x3051c>
  432d94:	cmp	w19, #0x1
  432d98:	b.ne	432df8 <ferror@plt+0x30528>  // b.any
  432d9c:	mov	x21, #0x0                   	// #0
  432da0:	add	w19, w19, #0x1
  432da4:	cmp	w19, #0x5
  432da8:	b.eq	432e58 <ferror@plt+0x30588>  // b.none
  432dac:	cmp	w19, #0x2
  432db0:	b.eq	432dfc <ferror@plt+0x3052c>  // b.none
  432db4:	b.le	432d90 <ferror@plt+0x304c0>
  432db8:	cmp	w19, #0x3
  432dbc:	b.eq	432e88 <ferror@plt+0x305b8>  // b.none
  432dc0:	cmp	w19, #0x4
  432dc4:	b.ne	432df8 <ferror@plt+0x30528>  // b.any
  432dc8:	bl	4023d0 <getpid@plt>
  432dcc:	add	x21, sp, #0x58
  432dd0:	sxtw	x3, w0
  432dd4:	adrp	x2, 463000 <_obstack_memory_used@@Base+0x1c094>
  432dd8:	add	x2, x2, #0xda0
  432ddc:	mov	x1, #0x40                  	// #64
  432de0:	mov	x0, x21
  432de4:	bl	4023a0 <snprintf@plt>
  432de8:	b	432e8c <ferror@plt+0x305bc>
  432dec:	ldr	x21, [x20]
  432df0:	cbz	x21, 432d9c <ferror@plt+0x304cc>
  432df4:	b	432e8c <ferror@plt+0x305bc>
  432df8:	bl	402590 <abort@plt>
  432dfc:	mov	x21, x25
  432e00:	b	432e8c <ferror@plt+0x305bc>
  432e04:	ldr	w1, [sp, #84]
  432e08:	cbnz	w1, 432da0 <ferror@plt+0x304d0>
  432e0c:	b	432e70 <ferror@plt+0x305a0>
  432e10:	mov	w2, #0x0                   	// #0
  432e14:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  432e18:	add	x1, x1, #0xdb8
  432e1c:	mov	x0, x23
  432e20:	blr	x22
  432e24:	b	432e70 <ferror@plt+0x305a0>
  432e28:	add	x20, x20, #0x38
  432e2c:	mov	w0, #0x1                   	// #1
  432e30:	stlr	w0, [x20]
  432e34:	mov	w0, #0x0                   	// #0
  432e38:	ldp	x25, x26, [sp, #64]
  432e3c:	b	432d18 <ferror@plt+0x30448>
  432e40:	add	x20, x20, #0x18
  432e44:	ldr	x0, [sp, #152]
  432e48:	stlr	x0, [x20]
  432e4c:	mov	w0, #0x1                   	// #1
  432e50:	ldp	x25, x26, [sp, #64]
  432e54:	b	432d18 <ferror@plt+0x30448>
  432e58:	tbz	w0, #31, 432ea4 <ferror@plt+0x305d4>
  432e5c:	ldr	x1, [x20]
  432e60:	cbz	x1, 432e10 <ferror@plt+0x30540>
  432e64:	mov	w2, #0x2                   	// #2
  432e68:	mov	x0, x23
  432e6c:	blr	x22
  432e70:	ldr	w0, [x20, #8]
  432e74:	cbnz	w0, 432e28 <ferror@plt+0x30558>
  432e78:	mov	w1, #0x1                   	// #1
  432e7c:	str	w1, [x20, #56]
  432e80:	ldp	x25, x26, [sp, #64]
  432e84:	b	432d18 <ferror@plt+0x30448>
  432e88:	mov	x21, x24
  432e8c:	mov	x3, x26
  432e90:	mov	x2, x23
  432e94:	mov	x1, x22
  432e98:	mov	x0, x21
  432e9c:	bl	432fcc <ferror@plt+0x306fc>
  432ea0:	tbnz	w0, #31, 432e04 <ferror@plt+0x30534>
  432ea4:	add	x5, sp, #0x98
  432ea8:	mov	x4, x23
  432eac:	mov	x3, x22
  432eb0:	mov	w2, w0
  432eb4:	mov	x1, x21
  432eb8:	mov	x0, x20
  432ebc:	bl	4361f4 <ferror@plt+0x33924>
  432ec0:	cbz	w0, 432e70 <ferror@plt+0x305a0>
  432ec4:	ldr	w0, [x20, #8]
  432ec8:	cbnz	w0, 432e40 <ferror@plt+0x30570>
  432ecc:	ldr	x0, [sp, #152]
  432ed0:	str	x0, [x20, #24]
  432ed4:	mov	w0, #0x1                   	// #1
  432ed8:	ldp	x25, x26, [sp, #64]
  432edc:	b	432d18 <ferror@plt+0x30448>
  432ee0:	stp	x29, x30, [sp, #-64]!
  432ee4:	mov	x29, sp
  432ee8:	stp	x19, x20, [sp, #16]
  432eec:	stp	x21, x22, [sp, #32]
  432ef0:	str	x23, [sp, #48]
  432ef4:	mov	x19, x0
  432ef8:	mov	x23, x1
  432efc:	mov	x22, x2
  432f00:	mov	x20, x3
  432f04:	mov	x21, x4
  432f08:	mov	x2, x4
  432f0c:	mov	x1, x3
  432f10:	bl	432cd4 <ferror@plt+0x30404>
  432f14:	cbz	w0, 432f40 <ferror@plt+0x30670>
  432f18:	ldr	w1, [x19, #56]
  432f1c:	mov	w0, #0x0                   	// #0
  432f20:	cbnz	w1, 432f40 <ferror@plt+0x30670>
  432f24:	ldr	x5, [x19, #24]
  432f28:	mov	x4, x21
  432f2c:	mov	x3, x20
  432f30:	mov	x2, x22
  432f34:	mov	x1, x23
  432f38:	mov	x0, x19
  432f3c:	blr	x5
  432f40:	ldp	x19, x20, [sp, #16]
  432f44:	ldp	x21, x22, [sp, #32]
  432f48:	ldr	x23, [sp, #48]
  432f4c:	ldp	x29, x30, [sp], #64
  432f50:	ret
  432f54:	stp	x29, x30, [sp, #-64]!
  432f58:	mov	x29, sp
  432f5c:	stp	x19, x20, [sp, #16]
  432f60:	stp	x21, x22, [sp, #32]
  432f64:	str	x23, [sp, #48]
  432f68:	mov	x19, x0
  432f6c:	mov	x23, x1
  432f70:	mov	x22, x2
  432f74:	mov	x20, x3
  432f78:	mov	x21, x4
  432f7c:	mov	x2, x4
  432f80:	mov	x1, x3
  432f84:	bl	432cd4 <ferror@plt+0x30404>
  432f88:	cbz	w0, 432fb8 <ferror@plt+0x306e8>
  432f8c:	ldr	w1, [x19, #56]
  432f90:	mov	w0, #0x0                   	// #0
  432f94:	cbnz	w1, 432fb8 <ferror@plt+0x306e8>
  432f98:	ldr	x5, [x19, #40]
  432f9c:	mov	x4, x21
  432fa0:	mov	x3, x20
  432fa4:	mov	x2, x22
  432fa8:	mov	x1, x23
  432fac:	mov	x0, x19
  432fb0:	blr	x5
  432fb4:	mov	w0, #0x1                   	// #1
  432fb8:	ldp	x19, x20, [sp, #16]
  432fbc:	ldp	x21, x22, [sp, #32]
  432fc0:	ldr	x23, [sp, #48]
  432fc4:	ldp	x29, x30, [sp], #64
  432fc8:	ret
  432fcc:	stp	x29, x30, [sp, #-64]!
  432fd0:	mov	x29, sp
  432fd4:	stp	x19, x20, [sp, #16]
  432fd8:	stp	x21, x22, [sp, #32]
  432fdc:	str	x23, [sp, #48]
  432fe0:	mov	x21, x0
  432fe4:	mov	x23, x1
  432fe8:	mov	x22, x2
  432fec:	cbz	x3, 43306c <ferror@plt+0x3079c>
  432ff0:	mov	x20, x3
  432ff4:	str	wzr, [x3]
  432ff8:	mov	w1, #0x80000               	// #524288
  432ffc:	bl	402420 <open@plt>
  433000:	mov	w19, w0
  433004:	tbnz	w0, #31, 433030 <ferror@plt+0x30760>
  433008:	mov	w2, #0x1                   	// #1
  43300c:	mov	w1, #0x2                   	// #2
  433010:	mov	w0, w19
  433014:	bl	4026e0 <fcntl@plt>
  433018:	mov	w0, w19
  43301c:	ldp	x19, x20, [sp, #16]
  433020:	ldp	x21, x22, [sp, #32]
  433024:	ldr	x23, [sp, #48]
  433028:	ldp	x29, x30, [sp], #64
  43302c:	ret
  433030:	bl	402810 <__errno_location@plt>
  433034:	ldr	w0, [x0]
  433038:	cmp	w0, #0x2
  43303c:	b.eq	43305c <ferror@plt+0x3078c>  // b.none
  433040:	bl	402810 <__errno_location@plt>
  433044:	ldr	w2, [x0]
  433048:	mov	x1, x21
  43304c:	mov	x0, x22
  433050:	blr	x23
  433054:	mov	w19, #0xffffffff            	// #-1
  433058:	b	433018 <ferror@plt+0x30748>
  43305c:	mov	w0, #0x1                   	// #1
  433060:	str	w0, [x20]
  433064:	mov	w19, #0xffffffff            	// #-1
  433068:	b	433018 <ferror@plt+0x30748>
  43306c:	mov	w1, #0x80000               	// #524288
  433070:	bl	402420 <open@plt>
  433074:	mov	w19, w0
  433078:	tbz	w0, #31, 433008 <ferror@plt+0x30738>
  43307c:	b	433040 <ferror@plt+0x30770>
  433080:	stp	x29, x30, [sp, #-32]!
  433084:	mov	x29, sp
  433088:	stp	x19, x20, [sp, #16]
  43308c:	mov	x19, x1
  433090:	mov	x20, x2
  433094:	bl	402540 <close@plt>
  433098:	tbnz	w0, #31, 4330ac <ferror@plt+0x307dc>
  43309c:	mov	w0, #0x1                   	// #1
  4330a0:	ldp	x19, x20, [sp, #16]
  4330a4:	ldp	x29, x30, [sp], #32
  4330a8:	ret
  4330ac:	bl	402810 <__errno_location@plt>
  4330b0:	ldr	w2, [x0]
  4330b4:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  4330b8:	add	x1, x1, #0xde8
  4330bc:	mov	x0, x20
  4330c0:	blr	x19
  4330c4:	mov	w0, #0x0                   	// #0
  4330c8:	b	4330a0 <ferror@plt+0x307d0>
  4330cc:	stp	x29, x30, [sp, #-16]!
  4330d0:	mov	x29, sp
  4330d4:	mov	x0, x4
  4330d8:	mov	w2, #0xffffffff            	// #-1
  4330dc:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  4330e0:	add	x1, x1, #0xdf0
  4330e4:	blr	x3
  4330e8:	mov	w0, #0x0                   	// #0
  4330ec:	ldp	x29, x30, [sp], #16
  4330f0:	ret
  4330f4:	stp	x29, x30, [sp, #-16]!
  4330f8:	mov	x29, sp
  4330fc:	mov	x0, x4
  433100:	mov	w2, #0xffffffff            	// #-1
  433104:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  433108:	add	x1, x1, #0xe10
  43310c:	blr	x3
  433110:	ldp	x29, x30, [sp], #16
  433114:	ret
  433118:	ldr	x2, [x0, #8]
  43311c:	ldr	x0, [x1, #8]
  433120:	cmp	x2, x0
  433124:	b.cc	433130 <ferror@plt+0x30860>  // b.lo, b.ul, b.last
  433128:	cset	w0, hi  // hi = pmore
  43312c:	ret
  433130:	mov	w0, #0xffffffff            	// #-1
  433134:	b	43312c <ferror@plt+0x3085c>
  433138:	stp	x29, x30, [sp, #-192]!
  43313c:	mov	x29, sp
  433140:	stp	x19, x20, [sp, #16]
  433144:	mov	x19, x3
  433148:	add	x20, x2, #0x1, lsl #12
  43314c:	stp	xzr, xzr, [sp, #160]
  433150:	stp	xzr, xzr, [sp, #176]
  433154:	cbz	x1, 4331c8 <ferror@plt+0x308f8>
  433158:	mov	x4, #0x0                   	// #0
  43315c:	add	x7, sp, #0xa0
  433160:	add	x3, sp, #0x60
  433164:	add	x8, sp, #0x80
  433168:	b	4331a0 <ferror@plt+0x308d0>
  43316c:	and	w2, w4, #0xffff
  433170:	ldrh	w5, [x3, w5, sxtw #1]
  433174:	strh	w2, [x20, x5, lsl #1]
  433178:	ldrb	w5, [x0, x4]
  43317c:	strh	w2, [x3, x5, lsl #1]
  433180:	ldrb	w5, [x0, x4]
  433184:	lsl	x5, x5, #1
  433188:	ldrh	w6, [x7, x5]
  43318c:	add	w6, w6, #0x1
  433190:	strh	w6, [x7, x5]
  433194:	add	x4, x4, #0x1
  433198:	cmp	x1, x4
  43319c:	b.eq	4331c8 <ferror@plt+0x308f8>  // b.none
  4331a0:	ldrb	w5, [x0, x4]
  4331a4:	cmp	w5, #0xf
  4331a8:	b.hi	4334dc <ferror@plt+0x30c0c>  // b.pmore
  4331ac:	ldrh	w2, [x7, w5, sxtw #1]
  4331b0:	cbnz	w2, 43316c <ferror@plt+0x3089c>
  4331b4:	and	w2, w4, #0xffff
  4331b8:	sbfiz	x5, x5, #1, #32
  4331bc:	strh	w2, [x8, x5]
  4331c0:	strh	w2, [x3, x5]
  4331c4:	b	433180 <ferror@plt+0x308b0>
  4331c8:	mov	x2, #0x800                 	// #2048
  4331cc:	mov	w1, #0x0                   	// #0
  4331d0:	mov	x0, x19
  4331d4:	bl	402490 <memset@plt>
  4331d8:	mov	x4, #0x0                   	// #0
  4331dc:	mov	w1, #0x0                   	// #0
  4331e0:	add	x9, sp, #0xa0
  4331e4:	mov	w8, #0x1                   	// #1
  4331e8:	add	x12, sp, #0x80
  4331ec:	add	x0, x9, x4, lsl #1
  4331f0:	ldrh	w0, [x0, #2]
  4331f4:	cbnz	w0, 433224 <ferror@plt+0x30954>
  4331f8:	add	x4, x4, #0x1
  4331fc:	cmp	x4, #0x8
  433200:	b.ne	4331ec <ferror@plt+0x3091c>  // b.any
  433204:	stp	x21, x22, [sp, #32]
  433208:	stp	x23, x24, [sp, #48]
  43320c:	stp	x25, x26, [sp, #64]
  433210:	add	x7, sp, #0xa0
  433214:	mov	x6, #0x9                   	// #9
  433218:	add	x9, sp, #0x50
  43321c:	mov	w8, #0x1                   	// #1
  433220:	b	433350 <ferror@plt+0x30a80>
  433224:	add	w3, w4, #0x1
  433228:	lsl	w5, w8, w3
  43322c:	cmp	w5, w0
  433230:	b.cc	4334ec <ferror@plt+0x30c1c>  // b.lo, b.ul, b.last
  433234:	add	x5, x12, x4, lsl #1
  433238:	ldrh	w7, [x5, #2]
  43323c:	and	x5, x0, #0xffff
  433240:	tst	w7, #0xfffffe00
  433244:	b.ne	4334f4 <ferror@plt+0x30c24>  // b.any
  433248:	ubfiz	w13, w4, #9, #7
  43324c:	lsl	w3, w8, w3
  433250:	sxtw	x3, w3
  433254:	lsl	w10, w8, w4
  433258:	mov	x11, #0x0                   	// #0
  43325c:	orr	w6, w13, w7
  433260:	mov	w0, w1
  433264:	cmp	w1, #0xff
  433268:	b.hi	433284 <ferror@plt+0x309b4>  // b.pmore
  43326c:	ldrh	w2, [x19, x0, lsl #1]
  433270:	cbnz	w2, 4334fc <ferror@plt+0x30c2c>
  433274:	strh	w6, [x19, x0, lsl #1]
  433278:	add	x0, x0, x3
  43327c:	cmp	x0, #0xff
  433280:	b.ls	43326c <ferror@plt+0x3099c>  // b.plast
  433284:	add	x11, x11, #0x1
  433288:	cmp	x11, x5
  43328c:	b.cs	433298 <ferror@plt+0x309c8>  // b.hs, b.nlast
  433290:	mov	w7, w7
  433294:	ldrh	w7, [x20, x7, lsl #1]
  433298:	tst	w10, w1
  43329c:	b.eq	4332dc <ferror@plt+0x30a0c>  // b.none
  4332a0:	mov	w0, w10
  4332a4:	lsr	w0, w0, #1
  4332a8:	tst	w0, w1
  4332ac:	b.ne	4332a4 <ferror@plt+0x309d4>  // b.any
  4332b0:	sub	w2, w0, #0x1
  4332b4:	and	w1, w2, w1
  4332b8:	add	w1, w1, w0
  4332bc:	cmp	w0, #0x0
  4332c0:	csel	w1, w1, w0, ne  // ne = any
  4332c4:	cmp	x11, x5
  4332c8:	b.eq	4331f8 <ferror@plt+0x30928>  // b.none
  4332cc:	tst	w7, #0xfffffe00
  4332d0:	b.eq	43325c <ferror@plt+0x3098c>  // b.none
  4332d4:	mov	w0, #0x0                   	// #0
  4332d8:	b	4334e0 <ferror@plt+0x30c10>
  4332dc:	mov	w0, w10
  4332e0:	b	4332b0 <ferror@plt+0x309e0>
  4332e4:	add	w1, w1, w0
  4332e8:	lsl	w4, w8, w4
  4332ec:	bic	w5, w5, w4
  4332f0:	subs	x3, x3, #0x1
  4332f4:	b.eq	43333c <ferror@plt+0x30a6c>  // b.none
  4332f8:	sub	w4, w6, w3
  4332fc:	lsr	w0, w5, w4
  433300:	tbz	w0, #0, 4332f0 <ferror@plt+0x30a20>
  433304:	sub	w0, w3, #0x1
  433308:	lsl	w0, w8, w0
  43330c:	cbz	x3, 4332e8 <ferror@plt+0x30a18>
  433310:	tst	w0, w1
  433314:	b.eq	4332e4 <ferror@plt+0x30a14>  // b.none
  433318:	mov	w2, #0x0                   	// #0
  43331c:	bic	w1, w1, w0
  433320:	add	w2, w2, #0x1
  433324:	lsr	w0, w0, #1
  433328:	cmp	x3, w2, uxtw
  43332c:	b.ls	4332e8 <ferror@plt+0x30a18>  // b.plast
  433330:	tst	w1, w0
  433334:	b.ne	43331c <ferror@plt+0x30a4c>  // b.any
  433338:	b	4332e4 <ferror@plt+0x30a14>
  43333c:	cbnz	w5, 433518 <ferror@plt+0x30c48>
  433340:	add	x6, x6, #0x1
  433344:	add	x7, x7, #0x2
  433348:	cmp	x6, #0x10
  43334c:	b.eq	43336c <ferror@plt+0x30a9c>  // b.none
  433350:	ldrh	w5, [x7, #18]
  433354:	cbz	w5, 433340 <ferror@plt+0x30a70>
  433358:	add	x0, x9, x6, lsl #1
  43335c:	sturh	w1, [x0, #-18]
  433360:	cbz	x6, 433504 <ferror@plt+0x30c34>
  433364:	mov	x3, x6
  433368:	b	4332f8 <ferror@plt+0x30a28>
  43336c:	mov	x3, #0x7                   	// #7
  433370:	mov	x16, #0x0                   	// #0
  433374:	add	x12, sp, #0xa0
  433378:	add	x22, sp, #0x80
  43337c:	add	x21, sp, #0x50
  433380:	mov	w10, #0x1                   	// #1
  433384:	mov	x17, #0x0                   	// #0
  433388:	mov	x30, #0x100                 	// #256
  43338c:	add	x0, x12, x3, lsl #1
  433390:	ldrh	w0, [x0, #16]
  433394:	cbnz	w0, 4333b4 <ferror@plt+0x30ae4>
  433398:	subs	x3, x3, #0x1
  43339c:	b.ne	43338c <ferror@plt+0x30abc>  // b.any
  4333a0:	mov	w0, #0x1                   	// #1
  4333a4:	ldp	x21, x22, [sp, #32]
  4333a8:	ldp	x23, x24, [sp, #48]
  4333ac:	ldp	x25, x26, [sp, #64]
  4333b0:	b	4334e0 <ferror@plt+0x30c10>
  4333b4:	lsl	x1, x3, #1
  4333b8:	add	x2, x1, x22
  4333bc:	ldrh	w23, [x2, #16]
  4333c0:	add	x1, x1, x21
  4333c4:	ldurh	w5, [x1, #-2]
  4333c8:	and	x9, x0, #0xffff
  4333cc:	lsl	w4, w10, w3
  4333d0:	sxtw	x26, w4
  4333d4:	ubfiz	w15, w3, #9, #7
  4333d8:	add	w14, w15, #0x1, lsl #12
  4333dc:	and	w14, w14, #0xffff
  4333e0:	mov	w4, w4
  4333e4:	add	w11, w3, #0x7
  4333e8:	lsl	w11, w10, w11
  4333ec:	mov	x8, x17
  4333f0:	mov	x18, x17
  4333f4:	mov	x13, x30
  4333f8:	mov	x24, #0x0                   	// #0
  4333fc:	mov	x25, x3
  433400:	and	x0, x5, #0xff
  433404:	cmp	x13, w5, uxtb
  433408:	b.eq	433438 <ferror@plt+0x30b68>  // b.none
  43340c:	lsl	x1, x0, #1
  433410:	ldrh	w8, [x19, x1]
  433414:	cbnz	w8, 4334b8 <ferror@plt+0x30be8>
  433418:	tst	x16, #0xfffffffffffffe00
  43341c:	b.ne	43352c <ferror@plt+0x30c5c>  // b.any
  433420:	add	w2, w14, w16
  433424:	strh	w2, [x19, x1]
  433428:	mov	x8, x25
  43342c:	mov	x18, x16
  433430:	mov	x13, x0
  433434:	add	x16, x26, x16
  433438:	orr	w7, w15, w23
  43343c:	lsr	w0, w5, #8
  433440:	lsl	w6, w10, w8
  433444:	cmp	x6, x0
  433448:	b.ls	43346c <ferror@plt+0x30b9c>  // b.plast
  43344c:	add	x1, x19, x18, lsl #1
  433450:	add	x1, x1, #0x200
  433454:	ldrh	w2, [x1, x0, lsl #1]
  433458:	cbnz	w2, 433568 <ferror@plt+0x30c98>
  43345c:	strh	w7, [x1, x0, lsl #1]
  433460:	add	x0, x0, x4
  433464:	cmp	x6, x0
  433468:	b.hi	433454 <ferror@plt+0x30b84>  // b.pmore
  43346c:	add	x24, x24, #0x1
  433470:	cmp	x9, x24
  433474:	b.ls	433480 <ferror@plt+0x30bb0>  // b.plast
  433478:	mov	w23, w23
  43347c:	ldrh	w23, [x20, x23, lsl #1]
  433480:	tst	w11, w5
  433484:	b.eq	4334d4 <ferror@plt+0x30c04>  // b.none
  433488:	mov	w0, w11
  43348c:	lsr	w0, w0, #1
  433490:	tst	w0, w5
  433494:	b.ne	43348c <ferror@plt+0x30bbc>  // b.any
  433498:	sub	w1, w0, #0x1
  43349c:	and	w5, w1, w5
  4334a0:	add	w5, w5, w0
  4334a4:	cmp	w0, #0x0
  4334a8:	csel	w5, w5, w0, ne  // ne = any
  4334ac:	cmp	x9, x24
  4334b0:	b.ne	433400 <ferror@plt+0x30b30>  // b.any
  4334b4:	b	433398 <ferror@plt+0x30ac8>
  4334b8:	tbz	w8, #12, 433540 <ferror@plt+0x30c70>
  4334bc:	and	x18, x8, #0x1ff
  4334c0:	ubfx	x8, x8, #9, #3
  4334c4:	cmp	x8, x3
  4334c8:	b.cc	433554 <ferror@plt+0x30c84>  // b.lo, b.ul, b.last
  4334cc:	mov	x13, x0
  4334d0:	b	433438 <ferror@plt+0x30b68>
  4334d4:	mov	w0, w11
  4334d8:	b	433498 <ferror@plt+0x30bc8>
  4334dc:	mov	w0, #0x0                   	// #0
  4334e0:	ldp	x19, x20, [sp, #16]
  4334e4:	ldp	x29, x30, [sp], #192
  4334e8:	ret
  4334ec:	mov	w0, #0x0                   	// #0
  4334f0:	b	4334e0 <ferror@plt+0x30c10>
  4334f4:	mov	w0, #0x0                   	// #0
  4334f8:	b	4334e0 <ferror@plt+0x30c10>
  4334fc:	mov	w0, #0x0                   	// #0
  433500:	b	4334e0 <ferror@plt+0x30c10>
  433504:	mov	w0, #0x0                   	// #0
  433508:	ldp	x21, x22, [sp, #32]
  43350c:	ldp	x23, x24, [sp, #48]
  433510:	ldp	x25, x26, [sp, #64]
  433514:	b	4334e0 <ferror@plt+0x30c10>
  433518:	mov	w0, #0x0                   	// #0
  43351c:	ldp	x21, x22, [sp, #32]
  433520:	ldp	x23, x24, [sp, #48]
  433524:	ldp	x25, x26, [sp, #64]
  433528:	b	4334e0 <ferror@plt+0x30c10>
  43352c:	mov	w0, #0x0                   	// #0
  433530:	ldp	x21, x22, [sp, #32]
  433534:	ldp	x23, x24, [sp, #48]
  433538:	ldp	x25, x26, [sp, #64]
  43353c:	b	4334e0 <ferror@plt+0x30c10>
  433540:	mov	w0, #0x0                   	// #0
  433544:	ldp	x21, x22, [sp, #32]
  433548:	ldp	x23, x24, [sp, #48]
  43354c:	ldp	x25, x26, [sp, #64]
  433550:	b	4334e0 <ferror@plt+0x30c10>
  433554:	mov	w0, #0x0                   	// #0
  433558:	ldp	x21, x22, [sp, #32]
  43355c:	ldp	x23, x24, [sp, #48]
  433560:	ldp	x25, x26, [sp, #64]
  433564:	b	4334e0 <ferror@plt+0x30c10>
  433568:	mov	w0, #0x0                   	// #0
  43356c:	ldp	x21, x22, [sp, #32]
  433570:	ldp	x23, x24, [sp, #48]
  433574:	ldp	x25, x26, [sp, #64]
  433578:	b	4334e0 <ferror@plt+0x30c10>
  43357c:	ldr	w5, [x3]
  433580:	cmp	w5, #0xe
  433584:	b.hi	4335c8 <ferror@plt+0x30cf8>  // b.pmore
  433588:	ldr	x4, [x0]
  43358c:	ldr	x6, [x2]
  433590:	sub	x1, x1, x4
  433594:	cmp	x1, #0x3
  433598:	b.le	4335d0 <ferror@plt+0x30d00>
  43359c:	mov	x1, x4
  4335a0:	ldr	w4, [x1], #4
  4335a4:	lsl	x4, x4, x5
  4335a8:	orr	x4, x4, x6
  4335ac:	prfm	pldl1strm, [x1]
  4335b0:	str	x1, [x0]
  4335b4:	str	x4, [x2]
  4335b8:	add	w5, w5, #0x20
  4335bc:	str	w5, [x3]
  4335c0:	mov	w0, #0x1                   	// #1
  4335c4:	ret
  4335c8:	mov	w0, #0x1                   	// #1
  4335cc:	b	4335c4 <ferror@plt+0x30cf4>
  4335d0:	mov	w0, #0x0                   	// #0
  4335d4:	b	4335c4 <ferror@plt+0x30cf4>
  4335d8:	stp	x29, x30, [sp, #-240]!
  4335dc:	mov	x29, sp
  4335e0:	stp	x19, x20, [sp, #16]
  4335e4:	stp	x21, x22, [sp, #32]
  4335e8:	stp	x23, x24, [sp, #48]
  4335ec:	stp	x25, x26, [sp, #64]
  4335f0:	mov	x21, x0
  4335f4:	str	x1, [sp, #120]
  4335f8:	str	x2, [sp, #112]
  4335fc:	mov	x19, x3
  433600:	mov	x20, x4
  433604:	str	x0, [sp, #200]
  433608:	add	x23, x0, x1
  43360c:	add	x0, x3, x4
  433610:	str	x0, [sp, #104]
  433614:	cmp	x1, #0x4
  433618:	b.le	434204 <ferror@plt+0x31934>
  43361c:	mov	x22, x3
  433620:	mov	x0, x21
  433624:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d094>
  433628:	add	x1, x1, #0x90
  43362c:	str	x1, [sp, #144]
  433630:	add	x1, x1, #0x200
  433634:	str	x1, [sp, #152]
  433638:	ldrb	w1, [x0]
  43363c:	and	w2, w1, #0xf
  433640:	cmp	w2, #0x8
  433644:	b.ne	434158 <ferror@plt+0x31888>  // b.any
  433648:	cmp	w1, #0x7f
  43364c:	b.hi	434158 <ferror@plt+0x31888>  // b.pmore
  433650:	ldrb	w2, [x0, #1]
  433654:	tbnz	w2, #5, 434158 <ferror@plt+0x31888>
  433658:	orr	w1, w2, w1, lsl #8
  43365c:	sxtw	x1, w1
  433660:	mov	x2, #0x4211                	// #16913
  433664:	movk	x2, #0x2108, lsl #16
  433668:	movk	x2, #0x1084, lsl #32
  43366c:	movk	x2, #0x842, lsl #48
  433670:	umulh	x3, x1, x2
  433674:	sub	x2, x1, x3
  433678:	add	x2, x3, x2, lsr #1
  43367c:	lsr	x2, x2, #4
  433680:	lsl	x3, x2, #5
  433684:	sub	x2, x3, x2
  433688:	cmp	x1, x2
  43368c:	b.ne	434158 <ferror@plt+0x31888>  // b.any
  433690:	stp	x27, x28, [sp, #80]
  433694:	add	x0, x0, #0x2
  433698:	str	x0, [sp, #200]
  43369c:	str	xzr, [sp, #208]
  4336a0:	str	wzr, [sp, #196]
  4336a4:	tst	x0, #0x3
  4336a8:	b.eq	4336d8 <ferror@plt+0x30e08>  // b.none
  4336ac:	ldr	w1, [sp, #196]
  4336b0:	ldrb	w2, [x0], #1
  4336b4:	lsl	x3, x2, x1
  4336b8:	ldr	x2, [sp, #208]
  4336bc:	orr	x2, x2, x3
  4336c0:	str	x2, [sp, #208]
  4336c4:	add	w1, w1, #0x8
  4336c8:	str	w1, [sp, #196]
  4336cc:	str	x0, [sp, #200]
  4336d0:	tst	x0, #0x3
  4336d4:	b.ne	4336ac <ferror@plt+0x30ddc>  // b.any
  4336d8:	add	x25, sp, #0xc4
  4336dc:	add	x24, sp, #0xd0
  4336e0:	mov	x3, x25
  4336e4:	mov	x2, x24
  4336e8:	mov	x1, x23
  4336ec:	add	x0, sp, #0xc8
  4336f0:	bl	43357c <ferror@plt+0x30cac>
  4336f4:	cbz	w0, 4340e4 <ferror@plt+0x31814>
  4336f8:	ldr	x0, [sp, #208]
  4336fc:	str	x0, [sp, #160]
  433700:	ubfx	w1, w0, #1, #2
  433704:	lsr	x0, x0, #3
  433708:	str	x0, [sp, #208]
  43370c:	ldr	w2, [sp, #196]
  433710:	sub	w0, w2, #0x3
  433714:	str	w0, [sp, #196]
  433718:	cmp	w1, #0x3
  43371c:	b.eq	4340ec <ferror@plt+0x3181c>  // b.none
  433720:	cbz	w1, 433a74 <ferror@plt+0x311a4>
  433724:	cmp	w1, #0x1
  433728:	b.eq	433da0 <ferror@plt+0x314d0>  // b.none
  43372c:	mov	x3, x25
  433730:	mov	x2, x24
  433734:	mov	x1, x23
  433738:	add	x0, sp, #0xc8
  43373c:	bl	43357c <ferror@plt+0x30cac>
  433740:	cbz	w0, 434114 <ferror@plt+0x31844>
  433744:	ldr	x0, [sp, #208]
  433748:	and	w27, w0, #0x1f
  43374c:	add	w27, w27, #0x101
  433750:	ubfx	w28, w0, #5, #5
  433754:	add	w28, w28, #0x1
  433758:	ubfx	w26, w0, #10, #4
  43375c:	add	w26, w26, #0x4
  433760:	lsr	x0, x0, #14
  433764:	str	x0, [sp, #208]
  433768:	ldr	w0, [sp, #196]
  43376c:	sub	w0, w0, #0xe
  433770:	str	w0, [sp, #196]
  433774:	cmp	w27, #0x11e
  433778:	ccmp	w28, #0x1e, #0x2, ls  // ls = plast
  43377c:	b.hi	43411c <ferror@plt+0x3184c>  // b.pmore
  433780:	stp	xzr, xzr, [sp, #216]
  433784:	strh	wzr, [sp, #232]
  433788:	strb	wzr, [sp, #234]
  43378c:	mov	x3, x25
  433790:	mov	x2, x24
  433794:	mov	x1, x23
  433798:	add	x0, sp, #0xc8
  43379c:	bl	43357c <ferror@plt+0x30cac>
  4337a0:	cbz	w0, 434124 <ferror@plt+0x31854>
  4337a4:	ldr	x0, [sp, #208]
  4337a8:	and	w1, w0, #0x7
  4337ac:	strb	w1, [sp, #232]
  4337b0:	ubfx	w1, w0, #3, #3
  4337b4:	strb	w1, [sp, #233]
  4337b8:	ubfx	w1, w0, #6, #3
  4337bc:	strb	w1, [sp, #234]
  4337c0:	ubfx	w1, w0, #9, #3
  4337c4:	strb	w1, [sp, #216]
  4337c8:	lsr	x2, x0, #12
  4337cc:	str	x2, [sp, #208]
  4337d0:	ldr	w1, [sp, #196]
  4337d4:	sub	w3, w1, #0xc
  4337d8:	str	w3, [sp, #196]
  4337dc:	cmp	w26, #0x4
  4337e0:	b.eq	433a1c <ferror@plt+0x3114c>  // b.none
  4337e4:	and	w2, w2, #0x7
  4337e8:	strb	w2, [sp, #224]
  4337ec:	lsr	x0, x0, #15
  4337f0:	str	x0, [sp, #208]
  4337f4:	sub	w1, w1, #0xf
  4337f8:	str	w1, [sp, #196]
  4337fc:	cmp	w26, #0x5
  433800:	b.eq	433a1c <ferror@plt+0x3114c>  // b.none
  433804:	mov	x3, x25
  433808:	mov	x2, x24
  43380c:	mov	x1, x23
  433810:	add	x0, sp, #0xc8
  433814:	bl	43357c <ferror@plt+0x30cac>
  433818:	cbz	w0, 43412c <ferror@plt+0x3185c>
  43381c:	ldr	x0, [sp, #208]
  433820:	and	w1, w0, #0x7
  433824:	strb	w1, [sp, #223]
  433828:	lsr	x2, x0, #3
  43382c:	str	x2, [sp, #208]
  433830:	ldr	w1, [sp, #196]
  433834:	sub	w3, w1, #0x3
  433838:	str	w3, [sp, #196]
  43383c:	cmp	w26, #0x6
  433840:	b.eq	433a1c <ferror@plt+0x3114c>  // b.none
  433844:	and	w2, w2, #0x7
  433848:	strb	w2, [sp, #225]
  43384c:	lsr	x2, x0, #6
  433850:	str	x2, [sp, #208]
  433854:	sub	w3, w1, #0x6
  433858:	str	w3, [sp, #196]
  43385c:	cmp	w26, #0x7
  433860:	b.eq	433a1c <ferror@plt+0x3114c>  // b.none
  433864:	and	w2, w2, #0x7
  433868:	strb	w2, [sp, #222]
  43386c:	lsr	x2, x0, #9
  433870:	str	x2, [sp, #208]
  433874:	sub	w3, w1, #0x9
  433878:	str	w3, [sp, #196]
  43387c:	cmp	w26, #0x8
  433880:	b.eq	433a1c <ferror@plt+0x3114c>  // b.none
  433884:	and	w2, w2, #0x7
  433888:	strb	w2, [sp, #226]
  43388c:	lsr	x2, x0, #12
  433890:	str	x2, [sp, #208]
  433894:	sub	w3, w1, #0xc
  433898:	str	w3, [sp, #196]
  43389c:	cmp	w26, #0x9
  4338a0:	b.eq	433a1c <ferror@plt+0x3114c>  // b.none
  4338a4:	and	w2, w2, #0x7
  4338a8:	strb	w2, [sp, #221]
  4338ac:	lsr	x0, x0, #15
  4338b0:	str	x0, [sp, #208]
  4338b4:	sub	w1, w1, #0xf
  4338b8:	str	w1, [sp, #196]
  4338bc:	cmp	w26, #0xa
  4338c0:	b.eq	433a1c <ferror@plt+0x3114c>  // b.none
  4338c4:	mov	x3, x25
  4338c8:	mov	x2, x24
  4338cc:	mov	x1, x23
  4338d0:	add	x0, sp, #0xc8
  4338d4:	bl	43357c <ferror@plt+0x30cac>
  4338d8:	cbz	w0, 434134 <ferror@plt+0x31864>
  4338dc:	ldr	x0, [sp, #208]
  4338e0:	and	w1, w0, #0x7
  4338e4:	strb	w1, [sp, #227]
  4338e8:	lsr	x2, x0, #3
  4338ec:	str	x2, [sp, #208]
  4338f0:	ldr	w1, [sp, #196]
  4338f4:	sub	w3, w1, #0x3
  4338f8:	str	w3, [sp, #196]
  4338fc:	cmp	w26, #0xb
  433900:	b.eq	433a1c <ferror@plt+0x3114c>  // b.none
  433904:	and	w2, w2, #0x7
  433908:	strb	w2, [sp, #220]
  43390c:	lsr	x2, x0, #6
  433910:	str	x2, [sp, #208]
  433914:	sub	w3, w1, #0x6
  433918:	str	w3, [sp, #196]
  43391c:	cmp	w26, #0xc
  433920:	b.eq	433a1c <ferror@plt+0x3114c>  // b.none
  433924:	and	w2, w2, #0x7
  433928:	strb	w2, [sp, #228]
  43392c:	lsr	x2, x0, #9
  433930:	str	x2, [sp, #208]
  433934:	sub	w3, w1, #0x9
  433938:	str	w3, [sp, #196]
  43393c:	cmp	w26, #0xd
  433940:	b.eq	433a1c <ferror@plt+0x3114c>  // b.none
  433944:	and	w2, w2, #0x7
  433948:	strb	w2, [sp, #219]
  43394c:	lsr	x2, x0, #12
  433950:	str	x2, [sp, #208]
  433954:	sub	w3, w1, #0xc
  433958:	str	w3, [sp, #196]
  43395c:	cmp	w26, #0xe
  433960:	b.eq	433a1c <ferror@plt+0x3114c>  // b.none
  433964:	and	w2, w2, #0x7
  433968:	strb	w2, [sp, #229]
  43396c:	lsr	x0, x0, #15
  433970:	str	x0, [sp, #208]
  433974:	sub	w1, w1, #0xf
  433978:	str	w1, [sp, #196]
  43397c:	cmp	w26, #0xf
  433980:	b.eq	433a1c <ferror@plt+0x3114c>  // b.none
  433984:	mov	x3, x25
  433988:	mov	x2, x24
  43398c:	mov	x1, x23
  433990:	add	x0, sp, #0xc8
  433994:	bl	43357c <ferror@plt+0x30cac>
  433998:	cbz	w0, 43413c <ferror@plt+0x3186c>
  43399c:	ldr	x0, [sp, #208]
  4339a0:	and	w1, w0, #0x7
  4339a4:	strb	w1, [sp, #218]
  4339a8:	lsr	x2, x0, #3
  4339ac:	str	x2, [sp, #208]
  4339b0:	ldr	w1, [sp, #196]
  4339b4:	sub	w3, w1, #0x3
  4339b8:	str	w3, [sp, #196]
  4339bc:	cmp	w26, #0x10
  4339c0:	b.eq	433a1c <ferror@plt+0x3114c>  // b.none
  4339c4:	and	w2, w2, #0x7
  4339c8:	strb	w2, [sp, #230]
  4339cc:	lsr	x2, x0, #6
  4339d0:	str	x2, [sp, #208]
  4339d4:	sub	w3, w1, #0x6
  4339d8:	str	w3, [sp, #196]
  4339dc:	cmp	w26, #0x11
  4339e0:	b.eq	433a1c <ferror@plt+0x3114c>  // b.none
  4339e4:	and	w2, w2, #0x7
  4339e8:	strb	w2, [sp, #217]
  4339ec:	lsr	x2, x0, #9
  4339f0:	str	x2, [sp, #208]
  4339f4:	sub	w3, w1, #0x9
  4339f8:	str	w3, [sp, #196]
  4339fc:	cmp	w26, #0x12
  433a00:	b.eq	433a1c <ferror@plt+0x3114c>  // b.none
  433a04:	and	w2, w2, #0x7
  433a08:	strb	w2, [sp, #231]
  433a0c:	lsr	x0, x0, #12
  433a10:	str	x0, [sp, #208]
  433a14:	sub	w1, w1, #0xc
  433a18:	str	w1, [sp, #196]
  433a1c:	ldr	x26, [sp, #112]
  433a20:	mov	x3, x26
  433a24:	mov	x2, x26
  433a28:	mov	x1, #0x13                  	// #19
  433a2c:	add	x0, sp, #0xd8
  433a30:	bl	433138 <ferror@plt+0x30868>
  433a34:	cbz	w0, 434144 <ferror@plt+0x31874>
  433a38:	add	x0, x26, #0x1, lsl #12
  433a3c:	add	x0, x0, #0x278
  433a40:	str	x0, [sp, #136]
  433a44:	mov	w1, w27
  433a48:	str	x1, [sp, #168]
  433a4c:	mov	w2, w28
  433a50:	str	x2, [sp, #184]
  433a54:	add	x28, x1, x2
  433a58:	add	x28, x0, x28
  433a5c:	cmp	x0, x28
  433a60:	b.cs	433d48 <ferror@plt+0x31478>  // b.hs, b.nlast
  433a64:	mov	x26, x0
  433a68:	add	x0, sp, #0xc8
  433a6c:	str	x0, [sp, #128]
  433a70:	b	433bd0 <ferror@plt+0x31300>
  433a74:	cmp	w0, #0x8
  433a78:	b.ls	433aa0 <ferror@plt+0x311d0>  // b.plast
  433a7c:	ldr	x1, [sp, #200]
  433a80:	sub	w0, w0, #0x8
  433a84:	cmp	w0, #0x8
  433a88:	b.hi	433a80 <ferror@plt+0x311b0>  // b.pmore
  433a8c:	sub	w2, w2, #0xc
  433a90:	lsr	w2, w2, #3
  433a94:	mvn	x2, x2
  433a98:	add	x2, x1, x2
  433a9c:	str	x2, [sp, #200]
  433aa0:	str	xzr, [sp, #208]
  433aa4:	str	wzr, [sp, #196]
  433aa8:	ldr	x27, [sp, #200]
  433aac:	sub	x0, x23, x27
  433ab0:	cmp	x0, #0x3
  433ab4:	b.le	4340f4 <ferror@plt+0x31824>
  433ab8:	ldrb	w0, [x27, #1]
  433abc:	ldrb	w26, [x27]
  433ac0:	bfi	w26, w0, #8, #24
  433ac4:	ldrb	w1, [x27, #3]
  433ac8:	ldrb	w0, [x27, #2]
  433acc:	bfi	w0, w1, #8, #24
  433ad0:	add	x27, x27, #0x4
  433ad4:	str	x27, [sp, #200]
  433ad8:	mvn	w0, w0
  433adc:	cmp	w26, w0, uxth
  433ae0:	b.ne	4340fc <ferror@plt+0x3182c>  // b.any
  433ae4:	sub	x0, x23, x27
  433ae8:	cmp	w26, w0
  433aec:	b.hi	434104 <ferror@plt+0x31834>  // b.pmore
  433af0:	ldr	x0, [sp, #104]
  433af4:	sub	x0, x0, x22
  433af8:	cmp	w26, w0
  433afc:	b.hi	43410c <ferror@plt+0x3183c>  // b.pmore
  433b00:	and	x26, x26, #0xffff
  433b04:	mov	x2, x26
  433b08:	mov	x1, x27
  433b0c:	mov	x0, x22
  433b10:	bl	402260 <memcpy@plt>
  433b14:	add	x22, x22, x26
  433b18:	add	x26, x27, x26
  433b1c:	str	x26, [sp, #200]
  433b20:	tst	x26, #0x3
  433b24:	b.eq	433b54 <ferror@plt+0x31284>  // b.none
  433b28:	ldr	w0, [sp, #196]
  433b2c:	ldrb	w1, [x26], #1
  433b30:	lsl	x2, x1, x0
  433b34:	ldr	x1, [sp, #208]
  433b38:	orr	x1, x1, x2
  433b3c:	str	x1, [sp, #208]
  433b40:	add	w0, w0, #0x8
  433b44:	str	w0, [sp, #196]
  433b48:	str	x26, [sp, #200]
  433b4c:	tst	x26, #0x3
  433b50:	b.ne	433b28 <ferror@plt+0x31258>  // b.any
  433b54:	ldr	x0, [sp, #160]
  433b58:	tbz	w0, #0, 4336e0 <ferror@plt+0x30e10>
  433b5c:	ldr	x0, [sp, #200]
  433b60:	sub	x1, x23, x0
  433b64:	cmp	x1, #0x4
  433b68:	b.le	4340dc <ferror@plt+0x3180c>
  433b6c:	ldp	x27, x28, [sp, #80]
  433b70:	b	433638 <ferror@plt+0x30d68>
  433b74:	cmp	w3, #0x10
  433b78:	b.eq	433c30 <ferror@plt+0x31360>  // b.none
  433b7c:	cmp	w3, #0x11
  433b80:	b.eq	433ca0 <ferror@plt+0x313d0>  // b.none
  433b84:	cmp	w3, #0x12
  433b88:	b.ne	43418c <ferror@plt+0x318bc>  // b.any
  433b8c:	and	w27, w0, #0x7f
  433b90:	add	w27, w27, #0xb
  433b94:	lsr	x0, x0, #7
  433b98:	str	x0, [sp, #208]
  433b9c:	sub	w1, w1, #0x8
  433ba0:	str	w1, [sp, #196]
  433ba4:	sub	x0, x28, x26
  433ba8:	cmp	w27, w0
  433bac:	b.hi	434194 <ferror@plt+0x318c4>  // b.pmore
  433bb0:	mov	w27, w27
  433bb4:	mov	x2, x27
  433bb8:	mov	w1, #0x0                   	// #0
  433bbc:	mov	x0, x26
  433bc0:	bl	402490 <memset@plt>
  433bc4:	add	x26, x26, x27
  433bc8:	cmp	x26, x28
  433bcc:	b.cs	433d48 <ferror@plt+0x31478>  // b.hs, b.nlast
  433bd0:	mov	x3, x25
  433bd4:	mov	x2, x24
  433bd8:	mov	x1, x23
  433bdc:	ldr	x0, [sp, #128]
  433be0:	bl	43357c <ferror@plt+0x30cac>
  433be4:	cbz	w0, 43414c <ferror@plt+0x3187c>
  433be8:	ldr	x0, [sp, #208]
  433bec:	and	x1, x0, #0xff
  433bf0:	ldr	x2, [sp, #112]
  433bf4:	ldrh	w2, [x2, x1, lsl #1]
  433bf8:	tbnz	w2, #12, 434154 <ferror@plt+0x31884>
  433bfc:	ubfx	x3, x2, #9, #3
  433c00:	add	w1, w3, #0x1
  433c04:	lsr	x0, x0, x1
  433c08:	str	x0, [sp, #208]
  433c0c:	ldr	w1, [sp, #196]
  433c10:	sub	w1, w1, w3
  433c14:	sub	w3, w1, #0x1
  433c18:	str	w3, [sp, #196]
  433c1c:	and	w3, w2, #0x1ff
  433c20:	tst	w2, #0x1f0
  433c24:	b.ne	433b74 <ferror@plt+0x312a4>  // b.any
  433c28:	strb	w3, [x26], #1
  433c2c:	b	433bc8 <ferror@plt+0x312f8>
  433c30:	ldr	x2, [sp, #136]
  433c34:	cmp	x26, x2
  433c38:	b.eq	434174 <ferror@plt+0x318a4>  // b.none
  433c3c:	and	w2, w0, #0x3
  433c40:	add	w2, w2, #0x3
  433c44:	lsr	x0, x0, #2
  433c48:	str	x0, [sp, #208]
  433c4c:	sub	w1, w1, #0x3
  433c50:	str	w1, [sp, #196]
  433c54:	sub	x0, x28, x26
  433c58:	cmp	w2, w0
  433c5c:	b.hi	43417c <ferror@plt+0x318ac>  // b.pmore
  433c60:	ldurb	w0, [x26, #-1]
  433c64:	cmp	w2, #0x5
  433c68:	b.eq	433c84 <ferror@plt+0x313b4>  // b.none
  433c6c:	cmp	w2, #0x6
  433c70:	b.eq	433c80 <ferror@plt+0x313b0>  // b.none
  433c74:	cmp	w2, #0x4
  433c78:	b.ne	433c8c <ferror@plt+0x313bc>  // b.any
  433c7c:	b	433c88 <ferror@plt+0x313b8>
  433c80:	strb	w0, [x26], #1
  433c84:	strb	w0, [x26], #1
  433c88:	strb	w0, [x26], #1
  433c8c:	strb	w0, [x26]
  433c90:	strb	w0, [x26, #1]
  433c94:	strb	w0, [x26, #2]
  433c98:	add	x26, x26, #0x3
  433c9c:	b	433bc8 <ferror@plt+0x312f8>
  433ca0:	and	w2, w0, #0x7
  433ca4:	add	w2, w2, #0x3
  433ca8:	lsr	x0, x0, #3
  433cac:	str	x0, [sp, #208]
  433cb0:	sub	w1, w1, #0x4
  433cb4:	str	w1, [sp, #196]
  433cb8:	sub	x0, x28, x26
  433cbc:	cmp	w2, w0
  433cc0:	b.hi	434184 <ferror@plt+0x318b4>  // b.pmore
  433cc4:	cmp	w2, #0x7
  433cc8:	b.eq	433d40 <ferror@plt+0x31470>  // b.none
  433ccc:	b.hi	433d14 <ferror@plt+0x31444>  // b.pmore
  433cd0:	cmp	w2, #0x5
  433cd4:	b.eq	433ce4 <ferror@plt+0x31414>  // b.none
  433cd8:	cmp	w2, #0x6
  433cdc:	b.ne	433cec <ferror@plt+0x3141c>  // b.any
  433ce0:	strb	wzr, [x26], #1
  433ce4:	strb	wzr, [x26], #1
  433ce8:	b	433cf8 <ferror@plt+0x31428>
  433cec:	mov	x0, x26
  433cf0:	cmp	w2, #0x4
  433cf4:	b.ne	433d00 <ferror@plt+0x31430>  // b.any
  433cf8:	mov	x0, x26
  433cfc:	strb	wzr, [x0], #1
  433d00:	strb	wzr, [x0]
  433d04:	strb	wzr, [x0, #1]
  433d08:	add	x26, x0, #0x3
  433d0c:	strb	wzr, [x0, #2]
  433d10:	b	433bc8 <ferror@plt+0x312f8>
  433d14:	cmp	w2, #0x9
  433d18:	b.eq	433d28 <ferror@plt+0x31458>  // b.none
  433d1c:	cmp	w2, #0xa
  433d20:	b.ne	433d30 <ferror@plt+0x31460>  // b.any
  433d24:	strb	wzr, [x26], #1
  433d28:	strb	wzr, [x26], #1
  433d2c:	b	433d3c <ferror@plt+0x3146c>
  433d30:	mov	x0, x26
  433d34:	cmp	w2, #0x8
  433d38:	b.ne	433d00 <ferror@plt+0x31430>  // b.any
  433d3c:	strb	wzr, [x26], #1
  433d40:	strb	wzr, [x26], #1
  433d44:	b	433ce0 <ferror@plt+0x31410>
  433d48:	ldr	x26, [sp, #112]
  433d4c:	add	x0, x26, #0x1, lsl #12
  433d50:	ldrb	w0, [x0, #888]
  433d54:	cbz	w0, 43419c <ferror@plt+0x318cc>
  433d58:	mov	x3, x26
  433d5c:	mov	x2, x26
  433d60:	ldr	x28, [sp, #168]
  433d64:	mov	x1, x28
  433d68:	ldr	x27, [sp, #136]
  433d6c:	mov	x0, x27
  433d70:	bl	433138 <ferror@plt+0x30868>
  433d74:	cbz	w0, 4341a4 <ferror@plt+0x318d4>
  433d78:	add	x2, x26, #0x800
  433d7c:	str	x2, [sp, #176]
  433d80:	mov	x3, x2
  433d84:	mov	x2, x26
  433d88:	ldr	x1, [sp, #184]
  433d8c:	add	x0, x27, x28
  433d90:	bl	433138 <ferror@plt+0x30868>
  433d94:	cbz	w0, 4341ac <ferror@plt+0x318dc>
  433d98:	str	x26, [sp, #136]
  433d9c:	b	433db0 <ferror@plt+0x314e0>
  433da0:	ldr	x0, [sp, #144]
  433da4:	str	x0, [sp, #176]
  433da8:	ldr	x0, [sp, #152]
  433dac:	str	x0, [sp, #136]
  433db0:	add	x0, sp, #0xc8
  433db4:	str	x0, [sp, #128]
  433db8:	b	433e0c <ferror@plt+0x3153c>
  433dbc:	mov	w2, #0x1                   	// #1
  433dc0:	lsl	w1, w2, w1
  433dc4:	sub	w1, w1, #0x1
  433dc8:	and	x1, x1, x0, lsr #8
  433dcc:	add	w26, w26, #0x100
  433dd0:	add	x1, x1, w26, sxtw
  433dd4:	ldr	x2, [sp, #136]
  433dd8:	ldrh	w26, [x2, x1, lsl #1]
  433ddc:	ubfx	x1, x26, #9, #3
  433de0:	and	w26, w26, #0x1ff
  433de4:	add	w2, w1, #0x8
  433de8:	lsr	x0, x0, x2
  433dec:	str	x0, [sp, #208]
  433df0:	ldr	w0, [sp, #196]
  433df4:	sub	w0, w0, #0x8
  433df8:	sub	w0, w0, w1
  433dfc:	str	w0, [sp, #196]
  433e00:	b	433e5c <ferror@plt+0x3158c>
  433e04:	strb	w26, [x22], #1
  433e08:	prfm	pstl1keep, [x22]
  433e0c:	mov	x3, x25
  433e10:	mov	x2, x24
  433e14:	mov	x1, x23
  433e18:	ldr	x0, [sp, #128]
  433e1c:	bl	43357c <ferror@plt+0x30cac>
  433e20:	cbz	w0, 4341b4 <ferror@plt+0x318e4>
  433e24:	ldr	x0, [sp, #208]
  433e28:	and	x1, x0, #0xff
  433e2c:	ldr	x2, [sp, #136]
  433e30:	ldrh	w2, [x2, x1, lsl #1]
  433e34:	ubfx	x1, x2, #9, #3
  433e38:	and	w26, w2, #0x1ff
  433e3c:	tbnz	w2, #12, 433dbc <ferror@plt+0x314ec>
  433e40:	add	w2, w1, #0x1
  433e44:	lsr	x0, x0, x2
  433e48:	str	x0, [sp, #208]
  433e4c:	ldr	w0, [sp, #196]
  433e50:	sub	w0, w0, #0x1
  433e54:	sub	w1, w0, w1
  433e58:	str	w1, [sp, #196]
  433e5c:	cmp	w26, #0xff
  433e60:	b.hi	433e78 <ferror@plt+0x315a8>  // b.pmore
  433e64:	ldr	x0, [sp, #104]
  433e68:	cmp	x0, x22
  433e6c:	b.ne	433e04 <ferror@plt+0x31534>  // b.any
  433e70:	ldp	x27, x28, [sp, #80]
  433e74:	b	434158 <ferror@plt+0x31888>
  433e78:	cmp	w26, #0x100
  433e7c:	b.eq	433b54 <ferror@plt+0x31284>  // b.none
  433e80:	cmp	w26, #0x108
  433e84:	b.hi	433f14 <ferror@plt+0x31644>  // b.pmore
  433e88:	sub	w28, w26, #0xfe
  433e8c:	mov	x3, x25
  433e90:	mov	x2, x24
  433e94:	mov	x1, x23
  433e98:	ldr	x0, [sp, #128]
  433e9c:	bl	43357c <ferror@plt+0x30cac>
  433ea0:	cbz	w0, 4341cc <ferror@plt+0x318fc>
  433ea4:	ldr	x0, [sp, #208]
  433ea8:	and	x1, x0, #0xff
  433eac:	ldr	x2, [sp, #176]
  433eb0:	ldrh	w2, [x2, x1, lsl #1]
  433eb4:	ubfx	x1, x2, #9, #3
  433eb8:	and	w26, w2, #0x1ff
  433ebc:	tbnz	w2, #12, 433f94 <ferror@plt+0x316c4>
  433ec0:	add	w2, w1, #0x1
  433ec4:	lsr	x0, x0, x2
  433ec8:	str	x0, [sp, #208]
  433ecc:	ldr	w0, [sp, #196]
  433ed0:	sub	w0, w0, #0x1
  433ed4:	sub	w1, w0, w1
  433ed8:	str	w1, [sp, #196]
  433edc:	cbnz	w26, 433fdc <ferror@plt+0x3170c>
  433ee0:	cmp	x19, x22
  433ee4:	b.eq	4341d4 <ferror@plt+0x31904>  // b.none
  433ee8:	ldr	x0, [sp, #104]
  433eec:	sub	x0, x0, x22
  433ef0:	cmp	w28, w0
  433ef4:	b.hi	4341dc <ferror@plt+0x3190c>  // b.pmore
  433ef8:	mov	w28, w28
  433efc:	mov	x2, x28
  433f00:	ldurb	w1, [x22, #-1]
  433f04:	mov	x0, x22
  433f08:	bl	402490 <memset@plt>
  433f0c:	add	x22, x22, x28
  433f10:	b	433e0c <ferror@plt+0x3153c>
  433f14:	cmp	w26, #0x11d
  433f18:	b.eq	433f8c <ferror@plt+0x316bc>  // b.none
  433f1c:	b.hi	4341bc <ferror@plt+0x318ec>  // b.pmore
  433f20:	mov	x3, x25
  433f24:	mov	x2, x24
  433f28:	mov	x1, x23
  433f2c:	ldr	x0, [sp, #128]
  433f30:	bl	43357c <ferror@plt+0x30cac>
  433f34:	cbz	w0, 4341c4 <ferror@plt+0x318f4>
  433f38:	sub	w26, w26, #0x109
  433f3c:	lsr	w1, w26, #2
  433f40:	add	w2, w1, #0x1
  433f44:	and	w26, w26, #0x3
  433f48:	lsl	w0, w26, w2
  433f4c:	add	w0, w0, #0xb
  433f50:	ldr	x3, [sp, #208]
  433f54:	mov	w4, #0x1                   	// #1
  433f58:	lsl	w1, w4, w1
  433f5c:	sub	w1, w1, #0x1
  433f60:	mov	w4, #0xffffffff            	// #-1
  433f64:	lsl	w4, w4, w2
  433f68:	bic	w4, w3, w4
  433f6c:	add	w1, w4, w1, lsl #3
  433f70:	add	w28, w1, w0
  433f74:	lsr	x3, x3, x2
  433f78:	str	x3, [sp, #208]
  433f7c:	ldr	w0, [sp, #196]
  433f80:	sub	w2, w0, w2
  433f84:	str	w2, [sp, #196]
  433f88:	b	433e8c <ferror@plt+0x315bc>
  433f8c:	mov	w28, #0x102                 	// #258
  433f90:	b	433e8c <ferror@plt+0x315bc>
  433f94:	mov	w2, #0x1                   	// #1
  433f98:	lsl	w1, w2, w1
  433f9c:	sub	w1, w1, #0x1
  433fa0:	and	x1, x1, x0, lsr #8
  433fa4:	add	w26, w26, #0x100
  433fa8:	add	x1, x1, w26, sxtw
  433fac:	ldr	x2, [sp, #176]
  433fb0:	ldrh	w26, [x2, x1, lsl #1]
  433fb4:	ubfx	x1, x26, #9, #3
  433fb8:	and	w26, w26, #0x1ff
  433fbc:	add	w2, w1, #0x8
  433fc0:	lsr	x0, x0, x2
  433fc4:	str	x0, [sp, #208]
  433fc8:	ldr	w0, [sp, #196]
  433fcc:	sub	w0, w0, #0x8
  433fd0:	sub	w0, w0, w1
  433fd4:	str	w0, [sp, #196]
  433fd8:	b	433edc <ferror@plt+0x3160c>
  433fdc:	cmp	w26, #0x1d
  433fe0:	b.hi	4341e4 <ferror@plt+0x31914>  // b.pmore
  433fe4:	cmp	w26, #0x3
  433fe8:	b.hi	434030 <ferror@plt+0x31760>  // b.pmore
  433fec:	add	w26, w26, #0x1
  433ff0:	sub	x0, x22, x19
  433ff4:	cmp	w26, w0
  433ff8:	b.hi	4341f4 <ferror@plt+0x31924>  // b.pmore
  433ffc:	ldr	x0, [sp, #104]
  434000:	sub	x0, x0, x22
  434004:	cmp	w28, w0
  434008:	b.hi	4341fc <ferror@plt+0x3192c>  // b.pmore
  43400c:	cmp	w28, w26
  434010:	b.hi	43409c <ferror@plt+0x317cc>  // b.pmore
  434014:	mov	w27, w28
  434018:	mov	x2, x27
  43401c:	sub	x1, x22, w26, uxtw
  434020:	mov	x0, x22
  434024:	bl	402260 <memcpy@plt>
  434028:	add	x22, x22, x27
  43402c:	b	433e0c <ferror@plt+0x3153c>
  434030:	mov	x3, x25
  434034:	mov	x2, x24
  434038:	mov	x1, x23
  43403c:	ldr	x0, [sp, #128]
  434040:	bl	43357c <ferror@plt+0x30cac>
  434044:	cbz	w0, 4341ec <ferror@plt+0x3191c>
  434048:	sub	w26, w26, #0x4
  43404c:	lsr	w1, w26, #1
  434050:	add	w2, w1, #0x1
  434054:	and	w26, w26, #0x1
  434058:	lsl	w0, w26, w2
  43405c:	add	w0, w0, #0x5
  434060:	ldr	x3, [sp, #208]
  434064:	mov	w4, #0x1                   	// #1
  434068:	lsl	w1, w4, w1
  43406c:	sub	w1, w1, #0x1
  434070:	mov	w4, #0xffffffff            	// #-1
  434074:	lsl	w4, w4, w2
  434078:	bic	w4, w3, w4
  43407c:	add	w1, w4, w1, lsl #2
  434080:	add	w26, w1, w0
  434084:	lsr	x3, x3, x2
  434088:	str	x3, [sp, #208]
  43408c:	ldr	w0, [sp, #196]
  434090:	sub	w2, w0, w2
  434094:	str	w2, [sp, #196]
  434098:	b	433ff0 <ferror@plt+0x31720>
  43409c:	mov	w0, w26
  4340a0:	str	x0, [sp, #184]
  4340a4:	cmp	w28, w26
  4340a8:	csel	w0, w28, w26, ls  // ls = plast
  4340ac:	str	w0, [sp, #168]
  4340b0:	csel	w27, w28, w26, ls  // ls = plast
  4340b4:	mov	x2, x27
  4340b8:	ldr	x1, [sp, #184]
  4340bc:	sub	x1, x22, x1
  4340c0:	mov	x0, x22
  4340c4:	bl	402260 <memcpy@plt>
  4340c8:	add	x22, x22, x27
  4340cc:	ldr	w0, [sp, #168]
  4340d0:	subs	w28, w28, w0
  4340d4:	b.ne	4340a4 <ferror@plt+0x317d4>  // b.any
  4340d8:	b	433e0c <ferror@plt+0x3153c>
  4340dc:	ldp	x27, x28, [sp, #80]
  4340e0:	b	434208 <ferror@plt+0x31938>
  4340e4:	ldp	x27, x28, [sp, #80]
  4340e8:	b	434158 <ferror@plt+0x31888>
  4340ec:	ldp	x27, x28, [sp, #80]
  4340f0:	b	434158 <ferror@plt+0x31888>
  4340f4:	ldp	x27, x28, [sp, #80]
  4340f8:	b	434158 <ferror@plt+0x31888>
  4340fc:	ldp	x27, x28, [sp, #80]
  434100:	b	434158 <ferror@plt+0x31888>
  434104:	ldp	x27, x28, [sp, #80]
  434108:	b	434158 <ferror@plt+0x31888>
  43410c:	ldp	x27, x28, [sp, #80]
  434110:	b	434158 <ferror@plt+0x31888>
  434114:	ldp	x27, x28, [sp, #80]
  434118:	b	434158 <ferror@plt+0x31888>
  43411c:	ldp	x27, x28, [sp, #80]
  434120:	b	434158 <ferror@plt+0x31888>
  434124:	ldp	x27, x28, [sp, #80]
  434128:	b	434158 <ferror@plt+0x31888>
  43412c:	ldp	x27, x28, [sp, #80]
  434130:	b	434158 <ferror@plt+0x31888>
  434134:	ldp	x27, x28, [sp, #80]
  434138:	b	434158 <ferror@plt+0x31888>
  43413c:	ldp	x27, x28, [sp, #80]
  434140:	b	434158 <ferror@plt+0x31888>
  434144:	ldp	x27, x28, [sp, #80]
  434148:	b	434158 <ferror@plt+0x31888>
  43414c:	ldp	x27, x28, [sp, #80]
  434150:	b	434158 <ferror@plt+0x31888>
  434154:	ldp	x27, x28, [sp, #80]
  434158:	mov	w0, #0x0                   	// #0
  43415c:	ldp	x19, x20, [sp, #16]
  434160:	ldp	x21, x22, [sp, #32]
  434164:	ldp	x23, x24, [sp, #48]
  434168:	ldp	x25, x26, [sp, #64]
  43416c:	ldp	x29, x30, [sp], #240
  434170:	ret
  434174:	ldp	x27, x28, [sp, #80]
  434178:	b	434158 <ferror@plt+0x31888>
  43417c:	ldp	x27, x28, [sp, #80]
  434180:	b	434158 <ferror@plt+0x31888>
  434184:	ldp	x27, x28, [sp, #80]
  434188:	b	434158 <ferror@plt+0x31888>
  43418c:	ldp	x27, x28, [sp, #80]
  434190:	b	434158 <ferror@plt+0x31888>
  434194:	ldp	x27, x28, [sp, #80]
  434198:	b	434158 <ferror@plt+0x31888>
  43419c:	ldp	x27, x28, [sp, #80]
  4341a0:	b	434158 <ferror@plt+0x31888>
  4341a4:	ldp	x27, x28, [sp, #80]
  4341a8:	b	434158 <ferror@plt+0x31888>
  4341ac:	ldp	x27, x28, [sp, #80]
  4341b0:	b	434158 <ferror@plt+0x31888>
  4341b4:	ldp	x27, x28, [sp, #80]
  4341b8:	b	434158 <ferror@plt+0x31888>
  4341bc:	ldp	x27, x28, [sp, #80]
  4341c0:	b	434158 <ferror@plt+0x31888>
  4341c4:	ldp	x27, x28, [sp, #80]
  4341c8:	b	434158 <ferror@plt+0x31888>
  4341cc:	ldp	x27, x28, [sp, #80]
  4341d0:	b	434158 <ferror@plt+0x31888>
  4341d4:	ldp	x27, x28, [sp, #80]
  4341d8:	b	434158 <ferror@plt+0x31888>
  4341dc:	ldp	x27, x28, [sp, #80]
  4341e0:	b	434158 <ferror@plt+0x31888>
  4341e4:	ldp	x27, x28, [sp, #80]
  4341e8:	b	434158 <ferror@plt+0x31888>
  4341ec:	ldp	x27, x28, [sp, #80]
  4341f0:	b	434158 <ferror@plt+0x31888>
  4341f4:	ldp	x27, x28, [sp, #80]
  4341f8:	b	434158 <ferror@plt+0x31888>
  4341fc:	ldp	x27, x28, [sp, #80]
  434200:	b	434158 <ferror@plt+0x31888>
  434204:	mov	x22, x3
  434208:	ldr	x0, [sp, #104]
  43420c:	cmp	x0, x22
  434210:	b.ne	4344a0 <ferror@plt+0x31bd0>  // b.any
  434214:	ldr	x1, [sp, #120]
  434218:	sub	x0, x1, #0x4
  43421c:	add	x0, x21, x0
  434220:	add	x21, x21, x1
  434224:	mov	w9, #0x0                   	// #0
  434228:	ldrb	w1, [x0], #1
  43422c:	orr	w9, w1, w9, lsl #8
  434230:	cmp	x21, x0
  434234:	b.ne	434228 <ferror@plt+0x31958>  // b.any
  434238:	mov	w5, #0x0                   	// #0
  43423c:	mov	w3, #0x1                   	// #1
  434240:	mov	x0, #0x15af                	// #5551
  434244:	cmp	x20, x0
  434248:	b.ls	434494 <ferror@plt+0x31bc4>  // b.plast
  43424c:	mov	x13, #0x15b0                	// #5552
  434250:	mov	w15, #0x8071                	// #32881
  434254:	movk	w15, #0x8007, lsl #16
  434258:	mov	w14, #0xfff1                	// #65521
  43425c:	mov	x17, x0
  434260:	mov	x2, x19
  434264:	add	x16, x19, x13
  434268:	ldrb	w0, [x2]
  43426c:	add	w0, w0, w3
  434270:	ldrb	w1, [x2, #1]
  434274:	add	w1, w1, w0
  434278:	ldrb	w6, [x2, #2]
  43427c:	add	w6, w6, w1
  434280:	ldrb	w25, [x2, #3]
  434284:	add	w25, w25, w6
  434288:	ldrb	w4, [x2, #4]
  43428c:	add	w4, w4, w25
  434290:	ldrb	w24, [x2, #5]
  434294:	add	w24, w24, w4
  434298:	ldrb	w12, [x2, #6]
  43429c:	add	w12, w12, w24
  4342a0:	ldrb	w23, [x2, #7]
  4342a4:	add	w23, w23, w12
  4342a8:	ldrb	w11, [x2, #8]
  4342ac:	add	w11, w11, w23
  4342b0:	ldrb	w22, [x2, #9]
  4342b4:	add	w22, w22, w11
  4342b8:	ldrb	w10, [x2, #10]
  4342bc:	add	w10, w10, w22
  4342c0:	ldrb	w21, [x2, #11]
  4342c4:	add	w21, w21, w10
  4342c8:	ldrb	w8, [x2, #12]
  4342cc:	add	w8, w8, w21
  4342d0:	ldrb	w18, [x2, #13]
  4342d4:	add	w18, w18, w8
  4342d8:	ldrb	w7, [x2, #14]
  4342dc:	add	w7, w7, w18
  4342e0:	add	x2, x2, #0x10
  4342e4:	ldurb	w3, [x2, #-1]
  4342e8:	add	w3, w3, w7
  4342ec:	add	w1, w0, w1
  4342f0:	add	w6, w6, w25
  4342f4:	add	w1, w1, w6
  4342f8:	add	w4, w4, w24
  4342fc:	add	w1, w1, w4
  434300:	add	w12, w12, w23
  434304:	add	w1, w1, w12
  434308:	add	w0, w11, w22
  43430c:	add	w0, w1, w0
  434310:	add	w10, w10, w21
  434314:	add	w0, w0, w10
  434318:	add	w8, w8, w18
  43431c:	add	w0, w0, w8
  434320:	add	w7, w7, w3
  434324:	add	w0, w0, w7
  434328:	add	w5, w5, w0
  43432c:	cmp	x2, x16
  434330:	b.ne	434268 <ferror@plt+0x31998>  // b.any
  434334:	add	x19, x19, x13
  434338:	sub	x20, x20, x13
  43433c:	umull	x0, w3, w15
  434340:	lsr	x0, x0, #47
  434344:	msub	w3, w0, w14, w3
  434348:	umull	x0, w5, w15
  43434c:	lsr	x0, x0, #47
  434350:	msub	w5, w0, w14, w5
  434354:	cmp	x20, x17
  434358:	b.hi	434260 <ferror@plt+0x31990>  // b.pmore
  43435c:	cmp	x20, #0xf
  434360:	b.ls	434444 <ferror@plt+0x31b74>  // b.plast
  434364:	sub	x12, x20, #0x10
  434368:	and	x12, x12, #0xfffffffffffffff0
  43436c:	add	x12, x12, #0x10
  434370:	add	x12, x19, x12
  434374:	ldrb	w0, [x19]
  434378:	add	w0, w0, w3
  43437c:	ldrb	w1, [x19, #1]
  434380:	add	w1, w1, w0
  434384:	ldrb	w11, [x19, #2]
  434388:	add	w11, w11, w1
  43438c:	ldrb	w18, [x19, #3]
  434390:	add	w18, w18, w11
  434394:	ldrb	w10, [x19, #4]
  434398:	add	w10, w10, w18
  43439c:	ldrb	w17, [x19, #5]
  4343a0:	add	w17, w17, w10
  4343a4:	ldrb	w8, [x19, #6]
  4343a8:	add	w8, w8, w17
  4343ac:	ldrb	w16, [x19, #7]
  4343b0:	add	w16, w16, w8
  4343b4:	ldrb	w7, [x19, #8]
  4343b8:	add	w7, w7, w16
  4343bc:	ldrb	w15, [x19, #9]
  4343c0:	add	w15, w15, w7
  4343c4:	ldrb	w6, [x19, #10]
  4343c8:	add	w6, w6, w15
  4343cc:	ldrb	w14, [x19, #11]
  4343d0:	add	w14, w14, w6
  4343d4:	ldrb	w4, [x19, #12]
  4343d8:	add	w4, w4, w14
  4343dc:	ldrb	w13, [x19, #13]
  4343e0:	add	w13, w13, w4
  4343e4:	ldrb	w2, [x19, #14]
  4343e8:	add	w2, w2, w13
  4343ec:	add	x19, x19, #0x10
  4343f0:	ldurb	w3, [x19, #-1]
  4343f4:	add	w3, w3, w2
  4343f8:	add	w1, w0, w1
  4343fc:	add	w11, w11, w18
  434400:	add	w1, w1, w11
  434404:	add	w10, w10, w17
  434408:	add	w1, w1, w10
  43440c:	add	w8, w8, w16
  434410:	add	w1, w1, w8
  434414:	add	w0, w7, w15
  434418:	add	w0, w1, w0
  43441c:	add	w6, w6, w14
  434420:	add	w0, w0, w6
  434424:	add	w4, w4, w13
  434428:	add	w0, w0, w4
  43442c:	add	w2, w2, w3
  434430:	add	w0, w0, w2
  434434:	add	w5, w5, w0
  434438:	cmp	x12, x19
  43443c:	b.ne	434374 <ferror@plt+0x31aa4>  // b.any
  434440:	and	x20, x20, #0xf
  434444:	cbz	x20, 434460 <ferror@plt+0x31b90>
  434448:	add	x20, x19, x20
  43444c:	ldrb	w0, [x19], #1
  434450:	add	w3, w3, w0
  434454:	add	w5, w5, w3
  434458:	cmp	x19, x20
  43445c:	b.ne	43444c <ferror@plt+0x31b7c>  // b.any
  434460:	mov	w0, #0x8071                	// #32881
  434464:	movk	w0, #0x8007, lsl #16
  434468:	umull	x1, w5, w0
  43446c:	lsr	x1, x1, #47
  434470:	mov	w2, #0xfff1                	// #65521
  434474:	msub	w5, w1, w2, w5
  434478:	umull	x0, w3, w0
  43447c:	lsr	x0, x0, #47
  434480:	msub	w3, w0, w2, w3
  434484:	add	w3, w3, w5, lsl #16
  434488:	cmp	w3, w9
  43448c:	cset	w0, eq  // eq = none
  434490:	b	43415c <ferror@plt+0x3188c>
  434494:	mov	w5, #0x0                   	// #0
  434498:	mov	w3, #0x1                   	// #1
  43449c:	b	43435c <ferror@plt+0x31a8c>
  4344a0:	mov	w0, #0x0                   	// #0
  4344a4:	b	43415c <ferror@plt+0x3188c>
  4344a8:	stp	x29, x30, [sp, #-112]!
  4344ac:	mov	x29, sp
  4344b0:	stp	x21, x22, [sp, #32]
  4344b4:	str	x5, [sp, #104]
  4344b8:	str	xzr, [x6]
  4344bc:	str	xzr, [x7]
  4344c0:	mov	w21, #0x1                   	// #1
  4344c4:	cmp	x2, #0xb
  4344c8:	b.ls	434594 <ferror@plt+0x31cc4>  // b.plast
  4344cc:	stp	x19, x20, [sp, #16]
  4344d0:	stp	x23, x24, [sp, #48]
  4344d4:	stp	x25, x26, [sp, #64]
  4344d8:	stp	x27, x28, [sp, #80]
  4344dc:	mov	x26, x0
  4344e0:	mov	x20, x1
  4344e4:	mov	x23, x2
  4344e8:	mov	x25, x3
  4344ec:	mov	x27, x4
  4344f0:	mov	x22, x6
  4344f4:	mov	x24, x7
  4344f8:	mov	x2, #0x4                   	// #4
  4344fc:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  434500:	add	x1, x1, #0xe38
  434504:	mov	x0, x20
  434508:	bl	4025e0 <memcmp@plt>
  43450c:	mov	w21, w0
  434510:	cbnz	w0, 4345a4 <ferror@plt+0x31cd4>
  434514:	add	x0, x20, #0x4
  434518:	add	x2, x20, #0xc
  43451c:	mov	x19, #0x0                   	// #0
  434520:	ldrb	w1, [x0], #1
  434524:	orr	x19, x1, x19, lsl #8
  434528:	cmp	x0, x2
  43452c:	b.ne	434520 <ferror@plt+0x31c50>  // b.any
  434530:	ldr	x28, [x22]
  434534:	cmp	x19, #0x0
  434538:	ccmp	x28, #0x0, #0x4, eq  // eq = none
  43453c:	b.ne	43455c <ferror@plt+0x31c8c>  // b.any
  434540:	ldr	x3, [sp, #104]
  434544:	mov	x2, x27
  434548:	mov	x1, x19
  43454c:	mov	x0, x26
  434550:	bl	4329cc <ferror@plt+0x300fc>
  434554:	mov	x28, x0
  434558:	cbz	x0, 4345bc <ferror@plt+0x31cec>
  43455c:	mov	x4, x19
  434560:	mov	x3, x28
  434564:	mov	x2, x25
  434568:	sub	x1, x23, #0xc
  43456c:	add	x0, x20, #0xc
  434570:	bl	4335d8 <ferror@plt+0x30d08>
  434574:	mov	w21, #0x1                   	// #1
  434578:	cbz	w0, 4345d0 <ferror@plt+0x31d00>
  43457c:	str	x28, [x22]
  434580:	str	x19, [x24]
  434584:	ldp	x19, x20, [sp, #16]
  434588:	ldp	x23, x24, [sp, #48]
  43458c:	ldp	x25, x26, [sp, #64]
  434590:	ldp	x27, x28, [sp, #80]
  434594:	mov	w0, w21
  434598:	ldp	x21, x22, [sp, #32]
  43459c:	ldp	x29, x30, [sp], #112
  4345a0:	ret
  4345a4:	mov	w21, #0x1                   	// #1
  4345a8:	ldp	x19, x20, [sp, #16]
  4345ac:	ldp	x23, x24, [sp, #48]
  4345b0:	ldp	x25, x26, [sp, #64]
  4345b4:	ldp	x27, x28, [sp, #80]
  4345b8:	b	434594 <ferror@plt+0x31cc4>
  4345bc:	ldp	x19, x20, [sp, #16]
  4345c0:	ldp	x23, x24, [sp, #48]
  4345c4:	ldp	x25, x26, [sp, #64]
  4345c8:	ldp	x27, x28, [sp, #80]
  4345cc:	b	434594 <ferror@plt+0x31cc4>
  4345d0:	ldp	x19, x20, [sp, #16]
  4345d4:	ldp	x23, x24, [sp, #48]
  4345d8:	ldp	x25, x26, [sp, #64]
  4345dc:	ldp	x27, x28, [sp, #80]
  4345e0:	b	434594 <ferror@plt+0x31cc4>
  4345e4:	stp	x29, x30, [sp, #-144]!
  4345e8:	mov	x29, sp
  4345ec:	stp	x19, x20, [sp, #16]
  4345f0:	stp	x21, x22, [sp, #32]
  4345f4:	stp	x23, x24, [sp, #48]
  4345f8:	stp	x25, x26, [sp, #64]
  4345fc:	stp	x27, x28, [sp, #80]
  434600:	mov	x23, x0
  434604:	str	x1, [sp, #104]
  434608:	mov	x22, x2
  43460c:	str	x3, [sp, #112]
  434610:	mov	x25, x4
  434614:	mov	x20, x6
  434618:	mov	x21, x7
  43461c:	str	x5, [sp, #120]
  434620:	mov	x0, x5
  434624:	bl	4022b0 <strlen@plt>
  434628:	mov	x24, x0
  43462c:	add	x28, x22, x25
  434630:	add	x27, x28, x0
  434634:	add	x26, x27, #0x1
  434638:	mov	x3, x21
  43463c:	mov	x2, x20
  434640:	mov	x1, x26
  434644:	mov	x0, x23
  434648:	bl	4329cc <ferror@plt+0x300fc>
  43464c:	cbz	x0, 4346d4 <ferror@plt+0x31e04>
  434650:	mov	x19, x0
  434654:	mov	x2, x22
  434658:	ldr	x1, [sp, #104]
  43465c:	bl	402260 <memcpy@plt>
  434660:	mov	x2, x25
  434664:	ldr	x1, [sp, #112]
  434668:	add	x0, x19, x22
  43466c:	bl	402260 <memcpy@plt>
  434670:	mov	x2, x24
  434674:	ldr	x1, [sp, #120]
  434678:	add	x0, x19, x28
  43467c:	bl	402260 <memcpy@plt>
  434680:	strb	wzr, [x19, x27]
  434684:	add	x3, sp, #0x8c
  434688:	mov	x2, x21
  43468c:	mov	x1, x20
  434690:	mov	x0, x19
  434694:	bl	432fcc <ferror@plt+0x306fc>
  434698:	mov	w22, w0
  43469c:	mov	x4, x21
  4346a0:	mov	x3, x20
  4346a4:	mov	x2, x26
  4346a8:	mov	x1, x19
  4346ac:	mov	x0, x23
  4346b0:	bl	432920 <ferror@plt+0x30050>
  4346b4:	mov	w0, w22
  4346b8:	ldp	x19, x20, [sp, #16]
  4346bc:	ldp	x21, x22, [sp, #32]
  4346c0:	ldp	x23, x24, [sp, #48]
  4346c4:	ldp	x25, x26, [sp, #64]
  4346c8:	ldp	x27, x28, [sp, #80]
  4346cc:	ldp	x29, x30, [sp], #144
  4346d0:	ret
  4346d4:	mov	w22, #0xffffffff            	// #-1
  4346d8:	b	4346b4 <ferror@plt+0x31de4>
  4346dc:	stp	x29, x30, [sp, #-288]!
  4346e0:	mov	x29, sp
  4346e4:	stp	x19, x20, [sp, #16]
  4346e8:	stp	x21, x22, [sp, #32]
  4346ec:	stp	x23, x24, [sp, #48]
  4346f0:	stp	x25, x26, [sp, #64]
  4346f4:	stp	x27, x28, [sp, #80]
  4346f8:	mov	x24, x0
  4346fc:	mov	x21, x1
  434700:	str	x2, [sp, #96]
  434704:	str	w3, [sp, #108]
  434708:	mov	x22, x4
  43470c:	mov	x23, x5
  434710:	mov	x28, #0x0                   	// #0
  434714:	mov	x27, #0x0                   	// #0
  434718:	add	x0, sp, #0xa0
  43471c:	str	x0, [sp, #120]
  434720:	b	4348e4 <ferror@plt+0x32014>
  434724:	mov	x4, x23
  434728:	mov	x3, x22
  43472c:	mov	x2, x25
  434730:	mov	x1, x19
  434734:	mov	x0, x24
  434738:	bl	432920 <ferror@plt+0x30050>
  43473c:	mov	w1, #0x2f                  	// #47
  434740:	mov	x0, x21
  434744:	bl	402550 <strrchr@plt>
  434748:	cbz	x0, 434910 <ferror@plt+0x32040>
  43474c:	add	x0, x0, #0x1
  434750:	sub	x19, x0, x21
  434754:	mov	x7, x23
  434758:	mov	x6, x22
  43475c:	ldr	x5, [sp, #96]
  434760:	mov	x4, #0x0                   	// #0
  434764:	adrp	x3, 458000 <_obstack_memory_used@@Base+0x11094>
  434768:	add	x3, x3, #0x710
  43476c:	mov	x2, x19
  434770:	mov	x1, x21
  434774:	mov	x0, x24
  434778:	bl	4345e4 <ferror@plt+0x31d14>
  43477c:	mov	w20, w0
  434780:	tbnz	w0, #31, 434920 <ferror@plt+0x32050>
  434784:	cmp	x28, #0x0
  434788:	ccmp	x27, #0x0, #0x4, ne  // ne = any
  43478c:	b.ne	43498c <ferror@plt+0x320bc>  // b.any
  434790:	ldr	w0, [sp, #108]
  434794:	cbnz	w0, 4349b0 <ferror@plt+0x320e0>
  434798:	mov	w0, w20
  43479c:	ldp	x19, x20, [sp, #16]
  4347a0:	ldp	x21, x22, [sp, #32]
  4347a4:	ldp	x23, x24, [sp, #48]
  4347a8:	ldp	x25, x26, [sp, #64]
  4347ac:	ldp	x27, x28, [sp, #80]
  4347b0:	ldp	x29, x30, [sp], #288
  4347b4:	ret
  4347b8:	mov	x4, x23
  4347bc:	mov	x3, x22
  4347c0:	mov	x2, x25
  4347c4:	mov	x1, x19
  4347c8:	mov	x0, x24
  4347cc:	bl	432920 <ferror@plt+0x30050>
  4347d0:	lsl	x25, x25, #1
  4347d4:	mov	x3, x23
  4347d8:	mov	x2, x22
  4347dc:	mov	x1, x25
  4347e0:	mov	x0, x24
  4347e4:	bl	4329cc <ferror@plt+0x300fc>
  4347e8:	mov	x19, x0
  4347ec:	cbz	x0, 43473c <ferror@plt+0x31e6c>
  4347f0:	mov	x2, x25
  4347f4:	mov	x1, x0
  4347f8:	mov	x0, x21
  4347fc:	bl	402330 <readlink@plt>
  434800:	tbnz	x0, #63, 434724 <ferror@plt+0x31e54>
  434804:	sub	x2, x25, #0x1
  434808:	cmp	x2, x0
  43480c:	b.ls	4347b8 <ferror@plt+0x31ee8>  // b.plast
  434810:	strb	wzr, [x19, x0]
  434814:	ldrb	w0, [x19]
  434818:	cmp	w0, #0x2f
  43481c:	b.eq	4348bc <ferror@plt+0x31fec>  // b.none
  434820:	mov	w1, #0x2f                  	// #47
  434824:	mov	x0, x21
  434828:	bl	402550 <strrchr@plt>
  43482c:	cbz	x0, 4348bc <ferror@plt+0x31fec>
  434830:	add	x0, x0, #0x1
  434834:	sub	x20, x0, x21
  434838:	mov	x0, x19
  43483c:	bl	4022b0 <strlen@plt>
  434840:	add	x1, x20, #0x1
  434844:	add	x0, x1, x0
  434848:	mov	x3, x23
  43484c:	mov	x2, x22
  434850:	str	x0, [sp, #112]
  434854:	mov	x1, x0
  434858:	mov	x0, x24
  43485c:	bl	4329cc <ferror@plt+0x300fc>
  434860:	mov	x26, x0
  434864:	cbz	x0, 434a80 <ferror@plt+0x321b0>
  434868:	mov	x2, x20
  43486c:	mov	x1, x21
  434870:	bl	402260 <memcpy@plt>
  434874:	mov	x0, x19
  434878:	bl	4022b0 <strlen@plt>
  43487c:	add	x20, x26, x20
  434880:	mov	x2, x0
  434884:	mov	x1, x19
  434888:	mov	x0, x20
  43488c:	bl	402260 <memcpy@plt>
  434890:	mov	x0, x19
  434894:	bl	4022b0 <strlen@plt>
  434898:	strb	wzr, [x20, x0]
  43489c:	mov	x4, x23
  4348a0:	mov	x3, x22
  4348a4:	mov	x2, x25
  4348a8:	mov	x1, x19
  4348ac:	mov	x0, x24
  4348b0:	bl	432920 <ferror@plt+0x30050>
  4348b4:	ldr	x25, [sp, #112]
  4348b8:	mov	x19, x26
  4348bc:	cbz	x27, 4348d8 <ferror@plt+0x32008>
  4348c0:	mov	x4, x23
  4348c4:	mov	x3, x22
  4348c8:	mov	x2, x28
  4348cc:	mov	x1, x27
  4348d0:	mov	x0, x24
  4348d4:	bl	432920 <ferror@plt+0x30050>
  4348d8:	mov	x28, x25
  4348dc:	mov	x27, x19
  4348e0:	mov	x21, x19
  4348e4:	ldr	x2, [sp, #120]
  4348e8:	mov	x1, x21
  4348ec:	mov	w0, #0x0                   	// #0
  4348f0:	bl	402740 <__lxstat@plt>
  4348f4:	tbnz	w0, #31, 43473c <ferror@plt+0x31e6c>
  4348f8:	ldr	w0, [sp, #176]
  4348fc:	and	w0, w0, #0xf000
  434900:	cmp	w0, #0xa, lsl #12
  434904:	b.ne	43473c <ferror@plt+0x31e6c>  // b.any
  434908:	mov	x25, #0x80                  	// #128
  43490c:	b	4347d4 <ferror@plt+0x31f04>
  434910:	mov	x19, #0x0                   	// #0
  434914:	adrp	x21, 458000 <_obstack_memory_used@@Base+0x11094>
  434918:	add	x21, x21, #0x710
  43491c:	b	434754 <ferror@plt+0x31e84>
  434920:	mov	x7, x23
  434924:	mov	x6, x22
  434928:	ldr	x5, [sp, #96]
  43492c:	mov	x4, #0x7                   	// #7
  434930:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c094>
  434934:	add	x3, x3, #0xe40
  434938:	mov	x2, x19
  43493c:	mov	x1, x21
  434940:	mov	x0, x24
  434944:	bl	4345e4 <ferror@plt+0x31d14>
  434948:	mov	w20, w0
  43494c:	tbz	w0, #31, 434784 <ferror@plt+0x31eb4>
  434950:	mov	x7, x23
  434954:	mov	x6, x22
  434958:	ldr	x5, [sp, #96]
  43495c:	mov	x4, x19
  434960:	mov	x3, x21
  434964:	mov	x2, #0xf                   	// #15
  434968:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  43496c:	add	x1, x1, #0xe48
  434970:	mov	x0, x24
  434974:	bl	4345e4 <ferror@plt+0x31d14>
  434978:	cmp	w0, #0x0
  43497c:	csinv	w20, w0, wzr, ge  // ge = tcont
  434980:	cmp	x27, #0x0
  434984:	ccmp	x28, #0x0, #0x4, ne  // ne = any
  434988:	b.eq	4349a4 <ferror@plt+0x320d4>  // b.none
  43498c:	mov	x4, x23
  434990:	mov	x3, x22
  434994:	mov	x2, x28
  434998:	mov	x1, x27
  43499c:	mov	x0, x24
  4349a0:	bl	432920 <ferror@plt+0x30050>
  4349a4:	tbz	w20, #31, 434790 <ferror@plt+0x31ec0>
  4349a8:	mov	w20, #0xffffffff            	// #-1
  4349ac:	b	434798 <ferror@plt+0x31ec8>
  4349b0:	add	x2, sp, #0xa0
  4349b4:	mov	w1, w20
  4349b8:	mov	w0, #0x0                   	// #0
  4349bc:	bl	402790 <__fxstat@plt>
  4349c0:	tbnz	w0, #31, 434a50 <ferror@plt+0x32180>
  4349c4:	add	x6, sp, #0x88
  4349c8:	mov	x5, x23
  4349cc:	mov	x4, x22
  4349d0:	ldr	x3, [sp, #208]
  4349d4:	mov	x2, #0x0                   	// #0
  4349d8:	mov	w1, w20
  4349dc:	mov	x0, x24
  4349e0:	bl	436380 <ferror@plt+0x33ab0>
  4349e4:	cbz	w0, 434a68 <ferror@plt+0x32198>
  4349e8:	ldr	x1, [sp, #136]
  4349ec:	ldr	x3, [sp, #208]
  4349f0:	add	x3, x1, x3
  4349f4:	cmp	x1, x3
  4349f8:	b.cs	434a98 <ferror@plt+0x321c8>  // b.hs, b.nlast
  4349fc:	mov	w19, #0xffffffff            	// #-1
  434a00:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1d094>
  434a04:	add	x2, x2, #0x90
  434a08:	add	x2, x2, #0x4e0
  434a0c:	ldrb	w0, [x1], #1
  434a10:	eor	w0, w0, w19
  434a14:	and	x0, x0, #0xff
  434a18:	ldr	w0, [x2, x0, lsl #2]
  434a1c:	eor	w19, w0, w19, lsr #8
  434a20:	cmp	x3, x1
  434a24:	b.ne	434a0c <ferror@plt+0x3213c>  // b.any
  434a28:	mov	x3, x23
  434a2c:	mov	x2, x22
  434a30:	add	x1, sp, #0x88
  434a34:	mov	x0, x24
  434a38:	bl	436444 <ferror@plt+0x33b74>
  434a3c:	mvn	w19, w19
  434a40:	ldr	w0, [sp, #108]
  434a44:	cmp	w0, w19
  434a48:	b.eq	434798 <ferror@plt+0x31ec8>  // b.none
  434a4c:	b	434a68 <ferror@plt+0x32198>
  434a50:	bl	402810 <__errno_location@plt>
  434a54:	ldr	w2, [x0]
  434a58:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  434a5c:	add	x1, x1, #0xe58
  434a60:	mov	x0, x23
  434a64:	blr	x22
  434a68:	mov	x2, x23
  434a6c:	mov	x1, x22
  434a70:	mov	w0, w20
  434a74:	bl	433080 <ferror@plt+0x307b0>
  434a78:	mov	w20, #0xffffffff            	// #-1
  434a7c:	b	434798 <ferror@plt+0x31ec8>
  434a80:	cmp	x28, #0x0
  434a84:	ccmp	x27, #0x0, #0x4, ne  // ne = any
  434a88:	mov	w20, #0xffffffff            	// #-1
  434a8c:	b.eq	434798 <ferror@plt+0x31ec8>  // b.none
  434a90:	mov	w20, #0xffffffff            	// #-1
  434a94:	b	43498c <ferror@plt+0x320bc>
  434a98:	mov	x3, x23
  434a9c:	mov	x2, x22
  434aa0:	add	x1, sp, #0x88
  434aa4:	mov	x0, x24
  434aa8:	bl	436444 <ferror@plt+0x33b74>
  434aac:	b	434a68 <ferror@plt+0x32198>
  434ab0:	sub	sp, sp, #0x430
  434ab4:	stp	x29, x30, [sp, #80]
  434ab8:	add	x29, sp, #0x50
  434abc:	stp	x19, x20, [sp, #96]
  434ac0:	stp	x21, x22, [sp, #112]
  434ac4:	stp	x23, x24, [sp, #128]
  434ac8:	stp	x25, x26, [sp, #144]
  434acc:	stp	x27, x28, [sp, #160]
  434ad0:	mov	x21, x0
  434ad4:	str	x1, [sp, #208]
  434ad8:	mov	w23, w2
  434adc:	str	x3, [sp, #184]
  434ae0:	mov	x19, x4
  434ae4:	mov	x20, x5
  434ae8:	str	x6, [sp, #192]
  434aec:	str	x7, [sp, #200]
  434af0:	ldr	w0, [sp, #1096]
  434af4:	cbnz	w0, 434b04 <ferror@plt+0x32234>
  434af8:	str	wzr, [x7]
  434afc:	ldr	x0, [sp, #1072]
  434b00:	str	wzr, [x0]
  434b04:	add	x6, sp, #0x418
  434b08:	mov	x5, x20
  434b0c:	mov	x4, x19
  434b10:	mov	x3, #0x40                  	// #64
  434b14:	mov	x2, #0x0                   	// #0
  434b18:	mov	w1, w23
  434b1c:	mov	x0, x21
  434b20:	bl	436380 <ferror@plt+0x33ab0>
  434b24:	mov	w22, w0
  434b28:	mov	w26, w0
  434b2c:	cbnz	w0, 434ba8 <ferror@plt+0x322d8>
  434b30:	mov	x24, #0x0                   	// #0
  434b34:	mov	w27, #0x0                   	// #0
  434b38:	mov	w25, #0x0                   	// #0
  434b3c:	str	wzr, [sp, #180]
  434b40:	mov	w28, #0x0                   	// #0
  434b44:	cbnz	w28, 435c1c <ferror@plt+0x3334c>
  434b48:	cbnz	w22, 435c34 <ferror@plt+0x33364>
  434b4c:	cbnz	w25, 435c4c <ferror@plt+0x3337c>
  434b50:	cbnz	w27, 435c64 <ferror@plt+0x33394>
  434b54:	ldr	w0, [sp, #180]
  434b58:	cbnz	w0, 435c7c <ferror@plt+0x333ac>
  434b5c:	cbnz	w26, 435c94 <ferror@plt+0x333c4>
  434b60:	cbz	x24, 434b78 <ferror@plt+0x322a8>
  434b64:	mov	x3, x20
  434b68:	mov	x2, x19
  434b6c:	add	x1, x24, #0x18
  434b70:	mov	x0, x21
  434b74:	bl	436444 <ferror@plt+0x33b74>
  434b78:	mov	w25, #0x0                   	// #0
  434b7c:	cmn	w23, #0x1
  434b80:	b.ne	435cac <ferror@plt+0x333dc>  // b.any
  434b84:	mov	w0, w25
  434b88:	ldp	x19, x20, [sp, #96]
  434b8c:	ldp	x21, x22, [sp, #112]
  434b90:	ldp	x23, x24, [sp, #128]
  434b94:	ldp	x25, x26, [sp, #144]
  434b98:	ldp	x27, x28, [sp, #160]
  434b9c:	ldp	x29, x30, [sp, #80]
  434ba0:	add	sp, sp, #0x430
  434ba4:	ret
  434ba8:	ldr	x0, [sp, #1048]
  434bac:	ldp	x2, x3, [x0]
  434bb0:	add	x1, sp, #0x4d0
  434bb4:	stp	x2, x3, [x1, #-248]
  434bb8:	ldp	x2, x3, [x0, #16]
  434bbc:	stp	x2, x3, [x1, #-232]
  434bc0:	ldp	x2, x3, [x0, #32]
  434bc4:	stp	x2, x3, [x1, #-216]
  434bc8:	ldp	x2, x3, [x0, #48]
  434bcc:	stp	x2, x3, [x1, #-200]
  434bd0:	ldrb	w24, [x0, #4]
  434bd4:	ldrb	w1, [x0, #5]
  434bd8:	str	w1, [sp, #272]
  434bdc:	ldrb	w22, [x0, #6]
  434be0:	ldrh	w28, [x0, #16]
  434be4:	ldrh	w1, [x0, #18]
  434be8:	str	w1, [sp, #216]
  434bec:	ldr	x25, [x0, #40]
  434bf0:	ldr	w1, [x0, #48]
  434bf4:	str	w1, [sp, #224]
  434bf8:	ldrh	w26, [x0, #60]
  434bfc:	ldrh	w27, [x0, #62]
  434c00:	mov	x3, x20
  434c04:	mov	x2, x19
  434c08:	add	x1, sp, #0x418
  434c0c:	mov	x0, x21
  434c10:	bl	436444 <ferror@plt+0x33b74>
  434c14:	mov	w0, #0x457f                	// #17791
  434c18:	movk	w0, #0x464c, lsl #16
  434c1c:	ldr	w1, [sp, #984]
  434c20:	cmp	w1, w0
  434c24:	b.eq	434c48 <ferror@plt+0x32378>  // b.none
  434c28:	mov	w2, #0x0                   	// #0
  434c2c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  434c30:	add	x1, x1, #0xe60
  434c34:	mov	x0, x20
  434c38:	blr	x19
  434c3c:	mov	w26, #0x0                   	// #0
  434c40:	mov	w22, #0x0                   	// #0
  434c44:	b	434b30 <ferror@plt+0x32260>
  434c48:	cmp	w22, #0x1
  434c4c:	b.eq	434c70 <ferror@plt+0x323a0>  // b.none
  434c50:	mov	w2, #0x0                   	// #0
  434c54:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  434c58:	add	x1, x1, #0xe80
  434c5c:	mov	x0, x20
  434c60:	blr	x19
  434c64:	mov	w26, #0x0                   	// #0
  434c68:	mov	w22, #0x0                   	// #0
  434c6c:	b	434b30 <ferror@plt+0x32260>
  434c70:	cmp	w24, #0x2
  434c74:	b.eq	434c98 <ferror@plt+0x323c8>  // b.none
  434c78:	mov	w2, #0x0                   	// #0
  434c7c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  434c80:	add	x1, x1, #0xeb0
  434c84:	mov	x0, x20
  434c88:	blr	x19
  434c8c:	mov	w26, #0x0                   	// #0
  434c90:	mov	w22, #0x0                   	// #0
  434c94:	b	434b30 <ferror@plt+0x32260>
  434c98:	ldr	w0, [sp, #272]
  434c9c:	sub	w0, w0, #0x1
  434ca0:	and	w0, w0, #0xff
  434ca4:	cmp	w0, #0x1
  434ca8:	b.hi	434d98 <ferror@plt+0x324c8>  // b.pmore
  434cac:	ldr	w0, [sp, #1088]
  434cb0:	cmp	w0, #0x0
  434cb4:	ccmp	w28, #0x3, #0x0, ne  // ne = any
  434cb8:	b.eq	435cc0 <ferror@plt+0x333f0>  // b.none
  434cbc:	str	w26, [sp, #232]
  434cc0:	mov	w24, w27
  434cc4:	cmp	w26, #0x0
  434cc8:	mov	w0, #0xffff                	// #65535
  434ccc:	ccmp	w27, w0, #0x4, ne  // ne = any
  434cd0:	ccmp	x25, #0x0, #0x4, eq  // eq = none
  434cd4:	b.ne	434db8 <ferror@plt+0x324e8>  // b.any
  434cd8:	ldr	w27, [sp, #232]
  434cdc:	sub	w3, w27, #0x1
  434ce0:	add	x6, sp, #0x3c0
  434ce4:	mov	x5, x20
  434ce8:	mov	x4, x19
  434cec:	lsl	x3, x3, #6
  434cf0:	add	x2, x25, #0x40
  434cf4:	mov	w1, w23
  434cf8:	mov	x0, x21
  434cfc:	bl	436380 <ferror@plt+0x33ab0>
  434d00:	mov	w22, w0
  434d04:	mov	w26, w0
  434d08:	cbz	w0, 434b30 <ferror@plt+0x32260>
  434d0c:	ldr	x22, [sp, #960]
  434d10:	str	x22, [sp, #344]
  434d14:	sub	w0, w24, #0x1
  434d18:	add	x0, x22, x0, lsl #6
  434d1c:	ldr	x1, [x0, #32]
  434d20:	str	x1, [sp, #248]
  434d24:	add	x6, sp, #0x3a8
  434d28:	mov	x5, x20
  434d2c:	mov	x4, x19
  434d30:	mov	x3, x1
  434d34:	ldr	x2, [x0, #24]
  434d38:	mov	w1, w23
  434d3c:	mov	x0, x21
  434d40:	bl	436380 <ferror@plt+0x33ab0>
  434d44:	mov	w26, w0
  434d48:	cbnz	w0, 434e3c <ferror@plt+0x3256c>
  434d4c:	mov	w27, w0
  434d50:	mov	w25, w0
  434d54:	str	w0, [sp, #180]
  434d58:	mov	w22, w0
  434d5c:	mov	w28, w0
  434d60:	mov	x24, #0x0                   	// #0
  434d64:	mov	x3, x20
  434d68:	mov	x2, x19
  434d6c:	add	x1, sp, #0x3c0
  434d70:	mov	x0, x21
  434d74:	bl	436444 <ferror@plt+0x33b74>
  434d78:	cbz	w26, 434b44 <ferror@plt+0x32274>
  434d7c:	mov	x3, x20
  434d80:	mov	x2, x19
  434d84:	add	x1, sp, #0x3a8
  434d88:	mov	x0, x21
  434d8c:	bl	436444 <ferror@plt+0x33b74>
  434d90:	mov	w26, #0x0                   	// #0
  434d94:	b	434b44 <ferror@plt+0x32274>
  434d98:	mov	w2, #0x0                   	// #0
  434d9c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  434da0:	add	x1, x1, #0xed8
  434da4:	mov	x0, x20
  434da8:	blr	x19
  434dac:	mov	w26, #0x0                   	// #0
  434db0:	mov	w22, #0x0                   	// #0
  434db4:	b	434b30 <ferror@plt+0x32260>
  434db8:	add	x6, sp, #0x188
  434dbc:	mov	x5, x20
  434dc0:	mov	x4, x19
  434dc4:	mov	x3, #0x8                   	// #8
  434dc8:	mov	x2, x25
  434dcc:	mov	w1, w23
  434dd0:	mov	x0, x21
  434dd4:	bl	436380 <ferror@plt+0x33ab0>
  434dd8:	mov	w22, w0
  434ddc:	cbz	w0, 434e14 <ferror@plt+0x32544>
  434de0:	ldr	x0, [sp, #392]
  434de4:	cbnz	w26, 434e1c <ferror@plt+0x3254c>
  434de8:	ldr	w1, [x0, #32]
  434dec:	str	w1, [sp, #232]
  434df0:	mov	w1, #0xffff                	// #65535
  434df4:	cmp	w27, w1
  434df8:	b.eq	434e1c <ferror@plt+0x3254c>  // b.none
  434dfc:	mov	x3, x20
  434e00:	mov	x2, x19
  434e04:	add	x1, sp, #0x188
  434e08:	mov	x0, x21
  434e0c:	bl	436444 <ferror@plt+0x33b74>
  434e10:	b	434cd8 <ferror@plt+0x32408>
  434e14:	mov	w26, w0
  434e18:	b	434b30 <ferror@plt+0x32260>
  434e1c:	ldr	w24, [x0, #40]
  434e20:	ldr	w0, [sp, #232]
  434e24:	cmp	w24, w0
  434e28:	sub	w0, w24, #0x100
  434e2c:	mov	w1, #0xffff                	// #65535
  434e30:	ccmp	w24, w1, #0x0, cs  // cs = hs, nlast
  434e34:	csel	w24, w0, w24, hi  // hi = pmore
  434e38:	b	434dfc <ferror@plt+0x3252c>
  434e3c:	ldr	x0, [sp, #936]
  434e40:	str	x0, [sp, #256]
  434e44:	mov	x2, #0x140                 	// #320
  434e48:	mov	w1, #0x0                   	// #0
  434e4c:	add	x0, sp, #0x268
  434e50:	bl	402490 <memset@plt>
  434e54:	cmp	w27, #0x1
  434e58:	b.ls	435514 <ferror@plt+0x32c44>  // b.plast
  434e5c:	mov	x26, x22
  434e60:	mov	x24, #0x0                   	// #0
  434e64:	str	wzr, [sp, #360]
  434e68:	str	xzr, [sp, #328]
  434e6c:	str	xzr, [sp, #304]
  434e70:	mov	w27, #0x0                   	// #0
  434e74:	str	wzr, [sp, #324]
  434e78:	str	xzr, [sp, #312]
  434e7c:	mov	w25, #0x0                   	// #0
  434e80:	str	wzr, [sp, #364]
  434e84:	str	xzr, [sp, #352]
  434e88:	str	wzr, [sp, #180]
  434e8c:	mov	w22, #0x1                   	// #1
  434e90:	str	wzr, [sp, #240]
  434e94:	str	wzr, [sp, #320]
  434e98:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x3f094>
  434e9c:	add	x1, x0, #0xda0
  434ea0:	add	x0, sp, #0x268
  434ea4:	str	x0, [sp, #296]
  434ea8:	add	x0, sp, #0x1a8
  434eac:	str	x0, [sp, #368]
  434eb0:	add	x0, sp, #0x1c0
  434eb4:	str	x0, [sp, #376]
  434eb8:	str	x24, [sp, #336]
  434ebc:	str	x21, [sp, #264]
  434ec0:	str	w23, [sp, #276]
  434ec4:	str	x19, [sp, #280]
  434ec8:	str	x20, [sp, #288]
  434ecc:	ldr	w28, [sp, #1096]
  434ed0:	mov	x23, x1
  434ed4:	b	4350a0 <ferror@plt+0x327d0>
  434ed8:	str	w22, [sp, #320]
  434edc:	b	4350c0 <ferror@plt+0x327f0>
  434ee0:	ldr	x24, [sp, #336]
  434ee4:	ldr	x21, [sp, #264]
  434ee8:	ldr	w23, [sp, #276]
  434eec:	ldr	x19, [sp, #280]
  434ef0:	ldr	x20, [sp, #288]
  434ef4:	mov	w2, #0x0                   	// #0
  434ef8:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  434efc:	add	x1, x1, #0xf00
  434f00:	mov	x0, x20
  434f04:	blr	x19
  434f08:	mov	w22, #0x0                   	// #0
  434f0c:	mov	w28, #0x0                   	// #0
  434f10:	mov	w26, #0x1                   	// #1
  434f14:	b	434d64 <ferror@plt+0x32494>
  434f18:	sbfiz	x21, x19, #5, #32
  434f1c:	ldr	x0, [x24, #24]
  434f20:	ldr	x1, [sp, #296]
  434f24:	str	x0, [x1, x21]
  434f28:	ldr	x1, [x24, #32]
  434f2c:	add	x0, sp, #0x270
  434f30:	str	x1, [x0, x21]
  434f34:	ldr	x0, [x24, #8]
  434f38:	ubfx	w0, w0, #11, #1
  434f3c:	add	x1, sp, #0x280
  434f40:	str	w0, [x1, x21]
  434f44:	b	4350f8 <ferror@plt+0x32828>
  434f48:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  434f4c:	add	x1, x1, #0xf20
  434f50:	mov	x0, x20
  434f54:	bl	402620 <strcmp@plt>
  434f58:	mov	w19, w0
  434f5c:	str	wzr, [sp, #180]
  434f60:	cbnz	w0, 435110 <ferror@plt+0x32840>
  434f64:	add	x6, sp, #0x220
  434f68:	ldr	x5, [sp, #288]
  434f6c:	ldr	x4, [sp, #280]
  434f70:	ldr	x3, [x24, #32]
  434f74:	ldr	x2, [x24, #24]
  434f78:	ldr	w1, [sp, #276]
  434f7c:	ldr	x0, [sp, #264]
  434f80:	bl	436380 <ferror@plt+0x33ab0>
  434f84:	cbz	w0, 435ce8 <ferror@plt+0x33418>
  434f88:	ldr	x21, [sp, #544]
  434f8c:	ldr	w0, [x21, #8]
  434f90:	cmp	w0, #0x3
  434f94:	b.eq	434fd0 <ferror@plt+0x32700>  // b.none
  434f98:	ldr	w0, [sp, #1112]
  434f9c:	cbz	w0, 435014 <ferror@plt+0x32744>
  434fa0:	ldr	w0, [sp, #364]
  434fa4:	ldr	w1, [sp, #1112]
  434fa8:	cmp	w0, w1
  434fac:	b.ne	435d10 <ferror@plt+0x33440>  // b.any
  434fb0:	mov	w2, w0
  434fb4:	ldr	x1, [sp, #1104]
  434fb8:	ldr	x0, [sp, #352]
  434fbc:	bl	4025e0 <memcmp@plt>
  434fc0:	cbnz	w0, 435d3c <ferror@plt+0x3346c>
  434fc4:	mov	w0, #0x1                   	// #1
  434fc8:	str	w0, [sp, #180]
  434fcc:	b	435110 <ferror@plt+0x32840>
  434fd0:	ldr	w0, [x21]
  434fd4:	cmp	w0, #0x4
  434fd8:	b.ne	434f98 <ferror@plt+0x326c8>  // b.any
  434fdc:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  434fe0:	add	x1, x1, #0xf38
  434fe4:	add	x0, x21, #0xc
  434fe8:	bl	402620 <strcmp@plt>
  434fec:	cbnz	w0, 434f98 <ferror@plt+0x326c8>
  434ff0:	ldr	w0, [x21, #4]
  434ff4:	add	w1, w0, #0x10
  434ff8:	ldr	x2, [x24, #32]
  434ffc:	cmp	x2, x1
  435000:	b.hi	434f98 <ferror@plt+0x326c8>  // b.pmore
  435004:	add	x1, x21, #0x10
  435008:	str	x1, [sp, #352]
  43500c:	str	w0, [sp, #364]
  435010:	b	434f98 <ferror@plt+0x326c8>
  435014:	mov	w0, #0x1                   	// #1
  435018:	str	w0, [sp, #180]
  43501c:	b	435110 <ferror@plt+0x32840>
  435020:	add	x6, sp, #0x208
  435024:	ldr	x5, [sp, #288]
  435028:	ldr	x4, [sp, #280]
  43502c:	ldr	x3, [x24, #32]
  435030:	ldr	x2, [x24, #24]
  435034:	ldr	w1, [sp, #276]
  435038:	ldr	x0, [sp, #264]
  43503c:	bl	436380 <ferror@plt+0x33ab0>
  435040:	cbz	w0, 435d68 <ferror@plt+0x33498>
  435044:	ldr	x19, [sp, #520]
  435048:	ldr	x21, [x24, #32]
  43504c:	mov	x1, x21
  435050:	mov	x0, x19
  435054:	bl	402300 <strnlen@plt>
  435058:	add	x0, x0, #0x3
  43505c:	and	x0, x0, #0xfffffffffffffffc
  435060:	add	x1, x0, #0x4
  435064:	mov	w25, #0x1                   	// #1
  435068:	cmp	x21, x1
  43506c:	b.cc	435130 <ferror@plt+0x32860>  // b.lo, b.ul, b.last
  435070:	ldr	w0, [x19, x0]
  435074:	str	w0, [sp, #324]
  435078:	str	x19, [sp, #312]
  43507c:	b	435130 <ferror@plt+0x32860>
  435080:	ldr	w0, [sp, #216]
  435084:	cmp	w0, #0x15
  435088:	b.eq	4351a8 <ferror@plt+0x328d8>  // b.none
  43508c:	add	w22, w22, #0x1
  435090:	add	x26, x26, #0x40
  435094:	ldr	w0, [sp, #232]
  435098:	cmp	w0, w22
  43509c:	b.eq	435218 <ferror@plt+0x32948>  // b.none
  4350a0:	mov	x24, x26
  4350a4:	ldr	w0, [x26, #4]
  4350a8:	cmp	w0, #0x2
  4350ac:	b.eq	434ed8 <ferror@plt+0x32608>  // b.none
  4350b0:	cmp	w0, #0xb
  4350b4:	ldr	w0, [sp, #240]
  4350b8:	csel	w0, w0, w22, ne  // ne = any
  4350bc:	str	w0, [sp, #240]
  4350c0:	ldr	w20, [x24]
  4350c4:	ldr	x0, [sp, #248]
  4350c8:	cmp	x20, x0
  4350cc:	b.cs	434ee0 <ferror@plt+0x32610>  // b.hs, b.nlast
  4350d0:	ldr	x0, [sp, #256]
  4350d4:	add	x20, x0, x20
  4350d8:	mov	x19, #0x0                   	// #0
  4350dc:	ldr	x1, [x23, x19, lsl #3]
  4350e0:	mov	x0, x20
  4350e4:	bl	402620 <strcmp@plt>
  4350e8:	cbz	w0, 434f18 <ferror@plt+0x32648>
  4350ec:	add	x19, x19, #0x1
  4350f0:	cmp	x19, #0xa
  4350f4:	b.ne	4350dc <ferror@plt+0x3280c>  // b.any
  4350f8:	cmp	w28, #0x0
  4350fc:	ldr	x0, [sp, #1104]
  435100:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  435104:	ldr	w0, [sp, #180]
  435108:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  43510c:	b.eq	434f48 <ferror@plt+0x32678>  // b.none
  435110:	orr	w19, w28, w25
  435114:	cbnz	w19, 435130 <ferror@plt+0x32860>
  435118:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  43511c:	add	x1, x1, #0xf40
  435120:	mov	x0, x20
  435124:	bl	402620 <strcmp@plt>
  435128:	mov	w25, w19
  43512c:	cbz	w0, 435020 <ferror@plt+0x32750>
  435130:	cbnz	w27, 435080 <ferror@plt+0x327b0>
  435134:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  435138:	add	x1, x1, #0xf50
  43513c:	mov	x0, x20
  435140:	bl	402620 <strcmp@plt>
  435144:	cbnz	w0, 435080 <ferror@plt+0x327b0>
  435148:	add	x6, sp, #0x1f0
  43514c:	ldr	x5, [sp, #288]
  435150:	ldr	x4, [sp, #280]
  435154:	ldr	x3, [x24, #32]
  435158:	ldr	x2, [x24, #24]
  43515c:	ldr	w1, [sp, #276]
  435160:	ldr	x0, [sp, #264]
  435164:	bl	436380 <ferror@plt+0x33ab0>
  435168:	cbz	w0, 435d90 <ferror@plt+0x334c0>
  43516c:	ldr	x21, [sp, #496]
  435170:	str	x21, [sp, #304]
  435174:	ldr	x19, [x24, #32]
  435178:	mov	x1, x19
  43517c:	mov	x0, x21
  435180:	bl	402300 <strnlen@plt>
  435184:	mov	w27, #0x1                   	// #1
  435188:	cmp	x19, x0
  43518c:	b.ls	435080 <ferror@plt+0x327b0>  // b.plast
  435190:	add	x0, x0, #0x1
  435194:	add	x1, x21, x0
  435198:	str	x1, [sp, #328]
  43519c:	sub	w0, w19, w0
  4351a0:	str	w0, [sp, #360]
  4351a4:	b	435080 <ferror@plt+0x327b0>
  4351a8:	ldr	x0, [sp, #224]
  4351ac:	tbnz	w0, #1, 43508c <ferror@plt+0x327bc>
  4351b0:	ldr	w0, [x24, #4]
  4351b4:	cmp	w0, #0x1
  4351b8:	b.ne	43508c <ferror@plt+0x327bc>  // b.any
  4351bc:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  4351c0:	add	x1, x1, #0xf68
  4351c4:	mov	x0, x20
  4351c8:	bl	402620 <strcmp@plt>
  4351cc:	cbnz	w0, 43508c <ferror@plt+0x327bc>
  4351d0:	ldr	x6, [sp, #376]
  4351d4:	ldr	x5, [sp, #288]
  4351d8:	ldr	x4, [sp, #280]
  4351dc:	ldr	x3, [x24, #32]
  4351e0:	ldr	x2, [x24, #24]
  4351e4:	ldr	w1, [sp, #276]
  4351e8:	ldr	x0, [sp, #264]
  4351ec:	bl	436380 <ferror@plt+0x33ab0>
  4351f0:	cbz	w0, 435db8 <ferror@plt+0x334e8>
  4351f4:	ldr	x0, [x24, #16]
  4351f8:	str	x0, [sp, #424]
  4351fc:	ldr	x0, [sp, #448]
  435200:	str	x0, [sp, #432]
  435204:	ldr	x0, [x24, #32]
  435208:	str	x0, [sp, #440]
  43520c:	ldr	x0, [sp, #368]
  435210:	str	x0, [sp, #336]
  435214:	b	43508c <ferror@plt+0x327bc>
  435218:	ldr	x24, [sp, #336]
  43521c:	ldr	x21, [sp, #264]
  435220:	ldr	w23, [sp, #276]
  435224:	ldr	x19, [sp, #280]
  435228:	ldr	x20, [sp, #288]
  43522c:	ldr	w0, [sp, #320]
  435230:	cmp	w0, #0x0
  435234:	ldr	w1, [sp, #240]
  435238:	csel	w0, w0, w1, ne  // ne = any
  43523c:	cmp	w0, #0x0
  435240:	ldr	w1, [sp, #1096]
  435244:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  435248:	b.ne	435548 <ferror@plt+0x32c78>  // b.any
  43524c:	sub	w26, w0, #0x1
  435250:	ldr	x0, [sp, #344]
  435254:	add	x26, x0, x26, lsl #6
  435258:	ldr	w22, [x26, #40]
  43525c:	ldr	w0, [sp, #232]
  435260:	cmp	w0, w22
  435264:	b.hi	43528c <ferror@plt+0x329bc>  // b.pmore
  435268:	mov	w2, #0x0                   	// #0
  43526c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  435270:	add	x1, x1, #0xf70
  435274:	mov	x0, x20
  435278:	blr	x19
  43527c:	mov	w22, #0x0                   	// #0
  435280:	mov	w28, #0x0                   	// #0
  435284:	mov	w26, #0x1                   	// #1
  435288:	b	434d64 <ferror@plt+0x32494>
  43528c:	add	x6, sp, #0x250
  435290:	mov	x5, x20
  435294:	mov	x4, x19
  435298:	ldr	x3, [x26, #32]
  43529c:	ldr	x2, [x26, #24]
  4352a0:	mov	w1, w23
  4352a4:	mov	x0, x21
  4352a8:	bl	436380 <ferror@plt+0x33ab0>
  4352ac:	mov	w28, w0
  4352b0:	cbnz	w0, 4352c0 <ferror@plt+0x329f0>
  4352b4:	mov	w22, w0
  4352b8:	mov	w26, #0x1                   	// #1
  4352bc:	b	434d64 <ferror@plt+0x32494>
  4352c0:	sub	w22, w22, #0x1
  4352c4:	ldr	x0, [sp, #344]
  4352c8:	add	x0, x0, x22, lsl #6
  4352cc:	add	x6, sp, #0x238
  4352d0:	mov	x5, x20
  4352d4:	mov	x4, x19
  4352d8:	ldr	x3, [x0, #32]
  4352dc:	str	x0, [sp, #216]
  4352e0:	ldr	x2, [x0, #24]
  4352e4:	mov	w1, w23
  4352e8:	mov	x0, x21
  4352ec:	bl	436380 <ferror@plt+0x33ab0>
  4352f0:	mov	w22, w0
  4352f4:	cbnz	w0, 435304 <ferror@plt+0x32a34>
  4352f8:	mov	w28, #0x1                   	// #1
  4352fc:	mov	w26, w28
  435300:	b	434d64 <ferror@plt+0x32494>
  435304:	mov	x3, x20
  435308:	mov	x2, x19
  43530c:	mov	x1, #0x18                  	// #24
  435310:	mov	x0, x21
  435314:	bl	4329cc <ferror@plt+0x300fc>
  435318:	mov	x28, x0
  43531c:	cbz	x0, 435ddc <ferror@plt+0x3350c>
  435320:	ldr	x22, [sp, #592]
  435324:	ldr	x0, [x26, #32]
  435328:	ldr	x2, [sp, #568]
  43532c:	str	x2, [sp, #232]
  435330:	ldr	x1, [sp, #216]
  435334:	ldr	x1, [x1, #32]
  435338:	str	x1, [sp, #240]
  43533c:	mov	x1, #0x18                  	// #24
  435340:	udiv	x1, x0, x1
  435344:	str	x1, [sp, #216]
  435348:	cmp	x0, #0x17
  43534c:	b.ls	435ea0 <ferror@plt+0x335d0>  // b.plast
  435350:	mov	x1, x22
  435354:	mov	x2, #0x0                   	// #0
  435358:	mov	x3, #0x0                   	// #0
  43535c:	b	435374 <ferror@plt+0x32aa4>
  435360:	add	x2, x2, #0x1
  435364:	add	x1, x1, #0x18
  435368:	ldr	x0, [sp, #216]
  43536c:	cmp	x0, x2
  435370:	b.ls	435398 <ferror@plt+0x32ac8>  // b.plast
  435374:	ldrb	w0, [x1, #4]
  435378:	and	w0, w0, #0xf
  43537c:	sub	w0, w0, #0x1
  435380:	cmp	w0, #0x1
  435384:	b.hi	435360 <ferror@plt+0x32a90>  // b.pmore
  435388:	ldrh	w0, [x1, #6]
  43538c:	cbz	w0, 435360 <ferror@plt+0x32a90>
  435390:	add	x3, x3, #0x1
  435394:	b	435360 <ferror@plt+0x32a90>
  435398:	str	x3, [sp, #224]
  43539c:	mov	x0, #0x18                  	// #24
  4353a0:	mul	x0, x3, x0
  4353a4:	str	x0, [sp, #248]
  4353a8:	mov	x3, x20
  4353ac:	mov	x2, x19
  4353b0:	mov	x1, x0
  4353b4:	mov	x0, x21
  4353b8:	bl	4329cc <ferror@plt+0x300fc>
  4353bc:	mov	x26, x0
  4353c0:	cbz	x0, 435400 <ferror@plt+0x32b30>
  4353c4:	mov	x1, #0x0                   	// #0
  4353c8:	mov	w2, #0x0                   	// #0
  4353cc:	ldr	x6, [sp, #216]
  4353d0:	b	435454 <ferror@plt+0x32b84>
  4353d4:	mov	w2, #0x0                   	// #0
  4353d8:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  4353dc:	add	x1, x1, #0xfa0
  4353e0:	mov	x0, x20
  4353e4:	blr	x19
  4353e8:	mov	x4, x20
  4353ec:	mov	x3, x19
  4353f0:	ldr	x2, [sp, #248]
  4353f4:	mov	x1, x26
  4353f8:	mov	x0, x21
  4353fc:	bl	432920 <ferror@plt+0x30050>
  435400:	mov	x4, x20
  435404:	mov	x3, x19
  435408:	mov	x2, #0x18                  	// #24
  43540c:	mov	x1, x28
  435410:	mov	x0, x21
  435414:	bl	432920 <ferror@plt+0x30050>
  435418:	mov	w22, #0x1                   	// #1
  43541c:	mov	w28, w22
  435420:	mov	w26, w22
  435424:	b	434d64 <ferror@plt+0x32494>
  435428:	ldr	x0, [x22, #8]
  43542c:	ldr	x3, [sp, #184]
  435430:	add	x0, x3, x0
  435434:	str	x0, [x5, #8]
  435438:	ldr	x0, [x22, #16]
  43543c:	str	x0, [x5, #16]
  435440:	add	w2, w2, #0x1
  435444:	add	x1, x1, #0x1
  435448:	add	x22, x22, #0x18
  43544c:	cmp	x6, x1
  435450:	b.ls	435ec0 <ferror@plt+0x335f0>  // b.plast
  435454:	ldrb	w0, [x22, #4]
  435458:	and	w0, w0, #0xf
  43545c:	sub	w0, w0, #0x1
  435460:	cmp	w0, #0x1
  435464:	b.hi	435444 <ferror@plt+0x32b74>  // b.pmore
  435468:	ldrh	w0, [x22, #6]
  43546c:	cbz	w0, 435444 <ferror@plt+0x32b74>
  435470:	ldr	w3, [x22]
  435474:	ldr	x0, [sp, #240]
  435478:	cmp	x0, x3
  43547c:	b.ls	4353d4 <ferror@plt+0x32b04>  // b.plast
  435480:	ubfiz	x0, x2, #1, #32
  435484:	add	x0, x0, w2, uxtw
  435488:	add	x5, x26, x0, lsl #3
  43548c:	ldr	x4, [sp, #232]
  435490:	add	x3, x4, x3
  435494:	str	x3, [x26, x0, lsl #3]
  435498:	cbz	x24, 435428 <ferror@plt+0x32b58>
  43549c:	ldr	x0, [x22, #8]
  4354a0:	ldr	x3, [x24]
  4354a4:	cmp	x0, x3
  4354a8:	b.cc	435428 <ferror@plt+0x32b58>  // b.lo, b.ul, b.last
  4354ac:	ldr	x4, [x24, #16]
  4354b0:	add	x4, x3, x4
  4354b4:	cmp	x0, x4
  4354b8:	b.cs	435428 <ferror@plt+0x32b58>  // b.hs, b.nlast
  4354bc:	sub	x0, x0, x3
  4354c0:	ldr	x3, [x24, #8]
  4354c4:	ldr	x0, [x3, x0]
  4354c8:	b	43542c <ferror@plt+0x32b5c>
  4354cc:	add	x1, x21, #0x30
  4354d0:	ldr	x0, [x21, #48]
  4354d4:	b	4354e0 <ferror@plt+0x32c10>
  4354d8:	mov	x1, x0
  4354dc:	ldr	x0, [x0]
  4354e0:	cbnz	x0, 4354d8 <ferror@plt+0x32c08>
  4354e4:	str	x28, [x1]
  4354e8:	mov	w22, #0x1                   	// #1
  4354ec:	b	43554c <ferror@plt+0x32c7c>
  4354f0:	ldxr	x1, [x0]
  4354f4:	cbnz	x1, 435500 <ferror@plt+0x32c30>
  4354f8:	stlxr	w3, x28, [x0]
  4354fc:	cbnz	w3, 4354f0 <ferror@plt+0x32c20>
  435500:	cmp	x1, #0x0
  435504:	dmb	ish
  435508:	b.ne	435f14 <ferror@plt+0x33644>  // b.any
  43550c:	mov	w22, #0x1                   	// #1
  435510:	b	43554c <ferror@plt+0x32c7c>
  435514:	mov	x24, #0x0                   	// #0
  435518:	str	wzr, [sp, #360]
  43551c:	str	xzr, [sp, #328]
  435520:	str	xzr, [sp, #304]
  435524:	mov	w27, #0x0                   	// #0
  435528:	str	wzr, [sp, #324]
  43552c:	str	xzr, [sp, #312]
  435530:	mov	w25, #0x0                   	// #0
  435534:	str	wzr, [sp, #364]
  435538:	str	xzr, [sp, #352]
  43553c:	str	wzr, [sp, #180]
  435540:	mov	w22, #0x0                   	// #0
  435544:	b	43554c <ferror@plt+0x32c7c>
  435548:	mov	w22, #0x0                   	// #0
  43554c:	mov	x3, x20
  435550:	mov	x2, x19
  435554:	add	x1, sp, #0x3c0
  435558:	mov	x0, x21
  43555c:	bl	436444 <ferror@plt+0x33b74>
  435560:	mov	x3, x20
  435564:	mov	x2, x19
  435568:	add	x1, sp, #0x3a8
  43556c:	mov	x0, x21
  435570:	bl	436444 <ferror@plt+0x33b74>
  435574:	ldr	x0, [sp, #352]
  435578:	cbz	x0, 435684 <ferror@plt+0x32db4>
  43557c:	ldr	w1, [sp, #364]
  435580:	mov	w28, w1
  435584:	ubfiz	x0, x1, #1, #32
  435588:	add	x1, x0, #0x21
  43558c:	str	x1, [sp, #216]
  435590:	mov	x3, x20
  435594:	mov	x2, x19
  435598:	mov	x0, x21
  43559c:	bl	4329cc <ferror@plt+0x300fc>
  4355a0:	mov	x26, x0
  4355a4:	cbz	x0, 435684 <ferror@plt+0x32db4>
  4355a8:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1c094>
  4355ac:	add	x0, x0, #0xfc8
  4355b0:	ldp	x2, x3, [x0]
  4355b4:	stp	x2, x3, [x26]
  4355b8:	ldr	x1, [x0, #16]
  4355bc:	str	x1, [x26, #16]
  4355c0:	ldrb	w0, [x0, #24]
  4355c4:	strb	w0, [x26, #24]
  4355c8:	add	x1, x26, #0x19
  4355cc:	cbz	x28, 435634 <ferror@plt+0x32d64>
  4355d0:	mov	x2, #0x0                   	// #0
  4355d4:	mov	w6, #0x2f                  	// #47
  4355d8:	ldr	x7, [sp, #352]
  4355dc:	b	4355f4 <ferror@plt+0x32d24>
  4355e0:	strb	w6, [x1, #2]
  4355e4:	add	x1, x1, #0x3
  4355e8:	add	x2, x2, #0x1
  4355ec:	cmp	x28, x2
  4355f0:	b.eq	435634 <ferror@plt+0x32d64>  // b.none
  4355f4:	ldrb	w0, [x7, x2]
  4355f8:	lsr	w4, w0, #4
  4355fc:	add	w5, w4, #0x30
  435600:	add	w3, w4, #0x57
  435604:	cmp	w4, #0x9
  435608:	csel	w3, w3, w5, hi  // hi = pmore
  43560c:	strb	w3, [x1]
  435610:	and	w0, w0, #0xf
  435614:	add	w4, w0, #0x30
  435618:	add	w3, w0, #0x57
  43561c:	cmp	w0, #0x9
  435620:	csel	w0, w3, w4, hi  // hi = pmore
  435624:	strb	w0, [x1, #1]
  435628:	cbz	x2, 4355e0 <ferror@plt+0x32d10>
  43562c:	add	x1, x1, #0x2
  435630:	b	4355e8 <ferror@plt+0x32d18>
  435634:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1c094>
  435638:	add	x0, x0, #0xfe8
  43563c:	ldr	w2, [x0]
  435640:	str	w2, [x1]
  435644:	ldrh	w0, [x0, #4]
  435648:	strh	w0, [x1, #4]
  43564c:	strb	wzr, [x1, #6]
  435650:	add	x3, sp, #0x188
  435654:	mov	x2, x20
  435658:	mov	x1, x19
  43565c:	mov	x0, x26
  435660:	bl	432fcc <ferror@plt+0x306fc>
  435664:	mov	w28, w0
  435668:	mov	x4, x20
  43566c:	mov	x3, x19
  435670:	ldr	x2, [sp, #216]
  435674:	mov	x1, x26
  435678:	mov	x0, x21
  43567c:	bl	432920 <ferror@plt+0x30050>
  435680:	tbz	w28, #31, 435724 <ferror@plt+0x32e54>
  435684:	ldr	w0, [sp, #180]
  435688:	cbnz	w0, 4357e8 <ferror@plt+0x32f18>
  43568c:	cbz	x24, 4356a4 <ferror@plt+0x32dd4>
  435690:	mov	x3, x20
  435694:	mov	x2, x19
  435698:	add	x1, x24, #0x18
  43569c:	mov	x0, x21
  4356a0:	bl	436444 <ferror@plt+0x33b74>
  4356a4:	ldr	x0, [sp, #312]
  4356a8:	cbz	x0, 4356d0 <ferror@plt+0x32e00>
  4356ac:	mov	x5, x20
  4356b0:	mov	x4, x19
  4356b4:	ldr	w3, [sp, #324]
  4356b8:	mov	x2, x0
  4356bc:	ldr	x1, [sp, #208]
  4356c0:	mov	x0, x21
  4356c4:	bl	4346dc <ferror@plt+0x31e0c>
  4356c8:	mov	w24, w0
  4356cc:	tbz	w0, #31, 435800 <ferror@plt+0x32f30>
  4356d0:	cbnz	w25, 4358a8 <ferror@plt+0x32fd8>
  4356d4:	str	xzr, [sp, #416]
  4356d8:	ldr	x0, [sp, #304]
  4356dc:	cbz	x0, 435708 <ferror@plt+0x32e38>
  4356e0:	mov	x5, x20
  4356e4:	mov	x4, x19
  4356e8:	mov	w3, #0x0                   	// #0
  4356ec:	mov	x2, x0
  4356f0:	ldr	x25, [sp, #208]
  4356f4:	mov	x1, x25
  4356f8:	mov	x0, x21
  4356fc:	bl	4346dc <ferror@plt+0x31e0c>
  435700:	mov	w24, w0
  435704:	tbz	w0, #31, 4358c0 <ferror@plt+0x32ff0>
  435708:	cbnz	w27, 435940 <ferror@plt+0x33070>
  43570c:	add	x24, sp, #0x268
  435710:	add	x4, x24, #0x140
  435714:	mov	x0, x24
  435718:	mov	x3, #0x0                   	// #0
  43571c:	mov	x27, #0x0                   	// #0
  435720:	b	435978 <ferror@plt+0x330a8>
  435724:	mov	x3, x20
  435728:	mov	x2, x19
  43572c:	add	x1, sp, #0x220
  435730:	mov	x0, x21
  435734:	bl	436444 <ferror@plt+0x33b74>
  435738:	cbnz	w25, 4357a4 <ferror@plt+0x32ed4>
  43573c:	cbnz	w27, 4357bc <ferror@plt+0x32eec>
  435740:	str	wzr, [sp, #40]
  435744:	str	xzr, [sp, #32]
  435748:	mov	w0, #0x1                   	// #1
  43574c:	str	w0, [sp, #24]
  435750:	str	wzr, [sp, #16]
  435754:	str	xzr, [sp, #8]
  435758:	ldr	x0, [sp, #1072]
  43575c:	str	x0, [sp]
  435760:	ldr	x7, [sp, #200]
  435764:	ldr	x6, [sp, #192]
  435768:	mov	x5, x20
  43576c:	mov	x4, x19
  435770:	ldr	x3, [sp, #184]
  435774:	mov	w2, w28
  435778:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  43577c:	add	x1, x1, #0x710
  435780:	mov	x0, x21
  435784:	bl	434ab0 <ferror@plt+0x321e0>
  435788:	mov	w25, w0
  43578c:	tbnz	w0, #31, 4357d4 <ferror@plt+0x32f04>
  435790:	mov	x2, x20
  435794:	mov	x1, x19
  435798:	mov	w0, w23
  43579c:	bl	433080 <ferror@plt+0x307b0>
  4357a0:	b	434b84 <ferror@plt+0x322b4>
  4357a4:	mov	x3, x20
  4357a8:	mov	x2, x19
  4357ac:	add	x1, sp, #0x208
  4357b0:	mov	x0, x21
  4357b4:	bl	436444 <ferror@plt+0x33b74>
  4357b8:	b	43573c <ferror@plt+0x32e6c>
  4357bc:	mov	x3, x20
  4357c0:	mov	x2, x19
  4357c4:	add	x1, sp, #0x1f0
  4357c8:	mov	x0, x21
  4357cc:	bl	436444 <ferror@plt+0x33b74>
  4357d0:	b	435740 <ferror@plt+0x32e70>
  4357d4:	mov	x2, x20
  4357d8:	mov	x1, x19
  4357dc:	mov	w0, w28
  4357e0:	bl	433080 <ferror@plt+0x307b0>
  4357e4:	b	434b84 <ferror@plt+0x322b4>
  4357e8:	mov	x3, x20
  4357ec:	mov	x2, x19
  4357f0:	add	x1, sp, #0x220
  4357f4:	mov	x0, x21
  4357f8:	bl	436444 <ferror@plt+0x33b74>
  4357fc:	b	43568c <ferror@plt+0x32dbc>
  435800:	mov	x3, x20
  435804:	mov	x2, x19
  435808:	add	x1, sp, #0x208
  43580c:	mov	x0, x21
  435810:	bl	436444 <ferror@plt+0x33b74>
  435814:	cbnz	w27, 43587c <ferror@plt+0x32fac>
  435818:	str	wzr, [sp, #40]
  43581c:	str	xzr, [sp, #32]
  435820:	mov	w0, #0x1                   	// #1
  435824:	str	w0, [sp, #24]
  435828:	str	wzr, [sp, #16]
  43582c:	str	xzr, [sp, #8]
  435830:	ldr	x0, [sp, #1072]
  435834:	str	x0, [sp]
  435838:	ldr	x7, [sp, #200]
  43583c:	ldr	x6, [sp, #192]
  435840:	mov	x5, x20
  435844:	mov	x4, x19
  435848:	ldr	x3, [sp, #184]
  43584c:	mov	w2, w24
  435850:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  435854:	add	x1, x1, #0x710
  435858:	mov	x0, x21
  43585c:	bl	434ab0 <ferror@plt+0x321e0>
  435860:	mov	w25, w0
  435864:	tbnz	w0, #31, 435894 <ferror@plt+0x32fc4>
  435868:	mov	x2, x20
  43586c:	mov	x1, x19
  435870:	mov	w0, w23
  435874:	bl	433080 <ferror@plt+0x307b0>
  435878:	b	434b84 <ferror@plt+0x322b4>
  43587c:	mov	x3, x20
  435880:	mov	x2, x19
  435884:	add	x1, sp, #0x1f0
  435888:	mov	x0, x21
  43588c:	bl	436444 <ferror@plt+0x33b74>
  435890:	b	435818 <ferror@plt+0x32f48>
  435894:	mov	x2, x20
  435898:	mov	x1, x19
  43589c:	mov	w0, w24
  4358a0:	bl	433080 <ferror@plt+0x307b0>
  4358a4:	b	434b84 <ferror@plt+0x322b4>
  4358a8:	mov	x3, x20
  4358ac:	mov	x2, x19
  4358b0:	add	x1, sp, #0x208
  4358b4:	mov	x0, x21
  4358b8:	bl	436444 <ferror@plt+0x33b74>
  4358bc:	b	4356d4 <ferror@plt+0x32e04>
  4358c0:	ldr	w0, [sp, #360]
  4358c4:	str	w0, [sp, #40]
  4358c8:	ldr	x0, [sp, #328]
  4358cc:	str	x0, [sp, #32]
  4358d0:	mov	w0, #0x1                   	// #1
  4358d4:	str	w0, [sp, #24]
  4358d8:	str	wzr, [sp, #16]
  4358dc:	add	x0, sp, #0x1a0
  4358e0:	str	x0, [sp, #8]
  4358e4:	ldr	x0, [sp, #1072]
  4358e8:	str	x0, [sp]
  4358ec:	ldr	x7, [sp, #200]
  4358f0:	ldr	x6, [sp, #192]
  4358f4:	mov	x5, x20
  4358f8:	mov	x4, x19
  4358fc:	ldr	x3, [sp, #184]
  435900:	mov	w2, w24
  435904:	mov	x1, x25
  435908:	mov	x0, x21
  43590c:	bl	434ab0 <ferror@plt+0x321e0>
  435910:	mov	w25, w0
  435914:	mov	x3, x20
  435918:	mov	x2, x19
  43591c:	add	x1, sp, #0x1f0
  435920:	mov	x0, x21
  435924:	bl	436444 <ferror@plt+0x33b74>
  435928:	tbz	w25, #31, 43570c <ferror@plt+0x32e3c>
  43592c:	mov	x2, x20
  435930:	mov	x1, x19
  435934:	mov	w0, w24
  435938:	bl	433080 <ferror@plt+0x307b0>
  43593c:	b	434b84 <ferror@plt+0x322b4>
  435940:	mov	x3, x20
  435944:	mov	x2, x19
  435948:	add	x1, sp, #0x1f0
  43594c:	mov	x0, x21
  435950:	bl	436444 <ferror@plt+0x33b74>
  435954:	b	43570c <ferror@plt+0x32e3c>
  435958:	ldr	x27, [x2]
  43595c:	ldr	x2, [x2]
  435960:	add	x1, x1, x2
  435964:	cmp	x3, x1
  435968:	csel	x3, x3, x1, ge  // ge = tcont
  43596c:	add	x0, x0, #0x20
  435970:	cmp	x4, x0
  435974:	b.eq	435998 <ferror@plt+0x330c8>  // b.none
  435978:	mov	x2, x0
  43597c:	ldr	x1, [x0, #8]
  435980:	cbz	x1, 43596c <ferror@plt+0x3309c>
  435984:	cbz	x27, 435958 <ferror@plt+0x33088>
  435988:	ldr	x5, [x0]
  43598c:	cmp	x5, x27
  435990:	b.ge	43595c <ferror@plt+0x3308c>  // b.tcont
  435994:	b	435958 <ferror@plt+0x33088>
  435998:	cmp	x27, #0x0
  43599c:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  4359a0:	b.ne	4359c4 <ferror@plt+0x330f4>  // b.any
  4359a4:	mov	x2, x20
  4359a8:	mov	x1, x19
  4359ac:	mov	w0, w23
  4359b0:	bl	433080 <ferror@plt+0x307b0>
  4359b4:	mov	w26, w0
  4359b8:	cbz	w0, 434b30 <ferror@plt+0x32260>
  4359bc:	mov	w25, #0x1                   	// #1
  4359c0:	b	434b84 <ferror@plt+0x322b4>
  4359c4:	add	x6, sp, #0x1d8
  4359c8:	mov	x5, x20
  4359cc:	mov	x4, x19
  4359d0:	sub	x3, x3, x27
  4359d4:	mov	x2, x27
  4359d8:	mov	w1, w23
  4359dc:	mov	x0, x21
  4359e0:	bl	436380 <ferror@plt+0x33ab0>
  4359e4:	mov	w26, w0
  4359e8:	cbz	w0, 434b30 <ferror@plt+0x32260>
  4359ec:	mov	x2, x20
  4359f0:	mov	x1, x19
  4359f4:	mov	w0, w23
  4359f8:	bl	433080 <ferror@plt+0x307b0>
  4359fc:	cbz	w0, 435cc8 <ferror@plt+0x333f8>
  435a00:	ldr	x3, [sp, #472]
  435a04:	mov	x0, x24
  435a08:	mov	w2, #0x1                   	// #1
  435a0c:	mov	w25, #0x0                   	// #0
  435a10:	b	435a48 <ferror@plt+0x33178>
  435a14:	ldr	x1, [x0]
  435a18:	sub	x1, x1, x27
  435a1c:	add	x1, x3, x1
  435a20:	str	x1, [x0, #16]
  435a24:	sub	w1, w2, #0x1
  435a28:	cmp	w1, #0x4
  435a2c:	b.hi	435a38 <ferror@plt+0x33168>  // b.pmore
  435a30:	add	w25, w25, #0x1
  435a34:	b	435a40 <ferror@plt+0x33170>
  435a38:	cmp	w2, #0x9
  435a3c:	b.hi	435a58 <ferror@plt+0x33188>  // b.pmore
  435a40:	add	x0, x0, #0x20
  435a44:	add	w2, w2, #0x1
  435a48:	ldr	x1, [x0, #8]
  435a4c:	cbnz	x1, 435a14 <ferror@plt+0x33144>
  435a50:	str	xzr, [x0, #16]
  435a54:	b	435a38 <ferror@plt+0x33168>
  435a58:	mov	x26, x24
  435a5c:	mov	w28, #0x5                   	// #5
  435a60:	mov	x23, #0x0                   	// #0
  435a64:	add	x0, sp, #0x188
  435a68:	str	x0, [sp, #200]
  435a6c:	add	x0, sp, #0x180
  435a70:	str	x0, [sp, #208]
  435a74:	str	w22, [sp, #180]
  435a78:	b	435acc <ferror@plt+0x331fc>
  435a7c:	str	xzr, [sp, #384]
  435a80:	str	xzr, [sp, #392]
  435a84:	ldr	x7, [sp, #200]
  435a88:	ldr	x6, [sp, #208]
  435a8c:	mov	x5, x20
  435a90:	mov	x4, x19
  435a94:	mov	x3, x23
  435a98:	mov	x2, x22
  435a9c:	ldr	x1, [x27, #176]
  435aa0:	mov	x0, x21
  435aa4:	bl	4344a8 <ferror@plt+0x31bd8>
  435aa8:	cbz	w0, 435b00 <ferror@plt+0x33230>
  435aac:	ldr	x0, [sp, #384]
  435ab0:	str	x0, [x27, #16]
  435ab4:	ldr	x0, [sp, #392]
  435ab8:	str	x0, [x27, #8]
  435abc:	str	wzr, [x27, #24]
  435ac0:	add	x26, x26, #0x20
  435ac4:	subs	w28, w28, #0x1
  435ac8:	b.eq	435b10 <ferror@plt+0x33240>  // b.none
  435acc:	mov	x27, x26
  435ad0:	ldr	x0, [x26, #8]
  435ad4:	cbnz	x0, 435ac0 <ferror@plt+0x331f0>
  435ad8:	ldr	x22, [x26, #168]
  435adc:	cbz	x22, 435ac0 <ferror@plt+0x331f0>
  435ae0:	cbnz	x23, 435a7c <ferror@plt+0x331ac>
  435ae4:	mov	x3, x20
  435ae8:	mov	x2, x19
  435aec:	mov	x1, #0x13b4                	// #5044
  435af0:	mov	x0, x21
  435af4:	bl	4329cc <ferror@plt+0x300fc>
  435af8:	mov	x23, x0
  435afc:	cbnz	x0, 435a7c <ferror@plt+0x331ac>
  435b00:	ldr	w22, [sp, #180]
  435b04:	mov	w26, #0x1                   	// #1
  435b08:	mov	w23, #0xffffffff            	// #-1
  435b0c:	b	434b30 <ferror@plt+0x32260>
  435b10:	ldr	w22, [sp, #180]
  435b14:	mov	w0, #0x5                   	// #5
  435b18:	str	w0, [sp, #200]
  435b1c:	str	w22, [sp, #180]
  435b20:	b	435e18 <ferror@plt+0x33548>
  435b24:	mov	x3, x20
  435b28:	mov	x2, x19
  435b2c:	mov	x1, #0x13b4                	// #5044
  435b30:	mov	x0, x21
  435b34:	bl	4329cc <ferror@plt+0x300fc>
  435b38:	mov	x23, x0
  435b3c:	cbnz	x0, 435e30 <ferror@plt+0x33560>
  435b40:	ldr	w22, [sp, #180]
  435b44:	mov	w26, #0x1                   	// #1
  435b48:	mov	w23, #0xffffffff            	// #-1
  435b4c:	b	434b30 <ferror@plt+0x32260>
  435b50:	ldr	w22, [sp, #180]
  435b54:	cbz	x23, 435b70 <ferror@plt+0x332a0>
  435b58:	mov	x4, x20
  435b5c:	mov	x3, x19
  435b60:	mov	x2, #0x13b4                	// #5044
  435b64:	mov	x1, x23
  435b68:	mov	x0, x21
  435b6c:	bl	432920 <ferror@plt+0x30050>
  435b70:	cbz	w25, 435c00 <ferror@plt+0x33330>
  435b74:	mov	w26, #0x1                   	// #1
  435b78:	ldr	x0, [sp, #1080]
  435b7c:	str	x0, [sp, #72]
  435b80:	ldr	x0, [sp, #192]
  435b84:	str	x0, [sp, #64]
  435b88:	str	x20, [sp, #56]
  435b8c:	str	x19, [sp, #48]
  435b90:	ldr	x0, [sp, #416]
  435b94:	str	x0, [sp, #40]
  435b98:	ldr	w0, [sp, #272]
  435b9c:	cmp	w0, #0x2
  435ba0:	cset	w0, eq  // eq = none
  435ba4:	str	w0, [sp, #32]
  435ba8:	ldr	x0, [sp, #752]
  435bac:	str	x0, [sp, #24]
  435bb0:	ldr	x0, [sp, #760]
  435bb4:	str	x0, [sp, #16]
  435bb8:	ldr	x0, [sp, #720]
  435bbc:	str	x0, [sp, #8]
  435bc0:	ldr	x0, [sp, #728]
  435bc4:	str	x0, [sp]
  435bc8:	ldr	x7, [sp, #688]
  435bcc:	ldr	x6, [sp, #696]
  435bd0:	ldr	x5, [sp, #656]
  435bd4:	ldr	x4, [sp, #664]
  435bd8:	ldr	x3, [sp, #624]
  435bdc:	ldr	x2, [sp, #632]
  435be0:	ldr	x1, [sp, #184]
  435be4:	mov	x0, x21
  435be8:	bl	4397ec <ferror@plt+0x36f1c>
  435bec:	cbz	w0, 435ce0 <ferror@plt+0x33410>
  435bf0:	mov	w25, #0x1                   	// #1
  435bf4:	ldr	x0, [sp, #1072]
  435bf8:	str	w25, [x0]
  435bfc:	b	434b84 <ferror@plt+0x322b4>
  435c00:	mov	x3, x20
  435c04:	mov	x2, x19
  435c08:	add	x1, sp, #0x1d8
  435c0c:	mov	x0, x21
  435c10:	bl	436444 <ferror@plt+0x33b74>
  435c14:	mov	w26, #0x0                   	// #0
  435c18:	b	435b78 <ferror@plt+0x332a8>
  435c1c:	mov	x3, x20
  435c20:	mov	x2, x19
  435c24:	add	x1, sp, #0x250
  435c28:	mov	x0, x21
  435c2c:	bl	436444 <ferror@plt+0x33b74>
  435c30:	b	434b48 <ferror@plt+0x32278>
  435c34:	mov	x3, x20
  435c38:	mov	x2, x19
  435c3c:	add	x1, sp, #0x238
  435c40:	mov	x0, x21
  435c44:	bl	436444 <ferror@plt+0x33b74>
  435c48:	b	434b4c <ferror@plt+0x3227c>
  435c4c:	mov	x3, x20
  435c50:	mov	x2, x19
  435c54:	add	x1, sp, #0x208
  435c58:	mov	x0, x21
  435c5c:	bl	436444 <ferror@plt+0x33b74>
  435c60:	b	434b50 <ferror@plt+0x32280>
  435c64:	mov	x3, x20
  435c68:	mov	x2, x19
  435c6c:	add	x1, sp, #0x1f0
  435c70:	mov	x0, x21
  435c74:	bl	436444 <ferror@plt+0x33b74>
  435c78:	b	434b54 <ferror@plt+0x32284>
  435c7c:	mov	x3, x20
  435c80:	mov	x2, x19
  435c84:	add	x1, sp, #0x220
  435c88:	mov	x0, x21
  435c8c:	bl	436444 <ferror@plt+0x33b74>
  435c90:	b	434b5c <ferror@plt+0x3228c>
  435c94:	mov	x3, x20
  435c98:	mov	x2, x19
  435c9c:	add	x1, sp, #0x1d8
  435ca0:	mov	x0, x21
  435ca4:	bl	436444 <ferror@plt+0x33b74>
  435ca8:	b	434b60 <ferror@plt+0x32290>
  435cac:	mov	x2, x20
  435cb0:	mov	x1, x19
  435cb4:	mov	w0, w23
  435cb8:	bl	433080 <ferror@plt+0x307b0>
  435cbc:	b	434b84 <ferror@plt+0x322b4>
  435cc0:	mov	w25, #0xffffffff            	// #-1
  435cc4:	b	434b84 <ferror@plt+0x322b4>
  435cc8:	mov	w26, #0x1                   	// #1
  435ccc:	b	434b30 <ferror@plt+0x32260>
  435cd0:	ldr	w22, [sp, #180]
  435cd4:	mov	w26, #0x1                   	// #1
  435cd8:	mov	w23, #0xffffffff            	// #-1
  435cdc:	b	434b30 <ferror@plt+0x32260>
  435ce0:	mov	w23, #0xffffffff            	// #-1
  435ce4:	b	434b30 <ferror@plt+0x32260>
  435ce8:	mov	w22, w0
  435cec:	ldr	x24, [sp, #336]
  435cf0:	ldr	x21, [sp, #264]
  435cf4:	ldr	w23, [sp, #276]
  435cf8:	ldr	x19, [sp, #280]
  435cfc:	ldr	x20, [sp, #288]
  435d00:	str	w0, [sp, #180]
  435d04:	mov	w28, w0
  435d08:	mov	w26, #0x1                   	// #1
  435d0c:	b	434d64 <ferror@plt+0x32494>
  435d10:	ldr	x24, [sp, #336]
  435d14:	mov	w28, w19
  435d18:	ldr	x21, [sp, #264]
  435d1c:	ldr	w23, [sp, #276]
  435d20:	ldr	x19, [sp, #280]
  435d24:	ldr	x20, [sp, #288]
  435d28:	mov	w22, w28
  435d2c:	mov	w0, #0x1                   	// #1
  435d30:	str	w0, [sp, #180]
  435d34:	mov	w26, w0
  435d38:	b	434d64 <ferror@plt+0x32494>
  435d3c:	ldr	x24, [sp, #336]
  435d40:	mov	w28, w19
  435d44:	ldr	x21, [sp, #264]
  435d48:	ldr	w23, [sp, #276]
  435d4c:	ldr	x19, [sp, #280]
  435d50:	ldr	x20, [sp, #288]
  435d54:	mov	w22, w28
  435d58:	mov	w0, #0x1                   	// #1
  435d5c:	str	w0, [sp, #180]
  435d60:	mov	w26, w0
  435d64:	b	434d64 <ferror@plt+0x32494>
  435d68:	ldr	x24, [sp, #336]
  435d6c:	mov	w28, w0
  435d70:	ldr	x21, [sp, #264]
  435d74:	ldr	w23, [sp, #276]
  435d78:	ldr	x19, [sp, #280]
  435d7c:	ldr	x20, [sp, #288]
  435d80:	mov	w25, w0
  435d84:	mov	w22, w0
  435d88:	mov	w26, #0x1                   	// #1
  435d8c:	b	434d64 <ferror@plt+0x32494>
  435d90:	ldr	x24, [sp, #336]
  435d94:	mov	w28, w0
  435d98:	ldr	x21, [sp, #264]
  435d9c:	ldr	w23, [sp, #276]
  435da0:	ldr	x19, [sp, #280]
  435da4:	ldr	x20, [sp, #288]
  435da8:	mov	w27, w0
  435dac:	mov	w22, w0
  435db0:	mov	w26, #0x1                   	// #1
  435db4:	b	434d64 <ferror@plt+0x32494>
  435db8:	ldr	x24, [sp, #336]
  435dbc:	mov	w28, w0
  435dc0:	ldr	x21, [sp, #264]
  435dc4:	ldr	w23, [sp, #276]
  435dc8:	ldr	x19, [sp, #280]
  435dcc:	ldr	x20, [sp, #288]
  435dd0:	mov	w22, w0
  435dd4:	mov	w26, #0x1                   	// #1
  435dd8:	b	434d64 <ferror@plt+0x32494>
  435ddc:	mov	w22, #0x1                   	// #1
  435de0:	mov	w28, w22
  435de4:	mov	w26, w22
  435de8:	b	434d64 <ferror@plt+0x32494>
  435dec:	mov	x0, #0x0                   	// #0
  435df0:	mov	x22, #0x0                   	// #0
  435df4:	str	x22, [x27, #16]
  435df8:	str	x0, [x27, #8]
  435dfc:	str	wzr, [x27, #24]
  435e00:	sub	w25, w25, #0x1
  435e04:	add	x24, x24, #0x20
  435e08:	ldr	w0, [sp, #200]
  435e0c:	subs	w0, w0, #0x1
  435e10:	str	w0, [sp, #200]
  435e14:	b.eq	435b50 <ferror@plt+0x33280>  // b.none
  435e18:	mov	x27, x24
  435e1c:	ldr	x28, [x24, #8]
  435e20:	cbz	x28, 435e04 <ferror@plt+0x33534>
  435e24:	ldr	w0, [x24, #24]
  435e28:	cbz	w0, 435e04 <ferror@plt+0x33534>
  435e2c:	cbz	x23, 435b24 <ferror@plt+0x33254>
  435e30:	cmp	x28, #0x17
  435e34:	b.ls	435dec <ferror@plt+0x3351c>  // b.plast
  435e38:	ldr	x26, [x27, #16]
  435e3c:	ldr	w0, [x26]
  435e40:	cmp	w0, #0x1
  435e44:	b.ne	435e88 <ferror@plt+0x335b8>  // b.any
  435e48:	mov	x3, x20
  435e4c:	mov	x2, x19
  435e50:	ldr	x1, [x26, #8]
  435e54:	mov	x0, x21
  435e58:	bl	4329cc <ferror@plt+0x300fc>
  435e5c:	mov	x22, x0
  435e60:	cbz	x0, 435cd0 <ferror@plt+0x33400>
  435e64:	ldr	x4, [x26, #8]
  435e68:	mov	x3, x0
  435e6c:	mov	x2, x23
  435e70:	sub	x1, x28, #0x18
  435e74:	add	x0, x26, #0x18
  435e78:	bl	4335d8 <ferror@plt+0x30d08>
  435e7c:	cbz	w0, 435e94 <ferror@plt+0x335c4>
  435e80:	ldr	x0, [x26, #8]
  435e84:	b	435df4 <ferror@plt+0x33524>
  435e88:	mov	x0, #0x0                   	// #0
  435e8c:	mov	x22, #0x0                   	// #0
  435e90:	b	435df4 <ferror@plt+0x33524>
  435e94:	mov	x0, #0x0                   	// #0
  435e98:	mov	x22, #0x0                   	// #0
  435e9c:	b	435df4 <ferror@plt+0x33524>
  435ea0:	mov	x3, x20
  435ea4:	mov	x2, x19
  435ea8:	mov	x1, #0x0                   	// #0
  435eac:	mov	x0, x21
  435eb0:	bl	4329cc <ferror@plt+0x300fc>
  435eb4:	mov	x26, x0
  435eb8:	cbz	x0, 435400 <ferror@plt+0x32b30>
  435ebc:	str	xzr, [sp, #224]
  435ec0:	adrp	x3, 433000 <ferror@plt+0x30730>
  435ec4:	add	x3, x3, #0x118
  435ec8:	mov	x2, #0x18                  	// #24
  435ecc:	ldr	x22, [sp, #224]
  435ed0:	mov	x1, x22
  435ed4:	mov	x0, x26
  435ed8:	bl	43a078 <ferror@plt+0x377a8>
  435edc:	str	xzr, [x28]
  435ee0:	str	x26, [x28, #8]
  435ee4:	str	x22, [x28, #16]
  435ee8:	mov	x3, x20
  435eec:	mov	x2, x19
  435ef0:	add	x1, sp, #0x250
  435ef4:	mov	x0, x21
  435ef8:	bl	436444 <ferror@plt+0x33b74>
  435efc:	mov	w0, #0x1                   	// #1
  435f00:	ldr	x1, [sp, #200]
  435f04:	str	w0, [x1]
  435f08:	ldr	w0, [x21, #8]
  435f0c:	cbz	w0, 4354cc <ferror@plt+0x32bfc>
  435f10:	add	x2, x21, #0x30
  435f14:	mov	x0, x2
  435f18:	ldar	x1, [x0]
  435f1c:	cbz	x1, 4354f0 <ferror@plt+0x32c20>
  435f20:	mov	x0, x1
  435f24:	b	435f18 <ferror@plt+0x33648>
  435f28:	sub	sp, sp, #0x80
  435f2c:	stp	x29, x30, [sp, #48]
  435f30:	add	x29, sp, #0x30
  435f34:	stp	x19, x20, [sp, #64]
  435f38:	str	x21, [sp, #80]
  435f3c:	mov	x20, x0
  435f40:	mov	x19, x2
  435f44:	ldr	x1, [x0, #8]
  435f48:	cbz	x1, 435f54 <ferror@plt+0x33684>
  435f4c:	ldrb	w0, [x1]
  435f50:	cbnz	w0, 435fe4 <ferror@plt+0x33714>
  435f54:	ldr	w2, [x19, #56]
  435f58:	cmn	w2, #0x1
  435f5c:	b.eq	435fcc <ferror@plt+0x336fc>  // b.none
  435f60:	ldr	x21, [x19, #48]
  435f64:	mov	w0, #0xffffffff            	// #-1
  435f68:	str	w0, [x19, #56]
  435f6c:	str	wzr, [sp, #40]
  435f70:	str	xzr, [sp, #32]
  435f74:	str	wzr, [sp, #24]
  435f78:	str	wzr, [sp, #16]
  435f7c:	str	xzr, [sp, #8]
  435f80:	add	x0, sp, #0x6c
  435f84:	str	x0, [sp]
  435f88:	ldr	x7, [x19, #32]
  435f8c:	add	x6, sp, #0x70
  435f90:	ldr	x5, [x19, #16]
  435f94:	ldr	x4, [x19, #8]
  435f98:	ldr	x3, [x20]
  435f9c:	mov	x1, x21
  435fa0:	ldr	x0, [x19]
  435fa4:	bl	434ab0 <ferror@plt+0x321e0>
  435fa8:	cbz	w0, 435fcc <ferror@plt+0x336fc>
  435fac:	ldr	w0, [sp, #108]
  435fb0:	cbz	w0, 435fcc <ferror@plt+0x336fc>
  435fb4:	ldr	x0, [x19, #40]
  435fb8:	mov	w1, #0x1                   	// #1
  435fbc:	str	w1, [x0]
  435fc0:	ldr	x0, [x19, #24]
  435fc4:	ldr	x1, [sp, #112]
  435fc8:	str	x1, [x0]
  435fcc:	mov	w0, #0x0                   	// #0
  435fd0:	ldp	x19, x20, [sp, #64]
  435fd4:	ldr	x21, [sp, #80]
  435fd8:	ldp	x29, x30, [sp, #48]
  435fdc:	add	sp, sp, #0x80
  435fe0:	ret
  435fe4:	ldr	w0, [x2, #56]
  435fe8:	cmn	w0, #0x1
  435fec:	b.ne	436014 <ferror@plt+0x33744>  // b.any
  435ff0:	ldr	x21, [x20, #8]
  435ff4:	add	x3, sp, #0x7c
  435ff8:	ldr	x2, [x19, #16]
  435ffc:	ldr	x1, [x19, #8]
  436000:	mov	x0, x21
  436004:	bl	432fcc <ferror@plt+0x306fc>
  436008:	mov	w2, w0
  43600c:	tbz	w0, #31, 435f6c <ferror@plt+0x3369c>
  436010:	b	435fcc <ferror@plt+0x336fc>
  436014:	ldr	x2, [x2, #16]
  436018:	ldr	x1, [x19, #8]
  43601c:	bl	433080 <ferror@plt+0x307b0>
  436020:	mov	w0, #0xffffffff            	// #-1
  436024:	str	w0, [x19, #56]
  436028:	b	435ff0 <ferror@plt+0x33720>
  43602c:	stp	x29, x30, [sp, #-16]!
  436030:	mov	x29, sp
  436034:	mov	x3, x0
  436038:	mov	x10, x2
  43603c:	mov	x0, x4
  436040:	ldr	w2, [x3, #8]
  436044:	cbnz	w2, 43609c <ferror@plt+0x337cc>
  436048:	ldr	x4, [x3, #48]
  43604c:	cbz	x4, 436100 <ferror@plt+0x33830>
  436050:	mov	x9, #0x0                   	// #0
  436054:	b	436134 <ferror@plt+0x33864>
  436058:	mov	x8, x6
  43605c:	cmp	x8, x7
  436060:	b.ls	43612c <ferror@plt+0x3385c>  // b.plast
  436064:	add	x5, x8, x7
  436068:	lsr	x6, x5, #1
  43606c:	and	x5, x5, #0xfffffffffffffffe
  436070:	add	x5, x5, x6
  436074:	add	x5, x2, x5, lsl #3
  436078:	ldr	x3, [x5, #8]
  43607c:	cmp	x3, x1
  436080:	b.hi	436058 <ferror@plt+0x33788>  // b.pmore
  436084:	ldr	x7, [x5, #16]
  436088:	add	x3, x3, x7
  43608c:	cmp	x3, x1
  436090:	b.hi	436114 <ferror@plt+0x33844>  // b.pmore
  436094:	add	x7, x6, #0x1
  436098:	b	43605c <ferror@plt+0x3378c>
  43609c:	add	x2, x3, #0x30
  4360a0:	mov	x4, #0x0                   	// #0
  4360a4:	ldar	x2, [x2]
  4360a8:	cbz	x2, 436100 <ferror@plt+0x33830>
  4360ac:	ldr	x9, [x2, #8]
  4360b0:	ldr	x8, [x2, #16]
  4360b4:	mov	x7, x4
  4360b8:	b	4360c0 <ferror@plt+0x337f0>
  4360bc:	mov	x8, x6
  4360c0:	cmp	x8, x7
  4360c4:	b.ls	4360a4 <ferror@plt+0x337d4>  // b.plast
  4360c8:	add	x5, x8, x7
  4360cc:	lsr	x6, x5, #1
  4360d0:	and	x5, x5, #0xfffffffffffffffe
  4360d4:	add	x5, x5, x6
  4360d8:	add	x5, x9, x5, lsl #3
  4360dc:	ldr	x3, [x5, #8]
  4360e0:	cmp	x3, x1
  4360e4:	b.hi	4360bc <ferror@plt+0x337ec>  // b.pmore
  4360e8:	ldr	x7, [x5, #16]
  4360ec:	add	x3, x3, x7
  4360f0:	cmp	x3, x1
  4360f4:	b.hi	436114 <ferror@plt+0x33844>  // b.pmore
  4360f8:	add	x7, x6, #0x1
  4360fc:	b	4360c0 <ferror@plt+0x337f0>
  436100:	mov	x4, #0x0                   	// #0
  436104:	mov	x3, #0x0                   	// #0
  436108:	mov	x2, #0x0                   	// #0
  43610c:	blr	x10
  436110:	b	436124 <ferror@plt+0x33854>
  436114:	ldr	x4, [x5, #16]
  436118:	ldr	x3, [x5, #8]
  43611c:	ldr	x2, [x5]
  436120:	blr	x10
  436124:	ldp	x29, x30, [sp], #16
  436128:	ret
  43612c:	ldr	x4, [x4]
  436130:	cbz	x4, 436100 <ferror@plt+0x33830>
  436134:	ldr	x2, [x4, #8]
  436138:	ldr	x8, [x4, #16]
  43613c:	mov	x7, x9
  436140:	b	43605c <ferror@plt+0x3378c>
  436144:	stp	x29, x30, [sp, #-80]!
  436148:	mov	x29, sp
  43614c:	stp	x19, x20, [sp, #16]
  436150:	stp	x21, x22, [sp, #32]
  436154:	stp	x23, x24, [sp, #48]
  436158:	stp	x25, x26, [sp, #64]
  43615c:	mov	x22, x0
  436160:	mov	x23, x1
  436164:	mov	x24, x2
  436168:	mov	x20, x3
  43616c:	mov	x21, x4
  436170:	mov	x25, x5
  436174:	mov	x26, x6
  436178:	mov	x3, x4
  43617c:	mov	x2, x20
  436180:	mov	x1, #0x13b4                	// #5044
  436184:	bl	4329cc <ferror@plt+0x300fc>
  436188:	cbz	x0, 4361ec <ferror@plt+0x3391c>
  43618c:	mov	x19, x0
  436190:	mov	x7, x26
  436194:	mov	x6, x25
  436198:	mov	x5, x21
  43619c:	mov	x4, x20
  4361a0:	mov	x3, x0
  4361a4:	mov	x2, x24
  4361a8:	mov	x1, x23
  4361ac:	mov	x0, x22
  4361b0:	bl	4344a8 <ferror@plt+0x31bd8>
  4361b4:	mov	w23, w0
  4361b8:	mov	x4, x21
  4361bc:	mov	x3, x20
  4361c0:	mov	x2, #0x13b4                	// #5044
  4361c4:	mov	x1, x19
  4361c8:	mov	x0, x22
  4361cc:	bl	432920 <ferror@plt+0x30050>
  4361d0:	mov	w0, w23
  4361d4:	ldp	x19, x20, [sp, #16]
  4361d8:	ldp	x21, x22, [sp, #32]
  4361dc:	ldp	x23, x24, [sp, #48]
  4361e0:	ldp	x25, x26, [sp, #64]
  4361e4:	ldp	x29, x30, [sp], #80
  4361e8:	ret
  4361ec:	mov	w23, #0x0                   	// #0
  4361f0:	b	4361d0 <ferror@plt+0x33900>
  4361f4:	sub	sp, sp, #0xc0
  4361f8:	stp	x29, x30, [sp, #48]
  4361fc:	add	x29, sp, #0x30
  436200:	stp	x19, x20, [sp, #64]
  436204:	stp	x21, x22, [sp, #80]
  436208:	stp	x23, x24, [sp, #96]
  43620c:	mov	x19, x0
  436210:	mov	x24, x1
  436214:	mov	w20, w2
  436218:	mov	x22, x3
  43621c:	mov	x21, x4
  436220:	mov	x23, x5
  436224:	adrp	x3, 433000 <ferror@plt+0x30730>
  436228:	add	x3, x3, #0xcc
  43622c:	str	x3, [sp, #176]
  436230:	str	wzr, [sp, #40]
  436234:	str	xzr, [sp, #32]
  436238:	str	wzr, [sp, #24]
  43623c:	mov	w3, #0x1                   	// #1
  436240:	str	w3, [sp, #16]
  436244:	str	xzr, [sp, #8]
  436248:	add	x3, sp, #0xb8
  43624c:	str	x3, [sp]
  436250:	add	x7, sp, #0xbc
  436254:	add	x6, sp, #0xb0
  436258:	mov	x5, x4
  43625c:	mov	x4, x22
  436260:	mov	x3, #0x0                   	// #0
  436264:	bl	434ab0 <ferror@plt+0x321e0>
  436268:	cbz	w0, 4362fc <ferror@plt+0x33a2c>
  43626c:	str	x19, [sp, #112]
  436270:	str	x22, [sp, #120]
  436274:	str	x21, [sp, #128]
  436278:	add	x1, sp, #0xb0
  43627c:	str	x1, [sp, #136]
  436280:	add	x1, sp, #0xbc
  436284:	str	x1, [sp, #144]
  436288:	add	x1, sp, #0xb8
  43628c:	str	x1, [sp, #152]
  436290:	str	x24, [sp, #160]
  436294:	cmp	w0, #0x0
  436298:	csinv	w20, w20, wzr, lt  // lt = tstop
  43629c:	str	w20, [sp, #168]
  4362a0:	add	x1, sp, #0x70
  4362a4:	adrp	x0, 435000 <ferror@plt+0x32730>
  4362a8:	add	x0, x0, #0xf28
  4362ac:	bl	402670 <dl_iterate_phdr@plt>
  4362b0:	ldr	w0, [x19, #8]
  4362b4:	cbnz	w0, 43632c <ferror@plt+0x33a5c>
  4362b8:	ldr	w0, [sp, #188]
  4362bc:	cbz	w0, 436314 <ferror@plt+0x33a44>
  4362c0:	adrp	x0, 436000 <ferror@plt+0x33730>
  4362c4:	add	x0, x0, #0x2c
  4362c8:	str	x0, [x19, #40]
  4362cc:	ldr	x0, [x19, #24]
  4362d0:	str	x0, [x23]
  4362d4:	ldr	x2, [x23]
  4362d8:	cmp	x2, #0x0
  4362dc:	mov	w0, #0x1                   	// #1
  4362e0:	adrp	x1, 433000 <ferror@plt+0x30730>
  4362e4:	add	x1, x1, #0xcc
  4362e8:	ccmp	x2, x1, #0x4, ne  // ne = any
  4362ec:	b.ne	4362fc <ferror@plt+0x33a2c>  // b.any
  4362f0:	ldr	x0, [sp, #176]
  4362f4:	str	x0, [x23]
  4362f8:	mov	w0, #0x1                   	// #1
  4362fc:	ldp	x19, x20, [sp, #64]
  436300:	ldp	x21, x22, [sp, #80]
  436304:	ldp	x23, x24, [sp, #96]
  436308:	ldp	x29, x30, [sp, #48]
  43630c:	add	sp, sp, #0xc0
  436310:	ret
  436314:	ldr	x0, [x19, #40]
  436318:	cbnz	x0, 4362cc <ferror@plt+0x339fc>
  43631c:	adrp	x0, 433000 <ferror@plt+0x30730>
  436320:	add	x0, x0, #0xf4
  436324:	str	x0, [x19, #40]
  436328:	b	4362cc <ferror@plt+0x339fc>
  43632c:	ldr	w0, [sp, #188]
  436330:	cbz	w0, 43635c <ferror@plt+0x33a8c>
  436334:	add	x0, x19, #0x28
  436338:	adrp	x1, 436000 <ferror@plt+0x33730>
  43633c:	add	x1, x1, #0x2c
  436340:	stlr	x1, [x0]
  436344:	ldr	w0, [x19, #8]
  436348:	cbz	w0, 4362cc <ferror@plt+0x339fc>
  43634c:	add	x19, x19, #0x18
  436350:	ldar	x0, [x19]
  436354:	str	x0, [x23]
  436358:	b	4362d4 <ferror@plt+0x33a04>
  43635c:	add	x0, x19, #0x28
  436360:	adrp	x1, 433000 <ferror@plt+0x30730>
  436364:	add	x1, x1, #0xf4
  436368:	ldxr	x2, [x0]
  43636c:	cbnz	x2, 436378 <ferror@plt+0x33aa8>
  436370:	stlxr	w3, x1, [x0]
  436374:	cbnz	w3, 436368 <ferror@plt+0x33a98>
  436378:	dmb	ish
  43637c:	b	436344 <ferror@plt+0x33a74>
  436380:	stp	x29, x30, [sp, #-80]!
  436384:	mov	x29, sp
  436388:	stp	x19, x20, [sp, #16]
  43638c:	stp	x21, x22, [sp, #32]
  436390:	stp	x23, x24, [sp, #48]
  436394:	str	x25, [sp, #64]
  436398:	mov	w22, w1
  43639c:	mov	x20, x2
  4363a0:	mov	x19, x3
  4363a4:	mov	x23, x4
  4363a8:	mov	x24, x5
  4363ac:	mov	x21, x6
  4363b0:	bl	402500 <getpagesize@plt>
  4363b4:	sxtw	x0, w0
  4363b8:	udiv	x25, x20, x0
  4363bc:	msub	w25, w25, w0, w20
  4363c0:	sub	x19, x19, #0x1
  4363c4:	add	x3, x0, x25
  4363c8:	add	x19, x19, x3
  4363cc:	neg	x0, x0
  4363d0:	and	x19, x0, x19
  4363d4:	sub	x5, x20, x25
  4363d8:	mov	w4, w22
  4363dc:	mov	w3, #0x2                   	// #2
  4363e0:	mov	w2, #0x1                   	// #1
  4363e4:	mov	x1, x19
  4363e8:	mov	x0, #0x0                   	// #0
  4363ec:	bl	402640 <mmap@plt>
  4363f0:	cmn	x0, #0x1
  4363f4:	b.eq	436424 <ferror@plt+0x33b54>  // b.none
  4363f8:	add	x25, x0, x25
  4363fc:	str	x25, [x21]
  436400:	str	x0, [x21, #8]
  436404:	str	x19, [x21, #16]
  436408:	mov	w0, #0x1                   	// #1
  43640c:	ldp	x19, x20, [sp, #16]
  436410:	ldp	x21, x22, [sp, #32]
  436414:	ldp	x23, x24, [sp, #48]
  436418:	ldr	x25, [sp, #64]
  43641c:	ldp	x29, x30, [sp], #80
  436420:	ret
  436424:	bl	402810 <__errno_location@plt>
  436428:	ldr	w2, [x0]
  43642c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1c094>
  436430:	add	x1, x1, #0xd48
  436434:	mov	x0, x24
  436438:	blr	x23
  43643c:	mov	w0, #0x0                   	// #0
  436440:	b	43640c <ferror@plt+0x33b3c>
  436444:	stp	x29, x30, [sp, #-32]!
  436448:	mov	x29, sp
  43644c:	stp	x19, x20, [sp, #16]
  436450:	mov	x4, x1
  436454:	mov	x19, x2
  436458:	mov	x20, x3
  43645c:	ldr	x1, [x1, #16]
  436460:	ldr	x0, [x4, #8]
  436464:	bl	4026f0 <munmap@plt>
  436468:	tbnz	w0, #31, 436478 <ferror@plt+0x33ba8>
  43646c:	ldp	x19, x20, [sp, #16]
  436470:	ldp	x29, x30, [sp], #32
  436474:	ret
  436478:	bl	402810 <__errno_location@plt>
  43647c:	ldr	w2, [x0]
  436480:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d094>
  436484:	add	x1, x1, #0x970
  436488:	mov	x0, x20
  43648c:	blr	x19
  436490:	b	43646c <ferror@plt+0x33b9c>
  436494:	cmp	w1, #0x4
  436498:	b.eq	4364f0 <ferror@plt+0x33c20>  // b.none
  43649c:	b.gt	4364c8 <ferror@plt+0x33bf8>
  4364a0:	cmp	w1, #0x1
  4364a4:	b.eq	4364e4 <ferror@plt+0x33c14>  // b.none
  4364a8:	cmp	w1, #0x2
  4364ac:	b.ne	4364c0 <ferror@plt+0x33bf0>  // b.any
  4364b0:	mov	x1, #0xffff                	// #65535
  4364b4:	cmp	x0, x1
  4364b8:	cset	w0, eq  // eq = none
  4364bc:	b	4364e0 <ferror@plt+0x33c10>
  4364c0:	mov	w0, #0x0                   	// #0
  4364c4:	b	4364e0 <ferror@plt+0x33c10>
  4364c8:	cmp	w1, #0x8
  4364cc:	b.ne	4364dc <ferror@plt+0x33c0c>  // b.any
  4364d0:	cmn	x0, #0x1
  4364d4:	cset	w0, eq  // eq = none
  4364d8:	b	4364e0 <ferror@plt+0x33c10>
  4364dc:	mov	w0, #0x0                   	// #0
  4364e0:	ret
  4364e4:	cmp	x0, #0xff
  4364e8:	cset	w0, eq  // eq = none
  4364ec:	b	4364e0 <ferror@plt+0x33c10>
  4364f0:	mov	x1, #0xffffffff            	// #4294967295
  4364f4:	cmp	x0, x1
  4364f8:	cset	w0, eq  // eq = none
  4364fc:	b	4364e0 <ferror@plt+0x33c10>
  436500:	mov	x4, #0x0                   	// #0
  436504:	b	43650c <ferror@plt+0x33c3c>
  436508:	mov	x1, x3
  43650c:	cmp	x1, x4
  436510:	b.ls	436544 <ferror@plt+0x33c74>  // b.plast
  436514:	add	x3, x1, x4
  436518:	lsr	x3, x3, #1
  43651c:	add	x7, x0, x3, lsl #3
  436520:	ldr	x5, [x0, x3, lsl #3]
  436524:	ldr	x6, [x5, #24]
  436528:	cmp	x6, x2
  43652c:	b.hi	436508 <ferror@plt+0x33c38>  // b.pmore
  436530:	ldr	x4, [x5, #32]
  436534:	cmp	x4, x2
  436538:	b.hi	43654c <ferror@plt+0x33c7c>  // b.pmore
  43653c:	add	x4, x3, #0x1
  436540:	b	43650c <ferror@plt+0x33c3c>
  436544:	mov	x0, #0x0                   	// #0
  436548:	b	436550 <ferror@plt+0x33c80>
  43654c:	ldr	x0, [x7]
  436550:	ret
  436554:	mov	x2, x0
  436558:	ldr	x4, [x0]
  43655c:	ldr	x3, [x1]
  436560:	mov	w0, #0xffffffff            	// #-1
  436564:	cmp	x4, x3
  436568:	b.cc	4365ac <ferror@plt+0x33cdc>  // b.lo, b.ul, b.last
  43656c:	mov	w0, #0x1                   	// #1
  436570:	b.hi	4365ac <ferror@plt+0x33cdc>  // b.pmore
  436574:	ldr	x4, [x2, #8]
  436578:	ldr	x3, [x1, #8]
  43657c:	cmp	x4, x3
  436580:	b.cc	4365ac <ferror@plt+0x33cdc>  // b.lo, b.ul, b.last
  436584:	mov	w0, #0xffffffff            	// #-1
  436588:	b.hi	4365ac <ferror@plt+0x33cdc>  // b.pmore
  43658c:	ldr	x0, [x2, #16]
  436590:	ldr	x2, [x0, #56]
  436594:	ldr	x0, [x1, #16]
  436598:	ldr	x1, [x0, #56]
  43659c:	mov	w0, #0xffffffff            	// #-1
  4365a0:	cmp	x2, x1
  4365a4:	b.lt	4365ac <ferror@plt+0x33cdc>  // b.tstop
  4365a8:	cset	w0, gt
  4365ac:	ret
  4365b0:	mov	x2, x0
  4365b4:	ldr	x4, [x0]
  4365b8:	ldr	x3, [x1]
  4365bc:	mov	w0, #0xffffffff            	// #-1
  4365c0:	cmp	x4, x3
  4365c4:	b.cc	4365e8 <ferror@plt+0x33d18>  // b.lo, b.ul, b.last
  4365c8:	mov	w0, #0x1                   	// #1
  4365cc:	b.hi	4365e8 <ferror@plt+0x33d18>  // b.pmore
  4365d0:	ldr	w2, [x2, #20]
  4365d4:	ldr	w1, [x1, #20]
  4365d8:	mov	w0, #0xffffffff            	// #-1
  4365dc:	cmp	w2, w1
  4365e0:	b.lt	4365e8 <ferror@plt+0x33d18>  // b.tstop
  4365e4:	cset	w0, gt
  4365e8:	ret
  4365ec:	ldr	x2, [x0]
  4365f0:	ldr	x0, [x1]
  4365f4:	cmp	x2, x0
  4365f8:	b.cc	436604 <ferror@plt+0x33d34>  // b.lo, b.ul, b.last
  4365fc:	cset	w0, hi  // hi = pmore
  436600:	ret
  436604:	mov	w0, #0xffffffff            	// #-1
  436608:	b	436600 <ferror@plt+0x33d30>
  43660c:	ldr	x7, [x1, #32]
  436610:	cbz	x7, 4366ac <ferror@plt+0x33ddc>
  436614:	stp	x29, x30, [sp, #-64]!
  436618:	mov	x29, sp
  43661c:	stp	x19, x20, [sp, #16]
  436620:	stp	x21, x22, [sp, #32]
  436624:	stp	x23, x24, [sp, #48]
  436628:	mov	x19, x0
  43662c:	mov	x22, x2
  436630:	mov	x23, x3
  436634:	mov	x20, x4
  436638:	mov	x21, x5
  43663c:	ldr	x2, [x1, #24]
  436640:	mov	x4, x7
  436644:	mov	x3, #0x0                   	// #0
  436648:	b	436650 <ferror@plt+0x33d80>
  43664c:	mov	x4, x0
  436650:	cmp	x4, x3
  436654:	b.ls	436694 <ferror@plt+0x33dc4>  // b.plast
  436658:	add	x1, x4, x3
  43665c:	lsr	x0, x1, #1
  436660:	and	x1, x1, #0xfffffffffffffffe
  436664:	add	x1, x1, x0
  436668:	lsl	x6, x1, #3
  43666c:	mov	x5, x6
  436670:	add	x6, x2, x6
  436674:	ldr	x1, [x2, x1, lsl #3]
  436678:	cmp	x1, x19
  43667c:	b.hi	43664c <ferror@plt+0x33d7c>  // b.pmore
  436680:	ldr	x1, [x6, #8]
  436684:	cmp	x1, x19
  436688:	b.hi	4366b4 <ferror@plt+0x33de4>  // b.pmore
  43668c:	add	x3, x0, #0x1
  436690:	b	436650 <ferror@plt+0x33d80>
  436694:	mov	w0, #0x0                   	// #0
  436698:	ldp	x19, x20, [sp, #16]
  43669c:	ldp	x21, x22, [sp, #32]
  4366a0:	ldp	x23, x24, [sp, #48]
  4366a4:	ldp	x29, x30, [sp], #64
  4366a8:	ret
  4366ac:	mov	w0, #0x0                   	// #0
  4366b0:	ret
  4366b4:	asr	x0, x5, #3
  4366b8:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4366bc:	movk	x5, #0xaaab
  4366c0:	mul	x0, x0, x5
  4366c4:	add	x0, x0, #0x1
  4366c8:	mov	x1, x5
  4366cc:	cmp	x7, x0
  4366d0:	b.ls	436708 <ferror@plt+0x33e38>  // b.plast
  4366d4:	ldr	x0, [x6, #24]
  4366d8:	cmp	x0, x19
  4366dc:	b.hi	436708 <ferror@plt+0x33e38>  // b.pmore
  4366e0:	ldr	x0, [x6, #32]
  4366e4:	cmp	x0, x19
  4366e8:	b.ls	436708 <ferror@plt+0x33e38>  // b.plast
  4366ec:	add	x6, x6, #0x18
  4366f0:	sub	x0, x6, x2
  4366f4:	asr	x0, x0, #3
  4366f8:	mul	x0, x0, x1
  4366fc:	add	x0, x0, #0x1
  436700:	cmp	x7, x0
  436704:	b.hi	4366d4 <ferror@plt+0x33e04>  // b.pmore
  436708:	ldr	x24, [x6, #16]
  43670c:	mov	x5, x21
  436710:	mov	x4, x20
  436714:	mov	x3, x23
  436718:	mov	x2, x22
  43671c:	mov	x1, x24
  436720:	mov	x0, x19
  436724:	bl	43660c <ferror@plt+0x33d3c>
  436728:	cbnz	w0, 436698 <ferror@plt+0x33dc8>
  43672c:	ldr	x4, [x24]
  436730:	ldr	w3, [x21]
  436734:	ldr	x2, [x20]
  436738:	mov	x1, x19
  43673c:	mov	x0, x23
  436740:	blr	x22
  436744:	cbnz	w0, 436698 <ferror@plt+0x33dc8>
  436748:	ldr	x1, [x24, #8]
  43674c:	str	x1, [x20]
  436750:	ldr	w1, [x24, #16]
  436754:	str	w1, [x21]
  436758:	b	436698 <ferror@plt+0x33dc8>
  43675c:	stp	x29, x30, [sp, #-112]!
  436760:	mov	x29, sp
  436764:	stp	x21, x22, [sp, #32]
  436768:	stp	x23, x24, [sp, #48]
  43676c:	stp	x25, x26, [sp, #64]
  436770:	mov	x24, x2
  436774:	mov	x25, x3
  436778:	ldr	x21, [x0]
  43677c:	sub	x2, x1, #0x1
  436780:	cmp	x2, x21
  436784:	b.cs	4367a4 <ferror@plt+0x33ed4>  // b.hs, b.nlast
  436788:	lsl	x2, x1, #5
  43678c:	sub	x2, x2, #0x20
  436790:	ldr	x3, [x0, #8]
  436794:	add	x26, x3, x2
  436798:	ldr	x2, [x3, x2]
  43679c:	cmp	x2, x1
  4367a0:	b.eq	436804 <ferror@plt+0x33f34>  // b.none
  4367a4:	stp	x19, x20, [sp, #16]
  4367a8:	stp	xzr, xzr, [sp, #88]
  4367ac:	str	xzr, [sp, #104]
  4367b0:	str	x1, [sp, #80]
  4367b4:	ldr	x23, [x0, #8]
  4367b8:	mov	x20, #0x0                   	// #0
  4367bc:	add	x22, sp, #0x50
  4367c0:	b	4367c8 <ferror@plt+0x33ef8>
  4367c4:	mov	x21, x19
  4367c8:	cmp	x21, x20
  4367cc:	b.ls	43681c <ferror@plt+0x33f4c>  // b.plast
  4367d0:	add	x19, x21, x20
  4367d4:	lsr	x19, x19, #1
  4367d8:	add	x26, x23, x19, lsl #5
  4367dc:	mov	x1, x26
  4367e0:	mov	x0, x22
  4367e4:	bl	4365ec <ferror@plt+0x33d1c>
  4367e8:	tbnz	w0, #31, 4367c4 <ferror@plt+0x33ef4>
  4367ec:	cmp	w0, #0x0
  4367f0:	b.le	4367fc <ferror@plt+0x33f2c>
  4367f4:	add	x20, x19, #0x1
  4367f8:	b	4367c8 <ferror@plt+0x33ef8>
  4367fc:	cbz	x26, 43681c <ferror@plt+0x33f4c>
  436800:	ldp	x19, x20, [sp, #16]
  436804:	mov	x0, x26
  436808:	ldp	x21, x22, [sp, #32]
  43680c:	ldp	x23, x24, [sp, #48]
  436810:	ldp	x25, x26, [sp, #64]
  436814:	ldp	x29, x30, [sp], #112
  436818:	ret
  43681c:	mov	w2, #0x0                   	// #0
  436820:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d094>
  436824:	add	x1, x1, #0x978
  436828:	mov	x0, x25
  43682c:	blr	x24
  436830:	mov	x26, #0x0                   	// #0
  436834:	ldp	x19, x20, [sp, #16]
  436838:	b	436804 <ferror@plt+0x33f34>
  43683c:	stp	x29, x30, [sp, #-64]!
  436840:	mov	x29, sp
  436844:	stp	x19, x20, [sp, #16]
  436848:	stp	x21, x22, [sp, #32]
  43684c:	str	x23, [sp, #48]
  436850:	mov	x23, x1
  436854:	mov	x20, x2
  436858:	mov	x21, x3
  43685c:	mov	w22, w4
  436860:	mov	x2, x5
  436864:	mov	x3, x6
  436868:	mov	x19, x7
  43686c:	ldr	x7, [x7, #24]
  436870:	cbz	x7, 436894 <ferror@plt+0x33fc4>
  436874:	add	x7, x7, x7, lsl #1
  436878:	lsl	x7, x7, #3
  43687c:	sub	x7, x7, #0x18
  436880:	ldr	x1, [x19]
  436884:	add	x4, x1, x7
  436888:	ldr	x1, [x1, x7]
  43688c:	cmp	x1, x20
  436890:	b.eq	4368e8 <ferror@plt+0x34018>  // b.none
  436894:	mov	x4, x19
  436898:	mov	x1, #0x18                  	// #24
  43689c:	bl	432b38 <ferror@plt+0x30268>
  4368a0:	cbz	x0, 436908 <ferror@plt+0x34038>
  4368a4:	ldr	x2, [x23, #16]
  4368a8:	add	x20, x2, x20
  4368ac:	str	x20, [x0]
  4368b0:	str	x21, [x0, #8]
  4368b4:	str	w22, [x0, #16]
  4368b8:	ldr	x1, [x19, #24]
  4368bc:	str	w1, [x0, #20]
  4368c0:	ldr	x0, [x19, #24]
  4368c4:	add	x0, x0, #0x1
  4368c8:	str	x0, [x19, #24]
  4368cc:	mov	w1, #0x1                   	// #1
  4368d0:	mov	w0, w1
  4368d4:	ldp	x19, x20, [sp, #16]
  4368d8:	ldp	x21, x22, [sp, #32]
  4368dc:	ldr	x23, [sp, #48]
  4368e0:	ldp	x29, x30, [sp], #64
  4368e4:	ret
  4368e8:	ldr	x1, [x4, #8]
  4368ec:	cmp	x1, x21
  4368f0:	b.ne	436894 <ferror@plt+0x33fc4>  // b.any
  4368f4:	ldr	w4, [x4, #16]
  4368f8:	mov	w1, #0x1                   	// #1
  4368fc:	cmp	w4, w22
  436900:	b.ne	436894 <ferror@plt+0x33fc4>  // b.any
  436904:	b	4368d0 <ferror@plt+0x34000>
  436908:	mov	w1, #0x0                   	// #0
  43690c:	b	4368d0 <ferror@plt+0x34000>
  436910:	stp	x29, x30, [sp, #-48]!
  436914:	mov	x29, sp
  436918:	stp	x19, x20, [sp, #16]
  43691c:	stp	x21, x22, [sp, #32]
  436920:	mov	x22, x2
  436924:	mov	x2, x5
  436928:	mov	x19, x7
  43692c:	ldr	x21, [x1, #16]
  436930:	add	x20, x21, x3
  436934:	add	x21, x21, x4
  436938:	ldr	x1, [x7, #24]
  43693c:	cbz	x1, 436978 <ferror@plt+0x340a8>
  436940:	add	x1, x1, x1, lsl #1
  436944:	lsl	x1, x1, #3
  436948:	sub	x1, x1, #0x18
  43694c:	ldr	x3, [x7]
  436950:	add	x1, x3, x1
  436954:	ldr	x3, [x1, #8]
  436958:	cmp	x3, x20
  43695c:	b.eq	43696c <ferror@plt+0x3409c>  // b.none
  436960:	add	x4, x3, #0x1
  436964:	cmp	x4, x20
  436968:	b.ne	436978 <ferror@plt+0x340a8>  // b.any
  43696c:	ldr	x4, [x1, #16]
  436970:	cmp	x4, x22
  436974:	b.eq	4369b8 <ferror@plt+0x340e8>  // b.none
  436978:	mov	x4, x19
  43697c:	mov	x3, x6
  436980:	mov	x1, #0x18                  	// #24
  436984:	bl	432b38 <ferror@plt+0x30268>
  436988:	cbz	x0, 4369cc <ferror@plt+0x340fc>
  43698c:	str	x20, [x0]
  436990:	str	x21, [x0, #8]
  436994:	str	x22, [x0, #16]
  436998:	ldr	x0, [x19, #24]
  43699c:	add	x0, x0, #0x1
  4369a0:	str	x0, [x19, #24]
  4369a4:	mov	w0, #0x1                   	// #1
  4369a8:	ldp	x19, x20, [sp, #16]
  4369ac:	ldp	x21, x22, [sp, #32]
  4369b0:	ldp	x29, x30, [sp], #48
  4369b4:	ret
  4369b8:	mov	w0, #0x1                   	// #1
  4369bc:	cmp	x3, x21
  4369c0:	b.cs	4369a8 <ferror@plt+0x340d8>  // b.hs, b.nlast
  4369c4:	str	x21, [x1, #8]
  4369c8:	b	4369a8 <ferror@plt+0x340d8>
  4369cc:	mov	w0, #0x0                   	// #0
  4369d0:	b	4369a8 <ferror@plt+0x340d8>
  4369d4:	stp	x29, x30, [sp, #-48]!
  4369d8:	mov	x29, sp
  4369dc:	stp	x19, x20, [sp, #16]
  4369e0:	stp	x21, x22, [sp, #32]
  4369e4:	mov	x19, x2
  4369e8:	mov	x2, x3
  4369ec:	mov	x3, x4
  4369f0:	mov	x20, x5
  4369f4:	ldr	x21, [x19]
  4369f8:	add	x21, x1, x21
  4369fc:	ldr	x22, [x19, #8]
  436a00:	add	x22, x1, x22
  436a04:	ldr	x1, [x5, #24]
  436a08:	cbz	x1, 436a48 <ferror@plt+0x34178>
  436a0c:	add	x1, x1, x1, lsl #1
  436a10:	lsl	x1, x1, #3
  436a14:	sub	x1, x1, #0x18
  436a18:	ldr	x4, [x5]
  436a1c:	add	x1, x4, x1
  436a20:	ldr	x4, [x1, #8]
  436a24:	cmp	x21, x4
  436a28:	b.eq	436a38 <ferror@plt+0x34168>  // b.none
  436a2c:	add	x5, x4, #0x1
  436a30:	cmp	x21, x5
  436a34:	b.ne	436a48 <ferror@plt+0x34178>  // b.any
  436a38:	ldr	x6, [x19, #16]
  436a3c:	ldr	x5, [x1, #16]
  436a40:	cmp	x6, x5
  436a44:	b.eq	436a90 <ferror@plt+0x341c0>  // b.none
  436a48:	mov	x4, x20
  436a4c:	mov	x1, #0x18                  	// #24
  436a50:	bl	432b38 <ferror@plt+0x30268>
  436a54:	cbz	x0, 436aa4 <ferror@plt+0x341d4>
  436a58:	str	x21, [x19]
  436a5c:	str	x22, [x19, #8]
  436a60:	ldp	x2, x3, [x19]
  436a64:	stp	x2, x3, [x0]
  436a68:	ldr	x1, [x19, #16]
  436a6c:	str	x1, [x0, #16]
  436a70:	ldr	x0, [x20, #24]
  436a74:	add	x0, x0, #0x1
  436a78:	str	x0, [x20, #24]
  436a7c:	mov	w0, #0x1                   	// #1
  436a80:	ldp	x19, x20, [sp, #16]
  436a84:	ldp	x21, x22, [sp, #32]
  436a88:	ldp	x29, x30, [sp], #48
  436a8c:	ret
  436a90:	mov	w0, #0x1                   	// #1
  436a94:	cmp	x22, x4
  436a98:	b.ls	436a80 <ferror@plt+0x341b0>  // b.plast
  436a9c:	str	x22, [x1, #8]
  436aa0:	b	436a80 <ferror@plt+0x341b0>
  436aa4:	mov	w0, #0x0                   	// #0
  436aa8:	b	436a80 <ferror@plt+0x341b0>
  436aac:	stp	x29, x30, [sp, #-240]!
  436ab0:	mov	x29, sp
  436ab4:	stp	x19, x20, [sp, #16]
  436ab8:	mov	x19, x0
  436abc:	ldr	x5, [x0, #16]
  436ac0:	ldr	x0, [x0, #8]
  436ac4:	add	x20, sp, #0x28
  436ac8:	sub	w5, w5, w0
  436acc:	ldr	x4, [x19]
  436ad0:	mov	x3, x1
  436ad4:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1d094>
  436ad8:	add	x2, x2, #0x998
  436adc:	mov	x1, #0xc8                  	// #200
  436ae0:	mov	x0, x20
  436ae4:	bl	4023a0 <snprintf@plt>
  436ae8:	ldr	x3, [x19, #40]
  436aec:	mov	w2, #0x0                   	// #0
  436af0:	mov	x1, x20
  436af4:	ldr	x0, [x19, #48]
  436af8:	blr	x3
  436afc:	ldp	x19, x20, [sp, #16]
  436b00:	ldp	x29, x30, [sp], #240
  436b04:	ret
  436b08:	stp	x29, x30, [sp, #-32]!
  436b0c:	mov	x29, sp
  436b10:	str	x19, [sp, #16]
  436b14:	mov	x19, x0
  436b18:	ldr	x0, [x0, #24]
  436b1c:	cmp	x1, x0
  436b20:	b.ls	436b50 <ferror@plt+0x34280>  // b.plast
  436b24:	ldr	w0, [x19, #56]
  436b28:	cbz	w0, 436b34 <ferror@plt+0x34264>
  436b2c:	mov	w0, #0x0                   	// #0
  436b30:	b	436b68 <ferror@plt+0x34298>
  436b34:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d094>
  436b38:	add	x1, x1, #0x9a8
  436b3c:	mov	x0, x19
  436b40:	bl	436aac <ferror@plt+0x341dc>
  436b44:	mov	w0, #0x1                   	// #1
  436b48:	str	w0, [x19, #56]
  436b4c:	b	436b2c <ferror@plt+0x3425c>
  436b50:	ldr	x2, [x19, #16]
  436b54:	add	x2, x2, x1
  436b58:	str	x2, [x19, #16]
  436b5c:	sub	x1, x0, x1
  436b60:	str	x1, [x19, #24]
  436b64:	mov	w0, #0x1                   	// #1
  436b68:	ldr	x19, [sp, #16]
  436b6c:	ldp	x29, x30, [sp], #32
  436b70:	ret
  436b74:	stp	x29, x30, [sp, #-32]!
  436b78:	mov	x29, sp
  436b7c:	stp	x19, x20, [sp, #16]
  436b80:	mov	x19, x0
  436b84:	ldr	x20, [x0, #16]
  436b88:	mov	x1, #0x4                   	// #4
  436b8c:	bl	436b08 <ferror@plt+0x34238>
  436b90:	cbz	w0, 436be4 <ferror@plt+0x34314>
  436b94:	ldr	w0, [x19, #32]
  436b98:	cbz	w0, 436bc0 <ferror@plt+0x342f0>
  436b9c:	ldrb	w0, [x20]
  436ba0:	ldrb	w1, [x20, #1]
  436ba4:	lsl	w1, w1, #16
  436ba8:	orr	w0, w1, w0, lsl #24
  436bac:	ldrb	w1, [x20, #2]
  436bb0:	ldrb	w2, [x20, #3]
  436bb4:	orr	w1, w2, w1, lsl #8
  436bb8:	orr	w0, w0, w1
  436bbc:	b	436be8 <ferror@plt+0x34318>
  436bc0:	ldrb	w0, [x20, #3]
  436bc4:	ldrb	w1, [x20, #2]
  436bc8:	lsl	w1, w1, #16
  436bcc:	orr	w0, w1, w0, lsl #24
  436bd0:	ldrb	w1, [x20, #1]
  436bd4:	ldrb	w2, [x20]
  436bd8:	orr	w1, w2, w1, lsl #8
  436bdc:	orr	w0, w0, w1
  436be0:	b	436be8 <ferror@plt+0x34318>
  436be4:	mov	w0, #0x0                   	// #0
  436be8:	ldp	x19, x20, [sp, #16]
  436bec:	ldp	x29, x30, [sp], #32
  436bf0:	ret
  436bf4:	stp	x29, x30, [sp, #-32]!
  436bf8:	mov	x29, sp
  436bfc:	stp	x19, x20, [sp, #16]
  436c00:	mov	x20, x0
  436c04:	ldr	x19, [x0, #16]
  436c08:	mov	x1, #0x8                   	// #8
  436c0c:	bl	436b08 <ferror@plt+0x34238>
  436c10:	cbz	w0, 436cb4 <ferror@plt+0x343e4>
  436c14:	ldr	w0, [x20, #32]
  436c18:	cbz	w0, 436c68 <ferror@plt+0x34398>
  436c1c:	ldrb	w0, [x19]
  436c20:	ldrb	w1, [x19, #1]
  436c24:	lsl	x1, x1, #48
  436c28:	orr	x0, x1, x0, lsl #56
  436c2c:	ldrb	w1, [x19, #2]
  436c30:	ldrb	w2, [x19, #3]
  436c34:	lsl	x2, x2, #32
  436c38:	orr	x1, x2, x1, lsl #40
  436c3c:	orr	x0, x0, x1
  436c40:	ldrb	w1, [x19, #4]
  436c44:	ldrb	w2, [x19, #5]
  436c48:	lsl	x2, x2, #16
  436c4c:	orr	x1, x2, x1, lsl #24
  436c50:	orr	x0, x0, x1
  436c54:	ldrb	w1, [x19, #6]
  436c58:	ldrb	w2, [x19, #7]
  436c5c:	orr	x1, x2, x1, lsl #8
  436c60:	orr	x0, x0, x1
  436c64:	b	436cb8 <ferror@plt+0x343e8>
  436c68:	ldrb	w0, [x19, #7]
  436c6c:	ldrb	w1, [x19, #6]
  436c70:	lsl	x1, x1, #48
  436c74:	orr	x0, x1, x0, lsl #56
  436c78:	ldrb	w1, [x19, #5]
  436c7c:	ldrb	w2, [x19, #4]
  436c80:	lsl	x2, x2, #32
  436c84:	orr	x1, x2, x1, lsl #40
  436c88:	orr	x0, x0, x1
  436c8c:	ldrb	w1, [x19, #3]
  436c90:	ldrb	w2, [x19, #2]
  436c94:	lsl	x2, x2, #16
  436c98:	orr	x1, x2, x1, lsl #24
  436c9c:	orr	x0, x0, x1
  436ca0:	ldrb	w1, [x19, #1]
  436ca4:	ldrb	w2, [x19]
  436ca8:	orr	x1, x2, x1, lsl #8
  436cac:	orr	x0, x0, x1
  436cb0:	b	436cb8 <ferror@plt+0x343e8>
  436cb4:	mov	x0, #0x0                   	// #0
  436cb8:	ldp	x19, x20, [sp, #16]
  436cbc:	ldp	x29, x30, [sp], #32
  436cc0:	ret
  436cc4:	stp	x29, x30, [sp, #-16]!
  436cc8:	mov	x29, sp
  436ccc:	cbz	w1, 436cdc <ferror@plt+0x3440c>
  436cd0:	bl	436bf4 <ferror@plt+0x34324>
  436cd4:	ldp	x29, x30, [sp], #16
  436cd8:	ret
  436cdc:	bl	436b74 <ferror@plt+0x342a4>
  436ce0:	mov	w0, w0
  436ce4:	b	436cd4 <ferror@plt+0x34404>
  436ce8:	stp	x29, x30, [sp, #-32]!
  436cec:	mov	x29, sp
  436cf0:	stp	x19, x20, [sp, #16]
  436cf4:	mov	x19, x0
  436cf8:	ldr	x20, [x0, #16]
  436cfc:	mov	x1, #0x2                   	// #2
  436d00:	bl	436b08 <ferror@plt+0x34238>
  436d04:	cbz	w0, 436d30 <ferror@plt+0x34460>
  436d08:	ldr	w0, [x19, #32]
  436d0c:	cbz	w0, 436d20 <ferror@plt+0x34450>
  436d10:	ldrb	w1, [x20]
  436d14:	ldrb	w0, [x20, #1]
  436d18:	bfi	w0, w1, #8, #24
  436d1c:	b	436d34 <ferror@plt+0x34464>
  436d20:	ldrb	w1, [x20, #1]
  436d24:	ldrb	w0, [x20]
  436d28:	bfi	w0, w1, #8, #24
  436d2c:	b	436d34 <ferror@plt+0x34464>
  436d30:	mov	w0, #0x0                   	// #0
  436d34:	ldp	x19, x20, [sp, #16]
  436d38:	ldp	x29, x30, [sp], #32
  436d3c:	ret
  436d40:	stp	x29, x30, [sp, #-32]!
  436d44:	mov	x29, sp
  436d48:	str	x19, [sp, #16]
  436d4c:	ldr	x19, [x0, #16]
  436d50:	mov	x1, #0x1                   	// #1
  436d54:	bl	436b08 <ferror@plt+0x34238>
  436d58:	cbz	w0, 436d6c <ferror@plt+0x3449c>
  436d5c:	ldrb	w0, [x19]
  436d60:	ldr	x19, [sp, #16]
  436d64:	ldp	x29, x30, [sp], #32
  436d68:	ret
  436d6c:	mov	w0, #0x0                   	// #0
  436d70:	b	436d60 <ferror@plt+0x34490>
  436d74:	stp	x29, x30, [sp, #-80]!
  436d78:	mov	x29, sp
  436d7c:	stp	x19, x20, [sp, #16]
  436d80:	stp	x21, x22, [sp, #32]
  436d84:	stp	x23, x24, [sp, #48]
  436d88:	stp	x25, x26, [sp, #64]
  436d8c:	mov	x20, x0
  436d90:	mov	w24, #0x0                   	// #0
  436d94:	mov	w19, #0x0                   	// #0
  436d98:	mov	x22, #0x0                   	// #0
  436d9c:	mov	x23, #0x1                   	// #1
  436da0:	adrp	x25, 464000 <_obstack_memory_used@@Base+0x1d094>
  436da4:	add	x25, x25, #0x9b8
  436da8:	mov	w26, #0x1                   	// #1
  436dac:	b	436dbc <ferror@plt+0x344ec>
  436db0:	cbz	w24, 436dec <ferror@plt+0x3451c>
  436db4:	add	w19, w19, #0x7
  436db8:	tbz	w21, #7, 436e04 <ferror@plt+0x34534>
  436dbc:	ldr	x21, [x20, #16]
  436dc0:	mov	x1, x23
  436dc4:	mov	x0, x20
  436dc8:	bl	436b08 <ferror@plt+0x34238>
  436dcc:	cbz	w0, 436e00 <ferror@plt+0x34530>
  436dd0:	ldrb	w21, [x21]
  436dd4:	cmp	w19, #0x3f
  436dd8:	b.hi	436db0 <ferror@plt+0x344e0>  // b.pmore
  436ddc:	and	x0, x21, #0x7f
  436de0:	lsl	x0, x0, x19
  436de4:	orr	x22, x22, x0
  436de8:	b	436db4 <ferror@plt+0x344e4>
  436dec:	mov	x1, x25
  436df0:	mov	x0, x20
  436df4:	bl	436aac <ferror@plt+0x341dc>
  436df8:	mov	w24, w26
  436dfc:	b	436db4 <ferror@plt+0x344e4>
  436e00:	mov	x22, #0x0                   	// #0
  436e04:	mov	x0, x22
  436e08:	ldp	x19, x20, [sp, #16]
  436e0c:	ldp	x21, x22, [sp, #32]
  436e10:	ldp	x23, x24, [sp, #48]
  436e14:	ldp	x25, x26, [sp, #64]
  436e18:	ldp	x29, x30, [sp], #80
  436e1c:	ret
  436e20:	stp	x29, x30, [sp, #-16]!
  436e24:	mov	x29, sp
  436e28:	cmp	w1, #0x4
  436e2c:	b.eq	436e70 <ferror@plt+0x345a0>  // b.none
  436e30:	b.gt	436e50 <ferror@plt+0x34580>
  436e34:	cmp	w1, #0x1
  436e38:	b.eq	436e60 <ferror@plt+0x34590>  // b.none
  436e3c:	cmp	w1, #0x2
  436e40:	b.ne	436e7c <ferror@plt+0x345ac>  // b.any
  436e44:	bl	436ce8 <ferror@plt+0x34418>
  436e48:	and	x0, x0, #0xffff
  436e4c:	b	436e68 <ferror@plt+0x34598>
  436e50:	cmp	w1, #0x8
  436e54:	b.ne	436e7c <ferror@plt+0x345ac>  // b.any
  436e58:	bl	436bf4 <ferror@plt+0x34324>
  436e5c:	b	436e68 <ferror@plt+0x34598>
  436e60:	bl	436d40 <ferror@plt+0x34470>
  436e64:	and	x0, x0, #0xff
  436e68:	ldp	x29, x30, [sp], #16
  436e6c:	ret
  436e70:	bl	436b74 <ferror@plt+0x342a4>
  436e74:	mov	w0, w0
  436e78:	b	436e68 <ferror@plt+0x34598>
  436e7c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d094>
  436e80:	add	x1, x1, #0x9d8
  436e84:	bl	436aac <ferror@plt+0x341dc>
  436e88:	mov	x0, #0x0                   	// #0
  436e8c:	b	436e68 <ferror@plt+0x34598>
  436e90:	stp	x29, x30, [sp, #-80]!
  436e94:	mov	x29, sp
  436e98:	stp	x19, x20, [sp, #16]
  436e9c:	stp	x21, x22, [sp, #32]
  436ea0:	stp	x23, x24, [sp, #48]
  436ea4:	stp	x25, x26, [sp, #64]
  436ea8:	mov	x21, x0
  436eac:	mov	w24, #0x0                   	// #0
  436eb0:	mov	w19, #0x0                   	// #0
  436eb4:	mov	x22, #0x0                   	// #0
  436eb8:	mov	x23, #0x1                   	// #1
  436ebc:	adrp	x25, 464000 <_obstack_memory_used@@Base+0x1d094>
  436ec0:	add	x25, x25, #0x9f8
  436ec4:	mov	w26, #0x1                   	// #1
  436ec8:	b	436ed8 <ferror@plt+0x34608>
  436ecc:	cbz	w24, 436f08 <ferror@plt+0x34638>
  436ed0:	add	w19, w19, #0x7
  436ed4:	tbz	w20, #7, 436f1c <ferror@plt+0x3464c>
  436ed8:	ldr	x20, [x21, #16]
  436edc:	mov	x1, x23
  436ee0:	mov	x0, x21
  436ee4:	bl	436b08 <ferror@plt+0x34238>
  436ee8:	cbz	w0, 436f3c <ferror@plt+0x3466c>
  436eec:	ldrb	w20, [x20]
  436ef0:	cmp	w19, #0x3f
  436ef4:	b.hi	436ecc <ferror@plt+0x345fc>  // b.pmore
  436ef8:	and	x0, x20, #0x7f
  436efc:	lsl	x0, x0, x19
  436f00:	orr	x22, x22, x0
  436f04:	b	436ed0 <ferror@plt+0x34600>
  436f08:	mov	x1, x25
  436f0c:	mov	x0, x21
  436f10:	bl	436aac <ferror@plt+0x341dc>
  436f14:	mov	w24, w26
  436f18:	b	436ed0 <ferror@plt+0x34600>
  436f1c:	and	w20, w20, #0x40
  436f20:	cmp	w19, #0x3f
  436f24:	mov	x0, #0xffffffffffffffff    	// #-1
  436f28:	lsl	x0, x0, x19
  436f2c:	orr	x0, x22, x0
  436f30:	ccmp	w20, #0x0, #0x4, ls  // ls = plast
  436f34:	csel	x0, x0, x22, ne  // ne = any
  436f38:	b	436f40 <ferror@plt+0x34670>
  436f3c:	mov	x0, #0x0                   	// #0
  436f40:	ldp	x19, x20, [sp, #16]
  436f44:	ldp	x21, x22, [sp, #32]
  436f48:	ldp	x23, x24, [sp, #48]
  436f4c:	ldp	x25, x26, [sp, #64]
  436f50:	ldp	x29, x30, [sp], #80
  436f54:	ret
  436f58:	stp	x29, x30, [sp, #-32]!
  436f5c:	mov	x29, sp
  436f60:	stp	x19, x20, [sp, #16]
  436f64:	mov	x19, x0
  436f68:	ldr	x20, [x0, #16]
  436f6c:	ldr	x1, [x0, #24]
  436f70:	mov	x0, x20
  436f74:	bl	402300 <strnlen@plt>
  436f78:	add	x1, x0, #0x1
  436f7c:	mov	x0, x19
  436f80:	bl	436b08 <ferror@plt+0x34238>
  436f84:	cmp	w0, #0x0
  436f88:	csel	x0, x20, xzr, ne  // ne = any
  436f8c:	ldp	x19, x20, [sp, #16]
  436f90:	ldp	x29, x30, [sp], #32
  436f94:	ret
  436f98:	sub	sp, sp, #0x60
  436f9c:	stp	x29, x30, [sp, #16]
  436fa0:	add	x29, sp, #0x10
  436fa4:	stp	x19, x20, [sp, #32]
  436fa8:	stp	x21, x22, [sp, #48]
  436fac:	mov	x19, x1
  436fb0:	mov	w21, w2
  436fb4:	mov	x22, x7
  436fb8:	ldr	x20, [sp, #96]
  436fbc:	stp	xzr, xzr, [x20]
  436fc0:	cmp	w0, #0x20
  436fc4:	b.hi	437008 <ferror@plt+0x34738>  // b.pmore
  436fc8:	stp	x23, x24, [sp, #64]
  436fcc:	stp	x25, x26, [sp, #80]
  436fd0:	mov	w24, w3
  436fd4:	mov	w23, w4
  436fd8:	mov	x26, x5
  436fdc:	mov	x25, x6
  436fe0:	cbz	w0, 437538 <ferror@plt+0x34c68>
  436fe4:	sub	w0, w0, #0x1
  436fe8:	cmp	w0, #0x1f
  436fec:	b.hi	437558 <ferror@plt+0x34c88>  // b.pmore
  436ff0:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d094>
  436ff4:	add	x1, x1, #0xc74
  436ff8:	ldrh	w0, [x1, w0, uxtw #1]
  436ffc:	adr	x1, 437008 <ferror@plt+0x34738>
  437000:	add	x0, x1, w0, sxth #2
  437004:	br	x0
  437008:	mov	w1, #0x1f20                	// #7968
  43700c:	cmp	w0, w1
  437010:	b.eq	4374e4 <ferror@plt+0x34c14>  // b.none
  437014:	b.ls	43705c <ferror@plt+0x3478c>  // b.plast
  437018:	mov	w1, #0x1f21                	// #7969
  43701c:	cmp	w0, w1
  437020:	b.ne	437540 <ferror@plt+0x34c70>  // b.any
  437024:	mov	w1, w2
  437028:	mov	x0, x19
  43702c:	bl	436cc4 <ferror@plt+0x343f4>
  437030:	cbz	x22, 437514 <ferror@plt+0x34c44>
  437034:	ldr	x1, [x22, #112]
  437038:	cmp	x1, x0
  43703c:	b.ls	437520 <ferror@plt+0x34c50>  // b.plast
  437040:	mov	w1, #0x4                   	// #4
  437044:	str	w1, [x20]
  437048:	ldr	x1, [x22, #104]
  43704c:	add	x0, x1, x0
  437050:	str	x0, [x20, #8]
  437054:	mov	w0, #0x1                   	// #1
  437058:	b	4370b4 <ferror@plt+0x347e4>
  43705c:	mov	w1, #0x1f01                	// #7937
  437060:	cmp	w0, w1
  437064:	b.eq	4374c8 <ferror@plt+0x34bf8>  // b.none
  437068:	mov	w1, #0x1f02                	// #7938
  43706c:	cmp	w0, w1
  437070:	b.ne	437540 <ferror@plt+0x34c70>  // b.any
  437074:	mov	w0, #0x8                   	// #8
  437078:	str	w0, [x20]
  43707c:	mov	x0, x19
  437080:	bl	436d74 <ferror@plt+0x344a4>
  437084:	str	x0, [x20, #8]
  437088:	mov	w0, #0x1                   	// #1
  43708c:	b	4370b4 <ferror@plt+0x347e4>
  437090:	mov	w21, #0x1                   	// #1
  437094:	str	w21, [x20]
  437098:	mov	w1, w4
  43709c:	mov	x0, x19
  4370a0:	bl	436e20 <ferror@plt+0x34550>
  4370a4:	str	x0, [x20, #8]
  4370a8:	mov	w0, w21
  4370ac:	ldp	x23, x24, [sp, #64]
  4370b0:	ldp	x25, x26, [sp, #80]
  4370b4:	ldp	x19, x20, [sp, #32]
  4370b8:	ldp	x21, x22, [sp, #48]
  4370bc:	ldp	x29, x30, [sp, #16]
  4370c0:	add	sp, sp, #0x60
  4370c4:	ret
  4370c8:	mov	w0, #0xa                   	// #10
  4370cc:	str	w0, [x20]
  4370d0:	mov	x0, x19
  4370d4:	bl	436ce8 <ferror@plt+0x34418>
  4370d8:	and	x1, x0, #0xffff
  4370dc:	mov	x0, x19
  4370e0:	bl	436b08 <ferror@plt+0x34238>
  4370e4:	ldp	x23, x24, [sp, #64]
  4370e8:	ldp	x25, x26, [sp, #80]
  4370ec:	b	4370b4 <ferror@plt+0x347e4>
  4370f0:	mov	w0, #0xa                   	// #10
  4370f4:	str	w0, [x20]
  4370f8:	mov	x0, x19
  4370fc:	bl	436b74 <ferror@plt+0x342a4>
  437100:	mov	w1, w0
  437104:	mov	x0, x19
  437108:	bl	436b08 <ferror@plt+0x34238>
  43710c:	ldp	x23, x24, [sp, #64]
  437110:	ldp	x25, x26, [sp, #80]
  437114:	b	4370b4 <ferror@plt+0x347e4>
  437118:	mov	w0, #0x2                   	// #2
  43711c:	str	w0, [x20]
  437120:	mov	x0, x19
  437124:	bl	436ce8 <ferror@plt+0x34418>
  437128:	and	x0, x0, #0xffff
  43712c:	str	x0, [x20, #8]
  437130:	mov	w0, #0x1                   	// #1
  437134:	ldp	x23, x24, [sp, #64]
  437138:	ldp	x25, x26, [sp, #80]
  43713c:	b	4370b4 <ferror@plt+0x347e4>
  437140:	mov	w0, #0x2                   	// #2
  437144:	str	w0, [x20]
  437148:	mov	x0, x19
  43714c:	bl	436b74 <ferror@plt+0x342a4>
  437150:	mov	w0, w0
  437154:	str	x0, [x20, #8]
  437158:	mov	w0, #0x1                   	// #1
  43715c:	ldp	x23, x24, [sp, #64]
  437160:	ldp	x25, x26, [sp, #80]
  437164:	b	4370b4 <ferror@plt+0x347e4>
  437168:	mov	w0, #0x2                   	// #2
  43716c:	str	w0, [x20]
  437170:	mov	x0, x19
  437174:	bl	436bf4 <ferror@plt+0x34324>
  437178:	str	x0, [x20, #8]
  43717c:	mov	w0, #0x1                   	// #1
  437180:	ldp	x23, x24, [sp, #64]
  437184:	ldp	x25, x26, [sp, #80]
  437188:	b	4370b4 <ferror@plt+0x347e4>
  43718c:	mov	w0, #0x4                   	// #4
  437190:	str	w0, [x20]
  437194:	mov	x0, x19
  437198:	bl	436f58 <ferror@plt+0x34688>
  43719c:	str	x0, [x20, #8]
  4371a0:	cmp	x0, #0x0
  4371a4:	cset	w0, ne  // ne = any
  4371a8:	ldp	x23, x24, [sp, #64]
  4371ac:	ldp	x25, x26, [sp, #80]
  4371b0:	b	4370b4 <ferror@plt+0x347e4>
  4371b4:	mov	w0, #0xa                   	// #10
  4371b8:	str	w0, [x20]
  4371bc:	mov	x0, x19
  4371c0:	bl	436d74 <ferror@plt+0x344a4>
  4371c4:	mov	x1, x0
  4371c8:	mov	x0, x19
  4371cc:	bl	436b08 <ferror@plt+0x34238>
  4371d0:	ldp	x23, x24, [sp, #64]
  4371d4:	ldp	x25, x26, [sp, #80]
  4371d8:	b	4370b4 <ferror@plt+0x347e4>
  4371dc:	mov	w0, #0xa                   	// #10
  4371e0:	str	w0, [x20]
  4371e4:	mov	x0, x19
  4371e8:	bl	436d40 <ferror@plt+0x34470>
  4371ec:	and	x1, x0, #0xff
  4371f0:	mov	x0, x19
  4371f4:	bl	436b08 <ferror@plt+0x34238>
  4371f8:	ldp	x23, x24, [sp, #64]
  4371fc:	ldp	x25, x26, [sp, #80]
  437200:	b	4370b4 <ferror@plt+0x347e4>
  437204:	mov	w0, #0x2                   	// #2
  437208:	str	w0, [x20]
  43720c:	mov	x0, x19
  437210:	bl	436d40 <ferror@plt+0x34470>
  437214:	and	x0, x0, #0xff
  437218:	str	x0, [x20, #8]
  43721c:	mov	w0, #0x1                   	// #1
  437220:	ldp	x23, x24, [sp, #64]
  437224:	ldp	x25, x26, [sp, #80]
  437228:	b	4370b4 <ferror@plt+0x347e4>
  43722c:	mov	w0, #0x2                   	// #2
  437230:	str	w0, [x20]
  437234:	mov	x0, x19
  437238:	bl	436d40 <ferror@plt+0x34470>
  43723c:	and	x0, x0, #0xff
  437240:	str	x0, [x20, #8]
  437244:	mov	w0, #0x1                   	// #1
  437248:	ldp	x23, x24, [sp, #64]
  43724c:	ldp	x25, x26, [sp, #80]
  437250:	b	4370b4 <ferror@plt+0x347e4>
  437254:	mov	w0, #0x3                   	// #3
  437258:	str	w0, [x20]
  43725c:	mov	x0, x19
  437260:	bl	436e90 <ferror@plt+0x345c0>
  437264:	str	x0, [x20, #8]
  437268:	mov	w0, #0x1                   	// #1
  43726c:	ldp	x23, x24, [sp, #64]
  437270:	ldp	x25, x26, [sp, #80]
  437274:	b	4370b4 <ferror@plt+0x347e4>
  437278:	mov	w1, w2
  43727c:	mov	x0, x19
  437280:	bl	436cc4 <ferror@plt+0x343f4>
  437284:	cmp	x25, x0
  437288:	b.ls	4372ac <ferror@plt+0x349dc>  // b.plast
  43728c:	mov	w1, #0x4                   	// #4
  437290:	str	w1, [x20]
  437294:	add	x0, x26, x0
  437298:	str	x0, [x20, #8]
  43729c:	mov	w0, #0x1                   	// #1
  4372a0:	ldp	x23, x24, [sp, #64]
  4372a4:	ldp	x25, x26, [sp, #80]
  4372a8:	b	4370b4 <ferror@plt+0x347e4>
  4372ac:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d094>
  4372b0:	add	x1, x1, #0xa20
  4372b4:	mov	x0, x19
  4372b8:	bl	436aac <ferror@plt+0x341dc>
  4372bc:	mov	w0, #0x0                   	// #0
  4372c0:	ldp	x23, x24, [sp, #64]
  4372c4:	ldp	x25, x26, [sp, #80]
  4372c8:	b	4370b4 <ferror@plt+0x347e4>
  4372cc:	mov	w0, #0x2                   	// #2
  4372d0:	str	w0, [x20]
  4372d4:	mov	x0, x19
  4372d8:	bl	436d74 <ferror@plt+0x344a4>
  4372dc:	str	x0, [x20, #8]
  4372e0:	mov	w0, #0x1                   	// #1
  4372e4:	ldp	x23, x24, [sp, #64]
  4372e8:	ldp	x25, x26, [sp, #80]
  4372ec:	b	4370b4 <ferror@plt+0x347e4>
  4372f0:	mov	w0, #0x6                   	// #6
  4372f4:	str	w0, [x20]
  4372f8:	cmp	w3, #0x2
  4372fc:	b.eq	437320 <ferror@plt+0x34a50>  // b.none
  437300:	mov	w1, w2
  437304:	mov	x0, x19
  437308:	bl	436cc4 <ferror@plt+0x343f4>
  43730c:	str	x0, [x20, #8]
  437310:	mov	w0, #0x1                   	// #1
  437314:	ldp	x23, x24, [sp, #64]
  437318:	ldp	x25, x26, [sp, #80]
  43731c:	b	4370b4 <ferror@plt+0x347e4>
  437320:	mov	w1, w4
  437324:	mov	x0, x19
  437328:	bl	436e20 <ferror@plt+0x34550>
  43732c:	str	x0, [x20, #8]
  437330:	mov	w0, #0x1                   	// #1
  437334:	ldp	x23, x24, [sp, #64]
  437338:	ldp	x25, x26, [sp, #80]
  43733c:	b	4370b4 <ferror@plt+0x347e4>
  437340:	mov	w0, #0x5                   	// #5
  437344:	str	w0, [x20]
  437348:	mov	x0, x19
  43734c:	bl	436d40 <ferror@plt+0x34470>
  437350:	and	x0, x0, #0xff
  437354:	str	x0, [x20, #8]
  437358:	mov	w0, #0x1                   	// #1
  43735c:	ldp	x23, x24, [sp, #64]
  437360:	ldp	x25, x26, [sp, #80]
  437364:	b	4370b4 <ferror@plt+0x347e4>
  437368:	mov	w0, #0x5                   	// #5
  43736c:	str	w0, [x20]
  437370:	mov	x0, x19
  437374:	bl	436ce8 <ferror@plt+0x34418>
  437378:	and	x0, x0, #0xffff
  43737c:	str	x0, [x20, #8]
  437380:	mov	w0, #0x1                   	// #1
  437384:	ldp	x23, x24, [sp, #64]
  437388:	ldp	x25, x26, [sp, #80]
  43738c:	b	4370b4 <ferror@plt+0x347e4>
  437390:	mov	w0, #0x5                   	// #5
  437394:	str	w0, [x20]
  437398:	mov	x0, x19
  43739c:	bl	436b74 <ferror@plt+0x342a4>
  4373a0:	mov	w0, w0
  4373a4:	str	x0, [x20, #8]
  4373a8:	mov	w0, #0x1                   	// #1
  4373ac:	ldp	x23, x24, [sp, #64]
  4373b0:	ldp	x25, x26, [sp, #80]
  4373b4:	b	4370b4 <ferror@plt+0x347e4>
  4373b8:	mov	w0, #0x5                   	// #5
  4373bc:	str	w0, [x20]
  4373c0:	mov	x0, x19
  4373c4:	bl	436bf4 <ferror@plt+0x34324>
  4373c8:	str	x0, [x20, #8]
  4373cc:	mov	w0, #0x1                   	// #1
  4373d0:	ldp	x23, x24, [sp, #64]
  4373d4:	ldp	x25, x26, [sp, #80]
  4373d8:	b	4370b4 <ferror@plt+0x347e4>
  4373dc:	mov	w0, #0x5                   	// #5
  4373e0:	str	w0, [x20]
  4373e4:	mov	x0, x19
  4373e8:	bl	436d74 <ferror@plt+0x344a4>
  4373ec:	str	x0, [x20, #8]
  4373f0:	mov	w0, #0x1                   	// #1
  4373f4:	ldp	x23, x24, [sp, #64]
  4373f8:	ldp	x25, x26, [sp, #80]
  4373fc:	b	4370b4 <ferror@plt+0x347e4>
  437400:	mov	x0, x19
  437404:	bl	436d74 <ferror@plt+0x344a4>
  437408:	str	x20, [sp]
  43740c:	mov	x7, x22
  437410:	mov	x6, x25
  437414:	mov	x5, x26
  437418:	mov	w4, w23
  43741c:	mov	w3, w24
  437420:	mov	w2, w21
  437424:	mov	x1, x19
  437428:	bl	436f98 <ferror@plt+0x346c8>
  43742c:	ldp	x23, x24, [sp, #64]
  437430:	ldp	x25, x26, [sp, #80]
  437434:	b	4370b4 <ferror@plt+0x347e4>
  437438:	mov	w0, #0x8                   	// #8
  43743c:	str	w0, [x20]
  437440:	mov	w1, w2
  437444:	mov	x0, x19
  437448:	bl	436cc4 <ferror@plt+0x343f4>
  43744c:	str	x0, [x20, #8]
  437450:	mov	w0, #0x1                   	// #1
  437454:	ldp	x23, x24, [sp, #64]
  437458:	ldp	x25, x26, [sp, #80]
  43745c:	b	4370b4 <ferror@plt+0x347e4>
  437460:	mov	w0, #0xb                   	// #11
  437464:	str	w0, [x20]
  437468:	mov	x0, x19
  43746c:	bl	436d74 <ferror@plt+0x344a4>
  437470:	mov	x1, x0
  437474:	mov	x0, x19
  437478:	bl	436b08 <ferror@plt+0x34238>
  43747c:	ldp	x23, x24, [sp, #64]
  437480:	ldp	x25, x26, [sp, #80]
  437484:	b	4370b4 <ferror@plt+0x347e4>
  437488:	mov	w0, #0x2                   	// #2
  43748c:	str	w0, [x20]
  437490:	mov	x0, #0x1                   	// #1
  437494:	str	x0, [x20, #8]
  437498:	ldp	x23, x24, [sp, #64]
  43749c:	ldp	x25, x26, [sp, #80]
  4374a0:	b	4370b4 <ferror@plt+0x347e4>
  4374a4:	mov	w0, #0x9                   	// #9
  4374a8:	str	w0, [x20]
  4374ac:	mov	x0, x19
  4374b0:	bl	436bf4 <ferror@plt+0x34324>
  4374b4:	str	x0, [x20, #8]
  4374b8:	mov	w0, #0x1                   	// #1
  4374bc:	ldp	x23, x24, [sp, #64]
  4374c0:	ldp	x25, x26, [sp, #80]
  4374c4:	b	4370b4 <ferror@plt+0x347e4>
  4374c8:	mov	w0, #0x8                   	// #8
  4374cc:	str	w0, [x20]
  4374d0:	mov	x0, x19
  4374d4:	bl	436d74 <ferror@plt+0x344a4>
  4374d8:	str	x0, [x20, #8]
  4374dc:	mov	w0, #0x1                   	// #1
  4374e0:	b	4370b4 <ferror@plt+0x347e4>
  4374e4:	mov	w1, w2
  4374e8:	mov	x0, x19
  4374ec:	bl	436cc4 <ferror@plt+0x343f4>
  4374f0:	str	x0, [x20, #8]
  4374f4:	cbz	x22, 437508 <ferror@plt+0x34c38>
  4374f8:	mov	w0, #0x7                   	// #7
  4374fc:	str	w0, [x20]
  437500:	mov	w0, #0x1                   	// #1
  437504:	b	4370b4 <ferror@plt+0x347e4>
  437508:	str	wzr, [x20]
  43750c:	mov	w0, #0x1                   	// #1
  437510:	b	4370b4 <ferror@plt+0x347e4>
  437514:	str	wzr, [x20]
  437518:	mov	w0, #0x1                   	// #1
  43751c:	b	4370b4 <ferror@plt+0x347e4>
  437520:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d094>
  437524:	add	x1, x1, #0xa40
  437528:	mov	x0, x19
  43752c:	bl	436aac <ferror@plt+0x341dc>
  437530:	mov	w0, #0x0                   	// #0
  437534:	b	4370b4 <ferror@plt+0x347e4>
  437538:	ldp	x23, x24, [sp, #64]
  43753c:	ldp	x25, x26, [sp, #80]
  437540:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d094>
  437544:	add	x1, x1, #0xa68
  437548:	mov	x0, x19
  43754c:	bl	436aac <ferror@plt+0x341dc>
  437550:	mov	w0, #0x0                   	// #0
  437554:	b	4370b4 <ferror@plt+0x347e4>
  437558:	ldp	x23, x24, [sp, #64]
  43755c:	ldp	x25, x26, [sp, #80]
  437560:	b	437540 <ferror@plt+0x34c70>
  437564:	ldp	x23, x24, [sp, #64]
  437568:	ldp	x25, x26, [sp, #80]
  43756c:	b	437540 <ferror@plt+0x34c70>
  437570:	sub	sp, sp, #0xd0
  437574:	stp	x29, x30, [sp, #16]
  437578:	add	x29, sp, #0x10
  43757c:	stp	x19, x20, [sp, #32]
  437580:	stp	x25, x26, [sp, #80]
  437584:	mov	x20, x0
  437588:	mov	x26, x3
  43758c:	str	x4, [sp, #120]
  437590:	ldr	x0, [x1, #16]
  437594:	cmp	x0, x2
  437598:	b.hi	437648 <ferror@plt+0x34d78>  // b.pmore
  43759c:	mov	x19, x1
  4375a0:	sub	x5, x2, x0
  4375a4:	ldr	x4, [x1, #8]
  4375a8:	cmp	x5, x4
  4375ac:	b.cs	437648 <ferror@plt+0x34d78>  // b.hs, b.nlast
  4375b0:	adrp	x3, 463000 <_obstack_memory_used@@Base+0x1c094>
  4375b4:	add	x3, x3, #0xff0
  4375b8:	str	x3, [sp, #144]
  4375bc:	ldr	x1, [x20, #56]
  4375c0:	str	x1, [sp, #152]
  4375c4:	ldr	x1, [x19]
  4375c8:	add	x1, x1, x5
  4375cc:	str	x1, [sp, #160]
  4375d0:	add	x0, x0, x4
  4375d4:	sub	x0, x0, x2
  4375d8:	str	x0, [sp, #168]
  4375dc:	ldr	w0, [x20, #120]
  4375e0:	str	w0, [sp, #176]
  4375e4:	str	x26, [sp, #184]
  4375e8:	ldr	x0, [sp, #120]
  4375ec:	str	x0, [sp, #192]
  4375f0:	str	wzr, [sp, #200]
  4375f4:	add	x0, sp, #0x90
  4375f8:	bl	436d74 <ferror@plt+0x344a4>
  4375fc:	mov	x1, x0
  437600:	cbz	x0, 437678 <ferror@plt+0x34da8>
  437604:	stp	x23, x24, [sp, #64]
  437608:	ldr	x3, [sp, #120]
  43760c:	mov	x2, x26
  437610:	add	x0, x19, #0x58
  437614:	bl	43675c <ferror@plt+0x33e8c>
  437618:	mov	x23, x0
  43761c:	cbz	x0, 437794 <ferror@plt+0x34ec4>
  437620:	stp	x21, x22, [sp, #48]
  437624:	ldr	x0, [x0, #16]
  437628:	mov	x21, #0x0                   	// #0
  43762c:	mov	x25, #0x0                   	// #0
  437630:	cbz	x0, 437784 <ferror@plt+0x34eb4>
  437634:	stp	x27, x28, [sp, #96]
  437638:	add	x27, sp, #0x90
  43763c:	add	x24, sp, #0x80
  437640:	mov	w28, #0x2007                	// #8199
  437644:	b	4376f0 <ferror@plt+0x34e20>
  437648:	mov	w2, #0x0                   	// #0
  43764c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d094>
  437650:	add	x1, x1, #0xa80
  437654:	ldr	x0, [sp, #120]
  437658:	blr	x26
  43765c:	mov	x25, #0x0                   	// #0
  437660:	mov	x0, x25
  437664:	ldp	x19, x20, [sp, #32]
  437668:	ldp	x25, x26, [sp, #80]
  43766c:	ldp	x29, x30, [sp, #16]
  437670:	add	sp, sp, #0xd0
  437674:	ret
  437678:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d094>
  43767c:	add	x1, x1, #0xab0
  437680:	add	x0, sp, #0x90
  437684:	bl	436aac <ferror@plt+0x341dc>
  437688:	mov	x25, #0x0                   	// #0
  43768c:	b	437660 <ferror@plt+0x34d90>
  437690:	cmp	w0, #0x6e
  437694:	b.eq	4376a0 <ferror@plt+0x34dd0>  // b.none
  437698:	cmp	w0, w28
  43769c:	b.ne	4376e0 <ferror@plt+0x34e10>  // b.any
  4376a0:	ldr	w0, [sp, #128]
  4376a4:	cmp	w0, #0x4
  4376a8:	b.ne	4376e0 <ferror@plt+0x34e10>  // b.any
  4376ac:	ldr	x25, [sp, #136]
  4376b0:	ldp	x21, x22, [sp, #48]
  4376b4:	ldp	x23, x24, [sp, #64]
  4376b8:	ldp	x27, x28, [sp, #96]
  4376bc:	b	437660 <ferror@plt+0x34d90>
  4376c0:	ldr	x5, [sp, #120]
  4376c4:	mov	x4, x26
  4376c8:	mov	x3, x24
  4376cc:	mov	x1, x19
  4376d0:	mov	x0, x20
  4376d4:	bl	4377a0 <ferror@plt+0x34ed0>
  4376d8:	cmp	x0, #0x0
  4376dc:	csel	x25, x25, x0, eq  // eq = none
  4376e0:	add	x21, x21, #0x1
  4376e4:	ldr	x0, [x23, #16]
  4376e8:	cmp	x0, x21
  4376ec:	b.ls	437760 <ferror@plt+0x34e90>  // b.plast
  4376f0:	lsl	x22, x21, #3
  4376f4:	ldr	x0, [x23, #24]
  4376f8:	add	x0, x0, x22
  4376fc:	ldr	w0, [x0, #4]
  437700:	str	x24, [sp]
  437704:	ldr	x7, [x20, #8]
  437708:	ldr	x6, [x20, #112]
  43770c:	ldr	x5, [x20, #104]
  437710:	ldr	w4, [x19, #48]
  437714:	ldr	w3, [x19, #40]
  437718:	ldr	w2, [x19, #44]
  43771c:	mov	x1, x27
  437720:	bl	436f98 <ferror@plt+0x346c8>
  437724:	cbz	w0, 437770 <ferror@plt+0x34ea0>
  437728:	ldr	x0, [x23, #24]
  43772c:	add	x2, x0, x22
  437730:	ldr	w0, [x0, x22]
  437734:	cmp	w0, #0x47
  437738:	b.eq	4376c0 <ferror@plt+0x34df0>  // b.none
  43773c:	b.hi	437690 <ferror@plt+0x34dc0>  // b.pmore
  437740:	cmp	w0, #0x3
  437744:	b.ne	4376e0 <ferror@plt+0x34e10>  // b.any
  437748:	cbnz	x25, 4376e0 <ferror@plt+0x34e10>
  43774c:	ldr	w0, [sp, #128]
  437750:	cmp	w0, #0x4
  437754:	ldr	x0, [sp, #136]
  437758:	csel	x25, x0, x25, eq  // eq = none
  43775c:	b	4376e0 <ferror@plt+0x34e10>
  437760:	ldp	x21, x22, [sp, #48]
  437764:	ldp	x23, x24, [sp, #64]
  437768:	ldp	x27, x28, [sp, #96]
  43776c:	b	437660 <ferror@plt+0x34d90>
  437770:	mov	x25, #0x0                   	// #0
  437774:	ldp	x21, x22, [sp, #48]
  437778:	ldp	x23, x24, [sp, #64]
  43777c:	ldp	x27, x28, [sp, #96]
  437780:	b	437660 <ferror@plt+0x34d90>
  437784:	mov	x25, #0x0                   	// #0
  437788:	ldp	x21, x22, [sp, #48]
  43778c:	ldp	x23, x24, [sp, #64]
  437790:	b	437660 <ferror@plt+0x34d90>
  437794:	mov	x25, x0
  437798:	ldp	x23, x24, [sp, #64]
  43779c:	b	437660 <ferror@plt+0x34d90>
  4377a0:	stp	x29, x30, [sp, #-48]!
  4377a4:	mov	x29, sp
  4377a8:	stp	x19, x20, [sp, #16]
  4377ac:	stp	x21, x22, [sp, #32]
  4377b0:	mov	x19, x0
  4377b4:	mov	x6, x3
  4377b8:	mov	x20, x4
  4377bc:	mov	x21, x5
  4377c0:	ldr	w3, [x2]
  4377c4:	cmp	w3, #0x31
  4377c8:	b.eq	4377d8 <ferror@plt+0x34f08>  // b.none
  4377cc:	mov	x0, #0x0                   	// #0
  4377d0:	cmp	w3, #0x47
  4377d4:	b.ne	437808 <ferror@plt+0x34f38>  // b.any
  4377d8:	ldr	w0, [x2, #4]
  4377dc:	cmp	w0, #0x20
  4377e0:	b.eq	4378a4 <ferror@plt+0x34fd4>  // b.none
  4377e4:	ldr	w2, [x6]
  4377e8:	cmp	w2, #0x6
  4377ec:	b.eq	437818 <ferror@plt+0x34f48>  // b.none
  4377f0:	cmp	w2, #0x2
  4377f4:	ccmp	w2, #0x5, #0x4, ne  // ne = any
  4377f8:	b.eq	437850 <ferror@plt+0x34f80>  // b.none
  4377fc:	mov	x0, #0x0                   	// #0
  437800:	cmp	w2, #0x7
  437804:	b.eq	437868 <ferror@plt+0x34f98>  // b.none
  437808:	ldp	x19, x20, [sp, #16]
  43780c:	ldp	x21, x22, [sp, #32]
  437810:	ldp	x29, x30, [sp], #48
  437814:	ret
  437818:	ldr	x22, [x6, #8]
  43781c:	mov	x2, x22
  437820:	ldr	x1, [x19, #48]
  437824:	ldr	x0, [x19, #40]
  437828:	bl	436500 <ferror@plt+0x33c30>
  43782c:	cbz	x0, 437808 <ferror@plt+0x34f38>
  437830:	ldr	x2, [x0, #24]
  437834:	mov	x4, x21
  437838:	mov	x3, x20
  43783c:	sub	x2, x22, x2
  437840:	mov	x1, x0
  437844:	mov	x0, x19
  437848:	bl	437570 <ferror@plt+0x34ca0>
  43784c:	b	437808 <ferror@plt+0x34f38>
  437850:	mov	x4, x21
  437854:	mov	x3, x20
  437858:	ldr	x2, [x6, #8]
  43785c:	mov	x0, x19
  437860:	bl	437570 <ferror@plt+0x34ca0>
  437864:	b	437808 <ferror@plt+0x34f38>
  437868:	ldr	x19, [x19, #8]
  43786c:	ldr	x22, [x6, #8]
  437870:	mov	x2, x22
  437874:	ldr	x1, [x19, #48]
  437878:	ldr	x0, [x19, #40]
  43787c:	bl	436500 <ferror@plt+0x33c30>
  437880:	cbz	x0, 437808 <ferror@plt+0x34f38>
  437884:	ldr	x2, [x0, #24]
  437888:	mov	x4, x21
  43788c:	mov	x3, x20
  437890:	sub	x2, x22, x2
  437894:	mov	x1, x0
  437898:	mov	x0, x19
  43789c:	bl	437570 <ferror@plt+0x34ca0>
  4378a0:	b	437808 <ferror@plt+0x34f38>
  4378a4:	mov	x0, #0x0                   	// #0
  4378a8:	b	437808 <ferror@plt+0x34f38>
  4378ac:	sub	sp, sp, #0x170
  4378b0:	stp	x29, x30, [sp, #48]
  4378b4:	add	x29, sp, #0x30
  4378b8:	stp	x19, x20, [sp, #64]
  4378bc:	stp	x21, x22, [sp, #80]
  4378c0:	stp	x23, x24, [sp, #96]
  4378c4:	stp	x25, x26, [sp, #112]
  4378c8:	stp	x27, x28, [sp, #128]
  4378cc:	str	x0, [sp, #192]
  4378d0:	str	x1, [sp, #200]
  4378d4:	mov	x24, x2
  4378d8:	str	x5, [sp, #224]
  4378dc:	str	x6, [sp, #184]
  4378e0:	str	w7, [sp, #236]
  4378e4:	ldr	x22, [sp, #392]
  4378e8:	add	x0, sp, #0x130
  4378ec:	str	x0, [sp, #216]
  4378f0:	mov	x25, x0
  4378f4:	add	x0, sp, #0xf0
  4378f8:	str	x0, [sp, #208]
  4378fc:	str	x25, [sp, #176]
  437900:	mov	x28, x4
  437904:	mov	x26, x3
  437908:	ldr	x27, [sp, #368]
  43790c:	ldr	x0, [x24, #24]
  437910:	cbz	x0, 437d08 <ferror@plt+0x35438>
  437914:	mov	x0, x24
  437918:	bl	436d74 <ferror@plt+0x344a4>
  43791c:	mov	x1, x0
  437920:	cbz	x0, 437d10 <ferror@plt+0x35440>
  437924:	ldr	x3, [sp, #384]
  437928:	ldr	x2, [sp, #376]
  43792c:	add	x0, x22, #0x58
  437930:	bl	43675c <ferror@plt+0x33e8c>
  437934:	mov	x20, x0
  437938:	cbz	x0, 437d18 <ferror@plt+0x35448>
  43793c:	ldr	x0, [sp, #408]
  437940:	cbz	x0, 437950 <ferror@plt+0x35080>
  437944:	ldr	w0, [x20, #8]
  437948:	ldr	x1, [sp, #408]
  43794c:	str	w0, [x1]
  437950:	ldr	x0, [x20, #16]
  437954:	cbz	x0, 437b80 <ferror@plt+0x352b0>
  437958:	mov	x21, #0x0                   	// #0
  43795c:	str	wzr, [sp, #168]
  437960:	str	xzr, [sp, #160]
  437964:	str	wzr, [sp, #232]
  437968:	mov	w23, #0x0                   	// #0
  43796c:	str	xzr, [sp, #152]
  437970:	str	wzr, [sp, #172]
  437974:	str	xzr, [sp, #144]
  437978:	b	437a38 <ferror@plt+0x35168>
  43797c:	cmp	w0, #0x3
  437980:	b.ne	437a28 <ferror@plt+0x35158>  // b.any
  437984:	ldr	w0, [x20, #8]
  437988:	cmp	w0, #0x11
  43798c:	b.ne	437a28 <ferror@plt+0x35158>  // b.any
  437990:	ldr	w0, [sp, #304]
  437994:	cmp	w0, #0x4
  437998:	b.ne	437a28 <ferror@plt+0x35158>  // b.any
  43799c:	ldr	x0, [sp, #312]
  4379a0:	str	x0, [x22, #64]
  4379a4:	b	437a28 <ferror@plt+0x35158>
  4379a8:	cmp	w0, #0x1b
  4379ac:	b.eq	437ad0 <ferror@plt+0x35200>  // b.none
  4379b0:	cmp	w0, #0x55
  4379b4:	b.ne	437a28 <ferror@plt+0x35158>  // b.any
  4379b8:	ldr	w0, [sp, #304]
  4379bc:	cmp	w0, #0x2
  4379c0:	ccmp	w0, #0x8, #0x4, ne  // ne = any
  4379c4:	b.ne	437a28 <ferror@plt+0x35158>  // b.any
  4379c8:	ldr	x0, [sp, #312]
  4379cc:	str	x0, [sp, #160]
  4379d0:	mov	w0, #0x1                   	// #1
  4379d4:	str	w0, [sp, #168]
  4379d8:	b	437a28 <ferror@plt+0x35158>
  4379dc:	ldr	w0, [sp, #304]
  4379e0:	cmp	w0, #0x1
  4379e4:	b.eq	437a08 <ferror@plt+0x35138>  // b.none
  4379e8:	cmp	w0, #0x2
  4379ec:	b.ne	437a28 <ferror@plt+0x35158>  // b.any
  4379f0:	ldr	x0, [sp, #312]
  4379f4:	str	x0, [sp, #152]
  4379f8:	mov	w0, #0x1                   	// #1
  4379fc:	str	w0, [sp, #232]
  437a00:	mov	w23, w0
  437a04:	b	437a28 <ferror@plt+0x35158>
  437a08:	ldr	x0, [sp, #312]
  437a0c:	str	x0, [sp, #152]
  437a10:	mov	w0, #0x1                   	// #1
  437a14:	mov	w23, w0
  437a18:	b	437a28 <ferror@plt+0x35158>
  437a1c:	ldr	w0, [x20, #8]
  437a20:	cmp	w0, #0x11
  437a24:	b.eq	437ab4 <ferror@plt+0x351e4>  // b.none
  437a28:	add	x21, x21, #0x1
  437a2c:	ldr	x0, [x20, #16]
  437a30:	cmp	x0, x21
  437a34:	b.ls	437af4 <ferror@plt+0x35224>  // b.plast
  437a38:	lsl	x19, x21, #3
  437a3c:	ldr	x0, [x20, #24]
  437a40:	add	x0, x0, x19
  437a44:	ldr	w0, [x0, #4]
  437a48:	str	x25, [sp]
  437a4c:	mov	x7, x27
  437a50:	mov	x6, x28
  437a54:	mov	x5, x26
  437a58:	ldr	w4, [x22, #48]
  437a5c:	ldr	w3, [x22, #40]
  437a60:	ldr	w2, [x22, #44]
  437a64:	mov	x1, x24
  437a68:	bl	436f98 <ferror@plt+0x346c8>
  437a6c:	cbz	w0, 437d28 <ferror@plt+0x35458>
  437a70:	ldr	x0, [x20, #24]
  437a74:	ldr	w0, [x0, x19]
  437a78:	cmp	w0, #0x12
  437a7c:	b.eq	4379dc <ferror@plt+0x3510c>  // b.none
  437a80:	b.hi	4379a8 <ferror@plt+0x350d8>  // b.pmore
  437a84:	cmp	w0, #0x10
  437a88:	b.eq	437a1c <ferror@plt+0x3514c>  // b.none
  437a8c:	cmp	w0, #0x11
  437a90:	b.ne	43797c <ferror@plt+0x350ac>  // b.any
  437a94:	ldr	w0, [sp, #304]
  437a98:	cmp	w0, #0x1
  437a9c:	b.ne	437a28 <ferror@plt+0x35158>  // b.any
  437aa0:	ldr	x0, [sp, #312]
  437aa4:	str	x0, [sp, #144]
  437aa8:	mov	w0, #0x1                   	// #1
  437aac:	str	w0, [sp, #172]
  437ab0:	b	437a28 <ferror@plt+0x35158>
  437ab4:	ldr	w0, [sp, #304]
  437ab8:	cmp	w0, #0x2
  437abc:	ccmp	w0, #0x8, #0x4, ne  // ne = any
  437ac0:	b.ne	437a28 <ferror@plt+0x35158>  // b.any
  437ac4:	ldr	x0, [sp, #312]
  437ac8:	str	x0, [x22, #56]
  437acc:	b	437a28 <ferror@plt+0x35158>
  437ad0:	ldr	w0, [x20, #8]
  437ad4:	cmp	w0, #0x11
  437ad8:	b.ne	437a28 <ferror@plt+0x35158>  // b.any
  437adc:	ldr	w0, [sp, #304]
  437ae0:	cmp	w0, #0x4
  437ae4:	b.ne	437a28 <ferror@plt+0x35158>  // b.any
  437ae8:	ldr	x0, [sp, #312]
  437aec:	str	x0, [x22, #72]
  437af0:	b	437a28 <ferror@plt+0x35158>
  437af4:	ldr	w0, [x20, #8]
  437af8:	cmp	w0, #0x2e
  437afc:	ccmp	w0, #0x11, #0x4, ne  // ne = any
  437b00:	b.ne	437b80 <ferror@plt+0x352b0>  // b.any
  437b04:	ldr	w0, [sp, #168]
  437b08:	cbnz	w0, 437bdc <ferror@plt+0x3530c>
  437b0c:	ldr	w0, [sp, #172]
  437b10:	cmp	w0, #0x0
  437b14:	ccmp	w23, #0x0, #0x4, ne  // ne = any
  437b18:	b.eq	437b80 <ferror@plt+0x352b0>  // b.none
  437b1c:	ldr	x1, [sp, #152]
  437b20:	ldr	x2, [sp, #144]
  437b24:	add	x0, x1, x2
  437b28:	ldr	w3, [sp, #232]
  437b2c:	cmp	w3, #0x0
  437b30:	csel	x0, x0, x1, ne  // ne = any
  437b34:	str	x2, [sp, #304]
  437b38:	str	x0, [sp, #312]
  437b3c:	str	x22, [sp, #320]
  437b40:	ldr	x0, [sp, #216]
  437b44:	ldp	x0, x1, [x0]
  437b48:	ldr	x2, [sp, #208]
  437b4c:	stp	x0, x1, [x2]
  437b50:	str	x22, [x2, #16]
  437b54:	ldr	x5, [sp, #400]
  437b58:	ldr	x4, [sp, #384]
  437b5c:	ldr	x3, [sp, #376]
  437b60:	ldr	x1, [sp, #200]
  437b64:	ldr	x0, [sp, #192]
  437b68:	bl	4369d4 <ferror@plt+0x34104>
  437b6c:	mov	w19, w0
  437b70:	cbz	w0, 437d2c <ferror@plt+0x3545c>
  437b74:	ldr	w0, [x20, #8]
  437b78:	cmp	w0, #0x11
  437b7c:	b.eq	437d20 <ferror@plt+0x35450>  // b.none
  437b80:	ldr	w0, [x20, #12]
  437b84:	cbz	w0, 43790c <ferror@plt+0x3503c>
  437b88:	str	xzr, [sp, #40]
  437b8c:	ldr	x0, [sp, #400]
  437b90:	str	x0, [sp, #32]
  437b94:	str	x22, [sp, #24]
  437b98:	ldr	x0, [sp, #384]
  437b9c:	str	x0, [sp, #16]
  437ba0:	ldr	x0, [sp, #376]
  437ba4:	str	x0, [sp, #8]
  437ba8:	str	x27, [sp]
  437bac:	ldr	w7, [sp, #236]
  437bb0:	ldr	x6, [sp, #184]
  437bb4:	ldr	x5, [sp, #224]
  437bb8:	mov	x4, x28
  437bbc:	mov	x3, x26
  437bc0:	mov	x2, x24
  437bc4:	ldr	x1, [sp, #200]
  437bc8:	ldr	x0, [sp, #192]
  437bcc:	bl	4378ac <ferror@plt+0x34fdc>
  437bd0:	mov	w19, w0
  437bd4:	cbnz	w0, 43790c <ferror@plt+0x3503c>
  437bd8:	b	437d2c <ferror@plt+0x3545c>
  437bdc:	ldr	x0, [sp, #160]
  437be0:	ldr	x1, [sp, #184]
  437be4:	cmp	x0, x1
  437be8:	b.cs	437c38 <ferror@plt+0x35368>  // b.hs, b.nlast
  437bec:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1d094>
  437bf0:	add	x0, x0, #0x20
  437bf4:	str	x0, [sp, #304]
  437bf8:	ldr	x0, [sp, #224]
  437bfc:	str	x0, [sp, #312]
  437c00:	ldr	x1, [sp, #160]
  437c04:	add	x0, x0, x1
  437c08:	str	x0, [sp, #320]
  437c0c:	ldr	x0, [sp, #184]
  437c10:	sub	x0, x0, x1
  437c14:	str	x0, [sp, #328]
  437c18:	ldr	w0, [sp, #236]
  437c1c:	str	w0, [sp, #336]
  437c20:	ldr	x0, [sp, #376]
  437c24:	str	x0, [sp, #344]
  437c28:	ldr	x0, [sp, #384]
  437c2c:	str	x0, [sp, #352]
  437c30:	str	wzr, [sp, #360]
  437c34:	b	437c5c <ferror@plt+0x3538c>
  437c38:	mov	w2, #0x0                   	// #0
  437c3c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d094>
  437c40:	add	x1, x1, #0xae0
  437c44:	ldr	x0, [sp, #384]
  437c48:	ldr	x3, [sp, #376]
  437c4c:	blr	x3
  437c50:	mov	w19, #0x0                   	// #0
  437c54:	b	437d2c <ferror@plt+0x3545c>
  437c58:	str	x23, [sp, #144]
  437c5c:	ldr	w19, [sp, #360]
  437c60:	cbnz	w19, 437c50 <ferror@plt+0x35380>
  437c64:	ldr	w1, [x22, #48]
  437c68:	ldr	x23, [sp, #176]
  437c6c:	mov	x0, x23
  437c70:	bl	436e20 <ferror@plt+0x34550>
  437c74:	mov	x21, x0
  437c78:	ldr	w1, [x22, #48]
  437c7c:	mov	x0, x23
  437c80:	bl	436e20 <ferror@plt+0x34550>
  437c84:	mov	x23, x0
  437c88:	orr	x0, x21, x0
  437c8c:	cbz	x0, 437cec <ferror@plt+0x3541c>
  437c90:	ldr	w1, [x22, #48]
  437c94:	mov	x0, x21
  437c98:	bl	436494 <ferror@plt+0x33bc4>
  437c9c:	cbnz	w0, 437c58 <ferror@plt+0x35388>
  437ca0:	ldr	x0, [sp, #144]
  437ca4:	add	x21, x21, x0
  437ca8:	str	x21, [sp, #280]
  437cac:	add	x23, x23, x0
  437cb0:	str	x23, [sp, #288]
  437cb4:	str	x22, [sp, #296]
  437cb8:	add	x0, sp, #0x200
  437cbc:	ldp	x0, x1, [x0, #-232]
  437cc0:	ldr	x2, [sp, #208]
  437cc4:	stp	x0, x1, [x2]
  437cc8:	str	x22, [x2, #16]
  437ccc:	ldr	x5, [sp, #400]
  437cd0:	ldr	x4, [sp, #384]
  437cd4:	ldr	x3, [sp, #376]
  437cd8:	ldr	x1, [sp, #200]
  437cdc:	ldr	x0, [sp, #192]
  437ce0:	bl	4369d4 <ferror@plt+0x34104>
  437ce4:	cbnz	w0, 437c5c <ferror@plt+0x3538c>
  437ce8:	b	437c50 <ferror@plt+0x35380>
  437cec:	ldr	w0, [sp, #360]
  437cf0:	cbnz	w0, 437d2c <ferror@plt+0x3545c>
  437cf4:	ldr	w0, [x20, #8]
  437cf8:	cmp	w0, #0x11
  437cfc:	b.ne	437b80 <ferror@plt+0x352b0>  // b.any
  437d00:	ldr	w19, [sp, #168]
  437d04:	b	437d2c <ferror@plt+0x3545c>
  437d08:	mov	w19, #0x1                   	// #1
  437d0c:	b	437d2c <ferror@plt+0x3545c>
  437d10:	mov	w19, #0x1                   	// #1
  437d14:	b	437d2c <ferror@plt+0x3545c>
  437d18:	mov	w19, #0x0                   	// #0
  437d1c:	b	437d2c <ferror@plt+0x3545c>
  437d20:	mov	w19, #0x1                   	// #1
  437d24:	b	437d2c <ferror@plt+0x3545c>
  437d28:	mov	w19, w0
  437d2c:	mov	w0, w19
  437d30:	ldp	x19, x20, [sp, #64]
  437d34:	ldp	x21, x22, [sp, #80]
  437d38:	ldp	x23, x24, [sp, #96]
  437d3c:	ldp	x25, x26, [sp, #112]
  437d40:	ldp	x27, x28, [sp, #128]
  437d44:	ldp	x29, x30, [sp, #48]
  437d48:	add	sp, sp, #0x170
  437d4c:	ret
  437d50:	ldr	x4, [x0]
  437d54:	ldr	x3, [x1]
  437d58:	cmp	x4, x3
  437d5c:	b.cc	437da4 <ferror@plt+0x354d4>  // b.lo, b.ul, b.last
  437d60:	mov	x2, x0
  437d64:	mov	w0, #0x1                   	// #1
  437d68:	b.hi	437db4 <ferror@plt+0x354e4>  // b.pmore
  437d6c:	ldr	x4, [x2, #8]
  437d70:	ldr	x3, [x1, #8]
  437d74:	cmp	x4, x3
  437d78:	b.cc	437db4 <ferror@plt+0x354e4>  // b.lo, b.ul, b.last
  437d7c:	b.hi	437dac <ferror@plt+0x354dc>  // b.pmore
  437d80:	stp	x29, x30, [sp, #-16]!
  437d84:	mov	x29, sp
  437d88:	ldr	x1, [x1, #16]
  437d8c:	ldr	x0, [x2, #16]
  437d90:	ldr	x1, [x1]
  437d94:	ldr	x0, [x0]
  437d98:	bl	402620 <strcmp@plt>
  437d9c:	ldp	x29, x30, [sp], #16
  437da0:	ret
  437da4:	mov	w0, #0xffffffff            	// #-1
  437da8:	ret
  437dac:	mov	w0, #0xffffffff            	// #-1
  437db0:	ret
  437db4:	ret
  437db8:	sub	sp, sp, #0x120
  437dbc:	stp	x29, x30, [sp, #16]
  437dc0:	add	x29, sp, #0x10
  437dc4:	stp	x19, x20, [sp, #32]
  437dc8:	str	x0, [sp, #176]
  437dcc:	str	x3, [sp, #184]
  437dd0:	str	x5, [sp, #208]
  437dd4:	str	x6, [sp, #112]
  437dd8:	str	x7, [sp, #120]
  437ddc:	ldr	x0, [x4, #24]
  437de0:	cbz	x0, 43846c <ferror@plt+0x35b9c>
  437de4:	stp	x21, x22, [sp, #48]
  437de8:	stp	x23, x24, [sp, #64]
  437dec:	stp	x25, x26, [sp, #80]
  437df0:	stp	x27, x28, [sp, #96]
  437df4:	mov	x23, x1
  437df8:	mov	x21, x2
  437dfc:	mov	x27, x4
  437e00:	add	x0, x2, #0x58
  437e04:	str	x0, [sp, #136]
  437e08:	add	x28, sp, #0xe0
  437e0c:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  437e10:	add	x0, x0, #0x710
  437e14:	str	x0, [sp, #216]
  437e18:	mov	x0, x27
  437e1c:	bl	436d74 <ferror@plt+0x344a4>
  437e20:	mov	x1, x0
  437e24:	cbz	x0, 438474 <ferror@plt+0x35ba4>
  437e28:	ldr	x3, [sp, #120]
  437e2c:	ldr	x2, [sp, #112]
  437e30:	ldr	x0, [sp, #136]
  437e34:	bl	43675c <ferror@plt+0x33e8c>
  437e38:	mov	x19, x0
  437e3c:	cbz	x0, 43848c <ferror@plt+0x35bbc>
  437e40:	ldr	w0, [x0, #8]
  437e44:	cmp	w0, #0x2e
  437e48:	ccmp	w0, #0x3, #0x4, ne  // ne = any
  437e4c:	cset	w25, eq  // eq = none
  437e50:	cmp	w0, #0x1d
  437e54:	csinc	w25, w25, wzr, ne  // ne = any
  437e58:	b.eq	437eb0 <ferror@plt+0x355e0>  // b.none
  437e5c:	cbnz	w25, 437ea4 <ferror@plt+0x355d4>
  437e60:	ldr	x0, [sp, #288]
  437e64:	str	x0, [sp, #192]
  437e68:	mov	x22, #0x0                   	// #0
  437e6c:	ldr	x26, [x19, #16]
  437e70:	cbz	x26, 438164 <ferror@plt+0x35894>
  437e74:	str	wzr, [sp, #128]
  437e78:	str	wzr, [sp, #148]
  437e7c:	str	xzr, [sp, #160]
  437e80:	str	wzr, [sp, #200]
  437e84:	str	wzr, [sp, #168]
  437e88:	str	xzr, [sp, #152]
  437e8c:	str	wzr, [sp, #172]
  437e90:	mov	x26, #0x0                   	// #0
  437e94:	mov	x20, #0x0                   	// #0
  437e98:	mov	w0, #0x1                   	// #1
  437e9c:	str	w0, [sp, #204]
  437ea0:	b	437f70 <ferror@plt+0x356a0>
  437ea4:	ldr	x0, [sp, #288]
  437ea8:	str	x0, [sp, #192]
  437eac:	b	437eb8 <ferror@plt+0x355e8>
  437eb0:	ldr	x0, [sp, #296]
  437eb4:	str	x0, [sp, #192]
  437eb8:	ldr	x3, [sp, #120]
  437ebc:	ldr	x2, [sp, #112]
  437ec0:	mov	x1, #0x28                  	// #40
  437ec4:	ldr	x0, [sp, #176]
  437ec8:	bl	4329cc <ferror@plt+0x300fc>
  437ecc:	mov	x22, x0
  437ed0:	cbz	x0, 4384a4 <ferror@plt+0x35bd4>
  437ed4:	stp	xzr, xzr, [x0]
  437ed8:	stp	xzr, xzr, [x0, #16]
  437edc:	str	xzr, [x0, #32]
  437ee0:	b	437e6c <ferror@plt+0x3559c>
  437ee4:	ldr	x0, [x19, #24]
  437ee8:	ldr	w0, [x0, x24]
  437eec:	cmp	w0, #0x11
  437ef0:	b.ne	437fb4 <ferror@plt+0x356e4>  // b.any
  437ef4:	ldr	w0, [sp, #224]
  437ef8:	cmp	w0, #0x1
  437efc:	b.eq	437f14 <ferror@plt+0x35644>  // b.none
  437f00:	cbz	w25, 437f60 <ferror@plt+0x35690>
  437f04:	ldr	w0, [sp, #224]
  437f08:	cmp	w0, #0x1
  437f0c:	b.ne	437f60 <ferror@plt+0x35690>  // b.any
  437f10:	b	437f20 <ferror@plt+0x35650>
  437f14:	ldr	x0, [sp, #232]
  437f18:	str	x0, [sp, #184]
  437f1c:	cbz	w25, 437f60 <ferror@plt+0x35690>
  437f20:	ldr	x26, [sp, #232]
  437f24:	mov	w0, #0x1                   	// #1
  437f28:	str	w0, [sp, #172]
  437f2c:	b	437f60 <ferror@plt+0x35690>
  437f30:	cmp	w0, #0x3
  437f34:	b.ne	437f58 <ferror@plt+0x35688>  // b.any
  437f38:	ldr	x0, [x22]
  437f3c:	cbnz	x0, 437f60 <ferror@plt+0x35690>
  437f40:	ldr	w0, [sp, #224]
  437f44:	cmp	w0, #0x4
  437f48:	b.ne	437f60 <ferror@plt+0x35690>  // b.any
  437f4c:	ldr	x0, [sp, #232]
  437f50:	str	x0, [x22]
  437f54:	b	437f60 <ferror@plt+0x35690>
  437f58:	cmp	w0, #0x11
  437f5c:	b.eq	437f04 <ferror@plt+0x35634>  // b.none
  437f60:	add	x20, x20, #0x1
  437f64:	ldr	x0, [x19, #16]
  437f68:	cmp	x0, x20
  437f6c:	b.ls	43817c <ferror@plt+0x358ac>  // b.plast
  437f70:	lsl	x24, x20, #3
  437f74:	ldr	x0, [x19, #24]
  437f78:	add	x0, x0, x24
  437f7c:	ldr	w0, [x0, #4]
  437f80:	str	x28, [sp]
  437f84:	ldr	x7, [x23, #8]
  437f88:	ldr	x6, [x23, #112]
  437f8c:	ldr	x5, [x23, #104]
  437f90:	ldr	w4, [x21, #48]
  437f94:	ldr	w3, [x21, #40]
  437f98:	ldr	w2, [x21, #44]
  437f9c:	mov	x1, x27
  437fa0:	bl	436f98 <ferror@plt+0x346c8>
  437fa4:	cbz	w0, 4380bc <ferror@plt+0x357ec>
  437fa8:	ldr	w0, [x19, #8]
  437fac:	cmp	w0, #0x11
  437fb0:	b.eq	437ee4 <ferror@plt+0x35614>  // b.none
  437fb4:	cbz	w25, 437f60 <ferror@plt+0x35690>
  437fb8:	ldr	x0, [x19, #24]
  437fbc:	add	x2, x0, x24
  437fc0:	ldr	w0, [x0, x24]
  437fc4:	cmp	w0, #0x55
  437fc8:	b.eq	438140 <ferror@plt+0x35870>  // b.none
  437fcc:	b.hi	438018 <ferror@plt+0x35748>  // b.pmore
  437fd0:	cmp	w0, #0x12
  437fd4:	b.eq	4380fc <ferror@plt+0x3582c>  // b.none
  437fd8:	b.ls	437f30 <ferror@plt+0x35660>  // b.plast
  437fdc:	cmp	w0, #0x31
  437fe0:	b.eq	437fec <ferror@plt+0x3571c>  // b.none
  437fe4:	cmp	w0, #0x47
  437fe8:	b.ne	437f60 <ferror@plt+0x35690>  // b.any
  437fec:	ldr	w0, [sp, #128]
  437ff0:	cbnz	w0, 437f60 <ferror@plt+0x35690>
  437ff4:	ldr	x5, [sp, #120]
  437ff8:	ldr	x4, [sp, #112]
  437ffc:	mov	x3, x28
  438000:	mov	x1, x21
  438004:	mov	x0, x23
  438008:	bl	4377a0 <ferror@plt+0x34ed0>
  43800c:	cbz	x0, 437f60 <ferror@plt+0x35690>
  438010:	str	x0, [x22]
  438014:	b	437f60 <ferror@plt+0x35690>
  438018:	cmp	w0, #0x59
  43801c:	b.eq	4380e4 <ferror@plt+0x35814>  // b.none
  438020:	b.ls	438058 <ferror@plt+0x35788>  // b.plast
  438024:	cmp	w0, #0x6e
  438028:	b.eq	438038 <ferror@plt+0x35768>  // b.none
  43802c:	mov	w1, #0x2007                	// #8199
  438030:	cmp	w0, w1
  438034:	b.ne	437f60 <ferror@plt+0x35690>  // b.any
  438038:	ldr	w0, [sp, #224]
  43803c:	cmp	w0, #0x4
  438040:	b.ne	437f60 <ferror@plt+0x35690>  // b.any
  438044:	ldr	x0, [sp, #232]
  438048:	str	x0, [x22]
  43804c:	mov	w0, #0x1                   	// #1
  438050:	str	w0, [sp, #128]
  438054:	b	437f60 <ferror@plt+0x35690>
  438058:	cmp	w0, #0x58
  43805c:	b.ne	437f60 <ferror@plt+0x35690>  // b.any
  438060:	ldr	w0, [sp, #224]
  438064:	cmp	w0, #0x2
  438068:	b.ne	437f60 <ferror@plt+0x35690>  // b.any
  43806c:	ldr	x0, [sp, #232]
  438070:	cbnz	x0, 438080 <ferror@plt+0x357b0>
  438074:	ldr	x0, [sp, #216]
  438078:	str	x0, [x22, #8]
  43807c:	b	437f60 <ferror@plt+0x35690>
  438080:	sub	x1, x0, #0x1
  438084:	ldr	x2, [sp, #208]
  438088:	ldr	x2, [x2, #48]
  43808c:	cmp	x1, x2
  438090:	b.cs	4380ac <ferror@plt+0x357dc>  // b.hs, b.nlast
  438094:	ldr	x1, [sp, #208]
  438098:	ldr	x1, [x1, #56]
  43809c:	add	x0, x1, x0, lsl #3
  4380a0:	ldur	x0, [x0, #-8]
  4380a4:	str	x0, [x22, #8]
  4380a8:	b	437f60 <ferror@plt+0x35690>
  4380ac:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d094>
  4380b0:	add	x1, x1, #0xb00
  4380b4:	mov	x0, x27
  4380b8:	bl	436aac <ferror@plt+0x341dc>
  4380bc:	mov	w20, #0x0                   	// #0
  4380c0:	ldp	x21, x22, [sp, #48]
  4380c4:	ldp	x23, x24, [sp, #64]
  4380c8:	ldp	x25, x26, [sp, #80]
  4380cc:	ldp	x27, x28, [sp, #96]
  4380d0:	mov	w0, w20
  4380d4:	ldp	x19, x20, [sp, #32]
  4380d8:	ldp	x29, x30, [sp, #16]
  4380dc:	add	sp, sp, #0x120
  4380e0:	ret
  4380e4:	ldr	w0, [sp, #224]
  4380e8:	cmp	w0, #0x2
  4380ec:	b.ne	437f60 <ferror@plt+0x35690>  // b.any
  4380f0:	ldr	x0, [sp, #232]
  4380f4:	str	w0, [x22, #16]
  4380f8:	b	437f60 <ferror@plt+0x35690>
  4380fc:	ldr	w0, [sp, #224]
  438100:	cmp	w0, #0x1
  438104:	b.eq	43812c <ferror@plt+0x3585c>  // b.none
  438108:	cmp	w0, #0x2
  43810c:	b.ne	437f60 <ferror@plt+0x35690>  // b.any
  438110:	ldr	x0, [sp, #232]
  438114:	str	x0, [sp, #152]
  438118:	mov	w0, #0x1                   	// #1
  43811c:	str	w0, [sp, #200]
  438120:	ldr	w0, [sp, #204]
  438124:	str	w0, [sp, #168]
  438128:	b	437f60 <ferror@plt+0x35690>
  43812c:	ldr	x0, [sp, #232]
  438130:	str	x0, [sp, #152]
  438134:	mov	w0, #0x1                   	// #1
  438138:	str	w0, [sp, #168]
  43813c:	b	437f60 <ferror@plt+0x35690>
  438140:	ldr	w0, [sp, #224]
  438144:	cmp	w0, #0x2
  438148:	ccmp	w0, #0x8, #0x4, ne  // ne = any
  43814c:	b.ne	437f60 <ferror@plt+0x35690>  // b.any
  438150:	ldr	x0, [sp, #232]
  438154:	str	x0, [sp, #160]
  438158:	mov	w0, #0x1                   	// #1
  43815c:	str	w0, [sp, #148]
  438160:	b	437f60 <ferror@plt+0x35690>
  438164:	str	x26, [sp, #160]
  438168:	str	x26, [sp, #152]
  43816c:	str	wzr, [sp, #148]
  438170:	str	wzr, [sp, #200]
  438174:	str	wzr, [sp, #168]
  438178:	str	wzr, [sp, #172]
  43817c:	cbz	w25, 4383dc <ferror@plt+0x35b0c>
  438180:	ldr	x0, [x22]
  438184:	cbz	x0, 438270 <ferror@plt+0x359a0>
  438188:	ldr	w0, [sp, #148]
  43818c:	cbnz	w0, 43828c <ferror@plt+0x359bc>
  438190:	ldr	w0, [sp, #172]
  438194:	cmp	w0, #0x0
  438198:	ldr	w0, [sp, #168]
  43819c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  4381a0:	b.eq	4383c4 <ferror@plt+0x35af4>  // b.none
  4381a4:	ldr	x0, [sp, #152]
  4381a8:	add	x4, x0, x26
  4381ac:	ldr	w1, [sp, #200]
  4381b0:	cmp	w1, #0x0
  4381b4:	ldr	x7, [sp, #192]
  4381b8:	ldr	x6, [sp, #120]
  4381bc:	ldr	x5, [sp, #112]
  4381c0:	csel	x4, x4, x0, ne  // ne = any
  4381c4:	mov	x3, x26
  4381c8:	mov	x2, x22
  4381cc:	mov	x1, x23
  4381d0:	ldr	x0, [sp, #176]
  4381d4:	bl	436910 <ferror@plt+0x34040>
  4381d8:	mov	w20, w0
  4381dc:	cbz	w0, 4383b0 <ferror@plt+0x35ae0>
  4381e0:	ldr	w0, [x19, #12]
  4381e4:	cbz	w0, 4383e4 <ferror@plt+0x35b14>
  4381e8:	stp	xzr, xzr, [x28]
  4381ec:	stp	xzr, xzr, [x28, #16]
  4381f0:	str	x28, [sp, #8]
  4381f4:	ldr	x0, [sp, #288]
  4381f8:	str	x0, [sp]
  4381fc:	ldr	x7, [sp, #120]
  438200:	ldr	x6, [sp, #112]
  438204:	ldr	x5, [sp, #208]
  438208:	mov	x4, x27
  43820c:	ldr	x3, [sp, #184]
  438210:	mov	x2, x21
  438214:	mov	x1, x23
  438218:	ldr	x0, [sp, #176]
  43821c:	bl	437db8 <ferror@plt+0x354e8>
  438220:	cbz	w0, 438454 <ferror@plt+0x35b84>
  438224:	ldr	x0, [sp, #248]
  438228:	cbz	x0, 4383e4 <ferror@plt+0x35b14>
  43822c:	ldr	x3, [sp, #120]
  438230:	ldr	x2, [sp, #112]
  438234:	mov	x1, x28
  438238:	ldr	x0, [sp, #176]
  43823c:	bl	432c78 <ferror@plt+0x303a8>
  438240:	cbz	w0, 438454 <ferror@plt+0x35b84>
  438244:	ldr	x19, [sp, #224]
  438248:	adrp	x3, 437000 <ferror@plt+0x34730>
  43824c:	add	x3, x3, #0xd50
  438250:	mov	x2, #0x18                  	// #24
  438254:	ldr	x1, [sp, #248]
  438258:	mov	x0, x19
  43825c:	bl	43a078 <ferror@plt+0x377a8>
  438260:	str	x19, [x22, #24]
  438264:	ldr	x0, [sp, #248]
  438268:	str	x0, [x22, #32]
  43826c:	b	4383e4 <ferror@plt+0x35b14>
  438270:	ldr	x4, [sp, #120]
  438274:	ldr	x3, [sp, #112]
  438278:	mov	x2, #0x28                  	// #40
  43827c:	mov	x1, x22
  438280:	ldr	x0, [sp, #176]
  438284:	bl	432920 <ferror@plt+0x30050>
  438288:	b	4383dc <ferror@plt+0x35b0c>
  43828c:	ldr	x0, [x23, #96]
  438290:	ldr	x1, [sp, #160]
  438294:	cmp	x0, x1
  438298:	b.ls	4382f0 <ferror@plt+0x35a20>  // b.plast
  43829c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d094>
  4382a0:	add	x1, x1, #0x20
  4382a4:	str	x1, [sp, #224]
  4382a8:	ldr	x1, [x23, #88]
  4382ac:	str	x1, [sp, #232]
  4382b0:	ldr	x2, [sp, #160]
  4382b4:	add	x1, x1, x2
  4382b8:	str	x1, [sp, #240]
  4382bc:	sub	x0, x0, x2
  4382c0:	str	x0, [sp, #248]
  4382c4:	ldr	w0, [x23, #120]
  4382c8:	str	w0, [sp, #256]
  4382cc:	ldr	x0, [sp, #112]
  4382d0:	str	x0, [sp, #264]
  4382d4:	ldr	x0, [sp, #120]
  4382d8:	str	x0, [sp, #272]
  4382dc:	str	wzr, [sp, #280]
  4382e0:	ldr	x0, [sp, #184]
  4382e4:	str	x0, [sp, #128]
  4382e8:	mov	x26, x28
  4382ec:	b	438324 <ferror@plt+0x35a54>
  4382f0:	mov	w2, #0x0                   	// #0
  4382f4:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d094>
  4382f8:	add	x1, x1, #0xb38
  4382fc:	ldr	x0, [sp, #120]
  438300:	ldr	x3, [sp, #112]
  438304:	blr	x3
  438308:	mov	w20, #0x0                   	// #0
  43830c:	ldp	x21, x22, [sp, #48]
  438310:	ldp	x23, x24, [sp, #64]
  438314:	ldp	x25, x26, [sp, #80]
  438318:	ldp	x27, x28, [sp, #96]
  43831c:	b	4380d0 <ferror@plt+0x35800>
  438320:	str	x25, [sp, #128]
  438324:	ldr	w20, [sp, #280]
  438328:	cbnz	w20, 438308 <ferror@plt+0x35a38>
  43832c:	ldr	w1, [x21, #48]
  438330:	mov	x0, x26
  438334:	bl	436e20 <ferror@plt+0x34550>
  438338:	mov	x24, x0
  43833c:	ldr	w1, [x21, #48]
  438340:	mov	x0, x26
  438344:	bl	436e20 <ferror@plt+0x34550>
  438348:	mov	x25, x0
  43834c:	orr	x0, x24, x0
  438350:	cbz	x0, 438394 <ferror@plt+0x35ac4>
  438354:	ldr	w1, [x21, #48]
  438358:	mov	x0, x24
  43835c:	bl	436494 <ferror@plt+0x33bc4>
  438360:	cbnz	w0, 438320 <ferror@plt+0x35a50>
  438364:	ldr	x7, [sp, #192]
  438368:	ldr	x6, [sp, #120]
  43836c:	ldr	x5, [sp, #112]
  438370:	ldr	x0, [sp, #128]
  438374:	add	x4, x25, x0
  438378:	add	x3, x24, x0
  43837c:	mov	x2, x22
  438380:	mov	x1, x23
  438384:	ldr	x0, [sp, #176]
  438388:	bl	436910 <ferror@plt+0x34040>
  43838c:	cbnz	w0, 438324 <ferror@plt+0x35a54>
  438390:	b	438308 <ferror@plt+0x35a38>
  438394:	ldr	w0, [sp, #280]
  438398:	cbz	w0, 4381e0 <ferror@plt+0x35910>
  43839c:	ldp	x21, x22, [sp, #48]
  4383a0:	ldp	x23, x24, [sp, #64]
  4383a4:	ldp	x25, x26, [sp, #80]
  4383a8:	ldp	x27, x28, [sp, #96]
  4383ac:	b	4380d0 <ferror@plt+0x35800>
  4383b0:	ldp	x21, x22, [sp, #48]
  4383b4:	ldp	x23, x24, [sp, #64]
  4383b8:	ldp	x25, x26, [sp, #80]
  4383bc:	ldp	x27, x28, [sp, #96]
  4383c0:	b	4380d0 <ferror@plt+0x35800>
  4383c4:	ldr	x4, [sp, #120]
  4383c8:	ldr	x3, [sp, #112]
  4383cc:	mov	x2, #0x28                  	// #40
  4383d0:	mov	x1, x22
  4383d4:	ldr	x0, [sp, #176]
  4383d8:	bl	432920 <ferror@plt+0x30050>
  4383dc:	ldr	w0, [x19, #12]
  4383e0:	cbnz	w0, 438404 <ferror@plt+0x35b34>
  4383e4:	ldr	x0, [x27, #24]
  4383e8:	cbnz	x0, 437e18 <ferror@plt+0x35548>
  4383ec:	mov	w20, #0x1                   	// #1
  4383f0:	ldp	x21, x22, [sp, #48]
  4383f4:	ldp	x23, x24, [sp, #64]
  4383f8:	ldp	x25, x26, [sp, #80]
  4383fc:	ldp	x27, x28, [sp, #96]
  438400:	b	4380d0 <ferror@plt+0x35800>
  438404:	ldr	x0, [sp, #296]
  438408:	str	x0, [sp, #8]
  43840c:	ldr	x0, [sp, #288]
  438410:	str	x0, [sp]
  438414:	ldr	x7, [sp, #120]
  438418:	ldr	x6, [sp, #112]
  43841c:	ldr	x5, [sp, #208]
  438420:	mov	x4, x27
  438424:	ldr	x3, [sp, #184]
  438428:	mov	x2, x21
  43842c:	mov	x1, x23
  438430:	ldr	x0, [sp, #176]
  438434:	bl	437db8 <ferror@plt+0x354e8>
  438438:	mov	w20, w0
  43843c:	cbnz	w0, 4383e4 <ferror@plt+0x35b14>
  438440:	ldp	x21, x22, [sp, #48]
  438444:	ldp	x23, x24, [sp, #64]
  438448:	ldp	x25, x26, [sp, #80]
  43844c:	ldp	x27, x28, [sp, #96]
  438450:	b	4380d0 <ferror@plt+0x35800>
  438454:	mov	w20, #0x0                   	// #0
  438458:	ldp	x21, x22, [sp, #48]
  43845c:	ldp	x23, x24, [sp, #64]
  438460:	ldp	x25, x26, [sp, #80]
  438464:	ldp	x27, x28, [sp, #96]
  438468:	b	4380d0 <ferror@plt+0x35800>
  43846c:	mov	w20, #0x1                   	// #1
  438470:	b	4380d0 <ferror@plt+0x35800>
  438474:	mov	w20, #0x1                   	// #1
  438478:	ldp	x21, x22, [sp, #48]
  43847c:	ldp	x23, x24, [sp, #64]
  438480:	ldp	x25, x26, [sp, #80]
  438484:	ldp	x27, x28, [sp, #96]
  438488:	b	4380d0 <ferror@plt+0x35800>
  43848c:	mov	w20, #0x0                   	// #0
  438490:	ldp	x21, x22, [sp, #48]
  438494:	ldp	x23, x24, [sp, #64]
  438498:	ldp	x25, x26, [sp, #80]
  43849c:	ldp	x27, x28, [sp, #96]
  4384a0:	b	4380d0 <ferror@plt+0x35800>
  4384a4:	mov	w20, #0x0                   	// #0
  4384a8:	ldp	x21, x22, [sp, #48]
  4384ac:	ldp	x23, x24, [sp, #64]
  4384b0:	ldp	x25, x26, [sp, #80]
  4384b4:	ldp	x27, x28, [sp, #96]
  4384b8:	b	4380d0 <ferror@plt+0x35800>
  4384bc:	stp	x29, x30, [sp, #-48]!
  4384c0:	mov	x29, sp
  4384c4:	stp	x19, x20, [sp, #16]
  4384c8:	stp	x21, x22, [sp, #32]
  4384cc:	mov	x20, x0
  4384d0:	mov	x19, x1
  4384d4:	mov	x21, x2
  4384d8:	mov	x22, x3
  4384dc:	ldr	x2, [x1, #32]
  4384e0:	cbnz	x2, 438510 <ferror@plt+0x35c40>
  4384e4:	ldr	x2, [x19, #48]
  4384e8:	mov	x4, x22
  4384ec:	mov	x3, x21
  4384f0:	lsl	x2, x2, #3
  4384f4:	ldr	x1, [x19, #56]
  4384f8:	mov	x0, x20
  4384fc:	bl	432920 <ferror@plt+0x30050>
  438500:	ldp	x19, x20, [sp, #16]
  438504:	ldp	x21, x22, [sp, #32]
  438508:	ldp	x29, x30, [sp], #48
  43850c:	ret
  438510:	mov	x4, x3
  438514:	mov	x3, x21
  438518:	lsl	x2, x2, #3
  43851c:	ldr	x1, [x1, #40]
  438520:	bl	432920 <ferror@plt+0x30050>
  438524:	b	4384e4 <ferror@plt+0x35c14>
  438528:	stp	x29, x30, [sp, #-64]!
  43852c:	mov	x29, sp
  438530:	stp	x19, x20, [sp, #16]
  438534:	stp	x21, x22, [sp, #32]
  438538:	str	x23, [sp, #48]
  43853c:	mov	x21, x0
  438540:	mov	x20, x1
  438544:	mov	x22, x2
  438548:	mov	x23, x3
  43854c:	ldr	x2, [x1]
  438550:	cbz	x2, 43858c <ferror@plt+0x35cbc>
  438554:	mov	x19, #0x0                   	// #0
  438558:	ldr	x5, [x20, #8]
  43855c:	add	x5, x5, x19, lsl #5
  438560:	ldr	x2, [x5, #16]
  438564:	mov	x4, x23
  438568:	mov	x3, x22
  43856c:	lsl	x2, x2, #3
  438570:	ldr	x1, [x5, #24]
  438574:	mov	x0, x21
  438578:	bl	432920 <ferror@plt+0x30050>
  43857c:	add	x19, x19, #0x1
  438580:	ldr	x2, [x20]
  438584:	cmp	x2, x19
  438588:	b.hi	438558 <ferror@plt+0x35c88>  // b.pmore
  43858c:	mov	x4, x23
  438590:	mov	x3, x22
  438594:	lsl	x2, x2, #5
  438598:	ldr	x1, [x20, #8]
  43859c:	mov	x0, x21
  4385a0:	bl	432920 <ferror@plt+0x30050>
  4385a4:	str	xzr, [x20]
  4385a8:	str	xzr, [x20, #8]
  4385ac:	ldp	x19, x20, [sp, #16]
  4385b0:	ldp	x21, x22, [sp, #32]
  4385b4:	ldr	x23, [sp, #48]
  4385b8:	ldp	x29, x30, [sp], #64
  4385bc:	ret
  4385c0:	sub	sp, sp, #0x1d0
  4385c4:	stp	x29, x30, [sp, #16]
  4385c8:	add	x29, sp, #0x10
  4385cc:	stp	x23, x24, [sp, #64]
  4385d0:	stp	x25, x26, [sp, #80]
  4385d4:	mov	x24, x0
  4385d8:	str	x3, [sp, #120]
  4385dc:	str	x4, [sp, #128]
  4385e0:	mov	x26, x6
  4385e4:	mov	w0, #0x1                   	// #1
  4385e8:	str	w0, [x6]
  4385ec:	ldr	x6, [x1, #32]
  4385f0:	cbz	x6, 438668 <ferror@plt+0x35d98>
  4385f4:	stp	x19, x20, [sp, #32]
  4385f8:	stp	x27, x28, [sp, #96]
  4385fc:	mov	x23, x1
  438600:	mov	x20, x2
  438604:	mov	x27, x5
  438608:	ldr	x2, [x1, #24]
  43860c:	mov	x4, x6
  438610:	mov	x3, #0x0                   	// #0
  438614:	b	43861c <ferror@plt+0x35d4c>
  438618:	mov	x4, x7
  43861c:	cmp	x4, x3
  438620:	b.ls	438660 <ferror@plt+0x35d90>  // b.plast
  438624:	add	x0, x4, x3
  438628:	lsr	x7, x0, #1
  43862c:	and	x0, x0, #0xfffffffffffffffe
  438630:	add	x0, x0, x7
  438634:	lsl	x1, x0, #3
  438638:	mov	x5, x1
  43863c:	add	x1, x2, x1
  438640:	ldr	x0, [x2, x0, lsl #3]
  438644:	cmp	x0, x20
  438648:	b.hi	438618 <ferror@plt+0x35d48>  // b.pmore
  43864c:	ldr	x0, [x1, #8]
  438650:	cmp	x0, x20
  438654:	b.hi	439640 <ferror@plt+0x36d70>  // b.pmore
  438658:	add	x3, x7, #0x1
  43865c:	b	43861c <ferror@plt+0x35d4c>
  438660:	ldp	x19, x20, [sp, #32]
  438664:	ldp	x27, x28, [sp, #96]
  438668:	str	wzr, [x26]
  43866c:	mov	w0, #0x0                   	// #0
  438670:	ldp	x23, x24, [sp, #64]
  438674:	ldp	x25, x26, [sp, #80]
  438678:	ldp	x29, x30, [sp, #16]
  43867c:	add	sp, sp, #0x1d0
  438680:	ret
  438684:	add	x0, x22, #0x68
  438688:	ldar	x21, [x0]
  43868c:	cmn	x21, #0x1
  438690:	b.ne	4396ac <ferror@plt+0x36ddc>  // b.any
  438694:	sub	x19, x19, #0x18
  438698:	ldr	x22, [x19, #16]
  43869c:	ldr	x21, [x22, #104]
  4386a0:	ldr	x0, [x23, #24]
  4386a4:	cmp	x0, x19
  4386a8:	b.cs	4396ac <ferror@plt+0x36ddc>  // b.hs, b.nlast
  4386ac:	ldur	x0, [x19, #-24]
  4386b0:	cmp	x0, x20
  4386b4:	b.hi	4396ac <ferror@plt+0x36ddc>  // b.pmore
  4386b8:	ldur	x0, [x19, #-16]
  4386bc:	cmp	x0, x20
  4386c0:	b.ls	4396ac <ferror@plt+0x36ddc>  // b.plast
  4386c4:	ldr	w0, [x24, #8]
  4386c8:	cbz	w0, 43868c <ferror@plt+0x35dbc>
  4386cc:	b	438684 <ferror@plt+0x35db4>
  4386d0:	add	x0, x22, #0x68
  4386d4:	ldar	x21, [x0]
  4386d8:	b	4396b4 <ferror@plt+0x36de4>
  4386dc:	ldr	x0, [x19, #16]
  4386e0:	str	x0, [sp, #136]
  4386e4:	stp	xzr, xzr, [sp, #224]
  4386e8:	str	xzr, [sp, #240]
  4386ec:	str	xzr, [sp, #248]
  4386f0:	stp	xzr, xzr, [sp, #256]
  4386f4:	stp	xzr, xzr, [sp, #272]
  4386f8:	stp	xzr, xzr, [sp, #288]
  4386fc:	stp	xzr, xzr, [sp, #304]
  438700:	ldr	x1, [x0, #56]
  438704:	ldr	x0, [x23, #80]
  438708:	cmp	x1, x0
  43870c:	b.cc	4387dc <ferror@plt+0x35f0c>  // b.lo, b.ul, b.last
  438710:	mov	w2, #0x0                   	// #0
  438714:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d094>
  438718:	add	x1, x1, #0xb60
  43871c:	mov	x0, x27
  438720:	ldr	x3, [sp, #128]
  438724:	blr	x3
  438728:	ldr	x0, [sp, #240]
  43872c:	ldr	x1, [sp, #232]
  438730:	add	x0, x0, x1
  438734:	str	x0, [sp, #240]
  438738:	str	xzr, [sp, #232]
  43873c:	mov	x3, x27
  438740:	ldr	x25, [sp, #128]
  438744:	mov	x2, x25
  438748:	add	x1, sp, #0xe0
  43874c:	mov	x0, x24
  438750:	bl	432c78 <ferror@plt+0x303a8>
  438754:	mov	x3, x27
  438758:	mov	x2, x25
  43875c:	add	x1, sp, #0x100
  438760:	mov	x0, x24
  438764:	bl	4384bc <ferror@plt+0x35bec>
  438768:	str	xzr, [sp, #144]
  43876c:	mov	x0, #0xffffffffffffffff    	// #-1
  438770:	str	x0, [sp, #136]
  438774:	mov	x28, #0x0                   	// #0
  438778:	mov	w0, #0x0                   	// #0
  43877c:	ldr	w1, [x24, #8]
  438780:	cbnz	w1, 439344 <ferror@plt+0x36a74>
  438784:	ldr	x1, [sp, #144]
  438788:	str	x1, [x22, #112]
  43878c:	str	x21, [x22, #120]
  438790:	str	x28, [x22, #128]
  438794:	ldr	x1, [sp, #136]
  438798:	str	x1, [x22, #104]
  43879c:	ldr	x1, [sp, #136]
  4387a0:	cmn	x1, #0x1
  4387a4:	b.ne	43939c <ferror@plt+0x36acc>  // b.any
  4387a8:	cbz	w0, 439370 <ferror@plt+0x36aa0>
  4387ac:	mov	x6, x26
  4387b0:	mov	x5, x27
  4387b4:	ldr	x4, [sp, #128]
  4387b8:	ldr	x3, [sp, #120]
  4387bc:	mov	x2, x20
  4387c0:	mov	x1, x23
  4387c4:	mov	x0, x24
  4387c8:	bl	4385c0 <ferror@plt+0x35cf0>
  4387cc:	ldp	x19, x20, [sp, #32]
  4387d0:	ldp	x21, x22, [sp, #48]
  4387d4:	ldp	x27, x28, [sp, #96]
  4387d8:	b	438670 <ferror@plt+0x35da0>
  4387dc:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1d094>
  4387e0:	add	x2, x2, #0x0
  4387e4:	str	x2, [sp, #320]
  4387e8:	ldr	x2, [x23, #72]
  4387ec:	str	x2, [sp, #328]
  4387f0:	add	x2, x2, x1
  4387f4:	str	x2, [sp, #336]
  4387f8:	sub	x0, x0, x1
  4387fc:	str	x0, [sp, #344]
  438800:	ldr	w0, [x23, #120]
  438804:	str	w0, [sp, #352]
  438808:	ldr	x0, [sp, #128]
  43880c:	str	x0, [sp, #360]
  438810:	str	x27, [sp, #368]
  438814:	str	wzr, [sp, #376]
  438818:	add	x0, sp, #0x140
  43881c:	bl	436b74 <ferror@plt+0x342a4>
  438820:	mov	w1, w0
  438824:	mov	w25, #0x0                   	// #0
  438828:	mov	x2, #0xffffffff            	// #4294967295
  43882c:	cmp	x2, w0, uxtw
  438830:	b.eq	438a50 <ferror@plt+0x36180>  // b.none
  438834:	str	x1, [sp, #344]
  438838:	add	x0, sp, #0x140
  43883c:	bl	436ce8 <ferror@plt+0x34418>
  438840:	and	w0, w0, #0xffff
  438844:	str	w0, [sp, #256]
  438848:	sub	w0, w0, #0x2
  43884c:	cmp	w0, #0x2
  438850:	b.hi	438a64 <ferror@plt+0x36194>  // b.pmore
  438854:	add	x0, sp, #0x140
  438858:	mov	w1, w25
  43885c:	mov	x25, x0
  438860:	bl	436cc4 <ferror@plt+0x343f4>
  438864:	mov	x1, x0
  438868:	ldp	x2, x3, [sp, #320]
  43886c:	stp	x2, x3, [sp, #384]
  438870:	ldp	x2, x3, [sp, #336]
  438874:	stp	x2, x3, [sp, #400]
  438878:	ldp	x2, x3, [sp, #352]
  43887c:	stp	x2, x3, [sp, #416]
  438880:	ldp	x2, x3, [sp, #368]
  438884:	stp	x2, x3, [sp, #432]
  438888:	str	x0, [sp, #408]
  43888c:	mov	x0, x25
  438890:	bl	436b08 <ferror@plt+0x34238>
  438894:	cbz	w0, 438728 <ferror@plt+0x35e58>
  438898:	add	x0, sp, #0x180
  43889c:	bl	436d40 <ferror@plt+0x34470>
  4388a0:	and	w0, w0, #0xff
  4388a4:	str	w0, [sp, #260]
  4388a8:	ldr	w0, [sp, #256]
  4388ac:	cmp	w0, #0x3
  4388b0:	b.gt	438a78 <ferror@plt+0x361a8>
  4388b4:	mov	w0, #0x1                   	// #1
  4388b8:	str	w0, [sp, #264]
  4388bc:	add	x25, sp, #0x180
  4388c0:	mov	x0, x25
  4388c4:	bl	436d40 <ferror@plt+0x34470>
  4388c8:	ldr	x28, [sp, #400]
  4388cc:	mov	x1, #0x1                   	// #1
  4388d0:	mov	x0, x25
  4388d4:	bl	436b08 <ferror@plt+0x34238>
  4388d8:	mov	w1, #0x0                   	// #0
  4388dc:	cbz	w0, 4388f0 <ferror@plt+0x36020>
  4388e0:	ldrb	w1, [x28]
  4388e4:	eor	w1, w1, #0xffffff80
  4388e8:	sub	w1, w1, #0x80
  4388ec:	sxtb	w1, w1
  4388f0:	str	w1, [sp, #268]
  4388f4:	add	x25, sp, #0x180
  4388f8:	mov	x0, x25
  4388fc:	bl	436d40 <ferror@plt+0x34470>
  438900:	and	w0, w0, #0xff
  438904:	str	w0, [sp, #272]
  438908:	mov	x0, x25
  43890c:	bl	436d40 <ferror@plt+0x34470>
  438910:	and	w1, w0, #0xff
  438914:	str	w1, [sp, #276]
  438918:	ldr	x0, [sp, #400]
  43891c:	str	x0, [sp, #280]
  438920:	sub	w1, w1, #0x1
  438924:	mov	x0, x25
  438928:	bl	436b08 <ferror@plt+0x34238>
  43892c:	cbz	w0, 438728 <ferror@plt+0x35e58>
  438930:	str	xzr, [sp, #288]
  438934:	ldr	x25, [sp, #400]
  438938:	ldr	x28, [sp, #408]
  43893c:	add	x28, x25, x28
  438940:	cmp	x25, x28
  438944:	b.cs	438978 <ferror@plt+0x360a8>  // b.hs, b.nlast
  438948:	ldrb	w0, [x25]
  43894c:	cbz	w0, 438978 <ferror@plt+0x360a8>
  438950:	sub	x1, x28, x25
  438954:	mov	x0, x25
  438958:	bl	402300 <strnlen@plt>
  43895c:	add	x0, x0, #0x1
  438960:	add	x25, x25, x0
  438964:	ldr	x0, [sp, #288]
  438968:	add	x0, x0, #0x1
  43896c:	str	x0, [sp, #288]
  438970:	cmp	x28, x25
  438974:	b.hi	438948 <ferror@plt+0x36078>  // b.pmore
  438978:	str	xzr, [sp, #296]
  43897c:	ldr	x1, [sp, #288]
  438980:	cbnz	x1, 438a8c <ferror@plt+0x361bc>
  438984:	ldr	x0, [sp, #400]
  438988:	ldrb	w0, [x0]
  43898c:	mov	x28, #0x0                   	// #0
  438990:	add	x1, sp, #0x180
  438994:	cbz	w0, 4389d8 <ferror@plt+0x36108>
  438998:	str	x21, [sp, #144]
  43899c:	mov	x25, x1
  4389a0:	ldr	w0, [sp, #440]
  4389a4:	cbnz	w0, 439238 <ferror@plt+0x36968>
  4389a8:	ldr	x21, [sp, #296]
  4389ac:	mov	x0, x25
  4389b0:	bl	436f58 <ferror@plt+0x34688>
  4389b4:	str	x0, [x21, x28]
  4389b8:	ldr	x0, [sp, #296]
  4389bc:	ldr	x0, [x0, x28]
  4389c0:	cbz	x0, 439240 <ferror@plt+0x36970>
  4389c4:	add	x28, x28, #0x8
  4389c8:	ldr	x0, [sp, #400]
  4389cc:	ldrb	w0, [x0]
  4389d0:	cbnz	w0, 4389a0 <ferror@plt+0x360d0>
  4389d4:	ldr	x21, [sp, #144]
  4389d8:	mov	x1, #0x1                   	// #1
  4389dc:	add	x0, sp, #0x180
  4389e0:	bl	436b08 <ferror@plt+0x34238>
  4389e4:	cbz	w0, 438728 <ferror@plt+0x35e58>
  4389e8:	str	xzr, [sp, #304]
  4389ec:	ldr	x25, [sp, #400]
  4389f0:	ldr	x28, [sp, #408]
  4389f4:	add	x28, x25, x28
  4389f8:	cmp	x25, x28
  4389fc:	b.cc	438ad8 <ferror@plt+0x36208>  // b.lo, b.ul, b.last
  438a00:	ldr	x3, [sp, #368]
  438a04:	ldr	x2, [sp, #360]
  438a08:	ldr	x1, [sp, #304]
  438a0c:	lsl	x1, x1, #3
  438a10:	mov	x0, x24
  438a14:	bl	4329cc <ferror@plt+0x300fc>
  438a18:	str	x0, [sp, #312]
  438a1c:	cbz	x0, 438728 <ferror@plt+0x35e58>
  438a20:	ldr	x0, [sp, #400]
  438a24:	ldrb	w0, [x0]
  438a28:	cbz	w0, 438c80 <ferror@plt+0x363b0>
  438a2c:	mov	x25, #0x0                   	// #0
  438a30:	add	x0, sp, #0x180
  438a34:	str	x21, [sp, #144]
  438a38:	str	x22, [sp, #152]
  438a3c:	str	x19, [sp, #160]
  438a40:	str	x23, [sp, #168]
  438a44:	str	x20, [sp, #176]
  438a48:	mov	x22, x0
  438a4c:	b	438bfc <ferror@plt+0x3632c>
  438a50:	add	x0, sp, #0x140
  438a54:	bl	436bf4 <ferror@plt+0x34324>
  438a58:	mov	x1, x0
  438a5c:	mov	w25, #0x1                   	// #1
  438a60:	b	438834 <ferror@plt+0x35f64>
  438a64:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d094>
  438a68:	add	x1, x1, #0xb80
  438a6c:	add	x0, sp, #0x140
  438a70:	bl	436aac <ferror@plt+0x341dc>
  438a74:	b	438728 <ferror@plt+0x35e58>
  438a78:	add	x0, sp, #0x180
  438a7c:	bl	436d40 <ferror@plt+0x34470>
  438a80:	and	w0, w0, #0xff
  438a84:	str	w0, [sp, #264]
  438a88:	b	4388bc <ferror@plt+0x35fec>
  438a8c:	ldr	x3, [sp, #368]
  438a90:	ldr	x2, [sp, #360]
  438a94:	lsl	x1, x1, #3
  438a98:	mov	x0, x24
  438a9c:	bl	4329cc <ferror@plt+0x300fc>
  438aa0:	str	x0, [sp, #296]
  438aa4:	cbnz	x0, 438984 <ferror@plt+0x360b4>
  438aa8:	b	438728 <ferror@plt+0x35e58>
  438aac:	mov	x0, #0x1                   	// #1
  438ab0:	b	438b14 <ferror@plt+0x36244>
  438ab4:	mov	x0, #0x1                   	// #1
  438ab8:	b	438b34 <ferror@plt+0x36264>
  438abc:	mov	x0, #0x1                   	// #1
  438ac0:	add	x25, x25, x0
  438ac4:	ldr	x0, [sp, #304]
  438ac8:	add	x0, x0, #0x1
  438acc:	str	x0, [sp, #304]
  438ad0:	cmp	x28, x25
  438ad4:	b.ls	438a00 <ferror@plt+0x36130>  // b.plast
  438ad8:	ldrb	w0, [x25]
  438adc:	cbz	w0, 438a00 <ferror@plt+0x36130>
  438ae0:	sub	x1, x28, x25
  438ae4:	mov	x0, x25
  438ae8:	bl	402300 <strnlen@plt>
  438aec:	mov	x1, x0
  438af0:	add	x0, x0, #0x1
  438af4:	add	x2, x25, x0
  438af8:	ldrsb	w0, [x25, x0]
  438afc:	tbz	w0, #31, 438aac <ferror@plt+0x361dc>
  438b00:	mov	x0, #0x1                   	// #1
  438b04:	add	x25, x25, x1
  438b08:	add	x0, x0, #0x1
  438b0c:	ldrsb	w1, [x25, x0]
  438b10:	tbnz	w1, #31, 438b08 <ferror@plt+0x36238>
  438b14:	add	x3, x2, x0
  438b18:	ldrsb	w0, [x2, x0]
  438b1c:	tbz	w0, #31, 438ab4 <ferror@plt+0x361e4>
  438b20:	mov	x0, #0x1                   	// #1
  438b24:	sub	x2, x3, #0x1
  438b28:	add	x0, x0, #0x1
  438b2c:	ldrsb	w1, [x2, x0]
  438b30:	tbnz	w1, #31, 438b28 <ferror@plt+0x36258>
  438b34:	add	x25, x3, x0
  438b38:	ldrsb	w0, [x3, x0]
  438b3c:	tbz	w0, #31, 438abc <ferror@plt+0x361ec>
  438b40:	mov	x0, #0x1                   	// #1
  438b44:	sub	x2, x25, #0x1
  438b48:	add	x0, x0, #0x1
  438b4c:	ldrsb	w1, [x2, x0]
  438b50:	tbnz	w1, #31, 438b48 <ferror@plt+0x36278>
  438b54:	b	438ac0 <ferror@plt+0x361f0>
  438b58:	sub	x1, x0, #0x1
  438b5c:	ldr	x2, [sp, #288]
  438b60:	cmp	x1, x2
  438b64:	b.cs	438c44 <ferror@plt+0x36374>  // b.hs, b.nlast
  438b68:	ldr	x1, [sp, #296]
  438b6c:	add	x0, x1, x0, lsl #3
  438b70:	ldur	x28, [x0, #-8]
  438b74:	mov	x0, x28
  438b78:	bl	4022b0 <strlen@plt>
  438b7c:	mov	x20, x0
  438b80:	mov	x0, x19
  438b84:	bl	4022b0 <strlen@plt>
  438b88:	mov	x23, x0
  438b8c:	add	x1, x20, x0
  438b90:	ldr	x3, [sp, #368]
  438b94:	ldr	x2, [sp, #360]
  438b98:	add	x1, x1, #0x2
  438b9c:	mov	x0, x24
  438ba0:	bl	4329cc <ferror@plt+0x300fc>
  438ba4:	mov	x21, x0
  438ba8:	cbz	x0, 439278 <ferror@plt+0x369a8>
  438bac:	mov	x2, x20
  438bb0:	mov	x1, x28
  438bb4:	bl	402260 <memcpy@plt>
  438bb8:	mov	w0, #0x2f                  	// #47
  438bbc:	strb	w0, [x21, x20]
  438bc0:	add	x0, x20, #0x1
  438bc4:	add	x2, x23, #0x1
  438bc8:	mov	x1, x19
  438bcc:	add	x0, x21, x0
  438bd0:	bl	402260 <memcpy@plt>
  438bd4:	ldr	x0, [sp, #312]
  438bd8:	str	x21, [x0, x25]
  438bdc:	mov	x0, x22
  438be0:	bl	436d74 <ferror@plt+0x344a4>
  438be4:	mov	x0, x22
  438be8:	bl	436d74 <ferror@plt+0x344a4>
  438bec:	add	x25, x25, #0x8
  438bf0:	ldr	x0, [sp, #400]
  438bf4:	ldrb	w0, [x0]
  438bf8:	cbz	w0, 438c6c <ferror@plt+0x3639c>
  438bfc:	ldr	w0, [sp, #440]
  438c00:	cbnz	w0, 439248 <ferror@plt+0x36978>
  438c04:	mov	x0, x22
  438c08:	bl	436f58 <ferror@plt+0x34688>
  438c0c:	mov	x19, x0
  438c10:	cbz	x0, 439260 <ferror@plt+0x36990>
  438c14:	mov	x0, x22
  438c18:	bl	436d74 <ferror@plt+0x344a4>
  438c1c:	ldrb	w1, [x19]
  438c20:	cmp	w1, #0x2f
  438c24:	b.eq	438c38 <ferror@plt+0x36368>  // b.none
  438c28:	cbnz	x0, 438b58 <ferror@plt+0x36288>
  438c2c:	ldr	x0, [sp, #136]
  438c30:	ldr	x28, [x0, #72]
  438c34:	cbnz	x28, 438b74 <ferror@plt+0x362a4>
  438c38:	ldr	x0, [sp, #312]
  438c3c:	str	x19, [x0, x25]
  438c40:	b	438bdc <ferror@plt+0x3630c>
  438c44:	ldr	x21, [sp, #144]
  438c48:	ldr	x22, [sp, #152]
  438c4c:	ldr	x19, [sp, #160]
  438c50:	ldr	x23, [sp, #168]
  438c54:	ldr	x20, [sp, #176]
  438c58:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d094>
  438c5c:	add	x1, x1, #0xba0
  438c60:	add	x0, sp, #0x140
  438c64:	bl	436aac <ferror@plt+0x341dc>
  438c68:	b	438728 <ferror@plt+0x35e58>
  438c6c:	ldr	x21, [sp, #144]
  438c70:	ldr	x22, [sp, #152]
  438c74:	ldr	x19, [sp, #160]
  438c78:	ldr	x23, [sp, #168]
  438c7c:	ldr	x20, [sp, #176]
  438c80:	ldr	w0, [sp, #440]
  438c84:	cbnz	w0, 438728 <ferror@plt+0x35e58>
  438c88:	ldr	x0, [sp, #304]
  438c8c:	cbz	x0, 438ca0 <ferror@plt+0x363d0>
  438c90:	ldr	x0, [sp, #312]
  438c94:	ldr	x0, [x0]
  438c98:	str	x0, [sp, #144]
  438c9c:	b	438cac <ferror@plt+0x363dc>
  438ca0:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  438ca4:	add	x0, x0, #0x710
  438ca8:	str	x0, [sp, #144]
  438cac:	ldr	x0, [sp, #344]
  438cb0:	cbz	x0, 4390e4 <ferror@plt+0x36814>
  438cb4:	ldr	x1, [sp, #144]
  438cb8:	mov	w2, #0x1                   	// #1
  438cbc:	mov	x4, #0x0                   	// #0
  438cc0:	mov	w3, #0x0                   	// #0
  438cc4:	add	x28, sp, #0x140
  438cc8:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x11094>
  438ccc:	add	x0, x0, #0x710
  438cd0:	str	x0, [sp, #216]
  438cd4:	add	x25, sp, #0xe0
  438cd8:	str	x21, [sp, #152]
  438cdc:	str	x22, [sp, #160]
  438ce0:	str	x19, [sp, #168]
  438ce4:	mov	x22, x1
  438ce8:	mov	w21, w2
  438cec:	mov	w19, w3
  438cf0:	str	x20, [sp, #176]
  438cf4:	mov	x20, x4
  438cf8:	str	x27, [sp, #184]
  438cfc:	str	x26, [sp, #192]
  438d00:	b	438d6c <ferror@plt+0x3649c>
  438d04:	sub	w26, w26, w1
  438d08:	ldr	w3, [sp, #272]
  438d0c:	udiv	w1, w26, w3
  438d10:	add	w19, w1, w19
  438d14:	ldr	w2, [sp, #264]
  438d18:	ldr	w0, [sp, #260]
  438d1c:	mul	w0, w19, w0
  438d20:	udiv	w0, w0, w2
  438d24:	add	x20, x20, x0
  438d28:	udiv	w0, w19, w2
  438d2c:	msub	w19, w0, w2, w19
  438d30:	msub	w1, w1, w3, w26
  438d34:	ldr	w26, [sp, #268]
  438d38:	add	w1, w1, w26
  438d3c:	add	w21, w21, w1
  438d40:	mov	x7, x25
  438d44:	ldr	x6, [sp, #368]
  438d48:	ldr	x5, [sp, #360]
  438d4c:	mov	w4, w21
  438d50:	mov	x3, x22
  438d54:	mov	x2, x20
  438d58:	mov	x1, x23
  438d5c:	mov	x0, x24
  438d60:	bl	43683c <ferror@plt+0x33f6c>
  438d64:	ldr	x0, [sp, #344]
  438d68:	cbz	x0, 4390cc <ferror@plt+0x367fc>
  438d6c:	mov	x0, x28
  438d70:	bl	436d40 <ferror@plt+0x34470>
  438d74:	and	w26, w0, #0xff
  438d78:	ldr	w1, [sp, #276]
  438d7c:	cmp	w1, w0, uxtb
  438d80:	b.ls	438d04 <ferror@plt+0x36434>  // b.plast
  438d84:	cbz	w26, 438dd4 <ferror@plt+0x36504>
  438d88:	cmp	w26, #0x5
  438d8c:	b.eq	43906c <ferror@plt+0x3679c>  // b.none
  438d90:	b.hi	438f9c <ferror@plt+0x366cc>  // b.pmore
  438d94:	cmp	w26, #0x3
  438d98:	b.eq	439030 <ferror@plt+0x36760>  // b.none
  438d9c:	b.ls	438f60 <ferror@plt+0x36690>  // b.plast
  438da0:	cmp	w26, #0x4
  438da4:	b.ne	43908c <ferror@plt+0x367bc>  // b.any
  438da8:	mov	x0, x28
  438dac:	bl	436d74 <ferror@plt+0x344a4>
  438db0:	cbz	x0, 4390c4 <ferror@plt+0x367f4>
  438db4:	sub	x1, x0, #0x1
  438db8:	ldr	x2, [sp, #304]
  438dbc:	cmp	x1, x2
  438dc0:	b.cs	439040 <ferror@plt+0x36770>  // b.hs, b.nlast
  438dc4:	ldr	x1, [sp, #312]
  438dc8:	add	x0, x1, x0, lsl #3
  438dcc:	ldur	x22, [x0, #-8]
  438dd0:	b	438d64 <ferror@plt+0x36494>
  438dd4:	mov	x0, x28
  438dd8:	bl	436d74 <ferror@plt+0x344a4>
  438ddc:	mov	x27, x0
  438de0:	mov	x0, x28
  438de4:	bl	436d40 <ferror@plt+0x34470>
  438de8:	and	w0, w0, #0xff
  438dec:	cmp	w0, #0x3
  438df0:	b.eq	438e34 <ferror@plt+0x36564>  // b.none
  438df4:	b.hi	438e20 <ferror@plt+0x36550>  // b.pmore
  438df8:	cmp	w0, #0x1
  438dfc:	b.eq	4390b0 <ferror@plt+0x367e0>  // b.none
  438e00:	cmp	w0, #0x2
  438e04:	b.ne	438f34 <ferror@plt+0x36664>  // b.any
  438e08:	ldr	x0, [sp, #136]
  438e0c:	ldr	w1, [x0, #48]
  438e10:	mov	x0, x28
  438e14:	bl	436e20 <ferror@plt+0x34550>
  438e18:	mov	x20, x0
  438e1c:	b	438d64 <ferror@plt+0x36494>
  438e20:	cmp	w0, #0x4
  438e24:	b.ne	438f34 <ferror@plt+0x36664>  // b.any
  438e28:	mov	x0, x28
  438e2c:	bl	436d74 <ferror@plt+0x344a4>
  438e30:	b	438d64 <ferror@plt+0x36494>
  438e34:	mov	x0, x28
  438e38:	bl	436f58 <ferror@plt+0x34688>
  438e3c:	mov	x22, x0
  438e40:	cbz	x0, 439290 <ferror@plt+0x369c0>
  438e44:	mov	x0, x28
  438e48:	bl	436d74 <ferror@plt+0x344a4>
  438e4c:	mov	x26, x0
  438e50:	mov	x0, x28
  438e54:	bl	436d74 <ferror@plt+0x344a4>
  438e58:	mov	x0, x28
  438e5c:	bl	436d74 <ferror@plt+0x344a4>
  438e60:	ldrb	w0, [x22]
  438e64:	cmp	w0, #0x2f
  438e68:	b.eq	438d64 <ferror@plt+0x36494>  // b.none
  438e6c:	cbnz	w26, 438ee8 <ferror@plt+0x36618>
  438e70:	ldr	x0, [sp, #136]
  438e74:	ldr	x0, [x0, #72]
  438e78:	str	x0, [sp, #200]
  438e7c:	ldr	x0, [sp, #200]
  438e80:	bl	4022b0 <strlen@plt>
  438e84:	mov	x26, x0
  438e88:	mov	x0, x22
  438e8c:	bl	4022b0 <strlen@plt>
  438e90:	str	x0, [sp, #208]
  438e94:	add	x1, x26, x0
  438e98:	ldr	x3, [sp, #368]
  438e9c:	ldr	x2, [sp, #360]
  438ea0:	add	x1, x1, #0x2
  438ea4:	mov	x0, x24
  438ea8:	bl	4329cc <ferror@plt+0x300fc>
  438eac:	mov	x27, x0
  438eb0:	cbz	x0, 4392ac <ferror@plt+0x369dc>
  438eb4:	mov	x2, x26
  438eb8:	ldr	x1, [sp, #200]
  438ebc:	bl	402260 <memcpy@plt>
  438ec0:	mov	w0, #0x2f                  	// #47
  438ec4:	strb	w0, [x27, x26]
  438ec8:	add	x0, x26, #0x1
  438ecc:	ldr	x2, [sp, #208]
  438ed0:	add	x2, x2, #0x1
  438ed4:	mov	x1, x22
  438ed8:	add	x0, x27, x0
  438edc:	bl	402260 <memcpy@plt>
  438ee0:	mov	x22, x27
  438ee4:	b	438d64 <ferror@plt+0x36494>
  438ee8:	sub	w26, w26, #0x1
  438eec:	ldr	x0, [sp, #288]
  438ef0:	cmp	x26, x0
  438ef4:	b.cs	438f08 <ferror@plt+0x36638>  // b.hs, b.nlast
  438ef8:	ldr	x0, [sp, #296]
  438efc:	ldr	x0, [x0, x26, lsl #3]
  438f00:	str	x0, [sp, #200]
  438f04:	b	438e7c <ferror@plt+0x365ac>
  438f08:	ldr	x21, [sp, #152]
  438f0c:	ldr	x22, [sp, #160]
  438f10:	ldr	x19, [sp, #168]
  438f14:	ldr	x20, [sp, #176]
  438f18:	ldr	x27, [sp, #184]
  438f1c:	ldr	x26, [sp, #192]
  438f20:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d094>
  438f24:	add	x1, x1, #0xbd8
  438f28:	add	x0, sp, #0x140
  438f2c:	bl	436aac <ferror@plt+0x341dc>
  438f30:	b	438728 <ferror@plt+0x35e58>
  438f34:	sub	x1, x27, #0x1
  438f38:	mov	x0, x28
  438f3c:	bl	436b08 <ferror@plt+0x34238>
  438f40:	cbnz	w0, 438d64 <ferror@plt+0x36494>
  438f44:	ldr	x21, [sp, #152]
  438f48:	ldr	x22, [sp, #160]
  438f4c:	ldr	x19, [sp, #168]
  438f50:	ldr	x20, [sp, #176]
  438f54:	ldr	x27, [sp, #184]
  438f58:	ldr	x26, [sp, #192]
  438f5c:	b	438728 <ferror@plt+0x35e58>
  438f60:	cmp	w26, #0x1
  438f64:	b.eq	439008 <ferror@plt+0x36738>  // b.none
  438f68:	cmp	w26, #0x2
  438f6c:	b.ne	43908c <ferror@plt+0x367bc>  // b.any
  438f70:	mov	x0, x28
  438f74:	bl	436d74 <ferror@plt+0x344a4>
  438f78:	add	x19, x0, w19, uxtw
  438f7c:	ldr	w1, [sp, #264]
  438f80:	ldr	w0, [sp, #260]
  438f84:	mul	x0, x0, x19
  438f88:	udiv	x0, x0, x1
  438f8c:	add	x20, x20, x0
  438f90:	udiv	x0, x19, x1
  438f94:	msub	w19, w0, w1, w19
  438f98:	b	438d64 <ferror@plt+0x36494>
  438f9c:	cmp	w26, #0x9
  438fa0:	b.eq	439078 <ferror@plt+0x367a8>  // b.none
  438fa4:	b.ls	438fc4 <ferror@plt+0x366f4>  // b.plast
  438fa8:	cmp	w26, #0xb
  438fac:	b.ls	438d64 <ferror@plt+0x36494>  // b.plast
  438fb0:	cmp	w26, #0xc
  438fb4:	b.ne	43908c <ferror@plt+0x367bc>  // b.any
  438fb8:	mov	x0, x28
  438fbc:	bl	436d74 <ferror@plt+0x344a4>
  438fc0:	b	438d64 <ferror@plt+0x36494>
  438fc4:	cmp	w26, #0x7
  438fc8:	b.ls	438d64 <ferror@plt+0x36494>  // b.plast
  438fcc:	cmp	w26, #0x8
  438fd0:	b.ne	43908c <ferror@plt+0x367bc>  // b.any
  438fd4:	mov	w0, #0xff                  	// #255
  438fd8:	sub	w0, w0, w1
  438fdc:	ldr	w1, [sp, #272]
  438fe0:	udiv	w0, w0, w1
  438fe4:	add	w19, w0, w19
  438fe8:	ldr	w1, [sp, #264]
  438fec:	ldr	w0, [sp, #260]
  438ff0:	mul	w0, w19, w0
  438ff4:	udiv	w0, w0, w1
  438ff8:	add	x20, x20, x0
  438ffc:	udiv	w0, w19, w1
  439000:	msub	w19, w0, w1, w19
  439004:	b	438d64 <ferror@plt+0x36494>
  439008:	mov	x7, x25
  43900c:	ldr	x6, [sp, #368]
  439010:	ldr	x5, [sp, #360]
  439014:	mov	w4, w21
  439018:	mov	x3, x22
  43901c:	mov	x2, x20
  439020:	mov	x1, x23
  439024:	mov	x0, x24
  439028:	bl	43683c <ferror@plt+0x33f6c>
  43902c:	b	438d64 <ferror@plt+0x36494>
  439030:	mov	x0, x28
  439034:	bl	436e90 <ferror@plt+0x345c0>
  439038:	add	w21, w21, w0
  43903c:	b	438d64 <ferror@plt+0x36494>
  439040:	ldr	x21, [sp, #152]
  439044:	ldr	x22, [sp, #160]
  439048:	ldr	x19, [sp, #168]
  43904c:	ldr	x20, [sp, #176]
  439050:	ldr	x27, [sp, #184]
  439054:	ldr	x26, [sp, #192]
  439058:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d094>
  43905c:	add	x1, x1, #0xc08
  439060:	add	x0, sp, #0x140
  439064:	bl	436aac <ferror@plt+0x341dc>
  439068:	b	438728 <ferror@plt+0x35e58>
  43906c:	mov	x0, x28
  439070:	bl	436d74 <ferror@plt+0x344a4>
  439074:	b	438d64 <ferror@plt+0x36494>
  439078:	mov	x0, x28
  43907c:	bl	436ce8 <ferror@plt+0x34418>
  439080:	add	x20, x20, w0, uxth
  439084:	mov	w19, #0x0                   	// #0
  439088:	b	438d64 <ferror@plt+0x36494>
  43908c:	sub	w26, w26, #0x1
  439090:	ldr	x0, [sp, #280]
  439094:	ldrb	w26, [x0, w26, uxtw]
  439098:	cbz	w26, 438d64 <ferror@plt+0x36494>
  43909c:	mov	x0, x28
  4390a0:	bl	436d74 <ferror@plt+0x344a4>
  4390a4:	subs	w26, w26, #0x1
  4390a8:	b.ne	43909c <ferror@plt+0x367cc>  // b.any
  4390ac:	b	438d64 <ferror@plt+0x36494>
  4390b0:	ldr	x22, [sp, #144]
  4390b4:	mov	w19, w26
  4390b8:	mov	w21, #0x1                   	// #1
  4390bc:	mov	x20, #0x0                   	// #0
  4390c0:	b	438d64 <ferror@plt+0x36494>
  4390c4:	ldr	x22, [sp, #216]
  4390c8:	b	438d64 <ferror@plt+0x36494>
  4390cc:	ldr	x21, [sp, #152]
  4390d0:	ldr	x22, [sp, #160]
  4390d4:	ldr	x19, [sp, #168]
  4390d8:	ldr	x20, [sp, #176]
  4390dc:	ldr	x27, [sp, #184]
  4390e0:	ldr	x26, [sp, #192]
  4390e4:	ldr	w0, [sp, #376]
  4390e8:	cbnz	w0, 438728 <ferror@plt+0x35e58>
  4390ec:	ldr	x0, [sp, #248]
  4390f0:	cbz	x0, 438728 <ferror@plt+0x35e58>
  4390f4:	add	x4, sp, #0xe0
  4390f8:	mov	x3, x27
  4390fc:	ldr	x25, [sp, #128]
  439100:	mov	x2, x25
  439104:	mov	x1, #0x18                  	// #24
  439108:	mov	x0, x24
  43910c:	bl	432b38 <ferror@plt+0x30268>
  439110:	cbz	x0, 438728 <ferror@plt+0x35e58>
  439114:	mov	x1, #0xffffffffffffffff    	// #-1
  439118:	str	x1, [x0]
  43911c:	str	xzr, [x0, #8]
  439120:	str	wzr, [x0, #16]
  439124:	str	wzr, [x0, #20]
  439128:	mov	x3, x27
  43912c:	mov	x2, x25
  439130:	add	x1, sp, #0xe0
  439134:	mov	x0, x24
  439138:	bl	432c78 <ferror@plt+0x303a8>
  43913c:	cbz	w0, 438728 <ferror@plt+0x35e58>
  439140:	ldr	x0, [sp, #224]
  439144:	str	x0, [sp, #136]
  439148:	adrp	x3, 436000 <ferror@plt+0x33730>
  43914c:	add	x3, x3, #0x5b0
  439150:	mov	x2, #0x18                  	// #24
  439154:	ldr	x1, [sp, #248]
  439158:	bl	43a078 <ferror@plt+0x377a8>
  43915c:	ldr	x0, [sp, #248]
  439160:	str	x0, [sp, #144]
  439164:	ldr	w0, [x24, #8]
  439168:	cbnz	w0, 439628 <ferror@plt+0x36d58>
  43916c:	add	x25, x23, #0x80
  439170:	ldr	x28, [x19, #16]
  439174:	str	x25, [sp, #176]
  439178:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1c094>
  43917c:	add	x0, x0, #0xff0
  439180:	str	x0, [sp, #384]
  439184:	ldr	x0, [x23, #56]
  439188:	str	x0, [sp, #392]
  43918c:	ldr	x0, [x28]
  439190:	str	x0, [sp, #400]
  439194:	ldr	x0, [x28, #8]
  439198:	str	x0, [sp, #408]
  43919c:	ldr	w0, [x23, #120]
  4391a0:	str	w0, [sp, #416]
  4391a4:	ldr	x0, [sp, #128]
  4391a8:	str	x0, [sp, #424]
  4391ac:	str	x27, [sp, #432]
  4391b0:	str	wzr, [sp, #440]
  4391b4:	add	x1, sp, #0x100
  4391b8:	add	x2, sp, #0x180
  4391bc:	str	x21, [sp, #152]
  4391c0:	str	x22, [sp, #160]
  4391c4:	str	x19, [sp, #168]
  4391c8:	mov	x19, x0
  4391cc:	mov	x21, x1
  4391d0:	mov	x22, x2
  4391d4:	ldr	x0, [sp, #408]
  4391d8:	cbz	x0, 4392c8 <ferror@plt+0x369f8>
  4391dc:	str	x25, [sp, #8]
  4391e0:	str	x25, [sp]
  4391e4:	mov	x7, x27
  4391e8:	mov	x6, x19
  4391ec:	mov	x5, x21
  4391f0:	mov	x4, x22
  4391f4:	mov	x3, #0x0                   	// #0
  4391f8:	mov	x2, x28
  4391fc:	mov	x1, x23
  439200:	mov	x0, x24
  439204:	bl	437db8 <ferror@plt+0x354e8>
  439208:	cbnz	w0, 4391d4 <ferror@plt+0x36904>
  43920c:	ldr	x21, [sp, #152]
  439210:	ldr	x22, [sp, #160]
  439214:	ldr	x19, [sp, #168]
  439218:	mov	x28, #0x0                   	// #0
  43921c:	mov	x3, x27
  439220:	ldr	x2, [sp, #128]
  439224:	add	x1, sp, #0x100
  439228:	mov	x0, x24
  43922c:	bl	4384bc <ferror@plt+0x35bec>
  439230:	mov	w0, #0x1                   	// #1
  439234:	b	43877c <ferror@plt+0x35eac>
  439238:	ldr	x21, [sp, #144]
  43923c:	b	438728 <ferror@plt+0x35e58>
  439240:	ldr	x21, [sp, #144]
  439244:	b	438728 <ferror@plt+0x35e58>
  439248:	ldr	x21, [sp, #144]
  43924c:	ldr	x22, [sp, #152]
  439250:	ldr	x19, [sp, #160]
  439254:	ldr	x23, [sp, #168]
  439258:	ldr	x20, [sp, #176]
  43925c:	b	438728 <ferror@plt+0x35e58>
  439260:	ldr	x21, [sp, #144]
  439264:	ldr	x22, [sp, #152]
  439268:	ldr	x19, [sp, #160]
  43926c:	ldr	x23, [sp, #168]
  439270:	ldr	x20, [sp, #176]
  439274:	b	438728 <ferror@plt+0x35e58>
  439278:	ldr	x21, [sp, #144]
  43927c:	ldr	x22, [sp, #152]
  439280:	ldr	x19, [sp, #160]
  439284:	ldr	x23, [sp, #168]
  439288:	ldr	x20, [sp, #176]
  43928c:	b	438728 <ferror@plt+0x35e58>
  439290:	ldr	x21, [sp, #152]
  439294:	ldr	x22, [sp, #160]
  439298:	ldr	x19, [sp, #168]
  43929c:	ldr	x20, [sp, #176]
  4392a0:	ldr	x27, [sp, #184]
  4392a4:	ldr	x26, [sp, #192]
  4392a8:	b	438728 <ferror@plt+0x35e58>
  4392ac:	ldr	x21, [sp, #152]
  4392b0:	ldr	x22, [sp, #160]
  4392b4:	ldr	x19, [sp, #168]
  4392b8:	ldr	x20, [sp, #176]
  4392bc:	ldr	x27, [sp, #184]
  4392c0:	ldr	x26, [sp, #192]
  4392c4:	b	438728 <ferror@plt+0x35e58>
  4392c8:	ldr	x21, [sp, #152]
  4392cc:	ldr	x22, [sp, #160]
  4392d0:	ldr	x19, [sp, #168]
  4392d4:	ldr	x28, [x25, #24]
  4392d8:	cbz	x28, 439218 <ferror@plt+0x36948>
  4392dc:	ldr	x0, [sp, #176]
  4392e0:	cbz	x0, 439324 <ferror@plt+0x36a54>
  4392e4:	mov	x3, x27
  4392e8:	ldr	x2, [sp, #128]
  4392ec:	ldr	x25, [sp, #176]
  4392f0:	mov	x1, x25
  4392f4:	mov	x0, x24
  4392f8:	bl	432c60 <ferror@plt+0x30390>
  4392fc:	cbz	x0, 439218 <ferror@plt+0x36948>
  439300:	str	xzr, [x25, #24]
  439304:	mov	x21, x0
  439308:	adrp	x3, 437000 <ferror@plt+0x34730>
  43930c:	add	x3, x3, #0xd50
  439310:	mov	x2, #0x18                  	// #24
  439314:	mov	x1, x28
  439318:	mov	x0, x21
  43931c:	bl	43a078 <ferror@plt+0x377a8>
  439320:	b	43921c <ferror@plt+0x3694c>
  439324:	mov	x3, x27
  439328:	ldr	x2, [sp, #128]
  43932c:	add	x1, sp, #0x140
  439330:	mov	x0, x24
  439334:	bl	432c78 <ferror@plt+0x303a8>
  439338:	cbz	w0, 439218 <ferror@plt+0x36948>
  43933c:	ldr	x21, [x25]
  439340:	b	439308 <ferror@plt+0x36a38>
  439344:	add	x1, x22, #0x70
  439348:	ldr	x2, [sp, #144]
  43934c:	stlr	x2, [x1]
  439350:	add	x1, x22, #0x78
  439354:	stlr	x21, [x1]
  439358:	add	x1, x22, #0x80
  43935c:	stlr	x28, [x1]
  439360:	add	x22, x22, #0x68
  439364:	ldr	x1, [sp, #136]
  439368:	stlr	x1, [x22]
  43936c:	b	43879c <ferror@plt+0x35ecc>
  439370:	mov	x4, #0x0                   	// #0
  439374:	mov	w3, #0x0                   	// #0
  439378:	mov	x2, #0x0                   	// #0
  43937c:	mov	x1, x20
  439380:	mov	x0, x27
  439384:	ldr	x5, [sp, #120]
  439388:	blr	x5
  43938c:	ldp	x19, x20, [sp, #32]
  439390:	ldp	x21, x22, [sp, #48]
  439394:	ldp	x27, x28, [sp, #96]
  439398:	b	438670 <ferror@plt+0x35da0>
  43939c:	ldr	x21, [sp, #136]
  4393a0:	b	4396c0 <ferror@plt+0x36df0>
  4393a4:	mov	x3, x1
  4393a8:	cmp	x2, x3
  4393ac:	b.cs	4395f0 <ferror@plt+0x36d20>  // b.hs, b.nlast
  4393b0:	add	x0, x2, x3
  4393b4:	lsr	x1, x0, #1
  4393b8:	and	x0, x0, #0xfffffffffffffffe
  4393bc:	add	x0, x0, x1
  4393c0:	add	x5, x21, x0, lsl #3
  4393c4:	ldr	x0, [x21, x0, lsl #3]
  4393c8:	cmp	x0, x20
  4393cc:	b.hi	4393a4 <ferror@plt+0x36ad4>  // b.pmore
  4393d0:	ldr	x0, [x5, #24]
  4393d4:	cmp	x0, x20
  4393d8:	b.hi	4395d8 <ferror@plt+0x36d08>  // b.pmore
  4393dc:	add	x2, x1, #0x1
  4393e0:	b	4393a8 <ferror@plt+0x36ad8>
  4393e4:	ldr	x21, [x4, #64]
  4393e8:	cbz	x21, 439464 <ferror@plt+0x36b94>
  4393ec:	ldrb	w0, [x21]
  4393f0:	cmp	w0, #0x2f
  4393f4:	b.eq	439464 <ferror@plt+0x36b94>  // b.none
  4393f8:	ldr	x23, [x4, #72]
  4393fc:	cbz	x23, 439464 <ferror@plt+0x36b94>
  439400:	mov	x0, x21
  439404:	bl	4022b0 <strlen@plt>
  439408:	mov	x25, x0
  43940c:	mov	x0, x23
  439410:	bl	4022b0 <strlen@plt>
  439414:	mov	x22, x0
  439418:	add	x1, x25, x0
  43941c:	mov	x3, x27
  439420:	ldr	x2, [sp, #128]
  439424:	add	x1, x1, #0x2
  439428:	mov	x0, x24
  43942c:	bl	4329cc <ferror@plt+0x300fc>
  439430:	mov	x24, x0
  439434:	cbz	x0, 439470 <ferror@plt+0x36ba0>
  439438:	mov	x2, x22
  43943c:	mov	x1, x23
  439440:	bl	402260 <memcpy@plt>
  439444:	mov	w0, #0x2f                  	// #47
  439448:	strb	w0, [x24, x22]
  43944c:	add	x0, x22, #0x1
  439450:	add	x2, x25, #0x1
  439454:	mov	x1, x21
  439458:	add	x0, x24, x0
  43945c:	bl	402260 <memcpy@plt>
  439460:	mov	x21, x24
  439464:	ldr	x0, [x19, #16]
  439468:	str	x21, [x0, #80]
  43946c:	b	4395f8 <ferror@plt+0x36d28>
  439470:	str	wzr, [x26]
  439474:	mov	w0, #0x0                   	// #0
  439478:	ldp	x19, x20, [sp, #32]
  43947c:	ldp	x21, x22, [sp, #48]
  439480:	ldp	x27, x28, [sp, #96]
  439484:	b	438670 <ferror@plt+0x35da0>
  439488:	mov	x4, #0x0                   	// #0
  43948c:	ldr	w3, [x5, #16]
  439490:	ldr	x2, [x5, #8]
  439494:	mov	x1, x20
  439498:	mov	x0, x27
  43949c:	ldr	x5, [sp, #120]
  4394a0:	blr	x5
  4394a4:	ldp	x19, x20, [sp, #32]
  4394a8:	ldp	x21, x22, [sp, #48]
  4394ac:	ldp	x27, x28, [sp, #96]
  4394b0:	b	438670 <ferror@plt+0x35da0>
  4394b4:	mov	x6, x2
  4394b8:	cmp	x4, x6
  4394bc:	b.cs	4395ac <ferror@plt+0x36cdc>  // b.hs, b.nlast
  4394c0:	add	x0, x4, x6
  4394c4:	lsr	x2, x0, #1
  4394c8:	and	x0, x0, #0xfffffffffffffffe
  4394cc:	add	x0, x0, x2
  4394d0:	lsl	x1, x0, #3
  4394d4:	mov	x7, x1
  4394d8:	add	x1, x3, x1
  4394dc:	ldr	x0, [x3, x0, lsl #3]
  4394e0:	cmp	x0, x20
  4394e4:	b.hi	4394b4 <ferror@plt+0x36be4>  // b.pmore
  4394e8:	ldr	x0, [x1, #8]
  4394ec:	cmp	x0, x20
  4394f0:	b.hi	4394fc <ferror@plt+0x36c2c>  // b.pmore
  4394f4:	add	x4, x2, #0x1
  4394f8:	b	4394b8 <ferror@plt+0x36be8>
  4394fc:	asr	x0, x7, #3
  439500:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  439504:	movk	x2, #0xaaab
  439508:	mul	x0, x0, x2
  43950c:	add	x0, x0, #0x1
  439510:	cmp	x8, x0
  439514:	b.ls	43954c <ferror@plt+0x36c7c>  // b.plast
  439518:	ldr	x0, [x1, #24]
  43951c:	cmp	x0, x20
  439520:	b.hi	43954c <ferror@plt+0x36c7c>  // b.pmore
  439524:	ldr	x0, [x1, #32]
  439528:	cmp	x0, x20
  43952c:	b.ls	43954c <ferror@plt+0x36c7c>  // b.plast
  439530:	add	x1, x1, #0x18
  439534:	sub	x0, x1, x3
  439538:	asr	x0, x0, #3
  43953c:	mul	x0, x0, x2
  439540:	add	x0, x0, #0x1
  439544:	cmp	x8, x0
  439548:	b.hi	439518 <ferror@plt+0x36c48>  // b.pmore
  43954c:	ldr	x19, [x1, #16]
  439550:	ldr	x0, [x5, #8]
  439554:	str	x0, [sp, #456]
  439558:	ldr	w0, [x5, #16]
  43955c:	str	w0, [sp, #452]
  439560:	add	x5, sp, #0x1c4
  439564:	add	x4, sp, #0x1c8
  439568:	mov	x3, x27
  43956c:	ldr	x21, [sp, #120]
  439570:	mov	x2, x21
  439574:	mov	x1, x19
  439578:	mov	x0, x20
  43957c:	bl	43660c <ferror@plt+0x33d3c>
  439580:	cbnz	w0, 4396d0 <ferror@plt+0x36e00>
  439584:	ldr	x4, [x19]
  439588:	ldr	w3, [sp, #452]
  43958c:	ldr	x2, [sp, #456]
  439590:	mov	x1, x20
  439594:	mov	x0, x27
  439598:	blr	x21
  43959c:	ldp	x19, x20, [sp, #32]
  4395a0:	ldp	x21, x22, [sp, #48]
  4395a4:	ldp	x27, x28, [sp, #96]
  4395a8:	b	438670 <ferror@plt+0x35da0>
  4395ac:	mov	x4, #0x0                   	// #0
  4395b0:	ldr	w3, [x5, #16]
  4395b4:	ldr	x2, [x5, #8]
  4395b8:	mov	x1, x20
  4395bc:	mov	x0, x27
  4395c0:	ldr	x5, [sp, #120]
  4395c4:	blr	x5
  4395c8:	ldp	x19, x20, [sp, #32]
  4395cc:	ldp	x21, x22, [sp, #48]
  4395d0:	ldp	x27, x28, [sp, #96]
  4395d4:	b	438670 <ferror@plt+0x35da0>
  4395d8:	ldr	x8, [x4, #128]
  4395dc:	cbz	x8, 439488 <ferror@plt+0x36bb8>
  4395e0:	ldr	x3, [x4, #120]
  4395e4:	mov	x6, x8
  4395e8:	mov	x4, #0x0                   	// #0
  4395ec:	b	4394b8 <ferror@plt+0x36be8>
  4395f0:	ldr	x0, [x4, #80]
  4395f4:	cbz	x0, 4393e4 <ferror@plt+0x36b14>
  4395f8:	ldr	x0, [x19, #16]
  4395fc:	mov	x4, #0x0                   	// #0
  439600:	mov	w3, #0x0                   	// #0
  439604:	ldr	x2, [x0, #80]
  439608:	mov	x1, x20
  43960c:	mov	x0, x27
  439610:	ldr	x5, [sp, #120]
  439614:	blr	x5
  439618:	ldp	x19, x20, [sp, #32]
  43961c:	ldp	x21, x22, [sp, #48]
  439620:	ldp	x27, x28, [sp, #96]
  439624:	b	438670 <ferror@plt+0x35da0>
  439628:	ldr	x28, [x19, #16]
  43962c:	stp	xzr, xzr, [sp, #320]
  439630:	stp	xzr, xzr, [sp, #336]
  439634:	str	x21, [sp, #176]
  439638:	add	x25, sp, #0x140
  43963c:	b	439178 <ferror@plt+0x368a8>
  439640:	stp	x21, x22, [sp, #48]
  439644:	mov	x19, x1
  439648:	asr	x0, x5, #3
  43964c:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  439650:	movk	x5, #0xaaab
  439654:	mul	x0, x0, x5
  439658:	add	x0, x0, #0x1
  43965c:	mov	x1, x5
  439660:	cmp	x6, x0
  439664:	b.ls	43969c <ferror@plt+0x36dcc>  // b.plast
  439668:	ldr	x0, [x19, #24]
  43966c:	cmp	x0, x20
  439670:	b.hi	43969c <ferror@plt+0x36dcc>  // b.pmore
  439674:	ldr	x0, [x19, #32]
  439678:	cmp	x0, x20
  43967c:	b.ls	43969c <ferror@plt+0x36dcc>  // b.plast
  439680:	add	x19, x19, #0x18
  439684:	sub	x0, x19, x2
  439688:	asr	x0, x0, #3
  43968c:	mul	x0, x0, x1
  439690:	add	x0, x0, #0x1
  439694:	cmp	x6, x0
  439698:	b.hi	439668 <ferror@plt+0x36d98>  // b.pmore
  43969c:	ldr	x22, [x19, #16]
  4396a0:	ldr	x21, [x22, #104]
  4396a4:	cmp	x2, x19
  4396a8:	b.cc	4386ac <ferror@plt+0x35ddc>  // b.lo, b.ul, b.last
  4396ac:	ldr	w0, [x24, #8]
  4396b0:	cbnz	w0, 4386d0 <ferror@plt+0x35e00>
  4396b4:	cbz	x21, 4386dc <ferror@plt+0x35e0c>
  4396b8:	cmn	x21, #0x1
  4396bc:	b.eq	439370 <ferror@plt+0x36aa0>  // b.none
  4396c0:	ldr	x4, [x19, #16]
  4396c4:	ldr	x3, [x4, #112]
  4396c8:	mov	x2, #0x0                   	// #0
  4396cc:	b	4393a8 <ferror@plt+0x36ad8>
  4396d0:	ldp	x19, x20, [sp, #32]
  4396d4:	ldp	x21, x22, [sp, #48]
  4396d8:	ldp	x27, x28, [sp, #96]
  4396dc:	b	438670 <ferror@plt+0x35da0>
  4396e0:	stp	x29, x30, [sp, #-96]!
  4396e4:	mov	x29, sp
  4396e8:	stp	x19, x20, [sp, #16]
  4396ec:	stp	x21, x22, [sp, #32]
  4396f0:	stp	x23, x24, [sp, #48]
  4396f4:	mov	x20, x0
  4396f8:	mov	x23, x1
  4396fc:	mov	x21, x2
  439700:	mov	x24, x3
  439704:	mov	x22, x4
  439708:	ldr	w0, [x0, #8]
  43970c:	cbnz	w0, 43975c <ferror@plt+0x36e8c>
  439710:	ldr	x19, [x20, #32]
  439714:	cbz	x19, 4397a8 <ferror@plt+0x36ed8>
  439718:	str	x25, [sp, #64]
  43971c:	add	x25, sp, #0x5c
  439720:	mov	x6, x25
  439724:	mov	x5, x22
  439728:	mov	x4, x24
  43972c:	mov	x3, x21
  439730:	mov	x2, x23
  439734:	mov	x1, x19
  439738:	mov	x0, x20
  43973c:	bl	4385c0 <ferror@plt+0x35cf0>
  439740:	cbnz	w0, 4397d4 <ferror@plt+0x36f04>
  439744:	ldr	w1, [sp, #92]
  439748:	cbnz	w1, 4397dc <ferror@plt+0x36f0c>
  43974c:	ldr	x19, [x19]
  439750:	cbnz	x19, 439720 <ferror@plt+0x36e50>
  439754:	ldr	x25, [sp, #64]
  439758:	b	4397a8 <ferror@plt+0x36ed8>
  43975c:	str	x25, [sp, #64]
  439760:	add	x19, x20, #0x20
  439764:	add	x25, sp, #0x5c
  439768:	ldar	x19, [x19]
  43976c:	cbz	x19, 4397a4 <ferror@plt+0x36ed4>
  439770:	mov	x6, x25
  439774:	mov	x5, x22
  439778:	mov	x4, x24
  43977c:	mov	x3, x21
  439780:	mov	x2, x23
  439784:	mov	x1, x19
  439788:	mov	x0, x20
  43978c:	bl	4385c0 <ferror@plt+0x35cf0>
  439790:	cbnz	w0, 4397e4 <ferror@plt+0x36f14>
  439794:	ldr	w1, [sp, #92]
  439798:	cbz	w1, 439768 <ferror@plt+0x36e98>
  43979c:	ldr	x25, [sp, #64]
  4397a0:	b	4397c0 <ferror@plt+0x36ef0>
  4397a4:	ldr	x25, [sp, #64]
  4397a8:	mov	x4, #0x0                   	// #0
  4397ac:	mov	w3, #0x0                   	// #0
  4397b0:	mov	x2, #0x0                   	// #0
  4397b4:	mov	x1, x23
  4397b8:	mov	x0, x22
  4397bc:	blr	x21
  4397c0:	ldp	x19, x20, [sp, #16]
  4397c4:	ldp	x21, x22, [sp, #32]
  4397c8:	ldp	x23, x24, [sp, #48]
  4397cc:	ldp	x29, x30, [sp], #96
  4397d0:	ret
  4397d4:	ldr	x25, [sp, #64]
  4397d8:	b	4397c0 <ferror@plt+0x36ef0>
  4397dc:	ldr	x25, [sp, #64]
  4397e0:	b	4397c0 <ferror@plt+0x36ef0>
  4397e4:	ldr	x25, [sp, #64]
  4397e8:	b	4397c0 <ferror@plt+0x36ef0>
  4397ec:	sub	sp, sp, #0x290
  4397f0:	stp	x29, x30, [sp, #48]
  4397f4:	add	x29, sp, #0x30
  4397f8:	stp	x19, x20, [sp, #64]
  4397fc:	stp	x21, x22, [sp, #80]
  439800:	stp	x23, x24, [sp, #96]
  439804:	stp	x27, x28, [sp, #128]
  439808:	mov	x24, x0
  43980c:	str	x1, [sp, #208]
  439810:	str	x2, [sp, #272]
  439814:	str	x3, [sp, #264]
  439818:	str	x4, [sp, #280]
  43981c:	str	x5, [sp, #288]
  439820:	str	x6, [sp, #216]
  439824:	str	x7, [sp, #168]
  439828:	ldr	x23, [sp, #704]
  43982c:	ldr	x27, [sp, #712]
  439830:	stp	xzr, xzr, [sp, #336]
  439834:	str	xzr, [sp, #352]
  439838:	stp	xzr, xzr, [sp, #368]
  43983c:	str	xzr, [sp, #384]
  439840:	str	xzr, [sp, #360]
  439844:	str	xzr, [sp, #392]
  439848:	adrp	x0, 463000 <_obstack_memory_used@@Base+0x1c094>
  43984c:	add	x0, x0, #0xff0
  439850:	str	x0, [sp, #400]
  439854:	str	x2, [sp, #408]
  439858:	str	x2, [sp, #416]
  43985c:	str	x3, [sp, #424]
  439860:	ldr	w0, [sp, #688]
  439864:	str	w0, [sp, #432]
  439868:	str	x23, [sp, #440]
  43986c:	str	x27, [sp, #448]
  439870:	str	wzr, [sp, #456]
  439874:	add	x0, sp, #0x200
  439878:	stp	xzr, xzr, [x0, #-200]
  43987c:	str	xzr, [sp, #328]
  439880:	cbz	x3, 4398bc <ferror@plt+0x36fec>
  439884:	stp	x25, x26, [sp, #112]
  439888:	str	xzr, [sp, #160]
  43988c:	str	xzr, [sp, #176]
  439890:	add	x28, sp, #0x190
  439894:	add	x0, sp, #0x138
  439898:	str	x0, [sp, #224]
  43989c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1d094>
  4398a0:	add	x0, x0, #0x10
  4398a4:	str	x0, [sp, #232]
  4398a8:	add	x0, sp, #0x150
  4398ac:	str	x0, [sp, #240]
  4398b0:	mov	x26, x24
  4398b4:	mov	x24, x27
  4398b8:	b	439af0 <ferror@plt+0x37220>
  4398bc:	str	x3, [sp, #160]
  4398c0:	b	439e28 <ferror@plt+0x37558>
  4398c4:	mov	x27, x24
  4398c8:	mov	x24, x26
  4398cc:	b	439920 <ferror@plt+0x37050>
  4398d0:	mov	x0, x28
  4398d4:	bl	436bf4 <ferror@plt+0x34324>
  4398d8:	str	x0, [sp, #152]
  4398dc:	mov	w0, #0x1                   	// #1
  4398e0:	str	w0, [sp, #192]
  4398e4:	b	439b18 <ferror@plt+0x37248>
  4398e8:	mov	x27, x24
  4398ec:	mov	x24, x26
  4398f0:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d094>
  4398f4:	add	x1, x1, #0xc38
  4398f8:	add	x0, sp, #0x1d0
  4398fc:	bl	436aac <ferror@plt+0x341dc>
  439900:	b	439920 <ferror@plt+0x37050>
  439904:	mov	x27, x24
  439908:	mov	x24, x26
  43990c:	mov	w2, #0x0                   	// #0
  439910:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d094>
  439914:	add	x1, x1, #0xc58
  439918:	mov	x0, x27
  43991c:	blr	x23
  439920:	ldr	x0, [sp, #160]
  439924:	cbz	x0, 439994 <ferror@plt+0x370c4>
  439928:	ldr	x19, [sp, #312]
  43992c:	add	x21, x19, x0, lsl #3
  439930:	mov	x20, #0x88                  	// #136
  439934:	ldr	x1, [x19]
  439938:	mov	x3, x27
  43993c:	mov	x2, x23
  439940:	add	x1, x1, #0x58
  439944:	mov	x0, x24
  439948:	bl	438528 <ferror@plt+0x35c58>
  43994c:	mov	x4, x27
  439950:	mov	x3, x23
  439954:	mov	x2, x20
  439958:	ldr	x1, [x19], #8
  43995c:	mov	x0, x24
  439960:	bl	432920 <ferror@plt+0x30050>
  439964:	cmp	x21, x19
  439968:	b.ne	439934 <ferror@plt+0x37064>  // b.any
  43996c:	ldr	x0, [sp, #328]
  439970:	ldr	x1, [sp, #320]
  439974:	add	x0, x0, x1
  439978:	str	x0, [sp, #328]
  43997c:	str	xzr, [sp, #320]
  439980:	mov	x3, x27
  439984:	mov	x2, x23
  439988:	add	x1, sp, #0x138
  43998c:	mov	x0, x24
  439990:	bl	432c78 <ferror@plt+0x303a8>
  439994:	ldr	x0, [sp, #360]
  439998:	cbnz	x0, 439fdc <ferror@plt+0x3770c>
  43999c:	ldp	x25, x26, [sp, #112]
  4399a0:	mov	w0, #0x0                   	// #0
  4399a4:	b	439f6c <ferror@plt+0x3769c>
  4399a8:	mov	x0, x20
  4399ac:	bl	436d74 <ferror@plt+0x344a4>
  4399b0:	mov	x0, x20
  4399b4:	bl	436d74 <ferror@plt+0x344a4>
  4399b8:	cbz	x0, 4399f0 <ferror@plt+0x37120>
  4399bc:	ldr	w0, [sp, #648]
  4399c0:	cbnz	w0, 439fac <ferror@plt+0x376dc>
  4399c4:	add	x21, x21, #0x1
  4399c8:	mov	x0, x20
  4399cc:	bl	436d74 <ferror@plt+0x344a4>
  4399d0:	mov	x0, x20
  4399d4:	bl	436d40 <ferror@plt+0x34470>
  4399d8:	mov	x0, x20
  4399dc:	bl	436d74 <ferror@plt+0x344a4>
  4399e0:	cbz	x0, 4399a8 <ferror@plt+0x370d8>
  4399e4:	mov	x0, x20
  4399e8:	bl	436d74 <ferror@plt+0x344a4>
  4399ec:	b	4399d8 <ferror@plt+0x37108>
  4399f0:	mov	x27, x0
  4399f4:	str	x0, [sp, #200]
  4399f8:	ldr	w0, [sp, #648]
  4399fc:	cbnz	w0, 439fb8 <ferror@plt+0x376e8>
  439a00:	cbnz	x21, 439c54 <ferror@plt+0x37384>
  439a04:	add	x0, sp, #0x1d0
  439a08:	bl	436d40 <ferror@plt+0x34470>
  439a0c:	and	w2, w0, #0xff
  439a10:	ldr	x3, [sp, #176]
  439a14:	str	x3, [x19, #24]
  439a18:	ldr	w4, [sp, #192]
  439a1c:	cmp	w4, #0x0
  439a20:	mov	x0, #0xc                   	// #12
  439a24:	mov	x1, #0x4                   	// #4
  439a28:	csel	x0, x0, x1, ne  // ne = any
  439a2c:	ldr	x1, [sp, #152]
  439a30:	add	x0, x0, x1
  439a34:	add	x0, x3, x0
  439a38:	str	x0, [sp, #176]
  439a3c:	str	x0, [x19, #32]
  439a40:	ldr	x1, [sp, #480]
  439a44:	str	x1, [x19]
  439a48:	ldr	x0, [sp, #488]
  439a4c:	str	x0, [x19, #8]
  439a50:	ldr	x0, [sp, #184]
  439a54:	sub	x1, x1, x0
  439a58:	str	x1, [x19, #16]
  439a5c:	ldr	w0, [sp, #196]
  439a60:	str	w0, [x19, #40]
  439a64:	str	w4, [x19, #44]
  439a68:	str	w2, [x19, #48]
  439a6c:	str	xzr, [x19, #64]
  439a70:	str	xzr, [x19, #72]
  439a74:	str	xzr, [x19, #80]
  439a78:	str	xzr, [x19, #56]
  439a7c:	str	xzr, [x19, #104]
  439a80:	str	xzr, [x19, #112]
  439a84:	str	xzr, [x19, #120]
  439a88:	str	xzr, [x19, #128]
  439a8c:	add	x0, sp, #0x250
  439a90:	str	x0, [sp, #40]
  439a94:	ldr	x0, [sp, #240]
  439a98:	str	x0, [sp, #32]
  439a9c:	str	x19, [sp, #24]
  439aa0:	str	x24, [sp, #16]
  439aa4:	str	x23, [sp, #8]
  439aa8:	ldr	x0, [sp, #696]
  439aac:	str	x0, [sp]
  439ab0:	ldr	w7, [sp, #688]
  439ab4:	ldr	x6, [sp, #664]
  439ab8:	ldr	x5, [sp, #656]
  439abc:	ldr	x4, [sp, #680]
  439ac0:	ldr	x3, [sp, #672]
  439ac4:	add	x2, sp, #0x1d0
  439ac8:	ldr	x1, [sp, #208]
  439acc:	mov	x0, x26
  439ad0:	bl	4378ac <ferror@plt+0x34fdc>
  439ad4:	cbz	w0, 43a044 <ferror@plt+0x37774>
  439ad8:	ldr	w0, [sp, #520]
  439adc:	cbnz	w0, 439fd0 <ferror@plt+0x37700>
  439ae0:	ldr	x0, [sp, #424]
  439ae4:	cbz	x0, 439e14 <ferror@plt+0x37544>
  439ae8:	ldr	w0, [sp, #456]
  439aec:	cbnz	w0, 4398c4 <ferror@plt+0x36ff4>
  439af0:	ldr	x0, [sp, #416]
  439af4:	str	x0, [sp, #184]
  439af8:	mov	x0, x28
  439afc:	bl	436b74 <ferror@plt+0x342a4>
  439b00:	mov	w1, w0
  439b04:	str	x1, [sp, #152]
  439b08:	str	wzr, [sp, #192]
  439b0c:	mov	x1, #0xffffffff            	// #4294967295
  439b10:	cmp	x1, w0, uxtw
  439b14:	b.eq	4398d0 <ferror@plt+0x37000>  // b.none
  439b18:	ldp	x0, x1, [x28]
  439b1c:	stp	x0, x1, [sp, #464]
  439b20:	ldp	x0, x1, [x28, #16]
  439b24:	stp	x0, x1, [sp, #480]
  439b28:	ldp	x0, x1, [x28, #32]
  439b2c:	stp	x0, x1, [sp, #496]
  439b30:	ldp	x0, x1, [x28, #48]
  439b34:	add	x2, sp, #0x200
  439b38:	stp	x0, x1, [x2]
  439b3c:	ldr	x0, [sp, #152]
  439b40:	str	x0, [sp, #488]
  439b44:	mov	x1, x0
  439b48:	mov	x0, x28
  439b4c:	bl	436b08 <ferror@plt+0x34238>
  439b50:	cbz	w0, 439f88 <ferror@plt+0x376b8>
  439b54:	add	x0, sp, #0x1d0
  439b58:	bl	436ce8 <ferror@plt+0x34418>
  439b5c:	and	w0, w0, #0xffff
  439b60:	str	w0, [sp, #196]
  439b64:	sub	w0, w0, #0x2
  439b68:	cmp	w0, #0x2
  439b6c:	b.hi	4398e8 <ferror@plt+0x37018>  // b.pmore
  439b70:	ldr	x4, [sp, #224]
  439b74:	mov	x3, x24
  439b78:	mov	x2, x23
  439b7c:	mov	x1, #0x8                   	// #8
  439b80:	mov	x0, x26
  439b84:	bl	432b38 <ferror@plt+0x30268>
  439b88:	mov	x20, x0
  439b8c:	cbz	x0, 439f94 <ferror@plt+0x376c4>
  439b90:	mov	x3, x24
  439b94:	mov	x2, x23
  439b98:	mov	x1, #0x88                  	// #136
  439b9c:	mov	x0, x26
  439ba0:	bl	4329cc <ferror@plt+0x300fc>
  439ba4:	mov	x19, x0
  439ba8:	cbz	x0, 439fa0 <ferror@plt+0x376d0>
  439bac:	str	x0, [x20]
  439bb0:	ldr	x0, [sp, #160]
  439bb4:	add	x0, x0, #0x1
  439bb8:	str	x0, [sp, #160]
  439bbc:	add	x0, x19, #0x58
  439bc0:	str	x0, [sp, #248]
  439bc4:	stp	xzr, xzr, [x19, #88]
  439bc8:	ldr	w1, [sp, #192]
  439bcc:	add	x0, sp, #0x1d0
  439bd0:	bl	436cc4 <ferror@plt+0x343f4>
  439bd4:	str	xzr, [x19, #88]
  439bd8:	str	xzr, [x19, #96]
  439bdc:	ldr	x1, [sp, #168]
  439be0:	cmp	x1, x0
  439be4:	b.ls	439904 <ferror@plt+0x37034>  // b.plast
  439be8:	ldr	x1, [sp, #232]
  439bec:	str	x1, [sp, #528]
  439bf0:	ldr	x1, [sp, #216]
  439bf4:	str	x1, [sp, #536]
  439bf8:	add	x1, x1, x0
  439bfc:	str	x1, [sp, #544]
  439c00:	ldr	x1, [sp, #168]
  439c04:	sub	x0, x1, x0
  439c08:	str	x0, [sp, #552]
  439c0c:	ldr	w0, [sp, #688]
  439c10:	str	w0, [sp, #560]
  439c14:	str	x23, [sp, #568]
  439c18:	str	x24, [sp, #576]
  439c1c:	str	wzr, [sp, #584]
  439c20:	add	x0, sp, #0x200
  439c24:	ldp	x0, x1, [x0, #16]
  439c28:	add	x2, sp, #0x200
  439c2c:	stp	x0, x1, [x2, #80]
  439c30:	ldp	x0, x1, [x2, #32]
  439c34:	stp	x0, x1, [x2, #96]
  439c38:	ldp	x0, x1, [x2, #48]
  439c3c:	stp	x0, x1, [x2, #112]
  439c40:	ldp	x0, x1, [x2, #64]
  439c44:	stp	x0, x1, [x2, #128]
  439c48:	mov	x21, #0x0                   	// #0
  439c4c:	add	x20, sp, #0x250
  439c50:	b	4399b0 <ferror@plt+0x370e0>
  439c54:	lsl	x20, x21, #5
  439c58:	mov	x3, x24
  439c5c:	mov	x2, x23
  439c60:	mov	x1, x20
  439c64:	mov	x0, x26
  439c68:	bl	4329cc <ferror@plt+0x300fc>
  439c6c:	str	x0, [x19, #96]
  439c70:	cbz	x0, 439fc4 <ferror@plt+0x376f4>
  439c74:	str	x21, [x19, #88]
  439c78:	mov	x2, x20
  439c7c:	mov	w1, #0x0                   	// #0
  439c80:	bl	402490 <memset@plt>
  439c84:	ldr	w0, [sp, #584]
  439c88:	cbnz	w0, 439dcc <ferror@plt+0x374fc>
  439c8c:	add	x20, sp, #0x210
  439c90:	str	x26, [sp, #256]
  439c94:	str	x23, [sp, #704]
  439c98:	str	x24, [sp, #712]
  439c9c:	str	x28, [sp, #296]
  439ca0:	b	439d00 <ferror@plt+0x37430>
  439ca4:	add	x21, x21, #0x1
  439ca8:	mov	x0, x22
  439cac:	bl	436d74 <ferror@plt+0x344a4>
  439cb0:	mov	x0, x22
  439cb4:	bl	436d74 <ferror@plt+0x344a4>
  439cb8:	mov	x24, x0
  439cbc:	cbnz	x0, 439ca4 <ferror@plt+0x373d4>
  439cc0:	cbnz	x21, 439d58 <ferror@plt+0x37488>
  439cc4:	mov	x0, x20
  439cc8:	bl	436d74 <ferror@plt+0x344a4>
  439ccc:	mov	x0, x20
  439cd0:	bl	436d74 <ferror@plt+0x344a4>
  439cd4:	mov	x22, #0x0                   	// #0
  439cd8:	ldr	x1, [x19, #96]
  439cdc:	add	x0, x1, x27
  439ce0:	str	x23, [x1, x27]
  439ce4:	str	w28, [x0, #8]
  439ce8:	str	w26, [x0, #12]
  439cec:	str	x21, [x0, #16]
  439cf0:	str	x22, [x0, #24]
  439cf4:	add	x27, x27, #0x20
  439cf8:	ldr	w0, [sp, #584]
  439cfc:	cbnz	w0, 439da8 <ferror@plt+0x374d8>
  439d00:	mov	x0, x20
  439d04:	bl	436d74 <ferror@plt+0x344a4>
  439d08:	mov	x23, x0
  439d0c:	cbz	x0, 439de8 <ferror@plt+0x37518>
  439d10:	mov	x0, x20
  439d14:	bl	436d74 <ferror@plt+0x344a4>
  439d18:	mov	x28, x0
  439d1c:	mov	x0, x20
  439d20:	bl	436d40 <ferror@plt+0x34470>
  439d24:	and	w26, w0, #0xff
  439d28:	ldp	x0, x1, [x20]
  439d2c:	add	x2, sp, #0x200
  439d30:	stp	x0, x1, [x2, #80]
  439d34:	ldp	x0, x1, [x20, #16]
  439d38:	stp	x0, x1, [x2, #96]
  439d3c:	ldp	x0, x1, [x20, #32]
  439d40:	stp	x0, x1, [x2, #112]
  439d44:	ldp	x0, x1, [x20, #48]
  439d48:	stp	x0, x1, [x2, #128]
  439d4c:	ldr	x21, [sp, #200]
  439d50:	add	x22, sp, #0x250
  439d54:	b	439cb0 <ferror@plt+0x373e0>
  439d58:	ldr	x3, [sp, #712]
  439d5c:	ldr	x2, [sp, #704]
  439d60:	lsl	x1, x21, #3
  439d64:	ldr	x0, [sp, #256]
  439d68:	bl	4329cc <ferror@plt+0x300fc>
  439d6c:	mov	x22, x0
  439d70:	cbz	x0, 439dd8 <ferror@plt+0x37508>
  439d74:	mov	x25, x0
  439d78:	mov	x21, x24
  439d7c:	mov	x0, x20
  439d80:	bl	436d74 <ferror@plt+0x344a4>
  439d84:	mov	x24, x0
  439d88:	mov	x0, x20
  439d8c:	bl	436d74 <ferror@plt+0x344a4>
  439d90:	cbz	x24, 439cd8 <ferror@plt+0x37408>
  439d94:	str	w24, [x25]
  439d98:	str	w0, [x25, #4]
  439d9c:	add	x21, x21, #0x1
  439da0:	add	x25, x25, #0x8
  439da4:	b	439d7c <ferror@plt+0x374ac>
  439da8:	ldr	x24, [sp, #256]
  439dac:	ldr	x23, [sp, #704]
  439db0:	ldr	x27, [sp, #712]
  439db4:	mov	x3, x27
  439db8:	mov	x2, x23
  439dbc:	ldr	x1, [sp, #248]
  439dc0:	mov	x0, x24
  439dc4:	bl	438528 <ferror@plt+0x35c58>
  439dc8:	b	439920 <ferror@plt+0x37050>
  439dcc:	mov	x27, x24
  439dd0:	mov	x24, x26
  439dd4:	b	439db4 <ferror@plt+0x374e4>
  439dd8:	ldr	x24, [sp, #256]
  439ddc:	ldr	x23, [sp, #704]
  439de0:	ldr	x27, [sp, #712]
  439de4:	b	439db4 <ferror@plt+0x374e4>
  439de8:	ldr	x26, [sp, #256]
  439dec:	ldr	x23, [sp, #704]
  439df0:	ldr	x24, [sp, #712]
  439df4:	ldr	x28, [sp, #296]
  439df8:	adrp	x3, 436000 <ferror@plt+0x33730>
  439dfc:	add	x3, x3, #0x5ec
  439e00:	mov	x2, #0x20                  	// #32
  439e04:	ldr	x1, [x19, #88]
  439e08:	ldr	x0, [x19, #96]
  439e0c:	bl	43a078 <ferror@plt+0x377a8>
  439e10:	b	439a04 <ferror@plt+0x37134>
  439e14:	mov	x27, x24
  439e18:	mov	x24, x26
  439e1c:	ldr	w0, [sp, #456]
  439e20:	cbnz	w0, 439920 <ferror@plt+0x37050>
  439e24:	ldp	x25, x26, [sp, #112]
  439e28:	add	x0, sp, #0x200
  439e2c:	ldp	x0, x1, [x0, #-200]
  439e30:	stp	x0, x1, [sp, #368]
  439e34:	ldr	x0, [sp, #328]
  439e38:	str	x0, [sp, #384]
  439e3c:	ldr	x0, [sp, #160]
  439e40:	str	x0, [sp, #392]
  439e44:	mov	x3, x27
  439e48:	mov	x2, x23
  439e4c:	add	x1, sp, #0x150
  439e50:	mov	x0, x24
  439e54:	bl	432c78 <ferror@plt+0x303a8>
  439e58:	cbz	w0, 4399a0 <ferror@plt+0x370d0>
  439e5c:	mov	x3, x27
  439e60:	mov	x2, x23
  439e64:	add	x1, sp, #0x170
  439e68:	mov	x0, x24
  439e6c:	bl	432c78 <ferror@plt+0x303a8>
  439e70:	cbz	w0, 4399a0 <ferror@plt+0x370d0>
  439e74:	ldr	x20, [sp, #336]
  439e78:	ldr	x22, [sp, #368]
  439e7c:	ldr	x19, [sp, #360]
  439e80:	ldr	x21, [sp, #392]
  439e84:	adrp	x3, 436000 <ferror@plt+0x33730>
  439e88:	add	x3, x3, #0x554
  439e8c:	mov	x2, #0x18                  	// #24
  439e90:	mov	x1, x19
  439e94:	mov	x0, x20
  439e98:	bl	43a078 <ferror@plt+0x377a8>
  439e9c:	mov	x3, x27
  439ea0:	mov	x2, x23
  439ea4:	mov	x1, #0xa0                  	// #160
  439ea8:	mov	x0, x24
  439eac:	bl	4329cc <ferror@plt+0x300fc>
  439eb0:	cbz	x0, 4399a0 <ferror@plt+0x370d0>
  439eb4:	str	xzr, [x0]
  439eb8:	ldr	x1, [sp, #696]
  439ebc:	str	x1, [x0, #8]
  439ec0:	ldr	x1, [sp, #208]
  439ec4:	str	x1, [x0, #16]
  439ec8:	str	x20, [x0, #24]
  439ecc:	str	x19, [x0, #32]
  439ed0:	str	x22, [x0, #40]
  439ed4:	str	x21, [x0, #48]
  439ed8:	ldr	x1, [sp, #272]
  439edc:	str	x1, [x0, #56]
  439ee0:	ldr	x1, [sp, #264]
  439ee4:	str	x1, [x0, #64]
  439ee8:	ldr	x1, [sp, #280]
  439eec:	str	x1, [x0, #72]
  439ef0:	ldr	x1, [sp, #288]
  439ef4:	str	x1, [x0, #80]
  439ef8:	ldr	x1, [sp, #656]
  439efc:	str	x1, [x0, #88]
  439f00:	ldr	x1, [sp, #664]
  439f04:	str	x1, [x0, #96]
  439f08:	ldr	x1, [sp, #672]
  439f0c:	str	x1, [x0, #104]
  439f10:	ldr	x1, [sp, #680]
  439f14:	str	x1, [x0, #112]
  439f18:	ldr	w1, [sp, #688]
  439f1c:	str	w1, [x0, #120]
  439f20:	stp	xzr, xzr, [x0, #128]
  439f24:	stp	xzr, xzr, [x0, #144]
  439f28:	ldr	x1, [sp, #728]
  439f2c:	cbz	x1, 439f34 <ferror@plt+0x37664>
  439f30:	str	x0, [x1]
  439f34:	ldr	w1, [x24, #8]
  439f38:	add	x3, x24, #0x20
  439f3c:	cbnz	w1, 43a03c <ferror@plt+0x3776c>
  439f40:	ldr	x1, [x24, #32]
  439f44:	cbz	x1, 43a00c <ferror@plt+0x3773c>
  439f48:	mov	x2, x1
  439f4c:	ldr	x1, [x1]
  439f50:	cbnz	x1, 439f48 <ferror@plt+0x37678>
  439f54:	str	x0, [x2]
  439f58:	ldr	x1, [sp, #720]
  439f5c:	adrp	x0, 439000 <ferror@plt+0x36730>
  439f60:	add	x0, x0, #0x6e0
  439f64:	str	x0, [x1]
  439f68:	mov	w0, #0x1                   	// #1
  439f6c:	ldp	x19, x20, [sp, #64]
  439f70:	ldp	x21, x22, [sp, #80]
  439f74:	ldp	x23, x24, [sp, #96]
  439f78:	ldp	x27, x28, [sp, #128]
  439f7c:	ldp	x29, x30, [sp, #48]
  439f80:	add	sp, sp, #0x290
  439f84:	ret
  439f88:	mov	x27, x24
  439f8c:	mov	x24, x26
  439f90:	b	439920 <ferror@plt+0x37050>
  439f94:	mov	x27, x24
  439f98:	mov	x24, x26
  439f9c:	b	439920 <ferror@plt+0x37050>
  439fa0:	mov	x27, x24
  439fa4:	mov	x24, x26
  439fa8:	b	439920 <ferror@plt+0x37050>
  439fac:	mov	x27, x24
  439fb0:	mov	x24, x26
  439fb4:	b	439920 <ferror@plt+0x37050>
  439fb8:	mov	x27, x24
  439fbc:	mov	x24, x26
  439fc0:	b	439920 <ferror@plt+0x37050>
  439fc4:	mov	x27, x24
  439fc8:	mov	x24, x26
  439fcc:	b	439920 <ferror@plt+0x37050>
  439fd0:	mov	x27, x24
  439fd4:	mov	x24, x26
  439fd8:	b	439920 <ferror@plt+0x37050>
  439fdc:	ldr	x0, [sp, #352]
  439fe0:	ldr	x1, [sp, #344]
  439fe4:	add	x0, x0, x1
  439fe8:	str	x0, [sp, #352]
  439fec:	str	xzr, [sp, #344]
  439ff0:	mov	x3, x27
  439ff4:	mov	x2, x23
  439ff8:	add	x1, sp, #0x150
  439ffc:	mov	x0, x24
  43a000:	bl	432c78 <ferror@plt+0x303a8>
  43a004:	ldp	x25, x26, [sp, #112]
  43a008:	b	4399a0 <ferror@plt+0x370d0>
  43a00c:	add	x2, x24, #0x20
  43a010:	b	439f54 <ferror@plt+0x37684>
  43a014:	mov	x2, x1
  43a018:	ldar	x1, [x2]
  43a01c:	cbnz	x1, 43a014 <ferror@plt+0x37744>
  43a020:	ldxr	x1, [x2]
  43a024:	cbnz	x1, 43a030 <ferror@plt+0x37760>
  43a028:	stlxr	w4, x0, [x2]
  43a02c:	cbnz	w4, 43a020 <ferror@plt+0x37750>
  43a030:	cmp	x1, #0x0
  43a034:	dmb	ish
  43a038:	b.eq	439f58 <ferror@plt+0x37688>  // b.none
  43a03c:	mov	x2, x3
  43a040:	b	43a018 <ferror@plt+0x37748>
  43a044:	mov	x27, x24
  43a048:	mov	x24, x26
  43a04c:	b	439920 <ferror@plt+0x37050>
  43a050:	cbz	x2, 43a074 <ferror@plt+0x377a4>
  43a054:	mov	x3, #0x0                   	// #0
  43a058:	ldrb	w4, [x0, x3]
  43a05c:	ldrb	w5, [x1, x3]
  43a060:	strb	w5, [x0, x3]
  43a064:	strb	w4, [x1, x3]
  43a068:	add	x3, x3, #0x1
  43a06c:	cmp	x2, x3
  43a070:	b.ne	43a058 <ferror@plt+0x37788>  // b.any
  43a074:	ret
  43a078:	stp	x29, x30, [sp, #-80]!
  43a07c:	mov	x29, sp
  43a080:	stp	x21, x22, [sp, #32]
  43a084:	stp	x23, x24, [sp, #48]
  43a088:	stp	x25, x26, [sp, #64]
  43a08c:	mov	x23, x0
  43a090:	mov	x24, x1
  43a094:	mov	x22, x2
  43a098:	mov	x26, x3
  43a09c:	cmp	x1, #0x1
  43a0a0:	b.ls	43a194 <ferror@plt+0x378c4>  // b.plast
  43a0a4:	stp	x19, x20, [sp, #16]
  43a0a8:	b	43a164 <ferror@plt+0x37894>
  43a0ac:	mov	x2, x22
  43a0b0:	mov	x1, x19
  43a0b4:	madd	x0, x22, x21, x23
  43a0b8:	bl	43a050 <ferror@plt+0x37780>
  43a0bc:	add	x20, x20, #0x1
  43a0c0:	add	x19, x19, x22
  43a0c4:	cmp	x20, x24
  43a0c8:	b.eq	43a134 <ferror@plt+0x37864>  // b.none
  43a0cc:	mov	x1, x19
  43a0d0:	mov	x0, x23
  43a0d4:	blr	x26
  43a0d8:	cmp	w0, #0x0
  43a0dc:	b.le	43a0bc <ferror@plt+0x377ec>
  43a0e0:	add	x21, x21, #0x1
  43a0e4:	cmp	x21, x20
  43a0e8:	b.eq	43a0bc <ferror@plt+0x377ec>  // b.none
  43a0ec:	b	43a0ac <ferror@plt+0x377dc>
  43a0f0:	mov	x2, x22
  43a0f4:	madd	x1, x21, x22, x23
  43a0f8:	mov	x0, x23
  43a0fc:	bl	43a050 <ferror@plt+0x37780>
  43a100:	cmp	x24, x21, lsl #1
  43a104:	b.hi	43a138 <ferror@plt+0x37868>  // b.pmore
  43a108:	sub	x1, x24, #0x1
  43a10c:	madd	x0, x21, x22, x22
  43a110:	mov	x3, x26
  43a114:	mov	x2, x22
  43a118:	sub	x1, x1, x21
  43a11c:	add	x0, x23, x0
  43a120:	bl	43a078 <ferror@plt+0x377a8>
  43a124:	mov	x24, x21
  43a128:	b	43a15c <ferror@plt+0x3788c>
  43a12c:	mov	x21, #0x0                   	// #0
  43a130:	b	43a100 <ferror@plt+0x37830>
  43a134:	cbnz	x21, 43a0f0 <ferror@plt+0x37820>
  43a138:	mov	x3, x26
  43a13c:	mov	x2, x22
  43a140:	mov	x1, x21
  43a144:	mov	x0, x23
  43a148:	bl	43a078 <ferror@plt+0x377a8>
  43a14c:	madd	x0, x21, x22, x22
  43a150:	add	x23, x23, x0
  43a154:	sub	x24, x24, #0x1
  43a158:	sub	x24, x24, x21
  43a15c:	cmp	x24, #0x1
  43a160:	b.ls	43a190 <ferror@plt+0x378c0>  // b.plast
  43a164:	lsr	x1, x24, #1
  43a168:	mov	x2, x22
  43a16c:	madd	x1, x1, x22, x23
  43a170:	mov	x0, x23
  43a174:	bl	43a050 <ferror@plt+0x37780>
  43a178:	cmp	x24, #0x1
  43a17c:	b.ls	43a12c <ferror@plt+0x3785c>  // b.plast
  43a180:	add	x19, x23, x22
  43a184:	mov	x21, #0x0                   	// #0
  43a188:	mov	x20, #0x1                   	// #1
  43a18c:	b	43a0cc <ferror@plt+0x377fc>
  43a190:	ldp	x19, x20, [sp, #16]
  43a194:	ldp	x21, x22, [sp, #32]
  43a198:	ldp	x23, x24, [sp, #48]
  43a19c:	ldp	x25, x26, [sp, #64]
  43a1a0:	ldp	x29, x30, [sp], #80
  43a1a4:	ret
  43a1a8:	sub	w0, w0, #0x1c
  43a1ac:	cmp	w0, #0x34
  43a1b0:	b.hi	43a1d0 <ferror@plt+0x37900>  // b.pmore
  43a1b4:	mov	x1, #0x1                   	// #1
  43a1b8:	lsl	x0, x1, x0
  43a1bc:	mov	x1, #0x1f                  	// #31
  43a1c0:	movk	x1, #0x1a, lsl #48
  43a1c4:	tst	x0, x1
  43a1c8:	cset	w0, ne  // ne = any
  43a1cc:	b	43a1d4 <ferror@plt+0x37904>
  43a1d0:	mov	w0, #0x0                   	// #0
  43a1d4:	ret
  43a1d8:	mov	x2, x0
  43a1dc:	ldr	w1, [x0, #40]
  43a1e0:	ldr	w0, [x0, #44]
  43a1e4:	cmp	w1, w0
  43a1e8:	b.ge	43a210 <ferror@plt+0x37940>  // b.tcont
  43a1ec:	sbfiz	x0, x1, #1, #32
  43a1f0:	add	x1, x0, w1, sxtw
  43a1f4:	ldr	x0, [x2, #32]
  43a1f8:	add	x0, x0, x1, lsl #3
  43a1fc:	str	wzr, [x0, #4]
  43a200:	ldr	w1, [x2, #40]
  43a204:	add	w1, w1, #0x1
  43a208:	str	w1, [x2, #40]
  43a20c:	ret
  43a210:	mov	x0, #0x0                   	// #0
  43a214:	b	43a20c <ferror@plt+0x3793c>
  43a218:	stp	x29, x30, [sp, #-48]!
  43a21c:	mov	x29, sp
  43a220:	stp	x19, x20, [sp, #16]
  43a224:	mov	w19, w1
  43a228:	sub	w1, w1, #0x1
  43a22c:	cmp	w1, #0x4f
  43a230:	b.hi	43a2ac <ferror@plt+0x379dc>  // b.pmore
  43a234:	str	x21, [sp, #32]
  43a238:	mov	x21, x2
  43a23c:	mov	x20, x3
  43a240:	adrp	x2, 464000 <_obstack_memory_used@@Base+0x1d094>
  43a244:	add	x2, x2, #0xcb8
  43a248:	ldrb	w1, [x2, w1, uxtw]
  43a24c:	adr	x2, 43a258 <ferror@plt+0x37988>
  43a250:	add	x1, x2, w1, sxtb #2
  43a254:	br	x1
  43a258:	cmp	x21, #0x0
  43a25c:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  43a260:	b.ne	43a274 <ferror@plt+0x379a4>  // b.any
  43a264:	mov	x0, #0x0                   	// #0
  43a268:	ldr	x21, [sp, #32]
  43a26c:	b	43a28c <ferror@plt+0x379bc>
  43a270:	cbz	x21, 43a2b4 <ferror@plt+0x379e4>
  43a274:	bl	43a1d8 <ferror@plt+0x37908>
  43a278:	cbz	x0, 43a2c0 <ferror@plt+0x379f0>
  43a27c:	str	w19, [x0]
  43a280:	str	x21, [x0, #8]
  43a284:	str	x20, [x0, #16]
  43a288:	ldr	x21, [sp, #32]
  43a28c:	ldp	x19, x20, [sp, #16]
  43a290:	ldp	x29, x30, [sp], #48
  43a294:	ret
  43a298:	cbnz	x3, 43a274 <ferror@plt+0x379a4>
  43a29c:	mov	x0, x3
  43a2a0:	ldr	x21, [sp, #32]
  43a2a4:	b	43a28c <ferror@plt+0x379bc>
  43a2a8:	ldr	x21, [sp, #32]
  43a2ac:	mov	x0, #0x0                   	// #0
  43a2b0:	b	43a28c <ferror@plt+0x379bc>
  43a2b4:	mov	x0, x21
  43a2b8:	ldr	x21, [sp, #32]
  43a2bc:	b	43a28c <ferror@plt+0x379bc>
  43a2c0:	ldr	x21, [sp, #32]
  43a2c4:	b	43a28c <ferror@plt+0x379bc>
  43a2c8:	stp	x29, x30, [sp, #-32]!
  43a2cc:	mov	x29, sp
  43a2d0:	str	x19, [sp, #16]
  43a2d4:	mov	x19, x1
  43a2d8:	cbz	x1, 43a2fc <ferror@plt+0x37a2c>
  43a2dc:	bl	43a1d8 <ferror@plt+0x37908>
  43a2e0:	cbz	x0, 43a2f0 <ferror@plt+0x37a20>
  43a2e4:	mov	w1, #0x27                  	// #39
  43a2e8:	str	w1, [x0]
  43a2ec:	str	x19, [x0, #8]
  43a2f0:	ldr	x19, [sp, #16]
  43a2f4:	ldp	x29, x30, [sp], #32
  43a2f8:	ret
  43a2fc:	mov	x0, x1
  43a300:	b	43a2f0 <ferror@plt+0x37a20>
  43a304:	cbz	x0, 43a358 <ferror@plt+0x37a88>
  43a308:	mov	x2, x0
  43a30c:	ldr	w1, [x0]
  43a310:	cmp	w1, #0x8
  43a314:	b.hi	43a34c <ferror@plt+0x37a7c>  // b.pmore
  43a318:	cmp	w1, #0x6
  43a31c:	b.hi	43a360 <ferror@plt+0x37a90>  // b.pmore
  43a320:	sub	w1, w1, #0x1
  43a324:	mov	w0, #0x0                   	// #0
  43a328:	cmp	w1, #0x1
  43a32c:	b.hi	43a348 <ferror@plt+0x37a78>  // b.pmore
  43a330:	stp	x29, x30, [sp, #-16]!
  43a334:	mov	x29, sp
  43a338:	ldr	x0, [x2, #16]
  43a33c:	bl	43a304 <ferror@plt+0x37a34>
  43a340:	ldp	x29, x30, [sp], #16
  43a344:	ret
  43a348:	ret
  43a34c:	cmp	w1, #0x35
  43a350:	cset	w0, eq  // eq = none
  43a354:	ret
  43a358:	mov	w0, #0x0                   	// #0
  43a35c:	ret
  43a360:	mov	w0, #0x1                   	// #1
  43a364:	ret
  43a368:	cbz	x0, 43a3f8 <ferror@plt+0x37b28>
  43a36c:	stp	x29, x30, [sp, #-16]!
  43a370:	mov	x29, sp
  43a374:	ldr	w1, [x0]
  43a378:	cmp	w1, #0x4
  43a37c:	b.eq	43a3d8 <ferror@plt+0x37b08>  // b.none
  43a380:	b.ls	43a3b0 <ferror@plt+0x37ae0>  // b.plast
  43a384:	sub	w1, w1, #0x1c
  43a388:	cmp	w1, #0x34
  43a38c:	b.hi	43a3d0 <ferror@plt+0x37b00>  // b.pmore
  43a390:	mov	x2, #0x1                   	// #1
  43a394:	lsl	x1, x2, x1
  43a398:	mov	x2, #0x1f                  	// #31
  43a39c:	movk	x2, #0x1a, lsl #48
  43a3a0:	tst	x1, x2
  43a3a4:	b.ne	43a3ec <ferror@plt+0x37b1c>  // b.any
  43a3a8:	mov	w0, #0x0                   	// #0
  43a3ac:	b	43a3c8 <ferror@plt+0x37af8>
  43a3b0:	cmp	w1, #0x2
  43a3b4:	b.ne	43a3c4 <ferror@plt+0x37af4>  // b.any
  43a3b8:	ldr	x0, [x0, #16]
  43a3bc:	bl	43a368 <ferror@plt+0x37a98>
  43a3c0:	b	43a3c8 <ferror@plt+0x37af8>
  43a3c4:	mov	w0, #0x0                   	// #0
  43a3c8:	ldp	x29, x30, [sp], #16
  43a3cc:	ret
  43a3d0:	mov	w0, #0x0                   	// #0
  43a3d4:	b	43a3c8 <ferror@plt+0x37af8>
  43a3d8:	ldr	x0, [x0, #8]
  43a3dc:	bl	43a304 <ferror@plt+0x37a34>
  43a3e0:	cmp	w0, #0x0
  43a3e4:	cset	w0, eq  // eq = none
  43a3e8:	b	43a3c8 <ferror@plt+0x37af8>
  43a3ec:	ldr	x0, [x0, #8]
  43a3f0:	bl	43a368 <ferror@plt+0x37a98>
  43a3f4:	b	43a3c8 <ferror@plt+0x37af8>
  43a3f8:	mov	w0, #0x0                   	// #0
  43a3fc:	ret
  43a400:	mov	x4, x0
  43a404:	ldr	x1, [x0, #24]
  43a408:	ldrb	w0, [x1]
  43a40c:	cmp	w0, #0x6e
  43a410:	b.eq	43a490 <ferror@plt+0x37bc0>  // b.none
  43a414:	sub	w1, w0, #0x30
  43a418:	and	w1, w1, #0xff
  43a41c:	cmp	w1, #0x9
  43a420:	b.hi	43a4c8 <ferror@plt+0x37bf8>  // b.pmore
  43a424:	mov	w7, #0x0                   	// #0
  43a428:	mov	w3, w0
  43a42c:	mov	w0, #0x0                   	// #0
  43a430:	mov	w6, #0x7fffffff            	// #2147483647
  43a434:	mov	w5, #0x6667                	// #26215
  43a438:	movk	w5, #0x6666, lsl #16
  43a43c:	add	w0, w0, w0, lsl #2
  43a440:	add	w0, w3, w0, lsl #1
  43a444:	sub	w0, w0, #0x30
  43a448:	ldr	x1, [x4, #24]
  43a44c:	add	x2, x1, #0x1
  43a450:	str	x2, [x4, #24]
  43a454:	ldrb	w1, [x1, #1]
  43a458:	sub	w2, w1, #0x30
  43a45c:	and	w2, w2, #0xff
  43a460:	cmp	w2, #0x9
  43a464:	b.hi	43a4b4 <ferror@plt+0x37be4>  // b.pmore
  43a468:	mov	w3, w1
  43a46c:	sub	w1, w1, #0x30
  43a470:	sub	w1, w6, w1
  43a474:	smull	x2, w1, w5
  43a478:	asr	x2, x2, #34
  43a47c:	sub	w1, w2, w1, asr #31
  43a480:	cmp	w1, w0
  43a484:	b.ge	43a43c <ferror@plt+0x37b6c>  // b.tcont
  43a488:	mov	w0, #0xffffffff            	// #-1
  43a48c:	ret
  43a490:	add	x0, x1, #0x1
  43a494:	str	x0, [x4, #24]
  43a498:	ldrb	w0, [x1, #1]
  43a49c:	sub	w1, w0, #0x30
  43a4a0:	and	w1, w1, #0xff
  43a4a4:	cmp	w1, #0x9
  43a4a8:	b.hi	43a4c0 <ferror@plt+0x37bf0>  // b.pmore
  43a4ac:	mov	w7, #0x1                   	// #1
  43a4b0:	b	43a428 <ferror@plt+0x37b58>
  43a4b4:	cbz	w7, 43a48c <ferror@plt+0x37bbc>
  43a4b8:	neg	w0, w0
  43a4bc:	b	43a48c <ferror@plt+0x37bbc>
  43a4c0:	mov	w0, #0x0                   	// #0
  43a4c4:	b	43a4b8 <ferror@plt+0x37be8>
  43a4c8:	mov	w0, #0x0                   	// #0
  43a4cc:	b	43a48c <ferror@plt+0x37bbc>
  43a4d0:	stp	x29, x30, [sp, #-32]!
  43a4d4:	mov	x29, sp
  43a4d8:	stp	x19, x20, [sp, #16]
  43a4dc:	mov	x20, x0
  43a4e0:	bl	43a1d8 <ferror@plt+0x37908>
  43a4e4:	mov	x19, x0
  43a4e8:	cbz	x0, 43a504 <ferror@plt+0x37c34>
  43a4ec:	mov	w0, #0x42                  	// #66
  43a4f0:	str	w0, [x19]
  43a4f4:	mov	x0, x20
  43a4f8:	bl	43a400 <ferror@plt+0x37b30>
  43a4fc:	sxtw	x0, w0
  43a500:	str	x0, [x19, #8]
  43a504:	mov	x0, x19
  43a508:	ldp	x19, x20, [sp, #16]
  43a50c:	ldp	x29, x30, [sp], #32
  43a510:	ret
  43a514:	stp	x29, x30, [sp, #-32]!
  43a518:	mov	x29, sp
  43a51c:	str	x19, [sp, #16]
  43a520:	mov	x19, x0
  43a524:	cbnz	w1, 43a544 <ferror@plt+0x37c74>
  43a528:	ldr	x2, [x0, #24]
  43a52c:	ldrb	w3, [x2]
  43a530:	mov	w0, w1
  43a534:	cbz	w3, 43a558 <ferror@plt+0x37c88>
  43a538:	add	x0, x2, #0x1
  43a53c:	str	x0, [x19, #24]
  43a540:	ldrb	w1, [x2]
  43a544:	cmp	w1, #0x68
  43a548:	b.eq	43a564 <ferror@plt+0x37c94>  // b.none
  43a54c:	mov	w0, #0x0                   	// #0
  43a550:	cmp	w1, #0x76
  43a554:	b.eq	43a590 <ferror@plt+0x37cc0>  // b.none
  43a558:	ldr	x19, [sp, #16]
  43a55c:	ldp	x29, x30, [sp], #32
  43a560:	ret
  43a564:	mov	x0, x19
  43a568:	bl	43a400 <ferror@plt+0x37b30>
  43a56c:	ldr	x1, [x19, #24]
  43a570:	ldrb	w2, [x1]
  43a574:	mov	w0, #0x0                   	// #0
  43a578:	cmp	w2, #0x5f
  43a57c:	b.ne	43a558 <ferror@plt+0x37c88>  // b.any
  43a580:	add	x1, x1, #0x1
  43a584:	str	x1, [x19, #24]
  43a588:	mov	w0, #0x1                   	// #1
  43a58c:	b	43a558 <ferror@plt+0x37c88>
  43a590:	mov	x0, x19
  43a594:	bl	43a400 <ferror@plt+0x37b30>
  43a598:	ldr	x1, [x19, #24]
  43a59c:	ldrb	w2, [x1]
  43a5a0:	mov	w0, #0x0                   	// #0
  43a5a4:	cmp	w2, #0x5f
  43a5a8:	b.ne	43a558 <ferror@plt+0x37c88>  // b.any
  43a5ac:	add	x1, x1, #0x1
  43a5b0:	str	x1, [x19, #24]
  43a5b4:	mov	x0, x19
  43a5b8:	bl	43a400 <ferror@plt+0x37b30>
  43a5bc:	b	43a56c <ferror@plt+0x37c9c>
  43a5c0:	ldr	x2, [x0, #24]
  43a5c4:	ldrb	w1, [x2]
  43a5c8:	cmp	w1, #0x72
  43a5cc:	mov	w0, #0x56                  	// #86
  43a5d0:	ccmp	w1, w0, #0x4, ne  // ne = any
  43a5d4:	mov	w0, #0x4b                  	// #75
  43a5d8:	ccmp	w1, w0, #0x4, ne  // ne = any
  43a5dc:	mov	w0, #0x1                   	// #1
  43a5e0:	b.eq	43a5f0 <ferror@plt+0x37d20>  // b.none
  43a5e4:	mov	w0, #0x0                   	// #0
  43a5e8:	cmp	w1, #0x44
  43a5ec:	b.eq	43a5f4 <ferror@plt+0x37d24>  // b.none
  43a5f0:	ret
  43a5f4:	ldrb	w0, [x2, #1]
  43a5f8:	and	w1, w0, #0xffffffdf
  43a5fc:	and	w1, w1, #0xff
  43a600:	sub	w0, w0, #0x77
  43a604:	and	w0, w0, #0xff
  43a608:	cmp	w1, #0x4f
  43a60c:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  43a610:	cset	w0, ls  // ls = plast
  43a614:	b	43a5f0 <ferror@plt+0x37d20>
  43a618:	mov	x2, x1
  43a61c:	ldr	x3, [x0, #24]
  43a620:	ldrb	w1, [x3]
  43a624:	cmp	w1, #0x52
  43a628:	mov	w4, #0x4f                  	// #79
  43a62c:	ccmp	w1, w4, #0x4, ne  // ne = any
  43a630:	b.ne	43a67c <ferror@plt+0x37dac>  // b.any
  43a634:	stp	x29, x30, [sp, #-16]!
  43a638:	mov	x29, sp
  43a63c:	cmp	w1, #0x52
  43a640:	b.eq	43a66c <ferror@plt+0x37d9c>  // b.none
  43a644:	ldr	w4, [x0, #72]
  43a648:	add	w4, w4, #0x3
  43a64c:	mov	w1, #0x20                  	// #32
  43a650:	str	w4, [x0, #72]
  43a654:	add	x3, x3, #0x1
  43a658:	str	x3, [x0, #24]
  43a65c:	mov	x3, #0x0                   	// #0
  43a660:	bl	43a218 <ferror@plt+0x37948>
  43a664:	ldp	x29, x30, [sp], #16
  43a668:	ret
  43a66c:	ldr	w4, [x0, #72]
  43a670:	add	w4, w4, #0x2
  43a674:	mov	w1, #0x1f                  	// #31
  43a678:	b	43a650 <ferror@plt+0x37d80>
  43a67c:	mov	x0, x2
  43a680:	ret
  43a684:	stp	x29, x30, [sp, #-32]!
  43a688:	mov	x29, sp
  43a68c:	str	x19, [sp, #16]
  43a690:	mov	x19, x0
  43a694:	ldr	x1, [x0, #24]
  43a698:	ldrb	w0, [x1]
  43a69c:	cmp	w0, #0x5f
  43a6a0:	b.eq	43a6e0 <ferror@plt+0x37e10>  // b.none
  43a6a4:	cmp	w0, #0x6e
  43a6a8:	b.eq	43a6e8 <ferror@plt+0x37e18>  // b.none
  43a6ac:	mov	x0, x19
  43a6b0:	bl	43a400 <ferror@plt+0x37b30>
  43a6b4:	adds	w0, w0, #0x1
  43a6b8:	b.mi	43a6f0 <ferror@plt+0x37e20>  // b.first
  43a6bc:	ldr	x1, [x19, #24]
  43a6c0:	ldrb	w2, [x1]
  43a6c4:	cmp	w2, #0x5f
  43a6c8:	b.ne	43a6f8 <ferror@plt+0x37e28>  // b.any
  43a6cc:	add	x1, x1, #0x1
  43a6d0:	str	x1, [x19, #24]
  43a6d4:	ldr	x19, [sp, #16]
  43a6d8:	ldp	x29, x30, [sp], #32
  43a6dc:	ret
  43a6e0:	mov	w0, #0x0                   	// #0
  43a6e4:	b	43a6cc <ferror@plt+0x37dfc>
  43a6e8:	mov	w0, #0xffffffff            	// #-1
  43a6ec:	b	43a6d4 <ferror@plt+0x37e04>
  43a6f0:	mov	w0, #0xffffffff            	// #-1
  43a6f4:	b	43a6d4 <ferror@plt+0x37e04>
  43a6f8:	mov	w0, #0xffffffff            	// #-1
  43a6fc:	b	43a6d4 <ferror@plt+0x37e04>
  43a700:	stp	x29, x30, [sp, #-32]!
  43a704:	mov	x29, sp
  43a708:	stp	x19, x20, [sp, #16]
  43a70c:	mov	x19, x0
  43a710:	ldr	x0, [x0, #24]
  43a714:	ldrb	w1, [x0]
  43a718:	cmp	w1, #0x54
  43a71c:	b.ne	43a75c <ferror@plt+0x37e8c>  // b.any
  43a720:	add	x0, x0, #0x1
  43a724:	str	x0, [x19, #24]
  43a728:	mov	x0, x19
  43a72c:	bl	43a684 <ferror@plt+0x37db4>
  43a730:	mov	w20, w0
  43a734:	mov	x0, #0x0                   	// #0
  43a738:	tbnz	w20, #31, 43a760 <ferror@plt+0x37e90>
  43a73c:	mov	x0, x19
  43a740:	bl	43a1d8 <ferror@plt+0x37908>
  43a744:	cbz	x0, 43a760 <ferror@plt+0x37e90>
  43a748:	mov	w1, #0x5                   	// #5
  43a74c:	str	w1, [x0]
  43a750:	sxtw	x20, w20
  43a754:	str	x20, [x0, #8]
  43a758:	b	43a760 <ferror@plt+0x37e90>
  43a75c:	mov	x0, #0x0                   	// #0
  43a760:	ldp	x19, x20, [sp, #16]
  43a764:	ldp	x29, x30, [sp], #32
  43a768:	ret
  43a76c:	ldr	x0, [x0, #8]
  43a770:	ldr	x0, [x0]
  43a774:	ldrb	w1, [x0, #1]
  43a778:	cmp	w1, #0x63
  43a77c:	b.eq	43a788 <ferror@plt+0x37eb8>  // b.none
  43a780:	mov	w0, #0x0                   	// #0
  43a784:	ret
  43a788:	ldrb	w0, [x0]
  43a78c:	sub	w1, w0, #0x63
  43a790:	and	w1, w1, #0xff
  43a794:	sub	w0, w0, #0x72
  43a798:	and	w0, w0, #0xff
  43a79c:	cmp	w1, #0x1
  43a7a0:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  43a7a4:	cset	w0, ls  // ls = plast
  43a7a8:	b	43a784 <ferror@plt+0x37eb4>
  43a7ac:	stp	x29, x30, [sp, #-32]!
  43a7b0:	mov	x29, sp
  43a7b4:	stp	x19, x20, [sp, #16]
  43a7b8:	mov	x19, x0
  43a7bc:	ldr	x0, [x0, #24]
  43a7c0:	ldrb	w1, [x0]
  43a7c4:	cmp	w1, #0x5f
  43a7c8:	b.ne	43a83c <ferror@plt+0x37f6c>  // b.any
  43a7cc:	add	x1, x0, #0x1
  43a7d0:	str	x1, [x19, #24]
  43a7d4:	ldrb	w1, [x0, #1]
  43a7d8:	mov	w20, #0x1                   	// #1
  43a7dc:	cmp	w1, #0x5f
  43a7e0:	b.eq	43a82c <ferror@plt+0x37f5c>  // b.none
  43a7e4:	mov	x0, x19
  43a7e8:	bl	43a400 <ferror@plt+0x37b30>
  43a7ec:	mov	w1, w0
  43a7f0:	mov	w0, #0x0                   	// #0
  43a7f4:	tbnz	w1, #31, 43a840 <ferror@plt+0x37f70>
  43a7f8:	cmp	w20, #0x1
  43a7fc:	mov	w0, #0x1                   	// #1
  43a800:	ccmp	w1, #0x9, #0x4, gt
  43a804:	b.le	43a840 <ferror@plt+0x37f70>
  43a808:	ldr	x1, [x19, #24]
  43a80c:	ldrb	w2, [x1]
  43a810:	mov	w0, #0x0                   	// #0
  43a814:	cmp	w2, #0x5f
  43a818:	b.ne	43a840 <ferror@plt+0x37f70>  // b.any
  43a81c:	add	x1, x1, #0x1
  43a820:	str	x1, [x19, #24]
  43a824:	mov	w0, #0x1                   	// #1
  43a828:	b	43a840 <ferror@plt+0x37f70>
  43a82c:	add	x0, x0, #0x2
  43a830:	str	x0, [x19, #24]
  43a834:	mov	w20, #0x2                   	// #2
  43a838:	b	43a7e4 <ferror@plt+0x37f14>
  43a83c:	mov	w0, #0x1                   	// #1
  43a840:	ldp	x19, x20, [sp, #16]
  43a844:	ldp	x29, x30, [sp], #32
  43a848:	ret
  43a84c:	mov	x2, x0
  43a850:	cbz	x1, 43a884 <ferror@plt+0x37fb4>
  43a854:	ldr	w3, [x0, #56]
  43a858:	ldr	w4, [x0, #60]
  43a85c:	mov	w0, #0x0                   	// #0
  43a860:	cmp	w3, w4
  43a864:	b.ge	43a880 <ferror@plt+0x37fb0>  // b.tcont
  43a868:	ldr	x0, [x2, #48]
  43a86c:	str	x1, [x0, w3, sxtw #3]
  43a870:	ldr	w0, [x2, #56]
  43a874:	add	w0, w0, #0x1
  43a878:	str	w0, [x2, #56]
  43a87c:	mov	w0, #0x1                   	// #1
  43a880:	ret
  43a884:	mov	w0, #0x0                   	// #0
  43a888:	b	43a880 <ferror@plt+0x37fb0>
  43a88c:	cbz	x1, 43a9a0 <ferror@plt+0x380d0>
  43a890:	stp	x29, x30, [sp, #-32]!
  43a894:	mov	x29, sp
  43a898:	stp	x19, x20, [sp, #16]
  43a89c:	mov	x20, x0
  43a8a0:	mov	x19, x1
  43a8a4:	ldr	w1, [x1]
  43a8a8:	sub	w1, w1, #0x1
  43a8ac:	cmp	w1, #0x4f
  43a8b0:	b.hi	43a8e4 <ferror@plt+0x38014>  // b.pmore
  43a8b4:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1d094>
  43a8b8:	add	x0, x0, #0xd08
  43a8bc:	ldrb	w0, [x0, w1, uxtw]
  43a8c0:	adr	x1, 43a8cc <ferror@plt+0x37ffc>
  43a8c4:	add	x0, x1, w0, sxtb #2
  43a8c8:	br	x0
  43a8cc:	ldr	w0, [x20, #364]
  43a8d0:	add	w0, w0, #0x1
  43a8d4:	str	w0, [x20, #364]
  43a8d8:	ldr	w0, [x20, #308]
  43a8dc:	cmp	w0, #0x800
  43a8e0:	b.le	43a910 <ferror@plt+0x38040>
  43a8e4:	ldp	x19, x20, [sp, #16]
  43a8e8:	ldp	x29, x30, [sp], #32
  43a8ec:	ret
  43a8f0:	ldr	x0, [x19, #8]
  43a8f4:	ldr	w0, [x0]
  43a8f8:	cmp	w0, #0x5
  43a8fc:	b.ne	43a8d8 <ferror@plt+0x38008>  // b.any
  43a900:	ldr	w0, [x20, #348]
  43a904:	add	w0, w0, #0x1
  43a908:	str	w0, [x20, #348]
  43a90c:	b	43a8d8 <ferror@plt+0x38008>
  43a910:	add	w0, w0, #0x1
  43a914:	str	w0, [x20, #308]
  43a918:	ldr	x1, [x19, #8]
  43a91c:	mov	x0, x20
  43a920:	bl	43a88c <ferror@plt+0x37fbc>
  43a924:	ldr	x1, [x19, #16]
  43a928:	mov	x0, x20
  43a92c:	bl	43a88c <ferror@plt+0x37fbc>
  43a930:	ldr	w0, [x20, #308]
  43a934:	sub	w0, w0, #0x1
  43a938:	str	w0, [x20, #308]
  43a93c:	b	43a8e4 <ferror@plt+0x38014>
  43a940:	ldr	x1, [x19, #16]
  43a944:	mov	x0, x20
  43a948:	bl	43a88c <ferror@plt+0x37fbc>
  43a94c:	b	43a8e4 <ferror@plt+0x38014>
  43a950:	ldr	x1, [x19, #16]
  43a954:	mov	x0, x20
  43a958:	bl	43a88c <ferror@plt+0x37fbc>
  43a95c:	b	43a8e4 <ferror@plt+0x38014>
  43a960:	ldr	x1, [x19, #16]
  43a964:	mov	x0, x20
  43a968:	bl	43a88c <ferror@plt+0x37fbc>
  43a96c:	b	43a8e4 <ferror@plt+0x38014>
  43a970:	ldr	x1, [x19, #8]
  43a974:	mov	x0, x20
  43a978:	bl	43a88c <ferror@plt+0x37fbc>
  43a97c:	b	43a8e4 <ferror@plt+0x38014>
  43a980:	ldr	x1, [x19, #8]
  43a984:	mov	x0, x20
  43a988:	bl	43a88c <ferror@plt+0x37fbc>
  43a98c:	b	43a8e4 <ferror@plt+0x38014>
  43a990:	ldr	x1, [x19, #8]
  43a994:	mov	x0, x20
  43a998:	bl	43a88c <ferror@plt+0x37fbc>
  43a99c:	b	43a8e4 <ferror@plt+0x38014>
  43a9a0:	ret
  43a9a4:	cbz	x2, 43aa40 <ferror@plt+0x38170>
  43a9a8:	stp	x29, x30, [sp, #-64]!
  43a9ac:	mov	x29, sp
  43a9b0:	stp	x19, x20, [sp, #16]
  43a9b4:	stp	x21, x22, [sp, #32]
  43a9b8:	str	x23, [sp, #48]
  43a9bc:	mov	x19, x0
  43a9c0:	mov	x20, x1
  43a9c4:	add	x22, x1, x2
  43a9c8:	mov	x23, #0xff                  	// #255
  43a9cc:	b	43a9f0 <ferror@plt+0x38120>
  43a9d0:	ldr	x0, [x19, #256]
  43a9d4:	add	x1, x0, #0x1
  43a9d8:	str	x1, [x19, #256]
  43a9dc:	strb	w21, [x19, x0]
  43a9e0:	strb	w21, [x19, #264]
  43a9e4:	add	x20, x20, #0x1
  43a9e8:	cmp	x20, x22
  43a9ec:	b.eq	43aa2c <ferror@plt+0x3815c>  // b.none
  43a9f0:	ldrb	w21, [x20]
  43a9f4:	ldr	x0, [x19, #256]
  43a9f8:	cmp	x0, #0xff
  43a9fc:	b.ne	43a9d0 <ferror@plt+0x38100>  // b.any
  43aa00:	strb	wzr, [x19, #255]
  43aa04:	ldr	x3, [x19, #272]
  43aa08:	ldr	x2, [x19, #280]
  43aa0c:	mov	x1, x23
  43aa10:	mov	x0, x19
  43aa14:	blr	x3
  43aa18:	str	xzr, [x19, #256]
  43aa1c:	ldr	x0, [x19, #320]
  43aa20:	add	x0, x0, #0x1
  43aa24:	str	x0, [x19, #320]
  43aa28:	b	43a9d0 <ferror@plt+0x38100>
  43aa2c:	ldp	x19, x20, [sp, #16]
  43aa30:	ldp	x21, x22, [sp, #32]
  43aa34:	ldr	x23, [sp, #48]
  43aa38:	ldp	x29, x30, [sp], #64
  43aa3c:	ret
  43aa40:	ret
  43aa44:	tbnz	w1, #31, 43aa70 <ferror@plt+0x381a0>
  43aa48:	cbz	x0, 43aa70 <ferror@plt+0x381a0>
  43aa4c:	ldr	w2, [x0]
  43aa50:	cmp	w2, #0x2f
  43aa54:	b.ne	43aa74 <ferror@plt+0x381a4>  // b.any
  43aa58:	cbz	w1, 43aa6c <ferror@plt+0x3819c>
  43aa5c:	sub	w1, w1, #0x1
  43aa60:	ldr	x0, [x0, #16]
  43aa64:	cbnz	x0, 43aa4c <ferror@plt+0x3817c>
  43aa68:	b	43aa70 <ferror@plt+0x381a0>
  43aa6c:	ldr	x0, [x0, #8]
  43aa70:	ret
  43aa74:	mov	x0, #0x0                   	// #0
  43aa78:	b	43aa70 <ferror@plt+0x381a0>
  43aa7c:	mov	x2, x0
  43aa80:	ldr	x0, [x0, #288]
  43aa84:	cbz	x0, 43aaa8 <ferror@plt+0x381d8>
  43aa88:	stp	x29, x30, [sp, #-16]!
  43aa8c:	mov	x29, sp
  43aa90:	ldr	x0, [x0, #8]
  43aa94:	ldr	w1, [x1, #8]
  43aa98:	ldr	x0, [x0, #16]
  43aa9c:	bl	43aa44 <ferror@plt+0x38174>
  43aaa0:	ldp	x29, x30, [sp], #16
  43aaa4:	ret
  43aaa8:	mov	w1, #0x1                   	// #1
  43aaac:	str	w1, [x2, #304]
  43aab0:	ret
  43aab4:	stp	x29, x30, [sp, #-32]!
  43aab8:	mov	x29, sp
  43aabc:	stp	x19, x20, [sp, #16]
  43aac0:	mov	x19, x1
  43aac4:	cbz	x1, 43ab8c <ferror@plt+0x382bc>
  43aac8:	mov	x20, x0
  43aacc:	ldr	w2, [x1]
  43aad0:	cmp	w2, #0x8
  43aad4:	b.eq	43ab60 <ferror@plt+0x38290>  // b.none
  43aad8:	b.hi	43ab18 <ferror@plt+0x38248>  // b.pmore
  43aadc:	cmp	w2, #0x6
  43aae0:	b.eq	43ab94 <ferror@plt+0x382c4>  // b.none
  43aae4:	b.ls	43aaf4 <ferror@plt+0x38224>  // b.plast
  43aae8:	ldr	x1, [x1, #16]
  43aaec:	bl	43aab4 <ferror@plt+0x381e4>
  43aaf0:	b	43ab54 <ferror@plt+0x38284>
  43aaf4:	cbz	w2, 43ab9c <ferror@plt+0x382cc>
  43aaf8:	cmp	w2, #0x5
  43aafc:	b.ne	43ab6c <ferror@plt+0x3829c>  // b.any
  43ab00:	bl	43aa7c <ferror@plt+0x381ac>
  43ab04:	cbz	x0, 43ab54 <ferror@plt+0x38284>
  43ab08:	ldr	w1, [x0]
  43ab0c:	cmp	w1, #0x2f
  43ab10:	csel	x0, x0, xzr, eq  // eq = none
  43ab14:	b	43ab54 <ferror@plt+0x38284>
  43ab18:	sub	w2, w2, #0x18
  43ab1c:	cmp	w2, #0x34
  43ab20:	b.hi	43ab6c <ferror@plt+0x3829c>  // b.pmore
  43ab24:	mov	x1, #0x1                   	// #1
  43ab28:	lsl	x2, x1, x2
  43ab2c:	mov	x0, #0x8001                	// #32769
  43ab30:	movk	x0, #0x410, lsl #16
  43ab34:	movk	x0, #0xc600, lsl #32
  43ab38:	movk	x0, #0x19, lsl #48
  43ab3c:	tst	x2, x0
  43ab40:	b.ne	43aba4 <ferror@plt+0x382d4>  // b.any
  43ab44:	tbz	w2, #27, 43ab6c <ferror@plt+0x3829c>
  43ab48:	ldr	x1, [x19, #16]
  43ab4c:	mov	x0, x20
  43ab50:	bl	43aab4 <ferror@plt+0x381e4>
  43ab54:	ldp	x19, x20, [sp, #16]
  43ab58:	ldp	x29, x30, [sp], #32
  43ab5c:	ret
  43ab60:	ldr	x1, [x1, #16]
  43ab64:	bl	43aab4 <ferror@plt+0x381e4>
  43ab68:	b	43ab54 <ferror@plt+0x38284>
  43ab6c:	ldr	x1, [x19, #8]
  43ab70:	mov	x0, x20
  43ab74:	bl	43aab4 <ferror@plt+0x381e4>
  43ab78:	cbnz	x0, 43ab54 <ferror@plt+0x38284>
  43ab7c:	ldr	x1, [x19, #16]
  43ab80:	mov	x0, x20
  43ab84:	bl	43aab4 <ferror@plt+0x381e4>
  43ab88:	b	43ab54 <ferror@plt+0x38284>
  43ab8c:	mov	x0, x1
  43ab90:	b	43ab54 <ferror@plt+0x38284>
  43ab94:	mov	x0, #0x0                   	// #0
  43ab98:	b	43ab54 <ferror@plt+0x38284>
  43ab9c:	mov	x0, #0x0                   	// #0
  43aba0:	b	43ab54 <ferror@plt+0x38284>
  43aba4:	mov	x0, #0x0                   	// #0
  43aba8:	b	43ab54 <ferror@plt+0x38284>
  43abac:	mov	x1, x0
  43abb0:	mov	w0, #0x0                   	// #0
  43abb4:	cbz	x1, 43abd8 <ferror@plt+0x38308>
  43abb8:	ldr	w2, [x1]
  43abbc:	cmp	w2, #0x2f
  43abc0:	b.ne	43abd8 <ferror@plt+0x38308>  // b.any
  43abc4:	ldr	x2, [x1, #8]
  43abc8:	cbz	x2, 43abd8 <ferror@plt+0x38308>
  43abcc:	add	w0, w0, #0x1
  43abd0:	ldr	x1, [x1, #16]
  43abd4:	cbnz	x1, 43abb8 <ferror@plt+0x382e8>
  43abd8:	ret
  43abdc:	stp	x29, x30, [sp, #-48]!
  43abe0:	mov	x29, sp
  43abe4:	stp	x19, x20, [sp, #16]
  43abe8:	stp	x21, x22, [sp, #32]
  43abec:	mov	x22, x0
  43abf0:	mov	x21, x1
  43abf4:	mov	x19, x2
  43abf8:	add	x2, x1, #0x1
  43abfc:	ldr	x3, [x19, #8]
  43ac00:	add	x2, x2, x3
  43ac04:	ldr	x20, [x19, #16]
  43ac08:	cmp	x2, x20
  43ac0c:	b.hi	43ac5c <ferror@plt+0x3838c>  // b.pmore
  43ac10:	ldr	w0, [x19, #24]
  43ac14:	cbnz	w0, 43ac4c <ferror@plt+0x3837c>
  43ac18:	ldr	x3, [x19]
  43ac1c:	ldr	x0, [x19, #8]
  43ac20:	mov	x2, x21
  43ac24:	mov	x1, x22
  43ac28:	add	x0, x3, x0
  43ac2c:	bl	402260 <memcpy@plt>
  43ac30:	ldr	x0, [x19]
  43ac34:	ldr	x1, [x19, #8]
  43ac38:	add	x0, x0, x21
  43ac3c:	strb	wzr, [x0, x1]
  43ac40:	ldr	x1, [x19, #8]
  43ac44:	add	x21, x1, x21
  43ac48:	str	x21, [x19, #8]
  43ac4c:	ldp	x19, x20, [sp, #16]
  43ac50:	ldp	x21, x22, [sp, #32]
  43ac54:	ldp	x29, x30, [sp], #48
  43ac58:	ret
  43ac5c:	ldr	w0, [x19, #24]
  43ac60:	cbnz	w0, 43ac4c <ferror@plt+0x3837c>
  43ac64:	cbnz	x20, 43ac74 <ferror@plt+0x383a4>
  43ac68:	mov	x20, #0x2                   	// #2
  43ac6c:	cmp	x2, x20
  43ac70:	b.ls	43ac80 <ferror@plt+0x383b0>  // b.plast
  43ac74:	lsl	x20, x20, #1
  43ac78:	cmp	x2, x20
  43ac7c:	b.hi	43ac74 <ferror@plt+0x383a4>  // b.pmore
  43ac80:	mov	x1, x20
  43ac84:	ldr	x0, [x19]
  43ac88:	bl	4024f0 <realloc@plt>
  43ac8c:	cbz	x0, 43ac9c <ferror@plt+0x383cc>
  43ac90:	str	x0, [x19]
  43ac94:	str	x20, [x19, #16]
  43ac98:	b	43ac10 <ferror@plt+0x38340>
  43ac9c:	ldr	x0, [x19]
  43aca0:	bl	402690 <free@plt>
  43aca4:	str	xzr, [x19]
  43aca8:	str	xzr, [x19, #8]
  43acac:	str	xzr, [x19, #16]
  43acb0:	mov	w0, #0x1                   	// #1
  43acb4:	str	w0, [x19, #24]
  43acb8:	b	43ac4c <ferror@plt+0x3837c>
  43acbc:	stp	x29, x30, [sp, #-240]!
  43acc0:	mov	x29, sp
  43acc4:	stp	x19, x20, [sp, #16]
  43acc8:	mov	x19, x0
  43accc:	cbz	x2, 43ad10 <ferror@plt+0x38440>
  43acd0:	stp	x21, x22, [sp, #32]
  43acd4:	mov	w20, w1
  43acd8:	mov	x22, x2
  43acdc:	ldr	w21, [x0, #304]
  43ace0:	cbnz	w21, 43ee4c <ferror@plt+0x3c57c>
  43ace4:	ldr	w0, [x2]
  43ace8:	cmp	w0, #0x50
  43acec:	b.hi	43ed48 <ferror@plt+0x3c478>  // b.pmore
  43acf0:	stp	x23, x24, [sp, #48]
  43acf4:	stp	x25, x26, [sp, #64]
  43acf8:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d094>
  43acfc:	add	x1, x1, #0xd58
  43ad00:	ldrh	w1, [x1, w0, uxtw #1]
  43ad04:	adr	x2, 43ad10 <ferror@plt+0x38440>
  43ad08:	add	x1, x2, w1, sxth #2
  43ad0c:	br	x1
  43ad10:	mov	w0, #0x1                   	// #1
  43ad14:	str	w0, [x19, #304]
  43ad18:	b	43ee50 <ferror@plt+0x3c580>
  43ad1c:	tbnz	w20, #2, 43ada8 <ferror@plt+0x384d8>
  43ad20:	ldr	x1, [x22, #8]
  43ad24:	ldrsw	x0, [x22, #16]
  43ad28:	cbz	x0, 43ee5c <ferror@plt+0x3c58c>
  43ad2c:	mov	x20, x1
  43ad30:	add	x22, x1, x0
  43ad34:	mov	x23, #0xff                  	// #255
  43ad38:	b	43ad5c <ferror@plt+0x3848c>
  43ad3c:	ldr	x0, [x19, #256]
  43ad40:	add	x1, x0, #0x1
  43ad44:	str	x1, [x19, #256]
  43ad48:	strb	w21, [x19, x0]
  43ad4c:	strb	w21, [x19, #264]
  43ad50:	add	x20, x20, #0x1
  43ad54:	cmp	x22, x20
  43ad58:	b.eq	43ad98 <ferror@plt+0x384c8>  // b.none
  43ad5c:	ldrb	w21, [x20]
  43ad60:	ldr	x0, [x19, #256]
  43ad64:	cmp	x0, #0xff
  43ad68:	b.ne	43ad3c <ferror@plt+0x3846c>  // b.any
  43ad6c:	strb	wzr, [x19, #255]
  43ad70:	ldr	x3, [x19, #272]
  43ad74:	ldr	x2, [x19, #280]
  43ad78:	mov	x1, x23
  43ad7c:	mov	x0, x19
  43ad80:	blr	x3
  43ad84:	str	xzr, [x19, #256]
  43ad88:	ldr	x0, [x19, #320]
  43ad8c:	add	x0, x0, #0x1
  43ad90:	str	x0, [x19, #320]
  43ad94:	b	43ad3c <ferror@plt+0x3846c>
  43ad98:	ldp	x21, x22, [sp, #32]
  43ad9c:	ldp	x23, x24, [sp, #48]
  43ada0:	ldp	x25, x26, [sp, #64]
  43ada4:	b	43ee50 <ferror@plt+0x3c580>
  43ada8:	ldr	x20, [x22, #8]
  43adac:	ldrsw	x22, [x22, #16]
  43adb0:	add	x22, x20, x22
  43adb4:	cmp	x20, x22
  43adb8:	b.cs	43ee6c <ferror@plt+0x3c59c>  // b.hs, b.nlast
  43adbc:	mov	x23, #0xff                  	// #255
  43adc0:	mov	x24, #0x0                   	// #0
  43adc4:	b	43ae6c <ferror@plt+0x3859c>
  43adc8:	sub	w1, w0, #0x41
  43adcc:	and	w1, w1, #0xff
  43add0:	cmp	w1, #0x5
  43add4:	b.hi	43ae0c <ferror@plt+0x3853c>  // b.pmore
  43add8:	sub	w0, w0, #0x37
  43addc:	sxtw	x0, w0
  43ade0:	add	x2, x0, x2, lsl #4
  43ade4:	add	x21, x21, #0x1
  43ade8:	cmp	x22, x21
  43adec:	b.eq	43ae3c <ferror@plt+0x3856c>  // b.none
  43adf0:	ldrb	w0, [x21]
  43adf4:	sub	w1, w0, #0x30
  43adf8:	and	w1, w1, #0xff
  43adfc:	cmp	w1, #0x9
  43ae00:	b.hi	43adc8 <ferror@plt+0x384f8>  // b.pmore
  43ae04:	sub	w0, w0, #0x30
  43ae08:	b	43addc <ferror@plt+0x3850c>
  43ae0c:	sub	w1, w0, #0x61
  43ae10:	and	w1, w1, #0xff
  43ae14:	cmp	w1, #0x5
  43ae18:	b.hi	43ae24 <ferror@plt+0x38554>  // b.pmore
  43ae1c:	sub	w0, w0, #0x57
  43ae20:	b	43addc <ferror@plt+0x3850c>
  43ae24:	cmp	x22, x21
  43ae28:	b.ls	43ae3c <ferror@plt+0x3856c>  // b.plast
  43ae2c:	ldrb	w0, [x21]
  43ae30:	cmp	w0, #0x5f
  43ae34:	ccmp	x2, x23, #0x2, eq  // eq = none
  43ae38:	b.ls	43aeb0 <ferror@plt+0x385e0>  // b.plast
  43ae3c:	ldrb	w21, [x20]
  43ae40:	ldr	x0, [x19, #256]
  43ae44:	cmp	x0, #0xff
  43ae48:	b.eq	43af08 <ferror@plt+0x38638>  // b.none
  43ae4c:	ldr	x0, [x19, #256]
  43ae50:	add	x1, x0, #0x1
  43ae54:	str	x1, [x19, #256]
  43ae58:	strb	w21, [x19, x0]
  43ae5c:	strb	w21, [x19, #264]
  43ae60:	add	x20, x20, #0x1
  43ae64:	cmp	x22, x20
  43ae68:	b.ls	43af34 <ferror@plt+0x38664>  // b.plast
  43ae6c:	sub	x0, x22, x20
  43ae70:	cmp	x0, #0x3
  43ae74:	b.le	43ae3c <ferror@plt+0x3856c>
  43ae78:	ldrb	w0, [x20]
  43ae7c:	cmp	w0, #0x5f
  43ae80:	b.ne	43ae3c <ferror@plt+0x3856c>  // b.any
  43ae84:	ldrb	w0, [x20, #1]
  43ae88:	cmp	w0, #0x5f
  43ae8c:	b.ne	43ae3c <ferror@plt+0x3856c>  // b.any
  43ae90:	ldrb	w0, [x20, #2]
  43ae94:	cmp	w0, #0x55
  43ae98:	b.ne	43ae3c <ferror@plt+0x3856c>  // b.any
  43ae9c:	add	x21, x20, #0x3
  43aea0:	cmp	x22, x21
  43aea4:	b.ls	43ae3c <ferror@plt+0x3856c>  // b.plast
  43aea8:	mov	x2, x24
  43aeac:	b	43adf0 <ferror@plt+0x38520>
  43aeb0:	and	w20, w2, #0xff
  43aeb4:	ldr	x0, [x19, #256]
  43aeb8:	cmp	x0, #0xff
  43aebc:	b.eq	43aedc <ferror@plt+0x3860c>  // b.none
  43aec0:	ldr	x0, [x19, #256]
  43aec4:	add	x1, x0, #0x1
  43aec8:	str	x1, [x19, #256]
  43aecc:	strb	w20, [x19, x0]
  43aed0:	strb	w20, [x19, #264]
  43aed4:	mov	x20, x21
  43aed8:	b	43ae60 <ferror@plt+0x38590>
  43aedc:	strb	wzr, [x19, #255]
  43aee0:	ldr	x3, [x19, #272]
  43aee4:	ldr	x2, [x19, #280]
  43aee8:	mov	x1, x23
  43aeec:	mov	x0, x19
  43aef0:	blr	x3
  43aef4:	str	xzr, [x19, #256]
  43aef8:	ldr	x0, [x19, #320]
  43aefc:	add	x0, x0, #0x1
  43af00:	str	x0, [x19, #320]
  43af04:	b	43aec0 <ferror@plt+0x385f0>
  43af08:	strb	wzr, [x19, #255]
  43af0c:	ldr	x3, [x19, #272]
  43af10:	ldr	x2, [x19, #280]
  43af14:	mov	x1, x23
  43af18:	mov	x0, x19
  43af1c:	blr	x3
  43af20:	str	xzr, [x19, #256]
  43af24:	ldr	x0, [x19, #320]
  43af28:	add	x0, x0, #0x1
  43af2c:	str	x0, [x19, #320]
  43af30:	b	43ae4c <ferror@plt+0x3857c>
  43af34:	ldp	x21, x22, [sp, #32]
  43af38:	ldp	x23, x24, [sp, #48]
  43af3c:	ldp	x25, x26, [sp, #64]
  43af40:	b	43ee50 <ferror@plt+0x3c580>
  43af44:	ldr	x2, [x22, #8]
  43af48:	mov	w1, w20
  43af4c:	mov	x0, x19
  43af50:	bl	43ef90 <ferror@plt+0x3c6c0>
  43af54:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43af58:	add	x21, x21, #0xb58
  43af5c:	add	x24, x21, #0x5
  43af60:	mov	x25, #0xff                  	// #255
  43af64:	b	43af88 <ferror@plt+0x386b8>
  43af68:	ldr	x0, [x19, #256]
  43af6c:	add	x1, x0, #0x1
  43af70:	str	x1, [x19, #256]
  43af74:	strb	w23, [x19, x0]
  43af78:	strb	w23, [x19, #264]
  43af7c:	add	x21, x21, #0x1
  43af80:	cmp	x21, x24
  43af84:	b.eq	43afc4 <ferror@plt+0x386f4>  // b.none
  43af88:	ldrb	w23, [x21]
  43af8c:	ldr	x0, [x19, #256]
  43af90:	cmp	x0, #0xff
  43af94:	b.ne	43af68 <ferror@plt+0x38698>  // b.any
  43af98:	strb	wzr, [x19, #255]
  43af9c:	ldr	x3, [x19, #272]
  43afa0:	ldr	x2, [x19, #280]
  43afa4:	mov	x1, x25
  43afa8:	mov	x0, x19
  43afac:	blr	x3
  43afb0:	str	xzr, [x19, #256]
  43afb4:	ldr	x0, [x19, #320]
  43afb8:	add	x0, x0, #0x1
  43afbc:	str	x0, [x19, #320]
  43afc0:	b	43af68 <ferror@plt+0x38698>
  43afc4:	ldr	x2, [x22, #16]
  43afc8:	mov	w1, w20
  43afcc:	mov	x0, x19
  43afd0:	bl	43ef90 <ferror@plt+0x3c6c0>
  43afd4:	ldr	x0, [x19, #256]
  43afd8:	cmp	x0, #0xff
  43afdc:	b.eq	43b008 <ferror@plt+0x38738>  // b.none
  43afe0:	ldr	x1, [x19, #256]
  43afe4:	add	x0, x1, #0x1
  43afe8:	str	x0, [x19, #256]
  43afec:	mov	w0, #0x5d                  	// #93
  43aff0:	strb	w0, [x19, x1]
  43aff4:	strb	w0, [x19, #264]
  43aff8:	ldp	x21, x22, [sp, #32]
  43affc:	ldp	x23, x24, [sp, #48]
  43b000:	ldp	x25, x26, [sp, #64]
  43b004:	b	43ee50 <ferror@plt+0x3c580>
  43b008:	strb	wzr, [x19, #255]
  43b00c:	ldr	x3, [x19, #272]
  43b010:	ldr	x2, [x19, #280]
  43b014:	mov	x1, #0xff                  	// #255
  43b018:	mov	x0, x19
  43b01c:	blr	x3
  43b020:	str	xzr, [x19, #256]
  43b024:	ldr	x0, [x19, #320]
  43b028:	add	x0, x0, #0x1
  43b02c:	str	x0, [x19, #320]
  43b030:	b	43afe0 <ferror@plt+0x38710>
  43b034:	ldr	x2, [x22, #8]
  43b038:	mov	w1, w20
  43b03c:	mov	x0, x19
  43b040:	bl	43ef90 <ferror@plt+0x3c6c0>
  43b044:	tbz	w20, #2, 43b09c <ferror@plt+0x387cc>
  43b048:	ldr	x0, [x19, #256]
  43b04c:	cmp	x0, #0xff
  43b050:	b.eq	43b10c <ferror@plt+0x3883c>  // b.none
  43b054:	ldr	x1, [x19, #256]
  43b058:	add	x0, x1, #0x1
  43b05c:	str	x0, [x19, #256]
  43b060:	mov	w0, #0x2e                  	// #46
  43b064:	strb	w0, [x19, x1]
  43b068:	strb	w0, [x19, #264]
  43b06c:	ldr	x23, [x22, #16]
  43b070:	ldr	w0, [x23]
  43b074:	cmp	w0, #0x47
  43b078:	b.eq	43b138 <ferror@plt+0x38868>  // b.none
  43b07c:	mov	x2, x23
  43b080:	mov	w1, w20
  43b084:	mov	x0, x19
  43b088:	bl	43ef90 <ferror@plt+0x3c6c0>
  43b08c:	ldp	x21, x22, [sp, #32]
  43b090:	ldp	x23, x24, [sp, #48]
  43b094:	ldp	x25, x26, [sp, #64]
  43b098:	b	43ee50 <ferror@plt+0x3c580>
  43b09c:	adrp	x21, 461000 <_obstack_memory_used@@Base+0x1a094>
  43b0a0:	add	x21, x21, #0xfd8
  43b0a4:	add	x24, x21, #0x2
  43b0a8:	mov	x25, #0xff                  	// #255
  43b0ac:	b	43b0d0 <ferror@plt+0x38800>
  43b0b0:	ldr	x0, [x19, #256]
  43b0b4:	add	x1, x0, #0x1
  43b0b8:	str	x1, [x19, #256]
  43b0bc:	strb	w23, [x19, x0]
  43b0c0:	strb	w23, [x19, #264]
  43b0c4:	add	x21, x21, #0x1
  43b0c8:	cmp	x24, x21
  43b0cc:	b.eq	43b06c <ferror@plt+0x3879c>  // b.none
  43b0d0:	ldrb	w23, [x21]
  43b0d4:	ldr	x0, [x19, #256]
  43b0d8:	cmp	x0, #0xff
  43b0dc:	b.ne	43b0b0 <ferror@plt+0x387e0>  // b.any
  43b0e0:	strb	wzr, [x19, #255]
  43b0e4:	ldr	x3, [x19, #272]
  43b0e8:	ldr	x2, [x19, #280]
  43b0ec:	mov	x1, x25
  43b0f0:	mov	x0, x19
  43b0f4:	blr	x3
  43b0f8:	str	xzr, [x19, #256]
  43b0fc:	ldr	x0, [x19, #320]
  43b100:	add	x0, x0, #0x1
  43b104:	str	x0, [x19, #320]
  43b108:	b	43b0b0 <ferror@plt+0x387e0>
  43b10c:	strb	wzr, [x19, #255]
  43b110:	ldr	x3, [x19, #272]
  43b114:	ldr	x2, [x19, #280]
  43b118:	mov	x1, #0xff                  	// #255
  43b11c:	mov	x0, x19
  43b120:	blr	x3
  43b124:	str	xzr, [x19, #256]
  43b128:	ldr	x0, [x19, #320]
  43b12c:	add	x0, x0, #0x1
  43b130:	str	x0, [x19, #320]
  43b134:	b	43b054 <ferror@plt+0x38784>
  43b138:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43b13c:	add	x21, x21, #0xb60
  43b140:	add	x24, x21, #0xd
  43b144:	mov	x25, #0xff                  	// #255
  43b148:	b	43b16c <ferror@plt+0x3889c>
  43b14c:	ldr	x0, [x19, #256]
  43b150:	add	x1, x0, #0x1
  43b154:	str	x1, [x19, #256]
  43b158:	strb	w22, [x19, x0]
  43b15c:	strb	w22, [x19, #264]
  43b160:	add	x21, x21, #0x1
  43b164:	cmp	x21, x24
  43b168:	b.eq	43b1a8 <ferror@plt+0x388d8>  // b.none
  43b16c:	ldrb	w22, [x21]
  43b170:	ldr	x0, [x19, #256]
  43b174:	cmp	x0, #0xff
  43b178:	b.ne	43b14c <ferror@plt+0x3887c>  // b.any
  43b17c:	strb	wzr, [x19, #255]
  43b180:	ldr	x3, [x19, #272]
  43b184:	ldr	x2, [x19, #280]
  43b188:	mov	x1, x25
  43b18c:	mov	x0, x19
  43b190:	blr	x3
  43b194:	str	xzr, [x19, #256]
  43b198:	ldr	x0, [x19, #320]
  43b19c:	add	x0, x0, #0x1
  43b1a0:	str	x0, [x19, #320]
  43b1a4:	b	43b14c <ferror@plt+0x3887c>
  43b1a8:	ldr	w2, [x23, #16]
  43b1ac:	add	w2, w2, #0x1
  43b1b0:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  43b1b4:	add	x1, x1, #0x40
  43b1b8:	add	x0, sp, #0x70
  43b1bc:	bl	402350 <sprintf@plt>
  43b1c0:	add	x0, sp, #0x70
  43b1c4:	bl	4022b0 <strlen@plt>
  43b1c8:	cbz	x0, 43b238 <ferror@plt+0x38968>
  43b1cc:	add	x21, sp, #0x70
  43b1d0:	add	x24, x0, x21
  43b1d4:	mov	x25, #0xff                  	// #255
  43b1d8:	b	43b1fc <ferror@plt+0x3892c>
  43b1dc:	ldr	x0, [x19, #256]
  43b1e0:	add	x1, x0, #0x1
  43b1e4:	str	x1, [x19, #256]
  43b1e8:	strb	w22, [x19, x0]
  43b1ec:	strb	w22, [x19, #264]
  43b1f0:	add	x21, x21, #0x1
  43b1f4:	cmp	x24, x21
  43b1f8:	b.eq	43b238 <ferror@plt+0x38968>  // b.none
  43b1fc:	ldrb	w22, [x21]
  43b200:	ldr	x0, [x19, #256]
  43b204:	cmp	x0, #0xff
  43b208:	b.ne	43b1dc <ferror@plt+0x3890c>  // b.any
  43b20c:	strb	wzr, [x19, #255]
  43b210:	ldr	x3, [x19, #272]
  43b214:	ldr	x2, [x19, #280]
  43b218:	mov	x1, x25
  43b21c:	mov	x0, x19
  43b220:	blr	x3
  43b224:	str	xzr, [x19, #256]
  43b228:	ldr	x0, [x19, #320]
  43b22c:	add	x0, x0, #0x1
  43b230:	str	x0, [x19, #320]
  43b234:	b	43b1dc <ferror@plt+0x3890c>
  43b238:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43b23c:	add	x21, x21, #0xb70
  43b240:	add	x24, x21, #0x3
  43b244:	mov	x25, #0xff                  	// #255
  43b248:	b	43b26c <ferror@plt+0x3899c>
  43b24c:	ldr	x0, [x19, #256]
  43b250:	add	x1, x0, #0x1
  43b254:	str	x1, [x19, #256]
  43b258:	strb	w22, [x19, x0]
  43b25c:	strb	w22, [x19, #264]
  43b260:	add	x21, x21, #0x1
  43b264:	cmp	x21, x24
  43b268:	b.eq	43b2a8 <ferror@plt+0x389d8>  // b.none
  43b26c:	ldrb	w22, [x21]
  43b270:	ldr	x0, [x19, #256]
  43b274:	cmp	x0, #0xff
  43b278:	b.ne	43b24c <ferror@plt+0x3897c>  // b.any
  43b27c:	strb	wzr, [x19, #255]
  43b280:	ldr	x3, [x19, #272]
  43b284:	ldr	x2, [x19, #280]
  43b288:	mov	x1, x25
  43b28c:	mov	x0, x19
  43b290:	blr	x3
  43b294:	str	xzr, [x19, #256]
  43b298:	ldr	x0, [x19, #320]
  43b29c:	add	x0, x0, #0x1
  43b2a0:	str	x0, [x19, #320]
  43b2a4:	b	43b24c <ferror@plt+0x3897c>
  43b2a8:	ldr	x23, [x23, #8]
  43b2ac:	b	43b07c <ferror@plt+0x387ac>
  43b2b0:	stp	x27, x28, [sp, #80]
  43b2b4:	ldr	x27, [x19, #296]
  43b2b8:	str	xzr, [x19, #296]
  43b2bc:	ldr	x21, [x22, #8]
  43b2c0:	cbz	x21, 43ed58 <ferror@plt+0x3c488>
  43b2c4:	ldr	x24, [x19, #288]
  43b2c8:	add	x26, sp, #0x70
  43b2cc:	mov	x25, x26
  43b2d0:	mov	w23, #0x0                   	// #0
  43b2d4:	ldr	x0, [x19, #296]
  43b2d8:	str	x0, [x25]
  43b2dc:	str	x25, [x19, #296]
  43b2e0:	str	x21, [x25, #8]
  43b2e4:	str	wzr, [x25, #16]
  43b2e8:	str	x24, [x25, #24]
  43b2ec:	add	w23, w23, #0x1
  43b2f0:	ldr	w28, [x21]
  43b2f4:	mov	w0, w28
  43b2f8:	bl	43a1a8 <ferror@plt+0x378d8>
  43b2fc:	cbz	w0, 43ed74 <ferror@plt+0x3c4a4>
  43b300:	ldr	x21, [x21, #8]
  43b304:	cbz	x21, 43ed58 <ferror@plt+0x3c488>
  43b308:	add	x25, x25, #0x20
  43b30c:	cmp	w23, #0x4
  43b310:	b.ne	43b2d4 <ferror@plt+0x38a04>  // b.any
  43b314:	mov	w0, #0x1                   	// #1
  43b318:	str	w0, [x19, #304]
  43b31c:	ldp	x21, x22, [sp, #32]
  43b320:	ldp	x23, x24, [sp, #48]
  43b324:	ldp	x25, x26, [sp, #64]
  43b328:	ldp	x27, x28, [sp, #80]
  43b32c:	b	43ee50 <ferror@plt+0x3c580>
  43b330:	ldr	x21, [x21, #16]
  43b334:	ldr	w0, [x21]
  43b338:	cmp	w0, #0x47
  43b33c:	b.eq	43b3b0 <ferror@plt+0x38ae0>  // b.none
  43b340:	ubfiz	x25, x23, #5, #32
  43b344:	add	x0, sp, #0x70
  43b348:	add	x25, x0, x25
  43b34c:	add	x28, sp, #0x78
  43b350:	ldr	w0, [x21]
  43b354:	bl	43a1a8 <ferror@plt+0x378d8>
  43b358:	cbz	w0, 43ed7c <ferror@plt+0x3c4ac>
  43b35c:	cmp	w23, #0x3
  43b360:	b.hi	43b3d4 <ferror@plt+0x38b04>  // b.pmore
  43b364:	sub	w0, w23, #0x1
  43b368:	lsl	x0, x0, #5
  43b36c:	add	x1, sp, #0x70
  43b370:	add	x1, x1, x0
  43b374:	ldp	x2, x3, [x1]
  43b378:	stp	x2, x3, [x25]
  43b37c:	ldp	x2, x3, [x1, #16]
  43b380:	stp	x2, x3, [x25, #16]
  43b384:	str	x1, [x25]
  43b388:	str	x25, [x19, #296]
  43b38c:	str	x21, [x28, x0]
  43b390:	add	x1, sp, #0x80
  43b394:	str	wzr, [x1, x0]
  43b398:	add	x1, sp, #0x88
  43b39c:	str	x24, [x1, x0]
  43b3a0:	add	w23, w23, #0x1
  43b3a4:	ldr	x21, [x21, #8]
  43b3a8:	add	x25, x25, #0x20
  43b3ac:	b	43b350 <ferror@plt+0x38a80>
  43b3b0:	ldr	x21, [x21, #8]
  43b3b4:	cbnz	x21, 43b340 <ferror@plt+0x38a70>
  43b3b8:	mov	w0, #0x1                   	// #1
  43b3bc:	str	w0, [x19, #304]
  43b3c0:	ldp	x21, x22, [sp, #32]
  43b3c4:	ldp	x23, x24, [sp, #48]
  43b3c8:	ldp	x25, x26, [sp, #64]
  43b3cc:	ldp	x27, x28, [sp, #80]
  43b3d0:	b	43ee50 <ferror@plt+0x3c580>
  43b3d4:	mov	w0, #0x1                   	// #1
  43b3d8:	str	w0, [x19, #304]
  43b3dc:	ldp	x21, x22, [sp, #32]
  43b3e0:	ldp	x23, x24, [sp, #48]
  43b3e4:	ldp	x25, x26, [sp, #64]
  43b3e8:	ldp	x27, x28, [sp, #80]
  43b3ec:	b	43ee50 <ferror@plt+0x3c580>
  43b3f0:	str	x24, [sp, #96]
  43b3f4:	add	x0, sp, #0x60
  43b3f8:	str	x0, [x19, #288]
  43b3fc:	str	x21, [sp, #104]
  43b400:	b	43ed88 <ferror@plt+0x3c4b8>
  43b404:	ldr	x0, [sp, #96]
  43b408:	str	x0, [x19, #288]
  43b40c:	b	43eda4 <ferror@plt+0x3c4d4>
  43b410:	ldr	x0, [x19, #256]
  43b414:	add	x1, x0, #0x1
  43b418:	str	x1, [x19, #256]
  43b41c:	strb	w22, [x19, x0]
  43b420:	strb	w22, [x19, #264]
  43b424:	ldr	x2, [x24, #8]
  43b428:	mov	w1, w20
  43b42c:	mov	x0, x19
  43b430:	bl	43f02c <ferror@plt+0x3c75c>
  43b434:	sub	x0, x21, #0x20
  43b438:	cmp	x26, x21
  43b43c:	b.eq	43b488 <ferror@plt+0x38bb8>  // b.none
  43b440:	mov	x21, x0
  43b444:	mov	x24, x21
  43b448:	ldr	w0, [x21, #16]
  43b44c:	cbnz	w0, 43b434 <ferror@plt+0x38b64>
  43b450:	ldr	x0, [x19, #256]
  43b454:	cmp	x0, #0xff
  43b458:	b.ne	43b410 <ferror@plt+0x38b40>  // b.any
  43b45c:	strb	wzr, [x19, #255]
  43b460:	ldr	x3, [x19, #272]
  43b464:	ldr	x2, [x19, #280]
  43b468:	mov	x1, x23
  43b46c:	mov	x0, x19
  43b470:	blr	x3
  43b474:	str	xzr, [x19, #256]
  43b478:	ldr	x0, [x19, #320]
  43b47c:	add	x0, x0, #0x1
  43b480:	str	x0, [x19, #320]
  43b484:	b	43b410 <ferror@plt+0x38b40>
  43b488:	str	x27, [x19, #296]
  43b48c:	ldp	x21, x22, [sp, #32]
  43b490:	ldp	x23, x24, [sp, #48]
  43b494:	ldp	x25, x26, [sp, #64]
  43b498:	ldp	x27, x28, [sp, #80]
  43b49c:	b	43ee50 <ferror@plt+0x3c580>
  43b4a0:	ldr	x23, [x19, #368]
  43b4a4:	str	x22, [x19, #368]
  43b4a8:	ldr	x24, [x19, #296]
  43b4ac:	str	xzr, [x19, #296]
  43b4b0:	ldr	x21, [x22, #8]
  43b4b4:	tbz	w20, #2, 43b4cc <ferror@plt+0x38bfc>
  43b4b8:	ldr	w0, [x21]
  43b4bc:	cbnz	w0, 43b4cc <ferror@plt+0x38bfc>
  43b4c0:	ldr	w0, [x21, #16]
  43b4c4:	cmp	w0, #0x6
  43b4c8:	b.eq	43b564 <ferror@plt+0x38c94>  // b.none
  43b4cc:	mov	x2, x21
  43b4d0:	mov	w1, w20
  43b4d4:	mov	x0, x19
  43b4d8:	bl	43ef90 <ferror@plt+0x3c6c0>
  43b4dc:	ldrb	w0, [x19, #264]
  43b4e0:	cmp	w0, #0x3c
  43b4e4:	b.eq	43b5a4 <ferror@plt+0x38cd4>  // b.none
  43b4e8:	ldr	x0, [x19, #256]
  43b4ec:	cmp	x0, #0xff
  43b4f0:	b.eq	43b5f8 <ferror@plt+0x38d28>  // b.none
  43b4f4:	ldr	x1, [x19, #256]
  43b4f8:	add	x0, x1, #0x1
  43b4fc:	str	x0, [x19, #256]
  43b500:	mov	w0, #0x3c                  	// #60
  43b504:	strb	w0, [x19, x1]
  43b508:	strb	w0, [x19, #264]
  43b50c:	ldr	x2, [x22, #16]
  43b510:	mov	w1, w20
  43b514:	mov	x0, x19
  43b518:	bl	43ef90 <ferror@plt+0x3c6c0>
  43b51c:	ldrb	w0, [x19, #264]
  43b520:	cmp	w0, #0x3e
  43b524:	b.eq	43b624 <ferror@plt+0x38d54>  // b.none
  43b528:	ldr	x0, [x19, #256]
  43b52c:	cmp	x0, #0xff
  43b530:	b.eq	43b678 <ferror@plt+0x38da8>  // b.none
  43b534:	ldr	x1, [x19, #256]
  43b538:	add	x0, x1, #0x1
  43b53c:	str	x0, [x19, #256]
  43b540:	mov	w0, #0x3e                  	// #62
  43b544:	strb	w0, [x19, x1]
  43b548:	strb	w0, [x19, #264]
  43b54c:	str	x24, [x19, #296]
  43b550:	str	x23, [x19, #368]
  43b554:	ldp	x21, x22, [sp, #32]
  43b558:	ldp	x23, x24, [sp, #48]
  43b55c:	ldp	x25, x26, [sp, #64]
  43b560:	b	43ee50 <ferror@plt+0x3c580>
  43b564:	mov	x2, #0x6                   	// #6
  43b568:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  43b56c:	add	x1, x1, #0xb78
  43b570:	ldr	x0, [x21, #8]
  43b574:	bl	402440 <strncmp@plt>
  43b578:	cbnz	w0, 43b4cc <ferror@plt+0x38bfc>
  43b57c:	ldr	x2, [x22, #16]
  43b580:	mov	w1, w20
  43b584:	mov	x0, x19
  43b588:	bl	43ef90 <ferror@plt+0x3c6c0>
  43b58c:	mov	x2, #0x2                   	// #2
  43b590:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  43b594:	add	x1, x1, #0xf48
  43b598:	mov	x0, x19
  43b59c:	bl	43a9a4 <ferror@plt+0x380d4>
  43b5a0:	b	43b54c <ferror@plt+0x38c7c>
  43b5a4:	ldr	x0, [x19, #256]
  43b5a8:	cmp	x0, #0xff
  43b5ac:	b.eq	43b5cc <ferror@plt+0x38cfc>  // b.none
  43b5b0:	ldr	x1, [x19, #256]
  43b5b4:	add	x0, x1, #0x1
  43b5b8:	str	x0, [x19, #256]
  43b5bc:	mov	w0, #0x20                  	// #32
  43b5c0:	strb	w0, [x19, x1]
  43b5c4:	strb	w0, [x19, #264]
  43b5c8:	b	43b4e8 <ferror@plt+0x38c18>
  43b5cc:	strb	wzr, [x19, #255]
  43b5d0:	ldr	x3, [x19, #272]
  43b5d4:	ldr	x2, [x19, #280]
  43b5d8:	mov	x1, #0xff                  	// #255
  43b5dc:	mov	x0, x19
  43b5e0:	blr	x3
  43b5e4:	str	xzr, [x19, #256]
  43b5e8:	ldr	x0, [x19, #320]
  43b5ec:	add	x0, x0, #0x1
  43b5f0:	str	x0, [x19, #320]
  43b5f4:	b	43b5b0 <ferror@plt+0x38ce0>
  43b5f8:	strb	wzr, [x19, #255]
  43b5fc:	ldr	x3, [x19, #272]
  43b600:	ldr	x2, [x19, #280]
  43b604:	mov	x1, #0xff                  	// #255
  43b608:	mov	x0, x19
  43b60c:	blr	x3
  43b610:	str	xzr, [x19, #256]
  43b614:	ldr	x0, [x19, #320]
  43b618:	add	x0, x0, #0x1
  43b61c:	str	x0, [x19, #320]
  43b620:	b	43b4f4 <ferror@plt+0x38c24>
  43b624:	ldr	x0, [x19, #256]
  43b628:	cmp	x0, #0xff
  43b62c:	b.eq	43b64c <ferror@plt+0x38d7c>  // b.none
  43b630:	ldr	x1, [x19, #256]
  43b634:	add	x0, x1, #0x1
  43b638:	str	x0, [x19, #256]
  43b63c:	mov	w0, #0x20                  	// #32
  43b640:	strb	w0, [x19, x1]
  43b644:	strb	w0, [x19, #264]
  43b648:	b	43b528 <ferror@plt+0x38c58>
  43b64c:	strb	wzr, [x19, #255]
  43b650:	ldr	x3, [x19, #272]
  43b654:	ldr	x2, [x19, #280]
  43b658:	mov	x1, #0xff                  	// #255
  43b65c:	mov	x0, x19
  43b660:	blr	x3
  43b664:	str	xzr, [x19, #256]
  43b668:	ldr	x0, [x19, #320]
  43b66c:	add	x0, x0, #0x1
  43b670:	str	x0, [x19, #320]
  43b674:	b	43b630 <ferror@plt+0x38d60>
  43b678:	strb	wzr, [x19, #255]
  43b67c:	ldr	x3, [x19, #272]
  43b680:	ldr	x2, [x19, #280]
  43b684:	mov	x1, #0xff                  	// #255
  43b688:	mov	x0, x19
  43b68c:	blr	x3
  43b690:	str	xzr, [x19, #256]
  43b694:	ldr	x0, [x19, #320]
  43b698:	add	x0, x0, #0x1
  43b69c:	str	x0, [x19, #320]
  43b6a0:	b	43b534 <ferror@plt+0x38c64>
  43b6a4:	ldr	w0, [x19, #312]
  43b6a8:	cbz	w0, 43b7bc <ferror@plt+0x38eec>
  43b6ac:	adrp	x20, 465000 <_obstack_memory_used@@Base+0x1e094>
  43b6b0:	add	x20, x20, #0xb80
  43b6b4:	add	x23, x20, #0x5
  43b6b8:	mov	x24, #0xff                  	// #255
  43b6bc:	b	43b6e0 <ferror@plt+0x38e10>
  43b6c0:	ldr	x0, [x19, #256]
  43b6c4:	add	x1, x0, #0x1
  43b6c8:	str	x1, [x19, #256]
  43b6cc:	strb	w21, [x19, x0]
  43b6d0:	strb	w21, [x19, #264]
  43b6d4:	add	x20, x20, #0x1
  43b6d8:	cmp	x23, x20
  43b6dc:	b.eq	43b71c <ferror@plt+0x38e4c>  // b.none
  43b6e0:	ldrb	w21, [x20]
  43b6e4:	ldr	x0, [x19, #256]
  43b6e8:	cmp	x0, #0xff
  43b6ec:	b.ne	43b6c0 <ferror@plt+0x38df0>  // b.any
  43b6f0:	strb	wzr, [x19, #255]
  43b6f4:	ldr	x3, [x19, #272]
  43b6f8:	ldr	x2, [x19, #280]
  43b6fc:	mov	x1, x24
  43b700:	mov	x0, x19
  43b704:	blr	x3
  43b708:	str	xzr, [x19, #256]
  43b70c:	ldr	x0, [x19, #320]
  43b710:	add	x0, x0, #0x1
  43b714:	str	x0, [x19, #320]
  43b718:	b	43b6c0 <ferror@plt+0x38df0>
  43b71c:	ldr	x2, [x22, #8]
  43b720:	add	w2, w2, #0x1
  43b724:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  43b728:	add	x1, x1, #0x40
  43b72c:	add	x0, sp, #0x70
  43b730:	bl	402350 <sprintf@plt>
  43b734:	add	x0, sp, #0x70
  43b738:	bl	4022b0 <strlen@plt>
  43b73c:	cbz	x0, 43ee7c <ferror@plt+0x3c5ac>
  43b740:	add	x20, sp, #0x70
  43b744:	add	x22, x0, x20
  43b748:	mov	x23, #0xff                  	// #255
  43b74c:	b	43b770 <ferror@plt+0x38ea0>
  43b750:	ldr	x0, [x19, #256]
  43b754:	add	x1, x0, #0x1
  43b758:	str	x1, [x19, #256]
  43b75c:	strb	w21, [x19, x0]
  43b760:	strb	w21, [x19, #264]
  43b764:	add	x20, x20, #0x1
  43b768:	cmp	x22, x20
  43b76c:	b.eq	43b7ac <ferror@plt+0x38edc>  // b.none
  43b770:	ldrb	w21, [x20]
  43b774:	ldr	x0, [x19, #256]
  43b778:	cmp	x0, #0xff
  43b77c:	b.ne	43b750 <ferror@plt+0x38e80>  // b.any
  43b780:	strb	wzr, [x19, #255]
  43b784:	ldr	x3, [x19, #272]
  43b788:	ldr	x2, [x19, #280]
  43b78c:	mov	x1, x23
  43b790:	mov	x0, x19
  43b794:	blr	x3
  43b798:	str	xzr, [x19, #256]
  43b79c:	ldr	x0, [x19, #320]
  43b7a0:	add	x0, x0, #0x1
  43b7a4:	str	x0, [x19, #320]
  43b7a8:	b	43b750 <ferror@plt+0x38e80>
  43b7ac:	ldp	x21, x22, [sp, #32]
  43b7b0:	ldp	x23, x24, [sp, #48]
  43b7b4:	ldp	x25, x26, [sp, #64]
  43b7b8:	b	43ee50 <ferror@plt+0x3c580>
  43b7bc:	mov	x1, x22
  43b7c0:	mov	x0, x19
  43b7c4:	bl	43aa7c <ferror@plt+0x381ac>
  43b7c8:	cbz	x0, 43b814 <ferror@plt+0x38f44>
  43b7cc:	ldr	w1, [x0]
  43b7d0:	cmp	w1, #0x2f
  43b7d4:	b.eq	43b808 <ferror@plt+0x38f38>  // b.none
  43b7d8:	ldr	x21, [x19, #288]
  43b7dc:	ldr	x1, [x21]
  43b7e0:	str	x1, [x19, #288]
  43b7e4:	mov	x2, x0
  43b7e8:	mov	w1, w20
  43b7ec:	mov	x0, x19
  43b7f0:	bl	43ef90 <ferror@plt+0x3c6c0>
  43b7f4:	str	x21, [x19, #288]
  43b7f8:	ldp	x21, x22, [sp, #32]
  43b7fc:	ldp	x23, x24, [sp, #48]
  43b800:	ldp	x25, x26, [sp, #64]
  43b804:	b	43ee50 <ferror@plt+0x3c580>
  43b808:	ldr	w1, [x19, #316]
  43b80c:	bl	43aa44 <ferror@plt+0x38174>
  43b810:	cbnz	x0, 43b7d8 <ferror@plt+0x38f08>
  43b814:	mov	w0, #0x1                   	// #1
  43b818:	str	w0, [x19, #304]
  43b81c:	ldp	x21, x22, [sp, #32]
  43b820:	ldp	x23, x24, [sp, #48]
  43b824:	ldp	x25, x26, [sp, #64]
  43b828:	b	43ee50 <ferror@plt+0x3c580>
  43b82c:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43b830:	add	x21, x21, #0xb88
  43b834:	add	x24, x21, #0x1e
  43b838:	mov	x25, #0xff                  	// #255
  43b83c:	b	43b860 <ferror@plt+0x38f90>
  43b840:	ldr	x0, [x19, #256]
  43b844:	add	x1, x0, #0x1
  43b848:	str	x1, [x19, #256]
  43b84c:	strb	w23, [x19, x0]
  43b850:	strb	w23, [x19, #264]
  43b854:	add	x21, x21, #0x1
  43b858:	cmp	x21, x24
  43b85c:	b.eq	43b89c <ferror@plt+0x38fcc>  // b.none
  43b860:	ldrb	w23, [x21]
  43b864:	ldr	x0, [x19, #256]
  43b868:	cmp	x0, #0xff
  43b86c:	b.ne	43b840 <ferror@plt+0x38f70>  // b.any
  43b870:	strb	wzr, [x19, #255]
  43b874:	ldr	x3, [x19, #272]
  43b878:	ldr	x2, [x19, #280]
  43b87c:	mov	x1, x25
  43b880:	mov	x0, x19
  43b884:	blr	x3
  43b888:	str	xzr, [x19, #256]
  43b88c:	ldr	x0, [x19, #320]
  43b890:	add	x0, x0, #0x1
  43b894:	str	x0, [x19, #320]
  43b898:	b	43b840 <ferror@plt+0x38f70>
  43b89c:	ldr	x2, [x22, #8]
  43b8a0:	mov	w1, w20
  43b8a4:	mov	x0, x19
  43b8a8:	bl	43ef90 <ferror@plt+0x3c6c0>
  43b8ac:	ldp	x21, x22, [sp, #32]
  43b8b0:	ldp	x23, x24, [sp, #48]
  43b8b4:	ldp	x25, x26, [sp, #64]
  43b8b8:	b	43ee50 <ferror@plt+0x3c580>
  43b8bc:	ldr	x2, [x22, #16]
  43b8c0:	mov	w1, w20
  43b8c4:	mov	x0, x19
  43b8c8:	bl	43ef90 <ferror@plt+0x3c6c0>
  43b8cc:	ldp	x21, x22, [sp, #32]
  43b8d0:	ldp	x23, x24, [sp, #48]
  43b8d4:	ldp	x25, x26, [sp, #64]
  43b8d8:	b	43ee50 <ferror@plt+0x3c580>
  43b8dc:	ldr	x0, [x19, #256]
  43b8e0:	cmp	x0, #0xff
  43b8e4:	b.eq	43b920 <ferror@plt+0x39050>  // b.none
  43b8e8:	ldr	x1, [x19, #256]
  43b8ec:	add	x0, x1, #0x1
  43b8f0:	str	x0, [x19, #256]
  43b8f4:	mov	w0, #0x7e                  	// #126
  43b8f8:	strb	w0, [x19, x1]
  43b8fc:	strb	w0, [x19, #264]
  43b900:	ldr	x2, [x22, #16]
  43b904:	mov	w1, w20
  43b908:	mov	x0, x19
  43b90c:	bl	43ef90 <ferror@plt+0x3c6c0>
  43b910:	ldp	x21, x22, [sp, #32]
  43b914:	ldp	x23, x24, [sp, #48]
  43b918:	ldp	x25, x26, [sp, #64]
  43b91c:	b	43ee50 <ferror@plt+0x3c580>
  43b920:	strb	wzr, [x19, #255]
  43b924:	ldr	x3, [x19, #272]
  43b928:	ldr	x2, [x19, #280]
  43b92c:	mov	x1, #0xff                  	// #255
  43b930:	mov	x0, x19
  43b934:	blr	x3
  43b938:	str	xzr, [x19, #256]
  43b93c:	ldr	x0, [x19, #320]
  43b940:	add	x0, x0, #0x1
  43b944:	str	x0, [x19, #320]
  43b948:	b	43b8e8 <ferror@plt+0x39018>
  43b94c:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43b950:	add	x21, x21, #0xba8
  43b954:	add	x24, x21, #0xb
  43b958:	mov	x25, #0xff                  	// #255
  43b95c:	b	43b980 <ferror@plt+0x390b0>
  43b960:	ldr	x0, [x19, #256]
  43b964:	add	x1, x0, #0x1
  43b968:	str	x1, [x19, #256]
  43b96c:	strb	w23, [x19, x0]
  43b970:	strb	w23, [x19, #264]
  43b974:	add	x21, x21, #0x1
  43b978:	cmp	x24, x21
  43b97c:	b.eq	43b9bc <ferror@plt+0x390ec>  // b.none
  43b980:	ldrb	w23, [x21]
  43b984:	ldr	x0, [x19, #256]
  43b988:	cmp	x0, #0xff
  43b98c:	b.ne	43b960 <ferror@plt+0x39090>  // b.any
  43b990:	strb	wzr, [x19, #255]
  43b994:	ldr	x3, [x19, #272]
  43b998:	ldr	x2, [x19, #280]
  43b99c:	mov	x1, x25
  43b9a0:	mov	x0, x19
  43b9a4:	blr	x3
  43b9a8:	str	xzr, [x19, #256]
  43b9ac:	ldr	x0, [x19, #320]
  43b9b0:	add	x0, x0, #0x1
  43b9b4:	str	x0, [x19, #320]
  43b9b8:	b	43b960 <ferror@plt+0x39090>
  43b9bc:	ldr	x2, [x22, #8]
  43b9c0:	mov	w1, w20
  43b9c4:	mov	x0, x19
  43b9c8:	bl	43ef90 <ferror@plt+0x3c6c0>
  43b9cc:	ldp	x21, x22, [sp, #32]
  43b9d0:	ldp	x23, x24, [sp, #48]
  43b9d4:	ldp	x25, x26, [sp, #64]
  43b9d8:	b	43ee50 <ferror@plt+0x3c580>
  43b9dc:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43b9e0:	add	x21, x21, #0xbb8
  43b9e4:	add	x24, x21, #0x8
  43b9e8:	mov	x25, #0xff                  	// #255
  43b9ec:	b	43ba10 <ferror@plt+0x39140>
  43b9f0:	ldr	x0, [x19, #256]
  43b9f4:	add	x1, x0, #0x1
  43b9f8:	str	x1, [x19, #256]
  43b9fc:	strb	w23, [x19, x0]
  43ba00:	strb	w23, [x19, #264]
  43ba04:	add	x21, x21, #0x1
  43ba08:	cmp	x24, x21
  43ba0c:	b.eq	43ba4c <ferror@plt+0x3917c>  // b.none
  43ba10:	ldrb	w23, [x21]
  43ba14:	ldr	x0, [x19, #256]
  43ba18:	cmp	x0, #0xff
  43ba1c:	b.ne	43b9f0 <ferror@plt+0x39120>  // b.any
  43ba20:	strb	wzr, [x19, #255]
  43ba24:	ldr	x3, [x19, #272]
  43ba28:	ldr	x2, [x19, #280]
  43ba2c:	mov	x1, x25
  43ba30:	mov	x0, x19
  43ba34:	blr	x3
  43ba38:	str	xzr, [x19, #256]
  43ba3c:	ldr	x0, [x19, #320]
  43ba40:	add	x0, x0, #0x1
  43ba44:	str	x0, [x19, #320]
  43ba48:	b	43b9f0 <ferror@plt+0x39120>
  43ba4c:	ldr	x2, [x22, #8]
  43ba50:	mov	w1, w20
  43ba54:	mov	x0, x19
  43ba58:	bl	43ef90 <ferror@plt+0x3c6c0>
  43ba5c:	ldp	x21, x22, [sp, #32]
  43ba60:	ldp	x23, x24, [sp, #48]
  43ba64:	ldp	x25, x26, [sp, #64]
  43ba68:	b	43ee50 <ferror@plt+0x3c580>
  43ba6c:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43ba70:	add	x21, x21, #0xbc8
  43ba74:	add	x24, x21, #0x18
  43ba78:	mov	x25, #0xff                  	// #255
  43ba7c:	b	43baa0 <ferror@plt+0x391d0>
  43ba80:	ldr	x0, [x19, #256]
  43ba84:	add	x1, x0, #0x1
  43ba88:	str	x1, [x19, #256]
  43ba8c:	strb	w23, [x19, x0]
  43ba90:	strb	w23, [x19, #264]
  43ba94:	add	x21, x21, #0x1
  43ba98:	cmp	x24, x21
  43ba9c:	b.eq	43badc <ferror@plt+0x3920c>  // b.none
  43baa0:	ldrb	w23, [x21]
  43baa4:	ldr	x0, [x19, #256]
  43baa8:	cmp	x0, #0xff
  43baac:	b.ne	43ba80 <ferror@plt+0x391b0>  // b.any
  43bab0:	strb	wzr, [x19, #255]
  43bab4:	ldr	x3, [x19, #272]
  43bab8:	ldr	x2, [x19, #280]
  43babc:	mov	x1, x25
  43bac0:	mov	x0, x19
  43bac4:	blr	x3
  43bac8:	str	xzr, [x19, #256]
  43bacc:	ldr	x0, [x19, #320]
  43bad0:	add	x0, x0, #0x1
  43bad4:	str	x0, [x19, #320]
  43bad8:	b	43ba80 <ferror@plt+0x391b0>
  43badc:	ldr	x2, [x22, #8]
  43bae0:	mov	w1, w20
  43bae4:	mov	x0, x19
  43bae8:	bl	43ef90 <ferror@plt+0x3c6c0>
  43baec:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43baf0:	add	x21, x21, #0xbe8
  43baf4:	add	x24, x21, #0x4
  43baf8:	mov	x25, #0xff                  	// #255
  43bafc:	b	43bb20 <ferror@plt+0x39250>
  43bb00:	ldr	x0, [x19, #256]
  43bb04:	add	x1, x0, #0x1
  43bb08:	str	x1, [x19, #256]
  43bb0c:	strb	w23, [x19, x0]
  43bb10:	strb	w23, [x19, #264]
  43bb14:	add	x21, x21, #0x1
  43bb18:	cmp	x21, x24
  43bb1c:	b.eq	43bb5c <ferror@plt+0x3928c>  // b.none
  43bb20:	ldrb	w23, [x21]
  43bb24:	ldr	x0, [x19, #256]
  43bb28:	cmp	x0, #0xff
  43bb2c:	b.ne	43bb00 <ferror@plt+0x39230>  // b.any
  43bb30:	strb	wzr, [x19, #255]
  43bb34:	ldr	x3, [x19, #272]
  43bb38:	ldr	x2, [x19, #280]
  43bb3c:	mov	x1, x25
  43bb40:	mov	x0, x19
  43bb44:	blr	x3
  43bb48:	str	xzr, [x19, #256]
  43bb4c:	ldr	x0, [x19, #320]
  43bb50:	add	x0, x0, #0x1
  43bb54:	str	x0, [x19, #320]
  43bb58:	b	43bb00 <ferror@plt+0x39230>
  43bb5c:	ldr	x2, [x22, #16]
  43bb60:	mov	w1, w20
  43bb64:	mov	x0, x19
  43bb68:	bl	43ef90 <ferror@plt+0x3c6c0>
  43bb6c:	ldp	x21, x22, [sp, #32]
  43bb70:	ldp	x23, x24, [sp, #48]
  43bb74:	ldp	x25, x26, [sp, #64]
  43bb78:	b	43ee50 <ferror@plt+0x3c580>
  43bb7c:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43bb80:	add	x21, x21, #0xbf0
  43bb84:	add	x24, x21, #0xd
  43bb88:	mov	x25, #0xff                  	// #255
  43bb8c:	b	43bbb0 <ferror@plt+0x392e0>
  43bb90:	ldr	x0, [x19, #256]
  43bb94:	add	x1, x0, #0x1
  43bb98:	str	x1, [x19, #256]
  43bb9c:	strb	w23, [x19, x0]
  43bba0:	strb	w23, [x19, #264]
  43bba4:	add	x21, x21, #0x1
  43bba8:	cmp	x21, x24
  43bbac:	b.eq	43bbec <ferror@plt+0x3931c>  // b.none
  43bbb0:	ldrb	w23, [x21]
  43bbb4:	ldr	x0, [x19, #256]
  43bbb8:	cmp	x0, #0xff
  43bbbc:	b.ne	43bb90 <ferror@plt+0x392c0>  // b.any
  43bbc0:	strb	wzr, [x19, #255]
  43bbc4:	ldr	x3, [x19, #272]
  43bbc8:	ldr	x2, [x19, #280]
  43bbcc:	mov	x1, x25
  43bbd0:	mov	x0, x19
  43bbd4:	blr	x3
  43bbd8:	str	xzr, [x19, #256]
  43bbdc:	ldr	x0, [x19, #320]
  43bbe0:	add	x0, x0, #0x1
  43bbe4:	str	x0, [x19, #320]
  43bbe8:	b	43bb90 <ferror@plt+0x392c0>
  43bbec:	ldr	x2, [x22, #8]
  43bbf0:	mov	w1, w20
  43bbf4:	mov	x0, x19
  43bbf8:	bl	43ef90 <ferror@plt+0x3c6c0>
  43bbfc:	ldp	x21, x22, [sp, #32]
  43bc00:	ldp	x23, x24, [sp, #48]
  43bc04:	ldp	x25, x26, [sp, #64]
  43bc08:	b	43ee50 <ferror@plt+0x3c580>
  43bc0c:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43bc10:	add	x21, x21, #0xc00
  43bc14:	add	x24, x21, #0x12
  43bc18:	mov	x25, #0xff                  	// #255
  43bc1c:	b	43bc40 <ferror@plt+0x39370>
  43bc20:	ldr	x0, [x19, #256]
  43bc24:	add	x1, x0, #0x1
  43bc28:	str	x1, [x19, #256]
  43bc2c:	strb	w23, [x19, x0]
  43bc30:	strb	w23, [x19, #264]
  43bc34:	add	x21, x21, #0x1
  43bc38:	cmp	x24, x21
  43bc3c:	b.eq	43bc7c <ferror@plt+0x393ac>  // b.none
  43bc40:	ldrb	w23, [x21]
  43bc44:	ldr	x0, [x19, #256]
  43bc48:	cmp	x0, #0xff
  43bc4c:	b.ne	43bc20 <ferror@plt+0x39350>  // b.any
  43bc50:	strb	wzr, [x19, #255]
  43bc54:	ldr	x3, [x19, #272]
  43bc58:	ldr	x2, [x19, #280]
  43bc5c:	mov	x1, x25
  43bc60:	mov	x0, x19
  43bc64:	blr	x3
  43bc68:	str	xzr, [x19, #256]
  43bc6c:	ldr	x0, [x19, #320]
  43bc70:	add	x0, x0, #0x1
  43bc74:	str	x0, [x19, #320]
  43bc78:	b	43bc20 <ferror@plt+0x39350>
  43bc7c:	ldr	x2, [x22, #8]
  43bc80:	mov	w1, w20
  43bc84:	mov	x0, x19
  43bc88:	bl	43ef90 <ferror@plt+0x3c6c0>
  43bc8c:	ldp	x21, x22, [sp, #32]
  43bc90:	ldp	x23, x24, [sp, #48]
  43bc94:	ldp	x25, x26, [sp, #64]
  43bc98:	b	43ee50 <ferror@plt+0x3c580>
  43bc9c:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43bca0:	add	x21, x21, #0xc18
  43bca4:	add	x24, x21, #0x10
  43bca8:	mov	x25, #0xff                  	// #255
  43bcac:	b	43bcd0 <ferror@plt+0x39400>
  43bcb0:	ldr	x0, [x19, #256]
  43bcb4:	add	x1, x0, #0x1
  43bcb8:	str	x1, [x19, #256]
  43bcbc:	strb	w23, [x19, x0]
  43bcc0:	strb	w23, [x19, #264]
  43bcc4:	add	x21, x21, #0x1
  43bcc8:	cmp	x21, x24
  43bccc:	b.eq	43bd0c <ferror@plt+0x3943c>  // b.none
  43bcd0:	ldrb	w23, [x21]
  43bcd4:	ldr	x0, [x19, #256]
  43bcd8:	cmp	x0, #0xff
  43bcdc:	b.ne	43bcb0 <ferror@plt+0x393e0>  // b.any
  43bce0:	strb	wzr, [x19, #255]
  43bce4:	ldr	x3, [x19, #272]
  43bce8:	ldr	x2, [x19, #280]
  43bcec:	mov	x1, x25
  43bcf0:	mov	x0, x19
  43bcf4:	blr	x3
  43bcf8:	str	xzr, [x19, #256]
  43bcfc:	ldr	x0, [x19, #320]
  43bd00:	add	x0, x0, #0x1
  43bd04:	str	x0, [x19, #320]
  43bd08:	b	43bcb0 <ferror@plt+0x393e0>
  43bd0c:	ldr	x2, [x22, #8]
  43bd10:	mov	w1, w20
  43bd14:	mov	x0, x19
  43bd18:	bl	43ef90 <ferror@plt+0x3c6c0>
  43bd1c:	ldp	x21, x22, [sp, #32]
  43bd20:	ldp	x23, x24, [sp, #48]
  43bd24:	ldp	x25, x26, [sp, #64]
  43bd28:	b	43ee50 <ferror@plt+0x3c580>
  43bd2c:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43bd30:	add	x21, x21, #0xc30
  43bd34:	add	x24, x21, #0x15
  43bd38:	mov	x25, #0xff                  	// #255
  43bd3c:	b	43bd60 <ferror@plt+0x39490>
  43bd40:	ldr	x0, [x19, #256]
  43bd44:	add	x1, x0, #0x1
  43bd48:	str	x1, [x19, #256]
  43bd4c:	strb	w23, [x19, x0]
  43bd50:	strb	w23, [x19, #264]
  43bd54:	add	x21, x21, #0x1
  43bd58:	cmp	x24, x21
  43bd5c:	b.eq	43bd9c <ferror@plt+0x394cc>  // b.none
  43bd60:	ldrb	w23, [x21]
  43bd64:	ldr	x0, [x19, #256]
  43bd68:	cmp	x0, #0xff
  43bd6c:	b.ne	43bd40 <ferror@plt+0x39470>  // b.any
  43bd70:	strb	wzr, [x19, #255]
  43bd74:	ldr	x3, [x19, #272]
  43bd78:	ldr	x2, [x19, #280]
  43bd7c:	mov	x1, x25
  43bd80:	mov	x0, x19
  43bd84:	blr	x3
  43bd88:	str	xzr, [x19, #256]
  43bd8c:	ldr	x0, [x19, #320]
  43bd90:	add	x0, x0, #0x1
  43bd94:	str	x0, [x19, #320]
  43bd98:	b	43bd40 <ferror@plt+0x39470>
  43bd9c:	ldr	x2, [x22, #8]
  43bda0:	mov	w1, w20
  43bda4:	mov	x0, x19
  43bda8:	bl	43ef90 <ferror@plt+0x3c6c0>
  43bdac:	ldp	x21, x22, [sp, #32]
  43bdb0:	ldp	x23, x24, [sp, #48]
  43bdb4:	ldp	x25, x26, [sp, #64]
  43bdb8:	b	43ee50 <ferror@plt+0x3c580>
  43bdbc:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43bdc0:	add	x21, x21, #0xc48
  43bdc4:	add	x24, x21, #0x11
  43bdc8:	mov	x25, #0xff                  	// #255
  43bdcc:	b	43bdf0 <ferror@plt+0x39520>
  43bdd0:	ldr	x0, [x19, #256]
  43bdd4:	add	x1, x0, #0x1
  43bdd8:	str	x1, [x19, #256]
  43bddc:	strb	w23, [x19, x0]
  43bde0:	strb	w23, [x19, #264]
  43bde4:	add	x21, x21, #0x1
  43bde8:	cmp	x24, x21
  43bdec:	b.eq	43be2c <ferror@plt+0x3955c>  // b.none
  43bdf0:	ldrb	w23, [x21]
  43bdf4:	ldr	x0, [x19, #256]
  43bdf8:	cmp	x0, #0xff
  43bdfc:	b.ne	43bdd0 <ferror@plt+0x39500>  // b.any
  43be00:	strb	wzr, [x19, #255]
  43be04:	ldr	x3, [x19, #272]
  43be08:	ldr	x2, [x19, #280]
  43be0c:	mov	x1, x25
  43be10:	mov	x0, x19
  43be14:	blr	x3
  43be18:	str	xzr, [x19, #256]
  43be1c:	ldr	x0, [x19, #320]
  43be20:	add	x0, x0, #0x1
  43be24:	str	x0, [x19, #320]
  43be28:	b	43bdd0 <ferror@plt+0x39500>
  43be2c:	ldr	x2, [x22, #8]
  43be30:	mov	w1, w20
  43be34:	mov	x0, x19
  43be38:	bl	43ef90 <ferror@plt+0x3c6c0>
  43be3c:	ldp	x21, x22, [sp, #32]
  43be40:	ldp	x23, x24, [sp, #48]
  43be44:	ldp	x25, x26, [sp, #64]
  43be48:	b	43ee50 <ferror@plt+0x3c580>
  43be4c:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43be50:	add	x21, x21, #0xc60
  43be54:	add	x24, x21, #0x1a
  43be58:	mov	x25, #0xff                  	// #255
  43be5c:	b	43be80 <ferror@plt+0x395b0>
  43be60:	ldr	x0, [x19, #256]
  43be64:	add	x1, x0, #0x1
  43be68:	str	x1, [x19, #256]
  43be6c:	strb	w23, [x19, x0]
  43be70:	strb	w23, [x19, #264]
  43be74:	add	x21, x21, #0x1
  43be78:	cmp	x24, x21
  43be7c:	b.eq	43bebc <ferror@plt+0x395ec>  // b.none
  43be80:	ldrb	w23, [x21]
  43be84:	ldr	x0, [x19, #256]
  43be88:	cmp	x0, #0xff
  43be8c:	b.ne	43be60 <ferror@plt+0x39590>  // b.any
  43be90:	strb	wzr, [x19, #255]
  43be94:	ldr	x3, [x19, #272]
  43be98:	ldr	x2, [x19, #280]
  43be9c:	mov	x1, x25
  43bea0:	mov	x0, x19
  43bea4:	blr	x3
  43bea8:	str	xzr, [x19, #256]
  43beac:	ldr	x0, [x19, #320]
  43beb0:	add	x0, x0, #0x1
  43beb4:	str	x0, [x19, #320]
  43beb8:	b	43be60 <ferror@plt+0x39590>
  43bebc:	ldr	x2, [x22, #8]
  43bec0:	mov	w1, w20
  43bec4:	mov	x0, x19
  43bec8:	bl	43ef90 <ferror@plt+0x3c6c0>
  43becc:	ldp	x21, x22, [sp, #32]
  43bed0:	ldp	x23, x24, [sp, #48]
  43bed4:	ldp	x25, x26, [sp, #64]
  43bed8:	b	43ee50 <ferror@plt+0x3c580>
  43bedc:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43bee0:	add	x21, x21, #0xc80
  43bee4:	add	x24, x21, #0xf
  43bee8:	mov	x25, #0xff                  	// #255
  43beec:	b	43bf10 <ferror@plt+0x39640>
  43bef0:	ldr	x0, [x19, #256]
  43bef4:	add	x1, x0, #0x1
  43bef8:	str	x1, [x19, #256]
  43befc:	strb	w23, [x19, x0]
  43bf00:	strb	w23, [x19, #264]
  43bf04:	add	x21, x21, #0x1
  43bf08:	cmp	x24, x21
  43bf0c:	b.eq	43bf4c <ferror@plt+0x3967c>  // b.none
  43bf10:	ldrb	w23, [x21]
  43bf14:	ldr	x0, [x19, #256]
  43bf18:	cmp	x0, #0xff
  43bf1c:	b.ne	43bef0 <ferror@plt+0x39620>  // b.any
  43bf20:	strb	wzr, [x19, #255]
  43bf24:	ldr	x3, [x19, #272]
  43bf28:	ldr	x2, [x19, #280]
  43bf2c:	mov	x1, x25
  43bf30:	mov	x0, x19
  43bf34:	blr	x3
  43bf38:	str	xzr, [x19, #256]
  43bf3c:	ldr	x0, [x19, #320]
  43bf40:	add	x0, x0, #0x1
  43bf44:	str	x0, [x19, #320]
  43bf48:	b	43bef0 <ferror@plt+0x39620>
  43bf4c:	ldr	x2, [x22, #8]
  43bf50:	mov	w1, w20
  43bf54:	mov	x0, x19
  43bf58:	bl	43ef90 <ferror@plt+0x3c6c0>
  43bf5c:	ldp	x21, x22, [sp, #32]
  43bf60:	ldp	x23, x24, [sp, #48]
  43bf64:	ldp	x25, x26, [sp, #64]
  43bf68:	b	43ee50 <ferror@plt+0x3c580>
  43bf6c:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43bf70:	add	x21, x21, #0xc90
  43bf74:	add	x24, x21, #0x13
  43bf78:	mov	x25, #0xff                  	// #255
  43bf7c:	b	43bfa0 <ferror@plt+0x396d0>
  43bf80:	ldr	x0, [x19, #256]
  43bf84:	add	x1, x0, #0x1
  43bf88:	str	x1, [x19, #256]
  43bf8c:	strb	w23, [x19, x0]
  43bf90:	strb	w23, [x19, #264]
  43bf94:	add	x21, x21, #0x1
  43bf98:	cmp	x24, x21
  43bf9c:	b.eq	43bfdc <ferror@plt+0x3970c>  // b.none
  43bfa0:	ldrb	w23, [x21]
  43bfa4:	ldr	x0, [x19, #256]
  43bfa8:	cmp	x0, #0xff
  43bfac:	b.ne	43bf80 <ferror@plt+0x396b0>  // b.any
  43bfb0:	strb	wzr, [x19, #255]
  43bfb4:	ldr	x3, [x19, #272]
  43bfb8:	ldr	x2, [x19, #280]
  43bfbc:	mov	x1, x25
  43bfc0:	mov	x0, x19
  43bfc4:	blr	x3
  43bfc8:	str	xzr, [x19, #256]
  43bfcc:	ldr	x0, [x19, #320]
  43bfd0:	add	x0, x0, #0x1
  43bfd4:	str	x0, [x19, #320]
  43bfd8:	b	43bf80 <ferror@plt+0x396b0>
  43bfdc:	ldr	x2, [x22, #8]
  43bfe0:	mov	w1, w20
  43bfe4:	mov	x0, x19
  43bfe8:	bl	43ef90 <ferror@plt+0x3c6c0>
  43bfec:	ldp	x21, x22, [sp, #32]
  43bff0:	ldp	x23, x24, [sp, #48]
  43bff4:	ldp	x25, x26, [sp, #64]
  43bff8:	b	43ee50 <ferror@plt+0x3c580>
  43bffc:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43c000:	add	x21, x21, #0xca8
  43c004:	add	x24, x21, #0x16
  43c008:	mov	x25, #0xff                  	// #255
  43c00c:	b	43c030 <ferror@plt+0x39760>
  43c010:	ldr	x0, [x19, #256]
  43c014:	add	x1, x0, #0x1
  43c018:	str	x1, [x19, #256]
  43c01c:	strb	w23, [x19, x0]
  43c020:	strb	w23, [x19, #264]
  43c024:	add	x21, x21, #0x1
  43c028:	cmp	x24, x21
  43c02c:	b.eq	43c06c <ferror@plt+0x3979c>  // b.none
  43c030:	ldrb	w23, [x21]
  43c034:	ldr	x0, [x19, #256]
  43c038:	cmp	x0, #0xff
  43c03c:	b.ne	43c010 <ferror@plt+0x39740>  // b.any
  43c040:	strb	wzr, [x19, #255]
  43c044:	ldr	x3, [x19, #272]
  43c048:	ldr	x2, [x19, #280]
  43c04c:	mov	x1, x25
  43c050:	mov	x0, x19
  43c054:	blr	x3
  43c058:	str	xzr, [x19, #256]
  43c05c:	ldr	x0, [x19, #320]
  43c060:	add	x0, x0, #0x1
  43c064:	str	x0, [x19, #320]
  43c068:	b	43c010 <ferror@plt+0x39740>
  43c06c:	ldr	x2, [x22, #8]
  43c070:	mov	w1, w20
  43c074:	mov	x0, x19
  43c078:	bl	43ef90 <ferror@plt+0x3c6c0>
  43c07c:	ldp	x21, x22, [sp, #32]
  43c080:	ldp	x23, x24, [sp, #48]
  43c084:	ldp	x25, x26, [sp, #64]
  43c088:	b	43ee50 <ferror@plt+0x3c580>
  43c08c:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43c090:	add	x21, x21, #0xcc0
  43c094:	add	x24, x21, #0x19
  43c098:	mov	x25, #0xff                  	// #255
  43c09c:	b	43c0c0 <ferror@plt+0x397f0>
  43c0a0:	ldr	x0, [x19, #256]
  43c0a4:	add	x1, x0, #0x1
  43c0a8:	str	x1, [x19, #256]
  43c0ac:	strb	w23, [x19, x0]
  43c0b0:	strb	w23, [x19, #264]
  43c0b4:	add	x21, x21, #0x1
  43c0b8:	cmp	x21, x24
  43c0bc:	b.eq	43c0fc <ferror@plt+0x3982c>  // b.none
  43c0c0:	ldrb	w23, [x21]
  43c0c4:	ldr	x0, [x19, #256]
  43c0c8:	cmp	x0, #0xff
  43c0cc:	b.ne	43c0a0 <ferror@plt+0x397d0>  // b.any
  43c0d0:	strb	wzr, [x19, #255]
  43c0d4:	ldr	x3, [x19, #272]
  43c0d8:	ldr	x2, [x19, #280]
  43c0dc:	mov	x1, x25
  43c0e0:	mov	x0, x19
  43c0e4:	blr	x3
  43c0e8:	str	xzr, [x19, #256]
  43c0ec:	ldr	x0, [x19, #320]
  43c0f0:	add	x0, x0, #0x1
  43c0f4:	str	x0, [x19, #320]
  43c0f8:	b	43c0a0 <ferror@plt+0x397d0>
  43c0fc:	ldr	x2, [x22, #8]
  43c100:	mov	w1, w20
  43c104:	mov	x0, x19
  43c108:	bl	43ef90 <ferror@plt+0x3c6c0>
  43c10c:	ldp	x21, x22, [sp, #32]
  43c110:	ldp	x23, x24, [sp, #48]
  43c114:	ldp	x25, x26, [sp, #64]
  43c118:	b	43ee50 <ferror@plt+0x3c580>
  43c11c:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43c120:	add	x21, x21, #0xce0
  43c124:	add	x24, x21, #0x15
  43c128:	mov	x25, #0xff                  	// #255
  43c12c:	b	43c150 <ferror@plt+0x39880>
  43c130:	ldr	x0, [x19, #256]
  43c134:	add	x1, x0, #0x1
  43c138:	str	x1, [x19, #256]
  43c13c:	strb	w23, [x19, x0]
  43c140:	strb	w23, [x19, #264]
  43c144:	add	x21, x21, #0x1
  43c148:	cmp	x24, x21
  43c14c:	b.eq	43c18c <ferror@plt+0x398bc>  // b.none
  43c150:	ldrb	w23, [x21]
  43c154:	ldr	x0, [x19, #256]
  43c158:	cmp	x0, #0xff
  43c15c:	b.ne	43c130 <ferror@plt+0x39860>  // b.any
  43c160:	strb	wzr, [x19, #255]
  43c164:	ldr	x3, [x19, #272]
  43c168:	ldr	x2, [x19, #280]
  43c16c:	mov	x1, x25
  43c170:	mov	x0, x19
  43c174:	blr	x3
  43c178:	str	xzr, [x19, #256]
  43c17c:	ldr	x0, [x19, #320]
  43c180:	add	x0, x0, #0x1
  43c184:	str	x0, [x19, #320]
  43c188:	b	43c130 <ferror@plt+0x39860>
  43c18c:	ldr	x2, [x22, #16]
  43c190:	mov	w1, w20
  43c194:	mov	x0, x19
  43c198:	bl	43ef90 <ferror@plt+0x3c6c0>
  43c19c:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43c1a0:	add	x21, x21, #0xbf8
  43c1a4:	add	x24, x21, #0x5
  43c1a8:	mov	x25, #0xff                  	// #255
  43c1ac:	b	43c1d0 <ferror@plt+0x39900>
  43c1b0:	ldr	x0, [x19, #256]
  43c1b4:	add	x1, x0, #0x1
  43c1b8:	str	x1, [x19, #256]
  43c1bc:	strb	w23, [x19, x0]
  43c1c0:	strb	w23, [x19, #264]
  43c1c4:	add	x21, x21, #0x1
  43c1c8:	cmp	x24, x21
  43c1cc:	b.eq	43c20c <ferror@plt+0x3993c>  // b.none
  43c1d0:	ldrb	w23, [x21]
  43c1d4:	ldr	x0, [x19, #256]
  43c1d8:	cmp	x0, #0xff
  43c1dc:	b.ne	43c1b0 <ferror@plt+0x398e0>  // b.any
  43c1e0:	strb	wzr, [x19, #255]
  43c1e4:	ldr	x3, [x19, #272]
  43c1e8:	ldr	x2, [x19, #280]
  43c1ec:	mov	x1, x25
  43c1f0:	mov	x0, x19
  43c1f4:	blr	x3
  43c1f8:	str	xzr, [x19, #256]
  43c1fc:	ldr	x0, [x19, #320]
  43c200:	add	x0, x0, #0x1
  43c204:	str	x0, [x19, #320]
  43c208:	b	43c1b0 <ferror@plt+0x398e0>
  43c20c:	ldr	x2, [x22, #8]
  43c210:	mov	w1, w20
  43c214:	mov	x0, x19
  43c218:	bl	43ef90 <ferror@plt+0x3c6c0>
  43c21c:	ldp	x21, x22, [sp, #32]
  43c220:	ldp	x23, x24, [sp, #48]
  43c224:	ldp	x25, x26, [sp, #64]
  43c228:	b	43ee50 <ferror@plt+0x3c580>
  43c22c:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43c230:	add	x21, x21, #0xcf8
  43c234:	add	x24, x21, #0x11
  43c238:	mov	x25, #0xff                  	// #255
  43c23c:	b	43c260 <ferror@plt+0x39990>
  43c240:	ldr	x0, [x19, #256]
  43c244:	add	x1, x0, #0x1
  43c248:	str	x1, [x19, #256]
  43c24c:	strb	w23, [x19, x0]
  43c250:	strb	w23, [x19, #264]
  43c254:	add	x21, x21, #0x1
  43c258:	cmp	x21, x24
  43c25c:	b.eq	43c29c <ferror@plt+0x399cc>  // b.none
  43c260:	ldrb	w23, [x21]
  43c264:	ldr	x0, [x19, #256]
  43c268:	cmp	x0, #0xff
  43c26c:	b.ne	43c240 <ferror@plt+0x39970>  // b.any
  43c270:	strb	wzr, [x19, #255]
  43c274:	ldr	x3, [x19, #272]
  43c278:	ldr	x2, [x19, #280]
  43c27c:	mov	x1, x25
  43c280:	mov	x0, x19
  43c284:	blr	x3
  43c288:	str	xzr, [x19, #256]
  43c28c:	ldr	x0, [x19, #320]
  43c290:	add	x0, x0, #0x1
  43c294:	str	x0, [x19, #320]
  43c298:	b	43c240 <ferror@plt+0x39970>
  43c29c:	ldr	x2, [x22, #8]
  43c2a0:	mov	w1, w20
  43c2a4:	mov	x0, x19
  43c2a8:	bl	43ef90 <ferror@plt+0x3c6c0>
  43c2ac:	ldp	x21, x22, [sp, #32]
  43c2b0:	ldp	x23, x24, [sp, #48]
  43c2b4:	ldp	x25, x26, [sp, #64]
  43c2b8:	b	43ee50 <ferror@plt+0x3c580>
  43c2bc:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43c2c0:	add	x21, x21, #0xd10
  43c2c4:	add	x24, x21, #0x16
  43c2c8:	mov	x25, #0xff                  	// #255
  43c2cc:	b	43c2f0 <ferror@plt+0x39a20>
  43c2d0:	ldr	x0, [x19, #256]
  43c2d4:	add	x1, x0, #0x1
  43c2d8:	str	x1, [x19, #256]
  43c2dc:	strb	w23, [x19, x0]
  43c2e0:	strb	w23, [x19, #264]
  43c2e4:	add	x21, x21, #0x1
  43c2e8:	cmp	x21, x24
  43c2ec:	b.eq	43c32c <ferror@plt+0x39a5c>  // b.none
  43c2f0:	ldrb	w23, [x21]
  43c2f4:	ldr	x0, [x19, #256]
  43c2f8:	cmp	x0, #0xff
  43c2fc:	b.ne	43c2d0 <ferror@plt+0x39a00>  // b.any
  43c300:	strb	wzr, [x19, #255]
  43c304:	ldr	x3, [x19, #272]
  43c308:	ldr	x2, [x19, #280]
  43c30c:	mov	x1, x25
  43c310:	mov	x0, x19
  43c314:	blr	x3
  43c318:	str	xzr, [x19, #256]
  43c31c:	ldr	x0, [x19, #320]
  43c320:	add	x0, x0, #0x1
  43c324:	str	x0, [x19, #320]
  43c328:	b	43c2d0 <ferror@plt+0x39a00>
  43c32c:	ldr	x2, [x22, #8]
  43c330:	mov	w1, w20
  43c334:	mov	x0, x19
  43c338:	bl	43ef90 <ferror@plt+0x3c6c0>
  43c33c:	ldp	x21, x22, [sp, #32]
  43c340:	ldp	x23, x24, [sp, #48]
  43c344:	ldp	x25, x26, [sp, #64]
  43c348:	b	43ee50 <ferror@plt+0x3c580>
  43c34c:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43c350:	add	x21, x21, #0xd28
  43c354:	add	x24, x21, #0x1a
  43c358:	mov	x25, #0xff                  	// #255
  43c35c:	b	43c380 <ferror@plt+0x39ab0>
  43c360:	ldr	x0, [x19, #256]
  43c364:	add	x1, x0, #0x1
  43c368:	str	x1, [x19, #256]
  43c36c:	strb	w23, [x19, x0]
  43c370:	strb	w23, [x19, #264]
  43c374:	add	x21, x21, #0x1
  43c378:	cmp	x21, x24
  43c37c:	b.eq	43c3bc <ferror@plt+0x39aec>  // b.none
  43c380:	ldrb	w23, [x21]
  43c384:	ldr	x0, [x19, #256]
  43c388:	cmp	x0, #0xff
  43c38c:	b.ne	43c360 <ferror@plt+0x39a90>  // b.any
  43c390:	strb	wzr, [x19, #255]
  43c394:	ldr	x3, [x19, #272]
  43c398:	ldr	x2, [x19, #280]
  43c39c:	mov	x1, x25
  43c3a0:	mov	x0, x19
  43c3a4:	blr	x3
  43c3a8:	str	xzr, [x19, #256]
  43c3ac:	ldr	x0, [x19, #320]
  43c3b0:	add	x0, x0, #0x1
  43c3b4:	str	x0, [x19, #320]
  43c3b8:	b	43c360 <ferror@plt+0x39a90>
  43c3bc:	ldr	x2, [x22, #8]
  43c3c0:	mov	w1, w20
  43c3c4:	mov	x0, x19
  43c3c8:	bl	43ef90 <ferror@plt+0x3c6c0>
  43c3cc:	ldp	x21, x22, [sp, #32]
  43c3d0:	ldp	x23, x24, [sp, #48]
  43c3d4:	ldp	x25, x26, [sp, #64]
  43c3d8:	b	43ee50 <ferror@plt+0x3c580>
  43c3dc:	ldr	x1, [x22, #8]
  43c3e0:	ldrsw	x0, [x22, #16]
  43c3e4:	cbz	x0, 43ee8c <ferror@plt+0x3c5bc>
  43c3e8:	mov	x20, x1
  43c3ec:	add	x22, x1, x0
  43c3f0:	mov	x23, #0xff                  	// #255
  43c3f4:	b	43c418 <ferror@plt+0x39b48>
  43c3f8:	ldr	x0, [x19, #256]
  43c3fc:	add	x1, x0, #0x1
  43c400:	str	x1, [x19, #256]
  43c404:	strb	w21, [x19, x0]
  43c408:	strb	w21, [x19, #264]
  43c40c:	add	x20, x20, #0x1
  43c410:	cmp	x20, x22
  43c414:	b.eq	43c454 <ferror@plt+0x39b84>  // b.none
  43c418:	ldrb	w21, [x20]
  43c41c:	ldr	x0, [x19, #256]
  43c420:	cmp	x0, #0xff
  43c424:	b.ne	43c3f8 <ferror@plt+0x39b28>  // b.any
  43c428:	strb	wzr, [x19, #255]
  43c42c:	ldr	x3, [x19, #272]
  43c430:	ldr	x2, [x19, #280]
  43c434:	mov	x1, x23
  43c438:	mov	x0, x19
  43c43c:	blr	x3
  43c440:	str	xzr, [x19, #256]
  43c444:	ldr	x0, [x19, #320]
  43c448:	add	x0, x0, #0x1
  43c44c:	str	x0, [x19, #320]
  43c450:	b	43c3f8 <ferror@plt+0x39b28>
  43c454:	ldp	x21, x22, [sp, #32]
  43c458:	ldp	x23, x24, [sp, #48]
  43c45c:	ldp	x25, x26, [sp, #64]
  43c460:	b	43ee50 <ferror@plt+0x3c580>
  43c464:	ldr	x1, [x19, #296]
  43c468:	cbnz	x1, 43c478 <ferror@plt+0x39ba8>
  43c46c:	b	43edcc <ferror@plt+0x3c4fc>
  43c470:	ldr	x1, [x1]
  43c474:	cbz	x1, 43edcc <ferror@plt+0x3c4fc>
  43c478:	ldr	w2, [x1, #16]
  43c47c:	cbnz	w2, 43c470 <ferror@plt+0x39ba0>
  43c480:	ldr	x3, [x1, #8]
  43c484:	ldr	w3, [x3]
  43c488:	sub	w4, w3, #0x19
  43c48c:	cmp	w4, #0x2
  43c490:	b.hi	43edc0 <ferror@plt+0x3c4f0>  // b.pmore
  43c494:	cmp	w0, w3
  43c498:	b.ne	43c470 <ferror@plt+0x39ba0>  // b.any
  43c49c:	ldr	x2, [x22, #8]
  43c4a0:	mov	w1, w20
  43c4a4:	mov	x0, x19
  43c4a8:	bl	43ef90 <ferror@plt+0x3c6c0>
  43c4ac:	ldp	x21, x22, [sp, #32]
  43c4b0:	ldp	x23, x24, [sp, #48]
  43c4b4:	ldp	x25, x26, [sp, #64]
  43c4b8:	b	43ee50 <ferror@plt+0x3c580>
  43c4bc:	ldr	x0, [x22, #8]
  43c4c0:	ldr	w24, [x19, #312]
  43c4c4:	cbnz	w24, 43c4d8 <ferror@plt+0x39c08>
  43c4c8:	ldr	w1, [x0]
  43c4cc:	mov	w21, w24
  43c4d0:	cmp	w1, #0x5
  43c4d4:	b.eq	43c500 <ferror@plt+0x39c30>  // b.none
  43c4d8:	ldr	w1, [x0]
  43c4dc:	cmp	w1, #0x23
  43c4e0:	b.eq	43edc8 <ferror@plt+0x3c4f8>  // b.none
  43c4e4:	ldr	w2, [x22]
  43c4e8:	cmp	w1, w2
  43c4ec:	b.eq	43edf4 <ferror@plt+0x3c524>  // b.none
  43c4f0:	cmp	w1, #0x24
  43c4f4:	b.ne	43edcc <ferror@plt+0x3c4fc>  // b.any
  43c4f8:	ldr	x2, [x0, #8]
  43c4fc:	b	43c63c <ferror@plt+0x39d6c>
  43c500:	ldr	w5, [x19, #344]
  43c504:	cmp	w5, #0x0
  43c508:	b.le	43c538 <ferror@plt+0x39c68>
  43c50c:	ldr	x1, [x19, #336]
  43c510:	sub	w3, w5, #0x1
  43c514:	add	x2, x1, #0x10
  43c518:	add	x3, x2, x3, lsl #4
  43c51c:	mov	x4, x1
  43c520:	ldr	x2, [x1]
  43c524:	cmp	x0, x2
  43c528:	b.eq	43edfc <ferror@plt+0x3c52c>  // b.none
  43c52c:	add	x1, x1, #0x10
  43c530:	cmp	x1, x3
  43c534:	b.ne	43c51c <ferror@plt+0x39c4c>  // b.any
  43c538:	ldr	w1, [x19, #348]
  43c53c:	cmp	w1, w5
  43c540:	b.le	43c5f8 <ferror@plt+0x39d28>
  43c544:	sbfiz	x3, x5, #4, #32
  43c548:	ldr	x2, [x19, #336]
  43c54c:	add	x1, x2, w5, sxtw #4
  43c550:	add	w5, w5, #0x1
  43c554:	str	w5, [x19, #344]
  43c558:	str	x0, [x2, x3]
  43c55c:	add	x1, x1, #0x8
  43c560:	ldr	x2, [x19, #288]
  43c564:	cbz	x2, 43c5a0 <ferror@plt+0x39cd0>
  43c568:	ldr	w4, [x19, #360]
  43c56c:	ldr	w3, [x19, #364]
  43c570:	cmp	w4, w3
  43c574:	b.ge	43c610 <ferror@plt+0x39d40>  // b.tcont
  43c578:	ldr	x3, [x19, #352]
  43c57c:	add	x3, x3, w4, sxtw #4
  43c580:	add	w4, w4, #0x1
  43c584:	str	w4, [x19, #360]
  43c588:	ldr	x4, [x2, #8]
  43c58c:	str	x4, [x3, #8]
  43c590:	str	x3, [x1]
  43c594:	mov	x1, x3
  43c598:	ldr	x2, [x2]
  43c59c:	cbnz	x2, 43c568 <ferror@plt+0x39c98>
  43c5a0:	str	xzr, [x1]
  43c5a4:	ldr	w1, [x19, #304]
  43c5a8:	cbnz	w1, 43c628 <ferror@plt+0x39d58>
  43c5ac:	mov	x1, x0
  43c5b0:	mov	x0, x19
  43c5b4:	bl	43aa7c <ferror@plt+0x381ac>
  43c5b8:	cbz	x0, 43c5e0 <ferror@plt+0x39d10>
  43c5bc:	mov	w21, w24
  43c5c0:	ldr	w1, [x0]
  43c5c4:	cmp	w1, #0x2f
  43c5c8:	b.ne	43c4d8 <ferror@plt+0x39c08>  // b.any
  43c5cc:	ldr	w1, [x19, #316]
  43c5d0:	bl	43aa44 <ferror@plt+0x38174>
  43c5d4:	cbnz	x0, 43c4d8 <ferror@plt+0x39c08>
  43c5d8:	cbz	w21, 43c5e0 <ferror@plt+0x39d10>
  43c5dc:	str	x23, [x19, #288]
  43c5e0:	mov	w0, #0x1                   	// #1
  43c5e4:	str	w0, [x19, #304]
  43c5e8:	ldp	x21, x22, [sp, #32]
  43c5ec:	ldp	x23, x24, [sp, #48]
  43c5f0:	ldp	x25, x26, [sp, #64]
  43c5f4:	b	43ee50 <ferror@plt+0x3c580>
  43c5f8:	mov	w0, #0x1                   	// #1
  43c5fc:	str	w0, [x19, #304]
  43c600:	ldp	x21, x22, [sp, #32]
  43c604:	ldp	x23, x24, [sp, #48]
  43c608:	ldp	x25, x26, [sp, #64]
  43c60c:	b	43ee50 <ferror@plt+0x3c580>
  43c610:	mov	w0, #0x1                   	// #1
  43c614:	str	w0, [x19, #304]
  43c618:	ldp	x21, x22, [sp, #32]
  43c61c:	ldp	x23, x24, [sp, #48]
  43c620:	ldp	x25, x26, [sp, #64]
  43c624:	b	43ee50 <ferror@plt+0x3c580>
  43c628:	ldp	x21, x22, [sp, #32]
  43c62c:	ldp	x23, x24, [sp, #48]
  43c630:	ldp	x25, x26, [sp, #64]
  43c634:	b	43ee50 <ferror@plt+0x3c580>
  43c638:	mov	x2, #0x0                   	// #0
  43c63c:	ldr	x0, [x19, #296]
  43c640:	str	x0, [sp, #112]
  43c644:	add	x0, sp, #0x70
  43c648:	str	x0, [x19, #296]
  43c64c:	str	x22, [sp, #120]
  43c650:	str	wzr, [sp, #128]
  43c654:	ldr	x0, [x19, #288]
  43c658:	str	x0, [sp, #136]
  43c65c:	cbz	x2, 43edec <ferror@plt+0x3c51c>
  43c660:	mov	w1, w20
  43c664:	mov	x0, x19
  43c668:	bl	43ef90 <ferror@plt+0x3c6c0>
  43c66c:	ldr	w0, [sp, #128]
  43c670:	cbz	w0, 43c694 <ferror@plt+0x39dc4>
  43c674:	ldr	x0, [sp, #112]
  43c678:	str	x0, [x19, #296]
  43c67c:	cbz	w21, 43ee9c <ferror@plt+0x3c5cc>
  43c680:	str	x23, [x19, #288]
  43c684:	ldp	x21, x22, [sp, #32]
  43c688:	ldp	x23, x24, [sp, #48]
  43c68c:	ldp	x25, x26, [sp, #64]
  43c690:	b	43ee50 <ferror@plt+0x3c580>
  43c694:	mov	x2, x22
  43c698:	mov	w1, w20
  43c69c:	mov	x0, x19
  43c6a0:	bl	43f02c <ferror@plt+0x3c75c>
  43c6a4:	b	43c674 <ferror@plt+0x39da4>
  43c6a8:	tbnz	w20, #2, 43c738 <ferror@plt+0x39e68>
  43c6ac:	ldr	x0, [x22, #8]
  43c6b0:	ldr	x22, [x0]
  43c6b4:	ldrsw	x0, [x0, #8]
  43c6b8:	cbz	x0, 43eeac <ferror@plt+0x3c5dc>
  43c6bc:	mov	x20, x22
  43c6c0:	add	x22, x22, x0
  43c6c4:	mov	x23, #0xff                  	// #255
  43c6c8:	b	43c6ec <ferror@plt+0x39e1c>
  43c6cc:	ldr	x0, [x19, #256]
  43c6d0:	add	x1, x0, #0x1
  43c6d4:	str	x1, [x19, #256]
  43c6d8:	strb	w21, [x19, x0]
  43c6dc:	strb	w21, [x19, #264]
  43c6e0:	add	x20, x20, #0x1
  43c6e4:	cmp	x20, x22
  43c6e8:	b.eq	43c728 <ferror@plt+0x39e58>  // b.none
  43c6ec:	ldrb	w21, [x20]
  43c6f0:	ldr	x0, [x19, #256]
  43c6f4:	cmp	x0, #0xff
  43c6f8:	b.ne	43c6cc <ferror@plt+0x39dfc>  // b.any
  43c6fc:	strb	wzr, [x19, #255]
  43c700:	ldr	x3, [x19, #272]
  43c704:	ldr	x2, [x19, #280]
  43c708:	mov	x1, x23
  43c70c:	mov	x0, x19
  43c710:	blr	x3
  43c714:	str	xzr, [x19, #256]
  43c718:	ldr	x0, [x19, #320]
  43c71c:	add	x0, x0, #0x1
  43c720:	str	x0, [x19, #320]
  43c724:	b	43c6cc <ferror@plt+0x39dfc>
  43c728:	ldp	x21, x22, [sp, #32]
  43c72c:	ldp	x23, x24, [sp, #48]
  43c730:	ldp	x25, x26, [sp, #64]
  43c734:	b	43ee50 <ferror@plt+0x3c580>
  43c738:	ldr	x0, [x22, #8]
  43c73c:	ldr	x22, [x0, #16]
  43c740:	ldrsw	x0, [x0, #24]
  43c744:	cbz	x0, 43eebc <ferror@plt+0x3c5ec>
  43c748:	mov	x20, x22
  43c74c:	add	x22, x22, x0
  43c750:	mov	x23, #0xff                  	// #255
  43c754:	b	43c778 <ferror@plt+0x39ea8>
  43c758:	ldr	x0, [x19, #256]
  43c75c:	add	x1, x0, #0x1
  43c760:	str	x1, [x19, #256]
  43c764:	strb	w21, [x19, x0]
  43c768:	strb	w21, [x19, #264]
  43c76c:	add	x20, x20, #0x1
  43c770:	cmp	x20, x22
  43c774:	b.eq	43c7b4 <ferror@plt+0x39ee4>  // b.none
  43c778:	ldrb	w21, [x20]
  43c77c:	ldr	x0, [x19, #256]
  43c780:	cmp	x0, #0xff
  43c784:	b.ne	43c758 <ferror@plt+0x39e88>  // b.any
  43c788:	strb	wzr, [x19, #255]
  43c78c:	ldr	x3, [x19, #272]
  43c790:	ldr	x2, [x19, #280]
  43c794:	mov	x1, x23
  43c798:	mov	x0, x19
  43c79c:	blr	x3
  43c7a0:	str	xzr, [x19, #256]
  43c7a4:	ldr	x0, [x19, #320]
  43c7a8:	add	x0, x0, #0x1
  43c7ac:	str	x0, [x19, #320]
  43c7b0:	b	43c758 <ferror@plt+0x39e88>
  43c7b4:	ldp	x21, x22, [sp, #32]
  43c7b8:	ldp	x23, x24, [sp, #48]
  43c7bc:	ldp	x25, x26, [sp, #64]
  43c7c0:	b	43ee50 <ferror@plt+0x3c580>
  43c7c4:	ldr	x2, [x22, #8]
  43c7c8:	mov	w1, w20
  43c7cc:	mov	x0, x19
  43c7d0:	bl	43ef90 <ferror@plt+0x3c6c0>
  43c7d4:	ldp	x21, x22, [sp, #32]
  43c7d8:	ldp	x23, x24, [sp, #48]
  43c7dc:	ldp	x25, x26, [sp, #64]
  43c7e0:	b	43ee50 <ferror@plt+0x3c580>
  43c7e4:	and	w21, w20, #0x20
  43c7e8:	tbnz	w20, #5, 43c80c <ferror@plt+0x39f3c>
  43c7ec:	ldr	x0, [x22, #8]
  43c7f0:	cbz	x0, 43c8e0 <ferror@plt+0x3a010>
  43c7f4:	tbz	w20, #6, 43c848 <ferror@plt+0x39f78>
  43c7f8:	cbz	w21, 43c8e0 <ferror@plt+0x3a010>
  43c7fc:	ldp	x21, x22, [sp, #32]
  43c800:	ldp	x23, x24, [sp, #48]
  43c804:	ldp	x25, x26, [sp, #64]
  43c808:	b	43ee50 <ferror@plt+0x3c580>
  43c80c:	and	w23, w20, #0xffffff9f
  43c810:	ldr	x3, [x19, #296]
  43c814:	mov	x2, x22
  43c818:	mov	w1, w23
  43c81c:	mov	x0, x19
  43c820:	bl	43f9f8 <ferror@plt+0x3d128>
  43c824:	ldr	x2, [x22, #8]
  43c828:	cbz	x2, 43c7f8 <ferror@plt+0x39f28>
  43c82c:	mov	w1, w23
  43c830:	mov	x0, x19
  43c834:	bl	43ef90 <ferror@plt+0x3c6c0>
  43c838:	ldp	x21, x22, [sp, #32]
  43c83c:	ldp	x23, x24, [sp, #48]
  43c840:	ldp	x25, x26, [sp, #64]
  43c844:	b	43ee50 <ferror@plt+0x3c580>
  43c848:	ldr	x0, [x19, #296]
  43c84c:	str	x0, [sp, #112]
  43c850:	add	x0, sp, #0x70
  43c854:	str	x0, [x19, #296]
  43c858:	str	x22, [sp, #120]
  43c85c:	str	wzr, [sp, #128]
  43c860:	ldr	x0, [x19, #288]
  43c864:	str	x0, [sp, #136]
  43c868:	ldr	x2, [x22, #8]
  43c86c:	and	w1, w20, #0xffffff9f
  43c870:	mov	x0, x19
  43c874:	bl	43ef90 <ferror@plt+0x3c6c0>
  43c878:	ldr	x0, [sp, #112]
  43c87c:	str	x0, [x19, #296]
  43c880:	ldr	w0, [sp, #128]
  43c884:	cbnz	w0, 43eecc <ferror@plt+0x3c5fc>
  43c888:	cbnz	w21, 43c7f8 <ferror@plt+0x39f28>
  43c88c:	ldr	x0, [x19, #256]
  43c890:	cmp	x0, #0xff
  43c894:	b.eq	43c8b4 <ferror@plt+0x39fe4>  // b.none
  43c898:	ldr	x1, [x19, #256]
  43c89c:	add	x0, x1, #0x1
  43c8a0:	str	x0, [x19, #256]
  43c8a4:	mov	w0, #0x20                  	// #32
  43c8a8:	strb	w0, [x19, x1]
  43c8ac:	strb	w0, [x19, #264]
  43c8b0:	b	43c7f8 <ferror@plt+0x39f28>
  43c8b4:	strb	wzr, [x19, #255]
  43c8b8:	ldr	x3, [x19, #272]
  43c8bc:	ldr	x2, [x19, #280]
  43c8c0:	mov	x1, #0xff                  	// #255
  43c8c4:	mov	x0, x19
  43c8c8:	blr	x3
  43c8cc:	str	xzr, [x19, #256]
  43c8d0:	ldr	x0, [x19, #320]
  43c8d4:	add	x0, x0, #0x1
  43c8d8:	str	x0, [x19, #320]
  43c8dc:	b	43c898 <ferror@plt+0x39fc8>
  43c8e0:	ldr	x3, [x19, #296]
  43c8e4:	mov	x2, x22
  43c8e8:	and	w1, w20, #0xffffff9f
  43c8ec:	mov	x0, x19
  43c8f0:	bl	43f9f8 <ferror@plt+0x3d128>
  43c8f4:	ldp	x21, x22, [sp, #32]
  43c8f8:	ldp	x23, x24, [sp, #48]
  43c8fc:	ldp	x25, x26, [sp, #64]
  43c900:	b	43ee50 <ferror@plt+0x3c580>
  43c904:	ldr	x23, [x19, #296]
  43c908:	str	x23, [sp, #112]
  43c90c:	add	x0, sp, #0x70
  43c910:	str	x0, [x19, #296]
  43c914:	str	x22, [sp, #120]
  43c918:	str	wzr, [sp, #128]
  43c91c:	ldr	x0, [x19, #288]
  43c920:	str	x0, [sp, #136]
  43c924:	mov	x0, x23
  43c928:	mov	w21, #0x1                   	// #1
  43c92c:	add	x3, sp, #0x70
  43c930:	mov	w6, w21
  43c934:	cbnz	x23, 43c984 <ferror@plt+0x3a0b4>
  43c938:	ldr	x2, [x22, #16]
  43c93c:	mov	w1, w20
  43c940:	mov	x0, x19
  43c944:	bl	43ef90 <ferror@plt+0x3c6c0>
  43c948:	str	xzr, [x19, #296]
  43c94c:	ldr	w0, [sp, #128]
  43c950:	cbz	w0, 43ca28 <ferror@plt+0x3a158>
  43c954:	ldp	x21, x22, [sp, #32]
  43c958:	ldp	x23, x24, [sp, #48]
  43c95c:	ldp	x25, x26, [sp, #64]
  43c960:	b	43ee50 <ferror@plt+0x3c580>
  43c964:	mov	w0, #0x1                   	// #1
  43c968:	str	w0, [x19, #304]
  43c96c:	ldp	x21, x22, [sp, #32]
  43c970:	ldp	x23, x24, [sp, #48]
  43c974:	ldp	x25, x26, [sp, #64]
  43c978:	b	43ee50 <ferror@plt+0x3c580>
  43c97c:	ldr	x0, [x0]
  43c980:	cbz	x0, 43c9d8 <ferror@plt+0x3a108>
  43c984:	ldr	x1, [x0, #8]
  43c988:	ldr	w1, [x1]
  43c98c:	sub	w1, w1, #0x19
  43c990:	cmp	w1, #0x2
  43c994:	b.hi	43c9d8 <ferror@plt+0x3a108>  // b.pmore
  43c998:	ldr	w1, [x0, #16]
  43c99c:	cbnz	w1, 43c97c <ferror@plt+0x3a0ac>
  43c9a0:	cmp	w21, #0x3
  43c9a4:	b.hi	43c964 <ferror@plt+0x3a094>  // b.pmore
  43c9a8:	ubfiz	x2, x21, #5, #32
  43c9ac:	add	x1, x3, x2
  43c9b0:	ldp	x4, x5, [x0]
  43c9b4:	stp	x4, x5, [x1]
  43c9b8:	ldp	x4, x5, [x0, #16]
  43c9bc:	stp	x4, x5, [x1, #16]
  43c9c0:	ldr	x4, [x19, #296]
  43c9c4:	str	x4, [x3, x2]
  43c9c8:	str	x1, [x19, #296]
  43c9cc:	str	w6, [x0, #16]
  43c9d0:	add	w21, w21, #0x1
  43c9d4:	b	43c97c <ferror@plt+0x3a0ac>
  43c9d8:	ldr	x2, [x22, #16]
  43c9dc:	mov	w1, w20
  43c9e0:	mov	x0, x19
  43c9e4:	bl	43ef90 <ferror@plt+0x3c6c0>
  43c9e8:	str	x23, [x19, #296]
  43c9ec:	ldr	w0, [sp, #128]
  43c9f0:	cbnz	w0, 43eedc <ferror@plt+0x3c60c>
  43c9f4:	cmp	w21, #0x1
  43c9f8:	b.ls	43ca28 <ferror@plt+0x3a158>  // b.plast
  43c9fc:	sub	w23, w21, #0x1
  43ca00:	add	x0, sp, #0x70
  43ca04:	add	x23, x0, x23, lsl #5
  43ca08:	sub	w21, w21, #0x1
  43ca0c:	ldr	x2, [x23, #8]
  43ca10:	mov	w1, w20
  43ca14:	mov	x0, x19
  43ca18:	bl	43f02c <ferror@plt+0x3c75c>
  43ca1c:	sub	x23, x23, #0x20
  43ca20:	cmp	w21, #0x1
  43ca24:	b.ne	43ca08 <ferror@plt+0x3a138>  // b.any
  43ca28:	ldr	x3, [x19, #296]
  43ca2c:	mov	x2, x22
  43ca30:	mov	w1, w20
  43ca34:	mov	x0, x19
  43ca38:	bl	440050 <ferror@plt+0x3d780>
  43ca3c:	ldp	x21, x22, [sp, #32]
  43ca40:	ldp	x23, x24, [sp, #48]
  43ca44:	ldp	x25, x26, [sp, #64]
  43ca48:	b	43ee50 <ferror@plt+0x3c580>
  43ca4c:	ldr	x0, [x19, #296]
  43ca50:	str	x0, [sp, #112]
  43ca54:	add	x0, sp, #0x70
  43ca58:	str	x0, [x19, #296]
  43ca5c:	str	x22, [sp, #120]
  43ca60:	str	wzr, [sp, #128]
  43ca64:	ldr	x0, [x19, #288]
  43ca68:	str	x0, [sp, #136]
  43ca6c:	ldr	x2, [x22, #16]
  43ca70:	mov	w1, w20
  43ca74:	mov	x0, x19
  43ca78:	bl	43ef90 <ferror@plt+0x3c6c0>
  43ca7c:	ldr	w0, [sp, #128]
  43ca80:	cbz	w0, 43ca9c <ferror@plt+0x3a1cc>
  43ca84:	ldr	x0, [sp, #112]
  43ca88:	str	x0, [x19, #296]
  43ca8c:	ldp	x21, x22, [sp, #32]
  43ca90:	ldp	x23, x24, [sp, #48]
  43ca94:	ldp	x25, x26, [sp, #64]
  43ca98:	b	43ee50 <ferror@plt+0x3c580>
  43ca9c:	mov	x2, x22
  43caa0:	mov	w1, w20
  43caa4:	mov	x0, x19
  43caa8:	bl	43f02c <ferror@plt+0x3c75c>
  43caac:	b	43ca84 <ferror@plt+0x3a1b4>
  43cab0:	ldrsh	w0, [x22, #18]
  43cab4:	cbnz	w0, 43cb20 <ferror@plt+0x3a250>
  43cab8:	ldr	x2, [x22, #8]
  43cabc:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1d094>
  43cac0:	add	x0, x0, #0xf30
  43cac4:	ldr	x1, [x2, #8]
  43cac8:	add	x0, x0, #0x100
  43cacc:	cmp	x1, x0
  43cad0:	b.eq	43cb04 <ferror@plt+0x3a234>  // b.none
  43cad4:	mov	w1, w20
  43cad8:	mov	x0, x19
  43cadc:	bl	43ef90 <ferror@plt+0x3c6c0>
  43cae0:	ldr	x0, [x19, #256]
  43cae4:	cmp	x0, #0xff
  43cae8:	b.eq	43cb90 <ferror@plt+0x3a2c0>  // b.none
  43caec:	ldr	x1, [x19, #256]
  43caf0:	add	x0, x1, #0x1
  43caf4:	str	x0, [x19, #256]
  43caf8:	mov	w0, #0x20                  	// #32
  43cafc:	strb	w0, [x19, x1]
  43cb00:	strb	w0, [x19, #264]
  43cb04:	ldrsh	w0, [x22, #16]
  43cb08:	cbz	w0, 43cc28 <ferror@plt+0x3a358>
  43cb0c:	adrp	x20, 465000 <_obstack_memory_used@@Base+0x1e094>
  43cb10:	add	x20, x20, #0xd50
  43cb14:	add	x22, x20, #0x6
  43cb18:	mov	x23, #0xff                  	// #255
  43cb1c:	b	43cbdc <ferror@plt+0x3a30c>
  43cb20:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43cb24:	add	x21, x21, #0xd48
  43cb28:	add	x24, x21, #0x5
  43cb2c:	mov	x25, #0xff                  	// #255
  43cb30:	b	43cb54 <ferror@plt+0x3a284>
  43cb34:	ldr	x0, [x19, #256]
  43cb38:	add	x1, x0, #0x1
  43cb3c:	str	x1, [x19, #256]
  43cb40:	strb	w23, [x19, x0]
  43cb44:	strb	w23, [x19, #264]
  43cb48:	add	x21, x21, #0x1
  43cb4c:	cmp	x21, x24
  43cb50:	b.eq	43cab8 <ferror@plt+0x3a1e8>  // b.none
  43cb54:	ldrb	w23, [x21]
  43cb58:	ldr	x0, [x19, #256]
  43cb5c:	cmp	x0, #0xff
  43cb60:	b.ne	43cb34 <ferror@plt+0x3a264>  // b.any
  43cb64:	strb	wzr, [x19, #255]
  43cb68:	ldr	x3, [x19, #272]
  43cb6c:	ldr	x2, [x19, #280]
  43cb70:	mov	x1, x25
  43cb74:	mov	x0, x19
  43cb78:	blr	x3
  43cb7c:	str	xzr, [x19, #256]
  43cb80:	ldr	x0, [x19, #320]
  43cb84:	add	x0, x0, #0x1
  43cb88:	str	x0, [x19, #320]
  43cb8c:	b	43cb34 <ferror@plt+0x3a264>
  43cb90:	strb	wzr, [x19, #255]
  43cb94:	ldr	x3, [x19, #272]
  43cb98:	ldr	x2, [x19, #280]
  43cb9c:	mov	x1, #0xff                  	// #255
  43cba0:	mov	x0, x19
  43cba4:	blr	x3
  43cba8:	str	xzr, [x19, #256]
  43cbac:	ldr	x0, [x19, #320]
  43cbb0:	add	x0, x0, #0x1
  43cbb4:	str	x0, [x19, #320]
  43cbb8:	b	43caec <ferror@plt+0x3a21c>
  43cbbc:	ldr	x0, [x19, #256]
  43cbc0:	add	x1, x0, #0x1
  43cbc4:	str	x1, [x19, #256]
  43cbc8:	strb	w21, [x19, x0]
  43cbcc:	strb	w21, [x19, #264]
  43cbd0:	add	x20, x20, #0x1
  43cbd4:	cmp	x20, x22
  43cbd8:	b.eq	43cc18 <ferror@plt+0x3a348>  // b.none
  43cbdc:	ldrb	w21, [x20]
  43cbe0:	ldr	x0, [x19, #256]
  43cbe4:	cmp	x0, #0xff
  43cbe8:	b.ne	43cbbc <ferror@plt+0x3a2ec>  // b.any
  43cbec:	strb	wzr, [x19, #255]
  43cbf0:	ldr	x3, [x19, #272]
  43cbf4:	ldr	x2, [x19, #280]
  43cbf8:	mov	x1, x23
  43cbfc:	mov	x0, x19
  43cc00:	blr	x3
  43cc04:	str	xzr, [x19, #256]
  43cc08:	ldr	x0, [x19, #320]
  43cc0c:	add	x0, x0, #0x1
  43cc10:	str	x0, [x19, #320]
  43cc14:	b	43cbbc <ferror@plt+0x3a2ec>
  43cc18:	ldp	x21, x22, [sp, #32]
  43cc1c:	ldp	x23, x24, [sp, #48]
  43cc20:	ldp	x25, x26, [sp, #64]
  43cc24:	b	43ee50 <ferror@plt+0x3c580>
  43cc28:	adrp	x20, 465000 <_obstack_memory_used@@Base+0x1e094>
  43cc2c:	add	x20, x20, #0xd58
  43cc30:	add	x22, x20, #0x6
  43cc34:	mov	x23, #0xff                  	// #255
  43cc38:	b	43cc5c <ferror@plt+0x3a38c>
  43cc3c:	ldr	x0, [x19, #256]
  43cc40:	add	x1, x0, #0x1
  43cc44:	str	x1, [x19, #256]
  43cc48:	strb	w21, [x19, x0]
  43cc4c:	strb	w21, [x19, #264]
  43cc50:	add	x20, x20, #0x1
  43cc54:	cmp	x20, x22
  43cc58:	b.eq	43cc98 <ferror@plt+0x3a3c8>  // b.none
  43cc5c:	ldrb	w21, [x20]
  43cc60:	ldr	x0, [x19, #256]
  43cc64:	cmp	x0, #0xff
  43cc68:	b.ne	43cc3c <ferror@plt+0x3a36c>  // b.any
  43cc6c:	strb	wzr, [x19, #255]
  43cc70:	ldr	x3, [x19, #272]
  43cc74:	ldr	x2, [x19, #280]
  43cc78:	mov	x1, x23
  43cc7c:	mov	x0, x19
  43cc80:	blr	x3
  43cc84:	str	xzr, [x19, #256]
  43cc88:	ldr	x0, [x19, #320]
  43cc8c:	add	x0, x0, #0x1
  43cc90:	str	x0, [x19, #320]
  43cc94:	b	43cc3c <ferror@plt+0x3a36c>
  43cc98:	ldp	x21, x22, [sp, #32]
  43cc9c:	ldp	x23, x24, [sp, #48]
  43cca0:	ldp	x25, x26, [sp, #64]
  43cca4:	b	43ee50 <ferror@plt+0x3c580>
  43cca8:	ldr	x2, [x22, #8]
  43ccac:	cbz	x2, 43ccbc <ferror@plt+0x3a3ec>
  43ccb0:	mov	w1, w20
  43ccb4:	mov	x0, x19
  43ccb8:	bl	43ef90 <ferror@plt+0x3c6c0>
  43ccbc:	ldr	x0, [x22, #16]
  43ccc0:	cbz	x0, 43eeec <ferror@plt+0x3c61c>
  43ccc4:	ldr	x1, [x19, #256]
  43ccc8:	cmp	x1, #0xfd
  43cccc:	b.ls	43ccf4 <ferror@plt+0x3a424>  // b.plast
  43ccd0:	strb	wzr, [x19, x1]
  43ccd4:	ldr	x3, [x19, #272]
  43ccd8:	ldr	x2, [x19, #280]
  43ccdc:	mov	x0, x19
  43cce0:	blr	x3
  43cce4:	str	xzr, [x19, #256]
  43cce8:	ldr	x0, [x19, #320]
  43ccec:	add	x0, x0, #0x1
  43ccf0:	str	x0, [x19, #320]
  43ccf4:	adrp	x21, 457000 <_obstack_memory_used@@Base+0x10094>
  43ccf8:	add	x21, x21, #0xa38
  43ccfc:	add	x25, x21, #0x2
  43cd00:	mov	x26, #0xff                  	// #255
  43cd04:	b	43cd28 <ferror@plt+0x3a458>
  43cd08:	ldr	x0, [x19, #256]
  43cd0c:	add	x24, x0, #0x1
  43cd10:	str	x24, [x19, #256]
  43cd14:	strb	w23, [x19, x0]
  43cd18:	strb	w23, [x19, #264]
  43cd1c:	add	x21, x21, #0x1
  43cd20:	cmp	x21, x25
  43cd24:	b.eq	43cd64 <ferror@plt+0x3a494>  // b.none
  43cd28:	ldrb	w23, [x21]
  43cd2c:	ldr	x0, [x19, #256]
  43cd30:	cmp	x0, #0xff
  43cd34:	b.ne	43cd08 <ferror@plt+0x3a438>  // b.any
  43cd38:	strb	wzr, [x19, #255]
  43cd3c:	ldr	x3, [x19, #272]
  43cd40:	ldr	x2, [x19, #280]
  43cd44:	mov	x1, x26
  43cd48:	mov	x0, x19
  43cd4c:	blr	x3
  43cd50:	str	xzr, [x19, #256]
  43cd54:	ldr	x0, [x19, #320]
  43cd58:	add	x0, x0, #0x1
  43cd5c:	str	x0, [x19, #320]
  43cd60:	b	43cd08 <ferror@plt+0x3a438>
  43cd64:	ldr	x21, [x19, #320]
  43cd68:	ldr	x2, [x22, #16]
  43cd6c:	mov	w1, w20
  43cd70:	mov	x0, x19
  43cd74:	bl	43ef90 <ferror@plt+0x3c6c0>
  43cd78:	ldr	x0, [x19, #320]
  43cd7c:	cmp	x0, x21
  43cd80:	b.eq	43cd94 <ferror@plt+0x3a4c4>  // b.none
  43cd84:	ldp	x21, x22, [sp, #32]
  43cd88:	ldp	x23, x24, [sp, #48]
  43cd8c:	ldp	x25, x26, [sp, #64]
  43cd90:	b	43ee50 <ferror@plt+0x3c580>
  43cd94:	ldr	x0, [x19, #256]
  43cd98:	cmp	x0, x24
  43cd9c:	b.eq	43cdb0 <ferror@plt+0x3a4e0>  // b.none
  43cda0:	ldp	x21, x22, [sp, #32]
  43cda4:	ldp	x23, x24, [sp, #48]
  43cda8:	ldp	x25, x26, [sp, #64]
  43cdac:	b	43ee50 <ferror@plt+0x3c580>
  43cdb0:	sub	x0, x0, #0x2
  43cdb4:	str	x0, [x19, #256]
  43cdb8:	ldp	x21, x22, [sp, #32]
  43cdbc:	ldp	x23, x24, [sp, #48]
  43cdc0:	ldp	x25, x26, [sp, #64]
  43cdc4:	b	43ee50 <ferror@plt+0x3c580>
  43cdc8:	ldr	x2, [x22, #8]
  43cdcc:	ldr	x21, [x22, #16]
  43cdd0:	cbz	x2, 43cde0 <ferror@plt+0x3a510>
  43cdd4:	mov	w1, w20
  43cdd8:	mov	x0, x19
  43cddc:	bl	43ef90 <ferror@plt+0x3c6c0>
  43cde0:	ldr	x0, [x19, #256]
  43cde4:	cmp	x0, #0xff
  43cde8:	b.eq	43ce48 <ferror@plt+0x3a578>  // b.none
  43cdec:	ldr	x1, [x19, #256]
  43cdf0:	add	x0, x1, #0x1
  43cdf4:	str	x0, [x19, #256]
  43cdf8:	mov	w0, #0x7b                  	// #123
  43cdfc:	strb	w0, [x19, x1]
  43ce00:	strb	w0, [x19, #264]
  43ce04:	mov	x2, x21
  43ce08:	mov	w1, w20
  43ce0c:	mov	x0, x19
  43ce10:	bl	43ef90 <ferror@plt+0x3c6c0>
  43ce14:	ldr	x0, [x19, #256]
  43ce18:	cmp	x0, #0xff
  43ce1c:	b.eq	43ce74 <ferror@plt+0x3a5a4>  // b.none
  43ce20:	ldr	x1, [x19, #256]
  43ce24:	add	x0, x1, #0x1
  43ce28:	str	x0, [x19, #256]
  43ce2c:	mov	w0, #0x7d                  	// #125
  43ce30:	strb	w0, [x19, x1]
  43ce34:	strb	w0, [x19, #264]
  43ce38:	ldp	x21, x22, [sp, #32]
  43ce3c:	ldp	x23, x24, [sp, #48]
  43ce40:	ldp	x25, x26, [sp, #64]
  43ce44:	b	43ee50 <ferror@plt+0x3c580>
  43ce48:	strb	wzr, [x19, #255]
  43ce4c:	ldr	x3, [x19, #272]
  43ce50:	ldr	x2, [x19, #280]
  43ce54:	mov	x1, #0xff                  	// #255
  43ce58:	mov	x0, x19
  43ce5c:	blr	x3
  43ce60:	str	xzr, [x19, #256]
  43ce64:	ldr	x0, [x19, #320]
  43ce68:	add	x0, x0, #0x1
  43ce6c:	str	x0, [x19, #320]
  43ce70:	b	43cdec <ferror@plt+0x3a51c>
  43ce74:	strb	wzr, [x19, #255]
  43ce78:	ldr	x3, [x19, #272]
  43ce7c:	ldr	x2, [x19, #280]
  43ce80:	mov	x1, #0xff                  	// #255
  43ce84:	mov	x0, x19
  43ce88:	blr	x3
  43ce8c:	str	xzr, [x19, #256]
  43ce90:	ldr	x0, [x19, #320]
  43ce94:	add	x0, x0, #0x1
  43ce98:	str	x0, [x19, #320]
  43ce9c:	b	43ce20 <ferror@plt+0x3a550>
  43cea0:	ldr	x24, [x22, #8]
  43cea4:	ldr	w23, [x24, #16]
  43cea8:	adrp	x20, 465000 <_obstack_memory_used@@Base+0x1e094>
  43ceac:	add	x20, x20, #0xd60
  43ceb0:	add	x22, x20, #0x8
  43ceb4:	mov	x25, #0xff                  	// #255
  43ceb8:	b	43cedc <ferror@plt+0x3a60c>
  43cebc:	ldr	x0, [x19, #256]
  43cec0:	add	x1, x0, #0x1
  43cec4:	str	x1, [x19, #256]
  43cec8:	strb	w21, [x19, x0]
  43cecc:	strb	w21, [x19, #264]
  43ced0:	add	x20, x20, #0x1
  43ced4:	cmp	x20, x22
  43ced8:	b.eq	43cf18 <ferror@plt+0x3a648>  // b.none
  43cedc:	ldrb	w21, [x20]
  43cee0:	ldr	x0, [x19, #256]
  43cee4:	cmp	x0, #0xff
  43cee8:	b.ne	43cebc <ferror@plt+0x3a5ec>  // b.any
  43ceec:	strb	wzr, [x19, #255]
  43cef0:	ldr	x3, [x19, #272]
  43cef4:	ldr	x2, [x19, #280]
  43cef8:	mov	x1, x25
  43cefc:	mov	x0, x19
  43cf00:	blr	x3
  43cf04:	str	xzr, [x19, #256]
  43cf08:	ldr	x0, [x19, #320]
  43cf0c:	add	x0, x0, #0x1
  43cf10:	str	x0, [x19, #320]
  43cf14:	b	43cebc <ferror@plt+0x3a5ec>
  43cf18:	ldr	x0, [x24, #8]
  43cf1c:	ldrb	w0, [x0]
  43cf20:	sub	w0, w0, #0x61
  43cf24:	and	w0, w0, #0xff
  43cf28:	cmp	w0, #0x19
  43cf2c:	b.hi	43cf50 <ferror@plt+0x3a680>  // b.pmore
  43cf30:	cmp	x1, #0xff
  43cf34:	b.eq	43cf80 <ferror@plt+0x3a6b0>  // b.none
  43cf38:	ldr	x1, [x19, #256]
  43cf3c:	add	x0, x1, #0x1
  43cf40:	str	x0, [x19, #256]
  43cf44:	mov	w0, #0x20                  	// #32
  43cf48:	strb	w0, [x19, x1]
  43cf4c:	strb	w0, [x19, #264]
  43cf50:	ldr	x22, [x24, #8]
  43cf54:	add	x0, x22, w23, sxtw
  43cf58:	ldurb	w0, [x0, #-1]
  43cf5c:	cmp	w0, #0x20
  43cf60:	cset	w0, eq  // eq = none
  43cf64:	sub	w23, w23, w0
  43cf68:	sxtw	x0, w23
  43cf6c:	cbz	w23, 43eefc <ferror@plt+0x3c62c>
  43cf70:	mov	x20, x22
  43cf74:	add	x22, x22, x0
  43cf78:	mov	x23, #0xff                  	// #255
  43cf7c:	b	43cfc8 <ferror@plt+0x3a6f8>
  43cf80:	strb	wzr, [x19, #255]
  43cf84:	ldr	x3, [x19, #272]
  43cf88:	ldr	x2, [x19, #280]
  43cf8c:	mov	x0, x19
  43cf90:	blr	x3
  43cf94:	str	xzr, [x19, #256]
  43cf98:	ldr	x0, [x19, #320]
  43cf9c:	add	x0, x0, #0x1
  43cfa0:	str	x0, [x19, #320]
  43cfa4:	b	43cf38 <ferror@plt+0x3a668>
  43cfa8:	ldr	x0, [x19, #256]
  43cfac:	add	x1, x0, #0x1
  43cfb0:	str	x1, [x19, #256]
  43cfb4:	strb	w21, [x19, x0]
  43cfb8:	strb	w21, [x19, #264]
  43cfbc:	add	x20, x20, #0x1
  43cfc0:	cmp	x20, x22
  43cfc4:	b.eq	43d004 <ferror@plt+0x3a734>  // b.none
  43cfc8:	ldrb	w21, [x20]
  43cfcc:	ldr	x0, [x19, #256]
  43cfd0:	cmp	x0, #0xff
  43cfd4:	b.ne	43cfa8 <ferror@plt+0x3a6d8>  // b.any
  43cfd8:	strb	wzr, [x19, #255]
  43cfdc:	ldr	x3, [x19, #272]
  43cfe0:	ldr	x2, [x19, #280]
  43cfe4:	mov	x1, x23
  43cfe8:	mov	x0, x19
  43cfec:	blr	x3
  43cff0:	str	xzr, [x19, #256]
  43cff4:	ldr	x0, [x19, #320]
  43cff8:	add	x0, x0, #0x1
  43cffc:	str	x0, [x19, #320]
  43d000:	b	43cfa8 <ferror@plt+0x3a6d8>
  43d004:	ldp	x21, x22, [sp, #32]
  43d008:	ldp	x23, x24, [sp, #48]
  43d00c:	ldp	x25, x26, [sp, #64]
  43d010:	b	43ee50 <ferror@plt+0x3c580>
  43d014:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43d018:	add	x21, x21, #0xd70
  43d01c:	add	x24, x21, #0x9
  43d020:	mov	x25, #0xff                  	// #255
  43d024:	b	43d048 <ferror@plt+0x3a778>
  43d028:	ldr	x0, [x19, #256]
  43d02c:	add	x1, x0, #0x1
  43d030:	str	x1, [x19, #256]
  43d034:	strb	w23, [x19, x0]
  43d038:	strb	w23, [x19, #264]
  43d03c:	add	x21, x21, #0x1
  43d040:	cmp	x21, x24
  43d044:	b.eq	43d084 <ferror@plt+0x3a7b4>  // b.none
  43d048:	ldrb	w23, [x21]
  43d04c:	ldr	x0, [x19, #256]
  43d050:	cmp	x0, #0xff
  43d054:	b.ne	43d028 <ferror@plt+0x3a758>  // b.any
  43d058:	strb	wzr, [x19, #255]
  43d05c:	ldr	x3, [x19, #272]
  43d060:	ldr	x2, [x19, #280]
  43d064:	mov	x1, x25
  43d068:	mov	x0, x19
  43d06c:	blr	x3
  43d070:	str	xzr, [x19, #256]
  43d074:	ldr	x0, [x19, #320]
  43d078:	add	x0, x0, #0x1
  43d07c:	str	x0, [x19, #320]
  43d080:	b	43d028 <ferror@plt+0x3a758>
  43d084:	ldr	x2, [x22, #16]
  43d088:	mov	w1, w20
  43d08c:	mov	x0, x19
  43d090:	bl	43ef90 <ferror@plt+0x3c6c0>
  43d094:	ldp	x21, x22, [sp, #32]
  43d098:	ldp	x23, x24, [sp, #48]
  43d09c:	ldp	x25, x26, [sp, #64]
  43d0a0:	b	43ee50 <ferror@plt+0x3c580>
  43d0a4:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43d0a8:	add	x21, x21, #0xd70
  43d0ac:	add	x24, x21, #0x9
  43d0b0:	mov	x25, #0xff                  	// #255
  43d0b4:	b	43d0d8 <ferror@plt+0x3a808>
  43d0b8:	ldr	x0, [x19, #256]
  43d0bc:	add	x1, x0, #0x1
  43d0c0:	str	x1, [x19, #256]
  43d0c4:	strb	w23, [x19, x0]
  43d0c8:	strb	w23, [x19, #264]
  43d0cc:	add	x21, x21, #0x1
  43d0d0:	cmp	x21, x24
  43d0d4:	b.eq	43d114 <ferror@plt+0x3a844>  // b.none
  43d0d8:	ldrb	w23, [x21]
  43d0dc:	ldr	x0, [x19, #256]
  43d0e0:	cmp	x0, #0xff
  43d0e4:	b.ne	43d0b8 <ferror@plt+0x3a7e8>  // b.any
  43d0e8:	strb	wzr, [x19, #255]
  43d0ec:	ldr	x3, [x19, #272]
  43d0f0:	ldr	x2, [x19, #280]
  43d0f4:	mov	x1, x25
  43d0f8:	mov	x0, x19
  43d0fc:	blr	x3
  43d100:	str	xzr, [x19, #256]
  43d104:	ldr	x0, [x19, #320]
  43d108:	add	x0, x0, #0x1
  43d10c:	str	x0, [x19, #320]
  43d110:	b	43d0b8 <ferror@plt+0x3a7e8>
  43d114:	ldr	x0, [x19, #368]
  43d118:	cbz	x0, 43d130 <ferror@plt+0x3a860>
  43d11c:	ldr	x1, [x19, #288]
  43d120:	str	x1, [sp, #112]
  43d124:	add	x1, sp, #0x70
  43d128:	str	x1, [x19, #288]
  43d12c:	str	x0, [sp, #120]
  43d130:	ldr	x2, [x22, #8]
  43d134:	ldr	w0, [x2]
  43d138:	cmp	w0, #0x4
  43d13c:	b.eq	43d16c <ferror@plt+0x3a89c>  // b.none
  43d140:	mov	w1, w20
  43d144:	mov	x0, x19
  43d148:	bl	43ef90 <ferror@plt+0x3c6c0>
  43d14c:	ldr	x0, [x19, #368]
  43d150:	cbz	x0, 43ef0c <ferror@plt+0x3c63c>
  43d154:	ldr	x0, [sp, #112]
  43d158:	str	x0, [x19, #288]
  43d15c:	ldp	x21, x22, [sp, #32]
  43d160:	ldp	x23, x24, [sp, #48]
  43d164:	ldp	x25, x26, [sp, #64]
  43d168:	b	43ee50 <ferror@plt+0x3c580>
  43d16c:	ldr	x2, [x2, #8]
  43d170:	mov	w1, w20
  43d174:	mov	x0, x19
  43d178:	bl	43ef90 <ferror@plt+0x3c6c0>
  43d17c:	ldr	x0, [x19, #368]
  43d180:	cbz	x0, 43d18c <ferror@plt+0x3a8bc>
  43d184:	ldr	x0, [sp, #112]
  43d188:	str	x0, [x19, #288]
  43d18c:	ldrb	w0, [x19, #264]
  43d190:	cmp	w0, #0x3c
  43d194:	b.eq	43d210 <ferror@plt+0x3a940>  // b.none
  43d198:	ldr	x0, [x19, #256]
  43d19c:	cmp	x0, #0xff
  43d1a0:	b.eq	43d264 <ferror@plt+0x3a994>  // b.none
  43d1a4:	ldr	x1, [x19, #256]
  43d1a8:	add	x0, x1, #0x1
  43d1ac:	str	x0, [x19, #256]
  43d1b0:	mov	w0, #0x3c                  	// #60
  43d1b4:	strb	w0, [x19, x1]
  43d1b8:	strb	w0, [x19, #264]
  43d1bc:	ldr	x0, [x22, #8]
  43d1c0:	ldr	x2, [x0, #16]
  43d1c4:	mov	w1, w20
  43d1c8:	mov	x0, x19
  43d1cc:	bl	43ef90 <ferror@plt+0x3c6c0>
  43d1d0:	ldrb	w0, [x19, #264]
  43d1d4:	cmp	w0, #0x3e
  43d1d8:	b.eq	43d290 <ferror@plt+0x3a9c0>  // b.none
  43d1dc:	ldr	x0, [x19, #256]
  43d1e0:	cmp	x0, #0xff
  43d1e4:	b.eq	43d2e4 <ferror@plt+0x3aa14>  // b.none
  43d1e8:	ldr	x1, [x19, #256]
  43d1ec:	add	x0, x1, #0x1
  43d1f0:	str	x0, [x19, #256]
  43d1f4:	mov	w0, #0x3e                  	// #62
  43d1f8:	strb	w0, [x19, x1]
  43d1fc:	strb	w0, [x19, #264]
  43d200:	ldp	x21, x22, [sp, #32]
  43d204:	ldp	x23, x24, [sp, #48]
  43d208:	ldp	x25, x26, [sp, #64]
  43d20c:	b	43ee50 <ferror@plt+0x3c580>
  43d210:	ldr	x0, [x19, #256]
  43d214:	cmp	x0, #0xff
  43d218:	b.eq	43d238 <ferror@plt+0x3a968>  // b.none
  43d21c:	ldr	x1, [x19, #256]
  43d220:	add	x0, x1, #0x1
  43d224:	str	x0, [x19, #256]
  43d228:	mov	w0, #0x20                  	// #32
  43d22c:	strb	w0, [x19, x1]
  43d230:	strb	w0, [x19, #264]
  43d234:	b	43d198 <ferror@plt+0x3a8c8>
  43d238:	strb	wzr, [x19, #255]
  43d23c:	ldr	x3, [x19, #272]
  43d240:	ldr	x2, [x19, #280]
  43d244:	mov	x1, #0xff                  	// #255
  43d248:	mov	x0, x19
  43d24c:	blr	x3
  43d250:	str	xzr, [x19, #256]
  43d254:	ldr	x0, [x19, #320]
  43d258:	add	x0, x0, #0x1
  43d25c:	str	x0, [x19, #320]
  43d260:	b	43d21c <ferror@plt+0x3a94c>
  43d264:	strb	wzr, [x19, #255]
  43d268:	ldr	x3, [x19, #272]
  43d26c:	ldr	x2, [x19, #280]
  43d270:	mov	x1, #0xff                  	// #255
  43d274:	mov	x0, x19
  43d278:	blr	x3
  43d27c:	str	xzr, [x19, #256]
  43d280:	ldr	x0, [x19, #320]
  43d284:	add	x0, x0, #0x1
  43d288:	str	x0, [x19, #320]
  43d28c:	b	43d1a4 <ferror@plt+0x3a8d4>
  43d290:	ldr	x0, [x19, #256]
  43d294:	cmp	x0, #0xff
  43d298:	b.eq	43d2b8 <ferror@plt+0x3a9e8>  // b.none
  43d29c:	ldr	x1, [x19, #256]
  43d2a0:	add	x0, x1, #0x1
  43d2a4:	str	x0, [x19, #256]
  43d2a8:	mov	w0, #0x20                  	// #32
  43d2ac:	strb	w0, [x19, x1]
  43d2b0:	strb	w0, [x19, #264]
  43d2b4:	b	43d1dc <ferror@plt+0x3a90c>
  43d2b8:	strb	wzr, [x19, #255]
  43d2bc:	ldr	x3, [x19, #272]
  43d2c0:	ldr	x2, [x19, #280]
  43d2c4:	mov	x1, #0xff                  	// #255
  43d2c8:	mov	x0, x19
  43d2cc:	blr	x3
  43d2d0:	str	xzr, [x19, #256]
  43d2d4:	ldr	x0, [x19, #320]
  43d2d8:	add	x0, x0, #0x1
  43d2dc:	str	x0, [x19, #320]
  43d2e0:	b	43d29c <ferror@plt+0x3a9cc>
  43d2e4:	strb	wzr, [x19, #255]
  43d2e8:	ldr	x3, [x19, #272]
  43d2ec:	ldr	x2, [x19, #280]
  43d2f0:	mov	x1, #0xff                  	// #255
  43d2f4:	mov	x0, x19
  43d2f8:	blr	x3
  43d2fc:	str	xzr, [x19, #256]
  43d300:	ldr	x0, [x19, #320]
  43d304:	add	x0, x0, #0x1
  43d308:	str	x0, [x19, #320]
  43d30c:	b	43d1e8 <ferror@plt+0x3a918>
  43d310:	ldr	x2, [x22, #8]
  43d314:	mov	w1, w20
  43d318:	mov	x0, x19
  43d31c:	bl	4402b0 <ferror@plt+0x3d9e0>
  43d320:	ldp	x21, x22, [sp, #32]
  43d324:	ldp	x23, x24, [sp, #48]
  43d328:	ldp	x25, x26, [sp, #64]
  43d32c:	b	43ee50 <ferror@plt+0x3c580>
  43d330:	ldr	x24, [x22, #8]
  43d334:	ldr	x21, [x22, #16]
  43d338:	ldr	w0, [x24]
  43d33c:	cmp	w0, #0x32
  43d340:	b.eq	43d43c <ferror@plt+0x3ab6c>  // b.none
  43d344:	cmp	w0, #0x34
  43d348:	b.ne	43d690 <ferror@plt+0x3adc0>  // b.any
  43d34c:	ldr	x0, [x19, #256]
  43d350:	cmp	x0, #0xff
  43d354:	b.eq	43d698 <ferror@plt+0x3adc8>  // b.none
  43d358:	ldr	x1, [x19, #256]
  43d35c:	add	x0, x1, #0x1
  43d360:	str	x0, [x19, #256]
  43d364:	mov	w0, #0x28                  	// #40
  43d368:	strb	w0, [x19, x1]
  43d36c:	strb	w0, [x19, #264]
  43d370:	ldr	x2, [x24, #8]
  43d374:	mov	w1, w20
  43d378:	mov	x0, x19
  43d37c:	bl	43ef90 <ferror@plt+0x3c6c0>
  43d380:	ldr	x0, [x19, #256]
  43d384:	cmp	x0, #0xff
  43d388:	b.eq	43d6c4 <ferror@plt+0x3adf4>  // b.none
  43d38c:	ldr	x1, [x19, #256]
  43d390:	add	x0, x1, #0x1
  43d394:	str	x0, [x19, #256]
  43d398:	mov	w0, #0x29                  	// #41
  43d39c:	strb	w0, [x19, x1]
  43d3a0:	strb	w0, [x19, #264]
  43d3a4:	mov	x23, #0x0                   	// #0
  43d3a8:	cbz	x23, 43d768 <ferror@plt+0x3ae98>
  43d3ac:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  43d3b0:	add	x1, x1, #0xd90
  43d3b4:	mov	x0, x23
  43d3b8:	bl	402620 <strcmp@plt>
  43d3bc:	cbz	w0, 43d6f0 <ferror@plt+0x3ae20>
  43d3c0:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1f094>
  43d3c4:	add	x1, x1, #0x310
  43d3c8:	mov	x0, x23
  43d3cc:	bl	402620 <strcmp@plt>
  43d3d0:	cbnz	w0, 43d768 <ferror@plt+0x3ae98>
  43d3d4:	ldr	x0, [x19, #256]
  43d3d8:	cmp	x0, #0xff
  43d3dc:	b.eq	43d710 <ferror@plt+0x3ae40>  // b.none
  43d3e0:	ldr	x1, [x19, #256]
  43d3e4:	add	x0, x1, #0x1
  43d3e8:	str	x0, [x19, #256]
  43d3ec:	mov	w0, #0x28                  	// #40
  43d3f0:	strb	w0, [x19, x1]
  43d3f4:	strb	w0, [x19, #264]
  43d3f8:	mov	x2, x21
  43d3fc:	mov	w1, w20
  43d400:	mov	x0, x19
  43d404:	bl	43ef90 <ferror@plt+0x3c6c0>
  43d408:	ldr	x0, [x19, #256]
  43d40c:	cmp	x0, #0xff
  43d410:	b.eq	43d73c <ferror@plt+0x3ae6c>  // b.none
  43d414:	ldr	x1, [x19, #256]
  43d418:	add	x0, x1, #0x1
  43d41c:	str	x0, [x19, #256]
  43d420:	mov	w0, #0x29                  	// #41
  43d424:	strb	w0, [x19, x1]
  43d428:	strb	w0, [x19, #264]
  43d42c:	ldp	x21, x22, [sp, #32]
  43d430:	ldp	x23, x24, [sp, #48]
  43d434:	ldp	x25, x26, [sp, #64]
  43d438:	b	43ee50 <ferror@plt+0x3c580>
  43d43c:	ldr	x0, [x24, #8]
  43d440:	ldr	x23, [x0]
  43d444:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  43d448:	add	x1, x1, #0xd80
  43d44c:	mov	x0, x23
  43d450:	bl	402620 <strcmp@plt>
  43d454:	cbnz	w0, 43d464 <ferror@plt+0x3ab94>
  43d458:	ldr	w0, [x21]
  43d45c:	cmp	w0, #0x3
  43d460:	b.eq	43d4b0 <ferror@plt+0x3abe0>  // b.none
  43d464:	ldr	w0, [x21]
  43d468:	cmp	w0, #0x39
  43d46c:	b.eq	43d4d4 <ferror@plt+0x3ac04>  // b.none
  43d470:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  43d474:	add	x1, x1, #0xd88
  43d478:	mov	x0, x23
  43d47c:	bl	402620 <strcmp@plt>
  43d480:	cbz	w0, 43d504 <ferror@plt+0x3ac34>
  43d484:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  43d488:	add	x1, x1, #0xe88
  43d48c:	mov	x0, x23
  43d490:	bl	402620 <strcmp@plt>
  43d494:	mov	w22, w0
  43d498:	cbz	w0, 43d5cc <ferror@plt+0x3acfc>
  43d49c:	mov	x2, x24
  43d4a0:	mov	w1, w20
  43d4a4:	mov	x0, x19
  43d4a8:	bl	4402b0 <ferror@plt+0x3d9e0>
  43d4ac:	b	43d3a8 <ferror@plt+0x3aad8>
  43d4b0:	ldr	x0, [x21, #8]
  43d4b4:	ldr	w1, [x0]
  43d4b8:	cmp	w1, #0x1
  43d4bc:	b.ne	43d470 <ferror@plt+0x3aba0>  // b.any
  43d4c0:	ldr	x1, [x21, #16]
  43d4c4:	ldr	w1, [x1]
  43d4c8:	cmp	w1, #0x29
  43d4cc:	csel	x21, x21, x0, ne  // ne = any
  43d4d0:	b	43d470 <ferror@plt+0x3aba0>
  43d4d4:	ldr	x2, [x21, #8]
  43d4d8:	mov	w1, w20
  43d4dc:	mov	x0, x19
  43d4e0:	bl	440378 <ferror@plt+0x3daa8>
  43d4e4:	mov	x2, x24
  43d4e8:	mov	w1, w20
  43d4ec:	mov	x0, x19
  43d4f0:	bl	4402b0 <ferror@plt+0x3d9e0>
  43d4f4:	ldp	x21, x22, [sp, #32]
  43d4f8:	ldp	x23, x24, [sp, #48]
  43d4fc:	ldp	x25, x26, [sp, #64]
  43d500:	b	43ee50 <ferror@plt+0x3c580>
  43d504:	mov	x1, x21
  43d508:	mov	x0, x19
  43d50c:	bl	43aab4 <ferror@plt+0x381e4>
  43d510:	bl	43abac <ferror@plt+0x382dc>
  43d514:	mov	w2, w0
  43d518:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  43d51c:	add	x1, x1, #0x40
  43d520:	add	x0, sp, #0x70
  43d524:	bl	402350 <sprintf@plt>
  43d528:	add	x0, sp, #0x70
  43d52c:	bl	4022b0 <strlen@plt>
  43d530:	cbz	x0, 43ef1c <ferror@plt+0x3c64c>
  43d534:	add	x20, sp, #0x70
  43d538:	add	x21, x0, x20
  43d53c:	mov	x23, #0xff                  	// #255
  43d540:	b	43d564 <ferror@plt+0x3ac94>
  43d544:	ldr	x0, [x19, #256]
  43d548:	add	x1, x0, #0x1
  43d54c:	str	x1, [x19, #256]
  43d550:	strb	w22, [x19, x0]
  43d554:	strb	w22, [x19, #264]
  43d558:	add	x20, x20, #0x1
  43d55c:	cmp	x20, x21
  43d560:	b.eq	43d5a0 <ferror@plt+0x3acd0>  // b.none
  43d564:	ldrb	w22, [x20]
  43d568:	ldr	x0, [x19, #256]
  43d56c:	cmp	x0, #0xff
  43d570:	b.ne	43d544 <ferror@plt+0x3ac74>  // b.any
  43d574:	strb	wzr, [x19, #255]
  43d578:	ldr	x3, [x19, #272]
  43d57c:	ldr	x2, [x19, #280]
  43d580:	mov	x1, x23
  43d584:	mov	x0, x19
  43d588:	blr	x3
  43d58c:	str	xzr, [x19, #256]
  43d590:	ldr	x0, [x19, #320]
  43d594:	add	x0, x0, #0x1
  43d598:	str	x0, [x19, #320]
  43d59c:	b	43d544 <ferror@plt+0x3ac74>
  43d5a0:	ldp	x21, x22, [sp, #32]
  43d5a4:	ldp	x23, x24, [sp, #48]
  43d5a8:	ldp	x25, x26, [sp, #64]
  43d5ac:	b	43ee50 <ferror@plt+0x3c580>
  43d5b0:	ldr	x1, [x0, #8]
  43d5b4:	mov	x0, x19
  43d5b8:	bl	43aab4 <ferror@plt+0x381e4>
  43d5bc:	bl	43abac <ferror@plt+0x382dc>
  43d5c0:	add	w22, w22, w0
  43d5c4:	ldr	x21, [x21, #16]
  43d5c8:	cbz	x21, 43d5f4 <ferror@plt+0x3ad24>
  43d5cc:	ldr	w0, [x21]
  43d5d0:	cmp	w0, #0x2f
  43d5d4:	b.ne	43d5f4 <ferror@plt+0x3ad24>  // b.any
  43d5d8:	ldr	x0, [x21, #8]
  43d5dc:	cbz	x0, 43d5f4 <ferror@plt+0x3ad24>
  43d5e0:	ldr	w1, [x0]
  43d5e4:	cmp	w1, #0x4b
  43d5e8:	b.eq	43d5b0 <ferror@plt+0x3ace0>  // b.none
  43d5ec:	add	w22, w22, #0x1
  43d5f0:	b	43d5c4 <ferror@plt+0x3acf4>
  43d5f4:	mov	w2, w22
  43d5f8:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  43d5fc:	add	x1, x1, #0x40
  43d600:	add	x0, sp, #0x70
  43d604:	bl	402350 <sprintf@plt>
  43d608:	add	x0, sp, #0x70
  43d60c:	bl	4022b0 <strlen@plt>
  43d610:	cbz	x0, 43ef2c <ferror@plt+0x3c65c>
  43d614:	add	x20, sp, #0x70
  43d618:	add	x22, x0, x20
  43d61c:	mov	x23, #0xff                  	// #255
  43d620:	b	43d644 <ferror@plt+0x3ad74>
  43d624:	ldr	x0, [x19, #256]
  43d628:	add	x1, x0, #0x1
  43d62c:	str	x1, [x19, #256]
  43d630:	strb	w21, [x19, x0]
  43d634:	strb	w21, [x19, #264]
  43d638:	add	x20, x20, #0x1
  43d63c:	cmp	x20, x22
  43d640:	b.eq	43d680 <ferror@plt+0x3adb0>  // b.none
  43d644:	ldrb	w21, [x20]
  43d648:	ldr	x0, [x19, #256]
  43d64c:	cmp	x0, #0xff
  43d650:	b.ne	43d624 <ferror@plt+0x3ad54>  // b.any
  43d654:	strb	wzr, [x19, #255]
  43d658:	ldr	x3, [x19, #272]
  43d65c:	ldr	x2, [x19, #280]
  43d660:	mov	x1, x23
  43d664:	mov	x0, x19
  43d668:	blr	x3
  43d66c:	str	xzr, [x19, #256]
  43d670:	ldr	x0, [x19, #320]
  43d674:	add	x0, x0, #0x1
  43d678:	str	x0, [x19, #320]
  43d67c:	b	43d624 <ferror@plt+0x3ad54>
  43d680:	ldp	x21, x22, [sp, #32]
  43d684:	ldp	x23, x24, [sp, #48]
  43d688:	ldp	x25, x26, [sp, #64]
  43d68c:	b	43ee50 <ferror@plt+0x3c580>
  43d690:	mov	x23, #0x0                   	// #0
  43d694:	b	43d49c <ferror@plt+0x3abcc>
  43d698:	strb	wzr, [x19, #255]
  43d69c:	ldr	x3, [x19, #272]
  43d6a0:	ldr	x2, [x19, #280]
  43d6a4:	mov	x1, #0xff                  	// #255
  43d6a8:	mov	x0, x19
  43d6ac:	blr	x3
  43d6b0:	str	xzr, [x19, #256]
  43d6b4:	ldr	x0, [x19, #320]
  43d6b8:	add	x0, x0, #0x1
  43d6bc:	str	x0, [x19, #320]
  43d6c0:	b	43d358 <ferror@plt+0x3aa88>
  43d6c4:	strb	wzr, [x19, #255]
  43d6c8:	ldr	x3, [x19, #272]
  43d6cc:	ldr	x2, [x19, #280]
  43d6d0:	mov	x1, #0xff                  	// #255
  43d6d4:	mov	x0, x19
  43d6d8:	blr	x3
  43d6dc:	str	xzr, [x19, #256]
  43d6e0:	ldr	x0, [x19, #320]
  43d6e4:	add	x0, x0, #0x1
  43d6e8:	str	x0, [x19, #320]
  43d6ec:	b	43d38c <ferror@plt+0x3aabc>
  43d6f0:	mov	x2, x21
  43d6f4:	mov	w1, w20
  43d6f8:	mov	x0, x19
  43d6fc:	bl	43ef90 <ferror@plt+0x3c6c0>
  43d700:	ldp	x21, x22, [sp, #32]
  43d704:	ldp	x23, x24, [sp, #48]
  43d708:	ldp	x25, x26, [sp, #64]
  43d70c:	b	43ee50 <ferror@plt+0x3c580>
  43d710:	strb	wzr, [x19, #255]
  43d714:	ldr	x3, [x19, #272]
  43d718:	ldr	x2, [x19, #280]
  43d71c:	mov	x1, #0xff                  	// #255
  43d720:	mov	x0, x19
  43d724:	blr	x3
  43d728:	str	xzr, [x19, #256]
  43d72c:	ldr	x0, [x19, #320]
  43d730:	add	x0, x0, #0x1
  43d734:	str	x0, [x19, #320]
  43d738:	b	43d3e0 <ferror@plt+0x3ab10>
  43d73c:	strb	wzr, [x19, #255]
  43d740:	ldr	x3, [x19, #272]
  43d744:	ldr	x2, [x19, #280]
  43d748:	mov	x1, #0xff                  	// #255
  43d74c:	mov	x0, x19
  43d750:	blr	x3
  43d754:	str	xzr, [x19, #256]
  43d758:	ldr	x0, [x19, #320]
  43d75c:	add	x0, x0, #0x1
  43d760:	str	x0, [x19, #320]
  43d764:	b	43d414 <ferror@plt+0x3ab44>
  43d768:	mov	x2, x21
  43d76c:	mov	w1, w20
  43d770:	mov	x0, x19
  43d774:	bl	440378 <ferror@plt+0x3daa8>
  43d778:	ldp	x21, x22, [sp, #32]
  43d77c:	ldp	x23, x24, [sp, #48]
  43d780:	ldp	x25, x26, [sp, #64]
  43d784:	b	43ee50 <ferror@plt+0x3c580>
  43d788:	ldr	x0, [x22, #16]
  43d78c:	ldr	w0, [x0]
  43d790:	cmp	w0, #0x39
  43d794:	b.eq	43d7b0 <ferror@plt+0x3aee0>  // b.none
  43d798:	mov	w0, #0x1                   	// #1
  43d79c:	str	w0, [x19, #304]
  43d7a0:	ldp	x21, x22, [sp, #32]
  43d7a4:	ldp	x23, x24, [sp, #48]
  43d7a8:	ldp	x25, x26, [sp, #64]
  43d7ac:	b	43ee50 <ferror@plt+0x3c580>
  43d7b0:	ldr	x21, [x22, #8]
  43d7b4:	mov	x0, x21
  43d7b8:	bl	43a76c <ferror@plt+0x37e9c>
  43d7bc:	cbnz	w0, 43d8c4 <ferror@plt+0x3aff4>
  43d7c0:	mov	x2, x22
  43d7c4:	mov	w1, w20
  43d7c8:	mov	x0, x19
  43d7cc:	bl	440474 <ferror@plt+0x3dba4>
  43d7d0:	cbnz	w0, 43ef3c <ferror@plt+0x3c66c>
  43d7d4:	ldr	x0, [x22, #8]
  43d7d8:	ldr	w1, [x0]
  43d7dc:	cmp	w1, #0x32
  43d7e0:	b.eq	43da1c <ferror@plt+0x3b14c>  // b.none
  43d7e4:	ldr	x0, [x22, #8]
  43d7e8:	ldr	x0, [x0, #8]
  43d7ec:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  43d7f0:	add	x1, x1, #0xda0
  43d7f4:	ldr	x0, [x0]
  43d7f8:	bl	402620 <strcmp@plt>
  43d7fc:	cbnz	w0, 43d814 <ferror@plt+0x3af44>
  43d800:	ldr	x0, [x22, #16]
  43d804:	ldr	x0, [x0, #8]
  43d808:	ldr	w1, [x0]
  43d80c:	cmp	w1, #0x3
  43d810:	b.eq	43da90 <ferror@plt+0x3b1c0>  // b.none
  43d814:	ldr	x0, [x22, #16]
  43d818:	ldr	x2, [x0, #8]
  43d81c:	mov	w1, w20
  43d820:	mov	x0, x19
  43d824:	bl	440378 <ferror@plt+0x3daa8>
  43d828:	ldr	x21, [x22, #8]
  43d82c:	ldr	x0, [x21, #8]
  43d830:	ldr	x23, [x0]
  43d834:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  43d838:	add	x1, x1, #0xda8
  43d83c:	mov	x0, x23
  43d840:	bl	402620 <strcmp@plt>
  43d844:	cbnz	w0, 43db14 <ferror@plt+0x3b244>
  43d848:	ldr	x0, [x19, #256]
  43d84c:	cmp	x0, #0xff
  43d850:	b.eq	43dabc <ferror@plt+0x3b1ec>  // b.none
  43d854:	ldr	x1, [x19, #256]
  43d858:	add	x0, x1, #0x1
  43d85c:	str	x0, [x19, #256]
  43d860:	mov	w0, #0x5b                  	// #91
  43d864:	strb	w0, [x19, x1]
  43d868:	strb	w0, [x19, #264]
  43d86c:	ldr	x0, [x22, #16]
  43d870:	ldr	x2, [x0, #16]
  43d874:	mov	w1, w20
  43d878:	mov	x0, x19
  43d87c:	bl	43ef90 <ferror@plt+0x3c6c0>
  43d880:	ldr	x0, [x19, #256]
  43d884:	cmp	x0, #0xff
  43d888:	b.eq	43dae8 <ferror@plt+0x3b218>  // b.none
  43d88c:	ldr	x1, [x19, #256]
  43d890:	add	x0, x1, #0x1
  43d894:	str	x0, [x19, #256]
  43d898:	mov	w0, #0x5d                  	// #93
  43d89c:	strb	w0, [x19, x1]
  43d8a0:	strb	w0, [x19, #264]
  43d8a4:	ldr	x0, [x22, #8]
  43d8a8:	ldr	w1, [x0]
  43d8ac:	cmp	w1, #0x32
  43d8b0:	b.eq	43db54 <ferror@plt+0x3b284>  // b.none
  43d8b4:	ldp	x21, x22, [sp, #32]
  43d8b8:	ldp	x23, x24, [sp, #48]
  43d8bc:	ldp	x25, x26, [sp, #64]
  43d8c0:	b	43ee50 <ferror@plt+0x3c580>
  43d8c4:	mov	x2, x21
  43d8c8:	mov	w1, w20
  43d8cc:	mov	x0, x19
  43d8d0:	bl	4402b0 <ferror@plt+0x3d9e0>
  43d8d4:	ldr	x0, [x19, #256]
  43d8d8:	cmp	x0, #0xff
  43d8dc:	b.eq	43d920 <ferror@plt+0x3b050>  // b.none
  43d8e0:	ldr	x1, [x19, #256]
  43d8e4:	add	x0, x1, #0x1
  43d8e8:	str	x0, [x19, #256]
  43d8ec:	mov	w0, #0x3c                  	// #60
  43d8f0:	strb	w0, [x19, x1]
  43d8f4:	strb	w0, [x19, #264]
  43d8f8:	ldr	x0, [x22, #16]
  43d8fc:	ldr	x2, [x0, #8]
  43d900:	mov	w1, w20
  43d904:	mov	x0, x19
  43d908:	bl	43ef90 <ferror@plt+0x3c6c0>
  43d90c:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43d910:	add	x21, x21, #0xd98
  43d914:	add	x24, x21, #0x2
  43d918:	mov	x25, #0xff                  	// #255
  43d91c:	b	43d96c <ferror@plt+0x3b09c>
  43d920:	strb	wzr, [x19, #255]
  43d924:	ldr	x3, [x19, #272]
  43d928:	ldr	x2, [x19, #280]
  43d92c:	mov	x1, #0xff                  	// #255
  43d930:	mov	x0, x19
  43d934:	blr	x3
  43d938:	str	xzr, [x19, #256]
  43d93c:	ldr	x0, [x19, #320]
  43d940:	add	x0, x0, #0x1
  43d944:	str	x0, [x19, #320]
  43d948:	b	43d8e0 <ferror@plt+0x3b010>
  43d94c:	ldr	x0, [x19, #256]
  43d950:	add	x1, x0, #0x1
  43d954:	str	x1, [x19, #256]
  43d958:	strb	w23, [x19, x0]
  43d95c:	strb	w23, [x19, #264]
  43d960:	add	x21, x21, #0x1
  43d964:	cmp	x21, x24
  43d968:	b.eq	43d9a8 <ferror@plt+0x3b0d8>  // b.none
  43d96c:	ldrb	w23, [x21]
  43d970:	ldr	x0, [x19, #256]
  43d974:	cmp	x0, #0xff
  43d978:	b.ne	43d94c <ferror@plt+0x3b07c>  // b.any
  43d97c:	strb	wzr, [x19, #255]
  43d980:	ldr	x3, [x19, #272]
  43d984:	ldr	x2, [x19, #280]
  43d988:	mov	x1, x25
  43d98c:	mov	x0, x19
  43d990:	blr	x3
  43d994:	str	xzr, [x19, #256]
  43d998:	ldr	x0, [x19, #320]
  43d99c:	add	x0, x0, #0x1
  43d9a0:	str	x0, [x19, #320]
  43d9a4:	b	43d94c <ferror@plt+0x3b07c>
  43d9a8:	ldr	x0, [x22, #16]
  43d9ac:	ldr	x2, [x0, #16]
  43d9b0:	mov	w1, w20
  43d9b4:	mov	x0, x19
  43d9b8:	bl	43ef90 <ferror@plt+0x3c6c0>
  43d9bc:	ldr	x0, [x19, #256]
  43d9c0:	cmp	x0, #0xff
  43d9c4:	b.eq	43d9f0 <ferror@plt+0x3b120>  // b.none
  43d9c8:	ldr	x1, [x19, #256]
  43d9cc:	add	x0, x1, #0x1
  43d9d0:	str	x0, [x19, #256]
  43d9d4:	mov	w0, #0x29                  	// #41
  43d9d8:	strb	w0, [x19, x1]
  43d9dc:	strb	w0, [x19, #264]
  43d9e0:	ldp	x21, x22, [sp, #32]
  43d9e4:	ldp	x23, x24, [sp, #48]
  43d9e8:	ldp	x25, x26, [sp, #64]
  43d9ec:	b	43ee50 <ferror@plt+0x3c580>
  43d9f0:	strb	wzr, [x19, #255]
  43d9f4:	ldr	x3, [x19, #272]
  43d9f8:	ldr	x2, [x19, #280]
  43d9fc:	mov	x1, #0xff                  	// #255
  43da00:	mov	x0, x19
  43da04:	blr	x3
  43da08:	str	xzr, [x19, #256]
  43da0c:	ldr	x0, [x19, #320]
  43da10:	add	x0, x0, #0x1
  43da14:	str	x0, [x19, #320]
  43da18:	b	43d9c8 <ferror@plt+0x3b0f8>
  43da1c:	ldr	x0, [x0, #8]
  43da20:	ldr	w1, [x0, #16]
  43da24:	cmp	w1, #0x1
  43da28:	b.ne	43d7e4 <ferror@plt+0x3af14>  // b.any
  43da2c:	ldr	x0, [x0, #8]
  43da30:	ldrb	w0, [x0]
  43da34:	cmp	w0, #0x3e
  43da38:	b.ne	43d7e4 <ferror@plt+0x3af14>  // b.any
  43da3c:	ldr	x0, [x19, #256]
  43da40:	cmp	x0, #0xff
  43da44:	b.eq	43da64 <ferror@plt+0x3b194>  // b.none
  43da48:	ldr	x1, [x19, #256]
  43da4c:	add	x0, x1, #0x1
  43da50:	str	x0, [x19, #256]
  43da54:	mov	w0, #0x28                  	// #40
  43da58:	strb	w0, [x19, x1]
  43da5c:	strb	w0, [x19, #264]
  43da60:	b	43d7e4 <ferror@plt+0x3af14>
  43da64:	strb	wzr, [x19, #255]
  43da68:	ldr	x3, [x19, #272]
  43da6c:	ldr	x2, [x19, #280]
  43da70:	mov	x1, #0xff                  	// #255
  43da74:	mov	x0, x19
  43da78:	blr	x3
  43da7c:	str	xzr, [x19, #256]
  43da80:	ldr	x0, [x19, #320]
  43da84:	add	x0, x0, #0x1
  43da88:	str	x0, [x19, #320]
  43da8c:	b	43da48 <ferror@plt+0x3b178>
  43da90:	ldr	x1, [x0, #16]
  43da94:	ldr	w1, [x1]
  43da98:	cmp	w1, #0x29
  43da9c:	b.eq	43daa8 <ferror@plt+0x3b1d8>  // b.none
  43daa0:	mov	w1, #0x1                   	// #1
  43daa4:	str	w1, [x19, #304]
  43daa8:	ldr	x2, [x0, #8]
  43daac:	mov	w1, w20
  43dab0:	mov	x0, x19
  43dab4:	bl	440378 <ferror@plt+0x3daa8>
  43dab8:	b	43d828 <ferror@plt+0x3af58>
  43dabc:	strb	wzr, [x19, #255]
  43dac0:	ldr	x3, [x19, #272]
  43dac4:	ldr	x2, [x19, #280]
  43dac8:	mov	x1, #0xff                  	// #255
  43dacc:	mov	x0, x19
  43dad0:	blr	x3
  43dad4:	str	xzr, [x19, #256]
  43dad8:	ldr	x0, [x19, #320]
  43dadc:	add	x0, x0, #0x1
  43dae0:	str	x0, [x19, #320]
  43dae4:	b	43d854 <ferror@plt+0x3af84>
  43dae8:	strb	wzr, [x19, #255]
  43daec:	ldr	x3, [x19, #272]
  43daf0:	ldr	x2, [x19, #280]
  43daf4:	mov	x1, #0xff                  	// #255
  43daf8:	mov	x0, x19
  43dafc:	blr	x3
  43db00:	str	xzr, [x19, #256]
  43db04:	ldr	x0, [x19, #320]
  43db08:	add	x0, x0, #0x1
  43db0c:	str	x0, [x19, #320]
  43db10:	b	43d88c <ferror@plt+0x3afbc>
  43db14:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  43db18:	add	x1, x1, #0xda0
  43db1c:	mov	x0, x23
  43db20:	bl	402620 <strcmp@plt>
  43db24:	cbnz	w0, 43db40 <ferror@plt+0x3b270>
  43db28:	ldr	x0, [x22, #16]
  43db2c:	ldr	x2, [x0, #16]
  43db30:	mov	w1, w20
  43db34:	mov	x0, x19
  43db38:	bl	440378 <ferror@plt+0x3daa8>
  43db3c:	b	43d8a4 <ferror@plt+0x3afd4>
  43db40:	mov	x2, x21
  43db44:	mov	w1, w20
  43db48:	mov	x0, x19
  43db4c:	bl	4402b0 <ferror@plt+0x3d9e0>
  43db50:	b	43db28 <ferror@plt+0x3b258>
  43db54:	ldr	x0, [x0, #8]
  43db58:	ldr	w1, [x0, #16]
  43db5c:	cmp	w1, #0x1
  43db60:	b.eq	43db74 <ferror@plt+0x3b2a4>  // b.none
  43db64:	ldp	x21, x22, [sp, #32]
  43db68:	ldp	x23, x24, [sp, #48]
  43db6c:	ldp	x25, x26, [sp, #64]
  43db70:	b	43ee50 <ferror@plt+0x3c580>
  43db74:	ldr	x0, [x0, #8]
  43db78:	ldrb	w0, [x0]
  43db7c:	cmp	w0, #0x3e
  43db80:	b.eq	43db94 <ferror@plt+0x3b2c4>  // b.none
  43db84:	ldp	x21, x22, [sp, #32]
  43db88:	ldp	x23, x24, [sp, #48]
  43db8c:	ldp	x25, x26, [sp, #64]
  43db90:	b	43ee50 <ferror@plt+0x3c580>
  43db94:	ldr	x0, [x19, #256]
  43db98:	cmp	x0, #0xff
  43db9c:	b.eq	43dbc8 <ferror@plt+0x3b2f8>  // b.none
  43dba0:	ldr	x1, [x19, #256]
  43dba4:	add	x0, x1, #0x1
  43dba8:	str	x0, [x19, #256]
  43dbac:	mov	w0, #0x29                  	// #41
  43dbb0:	strb	w0, [x19, x1]
  43dbb4:	strb	w0, [x19, #264]
  43dbb8:	ldp	x21, x22, [sp, #32]
  43dbbc:	ldp	x23, x24, [sp, #48]
  43dbc0:	ldp	x25, x26, [sp, #64]
  43dbc4:	b	43ee50 <ferror@plt+0x3c580>
  43dbc8:	strb	wzr, [x19, #255]
  43dbcc:	ldr	x3, [x19, #272]
  43dbd0:	ldr	x2, [x19, #280]
  43dbd4:	mov	x1, #0xff                  	// #255
  43dbd8:	mov	x0, x19
  43dbdc:	blr	x3
  43dbe0:	str	xzr, [x19, #256]
  43dbe4:	ldr	x0, [x19, #320]
  43dbe8:	add	x0, x0, #0x1
  43dbec:	str	x0, [x19, #320]
  43dbf0:	b	43dba0 <ferror@plt+0x3b2d0>
  43dbf4:	mov	w0, #0x1                   	// #1
  43dbf8:	str	w0, [x19, #304]
  43dbfc:	ldp	x21, x22, [sp, #32]
  43dc00:	ldp	x23, x24, [sp, #48]
  43dc04:	ldp	x25, x26, [sp, #64]
  43dc08:	b	43ee50 <ferror@plt+0x3c580>
  43dc0c:	ldr	x0, [x22, #16]
  43dc10:	ldr	w1, [x0]
  43dc14:	cmp	w1, #0x3b
  43dc18:	b.ne	43dc2c <ferror@plt+0x3b35c>  // b.any
  43dc1c:	ldr	x0, [x0, #16]
  43dc20:	ldr	w0, [x0]
  43dc24:	cmp	w0, #0x3c
  43dc28:	b.eq	43dc44 <ferror@plt+0x3b374>  // b.none
  43dc2c:	mov	w0, #0x1                   	// #1
  43dc30:	str	w0, [x19, #304]
  43dc34:	ldp	x21, x22, [sp, #32]
  43dc38:	ldp	x23, x24, [sp, #48]
  43dc3c:	ldp	x25, x26, [sp, #64]
  43dc40:	b	43ee50 <ferror@plt+0x3c580>
  43dc44:	mov	x2, x22
  43dc48:	mov	w1, w20
  43dc4c:	mov	x0, x19
  43dc50:	bl	440474 <ferror@plt+0x3dba4>
  43dc54:	cbnz	w0, 43ef4c <ferror@plt+0x3c67c>
  43dc58:	ldr	x24, [x22, #8]
  43dc5c:	ldr	x0, [x22, #16]
  43dc60:	ldr	x22, [x0, #8]
  43dc64:	ldr	x0, [x0, #16]
  43dc68:	ldr	x23, [x0, #8]
  43dc6c:	ldr	x21, [x0, #16]
  43dc70:	ldr	x0, [x24, #8]
  43dc74:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  43dc78:	add	x1, x1, #0xdb0
  43dc7c:	ldr	x0, [x0]
  43dc80:	bl	402620 <strcmp@plt>
  43dc84:	cbnz	w0, 43dcec <ferror@plt+0x3b41c>
  43dc88:	mov	x2, x22
  43dc8c:	mov	w1, w20
  43dc90:	mov	x0, x19
  43dc94:	bl	440378 <ferror@plt+0x3daa8>
  43dc98:	mov	x2, x24
  43dc9c:	mov	w1, w20
  43dca0:	mov	x0, x19
  43dca4:	bl	4402b0 <ferror@plt+0x3d9e0>
  43dca8:	mov	x2, x23
  43dcac:	mov	w1, w20
  43dcb0:	mov	x0, x19
  43dcb4:	bl	440378 <ferror@plt+0x3daa8>
  43dcb8:	mov	x2, #0x3                   	// #3
  43dcbc:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  43dcc0:	add	x1, x1, #0xdb8
  43dcc4:	mov	x0, x19
  43dcc8:	bl	43a9a4 <ferror@plt+0x380d4>
  43dccc:	mov	x2, x21
  43dcd0:	mov	w1, w20
  43dcd4:	mov	x0, x19
  43dcd8:	bl	440378 <ferror@plt+0x3daa8>
  43dcdc:	ldp	x21, x22, [sp, #32]
  43dce0:	ldp	x23, x24, [sp, #48]
  43dce4:	ldp	x25, x26, [sp, #64]
  43dce8:	b	43ee50 <ferror@plt+0x3c580>
  43dcec:	mov	x2, #0x4                   	// #4
  43dcf0:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  43dcf4:	add	x1, x1, #0xdc0
  43dcf8:	mov	x0, x19
  43dcfc:	bl	43a9a4 <ferror@plt+0x380d4>
  43dd00:	ldr	x0, [x22, #8]
  43dd04:	cbz	x0, 43dd3c <ferror@plt+0x3b46c>
  43dd08:	mov	x2, x22
  43dd0c:	mov	w1, w20
  43dd10:	mov	x0, x19
  43dd14:	bl	440378 <ferror@plt+0x3daa8>
  43dd18:	ldr	x0, [x19, #256]
  43dd1c:	cmp	x0, #0xff
  43dd20:	b.eq	43dd70 <ferror@plt+0x3b4a0>  // b.none
  43dd24:	ldr	x1, [x19, #256]
  43dd28:	add	x0, x1, #0x1
  43dd2c:	str	x0, [x19, #256]
  43dd30:	mov	w0, #0x20                  	// #32
  43dd34:	strb	w0, [x19, x1]
  43dd38:	strb	w0, [x19, #264]
  43dd3c:	mov	x2, x23
  43dd40:	mov	w1, w20
  43dd44:	mov	x0, x19
  43dd48:	bl	43ef90 <ferror@plt+0x3c6c0>
  43dd4c:	cbz	x21, 43ef5c <ferror@plt+0x3c68c>
  43dd50:	mov	x2, x21
  43dd54:	mov	w1, w20
  43dd58:	mov	x0, x19
  43dd5c:	bl	440378 <ferror@plt+0x3daa8>
  43dd60:	ldp	x21, x22, [sp, #32]
  43dd64:	ldp	x23, x24, [sp, #48]
  43dd68:	ldp	x25, x26, [sp, #64]
  43dd6c:	b	43ee50 <ferror@plt+0x3c580>
  43dd70:	strb	wzr, [x19, #255]
  43dd74:	ldr	x3, [x19, #272]
  43dd78:	ldr	x2, [x19, #280]
  43dd7c:	mov	x1, #0xff                  	// #255
  43dd80:	mov	x0, x19
  43dd84:	blr	x3
  43dd88:	str	xzr, [x19, #256]
  43dd8c:	ldr	x0, [x19, #320]
  43dd90:	add	x0, x0, #0x1
  43dd94:	str	x0, [x19, #320]
  43dd98:	b	43dd24 <ferror@plt+0x3b454>
  43dd9c:	mov	w0, #0x1                   	// #1
  43dda0:	str	w0, [x19, #304]
  43dda4:	ldp	x21, x22, [sp, #32]
  43dda8:	ldp	x23, x24, [sp, #48]
  43ddac:	ldp	x25, x26, [sp, #64]
  43ddb0:	b	43ee50 <ferror@plt+0x3c580>
  43ddb4:	ldr	x1, [x22, #8]
  43ddb8:	ldr	w2, [x1]
  43ddbc:	mov	w21, #0x0                   	// #0
  43ddc0:	cmp	w2, #0x27
  43ddc4:	b.eq	43de50 <ferror@plt+0x3b580>  // b.none
  43ddc8:	ldr	x0, [x19, #256]
  43ddcc:	cmp	x0, #0xff
  43ddd0:	b.eq	43e0c0 <ferror@plt+0x3b7f0>  // b.none
  43ddd4:	ldr	x1, [x19, #256]
  43ddd8:	add	x0, x1, #0x1
  43dddc:	str	x0, [x19, #256]
  43dde0:	mov	w0, #0x28                  	// #40
  43dde4:	strb	w0, [x19, x1]
  43dde8:	strb	w0, [x19, #264]
  43ddec:	ldr	x2, [x22, #8]
  43ddf0:	mov	w1, w20
  43ddf4:	mov	x0, x19
  43ddf8:	bl	43ef90 <ferror@plt+0x3c6c0>
  43ddfc:	ldr	x0, [x19, #256]
  43de00:	cmp	x0, #0xff
  43de04:	b.eq	43e0ec <ferror@plt+0x3b81c>  // b.none
  43de08:	add	x2, x0, #0x1
  43de0c:	str	x2, [x19, #256]
  43de10:	mov	w1, #0x29                  	// #41
  43de14:	strb	w1, [x19, x0]
  43de18:	strb	w1, [x19, #264]
  43de1c:	ldr	w0, [x22]
  43de20:	cmp	w0, #0x3e
  43de24:	b.eq	43e13c <ferror@plt+0x3b86c>  // b.none
  43de28:	cmp	w21, #0x8
  43de2c:	b.eq	43e188 <ferror@plt+0x3b8b8>  // b.none
  43de30:	ldr	x2, [x22, #16]
  43de34:	mov	w1, w20
  43de38:	mov	x0, x19
  43de3c:	bl	43ef90 <ferror@plt+0x3c6c0>
  43de40:	ldp	x21, x22, [sp, #32]
  43de44:	ldp	x23, x24, [sp, #48]
  43de48:	ldp	x25, x26, [sp, #64]
  43de4c:	b	43ee50 <ferror@plt+0x3c580>
  43de50:	ldr	x1, [x1, #8]
  43de54:	ldr	w21, [x1, #28]
  43de58:	cmp	w21, #0x6
  43de5c:	b.ls	43dec0 <ferror@plt+0x3b5f0>  // b.plast
  43de60:	cmp	w21, #0x7
  43de64:	b.ne	43ddc8 <ferror@plt+0x3b4f8>  // b.any
  43de68:	ldr	x1, [x22, #16]
  43de6c:	ldr	w2, [x1]
  43de70:	cbnz	w2, 43ddc8 <ferror@plt+0x3b4f8>
  43de74:	ldr	w2, [x1, #16]
  43de78:	cmp	w0, #0x3d
  43de7c:	ccmp	w2, #0x1, #0x0, eq  // eq = none
  43de80:	b.ne	43ddc8 <ferror@plt+0x3b4f8>  // b.any
  43de84:	ldr	x0, [x1, #8]
  43de88:	ldrb	w0, [x0]
  43de8c:	cmp	w0, #0x30
  43de90:	b.eq	43e09c <ferror@plt+0x3b7cc>  // b.none
  43de94:	cmp	w0, #0x31
  43de98:	b.ne	43ddc8 <ferror@plt+0x3b4f8>  // b.any
  43de9c:	mov	x2, #0x4                   	// #4
  43dea0:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a094>
  43dea4:	add	x1, x1, #0x7a0
  43dea8:	mov	x0, x19
  43deac:	bl	43a9a4 <ferror@plt+0x380d4>
  43deb0:	ldp	x21, x22, [sp, #32]
  43deb4:	ldp	x23, x24, [sp, #48]
  43deb8:	ldp	x25, x26, [sp, #64]
  43debc:	b	43ee50 <ferror@plt+0x3c580>
  43dec0:	cbz	w21, 43ddc8 <ferror@plt+0x3b4f8>
  43dec4:	ldr	x1, [x22, #16]
  43dec8:	ldr	w1, [x1]
  43decc:	cbnz	w1, 43ddc8 <ferror@plt+0x3b4f8>
  43ded0:	cmp	w0, #0x3e
  43ded4:	b.eq	43df20 <ferror@plt+0x3b650>  // b.none
  43ded8:	ldr	x2, [x22, #16]
  43dedc:	mov	w1, w20
  43dee0:	mov	x0, x19
  43dee4:	bl	43ef90 <ferror@plt+0x3c6c0>
  43dee8:	cmp	w21, #0x4
  43deec:	b.eq	43e054 <ferror@plt+0x3b784>  // b.none
  43def0:	b.ls	43df74 <ferror@plt+0x3b6a4>  // b.plast
  43def4:	cmp	w21, #0x5
  43def8:	b.eq	43e078 <ferror@plt+0x3b7a8>  // b.none
  43defc:	mov	x2, #0x3                   	// #3
  43df00:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  43df04:	add	x1, x1, #0xdd8
  43df08:	mov	x0, x19
  43df0c:	bl	43a9a4 <ferror@plt+0x380d4>
  43df10:	ldp	x21, x22, [sp, #32]
  43df14:	ldp	x23, x24, [sp, #48]
  43df18:	ldp	x25, x26, [sp, #64]
  43df1c:	b	43ee50 <ferror@plt+0x3c580>
  43df20:	ldr	x0, [x19, #256]
  43df24:	cmp	x0, #0xff
  43df28:	b.eq	43df48 <ferror@plt+0x3b678>  // b.none
  43df2c:	ldr	x1, [x19, #256]
  43df30:	add	x0, x1, #0x1
  43df34:	str	x0, [x19, #256]
  43df38:	mov	w0, #0x2d                  	// #45
  43df3c:	strb	w0, [x19, x1]
  43df40:	strb	w0, [x19, #264]
  43df44:	b	43ded8 <ferror@plt+0x3b608>
  43df48:	strb	wzr, [x19, #255]
  43df4c:	ldr	x3, [x19, #272]
  43df50:	ldr	x2, [x19, #280]
  43df54:	mov	x1, #0xff                  	// #255
  43df58:	mov	x0, x19
  43df5c:	blr	x3
  43df60:	str	xzr, [x19, #256]
  43df64:	ldr	x0, [x19, #320]
  43df68:	add	x0, x0, #0x1
  43df6c:	str	x0, [x19, #320]
  43df70:	b	43df2c <ferror@plt+0x3b65c>
  43df74:	cmp	w21, #0x2
  43df78:	b.eq	43dfc8 <ferror@plt+0x3b6f8>  // b.none
  43df7c:	cmp	w21, #0x3
  43df80:	b.ne	43dfb8 <ferror@plt+0x3b6e8>  // b.any
  43df84:	ldr	x0, [x19, #256]
  43df88:	cmp	x0, #0xff
  43df8c:	b.eq	43e028 <ferror@plt+0x3b758>  // b.none
  43df90:	ldr	x1, [x19, #256]
  43df94:	add	x0, x1, #0x1
  43df98:	str	x0, [x19, #256]
  43df9c:	mov	w0, #0x6c                  	// #108
  43dfa0:	strb	w0, [x19, x1]
  43dfa4:	strb	w0, [x19, #264]
  43dfa8:	ldp	x21, x22, [sp, #32]
  43dfac:	ldp	x23, x24, [sp, #48]
  43dfb0:	ldp	x25, x26, [sp, #64]
  43dfb4:	b	43ee50 <ferror@plt+0x3c580>
  43dfb8:	ldp	x21, x22, [sp, #32]
  43dfbc:	ldp	x23, x24, [sp, #48]
  43dfc0:	ldp	x25, x26, [sp, #64]
  43dfc4:	b	43ee50 <ferror@plt+0x3c580>
  43dfc8:	ldr	x0, [x19, #256]
  43dfcc:	cmp	x0, #0xff
  43dfd0:	b.eq	43dffc <ferror@plt+0x3b72c>  // b.none
  43dfd4:	ldr	x1, [x19, #256]
  43dfd8:	add	x0, x1, #0x1
  43dfdc:	str	x0, [x19, #256]
  43dfe0:	mov	w0, #0x75                  	// #117
  43dfe4:	strb	w0, [x19, x1]
  43dfe8:	strb	w0, [x19, #264]
  43dfec:	ldp	x21, x22, [sp, #32]
  43dff0:	ldp	x23, x24, [sp, #48]
  43dff4:	ldp	x25, x26, [sp, #64]
  43dff8:	b	43ee50 <ferror@plt+0x3c580>
  43dffc:	strb	wzr, [x19, #255]
  43e000:	ldr	x3, [x19, #272]
  43e004:	ldr	x2, [x19, #280]
  43e008:	mov	x1, #0xff                  	// #255
  43e00c:	mov	x0, x19
  43e010:	blr	x3
  43e014:	str	xzr, [x19, #256]
  43e018:	ldr	x0, [x19, #320]
  43e01c:	add	x0, x0, #0x1
  43e020:	str	x0, [x19, #320]
  43e024:	b	43dfd4 <ferror@plt+0x3b704>
  43e028:	strb	wzr, [x19, #255]
  43e02c:	ldr	x3, [x19, #272]
  43e030:	ldr	x2, [x19, #280]
  43e034:	mov	x1, #0xff                  	// #255
  43e038:	mov	x0, x19
  43e03c:	blr	x3
  43e040:	str	xzr, [x19, #256]
  43e044:	ldr	x0, [x19, #320]
  43e048:	add	x0, x0, #0x1
  43e04c:	str	x0, [x19, #320]
  43e050:	b	43df90 <ferror@plt+0x3b6c0>
  43e054:	mov	x2, #0x2                   	// #2
  43e058:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  43e05c:	add	x1, x1, #0xdc8
  43e060:	mov	x0, x19
  43e064:	bl	43a9a4 <ferror@plt+0x380d4>
  43e068:	ldp	x21, x22, [sp, #32]
  43e06c:	ldp	x23, x24, [sp, #48]
  43e070:	ldp	x25, x26, [sp, #64]
  43e074:	b	43ee50 <ferror@plt+0x3c580>
  43e078:	mov	x2, #0x2                   	// #2
  43e07c:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  43e080:	add	x1, x1, #0xdd0
  43e084:	mov	x0, x19
  43e088:	bl	43a9a4 <ferror@plt+0x380d4>
  43e08c:	ldp	x21, x22, [sp, #32]
  43e090:	ldp	x23, x24, [sp, #48]
  43e094:	ldp	x25, x26, [sp, #64]
  43e098:	b	43ee50 <ferror@plt+0x3c580>
  43e09c:	mov	x2, #0x5                   	// #5
  43e0a0:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a094>
  43e0a4:	add	x1, x1, #0x7a8
  43e0a8:	mov	x0, x19
  43e0ac:	bl	43a9a4 <ferror@plt+0x380d4>
  43e0b0:	ldp	x21, x22, [sp, #32]
  43e0b4:	ldp	x23, x24, [sp, #48]
  43e0b8:	ldp	x25, x26, [sp, #64]
  43e0bc:	b	43ee50 <ferror@plt+0x3c580>
  43e0c0:	strb	wzr, [x19, #255]
  43e0c4:	ldr	x3, [x19, #272]
  43e0c8:	ldr	x2, [x19, #280]
  43e0cc:	mov	x1, #0xff                  	// #255
  43e0d0:	mov	x0, x19
  43e0d4:	blr	x3
  43e0d8:	str	xzr, [x19, #256]
  43e0dc:	ldr	x0, [x19, #320]
  43e0e0:	add	x0, x0, #0x1
  43e0e4:	str	x0, [x19, #320]
  43e0e8:	b	43ddd4 <ferror@plt+0x3b504>
  43e0ec:	strb	wzr, [x19, #255]
  43e0f0:	ldr	x3, [x19, #272]
  43e0f4:	ldr	x2, [x19, #280]
  43e0f8:	mov	x1, #0xff                  	// #255
  43e0fc:	mov	x0, x19
  43e100:	blr	x3
  43e104:	ldr	x0, [x19, #320]
  43e108:	add	x0, x0, #0x1
  43e10c:	str	x0, [x19, #320]
  43e110:	mov	x0, #0x1                   	// #1
  43e114:	str	x0, [x19, #256]
  43e118:	mov	w0, #0x29                  	// #41
  43e11c:	strb	w0, [x19]
  43e120:	strb	w0, [x19, #264]
  43e124:	ldr	w0, [x22]
  43e128:	cmp	w0, #0x3e
  43e12c:	b.eq	43e16c <ferror@plt+0x3b89c>  // b.none
  43e130:	cmp	w21, #0x8
  43e134:	b.ne	43de30 <ferror@plt+0x3b560>  // b.any
  43e138:	b	43e194 <ferror@plt+0x3b8c4>
  43e13c:	cmp	x2, #0xff
  43e140:	b.ne	43e16c <ferror@plt+0x3b89c>  // b.any
  43e144:	strb	wzr, [x19, #255]
  43e148:	ldr	x3, [x19, #272]
  43e14c:	ldr	x2, [x19, #280]
  43e150:	mov	x1, #0xff                  	// #255
  43e154:	mov	x0, x19
  43e158:	blr	x3
  43e15c:	str	xzr, [x19, #256]
  43e160:	ldr	x0, [x19, #320]
  43e164:	add	x0, x0, #0x1
  43e168:	str	x0, [x19, #320]
  43e16c:	ldr	x1, [x19, #256]
  43e170:	add	x0, x1, #0x1
  43e174:	str	x0, [x19, #256]
  43e178:	mov	w0, #0x2d                  	// #45
  43e17c:	strb	w0, [x19, x1]
  43e180:	strb	w0, [x19, #264]
  43e184:	b	43de28 <ferror@plt+0x3b558>
  43e188:	ldr	x0, [x19, #256]
  43e18c:	cmp	x0, #0xff
  43e190:	b.eq	43e1f0 <ferror@plt+0x3b920>  // b.none
  43e194:	ldr	x1, [x19, #256]
  43e198:	add	x0, x1, #0x1
  43e19c:	str	x0, [x19, #256]
  43e1a0:	mov	w0, #0x5b                  	// #91
  43e1a4:	strb	w0, [x19, x1]
  43e1a8:	strb	w0, [x19, #264]
  43e1ac:	ldr	x2, [x22, #16]
  43e1b0:	mov	w1, w20
  43e1b4:	mov	x0, x19
  43e1b8:	bl	43ef90 <ferror@plt+0x3c6c0>
  43e1bc:	ldr	x0, [x19, #256]
  43e1c0:	cmp	x0, #0xff
  43e1c4:	b.eq	43e21c <ferror@plt+0x3b94c>  // b.none
  43e1c8:	ldr	x1, [x19, #256]
  43e1cc:	add	x0, x1, #0x1
  43e1d0:	str	x0, [x19, #256]
  43e1d4:	mov	w0, #0x5d                  	// #93
  43e1d8:	strb	w0, [x19, x1]
  43e1dc:	strb	w0, [x19, #264]
  43e1e0:	ldp	x21, x22, [sp, #32]
  43e1e4:	ldp	x23, x24, [sp, #48]
  43e1e8:	ldp	x25, x26, [sp, #64]
  43e1ec:	b	43ee50 <ferror@plt+0x3c580>
  43e1f0:	strb	wzr, [x19, #255]
  43e1f4:	ldr	x3, [x19, #272]
  43e1f8:	ldr	x2, [x19, #280]
  43e1fc:	mov	x1, #0xff                  	// #255
  43e200:	mov	x0, x19
  43e204:	blr	x3
  43e208:	str	xzr, [x19, #256]
  43e20c:	ldr	x0, [x19, #320]
  43e210:	add	x0, x0, #0x1
  43e214:	str	x0, [x19, #320]
  43e218:	b	43e194 <ferror@plt+0x3b8c4>
  43e21c:	strb	wzr, [x19, #255]
  43e220:	ldr	x3, [x19, #272]
  43e224:	ldr	x2, [x19, #280]
  43e228:	mov	x1, #0xff                  	// #255
  43e22c:	mov	x0, x19
  43e230:	blr	x3
  43e234:	str	xzr, [x19, #256]
  43e238:	ldr	x0, [x19, #320]
  43e23c:	add	x0, x0, #0x1
  43e240:	str	x0, [x19, #320]
  43e244:	b	43e1c8 <ferror@plt+0x3b8f8>
  43e248:	ldr	w2, [x22, #8]
  43e24c:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  43e250:	add	x1, x1, #0x40
  43e254:	add	x0, sp, #0x70
  43e258:	bl	402350 <sprintf@plt>
  43e25c:	add	x0, sp, #0x70
  43e260:	bl	4022b0 <strlen@plt>
  43e264:	cbz	x0, 43ef6c <ferror@plt+0x3c69c>
  43e268:	add	x20, sp, #0x70
  43e26c:	add	x22, x0, x20
  43e270:	mov	x23, #0xff                  	// #255
  43e274:	b	43e298 <ferror@plt+0x3b9c8>
  43e278:	ldr	x0, [x19, #256]
  43e27c:	add	x1, x0, #0x1
  43e280:	str	x1, [x19, #256]
  43e284:	strb	w21, [x19, x0]
  43e288:	strb	w21, [x19, #264]
  43e28c:	add	x20, x20, #0x1
  43e290:	cmp	x20, x22
  43e294:	b.eq	43e2d4 <ferror@plt+0x3ba04>  // b.none
  43e298:	ldrb	w21, [x20]
  43e29c:	ldr	x0, [x19, #256]
  43e2a0:	cmp	x0, #0xff
  43e2a4:	b.ne	43e278 <ferror@plt+0x3b9a8>  // b.any
  43e2a8:	strb	wzr, [x19, #255]
  43e2ac:	ldr	x3, [x19, #272]
  43e2b0:	ldr	x2, [x19, #280]
  43e2b4:	mov	x1, x23
  43e2b8:	mov	x0, x19
  43e2bc:	blr	x3
  43e2c0:	str	xzr, [x19, #256]
  43e2c4:	ldr	x0, [x19, #320]
  43e2c8:	add	x0, x0, #0x1
  43e2cc:	str	x0, [x19, #320]
  43e2d0:	b	43e278 <ferror@plt+0x3b9a8>
  43e2d4:	ldp	x21, x22, [sp, #32]
  43e2d8:	ldp	x23, x24, [sp, #48]
  43e2dc:	ldp	x25, x26, [sp, #64]
  43e2e0:	b	43ee50 <ferror@plt+0x3c580>
  43e2e4:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43e2e8:	add	x21, x21, #0xde0
  43e2ec:	add	x24, x21, #0xe
  43e2f0:	mov	x25, #0xff                  	// #255
  43e2f4:	b	43e318 <ferror@plt+0x3ba48>
  43e2f8:	ldr	x0, [x19, #256]
  43e2fc:	add	x1, x0, #0x1
  43e300:	str	x1, [x19, #256]
  43e304:	strb	w23, [x19, x0]
  43e308:	strb	w23, [x19, #264]
  43e30c:	add	x21, x21, #0x1
  43e310:	cmp	x21, x24
  43e314:	b.eq	43e354 <ferror@plt+0x3ba84>  // b.none
  43e318:	ldrb	w23, [x21]
  43e31c:	ldr	x0, [x19, #256]
  43e320:	cmp	x0, #0xff
  43e324:	b.ne	43e2f8 <ferror@plt+0x3ba28>  // b.any
  43e328:	strb	wzr, [x19, #255]
  43e32c:	ldr	x3, [x19, #272]
  43e330:	ldr	x2, [x19, #280]
  43e334:	mov	x1, x25
  43e338:	mov	x0, x19
  43e33c:	blr	x3
  43e340:	str	xzr, [x19, #256]
  43e344:	ldr	x0, [x19, #320]
  43e348:	add	x0, x0, #0x1
  43e34c:	str	x0, [x19, #320]
  43e350:	b	43e2f8 <ferror@plt+0x3ba28>
  43e354:	ldr	x2, [x22, #8]
  43e358:	mov	w1, w20
  43e35c:	mov	x0, x19
  43e360:	bl	43ef90 <ferror@plt+0x3c6c0>
  43e364:	ldp	x21, x22, [sp, #32]
  43e368:	ldp	x23, x24, [sp, #48]
  43e36c:	ldp	x25, x26, [sp, #64]
  43e370:	b	43ee50 <ferror@plt+0x3c580>
  43e374:	ldr	x2, [x22, #8]
  43e378:	mov	w1, w20
  43e37c:	mov	x0, x19
  43e380:	bl	43ef90 <ferror@plt+0x3c6c0>
  43e384:	ldr	x2, [x22, #16]
  43e388:	mov	w1, w20
  43e38c:	mov	x0, x19
  43e390:	bl	43ef90 <ferror@plt+0x3c6c0>
  43e394:	ldp	x21, x22, [sp, #32]
  43e398:	ldp	x23, x24, [sp, #48]
  43e39c:	ldp	x25, x26, [sp, #64]
  43e3a0:	b	43ee50 <ferror@plt+0x3c580>
  43e3a4:	ldrb	w20, [x22, #8]
  43e3a8:	ldr	x0, [x19, #256]
  43e3ac:	cmp	x0, #0xff
  43e3b0:	b.eq	43e3d8 <ferror@plt+0x3bb08>  // b.none
  43e3b4:	ldr	x0, [x19, #256]
  43e3b8:	add	x1, x0, #0x1
  43e3bc:	str	x1, [x19, #256]
  43e3c0:	strb	w20, [x19, x0]
  43e3c4:	strb	w20, [x19, #264]
  43e3c8:	ldp	x21, x22, [sp, #32]
  43e3cc:	ldp	x23, x24, [sp, #48]
  43e3d0:	ldp	x25, x26, [sp, #64]
  43e3d4:	b	43ee50 <ferror@plt+0x3c580>
  43e3d8:	strb	wzr, [x19, #255]
  43e3dc:	ldr	x3, [x19, #272]
  43e3e0:	ldr	x2, [x19, #280]
  43e3e4:	mov	x1, #0xff                  	// #255
  43e3e8:	mov	x0, x19
  43e3ec:	blr	x3
  43e3f0:	str	xzr, [x19, #256]
  43e3f4:	ldr	x0, [x19, #320]
  43e3f8:	add	x0, x0, #0x1
  43e3fc:	str	x0, [x19, #320]
  43e400:	b	43e3b4 <ferror@plt+0x3bae4>
  43e404:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43e408:	add	x21, x21, #0xdf0
  43e40c:	add	x24, x21, #0xa
  43e410:	mov	x25, #0xff                  	// #255
  43e414:	b	43e438 <ferror@plt+0x3bb68>
  43e418:	ldr	x0, [x19, #256]
  43e41c:	add	x1, x0, #0x1
  43e420:	str	x1, [x19, #256]
  43e424:	strb	w23, [x19, x0]
  43e428:	strb	w23, [x19, #264]
  43e42c:	add	x21, x21, #0x1
  43e430:	cmp	x21, x24
  43e434:	b.eq	43e474 <ferror@plt+0x3bba4>  // b.none
  43e438:	ldrb	w23, [x21]
  43e43c:	ldr	x0, [x19, #256]
  43e440:	cmp	x0, #0xff
  43e444:	b.ne	43e418 <ferror@plt+0x3bb48>  // b.any
  43e448:	strb	wzr, [x19, #255]
  43e44c:	ldr	x3, [x19, #272]
  43e450:	ldr	x2, [x19, #280]
  43e454:	mov	x1, x25
  43e458:	mov	x0, x19
  43e45c:	blr	x3
  43e460:	str	xzr, [x19, #256]
  43e464:	ldr	x0, [x19, #320]
  43e468:	add	x0, x0, #0x1
  43e46c:	str	x0, [x19, #320]
  43e470:	b	43e418 <ferror@plt+0x3bb48>
  43e474:	ldr	x2, [x22, #8]
  43e478:	mov	w1, w20
  43e47c:	mov	x0, x19
  43e480:	bl	43ef90 <ferror@plt+0x3c6c0>
  43e484:	ldr	x0, [x19, #256]
  43e488:	cmp	x0, #0xff
  43e48c:	b.eq	43e4b8 <ferror@plt+0x3bbe8>  // b.none
  43e490:	ldr	x1, [x19, #256]
  43e494:	add	x0, x1, #0x1
  43e498:	str	x0, [x19, #256]
  43e49c:	mov	w0, #0x29                  	// #41
  43e4a0:	strb	w0, [x19, x1]
  43e4a4:	strb	w0, [x19, #264]
  43e4a8:	ldp	x21, x22, [sp, #32]
  43e4ac:	ldp	x23, x24, [sp, #48]
  43e4b0:	ldp	x25, x26, [sp, #64]
  43e4b4:	b	43ee50 <ferror@plt+0x3c580>
  43e4b8:	strb	wzr, [x19, #255]
  43e4bc:	ldr	x3, [x19, #272]
  43e4c0:	ldr	x2, [x19, #280]
  43e4c4:	mov	x1, #0xff                  	// #255
  43e4c8:	mov	x0, x19
  43e4cc:	blr	x3
  43e4d0:	str	xzr, [x19, #256]
  43e4d4:	ldr	x0, [x19, #320]
  43e4d8:	add	x0, x0, #0x1
  43e4dc:	str	x0, [x19, #320]
  43e4e0:	b	43e490 <ferror@plt+0x3bbc0>
  43e4e4:	ldr	x1, [x22, #8]
  43e4e8:	mov	x0, x19
  43e4ec:	bl	43aab4 <ferror@plt+0x381e4>
  43e4f0:	cbz	x0, 43e518 <ferror@plt+0x3bc48>
  43e4f4:	stp	x27, x28, [sp, #80]
  43e4f8:	bl	43abac <ferror@plt+0x382dc>
  43e4fc:	mov	w25, w0
  43e500:	ldr	x27, [x22, #8]
  43e504:	cmp	w0, #0x0
  43e508:	b.le	43ef7c <ferror@plt+0x3c6ac>
  43e50c:	sub	w28, w0, #0x1
  43e510:	mov	x26, #0xff                  	// #255
  43e514:	b	43e5b4 <ferror@plt+0x3bce4>
  43e518:	ldr	x2, [x22, #8]
  43e51c:	mov	w1, w20
  43e520:	mov	x0, x19
  43e524:	bl	440378 <ferror@plt+0x3daa8>
  43e528:	mov	x2, #0x3                   	// #3
  43e52c:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a094>
  43e530:	add	x1, x1, #0xfb8
  43e534:	mov	x0, x19
  43e538:	bl	43a9a4 <ferror@plt+0x380d4>
  43e53c:	ldp	x21, x22, [sp, #32]
  43e540:	ldp	x23, x24, [sp, #48]
  43e544:	ldp	x25, x26, [sp, #64]
  43e548:	b	43ee50 <ferror@plt+0x3c580>
  43e54c:	ldr	x0, [x19, #256]
  43e550:	add	x1, x0, #0x1
  43e554:	str	x1, [x19, #256]
  43e558:	strb	w23, [x19, x0]
  43e55c:	strb	w23, [x19, #264]
  43e560:	add	x22, x22, #0x1
  43e564:	cmp	x22, x24
  43e568:	b.eq	43e5a8 <ferror@plt+0x3bcd8>  // b.none
  43e56c:	ldrb	w23, [x22]
  43e570:	ldr	x0, [x19, #256]
  43e574:	cmp	x0, #0xff
  43e578:	b.ne	43e54c <ferror@plt+0x3bc7c>  // b.any
  43e57c:	strb	wzr, [x19, #255]
  43e580:	ldr	x3, [x19, #272]
  43e584:	ldr	x2, [x19, #280]
  43e588:	mov	x1, x26
  43e58c:	mov	x0, x19
  43e590:	blr	x3
  43e594:	str	xzr, [x19, #256]
  43e598:	ldr	x0, [x19, #320]
  43e59c:	add	x0, x0, #0x1
  43e5a0:	str	x0, [x19, #320]
  43e5a4:	b	43e54c <ferror@plt+0x3bc7c>
  43e5a8:	add	w21, w21, #0x1
  43e5ac:	cmp	w25, w21
  43e5b0:	b.eq	43e5e0 <ferror@plt+0x3bd10>  // b.none
  43e5b4:	str	w21, [x19, #316]
  43e5b8:	mov	x2, x27
  43e5bc:	mov	w1, w20
  43e5c0:	mov	x0, x19
  43e5c4:	bl	43ef90 <ferror@plt+0x3c6c0>
  43e5c8:	cmp	w28, w21
  43e5cc:	b.le	43e5a8 <ferror@plt+0x3bcd8>
  43e5d0:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  43e5d4:	add	x22, x0, #0xa38
  43e5d8:	add	x24, x22, #0x2
  43e5dc:	b	43e56c <ferror@plt+0x3bc9c>
  43e5e0:	ldp	x21, x22, [sp, #32]
  43e5e4:	ldp	x23, x24, [sp, #48]
  43e5e8:	ldp	x25, x26, [sp, #64]
  43e5ec:	ldp	x27, x28, [sp, #80]
  43e5f0:	b	43ee50 <ferror@plt+0x3c580>
  43e5f4:	ldr	x23, [x22, #8]
  43e5f8:	cbnz	x23, 43e67c <ferror@plt+0x3bdac>
  43e5fc:	adrp	x20, 465000 <_obstack_memory_used@@Base+0x1e094>
  43e600:	add	x20, x20, #0xe00
  43e604:	add	x22, x20, #0x4
  43e608:	mov	x23, #0xff                  	// #255
  43e60c:	b	43e630 <ferror@plt+0x3bd60>
  43e610:	ldr	x0, [x19, #256]
  43e614:	add	x1, x0, #0x1
  43e618:	str	x1, [x19, #256]
  43e61c:	strb	w21, [x19, x0]
  43e620:	strb	w21, [x19, #264]
  43e624:	add	x20, x20, #0x1
  43e628:	cmp	x22, x20
  43e62c:	b.eq	43e66c <ferror@plt+0x3bd9c>  // b.none
  43e630:	ldrb	w21, [x20]
  43e634:	ldr	x0, [x19, #256]
  43e638:	cmp	x0, #0xff
  43e63c:	b.ne	43e610 <ferror@plt+0x3bd40>  // b.any
  43e640:	strb	wzr, [x19, #255]
  43e644:	ldr	x3, [x19, #272]
  43e648:	ldr	x2, [x19, #280]
  43e64c:	mov	x1, x23
  43e650:	mov	x0, x19
  43e654:	blr	x3
  43e658:	str	xzr, [x19, #256]
  43e65c:	ldr	x0, [x19, #320]
  43e660:	add	x0, x0, #0x1
  43e664:	str	x0, [x19, #320]
  43e668:	b	43e610 <ferror@plt+0x3bd40>
  43e66c:	ldp	x21, x22, [sp, #32]
  43e670:	ldp	x23, x24, [sp, #48]
  43e674:	ldp	x25, x26, [sp, #64]
  43e678:	b	43ee50 <ferror@plt+0x3c580>
  43e67c:	adrp	x20, 465000 <_obstack_memory_used@@Base+0x1e094>
  43e680:	add	x20, x20, #0xe08
  43e684:	add	x22, x20, #0x6
  43e688:	mov	x24, #0xff                  	// #255
  43e68c:	b	43e6b0 <ferror@plt+0x3bde0>
  43e690:	ldr	x0, [x19, #256]
  43e694:	add	x1, x0, #0x1
  43e698:	str	x1, [x19, #256]
  43e69c:	strb	w21, [x19, x0]
  43e6a0:	strb	w21, [x19, #264]
  43e6a4:	add	x20, x20, #0x1
  43e6a8:	cmp	x20, x22
  43e6ac:	b.eq	43e6ec <ferror@plt+0x3be1c>  // b.none
  43e6b0:	ldrb	w21, [x20]
  43e6b4:	ldr	x0, [x19, #256]
  43e6b8:	cmp	x0, #0xff
  43e6bc:	b.ne	43e690 <ferror@plt+0x3bdc0>  // b.any
  43e6c0:	strb	wzr, [x19, #255]
  43e6c4:	ldr	x3, [x19, #272]
  43e6c8:	ldr	x2, [x19, #280]
  43e6cc:	mov	x1, x24
  43e6d0:	mov	x0, x19
  43e6d4:	blr	x3
  43e6d8:	str	xzr, [x19, #256]
  43e6dc:	ldr	x0, [x19, #320]
  43e6e0:	add	x0, x0, #0x1
  43e6e4:	str	x0, [x19, #320]
  43e6e8:	b	43e690 <ferror@plt+0x3bdc0>
  43e6ec:	mov	w2, w23
  43e6f0:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  43e6f4:	add	x1, x1, #0x40
  43e6f8:	add	x0, sp, #0x70
  43e6fc:	bl	402350 <sprintf@plt>
  43e700:	add	x0, sp, #0x70
  43e704:	bl	4022b0 <strlen@plt>
  43e708:	cbz	x0, 43e778 <ferror@plt+0x3bea8>
  43e70c:	add	x20, sp, #0x70
  43e710:	add	x22, x20, x0
  43e714:	mov	x23, #0xff                  	// #255
  43e718:	b	43e73c <ferror@plt+0x3be6c>
  43e71c:	ldr	x0, [x19, #256]
  43e720:	add	x1, x0, #0x1
  43e724:	str	x1, [x19, #256]
  43e728:	strb	w21, [x19, x0]
  43e72c:	strb	w21, [x19, #264]
  43e730:	add	x20, x20, #0x1
  43e734:	cmp	x22, x20
  43e738:	b.eq	43e778 <ferror@plt+0x3bea8>  // b.none
  43e73c:	ldrb	w21, [x20]
  43e740:	ldr	x0, [x19, #256]
  43e744:	cmp	x0, #0xff
  43e748:	b.ne	43e71c <ferror@plt+0x3be4c>  // b.any
  43e74c:	strb	wzr, [x19, #255]
  43e750:	ldr	x3, [x19, #272]
  43e754:	ldr	x2, [x19, #280]
  43e758:	mov	x1, x23
  43e75c:	mov	x0, x19
  43e760:	blr	x3
  43e764:	str	xzr, [x19, #256]
  43e768:	ldr	x0, [x19, #320]
  43e76c:	add	x0, x0, #0x1
  43e770:	str	x0, [x19, #320]
  43e774:	b	43e71c <ferror@plt+0x3be4c>
  43e778:	ldr	x0, [x19, #256]
  43e77c:	cmp	x0, #0xff
  43e780:	b.eq	43e7ac <ferror@plt+0x3bedc>  // b.none
  43e784:	ldr	x1, [x19, #256]
  43e788:	add	x0, x1, #0x1
  43e78c:	str	x0, [x19, #256]
  43e790:	mov	w0, #0x7d                  	// #125
  43e794:	strb	w0, [x19, x1]
  43e798:	strb	w0, [x19, #264]
  43e79c:	ldp	x21, x22, [sp, #32]
  43e7a0:	ldp	x23, x24, [sp, #48]
  43e7a4:	ldp	x25, x26, [sp, #64]
  43e7a8:	b	43ee50 <ferror@plt+0x3c580>
  43e7ac:	strb	wzr, [x19, #255]
  43e7b0:	ldr	x3, [x19, #272]
  43e7b4:	ldr	x2, [x19, #280]
  43e7b8:	mov	x1, #0xff                  	// #255
  43e7bc:	mov	x0, x19
  43e7c0:	blr	x3
  43e7c4:	str	xzr, [x19, #256]
  43e7c8:	ldr	x0, [x19, #320]
  43e7cc:	add	x0, x0, #0x1
  43e7d0:	str	x0, [x19, #320]
  43e7d4:	b	43e784 <ferror@plt+0x3beb4>
  43e7d8:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43e7dc:	add	x21, x21, #0xe10
  43e7e0:	add	x24, x21, #0x1d
  43e7e4:	mov	x25, #0xff                  	// #255
  43e7e8:	b	43e80c <ferror@plt+0x3bf3c>
  43e7ec:	ldr	x0, [x19, #256]
  43e7f0:	add	x1, x0, #0x1
  43e7f4:	str	x1, [x19, #256]
  43e7f8:	strb	w23, [x19, x0]
  43e7fc:	strb	w23, [x19, #264]
  43e800:	add	x21, x21, #0x1
  43e804:	cmp	x21, x24
  43e808:	b.eq	43e848 <ferror@plt+0x3bf78>  // b.none
  43e80c:	ldrb	w23, [x21]
  43e810:	ldr	x0, [x19, #256]
  43e814:	cmp	x0, #0xff
  43e818:	b.ne	43e7ec <ferror@plt+0x3bf1c>  // b.any
  43e81c:	strb	wzr, [x19, #255]
  43e820:	ldr	x3, [x19, #272]
  43e824:	ldr	x2, [x19, #280]
  43e828:	mov	x1, x25
  43e82c:	mov	x0, x19
  43e830:	blr	x3
  43e834:	str	xzr, [x19, #256]
  43e838:	ldr	x0, [x19, #320]
  43e83c:	add	x0, x0, #0x1
  43e840:	str	x0, [x19, #320]
  43e844:	b	43e7ec <ferror@plt+0x3bf1c>
  43e848:	ldr	x2, [x22, #8]
  43e84c:	mov	w1, w20
  43e850:	mov	x0, x19
  43e854:	bl	43ef90 <ferror@plt+0x3c6c0>
  43e858:	ldp	x21, x22, [sp, #32]
  43e85c:	ldp	x23, x24, [sp, #48]
  43e860:	ldp	x25, x26, [sp, #64]
  43e864:	b	43ee50 <ferror@plt+0x3c580>
  43e868:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43e86c:	add	x21, x21, #0xe30
  43e870:	add	x24, x21, #0x1c
  43e874:	mov	x25, #0xff                  	// #255
  43e878:	b	43e89c <ferror@plt+0x3bfcc>
  43e87c:	ldr	x0, [x19, #256]
  43e880:	add	x1, x0, #0x1
  43e884:	str	x1, [x19, #256]
  43e888:	strb	w23, [x19, x0]
  43e88c:	strb	w23, [x19, #264]
  43e890:	add	x21, x21, #0x1
  43e894:	cmp	x21, x24
  43e898:	b.eq	43e8d8 <ferror@plt+0x3c008>  // b.none
  43e89c:	ldrb	w23, [x21]
  43e8a0:	ldr	x0, [x19, #256]
  43e8a4:	cmp	x0, #0xff
  43e8a8:	b.ne	43e87c <ferror@plt+0x3bfac>  // b.any
  43e8ac:	strb	wzr, [x19, #255]
  43e8b0:	ldr	x3, [x19, #272]
  43e8b4:	ldr	x2, [x19, #280]
  43e8b8:	mov	x1, x25
  43e8bc:	mov	x0, x19
  43e8c0:	blr	x3
  43e8c4:	str	xzr, [x19, #256]
  43e8c8:	ldr	x0, [x19, #320]
  43e8cc:	add	x0, x0, #0x1
  43e8d0:	str	x0, [x19, #320]
  43e8d4:	b	43e87c <ferror@plt+0x3bfac>
  43e8d8:	ldr	x2, [x22, #8]
  43e8dc:	mov	w1, w20
  43e8e0:	mov	x0, x19
  43e8e4:	bl	43ef90 <ferror@plt+0x3c6c0>
  43e8e8:	ldp	x21, x22, [sp, #32]
  43e8ec:	ldp	x23, x24, [sp, #48]
  43e8f0:	ldp	x25, x26, [sp, #64]
  43e8f4:	b	43ee50 <ferror@plt+0x3c580>
  43e8f8:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43e8fc:	add	x21, x21, #0xe50
  43e900:	add	x24, x21, #0x8
  43e904:	mov	x25, #0xff                  	// #255
  43e908:	b	43e92c <ferror@plt+0x3c05c>
  43e90c:	ldr	x0, [x19, #256]
  43e910:	add	x1, x0, #0x1
  43e914:	str	x1, [x19, #256]
  43e918:	strb	w23, [x19, x0]
  43e91c:	strb	w23, [x19, #264]
  43e920:	add	x21, x21, #0x1
  43e924:	cmp	x21, x24
  43e928:	b.eq	43e968 <ferror@plt+0x3c098>  // b.none
  43e92c:	ldrb	w23, [x21]
  43e930:	ldr	x0, [x19, #256]
  43e934:	cmp	x0, #0xff
  43e938:	b.ne	43e90c <ferror@plt+0x3c03c>  // b.any
  43e93c:	strb	wzr, [x19, #255]
  43e940:	ldr	x3, [x19, #272]
  43e944:	ldr	x2, [x19, #280]
  43e948:	mov	x1, x25
  43e94c:	mov	x0, x19
  43e950:	blr	x3
  43e954:	str	xzr, [x19, #256]
  43e958:	ldr	x0, [x19, #320]
  43e95c:	add	x0, x0, #0x1
  43e960:	str	x0, [x19, #320]
  43e964:	b	43e90c <ferror@plt+0x3c03c>
  43e968:	ldr	w0, [x19, #312]
  43e96c:	add	w0, w0, #0x1
  43e970:	str	w0, [x19, #312]
  43e974:	ldr	x2, [x22, #8]
  43e978:	mov	w1, w20
  43e97c:	mov	x0, x19
  43e980:	bl	43ef90 <ferror@plt+0x3c6c0>
  43e984:	ldr	w0, [x19, #312]
  43e988:	sub	w0, w0, #0x1
  43e98c:	str	w0, [x19, #312]
  43e990:	adrp	x20, 465000 <_obstack_memory_used@@Base+0x1e094>
  43e994:	add	x20, x20, #0xe60
  43e998:	add	x23, x20, #0x2
  43e99c:	mov	x24, #0xff                  	// #255
  43e9a0:	b	43e9c4 <ferror@plt+0x3c0f4>
  43e9a4:	ldr	x0, [x19, #256]
  43e9a8:	add	x1, x0, #0x1
  43e9ac:	str	x1, [x19, #256]
  43e9b0:	strb	w21, [x19, x0]
  43e9b4:	strb	w21, [x19, #264]
  43e9b8:	add	x20, x20, #0x1
  43e9bc:	cmp	x20, x23
  43e9c0:	b.eq	43ea00 <ferror@plt+0x3c130>  // b.none
  43e9c4:	ldrb	w21, [x20]
  43e9c8:	ldr	x0, [x19, #256]
  43e9cc:	cmp	x0, #0xff
  43e9d0:	b.ne	43e9a4 <ferror@plt+0x3c0d4>  // b.any
  43e9d4:	strb	wzr, [x19, #255]
  43e9d8:	ldr	x3, [x19, #272]
  43e9dc:	ldr	x2, [x19, #280]
  43e9e0:	mov	x1, x24
  43e9e4:	mov	x0, x19
  43e9e8:	blr	x3
  43e9ec:	str	xzr, [x19, #256]
  43e9f0:	ldr	x0, [x19, #320]
  43e9f4:	add	x0, x0, #0x1
  43e9f8:	str	x0, [x19, #320]
  43e9fc:	b	43e9a4 <ferror@plt+0x3c0d4>
  43ea00:	ldr	w2, [x22, #16]
  43ea04:	add	w2, w2, #0x1
  43ea08:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  43ea0c:	add	x1, x1, #0x40
  43ea10:	add	x0, sp, #0x70
  43ea14:	bl	402350 <sprintf@plt>
  43ea18:	add	x0, sp, #0x70
  43ea1c:	bl	4022b0 <strlen@plt>
  43ea20:	cbz	x0, 43ea90 <ferror@plt+0x3c1c0>
  43ea24:	add	x20, sp, #0x70
  43ea28:	add	x22, x0, x20
  43ea2c:	mov	x23, #0xff                  	// #255
  43ea30:	b	43ea54 <ferror@plt+0x3c184>
  43ea34:	ldr	x0, [x19, #256]
  43ea38:	add	x1, x0, #0x1
  43ea3c:	str	x1, [x19, #256]
  43ea40:	strb	w21, [x19, x0]
  43ea44:	strb	w21, [x19, #264]
  43ea48:	add	x20, x20, #0x1
  43ea4c:	cmp	x20, x22
  43ea50:	b.eq	43ea90 <ferror@plt+0x3c1c0>  // b.none
  43ea54:	ldrb	w21, [x20]
  43ea58:	ldr	x0, [x19, #256]
  43ea5c:	cmp	x0, #0xff
  43ea60:	b.ne	43ea34 <ferror@plt+0x3c164>  // b.any
  43ea64:	strb	wzr, [x19, #255]
  43ea68:	ldr	x3, [x19, #272]
  43ea6c:	ldr	x2, [x19, #280]
  43ea70:	mov	x1, x23
  43ea74:	mov	x0, x19
  43ea78:	blr	x3
  43ea7c:	str	xzr, [x19, #256]
  43ea80:	ldr	x0, [x19, #320]
  43ea84:	add	x0, x0, #0x1
  43ea88:	str	x0, [x19, #320]
  43ea8c:	b	43ea34 <ferror@plt+0x3c164>
  43ea90:	ldr	x0, [x19, #256]
  43ea94:	cmp	x0, #0xff
  43ea98:	b.eq	43eac4 <ferror@plt+0x3c1f4>  // b.none
  43ea9c:	ldr	x1, [x19, #256]
  43eaa0:	add	x0, x1, #0x1
  43eaa4:	str	x0, [x19, #256]
  43eaa8:	mov	w0, #0x7d                  	// #125
  43eaac:	strb	w0, [x19, x1]
  43eab0:	strb	w0, [x19, #264]
  43eab4:	ldp	x21, x22, [sp, #32]
  43eab8:	ldp	x23, x24, [sp, #48]
  43eabc:	ldp	x25, x26, [sp, #64]
  43eac0:	b	43ee50 <ferror@plt+0x3c580>
  43eac4:	strb	wzr, [x19, #255]
  43eac8:	ldr	x3, [x19, #272]
  43eacc:	ldr	x2, [x19, #280]
  43ead0:	mov	x1, #0xff                  	// #255
  43ead4:	mov	x0, x19
  43ead8:	blr	x3
  43eadc:	str	xzr, [x19, #256]
  43eae0:	ldr	x0, [x19, #320]
  43eae4:	add	x0, x0, #0x1
  43eae8:	str	x0, [x19, #320]
  43eaec:	b	43ea9c <ferror@plt+0x3c1cc>
  43eaf0:	adrp	x20, 465000 <_obstack_memory_used@@Base+0x1e094>
  43eaf4:	add	x20, x20, #0xe68
  43eaf8:	add	x23, x20, #0xe
  43eafc:	mov	x24, #0xff                  	// #255
  43eb00:	b	43eb24 <ferror@plt+0x3c254>
  43eb04:	ldr	x0, [x19, #256]
  43eb08:	add	x1, x0, #0x1
  43eb0c:	str	x1, [x19, #256]
  43eb10:	strb	w21, [x19, x0]
  43eb14:	strb	w21, [x19, #264]
  43eb18:	add	x20, x20, #0x1
  43eb1c:	cmp	x20, x23
  43eb20:	b.eq	43eb60 <ferror@plt+0x3c290>  // b.none
  43eb24:	ldrb	w21, [x20]
  43eb28:	ldr	x0, [x19, #256]
  43eb2c:	cmp	x0, #0xff
  43eb30:	b.ne	43eb04 <ferror@plt+0x3c234>  // b.any
  43eb34:	strb	wzr, [x19, #255]
  43eb38:	ldr	x3, [x19, #272]
  43eb3c:	ldr	x2, [x19, #280]
  43eb40:	mov	x1, x24
  43eb44:	mov	x0, x19
  43eb48:	blr	x3
  43eb4c:	str	xzr, [x19, #256]
  43eb50:	ldr	x0, [x19, #320]
  43eb54:	add	x0, x0, #0x1
  43eb58:	str	x0, [x19, #320]
  43eb5c:	b	43eb04 <ferror@plt+0x3c234>
  43eb60:	ldr	x2, [x22, #8]
  43eb64:	add	w2, w2, #0x1
  43eb68:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  43eb6c:	add	x1, x1, #0x40
  43eb70:	add	x0, sp, #0x70
  43eb74:	bl	402350 <sprintf@plt>
  43eb78:	add	x0, sp, #0x70
  43eb7c:	bl	4022b0 <strlen@plt>
  43eb80:	cbz	x0, 43ebf0 <ferror@plt+0x3c320>
  43eb84:	add	x20, sp, #0x70
  43eb88:	add	x22, x0, x20
  43eb8c:	mov	x23, #0xff                  	// #255
  43eb90:	b	43ebb4 <ferror@plt+0x3c2e4>
  43eb94:	ldr	x0, [x19, #256]
  43eb98:	add	x1, x0, #0x1
  43eb9c:	str	x1, [x19, #256]
  43eba0:	strb	w21, [x19, x0]
  43eba4:	strb	w21, [x19, #264]
  43eba8:	add	x20, x20, #0x1
  43ebac:	cmp	x20, x22
  43ebb0:	b.eq	43ebf0 <ferror@plt+0x3c320>  // b.none
  43ebb4:	ldrb	w21, [x20]
  43ebb8:	ldr	x0, [x19, #256]
  43ebbc:	cmp	x0, #0xff
  43ebc0:	b.ne	43eb94 <ferror@plt+0x3c2c4>  // b.any
  43ebc4:	strb	wzr, [x19, #255]
  43ebc8:	ldr	x3, [x19, #272]
  43ebcc:	ldr	x2, [x19, #280]
  43ebd0:	mov	x1, x23
  43ebd4:	mov	x0, x19
  43ebd8:	blr	x3
  43ebdc:	str	xzr, [x19, #256]
  43ebe0:	ldr	x0, [x19, #320]
  43ebe4:	add	x0, x0, #0x1
  43ebe8:	str	x0, [x19, #320]
  43ebec:	b	43eb94 <ferror@plt+0x3c2c4>
  43ebf0:	ldr	x0, [x19, #256]
  43ebf4:	cmp	x0, #0xff
  43ebf8:	b.eq	43ec24 <ferror@plt+0x3c354>  // b.none
  43ebfc:	ldr	x1, [x19, #256]
  43ec00:	add	x0, x1, #0x1
  43ec04:	str	x0, [x19, #256]
  43ec08:	mov	w0, #0x7d                  	// #125
  43ec0c:	strb	w0, [x19, x1]
  43ec10:	strb	w0, [x19, #264]
  43ec14:	ldp	x21, x22, [sp, #32]
  43ec18:	ldp	x23, x24, [sp, #48]
  43ec1c:	ldp	x25, x26, [sp, #64]
  43ec20:	b	43ee50 <ferror@plt+0x3c580>
  43ec24:	strb	wzr, [x19, #255]
  43ec28:	ldr	x3, [x19, #272]
  43ec2c:	ldr	x2, [x19, #280]
  43ec30:	mov	x1, #0xff                  	// #255
  43ec34:	mov	x0, x19
  43ec38:	blr	x3
  43ec3c:	str	xzr, [x19, #256]
  43ec40:	ldr	x0, [x19, #320]
  43ec44:	add	x0, x0, #0x1
  43ec48:	str	x0, [x19, #320]
  43ec4c:	b	43ebfc <ferror@plt+0x3c32c>
  43ec50:	ldr	x2, [x22, #8]
  43ec54:	mov	w1, w20
  43ec58:	mov	x0, x19
  43ec5c:	bl	43ef90 <ferror@plt+0x3c6c0>
  43ec60:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43ec64:	add	x21, x21, #0xe78
  43ec68:	add	x24, x21, #0x8
  43ec6c:	mov	x25, #0xff                  	// #255
  43ec70:	b	43ec94 <ferror@plt+0x3c3c4>
  43ec74:	ldr	x0, [x19, #256]
  43ec78:	add	x1, x0, #0x1
  43ec7c:	str	x1, [x19, #256]
  43ec80:	strb	w23, [x19, x0]
  43ec84:	strb	w23, [x19, #264]
  43ec88:	add	x21, x21, #0x1
  43ec8c:	cmp	x21, x24
  43ec90:	b.eq	43ecd0 <ferror@plt+0x3c400>  // b.none
  43ec94:	ldrb	w23, [x21]
  43ec98:	ldr	x0, [x19, #256]
  43ec9c:	cmp	x0, #0xff
  43eca0:	b.ne	43ec74 <ferror@plt+0x3c3a4>  // b.any
  43eca4:	strb	wzr, [x19, #255]
  43eca8:	ldr	x3, [x19, #272]
  43ecac:	ldr	x2, [x19, #280]
  43ecb0:	mov	x1, x25
  43ecb4:	mov	x0, x19
  43ecb8:	blr	x3
  43ecbc:	str	xzr, [x19, #256]
  43ecc0:	ldr	x0, [x19, #320]
  43ecc4:	add	x0, x0, #0x1
  43ecc8:	str	x0, [x19, #320]
  43eccc:	b	43ec74 <ferror@plt+0x3c3a4>
  43ecd0:	ldr	x2, [x22, #16]
  43ecd4:	mov	w1, w20
  43ecd8:	mov	x0, x19
  43ecdc:	bl	43ef90 <ferror@plt+0x3c6c0>
  43ece0:	ldr	x0, [x19, #256]
  43ece4:	cmp	x0, #0xff
  43ece8:	b.eq	43ed14 <ferror@plt+0x3c444>  // b.none
  43ecec:	ldr	x1, [x19, #256]
  43ecf0:	add	x0, x1, #0x1
  43ecf4:	str	x0, [x19, #256]
  43ecf8:	mov	w0, #0x5d                  	// #93
  43ecfc:	strb	w0, [x19, x1]
  43ed00:	strb	w0, [x19, #264]
  43ed04:	ldp	x21, x22, [sp, #32]
  43ed08:	ldp	x23, x24, [sp, #48]
  43ed0c:	ldp	x25, x26, [sp, #64]
  43ed10:	b	43ee50 <ferror@plt+0x3c580>
  43ed14:	strb	wzr, [x19, #255]
  43ed18:	ldr	x3, [x19, #272]
  43ed1c:	ldr	x2, [x19, #280]
  43ed20:	mov	x1, #0xff                  	// #255
  43ed24:	mov	x0, x19
  43ed28:	blr	x3
  43ed2c:	str	xzr, [x19, #256]
  43ed30:	ldr	x0, [x19, #320]
  43ed34:	add	x0, x0, #0x1
  43ed38:	str	x0, [x19, #320]
  43ed3c:	b	43ecec <ferror@plt+0x3c41c>
  43ed40:	ldp	x23, x24, [sp, #48]
  43ed44:	ldp	x25, x26, [sp, #64]
  43ed48:	mov	w0, #0x1                   	// #1
  43ed4c:	str	w0, [x19, #304]
  43ed50:	ldp	x21, x22, [sp, #32]
  43ed54:	b	43ee50 <ferror@plt+0x3c580>
  43ed58:	mov	w0, #0x1                   	// #1
  43ed5c:	str	w0, [x19, #304]
  43ed60:	ldp	x21, x22, [sp, #32]
  43ed64:	ldp	x23, x24, [sp, #48]
  43ed68:	ldp	x25, x26, [sp, #64]
  43ed6c:	ldp	x27, x28, [sp, #80]
  43ed70:	b	43ee50 <ferror@plt+0x3c580>
  43ed74:	cmp	w28, #0x2
  43ed78:	b.eq	43b330 <ferror@plt+0x38a60>  // b.none
  43ed7c:	ldr	w0, [x21]
  43ed80:	cmp	w0, #0x4
  43ed84:	b.eq	43b3f0 <ferror@plt+0x38b20>  // b.none
  43ed88:	ldr	x2, [x22, #16]
  43ed8c:	mov	w1, w20
  43ed90:	mov	x0, x19
  43ed94:	bl	43ef90 <ferror@plt+0x3c6c0>
  43ed98:	ldr	w0, [x21]
  43ed9c:	cmp	w0, #0x4
  43eda0:	b.eq	43b404 <ferror@plt+0x38b34>  // b.none
  43eda4:	cbz	w23, 43b488 <ferror@plt+0x38bb8>
  43eda8:	sub	w21, w23, #0x1
  43edac:	add	x0, sp, #0x70
  43edb0:	add	x21, x0, x21, lsl #5
  43edb4:	mov	w22, #0x20                  	// #32
  43edb8:	mov	x23, #0xff                  	// #255
  43edbc:	b	43b444 <ferror@plt+0x38b74>
  43edc0:	mov	w21, w2
  43edc4:	b	43edcc <ferror@plt+0x3c4fc>
  43edc8:	mov	x22, x0
  43edcc:	ldr	x0, [x19, #296]
  43edd0:	str	x0, [sp, #112]
  43edd4:	add	x0, sp, #0x70
  43edd8:	str	x0, [x19, #296]
  43eddc:	str	x22, [sp, #120]
  43ede0:	str	wzr, [sp, #128]
  43ede4:	ldr	x0, [x19, #288]
  43ede8:	str	x0, [sp, #136]
  43edec:	ldr	x2, [x22, #8]
  43edf0:	b	43c660 <ferror@plt+0x39d90>
  43edf4:	mov	x22, x0
  43edf8:	b	43edcc <ferror@plt+0x3c4fc>
  43edfc:	ldr	x3, [x19, #328]
  43ee00:	mov	x1, x3
  43ee04:	cbz	x3, 43ee28 <ferror@plt+0x3c558>
  43ee08:	ldr	x2, [x1]
  43ee0c:	cmp	x2, x0
  43ee10:	b.eq	43c5ac <ferror@plt+0x39cdc>  // b.none
  43ee14:	cmp	x3, x1
  43ee18:	ccmp	x2, x22, #0x0, ne  // ne = any
  43ee1c:	b.eq	43c5ac <ferror@plt+0x39cdc>  // b.none
  43ee20:	ldr	x1, [x1, #8]
  43ee24:	cbnz	x1, 43ee08 <ferror@plt+0x3c538>
  43ee28:	ldr	x23, [x19, #288]
  43ee2c:	ldr	x1, [x4, #8]
  43ee30:	str	x1, [x19, #288]
  43ee34:	mov	x1, x0
  43ee38:	mov	x0, x19
  43ee3c:	bl	43aa7c <ferror@plt+0x381ac>
  43ee40:	cbz	x0, 43c5dc <ferror@plt+0x39d0c>
  43ee44:	mov	w21, #0x1                   	// #1
  43ee48:	b	43c5c0 <ferror@plt+0x39cf0>
  43ee4c:	ldp	x21, x22, [sp, #32]
  43ee50:	ldp	x19, x20, [sp, #16]
  43ee54:	ldp	x29, x30, [sp], #240
  43ee58:	ret
  43ee5c:	ldp	x21, x22, [sp, #32]
  43ee60:	ldp	x23, x24, [sp, #48]
  43ee64:	ldp	x25, x26, [sp, #64]
  43ee68:	b	43ee50 <ferror@plt+0x3c580>
  43ee6c:	ldp	x21, x22, [sp, #32]
  43ee70:	ldp	x23, x24, [sp, #48]
  43ee74:	ldp	x25, x26, [sp, #64]
  43ee78:	b	43ee50 <ferror@plt+0x3c580>
  43ee7c:	ldp	x21, x22, [sp, #32]
  43ee80:	ldp	x23, x24, [sp, #48]
  43ee84:	ldp	x25, x26, [sp, #64]
  43ee88:	b	43ee50 <ferror@plt+0x3c580>
  43ee8c:	ldp	x21, x22, [sp, #32]
  43ee90:	ldp	x23, x24, [sp, #48]
  43ee94:	ldp	x25, x26, [sp, #64]
  43ee98:	b	43ee50 <ferror@plt+0x3c580>
  43ee9c:	ldp	x21, x22, [sp, #32]
  43eea0:	ldp	x23, x24, [sp, #48]
  43eea4:	ldp	x25, x26, [sp, #64]
  43eea8:	b	43ee50 <ferror@plt+0x3c580>
  43eeac:	ldp	x21, x22, [sp, #32]
  43eeb0:	ldp	x23, x24, [sp, #48]
  43eeb4:	ldp	x25, x26, [sp, #64]
  43eeb8:	b	43ee50 <ferror@plt+0x3c580>
  43eebc:	ldp	x21, x22, [sp, #32]
  43eec0:	ldp	x23, x24, [sp, #48]
  43eec4:	ldp	x25, x26, [sp, #64]
  43eec8:	b	43ee50 <ferror@plt+0x3c580>
  43eecc:	ldp	x21, x22, [sp, #32]
  43eed0:	ldp	x23, x24, [sp, #48]
  43eed4:	ldp	x25, x26, [sp, #64]
  43eed8:	b	43ee50 <ferror@plt+0x3c580>
  43eedc:	ldp	x21, x22, [sp, #32]
  43eee0:	ldp	x23, x24, [sp, #48]
  43eee4:	ldp	x25, x26, [sp, #64]
  43eee8:	b	43ee50 <ferror@plt+0x3c580>
  43eeec:	ldp	x21, x22, [sp, #32]
  43eef0:	ldp	x23, x24, [sp, #48]
  43eef4:	ldp	x25, x26, [sp, #64]
  43eef8:	b	43ee50 <ferror@plt+0x3c580>
  43eefc:	ldp	x21, x22, [sp, #32]
  43ef00:	ldp	x23, x24, [sp, #48]
  43ef04:	ldp	x25, x26, [sp, #64]
  43ef08:	b	43ee50 <ferror@plt+0x3c580>
  43ef0c:	ldp	x21, x22, [sp, #32]
  43ef10:	ldp	x23, x24, [sp, #48]
  43ef14:	ldp	x25, x26, [sp, #64]
  43ef18:	b	43ee50 <ferror@plt+0x3c580>
  43ef1c:	ldp	x21, x22, [sp, #32]
  43ef20:	ldp	x23, x24, [sp, #48]
  43ef24:	ldp	x25, x26, [sp, #64]
  43ef28:	b	43ee50 <ferror@plt+0x3c580>
  43ef2c:	ldp	x21, x22, [sp, #32]
  43ef30:	ldp	x23, x24, [sp, #48]
  43ef34:	ldp	x25, x26, [sp, #64]
  43ef38:	b	43ee50 <ferror@plt+0x3c580>
  43ef3c:	ldp	x21, x22, [sp, #32]
  43ef40:	ldp	x23, x24, [sp, #48]
  43ef44:	ldp	x25, x26, [sp, #64]
  43ef48:	b	43ee50 <ferror@plt+0x3c580>
  43ef4c:	ldp	x21, x22, [sp, #32]
  43ef50:	ldp	x23, x24, [sp, #48]
  43ef54:	ldp	x25, x26, [sp, #64]
  43ef58:	b	43ee50 <ferror@plt+0x3c580>
  43ef5c:	ldp	x21, x22, [sp, #32]
  43ef60:	ldp	x23, x24, [sp, #48]
  43ef64:	ldp	x25, x26, [sp, #64]
  43ef68:	b	43ee50 <ferror@plt+0x3c580>
  43ef6c:	ldp	x21, x22, [sp, #32]
  43ef70:	ldp	x23, x24, [sp, #48]
  43ef74:	ldp	x25, x26, [sp, #64]
  43ef78:	b	43ee50 <ferror@plt+0x3c580>
  43ef7c:	ldp	x21, x22, [sp, #32]
  43ef80:	ldp	x23, x24, [sp, #48]
  43ef84:	ldp	x25, x26, [sp, #64]
  43ef88:	ldp	x27, x28, [sp, #80]
  43ef8c:	b	43ee50 <ferror@plt+0x3c580>
  43ef90:	stp	x29, x30, [sp, #-48]!
  43ef94:	mov	x29, sp
  43ef98:	stp	x19, x20, [sp, #16]
  43ef9c:	mov	x19, x0
  43efa0:	cbz	x2, 43efc0 <ferror@plt+0x3c6f0>
  43efa4:	mov	x20, x2
  43efa8:	ldr	w0, [x2, #4]
  43efac:	cmp	w0, #0x1
  43efb0:	b.gt	43efc0 <ferror@plt+0x3c6f0>
  43efb4:	ldr	w2, [x19, #308]
  43efb8:	cmp	w2, #0x400
  43efbc:	b.le	43efd4 <ferror@plt+0x3c704>
  43efc0:	mov	w0, #0x1                   	// #1
  43efc4:	str	w0, [x19, #304]
  43efc8:	ldp	x19, x20, [sp, #16]
  43efcc:	ldp	x29, x30, [sp], #48
  43efd0:	ret
  43efd4:	add	w0, w0, #0x1
  43efd8:	str	w0, [x20, #4]
  43efdc:	ldr	w0, [x19, #308]
  43efe0:	add	w0, w0, #0x1
  43efe4:	str	w0, [x19, #308]
  43efe8:	str	x20, [sp, #32]
  43efec:	ldr	x0, [x19, #328]
  43eff0:	str	x0, [sp, #40]
  43eff4:	add	x0, sp, #0x20
  43eff8:	str	x0, [x19, #328]
  43effc:	mov	x2, x20
  43f000:	mov	x0, x19
  43f004:	bl	43acbc <ferror@plt+0x383ec>
  43f008:	ldr	x0, [sp, #40]
  43f00c:	str	x0, [x19, #328]
  43f010:	ldr	w0, [x20, #4]
  43f014:	sub	w0, w0, #0x1
  43f018:	str	w0, [x20, #4]
  43f01c:	ldr	w0, [x19, #308]
  43f020:	sub	w0, w0, #0x1
  43f024:	str	w0, [x19, #308]
  43f028:	b	43efc8 <ferror@plt+0x3c6f8>
  43f02c:	stp	x29, x30, [sp, #-80]!
  43f030:	mov	x29, sp
  43f034:	stp	x19, x20, [sp, #16]
  43f038:	stp	x21, x22, [sp, #32]
  43f03c:	mov	x19, x0
  43f040:	mov	w22, w1
  43f044:	mov	x20, x2
  43f048:	ldr	w0, [x2]
  43f04c:	sub	w0, w0, #0x3
  43f050:	cmp	w0, #0x4d
  43f054:	b.hi	43f9c4 <ferror@plt+0x3d0f4>  // b.pmore
  43f058:	stp	x23, x24, [sp, #48]
  43f05c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d094>
  43f060:	add	x1, x1, #0xdfc
  43f064:	ldrh	w0, [x1, w0, uxtw #1]
  43f068:	adr	x1, 43f074 <ferror@plt+0x3c7a4>
  43f06c:	add	x0, x1, w0, sxth #2
  43f070:	br	x0
  43f074:	adrp	x20, 465000 <_obstack_memory_used@@Base+0x1e094>
  43f078:	add	x20, x20, #0xe90
  43f07c:	add	x22, x20, #0x9
  43f080:	mov	x23, #0xff                  	// #255
  43f084:	b	43f0a8 <ferror@plt+0x3c7d8>
  43f088:	ldr	x0, [x19, #256]
  43f08c:	add	x1, x0, #0x1
  43f090:	str	x1, [x19, #256]
  43f094:	strb	w21, [x19, x0]
  43f098:	strb	w21, [x19, #264]
  43f09c:	add	x20, x20, #0x1
  43f0a0:	cmp	x20, x22
  43f0a4:	b.eq	43f0e4 <ferror@plt+0x3c814>  // b.none
  43f0a8:	ldrb	w21, [x20]
  43f0ac:	ldr	x0, [x19, #256]
  43f0b0:	cmp	x0, #0xff
  43f0b4:	b.ne	43f088 <ferror@plt+0x3c7b8>  // b.any
  43f0b8:	strb	wzr, [x19, #255]
  43f0bc:	ldr	x3, [x19, #272]
  43f0c0:	ldr	x2, [x19, #280]
  43f0c4:	mov	x1, x23
  43f0c8:	mov	x0, x19
  43f0cc:	blr	x3
  43f0d0:	str	xzr, [x19, #256]
  43f0d4:	ldr	x0, [x19, #320]
  43f0d8:	add	x0, x0, #0x1
  43f0dc:	str	x0, [x19, #320]
  43f0e0:	b	43f088 <ferror@plt+0x3c7b8>
  43f0e4:	ldp	x23, x24, [sp, #48]
  43f0e8:	b	43f5c4 <ferror@plt+0x3ccf4>
  43f0ec:	adrp	x20, 465000 <_obstack_memory_used@@Base+0x1e094>
  43f0f0:	add	x20, x20, #0xea0
  43f0f4:	add	x22, x20, #0x9
  43f0f8:	mov	x23, #0xff                  	// #255
  43f0fc:	b	43f120 <ferror@plt+0x3c850>
  43f100:	ldr	x0, [x19, #256]
  43f104:	add	x1, x0, #0x1
  43f108:	str	x1, [x19, #256]
  43f10c:	strb	w21, [x19, x0]
  43f110:	strb	w21, [x19, #264]
  43f114:	add	x20, x20, #0x1
  43f118:	cmp	x22, x20
  43f11c:	b.eq	43f15c <ferror@plt+0x3c88c>  // b.none
  43f120:	ldrb	w21, [x20]
  43f124:	ldr	x0, [x19, #256]
  43f128:	cmp	x0, #0xff
  43f12c:	b.ne	43f100 <ferror@plt+0x3c830>  // b.any
  43f130:	strb	wzr, [x19, #255]
  43f134:	ldr	x3, [x19, #272]
  43f138:	ldr	x2, [x19, #280]
  43f13c:	mov	x1, x23
  43f140:	mov	x0, x19
  43f144:	blr	x3
  43f148:	str	xzr, [x19, #256]
  43f14c:	ldr	x0, [x19, #320]
  43f150:	add	x0, x0, #0x1
  43f154:	str	x0, [x19, #320]
  43f158:	b	43f100 <ferror@plt+0x3c830>
  43f15c:	ldp	x23, x24, [sp, #48]
  43f160:	b	43f5c4 <ferror@plt+0x3ccf4>
  43f164:	adrp	x20, 465000 <_obstack_memory_used@@Base+0x1e094>
  43f168:	add	x20, x20, #0xeb0
  43f16c:	add	x22, x20, #0x6
  43f170:	mov	x23, #0xff                  	// #255
  43f174:	b	43f198 <ferror@plt+0x3c8c8>
  43f178:	ldr	x0, [x19, #256]
  43f17c:	add	x1, x0, #0x1
  43f180:	str	x1, [x19, #256]
  43f184:	strb	w21, [x19, x0]
  43f188:	strb	w21, [x19, #264]
  43f18c:	add	x20, x20, #0x1
  43f190:	cmp	x20, x22
  43f194:	b.eq	43f1d4 <ferror@plt+0x3c904>  // b.none
  43f198:	ldrb	w21, [x20]
  43f19c:	ldr	x0, [x19, #256]
  43f1a0:	cmp	x0, #0xff
  43f1a4:	b.ne	43f178 <ferror@plt+0x3c8a8>  // b.any
  43f1a8:	strb	wzr, [x19, #255]
  43f1ac:	ldr	x3, [x19, #272]
  43f1b0:	ldr	x2, [x19, #280]
  43f1b4:	mov	x1, x23
  43f1b8:	mov	x0, x19
  43f1bc:	blr	x3
  43f1c0:	str	xzr, [x19, #256]
  43f1c4:	ldr	x0, [x19, #320]
  43f1c8:	add	x0, x0, #0x1
  43f1cc:	str	x0, [x19, #320]
  43f1d0:	b	43f178 <ferror@plt+0x3c8a8>
  43f1d4:	ldp	x23, x24, [sp, #48]
  43f1d8:	b	43f5c4 <ferror@plt+0x3ccf4>
  43f1dc:	adrp	x20, 465000 <_obstack_memory_used@@Base+0x1e094>
  43f1e0:	add	x20, x20, #0xeb8
  43f1e4:	add	x22, x20, #0x11
  43f1e8:	mov	x23, #0xff                  	// #255
  43f1ec:	b	43f210 <ferror@plt+0x3c940>
  43f1f0:	ldr	x0, [x19, #256]
  43f1f4:	add	x1, x0, #0x1
  43f1f8:	str	x1, [x19, #256]
  43f1fc:	strb	w21, [x19, x0]
  43f200:	strb	w21, [x19, #264]
  43f204:	add	x20, x20, #0x1
  43f208:	cmp	x20, x22
  43f20c:	b.eq	43f24c <ferror@plt+0x3c97c>  // b.none
  43f210:	ldrb	w21, [x20]
  43f214:	ldr	x0, [x19, #256]
  43f218:	cmp	x0, #0xff
  43f21c:	b.ne	43f1f0 <ferror@plt+0x3c920>  // b.any
  43f220:	strb	wzr, [x19, #255]
  43f224:	ldr	x3, [x19, #272]
  43f228:	ldr	x2, [x19, #280]
  43f22c:	mov	x1, x23
  43f230:	mov	x0, x19
  43f234:	blr	x3
  43f238:	str	xzr, [x19, #256]
  43f23c:	ldr	x0, [x19, #320]
  43f240:	add	x0, x0, #0x1
  43f244:	str	x0, [x19, #320]
  43f248:	b	43f1f0 <ferror@plt+0x3c920>
  43f24c:	ldp	x23, x24, [sp, #48]
  43f250:	b	43f5c4 <ferror@plt+0x3ccf4>
  43f254:	str	x25, [sp, #64]
  43f258:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43f25c:	add	x21, x21, #0xed0
  43f260:	add	x24, x21, #0x9
  43f264:	mov	x25, #0xff                  	// #255
  43f268:	b	43f28c <ferror@plt+0x3c9bc>
  43f26c:	ldr	x0, [x19, #256]
  43f270:	add	x1, x0, #0x1
  43f274:	str	x1, [x19, #256]
  43f278:	strb	w23, [x19, x0]
  43f27c:	strb	w23, [x19, #264]
  43f280:	add	x21, x21, #0x1
  43f284:	cmp	x21, x24
  43f288:	b.eq	43f2c8 <ferror@plt+0x3c9f8>  // b.none
  43f28c:	ldrb	w23, [x21]
  43f290:	ldr	x0, [x19, #256]
  43f294:	cmp	x0, #0xff
  43f298:	b.ne	43f26c <ferror@plt+0x3c99c>  // b.any
  43f29c:	strb	wzr, [x19, #255]
  43f2a0:	ldr	x3, [x19, #272]
  43f2a4:	ldr	x2, [x19, #280]
  43f2a8:	mov	x1, x25
  43f2ac:	mov	x0, x19
  43f2b0:	blr	x3
  43f2b4:	str	xzr, [x19, #256]
  43f2b8:	ldr	x0, [x19, #320]
  43f2bc:	add	x0, x0, #0x1
  43f2c0:	str	x0, [x19, #320]
  43f2c4:	b	43f26c <ferror@plt+0x3c99c>
  43f2c8:	ldr	x0, [x20, #16]
  43f2cc:	cbz	x0, 43f9d8 <ferror@plt+0x3d108>
  43f2d0:	cmp	x1, #0xff
  43f2d4:	b.eq	43f330 <ferror@plt+0x3ca60>  // b.none
  43f2d8:	ldr	x1, [x19, #256]
  43f2dc:	add	x0, x1, #0x1
  43f2e0:	str	x0, [x19, #256]
  43f2e4:	mov	w0, #0x28                  	// #40
  43f2e8:	strb	w0, [x19, x1]
  43f2ec:	strb	w0, [x19, #264]
  43f2f0:	ldr	x2, [x20, #16]
  43f2f4:	mov	w1, w22
  43f2f8:	mov	x0, x19
  43f2fc:	bl	43ef90 <ferror@plt+0x3c6c0>
  43f300:	ldr	x0, [x19, #256]
  43f304:	cmp	x0, #0xff
  43f308:	b.eq	43f358 <ferror@plt+0x3ca88>  // b.none
  43f30c:	ldr	x1, [x19, #256]
  43f310:	add	x0, x1, #0x1
  43f314:	str	x0, [x19, #256]
  43f318:	mov	w0, #0x29                  	// #41
  43f31c:	strb	w0, [x19, x1]
  43f320:	strb	w0, [x19, #264]
  43f324:	ldp	x23, x24, [sp, #48]
  43f328:	ldr	x25, [sp, #64]
  43f32c:	b	43f5c4 <ferror@plt+0x3ccf4>
  43f330:	strb	wzr, [x19, #255]
  43f334:	ldr	x3, [x19, #272]
  43f338:	ldr	x2, [x19, #280]
  43f33c:	mov	x0, x19
  43f340:	blr	x3
  43f344:	str	xzr, [x19, #256]
  43f348:	ldr	x0, [x19, #320]
  43f34c:	add	x0, x0, #0x1
  43f350:	str	x0, [x19, #320]
  43f354:	b	43f2d8 <ferror@plt+0x3ca08>
  43f358:	strb	wzr, [x19, #255]
  43f35c:	ldr	x3, [x19, #272]
  43f360:	ldr	x2, [x19, #280]
  43f364:	mov	x1, #0xff                  	// #255
  43f368:	mov	x0, x19
  43f36c:	blr	x3
  43f370:	str	xzr, [x19, #256]
  43f374:	ldr	x0, [x19, #320]
  43f378:	add	x0, x0, #0x1
  43f37c:	str	x0, [x19, #320]
  43f380:	b	43f30c <ferror@plt+0x3ca3c>
  43f384:	str	x25, [sp, #64]
  43f388:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43f38c:	add	x21, x21, #0xee0
  43f390:	add	x24, x21, #0x6
  43f394:	mov	x25, #0xff                  	// #255
  43f398:	b	43f3bc <ferror@plt+0x3caec>
  43f39c:	ldr	x0, [x19, #256]
  43f3a0:	add	x1, x0, #0x1
  43f3a4:	str	x1, [x19, #256]
  43f3a8:	strb	w23, [x19, x0]
  43f3ac:	strb	w23, [x19, #264]
  43f3b0:	add	x21, x21, #0x1
  43f3b4:	cmp	x21, x24
  43f3b8:	b.eq	43f3f8 <ferror@plt+0x3cb28>  // b.none
  43f3bc:	ldrb	w23, [x21]
  43f3c0:	ldr	x0, [x19, #256]
  43f3c4:	cmp	x0, #0xff
  43f3c8:	b.ne	43f39c <ferror@plt+0x3cacc>  // b.any
  43f3cc:	strb	wzr, [x19, #255]
  43f3d0:	ldr	x3, [x19, #272]
  43f3d4:	ldr	x2, [x19, #280]
  43f3d8:	mov	x1, x25
  43f3dc:	mov	x0, x19
  43f3e0:	blr	x3
  43f3e4:	str	xzr, [x19, #256]
  43f3e8:	ldr	x0, [x19, #320]
  43f3ec:	add	x0, x0, #0x1
  43f3f0:	str	x0, [x19, #320]
  43f3f4:	b	43f39c <ferror@plt+0x3cacc>
  43f3f8:	ldr	x0, [x20, #16]
  43f3fc:	cbz	x0, 43f9e4 <ferror@plt+0x3d114>
  43f400:	cmp	x1, #0xff
  43f404:	b.eq	43f460 <ferror@plt+0x3cb90>  // b.none
  43f408:	ldr	x1, [x19, #256]
  43f40c:	add	x0, x1, #0x1
  43f410:	str	x0, [x19, #256]
  43f414:	mov	w0, #0x28                  	// #40
  43f418:	strb	w0, [x19, x1]
  43f41c:	strb	w0, [x19, #264]
  43f420:	ldr	x2, [x20, #16]
  43f424:	mov	w1, w22
  43f428:	mov	x0, x19
  43f42c:	bl	43ef90 <ferror@plt+0x3c6c0>
  43f430:	ldr	x0, [x19, #256]
  43f434:	cmp	x0, #0xff
  43f438:	b.eq	43f488 <ferror@plt+0x3cbb8>  // b.none
  43f43c:	ldr	x1, [x19, #256]
  43f440:	add	x0, x1, #0x1
  43f444:	str	x0, [x19, #256]
  43f448:	mov	w0, #0x29                  	// #41
  43f44c:	strb	w0, [x19, x1]
  43f450:	strb	w0, [x19, #264]
  43f454:	ldp	x23, x24, [sp, #48]
  43f458:	ldr	x25, [sp, #64]
  43f45c:	b	43f5c4 <ferror@plt+0x3ccf4>
  43f460:	strb	wzr, [x19, #255]
  43f464:	ldr	x3, [x19, #272]
  43f468:	ldr	x2, [x19, #280]
  43f46c:	mov	x0, x19
  43f470:	blr	x3
  43f474:	str	xzr, [x19, #256]
  43f478:	ldr	x0, [x19, #320]
  43f47c:	add	x0, x0, #0x1
  43f480:	str	x0, [x19, #320]
  43f484:	b	43f408 <ferror@plt+0x3cb38>
  43f488:	strb	wzr, [x19, #255]
  43f48c:	ldr	x3, [x19, #272]
  43f490:	ldr	x2, [x19, #280]
  43f494:	mov	x1, #0xff                  	// #255
  43f498:	mov	x0, x19
  43f49c:	blr	x3
  43f4a0:	str	xzr, [x19, #256]
  43f4a4:	ldr	x0, [x19, #320]
  43f4a8:	add	x0, x0, #0x1
  43f4ac:	str	x0, [x19, #320]
  43f4b0:	b	43f43c <ferror@plt+0x3cb6c>
  43f4b4:	ldr	x0, [x19, #256]
  43f4b8:	cmp	x0, #0xff
  43f4bc:	b.eq	43f4f0 <ferror@plt+0x3cc20>  // b.none
  43f4c0:	ldr	x1, [x19, #256]
  43f4c4:	add	x0, x1, #0x1
  43f4c8:	str	x0, [x19, #256]
  43f4cc:	mov	w0, #0x20                  	// #32
  43f4d0:	strb	w0, [x19, x1]
  43f4d4:	strb	w0, [x19, #264]
  43f4d8:	ldr	x2, [x20, #16]
  43f4dc:	mov	w1, w22
  43f4e0:	mov	x0, x19
  43f4e4:	bl	43ef90 <ferror@plt+0x3c6c0>
  43f4e8:	ldp	x23, x24, [sp, #48]
  43f4ec:	b	43f5c4 <ferror@plt+0x3ccf4>
  43f4f0:	strb	wzr, [x19, #255]
  43f4f4:	ldr	x3, [x19, #272]
  43f4f8:	ldr	x2, [x19, #280]
  43f4fc:	mov	x1, #0xff                  	// #255
  43f500:	mov	x0, x19
  43f504:	blr	x3
  43f508:	str	xzr, [x19, #256]
  43f50c:	ldr	x0, [x19, #320]
  43f510:	add	x0, x0, #0x1
  43f514:	str	x0, [x19, #320]
  43f518:	b	43f4c0 <ferror@plt+0x3cbf0>
  43f51c:	tbnz	w22, #2, 43f9f0 <ferror@plt+0x3d120>
  43f520:	ldr	x0, [x19, #256]
  43f524:	cmp	x0, #0xff
  43f528:	b.eq	43f54c <ferror@plt+0x3cc7c>  // b.none
  43f52c:	ldr	x1, [x19, #256]
  43f530:	add	x0, x1, #0x1
  43f534:	str	x0, [x19, #256]
  43f538:	mov	w0, #0x2a                  	// #42
  43f53c:	strb	w0, [x19, x1]
  43f540:	strb	w0, [x19, #264]
  43f544:	ldp	x23, x24, [sp, #48]
  43f548:	b	43f5c4 <ferror@plt+0x3ccf4>
  43f54c:	strb	wzr, [x19, #255]
  43f550:	ldr	x3, [x19, #272]
  43f554:	ldr	x2, [x19, #280]
  43f558:	mov	x1, #0xff                  	// #255
  43f55c:	mov	x0, x19
  43f560:	blr	x3
  43f564:	str	xzr, [x19, #256]
  43f568:	ldr	x0, [x19, #320]
  43f56c:	add	x0, x0, #0x1
  43f570:	str	x0, [x19, #320]
  43f574:	b	43f52c <ferror@plt+0x3cc5c>
  43f578:	ldr	x0, [x19, #256]
  43f57c:	cmp	x0, #0xff
  43f580:	b.eq	43f5d4 <ferror@plt+0x3cd04>  // b.none
  43f584:	ldr	x1, [x19, #256]
  43f588:	add	x0, x1, #0x1
  43f58c:	str	x0, [x19, #256]
  43f590:	mov	w0, #0x20                  	// #32
  43f594:	strb	w0, [x19, x1]
  43f598:	strb	w0, [x19, #264]
  43f59c:	ldr	x0, [x19, #256]
  43f5a0:	cmp	x0, #0xff
  43f5a4:	b.eq	43f600 <ferror@plt+0x3cd30>  // b.none
  43f5a8:	ldr	x1, [x19, #256]
  43f5ac:	add	x0, x1, #0x1
  43f5b0:	str	x0, [x19, #256]
  43f5b4:	mov	w0, #0x26                  	// #38
  43f5b8:	strb	w0, [x19, x1]
  43f5bc:	strb	w0, [x19, #264]
  43f5c0:	ldp	x23, x24, [sp, #48]
  43f5c4:	ldp	x19, x20, [sp, #16]
  43f5c8:	ldp	x21, x22, [sp, #32]
  43f5cc:	ldp	x29, x30, [sp], #80
  43f5d0:	ret
  43f5d4:	strb	wzr, [x19, #255]
  43f5d8:	ldr	x3, [x19, #272]
  43f5dc:	ldr	x2, [x19, #280]
  43f5e0:	mov	x1, #0xff                  	// #255
  43f5e4:	mov	x0, x19
  43f5e8:	blr	x3
  43f5ec:	str	xzr, [x19, #256]
  43f5f0:	ldr	x0, [x19, #320]
  43f5f4:	add	x0, x0, #0x1
  43f5f8:	str	x0, [x19, #320]
  43f5fc:	b	43f584 <ferror@plt+0x3ccb4>
  43f600:	strb	wzr, [x19, #255]
  43f604:	ldr	x3, [x19, #272]
  43f608:	ldr	x2, [x19, #280]
  43f60c:	mov	x1, #0xff                  	// #255
  43f610:	mov	x0, x19
  43f614:	blr	x3
  43f618:	str	xzr, [x19, #256]
  43f61c:	ldr	x0, [x19, #320]
  43f620:	add	x0, x0, #0x1
  43f624:	str	x0, [x19, #320]
  43f628:	b	43f5a8 <ferror@plt+0x3ccd8>
  43f62c:	ldr	x0, [x19, #256]
  43f630:	cmp	x0, #0xff
  43f634:	b.eq	43f664 <ferror@plt+0x3cd94>  // b.none
  43f638:	ldr	x1, [x19, #256]
  43f63c:	add	x0, x1, #0x1
  43f640:	str	x0, [x19, #256]
  43f644:	mov	w0, #0x20                  	// #32
  43f648:	strb	w0, [x19, x1]
  43f64c:	strb	w0, [x19, #264]
  43f650:	adrp	x20, 461000 <_obstack_memory_used@@Base+0x1a094>
  43f654:	add	x20, x20, #0xee8
  43f658:	add	x22, x20, #0x2
  43f65c:	mov	x23, #0xff                  	// #255
  43f660:	b	43f6b0 <ferror@plt+0x3cde0>
  43f664:	strb	wzr, [x19, #255]
  43f668:	ldr	x3, [x19, #272]
  43f66c:	ldr	x2, [x19, #280]
  43f670:	mov	x1, #0xff                  	// #255
  43f674:	mov	x0, x19
  43f678:	blr	x3
  43f67c:	str	xzr, [x19, #256]
  43f680:	ldr	x0, [x19, #320]
  43f684:	add	x0, x0, #0x1
  43f688:	str	x0, [x19, #320]
  43f68c:	b	43f638 <ferror@plt+0x3cd68>
  43f690:	ldr	x0, [x19, #256]
  43f694:	add	x1, x0, #0x1
  43f698:	str	x1, [x19, #256]
  43f69c:	strb	w21, [x19, x0]
  43f6a0:	strb	w21, [x19, #264]
  43f6a4:	add	x20, x20, #0x1
  43f6a8:	cmp	x22, x20
  43f6ac:	b.eq	43f6ec <ferror@plt+0x3ce1c>  // b.none
  43f6b0:	ldrb	w21, [x20]
  43f6b4:	ldr	x0, [x19, #256]
  43f6b8:	cmp	x0, #0xff
  43f6bc:	b.ne	43f690 <ferror@plt+0x3cdc0>  // b.any
  43f6c0:	strb	wzr, [x19, #255]
  43f6c4:	ldr	x3, [x19, #272]
  43f6c8:	ldr	x2, [x19, #280]
  43f6cc:	mov	x1, x23
  43f6d0:	mov	x0, x19
  43f6d4:	blr	x3
  43f6d8:	str	xzr, [x19, #256]
  43f6dc:	ldr	x0, [x19, #320]
  43f6e0:	add	x0, x0, #0x1
  43f6e4:	str	x0, [x19, #320]
  43f6e8:	b	43f690 <ferror@plt+0x3cdc0>
  43f6ec:	ldp	x23, x24, [sp, #48]
  43f6f0:	b	43f5c4 <ferror@plt+0x3ccf4>
  43f6f4:	adrp	x20, 465000 <_obstack_memory_used@@Base+0x1e094>
  43f6f8:	add	x20, x20, #0xee8
  43f6fc:	add	x22, x20, #0x8
  43f700:	mov	x23, #0xff                  	// #255
  43f704:	b	43f728 <ferror@plt+0x3ce58>
  43f708:	ldr	x0, [x19, #256]
  43f70c:	add	x1, x0, #0x1
  43f710:	str	x1, [x19, #256]
  43f714:	strb	w21, [x19, x0]
  43f718:	strb	w21, [x19, #264]
  43f71c:	add	x20, x20, #0x1
  43f720:	cmp	x20, x22
  43f724:	b.eq	43f764 <ferror@plt+0x3ce94>  // b.none
  43f728:	ldrb	w21, [x20]
  43f72c:	ldr	x0, [x19, #256]
  43f730:	cmp	x0, #0xff
  43f734:	b.ne	43f708 <ferror@plt+0x3ce38>  // b.any
  43f738:	strb	wzr, [x19, #255]
  43f73c:	ldr	x3, [x19, #272]
  43f740:	ldr	x2, [x19, #280]
  43f744:	mov	x1, x23
  43f748:	mov	x0, x19
  43f74c:	blr	x3
  43f750:	str	xzr, [x19, #256]
  43f754:	ldr	x0, [x19, #320]
  43f758:	add	x0, x0, #0x1
  43f75c:	str	x0, [x19, #320]
  43f760:	b	43f708 <ferror@plt+0x3ce38>
  43f764:	ldp	x23, x24, [sp, #48]
  43f768:	b	43f5c4 <ferror@plt+0x3ccf4>
  43f76c:	adrp	x20, 465000 <_obstack_memory_used@@Base+0x1e094>
  43f770:	add	x20, x20, #0xef8
  43f774:	add	x22, x20, #0xa
  43f778:	mov	x23, #0xff                  	// #255
  43f77c:	b	43f7a0 <ferror@plt+0x3ced0>
  43f780:	ldr	x0, [x19, #256]
  43f784:	add	x1, x0, #0x1
  43f788:	str	x1, [x19, #256]
  43f78c:	strb	w21, [x19, x0]
  43f790:	strb	w21, [x19, #264]
  43f794:	add	x20, x20, #0x1
  43f798:	cmp	x20, x22
  43f79c:	b.eq	43f7dc <ferror@plt+0x3cf0c>  // b.none
  43f7a0:	ldrb	w21, [x20]
  43f7a4:	ldr	x0, [x19, #256]
  43f7a8:	cmp	x0, #0xff
  43f7ac:	b.ne	43f780 <ferror@plt+0x3ceb0>  // b.any
  43f7b0:	strb	wzr, [x19, #255]
  43f7b4:	ldr	x3, [x19, #272]
  43f7b8:	ldr	x2, [x19, #280]
  43f7bc:	mov	x1, x23
  43f7c0:	mov	x0, x19
  43f7c4:	blr	x3
  43f7c8:	str	xzr, [x19, #256]
  43f7cc:	ldr	x0, [x19, #320]
  43f7d0:	add	x0, x0, #0x1
  43f7d4:	str	x0, [x19, #320]
  43f7d8:	b	43f780 <ferror@plt+0x3ceb0>
  43f7dc:	ldp	x23, x24, [sp, #48]
  43f7e0:	b	43f5c4 <ferror@plt+0x3ccf4>
  43f7e4:	ldrb	w0, [x19, #264]
  43f7e8:	cmp	w0, #0x28
  43f7ec:	b.eq	43f814 <ferror@plt+0x3cf44>  // b.none
  43f7f0:	ldr	x0, [x19, #256]
  43f7f4:	cmp	x0, #0xff
  43f7f8:	b.eq	43f838 <ferror@plt+0x3cf68>  // b.none
  43f7fc:	ldr	x1, [x19, #256]
  43f800:	add	x0, x1, #0x1
  43f804:	str	x0, [x19, #256]
  43f808:	mov	w0, #0x20                  	// #32
  43f80c:	strb	w0, [x19, x1]
  43f810:	strb	w0, [x19, #264]
  43f814:	ldr	x2, [x20, #8]
  43f818:	mov	w1, w22
  43f81c:	mov	x0, x19
  43f820:	bl	43ef90 <ferror@plt+0x3c6c0>
  43f824:	adrp	x20, 465000 <_obstack_memory_used@@Base+0x1e094>
  43f828:	add	x20, x20, #0xf08
  43f82c:	add	x22, x20, #0x3
  43f830:	mov	x23, #0xff                  	// #255
  43f834:	b	43f884 <ferror@plt+0x3cfb4>
  43f838:	strb	wzr, [x19, #255]
  43f83c:	ldr	x3, [x19, #272]
  43f840:	ldr	x2, [x19, #280]
  43f844:	mov	x1, #0xff                  	// #255
  43f848:	mov	x0, x19
  43f84c:	blr	x3
  43f850:	str	xzr, [x19, #256]
  43f854:	ldr	x0, [x19, #320]
  43f858:	add	x0, x0, #0x1
  43f85c:	str	x0, [x19, #320]
  43f860:	b	43f7fc <ferror@plt+0x3cf2c>
  43f864:	ldr	x0, [x19, #256]
  43f868:	add	x1, x0, #0x1
  43f86c:	str	x1, [x19, #256]
  43f870:	strb	w21, [x19, x0]
  43f874:	strb	w21, [x19, #264]
  43f878:	add	x20, x20, #0x1
  43f87c:	cmp	x20, x22
  43f880:	b.eq	43f8c0 <ferror@plt+0x3cff0>  // b.none
  43f884:	ldrb	w21, [x20]
  43f888:	ldr	x0, [x19, #256]
  43f88c:	cmp	x0, #0xff
  43f890:	b.ne	43f864 <ferror@plt+0x3cf94>  // b.any
  43f894:	strb	wzr, [x19, #255]
  43f898:	ldr	x3, [x19, #272]
  43f89c:	ldr	x2, [x19, #280]
  43f8a0:	mov	x1, x23
  43f8a4:	mov	x0, x19
  43f8a8:	blr	x3
  43f8ac:	str	xzr, [x19, #256]
  43f8b0:	ldr	x0, [x19, #320]
  43f8b4:	add	x0, x0, #0x1
  43f8b8:	str	x0, [x19, #320]
  43f8bc:	b	43f864 <ferror@plt+0x3cf94>
  43f8c0:	ldp	x23, x24, [sp, #48]
  43f8c4:	b	43f5c4 <ferror@plt+0x3ccf4>
  43f8c8:	ldr	x2, [x2, #8]
  43f8cc:	mov	w1, w22
  43f8d0:	mov	x0, x19
  43f8d4:	bl	43ef90 <ferror@plt+0x3c6c0>
  43f8d8:	ldp	x23, x24, [sp, #48]
  43f8dc:	b	43f5c4 <ferror@plt+0x3ccf4>
  43f8e0:	str	x25, [sp, #64]
  43f8e4:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43f8e8:	add	x21, x21, #0xf10
  43f8ec:	add	x24, x21, #0xa
  43f8f0:	mov	x25, #0xff                  	// #255
  43f8f4:	b	43f918 <ferror@plt+0x3d048>
  43f8f8:	ldr	x0, [x19, #256]
  43f8fc:	add	x1, x0, #0x1
  43f900:	str	x1, [x19, #256]
  43f904:	strb	w23, [x19, x0]
  43f908:	strb	w23, [x19, #264]
  43f90c:	add	x21, x21, #0x1
  43f910:	cmp	x21, x24
  43f914:	b.eq	43f954 <ferror@plt+0x3d084>  // b.none
  43f918:	ldrb	w23, [x21]
  43f91c:	ldr	x0, [x19, #256]
  43f920:	cmp	x0, #0xff
  43f924:	b.ne	43f8f8 <ferror@plt+0x3d028>  // b.any
  43f928:	strb	wzr, [x19, #255]
  43f92c:	ldr	x3, [x19, #272]
  43f930:	ldr	x2, [x19, #280]
  43f934:	mov	x1, x25
  43f938:	mov	x0, x19
  43f93c:	blr	x3
  43f940:	str	xzr, [x19, #256]
  43f944:	ldr	x0, [x19, #320]
  43f948:	add	x0, x0, #0x1
  43f94c:	str	x0, [x19, #320]
  43f950:	b	43f8f8 <ferror@plt+0x3d028>
  43f954:	ldr	x2, [x20, #8]
  43f958:	mov	w1, w22
  43f95c:	mov	x0, x19
  43f960:	bl	43ef90 <ferror@plt+0x3c6c0>
  43f964:	ldr	x0, [x19, #256]
  43f968:	cmp	x0, #0xff
  43f96c:	b.eq	43f994 <ferror@plt+0x3d0c4>  // b.none
  43f970:	ldr	x1, [x19, #256]
  43f974:	add	x0, x1, #0x1
  43f978:	str	x0, [x19, #256]
  43f97c:	mov	w0, #0x29                  	// #41
  43f980:	strb	w0, [x19, x1]
  43f984:	strb	w0, [x19, #264]
  43f988:	ldp	x23, x24, [sp, #48]
  43f98c:	ldr	x25, [sp, #64]
  43f990:	b	43f5c4 <ferror@plt+0x3ccf4>
  43f994:	strb	wzr, [x19, #255]
  43f998:	ldr	x3, [x19, #272]
  43f99c:	ldr	x2, [x19, #280]
  43f9a0:	mov	x1, #0xff                  	// #255
  43f9a4:	mov	x0, x19
  43f9a8:	blr	x3
  43f9ac:	str	xzr, [x19, #256]
  43f9b0:	ldr	x0, [x19, #320]
  43f9b4:	add	x0, x0, #0x1
  43f9b8:	str	x0, [x19, #320]
  43f9bc:	b	43f970 <ferror@plt+0x3d0a0>
  43f9c0:	ldp	x23, x24, [sp, #48]
  43f9c4:	mov	x2, x20
  43f9c8:	mov	w1, w22
  43f9cc:	mov	x0, x19
  43f9d0:	bl	43ef90 <ferror@plt+0x3c6c0>
  43f9d4:	b	43f5c4 <ferror@plt+0x3ccf4>
  43f9d8:	ldp	x23, x24, [sp, #48]
  43f9dc:	ldr	x25, [sp, #64]
  43f9e0:	b	43f5c4 <ferror@plt+0x3ccf4>
  43f9e4:	ldp	x23, x24, [sp, #48]
  43f9e8:	ldr	x25, [sp, #64]
  43f9ec:	b	43f5c4 <ferror@plt+0x3ccf4>
  43f9f0:	ldp	x23, x24, [sp, #48]
  43f9f4:	b	43f5c4 <ferror@plt+0x3ccf4>
  43f9f8:	stp	x29, x30, [sp, #-64]!
  43f9fc:	mov	x29, sp
  43fa00:	stp	x19, x20, [sp, #16]
  43fa04:	stp	x21, x22, [sp, #32]
  43fa08:	str	x23, [sp, #48]
  43fa0c:	mov	x19, x0
  43fa10:	mov	w21, w1
  43fa14:	mov	x22, x2
  43fa18:	mov	x20, x3
  43fa1c:	cbz	x3, 43fa64 <ferror@plt+0x3d194>
  43fa20:	mov	x1, x3
  43fa24:	mov	x3, #0x1                   	// #1
  43fa28:	mov	x2, #0xe000000             	// #234881024
  43fa2c:	movk	x2, #0x862, lsl #32
  43fa30:	ldr	w0, [x1, #16]
  43fa34:	cbnz	w0, 43fa64 <ferror@plt+0x3d194>
  43fa38:	ldr	x0, [x1, #8]
  43fa3c:	ldr	w0, [x0]
  43fa40:	cmp	w0, #0x2b
  43fa44:	b.hi	43fa5c <ferror@plt+0x3d18c>  // b.pmore
  43fa48:	lsl	x0, x3, x0
  43fa4c:	tst	x0, x2
  43fa50:	b.ne	43fa98 <ferror@plt+0x3d1c8>  // b.any
  43fa54:	tst	x0, #0x1c00000000
  43fa58:	b.ne	43fa84 <ferror@plt+0x3d1b4>  // b.any
  43fa5c:	ldr	x1, [x1]
  43fa60:	cbnz	x1, 43fa30 <ferror@plt+0x3d160>
  43fa64:	ldr	x23, [x19, #296]
  43fa68:	str	xzr, [x19, #296]
  43fa6c:	mov	w3, #0x0                   	// #0
  43fa70:	mov	x2, x20
  43fa74:	mov	w1, w21
  43fa78:	mov	x0, x19
  43fa7c:	bl	43fc90 <ferror@plt+0x3d3c0>
  43fa80:	b	43fb2c <ferror@plt+0x3d25c>
  43fa84:	ldrb	w0, [x19, #264]
  43fa88:	and	w0, w0, #0xfffffffd
  43fa8c:	and	w0, w0, #0xff
  43fa90:	cmp	w0, #0x28
  43fa94:	b.eq	43fac8 <ferror@plt+0x3d1f8>  // b.none
  43fa98:	ldrb	w0, [x19, #264]
  43fa9c:	cmp	w0, #0x20
  43faa0:	b.eq	43fac8 <ferror@plt+0x3d1f8>  // b.none
  43faa4:	ldr	x0, [x19, #256]
  43faa8:	cmp	x0, #0xff
  43faac:	b.eq	43fbb4 <ferror@plt+0x3d2e4>  // b.none
  43fab0:	ldr	x1, [x19, #256]
  43fab4:	add	x0, x1, #0x1
  43fab8:	str	x0, [x19, #256]
  43fabc:	mov	w0, #0x20                  	// #32
  43fac0:	strb	w0, [x19, x1]
  43fac4:	strb	w0, [x19, #264]
  43fac8:	ldr	x0, [x19, #256]
  43facc:	cmp	x0, #0xff
  43fad0:	b.eq	43fbe0 <ferror@plt+0x3d310>  // b.none
  43fad4:	ldr	x1, [x19, #256]
  43fad8:	add	x0, x1, #0x1
  43fadc:	str	x0, [x19, #256]
  43fae0:	mov	w0, #0x28                  	// #40
  43fae4:	strb	w0, [x19, x1]
  43fae8:	strb	w0, [x19, #264]
  43faec:	ldr	x23, [x19, #296]
  43faf0:	str	xzr, [x19, #296]
  43faf4:	mov	w3, #0x0                   	// #0
  43faf8:	mov	x2, x20
  43fafc:	mov	w1, w21
  43fb00:	mov	x0, x19
  43fb04:	bl	43fc90 <ferror@plt+0x3d3c0>
  43fb08:	ldr	x0, [x19, #256]
  43fb0c:	cmp	x0, #0xff
  43fb10:	b.eq	43fc0c <ferror@plt+0x3d33c>  // b.none
  43fb14:	ldr	x1, [x19, #256]
  43fb18:	add	x0, x1, #0x1
  43fb1c:	str	x0, [x19, #256]
  43fb20:	mov	w0, #0x29                  	// #41
  43fb24:	strb	w0, [x19, x1]
  43fb28:	strb	w0, [x19, #264]
  43fb2c:	ldr	x0, [x19, #256]
  43fb30:	cmp	x0, #0xff
  43fb34:	b.eq	43fc38 <ferror@plt+0x3d368>  // b.none
  43fb38:	ldr	x1, [x19, #256]
  43fb3c:	add	x0, x1, #0x1
  43fb40:	str	x0, [x19, #256]
  43fb44:	mov	w0, #0x28                  	// #40
  43fb48:	strb	w0, [x19, x1]
  43fb4c:	strb	w0, [x19, #264]
  43fb50:	ldr	x2, [x22, #16]
  43fb54:	cbz	x2, 43fb64 <ferror@plt+0x3d294>
  43fb58:	mov	w1, w21
  43fb5c:	mov	x0, x19
  43fb60:	bl	43ef90 <ferror@plt+0x3c6c0>
  43fb64:	ldr	x0, [x19, #256]
  43fb68:	cmp	x0, #0xff
  43fb6c:	b.eq	43fc64 <ferror@plt+0x3d394>  // b.none
  43fb70:	ldr	x1, [x19, #256]
  43fb74:	add	x0, x1, #0x1
  43fb78:	str	x0, [x19, #256]
  43fb7c:	mov	w0, #0x29                  	// #41
  43fb80:	strb	w0, [x19, x1]
  43fb84:	strb	w0, [x19, #264]
  43fb88:	mov	w3, #0x1                   	// #1
  43fb8c:	mov	x2, x20
  43fb90:	mov	w1, w21
  43fb94:	mov	x0, x19
  43fb98:	bl	43fc90 <ferror@plt+0x3d3c0>
  43fb9c:	str	x23, [x19, #296]
  43fba0:	ldp	x19, x20, [sp, #16]
  43fba4:	ldp	x21, x22, [sp, #32]
  43fba8:	ldr	x23, [sp, #48]
  43fbac:	ldp	x29, x30, [sp], #64
  43fbb0:	ret
  43fbb4:	strb	wzr, [x19, #255]
  43fbb8:	ldr	x3, [x19, #272]
  43fbbc:	ldr	x2, [x19, #280]
  43fbc0:	mov	x1, #0xff                  	// #255
  43fbc4:	mov	x0, x19
  43fbc8:	blr	x3
  43fbcc:	str	xzr, [x19, #256]
  43fbd0:	ldr	x0, [x19, #320]
  43fbd4:	add	x0, x0, #0x1
  43fbd8:	str	x0, [x19, #320]
  43fbdc:	b	43fab0 <ferror@plt+0x3d1e0>
  43fbe0:	strb	wzr, [x19, #255]
  43fbe4:	ldr	x3, [x19, #272]
  43fbe8:	ldr	x2, [x19, #280]
  43fbec:	mov	x1, #0xff                  	// #255
  43fbf0:	mov	x0, x19
  43fbf4:	blr	x3
  43fbf8:	str	xzr, [x19, #256]
  43fbfc:	ldr	x0, [x19, #320]
  43fc00:	add	x0, x0, #0x1
  43fc04:	str	x0, [x19, #320]
  43fc08:	b	43fad4 <ferror@plt+0x3d204>
  43fc0c:	strb	wzr, [x19, #255]
  43fc10:	ldr	x3, [x19, #272]
  43fc14:	ldr	x2, [x19, #280]
  43fc18:	mov	x1, #0xff                  	// #255
  43fc1c:	mov	x0, x19
  43fc20:	blr	x3
  43fc24:	str	xzr, [x19, #256]
  43fc28:	ldr	x0, [x19, #320]
  43fc2c:	add	x0, x0, #0x1
  43fc30:	str	x0, [x19, #320]
  43fc34:	b	43fb14 <ferror@plt+0x3d244>
  43fc38:	strb	wzr, [x19, #255]
  43fc3c:	ldr	x3, [x19, #272]
  43fc40:	ldr	x2, [x19, #280]
  43fc44:	mov	x1, #0xff                  	// #255
  43fc48:	mov	x0, x19
  43fc4c:	blr	x3
  43fc50:	str	xzr, [x19, #256]
  43fc54:	ldr	x0, [x19, #320]
  43fc58:	add	x0, x0, #0x1
  43fc5c:	str	x0, [x19, #320]
  43fc60:	b	43fb38 <ferror@plt+0x3d268>
  43fc64:	strb	wzr, [x19, #255]
  43fc68:	ldr	x3, [x19, #272]
  43fc6c:	ldr	x2, [x19, #280]
  43fc70:	mov	x1, #0xff                  	// #255
  43fc74:	mov	x0, x19
  43fc78:	blr	x3
  43fc7c:	str	xzr, [x19, #256]
  43fc80:	ldr	x0, [x19, #320]
  43fc84:	add	x0, x0, #0x1
  43fc88:	str	x0, [x19, #320]
  43fc8c:	b	43fb70 <ferror@plt+0x3d2a0>
  43fc90:	cbz	x2, 44004c <ferror@plt+0x3d77c>
  43fc94:	stp	x29, x30, [sp, #-112]!
  43fc98:	mov	x29, sp
  43fc9c:	stp	x19, x20, [sp, #16]
  43fca0:	stp	x21, x22, [sp, #32]
  43fca4:	mov	x19, x0
  43fca8:	mov	w22, w1
  43fcac:	mov	x20, x2
  43fcb0:	mov	w21, w3
  43fcb4:	ldr	w0, [x0, #304]
  43fcb8:	cbnz	w0, 43fd38 <ferror@plt+0x3d468>
  43fcbc:	ldr	w0, [x2, #16]
  43fcc0:	cbnz	w0, 43fd48 <ferror@plt+0x3d478>
  43fcc4:	cbnz	w3, 43fcd8 <ferror@plt+0x3d408>
  43fcc8:	ldr	x0, [x2, #8]
  43fccc:	ldr	w0, [x0]
  43fcd0:	bl	43a1a8 <ferror@plt+0x378d8>
  43fcd4:	cbnz	w0, 43fd48 <ferror@plt+0x3d478>
  43fcd8:	stp	x23, x24, [sp, #48]
  43fcdc:	mov	w0, #0x1                   	// #1
  43fce0:	str	w0, [x20, #16]
  43fce4:	ldr	x23, [x19, #288]
  43fce8:	ldr	x0, [x20, #24]
  43fcec:	str	x0, [x19, #288]
  43fcf0:	ldr	x2, [x20, #8]
  43fcf4:	ldr	w0, [x2]
  43fcf8:	cmp	w0, #0x29
  43fcfc:	b.eq	43fd60 <ferror@plt+0x3d490>  // b.none
  43fd00:	cmp	w0, #0x2a
  43fd04:	b.eq	43fd7c <ferror@plt+0x3d4ac>  // b.none
  43fd08:	cmp	w0, #0x2
  43fd0c:	b.eq	43fd98 <ferror@plt+0x3d4c8>  // b.none
  43fd10:	mov	w1, w22
  43fd14:	mov	x0, x19
  43fd18:	bl	43f02c <ferror@plt+0x3c75c>
  43fd1c:	str	x23, [x19, #288]
  43fd20:	mov	w3, w21
  43fd24:	ldr	x2, [x20]
  43fd28:	mov	w1, w22
  43fd2c:	mov	x0, x19
  43fd30:	bl	43fc90 <ferror@plt+0x3d3c0>
  43fd34:	ldp	x23, x24, [sp, #48]
  43fd38:	ldp	x19, x20, [sp, #16]
  43fd3c:	ldp	x21, x22, [sp, #32]
  43fd40:	ldp	x29, x30, [sp], #112
  43fd44:	ret
  43fd48:	mov	w3, w21
  43fd4c:	ldr	x2, [x20]
  43fd50:	mov	w1, w22
  43fd54:	mov	x0, x19
  43fd58:	bl	43fc90 <ferror@plt+0x3d3c0>
  43fd5c:	b	43fd38 <ferror@plt+0x3d468>
  43fd60:	ldr	x3, [x20]
  43fd64:	mov	w1, w22
  43fd68:	mov	x0, x19
  43fd6c:	bl	43f9f8 <ferror@plt+0x3d128>
  43fd70:	str	x23, [x19, #288]
  43fd74:	ldp	x23, x24, [sp, #48]
  43fd78:	b	43fd38 <ferror@plt+0x3d468>
  43fd7c:	ldr	x3, [x20]
  43fd80:	mov	w1, w22
  43fd84:	mov	x0, x19
  43fd88:	bl	440050 <ferror@plt+0x3d780>
  43fd8c:	str	x23, [x19, #288]
  43fd90:	ldp	x23, x24, [sp, #48]
  43fd94:	b	43fd38 <ferror@plt+0x3d468>
  43fd98:	ldr	x21, [x19, #296]
  43fd9c:	str	xzr, [x19, #296]
  43fda0:	ldr	x0, [x20, #8]
  43fda4:	ldr	x2, [x0, #8]
  43fda8:	mov	w1, w22
  43fdac:	mov	x0, x19
  43fdb0:	bl	43ef90 <ferror@plt+0x3c6c0>
  43fdb4:	str	x21, [x19, #296]
  43fdb8:	tbz	w22, #2, 43fe08 <ferror@plt+0x3d538>
  43fdbc:	ldr	x0, [x19, #256]
  43fdc0:	cmp	x0, #0xff
  43fdc4:	b.eq	43fe84 <ferror@plt+0x3d5b4>  // b.none
  43fdc8:	ldr	x1, [x19, #256]
  43fdcc:	add	x0, x1, #0x1
  43fdd0:	str	x0, [x19, #256]
  43fdd4:	mov	w0, #0x2e                  	// #46
  43fdd8:	strb	w0, [x19, x1]
  43fddc:	strb	w0, [x19, #264]
  43fde0:	ldr	x0, [x20, #8]
  43fde4:	ldr	x20, [x0, #16]
  43fde8:	ldr	w0, [x20]
  43fdec:	cmp	w0, #0x47
  43fdf0:	b.eq	43feb0 <ferror@plt+0x3d5e0>  // b.none
  43fdf4:	ldr	w0, [x20]
  43fdf8:	bl	43a1a8 <ferror@plt+0x378d8>
  43fdfc:	cbz	w0, 440030 <ferror@plt+0x3d760>
  43fe00:	ldr	x20, [x20, #8]
  43fe04:	b	43fdf4 <ferror@plt+0x3d524>
  43fe08:	stp	x25, x26, [sp, #64]
  43fe0c:	adrp	x21, 461000 <_obstack_memory_used@@Base+0x1a094>
  43fe10:	add	x21, x21, #0xfd8
  43fe14:	add	x25, x21, #0x2
  43fe18:	mov	x26, #0xff                  	// #255
  43fe1c:	b	43fe40 <ferror@plt+0x3d570>
  43fe20:	ldr	x0, [x19, #256]
  43fe24:	add	x1, x0, #0x1
  43fe28:	str	x1, [x19, #256]
  43fe2c:	strb	w24, [x19, x0]
  43fe30:	strb	w24, [x19, #264]
  43fe34:	add	x21, x21, #0x1
  43fe38:	cmp	x21, x25
  43fe3c:	b.eq	43fe7c <ferror@plt+0x3d5ac>  // b.none
  43fe40:	ldrb	w24, [x21]
  43fe44:	ldr	x0, [x19, #256]
  43fe48:	cmp	x0, #0xff
  43fe4c:	b.ne	43fe20 <ferror@plt+0x3d550>  // b.any
  43fe50:	strb	wzr, [x19, #255]
  43fe54:	ldr	x3, [x19, #272]
  43fe58:	ldr	x2, [x19, #280]
  43fe5c:	mov	x1, x26
  43fe60:	mov	x0, x19
  43fe64:	blr	x3
  43fe68:	str	xzr, [x19, #256]
  43fe6c:	ldr	x0, [x19, #320]
  43fe70:	add	x0, x0, #0x1
  43fe74:	str	x0, [x19, #320]
  43fe78:	b	43fe20 <ferror@plt+0x3d550>
  43fe7c:	ldp	x25, x26, [sp, #64]
  43fe80:	b	43fde0 <ferror@plt+0x3d510>
  43fe84:	strb	wzr, [x19, #255]
  43fe88:	ldr	x3, [x19, #272]
  43fe8c:	ldr	x2, [x19, #280]
  43fe90:	mov	x1, #0xff                  	// #255
  43fe94:	mov	x0, x19
  43fe98:	blr	x3
  43fe9c:	str	xzr, [x19, #256]
  43fea0:	ldr	x0, [x19, #320]
  43fea4:	add	x0, x0, #0x1
  43fea8:	str	x0, [x19, #320]
  43feac:	b	43fdc8 <ferror@plt+0x3d4f8>
  43feb0:	stp	x25, x26, [sp, #64]
  43feb4:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43feb8:	add	x21, x21, #0xb60
  43febc:	add	x25, x21, #0xd
  43fec0:	mov	x26, #0xff                  	// #255
  43fec4:	b	43fee8 <ferror@plt+0x3d618>
  43fec8:	ldr	x0, [x19, #256]
  43fecc:	add	x1, x0, #0x1
  43fed0:	str	x1, [x19, #256]
  43fed4:	strb	w24, [x19, x0]
  43fed8:	strb	w24, [x19, #264]
  43fedc:	add	x21, x21, #0x1
  43fee0:	cmp	x21, x25
  43fee4:	b.eq	43ff24 <ferror@plt+0x3d654>  // b.none
  43fee8:	ldrb	w24, [x21]
  43feec:	ldr	x0, [x19, #256]
  43fef0:	cmp	x0, #0xff
  43fef4:	b.ne	43fec8 <ferror@plt+0x3d5f8>  // b.any
  43fef8:	strb	wzr, [x19, #255]
  43fefc:	ldr	x3, [x19, #272]
  43ff00:	ldr	x2, [x19, #280]
  43ff04:	mov	x1, x26
  43ff08:	mov	x0, x19
  43ff0c:	blr	x3
  43ff10:	str	xzr, [x19, #256]
  43ff14:	ldr	x0, [x19, #320]
  43ff18:	add	x0, x0, #0x1
  43ff1c:	str	x0, [x19, #320]
  43ff20:	b	43fec8 <ferror@plt+0x3d5f8>
  43ff24:	ldr	w2, [x20, #16]
  43ff28:	add	w2, w2, #0x1
  43ff2c:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  43ff30:	add	x1, x1, #0x40
  43ff34:	add	x0, sp, #0x50
  43ff38:	bl	402350 <sprintf@plt>
  43ff3c:	add	x0, sp, #0x50
  43ff40:	bl	4022b0 <strlen@plt>
  43ff44:	cbz	x0, 43ffb4 <ferror@plt+0x3d6e4>
  43ff48:	add	x21, sp, #0x50
  43ff4c:	add	x25, x0, x21
  43ff50:	mov	x26, #0xff                  	// #255
  43ff54:	b	43ff78 <ferror@plt+0x3d6a8>
  43ff58:	ldr	x0, [x19, #256]
  43ff5c:	add	x1, x0, #0x1
  43ff60:	str	x1, [x19, #256]
  43ff64:	strb	w24, [x19, x0]
  43ff68:	strb	w24, [x19, #264]
  43ff6c:	add	x21, x21, #0x1
  43ff70:	cmp	x25, x21
  43ff74:	b.eq	43ffb4 <ferror@plt+0x3d6e4>  // b.none
  43ff78:	ldrb	w24, [x21]
  43ff7c:	ldr	x0, [x19, #256]
  43ff80:	cmp	x0, #0xff
  43ff84:	b.ne	43ff58 <ferror@plt+0x3d688>  // b.any
  43ff88:	strb	wzr, [x19, #255]
  43ff8c:	ldr	x3, [x19, #272]
  43ff90:	ldr	x2, [x19, #280]
  43ff94:	mov	x1, x26
  43ff98:	mov	x0, x19
  43ff9c:	blr	x3
  43ffa0:	str	xzr, [x19, #256]
  43ffa4:	ldr	x0, [x19, #320]
  43ffa8:	add	x0, x0, #0x1
  43ffac:	str	x0, [x19, #320]
  43ffb0:	b	43ff58 <ferror@plt+0x3d688>
  43ffb4:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  43ffb8:	add	x21, x21, #0xb70
  43ffbc:	add	x25, x21, #0x3
  43ffc0:	mov	x26, #0xff                  	// #255
  43ffc4:	b	43ffe8 <ferror@plt+0x3d718>
  43ffc8:	ldr	x0, [x19, #256]
  43ffcc:	add	x1, x0, #0x1
  43ffd0:	str	x1, [x19, #256]
  43ffd4:	strb	w24, [x19, x0]
  43ffd8:	strb	w24, [x19, #264]
  43ffdc:	add	x21, x21, #0x1
  43ffe0:	cmp	x25, x21
  43ffe4:	b.eq	440024 <ferror@plt+0x3d754>  // b.none
  43ffe8:	ldrb	w24, [x21]
  43ffec:	ldr	x0, [x19, #256]
  43fff0:	cmp	x0, #0xff
  43fff4:	b.ne	43ffc8 <ferror@plt+0x3d6f8>  // b.any
  43fff8:	strb	wzr, [x19, #255]
  43fffc:	ldr	x3, [x19, #272]
  440000:	ldr	x2, [x19, #280]
  440004:	mov	x1, x26
  440008:	mov	x0, x19
  44000c:	blr	x3
  440010:	str	xzr, [x19, #256]
  440014:	ldr	x0, [x19, #320]
  440018:	add	x0, x0, #0x1
  44001c:	str	x0, [x19, #320]
  440020:	b	43ffc8 <ferror@plt+0x3d6f8>
  440024:	ldr	x20, [x20, #8]
  440028:	ldp	x25, x26, [sp, #64]
  44002c:	b	43fdf4 <ferror@plt+0x3d524>
  440030:	mov	x2, x20
  440034:	mov	w1, w22
  440038:	mov	x0, x19
  44003c:	bl	43ef90 <ferror@plt+0x3c6c0>
  440040:	str	x23, [x19, #288]
  440044:	ldp	x23, x24, [sp, #48]
  440048:	b	43fd38 <ferror@plt+0x3d468>
  44004c:	ret
  440050:	stp	x29, x30, [sp, #-80]!
  440054:	mov	x29, sp
  440058:	stp	x19, x20, [sp, #16]
  44005c:	stp	x21, x22, [sp, #32]
  440060:	stp	x23, x24, [sp, #48]
  440064:	mov	x19, x0
  440068:	mov	w22, w1
  44006c:	mov	x24, x2
  440070:	cbz	x3, 44021c <ferror@plt+0x3d94c>
  440074:	mov	x21, x3
  440078:	mov	x0, x3
  44007c:	ldr	w20, [x0, #16]
  440080:	cbz	w20, 4400ac <ferror@plt+0x3d7dc>
  440084:	ldr	x0, [x0]
  440088:	cbnz	x0, 44007c <ferror@plt+0x3d7ac>
  44008c:	mov	w20, #0x1                   	// #1
  440090:	mov	w3, #0x0                   	// #0
  440094:	mov	x2, x21
  440098:	mov	w1, w22
  44009c:	mov	x0, x19
  4400a0:	bl	43fc90 <ferror@plt+0x3d3c0>
  4400a4:	cbz	w20, 440240 <ferror@plt+0x3d970>
  4400a8:	b	44021c <ferror@plt+0x3d94c>
  4400ac:	ldr	x0, [x0, #8]
  4400b0:	ldr	w0, [x0]
  4400b4:	cmp	w0, #0x2a
  4400b8:	b.eq	440090 <ferror@plt+0x3d7c0>  // b.none
  4400bc:	stp	x25, x26, [sp, #64]
  4400c0:	adrp	x20, 465000 <_obstack_memory_used@@Base+0x1e094>
  4400c4:	add	x20, x20, #0xdf8
  4400c8:	add	x25, x20, #0x2
  4400cc:	mov	x26, #0xff                  	// #255
  4400d0:	b	4400f4 <ferror@plt+0x3d824>
  4400d4:	ldr	x0, [x19, #256]
  4400d8:	add	x1, x0, #0x1
  4400dc:	str	x1, [x19, #256]
  4400e0:	strb	w23, [x19, x0]
  4400e4:	strb	w23, [x19, #264]
  4400e8:	add	x20, x20, #0x1
  4400ec:	cmp	x20, x25
  4400f0:	b.eq	4401e0 <ferror@plt+0x3d910>  // b.none
  4400f4:	ldrb	w23, [x20]
  4400f8:	ldr	x0, [x19, #256]
  4400fc:	cmp	x0, #0xff
  440100:	b.ne	4400d4 <ferror@plt+0x3d804>  // b.any
  440104:	strb	wzr, [x19, #255]
  440108:	ldr	x3, [x19, #272]
  44010c:	ldr	x2, [x19, #280]
  440110:	mov	x1, x26
  440114:	mov	x0, x19
  440118:	blr	x3
  44011c:	str	xzr, [x19, #256]
  440120:	ldr	x0, [x19, #320]
  440124:	add	x0, x0, #0x1
  440128:	str	x0, [x19, #320]
  44012c:	b	4400d4 <ferror@plt+0x3d804>
  440130:	strb	wzr, [x19, #255]
  440134:	ldr	x3, [x19, #272]
  440138:	ldr	x2, [x19, #280]
  44013c:	mov	x1, #0xff                  	// #255
  440140:	mov	x0, x19
  440144:	blr	x3
  440148:	str	xzr, [x19, #256]
  44014c:	ldr	x0, [x19, #320]
  440150:	add	x0, x0, #0x1
  440154:	str	x0, [x19, #320]
  440158:	b	440200 <ferror@plt+0x3d930>
  44015c:	strb	wzr, [x19, #255]
  440160:	ldr	x3, [x19, #272]
  440164:	ldr	x2, [x19, #280]
  440168:	mov	x1, #0xff                  	// #255
  44016c:	mov	x0, x19
  440170:	blr	x3
  440174:	str	xzr, [x19, #256]
  440178:	ldr	x0, [x19, #320]
  44017c:	add	x0, x0, #0x1
  440180:	str	x0, [x19, #320]
  440184:	b	440228 <ferror@plt+0x3d958>
  440188:	strb	wzr, [x19, #255]
  44018c:	ldr	x3, [x19, #272]
  440190:	ldr	x2, [x19, #280]
  440194:	mov	x1, #0xff                  	// #255
  440198:	mov	x0, x19
  44019c:	blr	x3
  4401a0:	str	xzr, [x19, #256]
  4401a4:	ldr	x0, [x19, #320]
  4401a8:	add	x0, x0, #0x1
  4401ac:	str	x0, [x19, #320]
  4401b0:	b	44024c <ferror@plt+0x3d97c>
  4401b4:	strb	wzr, [x19, #255]
  4401b8:	ldr	x3, [x19, #272]
  4401bc:	ldr	x2, [x19, #280]
  4401c0:	mov	x1, #0xff                  	// #255
  4401c4:	mov	x0, x19
  4401c8:	blr	x3
  4401cc:	str	xzr, [x19, #256]
  4401d0:	ldr	x0, [x19, #320]
  4401d4:	add	x0, x0, #0x1
  4401d8:	str	x0, [x19, #320]
  4401dc:	b	440284 <ferror@plt+0x3d9b4>
  4401e0:	mov	w3, #0x0                   	// #0
  4401e4:	mov	x2, x21
  4401e8:	mov	w1, w22
  4401ec:	mov	x0, x19
  4401f0:	bl	43fc90 <ferror@plt+0x3d3c0>
  4401f4:	ldr	x0, [x19, #256]
  4401f8:	cmp	x0, #0xff
  4401fc:	b.eq	440130 <ferror@plt+0x3d860>  // b.none
  440200:	ldr	x1, [x19, #256]
  440204:	add	x0, x1, #0x1
  440208:	str	x0, [x19, #256]
  44020c:	mov	w0, #0x29                  	// #41
  440210:	strb	w0, [x19, x1]
  440214:	strb	w0, [x19, #264]
  440218:	ldp	x25, x26, [sp, #64]
  44021c:	ldr	x0, [x19, #256]
  440220:	cmp	x0, #0xff
  440224:	b.eq	44015c <ferror@plt+0x3d88c>  // b.none
  440228:	ldr	x1, [x19, #256]
  44022c:	add	x0, x1, #0x1
  440230:	str	x0, [x19, #256]
  440234:	mov	w0, #0x20                  	// #32
  440238:	strb	w0, [x19, x1]
  44023c:	strb	w0, [x19, #264]
  440240:	ldr	x0, [x19, #256]
  440244:	cmp	x0, #0xff
  440248:	b.eq	440188 <ferror@plt+0x3d8b8>  // b.none
  44024c:	ldr	x1, [x19, #256]
  440250:	add	x0, x1, #0x1
  440254:	str	x0, [x19, #256]
  440258:	mov	w0, #0x5b                  	// #91
  44025c:	strb	w0, [x19, x1]
  440260:	strb	w0, [x19, #264]
  440264:	ldr	x2, [x24, #8]
  440268:	cbz	x2, 440278 <ferror@plt+0x3d9a8>
  44026c:	mov	w1, w22
  440270:	mov	x0, x19
  440274:	bl	43ef90 <ferror@plt+0x3c6c0>
  440278:	ldr	x0, [x19, #256]
  44027c:	cmp	x0, #0xff
  440280:	b.eq	4401b4 <ferror@plt+0x3d8e4>  // b.none
  440284:	ldr	x1, [x19, #256]
  440288:	add	x0, x1, #0x1
  44028c:	str	x0, [x19, #256]
  440290:	mov	w0, #0x5d                  	// #93
  440294:	strb	w0, [x19, x1]
  440298:	strb	w0, [x19, #264]
  44029c:	ldp	x19, x20, [sp, #16]
  4402a0:	ldp	x21, x22, [sp, #32]
  4402a4:	ldp	x23, x24, [sp, #48]
  4402a8:	ldp	x29, x30, [sp], #80
  4402ac:	ret
  4402b0:	stp	x29, x30, [sp, #-64]!
  4402b4:	mov	x29, sp
  4402b8:	stp	x19, x20, [sp, #16]
  4402bc:	mov	x19, x0
  4402c0:	ldr	w0, [x2]
  4402c4:	cmp	w0, #0x32
  4402c8:	b.eq	4402e0 <ferror@plt+0x3da10>  // b.none
  4402cc:	mov	x0, x19
  4402d0:	bl	43ef90 <ferror@plt+0x3c6c0>
  4402d4:	ldp	x19, x20, [sp, #16]
  4402d8:	ldp	x29, x30, [sp], #64
  4402dc:	ret
  4402e0:	stp	x21, x22, [sp, #32]
  4402e4:	ldr	x0, [x2, #8]
  4402e8:	ldr	x22, [x0, #8]
  4402ec:	ldrsw	x0, [x0, #16]
  4402f0:	cbz	x0, 440370 <ferror@plt+0x3daa0>
  4402f4:	str	x23, [sp, #48]
  4402f8:	mov	x20, x22
  4402fc:	add	x22, x22, x0
  440300:	mov	x23, #0xff                  	// #255
  440304:	b	440328 <ferror@plt+0x3da58>
  440308:	ldr	x0, [x19, #256]
  44030c:	add	x1, x0, #0x1
  440310:	str	x1, [x19, #256]
  440314:	strb	w21, [x19, x0]
  440318:	strb	w21, [x19, #264]
  44031c:	add	x20, x20, #0x1
  440320:	cmp	x20, x22
  440324:	b.eq	440364 <ferror@plt+0x3da94>  // b.none
  440328:	ldrb	w21, [x20]
  44032c:	ldr	x0, [x19, #256]
  440330:	cmp	x0, #0xff
  440334:	b.ne	440308 <ferror@plt+0x3da38>  // b.any
  440338:	strb	wzr, [x19, #255]
  44033c:	ldr	x3, [x19, #272]
  440340:	ldr	x2, [x19, #280]
  440344:	mov	x1, x23
  440348:	mov	x0, x19
  44034c:	blr	x3
  440350:	str	xzr, [x19, #256]
  440354:	ldr	x0, [x19, #320]
  440358:	add	x0, x0, #0x1
  44035c:	str	x0, [x19, #320]
  440360:	b	440308 <ferror@plt+0x3da38>
  440364:	ldp	x21, x22, [sp, #32]
  440368:	ldr	x23, [sp, #48]
  44036c:	b	4402d4 <ferror@plt+0x3da04>
  440370:	ldp	x21, x22, [sp, #32]
  440374:	b	4402d4 <ferror@plt+0x3da04>
  440378:	stp	x29, x30, [sp, #-48]!
  44037c:	mov	x29, sp
  440380:	stp	x19, x20, [sp, #16]
  440384:	str	x21, [sp, #32]
  440388:	mov	x19, x0
  44038c:	mov	w21, w1
  440390:	mov	x20, x2
  440394:	ldr	w0, [x2]
  440398:	cmp	w0, #0x31
  44039c:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  4403a0:	ccmp	w0, #0x6, #0x4, hi  // hi = pmore
  4403a4:	b.ne	4403b4 <ferror@plt+0x3dae4>  // b.any
  4403a8:	mov	x0, x19
  4403ac:	bl	43ef90 <ferror@plt+0x3c6c0>
  4403b0:	b	44040c <ferror@plt+0x3db3c>
  4403b4:	ldr	x0, [x19, #256]
  4403b8:	cmp	x0, #0xff
  4403bc:	b.eq	44041c <ferror@plt+0x3db4c>  // b.none
  4403c0:	ldr	x1, [x19, #256]
  4403c4:	add	x0, x1, #0x1
  4403c8:	str	x0, [x19, #256]
  4403cc:	mov	w0, #0x28                  	// #40
  4403d0:	strb	w0, [x19, x1]
  4403d4:	strb	w0, [x19, #264]
  4403d8:	mov	x2, x20
  4403dc:	mov	w1, w21
  4403e0:	mov	x0, x19
  4403e4:	bl	43ef90 <ferror@plt+0x3c6c0>
  4403e8:	ldr	x0, [x19, #256]
  4403ec:	cmp	x0, #0xff
  4403f0:	b.eq	440448 <ferror@plt+0x3db78>  // b.none
  4403f4:	ldr	x1, [x19, #256]
  4403f8:	add	x0, x1, #0x1
  4403fc:	str	x0, [x19, #256]
  440400:	mov	w0, #0x29                  	// #41
  440404:	strb	w0, [x19, x1]
  440408:	strb	w0, [x19, #264]
  44040c:	ldp	x19, x20, [sp, #16]
  440410:	ldr	x21, [sp, #32]
  440414:	ldp	x29, x30, [sp], #48
  440418:	ret
  44041c:	strb	wzr, [x19, #255]
  440420:	ldr	x3, [x19, #272]
  440424:	ldr	x2, [x19, #280]
  440428:	mov	x1, #0xff                  	// #255
  44042c:	mov	x0, x19
  440430:	blr	x3
  440434:	str	xzr, [x19, #256]
  440438:	ldr	x0, [x19, #320]
  44043c:	add	x0, x0, #0x1
  440440:	str	x0, [x19, #320]
  440444:	b	4403c0 <ferror@plt+0x3daf0>
  440448:	strb	wzr, [x19, #255]
  44044c:	ldr	x3, [x19, #272]
  440450:	ldr	x2, [x19, #280]
  440454:	mov	x1, #0xff                  	// #255
  440458:	mov	x0, x19
  44045c:	blr	x3
  440460:	str	xzr, [x19, #256]
  440464:	ldr	x0, [x19, #320]
  440468:	add	x0, x0, #0x1
  44046c:	str	x0, [x19, #320]
  440470:	b	4403f4 <ferror@plt+0x3db24>
  440474:	stp	x29, x30, [sp, #-96]!
  440478:	mov	x29, sp
  44047c:	stp	x19, x20, [sp, #16]
  440480:	stp	x21, x22, [sp, #32]
  440484:	mov	x19, x0
  440488:	mov	w21, w1
  44048c:	ldr	x0, [x2, #8]
  440490:	ldr	x0, [x0, #8]
  440494:	ldr	x0, [x0]
  440498:	ldrb	w1, [x0]
  44049c:	cmp	w1, #0x66
  4404a0:	b.ne	44084c <ferror@plt+0x3df7c>  // b.any
  4404a4:	stp	x23, x24, [sp, #48]
  4404a8:	stp	x25, x26, [sp, #64]
  4404ac:	ldr	x1, [x2, #16]
  4404b0:	ldr	x24, [x1, #8]
  4404b4:	ldr	x25, [x1, #16]
  4404b8:	ldr	w1, [x25]
  4404bc:	mov	x26, #0x0                   	// #0
  4404c0:	cmp	w1, #0x3c
  4404c4:	b.eq	440550 <ferror@plt+0x3dc80>  // b.none
  4404c8:	ldr	w23, [x19, #316]
  4404cc:	mov	w1, #0xffffffff            	// #-1
  4404d0:	str	w1, [x19, #316]
  4404d4:	ldrb	w0, [x0, #1]
  4404d8:	cmp	w0, #0x6c
  4404dc:	b.eq	4405bc <ferror@plt+0x3dcec>  // b.none
  4404e0:	b.hi	44055c <ferror@plt+0x3dc8c>  // b.pmore
  4404e4:	cmp	w0, #0x4c
  4404e8:	b.eq	4404f4 <ferror@plt+0x3dc24>  // b.none
  4404ec:	cmp	w0, #0x52
  4404f0:	b.ne	440678 <ferror@plt+0x3dda8>  // b.any
  4404f4:	str	x27, [sp, #80]
  4404f8:	ldr	x0, [x19, #256]
  4404fc:	cmp	x0, #0xff
  440500:	b.eq	44074c <ferror@plt+0x3de7c>  // b.none
  440504:	ldr	x1, [x19, #256]
  440508:	add	x0, x1, #0x1
  44050c:	str	x0, [x19, #256]
  440510:	mov	w0, #0x28                  	// #40
  440514:	strb	w0, [x19, x1]
  440518:	strb	w0, [x19, #264]
  44051c:	mov	x2, x25
  440520:	mov	w1, w21
  440524:	mov	x0, x19
  440528:	bl	440378 <ferror@plt+0x3daa8>
  44052c:	mov	x2, x24
  440530:	mov	w1, w21
  440534:	mov	x0, x19
  440538:	bl	4402b0 <ferror@plt+0x3d9e0>
  44053c:	adrp	x20, 461000 <_obstack_memory_used@@Base+0x1a094>
  440540:	add	x20, x20, #0xfb8
  440544:	add	x25, x20, #0x3
  440548:	mov	x27, #0xff                  	// #255
  44054c:	b	440798 <ferror@plt+0x3dec8>
  440550:	ldr	x26, [x25, #16]
  440554:	ldr	x25, [x25, #8]
  440558:	b	4404c8 <ferror@plt+0x3dbf8>
  44055c:	cmp	w0, #0x72
  440560:	b.ne	440678 <ferror@plt+0x3dda8>  // b.any
  440564:	ldr	x0, [x19, #256]
  440568:	cmp	x0, #0xff
  44056c:	b.eq	4406c4 <ferror@plt+0x3ddf4>  // b.none
  440570:	ldr	x1, [x19, #256]
  440574:	add	x0, x1, #0x1
  440578:	str	x0, [x19, #256]
  44057c:	mov	w0, #0x28                  	// #40
  440580:	strb	w0, [x19, x1]
  440584:	strb	w0, [x19, #264]
  440588:	mov	x2, x25
  44058c:	mov	w1, w21
  440590:	mov	x0, x19
  440594:	bl	440378 <ferror@plt+0x3daa8>
  440598:	mov	x2, x24
  44059c:	mov	w1, w21
  4405a0:	mov	x0, x19
  4405a4:	bl	4402b0 <ferror@plt+0x3d9e0>
  4405a8:	adrp	x20, 465000 <_obstack_memory_used@@Base+0x1e094>
  4405ac:	add	x20, x20, #0xf28
  4405b0:	add	x22, x20, #0x4
  4405b4:	mov	x24, #0xff                  	// #255
  4405b8:	b	440710 <ferror@plt+0x3de40>
  4405bc:	str	x27, [sp, #80]
  4405c0:	adrp	x20, 465000 <_obstack_memory_used@@Base+0x1e094>
  4405c4:	add	x20, x20, #0xf20
  4405c8:	add	x26, x20, #0x4
  4405cc:	mov	x27, #0xff                  	// #255
  4405d0:	b	4405f4 <ferror@plt+0x3dd24>
  4405d4:	ldr	x0, [x19, #256]
  4405d8:	add	x1, x0, #0x1
  4405dc:	str	x1, [x19, #256]
  4405e0:	strb	w22, [x19, x0]
  4405e4:	strb	w22, [x19, #264]
  4405e8:	add	x20, x20, #0x1
  4405ec:	cmp	x20, x26
  4405f0:	b.eq	440630 <ferror@plt+0x3dd60>  // b.none
  4405f4:	ldrb	w22, [x20]
  4405f8:	ldr	x0, [x19, #256]
  4405fc:	cmp	x0, #0xff
  440600:	b.ne	4405d4 <ferror@plt+0x3dd04>  // b.any
  440604:	strb	wzr, [x19, #255]
  440608:	ldr	x3, [x19, #272]
  44060c:	ldr	x2, [x19, #280]
  440610:	mov	x1, x27
  440614:	mov	x0, x19
  440618:	blr	x3
  44061c:	str	xzr, [x19, #256]
  440620:	ldr	x0, [x19, #320]
  440624:	add	x0, x0, #0x1
  440628:	str	x0, [x19, #320]
  44062c:	b	4405d4 <ferror@plt+0x3dd04>
  440630:	mov	x2, x24
  440634:	mov	w1, w21
  440638:	mov	x0, x19
  44063c:	bl	4402b0 <ferror@plt+0x3d9e0>
  440640:	mov	x2, x25
  440644:	mov	w1, w21
  440648:	mov	x0, x19
  44064c:	bl	440378 <ferror@plt+0x3daa8>
  440650:	ldr	x0, [x19, #256]
  440654:	cmp	x0, #0xff
  440658:	b.eq	440698 <ferror@plt+0x3ddc8>  // b.none
  44065c:	ldr	x1, [x19, #256]
  440660:	add	x0, x1, #0x1
  440664:	str	x0, [x19, #256]
  440668:	mov	w0, #0x29                  	// #41
  44066c:	strb	w0, [x19, x1]
  440670:	strb	w0, [x19, #264]
  440674:	ldr	x27, [sp, #80]
  440678:	str	w23, [x19, #316]
  44067c:	mov	w0, #0x1                   	// #1
  440680:	ldp	x23, x24, [sp, #48]
  440684:	ldp	x25, x26, [sp, #64]
  440688:	ldp	x19, x20, [sp, #16]
  44068c:	ldp	x21, x22, [sp, #32]
  440690:	ldp	x29, x30, [sp], #96
  440694:	ret
  440698:	strb	wzr, [x19, #255]
  44069c:	ldr	x3, [x19, #272]
  4406a0:	ldr	x2, [x19, #280]
  4406a4:	mov	x1, #0xff                  	// #255
  4406a8:	mov	x0, x19
  4406ac:	blr	x3
  4406b0:	str	xzr, [x19, #256]
  4406b4:	ldr	x0, [x19, #320]
  4406b8:	add	x0, x0, #0x1
  4406bc:	str	x0, [x19, #320]
  4406c0:	b	44065c <ferror@plt+0x3dd8c>
  4406c4:	strb	wzr, [x19, #255]
  4406c8:	ldr	x3, [x19, #272]
  4406cc:	ldr	x2, [x19, #280]
  4406d0:	mov	x1, #0xff                  	// #255
  4406d4:	mov	x0, x19
  4406d8:	blr	x3
  4406dc:	str	xzr, [x19, #256]
  4406e0:	ldr	x0, [x19, #320]
  4406e4:	add	x0, x0, #0x1
  4406e8:	str	x0, [x19, #320]
  4406ec:	b	440570 <ferror@plt+0x3dca0>
  4406f0:	ldr	x0, [x19, #256]
  4406f4:	add	x1, x0, #0x1
  4406f8:	str	x1, [x19, #256]
  4406fc:	strb	w21, [x19, x0]
  440700:	strb	w21, [x19, #264]
  440704:	add	x20, x20, #0x1
  440708:	cmp	x20, x22
  44070c:	b.eq	440678 <ferror@plt+0x3dda8>  // b.none
  440710:	ldrb	w21, [x20]
  440714:	ldr	x0, [x19, #256]
  440718:	cmp	x0, #0xff
  44071c:	b.ne	4406f0 <ferror@plt+0x3de20>  // b.any
  440720:	strb	wzr, [x19, #255]
  440724:	ldr	x3, [x19, #272]
  440728:	ldr	x2, [x19, #280]
  44072c:	mov	x1, x24
  440730:	mov	x0, x19
  440734:	blr	x3
  440738:	str	xzr, [x19, #256]
  44073c:	ldr	x0, [x19, #320]
  440740:	add	x0, x0, #0x1
  440744:	str	x0, [x19, #320]
  440748:	b	4406f0 <ferror@plt+0x3de20>
  44074c:	strb	wzr, [x19, #255]
  440750:	ldr	x3, [x19, #272]
  440754:	ldr	x2, [x19, #280]
  440758:	mov	x1, #0xff                  	// #255
  44075c:	mov	x0, x19
  440760:	blr	x3
  440764:	str	xzr, [x19, #256]
  440768:	ldr	x0, [x19, #320]
  44076c:	add	x0, x0, #0x1
  440770:	str	x0, [x19, #320]
  440774:	b	440504 <ferror@plt+0x3dc34>
  440778:	ldr	x0, [x19, #256]
  44077c:	add	x1, x0, #0x1
  440780:	str	x1, [x19, #256]
  440784:	strb	w22, [x19, x0]
  440788:	strb	w22, [x19, #264]
  44078c:	add	x20, x20, #0x1
  440790:	cmp	x20, x25
  440794:	b.eq	4407d4 <ferror@plt+0x3df04>  // b.none
  440798:	ldrb	w22, [x20]
  44079c:	ldr	x0, [x19, #256]
  4407a0:	cmp	x0, #0xff
  4407a4:	b.ne	440778 <ferror@plt+0x3dea8>  // b.any
  4407a8:	strb	wzr, [x19, #255]
  4407ac:	ldr	x3, [x19, #272]
  4407b0:	ldr	x2, [x19, #280]
  4407b4:	mov	x1, x27
  4407b8:	mov	x0, x19
  4407bc:	blr	x3
  4407c0:	str	xzr, [x19, #256]
  4407c4:	ldr	x0, [x19, #320]
  4407c8:	add	x0, x0, #0x1
  4407cc:	str	x0, [x19, #320]
  4407d0:	b	440778 <ferror@plt+0x3dea8>
  4407d4:	mov	x2, x24
  4407d8:	mov	w1, w21
  4407dc:	mov	x0, x19
  4407e0:	bl	4402b0 <ferror@plt+0x3d9e0>
  4407e4:	mov	x2, x26
  4407e8:	mov	w1, w21
  4407ec:	mov	x0, x19
  4407f0:	bl	440378 <ferror@plt+0x3daa8>
  4407f4:	ldr	x0, [x19, #256]
  4407f8:	cmp	x0, #0xff
  4407fc:	b.eq	440820 <ferror@plt+0x3df50>  // b.none
  440800:	ldr	x1, [x19, #256]
  440804:	add	x0, x1, #0x1
  440808:	str	x0, [x19, #256]
  44080c:	mov	w0, #0x29                  	// #41
  440810:	strb	w0, [x19, x1]
  440814:	strb	w0, [x19, #264]
  440818:	ldr	x27, [sp, #80]
  44081c:	b	440678 <ferror@plt+0x3dda8>
  440820:	strb	wzr, [x19, #255]
  440824:	ldr	x3, [x19, #272]
  440828:	ldr	x2, [x19, #280]
  44082c:	mov	x1, #0xff                  	// #255
  440830:	mov	x0, x19
  440834:	blr	x3
  440838:	str	xzr, [x19, #256]
  44083c:	ldr	x0, [x19, #320]
  440840:	add	x0, x0, #0x1
  440844:	str	x0, [x19, #320]
  440848:	b	440800 <ferror@plt+0x3df30>
  44084c:	mov	w0, #0x0                   	// #0
  440850:	b	440688 <ferror@plt+0x3ddb8>
  440854:	cmp	x1, #0x0
  440858:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  44085c:	ccmp	x0, #0x0, #0x4, gt
  440860:	b.ne	44086c <ferror@plt+0x3df9c>  // b.any
  440864:	mov	w0, #0x0                   	// #0
  440868:	ret
  44086c:	str	wzr, [x0, #4]
  440870:	str	wzr, [x0]
  440874:	str	x1, [x0, #8]
  440878:	str	w2, [x0, #16]
  44087c:	mov	w0, #0x1                   	// #1
  440880:	b	440868 <ferror@plt+0x3df98>
  440884:	stp	x29, x30, [sp, #-48]!
  440888:	mov	x29, sp
  44088c:	stp	x19, x20, [sp, #16]
  440890:	str	x21, [sp, #32]
  440894:	mov	x20, x1
  440898:	mov	w21, w2
  44089c:	bl	43a1d8 <ferror@plt+0x37908>
  4408a0:	mov	x19, x0
  4408a4:	mov	w2, w21
  4408a8:	mov	x1, x20
  4408ac:	bl	440854 <ferror@plt+0x3df84>
  4408b0:	cmp	w0, #0x0
  4408b4:	csel	x0, x19, xzr, ne  // ne = any
  4408b8:	ldp	x19, x20, [sp, #16]
  4408bc:	ldr	x21, [sp, #32]
  4408c0:	ldp	x29, x30, [sp], #48
  4408c4:	ret
  4408c8:	stp	x29, x30, [sp, #-48]!
  4408cc:	mov	x29, sp
  4408d0:	stp	x19, x20, [sp, #16]
  4408d4:	mov	x19, x0
  4408d8:	bl	43a400 <ferror@plt+0x37b30>
  4408dc:	cmp	w0, #0x0
  4408e0:	b.le	4409c4 <ferror@plt+0x3e0f4>
  4408e4:	str	x21, [sp, #32]
  4408e8:	mov	w20, w0
  4408ec:	ldr	x21, [x19, #24]
  4408f0:	ldr	x0, [x19, #8]
  4408f4:	sub	x0, x0, x21
  4408f8:	cmp	x0, w20, sxtw
  4408fc:	b.lt	4409bc <ferror@plt+0x3e0ec>  // b.tstop
  440900:	add	x0, x21, w20, sxtw
  440904:	str	x0, [x19, #24]
  440908:	ldr	w1, [x19, #16]
  44090c:	tbz	w1, #2, 44091c <ferror@plt+0x3e04c>
  440910:	ldrb	w1, [x21, w20, sxtw]
  440914:	cmp	w1, #0x24
  440918:	b.eq	440988 <ferror@plt+0x3e0b8>  // b.none
  44091c:	cmp	w20, #0x9
  440920:	b.le	440964 <ferror@plt+0x3e094>
  440924:	mov	x2, #0x8                   	// #8
  440928:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  44092c:	add	x1, x1, #0xf30
  440930:	mov	x0, x21
  440934:	bl	4025e0 <memcmp@plt>
  440938:	cbnz	w0, 440964 <ferror@plt+0x3e094>
  44093c:	ldrb	w0, [x21, #8]
  440940:	cmp	w0, #0x2e
  440944:	mov	w1, #0x5f                  	// #95
  440948:	ccmp	w0, w1, #0x4, ne  // ne = any
  44094c:	mov	w1, #0x24                  	// #36
  440950:	ccmp	w0, w1, #0x4, ne  // ne = any
  440954:	b.ne	440964 <ferror@plt+0x3e094>  // b.any
  440958:	ldrb	w0, [x21, #9]
  44095c:	cmp	w0, #0x4e
  440960:	b.eq	440994 <ferror@plt+0x3e0c4>  // b.none
  440964:	mov	w2, w20
  440968:	mov	x1, x21
  44096c:	mov	x0, x19
  440970:	bl	440884 <ferror@plt+0x3dfb4>
  440974:	str	x0, [x19, #64]
  440978:	ldr	x21, [sp, #32]
  44097c:	ldp	x19, x20, [sp, #16]
  440980:	ldp	x29, x30, [sp], #48
  440984:	ret
  440988:	add	x0, x0, #0x1
  44098c:	str	x0, [x19, #24]
  440990:	b	44091c <ferror@plt+0x3e04c>
  440994:	ldr	w0, [x19, #72]
  440998:	add	w0, w0, #0x16
  44099c:	sub	w20, w0, w20
  4409a0:	str	w20, [x19, #72]
  4409a4:	mov	w2, #0x15                  	// #21
  4409a8:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  4409ac:	add	x1, x1, #0xf40
  4409b0:	mov	x0, x19
  4409b4:	bl	440884 <ferror@plt+0x3dfb4>
  4409b8:	b	440974 <ferror@plt+0x3e0a4>
  4409bc:	mov	x0, #0x0                   	// #0
  4409c0:	b	440974 <ferror@plt+0x3e0a4>
  4409c4:	mov	x0, #0x0                   	// #0
  4409c8:	b	44097c <ferror@plt+0x3e0ac>
  4409cc:	stp	x29, x30, [sp, #-48]!
  4409d0:	mov	x29, sp
  4409d4:	stp	x19, x20, [sp, #16]
  4409d8:	stp	x21, x22, [sp, #32]
  4409dc:	mov	x19, x0
  4409e0:	mov	x20, x1
  4409e4:	ldr	x22, [x0, #64]
  4409e8:	ldr	x2, [x0, #24]
  4409ec:	ldrb	w0, [x2]
  4409f0:	cmp	w0, #0x42
  4409f4:	b.ne	440a34 <ferror@plt+0x3e164>  // b.any
  4409f8:	mov	w21, #0x4c                  	// #76
  4409fc:	add	x2, x2, #0x1
  440a00:	str	x2, [x19, #24]
  440a04:	mov	x0, x19
  440a08:	bl	4408c8 <ferror@plt+0x3dff8>
  440a0c:	mov	x3, x0
  440a10:	mov	x2, x20
  440a14:	mov	w1, w21
  440a18:	mov	x0, x19
  440a1c:	bl	43a218 <ferror@plt+0x37948>
  440a20:	mov	x20, x0
  440a24:	ldr	x2, [x19, #24]
  440a28:	ldrb	w0, [x2]
  440a2c:	cmp	w0, #0x42
  440a30:	b.eq	4409fc <ferror@plt+0x3e12c>  // b.none
  440a34:	str	x22, [x19, #64]
  440a38:	mov	x0, x20
  440a3c:	ldp	x19, x20, [sp, #16]
  440a40:	ldp	x21, x22, [sp, #32]
  440a44:	ldp	x29, x30, [sp], #48
  440a48:	ret
  440a4c:	stp	x29, x30, [sp, #-64]!
  440a50:	mov	x29, sp
  440a54:	stp	x19, x20, [sp, #16]
  440a58:	mov	x19, x0
  440a5c:	ldr	x0, [x0, #24]
  440a60:	ldrb	w2, [x0]
  440a64:	mov	x20, #0x0                   	// #0
  440a68:	cmp	w2, #0x53
  440a6c:	b.ne	440ac4 <ferror@plt+0x3e1f4>  // b.any
  440a70:	add	x2, x0, #0x1
  440a74:	str	x2, [x19, #24]
  440a78:	ldrb	w2, [x0, #1]
  440a7c:	cbz	w2, 440b68 <ferror@plt+0x3e298>
  440a80:	add	x2, x0, #0x2
  440a84:	str	x2, [x19, #24]
  440a88:	ldrb	w2, [x0, #1]
  440a8c:	sub	w0, w2, #0x30
  440a90:	and	w0, w0, #0xff
  440a94:	cmp	w2, #0x5f
  440a98:	ccmp	w0, #0x9, #0x0, ne  // ne = any
  440a9c:	b.hi	440ad4 <ferror@plt+0x3e204>  // b.pmore
  440aa0:	mov	w1, #0x0                   	// #0
  440aa4:	cmp	w2, #0x5f
  440aa8:	b.ne	440b40 <ferror@plt+0x3e270>  // b.any
  440aac:	ldr	w0, [x19, #56]
  440ab0:	mov	x20, #0x0                   	// #0
  440ab4:	cmp	w0, w1
  440ab8:	b.ls	440ac4 <ferror@plt+0x3e1f4>  // b.plast
  440abc:	ldr	x0, [x19, #48]
  440ac0:	ldr	x20, [x0, w1, uxtw #3]
  440ac4:	mov	x0, x20
  440ac8:	ldp	x19, x20, [sp, #16]
  440acc:	ldp	x29, x30, [sp], #64
  440ad0:	ret
  440ad4:	sub	w3, w2, #0x41
  440ad8:	and	w3, w3, #0xff
  440adc:	mov	w0, #0x0                   	// #0
  440ae0:	cmp	w3, #0x19
  440ae4:	b.ls	440af4 <ferror@plt+0x3e224>  // b.plast
  440ae8:	stp	x21, x22, [sp, #32]
  440aec:	b	440b6c <ferror@plt+0x3e29c>
  440af0:	mov	w0, w1
  440af4:	sub	w1, w2, #0x30
  440af8:	and	w1, w1, #0xff
  440afc:	cmp	w1, #0x9
  440b00:	b.hi	440b48 <ferror@plt+0x3e278>  // b.pmore
  440b04:	add	w1, w0, w0, lsl #3
  440b08:	add	w1, w2, w1, lsl #2
  440b0c:	sub	w1, w1, #0x30
  440b10:	cmp	w0, w1
  440b14:	b.hi	440c98 <ferror@plt+0x3e3c8>  // b.pmore
  440b18:	ldr	x0, [x19, #24]
  440b1c:	ldrb	w2, [x0]
  440b20:	cbz	w2, 440af0 <ferror@plt+0x3e220>
  440b24:	add	x2, x0, #0x1
  440b28:	str	x2, [x19, #24]
  440b2c:	ldrb	w2, [x0]
  440b30:	cmp	w2, #0x5f
  440b34:	b.ne	440af0 <ferror@plt+0x3e220>  // b.any
  440b38:	add	w1, w1, #0x1
  440b3c:	b	440aac <ferror@plt+0x3e1dc>
  440b40:	mov	w0, #0x0                   	// #0
  440b44:	b	440af4 <ferror@plt+0x3e224>
  440b48:	sub	w1, w2, #0x41
  440b4c:	and	w1, w1, #0xff
  440b50:	cmp	w1, #0x19
  440b54:	b.hi	440c90 <ferror@plt+0x3e3c0>  // b.pmore
  440b58:	add	w1, w0, w0, lsl #3
  440b5c:	add	w1, w2, w1, lsl #2
  440b60:	sub	w1, w1, #0x37
  440b64:	b	440b10 <ferror@plt+0x3e240>
  440b68:	stp	x21, x22, [sp, #32]
  440b6c:	ldr	w21, [x19, #16]
  440b70:	ands	w0, w21, #0x8
  440b74:	ubfx	x21, x21, #3, #1
  440b78:	ccmp	w1, #0x0, #0x4, eq  // eq = none
  440b7c:	b.eq	440b98 <ferror@plt+0x3e2c8>  // b.none
  440b80:	ldr	x0, [x19, #24]
  440b84:	ldrb	w0, [x0]
  440b88:	sub	w0, w0, #0x43
  440b8c:	and	w0, w0, #0xff
  440b90:	cmp	w0, #0x1
  440b94:	csinc	w21, w21, wzr, hi  // hi = pmore
  440b98:	adrp	x20, 464000 <_obstack_memory_used@@Base+0x1d094>
  440b9c:	add	x20, x20, #0xf30
  440ba0:	add	x20, x20, #0x440
  440ba4:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d094>
  440ba8:	add	x1, x1, #0xf30
  440bac:	add	x1, x1, #0x5c8
  440bb0:	ldrb	w0, [x20]
  440bb4:	cmp	w0, w2
  440bb8:	b.eq	440bd4 <ferror@plt+0x3e304>  // b.none
  440bbc:	add	x20, x20, #0x38
  440bc0:	cmp	x20, x1
  440bc4:	b.ne	440bb0 <ferror@plt+0x3e2e0>  // b.any
  440bc8:	mov	x20, #0x0                   	// #0
  440bcc:	ldp	x21, x22, [sp, #32]
  440bd0:	b	440ac4 <ferror@plt+0x3e1f4>
  440bd4:	ldr	x22, [x20, #40]
  440bd8:	cbz	x22, 440c08 <ferror@plt+0x3e338>
  440bdc:	str	x23, [sp, #48]
  440be0:	ldr	w23, [x20, #48]
  440be4:	mov	x0, x19
  440be8:	bl	43a1d8 <ferror@plt+0x37908>
  440bec:	cbz	x0, 440c00 <ferror@plt+0x3e330>
  440bf0:	mov	w1, #0x18                  	// #24
  440bf4:	str	w1, [x0]
  440bf8:	str	x22, [x0, #8]
  440bfc:	str	w23, [x0, #16]
  440c00:	str	x0, [x19, #64]
  440c04:	ldr	x23, [sp, #48]
  440c08:	cbz	w21, 440c58 <ferror@plt+0x3e388>
  440c0c:	ldr	x22, [x20, #24]
  440c10:	ldr	w21, [x20, #32]
  440c14:	ldr	w0, [x19, #72]
  440c18:	add	w0, w0, w21
  440c1c:	str	w0, [x19, #72]
  440c20:	mov	x0, x19
  440c24:	bl	43a1d8 <ferror@plt+0x37908>
  440c28:	mov	x20, x0
  440c2c:	cbz	x0, 440c40 <ferror@plt+0x3e370>
  440c30:	mov	w0, #0x18                  	// #24
  440c34:	str	w0, [x20]
  440c38:	str	x22, [x20, #8]
  440c3c:	str	w21, [x20, #16]
  440c40:	ldr	x0, [x19, #24]
  440c44:	ldrb	w0, [x0]
  440c48:	cmp	w0, #0x42
  440c4c:	b.eq	440c64 <ferror@plt+0x3e394>  // b.none
  440c50:	ldp	x21, x22, [sp, #32]
  440c54:	b	440ac4 <ferror@plt+0x3e1f4>
  440c58:	ldr	x22, [x20, #8]
  440c5c:	ldr	w21, [x20, #16]
  440c60:	b	440c14 <ferror@plt+0x3e344>
  440c64:	mov	x1, x20
  440c68:	mov	x0, x19
  440c6c:	bl	4409cc <ferror@plt+0x3e0fc>
  440c70:	mov	x20, x0
  440c74:	mov	x1, x0
  440c78:	mov	x0, x19
  440c7c:	bl	43a84c <ferror@plt+0x37f7c>
  440c80:	cmp	w0, #0x0
  440c84:	csel	x20, x20, xzr, ne  // ne = any
  440c88:	ldp	x21, x22, [sp, #32]
  440c8c:	b	440ac4 <ferror@plt+0x3e1f4>
  440c90:	mov	x20, #0x0                   	// #0
  440c94:	b	440ac4 <ferror@plt+0x3e1f4>
  440c98:	mov	x20, #0x0                   	// #0
  440c9c:	b	440ac4 <ferror@plt+0x3e1f4>
  440ca0:	cmp	w1, #0x0
  440ca4:	ccmp	x2, #0x0, #0x4, ge  // ge = tcont
  440ca8:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  440cac:	b.eq	440ccc <ferror@plt+0x3e3fc>  // b.none
  440cb0:	str	wzr, [x0, #4]
  440cb4:	mov	w3, #0x33                  	// #51
  440cb8:	str	w3, [x0]
  440cbc:	str	w1, [x0, #8]
  440cc0:	str	x2, [x0, #16]
  440cc4:	mov	w0, #0x1                   	// #1
  440cc8:	ret
  440ccc:	mov	w0, #0x0                   	// #0
  440cd0:	b	440cc8 <ferror@plt+0x3e3f8>
  440cd4:	mov	x3, x0
  440cd8:	cmp	x0, #0x0
  440cdc:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  440ce0:	mov	w0, #0x0                   	// #0
  440ce4:	b.eq	440d10 <ferror@plt+0x3e440>  // b.none
  440ce8:	sub	w4, w1, #0x1
  440cec:	mov	w0, #0x0                   	// #0
  440cf0:	cmp	w4, #0x4
  440cf4:	b.hi	440d10 <ferror@plt+0x3e440>  // b.pmore
  440cf8:	str	wzr, [x3, #4]
  440cfc:	mov	w0, #0x7                   	// #7
  440d00:	str	w0, [x3]
  440d04:	str	w1, [x3, #8]
  440d08:	str	x2, [x3, #16]
  440d0c:	mov	w0, #0x1                   	// #1
  440d10:	ret
  440d14:	mov	x3, x0
  440d18:	cmp	x0, #0x0
  440d1c:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  440d20:	mov	w0, #0x0                   	// #0
  440d24:	b.eq	440d50 <ferror@plt+0x3e480>  // b.none
  440d28:	sub	w4, w1, #0x1
  440d2c:	mov	w0, #0x0                   	// #0
  440d30:	cmp	w4, #0x4
  440d34:	b.hi	440d50 <ferror@plt+0x3e480>  // b.pmore
  440d38:	str	wzr, [x3, #4]
  440d3c:	mov	w0, #0x8                   	// #8
  440d40:	str	w0, [x3]
  440d44:	str	w1, [x3, #8]
  440d48:	str	x2, [x3, #16]
  440d4c:	mov	w0, #0x1                   	// #1
  440d50:	ret
  440d54:	stp	x29, x30, [sp, #-80]!
  440d58:	mov	x29, sp
  440d5c:	stp	x19, x20, [sp, #16]
  440d60:	mov	x19, x0
  440d64:	bl	43a5c0 <ferror@plt+0x37cf0>
  440d68:	cbnz	w0, 440d98 <ferror@plt+0x3e4c8>
  440d6c:	ldr	x0, [x19, #24]
  440d70:	ldrb	w2, [x0]
  440d74:	sub	w1, w2, #0x30
  440d78:	cmp	w1, #0x4a
  440d7c:	b.hi	44169c <ferror@plt+0x3edcc>  // b.pmore
  440d80:	adrp	x3, 464000 <_obstack_memory_used@@Base+0x1d094>
  440d84:	add	x3, x3, #0xe98
  440d88:	ldrh	w1, [x3, w1, uxtw #1]
  440d8c:	adr	x3, 440d98 <ferror@plt+0x3e4c8>
  440d90:	add	x1, x3, w1, sxth #2
  440d94:	br	x1
  440d98:	mov	w2, #0x0                   	// #0
  440d9c:	add	x1, sp, #0x48
  440da0:	mov	x0, x19
  440da4:	bl	44284c <ferror@plt+0x3ff7c>
  440da8:	mov	x20, x0
  440dac:	cbz	x0, 440eac <ferror@plt+0x3e5dc>
  440db0:	ldr	x0, [x19, #24]
  440db4:	ldrb	w0, [x0]
  440db8:	cmp	w0, #0x46
  440dbc:	b.eq	440e00 <ferror@plt+0x3e530>  // b.none
  440dc0:	mov	x0, x19
  440dc4:	bl	440d54 <ferror@plt+0x3e484>
  440dc8:	str	x0, [x20]
  440dcc:	ldr	x0, [x20]
  440dd0:	cbz	x0, 441694 <ferror@plt+0x3edc4>
  440dd4:	ldr	w1, [x0]
  440dd8:	sub	w1, w1, #0x1f
  440ddc:	cmp	w1, #0x1
  440de0:	b.ls	440e10 <ferror@plt+0x3e540>  // b.plast
  440de4:	ldr	x1, [sp, #72]
  440de8:	mov	x0, x19
  440dec:	bl	43a84c <ferror@plt+0x37f7c>
  440df0:	cmp	w0, #0x0
  440df4:	ldr	x20, [sp, #72]
  440df8:	csel	x20, x20, xzr, ne  // ne = any
  440dfc:	b	440eac <ferror@plt+0x3e5dc>
  440e00:	mov	x0, x19
  440e04:	bl	441efc <ferror@plt+0x3f62c>
  440e08:	str	x0, [x20]
  440e0c:	b	440dcc <ferror@plt+0x3e4fc>
  440e10:	ldr	x1, [x0, #8]
  440e14:	ldr	x2, [sp, #72]
  440e18:	str	x2, [x0, #8]
  440e1c:	ldr	x0, [x20]
  440e20:	str	x0, [sp, #72]
  440e24:	str	x1, [x20]
  440e28:	b	440de4 <ferror@plt+0x3e514>
  440e2c:	sub	w2, w2, #0x61
  440e30:	sbfiz	x2, x2, #5, #32
  440e34:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d094>
  440e38:	add	x1, x1, #0xf30
  440e3c:	add	x1, x1, x2
  440e40:	mov	x0, x19
  440e44:	bl	43a2c8 <ferror@plt+0x379f8>
  440e48:	str	x0, [sp, #72]
  440e4c:	ldr	x1, [x0, #8]
  440e50:	ldr	w0, [x19, #72]
  440e54:	ldr	w1, [x1, #8]
  440e58:	add	w0, w0, w1
  440e5c:	str	w0, [x19, #72]
  440e60:	ldr	x0, [x19, #24]
  440e64:	add	x0, x0, #0x1
  440e68:	str	x0, [x19, #24]
  440e6c:	b	440ea8 <ferror@plt+0x3e5d8>
  440e70:	add	x0, x0, #0x1
  440e74:	str	x0, [x19, #24]
  440e78:	mov	x0, x19
  440e7c:	bl	4408c8 <ferror@plt+0x3dff8>
  440e80:	mov	x3, #0x0                   	// #0
  440e84:	mov	x2, x0
  440e88:	mov	w1, #0x28                  	// #40
  440e8c:	mov	x0, x19
  440e90:	bl	43a218 <ferror@plt+0x37948>
  440e94:	str	x0, [sp, #72]
  440e98:	ldr	x1, [sp, #72]
  440e9c:	mov	x0, x19
  440ea0:	bl	43a84c <ferror@plt+0x37f7c>
  440ea4:	cbz	w0, 4416ac <ferror@plt+0x3eddc>
  440ea8:	ldr	x20, [sp, #72]
  440eac:	mov	x0, x20
  440eb0:	ldp	x19, x20, [sp, #16]
  440eb4:	ldp	x29, x30, [sp], #80
  440eb8:	ret
  440ebc:	mov	x0, x19
  440ec0:	bl	441efc <ferror@plt+0x3f62c>
  440ec4:	str	x0, [sp, #72]
  440ec8:	b	440e98 <ferror@plt+0x3e5c8>
  440ecc:	mov	x0, x19
  440ed0:	bl	442ae0 <ferror@plt+0x40210>
  440ed4:	str	x0, [sp, #72]
  440ed8:	b	440e98 <ferror@plt+0x3e5c8>
  440edc:	add	x1, x0, #0x1
  440ee0:	str	x1, [x19, #24]
  440ee4:	ldrb	w0, [x0, #1]
  440ee8:	cmp	w0, #0x5f
  440eec:	b.eq	440f88 <ferror@plt+0x3e6b8>  // b.none
  440ef0:	sub	w0, w0, #0x30
  440ef4:	and	w0, w0, #0xff
  440ef8:	cmp	w0, #0x9
  440efc:	b.hi	440f74 <ferror@plt+0x3e6a4>  // b.pmore
  440f00:	ldr	x0, [x19, #24]
  440f04:	add	x2, x0, #0x1
  440f08:	str	x2, [x19, #24]
  440f0c:	ldrb	w0, [x0, #1]
  440f10:	sub	w0, w0, #0x30
  440f14:	and	w0, w0, #0xff
  440f18:	cmp	w0, #0x9
  440f1c:	b.ls	440f00 <ferror@plt+0x3e630>  // b.plast
  440f20:	sub	w2, w2, w1
  440f24:	mov	x0, x19
  440f28:	bl	440884 <ferror@plt+0x3dfb4>
  440f2c:	mov	x20, x0
  440f30:	cbz	x0, 440f6c <ferror@plt+0x3e69c>
  440f34:	ldr	x0, [x19, #24]
  440f38:	ldrb	w1, [x0]
  440f3c:	cmp	w1, #0x5f
  440f40:	b.ne	440f90 <ferror@plt+0x3e6c0>  // b.any
  440f44:	add	x0, x0, #0x1
  440f48:	str	x0, [x19, #24]
  440f4c:	mov	x0, x19
  440f50:	bl	440d54 <ferror@plt+0x3e484>
  440f54:	mov	x3, x0
  440f58:	mov	x2, x20
  440f5c:	mov	w1, #0x2a                  	// #42
  440f60:	mov	x0, x19
  440f64:	bl	43a218 <ferror@plt+0x37948>
  440f68:	mov	x20, x0
  440f6c:	str	x20, [sp, #72]
  440f70:	b	440e98 <ferror@plt+0x3e5c8>
  440f74:	mov	x0, x19
  440f78:	bl	441fd4 <ferror@plt+0x3f704>
  440f7c:	mov	x20, x0
  440f80:	cbnz	x0, 440f34 <ferror@plt+0x3e664>
  440f84:	b	440f6c <ferror@plt+0x3e69c>
  440f88:	mov	x20, #0x0                   	// #0
  440f8c:	b	440f34 <ferror@plt+0x3e664>
  440f90:	mov	x20, #0x0                   	// #0
  440f94:	b	440f6c <ferror@plt+0x3e69c>
  440f98:	add	x0, x0, #0x1
  440f9c:	str	x0, [x19, #24]
  440fa0:	mov	x0, x19
  440fa4:	bl	440d54 <ferror@plt+0x3e484>
  440fa8:	mov	x20, x0
  440fac:	cbz	x0, 440fd4 <ferror@plt+0x3e704>
  440fb0:	mov	x0, x19
  440fb4:	bl	440d54 <ferror@plt+0x3e484>
  440fb8:	mov	x3, x0
  440fbc:	cbz	x0, 440fdc <ferror@plt+0x3e70c>
  440fc0:	mov	x2, x20
  440fc4:	mov	w1, #0x2b                  	// #43
  440fc8:	mov	x0, x19
  440fcc:	bl	43a218 <ferror@plt+0x37948>
  440fd0:	mov	x20, x0
  440fd4:	str	x20, [sp, #72]
  440fd8:	b	440e98 <ferror@plt+0x3e5c8>
  440fdc:	mov	x20, x0
  440fe0:	b	440fd4 <ferror@plt+0x3e704>
  440fe4:	mov	x0, x19
  440fe8:	bl	43a700 <ferror@plt+0x37e30>
  440fec:	str	x0, [sp, #72]
  440ff0:	ldr	x20, [x19, #24]
  440ff4:	ldrb	w1, [x20]
  440ff8:	cmp	w1, #0x49
  440ffc:	b.ne	440e98 <ferror@plt+0x3e5c8>  // b.any
  441000:	ldr	w1, [x19, #80]
  441004:	cbnz	w1, 441044 <ferror@plt+0x3e774>
  441008:	mov	x1, x0
  44100c:	mov	x0, x19
  441010:	bl	43a84c <ferror@plt+0x37f7c>
  441014:	mov	x20, #0x0                   	// #0
  441018:	cbz	w0, 440eac <ferror@plt+0x3e5dc>
  44101c:	ldr	x20, [sp, #72]
  441020:	mov	x0, x19
  441024:	bl	443c4c <ferror@plt+0x4137c>
  441028:	mov	x3, x0
  44102c:	mov	x2, x20
  441030:	mov	w1, #0x4                   	// #4
  441034:	mov	x0, x19
  441038:	bl	43a218 <ferror@plt+0x37948>
  44103c:	str	x0, [sp, #72]
  441040:	b	440e98 <ferror@plt+0x3e5c8>
  441044:	stp	x21, x22, [sp, #32]
  441048:	stp	x23, x24, [sp, #48]
  44104c:	ldr	w24, [x19, #40]
  441050:	ldr	w23, [x19, #56]
  441054:	ldr	w22, [x19, #72]
  441058:	mov	x0, x19
  44105c:	bl	443c4c <ferror@plt+0x4137c>
  441060:	mov	x21, x0
  441064:	ldr	x0, [x19, #24]
  441068:	ldrb	w0, [x0]
  44106c:	cmp	w0, #0x49
  441070:	b.eq	441090 <ferror@plt+0x3e7c0>  // b.none
  441074:	str	x20, [x19, #24]
  441078:	str	w24, [x19, #40]
  44107c:	str	w23, [x19, #56]
  441080:	str	w22, [x19, #72]
  441084:	ldp	x21, x22, [sp, #32]
  441088:	ldp	x23, x24, [sp, #48]
  44108c:	b	440e98 <ferror@plt+0x3e5c8>
  441090:	ldr	x1, [sp, #72]
  441094:	mov	x0, x19
  441098:	bl	43a84c <ferror@plt+0x37f7c>
  44109c:	cbz	w0, 4410c4 <ferror@plt+0x3e7f4>
  4410a0:	mov	x3, x21
  4410a4:	ldr	x2, [sp, #72]
  4410a8:	mov	w1, #0x4                   	// #4
  4410ac:	mov	x0, x19
  4410b0:	bl	43a218 <ferror@plt+0x37948>
  4410b4:	str	x0, [sp, #72]
  4410b8:	ldp	x21, x22, [sp, #32]
  4410bc:	ldp	x23, x24, [sp, #48]
  4410c0:	b	440e98 <ferror@plt+0x3e5c8>
  4410c4:	mov	x20, #0x0                   	// #0
  4410c8:	ldp	x21, x22, [sp, #32]
  4410cc:	ldp	x23, x24, [sp, #48]
  4410d0:	b	440eac <ferror@plt+0x3e5dc>
  4410d4:	ldrb	w0, [x0, #1]
  4410d8:	sub	w1, w0, #0x30
  4410dc:	and	w1, w1, #0xff
  4410e0:	cmp	w0, #0x5f
  4410e4:	ccmp	w1, #0x9, #0x0, ne  // ne = any
  4410e8:	b.ls	4410fc <ferror@plt+0x3e82c>  // b.plast
  4410ec:	sub	w0, w0, #0x41
  4410f0:	and	w0, w0, #0xff
  4410f4:	cmp	w0, #0x19
  4410f8:	b.hi	441144 <ferror@plt+0x3e874>  // b.pmore
  4410fc:	mov	w1, #0x0                   	// #0
  441100:	mov	x0, x19
  441104:	bl	440a4c <ferror@plt+0x3e17c>
  441108:	mov	x20, x0
  44110c:	str	x0, [sp, #72]
  441110:	ldr	x0, [x19, #24]
  441114:	ldrb	w0, [x0]
  441118:	cmp	w0, #0x49
  44111c:	b.ne	440ea8 <ferror@plt+0x3e5d8>  // b.any
  441120:	mov	x0, x19
  441124:	bl	443c4c <ferror@plt+0x4137c>
  441128:	mov	x3, x0
  44112c:	mov	x2, x20
  441130:	mov	w1, #0x4                   	// #4
  441134:	mov	x0, x19
  441138:	bl	43a218 <ferror@plt+0x37948>
  44113c:	str	x0, [sp, #72]
  441140:	b	440e98 <ferror@plt+0x3e5c8>
  441144:	mov	x0, x19
  441148:	bl	442ae0 <ferror@plt+0x40210>
  44114c:	str	x0, [sp, #72]
  441150:	cbz	x0, 440e98 <ferror@plt+0x3e5c8>
  441154:	ldr	w0, [x0]
  441158:	cmp	w0, #0x18
  44115c:	b.ne	440e98 <ferror@plt+0x3e5c8>  // b.any
  441160:	b	440ea8 <ferror@plt+0x3e5d8>
  441164:	add	x0, x0, #0x1
  441168:	str	x0, [x19, #24]
  44116c:	mov	x0, x19
  441170:	bl	440d54 <ferror@plt+0x3e484>
  441174:	mov	x3, #0x0                   	// #0
  441178:	mov	x2, x0
  44117c:	mov	w1, #0x24                  	// #36
  441180:	mov	x0, x19
  441184:	bl	43a218 <ferror@plt+0x37948>
  441188:	str	x0, [sp, #72]
  44118c:	b	440e98 <ferror@plt+0x3e5c8>
  441190:	add	x0, x0, #0x1
  441194:	str	x0, [x19, #24]
  441198:	mov	x0, x19
  44119c:	bl	440d54 <ferror@plt+0x3e484>
  4411a0:	mov	x3, #0x0                   	// #0
  4411a4:	mov	x2, x0
  4411a8:	mov	w1, #0x22                  	// #34
  4411ac:	mov	x0, x19
  4411b0:	bl	43a218 <ferror@plt+0x37948>
  4411b4:	str	x0, [sp, #72]
  4411b8:	b	440e98 <ferror@plt+0x3e5c8>
  4411bc:	add	x0, x0, #0x1
  4411c0:	str	x0, [x19, #24]
  4411c4:	mov	x0, x19
  4411c8:	bl	440d54 <ferror@plt+0x3e484>
  4411cc:	mov	x3, #0x0                   	// #0
  4411d0:	mov	x2, x0
  4411d4:	mov	w1, #0x23                  	// #35
  4411d8:	mov	x0, x19
  4411dc:	bl	43a218 <ferror@plt+0x37948>
  4411e0:	str	x0, [sp, #72]
  4411e4:	b	440e98 <ferror@plt+0x3e5c8>
  4411e8:	add	x0, x0, #0x1
  4411ec:	str	x0, [x19, #24]
  4411f0:	mov	x0, x19
  4411f4:	bl	440d54 <ferror@plt+0x3e484>
  4411f8:	mov	x3, #0x0                   	// #0
  4411fc:	mov	x2, x0
  441200:	mov	w1, #0x25                  	// #37
  441204:	mov	x0, x19
  441208:	bl	43a218 <ferror@plt+0x37948>
  44120c:	str	x0, [sp, #72]
  441210:	b	440e98 <ferror@plt+0x3e5c8>
  441214:	add	x0, x0, #0x1
  441218:	str	x0, [x19, #24]
  44121c:	mov	x0, x19
  441220:	bl	440d54 <ferror@plt+0x3e484>
  441224:	mov	x3, #0x0                   	// #0
  441228:	mov	x2, x0
  44122c:	mov	w1, #0x26                  	// #38
  441230:	mov	x0, x19
  441234:	bl	43a218 <ferror@plt+0x37948>
  441238:	str	x0, [sp, #72]
  44123c:	b	440e98 <ferror@plt+0x3e5c8>
  441240:	add	x0, x0, #0x1
  441244:	str	x0, [x19, #24]
  441248:	mov	x0, x19
  44124c:	bl	4408c8 <ferror@plt+0x3dff8>
  441250:	mov	x20, x0
  441254:	str	x0, [sp, #72]
  441258:	ldr	x0, [x19, #24]
  44125c:	ldrb	w0, [x0]
  441260:	cmp	w0, #0x49
  441264:	b.eq	44128c <ferror@plt+0x3e9bc>  // b.none
  441268:	mov	x0, x19
  44126c:	bl	440d54 <ferror@plt+0x3e484>
  441270:	ldr	x3, [sp, #72]
  441274:	mov	x2, x0
  441278:	mov	w1, #0x21                  	// #33
  44127c:	mov	x0, x19
  441280:	bl	43a218 <ferror@plt+0x37948>
  441284:	str	x0, [sp, #72]
  441288:	b	440e98 <ferror@plt+0x3e5c8>
  44128c:	mov	x0, x19
  441290:	bl	443c4c <ferror@plt+0x4137c>
  441294:	mov	x3, x0
  441298:	mov	x2, x20
  44129c:	mov	w1, #0x4                   	// #4
  4412a0:	mov	x0, x19
  4412a4:	bl	43a218 <ferror@plt+0x37948>
  4412a8:	str	x0, [sp, #72]
  4412ac:	b	441268 <ferror@plt+0x3e998>
  4412b0:	add	x1, x0, #0x1
  4412b4:	str	x1, [x19, #24]
  4412b8:	ldrb	w1, [x0, #1]
  4412bc:	mov	x20, #0x0                   	// #0
  4412c0:	cbz	w1, 440eac <ferror@plt+0x3e5dc>
  4412c4:	add	x1, x0, #0x2
  4412c8:	str	x1, [x19, #24]
  4412cc:	ldrb	w1, [x0, #1]
  4412d0:	cmp	w1, #0x68
  4412d4:	b.eq	4415a8 <ferror@plt+0x3ecd8>  // b.none
  4412d8:	b.hi	441420 <ferror@plt+0x3eb50>  // b.pmore
  4412dc:	cmp	w1, #0x63
  4412e0:	b.eq	44155c <ferror@plt+0x3ec8c>  // b.none
  4412e4:	b.ls	441328 <ferror@plt+0x3ea58>  // b.plast
  4412e8:	cmp	w1, #0x65
  4412ec:	b.eq	441578 <ferror@plt+0x3eca8>  // b.none
  4412f0:	cmp	w1, #0x66
  4412f4:	b.ne	4413e4 <ferror@plt+0x3eb14>  // b.any
  4412f8:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d094>
  4412fc:	add	x1, x1, #0xf30
  441300:	add	x1, x1, #0x340
  441304:	mov	x0, x19
  441308:	bl	43a2c8 <ferror@plt+0x379f8>
  44130c:	str	x0, [sp, #72]
  441310:	ldr	x1, [x0, #8]
  441314:	ldr	w0, [x19, #72]
  441318:	ldr	w1, [x1, #8]
  44131c:	add	w0, w0, w1
  441320:	str	w0, [x19, #72]
  441324:	b	440ea8 <ferror@plt+0x3e5d8>
  441328:	cmp	w1, #0x54
  44132c:	b.eq	441510 <ferror@plt+0x3ec40>  // b.none
  441330:	cmp	w1, #0x61
  441334:	b.ne	441354 <ferror@plt+0x3ea84>  // b.any
  441338:	mov	w2, #0x4                   	// #4
  44133c:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  441340:	add	x1, x1, #0xf58
  441344:	mov	x0, x19
  441348:	bl	440884 <ferror@plt+0x3dfb4>
  44134c:	str	x0, [sp, #72]
  441350:	b	440ea8 <ferror@plt+0x3e5d8>
  441354:	cmp	w1, #0x46
  441358:	b.ne	440eac <ferror@plt+0x3e5dc>  // b.any
  44135c:	mov	x0, x19
  441360:	bl	43a1d8 <ferror@plt+0x37908>
  441364:	str	x0, [sp, #72]
  441368:	mov	w1, #0x2c                  	// #44
  44136c:	str	w1, [x0]
  441370:	ldr	x0, [x19, #24]
  441374:	ldrb	w0, [x0]
  441378:	sub	w0, w0, #0x30
  44137c:	and	w0, w0, #0xff
  441380:	cmp	w0, #0x9
  441384:	cset	w2, ls  // ls = plast
  441388:	ldr	x1, [sp, #72]
  44138c:	strh	w2, [x1, #16]
  441390:	b.ls	441638 <ferror@plt+0x3ed68>  // b.plast
  441394:	ldr	x20, [sp, #72]
  441398:	mov	x0, x19
  44139c:	bl	440d54 <ferror@plt+0x3e484>
  4413a0:	str	x0, [x20, #8]
  4413a4:	ldr	x0, [sp, #72]
  4413a8:	ldr	x20, [x0, #8]
  4413ac:	cbz	x20, 440eac <ferror@plt+0x3e5dc>
  4413b0:	mov	x0, x19
  4413b4:	bl	43a400 <ferror@plt+0x37b30>
  4413b8:	ldr	x1, [x19, #24]
  4413bc:	ldrb	w0, [x1]
  4413c0:	cbz	w0, 4413d0 <ferror@plt+0x3eb00>
  4413c4:	add	x0, x1, #0x1
  4413c8:	str	x0, [x19, #24]
  4413cc:	ldrb	w0, [x1]
  4413d0:	cmp	w0, #0x73
  4413d4:	cset	w1, eq  // eq = none
  4413d8:	ldr	x0, [sp, #72]
  4413dc:	strh	w1, [x0, #18]
  4413e0:	b	440ea8 <ferror@plt+0x3e5d8>
  4413e4:	mov	x20, #0x0                   	// #0
  4413e8:	cmp	w1, #0x64
  4413ec:	b.ne	440eac <ferror@plt+0x3e5dc>  // b.any
  4413f0:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d094>
  4413f4:	add	x1, x1, #0xf30
  4413f8:	add	x1, x1, #0x360
  4413fc:	mov	x0, x19
  441400:	bl	43a2c8 <ferror@plt+0x379f8>
  441404:	str	x0, [sp, #72]
  441408:	ldr	x1, [x0, #8]
  44140c:	ldr	w0, [x19, #72]
  441410:	ldr	w1, [x1, #8]
  441414:	add	w0, w0, w1
  441418:	str	w0, [x19, #72]
  44141c:	b	440ea8 <ferror@plt+0x3e5d8>
  441420:	cmp	w1, #0x73
  441424:	b.eq	441608 <ferror@plt+0x3ed38>  // b.none
  441428:	b.ls	441498 <ferror@plt+0x3ebc8>  // b.plast
  44142c:	cmp	w1, #0x75
  441430:	b.eq	4415d8 <ferror@plt+0x3ed08>  // b.none
  441434:	cmp	w1, #0x76
  441438:	b.ne	441508 <ferror@plt+0x3ec38>  // b.any
  44143c:	ldrb	w1, [x0, #2]
  441440:	cmp	w1, #0x5f
  441444:	b.eq	441644 <ferror@plt+0x3ed74>  // b.none
  441448:	mov	x0, x19
  44144c:	bl	43a4d0 <ferror@plt+0x37c00>
  441450:	mov	x20, x0
  441454:	cbz	x20, 441490 <ferror@plt+0x3ebc0>
  441458:	ldr	x0, [x19, #24]
  44145c:	ldrb	w1, [x0]
  441460:	cmp	w1, #0x5f
  441464:	b.ne	44165c <ferror@plt+0x3ed8c>  // b.any
  441468:	add	x0, x0, #0x1
  44146c:	str	x0, [x19, #24]
  441470:	mov	x0, x19
  441474:	bl	440d54 <ferror@plt+0x3e484>
  441478:	mov	x3, x0
  44147c:	mov	x2, x20
  441480:	mov	w1, #0x2d                  	// #45
  441484:	mov	x0, x19
  441488:	bl	43a218 <ferror@plt+0x37948>
  44148c:	mov	x20, x0
  441490:	str	x20, [sp, #72]
  441494:	b	440e98 <ferror@plt+0x3e5c8>
  441498:	cmp	w1, #0x6e
  44149c:	b.eq	441664 <ferror@plt+0x3ed94>  // b.none
  4414a0:	cmp	w1, #0x70
  4414a4:	b.ne	4414cc <ferror@plt+0x3ebfc>  // b.any
  4414a8:	mov	x0, x19
  4414ac:	bl	440d54 <ferror@plt+0x3e484>
  4414b0:	mov	x3, #0x0                   	// #0
  4414b4:	mov	x2, x0
  4414b8:	mov	w1, #0x4b                  	// #75
  4414bc:	mov	x0, x19
  4414c0:	bl	43a218 <ferror@plt+0x37948>
  4414c4:	str	x0, [sp, #72]
  4414c8:	b	440e98 <ferror@plt+0x3e5c8>
  4414cc:	mov	x20, #0x0                   	// #0
  4414d0:	cmp	w1, #0x69
  4414d4:	b.ne	440eac <ferror@plt+0x3e5dc>  // b.any
  4414d8:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d094>
  4414dc:	add	x1, x1, #0xf30
  4414e0:	add	x1, x1, #0x400
  4414e4:	mov	x0, x19
  4414e8:	bl	43a2c8 <ferror@plt+0x379f8>
  4414ec:	str	x0, [sp, #72]
  4414f0:	ldr	x1, [x0, #8]
  4414f4:	ldr	w0, [x19, #72]
  4414f8:	ldr	w1, [x1, #8]
  4414fc:	add	w0, w0, w1
  441500:	str	w0, [x19, #72]
  441504:	b	440ea8 <ferror@plt+0x3e5d8>
  441508:	cmp	w1, #0x74
  44150c:	b.ne	4416a4 <ferror@plt+0x3edd4>  // b.any
  441510:	mov	x0, x19
  441514:	bl	441fd4 <ferror@plt+0x3f704>
  441518:	mov	x3, #0x0                   	// #0
  44151c:	mov	x2, x0
  441520:	mov	w1, #0x43                  	// #67
  441524:	mov	x0, x19
  441528:	bl	43a218 <ferror@plt+0x37948>
  44152c:	str	x0, [sp, #72]
  441530:	cbz	x0, 440e98 <ferror@plt+0x3e5c8>
  441534:	ldr	x0, [x19, #24]
  441538:	ldrb	w1, [x0]
  44153c:	cbz	w1, 441554 <ferror@plt+0x3ec84>
  441540:	add	x1, x0, #0x1
  441544:	str	x1, [x19, #24]
  441548:	ldrb	w0, [x0]
  44154c:	cmp	w0, #0x45
  441550:	b.eq	440e98 <ferror@plt+0x3e5c8>  // b.none
  441554:	str	xzr, [sp, #72]
  441558:	b	440e98 <ferror@plt+0x3e5c8>
  44155c:	mov	w2, #0xe                   	// #14
  441560:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  441564:	add	x1, x1, #0xf60
  441568:	mov	x0, x19
  44156c:	bl	440884 <ferror@plt+0x3dfb4>
  441570:	str	x0, [sp, #72]
  441574:	b	440ea8 <ferror@plt+0x3e5d8>
  441578:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d094>
  44157c:	add	x1, x1, #0xf30
  441580:	add	x1, x1, #0x380
  441584:	mov	x0, x19
  441588:	bl	43a2c8 <ferror@plt+0x379f8>
  44158c:	str	x0, [sp, #72]
  441590:	ldr	x1, [x0, #8]
  441594:	ldr	w0, [x19, #72]
  441598:	ldr	w1, [x1, #8]
  44159c:	add	w0, w0, w1
  4415a0:	str	w0, [x19, #72]
  4415a4:	b	440ea8 <ferror@plt+0x3e5d8>
  4415a8:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d094>
  4415ac:	add	x1, x1, #0xf30
  4415b0:	add	x1, x1, #0x3a0
  4415b4:	mov	x0, x19
  4415b8:	bl	43a2c8 <ferror@plt+0x379f8>
  4415bc:	str	x0, [sp, #72]
  4415c0:	ldr	x1, [x0, #8]
  4415c4:	ldr	w0, [x19, #72]
  4415c8:	ldr	w1, [x1, #8]
  4415cc:	add	w0, w0, w1
  4415d0:	str	w0, [x19, #72]
  4415d4:	b	440ea8 <ferror@plt+0x3e5d8>
  4415d8:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d094>
  4415dc:	add	x1, x1, #0xf30
  4415e0:	add	x1, x1, #0x3c0
  4415e4:	mov	x0, x19
  4415e8:	bl	43a2c8 <ferror@plt+0x379f8>
  4415ec:	str	x0, [sp, #72]
  4415f0:	ldr	x1, [x0, #8]
  4415f4:	ldr	w0, [x19, #72]
  4415f8:	ldr	w1, [x1, #8]
  4415fc:	add	w0, w0, w1
  441600:	str	w0, [x19, #72]
  441604:	b	440ea8 <ferror@plt+0x3e5d8>
  441608:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d094>
  44160c:	add	x1, x1, #0xf30
  441610:	add	x1, x1, #0x3e0
  441614:	mov	x0, x19
  441618:	bl	43a2c8 <ferror@plt+0x379f8>
  44161c:	str	x0, [sp, #72]
  441620:	ldr	x1, [x0, #8]
  441624:	ldr	w0, [x19, #72]
  441628:	ldr	w1, [x1, #8]
  44162c:	add	w0, w0, w1
  441630:	str	w0, [x19, #72]
  441634:	b	440ea8 <ferror@plt+0x3e5d8>
  441638:	mov	x0, x19
  44163c:	bl	43a400 <ferror@plt+0x37b30>
  441640:	b	441394 <ferror@plt+0x3eac4>
  441644:	add	x0, x0, #0x3
  441648:	str	x0, [x19, #24]
  44164c:	mov	x0, x19
  441650:	bl	441fd4 <ferror@plt+0x3f704>
  441654:	mov	x20, x0
  441658:	b	441454 <ferror@plt+0x3eb84>
  44165c:	mov	x20, #0x0                   	// #0
  441660:	b	441490 <ferror@plt+0x3ebc0>
  441664:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x1d094>
  441668:	add	x1, x1, #0xf30
  44166c:	add	x1, x1, #0x420
  441670:	mov	x0, x19
  441674:	bl	43a2c8 <ferror@plt+0x379f8>
  441678:	str	x0, [sp, #72]
  44167c:	ldr	x1, [x0, #8]
  441680:	ldr	w0, [x19, #72]
  441684:	ldr	w1, [x1, #8]
  441688:	add	w0, w0, w1
  44168c:	str	w0, [x19, #72]
  441690:	b	440ea8 <ferror@plt+0x3e5d8>
  441694:	mov	x20, x0
  441698:	b	440eac <ferror@plt+0x3e5dc>
  44169c:	mov	x20, #0x0                   	// #0
  4416a0:	b	440eac <ferror@plt+0x3e5dc>
  4416a4:	mov	x20, #0x0                   	// #0
  4416a8:	b	440eac <ferror@plt+0x3e5dc>
  4416ac:	mov	x20, #0x0                   	// #0
  4416b0:	b	440eac <ferror@plt+0x3e5dc>
  4416b4:	stp	x29, x30, [sp, #-64]!
  4416b8:	mov	x29, sp
  4416bc:	stp	x19, x20, [sp, #16]
  4416c0:	mov	x19, x0
  4416c4:	str	xzr, [sp, #56]
  4416c8:	ldr	x0, [x0, #24]
  4416cc:	ldrb	w1, [x0]
  4416d0:	cmp	w1, #0x45
  4416d4:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  4416d8:	mov	w2, #0x2e                  	// #46
  4416dc:	ccmp	w1, w2, #0x4, ne  // ne = any
  4416e0:	b.eq	4417c8 <ferror@plt+0x3eef8>  // b.none
  4416e4:	stp	x21, x22, [sp, #32]
  4416e8:	add	x21, sp, #0x38
  4416ec:	mov	w22, #0x4f                  	// #79
  4416f0:	mov	w20, w2
  4416f4:	b	441740 <ferror@plt+0x3ee70>
  4416f8:	mov	x0, x19
  4416fc:	bl	440d54 <ferror@plt+0x3e484>
  441700:	mov	x2, x0
  441704:	cbz	x0, 4417d0 <ferror@plt+0x3ef00>
  441708:	mov	x3, #0x0                   	// #0
  44170c:	mov	w1, w20
  441710:	mov	x0, x19
  441714:	bl	43a218 <ferror@plt+0x37948>
  441718:	mov	x2, x0
  44171c:	str	x0, [x21]
  441720:	cbz	x0, 4417d8 <ferror@plt+0x3ef08>
  441724:	add	x21, x0, #0x10
  441728:	ldr	x0, [x19, #24]
  44172c:	ldrb	w1, [x0]
  441730:	cmp	w1, #0x45
  441734:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  441738:	ccmp	w1, w20, #0x4, ne  // ne = any
  44173c:	b.eq	441758 <ferror@plt+0x3ee88>  // b.none
  441740:	cmp	w1, #0x52
  441744:	ccmp	w1, w22, #0x4, ne  // ne = any
  441748:	b.ne	4416f8 <ferror@plt+0x3ee28>  // b.any
  44174c:	ldrb	w0, [x0, #1]
  441750:	cmp	w0, #0x45
  441754:	b.ne	4416f8 <ferror@plt+0x3ee28>  // b.any
  441758:	ldr	x2, [sp, #56]
  44175c:	cbz	x2, 4417e0 <ferror@plt+0x3ef10>
  441760:	ldr	x0, [x2, #16]
  441764:	cbz	x0, 44177c <ferror@plt+0x3eeac>
  441768:	ldp	x21, x22, [sp, #32]
  44176c:	mov	x0, x2
  441770:	ldp	x19, x20, [sp, #16]
  441774:	ldp	x29, x30, [sp], #64
  441778:	ret
  44177c:	ldr	x0, [x2, #8]
  441780:	ldr	w1, [x0]
  441784:	cmp	w1, #0x27
  441788:	b.eq	441794 <ferror@plt+0x3eec4>  // b.none
  44178c:	ldp	x21, x22, [sp, #32]
  441790:	b	44176c <ferror@plt+0x3ee9c>
  441794:	ldr	x0, [x0, #8]
  441798:	ldr	w1, [x0, #28]
  44179c:	cmp	w1, #0x9
  4417a0:	b.eq	4417ac <ferror@plt+0x3eedc>  // b.none
  4417a4:	ldp	x21, x22, [sp, #32]
  4417a8:	b	44176c <ferror@plt+0x3ee9c>
  4417ac:	ldr	w1, [x19, #72]
  4417b0:	ldr	w0, [x0, #8]
  4417b4:	sub	w0, w1, w0
  4417b8:	str	w0, [x19, #72]
  4417bc:	str	xzr, [x2, #8]
  4417c0:	ldp	x21, x22, [sp, #32]
  4417c4:	b	44176c <ferror@plt+0x3ee9c>
  4417c8:	mov	x2, #0x0                   	// #0
  4417cc:	b	44176c <ferror@plt+0x3ee9c>
  4417d0:	ldp	x21, x22, [sp, #32]
  4417d4:	b	44176c <ferror@plt+0x3ee9c>
  4417d8:	ldp	x21, x22, [sp, #32]
  4417dc:	b	44176c <ferror@plt+0x3ee9c>
  4417e0:	ldp	x21, x22, [sp, #32]
  4417e4:	b	44176c <ferror@plt+0x3ee9c>
  4417e8:	stp	x29, x30, [sp, #-48]!
  4417ec:	mov	x29, sp
  4417f0:	stp	x19, x20, [sp, #16]
  4417f4:	stp	x21, x22, [sp, #32]
  4417f8:	mov	x20, x0
  4417fc:	ldr	x0, [x0, #24]
  441800:	ldrb	w19, [x0]
  441804:	cbz	w19, 441870 <ferror@plt+0x3efa0>
  441808:	add	x1, x0, #0x1
  44180c:	str	x1, [x20, #24]
  441810:	ldrb	w6, [x0]
  441814:	ldrb	w19, [x0, #1]
  441818:	cbz	w19, 441988 <ferror@plt+0x3f0b8>
  44181c:	add	x1, x0, #0x2
  441820:	str	x1, [x20, #24]
  441824:	ldrb	w19, [x0, #1]
  441828:	cmp	w6, #0x76
  44182c:	b.ne	441874 <ferror@plt+0x3efa4>  // b.any
  441830:	sub	w0, w19, #0x30
  441834:	and	w0, w0, #0xff
  441838:	cmp	w0, #0x9
  44183c:	b.hi	441884 <ferror@plt+0x3efb4>  // b.pmore
  441840:	mov	x0, x20
  441844:	bl	4408c8 <ferror@plt+0x3dff8>
  441848:	mov	x21, x0
  44184c:	mov	x0, x20
  441850:	bl	43a1d8 <ferror@plt+0x37908>
  441854:	mov	x22, x0
  441858:	mov	x2, x21
  44185c:	sub	w1, w19, #0x30
  441860:	bl	440ca0 <ferror@plt+0x3e3d0>
  441864:	cmp	w0, #0x0
  441868:	csel	x22, x22, xzr, ne  // ne = any
  44186c:	b	441974 <ferror@plt+0x3f0a4>
  441870:	mov	w6, w19
  441874:	cmp	w6, #0x63
  441878:	mov	w0, #0x76                  	// #118
  44187c:	ccmp	w19, w0, #0x0, eq  // eq = none
  441880:	b.eq	44189c <ferror@plt+0x3efcc>  // b.none
  441884:	mov	w4, #0x43                  	// #67
  441888:	mov	w3, #0x0                   	// #0
  44188c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x1d094>
  441890:	add	x0, x0, #0xf30
  441894:	add	x0, x0, #0x5c8
  441898:	b	441914 <ferror@plt+0x3f044>
  44189c:	ldr	w19, [x20, #80]
  4418a0:	ldr	w0, [x20, #76]
  4418a4:	cmp	w0, #0x0
  4418a8:	cset	w0, eq  // eq = none
  4418ac:	str	w0, [x20, #80]
  4418b0:	mov	x0, x20
  4418b4:	bl	440d54 <ferror@plt+0x3e484>
  4418b8:	mov	x2, x0
  4418bc:	ldr	w0, [x20, #80]
  4418c0:	cbz	w0, 4418e0 <ferror@plt+0x3f010>
  4418c4:	mov	x3, #0x0                   	// #0
  4418c8:	mov	w1, #0x35                  	// #53
  4418cc:	mov	x0, x20
  4418d0:	bl	43a218 <ferror@plt+0x37948>
  4418d4:	mov	x22, x0
  4418d8:	str	w19, [x20, #80]
  4418dc:	b	441974 <ferror@plt+0x3f0a4>
  4418e0:	mov	x3, #0x0                   	// #0
  4418e4:	mov	w1, #0x34                  	// #52
  4418e8:	mov	x0, x20
  4418ec:	bl	43a218 <ferror@plt+0x37948>
  4418f0:	mov	x22, x0
  4418f4:	b	4418d8 <ferror@plt+0x3f008>
  4418f8:	ldrb	w2, [x5, #1]
  4418fc:	cmp	w2, w19
  441900:	b.eq	441948 <ferror@plt+0x3f078>  // b.none
  441904:	b.hi	441968 <ferror@plt+0x3f098>  // b.pmore
  441908:	add	w3, w1, #0x1
  44190c:	cmp	w3, w4
  441910:	b.eq	441970 <ferror@plt+0x3f0a0>  // b.none
  441914:	sub	w1, w4, w3
  441918:	add	w1, w1, w1, lsr #31
  44191c:	add	w1, w3, w1, asr #1
  441920:	sbfiz	x2, x1, #1, #32
  441924:	add	x2, x2, w1, sxtw
  441928:	add	x21, x0, x2, lsl #3
  44192c:	ldr	x5, [x0, x2, lsl #3]
  441930:	ldrb	w2, [x5]
  441934:	cmp	w2, w6
  441938:	b.eq	4418f8 <ferror@plt+0x3f028>  // b.none
  44193c:	b.ls	441908 <ferror@plt+0x3f038>  // b.plast
  441940:	mov	w4, w1
  441944:	b	44190c <ferror@plt+0x3f03c>
  441948:	mov	x0, x20
  44194c:	bl	43a1d8 <ferror@plt+0x37908>
  441950:	mov	x22, x0
  441954:	cbz	x0, 441974 <ferror@plt+0x3f0a4>
  441958:	mov	w0, #0x32                  	// #50
  44195c:	str	w0, [x22]
  441960:	str	x21, [x22, #8]
  441964:	b	441974 <ferror@plt+0x3f0a4>
  441968:	mov	w4, w1
  44196c:	b	44190c <ferror@plt+0x3f03c>
  441970:	mov	x22, #0x0                   	// #0
  441974:	mov	x0, x22
  441978:	ldp	x19, x20, [sp, #16]
  44197c:	ldp	x21, x22, [sp, #32]
  441980:	ldp	x29, x30, [sp], #48
  441984:	ret
  441988:	cmp	w6, #0x76
  44198c:	b.eq	441884 <ferror@plt+0x3efb4>  // b.none
  441990:	b	441874 <ferror@plt+0x3efa4>
  441994:	stp	x29, x30, [sp, #-48]!
  441998:	mov	x29, sp
  44199c:	stp	x19, x20, [sp, #16]
  4419a0:	mov	x19, x0
  4419a4:	ldr	x2, [x0, #24]
  4419a8:	ldrb	w1, [x2]
  4419ac:	sub	w0, w1, #0x30
  4419b0:	and	w0, w0, #0xff
  4419b4:	cmp	w0, #0x9
  4419b8:	b.ls	441a44 <ferror@plt+0x3f174>  // b.plast
  4419bc:	sub	w0, w1, #0x61
  4419c0:	and	w0, w0, #0xff
  4419c4:	cmp	w0, #0x19
  4419c8:	b.hi	441a88 <ferror@plt+0x3f1b8>  // b.pmore
  4419cc:	cmp	w1, #0x6f
  4419d0:	b.eq	441a70 <ferror@plt+0x3f1a0>  // b.none
  4419d4:	mov	x0, x19
  4419d8:	bl	4417e8 <ferror@plt+0x3ef18>
  4419dc:	mov	x20, x0
  4419e0:	cbz	x0, 441a50 <ferror@plt+0x3f180>
  4419e4:	ldr	w0, [x0]
  4419e8:	cmp	w0, #0x32
  4419ec:	b.ne	441a50 <ferror@plt+0x3f180>  // b.any
  4419f0:	ldr	x2, [x20, #8]
  4419f4:	ldr	w0, [x19, #72]
  4419f8:	add	w1, w0, #0x7
  4419fc:	ldr	w0, [x2, #16]
  441a00:	add	w0, w0, w1
  441a04:	str	w0, [x19, #72]
  441a08:	ldr	x0, [x20, #8]
  441a0c:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  441a10:	add	x1, x1, #0xf70
  441a14:	ldr	x0, [x0]
  441a18:	bl	402620 <strcmp@plt>
  441a1c:	cbnz	w0, 441a50 <ferror@plt+0x3f180>
  441a20:	mov	x0, x19
  441a24:	bl	4408c8 <ferror@plt+0x3dff8>
  441a28:	mov	x3, x0
  441a2c:	mov	x2, x20
  441a30:	mov	w1, #0x37                  	// #55
  441a34:	mov	x0, x19
  441a38:	bl	43a218 <ferror@plt+0x37948>
  441a3c:	mov	x20, x0
  441a40:	b	441a50 <ferror@plt+0x3f180>
  441a44:	mov	x0, x19
  441a48:	bl	4408c8 <ferror@plt+0x3dff8>
  441a4c:	mov	x20, x0
  441a50:	ldr	x0, [x19, #24]
  441a54:	ldrb	w0, [x0]
  441a58:	cmp	w0, #0x42
  441a5c:	b.eq	441de8 <ferror@plt+0x3f518>  // b.none
  441a60:	mov	x0, x20
  441a64:	ldp	x19, x20, [sp, #16]
  441a68:	ldp	x29, x30, [sp], #48
  441a6c:	ret
  441a70:	ldrb	w0, [x2, #1]
  441a74:	cmp	w0, #0x6e
  441a78:	b.ne	4419d4 <ferror@plt+0x3f104>  // b.any
  441a7c:	add	x2, x2, #0x2
  441a80:	str	x2, [x19, #24]
  441a84:	b	4419d4 <ferror@plt+0x3f104>
  441a88:	sub	w0, w1, #0x43
  441a8c:	and	w0, w0, #0xff
  441a90:	cmp	w0, #0x1
  441a94:	b.ls	441b30 <ferror@plt+0x3f260>  // b.plast
  441a98:	cmp	w1, #0x4c
  441a9c:	b.eq	441cf4 <ferror@plt+0x3f424>  // b.none
  441aa0:	mov	x20, #0x0                   	// #0
  441aa4:	cmp	w1, #0x55
  441aa8:	b.ne	441a60 <ferror@plt+0x3f190>  // b.any
  441aac:	ldrb	w0, [x2, #1]
  441ab0:	cmp	w0, #0x6c
  441ab4:	b.eq	441d20 <ferror@plt+0x3f450>  // b.none
  441ab8:	cmp	w0, #0x74
  441abc:	b.ne	441a60 <ferror@plt+0x3f190>  // b.any
  441ac0:	add	x0, x2, #0x1
  441ac4:	str	x0, [x19, #24]
  441ac8:	ldrb	w0, [x2, #1]
  441acc:	mov	x20, #0x0                   	// #0
  441ad0:	cmp	w0, #0x74
  441ad4:	b.ne	441a50 <ferror@plt+0x3f180>  // b.any
  441ad8:	stp	x21, x22, [sp, #32]
  441adc:	add	x2, x2, #0x2
  441ae0:	str	x2, [x19, #24]
  441ae4:	mov	x0, x19
  441ae8:	bl	43a684 <ferror@plt+0x37db4>
  441aec:	mov	w21, w0
  441af0:	tbnz	w0, #31, 441de0 <ferror@plt+0x3f510>
  441af4:	mov	x0, x19
  441af8:	bl	43a1d8 <ferror@plt+0x37908>
  441afc:	mov	x20, x0
  441b00:	cbz	x0, 441b14 <ferror@plt+0x3f244>
  441b04:	mov	w0, #0x48                  	// #72
  441b08:	str	w0, [x20]
  441b0c:	sxtw	x21, w21
  441b10:	str	x21, [x20, #8]
  441b14:	mov	x1, x20
  441b18:	mov	x0, x19
  441b1c:	bl	43a84c <ferror@plt+0x37f7c>
  441b20:	cmp	w0, #0x0
  441b24:	csel	x20, x20, xzr, ne  // ne = any
  441b28:	ldp	x21, x22, [sp, #32]
  441b2c:	b	441a50 <ferror@plt+0x3f180>
  441b30:	stp	x21, x22, [sp, #32]
  441b34:	ldr	x21, [x19, #64]
  441b38:	cbz	x21, 441b7c <ferror@plt+0x3f2ac>
  441b3c:	ldr	w0, [x21]
  441b40:	cbnz	w0, 441b74 <ferror@plt+0x3f2a4>
  441b44:	ldr	w0, [x19, #72]
  441b48:	ldr	w1, [x21, #16]
  441b4c:	add	w0, w0, w1
  441b50:	str	w0, [x19, #72]
  441b54:	ldrb	w0, [x2]
  441b58:	cmp	w0, #0x43
  441b5c:	b.eq	441bc0 <ferror@plt+0x3f2f0>  // b.none
  441b60:	cmp	w0, #0x44
  441b64:	b.eq	441b84 <ferror@plt+0x3f2b4>  // b.none
  441b68:	mov	x20, #0x0                   	// #0
  441b6c:	ldp	x21, x22, [sp, #32]
  441b70:	b	441a50 <ferror@plt+0x3f180>
  441b74:	cmp	w0, #0x18
  441b78:	b.eq	441bac <ferror@plt+0x3f2dc>  // b.none
  441b7c:	cmp	w1, #0x43
  441b80:	b.eq	441bc0 <ferror@plt+0x3f2f0>  // b.none
  441b84:	ldrb	w0, [x2, #1]
  441b88:	cmp	w0, #0x32
  441b8c:	b.eq	441cdc <ferror@plt+0x3f40c>  // b.none
  441b90:	b.ls	441c8c <ferror@plt+0x3f3bc>  // b.plast
  441b94:	cmp	w0, #0x34
  441b98:	b.eq	441cec <ferror@plt+0x3f41c>  // b.none
  441b9c:	cmp	w0, #0x35
  441ba0:	b.ne	441db8 <ferror@plt+0x3f4e8>  // b.any
  441ba4:	mov	w22, #0x5                   	// #5
  441ba8:	b	441ca0 <ferror@plt+0x3f3d0>
  441bac:	ldr	w0, [x19, #72]
  441bb0:	ldr	w1, [x21, #16]
  441bb4:	add	w0, w0, w1
  441bb8:	str	w0, [x19, #72]
  441bbc:	b	441b54 <ferror@plt+0x3f284>
  441bc0:	ldrb	w0, [x2, #1]
  441bc4:	cmp	w0, #0x49
  441bc8:	b.eq	441bf4 <ferror@plt+0x3f324>  // b.none
  441bcc:	cmp	w0, #0x33
  441bd0:	b.eq	441c68 <ferror@plt+0x3f398>  // b.none
  441bd4:	b.ls	441dfc <ferror@plt+0x3f52c>  // b.plast
  441bd8:	cmp	w0, #0x34
  441bdc:	b.eq	441c80 <ferror@plt+0x3f3b0>  // b.none
  441be0:	mov	w1, #0x0                   	// #0
  441be4:	cmp	w0, #0x35
  441be8:	b.ne	441e58 <ferror@plt+0x3f588>  // b.any
  441bec:	mov	w21, #0x5                   	// #5
  441bf0:	b	441e14 <ferror@plt+0x3f544>
  441bf4:	add	x1, x2, #0x1
  441bf8:	str	x1, [x19, #24]
  441bfc:	ldrb	w0, [x2, #2]
  441c00:	cmp	w0, #0x33
  441c04:	b.eq	441c5c <ferror@plt+0x3f38c>  // b.none
  441c08:	b.hi	441c34 <ferror@plt+0x3f364>  // b.pmore
  441c0c:	cmp	w0, #0x31
  441c10:	b.eq	441e64 <ferror@plt+0x3f594>  // b.none
  441c14:	cmp	w0, #0x32
  441c18:	b.ne	441c28 <ferror@plt+0x3f358>  // b.any
  441c1c:	mov	x2, x1
  441c20:	mov	w1, #0x1                   	// #1
  441c24:	b	441e10 <ferror@plt+0x3f540>
  441c28:	mov	x20, #0x0                   	// #0
  441c2c:	ldp	x21, x22, [sp, #32]
  441c30:	b	441a50 <ferror@plt+0x3f180>
  441c34:	cmp	w0, #0x34
  441c38:	b.eq	441c74 <ferror@plt+0x3f3a4>  // b.none
  441c3c:	cmp	w0, #0x35
  441c40:	b.ne	441c50 <ferror@plt+0x3f380>  // b.any
  441c44:	mov	x2, x1
  441c48:	mov	w1, #0x1                   	// #1
  441c4c:	b	441bec <ferror@plt+0x3f31c>
  441c50:	mov	x20, #0x0                   	// #0
  441c54:	ldp	x21, x22, [sp, #32]
  441c58:	b	441a50 <ferror@plt+0x3f180>
  441c5c:	mov	x2, x1
  441c60:	mov	w1, #0x1                   	// #1
  441c64:	b	441c6c <ferror@plt+0x3f39c>
  441c68:	mov	w1, #0x0                   	// #0
  441c6c:	mov	w21, #0x3                   	// #3
  441c70:	b	441e14 <ferror@plt+0x3f544>
  441c74:	mov	x2, x1
  441c78:	mov	w1, #0x1                   	// #1
  441c7c:	b	441c84 <ferror@plt+0x3f3b4>
  441c80:	mov	w1, #0x0                   	// #0
  441c84:	mov	w21, #0x4                   	// #4
  441c88:	b	441e14 <ferror@plt+0x3f544>
  441c8c:	cmp	w0, #0x30
  441c90:	b.eq	441ce4 <ferror@plt+0x3f414>  // b.none
  441c94:	mov	w22, #0x2                   	// #2
  441c98:	cmp	w0, #0x31
  441c9c:	b.ne	441cd0 <ferror@plt+0x3f400>  // b.any
  441ca0:	add	x2, x2, #0x2
  441ca4:	str	x2, [x19, #24]
  441ca8:	mov	x0, x19
  441cac:	bl	43a1d8 <ferror@plt+0x37908>
  441cb0:	mov	x20, x0
  441cb4:	mov	x2, x21
  441cb8:	mov	w1, w22
  441cbc:	bl	440d14 <ferror@plt+0x3e444>
  441cc0:	cmp	w0, #0x0
  441cc4:	csel	x20, x20, xzr, ne  // ne = any
  441cc8:	ldp	x21, x22, [sp, #32]
  441ccc:	b	441a50 <ferror@plt+0x3f180>
  441cd0:	mov	x20, #0x0                   	// #0
  441cd4:	ldp	x21, x22, [sp, #32]
  441cd8:	b	441a50 <ferror@plt+0x3f180>
  441cdc:	mov	w22, #0x3                   	// #3
  441ce0:	b	441ca0 <ferror@plt+0x3f3d0>
  441ce4:	mov	w22, #0x1                   	// #1
  441ce8:	b	441ca0 <ferror@plt+0x3f3d0>
  441cec:	mov	w22, #0x4                   	// #4
  441cf0:	b	441ca0 <ferror@plt+0x3f3d0>
  441cf4:	add	x2, x2, #0x1
  441cf8:	str	x2, [x19, #24]
  441cfc:	mov	x0, x19
  441d00:	bl	4408c8 <ferror@plt+0x3dff8>
  441d04:	mov	x20, x0
  441d08:	cbz	x0, 441a60 <ferror@plt+0x3f190>
  441d0c:	mov	x0, x19
  441d10:	bl	43a7ac <ferror@plt+0x37edc>
  441d14:	cbnz	w0, 441a50 <ferror@plt+0x3f180>
  441d18:	mov	x20, #0x0                   	// #0
  441d1c:	b	441a60 <ferror@plt+0x3f190>
  441d20:	add	x0, x2, #0x1
  441d24:	str	x0, [x19, #24]
  441d28:	ldrb	w0, [x2, #1]
  441d2c:	mov	x20, #0x0                   	// #0
  441d30:	cmp	w0, #0x6c
  441d34:	b.ne	441a50 <ferror@plt+0x3f180>  // b.any
  441d38:	stp	x21, x22, [sp, #32]
  441d3c:	add	x2, x2, #0x2
  441d40:	str	x2, [x19, #24]
  441d44:	mov	x0, x19
  441d48:	bl	4416b4 <ferror@plt+0x3ede4>
  441d4c:	mov	x21, x0
  441d50:	cbz	x0, 441dc4 <ferror@plt+0x3f4f4>
  441d54:	ldr	x0, [x19, #24]
  441d58:	ldrb	w1, [x0]
  441d5c:	cmp	w1, #0x45
  441d60:	b.ne	441dd0 <ferror@plt+0x3f500>  // b.any
  441d64:	add	x0, x0, #0x1
  441d68:	str	x0, [x19, #24]
  441d6c:	mov	x0, x19
  441d70:	bl	43a684 <ferror@plt+0x37db4>
  441d74:	mov	w22, w0
  441d78:	tbnz	w0, #31, 441dd8 <ferror@plt+0x3f508>
  441d7c:	mov	x0, x19
  441d80:	bl	43a1d8 <ferror@plt+0x37908>
  441d84:	mov	x20, x0
  441d88:	cbz	x0, 441d9c <ferror@plt+0x3f4cc>
  441d8c:	mov	w0, #0x46                  	// #70
  441d90:	str	w0, [x20]
  441d94:	str	x21, [x20, #8]
  441d98:	str	w22, [x20, #16]
  441d9c:	mov	x1, x20
  441da0:	mov	x0, x19
  441da4:	bl	43a84c <ferror@plt+0x37f7c>
  441da8:	cmp	w0, #0x0
  441dac:	csel	x20, x20, xzr, ne  // ne = any
  441db0:	ldp	x21, x22, [sp, #32]
  441db4:	b	441a50 <ferror@plt+0x3f180>
  441db8:	mov	x20, #0x0                   	// #0
  441dbc:	ldp	x21, x22, [sp, #32]
  441dc0:	b	441a50 <ferror@plt+0x3f180>
  441dc4:	mov	x20, x0
  441dc8:	ldp	x21, x22, [sp, #32]
  441dcc:	b	441a50 <ferror@plt+0x3f180>
  441dd0:	ldp	x21, x22, [sp, #32]
  441dd4:	b	441a50 <ferror@plt+0x3f180>
  441dd8:	ldp	x21, x22, [sp, #32]
  441ddc:	b	441a50 <ferror@plt+0x3f180>
  441de0:	ldp	x21, x22, [sp, #32]
  441de4:	b	441a50 <ferror@plt+0x3f180>
  441de8:	mov	x1, x20
  441dec:	mov	x0, x19
  441df0:	bl	4409cc <ferror@plt+0x3e0fc>
  441df4:	mov	x20, x0
  441df8:	b	441a60 <ferror@plt+0x3f190>
  441dfc:	cmp	w0, #0x31
  441e00:	b.eq	441e7c <ferror@plt+0x3f5ac>  // b.none
  441e04:	mov	w1, #0x0                   	// #0
  441e08:	cmp	w0, #0x32
  441e0c:	b.ne	441e4c <ferror@plt+0x3f57c>  // b.any
  441e10:	mov	w21, #0x2                   	// #2
  441e14:	add	x2, x2, #0x2
  441e18:	str	x2, [x19, #24]
  441e1c:	cbnz	w1, 441e70 <ferror@plt+0x3f5a0>
  441e20:	ldr	x22, [x19, #64]
  441e24:	mov	x0, x19
  441e28:	bl	43a1d8 <ferror@plt+0x37908>
  441e2c:	mov	x20, x0
  441e30:	mov	x2, x22
  441e34:	mov	w1, w21
  441e38:	bl	440cd4 <ferror@plt+0x3e404>
  441e3c:	cmp	w0, #0x0
  441e40:	csel	x20, x20, xzr, ne  // ne = any
  441e44:	ldp	x21, x22, [sp, #32]
  441e48:	b	441a50 <ferror@plt+0x3f180>
  441e4c:	mov	x20, #0x0                   	// #0
  441e50:	ldp	x21, x22, [sp, #32]
  441e54:	b	441a60 <ferror@plt+0x3f190>
  441e58:	mov	x20, #0x0                   	// #0
  441e5c:	ldp	x21, x22, [sp, #32]
  441e60:	b	441a60 <ferror@plt+0x3f190>
  441e64:	add	x2, x2, #0x3
  441e68:	str	x2, [x19, #24]
  441e6c:	mov	w21, #0x1                   	// #1
  441e70:	mov	x0, x19
  441e74:	bl	440d54 <ferror@plt+0x3e484>
  441e78:	b	441e20 <ferror@plt+0x3f550>
  441e7c:	add	x2, x2, #0x2
  441e80:	str	x2, [x19, #24]
  441e84:	mov	w21, #0x1                   	// #1
  441e88:	b	441e20 <ferror@plt+0x3f550>
  441e8c:	stp	x29, x30, [sp, #-32]!
  441e90:	mov	x29, sp
  441e94:	stp	x19, x20, [sp, #16]
  441e98:	mov	x19, x0
  441e9c:	ldr	x0, [x0, #24]
  441ea0:	ldrb	w2, [x0]
  441ea4:	cmp	w2, #0x4a
  441ea8:	b.eq	441eb8 <ferror@plt+0x3f5e8>  // b.none
  441eac:	cbnz	w1, 441ec0 <ferror@plt+0x3f5f0>
  441eb0:	mov	x20, #0x0                   	// #0
  441eb4:	b	441ed0 <ferror@plt+0x3f600>
  441eb8:	add	x0, x0, #0x1
  441ebc:	str	x0, [x19, #24]
  441ec0:	mov	x0, x19
  441ec4:	bl	440d54 <ferror@plt+0x3e484>
  441ec8:	mov	x20, x0
  441ecc:	cbz	x0, 441ef0 <ferror@plt+0x3f620>
  441ed0:	mov	x0, x19
  441ed4:	bl	4416b4 <ferror@plt+0x3ede4>
  441ed8:	cbz	x0, 441ef0 <ferror@plt+0x3f620>
  441edc:	mov	x3, x0
  441ee0:	mov	x2, x20
  441ee4:	mov	w1, #0x29                  	// #41
  441ee8:	mov	x0, x19
  441eec:	bl	43a218 <ferror@plt+0x37948>
  441ef0:	ldp	x19, x20, [sp, #16]
  441ef4:	ldp	x29, x30, [sp], #32
  441ef8:	ret
  441efc:	stp	x29, x30, [sp, #-32]!
  441f00:	mov	x29, sp
  441f04:	str	x19, [sp, #16]
  441f08:	mov	x19, x0
  441f0c:	ldr	w0, [x0, #16]
  441f10:	tbnz	w0, #18, 441fbc <ferror@plt+0x3f6ec>
  441f14:	ldr	w0, [x19, #84]
  441f18:	cmp	w0, #0x800
  441f1c:	b.hi	441fb4 <ferror@plt+0x3f6e4>  // b.pmore
  441f20:	add	w0, w0, #0x1
  441f24:	str	w0, [x19, #84]
  441f28:	ldr	x1, [x19, #24]
  441f2c:	ldrb	w2, [x1]
  441f30:	mov	x0, #0x0                   	// #0
  441f34:	cmp	w2, #0x46
  441f38:	b.eq	441f54 <ferror@plt+0x3f684>  // b.none
  441f3c:	ldr	w1, [x19, #84]
  441f40:	sub	w1, w1, #0x1
  441f44:	str	w1, [x19, #84]
  441f48:	ldr	x19, [sp, #16]
  441f4c:	ldp	x29, x30, [sp], #32
  441f50:	ret
  441f54:	add	x0, x1, #0x1
  441f58:	str	x0, [x19, #24]
  441f5c:	ldrb	w2, [x1, #1]
  441f60:	add	x1, x1, #0x2
  441f64:	cmp	w2, #0x59
  441f68:	csel	x1, x1, x0, eq  // eq = none
  441f6c:	str	x1, [x19, #24]
  441f70:	mov	w1, #0x1                   	// #1
  441f74:	mov	x0, x19
  441f78:	bl	441e8c <ferror@plt+0x3f5bc>
  441f7c:	mov	x1, x0
  441f80:	mov	x0, x19
  441f84:	bl	43a618 <ferror@plt+0x37d48>
  441f88:	ldr	x1, [x19, #24]
  441f8c:	ldrb	w2, [x1]
  441f90:	cmp	w2, #0x45
  441f94:	b.eq	441fa8 <ferror@plt+0x3f6d8>  // b.none
  441f98:	mov	x0, #0x0                   	// #0
  441f9c:	ldr	w1, [x19, #16]
  441fa0:	tbz	w1, #18, 441f3c <ferror@plt+0x3f66c>
  441fa4:	b	441f48 <ferror@plt+0x3f678>
  441fa8:	add	x1, x1, #0x1
  441fac:	str	x1, [x19, #24]
  441fb0:	b	441f9c <ferror@plt+0x3f6cc>
  441fb4:	mov	x0, #0x0                   	// #0
  441fb8:	b	441f48 <ferror@plt+0x3f678>
  441fbc:	ldr	x1, [x19, #24]
  441fc0:	ldrb	w0, [x1]
  441fc4:	cmp	w0, #0x46
  441fc8:	b.eq	441f54 <ferror@plt+0x3f684>  // b.none
  441fcc:	mov	x0, #0x0                   	// #0
  441fd0:	b	441f48 <ferror@plt+0x3f678>
  441fd4:	stp	x29, x30, [sp, #-64]!
  441fd8:	mov	x29, sp
  441fdc:	stp	x19, x20, [sp, #16]
  441fe0:	stp	x21, x22, [sp, #32]
  441fe4:	mov	x19, x0
  441fe8:	ldr	w21, [x0, #76]
  441fec:	mov	w0, #0x1                   	// #1
  441ff0:	str	w0, [x19, #76]
  441ff4:	ldr	x0, [x19, #24]
  441ff8:	ldrb	w1, [x0]
  441ffc:	cmp	w1, #0x4c
  442000:	b.eq	442064 <ferror@plt+0x3f794>  // b.none
  442004:	cmp	w1, #0x54
  442008:	b.eq	442074 <ferror@plt+0x3f7a4>  // b.none
  44200c:	cmp	w1, #0x73
  442010:	b.eq	442084 <ferror@plt+0x3f7b4>  // b.none
  442014:	cmp	w1, #0x66
  442018:	b.eq	4421b0 <ferror@plt+0x3f8e0>  // b.none
  44201c:	sub	w2, w1, #0x30
  442020:	and	w2, w2, #0xff
  442024:	cmp	w2, #0x9
  442028:	b.hi	442254 <ferror@plt+0x3f984>  // b.pmore
  44202c:	mov	x0, x19
  442030:	bl	441994 <ferror@plt+0x3f0c4>
  442034:	mov	x20, x0
  442038:	cbz	x0, 44204c <ferror@plt+0x3f77c>
  44203c:	ldr	x0, [x19, #24]
  442040:	ldrb	w0, [x0]
  442044:	cmp	w0, #0x49
  442048:	b.eq	442274 <ferror@plt+0x3f9a4>  // b.none
  44204c:	str	w21, [x19, #76]
  442050:	mov	x0, x20
  442054:	ldp	x19, x20, [sp, #16]
  442058:	ldp	x21, x22, [sp, #32]
  44205c:	ldp	x29, x30, [sp], #64
  442060:	ret
  442064:	mov	x0, x19
  442068:	bl	4439b0 <ferror@plt+0x410e0>
  44206c:	mov	x20, x0
  442070:	b	44204c <ferror@plt+0x3f77c>
  442074:	mov	x0, x19
  442078:	bl	43a700 <ferror@plt+0x37e30>
  44207c:	mov	x20, x0
  442080:	b	44204c <ferror@plt+0x3f77c>
  442084:	ldrb	w2, [x0, #1]
  442088:	cmp	w2, #0x72
  44208c:	b.eq	442100 <ferror@plt+0x3f830>  // b.none
  442090:	cmp	w2, #0x70
  442094:	b.eq	442184 <ferror@plt+0x3f8b4>  // b.none
  442098:	cmp	w1, #0x69
  44209c:	mov	w2, #0x74                  	// #116
  4420a0:	ccmp	w1, w2, #0x4, ne  // ne = any
  4420a4:	b.ne	4421bc <ferror@plt+0x3f8ec>  // b.any
  4420a8:	ldrb	w2, [x0, #1]
  4420ac:	cmp	w2, #0x6c
  4420b0:	b.ne	4421bc <ferror@plt+0x3f8ec>  // b.any
  4420b4:	add	x0, x0, #0x2
  4420b8:	str	x0, [x19, #24]
  4420bc:	mov	x22, #0x0                   	// #0
  4420c0:	cmp	w1, #0x74
  4420c4:	b.eq	442298 <ferror@plt+0x3f9c8>  // b.none
  4420c8:	ldr	x0, [x19, #24]
  4420cc:	ldrb	w0, [x0, #1]
  4420d0:	mov	x20, #0x0                   	// #0
  4420d4:	cbz	w0, 44204c <ferror@plt+0x3f77c>
  4420d8:	mov	w1, #0x45                  	// #69
  4420dc:	mov	x0, x19
  4420e0:	bl	4427a0 <ferror@plt+0x3fed0>
  4420e4:	mov	x3, x0
  4420e8:	mov	x2, x22
  4420ec:	mov	w1, #0x31                  	// #49
  4420f0:	mov	x0, x19
  4420f4:	bl	43a218 <ferror@plt+0x37948>
  4420f8:	mov	x20, x0
  4420fc:	b	44204c <ferror@plt+0x3f77c>
  442100:	add	x0, x0, #0x2
  442104:	str	x0, [x19, #24]
  442108:	mov	x0, x19
  44210c:	bl	440d54 <ferror@plt+0x3e484>
  442110:	mov	x20, x0
  442114:	mov	x0, x19
  442118:	bl	441994 <ferror@plt+0x3f0c4>
  44211c:	mov	x22, x0
  442120:	ldr	x0, [x19, #24]
  442124:	ldrb	w0, [x0]
  442128:	cmp	w0, #0x49
  44212c:	b.eq	44214c <ferror@plt+0x3f87c>  // b.none
  442130:	mov	x3, x22
  442134:	mov	x2, x20
  442138:	mov	w1, #0x1                   	// #1
  44213c:	mov	x0, x19
  442140:	bl	43a218 <ferror@plt+0x37948>
  442144:	mov	x20, x0
  442148:	b	44204c <ferror@plt+0x3f77c>
  44214c:	mov	x0, x19
  442150:	bl	443c4c <ferror@plt+0x4137c>
  442154:	mov	x3, x0
  442158:	mov	x2, x22
  44215c:	mov	w1, #0x4                   	// #4
  442160:	mov	x0, x19
  442164:	bl	43a218 <ferror@plt+0x37948>
  442168:	mov	x3, x0
  44216c:	mov	x2, x20
  442170:	mov	w1, #0x1                   	// #1
  442174:	mov	x0, x19
  442178:	bl	43a218 <ferror@plt+0x37948>
  44217c:	mov	x20, x0
  442180:	b	44204c <ferror@plt+0x3f77c>
  442184:	add	x0, x0, #0x2
  442188:	str	x0, [x19, #24]
  44218c:	mov	x0, x19
  442190:	bl	443c88 <ferror@plt+0x413b8>
  442194:	mov	x3, #0x0                   	// #0
  442198:	mov	x2, x0
  44219c:	mov	w1, #0x4b                  	// #75
  4421a0:	mov	x0, x19
  4421a4:	bl	43a218 <ferror@plt+0x37948>
  4421a8:	mov	x20, x0
  4421ac:	b	44204c <ferror@plt+0x3f77c>
  4421b0:	ldrb	w1, [x0, #1]
  4421b4:	cmp	w1, #0x70
  4421b8:	b.eq	4421f0 <ferror@plt+0x3f920>  // b.none
  4421bc:	mov	x0, x19
  4421c0:	bl	4417e8 <ferror@plt+0x3ef18>
  4421c4:	mov	x20, x0
  4421c8:	cbz	x0, 44204c <ferror@plt+0x3f77c>
  4421cc:	ldr	w0, [x0]
  4421d0:	cmp	w0, #0x32
  4421d4:	b.eq	4422a8 <ferror@plt+0x3f9d8>  // b.none
  4421d8:	cmp	w0, #0x33
  4421dc:	b.eq	4423b8 <ferror@plt+0x3fae8>  // b.none
  4421e0:	cmp	w0, #0x34
  4421e4:	b.eq	442738 <ferror@plt+0x3fe68>  // b.none
  4421e8:	mov	x20, #0x0                   	// #0
  4421ec:	b	44204c <ferror@plt+0x3f77c>
  4421f0:	add	x1, x0, #0x2
  4421f4:	str	x1, [x19, #24]
  4421f8:	ldrb	w1, [x0, #2]
  4421fc:	cmp	w1, #0x54
  442200:	b.eq	442244 <ferror@plt+0x3f974>  // b.none
  442204:	mov	x0, x19
  442208:	bl	43a684 <ferror@plt+0x37db4>
  44220c:	mvn	x1, x0
  442210:	mov	x20, #0x0                   	// #0
  442214:	tst	x1, #0x7fffffff
  442218:	b.eq	44204c <ferror@plt+0x3f77c>  // b.none
  44221c:	add	w22, w0, #0x1
  442220:	mov	x0, x19
  442224:	bl	43a1d8 <ferror@plt+0x37908>
  442228:	mov	x20, x0
  44222c:	cbz	x0, 44204c <ferror@plt+0x3f77c>
  442230:	mov	w0, #0x6                   	// #6
  442234:	str	w0, [x20]
  442238:	sxtw	x0, w22
  44223c:	str	x0, [x20, #8]
  442240:	b	44204c <ferror@plt+0x3f77c>
  442244:	add	x0, x0, #0x3
  442248:	str	x0, [x19, #24]
  44224c:	mov	w22, #0x0                   	// #0
  442250:	b	442220 <ferror@plt+0x3f950>
  442254:	cmp	w1, #0x6f
  442258:	b.ne	442098 <ferror@plt+0x3f7c8>  // b.any
  44225c:	ldrb	w1, [x0, #1]
  442260:	cmp	w1, #0x6e
  442264:	b.ne	4421bc <ferror@plt+0x3f8ec>  // b.any
  442268:	add	x0, x0, #0x2
  44226c:	str	x0, [x19, #24]
  442270:	b	44202c <ferror@plt+0x3f75c>
  442274:	mov	x0, x19
  442278:	bl	443c4c <ferror@plt+0x4137c>
  44227c:	mov	x3, x0
  442280:	mov	x2, x20
  442284:	mov	w1, #0x4                   	// #4
  442288:	mov	x0, x19
  44228c:	bl	43a218 <ferror@plt+0x37948>
  442290:	mov	x20, x0
  442294:	b	44204c <ferror@plt+0x3f77c>
  442298:	mov	x0, x19
  44229c:	bl	440d54 <ferror@plt+0x3e484>
  4422a0:	mov	x22, x0
  4422a4:	b	4420c8 <ferror@plt+0x3f7f8>
  4422a8:	ldr	x0, [x20, #8]
  4422ac:	ldr	x22, [x0]
  4422b0:	ldr	w0, [x0, #16]
  4422b4:	sub	w1, w0, #0x2
  4422b8:	ldr	w0, [x19, #72]
  4422bc:	add	w0, w0, w1
  4422c0:	str	w0, [x19, #72]
  4422c4:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1f094>
  4422c8:	add	x1, x1, #0x310
  4422cc:	mov	x0, x22
  4422d0:	bl	402620 <strcmp@plt>
  4422d4:	cbz	w0, 4422fc <ferror@plt+0x3fa2c>
  4422d8:	ldr	w0, [x20]
  4422dc:	cmp	w0, #0x33
  4422e0:	b.eq	4423bc <ferror@plt+0x3faec>  // b.none
  4422e4:	cmp	w0, #0x34
  4422e8:	b.eq	442344 <ferror@plt+0x3fa74>  // b.none
  4422ec:	cmp	w0, #0x32
  4422f0:	b.eq	442320 <ferror@plt+0x3fa50>  // b.none
  4422f4:	mov	x20, #0x0                   	// #0
  4422f8:	b	44204c <ferror@plt+0x3f77c>
  4422fc:	mov	x0, x19
  442300:	bl	440d54 <ferror@plt+0x3e484>
  442304:	mov	x3, x0
  442308:	mov	x2, x20
  44230c:	mov	w1, #0x37                  	// #55
  442310:	mov	x0, x19
  442314:	bl	43a218 <ferror@plt+0x37948>
  442318:	mov	x20, x0
  44231c:	b	44204c <ferror@plt+0x3f77c>
  442320:	ldr	x0, [x20, #8]
  442324:	ldr	w0, [x0, #20]
  442328:	cmp	w0, #0x2
  44232c:	b.eq	4424e4 <ferror@plt+0x3fc14>  // b.none
  442330:	b.gt	4423cc <ferror@plt+0x3fafc>
  442334:	cbz	w0, 442474 <ferror@plt+0x3fba4>
  442338:	cmp	w0, #0x1
  44233c:	b.ne	4423c4 <ferror@plt+0x3faf4>  // b.any
  442340:	cbz	x22, 442738 <ferror@plt+0x3fe68>
  442344:	str	x23, [sp, #48]
  442348:	ldrb	w0, [x22]
  44234c:	cmp	w0, #0x70
  442350:	mov	w1, #0x6d                  	// #109
  442354:	ccmp	w0, w1, #0x4, ne  // ne = any
  442358:	b.ne	442368 <ferror@plt+0x3fa98>  // b.any
  44235c:	ldrb	w1, [x22, #1]
  442360:	cmp	w1, w0
  442364:	b.eq	442490 <ferror@plt+0x3fbc0>  // b.none
  442368:	ldr	w0, [x20]
  44236c:	cmp	w0, #0x34
  442370:	b.eq	442750 <ferror@plt+0x3fe80>  // b.none
  442374:	mov	w23, #0x0                   	// #0
  442378:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  44237c:	add	x1, x1, #0xe88
  442380:	mov	x0, x22
  442384:	bl	402620 <strcmp@plt>
  442388:	cbz	w0, 4424b8 <ferror@plt+0x3fbe8>
  44238c:	mov	x0, x19
  442390:	bl	443c88 <ferror@plt+0x413b8>
  442394:	mov	x3, x0
  442398:	cbnz	w23, 4424c8 <ferror@plt+0x3fbf8>
  44239c:	ldr	x23, [sp, #48]
  4423a0:	mov	x2, x20
  4423a4:	mov	w1, #0x37                  	// #55
  4423a8:	mov	x0, x19
  4423ac:	bl	43a218 <ferror@plt+0x37948>
  4423b0:	mov	x20, x0
  4423b4:	b	44204c <ferror@plt+0x3f77c>
  4423b8:	mov	x22, #0x0                   	// #0
  4423bc:	ldr	w0, [x20, #8]
  4423c0:	b	442328 <ferror@plt+0x3fa58>
  4423c4:	mov	x20, #0x0                   	// #0
  4423c8:	b	44204c <ferror@plt+0x3f77c>
  4423cc:	cmp	w0, #0x3
  4423d0:	b.ne	44246c <ferror@plt+0x3fb9c>  // b.any
  4423d4:	cbz	x22, 442700 <ferror@plt+0x3fe30>
  4423d8:	str	x23, [sp, #48]
  4423dc:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  4423e0:	add	x1, x1, #0xdb0
  4423e4:	mov	x0, x22
  4423e8:	bl	402620 <strcmp@plt>
  4423ec:	cbz	w0, 442604 <ferror@plt+0x3fd34>
  4423f0:	ldrb	w0, [x22]
  4423f4:	cmp	w0, #0x66
  4423f8:	b.eq	442670 <ferror@plt+0x3fda0>  // b.none
  4423fc:	cmp	w0, #0x6e
  442400:	b.ne	442714 <ferror@plt+0x3fe44>  // b.any
  442404:	ldrb	w0, [x22, #1]
  442408:	cmp	w0, #0x77
  44240c:	mov	w1, #0x61                  	// #97
  442410:	ccmp	w0, w1, #0x4, ne  // ne = any
  442414:	b.ne	442720 <ferror@plt+0x3fe50>  // b.any
  442418:	mov	w1, #0x5f                  	// #95
  44241c:	mov	x0, x19
  442420:	bl	4427a0 <ferror@plt+0x3fed0>
  442424:	mov	x22, x0
  442428:	mov	x0, x19
  44242c:	bl	440d54 <ferror@plt+0x3e484>
  442430:	mov	x23, x0
  442434:	ldr	x0, [x19, #24]
  442438:	ldrb	w1, [x0]
  44243c:	cmp	w1, #0x45
  442440:	b.eq	4426a4 <ferror@plt+0x3fdd4>  // b.none
  442444:	cmp	w1, #0x70
  442448:	b.eq	4426b4 <ferror@plt+0x3fde4>  // b.none
  44244c:	cmp	w1, #0x69
  442450:	b.ne	44272c <ferror@plt+0x3fe5c>  // b.any
  442454:	ldrb	w0, [x0, #1]
  442458:	cmp	w0, #0x6c
  44245c:	b.eq	4426e8 <ferror@plt+0x3fe18>  // b.none
  442460:	mov	x20, #0x0                   	// #0
  442464:	ldr	x23, [sp, #48]
  442468:	b	44204c <ferror@plt+0x3f77c>
  44246c:	mov	x20, #0x0                   	// #0
  442470:	b	44204c <ferror@plt+0x3f77c>
  442474:	mov	x3, #0x0                   	// #0
  442478:	mov	x2, x20
  44247c:	mov	w1, #0x36                  	// #54
  442480:	mov	x0, x19
  442484:	bl	43a218 <ferror@plt+0x37948>
  442488:	mov	x20, x0
  44248c:	b	44204c <ferror@plt+0x3f77c>
  442490:	ldr	x0, [x19, #24]
  442494:	ldrb	w1, [x0]
  442498:	mov	w23, #0x1                   	// #1
  44249c:	cmp	w1, #0x5f
  4424a0:	b.ne	442378 <ferror@plt+0x3faa8>  // b.any
  4424a4:	add	x0, x0, #0x1
  4424a8:	str	x0, [x19, #24]
  4424ac:	b	442368 <ferror@plt+0x3fa98>
  4424b0:	ldr	x23, [sp, #48]
  4424b4:	b	442778 <ferror@plt+0x3fea8>
  4424b8:	mov	x0, x19
  4424bc:	bl	443b9c <ferror@plt+0x412cc>
  4424c0:	mov	x3, x0
  4424c4:	b	442398 <ferror@plt+0x3fac8>
  4424c8:	mov	x2, x3
  4424cc:	mov	w1, #0x39                  	// #57
  4424d0:	mov	x0, x19
  4424d4:	bl	43a218 <ferror@plt+0x37948>
  4424d8:	mov	x3, x0
  4424dc:	ldr	x23, [sp, #48]
  4424e0:	b	4423a0 <ferror@plt+0x3fad0>
  4424e4:	cbz	x22, 4426f8 <ferror@plt+0x3fe28>
  4424e8:	str	x23, [sp, #48]
  4424ec:	mov	x0, x20
  4424f0:	bl	43a76c <ferror@plt+0x37e9c>
  4424f4:	cbnz	w0, 44259c <ferror@plt+0x3fccc>
  4424f8:	ldrb	w0, [x22]
  4424fc:	cmp	w0, #0x66
  442500:	b.eq	4425ac <ferror@plt+0x3fcdc>  // b.none
  442504:	mov	x0, x19
  442508:	bl	443c88 <ferror@plt+0x413b8>
  44250c:	mov	x23, x0
  442510:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  442514:	add	x1, x1, #0xda0
  442518:	mov	x0, x22
  44251c:	bl	402620 <strcmp@plt>
  442520:	cbz	w0, 4425bc <ferror@plt+0x3fcec>
  442524:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  442528:	add	x1, x1, #0xf78
  44252c:	mov	x0, x22
  442530:	bl	402620 <strcmp@plt>
  442534:	cbz	w0, 44254c <ferror@plt+0x3fc7c>
  442538:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  44253c:	add	x1, x1, #0xf80
  442540:	mov	x0, x22
  442544:	bl	402620 <strcmp@plt>
  442548:	cbnz	w0, 4425f4 <ferror@plt+0x3fd24>
  44254c:	mov	x0, x19
  442550:	bl	441994 <ferror@plt+0x3f0c4>
  442554:	mov	x22, x0
  442558:	ldr	x0, [x19, #24]
  44255c:	ldrb	w0, [x0]
  442560:	cmp	w0, #0x49
  442564:	b.eq	4425d0 <ferror@plt+0x3fd00>  // b.none
  442568:	mov	x3, x22
  44256c:	mov	x2, x23
  442570:	mov	w1, #0x39                  	// #57
  442574:	mov	x0, x19
  442578:	bl	43a218 <ferror@plt+0x37948>
  44257c:	mov	x3, x0
  442580:	mov	x2, x20
  442584:	mov	w1, #0x38                  	// #56
  442588:	mov	x0, x19
  44258c:	bl	43a218 <ferror@plt+0x37948>
  442590:	mov	x20, x0
  442594:	ldr	x23, [sp, #48]
  442598:	b	44204c <ferror@plt+0x3f77c>
  44259c:	mov	x0, x19
  4425a0:	bl	440d54 <ferror@plt+0x3e484>
  4425a4:	mov	x23, x0
  4425a8:	b	442510 <ferror@plt+0x3fc40>
  4425ac:	mov	x0, x19
  4425b0:	bl	4417e8 <ferror@plt+0x3ef18>
  4425b4:	mov	x23, x0
  4425b8:	b	442510 <ferror@plt+0x3fc40>
  4425bc:	mov	w1, #0x45                  	// #69
  4425c0:	mov	x0, x19
  4425c4:	bl	4427a0 <ferror@plt+0x3fed0>
  4425c8:	mov	x22, x0
  4425cc:	b	442568 <ferror@plt+0x3fc98>
  4425d0:	mov	x0, x19
  4425d4:	bl	443c4c <ferror@plt+0x4137c>
  4425d8:	mov	x3, x0
  4425dc:	mov	x2, x22
  4425e0:	mov	w1, #0x4                   	// #4
  4425e4:	mov	x0, x19
  4425e8:	bl	43a218 <ferror@plt+0x37948>
  4425ec:	mov	x22, x0
  4425f0:	b	442568 <ferror@plt+0x3fc98>
  4425f4:	mov	x0, x19
  4425f8:	bl	443c88 <ferror@plt+0x413b8>
  4425fc:	mov	x22, x0
  442600:	b	442568 <ferror@plt+0x3fc98>
  442604:	mov	x0, x19
  442608:	bl	443c88 <ferror@plt+0x413b8>
  44260c:	mov	x22, x0
  442610:	mov	x0, x19
  442614:	bl	443c88 <ferror@plt+0x413b8>
  442618:	mov	x23, x0
  44261c:	mov	x0, x19
  442620:	bl	443c88 <ferror@plt+0x413b8>
  442624:	mov	x3, x0
  442628:	cbz	x0, 442708 <ferror@plt+0x3fe38>
  44262c:	mov	x2, x23
  442630:	mov	w1, #0x3c                  	// #60
  442634:	mov	x0, x19
  442638:	bl	43a218 <ferror@plt+0x37948>
  44263c:	mov	x3, x0
  442640:	mov	x2, x22
  442644:	mov	w1, #0x3b                  	// #59
  442648:	mov	x0, x19
  44264c:	bl	43a218 <ferror@plt+0x37948>
  442650:	mov	x3, x0
  442654:	mov	x2, x20
  442658:	mov	w1, #0x3a                  	// #58
  44265c:	mov	x0, x19
  442660:	bl	43a218 <ferror@plt+0x37948>
  442664:	mov	x20, x0
  442668:	ldr	x23, [sp, #48]
  44266c:	b	44204c <ferror@plt+0x3f77c>
  442670:	mov	x0, x19
  442674:	bl	4417e8 <ferror@plt+0x3ef18>
  442678:	mov	x22, x0
  44267c:	mov	x0, x19
  442680:	bl	443c88 <ferror@plt+0x413b8>
  442684:	mov	x23, x0
  442688:	mov	x0, x19
  44268c:	bl	443c88 <ferror@plt+0x413b8>
  442690:	mov	x3, x0
  442694:	cbnz	x0, 44262c <ferror@plt+0x3fd5c>
  442698:	mov	x20, x0
  44269c:	ldr	x23, [sp, #48]
  4426a0:	b	44204c <ferror@plt+0x3f77c>
  4426a4:	add	x0, x0, #0x1
  4426a8:	str	x0, [x19, #24]
  4426ac:	mov	x3, #0x0                   	// #0
  4426b0:	b	44262c <ferror@plt+0x3fd5c>
  4426b4:	ldrb	w1, [x0, #1]
  4426b8:	cmp	w1, #0x69
  4426bc:	b.eq	4426cc <ferror@plt+0x3fdfc>  // b.none
  4426c0:	mov	x20, #0x0                   	// #0
  4426c4:	ldr	x23, [sp, #48]
  4426c8:	b	44204c <ferror@plt+0x3f77c>
  4426cc:	add	x0, x0, #0x2
  4426d0:	str	x0, [x19, #24]
  4426d4:	mov	w1, #0x45                  	// #69
  4426d8:	mov	x0, x19
  4426dc:	bl	4427a0 <ferror@plt+0x3fed0>
  4426e0:	mov	x3, x0
  4426e4:	b	44262c <ferror@plt+0x3fd5c>
  4426e8:	mov	x0, x19
  4426ec:	bl	443c88 <ferror@plt+0x413b8>
  4426f0:	mov	x3, x0
  4426f4:	b	44262c <ferror@plt+0x3fd5c>
  4426f8:	mov	x20, x22
  4426fc:	b	44204c <ferror@plt+0x3f77c>
  442700:	mov	x20, x22
  442704:	b	44204c <ferror@plt+0x3f77c>
  442708:	mov	x20, x0
  44270c:	ldr	x23, [sp, #48]
  442710:	b	44204c <ferror@plt+0x3f77c>
  442714:	mov	x20, #0x0                   	// #0
  442718:	ldr	x23, [sp, #48]
  44271c:	b	44204c <ferror@plt+0x3f77c>
  442720:	mov	x20, #0x0                   	// #0
  442724:	ldr	x23, [sp, #48]
  442728:	b	44204c <ferror@plt+0x3f77c>
  44272c:	mov	x20, #0x0                   	// #0
  442730:	ldr	x23, [sp, #48]
  442734:	b	44204c <ferror@plt+0x3f77c>
  442738:	ldr	w0, [x20]
  44273c:	cmp	w0, #0x34
  442740:	b.eq	442768 <ferror@plt+0x3fe98>  // b.none
  442744:	str	x23, [sp, #48]
  442748:	mov	w23, #0x0                   	// #0
  44274c:	b	44238c <ferror@plt+0x3fabc>
  442750:	ldr	x0, [x19, #24]
  442754:	ldrb	w1, [x0]
  442758:	cmp	w1, #0x5f
  44275c:	b.eq	4424b0 <ferror@plt+0x3fbe0>  // b.none
  442760:	mov	w23, #0x0                   	// #0
  442764:	b	442378 <ferror@plt+0x3faa8>
  442768:	ldr	x0, [x19, #24]
  44276c:	ldrb	w1, [x0]
  442770:	cmp	w1, #0x5f
  442774:	b.ne	442794 <ferror@plt+0x3fec4>  // b.any
  442778:	add	x0, x0, #0x1
  44277c:	str	x0, [x19, #24]
  442780:	mov	w1, #0x45                  	// #69
  442784:	mov	x0, x19
  442788:	bl	4427a0 <ferror@plt+0x3fed0>
  44278c:	mov	x3, x0
  442790:	b	4423a0 <ferror@plt+0x3fad0>
  442794:	str	x23, [sp, #48]
  442798:	mov	w23, #0x0                   	// #0
  44279c:	b	44238c <ferror@plt+0x3fabc>
  4427a0:	stp	x29, x30, [sp, #-64]!
  4427a4:	mov	x29, sp
  4427a8:	stp	x19, x20, [sp, #16]
  4427ac:	stp	x21, x22, [sp, #32]
  4427b0:	mov	x19, x0
  4427b4:	and	w22, w1, #0xff
  4427b8:	str	xzr, [sp, #56]
  4427bc:	ldr	x0, [x0, #24]
  4427c0:	ldrb	w2, [x0]
  4427c4:	add	x20, sp, #0x38
  4427c8:	mov	w21, #0x2e                  	// #46
  4427cc:	cmp	w2, w1, uxtb
  4427d0:	b.eq	44282c <ferror@plt+0x3ff5c>  // b.none
  4427d4:	mov	x0, x19
  4427d8:	bl	441fd4 <ferror@plt+0x3f704>
  4427dc:	cbz	x0, 44281c <ferror@plt+0x3ff4c>
  4427e0:	mov	x3, #0x0                   	// #0
  4427e4:	mov	x2, x0
  4427e8:	mov	w1, w21
  4427ec:	mov	x0, x19
  4427f0:	bl	43a218 <ferror@plt+0x37948>
  4427f4:	str	x0, [x20]
  4427f8:	cbz	x0, 44281c <ferror@plt+0x3ff4c>
  4427fc:	add	x20, x0, #0x10
  442800:	ldr	x0, [x19, #24]
  442804:	ldrb	w1, [x0]
  442808:	cmp	w1, w22
  44280c:	b.ne	4427d4 <ferror@plt+0x3ff04>  // b.any
  442810:	add	x0, x0, #0x1
  442814:	str	x0, [x19, #24]
  442818:	ldr	x0, [sp, #56]
  44281c:	ldp	x19, x20, [sp, #16]
  442820:	ldp	x21, x22, [sp, #32]
  442824:	ldp	x29, x30, [sp], #64
  442828:	ret
  44282c:	add	x0, x0, #0x1
  442830:	str	x0, [x19, #24]
  442834:	mov	x3, #0x0                   	// #0
  442838:	mov	x2, #0x0                   	// #0
  44283c:	mov	w1, w21
  442840:	mov	x0, x19
  442844:	bl	43a218 <ferror@plt+0x37948>
  442848:	b	44281c <ferror@plt+0x3ff4c>
  44284c:	stp	x29, x30, [sp, #-112]!
  442850:	mov	x29, sp
  442854:	stp	x19, x20, [sp, #16]
  442858:	stp	x21, x22, [sp, #32]
  44285c:	stp	x23, x24, [sp, #48]
  442860:	stp	x25, x26, [sp, #64]
  442864:	stp	x27, x28, [sp, #80]
  442868:	mov	x19, x0
  44286c:	mov	x23, x1
  442870:	mov	w26, w2
  442874:	ldr	x0, [x0, #24]
  442878:	ldrb	w20, [x0]
  44287c:	cmp	w2, #0x0
  442880:	mov	w0, #0x1e                  	// #30
  442884:	mov	w1, #0x1b                  	// #27
  442888:	csel	w0, w0, w1, ne  // ne = any
  44288c:	mov	w25, #0x1d                  	// #29
  442890:	mov	w1, #0x1a                  	// #26
  442894:	csel	w25, w25, w1, ne  // ne = any
  442898:	mov	w24, #0x1c                  	// #28
  44289c:	mov	w1, #0x19                  	// #25
  4428a0:	csel	w24, w24, w1, ne  // ne = any
  4428a4:	mov	x21, x23
  4428a8:	mov	w28, #0x50                  	// #80
  4428ac:	mov	x22, #0x0                   	// #0
  4428b0:	mov	w27, #0x4f                  	// #79
  4428b4:	str	w0, [sp, #108]
  4428b8:	b	4428f4 <ferror@plt+0x40024>
  4428bc:	ldr	w0, [x19, #72]
  4428c0:	add	w0, w0, #0x9
  4428c4:	str	w0, [x19, #72]
  4428c8:	mov	w1, w24
  4428cc:	mov	x3, x22
  4428d0:	mov	x2, x22
  4428d4:	mov	x0, x19
  4428d8:	bl	43a218 <ferror@plt+0x37948>
  4428dc:	mov	x3, x0
  4428e0:	str	x0, [x21]
  4428e4:	cbz	x0, 442aa0 <ferror@plt+0x401d0>
  4428e8:	add	x21, x0, #0x8
  4428ec:	ldr	x0, [x19, #24]
  4428f0:	ldrb	w20, [x0]
  4428f4:	mov	x0, x19
  4428f8:	bl	43a5c0 <ferror@plt+0x37cf0>
  4428fc:	cbz	w0, 442a28 <ferror@plt+0x40158>
  442900:	ldr	x0, [x19, #24]
  442904:	add	x1, x0, #0x1
  442908:	str	x1, [x19, #24]
  44290c:	cmp	w20, #0x72
  442910:	b.eq	4428bc <ferror@plt+0x3ffec>  // b.none
  442914:	cmp	w20, #0x56
  442918:	b.eq	44299c <ferror@plt+0x400cc>  // b.none
  44291c:	cmp	w20, #0x4b
  442920:	b.eq	4429b4 <ferror@plt+0x400e4>  // b.none
  442924:	ldrb	w1, [x0, #1]
  442928:	cbz	w1, 442a9c <ferror@plt+0x401cc>
  44292c:	add	x1, x0, #0x2
  442930:	str	x1, [x19, #24]
  442934:	ldrb	w2, [x0, #1]
  442938:	cmp	w2, #0x78
  44293c:	b.eq	4429cc <ferror@plt+0x400fc>  // b.none
  442940:	and	w0, w2, #0xffffffdf
  442944:	and	w0, w0, #0xff
  442948:	cmp	w0, #0x4f
  44294c:	b.ne	4429e4 <ferror@plt+0x40114>  // b.any
  442950:	ldr	w0, [x19, #72]
  442954:	add	w0, w0, #0x9
  442958:	str	w0, [x19, #72]
  44295c:	mov	x3, x22
  442960:	mov	w1, w27
  442964:	cmp	w2, #0x4f
  442968:	b.ne	4428d0 <ferror@plt+0x40000>  // b.any
  44296c:	mov	x0, x19
  442970:	bl	441fd4 <ferror@plt+0x3f704>
  442974:	mov	x3, x0
  442978:	cbz	x0, 442aa0 <ferror@plt+0x401d0>
  44297c:	ldr	x0, [x19, #24]
  442980:	ldrb	w1, [x0]
  442984:	cmp	w1, #0x45
  442988:	b.ne	442ac0 <ferror@plt+0x401f0>  // b.any
  44298c:	add	x0, x0, #0x1
  442990:	str	x0, [x19, #24]
  442994:	mov	w1, w27
  442998:	b	4428d0 <ferror@plt+0x40000>
  44299c:	ldr	w0, [x19, #72]
  4429a0:	add	w0, w0, #0x9
  4429a4:	str	w0, [x19, #72]
  4429a8:	mov	w1, w25
  4429ac:	mov	x3, x22
  4429b0:	b	4428d0 <ferror@plt+0x40000>
  4429b4:	ldr	w0, [x19, #72]
  4429b8:	add	w0, w0, #0x6
  4429bc:	str	w0, [x19, #72]
  4429c0:	ldr	w1, [sp, #108]
  4429c4:	mov	x3, x22
  4429c8:	b	4428d0 <ferror@plt+0x40000>
  4429cc:	ldr	w0, [x19, #72]
  4429d0:	add	w0, w0, #0x11
  4429d4:	str	w0, [x19, #72]
  4429d8:	mov	x3, x22
  4429dc:	mov	w1, #0x4d                  	// #77
  4429e0:	b	4428d0 <ferror@plt+0x40000>
  4429e4:	cmp	w2, #0x77
  4429e8:	b.ne	442ac8 <ferror@plt+0x401f8>  // b.any
  4429ec:	ldr	w0, [x19, #72]
  4429f0:	add	w0, w0, #0x6
  4429f4:	str	w0, [x19, #72]
  4429f8:	mov	x0, x19
  4429fc:	bl	4416b4 <ferror@plt+0x3ede4>
  442a00:	mov	x3, x0
  442a04:	cbz	x0, 442aa0 <ferror@plt+0x401d0>
  442a08:	ldr	x0, [x19, #24]
  442a0c:	ldrb	w1, [x0]
  442a10:	cmp	w1, #0x45
  442a14:	b.ne	442ad0 <ferror@plt+0x40200>  // b.any
  442a18:	add	x0, x0, #0x1
  442a1c:	str	x0, [x19, #24]
  442a20:	mov	w1, w28
  442a24:	b	4428d0 <ferror@plt+0x40000>
  442a28:	cmp	w20, #0x46
  442a2c:	mov	x3, x21
  442a30:	ccmp	w26, #0x0, #0x0, eq  // eq = none
  442a34:	b.ne	442aa0 <ferror@plt+0x401d0>  // b.any
  442a38:	cmp	x21, x23
  442a3c:	b.eq	442ad8 <ferror@plt+0x40208>  // b.none
  442a40:	mov	w4, #0x1d                  	// #29
  442a44:	mov	w3, #0x1e                  	// #30
  442a48:	mov	w2, #0x1c                  	// #28
  442a4c:	b	442a64 <ferror@plt+0x40194>
  442a50:	str	w4, [x1]
  442a54:	ldr	x23, [x23]
  442a58:	add	x23, x23, #0x8
  442a5c:	cmp	x21, x23
  442a60:	b.eq	442a94 <ferror@plt+0x401c4>  // b.none
  442a64:	ldr	x1, [x23]
  442a68:	ldr	w0, [x1]
  442a6c:	cmp	w0, #0x1a
  442a70:	b.eq	442a50 <ferror@plt+0x40180>  // b.none
  442a74:	cmp	w0, #0x1b
  442a78:	b.eq	442a8c <ferror@plt+0x401bc>  // b.none
  442a7c:	cmp	w0, #0x19
  442a80:	b.ne	442a54 <ferror@plt+0x40184>  // b.any
  442a84:	str	w2, [x1]
  442a88:	b	442a54 <ferror@plt+0x40184>
  442a8c:	str	w3, [x1]
  442a90:	b	442a54 <ferror@plt+0x40184>
  442a94:	mov	x3, x23
  442a98:	b	442aa0 <ferror@plt+0x401d0>
  442a9c:	mov	x3, #0x0                   	// #0
  442aa0:	mov	x0, x3
  442aa4:	ldp	x19, x20, [sp, #16]
  442aa8:	ldp	x21, x22, [sp, #32]
  442aac:	ldp	x23, x24, [sp, #48]
  442ab0:	ldp	x25, x26, [sp, #64]
  442ab4:	ldp	x27, x28, [sp, #80]
  442ab8:	ldp	x29, x30, [sp], #112
  442abc:	ret
  442ac0:	mov	x3, #0x0                   	// #0
  442ac4:	b	442aa0 <ferror@plt+0x401d0>
  442ac8:	mov	x3, #0x0                   	// #0
  442acc:	b	442aa0 <ferror@plt+0x401d0>
  442ad0:	mov	x3, #0x0                   	// #0
  442ad4:	b	442aa0 <ferror@plt+0x401d0>
  442ad8:	mov	x3, x23
  442adc:	b	442aa0 <ferror@plt+0x401d0>
  442ae0:	stp	x29, x30, [sp, #-112]!
  442ae4:	mov	x29, sp
  442ae8:	stp	x19, x20, [sp, #16]
  442aec:	stp	x21, x22, [sp, #32]
  442af0:	mov	x19, x0
  442af4:	ldr	x1, [x0, #24]
  442af8:	ldrb	w0, [x1]
  442afc:	cmp	w0, #0x55
  442b00:	b.eq	442edc <ferror@plt+0x4060c>  // b.none
  442b04:	b.hi	442b68 <ferror@plt+0x40298>  // b.pmore
  442b08:	cmp	w0, #0x4e
  442b0c:	b.eq	442bfc <ferror@plt+0x4032c>  // b.none
  442b10:	cmp	w0, #0x53
  442b14:	b.ne	442f70 <ferror@plt+0x406a0>  // b.any
  442b18:	ldrb	w0, [x1, #1]
  442b1c:	cmp	w0, #0x74
  442b20:	b.eq	442efc <ferror@plt+0x4062c>  // b.none
  442b24:	mov	w1, #0x0                   	// #0
  442b28:	mov	x0, x19
  442b2c:	bl	440a4c <ferror@plt+0x3e17c>
  442b30:	mov	x22, x0
  442b34:	ldr	x0, [x19, #24]
  442b38:	ldrb	w0, [x0]
  442b3c:	cmp	w0, #0x49
  442b40:	b.ne	442ee8 <ferror@plt+0x40618>  // b.any
  442b44:	mov	x0, x19
  442b48:	bl	443c4c <ferror@plt+0x4137c>
  442b4c:	mov	x3, x0
  442b50:	mov	x2, x22
  442b54:	mov	w1, #0x4                   	// #4
  442b58:	mov	x0, x19
  442b5c:	bl	43a218 <ferror@plt+0x37948>
  442b60:	mov	x22, x0
  442b64:	b	442ee8 <ferror@plt+0x40618>
  442b68:	cmp	w0, #0x5a
  442b6c:	b.ne	442f70 <ferror@plt+0x406a0>  // b.any
  442b70:	add	x1, x1, #0x1
  442b74:	str	x1, [x19, #24]
  442b78:	mov	w1, #0x0                   	// #0
  442b7c:	mov	x0, x19
  442b80:	bl	443028 <ferror@plt+0x40758>
  442b84:	mov	x22, x0
  442b88:	cbz	x0, 442ee8 <ferror@plt+0x40618>
  442b8c:	ldr	x0, [x19, #24]
  442b90:	ldrb	w1, [x0]
  442b94:	cmp	w1, #0x45
  442b98:	b.ne	442fc0 <ferror@plt+0x406f0>  // b.any
  442b9c:	add	x1, x0, #0x1
  442ba0:	str	x1, [x19, #24]
  442ba4:	ldrb	w1, [x0, #1]
  442ba8:	cmp	w1, #0x73
  442bac:	b.eq	442e14 <ferror@plt+0x40544>  // b.none
  442bb0:	cmp	w1, #0x64
  442bb4:	b.eq	442e44 <ferror@plt+0x40574>  // b.none
  442bb8:	mov	x0, x19
  442bbc:	bl	442ae0 <ferror@plt+0x40210>
  442bc0:	mov	x3, x0
  442bc4:	cbz	x0, 442bd8 <ferror@plt+0x40308>
  442bc8:	ldr	w0, [x0]
  442bcc:	sub	w0, w0, #0x46
  442bd0:	tst	w0, #0xfffffffd
  442bd4:	b.ne	442e80 <ferror@plt+0x405b0>  // b.any
  442bd8:	ldr	w0, [x22]
  442bdc:	cmp	w0, #0x3
  442be0:	b.eq	442ec4 <ferror@plt+0x405f4>  // b.none
  442be4:	mov	x2, x22
  442be8:	mov	w1, #0x2                   	// #2
  442bec:	mov	x0, x19
  442bf0:	bl	43a218 <ferror@plt+0x37948>
  442bf4:	mov	x22, x0
  442bf8:	b	442ee8 <ferror@plt+0x40618>
  442bfc:	add	x1, x1, #0x1
  442c00:	str	x1, [x19, #24]
  442c04:	mov	w2, #0x1                   	// #1
  442c08:	add	x1, sp, #0x68
  442c0c:	mov	x0, x19
  442c10:	bl	44284c <ferror@plt+0x3ff7c>
  442c14:	mov	x22, x0
  442c18:	cbz	x0, 442ee8 <ferror@plt+0x40618>
  442c1c:	stp	x27, x28, [sp, #80]
  442c20:	mov	x1, #0x0                   	// #0
  442c24:	mov	x0, x19
  442c28:	bl	43a618 <ferror@plt+0x37d48>
  442c2c:	mov	x27, x0
  442c30:	ldr	x0, [x19, #24]
  442c34:	ldrb	w20, [x0]
  442c38:	cbz	w20, 442ff0 <ferror@plt+0x40720>
  442c3c:	stp	x23, x24, [sp, #48]
  442c40:	stp	x25, x26, [sp, #64]
  442c44:	mov	x23, #0x0                   	// #0
  442c48:	mov	w24, #0x1                   	// #1
  442c4c:	mov	w26, #0x55                  	// #85
  442c50:	mov	w25, #0x4c                  	// #76
  442c54:	mov	w28, #0x4                   	// #4
  442c58:	b	442cd0 <ferror@plt+0x40400>
  442c5c:	ldrb	w0, [x0, #1]
  442c60:	and	w0, w0, #0xffffffdf
  442c64:	and	w0, w0, #0xff
  442c68:	cmp	w0, #0x54
  442c6c:	b.ne	442d1c <ferror@plt+0x4044c>  // b.any
  442c70:	mov	x0, x19
  442c74:	bl	440d54 <ferror@plt+0x3e484>
  442c78:	mov	x21, x0
  442c7c:	mov	w1, w24
  442c80:	cbz	x23, 442ca0 <ferror@plt+0x403d0>
  442c84:	mov	x3, x21
  442c88:	mov	x2, x23
  442c8c:	mov	x0, x19
  442c90:	bl	43a218 <ferror@plt+0x37948>
  442c94:	mov	x21, x0
  442c98:	cmp	w20, #0x53
  442c9c:	b.eq	442cc0 <ferror@plt+0x403f0>  // b.none
  442ca0:	ldr	x0, [x19, #24]
  442ca4:	ldrb	w20, [x0]
  442ca8:	cmp	w20, #0x45
  442cac:	b.eq	442ccc <ferror@plt+0x403fc>  // b.none
  442cb0:	mov	x1, x21
  442cb4:	mov	x0, x19
  442cb8:	bl	43a84c <ferror@plt+0x37f7c>
  442cbc:	cbz	w0, 442dac <ferror@plt+0x404dc>
  442cc0:	ldr	x0, [x19, #24]
  442cc4:	ldrb	w20, [x0]
  442cc8:	cbz	w20, 442fe8 <ferror@plt+0x40718>
  442ccc:	mov	x23, x21
  442cd0:	cmp	w20, #0x44
  442cd4:	b.eq	442c5c <ferror@plt+0x4038c>  // b.none
  442cd8:	sub	w2, w20, #0x30
  442cdc:	and	w2, w2, #0xff
  442ce0:	sub	w1, w20, #0x61
  442ce4:	and	w1, w1, #0xff
  442ce8:	cmp	w2, #0x9
  442cec:	ccmp	w1, #0x19, #0x0, hi  // hi = pmore
  442cf0:	b.ls	442d04 <ferror@plt+0x40434>  // b.plast
  442cf4:	cmp	w20, #0x43
  442cf8:	ccmp	w20, w26, #0x4, ne  // ne = any
  442cfc:	ccmp	w20, w25, #0x4, ne  // ne = any
  442d00:	b.ne	442d2c <ferror@plt+0x4045c>  // b.any
  442d04:	mov	x0, x19
  442d08:	bl	441994 <ferror@plt+0x3f0c4>
  442d0c:	mov	x21, x0
  442d10:	mov	w1, w24
  442d14:	cbnz	x23, 442c84 <ferror@plt+0x403b4>
  442d18:	b	442c98 <ferror@plt+0x403c8>
  442d1c:	mov	x0, x19
  442d20:	bl	441994 <ferror@plt+0x3f0c4>
  442d24:	mov	x21, x0
  442d28:	b	442c7c <ferror@plt+0x403ac>
  442d2c:	cmp	w20, #0x53
  442d30:	b.eq	442d68 <ferror@plt+0x40498>  // b.none
  442d34:	cmp	w20, #0x49
  442d38:	b.eq	442d84 <ferror@plt+0x404b4>  // b.none
  442d3c:	cmp	w20, #0x54
  442d40:	b.eq	442d9c <ferror@plt+0x404cc>  // b.none
  442d44:	cmp	w20, #0x45
  442d48:	b.eq	442db8 <ferror@plt+0x404e8>  // b.none
  442d4c:	cmp	w20, #0x4d
  442d50:	ccmp	x23, #0x0, #0x4, eq  // eq = none
  442d54:	b.eq	44300c <ferror@plt+0x4073c>  // b.none
  442d58:	add	x0, x0, #0x1
  442d5c:	str	x0, [x19, #24]
  442d60:	mov	x21, x23
  442d64:	b	442cc0 <ferror@plt+0x403f0>
  442d68:	mov	w1, w24
  442d6c:	mov	x0, x19
  442d70:	bl	440a4c <ferror@plt+0x3e17c>
  442d74:	mov	x21, x0
  442d78:	mov	w1, w24
  442d7c:	cbnz	x23, 442c84 <ferror@plt+0x403b4>
  442d80:	b	442cc0 <ferror@plt+0x403f0>
  442d84:	cbz	x23, 443000 <ferror@plt+0x40730>
  442d88:	mov	x0, x19
  442d8c:	bl	443c4c <ferror@plt+0x4137c>
  442d90:	mov	x21, x0
  442d94:	mov	w1, w28
  442d98:	b	442c84 <ferror@plt+0x403b4>
  442d9c:	mov	x0, x19
  442da0:	bl	43a700 <ferror@plt+0x37e30>
  442da4:	mov	x21, x0
  442da8:	b	442c7c <ferror@plt+0x403ac>
  442dac:	ldp	x23, x24, [sp, #48]
  442db0:	ldp	x25, x26, [sp, #64]
  442db4:	b	442ff0 <ferror@plt+0x40720>
  442db8:	str	x23, [x22]
  442dbc:	cbz	x23, 442e00 <ferror@plt+0x40530>
  442dc0:	cbz	x27, 442dd0 <ferror@plt+0x40500>
  442dc4:	ldr	x0, [sp, #104]
  442dc8:	str	x0, [x27, #8]
  442dcc:	str	x27, [sp, #104]
  442dd0:	ldr	x0, [x19, #24]
  442dd4:	ldrb	w1, [x0]
  442dd8:	mov	x22, #0x0                   	// #0
  442ddc:	cmp	w1, #0x45
  442de0:	b.ne	443018 <ferror@plt+0x40748>  // b.any
  442de4:	add	x0, x0, #0x1
  442de8:	str	x0, [x19, #24]
  442dec:	ldr	x22, [sp, #104]
  442df0:	ldp	x23, x24, [sp, #48]
  442df4:	ldp	x25, x26, [sp, #64]
  442df8:	ldp	x27, x28, [sp, #80]
  442dfc:	b	442ee8 <ferror@plt+0x40618>
  442e00:	mov	x22, x23
  442e04:	ldp	x23, x24, [sp, #48]
  442e08:	ldp	x25, x26, [sp, #64]
  442e0c:	ldp	x27, x28, [sp, #80]
  442e10:	b	442ee8 <ferror@plt+0x40618>
  442e14:	add	x0, x0, #0x2
  442e18:	str	x0, [x19, #24]
  442e1c:	mov	x0, x19
  442e20:	bl	43a7ac <ferror@plt+0x37edc>
  442e24:	cbz	w0, 442fc8 <ferror@plt+0x406f8>
  442e28:	mov	w2, #0xe                   	// #14
  442e2c:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  442e30:	add	x1, x1, #0xf88
  442e34:	mov	x0, x19
  442e38:	bl	440884 <ferror@plt+0x3dfb4>
  442e3c:	mov	x3, x0
  442e40:	b	442bd8 <ferror@plt+0x40308>
  442e44:	add	x0, x0, #0x2
  442e48:	str	x0, [x19, #24]
  442e4c:	mov	x0, x19
  442e50:	bl	43a684 <ferror@plt+0x37db4>
  442e54:	mov	w20, w0
  442e58:	tbnz	w0, #31, 442fd0 <ferror@plt+0x40700>
  442e5c:	mov	x0, x19
  442e60:	bl	442ae0 <ferror@plt+0x40210>
  442e64:	mov	x21, x0
  442e68:	cbz	x0, 442e98 <ferror@plt+0x405c8>
  442e6c:	ldr	w0, [x0]
  442e70:	sub	w0, w0, #0x46
  442e74:	tst	w0, #0xfffffffd
  442e78:	b.eq	442e98 <ferror@plt+0x405c8>  // b.none
  442e7c:	b	442e88 <ferror@plt+0x405b8>
  442e80:	mov	x21, x3
  442e84:	mov	w20, #0xffffffff            	// #-1
  442e88:	mov	x0, x19
  442e8c:	bl	43a7ac <ferror@plt+0x37edc>
  442e90:	cbz	w0, 442fd8 <ferror@plt+0x40708>
  442e94:	tbnz	w20, #31, 442ebc <ferror@plt+0x405ec>
  442e98:	mov	x0, x19
  442e9c:	bl	43a1d8 <ferror@plt+0x37908>
  442ea0:	mov	x3, x0
  442ea4:	cbz	x0, 442bd8 <ferror@plt+0x40308>
  442ea8:	mov	w0, #0x47                  	// #71
  442eac:	str	w0, [x3]
  442eb0:	str	w20, [x3, #16]
  442eb4:	str	x21, [x3, #8]
  442eb8:	b	442bd8 <ferror@plt+0x40308>
  442ebc:	mov	x3, x21
  442ec0:	b	442bd8 <ferror@plt+0x40308>
  442ec4:	ldr	x0, [x22, #16]
  442ec8:	ldr	w1, [x0]
  442ecc:	cmp	w1, #0x29
  442ed0:	b.ne	442be4 <ferror@plt+0x40314>  // b.any
  442ed4:	str	xzr, [x0, #8]
  442ed8:	b	442be4 <ferror@plt+0x40314>
  442edc:	mov	x0, x19
  442ee0:	bl	441994 <ferror@plt+0x3f0c4>
  442ee4:	mov	x22, x0
  442ee8:	mov	x0, x22
  442eec:	ldp	x19, x20, [sp, #16]
  442ef0:	ldp	x21, x22, [sp, #32]
  442ef4:	ldp	x29, x30, [sp], #112
  442ef8:	ret
  442efc:	add	x1, x1, #0x2
  442f00:	str	x1, [x19, #24]
  442f04:	mov	w2, #0x3                   	// #3
  442f08:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  442f0c:	add	x1, x1, #0xf98
  442f10:	mov	x0, x19
  442f14:	bl	440884 <ferror@plt+0x3dfb4>
  442f18:	mov	x20, x0
  442f1c:	mov	x0, x19
  442f20:	bl	441994 <ferror@plt+0x3f0c4>
  442f24:	mov	x3, x0
  442f28:	mov	x2, x20
  442f2c:	mov	w1, #0x1                   	// #1
  442f30:	mov	x0, x19
  442f34:	bl	43a218 <ferror@plt+0x37948>
  442f38:	mov	x22, x0
  442f3c:	ldr	w0, [x19, #72]
  442f40:	add	w0, w0, #0x3
  442f44:	str	w0, [x19, #72]
  442f48:	ldr	x0, [x19, #24]
  442f4c:	ldrb	w0, [x0]
  442f50:	cmp	w0, #0x49
  442f54:	b.ne	442ee8 <ferror@plt+0x40618>  // b.any
  442f58:	mov	x1, x22
  442f5c:	mov	x0, x19
  442f60:	bl	43a84c <ferror@plt+0x37f7c>
  442f64:	cbnz	w0, 442b44 <ferror@plt+0x40274>
  442f68:	mov	x22, #0x0                   	// #0
  442f6c:	b	442ee8 <ferror@plt+0x40618>
  442f70:	mov	x0, x19
  442f74:	bl	441994 <ferror@plt+0x3f0c4>
  442f78:	mov	x22, x0
  442f7c:	ldr	x0, [x19, #24]
  442f80:	ldrb	w0, [x0]
  442f84:	cmp	w0, #0x49
  442f88:	b.ne	442ee8 <ferror@plt+0x40618>  // b.any
  442f8c:	mov	x1, x22
  442f90:	mov	x0, x19
  442f94:	bl	43a84c <ferror@plt+0x37f7c>
  442f98:	cbz	w0, 442fe0 <ferror@plt+0x40710>
  442f9c:	mov	x0, x19
  442fa0:	bl	443c4c <ferror@plt+0x4137c>
  442fa4:	mov	x3, x0
  442fa8:	mov	x2, x22
  442fac:	mov	w1, #0x4                   	// #4
  442fb0:	mov	x0, x19
  442fb4:	bl	43a218 <ferror@plt+0x37948>
  442fb8:	mov	x22, x0
  442fbc:	b	442ee8 <ferror@plt+0x40618>
  442fc0:	mov	x22, #0x0                   	// #0
  442fc4:	b	442ee8 <ferror@plt+0x40618>
  442fc8:	mov	x22, #0x0                   	// #0
  442fcc:	b	442ee8 <ferror@plt+0x40618>
  442fd0:	mov	x22, #0x0                   	// #0
  442fd4:	b	442ee8 <ferror@plt+0x40618>
  442fd8:	mov	x22, #0x0                   	// #0
  442fdc:	b	442ee8 <ferror@plt+0x40618>
  442fe0:	mov	x22, #0x0                   	// #0
  442fe4:	b	442ee8 <ferror@plt+0x40618>
  442fe8:	ldp	x23, x24, [sp, #48]
  442fec:	ldp	x25, x26, [sp, #64]
  442ff0:	str	xzr, [x22]
  442ff4:	mov	x22, #0x0                   	// #0
  442ff8:	ldp	x27, x28, [sp, #80]
  442ffc:	b	442ee8 <ferror@plt+0x40618>
  443000:	ldp	x23, x24, [sp, #48]
  443004:	ldp	x25, x26, [sp, #64]
  443008:	b	442ff0 <ferror@plt+0x40720>
  44300c:	ldp	x23, x24, [sp, #48]
  443010:	ldp	x25, x26, [sp, #64]
  443014:	b	442ff0 <ferror@plt+0x40720>
  443018:	ldp	x23, x24, [sp, #48]
  44301c:	ldp	x25, x26, [sp, #64]
  443020:	ldp	x27, x28, [sp, #80]
  443024:	b	442ee8 <ferror@plt+0x40618>
  443028:	stp	x29, x30, [sp, #-96]!
  44302c:	mov	x29, sp
  443030:	stp	x19, x20, [sp, #16]
  443034:	mov	x19, x0
  443038:	ldr	x0, [x0, #24]
  44303c:	ldrb	w2, [x0]
  443040:	cmp	w2, #0x47
  443044:	mov	w3, #0x54                  	// #84
  443048:	ccmp	w2, w3, #0x4, ne  // ne = any
  44304c:	b.ne	443670 <ferror@plt+0x40da0>  // b.any
  443050:	ldr	w2, [x19, #72]
  443054:	add	w1, w2, #0x14
  443058:	str	w1, [x19, #72]
  44305c:	ldrb	w1, [x0]
  443060:	cmp	w1, w3
  443064:	b.eq	443114 <ferror@plt+0x40844>  // b.none
  443068:	mov	x20, #0x0                   	// #0
  44306c:	cmp	w1, #0x47
  443070:	b.ne	4436ac <ferror@plt+0x40ddc>  // b.any
  443074:	add	x1, x0, #0x1
  443078:	str	x1, [x19, #24]
  44307c:	ldrb	w1, [x0, #1]
  443080:	cbz	w1, 443770 <ferror@plt+0x40ea0>
  443084:	add	x1, x0, #0x2
  443088:	str	x1, [x19, #24]
  44308c:	ldrb	w1, [x0, #1]
  443090:	cmp	w1, #0x54
  443094:	b.eq	4434d4 <ferror@plt+0x40c04>  // b.none
  443098:	cmp	w1, #0x54
  44309c:	b.ls	443444 <ferror@plt+0x40b74>  // b.plast
  4430a0:	cmp	w1, #0x56
  4430a4:	b.eq	443488 <ferror@plt+0x40bb8>  // b.none
  4430a8:	mov	x20, #0x0                   	// #0
  4430ac:	cmp	w1, #0x72
  4430b0:	b.ne	4436ac <ferror@plt+0x40ddc>  // b.any
  4430b4:	mov	x0, x19
  4430b8:	bl	43a400 <ferror@plt+0x37b30>
  4430bc:	cmp	w0, #0x1
  4430c0:	b.le	443778 <ferror@plt+0x40ea8>
  4430c4:	ldr	x1, [x19, #24]
  4430c8:	ldrb	w2, [x1]
  4430cc:	cbz	w2, 443780 <ferror@plt+0x40eb0>
  4430d0:	stp	x21, x22, [sp, #32]
  4430d4:	add	x21, x1, #0x1
  4430d8:	str	x21, [x19, #24]
  4430dc:	ldrb	w1, [x1]
  4430e0:	mov	x20, #0x0                   	// #0
  4430e4:	cmp	w1, #0x5f
  4430e8:	b.ne	4437e4 <ferror@plt+0x40f14>  // b.any
  4430ec:	stp	x23, x24, [sp, #48]
  4430f0:	stp	x25, x26, [sp, #64]
  4430f4:	stp	x27, x28, [sp, #80]
  4430f8:	sub	w22, w0, #0x1
  4430fc:	mov	x24, #0x0                   	// #0
  443100:	mov	w26, #0x41                  	// #65
  443104:	mov	w28, #0x2f                  	// #47
  443108:	mov	w27, #0x2e                  	// #46
  44310c:	mov	w25, #0x40                  	// #64
  443110:	b	4435c0 <ferror@plt+0x40cf0>
  443114:	add	x1, x0, #0x1
  443118:	str	x1, [x19, #24]
  44311c:	ldrb	w1, [x0, #1]
  443120:	mov	x20, #0x0                   	// #0
  443124:	cbz	w1, 4436ac <ferror@plt+0x40ddc>
  443128:	add	x1, x0, #0x2
  44312c:	str	x1, [x19, #24]
  443130:	ldrb	w0, [x0, #1]
  443134:	cmp	w0, #0x53
  443138:	b.eq	443300 <ferror@plt+0x40a30>  // b.none
  44313c:	b.ls	44319c <ferror@plt+0x408cc>  // b.plast
  443140:	cmp	w0, #0x63
  443144:	b.eq	443360 <ferror@plt+0x40a90>  // b.none
  443148:	b.ls	443244 <ferror@plt+0x40974>  // b.plast
  44314c:	cmp	w0, #0x68
  443150:	b.eq	443324 <ferror@plt+0x40a54>  // b.none
  443154:	mov	x20, #0x0                   	// #0
  443158:	cmp	w0, #0x76
  44315c:	b.ne	4436ac <ferror@plt+0x40ddc>  // b.any
  443160:	mov	w1, #0x76                  	// #118
  443164:	mov	x0, x19
  443168:	bl	43a514 <ferror@plt+0x37c44>
  44316c:	mov	x20, #0x0                   	// #0
  443170:	cbz	w0, 4436ac <ferror@plt+0x40ddc>
  443174:	mov	w1, #0x0                   	// #0
  443178:	mov	x0, x19
  44317c:	bl	443028 <ferror@plt+0x40758>
  443180:	mov	x3, #0x0                   	// #0
  443184:	mov	x2, x0
  443188:	mov	w1, #0x10                  	// #16
  44318c:	mov	x0, x19
  443190:	bl	43a218 <ferror@plt+0x37948>
  443194:	mov	x20, x0
  443198:	b	4436ac <ferror@plt+0x40ddc>
  44319c:	cmp	w0, #0x48
  4431a0:	b.eq	443420 <ferror@plt+0x40b50>  // b.none
  4431a4:	b.ls	4431e0 <ferror@plt+0x40910>  // b.plast
  4431a8:	cmp	w0, #0x49
  4431ac:	b.eq	4432dc <ferror@plt+0x40a0c>  // b.none
  4431b0:	mov	x20, #0x0                   	// #0
  4431b4:	cmp	w0, #0x4a
  4431b8:	b.ne	4436ac <ferror@plt+0x40ddc>  // b.any
  4431bc:	mov	x0, x19
  4431c0:	bl	440d54 <ferror@plt+0x3e484>
  4431c4:	mov	x3, #0x0                   	// #0
  4431c8:	mov	x2, x0
  4431cc:	mov	w1, #0x12                  	// #18
  4431d0:	mov	x0, x19
  4431d4:	bl	43a218 <ferror@plt+0x37948>
  4431d8:	mov	x20, x0
  4431dc:	b	4436ac <ferror@plt+0x40ddc>
  4431e0:	cmp	w0, #0x43
  4431e4:	b.eq	4433ac <ferror@plt+0x40adc>  // b.none
  4431e8:	cmp	w0, #0x46
  4431ec:	b.ne	443214 <ferror@plt+0x40944>  // b.any
  4431f0:	mov	x0, x19
  4431f4:	bl	440d54 <ferror@plt+0x3e484>
  4431f8:	mov	x3, #0x0                   	// #0
  4431fc:	mov	x2, x0
  443200:	mov	w1, #0xe                   	// #14
  443204:	mov	x0, x19
  443208:	bl	43a218 <ferror@plt+0x37948>
  44320c:	mov	x20, x0
  443210:	b	4436ac <ferror@plt+0x40ddc>
  443214:	mov	x20, #0x0                   	// #0
  443218:	cmp	w0, #0x41
  44321c:	b.ne	4436ac <ferror@plt+0x40ddc>  // b.any
  443220:	mov	x0, x19
  443224:	bl	443b00 <ferror@plt+0x41230>
  443228:	mov	x3, #0x0                   	// #0
  44322c:	mov	x2, x0
  443230:	mov	w1, #0x30                  	// #48
  443234:	mov	x0, x19
  443238:	bl	43a218 <ferror@plt+0x37948>
  44323c:	mov	x20, x0
  443240:	b	4436ac <ferror@plt+0x40ddc>
  443244:	cmp	w0, #0x56
  443248:	b.eq	4432b0 <ferror@plt+0x409e0>  // b.none
  44324c:	cmp	w0, #0x57
  443250:	b.ne	443278 <ferror@plt+0x409a8>  // b.any
  443254:	mov	x0, x19
  443258:	bl	442ae0 <ferror@plt+0x40210>
  44325c:	mov	x3, #0x0                   	// #0
  443260:	mov	x2, x0
  443264:	mov	w1, #0x15                  	// #21
  443268:	mov	x0, x19
  44326c:	bl	43a218 <ferror@plt+0x37948>
  443270:	mov	x20, x0
  443274:	b	4436ac <ferror@plt+0x40ddc>
  443278:	mov	x20, #0x0                   	// #0
  44327c:	cmp	w0, #0x54
  443280:	b.ne	4436ac <ferror@plt+0x40ddc>  // b.any
  443284:	add	w2, w2, #0xa
  443288:	str	w2, [x19, #72]
  44328c:	mov	x0, x19
  443290:	bl	440d54 <ferror@plt+0x3e484>
  443294:	mov	x3, #0x0                   	// #0
  443298:	mov	x2, x0
  44329c:	mov	w1, #0xa                   	// #10
  4432a0:	mov	x0, x19
  4432a4:	bl	43a218 <ferror@plt+0x37948>
  4432a8:	mov	x20, x0
  4432ac:	b	4436ac <ferror@plt+0x40ddc>
  4432b0:	add	w2, w2, #0xf
  4432b4:	str	w2, [x19, #72]
  4432b8:	mov	x0, x19
  4432bc:	bl	440d54 <ferror@plt+0x3e484>
  4432c0:	mov	x3, #0x0                   	// #0
  4432c4:	mov	x2, x0
  4432c8:	mov	w1, #0x9                   	// #9
  4432cc:	mov	x0, x19
  4432d0:	bl	43a218 <ferror@plt+0x37948>
  4432d4:	mov	x20, x0
  4432d8:	b	4436ac <ferror@plt+0x40ddc>
  4432dc:	mov	x0, x19
  4432e0:	bl	440d54 <ferror@plt+0x3e484>
  4432e4:	mov	x3, #0x0                   	// #0
  4432e8:	mov	x2, x0
  4432ec:	mov	w1, #0xc                   	// #12
  4432f0:	mov	x0, x19
  4432f4:	bl	43a218 <ferror@plt+0x37948>
  4432f8:	mov	x20, x0
  4432fc:	b	4436ac <ferror@plt+0x40ddc>
  443300:	mov	x0, x19
  443304:	bl	440d54 <ferror@plt+0x3e484>
  443308:	mov	x3, #0x0                   	// #0
  44330c:	mov	x2, x0
  443310:	mov	w1, #0xd                   	// #13
  443314:	mov	x0, x19
  443318:	bl	43a218 <ferror@plt+0x37948>
  44331c:	mov	x20, x0
  443320:	b	4436ac <ferror@plt+0x40ddc>
  443324:	mov	w1, #0x68                  	// #104
  443328:	mov	x0, x19
  44332c:	bl	43a514 <ferror@plt+0x37c44>
  443330:	mov	x20, #0x0                   	// #0
  443334:	cbz	w0, 4436ac <ferror@plt+0x40ddc>
  443338:	mov	w1, #0x0                   	// #0
  44333c:	mov	x0, x19
  443340:	bl	443028 <ferror@plt+0x40758>
  443344:	mov	x3, #0x0                   	// #0
  443348:	mov	x2, x0
  44334c:	mov	w1, #0xf                   	// #15
  443350:	mov	x0, x19
  443354:	bl	43a218 <ferror@plt+0x37948>
  443358:	mov	x20, x0
  44335c:	b	4436ac <ferror@plt+0x40ddc>
  443360:	mov	w1, #0x0                   	// #0
  443364:	mov	x0, x19
  443368:	bl	43a514 <ferror@plt+0x37c44>
  44336c:	mov	x20, #0x0                   	// #0
  443370:	cbz	w0, 4436ac <ferror@plt+0x40ddc>
  443374:	mov	w1, #0x0                   	// #0
  443378:	mov	x0, x19
  44337c:	bl	43a514 <ferror@plt+0x37c44>
  443380:	cbz	w0, 4436ac <ferror@plt+0x40ddc>
  443384:	mov	w1, #0x0                   	// #0
  443388:	mov	x0, x19
  44338c:	bl	443028 <ferror@plt+0x40758>
  443390:	mov	x3, #0x0                   	// #0
  443394:	mov	x2, x0
  443398:	mov	w1, #0x11                  	// #17
  44339c:	mov	x0, x19
  4433a0:	bl	43a218 <ferror@plt+0x37948>
  4433a4:	mov	x20, x0
  4433a8:	b	4436ac <ferror@plt+0x40ddc>
  4433ac:	stp	x21, x22, [sp, #32]
  4433b0:	mov	x0, x19
  4433b4:	bl	440d54 <ferror@plt+0x3e484>
  4433b8:	mov	x21, x0
  4433bc:	mov	x0, x19
  4433c0:	bl	43a400 <ferror@plt+0x37b30>
  4433c4:	tbnz	w0, #31, 443764 <ferror@plt+0x40e94>
  4433c8:	ldr	x0, [x19, #24]
  4433cc:	ldrb	w1, [x0]
  4433d0:	mov	x20, #0x0                   	// #0
  4433d4:	cmp	w1, #0x5f
  4433d8:	b.eq	4433e4 <ferror@plt+0x40b14>  // b.none
  4433dc:	ldp	x21, x22, [sp, #32]
  4433e0:	b	4436ac <ferror@plt+0x40ddc>
  4433e4:	add	x0, x0, #0x1
  4433e8:	str	x0, [x19, #24]
  4433ec:	mov	x0, x19
  4433f0:	bl	440d54 <ferror@plt+0x3e484>
  4433f4:	ldr	w1, [x19, #72]
  4433f8:	add	w1, w1, #0x5
  4433fc:	str	w1, [x19, #72]
  443400:	mov	x3, x21
  443404:	mov	x2, x0
  443408:	mov	w1, #0xb                   	// #11
  44340c:	mov	x0, x19
  443410:	bl	43a218 <ferror@plt+0x37948>
  443414:	mov	x20, x0
  443418:	ldp	x21, x22, [sp, #32]
  44341c:	b	4436ac <ferror@plt+0x40ddc>
  443420:	mov	x0, x19
  443424:	bl	442ae0 <ferror@plt+0x40210>
  443428:	mov	x3, #0x0                   	// #0
  44342c:	mov	x2, x0
  443430:	mov	w1, #0x14                  	// #20
  443434:	mov	x0, x19
  443438:	bl	43a218 <ferror@plt+0x37948>
  44343c:	mov	x20, x0
  443440:	b	4436ac <ferror@plt+0x40ddc>
  443444:	cmp	w1, #0x41
  443448:	b.eq	4434ac <ferror@plt+0x40bdc>  // b.none
  44344c:	mov	x20, #0x0                   	// #0
  443450:	cmp	w1, #0x52
  443454:	b.ne	4436ac <ferror@plt+0x40ddc>  // b.any
  443458:	mov	x0, x19
  44345c:	bl	442ae0 <ferror@plt+0x40210>
  443460:	mov	x20, x0
  443464:	mov	x0, x19
  443468:	bl	43a4d0 <ferror@plt+0x37c00>
  44346c:	mov	x3, x0
  443470:	mov	x2, x20
  443474:	mov	w1, #0x16                  	// #22
  443478:	mov	x0, x19
  44347c:	bl	43a218 <ferror@plt+0x37948>
  443480:	mov	x20, x0
  443484:	b	4436ac <ferror@plt+0x40ddc>
  443488:	mov	x0, x19
  44348c:	bl	442ae0 <ferror@plt+0x40210>
  443490:	mov	x3, #0x0                   	// #0
  443494:	mov	x2, x0
  443498:	mov	w1, #0x13                  	// #19
  44349c:	mov	x0, x19
  4434a0:	bl	43a218 <ferror@plt+0x37948>
  4434a4:	mov	x20, x0
  4434a8:	b	4436ac <ferror@plt+0x40ddc>
  4434ac:	mov	w1, #0x0                   	// #0
  4434b0:	mov	x0, x19
  4434b4:	bl	443028 <ferror@plt+0x40758>
  4434b8:	mov	x3, #0x0                   	// #0
  4434bc:	mov	x2, x0
  4434c0:	mov	w1, #0x17                  	// #23
  4434c4:	mov	x0, x19
  4434c8:	bl	43a218 <ferror@plt+0x37948>
  4434cc:	mov	x20, x0
  4434d0:	b	4436ac <ferror@plt+0x40ddc>
  4434d4:	ldrb	w1, [x0, #2]
  4434d8:	cbz	w1, 4434f0 <ferror@plt+0x40c20>
  4434dc:	add	x1, x0, #0x3
  4434e0:	str	x1, [x19, #24]
  4434e4:	ldrb	w0, [x0, #2]
  4434e8:	cmp	w0, #0x6e
  4434ec:	b.eq	443518 <ferror@plt+0x40c48>  // b.none
  4434f0:	mov	w1, #0x0                   	// #0
  4434f4:	mov	x0, x19
  4434f8:	bl	443028 <ferror@plt+0x40758>
  4434fc:	mov	x3, #0x0                   	// #0
  443500:	mov	x2, x0
  443504:	mov	w1, #0x49                  	// #73
  443508:	mov	x0, x19
  44350c:	bl	43a218 <ferror@plt+0x37948>
  443510:	mov	x20, x0
  443514:	b	4436ac <ferror@plt+0x40ddc>
  443518:	mov	w1, #0x0                   	// #0
  44351c:	mov	x0, x19
  443520:	bl	443028 <ferror@plt+0x40758>
  443524:	mov	x3, #0x0                   	// #0
  443528:	mov	x2, x0
  44352c:	mov	w1, #0x4a                  	// #74
  443530:	mov	x0, x19
  443534:	bl	43a218 <ferror@plt+0x37948>
  443538:	mov	x20, x0
  44353c:	b	4436ac <ferror@plt+0x40ddc>
  443540:	mov	x0, #0x1                   	// #1
  443544:	mov	w23, #0x0                   	// #0
  443548:	cmp	w22, #0x0
  44354c:	b.le	443570 <ferror@plt+0x40ca0>
  443550:	mov	w23, w0
  443554:	cmp	w22, w0
  443558:	b.le	443570 <ferror@plt+0x40ca0>
  44355c:	ldrb	w1, [x21, x0]
  443560:	add	x0, x0, #0x1
  443564:	cmp	w1, #0x24
  443568:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  44356c:	b.ne	443550 <ferror@plt+0x40c80>  // b.any
  443570:	mov	w2, w23
  443574:	mov	x1, x21
  443578:	mov	x0, x19
  44357c:	bl	440884 <ferror@plt+0x3dfb4>
  443580:	mov	x20, x0
  443584:	ldr	x21, [x19, #24]
  443588:	add	x21, x21, w23, sxtw
  44358c:	str	x21, [x19, #24]
  443590:	sub	w22, w22, w23
  443594:	cbz	x0, 4437ec <ferror@plt+0x40f1c>
  443598:	cbz	x24, 44363c <ferror@plt+0x40d6c>
  44359c:	mov	x3, x20
  4435a0:	mov	x2, x24
  4435a4:	mov	w1, w25
  4435a8:	mov	x0, x19
  4435ac:	bl	43a218 <ferror@plt+0x37948>
  4435b0:	mov	x24, x0
  4435b4:	cbz	x0, 4437a0 <ferror@plt+0x40ed0>
  4435b8:	cmp	w22, #0x0
  4435bc:	b.le	443644 <ferror@plt+0x40d74>
  4435c0:	ldrb	w0, [x21]
  4435c4:	cbz	w0, 443788 <ferror@plt+0x40eb8>
  4435c8:	cmp	w0, #0x24
  4435cc:	b.ne	443540 <ferror@plt+0x40c70>  // b.any
  4435d0:	ldrb	w21, [x21, #1]
  4435d4:	cmp	w21, #0x53
  4435d8:	b.eq	443604 <ferror@plt+0x40d34>  // b.none
  4435dc:	cmp	w21, #0x5f
  4435e0:	b.eq	44360c <ferror@plt+0x40d3c>  // b.none
  4435e4:	cmp	w21, #0x24
  4435e8:	b.eq	443610 <ferror@plt+0x40d40>  // b.none
  4435ec:	mov	x20, #0x0                   	// #0
  4435f0:	ldp	x21, x22, [sp, #32]
  4435f4:	ldp	x23, x24, [sp, #48]
  4435f8:	ldp	x25, x26, [sp, #64]
  4435fc:	ldp	x27, x28, [sp, #80]
  443600:	b	4436ac <ferror@plt+0x40ddc>
  443604:	mov	w21, w28
  443608:	b	443610 <ferror@plt+0x40d40>
  44360c:	mov	w21, w27
  443610:	mov	x0, x19
  443614:	bl	43a1d8 <ferror@plt+0x37908>
  443618:	mov	x20, x0
  44361c:	cbz	x0, 4437c4 <ferror@plt+0x40ef4>
  443620:	str	w26, [x0]
  443624:	str	w21, [x0, #8]
  443628:	ldr	x21, [x19, #24]
  44362c:	add	x21, x21, #0x2
  443630:	str	x21, [x19, #24]
  443634:	sub	w22, w22, #0x2
  443638:	b	443598 <ferror@plt+0x40cc8>
  44363c:	mov	x24, x20
  443640:	b	4435b8 <ferror@plt+0x40ce8>
  443644:	mov	x3, #0x0                   	// #0
  443648:	mov	x2, x24
  44364c:	mov	w1, #0x3f                  	// #63
  443650:	mov	x0, x19
  443654:	bl	43a218 <ferror@plt+0x37948>
  443658:	mov	x20, x0
  44365c:	ldp	x21, x22, [sp, #32]
  443660:	ldp	x23, x24, [sp, #48]
  443664:	ldp	x25, x26, [sp, #64]
  443668:	ldp	x27, x28, [sp, #80]
  44366c:	b	4436ac <ferror@plt+0x40ddc>
  443670:	stp	x21, x22, [sp, #32]
  443674:	mov	w21, w1
  443678:	mov	x0, x19
  44367c:	bl	442ae0 <ferror@plt+0x40210>
  443680:	mov	x20, x0
  443684:	cbz	x0, 443800 <ferror@plt+0x40f30>
  443688:	cbz	w21, 443694 <ferror@plt+0x40dc4>
  44368c:	ldr	w0, [x19, #16]
  443690:	tbz	w0, #0, 4436bc <ferror@plt+0x40dec>
  443694:	ldr	x0, [x19, #24]
  443698:	ldrb	w0, [x0]
  44369c:	cmp	w0, #0x45
  4436a0:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  4436a4:	b.ne	443708 <ferror@plt+0x40e38>  // b.any
  4436a8:	ldp	x21, x22, [sp, #32]
  4436ac:	mov	x0, x20
  4436b0:	ldp	x19, x20, [sp, #16]
  4436b4:	ldp	x29, x30, [sp], #96
  4436b8:	ret
  4436bc:	ldr	w19, [x20]
  4436c0:	mov	w0, w19
  4436c4:	bl	43a1a8 <ferror@plt+0x378d8>
  4436c8:	cbz	w0, 4436d4 <ferror@plt+0x40e04>
  4436cc:	ldr	x20, [x20, #8]
  4436d0:	b	4436bc <ferror@plt+0x40dec>
  4436d4:	cmp	w19, #0x2
  4436d8:	b.eq	4436e4 <ferror@plt+0x40e14>  // b.none
  4436dc:	ldp	x21, x22, [sp, #32]
  4436e0:	b	4436ac <ferror@plt+0x40ddc>
  4436e4:	ldr	x19, [x20, #16]
  4436e8:	ldr	w0, [x19]
  4436ec:	bl	43a1a8 <ferror@plt+0x378d8>
  4436f0:	cbz	w0, 443700 <ferror@plt+0x40e30>
  4436f4:	ldr	x0, [x19, #8]
  4436f8:	str	x0, [x20, #16]
  4436fc:	b	4436e4 <ferror@plt+0x40e14>
  443700:	ldp	x21, x22, [sp, #32]
  443704:	b	4436ac <ferror@plt+0x40ddc>
  443708:	mov	x0, x20
  44370c:	bl	43a368 <ferror@plt+0x37a98>
  443710:	mov	w1, w0
  443714:	mov	x0, x19
  443718:	bl	441e8c <ferror@plt+0x3f5bc>
  44371c:	mov	x3, x0
  443720:	cbz	x0, 4437b8 <ferror@plt+0x40ee8>
  443724:	cbnz	w21, 443734 <ferror@plt+0x40e64>
  443728:	ldr	w0, [x20]
  44372c:	cmp	w0, #0x2
  443730:	b.eq	443750 <ferror@plt+0x40e80>  // b.none
  443734:	mov	x2, x20
  443738:	mov	w1, #0x3                   	// #3
  44373c:	mov	x0, x19
  443740:	bl	43a218 <ferror@plt+0x37948>
  443744:	mov	x20, x0
  443748:	ldp	x21, x22, [sp, #32]
  44374c:	b	4436ac <ferror@plt+0x40ddc>
  443750:	ldr	w0, [x3]
  443754:	cmp	w0, #0x29
  443758:	b.ne	443734 <ferror@plt+0x40e64>  // b.any
  44375c:	str	xzr, [x3, #8]
  443760:	b	443734 <ferror@plt+0x40e64>
  443764:	mov	x20, #0x0                   	// #0
  443768:	ldp	x21, x22, [sp, #32]
  44376c:	b	4436ac <ferror@plt+0x40ddc>
  443770:	mov	x20, #0x0                   	// #0
  443774:	b	4436ac <ferror@plt+0x40ddc>
  443778:	mov	x20, #0x0                   	// #0
  44377c:	b	4436ac <ferror@plt+0x40ddc>
  443780:	mov	x20, #0x0                   	// #0
  443784:	b	4436ac <ferror@plt+0x40ddc>
  443788:	mov	x20, #0x0                   	// #0
  44378c:	ldp	x21, x22, [sp, #32]
  443790:	ldp	x23, x24, [sp, #48]
  443794:	ldp	x25, x26, [sp, #64]
  443798:	ldp	x27, x28, [sp, #80]
  44379c:	b	4436ac <ferror@plt+0x40ddc>
  4437a0:	mov	x20, x0
  4437a4:	ldp	x21, x22, [sp, #32]
  4437a8:	ldp	x23, x24, [sp, #48]
  4437ac:	ldp	x25, x26, [sp, #64]
  4437b0:	ldp	x27, x28, [sp, #80]
  4437b4:	b	4436ac <ferror@plt+0x40ddc>
  4437b8:	mov	x20, x0
  4437bc:	ldp	x21, x22, [sp, #32]
  4437c0:	b	4436ac <ferror@plt+0x40ddc>
  4437c4:	ldr	x0, [x19, #24]
  4437c8:	add	x0, x0, #0x2
  4437cc:	str	x0, [x19, #24]
  4437d0:	ldp	x21, x22, [sp, #32]
  4437d4:	ldp	x23, x24, [sp, #48]
  4437d8:	ldp	x25, x26, [sp, #64]
  4437dc:	ldp	x27, x28, [sp, #80]
  4437e0:	b	4436ac <ferror@plt+0x40ddc>
  4437e4:	ldp	x21, x22, [sp, #32]
  4437e8:	b	4436ac <ferror@plt+0x40ddc>
  4437ec:	ldp	x21, x22, [sp, #32]
  4437f0:	ldp	x23, x24, [sp, #48]
  4437f4:	ldp	x25, x26, [sp, #64]
  4437f8:	ldp	x27, x28, [sp, #80]
  4437fc:	b	4436ac <ferror@plt+0x40ddc>
  443800:	ldp	x21, x22, [sp, #32]
  443804:	b	4436ac <ferror@plt+0x40ddc>
  443808:	stp	x29, x30, [sp, #-48]!
  44380c:	mov	x29, sp
  443810:	stp	x19, x20, [sp, #16]
  443814:	str	x21, [sp, #32]
  443818:	mov	x19, x0
  44381c:	mov	w21, w1
  443820:	ldr	x0, [x0, #24]
  443824:	ldrb	w1, [x0]
  443828:	cmp	w1, #0x5f
  44382c:	b.eq	443884 <ferror@plt+0x40fb4>  // b.none
  443830:	cbnz	w21, 443998 <ferror@plt+0x410c8>
  443834:	ldr	x0, [x19, #24]
  443838:	ldrb	w1, [x0]
  44383c:	mov	x20, #0x0                   	// #0
  443840:	cmp	w1, #0x5a
  443844:	b.ne	44399c <ferror@plt+0x410cc>  // b.any
  443848:	add	x0, x0, #0x1
  44384c:	str	x0, [x19, #24]
  443850:	mov	w1, w21
  443854:	mov	x0, x19
  443858:	bl	443028 <ferror@plt+0x40758>
  44385c:	mov	x20, x0
  443860:	cbz	w21, 44399c <ferror@plt+0x410cc>
  443864:	ldr	w0, [x19, #16]
  443868:	tbz	w0, #0, 44399c <ferror@plt+0x410cc>
  44386c:	ldr	x1, [x19, #24]
  443870:	ldrb	w0, [x1]
  443874:	mov	w21, #0x4e                  	// #78
  443878:	cmp	w0, #0x2e
  44387c:	b.eq	443958 <ferror@plt+0x41088>  // b.none
  443880:	b	44399c <ferror@plt+0x410cc>
  443884:	add	x0, x0, #0x1
  443888:	str	x0, [x19, #24]
  44388c:	b	443834 <ferror@plt+0x40f64>
  443890:	add	x3, x1, #0x2
  443894:	ldrb	w2, [x1, #2]
  443898:	sub	w0, w2, #0x61
  44389c:	and	w0, w0, #0xff
  4438a0:	cmp	w2, #0x5f
  4438a4:	ccmp	w0, #0x19, #0x0, ne  // ne = any
  4438a8:	b.hi	443984 <ferror@plt+0x410b4>  // b.pmore
  4438ac:	ldrb	w2, [x3, #1]!
  4438b0:	sub	w0, w2, #0x61
  4438b4:	and	w0, w0, #0xff
  4438b8:	cmp	w2, #0x5f
  4438bc:	ccmp	w0, #0x19, #0x0, ne  // ne = any
  4438c0:	b.ls	4438ac <ferror@plt+0x40fdc>  // b.plast
  4438c4:	b	443984 <ferror@plt+0x410b4>
  4438c8:	ldrb	w0, [x2, #1]!
  4438cc:	sub	w0, w0, #0x30
  4438d0:	and	w0, w0, #0xff
  4438d4:	cmp	w0, #0x9
  4438d8:	b.ls	4438c8 <ferror@plt+0x40ff8>  // b.plast
  4438dc:	ldrb	w0, [x2]
  4438e0:	cmp	w0, #0x2e
  4438e4:	b.ne	443920 <ferror@plt+0x41050>  // b.any
  4438e8:	mov	x3, x2
  4438ec:	ldrb	w0, [x3, #1]
  4438f0:	sub	w0, w0, #0x30
  4438f4:	and	w0, w0, #0xff
  4438f8:	cmp	w0, #0x9
  4438fc:	b.hi	44391c <ferror@plt+0x4104c>  // b.pmore
  443900:	add	x2, x3, #0x2
  443904:	ldrb	w0, [x3, #2]
  443908:	sub	w0, w0, #0x30
  44390c:	and	w0, w0, #0xff
  443910:	cmp	w0, #0x9
  443914:	b.ls	4438c8 <ferror@plt+0x40ff8>  // b.plast
  443918:	b	4438dc <ferror@plt+0x4100c>
  44391c:	mov	x2, x3
  443920:	str	x2, [x19, #24]
  443924:	sub	w2, w2, w1
  443928:	mov	x0, x19
  44392c:	bl	440884 <ferror@plt+0x3dfb4>
  443930:	mov	x3, x0
  443934:	mov	x2, x20
  443938:	mov	w1, w21
  44393c:	mov	x0, x19
  443940:	bl	43a218 <ferror@plt+0x37948>
  443944:	mov	x20, x0
  443948:	ldr	x1, [x19, #24]
  44394c:	ldrb	w0, [x1]
  443950:	cmp	w0, #0x2e
  443954:	b.ne	44399c <ferror@plt+0x410cc>  // b.any
  443958:	ldrb	w0, [x1, #1]
  44395c:	sub	w2, w0, #0x61
  443960:	and	w2, w2, #0xff
  443964:	cmp	w0, #0x5f
  443968:	ccmp	w2, #0x19, #0x0, ne  // ne = any
  44396c:	b.ls	443890 <ferror@plt+0x40fc0>  // b.plast
  443970:	sub	w0, w0, #0x30
  443974:	and	w0, w0, #0xff
  443978:	cmp	w0, #0x9
  44397c:	b.hi	44399c <ferror@plt+0x410cc>  // b.pmore
  443980:	mov	x3, x1
  443984:	ldrb	w0, [x3]
  443988:	mov	x2, x3
  44398c:	cmp	w0, #0x2e
  443990:	b.eq	4438ec <ferror@plt+0x4101c>  // b.none
  443994:	b	443920 <ferror@plt+0x41050>
  443998:	mov	x20, #0x0                   	// #0
  44399c:	mov	x0, x20
  4439a0:	ldp	x19, x20, [sp, #16]
  4439a4:	ldr	x21, [sp, #32]
  4439a8:	ldp	x29, x30, [sp], #48
  4439ac:	ret
  4439b0:	stp	x29, x30, [sp, #-48]!
  4439b4:	mov	x29, sp
  4439b8:	stp	x19, x20, [sp, #16]
  4439bc:	mov	x19, x0
  4439c0:	ldr	x0, [x0, #24]
  4439c4:	ldrb	w1, [x0]
  4439c8:	mov	x20, #0x0                   	// #0
  4439cc:	cmp	w1, #0x4c
  4439d0:	b.ne	443a18 <ferror@plt+0x41148>  // b.any
  4439d4:	add	x1, x0, #0x1
  4439d8:	str	x1, [x19, #24]
  4439dc:	ldrb	w0, [x0, #1]
  4439e0:	cmp	w0, #0x5f
  4439e4:	mov	w1, #0x5a                  	// #90
  4439e8:	ccmp	w0, w1, #0x4, ne  // ne = any
  4439ec:	b.ne	443a28 <ferror@plt+0x41158>  // b.any
  4439f0:	mov	w1, #0x0                   	// #0
  4439f4:	mov	x0, x19
  4439f8:	bl	443808 <ferror@plt+0x40f38>
  4439fc:	mov	x20, x0
  443a00:	ldr	x0, [x19, #24]
  443a04:	ldrb	w1, [x0]
  443a08:	cmp	w1, #0x45
  443a0c:	b.ne	443af8 <ferror@plt+0x41228>  // b.any
  443a10:	add	x0, x0, #0x1
  443a14:	str	x0, [x19, #24]
  443a18:	mov	x0, x20
  443a1c:	ldp	x19, x20, [sp, #16]
  443a20:	ldp	x29, x30, [sp], #48
  443a24:	ret
  443a28:	mov	x0, x19
  443a2c:	bl	440d54 <ferror@plt+0x3e484>
  443a30:	mov	x20, x0
  443a34:	cbz	x0, 443a18 <ferror@plt+0x41148>
  443a38:	str	x21, [sp, #32]
  443a3c:	ldr	w0, [x0]
  443a40:	cmp	w0, #0x27
  443a44:	b.eq	443ab4 <ferror@plt+0x411e4>  // b.none
  443a48:	ldr	x0, [x19, #24]
  443a4c:	ldrb	w1, [x0]
  443a50:	mov	w21, #0x3d                  	// #61
  443a54:	cmp	w1, #0x6e
  443a58:	b.eq	443ad4 <ferror@plt+0x41204>  // b.none
  443a5c:	ldr	x1, [x19, #24]
  443a60:	ldrb	w4, [x1]
  443a64:	cmp	w4, #0x45
  443a68:	b.eq	443ae4 <ferror@plt+0x41214>  // b.none
  443a6c:	add	x3, x1, #0x1
  443a70:	cbz	w4, 443aec <ferror@plt+0x4121c>
  443a74:	mov	x2, x3
  443a78:	str	x3, [x19, #24]
  443a7c:	ldrb	w4, [x3], #1
  443a80:	cmp	w4, #0x45
  443a84:	b.ne	443a70 <ferror@plt+0x411a0>  // b.any
  443a88:	sub	w2, w2, w1
  443a8c:	mov	x0, x19
  443a90:	bl	440884 <ferror@plt+0x3dfb4>
  443a94:	mov	x3, x0
  443a98:	mov	x2, x20
  443a9c:	mov	w1, w21
  443aa0:	mov	x0, x19
  443aa4:	bl	43a218 <ferror@plt+0x37948>
  443aa8:	mov	x20, x0
  443aac:	ldr	x21, [sp, #32]
  443ab0:	b	443a00 <ferror@plt+0x41130>
  443ab4:	ldr	x0, [x20, #8]
  443ab8:	ldr	w1, [x0, #28]
  443abc:	cbz	w1, 443a48 <ferror@plt+0x41178>
  443ac0:	ldr	w1, [x19, #72]
  443ac4:	ldr	w0, [x0, #8]
  443ac8:	sub	w0, w1, w0
  443acc:	str	w0, [x19, #72]
  443ad0:	b	443a48 <ferror@plt+0x41178>
  443ad4:	add	x0, x0, #0x1
  443ad8:	str	x0, [x19, #24]
  443adc:	mov	w21, #0x3e                  	// #62
  443ae0:	b	443a5c <ferror@plt+0x4118c>
  443ae4:	mov	x2, x1
  443ae8:	b	443a88 <ferror@plt+0x411b8>
  443aec:	mov	x20, #0x0                   	// #0
  443af0:	ldr	x21, [sp, #32]
  443af4:	b	443a18 <ferror@plt+0x41148>
  443af8:	mov	x20, #0x0                   	// #0
  443afc:	b	443a18 <ferror@plt+0x41148>
  443b00:	stp	x29, x30, [sp, #-32]!
  443b04:	mov	x29, sp
  443b08:	str	x19, [sp, #16]
  443b0c:	mov	x19, x0
  443b10:	ldr	x0, [x0, #24]
  443b14:	ldrb	w1, [x0]
  443b18:	cmp	w1, #0x4c
  443b1c:	b.eq	443b74 <ferror@plt+0x412a4>  // b.none
  443b20:	b.hi	443b40 <ferror@plt+0x41270>  // b.pmore
  443b24:	sub	w1, w1, #0x49
  443b28:	and	w1, w1, #0xff
  443b2c:	cmp	w1, #0x1
  443b30:	b.hi	443b88 <ferror@plt+0x412b8>  // b.pmore
  443b34:	mov	x0, x19
  443b38:	bl	443c4c <ferror@plt+0x4137c>
  443b3c:	b	443b7c <ferror@plt+0x412ac>
  443b40:	cmp	w1, #0x58
  443b44:	b.ne	443b88 <ferror@plt+0x412b8>  // b.any
  443b48:	add	x0, x0, #0x1
  443b4c:	str	x0, [x19, #24]
  443b50:	mov	x0, x19
  443b54:	bl	441fd4 <ferror@plt+0x3f704>
  443b58:	ldr	x1, [x19, #24]
  443b5c:	ldrb	w2, [x1]
  443b60:	cmp	w2, #0x45
  443b64:	b.ne	443b94 <ferror@plt+0x412c4>  // b.any
  443b68:	add	x1, x1, #0x1
  443b6c:	str	x1, [x19, #24]
  443b70:	b	443b7c <ferror@plt+0x412ac>
  443b74:	mov	x0, x19
  443b78:	bl	4439b0 <ferror@plt+0x410e0>
  443b7c:	ldr	x19, [sp, #16]
  443b80:	ldp	x29, x30, [sp], #32
  443b84:	ret
  443b88:	mov	x0, x19
  443b8c:	bl	440d54 <ferror@plt+0x3e484>
  443b90:	b	443b7c <ferror@plt+0x412ac>
  443b94:	mov	x0, #0x0                   	// #0
  443b98:	b	443b7c <ferror@plt+0x412ac>
  443b9c:	stp	x29, x30, [sp, #-64]!
  443ba0:	mov	x29, sp
  443ba4:	stp	x19, x20, [sp, #16]
  443ba8:	stp	x21, x22, [sp, #32]
  443bac:	mov	x19, x0
  443bb0:	ldr	x22, [x0, #64]
  443bb4:	ldr	x0, [x0, #24]
  443bb8:	ldrb	w1, [x0]
  443bbc:	cmp	w1, #0x45
  443bc0:	b.eq	443c2c <ferror@plt+0x4135c>  // b.none
  443bc4:	str	xzr, [sp, #56]
  443bc8:	add	x20, sp, #0x38
  443bcc:	mov	w21, #0x2f                  	// #47
  443bd0:	mov	x0, x19
  443bd4:	bl	443b00 <ferror@plt+0x41230>
  443bd8:	cbz	x0, 443c1c <ferror@plt+0x4134c>
  443bdc:	mov	x3, #0x0                   	// #0
  443be0:	mov	x2, x0
  443be4:	mov	w1, w21
  443be8:	mov	x0, x19
  443bec:	bl	43a218 <ferror@plt+0x37948>
  443bf0:	str	x0, [x20]
  443bf4:	cbz	x0, 443c1c <ferror@plt+0x4134c>
  443bf8:	add	x20, x0, #0x10
  443bfc:	ldr	x0, [x19, #24]
  443c00:	ldrb	w1, [x0]
  443c04:	cmp	w1, #0x45
  443c08:	b.ne	443bd0 <ferror@plt+0x41300>  // b.any
  443c0c:	add	x0, x0, #0x1
  443c10:	str	x0, [x19, #24]
  443c14:	str	x22, [x19, #64]
  443c18:	ldr	x0, [sp, #56]
  443c1c:	ldp	x19, x20, [sp, #16]
  443c20:	ldp	x21, x22, [sp, #32]
  443c24:	ldp	x29, x30, [sp], #64
  443c28:	ret
  443c2c:	add	x0, x0, #0x1
  443c30:	str	x0, [x19, #24]
  443c34:	mov	x3, #0x0                   	// #0
  443c38:	mov	x2, #0x0                   	// #0
  443c3c:	mov	w1, #0x2f                  	// #47
  443c40:	mov	x0, x19
  443c44:	bl	43a218 <ferror@plt+0x37948>
  443c48:	b	443c1c <ferror@plt+0x4134c>
  443c4c:	ldr	x2, [x0, #24]
  443c50:	ldrb	w1, [x2]
  443c54:	sub	w1, w1, #0x49
  443c58:	and	w1, w1, #0xff
  443c5c:	cmp	w1, #0x1
  443c60:	b.hi	443c80 <ferror@plt+0x413b0>  // b.pmore
  443c64:	stp	x29, x30, [sp, #-16]!
  443c68:	mov	x29, sp
  443c6c:	add	x2, x2, #0x1
  443c70:	str	x2, [x0, #24]
  443c74:	bl	443b9c <ferror@plt+0x412cc>
  443c78:	ldp	x29, x30, [sp], #16
  443c7c:	ret
  443c80:	mov	x0, #0x0                   	// #0
  443c84:	ret
  443c88:	stp	x29, x30, [sp, #-48]!
  443c8c:	mov	x29, sp
  443c90:	stp	x19, x20, [sp, #16]
  443c94:	mov	x19, x0
  443c98:	ldr	x0, [x0, #24]
  443c9c:	ldrb	w1, [x0]
  443ca0:	cmp	w1, #0x4c
  443ca4:	b.eq	443d00 <ferror@plt+0x41430>  // b.none
  443ca8:	cmp	w1, #0x54
  443cac:	b.eq	443d10 <ferror@plt+0x41440>  // b.none
  443cb0:	cmp	w1, #0x73
  443cb4:	b.eq	443d20 <ferror@plt+0x41450>  // b.none
  443cb8:	cmp	w1, #0x66
  443cbc:	b.eq	443e60 <ferror@plt+0x41590>  // b.none
  443cc0:	sub	w2, w1, #0x30
  443cc4:	and	w2, w2, #0xff
  443cc8:	cmp	w2, #0x9
  443ccc:	b.hi	443f14 <ferror@plt+0x41644>  // b.pmore
  443cd0:	mov	x0, x19
  443cd4:	bl	441994 <ferror@plt+0x3f0c4>
  443cd8:	mov	x20, x0
  443cdc:	cbz	x0, 443cf0 <ferror@plt+0x41420>
  443ce0:	ldr	x0, [x19, #24]
  443ce4:	ldrb	w0, [x0]
  443ce8:	cmp	w0, #0x49
  443cec:	b.eq	443f34 <ferror@plt+0x41664>  // b.none
  443cf0:	mov	x0, x20
  443cf4:	ldp	x19, x20, [sp, #16]
  443cf8:	ldp	x29, x30, [sp], #48
  443cfc:	ret
  443d00:	mov	x0, x19
  443d04:	bl	4439b0 <ferror@plt+0x410e0>
  443d08:	mov	x20, x0
  443d0c:	b	443cf0 <ferror@plt+0x41420>
  443d10:	mov	x0, x19
  443d14:	bl	43a700 <ferror@plt+0x37e30>
  443d18:	mov	x20, x0
  443d1c:	b	443cf0 <ferror@plt+0x41420>
  443d20:	ldrb	w2, [x0, #1]
  443d24:	cmp	w2, #0x72
  443d28:	b.eq	443da4 <ferror@plt+0x414d4>  // b.none
  443d2c:	cmp	w2, #0x70
  443d30:	b.eq	443e34 <ferror@plt+0x41564>  // b.none
  443d34:	cmp	w1, #0x69
  443d38:	mov	w2, #0x74                  	// #116
  443d3c:	ccmp	w1, w2, #0x4, ne  // ne = any
  443d40:	b.ne	443e6c <ferror@plt+0x4159c>  // b.any
  443d44:	ldrb	w2, [x0, #1]
  443d48:	cmp	w2, #0x6c
  443d4c:	b.ne	443e6c <ferror@plt+0x4159c>  // b.any
  443d50:	stp	x21, x22, [sp, #32]
  443d54:	add	x0, x0, #0x2
  443d58:	str	x0, [x19, #24]
  443d5c:	mov	x21, #0x0                   	// #0
  443d60:	cmp	w1, #0x74
  443d64:	b.eq	443f58 <ferror@plt+0x41688>  // b.none
  443d68:	ldr	x0, [x19, #24]
  443d6c:	ldrb	w0, [x0, #1]
  443d70:	mov	x20, #0x0                   	// #0
  443d74:	cbz	w0, 444464 <ferror@plt+0x41b94>
  443d78:	mov	w1, #0x45                  	// #69
  443d7c:	mov	x0, x19
  443d80:	bl	4427a0 <ferror@plt+0x3fed0>
  443d84:	mov	x3, x0
  443d88:	mov	x2, x21
  443d8c:	mov	w1, #0x31                  	// #49
  443d90:	mov	x0, x19
  443d94:	bl	43a218 <ferror@plt+0x37948>
  443d98:	mov	x20, x0
  443d9c:	ldp	x21, x22, [sp, #32]
  443da0:	b	443cf0 <ferror@plt+0x41420>
  443da4:	stp	x21, x22, [sp, #32]
  443da8:	add	x0, x0, #0x2
  443dac:	str	x0, [x19, #24]
  443db0:	mov	x0, x19
  443db4:	bl	440d54 <ferror@plt+0x3e484>
  443db8:	mov	x20, x0
  443dbc:	mov	x0, x19
  443dc0:	bl	441994 <ferror@plt+0x3f0c4>
  443dc4:	mov	x21, x0
  443dc8:	ldr	x0, [x19, #24]
  443dcc:	ldrb	w0, [x0]
  443dd0:	cmp	w0, #0x49
  443dd4:	b.eq	443df8 <ferror@plt+0x41528>  // b.none
  443dd8:	mov	x3, x21
  443ddc:	mov	x2, x20
  443de0:	mov	w1, #0x1                   	// #1
  443de4:	mov	x0, x19
  443de8:	bl	43a218 <ferror@plt+0x37948>
  443dec:	mov	x20, x0
  443df0:	ldp	x21, x22, [sp, #32]
  443df4:	b	443cf0 <ferror@plt+0x41420>
  443df8:	mov	x0, x19
  443dfc:	bl	443c4c <ferror@plt+0x4137c>
  443e00:	mov	x3, x0
  443e04:	mov	x2, x21
  443e08:	mov	w1, #0x4                   	// #4
  443e0c:	mov	x0, x19
  443e10:	bl	43a218 <ferror@plt+0x37948>
  443e14:	mov	x3, x0
  443e18:	mov	x2, x20
  443e1c:	mov	w1, #0x1                   	// #1
  443e20:	mov	x0, x19
  443e24:	bl	43a218 <ferror@plt+0x37948>
  443e28:	mov	x20, x0
  443e2c:	ldp	x21, x22, [sp, #32]
  443e30:	b	443cf0 <ferror@plt+0x41420>
  443e34:	add	x0, x0, #0x2
  443e38:	str	x0, [x19, #24]
  443e3c:	mov	x0, x19
  443e40:	bl	443c88 <ferror@plt+0x413b8>
  443e44:	mov	x3, #0x0                   	// #0
  443e48:	mov	x2, x0
  443e4c:	mov	w1, #0x4b                  	// #75
  443e50:	mov	x0, x19
  443e54:	bl	43a218 <ferror@plt+0x37948>
  443e58:	mov	x20, x0
  443e5c:	b	443cf0 <ferror@plt+0x41420>
  443e60:	ldrb	w1, [x0, #1]
  443e64:	cmp	w1, #0x70
  443e68:	b.eq	443ea8 <ferror@plt+0x415d8>  // b.none
  443e6c:	mov	x0, x19
  443e70:	bl	4417e8 <ferror@plt+0x3ef18>
  443e74:	mov	x20, x0
  443e78:	cbz	x0, 443cf0 <ferror@plt+0x41420>
  443e7c:	stp	x21, x22, [sp, #32]
  443e80:	ldr	w0, [x0]
  443e84:	cmp	w0, #0x32
  443e88:	b.eq	443f68 <ferror@plt+0x41698>  // b.none
  443e8c:	cmp	w0, #0x33
  443e90:	b.eq	44407c <ferror@plt+0x417ac>  // b.none
  443e94:	cmp	w0, #0x34
  443e98:	b.eq	4443fc <ferror@plt+0x41b2c>  // b.none
  443e9c:	mov	x20, #0x0                   	// #0
  443ea0:	ldp	x21, x22, [sp, #32]
  443ea4:	b	443cf0 <ferror@plt+0x41420>
  443ea8:	stp	x21, x22, [sp, #32]
  443eac:	add	x1, x0, #0x2
  443eb0:	str	x1, [x19, #24]
  443eb4:	ldrb	w1, [x0, #2]
  443eb8:	cmp	w1, #0x54
  443ebc:	b.eq	443f04 <ferror@plt+0x41634>  // b.none
  443ec0:	mov	x0, x19
  443ec4:	bl	43a684 <ferror@plt+0x37db4>
  443ec8:	mvn	x1, x0
  443ecc:	mov	x20, #0x0                   	// #0
  443ed0:	tst	x1, #0x7fffffff
  443ed4:	b.eq	444454 <ferror@plt+0x41b84>  // b.none
  443ed8:	add	w21, w0, #0x1
  443edc:	mov	x0, x19
  443ee0:	bl	43a1d8 <ferror@plt+0x37908>
  443ee4:	mov	x20, x0
  443ee8:	cbz	x0, 44445c <ferror@plt+0x41b8c>
  443eec:	mov	w0, #0x6                   	// #6
  443ef0:	str	w0, [x20]
  443ef4:	sxtw	x0, w21
  443ef8:	str	x0, [x20, #8]
  443efc:	ldp	x21, x22, [sp, #32]
  443f00:	b	443cf0 <ferror@plt+0x41420>
  443f04:	add	x0, x0, #0x3
  443f08:	str	x0, [x19, #24]
  443f0c:	mov	w21, #0x0                   	// #0
  443f10:	b	443edc <ferror@plt+0x4160c>
  443f14:	cmp	w1, #0x6f
  443f18:	b.ne	443d34 <ferror@plt+0x41464>  // b.any
  443f1c:	ldrb	w1, [x0, #1]
  443f20:	cmp	w1, #0x6e
  443f24:	b.ne	443e6c <ferror@plt+0x4159c>  // b.any
  443f28:	add	x0, x0, #0x2
  443f2c:	str	x0, [x19, #24]
  443f30:	b	443cd0 <ferror@plt+0x41400>
  443f34:	mov	x0, x19
  443f38:	bl	443c4c <ferror@plt+0x4137c>
  443f3c:	mov	x3, x0
  443f40:	mov	x2, x20
  443f44:	mov	w1, #0x4                   	// #4
  443f48:	mov	x0, x19
  443f4c:	bl	43a218 <ferror@plt+0x37948>
  443f50:	mov	x20, x0
  443f54:	b	443cf0 <ferror@plt+0x41420>
  443f58:	mov	x0, x19
  443f5c:	bl	440d54 <ferror@plt+0x3e484>
  443f60:	mov	x21, x0
  443f64:	b	443d68 <ferror@plt+0x41498>
  443f68:	ldr	x0, [x20, #8]
  443f6c:	ldr	x21, [x0]
  443f70:	ldr	w0, [x0, #16]
  443f74:	sub	w1, w0, #0x2
  443f78:	ldr	w0, [x19, #72]
  443f7c:	add	w0, w0, w1
  443f80:	str	w0, [x19, #72]
  443f84:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1f094>
  443f88:	add	x1, x1, #0x310
  443f8c:	mov	x0, x21
  443f90:	bl	402620 <strcmp@plt>
  443f94:	cbz	w0, 443fc0 <ferror@plt+0x416f0>
  443f98:	ldr	w0, [x20]
  443f9c:	cmp	w0, #0x33
  443fa0:	b.eq	444080 <ferror@plt+0x417b0>  // b.none
  443fa4:	cmp	w0, #0x34
  443fa8:	b.eq	44400c <ferror@plt+0x4173c>  // b.none
  443fac:	cmp	w0, #0x32
  443fb0:	b.eq	443fe8 <ferror@plt+0x41718>  // b.none
  443fb4:	mov	x20, #0x0                   	// #0
  443fb8:	ldp	x21, x22, [sp, #32]
  443fbc:	b	443cf0 <ferror@plt+0x41420>
  443fc0:	mov	x0, x19
  443fc4:	bl	440d54 <ferror@plt+0x3e484>
  443fc8:	mov	x3, x0
  443fcc:	mov	x2, x20
  443fd0:	mov	w1, #0x37                  	// #55
  443fd4:	mov	x0, x19
  443fd8:	bl	43a218 <ferror@plt+0x37948>
  443fdc:	mov	x20, x0
  443fe0:	ldp	x21, x22, [sp, #32]
  443fe4:	b	443cf0 <ferror@plt+0x41420>
  443fe8:	ldr	x0, [x20, #8]
  443fec:	ldr	w0, [x0, #20]
  443ff0:	cmp	w0, #0x2
  443ff4:	b.eq	4441a4 <ferror@plt+0x418d4>  // b.none
  443ff8:	b.gt	444094 <ferror@plt+0x417c4>
  443ffc:	cbz	w0, 44413c <ferror@plt+0x4186c>
  444000:	cmp	w0, #0x1
  444004:	b.ne	444088 <ferror@plt+0x417b8>  // b.any
  444008:	cbz	x21, 4443fc <ferror@plt+0x41b2c>
  44400c:	ldrb	w0, [x21]
  444010:	cmp	w0, #0x70
  444014:	mov	w1, #0x6d                  	// #109
  444018:	ccmp	w0, w1, #0x4, ne  // ne = any
  44401c:	b.ne	44402c <ferror@plt+0x4175c>  // b.any
  444020:	ldrb	w1, [x21, #1]
  444024:	cmp	w1, w0
  444028:	b.eq	44415c <ferror@plt+0x4188c>  // b.none
  44402c:	ldr	w0, [x20]
  444030:	cmp	w0, #0x34
  444034:	b.eq	44443c <ferror@plt+0x41b6c>  // b.none
  444038:	mov	w22, #0x0                   	// #0
  44403c:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  444040:	add	x1, x1, #0xe88
  444044:	mov	x0, x21
  444048:	bl	402620 <strcmp@plt>
  44404c:	cbz	w0, 44417c <ferror@plt+0x418ac>
  444050:	mov	x0, x19
  444054:	bl	443c88 <ferror@plt+0x413b8>
  444058:	mov	x3, x0
  44405c:	cbnz	w22, 44418c <ferror@plt+0x418bc>
  444060:	mov	x2, x20
  444064:	mov	w1, #0x37                  	// #55
  444068:	mov	x0, x19
  44406c:	bl	43a218 <ferror@plt+0x37948>
  444070:	mov	x20, x0
  444074:	ldp	x21, x22, [sp, #32]
  444078:	b	443cf0 <ferror@plt+0x41420>
  44407c:	mov	x21, #0x0                   	// #0
  444080:	ldr	w0, [x20, #8]
  444084:	b	443ff0 <ferror@plt+0x41720>
  444088:	mov	x20, #0x0                   	// #0
  44408c:	ldp	x21, x22, [sp, #32]
  444090:	b	443cf0 <ferror@plt+0x41420>
  444094:	cmp	w0, #0x3
  444098:	b.ne	444130 <ferror@plt+0x41860>  // b.any
  44409c:	cbz	x21, 4443c0 <ferror@plt+0x41af0>
  4440a0:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  4440a4:	add	x1, x1, #0xdb0
  4440a8:	mov	x0, x21
  4440ac:	bl	402620 <strcmp@plt>
  4440b0:	cbz	w0, 4442c0 <ferror@plt+0x419f0>
  4440b4:	ldrb	w0, [x21]
  4440b8:	cmp	w0, #0x66
  4440bc:	b.eq	44432c <ferror@plt+0x41a5c>  // b.none
  4440c0:	cmp	w0, #0x6e
  4440c4:	b.ne	4443d8 <ferror@plt+0x41b08>  // b.any
  4440c8:	ldrb	w0, [x21, #1]
  4440cc:	cmp	w0, #0x77
  4440d0:	mov	w1, #0x61                  	// #97
  4440d4:	ccmp	w0, w1, #0x4, ne  // ne = any
  4440d8:	b.ne	4443e4 <ferror@plt+0x41b14>  // b.any
  4440dc:	mov	w1, #0x5f                  	// #95
  4440e0:	mov	x0, x19
  4440e4:	bl	4427a0 <ferror@plt+0x3fed0>
  4440e8:	mov	x21, x0
  4440ec:	mov	x0, x19
  4440f0:	bl	440d54 <ferror@plt+0x3e484>
  4440f4:	mov	x22, x0
  4440f8:	ldr	x0, [x19, #24]
  4440fc:	ldrb	w1, [x0]
  444100:	cmp	w1, #0x45
  444104:	b.eq	444360 <ferror@plt+0x41a90>  // b.none
  444108:	cmp	w1, #0x70
  44410c:	b.eq	444370 <ferror@plt+0x41aa0>  // b.none
  444110:	cmp	w1, #0x69
  444114:	b.ne	4443f0 <ferror@plt+0x41b20>  // b.any
  444118:	ldrb	w0, [x0, #1]
  44411c:	cmp	w0, #0x6c
  444120:	b.eq	4443a4 <ferror@plt+0x41ad4>  // b.none
  444124:	mov	x20, #0x0                   	// #0
  444128:	ldp	x21, x22, [sp, #32]
  44412c:	b	443cf0 <ferror@plt+0x41420>
  444130:	mov	x20, #0x0                   	// #0
  444134:	ldp	x21, x22, [sp, #32]
  444138:	b	443cf0 <ferror@plt+0x41420>
  44413c:	mov	x3, #0x0                   	// #0
  444140:	mov	x2, x20
  444144:	mov	w1, #0x36                  	// #54
  444148:	mov	x0, x19
  44414c:	bl	43a218 <ferror@plt+0x37948>
  444150:	mov	x20, x0
  444154:	ldp	x21, x22, [sp, #32]
  444158:	b	443cf0 <ferror@plt+0x41420>
  44415c:	ldr	x0, [x19, #24]
  444160:	ldrb	w1, [x0]
  444164:	mov	w22, #0x1                   	// #1
  444168:	cmp	w1, #0x5f
  44416c:	b.ne	44403c <ferror@plt+0x4176c>  // b.any
  444170:	add	x0, x0, #0x1
  444174:	str	x0, [x19, #24]
  444178:	b	44402c <ferror@plt+0x4175c>
  44417c:	mov	x0, x19
  444180:	bl	443b9c <ferror@plt+0x412cc>
  444184:	mov	x3, x0
  444188:	b	44405c <ferror@plt+0x4178c>
  44418c:	mov	x2, x3
  444190:	mov	w1, #0x39                  	// #57
  444194:	mov	x0, x19
  444198:	bl	43a218 <ferror@plt+0x37948>
  44419c:	mov	x3, x0
  4441a0:	b	444060 <ferror@plt+0x41790>
  4441a4:	cbz	x21, 4443b4 <ferror@plt+0x41ae4>
  4441a8:	mov	x0, x20
  4441ac:	bl	43a76c <ferror@plt+0x37e9c>
  4441b0:	cbnz	w0, 444258 <ferror@plt+0x41988>
  4441b4:	ldrb	w0, [x21]
  4441b8:	cmp	w0, #0x66
  4441bc:	b.eq	444268 <ferror@plt+0x41998>  // b.none
  4441c0:	mov	x0, x19
  4441c4:	bl	443c88 <ferror@plt+0x413b8>
  4441c8:	mov	x22, x0
  4441cc:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  4441d0:	add	x1, x1, #0xda0
  4441d4:	mov	x0, x21
  4441d8:	bl	402620 <strcmp@plt>
  4441dc:	cbz	w0, 444278 <ferror@plt+0x419a8>
  4441e0:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  4441e4:	add	x1, x1, #0xf78
  4441e8:	mov	x0, x21
  4441ec:	bl	402620 <strcmp@plt>
  4441f0:	cbz	w0, 444208 <ferror@plt+0x41938>
  4441f4:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  4441f8:	add	x1, x1, #0xf80
  4441fc:	mov	x0, x21
  444200:	bl	402620 <strcmp@plt>
  444204:	cbnz	w0, 4442b0 <ferror@plt+0x419e0>
  444208:	mov	x0, x19
  44420c:	bl	441994 <ferror@plt+0x3f0c4>
  444210:	mov	x21, x0
  444214:	ldr	x0, [x19, #24]
  444218:	ldrb	w0, [x0]
  44421c:	cmp	w0, #0x49
  444220:	b.eq	44428c <ferror@plt+0x419bc>  // b.none
  444224:	mov	x3, x21
  444228:	mov	x2, x22
  44422c:	mov	w1, #0x39                  	// #57
  444230:	mov	x0, x19
  444234:	bl	43a218 <ferror@plt+0x37948>
  444238:	mov	x3, x0
  44423c:	mov	x2, x20
  444240:	mov	w1, #0x38                  	// #56
  444244:	mov	x0, x19
  444248:	bl	43a218 <ferror@plt+0x37948>
  44424c:	mov	x20, x0
  444250:	ldp	x21, x22, [sp, #32]
  444254:	b	443cf0 <ferror@plt+0x41420>
  444258:	mov	x0, x19
  44425c:	bl	440d54 <ferror@plt+0x3e484>
  444260:	mov	x22, x0
  444264:	b	4441cc <ferror@plt+0x418fc>
  444268:	mov	x0, x19
  44426c:	bl	4417e8 <ferror@plt+0x3ef18>
  444270:	mov	x22, x0
  444274:	b	4441cc <ferror@plt+0x418fc>
  444278:	mov	w1, #0x45                  	// #69
  44427c:	mov	x0, x19
  444280:	bl	4427a0 <ferror@plt+0x3fed0>
  444284:	mov	x21, x0
  444288:	b	444224 <ferror@plt+0x41954>
  44428c:	mov	x0, x19
  444290:	bl	443c4c <ferror@plt+0x4137c>
  444294:	mov	x3, x0
  444298:	mov	x2, x21
  44429c:	mov	w1, #0x4                   	// #4
  4442a0:	mov	x0, x19
  4442a4:	bl	43a218 <ferror@plt+0x37948>
  4442a8:	mov	x21, x0
  4442ac:	b	444224 <ferror@plt+0x41954>
  4442b0:	mov	x0, x19
  4442b4:	bl	443c88 <ferror@plt+0x413b8>
  4442b8:	mov	x21, x0
  4442bc:	b	444224 <ferror@plt+0x41954>
  4442c0:	mov	x0, x19
  4442c4:	bl	443c88 <ferror@plt+0x413b8>
  4442c8:	mov	x21, x0
  4442cc:	mov	x0, x19
  4442d0:	bl	443c88 <ferror@plt+0x413b8>
  4442d4:	mov	x22, x0
  4442d8:	mov	x0, x19
  4442dc:	bl	443c88 <ferror@plt+0x413b8>
  4442e0:	mov	x3, x0
  4442e4:	cbz	x0, 4443cc <ferror@plt+0x41afc>
  4442e8:	mov	x2, x22
  4442ec:	mov	w1, #0x3c                  	// #60
  4442f0:	mov	x0, x19
  4442f4:	bl	43a218 <ferror@plt+0x37948>
  4442f8:	mov	x3, x0
  4442fc:	mov	x2, x21
  444300:	mov	w1, #0x3b                  	// #59
  444304:	mov	x0, x19
  444308:	bl	43a218 <ferror@plt+0x37948>
  44430c:	mov	x3, x0
  444310:	mov	x2, x20
  444314:	mov	w1, #0x3a                  	// #58
  444318:	mov	x0, x19
  44431c:	bl	43a218 <ferror@plt+0x37948>
  444320:	mov	x20, x0
  444324:	ldp	x21, x22, [sp, #32]
  444328:	b	443cf0 <ferror@plt+0x41420>
  44432c:	mov	x0, x19
  444330:	bl	4417e8 <ferror@plt+0x3ef18>
  444334:	mov	x21, x0
  444338:	mov	x0, x19
  44433c:	bl	443c88 <ferror@plt+0x413b8>
  444340:	mov	x22, x0
  444344:	mov	x0, x19
  444348:	bl	443c88 <ferror@plt+0x413b8>
  44434c:	mov	x3, x0
  444350:	cbnz	x0, 4442e8 <ferror@plt+0x41a18>
  444354:	mov	x20, x0
  444358:	ldp	x21, x22, [sp, #32]
  44435c:	b	443cf0 <ferror@plt+0x41420>
  444360:	add	x0, x0, #0x1
  444364:	str	x0, [x19, #24]
  444368:	mov	x3, #0x0                   	// #0
  44436c:	b	4442e8 <ferror@plt+0x41a18>
  444370:	ldrb	w1, [x0, #1]
  444374:	cmp	w1, #0x69
  444378:	b.eq	444388 <ferror@plt+0x41ab8>  // b.none
  44437c:	mov	x20, #0x0                   	// #0
  444380:	ldp	x21, x22, [sp, #32]
  444384:	b	443cf0 <ferror@plt+0x41420>
  444388:	add	x0, x0, #0x2
  44438c:	str	x0, [x19, #24]
  444390:	mov	w1, #0x45                  	// #69
  444394:	mov	x0, x19
  444398:	bl	4427a0 <ferror@plt+0x3fed0>
  44439c:	mov	x3, x0
  4443a0:	b	4442e8 <ferror@plt+0x41a18>
  4443a4:	mov	x0, x19
  4443a8:	bl	443c88 <ferror@plt+0x413b8>
  4443ac:	mov	x3, x0
  4443b0:	b	4442e8 <ferror@plt+0x41a18>
  4443b4:	mov	x20, x21
  4443b8:	ldp	x21, x22, [sp, #32]
  4443bc:	b	443cf0 <ferror@plt+0x41420>
  4443c0:	mov	x20, x21
  4443c4:	ldp	x21, x22, [sp, #32]
  4443c8:	b	443cf0 <ferror@plt+0x41420>
  4443cc:	mov	x20, x0
  4443d0:	ldp	x21, x22, [sp, #32]
  4443d4:	b	443cf0 <ferror@plt+0x41420>
  4443d8:	mov	x20, #0x0                   	// #0
  4443dc:	ldp	x21, x22, [sp, #32]
  4443e0:	b	443cf0 <ferror@plt+0x41420>
  4443e4:	mov	x20, #0x0                   	// #0
  4443e8:	ldp	x21, x22, [sp, #32]
  4443ec:	b	443cf0 <ferror@plt+0x41420>
  4443f0:	mov	x20, #0x0                   	// #0
  4443f4:	ldp	x21, x22, [sp, #32]
  4443f8:	b	443cf0 <ferror@plt+0x41420>
  4443fc:	ldr	w0, [x20]
  444400:	mov	w22, #0x0                   	// #0
  444404:	cmp	w0, #0x34
  444408:	b.ne	444050 <ferror@plt+0x41780>  // b.any
  44440c:	ldr	x0, [x19, #24]
  444410:	ldrb	w1, [x0]
  444414:	mov	w22, #0x0                   	// #0
  444418:	cmp	w1, #0x5f
  44441c:	b.ne	444050 <ferror@plt+0x41780>  // b.any
  444420:	add	x0, x0, #0x1
  444424:	str	x0, [x19, #24]
  444428:	mov	w1, #0x45                  	// #69
  44442c:	mov	x0, x19
  444430:	bl	4427a0 <ferror@plt+0x3fed0>
  444434:	mov	x3, x0
  444438:	b	444060 <ferror@plt+0x41790>
  44443c:	ldr	x0, [x19, #24]
  444440:	ldrb	w1, [x0]
  444444:	cmp	w1, #0x5f
  444448:	b.eq	444420 <ferror@plt+0x41b50>  // b.none
  44444c:	mov	w22, #0x0                   	// #0
  444450:	b	44403c <ferror@plt+0x4176c>
  444454:	ldp	x21, x22, [sp, #32]
  444458:	b	443cf0 <ferror@plt+0x41420>
  44445c:	ldp	x21, x22, [sp, #32]
  444460:	b	443cf0 <ferror@plt+0x41420>
  444464:	ldp	x21, x22, [sp, #32]
  444468:	b	443cf0 <ferror@plt+0x41420>
  44446c:	stp	x29, x30, [sp, #-432]!
  444470:	mov	x29, sp
  444474:	stp	x19, x20, [sp, #16]
  444478:	stp	x21, x22, [sp, #32]
  44447c:	mov	w20, w0
  444480:	mov	x21, x1
  444484:	str	xzr, [x29, #312]
  444488:	strb	wzr, [x29, #320]
  44448c:	str	xzr, [x29, #344]
  444490:	str	xzr, [x29, #352]
  444494:	str	wzr, [x29, #372]
  444498:	str	xzr, [x29, #376]
  44449c:	str	x2, [x29, #328]
  4444a0:	str	x3, [x29, #336]
  4444a4:	str	wzr, [x29, #360]
  4444a8:	str	wzr, [x29, #364]
  4444ac:	str	wzr, [x29, #368]
  4444b0:	str	xzr, [x29, #384]
  4444b4:	str	xzr, [x29, #392]
  4444b8:	str	wzr, [x29, #400]
  4444bc:	str	wzr, [x29, #404]
  4444c0:	str	xzr, [x29, #408]
  4444c4:	str	wzr, [x29, #416]
  4444c8:	str	wzr, [x29, #420]
  4444cc:	add	x0, x29, #0x38
  4444d0:	bl	43a88c <ferror@plt+0x37fbc>
  4444d4:	ldr	w0, [x29, #364]
  4444d8:	cmp	w0, #0x7ff
  4444dc:	b.gt	4444e4 <ferror@plt+0x41c14>
  4444e0:	str	wzr, [x29, #364]
  4444e4:	ldr	w3, [x29, #404]
  4444e8:	ldr	w2, [x29, #420]
  4444ec:	mul	w2, w3, w2
  4444f0:	str	w2, [x29, #420]
  4444f4:	str	xzr, [x29, #424]
  4444f8:	mov	x22, sp
  4444fc:	mov	w0, #0x1                   	// #1
  444500:	cmp	w3, #0x0
  444504:	csel	w3, w3, w0, gt
  444508:	sub	sp, sp, w3, sxtw #4
  44450c:	mov	x1, sp
  444510:	cmp	w2, #0x0
  444514:	csel	w2, w2, w0, gt
  444518:	sub	sp, sp, w2, sxtw #4
  44451c:	str	x1, [x29, #392]
  444520:	mov	x0, sp
  444524:	str	x0, [x29, #408]
  444528:	add	x19, x29, #0x38
  44452c:	mov	x2, x21
  444530:	mov	w1, w20
  444534:	mov	x0, x19
  444538:	bl	43ef90 <ferror@plt+0x3c6c0>
  44453c:	mov	sp, x22
  444540:	ldr	x1, [x29, #312]
  444544:	strb	wzr, [x19, x1]
  444548:	ldr	x2, [x29, #336]
  44454c:	mov	x0, x19
  444550:	ldr	x3, [x29, #328]
  444554:	blr	x3
  444558:	ldr	w0, [x29, #360]
  44455c:	cmp	w0, #0x0
  444560:	cset	w0, eq  // eq = none
  444564:	mov	sp, x29
  444568:	ldp	x19, x20, [sp, #16]
  44456c:	ldp	x21, x22, [sp, #32]
  444570:	ldp	x29, x30, [sp], #432
  444574:	ret
  444578:	stp	x29, x30, [sp, #-80]!
  44457c:	mov	x29, sp
  444580:	stp	x19, x20, [sp, #16]
  444584:	stp	x21, x22, [sp, #32]
  444588:	mov	w19, w0
  44458c:	mov	x20, x1
  444590:	mov	x22, x3
  444594:	str	xzr, [sp, #48]
  444598:	str	xzr, [sp, #56]
  44459c:	str	xzr, [sp, #64]
  4445a0:	str	wzr, [sp, #72]
  4445a4:	cbnz	w2, 4445ec <ferror@plt+0x41d1c>
  4445a8:	add	x3, sp, #0x30
  4445ac:	adrp	x2, 43a000 <ferror@plt+0x37730>
  4445b0:	add	x2, x2, #0xbdc
  4445b4:	mov	x1, x20
  4445b8:	mov	w0, w19
  4445bc:	bl	44446c <ferror@plt+0x41b9c>
  4445c0:	cbz	w0, 444634 <ferror@plt+0x41d64>
  4445c4:	ldr	w0, [sp, #72]
  4445c8:	cmp	w0, #0x0
  4445cc:	ldr	x0, [sp, #64]
  4445d0:	csinc	x0, x0, xzr, eq  // eq = none
  4445d4:	str	x0, [x22]
  4445d8:	ldr	x0, [sp, #48]
  4445dc:	ldp	x19, x20, [sp, #16]
  4445e0:	ldp	x21, x22, [sp, #32]
  4445e4:	ldp	x29, x30, [sp], #80
  4445e8:	ret
  4445ec:	sxtw	x0, w2
  4445f0:	cmp	x0, #0x2
  4445f4:	b.ls	444620 <ferror@plt+0x41d50>  // b.plast
  4445f8:	mov	x21, #0x2                   	// #2
  4445fc:	lsl	x21, x21, #1
  444600:	cmp	x0, x21
  444604:	b.hi	4445fc <ferror@plt+0x41d2c>  // b.pmore
  444608:	mov	x0, x21
  44460c:	bl	402410 <malloc@plt>
  444610:	cbz	x0, 444628 <ferror@plt+0x41d58>
  444614:	str	x0, [sp, #48]
  444618:	str	x21, [sp, #64]
  44461c:	b	4445a8 <ferror@plt+0x41cd8>
  444620:	mov	x21, #0x2                   	// #2
  444624:	b	444608 <ferror@plt+0x41d38>
  444628:	mov	w0, #0x1                   	// #1
  44462c:	str	w0, [sp, #72]
  444630:	b	4445a8 <ferror@plt+0x41cd8>
  444634:	ldr	x0, [sp, #48]
  444638:	bl	402690 <free@plt>
  44463c:	str	xzr, [x22]
  444640:	mov	x0, #0x0                   	// #0
  444644:	b	4445dc <ferror@plt+0x41d0c>
  444648:	str	x0, [x3]
  44464c:	add	x4, x0, x2
  444650:	str	x4, [x3, #8]
  444654:	str	w1, [x3, #16]
  444658:	str	x0, [x3, #24]
  44465c:	lsl	w0, w2, #1
  444660:	str	w0, [x3, #44]
  444664:	str	wzr, [x3, #40]
  444668:	str	w2, [x3, #60]
  44466c:	str	wzr, [x3, #56]
  444670:	str	xzr, [x3, #64]
  444674:	str	wzr, [x3, #72]
  444678:	str	wzr, [x3, #76]
  44467c:	str	wzr, [x3, #80]
  444680:	str	wzr, [x3, #84]
  444684:	ret
  444688:	stp	x29, x30, [sp, #-160]!
  44468c:	mov	x29, sp
  444690:	stp	x19, x20, [sp, #16]
  444694:	stp	x21, x22, [sp, #32]
  444698:	stp	x23, x24, [sp, #48]
  44469c:	mov	x20, x0
  4446a0:	mov	w19, w1
  4446a4:	mov	x21, x2
  4446a8:	mov	x22, x3
  4446ac:	ldrb	w0, [x0]
  4446b0:	cmp	w0, #0x5f
  4446b4:	b.eq	44480c <ferror@plt+0x41f3c>  // b.none
  4446b8:	mov	x2, #0x8                   	// #8
  4446bc:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  4446c0:	add	x1, x1, #0xf30
  4446c4:	mov	x0, x20
  4446c8:	bl	402440 <strncmp@plt>
  4446cc:	cbnz	w0, 44470c <ferror@plt+0x41e3c>
  4446d0:	ldrb	w0, [x20, #8]
  4446d4:	cmp	w0, #0x2e
  4446d8:	mov	w1, #0x5f                  	// #95
  4446dc:	ccmp	w0, w1, #0x4, ne  // ne = any
  4446e0:	mov	w1, #0x24                  	// #36
  4446e4:	ccmp	w0, w1, #0x4, ne  // ne = any
  4446e8:	b.ne	44470c <ferror@plt+0x41e3c>  // b.any
  4446ec:	ldrb	w0, [x20, #9]
  4446f0:	cmp	w0, #0x44
  4446f4:	mov	w1, #0x49                  	// #73
  4446f8:	ccmp	w0, w1, #0x4, ne  // ne = any
  4446fc:	b.ne	44470c <ferror@plt+0x41e3c>  // b.any
  444700:	ldrb	w1, [x20, #10]
  444704:	cmp	w1, #0x5f
  444708:	b.eq	444820 <ferror@plt+0x41f50>  // b.none
  44470c:	and	w0, w19, #0x10
  444710:	mov	w23, #0x0                   	// #0
  444714:	tbz	w19, #4, 444874 <ferror@plt+0x41fa4>
  444718:	mov	x0, x20
  44471c:	bl	4022b0 <strlen@plt>
  444720:	add	x3, x29, #0x48
  444724:	mov	x2, x0
  444728:	mov	w1, w19
  44472c:	mov	x0, x20
  444730:	bl	444648 <ferror@plt+0x41d78>
  444734:	and	w0, w19, #0x40000
  444738:	tbnz	w19, #18, 444748 <ferror@plt+0x41e78>
  44473c:	ldr	w1, [x29, #116]
  444740:	cmp	w1, #0x800
  444744:	b.hi	444874 <ferror@plt+0x41fa4>  // b.pmore
  444748:	mov	x20, sp
  44474c:	ldrsw	x0, [x29, #116]
  444750:	add	x0, x0, x0, lsl #1
  444754:	lsl	x0, x0, #3
  444758:	add	x0, x0, #0xf
  44475c:	and	x0, x0, #0xfffffffffffffff0
  444760:	sub	sp, sp, x0
  444764:	mov	x1, sp
  444768:	ldrsw	x0, [x29, #132]
  44476c:	lsl	x0, x0, #3
  444770:	add	x0, x0, #0xf
  444774:	and	x0, x0, #0xfffffffffffffff0
  444778:	sub	sp, sp, x0
  44477c:	str	x1, [x29, #104]
  444780:	mov	x0, sp
  444784:	str	x0, [x29, #120]
  444788:	cmp	w23, #0x1
  44478c:	b.eq	44488c <ferror@plt+0x41fbc>  // b.none
  444790:	b.ls	444830 <ferror@plt+0x41f60>  // b.plast
  444794:	ldr	x0, [x29, #96]
  444798:	add	x24, x0, #0xb
  44479c:	str	x24, [x29, #96]
  4447a0:	cmp	w23, #0x2
  4447a4:	cset	w1, ne  // ne = any
  4447a8:	add	w23, w1, #0x44
  4447ac:	ldrb	w1, [x0, #11]
  4447b0:	cmp	w1, #0x5f
  4447b4:	b.ne	4447c4 <ferror@plt+0x41ef4>  // b.any
  4447b8:	ldrb	w1, [x0, #12]
  4447bc:	cmp	w1, #0x5a
  4447c0:	b.eq	4448a0 <ferror@plt+0x41fd0>  // b.none
  4447c4:	mov	x0, x24
  4447c8:	bl	4022b0 <strlen@plt>
  4447cc:	mov	w2, w0
  4447d0:	mov	x1, x24
  4447d4:	add	x0, x29, #0x48
  4447d8:	bl	440884 <ferror@plt+0x3dfb4>
  4447dc:	mov	x2, x0
  4447e0:	mov	x3, #0x0                   	// #0
  4447e4:	mov	w1, w23
  4447e8:	add	x0, x29, #0x48
  4447ec:	bl	43a218 <ferror@plt+0x37948>
  4447f0:	mov	x23, x0
  4447f4:	ldr	x24, [x29, #96]
  4447f8:	mov	x0, x24
  4447fc:	bl	4022b0 <strlen@plt>
  444800:	add	x24, x24, x0
  444804:	str	x24, [x29, #96]
  444808:	b	444840 <ferror@plt+0x41f70>
  44480c:	ldrb	w0, [x20, #1]
  444810:	cmp	w0, #0x5a
  444814:	b.ne	4446b8 <ferror@plt+0x41de8>  // b.any
  444818:	mov	w23, #0x1                   	// #1
  44481c:	b	444718 <ferror@plt+0x41e48>
  444820:	cmp	w0, #0x49
  444824:	cset	w23, ne  // ne = any
  444828:	add	w23, w23, #0x2
  44482c:	b	444718 <ferror@plt+0x41e48>
  444830:	cbnz	w23, 4448bc <ferror@plt+0x41fec>
  444834:	add	x0, x29, #0x48
  444838:	bl	440d54 <ferror@plt+0x3e484>
  44483c:	mov	x23, x0
  444840:	tbz	w19, #0, 444854 <ferror@plt+0x41f84>
  444844:	ldr	x0, [x29, #96]
  444848:	ldrb	w1, [x0]
  44484c:	mov	w0, #0x0                   	// #0
  444850:	cbnz	w1, 444870 <ferror@plt+0x41fa0>
  444854:	mov	w0, #0x0                   	// #0
  444858:	cbz	x23, 444870 <ferror@plt+0x41fa0>
  44485c:	mov	x3, x22
  444860:	mov	x2, x21
  444864:	mov	x1, x23
  444868:	mov	w0, w19
  44486c:	bl	44446c <ferror@plt+0x41b9c>
  444870:	mov	sp, x20
  444874:	mov	sp, x29
  444878:	ldp	x19, x20, [sp, #16]
  44487c:	ldp	x21, x22, [sp, #32]
  444880:	ldp	x23, x24, [sp, #48]
  444884:	ldp	x29, x30, [sp], #160
  444888:	ret
  44488c:	mov	w1, #0x1                   	// #1
  444890:	add	x0, x29, #0x48
  444894:	bl	443808 <ferror@plt+0x40f38>
  444898:	mov	x23, x0
  44489c:	b	444840 <ferror@plt+0x41f70>
  4448a0:	add	x0, x0, #0xd
  4448a4:	str	x0, [x29, #96]
  4448a8:	mov	w1, #0x0                   	// #0
  4448ac:	add	x0, x29, #0x48
  4448b0:	bl	443028 <ferror@plt+0x40758>
  4448b4:	mov	x2, x0
  4448b8:	b	4447e0 <ferror@plt+0x41f10>
  4448bc:	bl	402590 <abort@plt>
  4448c0:	stp	x29, x30, [sp, #-64]!
  4448c4:	mov	x29, sp
  4448c8:	str	x19, [sp, #16]
  4448cc:	mov	x19, x2
  4448d0:	str	xzr, [sp, #32]
  4448d4:	str	xzr, [sp, #40]
  4448d8:	str	xzr, [sp, #48]
  4448dc:	str	wzr, [sp, #56]
  4448e0:	add	x3, sp, #0x20
  4448e4:	adrp	x2, 43a000 <ferror@plt+0x37730>
  4448e8:	add	x2, x2, #0xbdc
  4448ec:	bl	444688 <ferror@plt+0x41db8>
  4448f0:	cbz	w0, 444918 <ferror@plt+0x42048>
  4448f4:	ldr	w0, [sp, #56]
  4448f8:	cmp	w0, #0x0
  4448fc:	ldr	x0, [sp, #48]
  444900:	csinc	x0, x0, xzr, eq  // eq = none
  444904:	str	x0, [x19]
  444908:	ldr	x0, [sp, #32]
  44490c:	ldr	x19, [sp, #16]
  444910:	ldp	x29, x30, [sp], #64
  444914:	ret
  444918:	ldr	x0, [sp, #32]
  44491c:	bl	402690 <free@plt>
  444920:	str	xzr, [x19]
  444924:	mov	x0, #0x0                   	// #0
  444928:	b	44490c <ferror@plt+0x4203c>
  44492c:	stp	x29, x30, [sp, #-144]!
  444930:	mov	x29, sp
  444934:	stp	x19, x20, [sp, #16]
  444938:	str	x21, [sp, #32]
  44493c:	mov	x21, x0
  444940:	mov	x20, x1
  444944:	mov	x19, x2
  444948:	str	wzr, [x1]
  44494c:	str	wzr, [x2]
  444950:	bl	4022b0 <strlen@plt>
  444954:	add	x3, x29, #0x38
  444958:	mov	x2, x0
  44495c:	mov	w1, #0x4000                	// #16384
  444960:	mov	x0, x21
  444964:	bl	444648 <ferror@plt+0x41d78>
  444968:	ldrsw	x0, [x29, #100]
  44496c:	add	x0, x0, x0, lsl #1
  444970:	lsl	x0, x0, #3
  444974:	add	x0, x0, #0xf
  444978:	and	x0, x0, #0xfffffffffffffff0
  44497c:	sub	sp, sp, x0
  444980:	mov	x1, sp
  444984:	ldrsw	x0, [x29, #116]
  444988:	lsl	x0, x0, #3
  44498c:	add	x0, x0, #0xf
  444990:	and	x0, x0, #0xfffffffffffffff0
  444994:	sub	sp, sp, x0
  444998:	str	x1, [x29, #88]
  44499c:	mov	x0, sp
  4449a0:	str	x0, [x29, #104]
  4449a4:	mov	w1, #0x1                   	// #1
  4449a8:	add	x0, x29, #0x38
  4449ac:	bl	443808 <ferror@plt+0x40f38>
  4449b0:	cbz	x0, 444a38 <ferror@plt+0x42168>
  4449b4:	ldr	w3, [x0]
  4449b8:	cmp	w3, #0x7
  4449bc:	b.eq	444a28 <ferror@plt+0x42158>  // b.none
  4449c0:	b.hi	444a00 <ferror@plt+0x42130>  // b.pmore
  4449c4:	cmp	w3, #0x2
  4449c8:	b.ls	4449e4 <ferror@plt+0x42114>  // b.plast
  4449cc:	sub	w3, w3, #0x3
  4449d0:	cmp	w3, #0x1
  4449d4:	b.hi	444a40 <ferror@plt+0x42170>  // b.pmore
  4449d8:	ldr	x0, [x0, #8]
  4449dc:	cbnz	x0, 4449b4 <ferror@plt+0x420e4>
  4449e0:	b	4449ec <ferror@plt+0x4211c>
  4449e4:	cbnz	w3, 444a20 <ferror@plt+0x42150>
  4449e8:	mov	w0, #0x0                   	// #0
  4449ec:	mov	sp, x29
  4449f0:	ldp	x19, x20, [sp, #16]
  4449f4:	ldr	x21, [sp, #32]
  4449f8:	ldp	x29, x30, [sp], #144
  4449fc:	ret
  444a00:	cmp	w3, #0x8
  444a04:	b.ne	444a18 <ferror@plt+0x42148>  // b.any
  444a08:	ldr	w0, [x0, #8]
  444a0c:	str	w0, [x19]
  444a10:	mov	w0, #0x1                   	// #1
  444a14:	b	4449ec <ferror@plt+0x4211c>
  444a18:	mov	w0, #0x0                   	// #0
  444a1c:	b	4449ec <ferror@plt+0x4211c>
  444a20:	ldr	x0, [x0, #16]
  444a24:	b	4449dc <ferror@plt+0x4210c>
  444a28:	ldr	w0, [x0, #8]
  444a2c:	str	w0, [x20]
  444a30:	mov	w0, #0x1                   	// #1
  444a34:	b	4449ec <ferror@plt+0x4211c>
  444a38:	mov	w0, #0x0                   	// #0
  444a3c:	b	4449ec <ferror@plt+0x4211c>
  444a40:	mov	w0, #0x0                   	// #0
  444a44:	b	4449ec <ferror@plt+0x4211c>
  444a48:	stp	x29, x30, [sp, #-32]!
  444a4c:	mov	x29, sp
  444a50:	add	x2, sp, #0x18
  444a54:	bl	4448c0 <ferror@plt+0x41ff0>
  444a58:	ldp	x29, x30, [sp], #32
  444a5c:	ret
  444a60:	stp	x29, x30, [sp, #-16]!
  444a64:	mov	x29, sp
  444a68:	bl	444688 <ferror@plt+0x41db8>
  444a6c:	ldp	x29, x30, [sp], #16
  444a70:	ret
  444a74:	stp	x29, x30, [sp, #-32]!
  444a78:	mov	x29, sp
  444a7c:	add	x2, sp, #0x18
  444a80:	mov	w1, #0x25                  	// #37
  444a84:	bl	4448c0 <ferror@plt+0x41ff0>
  444a88:	ldp	x29, x30, [sp], #32
  444a8c:	ret
  444a90:	stp	x29, x30, [sp, #-16]!
  444a94:	mov	x29, sp
  444a98:	mov	x3, x2
  444a9c:	mov	x2, x1
  444aa0:	mov	w1, #0x25                  	// #37
  444aa4:	bl	444688 <ferror@plt+0x41db8>
  444aa8:	ldp	x29, x30, [sp], #16
  444aac:	ret
  444ab0:	stp	x29, x30, [sp, #-32]!
  444ab4:	mov	x29, sp
  444ab8:	add	x2, sp, #0x18
  444abc:	add	x1, sp, #0x1c
  444ac0:	bl	44492c <ferror@plt+0x4205c>
  444ac4:	cmp	w0, #0x0
  444ac8:	ldr	w0, [sp, #28]
  444acc:	csel	w0, w0, wzr, ne  // ne = any
  444ad0:	ldp	x29, x30, [sp], #32
  444ad4:	ret
  444ad8:	stp	x29, x30, [sp, #-32]!
  444adc:	mov	x29, sp
  444ae0:	add	x2, sp, #0x18
  444ae4:	add	x1, sp, #0x1c
  444ae8:	bl	44492c <ferror@plt+0x4205c>
  444aec:	cmp	w0, #0x0
  444af0:	ldr	w0, [sp, #24]
  444af4:	csel	w0, w0, wzr, ne  // ne = any
  444af8:	ldp	x29, x30, [sp], #32
  444afc:	ret
  444b00:	mov	w1, #0x2301                	// #8961
  444b04:	movk	w1, #0x6745, lsl #16
  444b08:	str	w1, [x0]
  444b0c:	mov	w1, #0xab89                	// #43913
  444b10:	movk	w1, #0xefcd, lsl #16
  444b14:	str	w1, [x0, #4]
  444b18:	mov	w1, #0xdcfe                	// #56574
  444b1c:	movk	w1, #0x98ba, lsl #16
  444b20:	str	w1, [x0, #8]
  444b24:	mov	w1, #0x5476                	// #21622
  444b28:	movk	w1, #0x1032, lsl #16
  444b2c:	str	w1, [x0, #12]
  444b30:	str	wzr, [x0, #20]
  444b34:	str	wzr, [x0, #16]
  444b38:	str	wzr, [x0, #24]
  444b3c:	ret
  444b40:	mov	x2, x0
  444b44:	mov	x0, x1
  444b48:	ldr	w1, [x2]
  444b4c:	mov	x3, #0x0                   	// #0
  444b50:	bfxil	x3, x1, #0, #32
  444b54:	ldr	w1, [x2, #4]
  444b58:	bfi	x3, x1, #32, #32
  444b5c:	ldr	w4, [x2, #8]
  444b60:	mov	x1, #0x0                   	// #0
  444b64:	bfxil	x1, x4, #0, #32
  444b68:	ldr	w2, [x2, #12]
  444b6c:	bfi	x1, x2, #32, #32
  444b70:	str	x3, [x0]
  444b74:	str	x1, [x0, #8]
  444b78:	ret
  444b7c:	stp	x29, x30, [sp, #-96]!
  444b80:	mov	x29, sp
  444b84:	stp	x21, x22, [sp, #32]
  444b88:	stp	x23, x24, [sp, #48]
  444b8c:	stp	x25, x26, [sp, #64]
  444b90:	stp	x27, x28, [sp, #80]
  444b94:	and	x27, x1, #0xfffffffffffffffc
  444b98:	add	x27, x0, x27
  444b9c:	ldr	w26, [x2]
  444ba0:	ldr	w22, [x2, #4]
  444ba4:	ldr	w24, [x2, #8]
  444ba8:	ldr	w25, [x2, #12]
  444bac:	ldr	w4, [x2, #16]
  444bb0:	add	w4, w4, w1
  444bb4:	str	w4, [x2, #16]
  444bb8:	lsr	x5, x1, #32
  444bbc:	ldr	w3, [x2, #20]
  444bc0:	add	w3, w3, w5
  444bc4:	cmp	x1, w4, uxtw
  444bc8:	cinc	w1, w3, hi  // hi = pmore
  444bcc:	str	w1, [x2, #20]
  444bd0:	cmp	x0, x27
  444bd4:	b.cs	4455ac <ferror@plt+0x42cdc>  // b.hs, b.nlast
  444bd8:	stp	x19, x20, [sp, #16]
  444bdc:	mov	w28, #0xa478                	// #42104
  444be0:	movk	w28, #0xd76a, lsl #16
  444be4:	add	w3, w26, w28
  444be8:	mov	w1, #0xb756                	// #46934
  444bec:	movk	w1, #0xe8c7, lsl #16
  444bf0:	add	w4, w25, w1
  444bf4:	mov	w1, #0x70db                	// #28891
  444bf8:	movk	w1, #0x2420, lsl #16
  444bfc:	add	w1, w24, w1
  444c00:	mov	w5, #0xceee                	// #52974
  444c04:	movk	w5, #0xc1bd, lsl #16
  444c08:	add	w9, w22, w5
  444c0c:	ldr	w8, [x0]
  444c10:	eor	w5, w24, w25
  444c14:	and	w5, w5, w22
  444c18:	eor	w5, w5, w25
  444c1c:	add	w5, w5, w8
  444c20:	add	w5, w5, w3
  444c24:	ror	w5, w5, #25
  444c28:	add	w5, w5, w22
  444c2c:	ldr	w7, [x0, #4]
  444c30:	eor	w3, w22, w24
  444c34:	and	w3, w3, w5
  444c38:	eor	w3, w3, w24
  444c3c:	add	w3, w3, w7
  444c40:	add	w3, w3, w4
  444c44:	ror	w3, w3, #20
  444c48:	add	w3, w5, w3
  444c4c:	ldr	w6, [x0, #8]
  444c50:	eor	w4, w5, w22
  444c54:	and	w4, w4, w3
  444c58:	eor	w4, w4, w22
  444c5c:	add	w4, w4, w6
  444c60:	add	w4, w4, w1
  444c64:	ror	w4, w4, #15
  444c68:	add	w4, w3, w4
  444c6c:	ldr	w14, [x0, #12]
  444c70:	eor	w1, w5, w3
  444c74:	and	w1, w1, w4
  444c78:	eor	w1, w1, w5
  444c7c:	add	w1, w1, w14
  444c80:	add	w1, w1, w9
  444c84:	ror	w1, w1, #10
  444c88:	add	w1, w4, w1
  444c8c:	eor	w9, w3, w4
  444c90:	and	w9, w9, w1
  444c94:	eor	w9, w9, w3
  444c98:	add	w5, w9, w5
  444c9c:	ldr	w9, [x0, #16]
  444ca0:	mov	w10, #0xfaf                 	// #4015
  444ca4:	movk	w10, #0xf57c, lsl #16
  444ca8:	add	w10, w9, w10
  444cac:	add	w5, w10, w5
  444cb0:	ror	w5, w5, #25
  444cb4:	add	w5, w1, w5
  444cb8:	eor	w10, w4, w1
  444cbc:	and	w10, w10, w5
  444cc0:	eor	w10, w10, w4
  444cc4:	add	w3, w10, w3
  444cc8:	ldr	w15, [x0, #20]
  444ccc:	mov	w10, #0xc62a                	// #50730
  444cd0:	movk	w10, #0x4787, lsl #16
  444cd4:	add	w10, w15, w10
  444cd8:	add	w3, w10, w3
  444cdc:	ror	w3, w3, #20
  444ce0:	add	w3, w5, w3
  444ce4:	eor	w10, w1, w5
  444ce8:	and	w10, w10, w3
  444cec:	eor	w10, w10, w1
  444cf0:	add	w4, w10, w4
  444cf4:	ldr	w11, [x0, #24]
  444cf8:	mov	w10, #0x4613                	// #17939
  444cfc:	movk	w10, #0xa830, lsl #16
  444d00:	add	w10, w11, w10
  444d04:	add	w4, w10, w4
  444d08:	ror	w4, w4, #15
  444d0c:	add	w4, w3, w4
  444d10:	eor	w10, w5, w3
  444d14:	and	w10, w10, w4
  444d18:	eor	w10, w10, w5
  444d1c:	add	w1, w10, w1
  444d20:	ldr	w17, [x0, #28]
  444d24:	mov	w10, #0x9501                	// #38145
  444d28:	movk	w10, #0xfd46, lsl #16
  444d2c:	add	w10, w17, w10
  444d30:	add	w1, w10, w1
  444d34:	ror	w1, w1, #10
  444d38:	add	w1, w4, w1
  444d3c:	eor	w23, w3, w4
  444d40:	and	w23, w23, w1
  444d44:	eor	w23, w23, w3
  444d48:	add	w5, w23, w5
  444d4c:	ldr	w20, [x0, #32]
  444d50:	mov	w10, #0x98d8                	// #39128
  444d54:	movk	w10, #0x6980, lsl #16
  444d58:	add	w23, w20, w10
  444d5c:	add	w5, w23, w5
  444d60:	ror	w23, w5, #25
  444d64:	add	w23, w1, w23
  444d68:	eor	w10, w4, w1
  444d6c:	and	w10, w10, w23
  444d70:	eor	w10, w10, w4
  444d74:	add	w3, w10, w3
  444d78:	ldr	w5, [x0, #36]
  444d7c:	mov	w10, #0xf7af                	// #63407
  444d80:	movk	w10, #0x8b44, lsl #16
  444d84:	add	w10, w5, w10
  444d88:	add	w3, w10, w3
  444d8c:	ror	w10, w3, #20
  444d90:	add	w10, w23, w10
  444d94:	eor	w16, w1, w23
  444d98:	and	w16, w16, w10
  444d9c:	eor	w16, w16, w1
  444da0:	add	w4, w16, w4
  444da4:	ldr	w3, [x0, #40]
  444da8:	sub	w16, w3, #0xa, lsl #12
  444dac:	sub	w16, w16, #0x44f
  444db0:	add	w4, w16, w4
  444db4:	ror	w16, w4, #15
  444db8:	add	w16, w10, w16
  444dbc:	eor	w12, w23, w10
  444dc0:	and	w12, w12, w16
  444dc4:	eor	w12, w12, w23
  444dc8:	add	w1, w12, w1
  444dcc:	ldr	w13, [x0, #44]
  444dd0:	mov	w4, #0xd7be                	// #55230
  444dd4:	movk	w4, #0x895c, lsl #16
  444dd8:	add	w12, w13, w4
  444ddc:	add	w1, w12, w1
  444de0:	ror	w12, w1, #10
  444de4:	add	w12, w16, w12
  444de8:	eor	w1, w10, w16
  444dec:	and	w1, w1, w12
  444df0:	eor	w1, w1, w10
  444df4:	add	w23, w1, w23
  444df8:	ldr	w4, [x0, #48]
  444dfc:	mov	w1, #0x1122                	// #4386
  444e00:	movk	w1, #0x6b90, lsl #16
  444e04:	add	w1, w4, w1
  444e08:	add	w23, w1, w23
  444e0c:	ror	w1, w23, #25
  444e10:	add	w1, w12, w1
  444e14:	eor	w19, w16, w12
  444e18:	and	w19, w19, w1
  444e1c:	eor	w19, w19, w16
  444e20:	add	w19, w19, w10
  444e24:	ldr	w10, [x0, #52]
  444e28:	mov	w18, #0x7193                	// #29075
  444e2c:	movk	w18, #0xfd98, lsl #16
  444e30:	add	w18, w10, w18
  444e34:	add	w19, w18, w19
  444e38:	ror	w19, w19, #20
  444e3c:	add	w19, w1, w19
  444e40:	eor	w21, w12, w1
  444e44:	and	w21, w21, w19
  444e48:	eor	w21, w21, w12
  444e4c:	add	w21, w21, w16
  444e50:	ldr	w16, [x0, #56]
  444e54:	mov	w18, #0x438e                	// #17294
  444e58:	movk	w18, #0xa679, lsl #16
  444e5c:	add	w18, w16, w18
  444e60:	add	w21, w18, w21
  444e64:	ror	w21, w21, #15
  444e68:	add	w21, w19, w21
  444e6c:	eor	w18, w1, w19
  444e70:	and	w18, w18, w21
  444e74:	eor	w18, w18, w1
  444e78:	add	w18, w18, w12
  444e7c:	ldr	w12, [x0, #60]
  444e80:	mov	w23, #0x821                 	// #2081
  444e84:	movk	w23, #0x49b4, lsl #16
  444e88:	add	w23, w12, w23
  444e8c:	add	w18, w23, w18
  444e90:	add	x0, x0, #0x40
  444e94:	ror	w18, w18, #10
  444e98:	add	w18, w21, w18
  444e9c:	eor	w23, w21, w18
  444ea0:	and	w23, w23, w19
  444ea4:	eor	w23, w23, w21
  444ea8:	add	w1, w23, w1
  444eac:	mov	w23, #0x2562                	// #9570
  444eb0:	movk	w23, #0xf61e, lsl #16
  444eb4:	add	w23, w7, w23
  444eb8:	add	w1, w23, w1
  444ebc:	ror	w1, w1, #27
  444ec0:	add	w1, w18, w1
  444ec4:	eor	w23, w18, w1
  444ec8:	and	w23, w23, w21
  444ecc:	eor	w23, w23, w18
  444ed0:	add	w19, w23, w19
  444ed4:	mov	w23, #0xb340                	// #45888
  444ed8:	movk	w23, #0xc040, lsl #16
  444edc:	add	w23, w11, w23
  444ee0:	add	w19, w23, w19
  444ee4:	ror	w19, w19, #23
  444ee8:	add	w19, w1, w19
  444eec:	eor	w23, w1, w19
  444ef0:	and	w23, w23, w18
  444ef4:	eor	w23, w23, w1
  444ef8:	add	w21, w23, w21
  444efc:	mov	w23, #0x5a51                	// #23121
  444f00:	movk	w23, #0x265e, lsl #16
  444f04:	add	w23, w13, w23
  444f08:	add	w21, w23, w21
  444f0c:	ror	w21, w21, #18
  444f10:	add	w21, w19, w21
  444f14:	eor	w23, w19, w21
  444f18:	and	w23, w23, w1
  444f1c:	eor	w23, w23, w19
  444f20:	add	w18, w23, w18
  444f24:	mov	w23, #0xc7aa                	// #51114
  444f28:	movk	w23, #0xe9b6, lsl #16
  444f2c:	add	w23, w8, w23
  444f30:	add	w18, w23, w18
  444f34:	ror	w18, w18, #12
  444f38:	add	w18, w21, w18
  444f3c:	eor	w23, w21, w18
  444f40:	and	w23, w23, w19
  444f44:	eor	w23, w23, w21
  444f48:	add	w1, w23, w1
  444f4c:	mov	w23, #0x105d                	// #4189
  444f50:	movk	w23, #0xd62f, lsl #16
  444f54:	add	w23, w15, w23
  444f58:	add	w1, w23, w1
  444f5c:	ror	w1, w1, #27
  444f60:	add	w1, w18, w1
  444f64:	eor	w23, w18, w1
  444f68:	and	w23, w23, w21
  444f6c:	eor	w23, w23, w18
  444f70:	add	w19, w23, w19
  444f74:	mov	w23, #0x1453                	// #5203
  444f78:	movk	w23, #0x244, lsl #16
  444f7c:	add	w23, w3, w23
  444f80:	add	w19, w23, w19
  444f84:	ror	w19, w19, #23
  444f88:	add	w19, w1, w19
  444f8c:	eor	w23, w1, w19
  444f90:	and	w23, w23, w18
  444f94:	eor	w23, w23, w1
  444f98:	add	w21, w23, w21
  444f9c:	mov	w23, #0xe681                	// #59009
  444fa0:	movk	w23, #0xd8a1, lsl #16
  444fa4:	add	w23, w12, w23
  444fa8:	add	w21, w23, w21
  444fac:	ror	w21, w21, #18
  444fb0:	add	w21, w19, w21
  444fb4:	eor	w23, w19, w21
  444fb8:	and	w23, w23, w1
  444fbc:	eor	w23, w23, w19
  444fc0:	add	w18, w23, w18
  444fc4:	mov	w23, #0xfbc8                	// #64456
  444fc8:	movk	w23, #0xe7d3, lsl #16
  444fcc:	add	w23, w9, w23
  444fd0:	add	w18, w23, w18
  444fd4:	ror	w18, w18, #12
  444fd8:	add	w18, w21, w18
  444fdc:	eor	w23, w21, w18
  444fe0:	and	w23, w23, w19
  444fe4:	eor	w23, w23, w21
  444fe8:	add	w1, w23, w1
  444fec:	mov	w23, #0xcde6                	// #52710
  444ff0:	movk	w23, #0x21e1, lsl #16
  444ff4:	add	w23, w5, w23
  444ff8:	add	w1, w23, w1
  444ffc:	ror	w1, w1, #27
  445000:	add	w1, w18, w1
  445004:	eor	w23, w18, w1
  445008:	and	w23, w23, w21
  44500c:	eor	w23, w23, w18
  445010:	add	w19, w23, w19
  445014:	mov	w23, #0x7d6                 	// #2006
  445018:	movk	w23, #0xc337, lsl #16
  44501c:	add	w23, w16, w23
  445020:	add	w19, w23, w19
  445024:	ror	w19, w19, #23
  445028:	add	w19, w1, w19
  44502c:	eor	w23, w1, w19
  445030:	and	w23, w23, w18
  445034:	eor	w23, w23, w1
  445038:	add	w23, w23, w21
  44503c:	mov	w21, #0xd87                 	// #3463
  445040:	movk	w21, #0xf4d5, lsl #16
  445044:	add	w21, w14, w21
  445048:	add	w21, w21, w23
  44504c:	ror	w21, w21, #18
  445050:	add	w21, w19, w21
  445054:	eor	w23, w19, w21
  445058:	and	w23, w23, w1
  44505c:	eor	w23, w23, w19
  445060:	add	w23, w23, w18
  445064:	mov	w18, #0x14ed                	// #5357
  445068:	movk	w18, #0x455a, lsl #16
  44506c:	add	w18, w20, w18
  445070:	add	w18, w18, w23
  445074:	ror	w18, w18, #12
  445078:	add	w18, w21, w18
  44507c:	eor	w23, w21, w18
  445080:	and	w23, w23, w19
  445084:	eor	w23, w23, w21
  445088:	add	w23, w23, w1
  44508c:	mov	w1, #0xe905                	// #59653
  445090:	movk	w1, #0xa9e3, lsl #16
  445094:	add	w1, w10, w1
  445098:	add	w1, w1, w23
  44509c:	ror	w1, w1, #27
  4450a0:	add	w1, w18, w1
  4450a4:	eor	w23, w18, w1
  4450a8:	and	w23, w23, w21
  4450ac:	eor	w23, w23, w18
  4450b0:	add	w23, w23, w19
  4450b4:	mov	w19, #0xa3f8                	// #41976
  4450b8:	movk	w19, #0xfcef, lsl #16
  4450bc:	add	w19, w6, w19
  4450c0:	add	w19, w19, w23
  4450c4:	ror	w19, w19, #23
  4450c8:	add	w19, w1, w19
  4450cc:	eor	w23, w1, w19
  4450d0:	and	w23, w23, w18
  4450d4:	eor	w23, w23, w1
  4450d8:	add	w21, w23, w21
  4450dc:	mov	w23, #0x2d9                 	// #729
  4450e0:	movk	w23, #0x676f, lsl #16
  4450e4:	add	w23, w17, w23
  4450e8:	add	w23, w23, w21
  4450ec:	ror	w23, w23, #18
  4450f0:	add	w23, w19, w23
  4450f4:	eor	w30, w19, w23
  4450f8:	and	w21, w30, w1
  4450fc:	eor	w21, w21, w19
  445100:	add	w21, w21, w18
  445104:	mov	w18, #0x4c8a                	// #19594
  445108:	movk	w18, #0x8d2a, lsl #16
  44510c:	add	w18, w4, w18
  445110:	add	w18, w18, w21
  445114:	ror	w18, w18, #12
  445118:	add	w18, w23, w18
  44511c:	eor	w30, w30, w18
  445120:	add	w1, w30, w1
  445124:	sub	w30, w15, #0x5c, lsl #12
  445128:	sub	w30, w30, #0x6be
  44512c:	add	w1, w30, w1
  445130:	ror	w1, w1, #28
  445134:	add	w1, w18, w1
  445138:	eor	w21, w23, w18
  44513c:	eor	w21, w21, w1
  445140:	add	w21, w21, w19
  445144:	mov	w19, #0xf681                	// #63105
  445148:	movk	w19, #0x8771, lsl #16
  44514c:	add	w19, w20, w19
  445150:	add	w19, w19, w21
  445154:	ror	w19, w19, #21
  445158:	add	w19, w1, w19
  44515c:	eor	w21, w18, w1
  445160:	eor	w21, w21, w19
  445164:	add	w21, w21, w23
  445168:	mov	w23, #0x6122                	// #24866
  44516c:	movk	w23, #0x6d9d, lsl #16
  445170:	add	w23, w13, w23
  445174:	add	w23, w23, w21
  445178:	ror	w23, w23, #16
  44517c:	add	w23, w19, w23
  445180:	eor	w21, w1, w19
  445184:	eor	w21, w21, w23
  445188:	add	w18, w21, w18
  44518c:	mov	w21, #0x380c                	// #14348
  445190:	movk	w21, #0xfde5, lsl #16
  445194:	add	w21, w16, w21
  445198:	add	w21, w21, w18
  44519c:	ror	w21, w21, #9
  4451a0:	add	w21, w23, w21
  4451a4:	eor	w18, w19, w23
  4451a8:	eor	w18, w18, w21
  4451ac:	add	w18, w18, w1
  4451b0:	mov	w1, #0xea44                	// #59972
  4451b4:	movk	w1, #0xa4be, lsl #16
  4451b8:	add	w1, w7, w1
  4451bc:	add	w1, w1, w18
  4451c0:	ror	w1, w1, #28
  4451c4:	add	w1, w21, w1
  4451c8:	eor	w18, w23, w21
  4451cc:	eor	w18, w18, w1
  4451d0:	add	w18, w18, w19
  4451d4:	mov	w19, #0xcfa9                	// #53161
  4451d8:	movk	w19, #0x4bde, lsl #16
  4451dc:	add	w19, w9, w19
  4451e0:	add	w19, w19, w18
  4451e4:	ror	w19, w19, #21
  4451e8:	add	w19, w1, w19
  4451ec:	eor	w18, w21, w1
  4451f0:	eor	w18, w18, w19
  4451f4:	add	w23, w18, w23
  4451f8:	mov	w18, #0x4b60                	// #19296
  4451fc:	movk	w18, #0xf6bb, lsl #16
  445200:	add	w18, w17, w18
  445204:	add	w18, w18, w23
  445208:	ror	w18, w18, #16
  44520c:	add	w18, w19, w18
  445210:	eor	w23, w1, w19
  445214:	eor	w23, w23, w18
  445218:	add	w23, w23, w21
  44521c:	mov	w21, #0xbc70                	// #48240
  445220:	movk	w21, #0xbebf, lsl #16
  445224:	add	w21, w3, w21
  445228:	add	w21, w21, w23
  44522c:	ror	w21, w21, #9
  445230:	add	w21, w18, w21
  445234:	eor	w23, w19, w18
  445238:	eor	w23, w23, w21
  44523c:	add	w23, w23, w1
  445240:	mov	w1, #0x7ec6                	// #32454
  445244:	movk	w1, #0x289b, lsl #16
  445248:	add	w1, w10, w1
  44524c:	add	w1, w1, w23
  445250:	ror	w1, w1, #28
  445254:	add	w1, w21, w1
  445258:	eor	w23, w18, w21
  44525c:	eor	w23, w23, w1
  445260:	add	w23, w23, w19
  445264:	mov	w19, #0x27fa                	// #10234
  445268:	movk	w19, #0xeaa1, lsl #16
  44526c:	add	w19, w8, w19
  445270:	add	w19, w19, w23
  445274:	ror	w19, w19, #21
  445278:	add	w19, w1, w19
  44527c:	eor	w23, w21, w1
  445280:	eor	w23, w23, w19
  445284:	add	w23, w23, w18
  445288:	mov	w18, #0x3085                	// #12421
  44528c:	movk	w18, #0xd4ef, lsl #16
  445290:	add	w18, w14, w18
  445294:	add	w18, w18, w23
  445298:	ror	w18, w18, #16
  44529c:	add	w18, w19, w18
  4452a0:	eor	w23, w1, w19
  4452a4:	eor	w23, w23, w18
  4452a8:	add	w23, w23, w21
  4452ac:	mov	w21, #0x1d05                	// #7429
  4452b0:	movk	w21, #0x488, lsl #16
  4452b4:	add	w21, w11, w21
  4452b8:	add	w21, w21, w23
  4452bc:	ror	w21, w21, #9
  4452c0:	add	w21, w18, w21
  4452c4:	eor	w23, w19, w18
  4452c8:	eor	w23, w23, w21
  4452cc:	add	w23, w23, w1
  4452d0:	mov	w1, #0xd039                	// #53305
  4452d4:	movk	w1, #0xd9d4, lsl #16
  4452d8:	add	w1, w5, w1
  4452dc:	add	w1, w1, w23
  4452e0:	ror	w1, w1, #28
  4452e4:	add	w1, w21, w1
  4452e8:	eor	w23, w18, w21
  4452ec:	eor	w23, w23, w1
  4452f0:	add	w23, w23, w19
  4452f4:	mov	w19, #0x99e5                	// #39397
  4452f8:	movk	w19, #0xe6db, lsl #16
  4452fc:	add	w19, w4, w19
  445300:	add	w19, w19, w23
  445304:	ror	w19, w19, #21
  445308:	add	w19, w1, w19
  44530c:	eor	w23, w21, w1
  445310:	eor	w23, w23, w19
  445314:	add	w23, w23, w18
  445318:	mov	w18, #0x7cf8                	// #31992
  44531c:	movk	w18, #0x1fa2, lsl #16
  445320:	add	w18, w12, w18
  445324:	add	w18, w18, w23
  445328:	ror	w18, w18, #16
  44532c:	add	w18, w19, w18
  445330:	eor	w23, w1, w19
  445334:	eor	w23, w23, w18
  445338:	add	w23, w23, w21
  44533c:	mov	w21, #0x5665                	// #22117
  445340:	movk	w21, #0xc4ac, lsl #16
  445344:	add	w21, w6, w21
  445348:	add	w21, w21, w23
  44534c:	ror	w21, w21, #9
  445350:	add	w21, w18, w21
  445354:	orn	w23, w21, w19
  445358:	eor	w23, w23, w18
  44535c:	add	w1, w23, w1
  445360:	mov	w23, #0x2244                	// #8772
  445364:	movk	w23, #0xf429, lsl #16
  445368:	add	w8, w8, w23
  44536c:	add	w8, w8, w1
  445370:	ror	w8, w8, #26
  445374:	add	w8, w21, w8
  445378:	orn	w1, w8, w18
  44537c:	eor	w1, w1, w21
  445380:	add	w1, w1, w19
  445384:	mov	w19, #0xff97                	// #65431
  445388:	movk	w19, #0x432a, lsl #16
  44538c:	add	w19, w17, w19
  445390:	add	w19, w19, w1
  445394:	ror	w19, w19, #22
  445398:	add	w19, w8, w19
  44539c:	orn	w1, w19, w21
  4453a0:	eor	w1, w1, w8
  4453a4:	add	w1, w1, w18
  4453a8:	mov	w18, #0x23a7                	// #9127
  4453ac:	movk	w18, #0xab94, lsl #16
  4453b0:	add	w18, w16, w18
  4453b4:	add	w18, w18, w1
  4453b8:	ror	w18, w18, #17
  4453bc:	add	w18, w19, w18
  4453c0:	orn	w17, w18, w8
  4453c4:	eor	w17, w17, w19
  4453c8:	add	w21, w17, w21
  4453cc:	mov	w17, #0xa039                	// #41017
  4453d0:	movk	w17, #0xfc93, lsl #16
  4453d4:	add	w17, w15, w17
  4453d8:	add	w17, w17, w21
  4453dc:	ror	w17, w17, #11
  4453e0:	add	w17, w18, w17
  4453e4:	orn	w1, w17, w19
  4453e8:	eor	w1, w1, w18
  4453ec:	add	w8, w1, w8
  4453f0:	mov	w1, #0x59c3                	// #22979
  4453f4:	movk	w1, #0x655b, lsl #16
  4453f8:	add	w1, w4, w1
  4453fc:	add	w1, w1, w8
  445400:	ror	w1, w1, #26
  445404:	add	w1, w17, w1
  445408:	orn	w16, w1, w18
  44540c:	eor	w16, w16, w17
  445410:	add	w19, w16, w19
  445414:	mov	w16, #0xcc92                	// #52370
  445418:	movk	w16, #0x8f0c, lsl #16
  44541c:	add	w16, w14, w16
  445420:	add	w16, w16, w19
  445424:	ror	w16, w16, #22
  445428:	add	w16, w1, w16
  44542c:	orn	w15, w16, w17
  445430:	eor	w15, w15, w1
  445434:	add	w18, w15, w18
  445438:	sub	w15, w3, #0x100, lsl #12
  44543c:	sub	w15, w15, #0xb83
  445440:	add	w15, w15, w18
  445444:	ror	w15, w15, #17
  445448:	add	w15, w16, w15
  44544c:	orn	w14, w15, w1
  445450:	eor	w14, w14, w16
  445454:	add	w17, w14, w17
  445458:	mov	w14, #0x5dd1                	// #24017
  44545c:	movk	w14, #0x8584, lsl #16
  445460:	add	w14, w7, w14
  445464:	add	w14, w14, w17
  445468:	ror	w14, w14, #11
  44546c:	add	w14, w15, w14
  445470:	orn	w8, w14, w16
  445474:	eor	w8, w8, w15
  445478:	add	w1, w8, w1
  44547c:	mov	w8, #0x7e4f                	// #32335
  445480:	movk	w8, #0x6fa8, lsl #16
  445484:	add	w8, w20, w8
  445488:	add	w8, w8, w1
  44548c:	ror	w8, w8, #26
  445490:	add	w8, w14, w8
  445494:	orn	w4, w8, w15
  445498:	eor	w4, w4, w14
  44549c:	add	w16, w4, w16
  4454a0:	mov	w4, #0xe6e0                	// #59104
  4454a4:	movk	w4, #0xfe2c, lsl #16
  4454a8:	add	w4, w12, w4
  4454ac:	add	w4, w4, w16
  4454b0:	ror	w4, w4, #22
  4454b4:	add	w4, w8, w4
  4454b8:	orn	w3, w4, w14
  4454bc:	eor	w3, w3, w8
  4454c0:	add	w15, w3, w15
  4454c4:	mov	w3, #0x4314                	// #17172
  4454c8:	movk	w3, #0xa301, lsl #16
  4454cc:	add	w3, w11, w3
  4454d0:	add	w3, w3, w15
  4454d4:	ror	w3, w3, #17
  4454d8:	add	w3, w4, w3
  4454dc:	orn	w7, w3, w8
  4454e0:	eor	w7, w7, w4
  4454e4:	add	w14, w7, w14
  4454e8:	mov	w7, #0x11a1                	// #4513
  4454ec:	movk	w7, #0x4e08, lsl #16
  4454f0:	add	w7, w10, w7
  4454f4:	add	w7, w7, w14
  4454f8:	ror	w7, w7, #11
  4454fc:	add	w7, w3, w7
  445500:	orn	w1, w7, w4
  445504:	eor	w1, w1, w3
  445508:	add	w8, w1, w8
  44550c:	mov	w1, #0x7e82                	// #32386
  445510:	movk	w1, #0xf753, lsl #16
  445514:	add	w1, w9, w1
  445518:	add	w1, w1, w8
  44551c:	ror	w1, w1, #26
  445520:	add	w1, w7, w1
  445524:	orn	w8, w1, w3
  445528:	eor	w8, w8, w7
  44552c:	add	w8, w8, w4
  445530:	mov	w4, #0xf235                	// #62005
  445534:	movk	w4, #0xbd3a, lsl #16
  445538:	add	w4, w13, w4
  44553c:	add	w4, w4, w8
  445540:	ror	w4, w4, #22
  445544:	add	w4, w1, w4
  445548:	orn	w8, w4, w7
  44554c:	eor	w8, w8, w1
  445550:	add	w8, w8, w3
  445554:	mov	w3, #0xd2bb                	// #53947
  445558:	movk	w3, #0x2ad7, lsl #16
  44555c:	add	w3, w6, w3
  445560:	add	w3, w3, w8
  445564:	ror	w3, w3, #17
  445568:	add	w3, w4, w3
  44556c:	orn	w6, w3, w1
  445570:	eor	w6, w6, w4
  445574:	add	w7, w6, w7
  445578:	mov	w6, #0xd391                	// #54161
  44557c:	movk	w6, #0xeb86, lsl #16
  445580:	add	w5, w5, w6
  445584:	add	w5, w5, w7
  445588:	ror	w5, w5, #11
  44558c:	add	w5, w3, w5
  445590:	add	w26, w26, w1
  445594:	add	w22, w22, w5
  445598:	add	w24, w24, w3
  44559c:	add	w25, w25, w4
  4455a0:	cmp	x27, x0
  4455a4:	b.hi	444be4 <ferror@plt+0x42314>  // b.pmore
  4455a8:	ldp	x19, x20, [sp, #16]
  4455ac:	str	w26, [x2]
  4455b0:	str	w22, [x2, #4]
  4455b4:	str	w24, [x2, #8]
  4455b8:	str	w25, [x2, #12]
  4455bc:	ldp	x21, x22, [sp, #32]
  4455c0:	ldp	x23, x24, [sp, #48]
  4455c4:	ldp	x25, x26, [sp, #64]
  4455c8:	ldp	x27, x28, [sp, #80]
  4455cc:	ldp	x29, x30, [sp], #96
  4455d0:	ret
  4455d4:	stp	x29, x30, [sp, #-48]!
  4455d8:	mov	x29, sp
  4455dc:	stp	x19, x20, [sp, #16]
  4455e0:	stp	x21, x22, [sp, #32]
  4455e4:	mov	x19, x0
  4455e8:	mov	x22, x1
  4455ec:	ldr	w0, [x0, #24]
  4455f0:	ldr	w2, [x19, #16]
  4455f4:	add	w2, w0, w2
  4455f8:	str	w2, [x19, #16]
  4455fc:	cmp	w2, w0
  445600:	b.cs	445610 <ferror@plt+0x42d40>  // b.hs, b.nlast
  445604:	ldr	w1, [x19, #20]
  445608:	add	w1, w1, #0x1
  44560c:	str	w1, [x19, #20]
  445610:	mov	w20, #0x78                  	// #120
  445614:	sub	w1, w20, w0
  445618:	mov	w20, #0x38                  	// #56
  44561c:	sub	w20, w20, w0
  445620:	cmp	w0, #0x38
  445624:	csel	x20, x20, x1, cc  // cc = lo, ul, last
  445628:	mov	w21, w0
  44562c:	add	x0, x21, #0x1c
  445630:	mov	x2, x20
  445634:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1f094>
  445638:	add	x1, x1, #0x508
  44563c:	add	x0, x19, x0
  445640:	bl	402260 <memcpy@plt>
  445644:	ldr	w2, [x19, #16]
  445648:	add	x20, x20, x21
  44564c:	add	x1, x19, x20
  445650:	lsl	w0, w2, #3
  445654:	str	w0, [x1, #28]
  445658:	ldr	w0, [x19, #20]
  44565c:	extr	w0, w0, w2, #29
  445660:	str	w0, [x1, #32]
  445664:	mov	x2, x19
  445668:	add	x1, x20, #0x8
  44566c:	add	x0, x19, #0x1c
  445670:	bl	444b7c <ferror@plt+0x422ac>
  445674:	mov	x1, x22
  445678:	mov	x0, x19
  44567c:	bl	444b40 <ferror@plt+0x42270>
  445680:	ldp	x19, x20, [sp, #16]
  445684:	ldp	x21, x22, [sp, #32]
  445688:	ldp	x29, x30, [sp], #48
  44568c:	ret
  445690:	stp	x29, x30, [sp, #-80]!
  445694:	mov	x29, sp
  445698:	stp	x19, x20, [sp, #16]
  44569c:	stp	x21, x22, [sp, #32]
  4456a0:	stp	x23, x24, [sp, #48]
  4456a4:	mov	x19, x0
  4456a8:	mov	x22, x1
  4456ac:	mov	x21, x2
  4456b0:	ldr	w24, [x2, #24]
  4456b4:	cbnz	w24, 445748 <ferror@plt+0x42e78>
  4456b8:	cmp	x22, #0x40
  4456bc:	b.ls	445730 <ferror@plt+0x42e60>  // b.plast
  4456c0:	tst	x19, #0x3
  4456c4:	b.eq	4457d8 <ferror@plt+0x42f08>  // b.none
  4456c8:	stp	x25, x26, [sp, #64]
  4456cc:	sub	x25, x22, #0x41
  4456d0:	lsr	x25, x25, #6
  4456d4:	add	x23, x25, #0x1
  4456d8:	add	x23, x19, x23, lsl #6
  4456dc:	add	x20, x21, #0x1c
  4456e0:	mov	x24, #0x40                  	// #64
  4456e4:	ldp	x0, x1, [x19]
  4456e8:	stp	x0, x1, [x20]
  4456ec:	ldp	x0, x1, [x19, #16]
  4456f0:	stp	x0, x1, [x20, #16]
  4456f4:	ldp	x0, x1, [x19, #32]
  4456f8:	stp	x0, x1, [x20, #32]
  4456fc:	ldp	x0, x1, [x19, #48]
  445700:	stp	x0, x1, [x20, #48]
  445704:	mov	x2, x21
  445708:	mov	x1, x24
  44570c:	mov	x0, x20
  445710:	bl	444b7c <ferror@plt+0x422ac>
  445714:	add	x19, x19, #0x40
  445718:	cmp	x19, x23
  44571c:	b.ne	4456e4 <ferror@plt+0x42e14>  // b.any
  445720:	sub	x22, x22, #0x40
  445724:	sub	x22, x22, x25, lsl #6
  445728:	mov	x19, x23
  44572c:	ldp	x25, x26, [sp, #64]
  445730:	cbnz	x22, 4457f8 <ferror@plt+0x42f28>
  445734:	ldp	x19, x20, [sp, #16]
  445738:	ldp	x21, x22, [sp, #32]
  44573c:	ldp	x23, x24, [sp, #48]
  445740:	ldp	x29, x30, [sp], #80
  445744:	ret
  445748:	mov	w23, w24
  44574c:	mov	x20, #0x80                  	// #128
  445750:	sub	x20, x20, x23
  445754:	cmp	x20, x1
  445758:	csel	x20, x20, x1, ls  // ls = plast
  44575c:	add	x0, x23, #0x1c
  445760:	mov	x2, x20
  445764:	mov	x1, x19
  445768:	add	x0, x21, x0
  44576c:	bl	402260 <memcpy@plt>
  445770:	ldr	w0, [x21, #24]
  445774:	add	w0, w0, w20
  445778:	str	w0, [x21, #24]
  44577c:	add	x23, x23, x20
  445780:	cmp	x23, #0x40
  445784:	b.hi	445794 <ferror@plt+0x42ec4>  // b.pmore
  445788:	add	x19, x19, x20
  44578c:	sub	x22, x22, x20
  445790:	b	4456b8 <ferror@plt+0x42de8>
  445794:	stp	x25, x26, [sp, #64]
  445798:	add	x25, x21, #0x1c
  44579c:	and	x26, x23, #0xffffffffffffffc0
  4457a0:	mov	x2, x21
  4457a4:	mov	x1, x26
  4457a8:	mov	x0, x25
  4457ac:	bl	444b7c <ferror@plt+0x422ac>
  4457b0:	add	x1, x26, #0x1c
  4457b4:	and	x2, x23, #0x3f
  4457b8:	add	x1, x21, x1
  4457bc:	mov	x0, x25
  4457c0:	bl	402260 <memcpy@plt>
  4457c4:	add	w0, w24, w20
  4457c8:	and	w0, w0, #0x3f
  4457cc:	str	w0, [x21, #24]
  4457d0:	ldp	x25, x26, [sp, #64]
  4457d4:	b	445788 <ferror@plt+0x42eb8>
  4457d8:	and	x20, x22, #0xffffffffffffffc0
  4457dc:	mov	x2, x21
  4457e0:	mov	x1, x20
  4457e4:	mov	x0, x19
  4457e8:	bl	444b7c <ferror@plt+0x422ac>
  4457ec:	add	x19, x19, x20
  4457f0:	and	x22, x22, #0x3f
  4457f4:	b	445730 <ferror@plt+0x42e60>
  4457f8:	mov	x2, x22
  4457fc:	mov	x1, x19
  445800:	add	x0, x21, #0x1c
  445804:	bl	402260 <memcpy@plt>
  445808:	str	w22, [x21, #24]
  44580c:	b	445734 <ferror@plt+0x42e64>
  445810:	stp	x29, x30, [sp, #-208]!
  445814:	mov	x29, sp
  445818:	stp	x19, x20, [sp, #16]
  44581c:	str	x21, [sp, #32]
  445820:	mov	x20, x0
  445824:	mov	x21, x1
  445828:	mov	x19, x2
  44582c:	add	x0, sp, #0x30
  445830:	bl	444b00 <ferror@plt+0x42230>
  445834:	add	x2, sp, #0x30
  445838:	mov	x1, x21
  44583c:	mov	x0, x20
  445840:	bl	445690 <ferror@plt+0x42dc0>
  445844:	mov	x1, x19
  445848:	add	x0, sp, #0x30
  44584c:	bl	4455d4 <ferror@plt+0x42d04>
  445850:	ldp	x19, x20, [sp, #16]
  445854:	ldr	x21, [sp, #32]
  445858:	ldp	x29, x30, [sp], #208
  44585c:	ret
  445860:	mov	x12, #0x1130                	// #4400
  445864:	sub	sp, sp, x12
  445868:	stp	x29, x30, [sp]
  44586c:	mov	x29, sp
  445870:	stp	x19, x20, [sp, #16]
  445874:	stp	x21, x22, [sp, #32]
  445878:	str	x23, [sp, #48]
  44587c:	mov	x21, x0
  445880:	mov	x23, x1
  445884:	add	x0, sp, #0x1, lsl #12
  445888:	add	x0, x0, #0x90
  44588c:	bl	444b00 <ferror@plt+0x42230>
  445890:	mov	x20, #0x1000                	// #4096
  445894:	mov	x22, #0x1                   	// #1
  445898:	b	4458d0 <ferror@plt+0x43000>
  44589c:	add	x2, sp, #0x1, lsl #12
  4458a0:	add	x2, x2, #0x90
  4458a4:	mov	x1, x19
  4458a8:	add	x0, sp, #0x48
  4458ac:	bl	445690 <ferror@plt+0x42dc0>
  4458b0:	b	445914 <ferror@plt+0x43044>
  4458b4:	mov	w20, #0x1                   	// #1
  4458b8:	b	445924 <ferror@plt+0x43054>
  4458bc:	add	x2, sp, #0x1, lsl #12
  4458c0:	add	x2, x2, #0x90
  4458c4:	mov	x1, x20
  4458c8:	add	x0, sp, #0x48
  4458cc:	bl	444b7c <ferror@plt+0x422ac>
  4458d0:	mov	x19, #0x0                   	// #0
  4458d4:	mov	x3, x21
  4458d8:	sub	x2, x20, x19
  4458dc:	mov	x1, x22
  4458e0:	add	x0, sp, #0x48
  4458e4:	add	x0, x0, x19
  4458e8:	bl	402660 <fread@plt>
  4458ec:	add	x19, x19, x0
  4458f0:	cmp	x19, #0xfff
  4458f4:	ccmp	x0, #0x0, #0x4, ls  // ls = plast
  4458f8:	b.ne	4458d4 <ferror@plt+0x43004>  // b.any
  4458fc:	cbnz	x0, 4458bc <ferror@plt+0x42fec>
  445900:	mov	x0, x21
  445904:	bl	4028d0 <ferror@plt>
  445908:	mov	w20, w0
  44590c:	cbnz	w0, 4458b4 <ferror@plt+0x42fe4>
  445910:	cbnz	x19, 44589c <ferror@plt+0x42fcc>
  445914:	mov	x1, x23
  445918:	add	x0, sp, #0x1, lsl #12
  44591c:	add	x0, x0, #0x90
  445920:	bl	4455d4 <ferror@plt+0x42d04>
  445924:	mov	w0, w20
  445928:	ldp	x19, x20, [sp, #16]
  44592c:	ldp	x21, x22, [sp, #32]
  445930:	ldr	x23, [sp, #48]
  445934:	ldp	x29, x30, [sp]
  445938:	mov	x12, #0x1130                	// #4400
  44593c:	add	sp, sp, x12
  445940:	ret
  445944:	stp	x29, x30, [sp, #-16]!
  445948:	mov	x29, sp
  44594c:	bl	402620 <strcmp@plt>
  445950:	ldp	x29, x30, [sp], #16
  445954:	ret
  445958:	stp	x29, x30, [sp, #-16]!
  44595c:	mov	x29, sp
  445960:	bl	402440 <strncmp@plt>
  445964:	ldp	x29, x30, [sp], #16
  445968:	ret
  44596c:	mov	x2, x0
  445970:	ldrb	w1, [x2], #1
  445974:	cbz	w1, 4459b0 <ferror@plt+0x430e0>
  445978:	mov	w0, #0x0                   	// #0
  44597c:	mov	w5, #0x2f                  	// #47
  445980:	mov	w4, #0x43                  	// #67
  445984:	adrp	x3, 466000 <_obstack_memory_used@@Base+0x1f094>
  445988:	add	x3, x3, #0x968
  44598c:	cmp	w1, #0x5c
  445990:	csel	w1, w1, w5, ne  // ne = any
  445994:	mul	w0, w0, w4
  445998:	sub	w0, w0, #0x71
  44599c:	ldrb	w1, [x3, w1, sxtw]
  4459a0:	add	w0, w1, w0
  4459a4:	ldrb	w1, [x2], #1
  4459a8:	cbnz	w1, 44598c <ferror@plt+0x430bc>
  4459ac:	ret
  4459b0:	mov	w0, #0x0                   	// #0
  4459b4:	b	4459ac <ferror@plt+0x430dc>
  4459b8:	stp	x29, x30, [sp, #-16]!
  4459bc:	mov	x29, sp
  4459c0:	bl	402620 <strcmp@plt>
  4459c4:	cmp	w0, #0x0
  4459c8:	cset	w0, eq  // eq = none
  4459cc:	ldp	x29, x30, [sp], #16
  4459d0:	ret
  4459d4:	stp	x29, x30, [sp, #-48]!
  4459d8:	mov	x29, sp
  4459dc:	stp	x19, x20, [sp, #16]
  4459e0:	str	x21, [sp, #32]
  4459e4:	mov	x19, x1
  4459e8:	bl	446bbc <ferror@plt+0x442ec>
  4459ec:	mov	x20, x0
  4459f0:	mov	x0, x19
  4459f4:	bl	446bbc <ferror@plt+0x442ec>
  4459f8:	mov	x19, x0
  4459fc:	mov	x1, x0
  445a00:	mov	x0, x20
  445a04:	bl	4459b8 <ferror@plt+0x430e8>
  445a08:	mov	w21, w0
  445a0c:	mov	x0, x20
  445a10:	bl	402690 <free@plt>
  445a14:	mov	x0, x19
  445a18:	bl	402690 <free@plt>
  445a1c:	mov	w0, w21
  445a20:	ldp	x19, x20, [sp, #16]
  445a24:	ldr	x21, [sp, #32]
  445a28:	ldp	x29, x30, [sp], #48
  445a2c:	ret
  445a30:	cbz	x0, 445a4c <ferror@plt+0x4317c>
  445a34:	stp	x29, x30, [sp, #-16]!
  445a38:	mov	x29, sp
  445a3c:	mov	w1, #0x2                   	// #2
  445a40:	bl	4027d0 <__fsetlocking@plt>
  445a44:	ldp	x29, x30, [sp], #16
  445a48:	ret
  445a4c:	ret
  445a50:	stp	x29, x30, [sp, #-16]!
  445a54:	mov	x29, sp
  445a58:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  445a5c:	ldr	x0, [x0, #1344]
  445a60:	cbz	x0, 445a6c <ferror@plt+0x4319c>
  445a64:	mov	w1, #0x2                   	// #2
  445a68:	bl	4027d0 <__fsetlocking@plt>
  445a6c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  445a70:	ldr	x0, [x0, #1336]
  445a74:	cbz	x0, 445a80 <ferror@plt+0x431b0>
  445a78:	mov	w1, #0x2                   	// #2
  445a7c:	bl	4027d0 <__fsetlocking@plt>
  445a80:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  445a84:	ldr	x0, [x0, #1320]
  445a88:	cbz	x0, 445a94 <ferror@plt+0x431c4>
  445a8c:	mov	w1, #0x2                   	// #2
  445a90:	bl	4027d0 <__fsetlocking@plt>
  445a94:	ldp	x29, x30, [sp], #16
  445a98:	ret
  445a9c:	stp	x29, x30, [sp, #-32]!
  445aa0:	mov	x29, sp
  445aa4:	str	x19, [sp, #16]
  445aa8:	bl	4023f0 <fopen@plt>
  445aac:	mov	x19, x0
  445ab0:	cbz	x0, 445abc <ferror@plt+0x431ec>
  445ab4:	mov	w1, #0x2                   	// #2
  445ab8:	bl	4027d0 <__fsetlocking@plt>
  445abc:	mov	x0, x19
  445ac0:	ldr	x19, [sp, #16]
  445ac4:	ldp	x29, x30, [sp], #32
  445ac8:	ret
  445acc:	stp	x29, x30, [sp, #-32]!
  445ad0:	mov	x29, sp
  445ad4:	str	x19, [sp, #16]
  445ad8:	bl	4024a0 <fdopen@plt>
  445adc:	mov	x19, x0
  445ae0:	cbz	x0, 445aec <ferror@plt+0x4321c>
  445ae4:	mov	w1, #0x2                   	// #2
  445ae8:	bl	4027d0 <__fsetlocking@plt>
  445aec:	mov	x0, x19
  445af0:	ldr	x19, [sp, #16]
  445af4:	ldp	x29, x30, [sp], #32
  445af8:	ret
  445afc:	stp	x29, x30, [sp, #-32]!
  445b00:	mov	x29, sp
  445b04:	str	x19, [sp, #16]
  445b08:	bl	4026b0 <freopen@plt>
  445b0c:	mov	x19, x0
  445b10:	cbz	x0, 445b1c <ferror@plt+0x4324c>
  445b14:	mov	w1, #0x2                   	// #2
  445b18:	bl	4027d0 <__fsetlocking@plt>
  445b1c:	mov	x0, x19
  445b20:	ldr	x19, [sp, #16]
  445b24:	ldp	x29, x30, [sp], #32
  445b28:	ret
  445b2c:	cmp	x1, x0
  445b30:	cset	w0, eq  // eq = none
  445b34:	ret
  445b38:	asr	x1, x0, #32
  445b3c:	sub	w1, w1, w0
  445b40:	mov	w2, #0xadcc                	// #44492
  445b44:	movk	w2, #0xbdec, lsl #16
  445b48:	add	w1, w1, w2
  445b4c:	mov	w2, #0x109a                	// #4250
  445b50:	movk	w2, #0x2, lsl #16
  445b54:	eor	w1, w1, w2
  445b58:	mov	w2, #0x2785                	// #10117
  445b5c:	movk	w2, #0x5c24, lsl #16
  445b60:	add	w0, w2, w0
  445b64:	sub	w0, w0, w1
  445b68:	eor	w0, w0, w1, lsl #8
  445b6c:	mov	w3, #0x5234                	// #21044
  445b70:	movk	w3, #0x4213, lsl #16
  445b74:	sub	w3, w3, w1
  445b78:	sub	w3, w3, w0
  445b7c:	eor	w3, w3, w0, lsr #13
  445b80:	sub	w1, w1, w0
  445b84:	sub	w1, w1, w3
  445b88:	eor	w1, w1, w3, lsr #12
  445b8c:	sub	w0, w0, w3
  445b90:	sub	w0, w0, w1
  445b94:	eor	w0, w0, w1, lsl #16
  445b98:	sub	w3, w3, w1
  445b9c:	sub	w3, w3, w0
  445ba0:	eor	w3, w3, w0, lsr #5
  445ba4:	sub	w1, w1, w0
  445ba8:	sub	w1, w1, w3
  445bac:	eor	w1, w1, w3, lsr #3
  445bb0:	sub	w2, w0, w3
  445bb4:	sub	w2, w2, w1
  445bb8:	eor	w2, w2, w1, lsl #10
  445bbc:	sub	w1, w3, w1
  445bc0:	sub	w0, w1, w2
  445bc4:	eor	w0, w0, w2, lsr #15
  445bc8:	ret
  445bcc:	mov	x2, x0
  445bd0:	mov	w3, #0x1e                  	// #30
  445bd4:	mov	w0, #0x0                   	// #0
  445bd8:	adrp	x5, 466000 <_obstack_memory_used@@Base+0x1f094>
  445bdc:	add	x5, x5, #0x570
  445be0:	cmp	w3, w0
  445be4:	b.eq	445c10 <ferror@plt+0x43340>  // b.none
  445be8:	sub	w1, w3, w0
  445bec:	add	w1, w0, w1, lsr #1
  445bf0:	ubfiz	x4, x1, #4, #32
  445bf4:	ldr	w4, [x5, x4]
  445bf8:	cmp	x4, x2
  445bfc:	b.cc	445c08 <ferror@plt+0x43338>  // b.lo, b.ul, b.last
  445c00:	mov	w3, w1
  445c04:	b	445be0 <ferror@plt+0x43310>
  445c08:	add	w0, w1, #0x1
  445c0c:	b	445be0 <ferror@plt+0x43310>
  445c10:	ubfiz	x1, x0, #4, #32
  445c14:	adrp	x3, 466000 <_obstack_memory_used@@Base+0x1f094>
  445c18:	add	x3, x3, #0x570
  445c1c:	ldr	w1, [x3, x1]
  445c20:	cmp	x1, x2
  445c24:	b.cc	445c2c <ferror@plt+0x4335c>  // b.lo, b.ul, b.last
  445c28:	ret
  445c2c:	stp	x29, x30, [sp, #-16]!
  445c30:	mov	x29, sp
  445c34:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1f094>
  445c38:	add	x1, x1, #0x548
  445c3c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  445c40:	ldr	x0, [x0, #1320]
  445c44:	bl	402890 <fprintf@plt>
  445c48:	bl	402590 <abort@plt>
  445c4c:	stp	x29, x30, [sp, #-64]!
  445c50:	mov	x29, sp
  445c54:	stp	x19, x20, [sp, #16]
  445c58:	stp	x21, x22, [sp, #32]
  445c5c:	stp	x23, x24, [sp, #48]
  445c60:	mov	x19, x0
  445c64:	ldr	x24, [x0, #24]
  445c68:	ldr	x20, [x0, #32]
  445c6c:	add	x23, x24, x20, lsl #3
  445c70:	ldr	x1, [x0, #40]
  445c74:	ldr	x0, [x0, #48]
  445c78:	sub	x1, x1, x0
  445c7c:	lsl	x0, x1, #1
  445c80:	cmp	x20, x1, lsl #1
  445c84:	b.cc	445cf0 <ferror@plt+0x43420>  // b.lo, b.ul, b.last
  445c88:	lsl	x1, x1, #3
  445c8c:	cmp	x1, #0x20
  445c90:	mov	x2, #0x20                  	// #32
  445c94:	csel	x1, x1, x2, cs  // cs = hs, nlast
  445c98:	cmp	x20, x1
  445c9c:	b.hi	445cf0 <ferror@plt+0x43420>  // b.pmore
  445ca0:	ldr	w21, [x19, #104]
  445ca4:	ldr	x3, [x19, #88]
  445ca8:	cbz	x3, 445d0c <ferror@plt+0x4343c>
  445cac:	mov	x2, #0x8                   	// #8
  445cb0:	mov	x1, x20
  445cb4:	ldr	x0, [x19, #80]
  445cb8:	blr	x3
  445cbc:	cbz	x0, 445e38 <ferror@plt+0x43568>
  445cc0:	str	x0, [x19, #24]
  445cc4:	str	x20, [x19, #32]
  445cc8:	str	w21, [x19, #104]
  445ccc:	ldr	x0, [x19, #40]
  445cd0:	ldr	x1, [x19, #48]
  445cd4:	sub	x0, x0, x1
  445cd8:	str	x0, [x19, #40]
  445cdc:	str	xzr, [x19, #48]
  445ce0:	mov	x20, x24
  445ce4:	adrp	x22, 466000 <_obstack_memory_used@@Base+0x1f094>
  445ce8:	add	x22, x22, #0x570
  445cec:	b	445d34 <ferror@plt+0x43464>
  445cf0:	bl	445bcc <ferror@plt+0x432fc>
  445cf4:	mov	w21, w0
  445cf8:	ubfiz	x1, x21, #4, #32
  445cfc:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1f094>
  445d00:	add	x0, x0, #0x570
  445d04:	ldr	w20, [x0, x1]
  445d08:	b	445ca4 <ferror@plt+0x433d4>
  445d0c:	ldr	x2, [x19, #64]
  445d10:	mov	x1, #0x8                   	// #8
  445d14:	mov	x0, x20
  445d18:	blr	x2
  445d1c:	b	445cbc <ferror@plt+0x433ec>
  445d20:	bl	402590 <abort@plt>
  445d24:	str	x21, [x6]
  445d28:	add	x20, x20, #0x8
  445d2c:	cmp	x23, x20
  445d30:	b.ls	445df0 <ferror@plt+0x43520>  // b.plast
  445d34:	ldr	x21, [x20]
  445d38:	cmp	x21, #0x1
  445d3c:	b.ls	445d28 <ferror@plt+0x43458>  // b.plast
  445d40:	ldr	x1, [x19]
  445d44:	mov	x0, x21
  445d48:	blr	x1
  445d4c:	ldr	w3, [x19, #104]
  445d50:	ubfiz	x2, x3, #4, #32
  445d54:	add	x1, x22, x2
  445d58:	ldr	w5, [x22, x2]
  445d5c:	ldr	w7, [x1, #12]
  445d60:	mov	w8, w0
  445d64:	ldr	w1, [x1, #4]
  445d68:	mul	x1, x1, x8
  445d6c:	lsr	x2, x1, #32
  445d70:	sub	w1, w0, w2
  445d74:	add	w1, w2, w1, lsr #1
  445d78:	lsr	w1, w1, w7
  445d7c:	msub	w1, w1, w5, w0
  445d80:	ldr	x2, [x19, #24]
  445d84:	add	x6, x2, w1, uxtw #3
  445d88:	ldr	x4, [x2, w1, uxtw #3]
  445d8c:	cbz	x4, 445d24 <ferror@plt+0x43454>
  445d90:	cmp	x4, #0x1
  445d94:	b.eq	445d20 <ferror@plt+0x43450>  // b.none
  445d98:	ldr	x4, [x19, #32]
  445d9c:	ubfiz	x3, x3, #4, #32
  445da0:	add	x3, x22, x3
  445da4:	ldr	w3, [x3, #8]
  445da8:	mul	x3, x3, x8
  445dac:	lsr	x3, x3, #32
  445db0:	add	w6, w0, #0x1
  445db4:	sub	w0, w0, w3
  445db8:	add	w0, w3, w0, lsr #1
  445dbc:	lsr	w0, w0, w7
  445dc0:	sub	w5, w5, #0x2
  445dc4:	msub	w0, w0, w5, w6
  445dc8:	add	w1, w1, w0
  445dcc:	sub	w3, w1, w4
  445dd0:	cmp	x4, w1, uxtw
  445dd4:	csel	w1, w3, w1, ls  // ls = plast
  445dd8:	add	x6, x2, w1, uxtw #3
  445ddc:	ldr	x3, [x2, w1, uxtw #3]
  445de0:	cbz	x3, 445d24 <ferror@plt+0x43454>
  445de4:	cmp	x3, #0x1
  445de8:	b.ne	445dc8 <ferror@plt+0x434f8>  // b.any
  445dec:	bl	402590 <abort@plt>
  445df0:	ldr	x1, [x19, #72]
  445df4:	cbz	x1, 445e18 <ferror@plt+0x43548>
  445df8:	mov	x0, x24
  445dfc:	blr	x1
  445e00:	mov	w0, #0x1                   	// #1
  445e04:	ldp	x19, x20, [sp, #16]
  445e08:	ldp	x21, x22, [sp, #32]
  445e0c:	ldp	x23, x24, [sp, #48]
  445e10:	ldp	x29, x30, [sp], #64
  445e14:	ret
  445e18:	ldr	x2, [x19, #96]
  445e1c:	mov	w0, #0x1                   	// #1
  445e20:	cbz	x2, 445e04 <ferror@plt+0x43534>
  445e24:	mov	x1, x24
  445e28:	ldr	x0, [x19, #80]
  445e2c:	blr	x2
  445e30:	mov	w0, #0x1                   	// #1
  445e34:	b	445e04 <ferror@plt+0x43534>
  445e38:	mov	w0, #0x0                   	// #0
  445e3c:	b	445e04 <ferror@plt+0x43534>
  445e40:	ldr	x0, [x0, #32]
  445e44:	ret
  445e48:	ldr	x1, [x0, #40]
  445e4c:	ldr	x0, [x0, #48]
  445e50:	sub	x0, x1, x0
  445e54:	ret
  445e58:	stp	x29, x30, [sp, #-96]!
  445e5c:	mov	x29, sp
  445e60:	stp	x19, x20, [sp, #16]
  445e64:	stp	x21, x22, [sp, #32]
  445e68:	stp	x23, x24, [sp, #48]
  445e6c:	stp	x25, x26, [sp, #64]
  445e70:	stp	x27, x28, [sp, #80]
  445e74:	mov	x27, x1
  445e78:	mov	x26, x2
  445e7c:	mov	x25, x3
  445e80:	mov	x20, x4
  445e84:	mov	x21, x5
  445e88:	mov	x24, x6
  445e8c:	bl	445bcc <ferror@plt+0x432fc>
  445e90:	mov	w22, w0
  445e94:	ubfiz	x1, x22, #4, #32
  445e98:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1f094>
  445e9c:	add	x0, x0, #0x570
  445ea0:	ldr	w28, [x0, x1]
  445ea4:	mov	x2, #0x70                  	// #112
  445ea8:	mov	x1, #0x1                   	// #1
  445eac:	mov	x0, x20
  445eb0:	blr	x21
  445eb4:	mov	x19, x0
  445eb8:	cbz	x0, 445ef8 <ferror@plt+0x43628>
  445ebc:	mov	x2, #0x8                   	// #8
  445ec0:	mov	x1, x28
  445ec4:	mov	x0, x20
  445ec8:	blr	x21
  445ecc:	mov	x23, x0
  445ed0:	str	x0, [x19, #24]
  445ed4:	cbz	x0, 445f18 <ferror@plt+0x43648>
  445ed8:	str	x28, [x19, #32]
  445edc:	str	w22, [x19, #104]
  445ee0:	str	x27, [x19]
  445ee4:	str	x26, [x19, #8]
  445ee8:	str	x25, [x19, #16]
  445eec:	str	x20, [x19, #80]
  445ef0:	str	x21, [x19, #88]
  445ef4:	str	x24, [x19, #96]
  445ef8:	mov	x0, x19
  445efc:	ldp	x19, x20, [sp, #16]
  445f00:	ldp	x21, x22, [sp, #32]
  445f04:	ldp	x23, x24, [sp, #48]
  445f08:	ldp	x25, x26, [sp, #64]
  445f0c:	ldp	x27, x28, [sp, #80]
  445f10:	ldp	x29, x30, [sp], #96
  445f14:	ret
  445f18:	cbz	x24, 445f30 <ferror@plt+0x43660>
  445f1c:	mov	x1, x19
  445f20:	mov	x0, x20
  445f24:	blr	x24
  445f28:	mov	x19, x23
  445f2c:	b	445ef8 <ferror@plt+0x43628>
  445f30:	mov	x19, x0
  445f34:	b	445ef8 <ferror@plt+0x43628>
  445f38:	stp	x29, x30, [sp, #-96]!
  445f3c:	mov	x29, sp
  445f40:	stp	x19, x20, [sp, #16]
  445f44:	stp	x21, x22, [sp, #32]
  445f48:	stp	x23, x24, [sp, #48]
  445f4c:	stp	x25, x26, [sp, #64]
  445f50:	str	x27, [sp, #80]
  445f54:	mov	x26, x1
  445f58:	mov	x25, x2
  445f5c:	mov	x24, x3
  445f60:	mov	x19, x4
  445f64:	mov	x21, x5
  445f68:	mov	x23, x6
  445f6c:	bl	445bcc <ferror@plt+0x432fc>
  445f70:	mov	w20, w0
  445f74:	ubfiz	x1, x20, #4, #32
  445f78:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1f094>
  445f7c:	add	x0, x0, #0x570
  445f80:	ldr	w27, [x0, x1]
  445f84:	mov	x1, #0x70                  	// #112
  445f88:	mov	x0, #0x1                   	// #1
  445f8c:	blr	x19
  445f90:	mov	x19, x0
  445f94:	cbz	x0, 445fcc <ferror@plt+0x436fc>
  445f98:	mov	x1, #0x8                   	// #8
  445f9c:	mov	x0, x27
  445fa0:	blr	x21
  445fa4:	mov	x22, x0
  445fa8:	str	x0, [x19, #24]
  445fac:	cbz	x0, 445fec <ferror@plt+0x4371c>
  445fb0:	str	x27, [x19, #32]
  445fb4:	str	w20, [x19, #104]
  445fb8:	str	x26, [x19]
  445fbc:	str	x25, [x19, #8]
  445fc0:	str	x24, [x19, #16]
  445fc4:	str	x21, [x19, #64]
  445fc8:	str	x23, [x19, #72]
  445fcc:	mov	x0, x19
  445fd0:	ldp	x19, x20, [sp, #16]
  445fd4:	ldp	x21, x22, [sp, #32]
  445fd8:	ldp	x23, x24, [sp, #48]
  445fdc:	ldp	x25, x26, [sp, #64]
  445fe0:	ldr	x27, [sp, #80]
  445fe4:	ldp	x29, x30, [sp], #96
  445fe8:	ret
  445fec:	cbz	x23, 446000 <ferror@plt+0x43730>
  445ff0:	mov	x0, x19
  445ff4:	blr	x23
  445ff8:	mov	x19, x22
  445ffc:	b	445fcc <ferror@plt+0x436fc>
  446000:	mov	x19, x0
  446004:	b	445fcc <ferror@plt+0x436fc>
  446008:	stp	x29, x30, [sp, #-16]!
  44600c:	mov	x29, sp
  446010:	mov	x6, x5
  446014:	mov	x5, x4
  446018:	bl	445f38 <ferror@plt+0x43668>
  44601c:	ldp	x29, x30, [sp], #16
  446020:	ret
  446024:	str	x1, [x0]
  446028:	str	x2, [x0, #8]
  44602c:	str	x3, [x0, #16]
  446030:	str	x4, [x0, #80]
  446034:	str	x5, [x0, #88]
  446038:	str	x6, [x0, #96]
  44603c:	ret
  446040:	stp	x29, x30, [sp, #-16]!
  446044:	mov	x29, sp
  446048:	adrp	x5, 402000 <memcpy@plt-0x260>
  44604c:	add	x5, x5, #0x690
  446050:	adrp	x4, 447000 <_obstack_memory_used@@Base+0x94>
  446054:	add	x4, x4, #0x84
  446058:	bl	446008 <ferror@plt+0x43738>
  44605c:	ldp	x29, x30, [sp], #16
  446060:	ret
  446064:	stp	x29, x30, [sp, #-16]!
  446068:	mov	x29, sp
  44606c:	adrp	x5, 402000 <memcpy@plt-0x260>
  446070:	add	x5, x5, #0x690
  446074:	adrp	x4, 402000 <memcpy@plt-0x260>
  446078:	add	x4, x4, #0x4b0
  44607c:	bl	446008 <ferror@plt+0x43738>
  446080:	ldp	x29, x30, [sp], #16
  446084:	ret
  446088:	stp	x29, x30, [sp, #-48]!
  44608c:	mov	x29, sp
  446090:	stp	x19, x20, [sp, #16]
  446094:	str	x21, [sp, #32]
  446098:	mov	x20, x0
  44609c:	ldr	x21, [x0, #24]
  4460a0:	ldr	x0, [x0, #16]
  4460a4:	cbz	x0, 4460dc <ferror@plt+0x4380c>
  4460a8:	ldr	x19, [x20, #32]
  4460ac:	subs	w19, w19, #0x1
  4460b0:	b.mi	4460dc <ferror@plt+0x4380c>  // b.first
  4460b4:	sxtw	x19, w19
  4460b8:	b	4460c4 <ferror@plt+0x437f4>
  4460bc:	sub	x19, x19, #0x1
  4460c0:	tbnz	w19, #31, 4460dc <ferror@plt+0x4380c>
  4460c4:	ldr	x0, [x21, x19, lsl #3]
  4460c8:	cmp	x0, #0x1
  4460cc:	b.ls	4460bc <ferror@plt+0x437ec>  // b.plast
  4460d0:	ldr	x1, [x20, #16]
  4460d4:	blr	x1
  4460d8:	b	4460bc <ferror@plt+0x437ec>
  4460dc:	ldr	x1, [x20, #72]
  4460e0:	cbz	x1, 446108 <ferror@plt+0x43838>
  4460e4:	mov	x0, x21
  4460e8:	blr	x1
  4460ec:	ldr	x1, [x20, #72]
  4460f0:	mov	x0, x20
  4460f4:	blr	x1
  4460f8:	ldp	x19, x20, [sp, #16]
  4460fc:	ldr	x21, [sp, #32]
  446100:	ldp	x29, x30, [sp], #48
  446104:	ret
  446108:	ldr	x2, [x20, #96]
  44610c:	cbz	x2, 4460f8 <ferror@plt+0x43828>
  446110:	mov	x1, x21
  446114:	ldr	x0, [x20, #80]
  446118:	blr	x2
  44611c:	ldr	x2, [x20, #96]
  446120:	mov	x1, x20
  446124:	ldr	x0, [x20, #80]
  446128:	blr	x2
  44612c:	b	4460f8 <ferror@plt+0x43828>
  446130:	stp	x29, x30, [sp, #-48]!
  446134:	mov	x29, sp
  446138:	stp	x19, x20, [sp, #16]
  44613c:	stp	x21, x22, [sp, #32]
  446140:	mov	x20, x0
  446144:	ldr	x22, [x0, #32]
  446148:	ldr	x21, [x0, #24]
  44614c:	ldr	x0, [x0, #16]
  446150:	cbz	x0, 446184 <ferror@plt+0x438b4>
  446154:	subs	w19, w22, #0x1
  446158:	b.mi	446184 <ferror@plt+0x438b4>  // b.first
  44615c:	sxtw	x19, w19
  446160:	b	44616c <ferror@plt+0x4389c>
  446164:	sub	x19, x19, #0x1
  446168:	tbnz	w19, #31, 446184 <ferror@plt+0x438b4>
  44616c:	ldr	x0, [x21, x19, lsl #3]
  446170:	cmp	x0, #0x1
  446174:	b.ls	446164 <ferror@plt+0x43894>  // b.plast
  446178:	ldr	x1, [x20, #16]
  44617c:	blr	x1
  446180:	b	446164 <ferror@plt+0x43894>
  446184:	cmp	x22, #0x20, lsl #12
  446188:	b.ls	446228 <ferror@plt+0x43958>  // b.plast
  44618c:	mov	x0, #0x80                  	// #128
  446190:	bl	445bcc <ferror@plt+0x432fc>
  446194:	mov	w19, w0
  446198:	sbfiz	x1, x0, #4, #32
  44619c:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1f094>
  4461a0:	add	x0, x0, #0x570
  4461a4:	ldr	w21, [x0, x1]
  4461a8:	ldr	x1, [x20, #72]
  4461ac:	cbz	x1, 4461f8 <ferror@plt+0x43928>
  4461b0:	ldr	x0, [x20, #24]
  4461b4:	blr	x1
  4461b8:	ldr	x3, [x20, #88]
  4461bc:	cbz	x3, 446210 <ferror@plt+0x43940>
  4461c0:	mov	x2, #0x8                   	// #8
  4461c4:	sxtw	x1, w21
  4461c8:	ldr	x0, [x20, #80]
  4461cc:	blr	x3
  4461d0:	str	x0, [x20, #24]
  4461d4:	sxtw	x21, w21
  4461d8:	str	x21, [x20, #32]
  4461dc:	str	w19, [x20, #104]
  4461e0:	str	xzr, [x20, #48]
  4461e4:	str	xzr, [x20, #40]
  4461e8:	ldp	x19, x20, [sp, #16]
  4461ec:	ldp	x21, x22, [sp, #32]
  4461f0:	ldp	x29, x30, [sp], #48
  4461f4:	ret
  4461f8:	ldr	x2, [x20, #96]
  4461fc:	cbz	x2, 4461b8 <ferror@plt+0x438e8>
  446200:	ldr	x1, [x20, #24]
  446204:	ldr	x0, [x20, #80]
  446208:	blr	x2
  44620c:	b	4461b8 <ferror@plt+0x438e8>
  446210:	ldr	x2, [x20, #64]
  446214:	mov	x1, #0x8                   	// #8
  446218:	sxtw	x0, w21
  44621c:	blr	x2
  446220:	str	x0, [x20, #24]
  446224:	b	4461d4 <ferror@plt+0x43904>
  446228:	lsl	x2, x22, #3
  44622c:	mov	w1, #0x0                   	// #0
  446230:	mov	x0, x21
  446234:	bl	402490 <memset@plt>
  446238:	b	4461e0 <ferror@plt+0x43910>
  44623c:	stp	x29, x30, [sp, #-80]!
  446240:	mov	x29, sp
  446244:	stp	x19, x20, [sp, #16]
  446248:	stp	x21, x22, [sp, #32]
  44624c:	stp	x23, x24, [sp, #48]
  446250:	str	x25, [sp, #64]
  446254:	mov	x20, x0
  446258:	mov	x24, x1
  44625c:	mov	w22, w2
  446260:	ldr	w0, [x0, #56]
  446264:	add	w0, w0, #0x1
  446268:	str	w0, [x20, #56]
  44626c:	mov	w25, w2
  446270:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1f094>
  446274:	add	x2, x2, #0x570
  446278:	ldr	w1, [x20, #104]
  44627c:	lsl	x1, x1, #4
  446280:	add	x3, x2, x1
  446284:	ldr	w0, [x3, #4]
  446288:	mul	x0, x0, x25
  44628c:	lsr	x0, x0, #32
  446290:	sub	w19, w22, w0
  446294:	add	w19, w0, w19, lsr #1
  446298:	ldr	w0, [x3, #12]
  44629c:	lsr	w19, w19, w0
  4462a0:	ldr	w0, [x2, x1]
  4462a4:	msub	w19, w19, w0, w22
  4462a8:	ldr	x0, [x20, #24]
  4462ac:	ldr	x21, [x0, w19, uxtw #3]
  4462b0:	cbz	x21, 446358 <ferror@plt+0x43a88>
  4462b4:	ldr	x23, [x20, #32]
  4462b8:	cmp	x21, #0x1
  4462bc:	b.eq	4462d4 <ferror@plt+0x43a04>  // b.none
  4462c0:	ldr	x2, [x20, #8]
  4462c4:	mov	x1, x24
  4462c8:	mov	x0, x21
  4462cc:	blr	x2
  4462d0:	cbnz	w0, 446358 <ferror@plt+0x43a88>
  4462d4:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1f094>
  4462d8:	add	x2, x2, #0x570
  4462dc:	ldr	w1, [x20, #104]
  4462e0:	lsl	x1, x1, #4
  4462e4:	add	x3, x2, x1
  4462e8:	ldr	w0, [x3, #8]
  4462ec:	mul	x25, x0, x25
  4462f0:	lsr	x25, x25, #32
  4462f4:	add	w4, w22, #0x1
  4462f8:	sub	w22, w22, w25
  4462fc:	add	w22, w25, w22, lsr #1
  446300:	ldr	w0, [x3, #12]
  446304:	lsr	w22, w22, w0
  446308:	ldr	w0, [x2, x1]
  44630c:	sub	w0, w0, #0x2
  446310:	msub	w22, w22, w0, w4
  446314:	ldr	w0, [x20, #60]
  446318:	add	w0, w0, #0x1
  44631c:	str	w0, [x20, #60]
  446320:	add	w19, w19, w22
  446324:	sub	w0, w19, w23
  446328:	cmp	x23, w19, uxtw
  44632c:	csel	w19, w0, w19, ls  // ls = plast
  446330:	ldr	x0, [x20, #24]
  446334:	ldr	x21, [x0, w19, uxtw #3]
  446338:	cbz	x21, 446358 <ferror@plt+0x43a88>
  44633c:	cmp	x21, #0x1
  446340:	b.eq	446314 <ferror@plt+0x43a44>  // b.none
  446344:	ldr	x2, [x20, #8]
  446348:	mov	x1, x24
  44634c:	mov	x0, x21
  446350:	blr	x2
  446354:	cbz	w0, 446314 <ferror@plt+0x43a44>
  446358:	mov	x0, x21
  44635c:	ldp	x19, x20, [sp, #16]
  446360:	ldp	x21, x22, [sp, #32]
  446364:	ldp	x23, x24, [sp, #48]
  446368:	ldr	x25, [sp, #64]
  44636c:	ldp	x29, x30, [sp], #80
  446370:	ret
  446374:	stp	x29, x30, [sp, #-32]!
  446378:	mov	x29, sp
  44637c:	stp	x19, x20, [sp, #16]
  446380:	mov	x19, x0
  446384:	mov	x20, x1
  446388:	ldr	x1, [x0]
  44638c:	mov	x0, x20
  446390:	blr	x1
  446394:	mov	w2, w0
  446398:	mov	x1, x20
  44639c:	mov	x0, x19
  4463a0:	bl	44623c <ferror@plt+0x4396c>
  4463a4:	ldp	x19, x20, [sp, #16]
  4463a8:	ldp	x29, x30, [sp], #32
  4463ac:	ret
  4463b0:	stp	x29, x30, [sp, #-96]!
  4463b4:	mov	x29, sp
  4463b8:	stp	x19, x20, [sp, #16]
  4463bc:	stp	x21, x22, [sp, #32]
  4463c0:	stp	x23, x24, [sp, #48]
  4463c4:	stp	x25, x26, [sp, #64]
  4463c8:	mov	x20, x0
  4463cc:	mov	x24, x1
  4463d0:	mov	w26, w2
  4463d4:	mov	w25, w3
  4463d8:	ldr	x22, [x0, #32]
  4463dc:	cmp	w3, #0x1
  4463e0:	b.eq	4464a4 <ferror@plt+0x43bd4>  // b.none
  4463e4:	str	x27, [sp, #80]
  4463e8:	mov	w21, w26
  4463ec:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1f094>
  4463f0:	add	x2, x2, #0x570
  4463f4:	ldr	w1, [x20, #104]
  4463f8:	lsl	x1, x1, #4
  4463fc:	add	x3, x2, x1
  446400:	ldr	w0, [x3, #4]
  446404:	mul	x0, x0, x21
  446408:	lsr	x0, x0, #32
  44640c:	sub	w19, w26, w0
  446410:	add	w19, w0, w19, lsr #1
  446414:	ldr	w0, [x3, #12]
  446418:	lsr	w19, w19, w0
  44641c:	ldr	w0, [x2, x1]
  446420:	msub	w19, w19, w0, w26
  446424:	ldr	w0, [x20, #56]
  446428:	add	w0, w0, #0x1
  44642c:	str	w0, [x20, #56]
  446430:	ubfiz	x27, x19, #3, #32
  446434:	ldr	x0, [x20, #24]
  446438:	add	x23, x0, x27
  44643c:	ldr	x0, [x0, w19, uxtw #3]
  446440:	cbz	x0, 44659c <ferror@plt+0x43ccc>
  446444:	cmp	x0, #0x1
  446448:	b.eq	446460 <ferror@plt+0x43b90>  // b.none
  44644c:	ldr	x2, [x20, #8]
  446450:	mov	x1, x24
  446454:	blr	x2
  446458:	mov	x23, #0x0                   	// #0
  44645c:	cbnz	w0, 4464d4 <ferror@plt+0x43c04>
  446460:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1f094>
  446464:	add	x2, x2, #0x570
  446468:	ldr	w1, [x20, #104]
  44646c:	lsl	x1, x1, #4
  446470:	add	x3, x2, x1
  446474:	ldr	w0, [x3, #8]
  446478:	mul	x21, x0, x21
  44647c:	lsr	x0, x21, #32
  446480:	add	w4, w26, #0x1
  446484:	sub	w21, w26, w0
  446488:	add	w21, w0, w21, lsr #1
  44648c:	ldr	w0, [x3, #12]
  446490:	lsr	w21, w21, w0
  446494:	ldr	w0, [x2, x1]
  446498:	sub	w0, w0, #0x2
  44649c:	msub	w21, w21, w0, w4
  4464a0:	b	4464ec <ferror@plt+0x43c1c>
  4464a4:	add	x0, x22, x22, lsl #1
  4464a8:	ldr	x1, [x20, #40]
  4464ac:	cmp	x0, x1, lsl #2
  4464b0:	b.ls	4464bc <ferror@plt+0x43bec>  // b.plast
  4464b4:	str	x27, [sp, #80]
  4464b8:	b	4463e8 <ferror@plt+0x43b18>
  4464bc:	mov	x0, x20
  4464c0:	bl	445c4c <ferror@plt+0x4337c>
  4464c4:	cbz	w0, 44657c <ferror@plt+0x43cac>
  4464c8:	str	x27, [sp, #80]
  4464cc:	ldr	x22, [x20, #32]
  4464d0:	b	4463e8 <ferror@plt+0x43b18>
  4464d4:	ldr	x23, [x20, #24]
  4464d8:	add	x23, x23, x27
  4464dc:	ldr	x27, [sp, #80]
  4464e0:	b	446560 <ferror@plt+0x43c90>
  4464e4:	cmp	x23, #0x0
  4464e8:	csel	x23, x23, x1, ne  // ne = any
  4464ec:	ldr	w0, [x20, #60]
  4464f0:	add	w0, w0, #0x1
  4464f4:	str	w0, [x20, #60]
  4464f8:	add	w19, w19, w21
  4464fc:	sub	w0, w19, w22
  446500:	cmp	x22, w19, uxtw
  446504:	csel	w19, w0, w19, ls  // ls = plast
  446508:	ubfiz	x26, x19, #3, #32
  44650c:	ldr	x0, [x20, #24]
  446510:	add	x1, x0, x26
  446514:	ldr	x0, [x0, w19, uxtw #3]
  446518:	cbz	x0, 446544 <ferror@plt+0x43c74>
  44651c:	cmp	x0, #0x1
  446520:	b.eq	4464e4 <ferror@plt+0x43c14>  // b.none
  446524:	ldr	x2, [x20, #8]
  446528:	mov	x1, x24
  44652c:	blr	x2
  446530:	cbz	w0, 4464ec <ferror@plt+0x43c1c>
  446534:	ldr	x23, [x20, #24]
  446538:	add	x23, x23, x26
  44653c:	ldr	x27, [sp, #80]
  446540:	b	446560 <ferror@plt+0x43c90>
  446544:	cbz	w25, 446584 <ferror@plt+0x43cb4>
  446548:	cbz	x23, 4465a0 <ferror@plt+0x43cd0>
  44654c:	ldr	x0, [x20, #48]
  446550:	sub	x0, x0, #0x1
  446554:	str	x0, [x20, #48]
  446558:	str	xzr, [x23]
  44655c:	ldr	x27, [sp, #80]
  446560:	mov	x0, x23
  446564:	ldp	x19, x20, [sp, #16]
  446568:	ldp	x21, x22, [sp, #32]
  44656c:	ldp	x23, x24, [sp, #48]
  446570:	ldp	x25, x26, [sp, #64]
  446574:	ldp	x29, x30, [sp], #96
  446578:	ret
  44657c:	mov	x23, #0x0                   	// #0
  446580:	b	446560 <ferror@plt+0x43c90>
  446584:	mov	x23, x0
  446588:	ldr	x27, [sp, #80]
  44658c:	b	446560 <ferror@plt+0x43c90>
  446590:	mov	x23, x0
  446594:	ldr	x27, [sp, #80]
  446598:	b	446560 <ferror@plt+0x43c90>
  44659c:	cbz	w25, 446590 <ferror@plt+0x43cc0>
  4465a0:	ldr	x0, [x20, #40]
  4465a4:	add	x0, x0, #0x1
  4465a8:	str	x0, [x20, #40]
  4465ac:	ldr	x23, [x20, #24]
  4465b0:	add	x23, x23, w19, uxtw #3
  4465b4:	ldr	x27, [sp, #80]
  4465b8:	b	446560 <ferror@plt+0x43c90>
  4465bc:	stp	x29, x30, [sp, #-48]!
  4465c0:	mov	x29, sp
  4465c4:	stp	x19, x20, [sp, #16]
  4465c8:	str	x21, [sp, #32]
  4465cc:	mov	x19, x0
  4465d0:	mov	x20, x1
  4465d4:	mov	w21, w2
  4465d8:	ldr	x1, [x0]
  4465dc:	mov	x0, x20
  4465e0:	blr	x1
  4465e4:	mov	w3, w21
  4465e8:	mov	w2, w0
  4465ec:	mov	x1, x20
  4465f0:	mov	x0, x19
  4465f4:	bl	4463b0 <ferror@plt+0x43ae0>
  4465f8:	ldp	x19, x20, [sp, #16]
  4465fc:	ldr	x21, [sp, #32]
  446600:	ldp	x29, x30, [sp], #48
  446604:	ret
  446608:	stp	x29, x30, [sp, #-32]!
  44660c:	mov	x29, sp
  446610:	stp	x19, x20, [sp, #16]
  446614:	mov	x19, x0
  446618:	mov	w3, #0x0                   	// #0
  44661c:	bl	4463b0 <ferror@plt+0x43ae0>
  446620:	cbz	x0, 44664c <ferror@plt+0x43d7c>
  446624:	mov	x20, x0
  446628:	ldr	x1, [x19, #16]
  44662c:	cbz	x1, 446638 <ferror@plt+0x43d68>
  446630:	ldr	x0, [x0]
  446634:	blr	x1
  446638:	mov	x0, #0x1                   	// #1
  44663c:	str	x0, [x20]
  446640:	ldr	x0, [x19, #48]
  446644:	add	x0, x0, #0x1
  446648:	str	x0, [x19, #48]
  44664c:	ldp	x19, x20, [sp, #16]
  446650:	ldp	x29, x30, [sp], #32
  446654:	ret
  446658:	stp	x29, x30, [sp, #-32]!
  44665c:	mov	x29, sp
  446660:	stp	x19, x20, [sp, #16]
  446664:	mov	x19, x0
  446668:	mov	x20, x1
  44666c:	ldr	x1, [x0]
  446670:	mov	x0, x20
  446674:	blr	x1
  446678:	mov	w2, w0
  44667c:	mov	x1, x20
  446680:	mov	x0, x19
  446684:	bl	446608 <ferror@plt+0x43d38>
  446688:	ldp	x19, x20, [sp, #16]
  44668c:	ldp	x29, x30, [sp], #32
  446690:	ret
  446694:	stp	x29, x30, [sp, #-32]!
  446698:	mov	x29, sp
  44669c:	stp	x19, x20, [sp, #16]
  4466a0:	mov	x20, x1
  4466a4:	ldr	x1, [x0, #24]
  4466a8:	cmp	x1, x20
  4466ac:	b.hi	4466fc <ferror@plt+0x43e2c>  // b.pmore
  4466b0:	mov	x19, x0
  4466b4:	ldr	x0, [x0, #32]
  4466b8:	add	x0, x1, x0, lsl #3
  4466bc:	cmp	x20, x0
  4466c0:	b.cs	4466fc <ferror@plt+0x43e2c>  // b.hs, b.nlast
  4466c4:	ldr	x0, [x20]
  4466c8:	cmp	x0, #0x1
  4466cc:	b.ls	4466fc <ferror@plt+0x43e2c>  // b.plast
  4466d0:	ldr	x1, [x19, #16]
  4466d4:	cbz	x1, 4466dc <ferror@plt+0x43e0c>
  4466d8:	blr	x1
  4466dc:	mov	x0, #0x1                   	// #1
  4466e0:	str	x0, [x20]
  4466e4:	ldr	x0, [x19, #48]
  4466e8:	add	x0, x0, #0x1
  4466ec:	str	x0, [x19, #48]
  4466f0:	ldp	x19, x20, [sp, #16]
  4466f4:	ldp	x29, x30, [sp], #32
  4466f8:	ret
  4466fc:	bl	402590 <abort@plt>
  446700:	stp	x29, x30, [sp, #-48]!
  446704:	mov	x29, sp
  446708:	stp	x19, x20, [sp, #16]
  44670c:	stp	x21, x22, [sp, #32]
  446710:	mov	x22, x1
  446714:	mov	x21, x2
  446718:	ldr	x19, [x0, #24]
  44671c:	ldr	x20, [x0, #32]
  446720:	add	x20, x19, x20, lsl #3
  446724:	b	446734 <ferror@plt+0x43e64>
  446728:	add	x19, x19, #0x8
  44672c:	cmp	x20, x19
  446730:	b.ls	446750 <ferror@plt+0x43e80>  // b.plast
  446734:	ldr	x0, [x19]
  446738:	cmp	x0, #0x1
  44673c:	b.ls	446728 <ferror@plt+0x43e58>  // b.plast
  446740:	mov	x1, x21
  446744:	mov	x0, x19
  446748:	blr	x22
  44674c:	cbnz	w0, 446728 <ferror@plt+0x43e58>
  446750:	ldp	x19, x20, [sp, #16]
  446754:	ldp	x21, x22, [sp, #32]
  446758:	ldp	x29, x30, [sp], #48
  44675c:	ret
  446760:	stp	x29, x30, [sp, #-48]!
  446764:	mov	x29, sp
  446768:	stp	x19, x20, [sp, #16]
  44676c:	str	x21, [sp, #32]
  446770:	mov	x19, x0
  446774:	mov	x20, x1
  446778:	mov	x21, x2
  44677c:	ldr	x3, [x0, #40]
  446780:	ldr	x0, [x0, #48]
  446784:	sub	x3, x3, x0
  446788:	lsl	x3, x3, #3
  44678c:	cmp	x3, #0x20
  446790:	mov	x0, #0x20                  	// #32
  446794:	csel	x3, x3, x0, cs  // cs = hs, nlast
  446798:	ldr	x0, [x19, #32]
  44679c:	cmp	x0, x3
  4467a0:	b.hi	4467c4 <ferror@plt+0x43ef4>  // b.pmore
  4467a4:	mov	x2, x21
  4467a8:	mov	x1, x20
  4467ac:	mov	x0, x19
  4467b0:	bl	446700 <ferror@plt+0x43e30>
  4467b4:	ldp	x19, x20, [sp, #16]
  4467b8:	ldr	x21, [sp, #32]
  4467bc:	ldp	x29, x30, [sp], #48
  4467c0:	ret
  4467c4:	mov	x0, x19
  4467c8:	bl	445c4c <ferror@plt+0x4337c>
  4467cc:	b	4467a4 <ferror@plt+0x43ed4>
  4467d0:	ldr	w1, [x0, #56]
  4467d4:	movi	d0, #0x0
  4467d8:	cbz	w1, 4467ec <ferror@plt+0x43f1c>
  4467dc:	ldr	w0, [x0, #60]
  4467e0:	ucvtf	d0, w0
  4467e4:	ucvtf	d1, w1
  4467e8:	fdiv	d0, d0, d1
  4467ec:	ret
  4467f0:	mov	x2, x0
  4467f4:	ldrb	w1, [x2], #1
  4467f8:	cbz	w1, 446818 <ferror@plt+0x43f48>
  4467fc:	mov	w0, #0x0                   	// #0
  446800:	mov	w3, #0x43                  	// #67
  446804:	madd	w0, w0, w3, w1
  446808:	sub	w0, w0, #0x71
  44680c:	ldrb	w1, [x2], #1
  446810:	cbnz	w1, 446804 <ferror@plt+0x43f34>
  446814:	ret
  446818:	mov	w0, #0x0                   	// #0
  44681c:	b	446814 <ferror@plt+0x43f44>
  446820:	tst	x0, #0x3
  446824:	b.eq	44693c <ferror@plt+0x4406c>  // b.none
  446828:	cmp	w1, #0xb
  44682c:	b.ls	446928 <ferror@plt+0x44058>  // b.plast
  446830:	mov	w5, w1
  446834:	mov	w8, #0x79b9                	// #31161
  446838:	movk	w8, #0x9e37, lsl #16
  44683c:	mov	w7, w8
  446840:	ldrb	w4, [x0, #5]
  446844:	ldrb	w3, [x0, #6]
  446848:	lsl	w3, w3, #16
  44684c:	add	w4, w3, w4, lsl #8
  446850:	ldrb	w3, [x0, #7]
  446854:	ldrb	w6, [x0, #4]
  446858:	add	w3, w6, w3, lsl #24
  44685c:	add	w4, w4, w3
  446860:	add	w4, w4, w8
  446864:	ldrb	w3, [x0, #9]
  446868:	ldrb	w6, [x0, #10]
  44686c:	lsl	w6, w6, #16
  446870:	add	w3, w6, w3, lsl #8
  446874:	ldrb	w6, [x0, #11]
  446878:	ldrb	w8, [x0, #8]
  44687c:	add	w6, w8, w6, lsl #24
  446880:	add	w3, w3, w6
  446884:	add	w2, w3, w2
  446888:	ldrb	w6, [x0, #1]
  44688c:	ldrb	w3, [x0, #2]
  446890:	lsl	w3, w3, #16
  446894:	add	w6, w3, w6, lsl #8
  446898:	ldrb	w3, [x0, #3]
  44689c:	ldrb	w8, [x0], #12
  4468a0:	add	w3, w8, w3, lsl #24
  4468a4:	add	w6, w6, w3
  4468a8:	add	w3, w4, w2
  4468ac:	sub	w6, w6, w3
  4468b0:	add	w6, w6, w7
  4468b4:	eor	w6, w6, w2, lsr #13
  4468b8:	sub	w4, w4, w2
  4468bc:	sub	w4, w4, w6
  4468c0:	eor	w4, w4, w6, lsl #8
  4468c4:	sub	w2, w2, w6
  4468c8:	sub	w3, w2, w4
  4468cc:	eor	w3, w3, w4, lsr #13
  4468d0:	sub	w2, w6, w4
  4468d4:	sub	w2, w2, w3
  4468d8:	eor	w2, w2, w3, lsr #12
  4468dc:	sub	w4, w4, w3
  4468e0:	sub	w4, w4, w2
  4468e4:	eor	w4, w4, w2, lsl #16
  4468e8:	sub	w3, w3, w2
  4468ec:	sub	w3, w3, w4
  4468f0:	eor	w3, w3, w4, lsr #5
  4468f4:	sub	w2, w2, w4
  4468f8:	sub	w2, w2, w3
  4468fc:	eor	w7, w2, w3, lsr #3
  446900:	sub	w4, w4, w3
  446904:	sub	w4, w4, w7
  446908:	eor	w8, w4, w7, lsl #10
  44690c:	sub	w2, w3, w7
  446910:	sub	w2, w2, w8
  446914:	eor	w2, w2, w8, lsr #15
  446918:	sub	w5, w5, #0xc
  44691c:	cmp	w5, #0xb
  446920:	b.hi	446840 <ferror@plt+0x43f70>  // b.pmore
  446924:	b	4469e8 <ferror@plt+0x44118>
  446928:	mov	w5, w1
  44692c:	mov	w8, #0x79b9                	// #31161
  446930:	movk	w8, #0x9e37, lsl #16
  446934:	mov	w7, w8
  446938:	b	4469e8 <ferror@plt+0x44118>
  44693c:	cmp	w1, #0xb
  446940:	b.ls	446a30 <ferror@plt+0x44160>  // b.plast
  446944:	mov	w5, w1
  446948:	mov	w8, #0x79b9                	// #31161
  44694c:	movk	w8, #0x9e37, lsl #16
  446950:	mov	w7, w8
  446954:	ldr	w6, [x0]
  446958:	add	w6, w7, w6
  44695c:	ldr	w4, [x0, #4]
  446960:	add	w4, w8, w4
  446964:	ldr	w3, [x0, #8]
  446968:	add	w2, w2, w3
  44696c:	add	w3, w4, w2
  446970:	sub	w6, w6, w3
  446974:	eor	w6, w6, w2, lsr #13
  446978:	sub	w4, w4, w2
  44697c:	sub	w4, w4, w6
  446980:	eor	w4, w4, w6, lsl #8
  446984:	sub	w2, w2, w6
  446988:	sub	w2, w2, w4
  44698c:	eor	w2, w2, w4, lsr #13
  446990:	sub	w6, w6, w4
  446994:	sub	w6, w6, w2
  446998:	eor	w6, w6, w2, lsr #12
  44699c:	sub	w4, w4, w2
  4469a0:	sub	w4, w4, w6
  4469a4:	eor	w4, w4, w6, lsl #16
  4469a8:	sub	w2, w2, w6
  4469ac:	sub	w2, w2, w4
  4469b0:	eor	w2, w2, w4, lsr #5
  4469b4:	sub	w6, w6, w4
  4469b8:	sub	w6, w6, w2
  4469bc:	eor	w7, w6, w2, lsr #3
  4469c0:	sub	w4, w4, w2
  4469c4:	sub	w4, w4, w7
  4469c8:	eor	w8, w4, w7, lsl #10
  4469cc:	sub	w2, w2, w7
  4469d0:	sub	w2, w2, w8
  4469d4:	eor	w2, w2, w8, lsr #15
  4469d8:	add	x0, x0, #0xc
  4469dc:	sub	w5, w5, #0xc
  4469e0:	cmp	w5, #0xb
  4469e4:	b.hi	446954 <ferror@plt+0x44084>  // b.pmore
  4469e8:	add	w2, w2, w1
  4469ec:	cmp	w5, #0x6
  4469f0:	b.eq	446b24 <ferror@plt+0x44254>  // b.none
  4469f4:	b.ls	446a44 <ferror@plt+0x44174>  // b.plast
  4469f8:	cmp	w5, #0x9
  4469fc:	b.eq	446a24 <ferror@plt+0x44154>  // b.none
  446a00:	b.ls	446b04 <ferror@plt+0x44234>  // b.plast
  446a04:	cmp	w5, #0xa
  446a08:	b.eq	446a1c <ferror@plt+0x4414c>  // b.none
  446a0c:	cmp	w5, #0xb
  446a10:	b.ne	446a94 <ferror@plt+0x441c4>  // b.any
  446a14:	ldrb	w1, [x0, #10]
  446a18:	add	w2, w2, w1, lsl #24
  446a1c:	ldrb	w1, [x0, #9]
  446a20:	add	w2, w2, w1, lsl #16
  446a24:	ldrb	w1, [x0, #8]
  446a28:	add	w2, w2, w1, lsl #8
  446a2c:	b	446b14 <ferror@plt+0x44244>
  446a30:	mov	w5, w1
  446a34:	mov	w8, #0x79b9                	// #31161
  446a38:	movk	w8, #0x9e37, lsl #16
  446a3c:	mov	w7, w8
  446a40:	b	4469e8 <ferror@plt+0x44118>
  446a44:	cmp	w5, #0x3
  446a48:	b.eq	446a68 <ferror@plt+0x44198>  // b.none
  446a4c:	b.ls	446a74 <ferror@plt+0x441a4>  // b.plast
  446a50:	cmp	w5, #0x4
  446a54:	b.eq	446a60 <ferror@plt+0x44190>  // b.none
  446a58:	ldrb	w1, [x0, #4]
  446a5c:	add	w8, w8, w1
  446a60:	ldrb	w1, [x0, #3]
  446a64:	add	w7, w7, w1, lsl #24
  446a68:	ldrb	w1, [x0, #2]
  446a6c:	add	w7, w7, w1, lsl #16
  446a70:	b	446a84 <ferror@plt+0x441b4>
  446a74:	cmp	w5, #0x1
  446a78:	b.eq	446a8c <ferror@plt+0x441bc>  // b.none
  446a7c:	cmp	w5, #0x2
  446a80:	b.ne	446a94 <ferror@plt+0x441c4>  // b.any
  446a84:	ldrb	w1, [x0, #1]
  446a88:	add	w7, w7, w1, lsl #8
  446a8c:	ldrb	w0, [x0]
  446a90:	add	w7, w7, w0
  446a94:	add	w6, w8, w2
  446a98:	sub	w6, w7, w6
  446a9c:	eor	w6, w6, w2, lsr #13
  446aa0:	sub	w4, w8, w2
  446aa4:	sub	w3, w4, w6
  446aa8:	eor	w3, w3, w6, lsl #8
  446aac:	sub	w2, w2, w6
  446ab0:	sub	w2, w2, w3
  446ab4:	eor	w2, w2, w3, lsr #13
  446ab8:	sub	w0, w6, w3
  446abc:	sub	w0, w0, w2
  446ac0:	eor	w0, w0, w2, lsr #12
  446ac4:	sub	w3, w3, w2
  446ac8:	sub	w3, w3, w0
  446acc:	eor	w3, w3, w0, lsl #16
  446ad0:	sub	w1, w2, w0
  446ad4:	sub	w1, w1, w3
  446ad8:	eor	w1, w1, w3, lsr #5
  446adc:	sub	w2, w0, w3
  446ae0:	sub	w2, w2, w1
  446ae4:	eor	w2, w2, w1, lsr #3
  446ae8:	sub	w0, w3, w1
  446aec:	sub	w0, w0, w2
  446af0:	eor	w0, w0, w2, lsl #10
  446af4:	sub	w1, w1, w2
  446af8:	sub	w1, w1, w0
  446afc:	eor	w0, w1, w0, lsr #15
  446b00:	ret
  446b04:	cmp	w5, #0x7
  446b08:	b.eq	446b1c <ferror@plt+0x4424c>  // b.none
  446b0c:	cmp	w5, #0x8
  446b10:	b.ne	446a94 <ferror@plt+0x441c4>  // b.any
  446b14:	ldrb	w1, [x0, #7]
  446b18:	add	w8, w8, w1, lsl #24
  446b1c:	ldrb	w1, [x0, #6]
  446b20:	add	w8, w8, w1, lsl #16
  446b24:	ldrb	w1, [x0, #5]
  446b28:	add	w8, w8, w1, lsl #8
  446b2c:	b	446a58 <ferror@plt+0x44188>
  446b30:	ret
  446b34:	ldrb	w1, [x0]
  446b38:	cbz	w1, 446b50 <ferror@plt+0x44280>
  446b3c:	add	x2, x0, #0x1
  446b40:	cmp	w1, #0x2f
  446b44:	csel	x0, x0, x2, ne  // ne = any
  446b48:	ldrb	w1, [x2], #1
  446b4c:	cbnz	w1, 446b40 <ferror@plt+0x44270>
  446b50:	ret
  446b54:	ldrb	w2, [x0]
  446b58:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1f094>
  446b5c:	add	x1, x1, #0xa68
  446b60:	ldrh	w1, [x1, x2, lsl #1]
  446b64:	mov	w2, #0x88                  	// #136
  446b68:	tst	w2, w1
  446b6c:	b.eq	446b80 <ferror@plt+0x442b0>  // b.none
  446b70:	ldrb	w2, [x0, #1]
  446b74:	add	x1, x0, #0x2
  446b78:	cmp	w2, #0x3a
  446b7c:	csel	x0, x1, x0, eq  // eq = none
  446b80:	ldrb	w1, [x0]
  446b84:	cbz	w1, 446ba4 <ferror@plt+0x442d4>
  446b88:	add	x2, x0, #0x1
  446b8c:	mov	w3, #0x5c                  	// #92
  446b90:	cmp	w1, #0x2f
  446b94:	ccmp	w1, w3, #0x4, ne  // ne = any
  446b98:	csel	x0, x0, x2, ne  // ne = any
  446b9c:	ldrb	w1, [x2], #1
  446ba0:	cbnz	w1, 446b90 <ferror@plt+0x442c0>
  446ba4:	ret
  446ba8:	stp	x29, x30, [sp, #-16]!
  446bac:	mov	x29, sp
  446bb0:	bl	446b34 <ferror@plt+0x44264>
  446bb4:	ldp	x29, x30, [sp], #16
  446bb8:	ret
  446bbc:	mov	x12, #0x1020                	// #4128
  446bc0:	sub	sp, sp, x12
  446bc4:	stp	x29, x30, [sp]
  446bc8:	mov	x29, sp
  446bcc:	str	x19, [sp, #16]
  446bd0:	mov	x19, x0
  446bd4:	add	x1, sp, #0x20
  446bd8:	bl	4027b0 <realpath@plt>
  446bdc:	cmp	x0, #0x0
  446be0:	csel	x0, x0, x19, ne  // ne = any
  446be4:	bl	402510 <strdup@plt>
  446be8:	ldr	x19, [sp, #16]
  446bec:	ldp	x29, x30, [sp]
  446bf0:	mov	x12, #0x1020                	// #4128
  446bf4:	add	sp, sp, x12
  446bf8:	ret
  446bfc:	stp	x29, x30, [sp, #-16]!
  446c00:	mov	x29, sp
  446c04:	mov	x2, x0
  446c08:	ldrb	w0, [x0, #80]
  446c0c:	tbz	w0, #0, 446c24 <ferror@plt+0x44354>
  446c10:	ldr	x3, [x2, #56]
  446c14:	ldr	x0, [x2, #72]
  446c18:	blr	x3
  446c1c:	ldp	x29, x30, [sp], #16
  446c20:	ret
  446c24:	ldr	x2, [x2, #56]
  446c28:	mov	x0, x1
  446c2c:	blr	x2
  446c30:	b	446c1c <ferror@plt+0x4434c>
  446c34:	stp	x29, x30, [sp, #-16]!
  446c38:	mov	x29, sp
  446c3c:	mov	x2, x0
  446c40:	ldrb	w0, [x0, #80]
  446c44:	tbz	w0, #0, 446c5c <ferror@plt+0x4438c>
  446c48:	ldr	x3, [x2, #64]
  446c4c:	ldr	x0, [x2, #72]
  446c50:	blr	x3
  446c54:	ldp	x29, x30, [sp], #16
  446c58:	ret
  446c5c:	ldr	x2, [x2, #64]
  446c60:	mov	x0, x1
  446c64:	blr	x2
  446c68:	b	446c54 <ferror@plt+0x44384>
  446c6c:	stp	x29, x30, [sp, #-48]!
  446c70:	mov	x29, sp
  446c74:	stp	x19, x20, [sp, #16]
  446c78:	stp	x21, x22, [sp, #32]
  446c7c:	mov	x19, x0
  446c80:	cmp	x2, #0x0
  446c84:	mov	x0, #0x10                  	// #16
  446c88:	csel	x20, x2, x0, ne  // ne = any
  446c8c:	cmp	x1, #0x0
  446c90:	mov	x0, #0xfe0                 	// #4064
  446c94:	csel	x1, x1, x0, ne  // ne = any
  446c98:	str	x1, [x19]
  446c9c:	sub	x22, x20, #0x1
  446ca0:	str	x22, [x19, #48]
  446ca4:	mov	x0, x19
  446ca8:	bl	446bfc <ferror@plt+0x4432c>
  446cac:	mov	x21, x0
  446cb0:	cbz	x0, 446d04 <ferror@plt+0x44434>
  446cb4:	str	x21, [x19, #8]
  446cb8:	add	x2, x21, #0x10
  446cbc:	add	x2, x2, x22
  446cc0:	neg	x20, x20
  446cc4:	and	x20, x2, x20
  446cc8:	str	x20, [x19, #16]
  446ccc:	str	x20, [x19, #24]
  446cd0:	ldr	x0, [x19]
  446cd4:	add	x0, x21, x0
  446cd8:	str	x0, [x21]
  446cdc:	str	x0, [x19, #32]
  446ce0:	str	xzr, [x21, #8]
  446ce4:	ldrb	w0, [x19, #80]
  446ce8:	and	w0, w0, #0xfffffff9
  446cec:	strb	w0, [x19, #80]
  446cf0:	mov	w0, #0x1                   	// #1
  446cf4:	ldp	x19, x20, [sp, #16]
  446cf8:	ldp	x21, x22, [sp, #32]
  446cfc:	ldp	x29, x30, [sp], #48
  446d00:	ret
  446d04:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  446d08:	ldr	x0, [x0, #1264]
  446d0c:	blr	x0
  446d10:	b	446cb4 <ferror@plt+0x443e4>
  446d14:	stp	x29, x30, [sp, #-16]!
  446d18:	mov	x29, sp
  446d1c:	adrp	x2, 466000 <_obstack_memory_used@@Base+0x1f094>
  446d20:	add	x2, x2, #0x850
  446d24:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x10094>
  446d28:	add	x1, x1, #0xea0
  446d2c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  446d30:	ldr	x0, [x0, #1320]
  446d34:	bl	402890 <fprintf@plt>
  446d38:	mov	w0, #0x1                   	// #1
  446d3c:	bl	4022e0 <exit@plt>

0000000000446d40 <_obstack_begin@@Base>:
  446d40:	stp	x29, x30, [sp, #-16]!
  446d44:	mov	x29, sp
  446d48:	str	x3, [x0, #56]
  446d4c:	str	x4, [x0, #64]
  446d50:	ldrb	w3, [x0, #80]
  446d54:	and	w3, w3, #0xfffffffe
  446d58:	strb	w3, [x0, #80]
  446d5c:	bl	446c6c <ferror@plt+0x4439c>
  446d60:	ldp	x29, x30, [sp], #16
  446d64:	ret

0000000000446d68 <_obstack_begin_1@@Base>:
  446d68:	stp	x29, x30, [sp, #-16]!
  446d6c:	mov	x29, sp
  446d70:	str	x3, [x0, #56]
  446d74:	str	x4, [x0, #64]
  446d78:	str	x5, [x0, #72]
  446d7c:	ldrb	w3, [x0, #80]
  446d80:	orr	w3, w3, #0x1
  446d84:	strb	w3, [x0, #80]
  446d88:	bl	446c6c <ferror@plt+0x4439c>
  446d8c:	ldp	x29, x30, [sp], #16
  446d90:	ret

0000000000446d94 <_obstack_newchunk@@Base>:
  446d94:	stp	x29, x30, [sp, #-64]!
  446d98:	mov	x29, sp
  446d9c:	stp	x19, x20, [sp, #16]
  446da0:	stp	x21, x22, [sp, #32]
  446da4:	str	x23, [sp, #48]
  446da8:	mov	x19, x0
  446dac:	ldr	x22, [x0, #8]
  446db0:	ldr	x21, [x0, #24]
  446db4:	ldr	x0, [x0, #16]
  446db8:	sub	x21, x21, x0
  446dbc:	add	x3, x21, x1
  446dc0:	ldr	x0, [x19, #48]
  446dc4:	add	x0, x3, x0
  446dc8:	lsr	x20, x21, #3
  446dcc:	add	x20, x20, #0x64
  446dd0:	add	x1, x20, x0
  446dd4:	ldr	x2, [x19]
  446dd8:	cmp	x2, x0
  446ddc:	csel	x2, x2, x0, cs  // cs = hs, nlast
  446de0:	cmp	x2, x1
  446de4:	csel	x20, x2, x1, cs  // cs = hs, nlast
  446de8:	cmp	x21, x3
  446dec:	ccmp	x3, x0, #0x2, ls  // ls = plast
  446df0:	b.ls	446e88 <_obstack_newchunk@@Base+0xf4>  // b.plast
  446df4:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  446df8:	ldr	x0, [x0, #1264]
  446dfc:	blr	x0
  446e00:	mov	x23, #0x0                   	// #0
  446e04:	str	x23, [x19, #8]
  446e08:	str	x22, [x23, #8]
  446e0c:	add	x1, x23, x20
  446e10:	str	x1, [x19, #32]
  446e14:	mov	x2, x23
  446e18:	str	x1, [x2], #16
  446e1c:	ldr	x20, [x19, #48]
  446e20:	add	x2, x2, x20
  446e24:	bic	x20, x2, x20
  446e28:	mov	x2, x21
  446e2c:	ldr	x1, [x19, #16]
  446e30:	mov	x0, x20
  446e34:	bl	402260 <memcpy@plt>
  446e38:	ldrb	w0, [x19, #80]
  446e3c:	tbnz	w0, #1, 446e5c <_obstack_newchunk@@Base+0xc8>
  446e40:	ldr	x0, [x19, #48]
  446e44:	add	x1, x22, #0x10
  446e48:	add	x1, x1, x0
  446e4c:	bic	x0, x1, x0
  446e50:	ldr	x1, [x19, #16]
  446e54:	cmp	x1, x0
  446e58:	b.eq	446ea0 <_obstack_newchunk@@Base+0x10c>  // b.none
  446e5c:	str	x20, [x19, #16]
  446e60:	add	x20, x20, x21
  446e64:	str	x20, [x19, #24]
  446e68:	ldrb	w0, [x19, #80]
  446e6c:	and	w0, w0, #0xfffffffd
  446e70:	strb	w0, [x19, #80]
  446e74:	ldp	x19, x20, [sp, #16]
  446e78:	ldp	x21, x22, [sp, #32]
  446e7c:	ldr	x23, [sp, #48]
  446e80:	ldp	x29, x30, [sp], #64
  446e84:	ret
  446e88:	mov	x1, x20
  446e8c:	mov	x0, x19
  446e90:	bl	446bfc <ferror@plt+0x4432c>
  446e94:	mov	x23, x0
  446e98:	cbnz	x0, 446e04 <_obstack_newchunk@@Base+0x70>
  446e9c:	b	446df4 <_obstack_newchunk@@Base+0x60>
  446ea0:	ldr	x0, [x22, #8]
  446ea4:	str	x0, [x23, #8]
  446ea8:	mov	x1, x22
  446eac:	mov	x0, x19
  446eb0:	bl	446c34 <ferror@plt+0x44364>
  446eb4:	b	446e5c <_obstack_newchunk@@Base+0xc8>

0000000000446eb8 <_obstack_allocated_p@@Base>:
  446eb8:	ldr	x0, [x0, #8]
  446ebc:	cbnz	x0, 446ecc <_obstack_allocated_p@@Base+0x14>
  446ec0:	b	446ee0 <_obstack_allocated_p@@Base+0x28>
  446ec4:	ldr	x0, [x0, #8]
  446ec8:	cbz	x0, 446ee0 <_obstack_allocated_p@@Base+0x28>
  446ecc:	cmp	x1, x0
  446ed0:	b.ls	446ec4 <_obstack_allocated_p@@Base+0xc>  // b.plast
  446ed4:	ldr	x2, [x0]
  446ed8:	cmp	x2, x1
  446edc:	b.cc	446ec4 <_obstack_allocated_p@@Base+0xc>  // b.lo, b.ul, b.last
  446ee0:	cmp	x0, #0x0
  446ee4:	cset	w0, ne  // ne = any
  446ee8:	ret

0000000000446eec <_obstack_free@@Base>:
  446eec:	stp	x29, x30, [sp, #-48]!
  446ef0:	mov	x29, sp
  446ef4:	stp	x19, x20, [sp, #16]
  446ef8:	str	x21, [sp, #32]
  446efc:	mov	x19, x0
  446f00:	mov	x21, x1
  446f04:	ldr	x1, [x0, #8]
  446f08:	cbnz	x1, 446f34 <_obstack_free@@Base+0x48>
  446f0c:	cbz	x21, 446f5c <_obstack_free@@Base+0x70>
  446f10:	bl	402590 <abort@plt>
  446f14:	ldr	x20, [x1, #8]
  446f18:	mov	x0, x19
  446f1c:	bl	446c34 <ferror@plt+0x44364>
  446f20:	ldrb	w2, [x19, #80]
  446f24:	orr	w2, w2, #0x2
  446f28:	strb	w2, [x19, #80]
  446f2c:	cbz	x20, 446f0c <_obstack_free@@Base+0x20>
  446f30:	mov	x1, x20
  446f34:	cmp	x21, x1
  446f38:	b.ls	446f14 <_obstack_free@@Base+0x28>  // b.plast
  446f3c:	ldr	x0, [x1]
  446f40:	cmp	x0, x21
  446f44:	b.cc	446f14 <_obstack_free@@Base+0x28>  // b.lo, b.ul, b.last
  446f48:	str	x21, [x19, #24]
  446f4c:	str	x21, [x19, #16]
  446f50:	ldr	x0, [x1]
  446f54:	str	x0, [x19, #32]
  446f58:	str	x1, [x19, #8]
  446f5c:	ldp	x19, x20, [sp, #16]
  446f60:	ldr	x21, [sp, #32]
  446f64:	ldp	x29, x30, [sp], #48
  446f68:	ret

0000000000446f6c <_obstack_memory_used@@Base>:
  446f6c:	ldr	x1, [x0, #8]
  446f70:	cbz	x1, 446f90 <_obstack_memory_used@@Base+0x24>
  446f74:	mov	x0, #0x0                   	// #0
  446f78:	ldr	x2, [x1]
  446f7c:	sub	x2, x2, x1
  446f80:	add	x0, x0, x2
  446f84:	ldr	x1, [x1, #8]
  446f88:	cbnz	x1, 446f78 <_obstack_memory_used@@Base+0xc>
  446f8c:	ret
  446f90:	mov	x0, #0x0                   	// #0
  446f94:	b	446f8c <_obstack_memory_used@@Base+0x20>
  446f98:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x41094>
  446f9c:	str	x0, [x1, #1272]
  446fa0:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  446fa4:	ldr	x0, [x0, #2216]
  446fa8:	cbz	x0, 446fb0 <_obstack_memory_used@@Base+0x44>
  446fac:	ret
  446fb0:	stp	x29, x30, [sp, #-16]!
  446fb4:	mov	x29, sp
  446fb8:	bl	4022f0 <sbrk@plt>
  446fbc:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x41094>
  446fc0:	str	x0, [x1, #2216]
  446fc4:	ldp	x29, x30, [sp], #16
  446fc8:	ret
  446fcc:	stp	x29, x30, [sp, #-32]!
  446fd0:	mov	x29, sp
  446fd4:	stp	x19, x20, [sp, #16]
  446fd8:	mov	x19, x0
  446fdc:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  446fe0:	ldr	x20, [x0, #2216]
  446fe4:	cbz	x20, 447038 <_obstack_memory_used@@Base+0xcc>
  446fe8:	mov	x0, #0x0                   	// #0
  446fec:	bl	4022f0 <sbrk@plt>
  446ff0:	sub	x5, x0, x20
  446ff4:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  446ff8:	ldr	x2, [x0, #1272]
  446ffc:	ldrb	w0, [x2]
  447000:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  447004:	add	x1, x1, #0x710
  447008:	adrp	x3, 458000 <_obstack_memory_used@@Base+0x11094>
  44700c:	add	x3, x3, #0x570
  447010:	cmp	w0, #0x0
  447014:	mov	x4, x19
  447018:	csel	x3, x3, x1, ne  // ne = any
  44701c:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1f094>
  447020:	add	x1, x1, #0xc68
  447024:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  447028:	ldr	x0, [x0, #1320]
  44702c:	bl	402890 <fprintf@plt>
  447030:	mov	w0, #0x1                   	// #1
  447034:	bl	447600 <_obstack_memory_used@@Base+0x694>
  447038:	mov	x0, #0x0                   	// #0
  44703c:	bl	4022f0 <sbrk@plt>
  447040:	adrp	x5, 488000 <_obstack_memory_used@@Base+0x41094>
  447044:	add	x5, x5, #0x548
  447048:	sub	x5, x0, x5
  44704c:	b	446ff4 <_obstack_memory_used@@Base+0x88>
  447050:	stp	x29, x30, [sp, #-32]!
  447054:	mov	x29, sp
  447058:	str	x19, [sp, #16]
  44705c:	cmp	x0, #0x0
  447060:	csinc	x19, x0, xzr, ne  // ne = any
  447064:	mov	x0, x19
  447068:	bl	402410 <malloc@plt>
  44706c:	cbz	x0, 44707c <_obstack_memory_used@@Base+0x110>
  447070:	ldr	x19, [sp, #16]
  447074:	ldp	x29, x30, [sp], #32
  447078:	ret
  44707c:	mov	x0, x19
  447080:	bl	446fcc <_obstack_memory_used@@Base+0x60>
  447084:	stp	x29, x30, [sp, #-32]!
  447088:	mov	x29, sp
  44708c:	stp	x19, x20, [sp, #16]
  447090:	mov	x20, x0
  447094:	mov	x19, x1
  447098:	cmp	x0, #0x0
  44709c:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  4470a0:	b.ne	4470ac <_obstack_memory_used@@Base+0x140>  // b.any
  4470a4:	mov	x19, #0x1                   	// #1
  4470a8:	mov	x20, x19
  4470ac:	mov	x1, x19
  4470b0:	mov	x0, x20
  4470b4:	bl	4024b0 <calloc@plt>
  4470b8:	cbz	x0, 4470c8 <_obstack_memory_used@@Base+0x15c>
  4470bc:	ldp	x19, x20, [sp, #16]
  4470c0:	ldp	x29, x30, [sp], #32
  4470c4:	ret
  4470c8:	mul	x0, x20, x19
  4470cc:	bl	446fcc <_obstack_memory_used@@Base+0x60>
  4470d0:	stp	x29, x30, [sp, #-32]!
  4470d4:	mov	x29, sp
  4470d8:	str	x19, [sp, #16]
  4470dc:	cmp	x1, #0x0
  4470e0:	csinc	x19, x1, xzr, ne  // ne = any
  4470e4:	cbz	x0, 447100 <_obstack_memory_used@@Base+0x194>
  4470e8:	mov	x1, x19
  4470ec:	bl	4024f0 <realloc@plt>
  4470f0:	cbz	x0, 44710c <_obstack_memory_used@@Base+0x1a0>
  4470f4:	ldr	x19, [sp, #16]
  4470f8:	ldp	x29, x30, [sp], #32
  4470fc:	ret
  447100:	mov	x0, x19
  447104:	bl	402410 <malloc@plt>
  447108:	b	4470f0 <_obstack_memory_used@@Base+0x184>
  44710c:	mov	x0, x19
  447110:	bl	446fcc <_obstack_memory_used@@Base+0x60>
  447114:	stp	x29, x30, [sp, #-48]!
  447118:	mov	x29, sp
  44711c:	stp	x19, x20, [sp, #16]
  447120:	stp	x21, x22, [sp, #32]
  447124:	mov	x22, x0
  447128:	mov	x19, x1
  44712c:	mov	x20, x2
  447130:	mov	x0, x2
  447134:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  447138:	mov	x21, x0
  44713c:	cmp	x20, x19
  447140:	b.hi	447164 <_obstack_memory_used@@Base+0x1f8>  // b.pmore
  447144:	mov	x2, x19
  447148:	mov	x1, x22
  44714c:	mov	x0, x21
  447150:	bl	402260 <memcpy@plt>
  447154:	ldp	x19, x20, [sp, #16]
  447158:	ldp	x21, x22, [sp, #32]
  44715c:	ldp	x29, x30, [sp], #48
  447160:	ret
  447164:	sub	x2, x20, x19
  447168:	mov	w1, #0x0                   	// #0
  44716c:	add	x0, x0, x19
  447170:	bl	402490 <memset@plt>
  447174:	b	447144 <_obstack_memory_used@@Base+0x1d8>
  447178:	stp	x29, x30, [sp, #-32]!
  44717c:	mov	x29, sp
  447180:	stp	x19, x20, [sp, #16]
  447184:	mov	x20, x0
  447188:	bl	4022b0 <strlen@plt>
  44718c:	add	x19, x0, #0x1
  447190:	mov	x0, x19
  447194:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  447198:	mov	x2, x19
  44719c:	mov	x1, x20
  4471a0:	bl	402260 <memcpy@plt>
  4471a4:	ldp	x19, x20, [sp, #16]
  4471a8:	ldp	x29, x30, [sp], #32
  4471ac:	ret
  4471b0:	stp	x29, x30, [sp, #-32]!
  4471b4:	mov	x29, sp
  4471b8:	stp	x19, x20, [sp, #16]
  4471bc:	mov	w20, w0
  4471c0:	bl	402530 <strerror@plt>
  4471c4:	cbz	x0, 4471d4 <_obstack_memory_used@@Base+0x268>
  4471c8:	ldp	x19, x20, [sp, #16]
  4471cc:	ldp	x29, x30, [sp], #32
  4471d0:	ret
  4471d4:	adrp	x19, 488000 <_obstack_memory_used@@Base+0x41094>
  4471d8:	add	x19, x19, #0x8b0
  4471dc:	mov	w2, w20
  4471e0:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1f094>
  4471e4:	add	x1, x1, #0xcb0
  4471e8:	mov	x0, x19
  4471ec:	bl	402350 <sprintf@plt>
  4471f0:	mov	x0, x19
  4471f4:	b	4471c8 <_obstack_memory_used@@Base+0x25c>
  4471f8:	stp	x29, x30, [sp, #-32]!
  4471fc:	mov	x29, sp
  447200:	stp	x19, x20, [sp, #16]
  447204:	mov	x20, x0
  447208:	bl	402300 <strnlen@plt>
  44720c:	mov	x19, x0
  447210:	add	x0, x0, #0x1
  447214:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  447218:	strb	wzr, [x0, x19]
  44721c:	mov	x2, x19
  447220:	mov	x1, x20
  447224:	bl	402260 <memcpy@plt>
  447228:	ldp	x19, x20, [sp, #16]
  44722c:	ldp	x29, x30, [sp], #32
  447230:	ret
  447234:	stp	x29, x30, [sp, #-80]!
  447238:	mov	x29, sp
  44723c:	stp	x19, x20, [sp, #16]
  447240:	str	x21, [sp, #32]
  447244:	mov	x21, x0
  447248:	mov	x19, x1
  44724c:	ldp	x2, x3, [x1]
  447250:	stp	x2, x3, [sp, #48]
  447254:	ldp	x2, x3, [x1, #16]
  447258:	stp	x2, x3, [sp, #64]
  44725c:	add	x1, sp, #0x30
  447260:	bl	4472a0 <_obstack_memory_used@@Base+0x334>
  447264:	sxtw	x0, w0
  447268:	bl	447050 <_obstack_memory_used@@Base+0xe4>
  44726c:	mov	x20, x0
  447270:	ldp	x2, x3, [x19]
  447274:	stp	x2, x3, [sp, #48]
  447278:	ldp	x2, x3, [x19, #16]
  44727c:	stp	x2, x3, [sp, #64]
  447280:	add	x2, sp, #0x30
  447284:	mov	x1, x21
  447288:	bl	402730 <vsprintf@plt>
  44728c:	mov	x0, x20
  447290:	ldp	x19, x20, [sp, #16]
  447294:	ldr	x21, [sp, #32]
  447298:	ldp	x29, x30, [sp], #80
  44729c:	ret
  4472a0:	stp	x29, x30, [sp, #-112]!
  4472a4:	mov	x29, sp
  4472a8:	stp	x19, x20, [sp, #16]
  4472ac:	stp	x21, x22, [sp, #32]
  4472b0:	stp	x23, x24, [sp, #48]
  4472b4:	mov	x19, x1
  4472b8:	str	x0, [sp, #104]
  4472bc:	bl	4022b0 <strlen@plt>
  4472c0:	add	w23, w0, #0x1
  4472c4:	ldp	x0, x1, [x19]
  4472c8:	stp	x0, x1, [sp, #72]
  4472cc:	ldp	x0, x1, [x19, #16]
  4472d0:	stp	x0, x1, [sp, #88]
  4472d4:	adrp	x22, 466000 <_obstack_memory_used@@Base+0x1f094>
  4472d8:	add	x22, x22, #0xcc8
  4472dc:	adrp	x21, 466000 <_obstack_memory_used@@Base+0x1f094>
  4472e0:	add	x21, x21, #0xcd0
  4472e4:	ldr	x0, [sp, #104]
  4472e8:	ldrb	w1, [x0]
  4472ec:	cbz	w1, 4475e8 <_obstack_memory_used@@Base+0x67c>
  4472f0:	add	x1, x0, #0x1
  4472f4:	str	x1, [sp, #104]
  4472f8:	ldrb	w0, [x0]
  4472fc:	cmp	w0, #0x25
  447300:	b.ne	4472e4 <_obstack_memory_used@@Base+0x378>  // b.any
  447304:	ldr	x19, [sp, #104]
  447308:	ldrb	w20, [x19]
  44730c:	mov	w1, w20
  447310:	mov	x0, x22
  447314:	bl	4026c0 <strchr@plt>
  447318:	cbz	x0, 447328 <_obstack_memory_used@@Base+0x3bc>
  44731c:	add	x19, x19, #0x1
  447320:	str	x19, [sp, #104]
  447324:	b	447304 <_obstack_memory_used@@Base+0x398>
  447328:	cmp	w20, #0x2a
  44732c:	b.ne	4473c0 <_obstack_memory_used@@Base+0x454>  // b.any
  447330:	add	x19, x19, #0x1
  447334:	str	x19, [sp, #104]
  447338:	ldr	w1, [sp, #96]
  44733c:	ldr	x0, [sp, #72]
  447340:	tbnz	w1, #31, 447394 <_obstack_memory_used@@Base+0x428>
  447344:	add	x1, x0, #0xb
  447348:	and	x1, x1, #0xfffffffffffffff8
  44734c:	str	x1, [sp, #72]
  447350:	ldr	w24, [x0]
  447354:	cmp	w24, #0x0
  447358:	cneg	w24, w24, lt  // lt = tstop
  44735c:	add	w24, w24, w23
  447360:	ldr	x1, [sp, #104]
  447364:	ldrb	w0, [x1]
  447368:	cmp	w0, #0x2e
  44736c:	b.eq	4473d8 <_obstack_memory_used@@Base+0x46c>  // b.none
  447370:	ldr	x20, [sp, #104]
  447374:	ldrb	w19, [x20]
  447378:	mov	w1, w19
  44737c:	mov	x0, x21
  447380:	bl	4026c0 <strchr@plt>
  447384:	cbz	x0, 447460 <_obstack_memory_used@@Base+0x4f4>
  447388:	add	x20, x20, #0x1
  44738c:	str	x20, [sp, #104]
  447390:	b	447370 <_obstack_memory_used@@Base+0x404>
  447394:	add	w2, w1, #0x8
  447398:	str	w2, [sp, #96]
  44739c:	cmp	w2, #0x0
  4473a0:	b.le	4473b4 <_obstack_memory_used@@Base+0x448>
  4473a4:	add	x1, x0, #0xb
  4473a8:	and	x1, x1, #0xfffffffffffffff8
  4473ac:	str	x1, [sp, #72]
  4473b0:	b	447350 <_obstack_memory_used@@Base+0x3e4>
  4473b4:	ldr	x0, [sp, #80]
  4473b8:	add	x0, x0, w1, sxtw
  4473bc:	b	447350 <_obstack_memory_used@@Base+0x3e4>
  4473c0:	mov	w2, #0xa                   	// #10
  4473c4:	add	x1, sp, #0x68
  4473c8:	mov	x0, x19
  4473cc:	bl	4022a0 <strtoul@plt>
  4473d0:	add	w24, w23, w0
  4473d4:	b	447360 <_obstack_memory_used@@Base+0x3f4>
  4473d8:	add	x0, x1, #0x1
  4473dc:	str	x0, [sp, #104]
  4473e0:	ldrb	w2, [x1, #1]
  4473e4:	cmp	w2, #0x2a
  4473e8:	b.ne	44744c <_obstack_memory_used@@Base+0x4e0>  // b.any
  4473ec:	add	x1, x1, #0x2
  4473f0:	str	x1, [sp, #104]
  4473f4:	ldr	w1, [sp, #96]
  4473f8:	ldr	x0, [sp, #72]
  4473fc:	tbnz	w1, #31, 447420 <_obstack_memory_used@@Base+0x4b4>
  447400:	add	x1, x0, #0xb
  447404:	and	x1, x1, #0xfffffffffffffff8
  447408:	str	x1, [sp, #72]
  44740c:	ldr	w0, [x0]
  447410:	cmp	w0, #0x0
  447414:	cneg	w0, w0, lt  // lt = tstop
  447418:	add	w24, w24, w0
  44741c:	b	447370 <_obstack_memory_used@@Base+0x404>
  447420:	add	w2, w1, #0x8
  447424:	str	w2, [sp, #96]
  447428:	cmp	w2, #0x0
  44742c:	b.le	447440 <_obstack_memory_used@@Base+0x4d4>
  447430:	add	x1, x0, #0xb
  447434:	and	x1, x1, #0xfffffffffffffff8
  447438:	str	x1, [sp, #72]
  44743c:	b	44740c <_obstack_memory_used@@Base+0x4a0>
  447440:	ldr	x0, [sp, #80]
  447444:	add	x0, x0, w1, sxtw
  447448:	b	44740c <_obstack_memory_used@@Base+0x4a0>
  44744c:	mov	w2, #0xa                   	// #10
  447450:	add	x1, sp, #0x68
  447454:	bl	4022a0 <strtoul@plt>
  447458:	add	w24, w24, w0
  44745c:	b	447370 <_obstack_memory_used@@Base+0x404>
  447460:	add	w23, w24, #0x1e
  447464:	cmp	w19, #0x67
  447468:	b.ls	4474c8 <_obstack_memory_used@@Base+0x55c>  // b.plast
  44746c:	sub	w19, w19, #0x69
  447470:	and	w19, w19, #0xff
  447474:	cmp	w19, #0xf
  447478:	b.hi	4474d0 <_obstack_memory_used@@Base+0x564>  // b.pmore
  44747c:	mov	x1, #0x1                   	// #1
  447480:	lsl	x1, x1, x19
  447484:	mov	x0, #0x9041                	// #36929
  447488:	tst	x1, x0
  44748c:	b.ne	447504 <_obstack_memory_used@@Base+0x598>  // b.any
  447490:	mov	x0, #0xa0                  	// #160
  447494:	tst	x1, x0
  447498:	b.ne	4475ac <_obstack_memory_used@@Base+0x640>  // b.any
  44749c:	tbz	w1, #10, 4474d0 <_obstack_memory_used@@Base+0x564>
  4474a0:	ldr	w1, [sp, #96]
  4474a4:	ldr	x0, [sp, #72]
  4474a8:	tbnz	w1, #31, 447580 <_obstack_memory_used@@Base+0x614>
  4474ac:	add	x1, x0, #0xf
  4474b0:	and	x1, x1, #0xfffffffffffffff8
  4474b4:	str	x1, [sp, #72]
  4474b8:	ldr	x0, [x0]
  4474bc:	bl	4022b0 <strlen@plt>
  4474c0:	add	w23, w23, w0
  4474c4:	b	4474d0 <_obstack_memory_used@@Base+0x564>
  4474c8:	cmp	w19, #0x44
  4474cc:	b.hi	4474dc <_obstack_memory_used@@Base+0x570>  // b.pmore
  4474d0:	add	x20, x20, #0x1
  4474d4:	str	x20, [sp, #104]
  4474d8:	b	4472e4 <_obstack_memory_used@@Base+0x378>
  4474dc:	sub	w19, w19, #0x45
  4474e0:	mov	x0, #0x1                   	// #1
  4474e4:	lsl	x19, x0, x19
  4474e8:	mov	x0, #0x5                   	// #5
  4474ec:	movk	x0, #0x7, lsl #32
  4474f0:	tst	x19, x0
  4474f4:	b.ne	447540 <_obstack_memory_used@@Base+0x5d4>  // b.any
  4474f8:	mov	x0, #0xc0080000            	// #3221749760
  4474fc:	tst	x19, x0
  447500:	b.eq	4474d0 <_obstack_memory_used@@Base+0x564>  // b.none
  447504:	ldr	w1, [sp, #96]
  447508:	ldr	x0, [sp, #72]
  44750c:	tbnz	w1, #31, 447520 <_obstack_memory_used@@Base+0x5b4>
  447510:	add	x0, x0, #0xb
  447514:	and	x0, x0, #0xfffffffffffffff8
  447518:	str	x0, [sp, #72]
  44751c:	b	4474d0 <_obstack_memory_used@@Base+0x564>
  447520:	add	w1, w1, #0x8
  447524:	str	w1, [sp, #96]
  447528:	cmp	w1, #0x0
  44752c:	b.le	4474d0 <_obstack_memory_used@@Base+0x564>
  447530:	add	x0, x0, #0xb
  447534:	and	x0, x0, #0xfffffffffffffff8
  447538:	str	x0, [sp, #72]
  44753c:	b	4474d0 <_obstack_memory_used@@Base+0x564>
  447540:	ldr	w1, [sp, #100]
  447544:	ldr	x0, [sp, #72]
  447548:	tbnz	w1, #31, 447560 <_obstack_memory_used@@Base+0x5f4>
  44754c:	add	x0, x0, #0xf
  447550:	and	x0, x0, #0xfffffffffffffff8
  447554:	str	x0, [sp, #72]
  447558:	add	w23, w24, #0x151
  44755c:	b	4474d0 <_obstack_memory_used@@Base+0x564>
  447560:	add	w1, w1, #0x10
  447564:	str	w1, [sp, #100]
  447568:	cmp	w1, #0x0
  44756c:	b.le	447558 <_obstack_memory_used@@Base+0x5ec>
  447570:	add	x0, x0, #0xf
  447574:	and	x0, x0, #0xfffffffffffffff8
  447578:	str	x0, [sp, #72]
  44757c:	b	447558 <_obstack_memory_used@@Base+0x5ec>
  447580:	add	w2, w1, #0x8
  447584:	str	w2, [sp, #96]
  447588:	cmp	w2, #0x0
  44758c:	b.le	4475a0 <_obstack_memory_used@@Base+0x634>
  447590:	add	x1, x0, #0xf
  447594:	and	x1, x1, #0xfffffffffffffff8
  447598:	str	x1, [sp, #72]
  44759c:	b	4474b8 <_obstack_memory_used@@Base+0x54c>
  4475a0:	ldr	x0, [sp, #80]
  4475a4:	add	x0, x0, w1, sxtw
  4475a8:	b	4474b8 <_obstack_memory_used@@Base+0x54c>
  4475ac:	ldr	w1, [sp, #96]
  4475b0:	ldr	x0, [sp, #72]
  4475b4:	tbnz	w1, #31, 4475c8 <_obstack_memory_used@@Base+0x65c>
  4475b8:	add	x0, x0, #0xf
  4475bc:	and	x0, x0, #0xfffffffffffffff8
  4475c0:	str	x0, [sp, #72]
  4475c4:	b	4474d0 <_obstack_memory_used@@Base+0x564>
  4475c8:	add	w1, w1, #0x8
  4475cc:	str	w1, [sp, #96]
  4475d0:	cmp	w1, #0x0
  4475d4:	b.le	4474d0 <_obstack_memory_used@@Base+0x564>
  4475d8:	add	x0, x0, #0xf
  4475dc:	and	x0, x0, #0xfffffffffffffff8
  4475e0:	str	x0, [sp, #72]
  4475e4:	b	4474d0 <_obstack_memory_used@@Base+0x564>
  4475e8:	mov	w0, w23
  4475ec:	ldp	x19, x20, [sp, #16]
  4475f0:	ldp	x21, x22, [sp, #32]
  4475f4:	ldp	x23, x24, [sp, #48]
  4475f8:	ldp	x29, x30, [sp], #112
  4475fc:	ret
  447600:	stp	x29, x30, [sp, #-32]!
  447604:	mov	x29, sp
  447608:	str	x19, [sp, #16]
  44760c:	mov	w19, w0
  447610:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  447614:	ldr	x0, [x0, #2944]
  447618:	cbz	x0, 447620 <_obstack_memory_used@@Base+0x6b4>
  44761c:	blr	x0
  447620:	mov	w0, w19
  447624:	bl	4022e0 <exit@plt>
  447628:	b	447ee0 <_obstack_memory_used@@Base+0xf74>
  44762c:	nop
  447630:	b	447ee8 <_obstack_memory_used@@Base+0xf7c>
  447634:	nop
  447638:	stp	x29, x30, [sp, #-64]!
  44763c:	mov	x29, sp
  447640:	str	x23, [sp, #48]
  447644:	mov	x23, x0
  447648:	ldarb	w0, [x0]
  44764c:	tst	w0, #0xff
  447650:	b.ne	4476ac <_obstack_memory_used@@Base+0x740>  // b.any
  447654:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x40094>
  447658:	ldr	x0, [x0, #3880]
  44765c:	cbz	x0, 4476bc <_obstack_memory_used@@Base+0x750>
  447660:	stp	x19, x20, [sp, #16]
  447664:	mov	w19, #0x100                 	// #256
  447668:	mov	w20, #0x1                   	// #1
  44766c:	stp	x21, x22, [sp, #32]
  447670:	mov	w21, w19
  447674:	ldaxr	w0, [x23]
  447678:	cbnz	w0, 447684 <_obstack_memory_used@@Base+0x718>
  44767c:	stlxr	w1, w19, [x23]
  447680:	cbnz	w1, 447674 <_obstack_memory_used@@Base+0x708>
  447684:	cmp	w0, #0x0
  447688:	b.ne	4476e4 <_obstack_memory_used@@Base+0x778>  // b.any
  44768c:	mov	w0, #0x1                   	// #1
  447690:	ldp	x19, x20, [sp, #16]
  447694:	ldp	x21, x22, [sp, #32]
  447698:	ldr	x23, [sp, #48]
  44769c:	ldp	x29, x30, [sp], #64
  4476a0:	ret
  4476a4:	ldp	x19, x20, [sp, #16]
  4476a8:	ldp	x21, x22, [sp, #32]
  4476ac:	mov	w0, #0x0                   	// #0
  4476b0:	ldr	x23, [sp, #48]
  4476b4:	ldp	x29, x30, [sp], #64
  4476b8:	ret
  4476bc:	ldrb	w0, [x23]
  4476c0:	cbnz	w0, 4476ac <_obstack_memory_used@@Base+0x740>
  4476c4:	ldrb	w0, [x23, #1]
  4476c8:	cbnz	w0, 44775c <_obstack_memory_used@@Base+0x7f0>
  4476cc:	mov	w2, #0x1                   	// #1
  4476d0:	strb	w2, [x23, #1]
  4476d4:	mov	w0, #0x1                   	// #1
  4476d8:	ldr	x23, [sp, #48]
  4476dc:	ldp	x29, x30, [sp], #64
  4476e0:	ret
  4476e4:	orr	w22, w19, #0x10000
  4476e8:	mov	w3, w0
  4476ec:	cmp	w20, w3
  4476f0:	b.eq	4476a4 <_obstack_memory_used@@Base+0x738>  // b.none
  4476f4:	cmp	w19, w3
  4476f8:	b.ne	447718 <_obstack_memory_used@@Base+0x7ac>  // b.any
  4476fc:	mov	w3, w22
  447700:	ldaxr	w2, [x23]
  447704:	cmp	w2, w0
  447708:	b.ne	447714 <_obstack_memory_used@@Base+0x7a8>  // b.any
  44770c:	stlxr	w1, w22, [x23]
  447710:	cbnz	w1, 447700 <_obstack_memory_used@@Base+0x794>
  447714:	b.ne	44774c <_obstack_memory_used@@Base+0x7e0>  // b.any
  447718:	mov	x1, x23
  44771c:	mov	w4, #0x0                   	// #0
  447720:	mov	w2, #0x0                   	// #0
  447724:	mov	x0, #0x62                  	// #98
  447728:	bl	402860 <syscall@plt>
  44772c:	ldaxr	w0, [x23]
  447730:	cbnz	w0, 44773c <_obstack_memory_used@@Base+0x7d0>
  447734:	stlxr	w1, w21, [x23]
  447738:	cbnz	w1, 44772c <_obstack_memory_used@@Base+0x7c0>
  44773c:	cmp	w0, #0x0
  447740:	mov	w3, w0
  447744:	b.eq	44768c <_obstack_memory_used@@Base+0x720>  // b.none
  447748:	b	4476ec <_obstack_memory_used@@Base+0x780>
  44774c:	cmp	w20, w2
  447750:	b.eq	4476a4 <_obstack_memory_used@@Base+0x738>  // b.none
  447754:	cbnz	w2, 447718 <_obstack_memory_used@@Base+0x7ac>
  447758:	b	44772c <_obstack_memory_used@@Base+0x7c0>
  44775c:	mov	x0, #0x8                   	// #8
  447760:	stp	x19, x20, [sp, #16]
  447764:	stp	x21, x22, [sp, #32]
  447768:	bl	448258 <_obstack_memory_used@@Base+0x12ec>
  44776c:	mov	x19, x0
  447770:	bl	447850 <_obstack_memory_used@@Base+0x8e4>
  447774:	adrp	x2, 487000 <_obstack_memory_used@@Base+0x40094>
  447778:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x40094>
  44777c:	mov	x0, x19
  447780:	ldr	x2, [x2, #4016]
  447784:	ldr	x1, [x1, #3896]
  447788:	bl	449070 <_obstack_memory_used@@Base+0x2104>
  44778c:	nop
  447790:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x40094>
  447794:	ldr	x1, [x1, #3880]
  447798:	cbnz	x1, 4477a4 <_obstack_memory_used@@Base+0x838>
  44779c:	strb	wzr, [x0, #1]
  4477a0:	ret
  4477a4:	ldaxr	w1, [x0]
  4477a8:	stlxr	w2, wzr, [x0]
  4477ac:	cbnz	w2, 4477a4 <_obstack_memory_used@@Base+0x838>
  4477b0:	tbz	w1, #16, 4477a0 <_obstack_memory_used@@Base+0x834>
  4477b4:	mov	x1, x0
  4477b8:	mov	w3, #0x7fffffff            	// #2147483647
  4477bc:	mov	w2, #0x1                   	// #1
  4477c0:	mov	x0, #0x62                  	// #98
  4477c4:	b	402860 <syscall@plt>
  4477c8:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x40094>
  4477cc:	ldr	x1, [x1, #3880]
  4477d0:	cbz	x1, 4477ec <_obstack_memory_used@@Base+0x880>
  4477d4:	mov	w2, #0x1                   	// #1
  4477d8:	ldaxr	w1, [x0]
  4477dc:	stlxr	w3, w2, [x0]
  4477e0:	cbnz	w3, 4477d8 <_obstack_memory_used@@Base+0x86c>
  4477e4:	tbnz	w1, #16, 4477fc <_obstack_memory_used@@Base+0x890>
  4477e8:	ret
  4477ec:	strb	wzr, [x0, #1]
  4477f0:	mov	w1, #0x1                   	// #1
  4477f4:	stlrb	w1, [x0]
  4477f8:	ret
  4477fc:	mov	x1, x0
  447800:	mov	w3, #0x7fffffff            	// #2147483647
  447804:	mov	x0, #0x62                  	// #98
  447808:	b	402860 <syscall@plt>
  44780c:	nop
  447810:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x40094>
  447814:	ldr	x1, [x1, #4056]
  447818:	add	x1, x1, #0x10
  44781c:	str	x1, [x0]
  447820:	b	448390 <_obstack_memory_used@@Base+0x1424>
  447824:	nop
  447828:	stp	x29, x30, [sp, #-32]!
  44782c:	mov	x29, sp
  447830:	str	x19, [sp, #16]
  447834:	mov	x19, x0
  447838:	bl	447810 <_obstack_memory_used@@Base+0x8a4>
  44783c:	mov	x0, x19
  447840:	mov	x1, #0x8                   	// #8
  447844:	ldr	x19, [sp, #16]
  447848:	ldp	x29, x30, [sp], #32
  44784c:	b	447628 <_obstack_memory_used@@Base+0x6bc>
  447850:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x40094>
  447854:	ldr	x1, [x1, #4056]
  447858:	add	x1, x1, #0x10
  44785c:	str	x1, [x0]
  447860:	ret
  447864:	nop
  447868:	stp	x29, x30, [sp, #-32]!
  44786c:	cmp	x0, #0x0
  447870:	mov	x29, sp
  447874:	str	x19, [sp, #16]
  447878:	csinc	x19, x0, xzr, ne  // ne = any
  44787c:	mov	x0, x19
  447880:	bl	402410 <malloc@plt>
  447884:	cbz	x0, 447894 <_obstack_memory_used@@Base+0x928>
  447888:	ldr	x19, [sp, #16]
  44788c:	ldp	x29, x30, [sp], #32
  447890:	ret
  447894:	bl	449160 <_obstack_memory_used@@Base+0x21f4>
  447898:	cbz	x0, 4478a4 <_obstack_memory_used@@Base+0x938>
  44789c:	blr	x0
  4478a0:	b	44787c <_obstack_memory_used@@Base+0x910>
  4478a4:	mov	x0, #0x8                   	// #8
  4478a8:	bl	448258 <_obstack_memory_used@@Base+0x12ec>
  4478ac:	adrp	x3, 487000 <_obstack_memory_used@@Base+0x40094>
  4478b0:	adrp	x2, 487000 <_obstack_memory_used@@Base+0x40094>
  4478b4:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x40094>
  4478b8:	ldr	x3, [x3, #3992]
  4478bc:	ldr	x2, [x2, #3920]
  4478c0:	add	x3, x3, #0x10
  4478c4:	ldr	x1, [x1, #3904]
  4478c8:	str	x3, [x0]
  4478cc:	bl	449070 <_obstack_memory_used@@Base+0x2104>
  4478d0:	b	447868 <_obstack_memory_used@@Base+0x8fc>
  4478d4:	nop
  4478d8:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x40094>
  4478dc:	ldr	x1, [x1, #4008]
  4478e0:	add	x1, x1, #0x10
  4478e4:	str	x1, [x0]
  4478e8:	b	447ca0 <_obstack_memory_used@@Base+0xd34>
  4478ec:	nop
  4478f0:	stp	x29, x30, [sp, #-32]!
  4478f4:	mov	x29, sp
  4478f8:	str	x19, [sp, #16]
  4478fc:	mov	x19, x0
  447900:	bl	4478d8 <_obstack_memory_used@@Base+0x96c>
  447904:	mov	x0, x19
  447908:	mov	x1, #0x18                  	// #24
  44790c:	ldr	x19, [sp, #16]
  447910:	ldp	x29, x30, [sp], #32
  447914:	b	447628 <_obstack_memory_used@@Base+0x6bc>
  447918:	stp	x29, x30, [sp, #-64]!
  44791c:	cmp	x4, x2
  447920:	mov	x29, sp
  447924:	stp	x19, x20, [sp, #16]
  447928:	mov	x19, x0
  44792c:	mov	x20, x1
  447930:	b.eq	447954 <_obstack_memory_used@@Base+0x9e8>  // b.none
  447934:	ldr	x0, [x19, #16]
  447938:	mov	x1, x20
  44793c:	ldp	x19, x20, [sp, #16]
  447940:	ldr	x5, [x0]
  447944:	ldr	x5, [x5, #64]
  447948:	ldp	x29, x30, [sp], #64
  44794c:	mov	x16, x5
  447950:	br	x16
  447954:	ldr	x1, [x3, #8]
  447958:	ldr	x0, [x0, #8]
  44795c:	cmp	x0, x1
  447960:	b.eq	447988 <_obstack_memory_used@@Base+0xa1c>  // b.none
  447964:	ldrb	w5, [x0]
  447968:	cmp	w5, #0x2a
  44796c:	b.eq	447934 <_obstack_memory_used@@Base+0x9c8>  // b.none
  447970:	stp	x2, x3, [sp, #40]
  447974:	str	x4, [sp, #56]
  447978:	bl	402620 <strcmp@plt>
  44797c:	ldp	x2, x3, [sp, #40]
  447980:	ldr	x4, [sp, #56]
  447984:	cbnz	w0, 447934 <_obstack_memory_used@@Base+0x9c8>
  447988:	mov	w0, #0x6                   	// #6
  44798c:	ldp	x19, x20, [sp, #16]
  447990:	ldp	x29, x30, [sp], #64
  447994:	ret
  447998:	stp	x29, x30, [sp, #-96]!
  44799c:	mov	x29, sp
  4479a0:	stp	x21, x22, [sp, #32]
  4479a4:	mov	x22, x3
  4479a8:	mov	x21, x1
  4479ac:	stp	x25, x26, [sp, #64]
  4479b0:	mov	w26, w2
  4479b4:	ldr	x25, [x0, #8]
  4479b8:	stp	x19, x20, [sp, #16]
  4479bc:	mov	x19, x4
  4479c0:	ldr	x3, [x3, #8]
  4479c4:	stp	x23, x24, [sp, #48]
  4479c8:	mov	x20, x7
  4479cc:	mov	x23, x6
  4479d0:	cmp	x25, x3
  4479d4:	b.eq	447a04 <_obstack_memory_used@@Base+0xa98>  // b.none
  4479d8:	stp	x27, x28, [sp, #80]
  4479dc:	mov	x24, x5
  4479e0:	mov	x27, x0
  4479e4:	ldrb	w28, [x25]
  4479e8:	cmp	w28, #0x2a
  4479ec:	b.eq	447a40 <_obstack_memory_used@@Base+0xad4>  // b.none
  4479f0:	mov	x1, x3
  4479f4:	mov	x0, x25
  4479f8:	bl	402620 <strcmp@plt>
  4479fc:	cbnz	w0, 447a40 <_obstack_memory_used@@Base+0xad4>
  447a00:	ldp	x27, x28, [sp, #80]
  447a04:	str	x19, [x20]
  447a08:	str	w26, [x20, #8]
  447a0c:	tbnz	x21, #63, 447a90 <_obstack_memory_used@@Base+0xb24>
  447a10:	add	x1, x19, x21
  447a14:	mov	w2, #0x6                   	// #6
  447a18:	cmp	x23, x1
  447a1c:	mov	w0, #0x0                   	// #0
  447a20:	csinc	w2, w2, wzr, eq  // eq = none
  447a24:	str	w2, [x20, #16]
  447a28:	ldp	x19, x20, [sp, #16]
  447a2c:	ldp	x21, x22, [sp, #32]
  447a30:	ldp	x23, x24, [sp, #48]
  447a34:	ldp	x25, x26, [sp, #64]
  447a38:	ldp	x29, x30, [sp], #96
  447a3c:	ret
  447a40:	cmp	x19, x23
  447a44:	b.eq	447aa8 <_obstack_memory_used@@Base+0xb3c>  // b.none
  447a48:	ldr	x0, [x27, #16]
  447a4c:	mov	x7, x20
  447a50:	mov	x6, x23
  447a54:	mov	x5, x24
  447a58:	mov	x4, x19
  447a5c:	mov	x3, x22
  447a60:	ldr	x8, [x0]
  447a64:	mov	w2, w26
  447a68:	mov	x1, x21
  447a6c:	ldp	x19, x20, [sp, #16]
  447a70:	ldp	x21, x22, [sp, #32]
  447a74:	ldp	x23, x24, [sp, #48]
  447a78:	ldp	x25, x26, [sp, #64]
  447a7c:	ldp	x27, x28, [sp, #80]
  447a80:	ldp	x29, x30, [sp], #96
  447a84:	ldr	x8, [x8, #56]
  447a88:	mov	x16, x8
  447a8c:	br	x16
  447a90:	cmn	x21, #0x2
  447a94:	mov	w0, #0x0                   	// #0
  447a98:	b.ne	447a28 <_obstack_memory_used@@Base+0xabc>  // b.any
  447a9c:	mov	w1, #0x1                   	// #1
  447aa0:	str	w1, [x20, #16]
  447aa4:	b	447a28 <_obstack_memory_used@@Base+0xabc>
  447aa8:	ldr	x1, [x24, #8]
  447aac:	cmp	x25, x1
  447ab0:	b.eq	447ac8 <_obstack_memory_used@@Base+0xb5c>  // b.none
  447ab4:	cmp	w28, #0x2a
  447ab8:	b.eq	447a48 <_obstack_memory_used@@Base+0xadc>  // b.none
  447abc:	mov	x0, x25
  447ac0:	bl	402620 <strcmp@plt>
  447ac4:	cbnz	w0, 447a48 <_obstack_memory_used@@Base+0xadc>
  447ac8:	mov	w0, #0x0                   	// #0
  447acc:	ldp	x27, x28, [sp, #80]
  447ad0:	str	w26, [x20, #12]
  447ad4:	b	447a28 <_obstack_memory_used@@Base+0xabc>
  447ad8:	stp	x29, x30, [sp, #-48]!
  447adc:	mov	x29, sp
  447ae0:	stp	x19, x20, [sp, #16]
  447ae4:	mov	x19, x1
  447ae8:	mov	x20, x2
  447aec:	stp	x21, x22, [sp, #32]
  447af0:	mov	x22, x0
  447af4:	mov	x21, x3
  447af8:	bl	447dc0 <_obstack_memory_used@@Base+0xe54>
  447afc:	tst	w0, #0xff
  447b00:	b.ne	447b30 <_obstack_memory_used@@Base+0xbc4>  // b.any
  447b04:	ldr	x0, [x22, #16]
  447b08:	mov	x3, x21
  447b0c:	mov	x2, x20
  447b10:	mov	x1, x19
  447b14:	ldp	x19, x20, [sp, #16]
  447b18:	ldr	x4, [x0]
  447b1c:	ldp	x21, x22, [sp, #32]
  447b20:	ldp	x29, x30, [sp], #48
  447b24:	ldr	x4, [x4, #48]
  447b28:	mov	x16, x4
  447b2c:	br	x16
  447b30:	ldp	x19, x20, [sp, #16]
  447b34:	ldp	x21, x22, [sp, #32]
  447b38:	ldp	x29, x30, [sp], #48
  447b3c:	ret
  447b40:	ret
  447b44:	nop
  447b48:	mov	w0, #0x0                   	// #0
  447b4c:	ret
  447b50:	mov	w0, #0x0                   	// #0
  447b54:	ret
  447b58:	stp	x29, x30, [sp, #-32]!
  447b5c:	mov	x29, sp
  447b60:	str	x19, [sp, #16]
  447b64:	mov	x19, x0
  447b68:	bl	447b40 <_obstack_memory_used@@Base+0xbd4>
  447b6c:	mov	x0, x19
  447b70:	mov	x1, #0x10                  	// #16
  447b74:	ldr	x19, [sp, #16]
  447b78:	ldp	x29, x30, [sp], #32
  447b7c:	b	447628 <_obstack_memory_used@@Base+0x6bc>
  447b80:	ldr	x2, [x0, #8]
  447b84:	ldr	x1, [x1, #8]
  447b88:	cmp	x2, x1
  447b8c:	b.eq	447bc4 <_obstack_memory_used@@Base+0xc58>  // b.none
  447b90:	ldrb	w3, [x2]
  447b94:	mov	w0, #0x0                   	// #0
  447b98:	cmp	w3, #0x2a
  447b9c:	b.eq	447bc0 <_obstack_memory_used@@Base+0xc54>  // b.none
  447ba0:	stp	x29, x30, [sp, #-16]!
  447ba4:	mov	x0, x2
  447ba8:	mov	x29, sp
  447bac:	bl	402620 <strcmp@plt>
  447bb0:	cmp	w0, #0x0
  447bb4:	cset	w0, eq  // eq = none
  447bb8:	ldp	x29, x30, [sp], #16
  447bbc:	ret
  447bc0:	ret
  447bc4:	mov	w0, #0x1                   	// #1
  447bc8:	ret
  447bcc:	nop
  447bd0:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1f094>
  447bd4:	add	x0, x0, #0xd38
  447bd8:	ret
  447bdc:	nop
  447be0:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x40094>
  447be4:	ldr	x1, [x1, #3992]
  447be8:	add	x1, x1, #0x10
  447bec:	str	x1, [x0]
  447bf0:	b	448390 <_obstack_memory_used@@Base+0x1424>
  447bf4:	nop
  447bf8:	stp	x29, x30, [sp, #-32]!
  447bfc:	mov	x29, sp
  447c00:	str	x19, [sp, #16]
  447c04:	mov	x19, x0
  447c08:	bl	447be0 <_obstack_memory_used@@Base+0xc74>
  447c0c:	mov	x0, x19
  447c10:	mov	x1, #0x8                   	// #8
  447c14:	ldr	x19, [sp, #16]
  447c18:	ldp	x29, x30, [sp], #32
  447c1c:	b	447628 <_obstack_memory_used@@Base+0x6bc>
  447c20:	stp	x29, x30, [sp, #-64]!
  447c24:	mov	x29, sp
  447c28:	ldr	x4, [x0]
  447c2c:	str	xzr, [sp, #40]
  447c30:	str	xzr, [sp, #56]
  447c34:	add	x3, sp, #0x28
  447c38:	ldr	x4, [x4, #48]
  447c3c:	str	x19, [sp, #16]
  447c40:	mov	x19, x2
  447c44:	mov	x2, #0x1000000000          	// #68719476736
  447c48:	str	x2, [sp, #48]
  447c4c:	ldr	x2, [x19]
  447c50:	blr	x4
  447c54:	ldr	w0, [sp, #48]
  447c58:	and	w0, w0, #0x6
  447c5c:	cmp	w0, #0x6
  447c60:	b.ne	447c7c <_obstack_memory_used@@Base+0xd10>  // b.any
  447c64:	ldr	x1, [sp, #40]
  447c68:	str	x1, [x19]
  447c6c:	mov	w0, #0x1                   	// #1
  447c70:	ldr	x19, [sp, #16]
  447c74:	ldp	x29, x30, [sp], #64
  447c78:	ret
  447c7c:	mov	w0, #0x0                   	// #0
  447c80:	ldr	x19, [sp, #16]
  447c84:	ldp	x29, x30, [sp], #64
  447c88:	ret
  447c8c:	nop
  447c90:	cmp	x4, x2
  447c94:	mov	w0, #0x6                   	// #6
  447c98:	csinc	w0, w0, wzr, eq  // eq = none
  447c9c:	ret
  447ca0:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x40094>
  447ca4:	ldr	x1, [x1, #4048]
  447ca8:	add	x1, x1, #0x10
  447cac:	str	x1, [x0]
  447cb0:	b	447b40 <_obstack_memory_used@@Base+0xbd4>
  447cb4:	nop
  447cb8:	stp	x29, x30, [sp, #-32]!
  447cbc:	mov	x29, sp
  447cc0:	str	x19, [sp, #16]
  447cc4:	mov	x19, x0
  447cc8:	bl	447ca0 <_obstack_memory_used@@Base+0xd34>
  447ccc:	mov	x0, x19
  447cd0:	mov	x1, #0x10                  	// #16
  447cd4:	ldr	x19, [sp, #16]
  447cd8:	ldp	x29, x30, [sp], #32
  447cdc:	b	447628 <_obstack_memory_used@@Base+0x6bc>
  447ce0:	stp	x29, x30, [sp, #-64]!
  447ce4:	cmp	x4, x6
  447ce8:	mov	x29, sp
  447cec:	stp	x19, x20, [sp, #16]
  447cf0:	mov	x20, x4
  447cf4:	mov	x19, x7
  447cf8:	stp	x21, x22, [sp, #32]
  447cfc:	mov	w21, w2
  447d00:	ldr	x22, [x0, #8]
  447d04:	str	x23, [sp, #48]
  447d08:	mov	x23, x3
  447d0c:	b.eq	447d5c <_obstack_memory_used@@Base+0xdf0>  // b.none
  447d10:	ldr	x1, [x3, #8]
  447d14:	cmp	x1, x22
  447d18:	b.eq	447d34 <_obstack_memory_used@@Base+0xdc8>  // b.none
  447d1c:	ldrb	w0, [x22]
  447d20:	cmp	w0, #0x2a
  447d24:	b.eq	447d44 <_obstack_memory_used@@Base+0xdd8>  // b.none
  447d28:	mov	x0, x22
  447d2c:	bl	402620 <strcmp@plt>
  447d30:	cbnz	w0, 447d44 <_obstack_memory_used@@Base+0xdd8>
  447d34:	mov	w0, #0x1                   	// #1
  447d38:	str	x20, [x19]
  447d3c:	str	w21, [x19, #8]
  447d40:	str	w0, [x19, #16]
  447d44:	mov	w0, #0x0                   	// #0
  447d48:	ldp	x19, x20, [sp, #16]
  447d4c:	ldp	x21, x22, [sp, #32]
  447d50:	ldr	x23, [sp, #48]
  447d54:	ldp	x29, x30, [sp], #64
  447d58:	ret
  447d5c:	ldr	x1, [x5, #8]
  447d60:	cmp	x1, x22
  447d64:	b.eq	447da0 <_obstack_memory_used@@Base+0xe34>  // b.none
  447d68:	ldrb	w0, [x22]
  447d6c:	cmp	w0, #0x2a
  447d70:	b.eq	447d90 <_obstack_memory_used@@Base+0xe24>  // b.none
  447d74:	mov	x0, x22
  447d78:	bl	402620 <strcmp@plt>
  447d7c:	cbz	w0, 447da0 <_obstack_memory_used@@Base+0xe34>
  447d80:	ldr	x1, [x23, #8]
  447d84:	cmp	x22, x1
  447d88:	b.ne	447d28 <_obstack_memory_used@@Base+0xdbc>  // b.any
  447d8c:	b	447d34 <_obstack_memory_used@@Base+0xdc8>
  447d90:	ldr	x0, [x3, #8]
  447d94:	cmp	x0, x22
  447d98:	b.ne	447d44 <_obstack_memory_used@@Base+0xdd8>  // b.any
  447d9c:	b	447d34 <_obstack_memory_used@@Base+0xdc8>
  447da0:	str	w21, [x19, #12]
  447da4:	mov	w0, #0x0                   	// #0
  447da8:	ldp	x19, x20, [sp, #16]
  447dac:	ldp	x21, x22, [sp, #32]
  447db0:	ldr	x23, [sp, #48]
  447db4:	ldp	x29, x30, [sp], #64
  447db8:	ret
  447dbc:	nop
  447dc0:	stp	x29, x30, [sp, #-48]!
  447dc4:	mov	x29, sp
  447dc8:	ldr	x0, [x0, #8]
  447dcc:	stp	x19, x20, [sp, #16]
  447dd0:	mov	x20, x2
  447dd4:	ldr	x1, [x1, #8]
  447dd8:	str	x21, [sp, #32]
  447ddc:	mov	x19, x3
  447de0:	cmp	x0, x1
  447de4:	b.eq	447e00 <_obstack_memory_used@@Base+0xe94>  // b.none
  447de8:	ldrb	w2, [x0]
  447dec:	mov	w21, #0x0                   	// #0
  447df0:	cmp	w2, #0x2a
  447df4:	b.eq	447e18 <_obstack_memory_used@@Base+0xeac>  // b.none
  447df8:	bl	402620 <strcmp@plt>
  447dfc:	cbnz	w0, 447e18 <_obstack_memory_used@@Base+0xeac>
  447e00:	mov	x0, #0x10                  	// #16
  447e04:	mov	w1, #0x6                   	// #6
  447e08:	mov	w21, #0x1                   	// #1
  447e0c:	str	x20, [x19]
  447e10:	str	w1, [x19, #8]
  447e14:	str	x0, [x19, #16]
  447e18:	mov	w0, w21
  447e1c:	ldp	x19, x20, [sp, #16]
  447e20:	ldr	x21, [sp, #32]
  447e24:	ldp	x29, x30, [sp], #48
  447e28:	ret
  447e2c:	nop
  447e30:	stp	x29, x30, [sp, #-48]!
  447e34:	mov	x29, sp
  447e38:	stp	x19, x20, [sp, #16]
  447e3c:	mov	x20, x0
  447e40:	mov	x19, x1
  447e44:	ldr	x0, [x0, #8]
  447e48:	ldr	x1, [x1, #8]
  447e4c:	cmp	x0, x1
  447e50:	b.eq	447eb8 <_obstack_memory_used@@Base+0xf4c>  // b.none
  447e54:	stp	x21, x22, [sp, #32]
  447e58:	mov	x22, x2
  447e5c:	mov	w21, w3
  447e60:	ldrb	w2, [x0]
  447e64:	cmp	w2, #0x2a
  447e68:	b.eq	447e88 <_obstack_memory_used@@Base+0xf1c>  // b.none
  447e6c:	bl	402620 <strcmp@plt>
  447e70:	cbnz	w0, 447e88 <_obstack_memory_used@@Base+0xf1c>
  447e74:	mov	w0, #0x1                   	// #1
  447e78:	ldp	x19, x20, [sp, #16]
  447e7c:	ldp	x21, x22, [sp, #32]
  447e80:	ldp	x29, x30, [sp], #48
  447e84:	ret
  447e88:	cmp	w21, #0x3
  447e8c:	b.hi	447ec8 <_obstack_memory_used@@Base+0xf5c>  // b.pmore
  447e90:	ldr	x3, [x19]
  447e94:	mov	x2, x22
  447e98:	mov	x1, x20
  447e9c:	mov	x0, x19
  447ea0:	ldp	x19, x20, [sp, #16]
  447ea4:	ldp	x21, x22, [sp, #32]
  447ea8:	ldp	x29, x30, [sp], #48
  447eac:	ldr	x3, [x3, #40]
  447eb0:	mov	x16, x3
  447eb4:	br	x16
  447eb8:	mov	w0, #0x1                   	// #1
  447ebc:	ldp	x19, x20, [sp, #16]
  447ec0:	ldp	x29, x30, [sp], #48
  447ec4:	ret
  447ec8:	mov	w0, #0x0                   	// #0
  447ecc:	ldp	x19, x20, [sp, #16]
  447ed0:	ldp	x21, x22, [sp, #32]
  447ed4:	ldp	x29, x30, [sp], #48
  447ed8:	ret
  447edc:	nop
  447ee0:	b	402690 <free@plt>
  447ee4:	nop
  447ee8:	b	447ee0 <_obstack_memory_used@@Base+0xf74>
  447eec:	nop
  447ef0:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1f094>
  447ef4:	add	x0, x0, #0xd80
  447ef8:	ret
  447efc:	nop
  447f00:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1f094>
  447f04:	add	x0, x0, #0xda8
  447f08:	ret
  447f0c:	nop
  447f10:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x40094>
  447f14:	ldr	x1, [x1, #4000]
  447f18:	add	x1, x1, #0x10
  447f1c:	str	x1, [x0]
  447f20:	b	448390 <_obstack_memory_used@@Base+0x1424>
  447f24:	nop
  447f28:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x40094>
  447f2c:	ldr	x1, [x1, #3984]
  447f30:	add	x1, x1, #0x10
  447f34:	str	x1, [x0]
  447f38:	b	448390 <_obstack_memory_used@@Base+0x1424>
  447f3c:	nop
  447f40:	stp	x29, x30, [sp, #-32]!
  447f44:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x40094>
  447f48:	mov	x29, sp
  447f4c:	ldr	x1, [x1, #4000]
  447f50:	str	x19, [sp, #16]
  447f54:	mov	x19, x0
  447f58:	add	x1, x1, #0x10
  447f5c:	str	x1, [x0]
  447f60:	bl	448390 <_obstack_memory_used@@Base+0x1424>
  447f64:	mov	x0, x19
  447f68:	mov	x1, #0x8                   	// #8
  447f6c:	ldr	x19, [sp, #16]
  447f70:	ldp	x29, x30, [sp], #32
  447f74:	b	447628 <_obstack_memory_used@@Base+0x6bc>
  447f78:	stp	x29, x30, [sp, #-32]!
  447f7c:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x40094>
  447f80:	mov	x29, sp
  447f84:	ldr	x1, [x1, #3984]
  447f88:	str	x19, [sp, #16]
  447f8c:	mov	x19, x0
  447f90:	add	x1, x1, #0x10
  447f94:	str	x1, [x0]
  447f98:	bl	448390 <_obstack_memory_used@@Base+0x1424>
  447f9c:	mov	x0, x19
  447fa0:	mov	x1, #0x8                   	// #8
  447fa4:	ldr	x19, [sp, #16]
  447fa8:	ldp	x29, x30, [sp], #32
  447fac:	b	447628 <_obstack_memory_used@@Base+0x6bc>
  447fb0:	stp	x29, x30, [sp, #-48]!
  447fb4:	mov	x29, sp
  447fb8:	stp	x19, x20, [sp, #16]
  447fbc:	adrp	x20, 487000 <_obstack_memory_used@@Base+0x40094>
  447fc0:	mov	x19, x0
  447fc4:	ldr	x0, [x20, #3880]
  447fc8:	str	x21, [sp, #32]
  447fcc:	adrp	x21, 488000 <_obstack_memory_used@@Base+0x41094>
  447fd0:	cbz	x0, 447fe0 <_obstack_memory_used@@Base+0x1074>
  447fd4:	add	x0, x21, #0x8e0
  447fd8:	bl	402850 <pthread_mutex_lock@plt>
  447fdc:	cbnz	w0, 4480d8 <_obstack_memory_used@@Base+0x116c>
  447fe0:	add	x0, x21, #0x8e0
  447fe4:	sub	x5, x19, #0x10
  447fe8:	ldr	x1, [x0, #48]
  447fec:	cbz	x1, 448068 <_obstack_memory_used@@Base+0x10fc>
  447ff0:	ldur	x6, [x19, #-16]
  447ff4:	add	x4, x5, x6
  447ff8:	cmp	x1, x4
  447ffc:	b.hi	448068 <_obstack_memory_used@@Base+0x10fc>  // b.pmore
  448000:	ldr	x2, [x1, #8]
  448004:	b.eq	4480bc <_obstack_memory_used@@Base+0x1150>  // b.none
  448008:	add	x0, x0, #0x30
  44800c:	cbnz	x2, 448028 <_obstack_memory_used@@Base+0x10bc>
  448010:	b	448044 <_obstack_memory_used@@Base+0x10d8>
  448014:	ldr	x3, [x2, #8]
  448018:	add	x0, x1, #0x8
  44801c:	cbz	x3, 4480a4 <_obstack_memory_used@@Base+0x1138>
  448020:	mov	x1, x2
  448024:	mov	x2, x3
  448028:	cmp	x4, x2
  44802c:	b.cc	448014 <_obstack_memory_used@@Base+0x10a8>  // b.lo, b.ul, b.last
  448030:	b.ne	4480d0 <_obstack_memory_used@@Base+0x1164>  // b.any
  448034:	ldp	x2, x3, [x4]
  448038:	str	x3, [x1, #8]
  44803c:	ldr	x1, [x0]
  448040:	add	x6, x6, x2
  448044:	ldr	x2, [x1]
  448048:	add	x3, x1, x2
  44804c:	cmp	x5, x3
  448050:	b.eq	448098 <_obstack_memory_used@@Base+0x112c>  // b.none
  448054:	ldr	x1, [x1, #8]
  448058:	stp	x6, x1, [x19, #-16]
  44805c:	ldr	x0, [x0]
  448060:	str	x5, [x0, #8]
  448064:	b	448074 <_obstack_memory_used@@Base+0x1108>
  448068:	add	x0, x21, #0x8e0
  44806c:	stur	x1, [x19, #-8]
  448070:	str	x5, [x0, #48]
  448074:	ldr	x20, [x20, #3880]
  448078:	cbz	x20, 448088 <_obstack_memory_used@@Base+0x111c>
  44807c:	add	x0, x21, #0x8e0
  448080:	bl	402870 <pthread_mutex_unlock@plt>
  448084:	cbnz	w0, 4480dc <_obstack_memory_used@@Base+0x1170>
  448088:	ldp	x19, x20, [sp, #16]
  44808c:	ldr	x21, [sp, #32]
  448090:	ldp	x29, x30, [sp], #48
  448094:	ret
  448098:	add	x6, x2, x6
  44809c:	str	x6, [x1]
  4480a0:	b	448074 <_obstack_memory_used@@Base+0x1108>
  4480a4:	ldr	x1, [x1, #8]
  4480a8:	ldr	x2, [x1]
  4480ac:	add	x3, x1, x2
  4480b0:	cmp	x5, x3
  4480b4:	b.ne	448054 <_obstack_memory_used@@Base+0x10e8>  // b.any
  4480b8:	b	448098 <_obstack_memory_used@@Base+0x112c>
  4480bc:	ldr	x1, [x1]
  4480c0:	add	x6, x1, x6
  4480c4:	stp	x6, x2, [x19, #-16]
  4480c8:	str	x5, [x0, #48]
  4480cc:	b	448074 <_obstack_memory_used@@Base+0x1108>
  4480d0:	ldr	x1, [x0]
  4480d4:	b	448044 <_obstack_memory_used@@Base+0x10d8>
  4480d8:	bl	4028e0 <ferror@plt+0x10>
  4480dc:	mov	x0, #0x8                   	// #8
  4480e0:	bl	448258 <_obstack_memory_used@@Base+0x12ec>
  4480e4:	adrp	x3, 487000 <_obstack_memory_used@@Base+0x40094>
  4480e8:	adrp	x2, 487000 <_obstack_memory_used@@Base+0x40094>
  4480ec:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x40094>
  4480f0:	ldr	x3, [x3, #3984]
  4480f4:	ldr	x2, [x2, #4064]
  4480f8:	add	x3, x3, #0x10
  4480fc:	ldr	x1, [x1, #4040]
  448100:	str	x3, [x0]
  448104:	bl	449070 <_obstack_memory_used@@Base+0x2104>
  448108:	cmn	x1, #0x1
  44810c:	b.ne	448114 <_obstack_memory_used@@Base+0x11a8>  // b.any
  448110:	bl	448e10 <_obstack_memory_used@@Base+0x1ea4>
  448114:	bl	455b70 <_obstack_memory_used@@Base+0xec04>
  448118:	stp	x29, x30, [sp, #-48]!
  44811c:	mov	x29, sp
  448120:	stp	x19, x20, [sp, #16]
  448124:	adrp	x20, 487000 <_obstack_memory_used@@Base+0x40094>
  448128:	mov	x19, x0
  44812c:	ldr	x0, [x20, #3880]
  448130:	str	x21, [sp, #32]
  448134:	adrp	x21, 488000 <_obstack_memory_used@@Base+0x41094>
  448138:	cbz	x0, 448148 <_obstack_memory_used@@Base+0x11dc>
  44813c:	add	x0, x21, #0x8e0
  448140:	bl	402850 <pthread_mutex_lock@plt>
  448144:	cbnz	w0, 4481e4 <_obstack_memory_used@@Base+0x1278>
  448148:	add	x3, x21, #0x8e0
  44814c:	adds	x0, x19, #0x10
  448150:	mov	x19, #0x10                  	// #16
  448154:	csel	x0, x0, x19, cc  // cc = lo, ul, last
  448158:	add	x0, x0, #0xf
  44815c:	ldr	x19, [x3, #48]
  448160:	and	x0, x0, #0xfffffffffffffff0
  448164:	cbz	x19, 4481b0 <_obstack_memory_used@@Base+0x1244>
  448168:	add	x3, x3, #0x30
  44816c:	b	448178 <_obstack_memory_used@@Base+0x120c>
  448170:	add	x3, x2, #0x8
  448174:	cbz	x19, 4481b0 <_obstack_memory_used@@Base+0x1244>
  448178:	mov	x2, x19
  44817c:	ldp	x1, x19, [x19]
  448180:	cmp	x0, x1
  448184:	b.hi	448170 <_obstack_memory_used@@Base+0x1204>  // b.pmore
  448188:	sub	x1, x1, x0
  44818c:	cmp	x1, #0xf
  448190:	b.ls	4481d8 <_obstack_memory_used@@Base+0x126c>  // b.plast
  448194:	add	x4, x2, x0
  448198:	str	x19, [x4, #8]
  44819c:	str	x1, [x2, x0]
  4481a0:	ldr	x2, [x3]
  4481a4:	add	x19, x2, #0x10
  4481a8:	str	x0, [x2]
  4481ac:	str	x4, [x3]
  4481b0:	ldr	x20, [x20, #3880]
  4481b4:	cbz	x20, 4481c4 <_obstack_memory_used@@Base+0x1258>
  4481b8:	add	x0, x21, #0x8e0
  4481bc:	bl	402870 <pthread_mutex_unlock@plt>
  4481c0:	cbnz	w0, 4481e8 <_obstack_memory_used@@Base+0x127c>
  4481c4:	mov	x0, x19
  4481c8:	ldp	x19, x20, [sp, #16]
  4481cc:	ldr	x21, [sp, #32]
  4481d0:	ldp	x29, x30, [sp], #48
  4481d4:	ret
  4481d8:	str	x19, [x3]
  4481dc:	add	x19, x2, #0x10
  4481e0:	b	4481b0 <_obstack_memory_used@@Base+0x1244>
  4481e4:	bl	4028e0 <ferror@plt+0x10>
  4481e8:	mov	x0, #0x8                   	// #8
  4481ec:	bl	448258 <_obstack_memory_used@@Base+0x12ec>
  4481f0:	adrp	x3, 487000 <_obstack_memory_used@@Base+0x40094>
  4481f4:	adrp	x2, 487000 <_obstack_memory_used@@Base+0x40094>
  4481f8:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x40094>
  4481fc:	ldr	x3, [x3, #3984]
  448200:	ldr	x2, [x2, #4064]
  448204:	add	x3, x3, #0x10
  448208:	ldr	x1, [x1, #4040]
  44820c:	str	x3, [x0]
  448210:	bl	449070 <_obstack_memory_used@@Base+0x2104>
  448214:	cmn	x1, #0x1
  448218:	b.ne	448220 <_obstack_memory_used@@Base+0x12b4>  // b.any
  44821c:	bl	448e10 <_obstack_memory_used@@Base+0x1ea4>
  448220:	bl	455b70 <_obstack_memory_used@@Base+0xec04>
  448224:	nop
  448228:	stp	x29, x30, [sp, #-32]!
  44822c:	mov	x29, sp
  448230:	str	x19, [sp, #16]
  448234:	adrp	x19, 488000 <_obstack_memory_used@@Base+0x41094>
  448238:	add	x19, x19, #0x8e0
  44823c:	ldr	x0, [x19, #56]
  448240:	cbz	x0, 44824c <_obstack_memory_used@@Base+0x12e0>
  448244:	bl	402690 <free@plt>
  448248:	str	xzr, [x19, #56]
  44824c:	ldr	x19, [sp, #16]
  448250:	ldp	x29, x30, [sp], #32
  448254:	ret
  448258:	stp	x29, x30, [sp, #-32]!
  44825c:	mov	x29, sp
  448260:	str	x19, [sp, #16]
  448264:	add	x19, x0, #0x80
  448268:	mov	x0, x19
  44826c:	bl	402410 <malloc@plt>
  448270:	mov	x1, x0
  448274:	cbz	x0, 4482a8 <_obstack_memory_used@@Base+0x133c>
  448278:	stp	xzr, xzr, [x1]
  44827c:	add	x0, x1, #0x80
  448280:	stp	xzr, xzr, [x1, #16]
  448284:	stp	xzr, xzr, [x1, #32]
  448288:	stp	xzr, xzr, [x1, #48]
  44828c:	stp	xzr, xzr, [x1, #64]
  448290:	stp	xzr, xzr, [x1, #80]
  448294:	stp	xzr, xzr, [x1, #96]
  448298:	stp	xzr, xzr, [x1, #112]
  44829c:	ldr	x19, [sp, #16]
  4482a0:	ldp	x29, x30, [sp], #32
  4482a4:	ret
  4482a8:	mov	x0, x19
  4482ac:	bl	448118 <_obstack_memory_used@@Base+0x11ac>
  4482b0:	mov	x1, x0
  4482b4:	cbnz	x0, 448278 <_obstack_memory_used@@Base+0x130c>
  4482b8:	bl	448f48 <_obstack_memory_used@@Base+0x1fdc>
  4482bc:	nop
  4482c0:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x41094>
  4482c4:	add	x1, x1, #0x8e0
  4482c8:	sub	x0, x0, #0x80
  4482cc:	ldr	x2, [x1, #56]
  4482d0:	cmp	x0, x2
  4482d4:	b.ls	4482fc <_obstack_memory_used@@Base+0x1390>  // b.plast
  4482d8:	ldr	x1, [x1, #64]
  4482dc:	add	x2, x2, x1
  4482e0:	cmp	x0, x2
  4482e4:	b.cs	4482fc <_obstack_memory_used@@Base+0x1390>  // b.hs, b.nlast
  4482e8:	stp	x29, x30, [sp, #-16]!
  4482ec:	mov	x29, sp
  4482f0:	bl	447fb0 <_obstack_memory_used@@Base+0x1044>
  4482f4:	ldp	x29, x30, [sp], #16
  4482f8:	ret
  4482fc:	b	402690 <free@plt>
  448300:	stp	x29, x30, [sp, #-16]!
  448304:	mov	x0, #0x70                  	// #112
  448308:	mov	x29, sp
  44830c:	bl	402410 <malloc@plt>
  448310:	cbz	x0, 448338 <_obstack_memory_used@@Base+0x13cc>
  448314:	stp	xzr, xzr, [x0]
  448318:	stp	xzr, xzr, [x0, #16]
  44831c:	stp	xzr, xzr, [x0, #32]
  448320:	stp	xzr, xzr, [x0, #48]
  448324:	stp	xzr, xzr, [x0, #64]
  448328:	stp	xzr, xzr, [x0, #80]
  44832c:	stp	xzr, xzr, [x0, #96]
  448330:	ldp	x29, x30, [sp], #16
  448334:	ret
  448338:	mov	x0, #0x70                  	// #112
  44833c:	bl	448118 <_obstack_memory_used@@Base+0x11ac>
  448340:	cbnz	x0, 448314 <_obstack_memory_used@@Base+0x13a8>
  448344:	bl	448f48 <_obstack_memory_used@@Base+0x1fdc>
  448348:	adrp	x2, 488000 <_obstack_memory_used@@Base+0x41094>
  44834c:	add	x2, x2, #0x8e0
  448350:	mov	x1, x0
  448354:	ldr	x3, [x2, #56]
  448358:	cmp	x0, x3
  44835c:	b.ls	448384 <_obstack_memory_used@@Base+0x1418>  // b.plast
  448360:	ldr	x2, [x2, #64]
  448364:	add	x3, x3, x2
  448368:	cmp	x0, x3
  44836c:	b.cs	448384 <_obstack_memory_used@@Base+0x1418>  // b.hs, b.nlast
  448370:	stp	x29, x30, [sp, #-16]!
  448374:	mov	x29, sp
  448378:	bl	447fb0 <_obstack_memory_used@@Base+0x1044>
  44837c:	ldp	x29, x30, [sp], #16
  448380:	ret
  448384:	mov	x0, x1
  448388:	b	402690 <free@plt>
  44838c:	nop
  448390:	ret
  448394:	nop
  448398:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x40094>
  44839c:	ldr	x1, [x1, #3944]
  4483a0:	add	x1, x1, #0x10
  4483a4:	str	x1, [x0]
  4483a8:	b	448390 <_obstack_memory_used@@Base+0x1424>
  4483ac:	nop
  4483b0:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1f094>
  4483b4:	add	x0, x0, #0xe28
  4483b8:	ret
  4483bc:	nop
  4483c0:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1f094>
  4483c4:	add	x0, x0, #0xe38
  4483c8:	ret
  4483cc:	nop
  4483d0:	stp	x29, x30, [sp, #-32]!
  4483d4:	mov	x29, sp
  4483d8:	str	x19, [sp, #16]
  4483dc:	mov	x19, x0
  4483e0:	bl	448390 <_obstack_memory_used@@Base+0x1424>
  4483e4:	mov	x0, x19
  4483e8:	mov	x1, #0x8                   	// #8
  4483ec:	ldr	x19, [sp, #16]
  4483f0:	ldp	x29, x30, [sp], #32
  4483f4:	b	447628 <_obstack_memory_used@@Base+0x6bc>
  4483f8:	stp	x29, x30, [sp, #-32]!
  4483fc:	mov	x29, sp
  448400:	str	x19, [sp, #16]
  448404:	mov	x19, x0
  448408:	bl	448398 <_obstack_memory_used@@Base+0x142c>
  44840c:	mov	x0, x19
  448410:	mov	x1, #0x8                   	// #8
  448414:	ldr	x19, [sp, #16]
  448418:	ldp	x29, x30, [sp], #32
  44841c:	b	447628 <_obstack_memory_used@@Base+0x6bc>
  448420:	ret
  448424:	nop
  448428:	stp	x29, x30, [sp, #-32]!
  44842c:	mov	x29, sp
  448430:	str	x19, [sp, #16]
  448434:	mov	x19, x0
  448438:	bl	448420 <_obstack_memory_used@@Base+0x14b4>
  44843c:	mov	x0, x19
  448440:	mov	x1, #0x8                   	// #8
  448444:	ldr	x19, [sp, #16]
  448448:	ldp	x29, x30, [sp], #32
  44844c:	b	447628 <_obstack_memory_used@@Base+0x6bc>
  448450:	ret
  448454:	nop
  448458:	stp	x29, x30, [sp, #-32]!
  44845c:	mov	x29, sp
  448460:	str	x19, [sp, #16]
  448464:	mov	x19, x0
  448468:	bl	448450 <_obstack_memory_used@@Base+0x14e4>
  44846c:	mov	x0, x19
  448470:	mov	x1, #0x8                   	// #8
  448474:	ldr	x19, [sp, #16]
  448478:	ldp	x29, x30, [sp], #32
  44847c:	b	447628 <_obstack_memory_used@@Base+0x6bc>
  448480:	ret
  448484:	nop
  448488:	b	4483b0 <_obstack_memory_used@@Base+0x1444>
  44848c:	nop
  448490:	ret
  448494:	nop
  448498:	b	4483c0 <_obstack_memory_used@@Base+0x1454>
  44849c:	nop
  4484a0:	stp	x29, x30, [sp, #-64]!
  4484a4:	mov	x29, sp
  4484a8:	stp	x19, x20, [sp, #16]
  4484ac:	mov	x19, x1
  4484b0:	mov	x20, x0
  4484b4:	mov	x0, x1
  4484b8:	ldr	x1, [x1]
  4484bc:	ldr	x1, [x1, #16]
  4484c0:	str	x21, [sp, #32]
  4484c4:	mov	x21, x2
  4484c8:	ldr	x2, [x2]
  4484cc:	str	x2, [sp, #56]
  4484d0:	blr	x1
  4484d4:	tst	w0, #0xff
  4484d8:	b.eq	4484e8 <_obstack_memory_used@@Base+0x157c>  // b.none
  4484dc:	ldr	x0, [sp, #56]
  4484e0:	ldr	x0, [x0]
  4484e4:	str	x0, [sp, #56]
  4484e8:	ldr	x4, [x20]
  4484ec:	mov	x1, x19
  4484f0:	mov	x0, x20
  4484f4:	add	x2, sp, #0x38
  4484f8:	mov	w3, #0x1                   	// #1
  4484fc:	ldr	x4, [x4, #32]
  448500:	blr	x4
  448504:	tst	w0, #0xff
  448508:	b.eq	448514 <_obstack_memory_used@@Base+0x15a8>  // b.none
  44850c:	ldr	x1, [sp, #56]
  448510:	str	x1, [x21]
  448514:	ldp	x19, x20, [sp, #16]
  448518:	ldr	x21, [sp, #32]
  44851c:	ldp	x29, x30, [sp], #64
  448520:	ret
  448524:	nop
  448528:	and	w5, w0, #0xff
  44852c:	cmp	w5, #0x50
  448530:	b.eq	448648 <_obstack_memory_used@@Base+0x16dc>  // b.none
  448534:	and	w4, w5, #0xf
  448538:	cmp	w4, #0x4
  44853c:	b.eq	448558 <_obstack_memory_used@@Base+0x15ec>  // b.none
  448540:	b.ls	44856c <_obstack_memory_used@@Base+0x1600>  // b.plast
  448544:	cmp	w4, #0xb
  448548:	b.eq	44866c <_obstack_memory_used@@Base+0x1700>  // b.none
  44854c:	b.ls	4485c8 <_obstack_memory_used@@Base+0x165c>  // b.plast
  448550:	cmp	w4, #0xc
  448554:	b.ne	44867c <_obstack_memory_used@@Base+0x1710>  // b.any
  448558:	mov	x0, x2
  44855c:	ldr	x4, [x0], #8
  448560:	cbnz	x4, 448628 <_obstack_memory_used@@Base+0x16bc>
  448564:	str	x4, [x3]
  448568:	ret
  44856c:	cmp	w4, #0x2
  448570:	b.eq	44865c <_obstack_memory_used@@Base+0x16f0>  // b.none
  448574:	b.ls	448590 <_obstack_memory_used@@Base+0x1624>  // b.plast
  448578:	cmp	w4, #0x3
  44857c:	b.ne	44867c <_obstack_memory_used@@Base+0x1710>  // b.any
  448580:	mov	x0, x2
  448584:	ldr	w4, [x0], #4
  448588:	cbz	x4, 448564 <_obstack_memory_used@@Base+0x15f8>
  44858c:	b	448628 <_obstack_memory_used@@Base+0x16bc>
  448590:	cbz	w4, 448558 <_obstack_memory_used@@Base+0x15ec>
  448594:	cmp	w4, #0x1
  448598:	b.ne	44867c <_obstack_memory_used@@Base+0x1710>  // b.any
  44859c:	mov	x0, x2
  4485a0:	mov	x4, #0x0                   	// #0
  4485a4:	mov	w7, #0x0                   	// #0
  4485a8:	ldrb	w8, [x0], #1
  4485ac:	and	x6, x8, #0x7f
  4485b0:	lsl	x6, x6, x7
  4485b4:	add	w7, w7, #0x7
  4485b8:	orr	x4, x4, x6
  4485bc:	tbnz	w8, #7, 4485a8 <_obstack_memory_used@@Base+0x163c>
  4485c0:	cbz	x4, 448564 <_obstack_memory_used@@Base+0x15f8>
  4485c4:	b	448628 <_obstack_memory_used@@Base+0x16bc>
  4485c8:	cmp	w4, #0x9
  4485cc:	b.eq	4485e8 <_obstack_memory_used@@Base+0x167c>  // b.none
  4485d0:	cmp	w4, #0xa
  4485d4:	b.ne	44867c <_obstack_memory_used@@Base+0x1710>  // b.any
  4485d8:	mov	x0, x2
  4485dc:	ldrsh	x4, [x0], #2
  4485e0:	cbz	x4, 448564 <_obstack_memory_used@@Base+0x15f8>
  4485e4:	b	448628 <_obstack_memory_used@@Base+0x16bc>
  4485e8:	mov	x0, x2
  4485ec:	mov	x4, #0x0                   	// #0
  4485f0:	mov	w7, #0x0                   	// #0
  4485f4:	ldrb	w8, [x0], #1
  4485f8:	and	x6, x8, #0x7f
  4485fc:	lsl	x6, x6, x7
  448600:	add	w7, w7, #0x7
  448604:	orr	x4, x4, x6
  448608:	tbnz	w8, #7, 4485f4 <_obstack_memory_used@@Base+0x1688>
  44860c:	cmp	w7, #0x3f
  448610:	b.hi	448560 <_obstack_memory_used@@Base+0x15f4>  // b.pmore
  448614:	tbz	w8, #6, 448560 <_obstack_memory_used@@Base+0x15f4>
  448618:	mov	x6, #0xffffffffffffffff    	// #-1
  44861c:	lsl	x7, x6, x7
  448620:	orr	x4, x4, x7
  448624:	nop
  448628:	and	w6, w5, #0x70
  44862c:	cmp	w6, #0x10
  448630:	csel	x1, x2, x1, eq  // eq = none
  448634:	add	x4, x4, x1
  448638:	tbz	w5, #7, 448564 <_obstack_memory_used@@Base+0x15f8>
  44863c:	ldr	x4, [x4]
  448640:	str	x4, [x3]
  448644:	ret
  448648:	add	x0, x2, #0x7
  44864c:	and	x0, x0, #0xfffffffffffffff8
  448650:	ldr	x4, [x0], #8
  448654:	str	x4, [x3]
  448658:	ret
  44865c:	mov	x0, x2
  448660:	ldrh	w4, [x0], #2
  448664:	cbz	x4, 448564 <_obstack_memory_used@@Base+0x15f8>
  448668:	b	448628 <_obstack_memory_used@@Base+0x16bc>
  44866c:	mov	x0, x2
  448670:	ldrsw	x4, [x0], #4
  448674:	cbz	x4, 448564 <_obstack_memory_used@@Base+0x15f8>
  448678:	b	448628 <_obstack_memory_used@@Base+0x16bc>
  44867c:	stp	x29, x30, [sp, #-16]!
  448680:	mov	x29, sp
  448684:	bl	402590 <abort@plt>
  448688:	stp	x29, x30, [sp, #-32]!
  44868c:	mov	x3, x0
  448690:	mov	x29, sp
  448694:	ldrb	w0, [x0, #40]
  448698:	cmp	w0, #0xff
  44869c:	b.eq	448728 <_obstack_memory_used@@Base+0x17bc>  // b.none
  4486a0:	and	w4, w0, #0x7
  4486a4:	cmp	w4, #0x2
  4486a8:	b.eq	448708 <_obstack_memory_used@@Base+0x179c>  // b.none
  4486ac:	b.ls	4486d8 <_obstack_memory_used@@Base+0x176c>  // b.plast
  4486b0:	cmp	w4, #0x3
  4486b4:	neg	x2, x1, lsl #2
  4486b8:	b.ne	4486fc <_obstack_memory_used@@Base+0x1790>  // b.any
  4486bc:	ldp	x1, x4, [x3, #16]
  4486c0:	add	x3, sp, #0x18
  4486c4:	add	x2, x4, x2
  4486c8:	bl	448528 <_obstack_memory_used@@Base+0x15bc>
  4486cc:	ldr	x0, [sp, #24]
  4486d0:	ldp	x29, x30, [sp], #32
  4486d4:	ret
  4486d8:	cbnz	w4, 448704 <_obstack_memory_used@@Base+0x1798>
  4486dc:	neg	x2, x1, lsl #3
  4486e0:	ldp	x1, x4, [x3, #16]
  4486e4:	add	x3, sp, #0x18
  4486e8:	add	x2, x4, x2
  4486ec:	bl	448528 <_obstack_memory_used@@Base+0x15bc>
  4486f0:	ldr	x0, [sp, #24]
  4486f4:	ldp	x29, x30, [sp], #32
  4486f8:	ret
  4486fc:	cmp	w4, #0x4
  448700:	b.eq	4486dc <_obstack_memory_used@@Base+0x1770>  // b.none
  448704:	bl	402590 <abort@plt>
  448708:	neg	x2, x1, lsl #1
  44870c:	ldp	x1, x4, [x3, #16]
  448710:	add	x3, sp, #0x18
  448714:	add	x2, x4, x2
  448718:	bl	448528 <_obstack_memory_used@@Base+0x15bc>
  44871c:	ldr	x0, [sp, #24]
  448720:	ldp	x29, x30, [sp], #32
  448724:	ret
  448728:	ldp	x1, x4, [x3, #16]
  44872c:	mov	x2, #0x0                   	// #0
  448730:	add	x3, sp, #0x18
  448734:	add	x2, x4, x2
  448738:	bl	448528 <_obstack_memory_used@@Base+0x15bc>
  44873c:	ldr	x0, [sp, #24]
  448740:	ldp	x29, x30, [sp], #32
  448744:	ret
  448748:	stp	x29, x30, [sp, #-64]!
  44874c:	mov	x29, sp
  448750:	stp	x21, x22, [sp, #32]
  448754:	mov	x22, x0
  448758:	mvn	x0, x3
  44875c:	stp	x19, x20, [sp, #16]
  448760:	add	x21, sp, #0x38
  448764:	mov	x20, x1
  448768:	ldr	x19, [x22, #24]
  44876c:	str	x2, [sp, #56]
  448770:	add	x19, x19, x0
  448774:	nop
  448778:	mov	x1, #0x0                   	// #0
  44877c:	mov	w3, #0x0                   	// #0
  448780:	ldrb	w4, [x19], #1
  448784:	and	x2, x4, #0x7f
  448788:	lsl	x2, x2, x3
  44878c:	add	w3, w3, #0x7
  448790:	orr	x1, x1, x2
  448794:	tbnz	w4, #7, 448780 <_obstack_memory_used@@Base+0x1814>
  448798:	cbz	x1, 4487c8 <_obstack_memory_used@@Base+0x185c>
  44879c:	mov	x0, x22
  4487a0:	bl	448688 <_obstack_memory_used@@Base+0x171c>
  4487a4:	mov	x2, x21
  4487a8:	mov	x1, x20
  4487ac:	bl	4484a0 <_obstack_memory_used@@Base+0x1534>
  4487b0:	ands	w0, w0, #0xff
  4487b4:	b.eq	448778 <_obstack_memory_used@@Base+0x180c>  // b.none
  4487b8:	ldp	x19, x20, [sp, #16]
  4487bc:	ldp	x21, x22, [sp, #32]
  4487c0:	ldp	x29, x30, [sp], #64
  4487c4:	ret
  4487c8:	mov	w0, #0x0                   	// #0
  4487cc:	ldp	x19, x20, [sp, #16]
  4487d0:	ldp	x21, x22, [sp, #32]
  4487d4:	ldp	x29, x30, [sp], #64
  4487d8:	ret
  4487dc:	nop
  4487e0:	and	w3, w0, #0xff
  4487e4:	cmp	w3, #0xff
  4487e8:	b.eq	448838 <_obstack_memory_used@@Base+0x18cc>  // b.none
  4487ec:	and	w2, w3, #0x70
  4487f0:	mov	x0, x1
  4487f4:	cmp	w2, #0x30
  4487f8:	b.eq	448840 <_obstack_memory_used@@Base+0x18d4>  // b.none
  4487fc:	b.hi	44880c <_obstack_memory_used@@Base+0x18a0>  // b.pmore
  448800:	cmp	w2, #0x20
  448804:	b.ne	448818 <_obstack_memory_used@@Base+0x18ac>  // b.any
  448808:	b	4557c0 <_obstack_memory_used@@Base+0xe854>
  44880c:	cmp	w2, #0x40
  448810:	b.ne	448830 <_obstack_memory_used@@Base+0x18c4>  // b.any
  448814:	b	455788 <_obstack_memory_used@@Base+0xe81c>
  448818:	b.hi	448824 <_obstack_memory_used@@Base+0x18b8>  // b.pmore
  44881c:	tst	w3, #0x60
  448820:	b.eq	448838 <_obstack_memory_used@@Base+0x18cc>  // b.none
  448824:	stp	x29, x30, [sp, #-16]!
  448828:	mov	x29, sp
  44882c:	bl	402590 <abort@plt>
  448830:	cmp	w2, #0x50
  448834:	b.ne	448824 <_obstack_memory_used@@Base+0x18b8>  // b.any
  448838:	mov	x0, #0x0                   	// #0
  44883c:	ret
  448840:	b	4557b8 <_obstack_memory_used@@Base+0xe84c>
  448844:	nop
  448848:	stp	x29, x30, [sp, #-48]!
  44884c:	mov	x29, sp
  448850:	stp	x19, x20, [sp, #16]
  448854:	mov	x19, x1
  448858:	mov	x20, x2
  44885c:	stp	x21, x22, [sp, #32]
  448860:	mov	x1, #0x0                   	// #0
  448864:	mov	x21, x0
  448868:	cbz	x0, 448874 <_obstack_memory_used@@Base+0x1908>
  44886c:	bl	455788 <_obstack_memory_used@@Base+0xe81c>
  448870:	mov	x1, x0
  448874:	str	x1, [x20]
  448878:	ldrb	w22, [x19], #1
  44887c:	cmp	w22, #0xff
  448880:	b.ne	448908 <_obstack_memory_used@@Base+0x199c>  // b.any
  448884:	mov	x0, x19
  448888:	str	x1, [x20, #8]
  44888c:	ldrb	w1, [x0], #1
  448890:	strb	w1, [x20, #40]
  448894:	cmp	w1, #0xff
  448898:	b.eq	448940 <_obstack_memory_used@@Base+0x19d4>  // b.none
  44889c:	mov	x5, #0x0                   	// #0
  4488a0:	mov	w3, #0x0                   	// #0
  4488a4:	nop
  4488a8:	ldrb	w4, [x0], #1
  4488ac:	and	x1, x4, #0x7f
  4488b0:	lsl	x1, x1, x3
  4488b4:	add	w3, w3, #0x7
  4488b8:	orr	x5, x5, x1
  4488bc:	tbnz	w4, #7, 4488a8 <_obstack_memory_used@@Base+0x193c>
  4488c0:	add	x5, x0, x5
  4488c4:	str	x5, [x20, #24]
  4488c8:	ldrb	w1, [x0], #1
  4488cc:	mov	x5, #0x0                   	// #0
  4488d0:	mov	w3, #0x0                   	// #0
  4488d4:	strb	w1, [x20, #41]
  4488d8:	ldrb	w4, [x0], #1
  4488dc:	and	x1, x4, #0x7f
  4488e0:	lsl	x1, x1, x3
  4488e4:	add	w3, w3, #0x7
  4488e8:	orr	x5, x5, x1
  4488ec:	tbnz	w4, #7, 4488d8 <_obstack_memory_used@@Base+0x196c>
  4488f0:	add	x5, x0, x5
  4488f4:	ldp	x21, x22, [sp, #32]
  4488f8:	str	x5, [x20, #32]
  4488fc:	ldp	x19, x20, [sp, #16]
  448900:	ldp	x29, x30, [sp], #48
  448904:	ret
  448908:	mov	x1, x21
  44890c:	mov	w0, w22
  448910:	bl	4487e0 <_obstack_memory_used@@Base+0x1874>
  448914:	mov	x1, x0
  448918:	mov	x2, x19
  44891c:	mov	w0, w22
  448920:	add	x3, x20, #0x8
  448924:	bl	448528 <_obstack_memory_used@@Base+0x15bc>
  448928:	mov	x19, x0
  44892c:	mov	x0, x19
  448930:	ldrb	w1, [x0], #1
  448934:	strb	w1, [x20, #40]
  448938:	cmp	w1, #0xff
  44893c:	b.ne	44889c <_obstack_memory_used@@Base+0x1930>  // b.any
  448940:	str	xzr, [x20, #24]
  448944:	b	4488c8 <_obstack_memory_used@@Base+0x195c>
  448948:	stp	x29, x30, [sp, #-240]!
  44894c:	cmp	w0, #0x1
  448950:	mov	x29, sp
  448954:	str	wzr, [sp, #156]
  448958:	str	xzr, [sp, #160]
  44895c:	b.ne	4489c0 <_obstack_memory_used@@Base+0x1a54>  // b.any
  448960:	stp	x19, x20, [sp, #16]
  448964:	mov	x20, #0xd500                	// #54528
  448968:	movk	x20, #0xbcd4, lsl #16
  44896c:	movk	x20, #0xaabc, lsl #32
  448970:	stp	x21, x22, [sp, #32]
  448974:	movk	x20, #0xb8b1, lsl #48
  448978:	add	x0, x2, x20
  44897c:	stp	x23, x24, [sp, #48]
  448980:	cmp	x0, #0x1
  448984:	stp	x25, x26, [sp, #64]
  448988:	mov	w22, w1
  44898c:	mov	x21, x3
  448990:	stp	x27, x28, [sp, #80]
  448994:	mov	x19, x4
  448998:	str	x0, [sp, #104]
  44899c:	cset	w0, ls  // ls = plast
  4489a0:	str	w0, [sp, #128]
  4489a4:	cmp	w1, #0x6
  4489a8:	csel	w27, w0, wzr, eq  // eq = none
  4489ac:	cbz	w27, 4489cc <_obstack_memory_used@@Base+0x1a60>
  4489b0:	ldur	x26, [x3, #-16]
  4489b4:	cbnz	x26, 448b40 <_obstack_memory_used@@Base+0x1bd4>
  4489b8:	mov	x0, x21
  4489bc:	bl	4491b0 <_obstack_memory_used@@Base+0x2244>
  4489c0:	mov	w0, #0x3                   	// #3
  4489c4:	ldp	x29, x30, [sp], #240
  4489c8:	ret
  4489cc:	mov	x0, x4
  4489d0:	bl	455780 <_obstack_memory_used@@Base+0xe814>
  4489d4:	str	x0, [sp, #112]
  4489d8:	cbz	x0, 448ba4 <_obstack_memory_used@@Base+0x1c38>
  4489dc:	ldr	x1, [sp, #112]
  4489e0:	add	x0, sp, #0xc0
  4489e4:	mov	x2, x0
  4489e8:	str	x0, [sp, #120]
  4489ec:	mov	x0, x19
  4489f0:	bl	448848 <_obstack_memory_used@@Base+0x18dc>
  4489f4:	mov	x20, x0
  4489f8:	ldrb	w0, [sp, #232]
  4489fc:	mov	x1, x19
  448a00:	bl	4487e0 <_obstack_memory_used@@Base+0x1874>
  448a04:	mov	x3, x0
  448a08:	add	x1, sp, #0x9c
  448a0c:	mov	x0, x19
  448a10:	str	x3, [sp, #208]
  448a14:	bl	455760 <_obstack_memory_used@@Base+0xe7f4>
  448a18:	ldr	w3, [sp, #156]
  448a1c:	ldr	x1, [sp, #224]
  448a20:	cmp	w3, #0x0
  448a24:	cset	x3, eq  // eq = none
  448a28:	sub	x23, x0, x3
  448a2c:	cmp	x20, x1
  448a30:	b.cs	448b08 <_obstack_memory_used@@Base+0x1b9c>  // b.hs, b.nlast
  448a34:	add	x26, sp, #0xa8
  448a38:	add	x25, sp, #0xb0
  448a3c:	add	x24, sp, #0xb8
  448a40:	ldrb	w28, [sp, #233]
  448a44:	mov	x1, #0x0                   	// #0
  448a48:	mov	w0, w28
  448a4c:	bl	4487e0 <_obstack_memory_used@@Base+0x1874>
  448a50:	mov	x2, x20
  448a54:	mov	x3, x26
  448a58:	mov	x1, x0
  448a5c:	mov	w0, w28
  448a60:	bl	448528 <_obstack_memory_used@@Base+0x15bc>
  448a64:	ldrb	w20, [sp, #233]
  448a68:	mov	x28, x0
  448a6c:	mov	x1, #0x0                   	// #0
  448a70:	mov	w0, w20
  448a74:	bl	4487e0 <_obstack_memory_used@@Base+0x1874>
  448a78:	mov	x2, x28
  448a7c:	mov	x3, x25
  448a80:	mov	x1, x0
  448a84:	mov	w0, w20
  448a88:	bl	448528 <_obstack_memory_used@@Base+0x15bc>
  448a8c:	ldrb	w20, [sp, #233]
  448a90:	mov	x28, x0
  448a94:	mov	x1, #0x0                   	// #0
  448a98:	mov	w0, w20
  448a9c:	bl	4487e0 <_obstack_memory_used@@Base+0x1874>
  448aa0:	mov	x3, x24
  448aa4:	mov	x1, x0
  448aa8:	mov	x2, x28
  448aac:	mov	w0, w20
  448ab0:	bl	448528 <_obstack_memory_used@@Base+0x15bc>
  448ab4:	mov	x20, x0
  448ab8:	mov	w3, #0x0                   	// #0
  448abc:	mov	x0, #0x0                   	// #0
  448ac0:	ldrb	w4, [x20], #1
  448ac4:	and	x1, x4, #0x7f
  448ac8:	lsl	x1, x1, x3
  448acc:	add	w3, w3, #0x7
  448ad0:	orr	x0, x0, x1
  448ad4:	tbnz	w4, #7, 448ac0 <_obstack_memory_used@@Base+0x1b54>
  448ad8:	ldr	x3, [sp, #168]
  448adc:	ldr	x1, [sp, #192]
  448ae0:	add	x1, x1, x3
  448ae4:	cmp	x1, x23
  448ae8:	b.hi	448b08 <_obstack_memory_used@@Base+0x1b9c>  // b.pmore
  448aec:	ldr	x3, [sp, #176]
  448af0:	add	x1, x1, x3
  448af4:	cmp	x1, x23
  448af8:	b.hi	448b84 <_obstack_memory_used@@Base+0x1c18>  // b.pmore
  448afc:	ldr	x0, [sp, #224]
  448b00:	cmp	x0, x20
  448b04:	b.hi	448a40 <_obstack_memory_used@@Base+0x1ad4>  // b.pmore
  448b08:	tbz	w22, #0, 448bc4 <_obstack_memory_used@@Base+0x1c58>
  448b0c:	mov	w24, #0x0                   	// #0
  448b10:	mov	x26, #0x0                   	// #0
  448b14:	mov	x23, #0x0                   	// #0
  448b18:	ldr	x0, [sp, #104]
  448b1c:	cmp	x0, #0x1
  448b20:	mov	w0, #0x6                   	// #6
  448b24:	b.hi	448ba8 <_obstack_memory_used@@Base+0x1c3c>  // b.pmore
  448b28:	ldr	x2, [sp, #112]
  448b2c:	stur	w24, [x21, #-36]
  448b30:	ldr	x1, [sp, #160]
  448b34:	stp	x23, x2, [x21, #-32]
  448b38:	stp	x26, x1, [x21, #-16]
  448b3c:	b	448ba8 <_obstack_memory_used@@Base+0x1c3c>
  448b40:	ldur	w24, [x3, #-36]
  448b44:	ldur	x0, [x3, #-24]
  448b48:	str	x0, [sp, #112]
  448b4c:	tbnz	w24, #31, 448bd8 <_obstack_memory_used@@Base+0x1c6c>
  448b50:	mov	x2, x21
  448b54:	mov	x0, x19
  448b58:	mov	w1, #0x0                   	// #0
  448b5c:	bl	455700 <_obstack_memory_used@@Base+0xe794>
  448b60:	sxtw	x2, w24
  448b64:	mov	x0, x19
  448b68:	mov	w1, #0x1                   	// #1
  448b6c:	bl	455700 <_obstack_memory_used@@Base+0xe794>
  448b70:	mov	x0, x19
  448b74:	mov	x1, x26
  448b78:	bl	455778 <_obstack_memory_used@@Base+0xe80c>
  448b7c:	mov	w0, #0x7                   	// #7
  448b80:	b	448ba8 <_obstack_memory_used@@Base+0x1c3c>
  448b84:	ldr	x26, [sp, #184]
  448b88:	cbz	x26, 448ba4 <_obstack_memory_used@@Base+0x1c38>
  448b8c:	ldr	x1, [sp, #200]
  448b90:	add	x26, x26, x1
  448b94:	cbnz	x0, 448c10 <_obstack_memory_used@@Base+0x1ca4>
  448b98:	cbz	x26, 448ba4 <_obstack_memory_used@@Base+0x1c38>
  448b9c:	and	w24, w22, #0x1
  448ba0:	tbz	w22, #0, 448b50 <_obstack_memory_used@@Base+0x1be4>
  448ba4:	mov	w0, #0x8                   	// #8
  448ba8:	ldp	x19, x20, [sp, #16]
  448bac:	ldp	x21, x22, [sp, #32]
  448bb0:	ldp	x23, x24, [sp, #48]
  448bb4:	ldp	x25, x26, [sp, #64]
  448bb8:	ldp	x27, x28, [sp, #80]
  448bbc:	ldp	x29, x30, [sp], #240
  448bc0:	ret
  448bc4:	tbnz	w22, #3, 448bd4 <_obstack_memory_used@@Base+0x1c68>
  448bc8:	ldr	x0, [sp, #104]
  448bcc:	cmp	x0, #0x1
  448bd0:	b.ls	4489b8 <_obstack_memory_used@@Base+0x1a4c>  // b.plast
  448bd4:	bl	448f48 <_obstack_memory_used@@Base+0x1fdc>
  448bd8:	ldr	x1, [sp, #112]
  448bdc:	add	x2, sp, #0xc0
  448be0:	mov	x0, x19
  448be4:	bl	448848 <_obstack_memory_used@@Base+0x18dc>
  448be8:	ldrb	w0, [sp, #232]
  448bec:	mov	x1, x19
  448bf0:	bl	4487e0 <_obstack_memory_used@@Base+0x1874>
  448bf4:	mov	x2, x0
  448bf8:	ldrb	w0, [sp, #232]
  448bfc:	mov	x1, x19
  448c00:	str	x2, [sp, #208]
  448c04:	bl	4487e0 <_obstack_memory_used@@Base+0x1874>
  448c08:	stur	x0, [x21, #-16]
  448c0c:	b	448b50 <_obstack_memory_used@@Base+0x1be4>
  448c10:	ldr	x4, [sp, #224]
  448c14:	sub	x0, x0, #0x1
  448c18:	add	x23, x4, x0
  448c1c:	cbz	x26, 448ba4 <_obstack_memory_used@@Base+0x1c38>
  448c20:	cbz	x23, 448b9c <_obstack_memory_used@@Base+0x1c30>
  448c24:	and	w0, w22, #0x8
  448c28:	str	w0, [sp, #132]
  448c2c:	tbnz	w22, #3, 448ddc <_obstack_memory_used@@Base+0x1e70>
  448c30:	ldr	x0, [sp, #104]
  448c34:	adrp	x6, 487000 <_obstack_memory_used@@Base+0x40094>
  448c38:	cmp	x0, #0x1
  448c3c:	ldr	x6, [x6, #3976]
  448c40:	b.ls	448de8 <_obstack_memory_used@@Base+0x1e7c>  // b.plast
  448c44:	add	x28, sp, #0xa0
  448c48:	mov	x5, #0x1                   	// #1
  448c4c:	nop
  448c50:	mov	x25, x23
  448c54:	mov	x24, #0x0                   	// #0
  448c58:	mov	w1, #0x0                   	// #0
  448c5c:	nop
  448c60:	ldrb	w2, [x25], #1
  448c64:	and	x0, x2, #0x7f
  448c68:	lsl	x0, x0, x1
  448c6c:	add	w1, w1, #0x7
  448c70:	orr	x24, x24, x0
  448c74:	tbnz	w2, #7, 448c60 <_obstack_memory_used@@Base+0x1cf4>
  448c78:	cmp	w1, #0x3f
  448c7c:	b.hi	448c94 <_obstack_memory_used@@Base+0x1d28>  // b.pmore
  448c80:	lsl	x0, x5, x1
  448c84:	neg	x0, x0
  448c88:	orr	x0, x24, x0
  448c8c:	tst	x2, #0x40
  448c90:	csel	x24, x0, x24, ne  // ne = any
  448c94:	mov	x8, x25
  448c98:	mov	x20, #0x0                   	// #0
  448c9c:	mov	w1, #0x0                   	// #0
  448ca0:	ldrb	w2, [x8], #1
  448ca4:	and	x0, x2, #0x7f
  448ca8:	lsl	x0, x0, x1
  448cac:	add	w1, w1, #0x7
  448cb0:	orr	x20, x20, x0
  448cb4:	tbnz	w2, #7, 448ca0 <_obstack_memory_used@@Base+0x1d34>
  448cb8:	cmp	w1, #0x3f
  448cbc:	b.hi	448cd4 <_obstack_memory_used@@Base+0x1d68>  // b.pmore
  448cc0:	lsl	x0, x5, x1
  448cc4:	neg	x0, x0
  448cc8:	orr	x0, x20, x0
  448ccc:	tst	x2, #0x40
  448cd0:	csel	x20, x0, x20, ne  // ne = any
  448cd4:	cmp	x24, #0x0
  448cd8:	cbz	x24, 448d9c <_obstack_memory_used@@Base+0x1e30>
  448cdc:	b.gt	448d40 <_obstack_memory_used@@Base+0x1dd4>
  448ce0:	ldr	w0, [sp, #132]
  448ce4:	cmp	w0, #0x0
  448ce8:	ldr	w0, [sp, #128]
  448cec:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  448cf0:	ccmp	x6, #0x0, #0x4, ne  // ne = any
  448cf4:	b.ne	448da4 <_obstack_memory_used@@Base+0x1e38>  // b.any
  448cf8:	ldr	x0, [sp, #216]
  448cfc:	mvn	x8, x24
  448d00:	mov	x9, #0x0                   	// #0
  448d04:	mov	w1, #0x0                   	// #0
  448d08:	add	x8, x0, x8
  448d0c:	nop
  448d10:	ldrb	w2, [x8], #1
  448d14:	and	x0, x2, #0x7f
  448d18:	lsl	x0, x0, x1
  448d1c:	add	w1, w1, #0x7
  448d20:	orr	x9, x9, x0
  448d24:	tbnz	w2, #7, 448d10 <_obstack_memory_used@@Base+0x1da4>
  448d28:	cmp	x9, #0x0
  448d2c:	cset	w0, eq  // eq = none
  448d30:	cbnz	w0, 448d7c <_obstack_memory_used@@Base+0x1e10>
  448d34:	cbz	x20, 448dd4 <_obstack_memory_used@@Base+0x1e68>
  448d38:	add	x23, x25, x20
  448d3c:	b	448c50 <_obstack_memory_used@@Base+0x1ce4>
  448d40:	ldr	x0, [sp, #120]
  448d44:	mov	x1, x24
  448d48:	str	x6, [sp, #136]
  448d4c:	bl	448688 <_obstack_memory_used@@Base+0x171c>
  448d50:	cbz	x0, 448d7c <_obstack_memory_used@@Base+0x1e10>
  448d54:	ldr	x6, [sp, #136]
  448d58:	mov	x5, #0x1                   	// #1
  448d5c:	cbz	x6, 448d34 <_obstack_memory_used@@Base+0x1dc8>
  448d60:	mov	x1, x6
  448d64:	mov	x2, x28
  448d68:	bl	4484a0 <_obstack_memory_used@@Base+0x1534>
  448d6c:	tst	w0, #0xff
  448d70:	mov	x5, #0x1                   	// #1
  448d74:	ldr	x6, [sp, #136]
  448d78:	b.eq	448d34 <_obstack_memory_used@@Base+0x1dc8>  // b.none
  448d7c:	tbnz	w22, #0, 448b18 <_obstack_memory_used@@Base+0x1bac>
  448d80:	ldr	w0, [sp, #132]
  448d84:	cbnz	w0, 448d94 <_obstack_memory_used@@Base+0x1e28>
  448d88:	ldr	x0, [sp, #104]
  448d8c:	cmp	x0, #0x1
  448d90:	b.ls	448b4c <_obstack_memory_used@@Base+0x1be0>  // b.plast
  448d94:	tbz	w24, #31, 448b50 <_obstack_memory_used@@Base+0x1be4>
  448d98:	bl	448f98 <_obstack_memory_used@@Base+0x202c>
  448d9c:	mov	w27, #0x1                   	// #1
  448da0:	b	448d34 <_obstack_memory_used@@Base+0x1dc8>
  448da4:	ldr	x0, [sp, #120]
  448da8:	mov	x1, x6
  448dac:	ldr	x2, [sp, #160]
  448db0:	mov	x3, x24
  448db4:	str	x6, [sp, #136]
  448db8:	bl	448748 <_obstack_memory_used@@Base+0x17dc>
  448dbc:	and	w0, w0, #0xff
  448dc0:	eor	w0, w0, #0x1
  448dc4:	mov	x5, #0x1                   	// #1
  448dc8:	ldr	x6, [sp, #136]
  448dcc:	cbz	w0, 448d34 <_obstack_memory_used@@Base+0x1dc8>
  448dd0:	b	448d7c <_obstack_memory_used@@Base+0x1e10>
  448dd4:	cbnz	w27, 448b9c <_obstack_memory_used@@Base+0x1c30>
  448dd8:	b	448ba4 <_obstack_memory_used@@Base+0x1c38>
  448ddc:	adrp	x6, 487000 <_obstack_memory_used@@Base+0x40094>
  448de0:	ldr	x6, [x6, #3952]
  448de4:	b	448c44 <_obstack_memory_used@@Base+0x1cd8>
  448de8:	mov	x0, x21
  448dec:	ldr	x1, [x0], #32
  448df0:	tbz	w1, #0, 448df8 <_obstack_memory_used@@Base+0x1e8c>
  448df4:	ldur	x0, [x21, #-80]
  448df8:	ldur	x6, [x0, #-112]
  448dfc:	str	x0, [sp, #160]
  448e00:	b	448c44 <_obstack_memory_used@@Base+0x1cd8>
  448e04:	bl	449200 <_obstack_memory_used@@Base+0x2294>
  448e08:	bl	448f48 <_obstack_memory_used@@Base+0x1fdc>
  448e0c:	nop
  448e10:	stp	x29, x30, [sp, #-112]!
  448e14:	mov	x29, sp
  448e18:	stp	x19, x20, [sp, #16]
  448e1c:	mov	x19, x0
  448e20:	stp	x21, x22, [sp, #32]
  448e24:	str	x23, [sp, #48]
  448e28:	bl	449200 <_obstack_memory_used@@Base+0x2294>
  448e2c:	ldp	x0, x21, [x19, #-64]
  448e30:	ldur	x1, [x19, #-16]
  448e34:	str	x1, [sp, #80]
  448e38:	ldur	w20, [x19, #-36]
  448e3c:	ldur	x19, [x19, #-24]
  448e40:	bl	448f58 <_obstack_memory_used@@Base+0x1fec>
  448e44:	bl	449200 <_obstack_memory_used@@Base+0x2294>
  448e48:	bl	449370 <_obstack_memory_used@@Base+0x2404>
  448e4c:	ldr	x22, [x0]
  448e50:	ldr	x0, [x22, #80]
  448e54:	tbz	w0, #0, 448ed8 <_obstack_memory_used@@Base+0x1f6c>
  448e58:	ldr	x22, [x22]
  448e5c:	add	x23, sp, #0x40
  448e60:	mov	x1, x19
  448e64:	mov	x2, x23
  448e68:	mov	x0, #0x0                   	// #0
  448e6c:	bl	448848 <_obstack_memory_used@@Base+0x18dc>
  448e70:	ldur	x1, [x22, #-112]
  448e74:	sxtw	x20, w20
  448e78:	mov	x3, x20
  448e7c:	mov	x2, x22
  448e80:	mov	x0, x23
  448e84:	bl	448748 <_obstack_memory_used@@Base+0x17dc>
  448e88:	tst	w0, #0xff
  448e8c:	b.ne	448ef4 <_obstack_memory_used@@Base+0x1f88>  // b.any
  448e90:	adrp	x19, 487000 <_obstack_memory_used@@Base+0x40094>
  448e94:	mov	x3, x20
  448e98:	mov	x0, x23
  448e9c:	mov	x2, #0x0                   	// #0
  448ea0:	ldr	x1, [x19, #4024]
  448ea4:	bl	448748 <_obstack_memory_used@@Base+0x17dc>
  448ea8:	tst	w0, #0xff
  448eac:	b.eq	448ef8 <_obstack_memory_used@@Base+0x1f8c>  // b.none
  448eb0:	mov	x0, #0x8                   	// #8
  448eb4:	bl	448258 <_obstack_memory_used@@Base+0x12ec>
  448eb8:	adrp	x3, 487000 <_obstack_memory_used@@Base+0x40094>
  448ebc:	adrp	x2, 487000 <_obstack_memory_used@@Base+0x40094>
  448ec0:	ldr	x1, [x19, #4024]
  448ec4:	ldr	x3, [x3, #3944]
  448ec8:	ldr	x2, [x2, #3936]
  448ecc:	add	x3, x3, #0x10
  448ed0:	str	x3, [x0]
  448ed4:	bl	449070 <_obstack_memory_used@@Base+0x2104>
  448ed8:	add	x22, x22, #0x70
  448edc:	b	448e5c <_obstack_memory_used@@Base+0x1ef0>
  448ee0:	mov	x19, x0
  448ee4:	bl	4492a0 <_obstack_memory_used@@Base+0x2334>
  448ee8:	bl	4492a0 <_obstack_memory_used@@Base+0x2334>
  448eec:	mov	x0, x19
  448ef0:	bl	455b70 <_obstack_memory_used@@Base+0xec04>
  448ef4:	bl	4490d0 <_obstack_memory_used@@Base+0x2164>
  448ef8:	mov	x0, x21
  448efc:	bl	448f00 <_obstack_memory_used@@Base+0x1f94>
  448f00:	stp	x29, x30, [sp, #-16]!
  448f04:	mov	x29, sp
  448f08:	blr	x0
  448f0c:	bl	402590 <abort@plt>
  448f10:	bl	449200 <_obstack_memory_used@@Base+0x2294>
  448f14:	bl	402590 <abort@plt>
  448f18:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x40094>
  448f1c:	mov	x2, x0
  448f20:	ldr	x1, [x1, #3888]
  448f24:	ldaxr	x0, [x1]
  448f28:	stlxr	w3, x2, [x1]
  448f2c:	cbnz	w3, 448f24 <_obstack_memory_used@@Base+0x1fb8>
  448f30:	ret
  448f34:	nop
  448f38:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x40094>
  448f3c:	ldr	x0, [x0, #3888]
  448f40:	ldar	x0, [x0]
  448f44:	ret
  448f48:	stp	x29, x30, [sp, #-16]!
  448f4c:	mov	x29, sp
  448f50:	bl	448f38 <_obstack_memory_used@@Base+0x1fcc>
  448f54:	bl	448f00 <_obstack_memory_used@@Base+0x1f94>
  448f58:	stp	x29, x30, [sp, #-16]!
  448f5c:	mov	x29, sp
  448f60:	blr	x0
  448f64:	bl	448f48 <_obstack_memory_used@@Base+0x1fdc>
  448f68:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x40094>
  448f6c:	mov	x2, x0
  448f70:	ldr	x1, [x1, #3968]
  448f74:	ldaxr	x0, [x1]
  448f78:	stlxr	w3, x2, [x1]
  448f7c:	cbnz	w3, 448f74 <_obstack_memory_used@@Base+0x2008>
  448f80:	ret
  448f84:	nop
  448f88:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x40094>
  448f8c:	ldr	x0, [x0, #3968]
  448f90:	ldar	x0, [x0]
  448f94:	ret
  448f98:	stp	x29, x30, [sp, #-16]!
  448f9c:	mov	x29, sp
  448fa0:	bl	448f88 <_obstack_memory_used@@Base+0x201c>
  448fa4:	bl	448f58 <_obstack_memory_used@@Base+0x1fec>
  448fa8:	stp	x29, x30, [sp, #-32]!
  448fac:	cmp	w0, #0x1
  448fb0:	mov	x29, sp
  448fb4:	b.hi	449000 <_obstack_memory_used@@Base+0x2094>  // b.pmore
  448fb8:	sub	x0, x1, #0x60
  448fbc:	ldaxr	w2, [x0]
  448fc0:	sub	w2, w2, #0x1
  448fc4:	stlxr	w3, w2, [x0]
  448fc8:	cbnz	w3, 448fbc <_obstack_memory_used@@Base+0x2050>
  448fcc:	cbnz	w2, 448ff8 <_obstack_memory_used@@Base+0x208c>
  448fd0:	ldur	x2, [x1, #-72]
  448fd4:	str	x19, [sp, #16]
  448fd8:	add	x19, x1, #0x20
  448fdc:	cbz	x2, 448fe8 <_obstack_memory_used@@Base+0x207c>
  448fe0:	mov	x0, x19
  448fe4:	blr	x2
  448fe8:	mov	x0, x19
  448fec:	ldr	x19, [sp, #16]
  448ff0:	ldp	x29, x30, [sp], #32
  448ff4:	b	4482c0 <_obstack_memory_used@@Base+0x1354>
  448ff8:	ldp	x29, x30, [sp], #32
  448ffc:	ret
  449000:	ldur	x0, [x1, #-56]
  449004:	str	x19, [sp, #16]
  449008:	bl	448f00 <_obstack_memory_used@@Base+0x1f94>
  44900c:	nop
  449010:	stp	x29, x30, [sp, #-32]!
  449014:	mov	x29, sp
  449018:	stp	x19, x20, [sp, #16]
  44901c:	mov	x19, x0
  449020:	sub	x20, x0, #0x80
  449024:	stur	wzr, [x0, #-128]
  449028:	stp	x1, x2, [x0, #-112]
  44902c:	bl	448f88 <_obstack_memory_used@@Base+0x201c>
  449030:	stur	x0, [x19, #-96]
  449034:	bl	448f38 <_obstack_memory_used@@Base+0x1fcc>
  449038:	mov	x3, x0
  44903c:	mov	x2, #0x2b00                	// #11008
  449040:	adrp	x1, 448000 <_obstack_memory_used@@Base+0x1094>
  449044:	movk	x2, #0x432b, lsl #16
  449048:	add	x1, x1, #0xfa8
  44904c:	movk	x2, #0x5543, lsl #32
  449050:	stur	x3, [x19, #-88]
  449054:	movk	x2, #0x474e, lsl #48
  449058:	stp	x2, x1, [x19, #-32]
  44905c:	mov	x0, x20
  449060:	ldp	x19, x20, [sp, #16]
  449064:	ldp	x29, x30, [sp], #32
  449068:	ret
  44906c:	nop
  449070:	stp	x29, x30, [sp, #-48]!
  449074:	mov	x29, sp
  449078:	stp	x19, x20, [sp, #16]
  44907c:	mov	x19, x0
  449080:	mov	x20, x1
  449084:	str	x21, [sp, #32]
  449088:	mov	x21, x2
  44908c:	bl	449398 <_obstack_memory_used@@Base+0x242c>
  449090:	mov	x3, x0
  449094:	mov	x2, x21
  449098:	mov	x1, x20
  44909c:	mov	x0, x19
  4490a0:	ldr	w4, [x3, #8]
  4490a4:	add	w4, w4, #0x1
  4490a8:	str	w4, [x3, #8]
  4490ac:	bl	449010 <_obstack_memory_used@@Base+0x20a4>
  4490b0:	mov	x19, x0
  4490b4:	mov	w0, #0x1                   	// #1
  4490b8:	str	w0, [x19], #96
  4490bc:	mov	x0, x19
  4490c0:	bl	4558e0 <_obstack_memory_used@@Base+0xe974>
  4490c4:	mov	x0, x19
  4490c8:	bl	449200 <_obstack_memory_used@@Base+0x2294>
  4490cc:	bl	448f48 <_obstack_memory_used@@Base+0x1fdc>
  4490d0:	stp	x29, x30, [sp, #-32]!
  4490d4:	mov	x29, sp
  4490d8:	str	x19, [sp, #16]
  4490dc:	bl	449398 <_obstack_memory_used@@Base+0x242c>
  4490e0:	ldr	w2, [x0, #8]
  4490e4:	ldr	x1, [x0]
  4490e8:	add	w2, w2, #0x1
  4490ec:	str	w2, [x0, #8]
  4490f0:	cbz	x1, 44912c <_obstack_memory_used@@Base+0x21c0>
  4490f4:	mov	x3, #0xd500                	// #54528
  4490f8:	ldr	x2, [x1, #80]
  4490fc:	movk	x3, #0xbcd4, lsl #16
  449100:	movk	x3, #0xaabc, lsl #32
  449104:	movk	x3, #0xb8b1, lsl #48
  449108:	add	x2, x2, x3
  44910c:	cmp	x2, #0x1
  449110:	b.ls	449130 <_obstack_memory_used@@Base+0x21c4>  // b.plast
  449114:	str	xzr, [x0]
  449118:	add	x19, x1, #0x50
  44911c:	mov	x0, x19
  449120:	bl	455c80 <_obstack_memory_used@@Base+0xed14>
  449124:	mov	x0, x19
  449128:	bl	449200 <_obstack_memory_used@@Base+0x2294>
  44912c:	bl	448f48 <_obstack_memory_used@@Base+0x1fdc>
  449130:	ldr	w0, [x1, #40]
  449134:	neg	w0, w0
  449138:	str	w0, [x1, #40]
  44913c:	b	449118 <_obstack_memory_used@@Base+0x21ac>
  449140:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x41094>
  449144:	mov	x2, x0
  449148:	add	x1, x1, #0x928
  44914c:	ldaxr	x0, [x1]
  449150:	stlxr	w3, x2, [x1]
  449154:	cbnz	w3, 44914c <_obstack_memory_used@@Base+0x21e0>
  449158:	ret
  44915c:	nop
  449160:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  449164:	add	x0, x0, #0x928
  449168:	ldar	x0, [x0]
  44916c:	ret
  449170:	stp	x29, x30, [sp, #-16]!
  449174:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1f094>
  449178:	add	x1, x1, #0xec8
  44917c:	mov	x2, #0x1b                  	// #27
  449180:	mov	x29, sp
  449184:	mov	w0, #0x2                   	// #2
  449188:	bl	402570 <write@plt>
  44918c:	bl	448f48 <_obstack_memory_used@@Base+0x1fdc>
  449190:	stp	x29, x30, [sp, #-16]!
  449194:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x1f094>
  449198:	add	x1, x1, #0xee8
  44919c:	mov	x2, #0x1e                  	// #30
  4491a0:	mov	x29, sp
  4491a4:	mov	w0, #0x2                   	// #2
  4491a8:	bl	402570 <write@plt>
  4491ac:	bl	448f48 <_obstack_memory_used@@Base+0x1fdc>
  4491b0:	stp	x29, x30, [sp, #-32]!
  4491b4:	mov	x29, sp
  4491b8:	str	x19, [sp, #16]
  4491bc:	cbz	x0, 4491e8 <_obstack_memory_used@@Base+0x227c>
  4491c0:	mov	x19, x0
  4491c4:	bl	449200 <_obstack_memory_used@@Base+0x2294>
  4491c8:	mov	x1, #0xd500                	// #54528
  4491cc:	movk	x1, #0xbcd4, lsl #16
  4491d0:	ldr	x0, [x19]
  4491d4:	movk	x1, #0xaabc, lsl #32
  4491d8:	movk	x1, #0xb8b1, lsl #48
  4491dc:	add	x0, x0, x1
  4491e0:	cmp	x0, #0x1
  4491e4:	b.ls	4491ec <_obstack_memory_used@@Base+0x2280>  // b.plast
  4491e8:	bl	448f48 <_obstack_memory_used@@Base+0x1fdc>
  4491ec:	ldur	x0, [x19, #-56]
  4491f0:	bl	448f00 <_obstack_memory_used@@Base+0x1f94>
  4491f4:	nop
  4491f8:	ldur	x0, [x0, #-8]
  4491fc:	ret
  449200:	stp	x29, x30, [sp, #-32]!
  449204:	mov	x29, sp
  449208:	str	x19, [sp, #16]
  44920c:	mov	x19, x0
  449210:	bl	449398 <_obstack_memory_used@@Base+0x242c>
  449214:	mov	x1, x0
  449218:	mov	x2, x19
  44921c:	mov	x4, #0xd500                	// #54528
  449220:	movk	x4, #0xbcd4, lsl #16
  449224:	movk	x4, #0xaabc, lsl #32
  449228:	ldr	x3, [x2], #-80
  44922c:	movk	x4, #0xb8b1, lsl #48
  449230:	ldr	x0, [x0]
  449234:	add	x3, x3, x4
  449238:	cmp	x3, #0x1
  44923c:	b.ls	449254 <_obstack_memory_used@@Base+0x22e8>  // b.plast
  449240:	cbnz	x0, 449298 <_obstack_memory_used@@Base+0x232c>
  449244:	str	x2, [x1]
  449248:	ldr	x19, [sp, #16]
  44924c:	ldp	x29, x30, [sp], #32
  449250:	ret
  449254:	ldur	w3, [x19, #-40]
  449258:	mov	w5, #0x1                   	// #1
  44925c:	ldr	w4, [x1, #8]
  449260:	cmp	w3, #0x0
  449264:	sub	w5, w5, w3
  449268:	csinc	w3, w5, w3, lt  // lt = tstop
  44926c:	stur	w3, [x19, #-40]
  449270:	sub	w3, w4, #0x1
  449274:	str	w3, [x1, #8]
  449278:	cmp	x0, x2
  44927c:	b.eq	449288 <_obstack_memory_used@@Base+0x231c>  // b.none
  449280:	stur	x0, [x19, #-48]
  449284:	str	x2, [x1]
  449288:	ldur	x0, [x19, #-8]
  44928c:	ldr	x19, [sp, #16]
  449290:	ldp	x29, x30, [sp], #32
  449294:	ret
  449298:	bl	448f48 <_obstack_memory_used@@Base+0x1fdc>
  44929c:	nop
  4492a0:	stp	x29, x30, [sp, #-16]!
  4492a4:	mov	x29, sp
  4492a8:	bl	449370 <_obstack_memory_used@@Base+0x2404>
  4492ac:	ldr	x1, [x0]
  4492b0:	cbz	x1, 4492f0 <_obstack_memory_used@@Base+0x2384>
  4492b4:	mov	x3, #0xd500                	// #54528
  4492b8:	ldr	x2, [x1, #80]
  4492bc:	movk	x3, #0xbcd4, lsl #16
  4492c0:	movk	x3, #0xaabc, lsl #32
  4492c4:	movk	x3, #0xb8b1, lsl #48
  4492c8:	add	x2, x2, x3
  4492cc:	cmp	x2, #0x1
  4492d0:	b.hi	449310 <_obstack_memory_used@@Base+0x23a4>  // b.pmore
  4492d4:	ldr	w2, [x1, #40]
  4492d8:	tbnz	w2, #31, 4492f8 <_obstack_memory_used@@Base+0x238c>
  4492dc:	subs	w2, w2, #0x1
  4492e0:	b.eq	449320 <_obstack_memory_used@@Base+0x23b4>  // b.none
  4492e4:	cmn	w2, #0x1
  4492e8:	b.eq	449334 <_obstack_memory_used@@Base+0x23c8>  // b.none
  4492ec:	str	w2, [x1, #40]
  4492f0:	ldp	x29, x30, [sp], #16
  4492f4:	ret
  4492f8:	adds	w2, w2, #0x1
  4492fc:	b.ne	4492ec <_obstack_memory_used@@Base+0x2380>  // b.any
  449300:	ldr	x3, [x1, #32]
  449304:	str	x3, [x0]
  449308:	str	w2, [x1, #40]
  44930c:	b	4492f0 <_obstack_memory_used@@Base+0x2384>
  449310:	str	xzr, [x0]
  449314:	add	x0, x1, #0x50
  449318:	ldp	x29, x30, [sp], #16
  44931c:	b	455d88 <_obstack_memory_used@@Base+0xee1c>
  449320:	ldr	x2, [x1, #32]
  449324:	str	x2, [x0]
  449328:	add	x0, x1, #0x50
  44932c:	ldp	x29, x30, [sp], #16
  449330:	b	455d88 <_obstack_memory_used@@Base+0xee1c>
  449334:	bl	448f48 <_obstack_memory_used@@Base+0x1fdc>
  449338:	stp	x29, x30, [sp, #-16]!
  44933c:	mov	x29, sp
  449340:	bl	449398 <_obstack_memory_used@@Base+0x242c>
  449344:	ldr	w0, [x0, #8]
  449348:	ldp	x29, x30, [sp], #16
  44934c:	cmp	w0, #0x0
  449350:	cset	w0, ne  // ne = any
  449354:	ret
  449358:	stp	x29, x30, [sp, #-16]!
  44935c:	mov	x29, sp
  449360:	bl	449398 <_obstack_memory_used@@Base+0x242c>
  449364:	ldr	w0, [x0, #8]
  449368:	ldp	x29, x30, [sp], #16
  44936c:	ret
  449370:	stp	x29, x30, [sp, #-16]!
  449374:	mrs	x1, tpidr_el0
  449378:	movz	x0, #0x0, lsl #16
  44937c:	movk	x0, #0x10
  449380:	nop
  449384:	nop
  449388:	mov	x29, sp
  44938c:	add	x0, x1, x0
  449390:	ldp	x29, x30, [sp], #16
  449394:	ret
  449398:	stp	x29, x30, [sp, #-16]!
  44939c:	mrs	x1, tpidr_el0
  4493a0:	movz	x0, #0x0, lsl #16
  4493a4:	movk	x0, #0x10
  4493a8:	nop
  4493ac:	nop
  4493b0:	mov	x29, sp
  4493b4:	add	x0, x1, x0
  4493b8:	ldp	x29, x30, [sp], #16
  4493bc:	ret
  4493c0:	stp	x29, x30, [sp, #-64]!
  4493c4:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  4493c8:	mov	x29, sp
  4493cc:	ldrb	w1, [x0, #2352]
  4493d0:	cbnz	w1, 4494b8 <_obstack_memory_used@@Base+0x254c>
  4493d4:	mov	w1, #0x1                   	// #1
  4493d8:	strb	w1, [x0, #2352]
  4493dc:	bl	4534f8 <_obstack_memory_used@@Base+0xc58c>
  4493e0:	cbz	x0, 44948c <_obstack_memory_used@@Base+0x2520>
  4493e4:	stp	x19, x20, [sp, #16]
  4493e8:	mov	w4, #0xffffffff            	// #-1
  4493ec:	add	x3, sp, #0x3c
  4493f0:	ldr	x19, [x0, #8]
  4493f4:	stp	x21, x22, [sp, #32]
  4493f8:	adrp	x21, 487000 <_obstack_memory_used@@Base+0x40094>
  4493fc:	mov	x2, #0x0                   	// #0
  449400:	mov	x1, #0x0                   	// #0
  449404:	ldrb	w0, [x19]
  449408:	str	w4, [sp, #60]
  44940c:	cmp	w0, #0x2a
  449410:	cinc	x19, x19, eq  // eq = none
  449414:	mov	x0, x19
  449418:	bl	453330 <_obstack_memory_used@@Base+0xc3c4>
  44941c:	mov	x20, x0
  449420:	ldr	x22, [x21, #3912]
  449424:	mov	x1, #0x1                   	// #1
  449428:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1f094>
  44942c:	mov	x2, #0x30                  	// #48
  449430:	add	x0, x0, #0xf28
  449434:	ldr	x3, [x22]
  449438:	bl	4026d0 <fwrite@plt>
  44943c:	ldr	w0, [sp, #60]
  449440:	ldr	x1, [x22]
  449444:	cbz	w0, 449480 <_obstack_memory_used@@Base+0x2514>
  449448:	mov	x0, x19
  44944c:	bl	4022c0 <fputs@plt>
  449450:	ldr	x3, [x21, #3912]
  449454:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x10094>
  449458:	mov	x2, #0x2                   	// #2
  44945c:	add	x0, x0, #0xe18
  449460:	mov	x1, #0x1                   	// #1
  449464:	ldr	x3, [x3]
  449468:	bl	4026d0 <fwrite@plt>
  44946c:	ldr	w0, [sp, #60]
  449470:	cbnz	w0, 44947c <_obstack_memory_used@@Base+0x2510>
  449474:	mov	x0, x20
  449478:	bl	402690 <free@plt>
  44947c:	bl	4490d0 <_obstack_memory_used@@Base+0x2164>
  449480:	mov	x0, x20
  449484:	bl	4022c0 <fputs@plt>
  449488:	b	449450 <_obstack_memory_used@@Base+0x24e4>
  44948c:	adrp	x3, 487000 <_obstack_memory_used@@Base+0x40094>
  449490:	mov	x2, #0x2d                  	// #45
  449494:	mov	x1, #0x1                   	// #1
  449498:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1f094>
  44949c:	ldr	x3, [x3, #3912]
  4494a0:	add	x0, x0, #0xf60
  4494a4:	ldr	x3, [x3]
  4494a8:	bl	4026d0 <fwrite@plt>
  4494ac:	stp	x19, x20, [sp, #16]
  4494b0:	stp	x21, x22, [sp, #32]
  4494b4:	bl	402590 <abort@plt>
  4494b8:	adrp	x3, 487000 <_obstack_memory_used@@Base+0x40094>
  4494bc:	mov	x2, #0x1d                  	// #29
  4494c0:	mov	x1, #0x1                   	// #1
  4494c4:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1f094>
  4494c8:	ldr	x3, [x3, #3912]
  4494cc:	add	x0, x0, #0xf08
  4494d0:	stp	x19, x20, [sp, #16]
  4494d4:	ldr	x3, [x3]
  4494d8:	stp	x21, x22, [sp, #32]
  4494dc:	bl	4026d0 <fwrite@plt>
  4494e0:	bl	402590 <abort@plt>
  4494e4:	mov	x19, x1
  4494e8:	cmp	x1, #0x1
  4494ec:	b.ne	449548 <_obstack_memory_used@@Base+0x25dc>  // b.any
  4494f0:	bl	449200 <_obstack_memory_used@@Base+0x2294>
  4494f4:	ldr	x1, [x0]
  4494f8:	ldr	x1, [x1, #16]
  4494fc:	blr	x1
  449500:	mov	x20, x0
  449504:	ldr	x3, [x21, #3912]
  449508:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1f094>
  44950c:	mov	x1, x19
  449510:	add	x0, x0, #0xf90
  449514:	mov	x2, #0xb                   	// #11
  449518:	ldr	x3, [x3]
  44951c:	bl	4026d0 <fwrite@plt>
  449520:	ldr	x1, [x21, #3912]
  449524:	mov	x0, x20
  449528:	ldr	x1, [x1]
  44952c:	bl	4022c0 <fputs@plt>
  449530:	ldr	x21, [x21, #3912]
  449534:	mov	w0, #0xa                   	// #10
  449538:	ldr	x1, [x21]
  44953c:	bl	402380 <fputc@plt>
  449540:	bl	4492a0 <_obstack_memory_used@@Base+0x2334>
  449544:	bl	402590 <abort@plt>
  449548:	bl	449200 <_obstack_memory_used@@Base+0x2294>
  44954c:	bl	4492a0 <_obstack_memory_used@@Base+0x2334>
  449550:	bl	402590 <abort@plt>
  449554:	mov	x19, x0
  449558:	bl	4492a0 <_obstack_memory_used@@Base+0x2334>
  44955c:	mov	x0, x19
  449560:	bl	455b70 <_obstack_memory_used@@Base+0xec04>
  449564:	nop
  449568:	sub	w5, w1, #0x1
  44956c:	mov	x4, x0
  449570:	cmp	w5, #0x4f
  449574:	b.ls	449580 <_obstack_memory_used@@Base+0x2614>  // b.plast
  449578:	mov	x0, #0x0                   	// #0
  44957c:	ret
  449580:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1f094>
  449584:	add	x0, x0, #0xf9c
  449588:	ldrb	w0, [x0, w5, uxtw]
  44958c:	adr	x5, 449598 <_obstack_memory_used@@Base+0x262c>
  449590:	add	x0, x5, w0, sxtb #2
  449594:	br	x0
  449598:	cbz	x3, 449578 <_obstack_memory_used@@Base+0x260c>
  44959c:	ldp	w0, w5, [x4, #40]
  4495a0:	cmp	w0, w5
  4495a4:	b.ge	449578 <_obstack_memory_used@@Base+0x260c>  // b.tcont
  4495a8:	mov	w5, #0x18                  	// #24
  4495ac:	add	w7, w0, #0x1
  4495b0:	ldr	x6, [x4, #32]
  4495b4:	smull	x5, w0, w5
  4495b8:	add	x0, x6, x5
  4495bc:	str	wzr, [x0, #4]
  4495c0:	str	w7, [x4, #40]
  4495c4:	str	w1, [x6, x5]
  4495c8:	stp	x2, x3, [x0, #8]
  4495cc:	ret
  4495d0:	cbnz	x2, 44959c <_obstack_memory_used@@Base+0x2630>
  4495d4:	mov	x0, #0x0                   	// #0
  4495d8:	b	44957c <_obstack_memory_used@@Base+0x2610>
  4495dc:	cmp	x2, #0x0
  4495e0:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  4495e4:	b.ne	44959c <_obstack_memory_used@@Base+0x2630>  // b.any
  4495e8:	mov	x0, #0x0                   	// #0
  4495ec:	b	44957c <_obstack_memory_used@@Base+0x2610>
  4495f0:	ldr	x3, [x0, #24]
  4495f4:	mov	x2, x1
  4495f8:	mov	w4, #0x4f                  	// #79
  4495fc:	ldrb	w1, [x3]
  449600:	cmp	w1, #0x52
  449604:	ccmp	w1, w4, #0x4, ne  // ne = any
  449608:	b.ne	449634 <_obstack_memory_used@@Base+0x26c8>  // b.any
  44960c:	ldr	w5, [x0, #72]
  449610:	cmp	w1, #0x52
  449614:	mov	w1, #0x20                  	// #32
  449618:	add	w4, w5, #0x3
  44961c:	b.eq	44963c <_obstack_memory_used@@Base+0x26d0>  // b.none
  449620:	add	x3, x3, #0x1
  449624:	str	x3, [x0, #24]
  449628:	str	w4, [x0, #72]
  44962c:	mov	x3, #0x0                   	// #0
  449630:	b	449568 <_obstack_memory_used@@Base+0x25fc>
  449634:	mov	x0, x2
  449638:	ret
  44963c:	add	w4, w5, #0x2
  449640:	add	x3, x3, #0x1
  449644:	str	x3, [x0, #24]
  449648:	mov	w1, #0x1f                  	// #31
  44964c:	str	w4, [x0, #72]
  449650:	mov	x3, #0x0                   	// #0
  449654:	b	449568 <_obstack_memory_used@@Base+0x25fc>
  449658:	cbz	x1, 449738 <_obstack_memory_used@@Base+0x27cc>
  44965c:	stp	x29, x30, [sp, #-32]!
  449660:	mov	x29, sp
  449664:	stp	x19, x20, [sp, #16]
  449668:	mov	x20, x0
  44966c:	mov	x19, x1
  449670:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x1f094>
  449674:	add	x0, x0, #0xfec
  449678:	ldr	w1, [x19]
  44967c:	sub	w1, w1, #0x1
  449680:	cmp	w1, #0x4f
  449684:	b.ls	449694 <_obstack_memory_used@@Base+0x2728>  // b.plast
  449688:	ldp	x19, x20, [sp, #16]
  44968c:	ldp	x29, x30, [sp], #32
  449690:	ret
  449694:	ldrb	w1, [x0, w1, uxtw]
  449698:	adr	x2, 4496a4 <_obstack_memory_used@@Base+0x2738>
  44969c:	add	x1, x2, w1, sxtb #2
  4496a0:	br	x1
  4496a4:	ldr	x0, [x19, #8]
  4496a8:	ldr	w0, [x0]
  4496ac:	cmp	w0, #0x5
  4496b0:	b.ne	4496c0 <_obstack_memory_used@@Base+0x2754>  // b.any
  4496b4:	ldr	w0, [x20, #348]
  4496b8:	add	w0, w0, #0x1
  4496bc:	str	w0, [x20, #348]
  4496c0:	ldr	w0, [x20, #308]
  4496c4:	cmp	w0, #0x800
  4496c8:	b.gt	449688 <_obstack_memory_used@@Base+0x271c>
  4496cc:	ldr	x1, [x19, #8]
  4496d0:	add	w0, w0, #0x1
  4496d4:	str	w0, [x20, #308]
  4496d8:	mov	x0, x20
  4496dc:	bl	449658 <_obstack_memory_used@@Base+0x26ec>
  4496e0:	ldr	x1, [x19, #16]
  4496e4:	mov	x0, x20
  4496e8:	bl	449658 <_obstack_memory_used@@Base+0x26ec>
  4496ec:	ldr	w0, [x20, #308]
  4496f0:	sub	w0, w0, #0x1
  4496f4:	str	w0, [x20, #308]
  4496f8:	ldp	x19, x20, [sp, #16]
  4496fc:	ldp	x29, x30, [sp], #32
  449700:	ret
  449704:	ldr	x19, [x19, #8]
  449708:	cbnz	x19, 449678 <_obstack_memory_used@@Base+0x270c>
  44970c:	b	449688 <_obstack_memory_used@@Base+0x271c>
  449710:	ldr	x19, [x19, #16]
  449714:	cbnz	x19, 449678 <_obstack_memory_used@@Base+0x270c>
  449718:	b	449688 <_obstack_memory_used@@Base+0x271c>
  44971c:	ldr	w0, [x20, #364]
  449720:	add	w0, w0, #0x1
  449724:	str	w0, [x20, #364]
  449728:	ldr	w0, [x20, #308]
  44972c:	cmp	w0, #0x800
  449730:	b.gt	449688 <_obstack_memory_used@@Base+0x271c>
  449734:	b	4496cc <_obstack_memory_used@@Base+0x2760>
  449738:	ret
  44973c:	nop
  449740:	cbz	x2, 4497e0 <_obstack_memory_used@@Base+0x2874>
  449744:	stp	x29, x30, [sp, #-48]!
  449748:	mov	x29, sp
  44974c:	stp	x19, x20, [sp, #16]
  449750:	mov	x20, x1
  449754:	mov	x19, x0
  449758:	stp	x21, x22, [sp, #32]
  44975c:	add	x22, x1, x2
  449760:	ldr	x1, [x0, #256]
  449764:	b	449788 <_obstack_memory_used@@Base+0x281c>
  449768:	mov	x0, x1
  44976c:	add	x1, x1, #0x1
  449770:	str	x1, [x19, #256]
  449774:	add	x20, x20, #0x1
  449778:	cmp	x20, x22
  44977c:	strb	w21, [x19, x0]
  449780:	strb	w21, [x19, #264]
  449784:	b.eq	4497d0 <_obstack_memory_used@@Base+0x2864>  // b.none
  449788:	ldrb	w21, [x20]
  44978c:	cmp	x1, #0xff
  449790:	b.ne	449768 <_obstack_memory_used@@Base+0x27fc>  // b.any
  449794:	ldp	x3, x2, [x19, #272]
  449798:	strb	wzr, [x19, #255]
  44979c:	mov	x0, x19
  4497a0:	add	x20, x20, #0x1
  4497a4:	blr	x3
  4497a8:	ldr	x2, [x19, #320]
  4497ac:	mov	x0, #0x0                   	// #0
  4497b0:	mov	x1, #0x1                   	// #1
  4497b4:	str	x1, [x19, #256]
  4497b8:	add	x2, x2, x1
  4497bc:	str	x2, [x19, #320]
  4497c0:	strb	w21, [x19, x0]
  4497c4:	cmp	x20, x22
  4497c8:	strb	w21, [x19, #264]
  4497cc:	b.ne	449788 <_obstack_memory_used@@Base+0x281c>  // b.any
  4497d0:	ldp	x19, x20, [sp, #16]
  4497d4:	ldp	x21, x22, [sp, #32]
  4497d8:	ldp	x29, x30, [sp], #48
  4497dc:	ret
  4497e0:	ret
  4497e4:	nop
  4497e8:	ldr	x3, [x0]
  4497ec:	mov	x6, x0
  4497f0:	ldrb	w4, [x3]
  4497f4:	cmp	w4, #0x6e
  4497f8:	b.eq	449884 <_obstack_memory_used@@Base+0x2918>  // b.none
  4497fc:	sub	w0, w4, #0x30
  449800:	and	w0, w0, #0xff
  449804:	cmp	w0, #0x9
  449808:	b.hi	4498ac <_obstack_memory_used@@Base+0x2940>  // b.pmore
  44980c:	mov	w9, #0x0                   	// #0
  449810:	mov	w8, #0xcccd                	// #52429
  449814:	add	x3, x3, #0x1
  449818:	mov	w0, #0x0                   	// #0
  44981c:	mov	w7, #0x7fffffff            	// #2147483647
  449820:	movk	w8, #0xcccc, lsl #16
  449824:	b	449838 <_obstack_memory_used@@Base+0x28cc>
  449828:	umull	x1, w1, w8
  44982c:	lsr	x1, x1, #35
  449830:	cmp	w1, w0
  449834:	b.lt	44987c <_obstack_memory_used@@Base+0x2910>  // b.tstop
  449838:	str	x3, [x6]
  44983c:	add	w0, w0, w0, lsl #2
  449840:	add	x3, x3, #0x1
  449844:	ldurb	w1, [x3, #-1]
  449848:	add	w5, w4, w0, lsl #1
  44984c:	sub	w0, w5, #0x30
  449850:	sub	w2, w1, #0x30
  449854:	mov	w4, w1
  449858:	sub	w1, w7, w2
  44985c:	and	w2, w2, #0xff
  449860:	cmp	w2, #0x9
  449864:	b.ls	449828 <_obstack_memory_used@@Base+0x28bc>  // b.plast
  449868:	cmp	w9, #0x0
  44986c:	mov	w1, #0x30                  	// #48
  449870:	sub	w5, w1, w5
  449874:	csel	w0, w5, w0, ne  // ne = any
  449878:	ret
  44987c:	mov	w0, #0xffffffff            	// #-1
  449880:	ret
  449884:	add	x1, x3, #0x1
  449888:	str	x1, [x0]
  44988c:	ldrb	w4, [x3, #1]
  449890:	sub	w0, w4, #0x30
  449894:	and	w0, w0, #0xff
  449898:	cmp	w0, #0x9
  44989c:	b.hi	4498ac <_obstack_memory_used@@Base+0x2940>  // b.pmore
  4498a0:	mov	x3, x1
  4498a4:	mov	w9, #0x1                   	// #1
  4498a8:	b	449810 <_obstack_memory_used@@Base+0x28a4>
  4498ac:	mov	w0, #0x0                   	// #0
  4498b0:	ret
  4498b4:	nop
  4498b8:	mov	x1, x0
  4498bc:	ldr	w0, [x0, #40]
  4498c0:	ldr	w2, [x1, #44]
  4498c4:	cmp	w0, w2
  4498c8:	b.ge	449914 <_obstack_memory_used@@Base+0x29a8>  // b.tcont
  4498cc:	stp	x29, x30, [sp, #-16]!
  4498d0:	mov	w2, #0x18                  	// #24
  4498d4:	add	w5, w0, #0x1
  4498d8:	mov	x29, sp
  4498dc:	ldr	x3, [x1, #32]
  4498e0:	smull	x2, w0, w2
  4498e4:	mov	w4, #0x42                  	// #66
  4498e8:	add	x0, x1, #0x18
  4498ec:	add	x10, x3, x2
  4498f0:	str	wzr, [x10, #4]
  4498f4:	str	w5, [x1, #40]
  4498f8:	str	w4, [x3, x2]
  4498fc:	bl	4497e8 <_obstack_memory_used@@Base+0x287c>
  449900:	sxtw	x0, w0
  449904:	str	x0, [x10, #8]
  449908:	mov	x0, x10
  44990c:	ldp	x29, x30, [sp], #16
  449910:	ret
  449914:	mov	x10, #0x0                   	// #0
  449918:	mov	x0, x10
  44991c:	ret
  449920:	ldr	x1, [x0, #24]
  449924:	mov	x10, x0
  449928:	ldrb	w0, [x1]
  44992c:	cmp	w0, #0x5f
  449930:	b.eq	449974 <_obstack_memory_used@@Base+0x2a08>  // b.none
  449934:	cmp	w0, #0x6e
  449938:	b.eq	44998c <_obstack_memory_used@@Base+0x2a20>  // b.none
  44993c:	stp	x29, x30, [sp, #-16]!
  449940:	add	x0, x10, #0x18
  449944:	mov	x29, sp
  449948:	bl	4497e8 <_obstack_memory_used@@Base+0x287c>
  44994c:	adds	w0, w0, #0x1
  449950:	b.mi	449984 <_obstack_memory_used@@Base+0x2a18>  // b.first
  449954:	ldr	x1, [x10, #24]
  449958:	ldrb	w2, [x1]
  44995c:	cmp	w2, #0x5f
  449960:	b.ne	449984 <_obstack_memory_used@@Base+0x2a18>  // b.any
  449964:	add	x1, x1, #0x1
  449968:	str	x1, [x10, #24]
  44996c:	ldp	x29, x30, [sp], #16
  449970:	ret
  449974:	add	x1, x1, #0x1
  449978:	mov	w0, #0x0                   	// #0
  44997c:	str	x1, [x10, #24]
  449980:	ret
  449984:	mov	w0, #0xffffffff            	// #-1
  449988:	b	44996c <_obstack_memory_used@@Base+0x2a00>
  44998c:	mov	w0, #0xffffffff            	// #-1
  449990:	ret
  449994:	nop
  449998:	ldr	x1, [x0, #24]
  44999c:	ldrb	w2, [x1]
  4499a0:	cmp	w2, #0x54
  4499a4:	b.ne	449a10 <_obstack_memory_used@@Base+0x2aa4>  // b.any
  4499a8:	stp	x29, x30, [sp, #-16]!
  4499ac:	add	x1, x1, #0x1
  4499b0:	mov	x11, x0
  4499b4:	mov	x29, sp
  4499b8:	str	x1, [x0, #24]
  4499bc:	bl	449920 <_obstack_memory_used@@Base+0x29b4>
  4499c0:	tbnz	w0, #31, 449a04 <_obstack_memory_used@@Base+0x2a98>
  4499c4:	ldp	w1, w2, [x11, #40]
  4499c8:	cmp	w1, w2
  4499cc:	b.ge	449a04 <_obstack_memory_used@@Base+0x2a98>  // b.tcont
  4499d0:	mov	w2, #0x18                  	// #24
  4499d4:	add	w5, w1, #0x1
  4499d8:	ldr	x3, [x11, #32]
  4499dc:	smull	x2, w1, w2
  4499e0:	sxtw	x1, w0
  4499e4:	mov	w4, #0x5                   	// #5
  4499e8:	add	x0, x3, x2
  4499ec:	str	wzr, [x0, #4]
  4499f0:	str	w5, [x11, #40]
  4499f4:	str	w4, [x3, x2]
  4499f8:	str	x1, [x0, #8]
  4499fc:	ldp	x29, x30, [sp], #16
  449a00:	ret
  449a04:	mov	x0, #0x0                   	// #0
  449a08:	ldp	x29, x30, [sp], #16
  449a0c:	ret
  449a10:	mov	x0, #0x0                   	// #0
  449a14:	ret
  449a18:	mov	x10, x0
  449a1c:	stp	x29, x30, [sp, #-16]!
  449a20:	add	x0, x0, #0x18
  449a24:	mov	x29, sp
  449a28:	bl	4497e8 <_obstack_memory_used@@Base+0x287c>
  449a2c:	cmp	w0, #0x0
  449a30:	b.le	449b28 <_obstack_memory_used@@Base+0x2bbc>
  449a34:	mov	w1, w0
  449a38:	sxtw	x3, w0
  449a3c:	ldr	x0, [x10, #8]
  449a40:	ldr	x2, [x10, #24]
  449a44:	sub	x0, x0, x2
  449a48:	cmp	x0, w1, sxtw
  449a4c:	b.lt	449b20 <_obstack_memory_used@@Base+0x2bb4>  // b.tstop
  449a50:	ldr	w0, [x10, #16]
  449a54:	add	x3, x2, x3
  449a58:	str	x3, [x10, #24]
  449a5c:	tbz	w0, #2, 449a6c <_obstack_memory_used@@Base+0x2b00>
  449a60:	ldrb	w0, [x2, w1, sxtw]
  449a64:	cmp	w0, #0x24
  449a68:	b.eq	449b34 <_obstack_memory_used@@Base+0x2bc8>  // b.none
  449a6c:	ldp	w0, w3, [x10, #40]
  449a70:	cmp	w1, #0x9
  449a74:	b.gt	449ab0 <_obstack_memory_used@@Base+0x2b44>
  449a78:	cmp	w3, w0
  449a7c:	b.le	449b20 <_obstack_memory_used@@Base+0x2bb4>
  449a80:	ldr	x4, [x10, #32]
  449a84:	mov	w5, #0x18                  	// #24
  449a88:	add	w3, w0, #0x1
  449a8c:	smaddl	x0, w0, w5, x4
  449a90:	str	wzr, [x0, #4]
  449a94:	str	w3, [x10, #40]
  449a98:	cbz	x2, 449b20 <_obstack_memory_used@@Base+0x2bb4>
  449a9c:	stp	xzr, x2, [x0]
  449aa0:	str	w1, [x0, #16]
  449aa4:	str	x0, [x10, #64]
  449aa8:	ldp	x29, x30, [sp], #16
  449aac:	ret
  449ab0:	mov	x4, #0x475f                	// #18271
  449ab4:	ldr	x5, [x2]
  449ab8:	movk	x4, #0x4f4c, lsl #16
  449abc:	movk	x4, #0x4142, lsl #32
  449ac0:	movk	x4, #0x5f4c, lsl #48
  449ac4:	cmp	x5, x4
  449ac8:	b.ne	449af4 <_obstack_memory_used@@Base+0x2b88>  // b.any
  449acc:	ldrb	w4, [x2, #8]
  449ad0:	mov	w6, #0x5f                  	// #95
  449ad4:	mov	w5, #0x24                  	// #36
  449ad8:	cmp	w4, #0x2e
  449adc:	ccmp	w4, w6, #0x4, ne  // ne = any
  449ae0:	ccmp	w4, w5, #0x4, ne  // ne = any
  449ae4:	b.ne	449af4 <_obstack_memory_used@@Base+0x2b88>  // b.any
  449ae8:	ldrb	w4, [x2, #9]
  449aec:	cmp	w4, #0x4e
  449af0:	b.eq	449b4c <_obstack_memory_used@@Base+0x2be0>  // b.none
  449af4:	cmp	w3, w0
  449af8:	b.le	449b20 <_obstack_memory_used@@Base+0x2bb4>
  449afc:	ldr	x4, [x10, #32]
  449b00:	mov	w5, #0x18                  	// #24
  449b04:	add	w3, w0, #0x1
  449b08:	smaddl	x0, w0, w5, x4
  449b0c:	str	wzr, [x0, #4]
  449b10:	str	w3, [x10, #40]
  449b14:	stp	xzr, x2, [x0]
  449b18:	str	w1, [x0, #16]
  449b1c:	b	449aa4 <_obstack_memory_used@@Base+0x2b38>
  449b20:	mov	x0, #0x0                   	// #0
  449b24:	b	449aa4 <_obstack_memory_used@@Base+0x2b38>
  449b28:	mov	x0, #0x0                   	// #0
  449b2c:	ldp	x29, x30, [sp], #16
  449b30:	ret
  449b34:	add	x3, x3, #0x1
  449b38:	str	x3, [x10, #24]
  449b3c:	cmp	w1, #0x9
  449b40:	ldp	w0, w3, [x10, #40]
  449b44:	b.le	449a78 <_obstack_memory_used@@Base+0x2b0c>
  449b48:	b	449ab0 <_obstack_memory_used@@Base+0x2b44>
  449b4c:	ldr	w2, [x10, #72]
  449b50:	cmp	w3, w0
  449b54:	add	w2, w2, #0x16
  449b58:	sub	w1, w2, w1
  449b5c:	str	w1, [x10, #72]
  449b60:	b.le	449b20 <_obstack_memory_used@@Base+0x2bb4>
  449b64:	mov	w1, #0x18                  	// #24
  449b68:	add	w2, w0, #0x1
  449b6c:	ldr	x3, [x10, #32]
  449b70:	smull	x1, w0, w1
  449b74:	str	w2, [x10, #40]
  449b78:	mov	w4, #0x15                  	// #21
  449b7c:	add	x0, x3, x1
  449b80:	adrp	x2, 465000 <_obstack_memory_used@@Base+0x1e094>
  449b84:	add	x2, x2, #0xf40
  449b88:	str	xzr, [x3, x1]
  449b8c:	str	x2, [x0, #8]
  449b90:	str	w4, [x0, #16]
  449b94:	b	449aa4 <_obstack_memory_used@@Base+0x2b38>
  449b98:	ldr	x3, [x0, #24]
  449b9c:	mov	x11, x0
  449ba0:	ldr	x13, [x0, #64]
  449ba4:	mov	x12, x1
  449ba8:	ldrb	w0, [x3]
  449bac:	cmp	w0, #0x42
  449bb0:	b.ne	449c08 <_obstack_memory_used@@Base+0x2c9c>  // b.any
  449bb4:	stp	x29, x30, [sp, #-16]!
  449bb8:	mov	x29, sp
  449bbc:	nop
  449bc0:	add	x3, x3, #0x1
  449bc4:	str	x3, [x11, #24]
  449bc8:	mov	x0, x11
  449bcc:	bl	449a18 <_obstack_memory_used@@Base+0x2aac>
  449bd0:	mov	x3, x0
  449bd4:	mov	x2, x12
  449bd8:	mov	x0, x11
  449bdc:	mov	w1, #0x4c                  	// #76
  449be0:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  449be4:	ldr	x3, [x11, #24]
  449be8:	mov	x12, x0
  449bec:	ldrb	w0, [x3]
  449bf0:	cmp	w0, #0x42
  449bf4:	b.eq	449bc0 <_obstack_memory_used@@Base+0x2c54>  // b.none
  449bf8:	str	x13, [x11, #64]
  449bfc:	mov	x0, x12
  449c00:	ldp	x29, x30, [sp], #16
  449c04:	ret
  449c08:	mov	x0, x1
  449c0c:	str	x13, [x11, #64]
  449c10:	ret
  449c14:	nop
  449c18:	mov	x14, x0
  449c1c:	ldr	x0, [x0, #24]
  449c20:	ldrb	w2, [x0]
  449c24:	cmp	w2, #0x53
  449c28:	b.ne	449c98 <_obstack_memory_used@@Base+0x2d2c>  // b.any
  449c2c:	add	x2, x0, #0x1
  449c30:	str	x2, [x14, #24]
  449c34:	ldrb	w2, [x0, #1]
  449c38:	cbnz	w2, 449ca0 <_obstack_memory_used@@Base+0x2d34>
  449c3c:	ldr	w0, [x14, #16]
  449c40:	and	w1, w1, #0x1
  449c44:	ands	w3, w0, #0x8
  449c48:	ubfx	x4, x0, #3, #1
  449c4c:	csel	w1, w1, wzr, eq  // eq = none
  449c50:	cbz	w1, 449c6c <_obstack_memory_used@@Base+0x2d00>
  449c54:	ldr	x0, [x14, #24]
  449c58:	ldrb	w0, [x0]
  449c5c:	sub	w0, w0, #0x43
  449c60:	and	w0, w0, #0xff
  449c64:	cmp	w0, #0x1
  449c68:	csinc	w4, w4, wzr, hi  // hi = pmore
  449c6c:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x3f094>
  449c70:	add	x0, x0, #0xdf0
  449c74:	add	x3, x0, #0x188
  449c78:	mov	w1, #0x74                  	// #116
  449c7c:	b	449c84 <_obstack_memory_used@@Base+0x2d18>
  449c80:	ldrb	w1, [x0]
  449c84:	cmp	w1, w2
  449c88:	b.eq	449d74 <_obstack_memory_used@@Base+0x2e08>  // b.none
  449c8c:	add	x0, x0, #0x38
  449c90:	cmp	x0, x3
  449c94:	b.ne	449c80 <_obstack_memory_used@@Base+0x2d14>  // b.any
  449c98:	mov	x0, #0x0                   	// #0
  449c9c:	ret
  449ca0:	add	x2, x0, #0x2
  449ca4:	str	x2, [x14, #24]
  449ca8:	ldrb	w2, [x0, #1]
  449cac:	sub	w5, w2, #0x30
  449cb0:	cmp	w2, #0x5f
  449cb4:	and	w0, w5, #0xff
  449cb8:	ccmp	w0, #0x9, #0x0, ne  // ne = any
  449cbc:	b.hi	449ce4 <_obstack_memory_used@@Base+0x2d78>  // b.pmore
  449cc0:	cmp	w2, #0x5f
  449cc4:	mov	w1, #0x0                   	// #0
  449cc8:	b.ne	449cf8 <_obstack_memory_used@@Base+0x2d8c>  // b.any
  449ccc:	ldr	w0, [x14, #56]
  449cd0:	cmp	w0, w1
  449cd4:	b.ls	449c98 <_obstack_memory_used@@Base+0x2d2c>  // b.plast
  449cd8:	ldr	x0, [x14, #48]
  449cdc:	ldr	x0, [x0, w1, uxtw #3]
  449ce0:	ret
  449ce4:	sub	w0, w2, #0x41
  449ce8:	and	w0, w0, #0xff
  449cec:	cmp	w0, #0x19
  449cf0:	b.hi	449c3c <_obstack_memory_used@@Base+0x2cd0>  // b.pmore
  449cf4:	nop
  449cf8:	mov	w3, #0x0                   	// #0
  449cfc:	nop
  449d00:	add	w1, w3, w3, lsl #3
  449d04:	sub	w6, w2, #0x41
  449d08:	mov	w4, w1
  449d0c:	and	w5, w5, #0xff
  449d10:	add	w1, w2, w1, lsl #2
  449d14:	and	w6, w6, #0xff
  449d18:	sub	w1, w1, #0x37
  449d1c:	add	w2, w2, w4, lsl #2
  449d20:	cmp	w5, #0x9
  449d24:	b.hi	449d68 <_obstack_memory_used@@Base+0x2dfc>  // b.pmore
  449d28:	sub	w1, w2, #0x30
  449d2c:	cmp	w3, w1
  449d30:	b.hi	449c98 <_obstack_memory_used@@Base+0x2d2c>  // b.pmore
  449d34:	ldr	x4, [x14, #24]
  449d38:	mov	w3, w1
  449d3c:	add	x0, x4, #0x1
  449d40:	ldrb	w2, [x4]
  449d44:	cbz	w2, 449d58 <_obstack_memory_used@@Base+0x2dec>
  449d48:	str	x0, [x14, #24]
  449d4c:	ldrb	w2, [x4]
  449d50:	cmp	w2, #0x5f
  449d54:	b.eq	449d60 <_obstack_memory_used@@Base+0x2df4>  // b.none
  449d58:	sub	w5, w2, #0x30
  449d5c:	b	449d00 <_obstack_memory_used@@Base+0x2d94>
  449d60:	add	w1, w1, #0x1
  449d64:	b	449ccc <_obstack_memory_used@@Base+0x2d60>
  449d68:	cmp	w6, #0x19
  449d6c:	b.ls	449d2c <_obstack_memory_used@@Base+0x2dc0>  // b.plast
  449d70:	b	449c98 <_obstack_memory_used@@Base+0x2d2c>
  449d74:	ldr	x5, [x0, #40]
  449d78:	ldp	w1, w3, [x14, #40]
  449d7c:	cbz	x5, 449db8 <_obstack_memory_used@@Base+0x2e4c>
  449d80:	ldr	w9, [x0, #48]
  449d84:	cmp	w3, w1
  449d88:	b.le	449e70 <_obstack_memory_used@@Base+0x2f04>
  449d8c:	mov	w8, #0x18                  	// #24
  449d90:	ldr	x7, [x14, #32]
  449d94:	smull	x6, w1, w8
  449d98:	add	w1, w1, #0x1
  449d9c:	add	x2, x7, x6
  449da0:	str	wzr, [x2, #4]
  449da4:	str	w1, [x14, #40]
  449da8:	str	w8, [x7, x6]
  449dac:	str	x5, [x2, #8]
  449db0:	str	w9, [x2, #16]
  449db4:	str	x2, [x14, #64]
  449db8:	cbz	w4, 449e14 <_obstack_memory_used@@Base+0x2ea8>
  449dbc:	ldr	w2, [x0, #32]
  449dc0:	ldr	x5, [x0, #24]
  449dc4:	cmp	w1, w3
  449dc8:	ldr	w0, [x14, #72]
  449dcc:	add	w0, w0, w2
  449dd0:	str	w0, [x14, #72]
  449dd4:	b.ge	449e68 <_obstack_memory_used@@Base+0x2efc>  // b.tcont
  449dd8:	mov	w4, #0x18                  	// #24
  449ddc:	add	w6, w1, #0x1
  449de0:	ldr	x3, [x14, #32]
  449de4:	smull	x1, w1, w4
  449de8:	add	x0, x3, x1
  449dec:	str	wzr, [x0, #4]
  449df0:	str	w6, [x14, #40]
  449df4:	str	w4, [x3, x1]
  449df8:	str	x5, [x0, #8]
  449dfc:	str	w2, [x0, #16]
  449e00:	ldr	x1, [x14, #24]
  449e04:	ldrb	w1, [x1]
  449e08:	cmp	w1, #0x42
  449e0c:	b.eq	449e20 <_obstack_memory_used@@Base+0x2eb4>  // b.none
  449e10:	ret
  449e14:	ldr	w2, [x0, #16]
  449e18:	ldr	x5, [x0, #8]
  449e1c:	b	449dc4 <_obstack_memory_used@@Base+0x2e58>
  449e20:	stp	x29, x30, [sp, #-16]!
  449e24:	mov	x1, x0
  449e28:	mov	x0, x14
  449e2c:	mov	x29, sp
  449e30:	bl	449b98 <_obstack_memory_used@@Base+0x2c2c>
  449e34:	cbz	x0, 449e5c <_obstack_memory_used@@Base+0x2ef0>
  449e38:	ldp	w1, w2, [x14, #56]
  449e3c:	cmp	w1, w2
  449e40:	b.ge	449e5c <_obstack_memory_used@@Base+0x2ef0>  // b.tcont
  449e44:	ldr	x3, [x14, #48]
  449e48:	add	w2, w1, #0x1
  449e4c:	str	x0, [x3, w1, sxtw #3]
  449e50:	str	w2, [x14, #56]
  449e54:	ldp	x29, x30, [sp], #16
  449e58:	ret
  449e5c:	mov	x0, #0x0                   	// #0
  449e60:	ldp	x29, x30, [sp], #16
  449e64:	ret
  449e68:	mov	x0, #0x0                   	// #0
  449e6c:	b	449e00 <_obstack_memory_used@@Base+0x2e94>
  449e70:	mov	x2, #0x0                   	// #0
  449e74:	str	x2, [x14, #64]
  449e78:	b	449db8 <_obstack_memory_used@@Base+0x2e4c>
  449e7c:	nop
  449e80:	mov	x10, x0
  449e84:	cbnz	w1, 449ea0 <_obstack_memory_used@@Base+0x2f34>
  449e88:	ldr	x0, [x0, #24]
  449e8c:	ldrb	w1, [x0]
  449e90:	cbz	w1, 449ee0 <_obstack_memory_used@@Base+0x2f74>
  449e94:	add	x1, x0, #0x1
  449e98:	str	x1, [x10, #24]
  449e9c:	ldrb	w1, [x0]
  449ea0:	stp	x29, x30, [sp, #-16]!
  449ea4:	cmp	w1, #0x68
  449ea8:	mov	x29, sp
  449eac:	b.eq	449f1c <_obstack_memory_used@@Base+0x2fb0>  // b.none
  449eb0:	cmp	w1, #0x76
  449eb4:	b.ne	449ed4 <_obstack_memory_used@@Base+0x2f68>  // b.any
  449eb8:	add	x11, x10, #0x18
  449ebc:	mov	x0, x11
  449ec0:	bl	4497e8 <_obstack_memory_used@@Base+0x287c>
  449ec4:	ldr	x0, [x10, #24]
  449ec8:	ldrb	w1, [x0]
  449ecc:	cmp	w1, #0x5f
  449ed0:	b.eq	449ee8 <_obstack_memory_used@@Base+0x2f7c>  // b.none
  449ed4:	mov	w0, #0x0                   	// #0
  449ed8:	ldp	x29, x30, [sp], #16
  449edc:	ret
  449ee0:	mov	w0, #0x0                   	// #0
  449ee4:	ret
  449ee8:	add	x0, x0, #0x1
  449eec:	str	x0, [x10, #24]
  449ef0:	mov	x0, x11
  449ef4:	bl	4497e8 <_obstack_memory_used@@Base+0x287c>
  449ef8:	ldr	x0, [x10, #24]
  449efc:	ldrb	w1, [x0]
  449f00:	cmp	w1, #0x5f
  449f04:	b.ne	449ed4 <_obstack_memory_used@@Base+0x2f68>  // b.any
  449f08:	add	x1, x0, #0x1
  449f0c:	str	x1, [x10, #24]
  449f10:	mov	w0, #0x1                   	// #1
  449f14:	ldp	x29, x30, [sp], #16
  449f18:	ret
  449f1c:	add	x0, x10, #0x18
  449f20:	bl	4497e8 <_obstack_memory_used@@Base+0x287c>
  449f24:	b	449ef8 <_obstack_memory_used@@Base+0x2f8c>
  449f28:	mov	x2, x0
  449f2c:	mov	w3, #0x56                  	// #86
  449f30:	mov	w0, #0x4b                  	// #75
  449f34:	ldrb	w1, [x2]
  449f38:	cmp	w1, #0x72
  449f3c:	ccmp	w1, w3, #0x4, ne  // ne = any
  449f40:	ccmp	w1, w0, #0x4, ne  // ne = any
  449f44:	mov	w0, #0x1                   	// #1
  449f48:	b.eq	449f58 <_obstack_memory_used@@Base+0x2fec>  // b.none
  449f4c:	cmp	w1, #0x44
  449f50:	mov	w0, #0x0                   	// #0
  449f54:	b.eq	449f5c <_obstack_memory_used@@Base+0x2ff0>  // b.none
  449f58:	ret
  449f5c:	ldrb	w0, [x2, #1]
  449f60:	and	w1, w0, #0xffffffdf
  449f64:	sub	w0, w0, #0x77
  449f68:	cmp	w1, #0x4f
  449f6c:	and	w0, w0, #0xff
  449f70:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  449f74:	cset	w0, ls  // ls = plast
  449f78:	ret
  449f7c:	nop
  449f80:	ldr	x1, [x0, #24]
  449f84:	mov	x10, x0
  449f88:	ldrb	w0, [x1]
  449f8c:	cmp	w0, #0x5f
  449f90:	b.eq	449f9c <_obstack_memory_used@@Base+0x3030>  // b.none
  449f94:	mov	w0, #0x1                   	// #1
  449f98:	ret
  449f9c:	stp	x29, x30, [sp, #-16]!
  449fa0:	add	x0, x1, #0x1
  449fa4:	mov	x29, sp
  449fa8:	str	x0, [x10, #24]
  449fac:	ldrb	w0, [x1, #1]
  449fb0:	cmp	w0, #0x5f
  449fb4:	b.eq	449fd8 <_obstack_memory_used@@Base+0x306c>  // b.none
  449fb8:	add	x0, x10, #0x18
  449fbc:	bl	4497e8 <_obstack_memory_used@@Base+0x287c>
  449fc0:	mov	w1, w0
  449fc4:	mov	w0, #0x0                   	// #0
  449fc8:	tbnz	w1, #31, 449fd0 <_obstack_memory_used@@Base+0x3064>
  449fcc:	mov	w0, #0x1                   	// #1
  449fd0:	ldp	x29, x30, [sp], #16
  449fd4:	ret
  449fd8:	mov	x0, x10
  449fdc:	add	x1, x1, #0x2
  449fe0:	str	x1, [x0, #24]!
  449fe4:	bl	4497e8 <_obstack_memory_used@@Base+0x287c>
  449fe8:	tbnz	w0, #31, 44a018 <_obstack_memory_used@@Base+0x30ac>
  449fec:	cmp	w0, #0x9
  449ff0:	b.le	449fcc <_obstack_memory_used@@Base+0x3060>
  449ff4:	ldr	x1, [x10, #24]
  449ff8:	mov	w0, #0x0                   	// #0
  449ffc:	ldrb	w2, [x1]
  44a000:	cmp	w2, #0x5f
  44a004:	b.ne	449fd0 <_obstack_memory_used@@Base+0x3064>  // b.any
  44a008:	add	x1, x1, #0x1
  44a00c:	mov	w0, #0x1                   	// #1
  44a010:	str	x1, [x10, #24]
  44a014:	b	449fd0 <_obstack_memory_used@@Base+0x3064>
  44a018:	mov	w0, #0x0                   	// #0
  44a01c:	b	449fd0 <_obstack_memory_used@@Base+0x3064>
  44a020:	cbnz	x0, 44a03c <_obstack_memory_used@@Base+0x30d0>
  44a024:	b	44a048 <_obstack_memory_used@@Base+0x30dc>
  44a028:	cmp	w1, #0x0
  44a02c:	b.le	44a050 <_obstack_memory_used@@Base+0x30e4>
  44a030:	ldr	x0, [x0, #16]
  44a034:	sub	w1, w1, #0x1
  44a038:	cbz	x0, 44a04c <_obstack_memory_used@@Base+0x30e0>
  44a03c:	ldr	w2, [x0]
  44a040:	cmp	w2, #0x2f
  44a044:	b.eq	44a028 <_obstack_memory_used@@Base+0x30bc>  // b.none
  44a048:	mov	x0, #0x0                   	// #0
  44a04c:	ret
  44a050:	b.ne	44a048 <_obstack_memory_used@@Base+0x30dc>  // b.any
  44a054:	ldr	x0, [x0, #8]
  44a058:	ret
  44a05c:	nop
  44a060:	mov	x2, x0
  44a064:	ldr	x0, [x0, #288]
  44a068:	cbz	x0, 44a080 <_obstack_memory_used@@Base+0x3114>
  44a06c:	ldr	x1, [x1]
  44a070:	ldr	x0, [x0, #8]
  44a074:	ldr	x0, [x0, #16]
  44a078:	tbnz	w1, #31, 44a088 <_obstack_memory_used@@Base+0x311c>
  44a07c:	b	44a020 <_obstack_memory_used@@Base+0x30b4>
  44a080:	mov	w1, #0x1                   	// #1
  44a084:	str	w1, [x2, #304]
  44a088:	ret
  44a08c:	nop
  44a090:	cbz	x1, 44a164 <_obstack_memory_used@@Base+0x31f8>
  44a094:	stp	x29, x30, [sp, #-48]!
  44a098:	mov	x29, sp
  44a09c:	stp	x21, x22, [sp, #32]
  44a0a0:	mov	x21, #0x8001                	// #32769
  44a0a4:	movk	x21, #0x410, lsl #16
  44a0a8:	movk	x21, #0xc600, lsl #32
  44a0ac:	stp	x19, x20, [sp, #16]
  44a0b0:	mov	x20, x0
  44a0b4:	mov	x19, x1
  44a0b8:	mov	x22, #0x1                   	// #1
  44a0bc:	movk	x21, #0x19, lsl #48
  44a0c0:	ldr	w2, [x19]
  44a0c4:	cmp	w2, #0x8
  44a0c8:	b.eq	44a0e0 <_obstack_memory_used@@Base+0x3174>  // b.none
  44a0cc:	b.hi	44a134 <_obstack_memory_used@@Base+0x31c8>  // b.pmore
  44a0d0:	cmp	w2, #0x6
  44a0d4:	b.eq	44a0e8 <_obstack_memory_used@@Base+0x317c>  // b.none
  44a0d8:	cmp	w2, #0x7
  44a0dc:	b.ne	44a0fc <_obstack_memory_used@@Base+0x3190>  // b.any
  44a0e0:	ldr	x19, [x19, #16]
  44a0e4:	cbnz	x19, 44a0c0 <_obstack_memory_used@@Base+0x3154>
  44a0e8:	mov	x0, #0x0                   	// #0
  44a0ec:	ldp	x19, x20, [sp, #16]
  44a0f0:	ldp	x21, x22, [sp, #32]
  44a0f4:	ldp	x29, x30, [sp], #48
  44a0f8:	ret
  44a0fc:	cbz	w2, 44a0e8 <_obstack_memory_used@@Base+0x317c>
  44a100:	cmp	w2, #0x5
  44a104:	b.ne	44a150 <_obstack_memory_used@@Base+0x31e4>  // b.any
  44a108:	add	x1, x19, #0x8
  44a10c:	mov	x0, x20
  44a110:	bl	44a060 <_obstack_memory_used@@Base+0x30f4>
  44a114:	cbz	x0, 44a0e8 <_obstack_memory_used@@Base+0x317c>
  44a118:	ldr	w1, [x0]
  44a11c:	cmp	w1, #0x2f
  44a120:	b.ne	44a0e8 <_obstack_memory_used@@Base+0x317c>  // b.any
  44a124:	ldp	x19, x20, [sp, #16]
  44a128:	ldp	x21, x22, [sp, #32]
  44a12c:	ldp	x29, x30, [sp], #48
  44a130:	ret
  44a134:	sub	w2, w2, #0x18
  44a138:	cmp	w2, #0x34
  44a13c:	b.hi	44a150 <_obstack_memory_used@@Base+0x31e4>  // b.pmore
  44a140:	lsl	x2, x22, x2
  44a144:	tst	x2, x21
  44a148:	b.ne	44a0e8 <_obstack_memory_used@@Base+0x317c>  // b.any
  44a14c:	tbnz	w2, #27, 44a0e0 <_obstack_memory_used@@Base+0x3174>
  44a150:	ldr	x1, [x19, #8]
  44a154:	mov	x0, x20
  44a158:	bl	44a090 <_obstack_memory_used@@Base+0x3124>
  44a15c:	cbz	x0, 44a0e0 <_obstack_memory_used@@Base+0x3174>
  44a160:	b	44a0ec <_obstack_memory_used@@Base+0x3180>
  44a164:	mov	x0, #0x0                   	// #0
  44a168:	ret
  44a16c:	nop
  44a170:	stp	x29, x30, [sp, #-48]!
  44a174:	mov	x29, sp
  44a178:	stp	x19, x20, [sp, #16]
  44a17c:	mov	x19, x2
  44a180:	add	x2, x1, #0x1
  44a184:	stp	x21, x22, [sp, #32]
  44a188:	mov	x21, x1
  44a18c:	mov	x22, x0
  44a190:	ldp	x1, x20, [x19, #8]
  44a194:	add	x1, x2, x1
  44a198:	ldr	w2, [x19, #24]
  44a19c:	cmp	x1, x20
  44a1a0:	b.hi	44a1e4 <_obstack_memory_used@@Base+0x3278>  // b.pmore
  44a1a4:	cbnz	w2, 44a1d4 <_obstack_memory_used@@Base+0x3268>
  44a1a8:	ldp	x3, x0, [x19]
  44a1ac:	mov	x1, x22
  44a1b0:	mov	x2, x21
  44a1b4:	add	x0, x3, x0
  44a1b8:	bl	402260 <memcpy@plt>
  44a1bc:	ldp	x0, x1, [x19]
  44a1c0:	add	x0, x0, x21
  44a1c4:	strb	wzr, [x0, x1]
  44a1c8:	ldr	x1, [x19, #8]
  44a1cc:	add	x1, x1, x21
  44a1d0:	str	x1, [x19, #8]
  44a1d4:	ldp	x19, x20, [sp, #16]
  44a1d8:	ldp	x21, x22, [sp, #32]
  44a1dc:	ldp	x29, x30, [sp], #48
  44a1e0:	ret
  44a1e4:	cbnz	w2, 44a1d4 <_obstack_memory_used@@Base+0x3268>
  44a1e8:	cbz	x20, 44a220 <_obstack_memory_used@@Base+0x32b4>
  44a1ec:	nop
  44a1f0:	lsl	x20, x20, #1
  44a1f4:	cmp	x1, x20
  44a1f8:	b.hi	44a1f0 <_obstack_memory_used@@Base+0x3284>  // b.pmore
  44a1fc:	ldr	x0, [x19]
  44a200:	mov	x1, x20
  44a204:	bl	4024f0 <realloc@plt>
  44a208:	cbz	x0, 44a230 <_obstack_memory_used@@Base+0x32c4>
  44a20c:	ldr	w2, [x19, #24]
  44a210:	str	x0, [x19]
  44a214:	str	x20, [x19, #16]
  44a218:	cbz	w2, 44a1a8 <_obstack_memory_used@@Base+0x323c>
  44a21c:	b	44a1d4 <_obstack_memory_used@@Base+0x3268>
  44a220:	cmp	x1, #0x2
  44a224:	mov	x20, #0x2                   	// #2
  44a228:	b.hi	44a1f0 <_obstack_memory_used@@Base+0x3284>  // b.pmore
  44a22c:	b	44a1fc <_obstack_memory_used@@Base+0x3290>
  44a230:	ldr	x0, [x19]
  44a234:	bl	402690 <free@plt>
  44a238:	stp	xzr, xzr, [x19]
  44a23c:	mov	w0, #0x1                   	// #1
  44a240:	str	xzr, [x19, #16]
  44a244:	str	w0, [x19, #24]
  44a248:	b	44a1d4 <_obstack_memory_used@@Base+0x3268>
  44a24c:	nop
  44a250:	stp	x29, x30, [sp, #-112]!
  44a254:	mov	x29, sp
  44a258:	ldr	x2, [x0, #24]
  44a25c:	stp	x19, x20, [sp, #16]
  44a260:	mov	x19, x0
  44a264:	str	xzr, [sp, #104]
  44a268:	ldrb	w3, [x2]
  44a26c:	cmp	w3, w1, uxtb
  44a270:	b.eq	44a970 <_obstack_memory_used@@Base+0x3a04>  // b.none
  44a274:	stp	x21, x22, [sp, #32]
  44a278:	add	x21, sp, #0x68
  44a27c:	mov	w22, #0x1                   	// #1
  44a280:	stp	x23, x24, [sp, #48]
  44a284:	and	w23, w1, #0xff
  44a288:	mov	w24, #0x6d                  	// #109
  44a28c:	stp	x25, x26, [sp, #64]
  44a290:	ldr	w25, [x19, #76]
  44a294:	str	w22, [x19, #76]
  44a298:	ldrb	w0, [x2]
  44a29c:	cmp	w0, #0x4c
  44a2a0:	b.eq	44a470 <_obstack_memory_used@@Base+0x3504>  // b.none
  44a2a4:	cmp	w0, #0x54
  44a2a8:	b.eq	44a500 <_obstack_memory_used@@Base+0x3594>  // b.none
  44a2ac:	cmp	w0, #0x73
  44a2b0:	b.eq	44a430 <_obstack_memory_used@@Base+0x34c4>  // b.none
  44a2b4:	cmp	w0, #0x66
  44a2b8:	b.ne	44a354 <_obstack_memory_used@@Base+0x33e8>  // b.any
  44a2bc:	ldrb	w0, [x2, #1]
  44a2c0:	cmp	w0, #0x70
  44a2c4:	b.eq	44a510 <_obstack_memory_used@@Base+0x35a4>  // b.none
  44a2c8:	mov	x0, x19
  44a2cc:	bl	44cc70 <_obstack_memory_used@@Base+0x5d04>
  44a2d0:	mov	x20, x0
  44a2d4:	cbz	x0, 44a334 <_obstack_memory_used@@Base+0x33c8>
  44a2d8:	ldr	w0, [x0]
  44a2dc:	cmp	w0, #0x32
  44a2e0:	b.eq	44a578 <_obstack_memory_used@@Base+0x360c>  // b.none
  44a2e4:	cmp	w0, #0x34
  44a2e8:	b.eq	44a990 <_obstack_memory_used@@Base+0x3a24>  // b.none
  44a2ec:	b.hi	44a330 <_obstack_memory_used@@Base+0x33c4>  // b.pmore
  44a2f0:	cmp	w0, #0x33
  44a2f4:	b.ne	44a330 <_obstack_memory_used@@Base+0x33c4>  // b.any
  44a2f8:	ldr	w0, [x20, #8]
  44a2fc:	cmp	w0, #0x2
  44a300:	b.eq	44a330 <_obstack_memory_used@@Base+0x33c4>  // b.none
  44a304:	b.gt	44a330 <_obstack_memory_used@@Base+0x33c4>
  44a308:	cbnz	w0, 44a740 <_obstack_memory_used@@Base+0x37d4>
  44a30c:	mov	x2, x20
  44a310:	mov	x0, x19
  44a314:	mov	x3, #0x0                   	// #0
  44a318:	mov	w1, #0x36                  	// #54
  44a31c:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44a320:	mov	x20, x0
  44a324:	b	44a408 <_obstack_memory_used@@Base+0x349c>
  44a328:	ldr	x27, [sp, #80]
  44a32c:	nop
  44a330:	mov	x20, #0x0                   	// #0
  44a334:	str	w25, [x19, #76]
  44a338:	mov	x0, x20
  44a33c:	ldp	x19, x20, [sp, #16]
  44a340:	ldp	x21, x22, [sp, #32]
  44a344:	ldp	x23, x24, [sp, #48]
  44a348:	ldp	x25, x26, [sp, #64]
  44a34c:	ldp	x29, x30, [sp], #112
  44a350:	ret
  44a354:	sub	w1, w0, #0x30
  44a358:	and	w1, w1, #0xff
  44a35c:	cmp	w1, #0x9
  44a360:	b.hi	44a480 <_obstack_memory_used@@Base+0x3514>  // b.pmore
  44a364:	mov	x0, x19
  44a368:	bl	44d338 <_obstack_memory_used@@Base+0x63cc>
  44a36c:	mov	x20, x0
  44a370:	cbz	x0, 44a334 <_obstack_memory_used@@Base+0x33c8>
  44a374:	ldr	x0, [x19, #24]
  44a378:	ldrb	w1, [x0]
  44a37c:	cmp	w1, #0x49
  44a380:	b.eq	44a3e0 <_obstack_memory_used@@Base+0x3474>  // b.none
  44a384:	str	w25, [x19, #76]
  44a388:	mov	x2, x20
  44a38c:	mov	x0, x19
  44a390:	mov	x3, #0x0                   	// #0
  44a394:	mov	w1, #0x2e                  	// #46
  44a398:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44a39c:	str	x0, [x21]
  44a3a0:	cbz	x0, 44a410 <_obstack_memory_used@@Base+0x34a4>
  44a3a4:	ldr	x2, [x19, #24]
  44a3a8:	add	x21, x0, #0x10
  44a3ac:	ldrb	w0, [x2]
  44a3b0:	cmp	w0, w23
  44a3b4:	b.ne	44a290 <_obstack_memory_used@@Base+0x3324>  // b.any
  44a3b8:	ldr	x20, [sp, #104]
  44a3bc:	add	x2, x2, #0x1
  44a3c0:	str	x2, [x19, #24]
  44a3c4:	mov	x0, x20
  44a3c8:	ldp	x19, x20, [sp, #16]
  44a3cc:	ldp	x21, x22, [sp, #32]
  44a3d0:	ldp	x23, x24, [sp, #48]
  44a3d4:	ldp	x25, x26, [sp, #64]
  44a3d8:	ldp	x29, x30, [sp], #112
  44a3dc:	ret
  44a3e0:	add	x0, x0, #0x1
  44a3e4:	str	x0, [x19, #24]
  44a3e8:	mov	x0, x19
  44a3ec:	bl	44b248 <_obstack_memory_used@@Base+0x42dc>
  44a3f0:	mov	x3, x0
  44a3f4:	mov	x2, x20
  44a3f8:	mov	x0, x19
  44a3fc:	mov	w1, #0x4                   	// #4
  44a400:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44a404:	mov	x20, x0
  44a408:	str	w25, [x19, #76]
  44a40c:	cbnz	x20, 44a388 <_obstack_memory_used@@Base+0x341c>
  44a410:	mov	x20, #0x0                   	// #0
  44a414:	mov	x0, x20
  44a418:	ldp	x19, x20, [sp, #16]
  44a41c:	ldp	x21, x22, [sp, #32]
  44a420:	ldp	x23, x24, [sp, #48]
  44a424:	ldp	x25, x26, [sp, #64]
  44a428:	ldp	x29, x30, [sp], #112
  44a42c:	ret
  44a430:	ldrb	w0, [x2, #1]
  44a434:	cmp	w0, #0x72
  44a438:	b.eq	44a6c0 <_obstack_memory_used@@Base+0x3754>  // b.none
  44a43c:	cmp	w0, #0x70
  44a440:	b.ne	44a2c8 <_obstack_memory_used@@Base+0x335c>  // b.any
  44a444:	add	x2, x2, #0x2
  44a448:	str	x2, [x19, #24]
  44a44c:	mov	x0, x19
  44a450:	bl	44aa70 <_obstack_memory_used@@Base+0x3b04>
  44a454:	mov	x2, x0
  44a458:	mov	x3, #0x0                   	// #0
  44a45c:	mov	x0, x19
  44a460:	mov	w1, #0x4b                  	// #75
  44a464:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44a468:	mov	x20, x0
  44a46c:	b	44a408 <_obstack_memory_used@@Base+0x349c>
  44a470:	mov	x0, x19
  44a474:	bl	44d818 <_obstack_memory_used@@Base+0x68ac>
  44a478:	mov	x20, x0
  44a47c:	b	44a408 <_obstack_memory_used@@Base+0x349c>
  44a480:	cmp	w0, #0x6f
  44a484:	b.ne	44a4a0 <_obstack_memory_used@@Base+0x3534>  // b.any
  44a488:	ldrb	w0, [x2, #1]
  44a48c:	cmp	w0, #0x6e
  44a490:	b.ne	44a2c8 <_obstack_memory_used@@Base+0x335c>  // b.any
  44a494:	add	x2, x2, #0x2
  44a498:	str	x2, [x19, #24]
  44a49c:	b	44a364 <_obstack_memory_used@@Base+0x33f8>
  44a4a0:	cmp	w0, #0x69
  44a4a4:	mov	w1, #0x74                  	// #116
  44a4a8:	ccmp	w0, w1, #0x4, ne  // ne = any
  44a4ac:	b.ne	44a2c8 <_obstack_memory_used@@Base+0x335c>  // b.any
  44a4b0:	ldrb	w1, [x2, #1]
  44a4b4:	cmp	w1, #0x6c
  44a4b8:	b.ne	44a2c8 <_obstack_memory_used@@Base+0x335c>  // b.any
  44a4bc:	add	x1, x2, #0x2
  44a4c0:	str	x1, [x19, #24]
  44a4c4:	cmp	w0, #0x74
  44a4c8:	mov	x20, #0x0                   	// #0
  44a4cc:	b.eq	44a810 <_obstack_memory_used@@Base+0x38a4>  // b.none
  44a4d0:	ldrb	w0, [x1, #1]
  44a4d4:	cbz	w0, 44a330 <_obstack_memory_used@@Base+0x33c4>
  44a4d8:	mov	w1, #0x45                  	// #69
  44a4dc:	mov	x0, x19
  44a4e0:	bl	44a250 <_obstack_memory_used@@Base+0x32e4>
  44a4e4:	mov	x3, x0
  44a4e8:	mov	x2, x20
  44a4ec:	mov	x0, x19
  44a4f0:	mov	w1, #0x31                  	// #49
  44a4f4:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44a4f8:	mov	x20, x0
  44a4fc:	b	44a408 <_obstack_memory_used@@Base+0x349c>
  44a500:	mov	x0, x19
  44a504:	bl	449998 <_obstack_memory_used@@Base+0x2a2c>
  44a508:	mov	x20, x0
  44a50c:	b	44a408 <_obstack_memory_used@@Base+0x349c>
  44a510:	add	x0, x2, #0x2
  44a514:	str	x0, [x19, #24]
  44a518:	ldrb	w0, [x2, #2]
  44a51c:	cmp	w0, #0x54
  44a520:	b.eq	44a6b0 <_obstack_memory_used@@Base+0x3744>  // b.none
  44a524:	mov	x0, x19
  44a528:	bl	449920 <_obstack_memory_used@@Base+0x29b4>
  44a52c:	mvn	x1, x0
  44a530:	tst	x1, #0x7fffffff
  44a534:	b.eq	44a330 <_obstack_memory_used@@Base+0x33c4>  // b.none
  44a538:	add	w0, w0, #0x1
  44a53c:	ldp	w1, w2, [x19, #40]
  44a540:	cmp	w1, w2
  44a544:	b.ge	44a330 <_obstack_memory_used@@Base+0x33c4>  // b.tcont
  44a548:	mov	w3, #0x18                  	// #24
  44a54c:	add	w4, w1, #0x1
  44a550:	ldr	x2, [x19, #32]
  44a554:	smull	x1, w1, w3
  44a558:	mov	w3, #0x6                   	// #6
  44a55c:	sxtw	x0, w0
  44a560:	add	x20, x2, x1
  44a564:	str	wzr, [x20, #4]
  44a568:	str	w4, [x19, #40]
  44a56c:	str	w3, [x2, x1]
  44a570:	str	x0, [x20, #8]
  44a574:	b	44a384 <_obstack_memory_used@@Base+0x3418>
  44a578:	ldr	x2, [x20, #8]
  44a57c:	ldr	w0, [x19, #72]
  44a580:	ldr	w1, [x2, #16]
  44a584:	ldr	x26, [x2]
  44a588:	sub	w1, w1, #0x2
  44a58c:	add	w0, w0, w1
  44a590:	str	w0, [x19, #72]
  44a594:	ldrb	w1, [x26]
  44a598:	cmp	w1, #0x73
  44a59c:	b.eq	44a68c <_obstack_memory_used@@Base+0x3720>  // b.none
  44a5a0:	str	x27, [sp, #80]
  44a5a4:	ldr	w27, [x2, #20]
  44a5a8:	cmp	w27, #0x1
  44a5ac:	b.eq	44a758 <_obstack_memory_used@@Base+0x37ec>  // b.none
  44a5b0:	b.le	44a734 <_obstack_memory_used@@Base+0x37c8>
  44a5b4:	cmp	w27, #0x2
  44a5b8:	b.eq	44a878 <_obstack_memory_used@@Base+0x390c>  // b.none
  44a5bc:	cmp	w27, #0x3
  44a5c0:	b.ne	44a328 <_obstack_memory_used@@Base+0x33bc>  // b.any
  44a5c4:	cmp	w1, #0x71
  44a5c8:	b.eq	44a82c <_obstack_memory_used@@Base+0x38c0>  // b.none
  44a5cc:	ldrb	w0, [x26]
  44a5d0:	cmp	w0, #0x66
  44a5d4:	b.eq	44a9fc <_obstack_memory_used@@Base+0x3a90>  // b.none
  44a5d8:	cmp	w0, #0x6e
  44a5dc:	b.ne	44a868 <_obstack_memory_used@@Base+0x38fc>  // b.any
  44a5e0:	ldrb	w0, [x26, #1]
  44a5e4:	mov	w1, #0x61                  	// #97
  44a5e8:	cmp	w0, #0x77
  44a5ec:	ccmp	w0, w1, #0x4, ne  // ne = any
  44a5f0:	b.ne	44a868 <_obstack_memory_used@@Base+0x38fc>  // b.any
  44a5f4:	mov	w1, #0x5f                  	// #95
  44a5f8:	mov	x0, x19
  44a5fc:	bl	44a250 <_obstack_memory_used@@Base+0x32e4>
  44a600:	mov	x26, x0
  44a604:	mov	x0, x19
  44a608:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  44a60c:	ldr	x1, [x19, #24]
  44a610:	mov	x27, x0
  44a614:	ldrb	w0, [x1]
  44a618:	cmp	w0, #0x45
  44a61c:	b.eq	44aa5c <_obstack_memory_used@@Base+0x3af0>  // b.none
  44a620:	cmp	w0, #0x70
  44a624:	b.eq	44aa34 <_obstack_memory_used@@Base+0x3ac8>  // b.none
  44a628:	cmp	w0, #0x69
  44a62c:	b.ne	44a868 <_obstack_memory_used@@Base+0x38fc>  // b.any
  44a630:	ldrb	w0, [x1, #1]
  44a634:	cmp	w0, #0x6c
  44a638:	b.ne	44a868 <_obstack_memory_used@@Base+0x38fc>  // b.any
  44a63c:	mov	x0, x19
  44a640:	bl	44aa70 <_obstack_memory_used@@Base+0x3b04>
  44a644:	mov	x3, x0
  44a648:	mov	x2, x27
  44a64c:	mov	w1, #0x3c                  	// #60
  44a650:	mov	x0, x19
  44a654:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44a658:	mov	x2, x26
  44a65c:	mov	x3, x0
  44a660:	mov	w1, #0x3b                  	// #59
  44a664:	mov	x0, x19
  44a668:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44a66c:	mov	x3, x0
  44a670:	mov	x2, x20
  44a674:	mov	x0, x19
  44a678:	mov	w1, #0x3a                  	// #58
  44a67c:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44a680:	mov	x20, x0
  44a684:	ldr	x27, [sp, #80]
  44a688:	b	44a408 <_obstack_memory_used@@Base+0x349c>
  44a68c:	ldrb	w0, [x26, #1]
  44a690:	cmp	w0, #0x74
  44a694:	b.ne	44a5a0 <_obstack_memory_used@@Base+0x3634>  // b.any
  44a698:	ldrb	w0, [x26, #2]
  44a69c:	cbnz	w0, 44a5a0 <_obstack_memory_used@@Base+0x3634>
  44a6a0:	mov	x0, x19
  44a6a4:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  44a6a8:	mov	x3, x0
  44a6ac:	b	44a79c <_obstack_memory_used@@Base+0x3830>
  44a6b0:	add	x2, x2, #0x3
  44a6b4:	mov	w0, #0x0                   	// #0
  44a6b8:	str	x2, [x19, #24]
  44a6bc:	b	44a53c <_obstack_memory_used@@Base+0x35d0>
  44a6c0:	add	x2, x2, #0x2
  44a6c4:	str	x2, [x19, #24]
  44a6c8:	mov	x0, x19
  44a6cc:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  44a6d0:	mov	x20, x0
  44a6d4:	mov	x0, x19
  44a6d8:	bl	44d338 <_obstack_memory_used@@Base+0x63cc>
  44a6dc:	ldr	x1, [x19, #24]
  44a6e0:	mov	x26, x0
  44a6e4:	mov	x3, x26
  44a6e8:	ldrb	w0, [x1]
  44a6ec:	cmp	w0, #0x49
  44a6f0:	b.ne	44a71c <_obstack_memory_used@@Base+0x37b0>  // b.any
  44a6f4:	add	x1, x1, #0x1
  44a6f8:	str	x1, [x19, #24]
  44a6fc:	mov	x0, x19
  44a700:	bl	44b248 <_obstack_memory_used@@Base+0x42dc>
  44a704:	mov	x3, x0
  44a708:	mov	x2, x26
  44a70c:	mov	x0, x19
  44a710:	mov	w1, #0x4                   	// #4
  44a714:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44a718:	mov	x3, x0
  44a71c:	mov	x2, x20
  44a720:	mov	x0, x19
  44a724:	mov	w1, #0x1                   	// #1
  44a728:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44a72c:	mov	x20, x0
  44a730:	b	44a408 <_obstack_memory_used@@Base+0x349c>
  44a734:	cbnz	w27, 44a328 <_obstack_memory_used@@Base+0x33bc>
  44a738:	ldr	x27, [sp, #80]
  44a73c:	b	44a30c <_obstack_memory_used@@Base+0x33a0>
  44a740:	cmp	w0, #0x1
  44a744:	b.ne	44a330 <_obstack_memory_used@@Base+0x33c4>  // b.any
  44a748:	mov	x0, x19
  44a74c:	bl	44aa70 <_obstack_memory_used@@Base+0x3b04>
  44a750:	mov	x3, x0
  44a754:	b	44a79c <_obstack_memory_used@@Base+0x3830>
  44a758:	ldrb	w0, [x26]
  44a75c:	cmp	w0, #0x70
  44a760:	ccmp	w0, w24, #0x4, ne  // ne = any
  44a764:	b.eq	44a7e0 <_obstack_memory_used@@Base+0x3874>  // b.none
  44a768:	mov	w27, #0x0                   	// #0
  44a76c:	cmp	w1, #0x73
  44a770:	b.ne	44a7b4 <_obstack_memory_used@@Base+0x3848>  // b.any
  44a774:	ldrb	w0, [x26, #1]
  44a778:	cmp	w0, #0x50
  44a77c:	b.ne	44a7b4 <_obstack_memory_used@@Base+0x3848>  // b.any
  44a780:	ldrb	w0, [x26, #2]
  44a784:	cbnz	w0, 44a7b4 <_obstack_memory_used@@Base+0x3848>
  44a788:	mov	x0, x19
  44a78c:	bl	44b248 <_obstack_memory_used@@Base+0x42dc>
  44a790:	mov	x3, x0
  44a794:	cbnz	w27, 44a7c4 <_obstack_memory_used@@Base+0x3858>
  44a798:	ldr	x27, [sp, #80]
  44a79c:	mov	x2, x20
  44a7a0:	mov	x0, x19
  44a7a4:	mov	w1, #0x37                  	// #55
  44a7a8:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44a7ac:	mov	x20, x0
  44a7b0:	b	44a408 <_obstack_memory_used@@Base+0x349c>
  44a7b4:	mov	x0, x19
  44a7b8:	bl	44aa70 <_obstack_memory_used@@Base+0x3b04>
  44a7bc:	mov	x3, x0
  44a7c0:	cbz	w27, 44a798 <_obstack_memory_used@@Base+0x382c>
  44a7c4:	mov	x2, x3
  44a7c8:	mov	x0, x19
  44a7cc:	mov	w1, #0x39                  	// #57
  44a7d0:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44a7d4:	mov	x3, x0
  44a7d8:	ldr	x27, [sp, #80]
  44a7dc:	b	44a79c <_obstack_memory_used@@Base+0x3830>
  44a7e0:	ldrb	w2, [x26, #1]
  44a7e4:	cmp	w2, w0
  44a7e8:	b.ne	44a768 <_obstack_memory_used@@Base+0x37fc>  // b.any
  44a7ec:	ldr	x0, [x19, #24]
  44a7f0:	ldrb	w2, [x0]
  44a7f4:	cmp	w2, #0x5f
  44a7f8:	b.ne	44a76c <_obstack_memory_used@@Base+0x3800>  // b.any
  44a7fc:	add	x0, x0, #0x1
  44a800:	str	x0, [x19, #24]
  44a804:	mov	w27, #0x0                   	// #0
  44a808:	ldrb	w1, [x26]
  44a80c:	b	44a76c <_obstack_memory_used@@Base+0x3800>
  44a810:	mov	x0, x19
  44a814:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  44a818:	ldr	x1, [x19, #24]
  44a81c:	mov	x20, x0
  44a820:	ldrb	w0, [x1, #1]
  44a824:	cbnz	w0, 44a4d8 <_obstack_memory_used@@Base+0x356c>
  44a828:	b	44a330 <_obstack_memory_used@@Base+0x33c4>
  44a82c:	ldrb	w0, [x26, #1]
  44a830:	cmp	w0, #0x75
  44a834:	b.ne	44a5cc <_obstack_memory_used@@Base+0x3660>  // b.any
  44a838:	ldrb	w0, [x26, #2]
  44a83c:	cbnz	w0, 44a5cc <_obstack_memory_used@@Base+0x3660>
  44a840:	mov	x0, x19
  44a844:	bl	44aa70 <_obstack_memory_used@@Base+0x3b04>
  44a848:	mov	x26, x0
  44a84c:	mov	x0, x19
  44a850:	bl	44aa70 <_obstack_memory_used@@Base+0x3b04>
  44a854:	mov	x27, x0
  44a858:	mov	x0, x19
  44a85c:	bl	44aa70 <_obstack_memory_used@@Base+0x3b04>
  44a860:	mov	x3, x0
  44a864:	cbnz	x0, 44a648 <_obstack_memory_used@@Base+0x36dc>
  44a868:	mov	x20, #0x0                   	// #0
  44a86c:	ldr	x27, [sp, #80]
  44a870:	str	w25, [x19, #76]
  44a874:	b	44a338 <_obstack_memory_used@@Base+0x33cc>
  44a878:	ldr	x0, [x20, #8]
  44a87c:	ldr	x0, [x0]
  44a880:	ldrb	w1, [x0, #1]
  44a884:	cmp	w1, #0x63
  44a888:	b.eq	44a9bc <_obstack_memory_used@@Base+0x3a50>  // b.none
  44a88c:	ldrb	w0, [x26]
  44a890:	cmp	w0, #0x66
  44a894:	b.eq	44a9ec <_obstack_memory_used@@Base+0x3a80>  // b.none
  44a898:	mov	x0, x19
  44a89c:	bl	44aa70 <_obstack_memory_used@@Base+0x3b04>
  44a8a0:	mov	x27, x0
  44a8a4:	ldrb	w1, [x26]
  44a8a8:	cmp	w1, #0x63
  44a8ac:	b.ne	44a8d8 <_obstack_memory_used@@Base+0x396c>  // b.any
  44a8b0:	ldrb	w0, [x26, #1]
  44a8b4:	cmp	w0, #0x6c
  44a8b8:	b.ne	44a8d8 <_obstack_memory_used@@Base+0x396c>  // b.any
  44a8bc:	ldrb	w0, [x26, #2]
  44a8c0:	cbnz	w0, 44a8d8 <_obstack_memory_used@@Base+0x396c>
  44a8c4:	mov	x0, x19
  44a8c8:	mov	w1, #0x45                  	// #69
  44a8cc:	bl	44a250 <_obstack_memory_used@@Base+0x32e4>
  44a8d0:	mov	x26, x0
  44a8d4:	b	44a910 <_obstack_memory_used@@Base+0x39a4>
  44a8d8:	cmp	w1, #0x64
  44a8dc:	b.ne	44a944 <_obstack_memory_used@@Base+0x39d8>  // b.any
  44a8e0:	ldrb	w0, [x26, #1]
  44a8e4:	cmp	w0, #0x74
  44a8e8:	b.ne	44a944 <_obstack_memory_used@@Base+0x39d8>  // b.any
  44a8ec:	ldrb	w0, [x26, #2]
  44a8f0:	cbnz	w0, 44a944 <_obstack_memory_used@@Base+0x39d8>
  44a8f4:	mov	x0, x19
  44a8f8:	bl	44d338 <_obstack_memory_used@@Base+0x63cc>
  44a8fc:	ldr	x1, [x19, #24]
  44a900:	mov	x26, x0
  44a904:	ldrb	w0, [x1]
  44a908:	cmp	w0, #0x49
  44a90c:	b.eq	44aa08 <_obstack_memory_used@@Base+0x3a9c>  // b.none
  44a910:	mov	x2, x27
  44a914:	mov	x3, x26
  44a918:	mov	w1, #0x39                  	// #57
  44a91c:	mov	x0, x19
  44a920:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44a924:	mov	x3, x0
  44a928:	mov	x2, x20
  44a92c:	mov	x0, x19
  44a930:	mov	w1, #0x38                  	// #56
  44a934:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44a938:	mov	x20, x0
  44a93c:	ldr	x27, [sp, #80]
  44a940:	b	44a408 <_obstack_memory_used@@Base+0x349c>
  44a944:	cmp	w1, #0x70
  44a948:	b.ne	44a960 <_obstack_memory_used@@Base+0x39f4>  // b.any
  44a94c:	ldrb	w0, [x26, #1]
  44a950:	cmp	w0, #0x74
  44a954:	b.ne	44a960 <_obstack_memory_used@@Base+0x39f4>  // b.any
  44a958:	ldrb	w0, [x26, #2]
  44a95c:	cbz	w0, 44a8f4 <_obstack_memory_used@@Base+0x3988>
  44a960:	mov	x0, x19
  44a964:	bl	44aa70 <_obstack_memory_used@@Base+0x3b04>
  44a968:	mov	x26, x0
  44a96c:	b	44a910 <_obstack_memory_used@@Base+0x39a4>
  44a970:	add	x2, x2, #0x1
  44a974:	str	x2, [x0, #24]
  44a978:	ldp	x19, x20, [sp, #16]
  44a97c:	mov	x3, #0x0                   	// #0
  44a980:	ldp	x29, x30, [sp], #112
  44a984:	mov	w1, #0x2e                  	// #46
  44a988:	mov	x2, #0x0                   	// #0
  44a98c:	b	449568 <_obstack_memory_used@@Base+0x25fc>
  44a990:	ldr	x0, [x19, #24]
  44a994:	ldrb	w1, [x0]
  44a998:	cmp	w1, #0x5f
  44a99c:	b.ne	44a748 <_obstack_memory_used@@Base+0x37dc>  // b.any
  44a9a0:	add	x0, x0, #0x1
  44a9a4:	str	x0, [x19, #24]
  44a9a8:	mov	w1, #0x45                  	// #69
  44a9ac:	mov	x0, x19
  44a9b0:	bl	44a250 <_obstack_memory_used@@Base+0x32e4>
  44a9b4:	mov	x3, x0
  44a9b8:	b	44a79c <_obstack_memory_used@@Base+0x3830>
  44a9bc:	ldrb	w0, [x0]
  44a9c0:	sub	w1, w0, #0x72
  44a9c4:	sub	w0, w0, #0x63
  44a9c8:	and	w1, w1, #0xff
  44a9cc:	and	w0, w0, #0xff
  44a9d0:	cmp	w1, #0x1
  44a9d4:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  44a9d8:	b.hi	44a88c <_obstack_memory_used@@Base+0x3920>  // b.pmore
  44a9dc:	mov	x0, x19
  44a9e0:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  44a9e4:	mov	x27, x0
  44a9e8:	b	44a8a4 <_obstack_memory_used@@Base+0x3938>
  44a9ec:	mov	x0, x19
  44a9f0:	bl	44cc70 <_obstack_memory_used@@Base+0x5d04>
  44a9f4:	mov	x27, x0
  44a9f8:	b	44a8a4 <_obstack_memory_used@@Base+0x3938>
  44a9fc:	mov	x0, x19
  44aa00:	bl	44cc70 <_obstack_memory_used@@Base+0x5d04>
  44aa04:	b	44a848 <_obstack_memory_used@@Base+0x38dc>
  44aa08:	add	x1, x1, #0x1
  44aa0c:	str	x1, [x19, #24]
  44aa10:	mov	x0, x19
  44aa14:	bl	44b248 <_obstack_memory_used@@Base+0x42dc>
  44aa18:	mov	x3, x0
  44aa1c:	mov	x2, x26
  44aa20:	mov	x0, x19
  44aa24:	mov	w1, #0x4                   	// #4
  44aa28:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44aa2c:	mov	x26, x0
  44aa30:	b	44a910 <_obstack_memory_used@@Base+0x39a4>
  44aa34:	ldrb	w0, [x1, #1]
  44aa38:	cmp	w0, #0x69
  44aa3c:	b.ne	44a868 <_obstack_memory_used@@Base+0x38fc>  // b.any
  44aa40:	add	x1, x1, #0x2
  44aa44:	str	x1, [x19, #24]
  44aa48:	mov	x0, x19
  44aa4c:	mov	w1, #0x45                  	// #69
  44aa50:	bl	44a250 <_obstack_memory_used@@Base+0x32e4>
  44aa54:	mov	x3, x0
  44aa58:	b	44a648 <_obstack_memory_used@@Base+0x36dc>
  44aa5c:	add	x1, x1, #0x1
  44aa60:	mov	x3, #0x0                   	// #0
  44aa64:	str	x1, [x19, #24]
  44aa68:	b	44a648 <_obstack_memory_used@@Base+0x36dc>
  44aa6c:	nop
  44aa70:	ldr	x2, [x0, #24]
  44aa74:	ldrb	w1, [x2]
  44aa78:	cmp	w1, #0x4c
  44aa7c:	b.eq	44ac0c <_obstack_memory_used@@Base+0x3ca0>  // b.none
  44aa80:	cmp	w1, #0x54
  44aa84:	b.eq	44ac90 <_obstack_memory_used@@Base+0x3d24>  // b.none
  44aa88:	stp	x29, x30, [sp, #-48]!
  44aa8c:	cmp	w1, #0x73
  44aa90:	mov	x29, sp
  44aa94:	stp	x19, x20, [sp, #16]
  44aa98:	mov	x19, x0
  44aa9c:	b.eq	44ab54 <_obstack_memory_used@@Base+0x3be8>  // b.none
  44aaa0:	cmp	w1, #0x66
  44aaa4:	b.eq	44aae8 <_obstack_memory_used@@Base+0x3b7c>  // b.none
  44aaa8:	sub	w3, w1, #0x30
  44aaac:	and	w3, w3, #0xff
  44aab0:	cmp	w3, #0x9
  44aab4:	b.hi	44ac10 <_obstack_memory_used@@Base+0x3ca4>  // b.pmore
  44aab8:	mov	x0, x19
  44aabc:	bl	44d338 <_obstack_memory_used@@Base+0x63cc>
  44aac0:	mov	x20, x0
  44aac4:	cbz	x0, 44abf8 <_obstack_memory_used@@Base+0x3c8c>
  44aac8:	ldr	x0, [x19, #24]
  44aacc:	ldrb	w1, [x0]
  44aad0:	cmp	w1, #0x49
  44aad4:	b.eq	44ad68 <_obstack_memory_used@@Base+0x3dfc>  // b.none
  44aad8:	mov	x0, x20
  44aadc:	ldp	x19, x20, [sp, #16]
  44aae0:	ldp	x29, x30, [sp], #48
  44aae4:	ret
  44aae8:	ldrb	w1, [x2, #1]
  44aaec:	cmp	w1, #0x70
  44aaf0:	b.eq	44ab90 <_obstack_memory_used@@Base+0x3c24>  // b.none
  44aaf4:	mov	x0, x19
  44aaf8:	bl	44cc70 <_obstack_memory_used@@Base+0x5d04>
  44aafc:	mov	x20, x0
  44ab00:	cbz	x0, 44abf8 <_obstack_memory_used@@Base+0x3c8c>
  44ab04:	ldr	w0, [x0]
  44ab08:	cmp	w0, #0x32
  44ab0c:	b.eq	44ac94 <_obstack_memory_used@@Base+0x3d28>  // b.none
  44ab10:	cmp	w0, #0x34
  44ab14:	b.eq	44b0c0 <_obstack_memory_used@@Base+0x4154>  // b.none
  44ab18:	b.hi	44abf8 <_obstack_memory_used@@Base+0x3c8c>  // b.pmore
  44ab1c:	cmp	w0, #0x33
  44ab20:	b.ne	44abf8 <_obstack_memory_used@@Base+0x3c8c>  // b.any
  44ab24:	ldr	w0, [x20, #8]
  44ab28:	cmp	w0, #0x2
  44ab2c:	b.eq	44abf8 <_obstack_memory_used@@Base+0x3c8c>  // b.none
  44ab30:	b.gt	44abf8 <_obstack_memory_used@@Base+0x3c8c>
  44ab34:	cbnz	w0, 44ae5c <_obstack_memory_used@@Base+0x3ef0>
  44ab38:	mov	x2, x20
  44ab3c:	mov	x0, x19
  44ab40:	ldp	x19, x20, [sp, #16]
  44ab44:	mov	x3, #0x0                   	// #0
  44ab48:	ldp	x29, x30, [sp], #48
  44ab4c:	mov	w1, #0x36                  	// #54
  44ab50:	b	449568 <_obstack_memory_used@@Base+0x25fc>
  44ab54:	ldrb	w1, [x2, #1]
  44ab58:	cmp	w1, #0x72
  44ab5c:	b.eq	44ad94 <_obstack_memory_used@@Base+0x3e28>  // b.none
  44ab60:	cmp	w1, #0x70
  44ab64:	b.ne	44aaf4 <_obstack_memory_used@@Base+0x3b88>  // b.any
  44ab68:	add	x2, x2, #0x2
  44ab6c:	str	x2, [x0, #24]
  44ab70:	bl	44aa70 <_obstack_memory_used@@Base+0x3b04>
  44ab74:	mov	x2, x0
  44ab78:	mov	x0, x19
  44ab7c:	mov	x3, #0x0                   	// #0
  44ab80:	ldp	x19, x20, [sp, #16]
  44ab84:	mov	w1, #0x4b                  	// #75
  44ab88:	ldp	x29, x30, [sp], #48
  44ab8c:	b	449568 <_obstack_memory_used@@Base+0x25fc>
  44ab90:	add	x1, x2, #0x2
  44ab94:	str	x1, [x0, #24]
  44ab98:	ldrb	w1, [x2, #2]
  44ab9c:	cmp	w1, #0x54
  44aba0:	b.eq	44af20 <_obstack_memory_used@@Base+0x3fb4>  // b.none
  44aba4:	bl	449920 <_obstack_memory_used@@Base+0x29b4>
  44aba8:	mvn	x1, x0
  44abac:	add	w0, w0, #0x1
  44abb0:	tst	x1, #0x7fffffff
  44abb4:	b.eq	44abf8 <_obstack_memory_used@@Base+0x3c8c>  // b.none
  44abb8:	ldp	w1, w2, [x19, #40]
  44abbc:	cmp	w1, w2
  44abc0:	b.ge	44abf8 <_obstack_memory_used@@Base+0x3c8c>  // b.tcont
  44abc4:	mov	w3, #0x18                  	// #24
  44abc8:	add	w4, w1, #0x1
  44abcc:	ldr	x2, [x19, #32]
  44abd0:	smull	x1, w1, w3
  44abd4:	mov	w3, #0x6                   	// #6
  44abd8:	sxtw	x0, w0
  44abdc:	add	x20, x2, x1
  44abe0:	str	wzr, [x20, #4]
  44abe4:	str	w4, [x19, #40]
  44abe8:	str	w3, [x2, x1]
  44abec:	str	x0, [x20, #8]
  44abf0:	b	44aad8 <_obstack_memory_used@@Base+0x3b6c>
  44abf4:	ldp	x21, x22, [sp, #32]
  44abf8:	mov	x20, #0x0                   	// #0
  44abfc:	mov	x0, x20
  44ac00:	ldp	x19, x20, [sp, #16]
  44ac04:	ldp	x29, x30, [sp], #48
  44ac08:	ret
  44ac0c:	b	44d818 <_obstack_memory_used@@Base+0x68ac>
  44ac10:	cmp	w1, #0x6f
  44ac14:	b.ne	44ac30 <_obstack_memory_used@@Base+0x3cc4>  // b.any
  44ac18:	ldrb	w0, [x2, #1]
  44ac1c:	cmp	w0, #0x6e
  44ac20:	b.ne	44aaf4 <_obstack_memory_used@@Base+0x3b88>  // b.any
  44ac24:	add	x2, x2, #0x2
  44ac28:	str	x2, [x19, #24]
  44ac2c:	b	44aab8 <_obstack_memory_used@@Base+0x3b4c>
  44ac30:	cmp	w1, #0x69
  44ac34:	mov	w3, #0x74                  	// #116
  44ac38:	ccmp	w1, w3, #0x4, ne  // ne = any
  44ac3c:	b.ne	44aaf4 <_obstack_memory_used@@Base+0x3b88>  // b.any
  44ac40:	ldrb	w3, [x2, #1]
  44ac44:	cmp	w3, #0x6c
  44ac48:	b.ne	44aaf4 <_obstack_memory_used@@Base+0x3b88>  // b.any
  44ac4c:	add	x3, x2, #0x2
  44ac50:	str	x3, [x0, #24]
  44ac54:	cmp	w1, #0x74
  44ac58:	mov	x20, #0x0                   	// #0
  44ac5c:	b.eq	44ae4c <_obstack_memory_used@@Base+0x3ee0>  // b.none
  44ac60:	ldrb	w0, [x3, #1]
  44ac64:	cbz	w0, 44abf8 <_obstack_memory_used@@Base+0x3c8c>
  44ac68:	mov	x0, x19
  44ac6c:	mov	w1, #0x45                  	// #69
  44ac70:	bl	44a250 <_obstack_memory_used@@Base+0x32e4>
  44ac74:	mov	x3, x0
  44ac78:	mov	x2, x20
  44ac7c:	mov	x0, x19
  44ac80:	ldp	x19, x20, [sp, #16]
  44ac84:	mov	w1, #0x31                  	// #49
  44ac88:	ldp	x29, x30, [sp], #48
  44ac8c:	b	449568 <_obstack_memory_used@@Base+0x25fc>
  44ac90:	b	449998 <_obstack_memory_used@@Base+0x2a2c>
  44ac94:	ldr	x2, [x20, #8]
  44ac98:	stp	x21, x22, [sp, #32]
  44ac9c:	ldr	w0, [x19, #72]
  44aca0:	ldr	w1, [x2, #16]
  44aca4:	ldr	x21, [x2]
  44aca8:	sub	w1, w1, #0x2
  44acac:	add	w0, w0, w1
  44acb0:	str	w0, [x19, #72]
  44acb4:	ldrb	w1, [x21]
  44acb8:	cmp	w1, #0x73
  44acbc:	b.eq	44ade4 <_obstack_memory_used@@Base+0x3e78>  // b.none
  44acc0:	ldr	w22, [x2, #20]
  44acc4:	cmp	w22, #0x1
  44acc8:	b.eq	44ae94 <_obstack_memory_used@@Base+0x3f28>  // b.none
  44accc:	b.le	44ae88 <_obstack_memory_used@@Base+0x3f1c>
  44acd0:	cmp	w22, #0x2
  44acd4:	b.eq	44af4c <_obstack_memory_used@@Base+0x3fe0>  // b.none
  44acd8:	cmp	w22, #0x3
  44acdc:	b.ne	44abf4 <_obstack_memory_used@@Base+0x3c88>  // b.any
  44ace0:	cmp	w1, #0x71
  44ace4:	b.ne	44afdc <_obstack_memory_used@@Base+0x4070>  // b.any
  44ace8:	ldrb	w0, [x21, #1]
  44acec:	cmp	w0, #0x75
  44acf0:	b.ne	44afdc <_obstack_memory_used@@Base+0x4070>  // b.any
  44acf4:	ldrb	w0, [x21, #2]
  44acf8:	cbnz	w0, 44afdc <_obstack_memory_used@@Base+0x4070>
  44acfc:	mov	x0, x19
  44ad00:	bl	44aa70 <_obstack_memory_used@@Base+0x3b04>
  44ad04:	mov	x21, x0
  44ad08:	mov	x0, x19
  44ad0c:	bl	44aa70 <_obstack_memory_used@@Base+0x3b04>
  44ad10:	mov	x22, x0
  44ad14:	mov	x0, x19
  44ad18:	bl	44aa70 <_obstack_memory_used@@Base+0x3b04>
  44ad1c:	mov	x3, x0
  44ad20:	cbz	x0, 44abf4 <_obstack_memory_used@@Base+0x3c88>
  44ad24:	mov	x2, x22
  44ad28:	mov	x0, x19
  44ad2c:	mov	w1, #0x3c                  	// #60
  44ad30:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44ad34:	mov	x2, x21
  44ad38:	mov	x3, x0
  44ad3c:	mov	w1, #0x3b                  	// #59
  44ad40:	mov	x0, x19
  44ad44:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44ad48:	mov	x3, x0
  44ad4c:	mov	x2, x20
  44ad50:	mov	x0, x19
  44ad54:	ldp	x19, x20, [sp, #16]
  44ad58:	mov	w1, #0x3a                  	// #58
  44ad5c:	ldp	x21, x22, [sp, #32]
  44ad60:	ldp	x29, x30, [sp], #48
  44ad64:	b	449568 <_obstack_memory_used@@Base+0x25fc>
  44ad68:	add	x0, x0, #0x1
  44ad6c:	str	x0, [x19, #24]
  44ad70:	mov	x0, x19
  44ad74:	bl	44b248 <_obstack_memory_used@@Base+0x42dc>
  44ad78:	mov	x3, x0
  44ad7c:	mov	x2, x20
  44ad80:	mov	x0, x19
  44ad84:	ldp	x19, x20, [sp, #16]
  44ad88:	mov	w1, #0x4                   	// #4
  44ad8c:	ldp	x29, x30, [sp], #48
  44ad90:	b	449568 <_obstack_memory_used@@Base+0x25fc>
  44ad94:	add	x2, x2, #0x2
  44ad98:	stp	x21, x22, [sp, #32]
  44ad9c:	str	x2, [x0, #24]
  44ada0:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  44ada4:	mov	x20, x0
  44ada8:	mov	x0, x19
  44adac:	bl	44d338 <_obstack_memory_used@@Base+0x63cc>
  44adb0:	ldr	x1, [x19, #24]
  44adb4:	mov	x21, x0
  44adb8:	mov	x3, x21
  44adbc:	ldrb	w0, [x1]
  44adc0:	cmp	w0, #0x49
  44adc4:	b.eq	44ae20 <_obstack_memory_used@@Base+0x3eb4>  // b.none
  44adc8:	mov	x2, x20
  44adcc:	mov	x0, x19
  44add0:	ldp	x19, x20, [sp, #16]
  44add4:	mov	w1, #0x1                   	// #1
  44add8:	ldp	x21, x22, [sp, #32]
  44addc:	ldp	x29, x30, [sp], #48
  44ade0:	b	449568 <_obstack_memory_used@@Base+0x25fc>
  44ade4:	ldrb	w0, [x21, #1]
  44ade8:	cmp	w0, #0x74
  44adec:	b.ne	44acc0 <_obstack_memory_used@@Base+0x3d54>  // b.any
  44adf0:	ldrb	w0, [x21, #2]
  44adf4:	cbnz	w0, 44acc0 <_obstack_memory_used@@Base+0x3d54>
  44adf8:	mov	x0, x19
  44adfc:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  44ae00:	mov	x2, x20
  44ae04:	mov	x3, x0
  44ae08:	mov	x0, x19
  44ae0c:	mov	w1, #0x37                  	// #55
  44ae10:	ldp	x19, x20, [sp, #16]
  44ae14:	ldp	x21, x22, [sp, #32]
  44ae18:	ldp	x29, x30, [sp], #48
  44ae1c:	b	449568 <_obstack_memory_used@@Base+0x25fc>
  44ae20:	add	x1, x1, #0x1
  44ae24:	str	x1, [x19, #24]
  44ae28:	mov	x0, x19
  44ae2c:	bl	44b248 <_obstack_memory_used@@Base+0x42dc>
  44ae30:	mov	x3, x0
  44ae34:	mov	x2, x21
  44ae38:	mov	x0, x19
  44ae3c:	mov	w1, #0x4                   	// #4
  44ae40:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44ae44:	mov	x3, x0
  44ae48:	b	44adc8 <_obstack_memory_used@@Base+0x3e5c>
  44ae4c:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  44ae50:	mov	x20, x0
  44ae54:	ldr	x3, [x19, #24]
  44ae58:	b	44ac60 <_obstack_memory_used@@Base+0x3cf4>
  44ae5c:	cmp	w0, #0x1
  44ae60:	b.ne	44abf8 <_obstack_memory_used@@Base+0x3c8c>  // b.any
  44ae64:	mov	x0, x19
  44ae68:	bl	44aa70 <_obstack_memory_used@@Base+0x3b04>
  44ae6c:	mov	x3, x0
  44ae70:	mov	x2, x20
  44ae74:	mov	x0, x19
  44ae78:	ldp	x19, x20, [sp, #16]
  44ae7c:	mov	w1, #0x37                  	// #55
  44ae80:	ldp	x29, x30, [sp], #48
  44ae84:	b	449568 <_obstack_memory_used@@Base+0x25fc>
  44ae88:	cbnz	w22, 44abf4 <_obstack_memory_used@@Base+0x3c88>
  44ae8c:	ldp	x21, x22, [sp, #32]
  44ae90:	b	44ab38 <_obstack_memory_used@@Base+0x3bcc>
  44ae94:	ldrb	w0, [x21]
  44ae98:	mov	w2, #0x6d                  	// #109
  44ae9c:	cmp	w0, #0x70
  44aea0:	ccmp	w0, w2, #0x4, ne  // ne = any
  44aea4:	b.ne	44aeb4 <_obstack_memory_used@@Base+0x3f48>  // b.any
  44aea8:	ldrb	w2, [x21, #1]
  44aeac:	cmp	w2, w0
  44aeb0:	b.eq	44aeec <_obstack_memory_used@@Base+0x3f80>  // b.none
  44aeb4:	mov	w22, #0x0                   	// #0
  44aeb8:	cmp	w1, #0x73
  44aebc:	b.ne	44af10 <_obstack_memory_used@@Base+0x3fa4>  // b.any
  44aec0:	ldrb	w0, [x21, #1]
  44aec4:	cmp	w0, #0x50
  44aec8:	b.ne	44af10 <_obstack_memory_used@@Base+0x3fa4>  // b.any
  44aecc:	ldrb	w0, [x21, #2]
  44aed0:	cbnz	w0, 44af10 <_obstack_memory_used@@Base+0x3fa4>
  44aed4:	mov	x0, x19
  44aed8:	bl	44b248 <_obstack_memory_used@@Base+0x42dc>
  44aedc:	mov	x3, x0
  44aee0:	cbnz	w22, 44af30 <_obstack_memory_used@@Base+0x3fc4>
  44aee4:	ldp	x21, x22, [sp, #32]
  44aee8:	b	44ae70 <_obstack_memory_used@@Base+0x3f04>
  44aeec:	ldr	x0, [x19, #24]
  44aef0:	ldrb	w2, [x0]
  44aef4:	cmp	w2, #0x5f
  44aef8:	b.ne	44aeb8 <_obstack_memory_used@@Base+0x3f4c>  // b.any
  44aefc:	add	x0, x0, #0x1
  44af00:	str	x0, [x19, #24]
  44af04:	mov	w22, #0x0                   	// #0
  44af08:	ldrb	w1, [x21]
  44af0c:	b	44aeb8 <_obstack_memory_used@@Base+0x3f4c>
  44af10:	mov	x0, x19
  44af14:	bl	44aa70 <_obstack_memory_used@@Base+0x3b04>
  44af18:	mov	x3, x0
  44af1c:	b	44aee0 <_obstack_memory_used@@Base+0x3f74>
  44af20:	add	x2, x2, #0x3
  44af24:	mov	w0, #0x0                   	// #0
  44af28:	str	x2, [x19, #24]
  44af2c:	b	44abb8 <_obstack_memory_used@@Base+0x3c4c>
  44af30:	mov	x2, x3
  44af34:	mov	x0, x19
  44af38:	mov	w1, #0x39                  	// #57
  44af3c:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44af40:	mov	x3, x0
  44af44:	ldp	x21, x22, [sp, #32]
  44af48:	b	44ae70 <_obstack_memory_used@@Base+0x3f04>
  44af4c:	ldr	x0, [x20, #8]
  44af50:	ldr	x0, [x0]
  44af54:	ldrb	w1, [x0, #1]
  44af58:	cmp	w1, #0x63
  44af5c:	b.eq	44b104 <_obstack_memory_used@@Base+0x4198>  // b.none
  44af60:	ldrb	w0, [x21]
  44af64:	cmp	w0, #0x66
  44af68:	b.eq	44b134 <_obstack_memory_used@@Base+0x41c8>  // b.none
  44af6c:	mov	x0, x19
  44af70:	bl	44aa70 <_obstack_memory_used@@Base+0x3b04>
  44af74:	mov	x22, x0
  44af78:	ldrb	w1, [x21]
  44af7c:	cmp	w1, #0x63
  44af80:	b.ne	44b05c <_obstack_memory_used@@Base+0x40f0>  // b.any
  44af84:	ldrb	w0, [x21, #1]
  44af88:	cmp	w0, #0x6c
  44af8c:	b.ne	44b05c <_obstack_memory_used@@Base+0x40f0>  // b.any
  44af90:	ldrb	w0, [x21, #2]
  44af94:	cbnz	w0, 44b05c <_obstack_memory_used@@Base+0x40f0>
  44af98:	mov	x0, x19
  44af9c:	mov	w1, #0x45                  	// #69
  44afa0:	bl	44a250 <_obstack_memory_used@@Base+0x32e4>
  44afa4:	mov	x21, x0
  44afa8:	mov	x3, x21
  44afac:	mov	x2, x22
  44afb0:	mov	x0, x19
  44afb4:	mov	w1, #0x39                  	// #57
  44afb8:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44afbc:	mov	x3, x0
  44afc0:	mov	x2, x20
  44afc4:	mov	x0, x19
  44afc8:	ldp	x19, x20, [sp, #16]
  44afcc:	mov	w1, #0x38                  	// #56
  44afd0:	ldp	x21, x22, [sp, #32]
  44afd4:	ldp	x29, x30, [sp], #48
  44afd8:	b	449568 <_obstack_memory_used@@Base+0x25fc>
  44afdc:	ldrb	w0, [x21]
  44afe0:	cmp	w0, #0x66
  44afe4:	b.eq	44b15c <_obstack_memory_used@@Base+0x41f0>  // b.none
  44afe8:	cmp	w0, #0x6e
  44afec:	b.ne	44abf4 <_obstack_memory_used@@Base+0x3c88>  // b.any
  44aff0:	ldrb	w0, [x21, #1]
  44aff4:	mov	w1, #0x61                  	// #97
  44aff8:	cmp	w0, #0x77
  44affc:	ccmp	w0, w1, #0x4, ne  // ne = any
  44b000:	b.ne	44abf4 <_obstack_memory_used@@Base+0x3c88>  // b.any
  44b004:	mov	w1, #0x5f                  	// #95
  44b008:	mov	x0, x19
  44b00c:	bl	44a250 <_obstack_memory_used@@Base+0x32e4>
  44b010:	mov	x21, x0
  44b014:	mov	x0, x19
  44b018:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  44b01c:	ldr	x1, [x19, #24]
  44b020:	mov	x22, x0
  44b024:	ldrb	w0, [x1]
  44b028:	cmp	w0, #0x45
  44b02c:	b.eq	44b190 <_obstack_memory_used@@Base+0x4224>  // b.none
  44b030:	cmp	w0, #0x70
  44b034:	b.eq	44b168 <_obstack_memory_used@@Base+0x41fc>  // b.none
  44b038:	cmp	w0, #0x69
  44b03c:	b.ne	44abf4 <_obstack_memory_used@@Base+0x3c88>  // b.any
  44b040:	ldrb	w0, [x1, #1]
  44b044:	cmp	w0, #0x6c
  44b048:	b.ne	44abf4 <_obstack_memory_used@@Base+0x3c88>  // b.any
  44b04c:	mov	x0, x19
  44b050:	bl	44aa70 <_obstack_memory_used@@Base+0x3b04>
  44b054:	mov	x3, x0
  44b058:	b	44ad24 <_obstack_memory_used@@Base+0x3db8>
  44b05c:	cmp	w1, #0x64
  44b060:	b.ne	44b0ec <_obstack_memory_used@@Base+0x4180>  // b.any
  44b064:	ldrb	w0, [x21, #1]
  44b068:	cmp	w0, #0x74
  44b06c:	b.ne	44b0ec <_obstack_memory_used@@Base+0x4180>  // b.any
  44b070:	ldrb	w0, [x21, #2]
  44b074:	cbnz	w0, 44b0ec <_obstack_memory_used@@Base+0x4180>
  44b078:	mov	x0, x19
  44b07c:	bl	44d338 <_obstack_memory_used@@Base+0x63cc>
  44b080:	ldr	x1, [x19, #24]
  44b084:	mov	x21, x0
  44b088:	ldrb	w0, [x1]
  44b08c:	cmp	w0, #0x49
  44b090:	b.ne	44afa8 <_obstack_memory_used@@Base+0x403c>  // b.any
  44b094:	add	x1, x1, #0x1
  44b098:	str	x1, [x19, #24]
  44b09c:	mov	x0, x19
  44b0a0:	bl	44b248 <_obstack_memory_used@@Base+0x42dc>
  44b0a4:	mov	x3, x0
  44b0a8:	mov	x2, x21
  44b0ac:	mov	x0, x19
  44b0b0:	mov	w1, #0x4                   	// #4
  44b0b4:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44b0b8:	mov	x21, x0
  44b0bc:	b	44afa8 <_obstack_memory_used@@Base+0x403c>
  44b0c0:	ldr	x0, [x19, #24]
  44b0c4:	ldrb	w1, [x0]
  44b0c8:	cmp	w1, #0x5f
  44b0cc:	b.ne	44ae64 <_obstack_memory_used@@Base+0x3ef8>  // b.any
  44b0d0:	add	x0, x0, #0x1
  44b0d4:	str	x0, [x19, #24]
  44b0d8:	mov	w1, #0x45                  	// #69
  44b0dc:	mov	x0, x19
  44b0e0:	bl	44a250 <_obstack_memory_used@@Base+0x32e4>
  44b0e4:	mov	x3, x0
  44b0e8:	b	44ae70 <_obstack_memory_used@@Base+0x3f04>
  44b0ec:	cmp	w1, #0x70
  44b0f0:	b.eq	44b144 <_obstack_memory_used@@Base+0x41d8>  // b.none
  44b0f4:	mov	x0, x19
  44b0f8:	bl	44aa70 <_obstack_memory_used@@Base+0x3b04>
  44b0fc:	mov	x21, x0
  44b100:	b	44afa8 <_obstack_memory_used@@Base+0x403c>
  44b104:	ldrb	w0, [x0]
  44b108:	sub	w1, w0, #0x63
  44b10c:	sub	w0, w0, #0x72
  44b110:	and	w1, w1, #0xff
  44b114:	and	w0, w0, #0xff
  44b118:	cmp	w1, #0x1
  44b11c:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  44b120:	b.hi	44af60 <_obstack_memory_used@@Base+0x3ff4>  // b.pmore
  44b124:	mov	x0, x19
  44b128:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  44b12c:	mov	x22, x0
  44b130:	b	44af78 <_obstack_memory_used@@Base+0x400c>
  44b134:	mov	x0, x19
  44b138:	bl	44cc70 <_obstack_memory_used@@Base+0x5d04>
  44b13c:	mov	x22, x0
  44b140:	b	44af78 <_obstack_memory_used@@Base+0x400c>
  44b144:	ldrb	w0, [x21, #1]
  44b148:	cmp	w0, #0x74
  44b14c:	b.ne	44b0f4 <_obstack_memory_used@@Base+0x4188>  // b.any
  44b150:	ldrb	w0, [x21, #2]
  44b154:	cbz	w0, 44b078 <_obstack_memory_used@@Base+0x410c>
  44b158:	b	44b0f4 <_obstack_memory_used@@Base+0x4188>
  44b15c:	mov	x0, x19
  44b160:	bl	44cc70 <_obstack_memory_used@@Base+0x5d04>
  44b164:	b	44ad04 <_obstack_memory_used@@Base+0x3d98>
  44b168:	ldrb	w0, [x1, #1]
  44b16c:	cmp	w0, #0x69
  44b170:	b.ne	44abf4 <_obstack_memory_used@@Base+0x3c88>  // b.any
  44b174:	add	x1, x1, #0x2
  44b178:	str	x1, [x19, #24]
  44b17c:	mov	x0, x19
  44b180:	mov	w1, #0x45                  	// #69
  44b184:	bl	44a250 <_obstack_memory_used@@Base+0x32e4>
  44b188:	mov	x3, x0
  44b18c:	b	44ad24 <_obstack_memory_used@@Base+0x3db8>
  44b190:	add	x1, x1, #0x1
  44b194:	mov	x3, #0x0                   	// #0
  44b198:	str	x1, [x19, #24]
  44b19c:	b	44ad24 <_obstack_memory_used@@Base+0x3db8>
  44b1a0:	ldr	x2, [x0, #24]
  44b1a4:	ldrb	w1, [x2]
  44b1a8:	cmp	w1, #0x4c
  44b1ac:	b.eq	44b238 <_obstack_memory_used@@Base+0x42cc>  // b.none
  44b1b0:	stp	x29, x30, [sp, #-32]!
  44b1b4:	mov	x29, sp
  44b1b8:	stp	x19, x20, [sp, #16]
  44b1bc:	mov	x19, x0
  44b1c0:	b.hi	44b1e0 <_obstack_memory_used@@Base+0x4274>  // b.pmore
  44b1c4:	sub	w1, w1, #0x49
  44b1c8:	and	w1, w1, #0xff
  44b1cc:	cmp	w1, #0x1
  44b1d0:	b.hi	44b228 <_obstack_memory_used@@Base+0x42bc>  // b.pmore
  44b1d4:	ldp	x19, x20, [sp, #16]
  44b1d8:	ldp	x29, x30, [sp], #32
  44b1dc:	b	44b310 <_obstack_memory_used@@Base+0x43a4>
  44b1e0:	cmp	w1, #0x58
  44b1e4:	b.ne	44b228 <_obstack_memory_used@@Base+0x42bc>  // b.any
  44b1e8:	add	x2, x2, #0x1
  44b1ec:	ldr	w20, [x0, #76]
  44b1f0:	mov	w1, #0x1                   	// #1
  44b1f4:	str	x2, [x0, #24]
  44b1f8:	str	w1, [x0, #76]
  44b1fc:	bl	44aa70 <_obstack_memory_used@@Base+0x3b04>
  44b200:	str	w20, [x19, #76]
  44b204:	ldr	x1, [x19, #24]
  44b208:	ldrb	w2, [x1]
  44b20c:	cmp	w2, #0x45
  44b210:	b.ne	44b23c <_obstack_memory_used@@Base+0x42d0>  // b.any
  44b214:	add	x1, x1, #0x1
  44b218:	str	x1, [x19, #24]
  44b21c:	ldp	x19, x20, [sp, #16]
  44b220:	ldp	x29, x30, [sp], #32
  44b224:	ret
  44b228:	mov	x0, x19
  44b22c:	ldp	x19, x20, [sp, #16]
  44b230:	ldp	x29, x30, [sp], #32
  44b234:	b	44c088 <_obstack_memory_used@@Base+0x511c>
  44b238:	b	44d818 <_obstack_memory_used@@Base+0x68ac>
  44b23c:	mov	x0, #0x0                   	// #0
  44b240:	b	44b21c <_obstack_memory_used@@Base+0x42b0>
  44b244:	nop
  44b248:	stp	x29, x30, [sp, #-64]!
  44b24c:	mov	x29, sp
  44b250:	ldr	x1, [x0, #24]
  44b254:	stp	x19, x20, [sp, #16]
  44b258:	mov	x19, x0
  44b25c:	str	x21, [sp, #32]
  44b260:	ldr	x21, [x0, #64]
  44b264:	ldrb	w2, [x1]
  44b268:	cmp	w2, #0x45
  44b26c:	b.eq	44b2ec <_obstack_memory_used@@Base+0x4380>  // b.none
  44b270:	add	x20, sp, #0x38
  44b274:	str	xzr, [sp, #56]
  44b278:	b	44b29c <_obstack_memory_used@@Base+0x4330>
  44b27c:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44b280:	str	x0, [x20]
  44b284:	add	x20, x0, #0x10
  44b288:	cbz	x0, 44b2b8 <_obstack_memory_used@@Base+0x434c>
  44b28c:	ldr	x1, [x19, #24]
  44b290:	ldrb	w0, [x1]
  44b294:	cmp	w0, #0x45
  44b298:	b.eq	44b2cc <_obstack_memory_used@@Base+0x4360>  // b.none
  44b29c:	mov	x0, x19
  44b2a0:	bl	44b1a0 <_obstack_memory_used@@Base+0x4234>
  44b2a4:	mov	x3, #0x0                   	// #0
  44b2a8:	mov	x2, x0
  44b2ac:	mov	w1, #0x2f                  	// #47
  44b2b0:	mov	x0, x19
  44b2b4:	cbnz	x2, 44b27c <_obstack_memory_used@@Base+0x4310>
  44b2b8:	mov	x0, #0x0                   	// #0
  44b2bc:	ldp	x19, x20, [sp, #16]
  44b2c0:	ldr	x21, [sp, #32]
  44b2c4:	ldp	x29, x30, [sp], #64
  44b2c8:	ret
  44b2cc:	add	x1, x1, #0x1
  44b2d0:	str	x1, [x19, #24]
  44b2d4:	str	x21, [x19, #64]
  44b2d8:	ldp	x19, x20, [sp, #16]
  44b2dc:	ldr	x21, [sp, #32]
  44b2e0:	ldr	x0, [sp, #56]
  44b2e4:	ldp	x29, x30, [sp], #64
  44b2e8:	ret
  44b2ec:	add	x1, x1, #0x1
  44b2f0:	mov	x3, #0x0                   	// #0
  44b2f4:	ldr	x21, [sp, #32]
  44b2f8:	str	x1, [x0, #24]
  44b2fc:	ldp	x19, x20, [sp, #16]
  44b300:	mov	x2, #0x0                   	// #0
  44b304:	ldp	x29, x30, [sp], #64
  44b308:	mov	w1, #0x2f                  	// #47
  44b30c:	b	449568 <_obstack_memory_used@@Base+0x25fc>
  44b310:	ldr	x3, [x0, #24]
  44b314:	ldrb	w1, [x3]
  44b318:	sub	w1, w1, #0x49
  44b31c:	and	w1, w1, #0xff
  44b320:	cmp	w1, #0x1
  44b324:	b.hi	44b334 <_obstack_memory_used@@Base+0x43c8>  // b.pmore
  44b328:	add	x3, x3, #0x1
  44b32c:	str	x3, [x0, #24]
  44b330:	b	44b248 <_obstack_memory_used@@Base+0x42dc>
  44b334:	mov	x0, #0x0                   	// #0
  44b338:	ret
  44b33c:	nop
  44b340:	stp	x29, x30, [sp, #-48]!
  44b344:	mov	w3, #0x54                  	// #84
  44b348:	mov	x29, sp
  44b34c:	ldr	x2, [x0, #24]
  44b350:	stp	x19, x20, [sp, #16]
  44b354:	mov	x19, x0
  44b358:	str	x21, [sp, #32]
  44b35c:	mov	w21, w1
  44b360:	ldrb	w1, [x2]
  44b364:	cmp	w1, #0x47
  44b368:	ccmp	w1, w3, #0x4, ne  // ne = any
  44b36c:	b.ne	44b3f8 <_obstack_memory_used@@Base+0x448c>  // b.any
  44b370:	ldr	w3, [x0, #72]
  44b374:	add	w1, w3, #0x14
  44b378:	str	w1, [x0, #72]
  44b37c:	ldrb	w1, [x2]
  44b380:	cmp	w1, #0x54
  44b384:	b.eq	44b51c <_obstack_memory_used@@Base+0x45b0>  // b.none
  44b388:	cmp	w1, #0x47
  44b38c:	b.ne	44b504 <_obstack_memory_used@@Base+0x4598>  // b.any
  44b390:	add	x1, x2, #0x1
  44b394:	str	x1, [x0, #24]
  44b398:	ldrb	w1, [x2, #1]
  44b39c:	cbz	w1, 44b504 <_obstack_memory_used@@Base+0x4598>
  44b3a0:	add	x1, x2, #0x2
  44b3a4:	str	x1, [x0, #24]
  44b3a8:	ldrb	w1, [x2, #1]
  44b3ac:	cmp	w1, #0x54
  44b3b0:	b.eq	44b8b8 <_obstack_memory_used@@Base+0x494c>  // b.none
  44b3b4:	b.hi	44b584 <_obstack_memory_used@@Base+0x4618>  // b.pmore
  44b3b8:	cmp	w1, #0x41
  44b3bc:	b.eq	44b900 <_obstack_memory_used@@Base+0x4994>  // b.none
  44b3c0:	cmp	w1, #0x52
  44b3c4:	b.ne	44b504 <_obstack_memory_used@@Base+0x4598>  // b.any
  44b3c8:	bl	44bb00 <_obstack_memory_used@@Base+0x4b94>
  44b3cc:	mov	x11, x0
  44b3d0:	mov	x0, x19
  44b3d4:	bl	4498b8 <_obstack_memory_used@@Base+0x294c>
  44b3d8:	mov	x3, x0
  44b3dc:	mov	x0, x19
  44b3e0:	mov	x2, x11
  44b3e4:	ldp	x19, x20, [sp, #16]
  44b3e8:	mov	w1, #0x16                  	// #22
  44b3ec:	ldr	x21, [sp, #32]
  44b3f0:	ldp	x29, x30, [sp], #48
  44b3f4:	b	449568 <_obstack_memory_used@@Base+0x25fc>
  44b3f8:	bl	44bb00 <_obstack_memory_used@@Base+0x4b94>
  44b3fc:	mov	x20, x0
  44b400:	cbz	x0, 44b504 <_obstack_memory_used@@Base+0x4598>
  44b404:	cbz	w21, 44b454 <_obstack_memory_used@@Base+0x44e8>
  44b408:	ldr	w0, [x19, #16]
  44b40c:	tbnz	w0, #0, 44b454 <_obstack_memory_used@@Base+0x44e8>
  44b410:	mov	x1, #0x1f                  	// #31
  44b414:	mov	x2, #0x1                   	// #1
  44b418:	movk	x1, #0x1a, lsl #48
  44b41c:	ldr	w3, [x20]
  44b420:	sub	w0, w3, #0x1c
  44b424:	cmp	w0, #0x34
  44b428:	b.hi	44b438 <_obstack_memory_used@@Base+0x44cc>  // b.pmore
  44b42c:	lsl	x0, x2, x0
  44b430:	tst	x0, x1
  44b434:	b.ne	44b76c <_obstack_memory_used@@Base+0x4800>  // b.any
  44b438:	cmp	w3, #0x2
  44b43c:	b.eq	44b774 <_obstack_memory_used@@Base+0x4808>  // b.none
  44b440:	mov	x0, x20
  44b444:	ldp	x19, x20, [sp, #16]
  44b448:	ldr	x21, [sp, #32]
  44b44c:	ldp	x29, x30, [sp], #48
  44b450:	ret
  44b454:	ldr	x0, [x19, #24]
  44b458:	ldrb	w0, [x0]
  44b45c:	cmp	w0, #0x45
  44b460:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  44b464:	b.eq	44b440 <_obstack_memory_used@@Base+0x44d4>  // b.none
  44b468:	mov	x1, #0x1f                  	// #31
  44b46c:	mov	x4, x20
  44b470:	mov	x2, #0x1                   	// #1
  44b474:	movk	x1, #0x1a, lsl #48
  44b478:	ldr	w3, [x4]
  44b47c:	cmp	w3, #0x4
  44b480:	b.eq	44b7e8 <_obstack_memory_used@@Base+0x487c>  // b.none
  44b484:	sub	w0, w3, #0x1c
  44b488:	b.hi	44b678 <_obstack_memory_used@@Base+0x470c>  // b.pmore
  44b48c:	cmp	w3, #0x2
  44b490:	b.ne	44b49c <_obstack_memory_used@@Base+0x4530>  // b.any
  44b494:	ldr	x4, [x4, #16]
  44b498:	cbnz	x4, 44b478 <_obstack_memory_used@@Base+0x450c>
  44b49c:	mov	w1, #0x0                   	// #0
  44b4a0:	mov	x0, x19
  44b4a4:	bl	44d1c8 <_obstack_memory_used@@Base+0x625c>
  44b4a8:	mov	x3, x0
  44b4ac:	cbz	x0, 44b504 <_obstack_memory_used@@Base+0x4598>
  44b4b0:	cbnz	w21, 44b4d0 <_obstack_memory_used@@Base+0x4564>
  44b4b4:	ldr	w0, [x20]
  44b4b8:	cmp	w0, #0x2
  44b4bc:	b.ne	44b4d0 <_obstack_memory_used@@Base+0x4564>  // b.any
  44b4c0:	ldr	w0, [x3]
  44b4c4:	cmp	w0, #0x29
  44b4c8:	b.ne	44b4d0 <_obstack_memory_used@@Base+0x4564>  // b.any
  44b4cc:	str	xzr, [x3, #8]
  44b4d0:	mov	x2, x20
  44b4d4:	mov	x0, x19
  44b4d8:	ldp	x19, x20, [sp, #16]
  44b4dc:	mov	w1, #0x3                   	// #3
  44b4e0:	ldr	x21, [sp, #32]
  44b4e4:	ldp	x29, x30, [sp], #48
  44b4e8:	b	449568 <_obstack_memory_used@@Base+0x25fc>
  44b4ec:	cmp	w1, #0x68
  44b4f0:	b.eq	44ba94 <_obstack_memory_used@@Base+0x4b28>  // b.none
  44b4f4:	cmp	w1, #0x76
  44b4f8:	b.ne	44b504 <_obstack_memory_used@@Base+0x4598>  // b.any
  44b4fc:	bl	449e80 <_obstack_memory_used@@Base+0x2f14>
  44b500:	cbnz	w0, 44b7bc <_obstack_memory_used@@Base+0x4850>
  44b504:	mov	x20, #0x0                   	// #0
  44b508:	mov	x0, x20
  44b50c:	ldp	x19, x20, [sp, #16]
  44b510:	ldr	x21, [sp, #32]
  44b514:	ldp	x29, x30, [sp], #48
  44b518:	ret
  44b51c:	add	x1, x2, #0x1
  44b520:	str	x1, [x0, #24]
  44b524:	ldrb	w1, [x2, #1]
  44b528:	cbz	w1, 44b504 <_obstack_memory_used@@Base+0x4598>
  44b52c:	add	x1, x2, #0x2
  44b530:	str	x1, [x0, #24]
  44b534:	ldrb	w1, [x2, #1]
  44b538:	cmp	w1, #0x53
  44b53c:	b.eq	44ba04 <_obstack_memory_used@@Base+0x4a98>  // b.none
  44b540:	b.hi	44b6f8 <_obstack_memory_used@@Base+0x478c>  // b.pmore
  44b544:	cmp	w1, #0x48
  44b548:	b.eq	44b9e0 <_obstack_memory_used@@Base+0x4a74>  // b.none
  44b54c:	b.hi	44b6c4 <_obstack_memory_used@@Base+0x4758>  // b.pmore
  44b550:	cmp	w1, #0x43
  44b554:	b.eq	44b980 <_obstack_memory_used@@Base+0x4a14>  // b.none
  44b558:	cmp	w1, #0x46
  44b55c:	b.ne	44b698 <_obstack_memory_used@@Base+0x472c>  // b.any
  44b560:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  44b564:	mov	x2, x0
  44b568:	mov	x0, x19
  44b56c:	mov	x3, #0x0                   	// #0
  44b570:	ldp	x19, x20, [sp, #16]
  44b574:	mov	w1, #0xe                   	// #14
  44b578:	ldr	x21, [sp, #32]
  44b57c:	ldp	x29, x30, [sp], #48
  44b580:	b	449568 <_obstack_memory_used@@Base+0x25fc>
  44b584:	cmp	w1, #0x56
  44b588:	b.eq	44b894 <_obstack_memory_used@@Base+0x4928>  // b.none
  44b58c:	cmp	w1, #0x72
  44b590:	b.ne	44b504 <_obstack_memory_used@@Base+0x4598>  // b.any
  44b594:	add	x0, x0, #0x18
  44b598:	bl	4497e8 <_obstack_memory_used@@Base+0x287c>
  44b59c:	cmp	w0, #0x1
  44b5a0:	b.le	44b504 <_obstack_memory_used@@Base+0x4598>
  44b5a4:	ldr	x1, [x19, #24]
  44b5a8:	ldrb	w2, [x1]
  44b5ac:	cbz	w2, 44b504 <_obstack_memory_used@@Base+0x4598>
  44b5b0:	add	x8, x1, #0x1
  44b5b4:	str	x8, [x19, #24]
  44b5b8:	ldrb	w1, [x1]
  44b5bc:	cmp	w1, #0x5f
  44b5c0:	b.ne	44b504 <_obstack_memory_used@@Base+0x4598>  // b.any
  44b5c4:	sub	w9, w0, #0x1
  44b5c8:	mov	x2, #0x0                   	// #0
  44b5cc:	mov	w11, #0x18                  	// #24
  44b5d0:	mov	w10, #0x41                  	// #65
  44b5d4:	ldrb	w0, [x8]
  44b5d8:	cbz	w0, 44b504 <_obstack_memory_used@@Base+0x4598>
  44b5dc:	cmp	w0, #0x24
  44b5e0:	b.ne	44b82c <_obstack_memory_used@@Base+0x48c0>  // b.any
  44b5e4:	ldrb	w0, [x8, #1]
  44b5e8:	cmp	w0, #0x53
  44b5ec:	b.eq	44b938 <_obstack_memory_used@@Base+0x49cc>  // b.none
  44b5f0:	cmp	w0, #0x5f
  44b5f4:	b.eq	44b930 <_obstack_memory_used@@Base+0x49c4>  // b.none
  44b5f8:	cmp	w0, #0x24
  44b5fc:	b.ne	44b504 <_obstack_memory_used@@Base+0x4598>  // b.any
  44b600:	ldp	w1, w3, [x19, #40]
  44b604:	ldr	x8, [x19, #24]
  44b608:	cmp	w1, w3
  44b60c:	add	x8, x8, #0x2
  44b610:	b.ge	44bac8 <_obstack_memory_used@@Base+0x4b5c>  // b.tcont
  44b614:	ldr	x5, [x19, #32]
  44b618:	smull	x4, w1, w11
  44b61c:	add	w1, w1, #0x1
  44b620:	sub	w9, w9, #0x2
  44b624:	add	x3, x5, x4
  44b628:	str	wzr, [x3, #4]
  44b62c:	str	w1, [x19, #40]
  44b630:	str	w10, [x5, x4]
  44b634:	str	w0, [x3, #8]
  44b638:	str	x8, [x19, #24]
  44b63c:	cbz	x2, 44b928 <_obstack_memory_used@@Base+0x49bc>
  44b640:	mov	x0, x19
  44b644:	mov	w1, #0x40                  	// #64
  44b648:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44b64c:	mov	x2, x0
  44b650:	cbz	x0, 44b504 <_obstack_memory_used@@Base+0x4598>
  44b654:	cmp	w9, #0x0
  44b658:	b.gt	44b5d4 <_obstack_memory_used@@Base+0x4668>
  44b65c:	mov	x0, x19
  44b660:	mov	x3, #0x0                   	// #0
  44b664:	ldp	x19, x20, [sp, #16]
  44b668:	mov	w1, #0x3f                  	// #63
  44b66c:	ldr	x21, [sp, #32]
  44b670:	ldp	x29, x30, [sp], #48
  44b674:	b	449568 <_obstack_memory_used@@Base+0x25fc>
  44b678:	cmp	w0, #0x34
  44b67c:	b.hi	44b49c <_obstack_memory_used@@Base+0x4530>  // b.pmore
  44b680:	lsl	x0, x2, x0
  44b684:	tst	x0, x1
  44b688:	b.eq	44b49c <_obstack_memory_used@@Base+0x4530>  // b.none
  44b68c:	ldr	x4, [x4, #8]
  44b690:	cbnz	x4, 44b478 <_obstack_memory_used@@Base+0x450c>
  44b694:	b	44b49c <_obstack_memory_used@@Base+0x4530>
  44b698:	cmp	w1, #0x41
  44b69c:	b.ne	44b504 <_obstack_memory_used@@Base+0x4598>  // b.any
  44b6a0:	bl	44b1a0 <_obstack_memory_used@@Base+0x4234>
  44b6a4:	mov	x2, x0
  44b6a8:	mov	x0, x19
  44b6ac:	mov	x3, #0x0                   	// #0
  44b6b0:	ldp	x19, x20, [sp, #16]
  44b6b4:	mov	w1, #0x30                  	// #48
  44b6b8:	ldr	x21, [sp, #32]
  44b6bc:	ldp	x29, x30, [sp], #48
  44b6c0:	b	449568 <_obstack_memory_used@@Base+0x25fc>
  44b6c4:	cmp	w1, #0x49
  44b6c8:	b.eq	44ba70 <_obstack_memory_used@@Base+0x4b04>  // b.none
  44b6cc:	cmp	w1, #0x4a
  44b6d0:	b.ne	44b504 <_obstack_memory_used@@Base+0x4598>  // b.any
  44b6d4:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  44b6d8:	mov	x2, x0
  44b6dc:	mov	x0, x19
  44b6e0:	mov	x3, #0x0                   	// #0
  44b6e4:	ldp	x19, x20, [sp, #16]
  44b6e8:	mov	w1, #0x12                  	// #18
  44b6ec:	ldr	x21, [sp, #32]
  44b6f0:	ldp	x29, x30, [sp], #48
  44b6f4:	b	449568 <_obstack_memory_used@@Base+0x25fc>
  44b6f8:	cmp	w1, #0x63
  44b6fc:	b.eq	44ba28 <_obstack_memory_used@@Base+0x4abc>  // b.none
  44b700:	b.hi	44b4ec <_obstack_memory_used@@Base+0x4580>  // b.pmore
  44b704:	cmp	w1, #0x56
  44b708:	b.eq	44b954 <_obstack_memory_used@@Base+0x49e8>  // b.none
  44b70c:	cmp	w1, #0x57
  44b710:	b.ne	44b738 <_obstack_memory_used@@Base+0x47cc>  // b.any
  44b714:	bl	44bb00 <_obstack_memory_used@@Base+0x4b94>
  44b718:	mov	x2, x0
  44b71c:	mov	x0, x19
  44b720:	mov	x3, #0x0                   	// #0
  44b724:	ldp	x19, x20, [sp, #16]
  44b728:	mov	w1, #0x15                  	// #21
  44b72c:	ldr	x21, [sp, #32]
  44b730:	ldp	x29, x30, [sp], #48
  44b734:	b	449568 <_obstack_memory_used@@Base+0x25fc>
  44b738:	cmp	w1, #0x54
  44b73c:	b.ne	44b504 <_obstack_memory_used@@Base+0x4598>  // b.any
  44b740:	add	w3, w3, #0xa
  44b744:	str	w3, [x0, #72]
  44b748:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  44b74c:	mov	x2, x0
  44b750:	mov	x0, x19
  44b754:	mov	x3, #0x0                   	// #0
  44b758:	ldp	x19, x20, [sp, #16]
  44b75c:	mov	w1, #0xa                   	// #10
  44b760:	ldr	x21, [sp, #32]
  44b764:	ldp	x29, x30, [sp], #48
  44b768:	b	449568 <_obstack_memory_used@@Base+0x25fc>
  44b76c:	ldr	x20, [x20, #8]
  44b770:	b	44b41c <_obstack_memory_used@@Base+0x44b0>
  44b774:	ldr	x3, [x20, #16]
  44b778:	mov	x1, #0x1f                  	// #31
  44b77c:	mov	x2, #0x1                   	// #1
  44b780:	movk	x1, #0x1a, lsl #48
  44b784:	ldr	w0, [x3]
  44b788:	sub	w0, w0, #0x1c
  44b78c:	cmp	w0, #0x34
  44b790:	b.hi	44b440 <_obstack_memory_used@@Base+0x44d4>  // b.pmore
  44b794:	lsl	x0, x2, x0
  44b798:	tst	x0, x1
  44b79c:	b.eq	44b440 <_obstack_memory_used@@Base+0x44d4>  // b.none
  44b7a0:	ldr	x3, [x3, #8]
  44b7a4:	str	x3, [x20, #16]
  44b7a8:	ldr	w0, [x3]
  44b7ac:	sub	w0, w0, #0x1c
  44b7b0:	cmp	w0, #0x34
  44b7b4:	b.ls	44b794 <_obstack_memory_used@@Base+0x4828>  // b.plast
  44b7b8:	b	44b440 <_obstack_memory_used@@Base+0x44d4>
  44b7bc:	mov	x0, x19
  44b7c0:	mov	w1, #0x0                   	// #0
  44b7c4:	bl	44b340 <_obstack_memory_used@@Base+0x43d4>
  44b7c8:	mov	x2, x0
  44b7cc:	mov	x0, x19
  44b7d0:	mov	x3, #0x0                   	// #0
  44b7d4:	ldp	x19, x20, [sp, #16]
  44b7d8:	mov	w1, #0x10                  	// #16
  44b7dc:	ldr	x21, [sp, #32]
  44b7e0:	ldp	x29, x30, [sp], #48
  44b7e4:	b	449568 <_obstack_memory_used@@Base+0x25fc>
  44b7e8:	ldr	x1, [x4, #8]
  44b7ec:	cbz	x1, 44b818 <_obstack_memory_used@@Base+0x48ac>
  44b7f0:	ldr	w0, [x1]
  44b7f4:	sub	w2, w0, #0x1
  44b7f8:	cmp	w0, #0x8
  44b7fc:	b.hi	44b820 <_obstack_memory_used@@Base+0x48b4>  // b.pmore
  44b800:	cmp	w0, #0x6
  44b804:	b.hi	44b49c <_obstack_memory_used@@Base+0x4530>  // b.pmore
  44b808:	cmp	w2, #0x1
  44b80c:	b.hi	44b818 <_obstack_memory_used@@Base+0x48ac>  // b.pmore
  44b810:	ldr	x1, [x1, #16]
  44b814:	cbnz	x1, 44b7f0 <_obstack_memory_used@@Base+0x4884>
  44b818:	mov	w1, #0x1                   	// #1
  44b81c:	b	44b4a0 <_obstack_memory_used@@Base+0x4534>
  44b820:	cmp	w0, #0x35
  44b824:	cset	w1, ne  // ne = any
  44b828:	b	44b4a0 <_obstack_memory_used@@Base+0x4534>
  44b82c:	mov	x1, #0x1                   	// #1
  44b830:	b	44b838 <_obstack_memory_used@@Base+0x48cc>
  44b834:	mov	x1, x4
  44b838:	cmp	w9, w1
  44b83c:	mov	w5, w1
  44b840:	b.le	44b858 <_obstack_memory_used@@Base+0x48ec>
  44b844:	ldrb	w3, [x8, x1]
  44b848:	add	x4, x1, #0x1
  44b84c:	cmp	w3, #0x24
  44b850:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  44b854:	b.ne	44b834 <_obstack_memory_used@@Base+0x48c8>  // b.any
  44b858:	ldp	w3, w0, [x19, #40]
  44b85c:	cmp	w3, w0
  44b860:	b.ge	44b940 <_obstack_memory_used@@Base+0x49d4>  // b.tcont
  44b864:	ldr	x4, [x19, #32]
  44b868:	add	w0, w3, #0x1
  44b86c:	sub	w9, w9, w5
  44b870:	smaddl	x3, w3, w11, x4
  44b874:	str	wzr, [x3, #4]
  44b878:	str	w0, [x19, #40]
  44b87c:	stp	xzr, x8, [x3]
  44b880:	ldr	x8, [x19, #24]
  44b884:	str	w5, [x3, #16]
  44b888:	add	x8, x8, x1
  44b88c:	str	x8, [x19, #24]
  44b890:	b	44b63c <_obstack_memory_used@@Base+0x46d0>
  44b894:	bl	44bb00 <_obstack_memory_used@@Base+0x4b94>
  44b898:	mov	x2, x0
  44b89c:	mov	x0, x19
  44b8a0:	mov	x3, #0x0                   	// #0
  44b8a4:	ldp	x19, x20, [sp, #16]
  44b8a8:	mov	w1, #0x13                  	// #19
  44b8ac:	ldr	x21, [sp, #32]
  44b8b0:	ldp	x29, x30, [sp], #48
  44b8b4:	b	449568 <_obstack_memory_used@@Base+0x25fc>
  44b8b8:	ldrb	w1, [x2, #2]
  44b8bc:	cbz	w1, 44b8d4 <_obstack_memory_used@@Base+0x4968>
  44b8c0:	add	x1, x2, #0x3
  44b8c4:	str	x1, [x0, #24]
  44b8c8:	ldrb	w1, [x2, #2]
  44b8cc:	cmp	w1, #0x6e
  44b8d0:	b.eq	44bad4 <_obstack_memory_used@@Base+0x4b68>  // b.none
  44b8d4:	mov	x0, x19
  44b8d8:	mov	w1, #0x0                   	// #0
  44b8dc:	bl	44b340 <_obstack_memory_used@@Base+0x43d4>
  44b8e0:	mov	x2, x0
  44b8e4:	mov	x0, x19
  44b8e8:	mov	x3, #0x0                   	// #0
  44b8ec:	ldp	x19, x20, [sp, #16]
  44b8f0:	mov	w1, #0x49                  	// #73
  44b8f4:	ldr	x21, [sp, #32]
  44b8f8:	ldp	x29, x30, [sp], #48
  44b8fc:	b	449568 <_obstack_memory_used@@Base+0x25fc>
  44b900:	mov	w1, #0x0                   	// #0
  44b904:	bl	44b340 <_obstack_memory_used@@Base+0x43d4>
  44b908:	mov	x2, x0
  44b90c:	mov	x0, x19
  44b910:	ldp	x19, x20, [sp, #16]
  44b914:	mov	x3, #0x0                   	// #0
  44b918:	ldr	x21, [sp, #32]
  44b91c:	mov	w1, #0x17                  	// #23
  44b920:	ldp	x29, x30, [sp], #48
  44b924:	b	449568 <_obstack_memory_used@@Base+0x25fc>
  44b928:	mov	x2, x3
  44b92c:	b	44b654 <_obstack_memory_used@@Base+0x46e8>
  44b930:	mov	w0, #0x2e                  	// #46
  44b934:	b	44b600 <_obstack_memory_used@@Base+0x4694>
  44b938:	mov	w0, #0x2f                  	// #47
  44b93c:	b	44b600 <_obstack_memory_used@@Base+0x4694>
  44b940:	ldr	x0, [x19, #24]
  44b944:	mov	x20, #0x0                   	// #0
  44b948:	add	x1, x0, x1
  44b94c:	str	x1, [x19, #24]
  44b950:	b	44b440 <_obstack_memory_used@@Base+0x44d4>
  44b954:	add	w3, w3, #0xf
  44b958:	str	w3, [x0, #72]
  44b95c:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  44b960:	mov	x2, x0
  44b964:	mov	x0, x19
  44b968:	mov	x3, #0x0                   	// #0
  44b96c:	ldp	x19, x20, [sp, #16]
  44b970:	mov	w1, #0x9                   	// #9
  44b974:	ldr	x21, [sp, #32]
  44b978:	ldp	x29, x30, [sp], #48
  44b97c:	b	449568 <_obstack_memory_used@@Base+0x25fc>
  44b980:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  44b984:	mov	x20, x0
  44b988:	add	x0, x19, #0x18
  44b98c:	bl	4497e8 <_obstack_memory_used@@Base+0x287c>
  44b990:	tbnz	w0, #31, 44b504 <_obstack_memory_used@@Base+0x4598>
  44b994:	ldr	x0, [x19, #24]
  44b998:	ldrb	w1, [x0]
  44b99c:	cmp	w1, #0x5f
  44b9a0:	b.ne	44b504 <_obstack_memory_used@@Base+0x4598>  // b.any
  44b9a4:	add	x0, x0, #0x1
  44b9a8:	str	x0, [x19, #24]
  44b9ac:	mov	x0, x19
  44b9b0:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  44b9b4:	mov	x2, x0
  44b9b8:	ldr	w1, [x19, #72]
  44b9bc:	mov	x3, x20
  44b9c0:	ldr	x21, [sp, #32]
  44b9c4:	add	w1, w1, #0x5
  44b9c8:	str	w1, [x19, #72]
  44b9cc:	mov	x0, x19
  44b9d0:	ldp	x19, x20, [sp, #16]
  44b9d4:	mov	w1, #0xb                   	// #11
  44b9d8:	ldp	x29, x30, [sp], #48
  44b9dc:	b	449568 <_obstack_memory_used@@Base+0x25fc>
  44b9e0:	bl	44bb00 <_obstack_memory_used@@Base+0x4b94>
  44b9e4:	mov	x2, x0
  44b9e8:	mov	x0, x19
  44b9ec:	mov	x3, #0x0                   	// #0
  44b9f0:	ldp	x19, x20, [sp, #16]
  44b9f4:	mov	w1, #0x14                  	// #20
  44b9f8:	ldr	x21, [sp, #32]
  44b9fc:	ldp	x29, x30, [sp], #48
  44ba00:	b	449568 <_obstack_memory_used@@Base+0x25fc>
  44ba04:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  44ba08:	mov	x2, x0
  44ba0c:	mov	x0, x19
  44ba10:	mov	x3, #0x0                   	// #0
  44ba14:	ldp	x19, x20, [sp, #16]
  44ba18:	mov	w1, #0xd                   	// #13
  44ba1c:	ldr	x21, [sp, #32]
  44ba20:	ldp	x29, x30, [sp], #48
  44ba24:	b	449568 <_obstack_memory_used@@Base+0x25fc>
  44ba28:	mov	w1, #0x0                   	// #0
  44ba2c:	bl	449e80 <_obstack_memory_used@@Base+0x2f14>
  44ba30:	cbz	w0, 44b504 <_obstack_memory_used@@Base+0x4598>
  44ba34:	mov	x0, x19
  44ba38:	mov	w1, #0x0                   	// #0
  44ba3c:	bl	449e80 <_obstack_memory_used@@Base+0x2f14>
  44ba40:	cbz	w0, 44b504 <_obstack_memory_used@@Base+0x4598>
  44ba44:	mov	x0, x19
  44ba48:	mov	w1, #0x0                   	// #0
  44ba4c:	bl	44b340 <_obstack_memory_used@@Base+0x43d4>
  44ba50:	mov	x2, x0
  44ba54:	mov	x0, x19
  44ba58:	mov	x3, #0x0                   	// #0
  44ba5c:	ldp	x19, x20, [sp, #16]
  44ba60:	mov	w1, #0x11                  	// #17
  44ba64:	ldr	x21, [sp, #32]
  44ba68:	ldp	x29, x30, [sp], #48
  44ba6c:	b	449568 <_obstack_memory_used@@Base+0x25fc>
  44ba70:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  44ba74:	mov	x2, x0
  44ba78:	mov	x0, x19
  44ba7c:	mov	x3, #0x0                   	// #0
  44ba80:	ldp	x19, x20, [sp, #16]
  44ba84:	mov	w1, #0xc                   	// #12
  44ba88:	ldr	x21, [sp, #32]
  44ba8c:	ldp	x29, x30, [sp], #48
  44ba90:	b	449568 <_obstack_memory_used@@Base+0x25fc>
  44ba94:	bl	449e80 <_obstack_memory_used@@Base+0x2f14>
  44ba98:	cbz	w0, 44b504 <_obstack_memory_used@@Base+0x4598>
  44ba9c:	mov	x0, x19
  44baa0:	mov	w1, #0x0                   	// #0
  44baa4:	bl	44b340 <_obstack_memory_used@@Base+0x43d4>
  44baa8:	mov	x2, x0
  44baac:	mov	x0, x19
  44bab0:	mov	x3, #0x0                   	// #0
  44bab4:	ldp	x19, x20, [sp, #16]
  44bab8:	mov	w1, #0xf                   	// #15
  44babc:	ldr	x21, [sp, #32]
  44bac0:	ldp	x29, x30, [sp], #48
  44bac4:	b	449568 <_obstack_memory_used@@Base+0x25fc>
  44bac8:	mov	x20, #0x0                   	// #0
  44bacc:	str	x8, [x19, #24]
  44bad0:	b	44b440 <_obstack_memory_used@@Base+0x44d4>
  44bad4:	mov	w1, #0x0                   	// #0
  44bad8:	bl	44b340 <_obstack_memory_used@@Base+0x43d4>
  44badc:	mov	x2, x0
  44bae0:	mov	x0, x19
  44bae4:	ldp	x19, x20, [sp, #16]
  44bae8:	mov	x3, #0x0                   	// #0
  44baec:	ldr	x21, [sp, #32]
  44baf0:	mov	w1, #0x4a                  	// #74
  44baf4:	ldp	x29, x30, [sp], #48
  44baf8:	b	449568 <_obstack_memory_used@@Base+0x25fc>
  44bafc:	nop
  44bb00:	stp	x29, x30, [sp, #-112]!
  44bb04:	mov	x29, sp
  44bb08:	ldr	x2, [x0, #24]
  44bb0c:	stp	x19, x20, [sp, #16]
  44bb10:	ldrb	w1, [x2]
  44bb14:	cmp	w1, #0x55
  44bb18:	b.eq	44bd00 <_obstack_memory_used@@Base+0x4d94>  // b.none
  44bb1c:	mov	x19, x0
  44bb20:	b.hi	44bbd0 <_obstack_memory_used@@Base+0x4c64>  // b.pmore
  44bb24:	cmp	w1, #0x4e
  44bb28:	b.eq	44bd18 <_obstack_memory_used@@Base+0x4dac>  // b.none
  44bb2c:	cmp	w1, #0x53
  44bb30:	b.ne	44bca0 <_obstack_memory_used@@Base+0x4d34>  // b.any
  44bb34:	ldrb	w1, [x2, #1]
  44bb38:	cmp	w1, #0x74
  44bb3c:	b.ne	44bc60 <_obstack_memory_used@@Base+0x4cf4>  // b.any
  44bb40:	ldp	w0, w1, [x0, #40]
  44bb44:	add	x2, x2, #0x2
  44bb48:	str	x2, [x19, #24]
  44bb4c:	cmp	w0, w1
  44bb50:	b.ge	44bfd4 <_obstack_memory_used@@Base+0x5068>  // b.tcont
  44bb54:	mov	w3, #0x18                  	// #24
  44bb58:	add	w1, w0, #0x1
  44bb5c:	ldr	x2, [x19, #32]
  44bb60:	smull	x0, w0, w3
  44bb64:	str	w1, [x19, #40]
  44bb68:	mov	w3, #0x3                   	// #3
  44bb6c:	add	x20, x2, x0
  44bb70:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  44bb74:	add	x1, x1, #0xf98
  44bb78:	str	xzr, [x2, x0]
  44bb7c:	str	x1, [x20, #8]
  44bb80:	str	w3, [x20, #16]
  44bb84:	mov	x0, x19
  44bb88:	bl	44d338 <_obstack_memory_used@@Base+0x63cc>
  44bb8c:	mov	x2, x20
  44bb90:	mov	x3, x0
  44bb94:	mov	w1, #0x1                   	// #1
  44bb98:	mov	x0, x19
  44bb9c:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44bba0:	mov	x20, x0
  44bba4:	ldr	w1, [x19, #72]
  44bba8:	ldr	x2, [x19, #24]
  44bbac:	add	w1, w1, #0x3
  44bbb0:	str	w1, [x19, #72]
  44bbb4:	ldrb	w0, [x2]
  44bbb8:	cmp	w0, #0x49
  44bbbc:	b.eq	44bf80 <_obstack_memory_used@@Base+0x5014>  // b.none
  44bbc0:	mov	x0, x20
  44bbc4:	ldp	x19, x20, [sp, #16]
  44bbc8:	ldp	x29, x30, [sp], #112
  44bbcc:	ret
  44bbd0:	cmp	w1, #0x5a
  44bbd4:	b.ne	44bca0 <_obstack_memory_used@@Base+0x4d34>  // b.any
  44bbd8:	add	x2, x2, #0x1
  44bbdc:	str	x2, [x0, #24]
  44bbe0:	mov	w1, #0x0                   	// #0
  44bbe4:	bl	44b340 <_obstack_memory_used@@Base+0x43d4>
  44bbe8:	mov	x20, x0
  44bbec:	cbz	x0, 44bc98 <_obstack_memory_used@@Base+0x4d2c>
  44bbf0:	ldr	x0, [x19, #24]
  44bbf4:	ldrb	w1, [x0]
  44bbf8:	cmp	w1, #0x45
  44bbfc:	b.ne	44bc98 <_obstack_memory_used@@Base+0x4d2c>  // b.any
  44bc00:	add	x1, x0, #0x1
  44bc04:	str	x1, [x19, #24]
  44bc08:	ldrb	w1, [x0, #1]
  44bc0c:	cmp	w1, #0x73
  44bc10:	b.eq	44bffc <_obstack_memory_used@@Base+0x5090>  // b.none
  44bc14:	cmp	w1, #0x64
  44bc18:	b.eq	44bea4 <_obstack_memory_used@@Base+0x4f38>  // b.none
  44bc1c:	mov	x0, x19
  44bc20:	bl	44bb00 <_obstack_memory_used@@Base+0x4b94>
  44bc24:	mov	x3, x0
  44bc28:	cbz	x0, 44bc3c <_obstack_memory_used@@Base+0x4cd0>
  44bc2c:	ldr	w0, [x0]
  44bc30:	sub	w0, w0, #0x46
  44bc34:	tst	w0, #0xfffffffd
  44bc38:	b.ne	44c050 <_obstack_memory_used@@Base+0x50e4>  // b.any
  44bc3c:	ldr	w0, [x20]
  44bc40:	cmp	w0, #0x3
  44bc44:	b.eq	44bfbc <_obstack_memory_used@@Base+0x5050>  // b.none
  44bc48:	mov	x2, x20
  44bc4c:	mov	x0, x19
  44bc50:	mov	w1, #0x2                   	// #2
  44bc54:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44bc58:	mov	x20, x0
  44bc5c:	b	44bbc0 <_obstack_memory_used@@Base+0x4c54>
  44bc60:	mov	w1, #0x0                   	// #0
  44bc64:	bl	449c18 <_obstack_memory_used@@Base+0x2cac>
  44bc68:	ldr	x1, [x19, #24]
  44bc6c:	mov	x20, x0
  44bc70:	ldrb	w0, [x1]
  44bc74:	cmp	w0, #0x49
  44bc78:	b.ne	44bbc0 <_obstack_memory_used@@Base+0x4c54>  // b.any
  44bc7c:	mov	x0, x19
  44bc80:	b	44bce0 <_obstack_memory_used@@Base+0x4d74>
  44bc84:	mov	x0, x19
  44bc88:	bl	449f80 <_obstack_memory_used@@Base+0x3014>
  44bc8c:	cbnz	w0, 44bee0 <_obstack_memory_used@@Base+0x4f74>
  44bc90:	ldp	x21, x22, [sp, #32]
  44bc94:	nop
  44bc98:	mov	x20, #0x0                   	// #0
  44bc9c:	b	44bbc0 <_obstack_memory_used@@Base+0x4c54>
  44bca0:	mov	x0, x19
  44bca4:	bl	44d338 <_obstack_memory_used@@Base+0x63cc>
  44bca8:	ldr	x1, [x19, #24]
  44bcac:	mov	x20, x0
  44bcb0:	ldrb	w0, [x1]
  44bcb4:	cmp	w0, #0x49
  44bcb8:	b.ne	44bbc0 <_obstack_memory_used@@Base+0x4c54>  // b.any
  44bcbc:	cbz	x20, 44bc98 <_obstack_memory_used@@Base+0x4d2c>
  44bcc0:	ldp	w1, w0, [x19, #56]
  44bcc4:	cmp	w1, w0
  44bcc8:	b.ge	44bc98 <_obstack_memory_used@@Base+0x4d2c>  // b.tcont
  44bccc:	ldr	x3, [x19, #48]
  44bcd0:	mov	x0, x19
  44bcd4:	add	w2, w1, #0x1
  44bcd8:	str	x20, [x3, w1, sxtw #3]
  44bcdc:	str	w2, [x19, #56]
  44bce0:	bl	44b310 <_obstack_memory_used@@Base+0x43a4>
  44bce4:	mov	x3, x0
  44bce8:	mov	x2, x20
  44bcec:	mov	x0, x19
  44bcf0:	mov	w1, #0x4                   	// #4
  44bcf4:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44bcf8:	mov	x20, x0
  44bcfc:	b	44bbc0 <_obstack_memory_used@@Base+0x4c54>
  44bd00:	bl	44d338 <_obstack_memory_used@@Base+0x63cc>
  44bd04:	mov	x20, x0
  44bd08:	mov	x0, x20
  44bd0c:	ldp	x19, x20, [sp, #16]
  44bd10:	ldp	x29, x30, [sp], #112
  44bd14:	ret
  44bd18:	stp	x21, x22, [sp, #32]
  44bd1c:	add	x2, x2, #0x1
  44bd20:	add	x1, sp, #0x68
  44bd24:	str	x2, [x0, #24]
  44bd28:	mov	w2, #0x1                   	// #1
  44bd2c:	bl	44cf38 <_obstack_memory_used@@Base+0x5fcc>
  44bd30:	mov	x22, x0
  44bd34:	cbz	x0, 44bfb0 <_obstack_memory_used@@Base+0x5044>
  44bd38:	mov	x1, #0x0                   	// #0
  44bd3c:	mov	x0, x19
  44bd40:	stp	x23, x24, [sp, #48]
  44bd44:	bl	4495f0 <_obstack_memory_used@@Base+0x2684>
  44bd48:	mov	x23, x0
  44bd4c:	ldr	x1, [x19, #24]
  44bd50:	ldrb	w20, [x1]
  44bd54:	cbz	w20, 44be0c <_obstack_memory_used@@Base+0x4ea0>
  44bd58:	mov	x21, #0x0                   	// #0
  44bd5c:	mov	w24, #0x4c                  	// #76
  44bd60:	stp	x25, x26, [sp, #64]
  44bd64:	mov	w25, #0x55                  	// #85
  44bd68:	cmp	w20, #0x44
  44bd6c:	b.eq	44be20 <_obstack_memory_used@@Base+0x4eb4>  // b.none
  44bd70:	sub	w2, w20, #0x30
  44bd74:	sub	w0, w20, #0x61
  44bd78:	and	w2, w2, #0xff
  44bd7c:	and	w0, w0, #0xff
  44bd80:	cmp	w2, #0x9
  44bd84:	mov	x26, x21
  44bd88:	ccmp	w0, #0x19, #0x0, hi  // hi = pmore
  44bd8c:	b.ls	44bda0 <_obstack_memory_used@@Base+0x4e34>  // b.plast
  44bd90:	cmp	w20, #0x43
  44bd94:	ccmp	w20, w25, #0x4, ne  // ne = any
  44bd98:	ccmp	w20, w24, #0x4, ne  // ne = any
  44bd9c:	b.ne	44be6c <_obstack_memory_used@@Base+0x4f00>  // b.any
  44bda0:	mov	x0, x19
  44bda4:	bl	44d338 <_obstack_memory_used@@Base+0x63cc>
  44bda8:	mov	x21, x0
  44bdac:	cbz	x26, 44bdc8 <_obstack_memory_used@@Base+0x4e5c>
  44bdb0:	mov	w1, #0x1                   	// #1
  44bdb4:	mov	x3, x21
  44bdb8:	mov	x2, x26
  44bdbc:	mov	x0, x19
  44bdc0:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44bdc4:	mov	x21, x0
  44bdc8:	cmp	w20, #0x53
  44bdcc:	ldr	x1, [x19, #24]
  44bdd0:	b.eq	44be00 <_obstack_memory_used@@Base+0x4e94>  // b.none
  44bdd4:	ldrb	w20, [x1]
  44bdd8:	cmp	w20, #0x45
  44bddc:	b.eq	44be54 <_obstack_memory_used@@Base+0x4ee8>  // b.none
  44bde0:	cbz	x21, 44be08 <_obstack_memory_used@@Base+0x4e9c>
  44bde4:	ldp	w0, w2, [x19, #56]
  44bde8:	cmp	w0, w2
  44bdec:	b.ge	44be08 <_obstack_memory_used@@Base+0x4e9c>  // b.tcont
  44bdf0:	ldr	x3, [x19, #48]
  44bdf4:	add	w2, w0, #0x1
  44bdf8:	str	x21, [x3, w0, sxtw #3]
  44bdfc:	str	w2, [x19, #56]
  44be00:	ldrb	w20, [x1]
  44be04:	cbnz	w20, 44bd68 <_obstack_memory_used@@Base+0x4dfc>
  44be08:	ldp	x25, x26, [sp, #64]
  44be0c:	mov	x20, #0x0                   	// #0
  44be10:	ldp	x23, x24, [sp, #48]
  44be14:	str	xzr, [x22]
  44be18:	ldp	x21, x22, [sp, #32]
  44be1c:	b	44bbc0 <_obstack_memory_used@@Base+0x4c54>
  44be20:	ldrb	w0, [x1, #1]
  44be24:	and	w0, w0, #0xffffffdf
  44be28:	and	w0, w0, #0xff
  44be2c:	cmp	w0, #0x54
  44be30:	mov	x0, x19
  44be34:	b.ne	44be5c <_obstack_memory_used@@Base+0x4ef0>  // b.any
  44be38:	mov	x26, x21
  44be3c:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  44be40:	mov	x21, x0
  44be44:	mov	w1, #0x1                   	// #1
  44be48:	cbnz	x26, 44bdb4 <_obstack_memory_used@@Base+0x4e48>
  44be4c:	ldr	x1, [x19, #24]
  44be50:	b	44bdd4 <_obstack_memory_used@@Base+0x4e68>
  44be54:	mov	x26, x21
  44be58:	b	44bd90 <_obstack_memory_used@@Base+0x4e24>
  44be5c:	mov	x26, x21
  44be60:	bl	44d338 <_obstack_memory_used@@Base+0x63cc>
  44be64:	mov	x21, x0
  44be68:	b	44be44 <_obstack_memory_used@@Base+0x4ed8>
  44be6c:	cmp	w20, #0x53
  44be70:	b.eq	44bf20 <_obstack_memory_used@@Base+0x4fb4>  // b.none
  44be74:	cmp	w20, #0x49
  44be78:	b.eq	44bfdc <_obstack_memory_used@@Base+0x5070>  // b.none
  44be7c:	cmp	w20, #0x54
  44be80:	b.eq	44c078 <_obstack_memory_used@@Base+0x510c>  // b.none
  44be84:	cmp	w20, #0x45
  44be88:	b.eq	44bf3c <_obstack_memory_used@@Base+0x4fd0>  // b.none
  44be8c:	cmp	w20, #0x4d
  44be90:	ccmp	x21, #0x0, #0x4, eq  // eq = none
  44be94:	b.eq	44be08 <_obstack_memory_used@@Base+0x4e9c>  // b.none
  44be98:	add	x1, x1, #0x1
  44be9c:	str	x1, [x19, #24]
  44bea0:	b	44be00 <_obstack_memory_used@@Base+0x4e94>
  44bea4:	stp	x21, x22, [sp, #32]
  44bea8:	add	x0, x0, #0x2
  44beac:	str	x0, [x19, #24]
  44beb0:	mov	x0, x19
  44beb4:	bl	449920 <_obstack_memory_used@@Base+0x29b4>
  44beb8:	mov	w21, w0
  44bebc:	tbnz	w0, #31, 44bc90 <_obstack_memory_used@@Base+0x4d24>
  44bec0:	mov	x0, x19
  44bec4:	bl	44bb00 <_obstack_memory_used@@Base+0x4b94>
  44bec8:	mov	x11, x0
  44becc:	cbz	x0, 44bee0 <_obstack_memory_used@@Base+0x4f74>
  44bed0:	ldr	w0, [x0]
  44bed4:	sub	w0, w0, #0x46
  44bed8:	tst	w0, #0xfffffffd
  44bedc:	b.ne	44bc84 <_obstack_memory_used@@Base+0x4d18>  // b.any
  44bee0:	ldp	w1, w0, [x19, #40]
  44bee4:	cmp	w1, w0
  44bee8:	b.ge	44c06c <_obstack_memory_used@@Base+0x5100>  // b.tcont
  44beec:	mov	w2, #0x18                  	// #24
  44bef0:	add	w4, w1, #0x1
  44bef4:	ldr	x0, [x19, #32]
  44bef8:	smull	x1, w1, w2
  44befc:	mov	w2, #0x47                  	// #71
  44bf00:	add	x3, x0, x1
  44bf04:	str	wzr, [x3, #4]
  44bf08:	str	w4, [x19, #40]
  44bf0c:	str	w2, [x0, x1]
  44bf10:	str	x11, [x3, #8]
  44bf14:	str	w21, [x3, #16]
  44bf18:	ldp	x21, x22, [sp, #32]
  44bf1c:	b	44bc3c <_obstack_memory_used@@Base+0x4cd0>
  44bf20:	mov	x0, x19
  44bf24:	mov	w1, #0x1                   	// #1
  44bf28:	bl	449c18 <_obstack_memory_used@@Base+0x2cac>
  44bf2c:	mov	x21, x0
  44bf30:	cbnz	x26, 44bdb0 <_obstack_memory_used@@Base+0x4e44>
  44bf34:	ldr	x1, [x19, #24]
  44bf38:	b	44be00 <_obstack_memory_used@@Base+0x4e94>
  44bf3c:	str	x21, [x22]
  44bf40:	cbz	x21, 44bfa8 <_obstack_memory_used@@Base+0x503c>
  44bf44:	cbz	x23, 44bf54 <_obstack_memory_used@@Base+0x4fe8>
  44bf48:	ldr	x0, [sp, #104]
  44bf4c:	str	x0, [x23, #8]
  44bf50:	str	x23, [sp, #104]
  44bf54:	ldr	x0, [x19, #24]
  44bf58:	ldrb	w1, [x0]
  44bf5c:	cmp	w1, #0x45
  44bf60:	b.ne	44bfa8 <_obstack_memory_used@@Base+0x503c>  // b.any
  44bf64:	add	x0, x0, #0x1
  44bf68:	ldp	x21, x22, [sp, #32]
  44bf6c:	ldp	x23, x24, [sp, #48]
  44bf70:	ldp	x25, x26, [sp, #64]
  44bf74:	str	x0, [x19, #24]
  44bf78:	ldr	x20, [sp, #104]
  44bf7c:	b	44bbc0 <_obstack_memory_used@@Base+0x4c54>
  44bf80:	cbz	x20, 44bc98 <_obstack_memory_used@@Base+0x4d2c>
  44bf84:	ldp	w0, w1, [x19, #56]
  44bf88:	cmp	w0, w1
  44bf8c:	b.ge	44bc98 <_obstack_memory_used@@Base+0x4d2c>  // b.tcont
  44bf90:	ldr	x2, [x19, #48]
  44bf94:	add	w1, w0, #0x1
  44bf98:	str	x20, [x2, w0, sxtw #3]
  44bf9c:	mov	x0, x19
  44bfa0:	str	w1, [x19, #56]
  44bfa4:	b	44bce0 <_obstack_memory_used@@Base+0x4d74>
  44bfa8:	ldp	x23, x24, [sp, #48]
  44bfac:	ldp	x25, x26, [sp, #64]
  44bfb0:	mov	x20, #0x0                   	// #0
  44bfb4:	ldp	x21, x22, [sp, #32]
  44bfb8:	b	44bbc0 <_obstack_memory_used@@Base+0x4c54>
  44bfbc:	ldr	x0, [x20, #16]
  44bfc0:	ldr	w1, [x0]
  44bfc4:	cmp	w1, #0x29
  44bfc8:	b.ne	44bc48 <_obstack_memory_used@@Base+0x4cdc>  // b.any
  44bfcc:	str	xzr, [x0, #8]
  44bfd0:	b	44bc48 <_obstack_memory_used@@Base+0x4cdc>
  44bfd4:	mov	x20, #0x0                   	// #0
  44bfd8:	b	44bb84 <_obstack_memory_used@@Base+0x4c18>
  44bfdc:	cbz	x21, 44be08 <_obstack_memory_used@@Base+0x4e9c>
  44bfe0:	add	x1, x1, #0x1
  44bfe4:	str	x1, [x19, #24]
  44bfe8:	mov	x0, x19
  44bfec:	bl	44b248 <_obstack_memory_used@@Base+0x42dc>
  44bff0:	mov	x21, x0
  44bff4:	mov	w1, #0x4                   	// #4
  44bff8:	b	44bdb4 <_obstack_memory_used@@Base+0x4e48>
  44bffc:	add	x0, x0, #0x2
  44c000:	str	x0, [x19, #24]
  44c004:	mov	x0, x19
  44c008:	bl	449f80 <_obstack_memory_used@@Base+0x3014>
  44c00c:	cbz	w0, 44bc98 <_obstack_memory_used@@Base+0x4d2c>
  44c010:	ldp	w0, w1, [x19, #40]
  44c014:	cmp	w0, w1
  44c018:	b.ge	44c070 <_obstack_memory_used@@Base+0x5104>  // b.tcont
  44c01c:	mov	w3, #0x18                  	// #24
  44c020:	add	w1, w0, #0x1
  44c024:	ldr	x2, [x19, #32]
  44c028:	smull	x0, w0, w3
  44c02c:	str	w1, [x19, #40]
  44c030:	mov	w4, #0xe                   	// #14
  44c034:	add	x3, x2, x0
  44c038:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  44c03c:	add	x1, x1, #0xf88
  44c040:	str	xzr, [x2, x0]
  44c044:	str	x1, [x3, #8]
  44c048:	str	w4, [x3, #16]
  44c04c:	b	44bc3c <_obstack_memory_used@@Base+0x4cd0>
  44c050:	mov	x0, x19
  44c054:	str	x3, [sp, #88]
  44c058:	bl	449f80 <_obstack_memory_used@@Base+0x3014>
  44c05c:	ldr	x3, [sp, #88]
  44c060:	cbnz	w0, 44bc3c <_obstack_memory_used@@Base+0x4cd0>
  44c064:	mov	x20, #0x0                   	// #0
  44c068:	b	44bbc0 <_obstack_memory_used@@Base+0x4c54>
  44c06c:	ldp	x21, x22, [sp, #32]
  44c070:	mov	x3, #0x0                   	// #0
  44c074:	b	44bc3c <_obstack_memory_used@@Base+0x4cd0>
  44c078:	mov	x0, x19
  44c07c:	bl	449998 <_obstack_memory_used@@Base+0x2a2c>
  44c080:	mov	x21, x0
  44c084:	b	44be44 <_obstack_memory_used@@Base+0x4ed8>
  44c088:	stp	x29, x30, [sp, #-80]!
  44c08c:	mov	x29, sp
  44c090:	ldr	x4, [x0, #24]
  44c094:	stp	x19, x20, [sp, #16]
  44c098:	mov	x19, x0
  44c09c:	mov	x0, x4
  44c0a0:	bl	449f28 <_obstack_memory_used@@Base+0x2fbc>
  44c0a4:	cbnz	w0, 44c0e4 <_obstack_memory_used@@Base+0x5178>
  44c0a8:	ldrb	w1, [x4]
  44c0ac:	sub	w0, w1, #0x30
  44c0b0:	cmp	w0, #0x4a
  44c0b4:	b.ls	44c0cc <_obstack_memory_used@@Base+0x5160>  // b.plast
  44c0b8:	mov	x20, #0x0                   	// #0
  44c0bc:	mov	x0, x20
  44c0c0:	ldp	x19, x20, [sp, #16]
  44c0c4:	ldp	x29, x30, [sp], #80
  44c0c8:	ret
  44c0cc:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x20094>
  44c0d0:	add	x2, x2, #0x3c
  44c0d4:	ldrh	w0, [x2, w0, uxtw #1]
  44c0d8:	adr	x2, 44c0e4 <_obstack_memory_used@@Base+0x5178>
  44c0dc:	add	x0, x2, w0, sxth #2
  44c0e0:	br	x0
  44c0e4:	add	x1, sp, #0x48
  44c0e8:	mov	x0, x19
  44c0ec:	mov	w2, #0x0                   	// #0
  44c0f0:	stp	x21, x22, [sp, #32]
  44c0f4:	bl	44cf38 <_obstack_memory_used@@Base+0x5fcc>
  44c0f8:	mov	x21, x0
  44c0fc:	cbz	x0, 44c190 <_obstack_memory_used@@Base+0x5224>
  44c100:	ldr	x0, [x19, #24]
  44c104:	ldrb	w0, [x0]
  44c108:	cmp	w0, #0x46
  44c10c:	mov	x0, x19
  44c110:	b.eq	44c184 <_obstack_memory_used@@Base+0x5218>  // b.none
  44c114:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  44c118:	str	x0, [x21]
  44c11c:	cbz	x0, 44c190 <_obstack_memory_used@@Base+0x5224>
  44c120:	ldr	w1, [x0]
  44c124:	ldr	x20, [sp, #72]
  44c128:	sub	w1, w1, #0x1f
  44c12c:	cmp	w1, #0x1
  44c130:	b.ls	44c168 <_obstack_memory_used@@Base+0x51fc>  // b.plast
  44c134:	cbz	x20, 44c190 <_obstack_memory_used@@Base+0x5224>
  44c138:	ldp	w0, w1, [x19, #56]
  44c13c:	cmp	w0, w1
  44c140:	b.ge	44c190 <_obstack_memory_used@@Base+0x5224>  // b.tcont
  44c144:	ldr	x2, [x19, #48]
  44c148:	add	w1, w0, #0x1
  44c14c:	ldp	x21, x22, [sp, #32]
  44c150:	str	x20, [x2, w0, sxtw #3]
  44c154:	mov	x0, x20
  44c158:	str	w1, [x19, #56]
  44c15c:	ldp	x19, x20, [sp, #16]
  44c160:	ldp	x29, x30, [sp], #80
  44c164:	ret
  44c168:	ldr	x1, [x0, #8]
  44c16c:	str	x20, [x0, #8]
  44c170:	ldr	x0, [x21]
  44c174:	str	x0, [sp, #72]
  44c178:	str	x1, [x21]
  44c17c:	ldr	x20, [sp, #72]
  44c180:	b	44c134 <_obstack_memory_used@@Base+0x51c8>
  44c184:	bl	44d258 <_obstack_memory_used@@Base+0x62ec>
  44c188:	str	x0, [x21]
  44c18c:	b	44c11c <_obstack_memory_used@@Base+0x51b0>
  44c190:	ldp	x21, x22, [sp, #32]
  44c194:	b	44c0b8 <_obstack_memory_used@@Base+0x514c>
  44c198:	ldp	w2, w3, [x19, #40]
  44c19c:	sub	w1, w1, #0x61
  44c1a0:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x3f094>
  44c1a4:	add	x0, x0, #0xdf0
  44c1a8:	sbfiz	x1, x1, #5, #32
  44c1ac:	add	x0, x0, #0x188
  44c1b0:	add	x1, x0, x1
  44c1b4:	cmp	w2, w3
  44c1b8:	b.ge	44cc58 <_obstack_memory_used@@Base+0x5cec>  // b.tcont
  44c1bc:	mov	w0, #0x18                  	// #24
  44c1c0:	add	w6, w2, #0x1
  44c1c4:	ldr	x3, [x19, #32]
  44c1c8:	smull	x2, w2, w0
  44c1cc:	ldr	w7, [x1, #8]
  44c1d0:	mov	w5, #0x27                  	// #39
  44c1d4:	add	x20, x3, x2
  44c1d8:	ldr	w0, [x19, #72]
  44c1dc:	add	x4, x4, #0x1
  44c1e0:	add	w0, w0, w7
  44c1e4:	str	wzr, [x20, #4]
  44c1e8:	str	w6, [x19, #40]
  44c1ec:	str	w5, [x3, x2]
  44c1f0:	str	x1, [x20, #8]
  44c1f4:	str	x4, [x19, #24]
  44c1f8:	str	w0, [x19, #72]
  44c1fc:	b	44c0bc <_obstack_memory_used@@Base+0x5150>
  44c200:	mov	x0, x19
  44c204:	bl	44bb00 <_obstack_memory_used@@Base+0x4b94>
  44c208:	mov	x20, x0
  44c20c:	str	x0, [sp, #72]
  44c210:	cbz	x20, 44c0b8 <_obstack_memory_used@@Base+0x514c>
  44c214:	ldp	w0, w1, [x19, #56]
  44c218:	cmp	w0, w1
  44c21c:	b.ge	44c0b8 <_obstack_memory_used@@Base+0x514c>  // b.tcont
  44c220:	ldr	x2, [x19, #48]
  44c224:	add	w1, w0, #0x1
  44c228:	str	x20, [x2, w0, sxtw #3]
  44c22c:	str	w1, [x19, #56]
  44c230:	ldr	x20, [sp, #72]
  44c234:	mov	x0, x20
  44c238:	ldp	x19, x20, [sp, #16]
  44c23c:	ldp	x29, x30, [sp], #80
  44c240:	ret
  44c244:	mov	x0, x19
  44c248:	bl	44d258 <_obstack_memory_used@@Base+0x62ec>
  44c24c:	mov	x20, x0
  44c250:	str	x0, [sp, #72]
  44c254:	b	44c210 <_obstack_memory_used@@Base+0x52a4>
  44c258:	add	x4, x4, #0x1
  44c25c:	str	x4, [x19, #24]
  44c260:	mov	x0, x19
  44c264:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  44c268:	mov	x2, x0
  44c26c:	mov	x3, #0x0                   	// #0
  44c270:	mov	x0, x19
  44c274:	mov	w1, #0x26                  	// #38
  44c278:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44c27c:	mov	x20, x0
  44c280:	str	x0, [sp, #72]
  44c284:	b	44c210 <_obstack_memory_used@@Base+0x52a4>
  44c288:	add	x4, x4, #0x1
  44c28c:	str	x4, [x19, #24]
  44c290:	mov	x0, x19
  44c294:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  44c298:	mov	x2, x0
  44c29c:	mov	x3, #0x0                   	// #0
  44c2a0:	mov	x0, x19
  44c2a4:	mov	w1, #0x24                  	// #36
  44c2a8:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44c2ac:	mov	x20, x0
  44c2b0:	str	x0, [sp, #72]
  44c2b4:	b	44c210 <_obstack_memory_used@@Base+0x52a4>
  44c2b8:	add	x4, x4, #0x1
  44c2bc:	str	x4, [x19, #24]
  44c2c0:	mov	x0, x19
  44c2c4:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  44c2c8:	mov	x2, x0
  44c2cc:	mov	x3, #0x0                   	// #0
  44c2d0:	mov	x0, x19
  44c2d4:	mov	w1, #0x25                  	// #37
  44c2d8:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44c2dc:	mov	x20, x0
  44c2e0:	str	x0, [sp, #72]
  44c2e4:	b	44c210 <_obstack_memory_used@@Base+0x52a4>
  44c2e8:	add	x0, x4, #0x1
  44c2ec:	str	x0, [x19, #24]
  44c2f0:	ldrb	w0, [x4, #1]
  44c2f4:	cbz	w0, 44c0b8 <_obstack_memory_used@@Base+0x514c>
  44c2f8:	add	x0, x4, #0x2
  44c2fc:	str	x0, [x19, #24]
  44c300:	ldrb	w0, [x4, #1]
  44c304:	cmp	w0, #0x68
  44c308:	b.eq	44ca80 <_obstack_memory_used@@Base+0x5b14>  // b.none
  44c30c:	b.hi	44c664 <_obstack_memory_used@@Base+0x56f8>  // b.pmore
  44c310:	cmp	w0, #0x63
  44c314:	b.eq	44ca40 <_obstack_memory_used@@Base+0x5ad4>  // b.none
  44c318:	b.ls	44c614 <_obstack_memory_used@@Base+0x56a8>  // b.plast
  44c31c:	cmp	w0, #0x65
  44c320:	b.eq	44cb20 <_obstack_memory_used@@Base+0x5bb4>  // b.none
  44c324:	cmp	w0, #0x66
  44c328:	b.ne	44c880 <_obstack_memory_used@@Base+0x5914>  // b.any
  44c32c:	ldp	w0, w1, [x19, #40]
  44c330:	cmp	w0, w1
  44c334:	b.ge	44cc58 <_obstack_memory_used@@Base+0x5cec>  // b.tcont
  44c338:	mov	w1, #0x18                  	// #24
  44c33c:	add	w5, w0, #0x1
  44c340:	ldr	x3, [x19, #32]
  44c344:	smull	x0, w0, w1
  44c348:	ldr	w2, [x19, #72]
  44c34c:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x3f094>
  44c350:	add	x1, x1, #0xdf0
  44c354:	add	x20, x3, x0
  44c358:	add	x1, x1, #0x4c8
  44c35c:	mov	w4, #0x27                  	// #39
  44c360:	str	wzr, [x20, #4]
  44c364:	add	w2, w2, #0x9
  44c368:	str	w5, [x19, #40]
  44c36c:	str	w4, [x3, x0]
  44c370:	str	x1, [x20, #8]
  44c374:	str	w2, [x19, #72]
  44c378:	b	44c0bc <_obstack_memory_used@@Base+0x5150>
  44c37c:	add	x4, x4, #0x1
  44c380:	str	x4, [x19, #24]
  44c384:	mov	x0, x19
  44c388:	bl	449a18 <_obstack_memory_used@@Base+0x2aac>
  44c38c:	str	x0, [sp, #72]
  44c390:	ldr	x1, [x19, #24]
  44c394:	mov	x20, x0
  44c398:	ldrb	w0, [x1]
  44c39c:	cmp	w0, #0x49
  44c3a0:	b.eq	44c960 <_obstack_memory_used@@Base+0x59f4>  // b.none
  44c3a4:	mov	x0, x19
  44c3a8:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  44c3ac:	ldr	x3, [sp, #72]
  44c3b0:	mov	x2, x0
  44c3b4:	mov	w1, #0x21                  	// #33
  44c3b8:	mov	x0, x19
  44c3bc:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44c3c0:	mov	x20, x0
  44c3c4:	str	x0, [sp, #72]
  44c3c8:	b	44c210 <_obstack_memory_used@@Base+0x52a4>
  44c3cc:	add	x4, x4, #0x1
  44c3d0:	str	x4, [x19, #24]
  44c3d4:	mov	x0, x19
  44c3d8:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  44c3dc:	mov	x2, x0
  44c3e0:	mov	x3, #0x0                   	// #0
  44c3e4:	mov	x0, x19
  44c3e8:	mov	w1, #0x22                  	// #34
  44c3ec:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44c3f0:	mov	x20, x0
  44c3f4:	str	x0, [sp, #72]
  44c3f8:	b	44c210 <_obstack_memory_used@@Base+0x52a4>
  44c3fc:	ldrb	w0, [x4, #1]
  44c400:	sub	w1, w0, #0x30
  44c404:	cmp	w0, #0x5f
  44c408:	and	w1, w1, #0xff
  44c40c:	ccmp	w1, #0x9, #0x0, ne  // ne = any
  44c410:	b.ls	44c424 <_obstack_memory_used@@Base+0x54b8>  // b.plast
  44c414:	sub	w0, w0, #0x41
  44c418:	and	w0, w0, #0xff
  44c41c:	cmp	w0, #0x19
  44c420:	b.hi	44c93c <_obstack_memory_used@@Base+0x59d0>  // b.pmore
  44c424:	mov	w1, #0x0                   	// #0
  44c428:	mov	x0, x19
  44c42c:	bl	449c18 <_obstack_memory_used@@Base+0x2cac>
  44c430:	str	x0, [sp, #72]
  44c434:	ldr	x1, [x19, #24]
  44c438:	mov	x20, x0
  44c43c:	ldrb	w0, [x1]
  44c440:	cmp	w0, #0x49
  44c444:	b.ne	44c0bc <_obstack_memory_used@@Base+0x5150>  // b.any
  44c448:	add	x1, x1, #0x1
  44c44c:	str	x1, [x19, #24]
  44c450:	mov	x0, x19
  44c454:	bl	44b248 <_obstack_memory_used@@Base+0x42dc>
  44c458:	mov	x3, x0
  44c45c:	mov	x2, x20
  44c460:	mov	x0, x19
  44c464:	mov	w1, #0x4                   	// #4
  44c468:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44c46c:	mov	x20, x0
  44c470:	str	x0, [sp, #72]
  44c474:	b	44c210 <_obstack_memory_used@@Base+0x52a4>
  44c478:	mov	x0, x19
  44c47c:	stp	x21, x22, [sp, #32]
  44c480:	bl	449998 <_obstack_memory_used@@Base+0x2a2c>
  44c484:	ldr	x21, [x19, #24]
  44c488:	str	x0, [sp, #72]
  44c48c:	mov	x20, x0
  44c490:	ldrb	w0, [x21]
  44c494:	cmp	w0, #0x49
  44c498:	b.eq	44c8c0 <_obstack_memory_used@@Base+0x5954>  // b.none
  44c49c:	ldp	x21, x22, [sp, #32]
  44c4a0:	b	44c210 <_obstack_memory_used@@Base+0x52a4>
  44c4a4:	add	x4, x4, #0x1
  44c4a8:	str	x4, [x19, #24]
  44c4ac:	mov	x0, x19
  44c4b0:	bl	449a18 <_obstack_memory_used@@Base+0x2aac>
  44c4b4:	mov	x2, x0
  44c4b8:	mov	x3, #0x0                   	// #0
  44c4bc:	mov	x0, x19
  44c4c0:	mov	w1, #0x28                  	// #40
  44c4c4:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44c4c8:	mov	x20, x0
  44c4cc:	str	x0, [sp, #72]
  44c4d0:	b	44c210 <_obstack_memory_used@@Base+0x52a4>
  44c4d4:	add	x4, x4, #0x1
  44c4d8:	str	x4, [x19, #24]
  44c4dc:	mov	x0, x19
  44c4e0:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  44c4e4:	mov	x2, x0
  44c4e8:	mov	x3, #0x0                   	// #0
  44c4ec:	mov	x0, x19
  44c4f0:	mov	w1, #0x23                  	// #35
  44c4f4:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44c4f8:	mov	x20, x0
  44c4fc:	str	x0, [sp, #72]
  44c500:	b	44c210 <_obstack_memory_used@@Base+0x52a4>
  44c504:	add	x3, x4, #0x1
  44c508:	str	x3, [x19, #24]
  44c50c:	ldrb	w0, [x4, #1]
  44c510:	cmp	w0, #0x5f
  44c514:	b.eq	44c934 <_obstack_memory_used@@Base+0x59c8>  // b.none
  44c518:	sub	w0, w0, #0x30
  44c51c:	and	w0, w0, #0xff
  44c520:	cmp	w0, #0x9
  44c524:	b.hi	44c98c <_obstack_memory_used@@Base+0x5a20>  // b.pmore
  44c528:	mov	x1, x3
  44c52c:	nop
  44c530:	mov	x4, x1
  44c534:	add	x1, x1, #0x1
  44c538:	str	x1, [x19, #24]
  44c53c:	ldrb	w0, [x1]
  44c540:	sub	w0, w0, #0x30
  44c544:	and	w0, w0, #0xff
  44c548:	cmp	w0, #0x9
  44c54c:	b.ls	44c530 <_obstack_memory_used@@Base+0x55c4>  // b.plast
  44c550:	ldp	w0, w5, [x19, #40]
  44c554:	sub	x2, x1, x3
  44c558:	cmp	w0, w5
  44c55c:	b.ge	44c0b8 <_obstack_memory_used@@Base+0x514c>  // b.tcont
  44c560:	mov	w7, #0x18                  	// #24
  44c564:	add	w6, w0, #0x1
  44c568:	ldr	x5, [x19, #32]
  44c56c:	smull	x0, w0, w7
  44c570:	cmp	w2, #0x0
  44c574:	add	x20, x5, x0
  44c578:	str	wzr, [x20, #4]
  44c57c:	str	w6, [x19, #40]
  44c580:	b.le	44c0b8 <_obstack_memory_used@@Base+0x514c>
  44c584:	str	xzr, [x5, x0]
  44c588:	str	x3, [x20, #8]
  44c58c:	str	w2, [x20, #16]
  44c590:	ldrb	w0, [x4, #1]
  44c594:	mov	x3, x1
  44c598:	cmp	w0, #0x5f
  44c59c:	b.ne	44c0b8 <_obstack_memory_used@@Base+0x514c>  // b.any
  44c5a0:	add	x3, x3, #0x1
  44c5a4:	str	x3, [x19, #24]
  44c5a8:	mov	x0, x19
  44c5ac:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  44c5b0:	mov	x3, x0
  44c5b4:	mov	x2, x20
  44c5b8:	mov	x0, x19
  44c5bc:	mov	w1, #0x2a                  	// #42
  44c5c0:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44c5c4:	mov	x20, x0
  44c5c8:	str	x0, [sp, #72]
  44c5cc:	b	44c210 <_obstack_memory_used@@Base+0x52a4>
  44c5d0:	add	x4, x4, #0x1
  44c5d4:	str	x4, [x19, #24]
  44c5d8:	mov	x0, x19
  44c5dc:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  44c5e0:	mov	x20, x0
  44c5e4:	cbz	x0, 44c0b8 <_obstack_memory_used@@Base+0x514c>
  44c5e8:	mov	x0, x19
  44c5ec:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  44c5f0:	mov	x3, x0
  44c5f4:	cbz	x0, 44c0b8 <_obstack_memory_used@@Base+0x514c>
  44c5f8:	mov	x2, x20
  44c5fc:	mov	x0, x19
  44c600:	mov	w1, #0x2b                  	// #43
  44c604:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44c608:	mov	x20, x0
  44c60c:	str	x0, [sp, #72]
  44c610:	b	44c210 <_obstack_memory_used@@Base+0x52a4>
  44c614:	cmp	w0, #0x54
  44c618:	b.eq	44c6e4 <_obstack_memory_used@@Base+0x5778>  // b.none
  44c61c:	cmp	w0, #0x61
  44c620:	b.ne	44c778 <_obstack_memory_used@@Base+0x580c>  // b.any
  44c624:	ldp	w0, w1, [x19, #40]
  44c628:	cmp	w0, w1
  44c62c:	b.ge	44c0b8 <_obstack_memory_used@@Base+0x514c>  // b.tcont
  44c630:	mov	w3, #0x18                  	// #24
  44c634:	add	w1, w0, #0x1
  44c638:	ldr	x2, [x19, #32]
  44c63c:	smull	x0, w0, w3
  44c640:	str	w1, [x19, #40]
  44c644:	mov	w3, #0x4                   	// #4
  44c648:	add	x20, x2, x0
  44c64c:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  44c650:	add	x1, x1, #0xf58
  44c654:	str	xzr, [x2, x0]
  44c658:	str	x1, [x20, #8]
  44c65c:	str	w3, [x20, #16]
  44c660:	b	44c0bc <_obstack_memory_used@@Base+0x5150>
  44c664:	cmp	w0, #0x73
  44c668:	b.eq	44ca08 <_obstack_memory_used@@Base+0x5a9c>  // b.none
  44c66c:	b.ls	44c740 <_obstack_memory_used@@Base+0x57d4>  // b.plast
  44c670:	cmp	w0, #0x75
  44c674:	b.eq	44cb70 <_obstack_memory_used@@Base+0x5c04>  // b.none
  44c678:	cmp	w0, #0x76
  44c67c:	b.ne	44c6dc <_obstack_memory_used@@Base+0x5770>  // b.any
  44c680:	ldrb	w0, [x4, #2]
  44c684:	cmp	w0, #0x5f
  44c688:	b.eq	44cc08 <_obstack_memory_used@@Base+0x5c9c>  // b.none
  44c68c:	mov	x0, x19
  44c690:	bl	4498b8 <_obstack_memory_used@@Base+0x294c>
  44c694:	mov	x20, x0
  44c698:	cbz	x20, 44c0b8 <_obstack_memory_used@@Base+0x514c>
  44c69c:	ldr	x0, [x19, #24]
  44c6a0:	ldrb	w1, [x0]
  44c6a4:	cmp	w1, #0x5f
  44c6a8:	b.ne	44c0b8 <_obstack_memory_used@@Base+0x514c>  // b.any
  44c6ac:	add	x0, x0, #0x1
  44c6b0:	str	x0, [x19, #24]
  44c6b4:	mov	x0, x19
  44c6b8:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  44c6bc:	mov	x3, x0
  44c6c0:	mov	x2, x20
  44c6c4:	mov	x0, x19
  44c6c8:	mov	w1, #0x2d                  	// #45
  44c6cc:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44c6d0:	mov	x20, x0
  44c6d4:	str	x0, [sp, #72]
  44c6d8:	b	44c210 <_obstack_memory_used@@Base+0x52a4>
  44c6dc:	cmp	w0, #0x74
  44c6e0:	b.ne	44c0b8 <_obstack_memory_used@@Base+0x514c>  // b.any
  44c6e4:	ldr	w20, [x19, #76]
  44c6e8:	mov	w0, #0x1                   	// #1
  44c6ec:	str	w0, [x19, #76]
  44c6f0:	mov	x0, x19
  44c6f4:	bl	44aa70 <_obstack_memory_used@@Base+0x3b04>
  44c6f8:	str	w20, [x19, #76]
  44c6fc:	mov	x2, x0
  44c700:	mov	x3, #0x0                   	// #0
  44c704:	mov	x0, x19
  44c708:	mov	w1, #0x43                  	// #67
  44c70c:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44c710:	str	x0, [sp, #72]
  44c714:	mov	x20, x0
  44c718:	cbz	x0, 44c0b8 <_obstack_memory_used@@Base+0x514c>
  44c71c:	ldr	x0, [x19, #24]
  44c720:	ldrb	w1, [x0]
  44c724:	cbz	w1, 44c0b8 <_obstack_memory_used@@Base+0x514c>
  44c728:	add	x1, x0, #0x1
  44c72c:	str	x1, [x19, #24]
  44c730:	ldrb	w0, [x0]
  44c734:	cmp	w0, #0x45
  44c738:	b.ne	44c0b8 <_obstack_memory_used@@Base+0x514c>  // b.any
  44c73c:	b	44c214 <_obstack_memory_used@@Base+0x52a8>
  44c740:	cmp	w0, #0x6e
  44c744:	b.eq	44cad0 <_obstack_memory_used@@Base+0x5b64>  // b.none
  44c748:	cmp	w0, #0x70
  44c74c:	b.ne	44c828 <_obstack_memory_used@@Base+0x58bc>  // b.any
  44c750:	mov	x0, x19
  44c754:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  44c758:	mov	x3, #0x0                   	// #0
  44c75c:	mov	x2, x0
  44c760:	mov	w1, #0x4b                  	// #75
  44c764:	mov	x0, x19
  44c768:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44c76c:	mov	x20, x0
  44c770:	str	x0, [sp, #72]
  44c774:	b	44c210 <_obstack_memory_used@@Base+0x52a4>
  44c778:	cmp	w0, #0x46
  44c77c:	b.ne	44c0b8 <_obstack_memory_used@@Base+0x514c>  // b.any
  44c780:	ldp	w0, w1, [x19, #40]
  44c784:	cmp	w0, w1
  44c788:	b.ge	44cc44 <_obstack_memory_used@@Base+0x5cd8>  // b.tcont
  44c78c:	mov	w2, #0x18                  	// #24
  44c790:	add	w3, w0, #0x1
  44c794:	ldr	x1, [x19, #32]
  44c798:	smull	x0, w0, w2
  44c79c:	mov	w2, #0x2c                  	// #44
  44c7a0:	add	x20, x1, x0
  44c7a4:	str	wzr, [x20, #4]
  44c7a8:	str	w3, [x19, #40]
  44c7ac:	str	x20, [sp, #72]
  44c7b0:	str	w2, [x1, x0]
  44c7b4:	ldrb	w0, [x4, #2]
  44c7b8:	sub	w0, w0, #0x30
  44c7bc:	and	w0, w0, #0xff
  44c7c0:	cmp	w0, #0x9
  44c7c4:	cset	w1, ls  // ls = plast
  44c7c8:	strh	w1, [x20, #16]
  44c7cc:	b.hi	44c7dc <_obstack_memory_used@@Base+0x5870>  // b.pmore
  44c7d0:	add	x0, x19, #0x18
  44c7d4:	bl	4497e8 <_obstack_memory_used@@Base+0x287c>
  44c7d8:	ldr	x20, [sp, #72]
  44c7dc:	mov	x0, x19
  44c7e0:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  44c7e4:	str	x0, [x20, #8]
  44c7e8:	ldr	x1, [sp, #72]
  44c7ec:	ldr	x0, [x1, #8]
  44c7f0:	cbz	x0, 44c0b8 <_obstack_memory_used@@Base+0x514c>
  44c7f4:	add	x0, x19, #0x18
  44c7f8:	bl	4497e8 <_obstack_memory_used@@Base+0x287c>
  44c7fc:	ldr	x1, [x19, #24]
  44c800:	ldrb	w0, [x1]
  44c804:	cbz	w0, 44c814 <_obstack_memory_used@@Base+0x58a8>
  44c808:	add	x0, x1, #0x1
  44c80c:	str	x0, [x19, #24]
  44c810:	ldrb	w0, [x1]
  44c814:	ldr	x20, [sp, #72]
  44c818:	cmp	w0, #0x73
  44c81c:	cset	w0, eq  // eq = none
  44c820:	strh	w0, [x20, #18]
  44c824:	b	44c0bc <_obstack_memory_used@@Base+0x5150>
  44c828:	cmp	w0, #0x69
  44c82c:	b.ne	44c0b8 <_obstack_memory_used@@Base+0x514c>  // b.any
  44c830:	ldp	w0, w1, [x19, #40]
  44c834:	cmp	w0, w1
  44c838:	b.ge	44cc58 <_obstack_memory_used@@Base+0x5cec>  // b.tcont
  44c83c:	mov	w1, #0x18                  	// #24
  44c840:	add	w5, w0, #0x1
  44c844:	ldr	x3, [x19, #32]
  44c848:	smull	x0, w0, w1
  44c84c:	ldr	w2, [x19, #72]
  44c850:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x3f094>
  44c854:	add	x1, x1, #0xdf0
  44c858:	add	x20, x3, x0
  44c85c:	add	x1, x1, #0x588
  44c860:	mov	w4, #0x27                  	// #39
  44c864:	str	wzr, [x20, #4]
  44c868:	add	w2, w2, #0x8
  44c86c:	str	w5, [x19, #40]
  44c870:	str	w4, [x3, x0]
  44c874:	str	x1, [x20, #8]
  44c878:	str	w2, [x19, #72]
  44c87c:	b	44c0bc <_obstack_memory_used@@Base+0x5150>
  44c880:	cmp	w0, #0x64
  44c884:	b.ne	44c0b8 <_obstack_memory_used@@Base+0x514c>  // b.any
  44c888:	ldp	w0, w1, [x19, #40]
  44c88c:	cmp	w0, w1
  44c890:	b.ge	44cc58 <_obstack_memory_used@@Base+0x5cec>  // b.tcont
  44c894:	mov	w1, #0x18                  	// #24
  44c898:	add	w5, w0, #0x1
  44c89c:	ldr	x3, [x19, #32]
  44c8a0:	smull	x0, w0, w1
  44c8a4:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x3f094>
  44c8a8:	add	x1, x1, #0xdf0
  44c8ac:	ldr	w2, [x19, #72]
  44c8b0:	add	x1, x1, #0x4e8
  44c8b4:	add	x20, x3, x0
  44c8b8:	mov	w4, #0x27                  	// #39
  44c8bc:	b	44c360 <_obstack_memory_used@@Base+0x53f4>
  44c8c0:	ldr	w0, [x19, #80]
  44c8c4:	cbnz	w0, 44c9b8 <_obstack_memory_used@@Base+0x5a4c>
  44c8c8:	cbz	x20, 44c190 <_obstack_memory_used@@Base+0x5224>
  44c8cc:	ldp	w0, w1, [x19, #56]
  44c8d0:	cmp	w0, w1
  44c8d4:	b.ge	44c190 <_obstack_memory_used@@Base+0x5224>  // b.tcont
  44c8d8:	ldr	x2, [x19, #48]
  44c8dc:	add	w1, w0, #0x1
  44c8e0:	mov	x3, #0x0                   	// #0
  44c8e4:	str	x20, [x2, w0, sxtw #3]
  44c8e8:	str	w1, [x19, #56]
  44c8ec:	ldrb	w0, [x21]
  44c8f0:	sub	w0, w0, #0x49
  44c8f4:	and	w0, w0, #0xff
  44c8f8:	cmp	w0, #0x1
  44c8fc:	b.hi	44c914 <_obstack_memory_used@@Base+0x59a8>  // b.pmore
  44c900:	add	x21, x21, #0x1
  44c904:	str	x21, [x19, #24]
  44c908:	mov	x0, x19
  44c90c:	bl	44b248 <_obstack_memory_used@@Base+0x42dc>
  44c910:	mov	x3, x0
  44c914:	mov	x2, x20
  44c918:	mov	x0, x19
  44c91c:	mov	w1, #0x4                   	// #4
  44c920:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44c924:	mov	x20, x0
  44c928:	str	x0, [sp, #72]
  44c92c:	ldp	x21, x22, [sp, #32]
  44c930:	b	44c210 <_obstack_memory_used@@Base+0x52a4>
  44c934:	mov	x20, #0x0                   	// #0
  44c938:	b	44c5a0 <_obstack_memory_used@@Base+0x5634>
  44c93c:	mov	x0, x19
  44c940:	bl	44bb00 <_obstack_memory_used@@Base+0x4b94>
  44c944:	str	x0, [sp, #72]
  44c948:	mov	x20, x0
  44c94c:	cbz	x0, 44c0b8 <_obstack_memory_used@@Base+0x514c>
  44c950:	ldr	w0, [x0]
  44c954:	cmp	w0, #0x18
  44c958:	b.ne	44c214 <_obstack_memory_used@@Base+0x52a8>  // b.any
  44c95c:	b	44c0bc <_obstack_memory_used@@Base+0x5150>
  44c960:	add	x1, x1, #0x1
  44c964:	str	x1, [x19, #24]
  44c968:	mov	x0, x19
  44c96c:	bl	44b248 <_obstack_memory_used@@Base+0x42dc>
  44c970:	mov	x3, x0
  44c974:	mov	x2, x20
  44c978:	mov	x0, x19
  44c97c:	mov	w1, #0x4                   	// #4
  44c980:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44c984:	str	x0, [sp, #72]
  44c988:	b	44c3a4 <_obstack_memory_used@@Base+0x5438>
  44c98c:	ldr	w20, [x19, #76]
  44c990:	mov	w0, #0x1                   	// #1
  44c994:	str	w0, [x19, #76]
  44c998:	mov	x0, x19
  44c99c:	bl	44aa70 <_obstack_memory_used@@Base+0x3b04>
  44c9a0:	str	w20, [x19, #76]
  44c9a4:	mov	x20, x0
  44c9a8:	cbz	x0, 44c0b8 <_obstack_memory_used@@Base+0x514c>
  44c9ac:	ldr	x1, [x19, #24]
  44c9b0:	ldrb	w0, [x1]
  44c9b4:	b	44c594 <_obstack_memory_used@@Base+0x5628>
  44c9b8:	ldr	w22, [x19, #56]
  44c9bc:	add	x0, x21, #0x1
  44c9c0:	ldr	w20, [x19, #72]
  44c9c4:	str	x23, [sp, #48]
  44c9c8:	str	x0, [x19, #24]
  44c9cc:	mov	x0, x19
  44c9d0:	ldr	w23, [x19, #40]
  44c9d4:	bl	44b248 <_obstack_memory_used@@Base+0x42dc>
  44c9d8:	ldr	x1, [x19, #24]
  44c9dc:	ldrb	w1, [x1]
  44c9e0:	cmp	w1, #0x49
  44c9e4:	b.eq	44cbc0 <_obstack_memory_used@@Base+0x5c54>  // b.none
  44c9e8:	str	x21, [x19, #24]
  44c9ec:	str	w23, [x19, #40]
  44c9f0:	str	w22, [x19, #56]
  44c9f4:	str	w20, [x19, #72]
  44c9f8:	ldp	x21, x22, [sp, #32]
  44c9fc:	ldr	x23, [sp, #48]
  44ca00:	ldr	x20, [sp, #72]
  44ca04:	b	44c210 <_obstack_memory_used@@Base+0x52a4>
  44ca08:	ldp	w0, w1, [x19, #40]
  44ca0c:	cmp	w0, w1
  44ca10:	b.ge	44cc58 <_obstack_memory_used@@Base+0x5cec>  // b.tcont
  44ca14:	mov	w1, #0x18                  	// #24
  44ca18:	add	w5, w0, #0x1
  44ca1c:	ldr	x3, [x19, #32]
  44ca20:	smull	x0, w0, w1
  44ca24:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x3f094>
  44ca28:	add	x1, x1, #0xdf0
  44ca2c:	ldr	w2, [x19, #72]
  44ca30:	add	x1, x1, #0x568
  44ca34:	add	x20, x3, x0
  44ca38:	mov	w4, #0x27                  	// #39
  44ca3c:	b	44c864 <_obstack_memory_used@@Base+0x58f8>
  44ca40:	ldp	w0, w1, [x19, #40]
  44ca44:	cmp	w0, w1
  44ca48:	b.ge	44c0b8 <_obstack_memory_used@@Base+0x514c>  // b.tcont
  44ca4c:	mov	w3, #0x18                  	// #24
  44ca50:	add	w1, w0, #0x1
  44ca54:	ldr	x2, [x19, #32]
  44ca58:	smull	x0, w0, w3
  44ca5c:	str	w1, [x19, #40]
  44ca60:	mov	w3, #0xe                   	// #14
  44ca64:	add	x20, x2, x0
  44ca68:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  44ca6c:	add	x1, x1, #0xf60
  44ca70:	str	xzr, [x2, x0]
  44ca74:	str	x1, [x20, #8]
  44ca78:	str	w3, [x20, #16]
  44ca7c:	b	44c0bc <_obstack_memory_used@@Base+0x5150>
  44ca80:	ldp	w0, w1, [x19, #40]
  44ca84:	cmp	w0, w1
  44ca88:	b.ge	44cc58 <_obstack_memory_used@@Base+0x5cec>  // b.tcont
  44ca8c:	mov	w1, #0x18                  	// #24
  44ca90:	add	w5, w0, #0x1
  44ca94:	ldr	x3, [x19, #32]
  44ca98:	smull	x0, w0, w1
  44ca9c:	ldr	w2, [x19, #72]
  44caa0:	mov	w4, #0x27                  	// #39
  44caa4:	add	x20, x3, x0
  44caa8:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x3f094>
  44caac:	add	x1, x1, #0xdf0
  44cab0:	add	w2, w2, #0x4
  44cab4:	add	x1, x1, #0x528
  44cab8:	str	wzr, [x20, #4]
  44cabc:	str	w5, [x19, #40]
  44cac0:	str	w4, [x3, x0]
  44cac4:	str	x1, [x20, #8]
  44cac8:	str	w2, [x19, #72]
  44cacc:	b	44c0bc <_obstack_memory_used@@Base+0x5150>
  44cad0:	ldp	w0, w1, [x19, #40]
  44cad4:	cmp	w0, w1
  44cad8:	b.ge	44cc58 <_obstack_memory_used@@Base+0x5cec>  // b.tcont
  44cadc:	mov	w1, #0x18                  	// #24
  44cae0:	add	w5, w0, #0x1
  44cae4:	ldr	x3, [x19, #32]
  44cae8:	smull	x0, w0, w1
  44caec:	ldr	w2, [x19, #72]
  44caf0:	mov	w4, #0x27                  	// #39
  44caf4:	add	x20, x3, x0
  44caf8:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x3f094>
  44cafc:	add	x1, x1, #0xdf0
  44cb00:	add	w2, w2, #0x11
  44cb04:	add	x1, x1, #0x5a8
  44cb08:	str	wzr, [x20, #4]
  44cb0c:	str	w5, [x19, #40]
  44cb10:	str	w4, [x3, x0]
  44cb14:	str	x1, [x20, #8]
  44cb18:	str	w2, [x19, #72]
  44cb1c:	b	44c0bc <_obstack_memory_used@@Base+0x5150>
  44cb20:	ldp	w0, w1, [x19, #40]
  44cb24:	cmp	w0, w1
  44cb28:	b.ge	44cc58 <_obstack_memory_used@@Base+0x5cec>  // b.tcont
  44cb2c:	mov	w1, #0x18                  	// #24
  44cb30:	add	w5, w0, #0x1
  44cb34:	ldr	x3, [x19, #32]
  44cb38:	smull	x0, w0, w1
  44cb3c:	ldr	w2, [x19, #72]
  44cb40:	mov	w4, #0x27                  	// #39
  44cb44:	add	x20, x3, x0
  44cb48:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x3f094>
  44cb4c:	add	x1, x1, #0xdf0
  44cb50:	add	w2, w2, #0xa
  44cb54:	add	x1, x1, #0x508
  44cb58:	str	wzr, [x20, #4]
  44cb5c:	str	w5, [x19, #40]
  44cb60:	str	w4, [x3, x0]
  44cb64:	str	x1, [x20, #8]
  44cb68:	str	w2, [x19, #72]
  44cb6c:	b	44c0bc <_obstack_memory_used@@Base+0x5150>
  44cb70:	ldp	w0, w1, [x19, #40]
  44cb74:	cmp	w0, w1
  44cb78:	b.ge	44cc58 <_obstack_memory_used@@Base+0x5cec>  // b.tcont
  44cb7c:	mov	w1, #0x18                  	// #24
  44cb80:	add	w5, w0, #0x1
  44cb84:	ldr	x3, [x19, #32]
  44cb88:	smull	x0, w0, w1
  44cb8c:	ldr	w2, [x19, #72]
  44cb90:	mov	w4, #0x27                  	// #39
  44cb94:	add	x20, x3, x0
  44cb98:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x3f094>
  44cb9c:	add	x1, x1, #0xdf0
  44cba0:	add	w2, w2, #0x7
  44cba4:	add	x1, x1, #0x548
  44cba8:	str	wzr, [x20, #4]
  44cbac:	str	w5, [x19, #40]
  44cbb0:	str	w4, [x3, x0]
  44cbb4:	str	x1, [x20, #8]
  44cbb8:	str	w2, [x19, #72]
  44cbbc:	b	44c0bc <_obstack_memory_used@@Base+0x5150>
  44cbc0:	ldr	x2, [sp, #72]
  44cbc4:	cbz	x2, 44cc38 <_obstack_memory_used@@Base+0x5ccc>
  44cbc8:	ldp	w4, w1, [x19, #56]
  44cbcc:	cmp	w4, w1
  44cbd0:	b.ge	44cc38 <_obstack_memory_used@@Base+0x5ccc>  // b.tcont
  44cbd4:	ldr	x6, [x19, #48]
  44cbd8:	add	w5, w4, #0x1
  44cbdc:	mov	x3, x0
  44cbe0:	mov	w1, #0x4                   	// #4
  44cbe4:	mov	x0, x19
  44cbe8:	str	x2, [x6, w4, sxtw #3]
  44cbec:	str	w5, [x19, #56]
  44cbf0:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44cbf4:	mov	x20, x0
  44cbf8:	str	x0, [sp, #72]
  44cbfc:	ldp	x21, x22, [sp, #32]
  44cc00:	ldr	x23, [sp, #48]
  44cc04:	b	44c210 <_obstack_memory_used@@Base+0x52a4>
  44cc08:	add	x4, x4, #0x3
  44cc0c:	stp	x21, x22, [sp, #32]
  44cc10:	mov	w1, #0x1                   	// #1
  44cc14:	ldr	w21, [x19, #76]
  44cc18:	mov	x0, x19
  44cc1c:	str	x4, [x19, #24]
  44cc20:	str	w1, [x19, #76]
  44cc24:	bl	44aa70 <_obstack_memory_used@@Base+0x3b04>
  44cc28:	mov	x20, x0
  44cc2c:	str	w21, [x19, #76]
  44cc30:	ldp	x21, x22, [sp, #32]
  44cc34:	b	44c698 <_obstack_memory_used@@Base+0x572c>
  44cc38:	ldp	x21, x22, [sp, #32]
  44cc3c:	ldr	x23, [sp, #48]
  44cc40:	b	44c0b8 <_obstack_memory_used@@Base+0x514c>
  44cc44:	mov	x0, #0x0                   	// #0
  44cc48:	stp	x21, x22, [sp, #32]
  44cc4c:	str	x23, [sp, #48]
  44cc50:	str	wzr, [x0]
  44cc54:	brk	#0x3e8
  44cc58:	mov	x0, #0x0                   	// #0
  44cc5c:	str	xzr, [sp, #72]
  44cc60:	stp	x21, x22, [sp, #32]
  44cc64:	str	x23, [sp, #48]
  44cc68:	ldr	x0, [x0, #8]
  44cc6c:	brk	#0x3e8
  44cc70:	stp	x29, x30, [sp, #-32]!
  44cc74:	mov	x29, sp
  44cc78:	ldr	x1, [x0, #24]
  44cc7c:	stp	x19, x20, [sp, #16]
  44cc80:	mov	x19, x0
  44cc84:	ldrb	w10, [x1]
  44cc88:	cbz	w10, 44cd4c <_obstack_memory_used@@Base+0x5de0>
  44cc8c:	add	x2, x1, #0x1
  44cc90:	str	x2, [x0, #24]
  44cc94:	ldrb	w10, [x1, #1]
  44cc98:	ldrb	w8, [x1]
  44cc9c:	cbnz	w10, 44cd54 <_obstack_memory_used@@Base+0x5de8>
  44cca0:	adrp	x5, 486000 <_obstack_memory_used@@Base+0x3f094>
  44cca4:	add	x5, x5, #0xdf0
  44cca8:	add	x5, x5, #0x5c8
  44ccac:	mov	w4, #0x43                  	// #67
  44ccb0:	mov	w2, #0x0                   	// #0
  44ccb4:	mov	w7, #0x18                  	// #24
  44ccb8:	sub	w1, w4, w2
  44ccbc:	add	w1, w1, w1, lsr #31
  44ccc0:	add	w1, w2, w1, asr #1
  44ccc4:	smull	x3, w1, w7
  44ccc8:	add	x9, x5, x3
  44cccc:	ldr	x3, [x5, x3]
  44ccd0:	ldrb	w6, [x3]
  44ccd4:	cmp	w6, w8
  44ccd8:	b.eq	44ccfc <_obstack_memory_used@@Base+0x5d90>  // b.none
  44ccdc:	b.ls	44cd44 <_obstack_memory_used@@Base+0x5dd8>  // b.plast
  44cce0:	mov	w4, w1
  44cce4:	cmp	w2, w4
  44cce8:	b.ne	44ccb8 <_obstack_memory_used@@Base+0x5d4c>  // b.any
  44ccec:	mov	x0, #0x0                   	// #0
  44ccf0:	ldp	x19, x20, [sp, #16]
  44ccf4:	ldp	x29, x30, [sp], #32
  44ccf8:	ret
  44ccfc:	ldrb	w3, [x3, #1]
  44cd00:	cmp	w3, w10
  44cd04:	b.ne	44ccdc <_obstack_memory_used@@Base+0x5d70>  // b.any
  44cd08:	ldp	w0, w1, [x19, #40]
  44cd0c:	cmp	w0, w1
  44cd10:	b.ge	44ccec <_obstack_memory_used@@Base+0x5d80>  // b.tcont
  44cd14:	ldr	x2, [x19, #32]
  44cd18:	smull	x7, w0, w7
  44cd1c:	add	w1, w0, #0x1
  44cd20:	mov	w3, #0x32                  	// #50
  44cd24:	add	x0, x2, x7
  44cd28:	str	wzr, [x0, #4]
  44cd2c:	str	w1, [x19, #40]
  44cd30:	str	w3, [x2, x7]
  44cd34:	str	x9, [x0, #8]
  44cd38:	ldp	x19, x20, [sp, #16]
  44cd3c:	ldp	x29, x30, [sp], #32
  44cd40:	ret
  44cd44:	add	w2, w1, #0x1
  44cd48:	b	44cce4 <_obstack_memory_used@@Base+0x5d78>
  44cd4c:	mov	w8, #0x0                   	// #0
  44cd50:	b	44cca0 <_obstack_memory_used@@Base+0x5d34>
  44cd54:	add	x2, x1, #0x2
  44cd58:	str	x2, [x0, #24]
  44cd5c:	cmp	w8, #0x76
  44cd60:	ldrb	w10, [x1, #1]
  44cd64:	b.ne	44cdc0 <_obstack_memory_used@@Base+0x5e54>  // b.any
  44cd68:	sub	w11, w10, #0x30
  44cd6c:	and	w1, w11, #0xff
  44cd70:	cmp	w1, #0x9
  44cd74:	b.hi	44cca0 <_obstack_memory_used@@Base+0x5d34>  // b.pmore
  44cd78:	bl	449a18 <_obstack_memory_used@@Base+0x2aac>
  44cd7c:	mov	x2, x0
  44cd80:	ldp	w1, w0, [x19, #40]
  44cd84:	cmp	w1, w0
  44cd88:	b.ge	44ccec <_obstack_memory_used@@Base+0x5d80>  // b.tcont
  44cd8c:	mov	w0, #0x18                  	// #24
  44cd90:	add	w4, w1, #0x1
  44cd94:	ldr	x3, [x19, #32]
  44cd98:	smull	x1, w1, w0
  44cd9c:	add	x0, x3, x1
  44cda0:	str	wzr, [x0, #4]
  44cda4:	str	w4, [x19, #40]
  44cda8:	cbz	x2, 44ccec <_obstack_memory_used@@Base+0x5d80>
  44cdac:	mov	x4, #0x33                  	// #51
  44cdb0:	str	x4, [x3, x1]
  44cdb4:	str	w11, [x0, #8]
  44cdb8:	str	x2, [x0, #16]
  44cdbc:	b	44ccf0 <_obstack_memory_used@@Base+0x5d84>
  44cdc0:	cmp	w10, #0x76
  44cdc4:	mov	w1, #0x63                  	// #99
  44cdc8:	ccmp	w8, w1, #0x0, eq  // eq = none
  44cdcc:	b.ne	44cca0 <_obstack_memory_used@@Base+0x5d34>  // b.any
  44cdd0:	ldp	w1, w20, [x0, #76]
  44cdd4:	cmp	w1, #0x0
  44cdd8:	cset	w1, eq  // eq = none
  44cddc:	str	w1, [x0, #80]
  44cde0:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  44cde4:	mov	x2, x0
  44cde8:	ldr	w1, [x19, #80]
  44cdec:	mov	x3, #0x0                   	// #0
  44cdf0:	cbz	w1, 44ce10 <_obstack_memory_used@@Base+0x5ea4>
  44cdf4:	mov	x0, x19
  44cdf8:	mov	w1, #0x35                  	// #53
  44cdfc:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44ce00:	str	w20, [x19, #80]
  44ce04:	ldp	x19, x20, [sp, #16]
  44ce08:	ldp	x29, x30, [sp], #32
  44ce0c:	ret
  44ce10:	mov	x0, x19
  44ce14:	mov	w1, #0x34                  	// #52
  44ce18:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44ce1c:	str	w20, [x19, #80]
  44ce20:	b	44ce04 <_obstack_memory_used@@Base+0x5e98>
  44ce24:	nop
  44ce28:	stp	x29, x30, [sp, #-64]!
  44ce2c:	mov	x29, sp
  44ce30:	stp	x19, x20, [sp, #16]
  44ce34:	mov	x19, x0
  44ce38:	mov	w0, #0x2e                  	// #46
  44ce3c:	str	xzr, [sp, #56]
  44ce40:	ldr	x2, [x19, #24]
  44ce44:	ldrb	w1, [x2]
  44ce48:	cmp	w1, #0x45
  44ce4c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  44ce50:	ccmp	w1, w0, #0x4, ne  // ne = any
  44ce54:	b.eq	44cee8 <_obstack_memory_used@@Base+0x5f7c>  // b.none
  44ce58:	add	x20, sp, #0x38
  44ce5c:	stp	x21, x22, [sp, #32]
  44ce60:	mov	w22, w0
  44ce64:	mov	w21, #0x4f                  	// #79
  44ce68:	cmp	w1, #0x52
  44ce6c:	mov	x0, x19
  44ce70:	ccmp	w1, w21, #0x4, ne  // ne = any
  44ce74:	b.ne	44ce84 <_obstack_memory_used@@Base+0x5f18>  // b.any
  44ce78:	ldrb	w1, [x2, #1]
  44ce7c:	cmp	w1, #0x45
  44ce80:	b.eq	44cec4 <_obstack_memory_used@@Base+0x5f58>  // b.none
  44ce84:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  44ce88:	mov	x2, x0
  44ce8c:	mov	x3, #0x0                   	// #0
  44ce90:	mov	x0, x19
  44ce94:	mov	w1, #0x2e                  	// #46
  44ce98:	cbz	x2, 44cee4 <_obstack_memory_used@@Base+0x5f78>
  44ce9c:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44cea0:	str	x0, [x20]
  44cea4:	add	x20, x0, #0x10
  44cea8:	cbz	x0, 44cee4 <_obstack_memory_used@@Base+0x5f78>
  44ceac:	ldr	x2, [x19, #24]
  44ceb0:	ldrb	w1, [x2]
  44ceb4:	cmp	w1, #0x45
  44ceb8:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  44cebc:	ccmp	w1, w22, #0x4, ne  // ne = any
  44cec0:	b.ne	44ce68 <_obstack_memory_used@@Base+0x5efc>  // b.any
  44cec4:	ldr	x0, [sp, #56]
  44cec8:	cbz	x0, 44cee4 <_obstack_memory_used@@Base+0x5f78>
  44cecc:	ldr	x1, [x0, #16]
  44ced0:	cbz	x1, 44cef8 <_obstack_memory_used@@Base+0x5f8c>
  44ced4:	ldp	x21, x22, [sp, #32]
  44ced8:	ldp	x19, x20, [sp, #16]
  44cedc:	ldp	x29, x30, [sp], #64
  44cee0:	ret
  44cee4:	ldp	x21, x22, [sp, #32]
  44cee8:	mov	x0, #0x0                   	// #0
  44ceec:	ldp	x19, x20, [sp, #16]
  44cef0:	ldp	x29, x30, [sp], #64
  44cef4:	ret
  44cef8:	ldr	x1, [x0, #8]
  44cefc:	ldr	w2, [x1]
  44cf00:	cmp	w2, #0x27
  44cf04:	b.ne	44ced4 <_obstack_memory_used@@Base+0x5f68>  // b.any
  44cf08:	ldr	x1, [x1, #8]
  44cf0c:	ldr	w2, [x1, #28]
  44cf10:	cmp	w2, #0x9
  44cf14:	b.ne	44ced4 <_obstack_memory_used@@Base+0x5f68>  // b.any
  44cf18:	ldr	w2, [x1, #8]
  44cf1c:	ldr	w1, [x19, #72]
  44cf20:	ldp	x21, x22, [sp, #32]
  44cf24:	sub	w1, w1, w2
  44cf28:	str	w1, [x19, #72]
  44cf2c:	str	xzr, [x0, #8]
  44cf30:	b	44ced8 <_obstack_memory_used@@Base+0x5f6c>
  44cf34:	nop
  44cf38:	stp	x29, x30, [sp, #-96]!
  44cf3c:	cmp	w2, #0x0
  44cf40:	mov	x29, sp
  44cf44:	stp	x19, x20, [sp, #16]
  44cf48:	mov	x19, x0
  44cf4c:	mov	w0, #0x1b                  	// #27
  44cf50:	stp	x21, x22, [sp, #32]
  44cf54:	mov	x20, x1
  44cf58:	mov	w22, #0x1c                  	// #28
  44cf5c:	ldr	x4, [x19, #24]
  44cf60:	stp	x23, x24, [sp, #48]
  44cf64:	mov	w23, #0x1d                  	// #29
  44cf68:	stp	x25, x26, [sp, #64]
  44cf6c:	mov	w25, #0x1e                  	// #30
  44cf70:	csel	w25, w25, w0, ne  // ne = any
  44cf74:	ldrb	w5, [x4]
  44cf78:	mov	w0, #0x1a                  	// #26
  44cf7c:	csel	w23, w23, w0, ne  // ne = any
  44cf80:	mov	w0, #0x19                  	// #25
  44cf84:	mov	w24, w2
  44cf88:	csel	w22, w22, w0, ne  // ne = any
  44cf8c:	mov	x21, x1
  44cf90:	mov	x0, x4
  44cf94:	mov	w26, #0x1                   	// #1
  44cf98:	bl	449f28 <_obstack_memory_used@@Base+0x2fbc>
  44cf9c:	cbz	w0, 44d0b8 <_obstack_memory_used@@Base+0x614c>
  44cfa0:	add	x0, x4, #0x1
  44cfa4:	str	x0, [x19, #24]
  44cfa8:	cmp	w5, #0x72
  44cfac:	b.eq	44d078 <_obstack_memory_used@@Base+0x610c>  // b.none
  44cfb0:	cmp	w5, #0x56
  44cfb4:	b.eq	44d118 <_obstack_memory_used@@Base+0x61ac>  // b.none
  44cfb8:	cmp	w5, #0x4b
  44cfbc:	b.eq	44d130 <_obstack_memory_used@@Base+0x61c4>  // b.none
  44cfc0:	ldrb	w0, [x4, #1]
  44cfc4:	cbz	w0, 44d058 <_obstack_memory_used@@Base+0x60ec>
  44cfc8:	add	x0, x4, #0x2
  44cfcc:	str	x0, [x19, #24]
  44cfd0:	ldrb	w0, [x4, #1]
  44cfd4:	cmp	w0, #0x78
  44cfd8:	b.eq	44d148 <_obstack_memory_used@@Base+0x61dc>  // b.none
  44cfdc:	and	w1, w0, #0xffffffdf
  44cfe0:	cmp	w1, #0x4f
  44cfe4:	and	w1, w1, #0xff
  44cfe8:	b.ne	44d160 <_obstack_memory_used@@Base+0x61f4>  // b.any
  44cfec:	ldr	w2, [x19, #72]
  44cff0:	cmp	w0, #0x4f
  44cff4:	add	w0, w2, #0x9
  44cff8:	str	w0, [x19, #72]
  44cffc:	b.ne	44d1a4 <_obstack_memory_used@@Base+0x6238>  // b.any
  44d000:	str	x27, [sp, #80]
  44d004:	mov	x0, x19
  44d008:	ldr	w27, [x19, #76]
  44d00c:	str	w26, [x19, #76]
  44d010:	bl	44aa70 <_obstack_memory_used@@Base+0x3b04>
  44d014:	str	w27, [x19, #76]
  44d018:	mov	x3, x0
  44d01c:	cbz	x0, 44d1bc <_obstack_memory_used@@Base+0x6250>
  44d020:	ldr	x0, [x19, #24]
  44d024:	ldrb	w1, [x0]
  44d028:	cmp	w1, #0x45
  44d02c:	b.ne	44d1bc <_obstack_memory_used@@Base+0x6250>  // b.any
  44d030:	add	x0, x0, #0x1
  44d034:	mov	w1, #0x4f                  	// #79
  44d038:	ldr	x27, [sp, #80]
  44d03c:	str	x0, [x19, #24]
  44d040:	mov	x2, #0x0                   	// #0
  44d044:	mov	x0, x19
  44d048:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44d04c:	str	x0, [x20]
  44d050:	cbnz	x0, 44d0a0 <_obstack_memory_used@@Base+0x6134>
  44d054:	nop
  44d058:	mov	x20, #0x0                   	// #0
  44d05c:	mov	x0, x20
  44d060:	ldp	x19, x20, [sp, #16]
  44d064:	ldp	x21, x22, [sp, #32]
  44d068:	ldp	x23, x24, [sp, #48]
  44d06c:	ldp	x25, x26, [sp, #64]
  44d070:	ldp	x29, x30, [sp], #96
  44d074:	ret
  44d078:	ldr	w0, [x19, #72]
  44d07c:	mov	w1, w22
  44d080:	mov	x3, #0x0                   	// #0
  44d084:	add	w0, w0, #0x9
  44d088:	str	w0, [x19, #72]
  44d08c:	mov	x0, x19
  44d090:	mov	x2, #0x0                   	// #0
  44d094:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44d098:	str	x0, [x20]
  44d09c:	cbz	x0, 44d058 <_obstack_memory_used@@Base+0x60ec>
  44d0a0:	ldr	x4, [x19, #24]
  44d0a4:	add	x20, x0, #0x8
  44d0a8:	mov	x0, x4
  44d0ac:	ldrb	w5, [x4]
  44d0b0:	bl	449f28 <_obstack_memory_used@@Base+0x2fbc>
  44d0b4:	cbnz	w0, 44cfa0 <_obstack_memory_used@@Base+0x6034>
  44d0b8:	cmp	w5, #0x46
  44d0bc:	eor	w24, w24, #0x1
  44d0c0:	cset	w0, eq  // eq = none
  44d0c4:	tst	w24, w0
  44d0c8:	b.eq	44d05c <_obstack_memory_used@@Base+0x60f0>  // b.none
  44d0cc:	cmp	x20, x21
  44d0d0:	b.eq	44d05c <_obstack_memory_used@@Base+0x60f0>  // b.none
  44d0d4:	mov	w3, #0x1d                  	// #29
  44d0d8:	mov	w2, #0x1e                  	// #30
  44d0dc:	mov	w1, #0x1c                  	// #28
  44d0e0:	b	44d0f8 <_obstack_memory_used@@Base+0x618c>
  44d0e4:	cmp	w0, #0x19
  44d0e8:	b.eq	44d1b4 <_obstack_memory_used@@Base+0x6248>  // b.none
  44d0ec:	add	x21, x21, #0x8
  44d0f0:	cmp	x20, x21
  44d0f4:	b.eq	44d05c <_obstack_memory_used@@Base+0x60f0>  // b.none
  44d0f8:	ldr	x21, [x21]
  44d0fc:	ldr	w0, [x21]
  44d100:	cmp	w0, #0x1a
  44d104:	b.eq	44d1ac <_obstack_memory_used@@Base+0x6240>  // b.none
  44d108:	cmp	w0, #0x1b
  44d10c:	b.ne	44d0e4 <_obstack_memory_used@@Base+0x6178>  // b.any
  44d110:	str	w2, [x21]
  44d114:	b	44d0ec <_obstack_memory_used@@Base+0x6180>
  44d118:	ldr	w0, [x19, #72]
  44d11c:	mov	w1, w23
  44d120:	mov	x3, #0x0                   	// #0
  44d124:	add	w0, w0, #0x9
  44d128:	str	w0, [x19, #72]
  44d12c:	b	44d08c <_obstack_memory_used@@Base+0x6120>
  44d130:	ldr	w0, [x19, #72]
  44d134:	mov	w1, w25
  44d138:	mov	x3, #0x0                   	// #0
  44d13c:	add	w0, w0, #0x6
  44d140:	str	w0, [x19, #72]
  44d144:	b	44d08c <_obstack_memory_used@@Base+0x6120>
  44d148:	ldr	w0, [x19, #72]
  44d14c:	mov	x3, #0x0                   	// #0
  44d150:	mov	w1, #0x4d                  	// #77
  44d154:	add	w0, w0, #0x11
  44d158:	str	w0, [x19, #72]
  44d15c:	b	44d08c <_obstack_memory_used@@Base+0x6120>
  44d160:	cmp	w0, #0x77
  44d164:	b.ne	44d058 <_obstack_memory_used@@Base+0x60ec>  // b.any
  44d168:	ldr	w1, [x19, #72]
  44d16c:	mov	x0, x19
  44d170:	add	w1, w1, #0x6
  44d174:	str	w1, [x19, #72]
  44d178:	bl	44ce28 <_obstack_memory_used@@Base+0x5ebc>
  44d17c:	mov	x3, x0
  44d180:	cbz	x0, 44d058 <_obstack_memory_used@@Base+0x60ec>
  44d184:	ldr	x0, [x19, #24]
  44d188:	ldrb	w1, [x0]
  44d18c:	cmp	w1, #0x45
  44d190:	b.ne	44d058 <_obstack_memory_used@@Base+0x60ec>  // b.any
  44d194:	add	x0, x0, #0x1
  44d198:	mov	w1, #0x50                  	// #80
  44d19c:	str	x0, [x19, #24]
  44d1a0:	b	44d08c <_obstack_memory_used@@Base+0x6120>
  44d1a4:	mov	x3, #0x0                   	// #0
  44d1a8:	b	44d08c <_obstack_memory_used@@Base+0x6120>
  44d1ac:	str	w3, [x21]
  44d1b0:	b	44d0ec <_obstack_memory_used@@Base+0x6180>
  44d1b4:	str	w1, [x21]
  44d1b8:	b	44d0ec <_obstack_memory_used@@Base+0x6180>
  44d1bc:	ldr	x27, [sp, #80]
  44d1c0:	b	44d058 <_obstack_memory_used@@Base+0x60ec>
  44d1c4:	nop
  44d1c8:	stp	x29, x30, [sp, #-32]!
  44d1cc:	mov	x29, sp
  44d1d0:	stp	x19, x20, [sp, #16]
  44d1d4:	mov	x19, x0
  44d1d8:	ldr	x0, [x0, #24]
  44d1dc:	ldrb	w2, [x0]
  44d1e0:	cmp	w2, #0x4a
  44d1e4:	b.eq	44d248 <_obstack_memory_used@@Base+0x62dc>  // b.none
  44d1e8:	cbz	w1, 44d224 <_obstack_memory_used@@Base+0x62b8>
  44d1ec:	mov	x0, x19
  44d1f0:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  44d1f4:	mov	x20, x0
  44d1f8:	cbz	x0, 44d238 <_obstack_memory_used@@Base+0x62cc>
  44d1fc:	mov	x0, x19
  44d200:	bl	44ce28 <_obstack_memory_used@@Base+0x5ebc>
  44d204:	mov	x3, x0
  44d208:	cbz	x0, 44d238 <_obstack_memory_used@@Base+0x62cc>
  44d20c:	mov	x2, x20
  44d210:	mov	x0, x19
  44d214:	ldp	x19, x20, [sp, #16]
  44d218:	mov	w1, #0x29                  	// #41
  44d21c:	ldp	x29, x30, [sp], #32
  44d220:	b	449568 <_obstack_memory_used@@Base+0x25fc>
  44d224:	mov	x0, x19
  44d228:	mov	x20, #0x0                   	// #0
  44d22c:	bl	44ce28 <_obstack_memory_used@@Base+0x5ebc>
  44d230:	mov	x3, x0
  44d234:	cbnz	x0, 44d20c <_obstack_memory_used@@Base+0x62a0>
  44d238:	mov	x0, #0x0                   	// #0
  44d23c:	ldp	x19, x20, [sp, #16]
  44d240:	ldp	x29, x30, [sp], #32
  44d244:	ret
  44d248:	add	x0, x0, #0x1
  44d24c:	str	x0, [x19, #24]
  44d250:	b	44d1ec <_obstack_memory_used@@Base+0x6280>
  44d254:	nop
  44d258:	stp	x29, x30, [sp, #-32]!
  44d25c:	mov	x29, sp
  44d260:	str	x19, [sp, #16]
  44d264:	mov	x19, x0
  44d268:	ldr	w0, [x0, #16]
  44d26c:	tbnz	w0, #18, 44d2a8 <_obstack_memory_used@@Base+0x633c>
  44d270:	ldr	w1, [x19, #84]
  44d274:	cmp	w1, #0x800
  44d278:	b.hi	44d2b8 <_obstack_memory_used@@Base+0x634c>  // b.pmore
  44d27c:	ldr	x2, [x19, #24]
  44d280:	add	w0, w1, #0x1
  44d284:	str	w0, [x19, #84]
  44d288:	mov	x0, #0x0                   	// #0
  44d28c:	ldrb	w3, [x2]
  44d290:	cmp	w3, #0x46
  44d294:	b.eq	44d2c8 <_obstack_memory_used@@Base+0x635c>  // b.none
  44d298:	str	w1, [x19, #84]
  44d29c:	ldr	x19, [sp, #16]
  44d2a0:	ldp	x29, x30, [sp], #32
  44d2a4:	ret
  44d2a8:	ldr	x2, [x19, #24]
  44d2ac:	ldrb	w0, [x2]
  44d2b0:	cmp	w0, #0x46
  44d2b4:	b.eq	44d2c8 <_obstack_memory_used@@Base+0x635c>  // b.none
  44d2b8:	mov	x0, #0x0                   	// #0
  44d2bc:	ldr	x19, [sp, #16]
  44d2c0:	ldp	x29, x30, [sp], #32
  44d2c4:	ret
  44d2c8:	add	x4, x2, #0x1
  44d2cc:	str	x4, [x19, #24]
  44d2d0:	add	x3, x2, #0x2
  44d2d4:	mov	w1, #0x1                   	// #1
  44d2d8:	ldrb	w2, [x2, #1]
  44d2dc:	mov	x0, x19
  44d2e0:	cmp	w2, #0x59
  44d2e4:	csel	x2, x3, x4, eq  // eq = none
  44d2e8:	str	x2, [x19, #24]
  44d2ec:	bl	44d1c8 <_obstack_memory_used@@Base+0x625c>
  44d2f0:	mov	x1, x0
  44d2f4:	mov	x0, x19
  44d2f8:	bl	4495f0 <_obstack_memory_used@@Base+0x2684>
  44d2fc:	ldr	x1, [x19, #24]
  44d300:	ldrb	w2, [x1]
  44d304:	cmp	w2, #0x45
  44d308:	b.eq	44d328 <_obstack_memory_used@@Base+0x63bc>  // b.none
  44d30c:	mov	x0, #0x0                   	// #0
  44d310:	ldr	w1, [x19, #16]
  44d314:	tbnz	w1, #18, 44d2bc <_obstack_memory_used@@Base+0x6350>
  44d318:	ldr	w1, [x19, #84]
  44d31c:	sub	w1, w1, #0x1
  44d320:	str	w1, [x19, #84]
  44d324:	b	44d29c <_obstack_memory_used@@Base+0x6330>
  44d328:	add	x1, x1, #0x1
  44d32c:	str	x1, [x19, #24]
  44d330:	b	44d310 <_obstack_memory_used@@Base+0x63a4>
  44d334:	nop
  44d338:	stp	x29, x30, [sp, #-48]!
  44d33c:	mov	x29, sp
  44d340:	ldr	x3, [x0, #24]
  44d344:	stp	x19, x20, [sp, #16]
  44d348:	mov	x19, x0
  44d34c:	ldrb	w2, [x3]
  44d350:	sub	w1, w2, #0x30
  44d354:	and	w1, w1, #0xff
  44d358:	cmp	w1, #0x9
  44d35c:	b.ls	44d46c <_obstack_memory_used@@Base+0x6500>  // b.plast
  44d360:	sub	w1, w2, #0x61
  44d364:	and	w1, w1, #0xff
  44d368:	cmp	w1, #0x19
  44d36c:	b.hi	44d3b4 <_obstack_memory_used@@Base+0x6448>  // b.pmore
  44d370:	cmp	w2, #0x6f
  44d374:	b.eq	44d534 <_obstack_memory_used@@Base+0x65c8>  // b.none
  44d378:	mov	x0, x19
  44d37c:	bl	44cc70 <_obstack_memory_used@@Base+0x5d04>
  44d380:	mov	x20, x0
  44d384:	cbz	x0, 44d394 <_obstack_memory_used@@Base+0x6428>
  44d388:	ldr	w0, [x0]
  44d38c:	cmp	w0, #0x32
  44d390:	b.eq	44d498 <_obstack_memory_used@@Base+0x652c>  // b.none
  44d394:	ldr	x0, [x19, #24]
  44d398:	ldrb	w1, [x0]
  44d39c:	cmp	w1, #0x42
  44d3a0:	b.eq	44d484 <_obstack_memory_used@@Base+0x6518>  // b.none
  44d3a4:	mov	x0, x20
  44d3a8:	ldp	x19, x20, [sp, #16]
  44d3ac:	ldp	x29, x30, [sp], #48
  44d3b0:	ret
  44d3b4:	sub	w1, w2, #0x43
  44d3b8:	and	w1, w1, #0xff
  44d3bc:	cmp	w1, #0x1
  44d3c0:	b.ls	44d54c <_obstack_memory_used@@Base+0x65e0>  // b.plast
  44d3c4:	cmp	w2, #0x4c
  44d3c8:	b.eq	44d500 <_obstack_memory_used@@Base+0x6594>  // b.none
  44d3cc:	cmp	w2, #0x55
  44d3d0:	b.ne	44d520 <_obstack_memory_used@@Base+0x65b4>  // b.any
  44d3d4:	ldrb	w1, [x3, #1]
  44d3d8:	cmp	w1, #0x6c
  44d3dc:	b.eq	44d610 <_obstack_memory_used@@Base+0x66a4>  // b.none
  44d3e0:	cmp	w1, #0x74
  44d3e4:	b.ne	44d520 <_obstack_memory_used@@Base+0x65b4>  // b.any
  44d3e8:	add	x1, x3, #0x1
  44d3ec:	str	x1, [x0, #24]
  44d3f0:	mov	x20, #0x0                   	// #0
  44d3f4:	ldrb	w1, [x3, #1]
  44d3f8:	cmp	w1, #0x74
  44d3fc:	b.ne	44d39c <_obstack_memory_used@@Base+0x6430>  // b.any
  44d400:	add	x3, x3, #0x2
  44d404:	str	x3, [x0, #24]
  44d408:	bl	449920 <_obstack_memory_used@@Base+0x29b4>
  44d40c:	tbnz	w0, #31, 44d394 <_obstack_memory_used@@Base+0x6428>
  44d410:	ldp	w1, w2, [x19, #40]
  44d414:	cmp	w1, w2
  44d418:	b.ge	44d7d8 <_obstack_memory_used@@Base+0x686c>  // b.tcont
  44d41c:	ldp	x7, x3, [x19, #24]
  44d420:	mov	w2, #0x18                  	// #24
  44d424:	add	w6, w1, #0x1
  44d428:	mov	w4, #0x48                  	// #72
  44d42c:	smull	x1, w1, w2
  44d430:	sxtw	x0, w0
  44d434:	ldp	w2, w5, [x19, #56]
  44d438:	add	x20, x3, x1
  44d43c:	cmp	w2, w5
  44d440:	str	wzr, [x20, #4]
  44d444:	str	w6, [x19, #40]
  44d448:	str	w4, [x3, x1]
  44d44c:	str	x0, [x20, #8]
  44d450:	b.ge	44d7cc <_obstack_memory_used@@Base+0x6860>  // b.tcont
  44d454:	ldr	x1, [x19, #48]
  44d458:	add	w0, w2, #0x1
  44d45c:	str	x20, [x1, w2, sxtw #3]
  44d460:	str	w0, [x19, #56]
  44d464:	ldrb	w1, [x7]
  44d468:	b	44d39c <_obstack_memory_used@@Base+0x6430>
  44d46c:	bl	449a18 <_obstack_memory_used@@Base+0x2aac>
  44d470:	mov	x20, x0
  44d474:	ldr	x3, [x19, #24]
  44d478:	ldrb	w1, [x3]
  44d47c:	cmp	w1, #0x42
  44d480:	b.ne	44d3a4 <_obstack_memory_used@@Base+0x6438>  // b.any
  44d484:	mov	x1, x20
  44d488:	mov	x0, x19
  44d48c:	ldp	x19, x20, [sp, #16]
  44d490:	ldp	x29, x30, [sp], #48
  44d494:	b	449b98 <_obstack_memory_used@@Base+0x2c2c>
  44d498:	ldr	x1, [x20, #8]
  44d49c:	ldr	w0, [x19, #72]
  44d4a0:	ldr	x2, [x1]
  44d4a4:	add	w0, w0, #0x7
  44d4a8:	ldr	w1, [x1, #16]
  44d4ac:	add	w0, w0, w1
  44d4b0:	str	w0, [x19, #72]
  44d4b4:	ldrb	w0, [x2]
  44d4b8:	cmp	w0, #0x6c
  44d4bc:	b.ne	44d394 <_obstack_memory_used@@Base+0x6428>  // b.any
  44d4c0:	ldrb	w0, [x2, #1]
  44d4c4:	cmp	w0, #0x69
  44d4c8:	b.ne	44d394 <_obstack_memory_used@@Base+0x6428>  // b.any
  44d4cc:	ldrb	w0, [x2, #2]
  44d4d0:	cbnz	w0, 44d394 <_obstack_memory_used@@Base+0x6428>
  44d4d4:	mov	x0, x19
  44d4d8:	bl	449a18 <_obstack_memory_used@@Base+0x2aac>
  44d4dc:	mov	x2, x20
  44d4e0:	mov	x3, x0
  44d4e4:	mov	w1, #0x37                  	// #55
  44d4e8:	mov	x0, x19
  44d4ec:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44d4f0:	mov	x20, x0
  44d4f4:	ldr	x3, [x19, #24]
  44d4f8:	ldrb	w1, [x3]
  44d4fc:	b	44d39c <_obstack_memory_used@@Base+0x6430>
  44d500:	add	x3, x3, #0x1
  44d504:	str	x3, [x0, #24]
  44d508:	bl	449a18 <_obstack_memory_used@@Base+0x2aac>
  44d50c:	mov	x20, x0
  44d510:	cbz	x0, 44d520 <_obstack_memory_used@@Base+0x65b4>
  44d514:	mov	x0, x19
  44d518:	bl	449f80 <_obstack_memory_used@@Base+0x3014>
  44d51c:	cbnz	w0, 44d394 <_obstack_memory_used@@Base+0x6428>
  44d520:	mov	x20, #0x0                   	// #0
  44d524:	mov	x0, x20
  44d528:	ldp	x19, x20, [sp, #16]
  44d52c:	ldp	x29, x30, [sp], #48
  44d530:	ret
  44d534:	ldrb	w0, [x3, #1]
  44d538:	cmp	w0, #0x6e
  44d53c:	b.ne	44d378 <_obstack_memory_used@@Base+0x640c>  // b.any
  44d540:	add	x3, x3, #0x2
  44d544:	str	x3, [x19, #24]
  44d548:	b	44d378 <_obstack_memory_used@@Base+0x640c>
  44d54c:	ldr	x0, [x0, #64]
  44d550:	cbz	x0, 44d564 <_obstack_memory_used@@Base+0x65f8>
  44d554:	ldr	w1, [x0]
  44d558:	cbz	w1, 44d5e0 <_obstack_memory_used@@Base+0x6674>
  44d55c:	cmp	w1, #0x18
  44d560:	b.eq	44d5e0 <_obstack_memory_used@@Base+0x6674>  // b.none
  44d564:	cmp	w2, #0x43
  44d568:	b.eq	44d6c0 <_obstack_memory_used@@Base+0x6754>  // b.none
  44d56c:	ldrb	w1, [x3, #1]
  44d570:	cmp	w1, #0x32
  44d574:	b.eq	44d7c4 <_obstack_memory_used@@Base+0x6858>  // b.none
  44d578:	b.hi	44d734 <_obstack_memory_used@@Base+0x67c8>  // b.pmore
  44d57c:	cmp	w1, #0x30
  44d580:	b.eq	44d760 <_obstack_memory_used@@Base+0x67f4>  // b.none
  44d584:	cmp	w1, #0x31
  44d588:	mov	w4, #0x2                   	// #2
  44d58c:	b.ne	44d748 <_obstack_memory_used@@Base+0x67dc>  // b.any
  44d590:	add	x1, x3, #0x2
  44d594:	ldr	w2, [x19, #44]
  44d598:	str	x1, [x19, #24]
  44d59c:	ldr	w1, [x19, #40]
  44d5a0:	cmp	w1, w2
  44d5a4:	b.ge	44d754 <_obstack_memory_used@@Base+0x67e8>  // b.tcont
  44d5a8:	mov	w6, #0x18                  	// #24
  44d5ac:	add	w5, w1, #0x1
  44d5b0:	ldr	x2, [x19, #32]
  44d5b4:	smull	x1, w1, w6
  44d5b8:	add	x20, x2, x1
  44d5bc:	str	wzr, [x20, #4]
  44d5c0:	str	w5, [x19, #40]
  44d5c4:	cbz	x0, 44d754 <_obstack_memory_used@@Base+0x67e8>
  44d5c8:	mov	x5, #0x8                   	// #8
  44d5cc:	str	x5, [x2, x1]
  44d5d0:	str	w4, [x20, #8]
  44d5d4:	str	x0, [x20, #16]
  44d5d8:	ldrb	w1, [x3, #2]
  44d5dc:	b	44d39c <_obstack_memory_used@@Base+0x6430>
  44d5e0:	ldr	w2, [x0, #16]
  44d5e4:	ldr	w1, [x19, #72]
  44d5e8:	add	w1, w1, w2
  44d5ec:	str	w1, [x19, #72]
  44d5f0:	ldrb	w1, [x3]
  44d5f4:	cmp	w1, #0x43
  44d5f8:	mov	w2, w1
  44d5fc:	b.eq	44d6c0 <_obstack_memory_used@@Base+0x6754>  // b.none
  44d600:	cmp	w1, #0x44
  44d604:	b.eq	44d56c <_obstack_memory_used@@Base+0x6600>  // b.none
  44d608:	mov	x20, #0x0                   	// #0
  44d60c:	b	44d39c <_obstack_memory_used@@Base+0x6430>
  44d610:	add	x1, x3, #0x1
  44d614:	str	x1, [x0, #24]
  44d618:	mov	x20, #0x0                   	// #0
  44d61c:	ldrb	w1, [x3, #1]
  44d620:	cmp	w1, #0x6c
  44d624:	b.ne	44d39c <_obstack_memory_used@@Base+0x6430>  // b.any
  44d628:	add	x3, x3, #0x2
  44d62c:	str	x3, [x0, #24]
  44d630:	bl	44ce28 <_obstack_memory_used@@Base+0x5ebc>
  44d634:	mov	x11, x0
  44d638:	ldr	x0, [x19, #24]
  44d63c:	ldrb	w1, [x0]
  44d640:	cbz	x11, 44d39c <_obstack_memory_used@@Base+0x6430>
  44d644:	cmp	w1, #0x45
  44d648:	b.ne	44d39c <_obstack_memory_used@@Base+0x6430>  // b.any
  44d64c:	add	x0, x0, #0x1
  44d650:	str	x0, [x19, #24]
  44d654:	mov	x0, x19
  44d658:	bl	449920 <_obstack_memory_used@@Base+0x29b4>
  44d65c:	tbnz	w0, #31, 44d7d8 <_obstack_memory_used@@Base+0x686c>
  44d660:	ldp	w1, w2, [x19, #40]
  44d664:	ldr	x4, [x19, #24]
  44d668:	cmp	w1, w2
  44d66c:	b.ge	44d7e8 <_obstack_memory_used@@Base+0x687c>  // b.tcont
  44d670:	mov	w2, #0x18                  	// #24
  44d674:	add	w6, w1, #0x1
  44d678:	ldr	x3, [x19, #32]
  44d67c:	smull	x1, w1, w2
  44d680:	ldp	w2, w7, [x19, #56]
  44d684:	add	x20, x3, x1
  44d688:	mov	w5, #0x46                  	// #70
  44d68c:	cmp	w2, w7
  44d690:	str	wzr, [x20, #4]
  44d694:	str	w6, [x19, #40]
  44d698:	str	w5, [x3, x1]
  44d69c:	str	x11, [x20, #8]
  44d6a0:	str	w0, [x20, #16]
  44d6a4:	b.ge	44d7e8 <_obstack_memory_used@@Base+0x687c>  // b.tcont
  44d6a8:	ldr	x1, [x19, #48]
  44d6ac:	add	w0, w2, #0x1
  44d6b0:	str	x20, [x1, w2, sxtw #3]
  44d6b4:	str	w0, [x19, #56]
  44d6b8:	ldrb	w1, [x4]
  44d6bc:	b	44d39c <_obstack_memory_used@@Base+0x6430>
  44d6c0:	str	x21, [sp, #32]
  44d6c4:	ldrb	w1, [x3, #1]
  44d6c8:	cmp	w1, #0x49
  44d6cc:	b.eq	44d770 <_obstack_memory_used@@Base+0x6804>  // b.none
  44d6d0:	sub	w2, w1, #0x31
  44d6d4:	and	w2, w2, #0xff
  44d6d8:	cmp	w2, #0x4
  44d6dc:	b.hi	44d7b8 <_obstack_memory_used@@Base+0x684c>  // b.pmore
  44d6e0:	sub	w21, w1, #0x30
  44d6e4:	add	x3, x3, #0x2
  44d6e8:	str	x3, [x19, #24]
  44d6ec:	ldp	w1, w2, [x19, #40]
  44d6f0:	cmp	w1, w2
  44d6f4:	b.ge	44d7f4 <_obstack_memory_used@@Base+0x6888>  // b.tcont
  44d6f8:	mov	w4, #0x18                  	// #24
  44d6fc:	add	w3, w1, #0x1
  44d700:	smull	x1, w1, w4
  44d704:	ldp	x4, x2, [x19, #24]
  44d708:	add	x20, x2, x1
  44d70c:	str	wzr, [x20, #4]
  44d710:	str	w3, [x19, #40]
  44d714:	cbz	x0, 44d7a8 <_obstack_memory_used@@Base+0x683c>
  44d718:	mov	x3, #0x7                   	// #7
  44d71c:	str	x3, [x2, x1]
  44d720:	str	w21, [x20, #8]
  44d724:	str	x0, [x20, #16]
  44d728:	ldr	x21, [sp, #32]
  44d72c:	ldrb	w1, [x4]
  44d730:	b	44d39c <_obstack_memory_used@@Base+0x6430>
  44d734:	cmp	w1, #0x34
  44d738:	b.eq	44d768 <_obstack_memory_used@@Base+0x67fc>  // b.none
  44d73c:	cmp	w1, #0x35
  44d740:	mov	w4, #0x5                   	// #5
  44d744:	b.eq	44d590 <_obstack_memory_used@@Base+0x6624>  // b.none
  44d748:	mov	w1, w2
  44d74c:	mov	x20, #0x0                   	// #0
  44d750:	b	44d39c <_obstack_memory_used@@Base+0x6430>
  44d754:	ldrb	w1, [x3, #2]
  44d758:	mov	x20, #0x0                   	// #0
  44d75c:	b	44d39c <_obstack_memory_used@@Base+0x6430>
  44d760:	mov	w4, #0x1                   	// #1
  44d764:	b	44d590 <_obstack_memory_used@@Base+0x6624>
  44d768:	mov	w4, #0x4                   	// #4
  44d76c:	b	44d590 <_obstack_memory_used@@Base+0x6624>
  44d770:	add	x0, x3, #0x1
  44d774:	str	x0, [x19, #24]
  44d778:	ldrb	w1, [x3, #2]
  44d77c:	sub	w0, w1, #0x31
  44d780:	and	w0, w0, #0xff
  44d784:	cmp	w0, #0x4
  44d788:	b.hi	44d808 <_obstack_memory_used@@Base+0x689c>  // b.pmore
  44d78c:	add	x3, x3, #0x3
  44d790:	str	x3, [x19, #24]
  44d794:	sub	w21, w1, #0x30
  44d798:	mov	x0, x19
  44d79c:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  44d7a0:	ldr	x0, [x19, #64]
  44d7a4:	b	44d6ec <_obstack_memory_used@@Base+0x6780>
  44d7a8:	ldrb	w1, [x4]
  44d7ac:	mov	x20, #0x0                   	// #0
  44d7b0:	ldr	x21, [sp, #32]
  44d7b4:	b	44d39c <_obstack_memory_used@@Base+0x6430>
  44d7b8:	mov	x20, #0x0                   	// #0
  44d7bc:	ldr	x21, [sp, #32]
  44d7c0:	b	44d524 <_obstack_memory_used@@Base+0x65b8>
  44d7c4:	mov	w4, #0x3                   	// #3
  44d7c8:	b	44d590 <_obstack_memory_used@@Base+0x6624>
  44d7cc:	ldrb	w1, [x7]
  44d7d0:	mov	x20, #0x0                   	// #0
  44d7d4:	b	44d39c <_obstack_memory_used@@Base+0x6430>
  44d7d8:	ldr	x0, [x19, #24]
  44d7dc:	mov	x20, #0x0                   	// #0
  44d7e0:	ldrb	w1, [x0]
  44d7e4:	b	44d39c <_obstack_memory_used@@Base+0x6430>
  44d7e8:	ldrb	w1, [x4]
  44d7ec:	mov	x20, #0x0                   	// #0
  44d7f0:	b	44d39c <_obstack_memory_used@@Base+0x6430>
  44d7f4:	ldr	x0, [x19, #24]
  44d7f8:	mov	x20, #0x0                   	// #0
  44d7fc:	ldr	x21, [sp, #32]
  44d800:	ldrb	w1, [x0]
  44d804:	b	44d39c <_obstack_memory_used@@Base+0x6430>
  44d808:	ldrb	w1, [x3, #1]
  44d80c:	mov	x20, #0x0                   	// #0
  44d810:	ldr	x21, [sp, #32]
  44d814:	b	44d39c <_obstack_memory_used@@Base+0x6430>
  44d818:	ldr	x2, [x0, #24]
  44d81c:	ldrb	w1, [x2]
  44d820:	cmp	w1, #0x4c
  44d824:	b.ne	44d90c <_obstack_memory_used@@Base+0x69a0>  // b.any
  44d828:	stp	x29, x30, [sp, #-32]!
  44d82c:	add	x1, x2, #0x1
  44d830:	mov	w4, #0x5a                  	// #90
  44d834:	mov	x29, sp
  44d838:	str	x19, [sp, #16]
  44d83c:	mov	x19, x0
  44d840:	str	x1, [x0, #24]
  44d844:	ldrb	w3, [x2, #1]
  44d848:	cmp	w3, #0x5f
  44d84c:	ccmp	w3, w4, #0x4, ne  // ne = any
  44d850:	b.eq	44d8cc <_obstack_memory_used@@Base+0x6960>  // b.none
  44d854:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  44d858:	mov	x2, x0
  44d85c:	cbz	x0, 44d8bc <_obstack_memory_used@@Base+0x6950>
  44d860:	ldr	w0, [x0]
  44d864:	cmp	w0, #0x27
  44d868:	b.eq	44d984 <_obstack_memory_used@@Base+0x6a18>  // b.none
  44d86c:	ldr	x0, [x19, #24]
  44d870:	mov	w1, #0x3d                  	// #61
  44d874:	ldrb	w4, [x0]
  44d878:	cmp	w4, #0x6e
  44d87c:	b.ne	44d894 <_obstack_memory_used@@Base+0x6928>  // b.any
  44d880:	add	x3, x0, #0x1
  44d884:	str	x3, [x19, #24]
  44d888:	mov	w1, #0x3e                  	// #62
  44d88c:	ldrb	w4, [x0, #1]
  44d890:	mov	x0, x3
  44d894:	cmp	w4, #0x45
  44d898:	b.eq	44d9ac <_obstack_memory_used@@Base+0x6a40>  // b.none
  44d89c:	add	x3, x0, #0x1
  44d8a0:	b	44d8b4 <_obstack_memory_used@@Base+0x6948>
  44d8a4:	str	x3, [x19, #24]
  44d8a8:	ldrb	w4, [x3], #1
  44d8ac:	cmp	w4, #0x45
  44d8b0:	b.eq	44d930 <_obstack_memory_used@@Base+0x69c4>  // b.none
  44d8b4:	mov	x5, x3
  44d8b8:	cbnz	w4, 44d8a4 <_obstack_memory_used@@Base+0x6938>
  44d8bc:	mov	x0, #0x0                   	// #0
  44d8c0:	ldr	x19, [sp, #16]
  44d8c4:	ldp	x29, x30, [sp], #32
  44d8c8:	ret
  44d8cc:	cmp	w3, #0x5f
  44d8d0:	b.eq	44d914 <_obstack_memory_used@@Base+0x69a8>  // b.none
  44d8d4:	add	x1, x1, #0x1
  44d8d8:	str	x1, [x19, #24]
  44d8dc:	mov	x0, x19
  44d8e0:	mov	w1, #0x0                   	// #0
  44d8e4:	bl	44b340 <_obstack_memory_used@@Base+0x43d4>
  44d8e8:	ldr	x1, [x19, #24]
  44d8ec:	ldrb	w2, [x1]
  44d8f0:	cmp	w2, #0x45
  44d8f4:	b.ne	44d8bc <_obstack_memory_used@@Base+0x6950>  // b.any
  44d8f8:	add	x1, x1, #0x1
  44d8fc:	str	x1, [x19, #24]
  44d900:	ldr	x19, [sp, #16]
  44d904:	ldp	x29, x30, [sp], #32
  44d908:	ret
  44d90c:	mov	x0, #0x0                   	// #0
  44d910:	ret
  44d914:	add	x1, x2, #0x2
  44d918:	str	x1, [x19, #24]
  44d91c:	mov	x0, #0x0                   	// #0
  44d920:	ldrb	w2, [x2, #2]
  44d924:	cmp	w2, w4
  44d928:	b.ne	44d8f0 <_obstack_memory_used@@Base+0x6984>  // b.any
  44d92c:	b	44d8d4 <_obstack_memory_used@@Base+0x6968>
  44d930:	sub	w5, w5, w0
  44d934:	ldp	w3, w4, [x19, #40]
  44d938:	cmp	w3, w4
  44d93c:	b.ge	44d9a4 <_obstack_memory_used@@Base+0x6a38>  // b.tcont
  44d940:	mov	w4, #0x18                  	// #24
  44d944:	add	w7, w3, #0x1
  44d948:	ldr	x6, [x19, #32]
  44d94c:	smull	x4, w3, w4
  44d950:	cmp	w5, #0x0
  44d954:	add	x3, x6, x4
  44d958:	str	wzr, [x3, #4]
  44d95c:	str	w7, [x19, #40]
  44d960:	b.le	44d9a4 <_obstack_memory_used@@Base+0x6a38>
  44d964:	str	xzr, [x6, x4]
  44d968:	str	x0, [x3, #8]
  44d96c:	str	w5, [x3, #16]
  44d970:	mov	x0, x19
  44d974:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  44d978:	ldr	x1, [x19, #24]
  44d97c:	ldrb	w2, [x1]
  44d980:	b	44d8f0 <_obstack_memory_used@@Base+0x6984>
  44d984:	ldr	x0, [x2, #8]
  44d988:	ldr	w1, [x0, #28]
  44d98c:	cbz	w1, 44d86c <_obstack_memory_used@@Base+0x6900>
  44d990:	ldr	w1, [x0, #8]
  44d994:	ldr	w0, [x19, #72]
  44d998:	sub	w0, w0, w1
  44d99c:	str	w0, [x19, #72]
  44d9a0:	b	44d86c <_obstack_memory_used@@Base+0x6900>
  44d9a4:	mov	x3, #0x0                   	// #0
  44d9a8:	b	44d970 <_obstack_memory_used@@Base+0x6a04>
  44d9ac:	mov	w5, #0x0                   	// #0
  44d9b0:	b	44d934 <_obstack_memory_used@@Base+0x69c8>
  44d9b4:	nop
  44d9b8:	stp	x29, x30, [sp, #-224]!
  44d9bc:	mov	x29, sp
  44d9c0:	stp	x19, x20, [sp, #16]
  44d9c4:	mov	x19, x0
  44d9c8:	cbz	x2, 44da50 <_obstack_memory_used@@Base+0x6ae4>
  44d9cc:	stp	x21, x22, [sp, #32]
  44d9d0:	ldr	w22, [x0, #304]
  44d9d4:	cbnz	w22, 44da18 <_obstack_memory_used@@Base+0x6aac>
  44d9d8:	ldr	w0, [x2]
  44d9dc:	mov	x20, x2
  44d9e0:	cmp	w0, #0x50
  44d9e4:	b.ls	44d9f8 <_obstack_memory_used@@Base+0x6a8c>  // b.plast
  44d9e8:	mov	w0, #0x1                   	// #1
  44d9ec:	ldp	x21, x22, [sp, #32]
  44d9f0:	str	w0, [x19, #304]
  44d9f4:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44d9f8:	mov	w21, w1
  44d9fc:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x20094>
  44da00:	add	x1, x1, #0xd4
  44da04:	stp	x23, x24, [sp, #48]
  44da08:	ldrh	w1, [x1, w0, uxtw #1]
  44da0c:	adr	x2, 44da18 <_obstack_memory_used@@Base+0x6aac>
  44da10:	add	x1, x2, w1, sxth #2
  44da14:	br	x1
  44da18:	ldp	x21, x22, [sp, #32]
  44da1c:	ldp	x19, x20, [sp, #16]
  44da20:	ldp	x29, x30, [sp], #224
  44da24:	ret
  44da28:	ldr	x0, [x20, #16]
  44da2c:	ldr	w1, [x0]
  44da30:	cmp	w1, #0x3b
  44da34:	b.ne	44da48 <_obstack_memory_used@@Base+0x6adc>  // b.any
  44da38:	ldr	x0, [x0, #16]
  44da3c:	ldr	w0, [x0]
  44da40:	cmp	w0, #0x3c
  44da44:	b.eq	450f30 <_obstack_memory_used@@Base+0x9fc4>  // b.none
  44da48:	ldp	x21, x22, [sp, #32]
  44da4c:	ldp	x23, x24, [sp, #48]
  44da50:	mov	w0, #0x1                   	// #1
  44da54:	str	w0, [x19, #304]
  44da58:	ldp	x19, x20, [sp, #16]
  44da5c:	ldp	x29, x30, [sp], #224
  44da60:	ret
  44da64:	ldp	x1, x2, [x19, #288]
  44da68:	add	x0, sp, #0x60
  44da6c:	stp	x2, x20, [sp, #96]
  44da70:	str	wzr, [sp, #112]
  44da74:	str	x1, [sp, #120]
  44da78:	str	x0, [x19, #296]
  44da7c:	ldr	x2, [x20, #8]
  44da80:	mov	x0, x19
  44da84:	mov	w1, w21
  44da88:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44da8c:	ldr	w0, [sp, #112]
  44da90:	cbz	w0, 44fe3c <_obstack_memory_used@@Base+0x8ed0>
  44da94:	ldr	x0, [sp, #96]
  44da98:	str	x0, [x19, #296]
  44da9c:	cbz	w22, 44f670 <_obstack_memory_used@@Base+0x8704>
  44daa0:	ldp	x21, x22, [sp, #32]
  44daa4:	str	x23, [x19, #288]
  44daa8:	ldp	x23, x24, [sp, #48]
  44daac:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44dab0:	ldr	x4, [x19, #296]
  44dab4:	cbz	x4, 44dbf0 <_obstack_memory_used@@Base+0x6c84>
  44dab8:	mov	x1, x4
  44dabc:	nop
  44dac0:	ldr	w2, [x1, #16]
  44dac4:	cbnz	w2, 44dae4 <_obstack_memory_used@@Base+0x6b78>
  44dac8:	ldr	x2, [x1, #8]
  44dacc:	ldr	w2, [x2]
  44dad0:	sub	w3, w2, #0x19
  44dad4:	cmp	w3, #0x2
  44dad8:	b.hi	450a90 <_obstack_memory_used@@Base+0x9b24>  // b.pmore
  44dadc:	cmp	w0, w2
  44dae0:	b.eq	450ab0 <_obstack_memory_used@@Base+0x9b44>  // b.none
  44dae4:	ldr	x1, [x1]
  44dae8:	cbnz	x1, 44dac0 <_obstack_memory_used@@Base+0x6b54>
  44daec:	b	44dbf0 <_obstack_memory_used@@Base+0x6c84>
  44daf0:	ldp	x23, x24, [sp, #48]
  44daf4:	b	44d9e8 <_obstack_memory_used@@Base+0x6a7c>
  44daf8:	ldr	x2, [x20, #8]
  44dafc:	mov	w22, #0x0                   	// #0
  44db00:	ldr	w1, [x2]
  44db04:	cmp	w1, #0x27
  44db08:	b.eq	450318 <_obstack_memory_used@@Base+0x93ac>  // b.none
  44db0c:	ldr	x1, [x19, #256]
  44db10:	add	x0, x1, #0x1
  44db14:	cmp	x1, #0xff
  44db18:	b.ne	44db44 <_obstack_memory_used@@Base+0x6bd8>  // b.any
  44db1c:	ldp	x3, x2, [x19, #272]
  44db20:	strb	wzr, [x19, #255]
  44db24:	mov	x0, x19
  44db28:	blr	x3
  44db2c:	ldr	x3, [x19, #320]
  44db30:	mov	x0, #0x1                   	// #1
  44db34:	mov	x1, #0x0                   	// #0
  44db38:	add	x3, x3, x0
  44db3c:	ldr	x2, [x20, #8]
  44db40:	str	x3, [x19, #320]
  44db44:	str	x0, [x19, #256]
  44db48:	mov	w0, #0x28                  	// #40
  44db4c:	strb	w0, [x19, x1]
  44db50:	mov	w1, w21
  44db54:	strb	w0, [x19, #264]
  44db58:	mov	x0, x19
  44db5c:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44db60:	ldr	x1, [x19, #256]
  44db64:	cmp	x1, #0xff
  44db68:	b.eq	450a08 <_obstack_memory_used@@Base+0x9a9c>  // b.none
  44db6c:	add	x3, x1, #0x1
  44db70:	str	x3, [x19, #256]
  44db74:	mov	w0, #0x29                  	// #41
  44db78:	strb	w0, [x19, x1]
  44db7c:	strb	w0, [x19, #264]
  44db80:	ldr	w0, [x20]
  44db84:	cmp	w0, #0x3e
  44db88:	b.eq	450acc <_obstack_memory_used@@Base+0x9b60>  // b.none
  44db8c:	cmp	w22, #0x8
  44db90:	b.eq	4508ac <_obstack_memory_used@@Base+0x9940>  // b.none
  44db94:	ldr	x2, [x20, #16]
  44db98:	mov	w1, w21
  44db9c:	mov	x0, x19
  44dba0:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44dba4:	ldp	x21, x22, [sp, #32]
  44dba8:	ldp	x23, x24, [sp, #48]
  44dbac:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44dbb0:	ldr	w2, [x19, #312]
  44dbb4:	ldr	x0, [x20, #8]
  44dbb8:	ldr	w1, [x0]
  44dbbc:	cbnz	w2, 44dbcc <_obstack_memory_used@@Base+0x6c60>
  44dbc0:	cmp	w1, #0x5
  44dbc4:	mov	w22, #0x0                   	// #0
  44dbc8:	b.eq	450e8c <_obstack_memory_used@@Base+0x9f20>  // b.none
  44dbcc:	cmp	w1, #0x23
  44dbd0:	ldr	x4, [x19, #296]
  44dbd4:	b.eq	44fee4 <_obstack_memory_used@@Base+0x8f78>  // b.none
  44dbd8:	ldr	w2, [x20]
  44dbdc:	cmp	w2, w1
  44dbe0:	b.eq	44fee4 <_obstack_memory_used@@Base+0x8f78>  // b.none
  44dbe4:	cmp	w1, #0x24
  44dbe8:	b.eq	44f64c <_obstack_memory_used@@Base+0x86e0>  // b.none
  44dbec:	nop
  44dbf0:	ldr	x1, [x19, #288]
  44dbf4:	add	x0, sp, #0x60
  44dbf8:	stp	x4, x20, [sp, #96]
  44dbfc:	str	wzr, [sp, #112]
  44dc00:	str	x1, [sp, #120]
  44dc04:	str	x0, [x19, #296]
  44dc08:	b	44da7c <_obstack_memory_used@@Base+0x6b10>
  44dc0c:	ldr	x2, [x20, #8]
  44dc10:	mov	w1, w21
  44dc14:	mov	x0, x19
  44dc18:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44dc1c:	tbz	w21, #2, 450850 <_obstack_memory_used@@Base+0x98e4>
  44dc20:	ldr	x1, [x19, #256]
  44dc24:	add	x0, x1, #0x1
  44dc28:	cmp	x1, #0xff
  44dc2c:	b.ne	44dc54 <_obstack_memory_used@@Base+0x6ce8>  // b.any
  44dc30:	ldp	x3, x2, [x19, #272]
  44dc34:	strb	wzr, [x19, #255]
  44dc38:	mov	x0, x19
  44dc3c:	blr	x3
  44dc40:	ldr	x2, [x19, #320]
  44dc44:	mov	x0, #0x1                   	// #1
  44dc48:	mov	x1, #0x0                   	// #0
  44dc4c:	add	x2, x2, x0
  44dc50:	str	x2, [x19, #320]
  44dc54:	str	x0, [x19, #256]
  44dc58:	mov	w0, #0x2e                  	// #46
  44dc5c:	strb	w0, [x19, x1]
  44dc60:	strb	w0, [x19, #264]
  44dc64:	ldr	x23, [x20, #16]
  44dc68:	ldr	w0, [x23]
  44dc6c:	cmp	w0, #0x47
  44dc70:	b.eq	450b08 <_obstack_memory_used@@Base+0x9b9c>  // b.none
  44dc74:	mov	x2, x23
  44dc78:	mov	w1, w21
  44dc7c:	mov	x0, x19
  44dc80:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44dc84:	ldp	x21, x22, [sp, #32]
  44dc88:	ldp	x23, x24, [sp, #48]
  44dc8c:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44dc90:	ldp	x3, x4, [x19, #288]
  44dc94:	add	x0, sp, #0x60
  44dc98:	ldr	x2, [x20, #16]
  44dc9c:	str	x0, [x19, #296]
  44dca0:	mov	w1, w21
  44dca4:	mov	x0, x19
  44dca8:	stp	x4, x20, [sp, #96]
  44dcac:	str	wzr, [sp, #112]
  44dcb0:	str	x3, [sp, #120]
  44dcb4:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44dcb8:	ldr	w0, [sp, #112]
  44dcbc:	cbz	w0, 4507cc <_obstack_memory_used@@Base+0x9860>
  44dcc0:	ldr	x0, [sp, #96]
  44dcc4:	ldp	x21, x22, [sp, #32]
  44dcc8:	ldp	x23, x24, [sp, #48]
  44dccc:	str	x0, [x19, #296]
  44dcd0:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44dcd4:	ldr	x2, [x20, #8]
  44dcd8:	cbz	x2, 44dce8 <_obstack_memory_used@@Base+0x6d7c>
  44dcdc:	mov	w1, w21
  44dce0:	mov	x0, x19
  44dce4:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44dce8:	ldr	x0, [x20, #16]
  44dcec:	cbz	x0, 450a78 <_obstack_memory_used@@Base+0x9b0c>
  44dcf0:	ldr	x22, [x19, #256]
  44dcf4:	cmp	x22, #0xfd
  44dcf8:	b.ls	44dd24 <_obstack_memory_used@@Base+0x6db8>  // b.plast
  44dcfc:	strb	wzr, [x19, x22]
  44dd00:	mov	x1, x22
  44dd04:	mov	x0, x19
  44dd08:	mov	x22, #0x0                   	// #0
  44dd0c:	ldp	x3, x2, [x19, #272]
  44dd10:	blr	x3
  44dd14:	str	xzr, [x19, #256]
  44dd18:	ldr	x0, [x19, #320]
  44dd1c:	add	x0, x0, #0x1
  44dd20:	str	x0, [x19, #320]
  44dd24:	mov	w23, #0x2c                  	// #44
  44dd28:	mov	x24, #0x0                   	// #0
  44dd2c:	b	44dd50 <_obstack_memory_used@@Base+0x6de4>
  44dd30:	mov	x0, x22
  44dd34:	add	x22, x22, #0x1
  44dd38:	str	x22, [x19, #256]
  44dd3c:	strb	w23, [x19, x0]
  44dd40:	strb	w23, [x19, #264]
  44dd44:	mov	w23, #0x20                  	// #32
  44dd48:	cbnz	x24, 44fe84 <_obstack_memory_used@@Base+0x8f18>
  44dd4c:	mov	x24, #0x1                   	// #1
  44dd50:	cmp	x22, #0xff
  44dd54:	b.ne	44dd30 <_obstack_memory_used@@Base+0x6dc4>  // b.any
  44dd58:	ldp	x3, x2, [x19, #272]
  44dd5c:	strb	wzr, [x19, #255]
  44dd60:	mov	x1, x22
  44dd64:	mov	x0, x19
  44dd68:	mov	x22, #0x1                   	// #1
  44dd6c:	blr	x3
  44dd70:	ldr	x1, [x19, #320]
  44dd74:	mov	x0, #0x0                   	// #0
  44dd78:	add	x1, x1, x22
  44dd7c:	str	x1, [x19, #320]
  44dd80:	b	44dd38 <_obstack_memory_used@@Base+0x6dcc>
  44dd84:	ldr	x2, [x20, #16]
  44dd88:	mov	w1, w21
  44dd8c:	mov	x0, x19
  44dd90:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44dd94:	ldp	x21, x22, [sp, #32]
  44dd98:	ldp	x23, x24, [sp, #48]
  44dd9c:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44dda0:	adrp	x24, 465000 <_obstack_memory_used@@Base+0x1e094>
  44dda4:	add	x24, x24, #0xe30
  44dda8:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e094>
  44ddac:	add	x24, x24, #0x1c
  44ddb0:	add	x22, x22, #0xe31
  44ddb4:	mov	w23, #0x67                  	// #103
  44ddb8:	ldr	x1, [x19, #256]
  44ddbc:	b	44dde0 <_obstack_memory_used@@Base+0x6e74>
  44ddc0:	mov	x0, x1
  44ddc4:	add	x1, x1, #0x1
  44ddc8:	str	x1, [x19, #256]
  44ddcc:	cmp	x22, x24
  44ddd0:	strb	w23, [x19, x0]
  44ddd4:	strb	w23, [x19, #264]
  44ddd8:	b.eq	44fa84 <_obstack_memory_used@@Base+0x8b18>  // b.none
  44dddc:	ldrb	w23, [x22], #1
  44dde0:	cmp	x1, #0xff
  44dde4:	b.ne	44ddc0 <_obstack_memory_used@@Base+0x6e54>  // b.any
  44dde8:	ldp	x3, x2, [x19, #272]
  44ddec:	strb	wzr, [x19, #255]
  44ddf0:	mov	x0, x19
  44ddf4:	blr	x3
  44ddf8:	ldr	x2, [x19, #320]
  44ddfc:	mov	x1, #0x1                   	// #1
  44de00:	mov	x0, #0x0                   	// #0
  44de04:	add	x2, x2, x1
  44de08:	str	x2, [x19, #320]
  44de0c:	b	44ddc8 <_obstack_memory_used@@Base+0x6e5c>
  44de10:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e094>
  44de14:	add	x22, x22, #0xe50
  44de18:	add	x24, x22, #0x8
  44de1c:	mov	w23, #0x7b                  	// #123
  44de20:	ldr	x1, [x19, #256]
  44de24:	b	44de4c <_obstack_memory_used@@Base+0x6ee0>
  44de28:	mov	x0, x1
  44de2c:	add	x1, x1, #0x1
  44de30:	str	x1, [x19, #256]
  44de34:	add	x22, x22, #0x1
  44de38:	strb	w23, [x19, x0]
  44de3c:	cmp	x24, x22
  44de40:	strb	w23, [x19, #264]
  44de44:	b.eq	44faa0 <_obstack_memory_used@@Base+0x8b34>  // b.none
  44de48:	ldrb	w23, [x22]
  44de4c:	cmp	x1, #0xff
  44de50:	b.ne	44de28 <_obstack_memory_used@@Base+0x6ebc>  // b.any
  44de54:	ldp	x3, x2, [x19, #272]
  44de58:	strb	wzr, [x19, #255]
  44de5c:	mov	x0, x19
  44de60:	blr	x3
  44de64:	ldr	x2, [x19, #320]
  44de68:	mov	x1, #0x1                   	// #1
  44de6c:	mov	x0, #0x0                   	// #0
  44de70:	add	x2, x2, x1
  44de74:	str	x2, [x19, #320]
  44de78:	b	44de30 <_obstack_memory_used@@Base+0x6ec4>
  44de7c:	adrp	x23, 465000 <_obstack_memory_used@@Base+0x1e094>
  44de80:	add	x23, x23, #0xe68
  44de84:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  44de88:	add	x23, x23, #0xe
  44de8c:	add	x21, x21, #0xe69
  44de90:	mov	w22, #0x7b                  	// #123
  44de94:	ldr	x1, [x19, #256]
  44de98:	b	44debc <_obstack_memory_used@@Base+0x6f50>
  44de9c:	mov	x0, x1
  44dea0:	add	x1, x1, #0x1
  44dea4:	str	x1, [x19, #256]
  44dea8:	cmp	x23, x21
  44deac:	strb	w22, [x19, x0]
  44deb0:	strb	w22, [x19, #264]
  44deb4:	b.eq	44f994 <_obstack_memory_used@@Base+0x8a28>  // b.none
  44deb8:	ldrb	w22, [x21], #1
  44debc:	cmp	x1, #0xff
  44dec0:	b.ne	44de9c <_obstack_memory_used@@Base+0x6f30>  // b.any
  44dec4:	ldp	x3, x2, [x19, #272]
  44dec8:	strb	wzr, [x19, #255]
  44decc:	mov	x0, x19
  44ded0:	blr	x3
  44ded4:	ldr	x2, [x19, #320]
  44ded8:	mov	x1, #0x1                   	// #1
  44dedc:	mov	x0, #0x0                   	// #0
  44dee0:	add	x2, x2, x1
  44dee4:	str	x2, [x19, #320]
  44dee8:	b	44dea4 <_obstack_memory_used@@Base+0x6f38>
  44deec:	adrp	x24, 465000 <_obstack_memory_used@@Base+0x1e094>
  44def0:	add	x24, x24, #0xd10
  44def4:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e094>
  44def8:	add	x24, x24, #0x16
  44defc:	add	x22, x22, #0xd11
  44df00:	mov	w23, #0x74                  	// #116
  44df04:	ldr	x1, [x19, #256]
  44df08:	b	44df2c <_obstack_memory_used@@Base+0x6fc0>
  44df0c:	mov	x0, x1
  44df10:	add	x1, x1, #0x1
  44df14:	str	x1, [x19, #256]
  44df18:	cmp	x24, x22
  44df1c:	strb	w23, [x19, x0]
  44df20:	strb	w23, [x19, #264]
  44df24:	b.eq	44fa68 <_obstack_memory_used@@Base+0x8afc>  // b.none
  44df28:	ldrb	w23, [x22], #1
  44df2c:	cmp	x1, #0xff
  44df30:	b.ne	44df0c <_obstack_memory_used@@Base+0x6fa0>  // b.any
  44df34:	ldp	x3, x2, [x19, #272]
  44df38:	strb	wzr, [x19, #255]
  44df3c:	mov	x0, x19
  44df40:	blr	x3
  44df44:	ldr	x2, [x19, #320]
  44df48:	mov	x1, #0x1                   	// #1
  44df4c:	mov	x0, #0x0                   	// #0
  44df50:	add	x2, x2, x1
  44df54:	str	x2, [x19, #320]
  44df58:	b	44df14 <_obstack_memory_used@@Base+0x6fa8>
  44df5c:	adrp	x24, 465000 <_obstack_memory_used@@Base+0x1e094>
  44df60:	add	x24, x24, #0xb88
  44df64:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e094>
  44df68:	add	x24, x24, #0x1e
  44df6c:	add	x22, x22, #0xb89
  44df70:	mov	w23, #0x74                  	// #116
  44df74:	ldr	x1, [x19, #256]
  44df78:	b	44df9c <_obstack_memory_used@@Base+0x7030>
  44df7c:	mov	x0, x1
  44df80:	add	x1, x1, #0x1
  44df84:	str	x1, [x19, #256]
  44df88:	cmp	x24, x22
  44df8c:	strb	w23, [x19, x0]
  44df90:	strb	w23, [x19, #264]
  44df94:	b.eq	44f978 <_obstack_memory_used@@Base+0x8a0c>  // b.none
  44df98:	ldrb	w23, [x22], #1
  44df9c:	cmp	x1, #0xff
  44dfa0:	b.ne	44df7c <_obstack_memory_used@@Base+0x7010>  // b.any
  44dfa4:	ldp	x3, x2, [x19, #272]
  44dfa8:	strb	wzr, [x19, #255]
  44dfac:	mov	x0, x19
  44dfb0:	blr	x3
  44dfb4:	ldr	x2, [x19, #320]
  44dfb8:	mov	x1, #0x1                   	// #1
  44dfbc:	mov	x0, #0x0                   	// #0
  44dfc0:	add	x2, x2, x1
  44dfc4:	str	x2, [x19, #320]
  44dfc8:	b	44df84 <_obstack_memory_used@@Base+0x7018>
  44dfcc:	ldp	x2, x20, [x20, #8]
  44dfd0:	cbz	x2, 44dfe0 <_obstack_memory_used@@Base+0x7074>
  44dfd4:	mov	w1, w21
  44dfd8:	mov	x0, x19
  44dfdc:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44dfe0:	ldr	x1, [x19, #256]
  44dfe4:	add	x0, x1, #0x1
  44dfe8:	cmp	x1, #0xff
  44dfec:	b.ne	44e014 <_obstack_memory_used@@Base+0x70a8>  // b.any
  44dff0:	ldp	x3, x2, [x19, #272]
  44dff4:	strb	wzr, [x19, #255]
  44dff8:	mov	x0, x19
  44dffc:	blr	x3
  44e000:	ldr	x2, [x19, #320]
  44e004:	mov	x0, #0x1                   	// #1
  44e008:	mov	x1, #0x0                   	// #0
  44e00c:	add	x2, x2, x0
  44e010:	str	x2, [x19, #320]
  44e014:	str	x0, [x19, #256]
  44e018:	mov	w0, #0x7b                  	// #123
  44e01c:	strb	w0, [x19, x1]
  44e020:	mov	x2, x20
  44e024:	strb	w0, [x19, #264]
  44e028:	mov	w1, w21
  44e02c:	mov	x0, x19
  44e030:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44e034:	ldr	x1, [x19, #256]
  44e038:	add	x0, x1, #0x1
  44e03c:	cmp	x1, #0xff
  44e040:	b.ne	44e068 <_obstack_memory_used@@Base+0x70fc>  // b.any
  44e044:	ldp	x3, x2, [x19, #272]
  44e048:	strb	wzr, [x19, #255]
  44e04c:	mov	x0, x19
  44e050:	blr	x3
  44e054:	ldr	x2, [x19, #320]
  44e058:	mov	x0, #0x1                   	// #1
  44e05c:	mov	x1, #0x0                   	// #0
  44e060:	add	x2, x2, x0
  44e064:	str	x2, [x19, #320]
  44e068:	str	x0, [x19, #256]
  44e06c:	mov	w0, #0x7d                  	// #125
  44e070:	strb	w0, [x19, x1]
  44e074:	strb	w0, [x19, #264]
  44e078:	ldp	x21, x22, [sp, #32]
  44e07c:	ldp	x23, x24, [sp, #48]
  44e080:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44e084:	ldr	x22, [x20, #8]
  44e088:	adrp	x20, 465000 <_obstack_memory_used@@Base+0x1e094>
  44e08c:	add	x20, x20, #0xd60
  44e090:	mov	w21, #0x6f                  	// #111
  44e094:	add	x24, x20, #0x8
  44e098:	ldr	w23, [x22, #16]
  44e09c:	ldr	x1, [x19, #256]
  44e0a0:	b	44e0c8 <_obstack_memory_used@@Base+0x715c>
  44e0a4:	mov	x0, x1
  44e0a8:	add	x1, x1, #0x1
  44e0ac:	str	x1, [x19, #256]
  44e0b0:	add	x20, x20, #0x1
  44e0b4:	strb	w21, [x19, x0]
  44e0b8:	cmp	x24, x20
  44e0bc:	strb	w21, [x19, #264]
  44e0c0:	b.eq	44f89c <_obstack_memory_used@@Base+0x8930>  // b.none
  44e0c4:	ldrb	w21, [x20]
  44e0c8:	cmp	x1, #0xff
  44e0cc:	b.ne	44e0a4 <_obstack_memory_used@@Base+0x7138>  // b.any
  44e0d0:	ldp	x3, x2, [x19, #272]
  44e0d4:	strb	wzr, [x19, #255]
  44e0d8:	mov	x0, x19
  44e0dc:	blr	x3
  44e0e0:	ldr	x2, [x19, #320]
  44e0e4:	mov	x1, #0x1                   	// #1
  44e0e8:	mov	x0, #0x0                   	// #0
  44e0ec:	add	x2, x2, x1
  44e0f0:	str	x2, [x19, #320]
  44e0f4:	b	44e0ac <_obstack_memory_used@@Base+0x7140>
  44e0f8:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e094>
  44e0fc:	add	x22, x22, #0xd70
  44e100:	add	x24, x22, #0x9
  44e104:	mov	w23, #0x6f                  	// #111
  44e108:	ldr	x1, [x19, #256]
  44e10c:	b	44e134 <_obstack_memory_used@@Base+0x71c8>
  44e110:	mov	x0, x1
  44e114:	add	x1, x1, #0x1
  44e118:	str	x1, [x19, #256]
  44e11c:	add	x22, x22, #0x1
  44e120:	strb	w23, [x19, x0]
  44e124:	cmp	x22, x24
  44e128:	strb	w23, [x19, #264]
  44e12c:	b.eq	44f6dc <_obstack_memory_used@@Base+0x8770>  // b.none
  44e130:	ldrb	w23, [x22]
  44e134:	cmp	x1, #0xff
  44e138:	b.ne	44e110 <_obstack_memory_used@@Base+0x71a4>  // b.any
  44e13c:	ldp	x3, x2, [x19, #272]
  44e140:	strb	wzr, [x19, #255]
  44e144:	mov	x0, x19
  44e148:	blr	x3
  44e14c:	ldr	x2, [x19, #320]
  44e150:	mov	x1, #0x1                   	// #1
  44e154:	mov	x0, #0x0                   	// #0
  44e158:	add	x2, x2, x1
  44e15c:	str	x2, [x19, #320]
  44e160:	b	44e118 <_obstack_memory_used@@Base+0x71ac>
  44e164:	ldr	x2, [x20, #8]
  44e168:	mov	w1, w21
  44e16c:	mov	x0, x19
  44e170:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e094>
  44e174:	add	x22, x22, #0xe78
  44e178:	mov	w23, #0x20                  	// #32
  44e17c:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44e180:	add	x24, x22, #0x8
  44e184:	ldr	x1, [x19, #256]
  44e188:	b	44e1b0 <_obstack_memory_used@@Base+0x7244>
  44e18c:	mov	x0, x1
  44e190:	add	x1, x1, #0x1
  44e194:	str	x1, [x19, #256]
  44e198:	add	x22, x22, #0x1
  44e19c:	strb	w23, [x19, x0]
  44e1a0:	cmp	x24, x22
  44e1a4:	strb	w23, [x19, #264]
  44e1a8:	b.eq	44f67c <_obstack_memory_used@@Base+0x8710>  // b.none
  44e1ac:	ldrb	w23, [x22]
  44e1b0:	cmp	x1, #0xff
  44e1b4:	b.ne	44e18c <_obstack_memory_used@@Base+0x7220>  // b.any
  44e1b8:	ldp	x3, x2, [x19, #272]
  44e1bc:	strb	wzr, [x19, #255]
  44e1c0:	mov	x0, x19
  44e1c4:	blr	x3
  44e1c8:	ldr	x2, [x19, #320]
  44e1cc:	mov	x1, #0x1                   	// #1
  44e1d0:	mov	x0, #0x0                   	// #0
  44e1d4:	add	x2, x2, x1
  44e1d8:	str	x2, [x19, #320]
  44e1dc:	b	44e194 <_obstack_memory_used@@Base+0x7228>
  44e1e0:	ldr	x2, [x20, #8]
  44e1e4:	mov	w1, w21
  44e1e8:	mov	x0, x19
  44e1ec:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44e1f0:	ldp	x21, x22, [sp, #32]
  44e1f4:	ldp	x23, x24, [sp, #48]
  44e1f8:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44e1fc:	and	w22, w21, #0xffffff9f
  44e200:	ldr	x3, [x19, #296]
  44e204:	tbnz	w21, #5, 4509d8 <_obstack_memory_used@@Base+0x9a6c>
  44e208:	ldr	x2, [x20, #8]
  44e20c:	cbz	x2, 44e214 <_obstack_memory_used@@Base+0x72a8>
  44e210:	tbz	w21, #6, 450d0c <_obstack_memory_used@@Base+0x9da0>
  44e214:	mov	w1, w22
  44e218:	add	x2, x20, #0x10
  44e21c:	mov	x0, x19
  44e220:	bl	452060 <_obstack_memory_used@@Base+0xb0f4>
  44e224:	ldp	x21, x22, [sp, #32]
  44e228:	ldp	x23, x24, [sp, #48]
  44e22c:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44e230:	ldr	x23, [x20, #8]
  44e234:	ldr	x1, [x19, #256]
  44e238:	cbz	x23, 4500a4 <_obstack_memory_used@@Base+0x9138>
  44e23c:	adrp	x20, 465000 <_obstack_memory_used@@Base+0x1e094>
  44e240:	add	x20, x20, #0xe08
  44e244:	add	x22, x20, #0x6
  44e248:	mov	w21, #0x7b                  	// #123
  44e24c:	b	44e274 <_obstack_memory_used@@Base+0x7308>
  44e250:	mov	x0, x1
  44e254:	add	x1, x1, #0x1
  44e258:	str	x1, [x19, #256]
  44e25c:	add	x20, x20, #0x1
  44e260:	strb	w21, [x19, x0]
  44e264:	cmp	x22, x20
  44e268:	strb	w21, [x19, #264]
  44e26c:	b.eq	450118 <_obstack_memory_used@@Base+0x91ac>  // b.none
  44e270:	ldrb	w21, [x20]
  44e274:	cmp	x1, #0xff
  44e278:	b.ne	44e250 <_obstack_memory_used@@Base+0x72e4>  // b.any
  44e27c:	ldp	x3, x2, [x19, #272]
  44e280:	strb	wzr, [x19, #255]
  44e284:	mov	x0, x19
  44e288:	blr	x3
  44e28c:	ldr	x2, [x19, #320]
  44e290:	mov	x1, #0x1                   	// #1
  44e294:	mov	x0, #0x0                   	// #0
  44e298:	add	x2, x2, x1
  44e29c:	str	x2, [x19, #320]
  44e2a0:	b	44e258 <_obstack_memory_used@@Base+0x72ec>
  44e2a4:	adrp	x24, 465000 <_obstack_memory_used@@Base+0x1e094>
  44e2a8:	add	x24, x24, #0xcf8
  44e2ac:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e094>
  44e2b0:	add	x24, x24, #0x11
  44e2b4:	add	x22, x22, #0xcf9
  44e2b8:	mov	w23, #0x68                  	// #104
  44e2bc:	ldr	x1, [x19, #256]
  44e2c0:	b	44e2e4 <_obstack_memory_used@@Base+0x7378>
  44e2c4:	mov	x0, x1
  44e2c8:	add	x1, x1, #0x1
  44e2cc:	str	x1, [x19, #256]
  44e2d0:	cmp	x22, x24
  44e2d4:	strb	w23, [x19, x0]
  44e2d8:	strb	w23, [x19, #264]
  44e2dc:	b.eq	44fd44 <_obstack_memory_used@@Base+0x8dd8>  // b.none
  44e2e0:	ldrb	w23, [x22], #1
  44e2e4:	cmp	x1, #0xff
  44e2e8:	b.ne	44e2c4 <_obstack_memory_used@@Base+0x7358>  // b.any
  44e2ec:	ldp	x3, x2, [x19, #272]
  44e2f0:	strb	wzr, [x19, #255]
  44e2f4:	mov	x0, x19
  44e2f8:	blr	x3
  44e2fc:	ldr	x2, [x19, #320]
  44e300:	mov	x1, #0x1                   	// #1
  44e304:	mov	x0, #0x0                   	// #0
  44e308:	add	x2, x2, x1
  44e30c:	str	x2, [x19, #320]
  44e310:	b	44e2cc <_obstack_memory_used@@Base+0x7360>
  44e314:	ldrsw	x22, [x20, #16]
  44e318:	ldr	x20, [x20, #8]
  44e31c:	cbz	x22, 45120c <_obstack_memory_used@@Base+0xa2a0>
  44e320:	add	x22, x20, x22
  44e324:	ldr	x1, [x19, #256]
  44e328:	b	44e34c <_obstack_memory_used@@Base+0x73e0>
  44e32c:	mov	x0, x1
  44e330:	add	x1, x1, #0x1
  44e334:	str	x1, [x19, #256]
  44e338:	add	x20, x20, #0x1
  44e33c:	strb	w21, [x19, x0]
  44e340:	cmp	x22, x20
  44e344:	strb	w21, [x19, #264]
  44e348:	b.eq	44fe50 <_obstack_memory_used@@Base+0x8ee4>  // b.none
  44e34c:	ldrb	w21, [x20]
  44e350:	cmp	x1, #0xff
  44e354:	b.ne	44e32c <_obstack_memory_used@@Base+0x73c0>  // b.any
  44e358:	ldp	x3, x2, [x19, #272]
  44e35c:	strb	wzr, [x19, #255]
  44e360:	mov	x0, x19
  44e364:	blr	x3
  44e368:	ldr	x2, [x19, #320]
  44e36c:	mov	x1, #0x1                   	// #1
  44e370:	mov	x0, #0x0                   	// #0
  44e374:	add	x2, x2, x1
  44e378:	str	x2, [x19, #320]
  44e37c:	b	44e334 <_obstack_memory_used@@Base+0x73c8>
  44e380:	ldp	x1, x5, [x19, #288]
  44e384:	add	x23, sp, #0x60
  44e388:	stp	x5, x20, [sp, #96]
  44e38c:	mov	w22, #0x1                   	// #1
  44e390:	mov	w6, w22
  44e394:	str	wzr, [sp, #112]
  44e398:	str	x1, [sp, #120]
  44e39c:	str	x23, [x19, #296]
  44e3a0:	mov	x24, x5
  44e3a4:	mov	x0, x5
  44e3a8:	mov	x5, x23
  44e3ac:	cbnz	x24, 44e3f8 <_obstack_memory_used@@Base+0x748c>
  44e3b0:	b	45153c <_obstack_memory_used@@Base+0xa5d0>
  44e3b4:	ldr	w1, [x0, #16]
  44e3b8:	cbnz	w1, 44e3f0 <_obstack_memory_used@@Base+0x7484>
  44e3bc:	cmp	w22, #0x3
  44e3c0:	b.hi	450cf8 <_obstack_memory_used@@Base+0x9d8c>  // b.pmore
  44e3c4:	ubfiz	x1, x22, #5, #32
  44e3c8:	add	w22, w22, #0x1
  44e3cc:	add	x4, x23, x1
  44e3d0:	ldp	x2, x3, [x0]
  44e3d4:	stp	x2, x3, [x4]
  44e3d8:	ldp	x2, x3, [x0, #16]
  44e3dc:	stp	x2, x3, [x4, #16]
  44e3e0:	str	x5, [x23, x1]
  44e3e4:	mov	x5, x4
  44e3e8:	str	x4, [x19, #296]
  44e3ec:	str	w6, [x0, #16]
  44e3f0:	ldr	x0, [x0]
  44e3f4:	cbz	x0, 44e40c <_obstack_memory_used@@Base+0x74a0>
  44e3f8:	ldr	x1, [x0, #8]
  44e3fc:	ldr	w1, [x1]
  44e400:	sub	w1, w1, #0x19
  44e404:	cmp	w1, #0x2
  44e408:	b.ls	44e3b4 <_obstack_memory_used@@Base+0x7448>  // b.plast
  44e40c:	ldr	x2, [x20, #16]
  44e410:	mov	x0, x19
  44e414:	mov	w1, w21
  44e418:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44e41c:	str	x24, [x19, #296]
  44e420:	ldr	w0, [sp, #112]
  44e424:	cbnz	w0, 450a84 <_obstack_memory_used@@Base+0x9b18>
  44e428:	ubfiz	x0, x22, #5, #32
  44e42c:	cmp	w22, #0x1
  44e430:	add	x23, x23, x0
  44e434:	b.eq	44e458 <_obstack_memory_used@@Base+0x74ec>  // b.none
  44e438:	ldur	x2, [x23, #-24]
  44e43c:	sub	w22, w22, #0x1
  44e440:	mov	w1, w21
  44e444:	mov	x0, x19
  44e448:	sub	x23, x23, #0x20
  44e44c:	bl	451860 <_obstack_memory_used@@Base+0xa8f4>
  44e450:	cmp	w22, #0x1
  44e454:	b.ne	44e438 <_obstack_memory_used@@Base+0x74cc>  // b.any
  44e458:	ldr	x3, [x19, #296]
  44e45c:	mov	w1, w21
  44e460:	add	x2, x20, #0x8
  44e464:	mov	x0, x19
  44e468:	bl	4526e0 <_obstack_memory_used@@Base+0xb774>
  44e46c:	ldp	x21, x22, [sp, #32]
  44e470:	ldp	x23, x24, [sp, #48]
  44e474:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44e478:	ldrsh	w0, [x20, #18]
  44e47c:	cbnz	w0, 4507e0 <_obstack_memory_used@@Base+0x9874>
  44e480:	ldr	x2, [x20, #8]
  44e484:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x3f094>
  44e488:	add	x0, x0, #0xdf0
  44e48c:	add	x0, x0, #0x288
  44e490:	ldr	x1, [x2, #8]
  44e494:	cmp	x1, x0
  44e498:	b.eq	4502d4 <_obstack_memory_used@@Base+0x9368>  // b.none
  44e49c:	mov	w1, w21
  44e4a0:	mov	x0, x19
  44e4a4:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44e4a8:	ldr	x0, [x19, #256]
  44e4ac:	add	x1, x0, #0x1
  44e4b0:	cmp	x0, #0xff
  44e4b4:	b.ne	44e4e0 <_obstack_memory_used@@Base+0x7574>  // b.any
  44e4b8:	ldp	x3, x2, [x19, #272]
  44e4bc:	strb	wzr, [x19, #255]
  44e4c0:	mov	x1, x0
  44e4c4:	mov	x0, x19
  44e4c8:	blr	x3
  44e4cc:	ldr	x2, [x19, #320]
  44e4d0:	mov	x1, #0x1                   	// #1
  44e4d4:	mov	x0, #0x0                   	// #0
  44e4d8:	add	x2, x2, x1
  44e4dc:	str	x2, [x19, #320]
  44e4e0:	str	x1, [x19, #256]
  44e4e4:	mov	w2, #0x20                  	// #32
  44e4e8:	strb	w2, [x19, x0]
  44e4ec:	strb	w2, [x19, #264]
  44e4f0:	ldrsh	w0, [x20, #16]
  44e4f4:	cbnz	w0, 4501e8 <_obstack_memory_used@@Base+0x927c>
  44e4f8:	adrp	x20, 465000 <_obstack_memory_used@@Base+0x1e094>
  44e4fc:	add	x20, x20, #0xd58
  44e500:	add	x22, x20, #0x6
  44e504:	mov	w21, #0x5f                  	// #95
  44e508:	b	44e530 <_obstack_memory_used@@Base+0x75c4>
  44e50c:	mov	x0, x1
  44e510:	add	x1, x1, #0x1
  44e514:	str	x1, [x19, #256]
  44e518:	add	x20, x20, #0x1
  44e51c:	strb	w21, [x19, x0]
  44e520:	cmp	x20, x22
  44e524:	strb	w21, [x19, #264]
  44e528:	b.eq	45025c <_obstack_memory_used@@Base+0x92f0>  // b.none
  44e52c:	ldrb	w21, [x20]
  44e530:	cmp	x1, #0xff
  44e534:	b.ne	44e50c <_obstack_memory_used@@Base+0x75a0>  // b.any
  44e538:	ldp	x3, x2, [x19, #272]
  44e53c:	strb	wzr, [x19, #255]
  44e540:	mov	x0, x19
  44e544:	blr	x3
  44e548:	ldr	x2, [x19, #320]
  44e54c:	mov	x1, #0x1                   	// #1
  44e550:	mov	x0, #0x0                   	// #0
  44e554:	add	x2, x2, x1
  44e558:	str	x2, [x19, #320]
  44e55c:	b	44e514 <_obstack_memory_used@@Base+0x75a8>
  44e560:	adrp	x24, 465000 <_obstack_memory_used@@Base+0x1e094>
  44e564:	add	x24, x24, #0xc30
  44e568:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e094>
  44e56c:	add	x24, x24, #0x15
  44e570:	add	x22, x22, #0xc31
  44e574:	mov	w23, #0x6e                  	// #110
  44e578:	ldr	x1, [x19, #256]
  44e57c:	b	44e5a0 <_obstack_memory_used@@Base+0x7634>
  44e580:	mov	x0, x1
  44e584:	add	x1, x1, #0x1
  44e588:	str	x1, [x19, #256]
  44e58c:	cmp	x24, x22
  44e590:	strb	w23, [x19, x0]
  44e594:	strb	w23, [x19, #264]
  44e598:	b.eq	44fd60 <_obstack_memory_used@@Base+0x8df4>  // b.none
  44e59c:	ldrb	w23, [x22], #1
  44e5a0:	cmp	x1, #0xff
  44e5a4:	b.ne	44e580 <_obstack_memory_used@@Base+0x7614>  // b.any
  44e5a8:	ldp	x3, x2, [x19, #272]
  44e5ac:	strb	wzr, [x19, #255]
  44e5b0:	mov	x0, x19
  44e5b4:	blr	x3
  44e5b8:	ldr	x2, [x19, #320]
  44e5bc:	mov	x1, #0x1                   	// #1
  44e5c0:	mov	x0, #0x0                   	// #0
  44e5c4:	add	x2, x2, x1
  44e5c8:	str	x2, [x19, #320]
  44e5cc:	b	44e588 <_obstack_memory_used@@Base+0x761c>
  44e5d0:	adrp	x24, 465000 <_obstack_memory_used@@Base+0x1e094>
  44e5d4:	add	x24, x24, #0xc48
  44e5d8:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e094>
  44e5dc:	add	x24, x24, #0x11
  44e5e0:	add	x22, x22, #0xc49
  44e5e4:	mov	w23, #0x76                  	// #118
  44e5e8:	ldr	x1, [x19, #256]
  44e5ec:	b	44e610 <_obstack_memory_used@@Base+0x76a4>
  44e5f0:	mov	x0, x1
  44e5f4:	add	x1, x1, #0x1
  44e5f8:	str	x1, [x19, #256]
  44e5fc:	cmp	x24, x22
  44e600:	strb	w23, [x19, x0]
  44e604:	strb	w23, [x19, #264]
  44e608:	b.eq	44fd7c <_obstack_memory_used@@Base+0x8e10>  // b.none
  44e60c:	ldrb	w23, [x22], #1
  44e610:	cmp	x1, #0xff
  44e614:	b.ne	44e5f0 <_obstack_memory_used@@Base+0x7684>  // b.any
  44e618:	ldp	x3, x2, [x19, #272]
  44e61c:	strb	wzr, [x19, #255]
  44e620:	mov	x0, x19
  44e624:	blr	x3
  44e628:	ldr	x2, [x19, #320]
  44e62c:	mov	x1, #0x1                   	// #1
  44e630:	mov	x0, #0x0                   	// #0
  44e634:	add	x2, x2, x1
  44e638:	str	x2, [x19, #320]
  44e63c:	b	44e5f8 <_obstack_memory_used@@Base+0x768c>
  44e640:	adrp	x24, 465000 <_obstack_memory_used@@Base+0x1e094>
  44e644:	add	x24, x24, #0xc60
  44e648:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e094>
  44e64c:	add	x24, x24, #0x1a
  44e650:	add	x22, x22, #0xc61
  44e654:	mov	w23, #0x63                  	// #99
  44e658:	ldr	x1, [x19, #256]
  44e65c:	b	44e680 <_obstack_memory_used@@Base+0x7714>
  44e660:	mov	x0, x1
  44e664:	add	x1, x1, #0x1
  44e668:	str	x1, [x19, #256]
  44e66c:	cmp	x24, x22
  44e670:	strb	w23, [x19, x0]
  44e674:	strb	w23, [x19, #264]
  44e678:	b.eq	44fd98 <_obstack_memory_used@@Base+0x8e2c>  // b.none
  44e67c:	ldrb	w23, [x22], #1
  44e680:	cmp	x1, #0xff
  44e684:	b.ne	44e660 <_obstack_memory_used@@Base+0x76f4>  // b.any
  44e688:	ldp	x3, x2, [x19, #272]
  44e68c:	strb	wzr, [x19, #255]
  44e690:	mov	x0, x19
  44e694:	blr	x3
  44e698:	ldr	x2, [x19, #320]
  44e69c:	mov	x1, #0x1                   	// #1
  44e6a0:	mov	x0, #0x0                   	// #0
  44e6a4:	add	x2, x2, x1
  44e6a8:	str	x2, [x19, #320]
  44e6ac:	b	44e668 <_obstack_memory_used@@Base+0x76fc>
  44e6b0:	adrp	x24, 465000 <_obstack_memory_used@@Base+0x1e094>
  44e6b4:	add	x24, x24, #0xc80
  44e6b8:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e094>
  44e6bc:	add	x24, x24, #0xf
  44e6c0:	add	x22, x22, #0xc81
  44e6c4:	mov	w23, #0x6a                  	// #106
  44e6c8:	ldr	x1, [x19, #256]
  44e6cc:	b	44e6f0 <_obstack_memory_used@@Base+0x7784>
  44e6d0:	mov	x0, x1
  44e6d4:	add	x1, x1, #0x1
  44e6d8:	str	x1, [x19, #256]
  44e6dc:	cmp	x22, x24
  44e6e0:	strb	w23, [x19, x0]
  44e6e4:	strb	w23, [x19, #264]
  44e6e8:	b.eq	44f6f8 <_obstack_memory_used@@Base+0x878c>  // b.none
  44e6ec:	ldrb	w23, [x22], #1
  44e6f0:	cmp	x1, #0xff
  44e6f4:	b.ne	44e6d0 <_obstack_memory_used@@Base+0x7764>  // b.any
  44e6f8:	ldp	x3, x2, [x19, #272]
  44e6fc:	strb	wzr, [x19, #255]
  44e700:	mov	x0, x19
  44e704:	blr	x3
  44e708:	ldr	x2, [x19, #320]
  44e70c:	mov	x1, #0x1                   	// #1
  44e710:	mov	x0, #0x0                   	// #0
  44e714:	add	x2, x2, x1
  44e718:	str	x2, [x19, #320]
  44e71c:	b	44e6d8 <_obstack_memory_used@@Base+0x776c>
  44e720:	adrp	x24, 465000 <_obstack_memory_used@@Base+0x1e094>
  44e724:	add	x24, x24, #0xce0
  44e728:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e094>
  44e72c:	add	x24, x24, #0x15
  44e730:	add	x22, x22, #0xce1
  44e734:	mov	w23, #0x72                  	// #114
  44e738:	ldr	x1, [x19, #256]
  44e73c:	b	44e760 <_obstack_memory_used@@Base+0x77f4>
  44e740:	mov	x0, x1
  44e744:	add	x1, x1, #0x1
  44e748:	str	x1, [x19, #256]
  44e74c:	cmp	x24, x22
  44e750:	strb	w23, [x19, x0]
  44e754:	strb	w23, [x19, #264]
  44e758:	b.eq	44f730 <_obstack_memory_used@@Base+0x87c4>  // b.none
  44e75c:	ldrb	w23, [x22], #1
  44e760:	cmp	x1, #0xff
  44e764:	b.ne	44e740 <_obstack_memory_used@@Base+0x77d4>  // b.any
  44e768:	ldp	x3, x2, [x19, #272]
  44e76c:	strb	wzr, [x19, #255]
  44e770:	mov	x0, x19
  44e774:	blr	x3
  44e778:	ldr	x2, [x19, #320]
  44e77c:	mov	x1, #0x1                   	// #1
  44e780:	mov	x0, #0x0                   	// #0
  44e784:	add	x2, x2, x1
  44e788:	str	x2, [x19, #320]
  44e78c:	b	44e748 <_obstack_memory_used@@Base+0x77dc>
  44e790:	adrp	x24, 465000 <_obstack_memory_used@@Base+0x1e094>
  44e794:	add	x24, x24, #0xca8
  44e798:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e094>
  44e79c:	add	x24, x24, #0x16
  44e7a0:	add	x22, x22, #0xca9
  44e7a4:	mov	w23, #0x54                  	// #84
  44e7a8:	ldr	x1, [x19, #256]
  44e7ac:	b	44e7d0 <_obstack_memory_used@@Base+0x7864>
  44e7b0:	mov	x0, x1
  44e7b4:	add	x1, x1, #0x1
  44e7b8:	str	x1, [x19, #256]
  44e7bc:	cmp	x22, x24
  44e7c0:	strb	w23, [x19, x0]
  44e7c4:	strb	w23, [x19, #264]
  44e7c8:	b.eq	44fcf0 <_obstack_memory_used@@Base+0x8d84>  // b.none
  44e7cc:	ldrb	w23, [x22], #1
  44e7d0:	cmp	x1, #0xff
  44e7d4:	b.ne	44e7b0 <_obstack_memory_used@@Base+0x7844>  // b.any
  44e7d8:	ldp	x3, x2, [x19, #272]
  44e7dc:	strb	wzr, [x19, #255]
  44e7e0:	mov	x0, x19
  44e7e4:	blr	x3
  44e7e8:	ldr	x2, [x19, #320]
  44e7ec:	mov	x1, #0x1                   	// #1
  44e7f0:	mov	x0, #0x0                   	// #0
  44e7f4:	add	x2, x2, x1
  44e7f8:	str	x2, [x19, #320]
  44e7fc:	b	44e7b8 <_obstack_memory_used@@Base+0x784c>
  44e800:	ldr	x1, [x20, #8]
  44e804:	mov	x0, x19
  44e808:	mov	w24, #0x0                   	// #0
  44e80c:	bl	44a090 <_obstack_memory_used@@Base+0x3124>
  44e810:	cbz	x0, 451224 <_obstack_memory_used@@Base+0xa2b8>
  44e814:	stp	x25, x26, [sp, #64]
  44e818:	ldr	w1, [x0]
  44e81c:	cmp	w1, #0x2f
  44e820:	b.ne	44fecc <_obstack_memory_used@@Base+0x8f60>  // b.any
  44e824:	ldr	x1, [x0, #8]
  44e828:	cbz	x1, 44fecc <_obstack_memory_used@@Base+0x8f60>
  44e82c:	ldr	x0, [x0, #16]
  44e830:	add	w24, w24, #0x1
  44e834:	cbnz	x0, 44e818 <_obstack_memory_used@@Base+0x78ac>
  44e838:	ldr	x25, [x20, #8]
  44e83c:	sub	w26, w24, #0x1
  44e840:	b	44e850 <_obstack_memory_used@@Base+0x78e4>
  44e844:	add	w22, w22, #0x1
  44e848:	cmp	w22, w24
  44e84c:	b.ge	44fe74 <_obstack_memory_used@@Base+0x8f08>  // b.tcont
  44e850:	str	w22, [x19, #316]
  44e854:	mov	x2, x25
  44e858:	mov	w1, w21
  44e85c:	mov	x0, x19
  44e860:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44e864:	cmp	w26, w22
  44e868:	b.le	44e844 <_obstack_memory_used@@Base+0x78d8>
  44e86c:	mov	w20, #0x2c                  	// #44
  44e870:	mov	x23, #0x0                   	// #0
  44e874:	ldr	x1, [x19, #256]
  44e878:	b	44e89c <_obstack_memory_used@@Base+0x7930>
  44e87c:	mov	x0, x1
  44e880:	add	x1, x1, #0x1
  44e884:	str	x1, [x19, #256]
  44e888:	strb	w20, [x19, x0]
  44e88c:	strb	w20, [x19, #264]
  44e890:	mov	w20, #0x20                  	// #32
  44e894:	cbnz	x23, 44e844 <_obstack_memory_used@@Base+0x78d8>
  44e898:	mov	x23, #0x1                   	// #1
  44e89c:	cmp	x1, #0xff
  44e8a0:	b.ne	44e87c <_obstack_memory_used@@Base+0x7910>  // b.any
  44e8a4:	ldp	x3, x2, [x19, #272]
  44e8a8:	strb	wzr, [x19, #255]
  44e8ac:	mov	x0, x19
  44e8b0:	blr	x3
  44e8b4:	ldr	x2, [x19, #320]
  44e8b8:	mov	x1, #0x1                   	// #1
  44e8bc:	mov	x0, #0x0                   	// #0
  44e8c0:	add	x2, x2, x1
  44e8c4:	str	x2, [x19, #320]
  44e8c8:	b	44e884 <_obstack_memory_used@@Base+0x7918>
  44e8cc:	ldr	x2, [x20, #8]
  44e8d0:	mov	w1, w21
  44e8d4:	mov	x0, x19
  44e8d8:	adrp	x24, 465000 <_obstack_memory_used@@Base+0x1e094>
  44e8dc:	add	x24, x24, #0xb58
  44e8e0:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e094>
  44e8e4:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44e8e8:	add	x24, x24, #0x5
  44e8ec:	add	x22, x22, #0xb59
  44e8f0:	mov	w23, #0x5b                  	// #91
  44e8f4:	ldr	x1, [x19, #256]
  44e8f8:	b	44e91c <_obstack_memory_used@@Base+0x79b0>
  44e8fc:	mov	x0, x1
  44e900:	add	x1, x1, #0x1
  44e904:	str	x1, [x19, #256]
  44e908:	cmp	x24, x22
  44e90c:	strb	w23, [x19, x0]
  44e910:	strb	w23, [x19, #264]
  44e914:	b.eq	44f83c <_obstack_memory_used@@Base+0x88d0>  // b.none
  44e918:	ldrb	w23, [x22], #1
  44e91c:	cmp	x1, #0xff
  44e920:	b.ne	44e8fc <_obstack_memory_used@@Base+0x7990>  // b.any
  44e924:	ldp	x3, x2, [x19, #272]
  44e928:	strb	wzr, [x19, #255]
  44e92c:	mov	x0, x19
  44e930:	blr	x3
  44e934:	ldr	x2, [x19, #320]
  44e938:	mov	x1, #0x1                   	// #1
  44e93c:	mov	x0, #0x0                   	// #0
  44e940:	add	x2, x2, x1
  44e944:	str	x2, [x19, #320]
  44e948:	b	44e904 <_obstack_memory_used@@Base+0x7998>
  44e94c:	adrp	x24, 465000 <_obstack_memory_used@@Base+0x1e094>
  44e950:	add	x24, x24, #0xd28
  44e954:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e094>
  44e958:	add	x24, x24, #0x1a
  44e95c:	add	x22, x22, #0xd29
  44e960:	mov	w23, #0x6e                  	// #110
  44e964:	ldr	x1, [x19, #256]
  44e968:	b	44e98c <_obstack_memory_used@@Base+0x7a20>
  44e96c:	mov	x0, x1
  44e970:	add	x1, x1, #0x1
  44e974:	str	x1, [x19, #256]
  44e978:	cmp	x24, x22
  44e97c:	strb	w23, [x19, x0]
  44e980:	strb	w23, [x19, #264]
  44e984:	b.eq	44f804 <_obstack_memory_used@@Base+0x8898>  // b.none
  44e988:	ldrb	w23, [x22], #1
  44e98c:	cmp	x1, #0xff
  44e990:	b.ne	44e96c <_obstack_memory_used@@Base+0x7a00>  // b.any
  44e994:	ldp	x3, x2, [x19, #272]
  44e998:	strb	wzr, [x19, #255]
  44e99c:	mov	x0, x19
  44e9a0:	blr	x3
  44e9a4:	ldr	x2, [x19, #320]
  44e9a8:	mov	x1, #0x1                   	// #1
  44e9ac:	mov	x0, #0x0                   	// #0
  44e9b0:	add	x2, x2, x1
  44e9b4:	str	x2, [x19, #320]
  44e9b8:	b	44e974 <_obstack_memory_used@@Base+0x7a08>
  44e9bc:	adrp	x24, 465000 <_obstack_memory_used@@Base+0x1e094>
  44e9c0:	add	x24, x24, #0xc90
  44e9c4:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e094>
  44e9c8:	add	x24, x24, #0x13
  44e9cc:	add	x22, x22, #0xc91
  44e9d0:	mov	w23, #0x67                  	// #103
  44e9d4:	ldr	x1, [x19, #256]
  44e9d8:	b	44e9fc <_obstack_memory_used@@Base+0x7a90>
  44e9dc:	mov	x0, x1
  44e9e0:	add	x1, x1, #0x1
  44e9e4:	str	x1, [x19, #256]
  44e9e8:	cmp	x24, x22
  44e9ec:	strb	w23, [x19, x0]
  44e9f0:	strb	w23, [x19, #264]
  44e9f4:	b.eq	44f714 <_obstack_memory_used@@Base+0x87a8>  // b.none
  44e9f8:	ldrb	w23, [x22], #1
  44e9fc:	cmp	x1, #0xff
  44ea00:	b.ne	44e9dc <_obstack_memory_used@@Base+0x7a70>  // b.any
  44ea04:	ldp	x3, x2, [x19, #272]
  44ea08:	strb	wzr, [x19, #255]
  44ea0c:	mov	x0, x19
  44ea10:	blr	x3
  44ea14:	ldr	x2, [x19, #320]
  44ea18:	mov	x1, #0x1                   	// #1
  44ea1c:	mov	x0, #0x0                   	// #0
  44ea20:	add	x2, x2, x1
  44ea24:	str	x2, [x19, #320]
  44ea28:	b	44e9e4 <_obstack_memory_used@@Base+0x7a78>
  44ea2c:	adrp	x24, 465000 <_obstack_memory_used@@Base+0x1e094>
  44ea30:	add	x24, x24, #0xcc0
  44ea34:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e094>
  44ea38:	add	x24, x24, #0x19
  44ea3c:	add	x22, x22, #0xcc1
  44ea40:	mov	w23, #0x54                  	// #84
  44ea44:	ldr	x1, [x19, #256]
  44ea48:	b	44ea6c <_obstack_memory_used@@Base+0x7b00>
  44ea4c:	mov	x0, x1
  44ea50:	add	x1, x1, #0x1
  44ea54:	str	x1, [x19, #256]
  44ea58:	cmp	x24, x22
  44ea5c:	strb	w23, [x19, x0]
  44ea60:	strb	w23, [x19, #264]
  44ea64:	b.eq	44fd0c <_obstack_memory_used@@Base+0x8da0>  // b.none
  44ea68:	ldrb	w23, [x22], #1
  44ea6c:	cmp	x1, #0xff
  44ea70:	b.ne	44ea4c <_obstack_memory_used@@Base+0x7ae0>  // b.any
  44ea74:	ldp	x3, x2, [x19, #272]
  44ea78:	strb	wzr, [x19, #255]
  44ea7c:	mov	x0, x19
  44ea80:	blr	x3
  44ea84:	ldr	x2, [x19, #320]
  44ea88:	mov	x1, #0x1                   	// #1
  44ea8c:	mov	x0, #0x0                   	// #0
  44ea90:	add	x2, x2, x1
  44ea94:	str	x2, [x19, #320]
  44ea98:	b	44ea54 <_obstack_memory_used@@Base+0x7ae8>
  44ea9c:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e094>
  44eaa0:	add	x22, x22, #0xbb8
  44eaa4:	add	x24, x22, #0x8
  44eaa8:	mov	w23, #0x56                  	// #86
  44eaac:	ldr	x1, [x19, #256]
  44eab0:	b	44ead8 <_obstack_memory_used@@Base+0x7b6c>
  44eab4:	mov	x0, x1
  44eab8:	add	x1, x1, #0x1
  44eabc:	str	x1, [x19, #256]
  44eac0:	add	x22, x22, #0x1
  44eac4:	strb	w23, [x19, x0]
  44eac8:	cmp	x24, x22
  44eacc:	strb	w23, [x19, #264]
  44ead0:	b.eq	44fc58 <_obstack_memory_used@@Base+0x8cec>  // b.none
  44ead4:	ldrb	w23, [x22]
  44ead8:	cmp	x1, #0xff
  44eadc:	b.ne	44eab4 <_obstack_memory_used@@Base+0x7b48>  // b.any
  44eae0:	ldp	x3, x2, [x19, #272]
  44eae4:	strb	wzr, [x19, #255]
  44eae8:	mov	x0, x19
  44eaec:	blr	x3
  44eaf0:	ldr	x2, [x19, #320]
  44eaf4:	mov	x1, #0x1                   	// #1
  44eaf8:	mov	x0, #0x0                   	// #0
  44eafc:	add	x2, x2, x1
  44eb00:	str	x2, [x19, #320]
  44eb04:	b	44eabc <_obstack_memory_used@@Base+0x7b50>
  44eb08:	adrp	x24, 465000 <_obstack_memory_used@@Base+0x1e094>
  44eb0c:	add	x24, x24, #0xbc8
  44eb10:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e094>
  44eb14:	add	x24, x24, #0x18
  44eb18:	add	x22, x22, #0xbc9
  44eb1c:	mov	w23, #0x63                  	// #99
  44eb20:	ldr	x1, [x19, #256]
  44eb24:	b	44eb48 <_obstack_memory_used@@Base+0x7bdc>
  44eb28:	mov	x0, x1
  44eb2c:	add	x1, x1, #0x1
  44eb30:	str	x1, [x19, #256]
  44eb34:	cmp	x24, x22
  44eb38:	strb	w23, [x19, x0]
  44eb3c:	strb	w23, [x19, #264]
  44eb40:	b.eq	44fc74 <_obstack_memory_used@@Base+0x8d08>  // b.none
  44eb44:	ldrb	w23, [x22], #1
  44eb48:	cmp	x1, #0xff
  44eb4c:	b.ne	44eb28 <_obstack_memory_used@@Base+0x7bbc>  // b.any
  44eb50:	ldp	x3, x2, [x19, #272]
  44eb54:	strb	wzr, [x19, #255]
  44eb58:	mov	x0, x19
  44eb5c:	blr	x3
  44eb60:	ldr	x2, [x19, #320]
  44eb64:	mov	x1, #0x1                   	// #1
  44eb68:	mov	x0, #0x0                   	// #0
  44eb6c:	add	x2, x2, x1
  44eb70:	str	x2, [x19, #320]
  44eb74:	b	44eb30 <_obstack_memory_used@@Base+0x7bc4>
  44eb78:	adrp	x24, 465000 <_obstack_memory_used@@Base+0x1e094>
  44eb7c:	add	x24, x24, #0xbf0
  44eb80:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e094>
  44eb84:	add	x24, x24, #0xd
  44eb88:	add	x22, x22, #0xbf1
  44eb8c:	mov	w23, #0x74                  	// #116
  44eb90:	ldr	x1, [x19, #256]
  44eb94:	b	44ebb8 <_obstack_memory_used@@Base+0x7c4c>
  44eb98:	mov	x0, x1
  44eb9c:	add	x1, x1, #0x1
  44eba0:	str	x1, [x19, #256]
  44eba4:	cmp	x24, x22
  44eba8:	strb	w23, [x19, x0]
  44ebac:	strb	w23, [x19, #264]
  44ebb0:	b.eq	44f7cc <_obstack_memory_used@@Base+0x8860>  // b.none
  44ebb4:	ldrb	w23, [x22], #1
  44ebb8:	cmp	x1, #0xff
  44ebbc:	b.ne	44eb98 <_obstack_memory_used@@Base+0x7c2c>  // b.any
  44ebc0:	ldp	x3, x2, [x19, #272]
  44ebc4:	strb	wzr, [x19, #255]
  44ebc8:	mov	x0, x19
  44ebcc:	blr	x3
  44ebd0:	ldr	x2, [x19, #320]
  44ebd4:	mov	x1, #0x1                   	// #1
  44ebd8:	mov	x0, #0x0                   	// #0
  44ebdc:	add	x2, x2, x1
  44ebe0:	str	x2, [x19, #320]
  44ebe4:	b	44eba0 <_obstack_memory_used@@Base+0x7c34>
  44ebe8:	adrp	x24, 465000 <_obstack_memory_used@@Base+0x1e094>
  44ebec:	add	x24, x24, #0xc00
  44ebf0:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e094>
  44ebf4:	add	x24, x24, #0x12
  44ebf8:	add	x22, x22, #0xc01
  44ebfc:	mov	w23, #0x74                  	// #116
  44ec00:	ldr	x1, [x19, #256]
  44ec04:	b	44ec28 <_obstack_memory_used@@Base+0x7cbc>
  44ec08:	mov	x0, x1
  44ec0c:	add	x1, x1, #0x1
  44ec10:	str	x1, [x19, #256]
  44ec14:	cmp	x24, x22
  44ec18:	strb	w23, [x19, x0]
  44ec1c:	strb	w23, [x19, #264]
  44ec20:	b.eq	44f7e8 <_obstack_memory_used@@Base+0x887c>  // b.none
  44ec24:	ldrb	w23, [x22], #1
  44ec28:	cmp	x1, #0xff
  44ec2c:	b.ne	44ec08 <_obstack_memory_used@@Base+0x7c9c>  // b.any
  44ec30:	ldp	x3, x2, [x19, #272]
  44ec34:	strb	wzr, [x19, #255]
  44ec38:	mov	x0, x19
  44ec3c:	blr	x3
  44ec40:	ldr	x2, [x19, #320]
  44ec44:	mov	x1, #0x1                   	// #1
  44ec48:	mov	x0, #0x0                   	// #0
  44ec4c:	add	x2, x2, x1
  44ec50:	str	x2, [x19, #320]
  44ec54:	b	44ec10 <_obstack_memory_used@@Base+0x7ca4>
  44ec58:	adrp	x24, 465000 <_obstack_memory_used@@Base+0x1e094>
  44ec5c:	add	x24, x24, #0xc18
  44ec60:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e094>
  44ec64:	add	x24, x24, #0x10
  44ec68:	add	x22, x22, #0xc19
  44ec6c:	mov	w23, #0x74                  	// #116
  44ec70:	ldr	x1, [x19, #256]
  44ec74:	b	44ec98 <_obstack_memory_used@@Base+0x7d2c>
  44ec78:	mov	x0, x1
  44ec7c:	add	x1, x1, #0x1
  44ec80:	str	x1, [x19, #256]
  44ec84:	cmp	x24, x22
  44ec88:	strb	w23, [x19, x0]
  44ec8c:	strb	w23, [x19, #264]
  44ec90:	b.eq	44fc3c <_obstack_memory_used@@Base+0x8cd0>  // b.none
  44ec94:	ldrb	w23, [x22], #1
  44ec98:	cmp	x1, #0xff
  44ec9c:	b.ne	44ec78 <_obstack_memory_used@@Base+0x7d0c>  // b.any
  44eca0:	ldp	x3, x2, [x19, #272]
  44eca4:	strb	wzr, [x19, #255]
  44eca8:	mov	x0, x19
  44ecac:	blr	x3
  44ecb0:	ldr	x2, [x19, #320]
  44ecb4:	mov	x1, #0x1                   	// #1
  44ecb8:	mov	x0, #0x0                   	// #0
  44ecbc:	add	x2, x2, x1
  44ecc0:	str	x2, [x19, #320]
  44ecc4:	b	44ec80 <_obstack_memory_used@@Base+0x7d14>
  44ecc8:	stp	x25, x26, [sp, #64]
  44eccc:	ldr	x25, [x20, #8]
  44ecd0:	ldr	x22, [x19, #296]
  44ecd4:	str	xzr, [x19, #296]
  44ecd8:	cbz	x25, 450d90 <_obstack_memory_used@@Base+0x9e24>
  44ecdc:	add	x23, sp, #0x60
  44ece0:	mov	x2, #0x1f                  	// #31
  44ece4:	ldr	x6, [x19, #288]
  44ece8:	mov	x3, x23
  44ecec:	mov	x0, #0x0                   	// #0
  44ecf0:	mov	w24, #0x0                   	// #0
  44ecf4:	mov	x1, #0x1                   	// #1
  44ecf8:	movk	x2, #0x1a, lsl #48
  44ecfc:	str	wzr, [x3, #16]
  44ed00:	add	w24, w24, #0x1
  44ed04:	str	x0, [x3]
  44ed08:	mov	x4, x3
  44ed0c:	ldr	w5, [x25]
  44ed10:	str	x25, [x3, #8]
  44ed14:	str	x6, [x3, #24]
  44ed18:	sub	w0, w5, #0x1c
  44ed1c:	cmp	w0, #0x34
  44ed20:	b.hi	44ed30 <_obstack_memory_used@@Base+0x7dc4>  // b.pmore
  44ed24:	lsl	x0, x1, x0
  44ed28:	tst	x0, x2
  44ed2c:	b.ne	44feb0 <_obstack_memory_used@@Base+0x8f44>  // b.any
  44ed30:	str	x3, [x19, #296]
  44ed34:	cmp	w5, #0x2
  44ed38:	b.eq	450c70 <_obstack_memory_used@@Base+0x9d04>  // b.none
  44ed3c:	cmp	w5, #0x4
  44ed40:	b.ne	44ed50 <_obstack_memory_used@@Base+0x7de4>  // b.any
  44ed44:	add	x0, sp, #0x50
  44ed48:	stp	x6, x25, [sp, #80]
  44ed4c:	str	x0, [x19, #288]
  44ed50:	ldr	x2, [x20, #16]
  44ed54:	mov	x0, x19
  44ed58:	mov	w1, w21
  44ed5c:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44ed60:	ldr	w0, [x25]
  44ed64:	cmp	w0, #0x4
  44ed68:	b.ne	44ed74 <_obstack_memory_used@@Base+0x7e08>  // b.any
  44ed6c:	ldr	x0, [sp, #80]
  44ed70:	str	x0, [x19, #288]
  44ed74:	sub	w20, w24, #0x1
  44ed78:	mov	w24, #0x20                  	// #32
  44ed7c:	ubfiz	x0, x20, #5, #32
  44ed80:	add	x23, x23, x0
  44ed84:	b	44ed8c <_obstack_memory_used@@Base+0x7e20>
  44ed88:	sub	w20, w20, #0x1
  44ed8c:	ldr	w0, [x23, #16]
  44ed90:	cbnz	w0, 44ede8 <_obstack_memory_used@@Base+0x7e7c>
  44ed94:	ldr	x0, [x19, #256]
  44ed98:	add	x1, x0, #0x1
  44ed9c:	cmp	x0, #0xff
  44eda0:	b.ne	44edcc <_obstack_memory_used@@Base+0x7e60>  // b.any
  44eda4:	ldp	x3, x2, [x19, #272]
  44eda8:	strb	wzr, [x19, #255]
  44edac:	mov	x1, x0
  44edb0:	mov	x0, x19
  44edb4:	blr	x3
  44edb8:	ldr	x2, [x19, #320]
  44edbc:	mov	x1, #0x1                   	// #1
  44edc0:	mov	x0, #0x0                   	// #0
  44edc4:	add	x2, x2, x1
  44edc8:	str	x2, [x19, #320]
  44edcc:	str	x1, [x19, #256]
  44edd0:	mov	w1, w21
  44edd4:	ldr	x2, [x23, #8]
  44edd8:	strb	w24, [x19, x0]
  44eddc:	strb	w24, [x19, #264]
  44ede0:	mov	x0, x19
  44ede4:	bl	451860 <_obstack_memory_used@@Base+0xa8f4>
  44ede8:	sub	x23, x23, #0x20
  44edec:	cbnz	w20, 44ed88 <_obstack_memory_used@@Base+0x7e1c>
  44edf0:	ldp	x23, x24, [sp, #48]
  44edf4:	ldp	x25, x26, [sp, #64]
  44edf8:	str	x22, [x19, #296]
  44edfc:	ldp	x21, x22, [sp, #32]
  44ee00:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44ee04:	ldr	x22, [x20, #8]
  44ee08:	ldr	x24, [x19, #296]
  44ee0c:	str	xzr, [x19, #296]
  44ee10:	ldr	x23, [x19, #368]
  44ee14:	str	x20, [x19, #368]
  44ee18:	tbz	w21, #2, 44ee30 <_obstack_memory_used@@Base+0x7ec4>
  44ee1c:	ldr	w0, [x22]
  44ee20:	cbnz	w0, 44ee30 <_obstack_memory_used@@Base+0x7ec4>
  44ee24:	ldr	w0, [x22, #16]
  44ee28:	cmp	w0, #0x6
  44ee2c:	b.eq	451128 <_obstack_memory_used@@Base+0xa1bc>  // b.none
  44ee30:	mov	x0, x19
  44ee34:	mov	x2, x22
  44ee38:	mov	w1, w21
  44ee3c:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44ee40:	ldrb	w0, [x19, #264]
  44ee44:	cmp	w0, #0x3c
  44ee48:	b.eq	450990 <_obstack_memory_used@@Base+0x9a24>  // b.none
  44ee4c:	ldr	x1, [x19, #256]
  44ee50:	add	x0, x1, #0x1
  44ee54:	cmp	x1, #0xff
  44ee58:	b.ne	44ee80 <_obstack_memory_used@@Base+0x7f14>  // b.any
  44ee5c:	ldp	x3, x2, [x19, #272]
  44ee60:	strb	wzr, [x19, #255]
  44ee64:	mov	x0, x19
  44ee68:	blr	x3
  44ee6c:	ldr	x2, [x19, #320]
  44ee70:	mov	x0, #0x1                   	// #1
  44ee74:	mov	x1, #0x0                   	// #0
  44ee78:	add	x2, x2, x0
  44ee7c:	str	x2, [x19, #320]
  44ee80:	str	x0, [x19, #256]
  44ee84:	mov	w0, #0x3c                  	// #60
  44ee88:	strb	w0, [x19, x1]
  44ee8c:	mov	w1, w21
  44ee90:	strb	w0, [x19, #264]
  44ee94:	mov	x0, x19
  44ee98:	ldr	x2, [x20, #16]
  44ee9c:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44eea0:	ldrb	w0, [x19, #264]
  44eea4:	cmp	w0, #0x3e
  44eea8:	b.eq	450948 <_obstack_memory_used@@Base+0x99dc>  // b.none
  44eeac:	ldr	x1, [x19, #256]
  44eeb0:	add	x0, x1, #0x1
  44eeb4:	cmp	x1, #0xff
  44eeb8:	b.ne	44eee0 <_obstack_memory_used@@Base+0x7f74>  // b.any
  44eebc:	ldp	x3, x2, [x19, #272]
  44eec0:	strb	wzr, [x19, #255]
  44eec4:	mov	x0, x19
  44eec8:	blr	x3
  44eecc:	ldr	x2, [x19, #320]
  44eed0:	mov	x0, #0x1                   	// #1
  44eed4:	mov	x1, #0x0                   	// #0
  44eed8:	add	x2, x2, x0
  44eedc:	str	x2, [x19, #320]
  44eee0:	str	x0, [x19, #256]
  44eee4:	mov	w0, #0x3e                  	// #62
  44eee8:	strb	w0, [x19, x1]
  44eeec:	strb	w0, [x19, #264]
  44eef0:	ldp	x21, x22, [sp, #32]
  44eef4:	str	x24, [x19, #296]
  44eef8:	str	x23, [x19, #368]
  44eefc:	ldp	x23, x24, [sp, #48]
  44ef00:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44ef04:	ldr	w0, [x19, #312]
  44ef08:	cbz	w0, 44ffd4 <_obstack_memory_used@@Base+0x9068>
  44ef0c:	adrp	x23, 465000 <_obstack_memory_used@@Base+0x1e094>
  44ef10:	add	x23, x23, #0xb80
  44ef14:	adrp	x21, 465000 <_obstack_memory_used@@Base+0x1e094>
  44ef18:	add	x23, x23, #0x5
  44ef1c:	add	x21, x21, #0xb81
  44ef20:	mov	w22, #0x61                  	// #97
  44ef24:	ldr	x1, [x19, #256]
  44ef28:	b	44ef4c <_obstack_memory_used@@Base+0x7fe0>
  44ef2c:	mov	x0, x1
  44ef30:	add	x1, x1, #0x1
  44ef34:	str	x1, [x19, #256]
  44ef38:	cmp	x23, x21
  44ef3c:	strb	w22, [x19, x0]
  44ef40:	strb	w22, [x19, #264]
  44ef44:	b.eq	45001c <_obstack_memory_used@@Base+0x90b0>  // b.none
  44ef48:	ldrb	w22, [x21], #1
  44ef4c:	cmp	x1, #0xff
  44ef50:	b.ne	44ef2c <_obstack_memory_used@@Base+0x7fc0>  // b.any
  44ef54:	ldp	x3, x2, [x19, #272]
  44ef58:	strb	wzr, [x19, #255]
  44ef5c:	mov	x0, x19
  44ef60:	blr	x3
  44ef64:	ldr	x2, [x19, #320]
  44ef68:	mov	x1, #0x1                   	// #1
  44ef6c:	mov	x0, #0x0                   	// #0
  44ef70:	add	x2, x2, x1
  44ef74:	str	x2, [x19, #320]
  44ef78:	b	44ef34 <_obstack_memory_used@@Base+0x7fc8>
  44ef7c:	ldr	x1, [x19, #256]
  44ef80:	add	x0, x1, #0x1
  44ef84:	cmp	x1, #0xff
  44ef88:	b.ne	44efb0 <_obstack_memory_used@@Base+0x8044>  // b.any
  44ef8c:	ldp	x3, x2, [x19, #272]
  44ef90:	strb	wzr, [x19, #255]
  44ef94:	mov	x0, x19
  44ef98:	blr	x3
  44ef9c:	ldr	x2, [x19, #320]
  44efa0:	mov	x0, #0x1                   	// #1
  44efa4:	mov	x1, #0x0                   	// #0
  44efa8:	add	x2, x2, x0
  44efac:	str	x2, [x19, #320]
  44efb0:	str	x0, [x19, #256]
  44efb4:	mov	w0, #0x7e                  	// #126
  44efb8:	strb	w0, [x19, x1]
  44efbc:	mov	w1, w21
  44efc0:	strb	w0, [x19, #264]
  44efc4:	mov	x0, x19
  44efc8:	ldr	x2, [x20, #16]
  44efcc:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44efd0:	ldp	x21, x22, [sp, #32]
  44efd4:	ldp	x23, x24, [sp, #48]
  44efd8:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44efdc:	adrp	x24, 465000 <_obstack_memory_used@@Base+0x1e094>
  44efe0:	add	x24, x24, #0xba8
  44efe4:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e094>
  44efe8:	add	x24, x24, #0xb
  44efec:	add	x22, x22, #0xba9
  44eff0:	mov	w23, #0x76                  	// #118
  44eff4:	ldr	x1, [x19, #256]
  44eff8:	b	44f01c <_obstack_memory_used@@Base+0x80b0>
  44effc:	mov	x0, x1
  44f000:	add	x1, x1, #0x1
  44f004:	str	x1, [x19, #256]
  44f008:	cmp	x24, x22
  44f00c:	strb	w23, [x19, x0]
  44f010:	strb	w23, [x19, #264]
  44f014:	b.eq	44f7b0 <_obstack_memory_used@@Base+0x8844>  // b.none
  44f018:	ldrb	w23, [x22], #1
  44f01c:	cmp	x1, #0xff
  44f020:	b.ne	44effc <_obstack_memory_used@@Base+0x8090>  // b.any
  44f024:	ldp	x3, x2, [x19, #272]
  44f028:	strb	wzr, [x19, #255]
  44f02c:	mov	x0, x19
  44f030:	blr	x3
  44f034:	ldr	x2, [x19, #320]
  44f038:	mov	x1, #0x1                   	// #1
  44f03c:	mov	x0, #0x0                   	// #0
  44f040:	add	x2, x2, x1
  44f044:	str	x2, [x19, #320]
  44f048:	b	44f004 <_obstack_memory_used@@Base+0x8098>
  44f04c:	ldr	x0, [x20, #16]
  44f050:	ldr	w0, [x0]
  44f054:	cmp	w0, #0x39
  44f058:	b.ne	44da48 <_obstack_memory_used@@Base+0x6adc>  // b.any
  44f05c:	ldr	x2, [x20, #8]
  44f060:	ldr	x0, [x2, #8]
  44f064:	ldr	x0, [x0]
  44f068:	ldrb	w1, [x0, #1]
  44f06c:	cmp	w1, #0x63
  44f070:	b.eq	450da8 <_obstack_memory_used@@Base+0x9e3c>  // b.none
  44f074:	add	x3, x20, #0x10
  44f078:	mov	w1, w21
  44f07c:	mov	x0, x19
  44f080:	bl	452b18 <_obstack_memory_used@@Base+0xbbac>
  44f084:	cbnz	w0, 451110 <_obstack_memory_used@@Base+0xa1a4>
  44f088:	ldr	x0, [x20, #8]
  44f08c:	ldr	w1, [x0]
  44f090:	cmp	w1, #0x32
  44f094:	b.eq	451284 <_obstack_memory_used@@Base+0xa318>  // b.none
  44f098:	ldr	x0, [x0, #8]
  44f09c:	ldr	x1, [x0]
  44f0a0:	ldrb	w0, [x1]
  44f0a4:	subs	w0, w0, #0x63
  44f0a8:	b.ne	44f0bc <_obstack_memory_used@@Base+0x8150>  // b.any
  44f0ac:	ldrb	w0, [x1, #1]
  44f0b0:	subs	w0, w0, #0x6c
  44f0b4:	b.ne	44f0bc <_obstack_memory_used@@Base+0x8150>  // b.any
  44f0b8:	ldrb	w0, [x1, #2]
  44f0bc:	ldr	x1, [x20, #16]
  44f0c0:	ldr	x2, [x1, #8]
  44f0c4:	cbnz	w0, 44f0d4 <_obstack_memory_used@@Base+0x8168>
  44f0c8:	ldr	w0, [x2]
  44f0cc:	cmp	w0, #0x3
  44f0d0:	b.eq	451348 <_obstack_memory_used@@Base+0xa3dc>  // b.none
  44f0d4:	mov	w1, w21
  44f0d8:	mov	x0, x19
  44f0dc:	bl	452a20 <_obstack_memory_used@@Base+0xbab4>
  44f0e0:	ldr	x2, [x20, #8]
  44f0e4:	ldr	x0, [x2, #8]
  44f0e8:	ldr	x0, [x0]
  44f0ec:	ldrb	w1, [x0]
  44f0f0:	cmp	w1, #0x69
  44f0f4:	b.ne	451060 <_obstack_memory_used@@Base+0xa0f4>  // b.any
  44f0f8:	ldrb	w3, [x0, #1]
  44f0fc:	cmp	w3, #0x78
  44f100:	b.ne	451060 <_obstack_memory_used@@Base+0xa0f4>  // b.any
  44f104:	ldrb	w3, [x0, #2]
  44f108:	cbnz	w3, 451060 <_obstack_memory_used@@Base+0xa0f4>
  44f10c:	ldr	x1, [x19, #256]
  44f110:	cmp	x1, #0xff
  44f114:	b.ne	44f13c <_obstack_memory_used@@Base+0x81d0>  // b.any
  44f118:	ldp	x3, x2, [x19, #272]
  44f11c:	strb	wzr, [x19, #255]
  44f120:	mov	x0, x19
  44f124:	blr	x3
  44f128:	str	xzr, [x19, #256]
  44f12c:	ldr	x0, [x19, #320]
  44f130:	mov	x1, #0x0                   	// #0
  44f134:	add	x0, x0, #0x1
  44f138:	str	x0, [x19, #320]
  44f13c:	add	x0, x1, #0x1
  44f140:	str	x0, [x19, #256]
  44f144:	mov	w0, #0x5b                  	// #91
  44f148:	strb	w0, [x19, x1]
  44f14c:	strb	w0, [x19, #264]
  44f150:	mov	w1, w21
  44f154:	mov	x0, x19
  44f158:	ldr	x2, [x20, #16]
  44f15c:	ldr	x2, [x2, #16]
  44f160:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44f164:	ldr	x1, [x19, #256]
  44f168:	cmp	x1, #0xff
  44f16c:	b.ne	44f194 <_obstack_memory_used@@Base+0x8228>  // b.any
  44f170:	ldp	x3, x2, [x19, #272]
  44f174:	strb	wzr, [x19, #255]
  44f178:	mov	x0, x19
  44f17c:	blr	x3
  44f180:	str	xzr, [x19, #256]
  44f184:	ldr	x0, [x19, #320]
  44f188:	mov	x1, #0x0                   	// #0
  44f18c:	add	x0, x0, #0x1
  44f190:	str	x0, [x19, #320]
  44f194:	add	x0, x1, #0x1
  44f198:	str	x0, [x19, #256]
  44f19c:	mov	w0, #0x5d                  	// #93
  44f1a0:	strb	w0, [x19, x1]
  44f1a4:	strb	w0, [x19, #264]
  44f1a8:	ldr	x0, [x20, #8]
  44f1ac:	ldr	w1, [x0]
  44f1b0:	cmp	w1, #0x32
  44f1b4:	b.eq	451268 <_obstack_memory_used@@Base+0xa2fc>  // b.none
  44f1b8:	ldp	x21, x22, [sp, #32]
  44f1bc:	ldp	x23, x24, [sp, #48]
  44f1c0:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44f1c4:	adrp	x24, 465000 <_obstack_memory_used@@Base+0x1e094>
  44f1c8:	add	x24, x24, #0xde0
  44f1cc:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e094>
  44f1d0:	add	x24, x24, #0xe
  44f1d4:	add	x22, x22, #0xde1
  44f1d8:	mov	w23, #0x6a                  	// #106
  44f1dc:	ldr	x1, [x19, #256]
  44f1e0:	b	44f204 <_obstack_memory_used@@Base+0x8298>
  44f1e4:	mov	x0, x1
  44f1e8:	add	x1, x1, #0x1
  44f1ec:	str	x1, [x19, #256]
  44f1f0:	cmp	x24, x22
  44f1f4:	strb	w23, [x19, x0]
  44f1f8:	strb	w23, [x19, #264]
  44f1fc:	b.eq	44fdb4 <_obstack_memory_used@@Base+0x8e48>  // b.none
  44f200:	ldrb	w23, [x22], #1
  44f204:	cmp	x1, #0xff
  44f208:	b.ne	44f1e4 <_obstack_memory_used@@Base+0x8278>  // b.any
  44f20c:	ldp	x3, x2, [x19, #272]
  44f210:	strb	wzr, [x19, #255]
  44f214:	mov	x0, x19
  44f218:	blr	x3
  44f21c:	ldr	x2, [x19, #320]
  44f220:	mov	x1, #0x1                   	// #1
  44f224:	mov	x0, #0x0                   	// #0
  44f228:	add	x2, x2, x1
  44f22c:	str	x2, [x19, #320]
  44f230:	b	44f1ec <_obstack_memory_used@@Base+0x8280>
  44f234:	ldr	x2, [x20, #8]
  44f238:	mov	w1, w21
  44f23c:	mov	x0, x19
  44f240:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44f244:	ldr	x2, [x20, #16]
  44f248:	mov	w1, w21
  44f24c:	mov	x0, x19
  44f250:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44f254:	ldp	x21, x22, [sp, #32]
  44f258:	ldp	x23, x24, [sp, #48]
  44f25c:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44f260:	ldr	x1, [x19, #256]
  44f264:	ldrb	w20, [x20, #8]
  44f268:	add	x0, x1, #0x1
  44f26c:	cmp	x1, #0xff
  44f270:	b.ne	44f298 <_obstack_memory_used@@Base+0x832c>  // b.any
  44f274:	ldp	x3, x2, [x19, #272]
  44f278:	strb	wzr, [x19, #255]
  44f27c:	mov	x0, x19
  44f280:	blr	x3
  44f284:	ldr	x2, [x19, #320]
  44f288:	mov	x0, #0x1                   	// #1
  44f28c:	mov	x1, #0x0                   	// #0
  44f290:	add	x2, x2, x0
  44f294:	str	x2, [x19, #320]
  44f298:	str	x0, [x19, #256]
  44f29c:	strb	w20, [x19, x1]
  44f2a0:	strb	w20, [x19, #264]
  44f2a4:	ldp	x21, x22, [sp, #32]
  44f2a8:	ldp	x23, x24, [sp, #48]
  44f2ac:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44f2b0:	ldr	w2, [x20, #8]
  44f2b4:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  44f2b8:	add	x1, x1, #0x40
  44f2bc:	add	x20, sp, #0x60
  44f2c0:	mov	x0, x20
  44f2c4:	bl	402350 <sprintf@plt>
  44f2c8:	mov	x0, x20
  44f2cc:	bl	4022b0 <strlen@plt>
  44f2d0:	cbz	x0, 451200 <_obstack_memory_used@@Base+0xa294>
  44f2d4:	add	x22, x20, x0
  44f2d8:	ldr	x1, [x19, #256]
  44f2dc:	b	44f300 <_obstack_memory_used@@Base+0x8394>
  44f2e0:	mov	x0, x1
  44f2e4:	add	x1, x1, #0x1
  44f2e8:	str	x1, [x19, #256]
  44f2ec:	add	x20, x20, #0x1
  44f2f0:	strb	w21, [x19, x0]
  44f2f4:	cmp	x20, x22
  44f2f8:	strb	w21, [x19, #264]
  44f2fc:	b.eq	44fe68 <_obstack_memory_used@@Base+0x8efc>  // b.none
  44f300:	ldrb	w21, [x20]
  44f304:	cmp	x1, #0xff
  44f308:	b.ne	44f2e0 <_obstack_memory_used@@Base+0x8374>  // b.any
  44f30c:	ldp	x3, x2, [x19, #272]
  44f310:	strb	wzr, [x19, #255]
  44f314:	mov	x0, x19
  44f318:	blr	x3
  44f31c:	ldr	x2, [x19, #320]
  44f320:	mov	x1, #0x1                   	// #1
  44f324:	mov	x0, #0x0                   	// #0
  44f328:	add	x2, x2, x1
  44f32c:	str	x2, [x19, #320]
  44f330:	b	44f2e8 <_obstack_memory_used@@Base+0x837c>
  44f334:	adrp	x24, 465000 <_obstack_memory_used@@Base+0x1e094>
  44f338:	add	x24, x24, #0xdf0
  44f33c:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e094>
  44f340:	add	x24, x24, #0xa
  44f344:	add	x22, x22, #0xdf1
  44f348:	mov	w23, #0x64                  	// #100
  44f34c:	ldr	x1, [x19, #256]
  44f350:	b	44f374 <_obstack_memory_used@@Base+0x8408>
  44f354:	mov	x0, x1
  44f358:	add	x1, x1, #0x1
  44f35c:	str	x1, [x19, #256]
  44f360:	cmp	x22, x24
  44f364:	strb	w23, [x19, x0]
  44f368:	strb	w23, [x19, #264]
  44f36c:	b.eq	44fbdc <_obstack_memory_used@@Base+0x8c70>  // b.none
  44f370:	ldrb	w23, [x22], #1
  44f374:	cmp	x1, #0xff
  44f378:	b.ne	44f354 <_obstack_memory_used@@Base+0x83e8>  // b.any
  44f37c:	ldp	x3, x2, [x19, #272]
  44f380:	strb	wzr, [x19, #255]
  44f384:	mov	x0, x19
  44f388:	blr	x3
  44f38c:	ldr	x2, [x19, #320]
  44f390:	mov	x1, #0x1                   	// #1
  44f394:	mov	x0, #0x0                   	// #0
  44f398:	add	x2, x2, x1
  44f39c:	str	x2, [x19, #320]
  44f3a0:	b	44f35c <_obstack_memory_used@@Base+0x83f0>
  44f3a4:	adrp	x24, 465000 <_obstack_memory_used@@Base+0x1e094>
  44f3a8:	add	x24, x24, #0xe10
  44f3ac:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e094>
  44f3b0:	add	x24, x24, #0x1d
  44f3b4:	add	x22, x22, #0xe11
  44f3b8:	mov	w23, #0x67                  	// #103
  44f3bc:	ldr	x1, [x19, #256]
  44f3c0:	b	44f3e4 <_obstack_memory_used@@Base+0x8478>
  44f3c4:	mov	x0, x1
  44f3c8:	add	x1, x1, #0x1
  44f3cc:	str	x1, [x19, #256]
  44f3d0:	cmp	x22, x24
  44f3d4:	strb	w23, [x19, x0]
  44f3d8:	strb	w23, [x19, #264]
  44f3dc:	b.eq	44fe20 <_obstack_memory_used@@Base+0x8eb4>  // b.none
  44f3e0:	ldrb	w23, [x22], #1
  44f3e4:	cmp	x1, #0xff
  44f3e8:	b.ne	44f3c4 <_obstack_memory_used@@Base+0x8458>  // b.any
  44f3ec:	ldp	x3, x2, [x19, #272]
  44f3f0:	strb	wzr, [x19, #255]
  44f3f4:	mov	x0, x19
  44f3f8:	blr	x3
  44f3fc:	ldr	x2, [x19, #320]
  44f400:	mov	x1, #0x1                   	// #1
  44f404:	mov	x0, #0x0                   	// #0
  44f408:	add	x2, x2, x1
  44f40c:	str	x2, [x19, #320]
  44f410:	b	44f3cc <_obstack_memory_used@@Base+0x8460>
  44f414:	ldrsw	x22, [x20, #16]
  44f418:	ldr	x20, [x20, #8]
  44f41c:	tbnz	w21, #2, 44feec <_obstack_memory_used@@Base+0x8f80>
  44f420:	cbz	x22, 451330 <_obstack_memory_used@@Base+0xa3c4>
  44f424:	add	x22, x20, x22
  44f428:	ldr	x1, [x19, #256]
  44f42c:	b	44f450 <_obstack_memory_used@@Base+0x84e4>
  44f430:	mov	x0, x1
  44f434:	add	x1, x1, #0x1
  44f438:	str	x1, [x19, #256]
  44f43c:	add	x20, x20, #0x1
  44f440:	strb	w21, [x19, x0]
  44f444:	cmp	x22, x20
  44f448:	strb	w21, [x19, #264]
  44f44c:	b.eq	4502f4 <_obstack_memory_used@@Base+0x9388>  // b.none
  44f450:	ldrb	w21, [x20]
  44f454:	cmp	x1, #0xff
  44f458:	b.ne	44f430 <_obstack_memory_used@@Base+0x84c4>  // b.any
  44f45c:	ldp	x3, x2, [x19, #272]
  44f460:	strb	wzr, [x19, #255]
  44f464:	mov	x0, x19
  44f468:	blr	x3
  44f46c:	ldr	x2, [x19, #320]
  44f470:	mov	x1, #0x1                   	// #1
  44f474:	mov	x0, #0x0                   	// #0
  44f478:	add	x2, x2, x1
  44f47c:	str	x2, [x19, #320]
  44f480:	b	44f438 <_obstack_memory_used@@Base+0x84cc>
  44f484:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e094>
  44f488:	add	x22, x22, #0xd70
  44f48c:	add	x24, x22, #0x9
  44f490:	mov	w23, #0x6f                  	// #111
  44f494:	ldr	x1, [x19, #256]
  44f498:	b	44f4c0 <_obstack_memory_used@@Base+0x8554>
  44f49c:	mov	x0, x1
  44f4a0:	add	x1, x1, #0x1
  44f4a4:	str	x1, [x19, #256]
  44f4a8:	add	x22, x22, #0x1
  44f4ac:	strb	w23, [x19, x0]
  44f4b0:	cmp	x22, x24
  44f4b4:	strb	w23, [x19, #264]
  44f4b8:	b.eq	44fdd0 <_obstack_memory_used@@Base+0x8e64>  // b.none
  44f4bc:	ldrb	w23, [x22]
  44f4c0:	cmp	x1, #0xff
  44f4c4:	b.ne	44f49c <_obstack_memory_used@@Base+0x8530>  // b.any
  44f4c8:	ldp	x3, x2, [x19, #272]
  44f4cc:	strb	wzr, [x19, #255]
  44f4d0:	mov	x0, x19
  44f4d4:	blr	x3
  44f4d8:	ldr	x2, [x19, #320]
  44f4dc:	mov	x1, #0x1                   	// #1
  44f4e0:	mov	x0, #0x0                   	// #0
  44f4e4:	add	x2, x2, x1
  44f4e8:	str	x2, [x19, #320]
  44f4ec:	b	44f4a4 <_obstack_memory_used@@Base+0x8538>
  44f4f0:	ldr	x2, [x20, #8]
  44f4f4:	mov	w1, w21
  44f4f8:	mov	x0, x19
  44f4fc:	bl	452968 <_obstack_memory_used@@Base+0xb9fc>
  44f500:	ldp	x21, x22, [sp, #32]
  44f504:	ldp	x23, x24, [sp, #48]
  44f508:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44f50c:	ldp	x22, x20, [x20, #8]
  44f510:	ldr	w0, [x22]
  44f514:	cmp	w0, #0x32
  44f518:	b.eq	45043c <_obstack_memory_used@@Base+0x94d0>  // b.none
  44f51c:	cmp	w0, #0x34
  44f520:	b.ne	451784 <_obstack_memory_used@@Base+0xa818>  // b.any
  44f524:	ldr	x1, [x19, #256]
  44f528:	add	x0, x1, #0x1
  44f52c:	cmp	x1, #0xff
  44f530:	b.ne	44f558 <_obstack_memory_used@@Base+0x85ec>  // b.any
  44f534:	ldp	x3, x2, [x19, #272]
  44f538:	strb	wzr, [x19, #255]
  44f53c:	mov	x0, x19
  44f540:	blr	x3
  44f544:	ldr	x2, [x19, #320]
  44f548:	mov	x0, #0x1                   	// #1
  44f54c:	mov	x1, #0x0                   	// #0
  44f550:	add	x2, x2, x0
  44f554:	str	x2, [x19, #320]
  44f558:	str	x0, [x19, #256]
  44f55c:	mov	w0, #0x28                  	// #40
  44f560:	strb	w0, [x19, x1]
  44f564:	mov	w1, w21
  44f568:	strb	w0, [x19, #264]
  44f56c:	mov	x0, x19
  44f570:	ldr	x2, [x22, #8]
  44f574:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44f578:	ldr	x1, [x19, #256]
  44f57c:	add	x0, x1, #0x1
  44f580:	cmp	x1, #0xff
  44f584:	b.ne	44f5ac <_obstack_memory_used@@Base+0x8640>  // b.any
  44f588:	ldp	x3, x2, [x19, #272]
  44f58c:	strb	wzr, [x19, #255]
  44f590:	mov	x0, x19
  44f594:	blr	x3
  44f598:	ldr	x2, [x19, #320]
  44f59c:	mov	x0, #0x1                   	// #1
  44f5a0:	mov	x1, #0x0                   	// #0
  44f5a4:	add	x2, x2, x0
  44f5a8:	str	x2, [x19, #320]
  44f5ac:	str	x0, [x19, #256]
  44f5b0:	mov	w0, #0x29                  	// #41
  44f5b4:	strb	w0, [x19, x1]
  44f5b8:	strb	w0, [x19, #264]
  44f5bc:	mov	w1, w21
  44f5c0:	mov	x2, x20
  44f5c4:	mov	x0, x19
  44f5c8:	bl	452a20 <_obstack_memory_used@@Base+0xbab4>
  44f5cc:	ldp	x21, x22, [sp, #32]
  44f5d0:	ldp	x23, x24, [sp, #48]
  44f5d4:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44f5d8:	ldr	x0, [x20, #8]
  44f5dc:	tbnz	w21, #2, 450268 <_obstack_memory_used@@Base+0x92fc>
  44f5e0:	ldrsw	x22, [x0, #8]
  44f5e4:	ldr	x20, [x0]
  44f5e8:	cbz	x22, 451450 <_obstack_memory_used@@Base+0xa4e4>
  44f5ec:	add	x22, x20, x22
  44f5f0:	ldr	x1, [x19, #256]
  44f5f4:	b	44f618 <_obstack_memory_used@@Base+0x86ac>
  44f5f8:	mov	x0, x1
  44f5fc:	add	x1, x1, #0x1
  44f600:	str	x1, [x19, #256]
  44f604:	add	x20, x20, #0x1
  44f608:	strb	w21, [x19, x0]
  44f60c:	cmp	x22, x20
  44f610:	strb	w21, [x19, #264]
  44f614:	b.eq	4502dc <_obstack_memory_used@@Base+0x9370>  // b.none
  44f618:	ldrb	w21, [x20]
  44f61c:	cmp	x1, #0xff
  44f620:	b.ne	44f5f8 <_obstack_memory_used@@Base+0x868c>  // b.any
  44f624:	ldp	x3, x2, [x19, #272]
  44f628:	strb	wzr, [x19, #255]
  44f62c:	mov	x0, x19
  44f630:	blr	x3
  44f634:	ldr	x2, [x19, #320]
  44f638:	mov	x1, #0x1                   	// #1
  44f63c:	mov	x0, #0x0                   	// #0
  44f640:	add	x2, x2, x1
  44f644:	str	x2, [x19, #320]
  44f648:	b	44f600 <_obstack_memory_used@@Base+0x8694>
  44f64c:	ldr	x2, [x0, #8]
  44f650:	add	x0, sp, #0x60
  44f654:	ldr	x1, [x19, #288]
  44f658:	stp	x4, x20, [sp, #96]
  44f65c:	str	wzr, [sp, #112]
  44f660:	str	x1, [sp, #120]
  44f664:	str	x0, [x19, #296]
  44f668:	cbnz	x2, 44da80 <_obstack_memory_used@@Base+0x6b14>
  44f66c:	b	44da7c <_obstack_memory_used@@Base+0x6b10>
  44f670:	ldp	x21, x22, [sp, #32]
  44f674:	ldp	x23, x24, [sp, #48]
  44f678:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44f67c:	ldr	x2, [x20, #16]
  44f680:	mov	w1, w21
  44f684:	mov	x0, x19
  44f688:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44f68c:	ldr	x1, [x19, #256]
  44f690:	add	x0, x1, #0x1
  44f694:	cmp	x1, #0xff
  44f698:	b.ne	44f6c0 <_obstack_memory_used@@Base+0x8754>  // b.any
  44f69c:	ldp	x3, x2, [x19, #272]
  44f6a0:	strb	wzr, [x19, #255]
  44f6a4:	mov	x0, x19
  44f6a8:	blr	x3
  44f6ac:	ldr	x2, [x19, #320]
  44f6b0:	mov	x0, #0x1                   	// #1
  44f6b4:	mov	x1, #0x0                   	// #0
  44f6b8:	add	x2, x2, x0
  44f6bc:	str	x2, [x19, #320]
  44f6c0:	str	x0, [x19, #256]
  44f6c4:	mov	w0, #0x5d                  	// #93
  44f6c8:	strb	w0, [x19, x1]
  44f6cc:	strb	w0, [x19, #264]
  44f6d0:	ldp	x21, x22, [sp, #32]
  44f6d4:	ldp	x23, x24, [sp, #48]
  44f6d8:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44f6dc:	ldr	x2, [x20, #16]
  44f6e0:	mov	w1, w21
  44f6e4:	mov	x0, x19
  44f6e8:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44f6ec:	ldp	x21, x22, [sp, #32]
  44f6f0:	ldp	x23, x24, [sp, #48]
  44f6f4:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44f6f8:	ldr	x2, [x20, #8]
  44f6fc:	mov	w1, w21
  44f700:	mov	x0, x19
  44f704:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44f708:	ldp	x21, x22, [sp, #32]
  44f70c:	ldp	x23, x24, [sp, #48]
  44f710:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44f714:	ldr	x2, [x20, #8]
  44f718:	mov	w1, w21
  44f71c:	mov	x0, x19
  44f720:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44f724:	ldp	x21, x22, [sp, #32]
  44f728:	ldp	x23, x24, [sp, #48]
  44f72c:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44f730:	ldr	x2, [x20, #16]
  44f734:	mov	w1, w21
  44f738:	mov	x0, x19
  44f73c:	adrp	x24, 465000 <_obstack_memory_used@@Base+0x1e094>
  44f740:	add	x24, x24, #0xbf8
  44f744:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e094>
  44f748:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44f74c:	add	x24, x24, #0x5
  44f750:	add	x22, x22, #0xbf9
  44f754:	mov	w23, #0x20                  	// #32
  44f758:	ldr	x1, [x19, #256]
  44f75c:	b	44f780 <_obstack_memory_used@@Base+0x8814>
  44f760:	mov	x0, x1
  44f764:	add	x1, x1, #0x1
  44f768:	str	x1, [x19, #256]
  44f76c:	cmp	x22, x24
  44f770:	strb	w23, [x19, x0]
  44f774:	strb	w23, [x19, #264]
  44f778:	b.eq	44f820 <_obstack_memory_used@@Base+0x88b4>  // b.none
  44f77c:	ldrb	w23, [x22], #1
  44f780:	cmp	x1, #0xff
  44f784:	b.ne	44f760 <_obstack_memory_used@@Base+0x87f4>  // b.any
  44f788:	ldp	x3, x2, [x19, #272]
  44f78c:	strb	wzr, [x19, #255]
  44f790:	mov	x0, x19
  44f794:	blr	x3
  44f798:	ldr	x2, [x19, #320]
  44f79c:	mov	x1, #0x1                   	// #1
  44f7a0:	mov	x0, #0x0                   	// #0
  44f7a4:	add	x2, x2, x1
  44f7a8:	str	x2, [x19, #320]
  44f7ac:	b	44f768 <_obstack_memory_used@@Base+0x87fc>
  44f7b0:	ldr	x2, [x20, #8]
  44f7b4:	mov	w1, w21
  44f7b8:	mov	x0, x19
  44f7bc:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44f7c0:	ldp	x21, x22, [sp, #32]
  44f7c4:	ldp	x23, x24, [sp, #48]
  44f7c8:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44f7cc:	ldr	x2, [x20, #8]
  44f7d0:	mov	w1, w21
  44f7d4:	mov	x0, x19
  44f7d8:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44f7dc:	ldp	x21, x22, [sp, #32]
  44f7e0:	ldp	x23, x24, [sp, #48]
  44f7e4:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44f7e8:	ldr	x2, [x20, #8]
  44f7ec:	mov	w1, w21
  44f7f0:	mov	x0, x19
  44f7f4:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44f7f8:	ldp	x21, x22, [sp, #32]
  44f7fc:	ldp	x23, x24, [sp, #48]
  44f800:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44f804:	ldr	x2, [x20, #8]
  44f808:	mov	w1, w21
  44f80c:	mov	x0, x19
  44f810:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44f814:	ldp	x21, x22, [sp, #32]
  44f818:	ldp	x23, x24, [sp, #48]
  44f81c:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44f820:	ldr	x2, [x20, #8]
  44f824:	mov	w1, w21
  44f828:	mov	x0, x19
  44f82c:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44f830:	ldp	x21, x22, [sp, #32]
  44f834:	ldp	x23, x24, [sp, #48]
  44f838:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44f83c:	ldr	x2, [x20, #16]
  44f840:	mov	w1, w21
  44f844:	mov	x0, x19
  44f848:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44f84c:	ldr	x1, [x19, #256]
  44f850:	add	x0, x1, #0x1
  44f854:	cmp	x1, #0xff
  44f858:	b.ne	44f880 <_obstack_memory_used@@Base+0x8914>  // b.any
  44f85c:	ldp	x3, x2, [x19, #272]
  44f860:	strb	wzr, [x19, #255]
  44f864:	mov	x0, x19
  44f868:	blr	x3
  44f86c:	ldr	x2, [x19, #320]
  44f870:	mov	x0, #0x1                   	// #1
  44f874:	mov	x1, #0x0                   	// #0
  44f878:	add	x2, x2, x0
  44f87c:	str	x2, [x19, #320]
  44f880:	str	x0, [x19, #256]
  44f884:	mov	w0, #0x5d                  	// #93
  44f888:	strb	w0, [x19, x1]
  44f88c:	strb	w0, [x19, #264]
  44f890:	ldp	x21, x22, [sp, #32]
  44f894:	ldp	x23, x24, [sp, #48]
  44f898:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44f89c:	ldr	x20, [x22, #8]
  44f8a0:	ldrb	w0, [x20]
  44f8a4:	sub	w0, w0, #0x61
  44f8a8:	and	w0, w0, #0xff
  44f8ac:	cmp	w0, #0x19
  44f8b0:	b.hi	44f8f8 <_obstack_memory_used@@Base+0x898c>  // b.pmore
  44f8b4:	add	x0, x1, #0x1
  44f8b8:	cmp	x1, #0xff
  44f8bc:	b.ne	44f8e8 <_obstack_memory_used@@Base+0x897c>  // b.any
  44f8c0:	ldp	x3, x2, [x19, #272]
  44f8c4:	strb	wzr, [x19, #255]
  44f8c8:	mov	x0, x19
  44f8cc:	blr	x3
  44f8d0:	ldr	x2, [x19, #320]
  44f8d4:	mov	x0, #0x1                   	// #1
  44f8d8:	mov	x1, #0x0                   	// #0
  44f8dc:	add	x2, x2, x0
  44f8e0:	ldr	x20, [x22, #8]
  44f8e4:	str	x2, [x19, #320]
  44f8e8:	str	x0, [x19, #256]
  44f8ec:	mov	w0, #0x20                  	// #32
  44f8f0:	strb	w0, [x19, x1]
  44f8f4:	strb	w0, [x19, #264]
  44f8f8:	sxtw	x22, w23
  44f8fc:	sub	w0, w23, #0x1
  44f900:	add	x1, x20, x22
  44f904:	sxtw	x0, w0
  44f908:	ldurb	w1, [x1, #-1]
  44f90c:	cmp	w1, #0x20
  44f910:	csel	x22, x22, x0, ne  // ne = any
  44f914:	cbz	x22, 4511f4 <_obstack_memory_used@@Base+0xa288>
  44f918:	add	x22, x20, x22
  44f91c:	ldr	x1, [x19, #256]
  44f920:	b	44f944 <_obstack_memory_used@@Base+0x89d8>
  44f924:	mov	x0, x1
  44f928:	add	x1, x1, #0x1
  44f92c:	str	x1, [x19, #256]
  44f930:	add	x20, x20, #0x1
  44f934:	strb	w21, [x19, x0]
  44f938:	cmp	x22, x20
  44f93c:	strb	w21, [x19, #264]
  44f940:	b.eq	44fe5c <_obstack_memory_used@@Base+0x8ef0>  // b.none
  44f944:	ldrb	w21, [x20]
  44f948:	cmp	x1, #0xff
  44f94c:	b.ne	44f924 <_obstack_memory_used@@Base+0x89b8>  // b.any
  44f950:	ldp	x3, x2, [x19, #272]
  44f954:	strb	wzr, [x19, #255]
  44f958:	mov	x0, x19
  44f95c:	blr	x3
  44f960:	ldr	x2, [x19, #320]
  44f964:	mov	x1, #0x1                   	// #1
  44f968:	mov	x0, #0x0                   	// #0
  44f96c:	add	x2, x2, x1
  44f970:	str	x2, [x19, #320]
  44f974:	b	44f92c <_obstack_memory_used@@Base+0x89c0>
  44f978:	ldr	x2, [x20, #8]
  44f97c:	mov	w1, w21
  44f980:	mov	x0, x19
  44f984:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44f988:	ldp	x21, x22, [sp, #32]
  44f98c:	ldp	x23, x24, [sp, #48]
  44f990:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44f994:	ldr	x2, [x20, #8]
  44f998:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  44f99c:	add	x1, x1, #0x40
  44f9a0:	add	x20, sp, #0x60
  44f9a4:	add	w2, w2, #0x1
  44f9a8:	mov	x0, x20
  44f9ac:	bl	402350 <sprintf@plt>
  44f9b0:	mov	x0, x20
  44f9b4:	bl	4022b0 <strlen@plt>
  44f9b8:	ldr	x1, [x19, #256]
  44f9bc:	cbz	x0, 44fa1c <_obstack_memory_used@@Base+0x8ab0>
  44f9c0:	add	x22, x20, x0
  44f9c4:	b	44f9e8 <_obstack_memory_used@@Base+0x8a7c>
  44f9c8:	mov	x0, x1
  44f9cc:	add	x1, x1, #0x1
  44f9d0:	str	x1, [x19, #256]
  44f9d4:	add	x20, x20, #0x1
  44f9d8:	strb	w21, [x19, x0]
  44f9dc:	cmp	x22, x20
  44f9e0:	strb	w21, [x19, #264]
  44f9e4:	b.eq	44fa1c <_obstack_memory_used@@Base+0x8ab0>  // b.none
  44f9e8:	ldrb	w21, [x20]
  44f9ec:	cmp	x1, #0xff
  44f9f0:	b.ne	44f9c8 <_obstack_memory_used@@Base+0x8a5c>  // b.any
  44f9f4:	ldp	x3, x2, [x19, #272]
  44f9f8:	strb	wzr, [x19, #255]
  44f9fc:	mov	x0, x19
  44fa00:	blr	x3
  44fa04:	ldr	x2, [x19, #320]
  44fa08:	mov	x1, #0x1                   	// #1
  44fa0c:	mov	x0, #0x0                   	// #0
  44fa10:	add	x2, x2, x1
  44fa14:	str	x2, [x19, #320]
  44fa18:	b	44f9d0 <_obstack_memory_used@@Base+0x8a64>
  44fa1c:	add	x0, x1, #0x1
  44fa20:	cmp	x1, #0xff
  44fa24:	b.ne	44fa4c <_obstack_memory_used@@Base+0x8ae0>  // b.any
  44fa28:	ldp	x3, x2, [x19, #272]
  44fa2c:	strb	wzr, [x19, #255]
  44fa30:	mov	x0, x19
  44fa34:	blr	x3
  44fa38:	ldr	x2, [x19, #320]
  44fa3c:	mov	x0, #0x1                   	// #1
  44fa40:	mov	x1, #0x0                   	// #0
  44fa44:	add	x2, x2, x0
  44fa48:	str	x2, [x19, #320]
  44fa4c:	str	x0, [x19, #256]
  44fa50:	mov	w0, #0x7d                  	// #125
  44fa54:	strb	w0, [x19, x1]
  44fa58:	strb	w0, [x19, #264]
  44fa5c:	ldp	x21, x22, [sp, #32]
  44fa60:	ldp	x23, x24, [sp, #48]
  44fa64:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44fa68:	ldr	x2, [x20, #8]
  44fa6c:	mov	w1, w21
  44fa70:	mov	x0, x19
  44fa74:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44fa78:	ldp	x21, x22, [sp, #32]
  44fa7c:	ldp	x23, x24, [sp, #48]
  44fa80:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44fa84:	ldr	x2, [x20, #8]
  44fa88:	mov	w1, w21
  44fa8c:	mov	x0, x19
  44fa90:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44fa94:	ldp	x21, x22, [sp, #32]
  44fa98:	ldp	x23, x24, [sp, #48]
  44fa9c:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44faa0:	ldr	w3, [x19, #312]
  44faa4:	mov	w1, w21
  44faa8:	ldr	x2, [x20, #8]
  44faac:	add	w3, w3, #0x1
  44fab0:	str	w3, [x19, #312]
  44fab4:	mov	x0, x19
  44fab8:	mov	w21, #0x29                  	// #41
  44fabc:	mov	x22, #0x0                   	// #0
  44fac0:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44fac4:	ldr	w0, [x19, #312]
  44fac8:	ldr	x1, [x19, #256]
  44facc:	sub	w0, w0, #0x1
  44fad0:	str	w0, [x19, #312]
  44fad4:	b	44fafc <_obstack_memory_used@@Base+0x8b90>
  44fad8:	mov	x0, x1
  44fadc:	add	x1, x1, #0x1
  44fae0:	str	x1, [x19, #256]
  44fae4:	cmp	x22, #0x1
  44fae8:	strb	w21, [x19, x0]
  44faec:	strb	w21, [x19, #264]
  44faf0:	mov	w21, #0x23                  	// #35
  44faf4:	b.eq	44fb2c <_obstack_memory_used@@Base+0x8bc0>  // b.none
  44faf8:	mov	x22, #0x1                   	// #1
  44fafc:	cmp	x1, #0xff
  44fb00:	b.ne	44fad8 <_obstack_memory_used@@Base+0x8b6c>  // b.any
  44fb04:	ldp	x3, x2, [x19, #272]
  44fb08:	strb	wzr, [x19, #255]
  44fb0c:	mov	x0, x19
  44fb10:	blr	x3
  44fb14:	ldr	x2, [x19, #320]
  44fb18:	mov	x1, #0x1                   	// #1
  44fb1c:	mov	x0, #0x0                   	// #0
  44fb20:	add	x2, x2, x1
  44fb24:	str	x2, [x19, #320]
  44fb28:	b	44fae0 <_obstack_memory_used@@Base+0x8b74>
  44fb2c:	ldr	w2, [x20, #16]
  44fb30:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  44fb34:	add	x1, x1, #0x40
  44fb38:	add	x20, sp, #0x60
  44fb3c:	add	w2, w2, #0x1
  44fb40:	mov	x0, x20
  44fb44:	bl	402350 <sprintf@plt>
  44fb48:	mov	x0, x20
  44fb4c:	bl	4022b0 <strlen@plt>
  44fb50:	ldr	x1, [x19, #256]
  44fb54:	cbz	x0, 44fbb4 <_obstack_memory_used@@Base+0x8c48>
  44fb58:	add	x23, x20, x0
  44fb5c:	b	44fb80 <_obstack_memory_used@@Base+0x8c14>
  44fb60:	mov	x0, x1
  44fb64:	add	x1, x1, #0x1
  44fb68:	str	x1, [x19, #256]
  44fb6c:	add	x20, x20, #0x1
  44fb70:	strb	w21, [x19, x0]
  44fb74:	cmp	x23, x20
  44fb78:	strb	w21, [x19, #264]
  44fb7c:	b.eq	44fbb4 <_obstack_memory_used@@Base+0x8c48>  // b.none
  44fb80:	ldrb	w21, [x20]
  44fb84:	cmp	x1, #0xff
  44fb88:	b.ne	44fb60 <_obstack_memory_used@@Base+0x8bf4>  // b.any
  44fb8c:	ldp	x3, x2, [x19, #272]
  44fb90:	strb	wzr, [x19, #255]
  44fb94:	mov	x0, x19
  44fb98:	blr	x3
  44fb9c:	ldr	x2, [x19, #320]
  44fba0:	mov	x1, #0x1                   	// #1
  44fba4:	mov	x0, #0x0                   	// #0
  44fba8:	add	x2, x2, x1
  44fbac:	str	x2, [x19, #320]
  44fbb0:	b	44fb68 <_obstack_memory_used@@Base+0x8bfc>
  44fbb4:	cmp	x1, #0xff
  44fbb8:	b.eq	450418 <_obstack_memory_used@@Base+0x94ac>  // b.none
  44fbbc:	add	x22, x1, #0x1
  44fbc0:	str	x22, [x19, #256]
  44fbc4:	mov	w0, #0x7d                  	// #125
  44fbc8:	strb	w0, [x19, x1]
  44fbcc:	strb	w0, [x19, #264]
  44fbd0:	ldp	x21, x22, [sp, #32]
  44fbd4:	ldp	x23, x24, [sp, #48]
  44fbd8:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44fbdc:	ldr	x2, [x20, #8]
  44fbe0:	mov	w1, w21
  44fbe4:	mov	x0, x19
  44fbe8:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44fbec:	ldr	x1, [x19, #256]
  44fbf0:	add	x0, x1, #0x1
  44fbf4:	cmp	x1, #0xff
  44fbf8:	b.ne	44fc20 <_obstack_memory_used@@Base+0x8cb4>  // b.any
  44fbfc:	ldp	x3, x2, [x19, #272]
  44fc00:	strb	wzr, [x19, #255]
  44fc04:	mov	x0, x19
  44fc08:	blr	x3
  44fc0c:	ldr	x2, [x19, #320]
  44fc10:	mov	x0, #0x1                   	// #1
  44fc14:	mov	x1, #0x0                   	// #0
  44fc18:	add	x2, x2, x0
  44fc1c:	str	x2, [x19, #320]
  44fc20:	str	x0, [x19, #256]
  44fc24:	mov	w0, #0x29                  	// #41
  44fc28:	strb	w0, [x19, x1]
  44fc2c:	strb	w0, [x19, #264]
  44fc30:	ldp	x21, x22, [sp, #32]
  44fc34:	ldp	x23, x24, [sp, #48]
  44fc38:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44fc3c:	ldr	x2, [x20, #8]
  44fc40:	mov	w1, w21
  44fc44:	mov	x0, x19
  44fc48:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44fc4c:	ldp	x21, x22, [sp, #32]
  44fc50:	ldp	x23, x24, [sp, #48]
  44fc54:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44fc58:	ldr	x2, [x20, #8]
  44fc5c:	mov	w1, w21
  44fc60:	mov	x0, x19
  44fc64:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44fc68:	ldp	x21, x22, [sp, #32]
  44fc6c:	ldp	x23, x24, [sp, #48]
  44fc70:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44fc74:	ldr	x2, [x20, #8]
  44fc78:	mov	w1, w21
  44fc7c:	mov	x0, x19
  44fc80:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e094>
  44fc84:	add	x22, x22, #0xbe8
  44fc88:	mov	w23, #0x2d                  	// #45
  44fc8c:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44fc90:	add	x24, x22, #0x4
  44fc94:	ldr	x1, [x19, #256]
  44fc98:	b	44fcc0 <_obstack_memory_used@@Base+0x8d54>
  44fc9c:	mov	x0, x1
  44fca0:	add	x1, x1, #0x1
  44fca4:	str	x1, [x19, #256]
  44fca8:	add	x22, x22, #0x1
  44fcac:	strb	w23, [x19, x0]
  44fcb0:	cmp	x24, x22
  44fcb4:	strb	w23, [x19, #264]
  44fcb8:	b.eq	44fd28 <_obstack_memory_used@@Base+0x8dbc>  // b.none
  44fcbc:	ldrb	w23, [x22]
  44fcc0:	cmp	x1, #0xff
  44fcc4:	b.ne	44fc9c <_obstack_memory_used@@Base+0x8d30>  // b.any
  44fcc8:	ldp	x3, x2, [x19, #272]
  44fccc:	strb	wzr, [x19, #255]
  44fcd0:	mov	x0, x19
  44fcd4:	blr	x3
  44fcd8:	ldr	x2, [x19, #320]
  44fcdc:	mov	x1, #0x1                   	// #1
  44fce0:	mov	x0, #0x0                   	// #0
  44fce4:	add	x2, x2, x1
  44fce8:	str	x2, [x19, #320]
  44fcec:	b	44fca4 <_obstack_memory_used@@Base+0x8d38>
  44fcf0:	ldr	x2, [x20, #8]
  44fcf4:	mov	w1, w21
  44fcf8:	mov	x0, x19
  44fcfc:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44fd00:	ldp	x21, x22, [sp, #32]
  44fd04:	ldp	x23, x24, [sp, #48]
  44fd08:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44fd0c:	ldr	x2, [x20, #8]
  44fd10:	mov	w1, w21
  44fd14:	mov	x0, x19
  44fd18:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44fd1c:	ldp	x21, x22, [sp, #32]
  44fd20:	ldp	x23, x24, [sp, #48]
  44fd24:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44fd28:	ldr	x2, [x20, #16]
  44fd2c:	mov	w1, w21
  44fd30:	mov	x0, x19
  44fd34:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44fd38:	ldp	x21, x22, [sp, #32]
  44fd3c:	ldp	x23, x24, [sp, #48]
  44fd40:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44fd44:	ldr	x2, [x20, #8]
  44fd48:	mov	w1, w21
  44fd4c:	mov	x0, x19
  44fd50:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44fd54:	ldp	x21, x22, [sp, #32]
  44fd58:	ldp	x23, x24, [sp, #48]
  44fd5c:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44fd60:	ldr	x2, [x20, #8]
  44fd64:	mov	w1, w21
  44fd68:	mov	x0, x19
  44fd6c:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44fd70:	ldp	x21, x22, [sp, #32]
  44fd74:	ldp	x23, x24, [sp, #48]
  44fd78:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44fd7c:	ldr	x2, [x20, #8]
  44fd80:	mov	w1, w21
  44fd84:	mov	x0, x19
  44fd88:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44fd8c:	ldp	x21, x22, [sp, #32]
  44fd90:	ldp	x23, x24, [sp, #48]
  44fd94:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44fd98:	ldr	x2, [x20, #8]
  44fd9c:	mov	w1, w21
  44fda0:	mov	x0, x19
  44fda4:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44fda8:	ldp	x21, x22, [sp, #32]
  44fdac:	ldp	x23, x24, [sp, #48]
  44fdb0:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44fdb4:	ldr	x2, [x20, #8]
  44fdb8:	mov	w1, w21
  44fdbc:	mov	x0, x19
  44fdc0:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44fdc4:	ldp	x21, x22, [sp, #32]
  44fdc8:	ldp	x23, x24, [sp, #48]
  44fdcc:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44fdd0:	ldr	x1, [x19, #368]
  44fdd4:	cbz	x1, 44fde8 <_obstack_memory_used@@Base+0x8e7c>
  44fdd8:	ldr	x2, [x19, #288]
  44fddc:	add	x0, sp, #0x60
  44fde0:	stp	x2, x1, [sp, #96]
  44fde4:	str	x0, [x19, #288]
  44fde8:	ldr	x2, [x20, #8]
  44fdec:	ldr	w0, [x2]
  44fdf0:	cmp	w0, #0x4
  44fdf4:	b.eq	4506e0 <_obstack_memory_used@@Base+0x9774>  // b.none
  44fdf8:	mov	x0, x19
  44fdfc:	mov	w1, w21
  44fe00:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44fe04:	ldr	x0, [x19, #368]
  44fe08:	cbz	x0, 450afc <_obstack_memory_used@@Base+0x9b90>
  44fe0c:	ldr	x0, [sp, #96]
  44fe10:	ldp	x21, x22, [sp, #32]
  44fe14:	ldp	x23, x24, [sp, #48]
  44fe18:	str	x0, [x19, #288]
  44fe1c:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44fe20:	ldr	x2, [x20, #8]
  44fe24:	mov	w1, w21
  44fe28:	mov	x0, x19
  44fe2c:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44fe30:	ldp	x21, x22, [sp, #32]
  44fe34:	ldp	x23, x24, [sp, #48]
  44fe38:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44fe3c:	mov	x2, x20
  44fe40:	mov	w1, w21
  44fe44:	mov	x0, x19
  44fe48:	bl	451860 <_obstack_memory_used@@Base+0xa8f4>
  44fe4c:	b	44da94 <_obstack_memory_used@@Base+0x6b28>
  44fe50:	ldp	x21, x22, [sp, #32]
  44fe54:	ldp	x23, x24, [sp, #48]
  44fe58:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44fe5c:	ldp	x21, x22, [sp, #32]
  44fe60:	ldp	x23, x24, [sp, #48]
  44fe64:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44fe68:	ldp	x21, x22, [sp, #32]
  44fe6c:	ldp	x23, x24, [sp, #48]
  44fe70:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44fe74:	ldp	x21, x22, [sp, #32]
  44fe78:	ldp	x23, x24, [sp, #48]
  44fe7c:	ldp	x25, x26, [sp, #64]
  44fe80:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44fe84:	ldr	x2, [x20, #16]
  44fe88:	mov	x0, x19
  44fe8c:	mov	w1, w21
  44fe90:	ldr	x20, [x19, #320]
  44fe94:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  44fe98:	ldr	x0, [x19, #320]
  44fe9c:	cmp	x0, x20
  44fea0:	b.eq	450a98 <_obstack_memory_used@@Base+0x9b2c>  // b.none
  44fea4:	ldp	x21, x22, [sp, #32]
  44fea8:	ldp	x23, x24, [sp, #48]
  44feac:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44feb0:	ldr	x25, [x25, #8]
  44feb4:	cbz	x25, 450d8c <_obstack_memory_used@@Base+0x9e20>
  44feb8:	add	x3, x3, #0x20
  44febc:	cmp	w24, #0x4
  44fec0:	b.eq	450a60 <_obstack_memory_used@@Base+0x9af4>  // b.none
  44fec4:	mov	x0, x4
  44fec8:	b	44ecfc <_obstack_memory_used@@Base+0x7d90>
  44fecc:	ldr	x25, [x20, #8]
  44fed0:	cbnz	w24, 44e83c <_obstack_memory_used@@Base+0x78d0>
  44fed4:	ldp	x21, x22, [sp, #32]
  44fed8:	ldp	x23, x24, [sp, #48]
  44fedc:	ldp	x25, x26, [sp, #64]
  44fee0:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  44fee4:	mov	x20, x0
  44fee8:	b	44dbf0 <_obstack_memory_used@@Base+0x6c84>
  44feec:	add	x21, x20, x22
  44fef0:	cmp	x21, x20
  44fef4:	b.ls	45133c <_obstack_memory_used@@Base+0xa3d0>  // b.plast
  44fef8:	mov	w23, #0x5f                  	// #95
  44fefc:	b	44ff4c <_obstack_memory_used@@Base+0x8fe0>
  44ff00:	ldr	x1, [x19, #256]
  44ff04:	add	x0, x1, #0x1
  44ff08:	cmp	x1, #0xff
  44ff0c:	b.ne	44ff34 <_obstack_memory_used@@Base+0x8fc8>  // b.any
  44ff10:	ldp	x3, x2, [x19, #272]
  44ff14:	strb	wzr, [x19, #255]
  44ff18:	mov	x0, x19
  44ff1c:	blr	x3
  44ff20:	ldr	x2, [x19, #320]
  44ff24:	mov	x0, #0x1                   	// #1
  44ff28:	mov	x1, #0x0                   	// #0
  44ff2c:	add	x2, x2, x0
  44ff30:	str	x2, [x19, #320]
  44ff34:	str	x0, [x19, #256]
  44ff38:	strb	w22, [x19, x1]
  44ff3c:	strb	w22, [x19, #264]
  44ff40:	add	x20, x20, #0x1
  44ff44:	cmp	x21, x20
  44ff48:	b.ls	450300 <_obstack_memory_used@@Base+0x9394>  // b.plast
  44ff4c:	sub	x0, x21, x20
  44ff50:	ldrb	w22, [x20]
  44ff54:	cmp	x0, #0x3
  44ff58:	b.le	44ff00 <_obstack_memory_used@@Base+0x8f94>
  44ff5c:	cmp	w22, #0x5f
  44ff60:	b.ne	44ff00 <_obstack_memory_used@@Base+0x8f94>  // b.any
  44ff64:	ldrb	w0, [x20, #1]
  44ff68:	cmp	w0, #0x5f
  44ff6c:	b.ne	44ff00 <_obstack_memory_used@@Base+0x8f94>  // b.any
  44ff70:	ldrb	w0, [x20, #2]
  44ff74:	cmp	w0, #0x55
  44ff78:	b.ne	44ff00 <_obstack_memory_used@@Base+0x8f94>  // b.any
  44ff7c:	add	x24, x20, #0x3
  44ff80:	cmp	x21, x24
  44ff84:	b.ls	44ff00 <_obstack_memory_used@@Base+0x8f94>  // b.plast
  44ff88:	mov	x2, #0x0                   	// #0
  44ff8c:	b	44ffa8 <_obstack_memory_used@@Base+0x903c>
  44ff90:	mov	w0, w1
  44ff94:	sxtw	x0, w0
  44ff98:	add	x24, x24, #0x1
  44ff9c:	add	x2, x0, x2, lsl #4
  44ffa0:	cmp	x21, x24
  44ffa4:	b.eq	44ff00 <_obstack_memory_used@@Base+0x8f94>  // b.none
  44ffa8:	ldrb	w0, [x24]
  44ffac:	sub	w1, w0, #0x30
  44ffb0:	and	w3, w1, #0xff
  44ffb4:	cmp	w3, #0x9
  44ffb8:	b.ls	44ff90 <_obstack_memory_used@@Base+0x9024>  // b.plast
  44ffbc:	sub	w1, w0, #0x41
  44ffc0:	and	w1, w1, #0xff
  44ffc4:	cmp	w1, #0x5
  44ffc8:	b.hi	450fcc <_obstack_memory_used@@Base+0xa060>  // b.pmore
  44ffcc:	sub	w0, w0, #0x37
  44ffd0:	b	44ff94 <_obstack_memory_used@@Base+0x9028>
  44ffd4:	add	x1, x20, #0x8
  44ffd8:	mov	x0, x19
  44ffdc:	bl	44a060 <_obstack_memory_used@@Base+0x30f4>
  44ffe0:	mov	x2, x0
  44ffe4:	cbz	x0, 44da48 <_obstack_memory_used@@Base+0x6adc>
  44ffe8:	ldr	w1, [x0]
  44ffec:	cmp	w1, #0x2f
  44fff0:	b.eq	451048 <_obstack_memory_used@@Base+0xa0dc>  // b.none
  44fff4:	ldr	x20, [x19, #288]
  44fff8:	mov	w1, w21
  44fffc:	mov	x0, x19
  450000:	ldr	x3, [x20]
  450004:	str	x3, [x19, #288]
  450008:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  45000c:	ldp	x21, x22, [sp, #32]
  450010:	ldp	x23, x24, [sp, #48]
  450014:	str	x20, [x19, #288]
  450018:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  45001c:	ldr	x2, [x20, #8]
  450020:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  450024:	add	x1, x1, #0x40
  450028:	add	x20, sp, #0x60
  45002c:	add	w2, w2, #0x1
  450030:	mov	x0, x20
  450034:	bl	402350 <sprintf@plt>
  450038:	mov	x0, x20
  45003c:	bl	4022b0 <strlen@plt>
  450040:	cbz	x0, 451444 <_obstack_memory_used@@Base+0xa4d8>
  450044:	add	x22, x20, x0
  450048:	ldr	x1, [x19, #256]
  45004c:	b	450070 <_obstack_memory_used@@Base+0x9104>
  450050:	mov	x0, x1
  450054:	add	x1, x1, #0x1
  450058:	str	x1, [x19, #256]
  45005c:	add	x20, x20, #0x1
  450060:	strb	w21, [x19, x0]
  450064:	cmp	x22, x20
  450068:	strb	w21, [x19, #264]
  45006c:	b.eq	45030c <_obstack_memory_used@@Base+0x93a0>  // b.none
  450070:	ldrb	w21, [x20]
  450074:	cmp	x1, #0xff
  450078:	b.ne	450050 <_obstack_memory_used@@Base+0x90e4>  // b.any
  45007c:	ldp	x3, x2, [x19, #272]
  450080:	strb	wzr, [x19, #255]
  450084:	mov	x0, x19
  450088:	blr	x3
  45008c:	ldr	x2, [x19, #320]
  450090:	mov	x1, #0x1                   	// #1
  450094:	mov	x0, #0x0                   	// #0
  450098:	add	x2, x2, x1
  45009c:	str	x2, [x19, #320]
  4500a0:	b	450058 <_obstack_memory_used@@Base+0x90ec>
  4500a4:	adrp	x20, 465000 <_obstack_memory_used@@Base+0x1e094>
  4500a8:	add	x20, x20, #0xe00
  4500ac:	add	x22, x20, #0x4
  4500b0:	mov	w21, #0x74                  	// #116
  4500b4:	b	4500dc <_obstack_memory_used@@Base+0x9170>
  4500b8:	mov	x0, x1
  4500bc:	add	x1, x1, #0x1
  4500c0:	str	x1, [x19, #256]
  4500c4:	add	x20, x20, #0x1
  4500c8:	strb	w21, [x19, x0]
  4500cc:	cmp	x20, x22
  4500d0:	strb	w21, [x19, #264]
  4500d4:	b.eq	45010c <_obstack_memory_used@@Base+0x91a0>  // b.none
  4500d8:	ldrb	w21, [x20]
  4500dc:	cmp	x1, #0xff
  4500e0:	b.ne	4500b8 <_obstack_memory_used@@Base+0x914c>  // b.any
  4500e4:	ldp	x3, x2, [x19, #272]
  4500e8:	strb	wzr, [x19, #255]
  4500ec:	mov	x0, x19
  4500f0:	blr	x3
  4500f4:	ldr	x2, [x19, #320]
  4500f8:	mov	x1, #0x1                   	// #1
  4500fc:	mov	x0, #0x0                   	// #0
  450100:	add	x2, x2, x1
  450104:	str	x2, [x19, #320]
  450108:	b	4500c0 <_obstack_memory_used@@Base+0x9154>
  45010c:	ldp	x21, x22, [sp, #32]
  450110:	ldp	x23, x24, [sp, #48]
  450114:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  450118:	mov	w2, w23
  45011c:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  450120:	add	x1, x1, #0x40
  450124:	add	x20, sp, #0x60
  450128:	mov	x0, x20
  45012c:	bl	402350 <sprintf@plt>
  450130:	mov	x0, x20
  450134:	bl	4022b0 <strlen@plt>
  450138:	ldr	x1, [x19, #256]
  45013c:	cbz	x0, 45019c <_obstack_memory_used@@Base+0x9230>
  450140:	add	x22, x20, x0
  450144:	b	450168 <_obstack_memory_used@@Base+0x91fc>
  450148:	mov	x0, x1
  45014c:	add	x1, x1, #0x1
  450150:	str	x1, [x19, #256]
  450154:	add	x20, x20, #0x1
  450158:	strb	w21, [x19, x0]
  45015c:	cmp	x20, x22
  450160:	strb	w21, [x19, #264]
  450164:	b.eq	45019c <_obstack_memory_used@@Base+0x9230>  // b.none
  450168:	ldrb	w21, [x20]
  45016c:	cmp	x1, #0xff
  450170:	b.ne	450148 <_obstack_memory_used@@Base+0x91dc>  // b.any
  450174:	ldp	x3, x2, [x19, #272]
  450178:	strb	wzr, [x19, #255]
  45017c:	mov	x0, x19
  450180:	blr	x3
  450184:	ldr	x2, [x19, #320]
  450188:	mov	x1, #0x1                   	// #1
  45018c:	mov	x0, #0x0                   	// #0
  450190:	add	x2, x2, x1
  450194:	str	x2, [x19, #320]
  450198:	b	450150 <_obstack_memory_used@@Base+0x91e4>
  45019c:	add	x0, x1, #0x1
  4501a0:	cmp	x1, #0xff
  4501a4:	b.ne	4501cc <_obstack_memory_used@@Base+0x9260>  // b.any
  4501a8:	ldp	x3, x2, [x19, #272]
  4501ac:	strb	wzr, [x19, #255]
  4501b0:	mov	x0, x19
  4501b4:	blr	x3
  4501b8:	ldr	x2, [x19, #320]
  4501bc:	mov	x0, #0x1                   	// #1
  4501c0:	mov	x1, #0x0                   	// #0
  4501c4:	add	x2, x2, x0
  4501c8:	str	x2, [x19, #320]
  4501cc:	str	x0, [x19, #256]
  4501d0:	mov	w0, #0x7d                  	// #125
  4501d4:	strb	w0, [x19, x1]
  4501d8:	strb	w0, [x19, #264]
  4501dc:	ldp	x21, x22, [sp, #32]
  4501e0:	ldp	x23, x24, [sp, #48]
  4501e4:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  4501e8:	adrp	x20, 465000 <_obstack_memory_used@@Base+0x1e094>
  4501ec:	add	x20, x20, #0xd50
  4501f0:	add	x22, x20, #0x6
  4501f4:	mov	w21, #0x5f                  	// #95
  4501f8:	b	450220 <_obstack_memory_used@@Base+0x92b4>
  4501fc:	mov	x0, x1
  450200:	add	x1, x1, #0x1
  450204:	str	x1, [x19, #256]
  450208:	add	x20, x20, #0x1
  45020c:	strb	w21, [x19, x0]
  450210:	cmp	x20, x22
  450214:	strb	w21, [x19, #264]
  450218:	b.eq	450250 <_obstack_memory_used@@Base+0x92e4>  // b.none
  45021c:	ldrb	w21, [x20]
  450220:	cmp	x1, #0xff
  450224:	b.ne	4501fc <_obstack_memory_used@@Base+0x9290>  // b.any
  450228:	ldp	x3, x2, [x19, #272]
  45022c:	strb	wzr, [x19, #255]
  450230:	mov	x0, x19
  450234:	blr	x3
  450238:	ldr	x2, [x19, #320]
  45023c:	mov	x1, #0x1                   	// #1
  450240:	mov	x0, #0x0                   	// #0
  450244:	add	x2, x2, x1
  450248:	str	x2, [x19, #320]
  45024c:	b	450204 <_obstack_memory_used@@Base+0x9298>
  450250:	ldp	x21, x22, [sp, #32]
  450254:	ldp	x23, x24, [sp, #48]
  450258:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  45025c:	ldp	x21, x22, [sp, #32]
  450260:	ldp	x23, x24, [sp, #48]
  450264:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  450268:	ldrsw	x22, [x0, #24]
  45026c:	ldr	x20, [x0, #16]
  450270:	cbz	x22, 451324 <_obstack_memory_used@@Base+0xa3b8>
  450274:	add	x22, x20, x22
  450278:	ldr	x1, [x19, #256]
  45027c:	b	4502a0 <_obstack_memory_used@@Base+0x9334>
  450280:	mov	x0, x1
  450284:	add	x1, x1, #0x1
  450288:	str	x1, [x19, #256]
  45028c:	add	x20, x20, #0x1
  450290:	strb	w21, [x19, x0]
  450294:	cmp	x20, x22
  450298:	strb	w21, [x19, #264]
  45029c:	b.eq	4502e8 <_obstack_memory_used@@Base+0x937c>  // b.none
  4502a0:	ldrb	w21, [x20]
  4502a4:	cmp	x1, #0xff
  4502a8:	b.ne	450280 <_obstack_memory_used@@Base+0x9314>  // b.any
  4502ac:	ldp	x3, x2, [x19, #272]
  4502b0:	strb	wzr, [x19, #255]
  4502b4:	mov	x0, x19
  4502b8:	blr	x3
  4502bc:	ldr	x2, [x19, #320]
  4502c0:	mov	x1, #0x1                   	// #1
  4502c4:	mov	x0, #0x0                   	// #0
  4502c8:	add	x2, x2, x1
  4502cc:	str	x2, [x19, #320]
  4502d0:	b	450288 <_obstack_memory_used@@Base+0x931c>
  4502d4:	ldr	x1, [x19, #256]
  4502d8:	b	44e4f0 <_obstack_memory_used@@Base+0x7584>
  4502dc:	ldp	x21, x22, [sp, #32]
  4502e0:	ldp	x23, x24, [sp, #48]
  4502e4:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  4502e8:	ldp	x21, x22, [sp, #32]
  4502ec:	ldp	x23, x24, [sp, #48]
  4502f0:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  4502f4:	ldp	x21, x22, [sp, #32]
  4502f8:	ldp	x23, x24, [sp, #48]
  4502fc:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  450300:	ldp	x21, x22, [sp, #32]
  450304:	ldp	x23, x24, [sp, #48]
  450308:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  45030c:	ldp	x21, x22, [sp, #32]
  450310:	ldp	x23, x24, [sp, #48]
  450314:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  450318:	ldr	x1, [x2, #8]
  45031c:	ldr	w22, [x1, #28]
  450320:	cmp	w22, #0x6
  450324:	b.hi	4503bc <_obstack_memory_used@@Base+0x9450>  // b.pmore
  450328:	cbz	w22, 44db0c <_obstack_memory_used@@Base+0x6ba0>
  45032c:	ldr	x1, [x20, #16]
  450330:	ldr	w1, [x1]
  450334:	cbnz	w1, 44db0c <_obstack_memory_used@@Base+0x6ba0>
  450338:	cmp	w0, #0x3e
  45033c:	b.eq	4516c0 <_obstack_memory_used@@Base+0xa754>  // b.none
  450340:	ldr	x2, [x20, #16]
  450344:	mov	w1, w21
  450348:	mov	x0, x19
  45034c:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  450350:	cmp	w22, #0x4
  450354:	b.eq	4516a0 <_obstack_memory_used@@Base+0xa734>  // b.none
  450358:	b.hi	451564 <_obstack_memory_used@@Base+0xa5f8>  // b.pmore
  45035c:	cmp	w22, #0x2
  450360:	b.eq	451650 <_obstack_memory_used@@Base+0xa6e4>  // b.none
  450364:	cmp	w22, #0x3
  450368:	b.ne	451798 <_obstack_memory_used@@Base+0xa82c>  // b.any
  45036c:	ldr	x1, [x19, #256]
  450370:	cmp	x1, #0xff
  450374:	b.ne	45039c <_obstack_memory_used@@Base+0x9430>  // b.any
  450378:	ldp	x3, x2, [x19, #272]
  45037c:	strb	wzr, [x19, #255]
  450380:	mov	x0, x19
  450384:	blr	x3
  450388:	str	xzr, [x19, #256]
  45038c:	ldr	x0, [x19, #320]
  450390:	mov	x1, #0x0                   	// #0
  450394:	add	x0, x0, #0x1
  450398:	str	x0, [x19, #320]
  45039c:	add	x0, x1, #0x1
  4503a0:	str	x0, [x19, #256]
  4503a4:	mov	w0, #0x6c                  	// #108
  4503a8:	strb	w0, [x19, x1]
  4503ac:	strb	w0, [x19, #264]
  4503b0:	ldp	x21, x22, [sp, #32]
  4503b4:	ldp	x23, x24, [sp, #48]
  4503b8:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  4503bc:	cmp	w22, #0x7
  4503c0:	b.ne	44db0c <_obstack_memory_used@@Base+0x6ba0>  // b.any
  4503c4:	ldr	x1, [x20, #16]
  4503c8:	ldr	w3, [x1]
  4503cc:	cbnz	w3, 44db0c <_obstack_memory_used@@Base+0x6ba0>
  4503d0:	ldr	w3, [x1, #16]
  4503d4:	cmp	w0, #0x3d
  4503d8:	ccmp	w3, #0x1, #0x0, eq  // eq = none
  4503dc:	b.ne	44db0c <_obstack_memory_used@@Base+0x6ba0>  // b.any
  4503e0:	ldr	x0, [x1, #8]
  4503e4:	ldrb	w0, [x0]
  4503e8:	cmp	w0, #0x30
  4503ec:	b.eq	4517a4 <_obstack_memory_used@@Base+0xa838>  // b.none
  4503f0:	cmp	w0, #0x31
  4503f4:	b.ne	44db0c <_obstack_memory_used@@Base+0x6ba0>  // b.any
  4503f8:	mov	x0, x19
  4503fc:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a094>
  450400:	mov	x2, #0x4                   	// #4
  450404:	add	x1, x1, #0x7a0
  450408:	bl	449740 <_obstack_memory_used@@Base+0x27d4>
  45040c:	ldp	x21, x22, [sp, #32]
  450410:	ldp	x23, x24, [sp, #48]
  450414:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  450418:	ldp	x3, x2, [x19, #272]
  45041c:	strb	wzr, [x19, #255]
  450420:	mov	x0, x19
  450424:	blr	x3
  450428:	ldr	x0, [x19, #320]
  45042c:	mov	x1, #0x0                   	// #0
  450430:	add	x0, x0, #0x1
  450434:	str	x0, [x19, #320]
  450438:	b	44fbc0 <_obstack_memory_used@@Base+0x8c54>
  45043c:	ldr	x0, [x22, #8]
  450440:	ldr	x23, [x0]
  450444:	ldrb	w0, [x23]
  450448:	subs	w1, w0, #0x61
  45044c:	b.ne	450460 <_obstack_memory_used@@Base+0x94f4>  // b.any
  450450:	ldrb	w1, [x23, #1]
  450454:	subs	w1, w1, #0x64
  450458:	b.ne	450460 <_obstack_memory_used@@Base+0x94f4>  // b.any
  45045c:	ldrb	w1, [x23, #2]
  450460:	ldr	w2, [x20]
  450464:	cbnz	w1, 450470 <_obstack_memory_used@@Base+0x9504>
  450468:	cmp	w2, #0x3
  45046c:	b.eq	451468 <_obstack_memory_used@@Base+0xa4fc>  // b.none
  450470:	cmp	w2, #0x39
  450474:	b.eq	451510 <_obstack_memory_used@@Base+0xa5a4>  // b.none
  450478:	cmp	w0, #0x73
  45047c:	b.ne	45054c <_obstack_memory_used@@Base+0x95e0>  // b.any
  450480:	ldrb	w1, [x23, #1]
  450484:	cmp	w1, #0x5a
  450488:	b.ne	450598 <_obstack_memory_used@@Base+0x962c>  // b.any
  45048c:	ldrb	w3, [x23, #2]
  450490:	cbnz	w3, 450598 <_obstack_memory_used@@Base+0x962c>
  450494:	mov	x1, x20
  450498:	mov	x0, x19
  45049c:	bl	44a090 <_obstack_memory_used@@Base+0x3124>
  4504a0:	cbnz	x0, 4504bc <_obstack_memory_used@@Base+0x9550>
  4504a4:	b	4504c8 <_obstack_memory_used@@Base+0x955c>
  4504a8:	ldr	x1, [x0, #8]
  4504ac:	cbz	x1, 4504c8 <_obstack_memory_used@@Base+0x955c>
  4504b0:	ldr	x0, [x0, #16]
  4504b4:	add	w3, w3, #0x1
  4504b8:	cbz	x0, 4504c8 <_obstack_memory_used@@Base+0x955c>
  4504bc:	ldr	w1, [x0]
  4504c0:	cmp	w1, #0x2f
  4504c4:	b.eq	4504a8 <_obstack_memory_used@@Base+0x953c>  // b.none
  4504c8:	mov	w2, w3
  4504cc:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  4504d0:	add	x1, x1, #0x40
  4504d4:	add	x20, sp, #0x60
  4504d8:	mov	x0, x20
  4504dc:	bl	402350 <sprintf@plt>
  4504e0:	mov	x0, x20
  4504e4:	bl	4022b0 <strlen@plt>
  4504e8:	cbz	x0, 45161c <_obstack_memory_used@@Base+0xa6b0>
  4504ec:	add	x22, x20, x0
  4504f0:	ldr	x1, [x19, #256]
  4504f4:	b	450518 <_obstack_memory_used@@Base+0x95ac>
  4504f8:	mov	x0, x1
  4504fc:	add	x1, x1, #0x1
  450500:	str	x1, [x19, #256]
  450504:	add	x20, x20, #0x1
  450508:	strb	w21, [x19, x0]
  45050c:	cmp	x20, x22
  450510:	strb	w21, [x19, #264]
  450514:	b.eq	451420 <_obstack_memory_used@@Base+0xa4b4>  // b.none
  450518:	ldrb	w21, [x20]
  45051c:	cmp	x1, #0xff
  450520:	b.ne	4504f8 <_obstack_memory_used@@Base+0x958c>  // b.any
  450524:	ldp	x3, x2, [x19, #272]
  450528:	strb	wzr, [x19, #255]
  45052c:	mov	x0, x19
  450530:	blr	x3
  450534:	ldr	x2, [x19, #320]
  450538:	mov	x1, #0x1                   	// #1
  45053c:	mov	x0, #0x0                   	// #0
  450540:	add	x2, x2, x1
  450544:	str	x2, [x19, #320]
  450548:	b	450500 <_obstack_memory_used@@Base+0x9594>
  45054c:	mov	x0, x19
  450550:	mov	x2, x22
  450554:	mov	w1, w21
  450558:	bl	452968 <_obstack_memory_used@@Base+0xb9fc>
  45055c:	ldrb	w0, [x23]
  450560:	cmp	w0, #0x67
  450564:	b.ne	450628 <_obstack_memory_used@@Base+0x96bc>  // b.any
  450568:	ldrb	w1, [x23, #1]
  45056c:	cmp	w1, #0x73
  450570:	b.ne	450628 <_obstack_memory_used@@Base+0x96bc>  // b.any
  450574:	ldrb	w1, [x23, #2]
  450578:	cbnz	w1, 450628 <_obstack_memory_used@@Base+0x96bc>
  45057c:	mov	w1, w21
  450580:	mov	x2, x20
  450584:	mov	x0, x19
  450588:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  45058c:	ldp	x21, x22, [sp, #32]
  450590:	ldp	x23, x24, [sp, #48]
  450594:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  450598:	cmp	w0, #0x73
  45059c:	b.ne	45054c <_obstack_memory_used@@Base+0x95e0>  // b.any
  4505a0:	ldrb	w0, [x23, #1]
  4505a4:	cmp	w0, #0x50
  4505a8:	b.ne	45054c <_obstack_memory_used@@Base+0x95e0>  // b.any
  4505ac:	ldrb	w0, [x23, #2]
  4505b0:	mov	w3, #0x0                   	// #0
  4505b4:	cbz	w0, 4505c8 <_obstack_memory_used@@Base+0x965c>
  4505b8:	b	45054c <_obstack_memory_used@@Base+0x95e0>
  4505bc:	add	w3, w3, #0x1
  4505c0:	ldr	x20, [x20, #16]
  4505c4:	cbz	x20, 45108c <_obstack_memory_used@@Base+0xa120>
  4505c8:	ldr	w0, [x20]
  4505cc:	cmp	w0, #0x2f
  4505d0:	b.ne	45108c <_obstack_memory_used@@Base+0xa120>  // b.any
  4505d4:	ldr	x0, [x20, #8]
  4505d8:	cbz	x0, 45108c <_obstack_memory_used@@Base+0xa120>
  4505dc:	ldr	w1, [x0]
  4505e0:	cmp	w1, #0x4b
  4505e4:	b.ne	4505bc <_obstack_memory_used@@Base+0x9650>  // b.any
  4505e8:	ldr	x1, [x0, #8]
  4505ec:	mov	x0, x19
  4505f0:	bl	44a090 <_obstack_memory_used@@Base+0x3124>
  4505f4:	mov	w1, #0x0                   	// #0
  4505f8:	cbnz	x0, 450614 <_obstack_memory_used@@Base+0x96a8>
  4505fc:	b	450620 <_obstack_memory_used@@Base+0x96b4>
  450600:	ldr	x2, [x0, #8]
  450604:	cbz	x2, 450620 <_obstack_memory_used@@Base+0x96b4>
  450608:	ldr	x0, [x0, #16]
  45060c:	add	w1, w1, #0x1
  450610:	cbz	x0, 450620 <_obstack_memory_used@@Base+0x96b4>
  450614:	ldr	w2, [x0]
  450618:	cmp	w2, #0x2f
  45061c:	b.eq	450600 <_obstack_memory_used@@Base+0x9694>  // b.none
  450620:	add	w3, w3, w1
  450624:	b	4505c0 <_obstack_memory_used@@Base+0x9654>
  450628:	cmp	w0, #0x73
  45062c:	b.ne	44f5bc <_obstack_memory_used@@Base+0x8650>  // b.any
  450630:	ldrb	w0, [x23, #1]
  450634:	cmp	w0, #0x74
  450638:	b.ne	44f5bc <_obstack_memory_used@@Base+0x8650>  // b.any
  45063c:	ldrb	w0, [x23, #2]
  450640:	cbnz	w0, 44f5bc <_obstack_memory_used@@Base+0x8650>
  450644:	ldr	x1, [x19, #256]
  450648:	cmp	x1, #0xff
  45064c:	b.ne	450670 <_obstack_memory_used@@Base+0x9704>  // b.any
  450650:	ldp	x3, x2, [x19, #272]
  450654:	strb	wzr, [x19, #255]
  450658:	mov	x0, x19
  45065c:	blr	x3
  450660:	ldr	x0, [x19, #320]
  450664:	mov	x1, #0x0                   	// #0
  450668:	add	x0, x0, #0x1
  45066c:	str	x0, [x19, #320]
  450670:	add	x0, x1, #0x1
  450674:	str	x0, [x19, #256]
  450678:	mov	w0, #0x28                  	// #40
  45067c:	strb	w0, [x19, x1]
  450680:	strb	w0, [x19, #264]
  450684:	mov	w1, w21
  450688:	mov	x2, x20
  45068c:	mov	x0, x19
  450690:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  450694:	ldr	x1, [x19, #256]
  450698:	cmp	x1, #0xff
  45069c:	b.ne	4506c0 <_obstack_memory_used@@Base+0x9754>  // b.any
  4506a0:	ldp	x3, x2, [x19, #272]
  4506a4:	strb	wzr, [x19, #255]
  4506a8:	mov	x0, x19
  4506ac:	blr	x3
  4506b0:	ldr	x0, [x19, #320]
  4506b4:	mov	x1, #0x0                   	// #0
  4506b8:	add	x0, x0, #0x1
  4506bc:	str	x0, [x19, #320]
  4506c0:	add	x0, x1, #0x1
  4506c4:	str	x0, [x19, #256]
  4506c8:	mov	w0, #0x29                  	// #41
  4506cc:	strb	w0, [x19, x1]
  4506d0:	strb	w0, [x19, #264]
  4506d4:	ldp	x21, x22, [sp, #32]
  4506d8:	ldp	x23, x24, [sp, #48]
  4506dc:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  4506e0:	ldr	x2, [x2, #8]
  4506e4:	mov	x0, x19
  4506e8:	mov	w1, w21
  4506ec:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  4506f0:	ldr	x0, [x19, #368]
  4506f4:	cbz	x0, 450700 <_obstack_memory_used@@Base+0x9794>
  4506f8:	ldr	x0, [sp, #96]
  4506fc:	str	x0, [x19, #288]
  450700:	ldr	x1, [x19, #256]
  450704:	ldrb	w2, [x19, #264]
  450708:	mov	x0, x1
  45070c:	cmp	w2, #0x3c
  450710:	b.eq	451168 <_obstack_memory_used@@Base+0xa1fc>  // b.none
  450714:	add	x1, x0, #0x1
  450718:	cmp	x0, #0xff
  45071c:	b.ne	450748 <_obstack_memory_used@@Base+0x97dc>  // b.any
  450720:	ldp	x3, x2, [x19, #272]
  450724:	strb	wzr, [x19, #255]
  450728:	mov	x1, x0
  45072c:	mov	x0, x19
  450730:	blr	x3
  450734:	ldr	x2, [x19, #320]
  450738:	mov	x1, #0x1                   	// #1
  45073c:	mov	x0, #0x0                   	// #0
  450740:	add	x2, x2, x1
  450744:	str	x2, [x19, #320]
  450748:	str	x1, [x19, #256]
  45074c:	mov	w2, #0x3c                  	// #60
  450750:	strb	w2, [x19, x0]
  450754:	mov	w1, w21
  450758:	strb	w2, [x19, #264]
  45075c:	mov	x0, x19
  450760:	ldr	x2, [x20, #8]
  450764:	ldr	x2, [x2, #16]
  450768:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  45076c:	ldrb	w0, [x19, #264]
  450770:	cmp	w0, #0x3e
  450774:	b.eq	4511ac <_obstack_memory_used@@Base+0xa240>  // b.none
  450778:	ldr	x0, [x19, #256]
  45077c:	add	x1, x0, #0x1
  450780:	cmp	x0, #0xff
  450784:	b.ne	4507b0 <_obstack_memory_used@@Base+0x9844>  // b.any
  450788:	ldp	x3, x2, [x19, #272]
  45078c:	strb	wzr, [x19, #255]
  450790:	mov	x1, x0
  450794:	mov	x0, x19
  450798:	blr	x3
  45079c:	ldr	x2, [x19, #320]
  4507a0:	mov	x1, #0x1                   	// #1
  4507a4:	mov	x0, #0x0                   	// #0
  4507a8:	add	x2, x2, x1
  4507ac:	str	x2, [x19, #320]
  4507b0:	str	x1, [x19, #256]
  4507b4:	mov	w1, #0x3e                  	// #62
  4507b8:	strb	w1, [x19, x0]
  4507bc:	strb	w1, [x19, #264]
  4507c0:	ldp	x21, x22, [sp, #32]
  4507c4:	ldp	x23, x24, [sp, #48]
  4507c8:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  4507cc:	mov	x2, x20
  4507d0:	mov	w1, w21
  4507d4:	mov	x0, x19
  4507d8:	bl	451860 <_obstack_memory_used@@Base+0xa8f4>
  4507dc:	b	44dcc0 <_obstack_memory_used@@Base+0x6d54>
  4507e0:	adrp	x24, 465000 <_obstack_memory_used@@Base+0x1e094>
  4507e4:	add	x24, x24, #0xd48
  4507e8:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e094>
  4507ec:	add	x24, x24, #0x5
  4507f0:	add	x22, x22, #0xd49
  4507f4:	mov	w23, #0x5f                  	// #95
  4507f8:	ldr	x1, [x19, #256]
  4507fc:	b	450820 <_obstack_memory_used@@Base+0x98b4>
  450800:	mov	x0, x1
  450804:	add	x1, x1, #0x1
  450808:	str	x1, [x19, #256]
  45080c:	cmp	x24, x22
  450810:	strb	w23, [x19, x0]
  450814:	strb	w23, [x19, #264]
  450818:	b.eq	44e480 <_obstack_memory_used@@Base+0x7514>  // b.none
  45081c:	ldrb	w23, [x22], #1
  450820:	cmp	x1, #0xff
  450824:	b.ne	450800 <_obstack_memory_used@@Base+0x9894>  // b.any
  450828:	ldp	x3, x2, [x19, #272]
  45082c:	strb	wzr, [x19, #255]
  450830:	mov	x0, x19
  450834:	blr	x3
  450838:	ldr	x2, [x19, #320]
  45083c:	mov	x1, #0x1                   	// #1
  450840:	mov	x0, #0x0                   	// #0
  450844:	add	x2, x2, x1
  450848:	str	x2, [x19, #320]
  45084c:	b	450808 <_obstack_memory_used@@Base+0x989c>
  450850:	mov	x23, #0x0                   	// #0
  450854:	mov	w22, #0x3a                  	// #58
  450858:	ldr	x1, [x19, #256]
  45085c:	b	45087c <_obstack_memory_used@@Base+0x9910>
  450860:	mov	x0, x1
  450864:	add	x1, x1, #0x1
  450868:	str	x1, [x19, #256]
  45086c:	strb	w22, [x19, x0]
  450870:	strb	w22, [x19, #264]
  450874:	cbnz	x23, 44dc64 <_obstack_memory_used@@Base+0x6cf8>
  450878:	mov	x23, #0x1                   	// #1
  45087c:	cmp	x1, #0xff
  450880:	b.ne	450860 <_obstack_memory_used@@Base+0x98f4>  // b.any
  450884:	ldp	x3, x2, [x19, #272]
  450888:	strb	wzr, [x19, #255]
  45088c:	mov	x0, x19
  450890:	blr	x3
  450894:	ldr	x2, [x19, #320]
  450898:	mov	x1, #0x1                   	// #1
  45089c:	mov	x0, #0x0                   	// #0
  4508a0:	add	x2, x2, x1
  4508a4:	str	x2, [x19, #320]
  4508a8:	b	450868 <_obstack_memory_used@@Base+0x98fc>
  4508ac:	ldr	x1, [x19, #256]
  4508b0:	cmp	x1, #0xff
  4508b4:	b.ne	4508d8 <_obstack_memory_used@@Base+0x996c>  // b.any
  4508b8:	ldp	x3, x2, [x19, #272]
  4508bc:	strb	wzr, [x19, #255]
  4508c0:	mov	x0, x19
  4508c4:	blr	x3
  4508c8:	ldr	x0, [x19, #320]
  4508cc:	mov	x1, #0x0                   	// #0
  4508d0:	add	x0, x0, #0x1
  4508d4:	str	x0, [x19, #320]
  4508d8:	add	x0, x1, #0x1
  4508dc:	str	x0, [x19, #256]
  4508e0:	mov	w0, #0x5b                  	// #91
  4508e4:	strb	w0, [x19, x1]
  4508e8:	strb	w0, [x19, #264]
  4508ec:	mov	w1, w21
  4508f0:	mov	x0, x19
  4508f4:	ldr	x2, [x20, #16]
  4508f8:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  4508fc:	ldr	x1, [x19, #256]
  450900:	cmp	x1, #0xff
  450904:	b.ne	450928 <_obstack_memory_used@@Base+0x99bc>  // b.any
  450908:	ldp	x3, x2, [x19, #272]
  45090c:	strb	wzr, [x19, #255]
  450910:	mov	x0, x19
  450914:	blr	x3
  450918:	ldr	x0, [x19, #320]
  45091c:	mov	x1, #0x0                   	// #0
  450920:	add	x0, x0, #0x1
  450924:	str	x0, [x19, #320]
  450928:	add	x0, x1, #0x1
  45092c:	str	x0, [x19, #256]
  450930:	mov	w0, #0x5d                  	// #93
  450934:	strb	w0, [x19, x1]
  450938:	strb	w0, [x19, #264]
  45093c:	ldp	x21, x22, [sp, #32]
  450940:	ldp	x23, x24, [sp, #48]
  450944:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  450948:	ldr	x0, [x19, #256]
  45094c:	cmp	x0, #0xff
  450950:	b.ne	450978 <_obstack_memory_used@@Base+0x9a0c>  // b.any
  450954:	ldp	x3, x2, [x19, #272]
  450958:	strb	wzr, [x19, #255]
  45095c:	mov	x1, x0
  450960:	mov	x0, x19
  450964:	blr	x3
  450968:	ldr	x1, [x19, #320]
  45096c:	mov	x0, #0x0                   	// #0
  450970:	add	x1, x1, #0x1
  450974:	str	x1, [x19, #320]
  450978:	add	x1, x0, #0x1
  45097c:	str	x1, [x19, #256]
  450980:	mov	w2, #0x20                  	// #32
  450984:	strb	w2, [x19, x0]
  450988:	strb	w2, [x19, #264]
  45098c:	b	44eeb0 <_obstack_memory_used@@Base+0x7f44>
  450990:	ldr	x0, [x19, #256]
  450994:	cmp	x0, #0xff
  450998:	b.ne	4509c0 <_obstack_memory_used@@Base+0x9a54>  // b.any
  45099c:	ldp	x3, x2, [x19, #272]
  4509a0:	strb	wzr, [x19, #255]
  4509a4:	mov	x1, x0
  4509a8:	mov	x0, x19
  4509ac:	blr	x3
  4509b0:	ldr	x1, [x19, #320]
  4509b4:	mov	x0, #0x0                   	// #0
  4509b8:	add	x1, x1, #0x1
  4509bc:	str	x1, [x19, #320]
  4509c0:	add	x1, x0, #0x1
  4509c4:	str	x1, [x19, #256]
  4509c8:	mov	w2, #0x20                  	// #32
  4509cc:	strb	w2, [x19, x0]
  4509d0:	strb	w2, [x19, #264]
  4509d4:	b	44ee50 <_obstack_memory_used@@Base+0x7ee4>
  4509d8:	add	x2, x20, #0x10
  4509dc:	mov	w1, w22
  4509e0:	mov	x0, x19
  4509e4:	bl	452060 <_obstack_memory_used@@Base+0xb0f4>
  4509e8:	ldr	x2, [x20, #8]
  4509ec:	cbz	x2, 451218 <_obstack_memory_used@@Base+0xa2ac>
  4509f0:	mov	w1, w22
  4509f4:	mov	x0, x19
  4509f8:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  4509fc:	ldp	x21, x22, [sp, #32]
  450a00:	ldp	x23, x24, [sp, #48]
  450a04:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  450a08:	ldp	x3, x2, [x19, #272]
  450a0c:	strb	wzr, [x19, #255]
  450a10:	mov	x0, x19
  450a14:	blr	x3
  450a18:	ldr	x0, [x19, #320]
  450a1c:	mov	w1, #0x29                  	// #41
  450a20:	strb	w1, [x19]
  450a24:	strb	w1, [x19, #264]
  450a28:	mov	x1, #0x1                   	// #1
  450a2c:	add	x0, x0, x1
  450a30:	str	x1, [x19, #256]
  450a34:	str	x0, [x19, #320]
  450a38:	ldr	w0, [x20]
  450a3c:	cmp	w0, #0x3e
  450a40:	b.ne	44db8c <_obstack_memory_used@@Base+0x6c20>  // b.any
  450a44:	ldr	x1, [x19, #256]
  450a48:	mov	w0, #0x2d                  	// #45
  450a4c:	add	x2, x1, #0x1
  450a50:	str	x2, [x19, #256]
  450a54:	strb	w0, [x19, x1]
  450a58:	strb	w0, [x19, #264]
  450a5c:	b	44db8c <_obstack_memory_used@@Base+0x6c20>
  450a60:	ldp	x21, x22, [sp, #32]
  450a64:	ldp	x23, x24, [sp, #48]
  450a68:	ldp	x25, x26, [sp, #64]
  450a6c:	str	x4, [x19, #296]
  450a70:	str	w1, [x19, #304]
  450a74:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  450a78:	ldp	x21, x22, [sp, #32]
  450a7c:	ldp	x23, x24, [sp, #48]
  450a80:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  450a84:	ldp	x21, x22, [sp, #32]
  450a88:	ldp	x23, x24, [sp, #48]
  450a8c:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  450a90:	mov	w22, #0x0                   	// #0
  450a94:	b	44dbf0 <_obstack_memory_used@@Base+0x6c84>
  450a98:	ldr	x0, [x19, #256]
  450a9c:	cmp	x0, x22
  450aa0:	b.eq	451254 <_obstack_memory_used@@Base+0xa2e8>  // b.none
  450aa4:	ldp	x21, x22, [sp, #32]
  450aa8:	ldp	x23, x24, [sp, #48]
  450aac:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  450ab0:	ldr	x2, [x20, #8]
  450ab4:	mov	w1, w21
  450ab8:	mov	x0, x19
  450abc:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  450ac0:	ldp	x21, x22, [sp, #32]
  450ac4:	ldp	x23, x24, [sp, #48]
  450ac8:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  450acc:	cmp	x3, #0xff
  450ad0:	b.ne	450a44 <_obstack_memory_used@@Base+0x9ad8>  // b.any
  450ad4:	ldp	x4, x2, [x19, #272]
  450ad8:	strb	wzr, [x19, #255]
  450adc:	mov	x0, x19
  450ae0:	mov	x1, x3
  450ae4:	blr	x4
  450ae8:	str	xzr, [x19, #256]
  450aec:	ldr	x0, [x19, #320]
  450af0:	add	x0, x0, #0x1
  450af4:	str	x0, [x19, #320]
  450af8:	b	450a44 <_obstack_memory_used@@Base+0x9ad8>
  450afc:	ldp	x21, x22, [sp, #32]
  450b00:	ldp	x23, x24, [sp, #48]
  450b04:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  450b08:	adrp	x24, 465000 <_obstack_memory_used@@Base+0x1e094>
  450b0c:	add	x24, x24, #0xb60
  450b10:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e094>
  450b14:	add	x24, x24, #0xd
  450b18:	add	x22, x22, #0xb61
  450b1c:	mov	w20, #0x7b                  	// #123
  450b20:	ldr	x1, [x19, #256]
  450b24:	b	450b48 <_obstack_memory_used@@Base+0x9bdc>
  450b28:	mov	x0, x1
  450b2c:	add	x1, x1, #0x1
  450b30:	str	x1, [x19, #256]
  450b34:	cmp	x24, x22
  450b38:	strb	w20, [x19, x0]
  450b3c:	strb	w20, [x19, #264]
  450b40:	b.eq	450b78 <_obstack_memory_used@@Base+0x9c0c>  // b.none
  450b44:	ldrb	w20, [x22], #1
  450b48:	cmp	x1, #0xff
  450b4c:	b.ne	450b28 <_obstack_memory_used@@Base+0x9bbc>  // b.any
  450b50:	ldp	x3, x2, [x19, #272]
  450b54:	strb	wzr, [x19, #255]
  450b58:	mov	x0, x19
  450b5c:	blr	x3
  450b60:	ldr	x2, [x19, #320]
  450b64:	mov	x1, #0x1                   	// #1
  450b68:	mov	x0, #0x0                   	// #0
  450b6c:	add	x2, x2, x1
  450b70:	str	x2, [x19, #320]
  450b74:	b	450b30 <_obstack_memory_used@@Base+0x9bc4>
  450b78:	ldr	w2, [x23, #16]
  450b7c:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  450b80:	add	x1, x1, #0x40
  450b84:	add	x20, sp, #0x60
  450b88:	add	w2, w2, #0x1
  450b8c:	mov	x0, x20
  450b90:	bl	402350 <sprintf@plt>
  450b94:	mov	x0, x20
  450b98:	bl	4022b0 <strlen@plt>
  450b9c:	ldr	x1, [x19, #256]
  450ba0:	cbz	x0, 450c00 <_obstack_memory_used@@Base+0x9c94>
  450ba4:	add	x24, x20, x0
  450ba8:	b	450bcc <_obstack_memory_used@@Base+0x9c60>
  450bac:	mov	x0, x1
  450bb0:	add	x1, x1, #0x1
  450bb4:	str	x1, [x19, #256]
  450bb8:	add	x20, x20, #0x1
  450bbc:	strb	w22, [x19, x0]
  450bc0:	cmp	x24, x20
  450bc4:	strb	w22, [x19, #264]
  450bc8:	b.eq	450c00 <_obstack_memory_used@@Base+0x9c94>  // b.none
  450bcc:	ldrb	w22, [x20]
  450bd0:	cmp	x1, #0xff
  450bd4:	b.ne	450bac <_obstack_memory_used@@Base+0x9c40>  // b.any
  450bd8:	ldp	x3, x2, [x19, #272]
  450bdc:	strb	wzr, [x19, #255]
  450be0:	mov	x0, x19
  450be4:	blr	x3
  450be8:	ldr	x2, [x19, #320]
  450bec:	mov	x1, #0x1                   	// #1
  450bf0:	mov	x0, #0x0                   	// #0
  450bf4:	add	x2, x2, x1
  450bf8:	str	x2, [x19, #320]
  450bfc:	b	450bb4 <_obstack_memory_used@@Base+0x9c48>
  450c00:	adrp	x20, 465000 <_obstack_memory_used@@Base+0x1e094>
  450c04:	add	x20, x20, #0xb70
  450c08:	add	x24, x20, #0x3
  450c0c:	mov	w22, #0x7d                  	// #125
  450c10:	b	450c38 <_obstack_memory_used@@Base+0x9ccc>
  450c14:	mov	x0, x1
  450c18:	add	x1, x1, #0x1
  450c1c:	str	x1, [x19, #256]
  450c20:	add	x20, x20, #0x1
  450c24:	strb	w22, [x19, x0]
  450c28:	cmp	x24, x20
  450c2c:	strb	w22, [x19, #264]
  450c30:	b.eq	450c68 <_obstack_memory_used@@Base+0x9cfc>  // b.none
  450c34:	ldrb	w22, [x20]
  450c38:	cmp	x1, #0xff
  450c3c:	b.ne	450c14 <_obstack_memory_used@@Base+0x9ca8>  // b.any
  450c40:	ldp	x3, x2, [x19, #272]
  450c44:	strb	wzr, [x19, #255]
  450c48:	mov	x0, x19
  450c4c:	blr	x3
  450c50:	ldr	x2, [x19, #320]
  450c54:	mov	x1, #0x1                   	// #1
  450c58:	mov	x0, #0x0                   	// #0
  450c5c:	add	x2, x2, x1
  450c60:	str	x2, [x19, #320]
  450c64:	b	450c1c <_obstack_memory_used@@Base+0x9cb0>
  450c68:	ldr	x23, [x23, #8]
  450c6c:	b	44dc74 <_obstack_memory_used@@Base+0x6d08>
  450c70:	ldr	x25, [x25, #16]
  450c74:	ldr	w5, [x25]
  450c78:	cmp	w5, #0x47
  450c7c:	b.eq	451314 <_obstack_memory_used@@Base+0xa3a8>  // b.none
  450c80:	ubfiz	x3, x24, #5, #32
  450c84:	sub	w0, w5, #0x1c
  450c88:	mov	x1, #0x1f                  	// #31
  450c8c:	add	x3, x23, x3
  450c90:	cmp	w0, #0x34
  450c94:	mov	x2, #0x1                   	// #1
  450c98:	movk	x1, #0x1a, lsl #48
  450c9c:	b.hi	44ed3c <_obstack_memory_used@@Base+0x7dd0>  // b.pmore
  450ca0:	lsl	x0, x2, x0
  450ca4:	tst	x0, x1
  450ca8:	b.eq	44ed3c <_obstack_memory_used@@Base+0x7dd0>  // b.none
  450cac:	cmp	w24, #0x4
  450cb0:	b.eq	450d90 <_obstack_memory_used@@Base+0x9e24>  // b.none
  450cb4:	ldp	x8, x9, [x3, #-32]
  450cb8:	stur	x25, [x3, #-24]
  450cbc:	ldp	x4, x5, [x3, #-16]
  450cc0:	stur	wzr, [x3, #-16]
  450cc4:	stp	x8, x9, [x3]
  450cc8:	sub	x0, x3, #0x20
  450ccc:	add	w24, w24, #0x1
  450cd0:	ldr	x25, [x25, #8]
  450cd4:	stp	x4, x5, [x3, #16]
  450cd8:	ldr	w5, [x25]
  450cdc:	stp	x6, x0, [x3, #-8]
  450ce0:	sub	w0, w5, #0x1c
  450ce4:	str	x3, [x19, #296]
  450ce8:	cmp	w0, #0x34
  450cec:	add	x3, x3, #0x20
  450cf0:	b.ls	450ca0 <_obstack_memory_used@@Base+0x9d34>  // b.plast
  450cf4:	b	44ed3c <_obstack_memory_used@@Base+0x7dd0>
  450cf8:	mov	w0, #0x1                   	// #1
  450cfc:	ldp	x21, x22, [sp, #32]
  450d00:	ldp	x23, x24, [sp, #48]
  450d04:	str	w0, [x19, #304]
  450d08:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  450d0c:	ldr	x4, [x19, #288]
  450d10:	add	x0, sp, #0x60
  450d14:	str	x0, [x19, #296]
  450d18:	mov	w1, w22
  450d1c:	mov	x0, x19
  450d20:	stp	x3, x20, [sp, #96]
  450d24:	str	wzr, [sp, #112]
  450d28:	str	x4, [sp, #120]
  450d2c:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  450d30:	ldr	w0, [sp, #112]
  450d34:	ldr	x1, [sp, #96]
  450d38:	str	x1, [x19, #296]
  450d3c:	cbnz	w0, 45145c <_obstack_memory_used@@Base+0xa4f0>
  450d40:	ldr	x1, [x19, #256]
  450d44:	cmp	x1, #0xff
  450d48:	b.ne	450d70 <_obstack_memory_used@@Base+0x9e04>  // b.any
  450d4c:	ldp	x3, x2, [x19, #272]
  450d50:	strb	wzr, [x19, #255]
  450d54:	mov	x0, x19
  450d58:	blr	x3
  450d5c:	str	xzr, [x19, #256]
  450d60:	ldr	x0, [x19, #320]
  450d64:	mov	x1, #0x0                   	// #0
  450d68:	add	x0, x0, #0x1
  450d6c:	str	x0, [x19, #320]
  450d70:	add	x0, x1, #0x1
  450d74:	str	x0, [x19, #256]
  450d78:	mov	w0, #0x20                  	// #32
  450d7c:	strb	w0, [x19, x1]
  450d80:	strb	w0, [x19, #264]
  450d84:	ldr	x3, [x19, #296]
  450d88:	b	44e214 <_obstack_memory_used@@Base+0x72a8>
  450d8c:	str	x3, [x19, #296]
  450d90:	mov	w0, #0x1                   	// #1
  450d94:	ldp	x21, x22, [sp, #32]
  450d98:	ldp	x23, x24, [sp, #48]
  450d9c:	ldp	x25, x26, [sp, #64]
  450da0:	str	w0, [x19, #304]
  450da4:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  450da8:	ldrb	w0, [x0]
  450dac:	sub	w1, w0, #0x63
  450db0:	sub	w0, w0, #0x72
  450db4:	and	w1, w1, #0xff
  450db8:	and	w0, w0, #0xff
  450dbc:	cmp	w1, #0x1
  450dc0:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  450dc4:	b.hi	44f074 <_obstack_memory_used@@Base+0x8108>  // b.pmore
  450dc8:	mov	w1, w21
  450dcc:	mov	x0, x19
  450dd0:	bl	452968 <_obstack_memory_used@@Base+0xb9fc>
  450dd4:	ldr	x1, [x19, #256]
  450dd8:	cmp	x1, #0xff
  450ddc:	b.ne	450e04 <_obstack_memory_used@@Base+0x9e98>  // b.any
  450de0:	ldp	x3, x2, [x19, #272]
  450de4:	strb	wzr, [x19, #255]
  450de8:	mov	x0, x19
  450dec:	blr	x3
  450df0:	str	xzr, [x19, #256]
  450df4:	ldr	x0, [x19, #320]
  450df8:	mov	x1, #0x0                   	// #0
  450dfc:	add	x0, x0, #0x1
  450e00:	str	x0, [x19, #320]
  450e04:	add	x0, x1, #0x1
  450e08:	str	x0, [x19, #256]
  450e0c:	mov	w0, #0x3c                  	// #60
  450e10:	strb	w0, [x19, x1]
  450e14:	strb	w0, [x19, #264]
  450e18:	mov	w1, w21
  450e1c:	mov	x0, x19
  450e20:	mov	w22, #0x3e                  	// #62
  450e24:	ldr	x2, [x20, #16]
  450e28:	mov	x23, #0x0                   	// #0
  450e2c:	ldr	x2, [x2, #8]
  450e30:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  450e34:	ldr	x1, [x19, #256]
  450e38:	b	450e5c <_obstack_memory_used@@Base+0x9ef0>
  450e3c:	mov	x0, x1
  450e40:	add	x1, x1, #0x1
  450e44:	str	x1, [x19, #256]
  450e48:	strb	w22, [x19, x0]
  450e4c:	strb	w22, [x19, #264]
  450e50:	mov	w22, #0x28                  	// #40
  450e54:	cbnz	x23, 450fe4 <_obstack_memory_used@@Base+0xa078>
  450e58:	mov	x23, #0x1                   	// #1
  450e5c:	cmp	x1, #0xff
  450e60:	b.ne	450e3c <_obstack_memory_used@@Base+0x9ed0>  // b.any
  450e64:	ldp	x3, x2, [x19, #272]
  450e68:	strb	wzr, [x19, #255]
  450e6c:	mov	x0, x19
  450e70:	blr	x3
  450e74:	ldr	x2, [x19, #320]
  450e78:	mov	x1, #0x1                   	// #1
  450e7c:	mov	x0, #0x0                   	// #0
  450e80:	add	x2, x2, x1
  450e84:	str	x2, [x19, #320]
  450e88:	b	450e44 <_obstack_memory_used@@Base+0x9ed8>
  450e8c:	ldr	w4, [x19, #344]
  450e90:	ldr	x5, [x19, #336]
  450e94:	cmp	w4, #0x0
  450e98:	b.le	45148c <_obstack_memory_used@@Base+0xa520>
  450e9c:	sub	w3, w4, #0x1
  450ea0:	add	x1, x5, #0x10
  450ea4:	mov	x2, x5
  450ea8:	add	x3, x1, w3, uxtw #4
  450eac:	b	450ebc <_obstack_memory_used@@Base+0x9f50>
  450eb0:	add	x2, x2, #0x10
  450eb4:	cmp	x3, x2
  450eb8:	b.eq	45148c <_obstack_memory_used@@Base+0xa520>  // b.none
  450ebc:	ldr	x1, [x2]
  450ec0:	cmp	x0, x1
  450ec4:	b.ne	450eb0 <_obstack_memory_used@@Base+0x9f44>  // b.any
  450ec8:	ldr	x4, [x19, #328]
  450ecc:	mov	x1, x4
  450ed0:	cbnz	x4, 450eec <_obstack_memory_used@@Base+0x9f80>
  450ed4:	b	4512f0 <_obstack_memory_used@@Base+0xa384>
  450ed8:	cmp	x3, x20
  450edc:	ccmp	x4, x1, #0x4, eq  // eq = none
  450ee0:	b.ne	450ef8 <_obstack_memory_used@@Base+0x9f8c>  // b.any
  450ee4:	ldr	x1, [x1, #8]
  450ee8:	cbz	x1, 4512f0 <_obstack_memory_used@@Base+0xa384>
  450eec:	ldr	x3, [x1]
  450ef0:	cmp	x3, x0
  450ef4:	b.ne	450ed8 <_obstack_memory_used@@Base+0x9f6c>  // b.any
  450ef8:	add	x1, x0, #0x8
  450efc:	mov	x0, x19
  450f00:	bl	44a060 <_obstack_memory_used@@Base+0x30f4>
  450f04:	cbz	x0, 44da48 <_obstack_memory_used@@Base+0x6adc>
  450f08:	mov	w22, #0x0                   	// #0
  450f0c:	ldr	w1, [x0]
  450f10:	cmp	w1, #0x2f
  450f14:	b.ne	44dbcc <_obstack_memory_used@@Base+0x6c60>  // b.any
  450f18:	ldr	w1, [x19, #316]
  450f1c:	tbnz	w1, #31, 451628 <_obstack_memory_used@@Base+0xa6bc>
  450f20:	bl	44a020 <_obstack_memory_used@@Base+0x30b4>
  450f24:	cbz	x0, 45163c <_obstack_memory_used@@Base+0xa6d0>
  450f28:	ldr	w1, [x0]
  450f2c:	b	44dbcc <_obstack_memory_used@@Base+0x6c60>
  450f30:	ldr	x2, [x20, #8]
  450f34:	add	x3, x20, #0x10
  450f38:	mov	w1, w21
  450f3c:	mov	x0, x19
  450f40:	bl	452b18 <_obstack_memory_used@@Base+0xbbac>
  450f44:	cbnz	w0, 451414 <_obstack_memory_used@@Base+0xa4a8>
  450f48:	ldp	x24, x3, [x20, #8]
  450f4c:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  450f50:	add	x1, x1, #0xdb0
  450f54:	ldr	x0, [x24, #8]
  450f58:	ldp	x22, x2, [x3, #8]
  450f5c:	ldr	x0, [x0]
  450f60:	ldp	x23, x20, [x2, #8]
  450f64:	bl	402620 <strcmp@plt>
  450f68:	cbnz	w0, 451374 <_obstack_memory_used@@Base+0xa408>
  450f6c:	mov	x2, x22
  450f70:	mov	w1, w21
  450f74:	mov	x0, x19
  450f78:	bl	452a20 <_obstack_memory_used@@Base+0xbab4>
  450f7c:	mov	x2, x24
  450f80:	mov	w1, w21
  450f84:	mov	x0, x19
  450f88:	bl	452968 <_obstack_memory_used@@Base+0xb9fc>
  450f8c:	mov	x2, x23
  450f90:	mov	w1, w21
  450f94:	mov	x0, x19
  450f98:	bl	452a20 <_obstack_memory_used@@Base+0xbab4>
  450f9c:	mov	x0, x19
  450fa0:	mov	x2, #0x3                   	// #3
  450fa4:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  450fa8:	add	x1, x1, #0xdb8
  450fac:	bl	449740 <_obstack_memory_used@@Base+0x27d4>
  450fb0:	mov	w1, w21
  450fb4:	mov	x2, x20
  450fb8:	mov	x0, x19
  450fbc:	bl	452a20 <_obstack_memory_used@@Base+0xbab4>
  450fc0:	ldp	x21, x22, [sp, #32]
  450fc4:	ldp	x23, x24, [sp, #48]
  450fc8:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  450fcc:	sub	w1, w0, #0x61
  450fd0:	and	w1, w1, #0xff
  450fd4:	cmp	w1, #0x5
  450fd8:	b.hi	451598 <_obstack_memory_used@@Base+0xa62c>  // b.pmore
  450fdc:	sub	w0, w0, #0x57
  450fe0:	b	44ff94 <_obstack_memory_used@@Base+0x9028>
  450fe4:	ldr	x2, [x20, #16]
  450fe8:	mov	w1, w21
  450fec:	mov	x0, x19
  450ff0:	ldr	x2, [x2, #16]
  450ff4:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  450ff8:	ldr	x1, [x19, #256]
  450ffc:	cmp	x1, #0xff
  451000:	b.ne	451028 <_obstack_memory_used@@Base+0xa0bc>  // b.any
  451004:	ldp	x3, x2, [x19, #272]
  451008:	strb	wzr, [x19, #255]
  45100c:	mov	x0, x19
  451010:	blr	x3
  451014:	str	xzr, [x19, #256]
  451018:	ldr	x0, [x19, #320]
  45101c:	mov	x1, #0x0                   	// #0
  451020:	add	x0, x0, #0x1
  451024:	str	x0, [x19, #320]
  451028:	add	x0, x1, #0x1
  45102c:	str	x0, [x19, #256]
  451030:	mov	w0, #0x29                  	// #41
  451034:	strb	w0, [x19, x1]
  451038:	strb	w0, [x19, #264]
  45103c:	ldp	x21, x22, [sp, #32]
  451040:	ldp	x23, x24, [sp, #48]
  451044:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  451048:	ldr	w1, [x19, #316]
  45104c:	tbnz	w1, #31, 44fff4 <_obstack_memory_used@@Base+0x9088>
  451050:	bl	44a020 <_obstack_memory_used@@Base+0x30b4>
  451054:	mov	x2, x0
  451058:	cbnz	x0, 44fff4 <_obstack_memory_used@@Base+0x9088>
  45105c:	b	44da48 <_obstack_memory_used@@Base+0x6adc>
  451060:	cmp	w1, #0x63
  451064:	b.eq	45142c <_obstack_memory_used@@Base+0xa4c0>  // b.none
  451068:	mov	w1, w21
  45106c:	mov	x0, x19
  451070:	bl	452968 <_obstack_memory_used@@Base+0xb9fc>
  451074:	ldr	x2, [x20, #16]
  451078:	mov	w1, w21
  45107c:	mov	x0, x19
  451080:	ldr	x2, [x2, #16]
  451084:	bl	452a20 <_obstack_memory_used@@Base+0xbab4>
  451088:	b	44f1a8 <_obstack_memory_used@@Base+0x823c>
  45108c:	mov	w2, w3
  451090:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  451094:	add	x1, x1, #0x40
  451098:	add	x20, sp, #0x60
  45109c:	mov	x0, x20
  4510a0:	bl	402350 <sprintf@plt>
  4510a4:	mov	x0, x20
  4510a8:	bl	4022b0 <strlen@plt>
  4510ac:	cbz	x0, 451708 <_obstack_memory_used@@Base+0xa79c>
  4510b0:	add	x22, x20, x0
  4510b4:	ldr	x1, [x19, #256]
  4510b8:	b	4510dc <_obstack_memory_used@@Base+0xa170>
  4510bc:	mov	x0, x1
  4510c0:	add	x1, x1, #0x1
  4510c4:	str	x1, [x19, #256]
  4510c8:	add	x20, x20, #0x1
  4510cc:	strb	w21, [x19, x0]
  4510d0:	cmp	x22, x20
  4510d4:	strb	w21, [x19, #264]
  4510d8:	b.eq	45111c <_obstack_memory_used@@Base+0xa1b0>  // b.none
  4510dc:	ldrb	w21, [x20]
  4510e0:	cmp	x1, #0xff
  4510e4:	b.ne	4510bc <_obstack_memory_used@@Base+0xa150>  // b.any
  4510e8:	ldp	x3, x2, [x19, #272]
  4510ec:	strb	wzr, [x19, #255]
  4510f0:	mov	x0, x19
  4510f4:	blr	x3
  4510f8:	ldr	x2, [x19, #320]
  4510fc:	mov	x1, #0x1                   	// #1
  451100:	mov	x0, #0x0                   	// #0
  451104:	add	x2, x2, x1
  451108:	str	x2, [x19, #320]
  45110c:	b	4510c4 <_obstack_memory_used@@Base+0xa158>
  451110:	ldp	x21, x22, [sp, #32]
  451114:	ldp	x23, x24, [sp, #48]
  451118:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  45111c:	ldp	x21, x22, [sp, #32]
  451120:	ldp	x23, x24, [sp, #48]
  451124:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  451128:	ldr	x0, [x22, #8]
  45112c:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  451130:	mov	x2, #0x6                   	// #6
  451134:	add	x1, x1, #0xb78
  451138:	bl	402440 <strncmp@plt>
  45113c:	cbnz	w0, 44ee30 <_obstack_memory_used@@Base+0x7ec4>
  451140:	ldr	x2, [x20, #16]
  451144:	mov	w1, w21
  451148:	mov	x0, x19
  45114c:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  451150:	mov	x0, x19
  451154:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x11094>
  451158:	mov	x2, #0x2                   	// #2
  45115c:	add	x1, x1, #0xf48
  451160:	bl	449740 <_obstack_memory_used@@Base+0x27d4>
  451164:	b	44eef0 <_obstack_memory_used@@Base+0x7f84>
  451168:	cmp	x1, #0xff
  45116c:	b.ne	451194 <_obstack_memory_used@@Base+0xa228>  // b.any
  451170:	ldp	x3, x2, [x19, #272]
  451174:	strb	wzr, [x19, #255]
  451178:	mov	x0, x19
  45117c:	blr	x3
  451180:	str	xzr, [x19, #256]
  451184:	ldr	x0, [x19, #320]
  451188:	mov	x1, #0x0                   	// #0
  45118c:	add	x0, x0, #0x1
  451190:	str	x0, [x19, #320]
  451194:	add	x0, x1, #0x1
  451198:	str	x0, [x19, #256]
  45119c:	mov	w2, #0x20                  	// #32
  4511a0:	strb	w2, [x19, x1]
  4511a4:	strb	w2, [x19, #264]
  4511a8:	b	450714 <_obstack_memory_used@@Base+0x97a8>
  4511ac:	ldr	x1, [x19, #256]
  4511b0:	cmp	x1, #0xff
  4511b4:	b.ne	4511dc <_obstack_memory_used@@Base+0xa270>  // b.any
  4511b8:	ldp	x3, x2, [x19, #272]
  4511bc:	strb	wzr, [x19, #255]
  4511c0:	mov	x0, x19
  4511c4:	blr	x3
  4511c8:	str	xzr, [x19, #256]
  4511cc:	ldr	x0, [x19, #320]
  4511d0:	mov	x1, #0x0                   	// #0
  4511d4:	add	x0, x0, #0x1
  4511d8:	str	x0, [x19, #320]
  4511dc:	add	x0, x1, #0x1
  4511e0:	str	x0, [x19, #256]
  4511e4:	mov	w2, #0x20                  	// #32
  4511e8:	strb	w2, [x19, x1]
  4511ec:	strb	w2, [x19, #264]
  4511f0:	b	45077c <_obstack_memory_used@@Base+0x9810>
  4511f4:	ldp	x21, x22, [sp, #32]
  4511f8:	ldp	x23, x24, [sp, #48]
  4511fc:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  451200:	ldp	x21, x22, [sp, #32]
  451204:	ldp	x23, x24, [sp, #48]
  451208:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  45120c:	ldp	x21, x22, [sp, #32]
  451210:	ldp	x23, x24, [sp, #48]
  451214:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  451218:	ldp	x21, x22, [sp, #32]
  45121c:	ldp	x23, x24, [sp, #48]
  451220:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  451224:	ldr	x2, [x20, #8]
  451228:	mov	w1, w21
  45122c:	mov	x0, x19
  451230:	bl	452a20 <_obstack_memory_used@@Base+0xbab4>
  451234:	mov	x0, x19
  451238:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a094>
  45123c:	mov	x2, #0x3                   	// #3
  451240:	add	x1, x1, #0xfb8
  451244:	bl	449740 <_obstack_memory_used@@Base+0x27d4>
  451248:	ldp	x21, x22, [sp, #32]
  45124c:	ldp	x23, x24, [sp, #48]
  451250:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  451254:	sub	x22, x22, #0x2
  451258:	ldp	x23, x24, [sp, #48]
  45125c:	str	x22, [x19, #256]
  451260:	ldp	x21, x22, [sp, #32]
  451264:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  451268:	ldr	x0, [x0, #8]
  45126c:	ldr	w1, [x0, #16]
  451270:	cmp	w1, #0x1
  451274:	b.eq	4515f8 <_obstack_memory_used@@Base+0xa68c>  // b.none
  451278:	ldp	x21, x22, [sp, #32]
  45127c:	ldp	x23, x24, [sp, #48]
  451280:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  451284:	ldr	x1, [x0, #8]
  451288:	ldr	w2, [x1, #16]
  45128c:	cmp	w2, #0x1
  451290:	b.ne	44f098 <_obstack_memory_used@@Base+0x812c>  // b.any
  451294:	ldr	x1, [x1, #8]
  451298:	ldrb	w1, [x1]
  45129c:	cmp	w1, #0x3e
  4512a0:	b.ne	44f098 <_obstack_memory_used@@Base+0x812c>  // b.any
  4512a4:	ldr	x1, [x19, #256]
  4512a8:	cmp	x1, #0xff
  4512ac:	b.ne	4512d4 <_obstack_memory_used@@Base+0xa368>  // b.any
  4512b0:	ldp	x3, x2, [x19, #272]
  4512b4:	strb	wzr, [x19, #255]
  4512b8:	mov	x0, x19
  4512bc:	blr	x3
  4512c0:	str	xzr, [x19, #256]
  4512c4:	ldr	x0, [x19, #320]
  4512c8:	mov	x1, #0x0                   	// #0
  4512cc:	add	x0, x0, #0x1
  4512d0:	str	x0, [x19, #320]
  4512d4:	add	x0, x1, #0x1
  4512d8:	str	x0, [x19, #256]
  4512dc:	mov	w0, #0x28                  	// #40
  4512e0:	strb	w0, [x19, x1]
  4512e4:	strb	w0, [x19, #264]
  4512e8:	ldr	x0, [x20, #8]
  4512ec:	b	44f098 <_obstack_memory_used@@Base+0x812c>
  4512f0:	ldr	x2, [x2, #8]
  4512f4:	add	x1, x0, #0x8
  4512f8:	ldr	x23, [x19, #288]
  4512fc:	str	x2, [x19, #288]
  451300:	mov	x0, x19
  451304:	bl	44a060 <_obstack_memory_used@@Base+0x30f4>
  451308:	cbz	x0, 451640 <_obstack_memory_used@@Base+0xa6d4>
  45130c:	mov	w22, #0x1                   	// #1
  451310:	b	450f0c <_obstack_memory_used@@Base+0x9fa0>
  451314:	ldr	x25, [x25, #8]
  451318:	cbz	x25, 450d90 <_obstack_memory_used@@Base+0x9e24>
  45131c:	ldr	w5, [x25]
  451320:	b	450c80 <_obstack_memory_used@@Base+0x9d14>
  451324:	ldp	x21, x22, [sp, #32]
  451328:	ldp	x23, x24, [sp, #48]
  45132c:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  451330:	ldp	x21, x22, [sp, #32]
  451334:	ldp	x23, x24, [sp, #48]
  451338:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  45133c:	ldp	x21, x22, [sp, #32]
  451340:	ldp	x23, x24, [sp, #48]
  451344:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  451348:	ldr	x0, [x2, #16]
  45134c:	ldr	w0, [x0]
  451350:	cmp	w0, #0x29
  451354:	b.eq	451360 <_obstack_memory_used@@Base+0xa3f4>  // b.none
  451358:	mov	w0, #0x1                   	// #1
  45135c:	str	w0, [x19, #304]
  451360:	ldr	x2, [x2, #8]
  451364:	mov	w1, w21
  451368:	mov	x0, x19
  45136c:	bl	452a20 <_obstack_memory_used@@Base+0xbab4>
  451370:	b	44f0e0 <_obstack_memory_used@@Base+0x8174>
  451374:	mov	x0, x19
  451378:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  45137c:	mov	x2, #0x4                   	// #4
  451380:	add	x1, x1, #0xdc0
  451384:	bl	449740 <_obstack_memory_used@@Base+0x27d4>
  451388:	ldr	x0, [x22, #8]
  45138c:	cbz	x0, 4513e4 <_obstack_memory_used@@Base+0xa478>
  451390:	mov	w1, w21
  451394:	mov	x2, x22
  451398:	mov	x0, x19
  45139c:	bl	452a20 <_obstack_memory_used@@Base+0xbab4>
  4513a0:	ldr	x1, [x19, #256]
  4513a4:	cmp	x1, #0xff
  4513a8:	b.ne	4513d0 <_obstack_memory_used@@Base+0xa464>  // b.any
  4513ac:	ldp	x3, x2, [x19, #272]
  4513b0:	strb	wzr, [x19, #255]
  4513b4:	mov	x0, x19
  4513b8:	blr	x3
  4513bc:	str	xzr, [x19, #256]
  4513c0:	ldr	x0, [x19, #320]
  4513c4:	mov	x1, #0x0                   	// #0
  4513c8:	add	x0, x0, #0x1
  4513cc:	str	x0, [x19, #320]
  4513d0:	add	x0, x1, #0x1
  4513d4:	str	x0, [x19, #256]
  4513d8:	mov	w0, #0x20                  	// #32
  4513dc:	strb	w0, [x19, x1]
  4513e0:	strb	w0, [x19, #264]
  4513e4:	mov	x2, x23
  4513e8:	mov	w1, w21
  4513ec:	mov	x0, x19
  4513f0:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  4513f4:	cbz	x20, 45158c <_obstack_memory_used@@Base+0xa620>
  4513f8:	mov	w1, w21
  4513fc:	mov	x2, x20
  451400:	mov	x0, x19
  451404:	bl	452a20 <_obstack_memory_used@@Base+0xbab4>
  451408:	ldp	x21, x22, [sp, #32]
  45140c:	ldp	x23, x24, [sp, #48]
  451410:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  451414:	ldp	x21, x22, [sp, #32]
  451418:	ldp	x23, x24, [sp, #48]
  45141c:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  451420:	ldp	x21, x22, [sp, #32]
  451424:	ldp	x23, x24, [sp, #48]
  451428:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  45142c:	ldrb	w1, [x0, #1]
  451430:	cmp	w1, #0x6c
  451434:	b.ne	451068 <_obstack_memory_used@@Base+0xa0fc>  // b.any
  451438:	ldrb	w0, [x0, #2]
  45143c:	cbz	w0, 451074 <_obstack_memory_used@@Base+0xa108>
  451440:	b	451068 <_obstack_memory_used@@Base+0xa0fc>
  451444:	ldp	x21, x22, [sp, #32]
  451448:	ldp	x23, x24, [sp, #48]
  45144c:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  451450:	ldp	x21, x22, [sp, #32]
  451454:	ldp	x23, x24, [sp, #48]
  451458:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  45145c:	ldp	x21, x22, [sp, #32]
  451460:	ldp	x23, x24, [sp, #48]
  451464:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  451468:	ldr	x1, [x20, #8]
  45146c:	ldr	w2, [x1]
  451470:	cmp	w2, #0x1
  451474:	b.ne	450478 <_obstack_memory_used@@Base+0x950c>  // b.any
  451478:	ldr	x2, [x20, #16]
  45147c:	ldr	w2, [x2]
  451480:	cmp	w2, #0x29
  451484:	csel	x20, x20, x1, ne  // ne = any
  451488:	b	450478 <_obstack_memory_used@@Base+0x950c>
  45148c:	ldr	w1, [x19, #348]
  451490:	cmp	w4, w1
  451494:	b.ge	4514fc <_obstack_memory_used@@Base+0xa590>  // b.tcont
  451498:	sbfiz	x1, x4, #4, #32
  45149c:	add	w2, w4, #0x1
  4514a0:	ldr	x3, [x19, #288]
  4514a4:	str	w2, [x19, #344]
  4514a8:	str	x0, [x5, x1]
  4514ac:	add	x1, x5, w4, sxtw #4
  4514b0:	add	x1, x1, #0x8
  4514b4:	cbz	x3, 451614 <_obstack_memory_used@@Base+0xa6a8>
  4514b8:	ldr	w2, [x19, #360]
  4514bc:	ldr	w6, [x19, #364]
  4514c0:	sbfiz	x5, x2, #4, #32
  4514c4:	b	4514f4 <_obstack_memory_used@@Base+0xa588>
  4514c8:	ldr	x4, [x19, #352]
  4514cc:	add	w2, w2, #0x1
  4514d0:	ldr	x7, [x3, #8]
  4514d4:	add	x4, x4, x5
  4514d8:	str	w2, [x19, #360]
  4514dc:	add	x5, x5, #0x10
  4514e0:	str	x7, [x4, #8]
  4514e4:	str	x4, [x1]
  4514e8:	mov	x1, x4
  4514ec:	ldr	x3, [x3]
  4514f0:	cbz	x3, 451614 <_obstack_memory_used@@Base+0xa6a8>
  4514f4:	cmp	w6, w2
  4514f8:	b.gt	4514c8 <_obstack_memory_used@@Base+0xa55c>
  4514fc:	mov	w0, #0x1                   	// #1
  451500:	ldp	x21, x22, [sp, #32]
  451504:	ldp	x23, x24, [sp, #48]
  451508:	str	w0, [x19, #304]
  45150c:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  451510:	ldr	x2, [x20, #8]
  451514:	mov	w1, w21
  451518:	mov	x0, x19
  45151c:	bl	452a20 <_obstack_memory_used@@Base+0xbab4>
  451520:	mov	x2, x22
  451524:	mov	w1, w21
  451528:	mov	x0, x19
  45152c:	bl	452968 <_obstack_memory_used@@Base+0xb9fc>
  451530:	ldp	x21, x22, [sp, #32]
  451534:	ldp	x23, x24, [sp, #48]
  451538:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  45153c:	ldr	x2, [x20, #16]
  451540:	mov	x0, x19
  451544:	mov	w1, w21
  451548:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  45154c:	str	xzr, [x19, #296]
  451550:	ldr	w0, [sp, #112]
  451554:	cbz	w0, 44e458 <_obstack_memory_used@@Base+0x74ec>
  451558:	ldp	x21, x22, [sp, #32]
  45155c:	ldp	x23, x24, [sp, #48]
  451560:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  451564:	cmp	w22, #0x5
  451568:	b.eq	451714 <_obstack_memory_used@@Base+0xa7a8>  // b.none
  45156c:	mov	x0, x19
  451570:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  451574:	mov	x2, #0x3                   	// #3
  451578:	add	x1, x1, #0xdd8
  45157c:	bl	449740 <_obstack_memory_used@@Base+0x27d4>
  451580:	ldp	x21, x22, [sp, #32]
  451584:	ldp	x23, x24, [sp, #48]
  451588:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  45158c:	ldp	x21, x22, [sp, #32]
  451590:	ldp	x23, x24, [sp, #48]
  451594:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  451598:	cmp	x21, x24
  45159c:	b.ls	44ff00 <_obstack_memory_used@@Base+0x8f94>  // b.plast
  4515a0:	cmp	x2, #0xff
  4515a4:	ccmp	w0, w23, #0x0, ls  // ls = plast
  4515a8:	b.ne	44ff00 <_obstack_memory_used@@Base+0x8f94>  // b.any
  4515ac:	ldr	x1, [x19, #256]
  4515b0:	and	w22, w2, #0xff
  4515b4:	cmp	x1, #0xff
  4515b8:	b.ne	4515e0 <_obstack_memory_used@@Base+0xa674>  // b.any
  4515bc:	ldp	x3, x2, [x19, #272]
  4515c0:	strb	wzr, [x19, #255]
  4515c4:	mov	x0, x19
  4515c8:	blr	x3
  4515cc:	str	xzr, [x19, #256]
  4515d0:	ldr	x0, [x19, #320]
  4515d4:	mov	x1, #0x0                   	// #0
  4515d8:	add	x0, x0, #0x1
  4515dc:	str	x0, [x19, #320]
  4515e0:	add	x0, x1, #0x1
  4515e4:	str	x0, [x19, #256]
  4515e8:	strb	w22, [x19, x1]
  4515ec:	mov	x20, x24
  4515f0:	strb	w22, [x19, #264]
  4515f4:	b	44ff40 <_obstack_memory_used@@Base+0x8fd4>
  4515f8:	ldr	x0, [x0, #8]
  4515fc:	ldrb	w0, [x0]
  451600:	cmp	w0, #0x3e
  451604:	b.eq	451734 <_obstack_memory_used@@Base+0xa7c8>  // b.none
  451608:	ldp	x21, x22, [sp, #32]
  45160c:	ldp	x23, x24, [sp, #48]
  451610:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  451614:	str	xzr, [x1]
  451618:	b	450ef8 <_obstack_memory_used@@Base+0x9f8c>
  45161c:	ldp	x21, x22, [sp, #32]
  451620:	ldp	x23, x24, [sp, #48]
  451624:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  451628:	ldr	w1, [x20]
  45162c:	ldr	x4, [x19, #296]
  451630:	cmp	w1, #0x2f
  451634:	csel	x20, x20, x0, ne  // ne = any
  451638:	b	44dbf0 <_obstack_memory_used@@Base+0x6c84>
  45163c:	cbz	w22, 44da48 <_obstack_memory_used@@Base+0x6adc>
  451640:	ldp	x21, x22, [sp, #32]
  451644:	str	x23, [x19, #288]
  451648:	ldp	x23, x24, [sp, #48]
  45164c:	b	44da50 <_obstack_memory_used@@Base+0x6ae4>
  451650:	ldr	x1, [x19, #256]
  451654:	cmp	x1, #0xff
  451658:	b.ne	451680 <_obstack_memory_used@@Base+0xa714>  // b.any
  45165c:	ldp	x3, x2, [x19, #272]
  451660:	strb	wzr, [x19, #255]
  451664:	mov	x0, x19
  451668:	blr	x3
  45166c:	str	xzr, [x19, #256]
  451670:	ldr	x0, [x19, #320]
  451674:	mov	x1, #0x0                   	// #0
  451678:	add	x0, x0, #0x1
  45167c:	str	x0, [x19, #320]
  451680:	add	x0, x1, #0x1
  451684:	str	x0, [x19, #256]
  451688:	mov	w0, #0x75                  	// #117
  45168c:	strb	w0, [x19, x1]
  451690:	strb	w0, [x19, #264]
  451694:	ldp	x21, x22, [sp, #32]
  451698:	ldp	x23, x24, [sp, #48]
  45169c:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  4516a0:	mov	x0, x19
  4516a4:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  4516a8:	mov	x2, #0x2                   	// #2
  4516ac:	add	x1, x1, #0xdc8
  4516b0:	bl	449740 <_obstack_memory_used@@Base+0x27d4>
  4516b4:	ldp	x21, x22, [sp, #32]
  4516b8:	ldp	x23, x24, [sp, #48]
  4516bc:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  4516c0:	ldr	x1, [x19, #256]
  4516c4:	cmp	x1, #0xff
  4516c8:	b.ne	4516f0 <_obstack_memory_used@@Base+0xa784>  // b.any
  4516cc:	ldp	x3, x2, [x19, #272]
  4516d0:	strb	wzr, [x19, #255]
  4516d4:	mov	x0, x19
  4516d8:	blr	x3
  4516dc:	str	xzr, [x19, #256]
  4516e0:	ldr	x0, [x19, #320]
  4516e4:	mov	x1, #0x0                   	// #0
  4516e8:	add	x0, x0, #0x1
  4516ec:	str	x0, [x19, #320]
  4516f0:	add	x0, x1, #0x1
  4516f4:	str	x0, [x19, #256]
  4516f8:	mov	w0, #0x2d                  	// #45
  4516fc:	strb	w0, [x19, x1]
  451700:	strb	w0, [x19, #264]
  451704:	b	450340 <_obstack_memory_used@@Base+0x93d4>
  451708:	ldp	x21, x22, [sp, #32]
  45170c:	ldp	x23, x24, [sp, #48]
  451710:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  451714:	mov	x0, x19
  451718:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  45171c:	mov	x2, #0x2                   	// #2
  451720:	add	x1, x1, #0xdd0
  451724:	bl	449740 <_obstack_memory_used@@Base+0x27d4>
  451728:	ldp	x21, x22, [sp, #32]
  45172c:	ldp	x23, x24, [sp, #48]
  451730:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  451734:	ldr	x1, [x19, #256]
  451738:	cmp	x1, #0xff
  45173c:	b.ne	451764 <_obstack_memory_used@@Base+0xa7f8>  // b.any
  451740:	ldp	x3, x2, [x19, #272]
  451744:	strb	wzr, [x19, #255]
  451748:	mov	x0, x19
  45174c:	blr	x3
  451750:	str	xzr, [x19, #256]
  451754:	ldr	x0, [x19, #320]
  451758:	mov	x1, #0x0                   	// #0
  45175c:	add	x0, x0, #0x1
  451760:	str	x0, [x19, #320]
  451764:	add	x0, x1, #0x1
  451768:	str	x0, [x19, #256]
  45176c:	mov	w0, #0x29                  	// #41
  451770:	strb	w0, [x19, x1]
  451774:	strb	w0, [x19, #264]
  451778:	ldp	x21, x22, [sp, #32]
  45177c:	ldp	x23, x24, [sp, #48]
  451780:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  451784:	mov	x2, x22
  451788:	mov	w1, w21
  45178c:	mov	x0, x19
  451790:	bl	452968 <_obstack_memory_used@@Base+0xb9fc>
  451794:	b	44f5bc <_obstack_memory_used@@Base+0x8650>
  451798:	ldp	x21, x22, [sp, #32]
  45179c:	ldp	x23, x24, [sp, #48]
  4517a0:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  4517a4:	mov	x0, x19
  4517a8:	adrp	x1, 461000 <_obstack_memory_used@@Base+0x1a094>
  4517ac:	mov	x2, #0x5                   	// #5
  4517b0:	add	x1, x1, #0x7a8
  4517b4:	bl	449740 <_obstack_memory_used@@Base+0x27d4>
  4517b8:	ldp	x21, x22, [sp, #32]
  4517bc:	ldp	x23, x24, [sp, #48]
  4517c0:	b	44da1c <_obstack_memory_used@@Base+0x6ab0>
  4517c4:	nop
  4517c8:	stp	x29, x30, [sp, #-48]!
  4517cc:	mov	x29, sp
  4517d0:	stp	x19, x20, [sp, #16]
  4517d4:	mov	x20, x0
  4517d8:	cbz	x2, 451848 <_obstack_memory_used@@Base+0xa8dc>
  4517dc:	ldr	w3, [x2, #4]
  4517e0:	mov	x19, x2
  4517e4:	cmp	w3, #0x1
  4517e8:	b.gt	451848 <_obstack_memory_used@@Base+0xa8dc>
  4517ec:	ldr	w4, [x0, #308]
  4517f0:	cmp	w4, #0x400
  4517f4:	b.gt	451848 <_obstack_memory_used@@Base+0xa8dc>
  4517f8:	add	w3, w3, #0x1
  4517fc:	add	w4, w4, #0x1
  451800:	str	w3, [x2, #4]
  451804:	add	x3, sp, #0x20
  451808:	str	w4, [x0, #308]
  45180c:	ldr	x4, [x0, #328]
  451810:	str	x3, [x0, #328]
  451814:	stp	x2, x4, [sp, #32]
  451818:	bl	44d9b8 <_obstack_memory_used@@Base+0x6a4c>
  45181c:	ldr	w1, [x19, #4]
  451820:	ldr	x0, [sp, #40]
  451824:	str	x0, [x20, #328]
  451828:	ldr	w0, [x20, #308]
  45182c:	sub	w1, w1, #0x1
  451830:	str	w1, [x19, #4]
  451834:	sub	w0, w0, #0x1
  451838:	str	w0, [x20, #308]
  45183c:	ldp	x19, x20, [sp, #16]
  451840:	ldp	x29, x30, [sp], #48
  451844:	ret
  451848:	mov	w0, #0x1                   	// #1
  45184c:	str	w0, [x20, #304]
  451850:	ldp	x19, x20, [sp, #16]
  451854:	ldp	x29, x30, [sp], #48
  451858:	ret
  45185c:	nop
  451860:	stp	x29, x30, [sp, #-64]!
  451864:	mov	x29, sp
  451868:	stp	x19, x20, [sp, #16]
  45186c:	mov	x19, x0
  451870:	ldr	w0, [x2]
  451874:	stp	x21, x22, [sp, #32]
  451878:	mov	x20, x2
  45187c:	sub	w0, w0, #0x3
  451880:	mov	w21, w1
  451884:	cmp	w0, #0x4d
  451888:	b.ls	4518a8 <_obstack_memory_used@@Base+0xa93c>  // b.plast
  45188c:	mov	x2, x20
  451890:	mov	w1, w21
  451894:	mov	x0, x19
  451898:	ldp	x19, x20, [sp, #16]
  45189c:	ldp	x21, x22, [sp, #32]
  4518a0:	ldp	x29, x30, [sp], #64
  4518a4:	b	4517c8 <_obstack_memory_used@@Base+0xa85c>
  4518a8:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x20094>
  4518ac:	add	x1, x1, #0x178
  4518b0:	ldrh	w0, [x1, w0, uxtw #1]
  4518b4:	adr	x1, 4518c0 <_obstack_memory_used@@Base+0xa954>
  4518b8:	add	x0, x1, w0, sxth #2
  4518bc:	br	x0
  4518c0:	adrp	x20, 465000 <_obstack_memory_used@@Base+0x1e094>
  4518c4:	add	x20, x20, #0xe90
  4518c8:	add	x22, x20, #0x9
  4518cc:	mov	w21, #0x20                  	// #32
  4518d0:	ldr	x1, [x19, #256]
  4518d4:	b	4518fc <_obstack_memory_used@@Base+0xa990>
  4518d8:	mov	x0, x1
  4518dc:	add	x1, x1, #0x1
  4518e0:	str	x1, [x19, #256]
  4518e4:	add	x20, x20, #0x1
  4518e8:	strb	w21, [x19, x0]
  4518ec:	cmp	x22, x20
  4518f0:	strb	w21, [x19, #264]
  4518f4:	b.eq	451ab4 <_obstack_memory_used@@Base+0xab48>  // b.none
  4518f8:	ldrb	w21, [x20]
  4518fc:	cmp	x1, #0xff
  451900:	b.ne	4518d8 <_obstack_memory_used@@Base+0xa96c>  // b.any
  451904:	ldp	x3, x2, [x19, #272]
  451908:	strb	wzr, [x19, #255]
  45190c:	mov	x0, x19
  451910:	blr	x3
  451914:	ldr	x2, [x19, #320]
  451918:	mov	x1, #0x1                   	// #1
  45191c:	mov	x0, #0x0                   	// #0
  451920:	add	x2, x2, x1
  451924:	str	x2, [x19, #320]
  451928:	b	4518e0 <_obstack_memory_used@@Base+0xa974>
  45192c:	adrp	x20, 465000 <_obstack_memory_used@@Base+0x1e094>
  451930:	add	x20, x20, #0xea0
  451934:	add	x22, x20, #0x9
  451938:	mov	w21, #0x20                  	// #32
  45193c:	ldr	x1, [x19, #256]
  451940:	b	451968 <_obstack_memory_used@@Base+0xa9fc>
  451944:	mov	x0, x1
  451948:	add	x1, x1, #0x1
  45194c:	str	x1, [x19, #256]
  451950:	add	x20, x20, #0x1
  451954:	strb	w21, [x19, x0]
  451958:	cmp	x20, x22
  45195c:	strb	w21, [x19, #264]
  451960:	b.eq	451ab4 <_obstack_memory_used@@Base+0xab48>  // b.none
  451964:	ldrb	w21, [x20]
  451968:	cmp	x1, #0xff
  45196c:	b.ne	451944 <_obstack_memory_used@@Base+0xa9d8>  // b.any
  451970:	ldp	x3, x2, [x19, #272]
  451974:	strb	wzr, [x19, #255]
  451978:	mov	x0, x19
  45197c:	blr	x3
  451980:	ldr	x2, [x19, #320]
  451984:	mov	x1, #0x1                   	// #1
  451988:	mov	x0, #0x0                   	// #0
  45198c:	add	x2, x2, x1
  451990:	str	x2, [x19, #320]
  451994:	b	45194c <_obstack_memory_used@@Base+0xa9e0>
  451998:	adrp	x20, 465000 <_obstack_memory_used@@Base+0x1e094>
  45199c:	add	x20, x20, #0xeb0
  4519a0:	add	x22, x20, #0x6
  4519a4:	mov	w21, #0x20                  	// #32
  4519a8:	ldr	x1, [x19, #256]
  4519ac:	b	4519d4 <_obstack_memory_used@@Base+0xaa68>
  4519b0:	mov	x0, x1
  4519b4:	add	x1, x1, #0x1
  4519b8:	str	x1, [x19, #256]
  4519bc:	add	x20, x20, #0x1
  4519c0:	strb	w21, [x19, x0]
  4519c4:	cmp	x22, x20
  4519c8:	strb	w21, [x19, #264]
  4519cc:	b.eq	451ab4 <_obstack_memory_used@@Base+0xab48>  // b.none
  4519d0:	ldrb	w21, [x20]
  4519d4:	cmp	x1, #0xff
  4519d8:	b.ne	4519b0 <_obstack_memory_used@@Base+0xaa44>  // b.any
  4519dc:	ldp	x3, x2, [x19, #272]
  4519e0:	strb	wzr, [x19, #255]
  4519e4:	mov	x0, x19
  4519e8:	blr	x3
  4519ec:	ldr	x2, [x19, #320]
  4519f0:	mov	x1, #0x1                   	// #1
  4519f4:	mov	x0, #0x0                   	// #0
  4519f8:	add	x2, x2, x1
  4519fc:	str	x2, [x19, #320]
  451a00:	b	4519b8 <_obstack_memory_used@@Base+0xaa4c>
  451a04:	ldr	x2, [x2, #8]
  451a08:	b	451890 <_obstack_memory_used@@Base+0xa924>
  451a0c:	ldr	x0, [x19, #256]
  451a10:	cmp	x0, #0xff
  451a14:	b.eq	451fd0 <_obstack_memory_used@@Base+0xb064>  // b.none
  451a18:	add	x1, x0, #0x1
  451a1c:	str	x1, [x19, #256]
  451a20:	mov	w2, #0x20                  	// #32
  451a24:	strb	w2, [x19, x0]
  451a28:	strb	w2, [x19, #264]
  451a2c:	b	451c1c <_obstack_memory_used@@Base+0xacb0>
  451a30:	ldr	x0, [x19, #256]
  451a34:	add	x1, x0, #0x1
  451a38:	cmp	x0, #0xff
  451a3c:	b.eq	452028 <_obstack_memory_used@@Base+0xb0bc>  // b.none
  451a40:	str	x1, [x19, #256]
  451a44:	mov	w2, #0x20                  	// #32
  451a48:	strb	w2, [x19, x0]
  451a4c:	strb	w2, [x19, #264]
  451a50:	mov	x21, #0x0                   	// #0
  451a54:	mov	w20, #0x26                  	// #38
  451a58:	b	451a78 <_obstack_memory_used@@Base+0xab0c>
  451a5c:	mov	x0, x1
  451a60:	add	x1, x1, #0x1
  451a64:	str	x1, [x19, #256]
  451a68:	strb	w20, [x19, x0]
  451a6c:	strb	w20, [x19, #264]
  451a70:	cbnz	x21, 451ab4 <_obstack_memory_used@@Base+0xab48>
  451a74:	mov	x21, #0x1                   	// #1
  451a78:	cmp	x1, #0xff
  451a7c:	b.ne	451a5c <_obstack_memory_used@@Base+0xaaf0>  // b.any
  451a80:	ldp	x3, x2, [x19, #272]
  451a84:	strb	wzr, [x19, #255]
  451a88:	mov	x0, x19
  451a8c:	blr	x3
  451a90:	ldr	x2, [x19, #320]
  451a94:	mov	x0, #0x0                   	// #0
  451a98:	mov	x1, #0x1                   	// #1
  451a9c:	str	x1, [x19, #256]
  451aa0:	add	x2, x2, x1
  451aa4:	str	x2, [x19, #320]
  451aa8:	strb	w20, [x19, x0]
  451aac:	strb	w20, [x19, #264]
  451ab0:	cbz	x21, 451a74 <_obstack_memory_used@@Base+0xab08>
  451ab4:	ldp	x19, x20, [sp, #16]
  451ab8:	ldp	x21, x22, [sp, #32]
  451abc:	ldp	x29, x30, [sp], #64
  451ac0:	ret
  451ac4:	ldr	x1, [x19, #256]
  451ac8:	add	x0, x1, #0x1
  451acc:	cmp	x1, #0xff
  451ad0:	b.eq	452000 <_obstack_memory_used@@Base+0xb094>  // b.none
  451ad4:	str	x0, [x19, #256]
  451ad8:	mov	w0, #0x20                  	// #32
  451adc:	strb	w0, [x19, x1]
  451ae0:	mov	w1, w21
  451ae4:	strb	w0, [x19, #264]
  451ae8:	mov	x0, x19
  451aec:	ldr	x2, [x20, #16]
  451af0:	ldp	x19, x20, [sp, #16]
  451af4:	ldp	x21, x22, [sp, #32]
  451af8:	ldp	x29, x30, [sp], #64
  451afc:	b	4517c8 <_obstack_memory_used@@Base+0xa85c>
  451b00:	tbnz	w21, #2, 451ab4 <_obstack_memory_used@@Base+0xab48>
  451b04:	ldr	x1, [x19, #256]
  451b08:	add	x0, x1, #0x1
  451b0c:	cmp	x1, #0xff
  451b10:	b.ne	451b38 <_obstack_memory_used@@Base+0xabcc>  // b.any
  451b14:	ldp	x3, x2, [x19, #272]
  451b18:	strb	wzr, [x19, #255]
  451b1c:	mov	x0, x19
  451b20:	blr	x3
  451b24:	ldr	x2, [x19, #320]
  451b28:	mov	x0, #0x1                   	// #1
  451b2c:	mov	x1, #0x0                   	// #0
  451b30:	add	x2, x2, x0
  451b34:	str	x2, [x19, #320]
  451b38:	str	x0, [x19, #256]
  451b3c:	mov	w0, #0x2a                  	// #42
  451b40:	strb	w0, [x19, x1]
  451b44:	strb	w0, [x19, #264]
  451b48:	b	451ab4 <_obstack_memory_used@@Base+0xab48>
  451b4c:	ldrb	w0, [x19, #264]
  451b50:	cmp	w0, #0x28
  451b54:	b.eq	451b9c <_obstack_memory_used@@Base+0xac30>  // b.none
  451b58:	ldr	x1, [x19, #256]
  451b5c:	add	x0, x1, #0x1
  451b60:	cmp	x1, #0xff
  451b64:	b.ne	451b8c <_obstack_memory_used@@Base+0xac20>  // b.any
  451b68:	ldp	x3, x2, [x19, #272]
  451b6c:	strb	wzr, [x19, #255]
  451b70:	mov	x0, x19
  451b74:	blr	x3
  451b78:	ldr	x2, [x19, #320]
  451b7c:	mov	x0, #0x1                   	// #1
  451b80:	mov	x1, #0x0                   	// #0
  451b84:	add	x2, x2, x0
  451b88:	str	x2, [x19, #320]
  451b8c:	str	x0, [x19, #256]
  451b90:	mov	w0, #0x20                  	// #32
  451b94:	strb	w0, [x19, x1]
  451b98:	strb	w0, [x19, #264]
  451b9c:	ldr	x2, [x20, #8]
  451ba0:	mov	w1, w21
  451ba4:	mov	x0, x19
  451ba8:	adrp	x20, 465000 <_obstack_memory_used@@Base+0x1e094>
  451bac:	add	x20, x20, #0xf08
  451bb0:	mov	w21, #0x3a                  	// #58
  451bb4:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  451bb8:	add	x22, x20, #0x3
  451bbc:	ldr	x1, [x19, #256]
  451bc0:	b	451be8 <_obstack_memory_used@@Base+0xac7c>
  451bc4:	mov	x0, x1
  451bc8:	add	x1, x1, #0x1
  451bcc:	str	x1, [x19, #256]
  451bd0:	add	x20, x20, #0x1
  451bd4:	strb	w21, [x19, x0]
  451bd8:	cmp	x22, x20
  451bdc:	strb	w21, [x19, #264]
  451be0:	b.eq	451ab4 <_obstack_memory_used@@Base+0xab48>  // b.none
  451be4:	ldrb	w21, [x20]
  451be8:	cmp	x1, #0xff
  451bec:	b.ne	451bc4 <_obstack_memory_used@@Base+0xac58>  // b.any
  451bf0:	ldp	x3, x2, [x19, #272]
  451bf4:	strb	wzr, [x19, #255]
  451bf8:	mov	x0, x19
  451bfc:	blr	x3
  451c00:	ldr	x2, [x19, #320]
  451c04:	mov	x1, #0x1                   	// #1
  451c08:	mov	x0, #0x0                   	// #0
  451c0c:	add	x2, x2, x1
  451c10:	str	x2, [x19, #320]
  451c14:	b	451bcc <_obstack_memory_used@@Base+0xac60>
  451c18:	ldr	x1, [x19, #256]
  451c1c:	cmp	x1, #0xff
  451c20:	b.eq	451fa8 <_obstack_memory_used@@Base+0xb03c>  // b.none
  451c24:	add	x0, x1, #0x1
  451c28:	str	x0, [x19, #256]
  451c2c:	mov	w0, #0x26                  	// #38
  451c30:	strb	w0, [x19, x1]
  451c34:	strb	w0, [x19, #264]
  451c38:	ldp	x19, x20, [sp, #16]
  451c3c:	ldp	x21, x22, [sp, #32]
  451c40:	ldp	x29, x30, [sp], #64
  451c44:	ret
  451c48:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e094>
  451c4c:	add	x22, x22, #0xee0
  451c50:	stp	x23, x24, [sp, #48]
  451c54:	add	x24, x22, #0x6
  451c58:	mov	w23, #0x20                  	// #32
  451c5c:	ldr	x1, [x19, #256]
  451c60:	b	451c88 <_obstack_memory_used@@Base+0xad1c>
  451c64:	mov	x0, x1
  451c68:	add	x1, x1, #0x1
  451c6c:	str	x1, [x19, #256]
  451c70:	add	x22, x22, #0x1
  451c74:	strb	w23, [x19, x0]
  451c78:	cmp	x24, x22
  451c7c:	strb	w23, [x19, #264]
  451c80:	b.eq	451ef0 <_obstack_memory_used@@Base+0xaf84>  // b.none
  451c84:	ldrb	w23, [x22]
  451c88:	cmp	x1, #0xff
  451c8c:	b.ne	451c64 <_obstack_memory_used@@Base+0xacf8>  // b.any
  451c90:	ldp	x3, x2, [x19, #272]
  451c94:	strb	wzr, [x19, #255]
  451c98:	mov	x0, x19
  451c9c:	blr	x3
  451ca0:	ldr	x2, [x19, #320]
  451ca4:	mov	x1, #0x1                   	// #1
  451ca8:	mov	x0, #0x0                   	// #0
  451cac:	add	x2, x2, x1
  451cb0:	str	x2, [x19, #320]
  451cb4:	b	451c6c <_obstack_memory_used@@Base+0xad00>
  451cb8:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e094>
  451cbc:	add	x22, x22, #0xed0
  451cc0:	stp	x23, x24, [sp, #48]
  451cc4:	add	x24, x22, #0x9
  451cc8:	mov	w23, #0x20                  	// #32
  451ccc:	ldr	x1, [x19, #256]
  451cd0:	b	451cf8 <_obstack_memory_used@@Base+0xad8c>
  451cd4:	mov	x0, x1
  451cd8:	add	x1, x1, #0x1
  451cdc:	str	x1, [x19, #256]
  451ce0:	add	x22, x22, #0x1
  451ce4:	strb	w23, [x19, x0]
  451ce8:	cmp	x22, x24
  451cec:	strb	w23, [x19, #264]
  451cf0:	b.eq	451ef0 <_obstack_memory_used@@Base+0xaf84>  // b.none
  451cf4:	ldrb	w23, [x22]
  451cf8:	cmp	x1, #0xff
  451cfc:	b.ne	451cd4 <_obstack_memory_used@@Base+0xad68>  // b.any
  451d00:	ldp	x3, x2, [x19, #272]
  451d04:	strb	wzr, [x19, #255]
  451d08:	mov	x0, x19
  451d0c:	blr	x3
  451d10:	ldr	x2, [x19, #320]
  451d14:	mov	x1, #0x1                   	// #1
  451d18:	mov	x0, #0x0                   	// #0
  451d1c:	add	x2, x2, x1
  451d20:	str	x2, [x19, #320]
  451d24:	b	451cdc <_obstack_memory_used@@Base+0xad70>
  451d28:	stp	x23, x24, [sp, #48]
  451d2c:	adrp	x24, 465000 <_obstack_memory_used@@Base+0x1e094>
  451d30:	add	x24, x24, #0xf10
  451d34:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e094>
  451d38:	add	x24, x24, #0xa
  451d3c:	add	x22, x22, #0xf11
  451d40:	mov	w23, #0x20                  	// #32
  451d44:	ldr	x1, [x19, #256]
  451d48:	b	451d6c <_obstack_memory_used@@Base+0xae00>
  451d4c:	mov	x0, x1
  451d50:	add	x1, x1, #0x1
  451d54:	str	x1, [x19, #256]
  451d58:	cmp	x22, x24
  451d5c:	strb	w23, [x19, x0]
  451d60:	strb	w23, [x19, #264]
  451d64:	b.eq	451fa0 <_obstack_memory_used@@Base+0xb034>  // b.none
  451d68:	ldrb	w23, [x22], #1
  451d6c:	cmp	x1, #0xff
  451d70:	b.ne	451d4c <_obstack_memory_used@@Base+0xade0>  // b.any
  451d74:	ldp	x3, x2, [x19, #272]
  451d78:	strb	wzr, [x19, #255]
  451d7c:	mov	x0, x19
  451d80:	blr	x3
  451d84:	ldr	x2, [x19, #320]
  451d88:	mov	x1, #0x1                   	// #1
  451d8c:	mov	x0, #0x0                   	// #0
  451d90:	add	x2, x2, x1
  451d94:	str	x2, [x19, #320]
  451d98:	b	451d54 <_obstack_memory_used@@Base+0xade8>
  451d9c:	ldr	x1, [x19, #256]
  451da0:	b	451a50 <_obstack_memory_used@@Base+0xaae4>
  451da4:	adrp	x20, 465000 <_obstack_memory_used@@Base+0x1e094>
  451da8:	add	x20, x20, #0xee8
  451dac:	add	x22, x20, #0x8
  451db0:	mov	w21, #0x63                  	// #99
  451db4:	ldr	x1, [x19, #256]
  451db8:	b	451de0 <_obstack_memory_used@@Base+0xae74>
  451dbc:	mov	x0, x1
  451dc0:	add	x1, x1, #0x1
  451dc4:	str	x1, [x19, #256]
  451dc8:	add	x20, x20, #0x1
  451dcc:	strb	w21, [x19, x0]
  451dd0:	cmp	x22, x20
  451dd4:	strb	w21, [x19, #264]
  451dd8:	b.eq	451ab4 <_obstack_memory_used@@Base+0xab48>  // b.none
  451ddc:	ldrb	w21, [x20]
  451de0:	cmp	x1, #0xff
  451de4:	b.ne	451dbc <_obstack_memory_used@@Base+0xae50>  // b.any
  451de8:	ldp	x3, x2, [x19, #272]
  451dec:	strb	wzr, [x19, #255]
  451df0:	mov	x0, x19
  451df4:	blr	x3
  451df8:	ldr	x2, [x19, #320]
  451dfc:	mov	x1, #0x1                   	// #1
  451e00:	mov	x0, #0x0                   	// #0
  451e04:	add	x2, x2, x1
  451e08:	str	x2, [x19, #320]
  451e0c:	b	451dc4 <_obstack_memory_used@@Base+0xae58>
  451e10:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e094>
  451e14:	add	x22, x22, #0xef8
  451e18:	adrp	x20, 465000 <_obstack_memory_used@@Base+0x1e094>
  451e1c:	add	x22, x22, #0xa
  451e20:	add	x20, x20, #0xef9
  451e24:	mov	w21, #0x69                  	// #105
  451e28:	ldr	x1, [x19, #256]
  451e2c:	b	451e50 <_obstack_memory_used@@Base+0xaee4>
  451e30:	mov	x0, x1
  451e34:	add	x1, x1, #0x1
  451e38:	str	x1, [x19, #256]
  451e3c:	cmp	x20, x22
  451e40:	strb	w21, [x19, x0]
  451e44:	strb	w21, [x19, #264]
  451e48:	b.eq	451ab4 <_obstack_memory_used@@Base+0xab48>  // b.none
  451e4c:	ldrb	w21, [x20], #1
  451e50:	cmp	x1, #0xff
  451e54:	b.ne	451e30 <_obstack_memory_used@@Base+0xaec4>  // b.any
  451e58:	ldp	x3, x2, [x19, #272]
  451e5c:	strb	wzr, [x19, #255]
  451e60:	mov	x0, x19
  451e64:	blr	x3
  451e68:	ldr	x2, [x19, #320]
  451e6c:	mov	x1, #0x1                   	// #1
  451e70:	mov	x0, #0x0                   	// #0
  451e74:	add	x2, x2, x1
  451e78:	str	x2, [x19, #320]
  451e7c:	b	451e38 <_obstack_memory_used@@Base+0xaecc>
  451e80:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e094>
  451e84:	add	x22, x22, #0xeb8
  451e88:	adrp	x20, 465000 <_obstack_memory_used@@Base+0x1e094>
  451e8c:	add	x22, x22, #0x11
  451e90:	add	x20, x20, #0xeb9
  451e94:	mov	w21, #0x20                  	// #32
  451e98:	ldr	x1, [x19, #256]
  451e9c:	b	451ec0 <_obstack_memory_used@@Base+0xaf54>
  451ea0:	mov	x0, x1
  451ea4:	add	x1, x1, #0x1
  451ea8:	str	x1, [x19, #256]
  451eac:	cmp	x22, x20
  451eb0:	strb	w21, [x19, x0]
  451eb4:	strb	w21, [x19, #264]
  451eb8:	b.eq	451ab4 <_obstack_memory_used@@Base+0xab48>  // b.none
  451ebc:	ldrb	w21, [x20], #1
  451ec0:	cmp	x1, #0xff
  451ec4:	b.ne	451ea0 <_obstack_memory_used@@Base+0xaf34>  // b.any
  451ec8:	ldp	x3, x2, [x19, #272]
  451ecc:	strb	wzr, [x19, #255]
  451ed0:	mov	x0, x19
  451ed4:	blr	x3
  451ed8:	ldr	x2, [x19, #320]
  451edc:	mov	x1, #0x1                   	// #1
  451ee0:	mov	x0, #0x0                   	// #0
  451ee4:	add	x2, x2, x1
  451ee8:	str	x2, [x19, #320]
  451eec:	b	451ea8 <_obstack_memory_used@@Base+0xaf3c>
  451ef0:	ldr	x2, [x20, #16]
  451ef4:	cbz	x2, 452054 <_obstack_memory_used@@Base+0xb0e8>
  451ef8:	add	x0, x1, #0x1
  451efc:	cmp	x1, #0xff
  451f00:	b.ne	451f2c <_obstack_memory_used@@Base+0xafc0>  // b.any
  451f04:	ldp	x3, x2, [x19, #272]
  451f08:	strb	wzr, [x19, #255]
  451f0c:	mov	x0, x19
  451f10:	blr	x3
  451f14:	ldr	x3, [x19, #320]
  451f18:	mov	x0, #0x1                   	// #1
  451f1c:	mov	x1, #0x0                   	// #0
  451f20:	add	x3, x3, x0
  451f24:	ldr	x2, [x20, #16]
  451f28:	str	x3, [x19, #320]
  451f2c:	str	x0, [x19, #256]
  451f30:	mov	w0, #0x28                  	// #40
  451f34:	strb	w0, [x19, x1]
  451f38:	strb	w0, [x19, #264]
  451f3c:	mov	w1, w21
  451f40:	mov	x0, x19
  451f44:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  451f48:	ldr	x1, [x19, #256]
  451f4c:	add	x0, x1, #0x1
  451f50:	cmp	x1, #0xff
  451f54:	b.ne	451f7c <_obstack_memory_used@@Base+0xb010>  // b.any
  451f58:	ldp	x3, x2, [x19, #272]
  451f5c:	strb	wzr, [x19, #255]
  451f60:	mov	x0, x19
  451f64:	blr	x3
  451f68:	ldr	x2, [x19, #320]
  451f6c:	mov	x0, #0x1                   	// #1
  451f70:	mov	x1, #0x0                   	// #0
  451f74:	add	x2, x2, x0
  451f78:	str	x2, [x19, #320]
  451f7c:	str	x0, [x19, #256]
  451f80:	mov	w0, #0x29                  	// #41
  451f84:	strb	w0, [x19, x1]
  451f88:	strb	w0, [x19, #264]
  451f8c:	ldp	x19, x20, [sp, #16]
  451f90:	ldp	x21, x22, [sp, #32]
  451f94:	ldp	x23, x24, [sp, #48]
  451f98:	ldp	x29, x30, [sp], #64
  451f9c:	ret
  451fa0:	ldr	x2, [x20, #8]
  451fa4:	b	451f3c <_obstack_memory_used@@Base+0xafd0>
  451fa8:	ldp	x3, x2, [x19, #272]
  451fac:	strb	wzr, [x19, #255]
  451fb0:	mov	x0, x19
  451fb4:	blr	x3
  451fb8:	ldr	x2, [x19, #320]
  451fbc:	mov	x0, #0x1                   	// #1
  451fc0:	mov	x1, #0x0                   	// #0
  451fc4:	add	x2, x2, x0
  451fc8:	str	x2, [x19, #320]
  451fcc:	b	451c28 <_obstack_memory_used@@Base+0xacbc>
  451fd0:	ldp	x3, x2, [x19, #272]
  451fd4:	strb	wzr, [x19, #255]
  451fd8:	mov	x1, x0
  451fdc:	mov	x0, x19
  451fe0:	blr	x3
  451fe4:	ldr	x0, [x19, #320]
  451fe8:	mov	w2, #0x20                  	// #32
  451fec:	mov	x1, #0x1                   	// #1
  451ff0:	strb	w2, [x19]
  451ff4:	add	x0, x0, x1
  451ff8:	str	x0, [x19, #320]
  451ffc:	b	451c24 <_obstack_memory_used@@Base+0xacb8>
  452000:	ldp	x3, x2, [x19, #272]
  452004:	strb	wzr, [x19, #255]
  452008:	mov	x0, x19
  45200c:	blr	x3
  452010:	ldr	x2, [x19, #320]
  452014:	mov	x0, #0x1                   	// #1
  452018:	mov	x1, #0x0                   	// #0
  45201c:	add	x2, x2, x0
  452020:	str	x2, [x19, #320]
  452024:	b	451ad4 <_obstack_memory_used@@Base+0xab68>
  452028:	ldp	x3, x2, [x19, #272]
  45202c:	strb	wzr, [x19, #255]
  452030:	mov	x1, x0
  452034:	mov	x0, x19
  452038:	blr	x3
  45203c:	ldr	x2, [x19, #320]
  452040:	mov	x1, #0x1                   	// #1
  452044:	mov	x0, #0x0                   	// #0
  452048:	add	x2, x2, x1
  45204c:	str	x2, [x19, #320]
  452050:	b	451a40 <_obstack_memory_used@@Base+0xaad4>
  452054:	ldp	x23, x24, [sp, #48]
  452058:	b	451ab4 <_obstack_memory_used@@Base+0xab48>
  45205c:	nop
  452060:	stp	x29, x30, [sp, #-64]!
  452064:	mov	x29, sp
  452068:	stp	x19, x20, [sp, #16]
  45206c:	mov	x19, x0
  452070:	mov	x20, x3
  452074:	stp	x21, x22, [sp, #32]
  452078:	mov	x21, x2
  45207c:	stp	x23, x24, [sp, #48]
  452080:	mov	w23, w1
  452084:	cbz	x3, 4520c8 <_obstack_memory_used@@Base+0xb15c>
  452088:	mov	x2, #0xe000000             	// #234881024
  45208c:	mov	x4, #0x1                   	// #1
  452090:	movk	x2, #0x862, lsl #32
  452094:	ldr	w0, [x3, #16]
  452098:	cbnz	w0, 4520c8 <_obstack_memory_used@@Base+0xb15c>
  45209c:	ldr	x0, [x3, #8]
  4520a0:	ldr	w0, [x0]
  4520a4:	cmp	w0, #0x2b
  4520a8:	b.hi	4520c0 <_obstack_memory_used@@Base+0xb154>  // b.pmore
  4520ac:	lsl	x0, x4, x0
  4520b0:	tst	x0, x2
  4520b4:	b.ne	452190 <_obstack_memory_used@@Base+0xb224>  // b.any
  4520b8:	tst	x0, #0x1c00000000
  4520bc:	b.ne	45225c <_obstack_memory_used@@Base+0xb2f0>  // b.any
  4520c0:	ldr	x3, [x3]
  4520c4:	cbnz	x3, 452094 <_obstack_memory_used@@Base+0xb128>
  4520c8:	ldr	x22, [x19, #296]
  4520cc:	str	xzr, [x19, #296]
  4520d0:	mov	w1, w23
  4520d4:	mov	x2, x20
  4520d8:	mov	x0, x19
  4520dc:	mov	w3, #0x0                   	// #0
  4520e0:	bl	452310 <_obstack_memory_used@@Base+0xb3a4>
  4520e4:	ldr	x1, [x19, #256]
  4520e8:	cmp	x1, #0xff
  4520ec:	b.eq	452220 <_obstack_memory_used@@Base+0xb2b4>  // b.none
  4520f0:	add	x0, x1, #0x1
  4520f4:	str	x0, [x19, #256]
  4520f8:	mov	w2, #0x28                  	// #40
  4520fc:	strb	w2, [x19, x1]
  452100:	strb	w2, [x19, #264]
  452104:	ldr	x2, [x21]
  452108:	cbz	x2, 45211c <_obstack_memory_used@@Base+0xb1b0>
  45210c:	mov	x0, x19
  452110:	mov	w1, w23
  452114:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  452118:	ldr	x0, [x19, #256]
  45211c:	cmp	x0, #0xff
  452120:	b.eq	452164 <_obstack_memory_used@@Base+0xb1f8>  // b.none
  452124:	add	x1, x0, #0x1
  452128:	str	x1, [x19, #256]
  45212c:	mov	w3, #0x29                  	// #41
  452130:	strb	w3, [x19, x0]
  452134:	mov	x2, x20
  452138:	strb	w3, [x19, #264]
  45213c:	mov	w1, w23
  452140:	mov	x0, x19
  452144:	mov	w3, #0x1                   	// #1
  452148:	bl	452310 <_obstack_memory_used@@Base+0xb3a4>
  45214c:	ldp	x23, x24, [sp, #48]
  452150:	str	x22, [x19, #296]
  452154:	ldp	x19, x20, [sp, #16]
  452158:	ldp	x21, x22, [sp, #32]
  45215c:	ldp	x29, x30, [sp], #64
  452160:	ret
  452164:	ldp	x3, x2, [x19, #272]
  452168:	strb	wzr, [x19, #255]
  45216c:	mov	x1, x0
  452170:	mov	x0, x19
  452174:	blr	x3
  452178:	ldr	x2, [x19, #320]
  45217c:	mov	x1, #0x1                   	// #1
  452180:	mov	x0, #0x0                   	// #0
  452184:	add	x2, x2, x1
  452188:	str	x2, [x19, #320]
  45218c:	b	452128 <_obstack_memory_used@@Base+0xb1bc>
  452190:	ldrb	w0, [x19, #264]
  452194:	ldr	x1, [x19, #256]
  452198:	cmp	w0, #0x20
  45219c:	b.eq	4521c0 <_obstack_memory_used@@Base+0xb254>  // b.none
  4521a0:	cmp	x1, #0xff
  4521a4:	b.eq	4522a0 <_obstack_memory_used@@Base+0xb334>  // b.none
  4521a8:	add	x2, x1, #0x1
  4521ac:	str	x2, [x19, #256]
  4521b0:	mov	w0, #0x20                  	// #32
  4521b4:	strb	w0, [x19, x1]
  4521b8:	mov	x1, x2
  4521bc:	strb	w0, [x19, #264]
  4521c0:	cmp	x1, #0xff
  4521c4:	b.eq	452278 <_obstack_memory_used@@Base+0xb30c>  // b.none
  4521c8:	add	x0, x1, #0x1
  4521cc:	str	x0, [x19, #256]
  4521d0:	mov	w24, #0x28                  	// #40
  4521d4:	strb	w24, [x19, x1]
  4521d8:	mov	x0, x19
  4521dc:	strb	w24, [x19, #264]
  4521e0:	mov	x2, x20
  4521e4:	ldr	x22, [x19, #296]
  4521e8:	str	xzr, [x19, #296]
  4521ec:	mov	w1, w23
  4521f0:	mov	w3, #0x0                   	// #0
  4521f4:	bl	452310 <_obstack_memory_used@@Base+0xb3a4>
  4521f8:	ldr	x0, [x19, #256]
  4521fc:	cmp	x0, #0xff
  452200:	b.eq	4522cc <_obstack_memory_used@@Base+0xb360>  // b.none
  452204:	add	x1, x0, #0x1
  452208:	str	x1, [x19, #256]
  45220c:	mov	w2, #0x29                  	// #41
  452210:	strb	w2, [x19, x0]
  452214:	strb	w2, [x19, #264]
  452218:	cmp	x1, #0xff
  45221c:	b.ne	4520f0 <_obstack_memory_used@@Base+0xb184>  // b.any
  452220:	ldp	x3, x2, [x19, #272]
  452224:	strb	wzr, [x19, #255]
  452228:	mov	x0, x19
  45222c:	blr	x3
  452230:	mov	w1, #0x28                  	// #40
  452234:	strb	w1, [x19]
  452238:	strb	w1, [x19, #264]
  45223c:	mov	x0, #0x1                   	// #1
  452240:	ldr	x1, [x19, #320]
  452244:	ldr	x2, [x21]
  452248:	add	x1, x1, x0
  45224c:	str	x0, [x19, #256]
  452250:	str	x1, [x19, #320]
  452254:	cbnz	x2, 45210c <_obstack_memory_used@@Base+0xb1a0>
  452258:	b	452124 <_obstack_memory_used@@Base+0xb1b8>
  45225c:	ldrb	w0, [x19, #264]
  452260:	ldr	x1, [x19, #256]
  452264:	and	w2, w0, #0xfffffffd
  452268:	cmp	w2, #0x28
  45226c:	b.ne	452198 <_obstack_memory_used@@Base+0xb22c>  // b.any
  452270:	cmp	x1, #0xff
  452274:	b.ne	4521c8 <_obstack_memory_used@@Base+0xb25c>  // b.any
  452278:	ldp	x3, x2, [x19, #272]
  45227c:	strb	wzr, [x19, #255]
  452280:	mov	x0, x19
  452284:	blr	x3
  452288:	ldr	x2, [x19, #320]
  45228c:	mov	x0, #0x1                   	// #1
  452290:	mov	x1, #0x0                   	// #0
  452294:	add	x2, x2, x0
  452298:	str	x2, [x19, #320]
  45229c:	b	4521cc <_obstack_memory_used@@Base+0xb260>
  4522a0:	ldp	x3, x2, [x19, #272]
  4522a4:	strb	wzr, [x19, #255]
  4522a8:	mov	x0, x19
  4522ac:	blr	x3
  4522b0:	ldr	x0, [x19, #320]
  4522b4:	mov	w2, #0x20                  	// #32
  4522b8:	mov	x1, #0x1                   	// #1
  4522bc:	strb	w2, [x19]
  4522c0:	add	x0, x0, x1
  4522c4:	str	x0, [x19, #320]
  4522c8:	b	4521c8 <_obstack_memory_used@@Base+0xb25c>
  4522cc:	ldp	x3, x2, [x19, #272]
  4522d0:	strb	wzr, [x19, #255]
  4522d4:	mov	x1, x0
  4522d8:	mov	x0, x19
  4522dc:	blr	x3
  4522e0:	strb	w24, [x19, #264]
  4522e4:	mov	w0, #0x2829                	// #10281
  4522e8:	strh	w0, [x19]
  4522ec:	ldr	x1, [x19, #320]
  4522f0:	mov	x0, #0x2                   	// #2
  4522f4:	ldr	x2, [x21]
  4522f8:	add	x1, x1, #0x1
  4522fc:	str	x0, [x19, #256]
  452300:	str	x1, [x19, #320]
  452304:	cbnz	x2, 45210c <_obstack_memory_used@@Base+0xb1a0>
  452308:	b	452124 <_obstack_memory_used@@Base+0xb1b8>
  45230c:	nop
  452310:	cbz	x2, 45256c <_obstack_memory_used@@Base+0xb600>
  452314:	stp	x29, x30, [sp, #-112]!
  452318:	mov	x29, sp
  45231c:	stp	x23, x24, [sp, #48]
  452320:	mov	x24, #0x1f                  	// #31
  452324:	movk	x24, #0x1a, lsl #48
  452328:	stp	x19, x20, [sp, #16]
  45232c:	mov	w20, w1
  452330:	mov	x19, x2
  452334:	stp	x21, x22, [sp, #32]
  452338:	mov	w21, w3
  45233c:	mov	w22, #0x1                   	// #1
  452340:	stp	x25, x26, [sp, #64]
  452344:	mov	x26, x0
  452348:	mov	x25, #0x1                   	// #1
  45234c:	b	452390 <_obstack_memory_used@@Base+0xb424>
  452350:	ldr	x1, [x19, #24]
  452354:	cmp	w5, #0x29
  452358:	ldr	x23, [x26, #288]
  45235c:	str	w22, [x19, #16]
  452360:	str	x1, [x26, #288]
  452364:	b.eq	4523dc <_obstack_memory_used@@Base+0xb470>  // b.none
  452368:	cmp	w5, #0x2a
  45236c:	b.eq	45240c <_obstack_memory_used@@Base+0xb4a0>  // b.none
  452370:	cmp	w5, #0x2
  452374:	b.eq	45243c <_obstack_memory_used@@Base+0xb4d0>  // b.none
  452378:	mov	w1, w20
  45237c:	mov	x0, x26
  452380:	bl	451860 <_obstack_memory_used@@Base+0xa8f4>
  452384:	str	x23, [x26, #288]
  452388:	ldr	x19, [x19]
  45238c:	cbz	x19, 4523f4 <_obstack_memory_used@@Base+0xb488>
  452390:	ldr	w2, [x26, #304]
  452394:	cbnz	w2, 4523f4 <_obstack_memory_used@@Base+0xb488>
  452398:	ldr	w2, [x19, #16]
  45239c:	cbnz	w2, 452388 <_obstack_memory_used@@Base+0xb41c>
  4523a0:	ldr	x2, [x19, #8]
  4523a4:	ldr	w5, [x2]
  4523a8:	cbnz	w21, 452350 <_obstack_memory_used@@Base+0xb3e4>
  4523ac:	sub	w4, w5, #0x1c
  4523b0:	cmp	w4, #0x34
  4523b4:	b.hi	452350 <_obstack_memory_used@@Base+0xb3e4>  // b.pmore
  4523b8:	lsl	x4, x25, x4
  4523bc:	tst	x4, x24
  4523c0:	b.ne	452388 <_obstack_memory_used@@Base+0xb41c>  // b.any
  4523c4:	ldr	x1, [x19, #24]
  4523c8:	cmp	w5, #0x29
  4523cc:	ldr	x23, [x26, #288]
  4523d0:	str	w22, [x19, #16]
  4523d4:	str	x1, [x26, #288]
  4523d8:	b.ne	452368 <_obstack_memory_used@@Base+0xb3fc>  // b.any
  4523dc:	ldr	x3, [x19]
  4523e0:	add	x2, x2, #0x10
  4523e4:	mov	w1, w20
  4523e8:	mov	x0, x26
  4523ec:	bl	452060 <_obstack_memory_used@@Base+0xb0f4>
  4523f0:	str	x23, [x26, #288]
  4523f4:	ldp	x19, x20, [sp, #16]
  4523f8:	ldp	x21, x22, [sp, #32]
  4523fc:	ldp	x23, x24, [sp, #48]
  452400:	ldp	x25, x26, [sp, #64]
  452404:	ldp	x29, x30, [sp], #112
  452408:	ret
  45240c:	ldr	x3, [x19]
  452410:	mov	w1, w20
  452414:	mov	x0, x26
  452418:	add	x2, x2, #0x8
  45241c:	bl	4526e0 <_obstack_memory_used@@Base+0xb774>
  452420:	str	x23, [x26, #288]
  452424:	ldp	x19, x20, [sp, #16]
  452428:	ldp	x21, x22, [sp, #32]
  45242c:	ldp	x23, x24, [sp, #48]
  452430:	ldp	x25, x26, [sp, #64]
  452434:	ldp	x29, x30, [sp], #112
  452438:	ret
  45243c:	ldr	x2, [x2, #8]
  452440:	mov	w1, w20
  452444:	ldr	x21, [x26, #296]
  452448:	str	xzr, [x26, #296]
  45244c:	mov	x0, x26
  452450:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  452454:	str	x21, [x26, #296]
  452458:	tbz	w20, #2, 452510 <_obstack_memory_used@@Base+0xb5a4>
  45245c:	ldr	x1, [x26, #256]
  452460:	add	x0, x1, #0x1
  452464:	cmp	x1, #0xff
  452468:	b.ne	452490 <_obstack_memory_used@@Base+0xb524>  // b.any
  45246c:	ldp	x3, x2, [x26, #272]
  452470:	strb	wzr, [x26, #255]
  452474:	mov	x0, x26
  452478:	blr	x3
  45247c:	ldr	x2, [x26, #320]
  452480:	mov	x0, #0x1                   	// #1
  452484:	mov	x1, #0x0                   	// #0
  452488:	add	x2, x2, x0
  45248c:	str	x2, [x26, #320]
  452490:	str	x0, [x26, #256]
  452494:	mov	w0, #0x2e                  	// #46
  452498:	strb	w0, [x26, x1]
  45249c:	strb	w0, [x26, #264]
  4524a0:	ldr	x0, [x19, #8]
  4524a4:	ldr	x21, [x0, #16]
  4524a8:	ldr	w2, [x21]
  4524ac:	cmp	w2, #0x47
  4524b0:	b.eq	452570 <_obstack_memory_used@@Base+0xb604>  // b.none
  4524b4:	mov	x1, #0x1f                  	// #31
  4524b8:	mov	x3, #0x1                   	// #1
  4524bc:	movk	x1, #0x1a, lsl #48
  4524c0:	sub	w2, w2, #0x1c
  4524c4:	cmp	w2, #0x34
  4524c8:	b.hi	4524d8 <_obstack_memory_used@@Base+0xb56c>  // b.pmore
  4524cc:	lsl	x2, x3, x2
  4524d0:	tst	x2, x1
  4524d4:	b.ne	452504 <_obstack_memory_used@@Base+0xb598>  // b.any
  4524d8:	mov	x2, x21
  4524dc:	mov	w1, w20
  4524e0:	mov	x0, x26
  4524e4:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  4524e8:	str	x23, [x26, #288]
  4524ec:	ldp	x19, x20, [sp, #16]
  4524f0:	ldp	x21, x22, [sp, #32]
  4524f4:	ldp	x23, x24, [sp, #48]
  4524f8:	ldp	x25, x26, [sp, #64]
  4524fc:	ldp	x29, x30, [sp], #112
  452500:	ret
  452504:	ldr	x21, [x21, #8]
  452508:	ldr	w2, [x21]
  45250c:	b	4524c0 <_obstack_memory_used@@Base+0xb554>
  452510:	mov	x22, #0x0                   	// #0
  452514:	mov	w21, #0x3a                  	// #58
  452518:	ldr	x1, [x26, #256]
  45251c:	b	45253c <_obstack_memory_used@@Base+0xb5d0>
  452520:	mov	x0, x1
  452524:	add	x1, x1, #0x1
  452528:	str	x1, [x26, #256]
  45252c:	strb	w21, [x26, x0]
  452530:	strb	w21, [x26, #264]
  452534:	cbnz	x22, 4524a0 <_obstack_memory_used@@Base+0xb534>
  452538:	mov	x22, #0x1                   	// #1
  45253c:	cmp	x1, #0xff
  452540:	b.ne	452520 <_obstack_memory_used@@Base+0xb5b4>  // b.any
  452544:	ldp	x3, x2, [x26, #272]
  452548:	strb	wzr, [x26, #255]
  45254c:	mov	x0, x26
  452550:	blr	x3
  452554:	ldr	x2, [x26, #320]
  452558:	mov	x1, #0x1                   	// #1
  45255c:	mov	x0, #0x0                   	// #0
  452560:	add	x2, x2, x1
  452564:	str	x2, [x26, #320]
  452568:	b	452528 <_obstack_memory_used@@Base+0xb5bc>
  45256c:	ret
  452570:	adrp	x24, 465000 <_obstack_memory_used@@Base+0x1e094>
  452574:	add	x24, x24, #0xb60
  452578:	adrp	x22, 465000 <_obstack_memory_used@@Base+0x1e094>
  45257c:	add	x24, x24, #0xd
  452580:	add	x22, x22, #0xb61
  452584:	mov	w19, #0x7b                  	// #123
  452588:	ldr	x1, [x26, #256]
  45258c:	b	4525b0 <_obstack_memory_used@@Base+0xb644>
  452590:	mov	x0, x1
  452594:	add	x1, x1, #0x1
  452598:	str	x1, [x26, #256]
  45259c:	cmp	x22, x24
  4525a0:	strb	w19, [x26, x0]
  4525a4:	strb	w19, [x26, #264]
  4525a8:	b.eq	4525e0 <_obstack_memory_used@@Base+0xb674>  // b.none
  4525ac:	ldrb	w19, [x22], #1
  4525b0:	cmp	x1, #0xff
  4525b4:	b.ne	452590 <_obstack_memory_used@@Base+0xb624>  // b.any
  4525b8:	ldp	x3, x2, [x26, #272]
  4525bc:	strb	wzr, [x26, #255]
  4525c0:	mov	x0, x26
  4525c4:	blr	x3
  4525c8:	ldr	x2, [x26, #320]
  4525cc:	mov	x1, #0x1                   	// #1
  4525d0:	mov	x0, #0x0                   	// #0
  4525d4:	add	x2, x2, x1
  4525d8:	str	x2, [x26, #320]
  4525dc:	b	452598 <_obstack_memory_used@@Base+0xb62c>
  4525e0:	ldr	w2, [x21, #16]
  4525e4:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x12094>
  4525e8:	add	x1, x1, #0x40
  4525ec:	add	x19, sp, #0x50
  4525f0:	add	w2, w2, #0x1
  4525f4:	mov	x0, x19
  4525f8:	bl	402350 <sprintf@plt>
  4525fc:	mov	x0, x19
  452600:	bl	4022b0 <strlen@plt>
  452604:	ldr	x1, [x26, #256]
  452608:	cbz	x0, 452668 <_obstack_memory_used@@Base+0xb6fc>
  45260c:	add	x24, x19, x0
  452610:	b	452634 <_obstack_memory_used@@Base+0xb6c8>
  452614:	mov	x0, x1
  452618:	add	x1, x1, #0x1
  45261c:	str	x1, [x26, #256]
  452620:	add	x19, x19, #0x1
  452624:	strb	w22, [x26, x0]
  452628:	cmp	x24, x19
  45262c:	strb	w22, [x26, #264]
  452630:	b.eq	452668 <_obstack_memory_used@@Base+0xb6fc>  // b.none
  452634:	ldrb	w22, [x19]
  452638:	cmp	x1, #0xff
  45263c:	b.ne	452614 <_obstack_memory_used@@Base+0xb6a8>  // b.any
  452640:	ldp	x3, x2, [x26, #272]
  452644:	strb	wzr, [x26, #255]
  452648:	mov	x0, x26
  45264c:	blr	x3
  452650:	ldr	x2, [x26, #320]
  452654:	mov	x1, #0x1                   	// #1
  452658:	mov	x0, #0x0                   	// #0
  45265c:	add	x2, x2, x1
  452660:	str	x2, [x26, #320]
  452664:	b	45261c <_obstack_memory_used@@Base+0xb6b0>
  452668:	adrp	x19, 465000 <_obstack_memory_used@@Base+0x1e094>
  45266c:	add	x19, x19, #0xb70
  452670:	add	x24, x19, #0x3
  452674:	mov	w22, #0x7d                  	// #125
  452678:	b	4526a0 <_obstack_memory_used@@Base+0xb734>
  45267c:	mov	x0, x1
  452680:	add	x1, x1, #0x1
  452684:	str	x1, [x26, #256]
  452688:	add	x19, x19, #0x1
  45268c:	strb	w22, [x26, x0]
  452690:	cmp	x24, x19
  452694:	strb	w22, [x26, #264]
  452698:	b.eq	4526d0 <_obstack_memory_used@@Base+0xb764>  // b.none
  45269c:	ldrb	w22, [x19]
  4526a0:	cmp	x1, #0xff
  4526a4:	b.ne	45267c <_obstack_memory_used@@Base+0xb710>  // b.any
  4526a8:	ldp	x3, x2, [x26, #272]
  4526ac:	strb	wzr, [x26, #255]
  4526b0:	mov	x0, x26
  4526b4:	blr	x3
  4526b8:	ldr	x2, [x26, #320]
  4526bc:	mov	x1, #0x1                   	// #1
  4526c0:	mov	x0, #0x0                   	// #0
  4526c4:	add	x2, x2, x1
  4526c8:	str	x2, [x26, #320]
  4526cc:	b	452684 <_obstack_memory_used@@Base+0xb718>
  4526d0:	ldr	x21, [x21, #8]
  4526d4:	ldr	w2, [x21]
  4526d8:	b	4524b4 <_obstack_memory_used@@Base+0xb548>
  4526dc:	nop
  4526e0:	stp	x29, x30, [sp, #-64]!
  4526e4:	mov	x29, sp
  4526e8:	stp	x19, x20, [sp, #16]
  4526ec:	mov	x19, x0
  4526f0:	mov	x20, x3
  4526f4:	stp	x21, x22, [sp, #32]
  4526f8:	mov	x0, x3
  4526fc:	mov	w21, w1
  452700:	stp	x23, x24, [sp, #48]
  452704:	mov	x22, x2
  452708:	cbz	x3, 452734 <_obstack_memory_used@@Base+0xb7c8>
  45270c:	nop
  452710:	ldr	w4, [x0, #16]
  452714:	cbz	w4, 452820 <_obstack_memory_used@@Base+0xb8b4>
  452718:	ldr	x0, [x0]
  45271c:	cbnz	x0, 452710 <_obstack_memory_used@@Base+0xb7a4>
  452720:	mov	x2, x20
  452724:	mov	w1, w21
  452728:	mov	x0, x19
  45272c:	mov	w3, #0x0                   	// #0
  452730:	bl	452310 <_obstack_memory_used@@Base+0xb3a4>
  452734:	ldr	x23, [x19, #256]
  452738:	cmp	x23, #0xff
  45273c:	b.eq	45284c <_obstack_memory_used@@Base+0xb8e0>  // b.none
  452740:	add	x1, x23, #0x1
  452744:	str	x1, [x19, #256]
  452748:	mov	w0, #0x20                  	// #32
  45274c:	strb	w0, [x19, x23]
  452750:	strb	w0, [x19, #264]
  452754:	cmp	x1, #0xff
  452758:	b.eq	4527e4 <_obstack_memory_used@@Base+0xb878>  // b.none
  45275c:	add	x0, x1, #0x1
  452760:	str	x0, [x19, #256]
  452764:	mov	w2, #0x5b                  	// #91
  452768:	strb	w2, [x19, x1]
  45276c:	strb	w2, [x19, #264]
  452770:	ldr	x2, [x22]
  452774:	cbz	x2, 452788 <_obstack_memory_used@@Base+0xb81c>
  452778:	mov	x0, x19
  45277c:	mov	w1, w21
  452780:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  452784:	ldr	x0, [x19, #256]
  452788:	cmp	x0, #0xff
  45278c:	b.eq	4527b8 <_obstack_memory_used@@Base+0xb84c>  // b.none
  452790:	add	x1, x0, #0x1
  452794:	str	x1, [x19, #256]
  452798:	mov	w1, #0x5d                  	// #93
  45279c:	strb	w1, [x19, x0]
  4527a0:	strb	w1, [x19, #264]
  4527a4:	ldp	x19, x20, [sp, #16]
  4527a8:	ldp	x21, x22, [sp, #32]
  4527ac:	ldp	x23, x24, [sp, #48]
  4527b0:	ldp	x29, x30, [sp], #64
  4527b4:	ret
  4527b8:	ldp	x3, x2, [x19, #272]
  4527bc:	strb	wzr, [x19, #255]
  4527c0:	mov	x1, x0
  4527c4:	mov	x0, x19
  4527c8:	blr	x3
  4527cc:	ldr	x2, [x19, #320]
  4527d0:	mov	x1, #0x1                   	// #1
  4527d4:	mov	x0, #0x0                   	// #0
  4527d8:	add	x2, x2, x1
  4527dc:	str	x2, [x19, #320]
  4527e0:	b	452794 <_obstack_memory_used@@Base+0xb828>
  4527e4:	ldp	x3, x2, [x19, #272]
  4527e8:	strb	wzr, [x19, #255]
  4527ec:	mov	x0, x19
  4527f0:	blr	x3
  4527f4:	mov	w1, #0x5b                  	// #91
  4527f8:	strb	w1, [x19]
  4527fc:	strb	w1, [x19, #264]
  452800:	mov	x0, #0x1                   	// #1
  452804:	ldr	x1, [x19, #320]
  452808:	ldr	x2, [x22]
  45280c:	add	x1, x1, x0
  452810:	str	x0, [x19, #256]
  452814:	str	x1, [x19, #320]
  452818:	cbnz	x2, 452778 <_obstack_memory_used@@Base+0xb80c>
  45281c:	b	452790 <_obstack_memory_used@@Base+0xb824>
  452820:	ldr	x0, [x0, #8]
  452824:	ldr	w0, [x0]
  452828:	cmp	w0, #0x2a
  45282c:	b.ne	452890 <_obstack_memory_used@@Base+0xb924>  // b.any
  452830:	mov	w1, w21
  452834:	mov	x2, x20
  452838:	mov	x0, x19
  45283c:	mov	w3, #0x0                   	// #0
  452840:	bl	452310 <_obstack_memory_used@@Base+0xb3a4>
  452844:	ldr	x1, [x19, #256]
  452848:	b	452754 <_obstack_memory_used@@Base+0xb7e8>
  45284c:	ldp	x3, x2, [x19, #272]
  452850:	strb	wzr, [x19, #255]
  452854:	mov	x1, x23
  452858:	mov	x0, x19
  45285c:	blr	x3
  452860:	mov	w1, #0x5b20                	// #23328
  452864:	mov	w0, #0x5b                  	// #91
  452868:	strh	w1, [x19]
  45286c:	strb	w0, [x19, #264]
  452870:	mov	x0, #0x2                   	// #2
  452874:	ldr	x1, [x19, #320]
  452878:	ldr	x2, [x22]
  45287c:	add	x1, x1, #0x1
  452880:	str	x0, [x19, #256]
  452884:	str	x1, [x19, #320]
  452888:	cbnz	x2, 452778 <_obstack_memory_used@@Base+0xb80c>
  45288c:	b	452790 <_obstack_memory_used@@Base+0xb824>
  452890:	mov	w24, #0x20                  	// #32
  452894:	mov	x23, #0x0                   	// #0
  452898:	ldr	x1, [x19, #256]
  45289c:	b	4528c4 <_obstack_memory_used@@Base+0xb958>
  4528a0:	mov	x0, x1
  4528a4:	add	x1, x1, #0x1
  4528a8:	str	x1, [x19, #256]
  4528ac:	cmp	x23, #0x1
  4528b0:	strb	w24, [x19, x0]
  4528b4:	strb	w24, [x19, #264]
  4528b8:	mov	w24, #0x28                  	// #40
  4528bc:	b.eq	452908 <_obstack_memory_used@@Base+0xb99c>  // b.none
  4528c0:	mov	x23, #0x1                   	// #1
  4528c4:	cmp	x1, #0xff
  4528c8:	b.ne	4528a0 <_obstack_memory_used@@Base+0xb934>  // b.any
  4528cc:	ldp	x3, x2, [x19, #272]
  4528d0:	strb	wzr, [x19, #255]
  4528d4:	mov	x0, x19
  4528d8:	blr	x3
  4528dc:	ldr	x2, [x19, #320]
  4528e0:	mov	x0, #0x0                   	// #0
  4528e4:	mov	x1, #0x1                   	// #1
  4528e8:	str	x1, [x19, #256]
  4528ec:	add	x2, x2, x1
  4528f0:	str	x2, [x19, #320]
  4528f4:	strb	w24, [x19, x0]
  4528f8:	cmp	x23, #0x1
  4528fc:	strb	w24, [x19, #264]
  452900:	mov	w24, #0x28                  	// #40
  452904:	b.ne	4528c0 <_obstack_memory_used@@Base+0xb954>  // b.any
  452908:	mov	w1, w21
  45290c:	mov	x2, x20
  452910:	mov	x0, x19
  452914:	mov	w3, #0x0                   	// #0
  452918:	bl	452310 <_obstack_memory_used@@Base+0xb3a4>
  45291c:	ldr	x1, [x19, #256]
  452920:	cmp	x1, #0xff
  452924:	b.eq	452940 <_obstack_memory_used@@Base+0xb9d4>  // b.none
  452928:	add	x23, x1, #0x1
  45292c:	str	x23, [x19, #256]
  452930:	mov	w0, #0x29                  	// #41
  452934:	strb	w0, [x19, x1]
  452938:	strb	w0, [x19, #264]
  45293c:	b	452738 <_obstack_memory_used@@Base+0xb7cc>
  452940:	ldp	x3, x2, [x19, #272]
  452944:	strb	wzr, [x19, #255]
  452948:	mov	x0, x19
  45294c:	blr	x3
  452950:	ldr	x0, [x19, #320]
  452954:	mov	w1, #0x29                  	// #41
  452958:	strb	w1, [x19]
  45295c:	add	x0, x0, #0x1
  452960:	str	x0, [x19, #320]
  452964:	b	452740 <_obstack_memory_used@@Base+0xb7d4>
  452968:	ldr	w4, [x2]
  45296c:	cmp	w4, #0x32
  452970:	b.eq	452978 <_obstack_memory_used@@Base+0xba0c>  // b.none
  452974:	b	4517c8 <_obstack_memory_used@@Base+0xa85c>
  452978:	stp	x29, x30, [sp, #-48]!
  45297c:	mov	x29, sp
  452980:	stp	x19, x20, [sp, #16]
  452984:	mov	x19, x0
  452988:	ldr	x0, [x2, #8]
  45298c:	stp	x21, x22, [sp, #32]
  452990:	ldrsw	x22, [x0, #16]
  452994:	ldr	x20, [x0, #8]
  452998:	cbz	x22, 452a10 <_obstack_memory_used@@Base+0xbaa4>
  45299c:	add	x22, x20, x22
  4529a0:	ldr	x1, [x19, #256]
  4529a4:	b	4529c8 <_obstack_memory_used@@Base+0xba5c>
  4529a8:	mov	x2, x1
  4529ac:	add	x1, x1, #0x1
  4529b0:	str	x1, [x19, #256]
  4529b4:	add	x20, x20, #0x1
  4529b8:	cmp	x20, x22
  4529bc:	strb	w21, [x19, x2]
  4529c0:	strb	w21, [x19, #264]
  4529c4:	b.eq	452a10 <_obstack_memory_used@@Base+0xbaa4>  // b.none
  4529c8:	ldrb	w21, [x20]
  4529cc:	cmp	x1, #0xff
  4529d0:	b.ne	4529a8 <_obstack_memory_used@@Base+0xba3c>  // b.any
  4529d4:	ldp	x3, x2, [x19, #272]
  4529d8:	strb	wzr, [x19, #255]
  4529dc:	mov	x0, x19
  4529e0:	add	x20, x20, #0x1
  4529e4:	blr	x3
  4529e8:	ldr	x0, [x19, #320]
  4529ec:	mov	x2, #0x0                   	// #0
  4529f0:	mov	x1, #0x1                   	// #1
  4529f4:	str	x1, [x19, #256]
  4529f8:	add	x0, x0, x1
  4529fc:	str	x0, [x19, #320]
  452a00:	strb	w21, [x19, x2]
  452a04:	cmp	x20, x22
  452a08:	strb	w21, [x19, #264]
  452a0c:	b.ne	4529c8 <_obstack_memory_used@@Base+0xba5c>  // b.any
  452a10:	ldp	x19, x20, [sp, #16]
  452a14:	ldp	x21, x22, [sp, #32]
  452a18:	ldp	x29, x30, [sp], #48
  452a1c:	ret
  452a20:	stp	x29, x30, [sp, #-48]!
  452a24:	mov	x29, sp
  452a28:	str	x21, [sp, #32]
  452a2c:	mov	w21, w1
  452a30:	ldr	w1, [x2]
  452a34:	stp	x19, x20, [sp, #16]
  452a38:	mov	x20, x2
  452a3c:	cmp	w1, #0x31
  452a40:	mov	x19, x0
  452a44:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  452a48:	b.ls	452ad8 <_obstack_memory_used@@Base+0xbb6c>  // b.plast
  452a4c:	cmp	w1, #0x6
  452a50:	b.eq	452ad8 <_obstack_memory_used@@Base+0xbb6c>  // b.none
  452a54:	ldr	x1, [x0, #256]
  452a58:	cmp	x1, #0xff
  452a5c:	b.eq	452af4 <_obstack_memory_used@@Base+0xbb88>  // b.none
  452a60:	add	x0, x1, #0x1
  452a64:	str	x0, [x19, #256]
  452a68:	mov	w0, #0x28                  	// #40
  452a6c:	strb	w0, [x19, x1]
  452a70:	mov	x2, x20
  452a74:	strb	w0, [x19, #264]
  452a78:	mov	w1, w21
  452a7c:	mov	x0, x19
  452a80:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  452a84:	ldr	x1, [x19, #256]
  452a88:	add	x0, x1, #0x1
  452a8c:	cmp	x1, #0xff
  452a90:	b.ne	452ab8 <_obstack_memory_used@@Base+0xbb4c>  // b.any
  452a94:	ldp	x3, x2, [x19, #272]
  452a98:	strb	wzr, [x19, #255]
  452a9c:	mov	x0, x19
  452aa0:	blr	x3
  452aa4:	ldr	x2, [x19, #320]
  452aa8:	mov	x0, #0x1                   	// #1
  452aac:	mov	x1, #0x0                   	// #0
  452ab0:	add	x2, x2, x0
  452ab4:	str	x2, [x19, #320]
  452ab8:	str	x0, [x19, #256]
  452abc:	mov	w0, #0x29                  	// #41
  452ac0:	strb	w0, [x19, x1]
  452ac4:	strb	w0, [x19, #264]
  452ac8:	ldp	x19, x20, [sp, #16]
  452acc:	ldr	x21, [sp, #32]
  452ad0:	ldp	x29, x30, [sp], #48
  452ad4:	ret
  452ad8:	mov	x2, x20
  452adc:	mov	w1, w21
  452ae0:	mov	x0, x19
  452ae4:	ldp	x19, x20, [sp, #16]
  452ae8:	ldr	x21, [sp, #32]
  452aec:	ldp	x29, x30, [sp], #48
  452af0:	b	4517c8 <_obstack_memory_used@@Base+0xa85c>
  452af4:	ldp	x3, x2, [x0, #272]
  452af8:	strb	wzr, [x0, #255]
  452afc:	blr	x3
  452b00:	ldr	x2, [x19, #320]
  452b04:	mov	x0, #0x1                   	// #1
  452b08:	mov	x1, #0x0                   	// #0
  452b0c:	add	x2, x2, x0
  452b10:	str	x2, [x19, #320]
  452b14:	b	452a64 <_obstack_memory_used@@Base+0xbaf8>
  452b18:	stp	x29, x30, [sp, #-80]!
  452b1c:	mov	x29, sp
  452b20:	stp	x19, x20, [sp, #16]
  452b24:	mov	x19, x0
  452b28:	ldr	x0, [x2, #8]
  452b2c:	stp	x21, x22, [sp, #32]
  452b30:	mov	w22, w1
  452b34:	ldr	x0, [x0]
  452b38:	ldrb	w1, [x0]
  452b3c:	cmp	w1, #0x66
  452b40:	b.ne	452cd4 <_obstack_memory_used@@Base+0xbd68>  // b.any
  452b44:	ldr	x1, [x3]
  452b48:	stp	x23, x24, [sp, #48]
  452b4c:	stp	x25, x26, [sp, #64]
  452b50:	mov	x25, #0x0                   	// #0
  452b54:	ldp	x23, x26, [x1, #8]
  452b58:	ldr	w1, [x26]
  452b5c:	cmp	w1, #0x3c
  452b60:	b.eq	452d9c <_obstack_memory_used@@Base+0xbe30>  // b.none
  452b64:	ldr	w21, [x19, #316]
  452b68:	mov	w1, #0xffffffff            	// #-1
  452b6c:	str	w1, [x19, #316]
  452b70:	ldrb	w0, [x0, #1]
  452b74:	cmp	w0, #0x6c
  452b78:	b.eq	452dbc <_obstack_memory_used@@Base+0xbe50>  // b.none
  452b7c:	b.hi	452ce8 <_obstack_memory_used@@Base+0xbd7c>  // b.pmore
  452b80:	cmp	w0, #0x4c
  452b84:	b.eq	452b90 <_obstack_memory_used@@Base+0xbc24>  // b.none
  452b88:	cmp	w0, #0x52
  452b8c:	b.ne	452cb4 <_obstack_memory_used@@Base+0xbd48>  // b.any
  452b90:	ldr	x1, [x19, #256]
  452b94:	add	x0, x1, #0x1
  452b98:	cmp	x1, #0xff
  452b9c:	b.eq	452e7c <_obstack_memory_used@@Base+0xbf10>  // b.none
  452ba0:	str	x0, [x19, #256]
  452ba4:	mov	w0, #0x28                  	// #40
  452ba8:	strb	w0, [x19, x1]
  452bac:	mov	x2, x26
  452bb0:	strb	w0, [x19, #264]
  452bb4:	mov	w1, w22
  452bb8:	mov	x0, x19
  452bbc:	adrp	x20, 461000 <_obstack_memory_used@@Base+0x1a094>
  452bc0:	bl	452a20 <_obstack_memory_used@@Base+0xbab4>
  452bc4:	add	x20, x20, #0xfb8
  452bc8:	mov	w1, w22
  452bcc:	mov	x2, x23
  452bd0:	mov	x0, x19
  452bd4:	bl	452968 <_obstack_memory_used@@Base+0xb9fc>
  452bd8:	add	x26, x20, #0x3
  452bdc:	mov	w24, #0x2e                  	// #46
  452be0:	ldr	x1, [x19, #256]
  452be4:	b	452c0c <_obstack_memory_used@@Base+0xbca0>
  452be8:	mov	x0, x1
  452bec:	add	x1, x1, #0x1
  452bf0:	str	x1, [x19, #256]
  452bf4:	add	x20, x20, #0x1
  452bf8:	cmp	x26, x20
  452bfc:	strb	w24, [x19, x0]
  452c00:	strb	w24, [x19, #264]
  452c04:	b.eq	452c50 <_obstack_memory_used@@Base+0xbce4>  // b.none
  452c08:	ldrb	w24, [x20]
  452c0c:	cmp	x1, #0xff
  452c10:	b.ne	452be8 <_obstack_memory_used@@Base+0xbc7c>  // b.any
  452c14:	ldp	x3, x2, [x19, #272]
  452c18:	strb	wzr, [x19, #255]
  452c1c:	mov	x0, x19
  452c20:	add	x20, x20, #0x1
  452c24:	blr	x3
  452c28:	ldr	x2, [x19, #320]
  452c2c:	mov	x0, #0x0                   	// #0
  452c30:	mov	x1, #0x1                   	// #1
  452c34:	str	x1, [x19, #256]
  452c38:	add	x2, x2, x1
  452c3c:	str	x2, [x19, #320]
  452c40:	strb	w24, [x19, x0]
  452c44:	cmp	x26, x20
  452c48:	strb	w24, [x19, #264]
  452c4c:	b.ne	452c08 <_obstack_memory_used@@Base+0xbc9c>  // b.any
  452c50:	mov	x2, x23
  452c54:	mov	w1, w22
  452c58:	mov	x0, x19
  452c5c:	bl	452968 <_obstack_memory_used@@Base+0xb9fc>
  452c60:	mov	x2, x25
  452c64:	mov	w1, w22
  452c68:	mov	x0, x19
  452c6c:	bl	452a20 <_obstack_memory_used@@Base+0xbab4>
  452c70:	ldr	x1, [x19, #256]
  452c74:	add	x0, x1, #0x1
  452c78:	cmp	x1, #0xff
  452c7c:	b.ne	452ca4 <_obstack_memory_used@@Base+0xbd38>  // b.any
  452c80:	ldp	x3, x2, [x19, #272]
  452c84:	strb	wzr, [x19, #255]
  452c88:	mov	x0, x19
  452c8c:	blr	x3
  452c90:	ldr	x2, [x19, #320]
  452c94:	mov	x0, #0x1                   	// #1
  452c98:	mov	x1, #0x0                   	// #0
  452c9c:	add	x2, x2, x0
  452ca0:	str	x2, [x19, #320]
  452ca4:	str	x0, [x19, #256]
  452ca8:	mov	w0, #0x29                  	// #41
  452cac:	strb	w0, [x19, x1]
  452cb0:	strb	w0, [x19, #264]
  452cb4:	ldp	x23, x24, [sp, #48]
  452cb8:	mov	w0, #0x1                   	// #1
  452cbc:	ldp	x25, x26, [sp, #64]
  452cc0:	str	w21, [x19, #316]
  452cc4:	ldp	x19, x20, [sp, #16]
  452cc8:	ldp	x21, x22, [sp, #32]
  452ccc:	ldp	x29, x30, [sp], #80
  452cd0:	ret
  452cd4:	mov	w0, #0x0                   	// #0
  452cd8:	ldp	x19, x20, [sp, #16]
  452cdc:	ldp	x21, x22, [sp, #32]
  452ce0:	ldp	x29, x30, [sp], #80
  452ce4:	ret
  452ce8:	cmp	w0, #0x72
  452cec:	b.ne	452cb4 <_obstack_memory_used@@Base+0xbd48>  // b.any
  452cf0:	ldr	x1, [x19, #256]
  452cf4:	add	x0, x1, #0x1
  452cf8:	cmp	x1, #0xff
  452cfc:	b.eq	452e54 <_obstack_memory_used@@Base+0xbee8>  // b.none
  452d00:	str	x0, [x19, #256]
  452d04:	mov	w0, #0x28                  	// #40
  452d08:	strb	w0, [x19, x1]
  452d0c:	mov	x2, x26
  452d10:	strb	w0, [x19, #264]
  452d14:	mov	w1, w22
  452d18:	mov	x0, x19
  452d1c:	adrp	x20, 465000 <_obstack_memory_used@@Base+0x1e094>
  452d20:	bl	452a20 <_obstack_memory_used@@Base+0xbab4>
  452d24:	add	x20, x20, #0xf28
  452d28:	mov	w1, w22
  452d2c:	mov	x2, x23
  452d30:	mov	x0, x19
  452d34:	bl	452968 <_obstack_memory_used@@Base+0xb9fc>
  452d38:	add	x22, x20, #0x4
  452d3c:	mov	w24, #0x2e                  	// #46
  452d40:	ldr	x1, [x19, #256]
  452d44:	b	452d6c <_obstack_memory_used@@Base+0xbe00>
  452d48:	mov	x0, x1
  452d4c:	add	x1, x1, #0x1
  452d50:	str	x1, [x19, #256]
  452d54:	add	x20, x20, #0x1
  452d58:	strb	w24, [x19, x0]
  452d5c:	cmp	x20, x22
  452d60:	strb	w24, [x19, #264]
  452d64:	b.eq	452cb4 <_obstack_memory_used@@Base+0xbd48>  // b.none
  452d68:	ldrb	w24, [x20]
  452d6c:	cmp	x1, #0xff
  452d70:	b.ne	452d48 <_obstack_memory_used@@Base+0xbddc>  // b.any
  452d74:	ldp	x3, x2, [x19, #272]
  452d78:	strb	wzr, [x19, #255]
  452d7c:	mov	x0, x19
  452d80:	blr	x3
  452d84:	ldr	x2, [x19, #320]
  452d88:	mov	x1, #0x1                   	// #1
  452d8c:	mov	x0, #0x0                   	// #0
  452d90:	add	x2, x2, x1
  452d94:	str	x2, [x19, #320]
  452d98:	b	452d50 <_obstack_memory_used@@Base+0xbde4>
  452d9c:	ldr	w21, [x19, #316]
  452da0:	mov	w1, #0xffffffff            	// #-1
  452da4:	ldr	x25, [x26, #16]
  452da8:	ldr	x26, [x26, #8]
  452dac:	str	w1, [x19, #316]
  452db0:	ldrb	w0, [x0, #1]
  452db4:	cmp	w0, #0x6c
  452db8:	b.ne	452b7c <_obstack_memory_used@@Base+0xbc10>  // b.any
  452dbc:	adrp	x20, 465000 <_obstack_memory_used@@Base+0x1e094>
  452dc0:	add	x20, x20, #0xf20
  452dc4:	add	x25, x20, #0x4
  452dc8:	mov	w24, #0x28                  	// #40
  452dcc:	ldr	x1, [x19, #256]
  452dd0:	b	452df8 <_obstack_memory_used@@Base+0xbe8c>
  452dd4:	mov	x0, x1
  452dd8:	add	x1, x1, #0x1
  452ddc:	str	x1, [x19, #256]
  452de0:	add	x20, x20, #0x1
  452de4:	cmp	x25, x20
  452de8:	strb	w24, [x19, x0]
  452dec:	strb	w24, [x19, #264]
  452df0:	b.eq	452e3c <_obstack_memory_used@@Base+0xbed0>  // b.none
  452df4:	ldrb	w24, [x20]
  452df8:	cmp	x1, #0xff
  452dfc:	b.ne	452dd4 <_obstack_memory_used@@Base+0xbe68>  // b.any
  452e00:	ldp	x3, x2, [x19, #272]
  452e04:	strb	wzr, [x19, #255]
  452e08:	mov	x0, x19
  452e0c:	add	x20, x20, #0x1
  452e10:	blr	x3
  452e14:	ldr	x2, [x19, #320]
  452e18:	mov	x0, #0x0                   	// #0
  452e1c:	mov	x1, #0x1                   	// #1
  452e20:	str	x1, [x19, #256]
  452e24:	add	x2, x2, x1
  452e28:	str	x2, [x19, #320]
  452e2c:	strb	w24, [x19, x0]
  452e30:	cmp	x25, x20
  452e34:	strb	w24, [x19, #264]
  452e38:	b.ne	452df4 <_obstack_memory_used@@Base+0xbe88>  // b.any
  452e3c:	mov	x2, x23
  452e40:	mov	w1, w22
  452e44:	mov	x0, x19
  452e48:	bl	452968 <_obstack_memory_used@@Base+0xb9fc>
  452e4c:	mov	x2, x26
  452e50:	b	452c64 <_obstack_memory_used@@Base+0xbcf8>
  452e54:	ldp	x3, x2, [x19, #272]
  452e58:	strb	wzr, [x19, #255]
  452e5c:	mov	x0, x19
  452e60:	blr	x3
  452e64:	ldr	x2, [x19, #320]
  452e68:	mov	x0, #0x1                   	// #1
  452e6c:	mov	x1, #0x0                   	// #0
  452e70:	add	x2, x2, x0
  452e74:	str	x2, [x19, #320]
  452e78:	b	452d00 <_obstack_memory_used@@Base+0xbd94>
  452e7c:	ldp	x3, x2, [x19, #272]
  452e80:	strb	wzr, [x19, #255]
  452e84:	mov	x0, x19
  452e88:	blr	x3
  452e8c:	ldr	x2, [x19, #320]
  452e90:	mov	x0, #0x1                   	// #1
  452e94:	mov	x1, #0x0                   	// #0
  452e98:	add	x2, x2, x0
  452e9c:	str	x2, [x19, #320]
  452ea0:	b	452ba0 <_obstack_memory_used@@Base+0xbc34>
  452ea4:	nop
  452ea8:	sub	sp, sp, #0x230
  452eac:	stp	x29, x30, [sp]
  452eb0:	mov	x29, sp
  452eb4:	stp	x19, x20, [sp, #16]
  452eb8:	mov	x19, x0
  452ebc:	mov	x20, x1
  452ec0:	stp	x21, x22, [sp, #32]
  452ec4:	mov	x21, x2
  452ec8:	stp	x23, x24, [sp, #48]
  452ecc:	stp	x25, x26, [sp, #64]
  452ed0:	str	x27, [sp, #80]
  452ed4:	ldrb	w24, [x0]
  452ed8:	cmp	w24, #0x5f
  452edc:	b.eq	453088 <_obstack_memory_used@@Base+0xc11c>  // b.none
  452ee0:	adrp	x1, 465000 <_obstack_memory_used@@Base+0x1e094>
  452ee4:	mov	x0, x19
  452ee8:	add	x1, x1, #0xf30
  452eec:	mov	x2, #0x8                   	// #8
  452ef0:	mov	w23, #0x0                   	// #0
  452ef4:	bl	402440 <strncmp@plt>
  452ef8:	cbnz	w0, 452f48 <_obstack_memory_used@@Base+0xbfdc>
  452efc:	ldrb	w0, [x19, #8]
  452f00:	mov	w2, #0x5f                  	// #95
  452f04:	mov	w1, #0x24                  	// #36
  452f08:	cmp	w0, #0x2e
  452f0c:	ccmp	w0, w2, #0x4, ne  // ne = any
  452f10:	ccmp	w0, w1, #0x4, ne  // ne = any
  452f14:	b.ne	452f48 <_obstack_memory_used@@Base+0xbfdc>  // b.any
  452f18:	ldrb	w0, [x19, #9]
  452f1c:	mov	w1, #0x49                  	// #73
  452f20:	cmp	w0, #0x44
  452f24:	ccmp	w0, w1, #0x4, ne  // ne = any
  452f28:	b.ne	452f48 <_obstack_memory_used@@Base+0xbfdc>  // b.any
  452f2c:	ldrb	w1, [x19, #10]
  452f30:	cmp	w1, w2
  452f34:	b.ne	452f48 <_obstack_memory_used@@Base+0xbfdc>  // b.any
  452f38:	cmp	w0, #0x49
  452f3c:	cset	w23, ne  // ne = any
  452f40:	add	w23, w23, #0x2
  452f44:	nop
  452f48:	mov	x0, x19
  452f4c:	bl	4022b0 <strlen@plt>
  452f50:	mov	x3, x0
  452f54:	mov	w1, #0x11                  	// #17
  452f58:	add	x0, x19, x0
  452f5c:	stp	x19, x0, [x29, #96]
  452f60:	lsl	w4, w3, #1
  452f64:	str	w1, [x29, #112]
  452f68:	cmp	w4, #0x800
  452f6c:	str	x19, [x29, #120]
  452f70:	mov	w0, #0x0                   	// #0
  452f74:	stp	wzr, w4, [x29, #136]
  452f78:	stp	wzr, w3, [x29, #152]
  452f7c:	stp	xzr, xzr, [x29, #160]
  452f80:	str	xzr, [x29, #176]
  452f84:	b.hi	453064 <_obstack_memory_used@@Base+0xc0f8>  // b.pmore
  452f88:	mov	x22, sp
  452f8c:	mov	w27, #0x18                  	// #24
  452f90:	sbfiz	x3, x3, #3, #32
  452f94:	cmp	w23, #0x1
  452f98:	add	x3, x3, #0xf
  452f9c:	smsubl	x0, w4, w27, x22
  452fa0:	and	x3, x3, #0xfffffffffffffff0
  452fa4:	mov	sp, x0
  452fa8:	mov	x25, sp
  452fac:	sub	sp, sp, x3
  452fb0:	mov	x0, sp
  452fb4:	str	x25, [x29, #128]
  452fb8:	str	x0, [x29, #144]
  452fbc:	b.eq	4530c8 <_obstack_memory_used@@Base+0xc15c>  // b.none
  452fc0:	sub	w0, w23, #0x2
  452fc4:	cmp	w0, #0x1
  452fc8:	b.hi	45310c <_obstack_memory_used@@Base+0xc1a0>  // b.pmore
  452fcc:	cmp	w23, #0x2
  452fd0:	ldrb	w0, [x19, #11]
  452fd4:	add	x24, x19, #0xb
  452fd8:	str	x24, [x29, #120]
  452fdc:	cset	w1, ne  // ne = any
  452fe0:	cmp	w0, #0x5f
  452fe4:	add	w23, w1, #0x44
  452fe8:	b.eq	45309c <_obstack_memory_used@@Base+0xc130>  // b.none
  452fec:	cmp	w4, #0x0
  452ff0:	b.le	4531f0 <_obstack_memory_used@@Base+0xc284>
  452ff4:	mov	x0, x24
  452ff8:	bl	4022b0 <strlen@plt>
  452ffc:	mov	w1, #0x1                   	// #1
  453000:	str	wzr, [x25, #4]
  453004:	str	w1, [x29, #136]
  453008:	cmp	w0, #0x0
  45300c:	b.le	4531f0 <_obstack_memory_used@@Base+0xc284>
  453010:	add	x26, x29, #0x60
  453014:	str	wzr, [x25]
  453018:	str	x24, [x25, #8]
  45301c:	str	w0, [x25, #16]
  453020:	mov	w1, w23
  453024:	mov	x2, x25
  453028:	mov	x3, #0x0                   	// #0
  45302c:	mov	x0, x26
  453030:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  453034:	mov	x19, x0
  453038:	ldr	x23, [x29, #120]
  45303c:	mov	x0, x23
  453040:	bl	4022b0 <strlen@plt>
  453044:	add	x1, x23, x0
  453048:	str	x1, [x29, #120]
  45304c:	ldrb	w0, [x23, x0]
  453050:	cmp	w0, #0x0
  453054:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  453058:	b.ne	45312c <_obstack_memory_used@@Base+0xc1c0>  // b.any
  45305c:	mov	sp, x22
  453060:	mov	w0, #0x0                   	// #0
  453064:	mov	sp, x29
  453068:	ldp	x29, x30, [sp]
  45306c:	ldp	x19, x20, [sp, #16]
  453070:	ldp	x21, x22, [sp, #32]
  453074:	ldp	x23, x24, [sp, #48]
  453078:	ldp	x25, x26, [sp, #64]
  45307c:	ldr	x27, [sp, #80]
  453080:	add	sp, sp, #0x230
  453084:	ret
  453088:	ldrb	w0, [x0, #1]
  45308c:	mov	w23, #0x1                   	// #1
  453090:	cmp	w0, #0x5a
  453094:	b.ne	452ee0 <_obstack_memory_used@@Base+0xbf74>  // b.any
  453098:	b	452f48 <_obstack_memory_used@@Base+0xbfdc>
  45309c:	ldrb	w0, [x19, #12]
  4530a0:	cmp	w0, #0x5a
  4530a4:	b.ne	452fec <_obstack_memory_used@@Base+0xc080>  // b.any
  4530a8:	add	x26, x29, #0x60
  4530ac:	add	x19, x19, #0xd
  4530b0:	mov	x0, x26
  4530b4:	mov	w1, #0x0                   	// #0
  4530b8:	str	x19, [x29, #120]
  4530bc:	bl	44b340 <_obstack_memory_used@@Base+0x43d4>
  4530c0:	mov	x25, x0
  4530c4:	b	453020 <_obstack_memory_used@@Base+0xc0b4>
  4530c8:	cmp	w24, #0x5f
  4530cc:	b.ne	45305c <_obstack_memory_used@@Base+0xc0f0>  // b.any
  4530d0:	ldrb	w0, [x19, #1]
  4530d4:	cmp	w0, #0x5a
  4530d8:	b.ne	45305c <_obstack_memory_used@@Base+0xc0f0>  // b.any
  4530dc:	add	x26, x29, #0x60
  4530e0:	add	x19, x19, #0x2
  4530e4:	mov	w1, w23
  4530e8:	mov	x0, x26
  4530ec:	str	x19, [x29, #120]
  4530f0:	bl	44b340 <_obstack_memory_used@@Base+0x43d4>
  4530f4:	ldr	w3, [x29, #112]
  4530f8:	mov	x19, x0
  4530fc:	tbnz	w3, #0, 4531fc <_obstack_memory_used@@Base+0xc290>
  453100:	ldr	x0, [x29, #120]
  453104:	ldrb	w0, [x0]
  453108:	b	453050 <_obstack_memory_used@@Base+0xc0e4>
  45310c:	add	x0, x29, #0x60
  453110:	bl	44c088 <_obstack_memory_used@@Base+0x511c>
  453114:	ldr	x3, [x29, #120]
  453118:	mov	x19, x0
  45311c:	ldrb	w0, [x3]
  453120:	cmp	w0, #0x0
  453124:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  453128:	b.eq	45305c <_obstack_memory_used@@Base+0xc0f0>  // b.none
  45312c:	add	x2, x29, #0x208
  453130:	add	x23, x29, #0xb8
  453134:	mov	x0, x23
  453138:	mov	x1, x19
  45313c:	str	xzr, [x29, #440]
  453140:	stp	xzr, xzr, [x2]
  453144:	stp	xzr, xzr, [x2, #16]
  453148:	strb	wzr, [x29, #448]
  45314c:	stp	x20, x21, [x29, #456]
  453150:	stp	xzr, xzr, [x29, #472]
  453154:	stp	xzr, xzr, [x29, #488]
  453158:	stp	xzr, xzr, [x29, #504]
  45315c:	bl	449658 <_obstack_memory_used@@Base+0x26ec>
  453160:	ldr	w0, [x29, #492]
  453164:	cmp	w0, #0x7ff
  453168:	b.gt	453170 <_obstack_memory_used@@Base+0xc204>
  45316c:	str	wzr, [x29, #492]
  453170:	ldr	w3, [x29, #532]
  453174:	mov	w4, #0x1                   	// #1
  453178:	ldr	w6, [x29, #548]
  45317c:	mov	x20, sp
  453180:	cmp	w3, #0x0
  453184:	mov	x2, x19
  453188:	csel	w5, w3, w4, gt
  45318c:	mov	x0, x23
  453190:	mov	w1, #0x11                  	// #17
  453194:	str	xzr, [x29, #552]
  453198:	mul	w3, w3, w6
  45319c:	sub	sp, sp, w5, sxtw #4
  4531a0:	str	w3, [x29, #548]
  4531a4:	mov	x5, sp
  4531a8:	cmp	w3, #0x0
  4531ac:	str	x5, [x29, #520]
  4531b0:	csel	w3, w3, w4, gt
  4531b4:	sub	sp, sp, w3, sxtw #4
  4531b8:	mov	x3, sp
  4531bc:	str	x3, [x29, #536]
  4531c0:	bl	4517c8 <_obstack_memory_used@@Base+0xa85c>
  4531c4:	mov	sp, x20
  4531c8:	ldr	x1, [x29, #440]
  4531cc:	mov	x0, x23
  4531d0:	ldp	x3, x2, [x29, #456]
  4531d4:	strb	wzr, [x23, x1]
  4531d8:	blr	x3
  4531dc:	ldr	w0, [x29, #488]
  4531e0:	mov	sp, x22
  4531e4:	cmp	w0, #0x0
  4531e8:	cset	w0, eq  // eq = none
  4531ec:	b	453064 <_obstack_memory_used@@Base+0xc0f8>
  4531f0:	add	x26, x29, #0x60
  4531f4:	mov	x25, #0x0                   	// #0
  4531f8:	b	453020 <_obstack_memory_used@@Base+0xc0b4>
  4531fc:	ldr	x6, [x29, #120]
  453200:	ldrb	w0, [x6]
  453204:	cmp	w0, #0x2e
  453208:	b.ne	453050 <_obstack_memory_used@@Base+0xc0e4>  // b.any
  45320c:	nop
  453210:	ldrb	w0, [x6, #1]
  453214:	sub	w1, w0, #0x61
  453218:	cmp	w0, #0x5f
  45321c:	and	w1, w1, #0xff
  453220:	ccmp	w1, #0x19, #0x0, ne  // ne = any
  453224:	b.ls	453304 <_obstack_memory_used@@Base+0xc398>  // b.plast
  453228:	sub	w0, w0, #0x30
  45322c:	and	w0, w0, #0xff
  453230:	cmp	w0, #0x9
  453234:	ldrb	w0, [x6]
  453238:	b.hi	453050 <_obstack_memory_used@@Base+0xc0e4>  // b.pmore
  45323c:	mov	x3, x6
  453240:	cmp	w0, #0x2e
  453244:	b.ne	453294 <_obstack_memory_used@@Base+0xc328>  // b.any
  453248:	ldrb	w4, [x3, #1]
  45324c:	sub	w4, w4, #0x30
  453250:	and	w4, w4, #0xff
  453254:	cmp	w4, #0x9
  453258:	b.hi	453294 <_obstack_memory_used@@Base+0xc328>  // b.pmore
  45325c:	ldrb	w4, [x3, #2]
  453260:	add	x3, x3, #0x2
  453264:	sub	w5, w4, #0x30
  453268:	and	w5, w5, #0xff
  45326c:	cmp	w5, #0x9
  453270:	b.hi	45328c <_obstack_memory_used@@Base+0xc320>  // b.pmore
  453274:	nop
  453278:	ldrb	w4, [x3, #1]!
  45327c:	sub	w5, w4, #0x30
  453280:	and	w5, w5, #0xff
  453284:	cmp	w5, #0x9
  453288:	b.ls	453278 <_obstack_memory_used@@Base+0xc30c>  // b.plast
  45328c:	cmp	w4, #0x2e
  453290:	b.eq	453248 <_obstack_memory_used@@Base+0xc2dc>  // b.none
  453294:	ldp	w0, w1, [x29, #136]
  453298:	str	x3, [x29, #120]
  45329c:	sub	x4, x3, x6
  4532a0:	cmp	w0, w1
  4532a4:	b.ge	4532fc <_obstack_memory_used@@Base+0xc390>  // b.tcont
  4532a8:	ldr	x2, [x29, #128]
  4532ac:	smull	x1, w0, w27
  4532b0:	add	w0, w0, #0x1
  4532b4:	cmp	w4, #0x0
  4532b8:	add	x3, x2, x1
  4532bc:	str	wzr, [x3, #4]
  4532c0:	str	w0, [x29, #136]
  4532c4:	b.le	4532fc <_obstack_memory_used@@Base+0xc390>
  4532c8:	str	xzr, [x2, x1]
  4532cc:	str	x6, [x3, #8]
  4532d0:	str	w4, [x3, #16]
  4532d4:	mov	x2, x19
  4532d8:	mov	x0, x26
  4532dc:	mov	w1, #0x4e                  	// #78
  4532e0:	bl	449568 <_obstack_memory_used@@Base+0x25fc>
  4532e4:	ldr	x6, [x29, #120]
  4532e8:	mov	x19, x0
  4532ec:	ldrb	w0, [x6]
  4532f0:	cmp	w0, #0x2e
  4532f4:	b.eq	453210 <_obstack_memory_used@@Base+0xc2a4>  // b.none
  4532f8:	b	453050 <_obstack_memory_used@@Base+0xc0e4>
  4532fc:	mov	x3, #0x0                   	// #0
  453300:	b	4532d4 <_obstack_memory_used@@Base+0xc368>
  453304:	ldrb	w0, [x6, #2]
  453308:	add	x3, x6, #0x2
  45330c:	b	453314 <_obstack_memory_used@@Base+0xc3a8>
  453310:	ldrb	w0, [x3, #1]!
  453314:	sub	w1, w0, #0x61
  453318:	cmp	w0, #0x5f
  45331c:	and	w1, w1, #0xff
  453320:	ccmp	w1, #0x19, #0x0, ne  // ne = any
  453324:	b.ls	453310 <_obstack_memory_used@@Base+0xc3a4>  // b.plast
  453328:	b	453240 <_obstack_memory_used@@Base+0xc2d4>
  45332c:	nop
  453330:	stp	x29, x30, [sp, #-96]!
  453334:	mov	x29, sp
  453338:	stp	x21, x22, [sp, #32]
  45333c:	mov	x21, x3
  453340:	cbz	x0, 453410 <_obstack_memory_used@@Base+0xc4a4>
  453344:	stp	x19, x20, [sp, #16]
  453348:	cmp	x1, #0x0
  45334c:	mov	x19, x1
  453350:	mov	x20, x2
  453354:	ccmp	x2, #0x0, #0x0, ne  // ne = any
  453358:	b.eq	45340c <_obstack_memory_used@@Base+0xc4a0>  // b.none
  45335c:	adrp	x1, 44a000 <_obstack_memory_used@@Base+0x3094>
  453360:	add	x2, sp, #0x40
  453364:	add	x1, x1, #0x170
  453368:	stp	xzr, xzr, [sp, #64]
  45336c:	str	xzr, [sp, #80]
  453370:	str	wzr, [sp, #88]
  453374:	bl	452ea8 <_obstack_memory_used@@Base+0xbf3c>
  453378:	cbz	w0, 453464 <_obstack_memory_used@@Base+0xc4f8>
  45337c:	ldr	w0, [sp, #88]
  453380:	str	x23, [sp, #48]
  453384:	ldr	x22, [sp, #64]
  453388:	cbnz	w0, 4533e8 <_obstack_memory_used@@Base+0xc47c>
  45338c:	ldr	x23, [sp, #80]
  453390:	cbz	x22, 453488 <_obstack_memory_used@@Base+0xc51c>
  453394:	cbz	x19, 453458 <_obstack_memory_used@@Base+0xc4ec>
  453398:	mov	x0, x22
  45339c:	bl	4022b0 <strlen@plt>
  4533a0:	ldr	x1, [x20]
  4533a4:	cmp	x0, x1
  4533a8:	b.cs	453430 <_obstack_memory_used@@Base+0xc4c4>  // b.hs, b.nlast
  4533ac:	add	x2, x0, #0x1
  4533b0:	mov	x1, x22
  4533b4:	mov	x0, x19
  4533b8:	bl	402260 <memcpy@plt>
  4533bc:	mov	x0, x22
  4533c0:	mov	x22, x19
  4533c4:	bl	402690 <free@plt>
  4533c8:	cbz	x21, 453440 <_obstack_memory_used@@Base+0xc4d4>
  4533cc:	ldp	x19, x20, [sp, #16]
  4533d0:	ldr	x23, [sp, #48]
  4533d4:	str	wzr, [x21]
  4533d8:	mov	x0, x22
  4533dc:	ldp	x21, x22, [sp, #32]
  4533e0:	ldp	x29, x30, [sp], #96
  4533e4:	ret
  4533e8:	mov	x23, #0x1                   	// #1
  4533ec:	cbnz	x22, 453394 <_obstack_memory_used@@Base+0xc428>
  4533f0:	cbz	x21, 4534ac <_obstack_memory_used@@Base+0xc540>
  4533f4:	mov	w0, #0xffffffff            	// #-1
  4533f8:	mov	x22, #0x0                   	// #0
  4533fc:	ldp	x19, x20, [sp, #16]
  453400:	ldr	x23, [sp, #48]
  453404:	str	w0, [x21]
  453408:	b	4533d8 <_obstack_memory_used@@Base+0xc46c>
  45340c:	ldp	x19, x20, [sp, #16]
  453410:	cbz	x21, 453474 <_obstack_memory_used@@Base+0xc508>
  453414:	mov	w0, #0xfffffffd            	// #-3
  453418:	str	w0, [x21]
  45341c:	mov	x22, #0x0                   	// #0
  453420:	mov	x0, x22
  453424:	ldp	x21, x22, [sp, #32]
  453428:	ldp	x29, x30, [sp], #96
  45342c:	ret
  453430:	mov	x0, x19
  453434:	bl	402690 <free@plt>
  453438:	str	x23, [x20]
  45343c:	cbnz	x21, 4533cc <_obstack_memory_used@@Base+0xc460>
  453440:	mov	x0, x22
  453444:	ldp	x19, x20, [sp, #16]
  453448:	ldp	x21, x22, [sp, #32]
  45344c:	ldr	x23, [sp, #48]
  453450:	ldp	x29, x30, [sp], #96
  453454:	ret
  453458:	cbz	x20, 4533c8 <_obstack_memory_used@@Base+0xc45c>
  45345c:	str	x23, [x20]
  453460:	b	45343c <_obstack_memory_used@@Base+0xc4d0>
  453464:	ldr	x0, [sp, #64]
  453468:	bl	402690 <free@plt>
  45346c:	cbnz	x21, 453498 <_obstack_memory_used@@Base+0xc52c>
  453470:	ldp	x19, x20, [sp, #16]
  453474:	mov	x22, #0x0                   	// #0
  453478:	mov	x0, x22
  45347c:	ldp	x21, x22, [sp, #32]
  453480:	ldp	x29, x30, [sp], #96
  453484:	ret
  453488:	cbz	x21, 4534ac <_obstack_memory_used@@Base+0xc540>
  45348c:	cmp	x23, #0x1
  453490:	b.eq	4533f4 <_obstack_memory_used@@Base+0xc488>  // b.none
  453494:	ldr	x23, [sp, #48]
  453498:	mov	w0, #0xfffffffe            	// #-2
  45349c:	mov	x22, #0x0                   	// #0
  4534a0:	ldp	x19, x20, [sp, #16]
  4534a4:	str	w0, [x21]
  4534a8:	b	4533d8 <_obstack_memory_used@@Base+0xc46c>
  4534ac:	mov	x22, #0x0                   	// #0
  4534b0:	ldp	x19, x20, [sp, #16]
  4534b4:	ldr	x23, [sp, #48]
  4534b8:	b	453478 <_obstack_memory_used@@Base+0xc50c>
  4534bc:	nop
  4534c0:	cmp	x0, #0x0
  4534c4:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  4534c8:	b.eq	4534ec <_obstack_memory_used@@Base+0xc580>  // b.none
  4534cc:	stp	x29, x30, [sp, #-16]!
  4534d0:	mov	x29, sp
  4534d4:	bl	452ea8 <_obstack_memory_used@@Base+0xbf3c>
  4534d8:	cmp	w0, #0x0
  4534dc:	ldp	x29, x30, [sp], #16
  4534e0:	mov	w0, #0xfffffffe            	// #-2
  4534e4:	csel	w0, wzr, w0, ne  // ne = any
  4534e8:	ret
  4534ec:	mov	w0, #0xfffffffd            	// #-3
  4534f0:	ret
  4534f4:	nop
  4534f8:	stp	x29, x30, [sp, #-16]!
  4534fc:	mov	x29, sp
  453500:	bl	449398 <_obstack_memory_used@@Base+0x242c>
  453504:	ldr	x0, [x0]
  453508:	cbz	x0, 45351c <_obstack_memory_used@@Base+0xc5b0>
  45350c:	ldr	x1, [x0, #80]
  453510:	ldr	x0, [x0]
  453514:	tbz	w1, #0, 45351c <_obstack_memory_used@@Base+0xc5b0>
  453518:	ldur	x0, [x0, #-112]
  45351c:	ldp	x29, x30, [sp], #16
  453520:	ret
  453524:	nop
  453528:	and	w5, w0, #0xff
  45352c:	cmp	w5, #0x50
  453530:	b.eq	453648 <_obstack_memory_used@@Base+0xc6dc>  // b.none
  453534:	and	w4, w5, #0xf
  453538:	cmp	w4, #0x4
  45353c:	b.eq	453558 <_obstack_memory_used@@Base+0xc5ec>  // b.none
  453540:	b.ls	45356c <_obstack_memory_used@@Base+0xc600>  // b.plast
  453544:	cmp	w4, #0xb
  453548:	b.eq	45366c <_obstack_memory_used@@Base+0xc700>  // b.none
  45354c:	b.ls	4535c8 <_obstack_memory_used@@Base+0xc65c>  // b.plast
  453550:	cmp	w4, #0xc
  453554:	b.ne	45367c <_obstack_memory_used@@Base+0xc710>  // b.any
  453558:	mov	x0, x2
  45355c:	ldr	x4, [x0], #8
  453560:	cbnz	x4, 453628 <_obstack_memory_used@@Base+0xc6bc>
  453564:	str	x4, [x3]
  453568:	ret
  45356c:	cmp	w4, #0x2
  453570:	b.eq	45365c <_obstack_memory_used@@Base+0xc6f0>  // b.none
  453574:	b.ls	453590 <_obstack_memory_used@@Base+0xc624>  // b.plast
  453578:	cmp	w4, #0x3
  45357c:	b.ne	45367c <_obstack_memory_used@@Base+0xc710>  // b.any
  453580:	mov	x0, x2
  453584:	ldr	w4, [x0], #4
  453588:	cbz	x4, 453564 <_obstack_memory_used@@Base+0xc5f8>
  45358c:	b	453628 <_obstack_memory_used@@Base+0xc6bc>
  453590:	cbz	w4, 453558 <_obstack_memory_used@@Base+0xc5ec>
  453594:	cmp	w4, #0x1
  453598:	b.ne	45367c <_obstack_memory_used@@Base+0xc710>  // b.any
  45359c:	mov	x0, x2
  4535a0:	mov	x4, #0x0                   	// #0
  4535a4:	mov	w7, #0x0                   	// #0
  4535a8:	ldrb	w8, [x0], #1
  4535ac:	and	x6, x8, #0x7f
  4535b0:	lsl	x6, x6, x7
  4535b4:	add	w7, w7, #0x7
  4535b8:	orr	x4, x4, x6
  4535bc:	tbnz	w8, #7, 4535a8 <_obstack_memory_used@@Base+0xc63c>
  4535c0:	cbz	x4, 453564 <_obstack_memory_used@@Base+0xc5f8>
  4535c4:	b	453628 <_obstack_memory_used@@Base+0xc6bc>
  4535c8:	cmp	w4, #0x9
  4535cc:	b.eq	4535e8 <_obstack_memory_used@@Base+0xc67c>  // b.none
  4535d0:	cmp	w4, #0xa
  4535d4:	b.ne	45367c <_obstack_memory_used@@Base+0xc710>  // b.any
  4535d8:	mov	x0, x2
  4535dc:	ldrsh	x4, [x0], #2
  4535e0:	cbz	x4, 453564 <_obstack_memory_used@@Base+0xc5f8>
  4535e4:	b	453628 <_obstack_memory_used@@Base+0xc6bc>
  4535e8:	mov	x0, x2
  4535ec:	mov	x4, #0x0                   	// #0
  4535f0:	mov	w7, #0x0                   	// #0
  4535f4:	ldrb	w8, [x0], #1
  4535f8:	and	x6, x8, #0x7f
  4535fc:	lsl	x6, x6, x7
  453600:	add	w7, w7, #0x7
  453604:	orr	x4, x4, x6
  453608:	tbnz	w8, #7, 4535f4 <_obstack_memory_used@@Base+0xc688>
  45360c:	cmp	w7, #0x3f
  453610:	b.hi	453560 <_obstack_memory_used@@Base+0xc5f4>  // b.pmore
  453614:	tbz	w8, #6, 453560 <_obstack_memory_used@@Base+0xc5f4>
  453618:	mov	x6, #0xffffffffffffffff    	// #-1
  45361c:	lsl	x7, x6, x7
  453620:	orr	x4, x4, x7
  453624:	nop
  453628:	and	w6, w5, #0x70
  45362c:	cmp	w6, #0x10
  453630:	csel	x1, x2, x1, eq  // eq = none
  453634:	add	x4, x4, x1
  453638:	tbz	w5, #7, 453564 <_obstack_memory_used@@Base+0xc5f8>
  45363c:	ldr	x4, [x4]
  453640:	str	x4, [x3]
  453644:	ret
  453648:	add	x0, x2, #0x7
  45364c:	and	x0, x0, #0xfffffffffffffff8
  453650:	ldr	x4, [x0], #8
  453654:	str	x4, [x3]
  453658:	ret
  45365c:	mov	x0, x2
  453660:	ldrh	w4, [x0], #2
  453664:	cbz	x4, 453564 <_obstack_memory_used@@Base+0xc5f8>
  453668:	b	453628 <_obstack_memory_used@@Base+0xc6bc>
  45366c:	mov	x0, x2
  453670:	ldrsw	x4, [x0], #4
  453674:	cbz	x4, 453564 <_obstack_memory_used@@Base+0xc5f8>
  453678:	b	453628 <_obstack_memory_used@@Base+0xc6bc>
  45367c:	stp	x29, x30, [sp, #-16]!
  453680:	mov	x29, sp
  453684:	bl	402590 <abort@plt>
  453688:	and	w0, w0, #0xff
  45368c:	cmp	w0, #0xff
  453690:	b.eq	4536dc <_obstack_memory_used@@Base+0xc770>  // b.none
  453694:	and	w2, w0, #0x70
  453698:	cmp	w2, #0x30
  45369c:	b.eq	4536f4 <_obstack_memory_used@@Base+0xc788>  // b.none
  4536a0:	b.hi	4536b4 <_obstack_memory_used@@Base+0xc748>  // b.pmore
  4536a4:	cmp	w2, #0x20
  4536a8:	b.ne	4536c4 <_obstack_memory_used@@Base+0xc758>  // b.any
  4536ac:	ldr	x0, [x1, #808]
  4536b0:	ret
  4536b4:	cmp	w2, #0x40
  4536b8:	b.ne	4536e4 <_obstack_memory_used@@Base+0xc778>  // b.any
  4536bc:	ldr	x0, [x1, #824]
  4536c0:	ret
  4536c4:	b.hi	4536d0 <_obstack_memory_used@@Base+0xc764>  // b.pmore
  4536c8:	tst	w0, #0x60
  4536cc:	b.eq	4536dc <_obstack_memory_used@@Base+0xc770>  // b.none
  4536d0:	stp	x29, x30, [sp, #-16]!
  4536d4:	mov	x29, sp
  4536d8:	bl	402590 <abort@plt>
  4536dc:	mov	x0, #0x0                   	// #0
  4536e0:	ret
  4536e4:	cmp	w2, #0x50
  4536e8:	mov	x0, #0x0                   	// #0
  4536ec:	b.ne	4536d0 <_obstack_memory_used@@Base+0xc764>  // b.any
  4536f0:	ret
  4536f4:	ldr	x0, [x1, #816]
  4536f8:	ret
  4536fc:	nop
  453700:	str	xzr, [x3, #1568]
  453704:	cmp	x0, x1
  453708:	b.cs	453e98 <_obstack_memory_used@@Base+0xcf2c>  // b.hs, b.nlast
  45370c:	stp	x29, x30, [sp, #-112]!
  453710:	mov	x29, sp
  453714:	stp	x21, x22, [sp, #32]
  453718:	mov	x21, x2
  45371c:	mov	x22, x1
  453720:	stp	x19, x20, [sp, #16]
  453724:	mov	x20, x3
  453728:	ldr	x2, [x21, #792]
  45372c:	stp	x23, x24, [sp, #48]
  453730:	adrp	x23, 467000 <_obstack_memory_used@@Base+0x20094>
  453734:	ldr	x5, [x21, #832]
  453738:	stp	x25, x26, [sp, #64]
  45373c:	add	x23, x23, #0x214
  453740:	ldr	x1, [x20, #1608]
  453744:	stp	x27, x28, [sp, #80]
  453748:	add	x5, x2, x5, lsr #63
  45374c:	add	x27, x29, #0x68
  453750:	cmp	x1, x5
  453754:	mov	x25, #0x0                   	// #0
  453758:	mov	w24, #0x1                   	// #1
  45375c:	mov	w26, #0x5                   	// #5
  453760:	b.cs	453830 <_obstack_memory_used@@Base+0xc8c4>  // b.hs, b.nlast
  453764:	nop
  453768:	mov	x19, x0
  45376c:	ldrb	w4, [x19], #1
  453770:	and	w5, w4, #0xc0
  453774:	cmp	w5, #0x40
  453778:	b.eq	453d2c <_obstack_memory_used@@Base+0xcdc0>  // b.none
  45377c:	cmp	w5, #0x80
  453780:	b.eq	453d50 <_obstack_memory_used@@Base+0xcde4>  // b.none
  453784:	cmp	w5, #0xc0
  453788:	b.eq	453d40 <_obstack_memory_used@@Base+0xcdd4>  // b.none
  45378c:	cmp	w4, #0x2f
  453790:	b.hi	453ea8 <_obstack_memory_used@@Base+0xcf3c>  // b.pmore
  453794:	ldrh	w2, [x23, w4, uxtw #1]
  453798:	adr	x3, 4537a4 <_obstack_memory_used@@Base+0xc838>
  45379c:	add	x2, x3, w2, sxth #2
  4537a0:	br	x2
  4537a4:	mov	x1, #0x0                   	// #0
  4537a8:	mov	w0, #0x0                   	// #0
  4537ac:	ldrb	w3, [x19], #1
  4537b0:	and	x2, x3, #0x7f
  4537b4:	lsl	x2, x2, x0
  4537b8:	add	w0, w0, #0x7
  4537bc:	orr	x1, x1, x2
  4537c0:	tbnz	w3, #7, 4537ac <_obstack_memory_used@@Base+0xc840>
  4537c4:	mov	x4, #0x0                   	// #0
  4537c8:	mov	w2, #0x0                   	// #0
  4537cc:	nop
  4537d0:	ldrb	w3, [x19], #1
  4537d4:	and	x0, x3, #0x7f
  4537d8:	lsl	x0, x0, x2
  4537dc:	add	w2, w2, #0x7
  4537e0:	orr	x4, x4, x0
  4537e4:	tbnz	w3, #7, 4537d0 <_obstack_memory_used@@Base+0xc864>
  4537e8:	ldr	x0, [x20, #1624]
  4537ec:	cmp	x1, #0x61
  4537f0:	mul	x4, x4, x0
  4537f4:	b.hi	45380c <_obstack_memory_used@@Base+0xc8a0>  // b.pmore
  4537f8:	lsl	x1, x1, #4
  4537fc:	neg	x4, x4
  453800:	add	x0, x20, x1
  453804:	str	w24, [x0, #8]
  453808:	str	x4, [x20, x1]
  45380c:	cmp	x22, x19
  453810:	b.ls	453830 <_obstack_memory_used@@Base+0xc8c4>  // b.plast
  453814:	ldr	x2, [x21, #792]
  453818:	mov	x0, x19
  45381c:	ldr	x5, [x21, #832]
  453820:	ldr	x1, [x20, #1608]
  453824:	add	x5, x2, x5, lsr #63
  453828:	cmp	x1, x5
  45382c:	b.cc	453768 <_obstack_memory_used@@Base+0xc7fc>  // b.lo, b.ul, b.last
  453830:	mov	sp, x29
  453834:	ldp	x19, x20, [sp, #16]
  453838:	ldp	x21, x22, [sp, #32]
  45383c:	ldp	x23, x24, [sp, #48]
  453840:	ldp	x25, x26, [sp, #64]
  453844:	ldp	x27, x28, [sp, #80]
  453848:	ldp	x29, x30, [sp], #112
  45384c:	ret
  453850:	mov	x1, #0x0                   	// #0
  453854:	mov	w0, #0x0                   	// #0
  453858:	ldrb	w3, [x19], #1
  45385c:	and	x2, x3, #0x7f
  453860:	lsl	x2, x2, x0
  453864:	add	w0, w0, #0x7
  453868:	orr	x1, x1, x2
  45386c:	tbnz	w3, #7, 453858 <_obstack_memory_used@@Base+0xc8ec>
  453870:	str	x1, [x21, #848]
  453874:	b	45380c <_obstack_memory_used@@Base+0xc8a0>
  453878:	mov	x1, #0x0                   	// #0
  45387c:	mov	w0, #0x0                   	// #0
  453880:	ldrb	w3, [x19], #1
  453884:	and	x2, x3, #0x7f
  453888:	lsl	x2, x2, x0
  45388c:	add	w0, w0, #0x7
  453890:	orr	x1, x1, x2
  453894:	tbnz	w3, #7, 453880 <_obstack_memory_used@@Base+0xc914>
  453898:	cmp	x1, #0x61
  45389c:	b.hi	4538b0 <_obstack_memory_used@@Base+0xc944>  // b.pmore
  4538a0:	lsl	x1, x1, #4
  4538a4:	add	x0, x20, x1
  4538a8:	str	w26, [x0, #8]
  4538ac:	str	x19, [x20, x1]
  4538b0:	mov	x3, #0x0                   	// #0
  4538b4:	mov	w1, #0x0                   	// #0
  4538b8:	ldrb	w2, [x19], #1
  4538bc:	and	x0, x2, #0x7f
  4538c0:	lsl	x0, x0, x1
  4538c4:	add	w1, w1, #0x7
  4538c8:	orr	x3, x3, x0
  4538cc:	tbnz	w2, #7, 4538b8 <_obstack_memory_used@@Base+0xc94c>
  4538d0:	add	x19, x19, x3
  4538d4:	b	45380c <_obstack_memory_used@@Base+0xc8a0>
  4538d8:	mov	x1, #0x0                   	// #0
  4538dc:	mov	w0, #0x0                   	// #0
  4538e0:	ldrb	w3, [x19], #1
  4538e4:	and	x2, x3, #0x7f
  4538e8:	lsl	x2, x2, x0
  4538ec:	add	w0, w0, #0x7
  4538f0:	orr	x1, x1, x2
  4538f4:	tbnz	w3, #7, 4538e0 <_obstack_memory_used@@Base+0xc974>
  4538f8:	mov	x4, #0x0                   	// #0
  4538fc:	mov	w2, #0x0                   	// #0
  453900:	ldrb	w3, [x19], #1
  453904:	and	x0, x3, #0x7f
  453908:	lsl	x0, x0, x2
  45390c:	add	w2, w2, #0x7
  453910:	orr	x4, x4, x0
  453914:	tbnz	w3, #7, 453900 <_obstack_memory_used@@Base+0xc994>
  453918:	cmp	w2, #0x3f
  45391c:	b.hi	453934 <_obstack_memory_used@@Base+0xc9c8>  // b.pmore
  453920:	mov	x0, #0xffffffffffffffff    	// #-1
  453924:	tst	x3, #0x40
  453928:	lsl	x0, x0, x2
  45392c:	orr	x0, x4, x0
  453930:	csel	x4, x0, x4, ne  // ne = any
  453934:	ldr	x0, [x20, #1624]
  453938:	cmp	x1, #0x61
  45393c:	mul	x4, x4, x0
  453940:	b.hi	45380c <_obstack_memory_used@@Base+0xc8a0>  // b.pmore
  453944:	lsl	x1, x1, #4
  453948:	mov	w2, #0x4                   	// #4
  45394c:	add	x0, x20, x1
  453950:	str	w2, [x0, #8]
  453954:	str	x4, [x20, x1]
  453958:	b	45380c <_obstack_memory_used@@Base+0xc8a0>
  45395c:	mov	x1, #0x0                   	// #0
  453960:	mov	w0, #0x0                   	// #0
  453964:	ldrb	w3, [x19], #1
  453968:	and	x2, x3, #0x7f
  45396c:	lsl	x2, x2, x0
  453970:	add	w0, w0, #0x7
  453974:	orr	x1, x1, x2
  453978:	tbnz	w3, #7, 453964 <_obstack_memory_used@@Base+0xc9f8>
  45397c:	mov	x4, #0x0                   	// #0
  453980:	mov	w2, #0x0                   	// #0
  453984:	nop
  453988:	ldrb	w3, [x19], #1
  45398c:	and	x0, x3, #0x7f
  453990:	lsl	x0, x0, x2
  453994:	add	w2, w2, #0x7
  453998:	orr	x4, x4, x0
  45399c:	tbnz	w3, #7, 453988 <_obstack_memory_used@@Base+0xca1c>
  4539a0:	b	453934 <_obstack_memory_used@@Base+0xc9c8>
  4539a4:	mov	x1, #0x0                   	// #0
  4539a8:	mov	w0, #0x0                   	// #0
  4539ac:	ldrb	w3, [x19], #1
  4539b0:	and	x2, x3, #0x7f
  4539b4:	lsl	x2, x2, x0
  4539b8:	add	w0, w0, #0x7
  4539bc:	orr	x1, x1, x2
  4539c0:	tbnz	w3, #7, 4539ac <_obstack_memory_used@@Base+0xca40>
  4539c4:	cmp	w0, #0x3f
  4539c8:	b.hi	4539e0 <_obstack_memory_used@@Base+0xca74>  // b.pmore
  4539cc:	mov	x2, #0xffffffffffffffff    	// #-1
  4539d0:	tst	x3, #0x40
  4539d4:	lsl	x0, x2, x0
  4539d8:	orr	x0, x1, x0
  4539dc:	csel	x1, x0, x1, ne  // ne = any
  4539e0:	ldr	x0, [x20, #1624]
  4539e4:	mul	x1, x0, x1
  4539e8:	str	x1, [x20, #1576]
  4539ec:	b	45380c <_obstack_memory_used@@Base+0xc8a0>
  4539f0:	mov	x1, #0x0                   	// #0
  4539f4:	mov	w0, #0x0                   	// #0
  4539f8:	ldrb	w3, [x19], #1
  4539fc:	and	x2, x3, #0x7f
  453a00:	lsl	x2, x2, x0
  453a04:	add	w0, w0, #0x7
  453a08:	orr	x1, x1, x2
  453a0c:	tbnz	w3, #7, 4539f8 <_obstack_memory_used@@Base+0xca8c>
  453a10:	mov	x3, #0x0                   	// #0
  453a14:	mov	w2, #0x0                   	// #0
  453a18:	str	x1, [x20, #1584]
  453a1c:	nop
  453a20:	ldrb	w1, [x19], #1
  453a24:	and	x0, x1, #0x7f
  453a28:	lsl	x0, x0, x2
  453a2c:	add	w2, w2, #0x7
  453a30:	orr	x3, x3, x0
  453a34:	tbnz	w1, #7, 453a20 <_obstack_memory_used@@Base+0xcab4>
  453a38:	cmp	w2, #0x3f
  453a3c:	b.hi	453a54 <_obstack_memory_used@@Base+0xcae8>  // b.pmore
  453a40:	mov	x0, #0xffffffffffffffff    	// #-1
  453a44:	tst	x1, #0x40
  453a48:	lsl	x0, x0, x2
  453a4c:	orr	x0, x3, x0
  453a50:	csel	x3, x0, x3, ne  // ne = any
  453a54:	ldr	x0, [x20, #1624]
  453a58:	str	w24, [x20, #1600]
  453a5c:	mul	x3, x0, x3
  453a60:	str	x3, [x20, #1576]
  453a64:	b	45380c <_obstack_memory_used@@Base+0xc8a0>
  453a68:	mov	x1, #0x0                   	// #0
  453a6c:	mov	w0, #0x0                   	// #0
  453a70:	ldrb	w3, [x19], #1
  453a74:	and	x2, x3, #0x7f
  453a78:	lsl	x2, x2, x0
  453a7c:	add	w0, w0, #0x7
  453a80:	orr	x1, x1, x2
  453a84:	tbnz	w3, #7, 453a70 <_obstack_memory_used@@Base+0xcb04>
  453a88:	mov	x4, #0x0                   	// #0
  453a8c:	mov	w2, #0x0                   	// #0
  453a90:	ldrb	w3, [x19], #1
  453a94:	and	x0, x3, #0x7f
  453a98:	lsl	x0, x0, x2
  453a9c:	add	w2, w2, #0x7
  453aa0:	orr	x4, x4, x0
  453aa4:	tbnz	w3, #7, 453a90 <_obstack_memory_used@@Base+0xcb24>
  453aa8:	cmp	w2, #0x3f
  453aac:	b.hi	453ac4 <_obstack_memory_used@@Base+0xcb58>  // b.pmore
  453ab0:	mov	x0, #0xffffffffffffffff    	// #-1
  453ab4:	tst	x3, #0x40
  453ab8:	lsl	x0, x0, x2
  453abc:	orr	x0, x4, x0
  453ac0:	csel	x4, x0, x4, ne  // ne = any
  453ac4:	ldr	x0, [x20, #1624]
  453ac8:	cmp	x1, #0x61
  453acc:	mul	x4, x4, x0
  453ad0:	b.hi	45380c <_obstack_memory_used@@Base+0xc8a0>  // b.pmore
  453ad4:	lsl	x1, x1, #4
  453ad8:	add	x0, x20, x1
  453adc:	str	w24, [x0, #8]
  453ae0:	str	x4, [x20, x1]
  453ae4:	b	45380c <_obstack_memory_used@@Base+0xc8a0>
  453ae8:	mov	x1, #0x0                   	// #0
  453aec:	mov	w0, #0x0                   	// #0
  453af0:	ldrb	w3, [x19], #1
  453af4:	and	x2, x3, #0x7f
  453af8:	lsl	x2, x2, x0
  453afc:	add	w0, w0, #0x7
  453b00:	orr	x1, x1, x2
  453b04:	tbnz	w3, #7, 453af0 <_obstack_memory_used@@Base+0xcb84>
  453b08:	cmp	x1, #0x61
  453b0c:	b.hi	453b24 <_obstack_memory_used@@Base+0xcbb8>  // b.pmore
  453b10:	lsl	x1, x1, #4
  453b14:	mov	w2, #0x3                   	// #3
  453b18:	add	x0, x20, x1
  453b1c:	str	w2, [x0, #8]
  453b20:	str	x19, [x20, x1]
  453b24:	mov	x3, #0x0                   	// #0
  453b28:	mov	w1, #0x0                   	// #0
  453b2c:	nop
  453b30:	ldrb	w2, [x19], #1
  453b34:	and	x0, x2, #0x7f
  453b38:	lsl	x0, x0, x1
  453b3c:	add	w1, w1, #0x7
  453b40:	orr	x3, x3, x0
  453b44:	tbnz	w2, #7, 453b30 <_obstack_memory_used@@Base+0xcbc4>
  453b48:	add	x19, x19, x3
  453b4c:	b	45380c <_obstack_memory_used@@Base+0xc8a0>
  453b50:	mov	x1, #0x0                   	// #0
  453b54:	mov	w0, #0x0                   	// #0
  453b58:	ldrb	w3, [x19], #1
  453b5c:	and	x2, x3, #0x7f
  453b60:	lsl	x2, x2, x0
  453b64:	add	w0, w0, #0x7
  453b68:	orr	x1, x1, x2
  453b6c:	tbnz	w3, #7, 453b58 <_obstack_memory_used@@Base+0xcbec>
  453b70:	str	x1, [x20, #1576]
  453b74:	b	45380c <_obstack_memory_used@@Base+0xc8a0>
  453b78:	mov	x1, #0x0                   	// #0
  453b7c:	mov	w0, #0x0                   	// #0
  453b80:	ldrb	w3, [x19], #1
  453b84:	and	x2, x3, #0x7f
  453b88:	lsl	x2, x2, x0
  453b8c:	add	w0, w0, #0x7
  453b90:	orr	x1, x1, x2
  453b94:	tbnz	w3, #7, 453b80 <_obstack_memory_used@@Base+0xcc14>
  453b98:	str	x1, [x20, #1584]
  453b9c:	str	w24, [x20, #1600]
  453ba0:	b	45380c <_obstack_memory_used@@Base+0xc8a0>
  453ba4:	mov	x1, #0x0                   	// #0
  453ba8:	mov	w0, #0x0                   	// #0
  453bac:	ldrb	w3, [x19], #1
  453bb0:	and	x2, x3, #0x7f
  453bb4:	lsl	x2, x2, x0
  453bb8:	add	w0, w0, #0x7
  453bbc:	orr	x1, x1, x2
  453bc0:	tbnz	w3, #7, 453bac <_obstack_memory_used@@Base+0xcc40>
  453bc4:	mov	x3, #0x0                   	// #0
  453bc8:	mov	w2, #0x0                   	// #0
  453bcc:	str	x1, [x20, #1584]
  453bd0:	ldrb	w1, [x19], #1
  453bd4:	and	x0, x1, #0x7f
  453bd8:	lsl	x0, x0, x2
  453bdc:	add	w2, w2, #0x7
  453be0:	orr	x3, x3, x0
  453be4:	tbnz	w1, #7, 453bd0 <_obstack_memory_used@@Base+0xcc64>
  453be8:	str	x3, [x20, #1576]
  453bec:	str	w24, [x20, #1600]
  453bf0:	b	45380c <_obstack_memory_used@@Base+0xc8a0>
  453bf4:	mov	x1, #0x0                   	// #0
  453bf8:	mov	w0, #0x0                   	// #0
  453bfc:	ldrb	w3, [x19], #1
  453c00:	and	x2, x3, #0x7f
  453c04:	lsl	x2, x2, x0
  453c08:	add	w0, w0, #0x7
  453c0c:	orr	x1, x1, x2
  453c10:	tbnz	w3, #7, 453bfc <_obstack_memory_used@@Base+0xcc90>
  453c14:	mov	x4, #0x0                   	// #0
  453c18:	mov	w2, #0x0                   	// #0
  453c1c:	nop
  453c20:	ldrb	w3, [x19], #1
  453c24:	and	x0, x3, #0x7f
  453c28:	lsl	x0, x0, x2
  453c2c:	add	w2, w2, #0x7
  453c30:	orr	x4, x4, x0
  453c34:	tbnz	w3, #7, 453c20 <_obstack_memory_used@@Base+0xccb4>
  453c38:	cmp	x1, #0x61
  453c3c:	b.hi	45380c <_obstack_memory_used@@Base+0xc8a0>  // b.pmore
  453c40:	lsl	x1, x1, #4
  453c44:	mov	w2, #0x2                   	// #2
  453c48:	add	x0, x20, x1
  453c4c:	str	w2, [x0, #8]
  453c50:	str	x4, [x20, x1]
  453c54:	b	45380c <_obstack_memory_used@@Base+0xc8a0>
  453c58:	mov	x1, #0x0                   	// #0
  453c5c:	mov	w0, #0x0                   	// #0
  453c60:	ldrb	w3, [x19], #1
  453c64:	and	x2, x3, #0x7f
  453c68:	lsl	x2, x2, x0
  453c6c:	add	w0, w0, #0x7
  453c70:	orr	x1, x1, x2
  453c74:	tbnz	w3, #7, 453c60 <_obstack_memory_used@@Base+0xccf4>
  453c78:	cmp	x1, #0x61
  453c7c:	b.hi	45380c <_obstack_memory_used@@Base+0xc8a0>  // b.pmore
  453c80:	add	x1, x20, x1, lsl #4
  453c84:	str	wzr, [x1, #8]
  453c88:	b	45380c <_obstack_memory_used@@Base+0xc8a0>
  453c8c:	mov	x1, #0x0                   	// #0
  453c90:	mov	w0, #0x0                   	// #0
  453c94:	ldrb	w3, [x19], #1
  453c98:	and	x2, x3, #0x7f
  453c9c:	lsl	x2, x2, x0
  453ca0:	add	w0, w0, #0x7
  453ca4:	orr	x1, x1, x2
  453ca8:	tbnz	w3, #7, 453c94 <_obstack_memory_used@@Base+0xcd28>
  453cac:	cmp	x1, #0x61
  453cb0:	b.hi	45380c <_obstack_memory_used@@Base+0xc8a0>  // b.pmore
  453cb4:	add	x1, x20, x1, lsl #4
  453cb8:	mov	w0, #0x6                   	// #6
  453cbc:	str	w0, [x1, #8]
  453cc0:	b	45380c <_obstack_memory_used@@Base+0xc8a0>
  453cc4:	mov	x1, #0x0                   	// #0
  453cc8:	mov	w0, #0x0                   	// #0
  453ccc:	ldrb	w3, [x19], #1
  453cd0:	and	x2, x3, #0x7f
  453cd4:	lsl	x2, x2, x0
  453cd8:	add	w0, w0, #0x7
  453cdc:	orr	x1, x1, x2
  453ce0:	tbnz	w3, #7, 453ccc <_obstack_memory_used@@Base+0xcd60>
  453ce4:	b	453c78 <_obstack_memory_used@@Base+0xcd0c>
  453ce8:	mov	x1, #0x0                   	// #0
  453cec:	mov	w0, #0x0                   	// #0
  453cf0:	ldrb	w3, [x19], #1
  453cf4:	and	x2, x3, #0x7f
  453cf8:	lsl	x2, x2, x0
  453cfc:	add	w0, w0, #0x7
  453d00:	orr	x1, x1, x2
  453d04:	tbnz	w3, #7, 453cf0 <_obstack_memory_used@@Base+0xcd84>
  453d08:	mov	x4, #0x0                   	// #0
  453d0c:	mov	w2, #0x0                   	// #0
  453d10:	ldrb	w3, [x19], #1
  453d14:	and	x0, x3, #0x7f
  453d18:	lsl	x0, x0, x2
  453d1c:	add	w2, w2, #0x7
  453d20:	orr	x4, x4, x0
  453d24:	tbnz	w3, #7, 453d10 <_obstack_memory_used@@Base+0xcda4>
  453d28:	b	453ac4 <_obstack_memory_used@@Base+0xcb58>
  453d2c:	ldr	x0, [x20, #1632]
  453d30:	and	x4, x4, #0x3f
  453d34:	madd	x4, x4, x0, x1
  453d38:	str	x4, [x20, #1608]
  453d3c:	b	45380c <_obstack_memory_used@@Base+0xc8a0>
  453d40:	ubfiz	x4, x4, #4, #6
  453d44:	add	x4, x20, x4
  453d48:	str	wzr, [x4, #8]
  453d4c:	b	45380c <_obstack_memory_used@@Base+0xc8a0>
  453d50:	and	w4, w4, #0x3f
  453d54:	mov	x1, #0x0                   	// #0
  453d58:	mov	w5, #0x0                   	// #0
  453d5c:	nop
  453d60:	ldrb	w6, [x19], #1
  453d64:	and	x0, x6, #0x7f
  453d68:	lsl	x0, x0, x5
  453d6c:	add	w5, w5, #0x7
  453d70:	orr	x1, x1, x0
  453d74:	tbnz	w6, #7, 453d60 <_obstack_memory_used@@Base+0xcdf4>
  453d78:	ubfiz	x4, x4, #4, #6
  453d7c:	ldr	x2, [x20, #1624]
  453d80:	add	x0, x20, x4
  453d84:	mul	x1, x1, x2
  453d88:	str	w24, [x0, #8]
  453d8c:	str	x1, [x20, x4]
  453d90:	b	45380c <_obstack_memory_used@@Base+0xc8a0>
  453d94:	ldr	x0, [x20, #544]
  453d98:	eor	x0, x0, #0x1
  453d9c:	str	x0, [x20, #544]
  453da0:	b	45380c <_obstack_memory_used@@Base+0xc8a0>
  453da4:	ldrb	w28, [x20, #1648]
  453da8:	mov	x1, x21
  453dac:	mov	w0, w28
  453db0:	bl	453688 <_obstack_memory_used@@Base+0xc71c>
  453db4:	mov	x2, x19
  453db8:	mov	x1, x0
  453dbc:	mov	x3, x27
  453dc0:	mov	w0, w28
  453dc4:	bl	453528 <_obstack_memory_used@@Base+0xc5bc>
  453dc8:	mov	x19, x0
  453dcc:	ldr	x1, [x29, #104]
  453dd0:	str	x1, [x20, #1608]
  453dd4:	b	45380c <_obstack_memory_used@@Base+0xc8a0>
  453dd8:	ldrb	w2, [x0, #1]
  453ddc:	add	x19, x0, #0x2
  453de0:	ldr	x0, [x20, #1632]
  453de4:	madd	x1, x2, x0, x1
  453de8:	str	x1, [x20, #1608]
  453dec:	b	45380c <_obstack_memory_used@@Base+0xc8a0>
  453df0:	ldurh	w2, [x0, #1]
  453df4:	add	x19, x0, #0x3
  453df8:	ldr	x0, [x20, #1632]
  453dfc:	madd	x1, x2, x0, x1
  453e00:	str	x1, [x20, #1608]
  453e04:	b	45380c <_obstack_memory_used@@Base+0xc8a0>
  453e08:	ldur	w2, [x0, #1]
  453e0c:	add	x19, x0, #0x5
  453e10:	ldr	x0, [x20, #1632]
  453e14:	madd	x1, x2, x0, x1
  453e18:	str	x1, [x20, #1608]
  453e1c:	b	45380c <_obstack_memory_used@@Base+0xc8a0>
  453e20:	cbz	x25, 453e9c <_obstack_memory_used@@Base+0xcf30>
  453e24:	mov	x3, x25
  453e28:	ldr	x25, [x25, #1568]
  453e2c:	mov	x1, x20
  453e30:	mov	x0, x3
  453e34:	mov	x2, #0x648                 	// #1608
  453e38:	bl	402260 <memcpy@plt>
  453e3c:	str	x0, [x20, #1568]
  453e40:	b	45380c <_obstack_memory_used@@Base+0xc8a0>
  453e44:	ldr	x28, [x20, #1568]
  453e48:	mov	x0, x20
  453e4c:	mov	x2, #0x648                 	// #1608
  453e50:	mov	x1, x28
  453e54:	bl	402260 <memcpy@plt>
  453e58:	str	x25, [x28, #1568]
  453e5c:	mov	x25, x28
  453e60:	b	45380c <_obstack_memory_used@@Base+0xc8a0>
  453e64:	mov	w0, #0x2                   	// #2
  453e68:	mov	x3, #0x0                   	// #0
  453e6c:	mov	w1, #0x0                   	// #0
  453e70:	str	x19, [x20, #1592]
  453e74:	str	w0, [x20, #1600]
  453e78:	ldrb	w2, [x19], #1
  453e7c:	and	x0, x2, #0x7f
  453e80:	lsl	x0, x0, x1
  453e84:	add	w1, w1, #0x7
  453e88:	orr	x3, x3, x0
  453e8c:	tbnz	w2, #7, 453e78 <_obstack_memory_used@@Base+0xcf0c>
  453e90:	add	x19, x19, x3
  453e94:	b	45380c <_obstack_memory_used@@Base+0xc8a0>
  453e98:	ret
  453e9c:	sub	sp, sp, #0x650
  453ea0:	mov	x3, sp
  453ea4:	b	453e2c <_obstack_memory_used@@Base+0xcec0>
  453ea8:	bl	402590 <abort@plt>
  453eac:	nop
  453eb0:	adrp	x2, 488000 <_obstack_memory_used@@Base+0x41094>
  453eb4:	add	x1, x2, #0x938
  453eb8:	mov	w0, #0x8                   	// #8
  453ebc:	strb	w0, [x2, #2360]
  453ec0:	strb	w0, [x1, #1]
  453ec4:	strb	w0, [x1, #2]
  453ec8:	strb	w0, [x1, #3]
  453ecc:	strb	w0, [x1, #4]
  453ed0:	strb	w0, [x1, #5]
  453ed4:	strb	w0, [x1, #6]
  453ed8:	strb	w0, [x1, #7]
  453edc:	strb	w0, [x1, #8]
  453ee0:	strb	w0, [x1, #9]
  453ee4:	strb	w0, [x1, #10]
  453ee8:	strb	w0, [x1, #11]
  453eec:	strb	w0, [x1, #12]
  453ef0:	strb	w0, [x1, #13]
  453ef4:	strb	w0, [x1, #14]
  453ef8:	strb	w0, [x1, #15]
  453efc:	strb	w0, [x1, #16]
  453f00:	strb	w0, [x1, #17]
  453f04:	strb	w0, [x1, #18]
  453f08:	strb	w0, [x1, #19]
  453f0c:	strb	w0, [x1, #20]
  453f10:	strb	w0, [x1, #21]
  453f14:	strb	w0, [x1, #22]
  453f18:	strb	w0, [x1, #23]
  453f1c:	strb	w0, [x1, #24]
  453f20:	strb	w0, [x1, #25]
  453f24:	strb	w0, [x1, #26]
  453f28:	strb	w0, [x1, #27]
  453f2c:	strb	w0, [x1, #28]
  453f30:	strb	w0, [x1, #29]
  453f34:	strb	w0, [x1, #30]
  453f38:	strb	w0, [x1, #31]
  453f3c:	strb	w0, [x1, #64]
  453f40:	strb	w0, [x1, #46]
  453f44:	strb	w0, [x1, #65]
  453f48:	strb	w0, [x1, #66]
  453f4c:	strb	w0, [x1, #67]
  453f50:	strb	w0, [x1, #68]
  453f54:	strb	w0, [x1, #69]
  453f58:	strb	w0, [x1, #70]
  453f5c:	strb	w0, [x1, #71]
  453f60:	strb	w0, [x1, #72]
  453f64:	strb	w0, [x1, #73]
  453f68:	strb	w0, [x1, #74]
  453f6c:	strb	w0, [x1, #75]
  453f70:	strb	w0, [x1, #76]
  453f74:	strb	w0, [x1, #77]
  453f78:	strb	w0, [x1, #78]
  453f7c:	strb	w0, [x1, #79]
  453f80:	strb	w0, [x1, #80]
  453f84:	strb	w0, [x1, #81]
  453f88:	strb	w0, [x1, #82]
  453f8c:	strb	w0, [x1, #83]
  453f90:	strb	w0, [x1, #84]
  453f94:	strb	w0, [x1, #85]
  453f98:	strb	w0, [x1, #86]
  453f9c:	strb	w0, [x1, #87]
  453fa0:	strb	w0, [x1, #88]
  453fa4:	strb	w0, [x1, #89]
  453fa8:	strb	w0, [x1, #90]
  453fac:	strb	w0, [x1, #91]
  453fb0:	strb	w0, [x1, #92]
  453fb4:	strb	w0, [x1, #93]
  453fb8:	strb	w0, [x1, #94]
  453fbc:	strb	w0, [x1, #95]
  453fc0:	strb	w0, [x1, #48]
  453fc4:	strb	w0, [x1, #49]
  453fc8:	strb	w0, [x1, #50]
  453fcc:	strb	w0, [x1, #51]
  453fd0:	strb	w0, [x1, #52]
  453fd4:	strb	w0, [x1, #53]
  453fd8:	strb	w0, [x1, #54]
  453fdc:	strb	w0, [x1, #55]
  453fe0:	strb	w0, [x1, #56]
  453fe4:	strb	w0, [x1, #57]
  453fe8:	strb	w0, [x1, #58]
  453fec:	strb	w0, [x1, #59]
  453ff0:	strb	w0, [x1, #60]
  453ff4:	strb	w0, [x1, #61]
  453ff8:	strb	w0, [x1, #62]
  453ffc:	strb	w0, [x1, #63]
  454000:	strb	w0, [x1, #96]
  454004:	ret
  454008:	stp	x29, x30, [sp, #-112]!
  45400c:	mov	x2, #0x680                 	// #1664
  454010:	mov	x29, sp
  454014:	stp	x19, x20, [sp, #16]
  454018:	mov	x20, x0
  45401c:	mov	x19, x1
  454020:	mov	x0, x1
  454024:	mov	w1, #0x0                   	// #0
  454028:	bl	402490 <memset@plt>
  45402c:	str	xzr, [x20, #800]
  454030:	ldr	x2, [x20, #792]
  454034:	str	xzr, [x20, #848]
  454038:	cbz	x2, 4543ac <_obstack_memory_used@@Base+0xd440>
  45403c:	ldr	d0, [x20, #832]
  454040:	add	x1, x20, #0x328
  454044:	stp	x21, x22, [sp, #32]
  454048:	cmge	d0, d0, #0
  45404c:	fmov	x0, d0
  454050:	add	x0, x2, x0
  454054:	bl	457748 <_obstack_memory_used@@Base+0x107dc>
  454058:	mov	x22, x0
  45405c:	cbz	x0, 454410 <_obstack_memory_used@@Base+0xd4a4>
  454060:	ldrsw	x1, [x0, #4]
  454064:	stp	x23, x24, [sp, #48]
  454068:	add	x23, x0, #0x4
  45406c:	sub	x23, x23, x1
  454070:	ldr	x0, [x20, #824]
  454074:	str	x0, [x19, #1608]
  454078:	add	x21, x23, #0x9
  45407c:	mov	x0, x21
  454080:	bl	4022b0 <strlen@plt>
  454084:	ldrb	w1, [x23, #9]
  454088:	add	x2, x0, #0x1
  45408c:	add	x2, x21, x2
  454090:	cmp	w1, #0x65
  454094:	b.eq	454280 <_obstack_memory_used@@Base+0xd314>  // b.none
  454098:	ldrb	w6, [x23, #8]
  45409c:	ldrb	w3, [x2]
  4540a0:	cmp	w6, #0x3
  4540a4:	b.hi	4544f0 <_obstack_memory_used@@Base+0xd584>  // b.pmore
  4540a8:	stp	x25, x26, [sp, #64]
  4540ac:	stp	x27, x28, [sp, #80]
  4540b0:	mov	x5, #0x0                   	// #0
  4540b4:	mov	w4, #0x0                   	// #0
  4540b8:	b	4540c0 <_obstack_memory_used@@Base+0xd154>
  4540bc:	ldrb	w3, [x2]
  4540c0:	and	x1, x3, #0x7f
  4540c4:	add	x2, x2, #0x1
  4540c8:	lsl	x1, x1, x4
  4540cc:	add	w4, w4, #0x7
  4540d0:	orr	x5, x5, x1
  4540d4:	tbnz	w3, #7, 4540bc <_obstack_memory_used@@Base+0xd150>
  4540d8:	mov	x0, #0x0                   	// #0
  4540dc:	mov	w3, #0x0                   	// #0
  4540e0:	str	x5, [x19, #1632]
  4540e4:	nop
  4540e8:	mov	x5, x2
  4540ec:	ldrb	w4, [x2], #1
  4540f0:	and	x1, x4, #0x7f
  4540f4:	lsl	x1, x1, x3
  4540f8:	add	w3, w3, #0x7
  4540fc:	orr	x0, x0, x1
  454100:	tbnz	w4, #7, 4540e8 <_obstack_memory_used@@Base+0xd17c>
  454104:	cmp	w3, #0x3f
  454108:	b.hi	454120 <_obstack_memory_used@@Base+0xd1b4>  // b.pmore
  45410c:	mov	x1, #0xffffffffffffffff    	// #-1
  454110:	tst	x4, #0x40
  454114:	lsl	x3, x1, x3
  454118:	orr	x3, x0, x3
  45411c:	csel	x0, x3, x0, ne  // ne = any
  454120:	str	x0, [x19, #1624]
  454124:	cmp	w6, #0x1
  454128:	mov	x4, #0x0                   	// #0
  45412c:	mov	w3, #0x0                   	// #0
  454130:	b.eq	45429c <_obstack_memory_used@@Base+0xd330>  // b.none
  454134:	nop
  454138:	ldrb	w0, [x2], #1
  45413c:	and	x1, x0, #0x7f
  454140:	lsl	x1, x1, x3
  454144:	add	w3, w3, #0x7
  454148:	orr	x4, x4, x1
  45414c:	tbnz	w0, #7, 454138 <_obstack_memory_used@@Base+0xd1cc>
  454150:	mov	w0, #0xffffffff            	// #-1
  454154:	str	x4, [x19, #1640]
  454158:	strb	w0, [x19, #1649]
  45415c:	ldrb	w3, [x21]
  454160:	cmp	w3, #0x7a
  454164:	b.eq	4542bc <_obstack_memory_used@@Base+0xd350>  // b.none
  454168:	mov	x24, #0x0                   	// #0
  45416c:	cbz	w3, 454554 <_obstack_memory_used@@Base+0xd5e8>
  454170:	add	x21, x21, #0x1
  454174:	add	x25, sp, #0x68
  454178:	mov	w26, #0x1                   	// #1
  45417c:	b	4541a4 <_obstack_memory_used@@Base+0xd238>
  454180:	cmp	w3, #0x52
  454184:	b.eq	454300 <_obstack_memory_used@@Base+0xd394>  // b.none
  454188:	cmp	w3, #0x50
  45418c:	b.eq	45430c <_obstack_memory_used@@Base+0xd3a0>  // b.none
  454190:	cmp	w3, #0x53
  454194:	b.ne	4543c0 <_obstack_memory_used@@Base+0xd454>  // b.any
  454198:	strb	w26, [x19, #1651]
  45419c:	ldrb	w3, [x21], #1
  4541a0:	cbz	w3, 4541bc <_obstack_memory_used@@Base+0xd250>
  4541a4:	cmp	w3, #0x4c
  4541a8:	b.ne	454180 <_obstack_memory_used@@Base+0xd214>  // b.any
  4541ac:	ldrb	w0, [x2], #1
  4541b0:	strb	w0, [x19, #1649]
  4541b4:	ldrb	w3, [x21], #1
  4541b8:	cbnz	w3, 4541a4 <_obstack_memory_used@@Base+0xd238>
  4541bc:	cbz	x24, 4543bc <_obstack_memory_used@@Base+0xd450>
  4541c0:	ldr	w1, [x23]
  4541c4:	mov	x0, x24
  4541c8:	mov	x3, x19
  4541cc:	mov	x2, x20
  4541d0:	add	x1, x1, #0x4
  4541d4:	add	x1, x23, x1
  4541d8:	bl	453700 <_obstack_memory_used@@Base+0xc794>
  4541dc:	ldrb	w0, [x19, #1648]
  4541e0:	cmp	w0, #0xff
  4541e4:	b.eq	4544e8 <_obstack_memory_used@@Base+0xd57c>  // b.none
  4541e8:	and	w0, w0, #0x7
  4541ec:	cmp	w0, #0x2
  4541f0:	b.eq	4544e0 <_obstack_memory_used@@Base+0xd574>  // b.none
  4541f4:	b.ls	454354 <_obstack_memory_used@@Base+0xd3e8>  // b.plast
  4541f8:	cmp	w0, #0x3
  4541fc:	mov	x21, #0x10                  	// #16
  454200:	b.ne	454344 <_obstack_memory_used@@Base+0xd3d8>  // b.any
  454204:	ldrb	w0, [x19, #1650]
  454208:	add	x21, x22, x21
  45420c:	ldrb	w24, [x19, #1649]
  454210:	cbz	w0, 45436c <_obstack_memory_used@@Base+0xd400>
  454214:	mov	x0, #0x0                   	// #0
  454218:	mov	w2, #0x0                   	// #0
  45421c:	nop
  454220:	ldrb	w3, [x21], #1
  454224:	and	x1, x3, #0x7f
  454228:	lsl	x1, x1, x2
  45422c:	add	w2, w2, #0x7
  454230:	orr	x0, x0, x1
  454234:	tbnz	w3, #7, 454220 <_obstack_memory_used@@Base+0xd2b4>
  454238:	add	x23, x21, x0
  45423c:	cmp	w24, #0xff
  454240:	b.ne	4543e4 <_obstack_memory_used@@Base+0xd478>  // b.any
  454244:	ldr	w1, [x22]
  454248:	mov	x0, x23
  45424c:	mov	x3, x19
  454250:	mov	x2, x20
  454254:	add	x1, x1, #0x4
  454258:	add	x1, x22, x1
  45425c:	bl	453700 <_obstack_memory_used@@Base+0xc794>
  454260:	ldp	x21, x22, [sp, #32]
  454264:	mov	w0, #0x0                   	// #0
  454268:	ldp	x23, x24, [sp, #48]
  45426c:	ldp	x25, x26, [sp, #64]
  454270:	ldp	x27, x28, [sp, #80]
  454274:	ldp	x19, x20, [sp, #16]
  454278:	ldp	x29, x30, [sp], #112
  45427c:	ret
  454280:	ldrb	w0, [x23, #10]
  454284:	cmp	w0, #0x68
  454288:	b.ne	454098 <_obstack_memory_used@@Base+0xd12c>  // b.any
  45428c:	ldr	x0, [x2], #8
  454290:	add	x21, x23, #0xb
  454294:	str	x0, [x19, #1656]
  454298:	b	454098 <_obstack_memory_used@@Base+0xd12c>
  45429c:	ldrb	w0, [x2]
  4542a0:	add	x2, x5, #0x2
  4542a4:	str	x0, [x19, #1640]
  4542a8:	mov	w0, #0xffffffff            	// #-1
  4542ac:	strb	w0, [x19, #1649]
  4542b0:	ldrb	w3, [x21]
  4542b4:	cmp	w3, #0x7a
  4542b8:	b.ne	454168 <_obstack_memory_used@@Base+0xd1fc>  // b.any
  4542bc:	mov	x0, #0x0                   	// #0
  4542c0:	mov	w3, #0x0                   	// #0
  4542c4:	nop
  4542c8:	ldrb	w4, [x2], #1
  4542cc:	and	x1, x4, #0x7f
  4542d0:	lsl	x1, x1, x3
  4542d4:	add	w3, w3, #0x7
  4542d8:	orr	x0, x0, x1
  4542dc:	tbnz	w4, #7, 4542c8 <_obstack_memory_used@@Base+0xd35c>
  4542e0:	mov	w1, #0x1                   	// #1
  4542e4:	strb	w1, [x19, #1650]
  4542e8:	add	x24, x2, x0
  4542ec:	add	x0, x21, #0x1
  4542f0:	ldrb	w3, [x21, #1]
  4542f4:	cbz	w3, 4541c0 <_obstack_memory_used@@Base+0xd254>
  4542f8:	mov	x21, x0
  4542fc:	b	454170 <_obstack_memory_used@@Base+0xd204>
  454300:	ldrb	w0, [x2], #1
  454304:	strb	w0, [x19, #1648]
  454308:	b	45419c <_obstack_memory_used@@Base+0xd230>
  45430c:	mov	x27, x2
  454310:	mov	x1, x20
  454314:	ldrb	w28, [x27], #1
  454318:	mov	w0, w28
  45431c:	bl	453688 <_obstack_memory_used@@Base+0xc71c>
  454320:	mov	x2, x27
  454324:	mov	x1, x0
  454328:	mov	x3, x25
  45432c:	mov	w0, w28
  454330:	bl	453528 <_obstack_memory_used@@Base+0xc5bc>
  454334:	mov	x2, x0
  454338:	ldr	x1, [sp, #104]
  45433c:	str	x1, [x19, #1616]
  454340:	b	45419c <_obstack_memory_used@@Base+0xd230>
  454344:	cmp	w0, #0x4
  454348:	mov	x21, #0x18                  	// #24
  45434c:	b.eq	454204 <_obstack_memory_used@@Base+0xd298>  // b.none
  454350:	bl	402590 <abort@plt>
  454354:	mov	x21, #0x18                  	// #24
  454358:	cbnz	w0, 454350 <_obstack_memory_used@@Base+0xd3e4>
  45435c:	ldrb	w0, [x19, #1650]
  454360:	add	x21, x22, x21
  454364:	ldrb	w24, [x19, #1649]
  454368:	cbnz	w0, 454214 <_obstack_memory_used@@Base+0xd2a8>
  45436c:	mov	x23, x21
  454370:	cmp	w24, #0xff
  454374:	b.eq	454244 <_obstack_memory_used@@Base+0xd2d8>  // b.none
  454378:	mov	x1, x20
  45437c:	mov	w0, w24
  454380:	bl	453688 <_obstack_memory_used@@Base+0xc71c>
  454384:	mov	x1, x0
  454388:	mov	x2, x21
  45438c:	mov	w0, w24
  454390:	add	x3, sp, #0x68
  454394:	bl	453528 <_obstack_memory_used@@Base+0xc5bc>
  454398:	ldr	x1, [sp, #104]
  45439c:	mov	x23, x0
  4543a0:	str	x1, [x20, #800]
  4543a4:	b	454244 <_obstack_memory_used@@Base+0xd2d8>
  4543a8:	ldp	x21, x22, [sp, #32]
  4543ac:	mov	w0, #0x5                   	// #5
  4543b0:	ldp	x19, x20, [sp, #16]
  4543b4:	ldp	x29, x30, [sp], #112
  4543b8:	ret
  4543bc:	mov	x24, x2
  4543c0:	cbnz	x24, 4541c0 <_obstack_memory_used@@Base+0xd254>
  4543c4:	ldp	x25, x26, [sp, #64]
  4543c8:	ldp	x27, x28, [sp, #80]
  4543cc:	mov	w0, #0x3                   	// #3
  4543d0:	ldp	x19, x20, [sp, #16]
  4543d4:	ldp	x21, x22, [sp, #32]
  4543d8:	ldp	x23, x24, [sp, #48]
  4543dc:	ldp	x29, x30, [sp], #112
  4543e0:	ret
  4543e4:	mov	x1, x20
  4543e8:	mov	w0, w24
  4543ec:	bl	453688 <_obstack_memory_used@@Base+0xc71c>
  4543f0:	mov	x1, x0
  4543f4:	mov	x2, x21
  4543f8:	mov	w0, w24
  4543fc:	add	x3, sp, #0x68
  454400:	bl	453528 <_obstack_memory_used@@Base+0xc5bc>
  454404:	ldr	x0, [sp, #104]
  454408:	str	x0, [x20, #800]
  45440c:	b	454244 <_obstack_memory_used@@Base+0xd2d8>
  454410:	ldr	x0, [x20, #792]
  454414:	mov	w1, #0x1168                	// #4456
  454418:	movk	w1, #0xd280, lsl #16
  45441c:	ldr	w2, [x0]
  454420:	cmp	w2, w1
  454424:	b.ne	4543a8 <_obstack_memory_used@@Base+0xd43c>  // b.any
  454428:	ldr	w1, [x0, #4]
  45442c:	mov	w0, #0x1                   	// #1
  454430:	movk	w0, #0xd400, lsl #16
  454434:	cmp	w1, w0
  454438:	b.ne	4543a8 <_obstack_memory_used@@Base+0xd43c>  // b.any
  45443c:	ldr	x6, [x20, #784]
  454440:	mov	w3, #0x1                   	// #1
  454444:	mov	x1, x19
  454448:	mov	w2, w3
  45444c:	add	x8, x6, #0x130
  454450:	mov	x4, #0x1f                  	// #31
  454454:	mov	x5, #0x130                 	// #304
  454458:	mov	x0, #0x8                   	// #8
  45445c:	str	x5, [x19, #1576]
  454460:	str	x4, [x19, #1584]
  454464:	str	w3, [x19, #1600]
  454468:	str	w2, [x1, #8]
  45446c:	str	x0, [x1], #16
  454470:	add	x0, x0, #0x8
  454474:	cmp	x0, #0x100
  454478:	b.ne	454468 <_obstack_memory_used@@Base+0xd4fc>  // b.any
  45447c:	ldr	w0, [x6, #592]
  454480:	add	x5, x6, #0x250
  454484:	cbz	w0, 454514 <_obstack_memory_used@@Base+0xd5a8>
  454488:	mov	w7, #0x8001                	// #32769
  45448c:	add	x4, x19, #0x600
  454490:	add	x9, x6, x19
  454494:	movk	w7, #0x4650, lsl #16
  454498:	mov	w3, #0x1                   	// #1
  45449c:	b	4544b0 <_obstack_memory_used@@Base+0xd544>
  4544a0:	ldr	w0, [x5, #4]
  4544a4:	add	x5, x5, x0
  4544a8:	ldr	w0, [x5]
  4544ac:	cbz	w0, 454514 <_obstack_memory_used@@Base+0xd5a8>
  4544b0:	cmp	w0, w7
  4544b4:	b.ne	4544a0 <_obstack_memory_used@@Base+0xd534>  // b.any
  4544b8:	sub	x2, x5, #0x520
  4544bc:	add	x0, x19, #0x400
  4544c0:	sub	x2, x2, x9
  4544c4:	nop
  4544c8:	str	w3, [x0, #8]
  4544cc:	add	x1, x2, x0
  4544d0:	str	x1, [x0], #16
  4544d4:	cmp	x4, x0
  4544d8:	b.ne	4544c8 <_obstack_memory_used@@Base+0xd55c>  // b.any
  4544dc:	b	4544a0 <_obstack_memory_used@@Base+0xd534>
  4544e0:	mov	x21, #0xc                   	// #12
  4544e4:	b	454204 <_obstack_memory_used@@Base+0xd298>
  4544e8:	mov	x21, #0x8                   	// #8
  4544ec:	b	454204 <_obstack_memory_used@@Base+0xd298>
  4544f0:	cmp	w3, #0x8
  4544f4:	b.ne	4543cc <_obstack_memory_used@@Base+0xd460>  // b.any
  4544f8:	ldrb	w0, [x2, #1]
  4544fc:	cbnz	w0, 4543cc <_obstack_memory_used@@Base+0xd460>
  454500:	stp	x25, x26, [sp, #64]
  454504:	add	x2, x2, #0x2
  454508:	stp	x27, x28, [sp, #80]
  45450c:	ldrb	w3, [x2]
  454510:	b	4540b0 <_obstack_memory_used@@Base+0xd144>
  454514:	mov	w3, #0x1                   	// #1
  454518:	strb	w3, [x19, #1651]
  45451c:	add	x1, x6, #0x230
  454520:	mov	w5, #0x4                   	// #4
  454524:	ldr	x2, [x8, #264]
  454528:	sub	x1, x1, x8
  45452c:	mov	x4, #0x60                  	// #96
  454530:	mov	w0, #0x0                   	// #0
  454534:	sub	x8, x2, x8
  454538:	ldp	x21, x22, [sp, #32]
  45453c:	str	x1, [x19, #496]
  454540:	str	w3, [x19, #504]
  454544:	str	x8, [x19, #1536]
  454548:	str	w5, [x19, #1544]
  45454c:	str	x4, [x19, #1640]
  454550:	b	454274 <_obstack_memory_used@@Base+0xd308>
  454554:	mov	x24, x2
  454558:	b	4541c0 <_obstack_memory_used@@Base+0xd254>
  45455c:	nop
  454560:	stp	x29, x30, [sp, #-80]!
  454564:	mov	x29, sp
  454568:	stp	x21, x22, [sp, #32]
  45456c:	mov	x21, x0
  454570:	ldr	x0, [x1, #832]
  454574:	stp	x19, x20, [sp, #16]
  454578:	mov	x20, x1
  45457c:	stp	x23, x24, [sp, #48]
  454580:	tbz	x0, #62, 45458c <_obstack_memory_used@@Base+0xd620>
  454584:	ldrb	w1, [x1, #887]
  454588:	cbnz	w1, 454594 <_obstack_memory_used@@Base+0xd628>
  45458c:	ldr	x1, [x20, #248]
  454590:	cbz	x1, 454650 <_obstack_memory_used@@Base+0xd6e4>
  454594:	adrp	x24, 488000 <_obstack_memory_used@@Base+0x41094>
  454598:	add	x23, x21, #0x358
  45459c:	add	x24, x24, #0x938
  4545a0:	add	x22, x20, #0x358
  4545a4:	mov	x19, #0x0                   	// #0
  4545a8:	b	4545cc <_obstack_memory_used@@Base+0xd660>
  4545ac:	cbz	x0, 4545c0 <_obstack_memory_used@@Base+0xd654>
  4545b0:	ldrb	w2, [x19, x24]
  4545b4:	cmp	w2, #0x8
  4545b8:	b.ne	4546bc <_obstack_memory_used@@Base+0xd750>  // b.any
  4545bc:	str	x1, [x0]
  4545c0:	add	x19, x19, #0x1
  4545c4:	cmp	x19, #0x61
  4545c8:	b.eq	454608 <_obstack_memory_used@@Base+0xd69c>  // b.none
  4545cc:	ldrb	w2, [x23, x19]
  4545d0:	ldr	x0, [x21, x19, lsl #3]
  4545d4:	ldr	x1, [x20, x19, lsl #3]
  4545d8:	cbnz	w2, 4546bc <_obstack_memory_used@@Base+0xd750>
  4545dc:	ldrb	w2, [x22, x19]
  4545e0:	cbnz	w2, 4545ac <_obstack_memory_used@@Base+0xd640>
  4545e4:	cmp	x1, #0x0
  4545e8:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  4545ec:	ccmp	x0, x1, #0x4, ne  // ne = any
  4545f0:	b.eq	4545c0 <_obstack_memory_used@@Base+0xd654>  // b.none
  4545f4:	ldrb	w2, [x24, x19]
  4545f8:	add	x19, x19, #0x1
  4545fc:	bl	402260 <memcpy@plt>
  454600:	cmp	x19, #0x61
  454604:	b.ne	4545cc <_obstack_memory_used@@Base+0xd660>  // b.any
  454608:	ldr	x0, [x21, #832]
  45460c:	tbz	x0, #62, 454618 <_obstack_memory_used@@Base+0xd6ac>
  454610:	ldrb	w0, [x21, #887]
  454614:	cbnz	w0, 454638 <_obstack_memory_used@@Base+0xd6cc>
  454618:	ldr	x1, [x21, #248]
  45461c:	mov	x0, #0x0                   	// #0
  454620:	cbz	x1, 45467c <_obstack_memory_used@@Base+0xd710>
  454624:	ldp	x19, x20, [sp, #16]
  454628:	ldp	x21, x22, [sp, #32]
  45462c:	ldp	x23, x24, [sp, #48]
  454630:	ldp	x29, x30, [sp], #80
  454634:	ret
  454638:	mov	x0, #0x0                   	// #0
  45463c:	ldp	x19, x20, [sp, #16]
  454640:	ldp	x21, x22, [sp, #32]
  454644:	ldp	x23, x24, [sp, #48]
  454648:	ldp	x29, x30, [sp], #80
  45464c:	ret
  454650:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x41094>
  454654:	ldr	x2, [x20, #784]
  454658:	ldrb	w1, [x1, #2391]
  45465c:	cmp	w1, #0x8
  454660:	b.ne	4546bc <_obstack_memory_used@@Base+0xd750>  // b.any
  454664:	str	x2, [sp, #72]
  454668:	tbz	x0, #62, 454670 <_obstack_memory_used@@Base+0xd704>
  45466c:	strb	wzr, [x20, #887]
  454670:	add	x0, sp, #0x48
  454674:	str	x0, [x20, #248]
  454678:	b	454594 <_obstack_memory_used@@Base+0xd628>
  45467c:	ldr	x1, [x20, #832]
  454680:	ldr	x0, [x20, #248]
  454684:	tbnz	x1, #62, 4546b0 <_obstack_memory_used@@Base+0xd744>
  454688:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x41094>
  45468c:	ldrb	w1, [x1, #2391]
  454690:	cmp	w1, #0x8
  454694:	b.ne	4546bc <_obstack_memory_used@@Base+0xd750>  // b.any
  454698:	ldr	x0, [x0]
  45469c:	ldr	x2, [x21, #784]
  4546a0:	ldr	x1, [x20, #848]
  4546a4:	sub	x0, x0, x2
  4546a8:	add	x0, x0, x1
  4546ac:	b	454624 <_obstack_memory_used@@Base+0xd6b8>
  4546b0:	ldrb	w1, [x20, #887]
  4546b4:	cbz	w1, 454688 <_obstack_memory_used@@Base+0xd71c>
  4546b8:	b	45469c <_obstack_memory_used@@Base+0xd730>
  4546bc:	bl	402590 <abort@plt>
  4546c0:	sub	sp, sp, #0x260
  4546c4:	cmp	x0, x1
  4546c8:	stp	x29, x30, [sp]
  4546cc:	mov	x29, sp
  4546d0:	str	x3, [sp, #96]
  4546d4:	b.cs	454b2c <_obstack_memory_used@@Base+0xdbc0>  // b.hs, b.nlast
  4546d8:	stp	x19, x20, [sp, #16]
  4546dc:	mov	x19, x0
  4546e0:	mov	w20, #0x1                   	// #1
  4546e4:	stp	x21, x22, [sp, #32]
  4546e8:	mov	x21, x1
  4546ec:	add	x22, sp, #0x60
  4546f0:	stp	x23, x24, [sp, #48]
  4546f4:	adrp	x23, 467000 <_obstack_memory_used@@Base+0x20094>
  4546f8:	mov	x24, x2
  4546fc:	add	x23, x23, #0x274
  454700:	stp	x25, x26, [sp, #64]
  454704:	adrp	x25, 467000 <_obstack_memory_used@@Base+0x20094>
  454708:	add	x25, x25, #0x454
  45470c:	nop
  454710:	mov	x4, x19
  454714:	ldrb	w5, [x4], #1
  454718:	sub	w0, w5, #0x3
  45471c:	cmp	w0, #0xee
  454720:	b.ls	454728 <_obstack_memory_used@@Base+0xd7bc>  // b.plast
  454724:	bl	402590 <abort@plt>
  454728:	ldrh	w0, [x23, w0, uxtw #1]
  45472c:	adr	x1, 454738 <_obstack_memory_used@@Base+0xd7cc>
  454730:	add	x0, x1, w0, sxth #2
  454734:	br	x0
  454738:	mov	x3, #0x0                   	// #0
  45473c:	mov	w1, #0x0                   	// #0
  454740:	ldrb	w2, [x4], #1
  454744:	and	x0, x2, #0x7f
  454748:	lsl	x0, x0, x1
  45474c:	add	w1, w1, #0x7
  454750:	orr	x3, x3, x0
  454754:	tbnz	w2, #7, 454740 <_obstack_memory_used@@Base+0xd7d4>
  454758:	cmp	w1, #0x3f
  45475c:	b.ls	454ac0 <_obstack_memory_used@@Base+0xdb54>  // b.plast
  454760:	sub	w5, w5, #0x70
  454764:	cmp	w5, #0x61
  454768:	b.gt	454724 <_obstack_memory_used@@Base+0xd7b8>
  45476c:	ldr	x2, [x24, #832]
  454770:	sxtw	x1, w5
  454774:	ldr	x0, [x24, x1, lsl #3]
  454778:	tbz	x2, #62, 454788 <_obstack_memory_used@@Base+0xd81c>
  45477c:	add	x1, x24, x1
  454780:	ldrb	w1, [x1, #856]
  454784:	cbnz	w1, 4547a8 <_obstack_memory_used@@Base+0xd83c>
  454788:	cmp	w5, #0x2e
  45478c:	b.eq	454b20 <_obstack_memory_used@@Base+0xdbb4>  // b.none
  454790:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x41094>
  454794:	add	x1, x1, #0x938
  454798:	ldrb	w1, [x1, w5, sxtw]
  45479c:	cmp	w1, #0x8
  4547a0:	b.ne	454724 <_obstack_memory_used@@Base+0xd7b8>  // b.any
  4547a4:	ldr	x0, [x0]
  4547a8:	add	x0, x3, x0
  4547ac:	mov	w3, w20
  4547b0:	mov	x19, x4
  4547b4:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  4547b8:	mov	w3, w20
  4547bc:	add	x19, x19, #0x9
  4547c0:	ldur	x0, [x19, #-8]
  4547c4:	nop
  4547c8:	cmp	w3, #0x3f
  4547cc:	b.gt	454724 <_obstack_memory_used@@Base+0xd7b8>
  4547d0:	add	w20, w3, #0x1
  4547d4:	str	x0, [x22, w3, sxtw #3]
  4547d8:	cmp	x21, x19
  4547dc:	b.hi	454710 <_obstack_memory_used@@Base+0xd7a4>  // b.pmore
  4547e0:	cbz	w20, 454724 <_obstack_memory_used@@Base+0xd7b8>
  4547e4:	sub	w20, w20, #0x1
  4547e8:	add	x0, sp, #0x60
  4547ec:	ldp	x29, x30, [sp]
  4547f0:	ldr	x0, [x0, w20, sxtw #3]
  4547f4:	ldp	x19, x20, [sp, #16]
  4547f8:	ldp	x21, x22, [sp, #32]
  4547fc:	ldp	x23, x24, [sp, #48]
  454800:	ldp	x25, x26, [sp, #64]
  454804:	add	sp, sp, #0x260
  454808:	ret
  45480c:	sub	w5, w5, #0x50
  454810:	cmp	w5, #0x61
  454814:	b.gt	454724 <_obstack_memory_used@@Base+0xd7b8>
  454818:	ldr	x2, [x24, #832]
  45481c:	sxtw	x1, w5
  454820:	ldr	x0, [x24, x1, lsl #3]
  454824:	tbz	x2, #62, 454834 <_obstack_memory_used@@Base+0xd8c8>
  454828:	add	x1, x24, x1
  45482c:	ldrb	w1, [x1, #856]
  454830:	cbnz	w1, 4547ac <_obstack_memory_used@@Base+0xd840>
  454834:	cmp	w5, #0x2e
  454838:	b.eq	454b0c <_obstack_memory_used@@Base+0xdba0>  // b.none
  45483c:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x41094>
  454840:	add	x1, x1, #0x938
  454844:	ldrb	w1, [x1, w5, sxtw]
  454848:	cmp	w1, #0x8
  45484c:	b.ne	454724 <_obstack_memory_used@@Base+0xd7b8>  // b.any
  454850:	mov	w3, w20
  454854:	mov	x19, x4
  454858:	ldr	x0, [x0]
  45485c:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454860:	sub	w0, w5, #0x30
  454864:	mov	w3, w20
  454868:	mov	x19, x4
  45486c:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454870:	cmp	w20, #0x1
  454874:	b.le	454724 <_obstack_memory_used@@Base+0xd7b8>
  454878:	sub	w3, w20, #0x2
  45487c:	sub	w20, w20, #0x1
  454880:	sub	w5, w5, #0x1a
  454884:	cmp	w5, #0x14
  454888:	ldr	x1, [x22, w20, sxtw #3]
  45488c:	ldr	x0, [x22, w3, sxtw #3]
  454890:	b.hi	454724 <_obstack_memory_used@@Base+0xd7b8>  // b.pmore
  454894:	ldrh	w2, [x25, w5, uxtw #1]
  454898:	adr	x5, 4548a4 <_obstack_memory_used@@Base+0xd938>
  45489c:	add	x2, x5, w2, sxth #2
  4548a0:	br	x2
  4548a4:	cbz	w20, 454724 <_obstack_memory_used@@Base+0xd7b8>
  4548a8:	sub	w3, w20, #0x1
  4548ac:	cmp	w5, #0x20
  4548b0:	ldr	x0, [x22, w3, sxtw #3]
  4548b4:	b.eq	454e08 <_obstack_memory_used@@Base+0xde9c>  // b.none
  4548b8:	b.hi	4548d8 <_obstack_memory_used@@Base+0xd96c>  // b.pmore
  4548bc:	cmp	w5, #0x19
  4548c0:	b.eq	454b3c <_obstack_memory_used@@Base+0xdbd0>  // b.none
  4548c4:	cmp	w5, #0x1f
  4548c8:	b.ne	454aac <_obstack_memory_used@@Base+0xdb40>  // b.any
  4548cc:	neg	x0, x0
  4548d0:	mov	x19, x4
  4548d4:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  4548d8:	cmp	w5, #0x23
  4548dc:	b.eq	454ae0 <_obstack_memory_used@@Base+0xdb74>  // b.none
  4548e0:	cmp	w5, #0x94
  4548e4:	b.ne	454724 <_obstack_memory_used@@Base+0xd7b8>  // b.any
  4548e8:	ldrb	w1, [x19, #1]
  4548ec:	add	x19, x19, #0x2
  4548f0:	cmp	w1, #0x4
  4548f4:	b.eq	454cf8 <_obstack_memory_used@@Base+0xdd8c>  // b.none
  4548f8:	b.hi	454e24 <_obstack_memory_used@@Base+0xdeb8>  // b.pmore
  4548fc:	cmp	w1, #0x1
  454900:	b.ne	454e14 <_obstack_memory_used@@Base+0xdea8>  // b.any
  454904:	ldrb	w0, [x0]
  454908:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  45490c:	cmp	w20, #0x2
  454910:	b.le	454724 <_obstack_memory_used@@Base+0xd7b8>
  454914:	sub	w1, w20, #0x2
  454918:	sub	w2, w20, #0x1
  45491c:	sub	w0, w20, #0x3
  454920:	mov	x19, x4
  454924:	sxtw	x1, w1
  454928:	sxtw	x2, w2
  45492c:	sxtw	x0, w0
  454930:	ldr	x5, [x22, x1, lsl #3]
  454934:	ldr	x3, [x22, x2, lsl #3]
  454938:	ldr	x4, [x22, x0, lsl #3]
  45493c:	str	x5, [x22, x2, lsl #3]
  454940:	str	x4, [x22, x1, lsl #3]
  454944:	str	x3, [x22, x0, lsl #3]
  454948:	b	4547d8 <_obstack_memory_used@@Base+0xd86c>
  45494c:	cmp	w20, #0x1
  454950:	b.le	454724 <_obstack_memory_used@@Base+0xd7b8>
  454954:	sub	w0, w20, #0x2
  454958:	sub	w1, w20, #0x1
  45495c:	mov	x19, x4
  454960:	sxtw	x0, w0
  454964:	sxtw	x1, w1
  454968:	ldr	x3, [x22, x0, lsl #3]
  45496c:	ldr	x2, [x22, x1, lsl #3]
  454970:	str	x3, [x22, x1, lsl #3]
  454974:	str	x2, [x22, x0, lsl #3]
  454978:	b	4547d8 <_obstack_memory_used@@Base+0xd86c>
  45497c:	ldrb	w3, [x19, #1]
  454980:	sub	w1, w20, #0x1
  454984:	add	x19, x19, #0x2
  454988:	sxtw	x2, w1
  45498c:	cmp	x3, w1, sxtw
  454990:	b.ge	454724 <_obstack_memory_used@@Base+0xd7b8>  // b.tcont
  454994:	sub	x1, x2, x3
  454998:	mov	w3, w20
  45499c:	ldr	x0, [x22, x1, lsl #3]
  4549a0:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  4549a4:	cmp	w20, #0x1
  4549a8:	b.le	454724 <_obstack_memory_used@@Base+0xd7b8>
  4549ac:	sub	w0, w20, #0x2
  4549b0:	mov	x19, x4
  4549b4:	mov	w3, w20
  4549b8:	ldr	x0, [x22, w0, sxtw #3]
  4549bc:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  4549c0:	cbz	w20, 454724 <_obstack_memory_used@@Base+0xd7b8>
  4549c4:	sub	w20, w20, #0x1
  4549c8:	mov	x19, x4
  4549cc:	b	4547d8 <_obstack_memory_used@@Base+0xd86c>
  4549d0:	cbz	w20, 454724 <_obstack_memory_used@@Base+0xd7b8>
  4549d4:	sub	w0, w20, #0x1
  4549d8:	mov	x19, x4
  4549dc:	mov	w3, w20
  4549e0:	ldr	x0, [x22, w0, sxtw #3]
  4549e4:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  4549e8:	ldursh	x1, [x19, #1]
  4549ec:	add	x19, x19, #0x3
  4549f0:	add	x19, x19, x1
  4549f4:	b	4547d8 <_obstack_memory_used@@Base+0xd86c>
  4549f8:	ldrb	w0, [x19, #1]
  4549fc:	mov	w3, w20
  454a00:	add	x19, x19, #0x2
  454a04:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454a08:	ldrb	w26, [x19, #1]
  454a0c:	mov	x1, x24
  454a10:	mov	w0, w26
  454a14:	bl	453688 <_obstack_memory_used@@Base+0xc71c>
  454a18:	add	x2, x19, #0x2
  454a1c:	mov	x1, x0
  454a20:	add	x3, sp, #0x58
  454a24:	mov	w0, w26
  454a28:	bl	453528 <_obstack_memory_used@@Base+0xc5bc>
  454a2c:	mov	x19, x0
  454a30:	mov	w3, w20
  454a34:	ldr	x0, [sp, #88]
  454a38:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454a3c:	cbz	w20, 454724 <_obstack_memory_used@@Base+0xd7b8>
  454a40:	sub	w20, w20, #0x1
  454a44:	add	x1, x19, #0x3
  454a48:	ldr	x0, [x22, w20, sxtw #3]
  454a4c:	cbz	x0, 454ad8 <_obstack_memory_used@@Base+0xdb6c>
  454a50:	ldursh	x19, [x19, #1]
  454a54:	add	x19, x1, x19
  454a58:	b	4547d8 <_obstack_memory_used@@Base+0xd86c>
  454a5c:	ldursw	x0, [x19, #1]
  454a60:	mov	w3, w20
  454a64:	add	x19, x19, #0x5
  454a68:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454a6c:	ldur	w0, [x19, #1]
  454a70:	mov	w3, w20
  454a74:	add	x19, x19, #0x5
  454a78:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454a7c:	ldursh	x0, [x19, #1]
  454a80:	mov	w3, w20
  454a84:	add	x19, x19, #0x3
  454a88:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454a8c:	ldurh	w0, [x19, #1]
  454a90:	mov	w3, w20
  454a94:	add	x19, x19, #0x3
  454a98:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454a9c:	ldrsb	x0, [x19, #1]
  454aa0:	mov	w3, w20
  454aa4:	add	x19, x19, #0x2
  454aa8:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454aac:	cmp	w5, #0x6
  454ab0:	b.ne	454724 <_obstack_memory_used@@Base+0xd7b8>  // b.any
  454ab4:	mov	x19, x4
  454ab8:	ldr	x0, [x0]
  454abc:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454ac0:	mov	x0, #0xffffffffffffffff    	// #-1
  454ac4:	tst	x2, #0x40
  454ac8:	lsl	x0, x0, x1
  454acc:	orr	x0, x3, x0
  454ad0:	csel	x3, x0, x3, ne  // ne = any
  454ad4:	b	454760 <_obstack_memory_used@@Base+0xd7f4>
  454ad8:	mov	x19, x1
  454adc:	b	4547d8 <_obstack_memory_used@@Base+0xd86c>
  454ae0:	mov	x6, #0x0                   	// #0
  454ae4:	mov	w2, #0x0                   	// #0
  454ae8:	ldrb	w5, [x4], #1
  454aec:	and	x1, x5, #0x7f
  454af0:	lsl	x1, x1, x2
  454af4:	add	w2, w2, #0x7
  454af8:	orr	x6, x6, x1
  454afc:	tbnz	w5, #7, 454ae8 <_obstack_memory_used@@Base+0xdb7c>
  454b00:	add	x0, x0, x6
  454b04:	mov	x19, x4
  454b08:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454b0c:	cntd	x0
  454b10:	mov	w3, w20
  454b14:	mov	x19, x4
  454b18:	sxtw	x0, w0
  454b1c:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454b20:	cntd	x0
  454b24:	sxtw	x0, w0
  454b28:	b	4547a8 <_obstack_memory_used@@Base+0xd83c>
  454b2c:	mov	x0, x3
  454b30:	ldp	x29, x30, [sp]
  454b34:	add	sp, sp, #0x260
  454b38:	ret
  454b3c:	cmp	x0, #0x0
  454b40:	mov	x19, x4
  454b44:	cneg	x0, x0, lt  // lt = tstop
  454b48:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454b4c:	mov	x19, x4
  454b50:	mov	w1, #0x0                   	// #0
  454b54:	mov	x4, #0x0                   	// #0
  454b58:	ldrb	w2, [x19], #1
  454b5c:	and	x0, x2, #0x7f
  454b60:	lsl	x0, x0, x1
  454b64:	add	w1, w1, #0x7
  454b68:	orr	x4, x4, x0
  454b6c:	tbnz	w2, #7, 454b58 <_obstack_memory_used@@Base+0xdbec>
  454b70:	mov	x3, #0x0                   	// #0
  454b74:	mov	w1, #0x0                   	// #0
  454b78:	ldrb	w2, [x19], #1
  454b7c:	and	x0, x2, #0x7f
  454b80:	lsl	x0, x0, x1
  454b84:	add	w1, w1, #0x7
  454b88:	orr	x3, x3, x0
  454b8c:	tbnz	w2, #7, 454b78 <_obstack_memory_used@@Base+0xdc0c>
  454b90:	cmp	w1, #0x3f
  454b94:	b.hi	454bac <_obstack_memory_used@@Base+0xdc40>  // b.pmore
  454b98:	mov	x0, #0xffffffffffffffff    	// #-1
  454b9c:	tst	x2, #0x40
  454ba0:	lsl	x0, x0, x1
  454ba4:	orr	x0, x3, x0
  454ba8:	csel	x3, x0, x3, ne  // ne = any
  454bac:	cmp	w4, #0x61
  454bb0:	mov	w1, w4
  454bb4:	b.gt	454724 <_obstack_memory_used@@Base+0xd7b8>
  454bb8:	ldr	x2, [x24, #832]
  454bbc:	sxtw	x4, w4
  454bc0:	ldr	x0, [x24, x4, lsl #3]
  454bc4:	tbz	x2, #62, 454bd4 <_obstack_memory_used@@Base+0xdc68>
  454bc8:	add	x4, x24, x4
  454bcc:	ldrb	w2, [x4, #856]
  454bd0:	cbnz	w2, 454bf4 <_obstack_memory_used@@Base+0xdc88>
  454bd4:	cmp	w1, #0x2e
  454bd8:	b.eq	454de8 <_obstack_memory_used@@Base+0xde7c>  // b.none
  454bdc:	adrp	x2, 488000 <_obstack_memory_used@@Base+0x41094>
  454be0:	add	x2, x2, #0x938
  454be4:	ldrb	w1, [x2, w1, sxtw]
  454be8:	cmp	w1, #0x8
  454bec:	b.ne	454724 <_obstack_memory_used@@Base+0xd7b8>  // b.any
  454bf0:	ldr	x0, [x0]
  454bf4:	add	x0, x3, x0
  454bf8:	mov	w3, w20
  454bfc:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454c00:	mov	x19, x4
  454c04:	mov	x0, #0x0                   	// #0
  454c08:	mov	w2, #0x0                   	// #0
  454c0c:	nop
  454c10:	ldrb	w4, [x19], #1
  454c14:	and	x1, x4, #0x7f
  454c18:	lsl	x1, x1, x2
  454c1c:	add	w2, w2, #0x7
  454c20:	orr	x0, x0, x1
  454c24:	tbnz	w4, #7, 454c10 <_obstack_memory_used@@Base+0xdca4>
  454c28:	mov	w3, w20
  454c2c:	cmp	w2, #0x3f
  454c30:	b.hi	4547c8 <_obstack_memory_used@@Base+0xd85c>  // b.pmore
  454c34:	tbz	w4, #6, 4547c8 <_obstack_memory_used@@Base+0xd85c>
  454c38:	mov	x1, #0xffffffffffffffff    	// #-1
  454c3c:	lsl	x2, x1, x2
  454c40:	orr	x0, x0, x2
  454c44:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454c48:	mov	x19, x4
  454c4c:	mov	x0, #0x0                   	// #0
  454c50:	mov	w2, #0x0                   	// #0
  454c54:	nop
  454c58:	ldrb	w3, [x19], #1
  454c5c:	and	x1, x3, #0x7f
  454c60:	lsl	x1, x1, x2
  454c64:	add	w2, w2, #0x7
  454c68:	orr	x0, x0, x1
  454c6c:	tbnz	w3, #7, 454c58 <_obstack_memory_used@@Base+0xdcec>
  454c70:	mov	w3, w20
  454c74:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454c78:	mov	x19, x4
  454c7c:	mov	x3, #0x0                   	// #0
  454c80:	mov	w1, #0x0                   	// #0
  454c84:	nop
  454c88:	ldrb	w2, [x19], #1
  454c8c:	and	x0, x2, #0x7f
  454c90:	lsl	x0, x0, x1
  454c94:	add	w1, w1, #0x7
  454c98:	orr	x3, x3, x0
  454c9c:	tbnz	w2, #7, 454c88 <_obstack_memory_used@@Base+0xdd1c>
  454ca0:	cmp	w3, #0x61
  454ca4:	mov	w1, w3
  454ca8:	b.gt	454724 <_obstack_memory_used@@Base+0xd7b8>
  454cac:	ldr	x2, [x24, #832]
  454cb0:	sxtw	x3, w3
  454cb4:	ldr	x0, [x24, x3, lsl #3]
  454cb8:	tbz	x2, #62, 454cc8 <_obstack_memory_used@@Base+0xdd5c>
  454cbc:	add	x3, x24, x3
  454cc0:	ldrb	w2, [x3, #856]
  454cc4:	cbnz	w2, 454bf8 <_obstack_memory_used@@Base+0xdc8c>
  454cc8:	cmp	w1, #0x2e
  454ccc:	b.eq	454df8 <_obstack_memory_used@@Base+0xde8c>  // b.none
  454cd0:	adrp	x2, 488000 <_obstack_memory_used@@Base+0x41094>
  454cd4:	add	x2, x2, #0x938
  454cd8:	ldrb	w1, [x2, w1, sxtw]
  454cdc:	cmp	w1, #0x8
  454ce0:	b.ne	454724 <_obstack_memory_used@@Base+0xd7b8>  // b.any
  454ce4:	mov	w3, w20
  454ce8:	ldr	x0, [x0]
  454cec:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454cf0:	mov	x19, x4
  454cf4:	b	4547d8 <_obstack_memory_used@@Base+0xd86c>
  454cf8:	ldr	w0, [x0]
  454cfc:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454d00:	cmp	x0, x1
  454d04:	mov	x19, x4
  454d08:	cset	x0, ne  // ne = any
  454d0c:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454d10:	cmp	x0, x1
  454d14:	mov	x19, x4
  454d18:	cset	x0, lt  // lt = tstop
  454d1c:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454d20:	cmp	x0, x1
  454d24:	mov	x19, x4
  454d28:	cset	x0, le
  454d2c:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454d30:	cmp	x0, x1
  454d34:	mov	x19, x4
  454d38:	cset	x0, gt
  454d3c:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454d40:	cmp	x0, x1
  454d44:	mov	x19, x4
  454d48:	cset	x0, ge  // ge = tcont
  454d4c:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454d50:	cmp	x0, x1
  454d54:	mov	x19, x4
  454d58:	cset	x0, eq  // eq = none
  454d5c:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454d60:	eor	x0, x0, x1
  454d64:	mov	x19, x4
  454d68:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454d6c:	mov	x19, x4
  454d70:	asr	x0, x0, x1
  454d74:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454d78:	mov	x19, x4
  454d7c:	lsr	x0, x0, x1
  454d80:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454d84:	mov	x19, x4
  454d88:	lsl	x0, x0, x1
  454d8c:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454d90:	add	x0, x0, x1
  454d94:	mov	x19, x4
  454d98:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454d9c:	orr	x0, x0, x1
  454da0:	mov	x19, x4
  454da4:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454da8:	mul	x0, x0, x1
  454dac:	mov	x19, x4
  454db0:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454db4:	udiv	x2, x0, x1
  454db8:	mov	x19, x4
  454dbc:	msub	x0, x2, x1, x0
  454dc0:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454dc4:	sub	x0, x0, x1
  454dc8:	mov	x19, x4
  454dcc:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454dd0:	sdiv	x0, x0, x1
  454dd4:	mov	x19, x4
  454dd8:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454ddc:	and	x0, x0, x1
  454de0:	mov	x19, x4
  454de4:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454de8:	cntd	x0
  454dec:	sxtw	x0, w0
  454df0:	add	x0, x3, x0
  454df4:	b	454bf8 <_obstack_memory_used@@Base+0xdc8c>
  454df8:	cntd	x0
  454dfc:	mov	w3, w20
  454e00:	sxtw	x0, w0
  454e04:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454e08:	mvn	x0, x0
  454e0c:	mov	x19, x4
  454e10:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454e14:	cmp	w1, #0x2
  454e18:	b.ne	454724 <_obstack_memory_used@@Base+0xd7b8>  // b.any
  454e1c:	ldrh	w0, [x0]
  454e20:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454e24:	cmp	w1, #0x8
  454e28:	b.ne	454724 <_obstack_memory_used@@Base+0xd7b8>  // b.any
  454e2c:	ldr	x0, [x0]
  454e30:	b	4547c8 <_obstack_memory_used@@Base+0xd85c>
  454e34:	nop
  454e38:	sub	sp, sp, #0x440
  454e3c:	mov	x2, #0x3c0                 	// #960
  454e40:	stp	x29, x30, [sp]
  454e44:	mov	x29, sp
  454e48:	stp	x27, x28, [sp, #80]
  454e4c:	add	x28, sp, #0x80
  454e50:	mov	x27, x0
  454e54:	stp	x19, x20, [sp, #16]
  454e58:	stp	x21, x22, [sp, #32]
  454e5c:	stp	x23, x24, [sp, #48]
  454e60:	stp	x25, x26, [sp, #64]
  454e64:	str	x1, [sp, #104]
  454e68:	mov	x1, x0
  454e6c:	mov	x0, x28
  454e70:	bl	402260 <memcpy@plt>
  454e74:	ldr	x1, [sp, #960]
  454e78:	tbz	x1, #62, 454e84 <_obstack_memory_used@@Base+0xdf18>
  454e7c:	ldrb	w0, [sp, #1015]
  454e80:	cbnz	w0, 454e8c <_obstack_memory_used@@Base+0xdf20>
  454e84:	ldr	x0, [x28, #248]
  454e88:	cbz	x0, 455158 <_obstack_memory_used@@Base+0xe1ec>
  454e8c:	ldr	x0, [x27, #832]
  454e90:	tbz	x0, #62, 454e98 <_obstack_memory_used@@Base+0xdf2c>
  454e94:	strb	wzr, [x27, #887]
  454e98:	ldr	x0, [sp, #104]
  454e9c:	ldr	w0, [x0, #1600]
  454ea0:	str	xzr, [x27, #248]
  454ea4:	cmp	w0, #0x1
  454ea8:	b.ne	454ef8 <_obstack_memory_used@@Base+0xdf8c>  // b.any
  454eac:	ldr	x0, [sp, #104]
  454eb0:	ldr	x0, [x0, #1584]
  454eb4:	cmp	w0, #0x61
  454eb8:	b.gt	4550c0 <_obstack_memory_used@@Base+0xe154>
  454ebc:	sxtw	x2, w0
  454ec0:	ldr	x3, [x28, x2, lsl #3]
  454ec4:	tbnz	x1, #62, 455138 <_obstack_memory_used@@Base+0xe1cc>
  454ec8:	cmp	w0, #0x2e
  454ecc:	b.eq	45514c <_obstack_memory_used@@Base+0xe1e0>  // b.none
  454ed0:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  454ed4:	add	x0, x0, #0x938
  454ed8:	ldrb	w0, [x0, x2]
  454edc:	cmp	w0, #0x8
  454ee0:	b.ne	4550c0 <_obstack_memory_used@@Base+0xe154>  // b.any
  454ee4:	ldr	x3, [x3]
  454ee8:	ldr	x0, [sp, #104]
  454eec:	ldr	x0, [x0, #1576]
  454ef0:	add	x22, x3, x0
  454ef4:	b	454f3c <_obstack_memory_used@@Base+0xdfd0>
  454ef8:	cmp	w0, #0x2
  454efc:	b.ne	4550c0 <_obstack_memory_used@@Base+0xe154>  // b.any
  454f00:	ldr	x0, [sp, #104]
  454f04:	mov	x1, #0x0                   	// #0
  454f08:	mov	w3, #0x0                   	// #0
  454f0c:	ldr	x0, [x0, #1592]
  454f10:	ldrb	w4, [x0], #1
  454f14:	and	x2, x4, #0x7f
  454f18:	lsl	x2, x2, x3
  454f1c:	add	w3, w3, #0x7
  454f20:	orr	x1, x1, x2
  454f24:	tbnz	w4, #7, 454f10 <_obstack_memory_used@@Base+0xdfa4>
  454f28:	add	x1, x0, x1
  454f2c:	mov	x2, x28
  454f30:	mov	x3, #0x0                   	// #0
  454f34:	bl	4546c0 <_obstack_memory_used@@Base+0xd754>
  454f38:	mov	x22, x0
  454f3c:	ldr	x25, [sp, #104]
  454f40:	adrp	x23, 488000 <_obstack_memory_used@@Base+0x41094>
  454f44:	add	x26, x27, #0x358
  454f48:	add	x20, x23, #0x938
  454f4c:	add	x21, sp, #0x3d8
  454f50:	mov	x24, #0x0                   	// #0
  454f54:	mov	w19, #0x1                   	// #1
  454f58:	str	x22, [x27, #784]
  454f5c:	nop
  454f60:	ldr	w2, [x25, #8]
  454f64:	cmp	w2, #0x3
  454f68:	b.eq	45500c <_obstack_memory_used@@Base+0xe0a0>  // b.none
  454f6c:	b.hi	455050 <_obstack_memory_used@@Base+0xe0e4>  // b.pmore
  454f70:	cmp	w2, #0x1
  454f74:	b.eq	4550c4 <_obstack_memory_used@@Base+0xe158>  // b.none
  454f78:	cmp	w2, #0x2
  454f7c:	b.ne	454fa4 <_obstack_memory_used@@Base+0xe038>  // b.any
  454f80:	ldr	x0, [x25]
  454f84:	ldrb	w2, [x21, w0, sxtw]
  454f88:	sxtw	x1, w0
  454f8c:	cbnz	w2, 4550dc <_obstack_memory_used@@Base+0xe170>
  454f90:	ldr	x2, [x27, #832]
  454f94:	ldr	x0, [x28, x1, lsl #3]
  454f98:	tbnz	x2, #62, 455048 <_obstack_memory_used@@Base+0xe0dc>
  454f9c:	nop
  454fa0:	str	x0, [x27, x24, lsl #3]
  454fa4:	add	x24, x24, #0x1
  454fa8:	add	x25, x25, #0x10
  454fac:	cmp	x24, #0x62
  454fb0:	add	x26, x26, #0x1
  454fb4:	b.ne	454f60 <_obstack_memory_used@@Base+0xdff4>  // b.any
  454fb8:	ldr	x3, [sp, #104]
  454fbc:	ldr	x0, [x27, #832]
  454fc0:	ldrb	w2, [x3, #1651]
  454fc4:	orr	x1, x0, #0x8000000000000000
  454fc8:	and	x0, x0, #0x7fffffffffffffff
  454fcc:	cmp	w2, #0x0
  454fd0:	csel	x0, x0, x1, eq  // eq = none
  454fd4:	ldp	x29, x30, [sp]
  454fd8:	orr	x1, x0, #0x2000000000000000
  454fdc:	ldp	x19, x20, [sp, #16]
  454fe0:	ldp	x21, x22, [sp, #32]
  454fe4:	ldp	x23, x24, [sp, #48]
  454fe8:	ldp	x25, x26, [sp, #64]
  454fec:	str	x0, [x27, #832]
  454ff0:	ldr	x2, [x3, #544]
  454ff4:	tst	x2, #0x1
  454ff8:	csel	x0, x1, x0, ne  // ne = any
  454ffc:	str	x0, [x27, #832]
  455000:	ldp	x27, x28, [sp, #80]
  455004:	add	sp, sp, #0x440
  455008:	ret
  45500c:	ldr	x0, [x25]
  455010:	mov	x1, #0x0                   	// #0
  455014:	mov	w4, #0x0                   	// #0
  455018:	ldrb	w5, [x0], #1
  45501c:	and	x2, x5, #0x7f
  455020:	lsl	x2, x2, x4
  455024:	add	w4, w4, #0x7
  455028:	orr	x1, x1, x2
  45502c:	tbnz	w5, #7, 455018 <_obstack_memory_used@@Base+0xe0ac>
  455030:	add	x1, x0, x1
  455034:	mov	x3, x22
  455038:	mov	x2, x28
  45503c:	bl	4546c0 <_obstack_memory_used@@Base+0xd754>
  455040:	ldr	x1, [x27, #832]
  455044:	tbz	x1, #62, 454fa0 <_obstack_memory_used@@Base+0xe034>
  455048:	strb	wzr, [x26]
  45504c:	b	454fa0 <_obstack_memory_used@@Base+0xe034>
  455050:	cmp	w2, #0x4
  455054:	b.eq	4550ac <_obstack_memory_used@@Base+0xe140>  // b.none
  455058:	cmp	w2, #0x5
  45505c:	b.ne	454fa4 <_obstack_memory_used@@Base+0xe038>  // b.any
  455060:	ldr	x0, [x25]
  455064:	mov	x1, #0x0                   	// #0
  455068:	mov	w4, #0x0                   	// #0
  45506c:	nop
  455070:	ldrb	w5, [x0], #1
  455074:	and	x2, x5, #0x7f
  455078:	lsl	x2, x2, x4
  45507c:	add	w4, w4, #0x7
  455080:	orr	x1, x1, x2
  455084:	tbnz	w5, #7, 455070 <_obstack_memory_used@@Base+0xe104>
  455088:	add	x1, x0, x1
  45508c:	mov	x3, x22
  455090:	mov	x2, x28
  455094:	bl	4546c0 <_obstack_memory_used@@Base+0xd754>
  455098:	ldrb	w1, [x24, x20]
  45509c:	cmp	w1, #0x8
  4550a0:	b.hi	4550c0 <_obstack_memory_used@@Base+0xe154>  // b.pmore
  4550a4:	strb	w19, [x26]
  4550a8:	b	454fa0 <_obstack_memory_used@@Base+0xe034>
  4550ac:	ldr	x0, [x25]
  4550b0:	ldrb	w1, [x24, x20]
  4550b4:	add	x0, x22, x0
  4550b8:	cmp	w1, #0x8
  4550bc:	b.ls	4550a4 <_obstack_memory_used@@Base+0xe138>  // b.plast
  4550c0:	bl	402590 <abort@plt>
  4550c4:	ldr	x1, [x27, #832]
  4550c8:	ldr	x0, [x25]
  4550cc:	add	x0, x22, x0
  4550d0:	tbz	x1, #62, 454fa0 <_obstack_memory_used@@Base+0xe034>
  4550d4:	strb	wzr, [x26]
  4550d8:	b	454fa0 <_obstack_memory_used@@Base+0xe034>
  4550dc:	cmp	w0, #0x61
  4550e0:	b.gt	4550c0 <_obstack_memory_used@@Base+0xe154>
  4550e4:	ldr	x4, [sp, #960]
  4550e8:	ldr	x2, [x28, x1, lsl #3]
  4550ec:	tbz	x4, #62, 455110 <_obstack_memory_used@@Base+0xe1a4>
  4550f0:	mov	x0, x2
  4550f4:	nop
  4550f8:	add	x1, x23, #0x938
  4550fc:	ldrb	w1, [x24, x1]
  455100:	cmp	w1, #0x8
  455104:	b.hi	4550c0 <_obstack_memory_used@@Base+0xe154>  // b.pmore
  455108:	strb	w19, [x26]
  45510c:	b	454fa0 <_obstack_memory_used@@Base+0xe034>
  455110:	cmp	w0, #0x2e
  455114:	b.eq	45512c <_obstack_memory_used@@Base+0xe1c0>  // b.none
  455118:	ldrb	w0, [x20, x1]
  45511c:	cmp	w0, #0x8
  455120:	b.ne	4550c0 <_obstack_memory_used@@Base+0xe154>  // b.any
  455124:	ldr	x0, [x2]
  455128:	b	4550f8 <_obstack_memory_used@@Base+0xe18c>
  45512c:	cntd	x0
  455130:	sxtw	x0, w0
  455134:	b	4550f8 <_obstack_memory_used@@Base+0xe18c>
  455138:	add	x1, sp, #0x3d8
  45513c:	ldrb	w1, [x1, x2]
  455140:	cbnz	w1, 454ee8 <_obstack_memory_used@@Base+0xdf7c>
  455144:	cmp	w0, #0x2e
  455148:	b.ne	454ed0 <_obstack_memory_used@@Base+0xdf64>  // b.any
  45514c:	cntd	x0
  455150:	sxtw	x3, w0
  455154:	b	454ee8 <_obstack_memory_used@@Base+0xdf7c>
  455158:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  45515c:	ldr	x2, [x27, #784]
  455160:	ldrb	w0, [x0, #2391]
  455164:	cmp	w0, #0x8
  455168:	b.ne	4550c0 <_obstack_memory_used@@Base+0xe154>  // b.any
  45516c:	str	x2, [sp, #120]
  455170:	tbz	x1, #62, 455178 <_obstack_memory_used@@Base+0xe20c>
  455174:	strb	wzr, [sp, #1015]
  455178:	add	x0, sp, #0x78
  45517c:	str	x0, [x28, #248]
  455180:	b	454e8c <_obstack_memory_used@@Base+0xdf20>
  455184:	nop
  455188:	sub	sp, sp, #0x6d0
  45518c:	stp	x29, x30, [sp]
  455190:	mov	x29, sp
  455194:	xpaclri
  455198:	stp	x19, x20, [sp, #16]
  45519c:	mov	x19, x0
  4551a0:	mov	x20, x30
  4551a4:	stp	x21, x22, [sp, #32]
  4551a8:	mov	x22, x1
  4551ac:	mov	x21, x2
  4551b0:	mov	w1, #0x0                   	// #0
  4551b4:	mov	x2, #0x3c0                 	// #960
  4551b8:	str	x23, [sp, #48]
  4551bc:	bl	402490 <memset@plt>
  4551c0:	mov	x0, #0x4000000000000000    	// #4611686018427387904
  4551c4:	str	x20, [x19, #792]
  4551c8:	str	x0, [x19, #832]
  4551cc:	add	x23, sp, #0x50
  4551d0:	mov	x1, x23
  4551d4:	mov	x0, x19
  4551d8:	bl	454008 <_obstack_memory_used@@Base+0xd09c>
  4551dc:	cbnz	w0, 4553d0 <_obstack_memory_used@@Base+0xe464>
  4551e0:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x40094>
  4551e4:	adrp	x20, 488000 <_obstack_memory_used@@Base+0x41094>
  4551e8:	ldr	x0, [x0, #3880]
  4551ec:	cbz	x0, 455274 <_obstack_memory_used@@Base+0xe308>
  4551f0:	add	x0, x20, #0x938
  4551f4:	adrp	x1, 453000 <_obstack_memory_used@@Base+0xc094>
  4551f8:	add	x0, x0, #0x64
  4551fc:	add	x1, x1, #0xeb0
  455200:	bl	4025f0 <pthread_once@plt>
  455204:	cbnz	w0, 455274 <_obstack_memory_used@@Base+0xe308>
  455208:	add	x20, x20, #0x938
  45520c:	ldrb	w0, [x20, #31]
  455210:	cmp	w0, #0x8
  455214:	b.ne	4553d0 <_obstack_memory_used@@Base+0xe464>  // b.any
  455218:	ldr	x0, [x19, #832]
  45521c:	str	x22, [sp, #72]
  455220:	tbz	x0, #62, 455228 <_obstack_memory_used@@Base+0xe2bc>
  455224:	strb	wzr, [x19, #887]
  455228:	add	x0, sp, #0x48
  45522c:	mov	x3, #0x1f                  	// #31
  455230:	mov	w2, #0x1                   	// #1
  455234:	str	x0, [x19, #248]
  455238:	mov	x1, x23
  45523c:	mov	x0, x19
  455240:	str	xzr, [sp, #1656]
  455244:	str	x3, [sp, #1664]
  455248:	str	w2, [sp, #1680]
  45524c:	bl	454e38 <_obstack_memory_used@@Base+0xdecc>
  455250:	mov	x30, x21
  455254:	xpaclri
  455258:	ldp	x21, x22, [sp, #32]
  45525c:	ldr	x23, [sp, #48]
  455260:	str	x30, [x19, #792]
  455264:	ldp	x29, x30, [sp]
  455268:	ldp	x19, x20, [sp, #16]
  45526c:	add	sp, sp, #0x6d0
  455270:	ret
  455274:	ldrb	w0, [x20, #2360]
  455278:	add	x3, x20, #0x938
  45527c:	cbnz	w0, 455208 <_obstack_memory_used@@Base+0xe29c>
  455280:	mov	w4, #0x8                   	// #8
  455284:	strb	w4, [x20, #2360]
  455288:	strb	w4, [x3, #1]
  45528c:	strb	w4, [x3, #2]
  455290:	strb	w4, [x3, #3]
  455294:	strb	w4, [x3, #4]
  455298:	strb	w4, [x3, #5]
  45529c:	strb	w4, [x3, #6]
  4552a0:	strb	w4, [x3, #7]
  4552a4:	strb	w4, [x3, #8]
  4552a8:	strb	w4, [x3, #9]
  4552ac:	strb	w4, [x3, #10]
  4552b0:	strb	w4, [x3, #11]
  4552b4:	strb	w4, [x3, #12]
  4552b8:	strb	w4, [x3, #13]
  4552bc:	strb	w4, [x3, #14]
  4552c0:	strb	w4, [x3, #15]
  4552c4:	strb	w4, [x3, #16]
  4552c8:	strb	w4, [x3, #17]
  4552cc:	strb	w4, [x3, #18]
  4552d0:	strb	w4, [x3, #19]
  4552d4:	strb	w4, [x3, #20]
  4552d8:	strb	w4, [x3, #21]
  4552dc:	strb	w4, [x3, #22]
  4552e0:	strb	w4, [x3, #23]
  4552e4:	strb	w4, [x3, #24]
  4552e8:	strb	w4, [x3, #25]
  4552ec:	strb	w4, [x3, #26]
  4552f0:	strb	w4, [x3, #27]
  4552f4:	strb	w4, [x3, #28]
  4552f8:	strb	w4, [x3, #29]
  4552fc:	strb	w4, [x3, #30]
  455300:	strb	w4, [x3, #31]
  455304:	strb	w4, [x3, #64]
  455308:	strb	w4, [x3, #46]
  45530c:	strb	w4, [x3, #65]
  455310:	strb	w4, [x3, #66]
  455314:	strb	w4, [x3, #67]
  455318:	strb	w4, [x3, #68]
  45531c:	strb	w4, [x3, #69]
  455320:	strb	w4, [x3, #70]
  455324:	strb	w4, [x3, #71]
  455328:	strb	w4, [x3, #72]
  45532c:	strb	w4, [x3, #73]
  455330:	strb	w4, [x3, #74]
  455334:	strb	w4, [x3, #75]
  455338:	strb	w4, [x3, #76]
  45533c:	strb	w4, [x3, #77]
  455340:	strb	w4, [x3, #78]
  455344:	strb	w4, [x3, #79]
  455348:	strb	w4, [x3, #80]
  45534c:	strb	w4, [x3, #81]
  455350:	strb	w4, [x3, #82]
  455354:	strb	w4, [x3, #83]
  455358:	strb	w4, [x3, #84]
  45535c:	strb	w4, [x3, #85]
  455360:	strb	w4, [x3, #86]
  455364:	strb	w4, [x3, #87]
  455368:	strb	w4, [x3, #88]
  45536c:	strb	w4, [x3, #89]
  455370:	strb	w4, [x3, #90]
  455374:	strb	w4, [x3, #91]
  455378:	strb	w4, [x3, #92]
  45537c:	strb	w4, [x3, #93]
  455380:	strb	w4, [x3, #94]
  455384:	strb	w4, [x3, #95]
  455388:	strb	w4, [x3, #48]
  45538c:	strb	w4, [x3, #49]
  455390:	strb	w4, [x3, #50]
  455394:	strb	w4, [x3, #51]
  455398:	strb	w4, [x3, #52]
  45539c:	strb	w4, [x3, #53]
  4553a0:	strb	w4, [x3, #54]
  4553a4:	strb	w4, [x3, #55]
  4553a8:	strb	w4, [x3, #56]
  4553ac:	strb	w4, [x3, #57]
  4553b0:	strb	w4, [x3, #58]
  4553b4:	strb	w4, [x3, #59]
  4553b8:	strb	w4, [x3, #60]
  4553bc:	strb	w4, [x3, #61]
  4553c0:	strb	w4, [x3, #62]
  4553c4:	strb	w4, [x3, #63]
  4553c8:	strb	w4, [x3, #96]
  4553cc:	b	455208 <_obstack_memory_used@@Base+0xe29c>
  4553d0:	bl	402590 <abort@plt>
  4553d4:	nop
  4553d8:	stp	x29, x30, [sp, #-32]!
  4553dc:	mov	x29, sp
  4553e0:	stp	x19, x20, [sp, #16]
  4553e4:	mov	x20, x1
  4553e8:	mov	x19, x0
  4553ec:	bl	454e38 <_obstack_memory_used@@Base+0xdecc>
  4553f0:	ldr	x0, [x20, #1640]
  4553f4:	add	x1, x20, x0, lsl #4
  4553f8:	ldr	w1, [x1, #8]
  4553fc:	cmp	w1, #0x6
  455400:	b.ne	455414 <_obstack_memory_used@@Base+0xe4a8>  // b.any
  455404:	str	xzr, [x19, #792]
  455408:	ldp	x19, x20, [sp, #16]
  45540c:	ldp	x29, x30, [sp], #32
  455410:	ret
  455414:	cmp	w0, #0x61
  455418:	b.gt	455488 <_obstack_memory_used@@Base+0xe51c>
  45541c:	ldr	x2, [x19, #832]
  455420:	sxtw	x1, w0
  455424:	ldr	x17, [x19, x1, lsl #3]
  455428:	tbz	x2, #62, 455438 <_obstack_memory_used@@Base+0xe4cc>
  45542c:	add	x2, x19, x1
  455430:	ldrb	w2, [x2, #856]
  455434:	cbnz	w2, 455458 <_obstack_memory_used@@Base+0xe4ec>
  455438:	cmp	w0, #0x2e
  45543c:	b.eq	45547c <_obstack_memory_used@@Base+0xe510>  // b.none
  455440:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  455444:	add	x0, x0, #0x938
  455448:	ldrb	w0, [x0, x1]
  45544c:	cmp	w0, #0x8
  455450:	b.ne	455488 <_obstack_memory_used@@Base+0xe51c>  // b.any
  455454:	ldr	x17, [x17]
  455458:	ldr	x0, [x20, #544]
  45545c:	str	x17, [x19, #792]
  455460:	tbz	w0, #0, 45546c <_obstack_memory_used@@Base+0xe500>
  455464:	ldr	x16, [x19, #784]
  455468:	autia1716
  45546c:	str	x17, [x19, #792]
  455470:	ldp	x19, x20, [sp, #16]
  455474:	ldp	x29, x30, [sp], #32
  455478:	ret
  45547c:	cntd	x0
  455480:	sxtw	x17, w0
  455484:	b	455458 <_obstack_memory_used@@Base+0xe4ec>
  455488:	bl	402590 <abort@plt>
  45548c:	nop
  455490:	sub	sp, sp, #0x6c0
  455494:	stp	x29, x30, [sp]
  455498:	mov	x29, sp
  45549c:	stp	x19, x20, [sp, #16]
  4554a0:	mov	x19, x1
  4554a4:	stp	x21, x22, [sp, #32]
  4554a8:	mov	x21, x0
  4554ac:	add	x22, sp, #0x40
  4554b0:	stp	x23, x24, [sp, #48]
  4554b4:	mov	x24, x2
  4554b8:	mov	x23, #0x1                   	// #1
  4554bc:	nop
  4554c0:	mov	x1, x22
  4554c4:	mov	x0, x19
  4554c8:	bl	454008 <_obstack_memory_used@@Base+0xd09c>
  4554cc:	ldr	x3, [x19, #784]
  4554d0:	ldr	x1, [x19, #832]
  4554d4:	ldr	x2, [x21, #24]
  4554d8:	sub	x1, x3, x1, lsr #63
  4554dc:	cmp	x2, x1
  4554e0:	cset	w20, eq  // eq = none
  4554e4:	lsl	w20, w20, #2
  4554e8:	cbnz	w0, 455534 <_obstack_memory_used@@Base+0xe5c8>
  4554ec:	ldr	x5, [sp, #1680]
  4554f0:	cbz	x5, 45551c <_obstack_memory_used@@Base+0xe5b0>
  4554f4:	ldr	x2, [x21]
  4554f8:	mov	x4, x19
  4554fc:	mov	x3, x21
  455500:	orr	w1, w20, #0x2
  455504:	mov	w0, #0x1                   	// #1
  455508:	blr	x5
  45550c:	cmp	w0, #0x7
  455510:	b.eq	455550 <_obstack_memory_used@@Base+0xe5e4>  // b.none
  455514:	cmp	w0, #0x8
  455518:	b.ne	455534 <_obstack_memory_used@@Base+0xe5c8>  // b.any
  45551c:	cbnz	w20, 45556c <_obstack_memory_used@@Base+0xe600>
  455520:	add	x23, x23, #0x1
  455524:	mov	x1, x22
  455528:	mov	x0, x19
  45552c:	bl	4553d8 <_obstack_memory_used@@Base+0xe46c>
  455530:	b	4554c0 <_obstack_memory_used@@Base+0xe554>
  455534:	mov	w0, #0x2                   	// #2
  455538:	ldp	x29, x30, [sp]
  45553c:	ldp	x19, x20, [sp, #16]
  455540:	ldp	x21, x22, [sp, #32]
  455544:	ldp	x23, x24, [sp, #48]
  455548:	add	sp, sp, #0x6c0
  45554c:	ret
  455550:	str	x23, [x24]
  455554:	ldp	x29, x30, [sp]
  455558:	ldp	x19, x20, [sp, #16]
  45555c:	ldp	x21, x22, [sp, #32]
  455560:	ldp	x23, x24, [sp, #48]
  455564:	add	sp, sp, #0x6c0
  455568:	ret
  45556c:	bl	402590 <abort@plt>
  455570:	sub	sp, sp, #0x6d0
  455574:	stp	x29, x30, [sp]
  455578:	mov	x29, sp
  45557c:	stp	x19, x20, [sp, #16]
  455580:	mov	x20, x0
  455584:	stp	x21, x22, [sp, #32]
  455588:	mov	x21, x1
  45558c:	add	x22, sp, #0x50
  455590:	stp	x23, x24, [sp, #48]
  455594:	mov	x23, #0x1                   	// #1
  455598:	stp	x25, x26, [sp, #64]
  45559c:	mov	x26, x2
  4555a0:	ldp	x25, x24, [x0, #16]
  4555a4:	b	4555f8 <_obstack_memory_used@@Base+0xe68c>
  4555a8:	blr	x25
  4555ac:	mov	w2, w0
  4555b0:	mov	x4, x21
  4555b4:	mov	x3, x20
  4555b8:	mov	w1, #0xa                   	// #10
  4555bc:	mov	w0, #0x1                   	// #1
  4555c0:	cbnz	w2, 455644 <_obstack_memory_used@@Base+0xe6d8>
  4555c4:	ldr	x5, [sp, #1696]
  4555c8:	cbz	x5, 4555e8 <_obstack_memory_used@@Base+0xe67c>
  4555cc:	ldr	x2, [x20]
  4555d0:	blr	x5
  4555d4:	mov	w19, w0
  4555d8:	cmp	w0, #0x7
  4555dc:	b.eq	455668 <_obstack_memory_used@@Base+0xe6fc>  // b.none
  4555e0:	cmp	w0, #0x8
  4555e4:	b.ne	455644 <_obstack_memory_used@@Base+0xe6d8>  // b.any
  4555e8:	add	x23, x23, #0x1
  4555ec:	mov	x1, x22
  4555f0:	mov	x0, x21
  4555f4:	bl	4553d8 <_obstack_memory_used@@Base+0xe46c>
  4555f8:	mov	x1, x22
  4555fc:	mov	x0, x21
  455600:	bl	454008 <_obstack_memory_used@@Base+0xd09c>
  455604:	cmp	w0, #0x0
  455608:	mov	w19, w0
  45560c:	mov	x5, x24
  455610:	mov	x4, x21
  455614:	ccmp	w0, #0x5, #0x4, ne  // ne = any
  455618:	b.ne	455644 <_obstack_memory_used@@Base+0xe6d8>  // b.any
  45561c:	cmp	w0, #0x5
  455620:	mov	x3, x20
  455624:	mov	w1, #0xa                   	// #10
  455628:	mov	w0, #0x1                   	// #1
  45562c:	ldr	x2, [x20]
  455630:	b.ne	4555a8 <_obstack_memory_used@@Base+0xe63c>  // b.any
  455634:	mov	w1, #0x1a                  	// #26
  455638:	mov	w0, #0x1                   	// #1
  45563c:	blr	x25
  455640:	cbz	w0, 455668 <_obstack_memory_used@@Base+0xe6fc>
  455644:	mov	w19, #0x2                   	// #2
  455648:	mov	w0, w19
  45564c:	ldp	x29, x30, [sp]
  455650:	ldp	x19, x20, [sp, #16]
  455654:	ldp	x21, x22, [sp, #32]
  455658:	ldp	x23, x24, [sp, #48]
  45565c:	ldp	x25, x26, [sp, #64]
  455660:	add	sp, sp, #0x6d0
  455664:	ret
  455668:	str	x23, [x26]
  45566c:	mov	w0, w19
  455670:	ldp	x29, x30, [sp]
  455674:	ldp	x19, x20, [sp, #16]
  455678:	ldp	x21, x22, [sp, #32]
  45567c:	ldp	x23, x24, [sp, #48]
  455680:	ldp	x25, x26, [sp, #64]
  455684:	add	sp, sp, #0x6d0
  455688:	ret
  45568c:	nop
  455690:	cmp	w1, #0x61
  455694:	b.gt	4556ec <_obstack_memory_used@@Base+0xe780>
  455698:	ldr	x4, [x0, #832]
  45569c:	sxtw	x3, w1
  4556a0:	ldr	x2, [x0, x3, lsl #3]
  4556a4:	tbz	x4, #62, 4556b4 <_obstack_memory_used@@Base+0xe748>
  4556a8:	add	x0, x0, x3
  4556ac:	ldrb	w0, [x0, #856]
  4556b0:	cbnz	w0, 4556e4 <_obstack_memory_used@@Base+0xe778>
  4556b4:	cmp	w1, #0x2e
  4556b8:	b.eq	4556d8 <_obstack_memory_used@@Base+0xe76c>  // b.none
  4556bc:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x41094>
  4556c0:	add	x0, x0, #0x938
  4556c4:	ldrb	w0, [x0, w1, sxtw]
  4556c8:	cmp	w0, #0x8
  4556cc:	b.ne	4556ec <_obstack_memory_used@@Base+0xe780>  // b.any
  4556d0:	ldr	x0, [x2]
  4556d4:	ret
  4556d8:	cntd	x0
  4556dc:	sxtw	x0, w0
  4556e0:	ret
  4556e4:	mov	x0, x2
  4556e8:	ret
  4556ec:	stp	x29, x30, [sp, #-16]!
  4556f0:	mov	x29, sp
  4556f4:	bl	402590 <abort@plt>
  4556f8:	ldr	x0, [x0, #784]
  4556fc:	ret
  455700:	cmp	w1, #0x61
  455704:	b.gt	455748 <_obstack_memory_used@@Base+0xe7dc>
  455708:	ldr	x5, [x0, #832]
  45570c:	adrp	x3, 488000 <_obstack_memory_used@@Base+0x41094>
  455710:	add	x3, x3, #0x938
  455714:	sxtw	x4, w1
  455718:	ldrb	w1, [x3, w1, sxtw]
  45571c:	tbz	x5, #62, 45572c <_obstack_memory_used@@Base+0xe7c0>
  455720:	add	x3, x0, x4
  455724:	ldrb	w3, [x3, #856]
  455728:	cbnz	w3, 455740 <_obstack_memory_used@@Base+0xe7d4>
  45572c:	cmp	w1, #0x8
  455730:	ldr	x0, [x0, x4, lsl #3]
  455734:	b.ne	455748 <_obstack_memory_used@@Base+0xe7dc>  // b.any
  455738:	str	x2, [x0]
  45573c:	ret
  455740:	str	x2, [x0, x4, lsl #3]
  455744:	ret
  455748:	stp	x29, x30, [sp, #-16]!
  45574c:	mov	x29, sp
  455750:	bl	402590 <abort@plt>
  455754:	nop
  455758:	ldr	x0, [x0, #792]
  45575c:	ret
  455760:	ldr	x2, [x0, #832]
  455764:	ldr	x0, [x0, #792]
  455768:	lsr	x2, x2, #63
  45576c:	str	w2, [x1]
  455770:	ret
  455774:	nop
  455778:	str	x1, [x0, #792]
  45577c:	ret
  455780:	ldr	x0, [x0, #800]
  455784:	ret
  455788:	ldr	x0, [x0, #824]
  45578c:	ret
  455790:	stp	x29, x30, [sp, #-48]!
  455794:	sub	x0, x0, #0x1
  455798:	mov	x29, sp
  45579c:	add	x1, sp, #0x18
  4557a0:	bl	457748 <_obstack_memory_used@@Base+0x107dc>
  4557a4:	ldr	x1, [sp, #40]
  4557a8:	cmp	x0, #0x0
  4557ac:	ldp	x29, x30, [sp], #48
  4557b0:	csel	x0, x1, x0, ne  // ne = any
  4557b4:	ret
  4557b8:	ldr	x0, [x0, #816]
  4557bc:	ret
  4557c0:	ldr	x0, [x0, #808]
  4557c4:	ret
  4557c8:	sub	sp, sp, #0xa70
  4557cc:	mov	x2, #0x3c0                 	// #960
  4557d0:	add	x3, sp, #0x30
  4557d4:	stp	x29, x30, [sp]
  4557d8:	mov	x29, sp
  4557dc:	stp	x19, x20, [sp, #16]
  4557e0:	mov	x20, x1
  4557e4:	mov	w1, #0x0                   	// #0
  4557e8:	str	x21, [sp, #32]
  4557ec:	mov	x21, x0
  4557f0:	mov	x0, x3
  4557f4:	bl	402490 <memset@plt>
  4557f8:	mov	x2, #0x4000000000000000    	// #4611686018427387904
  4557fc:	add	x19, sp, #0x3f0
  455800:	add	x21, x21, #0x1
  455804:	mov	x1, x19
  455808:	str	x21, [sp, #840]
  45580c:	str	x2, [sp, #880]
  455810:	bl	454008 <_obstack_memory_used@@Base+0xd09c>
  455814:	cbnz	w0, 4558c0 <_obstack_memory_used@@Base+0xe954>
  455818:	ldr	w0, [sp, #2608]
  45581c:	cmp	w0, #0x2
  455820:	b.eq	4558c0 <_obstack_memory_used@@Base+0xe954>  // b.none
  455824:	sub	x4, x20, x20, lsl #3
  455828:	mov	x1, #0xffffffffffffe680    	// #-6528
  45582c:	mov	x0, x19
  455830:	add	x5, x19, #0x620
  455834:	add	x4, x4, x1
  455838:	add	x2, x20, #0x334
  45583c:	b	455854 <_obstack_memory_used@@Base+0xe8e8>
  455840:	str	xzr, [x4, x2, lsl #3]
  455844:	add	x0, x0, #0x10
  455848:	add	x2, x2, #0x1
  45584c:	cmp	x0, x5
  455850:	b.eq	455884 <_obstack_memory_used@@Base+0xe918>  // b.none
  455854:	ldrb	w3, [x0, #8]
  455858:	strb	w3, [x2]
  45585c:	cmp	w3, #0x1
  455860:	b.eq	45586c <_obstack_memory_used@@Base+0xe900>  // b.none
  455864:	cmp	w3, #0x2
  455868:	b.ne	455840 <_obstack_memory_used@@Base+0xe8d4>  // b.any
  45586c:	ldr	x3, [x0]
  455870:	str	x3, [x4, x2, lsl #3]
  455874:	add	x0, x0, #0x10
  455878:	add	x2, x2, #0x1
  45587c:	cmp	x0, x5
  455880:	b.ne	455854 <_obstack_memory_used@@Base+0xe8e8>  // b.any
  455884:	ldr	x1, [sp, #896]
  455888:	mov	x0, x20
  45588c:	ldr	x2, [sp, #2584]
  455890:	stp	x2, x1, [x20, #16]
  455894:	ldr	x2, [sp, #2592]
  455898:	strh	w2, [x20, #816]
  45589c:	ldr	x1, [sp, #2648]
  4558a0:	strh	w1, [x20, #818]
  4558a4:	ldr	x2, [sp, #2664]
  4558a8:	str	x2, [x20, #8]
  4558ac:	ldp	x29, x30, [sp]
  4558b0:	ldp	x19, x20, [sp, #16]
  4558b4:	ldr	x21, [sp, #32]
  4558b8:	add	sp, sp, #0xa70
  4558bc:	ret
  4558c0:	mov	x0, #0x0                   	// #0
  4558c4:	ldp	x29, x30, [sp]
  4558c8:	ldp	x19, x20, [sp, #16]
  4558cc:	ldr	x21, [sp, #32]
  4558d0:	add	sp, sp, #0xa70
  4558d4:	ret
  4558d8:	ret
  4558dc:	nop
  4558e0:	sub	sp, sp, #0xec0
  4558e4:	stp	x29, x30, [sp]
  4558e8:	mov	x29, sp
  4558ec:	stp	x21, x22, [sp, #64]
  4558f0:	add	x21, sp, #0xc0
  4558f4:	add	x22, sp, #0x840
  4558f8:	stp	x0, x1, [sp, #16]
  4558fc:	add	x1, sp, #0xec0
  455900:	stp	x2, x3, [sp, #32]
  455904:	mov	x2, x30
  455908:	stp	x19, x20, [sp, #48]
  45590c:	mov	x20, x0
  455910:	add	x19, sp, #0x480
  455914:	mov	x0, x21
  455918:	stp	x23, x24, [sp, #80]
  45591c:	stp	x25, x26, [sp, #96]
  455920:	stp	x27, x28, [sp, #112]
  455924:	stp	d8, d9, [sp, #128]
  455928:	stp	d10, d11, [sp, #144]
  45592c:	stp	d12, d13, [sp, #160]
  455930:	stp	d14, d15, [sp, #176]
  455934:	bl	455188 <_obstack_memory_used@@Base+0xe21c>
  455938:	mov	x1, x21
  45593c:	mov	x0, x19
  455940:	mov	x2, #0x3c0                 	// #960
  455944:	bl	402260 <memcpy@plt>
  455948:	b	45597c <_obstack_memory_used@@Base+0xea10>
  45594c:	cbnz	w2, 4559e8 <_obstack_memory_used@@Base+0xea7c>
  455950:	ldr	x5, [sp, #3728]
  455954:	cbz	x5, 455970 <_obstack_memory_used@@Base+0xea04>
  455958:	ldr	x2, [x20]
  45595c:	blr	x5
  455960:	cmp	w0, #0x6
  455964:	b.eq	4559f0 <_obstack_memory_used@@Base+0xea84>  // b.none
  455968:	cmp	w0, #0x8
  45596c:	b.ne	4559e8 <_obstack_memory_used@@Base+0xea7c>  // b.any
  455970:	mov	x1, x22
  455974:	mov	x0, x19
  455978:	bl	4553d8 <_obstack_memory_used@@Base+0xe46c>
  45597c:	mov	x1, x22
  455980:	mov	x0, x19
  455984:	bl	454008 <_obstack_memory_used@@Base+0xd09c>
  455988:	mov	w2, w0
  45598c:	mov	w1, #0x1                   	// #1
  455990:	mov	x4, x19
  455994:	mov	x3, x20
  455998:	mov	w0, w1
  45599c:	cmp	w2, #0x5
  4559a0:	b.ne	45594c <_obstack_memory_used@@Base+0xe9e0>  // b.any
  4559a4:	mov	x4, #0x0                   	// #0
  4559a8:	mov	w0, w2
  4559ac:	ldp	x29, x30, [sp]
  4559b0:	ldp	x0, x1, [sp, #16]
  4559b4:	ldp	x2, x3, [sp, #32]
  4559b8:	ldp	x19, x20, [sp, #48]
  4559bc:	ldp	x21, x22, [sp, #64]
  4559c0:	ldp	x23, x24, [sp, #80]
  4559c4:	ldp	x25, x26, [sp, #96]
  4559c8:	ldp	x27, x28, [sp, #112]
  4559cc:	ldp	d8, d9, [sp, #128]
  4559d0:	ldp	d10, d11, [sp, #144]
  4559d4:	ldp	d12, d13, [sp, #160]
  4559d8:	ldp	d14, d15, [sp, #176]
  4559dc:	add	sp, sp, #0xec0
  4559e0:	add	sp, sp, x4
  4559e4:	ret
  4559e8:	mov	w2, #0x3                   	// #3
  4559ec:	b	4559a4 <_obstack_memory_used@@Base+0xea38>
  4559f0:	ldr	x4, [sp, #1936]
  4559f4:	mov	x1, x21
  4559f8:	ldr	x3, [sp, #1984]
  4559fc:	mov	x2, #0x3c0                 	// #960
  455a00:	mov	x0, x19
  455a04:	sub	x3, x4, x3, lsr #63
  455a08:	stp	xzr, x3, [x20, #16]
  455a0c:	bl	402260 <memcpy@plt>
  455a10:	mov	x2, x22
  455a14:	mov	x1, x19
  455a18:	mov	x0, x20
  455a1c:	bl	455490 <_obstack_memory_used@@Base+0xe524>
  455a20:	mov	w2, w0
  455a24:	cmp	w0, #0x7
  455a28:	b.ne	4559a4 <_obstack_memory_used@@Base+0xea38>  // b.any
  455a2c:	mov	x1, x19
  455a30:	mov	x0, x21
  455a34:	bl	454560 <_obstack_memory_used@@Base+0xd5f4>
  455a38:	mov	x4, x0
  455a3c:	ldr	x2, [sp, #1024]
  455a40:	ldr	x1, [sp, #1944]
  455a44:	tbz	x2, #61, 455a58 <_obstack_memory_used@@Base+0xeaec>
  455a48:	mov	x17, x1
  455a4c:	ldr	x16, [sp, #976]
  455a50:	pacia1716
  455a54:	mov	x1, x17
  455a58:	ldr	x0, [sp, #1936]
  455a5c:	bl	4558d8 <_obstack_memory_used@@Base+0xe96c>
  455a60:	str	x1, [x29, #8]
  455a64:	b	4559a8 <_obstack_memory_used@@Base+0xea3c>
  455a68:	sub	sp, sp, #0x850
  455a6c:	stp	x29, x30, [sp]
  455a70:	mov	x29, sp
  455a74:	stp	x19, x20, [sp, #48]
  455a78:	mov	x19, x0
  455a7c:	mov	x20, x2
  455a80:	stp	x21, x22, [sp, #64]
  455a84:	add	x22, sp, #0xd0
  455a88:	mov	x21, x1
  455a8c:	stp	x0, x1, [sp, #16]
  455a90:	mov	x0, x22
  455a94:	add	x1, sp, #0x850
  455a98:	stp	x2, x3, [sp, #32]
  455a9c:	mov	x2, x30
  455aa0:	stp	x23, x24, [sp, #80]
  455aa4:	add	x23, sp, #0x490
  455aa8:	stp	x25, x26, [sp, #96]
  455aac:	stp	x27, x28, [sp, #112]
  455ab0:	stp	d8, d9, [sp, #128]
  455ab4:	stp	d10, d11, [sp, #144]
  455ab8:	stp	d12, d13, [sp, #160]
  455abc:	stp	d14, d15, [sp, #176]
  455ac0:	bl	455188 <_obstack_memory_used@@Base+0xe21c>
  455ac4:	mov	x1, x22
  455ac8:	mov	x2, #0x3c0                 	// #960
  455acc:	mov	x0, x23
  455ad0:	bl	402260 <memcpy@plt>
  455ad4:	stp	x21, x20, [x19, #16]
  455ad8:	mov	x0, x19
  455adc:	mov	x1, x23
  455ae0:	add	x2, sp, #0xc8
  455ae4:	bl	455570 <_obstack_memory_used@@Base+0xe604>
  455ae8:	cmp	w0, #0x7
  455aec:	mov	x4, #0x0                   	// #0
  455af0:	b.eq	455b30 <_obstack_memory_used@@Base+0xebc4>  // b.none
  455af4:	ldp	x29, x30, [sp]
  455af8:	ldp	x0, x1, [sp, #16]
  455afc:	ldp	x2, x3, [sp, #32]
  455b00:	ldp	x19, x20, [sp, #48]
  455b04:	ldp	x21, x22, [sp, #64]
  455b08:	ldp	x23, x24, [sp, #80]
  455b0c:	ldp	x25, x26, [sp, #96]
  455b10:	ldp	x27, x28, [sp, #112]
  455b14:	ldp	d8, d9, [sp, #128]
  455b18:	ldp	d10, d11, [sp, #144]
  455b1c:	ldp	d12, d13, [sp, #160]
  455b20:	ldp	d14, d15, [sp, #176]
  455b24:	add	sp, sp, #0x850
  455b28:	add	sp, sp, x4
  455b2c:	ret
  455b30:	mov	x1, x23
  455b34:	mov	x0, x22
  455b38:	bl	454560 <_obstack_memory_used@@Base+0xd5f4>
  455b3c:	mov	x4, x0
  455b40:	ldr	x2, [sp, #1040]
  455b44:	ldr	x1, [sp, #1960]
  455b48:	tbz	x2, #61, 455b5c <_obstack_memory_used@@Base+0xebf0>
  455b4c:	mov	x17, x1
  455b50:	ldr	x16, [sp, #992]
  455b54:	pacia1716
  455b58:	mov	x1, x17
  455b5c:	ldr	x0, [sp, #1952]
  455b60:	bl	4558d8 <_obstack_memory_used@@Base+0xe96c>
  455b64:	str	x1, [x29, #8]
  455b68:	b	455af4 <_obstack_memory_used@@Base+0xeb88>
  455b6c:	nop
  455b70:	sub	sp, sp, #0x850
  455b74:	stp	x29, x30, [sp]
  455b78:	mov	x29, sp
  455b7c:	stp	x19, x20, [sp, #48]
  455b80:	mov	x19, x0
  455b84:	add	x20, sp, #0xd0
  455b88:	stp	x0, x1, [sp, #16]
  455b8c:	mov	x0, x20
  455b90:	add	x1, sp, #0x850
  455b94:	stp	x2, x3, [sp, #32]
  455b98:	mov	x2, x30
  455b9c:	stp	x21, x22, [sp, #64]
  455ba0:	add	x21, sp, #0x490
  455ba4:	stp	x23, x24, [sp, #80]
  455ba8:	stp	x25, x26, [sp, #96]
  455bac:	stp	x27, x28, [sp, #112]
  455bb0:	stp	d8, d9, [sp, #128]
  455bb4:	stp	d10, d11, [sp, #144]
  455bb8:	stp	d12, d13, [sp, #160]
  455bbc:	stp	d14, d15, [sp, #176]
  455bc0:	bl	455188 <_obstack_memory_used@@Base+0xe21c>
  455bc4:	mov	x1, x20
  455bc8:	mov	x0, x21
  455bcc:	mov	x2, #0x3c0                 	// #960
  455bd0:	bl	402260 <memcpy@plt>
  455bd4:	ldr	x0, [x19, #16]
  455bd8:	cbnz	x0, 455c68 <_obstack_memory_used@@Base+0xecfc>
  455bdc:	mov	x0, x19
  455be0:	add	x2, sp, #0xc8
  455be4:	mov	x1, x21
  455be8:	bl	455490 <_obstack_memory_used@@Base+0xe524>
  455bec:	cmp	w0, #0x7
  455bf0:	b.ne	455c7c <_obstack_memory_used@@Base+0xed10>  // b.any
  455bf4:	mov	x1, x21
  455bf8:	mov	x0, x20
  455bfc:	bl	454560 <_obstack_memory_used@@Base+0xd5f4>
  455c00:	mov	x4, x0
  455c04:	ldr	x2, [sp, #1040]
  455c08:	ldr	x1, [sp, #1960]
  455c0c:	tbz	x2, #61, 455c20 <_obstack_memory_used@@Base+0xecb4>
  455c10:	mov	x17, x1
  455c14:	ldr	x16, [sp, #992]
  455c18:	pacia1716
  455c1c:	mov	x1, x17
  455c20:	ldr	x0, [sp, #1952]
  455c24:	bl	4558d8 <_obstack_memory_used@@Base+0xe96c>
  455c28:	str	x1, [x29, #8]
  455c2c:	ldp	x29, x30, [sp]
  455c30:	ldp	x0, x1, [sp, #16]
  455c34:	ldp	x2, x3, [sp, #32]
  455c38:	ldp	x19, x20, [sp, #48]
  455c3c:	ldp	x21, x22, [sp, #64]
  455c40:	ldp	x23, x24, [sp, #80]
  455c44:	ldp	x25, x26, [sp, #96]
  455c48:	ldp	x27, x28, [sp, #112]
  455c4c:	ldp	d8, d9, [sp, #128]
  455c50:	ldp	d10, d11, [sp, #144]
  455c54:	ldp	d12, d13, [sp, #160]
  455c58:	ldp	d14, d15, [sp, #176]
  455c5c:	add	sp, sp, #0x850
  455c60:	add	sp, sp, x4
  455c64:	ret
  455c68:	mov	x0, x19
  455c6c:	add	x2, sp, #0xc8
  455c70:	mov	x1, x21
  455c74:	bl	455570 <_obstack_memory_used@@Base+0xe604>
  455c78:	b	455bec <_obstack_memory_used@@Base+0xec80>
  455c7c:	bl	402590 <abort@plt>
  455c80:	sub	sp, sp, #0x850
  455c84:	stp	x29, x30, [sp]
  455c88:	mov	x29, sp
  455c8c:	stp	x0, x1, [sp, #16]
  455c90:	ldr	x1, [x0, #16]
  455c94:	stp	x2, x3, [sp, #32]
  455c98:	stp	x19, x20, [sp, #48]
  455c9c:	mov	x19, x0
  455ca0:	stp	x21, x22, [sp, #64]
  455ca4:	stp	x23, x24, [sp, #80]
  455ca8:	stp	x25, x26, [sp, #96]
  455cac:	stp	x27, x28, [sp, #112]
  455cb0:	stp	d8, d9, [sp, #128]
  455cb4:	stp	d10, d11, [sp, #144]
  455cb8:	stp	d12, d13, [sp, #160]
  455cbc:	stp	d14, d15, [sp, #176]
  455cc0:	cbnz	x1, 455d08 <_obstack_memory_used@@Base+0xed9c>
  455cc4:	bl	4558e0 <_obstack_memory_used@@Base+0xe974>
  455cc8:	mov	x4, #0x0                   	// #0
  455ccc:	ldp	x29, x30, [sp]
  455cd0:	ldp	x0, x1, [sp, #16]
  455cd4:	ldp	x2, x3, [sp, #32]
  455cd8:	ldp	x19, x20, [sp, #48]
  455cdc:	ldp	x21, x22, [sp, #64]
  455ce0:	ldp	x23, x24, [sp, #80]
  455ce4:	ldp	x25, x26, [sp, #96]
  455ce8:	ldp	x27, x28, [sp, #112]
  455cec:	ldp	d8, d9, [sp, #128]
  455cf0:	ldp	d10, d11, [sp, #144]
  455cf4:	ldp	d12, d13, [sp, #160]
  455cf8:	ldp	d14, d15, [sp, #176]
  455cfc:	add	sp, sp, #0x850
  455d00:	add	sp, sp, x4
  455d04:	ret
  455d08:	add	x20, sp, #0xd0
  455d0c:	mov	x2, x30
  455d10:	mov	x0, x20
  455d14:	add	x1, sp, #0x850
  455d18:	add	x21, sp, #0x490
  455d1c:	bl	455188 <_obstack_memory_used@@Base+0xe21c>
  455d20:	mov	x1, x20
  455d24:	mov	x2, #0x3c0                 	// #960
  455d28:	mov	x0, x21
  455d2c:	bl	402260 <memcpy@plt>
  455d30:	mov	x0, x19
  455d34:	mov	x1, x21
  455d38:	add	x2, sp, #0xc8
  455d3c:	bl	455570 <_obstack_memory_used@@Base+0xe604>
  455d40:	cmp	w0, #0x7
  455d44:	b.ne	455d84 <_obstack_memory_used@@Base+0xee18>  // b.any
  455d48:	mov	x1, x21
  455d4c:	mov	x0, x20
  455d50:	bl	454560 <_obstack_memory_used@@Base+0xd5f4>
  455d54:	mov	x4, x0
  455d58:	ldr	x2, [sp, #1040]
  455d5c:	ldr	x1, [sp, #1960]
  455d60:	tbz	x2, #61, 455d74 <_obstack_memory_used@@Base+0xee08>
  455d64:	mov	x17, x1
  455d68:	ldr	x16, [sp, #992]
  455d6c:	pacia1716
  455d70:	mov	x1, x17
  455d74:	ldr	x0, [sp, #1952]
  455d78:	bl	4558d8 <_obstack_memory_used@@Base+0xe96c>
  455d7c:	str	x1, [x29, #8]
  455d80:	b	455ccc <_obstack_memory_used@@Base+0xed60>
  455d84:	bl	402590 <abort@plt>
  455d88:	ldr	x2, [x0, #8]
  455d8c:	mov	x1, x0
  455d90:	cbz	x2, 455da0 <_obstack_memory_used@@Base+0xee34>
  455d94:	mov	x16, x2
  455d98:	mov	w0, #0x1                   	// #1
  455d9c:	br	x16
  455da0:	ret
  455da4:	nop
  455da8:	sub	sp, sp, #0xae0
  455dac:	mov	x2, x30
  455db0:	stp	x29, x30, [sp]
  455db4:	mov	x29, sp
  455db8:	stp	x19, x20, [sp, #16]
  455dbc:	add	x20, sp, #0xa0
  455dc0:	stp	x21, x22, [sp, #32]
  455dc4:	mov	x22, x1
  455dc8:	add	x21, sp, #0x460
  455dcc:	add	x1, sp, #0xae0
  455dd0:	stp	x23, x24, [sp, #48]
  455dd4:	mov	x23, x0
  455dd8:	mov	x0, x20
  455ddc:	stp	x25, x26, [sp, #64]
  455de0:	stp	x27, x28, [sp, #80]
  455de4:	stp	d8, d9, [sp, #96]
  455de8:	stp	d10, d11, [sp, #112]
  455dec:	stp	d12, d13, [sp, #128]
  455df0:	stp	d14, d15, [sp, #144]
  455df4:	bl	455188 <_obstack_memory_used@@Base+0xe21c>
  455df8:	b	455e18 <_obstack_memory_used@@Base+0xeeac>
  455dfc:	blr	x23
  455e00:	cbnz	w0, 455e3c <_obstack_memory_used@@Base+0xeed0>
  455e04:	cmp	w19, #0x5
  455e08:	b.eq	455e40 <_obstack_memory_used@@Base+0xeed4>  // b.none
  455e0c:	mov	x1, x21
  455e10:	mov	x0, x20
  455e14:	bl	4553d8 <_obstack_memory_used@@Base+0xe46c>
  455e18:	mov	x1, x21
  455e1c:	mov	x0, x20
  455e20:	bl	454008 <_obstack_memory_used@@Base+0xd09c>
  455e24:	mov	w19, w0
  455e28:	cmp	w0, #0x0
  455e2c:	mov	x1, x22
  455e30:	mov	x0, x20
  455e34:	ccmp	w19, #0x5, #0x4, ne  // ne = any
  455e38:	b.eq	455dfc <_obstack_memory_used@@Base+0xee90>  // b.none
  455e3c:	mov	w19, #0x3                   	// #3
  455e40:	mov	w0, w19
  455e44:	ldp	x29, x30, [sp]
  455e48:	ldp	x19, x20, [sp, #16]
  455e4c:	ldp	x21, x22, [sp, #32]
  455e50:	ldp	x23, x24, [sp, #48]
  455e54:	ldp	x25, x26, [sp, #64]
  455e58:	ldp	x27, x28, [sp, #80]
  455e5c:	ldp	d8, d9, [sp, #96]
  455e60:	ldp	d10, d11, [sp, #112]
  455e64:	ldp	d12, d13, [sp, #128]
  455e68:	ldp	d14, d15, [sp, #144]
  455e6c:	add	sp, sp, #0xae0
  455e70:	ret
  455e74:	nop
  455e78:	ldr	x3, [x1, #8]
  455e7c:	mov	w4, #0x1                   	// #1
  455e80:	ldr	x1, [x2, #8]
  455e84:	cmp	x3, x1
  455e88:	csetm	w0, cc  // cc = lo, ul, last
  455e8c:	csel	w0, w0, w4, ls  // ls = plast
  455e90:	ret
  455e94:	nop
  455e98:	stp	x29, x30, [sp, #-112]!
  455e9c:	mov	x29, sp
  455ea0:	stp	x21, x22, [sp, #32]
  455ea4:	lsl	w21, w3, #1
  455ea8:	stp	x25, x26, [sp, #64]
  455eac:	add	w25, w21, #0x1
  455eb0:	cmp	w25, w4
  455eb4:	b.ge	455f8c <_obstack_memory_used@@Base+0xf020>  // b.tcont
  455eb8:	mov	w22, w3
  455ebc:	stp	x19, x20, [sp, #16]
  455ec0:	mov	x20, x2
  455ec4:	stp	x23, x24, [sp, #48]
  455ec8:	mov	w23, w4
  455ecc:	mov	x24, x1
  455ed0:	stp	x27, x28, [sp, #80]
  455ed4:	mov	x27, x0
  455ed8:	b	455f30 <_obstack_memory_used@@Base+0xefc4>
  455edc:	ldr	x2, [x20, x26]
  455ee0:	blr	x24
  455ee4:	ldr	x3, [sp, #104]
  455ee8:	tbnz	w0, #31, 455f9c <_obstack_memory_used@@Base+0xf030>
  455eec:	ldr	x1, [x20, x28, lsl #3]
  455ef0:	mov	w21, w25
  455ef4:	sxtw	x26, w22
  455ef8:	mov	x2, x1
  455efc:	mov	w22, w21
  455f00:	mov	x0, x27
  455f04:	lsl	w21, w21, #1
  455f08:	ldr	x1, [x20, x26, lsl #3]
  455f0c:	blr	x24
  455f10:	tbz	w0, #31, 455f80 <_obstack_memory_used@@Base+0xf014>
  455f14:	ldr	x1, [x19]
  455f18:	add	w25, w21, #0x1
  455f1c:	ldr	x0, [x20, x26, lsl #3]
  455f20:	str	x1, [x20, x26, lsl #3]
  455f24:	str	x0, [x19]
  455f28:	cmp	w23, w25
  455f2c:	b.le	455f80 <_obstack_memory_used@@Base+0xf014>
  455f30:	sbfiz	x19, x25, #3, #32
  455f34:	sxtw	x28, w25
  455f38:	add	x26, x19, #0x8
  455f3c:	add	w21, w25, #0x1
  455f40:	add	x3, x20, x26
  455f44:	str	x3, [sp, #104]
  455f48:	cmp	w21, w23
  455f4c:	add	x19, x20, x19
  455f50:	mov	x0, x27
  455f54:	ldr	x1, [x20, x28, lsl #3]
  455f58:	b.lt	455edc <_obstack_memory_used@@Base+0xef70>  // b.tstop
  455f5c:	sxtw	x26, w22
  455f60:	mov	x2, x1
  455f64:	mov	w21, w25
  455f68:	mov	x0, x27
  455f6c:	mov	w22, w21
  455f70:	ldr	x1, [x20, x26, lsl #3]
  455f74:	lsl	w21, w21, #1
  455f78:	blr	x24
  455f7c:	tbnz	w0, #31, 455f14 <_obstack_memory_used@@Base+0xefa8>
  455f80:	ldp	x19, x20, [sp, #16]
  455f84:	ldp	x23, x24, [sp, #48]
  455f88:	ldp	x27, x28, [sp, #80]
  455f8c:	ldp	x21, x22, [sp, #32]
  455f90:	ldp	x25, x26, [sp, #64]
  455f94:	ldp	x29, x30, [sp], #112
  455f98:	ret
  455f9c:	mov	x19, x3
  455fa0:	ldr	x1, [x20, x26]
  455fa4:	b	455ef4 <_obstack_memory_used@@Base+0xef88>
  455fa8:	stp	x29, x30, [sp, #-80]!
  455fac:	mov	x29, sp
  455fb0:	stp	x19, x20, [sp, #16]
  455fb4:	ldr	x19, [x2, #8]
  455fb8:	stp	x21, x22, [sp, #32]
  455fbc:	mov	x22, x2
  455fc0:	stp	x23, x24, [sp, #48]
  455fc4:	add	x21, x2, #0x10
  455fc8:	lsr	x20, x19, #1
  455fcc:	mov	x23, x0
  455fd0:	mov	x24, x1
  455fd4:	subs	w20, w20, #0x1
  455fd8:	b.mi	456010 <_obstack_memory_used@@Base+0xf0a4>  // b.first
  455fdc:	str	x25, [sp, #64]
  455fe0:	mov	w25, w19
  455fe4:	nop
  455fe8:	mov	w3, w20
  455fec:	mov	w4, w25
  455ff0:	mov	x2, x21
  455ff4:	sub	w20, w20, #0x1
  455ff8:	mov	x1, x24
  455ffc:	mov	x0, x23
  456000:	bl	455e98 <_obstack_memory_used@@Base+0xef2c>
  456004:	cmn	w20, #0x1
  456008:	b.ne	455fe8 <_obstack_memory_used@@Base+0xf07c>  // b.any
  45600c:	ldr	x25, [sp, #64]
  456010:	sub	w19, w19, #0x1
  456014:	cmp	w19, #0x0
  456018:	sxtw	x19, w19
  45601c:	b.le	456054 <_obstack_memory_used@@Base+0xf0e8>
  456020:	ldr	x1, [x21, x19, lsl #3]
  456024:	mov	w4, w19
  456028:	ldr	x0, [x22, #16]
  45602c:	str	x1, [x22, #16]
  456030:	str	x0, [x21, x19, lsl #3]
  456034:	mov	x2, x21
  456038:	sub	x19, x19, #0x1
  45603c:	mov	x1, x24
  456040:	mov	x0, x23
  456044:	mov	w3, #0x0                   	// #0
  456048:	bl	455e98 <_obstack_memory_used@@Base+0xef2c>
  45604c:	cmp	w19, #0x0
  456050:	b.gt	456020 <_obstack_memory_used@@Base+0xf0b4>
  456054:	ldp	x19, x20, [sp, #16]
  456058:	ldp	x21, x22, [sp, #32]
  45605c:	ldp	x23, x24, [sp, #48]
  456060:	ldp	x29, x30, [sp], #80
  456064:	ret
  456068:	and	w0, w0, #0xff
  45606c:	cmp	w0, #0xff
  456070:	b.eq	4560c0 <_obstack_memory_used@@Base+0xf154>  // b.none
  456074:	and	w1, w0, #0x7
  456078:	cmp	w1, #0x2
  45607c:	b.eq	4560b8 <_obstack_memory_used@@Base+0xf14c>  // b.none
  456080:	b.ls	4560ac <_obstack_memory_used@@Base+0xf140>  // b.plast
  456084:	cmp	w1, #0x3
  456088:	mov	w0, #0x4                   	// #4
  45608c:	b.ne	456094 <_obstack_memory_used@@Base+0xf128>  // b.any
  456090:	ret
  456094:	cmp	w1, w0
  456098:	mov	w0, #0x8                   	// #8
  45609c:	b.eq	456090 <_obstack_memory_used@@Base+0xf124>  // b.none
  4560a0:	stp	x29, x30, [sp, #-16]!
  4560a4:	mov	x29, sp
  4560a8:	bl	402590 <abort@plt>
  4560ac:	mov	w0, #0x8                   	// #8
  4560b0:	cbnz	w1, 4560a0 <_obstack_memory_used@@Base+0xf134>
  4560b4:	ret
  4560b8:	mov	w0, w1
  4560bc:	ret
  4560c0:	mov	w0, #0x0                   	// #0
  4560c4:	ret
  4560c8:	and	w5, w0, #0xff
  4560cc:	cmp	w5, #0x50
  4560d0:	b.eq	4561e8 <_obstack_memory_used@@Base+0xf27c>  // b.none
  4560d4:	and	w4, w5, #0xf
  4560d8:	cmp	w4, #0x4
  4560dc:	b.eq	4560f8 <_obstack_memory_used@@Base+0xf18c>  // b.none
  4560e0:	b.ls	45610c <_obstack_memory_used@@Base+0xf1a0>  // b.plast
  4560e4:	cmp	w4, #0xb
  4560e8:	b.eq	45620c <_obstack_memory_used@@Base+0xf2a0>  // b.none
  4560ec:	b.ls	456168 <_obstack_memory_used@@Base+0xf1fc>  // b.plast
  4560f0:	cmp	w4, #0xc
  4560f4:	b.ne	45621c <_obstack_memory_used@@Base+0xf2b0>  // b.any
  4560f8:	mov	x0, x2
  4560fc:	ldr	x4, [x0], #8
  456100:	cbnz	x4, 4561c8 <_obstack_memory_used@@Base+0xf25c>
  456104:	str	x4, [x3]
  456108:	ret
  45610c:	cmp	w4, #0x2
  456110:	b.eq	4561fc <_obstack_memory_used@@Base+0xf290>  // b.none
  456114:	b.ls	456130 <_obstack_memory_used@@Base+0xf1c4>  // b.plast
  456118:	cmp	w4, #0x3
  45611c:	b.ne	45621c <_obstack_memory_used@@Base+0xf2b0>  // b.any
  456120:	mov	x0, x2
  456124:	ldr	w4, [x0], #4
  456128:	cbz	x4, 456104 <_obstack_memory_used@@Base+0xf198>
  45612c:	b	4561c8 <_obstack_memory_used@@Base+0xf25c>
  456130:	cbz	w4, 4560f8 <_obstack_memory_used@@Base+0xf18c>
  456134:	cmp	w4, #0x1
  456138:	b.ne	45621c <_obstack_memory_used@@Base+0xf2b0>  // b.any
  45613c:	mov	x0, x2
  456140:	mov	x4, #0x0                   	// #0
  456144:	mov	w7, #0x0                   	// #0
  456148:	ldrb	w8, [x0], #1
  45614c:	and	x6, x8, #0x7f
  456150:	lsl	x6, x6, x7
  456154:	add	w7, w7, #0x7
  456158:	orr	x4, x4, x6
  45615c:	tbnz	w8, #7, 456148 <_obstack_memory_used@@Base+0xf1dc>
  456160:	cbz	x4, 456104 <_obstack_memory_used@@Base+0xf198>
  456164:	b	4561c8 <_obstack_memory_used@@Base+0xf25c>
  456168:	cmp	w4, #0x9
  45616c:	b.eq	456188 <_obstack_memory_used@@Base+0xf21c>  // b.none
  456170:	cmp	w4, #0xa
  456174:	b.ne	45621c <_obstack_memory_used@@Base+0xf2b0>  // b.any
  456178:	mov	x0, x2
  45617c:	ldrsh	x4, [x0], #2
  456180:	cbz	x4, 456104 <_obstack_memory_used@@Base+0xf198>
  456184:	b	4561c8 <_obstack_memory_used@@Base+0xf25c>
  456188:	mov	x0, x2
  45618c:	mov	x4, #0x0                   	// #0
  456190:	mov	w7, #0x0                   	// #0
  456194:	ldrb	w8, [x0], #1
  456198:	and	x6, x8, #0x7f
  45619c:	lsl	x6, x6, x7
  4561a0:	add	w7, w7, #0x7
  4561a4:	orr	x4, x4, x6
  4561a8:	tbnz	w8, #7, 456194 <_obstack_memory_used@@Base+0xf228>
  4561ac:	cmp	w7, #0x3f
  4561b0:	b.hi	456100 <_obstack_memory_used@@Base+0xf194>  // b.pmore
  4561b4:	tbz	w8, #6, 456100 <_obstack_memory_used@@Base+0xf194>
  4561b8:	mov	x6, #0xffffffffffffffff    	// #-1
  4561bc:	lsl	x7, x6, x7
  4561c0:	orr	x4, x4, x7
  4561c4:	nop
  4561c8:	and	w6, w5, #0x70
  4561cc:	cmp	w6, #0x10
  4561d0:	csel	x1, x2, x1, eq  // eq = none
  4561d4:	add	x4, x4, x1
  4561d8:	tbz	w5, #7, 456104 <_obstack_memory_used@@Base+0xf198>
  4561dc:	ldr	x4, [x4]
  4561e0:	str	x4, [x3]
  4561e4:	ret
  4561e8:	add	x0, x2, #0x7
  4561ec:	and	x0, x0, #0xfffffffffffffff8
  4561f0:	ldr	x4, [x0], #8
  4561f4:	str	x4, [x3]
  4561f8:	ret
  4561fc:	mov	x0, x2
  456200:	ldrh	w4, [x0], #2
  456204:	cbz	x4, 456104 <_obstack_memory_used@@Base+0xf198>
  456208:	b	4561c8 <_obstack_memory_used@@Base+0xf25c>
  45620c:	mov	x0, x2
  456210:	ldrsw	x4, [x0], #4
  456214:	cbz	x4, 456104 <_obstack_memory_used@@Base+0xf198>
  456218:	b	4561c8 <_obstack_memory_used@@Base+0xf25c>
  45621c:	stp	x29, x30, [sp, #-16]!
  456220:	mov	x29, sp
  456224:	bl	402590 <abort@plt>
  456228:	stp	x29, x30, [sp, #-48]!
  45622c:	mov	x29, sp
  456230:	stp	x19, x20, [sp, #16]
  456234:	mov	x20, x0
  456238:	add	x19, x0, #0x9
  45623c:	mov	x0, x19
  456240:	bl	4022b0 <strlen@plt>
  456244:	ldrb	w3, [x20, #8]
  456248:	add	x0, x0, #0x1
  45624c:	add	x2, x19, x0
  456250:	cmp	w3, #0x3
  456254:	b.hi	456320 <_obstack_memory_used@@Base+0xf3b4>  // b.pmore
  456258:	ldrb	w0, [x20, #9]
  45625c:	cmp	w0, #0x7a
  456260:	b.eq	456274 <_obstack_memory_used@@Base+0xf308>  // b.none
  456264:	mov	w0, #0x0                   	// #0
  456268:	ldp	x19, x20, [sp, #16]
  45626c:	ldp	x29, x30, [sp], #48
  456270:	ret
  456274:	ldrsb	w1, [x2], #1
  456278:	tbnz	w1, #31, 456274 <_obstack_memory_used@@Base+0xf308>
  45627c:	nop
  456280:	mov	x0, x2
  456284:	ldrsb	w1, [x2], #1
  456288:	tbnz	w1, #31, 456280 <_obstack_memory_used@@Base+0xf314>
  45628c:	cmp	w3, #0x1
  456290:	b.eq	456318 <_obstack_memory_used@@Base+0xf3ac>  // b.none
  456294:	nop
  456298:	ldrsb	w0, [x2], #1
  45629c:	tbnz	w0, #31, 456298 <_obstack_memory_used@@Base+0xf32c>
  4562a0:	add	x19, x20, #0xa
  4562a4:	nop
  4562a8:	ldrsb	w1, [x2], #1
  4562ac:	tbnz	w1, #31, 4562a8 <_obstack_memory_used@@Base+0xf33c>
  4562b0:	ldrb	w0, [x20, #10]
  4562b4:	add	x20, sp, #0x28
  4562b8:	cmp	w0, #0x52
  4562bc:	b.ne	4562dc <_obstack_memory_used@@Base+0xf370>  // b.any
  4562c0:	b	456308 <_obstack_memory_used@@Base+0xf39c>
  4562c4:	add	x2, x2, #0x1
  4562c8:	cmp	w0, #0x4c
  4562cc:	b.ne	456264 <_obstack_memory_used@@Base+0xf2f8>  // b.any
  4562d0:	ldrb	w0, [x19, #1]!
  4562d4:	cmp	w0, #0x52
  4562d8:	b.eq	456308 <_obstack_memory_used@@Base+0xf39c>  // b.none
  4562dc:	cmp	w0, #0x50
  4562e0:	b.ne	4562c4 <_obstack_memory_used@@Base+0xf358>  // b.any
  4562e4:	ldrb	w0, [x2], #1
  4562e8:	mov	x3, x20
  4562ec:	mov	x1, #0x0                   	// #0
  4562f0:	and	w0, w0, #0x7f
  4562f4:	bl	4560c8 <_obstack_memory_used@@Base+0xf15c>
  4562f8:	mov	x2, x0
  4562fc:	ldrb	w0, [x19, #1]!
  456300:	cmp	w0, #0x52
  456304:	b.ne	4562dc <_obstack_memory_used@@Base+0xf370>  // b.any
  456308:	ldrb	w0, [x2]
  45630c:	ldp	x19, x20, [sp, #16]
  456310:	ldp	x29, x30, [sp], #48
  456314:	ret
  456318:	add	x2, x0, #0x2
  45631c:	b	4562a0 <_obstack_memory_used@@Base+0xf334>
  456320:	ldrb	w1, [x19, x0]
  456324:	mov	w0, #0xff                  	// #255
  456328:	cmp	w1, #0x8
  45632c:	b.ne	456268 <_obstack_memory_used@@Base+0xf2fc>  // b.any
  456330:	ldrb	w1, [x2, #1]
  456334:	cbnz	w1, 456268 <_obstack_memory_used@@Base+0xf2fc>
  456338:	add	x2, x2, #0x2
  45633c:	b	456258 <_obstack_memory_used@@Base+0xf2ec>
  456340:	and	w0, w0, #0xff
  456344:	cmp	w0, #0xff
  456348:	b.eq	456380 <_obstack_memory_used@@Base+0xf414>  // b.none
  45634c:	and	w3, w0, #0x70
  456350:	cmp	w3, #0x20
  456354:	b.eq	456398 <_obstack_memory_used@@Base+0xf42c>  // b.none
  456358:	b.ls	45636c <_obstack_memory_used@@Base+0xf400>  // b.plast
  45635c:	cmp	w3, #0x30
  456360:	b.ne	456388 <_obstack_memory_used@@Base+0xf41c>  // b.any
  456364:	ldr	x0, [x2]
  456368:	ret
  45636c:	tst	w0, #0x60
  456370:	b.eq	456380 <_obstack_memory_used@@Base+0xf414>  // b.none
  456374:	stp	x29, x30, [sp, #-16]!
  456378:	mov	x29, sp
  45637c:	bl	402590 <abort@plt>
  456380:	mov	x0, #0x0                   	// #0
  456384:	ret
  456388:	cmp	w3, #0x50
  45638c:	mov	x0, #0x0                   	// #0
  456390:	b.ne	456374 <_obstack_memory_used@@Base+0xf408>  // b.any
  456394:	ret
  456398:	ldr	x0, [x1]
  45639c:	ret
  4563a0:	stp	x29, x30, [sp, #-64]!
  4563a4:	mov	x29, sp
  4563a8:	stp	x21, x22, [sp, #32]
  4563ac:	mov	x22, x2
  4563b0:	ldrh	w21, [x0, #32]
  4563b4:	add	x2, x0, #0x10
  4563b8:	stp	x19, x20, [sp, #16]
  4563bc:	mov	x19, x0
  4563c0:	ubfx	x21, x21, #3, #8
  4563c4:	mov	x20, x1
  4563c8:	add	x1, x0, #0x8
  4563cc:	mov	w0, w21
  4563d0:	bl	456340 <_obstack_memory_used@@Base+0xf3d4>
  4563d4:	add	x2, x20, #0x8
  4563d8:	mov	x20, x0
  4563dc:	mov	x1, x20
  4563e0:	add	x3, sp, #0x30
  4563e4:	mov	w0, w21
  4563e8:	bl	4560c8 <_obstack_memory_used@@Base+0xf15c>
  4563ec:	ldrh	w0, [x19, #32]
  4563f0:	add	x2, x22, #0x8
  4563f4:	mov	x1, x20
  4563f8:	add	x3, sp, #0x38
  4563fc:	ubfx	x0, x0, #3, #8
  456400:	bl	4560c8 <_obstack_memory_used@@Base+0xf15c>
  456404:	ldp	x2, x1, [sp, #48]
  456408:	mov	w3, #0x1                   	// #1
  45640c:	ldp	x19, x20, [sp, #16]
  456410:	ldp	x21, x22, [sp, #32]
  456414:	cmp	x2, x1
  456418:	csetm	w0, cc  // cc = lo, ul, last
  45641c:	csel	w0, w0, w3, ls  // ls = plast
  456420:	ldp	x29, x30, [sp], #64
  456424:	ret
  456428:	stp	x29, x30, [sp, #-128]!
  45642c:	mov	x29, sp
  456430:	stp	x21, x22, [sp, #32]
  456434:	add	x22, x0, #0x8
  456438:	stp	x23, x24, [sp, #48]
  45643c:	add	x23, x0, #0x10
  456440:	stp	x25, x26, [sp, #64]
  456444:	mov	x26, x0
  456448:	ldrh	w0, [x0, #32]
  45644c:	stp	x19, x20, [sp, #16]
  456450:	mov	x19, x1
  456454:	mov	x20, x2
  456458:	ubfx	x24, x0, #3, #8
  45645c:	mov	x1, x22
  456460:	mov	x2, x23
  456464:	mov	x0, x24
  456468:	bl	456340 <_obstack_memory_used@@Base+0xf3d4>
  45646c:	ldr	w1, [x19]
  456470:	cbz	w1, 456504 <_obstack_memory_used@@Base+0xf598>
  456474:	stp	x27, x28, [sp, #80]
  456478:	add	x27, sp, #0x70
  45647c:	mov	x25, x0
  456480:	mov	x21, #0x0                   	// #0
  456484:	add	x0, sp, #0x78
  456488:	str	x0, [sp, #104]
  45648c:	nop
  456490:	ldr	w1, [x19, #4]
  456494:	cbz	w1, 4564ec <_obstack_memory_used@@Base+0xf580>
  456498:	ldrb	w0, [x26, #32]
  45649c:	tbz	w0, #2, 4564d0 <_obstack_memory_used@@Base+0xf564>
  4564a0:	add	x28, x19, #0x4
  4564a4:	sub	x28, x28, w1, sxtw
  4564a8:	cmp	x28, x21
  4564ac:	b.eq	4564d0 <_obstack_memory_used@@Base+0xf564>  // b.none
  4564b0:	mov	x0, x28
  4564b4:	bl	456228 <_obstack_memory_used@@Base+0xf2bc>
  4564b8:	mov	x2, x23
  4564bc:	mov	w24, w0
  4564c0:	mov	x1, x22
  4564c4:	mov	x21, x28
  4564c8:	bl	456340 <_obstack_memory_used@@Base+0xf3d4>
  4564cc:	mov	x25, x0
  4564d0:	cbnz	w24, 456520 <_obstack_memory_used@@Base+0xf5b4>
  4564d4:	ldp	x1, x0, [x19, #8]
  4564d8:	stp	x1, x0, [sp, #112]
  4564dc:	cbz	x1, 4564ec <_obstack_memory_used@@Base+0xf580>
  4564e0:	sub	x1, x20, x1
  4564e4:	cmp	x1, x0
  4564e8:	b.cc	456588 <_obstack_memory_used@@Base+0xf61c>  // b.lo, b.ul, b.last
  4564ec:	ldr	w1, [x19]
  4564f0:	add	x1, x1, #0x4
  4564f4:	add	x19, x19, x1
  4564f8:	ldr	w1, [x19]
  4564fc:	cbnz	w1, 456490 <_obstack_memory_used@@Base+0xf524>
  456500:	ldp	x27, x28, [sp, #80]
  456504:	mov	x0, #0x0                   	// #0
  456508:	ldp	x19, x20, [sp, #16]
  45650c:	ldp	x21, x22, [sp, #32]
  456510:	ldp	x23, x24, [sp, #48]
  456514:	ldp	x25, x26, [sp, #64]
  456518:	ldp	x29, x30, [sp], #128
  45651c:	ret
  456520:	and	w28, w24, #0xff
  456524:	mov	x3, x27
  456528:	add	x2, x19, #0x8
  45652c:	mov	x1, x25
  456530:	mov	w0, w28
  456534:	bl	4560c8 <_obstack_memory_used@@Base+0xf15c>
  456538:	ldr	x3, [sp, #104]
  45653c:	mov	x2, x0
  456540:	mov	x1, #0x0                   	// #0
  456544:	and	w0, w28, #0xf
  456548:	bl	4560c8 <_obstack_memory_used@@Base+0xf15c>
  45654c:	mov	w0, w28
  456550:	bl	456068 <_obstack_memory_used@@Base+0xf0fc>
  456554:	lsl	w2, w0, #3
  456558:	cmp	w0, #0x8
  45655c:	mov	x0, #0x1                   	// #1
  456560:	ldr	x1, [sp, #112]
  456564:	lsl	x2, x0, x2
  456568:	sub	x2, x2, #0x1
  45656c:	csinv	x2, x2, xzr, cc  // cc = lo, ul, last
  456570:	tst	x1, x2
  456574:	b.eq	4564ec <_obstack_memory_used@@Base+0xf580>  // b.none
  456578:	ldr	x0, [sp, #120]
  45657c:	sub	x1, x20, x1
  456580:	cmp	x1, x0
  456584:	b.cs	4564ec <_obstack_memory_used@@Base+0xf580>  // b.hs, b.nlast
  456588:	mov	x0, x19
  45658c:	ldp	x19, x20, [sp, #16]
  456590:	ldp	x21, x22, [sp, #32]
  456594:	ldp	x23, x24, [sp, #48]
  456598:	ldp	x25, x26, [sp, #64]
  45659c:	ldp	x27, x28, [sp, #80]
  4565a0:	ldp	x29, x30, [sp], #128
  4565a4:	ret
  4565a8:	stp	x29, x30, [sp, #-80]!
  4565ac:	add	x3, x1, #0x4
  4565b0:	mov	x29, sp
  4565b4:	stp	x21, x22, [sp, #32]
  4565b8:	mov	x21, x1
  4565bc:	ldrsw	x1, [x1, #4]
  4565c0:	stp	x19, x20, [sp, #16]
  4565c4:	mov	x20, x2
  4565c8:	add	x19, x0, #0x10
  4565cc:	str	x23, [sp, #48]
  4565d0:	add	x23, x0, #0x8
  4565d4:	sub	x0, x3, x1
  4565d8:	bl	456228 <_obstack_memory_used@@Base+0xf2bc>
  4565dc:	and	w22, w0, #0xff
  4565e0:	mov	x2, x19
  4565e4:	mov	x1, x23
  4565e8:	mov	w0, w22
  4565ec:	bl	456340 <_obstack_memory_used@@Base+0xf3d4>
  4565f0:	mov	x1, x0
  4565f4:	add	x3, sp, #0x40
  4565f8:	add	x2, x21, #0x8
  4565fc:	mov	w0, w22
  456600:	bl	4560c8 <_obstack_memory_used@@Base+0xf15c>
  456604:	add	x1, x20, #0x4
  456608:	ldrsw	x0, [x20, #4]
  45660c:	sub	x0, x1, x0
  456610:	bl	456228 <_obstack_memory_used@@Base+0xf2bc>
  456614:	mov	x2, x19
  456618:	and	w19, w0, #0xff
  45661c:	mov	x1, x23
  456620:	mov	w0, w19
  456624:	bl	456340 <_obstack_memory_used@@Base+0xf3d4>
  456628:	mov	x1, x0
  45662c:	add	x2, x20, #0x8
  456630:	add	x3, sp, #0x48
  456634:	mov	w0, w19
  456638:	bl	4560c8 <_obstack_memory_used@@Base+0xf15c>
  45663c:	ldp	x2, x1, [sp, #64]
  456640:	mov	w3, #0x1                   	// #1
  456644:	ldp	x19, x20, [sp, #16]
  456648:	ldp	x21, x22, [sp, #32]
  45664c:	cmp	x2, x1
  456650:	csetm	w0, cc  // cc = lo, ul, last
  456654:	csel	w0, w0, w3, ls  // ls = plast
  456658:	ldr	x23, [sp, #48]
  45665c:	ldp	x29, x30, [sp], #80
  456660:	ret
  456664:	nop
  456668:	stp	x29, x30, [sp, #-112]!
  45666c:	mov	x29, sp
  456670:	stp	x21, x22, [sp, #32]
  456674:	mov	x21, x0
  456678:	ldr	w0, [x1]
  45667c:	cbz	w0, 4567e0 <_obstack_memory_used@@Base+0xf874>
  456680:	stp	x19, x20, [sp, #16]
  456684:	mov	x19, x1
  456688:	mov	w20, #0x0                   	// #0
  45668c:	stp	x25, x26, [sp, #64]
  456690:	add	x25, sp, #0x68
  456694:	add	x26, x21, #0x8
  456698:	stp	x27, x28, [sp, #80]
  45669c:	add	x27, x21, #0x10
  4566a0:	mov	x22, #0x0                   	// #0
  4566a4:	mov	x4, #0x0                   	// #0
  4566a8:	stp	x23, x24, [sp, #48]
  4566ac:	mov	x23, #0x0                   	// #0
  4566b0:	ldr	w2, [x19, #4]
  4566b4:	cbz	w2, 45677c <_obstack_memory_used@@Base+0xf810>
  4566b8:	add	x28, x19, #0x4
  4566bc:	and	w24, w20, #0xff
  4566c0:	sub	x28, x28, w2, sxtw
  4566c4:	cmp	x28, x4
  4566c8:	b.eq	456720 <_obstack_memory_used@@Base+0xf7b4>  // b.none
  4566cc:	mov	x0, x28
  4566d0:	bl	456228 <_obstack_memory_used@@Base+0xf2bc>
  4566d4:	mov	w20, w0
  4566d8:	cmp	w0, #0xff
  4566dc:	b.eq	4567bc <_obstack_memory_used@@Base+0xf850>  // b.none
  4566e0:	and	w24, w0, #0xff
  4566e4:	mov	x2, x27
  4566e8:	mov	w0, w24
  4566ec:	mov	x1, x26
  4566f0:	bl	456340 <_obstack_memory_used@@Base+0xf3d4>
  4566f4:	mov	x23, x0
  4566f8:	ldrh	w2, [x21, #32]
  4566fc:	and	w0, w2, #0x7f8
  456700:	cmp	w0, #0x7f8
  456704:	b.eq	4567b0 <_obstack_memory_used@@Base+0xf844>  // b.none
  456708:	ubfx	x2, x2, #3, #8
  45670c:	cmp	w2, w20
  456710:	b.eq	456720 <_obstack_memory_used@@Base+0xf7b4>  // b.none
  456714:	ldrb	w0, [x21, #32]
  456718:	orr	w0, w0, #0x4
  45671c:	strb	w0, [x21, #32]
  456720:	mov	x3, x25
  456724:	add	x2, x19, #0x8
  456728:	mov	x1, x23
  45672c:	mov	w0, w24
  456730:	bl	4560c8 <_obstack_memory_used@@Base+0xf15c>
  456734:	mov	w0, w24
  456738:	bl	456068 <_obstack_memory_used@@Base+0xf0fc>
  45673c:	lsl	w2, w0, #3
  456740:	cmp	w0, #0x8
  456744:	mov	x0, #0x1                   	// #1
  456748:	ldr	x3, [sp, #104]
  45674c:	lsl	x2, x0, x2
  456750:	sub	x2, x2, #0x1
  456754:	mov	x4, x28
  456758:	csinv	x2, x2, xzr, cc  // cc = lo, ul, last
  45675c:	tst	x3, x2
  456760:	b.eq	45677c <_obstack_memory_used@@Base+0xf810>  // b.none
  456764:	ldr	x0, [x21]
  456768:	add	x22, x22, #0x1
  45676c:	cmp	x0, x3
  456770:	b.ls	456778 <_obstack_memory_used@@Base+0xf80c>  // b.plast
  456774:	str	x3, [x21]
  456778:	mov	x4, x28
  45677c:	ldr	w2, [x19]
  456780:	add	x2, x2, #0x4
  456784:	add	x19, x19, x2
  456788:	ldr	w0, [x19]
  45678c:	cbnz	w0, 4566b0 <_obstack_memory_used@@Base+0xf744>
  456790:	ldp	x19, x20, [sp, #16]
  456794:	ldp	x23, x24, [sp, #48]
  456798:	ldp	x25, x26, [sp, #64]
  45679c:	ldp	x27, x28, [sp, #80]
  4567a0:	mov	x0, x22
  4567a4:	ldp	x21, x22, [sp, #32]
  4567a8:	ldp	x29, x30, [sp], #112
  4567ac:	ret
  4567b0:	bfi	w2, w24, #3, #8
  4567b4:	strh	w2, [x21, #32]
  4567b8:	b	456720 <_obstack_memory_used@@Base+0xf7b4>
  4567bc:	mov	x22, #0xffffffffffffffff    	// #-1
  4567c0:	mov	x0, x22
  4567c4:	ldp	x19, x20, [sp, #16]
  4567c8:	ldp	x21, x22, [sp, #32]
  4567cc:	ldp	x23, x24, [sp, #48]
  4567d0:	ldp	x25, x26, [sp, #64]
  4567d4:	ldp	x27, x28, [sp, #80]
  4567d8:	ldp	x29, x30, [sp], #112
  4567dc:	ret
  4567e0:	mov	x22, #0x0                   	// #0
  4567e4:	b	4567a0 <_obstack_memory_used@@Base+0xf834>
  4567e8:	stp	x29, x30, [sp, #-112]!
  4567ec:	mov	x29, sp
  4567f0:	stp	x21, x22, [sp, #32]
  4567f4:	add	x21, x0, #0x8
  4567f8:	add	x22, x0, #0x10
  4567fc:	stp	x27, x28, [sp, #80]
  456800:	mov	x28, x0
  456804:	ldrh	w0, [x0, #32]
  456808:	stp	x19, x20, [sp, #16]
  45680c:	mov	x19, x2
  456810:	mov	x20, x1
  456814:	stp	x25, x26, [sp, #64]
  456818:	ubfx	x26, x0, #3, #8
  45681c:	mov	x2, x22
  456820:	mov	x1, x21
  456824:	mov	x0, x26
  456828:	bl	456340 <_obstack_memory_used@@Base+0xf3d4>
  45682c:	ldr	w2, [x19]
  456830:	cbz	w2, 4568c8 <_obstack_memory_used@@Base+0xf95c>
  456834:	add	x25, sp, #0x68
  456838:	stp	x23, x24, [sp, #48]
  45683c:	mov	x24, x0
  456840:	mov	x23, #0x0                   	// #0
  456844:	nop
  456848:	ldr	w2, [x19, #4]
  45684c:	cbz	w2, 4568b0 <_obstack_memory_used@@Base+0xf944>
  456850:	ldrb	w0, [x28, #32]
  456854:	tbz	w0, #2, 456888 <_obstack_memory_used@@Base+0xf91c>
  456858:	add	x27, x19, #0x4
  45685c:	sub	x27, x27, w2, sxtw
  456860:	cmp	x27, x23
  456864:	b.eq	456888 <_obstack_memory_used@@Base+0xf91c>  // b.none
  456868:	mov	x0, x27
  45686c:	bl	456228 <_obstack_memory_used@@Base+0xf2bc>
  456870:	mov	x2, x22
  456874:	mov	w26, w0
  456878:	mov	x1, x21
  45687c:	mov	x23, x27
  456880:	bl	456340 <_obstack_memory_used@@Base+0xf3d4>
  456884:	mov	x24, x0
  456888:	cbnz	w26, 4568e0 <_obstack_memory_used@@Base+0xf974>
  45688c:	ldr	x0, [x19, #8]
  456890:	cbz	x0, 4568b0 <_obstack_memory_used@@Base+0xf944>
  456894:	ldr	x2, [x20]
  456898:	cbz	x2, 4568b0 <_obstack_memory_used@@Base+0xf944>
  45689c:	ldr	x3, [x2, #8]
  4568a0:	add	x0, x3, #0x2
  4568a4:	add	x3, x3, #0x1
  4568a8:	str	x3, [x2, #8]
  4568ac:	str	x19, [x2, x0, lsl #3]
  4568b0:	ldr	w2, [x19]
  4568b4:	add	x2, x2, #0x4
  4568b8:	add	x19, x19, x2
  4568bc:	ldr	w2, [x19]
  4568c0:	cbnz	w2, 456848 <_obstack_memory_used@@Base+0xf8dc>
  4568c4:	ldp	x23, x24, [sp, #48]
  4568c8:	ldp	x19, x20, [sp, #16]
  4568cc:	ldp	x21, x22, [sp, #32]
  4568d0:	ldp	x25, x26, [sp, #64]
  4568d4:	ldp	x27, x28, [sp, #80]
  4568d8:	ldp	x29, x30, [sp], #112
  4568dc:	ret
  4568e0:	mov	x3, x25
  4568e4:	add	x2, x19, #0x8
  4568e8:	mov	x1, x24
  4568ec:	and	w27, w26, #0xff
  4568f0:	mov	w0, w27
  4568f4:	bl	4560c8 <_obstack_memory_used@@Base+0xf15c>
  4568f8:	mov	w0, w27
  4568fc:	bl	456068 <_obstack_memory_used@@Base+0xf0fc>
  456900:	lsl	w2, w0, #3
  456904:	cmp	w0, #0x8
  456908:	mov	x0, #0x1                   	// #1
  45690c:	ldr	x3, [sp, #104]
  456910:	lsl	x2, x0, x2
  456914:	sub	x2, x2, #0x1
  456918:	csinv	x2, x2, xzr, cc  // cc = lo, ul, last
  45691c:	tst	x2, x3
  456920:	b.ne	456894 <_obstack_memory_used@@Base+0xf928>  // b.any
  456924:	b	4568b0 <_obstack_memory_used@@Base+0xf944>
  456928:	stp	x29, x30, [sp, #-128]!
  45692c:	cmp	x1, #0x2f
  456930:	mov	x29, sp
  456934:	stp	x19, x20, [sp, #16]
  456938:	mov	x19, x2
  45693c:	ldr	w2, [x2, #40]
  456940:	ldr	x13, [x0]
  456944:	ccmp	w2, #0x0, #0x4, hi  // hi = pmore
  456948:	ldr	x3, [x0, #16]
  45694c:	b.ne	456a8c <_obstack_memory_used@@Base+0xfb20>  // b.any
  456950:	cmp	x1, #0x19
  456954:	b.ls	456a64 <_obstack_memory_used@@Base+0xfaf8>  // b.plast
  456958:	mov	x10, #0x0                   	// #0
  45695c:	mov	x15, #0x0                   	// #0
  456960:	ldrh	w4, [x0, #24]
  456964:	cbz	w4, 456a7c <_obstack_memory_used@@Base+0xfb10>
  456968:	mov	w0, #0x38                  	// #56
  45696c:	mov	w7, #0xe550                	// #58704
  456970:	mov	x11, #0x0                   	// #0
  456974:	mov	x12, #0x0                   	// #0
  456978:	umaddl	x4, w4, w0, x3
  45697c:	mov	x8, #0x0                   	// #0
  456980:	mov	x6, #0x0                   	// #0
  456984:	mov	x9, #0x0                   	// #0
  456988:	movk	w7, #0x6474, lsl #16
  45698c:	mov	x14, #0x1                   	// #1
  456990:	b	4569b0 <_obstack_memory_used@@Base+0xfa44>
  456994:	cmp	w0, w7
  456998:	b.eq	456a74 <_obstack_memory_used@@Base+0xfb08>  // b.none
  45699c:	cmp	w0, #0x2
  4569a0:	csel	x6, x6, x3, ne  // ne = any
  4569a4:	add	x3, x3, #0x38
  4569a8:	cmp	x4, x3
  4569ac:	b.eq	4569f8 <_obstack_memory_used@@Base+0xfa8c>  // b.none
  4569b0:	ldr	w0, [x3]
  4569b4:	cmp	w0, #0x1
  4569b8:	b.ne	456994 <_obstack_memory_used@@Base+0xfa28>  // b.any
  4569bc:	ldr	x0, [x3, #16]
  4569c0:	ldr	x5, [x19]
  4569c4:	add	x0, x13, x0
  4569c8:	cmp	x5, x0
  4569cc:	b.cc	4569a4 <_obstack_memory_used@@Base+0xfa38>  // b.lo, b.ul, b.last
  4569d0:	ldr	x2, [x3, #40]
  4569d4:	add	x3, x3, #0x38
  4569d8:	add	x2, x0, x2
  4569dc:	cmp	x5, x2
  4569e0:	csel	x11, x11, x2, cs  // cs = hs, nlast
  4569e4:	csel	x12, x12, x0, cs  // cs = hs, nlast
  4569e8:	csel	x8, x8, x14, cs  // cs = hs, nlast
  4569ec:	cmp	x4, x3
  4569f0:	b.ne	4569b0 <_obstack_memory_used@@Base+0xfa44>  // b.any
  4569f4:	nop
  4569f8:	cbz	x8, 456a7c <_obstack_memory_used@@Base+0xfb10>
  4569fc:	cmp	x1, #0x2f
  456a00:	b.ls	456a3c <_obstack_memory_used@@Base+0xfad0>  // b.plast
  456a04:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x41094>
  456a08:	add	x1, x1, #0x9a0
  456a0c:	cmp	x10, #0x0
  456a10:	ccmp	x15, #0x0, #0x4, ne  // ne = any
  456a14:	ldr	x0, [x1, #8]
  456a18:	b.eq	456a30 <_obstack_memory_used@@Base+0xfac4>  // b.none
  456a1c:	ldr	x2, [x10, #40]
  456a20:	str	x2, [x15, #40]
  456a24:	str	x0, [x10, #40]
  456a28:	mov	x0, x10
  456a2c:	str	x10, [x1, #8]
  456a30:	stp	x12, x11, [x0]
  456a34:	stp	x13, x9, [x0, #16]
  456a38:	str	x6, [x0, #32]
  456a3c:	cbz	x9, 456a7c <_obstack_memory_used@@Base+0xfb10>
  456a40:	ldr	x0, [x9, #16]
  456a44:	add	x20, x13, x0
  456a48:	ldrb	w0, [x13, x0]
  456a4c:	cmp	w0, #0x1
  456a50:	b.eq	456aec <_obstack_memory_used@@Base+0xfb80>  // b.none
  456a54:	mov	w0, #0x1                   	// #1
  456a58:	ldp	x19, x20, [sp, #16]
  456a5c:	ldp	x29, x30, [sp], #128
  456a60:	ret
  456a64:	mov	w0, #0xffffffff            	// #-1
  456a68:	ldp	x19, x20, [sp, #16]
  456a6c:	ldp	x29, x30, [sp], #128
  456a70:	ret
  456a74:	mov	x9, x3
  456a78:	b	4569a4 <_obstack_memory_used@@Base+0xfa38>
  456a7c:	mov	w0, #0x0                   	// #0
  456a80:	ldp	x19, x20, [sp, #16]
  456a84:	ldp	x29, x30, [sp], #128
  456a88:	ret
  456a8c:	ldp	x6, x7, [x0, #32]
  456a90:	adrp	x4, 488000 <_obstack_memory_used@@Base+0x41094>
  456a94:	adrp	x5, 488000 <_obstack_memory_used@@Base+0x41094>
  456a98:	ldr	x2, [x4, #1312]
  456a9c:	cmp	x6, x2
  456aa0:	b.eq	456bc0 <_obstack_memory_used@@Base+0xfc54>  // b.none
  456aa4:	add	x2, x5, #0x9a0
  456aa8:	str	x6, [x4, #1312]
  456aac:	add	x4, x2, #0x40
  456ab0:	add	x2, x2, #0x1c0
  456ab4:	str	x7, [x5, #2464]
  456ab8:	stp	xzr, xzr, [x4, #-48]
  456abc:	stur	x4, [x4, #-8]
  456ac0:	add	x4, x4, #0x30
  456ac4:	cmp	x2, x4
  456ac8:	b.ne	456ab8 <_obstack_memory_used@@Base+0xfb4c>  // b.any
  456acc:	add	x5, x5, #0x9a0
  456ad0:	mov	x10, #0x0                   	// #0
  456ad4:	add	x2, x5, #0x10
  456ad8:	mov	x15, #0x0                   	// #0
  456adc:	str	xzr, [x5, #392]
  456ae0:	str	x2, [x5, #8]
  456ae4:	str	wzr, [x19, #40]
  456ae8:	b	456960 <_obstack_memory_used@@Base+0xf9f4>
  456aec:	stp	x21, x22, [sp, #32]
  456af0:	add	x22, x19, #0x8
  456af4:	mov	x1, x22
  456af8:	stp	x23, x24, [sp, #48]
  456afc:	add	x23, x19, #0x10
  456b00:	mov	x2, x23
  456b04:	ldrb	w21, [x20, #1]
  456b08:	mov	w0, w21
  456b0c:	bl	456340 <_obstack_memory_used@@Base+0xf3d4>
  456b10:	add	x3, sp, #0x40
  456b14:	mov	x1, x0
  456b18:	add	x2, x20, #0x4
  456b1c:	mov	w0, w21
  456b20:	bl	4560c8 <_obstack_memory_used@@Base+0xf15c>
  456b24:	ldrb	w24, [x20, #2]
  456b28:	mov	x21, x0
  456b2c:	cmp	w24, #0xff
  456b30:	b.eq	456b40 <_obstack_memory_used@@Base+0xfbd4>  // b.none
  456b34:	ldrb	w0, [x20, #3]
  456b38:	cmp	w0, #0x3b
  456b3c:	b.eq	456c20 <_obstack_memory_used@@Base+0xfcb4>  // b.none
  456b40:	ldr	x2, [x19]
  456b44:	mov	x3, #0x4                   	// #4
  456b48:	ldp	x5, x4, [x19, #8]
  456b4c:	add	x0, sp, #0x50
  456b50:	ldr	x1, [sp, #64]
  456b54:	stp	xzr, x5, [sp, #80]
  456b58:	stp	x4, x1, [sp, #96]
  456b5c:	str	x3, [sp, #112]
  456b60:	bl	456428 <_obstack_memory_used@@Base+0xf4bc>
  456b64:	str	x0, [x19, #32]
  456b68:	cbz	x0, 456d38 <_obstack_memory_used@@Base+0xfdcc>
  456b6c:	ldrsw	x1, [x0, #4]
  456b70:	add	x0, x0, #0x4
  456b74:	sub	x0, x0, x1
  456b78:	bl	456228 <_obstack_memory_used@@Base+0xf2bc>
  456b7c:	and	w20, w0, #0xff
  456b80:	mov	x2, x23
  456b84:	mov	x1, x22
  456b88:	mov	w0, w20
  456b8c:	bl	456340 <_obstack_memory_used@@Base+0xf3d4>
  456b90:	ldr	x2, [x19, #32]
  456b94:	mov	x1, x0
  456b98:	add	x3, sp, #0x48
  456b9c:	mov	w0, w20
  456ba0:	add	x2, x2, #0x8
  456ba4:	bl	4560c8 <_obstack_memory_used@@Base+0xf15c>
  456ba8:	ldr	x1, [sp, #72]
  456bac:	mov	w0, #0x1                   	// #1
  456bb0:	ldp	x21, x22, [sp, #32]
  456bb4:	ldp	x23, x24, [sp, #48]
  456bb8:	str	x1, [x19, #24]
  456bbc:	b	456a68 <_obstack_memory_used@@Base+0xfafc>
  456bc0:	ldr	x2, [x5, #2464]
  456bc4:	add	x8, x5, #0x9a0
  456bc8:	cmp	x2, x7
  456bcc:	b.ne	456aa4 <_obstack_memory_used@@Base+0xfb38>  // b.any
  456bd0:	ldr	x7, [x8, #8]
  456bd4:	cbz	x7, 456958 <_obstack_memory_used@@Base+0xf9ec>
  456bd8:	mov	x10, x7
  456bdc:	mov	x15, #0x0                   	// #0
  456be0:	ldr	x6, [x19]
  456be4:	ldp	x2, x4, [x10]
  456be8:	cmp	x6, x2
  456bec:	b.cc	456bf8 <_obstack_memory_used@@Base+0xfc8c>  // b.lo, b.ul, b.last
  456bf0:	cmp	x6, x4
  456bf4:	b.cc	456d50 <_obstack_memory_used@@Base+0xfde4>  // b.lo, b.ul, b.last
  456bf8:	orr	x2, x2, x4
  456bfc:	cbz	x2, 456960 <_obstack_memory_used@@Base+0xf9f4>
  456c00:	ldr	x2, [x10, #40]
  456c04:	cbz	x2, 456960 <_obstack_memory_used@@Base+0xf9f4>
  456c08:	mov	x15, x10
  456c0c:	mov	x10, x2
  456c10:	ldp	x2, x4, [x10]
  456c14:	cmp	x6, x2
  456c18:	b.cc	456bf8 <_obstack_memory_used@@Base+0xfc8c>  // b.lo, b.ul, b.last
  456c1c:	b	456bf0 <_obstack_memory_used@@Base+0xfc84>
  456c20:	mov	x2, x23
  456c24:	mov	x1, x22
  456c28:	mov	w0, w24
  456c2c:	bl	456340 <_obstack_memory_used@@Base+0xf3d4>
  456c30:	add	x3, sp, #0x48
  456c34:	mov	x1, x0
  456c38:	mov	x2, x21
  456c3c:	mov	w0, w24
  456c40:	bl	4560c8 <_obstack_memory_used@@Base+0xf15c>
  456c44:	ldr	x3, [sp, #72]
  456c48:	cbz	x3, 456d28 <_obstack_memory_used@@Base+0xfdbc>
  456c4c:	ands	x5, x0, #0x3
  456c50:	ldr	x2, [x19]
  456c54:	b.ne	456b44 <_obstack_memory_used@@Base+0xfbd8>  // b.any
  456c58:	ldrsw	x1, [x0]
  456c5c:	add	x1, x1, x20
  456c60:	cmp	x1, x2
  456c64:	b.hi	456d28 <_obstack_memory_used@@Base+0xfdbc>  // b.pmore
  456c68:	sub	x3, x3, #0x1
  456c6c:	lsl	x1, x3, #3
  456c70:	add	x21, x0, x1
  456c74:	ldrsw	x1, [x0, x1]
  456c78:	add	x1, x1, x20
  456c7c:	cmp	x1, x2
  456c80:	b.ls	456cc4 <_obstack_memory_used@@Base+0xfd58>  // b.plast
  456c84:	cmp	x5, x3
  456c88:	b.cs	456d74 <_obstack_memory_used@@Base+0xfe08>  // b.hs, b.nlast
  456c8c:	add	x1, x5, x3
  456c90:	lsr	x1, x1, #1
  456c94:	lsl	x4, x1, #3
  456c98:	add	x21, x0, x4
  456c9c:	ldrsw	x4, [x0, x4]
  456ca0:	add	x4, x4, x20
  456ca4:	cmp	x4, x2
  456ca8:	b.hi	456d48 <_obstack_memory_used@@Base+0xfddc>  // b.pmore
  456cac:	add	x5, x1, #0x1
  456cb0:	lsl	x1, x5, #3
  456cb4:	ldrsw	x1, [x0, x1]
  456cb8:	add	x1, x1, x20
  456cbc:	cmp	x1, x2
  456cc0:	b.ls	456c84 <_obstack_memory_used@@Base+0xfd18>  // b.plast
  456cc4:	ldrsw	x22, [x21, #4]
  456cc8:	add	x22, x22, x20
  456ccc:	add	x1, x22, #0x4
  456cd0:	ldrsw	x0, [x22, #4]
  456cd4:	sub	x0, x1, x0
  456cd8:	bl	456228 <_obstack_memory_used@@Base+0xf2bc>
  456cdc:	and	w23, w0, #0xff
  456ce0:	mov	w0, w23
  456ce4:	bl	456068 <_obstack_memory_used@@Base+0xf0fc>
  456ce8:	mov	w2, w0
  456cec:	mov	x1, #0x0                   	// #0
  456cf0:	add	x2, x2, #0x8
  456cf4:	add	x3, sp, #0x50
  456cf8:	add	x2, x22, x2
  456cfc:	and	w0, w23, #0xf
  456d00:	bl	4560c8 <_obstack_memory_used@@Base+0xf15c>
  456d04:	ldrsw	x0, [x21]
  456d08:	ldr	x1, [sp, #80]
  456d0c:	add	x20, x0, x20
  456d10:	ldr	x2, [x19]
  456d14:	add	x0, x20, x1
  456d18:	cmp	x2, x0
  456d1c:	b.cs	456d24 <_obstack_memory_used@@Base+0xfdb8>  // b.hs, b.nlast
  456d20:	str	x22, [x19, #32]
  456d24:	str	x20, [x19, #24]
  456d28:	mov	w0, #0x1                   	// #1
  456d2c:	ldp	x21, x22, [sp, #32]
  456d30:	ldp	x23, x24, [sp, #48]
  456d34:	b	456a68 <_obstack_memory_used@@Base+0xfafc>
  456d38:	mov	w0, #0x1                   	// #1
  456d3c:	ldp	x21, x22, [sp, #32]
  456d40:	ldp	x23, x24, [sp, #48]
  456d44:	b	456a58 <_obstack_memory_used@@Base+0xfaec>
  456d48:	mov	x3, x1
  456d4c:	b	456c84 <_obstack_memory_used@@Base+0xfd18>
  456d50:	cmp	x10, x7
  456d54:	ldp	x13, x9, [x10, #16]
  456d58:	b.eq	456a3c <_obstack_memory_used@@Base+0xfad0>  // b.none
  456d5c:	add	x5, x5, #0x9a0
  456d60:	ldr	x0, [x10, #40]
  456d64:	str	x0, [x15, #40]
  456d68:	str	x10, [x5, #8]
  456d6c:	str	x7, [x10, #40]
  456d70:	b	456a3c <_obstack_memory_used@@Base+0xfad0>
  456d74:	bl	402590 <abort@plt>
  456d78:	stp	x29, x30, [sp, #-160]!
  456d7c:	mov	x29, sp
  456d80:	stp	x19, x20, [sp, #16]
  456d84:	mov	x19, x1
  456d88:	ldrb	w1, [x0, #32]
  456d8c:	stp	x23, x24, [sp, #48]
  456d90:	mov	x24, x0
  456d94:	tbz	w1, #0, 456e00 <_obstack_memory_used@@Base+0xfe94>
  456d98:	stp	x27, x28, [sp, #80]
  456d9c:	ldr	x27, [x24, #24]
  456da0:	tbnz	w1, #2, 456e74 <_obstack_memory_used@@Base+0xff08>
  456da4:	ldrh	w0, [x24, #32]
  456da8:	tst	w0, #0x7f8
  456dac:	b.ne	456fd4 <_obstack_memory_used@@Base+0x10068>  // b.any
  456db0:	mov	x2, #0x0                   	// #0
  456db4:	ldr	x1, [x27, #8]
  456db8:	b	456ddc <_obstack_memory_used@@Base+0xfe70>
  456dbc:	add	x0, x1, x2
  456dc0:	lsr	x0, x0, #1
  456dc4:	add	x3, x0, #0x2
  456dc8:	ldr	x20, [x27, x3, lsl #3]
  456dcc:	ldr	x3, [x20, #8]
  456dd0:	cmp	x19, x3
  456dd4:	b.cs	456e5c <_obstack_memory_used@@Base+0xfef0>  // b.hs, b.nlast
  456dd8:	mov	x1, x0
  456ddc:	cmp	x1, x2
  456de0:	b.hi	456dbc <_obstack_memory_used@@Base+0xfe50>  // b.pmore
  456de4:	ldp	x27, x28, [sp, #80]
  456de8:	mov	x20, #0x0                   	// #0
  456dec:	mov	x0, x20
  456df0:	ldp	x19, x20, [sp, #16]
  456df4:	ldp	x23, x24, [sp, #48]
  456df8:	ldp	x29, x30, [sp], #160
  456dfc:	ret
  456e00:	stp	x25, x26, [sp, #64]
  456e04:	ldr	w25, [x0, #32]
  456e08:	stp	x21, x22, [sp, #32]
  456e0c:	tst	x25, #0xfffff800
  456e10:	lsr	w25, w25, #11
  456e14:	b.ne	45707c <_obstack_memory_used@@Base+0x10110>  // b.any
  456e18:	ldr	x20, [x0, #24]
  456e1c:	tbz	w1, #1, 456f2c <_obstack_memory_used@@Base+0xffc0>
  456e20:	ldr	x1, [x20]
  456e24:	cbnz	x1, 456e38 <_obstack_memory_used@@Base+0xfecc>
  456e28:	b	456f58 <_obstack_memory_used@@Base+0xffec>
  456e2c:	ldr	x1, [x20, #8]!
  456e30:	add	x25, x25, x0
  456e34:	cbz	x1, 456f40 <_obstack_memory_used@@Base+0xffd4>
  456e38:	mov	x0, x24
  456e3c:	bl	456668 <_obstack_memory_used@@Base+0xf6fc>
  456e40:	cmn	x0, #0x1
  456e44:	b.ne	456e2c <_obstack_memory_used@@Base+0xfec0>  // b.any
  456e48:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x20094>
  456e4c:	mov	x1, #0x7f8                 	// #2040
  456e50:	add	x0, x0, #0x480
  456e54:	stp	x0, x1, [x24, #24]
  456e58:	b	456f58 <_obstack_memory_used@@Base+0xffec>
  456e5c:	ldr	x2, [x20, #16]
  456e60:	add	x3, x3, x2
  456e64:	cmp	x19, x3
  456e68:	b.cc	457350 <_obstack_memory_used@@Base+0x103e4>  // b.lo, b.ul, b.last
  456e6c:	add	x2, x0, #0x1
  456e70:	b	456ddc <_obstack_memory_used@@Base+0xfe70>
  456e74:	ldr	x28, [x27, #8]
  456e78:	cbz	x28, 456de4 <_obstack_memory_used@@Base+0xfe78>
  456e7c:	add	x0, x24, #0x8
  456e80:	add	x23, sp, #0x88
  456e84:	stp	x21, x22, [sp, #32]
  456e88:	add	x22, sp, #0x90
  456e8c:	stp	x25, x26, [sp, #64]
  456e90:	add	x26, x24, #0x10
  456e94:	mov	x25, #0x0                   	// #0
  456e98:	str	x0, [sp, #96]
  456e9c:	b	456ebc <_obstack_memory_used@@Base+0xff50>
  456ea0:	ldr	x1, [sp, #144]
  456ea4:	add	x0, x0, x1
  456ea8:	cmp	x0, x19
  456eac:	b.hi	457348 <_obstack_memory_used@@Base+0x103dc>  // b.pmore
  456eb0:	add	x25, x24, #0x1
  456eb4:	cmp	x25, x28
  456eb8:	b.cs	456fc4 <_obstack_memory_used@@Base+0x10058>  // b.hs, b.nlast
  456ebc:	add	x24, x25, x28
  456ec0:	lsr	x24, x24, #1
  456ec4:	add	x0, x24, #0x2
  456ec8:	ldr	x20, [x27, x0, lsl #3]
  456ecc:	add	x1, x20, #0x4
  456ed0:	ldrsw	x0, [x20, #4]
  456ed4:	sub	x0, x1, x0
  456ed8:	bl	456228 <_obstack_memory_used@@Base+0xf2bc>
  456edc:	ldr	x1, [sp, #96]
  456ee0:	and	w21, w0, #0xff
  456ee4:	mov	x2, x26
  456ee8:	mov	w0, w21
  456eec:	bl	456340 <_obstack_memory_used@@Base+0xf3d4>
  456ef0:	mov	x1, x0
  456ef4:	mov	x3, x23
  456ef8:	add	x2, x20, #0x8
  456efc:	mov	w0, w21
  456f00:	bl	4560c8 <_obstack_memory_used@@Base+0xf15c>
  456f04:	mov	x3, x22
  456f08:	mov	x2, x0
  456f0c:	mov	x1, #0x0                   	// #0
  456f10:	and	w0, w21, #0xf
  456f14:	bl	4560c8 <_obstack_memory_used@@Base+0xf15c>
  456f18:	ldr	x0, [sp, #136]
  456f1c:	cmp	x0, x19
  456f20:	b.ls	456ea0 <_obstack_memory_used@@Base+0xff34>  // b.plast
  456f24:	mov	x28, x24
  456f28:	b	456eb4 <_obstack_memory_used@@Base+0xff48>
  456f2c:	mov	x1, x20
  456f30:	bl	456668 <_obstack_memory_used@@Base+0xf6fc>
  456f34:	mov	x25, x0
  456f38:	cmn	x0, #0x1
  456f3c:	b.eq	456e48 <_obstack_memory_used@@Base+0xfedc>  // b.none
  456f40:	ldr	w0, [x24, #32]
  456f44:	tst	x25, #0xffffffffffe00000
  456f48:	b.eq	45738c <_obstack_memory_used@@Base+0x10420>  // b.none
  456f4c:	and	w0, w0, #0x7ff
  456f50:	str	w0, [x24, #32]
  456f54:	cbnz	x25, 45707c <_obstack_memory_used@@Base+0x10110>
  456f58:	ldr	x0, [x24]
  456f5c:	cmp	x0, x19
  456f60:	b.hi	456fb8 <_obstack_memory_used@@Base+0x1004c>  // b.pmore
  456f64:	ldrb	w1, [x24, #32]
  456f68:	ldr	x21, [x24, #24]
  456f6c:	tbnz	w1, #0, 4573d0 <_obstack_memory_used@@Base+0x10464>
  456f70:	tbz	w1, #1, 457328 <_obstack_memory_used@@Base+0x103bc>
  456f74:	ldr	x1, [x21]
  456f78:	cbnz	x1, 456f88 <_obstack_memory_used@@Base+0x1001c>
  456f7c:	b	456fb8 <_obstack_memory_used@@Base+0x1004c>
  456f80:	ldr	x1, [x21, #8]!
  456f84:	cbz	x1, 456fb8 <_obstack_memory_used@@Base+0x1004c>
  456f88:	mov	x2, x19
  456f8c:	mov	x0, x24
  456f90:	bl	456428 <_obstack_memory_used@@Base+0xf4bc>
  456f94:	mov	x20, x0
  456f98:	cbz	x0, 456f80 <_obstack_memory_used@@Base+0x10014>
  456f9c:	mov	x0, x20
  456fa0:	ldp	x19, x20, [sp, #16]
  456fa4:	ldp	x21, x22, [sp, #32]
  456fa8:	ldp	x23, x24, [sp, #48]
  456fac:	ldp	x25, x26, [sp, #64]
  456fb0:	ldp	x29, x30, [sp], #160
  456fb4:	ret
  456fb8:	ldp	x21, x22, [sp, #32]
  456fbc:	ldp	x25, x26, [sp, #64]
  456fc0:	b	456de8 <_obstack_memory_used@@Base+0xfe7c>
  456fc4:	ldp	x21, x22, [sp, #32]
  456fc8:	ldp	x25, x26, [sp, #64]
  456fcc:	ldp	x27, x28, [sp, #80]
  456fd0:	b	456de8 <_obstack_memory_used@@Base+0xfe7c>
  456fd4:	stp	x25, x26, [sp, #64]
  456fd8:	ubfx	x25, x0, #3, #8
  456fdc:	add	x2, x24, #0x10
  456fe0:	add	x1, x24, #0x8
  456fe4:	mov	x0, x25
  456fe8:	bl	456340 <_obstack_memory_used@@Base+0xf3d4>
  456fec:	mov	x24, x0
  456ff0:	ldr	x28, [x27, #8]
  456ff4:	cbz	x28, 456fc8 <_obstack_memory_used@@Base+0x1005c>
  456ff8:	and	w0, w25, #0xf
  456ffc:	add	x23, sp, #0x88
  457000:	mov	x26, #0x0                   	// #0
  457004:	stp	x21, x22, [sp, #32]
  457008:	add	x22, sp, #0x90
  45700c:	str	w0, [sp, #96]
  457010:	b	457030 <_obstack_memory_used@@Base+0x100c4>
  457014:	ldr	x1, [sp, #144]
  457018:	add	x0, x0, x1
  45701c:	cmp	x0, x19
  457020:	b.hi	457348 <_obstack_memory_used@@Base+0x103dc>  // b.pmore
  457024:	add	x26, x21, #0x1
  457028:	cmp	x26, x28
  45702c:	b.cs	456fc4 <_obstack_memory_used@@Base+0x10058>  // b.hs, b.nlast
  457030:	add	x21, x28, x26
  457034:	mov	x3, x23
  457038:	mov	x1, x24
  45703c:	mov	w0, w25
  457040:	lsr	x21, x21, #1
  457044:	add	x2, x21, #0x2
  457048:	ldr	x20, [x27, x2, lsl #3]
  45704c:	add	x2, x20, #0x8
  457050:	bl	4560c8 <_obstack_memory_used@@Base+0xf15c>
  457054:	mov	x2, x0
  457058:	ldrb	w0, [sp, #96]
  45705c:	mov	x3, x22
  457060:	mov	x1, #0x0                   	// #0
  457064:	bl	4560c8 <_obstack_memory_used@@Base+0xf15c>
  457068:	ldr	x0, [sp, #136]
  45706c:	cmp	x0, x19
  457070:	b.ls	457014 <_obstack_memory_used@@Base+0x100a8>  // b.plast
  457074:	mov	x28, x21
  457078:	b	457028 <_obstack_memory_used@@Base+0x100bc>
  45707c:	add	x20, x25, #0x2
  457080:	lsl	x20, x20, #3
  457084:	mov	x0, x20
  457088:	bl	402410 <malloc@plt>
  45708c:	str	x0, [sp, #144]
  457090:	mov	x1, x0
  457094:	cbz	x0, 456f58 <_obstack_memory_used@@Base+0xffec>
  457098:	str	xzr, [x1, #8]
  45709c:	mov	x0, x20
  4570a0:	bl	402410 <malloc@plt>
  4570a4:	str	x0, [sp, #152]
  4570a8:	cbz	x0, 4570b0 <_obstack_memory_used@@Base+0x10144>
  4570ac:	str	xzr, [x0, #8]
  4570b0:	ldrb	w0, [x24, #32]
  4570b4:	ldr	x20, [x24, #24]
  4570b8:	tbz	w0, #1, 457364 <_obstack_memory_used@@Base+0x103f8>
  4570bc:	ldr	x2, [x20]
  4570c0:	cbz	x2, 4573c8 <_obstack_memory_used@@Base+0x1045c>
  4570c4:	add	x22, sp, #0x90
  4570c8:	mov	x1, x22
  4570cc:	mov	x0, x24
  4570d0:	bl	4567e8 <_obstack_memory_used@@Base+0xf87c>
  4570d4:	ldr	x2, [x20, #8]!
  4570d8:	cbnz	x2, 4570c8 <_obstack_memory_used@@Base+0x1015c>
  4570dc:	ldr	x0, [sp, #144]
  4570e0:	str	x0, [sp, #96]
  4570e4:	str	x0, [sp, #120]
  4570e8:	cbz	x0, 4570f8 <_obstack_memory_used@@Base+0x1018c>
  4570ec:	ldr	x0, [x0, #8]
  4570f0:	cmp	x0, x25
  4570f4:	b.ne	4573c8 <_obstack_memory_used@@Base+0x1045c>  // b.any
  4570f8:	ldrb	w0, [x24, #32]
  4570fc:	tbnz	w0, #2, 457358 <_obstack_memory_used@@Base+0x103ec>
  457100:	ldrh	w1, [x24, #32]
  457104:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xf094>
  457108:	adrp	x20, 455000 <_obstack_memory_used@@Base+0xe094>
  45710c:	add	x0, x0, #0x3a0
  457110:	tst	w1, #0x7f8
  457114:	add	x20, x20, #0xe78
  457118:	csel	x20, x20, x0, eq  // eq = none
  45711c:	ldr	x22, [sp, #152]
  457120:	cbz	x22, 457378 <_obstack_memory_used@@Base+0x1040c>
  457124:	ldr	x1, [sp, #96]
  457128:	stp	x27, x28, [sp, #80]
  45712c:	ldr	x0, [x1, #8]
  457130:	str	x0, [sp, #104]
  457134:	cbz	x0, 4573b8 <_obstack_memory_used@@Base+0x1044c>
  457138:	adrp	x3, 488000 <_obstack_memory_used@@Base+0x41094>
  45713c:	add	x3, x3, #0x9a0
  457140:	add	x0, x0, #0x1
  457144:	add	x28, x1, #0x10
  457148:	add	x27, x3, #0x190
  45714c:	mov	x21, x28
  457150:	mov	x23, x27
  457154:	lsl	x0, x0, #3
  457158:	mov	x26, #0x10                  	// #16
  45715c:	str	x0, [sp, #112]
  457160:	ldr	x0, [sp, #112]
  457164:	str	x27, [x22, x26]
  457168:	cmp	x0, x26
  45716c:	b.eq	4571c8 <_obstack_memory_used@@Base+0x1025c>  // b.none
  457170:	cmp	x21, x23
  457174:	mov	x27, x21
  457178:	b.ne	457198 <_obstack_memory_used@@Base+0x1022c>  // b.any
  45717c:	b	4571b8 <_obstack_memory_used@@Base+0x1024c>
  457180:	sub	x3, x27, x28
  457184:	add	x0, x22, x3
  457188:	ldr	x27, [x0, #16]
  45718c:	str	xzr, [x0, #16]
  457190:	cmp	x27, x23
  457194:	b.eq	4571b8 <_obstack_memory_used@@Base+0x1024c>  // b.none
  457198:	ldr	x2, [x27]
  45719c:	mov	x0, x24
  4571a0:	ldr	x1, [x21, #8]
  4571a4:	blr	x20
  4571a8:	tbnz	w0, #31, 457180 <_obstack_memory_used@@Base+0x10214>
  4571ac:	add	x21, x21, #0x8
  4571b0:	add	x26, x26, #0x8
  4571b4:	b	457160 <_obstack_memory_used@@Base+0x101f4>
  4571b8:	mov	x27, x23
  4571bc:	add	x21, x21, #0x8
  4571c0:	add	x26, x26, #0x8
  4571c4:	b	457160 <_obstack_memory_used@@Base+0x101f4>
  4571c8:	add	x6, x22, #0x10
  4571cc:	mov	x5, #0x0                   	// #0
  4571d0:	mov	x3, #0x0                   	// #0
  4571d4:	mov	x0, #0x0                   	// #0
  4571d8:	b	4571fc <_obstack_memory_used@@Base+0x10290>
  4571dc:	ldr	x4, [sp, #96]
  4571e0:	add	x1, x3, #0x2
  4571e4:	add	x3, x3, #0x1
  4571e8:	str	x2, [x4, x1, lsl #3]
  4571ec:	ldr	x1, [sp, #104]
  4571f0:	add	x0, x0, #0x1
  4571f4:	cmp	x1, x0
  4571f8:	b.eq	457218 <_obstack_memory_used@@Base+0x102ac>  // b.none
  4571fc:	ldr	x1, [x6, x0, lsl #3]
  457200:	ldr	x2, [x28, x0, lsl #3]
  457204:	cbnz	x1, 4571dc <_obstack_memory_used@@Base+0x10270>
  457208:	add	x1, x5, #0x2
  45720c:	add	x5, x5, #0x1
  457210:	str	x2, [x22, x1, lsl #3]
  457214:	b	4571ec <_obstack_memory_used@@Base+0x10280>
  457218:	ldp	x0, x2, [sp, #144]
  45721c:	str	x0, [sp, #96]
  457220:	ldr	x0, [sp, #120]
  457224:	str	x3, [x0, #8]
  457228:	ldr	x0, [sp, #96]
  45722c:	str	x5, [x22, #8]
  457230:	ldr	x1, [x2, #8]
  457234:	ldr	x0, [x0, #8]
  457238:	add	x0, x0, x1
  45723c:	cmp	x0, x25
  457240:	b.ne	4573cc <_obstack_memory_used@@Base+0x10460>  // b.any
  457244:	mov	x1, x20
  457248:	mov	x0, x24
  45724c:	bl	455fa8 <_obstack_memory_used@@Base+0xf03c>
  457250:	ldr	x25, [sp, #152]
  457254:	ldr	x22, [x25, #8]
  457258:	cbz	x22, 4572fc <_obstack_memory_used@@Base+0x10390>
  45725c:	ldr	x0, [sp, #144]
  457260:	str	x0, [sp, #96]
  457264:	add	x27, x0, #0x10
  457268:	ldr	x28, [x0, #8]
  45726c:	nop
  457270:	add	x0, x25, x22, lsl #3
  457274:	sub	x23, x22, #0x1
  457278:	ldr	x26, [x0, #8]
  45727c:	cbz	x28, 457398 <_obstack_memory_used@@Base+0x1042c>
  457280:	add	x22, x22, x28
  457284:	mov	x21, x28
  457288:	sub	x22, x22, #0x1
  45728c:	b	4572a0 <_obstack_memory_used@@Base+0x10334>
  457290:	ldr	x0, [x27, x21, lsl #3]
  457294:	str	x0, [x27, x22, lsl #3]
  457298:	sub	x22, x22, #0x1
  45729c:	cbz	x21, 4572d8 <_obstack_memory_used@@Base+0x1036c>
  4572a0:	mov	x28, x21
  4572a4:	sub	x21, x21, #0x1
  4572a8:	mov	x2, x26
  4572ac:	mov	x0, x24
  4572b0:	ldr	x1, [x27, x21, lsl #3]
  4572b4:	blr	x20
  4572b8:	cmp	w0, #0x0
  4572bc:	b.gt	457290 <_obstack_memory_used@@Base+0x10324>
  4572c0:	ldr	x0, [sp, #96]
  4572c4:	add	x22, x22, #0x2
  4572c8:	str	x26, [x0, x22, lsl #3]
  4572cc:	cbz	x23, 4572e4 <_obstack_memory_used@@Base+0x10378>
  4572d0:	mov	x22, x23
  4572d4:	b	457270 <_obstack_memory_used@@Base+0x10304>
  4572d8:	mov	x22, x23
  4572dc:	mov	x28, #0x0                   	// #0
  4572e0:	b	4572c0 <_obstack_memory_used@@Base+0x10354>
  4572e4:	ldr	x2, [sp, #96]
  4572e8:	ldr	x1, [x25, #8]
  4572ec:	ldr	x0, [x2, #8]
  4572f0:	ldr	x25, [sp, #152]
  4572f4:	add	x0, x0, x1
  4572f8:	str	x0, [x2, #8]
  4572fc:	mov	x0, x25
  457300:	bl	402690 <free@plt>
  457304:	ldp	x27, x28, [sp, #80]
  457308:	ldr	x1, [sp, #144]
  45730c:	ldrb	w0, [x24, #32]
  457310:	ldr	x2, [x24, #24]
  457314:	str	x2, [x1]
  457318:	orr	w0, w0, #0x1
  45731c:	str	x1, [x24, #24]
  457320:	strb	w0, [x24, #32]
  457324:	b	456f58 <_obstack_memory_used@@Base+0xffec>
  457328:	mov	x1, x21
  45732c:	mov	x2, x19
  457330:	mov	x0, x24
  457334:	bl	456428 <_obstack_memory_used@@Base+0xf4bc>
  457338:	mov	x20, x0
  45733c:	ldp	x21, x22, [sp, #32]
  457340:	ldp	x25, x26, [sp, #64]
  457344:	b	456dec <_obstack_memory_used@@Base+0xfe80>
  457348:	ldp	x21, x22, [sp, #32]
  45734c:	ldp	x25, x26, [sp, #64]
  457350:	ldp	x27, x28, [sp, #80]
  457354:	b	456dec <_obstack_memory_used@@Base+0xfe80>
  457358:	adrp	x20, 456000 <_obstack_memory_used@@Base+0xf094>
  45735c:	add	x20, x20, #0x5a8
  457360:	b	45711c <_obstack_memory_used@@Base+0x101b0>
  457364:	mov	x2, x20
  457368:	add	x1, sp, #0x90
  45736c:	mov	x0, x24
  457370:	bl	4567e8 <_obstack_memory_used@@Base+0xf87c>
  457374:	b	4570dc <_obstack_memory_used@@Base+0x10170>
  457378:	ldr	x2, [sp, #96]
  45737c:	mov	x1, x20
  457380:	mov	x0, x24
  457384:	bl	455fa8 <_obstack_memory_used@@Base+0xf03c>
  457388:	b	457308 <_obstack_memory_used@@Base+0x1039c>
  45738c:	bfi	w0, w25, #11, #21
  457390:	str	w0, [x24, #32]
  457394:	b	456f54 <_obstack_memory_used@@Base+0xffe8>
  457398:	ldr	x2, [sp, #96]
  45739c:	add	x1, x22, #0x1
  4573a0:	str	x26, [x2, x1, lsl #3]
  4573a4:	cbz	x23, 4572e4 <_obstack_memory_used@@Base+0x10378>
  4573a8:	sub	x23, x22, #0x2
  4573ac:	mov	x22, x23
  4573b0:	ldr	x26, [x0]
  4573b4:	b	4572c0 <_obstack_memory_used@@Base+0x10354>
  4573b8:	mov	x2, x22
  4573bc:	mov	x5, #0x0                   	// #0
  4573c0:	mov	x3, #0x0                   	// #0
  4573c4:	b	457220 <_obstack_memory_used@@Base+0x102b4>
  4573c8:	stp	x27, x28, [sp, #80]
  4573cc:	bl	402590 <abort@plt>
  4573d0:	ldp	x21, x22, [sp, #32]
  4573d4:	ldp	x25, x26, [sp, #64]
  4573d8:	b	456d98 <_obstack_memory_used@@Base+0xfe2c>
  4573dc:	nop
  4573e0:	stp	x29, x30, [sp, #-48]!
  4573e4:	mov	x5, #0xffffffffffffffff    	// #-1
  4573e8:	mov	x4, #0x7f8                 	// #2040
  4573ec:	mov	x29, sp
  4573f0:	stp	x19, x20, [sp, #16]
  4573f4:	adrp	x20, 487000 <_obstack_memory_used@@Base+0x40094>
  4573f8:	mov	x19, x1
  4573fc:	ldr	x1, [x20, #3880]
  457400:	str	x21, [sp, #32]
  457404:	stp	x5, x2, [x19]
  457408:	adrp	x21, 488000 <_obstack_memory_used@@Base+0x41094>
  45740c:	stp	x3, x0, [x19, #16]
  457410:	str	x4, [x19, #32]
  457414:	cbz	x1, 457424 <_obstack_memory_used@@Base+0x104b8>
  457418:	add	x0, x21, #0x9a0
  45741c:	add	x0, x0, #0x198
  457420:	bl	402850 <pthread_mutex_lock@plt>
  457424:	add	x1, x21, #0x9a0
  457428:	ldr	w0, [x1, #464]
  45742c:	ldr	x2, [x1, #456]
  457430:	str	x2, [x19, #40]
  457434:	str	x19, [x1, #456]
  457438:	cbz	w0, 45746c <_obstack_memory_used@@Base+0x10500>
  45743c:	ldr	x20, [x20, #3880]
  457440:	cbz	x20, 45745c <_obstack_memory_used@@Base+0x104f0>
  457444:	add	x0, x21, #0x9a0
  457448:	ldp	x19, x20, [sp, #16]
  45744c:	add	x0, x0, #0x198
  457450:	ldr	x21, [sp, #32]
  457454:	ldp	x29, x30, [sp], #48
  457458:	b	402870 <pthread_mutex_unlock@plt>
  45745c:	ldp	x19, x20, [sp, #16]
  457460:	ldr	x21, [sp, #32]
  457464:	ldp	x29, x30, [sp], #48
  457468:	ret
  45746c:	add	x1, x1, #0x1d0
  457470:	mov	w0, #0x1                   	// #1
  457474:	str	w0, [x1]
  457478:	b	45743c <_obstack_memory_used@@Base+0x104d0>
  45747c:	nop
  457480:	cbz	x0, 457490 <_obstack_memory_used@@Base+0x10524>
  457484:	ldr	w4, [x0]
  457488:	cbz	w4, 457490 <_obstack_memory_used@@Base+0x10524>
  45748c:	b	4573e0 <_obstack_memory_used@@Base+0x10474>
  457490:	ret
  457494:	nop
  457498:	cbz	x0, 4574b0 <_obstack_memory_used@@Base+0x10544>
  45749c:	ldr	w2, [x0]
  4574a0:	cbz	w2, 4574b0 <_obstack_memory_used@@Base+0x10544>
  4574a4:	mov	x3, #0x0                   	// #0
  4574a8:	mov	x2, #0x0                   	// #0
  4574ac:	b	4573e0 <_obstack_memory_used@@Base+0x10474>
  4574b0:	ret
  4574b4:	nop
  4574b8:	stp	x29, x30, [sp, #-32]!
  4574bc:	mov	x29, sp
  4574c0:	str	x19, [sp, #16]
  4574c4:	mov	x19, x0
  4574c8:	ldr	w0, [x0]
  4574cc:	cbnz	w0, 4574dc <_obstack_memory_used@@Base+0x10570>
  4574d0:	ldr	x19, [sp, #16]
  4574d4:	ldp	x29, x30, [sp], #32
  4574d8:	ret
  4574dc:	mov	x0, #0x30                  	// #48
  4574e0:	bl	402410 <malloc@plt>
  4574e4:	mov	x1, x0
  4574e8:	mov	x0, x19
  4574ec:	ldr	x19, [sp, #16]
  4574f0:	mov	x3, #0x0                   	// #0
  4574f4:	ldp	x29, x30, [sp], #32
  4574f8:	mov	x2, #0x0                   	// #0
  4574fc:	b	4573e0 <_obstack_memory_used@@Base+0x10474>
  457500:	stp	x29, x30, [sp, #-48]!
  457504:	mov	x5, #0xffffffffffffffff    	// #-1
  457508:	mov	x4, #0x7fa                 	// #2042
  45750c:	mov	x29, sp
  457510:	stp	x19, x20, [sp, #16]
  457514:	adrp	x20, 487000 <_obstack_memory_used@@Base+0x40094>
  457518:	mov	x19, x1
  45751c:	ldr	x1, [x20, #3880]
  457520:	str	x21, [sp, #32]
  457524:	stp	x5, x2, [x19]
  457528:	adrp	x21, 488000 <_obstack_memory_used@@Base+0x41094>
  45752c:	stp	x3, x0, [x19, #16]
  457530:	str	x4, [x19, #32]
  457534:	cbz	x1, 457544 <_obstack_memory_used@@Base+0x105d8>
  457538:	add	x0, x21, #0x9a0
  45753c:	add	x0, x0, #0x198
  457540:	bl	402850 <pthread_mutex_lock@plt>
  457544:	add	x1, x21, #0x9a0
  457548:	ldr	w0, [x1, #464]
  45754c:	ldr	x2, [x1, #456]
  457550:	str	x2, [x19, #40]
  457554:	str	x19, [x1, #456]
  457558:	cbz	w0, 45758c <_obstack_memory_used@@Base+0x10620>
  45755c:	ldr	x20, [x20, #3880]
  457560:	cbz	x20, 45757c <_obstack_memory_used@@Base+0x10610>
  457564:	add	x0, x21, #0x9a0
  457568:	ldp	x19, x20, [sp, #16]
  45756c:	add	x0, x0, #0x198
  457570:	ldr	x21, [sp, #32]
  457574:	ldp	x29, x30, [sp], #48
  457578:	b	402870 <pthread_mutex_unlock@plt>
  45757c:	ldp	x19, x20, [sp, #16]
  457580:	ldr	x21, [sp, #32]
  457584:	ldp	x29, x30, [sp], #48
  457588:	ret
  45758c:	add	x1, x1, #0x1d0
  457590:	mov	w0, #0x1                   	// #1
  457594:	str	w0, [x1]
  457598:	b	45755c <_obstack_memory_used@@Base+0x105f0>
  45759c:	nop
  4575a0:	mov	x3, #0x0                   	// #0
  4575a4:	mov	x2, #0x0                   	// #0
  4575a8:	b	457500 <_obstack_memory_used@@Base+0x10594>
  4575ac:	nop
  4575b0:	stp	x29, x30, [sp, #-32]!
  4575b4:	mov	x29, sp
  4575b8:	str	x19, [sp, #16]
  4575bc:	mov	x19, x0
  4575c0:	mov	x0, #0x30                  	// #48
  4575c4:	bl	402410 <malloc@plt>
  4575c8:	mov	x1, x0
  4575cc:	mov	x0, x19
  4575d0:	ldr	x19, [sp, #16]
  4575d4:	mov	x3, #0x0                   	// #0
  4575d8:	ldp	x29, x30, [sp], #32
  4575dc:	mov	x2, #0x0                   	// #0
  4575e0:	b	457500 <_obstack_memory_used@@Base+0x10594>
  4575e4:	nop
  4575e8:	stp	x29, x30, [sp, #-48]!
  4575ec:	mov	x29, sp
  4575f0:	stp	x19, x20, [sp, #16]
  4575f4:	cbz	x0, 4576c0 <_obstack_memory_used@@Base+0x10754>
  4575f8:	mov	x20, x0
  4575fc:	ldr	w0, [x0]
  457600:	cbz	w0, 4576c0 <_obstack_memory_used@@Base+0x10754>
  457604:	stp	x21, x22, [sp, #32]
  457608:	adrp	x21, 487000 <_obstack_memory_used@@Base+0x40094>
  45760c:	adrp	x22, 488000 <_obstack_memory_used@@Base+0x41094>
  457610:	ldr	x0, [x21, #3880]
  457614:	cbz	x0, 457624 <_obstack_memory_used@@Base+0x106b8>
  457618:	add	x0, x22, #0x9a0
  45761c:	add	x0, x0, #0x198
  457620:	bl	402850 <pthread_mutex_lock@plt>
  457624:	add	x2, x22, #0x9a0
  457628:	ldr	x1, [x2, #456]
  45762c:	cbz	x1, 457674 <_obstack_memory_used@@Base+0x10708>
  457630:	add	x2, x2, #0x1c8
  457634:	b	457640 <_obstack_memory_used@@Base+0x106d4>
  457638:	add	x2, x19, #0x28
  45763c:	cbz	x1, 457674 <_obstack_memory_used@@Base+0x10708>
  457640:	ldr	x0, [x1, #24]
  457644:	mov	x19, x1
  457648:	ldr	x1, [x1, #40]
  45764c:	cmp	x20, x0
  457650:	b.ne	457638 <_obstack_memory_used@@Base+0x106cc>  // b.any
  457654:	str	x1, [x2]
  457658:	ldr	x21, [x21, #3880]
  45765c:	cbnz	x21, 4576d4 <_obstack_memory_used@@Base+0x10768>
  457660:	mov	x0, x19
  457664:	ldp	x19, x20, [sp, #16]
  457668:	ldp	x21, x22, [sp, #32]
  45766c:	ldp	x29, x30, [sp], #48
  457670:	ret
  457674:	add	x2, x22, #0x9a0
  457678:	ldr	x19, [x2, #472]
  45767c:	cbz	x19, 4576f4 <_obstack_memory_used@@Base+0x10788>
  457680:	add	x2, x2, #0x1d8
  457684:	b	4576a0 <_obstack_memory_used@@Base+0x10734>
  457688:	ldr	x1, [x0]
  45768c:	cmp	x20, x1
  457690:	b.eq	45770c <_obstack_memory_used@@Base+0x107a0>  // b.none
  457694:	add	x2, x19, #0x28
  457698:	ldr	x19, [x19, #40]
  45769c:	cbz	x19, 4576f4 <_obstack_memory_used@@Base+0x10788>
  4576a0:	ldrb	w1, [x19, #32]
  4576a4:	ldr	x0, [x19, #24]
  4576a8:	tbnz	w1, #0, 457688 <_obstack_memory_used@@Base+0x1071c>
  4576ac:	cmp	x20, x0
  4576b0:	b.ne	457694 <_obstack_memory_used@@Base+0x10728>  // b.any
  4576b4:	ldr	x0, [x19, #40]
  4576b8:	str	x0, [x2]
  4576bc:	b	457658 <_obstack_memory_used@@Base+0x106ec>
  4576c0:	mov	x19, #0x0                   	// #0
  4576c4:	mov	x0, x19
  4576c8:	ldp	x19, x20, [sp, #16]
  4576cc:	ldp	x29, x30, [sp], #48
  4576d0:	ret
  4576d4:	add	x0, x22, #0x9a0
  4576d8:	add	x0, x0, #0x198
  4576dc:	bl	402870 <pthread_mutex_unlock@plt>
  4576e0:	mov	x0, x19
  4576e4:	ldp	x19, x20, [sp, #16]
  4576e8:	ldp	x21, x22, [sp, #32]
  4576ec:	ldp	x29, x30, [sp], #48
  4576f0:	ret
  4576f4:	ldr	x21, [x21, #3880]
  4576f8:	cbz	x21, 457708 <_obstack_memory_used@@Base+0x1079c>
  4576fc:	add	x0, x22, #0x9a0
  457700:	add	x0, x0, #0x198
  457704:	bl	402870 <pthread_mutex_unlock@plt>
  457708:	bl	402590 <abort@plt>
  45770c:	ldr	x1, [x19, #40]
  457710:	str	x1, [x2]
  457714:	bl	402690 <free@plt>
  457718:	b	457658 <_obstack_memory_used@@Base+0x106ec>
  45771c:	nop
  457720:	b	4575e8 <_obstack_memory_used@@Base+0x1067c>
  457724:	nop
  457728:	ldr	w1, [x0]
  45772c:	cbnz	w1, 457734 <_obstack_memory_used@@Base+0x107c8>
  457730:	ret
  457734:	stp	x29, x30, [sp, #-16]!
  457738:	mov	x29, sp
  45773c:	bl	4575e8 <_obstack_memory_used@@Base+0x1067c>
  457740:	ldp	x29, x30, [sp], #16
  457744:	b	402690 <free@plt>
  457748:	stp	x29, x30, [sp, #-128]!
  45774c:	mov	x29, sp
  457750:	stp	x23, x24, [sp, #48]
  457754:	adrp	x23, 488000 <_obstack_memory_used@@Base+0x41094>
  457758:	add	x2, x23, #0x9a0
  45775c:	stp	x19, x20, [sp, #16]
  457760:	mov	x20, x0
  457764:	add	x0, x2, #0x1d0
  457768:	stp	x21, x22, [sp, #32]
  45776c:	mov	x22, x1
  457770:	ldr	w0, [x0]
  457774:	cbnz	w0, 4577d8 <_obstack_memory_used@@Base+0x1086c>
  457778:	mov	w2, #0x1                   	// #1
  45777c:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xf094>
  457780:	add	x1, sp, #0x50
  457784:	add	x0, x0, #0x928
  457788:	stp	x20, xzr, [sp, #80]
  45778c:	stp	xzr, xzr, [sp, #96]
  457790:	str	xzr, [sp, #112]
  457794:	str	w2, [sp, #120]
  457798:	bl	402670 <dl_iterate_phdr@plt>
  45779c:	tbnz	w0, #31, 4578ec <_obstack_memory_used@@Base+0x10980>
  4577a0:	ldr	x21, [sp, #112]
  4577a4:	cbz	x21, 4577c0 <_obstack_memory_used@@Base+0x10854>
  4577a8:	ldr	x0, [sp, #88]
  4577ac:	str	x0, [x22]
  4577b0:	ldr	x0, [sp, #96]
  4577b4:	str	x0, [x22, #8]
  4577b8:	ldr	x0, [sp, #104]
  4577bc:	str	x0, [x22, #16]
  4577c0:	mov	x0, x21
  4577c4:	ldp	x19, x20, [sp, #16]
  4577c8:	ldp	x21, x22, [sp, #32]
  4577cc:	ldp	x23, x24, [sp, #48]
  4577d0:	ldp	x29, x30, [sp], #128
  4577d4:	ret
  4577d8:	stp	x25, x26, [sp, #64]
  4577dc:	adrp	x25, 487000 <_obstack_memory_used@@Base+0x40094>
  4577e0:	ldr	x0, [x25, #3880]
  4577e4:	cbz	x0, 4577f0 <_obstack_memory_used@@Base+0x10884>
  4577e8:	add	x0, x2, #0x198
  4577ec:	bl	402850 <pthread_mutex_lock@plt>
  4577f0:	add	x0, x23, #0x9a0
  4577f4:	ldr	x19, [x0, #472]
  4577f8:	cbnz	x19, 457808 <_obstack_memory_used@@Base+0x1089c>
  4577fc:	b	457884 <_obstack_memory_used@@Base+0x10918>
  457800:	ldr	x19, [x19, #40]
  457804:	cbz	x19, 457884 <_obstack_memory_used@@Base+0x10918>
  457808:	ldr	x0, [x19]
  45780c:	cmp	x20, x0
  457810:	b.cc	457800 <_obstack_memory_used@@Base+0x10894>  // b.lo, b.ul, b.last
  457814:	mov	x1, x20
  457818:	mov	x0, x19
  45781c:	bl	456d78 <_obstack_memory_used@@Base+0xfe0c>
  457820:	mov	x21, x0
  457824:	cbz	x0, 457884 <_obstack_memory_used@@Base+0x10918>
  457828:	ldr	x25, [x25, #3880]
  45782c:	cbnz	x25, 4578f4 <_obstack_memory_used@@Base+0x10988>
  457830:	ldrb	w0, [x19, #32]
  457834:	ldr	x1, [x19, #8]
  457838:	str	x1, [x22]
  45783c:	ldr	x1, [x19, #16]
  457840:	str	x1, [x22, #8]
  457844:	tbnz	w0, #2, 457904 <_obstack_memory_used@@Base+0x10998>
  457848:	ldrh	w20, [x19, #32]
  45784c:	ubfx	x20, x20, #3, #8
  457850:	add	x2, x19, #0x10
  457854:	add	x1, x19, #0x8
  457858:	mov	w0, w20
  45785c:	bl	456340 <_obstack_memory_used@@Base+0xf3d4>
  457860:	add	x3, sp, #0x50
  457864:	mov	x1, x0
  457868:	add	x2, x21, #0x8
  45786c:	mov	w0, w20
  457870:	bl	4560c8 <_obstack_memory_used@@Base+0xf15c>
  457874:	ldr	x0, [sp, #80]
  457878:	ldp	x25, x26, [sp, #64]
  45787c:	str	x0, [x22, #16]
  457880:	b	4577c0 <_obstack_memory_used@@Base+0x10854>
  457884:	add	x24, x23, #0x9a0
  457888:	add	x26, x24, #0x1d8
  45788c:	nop
  457890:	ldr	x19, [x24, #456]
  457894:	cbz	x19, 45791c <_obstack_memory_used@@Base+0x109b0>
  457898:	ldr	x2, [x19, #40]
  45789c:	mov	x1, x20
  4578a0:	mov	x0, x19
  4578a4:	str	x2, [x24, #456]
  4578a8:	bl	456d78 <_obstack_memory_used@@Base+0xfe0c>
  4578ac:	mov	x21, x0
  4578b0:	ldr	x2, [x24, #472]
  4578b4:	cbz	x2, 457934 <_obstack_memory_used@@Base+0x109c8>
  4578b8:	mov	x0, x26
  4578bc:	ldr	x3, [x19]
  4578c0:	b	4578d0 <_obstack_memory_used@@Base+0x10964>
  4578c4:	add	x0, x2, #0x28
  4578c8:	ldr	x2, [x2, #40]
  4578cc:	cbz	x2, 4578dc <_obstack_memory_used@@Base+0x10970>
  4578d0:	ldr	x1, [x2]
  4578d4:	cmp	x1, x3
  4578d8:	b.cs	4578c4 <_obstack_memory_used@@Base+0x10958>  // b.hs, b.nlast
  4578dc:	str	x2, [x19, #40]
  4578e0:	str	x19, [x0]
  4578e4:	cbz	x21, 457890 <_obstack_memory_used@@Base+0x10924>
  4578e8:	b	457828 <_obstack_memory_used@@Base+0x108bc>
  4578ec:	mov	x21, #0x0                   	// #0
  4578f0:	b	4577c0 <_obstack_memory_used@@Base+0x10854>
  4578f4:	add	x0, x23, #0x9a0
  4578f8:	add	x0, x0, #0x198
  4578fc:	bl	402870 <pthread_mutex_unlock@plt>
  457900:	b	457830 <_obstack_memory_used@@Base+0x108c4>
  457904:	add	x1, x21, #0x4
  457908:	ldrsw	x0, [x21, #4]
  45790c:	sub	x0, x1, x0
  457910:	bl	456228 <_obstack_memory_used@@Base+0xf2bc>
  457914:	and	w20, w0, #0xff
  457918:	b	457850 <_obstack_memory_used@@Base+0x108e4>
  45791c:	ldr	x25, [x25, #3880]
  457920:	cbz	x25, 45793c <_obstack_memory_used@@Base+0x109d0>
  457924:	add	x0, x24, #0x198
  457928:	bl	402870 <pthread_mutex_unlock@plt>
  45792c:	ldp	x25, x26, [sp, #64]
  457930:	b	457778 <_obstack_memory_used@@Base+0x1080c>
  457934:	mov	x0, x26
  457938:	b	4578dc <_obstack_memory_used@@Base+0x10970>
  45793c:	ldp	x25, x26, [sp, #64]
  457940:	b	457778 <_obstack_memory_used@@Base+0x1080c>
  457944:	nop
  457948:	stp	x29, x30, [sp, #-64]!
  45794c:	mov	x29, sp
  457950:	stp	x19, x20, [sp, #16]
  457954:	adrp	x20, 486000 <_obstack_memory_used@@Base+0x3f094>
  457958:	add	x20, x20, #0xd98
  45795c:	stp	x21, x22, [sp, #32]
  457960:	adrp	x21, 486000 <_obstack_memory_used@@Base+0x3f094>
  457964:	add	x21, x21, #0xd78
  457968:	sub	x20, x20, x21
  45796c:	mov	w22, w0
  457970:	stp	x23, x24, [sp, #48]
  457974:	mov	x23, x1
  457978:	mov	x24, x2
  45797c:	bl	402228 <memcpy@plt-0x38>
  457980:	cmp	xzr, x20, asr #3
  457984:	b.eq	4579b0 <_obstack_memory_used@@Base+0x10a44>  // b.none
  457988:	asr	x20, x20, #3
  45798c:	mov	x19, #0x0                   	// #0
  457990:	ldr	x3, [x21, x19, lsl #3]
  457994:	mov	x2, x24
  457998:	add	x19, x19, #0x1
  45799c:	mov	x1, x23
  4579a0:	mov	w0, w22
  4579a4:	blr	x3
  4579a8:	cmp	x20, x19
  4579ac:	b.ne	457990 <_obstack_memory_used@@Base+0x10a24>  // b.any
  4579b0:	ldp	x19, x20, [sp, #16]
  4579b4:	ldp	x21, x22, [sp, #32]
  4579b8:	ldp	x23, x24, [sp, #48]
  4579bc:	ldp	x29, x30, [sp], #64
  4579c0:	ret
  4579c4:	nop
  4579c8:	ret

Disassembly of section .fini:

00000000004579cc <.fini>:
  4579cc:	stp	x29, x30, [sp, #-16]!
  4579d0:	mov	x29, sp
  4579d4:	ldp	x29, x30, [sp], #16
  4579d8:	ret
