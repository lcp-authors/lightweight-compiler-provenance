
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//vdir_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402488 <.init>:
  402488:	stp	x29, x30, [sp, #-16]!
  40248c:	mov	x29, sp
  402490:	bl	40412c <__fxstatat@plt+0x158c>
  402494:	ldp	x29, x30, [sp], #16
  402498:	ret

Disassembly of section .plt:

00000000004024a0 <mbrtowc@plt-0x20>:
  4024a0:	stp	x16, x30, [sp, #-16]!
  4024a4:	adrp	x16, 42a000 <_obstack_memory_used@@Base+0x19e44>
  4024a8:	ldr	x17, [x16, #4088]
  4024ac:	add	x16, x16, #0xff8
  4024b0:	br	x17
  4024b4:	nop
  4024b8:	nop
  4024bc:	nop

00000000004024c0 <mbrtowc@plt>:
  4024c0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4024c4:	ldr	x17, [x16]
  4024c8:	add	x16, x16, #0x0
  4024cc:	br	x17

00000000004024d0 <memcpy@plt>:
  4024d0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4024d4:	ldr	x17, [x16, #8]
  4024d8:	add	x16, x16, #0x8
  4024dc:	br	x17

00000000004024e0 <memmove@plt>:
  4024e0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4024e4:	ldr	x17, [x16, #16]
  4024e8:	add	x16, x16, #0x10
  4024ec:	br	x17

00000000004024f0 <cap_to_text@plt>:
  4024f0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4024f4:	ldr	x17, [x16, #24]
  4024f8:	add	x16, x16, #0x18
  4024fc:	br	x17

0000000000402500 <_exit@plt>:
  402500:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402504:	ldr	x17, [x16, #32]
  402508:	add	x16, x16, #0x20
  40250c:	br	x17

0000000000402510 <getcwd@plt>:
  402510:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402514:	ldr	x17, [x16, #40]
  402518:	add	x16, x16, #0x28
  40251c:	br	x17

0000000000402520 <fwrite_unlocked@plt>:
  402520:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402524:	ldr	x17, [x16, #48]
  402528:	add	x16, x16, #0x30
  40252c:	br	x17

0000000000402530 <strtoul@plt>:
  402530:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402534:	ldr	x17, [x16, #56]
  402538:	add	x16, x16, #0x38
  40253c:	br	x17

0000000000402540 <strlen@plt>:
  402540:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402544:	ldr	x17, [x16, #64]
  402548:	add	x16, x16, #0x40
  40254c:	br	x17

0000000000402550 <fputs@plt>:
  402550:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402554:	ldr	x17, [x16, #72]
  402558:	add	x16, x16, #0x48
  40255c:	br	x17

0000000000402560 <__sprintf_chk@plt>:
  402560:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402564:	ldr	x17, [x16, #80]
  402568:	add	x16, x16, #0x50
  40256c:	br	x17

0000000000402570 <mbstowcs@plt>:
  402570:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402574:	ldr	x17, [x16, #88]
  402578:	add	x16, x16, #0x58
  40257c:	br	x17

0000000000402580 <exit@plt>:
  402580:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402584:	ldr	x17, [x16, #96]
  402588:	add	x16, x16, #0x60
  40258c:	br	x17

0000000000402590 <_setjmp@plt>:
  402590:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402594:	ldr	x17, [x16, #104]
  402598:	add	x16, x16, #0x68
  40259c:	br	x17

00000000004025a0 <raise@plt>:
  4025a0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4025a4:	ldr	x17, [x16, #112]
  4025a8:	add	x16, x16, #0x70
  4025ac:	br	x17

00000000004025b0 <error@plt>:
  4025b0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4025b4:	ldr	x17, [x16, #120]
  4025b8:	add	x16, x16, #0x78
  4025bc:	br	x17

00000000004025c0 <sigprocmask@plt>:
  4025c0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4025c4:	ldr	x17, [x16, #128]
  4025c8:	add	x16, x16, #0x80
  4025cc:	br	x17

00000000004025d0 <localtime_r@plt>:
  4025d0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4025d4:	ldr	x17, [x16, #136]
  4025d8:	add	x16, x16, #0x88
  4025dc:	br	x17

00000000004025e0 <setenv@plt>:
  4025e0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4025e4:	ldr	x17, [x16, #144]
  4025e8:	add	x16, x16, #0x90
  4025ec:	br	x17

00000000004025f0 <readlink@plt>:
  4025f0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4025f4:	ldr	x17, [x16, #152]
  4025f8:	add	x16, x16, #0x98
  4025fc:	br	x17

0000000000402600 <getgrnam@plt>:
  402600:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402604:	ldr	x17, [x16, #160]
  402608:	add	x16, x16, #0xa0
  40260c:	br	x17

0000000000402610 <ferror_unlocked@plt>:
  402610:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402614:	ldr	x17, [x16, #168]
  402618:	add	x16, x16, #0xa8
  40261c:	br	x17

0000000000402620 <opendir@plt>:
  402620:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402624:	ldr	x17, [x16, #176]
  402628:	add	x16, x16, #0xb0
  40262c:	br	x17

0000000000402630 <strftime@plt>:
  402630:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402634:	ldr	x17, [x16, #184]
  402638:	add	x16, x16, #0xb8
  40263c:	br	x17

0000000000402640 <__cxa_atexit@plt>:
  402640:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402644:	ldr	x17, [x16, #192]
  402648:	add	x16, x16, #0xc0
  40264c:	br	x17

0000000000402650 <iswcntrl@plt>:
  402650:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402654:	ldr	x17, [x16, #200]
  402658:	add	x16, x16, #0xc8
  40265c:	br	x17

0000000000402660 <clock_gettime@plt>:
  402660:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402664:	ldr	x17, [x16, #208]
  402668:	add	x16, x16, #0xd0
  40266c:	br	x17

0000000000402670 <lseek@plt>:
  402670:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402674:	ldr	x17, [x16, #216]
  402678:	add	x16, x16, #0xd8
  40267c:	br	x17

0000000000402680 <__fpending@plt>:
  402680:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402684:	ldr	x17, [x16, #224]
  402688:	add	x16, x16, #0xe0
  40268c:	br	x17

0000000000402690 <__ctype_tolower_loc@plt>:
  402690:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402694:	ldr	x17, [x16, #232]
  402698:	add	x16, x16, #0xe8
  40269c:	br	x17

00000000004026a0 <snprintf@plt>:
  4026a0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #240]
  4026a8:	add	x16, x16, #0xf0
  4026ac:	br	x17

00000000004026b0 <localeconv@plt>:
  4026b0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #248]
  4026b8:	add	x16, x16, #0xf8
  4026bc:	br	x17

00000000004026c0 <fileno@plt>:
  4026c0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #256]
  4026c8:	add	x16, x16, #0x100
  4026cc:	br	x17

00000000004026d0 <putc_unlocked@plt>:
  4026d0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #264]
  4026d8:	add	x16, x16, #0x108
  4026dc:	br	x17

00000000004026e0 <__memcpy_chk@plt>:
  4026e0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #272]
  4026e8:	add	x16, x16, #0x110
  4026ec:	br	x17

00000000004026f0 <signal@plt>:
  4026f0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #280]
  4026f8:	add	x16, x16, #0x118
  4026fc:	br	x17

0000000000402700 <__snprintf_chk@plt>:
  402700:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402704:	ldr	x17, [x16, #288]
  402708:	add	x16, x16, #0x120
  40270c:	br	x17

0000000000402710 <fclose@plt>:
  402710:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402714:	ldr	x17, [x16, #296]
  402718:	add	x16, x16, #0x128
  40271c:	br	x17

0000000000402720 <nl_langinfo@plt>:
  402720:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402724:	ldr	x17, [x16, #304]
  402728:	add	x16, x16, #0x130
  40272c:	br	x17

0000000000402730 <malloc@plt>:
  402730:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402734:	ldr	x17, [x16, #312]
  402738:	add	x16, x16, #0x138
  40273c:	br	x17

0000000000402740 <wcwidth@plt>:
  402740:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16, #320]
  402748:	add	x16, x16, #0x140
  40274c:	br	x17

0000000000402750 <tzset@plt>:
  402750:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #328]
  402758:	add	x16, x16, #0x148
  40275c:	br	x17

0000000000402760 <wcswidth@plt>:
  402760:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #336]
  402768:	add	x16, x16, #0x150
  40276c:	br	x17

0000000000402770 <sigemptyset@plt>:
  402770:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #344]
  402778:	add	x16, x16, #0x158
  40277c:	br	x17

0000000000402780 <strncmp@plt>:
  402780:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #352]
  402788:	add	x16, x16, #0x160
  40278c:	br	x17

0000000000402790 <bindtextdomain@plt>:
  402790:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #360]
  402798:	add	x16, x16, #0x168
  40279c:	br	x17

00000000004027a0 <__libc_start_main@plt>:
  4027a0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #368]
  4027a8:	add	x16, x16, #0x170
  4027ac:	br	x17

00000000004027b0 <__printf_chk@plt>:
  4027b0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #376]
  4027b8:	add	x16, x16, #0x178
  4027bc:	br	x17

00000000004027c0 <memset@plt>:
  4027c0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #384]
  4027c8:	add	x16, x16, #0x180
  4027cc:	br	x17

00000000004027d0 <getpwnam@plt>:
  4027d0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #392]
  4027d8:	add	x16, x16, #0x188
  4027dc:	br	x17

00000000004027e0 <gmtime_r@plt>:
  4027e0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #400]
  4027e8:	add	x16, x16, #0x190
  4027ec:	br	x17

00000000004027f0 <putchar_unlocked@plt>:
  4027f0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #408]
  4027f8:	add	x16, x16, #0x198
  4027fc:	br	x17

0000000000402800 <calloc@plt>:
  402800:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #416]
  402808:	add	x16, x16, #0x1a0
  40280c:	br	x17

0000000000402810 <readdir@plt>:
  402810:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #424]
  402818:	add	x16, x16, #0x1a8
  40281c:	br	x17

0000000000402820 <realloc@plt>:
  402820:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #432]
  402828:	add	x16, x16, #0x1b0
  40282c:	br	x17

0000000000402830 <__ctype_toupper_loc@plt>:
  402830:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #440]
  402838:	add	x16, x16, #0x1b8
  40283c:	br	x17

0000000000402840 <closedir@plt>:
  402840:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #448]
  402848:	add	x16, x16, #0x1c0
  40284c:	br	x17

0000000000402850 <sigaction@plt>:
  402850:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #456]
  402858:	add	x16, x16, #0x1c8
  40285c:	br	x17

0000000000402860 <strrchr@plt>:
  402860:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #464]
  402868:	add	x16, x16, #0x1d0
  40286c:	br	x17

0000000000402870 <tcgetpgrp@plt>:
  402870:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #472]
  402878:	add	x16, x16, #0x1d8
  40287c:	br	x17

0000000000402880 <__gmon_start__@plt>:
  402880:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #480]
  402888:	add	x16, x16, #0x1e0
  40288c:	br	x17

0000000000402890 <mktime@plt>:
  402890:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #488]
  402898:	add	x16, x16, #0x1e8
  40289c:	br	x17

00000000004028a0 <strtoumax@plt>:
  4028a0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #496]
  4028a8:	add	x16, x16, #0x1f0
  4028ac:	br	x17

00000000004028b0 <abort@plt>:
  4028b0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #504]
  4028b8:	add	x16, x16, #0x1f8
  4028bc:	br	x17

00000000004028c0 <mbsinit@plt>:
  4028c0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #512]
  4028c8:	add	x16, x16, #0x200
  4028cc:	br	x17

00000000004028d0 <gnu_dev_major@plt>:
  4028d0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #520]
  4028d8:	add	x16, x16, #0x208
  4028dc:	br	x17

00000000004028e0 <getxattr@plt>:
  4028e0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #528]
  4028e8:	add	x16, x16, #0x210
  4028ec:	br	x17

00000000004028f0 <memcmp@plt>:
  4028f0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #536]
  4028f8:	add	x16, x16, #0x218
  4028fc:	br	x17

0000000000402900 <textdomain@plt>:
  402900:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #544]
  402908:	add	x16, x16, #0x220
  40290c:	br	x17

0000000000402910 <stpncpy@plt>:
  402910:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #552]
  402918:	add	x16, x16, #0x228
  40291c:	br	x17

0000000000402920 <getopt_long@plt>:
  402920:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #560]
  402928:	add	x16, x16, #0x230
  40292c:	br	x17

0000000000402930 <__fprintf_chk@plt>:
  402930:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #568]
  402938:	add	x16, x16, #0x238
  40293c:	br	x17

0000000000402940 <sigismember@plt>:
  402940:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #576]
  402948:	add	x16, x16, #0x240
  40294c:	br	x17

0000000000402950 <strcmp@plt>:
  402950:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #584]
  402958:	add	x16, x16, #0x248
  40295c:	br	x17

0000000000402960 <getpwuid@plt>:
  402960:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #592]
  402968:	add	x16, x16, #0x250
  40296c:	br	x17

0000000000402970 <__ctype_b_loc@plt>:
  402970:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #600]
  402978:	add	x16, x16, #0x258
  40297c:	br	x17

0000000000402980 <fseeko@plt>:
  402980:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #608]
  402988:	add	x16, x16, #0x260
  40298c:	br	x17

0000000000402990 <free@plt>:
  402990:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #616]
  402998:	add	x16, x16, #0x268
  40299c:	br	x17

00000000004029a0 <__ctype_get_mb_cur_max@plt>:
  4029a0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #624]
  4029a8:	add	x16, x16, #0x270
  4029ac:	br	x17

00000000004029b0 <mempcpy@plt>:
  4029b0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #632]
  4029b8:	add	x16, x16, #0x278
  4029bc:	br	x17

00000000004029c0 <strspn@plt>:
  4029c0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #640]
  4029c8:	add	x16, x16, #0x280
  4029cc:	br	x17

00000000004029d0 <strchr@plt>:
  4029d0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #648]
  4029d8:	add	x16, x16, #0x288
  4029dc:	br	x17

00000000004029e0 <fnmatch@plt>:
  4029e0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #656]
  4029e8:	add	x16, x16, #0x290
  4029ec:	br	x17

00000000004029f0 <fflush_unlocked@plt>:
  4029f0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #664]
  4029f8:	add	x16, x16, #0x298
  4029fc:	br	x17

0000000000402a00 <fflush@plt>:
  402a00:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402a04:	ldr	x17, [x16, #672]
  402a08:	add	x16, x16, #0x2a0
  402a0c:	br	x17

0000000000402a10 <gnu_dev_minor@plt>:
  402a10:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402a14:	ldr	x17, [x16, #680]
  402a18:	add	x16, x16, #0x2a8
  402a1c:	br	x17

0000000000402a20 <strcpy@plt>:
  402a20:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402a24:	ldr	x17, [x16, #688]
  402a28:	add	x16, x16, #0x2b0
  402a2c:	br	x17

0000000000402a30 <dirfd@plt>:
  402a30:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402a34:	ldr	x17, [x16, #696]
  402a38:	add	x16, x16, #0x2b8
  402a3c:	br	x17

0000000000402a40 <unsetenv@plt>:
  402a40:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402a44:	ldr	x17, [x16, #704]
  402a48:	add	x16, x16, #0x2c0
  402a4c:	br	x17

0000000000402a50 <__lxstat@plt>:
  402a50:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402a54:	ldr	x17, [x16, #712]
  402a58:	add	x16, x16, #0x2c8
  402a5c:	br	x17

0000000000402a60 <cap_get_file@plt>:
  402a60:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402a64:	ldr	x17, [x16, #720]
  402a68:	add	x16, x16, #0x2d0
  402a6c:	br	x17

0000000000402a70 <isatty@plt>:
  402a70:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402a74:	ldr	x17, [x16, #728]
  402a78:	add	x16, x16, #0x2d8
  402a7c:	br	x17

0000000000402a80 <wcstombs@plt>:
  402a80:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402a84:	ldr	x17, [x16, #736]
  402a88:	add	x16, x16, #0x2e0
  402a8c:	br	x17

0000000000402a90 <gethostname@plt>:
  402a90:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402a94:	ldr	x17, [x16, #744]
  402a98:	add	x16, x16, #0x2e8
  402a9c:	br	x17

0000000000402aa0 <cap_free@plt>:
  402aa0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402aa4:	ldr	x17, [x16, #752]
  402aa8:	add	x16, x16, #0x2f0
  402aac:	br	x17

0000000000402ab0 <__fxstat@plt>:
  402ab0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402ab4:	ldr	x17, [x16, #760]
  402ab8:	add	x16, x16, #0x2f8
  402abc:	br	x17

0000000000402ac0 <dcgettext@plt>:
  402ac0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402ac4:	ldr	x17, [x16, #768]
  402ac8:	add	x16, x16, #0x300
  402acc:	br	x17

0000000000402ad0 <fputs_unlocked@plt>:
  402ad0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402ad4:	ldr	x17, [x16, #776]
  402ad8:	add	x16, x16, #0x308
  402adc:	br	x17

0000000000402ae0 <strcoll@plt>:
  402ae0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402ae4:	ldr	x17, [x16, #784]
  402ae8:	add	x16, x16, #0x310
  402aec:	br	x17

0000000000402af0 <__freading@plt>:
  402af0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402af4:	ldr	x17, [x16, #792]
  402af8:	add	x16, x16, #0x318
  402afc:	br	x17

0000000000402b00 <sigaddset@plt>:
  402b00:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402b04:	ldr	x17, [x16, #800]
  402b08:	add	x16, x16, #0x320
  402b0c:	br	x17

0000000000402b10 <iswprint@plt>:
  402b10:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402b14:	ldr	x17, [x16, #808]
  402b18:	add	x16, x16, #0x328
  402b1c:	br	x17

0000000000402b20 <__assert_fail@plt>:
  402b20:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402b24:	ldr	x17, [x16, #816]
  402b28:	add	x16, x16, #0x330
  402b2c:	br	x17

0000000000402b30 <__errno_location@plt>:
  402b30:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402b34:	ldr	x17, [x16, #824]
  402b38:	add	x16, x16, #0x338
  402b3c:	br	x17

0000000000402b40 <getenv@plt>:
  402b40:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402b44:	ldr	x17, [x16, #832]
  402b48:	add	x16, x16, #0x340
  402b4c:	br	x17

0000000000402b50 <__xstat@plt>:
  402b50:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402b54:	ldr	x17, [x16, #840]
  402b58:	add	x16, x16, #0x348
  402b5c:	br	x17

0000000000402b60 <getgrgid@plt>:
  402b60:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402b64:	ldr	x17, [x16, #848]
  402b68:	add	x16, x16, #0x350
  402b6c:	br	x17

0000000000402b70 <timegm@plt>:
  402b70:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402b74:	ldr	x17, [x16, #856]
  402b78:	add	x16, x16, #0x358
  402b7c:	br	x17

0000000000402b80 <ioctl@plt>:
  402b80:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402b84:	ldr	x17, [x16, #864]
  402b88:	add	x16, x16, #0x360
  402b8c:	br	x17

0000000000402b90 <setlocale@plt>:
  402b90:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402b94:	ldr	x17, [x16, #872]
  402b98:	add	x16, x16, #0x368
  402b9c:	br	x17

0000000000402ba0 <__fxstatat@plt>:
  402ba0:	adrp	x16, 42b000 <mbrtowc@GLIBC_2.17>
  402ba4:	ldr	x17, [x16, #880]
  402ba8:	add	x16, x16, #0x370
  402bac:	br	x17

Disassembly of section .text:

0000000000402bb0 <_obstack_begin@@Base-0xd42c>:
  402bb0:	stp	x29, x30, [sp, #-160]!
  402bb4:	mov	x29, sp
  402bb8:	stp	x25, x26, [sp, #64]
  402bbc:	mov	w25, w0
  402bc0:	mov	x26, x1
  402bc4:	ldr	x0, [x1]
  402bc8:	stp	x19, x20, [sp, #16]
  402bcc:	adrp	x19, 413000 <_obstack_memory_used@@Base+0x2e44>
  402bd0:	stp	x21, x22, [sp, #32]
  402bd4:	add	x19, x19, #0xc87
  402bd8:	adrp	x20, 42c000 <__progname@@GLIBC_2.17+0xa28>
  402bdc:	stp	x23, x24, [sp, #48]
  402be0:	adrp	x24, 411000 <_obstack_memory_used@@Base+0xe44>
  402be4:	add	x24, x24, #0xdf0
  402be8:	stp	x27, x28, [sp, #80]
  402bec:	bl	40d674 <__fxstatat@plt+0xaad4>
  402bf0:	mov	x1, x24
  402bf4:	mov	w0, #0x6                   	// #6
  402bf8:	bl	402b90 <setlocale@plt>
  402bfc:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2e44>
  402c00:	add	x1, x1, #0xd33
  402c04:	mov	x0, x19
  402c08:	bl	402790 <bindtextdomain@plt>
  402c0c:	mov	x0, x19
  402c10:	add	x20, x20, #0x6e8
  402c14:	bl	402900 <textdomain@plt>
  402c18:	mov	w22, #0x2                   	// #2
  402c1c:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  402c20:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  402c24:	add	x19, x19, #0x5e8
  402c28:	str	w22, [x0, #1352]
  402c2c:	adrp	x0, 409000 <__fxstatat@plt+0x6460>
  402c30:	add	x0, x0, #0x930
  402c34:	bl	411cb0 <_obstack_memory_used@@Base+0x1af4>
  402c38:	mov	w0, #0x1                   	// #1
  402c3c:	sturb	w0, [x20, #-55]
  402c40:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  402c44:	stur	x0, [x20, #-248]
  402c48:	mov	x0, #0xffffffffffffffff    	// #-1
  402c4c:	stur	x0, [x20, #-240]
  402c50:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  402c54:	str	x0, [sp, #104]
  402c58:	str	xzr, [x19, #3136]
  402c5c:	ldr	w21, [x0, #1328]
  402c60:	str	wzr, [x19, #3768]
  402c64:	strb	wzr, [x19, #3913]
  402c68:	cmp	w21, w22
  402c6c:	b.eq	402c84 <__fxstatat@plt+0xe4>  // b.none
  402c70:	cmp	w21, #0x3
  402c74:	b.eq	402e40 <__fxstatat@plt+0x2a0>  // b.none
  402c78:	cmp	w21, #0x1
  402c7c:	b.eq	402e48 <__fxstatat@plt+0x2a8>  // b.none
  402c80:	bl	4028b0 <abort@plt>
  402c84:	str	w21, [x19, #3948]
  402c88:	mov	w1, #0x7                   	// #7
  402c8c:	mov	x0, #0x0                   	// #0
  402c90:	bl	40e630 <__fxstatat@plt+0xba90>
  402c94:	mov	w0, #0x1                   	// #1
  402c98:	sturb	wzr, [x20, #-56]
  402c9c:	str	xzr, [x19, #40]
  402ca0:	str	wzr, [x20, #48]
  402ca4:	str	xzr, [x20, #56]
  402ca8:	str	wzr, [x19, #3416]
  402cac:	str	wzr, [x19, #3736]
  402cb0:	strb	wzr, [x19, #3741]
  402cb4:	strb	wzr, [x19, #3760]
  402cb8:	str	wzr, [x19, #3772]
  402cbc:	strb	wzr, [x19, #3944]
  402cc0:	strb	wzr, [x19, #3956]
  402cc4:	strb	wzr, [x19, #3976]
  402cc8:	str	w0, [x19, #4052]
  402ccc:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2e44>
  402cd0:	add	x0, x0, #0xd45
  402cd4:	strb	wzr, [x19, #4088]
  402cd8:	bl	402b40 <getenv@plt>
  402cdc:	mov	x21, x0
  402ce0:	cbz	x0, 402d10 <__fxstatat@plt+0x170>
  402ce4:	adrp	x22, 416000 <_obstack_memory_used@@Base+0x5e44>
  402ce8:	add	x22, x22, #0x4f0
  402cec:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x5e44>
  402cf0:	mov	x2, x22
  402cf4:	add	x1, x1, #0x518
  402cf8:	mov	x3, #0x4                   	// #4
  402cfc:	bl	408ec4 <__fxstatat@plt+0x6324>
  402d00:	tbnz	w0, #31, 402e74 <__fxstatat@plt+0x2d4>
  402d04:	ldr	w1, [x22, w0, sxtw #2]
  402d08:	mov	x0, #0x0                   	// #0
  402d0c:	bl	40e630 <__fxstatat@plt+0xba90>
  402d10:	mov	x0, #0x50                  	// #80
  402d14:	str	x0, [x19, #48]
  402d18:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2e44>
  402d1c:	add	x0, x0, #0xd94
  402d20:	bl	402b40 <getenv@plt>
  402d24:	mov	x21, x0
  402d28:	cbz	x0, 402d74 <__fxstatat@plt+0x1d4>
  402d2c:	ldrb	w1, [x0]
  402d30:	cbz	w1, 402d74 <__fxstatat@plt+0x1d4>
  402d34:	bl	404668 <__fxstatat@plt+0x1ac8>
  402d38:	tst	w0, #0xff
  402d3c:	b.ne	402d74 <__fxstatat@plt+0x1d4>  // b.any
  402d40:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2e44>
  402d44:	add	x1, x1, #0xd9c
  402d48:	mov	w2, #0x5                   	// #5
  402d4c:	mov	x0, #0x0                   	// #0
  402d50:	bl	402ac0 <dcgettext@plt>
  402d54:	mov	x22, x0
  402d58:	mov	x0, x21
  402d5c:	bl	40ebd4 <__fxstatat@plt+0xc034>
  402d60:	mov	x2, x22
  402d64:	mov	x3, x0
  402d68:	mov	w1, #0x0                   	// #0
  402d6c:	mov	w0, #0x0                   	// #0
  402d70:	bl	4025b0 <error@plt>
  402d74:	add	x2, sp, #0x90
  402d78:	mov	x1, #0x5413                	// #21523
  402d7c:	mov	w0, #0x1                   	// #1
  402d80:	bl	402b80 <ioctl@plt>
  402d84:	cmn	w0, #0x1
  402d88:	b.eq	402d9c <__fxstatat@plt+0x1fc>  // b.none
  402d8c:	ldrh	w0, [sp, #146]
  402d90:	cbz	w0, 402d9c <__fxstatat@plt+0x1fc>
  402d94:	and	x0, x0, #0xffff
  402d98:	str	x0, [x19, #48]
  402d9c:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2e44>
  402da0:	add	x0, x0, #0xdd7
  402da4:	bl	402b40 <getenv@plt>
  402da8:	mov	x21, x0
  402dac:	mov	x1, #0x8                   	// #8
  402db0:	str	x1, [x19, #32]
  402db4:	cbz	x0, 402dd8 <__fxstatat@plt+0x238>
  402db8:	add	x3, sp, #0x90
  402dbc:	mov	x4, #0x0                   	// #0
  402dc0:	mov	w2, #0x0                   	// #0
  402dc4:	mov	x1, #0x0                   	// #0
  402dc8:	bl	40f6bc <__fxstatat@plt+0xcb1c>
  402dcc:	cbnz	w0, 402eac <__fxstatat@plt+0x30c>
  402dd0:	ldr	x0, [sp, #144]
  402dd4:	str	x0, [x19, #32]
  402dd8:	adrp	x21, 414000 <_obstack_memory_used@@Base+0x3e44>
  402ddc:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2e44>
  402de0:	add	x21, x21, #0x4c0
  402de4:	add	x0, x0, #0xe1d
  402de8:	mov	w28, #0x0                   	// #0
  402dec:	mov	w23, #0x0                   	// #0
  402df0:	mov	x22, #0x0                   	// #0
  402df4:	mov	w27, #0xffffffff            	// #-1
  402df8:	str	x0, [sp, #96]
  402dfc:	add	x0, x21, #0xa00
  402e00:	str	x0, [sp, #112]
  402e04:	ldr	x2, [sp, #96]
  402e08:	add	x4, sp, #0x90
  402e0c:	add	x3, x21, #0x2e0
  402e10:	mov	x1, x26
  402e14:	mov	w0, w25
  402e18:	str	w27, [sp, #144]
  402e1c:	bl	402920 <getopt_long@plt>
  402e20:	cmn	w0, #0x1
  402e24:	b.eq	4034fc <__fxstatat@plt+0x95c>  // b.none
  402e28:	cmp	w0, #0x78
  402e2c:	b.gt	402f08 <__fxstatat@plt+0x368>
  402e30:	cmn	w0, #0x3
  402e34:	b.ge	402ee4 <__fxstatat@plt+0x344>  // b.tcont
  402e38:	mov	w0, #0x2                   	// #2
  402e3c:	b	403484 <__fxstatat@plt+0x8e4>
  402e40:	str	wzr, [x19, #3948]
  402e44:	b	402c88 <__fxstatat@plt+0xe8>
  402e48:	mov	w0, w21
  402e4c:	bl	402a70 <isatty@plt>
  402e50:	cbz	w0, 402e6c <__fxstatat@plt+0x2cc>
  402e54:	mov	w1, #0x3                   	// #3
  402e58:	mov	x0, #0x0                   	// #0
  402e5c:	str	w22, [x19, #3948]
  402e60:	bl	40e630 <__fxstatat@plt+0xba90>
  402e64:	strb	w21, [x19, #3913]
  402e68:	b	402c94 <__fxstatat@plt+0xf4>
  402e6c:	str	w21, [x19, #3948]
  402e70:	b	402c94 <__fxstatat@plt+0xf4>
  402e74:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2e44>
  402e78:	add	x1, x1, #0xd53
  402e7c:	mov	w2, #0x5                   	// #5
  402e80:	mov	x0, #0x0                   	// #0
  402e84:	bl	402ac0 <dcgettext@plt>
  402e88:	mov	x22, x0
  402e8c:	mov	x0, x21
  402e90:	bl	40ebd4 <__fxstatat@plt+0xc034>
  402e94:	mov	x2, x22
  402e98:	mov	x3, x0
  402e9c:	mov	w1, #0x0                   	// #0
  402ea0:	mov	w0, #0x0                   	// #0
  402ea4:	bl	4025b0 <error@plt>
  402ea8:	b	402d10 <__fxstatat@plt+0x170>
  402eac:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2e44>
  402eb0:	add	x1, x1, #0xddf
  402eb4:	mov	w2, #0x5                   	// #5
  402eb8:	mov	x0, #0x0                   	// #0
  402ebc:	bl	402ac0 <dcgettext@plt>
  402ec0:	mov	x22, x0
  402ec4:	mov	x0, x21
  402ec8:	bl	40ebd4 <__fxstatat@plt+0xc034>
  402ecc:	mov	x2, x22
  402ed0:	mov	x3, x0
  402ed4:	mov	w1, #0x0                   	// #0
  402ed8:	mov	w0, #0x0                   	// #0
  402edc:	bl	4025b0 <error@plt>
  402ee0:	b	402dd8 <__fxstatat@plt+0x238>
  402ee4:	add	w0, w0, #0x3
  402ee8:	cmp	w0, #0x7b
  402eec:	b.hi	402e38 <__fxstatat@plt+0x298>  // b.pmore
  402ef0:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x3e44>
  402ef4:	add	x1, x1, #0x39c
  402ef8:	ldrh	w0, [x1, w0, uxtw #1]
  402efc:	adr	x1, 402f08 <__fxstatat@plt+0x368>
  402f00:	add	x0, x1, w0, sxth #2
  402f04:	br	x0
  402f08:	sub	w0, w0, #0x100
  402f0c:	cmp	w0, #0x10
  402f10:	b.hi	402e38 <__fxstatat@plt+0x298>  // b.pmore
  402f14:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x3e44>
  402f18:	add	x1, x1, #0x494
  402f1c:	ldrh	w0, [x1, w0, uxtw #1]
  402f20:	adr	x1, 402f2c <__fxstatat@plt+0x38c>
  402f24:	add	x0, x1, w0, sxth #2
  402f28:	br	x0
  402f2c:	mov	w0, #0x2                   	// #2
  402f30:	str	w0, [x20, #48]
  402f34:	b	402e04 <__fxstatat@plt+0x264>
  402f38:	mov	w1, #0x7                   	// #7
  402f3c:	mov	x0, #0x0                   	// #0
  402f40:	bl	40e630 <__fxstatat@plt+0xba90>
  402f44:	b	402e04 <__fxstatat@plt+0x264>
  402f48:	mov	w0, #0x1                   	// #1
  402f4c:	str	w0, [x19, #3736]
  402f50:	b	402e04 <__fxstatat@plt+0x264>
  402f54:	mov	w0, #0x1                   	// #1
  402f58:	strb	w0, [x19, #4088]
  402f5c:	b	402e04 <__fxstatat@plt+0x264>
  402f60:	mov	w0, #0x2                   	// #2
  402f64:	str	w0, [x20, #48]
  402f68:	ldr	w0, [x19, #3948]
  402f6c:	str	w27, [x19, #3416]
  402f70:	cbnz	w0, 402f8c <__fxstatat@plt+0x3ec>
  402f74:	mov	w0, #0x1                   	// #1
  402f78:	bl	402a70 <isatty@plt>
  402f7c:	cmp	w0, #0x0
  402f80:	cset	w0, ne  // ne = any
  402f84:	add	w0, w0, #0x1
  402f88:	str	w0, [x19, #3948]
  402f8c:	strb	wzr, [x19, #3912]
  402f90:	strb	wzr, [x19, #3956]
  402f94:	strb	wzr, [x19, #4048]
  402f98:	mov	w23, #0x1                   	// #1
  402f9c:	b	402e04 <__fxstatat@plt+0x264>
  402fa0:	mov	w0, #0x2                   	// #2
  402fa4:	str	w0, [x19, #3772]
  402fa8:	b	402e04 <__fxstatat@plt+0x264>
  402fac:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  402fb0:	str	wzr, [x19, #3948]
  402fb4:	strb	wzr, [x0, #1306]
  402fb8:	b	402e04 <__fxstatat@plt+0x264>
  402fbc:	mov	w0, #0xb0                  	// #176
  402fc0:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  402fc4:	str	w0, [x19, #3968]
  402fc8:	str	w0, [x19, #4092]
  402fcc:	mov	x0, #0x1                   	// #1
  402fd0:	str	x0, [x1, #1312]
  402fd4:	str	x0, [x19, #3960]
  402fd8:	b	402e04 <__fxstatat@plt+0x264>
  402fdc:	mov	w0, #0x1                   	// #1
  402fe0:	strb	w0, [x19, #3944]
  402fe4:	b	402e04 <__fxstatat@plt+0x264>
  402fe8:	mov	w0, #0x4                   	// #4
  402fec:	str	w0, [x19, #3948]
  402ff0:	b	402e04 <__fxstatat@plt+0x264>
  402ff4:	mov	w0, #0x1                   	// #1
  402ff8:	strb	w0, [x19, #3760]
  402ffc:	str	wzr, [x19, #3948]
  403000:	b	402e04 <__fxstatat@plt+0x264>
  403004:	str	wzr, [x19, #3948]
  403008:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  40300c:	strb	wzr, [x0, #1307]
  403010:	b	402e04 <__fxstatat@plt+0x264>
  403014:	mov	w0, #0x1                   	// #1
  403018:	b	402fa4 <__fxstatat@plt+0x404>
  40301c:	mov	w0, #0x1                   	// #1
  403020:	strb	w0, [x19, #3913]
  403024:	b	402e04 <__fxstatat@plt+0x264>
  403028:	mov	w0, #0x1                   	// #1
  40302c:	strb	w0, [x19, #3741]
  403030:	b	402e04 <__fxstatat@plt+0x264>
  403034:	mov	w0, #0x1                   	// #1
  403038:	strb	w0, [x19, #3956]
  40303c:	b	402e04 <__fxstatat@plt+0x264>
  403040:	mov	w0, #0x4                   	// #4
  403044:	str	w0, [x19, #3416]
  403048:	b	402f98 <__fxstatat@plt+0x3f8>
  40304c:	mov	w0, #0x2                   	// #2
  403050:	b	402f4c <__fxstatat@plt+0x3ac>
  403054:	mov	w0, #0x3                   	// #3
  403058:	b	403044 <__fxstatat@plt+0x4a4>
  40305c:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  403060:	ldr	x0, [x0, #1472]
  403064:	bl	404668 <__fxstatat@plt+0x1ac8>
  403068:	tst	w0, #0xff
  40306c:	b.ne	402e04 <__fxstatat@plt+0x264>  // b.any
  403070:	mov	w2, #0x5                   	// #5
  403074:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2e44>
  403078:	mov	x0, #0x0                   	// #0
  40307c:	add	x1, x1, #0xe49
  403080:	bl	402ac0 <dcgettext@plt>
  403084:	mov	x19, x0
  403088:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  40308c:	add	x0, x0, #0x5c0
  403090:	ldr	x0, [x0]
  403094:	bl	40ebd4 <__fxstatat@plt+0xc034>
  403098:	mov	x4, x0
  40309c:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x2e44>
  4030a0:	mov	x3, x19
  4030a4:	add	x2, x2, #0xe5c
  4030a8:	mov	w1, #0x0                   	// #0
  4030ac:	mov	w0, #0x2                   	// #2
  4030b0:	bl	4025b0 <error@plt>
  4030b4:	mov	w0, #0x3                   	// #3
  4030b8:	b	402fec <__fxstatat@plt+0x44c>
  4030bc:	mov	w0, #0x1                   	// #1
  4030c0:	b	402f30 <__fxstatat@plt+0x390>
  4030c4:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2e44>
  4030c8:	add	x0, x0, #0xe64
  4030cc:	bl	4045c0 <__fxstatat@plt+0x1a20>
  4030d0:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2e44>
  4030d4:	add	x0, x0, #0xe63
  4030d8:	bl	4045c0 <__fxstatat@plt+0x1a20>
  4030dc:	b	402e04 <__fxstatat@plt+0x264>
  4030e0:	mov	w0, #0x2                   	// #2
  4030e4:	b	402fec <__fxstatat@plt+0x44c>
  4030e8:	mov	w0, #0x1                   	// #1
  4030ec:	strb	w0, [x19, #3928]
  4030f0:	b	402e04 <__fxstatat@plt+0x264>
  4030f4:	mov	w0, #0x3                   	// #3
  4030f8:	b	402fa4 <__fxstatat@plt+0x404>
  4030fc:	mov	w0, #0x3                   	// #3
  403100:	str	w0, [x19, #4052]
  403104:	b	402e04 <__fxstatat@plt+0x264>
  403108:	mov	w0, #0x4                   	// #4
  40310c:	b	403100 <__fxstatat@plt+0x560>
  403110:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  403114:	ldr	x0, [x0, #1472]
  403118:	b	4030d8 <__fxstatat@plt+0x538>
  40311c:	mov	w0, #0x5                   	// #5
  403120:	b	403100 <__fxstatat@plt+0x560>
  403124:	mov	w1, #0x0                   	// #0
  403128:	b	402f3c <__fxstatat@plt+0x39c>
  40312c:	mov	w1, #0x5                   	// #5
  403130:	b	402f3c <__fxstatat@plt+0x39c>
  403134:	mov	w0, #0x1                   	// #1
  403138:	sturb	w0, [x20, #-56]
  40313c:	b	402e04 <__fxstatat@plt+0x264>
  403140:	mov	w0, #0x2                   	// #2
  403144:	b	403044 <__fxstatat@plt+0x4a4>
  403148:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  40314c:	mov	w2, #0x5                   	// #5
  403150:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2e44>
  403154:	add	x1, x1, #0xe67
  403158:	ldr	x7, [x0, #1472]
  40315c:	mov	x0, #0x0                   	// #0
  403160:	str	x7, [sp, #120]
  403164:	bl	402ac0 <dcgettext@plt>
  403168:	mov	x5, x0
  40316c:	ldr	x7, [sp, #120]
  403170:	mov	x4, x24
  403174:	mov	w6, #0x2                   	// #2
  403178:	mov	x3, #0xffffffffffffffff    	// #-1
  40317c:	mov	x0, x7
  403180:	mov	x2, #0x0                   	// #0
  403184:	mov	w1, #0x0                   	// #0
  403188:	bl	40f484 <__fxstatat@plt+0xc8e4>
  40318c:	str	x0, [x19, #32]
  403190:	b	402e04 <__fxstatat@plt+0x264>
  403194:	str	w27, [x19, #3416]
  403198:	b	402f98 <__fxstatat@plt+0x3f8>
  40319c:	mov	w23, #0x1                   	// #1
  4031a0:	str	w23, [x19, #3416]
  4031a4:	b	402e04 <__fxstatat@plt+0x264>
  4031a8:	ldr	w0, [x19, #3948]
  4031ac:	cbz	w0, 402e04 <__fxstatat@plt+0x264>
  4031b0:	mov	w0, #0x1                   	// #1
  4031b4:	b	402fec <__fxstatat@plt+0x44c>
  4031b8:	mov	w0, #0x1                   	// #1
  4031bc:	strb	w0, [x19, #4089]
  4031c0:	b	402e04 <__fxstatat@plt+0x264>
  4031c4:	mov	x0, #0x10                  	// #16
  4031c8:	bl	40f24c <__fxstatat@plt+0xc6ac>
  4031cc:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  4031d0:	ldr	x1, [x1, #1472]
  4031d4:	str	x1, [x0]
  4031d8:	ldr	x1, [x20, #56]
  4031dc:	str	x1, [x0, #8]
  4031e0:	str	x0, [x20, #56]
  4031e4:	b	402e04 <__fxstatat@plt+0x264>
  4031e8:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  4031ec:	add	x23, x21, #0x860
  4031f0:	mov	x3, x23
  4031f4:	add	x2, x21, #0x878
  4031f8:	ldr	x5, [x0, #1344]
  4031fc:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  403200:	mov	x4, #0x4                   	// #4
  403204:	ldr	x1, [x0, #1472]
  403208:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2e44>
  40320c:	add	x0, x0, #0xe78
  403210:	bl	40913c <__fxstatat@plt+0x659c>
  403214:	ldr	w0, [x23, x0, lsl #2]
  403218:	b	403044 <__fxstatat@plt+0x4a4>
  40321c:	mov	w0, #0x1                   	// #1
  403220:	strb	w0, [x19, #3740]
  403224:	b	402e04 <__fxstatat@plt+0x264>
  403228:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  40322c:	add	x3, x21, #0x8a8
  403230:	add	x2, x21, #0x8c0
  403234:	mov	x4, #0x4                   	// #4
  403238:	ldr	x5, [x0, #1344]
  40323c:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  403240:	str	x3, [sp, #120]
  403244:	ldr	x1, [x0, #1472]
  403248:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2e44>
  40324c:	add	x0, x0, #0xe7f
  403250:	bl	40913c <__fxstatat@plt+0x659c>
  403254:	ldr	x3, [sp, #120]
  403258:	ldr	w0, [x3, x0, lsl #2]
  40325c:	b	402f4c <__fxstatat@plt+0x3ac>
  403260:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  403264:	add	x3, x21, #0x8f0
  403268:	add	x2, x21, #0x910
  40326c:	mov	x4, #0x4                   	// #4
  403270:	ldr	x5, [x0, #1344]
  403274:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  403278:	str	x3, [sp, #120]
  40327c:	ldr	x1, [x0, #1472]
  403280:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2e44>
  403284:	add	x0, x0, #0xe86
  403288:	bl	40913c <__fxstatat@plt+0x659c>
  40328c:	ldr	x3, [sp, #120]
  403290:	ldr	w0, [x3, x0, lsl #2]
  403294:	b	402fec <__fxstatat@plt+0x44c>
  403298:	adrp	x22, 413000 <_obstack_memory_used@@Base+0x2e44>
  40329c:	add	x22, x22, #0xd2a
  4032a0:	str	wzr, [x19, #3948]
  4032a4:	b	402e04 <__fxstatat@plt+0x264>
  4032a8:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  4032ac:	ldr	x1, [x0, #1472]
  4032b0:	cbnz	x1, 4032c4 <__fxstatat@plt+0x724>
  4032b4:	mov	w0, #0x1                   	// #1
  4032b8:	strb	w0, [x19, #3912]
  4032bc:	str	xzr, [x19, #32]
  4032c0:	b	402e04 <__fxstatat@plt+0x264>
  4032c4:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  4032c8:	add	x3, x21, #0x950
  4032cc:	add	x2, x21, #0x978
  4032d0:	mov	x4, #0x4                   	// #4
  4032d4:	ldr	x5, [x0, #1344]
  4032d8:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2e44>
  4032dc:	add	x0, x0, #0xe8f
  4032e0:	str	x3, [sp, #120]
  4032e4:	bl	40913c <__fxstatat@plt+0x659c>
  4032e8:	ldr	x3, [sp, #120]
  4032ec:	ldr	w0, [x3, x0, lsl #2]
  4032f0:	cmp	w0, #0x1
  4032f4:	b.eq	4032b4 <__fxstatat@plt+0x714>  // b.none
  4032f8:	cmp	w0, #0x2
  4032fc:	b.eq	403308 <__fxstatat@plt+0x768>  // b.none
  403300:	strb	wzr, [x19, #3912]
  403304:	b	402e04 <__fxstatat@plt+0x264>
  403308:	mov	w0, #0x1                   	// #1
  40330c:	bl	402a70 <isatty@plt>
  403310:	cmp	w0, #0x0
  403314:	cset	w1, ne  // ne = any
  403318:	strb	w1, [x19, #3912]
  40331c:	cbz	w0, 402e04 <__fxstatat@plt+0x264>
  403320:	b	4032bc <__fxstatat@plt+0x71c>
  403324:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  403328:	ldr	x1, [x0, #1472]
  40332c:	cbnz	x1, 40333c <__fxstatat@plt+0x79c>
  403330:	mov	w0, #0x1                   	// #1
  403334:	strb	w0, [x19, #4048]
  403338:	b	402e04 <__fxstatat@plt+0x264>
  40333c:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  403340:	add	x3, x21, #0x950
  403344:	add	x2, x21, #0x978
  403348:	mov	x4, #0x4                   	// #4
  40334c:	ldr	x5, [x0, #1344]
  403350:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2e44>
  403354:	add	x0, x0, #0xe97
  403358:	str	x3, [sp, #120]
  40335c:	bl	40913c <__fxstatat@plt+0x659c>
  403360:	ldr	x3, [sp, #120]
  403364:	ldr	w0, [x3, x0, lsl #2]
  403368:	cmp	w0, #0x1
  40336c:	b.eq	403330 <__fxstatat@plt+0x790>  // b.none
  403370:	cmp	w0, #0x2
  403374:	b.ne	40338c <__fxstatat@plt+0x7ec>  // b.any
  403378:	mov	w0, #0x1                   	// #1
  40337c:	bl	402a70 <isatty@plt>
  403380:	cmp	w0, #0x0
  403384:	cset	w0, ne  // ne = any
  403388:	b	403334 <__fxstatat@plt+0x794>
  40338c:	mov	w0, #0x0                   	// #0
  403390:	b	403334 <__fxstatat@plt+0x794>
  403394:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  403398:	add	x3, x21, #0x9c8
  40339c:	add	x2, x21, #0x9d8
  4033a0:	mov	x4, #0x4                   	// #4
  4033a4:	ldr	x5, [x0, #1344]
  4033a8:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  4033ac:	ldr	x1, [x0, #1472]
  4033b0:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2e44>
  4033b4:	add	x0, x0, #0xea3
  4033b8:	bl	40913c <__fxstatat@plt+0x659c>
  4033bc:	ldr	x1, [sp, #112]
  4033c0:	add	x0, x1, x0, lsl #2
  4033c4:	ldur	w0, [x0, #-56]
  4033c8:	b	402fa4 <__fxstatat@plt+0x404>
  4033cc:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  4033d0:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x5e44>
  4033d4:	mov	x4, #0x4                   	// #4
  4033d8:	add	x3, x3, #0x4f0
  4033dc:	ldr	x5, [x0, #1344]
  4033e0:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  4033e4:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x5e44>
  4033e8:	add	x2, x2, #0x518
  4033ec:	ldr	x1, [x0, #1472]
  4033f0:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2e44>
  4033f4:	add	x0, x0, #0xeb5
  4033f8:	bl	40913c <__fxstatat@plt+0x659c>
  4033fc:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x5e44>
  403400:	add	x3, x1, #0x4f0
  403404:	ldr	w1, [x3, x0, lsl #2]
  403408:	b	402f3c <__fxstatat@plt+0x39c>
  40340c:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  403410:	ldr	x22, [x0, #1472]
  403414:	b	402e04 <__fxstatat@plt+0x264>
  403418:	strb	wzr, [x19, #3913]
  40341c:	b	402e04 <__fxstatat@plt+0x264>
  403420:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  403424:	add	x1, x19, #0xf80
  403428:	add	x2, x19, #0xf78
  40342c:	ldr	x0, [x0, #1472]
  403430:	bl	40b7ec <__fxstatat@plt+0x8c4c>
  403434:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  403438:	add	x3, x1, #0x5c0
  40343c:	cbz	w0, 403454 <__fxstatat@plt+0x8b4>
  403440:	ldr	w1, [sp, #144]
  403444:	mov	w2, #0x0                   	// #0
  403448:	ldr	x4, [x3]
  40344c:	add	x3, x21, #0x2e0
  403450:	bl	40fa08 <__fxstatat@plt+0xce68>
  403454:	ldr	w0, [x19, #3968]
  403458:	str	w0, [x19, #4092]
  40345c:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  403460:	ldr	x1, [x19, #3960]
  403464:	str	x1, [x0, #1312]
  403468:	b	402e04 <__fxstatat@plt+0x264>
  40346c:	mov	w0, #0x90                  	// #144
  403470:	b	402fc0 <__fxstatat@plt+0x420>
  403474:	mov	w0, #0x1                   	// #1
  403478:	strb	w0, [x19, #3976]
  40347c:	b	402e04 <__fxstatat@plt+0x264>
  403480:	mov	w0, #0x0                   	// #0
  403484:	bl	4088cc <__fxstatat@plt+0x5d2c>
  403488:	ldr	x1, [sp, #104]
  40348c:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  403490:	ldr	x0, [x0, #1488]
  403494:	ldr	w3, [x1, #1328]
  403498:	cmp	w3, #0x1
  40349c:	b.eq	4034e8 <__fxstatat@plt+0x948>  // b.none
  4034a0:	cmp	w3, #0x2
  4034a4:	adrp	x2, 411000 <_obstack_memory_used@@Base+0xe44>
  4034a8:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x3e44>
  4034ac:	add	x2, x2, #0xeeb
  4034b0:	add	x1, x1, #0x240
  4034b4:	csel	x1, x1, x2, eq  // eq = none
  4034b8:	adrp	x2, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  4034bc:	adrp	x5, 413000 <_obstack_memory_used@@Base+0x2e44>
  4034c0:	adrp	x4, 413000 <_obstack_memory_used@@Base+0x2e44>
  4034c4:	add	x5, x5, #0xec5
  4034c8:	ldr	x3, [x2, #1336]
  4034cc:	add	x4, x4, #0xed5
  4034d0:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x2e44>
  4034d4:	add	x2, x2, #0xc83
  4034d8:	mov	x6, #0x0                   	// #0
  4034dc:	bl	40f158 <__fxstatat@plt+0xc5b8>
  4034e0:	mov	w0, #0x0                   	// #0
  4034e4:	bl	402580 <exit@plt>
  4034e8:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2e44>
  4034ec:	add	x1, x1, #0xc8e
  4034f0:	b	4034b8 <__fxstatat@plt+0x918>
  4034f4:	mov	w28, #0x1                   	// #1
  4034f8:	b	402e04 <__fxstatat@plt+0x264>
  4034fc:	ldr	x0, [x19, #3960]
  403500:	cbnz	x0, 403548 <__fxstatat@plt+0x9a8>
  403504:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2e44>
  403508:	add	x0, x0, #0xee9
  40350c:	bl	402b40 <getenv@plt>
  403510:	mov	x27, x0
  403514:	add	x2, x19, #0xf78
  403518:	add	x1, x19, #0xf80
  40351c:	bl	40b7ec <__fxstatat@plt+0x8c4c>
  403520:	cbz	x27, 4036f4 <__fxstatat@plt+0xb54>
  403524:	ldr	w0, [x19, #3968]
  403528:	str	w0, [x19, #4092]
  40352c:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  403530:	ldr	x1, [x19, #3960]
  403534:	str	x1, [x0, #1312]
  403538:	cbz	w28, 403548 <__fxstatat@plt+0x9a8>
  40353c:	mov	x0, #0x400                 	// #1024
  403540:	str	x0, [x19, #3960]
  403544:	str	wzr, [x19, #3968]
  403548:	ldr	x1, [x19, #48]
  40354c:	mov	x0, #0x3                   	// #3
  403550:	udiv	x0, x1, x0
  403554:	add	x2, x0, x0, lsl #1
  403558:	cmp	x1, x2
  40355c:	cinc	x0, x0, ne  // ne = any
  403560:	str	x0, [x19, #3984]
  403564:	mov	x0, #0x0                   	// #0
  403568:	bl	40e618 <__fxstatat@plt+0xba78>
  40356c:	mov	w27, w0
  403570:	ldr	w0, [x19, #3948]
  403574:	cmp	w0, #0x4
  403578:	ccmp	w0, #0x1, #0x4, ne  // ne = any
  40357c:	b.eq	403708 <__fxstatat@plt+0xb68>  // b.none
  403580:	ldr	x1, [x19, #48]
  403584:	cbnz	x1, 40358c <__fxstatat@plt+0x9ec>
  403588:	cbnz	w0, 403708 <__fxstatat@plt+0xb68>
  40358c:	and	w1, w27, #0xfffffffd
  403590:	cmp	w1, #0x1
  403594:	b.eq	4035a0 <__fxstatat@plt+0xa00>  // b.none
  403598:	cmp	w27, #0x6
  40359c:	cset	w1, eq  // eq = none
  4035a0:	mov	x0, #0x0                   	// #0
  4035a4:	strb	w1, [x19, #3914]
  4035a8:	bl	40e5c8 <__fxstatat@plt+0xba28>
  4035ac:	str	x0, [x19, #3144]
  4035b0:	cmp	w27, #0x7
  4035b4:	b.ne	4035c4 <__fxstatat@plt+0xa24>  // b.any
  4035b8:	mov	w2, #0x1                   	// #1
  4035bc:	mov	w1, #0x20                  	// #32
  4035c0:	bl	40e648 <__fxstatat@plt+0xbaa8>
  4035c4:	ldr	w27, [x19, #3772]
  4035c8:	cmp	w27, #0x1
  4035cc:	b.hi	403710 <__fxstatat@plt+0xb70>  // b.pmore
  4035d0:	mov	x0, #0x0                   	// #0
  4035d4:	bl	40e5c8 <__fxstatat@plt+0xba28>
  4035d8:	mov	w2, #0x1                   	// #1
  4035dc:	mov	w1, #0x3a                  	// #58
  4035e0:	str	x0, [x20, #40]
  4035e4:	bl	40e648 <__fxstatat@plt+0xbaa8>
  4035e8:	ldrb	w0, [x19, #3928]
  4035ec:	cbnz	w0, 40373c <__fxstatat@plt+0xb9c>
  4035f0:	ldr	w0, [x19, #3736]
  4035f4:	ldr	w1, [x19, #3948]
  4035f8:	sub	w0, w0, #0x1
  4035fc:	cmp	w0, #0x1
  403600:	b.hi	403754 <__fxstatat@plt+0xbb4>  // b.pmore
  403604:	cbnz	w23, 403754 <__fxstatat@plt+0xbb4>
  403608:	cbz	w1, 403758 <__fxstatat@plt+0xbb8>
  40360c:	mov	w0, #0x4                   	// #4
  403610:	str	w0, [x19, #3416]
  403614:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  403618:	ldr	w22, [x0, #1480]
  40361c:	ldrb	w0, [x19, #3912]
  403620:	cbz	w0, 403674 <__fxstatat@plt+0xad4>
  403624:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2e44>
  403628:	add	x0, x0, #0xfbd
  40362c:	bl	402b40 <getenv@plt>
  403630:	str	x0, [sp, #136]
  403634:	mov	x23, x0
  403638:	cbz	x0, 403644 <__fxstatat@plt+0xaa4>
  40363c:	ldrb	w0, [x0]
  403640:	cbnz	w0, 4039f8 <__fxstatat@plt+0xe58>
  403644:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2e44>
  403648:	add	x0, x0, #0xfc7
  40364c:	bl	402b40 <getenv@plt>
  403650:	cbz	x0, 40365c <__fxstatat@plt+0xabc>
  403654:	ldrb	w0, [x0]
  403658:	cbnz	w0, 403674 <__fxstatat@plt+0xad4>
  40365c:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2e44>
  403660:	add	x0, x0, #0xfcc
  403664:	bl	402b40 <getenv@plt>
  403668:	mov	x23, x0
  40366c:	cbnz	x0, 403988 <__fxstatat@plt+0xde8>
  403670:	strb	wzr, [x19, #3912]
  403674:	ldrb	w0, [x19, #3740]
  403678:	cbz	w0, 403c10 <__fxstatat@plt+0x1070>
  40367c:	mov	w0, #0x1                   	// #1
  403680:	strb	w0, [x19, #4056]
  403684:	ldr	w0, [x19, #4052]
  403688:	cmp	w0, #0x1
  40368c:	b.ne	4036bc <__fxstatat@plt+0xb1c>  // b.any
  403690:	ldrb	w0, [x19, #4088]
  403694:	cbnz	w0, 403c5c <__fxstatat@plt+0x10bc>
  403698:	ldr	w0, [x19, #3772]
  40369c:	cmp	w0, #0x3
  4036a0:	b.eq	403c5c <__fxstatat@plt+0x10bc>  // b.none
  4036a4:	ldr	w0, [x19, #3948]
  4036a8:	mov	w1, #0x4                   	// #4
  4036ac:	cmp	w0, #0x0
  4036b0:	mov	w0, #0x2                   	// #2
  4036b4:	csel	w0, w0, w1, eq  // eq = none
  4036b8:	str	w0, [x19, #4052]
  4036bc:	ldurb	w0, [x20, #-56]
  4036c0:	cbz	w0, 403c84 <__fxstatat@plt+0x10e4>
  4036c4:	adrp	x4, 404000 <__fxstatat@plt+0x1460>
  4036c8:	adrp	x3, 404000 <__fxstatat@plt+0x1460>
  4036cc:	add	x4, x4, #0x540
  4036d0:	add	x3, x3, #0x218
  4036d4:	adrp	x2, 404000 <__fxstatat@plt+0x1460>
  4036d8:	mov	x1, #0x0                   	// #0
  4036dc:	add	x2, x2, #0x208
  4036e0:	mov	x0, #0x1e                  	// #30
  4036e4:	bl	40aa28 <__fxstatat@plt+0x7e88>
  4036e8:	str	x0, [x19, #3744]
  4036ec:	cbnz	x0, 403c64 <__fxstatat@plt+0x10c4>
  4036f0:	bl	40f440 <__fxstatat@plt+0xc8a0>
  4036f4:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2e44>
  4036f8:	add	x0, x0, #0xeec
  4036fc:	bl	402b40 <getenv@plt>
  403700:	cbnz	x0, 403524 <__fxstatat@plt+0x984>
  403704:	b	403538 <__fxstatat@plt+0x998>
  403708:	mov	w1, #0x0                   	// #0
  40370c:	b	4035a0 <__fxstatat@plt+0xa00>
  403710:	sub	w27, w27, #0x2
  403714:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2e44>
  403718:	add	x0, x0, #0xef7
  40371c:	add	x27, x27, x0
  403720:	ldrb	w1, [x27]
  403724:	cbz	w1, 4035d0 <__fxstatat@plt+0xa30>
  403728:	ldr	x0, [x19, #3144]
  40372c:	add	x27, x27, #0x1
  403730:	mov	w2, #0x1                   	// #1
  403734:	bl	40e648 <__fxstatat@plt+0xbaa8>
  403738:	b	403720 <__fxstatat@plt+0xb80>
  40373c:	ldr	w0, [x19, #3948]
  403740:	cbnz	w0, 40374c <__fxstatat@plt+0xbac>
  403744:	ldrb	w0, [x19, #4048]
  403748:	cbz	w0, 4035f0 <__fxstatat@plt+0xa50>
  40374c:	strb	wzr, [x19, #3928]
  403750:	b	4035f0 <__fxstatat@plt+0xa50>
  403754:	cbnz	w1, 403614 <__fxstatat@plt+0xa74>
  403758:	cbnz	x22, 40388c <__fxstatat@plt+0xcec>
  40375c:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2e44>
  403760:	add	x0, x0, #0xefd
  403764:	bl	402b40 <getenv@plt>
  403768:	mov	x22, x0
  40376c:	cbnz	x0, 40388c <__fxstatat@plt+0xcec>
  403770:	adrp	x22, 413000 <_obstack_memory_used@@Base+0x2e44>
  403774:	add	x22, x22, #0xd3e
  403778:	add	x2, x21, #0xa08
  40377c:	add	x23, x21, #0x2b8
  403780:	mov	x1, x23
  403784:	mov	x0, x22
  403788:	mov	x3, #0x4                   	// #4
  40378c:	bl	408ec4 <__fxstatat@plt+0x6324>
  403790:	mov	x2, x0
  403794:	tbz	x0, #63, 4038cc <__fxstatat@plt+0xd2c>
  403798:	mov	x1, x22
  40379c:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2e44>
  4037a0:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  4037a4:	add	x0, x0, #0xf25
  4037a8:	bl	408fb4 <__fxstatat@plt+0x6414>
  4037ac:	adrp	x21, 413000 <_obstack_memory_used@@Base+0x2e44>
  4037b0:	mov	w2, #0x5                   	// #5
  4037b4:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2e44>
  4037b8:	mov	x0, #0x0                   	// #0
  4037bc:	add	x1, x1, #0xf30
  4037c0:	bl	402ac0 <dcgettext@plt>
  4037c4:	add	x21, x21, #0xf46
  4037c8:	ldr	x1, [x20, #1464]
  4037cc:	bl	402ad0 <fputs_unlocked@plt>
  4037d0:	ldr	x3, [x23]
  4037d4:	cbnz	x3, 4038b4 <__fxstatat@plt+0xd14>
  4037d8:	mov	w2, #0x5                   	// #5
  4037dc:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2e44>
  4037e0:	mov	x0, #0x0                   	// #0
  4037e4:	add	x1, x1, #0xf56
  4037e8:	bl	402ac0 <dcgettext@plt>
  4037ec:	ldr	x1, [x20, #1464]
  4037f0:	bl	402ad0 <fputs_unlocked@plt>
  4037f4:	b	402e38 <__fxstatat@plt+0x298>
  4037f8:	mov	w0, #0x2                   	// #2
  4037fc:	bl	40a29c <__fxstatat@plt+0x76fc>
  403800:	tst	w0, #0xff
  403804:	b.eq	403614 <__fxstatat@plt+0xa74>  // b.none
  403808:	add	x22, x22, #0x6
  40380c:	mov	x1, x23
  403810:	mov	x0, x22
  403814:	mov	x2, #0x6                   	// #6
  403818:	bl	402780 <strncmp@plt>
  40381c:	cbz	w0, 4037f8 <__fxstatat@plt+0xc58>
  403820:	ldrb	w0, [x22]
  403824:	cmp	w0, #0x2b
  403828:	b.ne	403778 <__fxstatat@plt+0xbd8>  // b.any
  40382c:	add	x22, x22, #0x1
  403830:	mov	w1, #0xa                   	// #10
  403834:	mov	x0, x22
  403838:	bl	4029d0 <strchr@plt>
  40383c:	mov	x23, x0
  403840:	cbz	x0, 4038ac <__fxstatat@plt+0xd0c>
  403844:	add	x27, x0, #0x1
  403848:	mov	w1, #0xa                   	// #10
  40384c:	mov	x0, x27
  403850:	bl	4029d0 <strchr@plt>
  403854:	cbz	x0, 403894 <__fxstatat@plt+0xcf4>
  403858:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2e44>
  40385c:	add	x1, x1, #0xf08
  403860:	mov	w2, #0x5                   	// #5
  403864:	mov	x0, #0x0                   	// #0
  403868:	bl	402ac0 <dcgettext@plt>
  40386c:	mov	x19, x0
  403870:	mov	x0, x22
  403874:	bl	40ebd4 <__fxstatat@plt+0xc034>
  403878:	mov	x2, x19
  40387c:	mov	x3, x0
  403880:	mov	w1, #0x0                   	// #0
  403884:	mov	w0, #0x2                   	// #2
  403888:	bl	4025b0 <error@plt>
  40388c:	add	x23, x21, #0xa00
  403890:	b	40380c <__fxstatat@plt+0xc6c>
  403894:	strb	wzr, [x23]
  403898:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  40389c:	add	x0, x0, #0x388
  4038a0:	stp	x22, x27, [x0, #384]
  4038a4:	bl	4046c4 <__fxstatat@plt+0x1b24>
  4038a8:	b	403614 <__fxstatat@plt+0xa74>
  4038ac:	mov	x27, x22
  4038b0:	b	403898 <__fxstatat@plt+0xcf8>
  4038b4:	ldr	x0, [x20, #1464]
  4038b8:	add	x23, x23, #0x8
  4038bc:	mov	x2, x21
  4038c0:	mov	w1, #0x1                   	// #1
  4038c4:	bl	402930 <__fprintf_chk@plt>
  4038c8:	b	4037d0 <__fxstatat@plt+0xc30>
  4038cc:	cmp	x0, #0x3
  4038d0:	b.hi	4038a4 <__fxstatat@plt+0xd04>  // b.pmore
  4038d4:	cmp	w0, #0x3
  4038d8:	b.hi	4038a4 <__fxstatat@plt+0xd04>  // b.pmore
  4038dc:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x3e44>
  4038e0:	add	x0, x0, #0x4b8
  4038e4:	ldrb	w0, [x0, w2, uxtw]
  4038e8:	adr	x1, 4038f4 <__fxstatat@plt+0xd54>
  4038ec:	add	x0, x1, w0, sxtb #2
  4038f0:	br	x0
  4038f4:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  4038f8:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2e44>
  4038fc:	add	x0, x0, #0x388
  403900:	add	x1, x1, #0xf8c
  403904:	stp	x1, x1, [x0, #384]
  403908:	b	4038a4 <__fxstatat@plt+0xd04>
  40390c:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  403910:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2e44>
  403914:	add	x0, x0, #0x388
  403918:	add	x1, x1, #0xfa4
  40391c:	b	403904 <__fxstatat@plt+0xd64>
  403920:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  403924:	add	x0, x0, #0x388
  403928:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2e44>
  40392c:	add	x1, x1, #0xfb3
  403930:	str	x1, [x0, #384]
  403934:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2e44>
  403938:	add	x1, x1, #0xfa7
  40393c:	str	x1, [x0, #392]
  403940:	b	4038a4 <__fxstatat@plt+0xd04>
  403944:	mov	w0, #0x2                   	// #2
  403948:	bl	40a29c <__fxstatat@plt+0x76fc>
  40394c:	tst	w0, #0xff
  403950:	b.eq	4038a4 <__fxstatat@plt+0xd04>  // b.none
  403954:	adrp	x22, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  403958:	add	x22, x22, #0x388
  40395c:	mov	w2, #0x2                   	// #2
  403960:	mov	x0, #0x0                   	// #0
  403964:	ldr	x1, [x22, #384]
  403968:	bl	402ac0 <dcgettext@plt>
  40396c:	str	x0, [x22, #384]
  403970:	ldr	x1, [x22, #392]
  403974:	mov	w2, #0x2                   	// #2
  403978:	mov	x0, #0x0                   	// #0
  40397c:	bl	402ac0 <dcgettext@plt>
  403980:	str	x0, [x22, #392]
  403984:	b	4038a4 <__fxstatat@plt+0xd04>
  403988:	ldrb	w0, [x0]
  40398c:	cbz	w0, 403670 <__fxstatat@plt+0xad0>
  403990:	adrp	x3, 414000 <_obstack_memory_used@@Base+0x3e44>
  403994:	adrp	x27, 413000 <_obstack_memory_used@@Base+0x2e44>
  403998:	add	x28, x3, #0xfb1
  40399c:	add	x27, x27, #0xfd1
  4039a0:	mov	x1, x27
  4039a4:	mov	x0, x28
  4039a8:	mov	x2, #0x5                   	// #5
  4039ac:	bl	402780 <strncmp@plt>
  4039b0:	cbz	w0, 4039e0 <__fxstatat@plt+0xe40>
  4039b4:	mov	x0, x28
  4039b8:	bl	402540 <strlen@plt>
  4039bc:	add	x0, x0, #0x1
  4039c0:	mov	x1, #0x10c3                	// #4291
  4039c4:	add	x28, x28, x0
  4039c8:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x3e44>
  4039cc:	add	x0, x0, #0xfb1
  4039d0:	sub	x0, x28, x0
  4039d4:	cmp	x0, x1
  4039d8:	b.ls	4039a0 <__fxstatat@plt+0xe00>  // b.plast
  4039dc:	b	403670 <__fxstatat@plt+0xad0>
  4039e0:	mov	x1, x23
  4039e4:	add	x0, x28, #0x5
  4039e8:	mov	w2, #0x0                   	// #0
  4039ec:	bl	4029e0 <fnmatch@plt>
  4039f0:	cbnz	w0, 4039b4 <__fxstatat@plt+0xe14>
  4039f4:	b	403674 <__fxstatat@plt+0xad4>
  4039f8:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2e44>
  4039fc:	add	x1, x1, #0xfd7
  403a00:	add	x0, sp, #0x80
  403a04:	bl	402a20 <strcpy@plt>
  403a08:	mov	x0, x23
  403a0c:	adrp	x23, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  403a10:	add	x23, x23, #0x388
  403a14:	bl	40f418 <__fxstatat@plt+0xc878>
  403a18:	str	x0, [x20, #64]
  403a1c:	str	x0, [sp, #144]
  403a20:	ldr	x0, [sp, #136]
  403a24:	ldrb	w1, [x0]
  403a28:	cmp	w1, #0x2a
  403a2c:	b.eq	403a7c <__fxstatat@plt+0xedc>  // b.none
  403a30:	cmp	w1, #0x3a
  403a34:	b.eq	403a70 <__fxstatat@plt+0xed0>  // b.none
  403a38:	cbnz	w1, 403b0c <__fxstatat@plt+0xf6c>
  403a3c:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  403a40:	add	x0, x0, #0x388
  403a44:	ldr	x2, [x0, #112]
  403a48:	cmp	x2, #0x6
  403a4c:	b.ne	403674 <__fxstatat@plt+0xad4>  // b.any
  403a50:	ldr	x0, [x0, #120]
  403a54:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2e44>
  403a58:	add	x1, x1, #0xff2
  403a5c:	bl	402780 <strncmp@plt>
  403a60:	cbnz	w0, 403674 <__fxstatat@plt+0xad4>
  403a64:	mov	w0, #0x1                   	// #1
  403a68:	strb	w0, [x19, #3929]
  403a6c:	b	403674 <__fxstatat@plt+0xad4>
  403a70:	add	x0, x0, #0x1
  403a74:	str	x0, [sp, #136]
  403a78:	b	403a20 <__fxstatat@plt+0xe80>
  403a7c:	mov	x0, #0x28                  	// #40
  403a80:	bl	40f24c <__fxstatat@plt+0xc6ac>
  403a84:	mov	x3, x0
  403a88:	add	x1, sp, #0x88
  403a8c:	ldr	x0, [x19, #3936]
  403a90:	mov	w2, #0x1                   	// #1
  403a94:	str	x0, [x3, #32]
  403a98:	ldr	x0, [sp, #136]
  403a9c:	str	x3, [x19, #3936]
  403aa0:	add	x0, x0, #0x1
  403aa4:	str	x0, [sp, #136]
  403aa8:	ldr	x0, [sp, #144]
  403aac:	str	x0, [x3, #8]
  403ab0:	add	x0, sp, #0x90
  403ab4:	bl	404258 <__fxstatat@plt+0x16b8>
  403ab8:	tst	w0, #0xff
  403abc:	b.eq	403ad8 <__fxstatat@plt+0xf38>  // b.none
  403ac0:	ldr	x0, [sp, #136]
  403ac4:	add	x1, x0, #0x1
  403ac8:	str	x1, [sp, #136]
  403acc:	ldrb	w0, [x0]
  403ad0:	cmp	w0, #0x3d
  403ad4:	b.eq	403bd0 <__fxstatat@plt+0x1030>  // b.none
  403ad8:	mov	w2, #0x5                   	// #5
  403adc:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x3e44>
  403ae0:	mov	x0, #0x0                   	// #0
  403ae4:	add	x1, x1, #0xa2
  403ae8:	bl	402ac0 <dcgettext@plt>
  403aec:	mov	x2, x0
  403af0:	mov	w1, #0x0                   	// #0
  403af4:	mov	w0, #0x0                   	// #0
  403af8:	bl	4025b0 <error@plt>
  403afc:	ldr	x0, [x20, #64]
  403b00:	bl	402990 <free@plt>
  403b04:	ldr	x0, [x19, #3936]
  403b08:	b	403c04 <__fxstatat@plt+0x1064>
  403b0c:	add	x1, x0, #0x1
  403b10:	str	x1, [sp, #136]
  403b14:	ldrb	w1, [x0]
  403b18:	strb	w1, [sp, #128]
  403b1c:	ldrb	w1, [x0, #1]
  403b20:	cbz	w1, 403ad8 <__fxstatat@plt+0xf38>
  403b24:	add	x1, x0, #0x2
  403b28:	str	x1, [sp, #136]
  403b2c:	ldrb	w1, [x0, #1]
  403b30:	strb	w1, [sp, #129]
  403b34:	add	x1, x0, #0x3
  403b38:	str	x1, [sp, #136]
  403b3c:	ldrb	w0, [x0, #2]
  403b40:	cmp	w0, #0x3d
  403b44:	b.ne	403ad8 <__fxstatat@plt+0xf38>  // b.any
  403b48:	add	x2, x21, #0xa18
  403b4c:	mov	x27, #0x0                   	// #0
  403b50:	ldr	x1, [x2, x27, lsl #3]
  403b54:	mov	w28, w27
  403b58:	cbz	x1, 403b98 <__fxstatat@plt+0xff8>
  403b5c:	add	x0, sp, #0x80
  403b60:	str	x2, [sp, #96]
  403b64:	bl	402950 <strcmp@plt>
  403b68:	add	x27, x27, #0x1
  403b6c:	ldr	x2, [sp, #96]
  403b70:	cbnz	w0, 403b50 <__fxstatat@plt+0xfb0>
  403b74:	add	x3, x23, w28, sxtw #4
  403b78:	add	x1, sp, #0x88
  403b7c:	ldr	x0, [sp, #144]
  403b80:	mov	w2, #0x0                   	// #0
  403b84:	str	x0, [x3, #8]
  403b88:	add	x0, sp, #0x90
  403b8c:	bl	404258 <__fxstatat@plt+0x16b8>
  403b90:	tst	w0, #0xff
  403b94:	b.ne	403a20 <__fxstatat@plt+0xe80>  // b.any
  403b98:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2e44>
  403b9c:	add	x1, x1, #0xfda
  403ba0:	mov	w2, #0x5                   	// #5
  403ba4:	mov	x0, #0x0                   	// #0
  403ba8:	bl	402ac0 <dcgettext@plt>
  403bac:	mov	x23, x0
  403bb0:	add	x0, sp, #0x80
  403bb4:	bl	40ebd4 <__fxstatat@plt+0xc034>
  403bb8:	mov	x2, x23
  403bbc:	mov	x3, x0
  403bc0:	mov	w1, #0x0                   	// #0
  403bc4:	mov	w0, #0x0                   	// #0
  403bc8:	bl	4025b0 <error@plt>
  403bcc:	b	403ad8 <__fxstatat@plt+0xf38>
  403bd0:	ldr	x0, [sp, #144]
  403bd4:	str	x0, [x3, #24]
  403bd8:	add	x1, sp, #0x88
  403bdc:	add	x3, x3, #0x10
  403be0:	add	x0, sp, #0x90
  403be4:	mov	w2, #0x0                   	// #0
  403be8:	bl	404258 <__fxstatat@plt+0x16b8>
  403bec:	tst	w0, #0xff
  403bf0:	b.ne	403a20 <__fxstatat@plt+0xe80>  // b.any
  403bf4:	b	403ad8 <__fxstatat@plt+0xf38>
  403bf8:	ldr	x23, [x0, #32]
  403bfc:	bl	402990 <free@plt>
  403c00:	mov	x0, x23
  403c04:	cbnz	x0, 403bf8 <__fxstatat@plt+0x1058>
  403c08:	strb	wzr, [x19, #3912]
  403c0c:	b	403a3c <__fxstatat@plt+0xe9c>
  403c10:	ldrb	w0, [x19, #3912]
  403c14:	cbz	w0, 403684 <__fxstatat@plt+0xae4>
  403c18:	mov	w0, #0xd                   	// #13
  403c1c:	bl	4045f8 <__fxstatat@plt+0x1a58>
  403c20:	tst	w0, #0xff
  403c24:	b.ne	40367c <__fxstatat@plt+0xadc>  // b.any
  403c28:	mov	w0, #0xe                   	// #14
  403c2c:	bl	4045f8 <__fxstatat@plt+0x1a58>
  403c30:	tst	w0, #0xff
  403c34:	b.eq	403c40 <__fxstatat@plt+0x10a0>  // b.none
  403c38:	ldrb	w0, [x19, #3929]
  403c3c:	cbnz	w0, 40367c <__fxstatat@plt+0xadc>
  403c40:	mov	w0, #0xc                   	// #12
  403c44:	bl	4045f8 <__fxstatat@plt+0x1a58>
  403c48:	tst	w0, #0xff
  403c4c:	b.eq	403684 <__fxstatat@plt+0xae4>  // b.none
  403c50:	ldr	w0, [x19, #3948]
  403c54:	cbz	w0, 40367c <__fxstatat@plt+0xadc>
  403c58:	b	403684 <__fxstatat@plt+0xae4>
  403c5c:	mov	w0, #0x2                   	// #2
  403c60:	b	4036b8 <__fxstatat@plt+0xb18>
  403c64:	adrp	x4, 402000 <mbrtowc@plt-0x4c0>
  403c68:	adrp	x3, 402000 <mbrtowc@plt-0x4c0>
  403c6c:	add	x4, x4, #0x990
  403c70:	add	x3, x3, #0x730
  403c74:	sub	x0, x20, #0x90
  403c78:	mov	x2, #0x0                   	// #0
  403c7c:	mov	x1, #0x0                   	// #0
  403c80:	bl	40ffdc <_obstack_begin@@Base>
  403c84:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2e44>
  403c88:	add	x0, x0, #0xff9
  403c8c:	bl	402b40 <getenv@plt>
  403c90:	bl	4101fc <_obstack_memory_used@@Base+0x40>
  403c94:	stur	x0, [x20, #-256]
  403c98:	ldr	w0, [x19, #3416]
  403c9c:	cmp	w0, #0x4
  403ca0:	ccmp	w0, #0x2, #0x4, ne  // ne = any
  403ca4:	b.ne	403df8 <__fxstatat@plt+0x1258>  // b.any
  403ca8:	mov	w0, #0x1                   	// #1
  403cac:	strb	w0, [x19, #4049]
  403cb0:	mov	w0, #0x0                   	// #0
  403cb4:	strb	w0, [x19, #4050]
  403cb8:	ldrb	w0, [x19, #3928]
  403cbc:	cbz	w0, 403d04 <__fxstatat@plt+0x1164>
  403cc0:	sub	x23, x20, #0xe8
  403cc4:	adrp	x28, 402000 <mbrtowc@plt-0x4c0>
  403cc8:	adrp	x27, 402000 <mbrtowc@plt-0x4c0>
  403ccc:	add	x28, x28, #0x990
  403cd0:	add	x27, x27, #0x730
  403cd4:	mov	x4, x28
  403cd8:	mov	x3, x27
  403cdc:	mov	x2, #0x0                   	// #0
  403ce0:	mov	x1, #0x0                   	// #0
  403ce4:	mov	x0, x23
  403ce8:	bl	40ffdc <_obstack_begin@@Base>
  403cec:	mov	x4, x28
  403cf0:	mov	x3, x27
  403cf4:	add	x0, x23, #0xb8
  403cf8:	mov	x2, #0x0                   	// #0
  403cfc:	mov	x1, #0x0                   	// #0
  403d00:	bl	40ffdc <_obstack_begin@@Base>
  403d04:	ldrb	w0, [x19, #4048]
  403d08:	cbz	w0, 403d64 <__fxstatat@plt+0x11c4>
  403d0c:	add	x27, x19, #0xc50
  403d10:	mov	w23, #0x0                   	// #0
  403d14:	mov	w0, w23
  403d18:	bl	40921c <__fxstatat@plt+0x667c>
  403d1c:	tst	w0, #0xff
  403d20:	b.ne	403e3c <__fxstatat@plt+0x129c>  // b.any
  403d24:	sub	w0, w23, #0x2d
  403d28:	cmp	w23, #0x7e
  403d2c:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  403d30:	b.ls	403e3c <__fxstatat@plt+0x129c>  // b.plast
  403d34:	cmp	w23, #0x5f
  403d38:	cset	w0, eq  // eq = none
  403d3c:	ldrb	w1, [x27]
  403d40:	add	w23, w23, #0x1
  403d44:	cmp	w23, #0x100
  403d48:	orr	w0, w0, w1
  403d4c:	strb	w0, [x27], #1
  403d50:	b.ne	403d14 <__fxstatat@plt+0x1174>  // b.any
  403d54:	bl	40f5cc <__fxstatat@plt+0xca2c>
  403d58:	cmp	x0, #0x0
  403d5c:	csel	x0, x24, x0, eq  // eq = none
  403d60:	str	x0, [x19, #3920]
  403d64:	mov	x0, #0x64                  	// #100
  403d68:	str	x0, [x19, #4040]
  403d6c:	mov	x0, #0x47e0                	// #18400
  403d70:	bl	40f24c <__fxstatat@plt+0xc6ac>
  403d74:	sub	w23, w25, w22
  403d78:	stp	xzr, x0, [x19, #8]
  403d7c:	bl	406dbc <__fxstatat@plt+0x421c>
  403d80:	cmp	w23, #0x0
  403d84:	b.gt	403e54 <__fxstatat@plt+0x12b4>
  403d88:	ldrb	w1, [x19, #4088]
  403d8c:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x5e44>
  403d90:	add	x0, x0, #0x112
  403d94:	cbz	w1, 403e44 <__fxstatat@plt+0x12a4>
  403d98:	mov	x3, x24
  403d9c:	mov	w2, #0x1                   	// #1
  403da0:	mov	w1, #0x3                   	// #3
  403da4:	bl	406eb4 <__fxstatat@plt+0x4314>
  403da8:	ldr	x0, [x19, #8]
  403dac:	cbz	x0, 403e7c <__fxstatat@plt+0x12dc>
  403db0:	bl	404a38 <__fxstatat@plt+0x1e98>
  403db4:	ldrb	w0, [x19, #4088]
  403db8:	cbnz	w0, 403dc8 <__fxstatat@plt+0x1228>
  403dbc:	mov	w1, #0x1                   	// #1
  403dc0:	mov	x0, #0x0                   	// #0
  403dc4:	bl	404b9c <__fxstatat@plt+0x1ffc>
  403dc8:	ldr	x0, [x19, #8]
  403dcc:	cbz	x0, 403e7c <__fxstatat@plt+0x12dc>
  403dd0:	bl	40810c <__fxstatat@plt+0x556c>
  403dd4:	ldr	x0, [x19, #3136]
  403dd8:	cbz	x0, 403df0 <__fxstatat@plt+0x1250>
  403ddc:	mov	w0, #0xa                   	// #10
  403de0:	bl	4027f0 <putchar_unlocked@plt>
  403de4:	ldr	x0, [x19, #3752]
  403de8:	add	x0, x0, #0x1
  403dec:	str	x0, [x19, #3752]
  403df0:	mov	w23, #0x1                   	// #1
  403df4:	b	403f3c <__fxstatat@plt+0x139c>
  403df8:	ldr	w0, [x19, #3948]
  403dfc:	cbz	w0, 403ca8 <__fxstatat@plt+0x1108>
  403e00:	ldrb	w0, [x19, #3976]
  403e04:	cbnz	w0, 403ca8 <__fxstatat@plt+0x1108>
  403e08:	ldrb	w0, [x19, #3956]
  403e0c:	strb	w0, [x19, #4049]
  403e10:	cbnz	w0, 403cb0 <__fxstatat@plt+0x1110>
  403e14:	ldurb	w0, [x20, #-56]
  403e18:	cbnz	w0, 403e34 <__fxstatat@plt+0x1294>
  403e1c:	ldrb	w0, [x19, #3912]
  403e20:	cbnz	w0, 403e34 <__fxstatat@plt+0x1294>
  403e24:	ldr	w0, [x19, #3772]
  403e28:	cbnz	w0, 403e34 <__fxstatat@plt+0x1294>
  403e2c:	ldrb	w0, [x19, #3740]
  403e30:	cbz	w0, 403cb0 <__fxstatat@plt+0x1110>
  403e34:	mov	w0, #0x1                   	// #1
  403e38:	b	403cb4 <__fxstatat@plt+0x1114>
  403e3c:	mov	w0, #0x1                   	// #1
  403e40:	b	403d3c <__fxstatat@plt+0x119c>
  403e44:	mov	w2, #0x1                   	// #1
  403e48:	mov	x1, #0x0                   	// #0
  403e4c:	bl	4048b4 <__fxstatat@plt+0x1d14>
  403e50:	b	403da8 <__fxstatat@plt+0x1208>
  403e54:	sxtw	x22, w22
  403e58:	ldr	x0, [x26, x22, lsl #3]
  403e5c:	mov	x3, x24
  403e60:	add	x22, x22, #0x1
  403e64:	mov	w2, #0x1                   	// #1
  403e68:	mov	w1, #0x0                   	// #0
  403e6c:	bl	406eb4 <__fxstatat@plt+0x4314>
  403e70:	cmp	w25, w22
  403e74:	b.gt	403e58 <__fxstatat@plt+0x12b8>
  403e78:	b	403da8 <__fxstatat@plt+0x1208>
  403e7c:	cmp	w23, #0x1
  403e80:	b.gt	403df0 <__fxstatat@plt+0x1250>
  403e84:	ldr	x0, [x19, #3136]
  403e88:	cbz	x0, 403df0 <__fxstatat@plt+0x1250>
  403e8c:	ldr	x0, [x0, #24]
  403e90:	cbnz	x0, 403df0 <__fxstatat@plt+0x1250>
  403e94:	sturb	wzr, [x20, #-55]
  403e98:	b	403df0 <__fxstatat@plt+0x1250>
  403e9c:	ldr	x3, [x19, #3744]
  403ea0:	ldr	x0, [x22, #24]
  403ea4:	str	x0, [x19, #3136]
  403ea8:	ldr	x0, [x22]
  403eac:	cbz	x3, 404078 <__fxstatat@plt+0x14d8>
  403eb0:	cbnz	x0, 404078 <__fxstatat@plt+0x14d8>
  403eb4:	ldp	x2, x1, [x20, #-128]
  403eb8:	sub	x2, x1, x2
  403ebc:	cmp	x2, #0xf
  403ec0:	b.hi	403ee0 <__fxstatat@plt+0x1340>  // b.pmore
  403ec4:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xe44>
  403ec8:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2e44>
  403ecc:	add	x3, x21, #0xae0
  403ed0:	add	x1, x1, #0xda8
  403ed4:	add	x0, x0, #0xffc
  403ed8:	mov	w2, #0x403                 	// #1027
  403edc:	bl	402b20 <__assert_fail@plt>
  403ee0:	ldur	x2, [x1, #-16]
  403ee4:	sub	x0, x1, #0x10
  403ee8:	stur	x0, [x20, #-120]
  403eec:	ldur	x0, [x1, #-8]
  403ef0:	add	x1, sp, #0x90
  403ef4:	stp	x2, x0, [sp, #144]
  403ef8:	mov	x0, x3
  403efc:	bl	40af1c <__fxstatat@plt+0x837c>
  403f00:	cbnz	x0, 403f20 <__fxstatat@plt+0x1380>
  403f04:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xe44>
  403f08:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x3e44>
  403f0c:	add	x3, x21, #0xaec
  403f10:	add	x1, x1, #0xda8
  403f14:	add	x0, x0, #0x33
  403f18:	mov	w2, #0x640                 	// #1600
  403f1c:	b	403edc <__fxstatat@plt+0x133c>
  403f20:	bl	402990 <free@plt>
  403f24:	ldr	x0, [x22]
  403f28:	bl	402990 <free@plt>
  403f2c:	ldr	x0, [x22, #8]
  403f30:	bl	402990 <free@plt>
  403f34:	mov	x0, x22
  403f38:	bl	402990 <free@plt>
  403f3c:	ldr	x22, [x19, #3136]
  403f40:	cbnz	x22, 403e9c <__fxstatat@plt+0x12fc>
  403f44:	ldrb	w0, [x19, #3912]
  403f48:	cbz	w0, 403ff8 <__fxstatat@plt+0x1458>
  403f4c:	ldrb	w0, [x19, #3776]
  403f50:	cbz	w0, 403ff8 <__fxstatat@plt+0x1458>
  403f54:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  403f58:	add	x22, x0, #0x388
  403f5c:	ldr	x2, [x0, #904]
  403f60:	cmp	x2, #0x2
  403f64:	b.ne	403f98 <__fxstatat@plt+0x13f8>  // b.any
  403f68:	ldr	x0, [x22, #8]
  403f6c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x3e44>
  403f70:	add	x1, x1, #0x39
  403f74:	bl	4028f0 <memcmp@plt>
  403f78:	cbnz	w0, 403f98 <__fxstatat@plt+0x13f8>
  403f7c:	ldr	x0, [x22, #16]
  403f80:	cmp	x0, #0x1
  403f84:	b.ne	403f98 <__fxstatat@plt+0x13f8>  // b.any
  403f88:	ldr	x0, [x22, #24]
  403f8c:	ldrb	w0, [x0]
  403f90:	cmp	w0, #0x6d
  403f94:	b.eq	403f9c <__fxstatat@plt+0x13fc>  // b.none
  403f98:	bl	40574c <__fxstatat@plt+0x2bac>
  403f9c:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  403fa0:	add	x24, x21, #0x1d0
  403fa4:	add	x25, x19, #0xec8
  403fa8:	mov	x22, #0x0                   	// #0
  403fac:	ldr	x0, [x0, #1488]
  403fb0:	bl	4029f0 <fflush_unlocked@plt>
  403fb4:	ldr	w23, [x24, x22, lsl #2]
  403fb8:	mov	x0, x25
  403fbc:	mov	w1, w23
  403fc0:	bl	402940 <sigismember@plt>
  403fc4:	cbz	w0, 403fd4 <__fxstatat@plt+0x1434>
  403fc8:	mov	w0, w23
  403fcc:	mov	x1, #0x0                   	// #0
  403fd0:	bl	4026f0 <signal@plt>
  403fd4:	add	x22, x22, #0x1
  403fd8:	cmp	x22, #0xc
  403fdc:	b.ne	403fb4 <__fxstatat@plt+0x1414>  // b.any
  403fe0:	ldr	w22, [x19, #3764]
  403fe4:	cbnz	w22, 4040a4 <__fxstatat@plt+0x1504>
  403fe8:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  403fec:	ldr	w0, [x0, #1512]
  403ff0:	cbz	w0, 403ff8 <__fxstatat@plt+0x1458>
  403ff4:	bl	4025a0 <raise@plt>
  403ff8:	ldrb	w0, [x19, #3928]
  403ffc:	cbz	w0, 404048 <__fxstatat@plt+0x14a8>
  404000:	sub	x20, x20, #0xe8
  404004:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x3e44>
  404008:	mov	x1, x20
  40400c:	add	x0, x0, #0x3c
  404010:	bl	404cf4 <__fxstatat@plt+0x2154>
  404014:	add	x1, x20, #0xb8
  404018:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x3e44>
  40401c:	add	x0, x0, #0x46
  404020:	bl	404cf4 <__fxstatat@plt+0x2154>
  404024:	ldr	x0, [x19, #3144]
  404028:	bl	40e618 <__fxstatat@plt+0xba78>
  40402c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x5e44>
  404030:	add	x1, x1, #0x518
  404034:	ldr	x2, [x1, w0, uxtw #3]
  404038:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x3e44>
  40403c:	mov	w0, #0x1                   	// #1
  404040:	add	x1, x1, #0x53
  404044:	bl	4027b0 <__printf_chk@plt>
  404048:	ldr	x20, [x19, #3744]
  40404c:	cbz	x20, 4040bc <__fxstatat@plt+0x151c>
  404050:	mov	x0, x20
  404054:	bl	40a6a8 <__fxstatat@plt+0x7b08>
  404058:	cbz	x0, 4040b4 <__fxstatat@plt+0x1514>
  40405c:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xe44>
  404060:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x3e44>
  404064:	add	x3, x21, #0xaec
  404068:	add	x1, x1, #0xda8
  40406c:	add	x0, x0, #0x79
  404070:	mov	w2, #0x674                 	// #1652
  404074:	b	403edc <__fxstatat@plt+0x133c>
  404078:	ldrb	w2, [x22, #16]
  40407c:	ldr	x1, [x22, #8]
  404080:	bl	408398 <__fxstatat@plt+0x57f8>
  404084:	ldr	x0, [x22]
  404088:	bl	402990 <free@plt>
  40408c:	ldr	x0, [x22, #8]
  404090:	bl	402990 <free@plt>
  404094:	mov	x0, x22
  404098:	bl	402990 <free@plt>
  40409c:	sturb	w23, [x20, #-55]
  4040a0:	b	403f3c <__fxstatat@plt+0x139c>
  4040a4:	mov	w0, #0x13                  	// #19
  4040a8:	sub	w22, w22, #0x1
  4040ac:	bl	4025a0 <raise@plt>
  4040b0:	b	403fe4 <__fxstatat@plt+0x1444>
  4040b4:	mov	x0, x20
  4040b8:	bl	40ab88 <__fxstatat@plt+0x7fe8>
  4040bc:	ldr	w0, [x19, #3768]
  4040c0:	ldp	x19, x20, [sp, #16]
  4040c4:	ldp	x21, x22, [sp, #32]
  4040c8:	ldp	x23, x24, [sp, #48]
  4040cc:	ldp	x25, x26, [sp, #64]
  4040d0:	ldp	x27, x28, [sp, #80]
  4040d4:	ldp	x29, x30, [sp], #160
  4040d8:	ret
  4040dc:	mov	x29, #0x0                   	// #0
  4040e0:	mov	x30, #0x0                   	// #0
  4040e4:	mov	x5, x0
  4040e8:	ldr	x1, [sp]
  4040ec:	add	x2, sp, #0x8
  4040f0:	mov	x6, sp
  4040f4:	movz	x0, #0x0, lsl #48
  4040f8:	movk	x0, #0x0, lsl #32
  4040fc:	movk	x0, #0x40, lsl #16
  404100:	movk	x0, #0x2bb0
  404104:	movz	x3, #0x0, lsl #48
  404108:	movk	x3, #0x0, lsl #32
  40410c:	movk	x3, #0x41, lsl #16
  404110:	movk	x3, #0x1c28
  404114:	movz	x4, #0x0, lsl #48
  404118:	movk	x4, #0x0, lsl #32
  40411c:	movk	x4, #0x41, lsl #16
  404120:	movk	x4, #0x1ca8
  404124:	bl	4027a0 <__libc_start_main@plt>
  404128:	bl	4028b0 <abort@plt>
  40412c:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x19e44>
  404130:	ldr	x0, [x0, #4064]
  404134:	cbz	x0, 40413c <__fxstatat@plt+0x159c>
  404138:	b	402880 <__gmon_start__@plt>
  40413c:	ret
  404140:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  404144:	add	x1, x0, #0x5b0
  404148:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  40414c:	add	x0, x0, #0x5b0
  404150:	cmp	x1, x0
  404154:	b.eq	404180 <__fxstatat@plt+0x15e0>  // b.none
  404158:	sub	sp, sp, #0x10
  40415c:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xe44>
  404160:	ldr	x1, [x1, #3368]
  404164:	str	x1, [sp, #8]
  404168:	cbz	x1, 404178 <__fxstatat@plt+0x15d8>
  40416c:	mov	x16, x1
  404170:	add	sp, sp, #0x10
  404174:	br	x16
  404178:	add	sp, sp, #0x10
  40417c:	ret
  404180:	ret
  404184:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  404188:	add	x1, x0, #0x5b0
  40418c:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  404190:	add	x0, x0, #0x5b0
  404194:	sub	x1, x1, x0
  404198:	mov	x2, #0x2                   	// #2
  40419c:	asr	x1, x1, #3
  4041a0:	sdiv	x1, x1, x2
  4041a4:	cbz	x1, 4041d0 <__fxstatat@plt+0x1630>
  4041a8:	sub	sp, sp, #0x10
  4041ac:	adrp	x2, 411000 <_obstack_memory_used@@Base+0xe44>
  4041b0:	ldr	x2, [x2, #3376]
  4041b4:	str	x2, [sp, #8]
  4041b8:	cbz	x2, 4041c8 <__fxstatat@plt+0x1628>
  4041bc:	mov	x16, x2
  4041c0:	add	sp, sp, #0x10
  4041c4:	br	x16
  4041c8:	add	sp, sp, #0x10
  4041cc:	ret
  4041d0:	ret
  4041d4:	stp	x29, x30, [sp, #-32]!
  4041d8:	mov	x29, sp
  4041dc:	str	x19, [sp, #16]
  4041e0:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  4041e4:	ldrb	w0, [x19, #1504]
  4041e8:	cbnz	w0, 4041f8 <__fxstatat@plt+0x1658>
  4041ec:	bl	404140 <__fxstatat@plt+0x15a0>
  4041f0:	mov	w0, #0x1                   	// #1
  4041f4:	strb	w0, [x19, #1504]
  4041f8:	ldr	x19, [sp, #16]
  4041fc:	ldp	x29, x30, [sp], #32
  404200:	ret
  404204:	b	404184 <__fxstatat@plt+0x15e4>
  404208:	ldr	x0, [x0]
  40420c:	udiv	x2, x0, x1
  404210:	msub	x0, x2, x1, x0
  404214:	ret
  404218:	ldr	x3, [x0]
  40421c:	ldr	x2, [x1]
  404220:	cmp	x3, x2
  404224:	b.ne	40423c <__fxstatat@plt+0x169c>  // b.any
  404228:	ldr	x2, [x0, #8]
  40422c:	ldr	x0, [x1, #8]
  404230:	cmp	x2, x0
  404234:	cset	w0, eq  // eq = none
  404238:	ret
  40423c:	mov	w0, #0x0                   	// #0
  404240:	b	404238 <__fxstatat@plt+0x1698>
  404244:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  404248:	ldr	w2, [x1, #1512]
  40424c:	cbnz	w2, 404254 <__fxstatat@plt+0x16b4>
  404250:	str	w0, [x1, #1512]
  404254:	ret
  404258:	ldr	x5, [x0]
  40425c:	adrp	x10, 414000 <_obstack_memory_used@@Base+0x3e44>
  404260:	ldr	x8, [x1]
  404264:	adrp	x11, 414000 <_obstack_memory_used@@Base+0x3e44>
  404268:	and	w2, w2, #0xff
  40426c:	add	x10, x10, #0x368
  404270:	add	x11, x11, #0x36c
  404274:	mov	w6, #0x0                   	// #0
  404278:	mov	x9, #0x0                   	// #0
  40427c:	mov	w7, #0x0                   	// #0
  404280:	mov	w12, #0x7f                  	// #127
  404284:	mov	w13, #0x7f                  	// #127
  404288:	sub	w14, w6, #0x1
  40428c:	ldrb	w4, [x8]
  404290:	cmp	w14, #0x3
  404294:	b.hi	4042a8 <__fxstatat@plt+0x1708>  // b.pmore
  404298:	ldrb	w14, [x10, w14, uxtw]
  40429c:	adr	x15, 4042a8 <__fxstatat@plt+0x1708>
  4042a0:	add	x14, x15, w14, sxtb #2
  4042a4:	br	x14
  4042a8:	cmp	w4, #0x5c
  4042ac:	b.eq	4042ec <__fxstatat@plt+0x174c>  // b.none
  4042b0:	b.hi	4042d8 <__fxstatat@plt+0x1738>  // b.pmore
  4042b4:	cmp	w4, #0x3d
  4042b8:	b.eq	4042f8 <__fxstatat@plt+0x1758>  // b.none
  4042bc:	b.hi	4042cc <__fxstatat@plt+0x172c>  // b.pmore
  4042c0:	cbz	w4, 4042fc <__fxstatat@plt+0x175c>
  4042c4:	cmp	w4, #0x3a
  4042c8:	b.eq	4042fc <__fxstatat@plt+0x175c>  // b.none
  4042cc:	add	x8, x8, #0x1
  4042d0:	strb	w4, [x5], #1
  4042d4:	b	4043f4 <__fxstatat@plt+0x1854>
  4042d8:	cmp	w4, #0x5e
  4042dc:	b.ne	4042cc <__fxstatat@plt+0x172c>  // b.any
  4042e0:	add	x8, x8, #0x1
  4042e4:	mov	w6, #0x4                   	// #4
  4042e8:	b	404288 <__fxstatat@plt+0x16e8>
  4042ec:	add	x8, x8, #0x1
  4042f0:	mov	w6, #0x1                   	// #1
  4042f4:	b	404288 <__fxstatat@plt+0x16e8>
  4042f8:	cbz	w2, 4042cc <__fxstatat@plt+0x172c>
  4042fc:	mov	w6, #0x5                   	// #5
  404300:	b	404384 <__fxstatat@plt+0x17e4>
  404304:	cmp	w4, #0x78
  404308:	b.hi	404328 <__fxstatat@plt+0x1788>  // b.pmore
  40430c:	cmp	w4, #0x57
  404310:	b.hi	40433c <__fxstatat@plt+0x179c>  // b.pmore
  404314:	cmp	w4, #0x37
  404318:	b.hi	404360 <__fxstatat@plt+0x17c0>  // b.pmore
  40431c:	cmp	w4, #0x2f
  404320:	b.hi	40436c <__fxstatat@plt+0x17cc>  // b.pmore
  404324:	cbz	w4, 4043cc <__fxstatat@plt+0x182c>
  404328:	add	x9, x9, #0x1
  40432c:	mov	w7, w4
  404330:	mov	w6, #0x0                   	// #0
  404334:	strb	w4, [x5], #1
  404338:	b	404378 <__fxstatat@plt+0x17d8>
  40433c:	sub	w6, w4, #0x58
  404340:	cmp	w6, #0x20
  404344:	b.hi	404328 <__fxstatat@plt+0x1788>  // b.pmore
  404348:	ldrb	w6, [x11, w6, uxtw]
  40434c:	adr	x7, 404358 <__fxstatat@plt+0x17b8>
  404350:	add	x6, x7, w6, sxtb #2
  404354:	br	x6
  404358:	mov	w4, #0x1b                  	// #27
  40435c:	b	404328 <__fxstatat@plt+0x1788>
  404360:	cmp	w4, #0x3f
  404364:	csel	w4, w4, w13, ne  // ne = any
  404368:	b	404328 <__fxstatat@plt+0x1788>
  40436c:	sub	w4, w4, #0x30
  404370:	mov	w6, #0x2                   	// #2
  404374:	and	w7, w4, #0xff
  404378:	add	x8, x8, #0x1
  40437c:	cmp	w6, #0x4
  404380:	b.ls	404288 <__fxstatat@plt+0x16e8>  // b.plast
  404384:	str	x5, [x0]
  404388:	cmp	w6, #0x6
  40438c:	str	x8, [x1]
  404390:	cset	w0, ne  // ne = any
  404394:	str	x9, [x3]
  404398:	ret
  40439c:	mov	w4, #0xc                   	// #12
  4043a0:	b	404328 <__fxstatat@plt+0x1788>
  4043a4:	mov	w4, #0xa                   	// #10
  4043a8:	b	404328 <__fxstatat@plt+0x1788>
  4043ac:	mov	w4, #0xd                   	// #13
  4043b0:	b	404328 <__fxstatat@plt+0x1788>
  4043b4:	mov	w4, #0x9                   	// #9
  4043b8:	b	404328 <__fxstatat@plt+0x1788>
  4043bc:	mov	w4, #0xb                   	// #11
  4043c0:	b	404328 <__fxstatat@plt+0x1788>
  4043c4:	mov	w4, #0x20                  	// #32
  4043c8:	b	404328 <__fxstatat@plt+0x1788>
  4043cc:	mov	w6, #0x6                   	// #6
  4043d0:	b	404378 <__fxstatat@plt+0x17d8>
  4043d4:	mov	w7, #0x0                   	// #0
  4043d8:	mov	w6, #0x3                   	// #3
  4043dc:	b	404378 <__fxstatat@plt+0x17d8>
  4043e0:	sub	w14, w4, #0x30
  4043e4:	and	w14, w14, #0xff
  4043e8:	cmp	w14, #0x7
  4043ec:	b.ls	404400 <__fxstatat@plt+0x1860>  // b.plast
  4043f0:	strb	w7, [x5], #1
  4043f4:	add	x9, x9, #0x1
  4043f8:	mov	w6, #0x0                   	// #0
  4043fc:	b	404288 <__fxstatat@plt+0x16e8>
  404400:	add	x8, x8, #0x1
  404404:	add	w4, w4, w7, lsl #3
  404408:	and	w4, w4, #0xff
  40440c:	sub	w4, w4, #0x30
  404410:	and	w7, w4, #0xff
  404414:	b	404288 <__fxstatat@plt+0x16e8>
  404418:	cmp	w4, #0x46
  40441c:	b.hi	404444 <__fxstatat@plt+0x18a4>  // b.pmore
  404420:	cmp	w4, #0x40
  404424:	b.hi	404468 <__fxstatat@plt+0x18c8>  // b.pmore
  404428:	sub	w14, w4, #0x30
  40442c:	and	w14, w14, #0xff
  404430:	cmp	w14, #0x9
  404434:	b.hi	4043f0 <__fxstatat@plt+0x1850>  // b.pmore
  404438:	add	x8, x8, #0x1
  40443c:	add	w4, w4, w7, lsl #4
  404440:	b	404408 <__fxstatat@plt+0x1868>
  404444:	sub	w14, w4, #0x61
  404448:	and	w14, w14, #0xff
  40444c:	cmp	w14, #0x5
  404450:	b.hi	4043f0 <__fxstatat@plt+0x1850>  // b.pmore
  404454:	add	w4, w4, w7, lsl #4
  404458:	add	x8, x8, #0x1
  40445c:	and	w4, w4, #0xff
  404460:	sub	w4, w4, #0x57
  404464:	b	404410 <__fxstatat@plt+0x1870>
  404468:	add	w4, w4, w7, lsl #4
  40446c:	add	x8, x8, #0x1
  404470:	and	w4, w4, #0xff
  404474:	sub	w4, w4, #0x37
  404478:	b	404410 <__fxstatat@plt+0x1870>
  40447c:	sub	w6, w4, #0x40
  404480:	and	w6, w6, #0xff
  404484:	cmp	w6, #0x3e
  404488:	b.hi	404498 <__fxstatat@plt+0x18f8>  // b.pmore
  40448c:	add	x8, x8, #0x1
  404490:	and	w4, w4, #0x1f
  404494:	b	4042d0 <__fxstatat@plt+0x1730>
  404498:	cmp	w4, #0x3f
  40449c:	b.ne	4044b8 <__fxstatat@plt+0x1918>  // b.any
  4044a0:	strb	w12, [x5], #1
  4044a4:	b	4043f4 <__fxstatat@plt+0x1854>
  4044a8:	mov	w4, #0x8                   	// #8
  4044ac:	b	404328 <__fxstatat@plt+0x1788>
  4044b0:	mov	w4, #0x7                   	// #7
  4044b4:	b	404328 <__fxstatat@plt+0x1788>
  4044b8:	mov	w6, #0x6                   	// #6
  4044bc:	b	404384 <__fxstatat@plt+0x17e4>
  4044c0:	cmp	w0, #0x26
  4044c4:	ccmp	w0, #0x16, #0x4, ne  // ne = any
  4044c8:	b.eq	4044d8 <__fxstatat@plt+0x1938>  // b.none
  4044cc:	cmp	w0, #0x5f
  4044d0:	cset	w0, eq  // eq = none
  4044d4:	ret
  4044d8:	mov	w0, #0x1                   	// #1
  4044dc:	b	4044d4 <__fxstatat@plt+0x1934>
  4044e0:	ldr	w1, [x0, #152]
  4044e4:	cmp	w1, #0x3
  4044e8:	ccmp	w1, #0x9, #0x4, ne  // ne = any
  4044ec:	b.eq	404504 <__fxstatat@plt+0x1964>  // b.none
  4044f0:	ldr	w0, [x0, #156]
  4044f4:	and	w0, w0, #0xf000
  4044f8:	cmp	w0, #0x4, lsl #12
  4044fc:	cset	w0, eq  // eq = none
  404500:	ret
  404504:	mov	w0, #0x1                   	// #1
  404508:	b	404500 <__fxstatat@plt+0x1960>
  40450c:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  404510:	add	x0, x0, #0x5e8
  404514:	mov	x4, #0xb8                  	// #184
  404518:	ldp	x1, x2, [x0, #8]
  40451c:	ldr	x3, [x0, #24]
  404520:	mov	x0, #0x0                   	// #0
  404524:	cmp	x1, x0
  404528:	b.ne	404530 <__fxstatat@plt+0x1990>  // b.any
  40452c:	ret
  404530:	madd	x5, x0, x4, x2
  404534:	str	x5, [x3, x0, lsl #3]
  404538:	add	x0, x0, #0x1
  40453c:	b	404524 <__fxstatat@plt+0x1984>
  404540:	b	402990 <free@plt>
  404544:	stp	x29, x30, [sp, #-48]!
  404548:	mov	x29, sp
  40454c:	stp	x19, x20, [sp, #16]
  404550:	mov	x19, x0
  404554:	stp	x21, x22, [sp, #32]
  404558:	adrp	x22, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  40455c:	mov	x21, x1
  404560:	add	x22, x22, #0x5e8
  404564:	cmp	x19, x21
  404568:	b.cc	40457c <__fxstatat@plt+0x19dc>  // b.lo, b.ul, b.last
  40456c:	ldp	x19, x20, [sp, #16]
  404570:	ldp	x21, x22, [sp, #32]
  404574:	ldp	x29, x30, [sp], #48
  404578:	ret
  40457c:	ldr	x0, [x22, #32]
  404580:	add	x20, x19, #0x1
  404584:	cbz	x0, 4045b4 <__fxstatat@plt+0x1a14>
  404588:	udiv	x1, x21, x0
  40458c:	udiv	x0, x20, x0
  404590:	cmp	x1, x0
  404594:	b.ls	4045b4 <__fxstatat@plt+0x1a14>  // b.plast
  404598:	mov	w0, #0x9                   	// #9
  40459c:	bl	4027f0 <putchar_unlocked@plt>
  4045a0:	ldr	x20, [x22, #32]
  4045a4:	udiv	x19, x19, x20
  4045a8:	madd	x20, x19, x20, x20
  4045ac:	mov	x19, x20
  4045b0:	b	404564 <__fxstatat@plt+0x19c4>
  4045b4:	mov	w0, #0x20                  	// #32
  4045b8:	bl	4027f0 <putchar_unlocked@plt>
  4045bc:	b	4045ac <__fxstatat@plt+0x1a0c>
  4045c0:	stp	x29, x30, [sp, #-32]!
  4045c4:	mov	x29, sp
  4045c8:	str	x19, [sp, #16]
  4045cc:	mov	x19, x0
  4045d0:	mov	x0, #0x10                  	// #16
  4045d4:	bl	40f24c <__fxstatat@plt+0xc6ac>
  4045d8:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  4045dc:	add	x1, x1, #0x5e8
  4045e0:	ldr	x2, [x1, #40]
  4045e4:	stp	x19, x2, [x0]
  4045e8:	ldr	x19, [sp, #16]
  4045ec:	str	x0, [x1, #40]
  4045f0:	ldp	x29, x30, [sp], #32
  4045f4:	ret
  4045f8:	ubfiz	x0, x0, #4, #32
  4045fc:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  404600:	add	x1, x1, #0x388
  404604:	add	x3, x1, x0
  404608:	ldr	x2, [x1, x0]
  40460c:	cbz	x2, 404658 <__fxstatat@plt+0x1ab8>
  404610:	cmp	x2, #0x1
  404614:	ldr	x0, [x3, #8]
  404618:	b.ne	40462c <__fxstatat@plt+0x1a8c>  // b.any
  40461c:	ldrb	w0, [x0]
  404620:	cmp	w0, #0x30
  404624:	cset	w0, ne  // ne = any
  404628:	ret
  40462c:	cmp	x2, #0x2
  404630:	b.ne	404660 <__fxstatat@plt+0x1ac0>  // b.any
  404634:	stp	x29, x30, [sp, #-16]!
  404638:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xe44>
  40463c:	add	x1, x1, #0xd95
  404640:	mov	x29, sp
  404644:	bl	402780 <strncmp@plt>
  404648:	cmp	w0, #0x0
  40464c:	cset	w0, ne  // ne = any
  404650:	ldp	x29, x30, [sp], #16
  404654:	ret
  404658:	mov	w0, #0x0                   	// #0
  40465c:	ret
  404660:	mov	w0, #0x1                   	// #1
  404664:	ret
  404668:	stp	x29, x30, [sp, #-32]!
  40466c:	adrp	x4, 411000 <_obstack_memory_used@@Base+0xe44>
  404670:	mov	w2, #0x0                   	// #0
  404674:	mov	x29, sp
  404678:	add	x4, x4, #0xdf0
  40467c:	add	x3, sp, #0x18
  404680:	mov	x1, #0x0                   	// #0
  404684:	bl	40fae0 <__fxstatat@plt+0xcf40>
  404688:	cbz	w0, 4046a0 <__fxstatat@plt+0x1b00>
  40468c:	cmp	w0, #0x1
  404690:	b.eq	4046b4 <__fxstatat@plt+0x1b14>  // b.none
  404694:	mov	w0, #0x0                   	// #0
  404698:	ldp	x29, x30, [sp], #32
  40469c:	ret
  4046a0:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  4046a4:	ldr	x1, [sp, #24]
  4046a8:	str	x1, [x0, #1560]
  4046ac:	mov	w0, #0x1                   	// #1
  4046b0:	b	404698 <__fxstatat@plt+0x1af8>
  4046b4:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  4046b8:	mov	x2, #0xffffffffffffffff    	// #-1
  4046bc:	str	x2, [x1, #1560]
  4046c0:	b	404698 <__fxstatat@plt+0x1af8>
  4046c4:	sub	sp, sp, #0x690
  4046c8:	mov	x1, #0x0                   	// #0
  4046cc:	stp	x29, x30, [sp, #16]
  4046d0:	add	x29, sp, #0x10
  4046d4:	stp	x21, x22, [sp, #48]
  4046d8:	adrp	x22, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  4046dc:	add	x22, x22, #0x388
  4046e0:	add	x4, x22, #0x180
  4046e4:	stp	x19, x20, [sp, #32]
  4046e8:	add	x19, sp, #0x80
  4046ec:	stp	x23, x24, [sp, #64]
  4046f0:	stp	x25, x26, [sp, #80]
  4046f4:	str	x27, [sp, #96]
  4046f8:	ldr	x0, [x1, x4]
  4046fc:	ldrb	w2, [x0]
  404700:	cbnz	w2, 404840 <__fxstatat@plt+0x1ca0>
  404704:	mov	x0, #0x0                   	// #0
  404708:	str	x0, [x1, x19]
  40470c:	add	x1, x1, #0x8
  404710:	cmp	x1, #0x10
  404714:	b.ne	4046f8 <__fxstatat@plt+0x1b58>  // b.any
  404718:	ldr	x0, [sp, #128]
  40471c:	cbnz	x0, 404728 <__fxstatat@plt+0x1b88>
  404720:	ldr	x0, [sp, #136]
  404724:	cbz	x0, 404820 <__fxstatat@plt+0x1c80>
  404728:	mov	x21, #0xc                   	// #12
  40472c:	mov	w23, #0xe                   	// #14
  404730:	add	x25, sp, #0x90
  404734:	movk	w23, #0x2, lsl #16
  404738:	mov	x20, #0x0                   	// #0
  40473c:	mov	w0, w23
  404740:	str	x21, [sp, #120]
  404744:	bl	402720 <nl_langinfo@plt>
  404748:	mov	x24, x0
  40474c:	mov	w1, #0x25                  	// #37
  404750:	bl	4029d0 <strchr@plt>
  404754:	cbnz	x0, 404820 <__fxstatat@plt+0x1c80>
  404758:	bl	402970 <__ctype_b_loc@plt>
  40475c:	ldrb	w1, [x24]
  404760:	add	x3, sp, #0x78
  404764:	ldr	x0, [x0]
  404768:	mov	w5, #0x0                   	// #0
  40476c:	mov	x2, #0x80                  	// #128
  404770:	ldrh	w4, [x0, x1, lsl #1]
  404774:	mov	x1, x25
  404778:	mov	x0, x24
  40477c:	ubfx	x4, x4, #11, #1
  404780:	bl	40bd24 <__fxstatat@plt+0x9184>
  404784:	cmp	x0, #0x7f
  404788:	b.hi	404820 <__fxstatat@plt+0x1c80>  // b.pmore
  40478c:	ldr	x0, [sp, #120]
  404790:	add	w23, w23, #0x1
  404794:	add	x25, x25, #0x80
  404798:	cmp	x20, x0
  40479c:	csel	x20, x20, x0, cs  // cs = hs, nlast
  4047a0:	sub	w0, w23, #0x20, lsl #12
  4047a4:	subs	w0, w0, #0x1a
  4047a8:	b.ne	40473c <__fxstatat@plt+0x1b9c>  // b.any
  4047ac:	cmp	x21, x20
  4047b0:	b.hi	40486c <__fxstatat@plt+0x1ccc>  // b.pmore
  4047b4:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  4047b8:	add	x21, x21, #0x5e8
  4047bc:	adrp	x23, 411000 <_obstack_memory_used@@Base+0xe44>
  4047c0:	adrp	x24, 416000 <_obstack_memory_used@@Base+0x5e44>
  4047c4:	add	x26, x21, #0x38
  4047c8:	add	x23, x23, #0xd98
  4047cc:	add	x24, x24, #0xd1
  4047d0:	mov	x25, #0x0                   	// #0
  4047d4:	add	x0, x22, #0x180
  4047d8:	mov	x20, #0x0                   	// #0
  4047dc:	ldr	x27, [x0, x25, lsl #3]
  4047e0:	add	x0, x20, x26
  4047e4:	ldr	x1, [x19]
  4047e8:	cbnz	x1, 40487c <__fxstatat@plt+0x1cdc>
  4047ec:	mov	x3, x27
  4047f0:	mov	x2, x24
  4047f4:	mov	x1, #0x80                  	// #128
  4047f8:	bl	4026a0 <snprintf@plt>
  4047fc:	cmp	w0, #0x7f
  404800:	b.hi	404820 <__fxstatat@plt+0x1c80>  // b.pmore
  404804:	add	x20, x20, #0x80
  404808:	cmp	x20, #0x600
  40480c:	b.ne	4047e0 <__fxstatat@plt+0x1c40>  // b.any
  404810:	add	x26, x26, #0x600
  404814:	add	x19, x19, #0x8
  404818:	cbz	x25, 404874 <__fxstatat@plt+0x1cd4>
  40481c:	strb	w25, [x21, #3128]
  404820:	ldp	x29, x30, [sp, #16]
  404824:	ldp	x19, x20, [sp, #32]
  404828:	ldp	x21, x22, [sp, #48]
  40482c:	ldp	x23, x24, [sp, #64]
  404830:	ldp	x25, x26, [sp, #80]
  404834:	ldr	x27, [sp, #96]
  404838:	add	sp, sp, #0x690
  40483c:	ret
  404840:	ldrb	w3, [x0, #1]
  404844:	cmp	w2, #0x25
  404848:	b.ne	40485c <__fxstatat@plt+0x1cbc>  // b.any
  40484c:	cmp	w3, #0x25
  404850:	b.eq	404864 <__fxstatat@plt+0x1cc4>  // b.none
  404854:	cmp	w3, #0x62
  404858:	b.eq	404708 <__fxstatat@plt+0x1b68>  // b.none
  40485c:	add	x0, x0, #0x1
  404860:	b	4046fc <__fxstatat@plt+0x1b5c>
  404864:	add	x0, x0, #0x1
  404868:	b	40485c <__fxstatat@plt+0x1cbc>
  40486c:	mov	x21, x20
  404870:	b	40472c <__fxstatat@plt+0x1b8c>
  404874:	mov	x25, #0x1                   	// #1
  404878:	b	4047d4 <__fxstatat@plt+0x1c34>
  40487c:	sub	x5, x1, x27
  404880:	cmp	x5, #0x80
  404884:	b.gt	404820 <__fxstatat@plt+0x1c80>
  404888:	add	x1, x1, #0x2
  40488c:	str	x1, [sp]
  404890:	add	x1, sp, #0x90
  404894:	mov	x6, x27
  404898:	add	x7, x1, x20
  40489c:	mov	x4, x23
  4048a0:	mov	x3, #0xffffffffffffffff    	// #-1
  4048a4:	mov	w2, #0x1                   	// #1
  4048a8:	mov	x1, #0x80                  	// #128
  4048ac:	bl	402700 <__snprintf_chk@plt>
  4048b0:	b	4047fc <__fxstatat@plt+0x1c5c>
  4048b4:	stp	x29, x30, [sp, #-48]!
  4048b8:	mov	x29, sp
  4048bc:	stp	x19, x20, [sp, #16]
  4048c0:	mov	x19, x0
  4048c4:	mov	x20, x1
  4048c8:	mov	x0, #0x20                  	// #32
  4048cc:	stp	x21, x22, [sp, #32]
  4048d0:	and	w22, w2, #0xff
  4048d4:	bl	40f24c <__fxstatat@plt+0xc6ac>
  4048d8:	mov	x21, x0
  4048dc:	cbz	x20, 4048ec <__fxstatat@plt+0x1d4c>
  4048e0:	mov	x0, x20
  4048e4:	bl	40f418 <__fxstatat@plt+0xc878>
  4048e8:	mov	x20, x0
  4048ec:	str	x20, [x21, #8]
  4048f0:	cbz	x19, 404900 <__fxstatat@plt+0x1d60>
  4048f4:	mov	x0, x19
  4048f8:	bl	40f418 <__fxstatat@plt+0xc878>
  4048fc:	mov	x19, x0
  404900:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  404904:	add	x0, x0, #0x5e8
  404908:	str	x19, [x21]
  40490c:	strb	w22, [x21, #16]
  404910:	ldr	x1, [x0, #3136]
  404914:	str	x21, [x0, #3136]
  404918:	str	x1, [x21, #24]
  40491c:	ldp	x19, x20, [sp, #16]
  404920:	ldp	x21, x22, [sp, #32]
  404924:	ldp	x29, x30, [sp], #48
  404928:	ret
  40492c:	stp	x29, x30, [sp, #-48]!
  404930:	mov	x1, #0x2                   	// #2
  404934:	mov	x3, #0xffffffffffffffff    	// #-1
  404938:	mov	x29, sp
  40493c:	stp	x19, x20, [sp, #16]
  404940:	mov	x19, x0
  404944:	adrp	x0, 42c000 <__progname@@GLIBC_2.17+0xa28>
  404948:	mov	x2, x19
  40494c:	ldr	x4, [x0, #560]
  404950:	add	x0, sp, #0x28
  404954:	bl	40e6e8 <__fxstatat@plt+0xbb48>
  404958:	mov	x20, x0
  40495c:	ldrb	w1, [x19]
  404960:	ldrb	w0, [sp, #40]
  404964:	cmp	w1, w0
  404968:	b.ne	404988 <__fxstatat@plt+0x1de8>  // b.any
  40496c:	mov	x0, x19
  404970:	bl	402540 <strlen@plt>
  404974:	cmp	x0, x20
  404978:	cset	w0, ne  // ne = any
  40497c:	ldp	x19, x20, [sp, #16]
  404980:	ldp	x29, x30, [sp], #48
  404984:	ret
  404988:	mov	w0, #0x1                   	// #1
  40498c:	b	40497c <__fxstatat@plt+0x1ddc>
  404990:	stp	x29, x30, [sp, #-64]!
  404994:	mov	x29, sp
  404998:	stp	x19, x20, [sp, #16]
  40499c:	mov	x20, x0
  4049a0:	stp	x21, x22, [sp, #32]
  4049a4:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  4049a8:	add	x21, x21, #0x5e8
  4049ac:	stp	x23, x24, [sp, #48]
  4049b0:	and	w23, w1, #0xff
  4049b4:	bl	402540 <strlen@plt>
  4049b8:	adrp	x24, 411000 <_obstack_memory_used@@Base+0xe44>
  4049bc:	add	x1, x0, #0x1
  4049c0:	add	x21, x21, #0xc50
  4049c4:	mov	x0, #0x3                   	// #3
  4049c8:	add	x24, x24, #0xda1
  4049cc:	bl	40f27c <__fxstatat@plt+0xc6dc>
  4049d0:	mov	x22, x0
  4049d4:	mov	x19, x0
  4049d8:	ldrb	w4, [x20]
  4049dc:	cbnz	w4, 4049fc <__fxstatat@plt+0x1e5c>
  4049e0:	strb	wzr, [x19]
  4049e4:	mov	x0, x22
  4049e8:	ldp	x19, x20, [sp, #16]
  4049ec:	ldp	x21, x22, [sp, #32]
  4049f0:	ldp	x23, x24, [sp, #48]
  4049f4:	ldp	x29, x30, [sp], #64
  4049f8:	ret
  4049fc:	add	x20, x20, #0x1
  404a00:	cbz	w23, 404a14 <__fxstatat@plt+0x1e74>
  404a04:	cmp	w4, #0x2f
  404a08:	b.ne	404a14 <__fxstatat@plt+0x1e74>  // b.any
  404a0c:	strb	w4, [x19], #1
  404a10:	b	4049d8 <__fxstatat@plt+0x1e38>
  404a14:	ldrb	w0, [x21, w4, sxtw]
  404a18:	cbnz	w0, 404a0c <__fxstatat@plt+0x1e6c>
  404a1c:	mov	x0, x19
  404a20:	mov	x3, x24
  404a24:	mov	x2, #0xffffffffffffffff    	// #-1
  404a28:	mov	w1, #0x1                   	// #1
  404a2c:	add	x19, x19, #0x3
  404a30:	bl	402560 <__sprintf_chk@plt>
  404a34:	b	4049d8 <__fxstatat@plt+0x1e38>
  404a38:	stp	x29, x30, [sp, #-32]!
  404a3c:	mov	x29, sp
  404a40:	stp	x19, x20, [sp, #16]
  404a44:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  404a48:	add	x19, x19, #0x5e8
  404a4c:	ldr	x20, [x19, #8]
  404a50:	ldr	x0, [x19, #3408]
  404a54:	add	x1, x20, x20, lsr #1
  404a58:	cmp	x1, x0
  404a5c:	b.ls	404a84 <__fxstatat@plt+0x1ee4>  // b.plast
  404a60:	ldr	x0, [x19, #24]
  404a64:	bl	402990 <free@plt>
  404a68:	mov	x0, x20
  404a6c:	mov	x1, #0x18                  	// #24
  404a70:	bl	40f27c <__fxstatat@plt+0xc6dc>
  404a74:	str	x0, [x19, #24]
  404a78:	ldr	x0, [x19, #8]
  404a7c:	add	x0, x0, x0, lsl #1
  404a80:	str	x0, [x19, #3408]
  404a84:	bl	40450c <__fxstatat@plt+0x196c>
  404a88:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  404a8c:	add	x0, x0, #0x5e8
  404a90:	ldr	w1, [x0, #3416]
  404a94:	cmn	w1, #0x1
  404a98:	b.eq	404b34 <__fxstatat@plt+0x1f94>  // b.none
  404a9c:	add	x0, x0, #0xd60
  404aa0:	bl	402590 <_setjmp@plt>
  404aa4:	adrp	x1, 42c000 <__progname@@GLIBC_2.17+0xa28>
  404aa8:	ldr	w6, [x1, #832]
  404aac:	cbz	w0, 404b40 <__fxstatat@plt+0x1fa0>
  404ab0:	cmp	w6, #0x3
  404ab4:	b.ne	404ad8 <__fxstatat@plt+0x1f38>  // b.any
  404ab8:	adrp	x3, 414000 <_obstack_memory_used@@Base+0x3e44>
  404abc:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xe44>
  404ac0:	adrp	x0, 411000 <_obstack_memory_used@@Base+0xe44>
  404ac4:	add	x3, x3, #0x4c0
  404ac8:	add	x1, x1, #0xda8
  404acc:	add	x0, x0, #0xdb1
  404ad0:	mov	w2, #0xeea                 	// #3818
  404ad4:	bl	402b20 <__assert_fail@plt>
  404ad8:	bl	40450c <__fxstatat@plt+0x196c>
  404adc:	mov	w2, #0x1                   	// #1
  404ae0:	adrp	x3, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  404ae4:	add	x3, x3, #0x5e8
  404ae8:	cmp	w6, #0x4
  404aec:	ldr	x1, [x3, #8]
  404af0:	ldr	x0, [x3, #24]
  404af4:	b.ne	404b48 <__fxstatat@plt+0x1fa8>  // b.any
  404af8:	ldr	w5, [x3, #3736]
  404afc:	adrp	x4, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  404b00:	add	x4, x4, #0x5e8
  404b04:	add	w6, w6, w5
  404b08:	adrp	x3, 414000 <_obstack_memory_used@@Base+0x3e44>
  404b0c:	add	x3, x3, #0x4c0
  404b10:	ldrb	w7, [x4, #3740]
  404b14:	lsl	x6, x6, #1
  404b18:	ldrb	w4, [x4, #3741]
  404b1c:	add	x2, x6, w2, sxtw
  404b20:	add	x3, x3, #0x10
  404b24:	add	x2, x4, x2, lsl #1
  404b28:	add	x2, x7, x2, lsl #1
  404b2c:	ldr	x2, [x3, x2, lsl #3]
  404b30:	bl	40c428 <__fxstatat@plt+0x9888>
  404b34:	ldp	x19, x20, [sp, #16]
  404b38:	ldp	x29, x30, [sp], #32
  404b3c:	ret
  404b40:	mov	w2, #0x0                   	// #0
  404b44:	b	404ae0 <__fxstatat@plt+0x1f40>
  404b48:	mov	w5, #0x0                   	// #0
  404b4c:	b	404afc <__fxstatat@plt+0x1f5c>
  404b50:	stp	x29, x30, [sp, #-32]!
  404b54:	mov	x29, sp
  404b58:	stp	x19, x20, [sp, #16]
  404b5c:	mov	x19, x0
  404b60:	mov	x20, x1
  404b64:	bl	402b30 <__errno_location@plt>
  404b68:	str	wzr, [x0]
  404b6c:	mov	x1, x20
  404b70:	mov	x0, x19
  404b74:	ldp	x19, x20, [sp, #16]
  404b78:	ldp	x29, x30, [sp], #32
  404b7c:	b	402ae0 <strcoll@plt>
  404b80:	mov	x2, x1
  404b84:	ldr	x1, [x0]
  404b88:	ldr	x0, [x2]
  404b8c:	b	40a03c <__fxstatat@plt+0x749c>
  404b90:	ldr	x0, [x0]
  404b94:	ldr	x1, [x1]
  404b98:	b	40a03c <__fxstatat@plt+0x749c>
  404b9c:	stp	x29, x30, [sp, #-64]!
  404ba0:	mov	x29, sp
  404ba4:	stp	x19, x20, [sp, #16]
  404ba8:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  404bac:	add	x20, x20, #0x5e8
  404bb0:	stp	x21, x22, [sp, #32]
  404bb4:	mov	x21, x0
  404bb8:	stp	x23, x24, [sp, #48]
  404bbc:	and	w24, w1, #0xff
  404bc0:	cbz	x0, 404bdc <__fxstatat@plt+0x203c>
  404bc4:	ldr	x0, [x20, #3744]
  404bc8:	cbz	x0, 404bdc <__fxstatat@plt+0x203c>
  404bcc:	mov	x1, x21
  404bd0:	mov	w2, #0x0                   	// #0
  404bd4:	mov	x0, #0x0                   	// #0
  404bd8:	bl	4048b4 <__fxstatat@plt+0x1d14>
  404bdc:	ldr	x22, [x20, #8]
  404be0:	sub	x22, x22, #0x1
  404be4:	cmn	x22, #0x1
  404be8:	ldr	x2, [x20, #24]
  404bec:	b.ne	404c1c <__fxstatat@plt+0x207c>  // b.any
  404bf0:	ldr	x4, [x20, #8]
  404bf4:	mov	x0, #0x0                   	// #0
  404bf8:	mov	x1, #0x0                   	// #0
  404bfc:	cmp	x4, x1
  404c00:	b.ne	404cd8 <__fxstatat@plt+0x2138>  // b.any
  404c04:	str	x0, [x20, #8]
  404c08:	ldp	x19, x20, [sp, #16]
  404c0c:	ldp	x21, x22, [sp, #32]
  404c10:	ldp	x23, x24, [sp, #48]
  404c14:	ldp	x29, x30, [sp], #64
  404c18:	ret
  404c1c:	ldr	x19, [x2, x22, lsl #3]
  404c20:	ldr	w0, [x19, #152]
  404c24:	cmp	w0, #0x3
  404c28:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  404c2c:	b.ne	404be0 <__fxstatat@plt+0x2040>  // b.any
  404c30:	ldr	x23, [x19]
  404c34:	cbz	x21, 404c74 <__fxstatat@plt+0x20d4>
  404c38:	mov	x0, x23
  404c3c:	bl	409ab8 <__fxstatat@plt+0x6f18>
  404c40:	ldrb	w1, [x0]
  404c44:	cmp	w1, #0x2e
  404c48:	b.ne	404c68 <__fxstatat@plt+0x20c8>  // b.any
  404c4c:	ldrb	w1, [x0, #1]
  404c50:	cmp	w1, #0x2e
  404c54:	cinc	x1, x0, eq  // eq = none
  404c58:	ldrb	w0, [x1, #1]
  404c5c:	cmp	w0, #0x2f
  404c60:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  404c64:	b.eq	404be0 <__fxstatat@plt+0x2040>  // b.none
  404c68:	ldrb	w0, [x23]
  404c6c:	cmp	w0, #0x2f
  404c70:	b.ne	404cac <__fxstatat@plt+0x210c>  // b.any
  404c74:	ldr	x1, [x19, #8]
  404c78:	mov	w2, w24
  404c7c:	mov	x0, x23
  404c80:	bl	4048b4 <__fxstatat@plt+0x1d14>
  404c84:	ldr	w0, [x19, #152]
  404c88:	cmp	w0, #0x9
  404c8c:	b.ne	404be0 <__fxstatat@plt+0x2040>  // b.any
  404c90:	ldr	x0, [x19]
  404c94:	bl	402990 <free@plt>
  404c98:	ldr	x0, [x19, #8]
  404c9c:	bl	402990 <free@plt>
  404ca0:	ldr	x0, [x19, #16]
  404ca4:	bl	402990 <free@plt>
  404ca8:	b	404be0 <__fxstatat@plt+0x2040>
  404cac:	mov	x1, x23
  404cb0:	mov	x0, x21
  404cb4:	mov	x2, #0x0                   	// #0
  404cb8:	bl	409e50 <__fxstatat@plt+0x72b0>
  404cbc:	ldr	x1, [x19, #8]
  404cc0:	mov	w2, w24
  404cc4:	mov	x23, x0
  404cc8:	bl	4048b4 <__fxstatat@plt+0x1d14>
  404ccc:	mov	x0, x23
  404cd0:	bl	402990 <free@plt>
  404cd4:	b	404c84 <__fxstatat@plt+0x20e4>
  404cd8:	ldr	x3, [x2, x1, lsl #3]
  404cdc:	str	x3, [x2, x0, lsl #3]
  404ce0:	add	x1, x1, #0x1
  404ce4:	ldr	w3, [x3, #152]
  404ce8:	cmp	w3, #0x9
  404cec:	cinc	x0, x0, ne  // ne = any
  404cf0:	b	404bfc <__fxstatat@plt+0x205c>
  404cf4:	stp	x29, x30, [sp, #-48]!
  404cf8:	mov	x29, sp
  404cfc:	stp	x21, x22, [sp, #32]
  404d00:	ldp	x22, x3, [x1, #16]
  404d04:	stp	x19, x20, [sp, #16]
  404d08:	sub	x20, x3, x22
  404d0c:	cmp	x20, #0x7
  404d10:	b.ls	404d9c <__fxstatat@plt+0x21fc>  // b.plast
  404d14:	cmp	x3, x22
  404d18:	b.ne	404d28 <__fxstatat@plt+0x2188>  // b.any
  404d1c:	ldrb	w2, [x1, #80]
  404d20:	orr	w2, w2, #0x2
  404d24:	strb	w2, [x1, #80]
  404d28:	ldr	x2, [x1, #48]
  404d2c:	adrp	x21, 411000 <_obstack_memory_used@@Base+0xe44>
  404d30:	ldr	x4, [x1, #32]
  404d34:	add	x3, x3, x2
  404d38:	bic	x2, x3, x2
  404d3c:	lsr	x20, x20, #3
  404d40:	ldr	x3, [x1, #8]
  404d44:	add	x21, x21, #0xdcb
  404d48:	mov	x19, #0x0                   	// #0
  404d4c:	sub	x5, x2, x3
  404d50:	sub	x3, x4, x3
  404d54:	cmp	x5, x3
  404d58:	csel	x2, x2, x4, ls  // ls = plast
  404d5c:	stp	x2, x2, [x1, #16]
  404d60:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  404d64:	ldr	x1, [x1, #1488]
  404d68:	bl	402ad0 <fputs_unlocked@plt>
  404d6c:	ldr	x2, [x22, x19, lsl #3]
  404d70:	mov	x1, x21
  404d74:	add	x19, x19, #0x1
  404d78:	mov	w0, #0x1                   	// #1
  404d7c:	bl	4027b0 <__printf_chk@plt>
  404d80:	cmp	x20, x19
  404d84:	b.hi	404d6c <__fxstatat@plt+0x21cc>  // b.pmore
  404d88:	ldp	x19, x20, [sp, #16]
  404d8c:	mov	w0, #0xa                   	// #10
  404d90:	ldp	x21, x22, [sp, #32]
  404d94:	ldp	x29, x30, [sp], #48
  404d98:	b	4027f0 <putchar_unlocked@plt>
  404d9c:	ldp	x19, x20, [sp, #16]
  404da0:	ldp	x21, x22, [sp, #32]
  404da4:	ldp	x29, x30, [sp], #48
  404da8:	ret
  404dac:	stp	x29, x30, [sp, #-48]!
  404db0:	mov	x29, sp
  404db4:	stp	x19, x20, [sp, #16]
  404db8:	sxtw	x19, w2
  404dbc:	str	x21, [sp, #32]
  404dc0:	cbz	x0, 404e30 <__fxstatat@plt+0x2290>
  404dc4:	mov	x21, x0
  404dc8:	mov	w1, #0x0                   	// #0
  404dcc:	bl	40c224 <__fxstatat@plt+0x9684>
  404dd0:	subs	w20, w19, w0
  404dd4:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  404dd8:	csel	w20, w20, wzr, pl  // pl = nfrst
  404ddc:	ldr	x1, [x0, #1488]
  404de0:	mov	x0, x21
  404de4:	bl	402ad0 <fputs_unlocked@plt>
  404de8:	mov	x0, x21
  404dec:	bl	402540 <strlen@plt>
  404df0:	add	x19, x0, w20, sxtw
  404df4:	sub	w20, w20, #0x1
  404df8:	mov	w0, #0x20                  	// #32
  404dfc:	bl	4027f0 <putchar_unlocked@plt>
  404e00:	cmn	w20, #0x1
  404e04:	b.ne	404df4 <__fxstatat@plt+0x2254>  // b.any
  404e08:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  404e0c:	add	x1, x1, #0x5e8
  404e10:	ldr	x21, [sp, #32]
  404e14:	ldr	x0, [x1, #3752]
  404e18:	add	x0, x0, #0x1
  404e1c:	add	x19, x0, x19
  404e20:	str	x19, [x1, #3752]
  404e24:	ldp	x19, x20, [sp, #16]
  404e28:	ldp	x29, x30, [sp], #48
  404e2c:	ret
  404e30:	mov	x3, x1
  404e34:	mov	w0, #0x1                   	// #1
  404e38:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xe44>
  404e3c:	add	x1, x1, #0xdd0
  404e40:	bl	4027b0 <__printf_chk@plt>
  404e44:	b	404e08 <__fxstatat@plt+0x2268>
  404e48:	stp	x29, x30, [sp, #-32]!
  404e4c:	tst	w2, #0xff
  404e50:	mov	x29, sp
  404e54:	stp	x19, x20, [sp, #16]
  404e58:	mov	w19, w0
  404e5c:	mov	w20, w1
  404e60:	b.eq	404e88 <__fxstatat@plt+0x22e8>  // b.none
  404e64:	adrp	x1, 42c000 <__progname@@GLIBC_2.17+0xa28>
  404e68:	ldrb	w1, [x1, #1176]
  404e6c:	cbnz	w1, 404e94 <__fxstatat@plt+0x22f4>
  404e70:	bl	40b974 <__fxstatat@plt+0x8dd4>
  404e74:	mov	w2, w20
  404e78:	mov	w1, w19
  404e7c:	ldp	x19, x20, [sp, #16]
  404e80:	ldp	x29, x30, [sp], #32
  404e84:	b	404dac <__fxstatat@plt+0x220c>
  404e88:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2e44>
  404e8c:	add	x0, x0, #0xfd8
  404e90:	b	404e74 <__fxstatat@plt+0x22d4>
  404e94:	mov	x0, #0x0                   	// #0
  404e98:	b	404e74 <__fxstatat@plt+0x22d4>
  404e9c:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  404ea0:	add	x1, x0, #0x5e8
  404ea4:	ldr	w0, [x0, #1512]
  404ea8:	cbnz	w0, 404eb8 <__fxstatat@plt+0x2318>
  404eac:	ldr	w0, [x1, #3764]
  404eb0:	add	w0, w0, #0x1
  404eb4:	str	w0, [x1, #3764]
  404eb8:	ret
  404ebc:	stp	x29, x30, [sp, #-48]!
  404ec0:	mov	x29, sp
  404ec4:	stp	x19, x20, [sp, #16]
  404ec8:	mov	x20, x2
  404ecc:	mov	x19, x1
  404ed0:	stp	x21, x22, [sp, #32]
  404ed4:	and	w21, w0, #0xff
  404ed8:	bl	402b30 <__errno_location@plt>
  404edc:	ldr	w22, [x0]
  404ee0:	mov	x1, x20
  404ee4:	mov	w0, #0x4                   	// #4
  404ee8:	bl	40e9f8 <__fxstatat@plt+0xbe58>
  404eec:	mov	x2, x19
  404ef0:	mov	x3, x0
  404ef4:	mov	w1, w22
  404ef8:	mov	w0, #0x0                   	// #0
  404efc:	bl	4025b0 <error@plt>
  404f00:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  404f04:	add	x0, x0, #0x5e8
  404f08:	cbz	w21, 404f24 <__fxstatat@plt+0x2384>
  404f0c:	mov	w1, #0x2                   	// #2
  404f10:	str	w1, [x0, #3768]
  404f14:	ldp	x19, x20, [sp, #16]
  404f18:	ldp	x21, x22, [sp, #32]
  404f1c:	ldp	x29, x30, [sp], #48
  404f20:	ret
  404f24:	ldr	w1, [x0, #3768]
  404f28:	cbnz	w1, 404f14 <__fxstatat@plt+0x2374>
  404f2c:	mov	w1, #0x1                   	// #1
  404f30:	b	404f10 <__fxstatat@plt+0x2370>
  404f34:	stp	x29, x30, [sp, #-48]!
  404f38:	mov	x29, sp
  404f3c:	stp	x19, x20, [sp, #16]
  404f40:	mov	x19, x0
  404f44:	mov	x20, x1
  404f48:	ldr	x3, [x0, #120]
  404f4c:	str	x21, [sp, #32]
  404f50:	mov	x21, x2
  404f54:	ldr	x2, [x0, #112]
  404f58:	ldp	x0, x1, [x1, #112]
  404f5c:	bl	40ed44 <__fxstatat@plt+0xc1a4>
  404f60:	cbnz	w0, 404f80 <__fxstatat@plt+0x23e0>
  404f64:	mov	x16, x21
  404f68:	ldr	x0, [x19]
  404f6c:	ldr	x1, [x20]
  404f70:	ldp	x19, x20, [sp, #16]
  404f74:	ldr	x21, [sp, #32]
  404f78:	ldp	x29, x30, [sp], #48
  404f7c:	br	x16
  404f80:	ldp	x19, x20, [sp, #16]
  404f84:	ldr	x21, [sp, #32]
  404f88:	ldp	x29, x30, [sp], #48
  404f8c:	ret
  404f90:	mov	x3, x0
  404f94:	adrp	x2, 402000 <mbrtowc@plt-0x4c0>
  404f98:	mov	x0, x1
  404f9c:	add	x2, x2, #0x950
  404fa0:	mov	x1, x3
  404fa4:	b	404f34 <__fxstatat@plt+0x2394>
  404fa8:	adrp	x2, 402000 <mbrtowc@plt-0x4c0>
  404fac:	add	x2, x2, #0x950
  404fb0:	b	404f34 <__fxstatat@plt+0x2394>
  404fb4:	mov	x3, x0
  404fb8:	adrp	x2, 404000 <__fxstatat@plt+0x1460>
  404fbc:	mov	x0, x1
  404fc0:	add	x2, x2, #0xb50
  404fc4:	mov	x1, x3
  404fc8:	b	404f34 <__fxstatat@plt+0x2394>
  404fcc:	adrp	x2, 404000 <__fxstatat@plt+0x1460>
  404fd0:	add	x2, x2, #0xb50
  404fd4:	b	404f34 <__fxstatat@plt+0x2394>
  404fd8:	ldr	x0, [x0]
  404fdc:	ldr	x1, [x1]
  404fe0:	b	402950 <strcmp@plt>
  404fe4:	ands	w0, w0, #0xff
  404fe8:	b.eq	40502c <__fxstatat@plt+0x248c>  // b.none
  404fec:	and	w3, w1, #0xf000
  404ff0:	cmp	w3, #0x8, lsl #12
  404ff4:	b.eq	405048 <__fxstatat@plt+0x24a8>  // b.none
  404ff8:	cmp	w3, #0x4, lsl #12
  404ffc:	cset	w3, eq  // eq = none
  405000:	cbnz	w3, 4050ac <__fxstatat@plt+0x250c>
  405004:	adrp	x3, 42c000 <__progname@@GLIBC_2.17+0xa28>
  405008:	ldr	w3, [x3, #1188]
  40500c:	cmp	w3, #0x1
  405010:	b.eq	4050b4 <__fxstatat@plt+0x2514>  // b.none
  405014:	cbz	w0, 40506c <__fxstatat@plt+0x24cc>
  405018:	and	w1, w1, #0xf000
  40501c:	cmp	w1, #0xa, lsl #12
  405020:	b.ne	405084 <__fxstatat@plt+0x24e4>  // b.any
  405024:	mov	w0, #0x40                  	// #64
  405028:	b	405068 <__fxstatat@plt+0x24c8>
  40502c:	cmp	w2, #0x5
  405030:	b.eq	4050b4 <__fxstatat@plt+0x2514>  // b.none
  405034:	cmp	w2, #0x3
  405038:	cset	w3, eq  // eq = none
  40503c:	cmp	w2, #0x9
  405040:	csinc	w3, w3, wzr, ne  // ne = any
  405044:	b	405000 <__fxstatat@plt+0x2460>
  405048:	adrp	x0, 42c000 <__progname@@GLIBC_2.17+0xa28>
  40504c:	ldr	w0, [x0, #1188]
  405050:	cmp	w0, #0x3
  405054:	b.ne	4050b4 <__fxstatat@plt+0x2514>  // b.any
  405058:	mov	w0, #0x49                  	// #73
  40505c:	tst	w1, w0
  405060:	mov	w0, #0x2a                  	// #42
  405064:	csel	w0, wzr, w0, eq  // eq = none
  405068:	ret
  40506c:	cmp	w2, #0x6
  405070:	b.eq	405024 <__fxstatat@plt+0x2484>  // b.none
  405074:	cmp	w2, #0x1
  405078:	b.eq	40508c <__fxstatat@plt+0x24ec>  // b.none
  40507c:	cmp	w2, #0x7
  405080:	b	405098 <__fxstatat@plt+0x24f8>
  405084:	cmp	w1, #0x1, lsl #12
  405088:	b.ne	405094 <__fxstatat@plt+0x24f4>  // b.any
  40508c:	mov	w0, #0x7c                  	// #124
  405090:	b	405068 <__fxstatat@plt+0x24c8>
  405094:	cmp	w1, #0xc, lsl #12
  405098:	cset	w0, eq  // eq = none
  40509c:	cmp	w0, #0x0
  4050a0:	mov	w0, #0x3d                  	// #61
  4050a4:	csel	w0, wzr, w0, eq  // eq = none
  4050a8:	b	405068 <__fxstatat@plt+0x24c8>
  4050ac:	mov	w0, #0x2f                  	// #47
  4050b0:	b	405068 <__fxstatat@plt+0x24c8>
  4050b4:	mov	w0, #0x0                   	// #0
  4050b8:	b	405068 <__fxstatat@plt+0x24c8>
  4050bc:	stp	x29, x30, [sp, #-32]!
  4050c0:	mov	x29, sp
  4050c4:	str	x19, [sp, #16]
  4050c8:	bl	404fe4 <__fxstatat@plt+0x2444>
  4050cc:	ands	w19, w0, #0xff
  4050d0:	b.eq	4050f0 <__fxstatat@plt+0x2550>  // b.none
  4050d4:	mov	w0, w19
  4050d8:	bl	4027f0 <putchar_unlocked@plt>
  4050dc:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  4050e0:	add	x0, x0, #0x5e8
  4050e4:	ldr	x1, [x0, #3752]
  4050e8:	add	x1, x1, #0x1
  4050ec:	str	x1, [x0, #3752]
  4050f0:	cmp	w19, #0x0
  4050f4:	cset	w0, ne  // ne = any
  4050f8:	ldr	x19, [sp, #16]
  4050fc:	ldp	x29, x30, [sp], #32
  405100:	ret
  405104:	mov	x3, x1
  405108:	mov	x4, x0
  40510c:	stp	x29, x30, [sp, #-16]!
  405110:	mov	x29, sp
  405114:	bl	4044e0 <__fxstatat@plt+0x1940>
  405118:	and	w2, w0, #0xff
  40511c:	mov	x0, x3
  405120:	bl	4044e0 <__fxstatat@plt+0x1940>
  405124:	and	w1, w0, #0xff
  405128:	eor	w0, w1, #0x1
  40512c:	tst	w2, w0
  405130:	b.ne	405158 <__fxstatat@plt+0x25b8>  // b.any
  405134:	eor	w2, w2, #0x1
  405138:	tst	w1, w2
  40513c:	b.ne	405164 <__fxstatat@plt+0x25c4>  // b.any
  405140:	ldp	x29, x30, [sp], #16
  405144:	mov	x1, x4
  405148:	mov	x0, x3
  40514c:	adrp	x2, 402000 <mbrtowc@plt-0x4c0>
  405150:	add	x2, x2, #0x950
  405154:	b	404f34 <__fxstatat@plt+0x2394>
  405158:	mov	w0, #0xffffffff            	// #-1
  40515c:	ldp	x29, x30, [sp], #16
  405160:	ret
  405164:	mov	w0, #0x1                   	// #1
  405168:	b	40515c <__fxstatat@plt+0x25bc>
  40516c:	mov	x3, x1
  405170:	mov	x4, x0
  405174:	stp	x29, x30, [sp, #-16]!
  405178:	mov	x29, sp
  40517c:	bl	4044e0 <__fxstatat@plt+0x1940>
  405180:	and	w2, w0, #0xff
  405184:	mov	x0, x3
  405188:	bl	4044e0 <__fxstatat@plt+0x1940>
  40518c:	and	w1, w0, #0xff
  405190:	eor	w0, w1, #0x1
  405194:	tst	w2, w0
  405198:	b.ne	4051c0 <__fxstatat@plt+0x2620>  // b.any
  40519c:	eor	w2, w2, #0x1
  4051a0:	tst	w1, w2
  4051a4:	b.ne	4051cc <__fxstatat@plt+0x262c>  // b.any
  4051a8:	ldp	x29, x30, [sp], #16
  4051ac:	mov	x1, x3
  4051b0:	mov	x0, x4
  4051b4:	adrp	x2, 402000 <mbrtowc@plt-0x4c0>
  4051b8:	add	x2, x2, #0x950
  4051bc:	b	404f34 <__fxstatat@plt+0x2394>
  4051c0:	mov	w0, #0xffffffff            	// #-1
  4051c4:	ldp	x29, x30, [sp], #16
  4051c8:	ret
  4051cc:	mov	w0, #0x1                   	// #1
  4051d0:	b	4051c4 <__fxstatat@plt+0x2624>
  4051d4:	mov	x3, x1
  4051d8:	mov	x4, x0
  4051dc:	stp	x29, x30, [sp, #-16]!
  4051e0:	mov	x29, sp
  4051e4:	bl	4044e0 <__fxstatat@plt+0x1940>
  4051e8:	and	w2, w0, #0xff
  4051ec:	mov	x0, x3
  4051f0:	bl	4044e0 <__fxstatat@plt+0x1940>
  4051f4:	and	w1, w0, #0xff
  4051f8:	eor	w0, w1, #0x1
  4051fc:	tst	w2, w0
  405200:	b.ne	405228 <__fxstatat@plt+0x2688>  // b.any
  405204:	eor	w2, w2, #0x1
  405208:	tst	w1, w2
  40520c:	b.ne	405234 <__fxstatat@plt+0x2694>  // b.any
  405210:	ldp	x29, x30, [sp], #16
  405214:	mov	x1, x4
  405218:	mov	x0, x3
  40521c:	adrp	x2, 404000 <__fxstatat@plt+0x1460>
  405220:	add	x2, x2, #0xb50
  405224:	b	404f34 <__fxstatat@plt+0x2394>
  405228:	mov	w0, #0xffffffff            	// #-1
  40522c:	ldp	x29, x30, [sp], #16
  405230:	ret
  405234:	mov	w0, #0x1                   	// #1
  405238:	b	40522c <__fxstatat@plt+0x268c>
  40523c:	mov	x3, x1
  405240:	mov	x4, x0
  405244:	stp	x29, x30, [sp, #-16]!
  405248:	mov	x29, sp
  40524c:	bl	4044e0 <__fxstatat@plt+0x1940>
  405250:	and	w2, w0, #0xff
  405254:	mov	x0, x3
  405258:	bl	4044e0 <__fxstatat@plt+0x1940>
  40525c:	and	w1, w0, #0xff
  405260:	eor	w0, w1, #0x1
  405264:	tst	w2, w0
  405268:	b.ne	405290 <__fxstatat@plt+0x26f0>  // b.any
  40526c:	eor	w2, w2, #0x1
  405270:	tst	w1, w2
  405274:	b.ne	40529c <__fxstatat@plt+0x26fc>  // b.any
  405278:	ldp	x29, x30, [sp], #16
  40527c:	mov	x1, x3
  405280:	mov	x0, x4
  405284:	adrp	x2, 404000 <__fxstatat@plt+0x1460>
  405288:	add	x2, x2, #0xb50
  40528c:	b	404f34 <__fxstatat@plt+0x2394>
  405290:	mov	w0, #0xffffffff            	// #-1
  405294:	ldp	x29, x30, [sp], #16
  405298:	ret
  40529c:	mov	w0, #0x1                   	// #1
  4052a0:	b	405294 <__fxstatat@plt+0x26f4>
  4052a4:	mov	x3, x1
  4052a8:	mov	x4, x0
  4052ac:	stp	x29, x30, [sp, #-16]!
  4052b0:	mov	x29, sp
  4052b4:	bl	4044e0 <__fxstatat@plt+0x1940>
  4052b8:	and	w2, w0, #0xff
  4052bc:	mov	x0, x3
  4052c0:	bl	4044e0 <__fxstatat@plt+0x1940>
  4052c4:	and	w1, w0, #0xff
  4052c8:	eor	w0, w1, #0x1
  4052cc:	tst	w2, w0
  4052d0:	b.ne	4052f0 <__fxstatat@plt+0x2750>  // b.any
  4052d4:	eor	w2, w2, #0x1
  4052d8:	tst	w1, w2
  4052dc:	b.ne	4052fc <__fxstatat@plt+0x275c>  // b.any
  4052e0:	ldp	x29, x30, [sp], #16
  4052e4:	ldr	x0, [x3]
  4052e8:	ldr	x1, [x4]
  4052ec:	b	40a03c <__fxstatat@plt+0x749c>
  4052f0:	mov	w0, #0xffffffff            	// #-1
  4052f4:	ldp	x29, x30, [sp], #16
  4052f8:	ret
  4052fc:	mov	w0, #0x1                   	// #1
  405300:	b	4052f4 <__fxstatat@plt+0x2754>
  405304:	mov	x3, x1
  405308:	mov	x4, x0
  40530c:	stp	x29, x30, [sp, #-16]!
  405310:	mov	x29, sp
  405314:	bl	4044e0 <__fxstatat@plt+0x1940>
  405318:	and	w2, w0, #0xff
  40531c:	mov	x0, x3
  405320:	bl	4044e0 <__fxstatat@plt+0x1940>
  405324:	and	w1, w0, #0xff
  405328:	eor	w0, w1, #0x1
  40532c:	tst	w2, w0
  405330:	b.ne	405350 <__fxstatat@plt+0x27b0>  // b.any
  405334:	eor	w2, w2, #0x1
  405338:	tst	w1, w2
  40533c:	b.ne	40535c <__fxstatat@plt+0x27bc>  // b.any
  405340:	ldp	x29, x30, [sp], #16
  405344:	ldr	x1, [x3]
  405348:	ldr	x0, [x4]
  40534c:	b	40a03c <__fxstatat@plt+0x749c>
  405350:	mov	w0, #0xffffffff            	// #-1
  405354:	ldp	x29, x30, [sp], #16
  405358:	ret
  40535c:	mov	w0, #0x1                   	// #1
  405360:	b	405354 <__fxstatat@plt+0x27b4>
  405364:	stp	x29, x30, [sp, #-48]!
  405368:	mov	x29, sp
  40536c:	stp	x21, x22, [sp, #32]
  405370:	mov	x21, x0
  405374:	mov	x22, x1
  405378:	ldr	x0, [x0]
  40537c:	mov	w1, #0x2e                  	// #46
  405380:	stp	x19, x20, [sp, #16]
  405384:	mov	x20, x2
  405388:	bl	402860 <strrchr@plt>
  40538c:	mov	x19, x0
  405390:	ldr	x0, [x22]
  405394:	mov	w1, #0x2e                  	// #46
  405398:	bl	402860 <strrchr@plt>
  40539c:	mov	x1, x0
  4053a0:	cbnz	x19, 4053ac <__fxstatat@plt+0x280c>
  4053a4:	adrp	x19, 411000 <_obstack_memory_used@@Base+0xe44>
  4053a8:	add	x19, x19, #0xdf0
  4053ac:	cbnz	x1, 4053b8 <__fxstatat@plt+0x2818>
  4053b0:	adrp	x3, 411000 <_obstack_memory_used@@Base+0xe44>
  4053b4:	add	x1, x3, #0xdf0
  4053b8:	mov	x0, x19
  4053bc:	blr	x20
  4053c0:	cbnz	w0, 4053e0 <__fxstatat@plt+0x2840>
  4053c4:	mov	x16, x20
  4053c8:	ldr	x0, [x21]
  4053cc:	ldr	x1, [x22]
  4053d0:	ldp	x19, x20, [sp, #16]
  4053d4:	ldp	x21, x22, [sp, #32]
  4053d8:	ldp	x29, x30, [sp], #48
  4053dc:	br	x16
  4053e0:	ldp	x19, x20, [sp, #16]
  4053e4:	ldp	x21, x22, [sp, #32]
  4053e8:	ldp	x29, x30, [sp], #48
  4053ec:	ret
  4053f0:	mov	x3, x0
  4053f4:	adrp	x2, 402000 <mbrtowc@plt-0x4c0>
  4053f8:	mov	x0, x1
  4053fc:	add	x2, x2, #0x950
  405400:	mov	x1, x3
  405404:	b	405364 <__fxstatat@plt+0x27c4>
  405408:	adrp	x2, 402000 <mbrtowc@plt-0x4c0>
  40540c:	add	x2, x2, #0x950
  405410:	b	405364 <__fxstatat@plt+0x27c4>
  405414:	mov	x3, x0
  405418:	adrp	x2, 404000 <__fxstatat@plt+0x1460>
  40541c:	mov	x0, x1
  405420:	add	x2, x2, #0xb50
  405424:	mov	x1, x3
  405428:	b	405364 <__fxstatat@plt+0x27c4>
  40542c:	adrp	x2, 404000 <__fxstatat@plt+0x1460>
  405430:	add	x2, x2, #0xb50
  405434:	b	405364 <__fxstatat@plt+0x27c4>
  405438:	mov	x3, x1
  40543c:	mov	x4, x0
  405440:	stp	x29, x30, [sp, #-16]!
  405444:	mov	x29, sp
  405448:	bl	4044e0 <__fxstatat@plt+0x1940>
  40544c:	and	w2, w0, #0xff
  405450:	mov	x0, x3
  405454:	bl	4044e0 <__fxstatat@plt+0x1940>
  405458:	and	w1, w0, #0xff
  40545c:	eor	w0, w1, #0x1
  405460:	tst	w2, w0
  405464:	b.ne	40548c <__fxstatat@plt+0x28ec>  // b.any
  405468:	eor	w2, w2, #0x1
  40546c:	tst	w1, w2
  405470:	b.ne	405498 <__fxstatat@plt+0x28f8>  // b.any
  405474:	ldp	x29, x30, [sp], #16
  405478:	mov	x1, x4
  40547c:	mov	x0, x3
  405480:	adrp	x2, 402000 <mbrtowc@plt-0x4c0>
  405484:	add	x2, x2, #0x950
  405488:	b	405364 <__fxstatat@plt+0x27c4>
  40548c:	mov	w0, #0xffffffff            	// #-1
  405490:	ldp	x29, x30, [sp], #16
  405494:	ret
  405498:	mov	w0, #0x1                   	// #1
  40549c:	b	405490 <__fxstatat@plt+0x28f0>
  4054a0:	mov	x3, x1
  4054a4:	mov	x4, x0
  4054a8:	stp	x29, x30, [sp, #-16]!
  4054ac:	mov	x29, sp
  4054b0:	bl	4044e0 <__fxstatat@plt+0x1940>
  4054b4:	and	w2, w0, #0xff
  4054b8:	mov	x0, x3
  4054bc:	bl	4044e0 <__fxstatat@plt+0x1940>
  4054c0:	and	w1, w0, #0xff
  4054c4:	eor	w0, w1, #0x1
  4054c8:	tst	w2, w0
  4054cc:	b.ne	4054f4 <__fxstatat@plt+0x2954>  // b.any
  4054d0:	eor	w2, w2, #0x1
  4054d4:	tst	w1, w2
  4054d8:	b.ne	405500 <__fxstatat@plt+0x2960>  // b.any
  4054dc:	ldp	x29, x30, [sp], #16
  4054e0:	mov	x1, x3
  4054e4:	mov	x0, x4
  4054e8:	adrp	x2, 402000 <mbrtowc@plt-0x4c0>
  4054ec:	add	x2, x2, #0x950
  4054f0:	b	405364 <__fxstatat@plt+0x27c4>
  4054f4:	mov	w0, #0xffffffff            	// #-1
  4054f8:	ldp	x29, x30, [sp], #16
  4054fc:	ret
  405500:	mov	w0, #0x1                   	// #1
  405504:	b	4054f8 <__fxstatat@plt+0x2958>
  405508:	mov	x3, x1
  40550c:	mov	x4, x0
  405510:	stp	x29, x30, [sp, #-16]!
  405514:	mov	x29, sp
  405518:	bl	4044e0 <__fxstatat@plt+0x1940>
  40551c:	and	w2, w0, #0xff
  405520:	mov	x0, x3
  405524:	bl	4044e0 <__fxstatat@plt+0x1940>
  405528:	and	w1, w0, #0xff
  40552c:	eor	w0, w1, #0x1
  405530:	tst	w2, w0
  405534:	b.ne	40555c <__fxstatat@plt+0x29bc>  // b.any
  405538:	eor	w2, w2, #0x1
  40553c:	tst	w1, w2
  405540:	b.ne	405568 <__fxstatat@plt+0x29c8>  // b.any
  405544:	ldp	x29, x30, [sp], #16
  405548:	mov	x1, x4
  40554c:	mov	x0, x3
  405550:	adrp	x2, 404000 <__fxstatat@plt+0x1460>
  405554:	add	x2, x2, #0xb50
  405558:	b	405364 <__fxstatat@plt+0x27c4>
  40555c:	mov	w0, #0xffffffff            	// #-1
  405560:	ldp	x29, x30, [sp], #16
  405564:	ret
  405568:	mov	w0, #0x1                   	// #1
  40556c:	b	405560 <__fxstatat@plt+0x29c0>
  405570:	mov	x3, x1
  405574:	mov	x4, x0
  405578:	stp	x29, x30, [sp, #-16]!
  40557c:	mov	x29, sp
  405580:	bl	4044e0 <__fxstatat@plt+0x1940>
  405584:	and	w2, w0, #0xff
  405588:	mov	x0, x3
  40558c:	bl	4044e0 <__fxstatat@plt+0x1940>
  405590:	and	w1, w0, #0xff
  405594:	eor	w0, w1, #0x1
  405598:	tst	w2, w0
  40559c:	b.ne	4055c4 <__fxstatat@plt+0x2a24>  // b.any
  4055a0:	eor	w2, w2, #0x1
  4055a4:	tst	w1, w2
  4055a8:	b.ne	4055d0 <__fxstatat@plt+0x2a30>  // b.any
  4055ac:	ldp	x29, x30, [sp], #16
  4055b0:	mov	x1, x3
  4055b4:	mov	x0, x4
  4055b8:	adrp	x2, 404000 <__fxstatat@plt+0x1460>
  4055bc:	add	x2, x2, #0xb50
  4055c0:	b	405364 <__fxstatat@plt+0x27c4>
  4055c4:	mov	w0, #0xffffffff            	// #-1
  4055c8:	ldp	x29, x30, [sp], #16
  4055cc:	ret
  4055d0:	mov	w0, #0x1                   	// #1
  4055d4:	b	4055c8 <__fxstatat@plt+0x2a28>
  4055d8:	stp	x29, x30, [sp, #-32]!
  4055dc:	mov	x29, sp
  4055e0:	str	x19, [sp, #16]
  4055e4:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  4055e8:	add	x19, x19, #0x388
  4055ec:	ldr	x0, [x19, #40]
  4055f0:	cbz	x0, 405604 <__fxstatat@plt+0x2a64>
  4055f4:	add	x0, x19, #0x20
  4055f8:	ldr	x19, [sp, #16]
  4055fc:	ldp	x29, x30, [sp], #32
  405600:	b	40561c <__fxstatat@plt+0x2a7c>
  405604:	mov	x0, x19
  405608:	bl	40561c <__fxstatat@plt+0x2a7c>
  40560c:	add	x0, x19, #0x30
  405610:	bl	40561c <__fxstatat@plt+0x2a7c>
  405614:	add	x0, x19, #0x10
  405618:	b	4055f8 <__fxstatat@plt+0x2a58>
  40561c:	stp	x29, x30, [sp, #-240]!
  405620:	mov	x29, sp
  405624:	stp	x19, x20, [sp, #16]
  405628:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  40562c:	add	x19, x19, #0x5e8
  405630:	stp	x21, x22, [sp, #32]
  405634:	mov	x22, x0
  405638:	ldrb	w0, [x19, #3776]
  40563c:	stp	x23, x24, [sp, #48]
  405640:	str	x25, [sp, #64]
  405644:	cbnz	w0, 405720 <__fxstatat@plt+0x2b80>
  405648:	mov	w0, #0x1                   	// #1
  40564c:	strb	w0, [x19, #3776]
  405650:	mov	w0, #0x1                   	// #1
  405654:	bl	402870 <tcgetpgrp@plt>
  405658:	tbnz	w0, #31, 40571c <__fxstatat@plt+0x2b7c>
  40565c:	adrp	x21, 414000 <_obstack_memory_used@@Base+0x3e44>
  405660:	add	x21, x21, #0x4c0
  405664:	add	x25, x21, #0x1d0
  405668:	mov	x20, #0x0                   	// #0
  40566c:	add	x23, x19, #0xec8
  405670:	mov	x0, x23
  405674:	bl	402770 <sigemptyset@plt>
  405678:	ldr	w24, [x25, x20, lsl #2]
  40567c:	add	x2, sp, #0x58
  405680:	mov	x1, #0x0                   	// #0
  405684:	mov	w0, w24
  405688:	bl	402850 <sigaction@plt>
  40568c:	ldr	x0, [sp, #88]
  405690:	cmp	x0, #0x1
  405694:	b.eq	4056a4 <__fxstatat@plt+0x2b04>  // b.none
  405698:	mov	w1, w24
  40569c:	mov	x0, x23
  4056a0:	bl	402b00 <sigaddset@plt>
  4056a4:	add	x20, x20, #0x1
  4056a8:	cmp	x20, #0xc
  4056ac:	b.ne	405678 <__fxstatat@plt+0x2ad8>  // b.any
  4056b0:	add	x1, x19, #0xec8
  4056b4:	add	x0, sp, #0x60
  4056b8:	mov	x2, #0x80                  	// #128
  4056bc:	adrp	x23, 404000 <__fxstatat@plt+0x1460>
  4056c0:	bl	4024d0 <memcpy@plt>
  4056c4:	adrp	x24, 404000 <__fxstatat@plt+0x1460>
  4056c8:	add	x21, x21, #0x1d0
  4056cc:	add	x23, x23, #0x244
  4056d0:	add	x24, x24, #0xe9c
  4056d4:	mov	w0, #0x10000000            	// #268435456
  4056d8:	mov	x20, #0x0                   	// #0
  4056dc:	str	w0, [sp, #224]
  4056e0:	ldr	w25, [x21, x20, lsl #2]
  4056e4:	add	x0, x19, #0xec8
  4056e8:	mov	w1, w25
  4056ec:	bl	402940 <sigismember@plt>
  4056f0:	cbz	w0, 405710 <__fxstatat@plt+0x2b70>
  4056f4:	cmp	w25, #0x14
  4056f8:	add	x1, sp, #0x58
  4056fc:	csel	x0, x24, x23, eq  // eq = none
  405700:	mov	x2, #0x0                   	// #0
  405704:	str	x0, [sp, #88]
  405708:	mov	w0, w25
  40570c:	bl	402850 <sigaction@plt>
  405710:	add	x20, x20, #0x1
  405714:	cmp	x20, #0xc
  405718:	b.ne	4056e0 <__fxstatat@plt+0x2b40>  // b.any
  40571c:	bl	4055d8 <__fxstatat@plt+0x2a38>
  405720:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  405724:	mov	x2, #0x1                   	// #1
  405728:	ldr	x3, [x0, #1488]
  40572c:	ldp	x1, x0, [x22]
  405730:	bl	402520 <fwrite_unlocked@plt>
  405734:	ldp	x19, x20, [sp, #16]
  405738:	ldp	x21, x22, [sp, #32]
  40573c:	ldp	x23, x24, [sp, #48]
  405740:	ldr	x25, [sp, #64]
  405744:	ldp	x29, x30, [sp], #240
  405748:	ret
  40574c:	stp	x29, x30, [sp, #-32]!
  405750:	mov	x29, sp
  405754:	str	x19, [sp, #16]
  405758:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  40575c:	add	x19, x19, #0x388
  405760:	mov	x0, x19
  405764:	bl	40561c <__fxstatat@plt+0x2a7c>
  405768:	add	x0, x19, #0x10
  40576c:	ldr	x19, [sp, #16]
  405770:	ldp	x29, x30, [sp], #32
  405774:	b	40561c <__fxstatat@plt+0x2a7c>
  405778:	stp	x29, x30, [sp, #-176]!
  40577c:	mov	x29, sp
  405780:	stp	x19, x20, [sp, #16]
  405784:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  405788:	add	x19, x19, #0x5e8
  40578c:	stp	x21, x22, [sp, #32]
  405790:	add	x22, x19, #0xec8
  405794:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  405798:	ldr	w0, [x19]
  40579c:	cbnz	w0, 4057b8 <__fxstatat@plt+0x2c18>
  4057a0:	ldr	w0, [x19, #3764]
  4057a4:	cbnz	w0, 4057b8 <__fxstatat@plt+0x2c18>
  4057a8:	ldp	x19, x20, [sp, #16]
  4057ac:	ldp	x21, x22, [sp, #32]
  4057b0:	ldp	x29, x30, [sp], #176
  4057b4:	ret
  4057b8:	ldrb	w0, [x19, #3776]
  4057bc:	cbz	w0, 4057c4 <__fxstatat@plt+0x2c24>
  4057c0:	bl	40574c <__fxstatat@plt+0x2bac>
  4057c4:	ldr	x0, [x21, #1488]
  4057c8:	bl	4029f0 <fflush_unlocked@plt>
  4057cc:	add	x2, sp, #0x30
  4057d0:	mov	x1, x22
  4057d4:	mov	w0, #0x0                   	// #0
  4057d8:	bl	4025c0 <sigprocmask@plt>
  4057dc:	ldr	w20, [x19]
  4057e0:	ldr	w0, [x19, #3764]
  4057e4:	cbz	w0, 405810 <__fxstatat@plt+0x2c70>
  4057e8:	sub	w0, w0, #0x1
  4057ec:	mov	w20, #0x13                  	// #19
  4057f0:	str	w0, [x19, #3764]
  4057f4:	mov	w0, w20
  4057f8:	bl	4025a0 <raise@plt>
  4057fc:	add	x1, sp, #0x30
  405800:	mov	x2, #0x0                   	// #0
  405804:	mov	w0, #0x2                   	// #2
  405808:	bl	4025c0 <sigprocmask@plt>
  40580c:	b	405798 <__fxstatat@plt+0x2bf8>
  405810:	mov	w0, w20
  405814:	mov	x1, #0x0                   	// #0
  405818:	bl	4026f0 <signal@plt>
  40581c:	b	4057f4 <__fxstatat@plt+0x2c54>
  405820:	adrp	x0, 42c000 <__progname@@GLIBC_2.17+0xa28>
  405824:	ldrb	w0, [x0, #1328]
  405828:	cbz	w0, 40587c <__fxstatat@plt+0x2cdc>
  40582c:	stp	x29, x30, [sp, #-32]!
  405830:	mov	w0, #0x4                   	// #4
  405834:	mov	x29, sp
  405838:	str	x19, [sp, #16]
  40583c:	bl	4045f8 <__fxstatat@plt+0x1a58>
  405840:	tst	w0, #0xff
  405844:	b.eq	405870 <__fxstatat@plt+0x2cd0>  // b.none
  405848:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  40584c:	add	x19, x19, #0x388
  405850:	mov	x0, x19
  405854:	bl	40561c <__fxstatat@plt+0x2a7c>
  405858:	add	x0, x19, #0x40
  40585c:	bl	40561c <__fxstatat@plt+0x2a7c>
  405860:	add	x0, x19, #0x10
  405864:	ldr	x19, [sp, #16]
  405868:	ldp	x29, x30, [sp], #32
  40586c:	b	40561c <__fxstatat@plt+0x2a7c>
  405870:	ldr	x19, [sp, #16]
  405874:	ldp	x29, x30, [sp], #32
  405878:	ret
  40587c:	ret
  405880:	stp	x29, x30, [sp, #-144]!
  405884:	mov	x29, sp
  405888:	stp	x23, x24, [sp, #48]
  40588c:	adrp	x23, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  405890:	add	x23, x23, #0x5e8
  405894:	mov	x24, x0
  405898:	stp	x19, x20, [sp, #16]
  40589c:	stp	x21, x22, [sp, #32]
  4058a0:	mov	x21, x1
  4058a4:	mov	x22, x4
  4058a8:	stp	x25, x26, [sp, #64]
  4058ac:	mov	x25, x2
  4058b0:	stp	x27, x28, [sp, #80]
  4058b4:	mov	w27, w3
  4058b8:	str	x5, [sp, #104]
  4058bc:	ldr	x20, [x0]
  4058c0:	mov	x0, x2
  4058c4:	bl	40e618 <__fxstatat@plt+0xba78>
  4058c8:	ldrb	w1, [x23, #3913]
  4058cc:	cbz	w1, 4058d8 <__fxstatat@plt+0x2d38>
  4058d0:	cmp	w0, #0x2
  4058d4:	b.ls	405bd8 <__fxstatat@plt+0x3038>  // b.plast
  4058d8:	cbnz	w27, 4058f4 <__fxstatat@plt+0x2d54>
  4058dc:	mov	x0, x21
  4058e0:	mov	x20, x21
  4058e4:	bl	402540 <strlen@plt>
  4058e8:	mov	w21, #0x0                   	// #0
  4058ec:	mov	x25, x0
  4058f0:	b	40596c <__fxstatat@plt+0x2dcc>
  4058f4:	mov	w27, #0x0                   	// #0
  4058f8:	mov	x4, x25
  4058fc:	mov	x2, x21
  405900:	mov	x0, x20
  405904:	mov	x3, #0xffffffffffffffff    	// #-1
  405908:	mov	x1, #0x2000                	// #8192
  40590c:	bl	40e6e8 <__fxstatat@plt+0xbb48>
  405910:	mov	x19, x0
  405914:	mov	x0, #0x1fff                	// #8191
  405918:	cmp	x19, x0
  40591c:	b.ls	405944 <__fxstatat@plt+0x2da4>  // b.plast
  405920:	add	x28, x19, #0x1
  405924:	mov	x0, x28
  405928:	bl	40f24c <__fxstatat@plt+0xc6ac>
  40592c:	mov	x4, x25
  405930:	mov	x20, x0
  405934:	mov	x2, x21
  405938:	mov	x1, x28
  40593c:	mov	x3, #0xffffffffffffffff    	// #-1
  405940:	bl	40e6e8 <__fxstatat@plt+0xbb48>
  405944:	ldrb	w1, [x21]
  405948:	ldrb	w0, [x20]
  40594c:	cmp	w1, w0
  405950:	b.ne	405994 <__fxstatat@plt+0x2df4>  // b.any
  405954:	mov	x0, x21
  405958:	bl	402540 <strlen@plt>
  40595c:	cmp	x19, x0
  405960:	cset	w21, ne  // ne = any
  405964:	cbnz	w27, 4059d8 <__fxstatat@plt+0x2e38>
  405968:	mov	x25, x19
  40596c:	cbz	x22, 405a44 <__fxstatat@plt+0x2ea4>
  405970:	bl	4029a0 <__ctype_get_mb_cur_max@plt>
  405974:	cmp	x0, #0x1
  405978:	b.ls	405b9c <__fxstatat@plt+0x2ffc>  // b.plast
  40597c:	mov	x1, x25
  405980:	mov	x0, x20
  405984:	mov	w2, #0x0                   	// #0
  405988:	bl	40c08c <__fxstatat@plt+0x94ec>
  40598c:	sxtw	x19, w0
  405990:	b	405a44 <__fxstatat@plt+0x2ea4>
  405994:	mov	w21, #0x1                   	// #1
  405998:	b	405964 <__fxstatat@plt+0x2dc4>
  40599c:	mov	x0, x21
  4059a0:	bl	402540 <strlen@plt>
  4059a4:	mov	x19, x0
  4059a8:	add	x25, x0, #0x1
  4059ac:	mov	x0, #0x1fff                	// #8191
  4059b0:	cmp	x19, x0
  4059b4:	b.ls	4059c4 <__fxstatat@plt+0x2e24>  // b.plast
  4059b8:	mov	x0, x25
  4059bc:	bl	40f24c <__fxstatat@plt+0xc6ac>
  4059c0:	mov	x20, x0
  4059c4:	mov	x1, x21
  4059c8:	mov	w21, #0x0                   	// #0
  4059cc:	mov	x2, x25
  4059d0:	mov	x0, x20
  4059d4:	bl	4024d0 <memcpy@plt>
  4059d8:	bl	4029a0 <__ctype_get_mb_cur_max@plt>
  4059dc:	add	x25, x20, x19
  4059e0:	cmp	x0, #0x1
  4059e4:	b.hi	405b68 <__fxstatat@plt+0x2fc8>  // b.pmore
  4059e8:	mov	x27, x20
  4059ec:	mov	w28, #0x3f                  	// #63
  4059f0:	cmp	x25, x27
  4059f4:	b.hi	405b7c <__fxstatat@plt+0x2fdc>  // b.pmore
  4059f8:	mov	x25, x19
  4059fc:	b	405a44 <__fxstatat@plt+0x2ea4>
  405a00:	ldrb	w2, [x28]
  405a04:	cmp	w2, #0x5f
  405a08:	b.hi	405adc <__fxstatat@plt+0x2f3c>  // b.pmore
  405a0c:	cmp	w2, #0x40
  405a10:	b.hi	405a24 <__fxstatat@plt+0x2e84>  // b.pmore
  405a14:	cmp	w2, #0x23
  405a18:	b.hi	405a94 <__fxstatat@plt+0x2ef4>  // b.pmore
  405a1c:	cmp	w2, #0x1f
  405a20:	b.ls	405aa4 <__fxstatat@plt+0x2f04>  // b.plast
  405a24:	mov	x4, x26
  405a28:	add	x28, x28, #0x1
  405a2c:	add	x19, x19, #0x1
  405a30:	strb	w2, [x4], #1
  405a34:	mov	x26, x4
  405a38:	cmp	x25, x28
  405a3c:	b.hi	405a00 <__fxstatat@plt+0x2e60>  // b.pmore
  405a40:	sub	x25, x26, x20
  405a44:	ldrb	w0, [x23, #3914]
  405a48:	cbz	w0, 405bd0 <__fxstatat@plt+0x3030>
  405a4c:	ldrb	w0, [x23, #3915]
  405a50:	eor	w21, w21, #0x1
  405a54:	cmp	w0, #0x0
  405a58:	csel	w21, w21, wzr, ne  // ne = any
  405a5c:	ldr	x0, [sp, #104]
  405a60:	and	w21, w21, #0x1
  405a64:	strb	w21, [x0]
  405a68:	cbz	x22, 405a70 <__fxstatat@plt+0x2ed0>
  405a6c:	str	x19, [x22]
  405a70:	mov	x0, x25
  405a74:	ldp	x21, x22, [sp, #32]
  405a78:	ldp	x25, x26, [sp, #64]
  405a7c:	ldp	x27, x28, [sp, #80]
  405a80:	str	x20, [x24]
  405a84:	ldp	x19, x20, [sp, #16]
  405a88:	ldp	x23, x24, [sp, #48]
  405a8c:	ldp	x29, x30, [sp], #144
  405a90:	ret
  405a94:	sub	w0, w2, #0x25
  405a98:	and	w0, w0, #0xff
  405a9c:	cmp	w0, #0x1a
  405aa0:	b.ls	405a24 <__fxstatat@plt+0x2e84>  // b.plast
  405aa4:	str	xzr, [sp, #136]
  405aa8:	add	x3, sp, #0x88
  405aac:	sub	x2, x25, x28
  405ab0:	mov	x1, x28
  405ab4:	add	x0, sp, #0x84
  405ab8:	bl	40fe2c <__fxstatat@plt+0xd28c>
  405abc:	cmn	x0, #0x1
  405ac0:	add	x3, x26, #0x1
  405ac4:	b.ne	405aec <__fxstatat@plt+0x2f4c>  // b.any
  405ac8:	add	x28, x28, #0x1
  405acc:	add	x19, x19, #0x1
  405ad0:	strb	w27, [x26]
  405ad4:	mov	x26, x3
  405ad8:	b	405a38 <__fxstatat@plt+0x2e98>
  405adc:	sub	w0, w2, #0x61
  405ae0:	and	w0, w0, #0xff
  405ae4:	cmp	w0, #0x1d
  405ae8:	b	405aa0 <__fxstatat@plt+0x2f00>
  405aec:	cmn	x0, #0x2
  405af0:	b.ne	405b04 <__fxstatat@plt+0x2f64>  // b.any
  405af4:	add	x19, x19, #0x1
  405af8:	mov	x28, x25
  405afc:	strb	w27, [x26]
  405b00:	b	405ad4 <__fxstatat@plt+0x2f34>
  405b04:	cmp	x0, #0x0
  405b08:	csinc	x2, x0, xzr, ne  // ne = any
  405b0c:	ldr	w0, [sp, #132]
  405b10:	stp	x2, x3, [sp, #112]
  405b14:	bl	402740 <wcwidth@plt>
  405b18:	ldp	x2, x3, [sp, #112]
  405b1c:	tbnz	w0, #31, 405b54 <__fxstatat@plt+0x2fb4>
  405b20:	mov	x3, #0x0                   	// #0
  405b24:	ldrb	w5, [x28, x3]
  405b28:	strb	w5, [x26, x3]
  405b2c:	add	x3, x3, #0x1
  405b30:	cmp	x2, x3
  405b34:	b.ne	405b24 <__fxstatat@plt+0x2f84>  // b.any
  405b38:	add	x28, x28, x2
  405b3c:	add	x26, x26, x2
  405b40:	add	x19, x19, w0, sxtw
  405b44:	add	x0, sp, #0x88
  405b48:	bl	4028c0 <mbsinit@plt>
  405b4c:	cbz	w0, 405aa8 <__fxstatat@plt+0x2f08>
  405b50:	b	405a38 <__fxstatat@plt+0x2e98>
  405b54:	add	x28, x28, x2
  405b58:	add	x19, x19, #0x1
  405b5c:	strb	w27, [x26]
  405b60:	mov	x26, x3
  405b64:	b	405b44 <__fxstatat@plt+0x2fa4>
  405b68:	mov	x26, x20
  405b6c:	mov	x28, x20
  405b70:	mov	x19, #0x0                   	// #0
  405b74:	mov	w27, #0x3f                  	// #63
  405b78:	b	405a38 <__fxstatat@plt+0x2e98>
  405b7c:	bl	402970 <__ctype_b_loc@plt>
  405b80:	ldrb	w1, [x27]
  405b84:	ldr	x0, [x0]
  405b88:	ldrh	w0, [x0, x1, lsl #1]
  405b8c:	tbnz	w0, #14, 405b94 <__fxstatat@plt+0x2ff4>
  405b90:	strb	w28, [x27]
  405b94:	add	x27, x27, #0x1
  405b98:	b	4059f0 <__fxstatat@plt+0x2e50>
  405b9c:	add	x28, x20, x25
  405ba0:	mov	x27, x20
  405ba4:	mov	x19, #0x0                   	// #0
  405ba8:	cmp	x28, x27
  405bac:	b.ls	405a44 <__fxstatat@plt+0x2ea4>  // b.plast
  405bb0:	bl	402970 <__ctype_b_loc@plt>
  405bb4:	ldrb	w1, [x27]
  405bb8:	ldr	x0, [x0]
  405bbc:	ldrh	w0, [x0, x1, lsl #1]
  405bc0:	tbz	w0, #14, 405bc8 <__fxstatat@plt+0x3028>
  405bc4:	add	x19, x19, #0x1
  405bc8:	add	x27, x27, #0x1
  405bcc:	b	405ba8 <__fxstatat@plt+0x3008>
  405bd0:	mov	w21, #0x0                   	// #0
  405bd4:	b	405a5c <__fxstatat@plt+0x2ebc>
  405bd8:	cbz	w27, 40599c <__fxstatat@plt+0x2dfc>
  405bdc:	mov	w27, #0x1                   	// #1
  405be0:	b	4058f8 <__fxstatat@plt+0x2d58>
  405be4:	mov	x12, #0x2070                	// #8304
  405be8:	sub	sp, sp, x12
  405bec:	stp	x29, x30, [sp]
  405bf0:	mov	x29, sp
  405bf4:	stp	x19, x20, [sp, #16]
  405bf8:	mov	x19, x5
  405bfc:	add	x5, sp, #0x67
  405c00:	stp	x21, x22, [sp, #32]
  405c04:	and	w21, w4, #0xff
  405c08:	mov	x4, #0x0                   	// #0
  405c0c:	stp	x23, x24, [sp, #48]
  405c10:	mov	x24, x3
  405c14:	mov	x23, x6
  405c18:	mov	w3, w2
  405c1c:	mov	x2, x1
  405c20:	mov	x1, x0
  405c24:	stp	x25, x26, [sp, #64]
  405c28:	mov	x25, x0
  405c2c:	add	x26, sp, #0x70
  405c30:	add	x0, sp, #0x68
  405c34:	str	x27, [sp, #80]
  405c38:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  405c3c:	str	x26, [sp, #104]
  405c40:	bl	405880 <__fxstatat@plt+0x2ce0>
  405c44:	mov	x22, x0
  405c48:	ldrb	w0, [sp, #103]
  405c4c:	add	x20, x20, #0x5e8
  405c50:	cbz	w0, 405c6c <__fxstatat@plt+0x30cc>
  405c54:	cbz	w21, 405c6c <__fxstatat@plt+0x30cc>
  405c58:	mov	w0, #0x20                  	// #32
  405c5c:	bl	4027f0 <putchar_unlocked@plt>
  405c60:	ldr	x0, [x20, #3752]
  405c64:	add	x0, x0, #0x1
  405c68:	str	x0, [x20, #3752]
  405c6c:	cbz	x24, 405ca4 <__fxstatat@plt+0x3104>
  405c70:	mov	w0, #0x4                   	// #4
  405c74:	bl	4045f8 <__fxstatat@plt+0x1a58>
  405c78:	tst	w0, #0xff
  405c7c:	b.eq	405c84 <__fxstatat@plt+0x30e4>  // b.none
  405c80:	bl	40574c <__fxstatat@plt+0x2bac>
  405c84:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  405c88:	add	x21, x21, #0x388
  405c8c:	mov	x0, x21
  405c90:	bl	40561c <__fxstatat@plt+0x2a7c>
  405c94:	mov	x0, x24
  405c98:	bl	40561c <__fxstatat@plt+0x2a7c>
  405c9c:	add	x0, x21, #0x10
  405ca0:	bl	40561c <__fxstatat@plt+0x2a7c>
  405ca4:	cbz	x23, 405e4c <__fxstatat@plt+0x32ac>
  405ca8:	ldrb	w21, [x20, #3914]
  405cac:	cbz	w21, 405ccc <__fxstatat@plt+0x312c>
  405cb0:	ldrb	w21, [x20, #3915]
  405cb4:	cbz	w21, 405ccc <__fxstatat@plt+0x312c>
  405cb8:	ldrb	w0, [sp, #103]
  405cbc:	cbnz	w0, 405e44 <__fxstatat@plt+0x32a4>
  405cc0:	ldr	x0, [sp, #104]
  405cc4:	ldrb	w0, [x0]
  405cc8:	bl	4027f0 <putchar_unlocked@plt>
  405ccc:	ldr	x0, [x20, #3920]
  405cd0:	mov	w1, #0x0                   	// #0
  405cd4:	bl	404990 <__fxstatat@plt+0x1df0>
  405cd8:	mov	x27, x0
  405cdc:	mov	w1, #0x1                   	// #1
  405ce0:	mov	x0, x23
  405ce4:	bl	404990 <__fxstatat@plt+0x1df0>
  405ce8:	ldrb	w1, [x0]
  405cec:	mov	x24, x0
  405cf0:	adrp	x3, 411000 <_obstack_memory_used@@Base+0xe44>
  405cf4:	cmp	w1, #0x2f
  405cf8:	add	x3, x3, #0xdf0
  405cfc:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x3e44>
  405d00:	add	x0, x0, #0x44
  405d04:	csel	x3, x3, x0, eq  // eq = none
  405d08:	mov	x4, x24
  405d0c:	mov	x2, x27
  405d10:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xe44>
  405d14:	add	x1, x1, #0xdd6
  405d18:	mov	w0, #0x1                   	// #1
  405d1c:	bl	4027b0 <__printf_chk@plt>
  405d20:	mov	x0, x27
  405d24:	bl	402990 <free@plt>
  405d28:	mov	x0, x24
  405d2c:	bl	402990 <free@plt>
  405d30:	cbz	x19, 405d70 <__fxstatat@plt+0x31d0>
  405d34:	ldrb	w0, [x20, #3928]
  405d38:	cbz	w0, 405d70 <__fxstatat@plt+0x31d0>
  405d3c:	ldp	x1, x0, [x19, #24]
  405d40:	sub	x0, x0, x1
  405d44:	cmp	x0, #0x7
  405d48:	b.hi	405d58 <__fxstatat@plt+0x31b8>  // b.pmore
  405d4c:	mov	x0, x19
  405d50:	mov	x1, #0x8                   	// #8
  405d54:	bl	410008 <_obstack_newchunk@@Base>
  405d58:	ldr	x0, [x19, #24]
  405d5c:	ldr	x1, [x20, #3752]
  405d60:	str	x1, [x0]
  405d64:	ldr	x0, [x19, #24]
  405d68:	add	x0, x0, #0x8
  405d6c:	str	x0, [x19, #24]
  405d70:	adrp	x24, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  405d74:	sub	x2, x22, w21, uxtb #1
  405d78:	ldr	x0, [sp, #104]
  405d7c:	mov	x1, #0x1                   	// #1
  405d80:	ldr	x3, [x24, #1488]
  405d84:	add	x0, x0, w21, uxtb
  405d88:	bl	402520 <fwrite_unlocked@plt>
  405d8c:	ldr	x0, [x20, #3752]
  405d90:	add	x0, x0, x22
  405d94:	str	x0, [x20, #3752]
  405d98:	cbz	x19, 405dd8 <__fxstatat@plt+0x3238>
  405d9c:	ldrb	w0, [x20, #3928]
  405da0:	cbz	w0, 405dd8 <__fxstatat@plt+0x3238>
  405da4:	ldp	x1, x0, [x19, #24]
  405da8:	sub	x0, x0, x1
  405dac:	cmp	x0, #0x7
  405db0:	b.hi	405dc0 <__fxstatat@plt+0x3220>  // b.pmore
  405db4:	mov	x0, x19
  405db8:	mov	x1, #0x8                   	// #8
  405dbc:	bl	410008 <_obstack_newchunk@@Base>
  405dc0:	ldr	x0, [x19, #24]
  405dc4:	ldr	x1, [x20, #3752]
  405dc8:	str	x1, [x0]
  405dcc:	ldr	x0, [x19, #24]
  405dd0:	add	x0, x0, #0x8
  405dd4:	str	x0, [x19, #24]
  405dd8:	cbz	x23, 405e00 <__fxstatat@plt+0x3260>
  405ddc:	ldr	x1, [x24, #1488]
  405de0:	adrp	x0, 411000 <_obstack_memory_used@@Base+0xe44>
  405de4:	add	x0, x0, #0xdea
  405de8:	bl	402ad0 <fputs_unlocked@plt>
  405dec:	cbz	w21, 405e00 <__fxstatat@plt+0x3260>
  405df0:	ldr	x0, [sp, #104]
  405df4:	add	x0, x0, x22
  405df8:	ldurb	w0, [x0, #-1]
  405dfc:	bl	4027f0 <putchar_unlocked@plt>
  405e00:	ldr	x0, [sp, #104]
  405e04:	cmp	x0, x26
  405e08:	b.eq	405e18 <__fxstatat@plt+0x3278>  // b.none
  405e0c:	cmp	x0, x25
  405e10:	b.eq	405e18 <__fxstatat@plt+0x3278>  // b.none
  405e14:	bl	402990 <free@plt>
  405e18:	ldrb	w0, [sp, #103]
  405e1c:	mov	x12, #0x2070                	// #8304
  405e20:	ldp	x29, x30, [sp]
  405e24:	add	x0, x0, x22
  405e28:	ldp	x19, x20, [sp, #16]
  405e2c:	ldp	x21, x22, [sp, #32]
  405e30:	ldp	x23, x24, [sp, #48]
  405e34:	ldp	x25, x26, [sp, #64]
  405e38:	ldr	x27, [sp, #80]
  405e3c:	add	sp, sp, x12
  405e40:	ret
  405e44:	mov	w21, #0x0                   	// #0
  405e48:	b	405ccc <__fxstatat@plt+0x312c>
  405e4c:	mov	w21, #0x0                   	// #0
  405e50:	b	405d30 <__fxstatat@plt+0x3190>
  405e54:	stp	x29, x30, [sp, #-96]!
  405e58:	mov	x29, sp
  405e5c:	stp	x21, x22, [sp, #32]
  405e60:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  405e64:	add	x21, x21, #0x5e8
  405e68:	stp	x19, x20, [sp, #16]
  405e6c:	mov	x19, x0
  405e70:	mov	x22, x2
  405e74:	stp	x23, x24, [sp, #48]
  405e78:	ands	w23, w1, #0xff
  405e7c:	ldrb	w1, [x21, #3912]
  405e80:	stp	x27, x28, [sp, #80]
  405e84:	mov	x20, x3
  405e88:	ldr	x0, [x0]
  405e8c:	stp	x25, x26, [sp, #64]
  405e90:	ldr	x27, [x19, #8]
  405e94:	csel	x24, x0, x27, eq  // eq = none
  405e98:	cbz	w1, 4061a4 <__fxstatat@plt+0x3604>
  405e9c:	ldrb	w25, [x19, #169]
  405ea0:	cbz	w23, 405ec8 <__fxstatat@plt+0x3328>
  405ea4:	ldr	w26, [x19, #156]
  405ea8:	cbnz	w25, 405f10 <__fxstatat@plt+0x3370>
  405eac:	mov	w0, #0xc                   	// #12
  405eb0:	mov	w25, #0xffffffff            	// #-1
  405eb4:	bl	4045f8 <__fxstatat@plt+0x1a58>
  405eb8:	tst	w0, #0xff
  405ebc:	b.eq	405edc <__fxstatat@plt+0x333c>  // b.none
  405ec0:	mov	w1, #0xc                   	// #12
  405ec4:	b	405f00 <__fxstatat@plt+0x3360>
  405ec8:	ldrb	w1, [x21, #3929]
  405ecc:	cbz	w1, 405f08 <__fxstatat@plt+0x3368>
  405ed0:	cbz	w25, 405f08 <__fxstatat@plt+0x3368>
  405ed4:	ldr	w26, [x19, #156]
  405ed8:	mov	x27, x0
  405edc:	ldrb	w0, [x19, #168]
  405ee0:	cbnz	w0, 405f18 <__fxstatat@plt+0x3378>
  405ee4:	ldr	w1, [x19, #152]
  405ee8:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x3e44>
  405eec:	add	x0, x0, #0x4c0
  405ef0:	add	x0, x0, #0x200
  405ef4:	ldr	w1, [x0, x1, lsl #2]
  405ef8:	cmp	w1, #0x5
  405efc:	b.eq	405f9c <__fxstatat@plt+0x33fc>  // b.none
  405f00:	mov	x26, #0x0                   	// #0
  405f04:	b	405fb4 <__fxstatat@plt+0x3414>
  405f08:	ldr	w26, [x19, #40]
  405f0c:	b	405ed8 <__fxstatat@plt+0x3338>
  405f10:	mov	w25, #0x0                   	// #0
  405f14:	b	405edc <__fxstatat@plt+0x333c>
  405f18:	and	w0, w26, #0xf000
  405f1c:	cmp	w0, #0x8, lsl #12
  405f20:	b.ne	406084 <__fxstatat@plt+0x34e4>  // b.any
  405f24:	tbz	w26, #11, 405f38 <__fxstatat@plt+0x3398>
  405f28:	mov	w0, #0x10                  	// #16
  405f2c:	bl	4045f8 <__fxstatat@plt+0x1a58>
  405f30:	tst	w0, #0xff
  405f34:	b.ne	40613c <__fxstatat@plt+0x359c>  // b.any
  405f38:	tbz	w26, #10, 405f4c <__fxstatat@plt+0x33ac>
  405f3c:	mov	w0, #0x11                  	// #17
  405f40:	bl	4045f8 <__fxstatat@plt+0x1a58>
  405f44:	tst	w0, #0xff
  405f48:	b.ne	406144 <__fxstatat@plt+0x35a4>  // b.any
  405f4c:	mov	w0, #0x15                  	// #21
  405f50:	bl	4045f8 <__fxstatat@plt+0x1a58>
  405f54:	tst	w0, #0xff
  405f58:	b.eq	405f64 <__fxstatat@plt+0x33c4>  // b.none
  405f5c:	ldrb	w0, [x19, #176]
  405f60:	cbnz	w0, 40614c <__fxstatat@plt+0x35ac>
  405f64:	mov	w0, #0x49                  	// #73
  405f68:	tst	w26, w0
  405f6c:	b.eq	405f80 <__fxstatat@plt+0x33e0>  // b.none
  405f70:	mov	w0, #0xe                   	// #14
  405f74:	bl	4045f8 <__fxstatat@plt+0x1a58>
  405f78:	tst	w0, #0xff
  405f7c:	b.ne	406154 <__fxstatat@plt+0x35b4>  // b.any
  405f80:	ldr	w0, [x19, #44]
  405f84:	cmp	w0, #0x1
  405f88:	b.ls	405f9c <__fxstatat@plt+0x33fc>  // b.plast
  405f8c:	mov	w0, #0x16                  	// #22
  405f90:	bl	4045f8 <__fxstatat@plt+0x1a58>
  405f94:	tst	w0, #0xff
  405f98:	b.ne	40615c <__fxstatat@plt+0x35bc>  // b.any
  405f9c:	mov	x0, x27
  405fa0:	bl	402540 <strlen@plt>
  405fa4:	ldr	x26, [x21, #3936]
  405fa8:	mov	x28, x0
  405fac:	cbnz	x26, 406114 <__fxstatat@plt+0x3574>
  405fb0:	mov	w1, #0x5                   	// #5
  405fb4:	cmp	w25, #0x0
  405fb8:	ccmp	w1, #0x7, #0x0, eq  // eq = none
  405fbc:	b.ne	405fe0 <__fxstatat@plt+0x3440>  // b.any
  405fc0:	ldrb	w0, [x21, #3929]
  405fc4:	cbnz	w0, 40619c <__fxstatat@plt+0x35fc>
  405fc8:	mov	w0, #0xd                   	// #13
  405fcc:	bl	4045f8 <__fxstatat@plt+0x1a58>
  405fd0:	tst	w0, #0xff
  405fd4:	mov	w1, #0x7                   	// #7
  405fd8:	mov	w3, #0xd                   	// #13
  405fdc:	csel	w1, w1, w3, eq  // eq = none
  405fe0:	ubfiz	x1, x1, #4, #32
  405fe4:	adrp	x3, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  405fe8:	add	x3, x3, #0x388
  405fec:	add	x0, x26, #0x10
  405ff0:	add	x1, x3, x1
  405ff4:	cmp	x26, #0x0
  405ff8:	csel	x3, x1, x0, eq  // eq = none
  405ffc:	ldr	x0, [x3, #8]
  406000:	cbz	x0, 4061b0 <__fxstatat@plt+0x3610>
  406004:	mov	w25, #0x1                   	// #1
  406008:	ldr	w2, [x19, #180]
  40600c:	mov	x5, x22
  406010:	ldr	x6, [x19, #16]
  406014:	eor	w4, w23, #0x1
  406018:	ldr	x1, [x21, #3144]
  40601c:	mov	x0, x24
  406020:	bl	405be4 <__fxstatat@plt+0x3044>
  406024:	mov	x19, x0
  406028:	bl	405778 <__fxstatat@plt+0x2bd8>
  40602c:	cbz	w25, 406064 <__fxstatat@plt+0x34c4>
  406030:	bl	4055d8 <__fxstatat@plt+0x2a38>
  406034:	ldr	x0, [x21, #48]
  406038:	cbz	x0, 406064 <__fxstatat@plt+0x34c4>
  40603c:	udiv	x1, x20, x0
  406040:	sub	x20, x20, #0x1
  406044:	add	x20, x20, x19
  406048:	udiv	x20, x20, x0
  40604c:	cmp	x1, x20
  406050:	b.eq	406064 <__fxstatat@plt+0x34c4>  // b.none
  406054:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  406058:	add	x0, x0, #0x388
  40605c:	add	x0, x0, #0x170
  406060:	bl	40561c <__fxstatat@plt+0x2a7c>
  406064:	mov	x0, x19
  406068:	ldp	x19, x20, [sp, #16]
  40606c:	ldp	x21, x22, [sp, #32]
  406070:	ldp	x23, x24, [sp, #48]
  406074:	ldp	x25, x26, [sp, #64]
  406078:	ldp	x27, x28, [sp, #80]
  40607c:	ldp	x29, x30, [sp], #96
  406080:	ret
  406084:	cmp	w0, #0x4, lsl #12
  406088:	b.ne	4060e0 <__fxstatat@plt+0x3540>  // b.any
  40608c:	mov	w0, #0x202                 	// #514
  406090:	and	w0, w26, w0
  406094:	cmp	w0, #0x202
  406098:	b.ne	4060ac <__fxstatat@plt+0x350c>  // b.any
  40609c:	mov	w0, #0x14                  	// #20
  4060a0:	bl	4045f8 <__fxstatat@plt+0x1a58>
  4060a4:	tst	w0, #0xff
  4060a8:	b.ne	406164 <__fxstatat@plt+0x35c4>  // b.any
  4060ac:	tbz	w26, #1, 4060c0 <__fxstatat@plt+0x3520>
  4060b0:	mov	w0, #0x13                  	// #19
  4060b4:	bl	4045f8 <__fxstatat@plt+0x1a58>
  4060b8:	tst	w0, #0xff
  4060bc:	b.ne	40616c <__fxstatat@plt+0x35cc>  // b.any
  4060c0:	tbz	w26, #9, 406174 <__fxstatat@plt+0x35d4>
  4060c4:	mov	w0, #0x12                  	// #18
  4060c8:	bl	4045f8 <__fxstatat@plt+0x1a58>
  4060cc:	tst	w0, #0xff
  4060d0:	mov	w1, #0x12                  	// #18
  4060d4:	mov	w3, #0x6                   	// #6
  4060d8:	csel	w1, w1, w3, ne  // ne = any
  4060dc:	b	405f00 <__fxstatat@plt+0x3360>
  4060e0:	cmp	w0, #0xa, lsl #12
  4060e4:	b.eq	40617c <__fxstatat@plt+0x35dc>  // b.none
  4060e8:	cmp	w0, #0x1, lsl #12
  4060ec:	b.eq	406184 <__fxstatat@plt+0x35e4>  // b.none
  4060f0:	cmp	w0, #0xc, lsl #12
  4060f4:	b.eq	40618c <__fxstatat@plt+0x35ec>  // b.none
  4060f8:	cmp	w0, #0x6, lsl #12
  4060fc:	b.eq	406194 <__fxstatat@plt+0x35f4>  // b.none
  406100:	cmp	w0, #0x2, lsl #12
  406104:	mov	w1, #0xb                   	// #11
  406108:	mov	w3, #0xd                   	// #13
  40610c:	csel	w1, w1, w3, eq  // eq = none
  406110:	b	405f00 <__fxstatat@plt+0x3360>
  406114:	ldr	x2, [x26]
  406118:	cmp	x28, x2
  40611c:	b.cc	406134 <__fxstatat@plt+0x3594>  // b.lo, b.ul, b.last
  406120:	ldr	x1, [x26, #8]
  406124:	sub	x0, x28, x2
  406128:	add	x0, x27, x0
  40612c:	bl	4093c0 <__fxstatat@plt+0x6820>
  406130:	cbz	w0, 405fb0 <__fxstatat@plt+0x3410>
  406134:	ldr	x26, [x26, #32]
  406138:	b	405fac <__fxstatat@plt+0x340c>
  40613c:	mov	w1, #0x10                  	// #16
  406140:	b	405f00 <__fxstatat@plt+0x3360>
  406144:	mov	w1, #0x11                  	// #17
  406148:	b	405f00 <__fxstatat@plt+0x3360>
  40614c:	mov	w1, #0x15                  	// #21
  406150:	b	405f00 <__fxstatat@plt+0x3360>
  406154:	mov	w1, #0xe                   	// #14
  406158:	b	405f00 <__fxstatat@plt+0x3360>
  40615c:	mov	w1, #0x16                  	// #22
  406160:	b	405f00 <__fxstatat@plt+0x3360>
  406164:	mov	w1, #0x14                  	// #20
  406168:	b	405f00 <__fxstatat@plt+0x3360>
  40616c:	mov	w1, #0x13                  	// #19
  406170:	b	405f00 <__fxstatat@plt+0x3360>
  406174:	mov	w1, #0x6                   	// #6
  406178:	b	405f00 <__fxstatat@plt+0x3360>
  40617c:	mov	w1, #0x7                   	// #7
  406180:	b	405f00 <__fxstatat@plt+0x3360>
  406184:	mov	w1, #0x8                   	// #8
  406188:	b	405f00 <__fxstatat@plt+0x3360>
  40618c:	mov	w1, #0x9                   	// #9
  406190:	b	405f00 <__fxstatat@plt+0x3360>
  406194:	mov	w1, #0xa                   	// #10
  406198:	b	405f00 <__fxstatat@plt+0x3360>
  40619c:	mov	w1, #0xd                   	// #13
  4061a0:	b	405fe0 <__fxstatat@plt+0x3440>
  4061a4:	mov	x3, #0x0                   	// #0
  4061a8:	mov	w25, #0x0                   	// #0
  4061ac:	b	406008 <__fxstatat@plt+0x3468>
  4061b0:	mov	w0, #0x4                   	// #4
  4061b4:	bl	4045f8 <__fxstatat@plt+0x1a58>
  4061b8:	mov	x3, #0x0                   	// #0
  4061bc:	and	w25, w0, #0xff
  4061c0:	b	406008 <__fxstatat@plt+0x3468>
  4061c4:	mov	x12, #0x2040                	// #8256
  4061c8:	sub	sp, sp, x12
  4061cc:	mov	w3, w2
  4061d0:	add	x5, sp, #0x2f
  4061d4:	mov	x2, x1
  4061d8:	add	x4, sp, #0x38
  4061dc:	stp	x29, x30, [sp]
  4061e0:	mov	x29, sp
  4061e4:	mov	x1, x0
  4061e8:	stp	x19, x20, [sp, #16]
  4061ec:	add	x20, sp, #0x40
  4061f0:	mov	x19, x0
  4061f4:	add	x0, sp, #0x30
  4061f8:	str	x20, [sp, #48]
  4061fc:	bl	405880 <__fxstatat@plt+0x2ce0>
  406200:	ldr	x0, [sp, #48]
  406204:	cmp	x0, x20
  406208:	b.eq	406218 <__fxstatat@plt+0x3678>  // b.none
  40620c:	cmp	x0, x19
  406210:	b.eq	406218 <__fxstatat@plt+0x3678>  // b.none
  406214:	bl	402990 <free@plt>
  406218:	ldr	x0, [sp, #56]
  40621c:	mov	x12, #0x2040                	// #8256
  406220:	ldrb	w1, [sp, #47]
  406224:	ldp	x29, x30, [sp]
  406228:	add	x0, x1, x0
  40622c:	ldp	x19, x20, [sp, #16]
  406230:	add	sp, sp, x12
  406234:	ret
  406238:	sub	sp, sp, #0x2c0
  40623c:	stp	x29, x30, [sp]
  406240:	mov	x29, sp
  406244:	stp	x19, x20, [sp, #16]
  406248:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  40624c:	add	x20, x20, #0x5e8
  406250:	str	x21, [sp, #32]
  406254:	mov	x21, x0
  406258:	ldrb	w0, [x20, #3944]
  40625c:	cbz	w0, 40633c <__fxstatat@plt+0x379c>
  406260:	ldr	w0, [x20, #3948]
  406264:	cmp	w0, #0x4
  406268:	b.ne	406330 <__fxstatat@plt+0x3790>  // b.any
  40626c:	ldr	x0, [x21, #32]
  406270:	add	x1, sp, #0x30
  406274:	bl	40bcf0 <__fxstatat@plt+0x9150>
  406278:	bl	402540 <strlen@plt>
  40627c:	add	x19, x0, #0x1
  406280:	ldrb	w0, [x20, #3956]
  406284:	cbz	w0, 4062c0 <__fxstatat@plt+0x3720>
  406288:	ldr	w0, [x20, #3948]
  40628c:	cmp	w0, #0x4
  406290:	b.ne	406350 <__fxstatat@plt+0x37b0>  // b.any
  406294:	ldrb	w0, [x21, #168]
  406298:	cbz	w0, 406344 <__fxstatat@plt+0x37a4>
  40629c:	ldr	w2, [x20, #3968]
  4062a0:	add	x1, sp, #0x30
  4062a4:	ldr	x0, [x21, #88]
  4062a8:	mov	x3, #0x200                 	// #512
  4062ac:	ldr	x4, [x20, #3960]
  4062b0:	bl	40b1a4 <__fxstatat@plt+0x8604>
  4062b4:	bl	402540 <strlen@plt>
  4062b8:	add	x0, x0, #0x1
  4062bc:	add	x19, x19, x0
  4062c0:	ldrb	w0, [x20, #3976]
  4062c4:	cbz	w0, 4062e4 <__fxstatat@plt+0x3744>
  4062c8:	ldr	w0, [x20, #3948]
  4062cc:	cmp	w0, #0x4
  4062d0:	b.ne	406358 <__fxstatat@plt+0x37b8>  // b.any
  4062d4:	ldr	x0, [x21, #160]
  4062d8:	bl	402540 <strlen@plt>
  4062dc:	add	x0, x0, #0x1
  4062e0:	add	x19, x19, x0
  4062e4:	ldr	w2, [x21, #180]
  4062e8:	ldr	x0, [x21]
  4062ec:	ldr	x1, [x20, #3144]
  4062f0:	bl	4061c4 <__fxstatat@plt+0x3624>
  4062f4:	add	x19, x19, x0
  4062f8:	ldr	w0, [x20, #3772]
  4062fc:	cbz	w0, 406318 <__fxstatat@plt+0x3778>
  406300:	ldrb	w0, [x21, #168]
  406304:	ldr	w1, [x21, #40]
  406308:	ldr	w2, [x21, #152]
  40630c:	bl	404fe4 <__fxstatat@plt+0x2444>
  406310:	tst	w0, #0xff
  406314:	cinc	x19, x19, ne  // ne = any
  406318:	mov	x0, x19
  40631c:	ldp	x29, x30, [sp]
  406320:	ldp	x19, x20, [sp, #16]
  406324:	ldr	x21, [sp, #32]
  406328:	add	sp, sp, #0x2c0
  40632c:	ret
  406330:	ldrsw	x19, [x20, #3952]
  406334:	add	x19, x19, #0x1
  406338:	b	406280 <__fxstatat@plt+0x36e0>
  40633c:	mov	x19, #0x0                   	// #0
  406340:	b	406280 <__fxstatat@plt+0x36e0>
  406344:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2e44>
  406348:	add	x0, x0, #0xfd8
  40634c:	b	4062b4 <__fxstatat@plt+0x3714>
  406350:	ldrsw	x0, [x20, #3972]
  406354:	b	4062b8 <__fxstatat@plt+0x3718>
  406358:	ldrsw	x0, [x20, #3980]
  40635c:	b	4062dc <__fxstatat@plt+0x373c>
  406360:	stp	x29, x30, [sp, #-48]!
  406364:	mov	x29, sp
  406368:	stp	x19, x20, [sp, #16]
  40636c:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  406370:	add	x19, x19, #0x5e8
  406374:	stp	x21, x22, [sp, #32]
  406378:	and	w22, w0, #0xff
  40637c:	ldr	x21, [x19, #8]
  406380:	ldr	x1, [x19, #3984]
  406384:	ldr	x0, [x19, #3992]
  406388:	cmp	x21, x1
  40638c:	csel	x21, x21, x1, ls  // ls = plast
  406390:	cmp	x21, x0
  406394:	b.ls	40641c <__fxstatat@plt+0x387c>  // b.plast
  406398:	cmp	x21, x1, lsr #1
  40639c:	ldr	x0, [x19, #4000]
  4063a0:	b.cs	4063e0 <__fxstatat@plt+0x3840>  // b.hs, b.nlast
  4063a4:	lsl	x20, x21, #1
  4063a8:	mov	x1, x21
  4063ac:	mov	x2, #0x30                  	// #48
  4063b0:	bl	40f2f0 <__fxstatat@plt+0xc750>
  4063b4:	str	x0, [x19, #4000]
  4063b8:	ldr	x1, [x19, #3992]
  4063bc:	sub	x2, x20, x1
  4063c0:	add	x1, x1, #0x1
  4063c4:	adds	x1, x20, x1
  4063c8:	mul	x0, x2, x1
  4063cc:	b.cs	4063dc <__fxstatat@plt+0x383c>  // b.hs, b.nlast
  4063d0:	udiv	x2, x0, x2
  4063d4:	cmp	x1, x2
  4063d8:	b.eq	4063f4 <__fxstatat@plt+0x3854>  // b.none
  4063dc:	bl	40f440 <__fxstatat@plt+0xc8a0>
  4063e0:	mov	x2, #0x18                  	// #24
  4063e4:	bl	40f2f0 <__fxstatat@plt+0xc750>
  4063e8:	str	x0, [x19, #4000]
  4063ec:	ldr	x20, [x19, #3984]
  4063f0:	b	4063b8 <__fxstatat@plt+0x3818>
  4063f4:	mov	x1, #0x8                   	// #8
  4063f8:	lsr	x0, x0, #1
  4063fc:	bl	40f27c <__fxstatat@plt+0xc6dc>
  406400:	ldr	x2, [x19, #4000]
  406404:	mov	x3, #0x18                  	// #24
  406408:	ldr	x1, [x19, #3992]
  40640c:	add	x2, x2, #0x10
  406410:	cmp	x20, x1
  406414:	b.hi	406430 <__fxstatat@plt+0x3890>  // b.pmore
  406418:	str	x20, [x19, #3992]
  40641c:	mov	x20, #0x0                   	// #0
  406420:	mov	w3, #0x1                   	// #1
  406424:	mov	x4, #0x3                   	// #3
  406428:	ldr	x0, [x19, #4000]
  40642c:	b	406474 <__fxstatat@plt+0x38d4>
  406430:	mul	x4, x1, x3
  406434:	add	x1, x1, #0x1
  406438:	str	x0, [x2, x4]
  40643c:	add	x0, x0, x1, lsl #3
  406440:	b	406410 <__fxstatat@plt+0x3870>
  406444:	add	x2, x20, #0x1
  406448:	strb	w3, [x0]
  40644c:	ldr	x5, [x0, #16]
  406450:	add	x1, x2, x2, lsl #1
  406454:	str	x1, [x0, #8]
  406458:	mov	x1, #0x0                   	// #0
  40645c:	str	x4, [x5, x1, lsl #3]
  406460:	add	x1, x1, #0x1
  406464:	cmp	x1, x20
  406468:	b.ls	40645c <__fxstatat@plt+0x38bc>  // b.plast
  40646c:	mov	x20, x2
  406470:	add	x0, x0, #0x18
  406474:	cmp	x21, x20
  406478:	b.ne	406444 <__fxstatat@plt+0x38a4>  // b.any
  40647c:	mov	x21, #0x0                   	// #0
  406480:	ldr	x0, [x19, #8]
  406484:	cmp	x0, x21
  406488:	b.hi	4064b4 <__fxstatat@plt+0x3914>  // b.pmore
  40648c:	ldr	x0, [x19, #4000]
  406490:	mov	x1, #0x18                  	// #24
  406494:	sub	x0, x0, #0x18
  406498:	cmp	x20, #0x1
  40649c:	b.hi	406558 <__fxstatat@plt+0x39b8>  // b.pmore
  4064a0:	mov	x0, x20
  4064a4:	ldp	x19, x20, [sp, #16]
  4064a8:	ldp	x21, x22, [sp, #32]
  4064ac:	ldp	x29, x30, [sp], #48
  4064b0:	ret
  4064b4:	ldr	x0, [x19, #24]
  4064b8:	ldr	x0, [x0, x21, lsl #3]
  4064bc:	bl	406238 <__fxstatat@plt+0x3698>
  4064c0:	ldr	x8, [x19, #8]
  4064c4:	mov	x3, #0x0                   	// #0
  4064c8:	ldr	x9, [x19, #48]
  4064cc:	ldr	x2, [x19, #4000]
  4064d0:	cmp	x3, x20
  4064d4:	b.ne	4064e0 <__fxstatat@plt+0x3940>  // b.any
  4064d8:	add	x21, x21, #0x1
  4064dc:	b	406480 <__fxstatat@plt+0x38e0>
  4064e0:	ldrb	w1, [x2]
  4064e4:	add	x5, x3, #0x1
  4064e8:	cbz	w1, 406540 <__fxstatat@plt+0x39a0>
  4064ec:	cbz	w22, 40654c <__fxstatat@plt+0x39ac>
  4064f0:	add	x1, x8, x3
  4064f4:	udiv	x1, x1, x5
  4064f8:	udiv	x1, x21, x1
  4064fc:	ldr	x6, [x2, #16]
  406500:	cmp	x1, x3
  406504:	lsl	x1, x1, #3
  406508:	cset	x3, ne  // ne = any
  40650c:	add	x3, x0, x3, lsl #1
  406510:	ldr	x7, [x6, x1]
  406514:	cmp	x7, x3
  406518:	b.cs	406540 <__fxstatat@plt+0x39a0>  // b.hs, b.nlast
  40651c:	ldr	x4, [x2, #8]
  406520:	sub	x4, x4, x7
  406524:	add	x4, x4, x3
  406528:	str	x4, [x2, #8]
  40652c:	str	x3, [x6, x1]
  406530:	ldr	x1, [x2, #8]
  406534:	cmp	x1, x9
  406538:	cset	w1, cc  // cc = lo, ul, last
  40653c:	strb	w1, [x2]
  406540:	add	x2, x2, #0x18
  406544:	mov	x3, x5
  406548:	b	4064d0 <__fxstatat@plt+0x3930>
  40654c:	udiv	x1, x21, x5
  406550:	msub	x1, x1, x5, x21
  406554:	b	4064fc <__fxstatat@plt+0x395c>
  406558:	mul	x2, x20, x1
  40655c:	ldrb	w2, [x0, x2]
  406560:	cbnz	w2, 4064a0 <__fxstatat@plt+0x3900>
  406564:	sub	x20, x20, #0x1
  406568:	b	406498 <__fxstatat@plt+0x38f8>
  40656c:	mov	x3, x1
  406570:	mov	x4, x0
  406574:	stp	x29, x30, [sp, #-16]!
  406578:	mov	x29, sp
  40657c:	bl	4044e0 <__fxstatat@plt+0x1940>
  406580:	and	w2, w0, #0xff
  406584:	mov	x0, x3
  406588:	bl	4044e0 <__fxstatat@plt+0x1940>
  40658c:	and	w1, w0, #0xff
  406590:	eor	w0, w1, #0x1
  406594:	tst	w2, w0
  406598:	b.ne	4065b8 <__fxstatat@plt+0x3a18>  // b.any
  40659c:	eor	w2, w2, #0x1
  4065a0:	tst	w1, w2
  4065a4:	b.ne	4065c4 <__fxstatat@plt+0x3a24>  // b.any
  4065a8:	ldp	x29, x30, [sp], #16
  4065ac:	ldr	x0, [x3]
  4065b0:	ldr	x1, [x4]
  4065b4:	b	402950 <strcmp@plt>
  4065b8:	mov	w0, #0xffffffff            	// #-1
  4065bc:	ldp	x29, x30, [sp], #16
  4065c0:	ret
  4065c4:	mov	w0, #0x1                   	// #1
  4065c8:	b	4065bc <__fxstatat@plt+0x3a1c>
  4065cc:	ldr	x0, [x0]
  4065d0:	ldr	x1, [x1]
  4065d4:	b	404b50 <__fxstatat@plt+0x1fb0>
  4065d8:	mov	x3, x1
  4065dc:	mov	x4, x0
  4065e0:	stp	x29, x30, [sp, #-16]!
  4065e4:	mov	x29, sp
  4065e8:	bl	4044e0 <__fxstatat@plt+0x1940>
  4065ec:	and	w2, w0, #0xff
  4065f0:	mov	x0, x3
  4065f4:	bl	4044e0 <__fxstatat@plt+0x1940>
  4065f8:	and	w1, w0, #0xff
  4065fc:	eor	w0, w1, #0x1
  406600:	tst	w2, w0
  406604:	b.ne	406624 <__fxstatat@plt+0x3a84>  // b.any
  406608:	eor	w2, w2, #0x1
  40660c:	tst	w1, w2
  406610:	b.ne	406630 <__fxstatat@plt+0x3a90>  // b.any
  406614:	ldp	x29, x30, [sp], #16
  406618:	ldr	x1, [x3]
  40661c:	ldr	x0, [x4]
  406620:	b	404b50 <__fxstatat@plt+0x1fb0>
  406624:	mov	w0, #0xffffffff            	// #-1
  406628:	ldp	x29, x30, [sp], #16
  40662c:	ret
  406630:	mov	w0, #0x1                   	// #1
  406634:	b	406628 <__fxstatat@plt+0x3a88>
  406638:	mov	x3, x1
  40663c:	mov	x4, x0
  406640:	stp	x29, x30, [sp, #-16]!
  406644:	mov	x29, sp
  406648:	bl	4044e0 <__fxstatat@plt+0x1940>
  40664c:	and	w2, w0, #0xff
  406650:	mov	x0, x3
  406654:	bl	4044e0 <__fxstatat@plt+0x1940>
  406658:	and	w1, w0, #0xff
  40665c:	eor	w0, w1, #0x1
  406660:	tst	w2, w0
  406664:	b.ne	406684 <__fxstatat@plt+0x3ae4>  // b.any
  406668:	eor	w2, w2, #0x1
  40666c:	tst	w1, w2
  406670:	b.ne	406690 <__fxstatat@plt+0x3af0>  // b.any
  406674:	ldp	x29, x30, [sp], #16
  406678:	ldr	x1, [x3]
  40667c:	ldr	x0, [x4]
  406680:	b	402950 <strcmp@plt>
  406684:	mov	w0, #0xffffffff            	// #-1
  406688:	ldp	x29, x30, [sp], #16
  40668c:	ret
  406690:	mov	w0, #0x1                   	// #1
  406694:	b	406688 <__fxstatat@plt+0x3ae8>
  406698:	mov	x3, x1
  40669c:	mov	x4, x0
  4066a0:	stp	x29, x30, [sp, #-16]!
  4066a4:	mov	x29, sp
  4066a8:	bl	4044e0 <__fxstatat@plt+0x1940>
  4066ac:	and	w2, w0, #0xff
  4066b0:	mov	x0, x3
  4066b4:	bl	4044e0 <__fxstatat@plt+0x1940>
  4066b8:	and	w1, w0, #0xff
  4066bc:	eor	w0, w1, #0x1
  4066c0:	tst	w2, w0
  4066c4:	b.ne	4066e4 <__fxstatat@plt+0x3b44>  // b.any
  4066c8:	eor	w2, w2, #0x1
  4066cc:	tst	w1, w2
  4066d0:	b.ne	4066f0 <__fxstatat@plt+0x3b50>  // b.any
  4066d4:	ldp	x29, x30, [sp], #16
  4066d8:	ldr	x0, [x3]
  4066dc:	ldr	x1, [x4]
  4066e0:	b	404b50 <__fxstatat@plt+0x1fb0>
  4066e4:	mov	w0, #0xffffffff            	// #-1
  4066e8:	ldp	x29, x30, [sp], #16
  4066ec:	ret
  4066f0:	mov	w0, #0x1                   	// #1
  4066f4:	b	4066e8 <__fxstatat@plt+0x3b48>
  4066f8:	mov	x2, x1
  4066fc:	ldr	x1, [x0]
  406700:	ldr	x0, [x2]
  406704:	b	404b50 <__fxstatat@plt+0x1fb0>
  406708:	mov	x2, x1
  40670c:	ldr	x1, [x0]
  406710:	ldr	x0, [x2]
  406714:	b	402950 <strcmp@plt>
  406718:	ldr	x3, [x0, #72]
  40671c:	ldr	x4, [x1, #72]
  406720:	cmp	x4, x3
  406724:	b.lt	406744 <__fxstatat@plt+0x3ba4>  // b.tstop
  406728:	b.eq	406734 <__fxstatat@plt+0x3b94>  // b.none
  40672c:	cset	w0, gt
  406730:	ret
  406734:	ldr	x0, [x0]
  406738:	mov	x16, x2
  40673c:	ldr	x1, [x1]
  406740:	br	x16
  406744:	mov	w0, #0xffffffff            	// #-1
  406748:	b	406730 <__fxstatat@plt+0x3b90>
  40674c:	adrp	x2, 404000 <__fxstatat@plt+0x1460>
  406750:	add	x2, x2, #0xb50
  406754:	b	406718 <__fxstatat@plt+0x3b78>
  406758:	adrp	x2, 402000 <mbrtowc@plt-0x4c0>
  40675c:	add	x2, x2, #0x950
  406760:	b	406718 <__fxstatat@plt+0x3b78>
  406764:	mov	x3, x0
  406768:	adrp	x2, 404000 <__fxstatat@plt+0x1460>
  40676c:	mov	x0, x1
  406770:	add	x2, x2, #0xb50
  406774:	mov	x1, x3
  406778:	b	406718 <__fxstatat@plt+0x3b78>
  40677c:	mov	x3, x0
  406780:	adrp	x2, 402000 <mbrtowc@plt-0x4c0>
  406784:	mov	x0, x1
  406788:	add	x2, x2, #0x950
  40678c:	mov	x1, x3
  406790:	b	406718 <__fxstatat@plt+0x3b78>
  406794:	mov	x3, x1
  406798:	mov	x4, x0
  40679c:	stp	x29, x30, [sp, #-16]!
  4067a0:	mov	x29, sp
  4067a4:	bl	4044e0 <__fxstatat@plt+0x1940>
  4067a8:	and	w2, w0, #0xff
  4067ac:	mov	x0, x3
  4067b0:	bl	4044e0 <__fxstatat@plt+0x1940>
  4067b4:	and	w1, w0, #0xff
  4067b8:	eor	w0, w1, #0x1
  4067bc:	tst	w2, w0
  4067c0:	b.ne	4067e8 <__fxstatat@plt+0x3c48>  // b.any
  4067c4:	eor	w2, w2, #0x1
  4067c8:	tst	w1, w2
  4067cc:	b.ne	4067f4 <__fxstatat@plt+0x3c54>  // b.any
  4067d0:	ldp	x29, x30, [sp], #16
  4067d4:	mov	x1, x3
  4067d8:	mov	x0, x4
  4067dc:	adrp	x2, 404000 <__fxstatat@plt+0x1460>
  4067e0:	add	x2, x2, #0xb50
  4067e4:	b	406718 <__fxstatat@plt+0x3b78>
  4067e8:	mov	w0, #0xffffffff            	// #-1
  4067ec:	ldp	x29, x30, [sp], #16
  4067f0:	ret
  4067f4:	mov	w0, #0x1                   	// #1
  4067f8:	b	4067ec <__fxstatat@plt+0x3c4c>
  4067fc:	mov	x3, x1
  406800:	mov	x4, x0
  406804:	stp	x29, x30, [sp, #-16]!
  406808:	mov	x29, sp
  40680c:	bl	4044e0 <__fxstatat@plt+0x1940>
  406810:	and	w2, w0, #0xff
  406814:	mov	x0, x3
  406818:	bl	4044e0 <__fxstatat@plt+0x1940>
  40681c:	and	w1, w0, #0xff
  406820:	eor	w0, w1, #0x1
  406824:	tst	w2, w0
  406828:	b.ne	406850 <__fxstatat@plt+0x3cb0>  // b.any
  40682c:	eor	w2, w2, #0x1
  406830:	tst	w1, w2
  406834:	b.ne	40685c <__fxstatat@plt+0x3cbc>  // b.any
  406838:	ldp	x29, x30, [sp], #16
  40683c:	mov	x1, x3
  406840:	mov	x0, x4
  406844:	adrp	x2, 402000 <mbrtowc@plt-0x4c0>
  406848:	add	x2, x2, #0x950
  40684c:	b	406718 <__fxstatat@plt+0x3b78>
  406850:	mov	w0, #0xffffffff            	// #-1
  406854:	ldp	x29, x30, [sp], #16
  406858:	ret
  40685c:	mov	w0, #0x1                   	// #1
  406860:	b	406854 <__fxstatat@plt+0x3cb4>
  406864:	mov	x3, x1
  406868:	mov	x4, x0
  40686c:	stp	x29, x30, [sp, #-16]!
  406870:	mov	x29, sp
  406874:	bl	4044e0 <__fxstatat@plt+0x1940>
  406878:	and	w2, w0, #0xff
  40687c:	mov	x0, x3
  406880:	bl	4044e0 <__fxstatat@plt+0x1940>
  406884:	and	w1, w0, #0xff
  406888:	eor	w0, w1, #0x1
  40688c:	tst	w2, w0
  406890:	b.ne	4068b8 <__fxstatat@plt+0x3d18>  // b.any
  406894:	eor	w2, w2, #0x1
  406898:	tst	w1, w2
  40689c:	b.ne	4068c4 <__fxstatat@plt+0x3d24>  // b.any
  4068a0:	ldp	x29, x30, [sp], #16
  4068a4:	mov	x1, x4
  4068a8:	mov	x0, x3
  4068ac:	adrp	x2, 404000 <__fxstatat@plt+0x1460>
  4068b0:	add	x2, x2, #0xb50
  4068b4:	b	406718 <__fxstatat@plt+0x3b78>
  4068b8:	mov	w0, #0xffffffff            	// #-1
  4068bc:	ldp	x29, x30, [sp], #16
  4068c0:	ret
  4068c4:	mov	w0, #0x1                   	// #1
  4068c8:	b	4068bc <__fxstatat@plt+0x3d1c>
  4068cc:	mov	x3, x1
  4068d0:	mov	x4, x0
  4068d4:	stp	x29, x30, [sp, #-16]!
  4068d8:	mov	x29, sp
  4068dc:	bl	4044e0 <__fxstatat@plt+0x1940>
  4068e0:	and	w2, w0, #0xff
  4068e4:	mov	x0, x3
  4068e8:	bl	4044e0 <__fxstatat@plt+0x1940>
  4068ec:	and	w1, w0, #0xff
  4068f0:	eor	w0, w1, #0x1
  4068f4:	tst	w2, w0
  4068f8:	b.ne	406920 <__fxstatat@plt+0x3d80>  // b.any
  4068fc:	eor	w2, w2, #0x1
  406900:	tst	w1, w2
  406904:	b.ne	40692c <__fxstatat@plt+0x3d8c>  // b.any
  406908:	ldp	x29, x30, [sp], #16
  40690c:	mov	x1, x4
  406910:	mov	x0, x3
  406914:	adrp	x2, 402000 <mbrtowc@plt-0x4c0>
  406918:	add	x2, x2, #0x950
  40691c:	b	406718 <__fxstatat@plt+0x3b78>
  406920:	mov	w0, #0xffffffff            	// #-1
  406924:	ldp	x29, x30, [sp], #16
  406928:	ret
  40692c:	mov	w0, #0x1                   	// #1
  406930:	b	406924 <__fxstatat@plt+0x3d84>
  406934:	stp	x29, x30, [sp, #-48]!
  406938:	mov	x29, sp
  40693c:	stp	x19, x20, [sp, #16]
  406940:	mov	x19, x0
  406944:	mov	x20, x1
  406948:	ldr	x3, [x0, #104]
  40694c:	str	x21, [sp, #32]
  406950:	mov	x21, x2
  406954:	ldr	x2, [x0, #96]
  406958:	ldp	x0, x1, [x1, #96]
  40695c:	bl	40ed44 <__fxstatat@plt+0xc1a4>
  406960:	cbnz	w0, 406980 <__fxstatat@plt+0x3de0>
  406964:	mov	x16, x21
  406968:	ldr	x0, [x19]
  40696c:	ldr	x1, [x20]
  406970:	ldp	x19, x20, [sp, #16]
  406974:	ldr	x21, [sp, #32]
  406978:	ldp	x29, x30, [sp], #48
  40697c:	br	x16
  406980:	ldp	x19, x20, [sp, #16]
  406984:	ldr	x21, [sp, #32]
  406988:	ldp	x29, x30, [sp], #48
  40698c:	ret
  406990:	mov	x3, x1
  406994:	mov	x4, x0
  406998:	stp	x29, x30, [sp, #-16]!
  40699c:	mov	x29, sp
  4069a0:	bl	4044e0 <__fxstatat@plt+0x1940>
  4069a4:	and	w2, w0, #0xff
  4069a8:	mov	x0, x3
  4069ac:	bl	4044e0 <__fxstatat@plt+0x1940>
  4069b0:	and	w1, w0, #0xff
  4069b4:	eor	w0, w1, #0x1
  4069b8:	tst	w2, w0
  4069bc:	b.ne	4069e4 <__fxstatat@plt+0x3e44>  // b.any
  4069c0:	eor	w2, w2, #0x1
  4069c4:	tst	w1, w2
  4069c8:	b.ne	4069f0 <__fxstatat@plt+0x3e50>  // b.any
  4069cc:	ldp	x29, x30, [sp], #16
  4069d0:	mov	x1, x4
  4069d4:	mov	x0, x3
  4069d8:	adrp	x2, 402000 <mbrtowc@plt-0x4c0>
  4069dc:	add	x2, x2, #0x950
  4069e0:	b	406934 <__fxstatat@plt+0x3d94>
  4069e4:	mov	w0, #0xffffffff            	// #-1
  4069e8:	ldp	x29, x30, [sp], #16
  4069ec:	ret
  4069f0:	mov	w0, #0x1                   	// #1
  4069f4:	b	4069e8 <__fxstatat@plt+0x3e48>
  4069f8:	mov	x3, x0
  4069fc:	adrp	x2, 402000 <mbrtowc@plt-0x4c0>
  406a00:	mov	x0, x1
  406a04:	add	x2, x2, #0x950
  406a08:	mov	x1, x3
  406a0c:	b	406934 <__fxstatat@plt+0x3d94>
  406a10:	mov	x3, x1
  406a14:	mov	x4, x0
  406a18:	stp	x29, x30, [sp, #-16]!
  406a1c:	mov	x29, sp
  406a20:	bl	4044e0 <__fxstatat@plt+0x1940>
  406a24:	and	w2, w0, #0xff
  406a28:	mov	x0, x3
  406a2c:	bl	4044e0 <__fxstatat@plt+0x1940>
  406a30:	and	w1, w0, #0xff
  406a34:	eor	w0, w1, #0x1
  406a38:	tst	w2, w0
  406a3c:	b.ne	406a64 <__fxstatat@plt+0x3ec4>  // b.any
  406a40:	eor	w2, w2, #0x1
  406a44:	tst	w1, w2
  406a48:	b.ne	406a70 <__fxstatat@plt+0x3ed0>  // b.any
  406a4c:	ldp	x29, x30, [sp], #16
  406a50:	mov	x1, x3
  406a54:	mov	x0, x4
  406a58:	adrp	x2, 402000 <mbrtowc@plt-0x4c0>
  406a5c:	add	x2, x2, #0x950
  406a60:	b	406934 <__fxstatat@plt+0x3d94>
  406a64:	mov	w0, #0xffffffff            	// #-1
  406a68:	ldp	x29, x30, [sp], #16
  406a6c:	ret
  406a70:	mov	w0, #0x1                   	// #1
  406a74:	b	406a68 <__fxstatat@plt+0x3ec8>
  406a78:	adrp	x2, 402000 <mbrtowc@plt-0x4c0>
  406a7c:	add	x2, x2, #0x950
  406a80:	b	406934 <__fxstatat@plt+0x3d94>
  406a84:	mov	x3, x1
  406a88:	mov	x4, x0
  406a8c:	stp	x29, x30, [sp, #-16]!
  406a90:	mov	x29, sp
  406a94:	bl	4044e0 <__fxstatat@plt+0x1940>
  406a98:	and	w2, w0, #0xff
  406a9c:	mov	x0, x3
  406aa0:	bl	4044e0 <__fxstatat@plt+0x1940>
  406aa4:	and	w1, w0, #0xff
  406aa8:	eor	w0, w1, #0x1
  406aac:	tst	w2, w0
  406ab0:	b.ne	406ad8 <__fxstatat@plt+0x3f38>  // b.any
  406ab4:	eor	w2, w2, #0x1
  406ab8:	tst	w1, w2
  406abc:	b.ne	406ae4 <__fxstatat@plt+0x3f44>  // b.any
  406ac0:	ldp	x29, x30, [sp], #16
  406ac4:	mov	x1, x4
  406ac8:	mov	x0, x3
  406acc:	adrp	x2, 404000 <__fxstatat@plt+0x1460>
  406ad0:	add	x2, x2, #0xb50
  406ad4:	b	406934 <__fxstatat@plt+0x3d94>
  406ad8:	mov	w0, #0xffffffff            	// #-1
  406adc:	ldp	x29, x30, [sp], #16
  406ae0:	ret
  406ae4:	mov	w0, #0x1                   	// #1
  406ae8:	b	406adc <__fxstatat@plt+0x3f3c>
  406aec:	mov	x3, x0
  406af0:	adrp	x2, 404000 <__fxstatat@plt+0x1460>
  406af4:	mov	x0, x1
  406af8:	add	x2, x2, #0xb50
  406afc:	mov	x1, x3
  406b00:	b	406934 <__fxstatat@plt+0x3d94>
  406b04:	mov	x3, x1
  406b08:	mov	x4, x0
  406b0c:	stp	x29, x30, [sp, #-16]!
  406b10:	mov	x29, sp
  406b14:	bl	4044e0 <__fxstatat@plt+0x1940>
  406b18:	and	w2, w0, #0xff
  406b1c:	mov	x0, x3
  406b20:	bl	4044e0 <__fxstatat@plt+0x1940>
  406b24:	and	w1, w0, #0xff
  406b28:	eor	w0, w1, #0x1
  406b2c:	tst	w2, w0
  406b30:	b.ne	406b58 <__fxstatat@plt+0x3fb8>  // b.any
  406b34:	eor	w2, w2, #0x1
  406b38:	tst	w1, w2
  406b3c:	b.ne	406b64 <__fxstatat@plt+0x3fc4>  // b.any
  406b40:	ldp	x29, x30, [sp], #16
  406b44:	mov	x1, x3
  406b48:	mov	x0, x4
  406b4c:	adrp	x2, 404000 <__fxstatat@plt+0x1460>
  406b50:	add	x2, x2, #0xb50
  406b54:	b	406934 <__fxstatat@plt+0x3d94>
  406b58:	mov	w0, #0xffffffff            	// #-1
  406b5c:	ldp	x29, x30, [sp], #16
  406b60:	ret
  406b64:	mov	w0, #0x1                   	// #1
  406b68:	b	406b5c <__fxstatat@plt+0x3fbc>
  406b6c:	adrp	x2, 404000 <__fxstatat@plt+0x1460>
  406b70:	add	x2, x2, #0xb50
  406b74:	b	406934 <__fxstatat@plt+0x3d94>
  406b78:	stp	x29, x30, [sp, #-48]!
  406b7c:	mov	x29, sp
  406b80:	stp	x19, x20, [sp, #16]
  406b84:	mov	x19, x0
  406b88:	mov	x20, x1
  406b8c:	ldr	x3, [x0, #136]
  406b90:	str	x21, [sp, #32]
  406b94:	mov	x21, x2
  406b98:	ldr	x2, [x0, #128]
  406b9c:	ldp	x0, x1, [x1, #128]
  406ba0:	bl	40ed44 <__fxstatat@plt+0xc1a4>
  406ba4:	cbnz	w0, 406bc4 <__fxstatat@plt+0x4024>
  406ba8:	mov	x16, x21
  406bac:	ldr	x0, [x19]
  406bb0:	ldr	x1, [x20]
  406bb4:	ldp	x19, x20, [sp, #16]
  406bb8:	ldr	x21, [sp, #32]
  406bbc:	ldp	x29, x30, [sp], #48
  406bc0:	br	x16
  406bc4:	ldp	x19, x20, [sp, #16]
  406bc8:	ldr	x21, [sp, #32]
  406bcc:	ldp	x29, x30, [sp], #48
  406bd0:	ret
  406bd4:	mov	x3, x1
  406bd8:	mov	x4, x0
  406bdc:	stp	x29, x30, [sp, #-16]!
  406be0:	mov	x29, sp
  406be4:	bl	4044e0 <__fxstatat@plt+0x1940>
  406be8:	and	w2, w0, #0xff
  406bec:	mov	x0, x3
  406bf0:	bl	4044e0 <__fxstatat@plt+0x1940>
  406bf4:	and	w1, w0, #0xff
  406bf8:	eor	w0, w1, #0x1
  406bfc:	tst	w2, w0
  406c00:	b.ne	406c28 <__fxstatat@plt+0x4088>  // b.any
  406c04:	eor	w2, w2, #0x1
  406c08:	tst	w1, w2
  406c0c:	b.ne	406c34 <__fxstatat@plt+0x4094>  // b.any
  406c10:	ldp	x29, x30, [sp], #16
  406c14:	mov	x1, x4
  406c18:	mov	x0, x3
  406c1c:	adrp	x2, 402000 <mbrtowc@plt-0x4c0>
  406c20:	add	x2, x2, #0x950
  406c24:	b	406b78 <__fxstatat@plt+0x3fd8>
  406c28:	mov	w0, #0xffffffff            	// #-1
  406c2c:	ldp	x29, x30, [sp], #16
  406c30:	ret
  406c34:	mov	w0, #0x1                   	// #1
  406c38:	b	406c2c <__fxstatat@plt+0x408c>
  406c3c:	mov	x3, x0
  406c40:	adrp	x2, 402000 <mbrtowc@plt-0x4c0>
  406c44:	mov	x0, x1
  406c48:	add	x2, x2, #0x950
  406c4c:	mov	x1, x3
  406c50:	b	406b78 <__fxstatat@plt+0x3fd8>
  406c54:	mov	x3, x1
  406c58:	mov	x4, x0
  406c5c:	stp	x29, x30, [sp, #-16]!
  406c60:	mov	x29, sp
  406c64:	bl	4044e0 <__fxstatat@plt+0x1940>
  406c68:	and	w2, w0, #0xff
  406c6c:	mov	x0, x3
  406c70:	bl	4044e0 <__fxstatat@plt+0x1940>
  406c74:	and	w1, w0, #0xff
  406c78:	eor	w0, w1, #0x1
  406c7c:	tst	w2, w0
  406c80:	b.ne	406ca8 <__fxstatat@plt+0x4108>  // b.any
  406c84:	eor	w2, w2, #0x1
  406c88:	tst	w1, w2
  406c8c:	b.ne	406cb4 <__fxstatat@plt+0x4114>  // b.any
  406c90:	ldp	x29, x30, [sp], #16
  406c94:	mov	x1, x3
  406c98:	mov	x0, x4
  406c9c:	adrp	x2, 402000 <mbrtowc@plt-0x4c0>
  406ca0:	add	x2, x2, #0x950
  406ca4:	b	406b78 <__fxstatat@plt+0x3fd8>
  406ca8:	mov	w0, #0xffffffff            	// #-1
  406cac:	ldp	x29, x30, [sp], #16
  406cb0:	ret
  406cb4:	mov	w0, #0x1                   	// #1
  406cb8:	b	406cac <__fxstatat@plt+0x410c>
  406cbc:	adrp	x2, 402000 <mbrtowc@plt-0x4c0>
  406cc0:	add	x2, x2, #0x950
  406cc4:	b	406b78 <__fxstatat@plt+0x3fd8>
  406cc8:	mov	x3, x1
  406ccc:	mov	x4, x0
  406cd0:	stp	x29, x30, [sp, #-16]!
  406cd4:	mov	x29, sp
  406cd8:	bl	4044e0 <__fxstatat@plt+0x1940>
  406cdc:	and	w2, w0, #0xff
  406ce0:	mov	x0, x3
  406ce4:	bl	4044e0 <__fxstatat@plt+0x1940>
  406ce8:	and	w1, w0, #0xff
  406cec:	eor	w0, w1, #0x1
  406cf0:	tst	w2, w0
  406cf4:	b.ne	406d1c <__fxstatat@plt+0x417c>  // b.any
  406cf8:	eor	w2, w2, #0x1
  406cfc:	tst	w1, w2
  406d00:	b.ne	406d28 <__fxstatat@plt+0x4188>  // b.any
  406d04:	ldp	x29, x30, [sp], #16
  406d08:	mov	x1, x4
  406d0c:	mov	x0, x3
  406d10:	adrp	x2, 404000 <__fxstatat@plt+0x1460>
  406d14:	add	x2, x2, #0xb50
  406d18:	b	406b78 <__fxstatat@plt+0x3fd8>
  406d1c:	mov	w0, #0xffffffff            	// #-1
  406d20:	ldp	x29, x30, [sp], #16
  406d24:	ret
  406d28:	mov	w0, #0x1                   	// #1
  406d2c:	b	406d20 <__fxstatat@plt+0x4180>
  406d30:	mov	x3, x0
  406d34:	adrp	x2, 404000 <__fxstatat@plt+0x1460>
  406d38:	mov	x0, x1
  406d3c:	add	x2, x2, #0xb50
  406d40:	mov	x1, x3
  406d44:	b	406b78 <__fxstatat@plt+0x3fd8>
  406d48:	mov	x3, x1
  406d4c:	mov	x4, x0
  406d50:	stp	x29, x30, [sp, #-16]!
  406d54:	mov	x29, sp
  406d58:	bl	4044e0 <__fxstatat@plt+0x1940>
  406d5c:	and	w2, w0, #0xff
  406d60:	mov	x0, x3
  406d64:	bl	4044e0 <__fxstatat@plt+0x1940>
  406d68:	and	w1, w0, #0xff
  406d6c:	eor	w0, w1, #0x1
  406d70:	tst	w2, w0
  406d74:	b.ne	406d9c <__fxstatat@plt+0x41fc>  // b.any
  406d78:	eor	w2, w2, #0x1
  406d7c:	tst	w1, w2
  406d80:	b.ne	406da8 <__fxstatat@plt+0x4208>  // b.any
  406d84:	ldp	x29, x30, [sp], #16
  406d88:	mov	x1, x3
  406d8c:	mov	x0, x4
  406d90:	adrp	x2, 404000 <__fxstatat@plt+0x1460>
  406d94:	add	x2, x2, #0xb50
  406d98:	b	406b78 <__fxstatat@plt+0x3fd8>
  406d9c:	mov	w0, #0xffffffff            	// #-1
  406da0:	ldp	x29, x30, [sp], #16
  406da4:	ret
  406da8:	mov	w0, #0x1                   	// #1
  406dac:	b	406da0 <__fxstatat@plt+0x4200>
  406db0:	adrp	x2, 404000 <__fxstatat@plt+0x1460>
  406db4:	add	x2, x2, #0xb50
  406db8:	b	406b78 <__fxstatat@plt+0x3fd8>
  406dbc:	stp	x29, x30, [sp, #-48]!
  406dc0:	mov	x29, sp
  406dc4:	stp	x19, x20, [sp, #16]
  406dc8:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  406dcc:	add	x19, x19, #0x5e8
  406dd0:	mov	x20, #0x0                   	// #0
  406dd4:	str	x21, [sp, #32]
  406dd8:	ldr	x0, [x19, #8]
  406ddc:	cmp	x0, x20
  406de0:	b.hi	406e24 <__fxstatat@plt+0x4284>  // b.pmore
  406de4:	add	x0, x19, #0xfb4
  406de8:	str	xzr, [x19, #8]
  406dec:	ldr	x21, [sp, #32]
  406df0:	strb	wzr, [x19, #3915]
  406df4:	stp	wzr, wzr, [x0, #-8]
  406df8:	stp	wzr, wzr, [x0]
  406dfc:	str	wzr, [x19, #3952]
  406e00:	str	wzr, [x19, #3972]
  406e04:	str	wzr, [x19, #3980]
  406e08:	strb	wzr, [x19, #4008]
  406e0c:	str	wzr, [x19, #4028]
  406e10:	str	wzr, [x19, #4032]
  406e14:	str	wzr, [x19, #4036]
  406e18:	ldp	x19, x20, [sp, #16]
  406e1c:	ldp	x29, x30, [sp], #48
  406e20:	ret
  406e24:	ldr	x0, [x19, #24]
  406e28:	ldr	x21, [x0, x20, lsl #3]
  406e2c:	add	x20, x20, #0x1
  406e30:	ldr	x0, [x21]
  406e34:	bl	402990 <free@plt>
  406e38:	ldr	x0, [x21, #8]
  406e3c:	bl	402990 <free@plt>
  406e40:	ldr	x0, [x21, #16]
  406e44:	bl	402990 <free@plt>
  406e48:	b	406dd8 <__fxstatat@plt+0x4238>
  406e4c:	stp	x29, x30, [sp, #-64]!
  406e50:	adrp	x1, 42c000 <__progname@@GLIBC_2.17+0xa28>
  406e54:	mov	x29, sp
  406e58:	ldrb	w1, [x1, #1176]
  406e5c:	str	x19, [sp, #16]
  406e60:	mov	w19, w0
  406e64:	cbnz	w1, 406e8c <__fxstatat@plt+0x42ec>
  406e68:	bl	40b974 <__fxstatat@plt+0x8dd4>
  406e6c:	cbz	x0, 406e8c <__fxstatat@plt+0x42ec>
  406e70:	mov	w1, #0x0                   	// #0
  406e74:	bl	40c224 <__fxstatat@plt+0x9684>
  406e78:	cmp	w0, #0x0
  406e7c:	csel	w0, w0, wzr, ge  // ge = tcont
  406e80:	ldr	x19, [sp, #16]
  406e84:	ldp	x29, x30, [sp], #64
  406e88:	ret
  406e8c:	mov	w4, w19
  406e90:	adrp	x3, 411000 <_obstack_memory_used@@Base+0xe44>
  406e94:	add	x3, x3, #0xdcc
  406e98:	mov	x2, #0x15                  	// #21
  406e9c:	mov	w1, #0x1                   	// #1
  406ea0:	add	x0, sp, #0x28
  406ea4:	bl	402560 <__sprintf_chk@plt>
  406ea8:	add	x0, sp, #0x28
  406eac:	bl	402540 <strlen@plt>
  406eb0:	b	406e80 <__fxstatat@plt+0x42e0>
  406eb4:	sub	sp, sp, #0x330
  406eb8:	stp	x29, x30, [sp]
  406ebc:	mov	x29, sp
  406ec0:	stp	x19, x20, [sp, #16]
  406ec4:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  406ec8:	add	x19, x19, #0x5e8
  406ecc:	stp	x23, x24, [sp, #48]
  406ed0:	mov	x23, x0
  406ed4:	and	w24, w2, #0xff
  406ed8:	stp	x27, x28, [sp, #80]
  406edc:	mov	w27, w1
  406ee0:	ldr	x1, [x19, #8]
  406ee4:	stp	x21, x22, [sp, #32]
  406ee8:	mov	x22, x3
  406eec:	ldr	x0, [x19, #4040]
  406ef0:	stp	x25, x26, [sp, #64]
  406ef4:	cmp	x1, x0
  406ef8:	b.ne	406f18 <__fxstatat@plt+0x4378>  // b.any
  406efc:	ldr	x0, [x19, #16]
  406f00:	mov	x2, #0x170                 	// #368
  406f04:	bl	40f2f0 <__fxstatat@plt+0xc750>
  406f08:	str	x0, [x19, #16]
  406f0c:	ldr	x0, [x19, #4040]
  406f10:	lsl	x0, x0, #1
  406f14:	str	x0, [x19, #4040]
  406f18:	ldp	x25, x26, [x19, #8]
  406f1c:	mov	x2, #0xb8                  	// #184
  406f20:	mov	w1, #0x0                   	// #0
  406f24:	mul	x25, x25, x2
  406f28:	add	x20, x26, x25
  406f2c:	mov	x0, x20
  406f30:	bl	4027c0 <memset@plt>
  406f34:	mov	w0, #0xffffffff            	// #-1
  406f38:	str	w0, [x20, #180]
  406f3c:	ldrb	w0, [x19, #3915]
  406f40:	str	w27, [x20, #152]
  406f44:	cbnz	w0, 406f6c <__fxstatat@plt+0x43cc>
  406f48:	ldrb	w0, [x19, #3914]
  406f4c:	cbz	w0, 406f6c <__fxstatat@plt+0x43cc>
  406f50:	mov	x0, x23
  406f54:	bl	40492c <__fxstatat@plt+0x1d8c>
  406f58:	and	w0, w0, #0xff
  406f5c:	str	w0, [x20, #180]
  406f60:	cbz	w0, 406f6c <__fxstatat@plt+0x43cc>
  406f64:	mov	w0, #0x1                   	// #1
  406f68:	strb	w0, [x19, #3915]
  406f6c:	ldrb	w28, [x19, #4048]
  406f70:	cbnz	w24, 407064 <__fxstatat@plt+0x44c4>
  406f74:	cbnz	w28, 407064 <__fxstatat@plt+0x44c4>
  406f78:	ldrb	w0, [x19, #4049]
  406f7c:	cbnz	w0, 407064 <__fxstatat@plt+0x44c4>
  406f80:	cmp	w27, #0x3
  406f84:	b.ne	406fc0 <__fxstatat@plt+0x4420>  // b.any
  406f88:	ldrb	w0, [x19, #3912]
  406f8c:	cbz	w0, 406fc0 <__fxstatat@plt+0x4420>
  406f90:	mov	w0, #0x13                  	// #19
  406f94:	bl	4045f8 <__fxstatat@plt+0x1a58>
  406f98:	tst	w0, #0xff
  406f9c:	b.ne	407064 <__fxstatat@plt+0x44c4>  // b.any
  406fa0:	mov	w0, #0x12                  	// #18
  406fa4:	bl	4045f8 <__fxstatat@plt+0x1a58>
  406fa8:	tst	w0, #0xff
  406fac:	b.ne	407064 <__fxstatat@plt+0x44c4>  // b.any
  406fb0:	mov	w0, #0x14                  	// #20
  406fb4:	bl	4045f8 <__fxstatat@plt+0x1a58>
  406fb8:	tst	w0, #0xff
  406fbc:	b.ne	407064 <__fxstatat@plt+0x44c4>  // b.any
  406fc0:	ldrb	w0, [x19, #3944]
  406fc4:	cbnz	w0, 406fd0 <__fxstatat@plt+0x4430>
  406fc8:	ldrb	w1, [x19, #4050]
  406fcc:	cbz	w1, 4077fc <__fxstatat@plt+0x4c5c>
  406fd0:	cmp	w27, #0x0
  406fd4:	ccmp	w27, #0x6, #0x4, ne  // ne = any
  406fd8:	b.ne	406ff8 <__fxstatat@plt+0x4458>  // b.any
  406fdc:	ldr	w1, [x19, #4052]
  406fe0:	cmp	w1, #0x5
  406fe4:	b.eq	407064 <__fxstatat@plt+0x44c4>  // b.none
  406fe8:	ldrb	w1, [x19, #3929]
  406fec:	cbnz	w1, 407064 <__fxstatat@plt+0x44c4>
  406ff0:	ldrb	w1, [x19, #4056]
  406ff4:	cbnz	w1, 407064 <__fxstatat@plt+0x44c4>
  406ff8:	cbnz	w0, 407064 <__fxstatat@plt+0x44c4>
  406ffc:	ldrb	w0, [x19, #4050]
  407000:	cbz	w0, 4077fc <__fxstatat@plt+0x4c5c>
  407004:	cbz	w27, 407064 <__fxstatat@plt+0x44c4>
  407008:	cmp	w27, #0x5
  40700c:	b.ne	4077fc <__fxstatat@plt+0x4c5c>  // b.any
  407010:	ldr	w0, [x19, #3772]
  407014:	cmp	w0, #0x3
  407018:	b.eq	407064 <__fxstatat@plt+0x44c4>  // b.none
  40701c:	ldrb	w0, [x19, #3912]
  407020:	cbz	w0, 4077fc <__fxstatat@plt+0x4c5c>
  407024:	mov	w0, #0xe                   	// #14
  407028:	bl	4045f8 <__fxstatat@plt+0x1a58>
  40702c:	tst	w0, #0xff
  407030:	b.ne	407064 <__fxstatat@plt+0x44c4>  // b.any
  407034:	mov	w0, #0x10                  	// #16
  407038:	bl	4045f8 <__fxstatat@plt+0x1a58>
  40703c:	tst	w0, #0xff
  407040:	b.ne	407064 <__fxstatat@plt+0x44c4>  // b.any
  407044:	mov	w0, #0x11                  	// #17
  407048:	bl	4045f8 <__fxstatat@plt+0x1a58>
  40704c:	tst	w0, #0xff
  407050:	b.ne	407064 <__fxstatat@plt+0x44c4>  // b.any
  407054:	mov	w0, #0x15                  	// #21
  407058:	bl	4045f8 <__fxstatat@plt+0x1a58>
  40705c:	tst	w0, #0xff
  407060:	b.eq	4077fc <__fxstatat@plt+0x4c5c>  // b.none
  407064:	ldrb	w0, [x23]
  407068:	cmp	w0, #0x2f
  40706c:	b.eq	4071b4 <__fxstatat@plt+0x4614>  // b.none
  407070:	ldrb	w1, [x22]
  407074:	cbz	w1, 4071b4 <__fxstatat@plt+0x4614>
  407078:	mov	x0, x23
  40707c:	str	w1, [x29, #120]
  407080:	bl	402540 <strlen@plt>
  407084:	mov	x21, x0
  407088:	mov	x0, x22
  40708c:	bl	402540 <strlen@plt>
  407090:	add	x21, x21, x0
  407094:	ldr	w1, [x29, #120]
  407098:	add	x21, x21, #0x11
  40709c:	and	x21, x21, #0xfffffffffffffff0
  4070a0:	cmp	w1, #0x2e
  4070a4:	sub	sp, sp, x21
  4070a8:	mov	x21, sp
  4070ac:	b.ne	40719c <__fxstatat@plt+0x45fc>  // b.any
  4070b0:	ldrb	w0, [x22, #1]
  4070b4:	cbnz	w0, 40719c <__fxstatat@plt+0x45fc>
  4070b8:	mov	x0, x21
  4070bc:	mov	x1, #0x0                   	// #0
  4070c0:	ldrb	w2, [x23, x1]
  4070c4:	add	x3, x0, x1
  4070c8:	cbnz	w2, 4071a8 <__fxstatat@plt+0x4608>
  4070cc:	strb	wzr, [x3]
  4070d0:	cbz	w28, 407108 <__fxstatat@plt+0x4568>
  4070d4:	mov	x0, x21
  4070d8:	mov	w1, #0x2                   	// #2
  4070dc:	bl	409448 <__fxstatat@plt+0x68a8>
  4070e0:	str	x0, [x20, #16]
  4070e4:	cbnz	x0, 407108 <__fxstatat@plt+0x4568>
  4070e8:	mov	w2, #0x5                   	// #5
  4070ec:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xe44>
  4070f0:	add	x1, x1, #0xdf1
  4070f4:	bl	402ac0 <dcgettext@plt>
  4070f8:	mov	x2, x21
  4070fc:	mov	x1, x0
  407100:	mov	w0, w24
  407104:	bl	404ebc <__fxstatat@plt+0x231c>
  407108:	ldr	w2, [x19, #4052]
  40710c:	add	x28, x20, #0x18
  407110:	cmp	w2, #0x4
  407114:	b.hi	4071bc <__fxstatat@plt+0x461c>  // b.pmore
  407118:	cmp	w2, #0x2
  40711c:	b.ls	40715c <__fxstatat@plt+0x45bc>  // b.plast
  407120:	cbz	w24, 40715c <__fxstatat@plt+0x45bc>
  407124:	mov	x1, x28
  407128:	mov	x0, x21
  40712c:	str	w2, [x29, #120]
  407130:	bl	411cc0 <_obstack_memory_used@@Base+0x1b04>
  407134:	ldr	w2, [x29, #120]
  407138:	mov	w22, w0
  40713c:	cmp	w2, #0x3
  407140:	b.eq	4071d4 <__fxstatat@plt+0x4634>  // b.none
  407144:	tbz	w0, #31, 407220 <__fxstatat@plt+0x4680>
  407148:	bl	402b30 <__errno_location@plt>
  40714c:	ldr	w0, [x0]
  407150:	cmp	w0, #0x2
  407154:	cset	w0, eq  // eq = none
  407158:	cbz	w0, 4071d4 <__fxstatat@plt+0x4634>
  40715c:	mov	x1, x28
  407160:	mov	x0, x21
  407164:	bl	411ce0 <_obstack_memory_used@@Base+0x1b24>
  407168:	b	4071d0 <__fxstatat@plt+0x4630>
  40716c:	add	x1, x1, #0x1
  407170:	strb	w2, [x0], #1
  407174:	ldrb	w2, [x1]
  407178:	cbnz	w2, 40716c <__fxstatat@plt+0x45cc>
  40717c:	cmp	x22, x1
  407180:	b.cs	4070bc <__fxstatat@plt+0x451c>  // b.hs, b.nlast
  407184:	ldurb	w1, [x1, #-1]
  407188:	cmp	w1, #0x2f
  40718c:	b.eq	4070bc <__fxstatat@plt+0x451c>  // b.none
  407190:	mov	w1, #0x2f                  	// #47
  407194:	strb	w1, [x0], #1
  407198:	b	4070bc <__fxstatat@plt+0x451c>
  40719c:	mov	x1, x22
  4071a0:	mov	x0, x21
  4071a4:	b	407174 <__fxstatat@plt+0x45d4>
  4071a8:	strb	w2, [x0, x1]
  4071ac:	add	x1, x1, #0x1
  4071b0:	b	4070c0 <__fxstatat@plt+0x4520>
  4071b4:	mov	x21, x23
  4071b8:	b	4070d0 <__fxstatat@plt+0x4530>
  4071bc:	cmp	w2, #0x5
  4071c0:	b.ne	40715c <__fxstatat@plt+0x45bc>  // b.any
  4071c4:	mov	x1, x28
  4071c8:	mov	x0, x21
  4071cc:	bl	411cc0 <_obstack_memory_used@@Base+0x1b04>
  4071d0:	mov	w22, w0
  4071d4:	cbz	w22, 407234 <__fxstatat@plt+0x4694>
  4071d8:	mov	w2, #0x5                   	// #5
  4071dc:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xe44>
  4071e0:	mov	x0, #0x0                   	// #0
  4071e4:	add	x1, x1, #0xe09
  4071e8:	bl	402ac0 <dcgettext@plt>
  4071ec:	mov	x1, x0
  4071f0:	mov	x2, x21
  4071f4:	mov	w0, w24
  4071f8:	bl	404ebc <__fxstatat@plt+0x231c>
  4071fc:	cbnz	w24, 407218 <__fxstatat@plt+0x4678>
  407200:	mov	x0, x23
  407204:	bl	40f418 <__fxstatat@plt+0xc878>
  407208:	str	x0, [x26, x25]
  40720c:	ldr	x0, [x19, #8]
  407210:	add	x0, x0, #0x1
  407214:	str	x0, [x19, #8]
  407218:	mov	x21, #0x0                   	// #0
  40721c:	b	4075c4 <__fxstatat@plt+0x4a24>
  407220:	ldr	w0, [x20, #40]
  407224:	and	w0, w0, #0xf000
  407228:	cmp	w0, #0x4, lsl #12
  40722c:	cset	w0, ne  // ne = any
  407230:	b	407158 <__fxstatat@plt+0x45b8>
  407234:	mov	w0, #0x1                   	// #1
  407238:	strb	w0, [x20, #168]
  40723c:	cmp	w27, #0x5
  407240:	b.eq	407254 <__fxstatat@plt+0x46b4>  // b.none
  407244:	ldr	w0, [x20, #40]
  407248:	and	w0, w0, #0xf000
  40724c:	cmp	w0, #0x8, lsl #12
  407250:	b.ne	4072b4 <__fxstatat@plt+0x4714>  // b.any
  407254:	ldrb	w0, [x19, #3912]
  407258:	cbz	w0, 4072b4 <__fxstatat@plt+0x4714>
  40725c:	mov	w0, #0x15                  	// #21
  407260:	bl	4045f8 <__fxstatat@plt+0x1a58>
  407264:	ands	w27, w0, #0xff
  407268:	b.eq	4072b4 <__fxstatat@plt+0x4714>  // b.none
  40726c:	ldr	x1, [x20, #24]
  407270:	ldr	x0, [x19, #4064]
  407274:	cmp	x1, x0
  407278:	b.ne	407290 <__fxstatat@plt+0x46f0>  // b.any
  40727c:	bl	402b30 <__errno_location@plt>
  407280:	mov	w1, #0x5f                  	// #95
  407284:	str	w1, [x0]
  407288:	mov	w27, #0x0                   	// #0
  40728c:	b	4072b0 <__fxstatat@plt+0x4710>
  407290:	mov	x0, x21
  407294:	bl	402a60 <cap_get_file@plt>
  407298:	cbnz	x0, 4075ec <__fxstatat@plt+0x4a4c>
  40729c:	bl	402b30 <__errno_location@plt>
  4072a0:	ldr	w0, [x0]
  4072a4:	bl	4044c0 <__fxstatat@plt+0x1920>
  4072a8:	ands	w27, w0, #0xff
  4072ac:	b.ne	407630 <__fxstatat@plt+0x4a90>  // b.any
  4072b0:	strb	w27, [x20, #176]
  4072b4:	ldr	w1, [x19, #3948]
  4072b8:	cbz	w1, 4072c4 <__fxstatat@plt+0x4724>
  4072bc:	ldrb	w0, [x19, #3976]
  4072c0:	cbz	w0, 407364 <__fxstatat@plt+0x47c4>
  4072c4:	ldr	x2, [x20, #24]
  4072c8:	str	w1, [x29, #108]
  4072cc:	ldr	x3, [x19, #4072]
  4072d0:	stp	x2, x3, [x29, #112]
  4072d4:	bl	402b30 <__errno_location@plt>
  4072d8:	mov	x27, x0
  4072dc:	ldp	x2, x3, [x29, #112]
  4072e0:	mov	w0, #0x5f                  	// #95
  4072e4:	ldr	w1, [x29, #108]
  4072e8:	cmp	x2, x3
  4072ec:	b.ne	40763c <__fxstatat@plt+0x4a9c>  // b.any
  4072f0:	str	w0, [x27]
  4072f4:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  4072f8:	add	x0, x0, #0x388
  4072fc:	add	x0, x0, #0x190
  407300:	str	x0, [x20, #160]
  407304:	cbnz	w1, 4076ac <__fxstatat@plt+0x4b0c>
  407308:	ldr	x0, [x19, #4080]
  40730c:	cmp	x2, x0
  407310:	b.ne	407664 <__fxstatat@plt+0x4ac4>  // b.any
  407314:	mov	w0, #0x5f                  	// #95
  407318:	str	w0, [x27]
  40731c:	cmp	w1, #0x0
  407320:	str	w1, [x20, #172]
  407324:	ldrb	w1, [x19, #4008]
  407328:	cset	w0, ne  // ne = any
  40732c:	orr	w0, w0, w1
  407330:	strb	w0, [x19, #4008]
  407334:	cbz	w22, 407364 <__fxstatat@plt+0x47c4>
  407338:	ldr	w22, [x27]
  40733c:	mov	x2, x21
  407340:	mov	w1, #0x3                   	// #3
  407344:	mov	w0, #0x0                   	// #0
  407348:	bl	40eaa0 <__fxstatat@plt+0xbf00>
  40734c:	mov	x3, x0
  407350:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x5e44>
  407354:	mov	w1, w22
  407358:	add	x2, x2, #0xd1
  40735c:	mov	w0, #0x0                   	// #0
  407360:	bl	4025b0 <error@plt>
  407364:	ldr	w0, [x20, #40]
  407368:	and	w0, w0, #0xf000
  40736c:	cmp	w0, #0xa, lsl #12
  407370:	b.ne	4073cc <__fxstatat@plt+0x482c>  // b.any
  407374:	ldr	w0, [x19, #3948]
  407378:	cbz	w0, 407384 <__fxstatat@plt+0x47e4>
  40737c:	ldrb	w0, [x19, #4056]
  407380:	cbz	w0, 4073cc <__fxstatat@plt+0x482c>
  407384:	ldr	x1, [x20, #72]
  407388:	mov	x0, x21
  40738c:	bl	408dec <__fxstatat@plt+0x624c>
  407390:	str	x0, [x20, #8]
  407394:	cbnz	x0, 4073b8 <__fxstatat@plt+0x4818>
  407398:	mov	w2, #0x5                   	// #5
  40739c:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xe44>
  4073a0:	add	x1, x1, #0xe1a
  4073a4:	bl	402ac0 <dcgettext@plt>
  4073a8:	mov	x2, x21
  4073ac:	mov	x1, x0
  4073b0:	mov	w0, w24
  4073b4:	bl	404ebc <__fxstatat@plt+0x231c>
  4073b8:	ldr	x28, [x20, #8]
  4073bc:	cbnz	x28, 4076b4 <__fxstatat@plt+0x4b14>
  4073c0:	mov	x22, #0x0                   	// #0
  4073c4:	mov	x0, x22
  4073c8:	bl	402990 <free@plt>
  4073cc:	ldr	w0, [x20, #40]
  4073d0:	and	w0, w0, #0xf000
  4073d4:	cmp	w0, #0xa, lsl #12
  4073d8:	b.ne	407780 <__fxstatat@plt+0x4be0>  // b.any
  4073dc:	mov	w0, #0x6                   	// #6
  4073e0:	str	w0, [x20, #152]
  4073e4:	ldr	w0, [x19, #3948]
  4073e8:	ldr	x21, [x20, #88]
  4073ec:	cbz	w0, 4073f8 <__fxstatat@plt+0x4858>
  4073f0:	ldrb	w0, [x19, #3956]
  4073f4:	cbz	w0, 4074b8 <__fxstatat@plt+0x4918>
  4073f8:	ldr	w2, [x19, #3968]
  4073fc:	mov	x3, #0x200                 	// #512
  407400:	ldr	x4, [x19, #3960]
  407404:	add	x1, x29, #0xa0
  407408:	mov	x0, x21
  40740c:	bl	40b1a4 <__fxstatat@plt+0x8604>
  407410:	mov	w1, #0x0                   	// #0
  407414:	bl	40c224 <__fxstatat@plt+0x9684>
  407418:	ldr	w1, [x19, #3972]
  40741c:	cmp	w0, w1
  407420:	b.le	407428 <__fxstatat@plt+0x4888>
  407424:	str	w0, [x19, #3972]
  407428:	ldr	w0, [x19, #3948]
  40742c:	cbnz	w0, 4074b8 <__fxstatat@plt+0x4918>
  407430:	adrp	x22, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  407434:	add	x22, x22, #0x388
  407438:	ldrb	w0, [x22, #402]
  40743c:	cbz	w0, 407458 <__fxstatat@plt+0x48b8>
  407440:	ldr	w0, [x20, #48]
  407444:	bl	406e4c <__fxstatat@plt+0x42ac>
  407448:	ldr	w1, [x19, #4016]
  40744c:	cmp	w0, w1
  407450:	b.le	407458 <__fxstatat@plt+0x48b8>
  407454:	str	w0, [x19, #4016]
  407458:	ldrb	w0, [x22, #403]
  40745c:	cbz	w0, 407498 <__fxstatat@plt+0x48f8>
  407460:	ldrb	w0, [x19, #3760]
  407464:	ldr	w22, [x20, #52]
  407468:	cbnz	w0, 4077ac <__fxstatat@plt+0x4c0c>
  40746c:	mov	w0, w22
  407470:	bl	40bb04 <__fxstatat@plt+0x8f64>
  407474:	cbz	x0, 4077ac <__fxstatat@plt+0x4c0c>
  407478:	mov	w1, #0x0                   	// #0
  40747c:	bl	40c224 <__fxstatat@plt+0x9684>
  407480:	cmp	w0, #0x0
  407484:	csel	w0, w0, wzr, ge  // ge = tcont
  407488:	ldr	w1, [x19, #4020]
  40748c:	cmp	w1, w0
  407490:	b.ge	407498 <__fxstatat@plt+0x48f8>  // b.tcont
  407494:	str	w0, [x19, #4020]
  407498:	ldrb	w0, [x19, #4089]
  40749c:	cbz	w0, 4074b8 <__fxstatat@plt+0x4918>
  4074a0:	ldr	w0, [x20, #48]
  4074a4:	bl	406e4c <__fxstatat@plt+0x42ac>
  4074a8:	ldr	w1, [x19, #4024]
  4074ac:	cmp	w0, w1
  4074b0:	b.le	4074b8 <__fxstatat@plt+0x4918>
  4074b4:	str	w0, [x19, #4024]
  4074b8:	ldrb	w0, [x19, #3976]
  4074bc:	cbz	w0, 4074d8 <__fxstatat@plt+0x4938>
  4074c0:	ldr	x0, [x20, #160]
  4074c4:	bl	402540 <strlen@plt>
  4074c8:	ldr	w1, [x19, #3980]
  4074cc:	cmp	w0, w1
  4074d0:	b.le	4074d8 <__fxstatat@plt+0x4938>
  4074d4:	str	w0, [x19, #3980]
  4074d8:	ldr	w0, [x19, #3948]
  4074dc:	cbnz	w0, 407584 <__fxstatat@plt+0x49e4>
  4074e0:	ldr	w0, [x20, #44]
  4074e4:	add	x1, x29, #0x88
  4074e8:	bl	40bcf0 <__fxstatat@plt+0x9150>
  4074ec:	bl	402540 <strlen@plt>
  4074f0:	ldr	w1, [x19, #4012]
  4074f4:	cmp	w0, w1
  4074f8:	b.le	407500 <__fxstatat@plt+0x4960>
  4074fc:	str	w0, [x19, #4012]
  407500:	ldr	w0, [x20, #40]
  407504:	mov	w1, #0xb000                	// #45056
  407508:	and	w0, w0, w1
  40750c:	cmp	w0, #0x2, lsl #12
  407510:	b.ne	4077d4 <__fxstatat@plt+0x4c34>  // b.any
  407514:	ldr	x0, [x20, #56]
  407518:	bl	4028d0 <gnu_dev_major@plt>
  40751c:	mov	w0, w0
  407520:	add	x1, x29, #0xa0
  407524:	bl	40bcf0 <__fxstatat@plt+0x9150>
  407528:	bl	402540 <strlen@plt>
  40752c:	ldr	w1, [x19, #4028]
  407530:	cmp	w0, w1
  407534:	b.le	40753c <__fxstatat@plt+0x499c>
  407538:	str	w0, [x19, #4028]
  40753c:	ldr	x0, [x20, #56]
  407540:	bl	402a10 <gnu_dev_minor@plt>
  407544:	mov	w0, w0
  407548:	add	x1, x29, #0xa0
  40754c:	bl	40bcf0 <__fxstatat@plt+0x9150>
  407550:	bl	402540 <strlen@plt>
  407554:	ldr	w1, [x19, #4032]
  407558:	cmp	w0, w1
  40755c:	b.le	407564 <__fxstatat@plt+0x49c4>
  407560:	str	w0, [x19, #4032]
  407564:	ldr	w0, [x19, #4028]
  407568:	ldr	w1, [x19, #4032]
  40756c:	add	w0, w0, #0x2
  407570:	add	w0, w0, w1
  407574:	ldr	w1, [x19, #4036]
  407578:	cmp	w0, w1
  40757c:	b.le	407584 <__fxstatat@plt+0x49e4>
  407580:	str	w0, [x19, #4036]
  407584:	ldrb	w0, [x19, #3944]
  407588:	cbz	w0, 4075ac <__fxstatat@plt+0x4a0c>
  40758c:	ldr	x0, [x20, #32]
  407590:	add	x1, x29, #0xa0
  407594:	bl	40bcf0 <__fxstatat@plt+0x9150>
  407598:	bl	402540 <strlen@plt>
  40759c:	ldr	w1, [x19, #3952]
  4075a0:	cmp	w0, w1
  4075a4:	b.le	4075ac <__fxstatat@plt+0x4a0c>
  4075a8:	str	w0, [x19, #3952]
  4075ac:	mov	x0, x23
  4075b0:	bl	40f418 <__fxstatat@plt+0xc878>
  4075b4:	str	x0, [x26, x25]
  4075b8:	ldr	x0, [x19, #8]
  4075bc:	add	x0, x0, #0x1
  4075c0:	str	x0, [x19, #8]
  4075c4:	mov	sp, x29
  4075c8:	mov	x0, x21
  4075cc:	ldp	x29, x30, [sp]
  4075d0:	ldp	x19, x20, [sp, #16]
  4075d4:	ldp	x21, x22, [sp, #32]
  4075d8:	ldp	x23, x24, [sp, #48]
  4075dc:	ldp	x25, x26, [sp, #64]
  4075e0:	ldp	x27, x28, [sp, #80]
  4075e4:	add	sp, sp, #0x330
  4075e8:	ret
  4075ec:	mov	x1, #0x0                   	// #0
  4075f0:	str	x0, [x29, #112]
  4075f4:	bl	4024f0 <cap_to_text@plt>
  4075f8:	mov	x1, x0
  4075fc:	ldr	x2, [x29, #112]
  407600:	str	x1, [x29, #120]
  407604:	mov	x0, x2
  407608:	bl	402aa0 <cap_free@plt>
  40760c:	ldr	x1, [x29, #120]
  407610:	cbz	x1, 40729c <__fxstatat@plt+0x46fc>
  407614:	ldrb	w2, [x1]
  407618:	mov	x0, x1
  40761c:	str	w2, [x29, #120]
  407620:	bl	402aa0 <cap_free@plt>
  407624:	ldr	w2, [x29, #120]
  407628:	cbnz	w2, 4072b0 <__fxstatat@plt+0x4710>
  40762c:	b	40729c <__fxstatat@plt+0x46fc>
  407630:	ldr	x0, [x20, #24]
  407634:	str	x0, [x19, #4064]
  407638:	b	407288 <__fxstatat@plt+0x46e8>
  40763c:	str	w0, [x27]
  407640:	str	x2, [x29, #112]
  407644:	str	w1, [x29, #120]
  407648:	bl	4044c0 <__fxstatat@plt+0x1920>
  40764c:	ldr	w1, [x29, #120]
  407650:	tst	w0, #0xff
  407654:	ldr	x2, [x29, #112]
  407658:	b.eq	4072f4 <__fxstatat@plt+0x4754>  // b.none
  40765c:	str	x2, [x19, #4072]
  407660:	b	4072f4 <__fxstatat@plt+0x4754>
  407664:	str	wzr, [x27]
  407668:	mov	x1, x28
  40766c:	mov	x0, x21
  407670:	bl	409b48 <__fxstatat@plt+0x6fa8>
  407674:	mov	w1, w0
  407678:	cmp	w0, #0x0
  40767c:	b.gt	407698 <__fxstatat@plt+0x4af8>
  407680:	ldr	w0, [x27]
  407684:	bl	4044c0 <__fxstatat@plt+0x1920>
  407688:	tst	w0, #0xff
  40768c:	b.eq	407698 <__fxstatat@plt+0x4af8>  // b.none
  407690:	ldr	x0, [x20, #24]
  407694:	str	x0, [x19, #4080]
  407698:	cmp	w1, #0x0
  40769c:	lsr	w22, w1, #31
  4076a0:	mov	w1, #0x2                   	// #2
  4076a4:	csel	w1, wzr, w1, le
  4076a8:	b	40731c <__fxstatat@plt+0x477c>
  4076ac:	mov	w1, #0x0                   	// #0
  4076b0:	b	40731c <__fxstatat@plt+0x477c>
  4076b4:	ldrb	w0, [x28]
  4076b8:	cmp	w0, #0x2f
  4076bc:	b.ne	407728 <__fxstatat@plt+0x4b88>  // b.any
  4076c0:	mov	x0, x28
  4076c4:	bl	40f418 <__fxstatat@plt+0xc878>
  4076c8:	mov	x22, x0
  4076cc:	cbz	x22, 4073c0 <__fxstatat@plt+0x4820>
  4076d0:	ldr	w0, [x20, #180]
  4076d4:	cbnz	w0, 4076f0 <__fxstatat@plt+0x4b50>
  4076d8:	ldr	x0, [x20, #8]
  4076dc:	bl	40492c <__fxstatat@plt+0x1d8c>
  4076e0:	tst	w0, #0xff
  4076e4:	b.eq	4076f0 <__fxstatat@plt+0x4b50>  // b.none
  4076e8:	mov	w0, #0xffffffff            	// #-1
  4076ec:	str	w0, [x20, #180]
  4076f0:	ldr	w0, [x19, #3772]
  4076f4:	cmp	w0, #0x1
  4076f8:	b.hi	407704 <__fxstatat@plt+0x4b64>  // b.pmore
  4076fc:	ldrb	w0, [x19, #4056]
  407700:	cbz	w0, 4073c4 <__fxstatat@plt+0x4824>
  407704:	add	x1, x29, #0xa0
  407708:	mov	x0, x22
  40770c:	bl	411cc0 <_obstack_memory_used@@Base+0x1b04>
  407710:	cbnz	w0, 4073c4 <__fxstatat@plt+0x4824>
  407714:	mov	w0, #0x1                   	// #1
  407718:	strb	w0, [x20, #169]
  40771c:	ldr	w0, [x29, #176]
  407720:	str	w0, [x20, #156]
  407724:	b	4073c4 <__fxstatat@plt+0x4824>
  407728:	mov	x0, x21
  40772c:	bl	409a00 <__fxstatat@plt+0x6e60>
  407730:	mov	x27, x0
  407734:	mov	x0, x28
  407738:	cbz	x27, 4076c4 <__fxstatat@plt+0x4b24>
  40773c:	bl	402540 <strlen@plt>
  407740:	add	x1, x27, #0x2
  407744:	add	x0, x1, x0
  407748:	bl	40f24c <__fxstatat@plt+0xc6ac>
  40774c:	mov	x22, x0
  407750:	add	x0, x21, x27
  407754:	ldurb	w0, [x0, #-1]
  407758:	cmp	w0, #0x2f
  40775c:	b.eq	407764 <__fxstatat@plt+0x4bc4>  // b.none
  407760:	add	x27, x27, #0x1
  407764:	mov	x2, x27
  407768:	mov	x1, x21
  40776c:	mov	x0, x22
  407770:	bl	402910 <stpncpy@plt>
  407774:	mov	x1, x28
  407778:	bl	402a20 <strcpy@plt>
  40777c:	b	4076cc <__fxstatat@plt+0x4b2c>
  407780:	cmp	w0, #0x4, lsl #12
  407784:	b.ne	4077a4 <__fxstatat@plt+0x4c04>  // b.any
  407788:	cbz	w24, 40779c <__fxstatat@plt+0x4bfc>
  40778c:	ldrb	w0, [x19, #4088]
  407790:	cbnz	w0, 40779c <__fxstatat@plt+0x4bfc>
  407794:	mov	w0, #0x9                   	// #9
  407798:	b	4073e0 <__fxstatat@plt+0x4840>
  40779c:	mov	w0, #0x3                   	// #3
  4077a0:	b	4073e0 <__fxstatat@plt+0x4840>
  4077a4:	mov	w0, #0x5                   	// #5
  4077a8:	b	4073e0 <__fxstatat@plt+0x4840>
  4077ac:	mov	w4, w22
  4077b0:	adrp	x3, 411000 <_obstack_memory_used@@Base+0xe44>
  4077b4:	add	x3, x3, #0xdcc
  4077b8:	mov	x2, #0x15                  	// #21
  4077bc:	mov	w1, #0x1                   	// #1
  4077c0:	add	x0, x29, #0xa0
  4077c4:	bl	402560 <__sprintf_chk@plt>
  4077c8:	add	x0, x29, #0xa0
  4077cc:	bl	402540 <strlen@plt>
  4077d0:	b	407488 <__fxstatat@plt+0x48e8>
  4077d4:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  4077d8:	ldr	w2, [x19, #4092]
  4077dc:	mov	x3, #0x1                   	// #1
  4077e0:	add	x1, x29, #0xa0
  4077e4:	ldr	x4, [x0, #1312]
  4077e8:	ldr	x0, [x20, #72]
  4077ec:	bl	40b1a4 <__fxstatat@plt+0x8604>
  4077f0:	mov	w1, #0x0                   	// #0
  4077f4:	bl	40c224 <__fxstatat@plt+0x9684>
  4077f8:	b	407574 <__fxstatat@plt+0x49d4>
  4077fc:	mov	x21, #0x0                   	// #0
  407800:	b	407584 <__fxstatat@plt+0x49e4>
  407804:	sub	sp, sp, #0x2c0
  407808:	stp	x29, x30, [sp]
  40780c:	mov	x29, sp
  407810:	stp	x19, x20, [sp, #16]
  407814:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  407818:	add	x19, x19, #0x5e8
  40781c:	mov	x20, x0
  407820:	stp	x21, x22, [sp, #32]
  407824:	mov	x21, x1
  407828:	bl	405820 <__fxstatat@plt+0x2c80>
  40782c:	ldrb	w0, [x19, #3944]
  407830:	cbz	w0, 407874 <__fxstatat@plt+0x4cd4>
  407834:	ldr	w0, [x19, #3948]
  407838:	cmp	w0, #0x4
  40783c:	b.eq	40793c <__fxstatat@plt+0x4d9c>  // b.none
  407840:	ldr	w22, [x19, #3952]
  407844:	ldrb	w0, [x20, #168]
  407848:	cbz	w0, 407944 <__fxstatat@plt+0x4da4>
  40784c:	ldr	x0, [x20, #32]
  407850:	cbz	x0, 407944 <__fxstatat@plt+0x4da4>
  407854:	add	x1, sp, #0x30
  407858:	bl	40bcf0 <__fxstatat@plt+0x9150>
  40785c:	mov	x3, x0
  407860:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xe44>
  407864:	mov	w2, w22
  407868:	add	x1, x1, #0xe47
  40786c:	mov	w0, #0x1                   	// #1
  407870:	bl	4027b0 <__printf_chk@plt>
  407874:	ldrb	w0, [x19, #3956]
  407878:	cbz	w0, 4078c4 <__fxstatat@plt+0x4d24>
  40787c:	ldr	w0, [x19, #3948]
  407880:	cmp	w0, #0x4
  407884:	b.eq	407950 <__fxstatat@plt+0x4db0>  // b.none
  407888:	ldr	w22, [x19, #3972]
  40788c:	ldrb	w0, [x20, #168]
  407890:	cbz	w0, 407958 <__fxstatat@plt+0x4db8>
  407894:	ldr	w2, [x19, #3968]
  407898:	mov	x3, #0x200                 	// #512
  40789c:	ldr	x0, [x20, #88]
  4078a0:	add	x1, sp, #0x30
  4078a4:	ldr	x4, [x19, #3960]
  4078a8:	bl	40b1a4 <__fxstatat@plt+0x8604>
  4078ac:	mov	x3, x0
  4078b0:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xe44>
  4078b4:	mov	w2, w22
  4078b8:	add	x1, x1, #0xe47
  4078bc:	mov	w0, #0x1                   	// #1
  4078c0:	bl	4027b0 <__printf_chk@plt>
  4078c4:	ldrb	w0, [x19, #3976]
  4078c8:	cbz	w0, 4078f0 <__fxstatat@plt+0x4d50>
  4078cc:	ldr	w0, [x19, #3948]
  4078d0:	cmp	w0, #0x4
  4078d4:	b.eq	407964 <__fxstatat@plt+0x4dc4>  // b.none
  4078d8:	ldr	w2, [x19, #3980]
  4078dc:	ldr	x3, [x20, #160]
  4078e0:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xe44>
  4078e4:	mov	w0, #0x1                   	// #1
  4078e8:	add	x1, x1, #0xe47
  4078ec:	bl	4027b0 <__printf_chk@plt>
  4078f0:	mov	x3, x21
  4078f4:	mov	x0, x20
  4078f8:	mov	x2, #0x0                   	// #0
  4078fc:	mov	w1, #0x0                   	// #0
  407900:	bl	405e54 <__fxstatat@plt+0x32b4>
  407904:	mov	x21, x0
  407908:	ldr	w0, [x19, #3772]
  40790c:	cbz	w0, 407924 <__fxstatat@plt+0x4d84>
  407910:	ldrb	w0, [x20, #168]
  407914:	ldr	w1, [x20, #40]
  407918:	ldr	w2, [x20, #152]
  40791c:	bl	4050bc <__fxstatat@plt+0x251c>
  407920:	add	x21, x21, w0, uxtb
  407924:	mov	x0, x21
  407928:	ldp	x29, x30, [sp]
  40792c:	ldp	x19, x20, [sp, #16]
  407930:	ldp	x21, x22, [sp, #32]
  407934:	add	sp, sp, #0x2c0
  407938:	ret
  40793c:	mov	w22, #0x0                   	// #0
  407940:	b	407844 <__fxstatat@plt+0x4ca4>
  407944:	adrp	x3, 413000 <_obstack_memory_used@@Base+0x2e44>
  407948:	add	x3, x3, #0xfd8
  40794c:	b	407860 <__fxstatat@plt+0x4cc0>
  407950:	mov	w22, #0x0                   	// #0
  407954:	b	40788c <__fxstatat@plt+0x4cec>
  407958:	adrp	x3, 413000 <_obstack_memory_used@@Base+0x2e44>
  40795c:	add	x3, x3, #0xfd8
  407960:	b	4078b0 <__fxstatat@plt+0x4d10>
  407964:	mov	w2, #0x0                   	// #0
  407968:	b	4078dc <__fxstatat@plt+0x4d3c>
  40796c:	stp	x29, x30, [sp, #-96]!
  407970:	mov	x29, sp
  407974:	stp	x21, x22, [sp, #32]
  407978:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  40797c:	add	x21, x21, #0x5e8
  407980:	stp	x23, x24, [sp, #48]
  407984:	and	w24, w0, #0xff
  407988:	mov	x22, #0x0                   	// #0
  40798c:	stp	x19, x20, [sp, #16]
  407990:	mov	x19, #0x0                   	// #0
  407994:	stp	x25, x26, [sp, #64]
  407998:	mov	w26, #0xa                   	// #10
  40799c:	stp	x27, x28, [sp, #80]
  4079a0:	mov	x27, #0xfffffffffffffffd    	// #-3
  4079a4:	ldr	x0, [x21, #8]
  4079a8:	cmp	x0, x22
  4079ac:	b.hi	4079d0 <__fxstatat@plt+0x4e30>  // b.pmore
  4079b0:	ldp	x19, x20, [sp, #16]
  4079b4:	mov	w0, #0xa                   	// #10
  4079b8:	ldp	x21, x22, [sp, #32]
  4079bc:	ldp	x23, x24, [sp, #48]
  4079c0:	ldp	x25, x26, [sp, #64]
  4079c4:	ldp	x27, x28, [sp, #80]
  4079c8:	ldp	x29, x30, [sp], #96
  4079cc:	b	4027f0 <putchar_unlocked@plt>
  4079d0:	ldr	x0, [x21, #24]
  4079d4:	ldr	x20, [x21, #48]
  4079d8:	ldr	x25, [x0, x22, lsl #3]
  4079dc:	cbz	x20, 4079ec <__fxstatat@plt+0x4e4c>
  4079e0:	mov	x0, x25
  4079e4:	bl	406238 <__fxstatat@plt+0x3698>
  4079e8:	mov	x20, x0
  4079ec:	cbz	x22, 407a30 <__fxstatat@plt+0x4e90>
  4079f0:	ldr	x0, [x21, #48]
  4079f4:	add	x23, x19, #0x2
  4079f8:	cbz	x0, 407a48 <__fxstatat@plt+0x4ea8>
  4079fc:	add	x1, x23, x20
  407a00:	cmp	x0, x1
  407a04:	b.ls	407a50 <__fxstatat@plt+0x4eb0>  // b.plast
  407a08:	sub	x0, x27, x20
  407a0c:	mov	w1, #0x20                  	// #32
  407a10:	cmp	x0, x19
  407a14:	csel	w28, w1, w26, cs  // cs = hs, nlast
  407a18:	csel	x23, x23, xzr, cs  // cs = hs, nlast
  407a1c:	mov	x19, x23
  407a20:	mov	w0, w24
  407a24:	bl	4027f0 <putchar_unlocked@plt>
  407a28:	mov	w0, w28
  407a2c:	bl	4027f0 <putchar_unlocked@plt>
  407a30:	mov	x1, x19
  407a34:	mov	x0, x25
  407a38:	add	x19, x19, x20
  407a3c:	add	x22, x22, #0x1
  407a40:	bl	407804 <__fxstatat@plt+0x4c64>
  407a44:	b	4079a4 <__fxstatat@plt+0x4e04>
  407a48:	mov	w28, #0x20                  	// #32
  407a4c:	b	407a1c <__fxstatat@plt+0x4e7c>
  407a50:	mov	w28, #0xa                   	// #10
  407a54:	mov	x23, #0x0                   	// #0
  407a58:	b	407a1c <__fxstatat@plt+0x4e7c>
  407a5c:	mov	x12, #0x1320                	// #4896
  407a60:	sub	sp, sp, x12
  407a64:	stp	x29, x30, [sp]
  407a68:	mov	x29, sp
  407a6c:	stp	x19, x20, [sp, #16]
  407a70:	mov	x20, x0
  407a74:	ldrb	w0, [x0, #168]
  407a78:	stp	x21, x22, [sp, #32]
  407a7c:	stp	x23, x24, [sp, #48]
  407a80:	stp	x25, x26, [sp, #64]
  407a84:	cbz	w0, 407ac4 <__fxstatat@plt+0x4f24>
  407a88:	add	x1, sp, #0x60
  407a8c:	add	x0, x20, #0x18
  407a90:	bl	409e48 <__fxstatat@plt+0x72a8>
  407a94:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  407a98:	add	x19, x19, #0x5e8
  407a9c:	ldrb	w0, [x19, #4008]
  407aa0:	cbnz	w0, 407af4 <__fxstatat@plt+0x4f54>
  407aa4:	strb	wzr, [sp, #106]
  407aa8:	ldr	w0, [x19, #3736]
  407aac:	cmp	w0, #0x1
  407ab0:	b.eq	407b1c <__fxstatat@plt+0x4f7c>  // b.none
  407ab4:	cmp	w0, #0x2
  407ab8:	b.eq	407ebc <__fxstatat@plt+0x531c>  // b.none
  407abc:	cbz	w0, 407eb4 <__fxstatat@plt+0x5314>
  407ac0:	bl	4028b0 <abort@plt>
  407ac4:	ldr	w1, [x20, #152]
  407ac8:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x3e44>
  407acc:	add	x0, x0, #0x4c0
  407ad0:	strb	wzr, [sp, #107]
  407ad4:	add	x0, x0, #0x228
  407ad8:	ldrb	w0, [x0, x1]
  407adc:	strb	w0, [sp, #96]
  407ae0:	mov	x0, #0x3f3f3f3f3f3f3f3f    	// #4557430888798830399
  407ae4:	stur	x0, [sp, #97]
  407ae8:	mov	w0, #0x3f3f                	// #16191
  407aec:	sturh	w0, [sp, #105]
  407af0:	b	407a94 <__fxstatat@plt+0x4ef4>
  407af4:	ldr	w0, [x20, #172]
  407af8:	cmp	w0, #0x1
  407afc:	b.ne	407b0c <__fxstatat@plt+0x4f6c>  // b.any
  407b00:	mov	w0, #0x2e                  	// #46
  407b04:	strb	w0, [sp, #106]
  407b08:	b	407aa8 <__fxstatat@plt+0x4f08>
  407b0c:	cmp	w0, #0x2
  407b10:	b.ne	407aa8 <__fxstatat@plt+0x4f08>  // b.any
  407b14:	mov	w0, #0x2b                  	// #43
  407b18:	b	407b04 <__fxstatat@plt+0x4f64>
  407b1c:	ldp	x1, x0, [x20, #128]
  407b20:	stp	x1, x0, [sp, #112]
  407b24:	ldrb	w0, [x19, #3944]
  407b28:	add	x24, sp, #0x4e0
  407b2c:	cbz	w0, 407ed0 <__fxstatat@plt+0x5330>
  407b30:	ldrb	w0, [x20, #168]
  407b34:	ldr	w21, [x19, #3952]
  407b38:	cbz	w0, 407ec4 <__fxstatat@plt+0x5324>
  407b3c:	ldr	x0, [x20, #32]
  407b40:	cbz	x0, 407ec4 <__fxstatat@plt+0x5324>
  407b44:	add	x1, sp, #0xf0
  407b48:	bl	40bcf0 <__fxstatat@plt+0x9150>
  407b4c:	mov	x5, x0
  407b50:	mov	w4, w21
  407b54:	adrp	x3, 411000 <_obstack_memory_used@@Base+0xe44>
  407b58:	add	x3, x3, #0xe47
  407b5c:	mov	x2, #0xe3b                 	// #3643
  407b60:	mov	w1, #0x1                   	// #1
  407b64:	mov	x0, x24
  407b68:	bl	402560 <__sprintf_chk@plt>
  407b6c:	mov	x0, x24
  407b70:	bl	402540 <strlen@plt>
  407b74:	add	x21, x24, x0
  407b78:	ldrb	w0, [x19, #3956]
  407b7c:	cbz	w0, 407bec <__fxstatat@plt+0x504c>
  407b80:	ldrb	w0, [x20, #168]
  407b84:	cbz	w0, 407ed8 <__fxstatat@plt+0x5338>
  407b88:	ldr	w2, [x19, #3968]
  407b8c:	add	x1, sp, #0xf0
  407b90:	ldr	x0, [x20, #88]
  407b94:	mov	x3, #0x200                 	// #512
  407b98:	ldr	x4, [x19, #3960]
  407b9c:	bl	40b1a4 <__fxstatat@plt+0x8604>
  407ba0:	mov	x22, x0
  407ba4:	ldr	w23, [x19, #3972]
  407ba8:	mov	w1, #0x0                   	// #0
  407bac:	mov	x0, x22
  407bb0:	bl	40c224 <__fxstatat@plt+0x9684>
  407bb4:	sub	w0, w23, w0
  407bb8:	mov	x1, #0x0                   	// #0
  407bbc:	mov	w3, #0x20                  	// #32
  407bc0:	sub	w2, w0, w1
  407bc4:	cmp	w2, #0x0
  407bc8:	b.gt	407ee4 <__fxstatat@plt+0x5344>
  407bcc:	cmp	w0, #0x0
  407bd0:	csel	w0, w0, wzr, ge  // ge = tcont
  407bd4:	add	x21, x21, w0, sxtw
  407bd8:	ldrb	w0, [x22], #1
  407bdc:	strb	w0, [x21], #1
  407be0:	cbnz	w0, 407bd8 <__fxstatat@plt+0x5038>
  407be4:	mov	w0, #0x20                  	// #32
  407be8:	sturb	w0, [x21, #-1]
  407bec:	ldrb	w0, [x20, #168]
  407bf0:	ldr	w22, [x19, #4012]
  407bf4:	cbz	w0, 407ef0 <__fxstatat@plt+0x5350>
  407bf8:	ldr	w0, [x20, #44]
  407bfc:	add	x1, sp, #0xf0
  407c00:	bl	40bcf0 <__fxstatat@plt+0x9150>
  407c04:	mov	x6, x0
  407c08:	mov	w5, w22
  407c0c:	add	x4, sp, #0x60
  407c10:	adrp	x3, 411000 <_obstack_memory_used@@Base+0xe44>
  407c14:	add	x3, x3, #0xe37
  407c18:	mov	x2, #0xffffffffffffffff    	// #-1
  407c1c:	mov	w1, #0x1                   	// #1
  407c20:	mov	x0, x21
  407c24:	bl	402560 <__sprintf_chk@plt>
  407c28:	mov	x0, x21
  407c2c:	bl	402540 <strlen@plt>
  407c30:	add	x21, x21, x0
  407c34:	ldrb	w0, [x19, #3928]
  407c38:	cbz	w0, 407c5c <__fxstatat@plt+0x50bc>
  407c3c:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  407c40:	ldr	x1, [x0, #1488]
  407c44:	adrp	x0, 411000 <_obstack_memory_used@@Base+0xe44>
  407c48:	add	x0, x0, #0xe3f
  407c4c:	bl	402ad0 <fputs_unlocked@plt>
  407c50:	ldr	x0, [x19, #3752]
  407c54:	add	x0, x0, #0x2
  407c58:	str	x0, [x19, #3752]
  407c5c:	adrp	x22, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  407c60:	add	x22, x22, #0x388
  407c64:	ldrb	w0, [x22, #402]
  407c68:	cbnz	w0, 407c84 <__fxstatat@plt+0x50e4>
  407c6c:	ldrb	w0, [x22, #403]
  407c70:	cbnz	w0, 407c84 <__fxstatat@plt+0x50e4>
  407c74:	ldrb	w0, [x19, #4089]
  407c78:	cbnz	w0, 407c84 <__fxstatat@plt+0x50e4>
  407c7c:	ldrb	w0, [x19, #3976]
  407c80:	cbz	w0, 407d24 <__fxstatat@plt+0x5184>
  407c84:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  407c88:	sub	x21, x21, x24
  407c8c:	ldr	x1, [x0, #1488]
  407c90:	mov	x0, x24
  407c94:	bl	402ad0 <fputs_unlocked@plt>
  407c98:	ldr	x0, [x19, #3752]
  407c9c:	add	x21, x21, x0
  407ca0:	ldrb	w0, [x22, #402]
  407ca4:	str	x21, [x19, #3752]
  407ca8:	cbz	w0, 407cbc <__fxstatat@plt+0x511c>
  407cac:	ldrb	w2, [x20, #168]
  407cb0:	ldr	w1, [x19, #4016]
  407cb4:	ldr	w0, [x20, #48]
  407cb8:	bl	404e48 <__fxstatat@plt+0x22a8>
  407cbc:	ldrb	w0, [x22, #403]
  407cc0:	cbz	w0, 407cf0 <__fxstatat@plt+0x5150>
  407cc4:	ldrb	w0, [x20, #168]
  407cc8:	ldr	w23, [x19, #4020]
  407ccc:	ldr	w21, [x20, #52]
  407cd0:	cbz	w0, 407efc <__fxstatat@plt+0x535c>
  407cd4:	ldrb	w0, [x19, #3760]
  407cd8:	cbnz	w0, 407f08 <__fxstatat@plt+0x5368>
  407cdc:	mov	w0, w21
  407ce0:	bl	40bb04 <__fxstatat@plt+0x8f64>
  407ce4:	mov	w2, w23
  407ce8:	mov	w1, w21
  407cec:	bl	404dac <__fxstatat@plt+0x220c>
  407cf0:	ldrb	w0, [x19, #4089]
  407cf4:	cbz	w0, 407d08 <__fxstatat@plt+0x5168>
  407cf8:	ldrb	w2, [x20, #168]
  407cfc:	ldr	w1, [x19, #4024]
  407d00:	ldr	w0, [x20, #48]
  407d04:	bl	404e48 <__fxstatat@plt+0x22a8>
  407d08:	ldrb	w0, [x19, #3976]
  407d0c:	cbz	w0, 407d20 <__fxstatat@plt+0x5180>
  407d10:	ldr	w2, [x19, #3980]
  407d14:	mov	x1, #0x0                   	// #0
  407d18:	ldr	x0, [x20, #160]
  407d1c:	bl	404dac <__fxstatat@plt+0x220c>
  407d20:	mov	x21, x24
  407d24:	ldrb	w0, [x20, #168]
  407d28:	cbz	w0, 407f78 <__fxstatat@plt+0x53d8>
  407d2c:	ldr	w0, [x20, #40]
  407d30:	mov	w1, #0xb000                	// #45056
  407d34:	and	w0, w0, w1
  407d38:	cmp	w0, #0x2, lsl #12
  407d3c:	b.ne	407f10 <__fxstatat@plt+0x5370>  // b.any
  407d40:	ldr	w23, [x19, #4028]
  407d44:	ldr	w4, [x19, #4032]
  407d48:	add	w0, w23, #0x2
  407d4c:	add	w0, w0, w4
  407d50:	ldr	w4, [x19, #4036]
  407d54:	subs	w4, w4, w0
  407d58:	ldr	x0, [x20, #56]
  407d5c:	csel	w4, w4, wzr, pl  // pl = nfrst
  407d60:	add	w23, w4, w23
  407d64:	bl	4028d0 <gnu_dev_major@plt>
  407d68:	mov	w0, w0
  407d6c:	add	x1, sp, #0xb8
  407d70:	bl	40bcf0 <__fxstatat@plt+0x9150>
  407d74:	mov	x25, x0
  407d78:	ldr	w26, [x19, #4032]
  407d7c:	ldr	x0, [x20, #56]
  407d80:	bl	402a10 <gnu_dev_minor@plt>
  407d84:	mov	w0, w0
  407d88:	add	x1, sp, #0xf0
  407d8c:	bl	40bcf0 <__fxstatat@plt+0x9150>
  407d90:	mov	w6, w26
  407d94:	mov	x7, x0
  407d98:	mov	x5, x25
  407d9c:	mov	x0, x21
  407da0:	mov	w4, w23
  407da4:	adrp	x3, 411000 <_obstack_memory_used@@Base+0xe44>
  407da8:	mov	x2, #0xffffffffffffffff    	// #-1
  407dac:	add	x3, x3, #0xe42
  407db0:	mov	w1, #0x1                   	// #1
  407db4:	bl	402560 <__sprintf_chk@plt>
  407db8:	ldrsw	x0, [x19, #4036]
  407dbc:	add	x0, x0, #0x1
  407dc0:	add	x21, x21, x0
  407dc4:	mov	w0, #0x1                   	// #1
  407dc8:	strb	w0, [x21]
  407dcc:	adrp	x23, 42c000 <__progname@@GLIBC_2.17+0xa28>
  407dd0:	add	x23, x23, #0x6e8
  407dd4:	ldrb	w0, [x20, #168]
  407dd8:	cbz	w0, 407dfc <__fxstatat@plt+0x525c>
  407ddc:	ldur	x0, [x23, #-256]
  407de0:	add	x2, sp, #0x80
  407de4:	add	x1, sp, #0x70
  407de8:	bl	410518 <_obstack_memory_used@@Base+0x35c>
  407dec:	cbnz	x0, 407f90 <__fxstatat@plt+0x53f0>
  407df0:	ldrb	w1, [x21]
  407df4:	mov	x0, #0x0                   	// #0
  407df8:	cbz	w1, 408008 <__fxstatat@plt+0x5468>
  407dfc:	ldr	w0, [x22, #416]
  407e00:	tbz	w0, #31, 407e6c <__fxstatat@plt+0x52cc>
  407e04:	ldur	x0, [x23, #-256]
  407e08:	add	x2, sp, #0xb8
  407e0c:	add	x1, sp, #0x58
  407e10:	str	xzr, [sp, #88]
  407e14:	bl	410518 <_obstack_memory_used@@Base+0x35c>
  407e18:	cbz	x0, 407e60 <__fxstatat@plt+0x52c0>
  407e1c:	ldrb	w0, [x19, #3128]
  407e20:	ldur	x4, [x23, #-256]
  407e24:	cbz	w0, 4080e4 <__fxstatat@plt+0x5544>
  407e28:	ldrsw	x0, [sp, #200]
  407e2c:	add	x2, x19, #0x38
  407e30:	add	x2, x2, x0, lsl #7
  407e34:	mov	x1, #0x3e9                 	// #1001
  407e38:	add	x3, sp, #0xb8
  407e3c:	add	x0, sp, #0xf0
  407e40:	mov	w5, #0x0                   	// #0
  407e44:	bl	40d63c <__fxstatat@plt+0xaa9c>
  407e48:	mov	x1, x0
  407e4c:	cbz	x0, 407e60 <__fxstatat@plt+0x52c0>
  407e50:	add	x0, sp, #0xf0
  407e54:	mov	w2, #0x0                   	// #0
  407e58:	bl	40c08c <__fxstatat@plt+0x94ec>
  407e5c:	str	w0, [x22, #416]
  407e60:	ldr	w0, [x22, #416]
  407e64:	tbz	w0, #31, 407e6c <__fxstatat@plt+0x52cc>
  407e68:	str	wzr, [x22, #416]
  407e6c:	ldrb	w0, [x20, #168]
  407e70:	ldr	w22, [x22, #416]
  407e74:	cbz	w0, 4080ec <__fxstatat@plt+0x554c>
  407e78:	ldr	x0, [sp, #112]
  407e7c:	add	x1, sp, #0xf0
  407e80:	bl	40bc90 <__fxstatat@plt+0x90f0>
  407e84:	mov	x5, x0
  407e88:	mov	w4, w22
  407e8c:	adrp	x3, 411000 <_obstack_memory_used@@Base+0xe44>
  407e90:	add	x3, x3, #0xe47
  407e94:	mov	x2, #0xffffffffffffffff    	// #-1
  407e98:	mov	w1, #0x1                   	// #1
  407e9c:	mov	x0, x21
  407ea0:	bl	402560 <__sprintf_chk@plt>
  407ea4:	mov	x0, x21
  407ea8:	bl	402540 <strlen@plt>
  407eac:	add	x22, x21, x0
  407eb0:	b	408018 <__fxstatat@plt+0x5478>
  407eb4:	ldp	x1, x0, [x20, #112]
  407eb8:	b	407b20 <__fxstatat@plt+0x4f80>
  407ebc:	ldp	x1, x0, [x20, #96]
  407ec0:	b	407b20 <__fxstatat@plt+0x4f80>
  407ec4:	adrp	x5, 413000 <_obstack_memory_used@@Base+0x2e44>
  407ec8:	add	x5, x5, #0xfd8
  407ecc:	b	407b50 <__fxstatat@plt+0x4fb0>
  407ed0:	mov	x21, x24
  407ed4:	b	407b78 <__fxstatat@plt+0x4fd8>
  407ed8:	adrp	x22, 413000 <_obstack_memory_used@@Base+0x2e44>
  407edc:	add	x22, x22, #0xfd8
  407ee0:	b	407ba4 <__fxstatat@plt+0x5004>
  407ee4:	strb	w3, [x21, x1]
  407ee8:	add	x1, x1, #0x1
  407eec:	b	407bc0 <__fxstatat@plt+0x5020>
  407ef0:	adrp	x6, 413000 <_obstack_memory_used@@Base+0x2e44>
  407ef4:	add	x6, x6, #0xfd8
  407ef8:	b	407c08 <__fxstatat@plt+0x5068>
  407efc:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2e44>
  407f00:	add	x0, x0, #0xfd8
  407f04:	b	407ce4 <__fxstatat@plt+0x5144>
  407f08:	mov	x0, #0x0                   	// #0
  407f0c:	b	407ce4 <__fxstatat@plt+0x5144>
  407f10:	ldr	w2, [x19, #4092]
  407f14:	add	x1, sp, #0xf0
  407f18:	ldr	x0, [x20, #72]
  407f1c:	mov	x3, #0x1                   	// #1
  407f20:	ldr	x4, [x22, #408]
  407f24:	bl	40b1a4 <__fxstatat@plt+0x8604>
  407f28:	mov	x23, x0
  407f2c:	ldr	w25, [x19, #4036]
  407f30:	mov	w1, #0x0                   	// #0
  407f34:	mov	x0, x23
  407f38:	bl	40c224 <__fxstatat@plt+0x9684>
  407f3c:	sub	w0, w25, w0
  407f40:	mov	x1, #0x0                   	// #0
  407f44:	mov	w3, #0x20                  	// #32
  407f48:	sub	w2, w0, w1
  407f4c:	cmp	w2, #0x0
  407f50:	b.gt	407f84 <__fxstatat@plt+0x53e4>
  407f54:	cmp	w0, #0x0
  407f58:	csel	w0, w0, wzr, ge  // ge = tcont
  407f5c:	add	x21, x21, w0, sxtw
  407f60:	ldrb	w0, [x23], #1
  407f64:	strb	w0, [x21], #1
  407f68:	cbnz	w0, 407f60 <__fxstatat@plt+0x53c0>
  407f6c:	mov	w0, #0x20                  	// #32
  407f70:	sturb	w0, [x21, #-1]
  407f74:	b	407dc4 <__fxstatat@plt+0x5224>
  407f78:	adrp	x23, 413000 <_obstack_memory_used@@Base+0x2e44>
  407f7c:	add	x23, x23, #0xfd8
  407f80:	b	407f2c <__fxstatat@plt+0x538c>
  407f84:	strb	w3, [x21, x1]
  407f88:	add	x1, x1, #0x1
  407f8c:	b	407f48 <__fxstatat@plt+0x53a8>
  407f90:	ldp	x0, x1, [x23, #-248]
  407f94:	ldp	x2, x3, [sp, #112]
  407f98:	bl	40ed44 <__fxstatat@plt+0xc1a4>
  407f9c:	tbz	w0, #31, 407fa8 <__fxstatat@plt+0x5408>
  407fa0:	sub	x0, x23, #0xf8
  407fa4:	bl	40a274 <__fxstatat@plt+0x76d4>
  407fa8:	ldp	x0, x1, [x23, #-248]
  407fac:	ldp	x2, x3, [sp, #112]
  407fb0:	sub	x0, x0, #0xf0c, lsl #12
  407fb4:	sub	x0, x0, #0x2ac
  407fb8:	bl	40ed44 <__fxstatat@plt+0xc1a4>
  407fbc:	tbz	w0, #31, 4080d0 <__fxstatat@plt+0x5530>
  407fc0:	ldp	x2, x3, [x23, #-248]
  407fc4:	ldp	x0, x1, [sp, #112]
  407fc8:	bl	40ed44 <__fxstatat@plt+0xc1a4>
  407fcc:	lsr	w0, w0, #31
  407fd0:	ldrb	w1, [x19, #3128]
  407fd4:	ldur	x4, [x23, #-256]
  407fd8:	ldr	x5, [sp, #120]
  407fdc:	cbz	w1, 4080d8 <__fxstatat@plt+0x5538>
  407fe0:	ldrsw	x1, [sp, #144]
  407fe4:	mov	w3, #0xc                   	// #12
  407fe8:	add	x2, x19, #0x38
  407fec:	smaddl	x0, w0, w3, x1
  407ff0:	add	x2, x2, x0, lsl #7
  407ff4:	add	x3, sp, #0x80
  407ff8:	mov	x0, x21
  407ffc:	mov	x1, #0x3e9                 	// #1001
  408000:	bl	40d63c <__fxstatat@plt+0xaa9c>
  408004:	cbz	x0, 407df0 <__fxstatat@plt+0x5250>
  408008:	add	x22, x21, x0
  40800c:	mov	w1, #0x20                  	// #32
  408010:	add	x22, x22, #0x1
  408014:	strh	w1, [x21, x0]
  408018:	adrp	x25, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  40801c:	mov	x0, x24
  408020:	sub	x24, x22, x24
  408024:	ldr	x1, [x25, #1488]
  408028:	bl	402ad0 <fputs_unlocked@plt>
  40802c:	ldr	x0, [x19, #3752]
  408030:	sub	x2, x23, #0xe8
  408034:	mov	x3, x24
  408038:	mov	w1, #0x0                   	// #0
  40803c:	add	x0, x0, x24
  408040:	str	x0, [x19, #3752]
  408044:	mov	x0, x20
  408048:	bl	405e54 <__fxstatat@plt+0x32b4>
  40804c:	ldr	w2, [x20, #152]
  408050:	mov	x21, x0
  408054:	cmp	w2, #0x6
  408058:	b.ne	4080f8 <__fxstatat@plt+0x5558>  // b.any
  40805c:	ldr	x0, [x20, #8]
  408060:	cbz	x0, 4080b0 <__fxstatat@plt+0x5510>
  408064:	ldr	x1, [x25, #1488]
  408068:	adrp	x0, 411000 <_obstack_memory_used@@Base+0xe44>
  40806c:	add	x0, x0, #0xe4c
  408070:	bl	402ad0 <fputs_unlocked@plt>
  408074:	ldr	x0, [x19, #3752]
  408078:	add	x3, x21, #0x4
  40807c:	add	x3, x3, x24
  408080:	mov	x2, #0x0                   	// #0
  408084:	add	x0, x0, #0x4
  408088:	mov	w1, #0x1                   	// #1
  40808c:	str	x0, [x19, #3752]
  408090:	mov	x0, x20
  408094:	bl	405e54 <__fxstatat@plt+0x32b4>
  408098:	ldr	w0, [x19, #3772]
  40809c:	cbz	w0, 4080b0 <__fxstatat@plt+0x5510>
  4080a0:	ldr	w1, [x20, #156]
  4080a4:	mov	w2, #0x0                   	// #0
  4080a8:	mov	w0, #0x1                   	// #1
  4080ac:	bl	4050bc <__fxstatat@plt+0x251c>
  4080b0:	mov	x12, #0x1320                	// #4896
  4080b4:	ldp	x29, x30, [sp]
  4080b8:	ldp	x19, x20, [sp, #16]
  4080bc:	ldp	x21, x22, [sp, #32]
  4080c0:	ldp	x23, x24, [sp, #48]
  4080c4:	ldp	x25, x26, [sp, #64]
  4080c8:	add	sp, sp, x12
  4080cc:	ret
  4080d0:	mov	x0, #0x0                   	// #0
  4080d4:	b	407fd0 <__fxstatat@plt+0x5430>
  4080d8:	add	x0, x22, x0, lsl #3
  4080dc:	ldr	x2, [x0, #384]
  4080e0:	b	407ff4 <__fxstatat@plt+0x5454>
  4080e4:	ldr	x2, [x22, #384]
  4080e8:	b	407e34 <__fxstatat@plt+0x5294>
  4080ec:	adrp	x5, 413000 <_obstack_memory_used@@Base+0x2e44>
  4080f0:	add	x5, x5, #0xfd8
  4080f4:	b	407e88 <__fxstatat@plt+0x52e8>
  4080f8:	ldr	w0, [x19, #3772]
  4080fc:	cbz	w0, 4080b0 <__fxstatat@plt+0x5510>
  408100:	ldrb	w0, [x20, #168]
  408104:	ldr	w1, [x20, #40]
  408108:	b	4080ac <__fxstatat@plt+0x550c>
  40810c:	stp	x29, x30, [sp, #-96]!
  408110:	mov	x29, sp
  408114:	stp	x19, x20, [sp, #16]
  408118:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  40811c:	add	x19, x19, #0x5e8
  408120:	stp	x21, x22, [sp, #32]
  408124:	ldr	w1, [x19, #3948]
  408128:	stp	x23, x24, [sp, #48]
  40812c:	cmp	w1, #0x4
  408130:	stp	x25, x26, [sp, #64]
  408134:	stp	x27, x28, [sp, #80]
  408138:	b.hi	40817c <__fxstatat@plt+0x55dc>  // b.pmore
  40813c:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x3e44>
  408140:	add	x0, x0, #0x390
  408144:	ldrh	w0, [x0, w1, uxtw #1]
  408148:	adr	x1, 408154 <__fxstatat@plt+0x55b4>
  40814c:	add	x0, x1, w0, sxth #2
  408150:	br	x0
  408154:	ldr	x0, [x19, #24]
  408158:	mov	x1, #0x0                   	// #0
  40815c:	ldr	x0, [x0, x20, lsl #3]
  408160:	add	x20, x20, #0x1
  408164:	bl	407804 <__fxstatat@plt+0x4c64>
  408168:	mov	w0, #0xa                   	// #10
  40816c:	bl	4027f0 <putchar_unlocked@plt>
  408170:	ldr	x0, [x19, #8]
  408174:	cmp	x0, x20
  408178:	b.hi	408154 <__fxstatat@plt+0x55b4>  // b.pmore
  40817c:	ldp	x19, x20, [sp, #16]
  408180:	ldp	x21, x22, [sp, #32]
  408184:	ldp	x23, x24, [sp, #48]
  408188:	ldp	x25, x26, [sp, #64]
  40818c:	ldp	x27, x28, [sp, #80]
  408190:	ldp	x29, x30, [sp], #96
  408194:	ret
  408198:	mov	x20, #0x0                   	// #0
  40819c:	b	408170 <__fxstatat@plt+0x55d0>
  4081a0:	ldr	x0, [x19, #48]
  4081a4:	cbnz	x0, 4081c8 <__fxstatat@plt+0x5628>
  4081a8:	mov	w0, #0x20                  	// #32
  4081ac:	ldp	x19, x20, [sp, #16]
  4081b0:	ldp	x21, x22, [sp, #32]
  4081b4:	ldp	x23, x24, [sp, #48]
  4081b8:	ldp	x25, x26, [sp, #64]
  4081bc:	ldp	x27, x28, [sp, #80]
  4081c0:	ldp	x29, x30, [sp], #96
  4081c4:	b	40796c <__fxstatat@plt+0x4dcc>
  4081c8:	mov	w0, #0x1                   	// #1
  4081cc:	bl	406360 <__fxstatat@plt+0x37c0>
  4081d0:	mov	x1, #0x18                  	// #24
  4081d4:	mov	x23, #0x0                   	// #0
  4081d8:	ldr	x24, [x19, #4000]
  4081dc:	mul	x1, x0, x1
  4081e0:	sub	x1, x1, #0x18
  4081e4:	add	x24, x24, x1
  4081e8:	ldr	x1, [x19, #8]
  4081ec:	udiv	x20, x1, x0
  4081f0:	msub	x0, x20, x0, x1
  4081f4:	cmp	x0, #0x0
  4081f8:	cinc	x20, x20, ne  // ne = any
  4081fc:	cmp	x20, x23
  408200:	b.eq	40817c <__fxstatat@plt+0x55dc>  // b.none
  408204:	mov	x25, x23
  408208:	mov	x26, #0x0                   	// #0
  40820c:	mov	x22, #0x0                   	// #0
  408210:	ldr	x0, [x19, #24]
  408214:	ldr	x27, [x0, x25, lsl #3]
  408218:	add	x25, x25, x20
  40821c:	mov	x0, x27
  408220:	bl	406238 <__fxstatat@plt+0x3698>
  408224:	mov	x21, x0
  408228:	mov	x1, x22
  40822c:	ldr	x0, [x24, #16]
  408230:	ldr	x28, [x0, x26]
  408234:	mov	x0, x27
  408238:	bl	407804 <__fxstatat@plt+0x4c64>
  40823c:	add	x26, x26, #0x8
  408240:	ldr	x0, [x19, #8]
  408244:	cmp	x25, x0
  408248:	b.cs	408260 <__fxstatat@plt+0x56c0>  // b.hs, b.nlast
  40824c:	add	x0, x21, x22
  408250:	add	x22, x22, x28
  408254:	mov	x1, x22
  408258:	bl	404544 <__fxstatat@plt+0x19a4>
  40825c:	b	408210 <__fxstatat@plt+0x5670>
  408260:	mov	w0, #0xa                   	// #10
  408264:	add	x23, x23, #0x1
  408268:	bl	4027f0 <putchar_unlocked@plt>
  40826c:	b	4081fc <__fxstatat@plt+0x565c>
  408270:	ldr	x0, [x19, #48]
  408274:	cbz	x0, 4081a8 <__fxstatat@plt+0x5608>
  408278:	mov	w0, #0x0                   	// #0
  40827c:	bl	406360 <__fxstatat@plt+0x37c0>
  408280:	mov	x23, x0
  408284:	mov	x0, #0x18                  	// #24
  408288:	ldr	x24, [x19, #4000]
  40828c:	mov	x22, #0x0                   	// #0
  408290:	mul	x0, x23, x0
  408294:	sub	x0, x0, #0x18
  408298:	add	x24, x24, x0
  40829c:	ldr	x0, [x19, #24]
  4082a0:	ldr	x21, [x0]
  4082a4:	mov	x0, x21
  4082a8:	bl	406238 <__fxstatat@plt+0x3698>
  4082ac:	mov	x20, x0
  4082b0:	mov	x1, #0x0                   	// #0
  4082b4:	ldr	x0, [x24, #16]
  4082b8:	ldr	x26, [x0]
  4082bc:	mov	x0, x21
  4082c0:	mov	x21, #0x1                   	// #1
  4082c4:	bl	407804 <__fxstatat@plt+0x4c64>
  4082c8:	ldr	x0, [x19, #8]
  4082cc:	cmp	x21, x0
  4082d0:	b.cc	4082f4 <__fxstatat@plt+0x5754>  // b.lo, b.ul, b.last
  4082d4:	ldp	x19, x20, [sp, #16]
  4082d8:	mov	w0, #0xa                   	// #10
  4082dc:	ldp	x21, x22, [sp, #32]
  4082e0:	ldp	x23, x24, [sp, #48]
  4082e4:	ldp	x25, x26, [sp, #64]
  4082e8:	ldp	x27, x28, [sp, #80]
  4082ec:	ldp	x29, x30, [sp], #96
  4082f0:	b	4027f0 <putchar_unlocked@plt>
  4082f4:	udiv	x25, x21, x23
  4082f8:	msub	x25, x25, x23, x21
  4082fc:	cbnz	x25, 40833c <__fxstatat@plt+0x579c>
  408300:	mov	x22, #0x0                   	// #0
  408304:	mov	w0, #0xa                   	// #10
  408308:	bl	4027f0 <putchar_unlocked@plt>
  40830c:	ldr	x0, [x19, #24]
  408310:	mov	x1, x22
  408314:	ldr	x20, [x0, x21, lsl #3]
  408318:	add	x21, x21, #0x1
  40831c:	mov	x0, x20
  408320:	bl	407804 <__fxstatat@plt+0x4c64>
  408324:	mov	x0, x20
  408328:	bl	406238 <__fxstatat@plt+0x3698>
  40832c:	mov	x20, x0
  408330:	ldr	x0, [x24, #16]
  408334:	ldr	x26, [x0, x25, lsl #3]
  408338:	b	4082c8 <__fxstatat@plt+0x5728>
  40833c:	add	x0, x22, x20
  408340:	add	x22, x22, x26
  408344:	mov	x1, x22
  408348:	bl	404544 <__fxstatat@plt+0x19a4>
  40834c:	b	40830c <__fxstatat@plt+0x576c>
  408350:	mov	w0, #0x2c                  	// #44
  408354:	b	4081ac <__fxstatat@plt+0x560c>
  408358:	bl	405820 <__fxstatat@plt+0x2c80>
  40835c:	ldr	x0, [x19, #24]
  408360:	ldr	x0, [x0, x20, lsl #3]
  408364:	add	x20, x20, #0x1
  408368:	bl	407a5c <__fxstatat@plt+0x4ebc>
  40836c:	mov	w0, #0xa                   	// #10
  408370:	bl	4027f0 <putchar_unlocked@plt>
  408374:	ldr	x0, [x19, #3752]
  408378:	add	x0, x0, #0x1
  40837c:	str	x0, [x19, #3752]
  408380:	ldr	x0, [x19, #8]
  408384:	cmp	x0, x20
  408388:	b.hi	408358 <__fxstatat@plt+0x57b8>  // b.pmore
  40838c:	b	40817c <__fxstatat@plt+0x55dc>
  408390:	mov	x20, #0x0                   	// #0
  408394:	b	408380 <__fxstatat@plt+0x57e0>
  408398:	sub	sp, sp, #0x300
  40839c:	stp	x29, x30, [sp]
  4083a0:	mov	x29, sp
  4083a4:	stp	x19, x20, [sp, #16]
  4083a8:	mov	x20, x0
  4083ac:	stp	x21, x22, [sp, #32]
  4083b0:	stp	x23, x24, [sp, #48]
  4083b4:	and	w24, w2, #0xff
  4083b8:	stp	x25, x26, [sp, #64]
  4083bc:	mov	x25, x1
  4083c0:	stp	x27, x28, [sp, #80]
  4083c4:	bl	402b30 <__errno_location@plt>
  4083c8:	mov	x23, x0
  4083cc:	str	wzr, [x0]
  4083d0:	mov	x0, x20
  4083d4:	bl	402620 <opendir@plt>
  4083d8:	cbnz	x0, 40841c <__fxstatat@plt+0x587c>
  4083dc:	mov	w2, #0x5                   	// #5
  4083e0:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xe44>
  4083e4:	add	x1, x1, #0xe51
  4083e8:	bl	402ac0 <dcgettext@plt>
  4083ec:	mov	x2, x20
  4083f0:	mov	x1, x0
  4083f4:	mov	w0, w24
  4083f8:	bl	404ebc <__fxstatat@plt+0x231c>
  4083fc:	ldp	x29, x30, [sp]
  408400:	ldp	x19, x20, [sp, #16]
  408404:	ldp	x21, x22, [sp, #32]
  408408:	ldp	x23, x24, [sp, #48]
  40840c:	ldp	x25, x26, [sp, #64]
  408410:	ldp	x27, x28, [sp, #80]
  408414:	add	sp, sp, #0x300
  408418:	ret
  40841c:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  408420:	add	x19, x19, #0x5e8
  408424:	mov	x22, x0
  408428:	ldr	x1, [x19, #3744]
  40842c:	cbz	x1, 408778 <__fxstatat@plt+0x5bd8>
  408430:	bl	402a30 <dirfd@plt>
  408434:	add	x1, sp, #0x70
  408438:	tbnz	w0, #31, 408478 <__fxstatat@plt+0x58d8>
  40843c:	bl	411cd0 <_obstack_memory_used@@Base+0x1b14>
  408440:	lsr	w0, w0, #31
  408444:	cbz	w0, 408484 <__fxstatat@plt+0x58e4>
  408448:	mov	w2, #0x5                   	// #5
  40844c:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xe44>
  408450:	mov	x0, #0x0                   	// #0
  408454:	add	x1, x1, #0xe6a
  408458:	bl	402ac0 <dcgettext@plt>
  40845c:	mov	x1, x0
  408460:	mov	x2, x20
  408464:	mov	w0, w24
  408468:	bl	404ebc <__fxstatat@plt+0x231c>
  40846c:	mov	x0, x22
  408470:	bl	402840 <closedir@plt>
  408474:	b	4083fc <__fxstatat@plt+0x585c>
  408478:	mov	x0, x20
  40847c:	bl	411cc0 <_obstack_memory_used@@Base+0x1b04>
  408480:	b	408440 <__fxstatat@plt+0x58a0>
  408484:	mov	x0, #0x10                  	// #16
  408488:	ldp	x26, x27, [sp, #112]
  40848c:	bl	40f24c <__fxstatat@plt+0xc6ac>
  408490:	mov	x21, x0
  408494:	mov	x1, x0
  408498:	ldr	x0, [x19, #3744]
  40849c:	stp	x27, x26, [x21]
  4084a0:	bl	40aedc <__fxstatat@plt+0x833c>
  4084a4:	cbnz	x0, 4084ac <__fxstatat@plt+0x590c>
  4084a8:	bl	40f440 <__fxstatat@plt+0xc8a0>
  4084ac:	cmp	x21, x0
  4084b0:	b.eq	408740 <__fxstatat@plt+0x5ba0>  // b.none
  4084b4:	mov	x0, x21
  4084b8:	bl	402990 <free@plt>
  4084bc:	mov	w2, #0x5                   	// #5
  4084c0:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xe44>
  4084c4:	mov	x0, #0x0                   	// #0
  4084c8:	add	x1, x1, #0xe92
  4084cc:	bl	402ac0 <dcgettext@plt>
  4084d0:	mov	x21, x0
  4084d4:	mov	x2, x20
  4084d8:	mov	w1, #0x3                   	// #3
  4084dc:	mov	w0, #0x0                   	// #0
  4084e0:	bl	40eaa0 <__fxstatat@plt+0xbf00>
  4084e4:	mov	x2, x21
  4084e8:	mov	x3, x0
  4084ec:	mov	w1, #0x0                   	// #0
  4084f0:	mov	w0, #0x0                   	// #0
  4084f4:	bl	4025b0 <error@plt>
  4084f8:	mov	x0, x22
  4084fc:	bl	402840 <closedir@plt>
  408500:	mov	w0, #0x2                   	// #2
  408504:	str	w0, [x19, #3768]
  408508:	b	4083fc <__fxstatat@plt+0x585c>
  40850c:	mov	x26, #0x0                   	// #0
  408510:	b	408820 <__fxstatat@plt+0x5c80>
  408514:	ldrb	w1, [x28, #19]
  408518:	cmp	w1, #0x2e
  40851c:	b.ne	408540 <__fxstatat@plt+0x59a0>  // b.any
  408520:	cbz	w0, 408538 <__fxstatat@plt+0x5998>
  408524:	ldrb	w0, [x28, #20]
  408528:	cmp	w0, #0x2e
  40852c:	cinc	x0, x25, eq  // eq = none
  408530:	ldrb	w0, [x0, #1]
  408534:	cbnz	w0, 4088a8 <__fxstatat@plt+0x5d08>
  408538:	bl	405778 <__fxstatat@plt+0x2bd8>
  40853c:	b	408884 <__fxstatat@plt+0x5ce4>
  408540:	cbnz	w0, 4088a8 <__fxstatat@plt+0x5d08>
  408544:	ldr	x3, [x21, #56]
  408548:	cbz	x3, 4088a8 <__fxstatat@plt+0x5d08>
  40854c:	ldr	x0, [x3]
  408550:	mov	x1, x25
  408554:	mov	w2, #0x4                   	// #4
  408558:	str	x3, [sp, #104]
  40855c:	bl	4029e0 <fnmatch@plt>
  408560:	cbz	w0, 408538 <__fxstatat@plt+0x5998>
  408564:	ldr	x3, [sp, #104]
  408568:	ldr	x3, [x3, #8]
  40856c:	b	408548 <__fxstatat@plt+0x59a8>
  408570:	ldr	x0, [x3]
  408574:	mov	x1, x25
  408578:	mov	w2, #0x4                   	// #4
  40857c:	str	x3, [sp, #104]
  408580:	bl	4029e0 <fnmatch@plt>
  408584:	cbz	w0, 408538 <__fxstatat@plt+0x5998>
  408588:	ldr	x3, [sp, #104]
  40858c:	ldr	x3, [x3, #8]
  408590:	b	4088ac <__fxstatat@plt+0x5d0c>
  408594:	ldr	x0, [sp, #96]
  408598:	and	x1, x1, #0xff
  40859c:	ldrb	w1, [x0, x1]
  4085a0:	mov	x3, x20
  4085a4:	mov	x0, x25
  4085a8:	mov	w2, #0x0                   	// #0
  4085ac:	bl	406eb4 <__fxstatat@plt+0x4314>
  4085b0:	add	x26, x26, x0
  4085b4:	ldr	w0, [x19, #3948]
  4085b8:	cmp	w0, #0x1
  4085bc:	b.ne	408538 <__fxstatat@plt+0x5998>  // b.any
  4085c0:	ldr	w0, [x19, #3416]
  4085c4:	cmn	w0, #0x1
  4085c8:	b.ne	408538 <__fxstatat@plt+0x5998>  // b.any
  4085cc:	ldrb	w0, [x19, #3956]
  4085d0:	cbnz	w0, 408538 <__fxstatat@plt+0x5998>
  4085d4:	ldurb	w0, [x21, #-56]
  4085d8:	cbnz	w0, 408538 <__fxstatat@plt+0x5998>
  4085dc:	bl	404a38 <__fxstatat@plt+0x1e98>
  4085e0:	bl	40810c <__fxstatat@plt+0x556c>
  4085e4:	bl	406dbc <__fxstatat@plt+0x421c>
  4085e8:	b	408538 <__fxstatat@plt+0x5998>
  4085ec:	ldr	w1, [x23]
  4085f0:	cbz	w1, 40861c <__fxstatat@plt+0x5a7c>
  4085f4:	mov	x1, x27
  4085f8:	mov	w2, #0x5                   	// #5
  4085fc:	bl	402ac0 <dcgettext@plt>
  408600:	mov	x1, x0
  408604:	mov	x2, x20
  408608:	mov	w0, w24
  40860c:	bl	404ebc <__fxstatat@plt+0x231c>
  408610:	ldr	w0, [x23]
  408614:	cmp	w0, #0x4b
  408618:	b.eq	408538 <__fxstatat@plt+0x5998>  // b.none
  40861c:	mov	x0, x22
  408620:	bl	402840 <closedir@plt>
  408624:	cbz	w0, 40864c <__fxstatat@plt+0x5aac>
  408628:	mov	w2, #0x5                   	// #5
  40862c:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xe44>
  408630:	mov	x0, #0x0                   	// #0
  408634:	add	x1, x1, #0xed0
  408638:	bl	402ac0 <dcgettext@plt>
  40863c:	mov	x1, x0
  408640:	mov	x2, x20
  408644:	mov	w0, w24
  408648:	bl	404ebc <__fxstatat@plt+0x231c>
  40864c:	bl	404a38 <__fxstatat@plt+0x1e98>
  408650:	ldurb	w0, [x21, #-56]
  408654:	cbz	w0, 408664 <__fxstatat@plt+0x5ac4>
  408658:	mov	x0, x20
  40865c:	mov	w1, #0x0                   	// #0
  408660:	bl	404b9c <__fxstatat@plt+0x1ffc>
  408664:	ldr	w0, [x19, #3948]
  408668:	cbz	w0, 408674 <__fxstatat@plt+0x5ad4>
  40866c:	ldrb	w0, [x19, #3956]
  408670:	cbz	w0, 408730 <__fxstatat@plt+0x5b90>
  408674:	ldrb	w0, [x19, #3928]
  408678:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  40867c:	cbz	w0, 40869c <__fxstatat@plt+0x5afc>
  408680:	ldr	x1, [x21, #1488]
  408684:	adrp	x0, 411000 <_obstack_memory_used@@Base+0xe44>
  408688:	add	x0, x0, #0xe3f
  40868c:	bl	402ad0 <fputs_unlocked@plt>
  408690:	ldr	x0, [x19, #3752]
  408694:	add	x0, x0, #0x2
  408698:	str	x0, [x19, #3752]
  40869c:	mov	w2, #0x5                   	// #5
  4086a0:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xe44>
  4086a4:	mov	x0, #0x0                   	// #0
  4086a8:	add	x1, x1, #0xee5
  4086ac:	bl	402ac0 <dcgettext@plt>
  4086b0:	mov	x20, x0
  4086b4:	ldr	x1, [x21, #1488]
  4086b8:	bl	402ad0 <fputs_unlocked@plt>
  4086bc:	mov	x0, x20
  4086c0:	bl	402540 <strlen@plt>
  4086c4:	ldr	x1, [x19, #3752]
  4086c8:	add	x1, x1, x0
  4086cc:	mov	w0, #0x20                  	// #32
  4086d0:	str	x1, [x19, #3752]
  4086d4:	bl	4027f0 <putchar_unlocked@plt>
  4086d8:	ldr	w2, [x19, #3968]
  4086dc:	mov	x3, #0x200                 	// #512
  4086e0:	ldr	x0, [x19, #3752]
  4086e4:	add	x1, sp, #0x70
  4086e8:	ldr	x4, [x19, #3960]
  4086ec:	add	x0, x0, #0x1
  4086f0:	str	x0, [x19, #3752]
  4086f4:	mov	x0, x26
  4086f8:	bl	40b1a4 <__fxstatat@plt+0x8604>
  4086fc:	mov	x20, x0
  408700:	ldr	x1, [x21, #1488]
  408704:	bl	402ad0 <fputs_unlocked@plt>
  408708:	mov	x0, x20
  40870c:	bl	402540 <strlen@plt>
  408710:	ldr	x1, [x19, #3752]
  408714:	add	x1, x1, x0
  408718:	mov	w0, #0xa                   	// #10
  40871c:	str	x1, [x19, #3752]
  408720:	bl	4027f0 <putchar_unlocked@plt>
  408724:	ldr	x0, [x19, #3752]
  408728:	add	x0, x0, #0x1
  40872c:	str	x0, [x19, #3752]
  408730:	ldr	x0, [x19, #8]
  408734:	cbz	x0, 4083fc <__fxstatat@plt+0x585c>
  408738:	bl	40810c <__fxstatat@plt+0x556c>
  40873c:	b	4083fc <__fxstatat@plt+0x585c>
  408740:	adrp	x21, 42c000 <__progname@@GLIBC_2.17+0xa28>
  408744:	add	x21, x21, #0x6e8
  408748:	sub	x0, x21, #0x90
  40874c:	ldp	x26, x27, [sp, #112]
  408750:	ldp	x2, x1, [x21, #-120]
  408754:	sub	x1, x1, x2
  408758:	cmp	x1, #0xf
  40875c:	b.hi	408768 <__fxstatat@plt+0x5bc8>  // b.pmore
  408760:	mov	x1, #0x10                  	// #16
  408764:	bl	410008 <_obstack_newchunk@@Base>
  408768:	ldur	x0, [x21, #-120]
  40876c:	add	x1, x0, #0x10
  408770:	stur	x1, [x21, #-120]
  408774:	stp	x27, x26, [x0]
  408778:	adrp	x21, 42c000 <__progname@@GLIBC_2.17+0xa28>
  40877c:	add	x21, x21, #0x6e8
  408780:	bl	406dbc <__fxstatat@plt+0x421c>
  408784:	ldurb	w0, [x21, #-56]
  408788:	cbnz	w0, 408794 <__fxstatat@plt+0x5bf4>
  40878c:	ldurb	w0, [x21, #-55]
  408790:	cbz	w0, 408868 <__fxstatat@plt+0x5cc8>
  408794:	adrp	x26, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  408798:	add	x26, x26, #0x388
  40879c:	ldrb	w0, [x26, #420]
  4087a0:	cbnz	w0, 4087b8 <__fxstatat@plt+0x5c18>
  4087a4:	mov	w0, #0xa                   	// #10
  4087a8:	bl	4027f0 <putchar_unlocked@plt>
  4087ac:	ldr	x0, [x19, #3752]
  4087b0:	add	x0, x0, #0x1
  4087b4:	str	x0, [x19, #3752]
  4087b8:	ldrb	w0, [x19, #3928]
  4087bc:	adrp	x27, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  4087c0:	strb	wzr, [x26, #420]
  4087c4:	cbz	w0, 4087e4 <__fxstatat@plt+0x5c44>
  4087c8:	ldr	x1, [x27, #1488]
  4087cc:	adrp	x0, 411000 <_obstack_memory_used@@Base+0xe44>
  4087d0:	add	x0, x0, #0xe3f
  4087d4:	bl	402ad0 <fputs_unlocked@plt>
  4087d8:	ldr	x0, [x19, #3752]
  4087dc:	add	x0, x0, #0x2
  4087e0:	str	x0, [x19, #3752]
  4087e4:	ldrb	w0, [x19, #4048]
  4087e8:	cbz	w0, 40850c <__fxstatat@plt+0x596c>
  4087ec:	mov	x0, x20
  4087f0:	mov	w1, #0x2                   	// #2
  4087f4:	bl	409448 <__fxstatat@plt+0x68a8>
  4087f8:	mov	x26, x0
  4087fc:	cbnz	x0, 408820 <__fxstatat@plt+0x5c80>
  408800:	mov	w2, #0x5                   	// #5
  408804:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xe44>
  408808:	add	x1, x1, #0xdf1
  40880c:	bl	402ac0 <dcgettext@plt>
  408810:	mov	x2, x20
  408814:	mov	x1, x0
  408818:	mov	w0, w24
  40881c:	bl	404ebc <__fxstatat@plt+0x231c>
  408820:	ldr	x1, [x21, #40]
  408824:	cmp	x25, #0x0
  408828:	mov	x6, x26
  40882c:	sub	x5, x21, #0x30
  408830:	mov	w4, #0x1                   	// #1
  408834:	mov	x3, #0x0                   	// #0
  408838:	mov	w2, #0xffffffff            	// #-1
  40883c:	csel	x0, x25, x20, ne  // ne = any
  408840:	bl	405be4 <__fxstatat@plt+0x3044>
  408844:	mov	x0, x26
  408848:	bl	402990 <free@plt>
  40884c:	ldr	x1, [x27, #1488]
  408850:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2e44>
  408854:	add	x0, x0, #0xf43
  408858:	bl	402ad0 <fputs_unlocked@plt>
  40885c:	ldr	x0, [x19, #3752]
  408860:	add	x0, x0, #0x2
  408864:	str	x0, [x19, #3752]
  408868:	adrp	x27, 411000 <_obstack_memory_used@@Base+0xe44>
  40886c:	adrp	x25, 414000 <_obstack_memory_used@@Base+0x3e44>
  408870:	add	x27, x27, #0xebb
  408874:	add	x25, x25, #0x4c0
  408878:	add	x0, x25, #0x233
  40887c:	mov	x26, #0x0                   	// #0
  408880:	str	x0, [sp, #96]
  408884:	str	wzr, [x23]
  408888:	mov	x0, x22
  40888c:	bl	402810 <readdir@plt>
  408890:	mov	x28, x0
  408894:	cbz	x0, 4085ec <__fxstatat@plt+0x5a4c>
  408898:	add	x25, x0, #0x13
  40889c:	ldr	w0, [x21, #48]
  4088a0:	cmp	w0, #0x2
  4088a4:	b.ne	408514 <__fxstatat@plt+0x5974>  // b.any
  4088a8:	ldr	x3, [x19, #40]
  4088ac:	cbnz	x3, 408570 <__fxstatat@plt+0x59d0>
  4088b0:	ldrb	w1, [x28, #18]
  4088b4:	sub	w1, w1, #0x1
  4088b8:	and	w1, w1, #0xff
  4088bc:	cmp	w1, #0xd
  4088c0:	b.ls	408594 <__fxstatat@plt+0x59f4>  // b.plast
  4088c4:	mov	w1, #0x0                   	// #0
  4088c8:	b	4085a0 <__fxstatat@plt+0x5a00>
  4088cc:	stp	x29, x30, [sp, #-176]!
  4088d0:	mov	x29, sp
  4088d4:	stp	x19, x20, [sp, #16]
  4088d8:	adrp	x19, 42c000 <__progname@@GLIBC_2.17+0xa28>
  4088dc:	stp	x21, x22, [sp, #32]
  4088e0:	mov	w22, w0
  4088e4:	str	x23, [sp, #48]
  4088e8:	cbz	w0, 408924 <__fxstatat@plt+0x5d84>
  4088ec:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  4088f0:	mov	w2, #0x5                   	// #5
  4088f4:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xe44>
  4088f8:	add	x1, x1, #0xef0
  4088fc:	ldr	x20, [x0, #1464]
  408900:	mov	x0, #0x0                   	// #0
  408904:	bl	402ac0 <dcgettext@plt>
  408908:	mov	x2, x0
  40890c:	ldr	x3, [x19, #1888]
  408910:	mov	x0, x20
  408914:	mov	w1, #0x1                   	// #1
  408918:	bl	402930 <__fprintf_chk@plt>
  40891c:	mov	w0, w22
  408920:	bl	402580 <exit@plt>
  408924:	mov	w2, #0x5                   	// #5
  408928:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xe44>
  40892c:	mov	x0, #0x0                   	// #0
  408930:	add	x1, x1, #0xf17
  408934:	bl	402ac0 <dcgettext@plt>
  408938:	mov	x1, x0
  40893c:	ldr	x2, [x19, #1888]
  408940:	mov	w0, #0x1                   	// #1
  408944:	adrp	x19, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  408948:	bl	4027b0 <__printf_chk@plt>
  40894c:	mov	w2, #0x5                   	// #5
  408950:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xe44>
  408954:	mov	x0, #0x0                   	// #0
  408958:	add	x1, x1, #0xf38
  40895c:	bl	402ac0 <dcgettext@plt>
  408960:	ldr	x1, [x19, #1488]
  408964:	bl	402ad0 <fputs_unlocked@plt>
  408968:	mov	w2, #0x5                   	// #5
  40896c:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xe44>
  408970:	mov	x0, #0x0                   	// #0
  408974:	add	x1, x1, #0xfc8
  408978:	bl	402ac0 <dcgettext@plt>
  40897c:	ldr	x1, [x19, #1488]
  408980:	bl	402ad0 <fputs_unlocked@plt>
  408984:	mov	w2, #0x5                   	// #5
  408988:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1e44>
  40898c:	mov	x0, #0x0                   	// #0
  408990:	add	x1, x1, #0x13
  408994:	bl	402ac0 <dcgettext@plt>
  408998:	ldr	x1, [x19, #1488]
  40899c:	bl	402ad0 <fputs_unlocked@plt>
  4089a0:	mov	w2, #0x5                   	// #5
  4089a4:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1e44>
  4089a8:	mov	x0, #0x0                   	// #0
  4089ac:	add	x1, x1, #0x122
  4089b0:	bl	402ac0 <dcgettext@plt>
  4089b4:	ldr	x1, [x19, #1488]
  4089b8:	bl	402ad0 <fputs_unlocked@plt>
  4089bc:	mov	w2, #0x5                   	// #5
  4089c0:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1e44>
  4089c4:	mov	x0, #0x0                   	// #0
  4089c8:	add	x1, x1, #0x1be
  4089cc:	bl	402ac0 <dcgettext@plt>
  4089d0:	ldr	x1, [x19, #1488]
  4089d4:	bl	402ad0 <fputs_unlocked@plt>
  4089d8:	mov	w2, #0x5                   	// #5
  4089dc:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1e44>
  4089e0:	mov	x0, #0x0                   	// #0
  4089e4:	add	x1, x1, #0x328
  4089e8:	bl	402ac0 <dcgettext@plt>
  4089ec:	ldr	x1, [x19, #1488]
  4089f0:	bl	402ad0 <fputs_unlocked@plt>
  4089f4:	mov	w2, #0x5                   	// #5
  4089f8:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1e44>
  4089fc:	mov	x0, #0x0                   	// #0
  408a00:	add	x1, x1, #0x497
  408a04:	bl	402ac0 <dcgettext@plt>
  408a08:	ldr	x1, [x19, #1488]
  408a0c:	bl	402ad0 <fputs_unlocked@plt>
  408a10:	mov	w2, #0x5                   	// #5
  408a14:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1e44>
  408a18:	mov	x0, #0x0                   	// #0
  408a1c:	add	x1, x1, #0x63a
  408a20:	bl	402ac0 <dcgettext@plt>
  408a24:	ldr	x1, [x19, #1488]
  408a28:	bl	402ad0 <fputs_unlocked@plt>
  408a2c:	mov	w2, #0x5                   	// #5
  408a30:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1e44>
  408a34:	mov	x0, #0x0                   	// #0
  408a38:	add	x1, x1, #0x677
  408a3c:	bl	402ac0 <dcgettext@plt>
  408a40:	ldr	x1, [x19, #1488]
  408a44:	bl	402ad0 <fputs_unlocked@plt>
  408a48:	mov	w2, #0x5                   	// #5
  408a4c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1e44>
  408a50:	mov	x0, #0x0                   	// #0
  408a54:	add	x1, x1, #0x76c
  408a58:	bl	402ac0 <dcgettext@plt>
  408a5c:	ldr	x1, [x19, #1488]
  408a60:	bl	402ad0 <fputs_unlocked@plt>
  408a64:	mov	w2, #0x5                   	// #5
  408a68:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1e44>
  408a6c:	mov	x0, #0x0                   	// #0
  408a70:	add	x1, x1, #0x7b5
  408a74:	bl	402ac0 <dcgettext@plt>
  408a78:	ldr	x1, [x19, #1488]
  408a7c:	bl	402ad0 <fputs_unlocked@plt>
  408a80:	mov	w2, #0x5                   	// #5
  408a84:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1e44>
  408a88:	mov	x0, #0x0                   	// #0
  408a8c:	add	x1, x1, #0x84b
  408a90:	bl	402ac0 <dcgettext@plt>
  408a94:	ldr	x1, [x19, #1488]
  408a98:	bl	402ad0 <fputs_unlocked@plt>
  408a9c:	mov	w2, #0x5                   	// #5
  408aa0:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1e44>
  408aa4:	mov	x0, #0x0                   	// #0
  408aa8:	add	x1, x1, #0x9f1
  408aac:	bl	402ac0 <dcgettext@plt>
  408ab0:	ldr	x1, [x19, #1488]
  408ab4:	bl	402ad0 <fputs_unlocked@plt>
  408ab8:	mov	w2, #0x5                   	// #5
  408abc:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1e44>
  408ac0:	mov	x0, #0x0                   	// #0
  408ac4:	add	x1, x1, #0xa82
  408ac8:	bl	402ac0 <dcgettext@plt>
  408acc:	ldr	x1, [x19, #1488]
  408ad0:	bl	402ad0 <fputs_unlocked@plt>
  408ad4:	mov	w2, #0x5                   	// #5
  408ad8:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1e44>
  408adc:	mov	x0, #0x0                   	// #0
  408ae0:	add	x1, x1, #0xbe4
  408ae4:	bl	402ac0 <dcgettext@plt>
  408ae8:	ldr	x1, [x19, #1488]
  408aec:	bl	402ad0 <fputs_unlocked@plt>
  408af0:	mov	w2, #0x5                   	// #5
  408af4:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1e44>
  408af8:	mov	x0, #0x0                   	// #0
  408afc:	add	x1, x1, #0xc78
  408b00:	bl	402ac0 <dcgettext@plt>
  408b04:	ldr	x1, [x19, #1488]
  408b08:	bl	402ad0 <fputs_unlocked@plt>
  408b0c:	mov	w2, #0x5                   	// #5
  408b10:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1e44>
  408b14:	mov	x0, #0x0                   	// #0
  408b18:	add	x1, x1, #0xddf
  408b1c:	bl	402ac0 <dcgettext@plt>
  408b20:	ldr	x1, [x19, #1488]
  408b24:	bl	402ad0 <fputs_unlocked@plt>
  408b28:	mov	w2, #0x5                   	// #5
  408b2c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1e44>
  408b30:	mov	x0, #0x0                   	// #0
  408b34:	add	x1, x1, #0xf0e
  408b38:	bl	402ac0 <dcgettext@plt>
  408b3c:	ldr	x1, [x19, #1488]
  408b40:	bl	402ad0 <fputs_unlocked@plt>
  408b44:	mov	w2, #0x5                   	// #5
  408b48:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2e44>
  408b4c:	mov	x0, #0x0                   	// #0
  408b50:	add	x1, x1, #0x157
  408b54:	bl	402ac0 <dcgettext@plt>
  408b58:	ldr	x1, [x19, #1488]
  408b5c:	bl	402ad0 <fputs_unlocked@plt>
  408b60:	mov	w2, #0x5                   	// #5
  408b64:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2e44>
  408b68:	mov	x0, #0x0                   	// #0
  408b6c:	add	x1, x1, #0x21c
  408b70:	bl	402ac0 <dcgettext@plt>
  408b74:	ldr	x1, [x19, #1488]
  408b78:	bl	402ad0 <fputs_unlocked@plt>
  408b7c:	mov	w2, #0x5                   	// #5
  408b80:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2e44>
  408b84:	mov	x0, #0x0                   	// #0
  408b88:	add	x1, x1, #0x423
  408b8c:	bl	402ac0 <dcgettext@plt>
  408b90:	ldr	x1, [x19, #1488]
  408b94:	bl	402ad0 <fputs_unlocked@plt>
  408b98:	mov	w2, #0x5                   	// #5
  408b9c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2e44>
  408ba0:	mov	x0, #0x0                   	// #0
  408ba4:	add	x1, x1, #0x472
  408ba8:	bl	402ac0 <dcgettext@plt>
  408bac:	ldr	x1, [x19, #1488]
  408bb0:	bl	402ad0 <fputs_unlocked@plt>
  408bb4:	mov	w2, #0x5                   	// #5
  408bb8:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2e44>
  408bbc:	mov	x0, #0x0                   	// #0
  408bc0:	add	x1, x1, #0x500
  408bc4:	bl	402ac0 <dcgettext@plt>
  408bc8:	ldr	x1, [x19, #1488]
  408bcc:	bl	402ad0 <fputs_unlocked@plt>
  408bd0:	mov	w2, #0x5                   	// #5
  408bd4:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2e44>
  408bd8:	mov	x0, #0x0                   	// #0
  408bdc:	add	x1, x1, #0x674
  408be0:	bl	402ac0 <dcgettext@plt>
  408be4:	ldr	x1, [x19, #1488]
  408be8:	bl	402ad0 <fputs_unlocked@plt>
  408bec:	mov	w2, #0x5                   	// #5
  408bf0:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2e44>
  408bf4:	mov	x0, #0x0                   	// #0
  408bf8:	add	x1, x1, #0x7df
  408bfc:	bl	402ac0 <dcgettext@plt>
  408c00:	ldr	x1, [x19, #1488]
  408c04:	bl	402ad0 <fputs_unlocked@plt>
  408c08:	mov	w2, #0x5                   	// #5
  408c0c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2e44>
  408c10:	mov	x0, #0x0                   	// #0
  408c14:	add	x1, x1, #0x80c
  408c18:	bl	402ac0 <dcgettext@plt>
  408c1c:	ldr	x1, [x19, #1488]
  408c20:	bl	402ad0 <fputs_unlocked@plt>
  408c24:	mov	w2, #0x5                   	// #5
  408c28:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2e44>
  408c2c:	mov	x0, #0x0                   	// #0
  408c30:	add	x1, x1, #0x842
  408c34:	bl	402ac0 <dcgettext@plt>
  408c38:	ldr	x1, [x19, #1488]
  408c3c:	bl	402ad0 <fputs_unlocked@plt>
  408c40:	mov	w2, #0x5                   	// #5
  408c44:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2e44>
  408c48:	mov	x0, #0x0                   	// #0
  408c4c:	add	x1, x1, #0x916
  408c50:	bl	402ac0 <dcgettext@plt>
  408c54:	ldr	x1, [x19, #1488]
  408c58:	bl	402ad0 <fputs_unlocked@plt>
  408c5c:	mov	w2, #0x5                   	// #5
  408c60:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2e44>
  408c64:	mov	x0, #0x0                   	// #0
  408c68:	add	x1, x1, #0xa8e
  408c6c:	bl	402ac0 <dcgettext@plt>
  408c70:	ldr	x1, [x19, #1488]
  408c74:	bl	402ad0 <fputs_unlocked@plt>
  408c78:	mov	w2, #0x5                   	// #5
  408c7c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2e44>
  408c80:	mov	x0, #0x0                   	// #0
  408c84:	add	x1, x1, #0xbac
  408c88:	bl	402ac0 <dcgettext@plt>
  408c8c:	ldr	x1, [x19, #1488]
  408c90:	bl	402ad0 <fputs_unlocked@plt>
  408c94:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  408c98:	ldr	w1, [x0, #1328]
  408c9c:	cmp	w1, #0x1
  408ca0:	b.eq	408d98 <__fxstatat@plt+0x61f8>  // b.none
  408ca4:	cmp	w1, #0x2
  408ca8:	adrp	x0, 411000 <_obstack_memory_used@@Base+0xe44>
  408cac:	adrp	x20, 414000 <_obstack_memory_used@@Base+0x3e44>
  408cb0:	add	x0, x0, #0xeeb
  408cb4:	add	x20, x20, #0x240
  408cb8:	csel	x20, x20, x0, eq  // eq = none
  408cbc:	add	x21, sp, #0x40
  408cc0:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x3e44>
  408cc4:	add	x1, x1, #0x4c0
  408cc8:	add	x0, sp, #0x40
  408ccc:	add	x1, x1, #0x248
  408cd0:	mov	x2, #0x70                  	// #112
  408cd4:	bl	4024d0 <memcpy@plt>
  408cd8:	ldr	x1, [x21]
  408cdc:	cbnz	x1, 408da4 <__fxstatat@plt+0x6204>
  408ce0:	ldr	x21, [x21, #8]
  408ce4:	mov	w2, #0x5                   	// #5
  408ce8:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2e44>
  408cec:	mov	x0, #0x0                   	// #0
  408cf0:	cmp	x21, #0x0
  408cf4:	add	x1, x1, #0xc44
  408cf8:	csel	x21, x21, x20, ne  // ne = any
  408cfc:	adrp	x23, 413000 <_obstack_memory_used@@Base+0x2e44>
  408d00:	add	x23, x23, #0xc5b
  408d04:	bl	402ac0 <dcgettext@plt>
  408d08:	mov	x1, x0
  408d0c:	mov	x3, x23
  408d10:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x2e44>
  408d14:	add	x2, x2, #0xc83
  408d18:	mov	w0, #0x1                   	// #1
  408d1c:	bl	4027b0 <__printf_chk@plt>
  408d20:	mov	x1, #0x0                   	// #0
  408d24:	mov	w0, #0x5                   	// #5
  408d28:	bl	402b90 <setlocale@plt>
  408d2c:	cbnz	x0, 408db8 <__fxstatat@plt+0x6218>
  408d30:	mov	w2, #0x5                   	// #5
  408d34:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2e44>
  408d38:	mov	x0, #0x0                   	// #0
  408d3c:	add	x1, x1, #0xcdc
  408d40:	bl	402ac0 <dcgettext@plt>
  408d44:	mov	x1, x0
  408d48:	mov	x3, x20
  408d4c:	mov	x2, x23
  408d50:	mov	w0, #0x1                   	// #1
  408d54:	bl	4027b0 <__printf_chk@plt>
  408d58:	mov	w2, #0x5                   	// #5
  408d5c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2e44>
  408d60:	mov	x0, #0x0                   	// #0
  408d64:	add	x1, x1, #0xcf7
  408d68:	bl	402ac0 <dcgettext@plt>
  408d6c:	mov	x1, x0
  408d70:	cmp	x20, x21
  408d74:	adrp	x2, 411000 <_obstack_memory_used@@Base+0xe44>
  408d78:	adrp	x3, 411000 <_obstack_memory_used@@Base+0xe44>
  408d7c:	add	x2, x2, #0xdf0
  408d80:	add	x3, x3, #0xd52
  408d84:	mov	w0, #0x1                   	// #1
  408d88:	csel	x3, x3, x2, eq  // eq = none
  408d8c:	mov	x2, x21
  408d90:	bl	4027b0 <__printf_chk@plt>
  408d94:	b	40891c <__fxstatat@plt+0x5d7c>
  408d98:	adrp	x20, 413000 <_obstack_memory_used@@Base+0x2e44>
  408d9c:	add	x20, x20, #0xc8e
  408da0:	b	408cbc <__fxstatat@plt+0x611c>
  408da4:	mov	x0, x20
  408da8:	bl	402950 <strcmp@plt>
  408dac:	cbz	w0, 408ce0 <__fxstatat@plt+0x6140>
  408db0:	add	x21, x21, #0x10
  408db4:	b	408cd8 <__fxstatat@plt+0x6138>
  408db8:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2e44>
  408dbc:	mov	x2, #0x3                   	// #3
  408dc0:	add	x1, x1, #0xc91
  408dc4:	bl	402780 <strncmp@plt>
  408dc8:	cbz	w0, 408d30 <__fxstatat@plt+0x6190>
  408dcc:	mov	w2, #0x5                   	// #5
  408dd0:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2e44>
  408dd4:	mov	x0, #0x0                   	// #0
  408dd8:	add	x1, x1, #0xc95
  408ddc:	bl	402ac0 <dcgettext@plt>
  408de0:	ldr	x1, [x19, #1488]
  408de4:	bl	402ad0 <fputs_unlocked@plt>
  408de8:	b	408d30 <__fxstatat@plt+0x6190>
  408dec:	stp	x29, x30, [sp, #-64]!
  408df0:	cmp	x1, #0x401
  408df4:	mov	x29, sp
  408df8:	stp	x19, x20, [sp, #16]
  408dfc:	mov	x19, #0x401                 	// #1025
  408e00:	csinc	x19, x19, x1, cs  // cs = hs, nlast
  408e04:	stp	x21, x22, [sp, #32]
  408e08:	mov	x22, x0
  408e0c:	stp	x23, x24, [sp, #48]
  408e10:	mov	x24, #0x3fffffffffffffff    	// #4611686018427387903
  408e14:	mov	x23, #0x7ffffffffffffffe    	// #9223372036854775806
  408e18:	mov	x0, x19
  408e1c:	bl	402730 <malloc@plt>
  408e20:	mov	x20, x0
  408e24:	cbz	x0, 408e74 <__fxstatat@plt+0x62d4>
  408e28:	mov	x1, x0
  408e2c:	mov	x2, x19
  408e30:	mov	x0, x22
  408e34:	bl	4025f0 <readlink@plt>
  408e38:	mov	x21, x0
  408e3c:	tbz	x0, #63, 408e68 <__fxstatat@plt+0x62c8>
  408e40:	bl	402b30 <__errno_location@plt>
  408e44:	ldr	w0, [x0]
  408e48:	cmp	w0, #0x22
  408e4c:	b.eq	408e68 <__fxstatat@plt+0x62c8>  // b.none
  408e50:	mov	x0, x20
  408e54:	bl	402990 <free@plt>
  408e58:	mov	x20, #0x0                   	// #0
  408e5c:	b	408e74 <__fxstatat@plt+0x62d4>
  408e60:	mov	x19, #0x7fffffffffffffff    	// #9223372036854775807
  408e64:	b	408e18 <__fxstatat@plt+0x6278>
  408e68:	cmp	x19, x21
  408e6c:	b.ls	408e8c <__fxstatat@plt+0x62ec>  // b.plast
  408e70:	strb	wzr, [x20, x21]
  408e74:	mov	x0, x20
  408e78:	ldp	x19, x20, [sp, #16]
  408e7c:	ldp	x21, x22, [sp, #32]
  408e80:	ldp	x23, x24, [sp, #48]
  408e84:	ldp	x29, x30, [sp], #64
  408e88:	ret
  408e8c:	mov	x0, x20
  408e90:	bl	402990 <free@plt>
  408e94:	cmp	x19, x24
  408e98:	b.hi	408ea4 <__fxstatat@plt+0x6304>  // b.pmore
  408e9c:	lsl	x19, x19, #1
  408ea0:	b	408e18 <__fxstatat@plt+0x6278>
  408ea4:	cmp	x19, x23
  408ea8:	b.ls	408e60 <__fxstatat@plt+0x62c0>  // b.plast
  408eac:	bl	402b30 <__errno_location@plt>
  408eb0:	mov	w1, #0xc                   	// #12
  408eb4:	str	w1, [x0]
  408eb8:	b	408e58 <__fxstatat@plt+0x62b8>
  408ebc:	mov	w0, #0x1                   	// #1
  408ec0:	b	4088cc <__fxstatat@plt+0x5d2c>
  408ec4:	stp	x29, x30, [sp, #-112]!
  408ec8:	mov	x29, sp
  408ecc:	stp	x21, x22, [sp, #32]
  408ed0:	mov	x21, x2
  408ed4:	mov	x22, x3
  408ed8:	stp	x19, x20, [sp, #16]
  408edc:	mov	x19, #0xffffffffffffffff    	// #-1
  408ee0:	mov	x20, #0x0                   	// #0
  408ee4:	stp	x23, x24, [sp, #48]
  408ee8:	mov	w23, #0x0                   	// #0
  408eec:	stp	x25, x26, [sp, #64]
  408ef0:	mov	x25, x1
  408ef4:	mov	x26, x21
  408ef8:	stp	x27, x28, [sp, #80]
  408efc:	mov	x27, x0
  408f00:	bl	402540 <strlen@plt>
  408f04:	mov	x24, x0
  408f08:	mov	w28, #0x1                   	// #1
  408f0c:	ldr	x3, [x25, x20, lsl #3]
  408f10:	cbnz	x3, 408f24 <__fxstatat@plt+0x6384>
  408f14:	cmp	w23, #0x0
  408f18:	mov	x0, #0xfffffffffffffffe    	// #-2
  408f1c:	csel	x19, x19, x0, eq  // eq = none
  408f20:	b	408f54 <__fxstatat@plt+0x63b4>
  408f24:	mov	x2, x24
  408f28:	mov	x1, x27
  408f2c:	mov	x0, x3
  408f30:	str	x3, [sp, #104]
  408f34:	bl	402780 <strncmp@plt>
  408f38:	cbnz	w0, 408f80 <__fxstatat@plt+0x63e0>
  408f3c:	ldr	x3, [sp, #104]
  408f40:	mov	x0, x3
  408f44:	bl	402540 <strlen@plt>
  408f48:	cmp	x0, x24
  408f4c:	b.ne	408f74 <__fxstatat@plt+0x63d4>  // b.any
  408f50:	mov	x19, x20
  408f54:	mov	x0, x19
  408f58:	ldp	x19, x20, [sp, #16]
  408f5c:	ldp	x21, x22, [sp, #32]
  408f60:	ldp	x23, x24, [sp, #48]
  408f64:	ldp	x25, x26, [sp, #64]
  408f68:	ldp	x27, x28, [sp, #80]
  408f6c:	ldp	x29, x30, [sp], #112
  408f70:	ret
  408f74:	cmn	x19, #0x1
  408f78:	b.ne	408f8c <__fxstatat@plt+0x63ec>  // b.any
  408f7c:	mov	x19, x20
  408f80:	add	x20, x20, #0x1
  408f84:	add	x26, x26, x22
  408f88:	b	408f0c <__fxstatat@plt+0x636c>
  408f8c:	cbz	x21, 408fac <__fxstatat@plt+0x640c>
  408f90:	madd	x0, x19, x22, x21
  408f94:	mov	x2, x22
  408f98:	mov	x1, x26
  408f9c:	bl	4028f0 <memcmp@plt>
  408fa0:	cmp	w0, #0x0
  408fa4:	csel	w23, w23, w28, eq  // eq = none
  408fa8:	b	408f80 <__fxstatat@plt+0x63e0>
  408fac:	mov	w23, #0x1                   	// #1
  408fb0:	b	408f80 <__fxstatat@plt+0x63e0>
  408fb4:	stp	x29, x30, [sp, #-48]!
  408fb8:	cmn	x2, #0x1
  408fbc:	mov	w2, #0x5                   	// #5
  408fc0:	mov	x29, sp
  408fc4:	stp	x19, x20, [sp, #16]
  408fc8:	mov	x20, x1
  408fcc:	str	x21, [sp, #32]
  408fd0:	mov	x21, x0
  408fd4:	b.ne	409030 <__fxstatat@plt+0x6490>  // b.any
  408fd8:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x5e44>
  408fdc:	add	x1, x1, #0x7a
  408fe0:	mov	x0, #0x0                   	// #0
  408fe4:	bl	402ac0 <dcgettext@plt>
  408fe8:	mov	x2, x20
  408fec:	mov	x19, x0
  408ff0:	mov	w1, #0x8                   	// #8
  408ff4:	mov	w0, #0x0                   	// #0
  408ff8:	bl	40e96c <__fxstatat@plt+0xbdcc>
  408ffc:	mov	x20, x0
  409000:	mov	x1, x21
  409004:	mov	w0, #0x1                   	// #1
  409008:	bl	40ebcc <__fxstatat@plt+0xc02c>
  40900c:	mov	x4, x0
  409010:	mov	x3, x20
  409014:	mov	x2, x19
  409018:	ldp	x19, x20, [sp, #16]
  40901c:	mov	w1, #0x0                   	// #0
  409020:	ldr	x21, [sp, #32]
  409024:	mov	w0, #0x0                   	// #0
  409028:	ldp	x29, x30, [sp], #48
  40902c:	b	4025b0 <error@plt>
  409030:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x5e44>
  409034:	add	x1, x1, #0x95
  409038:	b	408fe0 <__fxstatat@plt+0x6440>
  40903c:	stp	x29, x30, [sp, #-112]!
  409040:	mov	x29, sp
  409044:	stp	x19, x20, [sp, #16]
  409048:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  40904c:	mov	x19, x1
  409050:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x5e44>
  409054:	add	x1, x1, #0xb2
  409058:	stp	x21, x22, [sp, #32]
  40905c:	mov	x22, x2
  409060:	mov	w2, #0x5                   	// #5
  409064:	stp	x23, x24, [sp, #48]
  409068:	mov	x21, #0x0                   	// #0
  40906c:	stp	x25, x26, [sp, #64]
  409070:	adrp	x26, 416000 <_obstack_memory_used@@Base+0x5e44>
  409074:	mov	x25, #0x0                   	// #0
  409078:	stp	x27, x28, [sp, #80]
  40907c:	add	x26, x26, #0xc7
  409080:	adrp	x27, 416000 <_obstack_memory_used@@Base+0x5e44>
  409084:	str	x0, [sp, #104]
  409088:	mov	x0, #0x0                   	// #0
  40908c:	bl	402ac0 <dcgettext@plt>
  409090:	add	x27, x27, #0xcf
  409094:	ldr	x1, [x20, #1464]
  409098:	bl	402ad0 <fputs_unlocked@plt>
  40909c:	ldr	x0, [sp, #104]
  4090a0:	ldr	x23, [x20, #1464]
  4090a4:	ldr	x24, [x0, x21, lsl #3]
  4090a8:	cbnz	x24, 4090d0 <__fxstatat@plt+0x6530>
  4090ac:	mov	x1, x23
  4090b0:	mov	w0, #0xa                   	// #10
  4090b4:	ldp	x19, x20, [sp, #16]
  4090b8:	ldp	x21, x22, [sp, #32]
  4090bc:	ldp	x23, x24, [sp, #48]
  4090c0:	ldp	x25, x26, [sp, #64]
  4090c4:	ldp	x27, x28, [sp, #80]
  4090c8:	ldp	x29, x30, [sp], #112
  4090cc:	b	4026d0 <putc_unlocked@plt>
  4090d0:	mov	x28, x19
  4090d4:	cbz	x21, 4090ec <__fxstatat@plt+0x654c>
  4090d8:	mov	x2, x22
  4090dc:	mov	x1, x19
  4090e0:	mov	x0, x25
  4090e4:	bl	4028f0 <memcmp@plt>
  4090e8:	cbz	w0, 409118 <__fxstatat@plt+0x6578>
  4090ec:	mov	x0, x24
  4090f0:	bl	40ebd4 <__fxstatat@plt+0xc034>
  4090f4:	mov	x2, x26
  4090f8:	mov	x3, x0
  4090fc:	mov	w1, #0x1                   	// #1
  409100:	mov	x0, x23
  409104:	bl	402930 <__fprintf_chk@plt>
  409108:	add	x21, x21, #0x1
  40910c:	add	x19, x19, x22
  409110:	mov	x25, x28
  409114:	b	40909c <__fxstatat@plt+0x64fc>
  409118:	mov	x0, x24
  40911c:	bl	40ebd4 <__fxstatat@plt+0xc034>
  409120:	mov	x2, x27
  409124:	mov	x3, x0
  409128:	mov	w1, #0x1                   	// #1
  40912c:	mov	x0, x23
  409130:	mov	x28, x25
  409134:	bl	402930 <__fprintf_chk@plt>
  409138:	b	409108 <__fxstatat@plt+0x6568>
  40913c:	stp	x29, x30, [sp, #-64]!
  409140:	mov	x29, sp
  409144:	stp	x19, x20, [sp, #16]
  409148:	mov	x19, x2
  40914c:	mov	x20, x3
  409150:	stp	x21, x22, [sp, #32]
  409154:	mov	x22, x1
  409158:	mov	x21, x4
  40915c:	mov	x3, x4
  409160:	mov	x2, x20
  409164:	mov	x1, x19
  409168:	stp	x23, x24, [sp, #48]
  40916c:	mov	x24, x0
  409170:	mov	x23, x5
  409174:	mov	x0, x22
  409178:	bl	408ec4 <__fxstatat@plt+0x6324>
  40917c:	tbz	x0, #63, 4091a8 <__fxstatat@plt+0x6608>
  409180:	mov	x2, x0
  409184:	mov	x1, x22
  409188:	mov	x0, x24
  40918c:	bl	408fb4 <__fxstatat@plt+0x6414>
  409190:	mov	x0, x19
  409194:	mov	x2, x21
  409198:	mov	x1, x20
  40919c:	bl	40903c <__fxstatat@plt+0x649c>
  4091a0:	blr	x23
  4091a4:	mov	x0, #0xffffffffffffffff    	// #-1
  4091a8:	ldp	x19, x20, [sp, #16]
  4091ac:	ldp	x21, x22, [sp, #32]
  4091b0:	ldp	x23, x24, [sp, #48]
  4091b4:	ldp	x29, x30, [sp], #64
  4091b8:	ret
  4091bc:	stp	x29, x30, [sp, #-64]!
  4091c0:	mov	x29, sp
  4091c4:	stp	x19, x20, [sp, #16]
  4091c8:	mov	x19, x1
  4091cc:	mov	x20, x2
  4091d0:	stp	x21, x22, [sp, #32]
  4091d4:	mov	x22, x0
  4091d8:	mov	x21, x3
  4091dc:	str	x23, [sp, #48]
  4091e0:	ldr	x23, [x19]
  4091e4:	cbz	x23, 409204 <__fxstatat@plt+0x6664>
  4091e8:	mov	x1, x20
  4091ec:	mov	x2, x21
  4091f0:	mov	x0, x22
  4091f4:	add	x19, x19, #0x8
  4091f8:	add	x20, x20, x21
  4091fc:	bl	4028f0 <memcmp@plt>
  409200:	cbnz	w0, 4091e0 <__fxstatat@plt+0x6640>
  409204:	mov	x0, x23
  409208:	ldp	x19, x20, [sp, #16]
  40920c:	ldp	x21, x22, [sp, #32]
  409210:	ldr	x23, [sp, #48]
  409214:	ldp	x29, x30, [sp], #64
  409218:	ret
  40921c:	cmp	w0, #0x5a
  409220:	b.gt	40923c <__fxstatat@plt+0x669c>
  409224:	cmp	w0, #0x40
  409228:	b.gt	409248 <__fxstatat@plt+0x66a8>
  40922c:	sub	w0, w0, #0x30
  409230:	cmp	w0, #0x9
  409234:	cset	w0, ls  // ls = plast
  409238:	ret
  40923c:	sub	w0, w0, #0x61
  409240:	cmp	w0, #0x19
  409244:	b	409234 <__fxstatat@plt+0x6694>
  409248:	mov	w0, #0x1                   	// #1
  40924c:	b	409238 <__fxstatat@plt+0x6698>
  409250:	cmp	w0, #0x5a
  409254:	b.gt	409264 <__fxstatat@plt+0x66c4>
  409258:	cmp	w0, #0x40
  40925c:	cset	w0, gt
  409260:	ret
  409264:	sub	w0, w0, #0x61
  409268:	cmp	w0, #0x19
  40926c:	cset	w0, ls  // ls = plast
  409270:	b	409260 <__fxstatat@plt+0x66c0>
  409274:	cmp	w0, #0x7f
  409278:	cset	w0, ls  // ls = plast
  40927c:	ret
  409280:	cmp	w0, #0x20
  409284:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  409288:	cset	w0, eq  // eq = none
  40928c:	ret
  409290:	cmp	w0, #0x1f
  409294:	b.gt	4092a4 <__fxstatat@plt+0x6704>
  409298:	mvn	w0, w0
  40929c:	lsr	w0, w0, #31
  4092a0:	ret
  4092a4:	cmp	w0, #0x7f
  4092a8:	cset	w0, eq  // eq = none
  4092ac:	b	4092a0 <__fxstatat@plt+0x6700>
  4092b0:	sub	w0, w0, #0x30
  4092b4:	cmp	w0, #0x9
  4092b8:	cset	w0, ls  // ls = plast
  4092bc:	ret
  4092c0:	sub	w0, w0, #0x21
  4092c4:	cmp	w0, #0x5d
  4092c8:	cset	w0, ls  // ls = plast
  4092cc:	ret
  4092d0:	sub	w0, w0, #0x61
  4092d4:	cmp	w0, #0x19
  4092d8:	cset	w0, ls  // ls = plast
  4092dc:	ret
  4092e0:	sub	w0, w0, #0x20
  4092e4:	cmp	w0, #0x5e
  4092e8:	cset	w0, ls  // ls = plast
  4092ec:	ret
  4092f0:	cmp	w0, #0x60
  4092f4:	b.gt	409324 <__fxstatat@plt+0x6784>
  4092f8:	cmp	w0, #0x5a
  4092fc:	b.gt	409330 <__fxstatat@plt+0x6790>
  409300:	cmp	w0, #0x2f
  409304:	b.gt	409314 <__fxstatat@plt+0x6774>
  409308:	cmp	w0, #0x20
  40930c:	cset	w0, gt
  409310:	ret
  409314:	sub	w0, w0, #0x3a
  409318:	cmp	w0, #0x6
  40931c:	cset	w0, ls  // ls = plast
  409320:	b	409310 <__fxstatat@plt+0x6770>
  409324:	sub	w0, w0, #0x7b
  409328:	cmp	w0, #0x3
  40932c:	b	40931c <__fxstatat@plt+0x677c>
  409330:	mov	w0, #0x1                   	// #1
  409334:	b	409310 <__fxstatat@plt+0x6770>
  409338:	cmp	w0, #0xd
  40933c:	b.gt	40934c <__fxstatat@plt+0x67ac>
  409340:	cmp	w0, #0x8
  409344:	cset	w0, gt
  409348:	ret
  40934c:	cmp	w0, #0x20
  409350:	cset	w0, eq  // eq = none
  409354:	b	409348 <__fxstatat@plt+0x67a8>
  409358:	sub	w0, w0, #0x41
  40935c:	cmp	w0, #0x19
  409360:	cset	w0, ls  // ls = plast
  409364:	ret
  409368:	sub	w0, w0, #0x30
  40936c:	cmp	w0, #0x36
  409370:	b.hi	409390 <__fxstatat@plt+0x67f0>  // b.pmore
  409374:	mov	x1, #0x1                   	// #1
  409378:	lsl	x0, x1, x0
  40937c:	mov	x1, #0x7e0000007e0000      	// #35465847073800192
  409380:	movk	x1, #0x3ff
  409384:	tst	x0, x1
  409388:	cset	w0, ne  // ne = any
  40938c:	ret
  409390:	mov	w0, #0x0                   	// #0
  409394:	b	40938c <__fxstatat@plt+0x67ec>
  409398:	sub	w1, w0, #0x41
  40939c:	cmp	w1, #0x19
  4093a0:	b.hi	4093a8 <__fxstatat@plt+0x6808>  // b.pmore
  4093a4:	add	w0, w0, #0x20
  4093a8:	ret
  4093ac:	sub	w1, w0, #0x61
  4093b0:	cmp	w1, #0x19
  4093b4:	b.hi	4093bc <__fxstatat@plt+0x681c>  // b.pmore
  4093b8:	sub	w0, w0, #0x20
  4093bc:	ret
  4093c0:	cmp	x2, #0x0
  4093c4:	ccmp	x0, x1, #0x4, ne  // ne = any
  4093c8:	b.eq	409440 <__fxstatat@plt+0x68a0>  // b.none
  4093cc:	stp	x29, x30, [sp, #-64]!
  4093d0:	mov	x29, sp
  4093d4:	stp	x19, x20, [sp, #16]
  4093d8:	sub	x20, x2, #0x1
  4093dc:	stp	x21, x22, [sp, #32]
  4093e0:	mov	x22, x0
  4093e4:	mov	x21, #0x0                   	// #0
  4093e8:	stp	x23, x24, [sp, #48]
  4093ec:	mov	x23, x1
  4093f0:	ldrb	w0, [x22, x21]
  4093f4:	bl	409398 <__fxstatat@plt+0x67f8>
  4093f8:	mov	w19, w0
  4093fc:	and	w24, w0, #0xff
  409400:	ldrb	w0, [x23, x21]
  409404:	bl	409398 <__fxstatat@plt+0x67f8>
  409408:	and	w1, w0, #0xff
  40940c:	cmp	x21, x20
  409410:	b.eq	409424 <__fxstatat@plt+0x6884>  // b.none
  409414:	cbz	w24, 409424 <__fxstatat@plt+0x6884>
  409418:	add	x21, x21, #0x1
  40941c:	cmp	w24, w1
  409420:	b.eq	4093f0 <__fxstatat@plt+0x6850>  // b.none
  409424:	and	w19, w19, #0xff
  409428:	sub	w0, w19, w0, uxtb
  40942c:	ldp	x19, x20, [sp, #16]
  409430:	ldp	x21, x22, [sp, #32]
  409434:	ldp	x23, x24, [sp, #48]
  409438:	ldp	x29, x30, [sp], #64
  40943c:	ret
  409440:	mov	w0, #0x0                   	// #0
  409444:	ret
  409448:	stp	x29, x30, [sp, #-272]!
  40944c:	mov	x29, sp
  409450:	stp	x19, x20, [sp, #16]
  409454:	stp	x21, x22, [sp, #32]
  409458:	stp	x23, x24, [sp, #48]
  40945c:	and	w24, w1, #0x3
  409460:	stp	x25, x26, [sp, #64]
  409464:	mov	x26, x0
  409468:	sub	w0, w24, #0x1
  40946c:	stp	x27, x28, [sp, #80]
  409470:	tst	w0, w24
  409474:	b.eq	40948c <__fxstatat@plt+0x68ec>  // b.none
  409478:	bl	402b30 <__errno_location@plt>
  40947c:	mov	w1, #0x16                  	// #22
  409480:	str	w1, [x0]
  409484:	mov	x25, #0x0                   	// #0
  409488:	b	409564 <__fxstatat@plt+0x69c4>
  40948c:	cbz	x26, 409478 <__fxstatat@plt+0x68d8>
  409490:	ldrb	w19, [x26]
  409494:	cbnz	w19, 4094a4 <__fxstatat@plt+0x6904>
  409498:	bl	402b30 <__errno_location@plt>
  40949c:	mov	w1, #0x2                   	// #2
  4094a0:	b	409480 <__fxstatat@plt+0x68e0>
  4094a4:	mov	w20, w1
  4094a8:	cmp	w19, #0x2f
  4094ac:	b.eq	4095a4 <__fxstatat@plt+0x6a04>  // b.none
  4094b0:	bl	40f588 <__fxstatat@plt+0xc9e8>
  4094b4:	mov	x25, x0
  4094b8:	cbz	x0, 409564 <__fxstatat@plt+0x69c4>
  4094bc:	bl	402540 <strlen@plt>
  4094c0:	mov	x22, x0
  4094c4:	cmp	x0, #0xfff
  4094c8:	b.ls	409584 <__fxstatat@plt+0x69e4>  // b.plast
  4094cc:	add	x22, x25, x0
  4094d0:	str	x22, [sp, #104]
  4094d4:	and	w0, w20, #0x4
  4094d8:	mov	x27, x26
  4094dc:	str	w0, [sp, #116]
  4094e0:	adrp	x0, 40b000 <__fxstatat@plt+0x8460>
  4094e4:	add	x0, x0, #0xf8
  4094e8:	mov	x20, #0x0                   	// #0
  4094ec:	mov	x23, #0x0                   	// #0
  4094f0:	mov	x21, #0x0                   	// #0
  4094f4:	str	x0, [sp, #120]
  4094f8:	adrp	x0, 40b000 <__fxstatat@plt+0x8460>
  4094fc:	add	x0, x0, #0xac
  409500:	str	x0, [sp, #128]
  409504:	ldrb	w0, [x26]
  409508:	cbnz	w0, 4095c8 <__fxstatat@plt+0x6a28>
  40950c:	add	x0, x25, #0x1
  409510:	cmp	x22, x0
  409514:	b.ls	409528 <__fxstatat@plt+0x6988>  // b.plast
  409518:	ldurb	w0, [x22, #-1]
  40951c:	cmp	w0, #0x2f
  409520:	cset	x0, eq  // eq = none
  409524:	sub	x22, x22, x0
  409528:	mov	x0, x22
  40952c:	ldr	x1, [sp, #104]
  409530:	strb	wzr, [x0], #1
  409534:	cmp	x1, x0
  409538:	b.eq	409550 <__fxstatat@plt+0x69b0>  // b.none
  40953c:	sub	x1, x22, x25
  409540:	mov	x0, x25
  409544:	add	x1, x1, #0x1
  409548:	bl	40f2ac <__fxstatat@plt+0xc70c>
  40954c:	mov	x25, x0
  409550:	mov	x0, x21
  409554:	bl	402990 <free@plt>
  409558:	cbz	x20, 409564 <__fxstatat@plt+0x69c4>
  40955c:	mov	x0, x20
  409560:	bl	40ab88 <__fxstatat@plt+0x7fe8>
  409564:	mov	x0, x25
  409568:	ldp	x19, x20, [sp, #16]
  40956c:	ldp	x21, x22, [sp, #32]
  409570:	ldp	x23, x24, [sp, #48]
  409574:	ldp	x25, x26, [sp, #64]
  409578:	ldp	x27, x28, [sp, #80]
  40957c:	ldp	x29, x30, [sp], #272
  409580:	ret
  409584:	mov	x0, x25
  409588:	mov	x1, #0x1000                	// #4096
  40958c:	bl	40f2ac <__fxstatat@plt+0xc70c>
  409590:	mov	x25, x0
  409594:	add	x22, x0, x22
  409598:	add	x0, x0, #0x1, lsl #12
  40959c:	str	x0, [sp, #104]
  4095a0:	b	4094d4 <__fxstatat@plt+0x6934>
  4095a4:	mov	x0, #0x1000                	// #4096
  4095a8:	bl	40f24c <__fxstatat@plt+0xc6ac>
  4095ac:	mov	x25, x0
  4095b0:	add	x0, x0, #0x1, lsl #12
  4095b4:	mov	x22, x25
  4095b8:	str	x0, [sp, #104]
  4095bc:	strb	w19, [x22], #1
  4095c0:	b	4094d4 <__fxstatat@plt+0x6934>
  4095c4:	add	x26, x26, #0x1
  4095c8:	ldrb	w0, [x26]
  4095cc:	cmp	w0, #0x2f
  4095d0:	b.eq	4095c4 <__fxstatat@plt+0x6a24>  // b.none
  4095d4:	mov	x19, x26
  4095d8:	ldrb	w1, [x19]
  4095dc:	cmp	w1, #0x2f
  4095e0:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  4095e4:	b.ne	40960c <__fxstatat@plt+0x6a6c>  // b.any
  4095e8:	cmp	x26, x19
  4095ec:	b.eq	40950c <__fxstatat@plt+0x696c>  // b.none
  4095f0:	sub	x28, x19, x26
  4095f4:	cmp	x28, #0x1
  4095f8:	b.ne	409614 <__fxstatat@plt+0x6a74>  // b.any
  4095fc:	cmp	w0, #0x2e
  409600:	b.ne	409658 <__fxstatat@plt+0x6ab8>  // b.any
  409604:	mov	x26, x19
  409608:	b	409504 <__fxstatat@plt+0x6964>
  40960c:	add	x19, x19, #0x1
  409610:	b	4095d8 <__fxstatat@plt+0x6a38>
  409614:	cmp	x28, #0x2
  409618:	b.ne	409658 <__fxstatat@plt+0x6ab8>  // b.any
  40961c:	cmp	w0, #0x2e
  409620:	b.ne	409658 <__fxstatat@plt+0x6ab8>  // b.any
  409624:	ldrb	w0, [x26, #1]
  409628:	cmp	w0, #0x2e
  40962c:	b.ne	409658 <__fxstatat@plt+0x6ab8>  // b.any
  409630:	add	x0, x25, #0x1
  409634:	cmp	x22, x0
  409638:	b.ls	409604 <__fxstatat@plt+0x6a64>  // b.plast
  40963c:	sub	x22, x22, #0x1
  409640:	cmp	x25, x22
  409644:	b.eq	409904 <__fxstatat@plt+0x6d64>  // b.none
  409648:	ldurb	w0, [x22, #-1]
  40964c:	cmp	w0, #0x2f
  409650:	b.eq	409604 <__fxstatat@plt+0x6a64>  // b.none
  409654:	b	40963c <__fxstatat@plt+0x6a9c>
  409658:	ldurb	w0, [x22, #-1]
  40965c:	cmp	w0, #0x2f
  409660:	b.eq	409674 <__fxstatat@plt+0x6ad4>  // b.none
  409664:	mov	x5, x22
  409668:	mov	w0, #0x2f                  	// #47
  40966c:	strb	w0, [x5], #1
  409670:	mov	x22, x5
  409674:	ldr	x1, [sp, #104]
  409678:	add	x0, x22, x28
  40967c:	cmp	x1, x0
  409680:	b.hi	4096c0 <__fxstatat@plt+0x6b20>  // b.pmore
  409684:	sub	x5, x22, x25
  409688:	cmp	x28, #0x1, lsl #12
  40968c:	sub	x22, x1, x25
  409690:	str	x5, [sp, #136]
  409694:	add	x0, x28, x22
  409698:	add	x22, x22, #0x1, lsl #12
  40969c:	csinc	x22, x22, x0, lt  // lt = tstop
  4096a0:	mov	x0, x25
  4096a4:	mov	x1, x22
  4096a8:	bl	40f2ac <__fxstatat@plt+0xc70c>
  4096ac:	ldr	x5, [sp, #136]
  4096b0:	mov	x25, x0
  4096b4:	add	x0, x0, x22
  4096b8:	str	x0, [sp, #104]
  4096bc:	add	x22, x25, x5
  4096c0:	mov	x0, x22
  4096c4:	mov	x2, x28
  4096c8:	mov	x1, x26
  4096cc:	bl	4024d0 <memcpy@plt>
  4096d0:	add	x22, x0, x28
  4096d4:	strb	wzr, [x0, x28]
  4096d8:	ldr	w0, [sp, #116]
  4096dc:	cmp	w0, #0x0
  4096e0:	ccmp	w24, #0x2, #0x0, ne  // ne = any
  4096e4:	b.ne	409724 <__fxstatat@plt+0x6b84>  // b.any
  4096e8:	str	wzr, [sp, #160]
  4096ec:	ldr	w0, [sp, #160]
  4096f0:	and	w0, w0, #0xf000
  4096f4:	cmp	w0, #0xa, lsl #12
  4096f8:	b.ne	4098e4 <__fxstatat@plt+0x6d44>  // b.any
  4096fc:	cbnz	x20, 4097a4 <__fxstatat@plt+0x6c04>
  409700:	ldp	x4, x3, [sp, #120]
  409704:	adrp	x2, 40b000 <__fxstatat@plt+0x8460>
  409708:	mov	x1, #0x0                   	// #0
  40970c:	add	x2, x2, #0x14
  409710:	mov	x0, #0x7                   	// #7
  409714:	bl	40aa28 <__fxstatat@plt+0x7e88>
  409718:	mov	x20, x0
  40971c:	cbnz	x0, 4097a4 <__fxstatat@plt+0x6c04>
  409720:	bl	40f440 <__fxstatat@plt+0xc8a0>
  409724:	ldr	w0, [sp, #116]
  409728:	add	x1, sp, #0x90
  40972c:	cbz	w0, 409798 <__fxstatat@plt+0x6bf8>
  409730:	mov	x0, x25
  409734:	bl	411cc0 <_obstack_memory_used@@Base+0x1b04>
  409738:	cmp	w0, #0x0
  40973c:	cset	w0, ne  // ne = any
  409740:	cbz	w0, 4096ec <__fxstatat@plt+0x6b4c>
  409744:	bl	402b30 <__errno_location@plt>
  409748:	ldr	w26, [x0]
  40974c:	cbz	w24, 409778 <__fxstatat@plt+0x6bd8>
  409750:	cmp	w24, #0x1
  409754:	b.ne	4096e8 <__fxstatat@plt+0x6b48>  // b.any
  409758:	mov	x0, x19
  40975c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x3e44>
  409760:	add	x1, x1, #0x44
  409764:	bl	4029c0 <strspn@plt>
  409768:	ldrb	w0, [x19, x0]
  40976c:	cbnz	w0, 409778 <__fxstatat@plt+0x6bd8>
  409770:	cmp	w26, #0x2
  409774:	b.eq	409604 <__fxstatat@plt+0x6a64>  // b.none
  409778:	mov	x0, x21
  40977c:	bl	402990 <free@plt>
  409780:	mov	x0, x25
  409784:	bl	402990 <free@plt>
  409788:	cbnz	x20, 40990c <__fxstatat@plt+0x6d6c>
  40978c:	bl	402b30 <__errno_location@plt>
  409790:	str	w26, [x0]
  409794:	b	409484 <__fxstatat@plt+0x68e4>
  409798:	mov	x0, x25
  40979c:	bl	411ce0 <_obstack_memory_used@@Base+0x1b24>
  4097a0:	b	409738 <__fxstatat@plt+0x6b98>
  4097a4:	add	x2, sp, #0x90
  4097a8:	mov	x1, x27
  4097ac:	mov	x0, x20
  4097b0:	bl	409ca0 <__fxstatat@plt+0x7100>
  4097b4:	tst	w0, #0xff
  4097b8:	b.eq	4097cc <__fxstatat@plt+0x6c2c>  // b.none
  4097bc:	cmp	w24, #0x2
  4097c0:	b.eq	409604 <__fxstatat@plt+0x6a64>  // b.none
  4097c4:	mov	w26, #0x28                  	// #40
  4097c8:	b	409778 <__fxstatat@plt+0x6bd8>
  4097cc:	add	x2, sp, #0x90
  4097d0:	mov	x1, x27
  4097d4:	mov	x0, x20
  4097d8:	bl	409c14 <__fxstatat@plt+0x7074>
  4097dc:	ldr	x1, [sp, #192]
  4097e0:	mov	x0, x25
  4097e4:	bl	408dec <__fxstatat@plt+0x624c>
  4097e8:	mov	x26, x0
  4097ec:	cbnz	x0, 40980c <__fxstatat@plt+0x6c6c>
  4097f0:	bl	402b30 <__errno_location@plt>
  4097f4:	ldr	w26, [x0]
  4097f8:	cmp	w24, #0x2
  4097fc:	b.ne	409778 <__fxstatat@plt+0x6bd8>  // b.any
  409800:	cmp	w26, #0xc
  409804:	b.ne	409604 <__fxstatat@plt+0x6a64>  // b.any
  409808:	b	409778 <__fxstatat@plt+0x6bd8>
  40980c:	bl	402540 <strlen@plt>
  409810:	mov	x27, x0
  409814:	mov	x0, x19
  409818:	bl	402540 <strlen@plt>
  40981c:	mov	x28, x0
  409820:	add	x1, x27, x0
  409824:	cbnz	x23, 409890 <__fxstatat@plt+0x6cf0>
  409828:	add	x23, x1, #0x1
  40982c:	mov	x0, #0x1000                	// #4096
  409830:	cmp	x23, #0x1, lsl #12
  409834:	csel	x23, x23, x0, cs  // cs = hs, nlast
  409838:	mov	x0, x23
  40983c:	bl	40f24c <__fxstatat@plt+0xc6ac>
  409840:	mov	x21, x0
  409844:	add	x2, x28, #0x1
  409848:	mov	x1, x19
  40984c:	add	x0, x21, x27
  409850:	bl	4024e0 <memmove@plt>
  409854:	mov	x2, x27
  409858:	mov	x1, x26
  40985c:	mov	x0, x21
  409860:	bl	4024d0 <memcpy@plt>
  409864:	ldrb	w1, [x26]
  409868:	mov	x27, x0
  40986c:	add	x0, x25, #0x1
  409870:	cmp	w1, #0x2f
  409874:	b.ne	4098b8 <__fxstatat@plt+0x6d18>  // b.any
  409878:	mov	x22, x0
  40987c:	strb	w1, [x25]
  409880:	mov	x0, x26
  409884:	mov	x19, x27
  409888:	bl	402990 <free@plt>
  40988c:	b	409604 <__fxstatat@plt+0x6a64>
  409890:	add	x1, x1, #0x1
  409894:	cmp	x1, x23
  409898:	b.ls	409844 <__fxstatat@plt+0x6ca4>  // b.plast
  40989c:	mov	x0, x21
  4098a0:	str	x1, [sp, #136]
  4098a4:	bl	40f2ac <__fxstatat@plt+0xc70c>
  4098a8:	mov	x21, x0
  4098ac:	ldr	x1, [sp, #136]
  4098b0:	mov	x23, x1
  4098b4:	b	409844 <__fxstatat@plt+0x6ca4>
  4098b8:	cmp	x0, x22
  4098bc:	b.cs	409880 <__fxstatat@plt+0x6ce0>  // b.hs, b.nlast
  4098c0:	sub	x22, x22, #0x1
  4098c4:	cmp	x25, x22
  4098c8:	b.eq	4098dc <__fxstatat@plt+0x6d3c>  // b.none
  4098cc:	ldurb	w0, [x22, #-1]
  4098d0:	cmp	w0, #0x2f
  4098d4:	b.eq	409880 <__fxstatat@plt+0x6ce0>  // b.none
  4098d8:	b	4098c0 <__fxstatat@plt+0x6d20>
  4098dc:	mov	x22, x25
  4098e0:	b	409880 <__fxstatat@plt+0x6ce0>
  4098e4:	cmp	w0, #0x4, lsl #12
  4098e8:	b.eq	409604 <__fxstatat@plt+0x6a64>  // b.none
  4098ec:	ldrb	w0, [x19]
  4098f0:	cbz	w0, 409604 <__fxstatat@plt+0x6a64>
  4098f4:	cmp	w24, #0x2
  4098f8:	b.eq	409604 <__fxstatat@plt+0x6a64>  // b.none
  4098fc:	mov	w26, #0x14                  	// #20
  409900:	b	409778 <__fxstatat@plt+0x6bd8>
  409904:	mov	x22, x25
  409908:	b	409604 <__fxstatat@plt+0x6a64>
  40990c:	mov	x0, x20
  409910:	bl	40ab88 <__fxstatat@plt+0x7fe8>
  409914:	b	40978c <__fxstatat@plt+0x6bec>
  409918:	adrp	x1, 42c000 <__progname@@GLIBC_2.17+0xa28>
  40991c:	str	x0, [x1, #1840]
  409920:	ret
  409924:	adrp	x1, 42c000 <__progname@@GLIBC_2.17+0xa28>
  409928:	strb	w0, [x1, #1848]
  40992c:	ret
  409930:	stp	x29, x30, [sp, #-48]!
  409934:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  409938:	mov	x29, sp
  40993c:	ldr	x0, [x0, #1488]
  409940:	stp	x19, x20, [sp, #16]
  409944:	stp	x21, x22, [sp, #32]
  409948:	bl	410720 <_obstack_memory_used@@Base+0x564>
  40994c:	cbz	w0, 4099e0 <__fxstatat@plt+0x6e40>
  409950:	adrp	x21, 42c000 <__progname@@GLIBC_2.17+0xa28>
  409954:	add	x0, x21, #0x730
  409958:	ldrb	w22, [x0, #8]
  40995c:	bl	402b30 <__errno_location@plt>
  409960:	mov	x19, x0
  409964:	cbz	w22, 409974 <__fxstatat@plt+0x6dd4>
  409968:	ldr	w0, [x0]
  40996c:	cmp	w0, #0x20
  409970:	b.eq	4099e0 <__fxstatat@plt+0x6e40>  // b.none
  409974:	mov	w2, #0x5                   	// #5
  409978:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x5e44>
  40997c:	mov	x0, #0x0                   	// #0
  409980:	add	x1, x1, #0xd4
  409984:	bl	402ac0 <dcgettext@plt>
  409988:	mov	x20, x0
  40998c:	ldr	x0, [x21, #1840]
  409990:	cbz	x0, 4099c4 <__fxstatat@plt+0x6e24>
  409994:	ldr	w19, [x19]
  409998:	bl	40ea90 <__fxstatat@plt+0xbef0>
  40999c:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x2e44>
  4099a0:	mov	x3, x0
  4099a4:	mov	x4, x20
  4099a8:	add	x2, x2, #0xe5c
  4099ac:	mov	w1, w19
  4099b0:	mov	w0, #0x0                   	// #0
  4099b4:	bl	4025b0 <error@plt>
  4099b8:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  4099bc:	ldr	w0, [x0, #1352]
  4099c0:	bl	402500 <_exit@plt>
  4099c4:	ldr	w1, [x19]
  4099c8:	mov	x3, x20
  4099cc:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x5e44>
  4099d0:	mov	w0, #0x0                   	// #0
  4099d4:	add	x2, x2, #0xd1
  4099d8:	bl	4025b0 <error@plt>
  4099dc:	b	4099b8 <__fxstatat@plt+0x6e18>
  4099e0:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  4099e4:	ldr	x0, [x0, #1464]
  4099e8:	bl	410720 <_obstack_memory_used@@Base+0x564>
  4099ec:	cbnz	w0, 4099b8 <__fxstatat@plt+0x6e18>
  4099f0:	ldp	x19, x20, [sp, #16]
  4099f4:	ldp	x21, x22, [sp, #32]
  4099f8:	ldp	x29, x30, [sp], #48
  4099fc:	ret
  409a00:	stp	x29, x30, [sp, #-32]!
  409a04:	mov	x29, sp
  409a08:	stp	x19, x20, [sp, #16]
  409a0c:	mov	x19, x0
  409a10:	ldrb	w1, [x0]
  409a14:	cmp	w1, #0x2f
  409a18:	cset	x20, eq  // eq = none
  409a1c:	bl	409ab8 <__fxstatat@plt+0x6f18>
  409a20:	sub	x0, x0, x19
  409a24:	cmp	x0, x20
  409a28:	b.hi	409a38 <__fxstatat@plt+0x6e98>  // b.pmore
  409a2c:	ldp	x19, x20, [sp, #16]
  409a30:	ldp	x29, x30, [sp], #32
  409a34:	ret
  409a38:	sub	x1, x0, #0x1
  409a3c:	ldrb	w2, [x19, x1]
  409a40:	cmp	w2, #0x2f
  409a44:	b.ne	409a2c <__fxstatat@plt+0x6e8c>  // b.any
  409a48:	mov	x0, x1
  409a4c:	b	409a24 <__fxstatat@plt+0x6e84>
  409a50:	stp	x29, x30, [sp, #-48]!
  409a54:	mov	x29, sp
  409a58:	stp	x19, x20, [sp, #16]
  409a5c:	str	x21, [sp, #32]
  409a60:	mov	x21, x0
  409a64:	bl	409a00 <__fxstatat@plt+0x6e60>
  409a68:	cmp	x0, #0x0
  409a6c:	mov	x19, x0
  409a70:	add	x0, x0, #0x1
  409a74:	cinc	x0, x0, eq  // eq = none
  409a78:	bl	402730 <malloc@plt>
  409a7c:	mov	x20, x0
  409a80:	cbz	x0, 409aa4 <__fxstatat@plt+0x6f04>
  409a84:	mov	x2, x19
  409a88:	mov	x1, x21
  409a8c:	bl	4024d0 <memcpy@plt>
  409a90:	cbnz	x19, 409aa0 <__fxstatat@plt+0x6f00>
  409a94:	mov	w0, #0x2e                  	// #46
  409a98:	mov	x19, #0x1                   	// #1
  409a9c:	strb	w0, [x20]
  409aa0:	strb	wzr, [x20, x19]
  409aa4:	mov	x0, x20
  409aa8:	ldp	x19, x20, [sp, #16]
  409aac:	ldr	x21, [sp, #32]
  409ab0:	ldp	x29, x30, [sp], #48
  409ab4:	ret
  409ab8:	ldrb	w1, [x0]
  409abc:	cmp	w1, #0x2f
  409ac0:	b.eq	409ad8 <__fxstatat@plt+0x6f38>  // b.none
  409ac4:	mov	x1, x0
  409ac8:	mov	w2, #0x0                   	// #0
  409acc:	ldrb	w3, [x1]
  409ad0:	cbnz	w3, 409ae0 <__fxstatat@plt+0x6f40>
  409ad4:	ret
  409ad8:	add	x0, x0, #0x1
  409adc:	b	409ab8 <__fxstatat@plt+0x6f18>
  409ae0:	cmp	w3, #0x2f
  409ae4:	b.eq	409af4 <__fxstatat@plt+0x6f54>  // b.none
  409ae8:	cbnz	w2, 409afc <__fxstatat@plt+0x6f5c>
  409aec:	add	x1, x1, #0x1
  409af0:	b	409acc <__fxstatat@plt+0x6f2c>
  409af4:	mov	w2, #0x1                   	// #1
  409af8:	b	409aec <__fxstatat@plt+0x6f4c>
  409afc:	mov	x0, x1
  409b00:	mov	w2, #0x0                   	// #0
  409b04:	b	409aec <__fxstatat@plt+0x6f4c>
  409b08:	stp	x29, x30, [sp, #-32]!
  409b0c:	mov	x29, sp
  409b10:	str	x19, [sp, #16]
  409b14:	mov	x19, x0
  409b18:	bl	402540 <strlen@plt>
  409b1c:	cmp	x0, #0x1
  409b20:	b.ls	409b34 <__fxstatat@plt+0x6f94>  // b.plast
  409b24:	sub	x1, x0, #0x1
  409b28:	ldrb	w2, [x19, x1]
  409b2c:	cmp	w2, #0x2f
  409b30:	b.eq	409b40 <__fxstatat@plt+0x6fa0>  // b.none
  409b34:	ldr	x19, [sp, #16]
  409b38:	ldp	x29, x30, [sp], #32
  409b3c:	ret
  409b40:	mov	x0, x1
  409b44:	b	409b1c <__fxstatat@plt+0x6f7c>
  409b48:	stp	x29, x30, [sp, #-32]!
  409b4c:	mov	x29, sp
  409b50:	stp	x19, x20, [sp, #16]
  409b54:	mov	x19, x1
  409b58:	ldr	w1, [x1, #16]
  409b5c:	and	w1, w1, #0xf000
  409b60:	cmp	w1, #0xa, lsl #12
  409b64:	b.ne	409b78 <__fxstatat@plt+0x6fd8>  // b.any
  409b68:	mov	w0, #0x0                   	// #0
  409b6c:	ldp	x19, x20, [sp, #16]
  409b70:	ldp	x29, x30, [sp], #32
  409b74:	ret
  409b78:	mov	x20, x0
  409b7c:	mov	x3, #0x0                   	// #0
  409b80:	mov	x2, #0x0                   	// #0
  409b84:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x5e44>
  409b88:	add	x1, x1, #0xe0
  409b8c:	bl	4028e0 <getxattr@plt>
  409b90:	cmp	x0, #0x0
  409b94:	b.ge	409c00 <__fxstatat@plt+0x7060>  // b.tcont
  409b98:	bl	402b30 <__errno_location@plt>
  409b9c:	ldr	w0, [x0]
  409ba0:	cmp	w0, #0x3d
  409ba4:	b.ne	409be8 <__fxstatat@plt+0x7048>  // b.any
  409ba8:	ldr	w0, [x19, #16]
  409bac:	and	w0, w0, #0xf000
  409bb0:	cmp	w0, #0x4, lsl #12
  409bb4:	b.ne	409b68 <__fxstatat@plt+0x6fc8>  // b.any
  409bb8:	mov	x0, x20
  409bbc:	mov	x3, #0x0                   	// #0
  409bc0:	mov	x2, #0x0                   	// #0
  409bc4:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x5e44>
  409bc8:	add	x1, x1, #0xf8
  409bcc:	bl	4028e0 <getxattr@plt>
  409bd0:	cmp	x0, #0x0
  409bd4:	b.ge	409c0c <__fxstatat@plt+0x706c>  // b.tcont
  409bd8:	bl	402b30 <__errno_location@plt>
  409bdc:	ldr	w0, [x0]
  409be0:	cmp	w0, #0x3d
  409be4:	b.eq	409b68 <__fxstatat@plt+0x6fc8>  // b.none
  409be8:	bl	402b30 <__errno_location@plt>
  409bec:	ldr	w0, [x0]
  409bf0:	bl	4106f0 <_obstack_memory_used@@Base+0x534>
  409bf4:	and	w0, w0, #0xff
  409bf8:	neg	w0, w0
  409bfc:	b	409b6c <__fxstatat@plt+0x6fcc>
  409c00:	b.eq	409ba8 <__fxstatat@plt+0x7008>  // b.none
  409c04:	mov	w0, #0x1                   	// #1
  409c08:	b	409b6c <__fxstatat@plt+0x6fcc>
  409c0c:	b.ne	409c04 <__fxstatat@plt+0x7064>  // b.any
  409c10:	b	409b68 <__fxstatat@plt+0x6fc8>
  409c14:	cbz	x0, 409c9c <__fxstatat@plt+0x70fc>
  409c18:	stp	x29, x30, [sp, #-48]!
  409c1c:	mov	x29, sp
  409c20:	stp	x19, x20, [sp, #16]
  409c24:	mov	x20, x0
  409c28:	mov	x0, #0x18                  	// #24
  409c2c:	stp	x21, x22, [sp, #32]
  409c30:	mov	x22, x1
  409c34:	mov	x21, x2
  409c38:	bl	40f24c <__fxstatat@plt+0xc6ac>
  409c3c:	mov	x19, x0
  409c40:	mov	x0, x22
  409c44:	bl	40f418 <__fxstatat@plt+0xc878>
  409c48:	mov	x1, x19
  409c4c:	str	x0, [x19]
  409c50:	ldr	x0, [x21, #8]
  409c54:	str	x0, [x19, #8]
  409c58:	ldr	x0, [x21]
  409c5c:	str	x0, [x19, #16]
  409c60:	mov	x0, x20
  409c64:	bl	40aedc <__fxstatat@plt+0x833c>
  409c68:	cbnz	x0, 409c70 <__fxstatat@plt+0x70d0>
  409c6c:	bl	40f440 <__fxstatat@plt+0xc8a0>
  409c70:	cmp	x19, x0
  409c74:	b.eq	409c8c <__fxstatat@plt+0x70ec>  // b.none
  409c78:	mov	x0, x19
  409c7c:	ldp	x19, x20, [sp, #16]
  409c80:	ldp	x21, x22, [sp, #32]
  409c84:	ldp	x29, x30, [sp], #48
  409c88:	b	40b0f8 <__fxstatat@plt+0x8558>
  409c8c:	ldp	x19, x20, [sp, #16]
  409c90:	ldp	x21, x22, [sp, #32]
  409c94:	ldp	x29, x30, [sp], #48
  409c98:	ret
  409c9c:	ret
  409ca0:	cbz	x0, 409cd8 <__fxstatat@plt+0x7138>
  409ca4:	stp	x29, x30, [sp, #-48]!
  409ca8:	mov	x29, sp
  409cac:	str	x1, [sp, #24]
  409cb0:	ldr	x1, [x2, #8]
  409cb4:	str	x1, [sp, #32]
  409cb8:	ldr	x1, [x2]
  409cbc:	str	x1, [sp, #40]
  409cc0:	add	x1, sp, #0x18
  409cc4:	bl	40a800 <__fxstatat@plt+0x7c60>
  409cc8:	cmp	x0, #0x0
  409ccc:	cset	w0, ne  // ne = any
  409cd0:	ldp	x29, x30, [sp], #48
  409cd4:	ret
  409cd8:	mov	w0, #0x0                   	// #0
  409cdc:	ret
  409ce0:	and	w2, w0, #0xf000
  409ce4:	cmp	w2, #0x8, lsl #12
  409ce8:	b.eq	409df4 <__fxstatat@plt+0x7254>  // b.none
  409cec:	cmp	w2, #0x4, lsl #12
  409cf0:	b.eq	409dfc <__fxstatat@plt+0x725c>  // b.none
  409cf4:	cmp	w2, #0x6, lsl #12
  409cf8:	b.eq	409e04 <__fxstatat@plt+0x7264>  // b.none
  409cfc:	cmp	w2, #0x2, lsl #12
  409d00:	b.eq	409e0c <__fxstatat@plt+0x726c>  // b.none
  409d04:	cmp	w2, #0xa, lsl #12
  409d08:	b.eq	409e14 <__fxstatat@plt+0x7274>  // b.none
  409d0c:	cmp	w2, #0x1, lsl #12
  409d10:	b.eq	409e1c <__fxstatat@plt+0x727c>  // b.none
  409d14:	cmp	w2, #0xc, lsl #12
  409d18:	mov	w3, #0x3f                  	// #63
  409d1c:	mov	w2, #0x73                  	// #115
  409d20:	csel	w2, w2, w3, eq  // eq = none
  409d24:	tst	x0, #0x100
  409d28:	mov	w3, #0x2d                  	// #45
  409d2c:	strb	w2, [x1]
  409d30:	mov	w2, #0x72                  	// #114
  409d34:	csel	w2, w2, w3, ne  // ne = any
  409d38:	tst	x0, #0x80
  409d3c:	strb	w2, [x1, #1]
  409d40:	mov	w2, #0x77                  	// #119
  409d44:	csel	w2, w2, w3, ne  // ne = any
  409d48:	strb	w2, [x1, #2]
  409d4c:	and	w2, w0, #0x40
  409d50:	tbz	w0, #11, 409e24 <__fxstatat@plt+0x7284>
  409d54:	cmp	w2, #0x0
  409d58:	mov	w3, #0x53                  	// #83
  409d5c:	mov	w2, #0x73                  	// #115
  409d60:	csel	w2, w2, w3, ne  // ne = any
  409d64:	tst	x0, #0x20
  409d68:	mov	w3, #0x2d                  	// #45
  409d6c:	strb	w2, [x1, #3]
  409d70:	mov	w2, #0x72                  	// #114
  409d74:	csel	w2, w2, w3, ne  // ne = any
  409d78:	tst	x0, #0x10
  409d7c:	strb	w2, [x1, #4]
  409d80:	mov	w2, #0x77                  	// #119
  409d84:	csel	w2, w2, w3, ne  // ne = any
  409d88:	strb	w2, [x1, #5]
  409d8c:	and	w2, w0, #0x8
  409d90:	tbz	w0, #10, 409e30 <__fxstatat@plt+0x7290>
  409d94:	cmp	w2, #0x0
  409d98:	mov	w3, #0x53                  	// #83
  409d9c:	mov	w2, #0x73                  	// #115
  409da0:	csel	w2, w2, w3, ne  // ne = any
  409da4:	tst	x0, #0x4
  409da8:	mov	w3, #0x72                  	// #114
  409dac:	strb	w2, [x1, #6]
  409db0:	mov	w2, #0x2d                  	// #45
  409db4:	csel	w3, w3, w2, ne  // ne = any
  409db8:	tst	x0, #0x2
  409dbc:	strb	w3, [x1, #7]
  409dc0:	mov	w3, #0x77                  	// #119
  409dc4:	csel	w3, w3, w2, ne  // ne = any
  409dc8:	strb	w3, [x1, #8]
  409dcc:	and	w3, w0, #0x1
  409dd0:	tbz	w0, #9, 409e3c <__fxstatat@plt+0x729c>
  409dd4:	cmp	w3, #0x0
  409dd8:	mov	w0, #0x74                  	// #116
  409ddc:	mov	w2, #0x54                  	// #84
  409de0:	csel	w0, w0, w2, ne  // ne = any
  409de4:	strb	w0, [x1, #9]
  409de8:	mov	w0, #0x20                  	// #32
  409dec:	strh	w0, [x1, #10]
  409df0:	ret
  409df4:	mov	w2, #0x2d                  	// #45
  409df8:	b	409d24 <__fxstatat@plt+0x7184>
  409dfc:	mov	w2, #0x64                  	// #100
  409e00:	b	409d24 <__fxstatat@plt+0x7184>
  409e04:	mov	w2, #0x62                  	// #98
  409e08:	b	409d24 <__fxstatat@plt+0x7184>
  409e0c:	mov	w2, #0x63                  	// #99
  409e10:	b	409d24 <__fxstatat@plt+0x7184>
  409e14:	mov	w2, #0x6c                  	// #108
  409e18:	b	409d24 <__fxstatat@plt+0x7184>
  409e1c:	mov	w2, #0x70                  	// #112
  409e20:	b	409d24 <__fxstatat@plt+0x7184>
  409e24:	cmp	w2, #0x0
  409e28:	mov	w2, #0x78                  	// #120
  409e2c:	b	409d60 <__fxstatat@plt+0x71c0>
  409e30:	cmp	w2, #0x0
  409e34:	mov	w2, #0x78                  	// #120
  409e38:	b	409da0 <__fxstatat@plt+0x7200>
  409e3c:	cmp	w3, #0x0
  409e40:	mov	w0, #0x78                  	// #120
  409e44:	b	409de0 <__fxstatat@plt+0x7240>
  409e48:	ldr	w0, [x0, #16]
  409e4c:	b	409ce0 <__fxstatat@plt+0x7140>
  409e50:	stp	x29, x30, [sp, #-16]!
  409e54:	mov	x29, sp
  409e58:	bl	409e6c <__fxstatat@plt+0x72cc>
  409e5c:	cbnz	x0, 409e64 <__fxstatat@plt+0x72c4>
  409e60:	bl	40f440 <__fxstatat@plt+0xc8a0>
  409e64:	ldp	x29, x30, [sp], #16
  409e68:	ret
  409e6c:	stp	x29, x30, [sp, #-80]!
  409e70:	mov	x29, sp
  409e74:	stp	x19, x20, [sp, #16]
  409e78:	stp	x21, x22, [sp, #32]
  409e7c:	mov	x21, x1
  409e80:	mov	x22, x2
  409e84:	stp	x23, x24, [sp, #48]
  409e88:	mov	x23, x0
  409e8c:	stp	x25, x26, [sp, #64]
  409e90:	bl	409ab8 <__fxstatat@plt+0x6f18>
  409e94:	mov	x19, x0
  409e98:	sub	x19, x19, x23
  409e9c:	bl	409b08 <__fxstatat@plt+0x6f68>
  409ea0:	mov	x20, x0
  409ea4:	add	x19, x19, x0
  409ea8:	mov	x0, x21
  409eac:	bl	402540 <strlen@plt>
  409eb0:	mov	x24, x0
  409eb4:	add	x0, x0, #0x1
  409eb8:	cbz	x20, 409f40 <__fxstatat@plt+0x73a0>
  409ebc:	add	x1, x23, x19
  409ec0:	ldurb	w1, [x1, #-1]
  409ec4:	cmp	w1, #0x2f
  409ec8:	b.eq	409f54 <__fxstatat@plt+0x73b4>  // b.none
  409ecc:	ldrb	w1, [x21]
  409ed0:	mov	w20, #0x2f                  	// #47
  409ed4:	cmp	w1, #0x2f
  409ed8:	csel	w20, wzr, w20, eq  // eq = none
  409edc:	cmp	w20, #0x0
  409ee0:	cinc	x1, x19, ne  // ne = any
  409ee4:	cset	x26, ne  // ne = any
  409ee8:	add	x0, x1, x0
  409eec:	bl	402730 <malloc@plt>
  409ef0:	mov	x25, x0
  409ef4:	cbz	x0, 409f24 <__fxstatat@plt+0x7384>
  409ef8:	mov	x2, x19
  409efc:	mov	x1, x23
  409f00:	bl	4029b0 <mempcpy@plt>
  409f04:	strb	w20, [x0]
  409f08:	add	x0, x0, x26
  409f0c:	cbz	x22, 409f14 <__fxstatat@plt+0x7374>
  409f10:	str	x0, [x22]
  409f14:	mov	x2, x24
  409f18:	mov	x1, x21
  409f1c:	bl	4029b0 <mempcpy@plt>
  409f20:	strb	wzr, [x0]
  409f24:	mov	x0, x25
  409f28:	ldp	x19, x20, [sp, #16]
  409f2c:	ldp	x21, x22, [sp, #32]
  409f30:	ldp	x23, x24, [sp, #48]
  409f34:	ldp	x25, x26, [sp, #64]
  409f38:	ldp	x29, x30, [sp], #80
  409f3c:	ret
  409f40:	ldrb	w1, [x21]
  409f44:	mov	w20, #0x2e                  	// #46
  409f48:	cmp	w1, #0x2f
  409f4c:	csel	w20, wzr, w20, ne  // ne = any
  409f50:	b	409edc <__fxstatat@plt+0x733c>
  409f54:	mov	w20, #0x0                   	// #0
  409f58:	b	409edc <__fxstatat@plt+0x733c>
  409f5c:	stp	x29, x30, [sp, #-48]!
  409f60:	mov	w1, #0x0                   	// #0
  409f64:	mov	x29, sp
  409f68:	stp	x21, x22, [sp, #32]
  409f6c:	mov	x22, x0
  409f70:	stp	x19, x20, [sp, #16]
  409f74:	mov	x19, #0x0                   	// #0
  409f78:	ldr	x21, [x22]
  409f7c:	ldrb	w20, [x21]
  409f80:	cbnz	w20, 409f98 <__fxstatat@plt+0x73f8>
  409f84:	mov	x0, x19
  409f88:	ldp	x19, x20, [sp, #16]
  409f8c:	ldp	x21, x22, [sp, #32]
  409f90:	ldp	x29, x30, [sp], #48
  409f94:	ret
  409f98:	cbz	w1, 409fc0 <__fxstatat@plt+0x7420>
  409f9c:	mov	w0, w20
  409fa0:	bl	409250 <__fxstatat@plt+0x66b0>
  409fa4:	ands	w1, w0, #0xff
  409fa8:	b.ne	409fe4 <__fxstatat@plt+0x7444>  // b.any
  409fac:	cmp	w20, #0x7e
  409fb0:	csel	x19, x19, xzr, eq  // eq = none
  409fb4:	add	x21, x21, #0x1
  409fb8:	str	x21, [x22]
  409fbc:	b	409f78 <__fxstatat@plt+0x73d8>
  409fc0:	cmp	w20, #0x2e
  409fc4:	b.ne	409fd8 <__fxstatat@plt+0x7438>  // b.any
  409fc8:	cbnz	x19, 409fd0 <__fxstatat@plt+0x7430>
  409fcc:	mov	x19, x21
  409fd0:	mov	w1, #0x1                   	// #1
  409fd4:	b	409fb4 <__fxstatat@plt+0x7414>
  409fd8:	mov	w0, w20
  409fdc:	bl	40921c <__fxstatat@plt+0x667c>
  409fe0:	b	409fa4 <__fxstatat@plt+0x7404>
  409fe4:	mov	w1, #0x0                   	// #0
  409fe8:	b	409fb4 <__fxstatat@plt+0x7414>
  409fec:	stp	x29, x30, [sp, #-32]!
  409ff0:	mov	x29, sp
  409ff4:	str	x19, [sp, #16]
  409ff8:	and	w19, w0, #0xff
  409ffc:	sub	w0, w19, #0x30
  40a000:	cmp	w0, #0x9
  40a004:	b.ls	40a034 <__fxstatat@plt+0x7494>  // b.plast
  40a008:	mov	w0, w19
  40a00c:	bl	409250 <__fxstatat@plt+0x66b0>
  40a010:	tst	w0, #0xff
  40a014:	b.ne	40a024 <__fxstatat@plt+0x7484>  // b.any
  40a018:	add	w0, w19, #0x100
  40a01c:	cmp	w19, #0x7e
  40a020:	csinv	w19, w0, wzr, ne  // ne = any
  40a024:	mov	w0, w19
  40a028:	ldr	x19, [sp, #16]
  40a02c:	ldp	x29, x30, [sp], #32
  40a030:	ret
  40a034:	mov	w19, #0x0                   	// #0
  40a038:	b	40a024 <__fxstatat@plt+0x7484>
  40a03c:	stp	x29, x30, [sp, #-96]!
  40a040:	mov	x29, sp
  40a044:	stp	x19, x20, [sp, #16]
  40a048:	mov	x19, x0
  40a04c:	mov	x20, x1
  40a050:	stp	x21, x22, [sp, #32]
  40a054:	stp	x23, x24, [sp, #48]
  40a058:	stp	x25, x26, [sp, #64]
  40a05c:	bl	402950 <strcmp@plt>
  40a060:	mov	w23, w0
  40a064:	cbz	w0, 40a074 <__fxstatat@plt+0x74d4>
  40a068:	ldrb	w24, [x19]
  40a06c:	cbnz	w24, 40a090 <__fxstatat@plt+0x74f0>
  40a070:	mov	w23, #0xffffffff            	// #-1
  40a074:	mov	w0, w23
  40a078:	ldp	x19, x20, [sp, #16]
  40a07c:	ldp	x21, x22, [sp, #32]
  40a080:	ldp	x23, x24, [sp, #48]
  40a084:	ldp	x25, x26, [sp, #64]
  40a088:	ldp	x29, x30, [sp], #96
  40a08c:	ret
  40a090:	ldrb	w22, [x20]
  40a094:	cbnz	w22, 40a0a0 <__fxstatat@plt+0x7500>
  40a098:	mov	w23, #0x1                   	// #1
  40a09c:	b	40a074 <__fxstatat@plt+0x74d4>
  40a0a0:	adrp	x21, 416000 <_obstack_memory_used@@Base+0x5e44>
  40a0a4:	add	x21, x21, #0x112
  40a0a8:	mov	x1, x19
  40a0ac:	mov	x0, x21
  40a0b0:	bl	402950 <strcmp@plt>
  40a0b4:	cbz	w0, 40a070 <__fxstatat@plt+0x74d0>
  40a0b8:	mov	x1, x20
  40a0bc:	mov	x0, x21
  40a0c0:	bl	402950 <strcmp@plt>
  40a0c4:	cbz	w0, 40a098 <__fxstatat@plt+0x74f8>
  40a0c8:	adrp	x21, 416000 <_obstack_memory_used@@Base+0x5e44>
  40a0cc:	add	x21, x21, #0x111
  40a0d0:	mov	x1, x19
  40a0d4:	mov	x0, x21
  40a0d8:	bl	402950 <strcmp@plt>
  40a0dc:	cbz	w0, 40a070 <__fxstatat@plt+0x74d0>
  40a0e0:	mov	x1, x20
  40a0e4:	mov	x0, x21
  40a0e8:	bl	402950 <strcmp@plt>
  40a0ec:	cbz	w0, 40a098 <__fxstatat@plt+0x74f8>
  40a0f0:	cmp	w24, #0x2e
  40a0f4:	b.ne	40a10c <__fxstatat@plt+0x756c>  // b.any
  40a0f8:	cmp	w22, #0x2e
  40a0fc:	b.ne	40a070 <__fxstatat@plt+0x74d0>  // b.any
  40a100:	add	x19, x19, #0x1
  40a104:	add	x20, x20, #0x1
  40a108:	b	40a114 <__fxstatat@plt+0x7574>
  40a10c:	cmp	w22, #0x2e
  40a110:	b.eq	40a098 <__fxstatat@plt+0x74f8>  // b.none
  40a114:	add	x0, sp, #0x50
  40a118:	stp	x19, x20, [sp, #80]
  40a11c:	bl	409f5c <__fxstatat@plt+0x73bc>
  40a120:	mov	x21, x0
  40a124:	add	x0, sp, #0x58
  40a128:	bl	409f5c <__fxstatat@plt+0x73bc>
  40a12c:	ldp	x26, x22, [sp, #80]
  40a130:	cmp	x21, #0x0
  40a134:	csel	x24, x26, x21, eq  // eq = none
  40a138:	cmp	x0, #0x0
  40a13c:	csel	x25, x22, x0, eq  // eq = none
  40a140:	sub	x24, x24, x19
  40a144:	sub	x25, x25, x20
  40a148:	orr	x21, x21, x0
  40a14c:	cbz	x21, 40a174 <__fxstatat@plt+0x75d4>
  40a150:	cmp	x24, x25
  40a154:	b.ne	40a174 <__fxstatat@plt+0x75d4>  // b.any
  40a158:	mov	x2, x24
  40a15c:	mov	x1, x20
  40a160:	mov	x0, x19
  40a164:	bl	402780 <strncmp@plt>
  40a168:	cbnz	w0, 40a174 <__fxstatat@plt+0x75d4>
  40a16c:	sub	x24, x26, x19
  40a170:	sub	x25, x22, x20
  40a174:	mov	x22, #0x0                   	// #0
  40a178:	mov	x21, #0x0                   	// #0
  40a17c:	cmp	x24, x21
  40a180:	ccmp	x25, x22, #0x2, ls  // ls = plast
  40a184:	b.hi	40a1b0 <__fxstatat@plt+0x7610>  // b.pmore
  40a188:	b	40a074 <__fxstatat@plt+0x74d4>
  40a18c:	mov	w26, #0x0                   	// #0
  40a190:	ldrb	w0, [x20, x22]
  40a194:	bl	409fec <__fxstatat@plt+0x744c>
  40a198:	cmp	w0, w26
  40a19c:	b.eq	40a1a8 <__fxstatat@plt+0x7608>  // b.none
  40a1a0:	sub	w23, w26, w0
  40a1a4:	b	40a074 <__fxstatat@plt+0x74d4>
  40a1a8:	add	x21, x21, #0x1
  40a1ac:	add	x22, x22, #0x1
  40a1b0:	cmp	x24, x21
  40a1b4:	b.ls	40a1c8 <__fxstatat@plt+0x7628>  // b.plast
  40a1b8:	ldrb	w0, [x19, x21]
  40a1bc:	sub	w0, w0, #0x30
  40a1c0:	cmp	w0, #0x9
  40a1c4:	b.hi	40a1e8 <__fxstatat@plt+0x7648>  // b.pmore
  40a1c8:	ldrb	w0, [x20, x22]
  40a1cc:	cmp	x25, x22
  40a1d0:	b.ls	40a208 <__fxstatat@plt+0x7668>  // b.plast
  40a1d4:	sub	w0, w0, #0x30
  40a1d8:	cmp	w0, #0x9
  40a1dc:	b.ls	40a208 <__fxstatat@plt+0x7668>  // b.plast
  40a1e0:	cmp	x24, x21
  40a1e4:	b.eq	40a18c <__fxstatat@plt+0x75ec>  // b.none
  40a1e8:	ldrb	w0, [x19, x21]
  40a1ec:	bl	409fec <__fxstatat@plt+0x744c>
  40a1f0:	mov	w26, w0
  40a1f4:	cmp	x25, x22
  40a1f8:	b.ne	40a190 <__fxstatat@plt+0x75f0>  // b.any
  40a1fc:	mov	w0, #0x0                   	// #0
  40a200:	b	40a198 <__fxstatat@plt+0x75f8>
  40a204:	add	x21, x21, #0x1
  40a208:	ldrb	w0, [x19, x21]
  40a20c:	cmp	w0, #0x30
  40a210:	b.eq	40a204 <__fxstatat@plt+0x7664>  // b.none
  40a214:	ldrb	w0, [x20, x22]
  40a218:	cmp	w0, #0x30
  40a21c:	b.eq	40a258 <__fxstatat@plt+0x76b8>  // b.none
  40a220:	mov	w0, #0x0                   	// #0
  40a224:	ldrb	w2, [x19, x21]
  40a228:	ldrb	w3, [x20, x22]
  40a22c:	sub	w4, w2, #0x30
  40a230:	sub	w1, w3, #0x30
  40a234:	cmp	w4, #0x9
  40a238:	b.hi	40a260 <__fxstatat@plt+0x76c0>  // b.pmore
  40a23c:	cmp	w1, #0x9
  40a240:	b.hi	40a098 <__fxstatat@plt+0x74f8>  // b.pmore
  40a244:	cbnz	w0, 40a24c <__fxstatat@plt+0x76ac>
  40a248:	sub	w0, w2, w3
  40a24c:	add	x21, x21, #0x1
  40a250:	add	x22, x22, #0x1
  40a254:	b	40a224 <__fxstatat@plt+0x7684>
  40a258:	add	x22, x22, #0x1
  40a25c:	b	40a214 <__fxstatat@plt+0x7674>
  40a260:	cmp	w1, #0x9
  40a264:	b.ls	40a070 <__fxstatat@plt+0x74d0>  // b.plast
  40a268:	cbz	w0, 40a17c <__fxstatat@plt+0x75dc>
  40a26c:	mov	w23, w0
  40a270:	b	40a074 <__fxstatat@plt+0x74d4>
  40a274:	mov	x1, x0
  40a278:	mov	w0, #0x0                   	// #0
  40a27c:	b	402660 <clock_gettime@plt>
  40a280:	stp	x29, x30, [sp, #-32]!
  40a284:	mov	x29, sp
  40a288:	add	x0, sp, #0x10
  40a28c:	bl	40a274 <__fxstatat@plt+0x76d4>
  40a290:	ldp	x0, x1, [sp, #16]
  40a294:	ldp	x29, x30, [sp], #32
  40a298:	ret
  40a29c:	stp	x29, x30, [sp, #-32]!
  40a2a0:	mov	x1, #0x0                   	// #0
  40a2a4:	mov	x29, sp
  40a2a8:	str	x19, [sp, #16]
  40a2ac:	bl	402b90 <setlocale@plt>
  40a2b0:	cbz	x0, 40a2ec <__fxstatat@plt+0x774c>
  40a2b4:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x5e44>
  40a2b8:	mov	x19, x0
  40a2bc:	add	x1, x1, #0x114
  40a2c0:	bl	402950 <strcmp@plt>
  40a2c4:	cbz	w0, 40a2f4 <__fxstatat@plt+0x7754>
  40a2c8:	mov	x0, x19
  40a2cc:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x5e44>
  40a2d0:	add	x1, x1, #0x116
  40a2d4:	bl	402950 <strcmp@plt>
  40a2d8:	cmp	w0, #0x0
  40a2dc:	cset	w0, ne  // ne = any
  40a2e0:	ldr	x19, [sp, #16]
  40a2e4:	ldp	x29, x30, [sp], #32
  40a2e8:	ret
  40a2ec:	mov	w0, #0x1                   	// #1
  40a2f0:	b	40a2e0 <__fxstatat@plt+0x7740>
  40a2f4:	mov	w0, #0x0                   	// #0
  40a2f8:	b	40a2e0 <__fxstatat@plt+0x7740>
  40a2fc:	ror	x2, x0, #3
  40a300:	udiv	x0, x2, x1
  40a304:	msub	x0, x0, x1, x2
  40a308:	ret
  40a30c:	cmp	x1, x0
  40a310:	cset	w0, eq  // eq = none
  40a314:	ret
  40a318:	ldrb	w2, [x1, #16]
  40a31c:	cbnz	w2, 40a340 <__fxstatat@plt+0x77a0>
  40a320:	ucvtf	s0, x0
  40a324:	ldr	s1, [x1, #8]
  40a328:	mov	w0, #0x5f800000            	// #1602224128
  40a32c:	fdiv	s0, s0, s1
  40a330:	fmov	s1, w0
  40a334:	fcmpe	s0, s1
  40a338:	b.ge	40a358 <__fxstatat@plt+0x77b8>  // b.tcont
  40a33c:	fcvtzu	x0, s0
  40a340:	cmp	x0, #0xa
  40a344:	mov	x1, #0xa                   	// #10
  40a348:	csel	x0, x0, x1, cs  // cs = hs, nlast
  40a34c:	orr	x0, x0, #0x1
  40a350:	cmn	x0, #0x1
  40a354:	b.ne	40a388 <__fxstatat@plt+0x77e8>  // b.any
  40a358:	mov	x0, #0x0                   	// #0
  40a35c:	b	40a3a8 <__fxstatat@plt+0x7808>
  40a360:	add	x2, x1, #0x1
  40a364:	add	x1, x1, #0x2
  40a368:	add	x3, x3, x2, lsl #2
  40a36c:	udiv	x2, x0, x1
  40a370:	cmp	x0, x3
  40a374:	msub	x2, x2, x1, x0
  40a378:	b.ls	40a394 <__fxstatat@plt+0x77f4>  // b.plast
  40a37c:	cbnz	x2, 40a360 <__fxstatat@plt+0x77c0>
  40a380:	add	x0, x0, #0x2
  40a384:	b	40a350 <__fxstatat@plt+0x77b0>
  40a388:	mov	x3, #0x9                   	// #9
  40a38c:	mov	x1, #0x3                   	// #3
  40a390:	b	40a36c <__fxstatat@plt+0x77cc>
  40a394:	cbz	x2, 40a380 <__fxstatat@plt+0x77e0>
  40a398:	cmp	xzr, x0, lsr #61
  40a39c:	cset	x1, ne  // ne = any
  40a3a0:	tbnz	x0, #60, 40a358 <__fxstatat@plt+0x77b8>
  40a3a4:	cbnz	x1, 40a358 <__fxstatat@plt+0x77b8>
  40a3a8:	ret
  40a3ac:	stp	x29, x30, [sp, #-32]!
  40a3b0:	mov	x29, sp
  40a3b4:	str	x19, [sp, #16]
  40a3b8:	mov	x19, x0
  40a3bc:	mov	x0, x1
  40a3c0:	ldr	x1, [x19, #16]
  40a3c4:	ldr	x2, [x19, #48]
  40a3c8:	blr	x2
  40a3cc:	ldr	x1, [x19, #16]
  40a3d0:	cmp	x1, x0
  40a3d4:	b.hi	40a3dc <__fxstatat@plt+0x783c>  // b.pmore
  40a3d8:	bl	4028b0 <abort@plt>
  40a3dc:	ldr	x1, [x19]
  40a3e0:	ldr	x19, [sp, #16]
  40a3e4:	add	x0, x1, x0, lsl #4
  40a3e8:	ldp	x29, x30, [sp], #32
  40a3ec:	ret
  40a3f0:	stp	x29, x30, [sp, #-64]!
  40a3f4:	mov	x29, sp
  40a3f8:	stp	x21, x22, [sp, #32]
  40a3fc:	mov	x22, x2
  40a400:	mov	x21, x1
  40a404:	stp	x19, x20, [sp, #16]
  40a408:	mov	x20, x0
  40a40c:	str	x23, [sp, #48]
  40a410:	and	w23, w3, #0xff
  40a414:	bl	40a3ac <__fxstatat@plt+0x780c>
  40a418:	str	x0, [x22]
  40a41c:	ldr	x1, [x0]
  40a420:	cbnz	x1, 40a43c <__fxstatat@plt+0x789c>
  40a424:	mov	x0, #0x0                   	// #0
  40a428:	ldp	x19, x20, [sp, #16]
  40a42c:	ldp	x21, x22, [sp, #32]
  40a430:	ldr	x23, [sp, #48]
  40a434:	ldp	x29, x30, [sp], #64
  40a438:	ret
  40a43c:	mov	x19, x0
  40a440:	cmp	x1, x21
  40a444:	b.eq	40a45c <__fxstatat@plt+0x78bc>  // b.none
  40a448:	ldr	x2, [x20, #56]
  40a44c:	mov	x0, x21
  40a450:	blr	x2
  40a454:	tst	w0, #0xff
  40a458:	b.eq	40a4a8 <__fxstatat@plt+0x7908>  // b.none
  40a45c:	ldr	x0, [x19]
  40a460:	cbz	w23, 40a428 <__fxstatat@plt+0x7888>
  40a464:	ldr	x1, [x19, #8]
  40a468:	cbz	x1, 40a488 <__fxstatat@plt+0x78e8>
  40a46c:	ldp	x2, x3, [x1]
  40a470:	stp	x2, x3, [x19]
  40a474:	str	xzr, [x1]
  40a478:	ldr	x2, [x20, #72]
  40a47c:	str	x2, [x1, #8]
  40a480:	str	x1, [x20, #72]
  40a484:	b	40a428 <__fxstatat@plt+0x7888>
  40a488:	str	xzr, [x19]
  40a48c:	b	40a428 <__fxstatat@plt+0x7888>
  40a490:	ldr	x2, [x20, #56]
  40a494:	mov	x0, x21
  40a498:	blr	x2
  40a49c:	tst	w0, #0xff
  40a4a0:	b.ne	40a4bc <__fxstatat@plt+0x791c>  // b.any
  40a4a4:	ldr	x19, [x19, #8]
  40a4a8:	ldr	x0, [x19, #8]
  40a4ac:	cbz	x0, 40a424 <__fxstatat@plt+0x7884>
  40a4b0:	ldr	x1, [x0]
  40a4b4:	cmp	x1, x21
  40a4b8:	b.ne	40a490 <__fxstatat@plt+0x78f0>  // b.any
  40a4bc:	ldr	x1, [x19, #8]
  40a4c0:	ldr	x0, [x1]
  40a4c4:	cbz	w23, 40a428 <__fxstatat@plt+0x7888>
  40a4c8:	ldr	x2, [x1, #8]
  40a4cc:	str	x2, [x19, #8]
  40a4d0:	b	40a474 <__fxstatat@plt+0x78d4>
  40a4d4:	ldr	x1, [x0]
  40a4d8:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x5e44>
  40a4dc:	add	x2, x2, #0x18c
  40a4e0:	cmp	x1, x2
  40a4e4:	b.eq	40a564 <__fxstatat@plt+0x79c4>  // b.none
  40a4e8:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x5e44>
  40a4ec:	ldr	s1, [x1, #8]
  40a4f0:	ldr	s2, [x3, #392]
  40a4f4:	fcmpe	s1, s2
  40a4f8:	b.le	40a558 <__fxstatat@plt+0x79b8>
  40a4fc:	mov	w3, #0x6666                	// #26214
  40a500:	movk	w3, #0x3f66, lsl #16
  40a504:	fmov	s0, w3
  40a508:	fcmpe	s1, s0
  40a50c:	b.pl	40a558 <__fxstatat@plt+0x79b8>  // b.nfrst
  40a510:	mov	w3, #0xcccd                	// #52429
  40a514:	ldr	s3, [x1, #12]
  40a518:	movk	w3, #0x3f8c, lsl #16
  40a51c:	fmov	s0, w3
  40a520:	fcmpe	s3, s0
  40a524:	b.le	40a558 <__fxstatat@plt+0x79b8>
  40a528:	ldr	s0, [x1]
  40a52c:	fcmpe	s0, #0.0
  40a530:	b.lt	40a558 <__fxstatat@plt+0x79b8>  // b.tstop
  40a534:	fadd	s0, s0, s2
  40a538:	ldr	s2, [x1, #4]
  40a53c:	fcmpe	s0, s2
  40a540:	b.pl	40a558 <__fxstatat@plt+0x79b8>  // b.nfrst
  40a544:	fmov	s3, #1.000000000000000000e+00
  40a548:	fcmpe	s2, s3
  40a54c:	b.hi	40a558 <__fxstatat@plt+0x79b8>  // b.pmore
  40a550:	fcmpe	s1, s0
  40a554:	b.gt	40a564 <__fxstatat@plt+0x79c4>
  40a558:	str	x2, [x0]
  40a55c:	mov	w0, #0x0                   	// #0
  40a560:	ret
  40a564:	mov	w0, #0x1                   	// #1
  40a568:	b	40a560 <__fxstatat@plt+0x79c0>
  40a56c:	stp	x29, x30, [sp, #-64]!
  40a570:	mov	x29, sp
  40a574:	stp	x21, x22, [sp, #32]
  40a578:	mov	x22, x1
  40a57c:	ldr	x21, [x1]
  40a580:	stp	x19, x20, [sp, #16]
  40a584:	mov	x19, x0
  40a588:	stp	x23, x24, [sp, #48]
  40a58c:	and	w23, w2, #0xff
  40a590:	ldr	x0, [x22, #8]
  40a594:	cmp	x0, x21
  40a598:	b.hi	40a5a4 <__fxstatat@plt+0x7a04>  // b.pmore
  40a59c:	mov	w23, #0x1                   	// #1
  40a5a0:	b	40a66c <__fxstatat@plt+0x7acc>
  40a5a4:	ldr	x0, [x21]
  40a5a8:	cbz	x0, 40a604 <__fxstatat@plt+0x7a64>
  40a5ac:	ldr	x20, [x21, #8]
  40a5b0:	cbnz	x20, 40a60c <__fxstatat@plt+0x7a6c>
  40a5b4:	str	xzr, [x21, #8]
  40a5b8:	ldr	x24, [x21]
  40a5bc:	cbnz	w23, 40a604 <__fxstatat@plt+0x7a64>
  40a5c0:	mov	x1, x24
  40a5c4:	mov	x0, x19
  40a5c8:	bl	40a3ac <__fxstatat@plt+0x780c>
  40a5cc:	mov	x20, x0
  40a5d0:	ldr	x0, [x0]
  40a5d4:	cbz	x0, 40a684 <__fxstatat@plt+0x7ae4>
  40a5d8:	ldr	x0, [x19, #72]
  40a5dc:	cbz	x0, 40a660 <__fxstatat@plt+0x7ac0>
  40a5e0:	ldr	x1, [x0, #8]
  40a5e4:	str	x1, [x19, #72]
  40a5e8:	ldr	x1, [x20, #8]
  40a5ec:	stp	x24, x1, [x0]
  40a5f0:	str	x0, [x20, #8]
  40a5f4:	ldr	x0, [x22, #24]
  40a5f8:	str	xzr, [x21]
  40a5fc:	sub	x0, x0, #0x1
  40a600:	str	x0, [x22, #24]
  40a604:	add	x21, x21, #0x10
  40a608:	b	40a590 <__fxstatat@plt+0x79f0>
  40a60c:	ldr	x24, [x20]
  40a610:	mov	x0, x19
  40a614:	mov	x1, x24
  40a618:	bl	40a3ac <__fxstatat@plt+0x780c>
  40a61c:	ldr	x2, [x0]
  40a620:	ldr	x1, [x20, #8]
  40a624:	cbz	x2, 40a63c <__fxstatat@plt+0x7a9c>
  40a628:	ldr	x2, [x0, #8]
  40a62c:	str	x2, [x20, #8]
  40a630:	str	x20, [x0, #8]
  40a634:	mov	x20, x1
  40a638:	b	40a5b0 <__fxstatat@plt+0x7a10>
  40a63c:	str	x24, [x0]
  40a640:	ldr	x0, [x19, #24]
  40a644:	add	x0, x0, #0x1
  40a648:	str	x0, [x19, #24]
  40a64c:	str	xzr, [x20]
  40a650:	ldr	x0, [x19, #72]
  40a654:	str	x0, [x20, #8]
  40a658:	str	x20, [x19, #72]
  40a65c:	b	40a634 <__fxstatat@plt+0x7a94>
  40a660:	mov	x0, #0x10                  	// #16
  40a664:	bl	402730 <malloc@plt>
  40a668:	cbnz	x0, 40a5e8 <__fxstatat@plt+0x7a48>
  40a66c:	mov	w0, w23
  40a670:	ldp	x19, x20, [sp, #16]
  40a674:	ldp	x21, x22, [sp, #32]
  40a678:	ldp	x23, x24, [sp, #48]
  40a67c:	ldp	x29, x30, [sp], #64
  40a680:	ret
  40a684:	ldr	x0, [x19, #24]
  40a688:	str	x24, [x20]
  40a68c:	add	x0, x0, #0x1
  40a690:	str	x0, [x19, #24]
  40a694:	b	40a5f4 <__fxstatat@plt+0x7a54>
  40a698:	ldr	x0, [x0, #16]
  40a69c:	ret
  40a6a0:	ldr	x0, [x0, #24]
  40a6a4:	ret
  40a6a8:	ldr	x0, [x0, #32]
  40a6ac:	ret
  40a6b0:	ldp	x1, x4, [x0]
  40a6b4:	mov	x0, #0x0                   	// #0
  40a6b8:	cmp	x4, x1
  40a6bc:	b.hi	40a6c4 <__fxstatat@plt+0x7b24>  // b.pmore
  40a6c0:	ret
  40a6c4:	ldr	x2, [x1]
  40a6c8:	cbz	x2, 40a6ec <__fxstatat@plt+0x7b4c>
  40a6cc:	mov	x3, x1
  40a6d0:	mov	x2, #0x1                   	// #1
  40a6d4:	b	40a6dc <__fxstatat@plt+0x7b3c>
  40a6d8:	add	x2, x2, #0x1
  40a6dc:	ldr	x3, [x3, #8]
  40a6e0:	cbnz	x3, 40a6d8 <__fxstatat@plt+0x7b38>
  40a6e4:	cmp	x0, x2
  40a6e8:	csel	x0, x0, x2, cs  // cs = hs, nlast
  40a6ec:	add	x1, x1, #0x10
  40a6f0:	b	40a6b8 <__fxstatat@plt+0x7b18>
  40a6f4:	ldp	x2, x5, [x0]
  40a6f8:	mov	x1, #0x0                   	// #0
  40a6fc:	mov	x3, #0x0                   	// #0
  40a700:	cmp	x5, x2
  40a704:	b.hi	40a724 <__fxstatat@plt+0x7b84>  // b.pmore
  40a708:	ldr	x2, [x0, #24]
  40a70c:	cmp	x2, x3
  40a710:	b.ne	40a750 <__fxstatat@plt+0x7bb0>  // b.any
  40a714:	ldr	x0, [x0, #32]
  40a718:	cmp	x0, x1
  40a71c:	cset	w0, eq  // eq = none
  40a720:	ret
  40a724:	ldr	x4, [x2]
  40a728:	cbz	x4, 40a740 <__fxstatat@plt+0x7ba0>
  40a72c:	add	x3, x3, #0x1
  40a730:	add	x1, x1, #0x1
  40a734:	mov	x4, x2
  40a738:	ldr	x4, [x4, #8]
  40a73c:	cbnz	x4, 40a748 <__fxstatat@plt+0x7ba8>
  40a740:	add	x2, x2, #0x10
  40a744:	b	40a700 <__fxstatat@plt+0x7b60>
  40a748:	add	x1, x1, #0x1
  40a74c:	b	40a738 <__fxstatat@plt+0x7b98>
  40a750:	mov	w0, #0x0                   	// #0
  40a754:	b	40a720 <__fxstatat@plt+0x7b80>
  40a758:	stp	x29, x30, [sp, #-48]!
  40a75c:	mov	x5, x0
  40a760:	mov	x29, sp
  40a764:	stp	x19, x20, [sp, #16]
  40a768:	mov	x19, x1
  40a76c:	stp	x21, x22, [sp, #32]
  40a770:	ldp	x20, x22, [x0, #16]
  40a774:	bl	40a6b0 <__fxstatat@plt+0x7b10>
  40a778:	ldr	x3, [x5, #32]
  40a77c:	mov	x21, x0
  40a780:	mov	w1, #0x1                   	// #1
  40a784:	mov	x0, x19
  40a788:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x5e44>
  40a78c:	add	x2, x2, #0x11c
  40a790:	bl	402930 <__fprintf_chk@plt>
  40a794:	mov	x3, x20
  40a798:	mov	x0, x19
  40a79c:	mov	w1, #0x1                   	// #1
  40a7a0:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x5e44>
  40a7a4:	add	x2, x2, #0x134
  40a7a8:	bl	402930 <__fprintf_chk@plt>
  40a7ac:	ucvtf	d1, x22
  40a7b0:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  40a7b4:	fmov	d0, x0
  40a7b8:	mov	x3, x22
  40a7bc:	mov	x0, x19
  40a7c0:	mov	w1, #0x1                   	// #1
  40a7c4:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x5e44>
  40a7c8:	add	x2, x2, #0x14c
  40a7cc:	fmul	d1, d1, d0
  40a7d0:	ucvtf	d0, x20
  40a7d4:	fdiv	d0, d1, d0
  40a7d8:	bl	402930 <__fprintf_chk@plt>
  40a7dc:	mov	x3, x21
  40a7e0:	mov	x0, x19
  40a7e4:	ldp	x19, x20, [sp, #16]
  40a7e8:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x5e44>
  40a7ec:	ldp	x21, x22, [sp, #32]
  40a7f0:	add	x2, x2, #0x16d
  40a7f4:	ldp	x29, x30, [sp], #48
  40a7f8:	mov	w1, #0x1                   	// #1
  40a7fc:	b	402930 <__fprintf_chk@plt>
  40a800:	stp	x29, x30, [sp, #-48]!
  40a804:	mov	x29, sp
  40a808:	stp	x19, x20, [sp, #16]
  40a80c:	mov	x20, x1
  40a810:	str	x21, [sp, #32]
  40a814:	mov	x21, x0
  40a818:	bl	40a3ac <__fxstatat@plt+0x780c>
  40a81c:	mov	x19, x0
  40a820:	ldr	x0, [x0]
  40a824:	cbz	x0, 40a864 <__fxstatat@plt+0x7cc4>
  40a828:	ldr	x1, [x19]
  40a82c:	cmp	x1, x20
  40a830:	b.ne	40a848 <__fxstatat@plt+0x7ca8>  // b.any
  40a834:	ldr	x0, [x19]
  40a838:	ldp	x19, x20, [sp, #16]
  40a83c:	ldr	x21, [sp, #32]
  40a840:	ldp	x29, x30, [sp], #48
  40a844:	ret
  40a848:	ldr	x2, [x21, #56]
  40a84c:	mov	x0, x20
  40a850:	blr	x2
  40a854:	tst	w0, #0xff
  40a858:	b.ne	40a834 <__fxstatat@plt+0x7c94>  // b.any
  40a85c:	ldr	x19, [x19, #8]
  40a860:	cbnz	x19, 40a828 <__fxstatat@plt+0x7c88>
  40a864:	mov	x0, #0x0                   	// #0
  40a868:	b	40a838 <__fxstatat@plt+0x7c98>
  40a86c:	ldr	x1, [x0, #32]
  40a870:	cbz	x1, 40a89c <__fxstatat@plt+0x7cfc>
  40a874:	ldp	x1, x2, [x0]
  40a878:	cmp	x2, x1
  40a87c:	b.hi	40a88c <__fxstatat@plt+0x7cec>  // b.pmore
  40a880:	stp	x29, x30, [sp, #-16]!
  40a884:	mov	x29, sp
  40a888:	bl	4028b0 <abort@plt>
  40a88c:	ldr	x0, [x1]
  40a890:	cbnz	x0, 40a8a0 <__fxstatat@plt+0x7d00>
  40a894:	add	x1, x1, #0x10
  40a898:	b	40a878 <__fxstatat@plt+0x7cd8>
  40a89c:	mov	x0, #0x0                   	// #0
  40a8a0:	ret
  40a8a4:	stp	x29, x30, [sp, #-32]!
  40a8a8:	mov	x29, sp
  40a8ac:	stp	x19, x20, [sp, #16]
  40a8b0:	mov	x19, x0
  40a8b4:	mov	x20, x1
  40a8b8:	bl	40a3ac <__fxstatat@plt+0x780c>
  40a8bc:	mov	x2, x0
  40a8c0:	mov	x3, x0
  40a8c4:	ldp	x0, x3, [x3]
  40a8c8:	cmp	x0, x20
  40a8cc:	b.ne	40a8e4 <__fxstatat@plt+0x7d44>  // b.any
  40a8d0:	cbz	x3, 40a8e8 <__fxstatat@plt+0x7d48>
  40a8d4:	ldr	x0, [x3]
  40a8d8:	ldp	x19, x20, [sp, #16]
  40a8dc:	ldp	x29, x30, [sp], #32
  40a8e0:	ret
  40a8e4:	cbnz	x3, 40a8c4 <__fxstatat@plt+0x7d24>
  40a8e8:	ldr	x1, [x19, #8]
  40a8ec:	add	x2, x2, #0x10
  40a8f0:	cmp	x1, x2
  40a8f4:	b.hi	40a900 <__fxstatat@plt+0x7d60>  // b.pmore
  40a8f8:	mov	x0, #0x0                   	// #0
  40a8fc:	b	40a8d8 <__fxstatat@plt+0x7d38>
  40a900:	ldr	x0, [x2]
  40a904:	cbz	x0, 40a8ec <__fxstatat@plt+0x7d4c>
  40a908:	b	40a8d8 <__fxstatat@plt+0x7d38>
  40a90c:	mov	x4, x0
  40a910:	sub	x1, x1, #0x8
  40a914:	mov	x0, #0x0                   	// #0
  40a918:	ldr	x3, [x4]
  40a91c:	ldr	x5, [x4, #8]
  40a920:	cmp	x5, x3
  40a924:	b.hi	40a92c <__fxstatat@plt+0x7d8c>  // b.pmore
  40a928:	ret
  40a92c:	ldr	x5, [x3]
  40a930:	cbz	x5, 40a954 <__fxstatat@plt+0x7db4>
  40a934:	mov	x5, x3
  40a938:	cmp	x2, x0
  40a93c:	b.ls	40a928 <__fxstatat@plt+0x7d88>  // b.plast
  40a940:	add	x0, x0, #0x1
  40a944:	ldr	x6, [x5]
  40a948:	str	x6, [x1, x0, lsl #3]
  40a94c:	ldr	x5, [x5, #8]
  40a950:	cbnz	x5, 40a938 <__fxstatat@plt+0x7d98>
  40a954:	add	x3, x3, #0x10
  40a958:	b	40a91c <__fxstatat@plt+0x7d7c>
  40a95c:	stp	x29, x30, [sp, #-64]!
  40a960:	mov	x29, sp
  40a964:	stp	x19, x20, [sp, #16]
  40a968:	mov	x20, x0
  40a96c:	ldr	x19, [x0]
  40a970:	stp	x23, x24, [sp, #48]
  40a974:	mov	x23, x1
  40a978:	mov	x24, x2
  40a97c:	stp	x21, x22, [sp, #32]
  40a980:	mov	x22, #0x0                   	// #0
  40a984:	ldr	x0, [x20, #8]
  40a988:	cmp	x0, x19
  40a98c:	b.hi	40a9a8 <__fxstatat@plt+0x7e08>  // b.pmore
  40a990:	mov	x0, x22
  40a994:	ldp	x19, x20, [sp, #16]
  40a998:	ldp	x21, x22, [sp, #32]
  40a99c:	ldp	x23, x24, [sp, #48]
  40a9a0:	ldp	x29, x30, [sp], #64
  40a9a4:	ret
  40a9a8:	ldr	x0, [x19]
  40a9ac:	cbz	x0, 40a9d4 <__fxstatat@plt+0x7e34>
  40a9b0:	mov	x21, x19
  40a9b4:	ldr	x0, [x21]
  40a9b8:	mov	x1, x24
  40a9bc:	blr	x23
  40a9c0:	tst	w0, #0xff
  40a9c4:	b.eq	40a990 <__fxstatat@plt+0x7df0>  // b.none
  40a9c8:	ldr	x21, [x21, #8]
  40a9cc:	add	x22, x22, #0x1
  40a9d0:	cbnz	x21, 40a9b4 <__fxstatat@plt+0x7e14>
  40a9d4:	add	x19, x19, #0x10
  40a9d8:	b	40a984 <__fxstatat@plt+0x7de4>
  40a9dc:	mov	x3, x0
  40a9e0:	mov	x4, #0x1f                  	// #31
  40a9e4:	mov	x0, #0x0                   	// #0
  40a9e8:	ldrb	w2, [x3]
  40a9ec:	cbnz	w2, 40a9f4 <__fxstatat@plt+0x7e54>
  40a9f0:	ret
  40a9f4:	and	x2, x2, #0xff
  40a9f8:	add	x3, x3, #0x1
  40a9fc:	madd	x2, x0, x4, x2
  40aa00:	udiv	x0, x2, x1
  40aa04:	msub	x0, x0, x1, x2
  40aa08:	b	40a9e8 <__fxstatat@plt+0x7e48>
  40aa0c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x5e44>
  40aa10:	add	x1, x1, #0x18c
  40aa14:	ldp	x2, x3, [x1]
  40aa18:	stp	x2, x3, [x0]
  40aa1c:	ldr	w1, [x1, #16]
  40aa20:	str	w1, [x0, #16]
  40aa24:	ret
  40aa28:	stp	x29, x30, [sp, #-64]!
  40aa2c:	mov	x29, sp
  40aa30:	stp	x19, x20, [sp, #16]
  40aa34:	mov	x20, x1
  40aa38:	stp	x21, x22, [sp, #32]
  40aa3c:	mov	x21, x3
  40aa40:	stp	x23, x24, [sp, #48]
  40aa44:	mov	x24, x0
  40aa48:	mov	x23, x4
  40aa4c:	cbnz	x2, 40aae8 <__fxstatat@plt+0x7f48>
  40aa50:	adrp	x22, 40a000 <__fxstatat@plt+0x7460>
  40aa54:	add	x22, x22, #0x2fc
  40aa58:	cbnz	x21, 40aa64 <__fxstatat@plt+0x7ec4>
  40aa5c:	adrp	x21, 40a000 <__fxstatat@plt+0x7460>
  40aa60:	add	x21, x21, #0x30c
  40aa64:	mov	x0, #0x50                  	// #80
  40aa68:	bl	402730 <malloc@plt>
  40aa6c:	mov	x19, x0
  40aa70:	cbz	x0, 40aad0 <__fxstatat@plt+0x7f30>
  40aa74:	cbnz	x20, 40aa80 <__fxstatat@plt+0x7ee0>
  40aa78:	adrp	x20, 416000 <_obstack_memory_used@@Base+0x5e44>
  40aa7c:	add	x20, x20, #0x18c
  40aa80:	mov	x0, x19
  40aa84:	str	x20, [x0, #40]!
  40aa88:	bl	40a4d4 <__fxstatat@plt+0x7934>
  40aa8c:	tst	w0, #0xff
  40aa90:	b.eq	40aaf0 <__fxstatat@plt+0x7f50>  // b.none
  40aa94:	mov	x1, x20
  40aa98:	mov	x0, x24
  40aa9c:	bl	40a318 <__fxstatat@plt+0x7778>
  40aaa0:	str	x0, [x19, #16]
  40aaa4:	mov	x20, x0
  40aaa8:	cbz	x0, 40aaf0 <__fxstatat@plt+0x7f50>
  40aaac:	mov	x1, #0x10                  	// #16
  40aab0:	bl	402800 <calloc@plt>
  40aab4:	str	x0, [x19]
  40aab8:	cbz	x0, 40aaf0 <__fxstatat@plt+0x7f50>
  40aabc:	add	x20, x0, x20, lsl #4
  40aac0:	str	x20, [x19, #8]
  40aac4:	stp	xzr, xzr, [x19, #24]
  40aac8:	stp	x22, x21, [x19, #48]
  40aacc:	stp	x23, xzr, [x19, #64]
  40aad0:	mov	x0, x19
  40aad4:	ldp	x19, x20, [sp, #16]
  40aad8:	ldp	x21, x22, [sp, #32]
  40aadc:	ldp	x23, x24, [sp, #48]
  40aae0:	ldp	x29, x30, [sp], #64
  40aae4:	ret
  40aae8:	mov	x22, x2
  40aaec:	b	40aa58 <__fxstatat@plt+0x7eb8>
  40aaf0:	mov	x0, x19
  40aaf4:	mov	x19, #0x0                   	// #0
  40aaf8:	bl	402990 <free@plt>
  40aafc:	b	40aad0 <__fxstatat@plt+0x7f30>
  40ab00:	stp	x29, x30, [sp, #-48]!
  40ab04:	mov	x29, sp
  40ab08:	stp	x19, x20, [sp, #16]
  40ab0c:	mov	x19, x0
  40ab10:	ldr	x20, [x0]
  40ab14:	str	x21, [sp, #32]
  40ab18:	ldr	x0, [x19, #8]
  40ab1c:	cmp	x0, x20
  40ab20:	b.hi	40ab38 <__fxstatat@plt+0x7f98>  // b.pmore
  40ab24:	ldr	x21, [sp, #32]
  40ab28:	stp	xzr, xzr, [x19, #24]
  40ab2c:	ldp	x19, x20, [sp, #16]
  40ab30:	ldp	x29, x30, [sp], #48
  40ab34:	ret
  40ab38:	ldr	x0, [x20]
  40ab3c:	cbz	x0, 40ab5c <__fxstatat@plt+0x7fbc>
  40ab40:	ldr	x21, [x20, #8]
  40ab44:	ldr	x1, [x19, #64]
  40ab48:	cbnz	x21, 40ab64 <__fxstatat@plt+0x7fc4>
  40ab4c:	cbz	x1, 40ab58 <__fxstatat@plt+0x7fb8>
  40ab50:	ldr	x0, [x20]
  40ab54:	blr	x1
  40ab58:	stp	xzr, xzr, [x20]
  40ab5c:	add	x20, x20, #0x10
  40ab60:	b	40ab18 <__fxstatat@plt+0x7f78>
  40ab64:	cbz	x1, 40ab70 <__fxstatat@plt+0x7fd0>
  40ab68:	ldr	x0, [x21]
  40ab6c:	blr	x1
  40ab70:	ldr	x0, [x21, #8]
  40ab74:	ldr	x1, [x19, #72]
  40ab78:	stp	xzr, x1, [x21]
  40ab7c:	str	x21, [x19, #72]
  40ab80:	mov	x21, x0
  40ab84:	b	40ab44 <__fxstatat@plt+0x7fa4>
  40ab88:	stp	x29, x30, [sp, #-48]!
  40ab8c:	mov	x29, sp
  40ab90:	stp	x19, x20, [sp, #16]
  40ab94:	mov	x19, x0
  40ab98:	ldr	x0, [x0, #64]
  40ab9c:	str	x21, [sp, #32]
  40aba0:	cbnz	x0, 40abd8 <__fxstatat@plt+0x8038>
  40aba4:	ldr	x20, [x19]
  40aba8:	ldr	x0, [x19, #8]
  40abac:	cmp	x0, x20
  40abb0:	b.hi	40ac1c <__fxstatat@plt+0x807c>  // b.pmore
  40abb4:	ldr	x0, [x19, #72]
  40abb8:	cbnz	x0, 40ac3c <__fxstatat@plt+0x809c>
  40abbc:	ldr	x0, [x19]
  40abc0:	bl	402990 <free@plt>
  40abc4:	mov	x0, x19
  40abc8:	ldp	x19, x20, [sp, #16]
  40abcc:	ldr	x21, [sp, #32]
  40abd0:	ldp	x29, x30, [sp], #48
  40abd4:	b	402990 <free@plt>
  40abd8:	ldr	x0, [x19, #32]
  40abdc:	cbz	x0, 40aba4 <__fxstatat@plt+0x8004>
  40abe0:	ldr	x20, [x19]
  40abe4:	ldr	x0, [x19, #8]
  40abe8:	cmp	x0, x20
  40abec:	b.ls	40aba4 <__fxstatat@plt+0x8004>  // b.plast
  40abf0:	ldr	x0, [x20]
  40abf4:	cbnz	x0, 40ac00 <__fxstatat@plt+0x8060>
  40abf8:	add	x20, x20, #0x10
  40abfc:	b	40abe4 <__fxstatat@plt+0x8044>
  40ac00:	mov	x21, x20
  40ac04:	ldr	x0, [x21]
  40ac08:	ldr	x1, [x19, #64]
  40ac0c:	blr	x1
  40ac10:	ldr	x21, [x21, #8]
  40ac14:	cbnz	x21, 40ac04 <__fxstatat@plt+0x8064>
  40ac18:	b	40abf8 <__fxstatat@plt+0x8058>
  40ac1c:	ldr	x0, [x20, #8]
  40ac20:	cbnz	x0, 40ac2c <__fxstatat@plt+0x808c>
  40ac24:	add	x20, x20, #0x10
  40ac28:	b	40aba8 <__fxstatat@plt+0x8008>
  40ac2c:	ldr	x21, [x0, #8]
  40ac30:	bl	402990 <free@plt>
  40ac34:	mov	x0, x21
  40ac38:	b	40ac20 <__fxstatat@plt+0x8080>
  40ac3c:	ldr	x20, [x0, #8]
  40ac40:	bl	402990 <free@plt>
  40ac44:	mov	x0, x20
  40ac48:	b	40abb8 <__fxstatat@plt+0x8018>
  40ac4c:	stp	x29, x30, [sp, #-128]!
  40ac50:	mov	x29, sp
  40ac54:	stp	x19, x20, [sp, #16]
  40ac58:	mov	x19, x0
  40ac5c:	mov	x0, x1
  40ac60:	str	x21, [sp, #32]
  40ac64:	ldr	x21, [x19, #40]
  40ac68:	mov	x1, x21
  40ac6c:	bl	40a318 <__fxstatat@plt+0x7778>
  40ac70:	cbnz	x0, 40ac8c <__fxstatat@plt+0x80ec>
  40ac74:	mov	w20, #0x0                   	// #0
  40ac78:	mov	w0, w20
  40ac7c:	ldp	x19, x20, [sp, #16]
  40ac80:	ldr	x21, [sp, #32]
  40ac84:	ldp	x29, x30, [sp], #128
  40ac88:	ret
  40ac8c:	ldr	x1, [x19, #16]
  40ac90:	mov	x20, x0
  40ac94:	cmp	x1, x0
  40ac98:	b.eq	40ad70 <__fxstatat@plt+0x81d0>  // b.none
  40ac9c:	mov	x1, #0x10                  	// #16
  40aca0:	bl	402800 <calloc@plt>
  40aca4:	str	x0, [sp, #48]
  40aca8:	cbz	x0, 40ac74 <__fxstatat@plt+0x80d4>
  40acac:	stp	x20, xzr, [sp, #64]
  40acb0:	add	x20, x0, x20, lsl #4
  40acb4:	mov	x1, x19
  40acb8:	ldr	x0, [x19, #48]
  40acbc:	str	x0, [sp, #96]
  40acc0:	ldr	x0, [x19, #56]
  40acc4:	str	x0, [sp, #104]
  40acc8:	ldr	x0, [x19, #64]
  40accc:	str	x0, [sp, #112]
  40acd0:	ldr	x0, [x19, #72]
  40acd4:	mov	w2, #0x0                   	// #0
  40acd8:	str	x20, [sp, #56]
  40acdc:	stp	xzr, x21, [sp, #80]
  40ace0:	str	x0, [sp, #120]
  40ace4:	add	x0, sp, #0x30
  40ace8:	bl	40a56c <__fxstatat@plt+0x79cc>
  40acec:	ands	w20, w0, #0xff
  40acf0:	b.eq	40ad28 <__fxstatat@plt+0x8188>  // b.none
  40acf4:	ldr	x0, [x19]
  40acf8:	bl	402990 <free@plt>
  40acfc:	ldr	x0, [sp, #48]
  40ad00:	str	x0, [x19]
  40ad04:	ldr	x0, [sp, #56]
  40ad08:	str	x0, [x19, #8]
  40ad0c:	ldr	x0, [sp, #64]
  40ad10:	str	x0, [x19, #16]
  40ad14:	ldr	x0, [sp, #72]
  40ad18:	str	x0, [x19, #24]
  40ad1c:	ldr	x0, [sp, #120]
  40ad20:	str	x0, [x19, #72]
  40ad24:	b	40ac78 <__fxstatat@plt+0x80d8>
  40ad28:	ldr	x0, [sp, #120]
  40ad2c:	str	x0, [x19, #72]
  40ad30:	add	x1, sp, #0x30
  40ad34:	mov	x0, x19
  40ad38:	mov	w2, #0x1                   	// #1
  40ad3c:	bl	40a56c <__fxstatat@plt+0x79cc>
  40ad40:	tst	w0, #0xff
  40ad44:	b.ne	40ad4c <__fxstatat@plt+0x81ac>  // b.any
  40ad48:	bl	4028b0 <abort@plt>
  40ad4c:	add	x1, sp, #0x30
  40ad50:	mov	x0, x19
  40ad54:	mov	w2, #0x0                   	// #0
  40ad58:	bl	40a56c <__fxstatat@plt+0x79cc>
  40ad5c:	tst	w0, #0xff
  40ad60:	b.eq	40ad48 <__fxstatat@plt+0x81a8>  // b.none
  40ad64:	ldr	x0, [sp, #48]
  40ad68:	bl	402990 <free@plt>
  40ad6c:	b	40ac78 <__fxstatat@plt+0x80d8>
  40ad70:	mov	w20, #0x1                   	// #1
  40ad74:	b	40ac78 <__fxstatat@plt+0x80d8>
  40ad78:	stp	x29, x30, [sp, #-64]!
  40ad7c:	mov	x29, sp
  40ad80:	stp	x19, x20, [sp, #16]
  40ad84:	str	x21, [sp, #32]
  40ad88:	cbnz	x1, 40ad90 <__fxstatat@plt+0x81f0>
  40ad8c:	bl	4028b0 <abort@plt>
  40ad90:	mov	x21, x2
  40ad94:	mov	x19, x0
  40ad98:	mov	x20, x1
  40ad9c:	add	x2, sp, #0x38
  40ada0:	mov	w3, #0x0                   	// #0
  40ada4:	bl	40a3f0 <__fxstatat@plt+0x7850>
  40ada8:	cbz	x0, 40adbc <__fxstatat@plt+0x821c>
  40adac:	cbz	x21, 40adb4 <__fxstatat@plt+0x8214>
  40adb0:	str	x0, [x21]
  40adb4:	mov	w0, #0x0                   	// #0
  40adb8:	b	40ae34 <__fxstatat@plt+0x8294>
  40adbc:	ldr	x0, [x19, #24]
  40adc0:	ldr	x1, [x19, #40]
  40adc4:	ucvtf	s1, x0
  40adc8:	ldr	x0, [x19, #16]
  40adcc:	ldr	s2, [x1, #8]
  40add0:	ucvtf	s0, x0
  40add4:	fmul	s0, s0, s2
  40add8:	fcmpe	s1, s0
  40addc:	b.le	40ae70 <__fxstatat@plt+0x82d0>
  40ade0:	add	x0, x19, #0x28
  40ade4:	bl	40a4d4 <__fxstatat@plt+0x7934>
  40ade8:	ldr	x0, [x19, #16]
  40adec:	ldr	x1, [x19, #40]
  40adf0:	ucvtf	s0, x0
  40adf4:	ldr	x0, [x19, #24]
  40adf8:	ldr	s2, [x1, #8]
  40adfc:	ucvtf	s1, x0
  40ae00:	fmul	s3, s2, s0
  40ae04:	fcmpe	s1, s3
  40ae08:	b.le	40ae70 <__fxstatat@plt+0x82d0>
  40ae0c:	ldrb	w0, [x1, #16]
  40ae10:	ldr	s1, [x1, #12]
  40ae14:	fmul	s0, s0, s1
  40ae18:	cbnz	w0, 40ae20 <__fxstatat@plt+0x8280>
  40ae1c:	fmul	s0, s0, s2
  40ae20:	mov	w0, #0x5f800000            	// #1602224128
  40ae24:	fmov	s1, w0
  40ae28:	fcmpe	s0, s1
  40ae2c:	b.lt	40ae44 <__fxstatat@plt+0x82a4>  // b.tstop
  40ae30:	mov	w0, #0xffffffff            	// #-1
  40ae34:	ldp	x19, x20, [sp, #16]
  40ae38:	ldr	x21, [sp, #32]
  40ae3c:	ldp	x29, x30, [sp], #64
  40ae40:	ret
  40ae44:	fcvtzu	x1, s0
  40ae48:	mov	x0, x19
  40ae4c:	bl	40ac4c <__fxstatat@plt+0x80ac>
  40ae50:	tst	w0, #0xff
  40ae54:	b.eq	40ae30 <__fxstatat@plt+0x8290>  // b.none
  40ae58:	add	x2, sp, #0x38
  40ae5c:	mov	x1, x20
  40ae60:	mov	x0, x19
  40ae64:	mov	w3, #0x0                   	// #0
  40ae68:	bl	40a3f0 <__fxstatat@plt+0x7850>
  40ae6c:	cbnz	x0, 40ad8c <__fxstatat@plt+0x81ec>
  40ae70:	ldr	x21, [sp, #56]
  40ae74:	ldr	x0, [x21]
  40ae78:	cbz	x0, 40aebc <__fxstatat@plt+0x831c>
  40ae7c:	ldr	x0, [x19, #72]
  40ae80:	cbz	x0, 40aeac <__fxstatat@plt+0x830c>
  40ae84:	ldr	x1, [x0, #8]
  40ae88:	str	x1, [x19, #72]
  40ae8c:	ldr	x1, [x21, #8]
  40ae90:	stp	x20, x1, [x0]
  40ae94:	str	x0, [x21, #8]
  40ae98:	ldr	x0, [x19, #32]
  40ae9c:	add	x0, x0, #0x1
  40aea0:	str	x0, [x19, #32]
  40aea4:	mov	w0, #0x1                   	// #1
  40aea8:	b	40ae34 <__fxstatat@plt+0x8294>
  40aeac:	mov	x0, #0x10                  	// #16
  40aeb0:	bl	402730 <malloc@plt>
  40aeb4:	cbz	x0, 40ae30 <__fxstatat@plt+0x8290>
  40aeb8:	b	40ae8c <__fxstatat@plt+0x82ec>
  40aebc:	ldr	x0, [x19, #32]
  40aec0:	str	x20, [x21]
  40aec4:	add	x0, x0, #0x1
  40aec8:	str	x0, [x19, #32]
  40aecc:	ldr	x0, [x19, #24]
  40aed0:	add	x0, x0, #0x1
  40aed4:	str	x0, [x19, #24]
  40aed8:	b	40aea4 <__fxstatat@plt+0x8304>
  40aedc:	stp	x29, x30, [sp, #-48]!
  40aee0:	mov	x29, sp
  40aee4:	add	x2, sp, #0x28
  40aee8:	str	x19, [sp, #16]
  40aeec:	mov	x19, x1
  40aef0:	bl	40ad78 <__fxstatat@plt+0x81d8>
  40aef4:	cmn	w0, #0x1
  40aef8:	b.eq	40af14 <__fxstatat@plt+0x8374>  // b.none
  40aefc:	cbnz	w0, 40af04 <__fxstatat@plt+0x8364>
  40af00:	ldr	x19, [sp, #40]
  40af04:	mov	x0, x19
  40af08:	ldr	x19, [sp, #16]
  40af0c:	ldp	x29, x30, [sp], #48
  40af10:	ret
  40af14:	mov	x19, #0x0                   	// #0
  40af18:	b	40af04 <__fxstatat@plt+0x8364>
  40af1c:	stp	x29, x30, [sp, #-64]!
  40af20:	mov	w3, #0x1                   	// #1
  40af24:	mov	x29, sp
  40af28:	add	x2, sp, #0x38
  40af2c:	stp	x19, x20, [sp, #16]
  40af30:	mov	x19, x0
  40af34:	str	x21, [sp, #32]
  40af38:	bl	40a3f0 <__fxstatat@plt+0x7850>
  40af3c:	mov	x20, x0
  40af40:	cbz	x0, 40afe4 <__fxstatat@plt+0x8444>
  40af44:	ldr	x0, [x19, #32]
  40af48:	sub	x0, x0, #0x1
  40af4c:	str	x0, [x19, #32]
  40af50:	ldr	x0, [sp, #56]
  40af54:	ldr	x0, [x0]
  40af58:	cbnz	x0, 40afe4 <__fxstatat@plt+0x8444>
  40af5c:	ldr	x1, [x19, #24]
  40af60:	ldr	x0, [x19, #40]
  40af64:	sub	x1, x1, #0x1
  40af68:	ucvtf	s0, x1
  40af6c:	ldr	s2, [x0]
  40af70:	str	x1, [x19, #24]
  40af74:	ldr	x1, [x19, #16]
  40af78:	ucvtf	s1, x1
  40af7c:	fmul	s1, s1, s2
  40af80:	fcmpe	s0, s1
  40af84:	b.pl	40afe4 <__fxstatat@plt+0x8444>  // b.nfrst
  40af88:	add	x0, x19, #0x28
  40af8c:	bl	40a4d4 <__fxstatat@plt+0x7934>
  40af90:	ldr	x1, [x19, #16]
  40af94:	ldr	x0, [x19, #40]
  40af98:	ucvtf	s0, x1
  40af9c:	ldr	x1, [x19, #24]
  40afa0:	ldr	s1, [x0]
  40afa4:	ucvtf	s2, x1
  40afa8:	fmul	s1, s0, s1
  40afac:	fcmpe	s2, s1
  40afb0:	b.pl	40afe4 <__fxstatat@plt+0x8444>  // b.nfrst
  40afb4:	ldrb	w1, [x0, #16]
  40afb8:	ldr	s1, [x0, #4]
  40afbc:	fmul	s0, s0, s1
  40afc0:	cbz	w1, 40aff8 <__fxstatat@plt+0x8458>
  40afc4:	fcvtzu	x1, s0
  40afc8:	mov	x0, x19
  40afcc:	bl	40ac4c <__fxstatat@plt+0x80ac>
  40afd0:	tst	w0, #0xff
  40afd4:	b.ne	40afe4 <__fxstatat@plt+0x8444>  // b.any
  40afd8:	ldr	x0, [x19, #72]
  40afdc:	cbnz	x0, 40b004 <__fxstatat@plt+0x8464>
  40afe0:	str	xzr, [x19, #72]
  40afe4:	mov	x0, x20
  40afe8:	ldp	x19, x20, [sp, #16]
  40afec:	ldr	x21, [sp, #32]
  40aff0:	ldp	x29, x30, [sp], #64
  40aff4:	ret
  40aff8:	ldr	s1, [x0, #8]
  40affc:	fmul	s0, s0, s1
  40b000:	b	40afc4 <__fxstatat@plt+0x8424>
  40b004:	ldr	x21, [x0, #8]
  40b008:	bl	402990 <free@plt>
  40b00c:	mov	x0, x21
  40b010:	b	40afdc <__fxstatat@plt+0x843c>
  40b014:	stp	x29, x30, [sp, #-32]!
  40b018:	mov	x29, sp
  40b01c:	stp	x19, x20, [sp, #16]
  40b020:	mov	x20, x0
  40b024:	mov	x19, x1
  40b028:	ldr	x0, [x0]
  40b02c:	bl	4107ac <_obstack_memory_used@@Base+0x5f0>
  40b030:	ldr	x1, [x20, #8]
  40b034:	eor	x0, x0, x1
  40b038:	udiv	x1, x0, x19
  40b03c:	msub	x0, x1, x19, x0
  40b040:	ldp	x19, x20, [sp, #16]
  40b044:	ldp	x29, x30, [sp], #32
  40b048:	ret
  40b04c:	ldr	x0, [x0, #8]
  40b050:	udiv	x2, x0, x1
  40b054:	msub	x0, x2, x1, x0
  40b058:	ret
  40b05c:	ldr	x3, [x0, #8]
  40b060:	ldr	x2, [x1, #8]
  40b064:	cmp	x3, x2
  40b068:	b.ne	40b0a0 <__fxstatat@plt+0x8500>  // b.any
  40b06c:	ldr	x3, [x0, #16]
  40b070:	ldr	x2, [x1, #16]
  40b074:	cmp	x3, x2
  40b078:	b.ne	40b0a0 <__fxstatat@plt+0x8500>  // b.any
  40b07c:	stp	x29, x30, [sp, #-16]!
  40b080:	mov	x29, sp
  40b084:	ldr	x1, [x1]
  40b088:	ldr	x0, [x0]
  40b08c:	bl	40ed2c <__fxstatat@plt+0xc18c>
  40b090:	and	w0, w0, #0xff
  40b094:	and	w0, w0, #0x1
  40b098:	ldp	x29, x30, [sp], #16
  40b09c:	ret
  40b0a0:	mov	w0, #0x0                   	// #0
  40b0a4:	and	w0, w0, #0x1
  40b0a8:	ret
  40b0ac:	ldr	x3, [x0, #8]
  40b0b0:	ldr	x2, [x1, #8]
  40b0b4:	cmp	x3, x2
  40b0b8:	b.ne	40b0f0 <__fxstatat@plt+0x8550>  // b.any
  40b0bc:	ldr	x3, [x0, #16]
  40b0c0:	ldr	x2, [x1, #16]
  40b0c4:	cmp	x3, x2
  40b0c8:	b.ne	40b0f0 <__fxstatat@plt+0x8550>  // b.any
  40b0cc:	stp	x29, x30, [sp, #-16]!
  40b0d0:	mov	x29, sp
  40b0d4:	ldr	x0, [x0]
  40b0d8:	ldr	x1, [x1]
  40b0dc:	bl	402950 <strcmp@plt>
  40b0e0:	cmp	w0, #0x0
  40b0e4:	cset	w0, eq  // eq = none
  40b0e8:	ldp	x29, x30, [sp], #16
  40b0ec:	ret
  40b0f0:	mov	w0, #0x0                   	// #0
  40b0f4:	ret
  40b0f8:	stp	x29, x30, [sp, #-32]!
  40b0fc:	mov	x29, sp
  40b100:	str	x19, [sp, #16]
  40b104:	mov	x19, x0
  40b108:	ldr	x0, [x0]
  40b10c:	bl	402990 <free@plt>
  40b110:	mov	x0, x19
  40b114:	ldr	x19, [sp, #16]
  40b118:	ldp	x29, x30, [sp], #32
  40b11c:	b	402990 <free@plt>
  40b120:	cmp	w0, #0x1
  40b124:	b.eq	40b1a0 <__fxstatat@plt+0x8600>  // b.none
  40b128:	stp	x29, x30, [sp, #-48]!
  40b12c:	mov	x29, sp
  40b130:	stp	x19, x20, [sp, #16]
  40b134:	mov	w19, w0
  40b138:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x5e44>
  40b13c:	add	x0, x0, #0x1e0
  40b140:	str	q0, [sp, #32]
  40b144:	ldr	q1, [x0]
  40b148:	bl	411224 <_obstack_memory_used@@Base+0x1068>
  40b14c:	ldr	q2, [sp, #32]
  40b150:	tbz	w0, #31, 40b188 <__fxstatat@plt+0x85e8>
  40b154:	mov	v0.16b, v2.16b
  40b158:	bl	411a3c <_obstack_memory_used@@Base+0x1880>
  40b15c:	mov	x20, x0
  40b160:	cbnz	w19, 40b198 <__fxstatat@plt+0x85f8>
  40b164:	bl	411b48 <_obstack_memory_used@@Base+0x198c>
  40b168:	ldr	q2, [sp, #32]
  40b16c:	mov	v1.16b, v2.16b
  40b170:	bl	411124 <_obstack_memory_used@@Base+0xf68>
  40b174:	cmp	w0, #0x0
  40b178:	cset	w0, ne  // ne = any
  40b17c:	add	x0, x20, w0, sxtw
  40b180:	bl	411b48 <_obstack_memory_used@@Base+0x198c>
  40b184:	mov	v2.16b, v0.16b
  40b188:	mov	v0.16b, v2.16b
  40b18c:	ldp	x19, x20, [sp, #16]
  40b190:	ldp	x29, x30, [sp], #48
  40b194:	ret
  40b198:	mov	w0, #0x0                   	// #0
  40b19c:	b	40b17c <__fxstatat@plt+0x85dc>
  40b1a0:	ret
  40b1a4:	stp	x29, x30, [sp, #-224]!
  40b1a8:	mov	x29, sp
  40b1ac:	stp	x27, x28, [sp, #80]
  40b1b0:	mov	x28, x0
  40b1b4:	ands	w0, w2, #0x20
  40b1b8:	str	w0, [sp, #116]
  40b1bc:	mov	x0, #0x3e8                 	// #1000
  40b1c0:	stp	x19, x20, [sp, #16]
  40b1c4:	mov	x20, x1
  40b1c8:	stp	x21, x22, [sp, #32]
  40b1cc:	mov	w22, w2
  40b1d0:	stp	x23, x24, [sp, #48]
  40b1d4:	mov	x24, x4
  40b1d8:	mov	x23, #0x400                 	// #1024
  40b1dc:	csel	x23, x23, x0, ne  // ne = any
  40b1e0:	stp	x25, x26, [sp, #64]
  40b1e4:	mov	x26, x3
  40b1e8:	and	w25, w2, #0x3
  40b1ec:	bl	4026b0 <localeconv@plt>
  40b1f0:	ldr	x27, [x0]
  40b1f4:	mov	x19, x0
  40b1f8:	mov	x0, x27
  40b1fc:	bl	402540 <strlen@plt>
  40b200:	mov	x21, x0
  40b204:	sub	x0, x0, #0x1
  40b208:	cmp	x0, #0xf
  40b20c:	b.ls	40b21c <__fxstatat@plt+0x867c>  // b.plast
  40b210:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x5e44>
  40b214:	add	x27, x1, #0x112
  40b218:	mov	x21, #0x1                   	// #1
  40b21c:	ldr	x0, [x19, #16]
  40b220:	str	x0, [sp, #120]
  40b224:	ldr	x0, [x19, #8]
  40b228:	str	x0, [sp, #104]
  40b22c:	bl	402540 <strlen@plt>
  40b230:	cmp	x0, #0x10
  40b234:	b.ls	40b244 <__fxstatat@plt+0x86a4>  // b.plast
  40b238:	adrp	x0, 411000 <_obstack_memory_used@@Base+0xe44>
  40b23c:	add	x0, x0, #0xdf0
  40b240:	str	x0, [sp, #104]
  40b244:	add	x19, x20, #0x287
  40b248:	cmp	x24, x26
  40b24c:	and	w7, w22, #0x10
  40b250:	b.hi	40b27c <__fxstatat@plt+0x86dc>  // b.pmore
  40b254:	udiv	x0, x26, x24
  40b258:	msub	x2, x0, x24, x26
  40b25c:	cbnz	x2, 40b330 <__fxstatat@plt+0x8790>
  40b260:	mul	x6, x28, x0
  40b264:	udiv	x0, x6, x0
  40b268:	cmp	x0, x28
  40b26c:	b.ne	40b330 <__fxstatat@plt+0x8790>  // b.any
  40b270:	mov	w0, #0x0                   	// #0
  40b274:	mov	w2, #0x0                   	// #0
  40b278:	b	40b2b8 <__fxstatat@plt+0x8718>
  40b27c:	cbz	x26, 40b330 <__fxstatat@plt+0x8790>
  40b280:	udiv	x4, x24, x26
  40b284:	msub	x0, x4, x26, x24
  40b288:	cbnz	x0, 40b330 <__fxstatat@plt+0x8790>
  40b28c:	udiv	x6, x28, x4
  40b290:	mov	x0, #0xa                   	// #10
  40b294:	msub	x5, x6, x4, x28
  40b298:	mul	x5, x5, x0
  40b29c:	udiv	x2, x5, x4
  40b2a0:	msub	x5, x2, x4, x5
  40b2a4:	lsl	x5, x5, #1
  40b2a8:	cmp	x4, x5
  40b2ac:	b.ls	40b324 <__fxstatat@plt+0x8784>  // b.plast
  40b2b0:	cmp	x5, #0x0
  40b2b4:	cset	w0, ne  // ne = any
  40b2b8:	cbz	w7, 40b6e0 <__fxstatat@plt+0x8b40>
  40b2bc:	mov	w9, w23
  40b2c0:	cmp	x6, w23, uxtw
  40b2c4:	b.cc	40b6ec <__fxstatat@plt+0x8b4c>  // b.lo, b.ul, b.last
  40b2c8:	mov	w28, #0x0                   	// #0
  40b2cc:	mov	w10, #0xa                   	// #10
  40b2d0:	udiv	x8, x6, x9
  40b2d4:	asr	w3, w0, #1
  40b2d8:	msub	x6, x8, x9, x6
  40b2dc:	madd	w2, w10, w6, w2
  40b2e0:	mov	x6, x8
  40b2e4:	udiv	w4, w2, w23
  40b2e8:	msub	w2, w4, w23, w2
  40b2ec:	add	w3, w3, w2, lsl #1
  40b2f0:	mov	w2, w4
  40b2f4:	add	w0, w0, w3
  40b2f8:	cmp	w23, w3
  40b2fc:	b.ls	40b5a4 <__fxstatat@plt+0x8a04>  // b.plast
  40b300:	cmp	w0, #0x0
  40b304:	cset	w0, ne  // ne = any
  40b308:	add	w28, w28, #0x1
  40b30c:	cmp	x9, x8
  40b310:	b.hi	40b5b4 <__fxstatat@plt+0x8a14>  // b.pmore
  40b314:	cmp	w28, #0x8
  40b318:	b.ne	40b2d0 <__fxstatat@plt+0x8730>  // b.any
  40b31c:	mov	x26, x19
  40b320:	b	40b634 <__fxstatat@plt+0x8a94>
  40b324:	cset	w0, cc  // cc = lo, ul, last
  40b328:	add	w0, w0, #0x2
  40b32c:	b	40b2b8 <__fxstatat@plt+0x8718>
  40b330:	mov	x0, x26
  40b334:	str	w7, [sp, #144]
  40b338:	bl	411b48 <_obstack_memory_used@@Base+0x198c>
  40b33c:	str	q0, [sp, #128]
  40b340:	mov	x0, x24
  40b344:	bl	411b48 <_obstack_memory_used@@Base+0x198c>
  40b348:	ldr	q2, [sp, #128]
  40b34c:	mov	v1.16b, v0.16b
  40b350:	mov	v0.16b, v2.16b
  40b354:	bl	410974 <_obstack_memory_used@@Base+0x7b8>
  40b358:	mov	x0, x28
  40b35c:	str	q0, [sp, #128]
  40b360:	bl	411b48 <_obstack_memory_used@@Base+0x198c>
  40b364:	mov	v1.16b, v0.16b
  40b368:	ldr	q2, [sp, #128]
  40b36c:	mov	v0.16b, v2.16b
  40b370:	bl	411364 <_obstack_memory_used@@Base+0x11a8>
  40b374:	ldr	w7, [sp, #144]
  40b378:	mov	v4.16b, v0.16b
  40b37c:	cbnz	w7, 40b464 <__fxstatat@plt+0x88c4>
  40b380:	mov	w0, w25
  40b384:	bl	40b120 <__fxstatat@plt+0x8580>
  40b388:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x5e44>
  40b38c:	add	x3, x3, #0x1a0
  40b390:	mov	x2, #0xffffffffffffffff    	// #-1
  40b394:	mov	w1, #0x1                   	// #1
  40b398:	mov	x0, x20
  40b39c:	bl	402560 <__sprintf_chk@plt>
  40b3a0:	mov	x0, x20
  40b3a4:	bl	402540 <strlen@plt>
  40b3a8:	mov	x26, x0
  40b3ac:	mov	x21, #0x0                   	// #0
  40b3b0:	mov	w28, #0xffffffff            	// #-1
  40b3b4:	sub	x27, x19, x26
  40b3b8:	mov	x2, x26
  40b3bc:	mov	x1, x20
  40b3c0:	mov	x0, x27
  40b3c4:	bl	4024e0 <memmove@plt>
  40b3c8:	sub	x2, x26, x21
  40b3cc:	add	x26, x27, x2
  40b3d0:	tbz	w22, #2, 40b728 <__fxstatat@plt+0x8b88>
  40b3d4:	ldr	x0, [sp, #104]
  40b3d8:	sub	x21, x26, x27
  40b3dc:	mov	x25, #0xffffffffffffffff    	// #-1
  40b3e0:	bl	402540 <strlen@plt>
  40b3e4:	str	x0, [sp, #128]
  40b3e8:	mov	x2, x21
  40b3ec:	mov	x1, x27
  40b3f0:	add	x0, sp, #0xb0
  40b3f4:	mov	x3, #0x29                  	// #41
  40b3f8:	bl	4026e0 <__memcpy_chk@plt>
  40b3fc:	ldr	x0, [sp, #120]
  40b400:	ldrb	w0, [x0]
  40b404:	cbz	w0, 40b420 <__fxstatat@plt+0x8880>
  40b408:	and	x25, x0, #0xff
  40b40c:	cmp	w0, #0xff
  40b410:	ldr	x0, [sp, #120]
  40b414:	csel	x25, x25, x21, ne  // ne = any
  40b418:	add	x0, x0, #0x1
  40b41c:	str	x0, [sp, #120]
  40b420:	cmp	x25, x21
  40b424:	add	x0, sp, #0xb0
  40b428:	csel	x25, x25, x21, ls  // ls = plast
  40b42c:	sub	x21, x21, x25
  40b430:	sub	x27, x26, x25
  40b434:	add	x1, x0, x21
  40b438:	mov	x2, x25
  40b43c:	mov	x0, x27
  40b440:	bl	4024d0 <memcpy@plt>
  40b444:	cbz	x21, 40b728 <__fxstatat@plt+0x8b88>
  40b448:	ldr	x1, [sp, #104]
  40b44c:	ldr	x0, [sp, #128]
  40b450:	sub	x26, x27, x0
  40b454:	mov	x2, x0
  40b458:	mov	x0, x26
  40b45c:	bl	4024d0 <memcpy@plt>
  40b460:	b	40b3fc <__fxstatat@plt+0x885c>
  40b464:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x5e44>
  40b468:	add	x0, x0, #0x1f0
  40b46c:	mov	w28, #0x0                   	// #0
  40b470:	ldr	q2, [x0]
  40b474:	mov	w0, w23
  40b478:	str	q2, [sp, #144]
  40b47c:	str	q4, [sp, #160]
  40b480:	bl	4119f0 <_obstack_memory_used@@Base+0x1834>
  40b484:	ldr	q2, [sp, #144]
  40b488:	mov	v1.16b, v0.16b
  40b48c:	str	q0, [sp, #128]
  40b490:	add	w28, w28, #0x1
  40b494:	mov	v0.16b, v2.16b
  40b498:	bl	411364 <_obstack_memory_used@@Base+0x11a8>
  40b49c:	ldr	q6, [sp, #128]
  40b4a0:	mov	v1.16b, v0.16b
  40b4a4:	str	q0, [sp, #144]
  40b4a8:	mov	v0.16b, v6.16b
  40b4ac:	bl	411364 <_obstack_memory_used@@Base+0x11a8>
  40b4b0:	ldr	q4, [sp, #160]
  40b4b4:	mov	v1.16b, v4.16b
  40b4b8:	str	q4, [sp, #128]
  40b4bc:	bl	411224 <_obstack_memory_used@@Base+0x1068>
  40b4c0:	cmp	w0, #0x0
  40b4c4:	ldr	q4, [sp, #128]
  40b4c8:	ldr	q2, [sp, #144]
  40b4cc:	b.gt	40b4d8 <__fxstatat@plt+0x8938>
  40b4d0:	cmp	w28, #0x8
  40b4d4:	b.ne	40b474 <__fxstatat@plt+0x88d4>  // b.any
  40b4d8:	mov	v1.16b, v2.16b
  40b4dc:	mov	v0.16b, v4.16b
  40b4e0:	bl	410974 <_obstack_memory_used@@Base+0x7b8>
  40b4e4:	str	q0, [sp, #128]
  40b4e8:	mov	w0, w25
  40b4ec:	add	x21, x21, #0x1
  40b4f0:	bl	40b120 <__fxstatat@plt+0x8580>
  40b4f4:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x5e44>
  40b4f8:	add	x3, x3, #0x1a6
  40b4fc:	mov	x2, #0xffffffffffffffff    	// #-1
  40b500:	mov	w1, #0x1                   	// #1
  40b504:	mov	x0, x20
  40b508:	bl	402560 <__sprintf_chk@plt>
  40b50c:	mov	x0, x20
  40b510:	bl	402540 <strlen@plt>
  40b514:	mov	x26, x0
  40b518:	ldr	w0, [sp, #116]
  40b51c:	ldr	q2, [sp, #128]
  40b520:	cmp	w0, #0x0
  40b524:	cset	x0, eq  // eq = none
  40b528:	add	x0, x0, #0x1
  40b52c:	add	x0, x0, x21
  40b530:	cmp	x0, x26
  40b534:	b.cc	40b54c <__fxstatat@plt+0x89ac>  // b.lo, b.ul, b.last
  40b538:	tbz	w22, #3, 40b3b4 <__fxstatat@plt+0x8814>
  40b53c:	add	x0, x20, x26
  40b540:	ldurb	w0, [x0, #-1]
  40b544:	cmp	w0, #0x30
  40b548:	b.ne	40b3b4 <__fxstatat@plt+0x8814>  // b.any
  40b54c:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x5e44>
  40b550:	add	x0, x0, #0x200
  40b554:	mov	v0.16b, v2.16b
  40b558:	mov	x21, #0x0                   	// #0
  40b55c:	ldr	q1, [x0]
  40b560:	bl	411364 <_obstack_memory_used@@Base+0x11a8>
  40b564:	mov	w0, w25
  40b568:	bl	40b120 <__fxstatat@plt+0x8580>
  40b56c:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x5e44>
  40b570:	add	x0, x0, #0x200
  40b574:	ldr	q1, [x0]
  40b578:	bl	410974 <_obstack_memory_used@@Base+0x7b8>
  40b57c:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x5e44>
  40b580:	add	x3, x3, #0x1a0
  40b584:	mov	x2, #0xffffffffffffffff    	// #-1
  40b588:	mov	w1, #0x1                   	// #1
  40b58c:	mov	x0, x20
  40b590:	bl	402560 <__sprintf_chk@plt>
  40b594:	mov	x0, x20
  40b598:	bl	402540 <strlen@plt>
  40b59c:	mov	x26, x0
  40b5a0:	b	40b3b4 <__fxstatat@plt+0x8814>
  40b5a4:	cmp	w23, w0
  40b5a8:	cset	w0, cc  // cc = lo, ul, last
  40b5ac:	add	w0, w0, #0x2
  40b5b0:	b	40b308 <__fxstatat@plt+0x8768>
  40b5b4:	cmp	x8, #0x9
  40b5b8:	b.hi	40b31c <__fxstatat@plt+0x877c>  // b.pmore
  40b5bc:	cmp	w25, #0x1
  40b5c0:	b.ne	40b6c8 <__fxstatat@plt+0x8b28>  // b.any
  40b5c4:	and	w3, w4, #0x1
  40b5c8:	add	w3, w3, w0
  40b5cc:	cmp	w3, #0x2
  40b5d0:	cset	w3, gt
  40b5d4:	cbz	w3, 40b7e4 <__fxstatat@plt+0x8c44>
  40b5d8:	add	w2, w4, #0x1
  40b5dc:	cmp	w4, #0x9
  40b5e0:	b.ne	40b5fc <__fxstatat@plt+0x8a5c>  // b.any
  40b5e4:	add	x6, x8, #0x1
  40b5e8:	cmp	x8, #0x9
  40b5ec:	b.eq	40b6f8 <__fxstatat@plt+0x8b58>  // b.none
  40b5f0:	mov	w0, #0x0                   	// #0
  40b5f4:	and	w2, w22, #0x8
  40b5f8:	tbnz	w22, #3, 40b708 <__fxstatat@plt+0x8b68>
  40b5fc:	add	x4, x20, #0x286
  40b600:	add	w2, w2, #0x30
  40b604:	strb	w2, [x20, #646]
  40b608:	sub	x26, x4, x21
  40b60c:	mov	x2, x21
  40b610:	mov	x1, x27
  40b614:	mov	x0, x26
  40b618:	str	x6, [sp, #128]
  40b61c:	str	w7, [sp, #144]
  40b620:	bl	4024d0 <memcpy@plt>
  40b624:	ldr	w7, [sp, #144]
  40b628:	mov	w0, #0x0                   	// #0
  40b62c:	ldr	x6, [sp, #128]
  40b630:	mov	w2, #0x0                   	// #0
  40b634:	cmp	w25, #0x1
  40b638:	b.ne	40b710 <__fxstatat@plt+0x8b70>  // b.any
  40b63c:	and	x3, x6, #0x1
  40b640:	add	x0, x3, w0, sxtw
  40b644:	cmp	x0, #0x0
  40b648:	cinc	w2, w2, ne  // ne = any
  40b64c:	cmp	w2, #0x5
  40b650:	cset	w0, gt
  40b654:	cbz	w0, 40b69c <__fxstatat@plt+0x8afc>
  40b658:	add	x6, x6, #0x1
  40b65c:	cbz	w7, 40b69c <__fxstatat@plt+0x8afc>
  40b660:	cmp	x6, w23, uxtw
  40b664:	b.ne	40b69c <__fxstatat@plt+0x8afc>  // b.any
  40b668:	cmp	w28, #0x8
  40b66c:	b.eq	40b69c <__fxstatat@plt+0x8afc>  // b.none
  40b670:	add	w28, w28, #0x1
  40b674:	tbnz	w22, #3, 40b698 <__fxstatat@plt+0x8af8>
  40b678:	mov	w0, #0x30                  	// #48
  40b67c:	sturb	w0, [x26, #-1]
  40b680:	mvn	x0, x21
  40b684:	mov	x2, x21
  40b688:	add	x26, x26, x0
  40b68c:	mov	x1, x27
  40b690:	mov	x0, x26
  40b694:	bl	4024d0 <memcpy@plt>
  40b698:	mov	x6, #0x1                   	// #1
  40b69c:	mov	x27, x26
  40b6a0:	mov	x2, #0xa                   	// #10
  40b6a4:	udiv	x1, x6, x2
  40b6a8:	msub	x0, x1, x2, x6
  40b6ac:	add	w0, w0, #0x30
  40b6b0:	strb	w0, [x27, #-1]!
  40b6b4:	mov	x0, x6
  40b6b8:	mov	x6, x1
  40b6bc:	cmp	x0, #0x9
  40b6c0:	b.hi	40b6a4 <__fxstatat@plt+0x8b04>  // b.pmore
  40b6c4:	b	40b3d0 <__fxstatat@plt+0x8830>
  40b6c8:	cmp	w25, #0x0
  40b6cc:	cset	w3, eq  // eq = none
  40b6d0:	cmp	w0, #0x0
  40b6d4:	cset	w9, gt
  40b6d8:	and	w3, w3, w9
  40b6dc:	b	40b5d4 <__fxstatat@plt+0x8a34>
  40b6e0:	mov	x26, x19
  40b6e4:	mov	w28, #0xffffffff            	// #-1
  40b6e8:	b	40b634 <__fxstatat@plt+0x8a94>
  40b6ec:	mov	x26, x19
  40b6f0:	mov	w28, #0x0                   	// #0
  40b6f4:	b	40b634 <__fxstatat@plt+0x8a94>
  40b6f8:	mov	x26, x19
  40b6fc:	mov	w0, #0x0                   	// #0
  40b700:	mov	w2, #0x0                   	// #0
  40b704:	b	40b634 <__fxstatat@plt+0x8a94>
  40b708:	mov	x26, x19
  40b70c:	b	40b700 <__fxstatat@plt+0x8b60>
  40b710:	cbnz	w25, 40b720 <__fxstatat@plt+0x8b80>
  40b714:	add	w0, w2, w0
  40b718:	cmp	w0, #0x0
  40b71c:	b	40b650 <__fxstatat@plt+0x8ab0>
  40b720:	mov	w0, #0x0                   	// #0
  40b724:	b	40b654 <__fxstatat@plt+0x8ab4>
  40b728:	tbz	w22, #7, 40b7b8 <__fxstatat@plt+0x8c18>
  40b72c:	cmn	w28, #0x1
  40b730:	b.ne	40b758 <__fxstatat@plt+0x8bb8>  // b.any
  40b734:	mov	x0, #0x1                   	// #1
  40b738:	mov	w28, #0x0                   	// #0
  40b73c:	b	40b750 <__fxstatat@plt+0x8bb0>
  40b740:	add	w28, w28, #0x1
  40b744:	cmp	w28, #0x8
  40b748:	b.eq	40b758 <__fxstatat@plt+0x8bb8>  // b.none
  40b74c:	mul	x0, x0, x23
  40b750:	cmp	x0, x24
  40b754:	b.cc	40b740 <__fxstatat@plt+0x8ba0>  // b.lo, b.ul, b.last
  40b758:	and	w1, w22, #0x100
  40b75c:	orr	w0, w1, w28
  40b760:	cbz	w0, 40b7b8 <__fxstatat@plt+0x8c18>
  40b764:	tbz	w22, #6, 40b774 <__fxstatat@plt+0x8bd4>
  40b768:	add	x19, x20, #0x288
  40b76c:	mov	w0, #0x20                  	// #32
  40b770:	strb	w0, [x20, #647]
  40b774:	cbz	w28, 40b798 <__fxstatat@plt+0x8bf8>
  40b778:	ldr	w0, [sp, #116]
  40b77c:	cbnz	w0, 40b788 <__fxstatat@plt+0x8be8>
  40b780:	cmp	w28, #0x1
  40b784:	b.eq	40b7dc <__fxstatat@plt+0x8c3c>  // b.none
  40b788:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x5e44>
  40b78c:	add	x0, x0, #0x210
  40b790:	ldrb	w0, [x0, w28, sxtw]
  40b794:	strb	w0, [x19], #1
  40b798:	cbz	w1, 40b7b8 <__fxstatat@plt+0x8c18>
  40b79c:	ldr	w0, [sp, #116]
  40b7a0:	cbz	w0, 40b7b0 <__fxstatat@plt+0x8c10>
  40b7a4:	cbz	w28, 40b7b0 <__fxstatat@plt+0x8c10>
  40b7a8:	mov	w0, #0x69                  	// #105
  40b7ac:	strb	w0, [x19], #1
  40b7b0:	mov	w0, #0x42                  	// #66
  40b7b4:	strb	w0, [x19], #1
  40b7b8:	strb	wzr, [x19]
  40b7bc:	mov	x0, x27
  40b7c0:	ldp	x19, x20, [sp, #16]
  40b7c4:	ldp	x21, x22, [sp, #32]
  40b7c8:	ldp	x23, x24, [sp, #48]
  40b7cc:	ldp	x25, x26, [sp, #64]
  40b7d0:	ldp	x27, x28, [sp, #80]
  40b7d4:	ldp	x29, x30, [sp], #224
  40b7d8:	ret
  40b7dc:	mov	w0, #0x6b                  	// #107
  40b7e0:	b	40b794 <__fxstatat@plt+0x8bf4>
  40b7e4:	cbz	w4, 40b5f4 <__fxstatat@plt+0x8a54>
  40b7e8:	b	40b5fc <__fxstatat@plt+0x8a5c>
  40b7ec:	stp	x29, x30, [sp, #-80]!
  40b7f0:	mov	x29, sp
  40b7f4:	stp	x19, x20, [sp, #16]
  40b7f8:	mov	x19, x0
  40b7fc:	stp	x21, x22, [sp, #32]
  40b800:	mov	x22, x1
  40b804:	mov	x21, x2
  40b808:	str	x23, [sp, #48]
  40b80c:	cbnz	x0, 40b868 <__fxstatat@plt+0x8cc8>
  40b810:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2e44>
  40b814:	add	x0, x0, #0xeec
  40b818:	bl	402b40 <getenv@plt>
  40b81c:	mov	x19, x0
  40b820:	cbnz	x0, 40b868 <__fxstatat@plt+0x8cc8>
  40b824:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x5e44>
  40b828:	add	x0, x0, #0x1ac
  40b82c:	bl	402b40 <getenv@plt>
  40b830:	mov	x19, x0
  40b834:	cbnz	x0, 40b868 <__fxstatat@plt+0x8cc8>
  40b838:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x5e44>
  40b83c:	add	x0, x0, #0x1b6
  40b840:	bl	402b40 <getenv@plt>
  40b844:	cmp	x0, #0x0
  40b848:	mov	x1, #0x400                 	// #1024
  40b84c:	mov	x0, #0x200                 	// #512
  40b850:	mov	w20, #0x0                   	// #0
  40b854:	csel	x0, x0, x1, ne  // ne = any
  40b858:	str	x0, [x21]
  40b85c:	mov	w0, #0x0                   	// #0
  40b860:	str	w20, [x22]
  40b864:	b	40b918 <__fxstatat@plt+0x8d78>
  40b868:	ldrb	w0, [x19]
  40b86c:	cmp	w0, #0x27
  40b870:	b.ne	40b8b4 <__fxstatat@plt+0x8d14>  // b.any
  40b874:	add	x19, x19, #0x1
  40b878:	mov	w20, #0x4                   	// #4
  40b87c:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x5e44>
  40b880:	add	x23, x0, #0x210
  40b884:	add	x2, x23, #0xc
  40b888:	add	x1, x23, #0x18
  40b88c:	mov	x0, x19
  40b890:	mov	x3, #0x4                   	// #4
  40b894:	bl	408ec4 <__fxstatat@plt+0x6324>
  40b898:	tbnz	w0, #31, 40b8bc <__fxstatat@plt+0x8d1c>
  40b89c:	add	x0, x23, w0, sxtw #2
  40b8a0:	ldr	w0, [x0, #12]
  40b8a4:	orr	w20, w20, w0
  40b8a8:	mov	x0, #0x1                   	// #1
  40b8ac:	str	x0, [x21]
  40b8b0:	b	40b85c <__fxstatat@plt+0x8cbc>
  40b8b4:	mov	w20, #0x0                   	// #0
  40b8b8:	b	40b87c <__fxstatat@plt+0x8cdc>
  40b8bc:	adrp	x4, 416000 <_obstack_memory_used@@Base+0x5e44>
  40b8c0:	mov	x3, x21
  40b8c4:	add	x4, x4, #0x1c6
  40b8c8:	add	x1, sp, #0x48
  40b8cc:	mov	x0, x19
  40b8d0:	mov	w2, #0x0                   	// #0
  40b8d4:	bl	40fae0 <__fxstatat@plt+0xcf40>
  40b8d8:	cbnz	w0, 40b914 <__fxstatat@plt+0x8d74>
  40b8dc:	ldr	x1, [sp, #72]
  40b8e0:	ldrb	w0, [x19]
  40b8e4:	sub	w0, w0, #0x30
  40b8e8:	and	w0, w0, #0xff
  40b8ec:	cmp	w0, #0x9
  40b8f0:	b.ls	40b85c <__fxstatat@plt+0x8cbc>  // b.plast
  40b8f4:	cmp	x1, x19
  40b8f8:	b.ne	40b96c <__fxstatat@plt+0x8dcc>  // b.any
  40b8fc:	ldurb	w0, [x1, #-1]
  40b900:	cmp	w0, #0x42
  40b904:	b.eq	40b958 <__fxstatat@plt+0x8db8>  // b.none
  40b908:	orr	w20, w20, #0x80
  40b90c:	orr	w20, w20, #0x20
  40b910:	b	40b85c <__fxstatat@plt+0x8cbc>
  40b914:	str	wzr, [x22]
  40b918:	ldr	x1, [x21]
  40b91c:	cbnz	x1, 40b944 <__fxstatat@plt+0x8da4>
  40b920:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x5e44>
  40b924:	add	x0, x0, #0x1b6
  40b928:	bl	402b40 <getenv@plt>
  40b92c:	cmp	x0, #0x0
  40b930:	mov	x1, #0x400                 	// #1024
  40b934:	mov	x0, #0x200                 	// #512
  40b938:	csel	x0, x0, x1, ne  // ne = any
  40b93c:	str	x0, [x21]
  40b940:	mov	w0, #0x4                   	// #4
  40b944:	ldp	x19, x20, [sp, #16]
  40b948:	ldp	x21, x22, [sp, #32]
  40b94c:	ldr	x23, [sp, #48]
  40b950:	ldp	x29, x30, [sp], #80
  40b954:	ret
  40b958:	ldurb	w0, [x1, #-2]
  40b95c:	orr	w20, w20, #0x180
  40b960:	cmp	w0, #0x69
  40b964:	b.ne	40b85c <__fxstatat@plt+0x8cbc>  // b.any
  40b968:	b	40b90c <__fxstatat@plt+0x8d6c>
  40b96c:	add	x19, x19, #0x1
  40b970:	b	40b8e0 <__fxstatat@plt+0x8d40>
  40b974:	stp	x29, x30, [sp, #-48]!
  40b978:	mov	x29, sp
  40b97c:	stp	x21, x22, [sp, #32]
  40b980:	adrp	x22, 42c000 <__progname@@GLIBC_2.17+0xa28>
  40b984:	mov	w21, w0
  40b988:	stp	x19, x20, [sp, #16]
  40b98c:	ldr	x19, [x22, #1856]
  40b990:	cbnz	x19, 40b9ac <__fxstatat@plt+0x8e0c>
  40b994:	mov	w0, w21
  40b998:	bl	402960 <getpwuid@plt>
  40b99c:	cbnz	x0, 40b9c0 <__fxstatat@plt+0x8e20>
  40b9a0:	adrp	x20, 411000 <_obstack_memory_used@@Base+0xe44>
  40b9a4:	add	x20, x20, #0xdf0
  40b9a8:	b	40b9c4 <__fxstatat@plt+0x8e24>
  40b9ac:	ldr	w0, [x19]
  40b9b0:	cmp	w0, w21
  40b9b4:	b.eq	40b9f4 <__fxstatat@plt+0x8e54>  // b.none
  40b9b8:	ldr	x19, [x19, #8]
  40b9bc:	b	40b990 <__fxstatat@plt+0x8df0>
  40b9c0:	ldr	x20, [x0]
  40b9c4:	mov	x0, x20
  40b9c8:	bl	402540 <strlen@plt>
  40b9cc:	add	x0, x0, #0x18
  40b9d0:	and	x0, x0, #0xfffffffffffffff8
  40b9d4:	bl	40f24c <__fxstatat@plt+0xc6ac>
  40b9d8:	mov	x19, x0
  40b9dc:	str	w21, [x0], #16
  40b9e0:	mov	x1, x20
  40b9e4:	bl	402a20 <strcpy@plt>
  40b9e8:	ldr	x0, [x22, #1856]
  40b9ec:	str	x19, [x22, #1856]
  40b9f0:	str	x0, [x19, #8]
  40b9f4:	ldrb	w0, [x19, #16]!
  40b9f8:	ldp	x21, x22, [sp, #32]
  40b9fc:	cmp	w0, #0x0
  40ba00:	csel	x0, x19, xzr, ne  // ne = any
  40ba04:	ldp	x19, x20, [sp, #16]
  40ba08:	ldp	x29, x30, [sp], #48
  40ba0c:	ret
  40ba10:	stp	x29, x30, [sp, #-64]!
  40ba14:	mov	x29, sp
  40ba18:	stp	x21, x22, [sp, #32]
  40ba1c:	adrp	x22, 42c000 <__progname@@GLIBC_2.17+0xa28>
  40ba20:	mov	x21, x0
  40ba24:	stp	x19, x20, [sp, #16]
  40ba28:	ldr	x19, [x22, #1856]
  40ba2c:	str	x23, [sp, #48]
  40ba30:	cbnz	x19, 40baa4 <__fxstatat@plt+0x8f04>
  40ba34:	add	x23, x22, #0x740
  40ba38:	ldr	x20, [x23, #8]
  40ba3c:	cbnz	x20, 40bacc <__fxstatat@plt+0x8f2c>
  40ba40:	mov	x0, x21
  40ba44:	bl	4027d0 <getpwnam@plt>
  40ba48:	mov	x19, x0
  40ba4c:	mov	x0, x21
  40ba50:	bl	402540 <strlen@plt>
  40ba54:	add	x0, x0, #0x18
  40ba58:	and	x0, x0, #0xfffffffffffffff8
  40ba5c:	bl	40f24c <__fxstatat@plt+0xc6ac>
  40ba60:	mov	x1, x21
  40ba64:	mov	x20, x0
  40ba68:	add	x0, x0, #0x10
  40ba6c:	bl	402a20 <strcpy@plt>
  40ba70:	cbz	x19, 40baf4 <__fxstatat@plt+0x8f54>
  40ba74:	ldr	w0, [x19, #16]
  40ba78:	mov	x19, x20
  40ba7c:	str	w0, [x20]
  40ba80:	ldr	x0, [x22, #1856]
  40ba84:	str	x20, [x22, #1856]
  40ba88:	str	x0, [x20, #8]
  40ba8c:	mov	x0, x19
  40ba90:	ldp	x19, x20, [sp, #16]
  40ba94:	ldp	x21, x22, [sp, #32]
  40ba98:	ldr	x23, [sp, #48]
  40ba9c:	ldp	x29, x30, [sp], #64
  40baa0:	ret
  40baa4:	ldrb	w1, [x19, #16]
  40baa8:	ldrb	w0, [x21]
  40baac:	cmp	w1, w0
  40bab0:	b.ne	40bac4 <__fxstatat@plt+0x8f24>  // b.any
  40bab4:	mov	x1, x21
  40bab8:	add	x0, x19, #0x10
  40babc:	bl	402950 <strcmp@plt>
  40bac0:	cbz	w0, 40ba8c <__fxstatat@plt+0x8eec>
  40bac4:	ldr	x19, [x19, #8]
  40bac8:	b	40ba30 <__fxstatat@plt+0x8e90>
  40bacc:	ldrb	w1, [x20, #16]
  40bad0:	ldrb	w0, [x21]
  40bad4:	cmp	w1, w0
  40bad8:	b.ne	40baec <__fxstatat@plt+0x8f4c>  // b.any
  40badc:	mov	x1, x21
  40bae0:	add	x0, x20, #0x10
  40bae4:	bl	402950 <strcmp@plt>
  40bae8:	cbz	w0, 40ba8c <__fxstatat@plt+0x8eec>
  40baec:	ldr	x20, [x20, #8]
  40baf0:	b	40ba3c <__fxstatat@plt+0x8e9c>
  40baf4:	ldr	x0, [x23, #8]
  40baf8:	str	x0, [x20, #8]
  40bafc:	str	x20, [x23, #8]
  40bb00:	b	40ba8c <__fxstatat@plt+0x8eec>
  40bb04:	stp	x29, x30, [sp, #-48]!
  40bb08:	mov	x29, sp
  40bb0c:	stp	x21, x22, [sp, #32]
  40bb10:	adrp	x22, 42c000 <__progname@@GLIBC_2.17+0xa28>
  40bb14:	add	x22, x22, #0x740
  40bb18:	stp	x19, x20, [sp, #16]
  40bb1c:	mov	w21, w0
  40bb20:	ldr	x19, [x22, #16]
  40bb24:	cbnz	x19, 40bb40 <__fxstatat@plt+0x8fa0>
  40bb28:	mov	w0, w21
  40bb2c:	bl	402b60 <getgrgid@plt>
  40bb30:	cbnz	x0, 40bb54 <__fxstatat@plt+0x8fb4>
  40bb34:	adrp	x20, 411000 <_obstack_memory_used@@Base+0xe44>
  40bb38:	add	x20, x20, #0xdf0
  40bb3c:	b	40bb58 <__fxstatat@plt+0x8fb8>
  40bb40:	ldr	w0, [x19]
  40bb44:	cmp	w0, w21
  40bb48:	b.eq	40bb88 <__fxstatat@plt+0x8fe8>  // b.none
  40bb4c:	ldr	x19, [x19, #8]
  40bb50:	b	40bb24 <__fxstatat@plt+0x8f84>
  40bb54:	ldr	x20, [x0]
  40bb58:	mov	x0, x20
  40bb5c:	bl	402540 <strlen@plt>
  40bb60:	add	x0, x0, #0x18
  40bb64:	and	x0, x0, #0xfffffffffffffff8
  40bb68:	bl	40f24c <__fxstatat@plt+0xc6ac>
  40bb6c:	mov	x19, x0
  40bb70:	str	w21, [x0], #16
  40bb74:	mov	x1, x20
  40bb78:	bl	402a20 <strcpy@plt>
  40bb7c:	ldr	x0, [x22, #16]
  40bb80:	str	x0, [x19, #8]
  40bb84:	str	x19, [x22, #16]
  40bb88:	ldrb	w0, [x19, #16]!
  40bb8c:	ldp	x21, x22, [sp, #32]
  40bb90:	cmp	w0, #0x0
  40bb94:	csel	x0, x19, xzr, ne  // ne = any
  40bb98:	ldp	x19, x20, [sp, #16]
  40bb9c:	ldp	x29, x30, [sp], #48
  40bba0:	ret
  40bba4:	stp	x29, x30, [sp, #-48]!
  40bba8:	mov	x29, sp
  40bbac:	stp	x21, x22, [sp, #32]
  40bbb0:	adrp	x22, 42c000 <__progname@@GLIBC_2.17+0xa28>
  40bbb4:	add	x22, x22, #0x740
  40bbb8:	stp	x19, x20, [sp, #16]
  40bbbc:	mov	x21, x0
  40bbc0:	ldr	x19, [x22, #16]
  40bbc4:	cbnz	x19, 40bc30 <__fxstatat@plt+0x9090>
  40bbc8:	ldr	x20, [x22, #24]
  40bbcc:	cbnz	x20, 40bc58 <__fxstatat@plt+0x90b8>
  40bbd0:	mov	x0, x21
  40bbd4:	bl	402600 <getgrnam@plt>
  40bbd8:	mov	x19, x0
  40bbdc:	mov	x0, x21
  40bbe0:	bl	402540 <strlen@plt>
  40bbe4:	add	x0, x0, #0x18
  40bbe8:	and	x0, x0, #0xfffffffffffffff8
  40bbec:	bl	40f24c <__fxstatat@plt+0xc6ac>
  40bbf0:	mov	x1, x21
  40bbf4:	mov	x20, x0
  40bbf8:	add	x0, x0, #0x10
  40bbfc:	bl	402a20 <strcpy@plt>
  40bc00:	cbz	x19, 40bc80 <__fxstatat@plt+0x90e0>
  40bc04:	ldr	w0, [x19, #16]
  40bc08:	mov	x19, x20
  40bc0c:	str	w0, [x20]
  40bc10:	ldr	x0, [x22, #16]
  40bc14:	str	x0, [x20, #8]
  40bc18:	str	x20, [x22, #16]
  40bc1c:	mov	x0, x19
  40bc20:	ldp	x19, x20, [sp, #16]
  40bc24:	ldp	x21, x22, [sp, #32]
  40bc28:	ldp	x29, x30, [sp], #48
  40bc2c:	ret
  40bc30:	ldrb	w1, [x19, #16]
  40bc34:	ldrb	w0, [x21]
  40bc38:	cmp	w1, w0
  40bc3c:	b.ne	40bc50 <__fxstatat@plt+0x90b0>  // b.any
  40bc40:	mov	x1, x21
  40bc44:	add	x0, x19, #0x10
  40bc48:	bl	402950 <strcmp@plt>
  40bc4c:	cbz	w0, 40bc1c <__fxstatat@plt+0x907c>
  40bc50:	ldr	x19, [x19, #8]
  40bc54:	b	40bbc4 <__fxstatat@plt+0x9024>
  40bc58:	ldrb	w1, [x20, #16]
  40bc5c:	ldrb	w0, [x21]
  40bc60:	cmp	w1, w0
  40bc64:	b.ne	40bc78 <__fxstatat@plt+0x90d8>  // b.any
  40bc68:	mov	x1, x21
  40bc6c:	add	x0, x20, #0x10
  40bc70:	bl	402950 <strcmp@plt>
  40bc74:	cbz	w0, 40bc1c <__fxstatat@plt+0x907c>
  40bc78:	ldr	x20, [x20, #8]
  40bc7c:	b	40bbcc <__fxstatat@plt+0x902c>
  40bc80:	ldr	x0, [x22, #24]
  40bc84:	str	x0, [x20, #8]
  40bc88:	str	x20, [x22, #24]
  40bc8c:	b	40bc1c <__fxstatat@plt+0x907c>
  40bc90:	strb	wzr, [x1, #20]
  40bc94:	mov	x2, x0
  40bc98:	mov	x3, #0xa                   	// #10
  40bc9c:	add	x0, x1, #0x14
  40bca0:	tbnz	x2, #63, 40bcc0 <__fxstatat@plt+0x9120>
  40bca4:	udiv	x1, x2, x3
  40bca8:	msub	x2, x1, x3, x2
  40bcac:	add	w2, w2, #0x30
  40bcb0:	strb	w2, [x0, #-1]!
  40bcb4:	mov	x2, x1
  40bcb8:	cbnz	x1, 40bca4 <__fxstatat@plt+0x9104>
  40bcbc:	b	40bcec <__fxstatat@plt+0x914c>
  40bcc0:	mov	w5, #0x30                  	// #48
  40bcc4:	sdiv	x1, x2, x3
  40bcc8:	mov	x4, x0
  40bccc:	msub	x2, x1, x3, x2
  40bcd0:	sub	w2, w5, w2
  40bcd4:	strb	w2, [x0, #-1]!
  40bcd8:	mov	x2, x1
  40bcdc:	cbnz	x1, 40bcc4 <__fxstatat@plt+0x9124>
  40bce0:	mov	w1, #0x2d                  	// #45
  40bce4:	sturb	w1, [x0, #-1]
  40bce8:	sub	x0, x4, #0x2
  40bcec:	ret
  40bcf0:	mov	x2, x0
  40bcf4:	add	x0, x1, #0x14
  40bcf8:	mov	x4, #0xa                   	// #10
  40bcfc:	strb	wzr, [x1, #20]
  40bd00:	udiv	x3, x2, x4
  40bd04:	msub	x1, x3, x4, x2
  40bd08:	add	w1, w1, #0x30
  40bd0c:	strb	w1, [x0, #-1]!
  40bd10:	mov	x1, x2
  40bd14:	mov	x2, x3
  40bd18:	cmp	x1, #0x9
  40bd1c:	b.hi	40bd00 <__fxstatat@plt+0x9160>  // b.pmore
  40bd20:	ret
  40bd24:	stp	x29, x30, [sp, #-112]!
  40bd28:	mov	x29, sp
  40bd2c:	stp	x19, x20, [sp, #16]
  40bd30:	stp	x21, x22, [sp, #32]
  40bd34:	mov	x21, x1
  40bd38:	mov	x22, x2
  40bd3c:	stp	x23, x24, [sp, #48]
  40bd40:	mov	x24, x0
  40bd44:	mov	w23, w5
  40bd48:	stp	x25, x26, [sp, #64]
  40bd4c:	mov	x25, x3
  40bd50:	stp	x27, x28, [sp, #80]
  40bd54:	str	w4, [sp, #108]
  40bd58:	bl	402540 <strlen@plt>
  40bd5c:	mov	x20, x0
  40bd60:	tbnz	w23, #1, 40bf90 <__fxstatat@plt+0x93f0>
  40bd64:	bl	4029a0 <__ctype_get_mb_cur_max@plt>
  40bd68:	cmp	x0, #0x1
  40bd6c:	b.ls	40bf90 <__fxstatat@plt+0x93f0>  // b.plast
  40bd70:	mov	x1, x24
  40bd74:	mov	x2, #0x0                   	// #0
  40bd78:	mov	x0, #0x0                   	// #0
  40bd7c:	bl	402570 <mbstowcs@plt>
  40bd80:	cmn	x0, #0x1
  40bd84:	b.ne	40bdc8 <__fxstatat@plt+0x9228>  // b.any
  40bd88:	tbnz	w23, #0, 40bf90 <__fxstatat@plt+0x93f0>
  40bd8c:	mov	x28, #0x0                   	// #0
  40bd90:	mov	x26, #0x0                   	// #0
  40bd94:	mov	x19, #0xffffffffffffffff    	// #-1
  40bd98:	mov	x0, x28
  40bd9c:	bl	402990 <free@plt>
  40bda0:	mov	x0, x26
  40bda4:	bl	402990 <free@plt>
  40bda8:	mov	x0, x19
  40bdac:	ldp	x19, x20, [sp, #16]
  40bdb0:	ldp	x21, x22, [sp, #32]
  40bdb4:	ldp	x23, x24, [sp, #48]
  40bdb8:	ldp	x25, x26, [sp, #64]
  40bdbc:	ldp	x27, x28, [sp, #80]
  40bdc0:	ldp	x29, x30, [sp], #112
  40bdc4:	ret
  40bdc8:	add	x27, x0, #0x1
  40bdcc:	lsl	x19, x27, #2
  40bdd0:	mov	x0, x19
  40bdd4:	bl	402730 <malloc@plt>
  40bdd8:	mov	x28, x0
  40bddc:	cbnz	x0, 40bdec <__fxstatat@plt+0x924c>
  40bde0:	tbz	w23, #0, 40bd8c <__fxstatat@plt+0x91ec>
  40bde4:	mov	x27, x20
  40bde8:	b	40bf98 <__fxstatat@plt+0x93f8>
  40bdec:	mov	x2, x27
  40bdf0:	mov	x1, x24
  40bdf4:	bl	402570 <mbstowcs@plt>
  40bdf8:	cbz	x0, 40bde4 <__fxstatat@plt+0x9244>
  40bdfc:	add	x19, x28, x19
  40be00:	mov	x26, x28
  40be04:	stur	wzr, [x19, #-4]
  40be08:	mov	w19, #0x0                   	// #0
  40be0c:	ldr	w0, [x26]
  40be10:	cbnz	w0, 40bef8 <__fxstatat@plt+0x9358>
  40be14:	mov	x1, x27
  40be18:	mov	x0, x28
  40be1c:	bl	402760 <wcswidth@plt>
  40be20:	sxtw	x27, w0
  40be24:	cbnz	w19, 40bf14 <__fxstatat@plt+0x9374>
  40be28:	ldr	x0, [x25]
  40be2c:	cmp	x0, x27
  40be30:	b.cs	40bf98 <__fxstatat@plt+0x93f8>  // b.hs, b.nlast
  40be34:	add	x19, x20, #0x1
  40be38:	mov	x0, x19
  40be3c:	bl	402730 <malloc@plt>
  40be40:	mov	x26, x0
  40be44:	cbnz	x0, 40bf2c <__fxstatat@plt+0x938c>
  40be48:	tbz	w23, #0, 40bd94 <__fxstatat@plt+0x91f4>
  40be4c:	ldr	x6, [x25]
  40be50:	cmp	x6, x27
  40be54:	b.cc	40bfa0 <__fxstatat@plt+0x9400>  // b.lo, b.ul, b.last
  40be58:	sub	x6, x6, x27
  40be5c:	csel	x19, x6, xzr, hi  // hi = pmore
  40be60:	ldr	w0, [sp, #108]
  40be64:	str	x27, [x25]
  40be68:	cbz	w0, 40bfb0 <__fxstatat@plt+0x9410>
  40be6c:	cmp	w0, #0x1
  40be70:	b.eq	40bfbc <__fxstatat@plt+0x941c>  // b.none
  40be74:	lsr	x25, x19, #1
  40be78:	and	x3, x19, #0x1
  40be7c:	add	x19, x3, x25
  40be80:	tst	x23, #0x4
  40be84:	csel	x19, x19, xzr, eq  // eq = none
  40be88:	tst	x23, #0x8
  40be8c:	csel	x25, x25, xzr, eq  // eq = none
  40be90:	cbz	x22, 40beec <__fxstatat@plt+0x934c>
  40be94:	sub	x22, x22, #0x1
  40be98:	add	x0, x21, x19
  40be9c:	add	x22, x21, x22
  40bea0:	mov	w1, #0x20                  	// #32
  40bea4:	cmp	x21, x0
  40bea8:	b.eq	40beb4 <__fxstatat@plt+0x9314>  // b.none
  40beac:	cmp	x22, x21
  40beb0:	b.hi	40bfc4 <__fxstatat@plt+0x9424>  // b.pmore
  40beb4:	sub	x2, x22, x21
  40beb8:	strb	wzr, [x21]
  40bebc:	cmp	x2, x20
  40bec0:	mov	x1, x24
  40bec4:	csel	x2, x2, x20, ls  // ls = plast
  40bec8:	mov	x0, x21
  40becc:	bl	4029b0 <mempcpy@plt>
  40bed0:	add	x1, x0, x25
  40bed4:	mov	w2, #0x20                  	// #32
  40bed8:	cmp	x1, x0
  40bedc:	b.eq	40bee8 <__fxstatat@plt+0x9348>  // b.none
  40bee0:	cmp	x22, x0
  40bee4:	b.hi	40bfcc <__fxstatat@plt+0x942c>  // b.pmore
  40bee8:	strb	wzr, [x0]
  40beec:	add	x19, x19, x20
  40bef0:	add	x19, x19, x25
  40bef4:	b	40bd98 <__fxstatat@plt+0x91f8>
  40bef8:	bl	402b10 <iswprint@plt>
  40befc:	mov	w2, #0xfffd                	// #65533
  40bf00:	cbnz	w0, 40bf0c <__fxstatat@plt+0x936c>
  40bf04:	mov	w19, #0x1                   	// #1
  40bf08:	str	w2, [x26]
  40bf0c:	add	x26, x26, #0x4
  40bf10:	b	40be0c <__fxstatat@plt+0x926c>
  40bf14:	mov	x1, x28
  40bf18:	mov	x2, #0x0                   	// #0
  40bf1c:	mov	x0, #0x0                   	// #0
  40bf20:	bl	402a80 <wcstombs@plt>
  40bf24:	add	x19, x0, #0x1
  40bf28:	b	40be38 <__fxstatat@plt+0x9298>
  40bf2c:	ldr	x24, [x25]
  40bf30:	mov	x20, x28
  40bf34:	mov	x27, #0x0                   	// #0
  40bf38:	ldr	w0, [x20]
  40bf3c:	cbz	w0, 40bf64 <__fxstatat@plt+0x93c4>
  40bf40:	bl	402740 <wcwidth@plt>
  40bf44:	cmn	w0, #0x1
  40bf48:	mov	w1, #0xfffd                	// #65533
  40bf4c:	b.ne	40bf58 <__fxstatat@plt+0x93b8>  // b.any
  40bf50:	mov	w0, #0x1                   	// #1
  40bf54:	str	w1, [x20]
  40bf58:	add	x0, x27, w0, sxtw
  40bf5c:	cmp	x24, x0
  40bf60:	b.cs	40bf84 <__fxstatat@plt+0x93e4>  // b.hs, b.nlast
  40bf64:	str	wzr, [x20]
  40bf68:	mov	x2, x19
  40bf6c:	mov	x1, x28
  40bf70:	mov	x0, x26
  40bf74:	mov	x24, x26
  40bf78:	bl	402a80 <wcstombs@plt>
  40bf7c:	mov	x20, x0
  40bf80:	b	40be4c <__fxstatat@plt+0x92ac>
  40bf84:	add	x20, x20, #0x4
  40bf88:	mov	x27, x0
  40bf8c:	b	40bf38 <__fxstatat@plt+0x9398>
  40bf90:	mov	x27, x20
  40bf94:	mov	x28, #0x0                   	// #0
  40bf98:	mov	x26, #0x0                   	// #0
  40bf9c:	b	40be4c <__fxstatat@plt+0x92ac>
  40bfa0:	mov	x20, x6
  40bfa4:	mov	x27, x6
  40bfa8:	mov	x19, #0x0                   	// #0
  40bfac:	b	40be60 <__fxstatat@plt+0x92c0>
  40bfb0:	mov	x25, x19
  40bfb4:	mov	x19, #0x0                   	// #0
  40bfb8:	b	40be80 <__fxstatat@plt+0x92e0>
  40bfbc:	mov	x25, #0x0                   	// #0
  40bfc0:	b	40be80 <__fxstatat@plt+0x92e0>
  40bfc4:	strb	w1, [x21], #1
  40bfc8:	b	40bea4 <__fxstatat@plt+0x9304>
  40bfcc:	strb	w2, [x0], #1
  40bfd0:	b	40bed8 <__fxstatat@plt+0x9338>
  40bfd4:	stp	x29, x30, [sp, #-80]!
  40bfd8:	mov	x29, sp
  40bfdc:	stp	x25, x26, [sp, #64]
  40bfe0:	ldr	x25, [x1]
  40bfe4:	stp	x19, x20, [sp, #16]
  40bfe8:	mov	x20, x1
  40bfec:	stp	x21, x22, [sp, #32]
  40bff0:	mov	x22, x0
  40bff4:	mov	x0, x25
  40bff8:	stp	x23, x24, [sp, #48]
  40bffc:	mov	w23, w2
  40c000:	mov	w24, w3
  40c004:	mov	x19, #0x0                   	// #0
  40c008:	add	x21, x0, #0x1
  40c00c:	mov	x26, x19
  40c010:	mov	x0, x19
  40c014:	mov	x1, x21
  40c018:	bl	402820 <realloc@plt>
  40c01c:	mov	x19, x0
  40c020:	cbnz	x0, 40c048 <__fxstatat@plt+0x94a8>
  40c024:	mov	x0, x26
  40c028:	bl	402990 <free@plt>
  40c02c:	mov	x0, x19
  40c030:	ldp	x19, x20, [sp, #16]
  40c034:	ldp	x21, x22, [sp, #32]
  40c038:	ldp	x23, x24, [sp, #48]
  40c03c:	ldp	x25, x26, [sp, #64]
  40c040:	ldp	x29, x30, [sp], #80
  40c044:	ret
  40c048:	str	x25, [x20]
  40c04c:	mov	x1, x0
  40c050:	mov	w5, w24
  40c054:	mov	w4, w23
  40c058:	mov	x3, x20
  40c05c:	mov	x2, x21
  40c060:	mov	x0, x22
  40c064:	bl	40bd24 <__fxstatat@plt+0x9184>
  40c068:	cmn	x0, #0x1
  40c06c:	b.ne	40c080 <__fxstatat@plt+0x94e0>  // b.any
  40c070:	mov	x0, x19
  40c074:	mov	x19, #0x0                   	// #0
  40c078:	bl	402990 <free@plt>
  40c07c:	b	40c02c <__fxstatat@plt+0x948c>
  40c080:	cmp	x21, x0
  40c084:	b.ls	40c008 <__fxstatat@plt+0x9468>  // b.plast
  40c088:	b	40c02c <__fxstatat@plt+0x948c>
  40c08c:	stp	x29, x30, [sp, #-96]!
  40c090:	mov	x29, sp
  40c094:	stp	x19, x20, [sp, #16]
  40c098:	mov	x20, x0
  40c09c:	mov	w19, #0x0                   	// #0
  40c0a0:	stp	x21, x22, [sp, #32]
  40c0a4:	mov	w21, w2
  40c0a8:	add	x22, x0, x1
  40c0ac:	stp	x23, x24, [sp, #48]
  40c0b0:	stp	x25, x26, [sp, #64]
  40c0b4:	bl	4029a0 <__ctype_get_mb_cur_max@plt>
  40c0b8:	cmp	x0, #0x1
  40c0bc:	b.hi	40c210 <__fxstatat@plt+0x9670>  // b.pmore
  40c0c0:	and	w21, w21, #0x2
  40c0c4:	mov	w23, #0x7fffffff            	// #2147483647
  40c0c8:	cmp	x20, x22
  40c0cc:	b.cs	40c1f4 <__fxstatat@plt+0x9654>  // b.hs, b.nlast
  40c0d0:	bl	402970 <__ctype_b_loc@plt>
  40c0d4:	ldrb	w1, [x20], #1
  40c0d8:	ldr	x0, [x0]
  40c0dc:	ldrh	w0, [x0, x1, lsl #1]
  40c0e0:	tbz	w0, #14, 40c218 <__fxstatat@plt+0x9678>
  40c0e4:	cmp	w19, w23
  40c0e8:	b.eq	40c1f4 <__fxstatat@plt+0x9654>  // b.none
  40c0ec:	add	w19, w19, #0x1
  40c0f0:	b	40c0c8 <__fxstatat@plt+0x9528>
  40c0f4:	ldrb	w0, [x20]
  40c0f8:	cmp	w0, #0x5f
  40c0fc:	b.hi	40c170 <__fxstatat@plt+0x95d0>  // b.pmore
  40c100:	cmp	w0, #0x40
  40c104:	b.hi	40c118 <__fxstatat@plt+0x9578>  // b.pmore
  40c108:	cmp	w0, #0x23
  40c10c:	b.hi	40c12c <__fxstatat@plt+0x958c>  // b.pmore
  40c110:	cmp	w0, #0x1f
  40c114:	b.ls	40c13c <__fxstatat@plt+0x959c>  // b.plast
  40c118:	add	x20, x20, #0x1
  40c11c:	add	w19, w19, #0x1
  40c120:	cmp	x20, x22
  40c124:	b.cc	40c0f4 <__fxstatat@plt+0x9554>  // b.lo, b.ul, b.last
  40c128:	b	40c1f4 <__fxstatat@plt+0x9654>
  40c12c:	sub	w0, w0, #0x25
  40c130:	and	w0, w0, #0xff
  40c134:	cmp	w0, #0x1a
  40c138:	b.ls	40c118 <__fxstatat@plt+0x9578>  // b.plast
  40c13c:	and	w26, w21, #0x2
  40c140:	mov	w25, #0x7fffffff            	// #2147483647
  40c144:	str	xzr, [sp, #88]
  40c148:	add	x3, sp, #0x58
  40c14c:	sub	x2, x22, x20
  40c150:	mov	x1, x20
  40c154:	add	x0, sp, #0x54
  40c158:	bl	40fe2c <__fxstatat@plt+0xd28c>
  40c15c:	cmn	x0, #0x1
  40c160:	b.ne	40c180 <__fxstatat@plt+0x95e0>  // b.any
  40c164:	tbz	w21, #0, 40c118 <__fxstatat@plt+0x9578>
  40c168:	mov	w19, #0xffffffff            	// #-1
  40c16c:	b	40c1f4 <__fxstatat@plt+0x9654>
  40c170:	sub	w0, w0, #0x61
  40c174:	and	w0, w0, #0xff
  40c178:	cmp	w0, #0x1d
  40c17c:	b	40c138 <__fxstatat@plt+0x9598>
  40c180:	cmn	x0, #0x2
  40c184:	b.ne	40c198 <__fxstatat@plt+0x95f8>  // b.any
  40c188:	tbnz	w21, #0, 40c168 <__fxstatat@plt+0x95c8>
  40c18c:	add	w19, w19, #0x1
  40c190:	mov	x20, x22
  40c194:	b	40c120 <__fxstatat@plt+0x9580>
  40c198:	cmp	x0, #0x0
  40c19c:	csel	x24, x0, x23, ne  // ne = any
  40c1a0:	ldr	w0, [sp, #84]
  40c1a4:	bl	402740 <wcwidth@plt>
  40c1a8:	tbnz	w0, #31, 40c1d0 <__fxstatat@plt+0x9630>
  40c1ac:	sub	w1, w25, w19
  40c1b0:	cmp	w1, w0
  40c1b4:	b.lt	40c1f0 <__fxstatat@plt+0x9650>  // b.tstop
  40c1b8:	add	w19, w19, w0
  40c1bc:	add	x20, x20, x24
  40c1c0:	add	x0, sp, #0x58
  40c1c4:	bl	4028c0 <mbsinit@plt>
  40c1c8:	cbz	w0, 40c148 <__fxstatat@plt+0x95a8>
  40c1cc:	b	40c120 <__fxstatat@plt+0x9580>
  40c1d0:	cbnz	w26, 40c168 <__fxstatat@plt+0x95c8>
  40c1d4:	ldr	w0, [sp, #84]
  40c1d8:	bl	402650 <iswcntrl@plt>
  40c1dc:	cbnz	w0, 40c1bc <__fxstatat@plt+0x961c>
  40c1e0:	cmp	w19, w25
  40c1e4:	b.eq	40c1f0 <__fxstatat@plt+0x9650>  // b.none
  40c1e8:	add	w19, w19, #0x1
  40c1ec:	b	40c1bc <__fxstatat@plt+0x961c>
  40c1f0:	mov	w19, #0x7fffffff            	// #2147483647
  40c1f4:	mov	w0, w19
  40c1f8:	ldp	x19, x20, [sp, #16]
  40c1fc:	ldp	x21, x22, [sp, #32]
  40c200:	ldp	x23, x24, [sp, #48]
  40c204:	ldp	x25, x26, [sp, #64]
  40c208:	ldp	x29, x30, [sp], #96
  40c20c:	ret
  40c210:	mov	x23, #0x1                   	// #1
  40c214:	b	40c120 <__fxstatat@plt+0x9580>
  40c218:	cbnz	w21, 40c168 <__fxstatat@plt+0x95c8>
  40c21c:	tbnz	w0, #1, 40c0c8 <__fxstatat@plt+0x9528>
  40c220:	b	40c0e4 <__fxstatat@plt+0x9544>
  40c224:	stp	x29, x30, [sp, #-32]!
  40c228:	mov	x29, sp
  40c22c:	stp	x19, x20, [sp, #16]
  40c230:	mov	w20, w1
  40c234:	mov	x19, x0
  40c238:	bl	402540 <strlen@plt>
  40c23c:	mov	x1, x0
  40c240:	mov	w2, w20
  40c244:	mov	x0, x19
  40c248:	ldp	x19, x20, [sp, #16]
  40c24c:	ldp	x29, x30, [sp], #32
  40c250:	b	40c08c <__fxstatat@plt+0x94ec>
  40c254:	stp	x29, x30, [sp, #-112]!
  40c258:	cmp	x1, #0x2
  40c25c:	mov	x29, sp
  40c260:	stp	x19, x20, [sp, #16]
  40c264:	mov	x19, x0
  40c268:	stp	x21, x22, [sp, #32]
  40c26c:	stp	x23, x24, [sp, #48]
  40c270:	mov	x24, x3
  40c274:	stp	x25, x26, [sp, #64]
  40c278:	stp	x27, x28, [sp, #80]
  40c27c:	b.hi	40c2bc <__fxstatat@plt+0x971c>  // b.pmore
  40c280:	b.ne	40c2a0 <__fxstatat@plt+0x9700>  // b.any
  40c284:	ldp	x20, x21, [x0]
  40c288:	mov	x1, x21
  40c28c:	mov	x0, x20
  40c290:	blr	x3
  40c294:	cmp	w0, #0x0
  40c298:	b.le	40c2a0 <__fxstatat@plt+0x9700>
  40c29c:	stp	x21, x20, [x19]
  40c2a0:	ldp	x19, x20, [sp, #16]
  40c2a4:	ldp	x21, x22, [sp, #32]
  40c2a8:	ldp	x23, x24, [sp, #48]
  40c2ac:	ldp	x25, x26, [sp, #64]
  40c2b0:	ldp	x27, x28, [sp, #80]
  40c2b4:	ldp	x29, x30, [sp], #112
  40c2b8:	ret
  40c2bc:	lsr	x20, x1, #1
  40c2c0:	mov	x23, x1
  40c2c4:	mov	x22, x2
  40c2c8:	sub	x1, x1, x20
  40c2cc:	add	x0, x0, x20, lsl #3
  40c2d0:	bl	40c254 <__fxstatat@plt+0x96b4>
  40c2d4:	lsl	x27, x20, #3
  40c2d8:	cmp	x23, #0x3
  40c2dc:	b.ne	40c330 <__fxstatat@plt+0x9790>  // b.any
  40c2e0:	ldr	x0, [x19]
  40c2e4:	str	x0, [x22]
  40c2e8:	ldr	x27, [x19, x27]
  40c2ec:	mov	x25, x20
  40c2f0:	ldr	x28, [x22]
  40c2f4:	mov	x26, #0x0                   	// #0
  40c2f8:	mov	x21, #0x0                   	// #0
  40c2fc:	mov	x1, x27
  40c300:	mov	x0, x28
  40c304:	blr	x24
  40c308:	cmp	w0, #0x0
  40c30c:	add	x3, x26, #0x1
  40c310:	b.gt	40c3e4 <__fxstatat@plt+0x9844>
  40c314:	str	x28, [x19, x26, lsl #3]
  40c318:	add	x21, x21, #0x1
  40c31c:	cmp	x20, x21
  40c320:	b.eq	40c2a0 <__fxstatat@plt+0x9700>  // b.none
  40c324:	ldr	x28, [x22, x21, lsl #3]
  40c328:	mov	x26, x3
  40c32c:	b	40c2fc <__fxstatat@plt+0x975c>
  40c330:	lsr	x21, x23, #2
  40c334:	mov	x3, x24
  40c338:	mov	x2, x22
  40c33c:	sub	x1, x20, x21
  40c340:	lsl	x25, x21, #3
  40c344:	add	x0, x19, x21, lsl #3
  40c348:	bl	40c254 <__fxstatat@plt+0x96b4>
  40c34c:	mov	x26, x22
  40c350:	mov	x2, x22
  40c354:	mov	x1, x21
  40c358:	mov	x3, x24
  40c35c:	mov	x0, x19
  40c360:	bl	40c254 <__fxstatat@plt+0x96b4>
  40c364:	mov	x28, #0x0                   	// #0
  40c368:	ldr	x2, [x19]
  40c36c:	ldr	x1, [x19, x25]
  40c370:	mov	x25, x21
  40c374:	stp	x2, x1, [sp, #96]
  40c378:	mov	x0, x2
  40c37c:	add	x26, x26, #0x8
  40c380:	blr	x24
  40c384:	cmp	w0, #0x0
  40c388:	ldp	x2, x1, [sp, #96]
  40c38c:	b.gt	40c3a8 <__fxstatat@plt+0x9808>
  40c390:	stur	x2, [x26, #-8]
  40c394:	add	x28, x28, #0x1
  40c398:	cmp	x21, x28
  40c39c:	b.eq	40c3c0 <__fxstatat@plt+0x9820>  // b.none
  40c3a0:	ldr	x2, [x19, x28, lsl #3]
  40c3a4:	b	40c374 <__fxstatat@plt+0x97d4>
  40c3a8:	stur	x1, [x26, #-8]
  40c3ac:	add	x25, x25, #0x1
  40c3b0:	cmp	x20, x25
  40c3b4:	b.eq	40c3dc <__fxstatat@plt+0x983c>  // b.none
  40c3b8:	ldr	x1, [x19, x25, lsl #3]
  40c3bc:	b	40c374 <__fxstatat@plt+0x97d4>
  40c3c0:	mov	x21, x20
  40c3c4:	sub	x21, x21, x25
  40c3c8:	add	x1, x19, x25, lsl #3
  40c3cc:	mov	x0, x26
  40c3d0:	lsl	x2, x21, #3
  40c3d4:	bl	4024d0 <memcpy@plt>
  40c3d8:	b	40c2e8 <__fxstatat@plt+0x9748>
  40c3dc:	mov	x25, x28
  40c3e0:	b	40c3c4 <__fxstatat@plt+0x9824>
  40c3e4:	str	x27, [x19, x26, lsl #3]
  40c3e8:	add	x25, x25, #0x1
  40c3ec:	cmp	x23, x25
  40c3f0:	b.ne	40c420 <__fxstatat@plt+0x9880>  // b.any
  40c3f4:	sub	x20, x20, x21
  40c3f8:	add	x1, x22, x21, lsl #3
  40c3fc:	add	x0, x19, x3, lsl #3
  40c400:	lsl	x2, x20, #3
  40c404:	ldp	x19, x20, [sp, #16]
  40c408:	ldp	x21, x22, [sp, #32]
  40c40c:	ldp	x23, x24, [sp, #48]
  40c410:	ldp	x25, x26, [sp, #64]
  40c414:	ldp	x27, x28, [sp, #80]
  40c418:	ldp	x29, x30, [sp], #112
  40c41c:	b	4024d0 <memcpy@plt>
  40c420:	ldr	x27, [x19, x25, lsl #3]
  40c424:	b	40c328 <__fxstatat@plt+0x9788>
  40c428:	mov	x3, x2
  40c42c:	add	x2, x0, x1, lsl #3
  40c430:	b	40c254 <__fxstatat@plt+0x96b4>
  40c434:	stp	x29, x30, [sp, #-48]!
  40c438:	mov	x29, sp
  40c43c:	stp	x19, x20, [sp, #16]
  40c440:	mov	x20, x0
  40c444:	mov	x19, x2
  40c448:	str	x21, [sp, #32]
  40c44c:	mov	x21, x1
  40c450:	sub	x19, x19, #0x1
  40c454:	cmn	x19, #0x1
  40c458:	b.ne	40c470 <__fxstatat@plt+0x98d0>  // b.any
  40c45c:	mov	x0, x20
  40c460:	ldp	x19, x20, [sp, #16]
  40c464:	ldr	x21, [sp, #32]
  40c468:	ldp	x29, x30, [sp], #48
  40c46c:	ret
  40c470:	bl	402690 <__ctype_tolower_loc@plt>
  40c474:	ldrb	w1, [x21, x19]
  40c478:	ldr	x0, [x0]
  40c47c:	ldr	w0, [x0, x1, lsl #2]
  40c480:	strb	w0, [x20, x19]
  40c484:	b	40c450 <__fxstatat@plt+0x98b0>
  40c488:	stp	x29, x30, [sp, #-48]!
  40c48c:	mov	x29, sp
  40c490:	stp	x19, x20, [sp, #16]
  40c494:	mov	x20, x0
  40c498:	mov	x19, x2
  40c49c:	str	x21, [sp, #32]
  40c4a0:	mov	x21, x1
  40c4a4:	sub	x19, x19, #0x1
  40c4a8:	cmn	x19, #0x1
  40c4ac:	b.ne	40c4c4 <__fxstatat@plt+0x9924>  // b.any
  40c4b0:	mov	x0, x20
  40c4b4:	ldp	x19, x20, [sp, #16]
  40c4b8:	ldr	x21, [sp, #32]
  40c4bc:	ldp	x29, x30, [sp], #48
  40c4c0:	ret
  40c4c4:	bl	402830 <__ctype_toupper_loc@plt>
  40c4c8:	ldrb	w1, [x21, x19]
  40c4cc:	ldr	x0, [x0]
  40c4d0:	ldr	w0, [x0, x1, lsl #2]
  40c4d4:	strb	w0, [x20, x19]
  40c4d8:	b	40c4a4 <__fxstatat@plt+0x9904>
  40c4dc:	sub	sp, sp, #0x4e0
  40c4e0:	stp	x29, x30, [sp, #16]
  40c4e4:	add	x29, sp, #0x10
  40c4e8:	stp	x23, x24, [sp, #64]
  40c4ec:	mov	x23, x0
  40c4f0:	and	w0, w4, #0xff
  40c4f4:	stp	w0, w5, [sp, #180]
  40c4f8:	ldr	w0, [x3, #8]
  40c4fc:	str	w0, [sp, #176]
  40c500:	ldr	x0, [x3, #48]
  40c504:	stp	x19, x20, [sp, #32]
  40c508:	mov	x20, x3
  40c50c:	stp	x21, x22, [sp, #48]
  40c510:	mov	x21, x2
  40c514:	stp	x25, x26, [sp, #80]
  40c518:	mov	w26, w6
  40c51c:	stp	x27, x28, [sp, #96]
  40c520:	str	x1, [sp, #120]
  40c524:	str	x0, [sp, #128]
  40c528:	str	x7, [sp, #152]
  40c52c:	cbnz	x0, 40c53c <__fxstatat@plt+0x999c>
  40c530:	adrp	x0, 411000 <_obstack_memory_used@@Base+0xe44>
  40c534:	add	x0, x0, #0xdf0
  40c538:	str	x0, [sp, #128]
  40c53c:	ldr	w0, [sp, #176]
  40c540:	cmp	w0, #0xc
  40c544:	b.le	40c588 <__fxstatat@plt+0x99e8>
  40c548:	sub	w0, w0, #0xc
  40c54c:	str	w0, [sp, #176]
  40c550:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x5e44>
  40c554:	add	x0, x0, #0x249
  40c558:	mov	x19, #0x0                   	// #0
  40c55c:	str	x0, [sp, #160]
  40c560:	add	x0, sp, #0xdf
  40c564:	str	x0, [sp, #168]
  40c568:	ldrb	w0, [x21]
  40c56c:	cbnz	w0, 40c5a0 <__fxstatat@plt+0x9a00>
  40c570:	ldr	x0, [sp, #120]
  40c574:	cmp	x23, #0x0
  40c578:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  40c57c:	b.eq	40d51c <__fxstatat@plt+0xa97c>  // b.none
  40c580:	strb	wzr, [x23]
  40c584:	b	40d51c <__fxstatat@plt+0xa97c>
  40c588:	ldr	w0, [sp, #176]
  40c58c:	ldr	w1, [sp, #176]
  40c590:	cmp	w0, #0x0
  40c594:	mov	w0, #0xc                   	// #12
  40c598:	csel	w0, w1, w0, ne  // ne = any
  40c59c:	b	40c54c <__fxstatat@plt+0x99ac>
  40c5a0:	cmp	w0, #0x25
  40c5a4:	b.eq	40c6d8 <__fxstatat@plt+0x9b38>  // b.none
  40c5a8:	cmp	w26, #0x0
  40c5ac:	csel	w22, w26, wzr, ge  // ge = tcont
  40c5b0:	ldr	x0, [sp, #120]
  40c5b4:	sxtw	x22, w22
  40c5b8:	cmp	x22, #0x0
  40c5bc:	csinc	x22, x22, xzr, ne  // ne = any
  40c5c0:	sub	x0, x0, x19
  40c5c4:	cmp	x0, x22
  40c5c8:	b.ls	40d518 <__fxstatat@plt+0xa978>  // b.plast
  40c5cc:	cbz	x23, 40c5fc <__fxstatat@plt+0x9a5c>
  40c5d0:	cmp	w26, #0x1
  40c5d4:	b.le	40c5f4 <__fxstatat@plt+0x9a54>
  40c5d8:	sxtw	x8, w26
  40c5dc:	mov	x0, x23
  40c5e0:	sub	x24, x8, #0x1
  40c5e4:	mov	w1, #0x20                  	// #32
  40c5e8:	add	x23, x23, x24
  40c5ec:	mov	x2, x24
  40c5f0:	bl	4027c0 <memset@plt>
  40c5f4:	ldrb	w0, [x21]
  40c5f8:	strb	w0, [x23], #1
  40c5fc:	add	x19, x19, x22
  40c600:	add	x21, x21, #0x1
  40c604:	mov	w26, #0xffffffff            	// #-1
  40c608:	b	40c568 <__fxstatat@plt+0x99c8>
  40c60c:	mov	w27, w1
  40c610:	ldrb	w1, [x21, #1]!
  40c614:	sub	w0, w1, #0x23
  40c618:	and	w0, w0, #0xff
  40c61c:	cmp	w0, #0x3c
  40c620:	b.hi	40c63c <__fxstatat@plt+0x9a9c>  // b.pmore
  40c624:	lsl	x0, x3, x0
  40c628:	tst	x0, x4
  40c62c:	b.ne	40c60c <__fxstatat@plt+0x9a6c>  // b.any
  40c630:	tbnz	x0, #59, 40c6c8 <__fxstatat@plt+0x9b28>
  40c634:	and	w2, w0, #0x1
  40c638:	tbnz	w0, #0, 40c6d0 <__fxstatat@plt+0x9b30>
  40c63c:	sub	w1, w1, #0x30
  40c640:	cmp	w1, #0x9
  40c644:	b.hi	40c688 <__fxstatat@plt+0x9ae8>  // b.pmore
  40c648:	mov	w1, #0xcccc                	// #52428
  40c64c:	mov	w26, #0x0                   	// #0
  40c650:	movk	w1, #0xccc, lsl #16
  40c654:	mov	w2, #0xa                   	// #10
  40c658:	cmp	w26, w1
  40c65c:	b.gt	40c6f4 <__fxstatat@plt+0x9b54>
  40c660:	ldrb	w0, [x21]
  40c664:	b.ne	40c670 <__fxstatat@plt+0x9ad0>  // b.any
  40c668:	cmp	w0, #0x37
  40c66c:	b.hi	40c6f4 <__fxstatat@plt+0x9b54>  // b.pmore
  40c670:	sub	w0, w0, #0x30
  40c674:	madd	w26, w26, w2, w0
  40c678:	ldrb	w0, [x21, #1]!
  40c67c:	sub	w0, w0, #0x30
  40c680:	cmp	w0, #0x9
  40c684:	b.ls	40c658 <__fxstatat@plt+0x9ab8>  // b.plast
  40c688:	ldrb	w0, [x21]
  40c68c:	cmp	w0, #0x45
  40c690:	b.eq	40c69c <__fxstatat@plt+0x9afc>  // b.none
  40c694:	cmp	w0, #0x4f
  40c698:	b.ne	40c6fc <__fxstatat@plt+0x9b5c>  // b.any
  40c69c:	add	x21, x21, #0x1
  40c6a0:	ldrb	w10, [x21]
  40c6a4:	mov	w2, w10
  40c6a8:	cmp	w10, #0x7a
  40c6ac:	b.hi	40d468 <__fxstatat@plt+0xa8c8>  // b.pmore
  40c6b0:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x5e44>
  40c6b4:	add	x1, x1, #0x25c
  40c6b8:	ldrh	w1, [x1, w10, uxtw #1]
  40c6bc:	adr	x3, 40c6c8 <__fxstatat@plt+0x9b28>
  40c6c0:	add	x1, x3, w1, sxth #2
  40c6c4:	br	x1
  40c6c8:	mov	w22, #0x1                   	// #1
  40c6cc:	b	40c610 <__fxstatat@plt+0x9a70>
  40c6d0:	mov	w25, w2
  40c6d4:	b	40c610 <__fxstatat@plt+0x9a70>
  40c6d8:	mov	x4, #0x2500                	// #9472
  40c6dc:	ldr	w22, [sp, #180]
  40c6e0:	mov	w25, #0x0                   	// #0
  40c6e4:	mov	w27, #0x0                   	// #0
  40c6e8:	mov	x3, #0x1                   	// #1
  40c6ec:	movk	x4, #0x1000, lsl #48
  40c6f0:	b	40c610 <__fxstatat@plt+0x9a70>
  40c6f4:	mov	w26, #0x7fffffff            	// #2147483647
  40c6f8:	b	40c678 <__fxstatat@plt+0x9ad8>
  40c6fc:	mov	w0, #0x0                   	// #0
  40c700:	b	40c6a0 <__fxstatat@plt+0x9b00>
  40c704:	adrp	x10, 416000 <_obstack_memory_used@@Base+0x5e44>
  40c708:	add	x28, x10, #0x252
  40c70c:	mov	w25, #0xffffffff            	// #-1
  40c710:	ldr	w0, [sp, #1256]
  40c714:	mov	x2, x28
  40c718:	ldr	x7, [sp, #152]
  40c71c:	str	w0, [sp, #8]
  40c720:	ldr	x0, [sp, #1248]
  40c724:	str	x0, [sp]
  40c728:	mov	x1, #0xffffffffffffffff    	// #-1
  40c72c:	mov	w6, w25
  40c730:	mov	w5, w27
  40c734:	mov	w4, w22
  40c738:	mov	x3, x20
  40c73c:	mov	x0, #0x0                   	// #0
  40c740:	bl	40c4dc <__fxstatat@plt+0x993c>
  40c744:	mov	x24, x0
  40c748:	cmp	w26, #0x0
  40c74c:	csel	w1, w26, wzr, ge  // ge = tcont
  40c750:	cmp	x24, w1, sxtw
  40c754:	sxtw	x0, w1
  40c758:	csel	x1, x24, x0, cs  // cs = hs, nlast
  40c75c:	str	x1, [sp, #144]
  40c760:	ldr	x1, [sp, #120]
  40c764:	ldr	x2, [sp, #144]
  40c768:	sub	x1, x1, x19
  40c76c:	str	x1, [sp, #136]
  40c770:	cmp	x1, x2
  40c774:	b.ls	40d518 <__fxstatat@plt+0xa978>  // b.plast
  40c778:	cbz	x23, 40c7e4 <__fxstatat@plt+0x9c44>
  40c77c:	cmp	x24, x0
  40c780:	b.cs	40c904 <__fxstatat@plt+0x9d64>  // b.hs, b.nlast
  40c784:	sxtw	x2, w26
  40c788:	cmp	w27, #0x30
  40c78c:	sub	x2, x2, x24
  40c790:	mov	w0, #0x2b                  	// #43
  40c794:	add	x26, x23, x2
  40c798:	ccmp	w27, w0, #0x4, ne  // ne = any
  40c79c:	b.ne	40c8fc <__fxstatat@plt+0x9d5c>  // b.any
  40c7a0:	mov	w1, #0x30                  	// #48
  40c7a4:	mov	x0, x23
  40c7a8:	bl	4027c0 <memset@plt>
  40c7ac:	ldr	w0, [sp, #1256]
  40c7b0:	mov	w6, w25
  40c7b4:	ldr	x1, [sp, #136]
  40c7b8:	str	w0, [sp, #8]
  40c7bc:	ldr	x7, [sp, #152]
  40c7c0:	mov	w5, w27
  40c7c4:	ldr	x0, [sp, #1248]
  40c7c8:	str	x0, [sp]
  40c7cc:	mov	w4, w22
  40c7d0:	mov	x3, x20
  40c7d4:	mov	x2, x28
  40c7d8:	add	x23, x26, x24
  40c7dc:	mov	x0, x26
  40c7e0:	bl	40c4dc <__fxstatat@plt+0x993c>
  40c7e4:	ldr	x0, [sp, #144]
  40c7e8:	add	x19, x19, x0
  40c7ec:	b	40c600 <__fxstatat@plt+0x9a60>
  40c7f0:	ldr	x1, [sp, #120]
  40c7f4:	cmp	w26, #0x0
  40c7f8:	sub	x2, x1, x19
  40c7fc:	csel	w1, w26, wzr, ge  // ge = tcont
  40c800:	sxtw	x1, w1
  40c804:	cbnz	w0, 40d468 <__fxstatat@plt+0xa8c8>
  40c808:	cmp	x1, #0x0
  40c80c:	csinc	x22, x1, xzr, ne  // ne = any
  40c810:	cmp	x22, x2
  40c814:	b.cs	40d518 <__fxstatat@plt+0xa978>  // b.hs, b.nlast
  40c818:	cbz	x23, 40c5fc <__fxstatat@plt+0x9a5c>
  40c81c:	cmp	w26, #0x1
  40c820:	b.le	40c860 <__fxstatat@plt+0x9cc0>
  40c824:	sxtw	x2, w26
  40c828:	cmp	w27, #0x30
  40c82c:	sub	x2, x2, #0x1
  40c830:	mov	w0, #0x2b                  	// #43
  40c834:	add	x24, x23, x2
  40c838:	ccmp	w27, w0, #0x4, ne  // ne = any
  40c83c:	b.ne	40c858 <__fxstatat@plt+0x9cb8>  // b.any
  40c840:	mov	w1, #0x30                  	// #48
  40c844:	mov	x0, x23
  40c848:	bl	4027c0 <memset@plt>
  40c84c:	ldrb	w0, [x21]
  40c850:	mov	x23, x24
  40c854:	b	40c5f8 <__fxstatat@plt+0x9a58>
  40c858:	mov	w1, #0x20                  	// #32
  40c85c:	b	40c844 <__fxstatat@plt+0x9ca4>
  40c860:	mov	x24, x23
  40c864:	b	40c84c <__fxstatat@plt+0x9cac>
  40c868:	cbnz	w0, 40d468 <__fxstatat@plt+0xa8c8>
  40c86c:	cbz	w25, 40c914 <__fxstatat@plt+0x9d74>
  40c870:	mov	w22, w25
  40c874:	mov	w4, #0x0                   	// #0
  40c878:	mov	w2, #0x61                  	// #97
  40c87c:	mov	w25, #0x0                   	// #0
  40c880:	b	40c91c <__fxstatat@plt+0x9d7c>
  40c884:	cbnz	w0, 40d468 <__fxstatat@plt+0xa8c8>
  40c888:	cbz	w25, 40c9e0 <__fxstatat@plt+0x9e40>
  40c88c:	mov	w22, w25
  40c890:	mov	w4, #0x0                   	// #0
  40c894:	mov	w2, #0x41                  	// #65
  40c898:	b	40c87c <__fxstatat@plt+0x9cdc>
  40c89c:	cmp	w25, #0x0
  40c8a0:	csel	w22, w22, w25, eq  // eq = none
  40c8a4:	cmp	w0, #0x45
  40c8a8:	b.eq	40d468 <__fxstatat@plt+0xa8c8>  // b.none
  40c8ac:	mov	w25, #0x0                   	// #0
  40c8b0:	b	40c9f0 <__fxstatat@plt+0x9e50>
  40c8b4:	cmp	w0, #0x45
  40c8b8:	b.eq	40d468 <__fxstatat@plt+0xa8c8>  // b.none
  40c8bc:	cbz	w25, 40c9ec <__fxstatat@plt+0x9e4c>
  40c8c0:	mov	w22, w25
  40c8c4:	mov	w2, #0x42                  	// #66
  40c8c8:	b	40c8ac <__fxstatat@plt+0x9d0c>
  40c8cc:	cmp	w0, #0x4f
  40c8d0:	b.eq	40d468 <__fxstatat@plt+0xa8c8>  // b.none
  40c8d4:	mov	w2, #0x63                  	// #99
  40c8d8:	b	40c8ac <__fxstatat@plt+0x9d0c>
  40c8dc:	adrp	x10, 413000 <_obstack_memory_used@@Base+0x2e44>
  40c8e0:	mov	w25, #0xffffffff            	// #-1
  40c8e4:	add	x28, x10, #0xfad
  40c8e8:	b	40c710 <__fxstatat@plt+0x9b70>
  40c8ec:	mov	w25, #0x4                   	// #4
  40c8f0:	mov	w27, #0x2b                  	// #43
  40c8f4:	ldr	x28, [sp, #160]
  40c8f8:	b	40c710 <__fxstatat@plt+0x9b70>
  40c8fc:	mov	w1, #0x20                  	// #32
  40c900:	b	40c7a4 <__fxstatat@plt+0x9c04>
  40c904:	mov	x26, x23
  40c908:	b	40c7ac <__fxstatat@plt+0x9c0c>
  40c90c:	mov	w2, #0x72                  	// #114
  40c910:	b	40c8ac <__fxstatat@plt+0x9d0c>
  40c914:	mov	w4, #0x0                   	// #0
  40c918:	mov	w2, #0x61                  	// #97
  40c91c:	mov	w1, #0x2520                	// #9504
  40c920:	strh	w1, [sp, #200]
  40c924:	cbz	w0, 40ca1c <__fxstatat@plt+0x9e7c>
  40c928:	strb	w0, [sp, #202]
  40c92c:	add	x0, sp, #0xcb
  40c930:	strb	w2, [x0]
  40c934:	mov	x3, x20
  40c938:	strb	wzr, [x0, #1]
  40c93c:	add	x2, sp, #0xc8
  40c940:	add	x0, sp, #0xe0
  40c944:	mov	x1, #0x400                 	// #1024
  40c948:	str	w4, [sp, #144]
  40c94c:	bl	402630 <strftime@plt>
  40c950:	cbz	x0, 40c600 <__fxstatat@plt+0x9a60>
  40c954:	cmp	w26, #0x0
  40c958:	sub	x28, x0, #0x1
  40c95c:	csel	w1, w26, wzr, ge  // ge = tcont
  40c960:	cmp	x28, w1, sxtw
  40c964:	sxtw	x0, w1
  40c968:	csel	x1, x28, x0, cs  // cs = hs, nlast
  40c96c:	str	x1, [sp, #136]
  40c970:	ldr	x1, [sp, #120]
  40c974:	ldr	x2, [sp, #136]
  40c978:	sub	x1, x1, x19
  40c97c:	cmp	x1, x2
  40c980:	b.ls	40d518 <__fxstatat@plt+0xa978>  // b.plast
  40c984:	cbz	x23, 40c9d8 <__fxstatat@plt+0x9e38>
  40c988:	ldr	w4, [sp, #144]
  40c98c:	cmp	w4, #0x0
  40c990:	ccmp	x28, x0, #0x2, eq  // eq = none
  40c994:	b.cs	40ca2c <__fxstatat@plt+0x9e8c>  // b.hs, b.nlast
  40c998:	sxtw	x2, w26
  40c99c:	cmp	w27, #0x30
  40c9a0:	sub	x2, x2, x28
  40c9a4:	mov	w0, #0x2b                  	// #43
  40c9a8:	add	x24, x23, x2
  40c9ac:	ccmp	w27, w0, #0x4, ne  // ne = any
  40c9b0:	b.ne	40ca24 <__fxstatat@plt+0x9e84>  // b.any
  40c9b4:	mov	w1, #0x30                  	// #48
  40c9b8:	mov	x0, x23
  40c9bc:	bl	4027c0 <memset@plt>
  40c9c0:	mov	x2, x28
  40c9c4:	add	x1, sp, #0xe1
  40c9c8:	mov	x0, x24
  40c9cc:	cbz	w25, 40d4f4 <__fxstatat@plt+0xa954>
  40c9d0:	bl	40c434 <__fxstatat@plt+0x9894>
  40c9d4:	add	x23, x24, x28
  40c9d8:	ldr	x0, [sp, #136]
  40c9dc:	b	40c7e8 <__fxstatat@plt+0x9c48>
  40c9e0:	mov	w4, #0x0                   	// #0
  40c9e4:	mov	w2, #0x41                  	// #65
  40c9e8:	b	40c91c <__fxstatat@plt+0x9d7c>
  40c9ec:	mov	w2, #0x42                  	// #66
  40c9f0:	mov	w4, #0x0                   	// #0
  40c9f4:	b	40c91c <__fxstatat@plt+0x9d7c>
  40c9f8:	mov	w2, #0x43                  	// #67
  40c9fc:	b	40c8ac <__fxstatat@plt+0x9d0c>
  40ca00:	mov	w25, w1
  40ca04:	mov	w2, #0x70                  	// #112
  40ca08:	b	40c9f0 <__fxstatat@plt+0x9e50>
  40ca0c:	mov	w2, #0x59                  	// #89
  40ca10:	b	40c8ac <__fxstatat@plt+0x9d0c>
  40ca14:	mov	w2, #0x79                  	// #121
  40ca18:	b	40c8ac <__fxstatat@plt+0x9d0c>
  40ca1c:	add	x0, sp, #0xca
  40ca20:	b	40c930 <__fxstatat@plt+0x9d90>
  40ca24:	mov	w1, #0x20                  	// #32
  40ca28:	b	40c9b8 <__fxstatat@plt+0x9e18>
  40ca2c:	mov	x24, x23
  40ca30:	b	40c9c0 <__fxstatat@plt+0x9e20>
  40ca34:	cmp	w0, #0x45
  40ca38:	b.eq	40c9f8 <__fxstatat@plt+0x9e58>  // b.none
  40ca3c:	ldr	w4, [x20, #20]
  40ca40:	mov	w1, #0x64                  	// #100
  40ca44:	sdiv	w3, w4, w1
  40ca48:	add	w7, w3, #0x13
  40ca4c:	msub	w3, w3, w1, w4
  40ca50:	tbz	w3, #31, 40cbc0 <__fxstatat@plt+0xa020>
  40ca54:	cmp	w7, #0x0
  40ca58:	cset	w1, gt
  40ca5c:	cmn	w4, #0x76c
  40ca60:	sub	w1, w7, w1
  40ca64:	cset	w6, lt  // lt = tstop
  40ca68:	mov	w4, #0x2                   	// #2
  40ca6c:	ldr	w3, [sp, #184]
  40ca70:	cmp	w27, #0x0
  40ca74:	csel	w27, w27, w3, ne  // ne = any
  40ca78:	cmp	w27, #0x2b
  40ca7c:	b.ne	40cc28 <__fxstatat@plt+0xa088>  // b.any
  40ca80:	cmp	w4, #0x2
  40ca84:	mov	w3, #0x63                  	// #99
  40ca88:	mov	w7, #0x270f                	// #9999
  40ca8c:	csel	w3, w3, w7, eq  // eq = none
  40ca90:	cmp	w1, w3
  40ca94:	b.hi	40cc30 <__fxstatat@plt+0xa090>  // b.pmore
  40ca98:	cmp	w26, w4
  40ca9c:	cset	w3, gt
  40caa0:	mov	w10, #0x0                   	// #0
  40caa4:	cmp	w0, #0x4f
  40caa8:	eor	w7, w6, #0x1
  40caac:	csel	w7, w7, wzr, eq  // eq = none
  40cab0:	cbnz	w7, 40c87c <__fxstatat@plt+0x9cdc>
  40cab4:	cbz	w6, 40cabc <__fxstatat@plt+0x9f1c>
  40cab8:	neg	w1, w1
  40cabc:	add	x24, sp, #0xdf
  40cac0:	mov	w12, #0x3a                  	// #58
  40cac4:	mov	w7, #0xa                   	// #10
  40cac8:	tbz	w10, #0, 40cc50 <__fxstatat@plt+0xa0b0>
  40cacc:	sub	x0, x24, #0x1
  40cad0:	sturb	w12, [x24, #-1]
  40cad4:	udiv	w11, w1, w7
  40cad8:	asr	w10, w10, #1
  40cadc:	cmp	w10, #0x0
  40cae0:	sub	x24, x0, #0x1
  40cae4:	ccmp	w1, #0x9, #0x2, eq  // eq = none
  40cae8:	msub	w2, w11, w7, w1
  40caec:	add	w2, w2, #0x30
  40caf0:	sturb	w2, [x0, #-1]
  40caf4:	b.hi	40cc48 <__fxstatat@plt+0xa0a8>  // b.pmore
  40caf8:	cmp	w26, w4
  40cafc:	csel	w0, w26, w4, ge  // ge = tcont
  40cb00:	str	w0, [sp, #136]
  40cb04:	ldr	x0, [sp, #120]
  40cb08:	sub	x0, x0, x19
  40cb0c:	cbnz	w6, 40d540 <__fxstatat@plt+0xa9a0>
  40cb10:	cbnz	w3, 40d634 <__fxstatat@plt+0xaa94>
  40cb14:	cmp	w27, #0x2d
  40cb18:	b.eq	40d5a8 <__fxstatat@plt+0xaa08>  // b.none
  40cb1c:	mov	w25, #0x0                   	// #0
  40cb20:	ldr	x1, [sp, #168]
  40cb24:	cmp	w25, #0x0
  40cb28:	cset	w2, ne  // ne = any
  40cb2c:	sub	x3, x1, x24
  40cb30:	ldr	w1, [sp, #136]
  40cb34:	sub	w3, w1, w3
  40cb38:	sub	w3, w3, w2
  40cb3c:	cmp	w3, #0x0
  40cb40:	b.le	40cd14 <__fxstatat@plt+0xa174>
  40cb44:	cmp	w27, #0x5f
  40cb48:	b.ne	40cc58 <__fxstatat@plt+0xa0b8>  // b.any
  40cb4c:	sxtw	x28, w3
  40cb50:	cmp	x0, w3, sxtw
  40cb54:	b.ls	40d518 <__fxstatat@plt+0xa978>  // b.plast
  40cb58:	cbz	x23, 40cb78 <__fxstatat@plt+0x9fd8>
  40cb5c:	mov	x0, x23
  40cb60:	mov	x2, x28
  40cb64:	mov	w1, #0x20                  	// #32
  40cb68:	str	w3, [sp, #144]
  40cb6c:	bl	4027c0 <memset@plt>
  40cb70:	add	x23, x23, x28
  40cb74:	ldr	w3, [sp, #144]
  40cb78:	subs	w0, w26, w3
  40cb7c:	add	x19, x19, x28
  40cb80:	csel	w26, w0, wzr, gt
  40cb84:	cbz	w25, 40d5a8 <__fxstatat@plt+0xaa08>
  40cb88:	cmp	w26, #0x0
  40cb8c:	csel	w0, w26, wzr, ge  // ge = tcont
  40cb90:	ldr	x1, [sp, #120]
  40cb94:	sxtw	x0, w0
  40cb98:	cmp	x0, #0x0
  40cb9c:	csinc	x3, x0, xzr, ne  // ne = any
  40cba0:	sub	x1, x1, x19
  40cba4:	cmp	x3, x1
  40cba8:	b.cs	40d518 <__fxstatat@plt+0xa978>  // b.hs, b.nlast
  40cbac:	cbz	x23, 40d5a4 <__fxstatat@plt+0xaa04>
  40cbb0:	ldr	w1, [sp, #136]
  40cbb4:	cmp	w1, #0x0
  40cbb8:	ccmp	x0, #0x1, #0x0, eq  // eq = none
  40cbbc:	b	40d578 <__fxstatat@plt+0xa9d8>
  40cbc0:	mov	w1, #0x0                   	// #0
  40cbc4:	b	40ca5c <__fxstatat@plt+0x9ebc>
  40cbc8:	cmp	w0, #0x4f
  40cbcc:	b.eq	40d468 <__fxstatat@plt+0xa8c8>  // b.none
  40cbd0:	mov	w2, #0x78                  	// #120
  40cbd4:	b	40c8ac <__fxstatat@plt+0x9d0c>
  40cbd8:	cbnz	w0, 40d468 <__fxstatat@plt+0xa8c8>
  40cbdc:	adrp	x10, 416000 <_obstack_memory_used@@Base+0x5e44>
  40cbe0:	mov	w25, #0xffffffff            	// #-1
  40cbe4:	add	x28, x10, #0x240
  40cbe8:	b	40c710 <__fxstatat@plt+0x9b70>
  40cbec:	cmp	w0, #0x45
  40cbf0:	b.eq	40d468 <__fxstatat@plt+0xa8c8>  // b.none
  40cbf4:	ldr	w1, [x20, #12]
  40cbf8:	mov	w4, #0x2                   	// #2
  40cbfc:	b	40cc18 <__fxstatat@plt+0xa078>
  40cc00:	cmp	w0, #0x45
  40cc04:	b.eq	40d468 <__fxstatat@plt+0xa8c8>  // b.none
  40cc08:	ldr	w1, [x20, #12]
  40cc0c:	mov	w4, #0x2                   	// #2
  40cc10:	cbnz	w27, 40cc18 <__fxstatat@plt+0xa078>
  40cc14:	mov	w27, #0x5f                  	// #95
  40cc18:	lsr	w6, w1, #31
  40cc1c:	mov	w10, #0x0                   	// #0
  40cc20:	mov	w3, #0x0                   	// #0
  40cc24:	b	40caa4 <__fxstatat@plt+0x9f04>
  40cc28:	mov	w3, #0x0                   	// #0
  40cc2c:	b	40caa0 <__fxstatat@plt+0x9f00>
  40cc30:	mov	w3, #0x1                   	// #1
  40cc34:	b	40caa0 <__fxstatat@plt+0x9f00>
  40cc38:	ldr	w1, [sp, #1256]
  40cc3c:	mov	w26, #0x9                   	// #9
  40cc40:	mov	w4, w26
  40cc44:	b	40cc18 <__fxstatat@plt+0xa078>
  40cc48:	mov	w1, w11
  40cc4c:	b	40cac8 <__fxstatat@plt+0x9f28>
  40cc50:	mov	x0, x24
  40cc54:	b	40cad4 <__fxstatat@plt+0x9f34>
  40cc58:	ldr	w1, [sp, #136]
  40cc5c:	cmp	x0, w1, sxtw
  40cc60:	b.ls	40d518 <__fxstatat@plt+0xa978>  // b.plast
  40cc64:	cbz	w25, 40ccdc <__fxstatat@plt+0xa13c>
  40cc68:	cmp	w26, #0x0
  40cc6c:	csel	w1, w26, wzr, ge  // ge = tcont
  40cc70:	sxtw	x1, w1
  40cc74:	cmp	x1, #0x0
  40cc78:	csinc	x2, x1, xzr, ne  // ne = any
  40cc7c:	str	x2, [sp, #144]
  40cc80:	cmp	x2, x0
  40cc84:	b.cs	40d518 <__fxstatat@plt+0xa978>  // b.hs, b.nlast
  40cc88:	cbz	x23, 40ccd4 <__fxstatat@plt+0xa134>
  40cc8c:	ldr	w0, [sp, #136]
  40cc90:	cmp	w0, #0x0
  40cc94:	ccmp	x1, #0x1, #0x0, eq  // eq = none
  40cc98:	b.ls	40cd0c <__fxstatat@plt+0xa16c>  // b.plast
  40cc9c:	sxtw	x2, w26
  40cca0:	str	w3, [sp, #188]
  40cca4:	sub	x2, x2, #0x1
  40cca8:	cmp	w27, #0x30
  40ccac:	mov	w0, #0x2b                  	// #43
  40ccb0:	add	x28, x23, x2
  40ccb4:	ccmp	w27, w0, #0x4, ne  // ne = any
  40ccb8:	b.ne	40cd04 <__fxstatat@plt+0xa164>  // b.any
  40ccbc:	mov	w1, #0x30                  	// #48
  40ccc0:	mov	x0, x23
  40ccc4:	bl	4027c0 <memset@plt>
  40ccc8:	ldr	w3, [sp, #188]
  40cccc:	mov	x23, x28
  40ccd0:	strb	w25, [x23], #1
  40ccd4:	ldr	x0, [sp, #144]
  40ccd8:	add	x19, x19, x0
  40ccdc:	sxtw	x25, w3
  40cce0:	cbz	x23, 40ccf8 <__fxstatat@plt+0xa158>
  40cce4:	mov	x0, x23
  40cce8:	add	x23, x23, x25
  40ccec:	mov	x2, x25
  40ccf0:	mov	w1, #0x30                  	// #48
  40ccf4:	bl	4027c0 <memset@plt>
  40ccf8:	add	x19, x19, x25
  40ccfc:	mov	w26, #0x0                   	// #0
  40cd00:	b	40d5a8 <__fxstatat@plt+0xaa08>
  40cd04:	mov	w1, #0x20                  	// #32
  40cd08:	b	40ccc0 <__fxstatat@plt+0xa120>
  40cd0c:	mov	x28, x23
  40cd10:	b	40cccc <__fxstatat@plt+0xa12c>
  40cd14:	cbz	w25, 40d5a8 <__fxstatat@plt+0xaa08>
  40cd18:	cmp	w26, #0x0
  40cd1c:	csel	w1, w26, wzr, ge  // ge = tcont
  40cd20:	sxtw	x1, w1
  40cd24:	cmp	x1, #0x0
  40cd28:	csinc	x2, x1, xzr, ne  // ne = any
  40cd2c:	str	x2, [sp, #144]
  40cd30:	cmp	x2, x0
  40cd34:	b.cs	40d518 <__fxstatat@plt+0xa978>  // b.hs, b.nlast
  40cd38:	cbz	x23, 40cd7c <__fxstatat@plt+0xa1dc>
  40cd3c:	ldr	w0, [sp, #136]
  40cd40:	cmp	w0, #0x0
  40cd44:	ccmp	x1, #0x1, #0x0, eq  // eq = none
  40cd48:	b.ls	40cd90 <__fxstatat@plt+0xa1f0>  // b.plast
  40cd4c:	sxtw	x2, w26
  40cd50:	cmp	w27, #0x30
  40cd54:	sub	x2, x2, #0x1
  40cd58:	mov	w0, #0x2b                  	// #43
  40cd5c:	add	x28, x23, x2
  40cd60:	ccmp	w27, w0, #0x4, ne  // ne = any
  40cd64:	b.ne	40cd88 <__fxstatat@plt+0xa1e8>  // b.any
  40cd68:	mov	w1, #0x30                  	// #48
  40cd6c:	mov	x0, x23
  40cd70:	bl	4027c0 <memset@plt>
  40cd74:	mov	x23, x28
  40cd78:	strb	w25, [x23], #1
  40cd7c:	ldr	x0, [sp, #144]
  40cd80:	add	x19, x19, x0
  40cd84:	b	40d5a8 <__fxstatat@plt+0xaa08>
  40cd88:	mov	w1, #0x20                  	// #32
  40cd8c:	b	40cd6c <__fxstatat@plt+0xa1cc>
  40cd90:	mov	x28, x23
  40cd94:	b	40cd74 <__fxstatat@plt+0xa1d4>
  40cd98:	mov	w1, #0x20                  	// #32
  40cd9c:	b	40d610 <__fxstatat@plt+0xaa70>
  40cda0:	mov	x25, x23
  40cda4:	b	40d618 <__fxstatat@plt+0xaa78>
  40cda8:	bl	4024d0 <memcpy@plt>
  40cdac:	b	40d62c <__fxstatat@plt+0xaa8c>
  40cdb0:	cbnz	w0, 40d468 <__fxstatat@plt+0xa8c8>
  40cdb4:	cmp	w27, #0x0
  40cdb8:	ccmp	w26, #0x0, #0x0, eq  // eq = none
  40cdbc:	b.lt	40c8ec <__fxstatat@plt+0x9d4c>  // b.tstop
  40cdc0:	subs	w25, w26, #0x6
  40cdc4:	csel	w25, w25, wzr, pl  // pl = nfrst
  40cdc8:	ldr	x28, [sp, #160]
  40cdcc:	b	40c710 <__fxstatat@plt+0x9b70>
  40cdd0:	cmp	w0, #0x45
  40cdd4:	b.eq	40d468 <__fxstatat@plt+0xa8c8>  // b.none
  40cdd8:	ldr	w1, [x20, #8]
  40cddc:	b	40cbf8 <__fxstatat@plt+0xa058>
  40cde0:	cmp	w0, #0x45
  40cde4:	b.eq	40d468 <__fxstatat@plt+0xa8c8>  // b.none
  40cde8:	ldr	w1, [sp, #176]
  40cdec:	b	40cbf8 <__fxstatat@plt+0xa058>
  40cdf0:	cmp	w0, #0x45
  40cdf4:	b.eq	40d468 <__fxstatat@plt+0xa8c8>  // b.none
  40cdf8:	ldr	w1, [x20, #8]
  40cdfc:	b	40cc0c <__fxstatat@plt+0xa06c>
  40ce00:	cmp	w0, #0x45
  40ce04:	b.eq	40d468 <__fxstatat@plt+0xa8c8>  // b.none
  40ce08:	ldr	w1, [sp, #176]
  40ce0c:	b	40cc0c <__fxstatat@plt+0xa06c>
  40ce10:	cmp	w0, #0x45
  40ce14:	b.eq	40d468 <__fxstatat@plt+0xa8c8>  // b.none
  40ce18:	ldr	w1, [x20, #28]
  40ce1c:	mov	w10, #0x0                   	// #0
  40ce20:	mov	w3, #0x0                   	// #0
  40ce24:	cmn	w1, #0x1
  40ce28:	add	w1, w1, #0x1
  40ce2c:	cset	w6, lt  // lt = tstop
  40ce30:	mov	w4, #0x3                   	// #3
  40ce34:	b	40caa4 <__fxstatat@plt+0x9f04>
  40ce38:	cmp	w0, #0x45
  40ce3c:	b.eq	40d468 <__fxstatat@plt+0xa8c8>  // b.none
  40ce40:	ldr	w1, [x20, #4]
  40ce44:	b	40cbf8 <__fxstatat@plt+0xa058>
  40ce48:	cmp	w0, #0x45
  40ce4c:	b.eq	40d468 <__fxstatat@plt+0xa8c8>  // b.none
  40ce50:	ldr	w1, [x20, #16]
  40ce54:	mov	w10, #0x0                   	// #0
  40ce58:	mov	w3, #0x0                   	// #0
  40ce5c:	mov	w4, #0x2                   	// #2
  40ce60:	cmn	w1, #0x1
  40ce64:	add	w1, w1, #0x1
  40ce68:	cset	w6, lt  // lt = tstop
  40ce6c:	b	40caa4 <__fxstatat@plt+0x9f04>
  40ce70:	cmp	w0, #0x45
  40ce74:	b.eq	40d468 <__fxstatat@plt+0xa8c8>  // b.none
  40ce78:	cmn	w26, #0x1
  40ce7c:	b.eq	40cc38 <__fxstatat@plt+0xa098>  // b.none
  40ce80:	ldr	w1, [sp, #1256]
  40ce84:	mov	w3, w26
  40ce88:	mov	w4, #0xa                   	// #10
  40ce8c:	cmp	w3, #0x8
  40ce90:	b.gt	40cc40 <__fxstatat@plt+0xa0a0>
  40ce94:	sdiv	w1, w1, w4
  40ce98:	add	w3, w3, #0x1
  40ce9c:	b	40ce8c <__fxstatat@plt+0xa2ec>
  40cea0:	cmp	w26, #0x0
  40cea4:	csel	w24, w26, wzr, ge  // ge = tcont
  40cea8:	ldr	x0, [sp, #120]
  40ceac:	sxtw	x24, w24
  40ceb0:	cmp	x24, #0x0
  40ceb4:	csinc	x24, x24, xzr, ne  // ne = any
  40ceb8:	sub	x0, x0, x19
  40cebc:	cmp	x0, x24
  40cec0:	b.ls	40d518 <__fxstatat@plt+0xa978>  // b.plast
  40cec4:	cbz	x23, 40cf04 <__fxstatat@plt+0xa364>
  40cec8:	cmp	w26, #0x1
  40cecc:	b.le	40cf14 <__fxstatat@plt+0xa374>
  40ced0:	sxtw	x2, w26
  40ced4:	cmp	w27, #0x30
  40ced8:	sub	x2, x2, #0x1
  40cedc:	mov	w0, #0x2b                  	// #43
  40cee0:	add	x22, x23, x2
  40cee4:	ccmp	w27, w0, #0x4, ne  // ne = any
  40cee8:	b.ne	40cf0c <__fxstatat@plt+0xa36c>  // b.any
  40ceec:	mov	w1, #0x30                  	// #48
  40cef0:	mov	x0, x23
  40cef4:	bl	4027c0 <memset@plt>
  40cef8:	mov	x23, x22
  40cefc:	mov	w0, #0xa                   	// #10
  40cf00:	strb	w0, [x23], #1
  40cf04:	add	x19, x19, x24
  40cf08:	b	40c600 <__fxstatat@plt+0x9a60>
  40cf0c:	mov	w1, #0x20                  	// #32
  40cf10:	b	40cef0 <__fxstatat@plt+0xa350>
  40cf14:	mov	x22, x23
  40cf18:	b	40cef8 <__fxstatat@plt+0xa358>
  40cf1c:	mov	w1, #0x1                   	// #1
  40cf20:	cbz	w25, 40ca00 <__fxstatat@plt+0x9e60>
  40cf24:	mov	w2, #0x70                  	// #112
  40cf28:	mov	w22, #0x0                   	// #0
  40cf2c:	b	40c9f0 <__fxstatat@plt+0x9e50>
  40cf30:	mov	w1, #0x0                   	// #0
  40cf34:	b	40cf20 <__fxstatat@plt+0xa380>
  40cf38:	ldr	w1, [x20, #16]
  40cf3c:	mov	w3, #0xb                   	// #11
  40cf40:	mov	w10, #0x0                   	// #0
  40cf44:	mov	w6, #0x0                   	// #0
  40cf48:	mov	w4, #0x1                   	// #1
  40cf4c:	mul	w1, w1, w3
  40cf50:	mov	w3, #0x0                   	// #0
  40cf54:	asr	w1, w1, #5
  40cf58:	add	w1, w1, #0x1
  40cf5c:	b	40caa4 <__fxstatat@plt+0x9f04>
  40cf60:	cmp	w0, #0x45
  40cf64:	b.eq	40d468 <__fxstatat@plt+0xa8c8>  // b.none
  40cf68:	ldr	w1, [x20]
  40cf6c:	b	40cbf8 <__fxstatat@plt+0xa058>
  40cf70:	mov	x1, x20
  40cf74:	mov	x2, #0x38                  	// #56
  40cf78:	add	x0, sp, #0xe0
  40cf7c:	bl	4024d0 <memcpy@plt>
  40cf80:	ldr	x0, [sp, #1248]
  40cf84:	add	x1, sp, #0xe0
  40cf88:	add	x24, sp, #0xdf
  40cf8c:	bl	4105c0 <_obstack_memory_used@@Base+0x404>
  40cf90:	lsr	x6, x0, #63
  40cf94:	and	w6, w6, #0xff
  40cf98:	mov	x3, x0
  40cf9c:	mov	x4, #0xa                   	// #10
  40cfa0:	mov	w7, #0x30                  	// #48
  40cfa4:	sdiv	x1, x3, x4
  40cfa8:	cmp	x0, #0x0
  40cfac:	msub	x2, x1, x4, x3
  40cfb0:	mov	x3, x1
  40cfb4:	and	w1, w2, #0xff
  40cfb8:	add	w1, w1, #0x30
  40cfbc:	sub	w2, w7, w2, uxtb
  40cfc0:	and	w2, w2, #0xff
  40cfc4:	and	w1, w1, #0xff
  40cfc8:	csel	w1, w1, w2, ge  // ge = tcont
  40cfcc:	strb	w1, [x24, #-1]!
  40cfd0:	cbnz	x3, 40cfa4 <__fxstatat@plt+0xa404>
  40cfd4:	mov	w4, #0x1                   	// #1
  40cfd8:	b	40caf8 <__fxstatat@plt+0x9f58>
  40cfdc:	cmp	w0, #0x4f
  40cfe0:	b.eq	40d468 <__fxstatat@plt+0xa8c8>  // b.none
  40cfe4:	mov	w2, #0x58                  	// #88
  40cfe8:	b	40c8ac <__fxstatat@plt+0x9d0c>
  40cfec:	cmp	w26, #0x0
  40cff0:	csel	w24, w26, wzr, ge  // ge = tcont
  40cff4:	ldr	x0, [sp, #120]
  40cff8:	sxtw	x24, w24
  40cffc:	cmp	x24, #0x0
  40d000:	csinc	x24, x24, xzr, ne  // ne = any
  40d004:	sub	x0, x0, x19
  40d008:	cmp	x0, x24
  40d00c:	b.ls	40d518 <__fxstatat@plt+0xa978>  // b.plast
  40d010:	cbz	x23, 40cf04 <__fxstatat@plt+0xa364>
  40d014:	cmp	w26, #0x1
  40d018:	b.le	40d058 <__fxstatat@plt+0xa4b8>
  40d01c:	sxtw	x2, w26
  40d020:	cmp	w27, #0x30
  40d024:	sub	x2, x2, #0x1
  40d028:	mov	w0, #0x2b                  	// #43
  40d02c:	add	x22, x23, x2
  40d030:	ccmp	w27, w0, #0x4, ne  // ne = any
  40d034:	b.ne	40d050 <__fxstatat@plt+0xa4b0>  // b.any
  40d038:	mov	w1, #0x30                  	// #48
  40d03c:	mov	x0, x23
  40d040:	bl	4027c0 <memset@plt>
  40d044:	mov	x23, x22
  40d048:	mov	w0, #0x9                   	// #9
  40d04c:	b	40cf00 <__fxstatat@plt+0xa360>
  40d050:	mov	w1, #0x20                  	// #32
  40d054:	b	40d03c <__fxstatat@plt+0xa49c>
  40d058:	mov	x22, x23
  40d05c:	b	40d044 <__fxstatat@plt+0xa4a4>
  40d060:	ldr	w1, [x20, #24]
  40d064:	mov	w4, #0x7                   	// #7
  40d068:	add	w3, w1, #0x6
  40d06c:	sdiv	w1, w3, w4
  40d070:	msub	w1, w1, w4, w3
  40d074:	add	w1, w1, #0x1
  40d078:	mov	w4, #0x1                   	// #1
  40d07c:	b	40cc18 <__fxstatat@plt+0xa078>
  40d080:	cmp	w0, #0x45
  40d084:	b.eq	40d468 <__fxstatat@plt+0xa8c8>  // b.none
  40d088:	ldp	w3, w1, [x20, #24]
  40d08c:	sub	w1, w1, w3
  40d090:	mov	w3, #0x7                   	// #7
  40d094:	add	w1, w1, #0x7
  40d098:	sdiv	w1, w1, w3
  40d09c:	b	40cbf8 <__fxstatat@plt+0xa058>
  40d0a0:	cmp	w0, #0x45
  40d0a4:	b.eq	40d468 <__fxstatat@plt+0xa8c8>  // b.none
  40d0a8:	ldp	w7, w6, [x20, #20]
  40d0ac:	mov	w1, #0xffffff9c            	// #-100
  40d0b0:	ldr	w3, [x20, #28]
  40d0b4:	mov	w11, #0x12c                 	// #300
  40d0b8:	cmp	w7, #0x0
  40d0bc:	mov	w12, #0x7                   	// #7
  40d0c0:	csel	w11, w11, w1, lt  // lt = tstop
  40d0c4:	sub	w1, w3, w6
  40d0c8:	add	w4, w1, #0x17e
  40d0cc:	add	w11, w7, w11
  40d0d0:	sdiv	w1, w4, w12
  40d0d4:	msub	w1, w1, w12, w4
  40d0d8:	sub	w1, w3, w1
  40d0dc:	adds	w4, w1, #0x3
  40d0e0:	b.pl	40d190 <__fxstatat@plt+0xa5f0>  // b.nfrst
  40d0e4:	sub	w11, w11, #0x1
  40d0e8:	tst	x11, #0x3
  40d0ec:	b.ne	40d180 <__fxstatat@plt+0xa5e0>  // b.any
  40d0f0:	mov	w4, #0x64                  	// #100
  40d0f4:	sdiv	w1, w11, w4
  40d0f8:	msub	w1, w1, w4, w11
  40d0fc:	cbnz	w1, 40d188 <__fxstatat@plt+0xa5e8>
  40d100:	mov	w4, #0x190                 	// #400
  40d104:	sdiv	w1, w11, w4
  40d108:	msub	w11, w1, w4, w11
  40d10c:	cmp	w11, #0x0
  40d110:	cset	w4, eq  // eq = none
  40d114:	add	w4, w4, #0x16d
  40d118:	mov	w11, #0xffffffff            	// #-1
  40d11c:	add	w3, w4, w3
  40d120:	mov	w4, #0x7                   	// #7
  40d124:	sub	w6, w3, w6
  40d128:	add	w6, w6, #0x17e
  40d12c:	sdiv	w1, w6, w4
  40d130:	msub	w6, w1, w4, w6
  40d134:	sub	w3, w3, w6
  40d138:	add	w4, w3, #0x3
  40d13c:	cmp	w10, #0x47
  40d140:	b.eq	40d20c <__fxstatat@plt+0xa66c>  // b.none
  40d144:	cmp	w10, #0x67
  40d148:	b.ne	40d22c <__fxstatat@plt+0xa68c>  // b.any
  40d14c:	mov	w4, #0x64                  	// #100
  40d150:	sdiv	w1, w7, w4
  40d154:	msub	w1, w1, w4, w7
  40d158:	add	w1, w1, w11
  40d15c:	sdiv	w3, w1, w4
  40d160:	msub	w1, w3, w4, w1
  40d164:	tbz	w1, #31, 40d204 <__fxstatat@plt+0xa664>
  40d168:	mov	w3, #0xfffff894            	// #-1900
  40d16c:	sub	w11, w3, w11
  40d170:	cmp	w7, w11
  40d174:	b.ge	40d200 <__fxstatat@plt+0xa660>  // b.tcont
  40d178:	neg	w1, w1
  40d17c:	b	40d204 <__fxstatat@plt+0xa664>
  40d180:	mov	w4, #0x0                   	// #0
  40d184:	b	40d114 <__fxstatat@plt+0xa574>
  40d188:	mov	w4, #0x1                   	// #1
  40d18c:	b	40d114 <__fxstatat@plt+0xa574>
  40d190:	tst	x11, #0x3
  40d194:	b.ne	40d1f0 <__fxstatat@plt+0xa650>  // b.any
  40d198:	mov	w12, #0x64                  	// #100
  40d19c:	sdiv	w1, w11, w12
  40d1a0:	msub	w1, w1, w12, w11
  40d1a4:	cbnz	w1, 40d1f8 <__fxstatat@plt+0xa658>
  40d1a8:	mov	w12, #0x190                 	// #400
  40d1ac:	sdiv	w1, w11, w12
  40d1b0:	msub	w11, w1, w12, w11
  40d1b4:	cmp	w11, #0x0
  40d1b8:	cset	w11, eq  // eq = none
  40d1bc:	add	w11, w11, #0x16d
  40d1c0:	sub	w3, w3, w11
  40d1c4:	mov	w11, #0x7                   	// #7
  40d1c8:	sub	w6, w3, w6
  40d1cc:	add	w6, w6, #0x17e
  40d1d0:	sdiv	w1, w6, w11
  40d1d4:	msub	w6, w1, w11, w6
  40d1d8:	sub	w3, w3, w6
  40d1dc:	adds	w3, w3, #0x3
  40d1e0:	csel	w4, w4, w3, mi  // mi = first
  40d1e4:	cmp	w3, #0x0
  40d1e8:	cset	w11, ge  // ge = tcont
  40d1ec:	b	40d13c <__fxstatat@plt+0xa59c>
  40d1f0:	mov	w11, #0x0                   	// #0
  40d1f4:	b	40d1bc <__fxstatat@plt+0xa61c>
  40d1f8:	mov	w11, #0x1                   	// #1
  40d1fc:	b	40d1bc <__fxstatat@plt+0xa61c>
  40d200:	add	w1, w1, #0x64
  40d204:	mov	w6, #0x0                   	// #0
  40d208:	b	40ca68 <__fxstatat@plt+0x9ec8>
  40d20c:	mov	w1, #0xfffff894            	// #-1900
  40d210:	sub	w1, w1, w11
  40d214:	cmp	w7, w1
  40d218:	add	w1, w7, #0x76c
  40d21c:	cset	w6, lt  // lt = tstop
  40d220:	add	w1, w1, w11
  40d224:	mov	w4, #0x4                   	// #4
  40d228:	b	40ca6c <__fxstatat@plt+0x9ecc>
  40d22c:	mov	w1, #0x7                   	// #7
  40d230:	sdiv	w1, w4, w1
  40d234:	add	w1, w1, #0x1
  40d238:	b	40cbf8 <__fxstatat@plt+0xa058>
  40d23c:	cmp	w0, #0x45
  40d240:	b.eq	40d468 <__fxstatat@plt+0xa8c8>  // b.none
  40d244:	ldr	w3, [x20, #24]
  40d248:	mov	w4, #0x7                   	// #7
  40d24c:	add	w3, w3, #0x6
  40d250:	sdiv	w1, w3, w4
  40d254:	msub	w3, w1, w4, w3
  40d258:	ldr	w1, [x20, #28]
  40d25c:	sub	w1, w1, w3
  40d260:	add	w1, w1, w4
  40d264:	sdiv	w1, w1, w4
  40d268:	b	40cbf8 <__fxstatat@plt+0xa058>
  40d26c:	cmp	w0, #0x45
  40d270:	b.eq	40d468 <__fxstatat@plt+0xa8c8>  // b.none
  40d274:	ldr	w1, [x20, #24]
  40d278:	b	40d078 <__fxstatat@plt+0xa4d8>
  40d27c:	cmp	w0, #0x45
  40d280:	b.eq	40ca0c <__fxstatat@plt+0x9e6c>  // b.none
  40d284:	cmp	w0, #0x4f
  40d288:	b.eq	40d468 <__fxstatat@plt+0xa8c8>  // b.none
  40d28c:	ldr	w1, [x20, #20]
  40d290:	cmn	w1, #0x76c
  40d294:	add	w1, w1, #0x76c
  40d298:	cset	w6, lt  // lt = tstop
  40d29c:	b	40d224 <__fxstatat@plt+0xa684>
  40d2a0:	cmp	w0, #0x45
  40d2a4:	b.eq	40ca14 <__fxstatat@plt+0x9e74>  // b.none
  40d2a8:	ldr	w3, [x20, #20]
  40d2ac:	mov	w4, #0x64                  	// #100
  40d2b0:	sdiv	w1, w3, w4
  40d2b4:	msub	w1, w1, w4, w3
  40d2b8:	tbz	w1, #31, 40d204 <__fxstatat@plt+0xa664>
  40d2bc:	cmn	w3, #0x76c
  40d2c0:	b	40d174 <__fxstatat@plt+0xa5d4>
  40d2c4:	ldr	x0, [sp, #128]
  40d2c8:	cmp	w25, #0x0
  40d2cc:	csel	w22, w22, wzr, eq  // eq = none
  40d2d0:	bl	402540 <strlen@plt>
  40d2d4:	mov	x28, x0
  40d2d8:	cmp	w26, #0x0
  40d2dc:	csel	w1, w26, wzr, ge  // ge = tcont
  40d2e0:	cmp	x28, w1, sxtw
  40d2e4:	sxtw	x0, w1
  40d2e8:	csel	x1, x28, x0, cs  // cs = hs, nlast
  40d2ec:	str	x1, [sp, #136]
  40d2f0:	ldr	x1, [sp, #120]
  40d2f4:	ldr	x2, [sp, #136]
  40d2f8:	sub	x1, x1, x19
  40d2fc:	cmp	x1, x2
  40d300:	b.ls	40d518 <__fxstatat@plt+0xa978>  // b.plast
  40d304:	cbz	x23, 40c9d8 <__fxstatat@plt+0x9e38>
  40d308:	cmp	x28, x0
  40d30c:	b.cs	40d34c <__fxstatat@plt+0xa7ac>  // b.hs, b.nlast
  40d310:	sxtw	x2, w26
  40d314:	cmp	w27, #0x30
  40d318:	sub	x2, x2, x28
  40d31c:	mov	w0, #0x2b                  	// #43
  40d320:	add	x24, x23, x2
  40d324:	ccmp	w27, w0, #0x4, ne  // ne = any
  40d328:	b.ne	40d344 <__fxstatat@plt+0xa7a4>  // b.any
  40d32c:	mov	w1, #0x30                  	// #48
  40d330:	mov	x0, x23
  40d334:	bl	4027c0 <memset@plt>
  40d338:	mov	x2, x28
  40d33c:	ldr	x1, [sp, #128]
  40d340:	b	40c9c8 <__fxstatat@plt+0x9e28>
  40d344:	mov	w1, #0x20                  	// #32
  40d348:	b	40d330 <__fxstatat@plt+0xa790>
  40d34c:	mov	x24, x23
  40d350:	b	40d338 <__fxstatat@plt+0xa798>
  40d354:	add	x11, x11, #0x1
  40d358:	ldrb	w1, [x21, x11]
  40d35c:	add	x3, x21, x11
  40d360:	cmp	w1, #0x3a
  40d364:	b.eq	40d354 <__fxstatat@plt+0xa7b4>  // b.none
  40d368:	cmp	w1, #0x7a
  40d36c:	b.ne	40d468 <__fxstatat@plt+0xa8c8>  // b.any
  40d370:	mov	x21, x3
  40d374:	ldr	w1, [x20, #32]
  40d378:	tbnz	w1, #31, 40c600 <__fxstatat@plt+0x9a60>
  40d37c:	ldr	x7, [x20, #40]
  40d380:	cmp	w7, #0x0
  40d384:	b.lt	40d3f0 <__fxstatat@plt+0xa850>  // b.tstop
  40d388:	b.ne	40d3f8 <__fxstatat@plt+0xa858>  // b.any
  40d38c:	ldr	x1, [sp, #128]
  40d390:	ldrb	w1, [x1]
  40d394:	cmp	w1, #0x2d
  40d398:	cset	w6, eq  // eq = none
  40d39c:	mov	w4, #0x3c                  	// #60
  40d3a0:	mov	w1, #0xe10                 	// #3600
  40d3a4:	cmp	x11, #0x3
  40d3a8:	sdiv	w3, w7, w4
  40d3ac:	sdiv	w1, w7, w1
  40d3b0:	sdiv	w10, w3, w4
  40d3b4:	msub	w10, w10, w4, w3
  40d3b8:	msub	w3, w3, w4, w7
  40d3bc:	b.hi	40d468 <__fxstatat@plt+0xa8c8>  // b.pmore
  40d3c0:	cmp	w11, #0x3
  40d3c4:	b.hi	40d468 <__fxstatat@plt+0xa8c8>  // b.pmore
  40d3c8:	adrp	x4, 416000 <_obstack_memory_used@@Base+0x5e44>
  40d3cc:	add	x4, x4, #0x354
  40d3d0:	ldrb	w4, [x4, w11, uxtw]
  40d3d4:	adr	x5, 40d3e0 <__fxstatat@plt+0xa840>
  40d3d8:	add	x4, x5, w4, sxtb #2
  40d3dc:	br	x4
  40d3e0:	mov	x11, #0x1                   	// #1
  40d3e4:	b	40d358 <__fxstatat@plt+0xa7b8>
  40d3e8:	mov	x11, #0x0                   	// #0
  40d3ec:	b	40d374 <__fxstatat@plt+0xa7d4>
  40d3f0:	mov	w6, #0x1                   	// #1
  40d3f4:	b	40d39c <__fxstatat@plt+0xa7fc>
  40d3f8:	mov	w6, #0x0                   	// #0
  40d3fc:	b	40d39c <__fxstatat@plt+0xa7fc>
  40d400:	mov	w3, #0x64                  	// #100
  40d404:	mov	w4, #0x5                   	// #5
  40d408:	madd	w1, w1, w3, w10
  40d40c:	mov	w10, #0x0                   	// #0
  40d410:	mov	w3, #0x1                   	// #1
  40d414:	b	40caa4 <__fxstatat@plt+0x9f04>
  40d418:	mov	w3, #0x64                  	// #100
  40d41c:	mov	w4, #0x6                   	// #6
  40d420:	madd	w1, w1, w3, w10
  40d424:	mov	w10, #0x4                   	// #4
  40d428:	mov	w3, #0x1                   	// #1
  40d42c:	b	40caa4 <__fxstatat@plt+0x9f04>
  40d430:	mov	w4, #0x64                  	// #100
  40d434:	mul	w10, w10, w4
  40d438:	mov	w4, #0x2710                	// #10000
  40d43c:	madd	w1, w1, w4, w10
  40d440:	mov	w10, #0x14                  	// #20
  40d444:	mov	w4, #0x9                   	// #9
  40d448:	add	w1, w1, w3
  40d44c:	mov	w3, #0x1                   	// #1
  40d450:	b	40caa4 <__fxstatat@plt+0x9f04>
  40d454:	cbnz	w3, 40d430 <__fxstatat@plt+0xa890>
  40d458:	cbnz	w10, 40d418 <__fxstatat@plt+0xa878>
  40d45c:	mov	w3, #0x1                   	// #1
  40d460:	b	40ce30 <__fxstatat@plt+0xa290>
  40d464:	sub	x21, x21, #0x1
  40d468:	mov	x0, x21
  40d46c:	add	w4, w21, #0x1
  40d470:	sub	w1, w4, w0
  40d474:	mov	x25, x0
  40d478:	ldrb	w2, [x0], #-1
  40d47c:	cmp	w2, #0x25
  40d480:	b.ne	40d470 <__fxstatat@plt+0xa8d0>  // b.any
  40d484:	cmp	w26, #0x0
  40d488:	sxtw	x28, w1
  40d48c:	csel	w0, w26, wzr, ge  // ge = tcont
  40d490:	sxtw	x0, w0
  40d494:	cmp	x0, w1, sxtw
  40d498:	csel	x1, x28, x0, ls  // ls = plast
  40d49c:	str	x1, [sp, #136]
  40d4a0:	ldr	x1, [sp, #120]
  40d4a4:	ldr	x2, [sp, #136]
  40d4a8:	sub	x1, x1, x19
  40d4ac:	cmp	x1, x2
  40d4b0:	b.ls	40d518 <__fxstatat@plt+0xa978>  // b.plast
  40d4b4:	cbz	x23, 40c9d8 <__fxstatat@plt+0x9e38>
  40d4b8:	cmp	x28, x0
  40d4bc:	b.cs	40d508 <__fxstatat@plt+0xa968>  // b.hs, b.nlast
  40d4c0:	sxtw	x2, w26
  40d4c4:	cmp	w27, #0x30
  40d4c8:	sub	x2, x2, x28
  40d4cc:	mov	w0, #0x2b                  	// #43
  40d4d0:	add	x24, x23, x2
  40d4d4:	ccmp	w27, w0, #0x4, ne  // ne = any
  40d4d8:	b.ne	40d500 <__fxstatat@plt+0xa960>  // b.any
  40d4dc:	mov	w1, #0x30                  	// #48
  40d4e0:	mov	x0, x23
  40d4e4:	bl	4027c0 <memset@plt>
  40d4e8:	mov	x2, x28
  40d4ec:	mov	x1, x25
  40d4f0:	mov	x0, x24
  40d4f4:	cbz	w22, 40d510 <__fxstatat@plt+0xa970>
  40d4f8:	bl	40c488 <__fxstatat@plt+0x98e8>
  40d4fc:	b	40c9d4 <__fxstatat@plt+0x9e34>
  40d500:	mov	w1, #0x20                  	// #32
  40d504:	b	40d4e0 <__fxstatat@plt+0xa940>
  40d508:	mov	x24, x23
  40d50c:	b	40d4e8 <__fxstatat@plt+0xa948>
  40d510:	bl	4024d0 <memcpy@plt>
  40d514:	b	40c9d4 <__fxstatat@plt+0x9e34>
  40d518:	mov	x19, #0x0                   	// #0
  40d51c:	mov	x0, x19
  40d520:	ldp	x29, x30, [sp, #16]
  40d524:	ldp	x19, x20, [sp, #32]
  40d528:	ldp	x21, x22, [sp, #48]
  40d52c:	ldp	x23, x24, [sp, #64]
  40d530:	ldp	x25, x26, [sp, #80]
  40d534:	ldp	x27, x28, [sp, #96]
  40d538:	add	sp, sp, #0x4e0
  40d53c:	ret
  40d540:	mov	w25, #0x2d                  	// #45
  40d544:	cmp	w27, #0x2d
  40d548:	b.ne	40cb20 <__fxstatat@plt+0x9f80>  // b.any
  40d54c:	cmp	w26, #0x0
  40d550:	csel	w1, w26, wzr, ge  // ge = tcont
  40d554:	sxtw	x1, w1
  40d558:	cmp	x1, #0x0
  40d55c:	csinc	x3, x1, xzr, ne  // ne = any
  40d560:	cmp	x3, x0
  40d564:	b.cs	40d518 <__fxstatat@plt+0xa978>  // b.hs, b.nlast
  40d568:	cbz	x23, 40d5a4 <__fxstatat@plt+0xaa04>
  40d56c:	ldr	w0, [sp, #136]
  40d570:	cmp	w0, #0x0
  40d574:	ccmp	x1, #0x1, #0x0, eq  // eq = none
  40d578:	b.ls	40d5a0 <__fxstatat@plt+0xaa00>  // b.plast
  40d57c:	sxtw	x28, w26
  40d580:	mov	x0, x23
  40d584:	sub	x28, x28, #0x1
  40d588:	mov	w1, #0x20                  	// #32
  40d58c:	mov	x2, x28
  40d590:	str	x3, [sp, #144]
  40d594:	bl	4027c0 <memset@plt>
  40d598:	add	x23, x23, x28
  40d59c:	ldr	x3, [sp, #144]
  40d5a0:	strb	w25, [x23], #1
  40d5a4:	add	x19, x19, x3
  40d5a8:	ldr	x0, [sp, #168]
  40d5ac:	cmp	w26, #0x0
  40d5b0:	csel	w1, w26, wzr, ge  // ge = tcont
  40d5b4:	sub	x28, x0, x24
  40d5b8:	cmp	x28, w1, sxtw
  40d5bc:	sxtw	x0, w1
  40d5c0:	csel	x1, x28, x0, cs  // cs = hs, nlast
  40d5c4:	str	x1, [sp, #144]
  40d5c8:	ldr	x1, [sp, #120]
  40d5cc:	ldr	x2, [sp, #144]
  40d5d0:	sub	x1, x1, x19
  40d5d4:	cmp	x1, x2
  40d5d8:	b.ls	40d518 <__fxstatat@plt+0xa978>  // b.plast
  40d5dc:	cbz	x23, 40c7e4 <__fxstatat@plt+0x9c44>
  40d5e0:	ldr	w1, [sp, #136]
  40d5e4:	cmp	w1, #0x0
  40d5e8:	ccmp	x28, x0, #0x2, eq  // eq = none
  40d5ec:	b.cs	40cda0 <__fxstatat@plt+0xa200>  // b.hs, b.nlast
  40d5f0:	sxtw	x2, w26
  40d5f4:	cmp	w27, #0x30
  40d5f8:	sub	x2, x2, x28
  40d5fc:	mov	w0, #0x2b                  	// #43
  40d600:	add	x25, x23, x2
  40d604:	ccmp	w27, w0, #0x4, ne  // ne = any
  40d608:	b.ne	40cd98 <__fxstatat@plt+0xa1f8>  // b.any
  40d60c:	mov	w1, #0x30                  	// #48
  40d610:	mov	x0, x23
  40d614:	bl	4027c0 <memset@plt>
  40d618:	mov	x2, x28
  40d61c:	mov	x1, x24
  40d620:	mov	x0, x25
  40d624:	cbz	w22, 40cda8 <__fxstatat@plt+0xa208>
  40d628:	bl	40c488 <__fxstatat@plt+0x98e8>
  40d62c:	add	x23, x25, x28
  40d630:	b	40c7e4 <__fxstatat@plt+0x9c44>
  40d634:	mov	w25, #0x2b                  	// #43
  40d638:	b	40d544 <__fxstatat@plt+0xa9a4>
  40d63c:	sub	sp, sp, #0x30
  40d640:	mov	w6, #0xffffffff            	// #-1
  40d644:	add	x7, sp, #0x2f
  40d648:	stp	x29, x30, [sp, #16]
  40d64c:	add	x29, sp, #0x10
  40d650:	str	x4, [sp]
  40d654:	mov	w4, #0x0                   	// #0
  40d658:	str	w5, [sp, #8]
  40d65c:	mov	w5, #0x0                   	// #0
  40d660:	strb	wzr, [sp, #47]
  40d664:	bl	40c4dc <__fxstatat@plt+0x993c>
  40d668:	ldp	x29, x30, [sp, #16]
  40d66c:	add	sp, sp, #0x30
  40d670:	ret
  40d674:	stp	x29, x30, [sp, #-48]!
  40d678:	mov	x29, sp
  40d67c:	stp	x19, x20, [sp, #16]
  40d680:	str	x21, [sp, #32]
  40d684:	cbnz	x0, 40d6a0 <__fxstatat@plt+0xab00>
  40d688:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  40d68c:	ldr	x1, [x0, #1464]
  40d690:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x5e44>
  40d694:	add	x0, x0, #0x358
  40d698:	bl	402550 <fputs@plt>
  40d69c:	bl	4028b0 <abort@plt>
  40d6a0:	mov	x19, x0
  40d6a4:	mov	w1, #0x2f                  	// #47
  40d6a8:	bl	402860 <strrchr@plt>
  40d6ac:	mov	x20, x0
  40d6b0:	cbz	x0, 40d700 <__fxstatat@plt+0xab60>
  40d6b4:	add	x21, x0, #0x1
  40d6b8:	sub	x0, x21, x19
  40d6bc:	cmp	x0, #0x6
  40d6c0:	b.le	40d700 <__fxstatat@plt+0xab60>
  40d6c4:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x5e44>
  40d6c8:	sub	x0, x20, #0x6
  40d6cc:	add	x1, x1, #0x390
  40d6d0:	mov	x2, #0x7                   	// #7
  40d6d4:	bl	402780 <strncmp@plt>
  40d6d8:	cbnz	w0, 40d700 <__fxstatat@plt+0xab60>
  40d6dc:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x5e44>
  40d6e0:	mov	x0, x21
  40d6e4:	add	x1, x1, #0x398
  40d6e8:	mov	x2, #0x3                   	// #3
  40d6ec:	bl	402780 <strncmp@plt>
  40d6f0:	cbnz	w0, 40d720 <__fxstatat@plt+0xab80>
  40d6f4:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  40d6f8:	add	x19, x20, #0x4
  40d6fc:	str	x19, [x0, #1496]
  40d700:	adrp	x0, 42c000 <__progname@@GLIBC_2.17+0xa28>
  40d704:	ldr	x21, [sp, #32]
  40d708:	str	x19, [x0, #1888]
  40d70c:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  40d710:	str	x19, [x0, #1456]
  40d714:	ldp	x19, x20, [sp, #16]
  40d718:	ldp	x29, x30, [sp], #48
  40d71c:	ret
  40d720:	mov	x19, x21
  40d724:	b	40d700 <__fxstatat@plt+0xab60>
  40d728:	stp	xzr, xzr, [x8]
  40d72c:	cmp	w0, #0xa
  40d730:	stp	xzr, xzr, [x8, #16]
  40d734:	stp	xzr, xzr, [x8, #32]
  40d738:	str	xzr, [x8, #48]
  40d73c:	b.ne	40d74c <__fxstatat@plt+0xabac>  // b.any
  40d740:	stp	x29, x30, [sp, #-16]!
  40d744:	mov	x29, sp
  40d748:	bl	4028b0 <abort@plt>
  40d74c:	str	w0, [x8]
  40d750:	ret
  40d754:	stp	x29, x30, [sp, #-48]!
  40d758:	mov	w2, #0x5                   	// #5
  40d75c:	mov	x29, sp
  40d760:	stp	x19, x20, [sp, #16]
  40d764:	mov	x20, x0
  40d768:	str	x21, [sp, #32]
  40d76c:	mov	w21, w1
  40d770:	mov	x1, x0
  40d774:	mov	x0, #0x0                   	// #0
  40d778:	bl	402ac0 <dcgettext@plt>
  40d77c:	mov	x19, x0
  40d780:	cmp	x20, x0
  40d784:	b.ne	40d7f8 <__fxstatat@plt+0xac58>  // b.any
  40d788:	bl	4107d4 <_obstack_memory_used@@Base+0x618>
  40d78c:	ldrb	w2, [x0]
  40d790:	and	w2, w2, #0xffffffdf
  40d794:	cmp	w2, #0x55
  40d798:	b.ne	40d80c <__fxstatat@plt+0xac6c>  // b.any
  40d79c:	ldrb	w1, [x0, #1]
  40d7a0:	and	w1, w1, #0xffffffdf
  40d7a4:	cmp	w1, #0x54
  40d7a8:	b.ne	40d884 <__fxstatat@plt+0xace4>  // b.any
  40d7ac:	ldrb	w1, [x0, #2]
  40d7b0:	and	w1, w1, #0xffffffdf
  40d7b4:	cmp	w1, #0x46
  40d7b8:	b.ne	40d884 <__fxstatat@plt+0xace4>  // b.any
  40d7bc:	ldrb	w1, [x0, #3]
  40d7c0:	cmp	w1, #0x2d
  40d7c4:	b.ne	40d884 <__fxstatat@plt+0xace4>  // b.any
  40d7c8:	ldrb	w1, [x0, #4]
  40d7cc:	cmp	w1, #0x38
  40d7d0:	b.ne	40d884 <__fxstatat@plt+0xace4>  // b.any
  40d7d4:	ldrb	w0, [x0, #5]
  40d7d8:	cbnz	w0, 40d884 <__fxstatat@plt+0xace4>
  40d7dc:	ldrb	w1, [x19]
  40d7e0:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x5e44>
  40d7e4:	adrp	x19, 416000 <_obstack_memory_used@@Base+0x5e44>
  40d7e8:	add	x0, x0, #0x39e
  40d7ec:	cmp	w1, #0x60
  40d7f0:	add	x19, x19, #0x3a9
  40d7f4:	csel	x19, x19, x0, eq  // eq = none
  40d7f8:	mov	x0, x19
  40d7fc:	ldp	x19, x20, [sp, #16]
  40d800:	ldr	x21, [sp, #32]
  40d804:	ldp	x29, x30, [sp], #48
  40d808:	ret
  40d80c:	cmp	w2, #0x47
  40d810:	b.ne	40d884 <__fxstatat@plt+0xace4>  // b.any
  40d814:	ldrb	w1, [x0, #1]
  40d818:	and	w1, w1, #0xffffffdf
  40d81c:	cmp	w1, #0x42
  40d820:	b.ne	40d884 <__fxstatat@plt+0xace4>  // b.any
  40d824:	ldrb	w1, [x0, #2]
  40d828:	cmp	w1, #0x31
  40d82c:	b.ne	40d884 <__fxstatat@plt+0xace4>  // b.any
  40d830:	ldrb	w1, [x0, #3]
  40d834:	cmp	w1, #0x38
  40d838:	b.ne	40d884 <__fxstatat@plt+0xace4>  // b.any
  40d83c:	ldrb	w1, [x0, #4]
  40d840:	cmp	w1, #0x30
  40d844:	b.ne	40d884 <__fxstatat@plt+0xace4>  // b.any
  40d848:	ldrb	w1, [x0, #5]
  40d84c:	cmp	w1, #0x33
  40d850:	b.ne	40d884 <__fxstatat@plt+0xace4>  // b.any
  40d854:	ldrb	w1, [x0, #6]
  40d858:	cmp	w1, #0x30
  40d85c:	b.ne	40d884 <__fxstatat@plt+0xace4>  // b.any
  40d860:	ldrb	w0, [x0, #7]
  40d864:	cbnz	w0, 40d884 <__fxstatat@plt+0xace4>
  40d868:	ldrb	w1, [x19]
  40d86c:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x5e44>
  40d870:	adrp	x19, 416000 <_obstack_memory_used@@Base+0x5e44>
  40d874:	add	x0, x0, #0x3a2
  40d878:	cmp	w1, #0x60
  40d87c:	add	x19, x19, #0x3a5
  40d880:	b	40d7f4 <__fxstatat@plt+0xac54>
  40d884:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x5e44>
  40d888:	adrp	x19, 416000 <_obstack_memory_used@@Base+0x5e44>
  40d88c:	cmp	w21, #0x9
  40d890:	add	x0, x0, #0x980
  40d894:	add	x19, x19, #0x39c
  40d898:	b	40d7f4 <__fxstatat@plt+0xac54>
  40d89c:	sub	sp, sp, #0xf0
  40d8a0:	stp	x29, x30, [sp, #16]
  40d8a4:	add	x29, sp, #0x10
  40d8a8:	stp	x19, x20, [sp, #32]
  40d8ac:	stp	x21, x22, [sp, #48]
  40d8b0:	mov	x21, x2
  40d8b4:	stp	x23, x24, [sp, #64]
  40d8b8:	mov	x24, x3
  40d8bc:	stp	x25, x26, [sp, #80]
  40d8c0:	mov	w25, w4
  40d8c4:	mov	x26, x0
  40d8c8:	stp	x27, x28, [sp, #96]
  40d8cc:	str	x1, [sp, #112]
  40d8d0:	str	w5, [sp, #120]
  40d8d4:	str	x7, [sp, #128]
  40d8d8:	str	x6, [sp, #152]
  40d8dc:	bl	4029a0 <__ctype_get_mb_cur_max@plt>
  40d8e0:	str	x0, [sp, #160]
  40d8e4:	cmp	w25, #0xa
  40d8e8:	ldr	x0, [sp, #120]
  40d8ec:	str	xzr, [sp, #136]
  40d8f0:	ubfx	x28, x0, #1, #1
  40d8f4:	mov	w0, #0x1                   	// #1
  40d8f8:	str	w0, [sp, #148]
  40d8fc:	b.hi	40daf8 <__fxstatat@plt+0xaf58>  // b.pmore
  40d900:	mov	w20, #0x0                   	// #0
  40d904:	mov	w23, #0x0                   	// #0
  40d908:	mov	w22, #0x0                   	// #0
  40d90c:	mov	x10, #0x0                   	// #0
  40d910:	mov	x6, #0x0                   	// #0
  40d914:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x5e44>
  40d918:	add	x0, x0, #0x3f8
  40d91c:	ldrb	w0, [x0, w25, uxtw]
  40d920:	adr	x1, 40d92c <__fxstatat@plt+0xad8c>
  40d924:	add	x0, x1, w0, sxtb #2
  40d928:	br	x0
  40d92c:	ldr	x0, [sp, #112]
  40d930:	mov	w28, #0x0                   	// #0
  40d934:	str	x0, [sp, #136]
  40d938:	b	40d914 <__fxstatat@plt+0xad74>
  40d93c:	mov	w28, #0x0                   	// #0
  40d940:	mov	x19, #0x0                   	// #0
  40d944:	b	40d964 <__fxstatat@plt+0xadc4>
  40d948:	mov	w28, #0x1                   	// #1
  40d94c:	adrp	x6, 416000 <_obstack_memory_used@@Base+0x5e44>
  40d950:	mov	w22, w28
  40d954:	add	x6, x6, #0x39c
  40d958:	mov	x10, #0x1                   	// #1
  40d95c:	mov	x19, #0x0                   	// #0
  40d960:	mov	w25, #0x5                   	// #5
  40d964:	ldr	x0, [sp, #136]
  40d968:	mov	x13, #0x0                   	// #0
  40d96c:	str	w20, [sp, #144]
  40d970:	ldr	x27, [sp, #112]
  40d974:	str	x0, [sp, #112]
  40d978:	cmn	x24, #0x1
  40d97c:	b.ne	40e398 <__fxstatat@plt+0xb7f8>  // b.any
  40d980:	ldrb	w0, [x21, x13]
  40d984:	cmp	w0, #0x0
  40d988:	cset	w14, ne  // ne = any
  40d98c:	cmp	w25, #0x2
  40d990:	cbnz	w14, 40db1c <__fxstatat@plt+0xaf7c>
  40d994:	cset	w0, eq  // eq = none
  40d998:	cmp	x19, #0x0
  40d99c:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  40d9a0:	b.eq	40d9a8 <__fxstatat@plt+0xae08>  // b.none
  40d9a4:	cbnz	w28, 40dc30 <__fxstatat@plt+0xb090>
  40d9a8:	eor	w5, w28, #0x1
  40d9ac:	ands	w0, w0, w5
  40d9b0:	b.eq	40e3fc <__fxstatat@plt+0xb85c>  // b.none
  40d9b4:	ldr	w1, [sp, #144]
  40d9b8:	cbz	w1, 40e3c0 <__fxstatat@plt+0xb820>
  40d9bc:	ldr	w0, [sp, #148]
  40d9c0:	cbz	w0, 40e3a0 <__fxstatat@plt+0xb800>
  40d9c4:	ldr	w5, [sp, #120]
  40d9c8:	mov	x3, x24
  40d9cc:	ldr	x1, [sp, #112]
  40d9d0:	mov	x2, x21
  40d9d4:	ldr	x7, [sp, #128]
  40d9d8:	mov	w4, #0x5                   	// #5
  40d9dc:	ldr	x6, [sp, #152]
  40d9e0:	ldr	x0, [sp, #240]
  40d9e4:	str	x0, [sp]
  40d9e8:	mov	x0, x26
  40d9ec:	bl	40d89c <__fxstatat@plt+0xacfc>
  40d9f0:	b	40e3dc <__fxstatat@plt+0xb83c>
  40d9f4:	adrp	x6, 416000 <_obstack_memory_used@@Base+0x5e44>
  40d9f8:	add	x6, x6, #0x39c
  40d9fc:	cbnz	w28, 40db10 <__fxstatat@plt+0xaf70>
  40da00:	ldr	x0, [sp, #112]
  40da04:	cbz	x0, 40da10 <__fxstatat@plt+0xae70>
  40da08:	mov	w0, #0x22                  	// #34
  40da0c:	strb	w0, [x26]
  40da10:	mov	x10, #0x1                   	// #1
  40da14:	mov	w22, #0x1                   	// #1
  40da18:	mov	x19, x10
  40da1c:	b	40d964 <__fxstatat@plt+0xadc4>
  40da20:	cmp	w25, #0xa
  40da24:	b.eq	40da50 <__fxstatat@plt+0xaeb0>  // b.none
  40da28:	mov	w1, w25
  40da2c:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x5e44>
  40da30:	add	x0, x0, #0x3ad
  40da34:	bl	40d754 <__fxstatat@plt+0xabb4>
  40da38:	mov	w1, w25
  40da3c:	str	x0, [sp, #128]
  40da40:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x5e44>
  40da44:	add	x0, x0, #0x980
  40da48:	bl	40d754 <__fxstatat@plt+0xabb4>
  40da4c:	str	x0, [sp, #240]
  40da50:	mov	x19, #0x0                   	// #0
  40da54:	cbnz	w28, 40da64 <__fxstatat@plt+0xaec4>
  40da58:	ldr	x0, [sp, #128]
  40da5c:	ldrb	w0, [x0, x19]
  40da60:	cbnz	w0, 40da7c <__fxstatat@plt+0xaedc>
  40da64:	ldr	x0, [sp, #240]
  40da68:	mov	w22, #0x1                   	// #1
  40da6c:	bl	402540 <strlen@plt>
  40da70:	mov	x10, x0
  40da74:	ldr	x6, [sp, #240]
  40da78:	b	40d964 <__fxstatat@plt+0xadc4>
  40da7c:	ldr	x1, [sp, #112]
  40da80:	cmp	x1, x19
  40da84:	b.ls	40da8c <__fxstatat@plt+0xaeec>  // b.plast
  40da88:	strb	w0, [x26, x19]
  40da8c:	add	x19, x19, #0x1
  40da90:	b	40da58 <__fxstatat@plt+0xaeb8>
  40da94:	cbnz	w28, 40dae0 <__fxstatat@plt+0xaf40>
  40da98:	mov	w22, #0x1                   	// #1
  40da9c:	ldr	x0, [sp, #112]
  40daa0:	adrp	x6, 416000 <_obstack_memory_used@@Base+0x5e44>
  40daa4:	add	x6, x6, #0x980
  40daa8:	cbz	x0, 40dab4 <__fxstatat@plt+0xaf14>
  40daac:	mov	w0, #0x27                  	// #39
  40dab0:	strb	w0, [x26]
  40dab4:	mov	x10, #0x1                   	// #1
  40dab8:	mov	w28, #0x0                   	// #0
  40dabc:	mov	x19, x10
  40dac0:	b	40daf0 <__fxstatat@plt+0xaf50>
  40dac4:	cbz	w28, 40da9c <__fxstatat@plt+0xaefc>
  40dac8:	adrp	x6, 416000 <_obstack_memory_used@@Base+0x5e44>
  40dacc:	mov	x10, #0x1                   	// #1
  40dad0:	add	x6, x6, #0x980
  40dad4:	b	40d940 <__fxstatat@plt+0xada0>
  40dad8:	mov	w28, #0x1                   	// #1
  40dadc:	mov	w22, w28
  40dae0:	adrp	x6, 416000 <_obstack_memory_used@@Base+0x5e44>
  40dae4:	add	x6, x6, #0x980
  40dae8:	mov	x10, #0x1                   	// #1
  40daec:	mov	x19, #0x0                   	// #0
  40daf0:	mov	w25, #0x2                   	// #2
  40daf4:	b	40d964 <__fxstatat@plt+0xadc4>
  40daf8:	bl	4028b0 <abort@plt>
  40dafc:	mov	w28, #0x0                   	// #0
  40db00:	mov	w22, #0x1                   	// #1
  40db04:	b	40d940 <__fxstatat@plt+0xada0>
  40db08:	mov	w28, #0x1                   	// #1
  40db0c:	b	40dae0 <__fxstatat@plt+0xaf40>
  40db10:	mov	w22, w28
  40db14:	mov	x10, #0x1                   	// #1
  40db18:	b	40d940 <__fxstatat@plt+0xada0>
  40db1c:	add	x0, x21, x13
  40db20:	str	x0, [sp, #136]
  40db24:	cset	w3, ne  // ne = any
  40db28:	ands	w3, w22, w3
  40db2c:	b.eq	40dbe0 <__fxstatat@plt+0xb040>  // b.none
  40db30:	cbz	x10, 40dbe0 <__fxstatat@plt+0xb040>
  40db34:	cmp	x10, #0x1
  40db38:	add	x20, x13, x10
  40db3c:	ccmn	x24, #0x1, #0x0, hi  // hi = pmore
  40db40:	b.ne	40db70 <__fxstatat@plt+0xafd0>  // b.any
  40db44:	mov	x0, x21
  40db48:	stp	x13, x6, [sp, #168]
  40db4c:	str	x10, [sp, #184]
  40db50:	str	w3, [sp, #192]
  40db54:	str	w14, [sp, #200]
  40db58:	bl	402540 <strlen@plt>
  40db5c:	ldp	x13, x6, [sp, #168]
  40db60:	mov	x24, x0
  40db64:	ldr	w3, [sp, #192]
  40db68:	ldr	w14, [sp, #200]
  40db6c:	ldr	x10, [sp, #184]
  40db70:	cmp	x20, x24
  40db74:	b.hi	40dbe0 <__fxstatat@plt+0xb040>  // b.pmore
  40db78:	ldr	x0, [sp, #136]
  40db7c:	mov	x2, x10
  40db80:	mov	x1, x6
  40db84:	stp	x6, x10, [sp, #168]
  40db88:	str	x13, [sp, #184]
  40db8c:	str	w3, [sp, #192]
  40db90:	str	w14, [sp, #200]
  40db94:	bl	4028f0 <memcmp@plt>
  40db98:	ldr	w3, [sp, #192]
  40db9c:	ldr	w14, [sp, #200]
  40dba0:	ldp	x6, x10, [sp, #168]
  40dba4:	ldr	x13, [sp, #184]
  40dba8:	cbnz	w0, 40dbe0 <__fxstatat@plt+0xb040>
  40dbac:	cbnz	w28, 40e428 <__fxstatat@plt+0xb888>
  40dbb0:	mov	w18, w3
  40dbb4:	ldr	x0, [sp, #136]
  40dbb8:	ldrb	w7, [x0]
  40dbbc:	cmp	w7, #0x3f
  40dbc0:	b.ls	40dc08 <__fxstatat@plt+0xb068>  // b.plast
  40dbc4:	cmp	w7, #0x5a
  40dbc8:	b.hi	40dcbc <__fxstatat@plt+0xb11c>  // b.pmore
  40dbcc:	cmp	w7, #0x40
  40dbd0:	b.eq	40dccc <__fxstatat@plt+0xb12c>  // b.none
  40dbd4:	mov	w20, w14
  40dbd8:	mov	w3, #0x0                   	// #0
  40dbdc:	b	40df20 <__fxstatat@plt+0xb380>
  40dbe0:	mov	w18, #0x0                   	// #0
  40dbe4:	b	40dbb4 <__fxstatat@plt+0xb014>
  40dbe8:	cmp	w0, #0x23
  40dbec:	b.hi	40dccc <__fxstatat@plt+0xb12c>  // b.pmore
  40dbf0:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x5e44>
  40dbf4:	add	x1, x1, #0x404
  40dbf8:	ldrh	w0, [x1, w0, uxtw #1]
  40dbfc:	adr	x1, 40dc08 <__fxstatat@plt+0xb068>
  40dc00:	add	x0, x1, w0, sxth #2
  40dc04:	br	x0
  40dc08:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x5e44>
  40dc0c:	add	x0, x0, #0x44c
  40dc10:	ldrh	w0, [x0, w7, uxtw #1]
  40dc14:	adr	x1, 40dc20 <__fxstatat@plt+0xb080>
  40dc18:	add	x0, x1, w0, sxth #2
  40dc1c:	br	x0
  40dc20:	mov	w0, #0x72                  	// #114
  40dc24:	cmp	w28, #0x0
  40dc28:	ccmp	w25, #0x2, #0x0, ne  // ne = any
  40dc2c:	b.ne	40dc3c <__fxstatat@plt+0xb09c>  // b.any
  40dc30:	mov	w25, #0x2                   	// #2
  40dc34:	b	40de78 <__fxstatat@plt+0xb2d8>
  40dc38:	mov	w0, #0x62                  	// #98
  40dc3c:	cbz	w22, 40de00 <__fxstatat@plt+0xb260>
  40dc40:	mov	w7, w0
  40dc44:	mov	w20, #0x0                   	// #0
  40dc48:	cmp	w25, #0x2
  40dc4c:	cset	w0, eq  // eq = none
  40dc50:	cbnz	w28, 40de78 <__fxstatat@plt+0xb2d8>
  40dc54:	eor	w1, w23, #0x1
  40dc58:	ands	w0, w0, w1
  40dc5c:	b.eq	40dca0 <__fxstatat@plt+0xb100>  // b.none
  40dc60:	cmp	x27, x19
  40dc64:	b.ls	40dc70 <__fxstatat@plt+0xb0d0>  // b.plast
  40dc68:	mov	w1, #0x27                  	// #39
  40dc6c:	strb	w1, [x26, x19]
  40dc70:	add	x1, x19, #0x1
  40dc74:	cmp	x27, x1
  40dc78:	b.ls	40dc84 <__fxstatat@plt+0xb0e4>  // b.plast
  40dc7c:	mov	w2, #0x24                  	// #36
  40dc80:	strb	w2, [x26, x1]
  40dc84:	add	x1, x19, #0x2
  40dc88:	cmp	x27, x1
  40dc8c:	b.ls	40dc98 <__fxstatat@plt+0xb0f8>  // b.plast
  40dc90:	mov	w2, #0x27                  	// #39
  40dc94:	strb	w2, [x26, x1]
  40dc98:	add	x19, x19, #0x3
  40dc9c:	mov	w23, w0
  40dca0:	cmp	x27, x19
  40dca4:	b.ls	40dcb0 <__fxstatat@plt+0xb110>  // b.plast
  40dca8:	mov	w0, #0x5c                  	// #92
  40dcac:	strb	w0, [x26, x19]
  40dcb0:	add	x19, x19, #0x1
  40dcb4:	mov	w3, w14
  40dcb8:	b	40df5c <__fxstatat@plt+0xb3bc>
  40dcbc:	sub	w0, w7, #0x5b
  40dcc0:	and	w1, w0, #0xff
  40dcc4:	cmp	w1, #0x23
  40dcc8:	b.ls	40dbe8 <__fxstatat@plt+0xb048>  // b.plast
  40dccc:	ldr	x0, [sp, #160]
  40dcd0:	cmp	x0, #0x1
  40dcd4:	b.ne	40e0cc <__fxstatat@plt+0xb52c>  // b.any
  40dcd8:	str	x13, [sp, #136]
  40dcdc:	stp	x6, x10, [sp, #168]
  40dce0:	str	w7, [sp, #184]
  40dce4:	str	w18, [sp, #192]
  40dce8:	str	w14, [sp, #200]
  40dcec:	bl	402970 <__ctype_b_loc@plt>
  40dcf0:	ldr	w7, [sp, #184]
  40dcf4:	ldr	x0, [x0]
  40dcf8:	ldp	x15, x6, [sp, #160]
  40dcfc:	ldrh	w20, [x0, w7, uxtw #1]
  40dd00:	ldr	w18, [sp, #192]
  40dd04:	ldr	w14, [sp, #200]
  40dd08:	ldr	x13, [sp, #136]
  40dd0c:	ubfx	x20, x20, #14, #1
  40dd10:	ldr	x10, [sp, #176]
  40dd14:	eor	w3, w20, #0x1
  40dd18:	and	w3, w22, w3
  40dd1c:	ands	w3, w3, #0xff
  40dd20:	b.eq	40df20 <__fxstatat@plt+0xb380>  // b.none
  40dd24:	mov	w20, #0x0                   	// #0
  40dd28:	b	40e23c <__fxstatat@plt+0xb69c>
  40dd2c:	cbz	w22, 40ddf8 <__fxstatat@plt+0xb258>
  40dd30:	cmp	w25, #0x2
  40dd34:	cset	w0, eq  // eq = none
  40dd38:	cbnz	w28, 40e428 <__fxstatat@plt+0xb888>
  40dd3c:	eor	w1, w23, #0x1
  40dd40:	ands	w1, w0, w1
  40dd44:	b.eq	40ddf0 <__fxstatat@plt+0xb250>  // b.none
  40dd48:	cmp	x27, x19
  40dd4c:	b.ls	40dd58 <__fxstatat@plt+0xb1b8>  // b.plast
  40dd50:	mov	w0, #0x27                  	// #39
  40dd54:	strb	w0, [x26, x19]
  40dd58:	add	x0, x19, #0x1
  40dd5c:	cmp	x27, x0
  40dd60:	b.ls	40dd6c <__fxstatat@plt+0xb1cc>  // b.plast
  40dd64:	mov	w2, #0x24                  	// #36
  40dd68:	strb	w2, [x26, x0]
  40dd6c:	add	x0, x19, #0x2
  40dd70:	cmp	x27, x0
  40dd74:	b.ls	40dd80 <__fxstatat@plt+0xb1e0>  // b.plast
  40dd78:	mov	w2, #0x27                  	// #39
  40dd7c:	strb	w2, [x26, x0]
  40dd80:	add	x0, x19, #0x3
  40dd84:	mov	w23, w1
  40dd88:	cmp	x27, x0
  40dd8c:	b.ls	40dd98 <__fxstatat@plt+0xb1f8>  // b.plast
  40dd90:	mov	w1, #0x5c                  	// #92
  40dd94:	strb	w1, [x26, x0]
  40dd98:	add	x19, x0, #0x1
  40dd9c:	cbz	w3, 40e36c <__fxstatat@plt+0xb7cc>
  40dda0:	add	x1, x13, #0x1
  40dda4:	cmp	x1, x24
  40dda8:	b.cs	40dde8 <__fxstatat@plt+0xb248>  // b.hs, b.nlast
  40ddac:	ldrb	w1, [x21, x1]
  40ddb0:	sub	w1, w1, #0x30
  40ddb4:	and	w1, w1, #0xff
  40ddb8:	cmp	w1, #0x9
  40ddbc:	b.hi	40dde8 <__fxstatat@plt+0xb248>  // b.pmore
  40ddc0:	cmp	x27, x19
  40ddc4:	b.ls	40ddd0 <__fxstatat@plt+0xb230>  // b.plast
  40ddc8:	mov	w1, #0x30                  	// #48
  40ddcc:	strb	w1, [x26, x19]
  40ddd0:	add	x1, x0, #0x2
  40ddd4:	cmp	x27, x1
  40ddd8:	b.ls	40dde4 <__fxstatat@plt+0xb244>  // b.plast
  40dddc:	mov	w2, #0x30                  	// #48
  40dde0:	strb	w2, [x26, x1]
  40dde4:	add	x19, x0, #0x3
  40dde8:	mov	w20, #0x0                   	// #0
  40ddec:	b	40e374 <__fxstatat@plt+0xb7d4>
  40ddf0:	mov	x0, x19
  40ddf4:	b	40dd88 <__fxstatat@plt+0xb1e8>
  40ddf8:	ldr	x0, [sp, #120]
  40ddfc:	tbnz	w0, #0, 40dfb4 <__fxstatat@plt+0xb414>
  40de00:	mov	w20, #0x0                   	// #0
  40de04:	b	40dbd8 <__fxstatat@plt+0xb038>
  40de08:	cmp	w25, #0x2
  40de0c:	b.eq	40de74 <__fxstatat@plt+0xb2d4>  // b.none
  40de10:	cmp	w25, #0x5
  40de14:	b.ne	40de00 <__fxstatat@plt+0xb260>  // b.any
  40de18:	ldr	x0, [sp, #120]
  40de1c:	tbz	w0, #2, 40de00 <__fxstatat@plt+0xb260>
  40de20:	add	x1, x13, #0x2
  40de24:	cmp	x1, x24
  40de28:	b.cs	40de00 <__fxstatat@plt+0xb260>  // b.hs, b.nlast
  40de2c:	ldr	x0, [sp, #136]
  40de30:	ldrb	w0, [x0, #1]
  40de34:	cmp	w0, #0x3f
  40de38:	b.ne	40de00 <__fxstatat@plt+0xb260>  // b.any
  40de3c:	ldrb	w7, [x21, x1]
  40de40:	cmp	w7, #0x2f
  40de44:	b.hi	40deb0 <__fxstatat@plt+0xb310>  // b.pmore
  40de48:	cmp	w7, #0x20
  40de4c:	b.ls	40e384 <__fxstatat@plt+0xb7e4>  // b.plast
  40de50:	sub	w2, w7, #0x21
  40de54:	cmp	w2, #0xe
  40de58:	b.hi	40e37c <__fxstatat@plt+0xb7dc>  // b.pmore
  40de5c:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x5e44>
  40de60:	add	x0, x0, #0x4cc
  40de64:	ldrh	w0, [x0, w2, uxtw #1]
  40de68:	adr	x2, 40de74 <__fxstatat@plt+0xb2d4>
  40de6c:	add	x0, x2, w0, sxth #2
  40de70:	br	x0
  40de74:	cbz	w28, 40de00 <__fxstatat@plt+0xb260>
  40de78:	ldr	x0, [sp, #240]
  40de7c:	cmp	w22, #0x0
  40de80:	str	x0, [sp]
  40de84:	ccmp	w25, #0x2, #0x0, ne  // ne = any
  40de88:	ldr	w0, [sp, #120]
  40de8c:	mov	x3, x24
  40de90:	mov	x2, x21
  40de94:	mov	x1, x27
  40de98:	and	w5, w0, #0xfffffffd
  40de9c:	mov	x6, #0x0                   	// #0
  40dea0:	mov	w0, #0x4                   	// #4
  40dea4:	csel	w4, w25, w0, ne  // ne = any
  40dea8:	ldr	x7, [sp, #128]
  40deac:	b	40d9e8 <__fxstatat@plt+0xae48>
  40deb0:	sub	w2, w7, #0x3c
  40deb4:	and	w2, w2, #0xff
  40deb8:	cmp	w2, #0x2
  40debc:	b.hi	40e384 <__fxstatat@plt+0xb7e4>  // b.pmore
  40dec0:	cbnz	w28, 40de78 <__fxstatat@plt+0xb2d8>
  40dec4:	cmp	x27, x19
  40dec8:	b.ls	40ded4 <__fxstatat@plt+0xb334>  // b.plast
  40decc:	mov	w0, #0x3f                  	// #63
  40ded0:	strb	w0, [x26, x19]
  40ded4:	add	x0, x19, #0x1
  40ded8:	cmp	x27, x0
  40dedc:	b.ls	40dee8 <__fxstatat@plt+0xb348>  // b.plast
  40dee0:	mov	w2, #0x22                  	// #34
  40dee4:	strb	w2, [x26, x0]
  40dee8:	add	x0, x19, #0x2
  40deec:	cmp	x27, x0
  40def0:	b.ls	40defc <__fxstatat@plt+0xb35c>  // b.plast
  40def4:	mov	w2, #0x22                  	// #34
  40def8:	strb	w2, [x26, x0]
  40defc:	add	x0, x19, #0x3
  40df00:	cmp	x27, x0
  40df04:	b.ls	40df10 <__fxstatat@plt+0xb370>  // b.plast
  40df08:	mov	w2, #0x3f                  	// #63
  40df0c:	strb	w2, [x26, x0]
  40df10:	add	x19, x19, #0x4
  40df14:	mov	x13, x1
  40df18:	mov	w20, #0x0                   	// #0
  40df1c:	mov	w3, #0x0                   	// #0
  40df20:	cmp	w25, #0x2
  40df24:	eor	w0, w22, #0x1
  40df28:	cset	w1, eq  // eq = none
  40df2c:	orr	w0, w1, w0
  40df30:	tst	w0, #0xff
  40df34:	b.eq	40df3c <__fxstatat@plt+0xb39c>  // b.none
  40df38:	cbz	w28, 40df58 <__fxstatat@plt+0xb3b8>
  40df3c:	ldr	x0, [sp, #152]
  40df40:	cbz	x0, 40df58 <__fxstatat@plt+0xb3b8>
  40df44:	ldr	x1, [sp, #152]
  40df48:	ubfx	x0, x7, #5, #8
  40df4c:	ldr	w0, [x1, x0, lsl #2]
  40df50:	lsr	w0, w0, w7
  40df54:	tbnz	w0, #0, 40dc48 <__fxstatat@plt+0xb0a8>
  40df58:	cbnz	w18, 40dc48 <__fxstatat@plt+0xb0a8>
  40df5c:	eor	w3, w3, #0x1
  40df60:	tst	w23, w3
  40df64:	b.eq	40df94 <__fxstatat@plt+0xb3f4>  // b.none
  40df68:	cmp	x27, x19
  40df6c:	b.ls	40df78 <__fxstatat@plt+0xb3d8>  // b.plast
  40df70:	mov	w0, #0x27                  	// #39
  40df74:	strb	w0, [x26, x19]
  40df78:	add	x0, x19, #0x1
  40df7c:	cmp	x27, x0
  40df80:	b.ls	40df8c <__fxstatat@plt+0xb3ec>  // b.plast
  40df84:	mov	w1, #0x27                  	// #39
  40df88:	strb	w1, [x26, x0]
  40df8c:	add	x19, x19, #0x2
  40df90:	mov	w23, #0x0                   	// #0
  40df94:	cmp	x27, x19
  40df98:	b.ls	40dfa0 <__fxstatat@plt+0xb400>  // b.plast
  40df9c:	strb	w7, [x26, x19]
  40dfa0:	ldr	w0, [sp, #148]
  40dfa4:	cmp	w20, #0x0
  40dfa8:	add	x19, x19, #0x1
  40dfac:	csel	w0, w0, wzr, ne  // ne = any
  40dfb0:	str	w0, [sp, #148]
  40dfb4:	add	x13, x13, #0x1
  40dfb8:	b	40d978 <__fxstatat@plt+0xadd8>
  40dfbc:	mov	w0, #0x74                  	// #116
  40dfc0:	b	40dc24 <__fxstatat@plt+0xb084>
  40dfc4:	mov	w0, #0x76                  	// #118
  40dfc8:	b	40dc3c <__fxstatat@plt+0xb09c>
  40dfcc:	cmp	w25, #0x2
  40dfd0:	b.ne	40dfe4 <__fxstatat@plt+0xb444>  // b.any
  40dfd4:	cbnz	w28, 40de78 <__fxstatat@plt+0xb2d8>
  40dfd8:	mov	w20, #0x0                   	// #0
  40dfdc:	mov	w3, #0x0                   	// #0
  40dfe0:	b	40df5c <__fxstatat@plt+0xb3bc>
  40dfe4:	cmp	w22, #0x0
  40dfe8:	ccmp	w28, #0x0, #0x4, ne  // ne = any
  40dfec:	b.eq	40dff4 <__fxstatat@plt+0xb454>  // b.none
  40dff0:	cbnz	x10, 40dfd8 <__fxstatat@plt+0xb438>
  40dff4:	mov	w0, w7
  40dff8:	b	40dc24 <__fxstatat@plt+0xb084>
  40dffc:	mov	w0, #0x6e                  	// #110
  40e000:	b	40dc24 <__fxstatat@plt+0xb084>
  40e004:	mov	w0, #0x61                  	// #97
  40e008:	b	40dc3c <__fxstatat@plt+0xb09c>
  40e00c:	mov	w0, #0x66                  	// #102
  40e010:	b	40dc3c <__fxstatat@plt+0xb09c>
  40e014:	cmn	x24, #0x1
  40e018:	b.ne	40e044 <__fxstatat@plt+0xb4a4>  // b.any
  40e01c:	ldrb	w0, [x21, #1]
  40e020:	cmp	w0, #0x0
  40e024:	cset	w0, ne  // ne = any
  40e028:	cbnz	w0, 40de00 <__fxstatat@plt+0xb260>
  40e02c:	cbnz	x13, 40de00 <__fxstatat@plt+0xb260>
  40e030:	mov	w20, w14
  40e034:	cmp	w25, #0x2
  40e038:	csel	w3, w28, wzr, eq  // eq = none
  40e03c:	cbz	w3, 40df20 <__fxstatat@plt+0xb380>
  40e040:	b	40dc30 <__fxstatat@plt+0xb090>
  40e044:	cmp	x24, #0x1
  40e048:	b	40e024 <__fxstatat@plt+0xb484>
  40e04c:	mov	w20, #0x0                   	// #0
  40e050:	b	40e034 <__fxstatat@plt+0xb494>
  40e054:	cmp	w25, #0x2
  40e058:	b.ne	40e38c <__fxstatat@plt+0xb7ec>  // b.any
  40e05c:	cbnz	w28, 40de78 <__fxstatat@plt+0xb2d8>
  40e060:	ldr	x0, [sp, #112]
  40e064:	cmp	x27, #0x0
  40e068:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  40e06c:	b.eq	40e0c0 <__fxstatat@plt+0xb520>  // b.none
  40e070:	cmp	x27, x19
  40e074:	b.ls	40e080 <__fxstatat@plt+0xb4e0>  // b.plast
  40e078:	mov	w0, #0x27                  	// #39
  40e07c:	strb	w0, [x26, x19]
  40e080:	add	x0, x19, #0x1
  40e084:	cmp	x0, x27
  40e088:	b.cs	40e094 <__fxstatat@plt+0xb4f4>  // b.hs, b.nlast
  40e08c:	mov	w1, #0x5c                  	// #92
  40e090:	strb	w1, [x26, x0]
  40e094:	add	x0, x19, #0x2
  40e098:	cmp	x0, x27
  40e09c:	b.cs	40e0a8 <__fxstatat@plt+0xb508>  // b.hs, b.nlast
  40e0a0:	mov	w1, #0x27                  	// #39
  40e0a4:	strb	w1, [x26, x0]
  40e0a8:	add	x19, x19, #0x3
  40e0ac:	mov	w20, w14
  40e0b0:	mov	w3, #0x0                   	// #0
  40e0b4:	mov	w23, #0x0                   	// #0
  40e0b8:	str	w14, [sp, #144]
  40e0bc:	b	40df20 <__fxstatat@plt+0xb380>
  40e0c0:	str	x27, [sp, #112]
  40e0c4:	mov	x27, #0x0                   	// #0
  40e0c8:	b	40e080 <__fxstatat@plt+0xb4e0>
  40e0cc:	str	xzr, [sp, #232]
  40e0d0:	cmn	x24, #0x1
  40e0d4:	b.ne	40e10c <__fxstatat@plt+0xb56c>  // b.any
  40e0d8:	mov	x0, x21
  40e0dc:	stp	x13, x6, [sp, #168]
  40e0e0:	str	x10, [sp, #184]
  40e0e4:	str	w7, [sp, #192]
  40e0e8:	str	w18, [sp, #200]
  40e0ec:	str	w14, [sp, #208]
  40e0f0:	bl	402540 <strlen@plt>
  40e0f4:	ldp	x13, x6, [sp, #168]
  40e0f8:	mov	x24, x0
  40e0fc:	ldr	w7, [sp, #192]
  40e100:	ldr	w18, [sp, #200]
  40e104:	ldr	w14, [sp, #208]
  40e108:	ldr	x10, [sp, #184]
  40e10c:	mov	w20, w14
  40e110:	mov	x15, #0x0                   	// #0
  40e114:	add	x2, x13, x15
  40e118:	add	x3, sp, #0xe8
  40e11c:	add	x1, x21, x2
  40e120:	add	x0, sp, #0xe4
  40e124:	sub	x2, x24, x2
  40e128:	stp	x1, x13, [sp, #168]
  40e12c:	stp	x15, x6, [sp, #184]
  40e130:	str	x10, [sp, #200]
  40e134:	stp	w7, w18, [sp, #208]
  40e138:	str	w14, [sp, #216]
  40e13c:	bl	40fe2c <__fxstatat@plt+0xd28c>
  40e140:	ldp	w7, w18, [sp, #208]
  40e144:	mov	x3, x0
  40e148:	ldr	w14, [sp, #216]
  40e14c:	ldp	x13, x15, [sp, #176]
  40e150:	ldp	x6, x10, [sp, #192]
  40e154:	cbz	x0, 40e234 <__fxstatat@plt+0xb694>
  40e158:	cmn	x0, #0x1
  40e15c:	b.eq	40e184 <__fxstatat@plt+0xb5e4>  // b.none
  40e160:	cmn	x0, #0x2
  40e164:	ldr	x1, [sp, #168]
  40e168:	b.ne	40e194 <__fxstatat@plt+0xb5f4>  // b.any
  40e16c:	add	x0, x13, x15
  40e170:	cmp	x24, x0
  40e174:	b.ls	40e184 <__fxstatat@plt+0xb5e4>  // b.plast
  40e178:	ldr	x0, [sp, #136]
  40e17c:	ldrb	w0, [x0, x15]
  40e180:	cbnz	w0, 40e18c <__fxstatat@plt+0xb5ec>
  40e184:	mov	w20, #0x0                   	// #0
  40e188:	b	40e234 <__fxstatat@plt+0xb694>
  40e18c:	add	x15, x15, #0x1
  40e190:	b	40e16c <__fxstatat@plt+0xb5cc>
  40e194:	cmp	w28, #0x0
  40e198:	ccmp	w25, #0x2, #0x0, ne  // ne = any
  40e19c:	b.ne	40e1e0 <__fxstatat@plt+0xb640>  // b.any
  40e1a0:	mov	x0, #0x1                   	// #1
  40e1a4:	b	40e1d8 <__fxstatat@plt+0xb638>
  40e1a8:	ldrb	w2, [x1, x0]
  40e1ac:	sub	w2, w2, #0x5b
  40e1b0:	and	w2, w2, #0xff
  40e1b4:	cmp	w2, #0x21
  40e1b8:	b.hi	40e1d4 <__fxstatat@plt+0xb634>  // b.pmore
  40e1bc:	mov	x4, #0x1                   	// #1
  40e1c0:	lsl	x2, x4, x2
  40e1c4:	mov	x4, #0x2b                  	// #43
  40e1c8:	movk	x4, #0x2, lsl #32
  40e1cc:	tst	x2, x4
  40e1d0:	b.ne	40dc30 <__fxstatat@plt+0xb090>  // b.any
  40e1d4:	add	x0, x0, #0x1
  40e1d8:	cmp	x0, x3
  40e1dc:	b.ne	40e1a8 <__fxstatat@plt+0xb608>  // b.any
  40e1e0:	ldr	w0, [sp, #228]
  40e1e4:	stp	x15, x13, [sp, #168]
  40e1e8:	stp	x6, x10, [sp, #184]
  40e1ec:	str	w7, [sp, #200]
  40e1f0:	stp	w18, w14, [sp, #208]
  40e1f4:	str	x3, [sp, #216]
  40e1f8:	bl	402b10 <iswprint@plt>
  40e1fc:	ldr	x15, [sp, #168]
  40e200:	cmp	w0, #0x0
  40e204:	ldr	x3, [sp, #216]
  40e208:	csel	w20, w20, wzr, ne  // ne = any
  40e20c:	add	x0, sp, #0xe8
  40e210:	add	x15, x15, x3
  40e214:	str	x15, [sp, #168]
  40e218:	str	x15, [sp, #216]
  40e21c:	bl	4028c0 <mbsinit@plt>
  40e220:	ldr	w7, [sp, #200]
  40e224:	ldp	w18, w14, [sp, #208]
  40e228:	ldp	x15, x13, [sp, #168]
  40e22c:	ldp	x6, x10, [sp, #184]
  40e230:	cbz	w0, 40e114 <__fxstatat@plt+0xb574>
  40e234:	cmp	x15, #0x1
  40e238:	b.ls	40dd14 <__fxstatat@plt+0xb174>  // b.plast
  40e23c:	eor	w0, w20, #0x1
  40e240:	add	x15, x13, x15
  40e244:	and	w0, w22, w0
  40e248:	mov	w3, #0x0                   	// #0
  40e24c:	and	w0, w0, #0xff
  40e250:	mov	w16, #0x5c                  	// #92
  40e254:	mov	w1, #0x27                  	// #39
  40e258:	mov	w17, #0x24                  	// #36
  40e25c:	cbz	w0, 40e350 <__fxstatat@plt+0xb7b0>
  40e260:	cmp	w25, #0x2
  40e264:	cset	w3, eq  // eq = none
  40e268:	cbnz	w28, 40e428 <__fxstatat@plt+0xb888>
  40e26c:	eor	w2, w23, #0x1
  40e270:	ands	w2, w3, w2
  40e274:	b.eq	40e2ac <__fxstatat@plt+0xb70c>  // b.none
  40e278:	cmp	x27, x19
  40e27c:	b.ls	40e284 <__fxstatat@plt+0xb6e4>  // b.plast
  40e280:	strb	w1, [x26, x19]
  40e284:	add	x3, x19, #0x1
  40e288:	cmp	x27, x3
  40e28c:	b.ls	40e294 <__fxstatat@plt+0xb6f4>  // b.plast
  40e290:	strb	w17, [x26, x3]
  40e294:	add	x3, x19, #0x2
  40e298:	cmp	x27, x3
  40e29c:	b.ls	40e2a4 <__fxstatat@plt+0xb704>  // b.plast
  40e2a0:	strb	w1, [x26, x3]
  40e2a4:	add	x19, x19, #0x3
  40e2a8:	mov	w23, w2
  40e2ac:	cmp	x27, x19
  40e2b0:	b.ls	40e2b8 <__fxstatat@plt+0xb718>  // b.plast
  40e2b4:	strb	w16, [x26, x19]
  40e2b8:	add	x3, x19, #0x1
  40e2bc:	cmp	x27, x3
  40e2c0:	b.ls	40e2d0 <__fxstatat@plt+0xb730>  // b.plast
  40e2c4:	lsr	w2, w7, #6
  40e2c8:	add	w2, w2, #0x30
  40e2cc:	strb	w2, [x26, x3]
  40e2d0:	add	x3, x19, #0x2
  40e2d4:	cmp	x27, x3
  40e2d8:	b.ls	40e2e8 <__fxstatat@plt+0xb748>  // b.plast
  40e2dc:	ubfx	x2, x7, #3, #3
  40e2e0:	add	w2, w2, #0x30
  40e2e4:	strb	w2, [x26, x3]
  40e2e8:	and	w7, w7, #0x7
  40e2ec:	add	x19, x19, #0x3
  40e2f0:	add	w7, w7, #0x30
  40e2f4:	mov	w3, w0
  40e2f8:	add	x2, x13, #0x1
  40e2fc:	eor	w14, w3, #0x1
  40e300:	and	w14, w23, w14
  40e304:	cmp	x2, x15
  40e308:	b.cs	40df5c <__fxstatat@plt+0xb3bc>  // b.hs, b.nlast
  40e30c:	cbz	w14, 40e334 <__fxstatat@plt+0xb794>
  40e310:	cmp	x27, x19
  40e314:	b.ls	40e31c <__fxstatat@plt+0xb77c>  // b.plast
  40e318:	strb	w1, [x26, x19]
  40e31c:	add	x13, x19, #0x1
  40e320:	cmp	x27, x13
  40e324:	b.ls	40e32c <__fxstatat@plt+0xb78c>  // b.plast
  40e328:	strb	w1, [x26, x13]
  40e32c:	add	x19, x19, #0x2
  40e330:	mov	w23, #0x0                   	// #0
  40e334:	cmp	x27, x19
  40e338:	b.ls	40e340 <__fxstatat@plt+0xb7a0>  // b.plast
  40e33c:	strb	w7, [x26, x19]
  40e340:	ldrb	w7, [x21, x2]
  40e344:	add	x19, x19, #0x1
  40e348:	mov	x13, x2
  40e34c:	b	40e25c <__fxstatat@plt+0xb6bc>
  40e350:	cbz	w18, 40e2f8 <__fxstatat@plt+0xb758>
  40e354:	cmp	x27, x19
  40e358:	b.ls	40e360 <__fxstatat@plt+0xb7c0>  // b.plast
  40e35c:	strb	w16, [x26, x19]
  40e360:	add	x19, x19, #0x1
  40e364:	mov	w18, #0x0                   	// #0
  40e368:	b	40e2f8 <__fxstatat@plt+0xb758>
  40e36c:	mov	w3, w22
  40e370:	mov	w20, #0x0                   	// #0
  40e374:	mov	w7, #0x30                  	// #48
  40e378:	b	40df20 <__fxstatat@plt+0xb380>
  40e37c:	mov	w7, #0x3f                  	// #63
  40e380:	b	40de00 <__fxstatat@plt+0xb260>
  40e384:	mov	w7, w0
  40e388:	b	40de00 <__fxstatat@plt+0xb260>
  40e38c:	mov	w20, w14
  40e390:	str	w14, [sp, #144]
  40e394:	b	40dbd8 <__fxstatat@plt+0xb038>
  40e398:	cmp	x24, x13
  40e39c:	b	40d988 <__fxstatat@plt+0xade8>
  40e3a0:	ldr	x0, [sp, #112]
  40e3a4:	cmp	x27, #0x0
  40e3a8:	cset	w28, eq  // eq = none
  40e3ac:	mov	w25, #0x2                   	// #2
  40e3b0:	cmp	x0, #0x0
  40e3b4:	csel	w20, w28, wzr, ne  // ne = any
  40e3b8:	cbnz	w20, 40d92c <__fxstatat@plt+0xad8c>
  40e3bc:	ldr	w0, [sp, #144]
  40e3c0:	cmp	x6, #0x0
  40e3c4:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40e3c8:	mov	x0, x19
  40e3cc:	b.ne	40e420 <__fxstatat@plt+0xb880>  // b.any
  40e3d0:	cmp	x27, x0
  40e3d4:	b.ls	40e3dc <__fxstatat@plt+0xb83c>  // b.plast
  40e3d8:	strb	wzr, [x26, x0]
  40e3dc:	ldp	x29, x30, [sp, #16]
  40e3e0:	ldp	x19, x20, [sp, #32]
  40e3e4:	ldp	x21, x22, [sp, #48]
  40e3e8:	ldp	x23, x24, [sp, #64]
  40e3ec:	ldp	x25, x26, [sp, #80]
  40e3f0:	ldp	x27, x28, [sp, #96]
  40e3f4:	add	sp, sp, #0xf0
  40e3f8:	ret
  40e3fc:	mov	w0, w5
  40e400:	b	40e3c0 <__fxstatat@plt+0xb820>
  40e404:	cmp	x27, x0
  40e408:	b.ls	40e410 <__fxstatat@plt+0xb870>  // b.plast
  40e40c:	strb	w1, [x26, x0]
  40e410:	add	x0, x0, #0x1
  40e414:	ldrb	w1, [x6, x0]
  40e418:	cbnz	w1, 40e404 <__fxstatat@plt+0xb864>
  40e41c:	b	40e3d0 <__fxstatat@plt+0xb830>
  40e420:	sub	x6, x6, x19
  40e424:	b	40e414 <__fxstatat@plt+0xb874>
  40e428:	mov	w22, w28
  40e42c:	b	40de78 <__fxstatat@plt+0xb2d8>
  40e430:	sub	sp, sp, #0x80
  40e434:	stp	x29, x30, [sp, #16]
  40e438:	add	x29, sp, #0x10
  40e43c:	stp	x19, x20, [sp, #32]
  40e440:	mov	w19, w0
  40e444:	mov	x20, x3
  40e448:	stp	x21, x22, [sp, #48]
  40e44c:	stp	x23, x24, [sp, #64]
  40e450:	mov	x24, x1
  40e454:	stp	x25, x26, [sp, #80]
  40e458:	mov	x25, x2
  40e45c:	stp	x27, x28, [sp, #96]
  40e460:	bl	402b30 <__errno_location@plt>
  40e464:	mov	x23, x0
  40e468:	ldr	w0, [x0]
  40e46c:	adrp	x27, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  40e470:	str	w0, [sp, #116]
  40e474:	ldr	x28, [x27, #1360]
  40e478:	tbz	w19, #31, 40e480 <__fxstatat@plt+0xb8e0>
  40e47c:	bl	4028b0 <abort@plt>
  40e480:	add	x22, x27, #0x550
  40e484:	ldr	w0, [x22, #8]
  40e488:	cmp	w0, w19
  40e48c:	b.gt	40e4f8 <__fxstatat@plt+0xb958>
  40e490:	mov	w0, #0x7fffffff            	// #2147483647
  40e494:	cmp	w19, w0
  40e498:	b.ne	40e4a0 <__fxstatat@plt+0xb900>  // b.any
  40e49c:	bl	40f440 <__fxstatat@plt+0xc8a0>
  40e4a0:	add	x2, x22, #0x10
  40e4a4:	add	w26, w19, #0x1
  40e4a8:	cmp	x28, x2
  40e4ac:	str	x2, [sp, #120]
  40e4b0:	csel	x0, x28, xzr, ne  // ne = any
  40e4b4:	sbfiz	x1, x26, #4, #32
  40e4b8:	bl	40f2ac <__fxstatat@plt+0xc70c>
  40e4bc:	str	x0, [x27, #1360]
  40e4c0:	ldr	x2, [sp, #120]
  40e4c4:	mov	x21, x0
  40e4c8:	cmp	x28, x2
  40e4cc:	b.ne	40e4d8 <__fxstatat@plt+0xb938>  // b.any
  40e4d0:	ldp	x0, x1, [x22, #16]
  40e4d4:	stp	x0, x1, [x21]
  40e4d8:	ldr	w0, [x22, #8]
  40e4dc:	mov	x28, x21
  40e4e0:	mov	w1, #0x0                   	// #0
  40e4e4:	sub	w2, w26, w0
  40e4e8:	add	x0, x21, w0, sxtw #4
  40e4ec:	sbfiz	x2, x2, #4, #32
  40e4f0:	bl	4027c0 <memset@plt>
  40e4f4:	str	w26, [x22, #8]
  40e4f8:	sbfiz	x9, x19, #4, #32
  40e4fc:	add	x19, x28, w19, sxtw #4
  40e500:	ldp	x7, x0, [x20, #40]
  40e504:	add	x27, x20, #0x8
  40e508:	ldp	w4, w26, [x20]
  40e50c:	mov	x6, x27
  40e510:	ldr	x22, [x28, x9]
  40e514:	orr	w26, w26, #0x1
  40e518:	ldr	x21, [x19, #8]
  40e51c:	str	x0, [sp]
  40e520:	mov	x3, x25
  40e524:	mov	x2, x24
  40e528:	mov	x1, x22
  40e52c:	mov	w5, w26
  40e530:	mov	x0, x21
  40e534:	str	x9, [sp, #120]
  40e538:	bl	40d89c <__fxstatat@plt+0xacfc>
  40e53c:	cmp	x22, x0
  40e540:	b.hi	40e59c <__fxstatat@plt+0xb9fc>  // b.pmore
  40e544:	ldr	x9, [sp, #120]
  40e548:	add	x22, x0, #0x1
  40e54c:	adrp	x0, 42c000 <__progname@@GLIBC_2.17+0xa28>
  40e550:	add	x0, x0, #0x768
  40e554:	cmp	x21, x0
  40e558:	str	x22, [x28, x9]
  40e55c:	b.eq	40e568 <__fxstatat@plt+0xb9c8>  // b.none
  40e560:	mov	x0, x21
  40e564:	bl	402990 <free@plt>
  40e568:	mov	x0, x22
  40e56c:	bl	40f24c <__fxstatat@plt+0xc6ac>
  40e570:	ldp	x7, x1, [x20, #40]
  40e574:	mov	x21, x0
  40e578:	ldr	w4, [x20]
  40e57c:	mov	x6, x27
  40e580:	str	x0, [x19, #8]
  40e584:	mov	w5, w26
  40e588:	str	x1, [sp]
  40e58c:	mov	x3, x25
  40e590:	mov	x2, x24
  40e594:	mov	x1, x22
  40e598:	bl	40d89c <__fxstatat@plt+0xacfc>
  40e59c:	ldr	w0, [sp, #116]
  40e5a0:	ldp	x29, x30, [sp, #16]
  40e5a4:	ldp	x19, x20, [sp, #32]
  40e5a8:	ldp	x25, x26, [sp, #80]
  40e5ac:	ldp	x27, x28, [sp, #96]
  40e5b0:	str	w0, [x23]
  40e5b4:	mov	x0, x21
  40e5b8:	ldp	x21, x22, [sp, #48]
  40e5bc:	ldp	x23, x24, [sp, #64]
  40e5c0:	add	sp, sp, #0x80
  40e5c4:	ret
  40e5c8:	stp	x29, x30, [sp, #-48]!
  40e5cc:	mov	x29, sp
  40e5d0:	stp	x19, x20, [sp, #16]
  40e5d4:	mov	x19, x0
  40e5d8:	str	x21, [sp, #32]
  40e5dc:	bl	402b30 <__errno_location@plt>
  40e5e0:	ldr	w21, [x0]
  40e5e4:	mov	x20, x0
  40e5e8:	cbnz	x19, 40e5f8 <__fxstatat@plt+0xba58>
  40e5ec:	adrp	x19, 42c000 <__progname@@GLIBC_2.17+0xa28>
  40e5f0:	add	x19, x19, #0x768
  40e5f4:	add	x19, x19, #0x100
  40e5f8:	mov	x0, x19
  40e5fc:	mov	x1, #0x38                  	// #56
  40e600:	bl	40f3e8 <__fxstatat@plt+0xc848>
  40e604:	str	w21, [x20]
  40e608:	ldp	x19, x20, [sp, #16]
  40e60c:	ldr	x21, [sp, #32]
  40e610:	ldp	x29, x30, [sp], #48
  40e614:	ret
  40e618:	cbnz	x0, 40e628 <__fxstatat@plt+0xba88>
  40e61c:	adrp	x0, 42c000 <__progname@@GLIBC_2.17+0xa28>
  40e620:	add	x0, x0, #0x768
  40e624:	add	x0, x0, #0x100
  40e628:	ldr	w0, [x0]
  40e62c:	ret
  40e630:	cbnz	x0, 40e640 <__fxstatat@plt+0xbaa0>
  40e634:	adrp	x0, 42c000 <__progname@@GLIBC_2.17+0xa28>
  40e638:	add	x0, x0, #0x768
  40e63c:	add	x0, x0, #0x100
  40e640:	str	w1, [x0]
  40e644:	ret
  40e648:	and	w1, w1, #0xff
  40e64c:	cbnz	x0, 40e65c <__fxstatat@plt+0xbabc>
  40e650:	adrp	x0, 42c000 <__progname@@GLIBC_2.17+0xa28>
  40e654:	add	x0, x0, #0x768
  40e658:	add	x0, x0, #0x100
  40e65c:	ubfx	x4, x1, #5, #3
  40e660:	add	x0, x0, #0x8
  40e664:	and	w3, w1, #0x1f
  40e668:	lsl	x4, x4, #2
  40e66c:	ldr	w6, [x0, x4]
  40e670:	lsr	w5, w6, w3
  40e674:	eor	w1, w5, w2
  40e678:	and	w1, w1, #0x1
  40e67c:	lsl	w1, w1, w3
  40e680:	eor	w1, w1, w6
  40e684:	str	w1, [x0, x4]
  40e688:	and	w0, w5, #0x1
  40e68c:	ret
  40e690:	mov	x2, x0
  40e694:	cbnz	x0, 40e6a4 <__fxstatat@plt+0xbb04>
  40e698:	adrp	x2, 42c000 <__progname@@GLIBC_2.17+0xa28>
  40e69c:	add	x2, x2, #0x768
  40e6a0:	add	x2, x2, #0x100
  40e6a4:	ldr	w0, [x2, #4]
  40e6a8:	str	w1, [x2, #4]
  40e6ac:	ret
  40e6b0:	cbnz	x0, 40e6c0 <__fxstatat@plt+0xbb20>
  40e6b4:	adrp	x0, 42c000 <__progname@@GLIBC_2.17+0xa28>
  40e6b8:	add	x0, x0, #0x768
  40e6bc:	add	x0, x0, #0x100
  40e6c0:	mov	w3, #0xa                   	// #10
  40e6c4:	str	w3, [x0]
  40e6c8:	cmp	x1, #0x0
  40e6cc:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  40e6d0:	b.ne	40e6e0 <__fxstatat@plt+0xbb40>  // b.any
  40e6d4:	stp	x29, x30, [sp, #-16]!
  40e6d8:	mov	x29, sp
  40e6dc:	bl	4028b0 <abort@plt>
  40e6e0:	stp	x1, x2, [x0, #40]
  40e6e4:	ret
  40e6e8:	sub	sp, sp, #0x60
  40e6ec:	stp	x29, x30, [sp, #16]
  40e6f0:	add	x29, sp, #0x10
  40e6f4:	stp	x19, x20, [sp, #32]
  40e6f8:	stp	x21, x22, [sp, #48]
  40e6fc:	mov	x21, x0
  40e700:	mov	x22, x1
  40e704:	stp	x23, x24, [sp, #64]
  40e708:	mov	x23, x2
  40e70c:	mov	x24, x3
  40e710:	str	x25, [sp, #80]
  40e714:	cbnz	x4, 40e778 <__fxstatat@plt+0xbbd8>
  40e718:	adrp	x19, 42c000 <__progname@@GLIBC_2.17+0xa28>
  40e71c:	add	x19, x19, #0x768
  40e720:	add	x19, x19, #0x100
  40e724:	bl	402b30 <__errno_location@plt>
  40e728:	ldr	w25, [x0]
  40e72c:	mov	x20, x0
  40e730:	add	x6, x19, #0x8
  40e734:	ldr	x0, [x19, #48]
  40e738:	str	x0, [sp]
  40e73c:	mov	x3, x24
  40e740:	mov	x2, x23
  40e744:	ldp	w4, w5, [x19]
  40e748:	mov	x1, x22
  40e74c:	ldr	x7, [x19, #40]
  40e750:	mov	x0, x21
  40e754:	bl	40d89c <__fxstatat@plt+0xacfc>
  40e758:	ldp	x29, x30, [sp, #16]
  40e75c:	ldp	x21, x22, [sp, #48]
  40e760:	ldp	x23, x24, [sp, #64]
  40e764:	str	w25, [x20]
  40e768:	ldp	x19, x20, [sp, #32]
  40e76c:	ldr	x25, [sp, #80]
  40e770:	add	sp, sp, #0x60
  40e774:	ret
  40e778:	mov	x19, x4
  40e77c:	b	40e724 <__fxstatat@plt+0xbb84>
  40e780:	sub	sp, sp, #0x80
  40e784:	stp	x29, x30, [sp, #16]
  40e788:	add	x29, sp, #0x10
  40e78c:	stp	x19, x20, [sp, #32]
  40e790:	mov	x20, x2
  40e794:	stp	x21, x22, [sp, #48]
  40e798:	stp	x23, x24, [sp, #64]
  40e79c:	mov	x23, x0
  40e7a0:	mov	x24, x1
  40e7a4:	stp	x25, x26, [sp, #80]
  40e7a8:	stp	x27, x28, [sp, #96]
  40e7ac:	cbnz	x3, 40e87c <__fxstatat@plt+0xbcdc>
  40e7b0:	adrp	x19, 42c000 <__progname@@GLIBC_2.17+0xa28>
  40e7b4:	add	x19, x19, #0x768
  40e7b8:	add	x19, x19, #0x100
  40e7bc:	bl	402b30 <__errno_location@plt>
  40e7c0:	ldr	w8, [x0]
  40e7c4:	mov	x22, x0
  40e7c8:	ldr	w5, [x19, #4]
  40e7cc:	ldr	x0, [x19, #48]
  40e7d0:	str	x0, [sp]
  40e7d4:	cmp	x20, #0x0
  40e7d8:	add	x28, x19, #0x8
  40e7dc:	cset	w25, eq  // eq = none
  40e7e0:	ldr	w4, [x19]
  40e7e4:	ldr	x7, [x19, #40]
  40e7e8:	orr	w25, w25, w5
  40e7ec:	mov	x6, x28
  40e7f0:	mov	x3, x24
  40e7f4:	mov	x2, x23
  40e7f8:	mov	w5, w25
  40e7fc:	mov	x1, #0x0                   	// #0
  40e800:	mov	x0, #0x0                   	// #0
  40e804:	str	w8, [sp, #124]
  40e808:	bl	40d89c <__fxstatat@plt+0xacfc>
  40e80c:	add	x27, x0, #0x1
  40e810:	mov	x21, x0
  40e814:	mov	x0, x27
  40e818:	bl	40f24c <__fxstatat@plt+0xc6ac>
  40e81c:	ldr	x1, [x19, #48]
  40e820:	str	x1, [sp]
  40e824:	mov	x26, x0
  40e828:	mov	x6, x28
  40e82c:	ldr	w4, [x19]
  40e830:	mov	w5, w25
  40e834:	ldr	x7, [x19, #40]
  40e838:	mov	x3, x24
  40e83c:	mov	x2, x23
  40e840:	mov	x1, x27
  40e844:	bl	40d89c <__fxstatat@plt+0xacfc>
  40e848:	ldr	w8, [sp, #124]
  40e84c:	str	w8, [x22]
  40e850:	cbz	x20, 40e858 <__fxstatat@plt+0xbcb8>
  40e854:	str	x21, [x20]
  40e858:	mov	x0, x26
  40e85c:	ldp	x29, x30, [sp, #16]
  40e860:	ldp	x19, x20, [sp, #32]
  40e864:	ldp	x21, x22, [sp, #48]
  40e868:	ldp	x23, x24, [sp, #64]
  40e86c:	ldp	x25, x26, [sp, #80]
  40e870:	ldp	x27, x28, [sp, #96]
  40e874:	add	sp, sp, #0x80
  40e878:	ret
  40e87c:	mov	x19, x3
  40e880:	b	40e7bc <__fxstatat@plt+0xbc1c>
  40e884:	mov	x3, x2
  40e888:	mov	x2, #0x0                   	// #0
  40e88c:	b	40e780 <__fxstatat@plt+0xbbe0>
  40e890:	stp	x29, x30, [sp, #-64]!
  40e894:	mov	x29, sp
  40e898:	stp	x19, x20, [sp, #16]
  40e89c:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  40e8a0:	add	x19, x20, #0x550
  40e8a4:	stp	x21, x22, [sp, #32]
  40e8a8:	mov	x22, #0x0                   	// #0
  40e8ac:	ldr	x21, [x20, #1360]
  40e8b0:	str	x23, [sp, #48]
  40e8b4:	add	x23, x21, #0x8
  40e8b8:	ldr	w0, [x19, #8]
  40e8bc:	add	x22, x22, #0x1
  40e8c0:	cmp	w0, w22
  40e8c4:	b.gt	40e91c <__fxstatat@plt+0xbd7c>
  40e8c8:	ldr	x0, [x21, #8]
  40e8cc:	adrp	x22, 42c000 <__progname@@GLIBC_2.17+0xa28>
  40e8d0:	add	x22, x22, #0x768
  40e8d4:	cmp	x0, x22
  40e8d8:	b.eq	40e8e8 <__fxstatat@plt+0xbd48>  // b.none
  40e8dc:	bl	402990 <free@plt>
  40e8e0:	mov	x0, #0x100                 	// #256
  40e8e4:	stp	x0, x22, [x19, #16]
  40e8e8:	add	x22, x19, #0x10
  40e8ec:	cmp	x21, x22
  40e8f0:	b.eq	40e900 <__fxstatat@plt+0xbd60>  // b.none
  40e8f4:	mov	x0, x21
  40e8f8:	bl	402990 <free@plt>
  40e8fc:	str	x22, [x20, #1360]
  40e900:	mov	w0, #0x1                   	// #1
  40e904:	str	w0, [x19, #8]
  40e908:	ldp	x19, x20, [sp, #16]
  40e90c:	ldp	x21, x22, [sp, #32]
  40e910:	ldr	x23, [sp, #48]
  40e914:	ldp	x29, x30, [sp], #64
  40e918:	ret
  40e91c:	lsl	x0, x22, #4
  40e920:	ldr	x0, [x23, x0]
  40e924:	bl	402990 <free@plt>
  40e928:	b	40e8b8 <__fxstatat@plt+0xbd18>
  40e92c:	adrp	x3, 42c000 <__progname@@GLIBC_2.17+0xa28>
  40e930:	add	x3, x3, #0x768
  40e934:	add	x3, x3, #0x100
  40e938:	mov	x2, #0xffffffffffffffff    	// #-1
  40e93c:	b	40e430 <__fxstatat@plt+0xb890>
  40e940:	adrp	x3, 42c000 <__progname@@GLIBC_2.17+0xa28>
  40e944:	add	x3, x3, #0x768
  40e948:	add	x3, x3, #0x100
  40e94c:	b	40e430 <__fxstatat@plt+0xb890>
  40e950:	mov	x1, x0
  40e954:	mov	w0, #0x0                   	// #0
  40e958:	b	40e92c <__fxstatat@plt+0xbd8c>
  40e95c:	mov	x2, x1
  40e960:	mov	x1, x0
  40e964:	mov	w0, #0x0                   	// #0
  40e968:	b	40e940 <__fxstatat@plt+0xbda0>
  40e96c:	stp	x29, x30, [sp, #-96]!
  40e970:	add	x8, sp, #0x28
  40e974:	mov	x29, sp
  40e978:	stp	x19, x20, [sp, #16]
  40e97c:	mov	x20, x2
  40e980:	mov	w19, w0
  40e984:	mov	w0, w1
  40e988:	bl	40d728 <__fxstatat@plt+0xab88>
  40e98c:	add	x3, sp, #0x28
  40e990:	mov	x1, x20
  40e994:	mov	w0, w19
  40e998:	mov	x2, #0xffffffffffffffff    	// #-1
  40e99c:	bl	40e430 <__fxstatat@plt+0xb890>
  40e9a0:	ldp	x19, x20, [sp, #16]
  40e9a4:	ldp	x29, x30, [sp], #96
  40e9a8:	ret
  40e9ac:	stp	x29, x30, [sp, #-112]!
  40e9b0:	add	x8, sp, #0x38
  40e9b4:	mov	x29, sp
  40e9b8:	stp	x19, x20, [sp, #16]
  40e9bc:	mov	x20, x2
  40e9c0:	mov	w19, w0
  40e9c4:	mov	w0, w1
  40e9c8:	str	x21, [sp, #32]
  40e9cc:	mov	x21, x3
  40e9d0:	bl	40d728 <__fxstatat@plt+0xab88>
  40e9d4:	add	x3, sp, #0x38
  40e9d8:	mov	x2, x21
  40e9dc:	mov	x1, x20
  40e9e0:	mov	w0, w19
  40e9e4:	bl	40e430 <__fxstatat@plt+0xb890>
  40e9e8:	ldp	x19, x20, [sp, #16]
  40e9ec:	ldr	x21, [sp, #32]
  40e9f0:	ldp	x29, x30, [sp], #112
  40e9f4:	ret
  40e9f8:	mov	x2, x1
  40e9fc:	mov	w1, w0
  40ea00:	mov	w0, #0x0                   	// #0
  40ea04:	b	40e96c <__fxstatat@plt+0xbdcc>
  40ea08:	mov	x3, x2
  40ea0c:	mov	x2, x1
  40ea10:	mov	w1, w0
  40ea14:	mov	w0, #0x0                   	// #0
  40ea18:	b	40e9ac <__fxstatat@plt+0xbe0c>
  40ea1c:	stp	x29, x30, [sp, #-112]!
  40ea20:	mov	x29, sp
  40ea24:	stp	x19, x20, [sp, #16]
  40ea28:	mov	x20, x1
  40ea2c:	adrp	x1, 42c000 <__progname@@GLIBC_2.17+0xa28>
  40ea30:	add	x1, x1, #0x768
  40ea34:	mov	x19, x0
  40ea38:	add	x1, x1, #0x100
  40ea3c:	str	x21, [sp, #32]
  40ea40:	and	w21, w2, #0xff
  40ea44:	mov	x2, #0x38                  	// #56
  40ea48:	add	x0, sp, x2
  40ea4c:	bl	4024d0 <memcpy@plt>
  40ea50:	mov	w1, w21
  40ea54:	add	x0, sp, #0x38
  40ea58:	mov	w2, #0x1                   	// #1
  40ea5c:	bl	40e648 <__fxstatat@plt+0xbaa8>
  40ea60:	add	x3, sp, #0x38
  40ea64:	mov	x2, x20
  40ea68:	mov	x1, x19
  40ea6c:	mov	w0, #0x0                   	// #0
  40ea70:	bl	40e430 <__fxstatat@plt+0xb890>
  40ea74:	ldp	x19, x20, [sp, #16]
  40ea78:	ldr	x21, [sp, #32]
  40ea7c:	ldp	x29, x30, [sp], #112
  40ea80:	ret
  40ea84:	mov	w2, w1
  40ea88:	mov	x1, #0xffffffffffffffff    	// #-1
  40ea8c:	b	40ea1c <__fxstatat@plt+0xbe7c>
  40ea90:	mov	w1, #0x3a                  	// #58
  40ea94:	b	40ea84 <__fxstatat@plt+0xbee4>
  40ea98:	mov	w2, #0x3a                  	// #58
  40ea9c:	b	40ea1c <__fxstatat@plt+0xbe7c>
  40eaa0:	stp	x29, x30, [sp, #-160]!
  40eaa4:	add	x8, sp, #0x20
  40eaa8:	mov	x29, sp
  40eaac:	stp	x19, x20, [sp, #16]
  40eab0:	mov	x20, x2
  40eab4:	mov	w19, w0
  40eab8:	mov	w0, w1
  40eabc:	bl	40d728 <__fxstatat@plt+0xab88>
  40eac0:	add	x1, sp, #0x20
  40eac4:	add	x0, sp, #0x68
  40eac8:	mov	x2, #0x38                  	// #56
  40eacc:	bl	4024d0 <memcpy@plt>
  40ead0:	add	x0, sp, #0x68
  40ead4:	mov	w2, #0x1                   	// #1
  40ead8:	mov	w1, #0x3a                  	// #58
  40eadc:	bl	40e648 <__fxstatat@plt+0xbaa8>
  40eae0:	add	x3, sp, #0x68
  40eae4:	mov	x1, x20
  40eae8:	mov	w0, w19
  40eaec:	mov	x2, #0xffffffffffffffff    	// #-1
  40eaf0:	bl	40e430 <__fxstatat@plt+0xb890>
  40eaf4:	ldp	x19, x20, [sp, #16]
  40eaf8:	ldp	x29, x30, [sp], #160
  40eafc:	ret
  40eb00:	stp	x29, x30, [sp, #-128]!
  40eb04:	mov	x29, sp
  40eb08:	stp	x21, x22, [sp, #32]
  40eb0c:	mov	x22, x1
  40eb10:	adrp	x1, 42c000 <__progname@@GLIBC_2.17+0xa28>
  40eb14:	add	x1, x1, #0x768
  40eb18:	mov	x21, x4
  40eb1c:	add	x1, x1, #0x100
  40eb20:	stp	x19, x20, [sp, #16]
  40eb24:	mov	x20, x3
  40eb28:	mov	w19, w0
  40eb2c:	add	x0, sp, #0x48
  40eb30:	str	x23, [sp, #48]
  40eb34:	mov	x23, x2
  40eb38:	mov	x2, #0x38                  	// #56
  40eb3c:	bl	4024d0 <memcpy@plt>
  40eb40:	mov	x2, x23
  40eb44:	mov	x1, x22
  40eb48:	add	x0, sp, #0x48
  40eb4c:	bl	40e6b0 <__fxstatat@plt+0xbb10>
  40eb50:	add	x3, sp, #0x48
  40eb54:	mov	x2, x21
  40eb58:	mov	x1, x20
  40eb5c:	mov	w0, w19
  40eb60:	bl	40e430 <__fxstatat@plt+0xb890>
  40eb64:	ldp	x19, x20, [sp, #16]
  40eb68:	ldp	x21, x22, [sp, #32]
  40eb6c:	ldr	x23, [sp, #48]
  40eb70:	ldp	x29, x30, [sp], #128
  40eb74:	ret
  40eb78:	mov	x4, #0xffffffffffffffff    	// #-1
  40eb7c:	b	40eb00 <__fxstatat@plt+0xbf60>
  40eb80:	mov	x3, x2
  40eb84:	mov	x2, x1
  40eb88:	mov	x1, x0
  40eb8c:	mov	w0, #0x0                   	// #0
  40eb90:	b	40eb78 <__fxstatat@plt+0xbfd8>
  40eb94:	mov	x4, x3
  40eb98:	mov	x3, x2
  40eb9c:	mov	x2, x1
  40eba0:	mov	x1, x0
  40eba4:	mov	w0, #0x0                   	// #0
  40eba8:	b	40eb00 <__fxstatat@plt+0xbf60>
  40ebac:	adrp	x3, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  40ebb0:	add	x3, x3, #0x550
  40ebb4:	add	x3, x3, #0x20
  40ebb8:	b	40e430 <__fxstatat@plt+0xb890>
  40ebbc:	mov	x2, x1
  40ebc0:	mov	x1, x0
  40ebc4:	mov	w0, #0x0                   	// #0
  40ebc8:	b	40ebac <__fxstatat@plt+0xc00c>
  40ebcc:	mov	x2, #0xffffffffffffffff    	// #-1
  40ebd0:	b	40ebac <__fxstatat@plt+0xc00c>
  40ebd4:	mov	x1, x0
  40ebd8:	mov	w0, #0x0                   	// #0
  40ebdc:	b	40ebcc <__fxstatat@plt+0xc02c>
  40ebe0:	stp	x29, x30, [sp, #-336]!
  40ebe4:	mov	x29, sp
  40ebe8:	stp	x19, x20, [sp, #16]
  40ebec:	mov	x20, x1
  40ebf0:	stp	x21, x22, [sp, #32]
  40ebf4:	mov	x21, x3
  40ebf8:	mov	w22, w2
  40ebfc:	stp	x23, x24, [sp, #48]
  40ec00:	mov	w23, w0
  40ec04:	mov	x0, x1
  40ec08:	str	x25, [sp, #64]
  40ec0c:	bl	409ab8 <__fxstatat@plt+0x6f18>
  40ec10:	mov	x19, x0
  40ec14:	mov	x0, x21
  40ec18:	bl	409ab8 <__fxstatat@plt+0x6f18>
  40ec1c:	mov	x24, x0
  40ec20:	mov	x0, x19
  40ec24:	bl	409b08 <__fxstatat@plt+0x6f68>
  40ec28:	mov	x25, x0
  40ec2c:	mov	x0, x24
  40ec30:	bl	409b08 <__fxstatat@plt+0x6f68>
  40ec34:	cmp	x25, x0
  40ec38:	b.ne	40ed24 <__fxstatat@plt+0xc184>  // b.any
  40ec3c:	mov	x0, x19
  40ec40:	mov	x2, x25
  40ec44:	mov	x1, x24
  40ec48:	bl	4028f0 <memcmp@plt>
  40ec4c:	mov	w19, w0
  40ec50:	cbnz	w0, 40ed24 <__fxstatat@plt+0xc184>
  40ec54:	mov	x0, x20
  40ec58:	bl	410790 <_obstack_memory_used@@Base+0x5d4>
  40ec5c:	add	x2, sp, #0x50
  40ec60:	mov	x20, x0
  40ec64:	mov	x1, x0
  40ec68:	mov	w3, #0x100                 	// #256
  40ec6c:	mov	w0, w23
  40ec70:	bl	411cf0 <_obstack_memory_used@@Base+0x1b34>
  40ec74:	cbz	w0, 40ec94 <__fxstatat@plt+0xc0f4>
  40ec78:	bl	402b30 <__errno_location@plt>
  40ec7c:	ldr	w1, [x0]
  40ec80:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x5e44>
  40ec84:	mov	x3, x20
  40ec88:	add	x2, x2, #0xd1
  40ec8c:	mov	w0, #0x1                   	// #1
  40ec90:	bl	4025b0 <error@plt>
  40ec94:	mov	x0, x20
  40ec98:	bl	402990 <free@plt>
  40ec9c:	mov	x0, x21
  40eca0:	bl	410790 <_obstack_memory_used@@Base+0x5d4>
  40eca4:	add	x2, sp, #0xd0
  40eca8:	mov	x20, x0
  40ecac:	mov	x1, x0
  40ecb0:	mov	w3, #0x100                 	// #256
  40ecb4:	mov	w0, w22
  40ecb8:	bl	411cf0 <_obstack_memory_used@@Base+0x1b34>
  40ecbc:	cbz	w0, 40ecdc <__fxstatat@plt+0xc13c>
  40ecc0:	bl	402b30 <__errno_location@plt>
  40ecc4:	ldr	w1, [x0]
  40ecc8:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x5e44>
  40eccc:	mov	x3, x20
  40ecd0:	add	x2, x2, #0xd1
  40ecd4:	mov	w0, #0x1                   	// #1
  40ecd8:	bl	4025b0 <error@plt>
  40ecdc:	ldr	x1, [sp, #88]
  40ece0:	ldr	x0, [sp, #216]
  40ece4:	cmp	x1, x0
  40ece8:	b.ne	40ecfc <__fxstatat@plt+0xc15c>  // b.any
  40ecec:	ldr	x1, [sp, #80]
  40ecf0:	ldr	x0, [sp, #208]
  40ecf4:	cmp	x1, x0
  40ecf8:	cset	w19, eq  // eq = none
  40ecfc:	and	w19, w19, #0x1
  40ed00:	mov	x0, x20
  40ed04:	bl	402990 <free@plt>
  40ed08:	mov	w0, w19
  40ed0c:	ldp	x19, x20, [sp, #16]
  40ed10:	ldp	x21, x22, [sp, #32]
  40ed14:	ldp	x23, x24, [sp, #48]
  40ed18:	ldr	x25, [sp, #64]
  40ed1c:	ldp	x29, x30, [sp], #336
  40ed20:	ret
  40ed24:	mov	w19, #0x0                   	// #0
  40ed28:	b	40ed08 <__fxstatat@plt+0xc168>
  40ed2c:	mov	x3, x1
  40ed30:	mov	w2, #0xffffff9c            	// #-100
  40ed34:	mov	x1, x0
  40ed38:	mov	w0, w2
  40ed3c:	b	40ebe0 <__fxstatat@plt+0xc040>
  40ed40:	ret
  40ed44:	cmp	x0, x2
  40ed48:	sub	w1, w1, w3
  40ed4c:	csinc	w1, w1, wzr, le
  40ed50:	csinv	w0, w1, wzr, ge  // ge = tcont
  40ed54:	ret
  40ed58:	tbnz	x0, #63, 40ed6c <__fxstatat@plt+0xc1cc>
  40ed5c:	orr	x0, x0, x1
  40ed60:	cmp	x0, #0x0
  40ed64:	cset	w0, ne  // ne = any
  40ed68:	ret
  40ed6c:	mov	w0, #0xffffffff            	// #-1
  40ed70:	b	40ed68 <__fxstatat@plt+0xc1c8>
  40ed74:	scvtf	d0, x1
  40ed78:	mov	x1, #0xcd6500000000        	// #225833675390976
  40ed7c:	movk	x1, #0x41cd, lsl #48
  40ed80:	fmov	d1, x1
  40ed84:	fdiv	d0, d0, d1
  40ed88:	scvtf	d1, x0
  40ed8c:	fadd	d0, d0, d1
  40ed90:	ret
  40ed94:	sub	sp, sp, #0x50
  40ed98:	stp	x29, x30, [sp, #32]
  40ed9c:	add	x29, sp, #0x20
  40eda0:	stp	x19, x20, [sp, #48]
  40eda4:	mov	x20, x0
  40eda8:	mov	x19, x4
  40edac:	str	x21, [sp, #64]
  40edb0:	mov	x21, x5
  40edb4:	cbz	x1, 40ee48 <__fxstatat@plt+0xc2a8>
  40edb8:	mov	x5, x3
  40edbc:	mov	x4, x2
  40edc0:	mov	x3, x1
  40edc4:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x5e44>
  40edc8:	mov	w1, #0x1                   	// #1
  40edcc:	add	x2, x2, #0x570
  40edd0:	bl	402930 <__fprintf_chk@plt>
  40edd4:	mov	w2, #0x5                   	// #5
  40edd8:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x5e44>
  40eddc:	mov	x0, #0x0                   	// #0
  40ede0:	add	x1, x1, #0x583
  40ede4:	bl	402ac0 <dcgettext@plt>
  40ede8:	mov	x3, x0
  40edec:	mov	w4, #0x7e3                 	// #2019
  40edf0:	mov	w1, #0x1                   	// #1
  40edf4:	mov	x0, x20
  40edf8:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x5e44>
  40edfc:	add	x2, x2, #0x864
  40ee00:	bl	402930 <__fprintf_chk@plt>
  40ee04:	mov	w2, #0x5                   	// #5
  40ee08:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x5e44>
  40ee0c:	mov	x0, #0x0                   	// #0
  40ee10:	add	x1, x1, #0x587
  40ee14:	bl	402ac0 <dcgettext@plt>
  40ee18:	mov	x1, x20
  40ee1c:	bl	402ad0 <fputs_unlocked@plt>
  40ee20:	cmp	x21, #0x9
  40ee24:	b.hi	40f0b8 <__fxstatat@plt+0xc518>  // b.pmore
  40ee28:	cmp	w21, #0x9
  40ee2c:	b.hi	40f0b8 <__fxstatat@plt+0xc518>  // b.pmore
  40ee30:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x5e44>
  40ee34:	add	x0, x0, #0x850
  40ee38:	ldrh	w0, [x0, w21, uxtw #1]
  40ee3c:	adr	x1, 40ee48 <__fxstatat@plt+0xc2a8>
  40ee40:	add	x0, x1, w0, sxth #2
  40ee44:	br	x0
  40ee48:	mov	x4, x3
  40ee4c:	mov	w1, #0x1                   	// #1
  40ee50:	mov	x3, x2
  40ee54:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x5e44>
  40ee58:	add	x2, x2, #0x57c
  40ee5c:	bl	402930 <__fprintf_chk@plt>
  40ee60:	b	40edd4 <__fxstatat@plt+0xc234>
  40ee64:	mov	w2, #0x5                   	// #5
  40ee68:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x5e44>
  40ee6c:	mov	x0, #0x0                   	// #0
  40ee70:	add	x1, x1, #0x653
  40ee74:	bl	402ac0 <dcgettext@plt>
  40ee78:	mov	x2, x0
  40ee7c:	mov	x0, x20
  40ee80:	mov	w1, #0x1                   	// #1
  40ee84:	ldr	x3, [x19]
  40ee88:	ldp	x29, x30, [sp, #32]
  40ee8c:	ldp	x19, x20, [sp, #48]
  40ee90:	ldr	x21, [sp, #64]
  40ee94:	add	sp, sp, #0x50
  40ee98:	b	402930 <__fprintf_chk@plt>
  40ee9c:	mov	w2, #0x5                   	// #5
  40eea0:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x5e44>
  40eea4:	mov	x0, #0x0                   	// #0
  40eea8:	add	x1, x1, #0x663
  40eeac:	bl	402ac0 <dcgettext@plt>
  40eeb0:	mov	x2, x0
  40eeb4:	mov	x0, x20
  40eeb8:	mov	w1, #0x1                   	// #1
  40eebc:	ldp	x3, x4, [x19]
  40eec0:	ldp	x29, x30, [sp, #32]
  40eec4:	ldp	x19, x20, [sp, #48]
  40eec8:	ldr	x21, [sp, #64]
  40eecc:	add	sp, sp, #0x50
  40eed0:	b	402930 <__fprintf_chk@plt>
  40eed4:	mov	w2, #0x5                   	// #5
  40eed8:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x5e44>
  40eedc:	mov	x0, #0x0                   	// #0
  40eee0:	add	x1, x1, #0x67a
  40eee4:	bl	402ac0 <dcgettext@plt>
  40eee8:	mov	x2, x0
  40eeec:	mov	x0, x20
  40eef0:	mov	w1, #0x1                   	// #1
  40eef4:	ldp	x3, x4, [x19]
  40eef8:	ldr	x5, [x19, #16]
  40eefc:	ldp	x29, x30, [sp, #32]
  40ef00:	ldp	x19, x20, [sp, #48]
  40ef04:	ldr	x21, [sp, #64]
  40ef08:	add	sp, sp, #0x50
  40ef0c:	b	402930 <__fprintf_chk@plt>
  40ef10:	mov	w2, #0x5                   	// #5
  40ef14:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x5e44>
  40ef18:	mov	x0, #0x0                   	// #0
  40ef1c:	add	x1, x1, #0x696
  40ef20:	bl	402ac0 <dcgettext@plt>
  40ef24:	mov	x2, x0
  40ef28:	mov	x0, x20
  40ef2c:	mov	w1, #0x1                   	// #1
  40ef30:	ldp	x3, x4, [x19]
  40ef34:	ldp	x5, x6, [x19, #16]
  40ef38:	ldp	x29, x30, [sp, #32]
  40ef3c:	ldp	x19, x20, [sp, #48]
  40ef40:	ldr	x21, [sp, #64]
  40ef44:	add	sp, sp, #0x50
  40ef48:	b	402930 <__fprintf_chk@plt>
  40ef4c:	mov	w2, #0x5                   	// #5
  40ef50:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x5e44>
  40ef54:	mov	x0, #0x0                   	// #0
  40ef58:	add	x1, x1, #0x6b6
  40ef5c:	bl	402ac0 <dcgettext@plt>
  40ef60:	mov	x2, x0
  40ef64:	mov	x0, x20
  40ef68:	mov	w1, #0x1                   	// #1
  40ef6c:	ldp	x3, x4, [x19]
  40ef70:	ldp	x5, x6, [x19, #16]
  40ef74:	ldp	x29, x30, [sp, #32]
  40ef78:	ldr	x7, [x19, #32]
  40ef7c:	ldp	x19, x20, [sp, #48]
  40ef80:	ldr	x21, [sp, #64]
  40ef84:	add	sp, sp, #0x50
  40ef88:	b	402930 <__fprintf_chk@plt>
  40ef8c:	mov	w2, #0x5                   	// #5
  40ef90:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x5e44>
  40ef94:	mov	x0, #0x0                   	// #0
  40ef98:	add	x1, x1, #0x6da
  40ef9c:	bl	402ac0 <dcgettext@plt>
  40efa0:	mov	x2, x0
  40efa4:	ldp	x3, x4, [x19]
  40efa8:	mov	x0, x20
  40efac:	ldp	x5, x6, [x19, #16]
  40efb0:	ldp	x7, x1, [x19, #32]
  40efb4:	str	x1, [sp]
  40efb8:	mov	w1, #0x1                   	// #1
  40efbc:	bl	402930 <__fprintf_chk@plt>
  40efc0:	ldp	x29, x30, [sp, #32]
  40efc4:	ldp	x19, x20, [sp, #48]
  40efc8:	ldr	x21, [sp, #64]
  40efcc:	add	sp, sp, #0x50
  40efd0:	ret
  40efd4:	mov	w2, #0x5                   	// #5
  40efd8:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x5e44>
  40efdc:	mov	x0, #0x0                   	// #0
  40efe0:	add	x1, x1, #0x702
  40efe4:	bl	402ac0 <dcgettext@plt>
  40efe8:	mov	x2, x0
  40efec:	ldp	x3, x4, [x19]
  40eff0:	mov	x0, x20
  40eff4:	ldp	x5, x6, [x19, #16]
  40eff8:	ldr	x1, [x19, #48]
  40effc:	ldr	x7, [x19, #32]
  40f000:	str	x1, [sp, #8]
  40f004:	ldr	x1, [x19, #40]
  40f008:	str	x1, [sp]
  40f00c:	mov	w1, #0x1                   	// #1
  40f010:	bl	402930 <__fprintf_chk@plt>
  40f014:	b	40efc0 <__fxstatat@plt+0xc420>
  40f018:	mov	w2, #0x5                   	// #5
  40f01c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x5e44>
  40f020:	mov	x0, #0x0                   	// #0
  40f024:	add	x1, x1, #0x72e
  40f028:	bl	402ac0 <dcgettext@plt>
  40f02c:	mov	x2, x0
  40f030:	ldr	x1, [x19, #56]
  40f034:	mov	x0, x20
  40f038:	ldp	x3, x4, [x19]
  40f03c:	ldp	x5, x6, [x19, #16]
  40f040:	ldr	x7, [x19, #32]
  40f044:	str	x1, [sp, #16]
  40f048:	ldr	x1, [x19, #48]
  40f04c:	str	x1, [sp, #8]
  40f050:	ldr	x1, [x19, #40]
  40f054:	str	x1, [sp]
  40f058:	mov	w1, #0x1                   	// #1
  40f05c:	bl	402930 <__fprintf_chk@plt>
  40f060:	b	40efc0 <__fxstatat@plt+0xc420>
  40f064:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x5e44>
  40f068:	add	x1, x1, #0x75e
  40f06c:	mov	w2, #0x5                   	// #5
  40f070:	mov	x0, #0x0                   	// #0
  40f074:	bl	402ac0 <dcgettext@plt>
  40f078:	ldr	x1, [x19, #64]
  40f07c:	mov	x2, x0
  40f080:	ldp	x3, x4, [x19]
  40f084:	mov	x0, x20
  40f088:	ldp	x5, x6, [x19, #16]
  40f08c:	ldr	x7, [x19, #32]
  40f090:	str	x1, [sp, #24]
  40f094:	ldr	x1, [x19, #56]
  40f098:	str	x1, [sp, #16]
  40f09c:	ldr	x1, [x19, #48]
  40f0a0:	str	x1, [sp, #8]
  40f0a4:	ldr	x1, [x19, #40]
  40f0a8:	str	x1, [sp]
  40f0ac:	mov	w1, #0x1                   	// #1
  40f0b0:	bl	402930 <__fprintf_chk@plt>
  40f0b4:	b	40efc0 <__fxstatat@plt+0xc420>
  40f0b8:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x5e44>
  40f0bc:	mov	w2, #0x5                   	// #5
  40f0c0:	add	x1, x1, #0x792
  40f0c4:	b	40f070 <__fxstatat@plt+0xc4d0>
  40f0c8:	mov	x5, #0x0                   	// #0
  40f0cc:	ldr	x6, [x4, x5, lsl #3]
  40f0d0:	cbnz	x6, 40f0d8 <__fxstatat@plt+0xc538>
  40f0d4:	b	40ed94 <__fxstatat@plt+0xc1f4>
  40f0d8:	add	x5, x5, #0x1
  40f0dc:	b	40f0cc <__fxstatat@plt+0xc52c>
  40f0e0:	stp	x29, x30, [sp, #-96]!
  40f0e4:	mov	x5, #0x0                   	// #0
  40f0e8:	mov	x29, sp
  40f0ec:	ldr	w7, [x4, #24]
  40f0f0:	ldp	x6, x10, [x4]
  40f0f4:	add	x4, sp, #0x10
  40f0f8:	tbnz	w7, #31, 40f12c <__fxstatat@plt+0xc58c>
  40f0fc:	add	x9, x6, #0xf
  40f100:	mov	x8, x6
  40f104:	and	x6, x9, #0xfffffffffffffff8
  40f108:	ldr	x8, [x8]
  40f10c:	str	x8, [x4, x5, lsl #3]
  40f110:	cbz	x8, 40f120 <__fxstatat@plt+0xc580>
  40f114:	add	x5, x5, #0x1
  40f118:	cmp	x5, #0xa
  40f11c:	b.ne	40f0f8 <__fxstatat@plt+0xc558>  // b.any
  40f120:	bl	40ed94 <__fxstatat@plt+0xc1f4>
  40f124:	ldp	x29, x30, [sp], #96
  40f128:	ret
  40f12c:	add	w9, w7, #0x8
  40f130:	cmp	w9, #0x0
  40f134:	b.le	40f14c <__fxstatat@plt+0xc5ac>
  40f138:	add	x11, x6, #0xf
  40f13c:	mov	x8, x6
  40f140:	mov	w7, w9
  40f144:	and	x6, x11, #0xfffffffffffffff8
  40f148:	b	40f108 <__fxstatat@plt+0xc568>
  40f14c:	add	x8, x10, w7, sxtw
  40f150:	mov	w7, w9
  40f154:	b	40f108 <__fxstatat@plt+0xc568>
  40f158:	stp	x29, x30, [sp, #-240]!
  40f15c:	mov	x29, sp
  40f160:	stp	x4, x5, [sp, #208]
  40f164:	add	x4, sp, #0xf0
  40f168:	stp	x4, x4, [sp, #48]
  40f16c:	add	x4, sp, #0xd0
  40f170:	str	x4, [sp, #64]
  40f174:	mov	w4, #0xffffffe0            	// #-32
  40f178:	str	w4, [sp, #72]
  40f17c:	mov	w4, #0xffffff80            	// #-128
  40f180:	str	w4, [sp, #76]
  40f184:	ldp	x4, x5, [sp, #48]
  40f188:	stp	x4, x5, [sp, #16]
  40f18c:	ldp	x4, x5, [sp, #64]
  40f190:	stp	x4, x5, [sp, #32]
  40f194:	add	x4, sp, #0x10
  40f198:	str	q0, [sp, #80]
  40f19c:	str	q1, [sp, #96]
  40f1a0:	str	q2, [sp, #112]
  40f1a4:	str	q3, [sp, #128]
  40f1a8:	str	q4, [sp, #144]
  40f1ac:	str	q5, [sp, #160]
  40f1b0:	str	q6, [sp, #176]
  40f1b4:	str	q7, [sp, #192]
  40f1b8:	stp	x6, x7, [sp, #224]
  40f1bc:	bl	40f0e0 <__fxstatat@plt+0xc540>
  40f1c0:	ldp	x29, x30, [sp], #240
  40f1c4:	ret
  40f1c8:	stp	x29, x30, [sp, #-16]!
  40f1cc:	mov	w2, #0x5                   	// #5
  40f1d0:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x5e44>
  40f1d4:	mov	x29, sp
  40f1d8:	add	x1, x1, #0x7ce
  40f1dc:	mov	x0, #0x0                   	// #0
  40f1e0:	bl	402ac0 <dcgettext@plt>
  40f1e4:	mov	x1, x0
  40f1e8:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x5e44>
  40f1ec:	mov	w0, #0x1                   	// #1
  40f1f0:	add	x2, x2, #0x7e3
  40f1f4:	bl	4027b0 <__printf_chk@plt>
  40f1f8:	mov	w2, #0x5                   	// #5
  40f1fc:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x5e44>
  40f200:	mov	x0, #0x0                   	// #0
  40f204:	add	x1, x1, #0x7f9
  40f208:	bl	402ac0 <dcgettext@plt>
  40f20c:	mov	x1, x0
  40f210:	adrp	x3, 413000 <_obstack_memory_used@@Base+0x2e44>
  40f214:	add	x3, x3, #0xc5b
  40f218:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x2e44>
  40f21c:	mov	w0, #0x1                   	// #1
  40f220:	add	x2, x2, #0xc83
  40f224:	bl	4027b0 <__printf_chk@plt>
  40f228:	mov	w2, #0x5                   	// #5
  40f22c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x5e44>
  40f230:	mov	x0, #0x0                   	// #0
  40f234:	add	x1, x1, #0x80d
  40f238:	bl	402ac0 <dcgettext@plt>
  40f23c:	ldp	x29, x30, [sp], #16
  40f240:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  40f244:	ldr	x1, [x1, #1488]
  40f248:	b	402ad0 <fputs_unlocked@plt>
  40f24c:	stp	x29, x30, [sp, #-32]!
  40f250:	mov	x29, sp
  40f254:	str	x19, [sp, #16]
  40f258:	mov	x19, x0
  40f25c:	bl	402730 <malloc@plt>
  40f260:	cmp	x0, #0x0
  40f264:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  40f268:	b.eq	40f270 <__fxstatat@plt+0xc6d0>  // b.none
  40f26c:	bl	40f440 <__fxstatat@plt+0xc8a0>
  40f270:	ldr	x19, [sp, #16]
  40f274:	ldp	x29, x30, [sp], #32
  40f278:	ret
  40f27c:	mov	x2, x0
  40f280:	mul	x0, x0, x1
  40f284:	umulh	x2, x2, x1
  40f288:	cmp	x2, #0x0
  40f28c:	cset	x1, ne  // ne = any
  40f290:	tbnz	x0, #63, 40f298 <__fxstatat@plt+0xc6f8>
  40f294:	cbz	x1, 40f2a4 <__fxstatat@plt+0xc704>
  40f298:	stp	x29, x30, [sp, #-16]!
  40f29c:	mov	x29, sp
  40f2a0:	bl	40f440 <__fxstatat@plt+0xc8a0>
  40f2a4:	b	40f24c <__fxstatat@plt+0xc6ac>
  40f2a8:	b	40f24c <__fxstatat@plt+0xc6ac>
  40f2ac:	stp	x29, x30, [sp, #-32]!
  40f2b0:	cmp	x1, #0x0
  40f2b4:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  40f2b8:	mov	x29, sp
  40f2bc:	str	x19, [sp, #16]
  40f2c0:	b.eq	40f2d8 <__fxstatat@plt+0xc738>  // b.none
  40f2c4:	bl	402990 <free@plt>
  40f2c8:	mov	x0, #0x0                   	// #0
  40f2cc:	ldr	x19, [sp, #16]
  40f2d0:	ldp	x29, x30, [sp], #32
  40f2d4:	ret
  40f2d8:	mov	x19, x1
  40f2dc:	bl	402820 <realloc@plt>
  40f2e0:	cmp	x0, #0x0
  40f2e4:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  40f2e8:	b.eq	40f2cc <__fxstatat@plt+0xc72c>  // b.none
  40f2ec:	bl	40f440 <__fxstatat@plt+0xc8a0>
  40f2f0:	mov	x3, x1
  40f2f4:	mul	x1, x1, x2
  40f2f8:	umulh	x3, x3, x2
  40f2fc:	cmp	x3, #0x0
  40f300:	cset	x2, ne  // ne = any
  40f304:	tbnz	x1, #63, 40f30c <__fxstatat@plt+0xc76c>
  40f308:	cbz	x2, 40f318 <__fxstatat@plt+0xc778>
  40f30c:	stp	x29, x30, [sp, #-16]!
  40f310:	mov	x29, sp
  40f314:	bl	40f440 <__fxstatat@plt+0xc8a0>
  40f318:	b	40f2ac <__fxstatat@plt+0xc70c>
  40f31c:	ldr	x3, [x1]
  40f320:	cbnz	x0, 40f35c <__fxstatat@plt+0xc7bc>
  40f324:	cbnz	x3, 40f338 <__fxstatat@plt+0xc798>
  40f328:	mov	x3, #0x80                  	// #128
  40f32c:	cmp	x2, #0x80
  40f330:	udiv	x3, x3, x2
  40f334:	cinc	x3, x3, hi  // hi = pmore
  40f338:	umulh	x5, x3, x2
  40f33c:	mul	x4, x3, x2
  40f340:	cmp	x5, #0x0
  40f344:	cset	x5, ne  // ne = any
  40f348:	tbnz	x4, #63, 40f350 <__fxstatat@plt+0xc7b0>
  40f34c:	cbz	x5, 40f378 <__fxstatat@plt+0xc7d8>
  40f350:	stp	x29, x30, [sp, #-16]!
  40f354:	mov	x29, sp
  40f358:	bl	40f440 <__fxstatat@plt+0xc8a0>
  40f35c:	mov	x4, #0x5555555555555555    	// #6148914691236517205
  40f360:	movk	x4, #0x5554
  40f364:	udiv	x4, x4, x2
  40f368:	cmp	x4, x3
  40f36c:	b.ls	40f350 <__fxstatat@plt+0xc7b0>  // b.plast
  40f370:	add	x4, x3, #0x1
  40f374:	add	x3, x4, x3, lsr #1
  40f378:	str	x3, [x1]
  40f37c:	mul	x1, x3, x2
  40f380:	b	40f2ac <__fxstatat@plt+0xc70c>
  40f384:	mov	x2, #0x1                   	// #1
  40f388:	b	40f31c <__fxstatat@plt+0xc77c>
  40f38c:	stp	x29, x30, [sp, #-32]!
  40f390:	mov	x29, sp
  40f394:	str	x19, [sp, #16]
  40f398:	mov	x19, x0
  40f39c:	bl	40f24c <__fxstatat@plt+0xc6ac>
  40f3a0:	mov	x2, x19
  40f3a4:	mov	w1, #0x0                   	// #0
  40f3a8:	ldr	x19, [sp, #16]
  40f3ac:	ldp	x29, x30, [sp], #32
  40f3b0:	b	4027c0 <memset@plt>
  40f3b4:	umulh	x2, x0, x1
  40f3b8:	stp	x29, x30, [sp, #-16]!
  40f3bc:	mul	x4, x0, x1
  40f3c0:	cmp	x2, #0x0
  40f3c4:	mov	x29, sp
  40f3c8:	cset	x2, ne  // ne = any
  40f3cc:	tbnz	x4, #63, 40f3d4 <__fxstatat@plt+0xc834>
  40f3d0:	cbz	x2, 40f3d8 <__fxstatat@plt+0xc838>
  40f3d4:	bl	40f440 <__fxstatat@plt+0xc8a0>
  40f3d8:	bl	402800 <calloc@plt>
  40f3dc:	cbz	x0, 40f3d4 <__fxstatat@plt+0xc834>
  40f3e0:	ldp	x29, x30, [sp], #16
  40f3e4:	ret
  40f3e8:	stp	x29, x30, [sp, #-32]!
  40f3ec:	mov	x29, sp
  40f3f0:	stp	x19, x20, [sp, #16]
  40f3f4:	mov	x19, x1
  40f3f8:	mov	x20, x0
  40f3fc:	mov	x0, x1
  40f400:	bl	40f24c <__fxstatat@plt+0xc6ac>
  40f404:	mov	x2, x19
  40f408:	mov	x1, x20
  40f40c:	ldp	x19, x20, [sp, #16]
  40f410:	ldp	x29, x30, [sp], #32
  40f414:	b	4024d0 <memcpy@plt>
  40f418:	stp	x29, x30, [sp, #-32]!
  40f41c:	mov	x29, sp
  40f420:	str	x19, [sp, #16]
  40f424:	mov	x19, x0
  40f428:	bl	402540 <strlen@plt>
  40f42c:	add	x1, x0, #0x1
  40f430:	mov	x0, x19
  40f434:	ldr	x19, [sp, #16]
  40f438:	ldp	x29, x30, [sp], #32
  40f43c:	b	40f3e8 <__fxstatat@plt+0xc848>
  40f440:	stp	x29, x30, [sp, #-32]!
  40f444:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  40f448:	mov	w2, #0x5                   	// #5
  40f44c:	mov	x29, sp
  40f450:	str	x19, [sp, #16]
  40f454:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x5e44>
  40f458:	ldr	w19, [x0, #1352]
  40f45c:	add	x1, x1, #0x893
  40f460:	mov	x0, #0x0                   	// #0
  40f464:	bl	402ac0 <dcgettext@plt>
  40f468:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x5e44>
  40f46c:	mov	x3, x0
  40f470:	add	x2, x2, #0xd1
  40f474:	mov	w0, w19
  40f478:	mov	w1, #0x0                   	// #0
  40f47c:	bl	4025b0 <error@plt>
  40f480:	bl	4028b0 <abort@plt>
  40f484:	stp	x29, x30, [sp, #-80]!
  40f488:	mov	x29, sp
  40f48c:	stp	x19, x20, [sp, #16]
  40f490:	mov	w19, w6
  40f494:	stp	x21, x22, [sp, #32]
  40f498:	mov	x22, x0
  40f49c:	mov	x21, x5
  40f4a0:	stp	x23, x24, [sp, #48]
  40f4a4:	mov	x24, x2
  40f4a8:	mov	x23, x3
  40f4ac:	mov	w2, w1
  40f4b0:	add	x3, sp, #0x48
  40f4b4:	mov	x1, #0x0                   	// #0
  40f4b8:	bl	40fae0 <__fxstatat@plt+0xcf40>
  40f4bc:	cbnz	w0, 40f544 <__fxstatat@plt+0xc9a4>
  40f4c0:	ldr	x20, [sp, #72]
  40f4c4:	cmp	x20, x24
  40f4c8:	b.cc	40f4d4 <__fxstatat@plt+0xc934>  // b.lo, b.ul, b.last
  40f4cc:	cmp	x20, x23
  40f4d0:	b.ls	40f52c <__fxstatat@plt+0xc98c>  // b.plast
  40f4d4:	bl	402b30 <__errno_location@plt>
  40f4d8:	mov	x1, #0x3fffffff            	// #1073741823
  40f4dc:	cmp	x20, x1
  40f4e0:	mov	w2, #0x22                  	// #34
  40f4e4:	mov	w1, #0x4b                  	// #75
  40f4e8:	csel	w1, w1, w2, hi  // hi = pmore
  40f4ec:	str	w1, [x0]
  40f4f0:	cmp	w19, #0x0
  40f4f4:	csinc	w19, w19, wzr, ne  // ne = any
  40f4f8:	bl	402b30 <__errno_location@plt>
  40f4fc:	ldr	w20, [x0]
  40f500:	mov	x0, x22
  40f504:	cmp	w20, #0x16
  40f508:	csel	w20, w20, wzr, ne  // ne = any
  40f50c:	bl	40ebd4 <__fxstatat@plt+0xc034>
  40f510:	mov	x4, x0
  40f514:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x2e44>
  40f518:	mov	x3, x21
  40f51c:	add	x2, x2, #0xe5c
  40f520:	mov	w1, w20
  40f524:	mov	w0, w19
  40f528:	bl	4025b0 <error@plt>
  40f52c:	ldp	x19, x20, [sp, #16]
  40f530:	ldp	x21, x22, [sp, #32]
  40f534:	ldp	x23, x24, [sp, #48]
  40f538:	ldr	x0, [sp, #72]
  40f53c:	ldp	x29, x30, [sp], #80
  40f540:	ret
  40f544:	mov	w20, w0
  40f548:	bl	402b30 <__errno_location@plt>
  40f54c:	cmp	w20, #0x1
  40f550:	b.ne	40f55c <__fxstatat@plt+0xc9bc>  // b.any
  40f554:	mov	w1, #0x4b                  	// #75
  40f558:	b	40f4ec <__fxstatat@plt+0xc94c>
  40f55c:	cmp	w20, #0x3
  40f560:	b.ne	40f4f0 <__fxstatat@plt+0xc950>  // b.any
  40f564:	str	wzr, [x0]
  40f568:	b	40f4f0 <__fxstatat@plt+0xc950>
  40f56c:	mov	w6, w5
  40f570:	mov	x5, x4
  40f574:	mov	x4, x3
  40f578:	mov	x3, x2
  40f57c:	mov	x2, x1
  40f580:	mov	w1, #0xa                   	// #10
  40f584:	b	40f484 <__fxstatat@plt+0xc8e4>
  40f588:	stp	x29, x30, [sp, #-32]!
  40f58c:	mov	x1, #0x0                   	// #0
  40f590:	mov	x0, #0x0                   	// #0
  40f594:	mov	x29, sp
  40f598:	str	x19, [sp, #16]
  40f59c:	bl	402510 <getcwd@plt>
  40f5a0:	mov	x19, x0
  40f5a4:	cbnz	x0, 40f5bc <__fxstatat@plt+0xca1c>
  40f5a8:	bl	402b30 <__errno_location@plt>
  40f5ac:	ldr	w0, [x0]
  40f5b0:	cmp	w0, #0xc
  40f5b4:	b.ne	40f5bc <__fxstatat@plt+0xca1c>  // b.any
  40f5b8:	bl	40f440 <__fxstatat@plt+0xc8a0>
  40f5bc:	mov	x0, x19
  40f5c0:	ldr	x19, [sp, #16]
  40f5c4:	ldp	x29, x30, [sp], #32
  40f5c8:	ret
  40f5cc:	stp	x29, x30, [sp, #-80]!
  40f5d0:	mov	x0, #0x22                  	// #34
  40f5d4:	mov	x29, sp
  40f5d8:	str	x23, [sp, #48]
  40f5dc:	mov	x23, #0x1001                	// #4097
  40f5e0:	movk	x23, #0x40, lsl #16
  40f5e4:	stp	x19, x20, [sp, #16]
  40f5e8:	movk	x23, #0x10, lsl #32
  40f5ec:	mov	x19, #0x0                   	// #0
  40f5f0:	stp	x21, x22, [sp, #32]
  40f5f4:	str	x0, [sp, #72]
  40f5f8:	add	x1, sp, #0x48
  40f5fc:	mov	x0, x19
  40f600:	bl	40f384 <__fxstatat@plt+0xc7e4>
  40f604:	mov	x19, x0
  40f608:	ldr	x22, [sp, #72]
  40f60c:	sub	x21, x22, #0x2
  40f610:	strb	wzr, [x0, x21]
  40f614:	bl	402b30 <__errno_location@plt>
  40f618:	mov	x20, x0
  40f61c:	sub	x1, x22, #0x1
  40f620:	mov	x0, x19
  40f624:	str	wzr, [x20]
  40f628:	bl	402a90 <gethostname@plt>
  40f62c:	cbnz	w0, 40f650 <__fxstatat@plt+0xcab0>
  40f630:	ldrb	w0, [x19, x21]
  40f634:	cbnz	w0, 40f5f8 <__fxstatat@plt+0xca58>
  40f638:	mov	x0, x19
  40f63c:	ldp	x19, x20, [sp, #16]
  40f640:	ldp	x21, x22, [sp, #32]
  40f644:	ldr	x23, [sp, #48]
  40f648:	ldp	x29, x30, [sp], #80
  40f64c:	ret
  40f650:	ldr	w21, [x20]
  40f654:	cmp	w21, #0x24
  40f658:	b.hi	40f664 <__fxstatat@plt+0xcac4>  // b.pmore
  40f65c:	lsr	x0, x23, x21
  40f660:	tbnz	w0, #0, 40f5f8 <__fxstatat@plt+0xca58>
  40f664:	mov	x0, x19
  40f668:	mov	x19, #0x0                   	// #0
  40f66c:	bl	402990 <free@plt>
  40f670:	str	w21, [x20]
  40f674:	b	40f638 <__fxstatat@plt+0xca98>
  40f678:	sxtw	x1, w1
  40f67c:	mov	x4, x0
  40f680:	mov	w0, #0x0                   	// #0
  40f684:	sub	w2, w2, #0x1
  40f688:	cmn	w2, #0x1
  40f68c:	b.ne	40f694 <__fxstatat@plt+0xcaf4>  // b.any
  40f690:	ret
  40f694:	ldr	x3, [x4]
  40f698:	umulh	x5, x3, x1
  40f69c:	cbnz	x5, 40f6b0 <__fxstatat@plt+0xcb10>
  40f6a0:	mul	x3, x3, x1
  40f6a4:	orr	w0, w0, w5
  40f6a8:	str	x3, [x4]
  40f6ac:	b	40f684 <__fxstatat@plt+0xcae4>
  40f6b0:	mov	x3, #0xffffffffffffffff    	// #-1
  40f6b4:	mov	w5, #0x1                   	// #1
  40f6b8:	b	40f6a4 <__fxstatat@plt+0xcb04>
  40f6bc:	stp	x29, x30, [sp, #-96]!
  40f6c0:	cmp	w2, #0x24
  40f6c4:	mov	x29, sp
  40f6c8:	stp	x19, x20, [sp, #16]
  40f6cc:	stp	x21, x22, [sp, #32]
  40f6d0:	stp	x23, x24, [sp, #48]
  40f6d4:	str	x25, [sp, #64]
  40f6d8:	b.ls	40f6fc <__fxstatat@plt+0xcb5c>  // b.plast
  40f6dc:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x5e44>
  40f6e0:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x5e44>
  40f6e4:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x5e44>
  40f6e8:	add	x3, x3, #0x919
  40f6ec:	add	x1, x1, #0x8a4
  40f6f0:	add	x0, x0, #0x8b2
  40f6f4:	mov	w2, #0x54                  	// #84
  40f6f8:	bl	402b20 <__assert_fail@plt>
  40f6fc:	mov	x19, x0
  40f700:	mov	x20, x1
  40f704:	mov	w24, w2
  40f708:	mov	x21, x3
  40f70c:	mov	x23, x4
  40f710:	cbnz	x1, 40f718 <__fxstatat@plt+0xcb78>
  40f714:	add	x20, sp, #0x50
  40f718:	bl	402b30 <__errno_location@plt>
  40f71c:	str	wzr, [x0]
  40f720:	mov	x22, x0
  40f724:	ldrb	w25, [x19]
  40f728:	bl	402970 <__ctype_b_loc@plt>
  40f72c:	ldr	x2, [x0]
  40f730:	mov	x0, x19
  40f734:	ubfiz	x1, x25, #1, #8
  40f738:	ldrh	w1, [x2, x1]
  40f73c:	tbnz	w1, #13, 40f768 <__fxstatat@plt+0xcbc8>
  40f740:	cmp	w25, #0x2d
  40f744:	b.ne	40f770 <__fxstatat@plt+0xcbd0>  // b.any
  40f748:	mov	w19, #0x4                   	// #4
  40f74c:	mov	w0, w19
  40f750:	ldp	x19, x20, [sp, #16]
  40f754:	ldp	x21, x22, [sp, #32]
  40f758:	ldp	x23, x24, [sp, #48]
  40f75c:	ldr	x25, [sp, #64]
  40f760:	ldp	x29, x30, [sp], #96
  40f764:	ret
  40f768:	ldrb	w25, [x0, #1]!
  40f76c:	b	40f734 <__fxstatat@plt+0xcb94>
  40f770:	mov	w2, w24
  40f774:	mov	x1, x20
  40f778:	mov	x0, x19
  40f77c:	bl	402530 <strtoul@plt>
  40f780:	ldr	x24, [x20]
  40f784:	str	x0, [sp, #88]
  40f788:	cmp	x24, x19
  40f78c:	b.ne	40f7dc <__fxstatat@plt+0xcc3c>  // b.any
  40f790:	cbz	x23, 40f748 <__fxstatat@plt+0xcba8>
  40f794:	ldrb	w1, [x19]
  40f798:	cbz	w1, 40f748 <__fxstatat@plt+0xcba8>
  40f79c:	mov	x0, x23
  40f7a0:	bl	4029d0 <strchr@plt>
  40f7a4:	cbz	x0, 40f748 <__fxstatat@plt+0xcba8>
  40f7a8:	mov	x0, #0x1                   	// #1
  40f7ac:	mov	w19, #0x0                   	// #0
  40f7b0:	str	x0, [sp, #88]
  40f7b4:	ldrb	w22, [x24]
  40f7b8:	cbz	w22, 40f9a4 <__fxstatat@plt+0xce04>
  40f7bc:	mov	w1, w22
  40f7c0:	mov	x0, x23
  40f7c4:	bl	4029d0 <strchr@plt>
  40f7c8:	cbnz	x0, 40f804 <__fxstatat@plt+0xcc64>
  40f7cc:	ldr	x0, [sp, #88]
  40f7d0:	orr	w19, w19, #0x2
  40f7d4:	str	x0, [x21]
  40f7d8:	b	40f74c <__fxstatat@plt+0xcbac>
  40f7dc:	ldr	w1, [x22]
  40f7e0:	cbz	w1, 40f7fc <__fxstatat@plt+0xcc5c>
  40f7e4:	cmp	w1, #0x22
  40f7e8:	b.ne	40f748 <__fxstatat@plt+0xcba8>  // b.any
  40f7ec:	mov	w19, #0x1                   	// #1
  40f7f0:	cbnz	x23, 40f7b4 <__fxstatat@plt+0xcc14>
  40f7f4:	str	x0, [x21]
  40f7f8:	b	40f74c <__fxstatat@plt+0xcbac>
  40f7fc:	mov	w19, #0x0                   	// #0
  40f800:	b	40f7f0 <__fxstatat@plt+0xcc50>
  40f804:	cmp	w22, #0x5a
  40f808:	b.hi	40f8f0 <__fxstatat@plt+0xcd50>  // b.pmore
  40f80c:	cmp	w22, #0x44
  40f810:	b.hi	40f8cc <__fxstatat@plt+0xcd2c>  // b.pmore
  40f814:	mov	w6, #0x1                   	// #1
  40f818:	mov	w1, #0x400                 	// #1024
  40f81c:	cmp	w22, #0x58
  40f820:	b.hi	40f910 <__fxstatat@plt+0xcd70>  // b.pmore
  40f824:	sub	w22, w22, #0x42
  40f828:	and	w0, w22, #0xff
  40f82c:	cmp	w0, #0x12
  40f830:	b.hi	40f7cc <__fxstatat@plt+0xcc2c>  // b.pmore
  40f834:	cmp	w22, #0x12
  40f838:	b.hi	40f7cc <__fxstatat@plt+0xcc2c>  // b.pmore
  40f83c:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x5e44>
  40f840:	add	x0, x0, #0x8d8
  40f844:	ldrb	w0, [x0, w22, uxtw]
  40f848:	adr	x2, 40f854 <__fxstatat@plt+0xccb4>
  40f84c:	add	x0, x2, w0, sxtb #2
  40f850:	br	x0
  40f854:	mov	x1, #0x1                   	// #1
  40f858:	lsl	x0, x1, x0
  40f85c:	mov	x1, #0x2051                	// #8273
  40f860:	tst	x0, x1
  40f864:	b.eq	40f900 <__fxstatat@plt+0xcd60>  // b.none
  40f868:	mov	x0, x23
  40f86c:	mov	w1, #0x30                  	// #48
  40f870:	bl	4029d0 <strchr@plt>
  40f874:	cbz	x0, 40f94c <__fxstatat@plt+0xcdac>
  40f878:	ldrb	w0, [x24, #1]
  40f87c:	cmp	w0, #0x44
  40f880:	b.eq	40f954 <__fxstatat@plt+0xcdb4>  // b.none
  40f884:	cmp	w0, #0x69
  40f888:	b.eq	40f934 <__fxstatat@plt+0xcd94>  // b.none
  40f88c:	cmp	w0, #0x42
  40f890:	mov	w6, #0x2                   	// #2
  40f894:	mov	w1, #0x400                 	// #1024
  40f898:	mov	w0, #0x3e8                 	// #1000
  40f89c:	csinc	w6, w6, wzr, eq  // eq = none
  40f8a0:	csel	w1, w1, w0, ne  // ne = any
  40f8a4:	cmp	w22, #0x6d
  40f8a8:	b.ls	40f81c <__fxstatat@plt+0xcc7c>  // b.plast
  40f8ac:	cmp	w22, #0x74
  40f8b0:	b.eq	40f9f0 <__fxstatat@plt+0xce50>  // b.none
  40f8b4:	cmp	w22, #0x77
  40f8b8:	b.ne	40f7cc <__fxstatat@plt+0xcc2c>  // b.any
  40f8bc:	ldr	x0, [sp, #88]
  40f8c0:	tbnz	x0, #63, 40f97c <__fxstatat@plt+0xcddc>
  40f8c4:	lsl	x0, x0, #1
  40f8c8:	b	40f970 <__fxstatat@plt+0xcdd0>
  40f8cc:	sub	w1, w22, #0x45
  40f8d0:	cmp	w1, #0x15
  40f8d4:	b.hi	40f94c <__fxstatat@plt+0xcdac>  // b.pmore
  40f8d8:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x5e44>
  40f8dc:	add	x0, x0, #0x8ec
  40f8e0:	ldrb	w0, [x0, w1, uxtw]
  40f8e4:	adr	x1, 40f8f0 <__fxstatat@plt+0xcd50>
  40f8e8:	add	x0, x1, w0, sxtb #2
  40f8ec:	br	x0
  40f8f0:	sub	w0, w22, #0x67
  40f8f4:	and	w0, w0, #0xff
  40f8f8:	cmp	w0, #0xd
  40f8fc:	b.ls	40f854 <__fxstatat@plt+0xccb4>  // b.plast
  40f900:	cmp	w22, #0x6d
  40f904:	mov	w6, #0x1                   	// #1
  40f908:	mov	w1, #0x400                 	// #1024
  40f90c:	b.hi	40f8ac <__fxstatat@plt+0xcd0c>  // b.pmore
  40f910:	sub	w22, w22, #0x59
  40f914:	cmp	w22, #0x14
  40f918:	b.hi	40f7cc <__fxstatat@plt+0xcc2c>  // b.pmore
  40f91c:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x5e44>
  40f920:	add	x0, x0, #0x904
  40f924:	ldrb	w0, [x0, w22, uxtw]
  40f928:	adr	x2, 40f934 <__fxstatat@plt+0xcd94>
  40f92c:	add	x0, x2, w0, sxtb #2
  40f930:	br	x0
  40f934:	ldrb	w0, [x24, #2]
  40f938:	mov	w6, #0x3                   	// #3
  40f93c:	cmp	w0, #0x42
  40f940:	csinc	w6, w6, wzr, eq  // eq = none
  40f944:	mov	w1, #0x400                 	// #1024
  40f948:	b	40f8a4 <__fxstatat@plt+0xcd04>
  40f94c:	mov	w6, #0x1                   	// #1
  40f950:	b	40f944 <__fxstatat@plt+0xcda4>
  40f954:	mov	w6, #0x2                   	// #2
  40f958:	mov	w1, #0x3e8                 	// #1000
  40f95c:	b	40f8a4 <__fxstatat@plt+0xcd04>
  40f960:	ldr	x0, [sp, #88]
  40f964:	cmp	xzr, x0, lsr #55
  40f968:	b.ne	40f97c <__fxstatat@plt+0xcddc>  // b.any
  40f96c:	lsl	x0, x0, #9
  40f970:	str	x0, [sp, #88]
  40f974:	mov	w0, #0x0                   	// #0
  40f978:	b	40f988 <__fxstatat@plt+0xcde8>
  40f97c:	mov	x0, #0xffffffffffffffff    	// #-1
  40f980:	str	x0, [sp, #88]
  40f984:	mov	w0, #0x1                   	// #1
  40f988:	orr	w19, w19, w0
  40f98c:	ldr	x0, [x20]
  40f990:	add	x1, x0, w6, sxtw
  40f994:	str	x1, [x20]
  40f998:	ldrb	w0, [x0, w6, sxtw]
  40f99c:	cbz	w0, 40f9a4 <__fxstatat@plt+0xce04>
  40f9a0:	orr	w19, w19, #0x2
  40f9a4:	ldr	x0, [sp, #88]
  40f9a8:	b	40f7f4 <__fxstatat@plt+0xcc54>
  40f9ac:	ldr	x0, [sp, #88]
  40f9b0:	cmp	xzr, x0, lsr #54
  40f9b4:	b.ne	40f97c <__fxstatat@plt+0xcddc>  // b.any
  40f9b8:	lsl	x0, x0, #10
  40f9bc:	b	40f970 <__fxstatat@plt+0xcdd0>
  40f9c0:	mov	w2, #0x6                   	// #6
  40f9c4:	add	x0, sp, #0x58
  40f9c8:	bl	40f678 <__fxstatat@plt+0xcad8>
  40f9cc:	b	40f988 <__fxstatat@plt+0xcde8>
  40f9d0:	mov	w2, #0x3                   	// #3
  40f9d4:	b	40f9c4 <__fxstatat@plt+0xce24>
  40f9d8:	mov	w2, #0x1                   	// #1
  40f9dc:	b	40f9c4 <__fxstatat@plt+0xce24>
  40f9e0:	mov	w2, #0x2                   	// #2
  40f9e4:	b	40f9c4 <__fxstatat@plt+0xce24>
  40f9e8:	mov	w2, #0x5                   	// #5
  40f9ec:	b	40f9c4 <__fxstatat@plt+0xce24>
  40f9f0:	mov	w2, #0x4                   	// #4
  40f9f4:	b	40f9c4 <__fxstatat@plt+0xce24>
  40f9f8:	mov	w2, #0x8                   	// #8
  40f9fc:	b	40f9c4 <__fxstatat@plt+0xce24>
  40fa00:	mov	w2, #0x7                   	// #7
  40fa04:	b	40f9c4 <__fxstatat@plt+0xce24>
  40fa08:	stp	x29, x30, [sp, #-64]!
  40fa0c:	mov	w6, w1
  40fa10:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  40fa14:	mov	x29, sp
  40fa18:	stp	x21, x22, [sp, #32]
  40fa1c:	sub	w0, w0, #0x1
  40fa20:	ldr	w22, [x1, #1352]
  40fa24:	stp	x19, x20, [sp, #16]
  40fa28:	cmp	w0, #0x3
  40fa2c:	b.hi	40fa8c <__fxstatat@plt+0xceec>  // b.pmore
  40fa30:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x5e44>
  40fa34:	add	x1, x1, #0x988
  40fa38:	adrp	x19, 416000 <_obstack_memory_used@@Base+0x5e44>
  40fa3c:	mov	x20, x4
  40fa40:	add	x19, x19, #0x922
  40fa44:	ldr	x1, [x1, w0, uxtw #3]
  40fa48:	sxtw	x0, w6
  40fa4c:	tbz	w6, #31, 40fa90 <__fxstatat@plt+0xcef0>
  40fa50:	sub	x19, x19, x0
  40fa54:	add	x21, sp, #0x38
  40fa58:	and	w2, w2, #0xff
  40fa5c:	strb	w2, [sp, #56]
  40fa60:	strb	wzr, [sp, #57]
  40fa64:	mov	w2, #0x5                   	// #5
  40fa68:	mov	x0, #0x0                   	// #0
  40fa6c:	bl	402ac0 <dcgettext@plt>
  40fa70:	mov	x2, x0
  40fa74:	mov	x5, x20
  40fa78:	mov	x4, x21
  40fa7c:	mov	x3, x19
  40fa80:	mov	w0, w22
  40fa84:	mov	w1, #0x0                   	// #0
  40fa88:	bl	4025b0 <error@plt>
  40fa8c:	bl	4028b0 <abort@plt>
  40fa90:	lsl	x0, x0, #5
  40fa94:	ldr	x21, [x3, x0]
  40fa98:	b	40fa64 <__fxstatat@plt+0xcec4>
  40fa9c:	sxtw	x1, w1
  40faa0:	mov	x4, x0
  40faa4:	mov	w0, #0x0                   	// #0
  40faa8:	sub	w2, w2, #0x1
  40faac:	cmn	w2, #0x1
  40fab0:	b.ne	40fab8 <__fxstatat@plt+0xcf18>  // b.any
  40fab4:	ret
  40fab8:	ldr	x3, [x4]
  40fabc:	umulh	x5, x3, x1
  40fac0:	cbnz	x5, 40fad4 <__fxstatat@plt+0xcf34>
  40fac4:	mul	x3, x3, x1
  40fac8:	orr	w0, w0, w5
  40facc:	str	x3, [x4]
  40fad0:	b	40faa8 <__fxstatat@plt+0xcf08>
  40fad4:	mov	x3, #0xffffffffffffffff    	// #-1
  40fad8:	mov	w5, #0x1                   	// #1
  40fadc:	b	40fac8 <__fxstatat@plt+0xcf28>
  40fae0:	stp	x29, x30, [sp, #-96]!
  40fae4:	cmp	w2, #0x24
  40fae8:	mov	x29, sp
  40faec:	stp	x19, x20, [sp, #16]
  40faf0:	stp	x21, x22, [sp, #32]
  40faf4:	stp	x23, x24, [sp, #48]
  40faf8:	str	x25, [sp, #64]
  40fafc:	b.ls	40fb20 <__fxstatat@plt+0xcf80>  // b.plast
  40fb00:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x5e44>
  40fb04:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x5e44>
  40fb08:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x5e44>
  40fb0c:	add	x3, x3, #0x9e9
  40fb10:	add	x1, x1, #0x8a4
  40fb14:	add	x0, x0, #0x8b2
  40fb18:	mov	w2, #0x54                  	// #84
  40fb1c:	bl	402b20 <__assert_fail@plt>
  40fb20:	mov	x19, x0
  40fb24:	mov	x20, x1
  40fb28:	mov	w24, w2
  40fb2c:	mov	x21, x3
  40fb30:	mov	x23, x4
  40fb34:	cbnz	x1, 40fb3c <__fxstatat@plt+0xcf9c>
  40fb38:	add	x20, sp, #0x50
  40fb3c:	bl	402b30 <__errno_location@plt>
  40fb40:	str	wzr, [x0]
  40fb44:	mov	x22, x0
  40fb48:	ldrb	w25, [x19]
  40fb4c:	bl	402970 <__ctype_b_loc@plt>
  40fb50:	ldr	x2, [x0]
  40fb54:	mov	x0, x19
  40fb58:	ubfiz	x1, x25, #1, #8
  40fb5c:	ldrh	w1, [x2, x1]
  40fb60:	tbnz	w1, #13, 40fb8c <__fxstatat@plt+0xcfec>
  40fb64:	cmp	w25, #0x2d
  40fb68:	b.ne	40fb94 <__fxstatat@plt+0xcff4>  // b.any
  40fb6c:	mov	w19, #0x4                   	// #4
  40fb70:	mov	w0, w19
  40fb74:	ldp	x19, x20, [sp, #16]
  40fb78:	ldp	x21, x22, [sp, #32]
  40fb7c:	ldp	x23, x24, [sp, #48]
  40fb80:	ldr	x25, [sp, #64]
  40fb84:	ldp	x29, x30, [sp], #96
  40fb88:	ret
  40fb8c:	ldrb	w25, [x0, #1]!
  40fb90:	b	40fb58 <__fxstatat@plt+0xcfb8>
  40fb94:	mov	w2, w24
  40fb98:	mov	x1, x20
  40fb9c:	mov	x0, x19
  40fba0:	bl	4028a0 <strtoumax@plt>
  40fba4:	ldr	x24, [x20]
  40fba8:	str	x0, [sp, #88]
  40fbac:	cmp	x24, x19
  40fbb0:	b.ne	40fc00 <__fxstatat@plt+0xd060>  // b.any
  40fbb4:	cbz	x23, 40fb6c <__fxstatat@plt+0xcfcc>
  40fbb8:	ldrb	w1, [x19]
  40fbbc:	cbz	w1, 40fb6c <__fxstatat@plt+0xcfcc>
  40fbc0:	mov	x0, x23
  40fbc4:	bl	4029d0 <strchr@plt>
  40fbc8:	cbz	x0, 40fb6c <__fxstatat@plt+0xcfcc>
  40fbcc:	mov	x0, #0x1                   	// #1
  40fbd0:	mov	w19, #0x0                   	// #0
  40fbd4:	str	x0, [sp, #88]
  40fbd8:	ldrb	w22, [x24]
  40fbdc:	cbz	w22, 40fdc8 <__fxstatat@plt+0xd228>
  40fbe0:	mov	w1, w22
  40fbe4:	mov	x0, x23
  40fbe8:	bl	4029d0 <strchr@plt>
  40fbec:	cbnz	x0, 40fc28 <__fxstatat@plt+0xd088>
  40fbf0:	ldr	x0, [sp, #88]
  40fbf4:	orr	w19, w19, #0x2
  40fbf8:	str	x0, [x21]
  40fbfc:	b	40fb70 <__fxstatat@plt+0xcfd0>
  40fc00:	ldr	w1, [x22]
  40fc04:	cbz	w1, 40fc20 <__fxstatat@plt+0xd080>
  40fc08:	cmp	w1, #0x22
  40fc0c:	b.ne	40fb6c <__fxstatat@plt+0xcfcc>  // b.any
  40fc10:	mov	w19, #0x1                   	// #1
  40fc14:	cbnz	x23, 40fbd8 <__fxstatat@plt+0xd038>
  40fc18:	str	x0, [x21]
  40fc1c:	b	40fb70 <__fxstatat@plt+0xcfd0>
  40fc20:	mov	w19, #0x0                   	// #0
  40fc24:	b	40fc14 <__fxstatat@plt+0xd074>
  40fc28:	cmp	w22, #0x5a
  40fc2c:	b.hi	40fd14 <__fxstatat@plt+0xd174>  // b.pmore
  40fc30:	cmp	w22, #0x44
  40fc34:	b.hi	40fcf0 <__fxstatat@plt+0xd150>  // b.pmore
  40fc38:	mov	w6, #0x1                   	// #1
  40fc3c:	mov	w1, #0x400                 	// #1024
  40fc40:	cmp	w22, #0x58
  40fc44:	b.hi	40fd34 <__fxstatat@plt+0xd194>  // b.pmore
  40fc48:	sub	w22, w22, #0x42
  40fc4c:	and	w0, w22, #0xff
  40fc50:	cmp	w0, #0x12
  40fc54:	b.hi	40fbf0 <__fxstatat@plt+0xd050>  // b.pmore
  40fc58:	cmp	w22, #0x12
  40fc5c:	b.hi	40fbf0 <__fxstatat@plt+0xd050>  // b.pmore
  40fc60:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x5e44>
  40fc64:	add	x0, x0, #0x9a8
  40fc68:	ldrb	w0, [x0, w22, uxtw]
  40fc6c:	adr	x2, 40fc78 <__fxstatat@plt+0xd0d8>
  40fc70:	add	x0, x2, w0, sxtb #2
  40fc74:	br	x0
  40fc78:	mov	x1, #0x1                   	// #1
  40fc7c:	lsl	x0, x1, x0
  40fc80:	mov	x1, #0x2051                	// #8273
  40fc84:	tst	x0, x1
  40fc88:	b.eq	40fd24 <__fxstatat@plt+0xd184>  // b.none
  40fc8c:	mov	x0, x23
  40fc90:	mov	w1, #0x30                  	// #48
  40fc94:	bl	4029d0 <strchr@plt>
  40fc98:	cbz	x0, 40fd70 <__fxstatat@plt+0xd1d0>
  40fc9c:	ldrb	w0, [x24, #1]
  40fca0:	cmp	w0, #0x44
  40fca4:	b.eq	40fd78 <__fxstatat@plt+0xd1d8>  // b.none
  40fca8:	cmp	w0, #0x69
  40fcac:	b.eq	40fd58 <__fxstatat@plt+0xd1b8>  // b.none
  40fcb0:	cmp	w0, #0x42
  40fcb4:	mov	w6, #0x2                   	// #2
  40fcb8:	mov	w1, #0x400                 	// #1024
  40fcbc:	mov	w0, #0x3e8                 	// #1000
  40fcc0:	csinc	w6, w6, wzr, eq  // eq = none
  40fcc4:	csel	w1, w1, w0, ne  // ne = any
  40fcc8:	cmp	w22, #0x6d
  40fccc:	b.ls	40fc40 <__fxstatat@plt+0xd0a0>  // b.plast
  40fcd0:	cmp	w22, #0x74
  40fcd4:	b.eq	40fe14 <__fxstatat@plt+0xd274>  // b.none
  40fcd8:	cmp	w22, #0x77
  40fcdc:	b.ne	40fbf0 <__fxstatat@plt+0xd050>  // b.any
  40fce0:	ldr	x0, [sp, #88]
  40fce4:	tbnz	x0, #63, 40fda0 <__fxstatat@plt+0xd200>
  40fce8:	lsl	x0, x0, #1
  40fcec:	b	40fd94 <__fxstatat@plt+0xd1f4>
  40fcf0:	sub	w1, w22, #0x45
  40fcf4:	cmp	w1, #0x15
  40fcf8:	b.hi	40fd70 <__fxstatat@plt+0xd1d0>  // b.pmore
  40fcfc:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x5e44>
  40fd00:	add	x0, x0, #0x9bc
  40fd04:	ldrb	w0, [x0, w1, uxtw]
  40fd08:	adr	x1, 40fd14 <__fxstatat@plt+0xd174>
  40fd0c:	add	x0, x1, w0, sxtb #2
  40fd10:	br	x0
  40fd14:	sub	w0, w22, #0x67
  40fd18:	and	w0, w0, #0xff
  40fd1c:	cmp	w0, #0xd
  40fd20:	b.ls	40fc78 <__fxstatat@plt+0xd0d8>  // b.plast
  40fd24:	cmp	w22, #0x6d
  40fd28:	mov	w6, #0x1                   	// #1
  40fd2c:	mov	w1, #0x400                 	// #1024
  40fd30:	b.hi	40fcd0 <__fxstatat@plt+0xd130>  // b.pmore
  40fd34:	sub	w22, w22, #0x59
  40fd38:	cmp	w22, #0x14
  40fd3c:	b.hi	40fbf0 <__fxstatat@plt+0xd050>  // b.pmore
  40fd40:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x5e44>
  40fd44:	add	x0, x0, #0x9d4
  40fd48:	ldrb	w0, [x0, w22, uxtw]
  40fd4c:	adr	x2, 40fd58 <__fxstatat@plt+0xd1b8>
  40fd50:	add	x0, x2, w0, sxtb #2
  40fd54:	br	x0
  40fd58:	ldrb	w0, [x24, #2]
  40fd5c:	mov	w6, #0x3                   	// #3
  40fd60:	cmp	w0, #0x42
  40fd64:	csinc	w6, w6, wzr, eq  // eq = none
  40fd68:	mov	w1, #0x400                 	// #1024
  40fd6c:	b	40fcc8 <__fxstatat@plt+0xd128>
  40fd70:	mov	w6, #0x1                   	// #1
  40fd74:	b	40fd68 <__fxstatat@plt+0xd1c8>
  40fd78:	mov	w6, #0x2                   	// #2
  40fd7c:	mov	w1, #0x3e8                 	// #1000
  40fd80:	b	40fcc8 <__fxstatat@plt+0xd128>
  40fd84:	ldr	x0, [sp, #88]
  40fd88:	cmp	xzr, x0, lsr #55
  40fd8c:	b.ne	40fda0 <__fxstatat@plt+0xd200>  // b.any
  40fd90:	lsl	x0, x0, #9
  40fd94:	str	x0, [sp, #88]
  40fd98:	mov	w0, #0x0                   	// #0
  40fd9c:	b	40fdac <__fxstatat@plt+0xd20c>
  40fda0:	mov	x0, #0xffffffffffffffff    	// #-1
  40fda4:	str	x0, [sp, #88]
  40fda8:	mov	w0, #0x1                   	// #1
  40fdac:	orr	w19, w19, w0
  40fdb0:	ldr	x0, [x20]
  40fdb4:	add	x1, x0, w6, sxtw
  40fdb8:	str	x1, [x20]
  40fdbc:	ldrb	w0, [x0, w6, sxtw]
  40fdc0:	cbz	w0, 40fdc8 <__fxstatat@plt+0xd228>
  40fdc4:	orr	w19, w19, #0x2
  40fdc8:	ldr	x0, [sp, #88]
  40fdcc:	b	40fc18 <__fxstatat@plt+0xd078>
  40fdd0:	ldr	x0, [sp, #88]
  40fdd4:	cmp	xzr, x0, lsr #54
  40fdd8:	b.ne	40fda0 <__fxstatat@plt+0xd200>  // b.any
  40fddc:	lsl	x0, x0, #10
  40fde0:	b	40fd94 <__fxstatat@plt+0xd1f4>
  40fde4:	mov	w2, #0x6                   	// #6
  40fde8:	add	x0, sp, #0x58
  40fdec:	bl	40fa9c <__fxstatat@plt+0xcefc>
  40fdf0:	b	40fdac <__fxstatat@plt+0xd20c>
  40fdf4:	mov	w2, #0x3                   	// #3
  40fdf8:	b	40fde8 <__fxstatat@plt+0xd248>
  40fdfc:	mov	w2, #0x1                   	// #1
  40fe00:	b	40fde8 <__fxstatat@plt+0xd248>
  40fe04:	mov	w2, #0x2                   	// #2
  40fe08:	b	40fde8 <__fxstatat@plt+0xd248>
  40fe0c:	mov	w2, #0x5                   	// #5
  40fe10:	b	40fde8 <__fxstatat@plt+0xd248>
  40fe14:	mov	w2, #0x4                   	// #4
  40fe18:	b	40fde8 <__fxstatat@plt+0xd248>
  40fe1c:	mov	w2, #0x8                   	// #8
  40fe20:	b	40fde8 <__fxstatat@plt+0xd248>
  40fe24:	mov	w2, #0x7                   	// #7
  40fe28:	b	40fde8 <__fxstatat@plt+0xd248>
  40fe2c:	stp	x29, x30, [sp, #-64]!
  40fe30:	mov	x29, sp
  40fe34:	stp	x19, x20, [sp, #16]
  40fe38:	stp	x21, x22, [sp, #32]
  40fe3c:	mov	x21, x1
  40fe40:	mov	x22, x2
  40fe44:	cbnz	x0, 40fe9c <__fxstatat@plt+0xd2fc>
  40fe48:	add	x19, sp, #0x3c
  40fe4c:	mov	x2, x22
  40fe50:	mov	x1, x21
  40fe54:	mov	x0, x19
  40fe58:	bl	4024c0 <mbrtowc@plt>
  40fe5c:	cmp	x22, #0x0
  40fe60:	mov	x20, x0
  40fe64:	ccmn	x0, #0x3, #0x0, ne  // ne = any
  40fe68:	b.ls	40fe88 <__fxstatat@plt+0xd2e8>  // b.plast
  40fe6c:	mov	w0, #0x0                   	// #0
  40fe70:	bl	40a29c <__fxstatat@plt+0x76fc>
  40fe74:	tst	w0, #0xff
  40fe78:	b.ne	40fe88 <__fxstatat@plt+0xd2e8>  // b.any
  40fe7c:	ldrb	w0, [x21]
  40fe80:	mov	x20, #0x1                   	// #1
  40fe84:	str	w0, [x19]
  40fe88:	mov	x0, x20
  40fe8c:	ldp	x19, x20, [sp, #16]
  40fe90:	ldp	x21, x22, [sp, #32]
  40fe94:	ldp	x29, x30, [sp], #64
  40fe98:	ret
  40fe9c:	mov	x19, x0
  40fea0:	b	40fe4c <__fxstatat@plt+0xd2ac>
  40fea4:	stp	x29, x30, [sp, #-32]!
  40fea8:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  40feac:	mov	w2, #0x5                   	// #5
  40feb0:	mov	x29, sp
  40feb4:	str	x19, [sp, #16]
  40feb8:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x5e44>
  40febc:	ldr	x19, [x0, #1464]
  40fec0:	add	x1, x1, #0x893
  40fec4:	mov	x0, #0x0                   	// #0
  40fec8:	bl	402ac0 <dcgettext@plt>
  40fecc:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x5e44>
  40fed0:	mov	x3, x0
  40fed4:	add	x2, x2, #0x578
  40fed8:	mov	x0, x19
  40fedc:	mov	w1, #0x1                   	// #1
  40fee0:	bl	402930 <__fprintf_chk@plt>
  40fee4:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  40fee8:	ldr	w0, [x0, #1352]
  40feec:	bl	402580 <exit@plt>
  40fef0:	mov	x2, x0
  40fef4:	mov	x0, x1
  40fef8:	ldrb	w4, [x2, #80]
  40fefc:	ldr	x3, [x2, #56]
  40ff00:	tbz	w4, #0, 40ff10 <__fxstatat@plt+0xd370>
  40ff04:	ldr	x0, [x2, #72]
  40ff08:	mov	x16, x3
  40ff0c:	br	x16
  40ff10:	mov	x16, x3
  40ff14:	br	x16
  40ff18:	mov	x2, x0
  40ff1c:	mov	x0, x1
  40ff20:	ldrb	w4, [x2, #80]
  40ff24:	ldr	x3, [x2, #64]
  40ff28:	tbz	w4, #0, 40ff38 <__fxstatat@plt+0xd398>
  40ff2c:	ldr	x0, [x2, #72]
  40ff30:	mov	x16, x3
  40ff34:	br	x16
  40ff38:	mov	x16, x3
  40ff3c:	br	x16
  40ff40:	stp	x29, x30, [sp, #-48]!
  40ff44:	cmp	x2, #0x0
  40ff48:	mov	x29, sp
  40ff4c:	stp	x19, x20, [sp, #16]
  40ff50:	mov	x20, x2
  40ff54:	mov	x19, x0
  40ff58:	mov	x2, #0x10                  	// #16
  40ff5c:	csel	x20, x20, x2, ne  // ne = any
  40ff60:	cmp	x1, #0x0
  40ff64:	str	x21, [sp, #32]
  40ff68:	mov	x2, #0xfe0                 	// #4064
  40ff6c:	sub	x21, x20, #0x1
  40ff70:	csel	x1, x1, x2, ne  // ne = any
  40ff74:	str	x1, [x0]
  40ff78:	str	x21, [x0, #48]
  40ff7c:	bl	40fef0 <__fxstatat@plt+0xd350>
  40ff80:	str	x0, [x19, #8]
  40ff84:	cbnz	x0, 40ff94 <__fxstatat@plt+0xd3f4>
  40ff88:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  40ff8c:	ldr	x0, [x0, #1448]
  40ff90:	blr	x0
  40ff94:	add	x2, x0, #0x10
  40ff98:	neg	x20, x20
  40ff9c:	ldr	x1, [x19]
  40ffa0:	add	x2, x2, x21
  40ffa4:	and	x20, x2, x20
  40ffa8:	ldr	x21, [sp, #32]
  40ffac:	stp	x20, x20, [x19, #16]
  40ffb0:	add	x1, x0, x1
  40ffb4:	str	x1, [x0]
  40ffb8:	str	x1, [x19, #32]
  40ffbc:	str	xzr, [x0, #8]
  40ffc0:	ldrb	w0, [x19, #80]
  40ffc4:	and	w0, w0, #0xfffffff9
  40ffc8:	strb	w0, [x19, #80]
  40ffcc:	mov	w0, #0x1                   	// #1
  40ffd0:	ldp	x19, x20, [sp, #16]
  40ffd4:	ldp	x29, x30, [sp], #48
  40ffd8:	ret

000000000040ffdc <_obstack_begin@@Base>:
  40ffdc:	stp	x3, x4, [x0, #56]
  40ffe0:	ldrb	w3, [x0, #80]
  40ffe4:	and	w3, w3, #0xfffffffe
  40ffe8:	strb	w3, [x0, #80]
  40ffec:	b	40ff40 <__fxstatat@plt+0xd3a0>

000000000040fff0 <_obstack_begin_1@@Base>:
  40fff0:	stp	x3, x4, [x0, #56]
  40fff4:	ldrb	w3, [x0, #80]
  40fff8:	str	x5, [x0, #72]
  40fffc:	orr	w3, w3, #0x1
  410000:	strb	w3, [x0, #80]
  410004:	b	40ff40 <__fxstatat@plt+0xd3a0>

0000000000410008 <_obstack_newchunk@@Base>:
  410008:	stp	x29, x30, [sp, #-64]!
  41000c:	mov	x29, sp
  410010:	stp	x19, x20, [sp, #16]
  410014:	ldp	x2, x20, [x0, #16]
  410018:	stp	x21, x22, [sp, #32]
  41001c:	sub	x21, x20, x2
  410020:	ldr	x20, [x0, #48]
  410024:	adds	x1, x21, x1
  410028:	cset	x4, cs  // cs = hs, nlast
  41002c:	adds	x1, x20, x1
  410030:	lsr	x20, x21, #3
  410034:	add	x20, x20, #0x64
  410038:	cset	x3, cs  // cs = hs, nlast
  41003c:	add	x2, x20, x1
  410040:	ldr	x20, [x0]
  410044:	str	x23, [sp, #48]
  410048:	ldr	x23, [x0, #8]
  41004c:	cmp	x20, x1
  410050:	csel	x20, x20, x1, cs  // cs = hs, nlast
  410054:	cmp	x20, x2
  410058:	csel	x20, x20, x2, cs  // cs = hs, nlast
  41005c:	cmp	x4, #0x0
  410060:	ccmp	x3, #0x0, #0x0, eq  // eq = none
  410064:	b.eq	410074 <_obstack_newchunk@@Base+0x6c>  // b.none
  410068:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  41006c:	ldr	x0, [x0, #1448]
  410070:	blr	x0
  410074:	mov	x19, x0
  410078:	mov	x1, x20
  41007c:	bl	40fef0 <__fxstatat@plt+0xd350>
  410080:	mov	x22, x0
  410084:	cbz	x0, 410068 <_obstack_newchunk@@Base+0x60>
  410088:	mov	x2, x0
  41008c:	str	x0, [x19, #8]
  410090:	ldr	x1, [x19, #16]
  410094:	str	x23, [x0, #8]
  410098:	add	x20, x0, x20
  41009c:	str	x20, [x19, #32]
  4100a0:	str	x20, [x2], #16
  4100a4:	ldr	x20, [x19, #48]
  4100a8:	add	x2, x2, x20
  4100ac:	bic	x20, x2, x20
  4100b0:	mov	x2, x21
  4100b4:	mov	x0, x20
  4100b8:	bl	4024d0 <memcpy@plt>
  4100bc:	ldrb	w0, [x19, #80]
  4100c0:	tbnz	w0, #1, 4100f4 <_obstack_newchunk@@Base+0xec>
  4100c4:	ldr	x0, [x19, #48]
  4100c8:	add	x1, x23, #0x10
  4100cc:	add	x1, x1, x0
  4100d0:	bic	x0, x1, x0
  4100d4:	ldr	x1, [x19, #16]
  4100d8:	cmp	x1, x0
  4100dc:	b.ne	4100f4 <_obstack_newchunk@@Base+0xec>  // b.any
  4100e0:	ldr	x0, [x23, #8]
  4100e4:	str	x0, [x22, #8]
  4100e8:	mov	x1, x23
  4100ec:	mov	x0, x19
  4100f0:	bl	40ff18 <__fxstatat@plt+0xd378>
  4100f4:	ldrb	w0, [x19, #80]
  4100f8:	ldr	x23, [sp, #48]
  4100fc:	and	w0, w0, #0xfffffffd
  410100:	str	x20, [x19, #16]
  410104:	add	x20, x20, x21
  410108:	strb	w0, [x19, #80]
  41010c:	ldp	x21, x22, [sp, #32]
  410110:	str	x20, [x19, #24]
  410114:	ldp	x19, x20, [sp, #16]
  410118:	ldp	x29, x30, [sp], #64
  41011c:	ret

0000000000410120 <_obstack_allocated_p@@Base>:
  410120:	ldr	x0, [x0, #8]
  410124:	cbz	x0, 41013c <_obstack_allocated_p@@Base+0x1c>
  410128:	cmp	x0, x1
  41012c:	b.cs	410120 <_obstack_allocated_p@@Base>  // b.hs, b.nlast
  410130:	ldr	x2, [x0]
  410134:	cmp	x2, x1
  410138:	b.cc	410120 <_obstack_allocated_p@@Base>  // b.lo, b.ul, b.last
  41013c:	cmp	x0, #0x0
  410140:	cset	w0, ne  // ne = any
  410144:	ret

0000000000410148 <_obstack_free@@Base>:
  410148:	stp	x29, x30, [sp, #-48]!
  41014c:	mov	x29, sp
  410150:	stp	x19, x20, [sp, #16]
  410154:	mov	x19, x0
  410158:	mov	x20, x1
  41015c:	ldr	x1, [x0, #8]
  410160:	str	x21, [sp, #32]
  410164:	cbz	x1, 4101b4 <_obstack_free@@Base+0x6c>
  410168:	cmp	x1, x20
  41016c:	b.cs	410194 <_obstack_free@@Base+0x4c>  // b.hs, b.nlast
  410170:	ldr	x0, [x1]
  410174:	cmp	x0, x20
  410178:	b.cc	410194 <_obstack_free@@Base+0x4c>  // b.lo, b.ul, b.last
  41017c:	stp	x1, x20, [x19, #8]
  410180:	stp	x20, x0, [x19, #24]
  410184:	ldp	x19, x20, [sp, #16]
  410188:	ldr	x21, [sp, #32]
  41018c:	ldp	x29, x30, [sp], #48
  410190:	ret
  410194:	mov	x0, x19
  410198:	ldr	x21, [x1, #8]
  41019c:	bl	40ff18 <__fxstatat@plt+0xd378>
  4101a0:	ldrb	w0, [x19, #80]
  4101a4:	mov	x1, x21
  4101a8:	orr	w0, w0, #0x2
  4101ac:	strb	w0, [x19, #80]
  4101b0:	b	410164 <_obstack_free@@Base+0x1c>
  4101b4:	cbz	x20, 410184 <_obstack_free@@Base+0x3c>
  4101b8:	bl	4028b0 <abort@plt>

00000000004101bc <_obstack_memory_used@@Base>:
  4101bc:	ldr	x1, [x0, #8]
  4101c0:	mov	x0, #0x0                   	// #0
  4101c4:	cbnz	x1, 4101cc <_obstack_memory_used@@Base+0x10>
  4101c8:	ret
  4101cc:	ldr	x2, [x1]
  4101d0:	sub	x2, x2, x1
  4101d4:	add	x0, x0, x2
  4101d8:	ldr	x1, [x1, #8]
  4101dc:	b	4101c4 <_obstack_memory_used@@Base+0x8>
  4101e0:	mov	x1, x0
  4101e4:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x2e44>
  4101e8:	add	x0, x2, #0xff9
  4101ec:	cbz	x1, 4101f8 <_obstack_memory_used@@Base+0x3c>
  4101f0:	mov	w2, #0x1                   	// #1
  4101f4:	b	4025e0 <setenv@plt>
  4101f8:	b	402a40 <unsetenv@plt>
  4101fc:	stp	x29, x30, [sp, #-48]!
  410200:	mov	x29, sp
  410204:	stp	x19, x20, [sp, #16]
  410208:	str	x21, [sp, #32]
  41020c:	mov	x21, x0
  410210:	cbz	x0, 410280 <_obstack_memory_used@@Base+0xc4>
  410214:	bl	402540 <strlen@plt>
  410218:	add	x20, x0, #0x1
  41021c:	cmp	x20, #0x76
  410220:	mov	x0, #0x76                  	// #118
  410224:	csel	x0, x20, x0, cs  // cs = hs, nlast
  410228:	add	x0, x0, #0x11
  41022c:	and	x0, x0, #0xfffffffffffffff8
  410230:	bl	402730 <malloc@plt>
  410234:	mov	x19, x0
  410238:	cbz	x0, 41026c <_obstack_memory_used@@Base+0xb0>
  41023c:	cmp	x21, #0x0
  410240:	str	xzr, [x19]
  410244:	cset	w0, ne  // ne = any
  410248:	strb	w0, [x19, #8]
  41024c:	strb	wzr, [x19, #9]
  410250:	cbz	x21, 41026c <_obstack_memory_used@@Base+0xb0>
  410254:	add	x3, x19, #0x9
  410258:	mov	x2, x20
  41025c:	mov	x1, x21
  410260:	mov	x0, x3
  410264:	bl	4024d0 <memcpy@plt>
  410268:	strb	wzr, [x0, x20]
  41026c:	mov	x0, x19
  410270:	ldp	x19, x20, [sp, #16]
  410274:	ldr	x21, [sp, #32]
  410278:	ldp	x29, x30, [sp], #48
  41027c:	ret
  410280:	mov	x20, #0x0                   	// #0
  410284:	b	41021c <_obstack_memory_used@@Base+0x60>
  410288:	stp	x29, x30, [sp, #-64]!
  41028c:	mov	x29, sp
  410290:	stp	x19, x20, [sp, #16]
  410294:	ldr	x20, [x1, #48]
  410298:	stp	x21, x22, [sp, #32]
  41029c:	stp	x23, x24, [sp, #48]
  4102a0:	cbz	x20, 410378 <_obstack_memory_used@@Base+0x1bc>
  4102a4:	mov	x21, x0
  4102a8:	mov	x23, x1
  4102ac:	cmp	x1, x20
  4102b0:	b.hi	4102c0 <_obstack_memory_used@@Base+0x104>  // b.pmore
  4102b4:	add	x0, x1, #0x38
  4102b8:	cmp	x20, x0
  4102bc:	b.cc	410378 <_obstack_memory_used@@Base+0x1bc>  // b.lo, b.ul, b.last
  4102c0:	ldrb	w0, [x20]
  4102c4:	cbz	w0, 4103ac <_obstack_memory_used@@Base+0x1f0>
  4102c8:	add	x19, x21, #0x9
  4102cc:	mov	x1, x20
  4102d0:	mov	x0, x19
  4102d4:	bl	402950 <strcmp@plt>
  4102d8:	cbz	w0, 410374 <_obstack_memory_used@@Base+0x1b8>
  4102dc:	ldrb	w0, [x19]
  4102e0:	cbnz	w0, 410328 <_obstack_memory_used@@Base+0x16c>
  4102e4:	add	x22, x21, #0x9
  4102e8:	cmp	x22, x19
  4102ec:	b.eq	410320 <_obstack_memory_used@@Base+0x164>  // b.none
  4102f0:	mov	x0, x20
  4102f4:	sub	x22, x19, x22
  4102f8:	bl	402540 <strlen@plt>
  4102fc:	add	x24, x0, #0x1
  410300:	mvn	x0, x22
  410304:	cmp	x0, x24
  410308:	b.cs	410354 <_obstack_memory_used@@Base+0x198>  // b.hs, b.nlast
  41030c:	bl	402b30 <__errno_location@plt>
  410310:	mov	w1, #0xc                   	// #12
  410314:	str	w1, [x0]
  410318:	mov	w0, #0x0                   	// #0
  41031c:	b	41037c <_obstack_memory_used@@Base+0x1c0>
  410320:	ldrb	w0, [x21, #8]
  410324:	cbz	w0, 4102f0 <_obstack_memory_used@@Base+0x134>
  410328:	mov	x0, x19
  41032c:	bl	402540 <strlen@plt>
  410330:	add	x0, x0, #0x1
  410334:	add	x19, x19, x0
  410338:	ldrb	w0, [x19]
  41033c:	cbnz	w0, 4102cc <_obstack_memory_used@@Base+0x110>
  410340:	ldr	x0, [x21]
  410344:	cbz	x0, 4102cc <_obstack_memory_used@@Base+0x110>
  410348:	add	x19, x0, #0x9
  41034c:	mov	x21, x0
  410350:	b	4102cc <_obstack_memory_used@@Base+0x110>
  410354:	add	x22, x24, x22
  410358:	cmp	x22, #0x76
  41035c:	b.hi	410390 <_obstack_memory_used@@Base+0x1d4>  // b.pmore
  410360:	mov	x2, x24
  410364:	mov	x1, x20
  410368:	mov	x0, x19
  41036c:	bl	4024d0 <memcpy@plt>
  410370:	strb	wzr, [x19, x24]
  410374:	str	x19, [x23, #48]
  410378:	mov	w0, #0x1                   	// #1
  41037c:	ldp	x19, x20, [sp, #16]
  410380:	ldp	x21, x22, [sp, #32]
  410384:	ldp	x23, x24, [sp, #48]
  410388:	ldp	x29, x30, [sp], #64
  41038c:	ret
  410390:	mov	x0, x20
  410394:	bl	4101fc <_obstack_memory_used@@Base+0x40>
  410398:	str	x0, [x21]
  41039c:	cbz	x0, 410318 <_obstack_memory_used@@Base+0x15c>
  4103a0:	add	x19, x0, #0x9
  4103a4:	strb	wzr, [x0, #8]
  4103a8:	b	410374 <_obstack_memory_used@@Base+0x1b8>
  4103ac:	adrp	x19, 411000 <_obstack_memory_used@@Base+0xe44>
  4103b0:	add	x19, x19, #0xdf0
  4103b4:	b	410374 <_obstack_memory_used@@Base+0x1b8>
  4103b8:	cmp	x0, #0x1
  4103bc:	b.ne	4103c4 <_obstack_memory_used@@Base+0x208>  // b.any
  4103c0:	ret
  4103c4:	cbnz	x0, 4103cc <_obstack_memory_used@@Base+0x210>
  4103c8:	ret
  4103cc:	stp	x29, x30, [sp, #-32]!
  4103d0:	mov	x29, sp
  4103d4:	str	x19, [sp, #16]
  4103d8:	ldr	x19, [x0]
  4103dc:	bl	402990 <free@plt>
  4103e0:	mov	x0, x19
  4103e4:	cbnz	x19, 4103d8 <_obstack_memory_used@@Base+0x21c>
  4103e8:	ldr	x19, [sp, #16]
  4103ec:	ldp	x29, x30, [sp], #32
  4103f0:	ret
  4103f4:	stp	x29, x30, [sp, #-48]!
  4103f8:	mov	x29, sp
  4103fc:	stp	x19, x20, [sp, #16]
  410400:	mov	x19, x0
  410404:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x2e44>
  410408:	add	x0, x0, #0xff9
  41040c:	str	x21, [sp, #32]
  410410:	bl	402b40 <getenv@plt>
  410414:	mov	x20, x0
  410418:	ldrb	w0, [x19, #8]
  41041c:	cbz	x20, 410430 <_obstack_memory_used@@Base+0x274>
  410420:	cbz	w0, 41043c <_obstack_memory_used@@Base+0x280>
  410424:	mov	x1, x20
  410428:	add	x0, x19, #0x9
  41042c:	bl	402950 <strcmp@plt>
  410430:	cmp	w0, #0x0
  410434:	cset	w0, eq  // eq = none
  410438:	b	410440 <_obstack_memory_used@@Base+0x284>
  41043c:	mov	w0, #0x0                   	// #0
  410440:	cbnz	w0, 4104a4 <_obstack_memory_used@@Base+0x2e8>
  410444:	mov	x0, x20
  410448:	bl	4101fc <_obstack_memory_used@@Base+0x40>
  41044c:	mov	x20, x0
  410450:	cbz	x0, 410488 <_obstack_memory_used@@Base+0x2cc>
  410454:	ldrb	w1, [x19, #8]
  410458:	add	x0, x19, #0x9
  41045c:	cmp	w1, #0x0
  410460:	csel	x0, x0, xzr, ne  // ne = any
  410464:	bl	4101e0 <_obstack_memory_used@@Base+0x24>
  410468:	cbz	w0, 41049c <_obstack_memory_used@@Base+0x2e0>
  41046c:	bl	402b30 <__errno_location@plt>
  410470:	mov	x19, x0
  410474:	mov	x0, x20
  410478:	mov	x20, #0x0                   	// #0
  41047c:	ldr	w21, [x19]
  410480:	bl	4103b8 <_obstack_memory_used@@Base+0x1fc>
  410484:	str	w21, [x19]
  410488:	mov	x0, x20
  41048c:	ldp	x19, x20, [sp, #16]
  410490:	ldr	x21, [sp, #32]
  410494:	ldp	x29, x30, [sp], #48
  410498:	ret
  41049c:	bl	402750 <tzset@plt>
  4104a0:	b	410488 <_obstack_memory_used@@Base+0x2cc>
  4104a4:	mov	x20, #0x1                   	// #1
  4104a8:	b	410488 <_obstack_memory_used@@Base+0x2cc>
  4104ac:	stp	x29, x30, [sp, #-48]!
  4104b0:	mov	x29, sp
  4104b4:	stp	x19, x20, [sp, #16]
  4104b8:	mov	x20, x0
  4104bc:	stp	x21, x22, [sp, #32]
  4104c0:	bl	402b30 <__errno_location@plt>
  4104c4:	ldrb	w1, [x20, #8]
  4104c8:	ldr	w22, [x0]
  4104cc:	mov	x19, x0
  4104d0:	cmp	w1, #0x0
  4104d4:	add	x0, x20, #0x9
  4104d8:	csel	x0, x0, xzr, ne  // ne = any
  4104dc:	bl	4101e0 <_obstack_memory_used@@Base+0x24>
  4104e0:	cbz	w0, 41050c <_obstack_memory_used@@Base+0x350>
  4104e4:	ldr	w22, [x19]
  4104e8:	mov	w21, #0x0                   	// #0
  4104ec:	mov	x0, x20
  4104f0:	bl	4103b8 <_obstack_memory_used@@Base+0x1fc>
  4104f4:	str	w22, [x19]
  4104f8:	mov	w0, w21
  4104fc:	ldp	x19, x20, [sp, #16]
  410500:	ldp	x21, x22, [sp, #32]
  410504:	ldp	x29, x30, [sp], #48
  410508:	ret
  41050c:	mov	w21, #0x1                   	// #1
  410510:	bl	402750 <tzset@plt>
  410514:	b	4104ec <_obstack_memory_used@@Base+0x330>
  410518:	stp	x29, x30, [sp, #-48]!
  41051c:	mov	x29, sp
  410520:	stp	x19, x20, [sp, #16]
  410524:	mov	x19, x2
  410528:	stp	x21, x22, [sp, #32]
  41052c:	mov	x22, x1
  410530:	cbnz	x0, 41054c <_obstack_memory_used@@Base+0x390>
  410534:	mov	x0, x22
  410538:	mov	x1, x2
  41053c:	ldp	x19, x20, [sp, #16]
  410540:	ldp	x21, x22, [sp, #32]
  410544:	ldp	x29, x30, [sp], #48
  410548:	b	4027e0 <gmtime_r@plt>
  41054c:	mov	x21, x0
  410550:	bl	4103f4 <_obstack_memory_used@@Base+0x238>
  410554:	mov	x20, x0
  410558:	cbz	x0, 410598 <_obstack_memory_used@@Base+0x3dc>
  41055c:	mov	x1, x19
  410560:	mov	x0, x22
  410564:	bl	4025d0 <localtime_r@plt>
  410568:	cbz	x0, 4105b0 <_obstack_memory_used@@Base+0x3f4>
  41056c:	mov	x0, x21
  410570:	mov	x1, x19
  410574:	bl	410288 <_obstack_memory_used@@Base+0xcc>
  410578:	and	w21, w0, #0xff
  41057c:	cmp	x20, #0x1
  410580:	b.eq	410594 <_obstack_memory_used@@Base+0x3d8>  // b.none
  410584:	mov	x0, x20
  410588:	bl	4104ac <_obstack_memory_used@@Base+0x2f0>
  41058c:	tst	w0, #0xff
  410590:	b.eq	410598 <_obstack_memory_used@@Base+0x3dc>  // b.none
  410594:	cbnz	w21, 41059c <_obstack_memory_used@@Base+0x3e0>
  410598:	mov	x19, #0x0                   	// #0
  41059c:	mov	x0, x19
  4105a0:	ldp	x19, x20, [sp, #16]
  4105a4:	ldp	x21, x22, [sp, #32]
  4105a8:	ldp	x29, x30, [sp], #48
  4105ac:	ret
  4105b0:	cmp	x20, #0x1
  4105b4:	b.eq	410598 <_obstack_memory_used@@Base+0x3dc>  // b.none
  4105b8:	mov	w21, #0x0                   	// #0
  4105bc:	b	410584 <_obstack_memory_used@@Base+0x3c8>
  4105c0:	stp	x29, x30, [sp, #-112]!
  4105c4:	mov	x29, sp
  4105c8:	stp	x19, x20, [sp, #16]
  4105cc:	mov	x19, x1
  4105d0:	str	x21, [sp, #32]
  4105d4:	cbnz	x0, 4105f0 <_obstack_memory_used@@Base+0x434>
  4105d8:	mov	x0, x1
  4105dc:	bl	402b70 <timegm@plt>
  4105e0:	ldp	x19, x20, [sp, #16]
  4105e4:	ldr	x21, [sp, #32]
  4105e8:	ldp	x29, x30, [sp], #112
  4105ec:	ret
  4105f0:	mov	x21, x0
  4105f4:	bl	4103f4 <_obstack_memory_used@@Base+0x238>
  4105f8:	mov	x20, x0
  4105fc:	cbz	x0, 4106e8 <_obstack_memory_used@@Base+0x52c>
  410600:	mov	x0, x19
  410604:	bl	402890 <mktime@plt>
  410608:	str	x0, [sp, #48]
  41060c:	cmn	x0, #0x1
  410610:	b.eq	410634 <_obstack_memory_used@@Base+0x478>  // b.none
  410614:	mov	x1, x19
  410618:	mov	x0, x21
  41061c:	bl	410288 <_obstack_memory_used@@Base+0xcc>
  410620:	tst	w0, #0xff
  410624:	b.ne	4106c8 <_obstack_memory_used@@Base+0x50c>  // b.any
  410628:	mov	x0, #0xffffffffffffffff    	// #-1
  41062c:	str	x0, [sp, #48]
  410630:	b	4106c8 <_obstack_memory_used@@Base+0x50c>
  410634:	add	x1, sp, #0x38
  410638:	add	x0, sp, #0x30
  41063c:	bl	4025d0 <localtime_r@plt>
  410640:	cbz	x0, 4106c8 <_obstack_memory_used@@Base+0x50c>
  410644:	ldr	w1, [x19, #32]
  410648:	ldr	w0, [sp, #88]
  41064c:	cmp	w1, #0x0
  410650:	cset	w3, eq  // eq = none
  410654:	cmp	w0, #0x0
  410658:	cset	w2, eq  // eq = none
  41065c:	cmp	w3, w2
  410660:	b.eq	410670 <_obstack_memory_used@@Base+0x4b4>  // b.none
  410664:	cmp	w1, #0x0
  410668:	ccmp	w0, #0x0, #0x1, ge  // ge = tcont
  41066c:	b.ge	4106c8 <_obstack_memory_used@@Base+0x50c>  // b.tcont
  410670:	ldp	w3, w0, [sp, #68]
  410674:	ldr	w1, [x19, #16]
  410678:	ldr	w2, [sp, #76]
  41067c:	eor	w1, w1, w0
  410680:	ldr	w0, [x19, #20]
  410684:	eor	w0, w0, w2
  410688:	ldr	w2, [sp, #64]
  41068c:	orr	w1, w1, w0
  410690:	ldr	w0, [x19, #8]
  410694:	eor	w0, w0, w2
  410698:	ldr	w2, [x19, #12]
  41069c:	eor	w2, w2, w3
  4106a0:	orr	w0, w0, w2
  4106a4:	ldr	w2, [x19]
  4106a8:	orr	w1, w1, w0
  4106ac:	ldp	w0, w3, [sp, #56]
  4106b0:	eor	w2, w2, w0
  4106b4:	ldr	w0, [x19, #4]
  4106b8:	eor	w0, w0, w3
  4106bc:	orr	w2, w2, w0
  4106c0:	orr	w1, w1, w2
  4106c4:	cbz	w1, 410614 <_obstack_memory_used@@Base+0x458>
  4106c8:	cmp	x20, #0x1
  4106cc:	b.ne	4106d8 <_obstack_memory_used@@Base+0x51c>  // b.any
  4106d0:	ldr	x0, [sp, #48]
  4106d4:	b	4105e0 <_obstack_memory_used@@Base+0x424>
  4106d8:	mov	x0, x20
  4106dc:	bl	4104ac <_obstack_memory_used@@Base+0x2f0>
  4106e0:	tst	w0, #0xff
  4106e4:	b.ne	4106d0 <_obstack_memory_used@@Base+0x514>  // b.any
  4106e8:	mov	x0, #0xffffffffffffffff    	// #-1
  4106ec:	b	4105e0 <_obstack_memory_used@@Base+0x424>
  4106f0:	cmp	w0, #0x26
  4106f4:	b.eq	410718 <_obstack_memory_used@@Base+0x55c>  // b.none
  4106f8:	b.gt	410710 <_obstack_memory_used@@Base+0x554>
  4106fc:	cmp	w0, #0x10
  410700:	b.eq	410718 <_obstack_memory_used@@Base+0x55c>  // b.none
  410704:	cmp	w0, #0x16
  410708:	cset	w0, ne  // ne = any
  41070c:	ret
  410710:	cmp	w0, #0x5f
  410714:	b	410708 <_obstack_memory_used@@Base+0x54c>
  410718:	mov	w0, #0x0                   	// #0
  41071c:	b	41070c <_obstack_memory_used@@Base+0x550>
  410720:	stp	x29, x30, [sp, #-48]!
  410724:	mov	x29, sp
  410728:	stp	x19, x20, [sp, #16]
  41072c:	mov	x19, x0
  410730:	str	x21, [sp, #32]
  410734:	bl	402680 <__fpending@plt>
  410738:	mov	x20, x0
  41073c:	mov	x0, x19
  410740:	bl	402610 <ferror_unlocked@plt>
  410744:	mov	w21, w0
  410748:	mov	x0, x19
  41074c:	bl	410800 <_obstack_memory_used@@Base+0x644>
  410750:	cbnz	w21, 41077c <_obstack_memory_used@@Base+0x5c0>
  410754:	cbz	w0, 41076c <_obstack_memory_used@@Base+0x5b0>
  410758:	cbnz	x20, 410788 <_obstack_memory_used@@Base+0x5cc>
  41075c:	bl	402b30 <__errno_location@plt>
  410760:	ldr	w0, [x0]
  410764:	cmp	w0, #0x9
  410768:	csetm	w0, ne  // ne = any
  41076c:	ldp	x19, x20, [sp, #16]
  410770:	ldr	x21, [sp, #32]
  410774:	ldp	x29, x30, [sp], #48
  410778:	ret
  41077c:	cbnz	w0, 410788 <_obstack_memory_used@@Base+0x5cc>
  410780:	bl	402b30 <__errno_location@plt>
  410784:	str	wzr, [x0]
  410788:	mov	w0, #0xffffffff            	// #-1
  41078c:	b	41076c <_obstack_memory_used@@Base+0x5b0>
  410790:	stp	x29, x30, [sp, #-16]!
  410794:	mov	x29, sp
  410798:	bl	409a50 <__fxstatat@plt+0x6eb0>
  41079c:	cbnz	x0, 4107a4 <_obstack_memory_used@@Base+0x5e8>
  4107a0:	bl	40f440 <__fxstatat@plt+0xc8a0>
  4107a4:	ldp	x29, x30, [sp], #16
  4107a8:	ret
  4107ac:	mov	x2, #0x0                   	// #0
  4107b0:	ldrb	w3, [x0]
  4107b4:	cbnz	w3, 4107c4 <_obstack_memory_used@@Base+0x608>
  4107b8:	udiv	x0, x2, x1
  4107bc:	msub	x0, x0, x1, x2
  4107c0:	ret
  4107c4:	add	x0, x0, #0x1
  4107c8:	ror	x2, x2, #55
  4107cc:	add	x2, x2, w3, uxtb
  4107d0:	b	4107b0 <_obstack_memory_used@@Base+0x5f4>
  4107d4:	stp	x29, x30, [sp, #-16]!
  4107d8:	mov	w0, #0xe                   	// #14
  4107dc:	mov	x29, sp
  4107e0:	bl	402720 <nl_langinfo@plt>
  4107e4:	cbz	x0, 4107f0 <_obstack_memory_used@@Base+0x634>
  4107e8:	ldrb	w1, [x0]
  4107ec:	cbnz	w1, 4107f8 <_obstack_memory_used@@Base+0x63c>
  4107f0:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x5e44>
  4107f4:	add	x0, x0, #0x9f4
  4107f8:	ldp	x29, x30, [sp], #16
  4107fc:	ret
  410800:	stp	x29, x30, [sp, #-32]!
  410804:	mov	x29, sp
  410808:	stp	x19, x20, [sp, #16]
  41080c:	mov	x19, x0
  410810:	bl	4026c0 <fileno@plt>
  410814:	tbz	w0, #31, 410828 <_obstack_memory_used@@Base+0x66c>
  410818:	mov	x0, x19
  41081c:	ldp	x19, x20, [sp, #16]
  410820:	ldp	x29, x30, [sp], #32
  410824:	b	402710 <fclose@plt>
  410828:	mov	x0, x19
  41082c:	bl	402af0 <__freading@plt>
  410830:	cbnz	w0, 410868 <_obstack_memory_used@@Base+0x6ac>
  410834:	mov	x0, x19
  410838:	bl	410894 <_obstack_memory_used@@Base+0x6d8>
  41083c:	cbnz	w0, 410888 <_obstack_memory_used@@Base+0x6cc>
  410840:	mov	w20, #0x0                   	// #0
  410844:	mov	x0, x19
  410848:	bl	402710 <fclose@plt>
  41084c:	cbz	w20, 41085c <_obstack_memory_used@@Base+0x6a0>
  410850:	bl	402b30 <__errno_location@plt>
  410854:	str	w20, [x0]
  410858:	mov	w0, #0xffffffff            	// #-1
  41085c:	ldp	x19, x20, [sp, #16]
  410860:	ldp	x29, x30, [sp], #32
  410864:	ret
  410868:	mov	x0, x19
  41086c:	bl	4026c0 <fileno@plt>
  410870:	mov	w2, #0x1                   	// #1
  410874:	mov	x1, #0x0                   	// #0
  410878:	bl	402670 <lseek@plt>
  41087c:	cmn	x0, #0x1
  410880:	b.ne	410834 <_obstack_memory_used@@Base+0x678>  // b.any
  410884:	b	410840 <_obstack_memory_used@@Base+0x684>
  410888:	bl	402b30 <__errno_location@plt>
  41088c:	ldr	w20, [x0]
  410890:	b	410844 <_obstack_memory_used@@Base+0x688>
  410894:	stp	x29, x30, [sp, #-32]!
  410898:	mov	x29, sp
  41089c:	str	x19, [sp, #16]
  4108a0:	mov	x19, x0
  4108a4:	cbnz	x0, 4108b8 <_obstack_memory_used@@Base+0x6fc>
  4108a8:	mov	x0, x19
  4108ac:	ldr	x19, [sp, #16]
  4108b0:	ldp	x29, x30, [sp], #32
  4108b4:	b	402a00 <fflush@plt>
  4108b8:	bl	402af0 <__freading@plt>
  4108bc:	cbz	w0, 4108a8 <_obstack_memory_used@@Base+0x6ec>
  4108c0:	ldr	w0, [x19]
  4108c4:	tbz	w0, #8, 4108a8 <_obstack_memory_used@@Base+0x6ec>
  4108c8:	mov	x0, x19
  4108cc:	mov	w2, #0x1                   	// #1
  4108d0:	mov	x1, #0x0                   	// #0
  4108d4:	bl	4108dc <_obstack_memory_used@@Base+0x720>
  4108d8:	b	4108a8 <_obstack_memory_used@@Base+0x6ec>
  4108dc:	stp	x29, x30, [sp, #-48]!
  4108e0:	mov	x29, sp
  4108e4:	stp	x19, x20, [sp, #16]
  4108e8:	mov	x20, x1
  4108ec:	mov	x19, x0
  4108f0:	ldr	x1, [x0, #8]
  4108f4:	str	x21, [sp, #32]
  4108f8:	mov	w21, w2
  4108fc:	ldr	x2, [x0, #16]
  410900:	cmp	x2, x1
  410904:	b.ne	410958 <_obstack_memory_used@@Base+0x79c>  // b.any
  410908:	ldp	x1, x2, [x0, #32]
  41090c:	cmp	x2, x1
  410910:	b.ne	410958 <_obstack_memory_used@@Base+0x79c>  // b.any
  410914:	ldr	x1, [x0, #72]
  410918:	cbnz	x1, 410958 <_obstack_memory_used@@Base+0x79c>
  41091c:	bl	4026c0 <fileno@plt>
  410920:	mov	w2, w21
  410924:	mov	x1, x20
  410928:	bl	402670 <lseek@plt>
  41092c:	cmn	x0, #0x1
  410930:	b.eq	410948 <_obstack_memory_used@@Base+0x78c>  // b.none
  410934:	ldr	w1, [x19]
  410938:	str	x0, [x19, #144]
  41093c:	mov	w0, #0x0                   	// #0
  410940:	and	w1, w1, #0xffffffef
  410944:	str	w1, [x19]
  410948:	ldp	x19, x20, [sp, #16]
  41094c:	ldr	x21, [sp, #32]
  410950:	ldp	x29, x30, [sp], #48
  410954:	ret
  410958:	mov	w2, w21
  41095c:	mov	x1, x20
  410960:	mov	x0, x19
  410964:	ldp	x19, x20, [sp, #16]
  410968:	ldr	x21, [sp, #32]
  41096c:	ldp	x29, x30, [sp], #48
  410970:	b	402980 <fseeko@plt>
  410974:	stp	x29, x30, [sp, #-32]!
  410978:	mov	x29, sp
  41097c:	str	q0, [sp, #16]
  410980:	ldp	x1, x10, [sp, #16]
  410984:	str	q1, [sp, #16]
  410988:	ldp	x8, x9, [sp, #16]
  41098c:	mrs	x6, fpcr
  410990:	ubfx	x4, x10, #0, #48
  410994:	ubfx	x11, x10, #48, #15
  410998:	lsr	x10, x10, #63
  41099c:	and	w5, w10, #0xff
  4109a0:	cbz	w11, 4109d4 <_obstack_memory_used@@Base+0x818>
  4109a4:	mov	w2, #0x7fff                	// #32767
  4109a8:	cmp	w11, w2
  4109ac:	b.eq	410a34 <_obstack_memory_used@@Base+0x878>  // b.none
  4109b0:	and	x11, x11, #0xffff
  4109b4:	extr	x2, x4, x1, #61
  4109b8:	mov	x12, #0xffffffffffffc001    	// #-16383
  4109bc:	orr	x2, x2, #0x8000000000000
  4109c0:	lsl	x1, x1, #3
  4109c4:	add	x11, x11, x12
  4109c8:	mov	x14, #0x0                   	// #0
  4109cc:	mov	w0, #0x0                   	// #0
  4109d0:	b	410a50 <_obstack_memory_used@@Base+0x894>
  4109d4:	orr	x2, x4, x1
  4109d8:	cbz	x2, 410ac8 <_obstack_memory_used@@Base+0x90c>
  4109dc:	clz	x2, x1
  4109e0:	cmp	x4, #0x0
  4109e4:	add	x2, x2, #0x40
  4109e8:	clz	x11, x4
  4109ec:	csel	x0, x2, x11, eq  // eq = none
  4109f0:	sub	x2, x0, #0xf
  4109f4:	cmp	x2, #0x3c
  4109f8:	b.gt	410a24 <_obstack_memory_used@@Base+0x868>
  4109fc:	add	w7, w2, #0x3
  410a00:	mov	w3, #0x3d                  	// #61
  410a04:	sub	w2, w3, w2
  410a08:	lsl	x4, x4, x7
  410a0c:	lsr	x2, x1, x2
  410a10:	orr	x2, x2, x4
  410a14:	lsl	x1, x1, x7
  410a18:	mov	x11, #0xffffffffffffc011    	// #-16367
  410a1c:	sub	x11, x11, x0
  410a20:	b	4109c8 <_obstack_memory_used@@Base+0x80c>
  410a24:	sub	w2, w2, #0x3d
  410a28:	lsl	x2, x1, x2
  410a2c:	mov	x1, #0x0                   	// #0
  410a30:	b	410a18 <_obstack_memory_used@@Base+0x85c>
  410a34:	orr	x2, x4, x1
  410a38:	cbz	x2, 410ad8 <_obstack_memory_used@@Base+0x91c>
  410a3c:	lsr	x0, x4, #47
  410a40:	mov	x2, x4
  410a44:	eor	w0, w0, #0x1
  410a48:	mov	x11, #0x7fff                	// #32767
  410a4c:	mov	x14, #0x3                   	// #3
  410a50:	lsr	x13, x9, #63
  410a54:	ubfx	x7, x9, #0, #48
  410a58:	ubfx	x4, x9, #48, #15
  410a5c:	and	w3, w13, #0xff
  410a60:	cbz	w4, 410ae8 <_obstack_memory_used@@Base+0x92c>
  410a64:	mov	w9, #0x7fff                	// #32767
  410a68:	cmp	w4, w9
  410a6c:	b.eq	410b48 <_obstack_memory_used@@Base+0x98c>  // b.none
  410a70:	and	x4, x4, #0xffff
  410a74:	extr	x7, x7, x8, #61
  410a78:	mov	x9, #0xffffffffffffc001    	// #-16383
  410a7c:	orr	x7, x7, #0x8000000000000
  410a80:	lsl	x8, x8, #3
  410a84:	add	x4, x4, x9
  410a88:	mov	x12, #0x0                   	// #0
  410a8c:	eor	w5, w5, w3
  410a90:	orr	x3, x12, x14, lsl #2
  410a94:	sub	x3, x3, #0x1
  410a98:	and	x5, x5, #0xff
  410a9c:	sub	x9, x11, x4
  410aa0:	cmp	x3, #0xe
  410aa4:	b.hi	410b8c <_obstack_memory_used@@Base+0x9d0>  // b.pmore
  410aa8:	cmp	w3, #0xe
  410aac:	b.hi	410b8c <_obstack_memory_used@@Base+0x9d0>  // b.pmore
  410ab0:	adrp	x4, 416000 <_obstack_memory_used@@Base+0x5e44>
  410ab4:	add	x4, x4, #0x9fc
  410ab8:	ldrh	w3, [x4, w3, uxtw #1]
  410abc:	adr	x4, 410ac8 <_obstack_memory_used@@Base+0x90c>
  410ac0:	add	x3, x4, w3, sxth #2
  410ac4:	br	x3
  410ac8:	mov	x1, #0x0                   	// #0
  410acc:	mov	x11, #0x0                   	// #0
  410ad0:	mov	x14, #0x1                   	// #1
  410ad4:	b	4109cc <_obstack_memory_used@@Base+0x810>
  410ad8:	mov	x1, #0x0                   	// #0
  410adc:	mov	x11, #0x7fff                	// #32767
  410ae0:	mov	x14, #0x2                   	// #2
  410ae4:	b	4109cc <_obstack_memory_used@@Base+0x810>
  410ae8:	orr	x4, x7, x8
  410aec:	cbz	x4, 410b64 <_obstack_memory_used@@Base+0x9a8>
  410af0:	clz	x12, x8
  410af4:	cmp	x7, #0x0
  410af8:	add	x12, x12, #0x40
  410afc:	clz	x9, x7
  410b00:	csel	x9, x12, x9, eq  // eq = none
  410b04:	sub	x12, x9, #0xf
  410b08:	cmp	x12, #0x3c
  410b0c:	b.gt	410b38 <_obstack_memory_used@@Base+0x97c>
  410b10:	add	w16, w12, #0x3
  410b14:	mov	w15, #0x3d                  	// #61
  410b18:	sub	w12, w15, w12
  410b1c:	lsl	x7, x7, x16
  410b20:	lsr	x12, x8, x12
  410b24:	orr	x7, x12, x7
  410b28:	lsl	x8, x8, x16
  410b2c:	mov	x4, #0xffffffffffffc011    	// #-16367
  410b30:	sub	x4, x4, x9
  410b34:	b	410a88 <_obstack_memory_used@@Base+0x8cc>
  410b38:	sub	w7, w12, #0x3d
  410b3c:	lsl	x7, x8, x7
  410b40:	mov	x8, #0x0                   	// #0
  410b44:	b	410b2c <_obstack_memory_used@@Base+0x970>
  410b48:	orr	x4, x7, x8
  410b4c:	cbz	x4, 410b78 <_obstack_memory_used@@Base+0x9bc>
  410b50:	tst	x7, #0x800000000000
  410b54:	mov	x4, #0x7fff                	// #32767
  410b58:	csinc	w0, w0, wzr, ne  // ne = any
  410b5c:	mov	x12, #0x3                   	// #3
  410b60:	b	410a8c <_obstack_memory_used@@Base+0x8d0>
  410b64:	mov	x7, #0x0                   	// #0
  410b68:	mov	x8, #0x0                   	// #0
  410b6c:	mov	x4, #0x0                   	// #0
  410b70:	mov	x12, #0x1                   	// #1
  410b74:	b	410a8c <_obstack_memory_used@@Base+0x8d0>
  410b78:	mov	x7, #0x0                   	// #0
  410b7c:	mov	x8, #0x0                   	// #0
  410b80:	mov	x4, #0x7fff                	// #32767
  410b84:	mov	x12, #0x2                   	// #2
  410b88:	b	410a8c <_obstack_memory_used@@Base+0x8d0>
  410b8c:	cmp	x7, x2
  410b90:	b.cc	410b9c <_obstack_memory_used@@Base+0x9e0>  // b.lo, b.ul, b.last
  410b94:	ccmp	x8, x1, #0x2, eq  // eq = none
  410b98:	b.hi	410e34 <_obstack_memory_used@@Base+0xc78>  // b.pmore
  410b9c:	lsl	x14, x1, #63
  410ba0:	extr	x1, x2, x1, #1
  410ba4:	lsr	x2, x2, #1
  410ba8:	extr	x3, x7, x8, #52
  410bac:	ubfx	x7, x7, #20, #32
  410bb0:	and	x13, x3, #0xffffffff
  410bb4:	lsl	x8, x8, #12
  410bb8:	udiv	x10, x2, x7
  410bbc:	msub	x2, x10, x7, x2
  410bc0:	mul	x11, x13, x10
  410bc4:	extr	x2, x2, x1, #32
  410bc8:	cmp	x11, x2
  410bcc:	b.ls	410e40 <_obstack_memory_used@@Base+0xc84>  // b.plast
  410bd0:	sub	x4, x10, #0x1
  410bd4:	adds	x2, x3, x2
  410bd8:	b.cs	410bec <_obstack_memory_used@@Base+0xa30>  // b.hs, b.nlast
  410bdc:	cmp	x11, x2
  410be0:	b.ls	410bec <_obstack_memory_used@@Base+0xa30>  // b.plast
  410be4:	sub	x4, x10, #0x2
  410be8:	add	x2, x2, x3
  410bec:	sub	x2, x2, x11
  410bf0:	and	x1, x1, #0xffffffff
  410bf4:	udiv	x10, x2, x7
  410bf8:	msub	x2, x10, x7, x2
  410bfc:	mul	x11, x13, x10
  410c00:	orr	x1, x1, x2, lsl #32
  410c04:	cmp	x11, x1
  410c08:	b.ls	410e48 <_obstack_memory_used@@Base+0xc8c>  // b.plast
  410c0c:	sub	x2, x10, #0x1
  410c10:	adds	x1, x3, x1
  410c14:	b.cs	410c28 <_obstack_memory_used@@Base+0xa6c>  // b.hs, b.nlast
  410c18:	cmp	x11, x1
  410c1c:	b.ls	410c28 <_obstack_memory_used@@Base+0xa6c>  // b.plast
  410c20:	sub	x2, x10, #0x2
  410c24:	add	x1, x1, x3
  410c28:	orr	x4, x2, x4, lsl #32
  410c2c:	and	x15, x8, #0xffffffff
  410c30:	lsr	x10, x8, #32
  410c34:	sub	x1, x1, x11
  410c38:	lsr	x12, x4, #32
  410c3c:	and	x11, x4, #0xffffffff
  410c40:	mul	x16, x12, x15
  410c44:	mul	x2, x11, x15
  410c48:	madd	x11, x10, x11, x16
  410c4c:	mul	x12, x12, x10
  410c50:	add	x11, x11, x2, lsr #32
  410c54:	cmp	x16, x11
  410c58:	b.ls	410c64 <_obstack_memory_used@@Base+0xaa8>  // b.plast
  410c5c:	mov	x16, #0x100000000           	// #4294967296
  410c60:	add	x12, x12, x16
  410c64:	add	x12, x12, x11, lsr #32
  410c68:	and	x2, x2, #0xffffffff
  410c6c:	add	x11, x2, x11, lsl #32
  410c70:	cmp	x1, x12
  410c74:	b.cc	410c80 <_obstack_memory_used@@Base+0xac4>  // b.lo, b.ul, b.last
  410c78:	ccmp	x14, x11, #0x2, eq  // eq = none
  410c7c:	b.cs	410e50 <_obstack_memory_used@@Base+0xc94>  // b.hs, b.nlast
  410c80:	adds	x16, x14, x8
  410c84:	sub	x2, x4, #0x1
  410c88:	adc	x1, x1, x3
  410c8c:	cset	x17, cs  // cs = hs, nlast
  410c90:	mov	x14, x16
  410c94:	cmp	x3, x1
  410c98:	b.cc	410ca8 <_obstack_memory_used@@Base+0xaec>  // b.lo, b.ul, b.last
  410c9c:	cmp	x17, #0x0
  410ca0:	ccmp	x3, x1, #0x0, eq  // eq = none
  410ca4:	b.ne	410cc4 <_obstack_memory_used@@Base+0xb08>  // b.any
  410ca8:	cmp	x12, x1
  410cac:	b.hi	410cb8 <_obstack_memory_used@@Base+0xafc>  // b.pmore
  410cb0:	ccmp	x11, x16, #0x0, eq  // eq = none
  410cb4:	b.ls	410cc4 <_obstack_memory_used@@Base+0xb08>  // b.plast
  410cb8:	adds	x14, x8, x16
  410cbc:	sub	x2, x4, #0x2
  410cc0:	adc	x1, x1, x3
  410cc4:	subs	x16, x14, x11
  410cc8:	cmp	x14, x11
  410ccc:	sbc	x1, x1, x12
  410cd0:	cmp	x3, x1
  410cd4:	b.eq	410ee4 <_obstack_memory_used@@Base+0xd28>  // b.none
  410cd8:	udiv	x12, x1, x7
  410cdc:	msub	x1, x12, x7, x1
  410ce0:	mul	x4, x13, x12
  410ce4:	extr	x1, x1, x16, #32
  410ce8:	cmp	x4, x1
  410cec:	b.ls	410e58 <_obstack_memory_used@@Base+0xc9c>  // b.plast
  410cf0:	sub	x11, x12, #0x1
  410cf4:	adds	x1, x3, x1
  410cf8:	b.cs	410d0c <_obstack_memory_used@@Base+0xb50>  // b.hs, b.nlast
  410cfc:	cmp	x4, x1
  410d00:	b.ls	410d0c <_obstack_memory_used@@Base+0xb50>  // b.plast
  410d04:	sub	x11, x12, #0x2
  410d08:	add	x1, x1, x3
  410d0c:	sub	x1, x1, x4
  410d10:	and	x16, x16, #0xffffffff
  410d14:	udiv	x12, x1, x7
  410d18:	msub	x4, x12, x7, x1
  410d1c:	mul	x13, x13, x12
  410d20:	orr	x4, x16, x4, lsl #32
  410d24:	cmp	x13, x4
  410d28:	b.ls	410e60 <_obstack_memory_used@@Base+0xca4>  // b.plast
  410d2c:	sub	x1, x12, #0x1
  410d30:	adds	x4, x3, x4
  410d34:	b.cs	410d48 <_obstack_memory_used@@Base+0xb8c>  // b.hs, b.nlast
  410d38:	cmp	x13, x4
  410d3c:	b.ls	410d48 <_obstack_memory_used@@Base+0xb8c>  // b.plast
  410d40:	sub	x1, x12, #0x2
  410d44:	add	x4, x4, x3
  410d48:	orr	x11, x1, x11, lsl #32
  410d4c:	sub	x4, x4, x13
  410d50:	and	x12, x11, #0xffffffff
  410d54:	lsr	x7, x11, #32
  410d58:	mul	x1, x15, x12
  410d5c:	mul	x15, x7, x15
  410d60:	mul	x7, x10, x7
  410d64:	madd	x10, x10, x12, x15
  410d68:	add	x10, x10, x1, lsr #32
  410d6c:	cmp	x15, x10
  410d70:	b.ls	410d7c <_obstack_memory_used@@Base+0xbc0>  // b.plast
  410d74:	mov	x12, #0x100000000           	// #4294967296
  410d78:	add	x7, x7, x12
  410d7c:	add	x7, x7, x10, lsr #32
  410d80:	and	x1, x1, #0xffffffff
  410d84:	add	x10, x1, x10, lsl #32
  410d88:	cmp	x4, x7
  410d8c:	b.cc	410d9c <_obstack_memory_used@@Base+0xbe0>  // b.lo, b.ul, b.last
  410d90:	cmp	x10, #0x0
  410d94:	ccmp	x4, x7, #0x0, ne  // ne = any
  410d98:	b.ne	410e68 <_obstack_memory_used@@Base+0xcac>  // b.any
  410d9c:	adds	x12, x3, x4
  410da0:	sub	x1, x11, #0x1
  410da4:	mov	x4, x12
  410da8:	b.cs	410dd4 <_obstack_memory_used@@Base+0xc18>  // b.hs, b.nlast
  410dac:	cmp	x12, x7
  410db0:	b.cc	410dbc <_obstack_memory_used@@Base+0xc00>  // b.lo, b.ul, b.last
  410db4:	ccmp	x8, x10, #0x2, eq  // eq = none
  410db8:	b.cs	410dd4 <_obstack_memory_used@@Base+0xc18>  // b.hs, b.nlast
  410dbc:	sub	x1, x11, #0x2
  410dc0:	lsl	x11, x8, #1
  410dc4:	cmp	x8, x11
  410dc8:	mov	x8, x11
  410dcc:	cinc	x4, x3, hi  // hi = pmore
  410dd0:	add	x4, x12, x4
  410dd4:	cmp	x4, x7
  410dd8:	mov	x3, x1
  410ddc:	ccmp	x8, x10, #0x0, eq  // eq = none
  410de0:	orr	x1, x1, #0x1
  410de4:	csel	x1, x1, x3, ne  // ne = any
  410de8:	mov	x3, #0x3fff                	// #16383
  410dec:	add	x3, x9, x3
  410df0:	cmp	x3, #0x0
  410df4:	b.le	410fb0 <_obstack_memory_used@@Base+0xdf4>
  410df8:	tst	x1, #0x7
  410dfc:	b.eq	410efc <_obstack_memory_used@@Base+0xd40>  // b.none
  410e00:	and	x4, x6, #0xc00000
  410e04:	orr	w0, w0, #0x10
  410e08:	cmp	x4, #0x400, lsl #12
  410e0c:	b.eq	410eec <_obstack_memory_used@@Base+0xd30>  // b.none
  410e10:	cmp	x4, #0x800, lsl #12
  410e14:	b.eq	410ef8 <_obstack_memory_used@@Base+0xd3c>  // b.none
  410e18:	cbnz	x4, 410efc <_obstack_memory_used@@Base+0xd40>
  410e1c:	and	x4, x1, #0xf
  410e20:	cmp	x4, #0x4
  410e24:	b.eq	410efc <_obstack_memory_used@@Base+0xd40>  // b.none
  410e28:	adds	x1, x1, #0x4
  410e2c:	cinc	x2, x2, cs  // cs = hs, nlast
  410e30:	b	410efc <_obstack_memory_used@@Base+0xd40>
  410e34:	sub	x9, x9, #0x1
  410e38:	mov	x14, #0x0                   	// #0
  410e3c:	b	410ba8 <_obstack_memory_used@@Base+0x9ec>
  410e40:	mov	x4, x10
  410e44:	b	410bec <_obstack_memory_used@@Base+0xa30>
  410e48:	mov	x2, x10
  410e4c:	b	410c28 <_obstack_memory_used@@Base+0xa6c>
  410e50:	mov	x2, x4
  410e54:	b	410cc4 <_obstack_memory_used@@Base+0xb08>
  410e58:	mov	x11, x12
  410e5c:	b	410d0c <_obstack_memory_used@@Base+0xb50>
  410e60:	mov	x1, x12
  410e64:	b	410d48 <_obstack_memory_used@@Base+0xb8c>
  410e68:	mov	x1, x11
  410e6c:	mov	x8, #0x0                   	// #0
  410e70:	b	410dd4 <_obstack_memory_used@@Base+0xc18>
  410e74:	tbz	x2, #47, 410e88 <_obstack_memory_used@@Base+0xccc>
  410e78:	tbnz	x7, #47, 410e88 <_obstack_memory_used@@Base+0xccc>
  410e7c:	mov	x2, x7
  410e80:	mov	x1, x8
  410e84:	mov	x10, x13
  410e88:	orr	x2, x2, #0x800000000000
  410e8c:	mov	x5, x10
  410e90:	mov	x3, #0x7fff                	// #32767
  410e94:	b	410f1c <_obstack_memory_used@@Base+0xd60>
  410e98:	orr	w0, w0, #0x2
  410e9c:	mov	x2, #0x0                   	// #0
  410ea0:	mov	x1, #0x0                   	// #0
  410ea4:	b	410e90 <_obstack_memory_used@@Base+0xcd4>
  410ea8:	mov	x5, x10
  410eac:	mov	x12, x14
  410eb0:	cmp	x12, #0x1
  410eb4:	b.eq	411118 <_obstack_memory_used@@Base+0xf5c>  // b.none
  410eb8:	cbz	x12, 410de8 <_obstack_memory_used@@Base+0xc2c>
  410ebc:	cmp	x12, #0x2
  410ec0:	b.eq	410e9c <_obstack_memory_used@@Base+0xce0>  // b.none
  410ec4:	cmp	x12, #0x3
  410ec8:	b.ne	410de8 <_obstack_memory_used@@Base+0xc2c>  // b.any
  410ecc:	mov	x10, x5
  410ed0:	b	410e88 <_obstack_memory_used@@Base+0xccc>
  410ed4:	mov	x2, x7
  410ed8:	mov	x1, x8
  410edc:	mov	x5, x13
  410ee0:	b	410eb0 <_obstack_memory_used@@Base+0xcf4>
  410ee4:	mov	x1, #0xffffffffffffffff    	// #-1
  410ee8:	b	410de8 <_obstack_memory_used@@Base+0xc2c>
  410eec:	cbnz	x5, 410efc <_obstack_memory_used@@Base+0xd40>
  410ef0:	adds	x1, x1, #0x8
  410ef4:	b	410e2c <_obstack_memory_used@@Base+0xc70>
  410ef8:	cbnz	x5, 410ef0 <_obstack_memory_used@@Base+0xd34>
  410efc:	tbz	x2, #52, 410f08 <_obstack_memory_used@@Base+0xd4c>
  410f00:	and	x2, x2, #0xffefffffffffffff
  410f04:	add	x3, x9, #0x4, lsl #12
  410f08:	mov	x4, #0x7ffe                	// #32766
  410f0c:	cmp	x3, x4
  410f10:	b.gt	410f50 <_obstack_memory_used@@Base+0xd94>
  410f14:	extr	x1, x2, x1, #3
  410f18:	lsr	x2, x2, #3
  410f1c:	and	x3, x3, #0x7fff
  410f20:	mov	x7, #0x0                   	// #0
  410f24:	bfxil	x7, x2, #0, #48
  410f28:	orr	w3, w3, w5, lsl #15
  410f2c:	fmov	d0, x1
  410f30:	bfi	x7, x3, #48, #16
  410f34:	fmov	v0.d[1], x7
  410f38:	cbz	w0, 410f48 <_obstack_memory_used@@Base+0xd8c>
  410f3c:	str	q0, [sp, #16]
  410f40:	bl	411bb8 <_obstack_memory_used@@Base+0x19fc>
  410f44:	ldr	q0, [sp, #16]
  410f48:	ldp	x29, x30, [sp], #32
  410f4c:	ret
  410f50:	and	x1, x6, #0xc00000
  410f54:	cmp	x1, #0x400, lsl #12
  410f58:	b.eq	410f7c <_obstack_memory_used@@Base+0xdc0>  // b.none
  410f5c:	cmp	x1, #0x800, lsl #12
  410f60:	b.eq	410f90 <_obstack_memory_used@@Base+0xdd4>  // b.none
  410f64:	cbnz	x1, 410fa4 <_obstack_memory_used@@Base+0xde8>
  410f68:	mov	x3, #0x7fff                	// #32767
  410f6c:	mov	w2, #0x14                  	// #20
  410f70:	orr	w0, w0, w2
  410f74:	mov	x2, x1
  410f78:	b	410f1c <_obstack_memory_used@@Base+0xd60>
  410f7c:	cmp	x5, #0x0
  410f80:	mov	x2, #0x7fff                	// #32767
  410f84:	csetm	x1, ne  // ne = any
  410f88:	csel	x3, x2, x4, eq  // eq = none
  410f8c:	b	410f6c <_obstack_memory_used@@Base+0xdb0>
  410f90:	cmp	x5, #0x0
  410f94:	mov	x2, #0x7fff                	// #32767
  410f98:	csetm	x1, eq  // eq = none
  410f9c:	csel	x3, x2, x4, ne  // ne = any
  410fa0:	b	410f6c <_obstack_memory_used@@Base+0xdb0>
  410fa4:	mov	x3, x4
  410fa8:	mov	x1, #0xffffffffffffffff    	// #-1
  410fac:	b	410f6c <_obstack_memory_used@@Base+0xdb0>
  410fb0:	mov	x4, #0x1                   	// #1
  410fb4:	sub	x3, x4, x3
  410fb8:	cmp	x3, #0x74
  410fbc:	b.gt	4110a4 <_obstack_memory_used@@Base+0xee8>
  410fc0:	cmp	x3, #0x3f
  410fc4:	b.gt	41102c <_obstack_memory_used@@Base+0xe70>
  410fc8:	mov	w7, #0x40                  	// #64
  410fcc:	sub	w7, w7, w3
  410fd0:	lsr	x8, x1, x3
  410fd4:	lsl	x1, x1, x7
  410fd8:	cmp	x1, #0x0
  410fdc:	lsl	x4, x2, x7
  410fe0:	cset	x1, ne  // ne = any
  410fe4:	orr	x4, x4, x8
  410fe8:	lsr	x2, x2, x3
  410fec:	orr	x1, x4, x1
  410ff0:	tst	x1, #0x7
  410ff4:	b.eq	411070 <_obstack_memory_used@@Base+0xeb4>  // b.none
  410ff8:	and	x3, x6, #0xc00000
  410ffc:	orr	w0, w0, #0x10
  411000:	cmp	x3, #0x400, lsl #12
  411004:	b.eq	411060 <_obstack_memory_used@@Base+0xea4>  // b.none
  411008:	cmp	x3, #0x800, lsl #12
  41100c:	b.eq	41106c <_obstack_memory_used@@Base+0xeb0>  // b.none
  411010:	cbnz	x3, 411070 <_obstack_memory_used@@Base+0xeb4>
  411014:	and	x3, x1, #0xf
  411018:	cmp	x3, #0x4
  41101c:	b.eq	411070 <_obstack_memory_used@@Base+0xeb4>  // b.none
  411020:	adds	x1, x1, #0x4
  411024:	cinc	x2, x2, cs  // cs = hs, nlast
  411028:	b	411070 <_obstack_memory_used@@Base+0xeb4>
  41102c:	sub	w4, w3, #0x40
  411030:	mov	w7, #0x80                  	// #128
  411034:	sub	w7, w7, w3
  411038:	cmp	x3, #0x40
  41103c:	lsr	x4, x2, x4
  411040:	lsl	x2, x2, x7
  411044:	csel	x2, x2, xzr, ne  // ne = any
  411048:	orr	x1, x2, x1
  41104c:	mov	x2, #0x0                   	// #0
  411050:	cmp	x1, #0x0
  411054:	cset	x1, ne  // ne = any
  411058:	orr	x1, x4, x1
  41105c:	b	410ff0 <_obstack_memory_used@@Base+0xe34>
  411060:	cbnz	x5, 411070 <_obstack_memory_used@@Base+0xeb4>
  411064:	adds	x1, x1, #0x8
  411068:	b	411024 <_obstack_memory_used@@Base+0xe68>
  41106c:	cbnz	x5, 411064 <_obstack_memory_used@@Base+0xea8>
  411070:	tbz	x2, #51, 41108c <_obstack_memory_used@@Base+0xed0>
  411074:	orr	w0, w0, #0x10
  411078:	mov	x2, #0x0                   	// #0
  41107c:	mov	x1, #0x0                   	// #0
  411080:	mov	x3, #0x1                   	// #1
  411084:	orr	w0, w0, #0x8
  411088:	b	410f1c <_obstack_memory_used@@Base+0xd60>
  41108c:	mov	x3, #0x0                   	// #0
  411090:	extr	x1, x2, x1, #3
  411094:	lsr	x2, x2, #3
  411098:	tbnz	w0, #4, 411084 <_obstack_memory_used@@Base+0xec8>
  41109c:	tbz	w6, #11, 410f1c <_obstack_memory_used@@Base+0xd60>
  4110a0:	b	411084 <_obstack_memory_used@@Base+0xec8>
  4110a4:	orr	x1, x1, x2
  4110a8:	cbz	x1, 4110d4 <_obstack_memory_used@@Base+0xf18>
  4110ac:	and	x6, x6, #0xc00000
  4110b0:	orr	w0, w0, #0x10
  4110b4:	cmp	x6, #0x400, lsl #12
  4110b8:	b.eq	4110e4 <_obstack_memory_used@@Base+0xf28>  // b.none
  4110bc:	cmp	x6, #0x800, lsl #12
  4110c0:	b.eq	4110f4 <_obstack_memory_used@@Base+0xf38>  // b.none
  4110c4:	cmp	x6, #0x0
  4110c8:	mov	x1, #0x5                   	// #5
  4110cc:	csel	x4, x4, x1, ne  // ne = any
  4110d0:	lsr	x1, x4, #3
  4110d4:	orr	w0, w0, #0x8
  4110d8:	mov	x2, #0x0                   	// #0
  4110dc:	mov	x3, #0x0                   	// #0
  4110e0:	b	410f1c <_obstack_memory_used@@Base+0xd60>
  4110e4:	cmp	x5, #0x0
  4110e8:	mov	x1, #0x9                   	// #9
  4110ec:	csel	x4, x1, x4, eq  // eq = none
  4110f0:	b	4110d0 <_obstack_memory_used@@Base+0xf14>
  4110f4:	cmp	x5, #0x0
  4110f8:	mov	x1, #0x9                   	// #9
  4110fc:	csel	x4, x1, x4, ne  // ne = any
  411100:	b	4110d0 <_obstack_memory_used@@Base+0xf14>
  411104:	mov	x2, #0xffffffffffff        	// #281474976710655
  411108:	mov	x1, #0xffffffffffffffff    	// #-1
  41110c:	mov	w0, #0x1                   	// #1
  411110:	mov	x10, #0x0                   	// #0
  411114:	b	410e88 <_obstack_memory_used@@Base+0xccc>
  411118:	mov	x2, #0x0                   	// #0
  41111c:	mov	x1, #0x0                   	// #0
  411120:	b	4110dc <_obstack_memory_used@@Base+0xf20>
  411124:	stp	x29, x30, [sp, #-32]!
  411128:	mov	x29, sp
  41112c:	str	q0, [sp, #16]
  411130:	ldp	x8, x0, [sp, #16]
  411134:	str	q1, [sp, #16]
  411138:	ldp	x9, x1, [sp, #16]
  41113c:	mrs	x2, fpcr
  411140:	ubfx	x3, x0, #48, #15
  411144:	ubfx	x2, x0, #0, #48
  411148:	ubfx	x7, x1, #0, #48
  41114c:	lsr	x0, x0, #63
  411150:	ubfx	x5, x1, #48, #15
  411154:	lsr	x1, x1, #63
  411158:	mov	x10, #0x7fff                	// #32767
  41115c:	mov	x4, x8
  411160:	and	w0, w0, #0xff
  411164:	mov	x6, x9
  411168:	and	w1, w1, #0xff
  41116c:	cmp	x3, x10
  411170:	b.ne	411188 <_obstack_memory_used@@Base+0xfcc>  // b.any
  411174:	orr	x10, x2, x8
  411178:	cbnz	x10, 4111f4 <_obstack_memory_used@@Base+0x1038>
  41117c:	cmp	x5, x3
  411180:	b.ne	41121c <_obstack_memory_used@@Base+0x1060>  // b.any
  411184:	b	411190 <_obstack_memory_used@@Base+0xfd4>
  411188:	cmp	x5, x10
  41118c:	b.ne	411198 <_obstack_memory_used@@Base+0xfdc>  // b.any
  411190:	orr	x10, x7, x6
  411194:	cbnz	x10, 4111e0 <_obstack_memory_used@@Base+0x1024>
  411198:	cmp	x3, x5
  41119c:	b.ne	41121c <_obstack_memory_used@@Base+0x1060>  // b.any
  4111a0:	cmp	x2, x7
  4111a4:	ccmp	x8, x9, #0x0, eq  // eq = none
  4111a8:	b.ne	41121c <_obstack_memory_used@@Base+0x1060>  // b.any
  4111ac:	cmp	w0, w1
  4111b0:	b.eq	4111d8 <_obstack_memory_used@@Base+0x101c>  // b.none
  4111b4:	cbnz	x3, 41121c <_obstack_memory_used@@Base+0x1060>
  4111b8:	orr	x2, x2, x4
  4111bc:	cmp	x2, #0x0
  4111c0:	cset	w0, ne  // ne = any
  4111c4:	ldp	x29, x30, [sp], #32
  4111c8:	ret
  4111cc:	mov	w0, #0x1                   	// #1
  4111d0:	bl	411bb8 <_obstack_memory_used@@Base+0x19fc>
  4111d4:	b	41121c <_obstack_memory_used@@Base+0x1060>
  4111d8:	mov	w0, #0x0                   	// #0
  4111dc:	b	4111c4 <_obstack_memory_used@@Base+0x1008>
  4111e0:	mov	x0, #0x7fff                	// #32767
  4111e4:	cmp	x3, x0
  4111e8:	b.ne	411214 <_obstack_memory_used@@Base+0x1058>  // b.any
  4111ec:	orr	x4, x2, x4
  4111f0:	cbz	x4, 411214 <_obstack_memory_used@@Base+0x1058>
  4111f4:	tst	x2, #0x800000000000
  4111f8:	b.eq	4111cc <_obstack_memory_used@@Base+0x1010>  // b.none
  4111fc:	mov	x1, #0x7fff                	// #32767
  411200:	mov	w0, #0x1                   	// #1
  411204:	cmp	x5, x1
  411208:	b.ne	4111c4 <_obstack_memory_used@@Base+0x1008>  // b.any
  41120c:	orr	x6, x7, x6
  411210:	cbz	x6, 4111c4 <_obstack_memory_used@@Base+0x1008>
  411214:	tst	x7, #0x800000000000
  411218:	b.eq	4111cc <_obstack_memory_used@@Base+0x1010>  // b.none
  41121c:	mov	w0, #0x1                   	// #1
  411220:	b	4111c4 <_obstack_memory_used@@Base+0x1008>
  411224:	stp	x29, x30, [sp, #-32]!
  411228:	mov	x29, sp
  41122c:	str	q0, [sp, #16]
  411230:	ldp	x8, x1, [sp, #16]
  411234:	str	q1, [sp, #16]
  411238:	ldp	x7, x0, [sp, #16]
  41123c:	mrs	x2, fpcr
  411240:	ubfx	x10, x1, #48, #15
  411244:	lsr	x2, x0, #63
  411248:	ubfx	x4, x1, #0, #48
  41124c:	lsr	x1, x1, #63
  411250:	ubfx	x3, x0, #0, #48
  411254:	ubfx	x9, x0, #48, #15
  411258:	mov	x5, x8
  41125c:	mov	x0, #0x7fff                	// #32767
  411260:	and	w1, w1, #0xff
  411264:	mov	x6, x7
  411268:	and	w2, w2, #0xff
  41126c:	cmp	x10, x0
  411270:	b.ne	41127c <_obstack_memory_used@@Base+0x10c0>  // b.any
  411274:	orr	x11, x4, x8
  411278:	cbnz	x11, 41134c <_obstack_memory_used@@Base+0x1190>
  41127c:	cmp	x9, x0
  411280:	b.ne	41128c <_obstack_memory_used@@Base+0x10d0>  // b.any
  411284:	orr	x0, x3, x6
  411288:	cbnz	x0, 41134c <_obstack_memory_used@@Base+0x1190>
  41128c:	cbnz	x10, 4112cc <_obstack_memory_used@@Base+0x1110>
  411290:	orr	x5, x4, x5
  411294:	cmp	x5, #0x0
  411298:	cset	w5, eq  // eq = none
  41129c:	cbnz	x9, 4112d4 <_obstack_memory_used@@Base+0x1118>
  4112a0:	orr	x6, x3, x6
  4112a4:	cmp	x6, #0x0
  4112a8:	cset	w0, eq  // eq = none
  4112ac:	csel	w6, w5, wzr, eq  // eq = none
  4112b0:	cbnz	w6, 41135c <_obstack_memory_used@@Base+0x11a0>
  4112b4:	and	x2, x2, #0xff
  4112b8:	cbz	w5, 4112dc <_obstack_memory_used@@Base+0x1120>
  4112bc:	cmp	x2, #0x0
  4112c0:	csinv	w0, w5, wzr, ne  // ne = any
  4112c4:	ldp	x29, x30, [sp], #32
  4112c8:	ret
  4112cc:	mov	w5, #0x0                   	// #0
  4112d0:	b	41129c <_obstack_memory_used@@Base+0x10e0>
  4112d4:	mov	w0, #0x0                   	// #0
  4112d8:	b	4112b4 <_obstack_memory_used@@Base+0x10f8>
  4112dc:	and	x1, x1, #0xff
  4112e0:	cbz	w0, 4112f0 <_obstack_memory_used@@Base+0x1134>
  4112e4:	cmp	x1, #0x0
  4112e8:	csinv	w0, w0, wzr, eq  // eq = none
  4112ec:	b	4112c4 <_obstack_memory_used@@Base+0x1108>
  4112f0:	cmp	x1, x2
  4112f4:	b.eq	411308 <_obstack_memory_used@@Base+0x114c>  // b.none
  4112f8:	mov	w0, #0xffffffff            	// #-1
  4112fc:	cmp	x1, #0x0
  411300:	cneg	w0, w0, eq  // eq = none
  411304:	b	4112c4 <_obstack_memory_used@@Base+0x1108>
  411308:	cmp	x10, x9
  41130c:	b.gt	4112f8 <_obstack_memory_used@@Base+0x113c>
  411310:	b.ge	41131c <_obstack_memory_used@@Base+0x1160>  // b.tcont
  411314:	mov	w0, #0x1                   	// #1
  411318:	b	4112fc <_obstack_memory_used@@Base+0x1140>
  41131c:	cmp	x4, x3
  411320:	b.hi	4112f8 <_obstack_memory_used@@Base+0x113c>  // b.pmore
  411324:	cset	w2, eq  // eq = none
  411328:	cmp	w2, #0x0
  41132c:	ccmp	x8, x7, #0x0, ne  // ne = any
  411330:	b.hi	4112f8 <_obstack_memory_used@@Base+0x113c>  // b.pmore
  411334:	cmp	x4, x3
  411338:	b.cc	411314 <_obstack_memory_used@@Base+0x1158>  // b.lo, b.ul, b.last
  41133c:	cmp	w2, #0x0
  411340:	ccmp	x8, x7, #0x2, ne  // ne = any
  411344:	b.cs	4112c4 <_obstack_memory_used@@Base+0x1108>  // b.hs, b.nlast
  411348:	b	411314 <_obstack_memory_used@@Base+0x1158>
  41134c:	mov	w0, #0x1                   	// #1
  411350:	bl	411bb8 <_obstack_memory_used@@Base+0x19fc>
  411354:	mov	w0, #0x2                   	// #2
  411358:	b	4112c4 <_obstack_memory_used@@Base+0x1108>
  41135c:	mov	w0, #0x0                   	// #0
  411360:	b	4112c4 <_obstack_memory_used@@Base+0x1108>
  411364:	stp	x29, x30, [sp, #-32]!
  411368:	mov	x29, sp
  41136c:	str	q0, [sp, #16]
  411370:	ldp	x8, x4, [sp, #16]
  411374:	str	q1, [sp, #16]
  411378:	ldp	x1, x9, [sp, #16]
  41137c:	mrs	x6, fpcr
  411380:	ubfx	x11, x4, #0, #48
  411384:	ubfx	x10, x4, #48, #15
  411388:	lsr	x4, x4, #63
  41138c:	and	w5, w4, #0xff
  411390:	cbz	w10, 4113c4 <_obstack_memory_used@@Base+0x1208>
  411394:	mov	w2, #0x7fff                	// #32767
  411398:	cmp	w10, w2
  41139c:	b.eq	411424 <_obstack_memory_used@@Base+0x1268>  // b.none
  4113a0:	and	x10, x10, #0xffff
  4113a4:	extr	x11, x11, x8, #61
  4113a8:	mov	x12, #0xffffffffffffc001    	// #-16383
  4113ac:	orr	x11, x11, #0x8000000000000
  4113b0:	lsl	x2, x8, #3
  4113b4:	add	x10, x10, x12
  4113b8:	mov	x15, #0x0                   	// #0
  4113bc:	mov	w0, #0x0                   	// #0
  4113c0:	b	411444 <_obstack_memory_used@@Base+0x1288>
  4113c4:	orr	x2, x11, x8
  4113c8:	cbz	x2, 4114c4 <_obstack_memory_used@@Base+0x1308>
  4113cc:	clz	x2, x8
  4113d0:	cmp	x11, #0x0
  4113d4:	clz	x0, x11
  4113d8:	add	x2, x2, #0x40
  4113dc:	csel	x0, x2, x0, eq  // eq = none
  4113e0:	sub	x7, x0, #0xf
  4113e4:	cmp	x7, #0x3c
  4113e8:	b.gt	411414 <_obstack_memory_used@@Base+0x1258>
  4113ec:	add	w2, w7, #0x3
  4113f0:	mov	w10, #0x3d                  	// #61
  4113f4:	sub	w7, w10, w7
  4113f8:	lsl	x11, x11, x2
  4113fc:	lsr	x7, x8, x7
  411400:	orr	x11, x7, x11
  411404:	lsl	x2, x8, x2
  411408:	mov	x10, #0xffffffffffffc011    	// #-16367
  41140c:	sub	x10, x10, x0
  411410:	b	4113b8 <_obstack_memory_used@@Base+0x11fc>
  411414:	sub	w11, w7, #0x3d
  411418:	mov	x2, #0x0                   	// #0
  41141c:	lsl	x11, x8, x11
  411420:	b	411408 <_obstack_memory_used@@Base+0x124c>
  411424:	orr	x2, x11, x8
  411428:	cbz	x2, 4114d4 <_obstack_memory_used@@Base+0x1318>
  41142c:	lsr	x0, x11, #47
  411430:	mov	x2, x8
  411434:	eor	x0, x0, #0x1
  411438:	mov	x10, #0x7fff                	// #32767
  41143c:	and	w0, w0, #0x1
  411440:	mov	x15, #0x3                   	// #3
  411444:	lsr	x8, x9, #63
  411448:	ubfx	x12, x9, #0, #48
  41144c:	ubfx	x7, x9, #48, #15
  411450:	and	w3, w8, #0xff
  411454:	mov	x16, x8
  411458:	cbz	w7, 4114e4 <_obstack_memory_used@@Base+0x1328>
  41145c:	mov	w8, #0x7fff                	// #32767
  411460:	cmp	w7, w8
  411464:	b.eq	411544 <_obstack_memory_used@@Base+0x1388>  // b.none
  411468:	and	x7, x7, #0xffff
  41146c:	extr	x12, x12, x1, #61
  411470:	mov	x8, #0xffffffffffffc001    	// #-16383
  411474:	orr	x12, x12, #0x8000000000000
  411478:	lsl	x1, x1, #3
  41147c:	add	x7, x7, x8
  411480:	mov	x8, #0x0                   	// #0
  411484:	eor	w5, w5, w3
  411488:	orr	x3, x8, x15, lsl #2
  41148c:	add	x10, x7, x10
  411490:	sub	x3, x3, #0x1
  411494:	and	x5, x5, #0xff
  411498:	add	x9, x10, #0x1
  41149c:	cmp	x3, #0xe
  4114a0:	b.hi	4115b8 <_obstack_memory_used@@Base+0x13fc>  // b.pmore
  4114a4:	cmp	w3, #0xe
  4114a8:	b.hi	4115b8 <_obstack_memory_used@@Base+0x13fc>  // b.pmore
  4114ac:	adrp	x7, 416000 <_obstack_memory_used@@Base+0x5e44>
  4114b0:	add	x7, x7, #0xa1c
  4114b4:	ldrh	w3, [x7, w3, uxtw #1]
  4114b8:	adr	x7, 4114c4 <_obstack_memory_used@@Base+0x1308>
  4114bc:	add	x3, x7, w3, sxth #2
  4114c0:	br	x3
  4114c4:	mov	x11, #0x0                   	// #0
  4114c8:	mov	x10, #0x0                   	// #0
  4114cc:	mov	x15, #0x1                   	// #1
  4114d0:	b	4113bc <_obstack_memory_used@@Base+0x1200>
  4114d4:	mov	x11, #0x0                   	// #0
  4114d8:	mov	x10, #0x7fff                	// #32767
  4114dc:	mov	x15, #0x2                   	// #2
  4114e0:	b	4113bc <_obstack_memory_used@@Base+0x1200>
  4114e4:	orr	x7, x12, x1
  4114e8:	cbz	x7, 411560 <_obstack_memory_used@@Base+0x13a4>
  4114ec:	clz	x13, x1
  4114f0:	cmp	x12, #0x0
  4114f4:	add	x13, x13, #0x40
  4114f8:	clz	x7, x12
  4114fc:	csel	x9, x13, x7, eq  // eq = none
  411500:	sub	x13, x9, #0xf
  411504:	cmp	x13, #0x3c
  411508:	b.gt	411534 <_obstack_memory_used@@Base+0x1378>
  41150c:	add	w7, w13, #0x3
  411510:	mov	w14, #0x3d                  	// #61
  411514:	sub	w13, w14, w13
  411518:	lsl	x12, x12, x7
  41151c:	lsr	x13, x1, x13
  411520:	orr	x12, x13, x12
  411524:	lsl	x1, x1, x7
  411528:	mov	x7, #0xffffffffffffc011    	// #-16367
  41152c:	sub	x7, x7, x9
  411530:	b	411480 <_obstack_memory_used@@Base+0x12c4>
  411534:	sub	w12, w13, #0x3d
  411538:	lsl	x12, x1, x12
  41153c:	mov	x1, #0x0                   	// #0
  411540:	b	411528 <_obstack_memory_used@@Base+0x136c>
  411544:	orr	x7, x12, x1
  411548:	cbz	x7, 411574 <_obstack_memory_used@@Base+0x13b8>
  41154c:	tst	x12, #0x800000000000
  411550:	mov	x7, #0x7fff                	// #32767
  411554:	csinc	w0, w0, wzr, ne  // ne = any
  411558:	mov	x8, #0x3                   	// #3
  41155c:	b	411484 <_obstack_memory_used@@Base+0x12c8>
  411560:	mov	x12, #0x0                   	// #0
  411564:	mov	x1, #0x0                   	// #0
  411568:	mov	x7, #0x0                   	// #0
  41156c:	mov	x8, #0x1                   	// #1
  411570:	b	411484 <_obstack_memory_used@@Base+0x12c8>
  411574:	mov	x12, #0x0                   	// #0
  411578:	mov	x1, #0x0                   	// #0
  41157c:	mov	x7, #0x7fff                	// #32767
  411580:	mov	x8, #0x2                   	// #2
  411584:	b	411484 <_obstack_memory_used@@Base+0x12c8>
  411588:	mov	x12, x11
  41158c:	mov	x1, x2
  411590:	mov	x8, x15
  411594:	cmp	x8, #0x2
  411598:	b.eq	4119e4 <_obstack_memory_used@@Base+0x1828>  // b.none
  41159c:	cmp	x8, #0x3
  4115a0:	b.eq	4119d4 <_obstack_memory_used@@Base+0x1818>  // b.none
  4115a4:	cmp	x8, #0x1
  4115a8:	b.ne	411718 <_obstack_memory_used@@Base+0x155c>  // b.any
  4115ac:	mov	x1, #0x0                   	// #0
  4115b0:	mov	x2, #0x0                   	// #0
  4115b4:	b	411998 <_obstack_memory_used@@Base+0x17dc>
  4115b8:	lsr	x14, x2, #32
  4115bc:	and	x15, x1, #0xffffffff
  4115c0:	lsr	x4, x1, #32
  4115c4:	and	x2, x2, #0xffffffff
  4115c8:	mul	x1, x14, x15
  4115cc:	mul	x3, x15, x2
  4115d0:	madd	x13, x4, x2, x1
  4115d4:	mul	x17, x14, x4
  4115d8:	add	x13, x13, x3, lsr #32
  4115dc:	cmp	x1, x13
  4115e0:	b.ls	4115ec <_obstack_memory_used@@Base+0x1430>  // b.plast
  4115e4:	mov	x1, #0x100000000           	// #4294967296
  4115e8:	add	x17, x17, x1
  4115ec:	and	x3, x3, #0xffffffff
  4115f0:	and	x1, x12, #0xffffffff
  4115f4:	lsr	x7, x13, #32
  4115f8:	add	x13, x3, x13, lsl #32
  4115fc:	lsr	x3, x12, #32
  411600:	mul	x12, x14, x1
  411604:	mul	x18, x2, x1
  411608:	madd	x2, x3, x2, x12
  41160c:	mul	x14, x14, x3
  411610:	add	x8, x2, x18, lsr #32
  411614:	cmp	x12, x8
  411618:	b.ls	411624 <_obstack_memory_used@@Base+0x1468>  // b.plast
  41161c:	mov	x2, #0x100000000           	// #4294967296
  411620:	add	x14, x14, x2
  411624:	lsr	x16, x11, #32
  411628:	and	x11, x11, #0xffffffff
  41162c:	and	x18, x18, #0xffffffff
  411630:	add	x14, x14, x8, lsr #32
  411634:	add	x18, x18, x8, lsl #32
  411638:	mul	x8, x15, x11
  41163c:	add	x7, x7, x18
  411640:	mul	x15, x16, x15
  411644:	mul	x2, x4, x16
  411648:	madd	x4, x4, x11, x15
  41164c:	add	x4, x4, x8, lsr #32
  411650:	cmp	x15, x4
  411654:	b.ls	411660 <_obstack_memory_used@@Base+0x14a4>  // b.plast
  411658:	mov	x12, #0x100000000           	// #4294967296
  41165c:	add	x2, x2, x12
  411660:	mul	x12, x16, x1
  411664:	and	x8, x8, #0xffffffff
  411668:	mul	x16, x3, x16
  41166c:	add	x15, x2, x4, lsr #32
  411670:	madd	x3, x3, x11, x12
  411674:	add	x8, x8, x4, lsl #32
  411678:	mul	x4, x11, x1
  41167c:	add	x3, x3, x4, lsr #32
  411680:	cmp	x12, x3
  411684:	b.ls	411690 <_obstack_memory_used@@Base+0x14d4>  // b.plast
  411688:	mov	x1, #0x100000000           	// #4294967296
  41168c:	add	x16, x16, x1
  411690:	and	x2, x4, #0xffffffff
  411694:	add	x7, x17, x7
  411698:	add	x2, x2, x3, lsl #32
  41169c:	lsr	x3, x3, #32
  4116a0:	adds	x2, x2, x14
  4116a4:	cset	x4, cs  // cs = hs, nlast
  4116a8:	cmp	x7, x18
  4116ac:	cset	x1, cc  // cc = lo, ul, last
  4116b0:	adds	x2, x2, x1
  4116b4:	cset	x1, cs  // cs = hs, nlast
  4116b8:	cmp	x4, #0x0
  4116bc:	ccmp	x1, #0x0, #0x0, eq  // eq = none
  4116c0:	cinc	x3, x3, ne  // ne = any
  4116c4:	adds	x7, x7, x8
  4116c8:	cset	x1, cs  // cs = hs, nlast
  4116cc:	adds	x2, x2, x15
  4116d0:	cset	x4, cs  // cs = hs, nlast
  4116d4:	adds	x2, x2, x1
  4116d8:	cset	x1, cs  // cs = hs, nlast
  4116dc:	cmp	x4, #0x0
  4116e0:	ccmp	x1, #0x0, #0x0, eq  // eq = none
  4116e4:	orr	x13, x13, x7, lsl #13
  4116e8:	cinc	x1, x16, ne  // ne = any
  4116ec:	cmp	x13, #0x0
  4116f0:	add	x3, x1, x3
  4116f4:	cset	x1, ne  // ne = any
  4116f8:	orr	x7, x1, x7, lsr #51
  4116fc:	orr	x1, x7, x2, lsl #13
  411700:	extr	x12, x3, x2, #51
  411704:	tbz	x3, #39, 4117a0 <_obstack_memory_used@@Base+0x15e4>
  411708:	and	x2, x1, #0x1
  41170c:	orr	x1, x2, x1, lsr #1
  411710:	orr	x1, x1, x12, lsl #63
  411714:	lsr	x12, x12, #1
  411718:	mov	x2, #0x3fff                	// #16383
  41171c:	add	x3, x9, x2
  411720:	cmp	x3, #0x0
  411724:	b.le	41186c <_obstack_memory_used@@Base+0x16b0>
  411728:	tst	x1, #0x7
  41172c:	b.eq	4117b8 <_obstack_memory_used@@Base+0x15fc>  // b.none
  411730:	and	x2, x6, #0xc00000
  411734:	orr	w0, w0, #0x10
  411738:	cmp	x2, #0x400, lsl #12
  41173c:	b.eq	4117a8 <_obstack_memory_used@@Base+0x15ec>  // b.none
  411740:	cmp	x2, #0x800, lsl #12
  411744:	b.eq	4117b4 <_obstack_memory_used@@Base+0x15f8>  // b.none
  411748:	cbnz	x2, 4117b8 <_obstack_memory_used@@Base+0x15fc>
  41174c:	and	x2, x1, #0xf
  411750:	cmp	x2, #0x4
  411754:	b.eq	4117b8 <_obstack_memory_used@@Base+0x15fc>  // b.none
  411758:	adds	x1, x1, #0x4
  41175c:	cinc	x12, x12, cs  // cs = hs, nlast
  411760:	b	4117b8 <_obstack_memory_used@@Base+0x15fc>
  411764:	tbz	x11, #47, 411778 <_obstack_memory_used@@Base+0x15bc>
  411768:	tbnz	x12, #47, 411778 <_obstack_memory_used@@Base+0x15bc>
  41176c:	mov	x11, x12
  411770:	mov	x2, x1
  411774:	mov	x4, x16
  411778:	orr	x1, x11, #0x800000000000
  41177c:	mov	x5, x4
  411780:	mov	x3, #0x7fff                	// #32767
  411784:	b	4117d8 <_obstack_memory_used@@Base+0x161c>
  411788:	mov	x12, x11
  41178c:	mov	x1, x2
  411790:	mov	x5, x4
  411794:	b	411590 <_obstack_memory_used@@Base+0x13d4>
  411798:	mov	x5, x16
  41179c:	b	411594 <_obstack_memory_used@@Base+0x13d8>
  4117a0:	mov	x9, x10
  4117a4:	b	411718 <_obstack_memory_used@@Base+0x155c>
  4117a8:	cbnz	x5, 4117b8 <_obstack_memory_used@@Base+0x15fc>
  4117ac:	adds	x1, x1, #0x8
  4117b0:	b	41175c <_obstack_memory_used@@Base+0x15a0>
  4117b4:	cbnz	x5, 4117ac <_obstack_memory_used@@Base+0x15f0>
  4117b8:	tbz	x12, #52, 4117c4 <_obstack_memory_used@@Base+0x1608>
  4117bc:	and	x12, x12, #0xffefffffffffffff
  4117c0:	add	x3, x9, #0x4, lsl #12
  4117c4:	mov	x4, #0x7ffe                	// #32766
  4117c8:	cmp	x3, x4
  4117cc:	b.gt	41180c <_obstack_memory_used@@Base+0x1650>
  4117d0:	extr	x2, x12, x1, #3
  4117d4:	lsr	x1, x12, #3
  4117d8:	and	x3, x3, #0x7fff
  4117dc:	mov	x7, #0x0                   	// #0
  4117e0:	bfxil	x7, x1, #0, #48
  4117e4:	orr	w3, w3, w5, lsl #15
  4117e8:	fmov	d0, x2
  4117ec:	bfi	x7, x3, #48, #16
  4117f0:	fmov	v0.d[1], x7
  4117f4:	cbz	w0, 411804 <_obstack_memory_used@@Base+0x1648>
  4117f8:	str	q0, [sp, #16]
  4117fc:	bl	411bb8 <_obstack_memory_used@@Base+0x19fc>
  411800:	ldr	q0, [sp, #16]
  411804:	ldp	x29, x30, [sp], #32
  411808:	ret
  41180c:	and	x2, x6, #0xc00000
  411810:	cmp	x2, #0x400, lsl #12
  411814:	b.eq	411838 <_obstack_memory_used@@Base+0x167c>  // b.none
  411818:	cmp	x2, #0x800, lsl #12
  41181c:	b.eq	41184c <_obstack_memory_used@@Base+0x1690>  // b.none
  411820:	cbnz	x2, 411860 <_obstack_memory_used@@Base+0x16a4>
  411824:	mov	x3, #0x7fff                	// #32767
  411828:	mov	w1, #0x14                  	// #20
  41182c:	orr	w0, w0, w1
  411830:	mov	x1, x2
  411834:	b	4117d8 <_obstack_memory_used@@Base+0x161c>
  411838:	cmp	x5, #0x0
  41183c:	mov	x3, #0x7fff                	// #32767
  411840:	csetm	x2, ne  // ne = any
  411844:	csel	x3, x3, x4, eq  // eq = none
  411848:	b	411828 <_obstack_memory_used@@Base+0x166c>
  41184c:	cmp	x5, #0x0
  411850:	mov	x3, #0x7fff                	// #32767
  411854:	csetm	x2, eq  // eq = none
  411858:	csel	x3, x3, x4, ne  // ne = any
  41185c:	b	411828 <_obstack_memory_used@@Base+0x166c>
  411860:	mov	x3, x4
  411864:	mov	x2, #0xffffffffffffffff    	// #-1
  411868:	b	411828 <_obstack_memory_used@@Base+0x166c>
  41186c:	mov	x4, #0x1                   	// #1
  411870:	sub	x3, x4, x3
  411874:	cmp	x3, #0x74
  411878:	b.gt	411960 <_obstack_memory_used@@Base+0x17a4>
  41187c:	cmp	x3, #0x3f
  411880:	b.gt	4118e8 <_obstack_memory_used@@Base+0x172c>
  411884:	mov	w4, #0x40                  	// #64
  411888:	sub	w4, w4, w3
  41188c:	lsr	x7, x1, x3
  411890:	lsl	x1, x1, x4
  411894:	cmp	x1, #0x0
  411898:	cset	x1, ne  // ne = any
  41189c:	lsl	x2, x12, x4
  4118a0:	orr	x2, x2, x7
  4118a4:	orr	x2, x2, x1
  4118a8:	lsr	x1, x12, x3
  4118ac:	tst	x2, #0x7
  4118b0:	b.eq	41192c <_obstack_memory_used@@Base+0x1770>  // b.none
  4118b4:	and	x3, x6, #0xc00000
  4118b8:	orr	w0, w0, #0x10
  4118bc:	cmp	x3, #0x400, lsl #12
  4118c0:	b.eq	41191c <_obstack_memory_used@@Base+0x1760>  // b.none
  4118c4:	cmp	x3, #0x800, lsl #12
  4118c8:	b.eq	411928 <_obstack_memory_used@@Base+0x176c>  // b.none
  4118cc:	cbnz	x3, 41192c <_obstack_memory_used@@Base+0x1770>
  4118d0:	and	x3, x2, #0xf
  4118d4:	cmp	x3, #0x4
  4118d8:	b.eq	41192c <_obstack_memory_used@@Base+0x1770>  // b.none
  4118dc:	adds	x2, x2, #0x4
  4118e0:	cinc	x1, x1, cs  // cs = hs, nlast
  4118e4:	b	41192c <_obstack_memory_used@@Base+0x1770>
  4118e8:	sub	w2, w3, #0x40
  4118ec:	mov	w4, #0x80                  	// #128
  4118f0:	sub	w4, w4, w3
  4118f4:	cmp	x3, #0x40
  4118f8:	lsr	x2, x12, x2
  4118fc:	lsl	x12, x12, x4
  411900:	csel	x12, x12, xzr, ne  // ne = any
  411904:	orr	x1, x12, x1
  411908:	cmp	x1, #0x0
  41190c:	cset	x1, ne  // ne = any
  411910:	orr	x2, x2, x1
  411914:	mov	x1, #0x0                   	// #0
  411918:	b	4118ac <_obstack_memory_used@@Base+0x16f0>
  41191c:	cbnz	x5, 41192c <_obstack_memory_used@@Base+0x1770>
  411920:	adds	x2, x2, #0x8
  411924:	b	4118e0 <_obstack_memory_used@@Base+0x1724>
  411928:	cbnz	x5, 411920 <_obstack_memory_used@@Base+0x1764>
  41192c:	tbz	x1, #51, 411948 <_obstack_memory_used@@Base+0x178c>
  411930:	orr	w0, w0, #0x10
  411934:	mov	x1, #0x0                   	// #0
  411938:	mov	x2, #0x0                   	// #0
  41193c:	mov	x3, #0x1                   	// #1
  411940:	orr	w0, w0, #0x8
  411944:	b	4117d8 <_obstack_memory_used@@Base+0x161c>
  411948:	mov	x3, #0x0                   	// #0
  41194c:	extr	x2, x1, x2, #3
  411950:	lsr	x1, x1, #3
  411954:	tbnz	w0, #4, 411940 <_obstack_memory_used@@Base+0x1784>
  411958:	tbz	w6, #11, 4117d8 <_obstack_memory_used@@Base+0x161c>
  41195c:	b	411940 <_obstack_memory_used@@Base+0x1784>
  411960:	orr	x2, x1, x12
  411964:	cbz	x2, 411990 <_obstack_memory_used@@Base+0x17d4>
  411968:	and	x6, x6, #0xc00000
  41196c:	orr	w0, w0, #0x10
  411970:	cmp	x6, #0x400, lsl #12
  411974:	b.eq	4119a0 <_obstack_memory_used@@Base+0x17e4>  // b.none
  411978:	cmp	x6, #0x800, lsl #12
  41197c:	b.eq	4119b0 <_obstack_memory_used@@Base+0x17f4>  // b.none
  411980:	cmp	x6, #0x0
  411984:	mov	x2, #0x5                   	// #5
  411988:	csel	x4, x4, x2, ne  // ne = any
  41198c:	lsr	x2, x4, #3
  411990:	orr	w0, w0, #0x8
  411994:	mov	x1, #0x0                   	// #0
  411998:	mov	x3, #0x0                   	// #0
  41199c:	b	4117d8 <_obstack_memory_used@@Base+0x161c>
  4119a0:	cmp	x5, #0x0
  4119a4:	mov	x2, #0x9                   	// #9
  4119a8:	csel	x4, x2, x4, eq  // eq = none
  4119ac:	b	41198c <_obstack_memory_used@@Base+0x17d0>
  4119b0:	cmp	x5, #0x0
  4119b4:	mov	x2, #0x9                   	// #9
  4119b8:	csel	x4, x2, x4, ne  // ne = any
  4119bc:	b	41198c <_obstack_memory_used@@Base+0x17d0>
  4119c0:	mov	x11, #0xffffffffffff        	// #281474976710655
  4119c4:	mov	x2, #0xffffffffffffffff    	// #-1
  4119c8:	mov	w0, #0x1                   	// #1
  4119cc:	mov	x4, #0x0                   	// #0
  4119d0:	b	411778 <_obstack_memory_used@@Base+0x15bc>
  4119d4:	mov	x11, x12
  4119d8:	mov	x2, x1
  4119dc:	mov	x4, x5
  4119e0:	b	411778 <_obstack_memory_used@@Base+0x15bc>
  4119e4:	mov	x1, #0x0                   	// #0
  4119e8:	mov	x2, #0x0                   	// #0
  4119ec:	b	411780 <_obstack_memory_used@@Base+0x15c4>
  4119f0:	cbz	w0, 411a30 <_obstack_memory_used@@Base+0x1874>
  4119f4:	mov	w0, w0
  4119f8:	mov	w1, #0x403e                	// #16446
  4119fc:	clz	x2, x0
  411a00:	sub	w1, w1, w2
  411a04:	mov	w2, #0x402f                	// #16431
  411a08:	sxtw	x4, w1
  411a0c:	sub	w1, w2, w1
  411a10:	lsl	x0, x0, x1
  411a14:	mov	x3, #0x0                   	// #0
  411a18:	mov	x2, #0x0                   	// #0
  411a1c:	bfxil	x3, x0, #0, #48
  411a20:	fmov	d0, x2
  411a24:	bfi	x3, x4, #48, #16
  411a28:	fmov	v0.d[1], x3
  411a2c:	ret
  411a30:	mov	x0, #0x0                   	// #0
  411a34:	mov	x4, #0x0                   	// #0
  411a38:	b	411a14 <_obstack_memory_used@@Base+0x1858>
  411a3c:	stp	x29, x30, [sp, #-48]!
  411a40:	mov	x29, sp
  411a44:	str	x19, [sp, #16]
  411a48:	str	q0, [sp, #32]
  411a4c:	ldr	x19, [sp, #32]
  411a50:	ldr	x0, [sp, #40]
  411a54:	mrs	x1, fpcr
  411a58:	ubfx	x3, x0, #48, #15
  411a5c:	mov	x1, x19
  411a60:	mov	x4, #0x3ffe                	// #16382
  411a64:	ubfx	x19, x0, #0, #48
  411a68:	cmp	x3, x4
  411a6c:	b.gt	411a8c <_obstack_memory_used@@Base+0x18d0>
  411a70:	cbnz	x3, 411b34 <_obstack_memory_used@@Base+0x1978>
  411a74:	orr	x19, x1, x19
  411a78:	cbnz	x19, 411b34 <_obstack_memory_used@@Base+0x1978>
  411a7c:	mov	x0, x19
  411a80:	ldr	x19, [sp, #16]
  411a84:	ldp	x29, x30, [sp], #48
  411a88:	ret
  411a8c:	lsr	x0, x0, #63
  411a90:	mov	x4, #0x403f                	// #16447
  411a94:	and	w0, w0, #0xff
  411a98:	and	x5, x0, #0xff
  411a9c:	sub	x4, x4, x5
  411aa0:	cmp	x4, x3
  411aa4:	b.le	411af0 <_obstack_memory_used@@Base+0x1934>
  411aa8:	cbnz	x5, 411b40 <_obstack_memory_used@@Base+0x1984>
  411aac:	mov	x4, #0x406f                	// #16495
  411ab0:	sub	x2, x4, x3
  411ab4:	orr	x0, x19, #0x1000000000000
  411ab8:	cmp	x2, #0x3f
  411abc:	b.gt	411b04 <_obstack_memory_used@@Base+0x1948>
  411ac0:	mov	w5, #0xffffbfd1            	// #-16431
  411ac4:	add	w5, w3, w5
  411ac8:	sub	w19, w4, w3
  411acc:	lsl	x2, x1, x5
  411ad0:	cmp	x2, #0x0
  411ad4:	lsr	x1, x1, x19
  411ad8:	cset	w2, ne  // ne = any
  411adc:	lsl	x19, x0, x5
  411ae0:	orr	x19, x1, x19
  411ae4:	cbz	w2, 411a7c <_obstack_memory_used@@Base+0x18c0>
  411ae8:	mov	w0, #0x10                  	// #16
  411aec:	b	411afc <_obstack_memory_used@@Base+0x1940>
  411af0:	eor	w0, w0, #0x1
  411af4:	sbfx	x19, x0, #0, #1
  411af8:	mov	w0, #0x1                   	// #1
  411afc:	bl	411bb8 <_obstack_memory_used@@Base+0x19fc>
  411b00:	b	411a7c <_obstack_memory_used@@Base+0x18c0>
  411b04:	mov	w4, #0xffffc011            	// #-16367
  411b08:	add	w19, w3, w4
  411b0c:	cmp	x2, #0x40
  411b10:	lsl	x19, x0, x19
  411b14:	csel	x19, x19, xzr, ne  // ne = any
  411b18:	orr	x19, x19, x1
  411b1c:	cmp	x19, #0x0
  411b20:	mov	w19, #0x402f                	// #16431
  411b24:	sub	w19, w19, w3
  411b28:	cset	w2, ne  // ne = any
  411b2c:	lsr	x19, x0, x19
  411b30:	b	411ae4 <_obstack_memory_used@@Base+0x1928>
  411b34:	mov	w0, #0x10                  	// #16
  411b38:	mov	x19, #0x0                   	// #0
  411b3c:	b	411afc <_obstack_memory_used@@Base+0x1940>
  411b40:	mov	w0, #0x1                   	// #1
  411b44:	b	411b38 <_obstack_memory_used@@Base+0x197c>
  411b48:	cbz	x0, 411bac <_obstack_memory_used@@Base+0x19f0>
  411b4c:	clz	x2, x0
  411b50:	mov	w1, #0x403e                	// #16446
  411b54:	sub	w2, w1, w2
  411b58:	mov	x3, #0x406f                	// #16495
  411b5c:	sub	x1, x3, w2, sxtw
  411b60:	sxtw	x4, w2
  411b64:	cmp	x1, #0x3f
  411b68:	b.gt	411b98 <_obstack_memory_used@@Base+0x19dc>
  411b6c:	mov	w1, #0xffffbfd1            	// #-16431
  411b70:	add	w1, w2, w1
  411b74:	sub	w2, w3, w2
  411b78:	lsr	x1, x0, x1
  411b7c:	lsl	x0, x0, x2
  411b80:	mov	x3, #0x0                   	// #0
  411b84:	fmov	d0, x0
  411b88:	bfxil	x3, x1, #0, #48
  411b8c:	bfi	x3, x4, #48, #16
  411b90:	fmov	v0.d[1], x3
  411b94:	ret
  411b98:	mov	w1, #0x402f                	// #16431
  411b9c:	sub	w1, w1, w2
  411ba0:	lsl	x1, x0, x1
  411ba4:	mov	x0, #0x0                   	// #0
  411ba8:	b	411b80 <_obstack_memory_used@@Base+0x19c4>
  411bac:	mov	x1, #0x0                   	// #0
  411bb0:	mov	x4, #0x0                   	// #0
  411bb4:	b	411b80 <_obstack_memory_used@@Base+0x19c4>
  411bb8:	tbz	w0, #0, 411bc8 <_obstack_memory_used@@Base+0x1a0c>
  411bbc:	movi	v1.2s, #0x0
  411bc0:	fdiv	s0, s1, s1
  411bc4:	mrs	x1, fpsr
  411bc8:	tbz	w0, #1, 411bdc <_obstack_memory_used@@Base+0x1a20>
  411bcc:	fmov	s1, #1.000000000000000000e+00
  411bd0:	movi	v2.2s, #0x0
  411bd4:	fdiv	s0, s1, s2
  411bd8:	mrs	x1, fpsr
  411bdc:	tbz	w0, #2, 411bfc <_obstack_memory_used@@Base+0x1a40>
  411be0:	mov	w1, #0x7f7fffff            	// #2139095039
  411be4:	fmov	s1, w1
  411be8:	mov	w1, #0xc5ae                	// #50606
  411bec:	movk	w1, #0x749d, lsl #16
  411bf0:	fmov	s2, w1
  411bf4:	fadd	s0, s1, s2
  411bf8:	mrs	x1, fpsr
  411bfc:	tbz	w0, #3, 411c0c <_obstack_memory_used@@Base+0x1a50>
  411c00:	movi	v1.2s, #0x80, lsl #16
  411c04:	fmul	s0, s1, s1
  411c08:	mrs	x1, fpsr
  411c0c:	tbz	w0, #4, 411c24 <_obstack_memory_used@@Base+0x1a68>
  411c10:	mov	w0, #0x7f7fffff            	// #2139095039
  411c14:	fmov	s2, #1.000000000000000000e+00
  411c18:	fmov	s1, w0
  411c1c:	fsub	s0, s1, s2
  411c20:	mrs	x0, fpsr
  411c24:	ret
  411c28:	stp	x29, x30, [sp, #-64]!
  411c2c:	mov	x29, sp
  411c30:	stp	x19, x20, [sp, #16]
  411c34:	adrp	x20, 42a000 <_obstack_memory_used@@Base+0x19e44>
  411c38:	add	x20, x20, #0xde0
  411c3c:	stp	x21, x22, [sp, #32]
  411c40:	adrp	x21, 42a000 <_obstack_memory_used@@Base+0x19e44>
  411c44:	add	x21, x21, #0xdd8
  411c48:	sub	x20, x20, x21
  411c4c:	mov	w22, w0
  411c50:	stp	x23, x24, [sp, #48]
  411c54:	mov	x23, x1
  411c58:	mov	x24, x2
  411c5c:	bl	402488 <mbrtowc@plt-0x38>
  411c60:	cmp	xzr, x20, asr #3
  411c64:	b.eq	411c90 <_obstack_memory_used@@Base+0x1ad4>  // b.none
  411c68:	asr	x20, x20, #3
  411c6c:	mov	x19, #0x0                   	// #0
  411c70:	ldr	x3, [x21, x19, lsl #3]
  411c74:	mov	x2, x24
  411c78:	add	x19, x19, #0x1
  411c7c:	mov	x1, x23
  411c80:	mov	w0, w22
  411c84:	blr	x3
  411c88:	cmp	x20, x19
  411c8c:	b.ne	411c70 <_obstack_memory_used@@Base+0x1ab4>  // b.any
  411c90:	ldp	x19, x20, [sp, #16]
  411c94:	ldp	x21, x22, [sp, #32]
  411c98:	ldp	x23, x24, [sp, #48]
  411c9c:	ldp	x29, x30, [sp], #64
  411ca0:	ret
  411ca4:	nop
  411ca8:	ret
  411cac:	nop
  411cb0:	adrp	x2, 42b000 <_obstack_memory_used@@Base+0x1ae44>
  411cb4:	mov	x1, #0x0                   	// #0
  411cb8:	ldr	x2, [x2, #896]
  411cbc:	b	402640 <__cxa_atexit@plt>
  411cc0:	mov	x2, x1
  411cc4:	mov	x1, x0
  411cc8:	mov	w0, #0x0                   	// #0
  411ccc:	b	402b50 <__xstat@plt>
  411cd0:	mov	x2, x1
  411cd4:	mov	w1, w0
  411cd8:	mov	w0, #0x0                   	// #0
  411cdc:	b	402ab0 <__fxstat@plt>
  411ce0:	mov	x2, x1
  411ce4:	mov	x1, x0
  411ce8:	mov	w0, #0x0                   	// #0
  411cec:	b	402a50 <__lxstat@plt>
  411cf0:	mov	x4, x1
  411cf4:	mov	x5, x2
  411cf8:	mov	w1, w0
  411cfc:	mov	x2, x4
  411d00:	mov	w0, #0x0                   	// #0
  411d04:	mov	w4, w3
  411d08:	mov	x3, x5
  411d0c:	b	402ba0 <__fxstatat@plt>

Disassembly of section .fini:

0000000000411d10 <.fini>:
  411d10:	stp	x29, x30, [sp, #-16]!
  411d14:	mov	x29, sp
  411d18:	ldp	x29, x30, [sp], #16
  411d1c:	ret
