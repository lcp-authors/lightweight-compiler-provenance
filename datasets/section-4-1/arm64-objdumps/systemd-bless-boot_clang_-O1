
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-bless-boot_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

00000000002121b8 <_start>:
  2121b8:	mov	x29, #0x0                   	// #0
  2121bc:	mov	x30, #0x0                   	// #0
  2121c0:	mov	x5, x0
  2121c4:	ldr	x1, [sp]
  2121c8:	add	x2, sp, #0x8
  2121cc:	mov	x6, sp
  2121d0:	movz	x0, #0x0, lsl #48
  2121d4:	movk	x0, #0x0, lsl #32
  2121d8:	movk	x0, #0x21, lsl #16
  2121dc:	movk	x0, #0x231c
  2121e0:	movz	x3, #0x0, lsl #48
  2121e4:	movk	x3, #0x0, lsl #32
  2121e8:	movk	x3, #0x21, lsl #16
  2121ec:	movk	x3, #0x3c18
  2121f0:	movz	x4, #0x0, lsl #48
  2121f4:	movk	x4, #0x0, lsl #32
  2121f8:	movk	x4, #0x21, lsl #16
  2121fc:	movk	x4, #0x3c98
  212200:	bl	213ce0 <__libc_start_main@plt>
  212204:	bl	213cf0 <abort@plt>

0000000000212208 <call_weak_fn>:
  212208:	adrp	x0, 224000 <strv_join_prefix@plt+0xffe0>
  21220c:	ldr	x0, [x0, #528]
  212210:	cbz	x0, 212218 <call_weak_fn+0x10>
  212214:	b	213d00 <__gmon_start__@plt>
  212218:	ret

000000000021221c <deregister_tm_clones>:
  21221c:	adrp	x0, 234000 <_DYNAMIC+0xffc0>
  212220:	add	x0, x0, #0x3e8
  212224:	adrp	x1, 234000 <_DYNAMIC+0xffc0>
  212228:	add	x1, x1, #0x3e8
  21222c:	cmp	x0, x1
  212230:	b.eq	212264 <deregister_tm_clones+0x48>  // b.none
  212234:	stp	x29, x30, [sp, #-32]!
  212238:	mov	x29, sp
  21223c:	adrp	x0, 201000 <run.verbs-0x4d0>
  212240:	ldr	x0, [x0, #1216]
  212244:	str	x0, [sp, #24]
  212248:	mov	x1, x0
  21224c:	cbz	x1, 21225c <deregister_tm_clones+0x40>
  212250:	adrp	x0, 234000 <_DYNAMIC+0xffc0>
  212254:	add	x0, x0, #0x3e8
  212258:	blr	x1
  21225c:	ldp	x29, x30, [sp], #32
  212260:	ret
  212264:	ret

0000000000212268 <register_tm_clones>:
  212268:	adrp	x0, 234000 <_DYNAMIC+0xffc0>
  21226c:	add	x0, x0, #0x3e8
  212270:	adrp	x1, 234000 <_DYNAMIC+0xffc0>
  212274:	add	x1, x1, #0x3e8
  212278:	sub	x0, x0, x1
  21227c:	lsr	x1, x0, #63
  212280:	add	x0, x1, x0, asr #3
  212284:	cmp	xzr, x0, asr #1
  212288:	b.eq	2122c0 <register_tm_clones+0x58>  // b.none
  21228c:	stp	x29, x30, [sp, #-32]!
  212290:	mov	x29, sp
  212294:	asr	x1, x0, #1
  212298:	adrp	x0, 201000 <run.verbs-0x4d0>
  21229c:	ldr	x0, [x0, #1224]
  2122a0:	str	x0, [sp, #24]
  2122a4:	mov	x2, x0
  2122a8:	cbz	x2, 2122b8 <register_tm_clones+0x50>
  2122ac:	adrp	x0, 234000 <_DYNAMIC+0xffc0>
  2122b0:	add	x0, x0, #0x3e8
  2122b4:	blr	x2
  2122b8:	ldp	x29, x30, [sp], #32
  2122bc:	ret
  2122c0:	ret

00000000002122c4 <__do_global_dtors_aux>:
  2122c4:	adrp	x0, 234000 <_DYNAMIC+0xffc0>
  2122c8:	ldrb	w0, [x0, #1000]
  2122cc:	cbnz	w0, 2122f0 <__do_global_dtors_aux+0x2c>
  2122d0:	stp	x29, x30, [sp, #-16]!
  2122d4:	mov	x29, sp
  2122d8:	bl	21221c <deregister_tm_clones>
  2122dc:	adrp	x0, 234000 <_DYNAMIC+0xffc0>
  2122e0:	mov	w1, #0x1                   	// #1
  2122e4:	strb	w1, [x0, #1000]
  2122e8:	ldp	x29, x30, [sp], #16
  2122ec:	ret
  2122f0:	ret

00000000002122f4 <frame_dummy>:
  2122f4:	stp	x29, x30, [sp, #-16]!
  2122f8:	mov	x29, sp
  2122fc:	bl	212268 <register_tm_clones>
  212300:	ldp	x29, x30, [sp], #16
  212304:	ret

0000000000212308 <__unique_prefix_static_destructor_wrapper0>:
  212308:	stp	x29, x30, [sp, #-16]!
  21230c:	mov	x29, sp
  212310:	bl	2124d0 <strv_freep>
  212314:	ldp	x29, x30, [sp], #16
  212318:	ret

000000000021231c <main>:
  21231c:	stp	x29, x30, [sp, #-32]!
  212320:	stp	x20, x19, [sp, #16]
  212324:	mov	x29, sp
  212328:	mov	x19, x1
  21232c:	mov	w20, w0
  212330:	bl	212368 <save_argc_argv>
  212334:	mov	w0, w20
  212338:	mov	x1, x19
  21233c:	bl	21237c <run>
  212340:	mov	w19, w0
  212344:	bl	213d10 <ask_password_agent_close@plt>
  212348:	bl	213d20 <polkit_agent_close@plt>
  21234c:	bl	213d30 <pager_close@plt>
  212350:	bl	213d40 <mac_selinux_finish@plt>
  212354:	bl	212470 <static_destruct>
  212358:	lsr	w0, w19, #31
  21235c:	ldp	x20, x19, [sp, #16]
  212360:	ldp	x29, x30, [sp], #32
  212364:	ret

0000000000212368 <save_argc_argv>:
  212368:	adrp	x8, 234000 <_DYNAMIC+0xffc0>
  21236c:	adrp	x9, 234000 <_DYNAMIC+0xffc0>
  212370:	str	w0, [x8, #1016]
  212374:	str	x1, [x9, #1024]
  212378:	ret

000000000021237c <run>:
  21237c:	stp	x29, x30, [sp, #-32]!
  212380:	stp	x20, x19, [sp, #16]
  212384:	mov	w20, w0
  212388:	mov	w0, wzr
  21238c:	mov	x29, sp
  212390:	mov	x19, x1
  212394:	bl	213d50 <log_parse_environment_realm@plt>
  212398:	bl	213d60 <log_open@plt>
  21239c:	mov	w0, w20
  2123a0:	mov	x1, x19
  2123a4:	bl	212fdc <parse_argv>
  2123a8:	cmp	w0, #0x1
  2123ac:	b.lt	212464 <run+0xe8>  // b.tstop
  2123b0:	bl	213d70 <detect_container@plt>
  2123b4:	cmp	w0, #0x1
  2123b8:	b.lt	2123fc <run+0x80>  // b.tstop
  2123bc:	mov	w0, wzr
  2123c0:	bl	213d80 <log_get_max_level_realm@plt>
  2123c4:	cmp	w0, #0x3
  2123c8:	b.lt	212460 <run+0xe4>  // b.tstop
  2123cc:	adrp	x2, 201000 <run.verbs-0x4d0>
  2123d0:	adrp	x4, 201000 <run.verbs-0x4d0>
  2123d4:	adrp	x5, 201000 <run.verbs-0x4d0>
  2123d8:	mov	w1, #0x5f                  	// #95
  2123dc:	add	x2, x2, #0xca6
  2123e0:	add	x4, x4, #0xed9
  2123e4:	add	x5, x5, #0x923
  2123e8:	mov	w0, #0x3                   	// #3
  2123ec:	movk	w1, #0x4000, lsl #16
  2123f0:	mov	w3, #0x204                 	// #516
  2123f4:	bl	213d90 <log_internal_realm@plt>
  2123f8:	b	212464 <run+0xe8>
  2123fc:	bl	213da0 <is_efi_boot@plt>
  212400:	tbz	w0, #0, 212420 <run+0xa4>
  212404:	adrp	x2, 201000 <run.verbs-0x4d0>
  212408:	add	x2, x2, #0x4d0
  21240c:	mov	w0, w20
  212410:	mov	x1, x19
  212414:	mov	x3, xzr
  212418:	bl	213db0 <dispatch_verb@plt>
  21241c:	b	212464 <run+0xe8>
  212420:	mov	w0, wzr
  212424:	bl	213d80 <log_get_max_level_realm@plt>
  212428:	cmp	w0, #0x3
  21242c:	b.lt	212460 <run+0xe4>  // b.tstop
  212430:	adrp	x2, 201000 <run.verbs-0x4d0>
  212434:	adrp	x4, 201000 <run.verbs-0x4d0>
  212438:	adrp	x5, 201000 <run.verbs-0x4d0>
  21243c:	mov	w1, #0x5f                  	// #95
  212440:	add	x2, x2, #0xca6
  212444:	add	x4, x4, #0xed9
  212448:	add	x5, x5, #0xb54
  21244c:	mov	w0, #0x3                   	// #3
  212450:	movk	w1, #0x4000, lsl #16
  212454:	mov	w3, #0x208                 	// #520
  212458:	bl	213d90 <log_internal_realm@plt>
  21245c:	b	212464 <run+0xe8>
  212460:	mov	w0, #0xffffffa1            	// #-95
  212464:	ldp	x20, x19, [sp, #16]
  212468:	ldp	x29, x30, [sp], #32
  21246c:	ret

0000000000212470 <static_destruct>:
  212470:	stp	x29, x30, [sp, #-32]!
  212474:	stp	x20, x19, [sp, #16]
  212478:	adrp	x8, 224000 <strv_join_prefix@plt+0xffe0>
  21247c:	ldr	x8, [x8, #536]
  212480:	mov	x29, sp
  212484:	cbz	x8, 2124c4 <static_destruct+0x54>
  212488:	adrp	x0, 224000 <strv_join_prefix@plt+0xffe0>
  21248c:	ldr	x0, [x0, #536]
  212490:	bl	213c08 <ALIGN_TO>
  212494:	adrp	x20, 224000 <strv_join_prefix@plt+0xffe0>
  212498:	ldr	x20, [x20, #544]
  21249c:	cmp	x0, x20
  2124a0:	b.cs	2124c4 <static_destruct+0x54>  // b.hs, b.nlast
  2124a4:	mov	x19, x0
  2124a8:	ldp	x0, x8, [x19]
  2124ac:	blr	x8
  2124b0:	add	x0, x19, #0x10
  2124b4:	bl	213c08 <ALIGN_TO>
  2124b8:	mov	x19, x0
  2124bc:	cmp	x0, x20
  2124c0:	b.cc	2124a8 <static_destruct+0x38>  // b.lo, b.ul, b.last
  2124c4:	ldp	x20, x19, [sp, #16]
  2124c8:	ldp	x29, x30, [sp], #32
  2124cc:	ret

00000000002124d0 <strv_freep>:
  2124d0:	stp	x29, x30, [sp, #-16]!
  2124d4:	ldr	x0, [x0]
  2124d8:	mov	x29, sp
  2124dc:	cbz	x0, 2124e4 <strv_freep+0x14>
  2124e0:	bl	213dc0 <strv_free@plt>
  2124e4:	ldp	x29, x30, [sp], #16
  2124e8:	ret

00000000002124ec <help>:
  2124ec:	sub	sp, sp, #0x30
  2124f0:	adrp	x0, 201000 <run.verbs-0x4d0>
  2124f4:	adrp	x1, 201000 <run.verbs-0x4d0>
  2124f8:	add	x0, x0, #0x9af
  2124fc:	add	x1, x1, #0xb85
  212500:	add	x2, sp, #0x8
  212504:	stp	x29, x30, [sp, #16]
  212508:	stp	x20, x19, [sp, #32]
  21250c:	add	x29, sp, #0x10
  212510:	str	xzr, [sp, #8]
  212514:	bl	213dd0 <terminal_urlify_man@plt>
  212518:	tbnz	w0, #31, 212554 <help+0x68>
  21251c:	adrp	x8, 234000 <_DYNAMIC+0xffc0>
  212520:	ldr	x19, [x8, #1032]
  212524:	bl	213154 <ansi_highlight>
  212528:	mov	x20, x0
  21252c:	bl	213180 <ansi_normal>
  212530:	ldr	x4, [sp, #8]
  212534:	mov	x3, x0
  212538:	adrp	x0, 201000 <run.verbs-0x4d0>
  21253c:	add	x0, x0, #0x75e
  212540:	mov	x1, x19
  212544:	mov	x2, x20
  212548:	bl	213de0 <printf@plt>
  21254c:	mov	w19, wzr
  212550:	b	212574 <help+0x88>
  212554:	adrp	x1, 201000 <run.verbs-0x4d0>
  212558:	adrp	x3, 201000 <run.verbs-0x4d0>
  21255c:	add	x1, x1, #0xca6
  212560:	add	x3, x3, #0xedf
  212564:	mov	w2, #0x20                  	// #32
  212568:	mov	w0, wzr
  21256c:	bl	213df0 <log_oom_internal@plt>
  212570:	mov	w19, w0
  212574:	add	x0, sp, #0x8
  212578:	bl	21313c <freep>
  21257c:	mov	w0, w19
  212580:	ldp	x20, x19, [sp, #32]
  212584:	ldp	x29, x30, [sp, #16]
  212588:	add	sp, sp, #0x30
  21258c:	ret

0000000000212590 <verb_status>:
  212590:	sub	sp, sp, #0xb0
  212594:	stp	x29, x30, [sp, #80]
  212598:	add	x29, sp, #0x50
  21259c:	sub	x0, x29, #0x8
  2125a0:	sub	x1, x29, #0x10
  2125a4:	add	x2, sp, #0x20
  2125a8:	add	x3, sp, #0x18
  2125ac:	sub	x4, x29, #0x18
  2125b0:	stp	x28, x27, [sp, #96]
  2125b4:	stp	x26, x25, [sp, #112]
  2125b8:	stp	x24, x23, [sp, #128]
  2125bc:	stp	x22, x21, [sp, #144]
  2125c0:	stp	x20, x19, [sp, #160]
  2125c4:	stp	xzr, xzr, [x29, #-16]
  2125c8:	stp	xzr, xzr, [x29, #-32]
  2125cc:	str	xzr, [sp, #40]
  2125d0:	bl	2131ac <acquire_boot_count_path>
  2125d4:	cmn	w0, #0x31
  2125d8:	b.ne	2125f0 <verb_status+0x60>  // b.any
  2125dc:	adrp	x0, 201000 <run.verbs-0x4d0>
  2125e0:	add	x0, x0, #0x975
  2125e4:	bl	213e00 <puts@plt>
  2125e8:	mov	w26, wzr
  2125ec:	b	212928 <verb_status+0x398>
  2125f0:	mov	w26, w0
  2125f4:	tbnz	w0, #31, 212928 <verb_status+0x398>
  2125f8:	bl	21346c <acquire_path>
  2125fc:	tbnz	w0, #31, 212924 <verb_status+0x394>
  212600:	ldp	x1, x0, [x29, #-24]
  212604:	sub	x2, x29, #0x20
  212608:	bl	213634 <make_good>
  21260c:	tbnz	w0, #31, 2128f0 <verb_status+0x360>
  212610:	ldp	x2, x0, [x29, #-24]
  212614:	ldr	x1, [sp, #24]
  212618:	add	x3, sp, #0x28
  21261c:	bl	213700 <make_bad>
  212620:	tbnz	w0, #31, 212908 <verb_status+0x378>
  212624:	mov	w0, wzr
  212628:	bl	213d80 <log_get_max_level_realm@plt>
  21262c:	cmp	w0, #0x7
  212630:	b.lt	21266c <verb_status+0xdc>  // b.tstop
  212634:	ldur	x6, [x29, #-8]
  212638:	ldur	x7, [x29, #-32]
  21263c:	ldr	x8, [sp, #40]
  212640:	adrp	x2, 201000 <run.verbs-0x4d0>
  212644:	adrp	x4, 201000 <run.verbs-0x4d0>
  212648:	adrp	x5, 201000 <run.verbs-0x4d0>
  21264c:	add	x2, x2, #0xca6
  212650:	add	x4, x4, #0x653
  212654:	add	x5, x5, #0xb87
  212658:	mov	w0, #0x7                   	// #7
  21265c:	mov	w3, #0x15e                 	// #350
  212660:	mov	w1, wzr
  212664:	str	x8, [sp]
  212668:	bl	213d90 <log_internal_realm@plt>
  21266c:	mov	w0, wzr
  212670:	bl	213d80 <log_get_max_level_realm@plt>
  212674:	cmp	w0, #0x7
  212678:	b.lt	2126a8 <verb_status+0x118>  // b.tstop
  21267c:	ldp	x7, x6, [sp, #24]
  212680:	adrp	x2, 201000 <run.verbs-0x4d0>
  212684:	adrp	x4, 201000 <run.verbs-0x4d0>
  212688:	adrp	x5, 201000 <run.verbs-0x4d0>
  21268c:	add	x2, x2, #0xca6
  212690:	add	x4, x4, #0x653
  212694:	add	x5, x5, #0x6cf
  212698:	mov	w0, #0x7                   	// #7
  21269c:	mov	w3, #0x162                 	// #354
  2126a0:	mov	w1, wzr
  2126a4:	bl	213d90 <log_internal_realm@plt>
  2126a8:	adrp	x8, 234000 <_DYNAMIC+0xffc0>
  2126ac:	ldr	x8, [x8, #1008]
  2126b0:	cbz	x8, 2128b0 <verb_status+0x320>
  2126b4:	ldr	x0, [x8]
  2126b8:	cbz	x0, 2128b0 <verb_status+0x320>
  2126bc:	adrp	x19, 201000 <run.verbs-0x4d0>
  2126c0:	adrp	x20, 201000 <run.verbs-0x4d0>
  2126c4:	adrp	x21, 201000 <run.verbs-0x4d0>
  2126c8:	adrp	x22, 201000 <run.verbs-0x4d0>
  2126cc:	add	x25, x8, #0x8
  2126d0:	mov	w23, #0xffffffff            	// #-1
  2126d4:	add	x19, x19, #0xca6
  2126d8:	add	x20, x20, #0x653
  2126dc:	add	x21, x21, #0xd60
  2126e0:	add	x22, x22, #0x6c1
  2126e4:	mov	w1, #0x4000                	// #16384
  2126e8:	movk	w1, #0x8, lsl #16
  2126ec:	str	w23, [sp, #20]
  2126f0:	bl	213e10 <open64@plt>
  2126f4:	str	w0, [sp, #20]
  2126f8:	tbnz	w0, #31, 212730 <verb_status+0x1a0>
  2126fc:	mov	w27, w0
  212700:	ldur	x0, [x29, #-8]
  212704:	bl	213818 <skip_slash>
  212708:	mov	x1, x0
  21270c:	mov	w0, w27
  212710:	mov	w2, wzr
  212714:	mov	w3, wzr
  212718:	bl	213e20 <faccessat@plt>
  21271c:	tbnz	w0, #31, 212748 <verb_status+0x1b8>
  212720:	mov	x0, x22
  212724:	bl	213e00 <puts@plt>
  212728:	mov	w26, wzr
  21272c:	b	212890 <verb_status+0x300>
  212730:	bl	213e30 <__errno_location@plt>
  212734:	ldr	w24, [x0]
  212738:	cmp	w24, #0x2
  21273c:	b.ne	212788 <verb_status+0x1f8>  // b.any
  212740:	mov	w24, #0x4                   	// #4
  212744:	b	212894 <verb_status+0x304>
  212748:	bl	213e30 <__errno_location@plt>
  21274c:	ldr	w24, [x0]
  212750:	cmp	w24, #0x2
  212754:	b.ne	2127b8 <verb_status+0x228>  // b.any
  212758:	mov	x28, x0
  21275c:	ldur	x0, [x29, #-32]
  212760:	bl	213818 <skip_slash>
  212764:	mov	x1, x0
  212768:	mov	w0, w27
  21276c:	mov	w2, wzr
  212770:	mov	w3, wzr
  212774:	bl	213e20 <faccessat@plt>
  212778:	tbnz	w0, #31, 2127f4 <verb_status+0x264>
  21277c:	adrp	x0, 201000 <run.verbs-0x4d0>
  212780:	add	x0, x0, #0x91e
  212784:	b	212724 <verb_status+0x194>
  212788:	mov	w0, wzr
  21278c:	bl	213d80 <log_get_max_level_realm@plt>
  212790:	cmp	w0, #0x3
  212794:	b.lt	212880 <verb_status+0x2f0>  // b.tstop
  212798:	ldur	x6, [x25, #-8]
  21279c:	mov	w0, #0x3                   	// #3
  2127a0:	mov	w3, #0x16c                 	// #364
  2127a4:	mov	w1, w24
  2127a8:	mov	x2, x19
  2127ac:	mov	x4, x20
  2127b0:	mov	x5, x21
  2127b4:	b	2127e8 <verb_status+0x258>
  2127b8:	mov	w0, wzr
  2127bc:	bl	213d80 <log_get_max_level_realm@plt>
  2127c0:	cmp	w0, #0x3
  2127c4:	b.lt	212880 <verb_status+0x2f0>  // b.tstop
  2127c8:	ldur	x6, [x29, #-8]
  2127cc:	mov	w0, #0x3                   	// #3
  2127d0:	mov	w3, #0x174                 	// #372
  2127d4:	adrp	x5, 201000 <run.verbs-0x4d0>
  2127d8:	mov	w1, w24
  2127dc:	mov	x2, x19
  2127e0:	mov	x4, x20
  2127e4:	add	x5, x5, #0xe12
  2127e8:	bl	213d90 <log_internal_realm@plt>
  2127ec:	mov	w26, w0
  2127f0:	b	212890 <verb_status+0x300>
  2127f4:	ldr	w24, [x28]
  2127f8:	cmp	w24, #0x2
  2127fc:	b.ne	21282c <verb_status+0x29c>  // b.any
  212800:	ldr	x0, [sp, #40]
  212804:	bl	213818 <skip_slash>
  212808:	mov	x1, x0
  21280c:	mov	w0, w27
  212810:	mov	w2, wzr
  212814:	mov	w3, wzr
  212818:	bl	213e20 <faccessat@plt>
  21281c:	tbnz	w0, #31, 21284c <verb_status+0x2bc>
  212820:	adrp	x0, 201000 <run.verbs-0x4d0>
  212824:	add	x0, x0, #0xf28
  212828:	b	212724 <verb_status+0x194>
  21282c:	mov	w0, wzr
  212830:	bl	213d80 <log_get_max_level_realm@plt>
  212834:	cmp	w0, #0x3
  212838:	b.lt	212880 <verb_status+0x2f0>  // b.tstop
  21283c:	ldur	x6, [x29, #-32]
  212840:	mov	w0, #0x3                   	// #3
  212844:	mov	w3, #0x17c                 	// #380
  212848:	b	2127d4 <verb_status+0x244>
  21284c:	ldr	w24, [x28]
  212850:	cmp	w24, #0x2
  212854:	b.ne	212860 <verb_status+0x2d0>  // b.any
  212858:	mov	w24, wzr
  21285c:	b	212894 <verb_status+0x304>
  212860:	mov	w0, wzr
  212864:	bl	213d80 <log_get_max_level_realm@plt>
  212868:	cmp	w0, #0x3
  21286c:	b.lt	212880 <verb_status+0x2f0>  // b.tstop
  212870:	ldr	x6, [sp, #40]
  212874:	mov	w0, #0x3                   	// #3
  212878:	mov	w3, #0x183                 	// #387
  21287c:	b	2127d4 <verb_status+0x244>
  212880:	cmp	w24, #0x0
  212884:	mov	w8, wzr
  212888:	cneg	w9, w24, mi  // mi = first
  21288c:	sub	w26, w8, w9, uxtb
  212890:	mov	w24, #0x1                   	// #1
  212894:	add	x0, sp, #0x14
  212898:	bl	213800 <closep>
  21289c:	orr	w8, w24, #0x4
  2128a0:	cmp	w8, #0x4
  2128a4:	b.ne	212928 <verb_status+0x398>  // b.any
  2128a8:	ldr	x0, [x25], #8
  2128ac:	cbnz	x0, 2126e4 <verb_status+0x154>
  2128b0:	mov	w0, wzr
  2128b4:	bl	213d80 <log_get_max_level_realm@plt>
  2128b8:	cmp	w0, #0x3
  2128bc:	b.lt	212974 <verb_status+0x3e4>  // b.tstop
  2128c0:	adrp	x2, 201000 <run.verbs-0x4d0>
  2128c4:	adrp	x4, 201000 <run.verbs-0x4d0>
  2128c8:	adrp	x5, 201000 <run.verbs-0x4d0>
  2128cc:	mov	w1, #0x10                  	// #16
  2128d0:	add	x2, x2, #0xca6
  2128d4:	add	x4, x4, #0x653
  2128d8:	add	x5, x5, #0x6f0
  2128dc:	mov	w0, #0x3                   	// #3
  2128e0:	movk	w1, #0x4000, lsl #16
  2128e4:	mov	w3, #0x188                 	// #392
  2128e8:	bl	213d90 <log_internal_realm@plt>
  2128ec:	b	212924 <verb_status+0x394>
  2128f0:	adrp	x1, 201000 <run.verbs-0x4d0>
  2128f4:	adrp	x3, 201000 <run.verbs-0x4d0>
  2128f8:	add	x1, x1, #0xca6
  2128fc:	add	x3, x3, #0x653
  212900:	mov	w2, #0x153                 	// #339
  212904:	b	21291c <verb_status+0x38c>
  212908:	adrp	x1, 201000 <run.verbs-0x4d0>
  21290c:	adrp	x3, 201000 <run.verbs-0x4d0>
  212910:	add	x1, x1, #0xca6
  212914:	add	x3, x3, #0x653
  212918:	mov	w2, #0x157                 	// #343
  21291c:	mov	w0, wzr
  212920:	bl	213df0 <log_oom_internal@plt>
  212924:	mov	w26, w0
  212928:	add	x0, sp, #0x28
  21292c:	bl	21313c <freep>
  212930:	sub	x0, x29, #0x20
  212934:	bl	21313c <freep>
  212938:	sub	x0, x29, #0x18
  21293c:	bl	21313c <freep>
  212940:	sub	x0, x29, #0x10
  212944:	bl	21313c <freep>
  212948:	sub	x0, x29, #0x8
  21294c:	bl	21313c <freep>
  212950:	mov	w0, w26
  212954:	ldp	x20, x19, [sp, #160]
  212958:	ldp	x22, x21, [sp, #144]
  21295c:	ldp	x24, x23, [sp, #128]
  212960:	ldp	x26, x25, [sp, #112]
  212964:	ldp	x28, x27, [sp, #96]
  212968:	ldp	x29, x30, [sp, #80]
  21296c:	add	sp, sp, #0xb0
  212970:	ret
  212974:	mov	w26, #0xfffffff0            	// #-16
  212978:	b	212928 <verb_status+0x398>

000000000021297c <verb_set>:
  21297c:	sub	sp, sp, #0xa0
  212980:	stp	x29, x30, [sp, #64]
  212984:	add	x29, sp, #0x40
  212988:	stp	x20, x19, [sp, #144]
  21298c:	mov	x19, x1
  212990:	sub	x0, x29, #0x8
  212994:	sub	x1, x29, #0x10
  212998:	add	x3, sp, #0x8
  21299c:	sub	x4, x29, #0x18
  2129a0:	mov	x2, xzr
  2129a4:	stp	x28, x27, [sp, #80]
  2129a8:	stp	x26, x25, [sp, #96]
  2129ac:	stp	x24, x23, [sp, #112]
  2129b0:	stp	x22, x21, [sp, #128]
  2129b4:	stp	xzr, xzr, [x29, #-16]
  2129b8:	stur	xzr, [x29, #-24]
  2129bc:	stp	xzr, xzr, [sp, #24]
  2129c0:	str	xzr, [sp, #16]
  2129c4:	bl	2131ac <acquire_boot_count_path>
  2129c8:	cmn	w0, #0x31
  2129cc:	b.ne	212a10 <verb_set+0x94>  // b.any
  2129d0:	mov	w0, wzr
  2129d4:	bl	213d80 <log_get_max_level_realm@plt>
  2129d8:	cmp	w0, #0x3
  2129dc:	b.lt	212a90 <verb_set+0x114>  // b.tstop
  2129e0:	adrp	x2, 201000 <run.verbs-0x4d0>
  2129e4:	adrp	x4, 201000 <run.verbs-0x4d0>
  2129e8:	adrp	x5, 201000 <run.verbs-0x4d0>
  2129ec:	add	x2, x2, #0xca6
  2129f0:	add	x4, x4, #0x684
  2129f4:	add	x5, x5, #0xcbc
  2129f8:	mov	w0, #0x3                   	// #3
  2129fc:	mov	w1, #0xffffffcf            	// #-49
  212a00:	mov	w3, #0x194                 	// #404
  212a04:	bl	213d90 <log_internal_realm@plt>
  212a08:	mov	w27, w0
  212a0c:	b	212f5c <verb_set+0x5e0>
  212a10:	mov	w27, w0
  212a14:	tbnz	w0, #31, 212f5c <verb_set+0x5e0>
  212a18:	bl	21346c <acquire_path>
  212a1c:	tbnz	w0, #31, 212a98 <verb_set+0x11c>
  212a20:	ldp	x1, x0, [x29, #-24]
  212a24:	add	x2, sp, #0x20
  212a28:	bl	213634 <make_good>
  212a2c:	tbnz	w0, #31, 212aa0 <verb_set+0x124>
  212a30:	ldp	x2, x0, [x29, #-24]
  212a34:	ldr	x1, [sp, #8]
  212a38:	add	x3, sp, #0x18
  212a3c:	bl	213700 <make_bad>
  212a40:	tbnz	w0, #31, 212ab8 <verb_set+0x13c>
  212a44:	ldr	x20, [x19]
  212a48:	adrp	x1, 201000 <run.verbs-0x4d0>
  212a4c:	add	x1, x1, #0x91e
  212a50:	mov	x0, x20
  212a54:	bl	213e40 <strcmp@plt>
  212a58:	cbz	w0, 212adc <verb_set+0x160>
  212a5c:	adrp	x1, 201000 <run.verbs-0x4d0>
  212a60:	add	x1, x1, #0xf28
  212a64:	mov	x0, x20
  212a68:	bl	213e40 <strcmp@plt>
  212a6c:	cbz	w0, 212aec <verb_set+0x170>
  212a70:	adrp	x1, 201000 <run.verbs-0x4d0>
  212a74:	add	x1, x1, #0x6c1
  212a78:	mov	x0, x20
  212a7c:	bl	213e40 <strcmp@plt>
  212a80:	cbnz	w0, 212fb8 <verb_set+0x63c>
  212a84:	sub	x9, x29, #0x8
  212a88:	add	x8, sp, #0x20
  212a8c:	b	212ae4 <verb_set+0x168>
  212a90:	mov	w27, #0xffffffcf            	// #-49
  212a94:	b	212f5c <verb_set+0x5e0>
  212a98:	mov	w27, w0
  212a9c:	b	212f5c <verb_set+0x5e0>
  212aa0:	adrp	x1, 201000 <run.verbs-0x4d0>
  212aa4:	adrp	x3, 201000 <run.verbs-0x4d0>
  212aa8:	add	x1, x1, #0xca6
  212aac:	add	x3, x3, #0x684
  212ab0:	mov	w2, #0x19e                 	// #414
  212ab4:	b	212acc <verb_set+0x150>
  212ab8:	adrp	x1, 201000 <run.verbs-0x4d0>
  212abc:	adrp	x3, 201000 <run.verbs-0x4d0>
  212ac0:	add	x1, x1, #0xca6
  212ac4:	add	x3, x3, #0x684
  212ac8:	mov	w2, #0x1a2                 	// #418
  212acc:	mov	w0, wzr
  212ad0:	bl	213df0 <log_oom_internal@plt>
  212ad4:	mov	w27, w0
  212ad8:	b	212f5c <verb_set+0x5e0>
  212adc:	add	x9, sp, #0x20
  212ae0:	sub	x8, x29, #0x8
  212ae4:	add	x10, sp, #0x18
  212ae8:	b	212af8 <verb_set+0x17c>
  212aec:	add	x9, sp, #0x18
  212af0:	sub	x8, x29, #0x8
  212af4:	add	x10, sp, #0x20
  212af8:	adrp	x11, 234000 <_DYNAMIC+0xffc0>
  212afc:	ldr	x11, [x11, #1008]
  212b00:	ldr	x20, [x9]
  212b04:	cbz	x11, 212f18 <verb_set+0x59c>
  212b08:	ldr	x0, [x11]
  212b0c:	ldr	x26, [sp, #16]
  212b10:	cbz	x0, 212f14 <verb_set+0x598>
  212b14:	ldr	x21, [x8]
  212b18:	ldr	x22, [x10]
  212b1c:	add	x23, x11, #0x8
  212b20:	mov	w24, #0xffffffff            	// #-1
  212b24:	b	212b30 <verb_set+0x1b4>
  212b28:	ldr	x0, [x23], #8
  212b2c:	cbz	x0, 212f14 <verb_set+0x598>
  212b30:	mov	w1, #0x4000                	// #16384
  212b34:	movk	w1, #0x8, lsl #16
  212b38:	str	w24, [sp, #4]
  212b3c:	bl	213e10 <open64@plt>
  212b40:	str	w0, [sp, #4]
  212b44:	tbnz	w0, #31, 212bec <verb_set+0x270>
  212b48:	mov	w28, w0
  212b4c:	mov	x0, x21
  212b50:	bl	213818 <skip_slash>
  212b54:	mov	x25, x0
  212b58:	mov	x0, x20
  212b5c:	bl	213818 <skip_slash>
  212b60:	mov	x3, x0
  212b64:	mov	w0, w28
  212b68:	mov	x1, x25
  212b6c:	mov	w2, w28
  212b70:	bl	213e50 <rename_noreplace@plt>
  212b74:	cmn	w0, #0x11
  212b78:	b.eq	212be4 <verb_set+0x268>  // b.none
  212b7c:	mov	w25, w0
  212b80:	cmn	w0, #0x2
  212b84:	b.ne	212c34 <verb_set+0x2b8>  // b.any
  212b88:	mov	x0, x22
  212b8c:	bl	213818 <skip_slash>
  212b90:	mov	x25, x0
  212b94:	mov	x0, x20
  212b98:	bl	213818 <skip_slash>
  212b9c:	mov	x3, x0
  212ba0:	mov	w0, w28
  212ba4:	mov	x1, x25
  212ba8:	mov	w2, w28
  212bac:	bl	213e50 <rename_noreplace@plt>
  212bb0:	cmn	w0, #0x11
  212bb4:	b.eq	212be4 <verb_set+0x268>  // b.none
  212bb8:	mov	w25, w0
  212bbc:	cmn	w0, #0x2
  212bc0:	b.ne	212ca8 <verb_set+0x32c>  // b.any
  212bc4:	mov	x0, x20
  212bc8:	bl	213818 <skip_slash>
  212bcc:	mov	x1, x0
  212bd0:	mov	w0, w28
  212bd4:	mov	w2, wzr
  212bd8:	mov	w3, wzr
  212bdc:	bl	213e20 <faccessat@plt>
  212be0:	tbnz	w0, #31, 212dfc <verb_set+0x480>
  212be4:	mov	w25, #0x7                   	// #7
  212be8:	b	212eb0 <verb_set+0x534>
  212bec:	bl	213e30 <__errno_location@plt>
  212bf0:	ldr	w25, [x0]
  212bf4:	mov	w0, wzr
  212bf8:	bl	213d80 <log_get_max_level_realm@plt>
  212bfc:	cmp	w0, #0x3
  212c00:	b.lt	212e9c <verb_set+0x520>  // b.tstop
  212c04:	ldur	x6, [x23, #-8]
  212c08:	adrp	x2, 201000 <run.verbs-0x4d0>
  212c0c:	adrp	x4, 201000 <run.verbs-0x4d0>
  212c10:	adrp	x5, 201000 <run.verbs-0x4d0>
  212c14:	mov	w0, #0x3                   	// #3
  212c18:	mov	w3, #0x1b9                 	// #441
  212c1c:	mov	w1, w25
  212c20:	add	x2, x2, #0xca6
  212c24:	add	x4, x4, #0x684
  212c28:	add	x5, x5, #0xd60
  212c2c:	bl	213d90 <log_internal_realm@plt>
  212c30:	b	212e4c <verb_set+0x4d0>
  212c34:	mov	w0, wzr
  212c38:	bl	213d80 <log_get_max_level_realm@plt>
  212c3c:	tbnz	w25, #31, 212c74 <verb_set+0x2f8>
  212c40:	cmp	w0, #0x7
  212c44:	b.lt	212cec <verb_set+0x370>  // b.tstop
  212c48:	adrp	x2, 201000 <run.verbs-0x4d0>
  212c4c:	adrp	x4, 201000 <run.verbs-0x4d0>
  212c50:	adrp	x5, 201000 <run.verbs-0x4d0>
  212c54:	mov	w0, #0x7                   	// #7
  212c58:	mov	w3, #0x1d5                 	// #469
  212c5c:	mov	w1, wzr
  212c60:	add	x2, x2, #0xca6
  212c64:	add	x4, x4, #0x684
  212c68:	add	x5, x5, #0xb0f
  212c6c:	mov	x6, x21
  212c70:	b	212ce4 <verb_set+0x368>
  212c74:	cmp	w0, #0x3
  212c78:	b.lt	212e54 <verb_set+0x4d8>  // b.tstop
  212c7c:	adrp	x2, 201000 <run.verbs-0x4d0>
  212c80:	adrp	x4, 201000 <run.verbs-0x4d0>
  212c84:	adrp	x5, 201000 <run.verbs-0x4d0>
  212c88:	mov	w0, #0x3                   	// #3
  212c8c:	mov	w3, #0x1d3                 	// #467
  212c90:	mov	w1, w25
  212c94:	add	x2, x2, #0xca6
  212c98:	add	x4, x4, #0x684
  212c9c:	add	x5, x5, #0xb32
  212ca0:	mov	x6, x21
  212ca4:	b	212e44 <verb_set+0x4c8>
  212ca8:	mov	w0, wzr
  212cac:	bl	213d80 <log_get_max_level_realm@plt>
  212cb0:	tbnz	w25, #31, 212e14 <verb_set+0x498>
  212cb4:	cmp	w0, #0x7
  212cb8:	b.lt	212cec <verb_set+0x370>  // b.tstop
  212cbc:	adrp	x2, 201000 <run.verbs-0x4d0>
  212cc0:	adrp	x4, 201000 <run.verbs-0x4d0>
  212cc4:	adrp	x5, 201000 <run.verbs-0x4d0>
  212cc8:	mov	w0, #0x7                   	// #7
  212ccc:	mov	w3, #0x1d0                 	// #464
  212cd0:	mov	w1, wzr
  212cd4:	add	x2, x2, #0xca6
  212cd8:	add	x4, x4, #0x684
  212cdc:	add	x5, x5, #0xb0f
  212ce0:	mov	x6, x22
  212ce4:	mov	x7, x20
  212ce8:	bl	213d90 <log_internal_realm@plt>
  212cec:	mov	x0, x20
  212cf0:	bl	213e60 <dirname_malloc@plt>
  212cf4:	mov	x26, x0
  212cf8:	cbz	x0, 212de0 <verb_set+0x464>
  212cfc:	mov	x0, x26
  212d00:	bl	213818 <skip_slash>
  212d04:	mov	x1, x0
  212d08:	mov	w0, w28
  212d0c:	bl	213e70 <fsync_path_at@plt>
  212d10:	tbz	w0, #31, 212d50 <verb_set+0x3d4>
  212d14:	mov	w0, wzr
  212d18:	bl	213d80 <log_get_max_level_realm@plt>
  212d1c:	cmp	w0, #0x7
  212d20:	b.lt	212d50 <verb_set+0x3d4>  // b.tstop
  212d24:	bl	213e30 <__errno_location@plt>
  212d28:	ldr	w1, [x0]
  212d2c:	adrp	x2, 201000 <run.verbs-0x4d0>
  212d30:	adrp	x4, 201000 <run.verbs-0x4d0>
  212d34:	adrp	x5, 201000 <run.verbs-0x4d0>
  212d38:	mov	w0, #0x7                   	// #7
  212d3c:	mov	w3, #0x1de                 	// #478
  212d40:	add	x2, x2, #0xca6
  212d44:	add	x4, x4, #0x684
  212d48:	add	x5, x5, #0x97b
  212d4c:	bl	213d90 <log_internal_realm@plt>
  212d50:	mov	w0, w28
  212d54:	bl	213e80 <syncfs@plt>
  212d58:	tbz	w0, #31, 212d98 <verb_set+0x41c>
  212d5c:	mov	w0, wzr
  212d60:	bl	213d80 <log_get_max_level_realm@plt>
  212d64:	cmp	w0, #0x6
  212d68:	b.le	212d98 <verb_set+0x41c>
  212d6c:	bl	213e30 <__errno_location@plt>
  212d70:	ldr	w1, [x0]
  212d74:	adrp	x2, 201000 <run.verbs-0x4d0>
  212d78:	adrp	x4, 201000 <run.verbs-0x4d0>
  212d7c:	adrp	x5, 201000 <run.verbs-0x4d0>
  212d80:	mov	w0, #0x7                   	// #7
  212d84:	mov	w3, #0x1e2                 	// #482
  212d88:	add	x2, x2, #0xca6
  212d8c:	add	x4, x4, #0x684
  212d90:	add	x5, x5, #0x68d
  212d94:	bl	213d90 <log_internal_realm@plt>
  212d98:	mov	w0, wzr
  212d9c:	bl	213d80 <log_get_max_level_realm@plt>
  212da0:	cmp	w0, #0x6
  212da4:	b.lt	212dd8 <verb_set+0x45c>  // b.tstop
  212da8:	ldr	x6, [x19]
  212dac:	ldr	x7, [sp, #8]
  212db0:	adrp	x2, 201000 <run.verbs-0x4d0>
  212db4:	adrp	x4, 201000 <run.verbs-0x4d0>
  212db8:	adrp	x5, 201000 <run.verbs-0x4d0>
  212dbc:	mov	w0, #0x6                   	// #6
  212dc0:	mov	w3, #0x1e4                 	// #484
  212dc4:	mov	w1, wzr
  212dc8:	add	x2, x2, #0xca6
  212dcc:	add	x4, x4, #0x684
  212dd0:	add	x5, x5, #0x61c
  212dd4:	bl	213d90 <log_internal_realm@plt>
  212dd8:	mov	w25, wzr
  212ddc:	b	212eb0 <verb_set+0x534>
  212de0:	adrp	x1, 201000 <run.verbs-0x4d0>
  212de4:	adrp	x3, 201000 <run.verbs-0x4d0>
  212de8:	mov	w2, #0x1da                 	// #474
  212dec:	add	x1, x1, #0xca6
  212df0:	add	x3, x3, #0x684
  212df4:	bl	213df0 <log_oom_internal@plt>
  212df8:	b	212e4c <verb_set+0x4d0>
  212dfc:	bl	213e30 <__errno_location@plt>
  212e00:	ldr	w25, [x0]
  212e04:	cmp	w25, #0x2
  212e08:	b.ne	212e60 <verb_set+0x4e4>  // b.any
  212e0c:	mov	w25, #0x6                   	// #6
  212e10:	b	212eb0 <verb_set+0x534>
  212e14:	cmp	w0, #0x3
  212e18:	b.lt	212e54 <verb_set+0x4d8>  // b.tstop
  212e1c:	adrp	x2, 201000 <run.verbs-0x4d0>
  212e20:	adrp	x4, 201000 <run.verbs-0x4d0>
  212e24:	adrp	x5, 201000 <run.verbs-0x4d0>
  212e28:	mov	w0, #0x3                   	// #3
  212e2c:	mov	w3, #0x1ce                 	// #462
  212e30:	mov	w1, w25
  212e34:	add	x2, x2, #0xca6
  212e38:	add	x4, x4, #0x684
  212e3c:	add	x5, x5, #0xb32
  212e40:	mov	x6, x22
  212e44:	mov	x7, x20
  212e48:	bl	213d90 <log_internal_realm@plt>
  212e4c:	mov	w27, w0
  212e50:	b	212eac <verb_set+0x530>
  212e54:	mov	w8, wzr
  212e58:	neg	w9, w25
  212e5c:	b	212ea8 <verb_set+0x52c>
  212e60:	mov	w0, wzr
  212e64:	bl	213d80 <log_get_max_level_realm@plt>
  212e68:	cmp	w0, #0x3
  212e6c:	b.lt	212e9c <verb_set+0x520>  // b.tstop
  212e70:	adrp	x2, 201000 <run.verbs-0x4d0>
  212e74:	adrp	x4, 201000 <run.verbs-0x4d0>
  212e78:	adrp	x5, 201000 <run.verbs-0x4d0>
  212e7c:	mov	w0, #0x3                   	// #3
  212e80:	mov	w3, #0x1c9                 	// #457
  212e84:	mov	w1, w25
  212e88:	add	x2, x2, #0xca6
  212e8c:	add	x4, x4, #0x684
  212e90:	add	x5, x5, #0x8f1
  212e94:	mov	x6, x20
  212e98:	b	212c2c <verb_set+0x2b0>
  212e9c:	cmp	w25, #0x0
  212ea0:	mov	w8, wzr
  212ea4:	cneg	w9, w25, mi  // mi = first
  212ea8:	sub	w27, w8, w9, uxtb
  212eac:	mov	w25, #0x1                   	// #1
  212eb0:	add	x0, sp, #0x4
  212eb4:	bl	213800 <closep>
  212eb8:	cbz	w25, 212b28 <verb_set+0x1ac>
  212ebc:	cmp	w25, #0x6
  212ec0:	b.eq	212b28 <verb_set+0x1ac>  // b.none
  212ec4:	cmp	w25, #0x7
  212ec8:	b.ne	212fb0 <verb_set+0x634>  // b.any
  212ecc:	mov	w0, wzr
  212ed0:	str	x26, [sp, #16]
  212ed4:	bl	213d80 <log_get_max_level_realm@plt>
  212ed8:	cmp	w0, #0x7
  212edc:	mov	w27, wzr
  212ee0:	b.lt	212f5c <verb_set+0x5e0>  // b.tstop
  212ee4:	adrp	x2, 201000 <run.verbs-0x4d0>
  212ee8:	adrp	x4, 201000 <run.verbs-0x4d0>
  212eec:	adrp	x5, 201000 <run.verbs-0x4d0>
  212ef0:	add	x2, x2, #0xca6
  212ef4:	add	x4, x4, #0x684
  212ef8:	add	x5, x5, #0xdcc
  212efc:	mov	w0, #0x7                   	// #7
  212f00:	mov	w3, #0x1eb                 	// #491
  212f04:	mov	w1, wzr
  212f08:	bl	213d90 <log_internal_realm@plt>
  212f0c:	mov	w27, wzr
  212f10:	b	212f5c <verb_set+0x5e0>
  212f14:	str	x26, [sp, #16]
  212f18:	mov	w0, wzr
  212f1c:	bl	213d80 <log_get_max_level_realm@plt>
  212f20:	cmp	w0, #0x3
  212f24:	b.lt	212f58 <verb_set+0x5dc>  // b.tstop
  212f28:	adrp	x2, 201000 <run.verbs-0x4d0>
  212f2c:	adrp	x4, 201000 <run.verbs-0x4d0>
  212f30:	adrp	x5, 201000 <run.verbs-0x4d0>
  212f34:	mov	w1, #0x10                  	// #16
  212f38:	add	x2, x2, #0xca6
  212f3c:	add	x4, x4, #0x684
  212f40:	add	x5, x5, #0xbe7
  212f44:	mov	w0, #0x3                   	// #3
  212f48:	movk	w1, #0x4000, lsl #16
  212f4c:	mov	w3, #0x1e7                 	// #487
  212f50:	mov	x6, x20
  212f54:	bl	213d90 <log_internal_realm@plt>
  212f58:	mov	w27, #0x1                   	// #1
  212f5c:	add	x0, sp, #0x10
  212f60:	bl	21313c <freep>
  212f64:	add	x0, sp, #0x18
  212f68:	bl	21313c <freep>
  212f6c:	add	x0, sp, #0x20
  212f70:	bl	21313c <freep>
  212f74:	sub	x0, x29, #0x18
  212f78:	bl	21313c <freep>
  212f7c:	sub	x0, x29, #0x10
  212f80:	bl	21313c <freep>
  212f84:	sub	x0, x29, #0x8
  212f88:	bl	21313c <freep>
  212f8c:	mov	w0, w27
  212f90:	ldp	x20, x19, [sp, #144]
  212f94:	ldp	x22, x21, [sp, #128]
  212f98:	ldp	x24, x23, [sp, #112]
  212f9c:	ldp	x26, x25, [sp, #96]
  212fa0:	ldp	x28, x27, [sp, #80]
  212fa4:	ldp	x29, x30, [sp, #64]
  212fa8:	add	sp, sp, #0xa0
  212fac:	ret
  212fb0:	str	x26, [sp, #16]
  212fb4:	b	212f5c <verb_set+0x5e0>
  212fb8:	adrp	x1, 201000 <run.verbs-0x4d0>
  212fbc:	adrp	x2, 201000 <run.verbs-0x4d0>
  212fc0:	adrp	x4, 201000 <run.verbs-0x4d0>
  212fc4:	add	x1, x1, #0xf31
  212fc8:	add	x2, x2, #0xca6
  212fcc:	add	x4, x4, #0xce5
  212fd0:	mov	w3, #0x1ae                 	// #430
  212fd4:	mov	w0, wzr
  212fd8:	bl	213e90 <log_assert_failed_realm@plt>

0000000000212fdc <parse_argv>:
  212fdc:	stp	x29, x30, [sp, #-64]!
  212fe0:	stp	x24, x23, [sp, #16]
  212fe4:	stp	x22, x21, [sp, #32]
  212fe8:	stp	x20, x19, [sp, #48]
  212fec:	mov	x29, sp
  212ff0:	tbnz	w0, #31, 2130d0 <parse_argv+0xf4>
  212ff4:	mov	x19, x1
  212ff8:	cbz	x1, 2130f4 <parse_argv+0x118>
  212ffc:	adrp	x21, 201000 <run.verbs-0x4d0>
  213000:	adrp	x22, 201000 <run.verbs-0x4d0>
  213004:	adrp	x23, 234000 <_DYNAMIC+0xffc0>
  213008:	mov	w20, w0
  21300c:	add	x21, x21, #0xedd
  213010:	add	x22, x22, #0x590
  213014:	adrp	x24, 234000 <_DYNAMIC+0xffc0>
  213018:	add	x23, x23, #0x3f0
  21301c:	mov	w0, w20
  213020:	mov	x1, x19
  213024:	mov	x2, x21
  213028:	mov	x3, x22
  21302c:	mov	x4, xzr
  213030:	bl	213ea0 <getopt_long@plt>
  213034:	tbnz	w0, #31, 2130c8 <parse_argv+0xec>
  213038:	cmp	w0, #0xff
  21303c:	b.le	213078 <parse_argv+0x9c>
  213040:	cmp	w0, #0x100
  213044:	b.ne	213088 <parse_argv+0xac>  // b.any
  213048:	ldr	x1, [x24, #1040]
  21304c:	mov	x0, x23
  213050:	bl	213eb0 <strv_extend@plt>
  213054:	tbz	w0, #31, 21301c <parse_argv+0x40>
  213058:	adrp	x1, 201000 <run.verbs-0x4d0>
  21305c:	adrp	x3, 201000 <run.verbs-0x4d0>
  213060:	add	x1, x1, #0xca6
  213064:	add	x3, x3, #0xaf5
  213068:	mov	w2, #0x55                  	// #85
  21306c:	mov	w0, wzr
  213070:	bl	213df0 <log_oom_internal@plt>
  213074:	b	2130b4 <parse_argv+0xd8>
  213078:	cmp	w0, #0x3f
  21307c:	b.ne	213098 <parse_argv+0xbc>  // b.any
  213080:	mov	w0, #0xffffffea            	// #-22
  213084:	b	2130b4 <parse_argv+0xd8>
  213088:	cmp	w0, #0x101
  21308c:	b.ne	213118 <parse_argv+0x13c>  // b.any
  213090:	bl	213ec0 <version@plt>
  213094:	b	2130b4 <parse_argv+0xd8>
  213098:	cmp	w0, #0x68
  21309c:	b.ne	213118 <parse_argv+0x13c>  // b.any
  2130a0:	mov	w0, wzr
  2130a4:	mov	x1, xzr
  2130a8:	mov	x2, xzr
  2130ac:	bl	2124ec <help>
  2130b0:	mov	w0, wzr
  2130b4:	ldp	x20, x19, [sp, #48]
  2130b8:	ldp	x22, x21, [sp, #32]
  2130bc:	ldp	x24, x23, [sp, #16]
  2130c0:	ldp	x29, x30, [sp], #64
  2130c4:	ret
  2130c8:	mov	w0, #0x1                   	// #1
  2130cc:	b	2130b4 <parse_argv+0xd8>
  2130d0:	adrp	x1, 201000 <run.verbs-0x4d0>
  2130d4:	adrp	x2, 201000 <run.verbs-0x4d0>
  2130d8:	adrp	x4, 201000 <run.verbs-0x4d0>
  2130dc:	add	x1, x1, #0x96b
  2130e0:	add	x2, x2, #0xca6
  2130e4:	add	x4, x4, #0xfda
  2130e8:	mov	w3, #0x45                  	// #69
  2130ec:	mov	w0, wzr
  2130f0:	bl	213e90 <log_assert_failed_realm@plt>
  2130f4:	adrp	x1, 201000 <run.verbs-0x4d0>
  2130f8:	adrp	x2, 201000 <run.verbs-0x4d0>
  2130fc:	adrp	x4, 201000 <run.verbs-0x4d0>
  213100:	add	x1, x1, #0x9fd
  213104:	add	x2, x2, #0xca6
  213108:	add	x4, x4, #0xfda
  21310c:	mov	w3, #0x46                  	// #70
  213110:	mov	w0, wzr
  213114:	bl	213e90 <log_assert_failed_realm@plt>
  213118:	adrp	x1, 201000 <run.verbs-0x4d0>
  21311c:	adrp	x2, 201000 <run.verbs-0x4d0>
  213120:	adrp	x4, 201000 <run.verbs-0x4d0>
  213124:	add	x1, x1, #0xe03
  213128:	add	x2, x2, #0xca6
  21312c:	add	x4, x4, #0xfda
  213130:	mov	w3, #0x5c                  	// #92
  213134:	mov	w0, wzr
  213138:	bl	213ed0 <log_assert_failed_unreachable_realm@plt>

000000000021313c <freep>:
  21313c:	stp	x29, x30, [sp, #-16]!
  213140:	ldr	x0, [x0]
  213144:	mov	x29, sp
  213148:	bl	213ee0 <free@plt>
  21314c:	ldp	x29, x30, [sp], #16
  213150:	ret

0000000000213154 <ansi_highlight>:
  213154:	stp	x29, x30, [sp, #-16]!
  213158:	mov	x29, sp
  21315c:	bl	213ef0 <colors_enabled@plt>
  213160:	adrp	x8, 201000 <run.verbs-0x4d0>
  213164:	adrp	x9, 201000 <run.verbs-0x4d0>
  213168:	add	x8, x8, #0xf27
  21316c:	add	x9, x9, #0xd56
  213170:	tst	w0, #0x1
  213174:	csel	x0, x9, x8, ne  // ne = any
  213178:	ldp	x29, x30, [sp], #16
  21317c:	ret

0000000000213180 <ansi_normal>:
  213180:	stp	x29, x30, [sp, #-16]!
  213184:	mov	x29, sp
  213188:	bl	213ef0 <colors_enabled@plt>
  21318c:	adrp	x8, 201000 <run.verbs-0x4d0>
  213190:	adrp	x9, 201000 <run.verbs-0x4d0>
  213194:	add	x8, x8, #0xf27
  213198:	add	x9, x9, #0x617
  21319c:	tst	w0, #0x1
  2131a0:	csel	x0, x9, x8, ne  // ne = any
  2131a4:	ldp	x29, x30, [sp], #16
  2131a8:	ret

00000000002131ac <acquire_boot_count_path>:
  2131ac:	sub	sp, sp, #0x70
  2131b0:	stp	x22, x21, [sp, #80]
  2131b4:	mov	x21, x1
  2131b8:	mov	x22, x0
  2131bc:	mov	x0, #0x674a                	// #26442
  2131c0:	mov	x1, #0xc7b6                	// #51126
  2131c4:	movk	x0, #0x82b0, lsl #16
  2131c8:	movk	x1, #0xb44, lsl #16
  2131cc:	stp	x29, x30, [sp, #48]
  2131d0:	stp	x20, x19, [sp, #96]
  2131d4:	add	x29, sp, #0x30
  2131d8:	mov	x20, x2
  2131dc:	adrp	x2, 201000 <run.verbs-0x4d0>
  2131e0:	movk	x0, #0x4c0a, lsl #32
  2131e4:	movk	x1, #0xbb29, lsl #32
  2131e8:	mov	x19, x3
  2131ec:	add	x2, x2, #0xa48
  2131f0:	sub	x3, x29, #0x8
  2131f4:	movk	x0, #0xcf41, lsl #48
  2131f8:	movk	x1, #0x4f8c, lsl #48
  2131fc:	stp	x24, x23, [sp, #64]
  213200:	mov	x23, x4
  213204:	stp	xzr, xzr, [x29, #-16]
  213208:	str	xzr, [sp, #24]
  21320c:	bl	213f00 <efi_get_variable_string@plt>
  213210:	cmn	w0, #0x2
  213214:	b.ne	213220 <acquire_boot_count_path+0x74>  // b.any
  213218:	mov	w24, #0xffffffcf            	// #-49
  21321c:	b	213404 <acquire_boot_count_path+0x258>
  213220:	mov	w24, w0
  213224:	tbnz	w0, #31, 2132f4 <acquire_boot_count_path+0x148>
  213228:	ldur	x0, [x29, #-8]
  21322c:	bl	213f10 <efi_tilt_backslashes@plt>
  213230:	ldur	x24, [x29, #-8]
  213234:	mov	x0, x24
  213238:	bl	213f20 <path_is_normalized@plt>
  21323c:	tbz	w0, #0, 213330 <acquire_boot_count_path+0x184>
  213240:	mov	x0, x24
  213244:	bl	213f30 <path_is_absolute@plt>
  213248:	tbz	w0, #0, 21337c <acquire_boot_count_path+0x1d0>
  21324c:	mov	x0, x24
  213250:	bl	213f40 <last_path_component@plt>
  213254:	mov	w1, #0x2b                  	// #43
  213258:	bl	213f50 <strrchr@plt>
  21325c:	str	x0, [sp, #16]
  213260:	cbz	x0, 2133c4 <acquire_boot_count_path+0x218>
  213264:	cbz	x21, 213280 <acquire_boot_count_path+0xd4>
  213268:	ldur	x8, [x29, #-8]
  21326c:	sub	x1, x0, x8
  213270:	mov	x0, x8
  213274:	bl	213f60 <strndup@plt>
  213278:	stur	x0, [x29, #-16]
  21327c:	cbz	x0, 213438 <acquire_boot_count_path+0x28c>
  213280:	ldur	x0, [x29, #-8]
  213284:	add	x1, sp, #0x10
  213288:	add	x2, sp, #0x8
  21328c:	mov	x3, sp
  213290:	bl	213880 <parse_counter>
  213294:	tbnz	w0, #31, 2133bc <acquire_boot_count_path+0x210>
  213298:	cbz	x23, 2132b4 <acquire_boot_count_path+0x108>
  21329c:	ldr	x0, [sp, #16]
  2132a0:	bl	213f70 <strdup@plt>
  2132a4:	str	x0, [sp, #24]
  2132a8:	cbz	x0, 213450 <acquire_boot_count_path+0x2a4>
  2132ac:	str	xzr, [sp, #24]
  2132b0:	str	x0, [x23]
  2132b4:	cbz	x22, 2132c4 <acquire_boot_count_path+0x118>
  2132b8:	ldur	x8, [x29, #-8]
  2132bc:	stur	xzr, [x29, #-8]
  2132c0:	str	x8, [x22]
  2132c4:	cbz	x21, 2132d4 <acquire_boot_count_path+0x128>
  2132c8:	ldur	x8, [x29, #-16]
  2132cc:	stur	xzr, [x29, #-16]
  2132d0:	str	x8, [x21]
  2132d4:	cbz	x20, 2132e0 <acquire_boot_count_path+0x134>
  2132d8:	ldr	x8, [sp, #8]
  2132dc:	str	x8, [x20]
  2132e0:	mov	w24, wzr
  2132e4:	cbz	x19, 213404 <acquire_boot_count_path+0x258>
  2132e8:	ldr	x8, [sp]
  2132ec:	str	x8, [x19]
  2132f0:	b	213404 <acquire_boot_count_path+0x258>
  2132f4:	mov	w0, wzr
  2132f8:	bl	213d80 <log_get_max_level_realm@plt>
  2132fc:	cmp	w0, #0x3
  213300:	b.lt	21336c <acquire_boot_count_path+0x1c0>  // b.tstop
  213304:	adrp	x2, 201000 <run.verbs-0x4d0>
  213308:	adrp	x4, 201000 <run.verbs-0x4d0>
  21330c:	adrp	x5, 201000 <run.verbs-0x4d0>
  213310:	add	x2, x2, #0xca6
  213314:	add	x4, x4, #0xe35
  213318:	add	x5, x5, #0xa02
  21331c:	mov	w0, #0x3                   	// #3
  213320:	mov	w3, #0xdb                  	// #219
  213324:	mov	w1, w24
  213328:	bl	213d90 <log_internal_realm@plt>
  21332c:	b	2133bc <acquire_boot_count_path+0x210>
  213330:	mov	w0, wzr
  213334:	bl	213d80 <log_get_max_level_realm@plt>
  213338:	cmp	w0, #0x3
  21333c:	b.lt	213400 <acquire_boot_count_path+0x254>  // b.tstop
  213340:	adrp	x2, 201000 <run.verbs-0x4d0>
  213344:	adrp	x4, 201000 <run.verbs-0x4d0>
  213348:	adrp	x5, 201000 <run.verbs-0x4d0>
  21334c:	mov	w1, #0x16                  	// #22
  213350:	add	x2, x2, #0xca6
  213354:	add	x4, x4, #0xe35
  213358:	add	x5, x5, #0xc1a
  21335c:	mov	w0, #0x3                   	// #3
  213360:	movk	w1, #0x4000, lsl #16
  213364:	mov	w3, #0xe2                  	// #226
  213368:	b	2133b4 <acquire_boot_count_path+0x208>
  21336c:	mov	w8, wzr
  213370:	neg	w9, w24
  213374:	sub	w24, w8, w9, uxtb
  213378:	b	213404 <acquire_boot_count_path+0x258>
  21337c:	mov	w0, wzr
  213380:	bl	213d80 <log_get_max_level_realm@plt>
  213384:	cmp	w0, #0x3
  213388:	b.lt	213400 <acquire_boot_count_path+0x254>  // b.tstop
  21338c:	adrp	x2, 201000 <run.verbs-0x4d0>
  213390:	adrp	x4, 201000 <run.verbs-0x4d0>
  213394:	adrp	x5, 201000 <run.verbs-0x4d0>
  213398:	mov	w1, #0x16                  	// #22
  21339c:	add	x2, x2, #0xca6
  2133a0:	add	x4, x4, #0xe35
  2133a4:	add	x5, x5, #0x712
  2133a8:	mov	w0, #0x3                   	// #3
  2133ac:	movk	w1, #0x4000, lsl #16
  2133b0:	mov	w3, #0xe7                  	// #231
  2133b4:	mov	x6, x24
  2133b8:	bl	213d90 <log_internal_realm@plt>
  2133bc:	mov	w24, w0
  2133c0:	b	213404 <acquire_boot_count_path+0x258>
  2133c4:	bl	213d80 <log_get_max_level_realm@plt>
  2133c8:	cmp	w0, #0x3
  2133cc:	b.lt	213400 <acquire_boot_count_path+0x254>  // b.tstop
  2133d0:	ldur	x6, [x29, #-8]
  2133d4:	adrp	x2, 201000 <run.verbs-0x4d0>
  2133d8:	adrp	x4, 201000 <run.verbs-0x4d0>
  2133dc:	adrp	x5, 201000 <run.verbs-0x4d0>
  2133e0:	mov	w1, #0x16                  	// #22
  2133e4:	add	x2, x2, #0xca6
  2133e8:	add	x4, x4, #0xe35
  2133ec:	add	x5, x5, #0xd08
  2133f0:	mov	w0, #0x3                   	// #3
  2133f4:	movk	w1, #0x4000, lsl #16
  2133f8:	mov	w3, #0xee                  	// #238
  2133fc:	b	2133b8 <acquire_boot_count_path+0x20c>
  213400:	mov	w24, #0xffffffea            	// #-22
  213404:	add	x0, sp, #0x18
  213408:	bl	21313c <freep>
  21340c:	sub	x0, x29, #0x10
  213410:	bl	21313c <freep>
  213414:	sub	x0, x29, #0x8
  213418:	bl	21313c <freep>
  21341c:	mov	w0, w24
  213420:	ldp	x20, x19, [sp, #96]
  213424:	ldp	x22, x21, [sp, #80]
  213428:	ldp	x24, x23, [sp, #64]
  21342c:	ldp	x29, x30, [sp, #48]
  213430:	add	sp, sp, #0x70
  213434:	ret
  213438:	adrp	x1, 201000 <run.verbs-0x4d0>
  21343c:	adrp	x3, 201000 <run.verbs-0x4d0>
  213440:	add	x1, x1, #0xca6
  213444:	add	x3, x3, #0xe35
  213448:	mov	w2, #0xf3                  	// #243
  21344c:	b	213464 <acquire_boot_count_path+0x2b8>
  213450:	adrp	x1, 201000 <run.verbs-0x4d0>
  213454:	adrp	x3, 201000 <run.verbs-0x4d0>
  213458:	add	x1, x1, #0xca6
  21345c:	add	x3, x3, #0xe35
  213460:	mov	w2, #0xfd                  	// #253
  213464:	bl	213df0 <log_oom_internal@plt>
  213468:	b	2133bc <acquire_boot_count_path+0x210>

000000000021346c <acquire_path>:
  21346c:	sub	sp, sp, #0x40
  213470:	str	x21, [sp, #32]
  213474:	adrp	x21, 234000 <_DYNAMIC+0xffc0>
  213478:	ldr	x0, [x21, #1008]
  21347c:	stp	x29, x30, [sp, #16]
  213480:	add	x29, sp, #0x10
  213484:	stp	x20, x19, [sp, #48]
  213488:	str	xzr, [x29, #24]
  21348c:	str	xzr, [sp, #8]
  213490:	bl	213bcc <strv_isempty>
  213494:	tbz	w0, #0, 213584 <acquire_path+0x118>
  213498:	add	x2, x29, #0x18
  21349c:	mov	x0, xzr
  2134a0:	mov	w1, wzr
  2134a4:	mov	x3, xzr
  2134a8:	mov	x4, xzr
  2134ac:	mov	x5, xzr
  2134b0:	mov	x6, xzr
  2134b4:	bl	213f80 <find_esp_and_warn@plt>
  2134b8:	tbz	w0, #31, 2134c8 <acquire_path+0x5c>
  2134bc:	mov	w19, w0
  2134c0:	cmn	w0, #0x7e
  2134c4:	b.ne	213588 <acquire_path+0x11c>  // b.any
  2134c8:	add	x2, sp, #0x8
  2134cc:	mov	x0, xzr
  2134d0:	mov	w1, wzr
  2134d4:	mov	x3, xzr
  2134d8:	bl	213f90 <find_xbootldr_and_warn@plt>
  2134dc:	tbz	w0, #31, 2134ec <acquire_path+0x80>
  2134e0:	mov	w19, w0
  2134e4:	cmn	w0, #0x7e
  2134e8:	b.ne	213588 <acquire_path+0x11c>  // b.any
  2134ec:	ldr	x0, [x29, #24]
  2134f0:	ldr	x1, [sp, #8]
  2134f4:	orr	x8, x0, x1
  2134f8:	cbz	x8, 2135b0 <acquire_path+0x144>
  2134fc:	cbz	x0, 2135fc <acquire_path+0x190>
  213500:	mov	x2, xzr
  213504:	bl	213fa0 <strv_new_internal@plt>
  213508:	mov	x20, x0
  21350c:	cbz	x0, 213610 <acquire_path+0x1a4>
  213510:	ldr	x0, [x21, #1008]
  213514:	bl	213dc0 <strv_free@plt>
  213518:	mov	w0, wzr
  21351c:	str	x20, [x21, #1008]
  213520:	bl	213d80 <log_get_max_level_realm@plt>
  213524:	cmp	w0, #0x7
  213528:	mov	w19, wzr
  21352c:	b.lt	213588 <acquire_path+0x11c>  // b.tstop
  213530:	mov	x0, x20
  213534:	bl	213be8 <strv_join>
  213538:	mov	x19, x0
  21353c:	str	x0, [sp]
  213540:	mov	w0, wzr
  213544:	bl	213d80 <log_get_max_level_realm@plt>
  213548:	cmp	w0, #0x7
  21354c:	b.lt	21357c <acquire_path+0x110>  // b.tstop
  213550:	adrp	x2, 201000 <run.verbs-0x4d0>
  213554:	adrp	x4, 201000 <run.verbs-0x4d0>
  213558:	adrp	x5, 201000 <run.verbs-0x4d0>
  21355c:	add	x2, x2, #0xca6
  213560:	add	x4, x4, #0xbda
  213564:	add	x5, x5, #0xff9
  213568:	mov	w0, #0x7                   	// #7
  21356c:	mov	w3, #0x84                  	// #132
  213570:	mov	w1, wzr
  213574:	mov	x6, x19
  213578:	bl	213d90 <log_internal_realm@plt>
  21357c:	mov	x0, sp
  213580:	bl	21313c <freep>
  213584:	mov	w19, wzr
  213588:	add	x0, sp, #0x8
  21358c:	bl	21313c <freep>
  213590:	add	x0, x29, #0x18
  213594:	bl	21313c <freep>
  213598:	mov	w0, w19
  21359c:	ldp	x20, x19, [sp, #48]
  2135a0:	ldr	x21, [sp, #32]
  2135a4:	ldp	x29, x30, [sp, #16]
  2135a8:	add	sp, sp, #0x40
  2135ac:	ret
  2135b0:	mov	w0, wzr
  2135b4:	bl	213d80 <log_get_max_level_realm@plt>
  2135b8:	cmp	w0, #0x3
  2135bc:	b.lt	2135f4 <acquire_path+0x188>  // b.tstop
  2135c0:	adrp	x2, 201000 <run.verbs-0x4d0>
  2135c4:	adrp	x4, 201000 <run.verbs-0x4d0>
  2135c8:	adrp	x5, 201000 <run.verbs-0x4d0>
  2135cc:	mov	w1, #0x2                   	// #2
  2135d0:	add	x2, x2, #0xca6
  2135d4:	add	x4, x4, #0xbda
  2135d8:	add	x5, x5, #0xe4d
  2135dc:	mov	w0, #0x3                   	// #3
  2135e0:	movk	w1, #0x4000, lsl #16
  2135e4:	mov	w3, #0x75                  	// #117
  2135e8:	bl	213d90 <log_internal_realm@plt>
  2135ec:	mov	w19, w0
  2135f0:	b	213588 <acquire_path+0x11c>
  2135f4:	mov	w19, #0xfffffffe            	// #-2
  2135f8:	b	213588 <acquire_path+0x11c>
  2135fc:	mov	x0, x1
  213600:	mov	x1, xzr
  213604:	bl	213fa0 <strv_new_internal@plt>
  213608:	mov	x20, x0
  21360c:	cbnz	x0, 213510 <acquire_path+0xa4>
  213610:	adrp	x1, 201000 <run.verbs-0x4d0>
  213614:	adrp	x3, 201000 <run.verbs-0x4d0>
  213618:	add	x1, x1, #0xca6
  21361c:	add	x3, x3, #0xbda
  213620:	mov	w2, #0x7c                  	// #124
  213624:	mov	w0, wzr
  213628:	bl	213df0 <log_oom_internal@plt>
  21362c:	mov	w19, w0
  213630:	b	213588 <acquire_path+0x11c>

0000000000213634 <make_good>:
  213634:	sub	sp, sp, #0x30
  213638:	stp	x29, x30, [sp, #16]
  21363c:	stp	x20, x19, [sp, #32]
  213640:	add	x29, sp, #0x10
  213644:	str	xzr, [sp, #8]
  213648:	cbz	x0, 213698 <make_good+0x64>
  21364c:	cbz	x1, 2136b8 <make_good+0x84>
  213650:	mov	x19, x2
  213654:	cbz	x2, 2136dc <make_good+0xa8>
  213658:	mov	x2, xzr
  21365c:	bl	213fb0 <strjoin_real@plt>
  213660:	str	x0, [sp, #8]
  213664:	cbz	x0, 213678 <make_good+0x44>
  213668:	mov	w20, wzr
  21366c:	str	xzr, [sp, #8]
  213670:	str	x0, [x19]
  213674:	b	21367c <make_good+0x48>
  213678:	mov	w20, #0xfffffff4            	// #-12
  21367c:	add	x0, sp, #0x8
  213680:	bl	21313c <freep>
  213684:	mov	w0, w20
  213688:	ldp	x20, x19, [sp, #32]
  21368c:	ldp	x29, x30, [sp, #16]
  213690:	add	sp, sp, #0x30
  213694:	ret
  213698:	adrp	x1, 201000 <run.verbs-0x4d0>
  21369c:	adrp	x2, 201000 <run.verbs-0x4d0>
  2136a0:	adrp	x4, 201000 <run.verbs-0x4d0>
  2136a4:	add	x1, x1, #0xee4
  2136a8:	add	x2, x2, #0xca6
  2136ac:	add	x4, x4, #0x9ca
  2136b0:	mov	w3, #0x111                 	// #273
  2136b4:	bl	213e90 <log_assert_failed_realm@plt>
  2136b8:	adrp	x1, 201000 <run.verbs-0x4d0>
  2136bc:	adrp	x2, 201000 <run.verbs-0x4d0>
  2136c0:	adrp	x4, 201000 <run.verbs-0x4d0>
  2136c4:	add	x1, x1, #0xecf
  2136c8:	add	x2, x2, #0xca6
  2136cc:	add	x4, x4, #0x9ca
  2136d0:	mov	w3, #0x112                 	// #274
  2136d4:	mov	w0, wzr
  2136d8:	bl	213e90 <log_assert_failed_realm@plt>
  2136dc:	adrp	x1, 201000 <run.verbs-0x4d0>
  2136e0:	adrp	x2, 201000 <run.verbs-0x4d0>
  2136e4:	adrp	x4, 201000 <run.verbs-0x4d0>
  2136e8:	add	x1, x1, #0xc9f
  2136ec:	add	x2, x2, #0xca6
  2136f0:	add	x4, x4, #0x9ca
  2136f4:	mov	w3, #0x113                 	// #275
  2136f8:	mov	w0, wzr
  2136fc:	bl	213e90 <log_assert_failed_realm@plt>

0000000000213700 <make_bad>:
  213700:	sub	sp, sp, #0x30
  213704:	stp	x29, x30, [sp, #16]
  213708:	stp	x20, x19, [sp, #32]
  21370c:	add	x29, sp, #0x10
  213710:	str	xzr, [sp, #8]
  213714:	cbz	x0, 213798 <make_bad+0x98>
  213718:	mov	x4, x2
  21371c:	cbz	x2, 2137b8 <make_bad+0xb8>
  213720:	mov	x19, x3
  213724:	cbz	x3, 2137dc <make_bad+0xdc>
  213728:	mov	x3, x1
  21372c:	mov	x2, x0
  213730:	cbz	x1, 21375c <make_bad+0x5c>
  213734:	adrp	x1, 201000 <run.verbs-0x4d0>
  213738:	add	x1, x1, #0x753
  21373c:	add	x0, sp, #0x8
  213740:	bl	213fc0 <asprintf@plt>
  213744:	tbnz	w0, #31, 213778 <make_bad+0x78>
  213748:	ldr	x8, [sp, #8]
  21374c:	mov	w20, wzr
  213750:	str	xzr, [sp, #8]
  213754:	str	x8, [x19]
  213758:	b	21377c <make_bad+0x7c>
  21375c:	adrp	x1, 201000 <run.verbs-0x4d0>
  213760:	add	x1, x1, #0xed6
  213764:	mov	x0, x2
  213768:	mov	x2, x4
  21376c:	bl	213fb0 <strjoin_real@plt>
  213770:	str	x0, [sp, #8]
  213774:	cbnz	x0, 213748 <make_bad+0x48>
  213778:	mov	w20, #0xfffffff4            	// #-12
  21377c:	add	x0, sp, #0x8
  213780:	bl	21313c <freep>
  213784:	mov	w0, w20
  213788:	ldp	x20, x19, [sp, #32]
  21378c:	ldp	x29, x30, [sp, #16]
  213790:	add	sp, sp, #0x30
  213794:	ret
  213798:	adrp	x1, 201000 <run.verbs-0x4d0>
  21379c:	adrp	x2, 201000 <run.verbs-0x4d0>
  2137a0:	adrp	x4, 201000 <run.verbs-0x4d0>
  2137a4:	add	x1, x1, #0xee4
  2137a8:	add	x2, x2, #0xca6
  2137ac:	add	x4, x4, #0xeeb
  2137b0:	mov	w3, #0x124                 	// #292
  2137b4:	bl	213e90 <log_assert_failed_realm@plt>
  2137b8:	adrp	x1, 201000 <run.verbs-0x4d0>
  2137bc:	adrp	x2, 201000 <run.verbs-0x4d0>
  2137c0:	adrp	x4, 201000 <run.verbs-0x4d0>
  2137c4:	add	x1, x1, #0xecf
  2137c8:	add	x2, x2, #0xca6
  2137cc:	add	x4, x4, #0xeeb
  2137d0:	mov	w3, #0x125                 	// #293
  2137d4:	mov	w0, wzr
  2137d8:	bl	213e90 <log_assert_failed_realm@plt>
  2137dc:	adrp	x1, 201000 <run.verbs-0x4d0>
  2137e0:	adrp	x2, 201000 <run.verbs-0x4d0>
  2137e4:	adrp	x4, 201000 <run.verbs-0x4d0>
  2137e8:	add	x1, x1, #0xc9f
  2137ec:	add	x2, x2, #0xca6
  2137f0:	add	x4, x4, #0xeeb
  2137f4:	mov	w3, #0x126                 	// #294
  2137f8:	mov	w0, wzr
  2137fc:	bl	213e90 <log_assert_failed_realm@plt>

0000000000213800 <closep>:
  213800:	stp	x29, x30, [sp, #-16]!
  213804:	ldr	w0, [x0]
  213808:	mov	x29, sp
  21380c:	bl	213fd0 <safe_close@plt>
  213810:	ldp	x29, x30, [sp], #16
  213814:	ret

0000000000213818 <skip_slash>:
  213818:	stp	x29, x30, [sp, #-16]!
  21381c:	mov	x29, sp
  213820:	cbz	x0, 21383c <skip_slash+0x24>
  213824:	ldrb	w8, [x0]
  213828:	cmp	w8, #0x2f
  21382c:	b.ne	21385c <skip_slash+0x44>  // b.any
  213830:	add	x0, x0, #0x1
  213834:	ldp	x29, x30, [sp], #16
  213838:	ret
  21383c:	adrp	x1, 201000 <run.verbs-0x4d0>
  213840:	adrp	x2, 201000 <run.verbs-0x4d0>
  213844:	adrp	x4, 201000 <run.verbs-0x4d0>
  213848:	add	x1, x1, #0xf2c
  21384c:	add	x2, x2, #0xca6
  213850:	add	x4, x4, #0x65f
  213854:	mov	w3, #0x139                 	// #313
  213858:	bl	213e90 <log_assert_failed_realm@plt>
  21385c:	adrp	x1, 201000 <run.verbs-0x4d0>
  213860:	adrp	x2, 201000 <run.verbs-0x4d0>
  213864:	adrp	x4, 201000 <run.verbs-0x4d0>
  213868:	add	x1, x1, #0xb00
  21386c:	add	x2, x2, #0xca6
  213870:	add	x4, x4, #0x65f
  213874:	mov	w3, #0x13a                 	// #314
  213878:	mov	w0, wzr
  21387c:	bl	213e90 <log_assert_failed_realm@plt>

0000000000213880 <parse_counter>:
  213880:	stp	x29, x30, [sp, #-80]!
  213884:	str	x25, [sp, #16]
  213888:	stp	x24, x23, [sp, #32]
  21388c:	stp	x22, x21, [sp, #48]
  213890:	stp	x20, x19, [sp, #64]
  213894:	mov	x29, sp
  213898:	sub	sp, sp, #0x10
  21389c:	cbz	x0, 213b2c <parse_counter+0x2ac>
  2138a0:	mov	x22, x1
  2138a4:	cbz	x1, 213b4c <parse_counter+0x2cc>
  2138a8:	ldr	x8, [x22]
  2138ac:	cbz	x8, 213b70 <parse_counter+0x2f0>
  2138b0:	ldrb	w9, [x8]
  2138b4:	cmp	w9, #0x2b
  2138b8:	b.ne	213b94 <parse_counter+0x314>  // b.any
  2138bc:	add	x23, x8, #0x1
  2138c0:	adrp	x1, 201000 <run.verbs-0x4d0>
  2138c4:	mov	x19, x0
  2138c8:	add	x1, x1, #0x952
  2138cc:	mov	x0, x23
  2138d0:	mov	x20, x3
  2138d4:	mov	x21, x2
  2138d8:	bl	213fe0 <strspn@plt>
  2138dc:	cbz	x0, 2139a8 <parse_counter+0x128>
  2138e0:	mov	x24, x0
  2138e4:	mov	x0, x23
  2138e8:	mov	x1, x24
  2138ec:	bl	213ff0 <strnlen@plt>
  2138f0:	add	x8, x0, #0x10
  2138f4:	and	x8, x8, #0xfffffffffffffff0
  2138f8:	mov	x9, sp
  2138fc:	sub	x25, x9, x8
  213900:	mov	x2, x0
  213904:	mov	sp, x25
  213908:	strb	wzr, [x25, x0]
  21390c:	mov	x0, x25
  213910:	mov	x1, x23
  213914:	bl	214000 <memcpy@plt>
  213918:	add	x1, x29, #0x18
  21391c:	mov	x0, x25
  213920:	bl	213bb8 <safe_atou64>
  213924:	tbnz	w0, #31, 2139e0 <parse_counter+0x160>
  213928:	add	x23, x23, x24
  21392c:	ldrb	w8, [x23]
  213930:	cmp	w8, #0x2d
  213934:	b.ne	213a1c <parse_counter+0x19c>  // b.any
  213938:	add	x23, x23, #0x1
  21393c:	adrp	x1, 201000 <run.verbs-0x4d0>
  213940:	add	x1, x1, #0x952
  213944:	mov	x0, x23
  213948:	bl	213fe0 <strspn@plt>
  21394c:	cbz	x0, 213a84 <parse_counter+0x204>
  213950:	mov	x24, x0
  213954:	mov	x0, x23
  213958:	mov	x1, x24
  21395c:	bl	213ff0 <strnlen@plt>
  213960:	add	x8, x0, #0x10
  213964:	and	x8, x8, #0xfffffffffffffff0
  213968:	mov	x9, sp
  21396c:	sub	x25, x9, x8
  213970:	mov	x2, x0
  213974:	mov	sp, x25
  213978:	strb	wzr, [x25, x0]
  21397c:	mov	x0, x25
  213980:	mov	x1, x23
  213984:	bl	214000 <memcpy@plt>
  213988:	sub	x1, x29, #0x8
  21398c:	mov	x0, x25
  213990:	bl	213bb8 <safe_atou64>
  213994:	tbnz	w0, #31, 213acc <parse_counter+0x24c>
  213998:	add	x23, x23, x24
  21399c:	ldur	x8, [x29, #-8]
  2139a0:	cbnz	x8, 213a60 <parse_counter+0x1e0>
  2139a4:	b	213a28 <parse_counter+0x1a8>
  2139a8:	bl	213d80 <log_get_max_level_realm@plt>
  2139ac:	cmp	w0, #0x3
  2139b0:	b.lt	213ac4 <parse_counter+0x244>  // b.tstop
  2139b4:	adrp	x2, 201000 <run.verbs-0x4d0>
  2139b8:	adrp	x4, 201000 <run.verbs-0x4d0>
  2139bc:	adrp	x5, 202000 <parse_argv.options+0xa70>
  2139c0:	mov	w1, #0x16                  	// #22
  2139c4:	add	x2, x2, #0xca6
  2139c8:	add	x4, x4, #0x95d
  2139cc:	add	x5, x5, #0x26
  2139d0:	mov	w0, #0x3                   	// #3
  2139d4:	movk	w1, #0x4000, lsl #16
  2139d8:	mov	w3, #0xa2                  	// #162
  2139dc:	b	213ab8 <parse_counter+0x238>
  2139e0:	mov	w25, w0
  2139e4:	mov	w0, wzr
  2139e8:	bl	213d80 <log_get_max_level_realm@plt>
  2139ec:	cmp	w0, #0x3
  2139f0:	b.lt	213b04 <parse_counter+0x284>  // b.tstop
  2139f4:	adrp	x2, 201000 <run.verbs-0x4d0>
  2139f8:	adrp	x4, 201000 <run.verbs-0x4d0>
  2139fc:	adrp	x5, 201000 <run.verbs-0x4d0>
  213a00:	add	x2, x2, #0xca6
  213a04:	add	x4, x4, #0x95d
  213a08:	add	x5, x5, #0xc5d
  213a0c:	mov	w0, #0x3                   	// #3
  213a10:	mov	w3, #0xa7                  	// #167
  213a14:	mov	w1, w25
  213a18:	b	213ab8 <parse_counter+0x238>
  213a1c:	stur	xzr, [x29, #-8]
  213a20:	ldur	x8, [x29, #-8]
  213a24:	cbnz	x8, 213a60 <parse_counter+0x1e0>
  213a28:	mov	w0, wzr
  213a2c:	bl	213d80 <log_get_max_level_realm@plt>
  213a30:	cmp	w0, #0x4
  213a34:	b.lt	213a60 <parse_counter+0x1e0>  // b.tstop
  213a38:	adrp	x2, 201000 <run.verbs-0x4d0>
  213a3c:	adrp	x4, 201000 <run.verbs-0x4d0>
  213a40:	adrp	x5, 201000 <run.verbs-0x4d0>
  213a44:	add	x2, x2, #0xca6
  213a48:	add	x4, x4, #0x95d
  213a4c:	add	x5, x5, #0xa5c
  213a50:	mov	w0, #0x4                   	// #4
  213a54:	mov	w3, #0xbe                  	// #190
  213a58:	mov	w1, wzr
  213a5c:	bl	213d90 <log_internal_realm@plt>
  213a60:	str	x23, [x22]
  213a64:	cbz	x21, 213a70 <parse_counter+0x1f0>
  213a68:	ldr	x8, [x29, #24]
  213a6c:	str	x8, [x21]
  213a70:	mov	w0, wzr
  213a74:	cbz	x20, 213b10 <parse_counter+0x290>
  213a78:	ldur	x8, [x29, #-8]
  213a7c:	str	x8, [x20]
  213a80:	b	213b10 <parse_counter+0x290>
  213a84:	bl	213d80 <log_get_max_level_realm@plt>
  213a88:	cmp	w0, #0x3
  213a8c:	b.lt	213ac4 <parse_counter+0x244>  // b.tstop
  213a90:	adrp	x2, 201000 <run.verbs-0x4d0>
  213a94:	adrp	x4, 201000 <run.verbs-0x4d0>
  213a98:	adrp	x5, 201000 <run.verbs-0x4d0>
  213a9c:	mov	w1, #0x16                  	// #22
  213aa0:	add	x2, x2, #0xca6
  213aa4:	add	x4, x4, #0x95d
  213aa8:	add	x5, x5, #0xd88
  213aac:	mov	w0, #0x3                   	// #3
  213ab0:	movk	w1, #0x4000, lsl #16
  213ab4:	mov	w3, #0xb2                  	// #178
  213ab8:	mov	x6, x19
  213abc:	bl	213d90 <log_internal_realm@plt>
  213ac0:	b	213b10 <parse_counter+0x290>
  213ac4:	mov	w0, #0xffffffea            	// #-22
  213ac8:	b	213b10 <parse_counter+0x290>
  213acc:	mov	w25, w0
  213ad0:	mov	w0, wzr
  213ad4:	bl	213d80 <log_get_max_level_realm@plt>
  213ad8:	cmp	w0, #0x3
  213adc:	b.lt	213b04 <parse_counter+0x284>  // b.tstop
  213ae0:	adrp	x2, 201000 <run.verbs-0x4d0>
  213ae4:	adrp	x4, 201000 <run.verbs-0x4d0>
  213ae8:	adrp	x5, 201000 <run.verbs-0x4d0>
  213aec:	add	x2, x2, #0xca6
  213af0:	add	x4, x4, #0x95d
  213af4:	add	x5, x5, #0xf98
  213af8:	mov	w0, #0x3                   	// #3
  213afc:	mov	w3, #0xb7                  	// #183
  213b00:	b	213a14 <parse_counter+0x194>
  213b04:	mov	w8, wzr
  213b08:	neg	w9, w25
  213b0c:	sub	w0, w8, w9, uxtb
  213b10:	mov	sp, x29
  213b14:	ldp	x20, x19, [sp, #64]
  213b18:	ldp	x22, x21, [sp, #48]
  213b1c:	ldp	x24, x23, [sp, #32]
  213b20:	ldr	x25, [sp, #16]
  213b24:	ldp	x29, x30, [sp], #80
  213b28:	ret
  213b2c:	adrp	x1, 201000 <run.verbs-0x4d0>
  213b30:	adrp	x2, 201000 <run.verbs-0x4d0>
  213b34:	adrp	x4, 201000 <run.verbs-0x4d0>
  213b38:	add	x1, x1, #0xf2c
  213b3c:	add	x2, x2, #0xca6
  213b40:	add	x4, x4, #0xf51
  213b44:	mov	w3, #0x95                  	// #149
  213b48:	bl	213e90 <log_assert_failed_realm@plt>
  213b4c:	adrp	x1, 201000 <run.verbs-0x4d0>
  213b50:	adrp	x2, 201000 <run.verbs-0x4d0>
  213b54:	adrp	x4, 201000 <run.verbs-0x4d0>
  213b58:	add	x1, x1, #0xd54
  213b5c:	add	x2, x2, #0xca6
  213b60:	add	x4, x4, #0xf51
  213b64:	mov	w3, #0x96                  	// #150
  213b68:	mov	w0, wzr
  213b6c:	bl	213e90 <log_assert_failed_realm@plt>
  213b70:	adrp	x1, 201000 <run.verbs-0x4d0>
  213b74:	adrp	x2, 201000 <run.verbs-0x4d0>
  213b78:	adrp	x4, 201000 <run.verbs-0x4d0>
  213b7c:	add	x1, x1, #0xc18
  213b80:	add	x2, x2, #0xca6
  213b84:	add	x4, x4, #0xf51
  213b88:	mov	w3, #0x99                  	// #153
  213b8c:	mov	w0, wzr
  213b90:	bl	213e90 <log_assert_failed_realm@plt>
  213b94:	adrp	x1, 201000 <run.verbs-0x4d0>
  213b98:	adrp	x2, 201000 <run.verbs-0x4d0>
  213b9c:	adrp	x4, 201000 <run.verbs-0x4d0>
  213ba0:	add	x1, x1, #0xa36
  213ba4:	add	x2, x2, #0xca6
  213ba8:	add	x4, x4, #0xf51
  213bac:	mov	w3, #0x9a                  	// #154
  213bb0:	mov	w0, wzr
  213bb4:	bl	213e90 <log_assert_failed_realm@plt>

0000000000213bb8 <safe_atou64>:
  213bb8:	stp	x29, x30, [sp, #-16]!
  213bbc:	mov	x29, sp
  213bc0:	bl	214010 <safe_atollu@plt>
  213bc4:	ldp	x29, x30, [sp], #16
  213bc8:	ret

0000000000213bcc <strv_isempty>:
  213bcc:	cbz	x0, 213be0 <strv_isempty+0x14>
  213bd0:	ldr	x8, [x0]
  213bd4:	cmp	x8, #0x0
  213bd8:	cset	w0, eq  // eq = none
  213bdc:	ret
  213be0:	mov	w0, #0x1                   	// #1
  213be4:	ret

0000000000213be8 <strv_join>:
  213be8:	stp	x29, x30, [sp, #-16]!
  213bec:	adrp	x1, 201000 <run.verbs-0x4d0>
  213bf0:	add	x1, x1, #0xff7
  213bf4:	mov	x2, xzr
  213bf8:	mov	x29, sp
  213bfc:	bl	214020 <strv_join_prefix@plt>
  213c00:	ldp	x29, x30, [sp], #16
  213c04:	ret

0000000000213c08 <ALIGN_TO>:
  213c08:	add	x8, x0, #0x7
  213c0c:	and	x0, x8, #0xfffffffffffffff8
  213c10:	ret
  213c14:	udf	#0

0000000000213c18 <__libc_csu_init>:
  213c18:	stp	x29, x30, [sp, #-64]!
  213c1c:	mov	x29, sp
  213c20:	stp	x19, x20, [sp, #16]
  213c24:	adrp	x20, 224000 <strv_join_prefix@plt+0xffe0>
  213c28:	add	x20, x20, #0x40
  213c2c:	stp	x21, x22, [sp, #32]
  213c30:	adrp	x21, 224000 <strv_join_prefix@plt+0xffe0>
  213c34:	add	x21, x21, #0x38
  213c38:	sub	x20, x20, x21
  213c3c:	mov	w22, w0
  213c40:	stp	x23, x24, [sp, #48]
  213c44:	mov	x23, x1
  213c48:	mov	x24, x2
  213c4c:	bl	213c9c <_init>
  213c50:	cmp	xzr, x20, asr #3
  213c54:	b.eq	213c80 <__libc_csu_init+0x68>  // b.none
  213c58:	asr	x20, x20, #3
  213c5c:	mov	x19, #0x0                   	// #0
  213c60:	ldr	x3, [x21, x19, lsl #3]
  213c64:	mov	x2, x24
  213c68:	add	x19, x19, #0x1
  213c6c:	mov	x1, x23
  213c70:	mov	w0, w22
  213c74:	blr	x3
  213c78:	cmp	x20, x19
  213c7c:	b.ne	213c60 <__libc_csu_init+0x48>  // b.any
  213c80:	ldp	x19, x20, [sp, #16]
  213c84:	ldp	x21, x22, [sp, #32]
  213c88:	ldp	x23, x24, [sp, #48]
  213c8c:	ldp	x29, x30, [sp], #64
  213c90:	ret
  213c94:	nop

0000000000213c98 <__libc_csu_fini>:
  213c98:	ret

Disassembly of section .init:

0000000000213c9c <_init>:
  213c9c:	stp	x29, x30, [sp, #-16]!
  213ca0:	mov	x29, sp
  213ca4:	bl	212208 <call_weak_fn>
  213ca8:	ldp	x29, x30, [sp], #16
  213cac:	ret

Disassembly of section .fini:

0000000000213cb0 <_fini>:
  213cb0:	stp	x29, x30, [sp, #-16]!
  213cb4:	mov	x29, sp
  213cb8:	ldp	x29, x30, [sp], #16
  213cbc:	ret

Disassembly of section .plt:

0000000000213cc0 <__libc_start_main@plt-0x20>:
  213cc0:	stp	x16, x30, [sp, #-16]!
  213cc4:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213cc8:	ldr	x17, [x16, #568]
  213ccc:	add	x16, x16, #0x238
  213cd0:	br	x17
  213cd4:	nop
  213cd8:	nop
  213cdc:	nop

0000000000213ce0 <__libc_start_main@plt>:
  213ce0:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213ce4:	ldr	x17, [x16, #576]
  213ce8:	add	x16, x16, #0x240
  213cec:	br	x17

0000000000213cf0 <abort@plt>:
  213cf0:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213cf4:	ldr	x17, [x16, #584]
  213cf8:	add	x16, x16, #0x248
  213cfc:	br	x17

0000000000213d00 <__gmon_start__@plt>:
  213d00:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213d04:	ldr	x17, [x16, #592]
  213d08:	add	x16, x16, #0x250
  213d0c:	br	x17

0000000000213d10 <ask_password_agent_close@plt>:
  213d10:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213d14:	ldr	x17, [x16, #600]
  213d18:	add	x16, x16, #0x258
  213d1c:	br	x17

0000000000213d20 <polkit_agent_close@plt>:
  213d20:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213d24:	ldr	x17, [x16, #608]
  213d28:	add	x16, x16, #0x260
  213d2c:	br	x17

0000000000213d30 <pager_close@plt>:
  213d30:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213d34:	ldr	x17, [x16, #616]
  213d38:	add	x16, x16, #0x268
  213d3c:	br	x17

0000000000213d40 <mac_selinux_finish@plt>:
  213d40:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213d44:	ldr	x17, [x16, #624]
  213d48:	add	x16, x16, #0x270
  213d4c:	br	x17

0000000000213d50 <log_parse_environment_realm@plt>:
  213d50:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213d54:	ldr	x17, [x16, #632]
  213d58:	add	x16, x16, #0x278
  213d5c:	br	x17

0000000000213d60 <log_open@plt>:
  213d60:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213d64:	ldr	x17, [x16, #640]
  213d68:	add	x16, x16, #0x280
  213d6c:	br	x17

0000000000213d70 <detect_container@plt>:
  213d70:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213d74:	ldr	x17, [x16, #648]
  213d78:	add	x16, x16, #0x288
  213d7c:	br	x17

0000000000213d80 <log_get_max_level_realm@plt>:
  213d80:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213d84:	ldr	x17, [x16, #656]
  213d88:	add	x16, x16, #0x290
  213d8c:	br	x17

0000000000213d90 <log_internal_realm@plt>:
  213d90:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213d94:	ldr	x17, [x16, #664]
  213d98:	add	x16, x16, #0x298
  213d9c:	br	x17

0000000000213da0 <is_efi_boot@plt>:
  213da0:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213da4:	ldr	x17, [x16, #672]
  213da8:	add	x16, x16, #0x2a0
  213dac:	br	x17

0000000000213db0 <dispatch_verb@plt>:
  213db0:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213db4:	ldr	x17, [x16, #680]
  213db8:	add	x16, x16, #0x2a8
  213dbc:	br	x17

0000000000213dc0 <strv_free@plt>:
  213dc0:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213dc4:	ldr	x17, [x16, #688]
  213dc8:	add	x16, x16, #0x2b0
  213dcc:	br	x17

0000000000213dd0 <terminal_urlify_man@plt>:
  213dd0:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213dd4:	ldr	x17, [x16, #696]
  213dd8:	add	x16, x16, #0x2b8
  213ddc:	br	x17

0000000000213de0 <printf@plt>:
  213de0:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213de4:	ldr	x17, [x16, #704]
  213de8:	add	x16, x16, #0x2c0
  213dec:	br	x17

0000000000213df0 <log_oom_internal@plt>:
  213df0:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213df4:	ldr	x17, [x16, #712]
  213df8:	add	x16, x16, #0x2c8
  213dfc:	br	x17

0000000000213e00 <puts@plt>:
  213e00:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213e04:	ldr	x17, [x16, #720]
  213e08:	add	x16, x16, #0x2d0
  213e0c:	br	x17

0000000000213e10 <open64@plt>:
  213e10:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213e14:	ldr	x17, [x16, #728]
  213e18:	add	x16, x16, #0x2d8
  213e1c:	br	x17

0000000000213e20 <faccessat@plt>:
  213e20:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213e24:	ldr	x17, [x16, #736]
  213e28:	add	x16, x16, #0x2e0
  213e2c:	br	x17

0000000000213e30 <__errno_location@plt>:
  213e30:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213e34:	ldr	x17, [x16, #744]
  213e38:	add	x16, x16, #0x2e8
  213e3c:	br	x17

0000000000213e40 <strcmp@plt>:
  213e40:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213e44:	ldr	x17, [x16, #752]
  213e48:	add	x16, x16, #0x2f0
  213e4c:	br	x17

0000000000213e50 <rename_noreplace@plt>:
  213e50:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213e54:	ldr	x17, [x16, #760]
  213e58:	add	x16, x16, #0x2f8
  213e5c:	br	x17

0000000000213e60 <dirname_malloc@plt>:
  213e60:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213e64:	ldr	x17, [x16, #768]
  213e68:	add	x16, x16, #0x300
  213e6c:	br	x17

0000000000213e70 <fsync_path_at@plt>:
  213e70:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213e74:	ldr	x17, [x16, #776]
  213e78:	add	x16, x16, #0x308
  213e7c:	br	x17

0000000000213e80 <syncfs@plt>:
  213e80:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213e84:	ldr	x17, [x16, #784]
  213e88:	add	x16, x16, #0x310
  213e8c:	br	x17

0000000000213e90 <log_assert_failed_realm@plt>:
  213e90:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213e94:	ldr	x17, [x16, #792]
  213e98:	add	x16, x16, #0x318
  213e9c:	br	x17

0000000000213ea0 <getopt_long@plt>:
  213ea0:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213ea4:	ldr	x17, [x16, #800]
  213ea8:	add	x16, x16, #0x320
  213eac:	br	x17

0000000000213eb0 <strv_extend@plt>:
  213eb0:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213eb4:	ldr	x17, [x16, #808]
  213eb8:	add	x16, x16, #0x328
  213ebc:	br	x17

0000000000213ec0 <version@plt>:
  213ec0:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213ec4:	ldr	x17, [x16, #816]
  213ec8:	add	x16, x16, #0x330
  213ecc:	br	x17

0000000000213ed0 <log_assert_failed_unreachable_realm@plt>:
  213ed0:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213ed4:	ldr	x17, [x16, #824]
  213ed8:	add	x16, x16, #0x338
  213edc:	br	x17

0000000000213ee0 <free@plt>:
  213ee0:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213ee4:	ldr	x17, [x16, #832]
  213ee8:	add	x16, x16, #0x340
  213eec:	br	x17

0000000000213ef0 <colors_enabled@plt>:
  213ef0:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213ef4:	ldr	x17, [x16, #840]
  213ef8:	add	x16, x16, #0x348
  213efc:	br	x17

0000000000213f00 <efi_get_variable_string@plt>:
  213f00:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213f04:	ldr	x17, [x16, #848]
  213f08:	add	x16, x16, #0x350
  213f0c:	br	x17

0000000000213f10 <efi_tilt_backslashes@plt>:
  213f10:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213f14:	ldr	x17, [x16, #856]
  213f18:	add	x16, x16, #0x358
  213f1c:	br	x17

0000000000213f20 <path_is_normalized@plt>:
  213f20:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213f24:	ldr	x17, [x16, #864]
  213f28:	add	x16, x16, #0x360
  213f2c:	br	x17

0000000000213f30 <path_is_absolute@plt>:
  213f30:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213f34:	ldr	x17, [x16, #872]
  213f38:	add	x16, x16, #0x368
  213f3c:	br	x17

0000000000213f40 <last_path_component@plt>:
  213f40:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213f44:	ldr	x17, [x16, #880]
  213f48:	add	x16, x16, #0x370
  213f4c:	br	x17

0000000000213f50 <strrchr@plt>:
  213f50:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213f54:	ldr	x17, [x16, #888]
  213f58:	add	x16, x16, #0x378
  213f5c:	br	x17

0000000000213f60 <strndup@plt>:
  213f60:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213f64:	ldr	x17, [x16, #896]
  213f68:	add	x16, x16, #0x380
  213f6c:	br	x17

0000000000213f70 <strdup@plt>:
  213f70:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213f74:	ldr	x17, [x16, #904]
  213f78:	add	x16, x16, #0x388
  213f7c:	br	x17

0000000000213f80 <find_esp_and_warn@plt>:
  213f80:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213f84:	ldr	x17, [x16, #912]
  213f88:	add	x16, x16, #0x390
  213f8c:	br	x17

0000000000213f90 <find_xbootldr_and_warn@plt>:
  213f90:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213f94:	ldr	x17, [x16, #920]
  213f98:	add	x16, x16, #0x398
  213f9c:	br	x17

0000000000213fa0 <strv_new_internal@plt>:
  213fa0:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213fa4:	ldr	x17, [x16, #928]
  213fa8:	add	x16, x16, #0x3a0
  213fac:	br	x17

0000000000213fb0 <strjoin_real@plt>:
  213fb0:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213fb4:	ldr	x17, [x16, #936]
  213fb8:	add	x16, x16, #0x3a8
  213fbc:	br	x17

0000000000213fc0 <asprintf@plt>:
  213fc0:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213fc4:	ldr	x17, [x16, #944]
  213fc8:	add	x16, x16, #0x3b0
  213fcc:	br	x17

0000000000213fd0 <safe_close@plt>:
  213fd0:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213fd4:	ldr	x17, [x16, #952]
  213fd8:	add	x16, x16, #0x3b8
  213fdc:	br	x17

0000000000213fe0 <strspn@plt>:
  213fe0:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213fe4:	ldr	x17, [x16, #960]
  213fe8:	add	x16, x16, #0x3c0
  213fec:	br	x17

0000000000213ff0 <strnlen@plt>:
  213ff0:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  213ff4:	ldr	x17, [x16, #968]
  213ff8:	add	x16, x16, #0x3c8
  213ffc:	br	x17

0000000000214000 <memcpy@plt>:
  214000:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  214004:	ldr	x17, [x16, #976]
  214008:	add	x16, x16, #0x3d0
  21400c:	br	x17

0000000000214010 <safe_atollu@plt>:
  214010:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  214014:	ldr	x17, [x16, #984]
  214018:	add	x16, x16, #0x3d8
  21401c:	br	x17

0000000000214020 <strv_join_prefix@plt>:
  214020:	adrp	x16, 224000 <strv_join_prefix@plt+0xffe0>
  214024:	ldr	x17, [x16, #992]
  214028:	add	x16, x16, #0x3e0
  21402c:	br	x17
