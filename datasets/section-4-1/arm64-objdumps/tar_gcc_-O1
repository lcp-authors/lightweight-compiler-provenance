
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//tar_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000403f20 <.init>:
  403f20:	stp	x29, x30, [sp, #-16]!
  403f24:	mov	x29, sp
  403f28:	bl	404c80 <wcrtomb@plt+0x60>
  403f2c:	ldp	x29, x30, [sp], #16
  403f30:	ret

Disassembly of section .plt:

0000000000403f40 <mbrtowc@plt-0x20>:
  403f40:	stp	x16, x30, [sp, #-16]!
  403f44:	adrp	x16, 47c000 <_obstack_memory_used@@Base+0x3ae64>
  403f48:	ldr	x17, [x16, #4088]
  403f4c:	add	x16, x16, #0xff8
  403f50:	br	x17
  403f54:	nop
  403f58:	nop
  403f5c:	nop

0000000000403f60 <mbrtowc@plt>:
  403f60:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  403f64:	ldr	x17, [x16]
  403f68:	add	x16, x16, #0x0
  403f6c:	br	x17

0000000000403f70 <memcpy@plt>:
  403f70:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  403f74:	ldr	x17, [x16, #8]
  403f78:	add	x16, x16, #0x8
  403f7c:	br	x17

0000000000403f80 <memmove@plt>:
  403f80:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  403f84:	ldr	x17, [x16, #16]
  403f88:	add	x16, x16, #0x10
  403f8c:	br	x17

0000000000403f90 <_exit@plt>:
  403f90:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  403f94:	ldr	x17, [x16, #24]
  403f98:	add	x16, x16, #0x18
  403f9c:	br	x17

0000000000403fa0 <getcwd@plt>:
  403fa0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  403fa4:	ldr	x17, [x16, #32]
  403fa8:	add	x16, x16, #0x20
  403fac:	br	x17

0000000000403fb0 <setuid@plt>:
  403fb0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  403fb4:	ldr	x17, [x16, #40]
  403fb8:	add	x16, x16, #0x28
  403fbc:	br	x17

0000000000403fc0 <strtok@plt>:
  403fc0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  403fc4:	ldr	x17, [x16, #48]
  403fc8:	add	x16, x16, #0x30
  403fcc:	br	x17

0000000000403fd0 <fwrite_unlocked@plt>:
  403fd0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  403fd4:	ldr	x17, [x16, #56]
  403fd8:	add	x16, x16, #0x38
  403fdc:	br	x17

0000000000403fe0 <strtoul@plt>:
  403fe0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  403fe4:	ldr	x17, [x16, #64]
  403fe8:	add	x16, x16, #0x40
  403fec:	br	x17

0000000000403ff0 <strlen@plt>:
  403ff0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  403ff4:	ldr	x17, [x16, #72]
  403ff8:	add	x16, x16, #0x48
  403ffc:	br	x17

0000000000404000 <fputs@plt>:
  404000:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404004:	ldr	x17, [x16, #80]
  404008:	add	x16, x16, #0x50
  40400c:	br	x17

0000000000404010 <__sprintf_chk@plt>:
  404010:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404014:	ldr	x17, [x16, #88]
  404018:	add	x16, x16, #0x58
  40401c:	br	x17

0000000000404020 <exit@plt>:
  404020:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404024:	ldr	x17, [x16, #96]
  404028:	add	x16, x16, #0x60
  40402c:	br	x17

0000000000404030 <raise@plt>:
  404030:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404034:	ldr	x17, [x16, #104]
  404038:	add	x16, x16, #0x68
  40403c:	br	x17

0000000000404040 <dup@plt>:
  404040:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404044:	ldr	x17, [x16, #112]
  404048:	add	x16, x16, #0x70
  40404c:	br	x17

0000000000404050 <error@plt>:
  404050:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404054:	ldr	x17, [x16, #120]
  404058:	add	x16, x16, #0x78
  40405c:	br	x17

0000000000404060 <fchdir@plt>:
  404060:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404064:	ldr	x17, [x16, #128]
  404068:	add	x16, x16, #0x80
  40406c:	br	x17

0000000000404070 <rpmatch@plt>:
  404070:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404074:	ldr	x17, [x16, #136]
  404078:	add	x16, x16, #0x88
  40407c:	br	x17

0000000000404080 <execl@plt>:
  404080:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404084:	ldr	x17, [x16, #144]
  404088:	add	x16, x16, #0x90
  40408c:	br	x17

0000000000404090 <flockfile@plt>:
  404090:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404094:	ldr	x17, [x16, #152]
  404098:	add	x16, x16, #0x98
  40409c:	br	x17

00000000004040a0 <wctype@plt>:
  4040a0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4040a4:	ldr	x17, [x16, #160]
  4040a8:	add	x16, x16, #0xa0
  4040ac:	br	x17

00000000004040b0 <sigprocmask@plt>:
  4040b0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4040b4:	ldr	x17, [x16, #168]
  4040b8:	add	x16, x16, #0xa8
  4040bc:	br	x17

00000000004040c0 <strnlen@plt>:
  4040c0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4040c4:	ldr	x17, [x16, #176]
  4040c8:	add	x16, x16, #0xb0
  4040cc:	br	x17

00000000004040d0 <geteuid@plt>:
  4040d0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4040d4:	ldr	x17, [x16, #184]
  4040d8:	add	x16, x16, #0xb8
  4040dc:	br	x17

00000000004040e0 <linkat@plt>:
  4040e0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4040e4:	ldr	x17, [x16, #192]
  4040e8:	add	x16, x16, #0xc0
  4040ec:	br	x17

00000000004040f0 <localtime_r@plt>:
  4040f0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4040f4:	ldr	x17, [x16, #200]
  4040f8:	add	x16, x16, #0xc8
  4040fc:	br	x17

0000000000404100 <setenv@plt>:
  404100:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404104:	ldr	x17, [x16, #208]
  404108:	add	x16, x16, #0xd0
  40410c:	br	x17

0000000000404110 <getgrnam@plt>:
  404110:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404114:	ldr	x17, [x16, #216]
  404118:	add	x16, x16, #0xd8
  40411c:	br	x17

0000000000404120 <getuid@plt>:
  404120:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404124:	ldr	x17, [x16, #224]
  404128:	add	x16, x16, #0xe0
  40412c:	br	x17

0000000000404130 <pipe@plt>:
  404130:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404134:	ldr	x17, [x16, #232]
  404138:	add	x16, x16, #0xe8
  40413c:	br	x17

0000000000404140 <opendir@plt>:
  404140:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404144:	ldr	x17, [x16, #240]
  404148:	add	x16, x16, #0xf0
  40414c:	br	x17

0000000000404150 <strftime@plt>:
  404150:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404154:	ldr	x17, [x16, #248]
  404158:	add	x16, x16, #0xf8
  40415c:	br	x17

0000000000404160 <unlinkat@plt>:
  404160:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404164:	ldr	x17, [x16, #256]
  404168:	add	x16, x16, #0x100
  40416c:	br	x17

0000000000404170 <fputc@plt>:
  404170:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404174:	ldr	x17, [x16, #264]
  404178:	add	x16, x16, #0x108
  40417c:	br	x17

0000000000404180 <iswcntrl@plt>:
  404180:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404184:	ldr	x17, [x16, #272]
  404188:	add	x16, x16, #0x110
  40418c:	br	x17

0000000000404190 <clock_gettime@plt>:
  404190:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404194:	ldr	x17, [x16, #280]
  404198:	add	x16, x16, #0x118
  40419c:	br	x17

00000000004041a0 <qsort@plt>:
  4041a0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4041a4:	ldr	x17, [x16, #288]
  4041a8:	add	x16, x16, #0x120
  4041ac:	br	x17

00000000004041b0 <pathconf@plt>:
  4041b0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4041b4:	ldr	x17, [x16, #296]
  4041b8:	add	x16, x16, #0x128
  4041bc:	br	x17

00000000004041c0 <fork@plt>:
  4041c0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4041c4:	ldr	x17, [x16, #304]
  4041c8:	add	x16, x16, #0x130
  4041cc:	br	x17

00000000004041d0 <lseek@plt>:
  4041d0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4041d4:	ldr	x17, [x16, #312]
  4041d8:	add	x16, x16, #0x138
  4041dc:	br	x17

00000000004041e0 <__fpending@plt>:
  4041e0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4041e4:	ldr	x17, [x16, #320]
  4041e8:	add	x16, x16, #0x140
  4041ec:	br	x17

00000000004041f0 <__ctype_tolower_loc@plt>:
  4041f0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4041f4:	ldr	x17, [x16, #328]
  4041f8:	add	x16, x16, #0x148
  4041fc:	br	x17

0000000000404200 <snprintf@plt>:
  404200:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404204:	ldr	x17, [x16, #336]
  404208:	add	x16, x16, #0x150
  40420c:	br	x17

0000000000404210 <localeconv@plt>:
  404210:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404214:	ldr	x17, [x16, #344]
  404218:	add	x16, x16, #0x158
  40421c:	br	x17

0000000000404220 <stpcpy@plt>:
  404220:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404224:	ldr	x17, [x16, #352]
  404228:	add	x16, x16, #0x160
  40422c:	br	x17

0000000000404230 <fileno@plt>:
  404230:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404234:	ldr	x17, [x16, #360]
  404238:	add	x16, x16, #0x168
  40423c:	br	x17

0000000000404240 <localtime@plt>:
  404240:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404244:	ldr	x17, [x16, #368]
  404248:	add	x16, x16, #0x170
  40424c:	br	x17

0000000000404250 <__memcpy_chk@plt>:
  404250:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404254:	ldr	x17, [x16, #376]
  404258:	add	x16, x16, #0x178
  40425c:	br	x17

0000000000404260 <mkdirat@plt>:
  404260:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404264:	ldr	x17, [x16, #384]
  404268:	add	x16, x16, #0x180
  40426c:	br	x17

0000000000404270 <signal@plt>:
  404270:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404274:	ldr	x17, [x16, #392]
  404278:	add	x16, x16, #0x188
  40427c:	br	x17

0000000000404280 <acl_delete_def_file@plt>:
  404280:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404284:	ldr	x17, [x16, #400]
  404288:	add	x16, x16, #0x190
  40428c:	br	x17

0000000000404290 <__snprintf_chk@plt>:
  404290:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404294:	ldr	x17, [x16, #408]
  404298:	add	x16, x16, #0x198
  40429c:	br	x17

00000000004042a0 <fclose@plt>:
  4042a0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4042a4:	ldr	x17, [x16, #416]
  4042a8:	add	x16, x16, #0x1a0
  4042ac:	br	x17

00000000004042b0 <fsync@plt>:
  4042b0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4042b4:	ldr	x17, [x16, #424]
  4042b8:	add	x16, x16, #0x1a8
  4042bc:	br	x17

00000000004042c0 <getpid@plt>:
  4042c0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4042c4:	ldr	x17, [x16, #432]
  4042c8:	add	x16, x16, #0x1b0
  4042cc:	br	x17

00000000004042d0 <nl_langinfo@plt>:
  4042d0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4042d4:	ldr	x17, [x16, #440]
  4042d8:	add	x16, x16, #0x1b8
  4042dc:	br	x17

00000000004042e0 <fopen@plt>:
  4042e0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4042e4:	ldr	x17, [x16, #448]
  4042e8:	add	x16, x16, #0x1c0
  4042ec:	br	x17

00000000004042f0 <__vsnprintf_chk@plt>:
  4042f0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4042f4:	ldr	x17, [x16, #456]
  4042f8:	add	x16, x16, #0x1c8
  4042fc:	br	x17

0000000000404300 <iswctype@plt>:
  404300:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404304:	ldr	x17, [x16, #464]
  404308:	add	x16, x16, #0x1d0
  40430c:	br	x17

0000000000404310 <malloc@plt>:
  404310:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404314:	ldr	x17, [x16, #472]
  404318:	add	x16, x16, #0x1d8
  40431c:	br	x17

0000000000404320 <wcwidth@plt>:
  404320:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404324:	ldr	x17, [x16, #480]
  404328:	add	x16, x16, #0x1e0
  40432c:	br	x17

0000000000404330 <funlockfile@plt>:
  404330:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404334:	ldr	x17, [x16, #488]
  404338:	add	x16, x16, #0x1e8
  40433c:	br	x17

0000000000404340 <open@plt>:
  404340:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404344:	ldr	x17, [x16, #496]
  404348:	add	x16, x16, #0x1f0
  40434c:	br	x17

0000000000404350 <__vasprintf_chk@plt>:
  404350:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404354:	ldr	x17, [x16, #504]
  404358:	add	x16, x16, #0x1f8
  40435c:	br	x17

0000000000404360 <tzset@plt>:
  404360:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404364:	ldr	x17, [x16, #512]
  404368:	add	x16, x16, #0x200
  40436c:	br	x17

0000000000404370 <__strcpy_chk@plt>:
  404370:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404374:	ldr	x17, [x16, #520]
  404378:	add	x16, x16, #0x208
  40437c:	br	x17

0000000000404380 <__isoc99_fscanf@plt>:
  404380:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404384:	ldr	x17, [x16, #528]
  404388:	add	x16, x16, #0x210
  40438c:	br	x17

0000000000404390 <__strtol_internal@plt>:
  404390:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404394:	ldr	x17, [x16, #536]
  404398:	add	x16, x16, #0x218
  40439c:	br	x17

00000000004043a0 <sigemptyset@plt>:
  4043a0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4043a4:	ldr	x17, [x16, #544]
  4043a8:	add	x16, x16, #0x220
  4043ac:	br	x17

00000000004043b0 <futimens@plt>:
  4043b0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4043b4:	ldr	x17, [x16, #552]
  4043b8:	add	x16, x16, #0x228
  4043bc:	br	x17

00000000004043c0 <strncmp@plt>:
  4043c0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4043c4:	ldr	x17, [x16, #560]
  4043c8:	add	x16, x16, #0x230
  4043cc:	br	x17

00000000004043d0 <bindtextdomain@plt>:
  4043d0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4043d4:	ldr	x17, [x16, #568]
  4043d8:	add	x16, x16, #0x238
  4043dc:	br	x17

00000000004043e0 <__libc_start_main@plt>:
  4043e0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4043e4:	ldr	x17, [x16, #576]
  4043e8:	add	x16, x16, #0x240
  4043ec:	br	x17

00000000004043f0 <setxattr@plt>:
  4043f0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4043f4:	ldr	x17, [x16, #584]
  4043f8:	add	x16, x16, #0x248
  4043fc:	br	x17

0000000000404400 <strcat@plt>:
  404400:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404404:	ldr	x17, [x16, #592]
  404408:	add	x16, x16, #0x250
  40440c:	br	x17

0000000000404410 <__printf_chk@plt>:
  404410:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404414:	ldr	x17, [x16, #600]
  404418:	add	x16, x16, #0x258
  40441c:	br	x17

0000000000404420 <memset@plt>:
  404420:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404424:	ldr	x17, [x16, #608]
  404428:	add	x16, x16, #0x260
  40442c:	br	x17

0000000000404430 <fdopen@plt>:
  404430:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404434:	ldr	x17, [x16, #616]
  404438:	add	x16, x16, #0x268
  40443c:	br	x17

0000000000404440 <gettimeofday@plt>:
  404440:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404444:	ldr	x17, [x16, #624]
  404448:	add	x16, x16, #0x270
  40444c:	br	x17

0000000000404450 <getpwnam@plt>:
  404450:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404454:	ldr	x17, [x16, #632]
  404458:	add	x16, x16, #0x278
  40445c:	br	x17

0000000000404460 <gmtime_r@plt>:
  404460:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404464:	ldr	x17, [x16, #640]
  404468:	add	x16, x16, #0x280
  40446c:	br	x17

0000000000404470 <sleep@plt>:
  404470:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404474:	ldr	x17, [x16, #648]
  404478:	add	x16, x16, #0x288
  40447c:	br	x17

0000000000404480 <fchmod@plt>:
  404480:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404484:	ldr	x17, [x16, #656]
  404488:	add	x16, x16, #0x290
  40448c:	br	x17

0000000000404490 <__xmknodat@plt>:
  404490:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404494:	ldr	x17, [x16, #664]
  404498:	add	x16, x16, #0x298
  40449c:	br	x17

00000000004044a0 <strerror_r@plt>:
  4044a0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4044a4:	ldr	x17, [x16, #672]
  4044a8:	add	x16, x16, #0x2a0
  4044ac:	br	x17

00000000004044b0 <__vfprintf_chk@plt>:
  4044b0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4044b4:	ldr	x17, [x16, #680]
  4044b8:	add	x16, x16, #0x2a8
  4044bc:	br	x17

00000000004044c0 <__strtoul_internal@plt>:
  4044c0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4044c4:	ldr	x17, [x16, #688]
  4044c8:	add	x16, x16, #0x2b0
  4044cc:	br	x17

00000000004044d0 <calloc@plt>:
  4044d0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4044d4:	ldr	x17, [x16, #696]
  4044d8:	add	x16, x16, #0x2b8
  4044dc:	br	x17

00000000004044e0 <lsetxattr@plt>:
  4044e0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4044e4:	ldr	x17, [x16, #704]
  4044e8:	add	x16, x16, #0x2c0
  4044ec:	br	x17

00000000004044f0 <listxattr@plt>:
  4044f0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4044f4:	ldr	x17, [x16, #712]
  4044f8:	add	x16, x16, #0x2c8
  4044fc:	br	x17

0000000000404500 <execv@plt>:
  404500:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404504:	ldr	x17, [x16, #720]
  404508:	add	x16, x16, #0x2d0
  40450c:	br	x17

0000000000404510 <strcasecmp@plt>:
  404510:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404514:	ldr	x17, [x16, #728]
  404518:	add	x16, x16, #0x2d8
  40451c:	br	x17

0000000000404520 <gmtime@plt>:
  404520:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404524:	ldr	x17, [x16, #736]
  404528:	add	x16, x16, #0x2e0
  40452c:	br	x17

0000000000404530 <readdir@plt>:
  404530:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404534:	ldr	x17, [x16, #744]
  404538:	add	x16, x16, #0x2e8
  40453c:	br	x17

0000000000404540 <realloc@plt>:
  404540:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404544:	ldr	x17, [x16, #752]
  404548:	add	x16, x16, #0x2f0
  40454c:	br	x17

0000000000404550 <__ctype_toupper_loc@plt>:
  404550:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404554:	ldr	x17, [x16, #760]
  404558:	add	x16, x16, #0x2f8
  40455c:	br	x17

0000000000404560 <acl_set_file@plt>:
  404560:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404564:	ldr	x17, [x16, #768]
  404568:	add	x16, x16, #0x300
  40456c:	br	x17

0000000000404570 <getpagesize@plt>:
  404570:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404574:	ldr	x17, [x16, #776]
  404578:	add	x16, x16, #0x308
  40457c:	br	x17

0000000000404580 <lgetxattr@plt>:
  404580:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404584:	ldr	x17, [x16, #784]
  404588:	add	x16, x16, #0x310
  40458c:	br	x17

0000000000404590 <strdup@plt>:
  404590:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404594:	ldr	x17, [x16, #792]
  404598:	add	x16, x16, #0x318
  40459c:	br	x17

00000000004045a0 <closedir@plt>:
  4045a0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4045a4:	ldr	x17, [x16, #800]
  4045a8:	add	x16, x16, #0x320
  4045ac:	br	x17

00000000004045b0 <strerror@plt>:
  4045b0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4045b4:	ldr	x17, [x16, #808]
  4045b8:	add	x16, x16, #0x328
  4045bc:	br	x17

00000000004045c0 <__openat_2@plt>:
  4045c0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4045c4:	ldr	x17, [x16, #816]
  4045c8:	add	x16, x16, #0x330
  4045cc:	br	x17

00000000004045d0 <close@plt>:
  4045d0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4045d4:	ldr	x17, [x16, #824]
  4045d8:	add	x16, x16, #0x338
  4045dc:	br	x17

00000000004045e0 <strrchr@plt>:
  4045e0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4045e4:	ldr	x17, [x16, #832]
  4045e8:	add	x16, x16, #0x340
  4045ec:	br	x17

00000000004045f0 <acl_to_text@plt>:
  4045f0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4045f4:	ldr	x17, [x16, #840]
  4045f8:	add	x16, x16, #0x348
  4045fc:	br	x17

0000000000404600 <__gmon_start__@plt>:
  404600:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404604:	ldr	x17, [x16, #848]
  404608:	add	x16, x16, #0x350
  40460c:	br	x17

0000000000404610 <mktime@plt>:
  404610:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404614:	ldr	x17, [x16, #856]
  404618:	add	x16, x16, #0x358
  40461c:	br	x17

0000000000404620 <fdopendir@plt>:
  404620:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404624:	ldr	x17, [x16, #864]
  404628:	add	x16, x16, #0x360
  40462c:	br	x17

0000000000404630 <write@plt>:
  404630:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404634:	ldr	x17, [x16, #872]
  404638:	add	x16, x16, #0x368
  40463c:	br	x17

0000000000404640 <btowc@plt>:
  404640:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404644:	ldr	x17, [x16, #880]
  404648:	add	x16, x16, #0x370
  40464c:	br	x17

0000000000404650 <mkdtemp@plt>:
  404650:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404654:	ldr	x17, [x16, #888]
  404658:	add	x16, x16, #0x378
  40465c:	br	x17

0000000000404660 <abort@plt>:
  404660:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404664:	ldr	x17, [x16, #896]
  404668:	add	x16, x16, #0x380
  40466c:	br	x17

0000000000404670 <setgid@plt>:
  404670:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404674:	ldr	x17, [x16, #904]
  404678:	add	x16, x16, #0x388
  40467c:	br	x17

0000000000404680 <mbsinit@plt>:
  404680:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404684:	ldr	x17, [x16, #912]
  404688:	add	x16, x16, #0x390
  40468c:	br	x17

0000000000404690 <__overflow@plt>:
  404690:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404694:	ldr	x17, [x16, #920]
  404698:	add	x16, x16, #0x398
  40469c:	br	x17

00000000004046a0 <access@plt>:
  4046a0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4046a4:	ldr	x17, [x16, #928]
  4046a8:	add	x16, x16, #0x3a0
  4046ac:	br	x17

00000000004046b0 <fpathconf@plt>:
  4046b0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4046b4:	ldr	x17, [x16, #936]
  4046b8:	add	x16, x16, #0x3a8
  4046bc:	br	x17

00000000004046c0 <puts@plt>:
  4046c0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4046c4:	ldr	x17, [x16, #944]
  4046c8:	add	x16, x16, #0x3b0
  4046cc:	br	x17

00000000004046d0 <getxattr@plt>:
  4046d0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4046d4:	ldr	x17, [x16, #952]
  4046d8:	add	x16, x16, #0x3b8
  4046dc:	br	x17

00000000004046e0 <memcmp@plt>:
  4046e0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4046e4:	ldr	x17, [x16, #960]
  4046e8:	add	x16, x16, #0x3c0
  4046ec:	br	x17

00000000004046f0 <textdomain@plt>:
  4046f0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4046f4:	ldr	x17, [x16, #968]
  4046f8:	add	x16, x16, #0x3c8
  4046fc:	br	x17

0000000000404700 <execvp@plt>:
  404700:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404704:	ldr	x17, [x16, #976]
  404708:	add	x16, x16, #0x3d0
  40470c:	br	x17

0000000000404710 <__fprintf_chk@plt>:
  404710:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404714:	ldr	x17, [x16, #984]
  404718:	add	x16, x16, #0x3d8
  40471c:	br	x17

0000000000404720 <strcmp@plt>:
  404720:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404724:	ldr	x17, [x16, #992]
  404728:	add	x16, x16, #0x3e0
  40472c:	br	x17

0000000000404730 <getpwuid@plt>:
  404730:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404734:	ldr	x17, [x16, #1000]
  404738:	add	x16, x16, #0x3e8
  40473c:	br	x17

0000000000404740 <iconv@plt>:
  404740:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404744:	ldr	x17, [x16, #1008]
  404748:	add	x16, x16, #0x3f0
  40474c:	br	x17

0000000000404750 <__ctype_b_loc@plt>:
  404750:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404754:	ldr	x17, [x16, #1016]
  404758:	add	x16, x16, #0x3f8
  40475c:	br	x17

0000000000404760 <rewinddir@plt>:
  404760:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404764:	ldr	x17, [x16, #1024]
  404768:	add	x16, x16, #0x400
  40476c:	br	x17

0000000000404770 <acl_get_file@plt>:
  404770:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404774:	ldr	x17, [x16, #1032]
  404778:	add	x16, x16, #0x408
  40477c:	br	x17

0000000000404780 <strtol@plt>:
  404780:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404784:	ldr	x17, [x16, #1040]
  404788:	add	x16, x16, #0x410
  40478c:	br	x17

0000000000404790 <fseeko@plt>:
  404790:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404794:	ldr	x17, [x16, #1048]
  404798:	add	x16, x16, #0x418
  40479c:	br	x17

00000000004047a0 <sigwait@plt>:
  4047a0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4047a4:	ldr	x17, [x16, #1056]
  4047a8:	add	x16, x16, #0x420
  4047ac:	br	x17

00000000004047b0 <chdir@plt>:
  4047b0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4047b4:	ldr	x17, [x16, #1064]
  4047b8:	add	x16, x16, #0x428
  4047bc:	br	x17

00000000004047c0 <free@plt>:
  4047c0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4047c4:	ldr	x17, [x16, #1072]
  4047c8:	add	x16, x16, #0x430
  4047cc:	br	x17

00000000004047d0 <__strcat_chk@plt>:
  4047d0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4047d4:	ldr	x17, [x16, #1080]
  4047d8:	add	x16, x16, #0x438
  4047dc:	br	x17

00000000004047e0 <renameat2@plt>:
  4047e0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4047e4:	ldr	x17, [x16, #1088]
  4047e8:	add	x16, x16, #0x440
  4047ec:	br	x17

00000000004047f0 <__ctype_get_mb_cur_max@plt>:
  4047f0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4047f4:	ldr	x17, [x16, #1096]
  4047f8:	add	x16, x16, #0x448
  4047fc:	br	x17

0000000000404800 <getgid@plt>:
  404800:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404804:	ldr	x17, [x16, #1104]
  404808:	add	x16, x16, #0x450
  40480c:	br	x17

0000000000404810 <renameat@plt>:
  404810:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404814:	ldr	x17, [x16, #1112]
  404818:	add	x16, x16, #0x458
  40481c:	br	x17

0000000000404820 <mempcpy@plt>:
  404820:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404824:	ldr	x17, [x16, #1120]
  404828:	add	x16, x16, #0x460
  40482c:	br	x17

0000000000404830 <fgetxattr@plt>:
  404830:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404834:	ldr	x17, [x16, #1128]
  404838:	add	x16, x16, #0x468
  40483c:	br	x17

0000000000404840 <fchownat@plt>:
  404840:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404844:	ldr	x17, [x16, #1136]
  404848:	add	x16, x16, #0x470
  40484c:	br	x17

0000000000404850 <strndup@plt>:
  404850:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404854:	ldr	x17, [x16, #1144]
  404858:	add	x16, x16, #0x478
  40485c:	br	x17

0000000000404860 <strspn@plt>:
  404860:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404864:	ldr	x17, [x16, #1152]
  404868:	add	x16, x16, #0x480
  40486c:	br	x17

0000000000404870 <strchr@plt>:
  404870:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404874:	ldr	x17, [x16, #1160]
  404878:	add	x16, x16, #0x488
  40487c:	br	x17

0000000000404880 <globfree@plt>:
  404880:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404884:	ldr	x17, [x16, #1168]
  404888:	add	x16, x16, #0x490
  40488c:	br	x17

0000000000404890 <memrchr@plt>:
  404890:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404894:	ldr	x17, [x16, #1176]
  404898:	add	x16, x16, #0x498
  40489c:	br	x17

00000000004048a0 <utimensat@plt>:
  4048a0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4048a4:	ldr	x17, [x16, #1184]
  4048a8:	add	x16, x16, #0x4a0
  4048ac:	br	x17

00000000004048b0 <fwrite@plt>:
  4048b0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4048b4:	ldr	x17, [x16, #1192]
  4048b8:	add	x16, x16, #0x4a8
  4048bc:	br	x17

00000000004048c0 <fnmatch@plt>:
  4048c0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4048c4:	ldr	x17, [x16, #1200]
  4048c8:	add	x16, x16, #0x4b0
  4048cc:	br	x17

00000000004048d0 <fflush_unlocked@plt>:
  4048d0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4048d4:	ldr	x17, [x16, #1208]
  4048d8:	add	x16, x16, #0x4b8
  4048dc:	br	x17

00000000004048e0 <fcntl@plt>:
  4048e0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4048e4:	ldr	x17, [x16, #1216]
  4048e8:	add	x16, x16, #0x4c0
  4048ec:	br	x17

00000000004048f0 <dcngettext@plt>:
  4048f0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4048f4:	ldr	x17, [x16, #1224]
  4048f8:	add	x16, x16, #0x4c8
  4048fc:	br	x17

0000000000404900 <ftello@plt>:
  404900:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404904:	ldr	x17, [x16, #1232]
  404908:	add	x16, x16, #0x4d0
  40490c:	br	x17

0000000000404910 <strcpy@plt>:
  404910:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404914:	ldr	x17, [x16, #1240]
  404918:	add	x16, x16, #0x4d8
  40491c:	br	x17

0000000000404920 <dirfd@plt>:
  404920:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404924:	ldr	x17, [x16, #1248]
  404928:	add	x16, x16, #0x4e0
  40492c:	br	x17

0000000000404930 <unsetenv@plt>:
  404930:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404934:	ldr	x17, [x16, #1256]
  404938:	add	x16, x16, #0x4e8
  40493c:	br	x17

0000000000404940 <iconv_open@plt>:
  404940:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404944:	ldr	x17, [x16, #1264]
  404948:	add	x16, x16, #0x4f0
  40494c:	br	x17

0000000000404950 <read@plt>:
  404950:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404954:	ldr	x17, [x16, #1272]
  404958:	add	x16, x16, #0x4f8
  40495c:	br	x17

0000000000404960 <memchr@plt>:
  404960:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404964:	ldr	x17, [x16, #1280]
  404968:	add	x16, x16, #0x500
  40496c:	br	x17

0000000000404970 <isatty@plt>:
  404970:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404974:	ldr	x17, [x16, #1288]
  404978:	add	x16, x16, #0x508
  40497c:	br	x17

0000000000404980 <flistxattr@plt>:
  404980:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404984:	ldr	x17, [x16, #1296]
  404988:	add	x16, x16, #0x510
  40498c:	br	x17

0000000000404990 <iswalnum@plt>:
  404990:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404994:	ldr	x17, [x16, #1304]
  404998:	add	x16, x16, #0x518
  40499c:	br	x17

00000000004049a0 <__fxstat@plt>:
  4049a0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4049a4:	ldr	x17, [x16, #1312]
  4049a8:	add	x16, x16, #0x520
  4049ac:	br	x17

00000000004049b0 <strchrnul@plt>:
  4049b0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4049b4:	ldr	x17, [x16, #1320]
  4049b8:	add	x16, x16, #0x528
  4049bc:	br	x17

00000000004049c0 <dcgettext@plt>:
  4049c0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4049c4:	ldr	x17, [x16, #1328]
  4049c8:	add	x16, x16, #0x530
  4049cc:	br	x17

00000000004049d0 <mkfifoat@plt>:
  4049d0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4049d4:	ldr	x17, [x16, #1336]
  4049d8:	add	x16, x16, #0x538
  4049dc:	br	x17

00000000004049e0 <fputs_unlocked@plt>:
  4049e0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4049e4:	ldr	x17, [x16, #1344]
  4049e8:	add	x16, x16, #0x540
  4049ec:	br	x17

00000000004049f0 <acl_from_text@plt>:
  4049f0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  4049f4:	ldr	x17, [x16, #1352]
  4049f8:	add	x16, x16, #0x548
  4049fc:	br	x17

0000000000404a00 <glob@plt>:
  404a00:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404a04:	ldr	x17, [x16, #1360]
  404a08:	add	x16, x16, #0x550
  404a0c:	br	x17

0000000000404a10 <ftruncate@plt>:
  404a10:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404a14:	ldr	x17, [x16, #1368]
  404a18:	add	x16, x16, #0x558
  404a1c:	br	x17

0000000000404a20 <llistxattr@plt>:
  404a20:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404a24:	ldr	x17, [x16, #1376]
  404a28:	add	x16, x16, #0x560
  404a2c:	br	x17

0000000000404a30 <dup2@plt>:
  404a30:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404a34:	ldr	x17, [x16, #1384]
  404a38:	add	x16, x16, #0x568
  404a3c:	br	x17

0000000000404a40 <symlinkat@plt>:
  404a40:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404a44:	ldr	x17, [x16, #1392]
  404a48:	add	x16, x16, #0x570
  404a4c:	br	x17

0000000000404a50 <sigaddset@plt>:
  404a50:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404a54:	ldr	x17, [x16, #1400]
  404a58:	add	x16, x16, #0x578
  404a5c:	br	x17

0000000000404a60 <towupper@plt>:
  404a60:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404a64:	ldr	x17, [x16, #1408]
  404a68:	add	x16, x16, #0x580
  404a6c:	br	x17

0000000000404a70 <iswprint@plt>:
  404a70:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404a74:	ldr	x17, [x16, #1416]
  404a78:	add	x16, x16, #0x588
  404a7c:	br	x17

0000000000404a80 <umask@plt>:
  404a80:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404a84:	ldr	x17, [x16, #1424]
  404a88:	add	x16, x16, #0x590
  404a8c:	br	x17

0000000000404a90 <strcspn@plt>:
  404a90:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404a94:	ldr	x17, [x16, #1432]
  404a98:	add	x16, x16, #0x598
  404a9c:	br	x17

0000000000404aa0 <faccessat@plt>:
  404aa0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404aa4:	ldr	x17, [x16, #1440]
  404aa8:	add	x16, x16, #0x5a0
  404aac:	br	x17

0000000000404ab0 <openat@plt>:
  404ab0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404ab4:	ldr	x17, [x16, #1448]
  404ab8:	add	x16, x16, #0x5a8
  404abc:	br	x17

0000000000404ac0 <__assert_fail@plt>:
  404ac0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404ac4:	ldr	x17, [x16, #1456]
  404ac8:	add	x16, x16, #0x5b0
  404acc:	br	x17

0000000000404ad0 <__errno_location@plt>:
  404ad0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404ad4:	ldr	x17, [x16, #1464]
  404ad8:	add	x16, x16, #0x5b8
  404adc:	br	x17

0000000000404ae0 <execlp@plt>:
  404ae0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404ae4:	ldr	x17, [x16, #1472]
  404ae8:	add	x16, x16, #0x5c0
  404aec:	br	x17

0000000000404af0 <getenv@plt>:
  404af0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404af4:	ldr	x17, [x16, #1480]
  404af8:	add	x16, x16, #0x5c8
  404afc:	br	x17

0000000000404b00 <putchar@plt>:
  404b00:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404b04:	ldr	x17, [x16, #1488]
  404b08:	add	x16, x16, #0x5d0
  404b0c:	br	x17

0000000000404b10 <__xstat@plt>:
  404b10:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404b14:	ldr	x17, [x16, #1496]
  404b18:	add	x16, x16, #0x5d8
  404b1c:	br	x17

0000000000404b20 <getgrgid@plt>:
  404b20:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404b24:	ldr	x17, [x16, #1504]
  404b28:	add	x16, x16, #0x5e0
  404b2c:	br	x17

0000000000404b30 <fchmodat@plt>:
  404b30:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404b34:	ldr	x17, [x16, #1512]
  404b38:	add	x16, x16, #0x5e8
  404b3c:	br	x17

0000000000404b40 <__getdelim@plt>:
  404b40:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404b44:	ldr	x17, [x16, #1520]
  404b48:	add	x16, x16, #0x5f0
  404b4c:	br	x17

0000000000404b50 <timegm@plt>:
  404b50:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404b54:	ldr	x17, [x16, #1528]
  404b58:	add	x16, x16, #0x5f8
  404b5c:	br	x17

0000000000404b60 <waitpid@plt>:
  404b60:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404b64:	ldr	x17, [x16, #1536]
  404b68:	add	x16, x16, #0x600
  404b6c:	br	x17

0000000000404b70 <fchown@plt>:
  404b70:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404b74:	ldr	x17, [x16, #1544]
  404b78:	add	x16, x16, #0x608
  404b7c:	br	x17

0000000000404b80 <towlower@plt>:
  404b80:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404b84:	ldr	x17, [x16, #1552]
  404b88:	add	x16, x16, #0x610
  404b8c:	br	x17

0000000000404b90 <__uflow@plt>:
  404b90:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404b94:	ldr	x17, [x16, #1560]
  404b98:	add	x16, x16, #0x618
  404b9c:	br	x17

0000000000404ba0 <__open_2@plt>:
  404ba0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404ba4:	ldr	x17, [x16, #1568]
  404ba8:	add	x16, x16, #0x620
  404bac:	br	x17

0000000000404bb0 <creat@plt>:
  404bb0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404bb4:	ldr	x17, [x16, #1576]
  404bb8:	add	x16, x16, #0x628
  404bbc:	br	x17

0000000000404bc0 <gethostbyname@plt>:
  404bc0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404bc4:	ldr	x17, [x16, #1584]
  404bc8:	add	x16, x16, #0x630
  404bcc:	br	x17

0000000000404bd0 <ioctl@plt>:
  404bd0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404bd4:	ldr	x17, [x16, #1592]
  404bd8:	add	x16, x16, #0x638
  404bdc:	br	x17

0000000000404be0 <setlocale@plt>:
  404be0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404be4:	ldr	x17, [x16, #1600]
  404be8:	add	x16, x16, #0x640
  404bec:	br	x17

0000000000404bf0 <acl_free@plt>:
  404bf0:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404bf4:	ldr	x17, [x16, #1608]
  404bf8:	add	x16, x16, #0x648
  404bfc:	br	x17

0000000000404c00 <__fxstatat@plt>:
  404c00:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404c04:	ldr	x17, [x16, #1616]
  404c08:	add	x16, x16, #0x650
  404c0c:	br	x17

0000000000404c10 <readlinkat@plt>:
  404c10:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404c14:	ldr	x17, [x16, #1624]
  404c18:	add	x16, x16, #0x658
  404c1c:	br	x17

0000000000404c20 <wcrtomb@plt>:
  404c20:	adrp	x16, 47d000 <mbrtowc@GLIBC_2.17>
  404c24:	ldr	x17, [x16, #1632]
  404c28:	add	x16, x16, #0x660
  404c2c:	br	x17

Disassembly of section .text:

0000000000404c30 <argp_failure@@Base-0x2cf14>:
  404c30:	mov	x29, #0x0                   	// #0
  404c34:	mov	x30, #0x0                   	// #0
  404c38:	mov	x5, x0
  404c3c:	ldr	x1, [sp]
  404c40:	add	x2, sp, #0x8
  404c44:	mov	x6, sp
  404c48:	movz	x0, #0x0, lsl #48
  404c4c:	movk	x0, #0x0, lsl #32
  404c50:	movk	x0, #0x42, lsl #16
  404c54:	movk	x0, #0x4a9c
  404c58:	movz	x3, #0x0, lsl #48
  404c5c:	movk	x3, #0x0, lsl #32
  404c60:	movk	x3, #0x45, lsl #16
  404c64:	movk	x3, #0x2858
  404c68:	movz	x4, #0x0, lsl #48
  404c6c:	movk	x4, #0x0, lsl #32
  404c70:	movk	x4, #0x45, lsl #16
  404c74:	movk	x4, #0x28d8
  404c78:	bl	4043e0 <__libc_start_main@plt>
  404c7c:	bl	404660 <abort@plt>
  404c80:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x3ae64>
  404c84:	ldr	x0, [x0, #4064]
  404c88:	cbz	x0, 404c90 <wcrtomb@plt+0x70>
  404c8c:	b	404600 <__gmon_start__@plt>
  404c90:	ret
  404c94:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  404c98:	add	x0, x0, #0x440
  404c9c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  404ca0:	add	x1, x1, #0x440
  404ca4:	cmp	x0, x1
  404ca8:	b.eq	404cdc <wcrtomb@plt+0xbc>  // b.none
  404cac:	stp	x29, x30, [sp, #-32]!
  404cb0:	mov	x29, sp
  404cb4:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x10e64>
  404cb8:	ldr	x0, [x0, #2296]
  404cbc:	str	x0, [sp, #24]
  404cc0:	mov	x1, x0
  404cc4:	cbz	x1, 404cd4 <wcrtomb@plt+0xb4>
  404cc8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  404ccc:	add	x0, x0, #0x440
  404cd0:	blr	x1
  404cd4:	ldp	x29, x30, [sp], #32
  404cd8:	ret
  404cdc:	ret
  404ce0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  404ce4:	add	x0, x0, #0x440
  404ce8:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  404cec:	add	x1, x1, #0x440
  404cf0:	sub	x0, x0, x1
  404cf4:	lsr	x1, x0, #63
  404cf8:	add	x0, x1, x0, asr #3
  404cfc:	cmp	xzr, x0, asr #1
  404d00:	b.eq	404d38 <wcrtomb@plt+0x118>  // b.none
  404d04:	stp	x29, x30, [sp, #-32]!
  404d08:	mov	x29, sp
  404d0c:	asr	x1, x0, #1
  404d10:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x10e64>
  404d14:	ldr	x0, [x0, #2304]
  404d18:	str	x0, [sp, #24]
  404d1c:	mov	x2, x0
  404d20:	cbz	x2, 404d30 <wcrtomb@plt+0x110>
  404d24:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  404d28:	add	x0, x0, #0x440
  404d2c:	blr	x2
  404d30:	ldp	x29, x30, [sp], #32
  404d34:	ret
  404d38:	ret
  404d3c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  404d40:	ldrb	w0, [x0, #1136]
  404d44:	cbnz	w0, 404d68 <wcrtomb@plt+0x148>
  404d48:	stp	x29, x30, [sp, #-16]!
  404d4c:	mov	x29, sp
  404d50:	bl	404c94 <wcrtomb@plt+0x74>
  404d54:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  404d58:	mov	w1, #0x1                   	// #1
  404d5c:	strb	w1, [x0, #1136]
  404d60:	ldp	x29, x30, [sp], #16
  404d64:	ret
  404d68:	ret
  404d6c:	stp	x29, x30, [sp, #-16]!
  404d70:	mov	x29, sp
  404d74:	bl	404ce0 <wcrtomb@plt+0xc0>
  404d78:	ldp	x29, x30, [sp], #16
  404d7c:	ret
  404d80:	mov	x3, x0
  404d84:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  404d88:	ldr	x0, [x0, #1144]
  404d8c:	cbz	x0, 404dac <wcrtomb@plt+0x18c>
  404d90:	ldr	x1, [x0]
  404d94:	cbz	x1, 404dac <wcrtomb@plt+0x18c>
  404d98:	ldr	x2, [x1, #8]
  404d9c:	cmp	x3, x2, lsl #9
  404da0:	b.cc	404dac <wcrtomb@plt+0x18c>  // b.lo, b.ul, b.last
  404da4:	mov	x0, x1
  404da8:	b	404d8c <wcrtomb@plt+0x16c>
  404dac:	ret
  404db0:	ldr	w3, [x1]
  404db4:	sbfiz	x2, x3, #1, #32
  404db8:	add	x2, x2, w3, sxtw
  404dbc:	lsl	x2, x2, #3
  404dc0:	adrp	x4, 47d000 <_obstack_memory_used@@Base+0x3be64>
  404dc4:	add	x4, x4, #0x678
  404dc8:	ldr	w2, [x4, x2]
  404dcc:	cbz	w2, 404df8 <wcrtomb@plt+0x1d8>
  404dd0:	sbfiz	x4, x3, #1, #32
  404dd4:	add	x4, x4, w3, sxtw
  404dd8:	adrp	x5, 47d000 <_obstack_memory_used@@Base+0x3be64>
  404ddc:	add	x5, x5, #0x678
  404de0:	add	x4, x5, x4, lsl #3
  404de4:	cmp	w0, w2
  404de8:	b.eq	404e04 <wcrtomb@plt+0x1e4>  // b.none
  404dec:	add	w3, w3, #0x1
  404df0:	ldr	w2, [x4, #24]!
  404df4:	cbnz	w2, 404de4 <wcrtomb@plt+0x1c4>
  404df8:	str	w3, [x1]
  404dfc:	mov	x0, #0x0                   	// #0
  404e00:	ret
  404e04:	add	w0, w3, #0x1
  404e08:	str	w0, [x1]
  404e0c:	sbfiz	x0, x3, #1, #32
  404e10:	add	x3, x0, w3, sxtw
  404e14:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  404e18:	add	x0, x0, #0x678
  404e1c:	add	x0, x0, x3, lsl #3
  404e20:	b	404e00 <wcrtomb@plt+0x1e0>
  404e24:	stp	x29, x30, [sp, #-48]!
  404e28:	mov	x29, sp
  404e2c:	stp	x19, x20, [sp, #16]
  404e30:	str	x21, [sp, #32]
  404e34:	mov	x21, x0
  404e38:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  404e3c:	ldr	x19, [x0, #1144]
  404e40:	cmp	x19, #0x0
  404e44:	ccmp	x19, x21, #0x4, ne  // ne = any
  404e48:	b.eq	404e70 <wcrtomb@plt+0x250>  // b.none
  404e4c:	mov	x20, x19
  404e50:	ldr	x19, [x19]
  404e54:	ldr	x0, [x20, #16]
  404e58:	bl	4047c0 <free@plt>
  404e5c:	mov	x0, x20
  404e60:	bl	4047c0 <free@plt>
  404e64:	cmp	x19, #0x0
  404e68:	ccmp	x21, x19, #0x4, ne  // ne = any
  404e6c:	b.ne	404e4c <wcrtomb@plt+0x22c>  // b.any
  404e70:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  404e74:	str	x19, [x0, #1144]
  404e78:	cbz	x19, 404e8c <wcrtomb@plt+0x26c>
  404e7c:	ldp	x19, x20, [sp, #16]
  404e80:	ldr	x21, [sp, #32]
  404e84:	ldp	x29, x30, [sp], #48
  404e88:	ret
  404e8c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  404e90:	str	xzr, [x0, #1152]
  404e94:	b	404e7c <wcrtomb@plt+0x25c>
  404e98:	stp	x29, x30, [sp, #-32]!
  404e9c:	mov	x29, sp
  404ea0:	stp	x19, x20, [sp, #16]
  404ea4:	mov	x19, x0
  404ea8:	mov	x20, x1
  404eac:	bl	404e24 <wcrtomb@plt+0x204>
  404eb0:	cbz	x19, 404ecc <wcrtomb@plt+0x2ac>
  404eb4:	ldr	x0, [x19, #8]
  404eb8:	add	x0, x0, x20
  404ebc:	str	x0, [x19, #8]
  404ec0:	str	xzr, [x19, #40]
  404ec4:	ldr	x19, [x19]
  404ec8:	cbnz	x19, 404eb4 <wcrtomb@plt+0x294>
  404ecc:	ldp	x19, x20, [sp, #16]
  404ed0:	ldp	x29, x30, [sp], #32
  404ed4:	ret
  404ed8:	sub	sp, sp, #0x550
  404edc:	stp	x29, x30, [sp]
  404ee0:	mov	x29, sp
  404ee4:	stp	x19, x20, [sp, #16]
  404ee8:	str	x21, [sp, #32]
  404eec:	str	d8, [sp, #40]
  404ef0:	mov	x19, x0
  404ef4:	fmov	d8, d0
  404ef8:	mov	w21, #0x0                   	// #0
  404efc:	cbz	x1, 404f08 <wcrtomb@plt+0x2e8>
  404f00:	ldrb	w0, [x1]
  404f04:	cbnz	w0, 404f70 <wcrtomb@plt+0x350>
  404f08:	mov	x4, #0x1                   	// #1
  404f0c:	mov	x3, x4
  404f10:	mov	w2, #0x1b0                 	// #432
  404f14:	add	x1, sp, #0x2c0
  404f18:	fcvtzu	x0, d8
  404f1c:	bl	438394 <argp_parse@@Base+0x4c54>
  404f20:	mov	x20, x0
  404f24:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  404f28:	ldr	d0, [x0, #1160]
  404f2c:	fcmpe	d0, #0.0
  404f30:	b.le	404f9c <wcrtomb@plt+0x37c>
  404f34:	fdiv	d0, d8, d0
  404f38:	mov	x0, #0x43f0000000000000    	// #4895412794951729152
  404f3c:	fmov	d1, x0
  404f40:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x10e64>
  404f44:	add	x4, x4, #0x908
  404f48:	fcmpe	d0, d1
  404f4c:	b.pl	404fa4 <wcrtomb@plt+0x384>  // b.nfrst
  404f50:	mov	x4, #0x1                   	// #1
  404f54:	mov	x3, x4
  404f58:	mov	w2, #0x1b0                 	// #432
  404f5c:	add	x1, sp, #0x30
  404f60:	fcvtzu	x0, d0
  404f64:	bl	438394 <argp_parse@@Base+0x4c54>
  404f68:	mov	x4, x0
  404f6c:	b	404fa4 <wcrtomb@plt+0x384>
  404f70:	mov	w2, #0x5                   	// #5
  404f74:	mov	x0, #0x0                   	// #0
  404f78:	bl	4049c0 <dcgettext@plt>
  404f7c:	mov	x3, x0
  404f80:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x10e64>
  404f84:	add	x2, x2, #0x910
  404f88:	mov	w1, #0x1                   	// #1
  404f8c:	mov	x0, x19
  404f90:	bl	404710 <__fprintf_chk@plt>
  404f94:	mov	w21, w0
  404f98:	b	404f08 <wcrtomb@plt+0x2e8>
  404f9c:	adrp	x4, 452000 <_obstack_memory_used@@Base+0x10e64>
  404fa0:	add	x4, x4, #0x908
  404fa4:	mov	x3, x20
  404fa8:	fmov	d0, d8
  404fac:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x10e64>
  404fb0:	add	x2, x2, #0x918
  404fb4:	mov	w1, #0x1                   	// #1
  404fb8:	mov	x0, x19
  404fbc:	bl	404710 <__fprintf_chk@plt>
  404fc0:	add	w0, w21, w0
  404fc4:	ldp	x19, x20, [sp, #16]
  404fc8:	ldr	x21, [sp, #32]
  404fcc:	ldp	x29, x30, [sp]
  404fd0:	ldr	d8, [sp, #40]
  404fd4:	add	sp, sp, #0x550
  404fd8:	ret
  404fdc:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x3be64>
  404fe0:	add	x1, x1, #0x678
  404fe4:	ldr	w0, [x1, #288]
  404fe8:	add	w0, w0, #0x1
  404fec:	str	w0, [x1, #288]
  404ff0:	tbnz	w0, #31, 40500c <wcrtomb@plt+0x3ec>
  404ff4:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  404ff8:	add	x0, x0, #0x678
  404ffc:	ldr	w1, [x0, #292]
  405000:	add	w1, w1, #0x1
  405004:	str	w1, [x0, #292]
  405008:	ret
  40500c:	stp	x29, x30, [sp, #-16]!
  405010:	mov	x29, sp
  405014:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  405018:	ldr	x0, [x0, #944]
  40501c:	cbz	x0, 405024 <wcrtomb@plt+0x404>
  405020:	blr	x0
  405024:	mov	w2, #0x5                   	// #5
  405028:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  40502c:	add	x1, x1, #0x928
  405030:	mov	x0, #0x0                   	// #0
  405034:	bl	4049c0 <dcgettext@plt>
  405038:	mov	x2, x0
  40503c:	mov	w1, #0x0                   	// #0
  405040:	mov	w0, #0x0                   	// #0
  405044:	bl	404050 <error@plt>
  405048:	bl	40e5ac <wcrtomb@plt+0x998c>
  40504c:	stp	x29, x30, [sp, #-32]!
  405050:	mov	x29, sp
  405054:	str	x19, [sp, #16]
  405058:	mov	w0, #0x1                   	// #1
  40505c:	bl	4092d8 <wcrtomb@plt+0x46b8>
  405060:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  405064:	ldr	d0, [x0, #568]
  405068:	fcmp	d0, #0.0
  40506c:	b.eq	4050a0 <wcrtomb@plt+0x480>  // b.none
  405070:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405074:	ldr	d1, [x0, #1168]
  405078:	fcmpe	d0, d1
  40507c:	b.hi	4050a0 <wcrtomb@plt+0x480>  // b.pmore
  405080:	bl	404ad0 <__errno_location@plt>
  405084:	mov	w1, #0x1c                  	// #28
  405088:	str	w1, [x0]
  40508c:	mov	x19, #0x0                   	// #0
  405090:	mov	x0, x19
  405094:	ldr	x19, [sp, #16]
  405098:	ldp	x29, x30, [sp], #32
  40509c:	ret
  4050a0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4050a4:	ldrb	w0, [x0, #472]
  4050a8:	cbz	w0, 405120 <wcrtomb@plt+0x500>
  4050ac:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4050b0:	ldr	x19, [x0, #856]
  4050b4:	cbz	x19, 405090 <wcrtomb@plt+0x470>
  4050b8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4050bc:	ldrb	w0, [x0, #12]
  4050c0:	cbz	w0, 405090 <wcrtomb@plt+0x470>
  4050c4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4050c8:	ldr	w0, [x0, #1176]
  4050cc:	cbnz	w0, 405090 <wcrtomb@plt+0x470>
  4050d0:	mov	x0, x19
  4050d4:	bl	404d80 <wcrtomb@plt+0x160>
  4050d8:	cbz	x0, 405090 <wcrtomb@plt+0x470>
  4050dc:	ldr	x4, [x0, #8]
  4050e0:	sub	x2, x19, x4, lsl #9
  4050e4:	ldr	x3, [x0, #40]
  4050e8:	add	x3, x3, x2, lsr #9
  4050ec:	str	x3, [x0, #40]
  4050f0:	ldr	x1, [x0, #32]
  4050f4:	cmp	x1, x2
  4050f8:	csel	x2, x1, x2, ls  // ls = plast
  4050fc:	sub	x1, x1, x2
  405100:	str	x1, [x0, #32]
  405104:	mov	x2, x4
  405108:	cbnz	x1, 405114 <wcrtomb@plt+0x4f4>
  40510c:	add	x2, x4, x3
  405110:	ldr	x0, [x0]
  405114:	neg	x1, x2
  405118:	bl	404e98 <wcrtomb@plt+0x278>
  40511c:	b	405090 <wcrtomb@plt+0x470>
  405120:	bl	421250 <wcrtomb@plt+0x1c630>
  405124:	mov	x19, x0
  405128:	b	4050b4 <wcrtomb@plt+0x494>
  40512c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  405130:	ldr	w0, [x0, #796]
  405134:	cmp	w0, #0x4
  405138:	b.eq	405160 <wcrtomb@plt+0x540>  // b.none
  40513c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  405140:	ldr	w0, [x0, #8]
  405144:	cmn	w0, #0x1
  405148:	b.eq	40516c <wcrtomb@plt+0x54c>  // b.none
  40514c:	cmp	w0, #0x0
  405150:	cset	w1, ne  // ne = any
  405154:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  405158:	strb	w1, [x0, #864]
  40515c:	ret
  405160:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  405164:	strb	wzr, [x0, #864]
  405168:	b	40513c <wcrtomb@plt+0x51c>
  40516c:	stp	x29, x30, [sp, #-160]!
  405170:	mov	x29, sp
  405174:	str	x19, [sp, #16]
  405178:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40517c:	ldrb	w19, [x0, #12]
  405180:	cbnz	w19, 4051bc <wcrtomb@plt+0x59c>
  405184:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  405188:	ldr	x0, [x0, #840]
  40518c:	cbnz	x0, 4051c0 <wcrtomb@plt+0x5a0>
  405190:	add	x2, sp, #0x20
  405194:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  405198:	ldr	w1, [x0, #912]
  40519c:	mov	w0, #0x0                   	// #0
  4051a0:	bl	4049a0 <__fxstat@plt>
  4051a4:	cbnz	w0, 4051c0 <wcrtomb@plt+0x5a0>
  4051a8:	ldr	w0, [sp, #48]
  4051ac:	and	w0, w0, #0xf000
  4051b0:	cmp	w0, #0x8, lsl #12
  4051b4:	cset	w19, eq  // eq = none
  4051b8:	b	4051c0 <wcrtomb@plt+0x5a0>
  4051bc:	mov	w19, #0x0                   	// #0
  4051c0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4051c4:	strb	w19, [x0, #864]
  4051c8:	ldr	x19, [sp, #16]
  4051cc:	ldp	x29, x30, [sp], #160
  4051d0:	ret
  4051d4:	stp	x29, x30, [sp, #-32]!
  4051d8:	mov	x29, sp
  4051dc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4051e0:	add	x0, x0, #0x478
  4051e4:	ldr	w1, [x0, #36]
  4051e8:	add	x0, x0, w1, sxtw #3
  4051ec:	ldr	x0, [x0, #40]
  4051f0:	cbz	x0, 405234 <wcrtomb@plt+0x614>
  4051f4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4051f8:	add	x0, x0, #0x478
  4051fc:	ldrsw	x1, [x0, #36]
  405200:	add	x0, x0, x1, lsl #3
  405204:	ldr	x1, [x0, #40]
  405208:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40520c:	str	x1, [x0, #3920]
  405210:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405214:	str	x1, [x0, #3944]
  405218:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40521c:	ldrsw	x0, [x0, #684]
  405220:	add	x0, x1, x0, lsl #9
  405224:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405228:	str	x0, [x1, #3880]
  40522c:	ldp	x29, x30, [sp], #32
  405230:	ret
  405234:	stp	x19, x20, [sp, #16]
  405238:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40523c:	add	x20, x20, #0x478
  405240:	add	x0, x20, #0x38
  405244:	sbfiz	x19, x1, #3, #32
  405248:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  40524c:	ldr	x1, [x1, #856]
  405250:	add	x0, x0, x19
  405254:	bl	41ba74 <wcrtomb@plt+0x16e54>
  405258:	add	x1, x20, x19
  40525c:	str	x0, [x1, #40]
  405260:	ldp	x19, x20, [sp, #16]
  405264:	b	4051f4 <wcrtomb@plt+0x5d4>
  405268:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  40526c:	ldr	w1, [x1, #752]
  405270:	cmp	w1, #0x4
  405274:	b.eq	40527c <wcrtomb@plt+0x65c>  // b.none
  405278:	ret
  40527c:	stp	x29, x30, [sp, #-464]!
  405280:	mov	x29, sp
  405284:	str	x19, [sp, #16]
  405288:	mov	x19, x0
  40528c:	mov	x2, #0x1a8                 	// #424
  405290:	mov	w1, #0x0                   	// #0
  405294:	add	x0, sp, #0x28
  405298:	bl	404420 <memset@plt>
  40529c:	ldr	x0, [x19, #16]
  4052a0:	str	x0, [sp, #48]
  4052a4:	str	x0, [sp, #40]
  4052a8:	mov	w0, #0x81a4                	// #33188
  4052ac:	str	w0, [sp, #144]
  4052b0:	bl	404120 <getuid@plt>
  4052b4:	str	w0, [sp, #152]
  4052b8:	bl	404800 <getgid@plt>
  4052bc:	str	w0, [sp, #156]
  4052c0:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  4052c4:	ldrsw	x2, [x0, #1948]
  4052c8:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  4052cc:	add	x1, x1, #0x940
  4052d0:	add	x0, sp, #0x28
  4052d4:	bl	4134dc <wcrtomb@plt+0xe8bc>
  4052d8:	str	x0, [sp, #40]
  4052dc:	str	x0, [sp, #48]
  4052e0:	ldr	x0, [x19, #32]
  4052e4:	str	x0, [sp, #176]
  4052e8:	str	x0, [sp, #304]
  4052ec:	add	x0, sp, #0x28
  4052f0:	bl	40b6a4 <wcrtomb@plt+0x6a84>
  4052f4:	mov	x2, x0
  4052f8:	cbz	x0, 405320 <wcrtomb@plt+0x700>
  4052fc:	add	x1, sp, #0x28
  405300:	mov	w0, #0x0                   	// #0
  405304:	bl	40b368 <wcrtomb@plt+0x6748>
  405308:	bl	40b444 <wcrtomb@plt+0x6824>
  40530c:	ldr	x0, [sp, #40]
  405310:	bl	4047c0 <free@plt>
  405314:	ldr	x19, [sp, #16]
  405318:	ldp	x29, x30, [sp], #464
  40531c:	ret
  405320:	bl	404660 <abort@plt>
  405324:	adrp	x3, 481000 <argp_program_version_hook@@Base+0x298>
  405328:	ldrb	w3, [x3, #12]
  40532c:	cbnz	w3, 405334 <wcrtomb@plt+0x714>
  405330:	ret
  405334:	stp	x29, x30, [sp, #-48]!
  405338:	mov	x29, sp
  40533c:	stp	x19, x20, [sp, #16]
  405340:	stp	x21, x22, [sp, #32]
  405344:	mov	x22, x0
  405348:	mov	x21, x1
  40534c:	mov	x20, x2
  405350:	mov	x0, #0x30                  	// #48
  405354:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  405358:	mov	x19, x0
  40535c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405360:	ldr	x0, [x0, #1152]
  405364:	cbz	x0, 4053bc <wcrtomb@plt+0x79c>
  405368:	str	x19, [x0]
  40536c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405370:	str	x19, [x0, #1152]
  405374:	str	xzr, [x19]
  405378:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40537c:	ldr	x0, [x0, #3944]
  405380:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405384:	ldr	x1, [x1, #3920]
  405388:	sub	x0, x0, x1
  40538c:	asr	x0, x0, #9
  405390:	str	x0, [x19, #8]
  405394:	mov	x0, x22
  405398:	bl	440154 <argp_parse@@Base+0xca14>
  40539c:	str	x0, [x19, #16]
  4053a0:	str	x21, [x19, #24]
  4053a4:	str	x20, [x19, #32]
  4053a8:	str	xzr, [x19, #40]
  4053ac:	ldp	x19, x20, [sp, #16]
  4053b0:	ldp	x21, x22, [sp, #32]
  4053b4:	ldp	x29, x30, [sp], #48
  4053b8:	ret
  4053bc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4053c0:	str	x19, [x0, #1144]
  4053c4:	b	40536c <wcrtomb@plt+0x74c>
  4053c8:	stp	x29, x30, [sp, #-16]!
  4053cc:	mov	x29, sp
  4053d0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4053d4:	add	x0, x0, #0x478
  4053d8:	add	x0, x0, #0x1a0
  4053dc:	bl	414070 <wcrtomb@plt+0xf450>
  4053e0:	ldp	x29, x30, [sp], #16
  4053e4:	ret
  4053e8:	stp	x29, x30, [sp, #-16]!
  4053ec:	mov	x29, sp
  4053f0:	ldr	x1, [x0, #136]
  4053f4:	mov	x2, x1
  4053f8:	ldr	x0, [x0]
  4053fc:	bl	405324 <wcrtomb@plt+0x704>
  405400:	ldp	x29, x30, [sp], #16
  405404:	ret
  405408:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40540c:	ldrb	w0, [x0, #12]
  405410:	cbnz	w0, 405418 <wcrtomb@plt+0x7f8>
  405414:	ret
  405418:	stp	x29, x30, [sp, #-16]!
  40541c:	mov	x29, sp
  405420:	mov	x0, #0x0                   	// #0
  405424:	bl	404e24 <wcrtomb@plt+0x204>
  405428:	ldp	x29, x30, [sp], #16
  40542c:	ret
  405430:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405434:	ldr	x1, [x1, #1144]
  405438:	cbz	x1, 405440 <wcrtomb@plt+0x820>
  40543c:	str	x0, [x1, #32]
  405440:	ret
  405444:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405448:	str	wzr, [x0, #1640]
  40544c:	ret
  405450:	stp	x29, x30, [sp, #-32]!
  405454:	mov	x29, sp
  405458:	str	x19, [sp, #16]
  40545c:	adrp	x19, 481000 <argp_program_version_hook@@Base+0x298>
  405460:	add	x19, x19, #0x288
  405464:	mov	x0, x19
  405468:	bl	4373d0 <argp_parse@@Base+0x3c90>
  40546c:	ldp	x2, x3, [x19]
  405470:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  405474:	add	x0, x0, #0x368
  405478:	stp	x2, x3, [x0]
  40547c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  405480:	add	x0, x0, #0x320
  405484:	stp	x2, x3, [x0]
  405488:	ldr	x19, [sp, #16]
  40548c:	ldp	x29, x30, [sp], #32
  405490:	ret
  405494:	stp	x29, x30, [sp, #-48]!
  405498:	mov	x29, sp
  40549c:	str	x19, [sp, #16]
  4054a0:	add	x0, sp, #0x20
  4054a4:	bl	4373d0 <argp_parse@@Base+0x3c90>
  4054a8:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4054ac:	add	x19, x19, #0x478
  4054b0:	adrp	x2, 481000 <argp_program_version_hook@@Base+0x298>
  4054b4:	add	x0, x2, #0x320
  4054b8:	ldr	x3, [x0, #8]
  4054bc:	ldr	x1, [sp, #40]
  4054c0:	sub	x1, x1, x3
  4054c4:	fmov	d0, x1
  4054c8:	scvtf	d0, d0
  4054cc:	mov	x1, #0xcd6500000000        	// #225833675390976
  4054d0:	movk	x1, #0x41cd, lsl #48
  4054d4:	fmov	d1, x1
  4054d8:	fdiv	d0, d0, d1
  4054dc:	ldr	x2, [x2, #800]
  4054e0:	ldr	x1, [sp, #32]
  4054e4:	sub	x1, x1, x2
  4054e8:	fmov	d1, x1
  4054ec:	scvtf	d1, d1
  4054f0:	fadd	d0, d0, d1
  4054f4:	ldr	d1, [x19, #16]
  4054f8:	fadd	d0, d0, d1
  4054fc:	str	d0, [x19, #16]
  405500:	bl	4373d0 <argp_parse@@Base+0x3c90>
  405504:	ldr	d0, [x19, #16]
  405508:	ldr	x19, [sp, #16]
  40550c:	ldp	x29, x30, [sp], #48
  405510:	ret
  405514:	mov	x1, x0
  405518:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40551c:	ldr	x0, [x0, #840]
  405520:	cbz	x0, 405528 <wcrtomb@plt+0x908>
  405524:	ret
  405528:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40552c:	ldr	w2, [x2, #1644]
  405530:	cbz	w2, 405524 <wcrtomb@plt+0x904>
  405534:	stp	x29, x30, [sp, #-16]!
  405538:	mov	x29, sp
  40553c:	str	wzr, [x1]
  405540:	mov	w0, w2
  405544:	bl	404db0 <wcrtomb@plt+0x190>
  405548:	cbz	x0, 405550 <wcrtomb@plt+0x930>
  40554c:	ldr	x0, [x0, #8]
  405550:	ldp	x29, x30, [sp], #16
  405554:	ret
  405558:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  40555c:	ldr	x1, [x1, #840]
  405560:	cbnz	x1, 40558c <wcrtomb@plt+0x96c>
  405564:	stp	x29, x30, [sp, #-16]!
  405568:	mov	x29, sp
  40556c:	mov	x1, x0
  405570:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405574:	ldr	w0, [x0, #1644]
  405578:	bl	404db0 <wcrtomb@plt+0x190>
  40557c:	cbz	x0, 405584 <wcrtomb@plt+0x964>
  405580:	ldr	x0, [x0, #8]
  405584:	ldp	x29, x30, [sp], #16
  405588:	ret
  40558c:	mov	x0, #0x0                   	// #0
  405590:	ret
  405594:	stp	x29, x30, [sp, #-96]!
  405598:	mov	x29, sp
  40559c:	stp	x19, x20, [sp, #16]
  4055a0:	stp	x21, x22, [sp, #32]
  4055a4:	mov	x19, x0
  4055a8:	mov	x22, x1
  4055ac:	mov	w21, w3
  4055b0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4055b4:	ldr	w0, [x0, #796]
  4055b8:	cmp	w0, #0x4
  4055bc:	b.eq	40564c <wcrtomb@plt+0xa2c>  // b.none
  4055c0:	b.ls	405608 <wcrtomb@plt+0x9e8>  // b.plast
  4055c4:	cmp	w0, #0x7
  4055c8:	b.hi	40563c <wcrtomb@plt+0xa1c>  // b.pmore
  4055cc:	mov	w2, #0x5                   	// #5
  4055d0:	ldr	x1, [x1]
  4055d4:	mov	x0, #0x0                   	// #0
  4055d8:	bl	4049c0 <dcgettext@plt>
  4055dc:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4055e0:	ldr	x2, [x1, #3872]
  4055e4:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  4055e8:	ldr	x1, [x1, #856]
  4055ec:	mul	x2, x2, x1
  4055f0:	ucvtf	d0, x2
  4055f4:	mov	x1, x0
  4055f8:	mov	x0, x19
  4055fc:	bl	404ed8 <wcrtomb@plt+0x2b8>
  405600:	mov	w20, w0
  405604:	b	405758 <wcrtomb@plt+0xb38>
  405608:	sub	w0, w0, #0x1
  40560c:	cmp	w0, #0x2
  405610:	b.hi	405644 <wcrtomb@plt+0xa24>  // b.pmore
  405614:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405618:	add	x0, x0, #0x478
  40561c:	ldr	d1, [x0, #504]
  405620:	ldr	d0, [x0, #24]
  405624:	fadd	d0, d1, d0
  405628:	ldr	x1, [x22, #8]
  40562c:	mov	x0, x19
  405630:	bl	404ed8 <wcrtomb@plt+0x2b8>
  405634:	mov	w20, w0
  405638:	b	405758 <wcrtomb@plt+0xb38>
  40563c:	cmp	w0, #0x8
  405640:	b.eq	405614 <wcrtomb@plt+0x9f4>  // b.none
  405644:	str	x23, [sp, #48]
  405648:	bl	404660 <abort@plt>
  40564c:	str	x23, [sp, #48]
  405650:	mov	w23, w2
  405654:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405658:	ldr	x0, [x0, #3872]
  40565c:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  405660:	ldr	x1, [x1, #856]
  405664:	mul	x0, x0, x1
  405668:	ucvtf	d0, x0
  40566c:	ldr	x1, [x22]
  405670:	mov	x0, x19
  405674:	bl	404ed8 <wcrtomb@plt+0x2b8>
  405678:	mov	w20, w0
  40567c:	ldr	x0, [x19, #40]
  405680:	ldr	x1, [x19, #48]
  405684:	cmp	x0, x1
  405688:	b.cs	405790 <wcrtomb@plt+0xb70>  // b.hs, b.nlast
  40568c:	add	x1, x0, #0x1
  405690:	str	x1, [x19, #40]
  405694:	strb	w23, [x0]
  405698:	add	w20, w20, #0x1
  40569c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4056a0:	add	x0, x0, #0x478
  4056a4:	ldr	d1, [x0, #504]
  4056a8:	ldr	d0, [x0, #24]
  4056ac:	fadd	d0, d1, d0
  4056b0:	ldr	x1, [x22, #8]
  4056b4:	mov	x0, x19
  4056b8:	bl	404ed8 <wcrtomb@plt+0x2b8>
  4056bc:	add	w20, w20, w0
  4056c0:	ldr	x0, [x19, #40]
  4056c4:	ldr	x1, [x19, #48]
  4056c8:	cmp	x0, x1
  4056cc:	b.cs	4057a0 <wcrtomb@plt+0xb80>  // b.hs, b.nlast
  4056d0:	add	x1, x0, #0x1
  4056d4:	str	x1, [x19, #40]
  4056d8:	strb	w23, [x0]
  4056dc:	add	w20, w20, #0x1
  4056e0:	ldr	x1, [x22, #16]
  4056e4:	cbz	x1, 4056f0 <wcrtomb@plt+0xad0>
  4056e8:	ldrb	w0, [x1]
  4056ec:	cbnz	w0, 4057b0 <wcrtomb@plt+0xb90>
  4056f0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4056f4:	ldr	x0, [x0, #3872]
  4056f8:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4056fc:	ldr	x1, [x1, #3968]
  405700:	sub	x0, x0, x1
  405704:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  405708:	ldr	x1, [x1, #856]
  40570c:	mul	x0, x0, x1
  405710:	ucvtf	d0, x0
  405714:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405718:	add	x0, x0, #0x478
  40571c:	ldr	d1, [x0, #504]
  405720:	ldr	d2, [x0, #24]
  405724:	fadd	d1, d1, d2
  405728:	fsub	d0, d0, d1
  40572c:	add	x1, sp, #0x48
  405730:	fcvtzu	x0, d0
  405734:	bl	438ce8 <argp_parse@@Base+0x55a8>
  405738:	mov	x3, x0
  40573c:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x12e64>
  405740:	add	x2, x2, #0x848
  405744:	mov	w1, #0x1                   	// #1
  405748:	mov	x0, x19
  40574c:	bl	404710 <__fprintf_chk@plt>
  405750:	add	w20, w20, w0
  405754:	ldr	x23, [sp, #48]
  405758:	cbz	w21, 40577c <wcrtomb@plt+0xb5c>
  40575c:	ldr	x0, [x19, #40]
  405760:	ldr	x1, [x19, #48]
  405764:	cmp	x0, x1
  405768:	b.cs	4057dc <wcrtomb@plt+0xbbc>  // b.hs, b.nlast
  40576c:	add	x1, x0, #0x1
  405770:	str	x1, [x19, #40]
  405774:	strb	w21, [x0]
  405778:	add	w20, w20, #0x1
  40577c:	mov	w0, w20
  405780:	ldp	x19, x20, [sp, #16]
  405784:	ldp	x21, x22, [sp, #32]
  405788:	ldp	x29, x30, [sp], #96
  40578c:	ret
  405790:	and	w1, w23, #0xff
  405794:	mov	x0, x19
  405798:	bl	404690 <__overflow@plt>
  40579c:	b	405698 <wcrtomb@plt+0xa78>
  4057a0:	and	w1, w23, #0xff
  4057a4:	mov	x0, x19
  4057a8:	bl	404690 <__overflow@plt>
  4057ac:	b	4056dc <wcrtomb@plt+0xabc>
  4057b0:	mov	w2, #0x5                   	// #5
  4057b4:	mov	x0, #0x0                   	// #0
  4057b8:	bl	4049c0 <dcgettext@plt>
  4057bc:	mov	x3, x0
  4057c0:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x10e64>
  4057c4:	add	x2, x2, #0x910
  4057c8:	mov	w1, #0x1                   	// #1
  4057cc:	mov	x0, x19
  4057d0:	bl	404710 <__fprintf_chk@plt>
  4057d4:	add	w20, w20, w0
  4057d8:	b	4056f0 <wcrtomb@plt+0xad0>
  4057dc:	and	w1, w21, #0xff
  4057e0:	mov	x0, x19
  4057e4:	bl	404690 <__overflow@plt>
  4057e8:	b	405778 <wcrtomb@plt+0xb58>
  4057ec:	stp	x29, x30, [sp, #-16]!
  4057f0:	mov	x29, sp
  4057f4:	mov	w3, #0xa                   	// #10
  4057f8:	mov	w2, w3
  4057fc:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  405800:	add	x1, x1, #0x148
  405804:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405808:	ldr	x0, [x0, #1096]
  40580c:	bl	405594 <wcrtomb@plt+0x974>
  405810:	ldp	x29, x30, [sp], #16
  405814:	ret
  405818:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40581c:	ldr	x0, [x0, #3944]
  405820:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405824:	ldr	x1, [x1, #3920]
  405828:	sub	x0, x0, x1
  40582c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405830:	ldr	x1, [x1, #1656]
  405834:	add	x0, x1, x0, asr #9
  405838:	ret
  40583c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405840:	ldrb	w0, [x0, #1664]
  405844:	cbz	w0, 405880 <wcrtomb@plt+0xc60>
  405848:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40584c:	strb	wzr, [x0, #1664]
  405850:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405854:	ldr	x1, [x0, #3920]
  405858:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40585c:	str	x1, [x0, #3944]
  405860:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  405864:	ldrsw	x0, [x0, #684]
  405868:	add	x0, x1, x0, lsl #9
  40586c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405870:	str	x0, [x1, #3880]
  405874:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405878:	mov	w1, #0x1                   	// #1
  40587c:	str	w1, [x0, #3896]
  405880:	ret
  405884:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405888:	ldr	x2, [x1, #3944]
  40588c:	cmp	x0, x2
  405890:	b.cc	4058c0 <wcrtomb@plt+0xca0>  // b.lo, b.ul, b.last
  405894:	mov	x3, x2
  405898:	mov	x1, x2
  40589c:	add	x1, x1, #0x200
  4058a0:	cmp	x0, x1
  4058a4:	b.cs	40589c <wcrtomb@plt+0xc7c>  // b.hs, b.nlast
  4058a8:	sub	x0, x0, x3
  4058ac:	and	x0, x0, #0xfffffffffffffe00
  4058b0:	add	x0, x0, #0x200
  4058b4:	add	x2, x2, x0
  4058b8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4058bc:	str	x2, [x0, #3944]
  4058c0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4058c4:	ldr	x0, [x0, #3880]
  4058c8:	cmp	x0, x2
  4058cc:	b.cc	4058d4 <wcrtomb@plt+0xcb4>  // b.lo, b.ul, b.last
  4058d0:	ret
  4058d4:	stp	x29, x30, [sp, #-16]!
  4058d8:	mov	x29, sp
  4058dc:	bl	404660 <abort@plt>
  4058e0:	stp	x29, x30, [sp, #-32]!
  4058e4:	mov	x29, sp
  4058e8:	str	x19, [sp, #16]
  4058ec:	mov	x19, x0
  4058f0:	bl	42491c <wcrtomb@plt+0x1fcfc>
  4058f4:	mov	w2, #0x0                   	// #0
  4058f8:	mov	x1, x19
  4058fc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405900:	add	x0, x0, #0xfa8
  405904:	bl	4187e4 <wcrtomb@plt+0x13bc4>
  405908:	cmp	w0, #0x1
  40590c:	b.eq	405960 <wcrtomb@plt+0xd40>  // b.none
  405910:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  405914:	ldr	x0, [x0, #944]
  405918:	cbz	x0, 405920 <wcrtomb@plt+0xd00>
  40591c:	blr	x0
  405920:	mov	w2, #0x5                   	// #5
  405924:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  405928:	add	x1, x1, #0x960
  40592c:	mov	x0, #0x0                   	// #0
  405930:	bl	4049c0 <dcgettext@plt>
  405934:	mov	x2, x0
  405938:	mov	w1, #0x0                   	// #0
  40593c:	mov	w0, #0x0                   	// #0
  405940:	bl	404050 <error@plt>
  405944:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405948:	mov	w1, #0x2                   	// #2
  40594c:	str	w1, [x0, #3392]
  405950:	mov	w0, #0x0                   	// #0
  405954:	ldr	x19, [sp, #16]
  405958:	ldp	x29, x30, [sp], #32
  40595c:	ret
  405960:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405964:	ldr	x0, [x0, #4008]
  405968:	bl	405884 <wcrtomb@plt+0xc64>
  40596c:	mov	w0, #0x1                   	// #1
  405970:	b	405954 <wcrtomb@plt+0xd34>
  405974:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405978:	ldr	x1, [x1, #3880]
  40597c:	sub	x0, x1, x0
  405980:	ret
  405984:	stp	x29, x30, [sp, #-16]!
  405988:	mov	x29, sp
  40598c:	bl	4045d0 <close@plt>
  405990:	cbnz	w0, 40599c <wcrtomb@plt+0xd7c>
  405994:	ldp	x29, x30, [sp], #16
  405998:	ret
  40599c:	mov	w2, #0x5                   	// #5
  4059a0:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  4059a4:	add	x1, x1, #0x988
  4059a8:	mov	x0, #0x0                   	// #0
  4059ac:	bl	4049c0 <dcgettext@plt>
  4059b0:	bl	429a50 <wcrtomb@plt+0x24e30>
  4059b4:	b	405994 <wcrtomb@plt+0xd74>
  4059b8:	stp	x29, x30, [sp, #-16]!
  4059bc:	mov	x29, sp
  4059c0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4059c4:	ldr	x0, [x0, #672]
  4059c8:	ldr	x0, [x0]
  4059cc:	bl	429bf4 <wcrtomb@plt+0x24fd4>
  4059d0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4059d4:	ldr	x0, [x0, #1656]
  4059d8:	cbz	x0, 405a00 <wcrtomb@plt+0xde0>
  4059dc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4059e0:	add	x0, x0, #0x478
  4059e4:	ldr	w1, [x0, #496]
  4059e8:	add	w2, w1, #0x1
  4059ec:	str	w2, [x0, #496]
  4059f0:	cmp	w1, #0xa
  4059f4:	b.gt	405a38 <wcrtomb@plt+0xe18>
  4059f8:	ldp	x29, x30, [sp], #16
  4059fc:	ret
  405a00:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  405a04:	ldr	x0, [x0, #944]
  405a08:	cbz	x0, 405a10 <wcrtomb@plt+0xdf0>
  405a0c:	blr	x0
  405a10:	mov	w2, #0x5                   	// #5
  405a14:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  405a18:	add	x1, x1, #0x990
  405a1c:	mov	x0, #0x0                   	// #0
  405a20:	bl	4049c0 <dcgettext@plt>
  405a24:	mov	x2, x0
  405a28:	mov	w1, #0x0                   	// #0
  405a2c:	mov	w0, #0x0                   	// #0
  405a30:	bl	404050 <error@plt>
  405a34:	bl	40e5ac <wcrtomb@plt+0x998c>
  405a38:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  405a3c:	ldr	x0, [x0, #944]
  405a40:	cbz	x0, 405a48 <wcrtomb@plt+0xe28>
  405a44:	blr	x0
  405a48:	mov	w2, #0x5                   	// #5
  405a4c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  405a50:	add	x1, x1, #0x9b8
  405a54:	mov	x0, #0x0                   	// #0
  405a58:	bl	4049c0 <dcgettext@plt>
  405a5c:	mov	x2, x0
  405a60:	mov	w1, #0x0                   	// #0
  405a64:	mov	w0, #0x0                   	// #0
  405a68:	bl	404050 <error@plt>
  405a6c:	bl	40e5ac <wcrtomb@plt+0x998c>
  405a70:	stp	x29, x30, [sp, #-208]!
  405a74:	mov	x29, sp
  405a78:	stp	x19, x20, [sp, #16]
  405a7c:	stp	x21, x22, [sp, #32]
  405a80:	stp	x23, x24, [sp, #48]
  405a84:	str	x25, [sp, #64]
  405a88:	mov	x19, x0
  405a8c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405a90:	ldr	x21, [x0, #3920]
  405a94:	add	x21, x21, x19
  405a98:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  405a9c:	ldr	x20, [x0, #856]
  405aa0:	subs	x20, x20, x19
  405aa4:	b.eq	405ad0 <wcrtomb@plt+0xeb0>  // b.none
  405aa8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405aac:	ldr	w0, [x0, #408]
  405ab0:	tbz	w0, #22, 405ad0 <wcrtomb@plt+0xeb0>
  405ab4:	and	x0, x20, #0x1ff
  405ab8:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405abc:	ldr	x1, [x1, #1656]
  405ac0:	orr	x0, x0, x1
  405ac4:	cmp	x0, #0x0
  405ac8:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  405acc:	b.ne	405ae8 <wcrtomb@plt+0xec8>  // b.any
  405ad0:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405ad4:	add	x24, x24, #0x478
  405ad8:	adrp	x22, 481000 <argp_program_version_hook@@Base+0x298>
  405adc:	add	x22, x22, #0x390
  405ae0:	mov	w23, #0x3fffffff            	// #1073741823
  405ae4:	b	405c18 <wcrtomb@plt+0xff8>
  405ae8:	add	x2, sp, #0x50
  405aec:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  405af0:	ldr	w1, [x0, #912]
  405af4:	mov	w0, #0x0                   	// #0
  405af8:	bl	4049a0 <__fxstat@plt>
  405afc:	cbnz	w0, 405b60 <wcrtomb@plt+0xf40>
  405b00:	ldr	w0, [sp, #96]
  405b04:	mov	w1, #0xb000                	// #45056
  405b08:	and	w0, w0, w1
  405b0c:	cmp	w0, #0x2, lsl #12
  405b10:	b.ne	405ad0 <wcrtomb@plt+0xeb0>  // b.any
  405b14:	lsr	x22, x19, #9
  405b18:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  405b1c:	ldr	x0, [x0, #944]
  405b20:	cbz	x0, 405b28 <wcrtomb@plt+0xf08>
  405b24:	blr	x0
  405b28:	mov	w4, #0x5                   	// #5
  405b2c:	mov	x3, x22
  405b30:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x10e64>
  405b34:	add	x2, x2, #0x9d8
  405b38:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  405b3c:	add	x1, x1, #0x9f8
  405b40:	mov	x0, #0x0                   	// #0
  405b44:	bl	4048f0 <dcngettext@plt>
  405b48:	mov	x3, x22
  405b4c:	mov	x2, x0
  405b50:	mov	w1, #0x0                   	// #0
  405b54:	mov	w0, #0x0                   	// #0
  405b58:	bl	404050 <error@plt>
  405b5c:	b	405ad0 <wcrtomb@plt+0xeb0>
  405b60:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  405b64:	ldr	x0, [x0, #672]
  405b68:	ldr	x0, [x0]
  405b6c:	bl	41b924 <wcrtomb@plt+0x16d04>
  405b70:	b	405ad0 <wcrtomb@plt+0xeb0>
  405b74:	cbnz	x19, 405c34 <wcrtomb@plt+0x1014>
  405b78:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  405b7c:	ldr	x0, [x0, #856]
  405b80:	sub	x0, x0, x20
  405b84:	and	x0, x0, #0xfffffffffffffe00
  405b88:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405b8c:	ldr	x1, [x1, #3920]
  405b90:	add	x0, x1, x0
  405b94:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405b98:	str	x0, [x1, #3880]
  405b9c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405ba0:	ldr	x0, [x1, #3872]
  405ba4:	add	x0, x0, #0x1
  405ba8:	str	x0, [x1, #3872]
  405bac:	ldp	x19, x20, [sp, #16]
  405bb0:	ldp	x21, x22, [sp, #32]
  405bb4:	ldp	x23, x24, [sp, #48]
  405bb8:	ldr	x25, [sp, #64]
  405bbc:	ldp	x29, x30, [sp], #208
  405bc0:	ret
  405bc4:	mov	x2, x20
  405bc8:	mov	x1, x21
  405bcc:	add	w0, w0, w25
  405bd0:	bl	42ae78 <wcrtomb@plt+0x26258>
  405bd4:	mov	x19, x0
  405bd8:	cmn	x19, #0x1
  405bdc:	b.ne	405c04 <wcrtomb@plt+0xfe4>  // b.any
  405be0:	bl	4059b8 <wcrtomb@plt+0xd98>
  405be4:	ldr	w0, [x22]
  405be8:	cmp	w0, w23
  405bec:	b.gt	405bc4 <wcrtomb@plt+0xfa4>
  405bf0:	mov	x2, x20
  405bf4:	mov	x1, x21
  405bf8:	bl	43f41c <argp_parse@@Base+0xbcdc>
  405bfc:	mov	x19, x0
  405c00:	b	405bd8 <wcrtomb@plt+0xfb8>
  405c04:	cbz	x19, 405b78 <wcrtomb@plt+0xf58>
  405c08:	ldrb	w0, [x24, #521]
  405c0c:	cbz	w0, 405c3c <wcrtomb@plt+0x101c>
  405c10:	sub	x20, x20, x19
  405c14:	add	x21, x21, x19
  405c18:	tst	x20, #0x1ff
  405c1c:	b.ne	405b74 <wcrtomb@plt+0xf54>  // b.any
  405c20:	cmp	x20, #0x0
  405c24:	ccmp	x19, #0x0, #0x4, ne  // ne = any
  405c28:	b.eq	405b78 <wcrtomb@plt+0xf58>  // b.none
  405c2c:	ldrb	w0, [x24, #521]
  405c30:	cbz	w0, 405b78 <wcrtomb@plt+0xf58>
  405c34:	mov	w25, #0xc0000000            	// #-1073741824
  405c38:	b	405be4 <wcrtomb@plt+0xfc4>
  405c3c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  405c40:	ldr	x0, [x0, #856]
  405c44:	sub	x20, x0, x20
  405c48:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  405c4c:	ldr	x0, [x0, #944]
  405c50:	cbz	x0, 405c58 <wcrtomb@plt+0x1038>
  405c54:	blr	x0
  405c58:	mov	w4, #0x5                   	// #5
  405c5c:	mov	x3, x20
  405c60:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x10e64>
  405c64:	add	x2, x2, #0xa10
  405c68:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  405c6c:	add	x1, x1, #0xa38
  405c70:	mov	x0, #0x0                   	// #0
  405c74:	bl	4048f0 <dcngettext@plt>
  405c78:	mov	x3, x20
  405c7c:	mov	x2, x0
  405c80:	mov	w1, #0x0                   	// #0
  405c84:	mov	w0, #0x0                   	// #0
  405c88:	bl	404050 <error@plt>
  405c8c:	bl	40e5ac <wcrtomb@plt+0x998c>
  405c90:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405c94:	ldr	x2, [x1, #3944]
  405c98:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405c9c:	ldr	x1, [x1, #3920]
  405ca0:	sub	x2, x2, x1
  405ca4:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  405ca8:	ldrsw	x1, [x1, #684]
  405cac:	sub	x2, x1, x2, asr #9
  405cb0:	cmp	x0, x2, lsl #9
  405cb4:	b.le	405dd0 <wcrtomb@plt+0x11b0>
  405cb8:	stp	x29, x30, [sp, #-48]!
  405cbc:	mov	x29, sp
  405cc0:	stp	x19, x20, [sp, #16]
  405cc4:	lsl	x19, x2, #9
  405cc8:	sub	x19, x0, x19
  405ccc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  405cd0:	ldr	x20, [x0, #856]
  405cd4:	cmp	x19, x20
  405cd8:	b.cc	405dd8 <wcrtomb@plt+0x11b8>  // b.lo, b.ul, b.last
  405cdc:	str	x21, [sp, #32]
  405ce0:	bl	405818 <wcrtomb@plt+0xbf8>
  405ce4:	mov	x21, x0
  405ce8:	udiv	x1, x19, x20
  405cec:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  405cf0:	ldr	w0, [x0, #912]
  405cf4:	mov	w2, #0x3fffffff            	// #1073741823
  405cf8:	cmp	w0, w2
  405cfc:	b.le	405d88 <wcrtomb@plt+0x1168>
  405d00:	mov	w2, #0x1                   	// #1
  405d04:	mul	x1, x20, x1
  405d08:	mov	w3, #0xc0000000            	// #-1073741824
  405d0c:	add	w0, w0, w3
  405d10:	bl	42b034 <wcrtomb@plt+0x26414>
  405d14:	tbnz	x0, #63, 405de0 <wcrtomb@plt+0x11c0>
  405d18:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  405d1c:	ldr	x2, [x1, #856]
  405d20:	udiv	x1, x0, x2
  405d24:	msub	x1, x1, x2, x0
  405d28:	cbnz	x1, 405d98 <wcrtomb@plt+0x1178>
  405d2c:	add	x1, x0, #0x1ff
  405d30:	cmp	x0, #0x0
  405d34:	csel	x1, x1, x0, lt  // lt = tstop
  405d38:	asr	x1, x1, #9
  405d3c:	sub	x0, x1, x21
  405d40:	adrp	x2, 481000 <argp_program_version_hook@@Base+0x298>
  405d44:	ldrsw	x3, [x2, #684]
  405d48:	adrp	x4, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405d4c:	sdiv	x2, x0, x3
  405d50:	ldr	x5, [x4, #3872]
  405d54:	add	x2, x2, x5
  405d58:	str	x2, [x4, #3872]
  405d5c:	sub	x1, x1, x3
  405d60:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405d64:	str	x1, [x2, #1656]
  405d68:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405d6c:	ldr	x2, [x1, #3880]
  405d70:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405d74:	str	x2, [x1, #3944]
  405d78:	ldr	x21, [sp, #32]
  405d7c:	ldp	x19, x20, [sp, #16]
  405d80:	ldp	x29, x30, [sp], #48
  405d84:	ret
  405d88:	mov	w2, #0x1                   	// #1
  405d8c:	mul	x1, x20, x1
  405d90:	bl	4041d0 <lseek@plt>
  405d94:	b	405d14 <wcrtomb@plt+0x10f4>
  405d98:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  405d9c:	ldr	x0, [x0, #944]
  405da0:	cbz	x0, 405da8 <wcrtomb@plt+0x1188>
  405da4:	blr	x0
  405da8:	mov	w2, #0x5                   	// #5
  405dac:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  405db0:	add	x1, x1, #0xa60
  405db4:	mov	x0, #0x0                   	// #0
  405db8:	bl	4049c0 <dcgettext@plt>
  405dbc:	mov	x2, x0
  405dc0:	mov	w1, #0x0                   	// #0
  405dc4:	mov	w0, #0x0                   	// #0
  405dc8:	bl	404050 <error@plt>
  405dcc:	bl	40e5ac <wcrtomb@plt+0x998c>
  405dd0:	mov	x0, #0x0                   	// #0
  405dd4:	ret
  405dd8:	mov	x0, #0x0                   	// #0
  405ddc:	b	405d7c <wcrtomb@plt+0x115c>
  405de0:	ldr	x21, [sp, #32]
  405de4:	b	405d7c <wcrtomb@plt+0x115c>
  405de8:	stp	x29, x30, [sp, #-16]!
  405dec:	mov	x29, sp
  405df0:	bl	42a1bc <wcrtomb@plt+0x2559c>
  405df4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  405df8:	ldr	w0, [x0, #912]
  405dfc:	mov	w1, #0x3fffffff            	// #1073741823
  405e00:	cmp	w0, w1
  405e04:	b.le	405e34 <wcrtomb@plt+0x1214>
  405e08:	mov	w1, #0xc0000000            	// #-1073741824
  405e0c:	add	w0, w0, w1
  405e10:	bl	42ae28 <wcrtomb@plt+0x26208>
  405e14:	cmp	w0, #0x0
  405e18:	cset	w0, ne  // ne = any
  405e1c:	cbnz	w0, 405e44 <wcrtomb@plt+0x1224>
  405e20:	mov	w1, #0x0                   	// #0
  405e24:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405e28:	ldr	w0, [x0, #1668]
  405e2c:	bl	421020 <wcrtomb@plt+0x1c400>
  405e30:	bl	40e5ac <wcrtomb@plt+0x998c>
  405e34:	bl	4045d0 <close@plt>
  405e38:	cmp	w0, #0x0
  405e3c:	cset	w0, ne  // ne = any
  405e40:	b	405e1c <wcrtomb@plt+0x11fc>
  405e44:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  405e48:	ldr	x0, [x0, #672]
  405e4c:	ldr	x0, [x0]
  405e50:	bl	429a50 <wcrtomb@plt+0x24e30>
  405e54:	b	405e20 <wcrtomb@plt+0x1200>
  405e58:	stp	x29, x30, [sp, #-48]!
  405e5c:	mov	x29, sp
  405e60:	stp	x19, x20, [sp, #16]
  405e64:	str	x21, [sp, #32]
  405e68:	mov	x19, x0
  405e6c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  405e70:	ldrb	w0, [x0, #633]
  405e74:	cbnz	w0, 405e94 <wcrtomb@plt+0x1274>
  405e78:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  405e7c:	ldr	x0, [x0, #672]
  405e80:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  405e84:	ldr	x2, [x1, #856]
  405e88:	mov	x1, x19
  405e8c:	ldr	x0, [x0]
  405e90:	bl	405de8 <wcrtomb@plt+0x11c8>
  405e94:	bl	404ad0 <__errno_location@plt>
  405e98:	mov	x20, x0
  405e9c:	ldr	w21, [x0]
  405ea0:	bl	4057ec <wcrtomb@plt+0xbcc>
  405ea4:	str	w21, [x20]
  405ea8:	b	405e78 <wcrtomb@plt+0x1258>
  405eac:	stp	x29, x30, [sp, #-16]!
  405eb0:	mov	x29, sp
  405eb4:	bl	40504c <wcrtomb@plt+0x42c>
  405eb8:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  405ebc:	ldr	x1, [x1, #856]
  405ec0:	cmp	x1, x0
  405ec4:	b.ne	405ef8 <wcrtomb@plt+0x12d8>  // b.any
  405ec8:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405ecc:	ldr	x1, [x2, #3888]
  405ed0:	add	x1, x1, #0x1
  405ed4:	str	x1, [x2, #3888]
  405ed8:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405edc:	add	x1, x1, #0x478
  405ee0:	scvtf	d0, x0
  405ee4:	ldr	d1, [x1, #24]
  405ee8:	fadd	d0, d0, d1
  405eec:	str	d0, [x1, #24]
  405ef0:	ldp	x29, x30, [sp], #16
  405ef4:	ret
  405ef8:	bl	405e58 <wcrtomb@plt+0x1238>
  405efc:	stp	x29, x30, [sp, #-64]!
  405f00:	mov	x29, sp
  405f04:	stp	x19, x20, [sp, #16]
  405f08:	stp	x21, x22, [sp, #32]
  405f0c:	str	x23, [sp, #48]
  405f10:	mov	w0, #0x0                   	// #0
  405f14:	bl	4092d8 <wcrtomb@plt+0x46b8>
  405f18:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405f1c:	str	wzr, [x0, #1640]
  405f20:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405f24:	ldrb	w0, [x0, #3928]
  405f28:	cbnz	w0, 405f8c <wcrtomb@plt+0x136c>
  405f2c:	adrp	x19, 481000 <argp_program_version_hook@@Base+0x298>
  405f30:	add	x19, x19, #0x390
  405f34:	mov	w22, #0x3fffffff            	// #1073741823
  405f38:	adrp	x20, 481000 <argp_program_version_hook@@Base+0x298>
  405f3c:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405f40:	mov	w23, #0xc0000000            	// #-1073741824
  405f44:	ldr	w0, [x19]
  405f48:	cmp	w0, w22
  405f4c:	b.le	405fc0 <wcrtomb@plt+0x13a0>
  405f50:	ldr	x2, [x20, #856]
  405f54:	ldr	x1, [x21, #3920]
  405f58:	add	w0, w0, w23
  405f5c:	bl	42ae78 <wcrtomb@plt+0x26258>
  405f60:	ldr	x1, [x20, #856]
  405f64:	cmp	x1, x0
  405f68:	b.eq	405fd0 <wcrtomb@plt+0x13b0>  // b.none
  405f6c:	cmn	x0, #0x1
  405f70:	b.eq	405fe4 <wcrtomb@plt+0x13c4>  // b.none
  405f74:	bl	405a70 <wcrtomb@plt+0xe50>
  405f78:	ldp	x19, x20, [sp, #16]
  405f7c:	ldp	x21, x22, [sp, #32]
  405f80:	ldr	x23, [sp, #48]
  405f84:	ldp	x29, x30, [sp], #64
  405f88:	ret
  405f8c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405f90:	ldr	x0, [x0, #1656]
  405f94:	cbz	x0, 405f2c <wcrtomb@plt+0x130c>
  405f98:	adrp	x19, 481000 <argp_program_version_hook@@Base+0x298>
  405f9c:	mov	w0, #0x1                   	// #1
  405fa0:	str	w0, [x19, #912]
  405fa4:	bl	421250 <wcrtomb@plt+0x1c630>
  405fa8:	str	wzr, [x19, #912]
  405fac:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  405fb0:	ldr	x1, [x1, #856]
  405fb4:	cmp	x1, x0
  405fb8:	b.eq	405f2c <wcrtomb@plt+0x130c>  // b.none
  405fbc:	bl	405e58 <wcrtomb@plt+0x1238>
  405fc0:	ldr	x2, [x20, #856]
  405fc4:	ldr	x1, [x21, #3920]
  405fc8:	bl	43f41c <argp_parse@@Base+0xbcdc>
  405fcc:	b	405f60 <wcrtomb@plt+0x1340>
  405fd0:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  405fd4:	ldr	x0, [x1, #3872]
  405fd8:	add	x0, x0, #0x1
  405fdc:	str	x0, [x1, #3872]
  405fe0:	b	405f78 <wcrtomb@plt+0x1358>
  405fe4:	bl	4059b8 <wcrtomb@plt+0xd98>
  405fe8:	b	405f44 <wcrtomb@plt+0x1324>
  405fec:	stp	x29, x30, [sp, #-32]!
  405ff0:	mov	x29, sp
  405ff4:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  405ff8:	add	x1, x1, #0xc38
  405ffc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  406000:	ldr	x0, [x0, #600]
  406004:	bl	4042e0 <fopen@plt>
  406008:	cbz	x0, 4060d0 <wcrtomb@plt+0x14b0>
  40600c:	str	x19, [sp, #16]
  406010:	mov	x19, x0
  406014:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x3be64>
  406018:	add	x2, x2, #0x678
  40601c:	add	x2, x2, #0x120
  406020:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  406024:	add	x1, x1, #0x6a8
  406028:	bl	404380 <__isoc99_fscanf@plt>
  40602c:	cmp	w0, #0x1
  406030:	b.ne	406060 <wcrtomb@plt+0x1440>  // b.any
  406034:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  406038:	ldr	w0, [x0, #1944]
  40603c:	tbnz	w0, #31, 406060 <wcrtomb@plt+0x1440>
  406040:	ldr	w0, [x19]
  406044:	tbnz	w0, #5, 4060ac <wcrtomb@plt+0x148c>
  406048:	mov	x0, x19
  40604c:	bl	4042a0 <fclose@plt>
  406050:	cbnz	w0, 4060bc <wcrtomb@plt+0x149c>
  406054:	ldr	x19, [sp, #16]
  406058:	ldp	x29, x30, [sp], #32
  40605c:	ret
  406060:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  406064:	ldr	x0, [x0, #944]
  406068:	cbz	x0, 406070 <wcrtomb@plt+0x1450>
  40606c:	blr	x0
  406070:	mov	w2, #0x5                   	// #5
  406074:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  406078:	add	x1, x1, #0xa90
  40607c:	mov	x0, #0x0                   	// #0
  406080:	bl	4049c0 <dcgettext@plt>
  406084:	mov	x19, x0
  406088:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40608c:	ldr	x0, [x0, #600]
  406090:	bl	43efc4 <argp_parse@@Base+0xb884>
  406094:	mov	x3, x0
  406098:	mov	x2, x19
  40609c:	mov	w1, #0x0                   	// #0
  4060a0:	mov	w0, #0x0                   	// #0
  4060a4:	bl	404050 <error@plt>
  4060a8:	bl	40e5ac <wcrtomb@plt+0x998c>
  4060ac:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4060b0:	ldr	x0, [x0, #600]
  4060b4:	bl	429bf4 <wcrtomb@plt+0x24fd4>
  4060b8:	b	406048 <wcrtomb@plt+0x1428>
  4060bc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4060c0:	ldr	x0, [x0, #600]
  4060c4:	bl	429a50 <wcrtomb@plt+0x24e30>
  4060c8:	ldr	x19, [sp, #16]
  4060cc:	b	406058 <wcrtomb@plt+0x1438>
  4060d0:	bl	404ad0 <__errno_location@plt>
  4060d4:	ldr	w0, [x0]
  4060d8:	cmp	w0, #0x2
  4060dc:	b.eq	406058 <wcrtomb@plt+0x1438>  // b.none
  4060e0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4060e4:	ldr	x0, [x0, #600]
  4060e8:	bl	429b9c <wcrtomb@plt+0x24f7c>
  4060ec:	b	406058 <wcrtomb@plt+0x1438>
  4060f0:	stp	x29, x30, [sp, #-32]!
  4060f4:	mov	x29, sp
  4060f8:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  4060fc:	add	x1, x1, #0xab8
  406100:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  406104:	ldr	x0, [x0, #600]
  406108:	bl	4042e0 <fopen@plt>
  40610c:	cbz	x0, 406178 <wcrtomb@plt+0x1558>
  406110:	str	x19, [sp, #16]
  406114:	mov	x19, x0
  406118:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  40611c:	ldr	w3, [x0, #1944]
  406120:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x10e64>
  406124:	add	x2, x2, #0xac0
  406128:	mov	w1, #0x1                   	// #1
  40612c:	mov	x0, x19
  406130:	bl	404710 <__fprintf_chk@plt>
  406134:	ldr	w0, [x19]
  406138:	tbnz	w0, #5, 406154 <wcrtomb@plt+0x1534>
  40613c:	mov	x0, x19
  406140:	bl	4042a0 <fclose@plt>
  406144:	cbnz	w0, 406164 <wcrtomb@plt+0x1544>
  406148:	ldr	x19, [sp, #16]
  40614c:	ldp	x29, x30, [sp], #32
  406150:	ret
  406154:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  406158:	ldr	x0, [x0, #600]
  40615c:	bl	42a19c <wcrtomb@plt+0x2557c>
  406160:	b	40613c <wcrtomb@plt+0x151c>
  406164:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  406168:	ldr	x0, [x0, #600]
  40616c:	bl	429a50 <wcrtomb@plt+0x24e30>
  406170:	ldr	x19, [sp, #16]
  406174:	b	40614c <wcrtomb@plt+0x152c>
  406178:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40617c:	ldr	x0, [x0, #600]
  406180:	bl	429b9c <wcrtomb@plt+0x24f7c>
  406184:	b	40614c <wcrtomb@plt+0x152c>
  406188:	stp	x29, x30, [sp, #-96]!
  40618c:	mov	x29, sp
  406190:	stp	x19, x20, [sp, #16]
  406194:	mov	w20, w0
  406198:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40619c:	ldr	x0, [x0, #1672]
  4061a0:	cbz	x0, 4062a4 <wcrtomb@plt+0x1684>
  4061a4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4061a8:	ldrb	w0, [x0, #3960]
  4061ac:	cbnz	w0, 4069bc <wcrtomb@plt+0x1d9c>
  4061b0:	stp	x21, x22, [sp, #32]
  4061b4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4061b8:	ldrb	w0, [x0, #778]
  4061bc:	cbnz	w0, 4062e8 <wcrtomb@plt+0x16c8>
  4061c0:	mov	x1, #0x0                   	// #0
  4061c4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4061c8:	add	x0, x0, #0xf40
  4061cc:	bl	41a5bc <wcrtomb@plt+0x1599c>
  4061d0:	mov	x1, #0x0                   	// #0
  4061d4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4061d8:	add	x0, x0, #0xf48
  4061dc:	bl	41a5bc <wcrtomb@plt+0x1599c>
  4061e0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4061e4:	str	xzr, [x0, #3952]
  4061e8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4061ec:	str	xzr, [x0, #3936]
  4061f0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4061f4:	ldr	x1, [x0, #3920]
  4061f8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4061fc:	str	x1, [x0, #3944]
  406200:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  406204:	ldr	w0, [x0, #912]
  406208:	mov	w1, #0x3fffffff            	// #1073741823
  40620c:	cmp	w0, w1
  406210:	b.le	4062f0 <wcrtomb@plt+0x16d0>
  406214:	mov	w1, #0xc0000000            	// #-1073741824
  406218:	add	w0, w0, w1
  40621c:	bl	42ae28 <wcrtomb@plt+0x26208>
  406220:	cmp	w0, #0x0
  406224:	cset	w0, ne  // ne = any
  406228:	cbnz	w0, 406300 <wcrtomb@plt+0x16e0>
  40622c:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  406230:	ldr	x0, [x1, #672]
  406234:	add	x0, x0, #0x8
  406238:	str	x0, [x1, #672]
  40623c:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  406240:	ldr	x2, [x1, #624]
  406244:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  406248:	ldr	x1, [x1, #784]
  40624c:	add	x1, x2, x1, lsl #3
  406250:	cmp	x0, x1
  406254:	b.eq	406314 <wcrtomb@plt+0x16f4>  // b.none
  406258:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40625c:	ldr	w0, [x0, #1680]
  406260:	cbnz	w0, 406328 <wcrtomb@plt+0x1708>
  406264:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  406268:	ldr	x19, [x0, #672]
  40626c:	ldr	x21, [x19]
  406270:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  406274:	add	x1, x1, #0xca8
  406278:	mov	x0, x21
  40627c:	bl	404720 <strcmp@plt>
  406280:	cbnz	w0, 40672c <wcrtomb@plt+0x1b0c>
  406284:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  406288:	mov	w1, #0x1                   	// #1
  40628c:	strb	w1, [x0, #1665]
  406290:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  406294:	str	wzr, [x0, #912]
  406298:	mov	w0, #0x1                   	// #1
  40629c:	ldp	x21, x22, [sp, #32]
  4062a0:	b	4069c0 <wcrtomb@plt+0x1da0>
  4062a4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4062a8:	ldr	x0, [x0, #704]
  4062ac:	cbnz	x0, 4061a4 <wcrtomb@plt+0x1584>
  4062b0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4062b4:	ldr	w0, [x0, #912]
  4062b8:	cbz	w0, 4062d0 <wcrtomb@plt+0x16b0>
  4062bc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4062c0:	ldr	x0, [x0, #1112]
  4062c4:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4062c8:	str	x0, [x1, #1672]
  4062cc:	b	4061a4 <wcrtomb@plt+0x1584>
  4062d0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  4062d4:	add	x1, x1, #0xc38
  4062d8:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x10e64>
  4062dc:	add	x0, x0, #0xac8
  4062e0:	bl	4042e0 <fopen@plt>
  4062e4:	b	4062c4 <wcrtomb@plt+0x16a4>
  4062e8:	bl	40a3bc <wcrtomb@plt+0x579c>
  4062ec:	b	4061c0 <wcrtomb@plt+0x15a0>
  4062f0:	bl	4045d0 <close@plt>
  4062f4:	cmp	w0, #0x0
  4062f8:	cset	w0, ne  // ne = any
  4062fc:	b	406228 <wcrtomb@plt+0x1608>
  406300:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  406304:	ldr	x0, [x0, #672]
  406308:	ldr	x0, [x0]
  40630c:	bl	429a50 <wcrtomb@plt+0x24e30>
  406310:	b	40622c <wcrtomb@plt+0x160c>
  406314:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  406318:	str	x2, [x0, #672]
  40631c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  406320:	mov	w1, #0x1                   	// #1
  406324:	str	w1, [x0, #1680]
  406328:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40632c:	ldr	x0, [x0, #704]
  406330:	cbz	x0, 4063b4 <wcrtomb@plt+0x1794>
  406334:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  406338:	ldr	x0, [x0, #600]
  40633c:	cbz	x0, 406344 <wcrtomb@plt+0x1724>
  406340:	bl	4060f0 <wcrtomb@plt+0x14d0>
  406344:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  406348:	ldr	w1, [x0, #1944]
  40634c:	add	w1, w1, #0x1
  406350:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  406354:	ldr	x0, [x0, #672]
  406358:	bl	421ddc <wcrtomb@plt+0x1d1bc>
  40635c:	cbz	w0, 406264 <wcrtomb@plt+0x1644>
  406360:	stp	x23, x24, [sp, #48]
  406364:	stp	x25, x26, [sp, #64]
  406368:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40636c:	ldr	x0, [x0, #944]
  406370:	cbz	x0, 406378 <wcrtomb@plt+0x1758>
  406374:	blr	x0
  406378:	mov	w2, #0x5                   	// #5
  40637c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  406380:	add	x1, x1, #0xad8
  406384:	mov	x0, #0x0                   	// #0
  406388:	bl	4049c0 <dcgettext@plt>
  40638c:	mov	x19, x0
  406390:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  406394:	ldr	x0, [x0, #704]
  406398:	bl	43f194 <argp_parse@@Base+0xba54>
  40639c:	mov	x3, x0
  4063a0:	mov	x2, x19
  4063a4:	mov	w1, #0x0                   	// #0
  4063a8:	mov	w0, #0x0                   	// #0
  4063ac:	bl	404050 <error@plt>
  4063b0:	bl	40e5ac <wcrtomb@plt+0x998c>
  4063b4:	stp	x23, x24, [sp, #48]
  4063b8:	stp	x25, x26, [sp, #64]
  4063bc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4063c0:	ldr	x25, [x0, #1672]
  4063c4:	str	xzr, [sp, #80]
  4063c8:	str	xzr, [sp, #88]
  4063cc:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4063d0:	adrp	x24, 452000 <_obstack_memory_used@@Base+0x10e64>
  4063d4:	add	x24, x24, #0xaf0
  4063d8:	adrp	x23, 47d000 <_obstack_memory_used@@Base+0x3be64>
  4063dc:	add	x23, x23, #0x678
  4063e0:	b	4064bc <wcrtomb@plt+0x189c>
  4063e4:	mov	w1, #0x7                   	// #7
  4063e8:	bl	404690 <__overflow@plt>
  4063ec:	b	4064e0 <wcrtomb@plt+0x18c0>
  4063f0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4063f4:	ldr	x0, [x0, #944]
  4063f8:	cbz	x0, 406400 <wcrtomb@plt+0x17e0>
  4063fc:	blr	x0
  406400:	mov	w2, #0x5                   	// #5
  406404:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  406408:	add	x1, x1, #0xb20
  40640c:	mov	x0, #0x0                   	// #0
  406410:	bl	4049c0 <dcgettext@plt>
  406414:	mov	x2, x0
  406418:	mov	w1, #0x0                   	// #0
  40641c:	mov	w0, #0x0                   	// #0
  406420:	bl	404050 <error@plt>
  406424:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  406428:	ldr	w0, [x0, #796]
  40642c:	sub	w0, w0, #0x5
  406430:	cmp	w0, #0x2
  406434:	b.ls	40646c <wcrtomb@plt+0x184c>  // b.plast
  406438:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40643c:	ldr	x0, [x0, #944]
  406440:	cbz	x0, 406448 <wcrtomb@plt+0x1828>
  406444:	blr	x0
  406448:	mov	w2, #0x5                   	// #5
  40644c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  406450:	add	x1, x1, #0xb48
  406454:	mov	x0, #0x0                   	// #0
  406458:	bl	4049c0 <dcgettext@plt>
  40645c:	mov	x2, x0
  406460:	mov	w1, #0x0                   	// #0
  406464:	mov	w0, #0x0                   	// #0
  406468:	bl	404050 <error@plt>
  40646c:	bl	40e5ac <wcrtomb@plt+0x998c>
  406470:	cmp	w1, #0x21
  406474:	b.ne	406494 <wcrtomb@plt+0x1874>  // b.any
  406478:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40647c:	ldrb	w0, [x0, #712]
  406480:	cbnz	w0, 406494 <wcrtomb@plt+0x1874>
  406484:	bl	421124 <wcrtomb@plt+0x1c504>
  406488:	b	4064bc <wcrtomb@plt+0x189c>
  40648c:	cmp	w1, #0x71
  406490:	b.eq	406680 <wcrtomb@plt+0x1a60>  // b.none
  406494:	ldr	x21, [x19, #1096]
  406498:	mov	w2, #0x5                   	// #5
  40649c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  4064a0:	add	x1, x1, #0xc80
  4064a4:	mov	x0, #0x0                   	// #0
  4064a8:	bl	4049c0 <dcgettext@plt>
  4064ac:	mov	x2, x0
  4064b0:	mov	w1, #0x1                   	// #1
  4064b4:	mov	x0, x21
  4064b8:	bl	404710 <__fprintf_chk@plt>
  4064bc:	ldr	x0, [x19, #1096]
  4064c0:	ldr	x1, [x0, #40]
  4064c4:	ldr	x2, [x0, #48]
  4064c8:	cmp	x1, x2
  4064cc:	b.cs	4063e4 <wcrtomb@plt+0x17c4>  // b.hs, b.nlast
  4064d0:	add	x2, x1, #0x1
  4064d4:	str	x2, [x0, #40]
  4064d8:	mov	w0, #0x7                   	// #7
  4064dc:	strb	w0, [x1]
  4064e0:	ldr	x26, [x19, #1096]
  4064e4:	mov	w2, #0x5                   	// #5
  4064e8:	mov	x1, x24
  4064ec:	mov	x0, #0x0                   	// #0
  4064f0:	bl	4049c0 <dcgettext@plt>
  4064f4:	mov	x21, x0
  4064f8:	ldr	w22, [x23, #288]
  4064fc:	add	w22, w22, #0x1
  406500:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  406504:	ldr	x0, [x0, #672]
  406508:	ldr	x0, [x0]
  40650c:	bl	43f194 <argp_parse@@Base+0xba54>
  406510:	mov	x4, x0
  406514:	mov	w3, w22
  406518:	mov	x2, x21
  40651c:	mov	w1, #0x1                   	// #1
  406520:	mov	x0, x26
  406524:	bl	404710 <__fprintf_chk@plt>
  406528:	ldr	x0, [x19, #1096]
  40652c:	bl	4048d0 <fflush_unlocked@plt>
  406530:	mov	x3, x25
  406534:	mov	w2, #0xa                   	// #10
  406538:	add	x1, sp, #0x58
  40653c:	add	x0, sp, #0x50
  406540:	bl	404b40 <__getdelim@plt>
  406544:	cmp	x0, #0x0
  406548:	b.le	4063f0 <wcrtomb@plt+0x17d0>
  40654c:	ldr	x2, [sp, #80]
  406550:	ldrb	w1, [x2]
  406554:	and	w0, w1, #0xffffffdf
  406558:	and	w0, w0, #0xff
  40655c:	cmp	w0, #0x59
  406560:	ccmp	w1, #0xa, #0x4, ne  // ne = any
  406564:	b.eq	406718 <wcrtomb@plt+0x1af8>  // b.none
  406568:	cmp	w1, #0x3f
  40656c:	b.eq	4065f4 <wcrtomb@plt+0x19d4>  // b.none
  406570:	b.ls	406470 <wcrtomb@plt+0x1850>  // b.plast
  406574:	cmp	w1, #0x6e
  406578:	b.ne	40648c <wcrtomb@plt+0x186c>  // b.any
  40657c:	add	x0, x2, #0x1
  406580:	ldrb	w1, [x2, #1]
  406584:	cmp	w1, #0x20
  406588:	ccmp	w1, #0x9, #0x4, ne  // ne = any
  40658c:	b.ne	4065a0 <wcrtomb@plt+0x1980>  // b.any
  406590:	ldrb	w1, [x0, #1]!
  406594:	cmp	w1, #0x20
  406598:	ccmp	w1, #0x9, #0x4, ne  // ne = any
  40659c:	b.eq	406590 <wcrtomb@plt+0x1970>  // b.none
  4065a0:	ldrb	w1, [x0]
  4065a4:	cmp	w1, #0x0
  4065a8:	ccmp	w1, #0xa, #0x4, ne  // ne = any
  4065ac:	b.eq	406700 <wcrtomb@plt+0x1ae0>  // b.none
  4065b0:	mov	x2, x0
  4065b4:	ldrb	w1, [x2, #1]!
  4065b8:	cmp	w1, #0x0
  4065bc:	ccmp	w1, #0xa, #0x4, ne  // ne = any
  4065c0:	b.ne	4065b4 <wcrtomb@plt+0x1994>  // b.any
  4065c4:	strb	wzr, [x2]
  4065c8:	ldrb	w1, [x0]
  4065cc:	cbnz	w1, 406708 <wcrtomb@plt+0x1ae8>
  4065d0:	ldr	x21, [x19, #1096]
  4065d4:	mov	w2, #0x5                   	// #5
  4065d8:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  4065dc:	add	x1, x1, #0xc58
  4065e0:	mov	x0, #0x0                   	// #0
  4065e4:	bl	4049c0 <dcgettext@plt>
  4065e8:	mov	x1, x21
  4065ec:	bl	404000 <fputs@plt>
  4065f0:	b	4064bc <wcrtomb@plt+0x189c>
  4065f4:	ldr	x21, [x19, #1096]
  4065f8:	mov	w2, #0x5                   	// #5
  4065fc:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  406600:	add	x1, x1, #0xb68
  406604:	mov	x0, #0x0                   	// #0
  406608:	bl	4049c0 <dcgettext@plt>
  40660c:	mov	x2, x0
  406610:	mov	w1, #0x1                   	// #1
  406614:	mov	x0, x21
  406618:	bl	404710 <__fprintf_chk@plt>
  40661c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  406620:	ldrb	w0, [x0, #712]
  406624:	cbz	w0, 406654 <wcrtomb@plt+0x1a34>
  406628:	ldr	x21, [x19, #1096]
  40662c:	mov	w2, #0x5                   	// #5
  406630:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  406634:	add	x1, x1, #0xc18
  406638:	mov	x0, #0x0                   	// #0
  40663c:	bl	4049c0 <dcgettext@plt>
  406640:	mov	x2, x0
  406644:	mov	w1, #0x1                   	// #1
  406648:	mov	x0, x21
  40664c:	bl	404710 <__fprintf_chk@plt>
  406650:	b	4064bc <wcrtomb@plt+0x189c>
  406654:	ldr	x21, [x19, #1096]
  406658:	mov	w2, #0x5                   	// #5
  40665c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  406660:	add	x1, x1, #0xbf0
  406664:	mov	x0, #0x0                   	// #0
  406668:	bl	4049c0 <dcgettext@plt>
  40666c:	mov	x2, x0
  406670:	mov	w1, #0x1                   	// #1
  406674:	mov	x0, x21
  406678:	bl	404710 <__fprintf_chk@plt>
  40667c:	b	406628 <wcrtomb@plt+0x1a08>
  406680:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  406684:	ldr	x0, [x0, #944]
  406688:	cbz	x0, 406690 <wcrtomb@plt+0x1a70>
  40668c:	blr	x0
  406690:	mov	w2, #0x5                   	// #5
  406694:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  406698:	add	x1, x1, #0xc38
  40669c:	mov	x0, #0x0                   	// #0
  4066a0:	bl	4049c0 <dcgettext@plt>
  4066a4:	mov	x2, x0
  4066a8:	mov	w1, #0x0                   	// #0
  4066ac:	mov	w0, #0x0                   	// #0
  4066b0:	bl	404050 <error@plt>
  4066b4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4066b8:	ldr	w0, [x0, #796]
  4066bc:	sub	w0, w0, #0x5
  4066c0:	cmp	w0, #0x2
  4066c4:	b.ls	4066fc <wcrtomb@plt+0x1adc>  // b.plast
  4066c8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4066cc:	ldr	x0, [x0, #944]
  4066d0:	cbz	x0, 4066d8 <wcrtomb@plt+0x1ab8>
  4066d4:	blr	x0
  4066d8:	mov	w2, #0x5                   	// #5
  4066dc:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  4066e0:	add	x1, x1, #0xb48
  4066e4:	mov	x0, #0x0                   	// #0
  4066e8:	bl	4049c0 <dcgettext@plt>
  4066ec:	mov	x2, x0
  4066f0:	mov	w1, #0x0                   	// #0
  4066f4:	mov	w0, #0x0                   	// #0
  4066f8:	bl	404050 <error@plt>
  4066fc:	bl	40e5ac <wcrtomb@plt+0x998c>
  406700:	mov	x2, x0
  406704:	b	4065c4 <wcrtomb@plt+0x19a4>
  406708:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  40670c:	ldr	x19, [x1, #672]
  406710:	bl	440154 <argp_parse@@Base+0xca14>
  406714:	str	x0, [x19]
  406718:	ldr	x0, [sp, #80]
  40671c:	bl	4047c0 <free@plt>
  406720:	ldp	x23, x24, [sp, #48]
  406724:	ldp	x25, x26, [sp, #64]
  406728:	b	406264 <wcrtomb@plt+0x1644>
  40672c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  406730:	ldrb	w0, [x0, #778]
  406734:	cbz	w0, 4067c8 <wcrtomb@plt+0x1ba8>
  406738:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40673c:	ldrb	w0, [x0, #952]
  406740:	cbnz	w0, 40677c <wcrtomb@plt+0x1b5c>
  406744:	mov	w1, #0x3a                  	// #58
  406748:	mov	x0, x21
  40674c:	bl	404870 <strchr@plt>
  406750:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  406754:	str	x0, [x1, #960]
  406758:	cbz	x0, 40677c <wcrtomb@plt+0x1b5c>
  40675c:	ldr	x21, [x19]
  406760:	cmp	x0, x21
  406764:	b.ls	40677c <wcrtomb@plt+0x1b5c>  // b.plast
  406768:	sub	x2, x0, x21
  40676c:	mov	w1, #0x2f                  	// #47
  406770:	mov	x0, x21
  406774:	bl	404960 <memchr@plt>
  406778:	cbz	x0, 4067ac <wcrtomb@plt+0x1b8c>
  40677c:	mov	w2, #0x1b6                 	// #438
  406780:	mov	w1, #0x42                  	// #66
  406784:	ldr	x0, [x19]
  406788:	bl	404340 <open@plt>
  40678c:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  406790:	str	w0, [x1, #912]
  406794:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  406798:	ldr	w1, [x0, #912]
  40679c:	mov	w0, #0x1                   	// #1
  4067a0:	tbnz	w1, #31, 40697c <wcrtomb@plt+0x1d5c>
  4067a4:	ldp	x21, x22, [sp, #32]
  4067a8:	b	4069c0 <wcrtomb@plt+0x1da0>
  4067ac:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4067b0:	ldr	x3, [x0, #744]
  4067b4:	mov	w2, #0x40000000            	// #1073741824
  4067b8:	mov	w1, #0x42                  	// #66
  4067bc:	mov	x0, x21
  4067c0:	bl	42a790 <wcrtomb@plt+0x25b70>
  4067c4:	b	40678c <wcrtomb@plt+0x1b6c>
  4067c8:	cmp	w20, #0x1
  4067cc:	b.eq	40685c <wcrtomb@plt+0x1c3c>  // b.none
  4067d0:	cmp	w20, #0x2
  4067d4:	b.eq	406900 <wcrtomb@plt+0x1ce0>  // b.none
  4067d8:	cbnz	w20, 406794 <wcrtomb@plt+0x1b74>
  4067dc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4067e0:	ldrb	w0, [x0, #952]
  4067e4:	cbnz	w0, 406820 <wcrtomb@plt+0x1c00>
  4067e8:	mov	w1, #0x3a                  	// #58
  4067ec:	mov	x0, x21
  4067f0:	bl	404870 <strchr@plt>
  4067f4:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  4067f8:	str	x0, [x1, #960]
  4067fc:	cbz	x0, 406820 <wcrtomb@plt+0x1c00>
  406800:	ldr	x21, [x19]
  406804:	cmp	x0, x21
  406808:	b.ls	406820 <wcrtomb@plt+0x1c00>  // b.plast
  40680c:	sub	x2, x0, x21
  406810:	mov	w1, #0x2f                  	// #47
  406814:	mov	x0, x21
  406818:	bl	404960 <memchr@plt>
  40681c:	cbz	x0, 406840 <wcrtomb@plt+0x1c20>
  406820:	mov	w2, #0x1b6                 	// #438
  406824:	mov	w1, #0x0                   	// #0
  406828:	ldr	x0, [x19]
  40682c:	bl	404340 <open@plt>
  406830:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  406834:	str	w0, [x1, #912]
  406838:	bl	40512c <wcrtomb@plt+0x50c>
  40683c:	b	406794 <wcrtomb@plt+0x1b74>
  406840:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  406844:	ldr	x3, [x0, #744]
  406848:	mov	w2, #0x40000000            	// #1073741824
  40684c:	mov	w1, #0x0                   	// #0
  406850:	mov	x0, x21
  406854:	bl	42a790 <wcrtomb@plt+0x25b70>
  406858:	b	406830 <wcrtomb@plt+0x1c10>
  40685c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  406860:	ldrb	w0, [x0, #693]
  406864:	cbnz	w0, 4068d4 <wcrtomb@plt+0x1cb4>
  406868:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40686c:	ldrb	w0, [x0, #952]
  406870:	cbnz	w0, 4068b4 <wcrtomb@plt+0x1c94>
  406874:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  406878:	ldr	x19, [x0, #672]
  40687c:	mov	w1, #0x3a                  	// #58
  406880:	ldr	x0, [x19]
  406884:	bl	404870 <strchr@plt>
  406888:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  40688c:	str	x0, [x1, #960]
  406890:	cbz	x0, 4068b4 <wcrtomb@plt+0x1c94>
  406894:	ldr	x19, [x19]
  406898:	cmp	x0, x19
  40689c:	b.ls	4068b4 <wcrtomb@plt+0x1c94>  // b.plast
  4068a0:	sub	x2, x0, x19
  4068a4:	mov	w1, #0x2f                  	// #47
  4068a8:	mov	x0, x19
  4068ac:	bl	404960 <memchr@plt>
  4068b0:	cbz	x0, 4068e4 <wcrtomb@plt+0x1cc4>
  4068b4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4068b8:	ldr	x0, [x0, #672]
  4068bc:	mov	w1, #0x1b6                 	// #438
  4068c0:	ldr	x0, [x0]
  4068c4:	bl	404bb0 <creat@plt>
  4068c8:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  4068cc:	str	w0, [x1, #912]
  4068d0:	b	406794 <wcrtomb@plt+0x1b74>
  4068d4:	mov	w1, #0x1                   	// #1
  4068d8:	mov	x0, x21
  4068dc:	bl	41b29c <wcrtomb@plt+0x1667c>
  4068e0:	b	406868 <wcrtomb@plt+0x1c48>
  4068e4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4068e8:	ldr	x3, [x0, #744]
  4068ec:	mov	w2, #0x40000000            	// #1073741824
  4068f0:	mov	w1, #0x41                  	// #65
  4068f4:	mov	x0, x19
  4068f8:	bl	42a790 <wcrtomb@plt+0x25b70>
  4068fc:	b	4068c8 <wcrtomb@plt+0x1ca8>
  406900:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  406904:	ldrb	w0, [x0, #952]
  406908:	cbnz	w0, 406944 <wcrtomb@plt+0x1d24>
  40690c:	mov	w1, #0x3a                  	// #58
  406910:	mov	x0, x21
  406914:	bl	404870 <strchr@plt>
  406918:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  40691c:	str	x0, [x1, #960]
  406920:	cbz	x0, 406944 <wcrtomb@plt+0x1d24>
  406924:	ldr	x21, [x19]
  406928:	cmp	x0, x21
  40692c:	b.ls	406944 <wcrtomb@plt+0x1d24>  // b.plast
  406930:	sub	x2, x0, x21
  406934:	mov	w1, #0x2f                  	// #47
  406938:	mov	x0, x21
  40693c:	bl	404960 <memchr@plt>
  406940:	cbz	x0, 406960 <wcrtomb@plt+0x1d40>
  406944:	mov	w2, #0x1b6                 	// #438
  406948:	mov	w1, #0x42                  	// #66
  40694c:	ldr	x0, [x19]
  406950:	bl	404340 <open@plt>
  406954:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  406958:	str	w0, [x1, #912]
  40695c:	b	406794 <wcrtomb@plt+0x1b74>
  406960:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  406964:	ldr	x3, [x0, #744]
  406968:	mov	w2, #0x40000000            	// #1073741824
  40696c:	mov	w1, #0x42                  	// #66
  406970:	mov	x0, x21
  406974:	bl	42a790 <wcrtomb@plt+0x25b70>
  406978:	b	406954 <wcrtomb@plt+0x1d34>
  40697c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  406980:	ldr	x0, [x0, #672]
  406984:	ldr	x0, [x0]
  406988:	bl	429bd4 <wcrtomb@plt+0x24fb4>
  40698c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  406990:	ldrb	w0, [x0, #778]
  406994:	eor	w0, w0, #0x1
  406998:	cmp	w20, #0x1
  40699c:	cset	w1, eq  // eq = none
  4069a0:	tst	w1, w0
  4069a4:	b.eq	406328 <wcrtomb@plt+0x1708>  // b.none
  4069a8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4069ac:	ldrb	w0, [x0, #693]
  4069b0:	cbz	w0, 406328 <wcrtomb@plt+0x1708>
  4069b4:	bl	41b11c <wcrtomb@plt+0x164fc>
  4069b8:	b	406328 <wcrtomb@plt+0x1708>
  4069bc:	mov	w0, #0x0                   	// #0
  4069c0:	ldp	x19, x20, [sp, #16]
  4069c4:	ldp	x29, x30, [sp], #96
  4069c8:	ret
  4069cc:	stp	x29, x30, [sp, #-48]!
  4069d0:	mov	x29, sp
  4069d4:	stp	x19, x20, [sp, #16]
  4069d8:	str	x21, [sp, #32]
  4069dc:	mov	x20, x0
  4069e0:	bl	403ff0 <strlen@plt>
  4069e4:	cbz	x0, 406a84 <wcrtomb@plt+0x1e64>
  4069e8:	sub	x19, x0, #0x1
  4069ec:	add	x19, x20, x19
  4069f0:	cmp	x20, x19
  4069f4:	b.cs	406a8c <wcrtomb@plt+0x1e6c>  // b.hs, b.nlast
  4069f8:	bl	404750 <__ctype_b_loc@plt>
  4069fc:	ldr	x0, [x0]
  406a00:	ldrb	w1, [x19]
  406a04:	ldrh	w1, [x0, x1, lsl #1]
  406a08:	tbz	w1, #11, 406a30 <wcrtomb@plt+0x1e10>
  406a0c:	sub	x19, x19, #0x1
  406a10:	cmp	x20, x19
  406a14:	b.ne	406a00 <wcrtomb@plt+0x1de0>  // b.any
  406a18:	mov	x21, #0x0                   	// #0
  406a1c:	mov	x0, x21
  406a20:	ldp	x19, x20, [sp, #16]
  406a24:	ldr	x21, [sp, #32]
  406a28:	ldp	x29, x30, [sp], #48
  406a2c:	ret
  406a30:	cmp	x20, x19
  406a34:	b.cs	406a94 <wcrtomb@plt+0x1e74>  // b.hs, b.nlast
  406a38:	sub	x19, x19, #0x7
  406a3c:	mov	x21, #0x0                   	// #0
  406a40:	cmp	x19, x20
  406a44:	b.ls	406a1c <wcrtomb@plt+0x1dfc>  // b.plast
  406a48:	mov	x2, #0x8                   	// #8
  406a4c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  406a50:	add	x1, x1, #0xcb0
  406a54:	mov	x0, x19
  406a58:	bl	4046e0 <memcmp@plt>
  406a5c:	cbnz	w0, 406a1c <wcrtomb@plt+0x1dfc>
  406a60:	sub	x19, x19, x20
  406a64:	add	x0, x19, #0x1
  406a68:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  406a6c:	mov	x21, x0
  406a70:	mov	x2, x19
  406a74:	mov	x1, x20
  406a78:	bl	403f70 <memcpy@plt>
  406a7c:	strb	wzr, [x21, x19]
  406a80:	b	406a1c <wcrtomb@plt+0x1dfc>
  406a84:	mov	x21, #0x0                   	// #0
  406a88:	b	406a1c <wcrtomb@plt+0x1dfc>
  406a8c:	mov	x21, #0x0                   	// #0
  406a90:	b	406a1c <wcrtomb@plt+0x1dfc>
  406a94:	mov	x21, #0x0                   	// #0
  406a98:	b	406a1c <wcrtomb@plt+0x1dfc>
  406a9c:	stp	x29, x30, [sp, #-16]!
  406aa0:	mov	x29, sp
  406aa4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  406aa8:	ldr	x0, [x0, #1688]
  406aac:	blr	x0
  406ab0:	ldp	x29, x30, [sp], #16
  406ab4:	ret
  406ab8:	stp	x29, x30, [sp, #-48]!
  406abc:	mov	x29, sp
  406ac0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  406ac4:	ldr	w0, [x0, #3896]
  406ac8:	cbnz	w0, 406ad8 <wcrtomb@plt+0x1eb8>
  406acc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  406ad0:	ldrb	w0, [x0, #928]
  406ad4:	cbnz	w0, 406b44 <wcrtomb@plt+0x1f24>
  406ad8:	adrp	x4, 480000 <_obstack_memory_used@@Base+0x3ee64>
  406adc:	ldr	x6, [x4, #3944]
  406ae0:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  406ae4:	ldr	x0, [x1, #3920]
  406ae8:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x3ee64>
  406aec:	add	x2, x2, #0x478
  406af0:	adrp	x3, 480000 <_obstack_memory_used@@Base+0x3ee64>
  406af4:	ldr	x1, [x3, #3880]
  406af8:	sub	x1, x1, x0
  406afc:	ldr	x5, [x2, #512]
  406b00:	add	x1, x5, x1, asr #9
  406b04:	str	x1, [x2, #512]
  406b08:	str	x0, [x4, #3944]
  406b0c:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  406b10:	ldrsw	x1, [x1, #684]
  406b14:	add	x1, x0, x1, lsl #9
  406b18:	str	x1, [x3, #3880]
  406b1c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  406b20:	ldr	w1, [x1, #3896]
  406b24:	cmp	w1, #0x1
  406b28:	b.eq	406d78 <wcrtomb@plt+0x2158>  // b.none
  406b2c:	cmp	w1, #0x2
  406b30:	b.eq	406d8c <wcrtomb@plt+0x216c>  // b.none
  406b34:	cbnz	w1, 406b3c <wcrtomb@plt+0x1f1c>
  406b38:	bl	406a9c <wcrtomb@plt+0x1e7c>
  406b3c:	ldp	x29, x30, [sp], #48
  406b40:	ret
  406b44:	mov	w0, #0x1                   	// #1
  406b48:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  406b4c:	str	w0, [x1, #3896]
  406b50:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  406b54:	strb	wzr, [x1, #928]
  406b58:	mov	w1, #0x4                   	// #4
  406b5c:	strh	w1, [sp, #40]
  406b60:	str	w0, [sp, #44]
  406b64:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  406b68:	ldr	w0, [x0, #912]
  406b6c:	mov	w1, #0x3fffffff            	// #1073741823
  406b70:	cmp	w0, w1
  406b74:	b.le	406cd4 <wcrtomb@plt+0x20b4>
  406b78:	add	x2, sp, #0x28
  406b7c:	mov	w1, #0x6d01                	// #27905
  406b80:	movk	w1, #0x4008, lsl #16
  406b84:	mov	w3, #0xc0000000            	// #-1073741824
  406b88:	add	w0, w0, w3
  406b8c:	bl	42b1b0 <wcrtomb@plt+0x26590>
  406b90:	mvn	w0, w0
  406b94:	lsr	w0, w0, #31
  406b98:	cbnz	w0, 406c80 <wcrtomb@plt+0x2060>
  406b9c:	bl	404ad0 <__errno_location@plt>
  406ba0:	ldr	w0, [x0]
  406ba4:	cmp	w0, #0x5
  406ba8:	b.eq	406cf0 <wcrtomb@plt+0x20d0>  // b.none
  406bac:	str	x19, [sp, #16]
  406bb0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  406bb4:	ldr	w0, [x0, #912]
  406bb8:	mov	w1, #0x3fffffff            	// #1073741823
  406bbc:	cmp	w0, w1
  406bc0:	b.le	406d48 <wcrtomb@plt+0x2128>
  406bc4:	mov	w2, #0x1                   	// #1
  406bc8:	mov	x1, #0x0                   	// #0
  406bcc:	mov	w3, #0xc0000000            	// #-1073741824
  406bd0:	add	w0, w0, w3
  406bd4:	bl	42b034 <wcrtomb@plt+0x26414>
  406bd8:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  406bdc:	ldr	x19, [x1, #3880]
  406be0:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  406be4:	ldr	x1, [x1, #3920]
  406be8:	sub	x19, x19, x1
  406bec:	subs	x0, x0, x19
  406bf0:	csel	x19, x0, xzr, pl  // pl = nfrst
  406bf4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  406bf8:	ldr	w0, [x0, #912]
  406bfc:	mov	w1, #0x3fffffff            	// #1073741823
  406c00:	cmp	w0, w1
  406c04:	b.le	406d58 <wcrtomb@plt+0x2138>
  406c08:	mov	w2, #0x0                   	// #0
  406c0c:	mov	x1, x19
  406c10:	mov	w3, #0xc0000000            	// #-1073741824
  406c14:	add	w0, w0, w3
  406c18:	bl	42b034 <wcrtomb@plt+0x26414>
  406c1c:	cmp	x19, x0
  406c20:	b.eq	406d68 <wcrtomb@plt+0x2148>  // b.none
  406c24:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  406c28:	ldr	x0, [x0, #944]
  406c2c:	cbz	x0, 406c34 <wcrtomb@plt+0x2014>
  406c30:	blr	x0
  406c34:	mov	w2, #0x5                   	// #5
  406c38:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  406c3c:	add	x1, x1, #0xcc0
  406c40:	mov	x0, #0x0                   	// #0
  406c44:	bl	4049c0 <dcgettext@plt>
  406c48:	mov	x2, x0
  406c4c:	mov	w1, #0x0                   	// #0
  406c50:	mov	w0, #0x0                   	// #0
  406c54:	bl	404050 <error@plt>
  406c58:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  406c5c:	ldr	x0, [x0, #3920]
  406c60:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  406c64:	ldr	x2, [x1, #936]
  406c68:	cmp	x0, x2
  406c6c:	b.eq	406d70 <wcrtomb@plt+0x2150>  // b.none
  406c70:	sub	x2, x2, x0
  406c74:	mov	w1, #0x0                   	// #0
  406c78:	bl	404420 <memset@plt>
  406c7c:	ldr	x19, [sp, #16]
  406c80:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  406c84:	ldr	x0, [x0, #3880]
  406c88:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  406c8c:	ldr	x2, [x1, #3920]
  406c90:	sub	x2, x0, x2
  406c94:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  406c98:	ldrsw	x1, [x1, #684]
  406c9c:	cmp	x1, x2, asr #9
  406ca0:	b.le	406ad8 <wcrtomb@plt+0x1eb8>
  406ca4:	sub	x2, x1, x2, asr #9
  406ca8:	lsl	x2, x2, #9
  406cac:	mov	w1, #0x0                   	// #0
  406cb0:	bl	404420 <memset@plt>
  406cb4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  406cb8:	ldrsw	x0, [x0, #684]
  406cbc:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  406cc0:	ldr	x1, [x1, #3920]
  406cc4:	add	x0, x1, x0, lsl #9
  406cc8:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  406ccc:	str	x0, [x1, #3880]
  406cd0:	b	406b3c <wcrtomb@plt+0x1f1c>
  406cd4:	add	x2, sp, #0x28
  406cd8:	mov	x1, #0x6d01                	// #27905
  406cdc:	movk	x1, #0x4008, lsl #16
  406ce0:	bl	404bd0 <ioctl@plt>
  406ce4:	mvn	w0, w0
  406ce8:	lsr	w0, w0, #31
  406cec:	b	406b98 <wcrtomb@plt+0x1f78>
  406cf0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  406cf4:	ldr	w0, [x0, #912]
  406cf8:	mov	w1, #0x3fffffff            	// #1073741823
  406cfc:	cmp	w0, w1
  406d00:	b.le	406d2c <wcrtomb@plt+0x210c>
  406d04:	add	x2, sp, #0x28
  406d08:	mov	w1, #0x6d01                	// #27905
  406d0c:	movk	w1, #0x4008, lsl #16
  406d10:	mov	w3, #0xc0000000            	// #-1073741824
  406d14:	add	w0, w0, w3
  406d18:	bl	42b1b0 <wcrtomb@plt+0x26590>
  406d1c:	mvn	w0, w0
  406d20:	lsr	w0, w0, #31
  406d24:	cbz	w0, 406bac <wcrtomb@plt+0x1f8c>
  406d28:	b	406c80 <wcrtomb@plt+0x2060>
  406d2c:	add	x2, sp, #0x28
  406d30:	mov	x1, #0x6d01                	// #27905
  406d34:	movk	x1, #0x4008, lsl #16
  406d38:	bl	404bd0 <ioctl@plt>
  406d3c:	mvn	w0, w0
  406d40:	lsr	w0, w0, #31
  406d44:	b	406d24 <wcrtomb@plt+0x2104>
  406d48:	mov	w2, #0x1                   	// #1
  406d4c:	mov	x1, #0x0                   	// #0
  406d50:	bl	4041d0 <lseek@plt>
  406d54:	b	406bd8 <wcrtomb@plt+0x1fb8>
  406d58:	mov	w2, #0x0                   	// #0
  406d5c:	mov	x1, x19
  406d60:	bl	4041d0 <lseek@plt>
  406d64:	b	406c1c <wcrtomb@plt+0x1ffc>
  406d68:	ldr	x19, [sp, #16]
  406d6c:	b	406c80 <wcrtomb@plt+0x2060>
  406d70:	ldr	x19, [sp, #16]
  406d74:	b	406c80 <wcrtomb@plt+0x2060>
  406d78:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  406d7c:	ldr	x1, [x1, #1696]
  406d80:	sub	x0, x6, x0
  406d84:	blr	x1
  406d88:	b	406b3c <wcrtomb@plt+0x1f1c>
  406d8c:	str	x19, [sp, #16]
  406d90:	bl	404660 <abort@plt>
  406d94:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  406d98:	ldr	x1, [x0, #3944]
  406d9c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  406da0:	ldr	x0, [x0, #3880]
  406da4:	cmp	x1, x0
  406da8:	b.eq	406db8 <wcrtomb@plt+0x2198>  // b.none
  406dac:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  406db0:	ldr	x0, [x0, #3944]
  406db4:	ret
  406db8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  406dbc:	ldrb	w1, [x0, #1664]
  406dc0:	mov	x0, #0x0                   	// #0
  406dc4:	cbnz	w1, 406e10 <wcrtomb@plt+0x21f0>
  406dc8:	stp	x29, x30, [sp, #-16]!
  406dcc:	mov	x29, sp
  406dd0:	bl	406ab8 <wcrtomb@plt+0x1e98>
  406dd4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  406dd8:	ldr	x1, [x0, #3944]
  406ddc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  406de0:	ldr	x0, [x0, #3880]
  406de4:	cmp	x1, x0
  406de8:	b.eq	406dfc <wcrtomb@plt+0x21dc>  // b.none
  406dec:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  406df0:	ldr	x0, [x0, #3944]
  406df4:	ldp	x29, x30, [sp], #16
  406df8:	ret
  406dfc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  406e00:	mov	w1, #0x1                   	// #1
  406e04:	strb	w1, [x0, #1664]
  406e08:	mov	x0, #0x0                   	// #0
  406e0c:	b	406df4 <wcrtomb@plt+0x21d4>
  406e10:	ret
  406e14:	stp	x29, x30, [sp, #-32]!
  406e18:	mov	x29, sp
  406e1c:	stp	x19, x20, [sp, #16]
  406e20:	mov	x20, x0
  406e24:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  406e28:	ldr	w0, [x0, #752]
  406e2c:	cmp	w0, #0x4
  406e30:	b.eq	406ebc <wcrtomb@plt+0x229c>  // b.none
  406e34:	bl	406d94 <wcrtomb@plt+0x2174>
  406e38:	mov	x19, x0
  406e3c:	mov	x2, #0x200                 	// #512
  406e40:	mov	w1, #0x0                   	// #0
  406e44:	bl	404420 <memset@plt>
  406e48:	mov	x2, #0x64                  	// #100
  406e4c:	mov	x1, x20
  406e50:	mov	x0, x19
  406e54:	bl	404370 <__strcpy_chk@plt>
  406e58:	mov	x1, x19
  406e5c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  406e60:	add	x0, x0, #0x28
  406e64:	bl	41a5bc <wcrtomb@plt+0x1599c>
  406e68:	adrp	x20, 481000 <argp_program_version_hook@@Base+0x298>
  406e6c:	add	x20, x20, #0x20
  406e70:	ldr	x0, [x20, #8]
  406e74:	bl	434b80 <argp_parse@@Base+0x1440>
  406e78:	strb	w0, [x20, #16]
  406e7c:	mov	w0, #0x56                  	// #86
  406e80:	strb	w0, [x19, #156]
  406e84:	mov	x2, #0xc                   	// #12
  406e88:	add	x1, x19, #0x88
  406e8c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  406e90:	ldr	x0, [x0, #648]
  406e94:	bl	40b1b8 <wcrtomb@plt+0x6598>
  406e98:	mov	x2, #0xffffffffffffffff    	// #-1
  406e9c:	mov	x1, x19
  406ea0:	mov	x0, x20
  406ea4:	bl	40b4b0 <wcrtomb@plt+0x6890>
  406ea8:	mov	x0, x19
  406eac:	bl	405884 <wcrtomb@plt+0xc64>
  406eb0:	ldp	x19, x20, [sp, #16]
  406eb4:	ldp	x29, x30, [sp], #32
  406eb8:	ret
  406ebc:	mov	x2, x20
  406ec0:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  406ec4:	add	x1, x1, #0x478
  406ec8:	add	x1, x1, #0x48
  406ecc:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x10e64>
  406ed0:	add	x0, x0, #0xd00
  406ed4:	bl	413cf0 <wcrtomb@plt+0xf0d0>
  406ed8:	b	406eb0 <wcrtomb@plt+0x2290>
  406edc:	stp	x29, x30, [sp, #-80]!
  406ee0:	mov	x29, sp
  406ee4:	stp	x19, x20, [sp, #16]
  406ee8:	str	x21, [sp, #32]
  406eec:	add	x1, sp, #0x38
  406ef0:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  406ef4:	ldrsw	x0, [x0, #1948]
  406ef8:	bl	438ce8 <argp_parse@@Base+0x55a8>
  406efc:	mov	x20, x0
  406f00:	adrp	x21, 481000 <argp_program_version_hook@@Base+0x298>
  406f04:	ldr	x0, [x21, #584]
  406f08:	bl	403ff0 <strlen@plt>
  406f0c:	mov	x19, x0
  406f10:	mov	x0, x20
  406f14:	bl	403ff0 <strlen@plt>
  406f18:	add	x0, x19, x0
  406f1c:	add	x0, x0, #0x9
  406f20:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  406f24:	mov	x19, x0
  406f28:	mov	x6, x20
  406f2c:	adrp	x5, 452000 <_obstack_memory_used@@Base+0x10e64>
  406f30:	add	x5, x5, #0xd18
  406f34:	ldr	x4, [x21, #584]
  406f38:	adrp	x3, 452000 <_obstack_memory_used@@Base+0x10e64>
  406f3c:	add	x3, x3, #0xd20
  406f40:	mov	x2, #0xffffffffffffffff    	// #-1
  406f44:	mov	w1, #0x1                   	// #1
  406f48:	bl	404010 <__sprintf_chk@plt>
  406f4c:	mov	x0, x19
  406f50:	bl	406e14 <wcrtomb@plt+0x21f4>
  406f54:	mov	x0, x19
  406f58:	bl	4047c0 <free@plt>
  406f5c:	ldp	x19, x20, [sp, #16]
  406f60:	ldr	x21, [sp, #32]
  406f64:	ldp	x29, x30, [sp], #80
  406f68:	ret
  406f6c:	stp	x29, x30, [sp, #-80]!
  406f70:	mov	x29, sp
  406f74:	stp	x19, x20, [sp, #16]
  406f78:	stp	x21, x22, [sp, #32]
  406f7c:	stp	x23, x24, [sp, #48]
  406f80:	mov	x21, x0
  406f84:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  406f88:	adrp	x2, 405000 <wcrtomb@plt+0x3e0>
  406f8c:	add	x2, x2, #0xeac
  406f90:	str	x2, [x1, #1696]
  406f94:	bl	40504c <wcrtomb@plt+0x42c>
  406f98:	mov	x20, x0
  406f9c:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  406fa0:	ldr	x1, [x1, #856]
  406fa4:	cmp	x0, x1
  406fa8:	b.eq	407398 <wcrtomb@plt+0x2778>  // b.none
  406fac:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  406fb0:	ldrb	w0, [x0, #12]
  406fb4:	cbz	w0, 40704c <wcrtomb@plt+0x242c>
  406fb8:	cbz	x20, 40739c <wcrtomb@plt+0x277c>
  406fbc:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  406fc0:	ldr	x0, [x1, #3888]
  406fc4:	add	x0, x0, #0x1
  406fc8:	str	x0, [x1, #3888]
  406fcc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  406fd0:	add	x0, x0, #0x478
  406fd4:	scvtf	d0, x20
  406fd8:	ldr	d1, [x0, #24]
  406fdc:	fadd	d0, d1, d0
  406fe0:	str	d0, [x0, #24]
  406fe4:	mov	x23, x20
  406fe8:	mov	x0, x20
  406fec:	bl	404d80 <wcrtomb@plt+0x160>
  406ff0:	mov	x19, x0
  406ff4:	tst	x20, #0x1ff
  406ff8:	b.ne	407054 <wcrtomb@plt+0x2434>  // b.any
  406ffc:	tbz	x20, #63, 407018 <wcrtomb@plt+0x23f8>
  407000:	bl	404ad0 <__errno_location@plt>
  407004:	ldr	w0, [x0]
  407008:	sub	w1, w0, #0x5
  40700c:	cmp	w1, #0x1
  407010:	ccmp	w0, #0x1c, #0x4, hi  // hi = pmore
  407014:	b.ne	40709c <wcrtomb@plt+0x247c>  // b.any
  407018:	mov	w0, #0x1                   	// #1
  40701c:	bl	406188 <wcrtomb@plt+0x1568>
  407020:	and	w0, w0, #0xff
  407024:	cbnz	w0, 4070a4 <wcrtomb@plt+0x2484>
  407028:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40702c:	adrp	x1, 406000 <wcrtomb@plt+0x13e0>
  407030:	add	x1, x1, #0xf6c
  407034:	str	x1, [x0, #1696]
  407038:	ldp	x19, x20, [sp, #16]
  40703c:	ldp	x21, x22, [sp, #32]
  407040:	ldp	x23, x24, [sp, #48]
  407044:	ldp	x29, x30, [sp], #80
  407048:	ret
  40704c:	mov	x0, x20
  407050:	bl	405e58 <wcrtomb@plt+0x1238>
  407054:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  407058:	ldr	x0, [x0, #944]
  40705c:	cbz	x0, 407064 <wcrtomb@plt+0x2444>
  407060:	blr	x0
  407064:	mov	w2, #0x5                   	// #5
  407068:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  40706c:	add	x1, x1, #0xd30
  407070:	mov	x0, #0x0                   	// #0
  407074:	bl	4049c0 <dcgettext@plt>
  407078:	mov	x2, x0
  40707c:	mov	w1, #0x0                   	// #0
  407080:	mov	w0, #0x0                   	// #0
  407084:	bl	404050 <error@plt>
  407088:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40708c:	mov	w1, #0x2                   	// #2
  407090:	str	w1, [x0, #3392]
  407094:	mov	x0, x20
  407098:	bl	405e58 <wcrtomb@plt+0x1238>
  40709c:	mov	x0, x20
  4070a0:	bl	405e58 <wcrtomb@plt+0x1238>
  4070a4:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4070a8:	add	x20, x20, #0x478
  4070ac:	add	x0, x20, #0x48
  4070b0:	bl	4249a8 <wcrtomb@plt+0x1fd88>
  4070b4:	bl	404fdc <wcrtomb@plt+0x3bc>
  4070b8:	ldr	d0, [x20, #504]
  4070bc:	ldr	d1, [x20, #24]
  4070c0:	fadd	d0, d0, d1
  4070c4:	str	d0, [x20, #504]
  4070c8:	str	xzr, [x20, #24]
  4070cc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4070d0:	ldr	x22, [x0, #3920]
  4070d4:	add	x22, x22, x23
  4070d8:	sub	x21, x21, x23
  4070dc:	ldr	w0, [x20, #36]
  4070e0:	cmp	w0, #0x0
  4070e4:	cset	w0, eq  // eq = none
  4070e8:	str	w0, [x20, #36]
  4070ec:	bl	4051d4 <wcrtomb@plt+0x5b4>
  4070f0:	mov	w0, #0x1                   	// #1
  4070f4:	str	w0, [x20, #32]
  4070f8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4070fc:	ldr	x0, [x0, #584]
  407100:	cbz	x0, 407108 <wcrtomb@plt+0x24e8>
  407104:	bl	406edc <wcrtomb@plt+0x22bc>
  407108:	cbz	x19, 407340 <wcrtomb@plt+0x2720>
  40710c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  407110:	ldr	w0, [x0, #752]
  407114:	cmp	w0, #0x4
  407118:	b.eq	4072e4 <wcrtomb@plt+0x26c4>  // b.none
  40711c:	bl	406d94 <wcrtomb@plt+0x2174>
  407120:	mov	x20, x0
  407124:	ldr	x0, [x19, #16]
  407128:	bl	403ff0 <strlen@plt>
  40712c:	mov	x23, x0
  407130:	cmp	x0, #0x64
  407134:	b.ls	407180 <wcrtomb@plt+0x2560>  // b.plast
  407138:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40713c:	ldr	x0, [x0, #944]
  407140:	cbz	x0, 407148 <wcrtomb@plt+0x2528>
  407144:	blr	x0
  407148:	mov	w2, #0x5                   	// #5
  40714c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  407150:	add	x1, x1, #0xd98
  407154:	mov	x0, #0x0                   	// #0
  407158:	bl	4049c0 <dcgettext@plt>
  40715c:	mov	x23, x0
  407160:	ldr	x0, [x19, #16]
  407164:	bl	43efc4 <argp_parse@@Base+0xb884>
  407168:	mov	x3, x0
  40716c:	mov	x2, x23
  407170:	mov	w1, #0x0                   	// #0
  407174:	mov	w0, #0x0                   	// #0
  407178:	bl	404050 <error@plt>
  40717c:	mov	x23, #0x64                  	// #100
  407180:	mov	x2, #0x200                 	// #512
  407184:	mov	w1, #0x0                   	// #0
  407188:	mov	x0, x20
  40718c:	bl	404420 <memset@plt>
  407190:	mov	x2, x23
  407194:	ldr	x1, [x19, #16]
  407198:	mov	x0, x20
  40719c:	bl	403f70 <memcpy@plt>
  4071a0:	mov	w0, #0x4d                  	// #77
  4071a4:	strb	w0, [x20, #156]
  4071a8:	mov	x2, #0xc                   	// #12
  4071ac:	add	x1, x20, #0x7c
  4071b0:	ldr	x0, [x19, #32]
  4071b4:	bl	40b184 <wcrtomb@plt+0x6564>
  4071b8:	ldr	x3, [x19, #24]
  4071bc:	ldr	x0, [x19, #32]
  4071c0:	mov	x2, #0xc                   	// #12
  4071c4:	add	x1, x20, #0x171
  4071c8:	sub	x0, x3, x0
  4071cc:	bl	40b184 <wcrtomb@plt+0x6564>
  4071d0:	adrp	x23, 481000 <argp_program_version_hook@@Base+0x298>
  4071d4:	ldr	w24, [x23, #580]
  4071d8:	str	wzr, [x23, #580]
  4071dc:	mov	x2, #0xffffffffffffffff    	// #-1
  4071e0:	mov	x1, x20
  4071e4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4071e8:	add	x0, x0, #0x20
  4071ec:	bl	40b4b0 <wcrtomb@plt+0x6890>
  4071f0:	str	w24, [x23, #580]
  4071f4:	mov	x0, x20
  4071f8:	bl	405884 <wcrtomb@plt+0xc64>
  4071fc:	bl	406d94 <wcrtomb@plt+0x2174>
  407200:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407204:	add	x20, x20, #0x478
  407208:	add	x20, x20, #0x48
  40720c:	mov	x2, x0
  407210:	mov	x1, x20
  407214:	mov	w0, #0x1                   	// #1
  407218:	bl	40b368 <wcrtomb@plt+0x6748>
  40721c:	mov	x0, x20
  407220:	bl	4249a8 <wcrtomb@plt+0x1fd88>
  407224:	mov	x0, x19
  407228:	bl	405268 <wcrtomb@plt+0x648>
  40722c:	bl	406d94 <wcrtomb@plt+0x2174>
  407230:	mov	x20, x0
  407234:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407238:	ldr	x1, [x0, #3920]
  40723c:	sub	x1, x20, x1
  407240:	asr	x1, x1, #9
  407244:	mov	x0, x19
  407248:	bl	404e98 <wcrtomb@plt+0x278>
  40724c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407250:	ldr	x19, [x0, #3880]
  407254:	sub	x19, x19, x20
  407258:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40725c:	str	wzr, [x0, #1176]
  407260:	cmp	x21, x19
  407264:	b.ls	4072ac <wcrtomb@plt+0x268c>  // b.plast
  407268:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40726c:	mov	x2, x19
  407270:	mov	x1, x22
  407274:	mov	x0, x20
  407278:	bl	403f70 <memcpy@plt>
  40727c:	add	x22, x22, x19
  407280:	sub	x21, x21, x19
  407284:	sub	x19, x19, #0x1
  407288:	and	x19, x19, #0xfffffffffffffe00
  40728c:	add	x0, x20, x19
  407290:	bl	405884 <wcrtomb@plt+0xc64>
  407294:	bl	406d94 <wcrtomb@plt+0x2174>
  407298:	mov	x20, x0
  40729c:	ldr	x19, [x23, #3880]
  4072a0:	sub	x19, x19, x0
  4072a4:	cmp	x21, x19
  4072a8:	b.hi	40726c <wcrtomb@plt+0x264c>  // b.pmore
  4072ac:	mov	x2, x21
  4072b0:	mov	x1, x22
  4072b4:	mov	x0, x20
  4072b8:	bl	403f70 <memcpy@plt>
  4072bc:	sub	x2, x19, x21
  4072c0:	mov	w1, #0x0                   	// #0
  4072c4:	add	x0, x20, x21
  4072c8:	bl	404420 <memset@plt>
  4072cc:	sub	x21, x21, #0x1
  4072d0:	and	x0, x21, #0xfffffffffffffe00
  4072d4:	add	x0, x20, x0
  4072d8:	bl	405884 <wcrtomb@plt+0xc64>
  4072dc:	bl	406d94 <wcrtomb@plt+0x2174>
  4072e0:	b	407028 <wcrtomb@plt+0x2408>
  4072e4:	ldr	x0, [x19, #24]
  4072e8:	ldr	x1, [x19, #32]
  4072ec:	sub	x0, x0, x1
  4072f0:	str	x0, [sp, #72]
  4072f4:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4072f8:	add	x20, x20, #0x478
  4072fc:	add	x20, x20, #0x48
  407300:	ldr	x2, [x19, #16]
  407304:	mov	x1, x20
  407308:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x10e64>
  40730c:	add	x0, x0, #0xd58
  407310:	bl	413cf0 <wcrtomb@plt+0xf0d0>
  407314:	add	x2, x19, #0x20
  407318:	mov	x1, x20
  40731c:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x10e64>
  407320:	add	x0, x0, #0xd70
  407324:	bl	413cf0 <wcrtomb@plt+0xf0d0>
  407328:	add	x2, sp, #0x48
  40732c:	mov	x1, x20
  407330:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x10e64>
  407334:	add	x0, x0, #0xd80
  407338:	bl	413cf0 <wcrtomb@plt+0xf0d0>
  40733c:	b	4071fc <wcrtomb@plt+0x25dc>
  407340:	bl	406d94 <wcrtomb@plt+0x2174>
  407344:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407348:	add	x20, x20, #0x478
  40734c:	add	x20, x20, #0x48
  407350:	mov	x2, x0
  407354:	mov	x1, x20
  407358:	mov	w0, #0x1                   	// #1
  40735c:	bl	40b368 <wcrtomb@plt+0x6748>
  407360:	mov	x0, x20
  407364:	bl	4249a8 <wcrtomb@plt+0x1fd88>
  407368:	b	40722c <wcrtomb@plt+0x260c>
  40736c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407370:	ldr	x0, [x1, #3888]
  407374:	add	x0, x0, #0x1
  407378:	str	x0, [x1, #3888]
  40737c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407380:	add	x0, x0, #0x478
  407384:	scvtf	d0, x20
  407388:	ldr	d1, [x0, #24]
  40738c:	fadd	d0, d0, d1
  407390:	str	d0, [x0, #24]
  407394:	b	407028 <wcrtomb@plt+0x2408>
  407398:	cbnz	x0, 40736c <wcrtomb@plt+0x274c>
  40739c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4073a0:	add	x0, x0, #0x478
  4073a4:	ldr	d0, [x0, #24]
  4073a8:	movi	d1, #0x0
  4073ac:	fadd	d0, d0, d1
  4073b0:	str	d0, [x0, #24]
  4073b4:	cbz	x1, 407028 <wcrtomb@plt+0x2408>
  4073b8:	mov	x0, #0x0                   	// #0
  4073bc:	bl	404d80 <wcrtomb@plt+0x160>
  4073c0:	mov	x19, x0
  4073c4:	mov	x23, #0x0                   	// #0
  4073c8:	b	407018 <wcrtomb@plt+0x23f8>
  4073cc:	stp	x29, x30, [sp, #-80]!
  4073d0:	mov	x29, sp
  4073d4:	stp	x19, x20, [sp, #16]
  4073d8:	stp	x21, x22, [sp, #32]
  4073dc:	str	x23, [sp, #48]
  4073e0:	mov	x19, x0
  4073e4:	cmp	x0, #0x0
  4073e8:	add	x0, sp, #0x4f
  4073ec:	csel	x19, x0, x19, eq  // eq = none
  4073f0:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4073f4:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4073f8:	ldr	x0, [x22, #3920]
  4073fc:	str	x0, [x21, #3880]
  407400:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407404:	add	x20, x20, #0x478
  407408:	ldrb	w23, [x20, #521]
  40740c:	mov	w0, #0x1                   	// #1
  407410:	strb	w0, [x20, #521]
  407414:	bl	406d94 <wcrtomb@plt+0x2174>
  407418:	cmp	x0, #0x0
  40741c:	cset	w0, eq  // eq = none
  407420:	strb	w0, [x19]
  407424:	strb	w23, [x20, #521]
  407428:	ldr	x19, [x22, #3920]
  40742c:	ldr	x0, [x21, #3880]
  407430:	cmp	x19, x0
  407434:	b.eq	407478 <wcrtomb@plt+0x2858>  // b.none
  407438:	add	x20, x19, #0x101
  40743c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  407440:	add	x1, x1, #0xde8
  407444:	mov	x0, x20
  407448:	bl	404720 <strcmp@plt>
  40744c:	cbz	w0, 407464 <wcrtomb@plt+0x2844>
  407450:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  407454:	add	x1, x1, #0xdf0
  407458:	mov	x0, x20
  40745c:	bl	404720 <strcmp@plt>
  407460:	cbnz	w0, 407478 <wcrtomb@plt+0x2858>
  407464:	mov	w1, #0x1                   	// #1
  407468:	mov	x0, x19
  40746c:	bl	418308 <wcrtomb@plt+0x136e8>
  407470:	cmp	w0, #0x1
  407474:	b.eq	4074bc <wcrtomb@plt+0x289c>  // b.none
  407478:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40747c:	ldr	x21, [x0, #3920]
  407480:	adrp	x19, 453000 <_obstack_memory_used@@Base+0x11e64>
  407484:	add	x19, x19, #0x148
  407488:	add	x19, x19, #0x48
  40748c:	adrp	x20, 453000 <_obstack_memory_used@@Base+0x11e64>
  407490:	add	x20, x20, #0x148
  407494:	add	x20, x20, #0x108
  407498:	ldr	x2, [x19, #8]
  40749c:	ldr	x1, [x19, #16]
  4074a0:	mov	x0, x21
  4074a4:	bl	4046e0 <memcmp@plt>
  4074a8:	cbz	w0, 4074d0 <wcrtomb@plt+0x28b0>
  4074ac:	add	x19, x19, #0x18
  4074b0:	cmp	x19, x20
  4074b4:	b.ne	407498 <wcrtomb@plt+0x2878>  // b.any
  4074b8:	mov	w0, #0x0                   	// #0
  4074bc:	ldp	x19, x20, [sp, #16]
  4074c0:	ldp	x21, x22, [sp, #32]
  4074c4:	ldr	x23, [sp, #48]
  4074c8:	ldp	x29, x30, [sp], #80
  4074cc:	ret
  4074d0:	ldr	w0, [x19]
  4074d4:	b	4074bc <wcrtomb@plt+0x289c>
  4074d8:	stp	x29, x30, [sp, #-464]!
  4074dc:	mov	x29, sp
  4074e0:	stp	x19, x20, [sp, #16]
  4074e4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4074e8:	ldr	x19, [x0, #3904]
  4074ec:	cbz	x19, 40757c <wcrtomb@plt+0x295c>
  4074f0:	mov	w2, #0x0                   	// #0
  4074f4:	mov	x1, x19
  4074f8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4074fc:	ldr	x0, [x0, #584]
  407500:	bl	4048c0 <fnmatch@plt>
  407504:	cbz	w0, 4076c4 <wcrtomb@plt+0x2aa4>
  407508:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40750c:	ldrb	w0, [x0, #12]
  407510:	cbnz	w0, 407690 <wcrtomb@plt+0x2a70>
  407514:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  407518:	ldr	x0, [x0, #944]
  40751c:	cbz	x0, 407524 <wcrtomb@plt+0x2904>
  407520:	blr	x0
  407524:	mov	w2, #0x5                   	// #5
  407528:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  40752c:	add	x1, x1, #0xe18
  407530:	mov	x0, #0x0                   	// #0
  407534:	bl	4049c0 <dcgettext@plt>
  407538:	mov	x19, x0
  40753c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407540:	ldr	x1, [x0, #3904]
  407544:	mov	w0, #0x0                   	// #0
  407548:	bl	43f17c <argp_parse@@Base+0xba3c>
  40754c:	mov	x20, x0
  407550:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  407554:	ldr	x1, [x0, #584]
  407558:	mov	w0, #0x1                   	// #1
  40755c:	bl	43f17c <argp_parse@@Base+0xba3c>
  407560:	mov	x4, x0
  407564:	mov	x3, x20
  407568:	mov	x2, x19
  40756c:	mov	w1, #0x0                   	// #0
  407570:	mov	w0, #0x0                   	// #0
  407574:	bl	404050 <error@plt>
  407578:	bl	40e5ac <wcrtomb@plt+0x998c>
  40757c:	bl	406d94 <wcrtomb@plt+0x2174>
  407580:	mov	x19, x0
  407584:	cbz	x0, 4075f4 <wcrtomb@plt+0x29d4>
  407588:	ldrb	w0, [x0, #156]
  40758c:	cmp	w0, #0x56
  407590:	b.eq	407640 <wcrtomb@plt+0x2a20>  // b.none
  407594:	cmp	w0, #0x67
  407598:	b.eq	407658 <wcrtomb@plt+0x2a38>  // b.none
  40759c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4075a0:	ldr	x19, [x0, #3904]
  4075a4:	cbnz	x19, 4074f0 <wcrtomb@plt+0x28d0>
  4075a8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4075ac:	ldr	x0, [x0, #944]
  4075b0:	cbz	x0, 4075b8 <wcrtomb@plt+0x2998>
  4075b4:	blr	x0
  4075b8:	mov	w2, #0x5                   	// #5
  4075bc:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  4075c0:	add	x1, x1, #0xdf8
  4075c4:	mov	x0, #0x0                   	// #0
  4075c8:	bl	4049c0 <dcgettext@plt>
  4075cc:	mov	x19, x0
  4075d0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4075d4:	ldr	x0, [x0, #584]
  4075d8:	bl	43f194 <argp_parse@@Base+0xba54>
  4075dc:	mov	x3, x0
  4075e0:	mov	x2, x19
  4075e4:	mov	w1, #0x0                   	// #0
  4075e8:	mov	w0, #0x0                   	// #0
  4075ec:	bl	404050 <error@plt>
  4075f0:	bl	40e5ac <wcrtomb@plt+0x998c>
  4075f4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4075f8:	ldr	x0, [x0, #944]
  4075fc:	cbz	x0, 407604 <wcrtomb@plt+0x29e4>
  407600:	blr	x0
  407604:	mov	w2, #0x5                   	// #5
  407608:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  40760c:	add	x1, x1, #0xdf8
  407610:	mov	x0, #0x0                   	// #0
  407614:	bl	4049c0 <dcgettext@plt>
  407618:	mov	x19, x0
  40761c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  407620:	ldr	x0, [x0, #584]
  407624:	bl	43f194 <argp_parse@@Base+0xba54>
  407628:	mov	x3, x0
  40762c:	mov	x2, x19
  407630:	mov	w1, #0x0                   	// #0
  407634:	mov	w0, #0x0                   	// #0
  407638:	bl	404050 <error@plt>
  40763c:	bl	40e5ac <wcrtomb@plt+0x998c>
  407640:	mov	x2, #0x64                  	// #100
  407644:	mov	x1, x19
  407648:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40764c:	add	x0, x0, #0xf40
  407650:	bl	41a5f8 <wcrtomb@plt+0x159d8>
  407654:	b	40759c <wcrtomb@plt+0x297c>
  407658:	add	x0, sp, #0x28
  40765c:	bl	42491c <wcrtomb@plt+0x1fcfc>
  407660:	mov	x1, #0xc                   	// #12
  407664:	add	x0, x19, #0x7c
  407668:	bl	4187b8 <wcrtomb@plt+0x13b98>
  40766c:	mov	x2, x0
  407670:	mov	x1, x19
  407674:	add	x0, sp, #0x180
  407678:	bl	413dac <wcrtomb@plt+0xf18c>
  40767c:	add	x0, sp, #0x28
  407680:	bl	413ba4 <wcrtomb@plt+0xef84>
  407684:	add	x0, sp, #0x28
  407688:	bl	4249a8 <wcrtomb@plt+0x1fd88>
  40768c:	b	40759c <wcrtomb@plt+0x297c>
  407690:	mov	x0, x19
  407694:	bl	4069cc <wcrtomb@plt+0x1dac>
  407698:	mov	x20, x0
  40769c:	cbz	x0, 407514 <wcrtomb@plt+0x28f4>
  4076a0:	mov	w2, #0x0                   	// #0
  4076a4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4076a8:	ldr	x1, [x0, #584]
  4076ac:	mov	x0, x20
  4076b0:	bl	4048c0 <fnmatch@plt>
  4076b4:	mov	w19, w0
  4076b8:	mov	x0, x20
  4076bc:	bl	4047c0 <free@plt>
  4076c0:	cbnz	w19, 407514 <wcrtomb@plt+0x28f4>
  4076c4:	ldp	x19, x20, [sp, #16]
  4076c8:	ldp	x29, x30, [sp], #464
  4076cc:	ret
  4076d0:	stp	x29, x30, [sp, #-32]!
  4076d4:	mov	x29, sp
  4076d8:	stp	x19, x20, [sp, #16]
  4076dc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4076e0:	ldrb	w0, [x0, #928]
  4076e4:	cbnz	w0, 4076f8 <wcrtomb@plt+0x2ad8>
  4076e8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4076ec:	ldr	w0, [x0, #3896]
  4076f0:	cmp	w0, #0x1
  4076f4:	b.ne	407714 <wcrtomb@plt+0x2af4>  // b.any
  4076f8:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4076fc:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407700:	bl	406ab8 <wcrtomb@plt+0x1e98>
  407704:	ldr	x1, [x20, #3944]
  407708:	ldr	x0, [x19, #3920]
  40770c:	cmp	x1, x0
  407710:	b.hi	407700 <wcrtomb@plt+0x2ae0>  // b.pmore
  407714:	bl	405494 <wcrtomb@plt+0x874>
  407718:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40771c:	ldrb	w0, [x0, #778]
  407720:	cbnz	w0, 407794 <wcrtomb@plt+0x2b74>
  407724:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  407728:	ldr	w0, [x0, #912]
  40772c:	mov	w1, #0x3fffffff            	// #1073741823
  407730:	cmp	w0, w1
  407734:	b.le	40779c <wcrtomb@plt+0x2b7c>
  407738:	mov	w1, #0xc0000000            	// #-1073741824
  40773c:	add	w0, w0, w1
  407740:	bl	42ae28 <wcrtomb@plt+0x26208>
  407744:	cmp	w0, #0x0
  407748:	cset	w0, ne  // ne = any
  40774c:	cbnz	w0, 4077ac <wcrtomb@plt+0x2b8c>
  407750:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407754:	add	x19, x19, #0x478
  407758:	ldrb	w1, [x19, #520]
  40775c:	ldr	w0, [x19, #524]
  407760:	bl	421020 <wcrtomb@plt+0x1c400>
  407764:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  407768:	add	x0, x0, #0x20
  40776c:	bl	4249a8 <wcrtomb@plt+0x1fd88>
  407770:	ldr	x0, [x19, #56]
  407774:	bl	4047c0 <free@plt>
  407778:	ldr	x0, [x19, #64]
  40777c:	bl	4047c0 <free@plt>
  407780:	mov	x0, #0x0                   	// #0
  407784:	bl	404e24 <wcrtomb@plt+0x204>
  407788:	ldp	x19, x20, [sp, #16]
  40778c:	ldp	x29, x30, [sp], #32
  407790:	ret
  407794:	bl	40a3bc <wcrtomb@plt+0x579c>
  407798:	b	407724 <wcrtomb@plt+0x2b04>
  40779c:	bl	4045d0 <close@plt>
  4077a0:	cmp	w0, #0x0
  4077a4:	cset	w0, ne  // ne = any
  4077a8:	b	40774c <wcrtomb@plt+0x2b2c>
  4077ac:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4077b0:	ldr	x0, [x0, #672]
  4077b4:	ldr	x0, [x0]
  4077b8:	bl	429a50 <wcrtomb@plt+0x24e30>
  4077bc:	b	407750 <wcrtomb@plt+0x2b30>
  4077c0:	stp	x29, x30, [sp, #-160]!
  4077c4:	mov	x29, sp
  4077c8:	stp	x19, x20, [sp, #16]
  4077cc:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4077d0:	add	x19, x19, #0x478
  4077d4:	adrp	x0, 405000 <wcrtomb@plt+0x3e0>
  4077d8:	add	x0, x0, #0xefc
  4077dc:	str	x0, [x19, #544]
  4077e0:	mov	w0, #0x0                   	// #0
  4077e4:	bl	4092d8 <wcrtomb@plt+0x46b8>
  4077e8:	str	wzr, [x19, #496]
  4077ec:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4077f0:	ldrb	w0, [x0, #3928]
  4077f4:	cbz	w0, 407804 <wcrtomb@plt+0x2be4>
  4077f8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4077fc:	ldr	x0, [x0, #1656]
  407800:	cbnz	x0, 407874 <wcrtomb@plt+0x2c54>
  407804:	stp	x21, x22, [sp, #32]
  407808:	adrp	x19, 481000 <argp_program_version_hook@@Base+0x298>
  40780c:	add	x19, x19, #0x390
  407810:	mov	w22, #0x3fffffff            	// #1073741823
  407814:	adrp	x20, 481000 <argp_program_version_hook@@Base+0x298>
  407818:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40781c:	add	x21, x0, #0xc
  407820:	ldr	w0, [x19]
  407824:	cmp	w0, w22
  407828:	b.le	4078a8 <wcrtomb@plt+0x2c88>
  40782c:	ldr	x2, [x20, #856]
  407830:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407834:	ldr	x1, [x1, #3920]
  407838:	mov	w3, #0xc0000000            	// #-1073741824
  40783c:	add	w0, w0, w3
  407840:	bl	42ae78 <wcrtomb@plt+0x26258>
  407844:	ldr	x1, [x20, #856]
  407848:	cmp	x1, x0
  40784c:	b.eq	4078bc <wcrtomb@plt+0x2c9c>  // b.none
  407850:	cbz	x0, 407e30 <wcrtomb@plt+0x3210>
  407854:	cmn	x0, #0x1
  407858:	b.ne	407e3c <wcrtomb@plt+0x321c>  // b.any
  40785c:	bl	404ad0 <__errno_location@plt>
  407860:	ldr	w0, [x0]
  407864:	cmp	w0, #0x1c
  407868:	b.eq	407e1c <wcrtomb@plt+0x31fc>  // b.none
  40786c:	bl	4059b8 <wcrtomb@plt+0xd98>
  407870:	b	407820 <wcrtomb@plt+0x2c00>
  407874:	adrp	x19, 481000 <argp_program_version_hook@@Base+0x298>
  407878:	mov	w0, #0x1                   	// #1
  40787c:	str	w0, [x19, #912]
  407880:	bl	421250 <wcrtomb@plt+0x1c630>
  407884:	str	wzr, [x19, #912]
  407888:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  40788c:	ldr	x1, [x1, #856]
  407890:	cmp	x0, x1
  407894:	b.eq	407804 <wcrtomb@plt+0x2be4>  // b.none
  407898:	stp	x21, x22, [sp, #32]
  40789c:	stp	x23, x24, [sp, #48]
  4078a0:	str	x25, [sp, #64]
  4078a4:	bl	405e58 <wcrtomb@plt+0x1238>
  4078a8:	ldr	x2, [x20, #856]
  4078ac:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4078b0:	ldr	x1, [x1, #3920]
  4078b4:	bl	43f41c <argp_parse@@Base+0xbcdc>
  4078b8:	b	407844 <wcrtomb@plt+0x2c24>
  4078bc:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4078c0:	ldr	x0, [x1, #3872]
  4078c4:	add	x0, x0, #0x1
  4078c8:	str	x0, [x1, #3872]
  4078cc:	b	407e40 <wcrtomb@plt+0x3220>
  4078d0:	cmp	w0, #0x8
  4078d4:	cset	w0, eq  // eq = none
  4078d8:	lsl	w0, w0, #1
  4078dc:	b	407e94 <wcrtomb@plt+0x3274>
  4078e0:	ldr	x2, [x19, #856]
  4078e4:	ldr	x1, [x20, #3920]
  4078e8:	bl	43f41c <argp_parse@@Base+0xbcdc>
  4078ec:	cmn	x0, #0x1
  4078f0:	b.ne	407918 <wcrtomb@plt+0x2cf8>  // b.any
  4078f4:	bl	4059b8 <wcrtomb@plt+0xd98>
  4078f8:	ldr	w0, [x21]
  4078fc:	cmp	w0, w23
  407900:	b.le	4078e0 <wcrtomb@plt+0x2cc0>
  407904:	ldr	x2, [x19, #856]
  407908:	ldr	x1, [x20, #3920]
  40790c:	add	w0, w0, w24
  407910:	bl	42ae78 <wcrtomb@plt+0x26258>
  407914:	b	4078ec <wcrtomb@plt+0x2ccc>
  407918:	ldr	x1, [x19, #856]
  40791c:	cmp	x0, x1
  407920:	b.ne	407abc <wcrtomb@plt+0x2e9c>  // b.any
  407924:	bl	406d94 <wcrtomb@plt+0x2174>
  407928:	str	x0, [sp, #80]
  40792c:	cbz	x0, 407ac4 <wcrtomb@plt+0x2ea4>
  407930:	ldrb	w0, [x0, #156]
  407934:	cmp	w0, #0x56
  407938:	b.eq	407be0 <wcrtomb@plt+0x2fc0>  // b.none
  40793c:	cmp	w0, #0x67
  407940:	b.eq	407afc <wcrtomb@plt+0x2edc>  // b.none
  407944:	cmp	w0, #0x4d
  407948:	b.eq	407c3c <wcrtomb@plt+0x301c>  // b.none
  40794c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407950:	ldr	x0, [x0, #1144]
  407954:	cbz	x0, 407de4 <wcrtomb@plt+0x31c4>
  407958:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40795c:	ldr	x20, [x1, #3912]
  407960:	cbz	x20, 407cb0 <wcrtomb@plt+0x3090>
  407964:	ldr	x23, [x0, #16]
  407968:	mov	x1, x23
  40796c:	mov	x0, x20
  407970:	bl	404720 <strcmp@plt>
  407974:	cbz	w0, 4079fc <wcrtomb@plt+0x2ddc>
  407978:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40797c:	ldr	w0, [x0, #752]
  407980:	and	w0, w0, #0xfffffffb
  407984:	cmp	w0, #0x2
  407988:	b.ne	407d00 <wcrtomb@plt+0x30e0>  // b.any
  40798c:	mov	x0, x23
  407990:	bl	403ff0 <strlen@plt>
  407994:	cmp	x0, #0x63
  407998:	b.ls	407d00 <wcrtomb@plt+0x30e0>  // b.plast
  40799c:	mov	x2, #0x64                  	// #100
  4079a0:	mov	x1, x23
  4079a4:	mov	x0, x20
  4079a8:	bl	4043c0 <strncmp@plt>
  4079ac:	cbnz	w0, 407d00 <wcrtomb@plt+0x30e0>
  4079b0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4079b4:	ldr	x0, [x0, #944]
  4079b8:	cbz	x0, 4079c0 <wcrtomb@plt+0x2da0>
  4079bc:	blr	x0
  4079c0:	mov	w2, #0x5                   	// #5
  4079c4:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  4079c8:	add	x1, x1, #0xe60
  4079cc:	mov	x0, #0x0                   	// #0
  4079d0:	bl	4049c0 <dcgettext@plt>
  4079d4:	mov	x20, x0
  4079d8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4079dc:	ldr	x0, [x0, #1144]
  4079e0:	ldr	x0, [x0, #16]
  4079e4:	bl	43f194 <argp_parse@@Base+0xba54>
  4079e8:	mov	x3, x0
  4079ec:	mov	x2, x20
  4079f0:	mov	w1, #0x0                   	// #0
  4079f4:	mov	w0, #0x0                   	// #0
  4079f8:	bl	404050 <error@plt>
  4079fc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407a00:	ldr	x1, [x0, #3952]
  407a04:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407a08:	ldr	x0, [x0, #3936]
  407a0c:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407a10:	ldr	x3, [x2, #1144]
  407a14:	ldr	x2, [x3, #24]
  407a18:	adds	x0, x1, x0
  407a1c:	ccmp	x0, x2, #0x0, cc  // cc = lo, ul, last
  407a20:	b.eq	407d50 <wcrtomb@plt+0x3130>  // b.none
  407a24:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  407a28:	ldr	x0, [x0, #944]
  407a2c:	cbz	x0, 407a34 <wcrtomb@plt+0x2e14>
  407a30:	blr	x0
  407a34:	mov	w2, #0x5                   	// #5
  407a38:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  407a3c:	add	x1, x1, #0xea8
  407a40:	mov	x0, #0x0                   	// #0
  407a44:	bl	4049c0 <dcgettext@plt>
  407a48:	mov	x20, x0
  407a4c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407a50:	ldr	x0, [x0, #3912]
  407a54:	bl	43f194 <argp_parse@@Base+0xba54>
  407a58:	mov	x23, x0
  407a5c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407a60:	ldr	x0, [x0, #1144]
  407a64:	add	x1, sp, #0x58
  407a68:	ldr	x0, [x0, #24]
  407a6c:	bl	438ce8 <argp_parse@@Base+0x55a8>
  407a70:	mov	x24, x0
  407a74:	add	x1, sp, #0x70
  407a78:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407a7c:	ldr	x0, [x0, #3936]
  407a80:	bl	438ce8 <argp_parse@@Base+0x55a8>
  407a84:	mov	x25, x0
  407a88:	add	x1, sp, #0x88
  407a8c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407a90:	ldr	x0, [x0, #3952]
  407a94:	bl	438ce8 <argp_parse@@Base+0x55a8>
  407a98:	mov	x6, x0
  407a9c:	mov	x5, x25
  407aa0:	mov	x4, x24
  407aa4:	mov	x3, x23
  407aa8:	mov	x2, x20
  407aac:	mov	w1, #0x0                   	// #0
  407ab0:	mov	w0, #0x0                   	// #0
  407ab4:	bl	404050 <error@plt>
  407ab8:	b	407e7c <wcrtomb@plt+0x325c>
  407abc:	bl	405a70 <wcrtomb@plt+0xe50>
  407ac0:	b	407924 <wcrtomb@plt+0x2d04>
  407ac4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  407ac8:	ldr	x0, [x0, #944]
  407acc:	cbz	x0, 407ad4 <wcrtomb@plt+0x2eb4>
  407ad0:	blr	x0
  407ad4:	mov	w2, #0x5                   	// #5
  407ad8:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  407adc:	add	x1, x1, #0x960
  407ae0:	mov	x0, #0x0                   	// #0
  407ae4:	bl	4049c0 <dcgettext@plt>
  407ae8:	mov	x2, x0
  407aec:	mov	w1, #0x0                   	// #0
  407af0:	mov	w0, #0x0                   	// #0
  407af4:	bl	404050 <error@plt>
  407af8:	b	407e7c <wcrtomb@plt+0x325c>
  407afc:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407b00:	add	x20, x20, #0x478
  407b04:	add	x20, x20, #0x48
  407b08:	mov	x0, x20
  407b0c:	bl	42491c <wcrtomb@plt+0x1fcfc>
  407b10:	mov	w2, #0x2                   	// #2
  407b14:	mov	x1, x20
  407b18:	add	x0, sp, #0x50
  407b1c:	bl	4187e4 <wcrtomb@plt+0x13bc4>
  407b20:	cmp	w0, #0x2
  407b24:	b.eq	407b60 <wcrtomb@plt+0x2f40>  // b.none
  407b28:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  407b2c:	ldr	x0, [x0, #944]
  407b30:	cbz	x0, 407b38 <wcrtomb@plt+0x2f18>
  407b34:	blr	x0
  407b38:	mov	w2, #0x5                   	// #5
  407b3c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  407b40:	add	x1, x1, #0x960
  407b44:	mov	x0, #0x0                   	// #0
  407b48:	bl	4049c0 <dcgettext@plt>
  407b4c:	mov	x2, x0
  407b50:	mov	w1, #0x0                   	// #0
  407b54:	mov	w0, #0x0                   	// #0
  407b58:	bl	404050 <error@plt>
  407b5c:	b	407e7c <wcrtomb@plt+0x325c>
  407b60:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407b64:	add	x20, x20, #0x478
  407b68:	add	x20, x20, #0x48
  407b6c:	mov	x0, x20
  407b70:	bl	413ba4 <wcrtomb@plt+0xef84>
  407b74:	mov	x0, x20
  407b78:	bl	4249a8 <wcrtomb@plt+0x1fd88>
  407b7c:	mov	w2, #0x0                   	// #0
  407b80:	mov	x1, x20
  407b84:	add	x0, sp, #0x50
  407b88:	bl	4187e4 <wcrtomb@plt+0x13bc4>
  407b8c:	cmp	w0, #0x1
  407b90:	b.eq	407bd4 <wcrtomb@plt+0x2fb4>  // b.none
  407b94:	cmp	w0, #0x5
  407b98:	b.eq	40794c <wcrtomb@plt+0x2d2c>  // b.none
  407b9c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  407ba0:	ldr	x0, [x0, #944]
  407ba4:	cbz	x0, 407bac <wcrtomb@plt+0x2f8c>
  407ba8:	blr	x0
  407bac:	mov	w2, #0x5                   	// #5
  407bb0:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  407bb4:	add	x1, x1, #0x960
  407bb8:	mov	x0, #0x0                   	// #0
  407bbc:	bl	4049c0 <dcgettext@plt>
  407bc0:	mov	x2, x0
  407bc4:	mov	w1, #0x0                   	// #0
  407bc8:	mov	w0, #0x0                   	// #0
  407bcc:	bl	404050 <error@plt>
  407bd0:	b	407e7c <wcrtomb@plt+0x325c>
  407bd4:	ldr	x0, [sp, #80]
  407bd8:	bl	405884 <wcrtomb@plt+0xc64>
  407bdc:	b	40794c <wcrtomb@plt+0x2d2c>
  407be0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407be4:	add	x0, x0, #0x478
  407be8:	add	x0, x0, #0x48
  407bec:	bl	4058e0 <wcrtomb@plt+0xcc0>
  407bf0:	and	w0, w0, #0xff
  407bf4:	cbz	w0, 407e7c <wcrtomb@plt+0x325c>
  407bf8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407bfc:	add	x0, x0, #0x478
  407c00:	add	x0, x0, #0x48
  407c04:	bl	4249a8 <wcrtomb@plt+0x1fd88>
  407c08:	mov	x2, #0x64                  	// #100
  407c0c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407c10:	ldr	x1, [x0, #4008]
  407c14:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407c18:	add	x0, x0, #0xf40
  407c1c:	bl	41a5f8 <wcrtomb@plt+0x159d8>
  407c20:	ldr	x0, [sp, #80]
  407c24:	bl	405884 <wcrtomb@plt+0xc64>
  407c28:	bl	406d94 <wcrtomb@plt+0x2174>
  407c2c:	str	x0, [sp, #80]
  407c30:	ldrb	w0, [x0, #156]
  407c34:	cmp	w0, #0x4d
  407c38:	b.ne	40794c <wcrtomb@plt+0x2d2c>  // b.any
  407c3c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407c40:	add	x0, x0, #0x478
  407c44:	add	x0, x0, #0x48
  407c48:	bl	4058e0 <wcrtomb@plt+0xcc0>
  407c4c:	and	w0, w0, #0xff
  407c50:	cbz	w0, 407e7c <wcrtomb@plt+0x325c>
  407c54:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407c58:	add	x0, x0, #0x478
  407c5c:	add	x0, x0, #0x48
  407c60:	bl	4249a8 <wcrtomb@plt+0x1fd88>
  407c64:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407c68:	mov	x2, #0x64                  	// #100
  407c6c:	ldr	x1, [x20, #4008]
  407c70:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407c74:	add	x0, x0, #0xf48
  407c78:	bl	41a5f8 <wcrtomb@plt+0x159d8>
  407c7c:	ldr	x0, [x20, #4008]
  407c80:	mov	x1, #0xc                   	// #12
  407c84:	add	x0, x0, #0x7c
  407c88:	bl	418c14 <wcrtomb@plt+0x13ff4>
  407c8c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407c90:	str	x0, [x1, #3936]
  407c94:	ldr	x0, [x20, #4008]
  407c98:	mov	x1, #0xc                   	// #12
  407c9c:	add	x0, x0, #0x171
  407ca0:	bl	418c14 <wcrtomb@plt+0x13ff4>
  407ca4:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407ca8:	str	x0, [x1, #3952]
  407cac:	b	40794c <wcrtomb@plt+0x2d2c>
  407cb0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  407cb4:	ldr	x0, [x0, #944]
  407cb8:	cbz	x0, 407cc0 <wcrtomb@plt+0x30a0>
  407cbc:	blr	x0
  407cc0:	mov	w2, #0x5                   	// #5
  407cc4:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  407cc8:	add	x1, x1, #0xe38
  407ccc:	mov	x0, #0x0                   	// #0
  407cd0:	bl	4049c0 <dcgettext@plt>
  407cd4:	mov	x20, x0
  407cd8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407cdc:	ldr	x0, [x0, #1144]
  407ce0:	ldr	x0, [x0, #16]
  407ce4:	bl	43f194 <argp_parse@@Base+0xba54>
  407ce8:	mov	x3, x0
  407cec:	mov	x2, x20
  407cf0:	mov	w1, #0x0                   	// #0
  407cf4:	mov	w0, #0x0                   	// #0
  407cf8:	bl	404050 <error@plt>
  407cfc:	b	407e7c <wcrtomb@plt+0x325c>
  407d00:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  407d04:	ldr	x0, [x0, #944]
  407d08:	cbz	x0, 407d10 <wcrtomb@plt+0x30f0>
  407d0c:	blr	x0
  407d10:	mov	w2, #0x5                   	// #5
  407d14:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  407d18:	add	x1, x1, #0xe38
  407d1c:	mov	x0, #0x0                   	// #0
  407d20:	bl	4049c0 <dcgettext@plt>
  407d24:	mov	x20, x0
  407d28:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407d2c:	ldr	x0, [x0, #1144]
  407d30:	ldr	x0, [x0, #16]
  407d34:	bl	43f194 <argp_parse@@Base+0xba54>
  407d38:	mov	x3, x0
  407d3c:	mov	x2, x20
  407d40:	mov	w1, #0x0                   	// #0
  407d44:	mov	w0, #0x0                   	// #0
  407d48:	bl	404050 <error@plt>
  407d4c:	b	407e7c <wcrtomb@plt+0x325c>
  407d50:	ldr	x0, [x3, #32]
  407d54:	sub	x2, x2, x0
  407d58:	cmp	x2, x1
  407d5c:	b.eq	407de4 <wcrtomb@plt+0x31c4>  // b.none
  407d60:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  407d64:	ldr	x0, [x0, #944]
  407d68:	cbz	x0, 407d70 <wcrtomb@plt+0x3150>
  407d6c:	blr	x0
  407d70:	mov	w2, #0x5                   	// #5
  407d74:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  407d78:	add	x1, x1, #0xed0
  407d7c:	mov	x0, #0x0                   	// #0
  407d80:	bl	4049c0 <dcgettext@plt>
  407d84:	mov	x20, x0
  407d88:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407d8c:	ldr	x0, [x24, #1144]
  407d90:	add	x1, sp, #0x58
  407d94:	ldr	x0, [x0, #24]
  407d98:	bl	438ce8 <argp_parse@@Base+0x55a8>
  407d9c:	mov	x23, x0
  407da0:	ldr	x0, [x24, #1144]
  407da4:	add	x1, sp, #0x70
  407da8:	ldr	x0, [x0, #32]
  407dac:	bl	438ce8 <argp_parse@@Base+0x55a8>
  407db0:	mov	x24, x0
  407db4:	add	x1, sp, #0x88
  407db8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407dbc:	ldr	x0, [x0, #3952]
  407dc0:	bl	438ce8 <argp_parse@@Base+0x55a8>
  407dc4:	mov	x5, x0
  407dc8:	mov	x4, x24
  407dcc:	mov	x3, x23
  407dd0:	mov	x2, x20
  407dd4:	mov	w1, #0x0                   	// #0
  407dd8:	mov	w0, #0x0                   	// #0
  407ddc:	bl	404050 <error@plt>
  407de0:	b	407e7c <wcrtomb@plt+0x325c>
  407de4:	bl	404fdc <wcrtomb@plt+0x3bc>
  407de8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407dec:	ldr	x1, [x0, #3944]
  407df0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407df4:	ldr	x0, [x0, #3880]
  407df8:	cmp	x1, x0
  407dfc:	b.eq	407e0c <wcrtomb@plt+0x31ec>  // b.none
  407e00:	ldp	x23, x24, [sp, #48]
  407e04:	ldr	x25, [sp, #64]
  407e08:	b	407e40 <wcrtomb@plt+0x3220>
  407e0c:	bl	406ab8 <wcrtomb@plt+0x1e98>
  407e10:	ldp	x23, x24, [sp, #48]
  407e14:	ldr	x25, [sp, #64]
  407e18:	b	407e40 <wcrtomb@plt+0x3220>
  407e1c:	ldrb	w0, [x21]
  407e20:	cbz	w0, 40786c <wcrtomb@plt+0x2c4c>
  407e24:	stp	x23, x24, [sp, #48]
  407e28:	str	x25, [sp, #64]
  407e2c:	b	407e68 <wcrtomb@plt+0x3248>
  407e30:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  407e34:	ldrb	w1, [x1, #12]
  407e38:	cbnz	w1, 407e60 <wcrtomb@plt+0x3240>
  407e3c:	bl	405a70 <wcrtomb@plt+0xe50>
  407e40:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407e44:	adrp	x1, 407000 <wcrtomb@plt+0x23e0>
  407e48:	add	x1, x1, #0x7c0
  407e4c:	str	x1, [x0, #1688]
  407e50:	ldp	x21, x22, [sp, #32]
  407e54:	ldp	x19, x20, [sp, #16]
  407e58:	ldp	x29, x30, [sp], #160
  407e5c:	ret
  407e60:	stp	x23, x24, [sp, #48]
  407e64:	str	x25, [sp, #64]
  407e68:	adrp	x22, 481000 <argp_program_version_hook@@Base+0x298>
  407e6c:	add	x22, x22, #0x31c
  407e70:	adrp	x21, 481000 <argp_program_version_hook@@Base+0x298>
  407e74:	add	x21, x21, #0x390
  407e78:	adrp	x19, 481000 <argp_program_version_hook@@Base+0x298>
  407e7c:	ldr	w0, [x22]
  407e80:	cmp	w0, #0x2
  407e84:	b.hi	4078d0 <wcrtomb@plt+0x2cb0>  // b.pmore
  407e88:	cmp	w0, #0x0
  407e8c:	mov	w1, #0x2                   	// #2
  407e90:	csel	w0, w0, w1, eq  // eq = none
  407e94:	bl	406188 <wcrtomb@plt+0x1568>
  407e98:	and	w0, w0, #0xff
  407e9c:	cbz	w0, 407de8 <wcrtomb@plt+0x31c8>
  407ea0:	mov	w23, #0x3fffffff            	// #1073741823
  407ea4:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407ea8:	mov	w24, #0xc0000000            	// #-1073741824
  407eac:	b	4078f8 <wcrtomb@plt+0x2cd8>
  407eb0:	stp	x29, x30, [sp, #-16]!
  407eb4:	mov	x29, sp
  407eb8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407ebc:	ldr	x1, [x0, #1696]
  407ec0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  407ec4:	ldr	x0, [x0, #856]
  407ec8:	blr	x1
  407ecc:	ldp	x29, x30, [sp], #16
  407ed0:	ret
  407ed4:	stp	x29, x30, [sp, #-64]!
  407ed8:	mov	x29, sp
  407edc:	stp	x19, x20, [sp, #16]
  407ee0:	mov	w19, w0
  407ee4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407ee8:	add	x0, x0, #0x478
  407eec:	adrp	x1, 407000 <wcrtomb@plt+0x23e0>
  407ef0:	add	x1, x1, #0x7c0
  407ef4:	str	x1, [x0, #544]
  407ef8:	adrp	x1, 406000 <wcrtomb@plt+0x13e0>
  407efc:	add	x1, x1, #0xf6c
  407f00:	str	x1, [x0, #552]
  407f04:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  407f08:	ldr	x0, [x0, #856]
  407f0c:	cbz	x0, 408038 <wcrtomb@plt+0x3418>
  407f10:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  407f14:	ldr	x0, [x0, #784]
  407f18:	cbz	x0, 408074 <wcrtomb@plt+0x3454>
  407f1c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  407f20:	add	x0, x0, #0x20
  407f24:	bl	4249a8 <wcrtomb@plt+0x1fd88>
  407f28:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407f2c:	str	wzr, [x0, #1180]
  407f30:	bl	4051d4 <wcrtomb@plt+0x5b4>
  407f34:	cmp	w19, #0x2
  407f38:	csel	w20, w19, wzr, ne  // ne = any
  407f3c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407f40:	str	w20, [x0, #3896]
  407f44:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  407f48:	ldr	x0, [x0, #624]
  407f4c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  407f50:	add	x1, x1, #0xca8
  407f54:	ldr	x0, [x0]
  407f58:	bl	404720 <strcmp@plt>
  407f5c:	cbz	w0, 4080b0 <wcrtomb@plt+0x3490>
  407f60:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  407f64:	ldrb	w1, [x0, #777]
  407f68:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407f6c:	strb	w1, [x0, #1665]
  407f70:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407f74:	str	xzr, [x0, #3872]
  407f78:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  407f7c:	ldr	x0, [x0, #840]
  407f80:	cbz	x0, 408174 <wcrtomb@plt+0x3554>
  407f84:	cmp	w19, #0x1
  407f88:	b.eq	40811c <wcrtomb@plt+0x34fc>  // b.none
  407f8c:	cmp	w19, #0x2
  407f90:	b.eq	40816c <wcrtomb@plt+0x354c>  // b.none
  407f94:	cbnz	w19, 407fc0 <wcrtomb@plt+0x33a0>
  407f98:	bl	421624 <wcrtomb@plt+0x1ca04>
  407f9c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407fa0:	add	x1, x1, #0x478
  407fa4:	str	w0, [x1, #524]
  407fa8:	mov	w0, #0x1                   	// #1
  407fac:	strb	w0, [x1, #521]
  407fb0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407fb4:	ldr	x1, [x0, #3920]
  407fb8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407fbc:	str	x1, [x0, #3880]
  407fc0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  407fc4:	ldr	w0, [x0, #912]
  407fc8:	tbnz	w0, #31, 408818 <wcrtomb@plt+0x3bf8>
  407fcc:	mov	w20, #0x0                   	// #0
  407fd0:	mov	w1, #0x3fffffff            	// #1073741823
  407fd4:	cmp	w0, w1
  407fd8:	b.le	408788 <wcrtomb@plt+0x3b68>
  407fdc:	bl	420f68 <wcrtomb@plt+0x1c348>
  407fe0:	bl	420f10 <wcrtomb@plt+0x1c2f0>
  407fe4:	cbz	w19, 4087b0 <wcrtomb@plt+0x3b90>
  407fe8:	sub	w0, w19, #0x1
  407fec:	cmp	w0, #0x1
  407ff0:	b.hi	407ffc <wcrtomb@plt+0x33dc>  // b.pmore
  407ff4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  407ff8:	str	xzr, [x0, #3888]
  407ffc:	cmp	w19, #0x1
  408000:	b.eq	4087c8 <wcrtomb@plt+0x3ba8>  // b.none
  408004:	tst	w19, #0xfffffffd
  408008:	b.eq	4087b4 <wcrtomb@plt+0x3b94>  // b.none
  40800c:	adrp	x19, 481000 <argp_program_version_hook@@Base+0x298>
  408010:	add	x19, x19, #0x368
  408014:	mov	x0, x19
  408018:	bl	4373d0 <argp_parse@@Base+0x3c90>
  40801c:	ldp	x2, x3, [x19]
  408020:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  408024:	add	x0, x0, #0x320
  408028:	stp	x2, x3, [x0]
  40802c:	ldp	x19, x20, [sp, #16]
  408030:	ldp	x29, x30, [sp], #64
  408034:	ret
  408038:	str	x21, [sp, #32]
  40803c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  408040:	ldr	x0, [x0, #944]
  408044:	cbz	x0, 40804c <wcrtomb@plt+0x342c>
  408048:	blr	x0
  40804c:	mov	w2, #0x5                   	// #5
  408050:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  408054:	add	x1, x1, #0xf00
  408058:	mov	x0, #0x0                   	// #0
  40805c:	bl	4049c0 <dcgettext@plt>
  408060:	mov	x2, x0
  408064:	mov	w1, #0x0                   	// #0
  408068:	mov	w0, #0x0                   	// #0
  40806c:	bl	404050 <error@plt>
  408070:	bl	40e5ac <wcrtomb@plt+0x998c>
  408074:	str	x21, [sp, #32]
  408078:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40807c:	ldr	x0, [x0, #944]
  408080:	cbz	x0, 408088 <wcrtomb@plt+0x3468>
  408084:	blr	x0
  408088:	mov	w2, #0x5                   	// #5
  40808c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  408090:	add	x1, x1, #0xf20
  408094:	mov	x0, #0x0                   	// #0
  408098:	bl	4049c0 <dcgettext@plt>
  40809c:	mov	x2, x0
  4080a0:	mov	w1, #0x0                   	// #0
  4080a4:	mov	w0, #0x0                   	// #0
  4080a8:	bl	404050 <error@plt>
  4080ac:	bl	40e5ac <wcrtomb@plt+0x998c>
  4080b0:	cmp	w20, #0x0
  4080b4:	cset	w0, ne  // ne = any
  4080b8:	bl	404970 <isatty@plt>
  4080bc:	cbz	w0, 407f60 <wcrtomb@plt+0x3340>
  4080c0:	str	x21, [sp, #32]
  4080c4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4080c8:	ldr	x0, [x0, #944]
  4080cc:	cbz	x0, 4080d4 <wcrtomb@plt+0x34b4>
  4080d0:	blr	x0
  4080d4:	cbnz	w20, 408100 <wcrtomb@plt+0x34e0>
  4080d8:	mov	w2, #0x5                   	// #5
  4080dc:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  4080e0:	add	x1, x1, #0xf38
  4080e4:	mov	x0, #0x0                   	// #0
  4080e8:	bl	4049c0 <dcgettext@plt>
  4080ec:	mov	x2, x0
  4080f0:	mov	w1, #0x0                   	// #0
  4080f4:	mov	w0, #0x0                   	// #0
  4080f8:	bl	404050 <error@plt>
  4080fc:	bl	40e5ac <wcrtomb@plt+0x998c>
  408100:	mov	w2, #0x5                   	// #5
  408104:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  408108:	add	x1, x1, #0xf80
  40810c:	mov	x0, #0x0                   	// #0
  408110:	bl	4049c0 <dcgettext@plt>
  408114:	mov	x2, x0
  408118:	b	4080f0 <wcrtomb@plt+0x34d0>
  40811c:	bl	4212a8 <wcrtomb@plt+0x1c688>
  408120:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  408124:	str	w0, [x1, #1668]
  408128:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40812c:	ldr	x0, [x0, #896]
  408130:	cmp	x0, #0x0
  408134:	ccmp	w19, #0x1, #0x0, eq  // eq = none
  408138:	b.ne	407fc0 <wcrtomb@plt+0x33a0>  // b.any
  40813c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  408140:	ldr	x0, [x0, #624]
  408144:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  408148:	add	x1, x1, #0xca8
  40814c:	ldr	x0, [x0]
  408150:	bl	404720 <strcmp@plt>
  408154:	cbnz	w0, 407fc0 <wcrtomb@plt+0x33a0>
  408158:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40815c:	ldr	x1, [x0, #1096]
  408160:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  408164:	str	x1, [x0, #3864]
  408168:	b	407fc0 <wcrtomb@plt+0x33a0>
  40816c:	str	x21, [sp, #32]
  408170:	bl	404660 <abort@plt>
  408174:	str	x21, [sp, #32]
  408178:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40817c:	ldr	x20, [x0, #624]
  408180:	ldr	x21, [x20]
  408184:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  408188:	add	x1, x1, #0xca8
  40818c:	mov	x0, x21
  408190:	bl	404720 <strcmp@plt>
  408194:	cbnz	w0, 408344 <wcrtomb@plt+0x3724>
  408198:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40819c:	mov	w1, #0x1                   	// #1
  4081a0:	strb	w1, [x0, #1665]
  4081a4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4081a8:	ldrb	w0, [x0, #778]
  4081ac:	cbnz	w0, 408230 <wcrtomb@plt+0x3610>
  4081b0:	cmp	w19, #0x1
  4081b4:	b.eq	4082c0 <wcrtomb@plt+0x36a0>  // b.none
  4081b8:	cmp	w19, #0x2
  4081bc:	b.eq	408300 <wcrtomb@plt+0x36e0>  // b.none
  4081c0:	cbnz	w19, 408358 <wcrtomb@plt+0x3738>
  4081c4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4081c8:	str	wzr, [x0, #912]
  4081cc:	add	x0, sp, #0x3b
  4081d0:	bl	4073cc <wcrtomb@plt+0x27ac>
  4081d4:	mov	w20, w0
  4081d8:	cmp	w0, #0x1
  4081dc:	b.hi	408268 <wcrtomb@plt+0x3648>  // b.pmore
  4081e0:	ldrb	w0, [sp, #59]
  4081e4:	cbz	w0, 40882c <wcrtomb@plt+0x3c0c>
  4081e8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4081ec:	ldr	x0, [x0, #944]
  4081f0:	cbz	x0, 4081f8 <wcrtomb@plt+0x35d8>
  4081f4:	blr	x0
  4081f8:	mov	w2, #0x5                   	// #5
  4081fc:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  408200:	add	x1, x1, #0x960
  408204:	mov	x0, #0x0                   	// #0
  408208:	bl	4049c0 <dcgettext@plt>
  40820c:	mov	x2, x0
  408210:	mov	w1, #0x0                   	// #0
  408214:	mov	w0, #0x0                   	// #0
  408218:	bl	404050 <error@plt>
  40821c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  408220:	mov	w1, #0x2                   	// #2
  408224:	str	w1, [x0, #3392]
  408228:	ldr	x21, [sp, #32]
  40822c:	b	407fc0 <wcrtomb@plt+0x33a0>
  408230:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  408234:	ldr	x0, [x0, #944]
  408238:	cbz	x0, 408240 <wcrtomb@plt+0x3620>
  40823c:	blr	x0
  408240:	mov	w2, #0x5                   	// #5
  408244:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  408248:	add	x1, x1, #0xfc8
  40824c:	mov	x0, #0x0                   	// #0
  408250:	bl	4049c0 <dcgettext@plt>
  408254:	mov	x2, x0
  408258:	mov	w1, #0x0                   	// #0
  40825c:	mov	w0, #0x0                   	// #0
  408260:	bl	404050 <error@plt>
  408264:	bl	40e5ac <wcrtomb@plt+0x998c>
  408268:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40826c:	ldr	x0, [x0, #944]
  408270:	cbz	x0, 408278 <wcrtomb@plt+0x3658>
  408274:	blr	x0
  408278:	mov	w2, #0x5                   	// #5
  40827c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  408280:	add	x1, x1, #0xff0
  408284:	mov	x0, #0x0                   	// #0
  408288:	bl	4049c0 <dcgettext@plt>
  40828c:	mov	x19, x0
  408290:	str	wzr, [sp, #60]
  408294:	add	x1, sp, #0x3c
  408298:	mov	w0, w20
  40829c:	bl	404db0 <wcrtomb@plt+0x190>
  4082a0:	mov	x3, x0
  4082a4:	cbz	x0, 4082ac <wcrtomb@plt+0x368c>
  4082a8:	ldr	x3, [x0, #16]
  4082ac:	mov	x2, x19
  4082b0:	mov	w1, #0x0                   	// #0
  4082b4:	mov	w0, #0x0                   	// #0
  4082b8:	bl	404050 <error@plt>
  4082bc:	bl	40e5ac <wcrtomb@plt+0x998c>
  4082c0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4082c4:	mov	w1, #0x1                   	// #1
  4082c8:	str	w1, [x0, #912]
  4082cc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4082d0:	ldr	x0, [x0, #896]
  4082d4:	cbz	x0, 4082ec <wcrtomb@plt+0x36cc>
  4082d8:	bl	420ea0 <wcrtomb@plt+0x1c280>
  4082dc:	and	w0, w0, #0xff
  4082e0:	cbz	w0, 408834 <wcrtomb@plt+0x3c14>
  4082e4:	ldr	x21, [sp, #32]
  4082e8:	b	407fdc <wcrtomb@plt+0x33bc>
  4082ec:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4082f0:	ldr	x1, [x0, #1096]
  4082f4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4082f8:	str	x1, [x0, #3864]
  4082fc:	b	4082d8 <wcrtomb@plt+0x36b8>
  408300:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  408304:	str	wzr, [x0, #912]
  408308:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40830c:	mov	w1, #0x1                   	// #1
  408310:	strb	w1, [x0, #3928]
  408314:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  408318:	ldr	x1, [x0, #3920]
  40831c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  408320:	str	x1, [x0, #3880]
  408324:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  408328:	ldr	x0, [x0, #896]
  40832c:	cbnz	x0, 4082d8 <wcrtomb@plt+0x36b8>
  408330:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  408334:	ldr	x1, [x0, #1096]
  408338:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40833c:	str	x1, [x0, #3864]
  408340:	b	4082d8 <wcrtomb@plt+0x36b8>
  408344:	cmp	w19, #0x1
  408348:	b.eq	40856c <wcrtomb@plt+0x394c>  // b.none
  40834c:	cmp	w19, #0x2
  408350:	b.eq	4086c0 <wcrtomb@plt+0x3aa0>  // b.none
  408354:	cbz	w19, 408370 <wcrtomb@plt+0x3750>
  408358:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40835c:	ldr	w0, [x0, #912]
  408360:	tbnz	w0, #31, 408844 <wcrtomb@plt+0x3c24>
  408364:	mov	w20, #0x0                   	// #0
  408368:	ldr	x21, [sp, #32]
  40836c:	b	407fd0 <wcrtomb@plt+0x33b0>
  408370:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  408374:	ldrb	w0, [x0, #952]
  408378:	cbnz	w0, 4083b4 <wcrtomb@plt+0x3794>
  40837c:	mov	w1, #0x3a                  	// #58
  408380:	mov	x0, x21
  408384:	bl	404870 <strchr@plt>
  408388:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  40838c:	str	x0, [x1, #960]
  408390:	cbz	x0, 4083b4 <wcrtomb@plt+0x3794>
  408394:	ldr	x21, [x20]
  408398:	cmp	x0, x21
  40839c:	b.ls	4083b4 <wcrtomb@plt+0x3794>  // b.plast
  4083a0:	sub	x2, x0, x21
  4083a4:	mov	w1, #0x2f                  	// #47
  4083a8:	mov	x0, x21
  4083ac:	bl	404960 <memchr@plt>
  4083b0:	cbz	x0, 408460 <wcrtomb@plt+0x3840>
  4083b4:	mov	w2, #0x1b6                 	// #438
  4083b8:	mov	w1, #0x0                   	// #0
  4083bc:	ldr	x0, [x20]
  4083c0:	bl	404340 <open@plt>
  4083c4:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  4083c8:	str	w0, [x1, #912]
  4083cc:	cmn	w0, #0x1
  4083d0:	b.eq	4087f8 <wcrtomb@plt+0x3bd8>  // b.none
  4083d4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4083d8:	ldrb	w0, [x0, #12]
  4083dc:	cbnz	w0, 408428 <wcrtomb@plt+0x3808>
  4083e0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4083e4:	ldr	x0, [x0, #840]
  4083e8:	cbz	x0, 40847c <wcrtomb@plt+0x385c>
  4083ec:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4083f0:	ldr	w0, [x0, #912]
  4083f4:	mov	w1, #0x3fffffff            	// #1073741823
  4083f8:	cmp	w0, w1
  4083fc:	b.le	408564 <wcrtomb@plt+0x3944>
  408400:	mov	w1, #0xc0000000            	// #-1073741824
  408404:	add	w0, w0, w1
  408408:	bl	42ae28 <wcrtomb@plt+0x26208>
  40840c:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x3ee64>
  408410:	add	x20, x20, #0x478
  408414:	strb	wzr, [x20, #520]
  408418:	bl	421624 <wcrtomb@plt+0x1ca04>
  40841c:	str	w0, [x20, #524]
  408420:	mov	w0, #0x1                   	// #1
  408424:	strb	w0, [x20, #521]
  408428:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40842c:	str	xzr, [x0, #3872]
  408430:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  408434:	ldr	x1, [x0, #3920]
  408438:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40843c:	str	x1, [x0, #3880]
  408440:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  408444:	ldr	w0, [x0, #912]
  408448:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  40844c:	str	w0, [x1, #912]
  408450:	tbnz	w0, #31, 4087f8 <wcrtomb@plt+0x3bd8>
  408454:	bl	40512c <wcrtomb@plt+0x50c>
  408458:	ldr	x21, [sp, #32]
  40845c:	b	407fc0 <wcrtomb@plt+0x33a0>
  408460:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  408464:	ldr	x3, [x0, #744]
  408468:	mov	w2, #0x40000000            	// #1073741824
  40846c:	mov	w1, #0x0                   	// #0
  408470:	mov	x0, x21
  408474:	bl	42a790 <wcrtomb@plt+0x25b70>
  408478:	b	4083c4 <wcrtomb@plt+0x37a4>
  40847c:	add	x0, sp, #0x3c
  408480:	bl	4073cc <wcrtomb@plt+0x27ac>
  408484:	cbz	w0, 4084e4 <wcrtomb@plt+0x38c4>
  408488:	cmp	w0, #0x1
  40848c:	b.ne	408558 <wcrtomb@plt+0x3938>  // b.any
  408490:	ldrb	w0, [sp, #60]
  408494:	cbz	w0, 4084d8 <wcrtomb@plt+0x38b8>
  408498:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40849c:	ldr	x0, [x0, #944]
  4084a0:	cbz	x0, 4084a8 <wcrtomb@plt+0x3888>
  4084a4:	blr	x0
  4084a8:	mov	w2, #0x5                   	// #5
  4084ac:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  4084b0:	add	x1, x1, #0x960
  4084b4:	mov	x0, #0x0                   	// #0
  4084b8:	bl	4049c0 <dcgettext@plt>
  4084bc:	mov	x2, x0
  4084c0:	mov	w1, #0x0                   	// #0
  4084c4:	mov	w0, #0x0                   	// #0
  4084c8:	bl	404050 <error@plt>
  4084cc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4084d0:	mov	w1, #0x2                   	// #2
  4084d4:	str	w1, [x0, #3392]
  4084d8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4084dc:	ldr	w0, [x0, #912]
  4084e0:	b	408448 <wcrtomb@plt+0x3828>
  4084e4:	ldrb	w0, [sp, #60]
  4084e8:	cbz	w0, 40852c <wcrtomb@plt+0x390c>
  4084ec:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4084f0:	ldr	x0, [x0, #944]
  4084f4:	cbz	x0, 4084fc <wcrtomb@plt+0x38dc>
  4084f8:	blr	x0
  4084fc:	mov	w2, #0x5                   	// #5
  408500:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  408504:	add	x1, x1, #0x960
  408508:	mov	x0, #0x0                   	// #0
  40850c:	bl	4049c0 <dcgettext@plt>
  408510:	mov	x2, x0
  408514:	mov	w1, #0x0                   	// #0
  408518:	mov	w0, #0x0                   	// #0
  40851c:	bl	404050 <error@plt>
  408520:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  408524:	mov	w1, #0x2                   	// #2
  408528:	str	w1, [x0, #3392]
  40852c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  408530:	ldr	x0, [x0, #624]
  408534:	mov	x1, #0x0                   	// #0
  408538:	ldr	x0, [x0]
  40853c:	bl	420948 <wcrtomb@plt+0x1bd28>
  408540:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  408544:	ldr	x0, [x0, #840]
  408548:	cbnz	x0, 4083ec <wcrtomb@plt+0x37cc>
  40854c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  408550:	ldr	w0, [x0, #912]
  408554:	b	408448 <wcrtomb@plt+0x3828>
  408558:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40855c:	str	w0, [x1, #1644]
  408560:	b	4083ec <wcrtomb@plt+0x37cc>
  408564:	bl	4045d0 <close@plt>
  408568:	b	40840c <wcrtomb@plt+0x37ec>
  40856c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  408570:	ldrb	w0, [x0, #693]
  408574:	mov	w20, #0x0                   	// #0
  408578:	cbnz	w0, 408608 <wcrtomb@plt+0x39e8>
  40857c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  408580:	ldrb	w0, [x0, #778]
  408584:	cbz	w0, 408638 <wcrtomb@plt+0x3a18>
  408588:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40858c:	ldrb	w0, [x0, #952]
  408590:	cbnz	w0, 4085d4 <wcrtomb@plt+0x39b4>
  408594:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  408598:	ldr	x21, [x0, #624]
  40859c:	mov	w1, #0x3a                  	// #58
  4085a0:	ldr	x0, [x21]
  4085a4:	bl	404870 <strchr@plt>
  4085a8:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  4085ac:	str	x0, [x1, #960]
  4085b0:	cbz	x0, 4085d4 <wcrtomb@plt+0x39b4>
  4085b4:	ldr	x21, [x21]
  4085b8:	cmp	x0, x21
  4085bc:	b.ls	4085d4 <wcrtomb@plt+0x39b4>  // b.plast
  4085c0:	sub	x2, x0, x21
  4085c4:	mov	w1, #0x2f                  	// #47
  4085c8:	mov	x0, x21
  4085cc:	bl	404960 <memchr@plt>
  4085d0:	cbz	x0, 40861c <wcrtomb@plt+0x39fc>
  4085d4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4085d8:	ldr	x0, [x0, #624]
  4085dc:	mov	w2, #0x1b6                 	// #438
  4085e0:	mov	w1, #0x42                  	// #66
  4085e4:	ldr	x0, [x0]
  4085e8:	bl	404340 <open@plt>
  4085ec:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  4085f0:	str	w0, [x1, #912]
  4085f4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4085f8:	ldr	w0, [x0, #912]
  4085fc:	tbnz	w0, #31, 408798 <wcrtomb@plt+0x3b78>
  408600:	ldr	x21, [sp, #32]
  408604:	b	407fd0 <wcrtomb@plt+0x33b0>
  408608:	mov	w1, #0x1                   	// #1
  40860c:	mov	x0, x21
  408610:	bl	41b29c <wcrtomb@plt+0x1667c>
  408614:	mov	w20, #0x1                   	// #1
  408618:	b	40857c <wcrtomb@plt+0x395c>
  40861c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  408620:	ldr	x3, [x0, #744]
  408624:	mov	w2, #0x40000000            	// #1073741824
  408628:	mov	w1, #0x42                  	// #66
  40862c:	mov	x0, x21
  408630:	bl	42a790 <wcrtomb@plt+0x25b70>
  408634:	b	4085ec <wcrtomb@plt+0x39cc>
  408638:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40863c:	ldrb	w0, [x0, #952]
  408640:	cbnz	w0, 408684 <wcrtomb@plt+0x3a64>
  408644:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  408648:	ldr	x21, [x0, #624]
  40864c:	mov	w1, #0x3a                  	// #58
  408650:	ldr	x0, [x21]
  408654:	bl	404870 <strchr@plt>
  408658:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  40865c:	str	x0, [x1, #960]
  408660:	cbz	x0, 408684 <wcrtomb@plt+0x3a64>
  408664:	ldr	x21, [x21]
  408668:	cmp	x0, x21
  40866c:	b.ls	408684 <wcrtomb@plt+0x3a64>  // b.plast
  408670:	sub	x2, x0, x21
  408674:	mov	w1, #0x2f                  	// #47
  408678:	mov	x0, x21
  40867c:	bl	404960 <memchr@plt>
  408680:	cbz	x0, 4086a4 <wcrtomb@plt+0x3a84>
  408684:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  408688:	ldr	x0, [x0, #624]
  40868c:	mov	w1, #0x1b6                 	// #438
  408690:	ldr	x0, [x0]
  408694:	bl	404bb0 <creat@plt>
  408698:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  40869c:	str	w0, [x1, #912]
  4086a0:	b	4085f4 <wcrtomb@plt+0x39d4>
  4086a4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4086a8:	ldr	x3, [x0, #744]
  4086ac:	mov	w2, #0x40000000            	// #1073741824
  4086b0:	mov	w1, #0x41                  	// #65
  4086b4:	mov	x0, x21
  4086b8:	bl	42a790 <wcrtomb@plt+0x25b70>
  4086bc:	b	408698 <wcrtomb@plt+0x3a78>
  4086c0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4086c4:	ldrb	w0, [x0, #952]
  4086c8:	cbnz	w0, 408704 <wcrtomb@plt+0x3ae4>
  4086cc:	mov	w1, #0x3a                  	// #58
  4086d0:	mov	x0, x21
  4086d4:	bl	404870 <strchr@plt>
  4086d8:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  4086dc:	str	x0, [x1, #960]
  4086e0:	cbz	x0, 408704 <wcrtomb@plt+0x3ae4>
  4086e4:	ldr	x21, [x20]
  4086e8:	cmp	x0, x21
  4086ec:	b.ls	408704 <wcrtomb@plt+0x3ae4>  // b.plast
  4086f0:	sub	x2, x0, x21
  4086f4:	mov	w1, #0x2f                  	// #47
  4086f8:	mov	x0, x21
  4086fc:	bl	404960 <memchr@plt>
  408700:	cbz	x0, 408734 <wcrtomb@plt+0x3b14>
  408704:	mov	w2, #0x1b6                 	// #438
  408708:	mov	w1, #0x42                  	// #66
  40870c:	ldr	x0, [x20]
  408710:	bl	404340 <open@plt>
  408714:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  408718:	str	w0, [x1, #912]
  40871c:	mov	x0, #0x0                   	// #0
  408720:	bl	4073cc <wcrtomb@plt+0x27ac>
  408724:	cmp	w0, #0x1
  408728:	b.hi	408750 <wcrtomb@plt+0x3b30>  // b.pmore
  40872c:	ldr	x21, [sp, #32]
  408730:	b	407fc0 <wcrtomb@plt+0x33a0>
  408734:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  408738:	ldr	x3, [x0, #744]
  40873c:	mov	w2, #0x40000000            	// #1073741824
  408740:	mov	w1, #0x42                  	// #66
  408744:	mov	x0, x21
  408748:	bl	42a790 <wcrtomb@plt+0x25b70>
  40874c:	b	408714 <wcrtomb@plt+0x3af4>
  408750:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  408754:	ldr	x0, [x0, #944]
  408758:	cbz	x0, 408760 <wcrtomb@plt+0x3b40>
  40875c:	blr	x0
  408760:	mov	w2, #0x5                   	// #5
  408764:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  408768:	add	x1, x1, #0x18
  40876c:	mov	x0, #0x0                   	// #0
  408770:	bl	4049c0 <dcgettext@plt>
  408774:	mov	x2, x0
  408778:	mov	w1, #0x0                   	// #0
  40877c:	mov	w0, #0x0                   	// #0
  408780:	bl	404050 <error@plt>
  408784:	bl	40e5ac <wcrtomb@plt+0x998c>
  408788:	bl	420ea0 <wcrtomb@plt+0x1c280>
  40878c:	and	w0, w0, #0xff
  408790:	cbnz	w0, 407fdc <wcrtomb@plt+0x33bc>
  408794:	str	x21, [sp, #32]
  408798:	bl	404ad0 <__errno_location@plt>
  40879c:	mov	x19, x0
  4087a0:	ldr	w21, [x0]
  4087a4:	cbz	w20, 408804 <wcrtomb@plt+0x3be4>
  4087a8:	bl	41b11c <wcrtomb@plt+0x164fc>
  4087ac:	b	408804 <wcrtomb@plt+0x3be4>
  4087b0:	bl	406d94 <wcrtomb@plt+0x2174>
  4087b4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4087b8:	ldr	x0, [x0, #584]
  4087bc:	cbz	x0, 40800c <wcrtomb@plt+0x33ec>
  4087c0:	bl	4074d8 <wcrtomb@plt+0x28b8>
  4087c4:	b	40800c <wcrtomb@plt+0x33ec>
  4087c8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4087cc:	str	xzr, [x0, #3888]
  4087d0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4087d4:	ldr	x0, [x0, #584]
  4087d8:	cbz	x0, 40800c <wcrtomb@plt+0x33ec>
  4087dc:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  4087e0:	ldrb	w1, [x1, #12]
  4087e4:	cbz	w1, 4087f0 <wcrtomb@plt+0x3bd0>
  4087e8:	bl	406edc <wcrtomb@plt+0x22bc>
  4087ec:	b	40800c <wcrtomb@plt+0x33ec>
  4087f0:	bl	406e14 <wcrtomb@plt+0x21f4>
  4087f4:	b	40800c <wcrtomb@plt+0x33ec>
  4087f8:	bl	404ad0 <__errno_location@plt>
  4087fc:	mov	x19, x0
  408800:	ldr	w21, [x0]
  408804:	str	w21, [x19]
  408808:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40880c:	ldr	x0, [x0, #624]
  408810:	ldr	x0, [x0]
  408814:	bl	429bbc <wcrtomb@plt+0x24f9c>
  408818:	str	x21, [sp, #32]
  40881c:	bl	404ad0 <__errno_location@plt>
  408820:	mov	x19, x0
  408824:	ldr	w21, [x0]
  408828:	b	408804 <wcrtomb@plt+0x3be4>
  40882c:	ldr	x21, [sp, #32]
  408830:	b	407fc0 <wcrtomb@plt+0x33a0>
  408834:	bl	404ad0 <__errno_location@plt>
  408838:	mov	x19, x0
  40883c:	ldr	w21, [x0]
  408840:	b	408804 <wcrtomb@plt+0x3be4>
  408844:	bl	404ad0 <__errno_location@plt>
  408848:	mov	x19, x0
  40884c:	ldr	w21, [x0]
  408850:	b	408804 <wcrtomb@plt+0x3be4>
  408854:	stp	x29, x30, [sp, #-32]!
  408858:	mov	x29, sp
  40885c:	stp	x19, x20, [sp, #16]
  408860:	bl	440154 <argp_parse@@Base+0xca14>
  408864:	mov	x19, x0
  408868:	ldrb	w20, [x0]
  40886c:	cmp	w20, #0x22
  408870:	mov	w0, #0x27                  	// #39
  408874:	ccmp	w20, w0, #0x4, ne  // ne = any
  408878:	b.ne	408894 <wcrtomb@plt+0x3c74>  // b.any
  40887c:	mov	x0, x19
  408880:	bl	403ff0 <strlen@plt>
  408884:	add	x1, x19, x0
  408888:	ldurb	w1, [x1, #-1]
  40888c:	cmp	w1, w20
  408890:	b.eq	4088ac <wcrtomb@plt+0x3c8c>  // b.none
  408894:	mov	x0, x19
  408898:	bl	41a660 <wcrtomb@plt+0x15a40>
  40889c:	mov	x0, x19
  4088a0:	ldp	x19, x20, [sp, #16]
  4088a4:	ldp	x29, x30, [sp], #32
  4088a8:	ret
  4088ac:	sub	x20, x0, #0x2
  4088b0:	mov	x2, x20
  4088b4:	add	x1, x19, #0x1
  4088b8:	mov	x0, x19
  4088bc:	bl	403f80 <memmove@plt>
  4088c0:	strb	wzr, [x19, x20]
  4088c4:	b	408894 <wcrtomb@plt+0x3c74>
  4088c8:	stp	x29, x30, [sp, #-32]!
  4088cc:	mov	x29, sp
  4088d0:	str	x19, [sp, #16]
  4088d4:	mov	w19, w0
  4088d8:	mov	x0, #0x18                  	// #24
  4088dc:	bl	4400bc <argp_parse@@Base+0xc97c>
  4088e0:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4088e4:	ldr	x1, [x1, #1704]
  4088e8:	cbz	x1, 408908 <wcrtomb@plt+0x3ce8>
  4088ec:	str	x0, [x1]
  4088f0:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4088f4:	str	x0, [x1, #1704]
  4088f8:	str	w19, [x0, #8]
  4088fc:	ldr	x19, [sp, #16]
  408900:	ldp	x29, x30, [sp], #32
  408904:	ret
  408908:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40890c:	str	x0, [x1, #1712]
  408910:	b	4088f0 <wcrtomb@plt+0x3cd0>
  408914:	stp	x29, x30, [sp, #-32]!
  408918:	mov	x29, sp
  40891c:	bl	404230 <fileno@plt>
  408920:	add	x2, sp, #0x18
  408924:	mov	x1, #0x5413                	// #21523
  408928:	bl	404bd0 <ioctl@plt>
  40892c:	cbnz	w0, 408938 <wcrtomb@plt+0x3d18>
  408930:	ldrh	w0, [sp, #26]
  408934:	cbnz	w0, 408974 <wcrtomb@plt+0x3d54>
  408938:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  40893c:	add	x0, x0, #0x250
  408940:	bl	404af0 <getenv@plt>
  408944:	mov	x3, x0
  408948:	mov	x0, #0x50                  	// #80
  40894c:	cbz	x3, 40896c <wcrtomb@plt+0x3d4c>
  408950:	mov	w2, #0xa                   	// #10
  408954:	mov	x1, #0x0                   	// #0
  408958:	mov	x0, x3
  40895c:	bl	404780 <strtol@plt>
  408960:	cmp	x0, #0x0
  408964:	mov	x1, #0x50                  	// #80
  408968:	csel	x0, x0, x1, gt
  40896c:	ldp	x29, x30, [sp], #32
  408970:	ret
  408974:	and	x0, x0, #0xffff
  408978:	b	40896c <wcrtomb@plt+0x3d4c>
  40897c:	stp	x29, x30, [sp, #-400]!
  408980:	mov	x29, sp
  408984:	stp	x19, x20, [sp, #16]
  408988:	stp	x21, x22, [sp, #32]
  40898c:	stp	x23, x24, [sp, #48]
  408990:	stp	x25, x26, [sp, #64]
  408994:	stp	x27, x28, [sp, #80]
  408998:	mov	x20, x0
  40899c:	mov	x21, x1
  4089a0:	mov	x19, x2
  4089a4:	mov	w23, w4
  4089a8:	ands	w27, w3, #0xff
  4089ac:	b.eq	4089f4 <wcrtomb@plt+0x3dd4>  // b.none
  4089b0:	mov	w2, #0x5                   	// #5
  4089b4:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  4089b8:	add	x1, x1, #0x258
  4089bc:	mov	x0, #0x0                   	// #0
  4089c0:	bl	4049c0 <dcgettext@plt>
  4089c4:	str	x0, [sp, #104]
  4089c8:	add	x1, sp, #0x178
  4089cc:	mov	w0, w23
  4089d0:	bl	438ce8 <argp_parse@@Base+0x55a8>
  4089d4:	mov	x25, x0
  4089d8:	cbz	x19, 408a3c <wcrtomb@plt+0x3e1c>
  4089dc:	ldrb	w1, [x19]
  4089e0:	cbz	w1, 408ebc <wcrtomb@plt+0x429c>
  4089e4:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4089e8:	add	x24, x24, #0x6a8
  4089ec:	mov	w26, #0x20                  	// #32
  4089f0:	b	408ab0 <wcrtomb@plt+0x3e90>
  4089f4:	mov	w2, #0x5                   	// #5
  4089f8:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  4089fc:	add	x1, x1, #0x260
  408a00:	mov	x0, #0x0                   	// #0
  408a04:	bl	4049c0 <dcgettext@plt>
  408a08:	str	x0, [sp, #104]
  408a0c:	add	x1, sp, #0x178
  408a10:	mov	w0, w23
  408a14:	bl	438ce8 <argp_parse@@Base+0x55a8>
  408a18:	mov	x25, x0
  408a1c:	cbnz	x19, 4089dc <wcrtomb@plt+0x3dbc>
  408a20:	mov	w2, #0x5                   	// #5
  408a24:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  408a28:	add	x1, x1, #0x280
  408a2c:	mov	x0, #0x0                   	// #0
  408a30:	bl	4049c0 <dcgettext@plt>
  408a34:	mov	x19, x0
  408a38:	b	4089dc <wcrtomb@plt+0x3dbc>
  408a3c:	mov	w2, #0x5                   	// #5
  408a40:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  408a44:	add	x1, x1, #0x268
  408a48:	mov	x0, #0x0                   	// #0
  408a4c:	bl	4049c0 <dcgettext@plt>
  408a50:	mov	x19, x0
  408a54:	b	4089dc <wcrtomb@plt+0x3dbc>
  408a58:	add	x22, x19, #0x1
  408a5c:	ldrb	w0, [x19, #1]
  408a60:	cmp	w0, #0x7b
  408a64:	b.eq	408af8 <wcrtomb@plt+0x3ed8>  // b.none
  408a68:	cmp	w0, #0x64
  408a6c:	b.eq	408ca4 <wcrtomb@plt+0x4084>  // b.none
  408a70:	b.hi	408c50 <wcrtomb@plt+0x4030>  // b.pmore
  408a74:	cmp	w0, #0x54
  408a78:	b.eq	408df8 <wcrtomb@plt+0x41d8>  // b.none
  408a7c:	cmp	w0, #0x63
  408a80:	b.ne	408c3c <wcrtomb@plt+0x401c>  // b.any
  408a84:	mov	w4, w23
  408a88:	mov	w3, w27
  408a8c:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x11e64>
  408a90:	add	x2, x2, #0x298
  408a94:	mov	x1, x21
  408a98:	mov	x0, x20
  408a9c:	bl	40897c <wcrtomb@plt+0x3d5c>
  408aa0:	add	x21, x21, w0, sxtw
  408aa4:	add	x19, x22, #0x1
  408aa8:	ldrb	w1, [x22, #1]
  408aac:	cbz	w1, 408ebc <wcrtomb@plt+0x429c>
  408ab0:	cmp	w1, #0x25
  408ab4:	b.eq	408a58 <wcrtomb@plt+0x3e38>  // b.none
  408ab8:	ldr	x0, [x20, #40]
  408abc:	ldr	x2, [x20, #48]
  408ac0:	cmp	x0, x2
  408ac4:	b.cs	408d8c <wcrtomb@plt+0x416c>  // b.hs, b.nlast
  408ac8:	add	x2, x0, #0x1
  408acc:	str	x2, [x20, #40]
  408ad0:	strb	w1, [x0]
  408ad4:	ldrb	w0, [x19]
  408ad8:	add	x21, x21, #0x1
  408adc:	mov	x22, x19
  408ae0:	cmp	w0, #0xd
  408ae4:	b.ne	408aa4 <wcrtomb@plt+0x3e84>  // b.any
  408ae8:	mov	w0, #0x1                   	// #1
  408aec:	str	w0, [x24, #32]
  408af0:	mov	x21, #0x0                   	// #0
  408af4:	b	408aa4 <wcrtomb@plt+0x3e84>
  408af8:	add	x19, x19, #0x2
  408afc:	mov	w1, #0x7d                  	// #125
  408b00:	mov	x0, x19
  408b04:	bl	404870 <strchr@plt>
  408b08:	mov	x28, x0
  408b0c:	cbz	x0, 408bd8 <wcrtomb@plt+0x3fb8>
  408b10:	sub	x22, x0, x22
  408b14:	ldr	x0, [x24, #16]
  408b18:	cmp	x22, x0
  408b1c:	b.hi	408bc0 <wcrtomb@plt+0x3fa0>  // b.pmore
  408b20:	sub	x22, x22, #0x1
  408b24:	mov	x2, x22
  408b28:	mov	x1, x19
  408b2c:	ldr	x0, [x24, #24]
  408b30:	bl	403f70 <memcpy@plt>
  408b34:	ldr	x0, [x24, #24]
  408b38:	strb	wzr, [x0, x22]
  408b3c:	add	x22, x28, #0x1
  408b40:	ldr	x19, [x24, #24]
  408b44:	cbz	x19, 408bd8 <wcrtomb@plt+0x3fb8>
  408b48:	ldrb	w0, [x28, #1]
  408b4c:	cmp	w0, #0x64
  408b50:	b.eq	408ca4 <wcrtomb@plt+0x4084>  // b.none
  408b54:	b.hi	408d98 <wcrtomb@plt+0x4178>  // b.pmore
  408b58:	cmp	w0, #0x54
  408b5c:	b.eq	408e1c <wcrtomb@plt+0x41fc>  // b.none
  408b60:	cmp	w0, #0x63
  408b64:	b.eq	408a84 <wcrtomb@plt+0x3e64>  // b.none
  408b68:	cmp	w0, #0x2a
  408b6c:	b.ne	408db0 <wcrtomb@plt+0x4190>  // b.any
  408b70:	mov	w2, #0xa                   	// #10
  408b74:	mov	x1, #0x0                   	// #0
  408b78:	mov	x0, x19
  408b7c:	bl	404780 <strtol@plt>
  408b80:	mov	x19, x0
  408b84:	cmp	x0, x21
  408b88:	b.ls	408aa4 <wcrtomb@plt+0x3e84>  // b.plast
  408b8c:	mov	w28, #0x20                  	// #32
  408b90:	ldr	x0, [x20, #40]
  408b94:	ldr	x1, [x20, #48]
  408b98:	cmp	x0, x1
  408b9c:	b.cs	408d60 <wcrtomb@plt+0x4140>  // b.hs, b.nlast
  408ba0:	add	x1, x0, #0x1
  408ba4:	str	x1, [x20, #40]
  408ba8:	strb	w26, [x0]
  408bac:	add	x21, x21, #0x1
  408bb0:	cmp	x21, x19
  408bb4:	b.ne	408b90 <wcrtomb@plt+0x3f70>  // b.any
  408bb8:	mov	x21, x19
  408bbc:	b	408aa4 <wcrtomb@plt+0x3e84>
  408bc0:	str	x22, [x24, #16]
  408bc4:	mov	x1, x22
  408bc8:	ldr	x0, [x24, #24]
  408bcc:	bl	43ff70 <argp_parse@@Base+0xc830>
  408bd0:	str	x0, [x24, #24]
  408bd4:	b	408b20 <wcrtomb@plt+0x3f00>
  408bd8:	ldr	x0, [x20, #40]
  408bdc:	ldr	x1, [x20, #48]
  408be0:	cmp	x0, x1
  408be4:	b.cs	408c20 <wcrtomb@plt+0x4000>  // b.hs, b.nlast
  408be8:	add	x1, x0, #0x1
  408bec:	str	x1, [x20, #40]
  408bf0:	mov	w1, #0x25                  	// #37
  408bf4:	strb	w1, [x0]
  408bf8:	ldrb	w1, [x22]
  408bfc:	ldr	x0, [x20, #40]
  408c00:	ldr	x2, [x20, #48]
  408c04:	cmp	x0, x2
  408c08:	b.cs	408c30 <wcrtomb@plt+0x4010>  // b.hs, b.nlast
  408c0c:	add	x2, x0, #0x1
  408c10:	str	x2, [x20, #40]
  408c14:	strb	w1, [x0]
  408c18:	add	x21, x21, #0x2
  408c1c:	b	408aa4 <wcrtomb@plt+0x3e84>
  408c20:	mov	w1, #0x25                  	// #37
  408c24:	mov	x0, x20
  408c28:	bl	404690 <__overflow@plt>
  408c2c:	b	408bf8 <wcrtomb@plt+0x3fd8>
  408c30:	mov	x0, x20
  408c34:	bl	404690 <__overflow@plt>
  408c38:	b	408c18 <wcrtomb@plt+0x3ff8>
  408c3c:	cmp	w0, #0x2a
  408c40:	b.ne	408db0 <wcrtomb@plt+0x4190>  // b.any
  408c44:	mov	x0, x20
  408c48:	bl	408914 <wcrtomb@plt+0x3cf4>
  408c4c:	b	408b80 <wcrtomb@plt+0x3f60>
  408c50:	cmp	w0, #0x74
  408c54:	b.eq	408d1c <wcrtomb@plt+0x40fc>  // b.none
  408c58:	cmp	w0, #0x75
  408c5c:	b.ne	408c7c <wcrtomb@plt+0x405c>  // b.any
  408c60:	mov	x1, x20
  408c64:	mov	x0, x25
  408c68:	bl	4049e0 <fputs_unlocked@plt>
  408c6c:	mov	x0, x25
  408c70:	bl	403ff0 <strlen@plt>
  408c74:	add	x21, x21, x0
  408c78:	b	408aa4 <wcrtomb@plt+0x3e84>
  408c7c:	cmp	w0, #0x73
  408c80:	b.ne	408db0 <wcrtomb@plt+0x4190>  // b.any
  408c84:	mov	x1, x20
  408c88:	ldr	x19, [sp, #104]
  408c8c:	mov	x0, x19
  408c90:	bl	4049e0 <fputs_unlocked@plt>
  408c94:	mov	x0, x19
  408c98:	bl	403ff0 <strlen@plt>
  408c9c:	add	x21, x21, x0
  408ca0:	b	408aa4 <wcrtomb@plt+0x3e84>
  408ca4:	bl	405494 <wcrtomb@plt+0x874>
  408ca8:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x11e64>
  408cac:	add	x2, x2, #0x2c8
  408cb0:	mov	w1, #0x1                   	// #1
  408cb4:	mov	x0, x20
  408cb8:	bl	404710 <__fprintf_chk@plt>
  408cbc:	add	x21, x21, w0, sxtw
  408cc0:	b	408aa4 <wcrtomb@plt+0x3e84>
  408cc4:	ldr	x2, [sp, #144]
  408cc8:	cbz	x2, 408cfc <wcrtomb@plt+0x40dc>
  408ccc:	ldr	x4, [sp, #152]
  408cd0:	mov	x0, #0x0                   	// #0
  408cd4:	add	x3, sp, #0x78
  408cd8:	ldr	x1, [x4, x0, lsl #3]
  408cdc:	str	x1, [x3, x0, lsl #3]
  408ce0:	add	x0, x0, #0x1
  408ce4:	cmp	x2, x0
  408ce8:	b.ne	408cd8 <wcrtomb@plt+0x40b8>  // b.any
  408cec:	mov	w0, w2
  408cf0:	add	x1, sp, #0x78
  408cf4:	cmp	w2, #0x2
  408cf8:	b.gt	408e9c <wcrtomb@plt+0x427c>
  408cfc:	sxtw	x0, w0
  408d00:	add	x1, sp, #0x78
  408d04:	str	xzr, [x1, x0, lsl #3]
  408d08:	add	x0, x0, #0x1
  408d0c:	cmp	w0, #0x2
  408d10:	b.le	408d04 <wcrtomb@plt+0x40e4>
  408d14:	add	x1, sp, #0x78
  408d18:	b	408e9c <wcrtomb@plt+0x427c>
  408d1c:	adrp	x19, 459000 <_obstack_memory_used@@Base+0x17e64>
  408d20:	add	x19, x19, #0xdb0
  408d24:	mov	x1, #0x0                   	// #0
  408d28:	add	x0, sp, #0x90
  408d2c:	bl	404440 <gettimeofday@plt>
  408d30:	add	x0, sp, #0x90
  408d34:	bl	404240 <localtime@plt>
  408d38:	ldr	x1, [sp, #152]
  408d3c:	mov	w4, #0x3e8                 	// #1000
  408d40:	mul	w4, w4, w1
  408d44:	mov	x3, #0x0                   	// #0
  408d48:	mov	x2, x0
  408d4c:	mov	x1, x19
  408d50:	mov	x0, x20
  408d54:	bl	43732c <argp_parse@@Base+0x3bec>
  408d58:	add	x21, x21, x0
  408d5c:	b	408aa4 <wcrtomb@plt+0x3e84>
  408d60:	mov	w1, w28
  408d64:	mov	x0, x20
  408d68:	bl	404690 <__overflow@plt>
  408d6c:	b	408bac <wcrtomb@plt+0x3f8c>
  408d70:	mov	w1, #0x25                  	// #37
  408d74:	mov	x0, x20
  408d78:	bl	404690 <__overflow@plt>
  408d7c:	b	408dd0 <wcrtomb@plt+0x41b0>
  408d80:	mov	x0, x20
  408d84:	bl	404690 <__overflow@plt>
  408d88:	b	408df0 <wcrtomb@plt+0x41d0>
  408d8c:	mov	x0, x20
  408d90:	bl	404690 <__overflow@plt>
  408d94:	b	408ad4 <wcrtomb@plt+0x3eb4>
  408d98:	cmp	w0, #0x74
  408d9c:	b.eq	408d24 <wcrtomb@plt+0x4104>  // b.none
  408da0:	cmp	w0, #0x75
  408da4:	b.eq	408c60 <wcrtomb@plt+0x4040>  // b.none
  408da8:	cmp	w0, #0x73
  408dac:	b.eq	408c84 <wcrtomb@plt+0x4064>  // b.none
  408db0:	ldr	x0, [x20, #40]
  408db4:	ldr	x1, [x20, #48]
  408db8:	cmp	x0, x1
  408dbc:	b.cs	408d70 <wcrtomb@plt+0x4150>  // b.hs, b.nlast
  408dc0:	add	x1, x0, #0x1
  408dc4:	str	x1, [x20, #40]
  408dc8:	mov	w1, #0x25                  	// #37
  408dcc:	strb	w1, [x0]
  408dd0:	ldrb	w1, [x22]
  408dd4:	ldr	x0, [x20, #40]
  408dd8:	ldr	x2, [x20, #48]
  408ddc:	cmp	x0, x2
  408de0:	b.cs	408d80 <wcrtomb@plt+0x4160>  // b.hs, b.nlast
  408de4:	add	x2, x0, #0x1
  408de8:	str	x2, [x20, #40]
  408dec:	strb	w1, [x0]
  408df0:	add	x21, x21, #0x2
  408df4:	b	408aa4 <wcrtomb@plt+0x3e84>
  408df8:	bl	405494 <wcrtomb@plt+0x874>
  408dfc:	mov	w3, #0x0                   	// #0
  408e00:	mov	w2, #0x2c                  	// #44
  408e04:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x3be64>
  408e08:	add	x1, x1, #0x7a0
  408e0c:	mov	x0, x20
  408e10:	bl	405594 <wcrtomb@plt+0x974>
  408e14:	add	x21, x21, w0, sxtw
  408e18:	b	408aa4 <wcrtomb@plt+0x3e84>
  408e1c:	bl	405494 <wcrtomb@plt+0x874>
  408e20:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  408e24:	add	x0, x0, #0x2f0
  408e28:	str	x0, [sp, #200]
  408e2c:	mov	w2, #0x4644                	// #17988
  408e30:	add	x1, sp, #0x90
  408e34:	mov	x0, x19
  408e38:	bl	42e010 <wcrtomb@plt+0x293f0>
  408e3c:	cbz	w0, 408cc4 <wcrtomb@plt+0x40a4>
  408e40:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  408e44:	ldr	x0, [x0, #944]
  408e48:	cbz	x0, 408e50 <wcrtomb@plt+0x4230>
  408e4c:	blr	x0
  408e50:	mov	w2, #0x5                   	// #5
  408e54:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  408e58:	add	x1, x1, #0x2d0
  408e5c:	mov	x0, #0x0                   	// #0
  408e60:	bl	4049c0 <dcgettext@plt>
  408e64:	mov	x28, x0
  408e68:	add	x0, sp, #0x90
  408e6c:	bl	42c118 <wcrtomb@plt+0x274f8>
  408e70:	mov	x4, x0
  408e74:	mov	x3, x19
  408e78:	mov	x2, x28
  408e7c:	mov	w1, #0x0                   	// #0
  408e80:	mov	w0, #0x0                   	// #0
  408e84:	bl	404050 <error@plt>
  408e88:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  408e8c:	mov	w1, #0x2                   	// #2
  408e90:	str	w1, [x0, #3392]
  408e94:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x3be64>
  408e98:	add	x1, x1, #0x7a0
  408e9c:	mov	w3, #0x0                   	// #0
  408ea0:	mov	w2, #0x2c                  	// #44
  408ea4:	mov	x0, x20
  408ea8:	bl	405594 <wcrtomb@plt+0x974>
  408eac:	add	x21, x21, w0, sxtw
  408eb0:	add	x0, sp, #0x90
  408eb4:	bl	42c074 <wcrtomb@plt+0x27454>
  408eb8:	b	408aa4 <wcrtomb@plt+0x3e84>
  408ebc:	mov	x0, x20
  408ec0:	bl	4048d0 <fflush_unlocked@plt>
  408ec4:	mov	w0, w21
  408ec8:	ldp	x19, x20, [sp, #16]
  408ecc:	ldp	x21, x22, [sp, #32]
  408ed0:	ldp	x23, x24, [sp, #48]
  408ed4:	ldp	x25, x26, [sp, #64]
  408ed8:	ldp	x27, x28, [sp, #80]
  408edc:	ldp	x29, x30, [sp], #400
  408ee0:	ret
  408ee4:	stp	x29, x30, [sp, #-48]!
  408ee8:	mov	x29, sp
  408eec:	stp	x19, x20, [sp, #16]
  408ef0:	mov	x19, x0
  408ef4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  408ef8:	ldr	w0, [x0, #1740]
  408efc:	cbz	w0, 408f3c <wcrtomb@plt+0x431c>
  408f00:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x15e64>
  408f04:	add	x1, x1, #0x340
  408f08:	mov	x0, x19
  408f0c:	bl	404720 <strcmp@plt>
  408f10:	cbz	w0, 408f28 <wcrtomb@plt+0x4308>
  408f14:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  408f18:	add	x1, x1, #0x2f8
  408f1c:	mov	x0, x19
  408f20:	bl	404720 <strcmp@plt>
  408f24:	cbnz	w0, 408f58 <wcrtomb@plt+0x4338>
  408f28:	mov	w0, #0x0                   	// #0
  408f2c:	bl	4088c8 <wcrtomb@plt+0x3ca8>
  408f30:	ldp	x19, x20, [sp, #16]
  408f34:	ldp	x29, x30, [sp], #48
  408f38:	ret
  408f3c:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x3ee64>
  408f40:	add	x20, x20, #0x6a8
  408f44:	add	x0, x20, #0x28
  408f48:	bl	4043a0 <sigemptyset@plt>
  408f4c:	mov	w0, #0x1                   	// #1
  408f50:	str	w0, [x20, #36]
  408f54:	b	408f00 <wcrtomb@plt+0x42e0>
  408f58:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  408f5c:	add	x1, x1, #0x300
  408f60:	mov	x0, x19
  408f64:	bl	404720 <strcmp@plt>
  408f68:	cbz	w0, 40903c <wcrtomb@plt+0x441c>
  408f6c:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  408f70:	add	x1, x1, #0x308
  408f74:	mov	x0, x19
  408f78:	bl	404720 <strcmp@plt>
  408f7c:	cbz	w0, 409048 <wcrtomb@plt+0x4428>
  408f80:	mov	x2, #0x5                   	// #5
  408f84:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  408f88:	add	x1, x1, #0x310
  408f8c:	mov	x0, x19
  408f90:	bl	4043c0 <strncmp@plt>
  408f94:	cbz	w0, 409054 <wcrtomb@plt+0x4434>
  408f98:	mov	x2, #0x5                   	// #5
  408f9c:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  408fa0:	add	x1, x1, #0x318
  408fa4:	mov	x0, x19
  408fa8:	bl	4043c0 <strncmp@plt>
  408fac:	cbz	w0, 409070 <wcrtomb@plt+0x4450>
  408fb0:	mov	x2, #0x7                   	// #7
  408fb4:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  408fb8:	add	x1, x1, #0x320
  408fbc:	mov	x0, x19
  408fc0:	bl	4043c0 <strncmp@plt>
  408fc4:	cbz	w0, 40908c <wcrtomb@plt+0x446c>
  408fc8:	mov	x2, #0x6                   	// #6
  408fcc:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  408fd0:	add	x1, x1, #0x328
  408fd4:	mov	x0, x19
  408fd8:	bl	4043c0 <strncmp@plt>
  408fdc:	cbz	w0, 4090a8 <wcrtomb@plt+0x4488>
  408fe0:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  408fe4:	add	x1, x1, #0x348
  408fe8:	mov	x0, x19
  408fec:	bl	404720 <strcmp@plt>
  408ff0:	cbz	w0, 409114 <wcrtomb@plt+0x44f4>
  408ff4:	mov	x2, #0x5                   	// #5
  408ff8:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  408ffc:	add	x1, x1, #0x350
  409000:	mov	x0, x19
  409004:	bl	4043c0 <strncmp@plt>
  409008:	cbnz	w0, 409120 <wcrtomb@plt+0x4500>
  40900c:	mov	w0, #0x7                   	// #7
  409010:	bl	4088c8 <wcrtomb@plt+0x3ca8>
  409014:	mov	x20, x0
  409018:	add	x0, x19, #0x5
  40901c:	bl	422a4c <wcrtomb@plt+0x1de2c>
  409020:	mov	w1, w0
  409024:	str	w0, [x20, #16]
  409028:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40902c:	add	x0, x0, #0x6a8
  409030:	add	x0, x0, #0x28
  409034:	bl	404a50 <sigaddset@plt>
  409038:	b	408f30 <wcrtomb@plt+0x4310>
  40903c:	mov	w0, #0x1                   	// #1
  409040:	bl	4088c8 <wcrtomb@plt+0x3ca8>
  409044:	b	408f30 <wcrtomb@plt+0x4310>
  409048:	mov	w0, #0x2                   	// #2
  40904c:	bl	4088c8 <wcrtomb@plt+0x3ca8>
  409050:	b	408f30 <wcrtomb@plt+0x4310>
  409054:	mov	w0, #0x2                   	// #2
  409058:	bl	4088c8 <wcrtomb@plt+0x3ca8>
  40905c:	mov	x20, x0
  409060:	add	x0, x19, #0x5
  409064:	bl	408854 <wcrtomb@plt+0x3c34>
  409068:	str	x0, [x20, #16]
  40906c:	b	408f30 <wcrtomb@plt+0x4310>
  409070:	mov	w0, #0x5                   	// #5
  409074:	bl	4088c8 <wcrtomb@plt+0x3ca8>
  409078:	mov	x20, x0
  40907c:	add	x0, x19, #0x5
  409080:	bl	408854 <wcrtomb@plt+0x3c34>
  409084:	str	x0, [x20, #16]
  409088:	b	408f30 <wcrtomb@plt+0x4310>
  40908c:	mov	w0, #0x3                   	// #3
  409090:	bl	4088c8 <wcrtomb@plt+0x3ca8>
  409094:	mov	x20, x0
  409098:	add	x0, x19, #0x7
  40909c:	bl	408854 <wcrtomb@plt+0x3c34>
  4090a0:	str	x0, [x20, #16]
  4090a4:	b	408f30 <wcrtomb@plt+0x4310>
  4090a8:	mov	w2, #0xa                   	// #10
  4090ac:	add	x1, sp, #0x28
  4090b0:	add	x0, x19, #0x6
  4090b4:	bl	403fe0 <strtoul@plt>
  4090b8:	mov	x20, x0
  4090bc:	ldr	x0, [sp, #40]
  4090c0:	ldrb	w0, [x0]
  4090c4:	cbnz	w0, 4090d8 <wcrtomb@plt+0x44b8>
  4090c8:	mov	w0, #0x4                   	// #4
  4090cc:	bl	4088c8 <wcrtomb@plt+0x3ca8>
  4090d0:	str	x20, [x0, #16]
  4090d4:	b	408f30 <wcrtomb@plt+0x4310>
  4090d8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4090dc:	ldr	x0, [x0, #944]
  4090e0:	cbz	x0, 4090e8 <wcrtomb@plt+0x44c8>
  4090e4:	blr	x0
  4090e8:	mov	w2, #0x5                   	// #5
  4090ec:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  4090f0:	add	x1, x1, #0x330
  4090f4:	mov	x0, #0x0                   	// #0
  4090f8:	bl	4049c0 <dcgettext@plt>
  4090fc:	mov	x3, x19
  409100:	mov	x2, x0
  409104:	mov	w1, #0x0                   	// #0
  409108:	mov	w0, #0x0                   	// #0
  40910c:	bl	404050 <error@plt>
  409110:	bl	40e5ac <wcrtomb@plt+0x998c>
  409114:	mov	w0, #0x6                   	// #6
  409118:	bl	4088c8 <wcrtomb@plt+0x3ca8>
  40911c:	b	408f30 <wcrtomb@plt+0x4310>
  409120:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  409124:	ldr	x0, [x0, #944]
  409128:	cbz	x0, 409130 <wcrtomb@plt+0x4510>
  40912c:	blr	x0
  409130:	mov	w2, #0x5                   	// #5
  409134:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  409138:	add	x1, x1, #0x358
  40913c:	mov	x0, #0x0                   	// #0
  409140:	bl	4049c0 <dcgettext@plt>
  409144:	mov	x3, x19
  409148:	mov	x2, x0
  40914c:	mov	w1, #0x0                   	// #0
  409150:	mov	w0, #0x0                   	// #0
  409154:	bl	404050 <error@plt>
  409158:	bl	40e5ac <wcrtomb@plt+0x998c>
  40915c:	stp	x29, x30, [sp, #-16]!
  409160:	mov	x29, sp
  409164:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  409168:	ldr	w0, [x0, #1740]
  40916c:	cbnz	w0, 409194 <wcrtomb@plt+0x4574>
  409170:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  409174:	ldr	w0, [x0, #792]
  409178:	cbz	w0, 4091a4 <wcrtomb@plt+0x4584>
  40917c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  409180:	ldr	x0, [x0, #1712]
  409184:	cbnz	x0, 4091a4 <wcrtomb@plt+0x4584>
  409188:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  40918c:	add	x0, x0, #0x308
  409190:	bl	408ee4 <wcrtomb@plt+0x42c4>
  409194:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  409198:	ldr	w0, [x0, #1740]
  40919c:	cmp	w0, #0x1
  4091a0:	b.eq	4091ac <wcrtomb@plt+0x458c>  // b.none
  4091a4:	ldp	x29, x30, [sp], #16
  4091a8:	ret
  4091ac:	mov	x2, #0x0                   	// #0
  4091b0:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4091b4:	add	x1, x1, #0x6a8
  4091b8:	add	x1, x1, #0x28
  4091bc:	mov	w0, #0x0                   	// #0
  4091c0:	bl	4040b0 <sigprocmask@plt>
  4091c4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4091c8:	ldr	w0, [x0, #792]
  4091cc:	cbnz	w0, 4091dc <wcrtomb@plt+0x45bc>
  4091d0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4091d4:	mov	w1, #0xa                   	// #10
  4091d8:	str	w1, [x0, #792]
  4091dc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4091e0:	mov	w1, #0x2                   	// #2
  4091e4:	str	w1, [x0, #1740]
  4091e8:	b	4091a4 <wcrtomb@plt+0x4584>
  4091ec:	stp	x29, x30, [sp, #-64]!
  4091f0:	mov	x29, sp
  4091f4:	stp	x19, x20, [sp, #16]
  4091f8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4091fc:	ldr	x19, [x0, #1712]
  409200:	cbz	x19, 4092cc <wcrtomb@plt+0x46ac>
  409204:	stp	x21, x22, [sp, #32]
  409208:	str	x23, [sp, #48]
  40920c:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x3ee64>
  409210:	add	x20, x20, #0x6a8
  409214:	mov	w22, #0x20                  	// #32
  409218:	mov	w23, #0x20                  	// #32
  40921c:	b	409260 <wcrtomb@plt+0x4640>
  409220:	mov	w1, w23
  409224:	bl	404690 <__overflow@plt>
  409228:	b	4092a8 <wcrtomb@plt+0x4688>
  40922c:	ldr	x0, [x20, #168]
  409230:	ldr	x1, [x0, #40]
  409234:	ldr	x2, [x0, #48]
  409238:	cmp	x1, x2
  40923c:	b.cs	4092b8 <wcrtomb@plt+0x4698>  // b.hs, b.nlast
  409240:	add	x2, x1, #0x1
  409244:	str	x2, [x0, #40]
  409248:	mov	w0, #0xd                   	// #13
  40924c:	strb	w0, [x1]
  409250:	ldr	x0, [x20, #168]
  409254:	bl	4048d0 <fflush_unlocked@plt>
  409258:	ldr	x19, [x19]
  40925c:	cbz	x19, 4092c4 <wcrtomb@plt+0x46a4>
  409260:	ldr	w0, [x19, #8]
  409264:	cmp	w0, #0x3
  409268:	b.ne	409258 <wcrtomb@plt+0x4638>  // b.any
  40926c:	ldr	x0, [x20, #168]
  409270:	cbz	x0, 409258 <wcrtomb@plt+0x4638>
  409274:	ldr	w1, [x20, #32]
  409278:	cbz	w1, 409258 <wcrtomb@plt+0x4638>
  40927c:	bl	408914 <wcrtomb@plt+0x3cf4>
  409280:	sub	x21, x0, #0x1
  409284:	cbz	x0, 40922c <wcrtomb@plt+0x460c>
  409288:	ldr	x0, [x20, #168]
  40928c:	ldr	x1, [x0, #40]
  409290:	ldr	x2, [x0, #48]
  409294:	cmp	x1, x2
  409298:	b.cs	409220 <wcrtomb@plt+0x4600>  // b.hs, b.nlast
  40929c:	add	x2, x1, #0x1
  4092a0:	str	x2, [x0, #40]
  4092a4:	strb	w22, [x1]
  4092a8:	sub	x21, x21, #0x1
  4092ac:	cmn	x21, #0x1
  4092b0:	b.ne	409288 <wcrtomb@plt+0x4668>  // b.any
  4092b4:	b	40922c <wcrtomb@plt+0x460c>
  4092b8:	mov	w1, #0xd                   	// #13
  4092bc:	bl	404690 <__overflow@plt>
  4092c0:	b	409250 <wcrtomb@plt+0x4630>
  4092c4:	ldp	x21, x22, [sp, #32]
  4092c8:	ldr	x23, [sp, #48]
  4092cc:	ldp	x19, x20, [sp, #16]
  4092d0:	ldp	x29, x30, [sp], #64
  4092d4:	ret
  4092d8:	stp	x29, x30, [sp, #-80]!
  4092dc:	mov	x29, sp
  4092e0:	stp	x19, x20, [sp, #16]
  4092e4:	and	w20, w0, #0xff
  4092e8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4092ec:	ldr	w0, [x0, #792]
  4092f0:	cbz	w0, 409314 <wcrtomb@plt+0x46f4>
  4092f4:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4092f8:	add	x2, x2, #0x6a8
  4092fc:	ldr	w1, [x2, #176]
  409300:	add	w1, w1, #0x1
  409304:	str	w1, [x2, #176]
  409308:	udiv	w2, w1, w0
  40930c:	msub	w0, w2, w0, w1
  409310:	cbz	w0, 409320 <wcrtomb@plt+0x4700>
  409314:	ldp	x19, x20, [sp, #16]
  409318:	ldp	x29, x30, [sp], #80
  40931c:	ret
  409320:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  409324:	ldr	x19, [x0, #1712]
  409328:	cbz	x19, 409314 <wcrtomb@plt+0x46f4>
  40932c:	stp	x21, x22, [sp, #32]
  409330:	stp	x23, x24, [sp, #48]
  409334:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x3ee64>
  409338:	add	x21, x21, #0x6a8
  40933c:	add	x23, x21, #0x28
  409340:	adrp	x22, 481000 <argp_program_version_hook@@Base+0x298>
  409344:	b	409404 <wcrtomb@plt+0x47e4>
  409348:	cbz	w0, 4093c8 <wcrtomb@plt+0x47a8>
  40934c:	cmp	w0, #0x1
  409350:	b.ne	4093fc <wcrtomb@plt+0x47dc>  // b.any
  409354:	ldr	x0, [x21, #168]
  409358:	cbz	x0, 40944c <wcrtomb@plt+0x482c>
  40935c:	ldr	x1, [x0, #40]
  409360:	ldr	x2, [x0, #48]
  409364:	cmp	x1, x2
  409368:	b.cs	40946c <wcrtomb@plt+0x484c>  // b.hs, b.nlast
  40936c:	add	x2, x1, #0x1
  409370:	str	x2, [x0, #40]
  409374:	mov	w0, #0x7                   	// #7
  409378:	strb	w0, [x1]
  40937c:	ldr	x0, [x21, #168]
  409380:	bl	4048d0 <fflush_unlocked@plt>
  409384:	b	4093fc <wcrtomb@plt+0x47dc>
  409388:	cmp	w0, #0x6
  40938c:	b.eq	409510 <wcrtomb@plt+0x48f0>  // b.none
  409390:	cmp	w0, #0x7
  409394:	b.ne	4093a8 <wcrtomb@plt+0x4788>  // b.any
  409398:	add	x1, sp, #0x4c
  40939c:	mov	x0, x23
  4093a0:	bl	4047a0 <sigwait@plt>
  4093a4:	b	4093fc <wcrtomb@plt+0x47dc>
  4093a8:	cmp	w0, #0x5
  4093ac:	b.ne	4093fc <wcrtomb@plt+0x47dc>  // b.any
  4093b0:	ldr	x0, [x22, #672]
  4093b4:	ldr	w2, [x21, #176]
  4093b8:	ldr	x1, [x0]
  4093bc:	ldr	x0, [x19, #16]
  4093c0:	bl	422034 <wcrtomb@plt+0x1d414>
  4093c4:	b	4093fc <wcrtomb@plt+0x47dc>
  4093c8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4093cc:	ldr	x0, [x0, #3864]
  4093d0:	ldr	x1, [x0, #40]
  4093d4:	ldr	x2, [x0, #48]
  4093d8:	cmp	x1, x2
  4093dc:	b.cs	409440 <wcrtomb@plt+0x4820>  // b.hs, b.nlast
  4093e0:	add	x2, x1, #0x1
  4093e4:	str	x2, [x0, #40]
  4093e8:	mov	w0, #0x2e                  	// #46
  4093ec:	strb	w0, [x1]
  4093f0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4093f4:	ldr	x0, [x0, #3864]
  4093f8:	bl	4048d0 <fflush_unlocked@plt>
  4093fc:	ldr	x19, [x19]
  409400:	cbz	x19, 40951c <wcrtomb@plt+0x48fc>
  409404:	ldr	w0, [x19, #8]
  409408:	cmp	w0, #0x4
  40940c:	b.eq	409504 <wcrtomb@plt+0x48e4>  // b.none
  409410:	b.hi	409388 <wcrtomb@plt+0x4768>  // b.pmore
  409414:	cmp	w0, #0x2
  409418:	b.eq	409478 <wcrtomb@plt+0x4858>  // b.none
  40941c:	b.ls	409348 <wcrtomb@plt+0x4728>  // b.plast
  409420:	ldr	x0, [x21, #168]
  409424:	cbz	x0, 4094e4 <wcrtomb@plt+0x48c4>
  409428:	ldr	w4, [x21, #176]
  40942c:	mov	w3, w20
  409430:	ldr	x2, [x19, #16]
  409434:	mov	x1, #0x0                   	// #0
  409438:	bl	40897c <wcrtomb@plt+0x3d5c>
  40943c:	b	4093fc <wcrtomb@plt+0x47dc>
  409440:	mov	w1, #0x2e                  	// #46
  409444:	bl	404690 <__overflow@plt>
  409448:	b	4093f0 <wcrtomb@plt+0x47d0>
  40944c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  409450:	add	x1, x1, #0xab8
  409454:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x10e64>
  409458:	add	x0, x0, #0xac8
  40945c:	bl	4042e0 <fopen@plt>
  409460:	str	x0, [x21, #168]
  409464:	cbz	x0, 4093fc <wcrtomb@plt+0x47dc>
  409468:	b	40935c <wcrtomb@plt+0x473c>
  40946c:	mov	w1, #0x7                   	// #7
  409470:	bl	404690 <__overflow@plt>
  409474:	b	40937c <wcrtomb@plt+0x475c>
  409478:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40947c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  409480:	ldr	x3, [x0, #3480]
  409484:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x10e64>
  409488:	add	x2, x2, #0x910
  40948c:	mov	w1, #0x1                   	// #1
  409490:	ldr	x0, [x24, #1096]
  409494:	bl	404710 <__fprintf_chk@plt>
  409498:	ldr	w4, [x21, #176]
  40949c:	mov	w3, w20
  4094a0:	ldr	x2, [x19, #16]
  4094a4:	sxtw	x1, w0
  4094a8:	ldr	x0, [x24, #1096]
  4094ac:	bl	40897c <wcrtomb@plt+0x3d5c>
  4094b0:	ldr	x0, [x24, #1096]
  4094b4:	ldr	x1, [x0, #40]
  4094b8:	ldr	x2, [x0, #48]
  4094bc:	cmp	x1, x2
  4094c0:	b.cs	4094d8 <wcrtomb@plt+0x48b8>  // b.hs, b.nlast
  4094c4:	add	x2, x1, #0x1
  4094c8:	str	x2, [x0, #40]
  4094cc:	mov	w0, #0xa                   	// #10
  4094d0:	strb	w0, [x1]
  4094d4:	b	4093fc <wcrtomb@plt+0x47dc>
  4094d8:	mov	w1, #0xa                   	// #10
  4094dc:	bl	404690 <__overflow@plt>
  4094e0:	b	4093fc <wcrtomb@plt+0x47dc>
  4094e4:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  4094e8:	add	x1, x1, #0xab8
  4094ec:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x10e64>
  4094f0:	add	x0, x0, #0xac8
  4094f4:	bl	4042e0 <fopen@plt>
  4094f8:	str	x0, [x21, #168]
  4094fc:	cbz	x0, 4093fc <wcrtomb@plt+0x47dc>
  409500:	b	409428 <wcrtomb@plt+0x4808>
  409504:	ldr	w0, [x19, #16]
  409508:	bl	404470 <sleep@plt>
  40950c:	b	4093fc <wcrtomb@plt+0x47dc>
  409510:	bl	405494 <wcrtomb@plt+0x874>
  409514:	bl	4057ec <wcrtomb@plt+0xbcc>
  409518:	b	4093fc <wcrtomb@plt+0x47dc>
  40951c:	ldp	x21, x22, [sp, #32]
  409520:	ldp	x23, x24, [sp, #48]
  409524:	b	409314 <wcrtomb@plt+0x46f4>
  409528:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40952c:	ldr	w0, [x0, #792]
  409530:	cbnz	w0, 409538 <wcrtomb@plt+0x4918>
  409534:	ret
  409538:	stp	x29, x30, [sp, #-16]!
  40953c:	mov	x29, sp
  409540:	bl	4091ec <wcrtomb@plt+0x45cc>
  409544:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  409548:	ldr	x0, [x0, #1872]
  40954c:	cbz	x0, 409554 <wcrtomb@plt+0x4934>
  409550:	bl	4042a0 <fclose@plt>
  409554:	ldp	x29, x30, [sp], #16
  409558:	ret
  40955c:	mov	w0, #0x1                   	// #1
  409560:	ret
  409564:	stp	x29, x30, [sp, #-64]!
  409568:	mov	x29, sp
  40956c:	stp	x19, x20, [sp, #16]
  409570:	stp	x21, x22, [sp, #32]
  409574:	mov	x21, x1
  409578:	ldr	x19, [x0, #136]
  40957c:	bl	4053e8 <wcrtomb@plt+0x7c8>
  409580:	cbz	x19, 4095e0 <wcrtomb@plt+0x49c0>
  409584:	str	x23, [sp, #48]
  409588:	adrp	x23, 409000 <wcrtomb@plt+0x43e0>
  40958c:	add	x23, x23, #0x55c
  409590:	bl	406d94 <wcrtomb@plt+0x2174>
  409594:	mov	x20, x0
  409598:	cbz	x0, 4095f4 <wcrtomb@plt+0x49d4>
  40959c:	bl	405974 <wcrtomb@plt+0xd54>
  4095a0:	mov	x22, x19
  4095a4:	cmp	x19, x0
  4095a8:	csel	x19, x19, x0, ls  // ls = plast
  4095ac:	mov	x1, x20
  4095b0:	mov	x0, x19
  4095b4:	blr	x21
  4095b8:	cmp	w0, #0x0
  4095bc:	csel	x21, x23, x21, eq  // eq = none
  4095c0:	sub	x0, x19, #0x1
  4095c4:	add	x0, x20, x0
  4095c8:	bl	405884 <wcrtomb@plt+0xc64>
  4095cc:	sub	x19, x22, x19
  4095d0:	mov	x0, x19
  4095d4:	bl	405430 <wcrtomb@plt+0x810>
  4095d8:	cbnz	x19, 409590 <wcrtomb@plt+0x4970>
  4095dc:	ldr	x23, [sp, #48]
  4095e0:	bl	405408 <wcrtomb@plt+0x7e8>
  4095e4:	ldp	x19, x20, [sp, #16]
  4095e8:	ldp	x21, x22, [sp, #32]
  4095ec:	ldp	x29, x30, [sp], #64
  4095f0:	ret
  4095f4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4095f8:	ldr	x0, [x0, #944]
  4095fc:	cbz	x0, 409604 <wcrtomb@plt+0x49e4>
  409600:	blr	x0
  409604:	mov	w2, #0x5                   	// #5
  409608:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40960c:	add	x1, x1, #0x380
  409610:	mov	x0, #0x0                   	// #0
  409614:	bl	4049c0 <dcgettext@plt>
  409618:	mov	x2, x0
  40961c:	mov	w1, #0x0                   	// #0
  409620:	mov	w0, #0x0                   	// #0
  409624:	bl	404050 <error@plt>
  409628:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40962c:	mov	w1, #0x2                   	// #2
  409630:	str	w1, [x0, #3392]
  409634:	ldr	x23, [sp, #48]
  409638:	b	4095e4 <wcrtomb@plt+0x49c4>
  40963c:	stp	x29, x30, [sp, #-32]!
  409640:	mov	x29, sp
  409644:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  409648:	ldr	x1, [x0, #856]
  40964c:	add	x0, sp, #0x18
  409650:	bl	41ba74 <wcrtomb@plt+0x16e54>
  409654:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  409658:	str	x0, [x1, #1888]
  40965c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  409660:	ldr	x0, [x0, #768]
  409664:	cbz	x0, 40966c <wcrtomb@plt+0x4a4c>
  409668:	bl	4162ec <wcrtomb@plt+0x116cc>
  40966c:	ldp	x29, x30, [sp], #32
  409670:	ret
  409674:	stp	x29, x30, [sp, #-320]!
  409678:	mov	x29, sp
  40967c:	str	x2, [sp, #272]
  409680:	str	x3, [sp, #280]
  409684:	str	x4, [sp, #288]
  409688:	str	x5, [sp, #296]
  40968c:	str	x6, [sp, #304]
  409690:	str	x7, [sp, #312]
  409694:	str	q0, [sp, #144]
  409698:	str	q1, [sp, #160]
  40969c:	str	q2, [sp, #176]
  4096a0:	str	q3, [sp, #192]
  4096a4:	str	q4, [sp, #208]
  4096a8:	str	q5, [sp, #224]
  4096ac:	str	q6, [sp, #240]
  4096b0:	str	q7, [sp, #256]
  4096b4:	cbz	x1, 409754 <wcrtomb@plt+0x4b34>
  4096b8:	stp	x19, x20, [sp, #16]
  4096bc:	str	x21, [sp, #32]
  4096c0:	mov	x19, x1
  4096c4:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4096c8:	ldr	x21, [x20, #3864]
  4096cc:	ldr	x1, [x0, #8]
  4096d0:	mov	w0, #0x1                   	// #1
  4096d4:	bl	41a584 <wcrtomb@plt+0x15964>
  4096d8:	mov	x3, x0
  4096dc:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x10e64>
  4096e0:	add	x2, x2, #0x910
  4096e4:	mov	w1, #0x1                   	// #1
  4096e8:	mov	x0, x21
  4096ec:	bl	404710 <__fprintf_chk@plt>
  4096f0:	add	x0, sp, #0x140
  4096f4:	str	x0, [sp, #80]
  4096f8:	str	x0, [sp, #88]
  4096fc:	add	x0, sp, #0x110
  409700:	str	x0, [sp, #96]
  409704:	mov	w0, #0xffffffd0            	// #-48
  409708:	str	w0, [sp, #104]
  40970c:	mov	w0, #0xffffff80            	// #-128
  409710:	str	w0, [sp, #108]
  409714:	ldp	x2, x3, [sp, #80]
  409718:	stp	x2, x3, [sp, #112]
  40971c:	ldp	x0, x1, [sp, #96]
  409720:	stp	x0, x1, [sp, #128]
  409724:	stp	x2, x3, [sp, #48]
  409728:	stp	x0, x1, [sp, #64]
  40972c:	add	x3, sp, #0x30
  409730:	mov	x2, x19
  409734:	mov	w1, #0x1                   	// #1
  409738:	ldr	x0, [x20, #3864]
  40973c:	bl	4044b0 <__vfprintf_chk@plt>
  409740:	ldr	x1, [x20, #3864]
  409744:	mov	w0, #0xa                   	// #10
  409748:	bl	404170 <fputc@plt>
  40974c:	ldp	x19, x20, [sp, #16]
  409750:	ldr	x21, [sp, #32]
  409754:	mov	w0, #0x1                   	// #1
  409758:	bl	424a80 <wcrtomb@plt+0x1fe60>
  40975c:	ldp	x29, x30, [sp], #320
  409760:	ret
  409764:	stp	x29, x30, [sp, #-48]!
  409768:	mov	x29, sp
  40976c:	stp	x19, x20, [sp, #16]
  409770:	str	x21, [sp, #32]
  409774:	mov	x19, x0
  409778:	mov	x21, x1
  40977c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  409780:	add	x3, x0, #0x760
  409784:	mov	x2, x19
  409788:	ldr	x1, [x0, #1888]
  40978c:	ldr	w0, [x3, #8]
  409790:	bl	41b4e0 <wcrtomb@plt+0x168c0>
  409794:	mov	x20, x0
  409798:	cmp	x19, x0
  40979c:	b.eq	40980c <wcrtomb@plt+0x4bec>  // b.none
  4097a0:	cmn	x0, #0x1
  4097a4:	b.eq	4097e8 <wcrtomb@plt+0x4bc8>  // b.none
  4097a8:	mov	w4, #0x5                   	// #5
  4097ac:	mov	x3, x19
  4097b0:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x11e64>
  4097b4:	add	x2, x2, #0x3a0
  4097b8:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  4097bc:	add	x1, x1, #0x3c8
  4097c0:	mov	x0, #0x0                   	// #0
  4097c4:	bl	4048f0 <dcngettext@plt>
  4097c8:	mov	x3, x19
  4097cc:	mov	x2, x20
  4097d0:	mov	x1, x0
  4097d4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4097d8:	add	x0, x0, #0x20
  4097dc:	bl	409674 <wcrtomb@plt+0x4a54>
  4097e0:	mov	w0, #0x0                   	// #0
  4097e4:	b	40982c <wcrtomb@plt+0x4c0c>
  4097e8:	adrp	x19, 481000 <argp_program_version_hook@@Base+0x298>
  4097ec:	add	x19, x19, #0x20
  4097f0:	ldr	x0, [x19, #8]
  4097f4:	bl	429bf4 <wcrtomb@plt+0x24fd4>
  4097f8:	mov	x1, #0x0                   	// #0
  4097fc:	mov	x0, x19
  409800:	bl	409674 <wcrtomb@plt+0x4a54>
  409804:	mov	w0, #0x0                   	// #0
  409808:	b	40982c <wcrtomb@plt+0x4c0c>
  40980c:	mov	x2, x0
  409810:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  409814:	ldr	x1, [x0, #1888]
  409818:	mov	x0, x21
  40981c:	bl	4046e0 <memcmp@plt>
  409820:	mov	w1, w0
  409824:	mov	w0, #0x1                   	// #1
  409828:	cbnz	w1, 40983c <wcrtomb@plt+0x4c1c>
  40982c:	ldp	x19, x20, [sp, #16]
  409830:	ldr	x21, [sp, #32]
  409834:	ldp	x29, x30, [sp], #48
  409838:	ret
  40983c:	mov	w2, #0x5                   	// #5
  409840:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  409844:	add	x1, x1, #0x3e8
  409848:	mov	x0, #0x0                   	// #0
  40984c:	bl	4049c0 <dcgettext@plt>
  409850:	mov	x1, x0
  409854:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  409858:	add	x0, x0, #0x20
  40985c:	bl	409674 <wcrtomb@plt+0x4a54>
  409860:	mov	w0, #0x0                   	// #0
  409864:	b	40982c <wcrtomb@plt+0x4c0c>
  409868:	stp	x29, x30, [sp, #-32]!
  40986c:	mov	x29, sp
  409870:	str	x19, [sp, #16]
  409874:	mov	x19, x0
  409878:	bl	41b26c <wcrtomb@plt+0x1664c>
  40987c:	cbnz	w0, 409890 <wcrtomb@plt+0x4c70>
  409880:	mov	w0, #0x1                   	// #1
  409884:	ldr	x19, [sp, #16]
  409888:	ldp	x29, x30, [sp], #32
  40988c:	ret
  409890:	bl	404ad0 <__errno_location@plt>
  409894:	ldr	w0, [x0]
  409898:	cmp	w0, #0x2
  40989c:	b.eq	4098c0 <wcrtomb@plt+0x4ca0>  // b.none
  4098a0:	mov	x0, x19
  4098a4:	bl	42a0bc <wcrtomb@plt+0x2549c>
  4098a8:	mov	x1, #0x0                   	// #0
  4098ac:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4098b0:	add	x0, x0, #0x20
  4098b4:	bl	409674 <wcrtomb@plt+0x4a54>
  4098b8:	mov	w0, #0x0                   	// #0
  4098bc:	b	409884 <wcrtomb@plt+0x4c64>
  4098c0:	mov	x0, x19
  4098c4:	bl	42a0dc <wcrtomb@plt+0x254bc>
  4098c8:	b	4098a8 <wcrtomb@plt+0x4c88>
  4098cc:	sub	sp, sp, #0x420
  4098d0:	stp	x29, x30, [sp]
  4098d4:	mov	x29, sp
  4098d8:	stp	x19, x20, [sp, #16]
  4098dc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4098e0:	ldr	x0, [x0, #56]
  4098e4:	bl	403ff0 <strlen@plt>
  4098e8:	mov	x19, x0
  4098ec:	add	x20, sp, #0x20
  4098f0:	cmp	x0, #0x3ff
  4098f4:	b.hi	409980 <wcrtomb@plt+0x4d60>  // b.pmore
  4098f8:	add	x3, x19, #0x1
  4098fc:	mov	x2, x20
  409900:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  409904:	ldr	x1, [x0, #40]
  409908:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  40990c:	ldr	w0, [x0, #2184]
  409910:	bl	404c10 <readlinkat@plt>
  409914:	tbnz	x0, #63, 409990 <wcrtomb@plt+0x4d70>
  409918:	cmp	x19, x0
  40991c:	b.ne	409938 <wcrtomb@plt+0x4d18>  // b.any
  409920:	mov	x2, x19
  409924:	mov	x1, x20
  409928:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40992c:	ldr	x0, [x0, #56]
  409930:	bl	4046e0 <memcmp@plt>
  409934:	cbz	w0, 40995c <wcrtomb@plt+0x4d3c>
  409938:	mov	w2, #0x5                   	// #5
  40993c:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  409940:	add	x1, x1, #0x3f8
  409944:	mov	x0, #0x0                   	// #0
  409948:	bl	4049c0 <dcgettext@plt>
  40994c:	mov	x1, x0
  409950:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  409954:	add	x0, x0, #0x20
  409958:	bl	409674 <wcrtomb@plt+0x4a54>
  40995c:	add	x0, sp, #0x20
  409960:	cmp	x20, x0
  409964:	b.eq	409970 <wcrtomb@plt+0x4d50>  // b.none
  409968:	mov	x0, x20
  40996c:	bl	4047c0 <free@plt>
  409970:	ldp	x19, x20, [sp, #16]
  409974:	ldp	x29, x30, [sp]
  409978:	add	sp, sp, #0x420
  40997c:	ret
  409980:	add	x0, x0, #0x1
  409984:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  409988:	mov	x20, x0
  40998c:	b	4098f8 <wcrtomb@plt+0x4cd8>
  409990:	bl	404ad0 <__errno_location@plt>
  409994:	ldr	w0, [x0]
  409998:	cmp	w0, #0x2
  40999c:	b.eq	4099c0 <wcrtomb@plt+0x4da0>  // b.none
  4099a0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4099a4:	ldr	x0, [x0, #40]
  4099a8:	bl	429e14 <wcrtomb@plt+0x251f4>
  4099ac:	mov	x1, #0x0                   	// #0
  4099b0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4099b4:	add	x0, x0, #0x20
  4099b8:	bl	409674 <wcrtomb@plt+0x4a54>
  4099bc:	b	40995c <wcrtomb@plt+0x4d3c>
  4099c0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4099c4:	ldr	x0, [x0, #40]
  4099c8:	bl	429e34 <wcrtomb@plt+0x25214>
  4099cc:	b	4099ac <wcrtomb@plt+0x4d8c>
  4099d0:	stp	x29, x30, [sp, #-144]!
  4099d4:	mov	x29, sp
  4099d8:	add	x1, sp, #0x10
  4099dc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4099e0:	ldr	x0, [x0, #40]
  4099e4:	bl	409868 <wcrtomb@plt+0x4c48>
  4099e8:	cbz	w0, 409a5c <wcrtomb@plt+0x4e3c>
  4099ec:	ldr	w0, [sp, #32]
  4099f0:	and	w1, w0, #0xf000
  4099f4:	cmp	w1, #0x4, lsl #12
  4099f8:	b.ne	409a38 <wcrtomb@plt+0x4e18>  // b.any
  4099fc:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  409a00:	ldr	w1, [x1, #136]
  409a04:	eor	w0, w0, w1
  409a08:	tst	x0, #0xfff
  409a0c:	b.eq	409a5c <wcrtomb@plt+0x4e3c>  // b.none
  409a10:	mov	w2, #0x5                   	// #5
  409a14:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  409a18:	add	x1, x1, #0x420
  409a1c:	mov	x0, #0x0                   	// #0
  409a20:	bl	4049c0 <dcgettext@plt>
  409a24:	mov	x1, x0
  409a28:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  409a2c:	add	x0, x0, #0x20
  409a30:	bl	409674 <wcrtomb@plt+0x4a54>
  409a34:	b	409a5c <wcrtomb@plt+0x4e3c>
  409a38:	mov	w2, #0x5                   	// #5
  409a3c:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  409a40:	add	x1, x1, #0x408
  409a44:	mov	x0, #0x0                   	// #0
  409a48:	bl	4049c0 <dcgettext@plt>
  409a4c:	mov	x1, x0
  409a50:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  409a54:	add	x0, x0, #0x20
  409a58:	bl	409674 <wcrtomb@plt+0x4a54>
  409a5c:	ldp	x29, x30, [sp], #144
  409a60:	ret
  409a64:	stp	x29, x30, [sp, #-320]!
  409a68:	mov	x29, sp
  409a6c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  409a70:	ldr	x0, [x0, #4008]
  409a74:	bl	405884 <wcrtomb@plt+0xc64>
  409a78:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  409a7c:	ldr	w0, [x0, #580]
  409a80:	cbz	w0, 409aa8 <wcrtomb@plt+0x4e88>
  409a84:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  409a88:	ldrb	w0, [x0, #3960]
  409a8c:	cbnz	w0, 409b54 <wcrtomb@plt+0x4f34>
  409a90:	mov	x2, #0xffffffffffffffff    	// #-1
  409a94:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  409a98:	ldr	x1, [x0, #4008]
  409a9c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  409aa0:	add	x0, x0, #0x20
  409aa4:	bl	4195f0 <wcrtomb@plt+0x149d0>
  409aa8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  409aac:	ldr	x0, [x0, #4008]
  409ab0:	ldrb	w0, [x0, #156]
  409ab4:	cmp	w0, #0x36
  409ab8:	b.eq	409ad4 <wcrtomb@plt+0x4eb4>  // b.none
  409abc:	b.hi	409c48 <wcrtomb@plt+0x5028>  // b.pmore
  409ac0:	cmp	w0, #0x32
  409ac4:	b.eq	409fc0 <wcrtomb@plt+0x53a0>  // b.none
  409ac8:	b.ls	409b8c <wcrtomb@plt+0x4f6c>  // b.plast
  409acc:	cmp	w0, #0x34
  409ad0:	b.hi	409c80 <wcrtomb@plt+0x5060>  // b.pmore
  409ad4:	add	x1, sp, #0xc0
  409ad8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  409adc:	ldr	x0, [x0, #40]
  409ae0:	bl	409868 <wcrtomb@plt+0x4c48>
  409ae4:	cbz	w0, 409c68 <wcrtomb@plt+0x5048>
  409ae8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  409aec:	ldr	x0, [x0, #4008]
  409af0:	ldrb	w0, [x0, #156]
  409af4:	cmp	w0, #0x33
  409af8:	b.eq	409fc8 <wcrtomb@plt+0x53a8>  // b.none
  409afc:	cmp	w0, #0x34
  409b00:	b.eq	40a018 <wcrtomb@plt+0x53f8>  // b.none
  409b04:	ldr	w0, [sp, #208]
  409b08:	and	w0, w0, #0xf000
  409b0c:	cmp	w0, #0x1, lsl #12
  409b10:	b.ne	40a02c <wcrtomb@plt+0x540c>  // b.any
  409b14:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  409b18:	ldr	w0, [x0, #136]
  409b1c:	ldr	w1, [sp, #208]
  409b20:	eor	w0, w0, w1
  409b24:	tst	x0, #0xfff
  409b28:	b.eq	409c68 <wcrtomb@plt+0x5048>  // b.none
  409b2c:	mov	w2, #0x5                   	// #5
  409b30:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  409b34:	add	x1, x1, #0x420
  409b38:	mov	x0, #0x0                   	// #0
  409b3c:	bl	4049c0 <dcgettext@plt>
  409b40:	mov	x1, x0
  409b44:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  409b48:	add	x0, x0, #0x20
  409b4c:	bl	409674 <wcrtomb@plt+0x4a54>
  409b50:	b	409c68 <wcrtomb@plt+0x5048>
  409b54:	stp	x19, x20, [sp, #16]
  409b58:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  409b5c:	ldr	x19, [x0, #3864]
  409b60:	mov	w2, #0x5                   	// #5
  409b64:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  409b68:	add	x1, x1, #0x430
  409b6c:	mov	x0, #0x0                   	// #0
  409b70:	bl	4049c0 <dcgettext@plt>
  409b74:	mov	x2, x0
  409b78:	mov	w1, #0x1                   	// #1
  409b7c:	mov	x0, x19
  409b80:	bl	404710 <__fprintf_chk@plt>
  409b84:	ldp	x19, x20, [sp, #16]
  409b88:	b	409a90 <wcrtomb@plt+0x4e70>
  409b8c:	cmp	w0, #0x31
  409b90:	b.ne	409c18 <wcrtomb@plt+0x4ff8>  // b.any
  409b94:	add	x1, sp, #0x40
  409b98:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  409b9c:	ldr	x0, [x0, #40]
  409ba0:	bl	409868 <wcrtomb@plt+0x4c48>
  409ba4:	cbz	w0, 409c68 <wcrtomb@plt+0x5048>
  409ba8:	add	x1, sp, #0xc0
  409bac:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  409bb0:	ldr	x0, [x0, #56]
  409bb4:	bl	409868 <wcrtomb@plt+0x4c48>
  409bb8:	cbz	w0, 409c68 <wcrtomb@plt+0x5048>
  409bbc:	add	x1, sp, #0xc0
  409bc0:	add	x0, sp, #0x40
  409bc4:	bl	4211e4 <wcrtomb@plt+0x1c5c4>
  409bc8:	and	w0, w0, #0xff
  409bcc:	cbnz	w0, 409c68 <wcrtomb@plt+0x5048>
  409bd0:	stp	x19, x20, [sp, #16]
  409bd4:	mov	w2, #0x5                   	// #5
  409bd8:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  409bdc:	add	x1, x1, #0x4b8
  409be0:	mov	x0, #0x0                   	// #0
  409be4:	bl	4049c0 <dcgettext@plt>
  409be8:	mov	x20, x0
  409bec:	adrp	x19, 481000 <argp_program_version_hook@@Base+0x298>
  409bf0:	add	x19, x19, #0x20
  409bf4:	ldr	x1, [x19, #24]
  409bf8:	mov	w0, #0x0                   	// #0
  409bfc:	bl	41a584 <wcrtomb@plt+0x15964>
  409c00:	mov	x2, x0
  409c04:	mov	x1, x20
  409c08:	mov	x0, x19
  409c0c:	bl	409674 <wcrtomb@plt+0x4a54>
  409c10:	ldp	x19, x20, [sp, #16]
  409c14:	b	409c68 <wcrtomb@plt+0x5048>
  409c18:	cmp	w0, #0x32
  409c1c:	b.eq	409cac <wcrtomb@plt+0x508c>  // b.none
  409c20:	cbz	w0, 409c2c <wcrtomb@plt+0x500c>
  409c24:	cmp	w0, #0x30
  409c28:	b.ne	409c40 <wcrtomb@plt+0x5020>  // b.any
  409c2c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  409c30:	ldrb	w0, [x0, #48]
  409c34:	cbz	w0, 409d18 <wcrtomb@plt+0x50f8>
  409c38:	bl	4099d0 <wcrtomb@plt+0x4db0>
  409c3c:	b	409c68 <wcrtomb@plt+0x5048>
  409c40:	stp	x19, x20, [sp, #16]
  409c44:	b	409cb0 <wcrtomb@plt+0x5090>
  409c48:	cmp	w0, #0x4d
  409c4c:	b.eq	40a224 <wcrtomb@plt+0x5604>  // b.none
  409c50:	cmp	w0, #0x4d
  409c54:	b.ls	409c70 <wcrtomb@plt+0x5050>  // b.plast
  409c58:	cmp	w0, #0x53
  409c5c:	b.eq	409c2c <wcrtomb@plt+0x500c>  // b.none
  409c60:	cmp	w0, #0x56
  409c64:	b.ne	409ca4 <wcrtomb@plt+0x5084>  // b.any
  409c68:	ldp	x29, x30, [sp], #320
  409c6c:	ret
  409c70:	cmp	w0, #0x37
  409c74:	b.eq	409c2c <wcrtomb@plt+0x500c>  // b.none
  409c78:	cmp	w0, #0x44
  409c7c:	b.ne	409c9c <wcrtomb@plt+0x507c>  // b.any
  409c80:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  409c84:	add	x0, x0, #0x20
  409c88:	bl	416eec <wcrtomb@plt+0x122cc>
  409c8c:	and	w0, w0, #0xff
  409c90:	cbnz	w0, 40a054 <wcrtomb@plt+0x5434>
  409c94:	bl	4099d0 <wcrtomb@plt+0x4db0>
  409c98:	b	409c68 <wcrtomb@plt+0x5048>
  409c9c:	stp	x19, x20, [sp, #16]
  409ca0:	b	409cb0 <wcrtomb@plt+0x5090>
  409ca4:	stp	x19, x20, [sp, #16]
  409ca8:	b	409cb0 <wcrtomb@plt+0x5090>
  409cac:	stp	x19, x20, [sp, #16]
  409cb0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  409cb4:	ldr	x0, [x0, #944]
  409cb8:	cbz	x0, 409cc0 <wcrtomb@plt+0x50a0>
  409cbc:	blr	x0
  409cc0:	mov	w2, #0x5                   	// #5
  409cc4:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  409cc8:	add	x1, x1, #0x438
  409ccc:	mov	x0, #0x0                   	// #0
  409cd0:	bl	4049c0 <dcgettext@plt>
  409cd4:	mov	x19, x0
  409cd8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  409cdc:	ldr	x0, [x0, #40]
  409ce0:	bl	43efc4 <argp_parse@@Base+0xb884>
  409ce4:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  409ce8:	ldr	x1, [x1, #4008]
  409cec:	ldrb	w4, [x1, #156]
  409cf0:	mov	x3, x0
  409cf4:	mov	x2, x19
  409cf8:	mov	w1, #0x0                   	// #0
  409cfc:	mov	w0, #0x0                   	// #0
  409d00:	bl	404050 <error@plt>
  409d04:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  409d08:	mov	w1, #0x2                   	// #2
  409d0c:	str	w1, [x0, #3392]
  409d10:	ldp	x19, x20, [sp, #16]
  409d14:	b	409c2c <wcrtomb@plt+0x500c>
  409d18:	stp	x19, x20, [sp, #16]
  409d1c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  409d20:	ldr	x19, [x0, #40]
  409d24:	add	x1, sp, #0xc0
  409d28:	mov	x0, x19
  409d2c:	bl	409868 <wcrtomb@plt+0x4c48>
  409d30:	cbz	w0, 409e30 <wcrtomb@plt+0x5210>
  409d34:	ldr	w0, [sp, #208]
  409d38:	and	w1, w0, #0xf000
  409d3c:	cmp	w1, #0x8, lsl #12
  409d40:	b.ne	409e3c <wcrtomb@plt+0x521c>  // b.any
  409d44:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  409d48:	ldr	w1, [x1, #136]
  409d4c:	eor	w0, w0, w1
  409d50:	tst	x0, #0xfff
  409d54:	b.ne	409e6c <wcrtomb@plt+0x524c>  // b.any
  409d58:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  409d5c:	add	x1, x1, #0x78
  409d60:	add	x0, sp, #0xc0
  409d64:	bl	4211bc <wcrtomb@plt+0x1c59c>
  409d68:	and	w0, w0, #0xff
  409d6c:	cbz	w0, 409e94 <wcrtomb@plt+0x5274>
  409d70:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  409d74:	add	x1, x1, #0x78
  409d78:	add	x0, sp, #0xc0
  409d7c:	bl	4211d0 <wcrtomb@plt+0x1c5b0>
  409d80:	and	w0, w0, #0xff
  409d84:	cbz	w0, 409ebc <wcrtomb@plt+0x529c>
  409d88:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  409d8c:	add	x0, x0, #0x20
  409d90:	ldp	x2, x3, [x0, #232]
  409d94:	ldr	x0, [sp, #280]
  409d98:	ldr	x1, [sp, #288]
  409d9c:	bl	424a44 <wcrtomb@plt+0x1fe24>
  409da0:	cbnz	w0, 409ee4 <wcrtomb@plt+0x52c4>
  409da4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  409da8:	ldr	x0, [x0, #4008]
  409dac:	ldrb	w0, [x0, #156]
  409db0:	cmp	w0, #0x53
  409db4:	b.eq	409dcc <wcrtomb@plt+0x51ac>  // b.none
  409db8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  409dbc:	ldr	x0, [x0, #168]
  409dc0:	ldr	x1, [sp, #240]
  409dc4:	cmp	x1, x0
  409dc8:	b.ne	409f0c <wcrtomb@plt+0x52ec>  // b.any
  409dcc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  409dd0:	ldr	w2, [x0, #644]
  409dd4:	mov	x1, x19
  409dd8:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  409ddc:	ldr	w0, [x0, #2184]
  409de0:	bl	4045c0 <__openat_2@plt>
  409de4:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  409de8:	str	w0, [x1, #1896]
  409dec:	tbnz	w0, #31, 409f3c <wcrtomb@plt+0x531c>
  409df0:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  409df4:	ldrb	w1, [x1, #304]
  409df8:	cbz	w1, 409f60 <wcrtomb@plt+0x5340>
  409dfc:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  409e00:	add	x1, x1, #0x20
  409e04:	bl	420794 <wcrtomb@plt+0x1bb74>
  409e08:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  409e0c:	ldr	w0, [x0, #492]
  409e10:	cmp	w0, #0x1
  409e14:	b.eq	409f78 <wcrtomb@plt+0x5358>  // b.none
  409e18:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  409e1c:	ldr	w0, [x0, #1896]
  409e20:	bl	4045d0 <close@plt>
  409e24:	cbnz	w0, 409fb0 <wcrtomb@plt+0x5390>
  409e28:	ldp	x19, x20, [sp, #16]
  409e2c:	b	409c68 <wcrtomb@plt+0x5048>
  409e30:	bl	419828 <wcrtomb@plt+0x14c08>
  409e34:	ldp	x19, x20, [sp, #16]
  409e38:	b	409c68 <wcrtomb@plt+0x5048>
  409e3c:	mov	w2, #0x5                   	// #5
  409e40:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  409e44:	add	x1, x1, #0x408
  409e48:	mov	x0, #0x0                   	// #0
  409e4c:	bl	4049c0 <dcgettext@plt>
  409e50:	mov	x1, x0
  409e54:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  409e58:	add	x0, x0, #0x20
  409e5c:	bl	409674 <wcrtomb@plt+0x4a54>
  409e60:	bl	419828 <wcrtomb@plt+0x14c08>
  409e64:	ldp	x19, x20, [sp, #16]
  409e68:	b	409c68 <wcrtomb@plt+0x5048>
  409e6c:	mov	w2, #0x5                   	// #5
  409e70:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  409e74:	add	x1, x1, #0x420
  409e78:	mov	x0, #0x0                   	// #0
  409e7c:	bl	4049c0 <dcgettext@plt>
  409e80:	mov	x1, x0
  409e84:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  409e88:	add	x0, x0, #0x20
  409e8c:	bl	409674 <wcrtomb@plt+0x4a54>
  409e90:	b	409d58 <wcrtomb@plt+0x5138>
  409e94:	mov	w2, #0x5                   	// #5
  409e98:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  409e9c:	add	x1, x1, #0x470
  409ea0:	mov	x0, #0x0                   	// #0
  409ea4:	bl	4049c0 <dcgettext@plt>
  409ea8:	mov	x1, x0
  409eac:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  409eb0:	add	x0, x0, #0x20
  409eb4:	bl	409674 <wcrtomb@plt+0x4a54>
  409eb8:	b	409d70 <wcrtomb@plt+0x5150>
  409ebc:	mov	w2, #0x5                   	// #5
  409ec0:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  409ec4:	add	x1, x1, #0x480
  409ec8:	mov	x0, #0x0                   	// #0
  409ecc:	bl	4049c0 <dcgettext@plt>
  409ed0:	mov	x1, x0
  409ed4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  409ed8:	add	x0, x0, #0x20
  409edc:	bl	409674 <wcrtomb@plt+0x4a54>
  409ee0:	b	409d88 <wcrtomb@plt+0x5168>
  409ee4:	mov	w2, #0x5                   	// #5
  409ee8:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  409eec:	add	x1, x1, #0x490
  409ef0:	mov	x0, #0x0                   	// #0
  409ef4:	bl	4049c0 <dcgettext@plt>
  409ef8:	mov	x1, x0
  409efc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  409f00:	add	x0, x0, #0x20
  409f04:	bl	409674 <wcrtomb@plt+0x4a54>
  409f08:	b	409da4 <wcrtomb@plt+0x5184>
  409f0c:	mov	w2, #0x5                   	// #5
  409f10:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  409f14:	add	x1, x1, #0x4a8
  409f18:	mov	x0, #0x0                   	// #0
  409f1c:	bl	4049c0 <dcgettext@plt>
  409f20:	mov	x1, x0
  409f24:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  409f28:	add	x0, x0, #0x20
  409f2c:	bl	409674 <wcrtomb@plt+0x4a54>
  409f30:	bl	419828 <wcrtomb@plt+0x14c08>
  409f34:	ldp	x19, x20, [sp, #16]
  409f38:	b	409c68 <wcrtomb@plt+0x5048>
  409f3c:	mov	x0, x19
  409f40:	bl	429b9c <wcrtomb@plt+0x24f7c>
  409f44:	bl	419828 <wcrtomb@plt+0x14c08>
  409f48:	mov	x1, #0x0                   	// #0
  409f4c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  409f50:	add	x0, x0, #0x20
  409f54:	bl	409674 <wcrtomb@plt+0x4a54>
  409f58:	ldp	x19, x20, [sp, #16]
  409f5c:	b	409c68 <wcrtomb@plt+0x5048>
  409f60:	adrp	x1, 409000 <wcrtomb@plt+0x43e0>
  409f64:	add	x1, x1, #0x764
  409f68:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  409f6c:	add	x0, x0, #0x20
  409f70:	bl	409564 <wcrtomb@plt+0x4944>
  409f74:	b	409e08 <wcrtomb@plt+0x51e8>
  409f78:	ldr	x0, [sp, #240]
  409f7c:	cbz	x0, 409e18 <wcrtomb@plt+0x51f8>
  409f80:	ldr	x3, [sp, #264]
  409f84:	ldr	x4, [sp, #272]
  409f88:	mov	x2, x19
  409f8c:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  409f90:	ldr	w1, [x0, #2184]
  409f94:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  409f98:	ldr	w0, [x0, #1896]
  409f9c:	bl	41b608 <wcrtomb@plt+0x169e8>
  409fa0:	cbz	w0, 409e18 <wcrtomb@plt+0x51f8>
  409fa4:	mov	x0, x19
  409fa8:	bl	42a15c <wcrtomb@plt+0x2553c>
  409fac:	b	409e18 <wcrtomb@plt+0x51f8>
  409fb0:	mov	x0, x19
  409fb4:	bl	429a50 <wcrtomb@plt+0x24e30>
  409fb8:	ldp	x19, x20, [sp, #16]
  409fbc:	b	409c68 <wcrtomb@plt+0x5048>
  409fc0:	bl	4098cc <wcrtomb@plt+0x4cac>
  409fc4:	b	409c68 <wcrtomb@plt+0x5048>
  409fc8:	ldr	w0, [sp, #208]
  409fcc:	and	w0, w0, #0xf000
  409fd0:	cmp	w0, #0x2, lsl #12
  409fd4:	cset	w0, ne  // ne = any
  409fd8:	cbnz	w0, 40a02c <wcrtomb@plt+0x540c>
  409fdc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  409fe0:	ldr	x1, [x0, #152]
  409fe4:	ldr	x0, [sp, #224]
  409fe8:	cmp	x1, x0
  409fec:	b.eq	409b14 <wcrtomb@plt+0x4ef4>  // b.none
  409ff0:	mov	w2, #0x5                   	// #5
  409ff4:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  409ff8:	add	x1, x1, #0x4d0
  409ffc:	mov	x0, #0x0                   	// #0
  40a000:	bl	4049c0 <dcgettext@plt>
  40a004:	mov	x1, x0
  40a008:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40a00c:	add	x0, x0, #0x20
  40a010:	bl	409674 <wcrtomb@plt+0x4a54>
  40a014:	b	409c68 <wcrtomb@plt+0x5048>
  40a018:	ldr	w0, [sp, #208]
  40a01c:	and	w0, w0, #0xf000
  40a020:	cmp	w0, #0x6, lsl #12
  40a024:	cset	w0, ne  // ne = any
  40a028:	b	409fd8 <wcrtomb@plt+0x53b8>
  40a02c:	mov	w2, #0x5                   	// #5
  40a030:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40a034:	add	x1, x1, #0x408
  40a038:	mov	x0, #0x0                   	// #0
  40a03c:	bl	4049c0 <dcgettext@plt>
  40a040:	mov	x1, x0
  40a044:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40a048:	add	x0, x0, #0x20
  40a04c:	bl	409674 <wcrtomb@plt+0x4a54>
  40a050:	b	409c68 <wcrtomb@plt+0x5048>
  40a054:	stp	x19, x20, [sp, #16]
  40a058:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40a05c:	ldr	w0, [x0, #440]
  40a060:	cbnz	w0, 40a0c8 <wcrtomb@plt+0x54a8>
  40a064:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40a068:	add	x3, x0, #0x20
  40a06c:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  40a070:	ldr	w2, [x1, #644]
  40a074:	ldr	x1, [x0, #32]
  40a078:	ldr	x0, [x3, #392]
  40a07c:	bl	40c4c4 <wcrtomb@plt+0x78a4>
  40a080:	mov	w19, w0
  40a084:	adrp	x0, 41b000 <wcrtomb@plt+0x163e0>
  40a088:	add	x2, x0, #0x80c
  40a08c:	tbz	w19, #31, 40a0a8 <wcrtomb@plt+0x5488>
  40a090:	mov	w1, #0x0                   	// #0
  40a094:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40a098:	ldr	x0, [x0, #32]
  40a09c:	bl	41b95c <wcrtomb@plt+0x16d3c>
  40a0a0:	ldp	x19, x20, [sp, #16]
  40a0a4:	b	409c94 <wcrtomb@plt+0x5074>
  40a0a8:	adrp	x2, 481000 <argp_program_version_hook@@Base+0x298>
  40a0ac:	add	x2, x2, #0x78
  40a0b0:	mov	w1, w19
  40a0b4:	mov	w0, #0x0                   	// #0
  40a0b8:	bl	4049a0 <__fxstat@plt>
  40a0bc:	cbnz	w0, 40a168 <wcrtomb@plt+0x5548>
  40a0c0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40a0c4:	str	w19, [x0, #440]
  40a0c8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40a0cc:	add	x0, x0, #0x20
  40a0d0:	bl	415918 <wcrtomb@plt+0x10cf8>
  40a0d4:	bl	415f08 <wcrtomb@plt+0x112e8>
  40a0d8:	mov	x19, x0
  40a0dc:	cbz	x0, 40a208 <wcrtomb@plt+0x55e8>
  40a0e0:	stp	x21, x22, [sp, #32]
  40a0e4:	stp	x23, x24, [sp, #48]
  40a0e8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40a0ec:	ldr	x20, [x0, #416]
  40a0f0:	mov	x24, #0x1                   	// #1
  40a0f4:	mov	x23, #0x4000                	// #16384
  40a0f8:	movk	x23, #0x11, lsl #16
  40a0fc:	mov	x22, #0x400                 	// #1024
  40a100:	movk	x22, #0x20, lsl #16
  40a104:	adrp	x21, 453000 <_obstack_memory_used@@Base+0x11e64>
  40a108:	add	x21, x21, #0x4e8
  40a10c:	ldrb	w4, [x20]
  40a110:	sub	w2, w4, #0x44
  40a114:	and	w2, w2, #0xff
  40a118:	mov	w0, w2
  40a11c:	lsl	x1, x24, x2
  40a120:	and	x3, x1, x23
  40a124:	and	x1, x1, x22
  40a128:	cbz	w4, 40a1cc <wcrtomb@plt+0x55ac>
  40a12c:	cmp	w2, #0x15
  40a130:	b.hi	40a128 <wcrtomb@plt+0x5508>  // b.pmore
  40a134:	cbnz	x3, 40a1b4 <wcrtomb@plt+0x5594>
  40a138:	cbnz	x1, 40a17c <wcrtomb@plt+0x555c>
  40a13c:	cbnz	w0, 40a128 <wcrtomb@plt+0x5508>
  40a140:	mov	x1, x19
  40a144:	mov	x0, x20
  40a148:	bl	404720 <strcmp@plt>
  40a14c:	cbnz	w0, 40a1d4 <wcrtomb@plt+0x55b4>
  40a150:	mov	x0, x20
  40a154:	bl	403ff0 <strlen@plt>
  40a158:	add	x0, x0, #0x1
  40a15c:	add	x20, x20, x0
  40a160:	add	x19, x19, x0
  40a164:	b	40a10c <wcrtomb@plt+0x54ec>
  40a168:	mov	w0, w19
  40a16c:	bl	4045d0 <close@plt>
  40a170:	adrp	x0, 41b000 <wcrtomb@plt+0x163e0>
  40a174:	add	x2, x0, #0x924
  40a178:	b	40a090 <wcrtomb@plt+0x5470>
  40a17c:	ldrb	w1, [x19]
  40a180:	mov	x0, x21
  40a184:	bl	404870 <strchr@plt>
  40a188:	cbz	x0, 40a1d4 <wcrtomb@plt+0x55b4>
  40a18c:	add	x1, x19, #0x1
  40a190:	add	x0, x20, #0x1
  40a194:	bl	404720 <strcmp@plt>
  40a198:	cbnz	w0, 40a1d4 <wcrtomb@plt+0x55b4>
  40a19c:	mov	x0, x20
  40a1a0:	bl	403ff0 <strlen@plt>
  40a1a4:	add	x0, x0, #0x1
  40a1a8:	add	x20, x20, x0
  40a1ac:	add	x19, x19, x0
  40a1b0:	b	40a10c <wcrtomb@plt+0x54ec>
  40a1b4:	ldrb	w0, [x19]
  40a1b8:	cbnz	w0, 40a1d4 <wcrtomb@plt+0x55b4>
  40a1bc:	ldp	x19, x20, [sp, #16]
  40a1c0:	ldp	x21, x22, [sp, #32]
  40a1c4:	ldp	x23, x24, [sp, #48]
  40a1c8:	b	409c94 <wcrtomb@plt+0x5074>
  40a1cc:	ldrb	w0, [x19]
  40a1d0:	b	40a1b8 <wcrtomb@plt+0x5598>
  40a1d4:	mov	w2, #0x5                   	// #5
  40a1d8:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40a1dc:	add	x1, x1, #0x3e8
  40a1e0:	mov	x0, #0x0                   	// #0
  40a1e4:	bl	4049c0 <dcgettext@plt>
  40a1e8:	mov	x1, x0
  40a1ec:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40a1f0:	add	x0, x0, #0x20
  40a1f4:	bl	409674 <wcrtomb@plt+0x4a54>
  40a1f8:	ldp	x19, x20, [sp, #16]
  40a1fc:	ldp	x21, x22, [sp, #32]
  40a200:	ldp	x23, x24, [sp, #48]
  40a204:	b	409c94 <wcrtomb@plt+0x5074>
  40a208:	adrp	x1, 409000 <wcrtomb@plt+0x43e0>
  40a20c:	add	x1, x1, #0x55c
  40a210:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40a214:	add	x0, x0, #0x20
  40a218:	bl	409564 <wcrtomb@plt+0x4944>
  40a21c:	ldp	x19, x20, [sp, #16]
  40a220:	b	409c94 <wcrtomb@plt+0x5074>
  40a224:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40a228:	ldrb	w0, [x0, #48]
  40a22c:	cbnz	w0, 40a280 <wcrtomb@plt+0x5660>
  40a230:	add	x1, sp, #0xc0
  40a234:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40a238:	ldr	x0, [x0, #40]
  40a23c:	bl	409868 <wcrtomb@plt+0x4c48>
  40a240:	cbz	w0, 409c68 <wcrtomb@plt+0x5048>
  40a244:	ldr	w0, [sp, #208]
  40a248:	and	w0, w0, #0xf000
  40a24c:	cmp	w0, #0x8, lsl #12
  40a250:	b.eq	40a288 <wcrtomb@plt+0x5668>  // b.none
  40a254:	mov	w2, #0x5                   	// #5
  40a258:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40a25c:	add	x1, x1, #0x408
  40a260:	mov	x0, #0x0                   	// #0
  40a264:	bl	4049c0 <dcgettext@plt>
  40a268:	mov	x1, x0
  40a26c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40a270:	add	x0, x0, #0x20
  40a274:	bl	409674 <wcrtomb@plt+0x4a54>
  40a278:	bl	419828 <wcrtomb@plt+0x14c08>
  40a27c:	b	409c68 <wcrtomb@plt+0x5048>
  40a280:	bl	4099d0 <wcrtomb@plt+0x4db0>
  40a284:	b	409c68 <wcrtomb@plt+0x5048>
  40a288:	stp	x19, x20, [sp, #16]
  40a28c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40a290:	ldr	x0, [x0, #4008]
  40a294:	mov	x1, #0xc                   	// #12
  40a298:	add	x0, x0, #0x171
  40a29c:	bl	4187b8 <wcrtomb@plt+0x13b98>
  40a2a0:	mov	x19, x0
  40a2a4:	tbnz	x0, #63, 40a2c8 <wcrtomb@plt+0x56a8>
  40a2a8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40a2ac:	ldr	x0, [x0, #168]
  40a2b0:	adds	x1, x0, x19
  40a2b4:	b.vs	40a2c8 <wcrtomb@plt+0x56a8>
  40a2b8:	mov	x0, x1
  40a2bc:	ldr	x1, [sp, #240]
  40a2c0:	cmp	x1, x0
  40a2c4:	b.eq	40a2f8 <wcrtomb@plt+0x56d8>  // b.none
  40a2c8:	mov	w2, #0x5                   	// #5
  40a2cc:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40a2d0:	add	x1, x1, #0x4a8
  40a2d4:	mov	x0, #0x0                   	// #0
  40a2d8:	bl	4049c0 <dcgettext@plt>
  40a2dc:	mov	x1, x0
  40a2e0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40a2e4:	add	x0, x0, #0x20
  40a2e8:	bl	409674 <wcrtomb@plt+0x4a54>
  40a2ec:	bl	419828 <wcrtomb@plt+0x14c08>
  40a2f0:	ldp	x19, x20, [sp, #16]
  40a2f4:	b	409c68 <wcrtomb@plt+0x5048>
  40a2f8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40a2fc:	ldr	w2, [x0, #644]
  40a300:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40a304:	ldr	x1, [x0, #40]
  40a308:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  40a30c:	ldr	w0, [x0, #2184]
  40a310:	bl	4045c0 <__openat_2@plt>
  40a314:	mov	w20, w0
  40a318:	tbnz	w0, #31, 40a354 <wcrtomb@plt+0x5734>
  40a31c:	mov	w2, #0x0                   	// #0
  40a320:	mov	x1, x19
  40a324:	bl	4041d0 <lseek@plt>
  40a328:	tbnz	x0, #63, 40a37c <wcrtomb@plt+0x575c>
  40a32c:	adrp	x1, 409000 <wcrtomb@plt+0x43e0>
  40a330:	add	x1, x1, #0x764
  40a334:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40a338:	add	x0, x0, #0x20
  40a33c:	bl	409564 <wcrtomb@plt+0x4944>
  40a340:	mov	w0, w20
  40a344:	bl	4045d0 <close@plt>
  40a348:	cbnz	w0, 40a3a8 <wcrtomb@plt+0x5788>
  40a34c:	ldp	x19, x20, [sp, #16]
  40a350:	b	409c68 <wcrtomb@plt+0x5048>
  40a354:	adrp	x19, 481000 <argp_program_version_hook@@Base+0x298>
  40a358:	add	x19, x19, #0x20
  40a35c:	ldr	x0, [x19, #8]
  40a360:	bl	429b9c <wcrtomb@plt+0x24f7c>
  40a364:	mov	x1, #0x0                   	// #0
  40a368:	mov	x0, x19
  40a36c:	bl	409674 <wcrtomb@plt+0x4a54>
  40a370:	bl	419828 <wcrtomb@plt+0x14c08>
  40a374:	ldp	x19, x20, [sp, #16]
  40a378:	b	409c68 <wcrtomb@plt+0x5048>
  40a37c:	stp	x21, x22, [sp, #32]
  40a380:	adrp	x21, 481000 <argp_program_version_hook@@Base+0x298>
  40a384:	add	x21, x21, #0x20
  40a388:	mov	x1, x19
  40a38c:	ldr	x0, [x21, #8]
  40a390:	bl	429ed4 <wcrtomb@plt+0x252b4>
  40a394:	mov	x1, #0x0                   	// #0
  40a398:	mov	x0, x21
  40a39c:	bl	409674 <wcrtomb@plt+0x4a54>
  40a3a0:	ldp	x21, x22, [sp, #32]
  40a3a4:	b	40a340 <wcrtomb@plt+0x5720>
  40a3a8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40a3ac:	ldr	x0, [x0, #40]
  40a3b0:	bl	429a50 <wcrtomb@plt+0x24e30>
  40a3b4:	ldp	x19, x20, [sp, #16]
  40a3b8:	b	409c68 <wcrtomb@plt+0x5048>
  40a3bc:	stp	x29, x30, [sp, #-96]!
  40a3c0:	mov	x29, sp
  40a3c4:	stp	x19, x20, [sp, #16]
  40a3c8:	bl	42a294 <wcrtomb@plt+0x25674>
  40a3cc:	and	w0, w0, #0xff
  40a3d0:	cbz	w0, 40a768 <wcrtomb@plt+0x5b48>
  40a3d4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40a3d8:	ldr	x0, [x0, #944]
  40a3dc:	cbz	x0, 40a3e4 <wcrtomb@plt+0x57c4>
  40a3e0:	blr	x0
  40a3e4:	mov	w2, #0x5                   	// #5
  40a3e8:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40a3ec:	add	x1, x1, #0x4f0
  40a3f0:	mov	x0, #0x0                   	// #0
  40a3f4:	bl	4049c0 <dcgettext@plt>
  40a3f8:	mov	x2, x0
  40a3fc:	mov	w1, #0x0                   	// #0
  40a400:	mov	w0, #0x0                   	// #0
  40a404:	bl	404050 <error@plt>
  40a408:	bl	427120 <wcrtomb@plt+0x22500>
  40a40c:	and	w0, w0, #0xff
  40a410:	cbz	w0, 40a448 <wcrtomb@plt+0x5828>
  40a414:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40a418:	ldr	x0, [x0, #944]
  40a41c:	cbz	x0, 40a424 <wcrtomb@plt+0x5804>
  40a420:	blr	x0
  40a424:	mov	w2, #0x5                   	// #5
  40a428:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40a42c:	add	x1, x1, #0x530
  40a430:	mov	x0, #0x0                   	// #0
  40a434:	bl	4049c0 <dcgettext@plt>
  40a438:	mov	x2, x0
  40a43c:	mov	w1, #0x0                   	// #0
  40a440:	mov	w0, #0x0                   	// #0
  40a444:	bl	404050 <error@plt>
  40a448:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40a44c:	ldr	x0, [x0, #944]
  40a450:	cbz	x0, 40a458 <wcrtomb@plt+0x5838>
  40a454:	blr	x0
  40a458:	mov	w2, #0x5                   	// #5
  40a45c:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40a460:	add	x1, x1, #0x560
  40a464:	mov	x0, #0x0                   	// #0
  40a468:	bl	4049c0 <dcgettext@plt>
  40a46c:	mov	x2, x0
  40a470:	mov	w1, #0x0                   	// #0
  40a474:	mov	w0, #0x0                   	// #0
  40a478:	bl	404050 <error@plt>
  40a47c:	bl	415840 <wcrtomb@plt+0x10c20>
  40a480:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40a484:	ldr	x0, [x0, #1888]
  40a488:	cbz	x0, 40a560 <wcrtomb@plt+0x5940>
  40a48c:	adrp	x19, 481000 <argp_program_version_hook@@Base+0x298>
  40a490:	ldr	w0, [x19, #912]
  40a494:	bl	4042b0 <fsync@plt>
  40a498:	mov	x1, #0x24b                 	// #587
  40a49c:	ldr	w0, [x19, #912]
  40a4a0:	bl	404bd0 <ioctl@plt>
  40a4a4:	mov	w0, #0x2                   	// #2
  40a4a8:	strh	w0, [sp, #72]
  40a4ac:	mov	w0, #0x1                   	// #1
  40a4b0:	str	w0, [sp, #76]
  40a4b4:	ldr	w0, [x19, #912]
  40a4b8:	mov	w1, #0x3fffffff            	// #1073741823
  40a4bc:	cmp	w0, w1
  40a4c0:	b.le	40a568 <wcrtomb@plt+0x5948>
  40a4c4:	add	x2, sp, #0x48
  40a4c8:	mov	w1, #0x6d01                	// #27905
  40a4cc:	movk	w1, #0x4008, lsl #16
  40a4d0:	mov	w3, #0xc0000000            	// #-1073741824
  40a4d4:	add	w0, w0, w3
  40a4d8:	bl	42b1b0 <wcrtomb@plt+0x26590>
  40a4dc:	tbz	w0, #31, 40a524 <wcrtomb@plt+0x5904>
  40a4e0:	bl	404ad0 <__errno_location@plt>
  40a4e4:	ldr	w0, [x0]
  40a4e8:	cmp	w0, #0x5
  40a4ec:	b.eq	40a57c <wcrtomb@plt+0x595c>  // b.none
  40a4f0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40a4f4:	ldr	w0, [x0, #912]
  40a4f8:	mov	w1, #0x3fffffff            	// #1073741823
  40a4fc:	cmp	w0, w1
  40a500:	b.le	40a5c4 <wcrtomb@plt+0x59a4>
  40a504:	mov	w2, #0x0                   	// #0
  40a508:	mov	x1, #0x0                   	// #0
  40a50c:	mov	w3, #0xc0000000            	// #-1073741824
  40a510:	add	w0, w0, w3
  40a514:	bl	42b034 <wcrtomb@plt+0x26414>
  40a518:	cmp	x0, #0x0
  40a51c:	cset	w0, ne  // ne = any
  40a520:	cbnz	w0, 40a5dc <wcrtomb@plt+0x59bc>
  40a524:	stp	x21, x22, [sp, #32]
  40a528:	str	x23, [sp, #48]
  40a52c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40a530:	str	wzr, [x0, #3896]
  40a534:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40a538:	mov	w1, #0x1                   	// #1
  40a53c:	strb	w1, [x0, #3960]
  40a540:	bl	406a9c <wcrtomb@plt+0x1e7c>
  40a544:	adrp	x22, 481000 <argp_program_version_hook@@Base+0x298>
  40a548:	add	x22, x22, #0x20
  40a54c:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40a550:	add	x21, x21, #0xfa8
  40a554:	adrp	x23, 453000 <_obstack_memory_used@@Base+0x11e64>
  40a558:	add	x23, x23, #0x590
  40a55c:	b	40a6e8 <wcrtomb@plt+0x5ac8>
  40a560:	bl	40963c <wcrtomb@plt+0x4a1c>
  40a564:	b	40a48c <wcrtomb@plt+0x586c>
  40a568:	add	x2, sp, #0x48
  40a56c:	mov	x1, #0x6d01                	// #27905
  40a570:	movk	x1, #0x4008, lsl #16
  40a574:	bl	404bd0 <ioctl@plt>
  40a578:	b	40a4dc <wcrtomb@plt+0x58bc>
  40a57c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40a580:	ldr	w0, [x0, #912]
  40a584:	mov	w1, #0x3fffffff            	// #1073741823
  40a588:	cmp	w0, w1
  40a58c:	b.le	40a5b0 <wcrtomb@plt+0x5990>
  40a590:	add	x2, sp, #0x48
  40a594:	mov	w1, #0x6d01                	// #27905
  40a598:	movk	w1, #0x4008, lsl #16
  40a59c:	mov	w3, #0xc0000000            	// #-1073741824
  40a5a0:	add	w0, w0, w3
  40a5a4:	bl	42b1b0 <wcrtomb@plt+0x26590>
  40a5a8:	tbz	w0, #31, 40a524 <wcrtomb@plt+0x5904>
  40a5ac:	b	40a4f0 <wcrtomb@plt+0x58d0>
  40a5b0:	add	x2, sp, #0x48
  40a5b4:	mov	x1, #0x6d01                	// #27905
  40a5b8:	movk	x1, #0x4008, lsl #16
  40a5bc:	bl	404bd0 <ioctl@plt>
  40a5c0:	b	40a5a8 <wcrtomb@plt+0x5988>
  40a5c4:	mov	w2, #0x0                   	// #0
  40a5c8:	mov	x1, #0x0                   	// #0
  40a5cc:	bl	4041d0 <lseek@plt>
  40a5d0:	cmp	x0, #0x0
  40a5d4:	cset	w0, ne  // ne = any
  40a5d8:	b	40a520 <wcrtomb@plt+0x5900>
  40a5dc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40a5e0:	ldr	x0, [x0, #624]
  40a5e4:	ldr	x0, [x0]
  40a5e8:	bl	429f68 <wcrtomb@plt+0x25348>
  40a5ec:	b	40a75c <wcrtomb@plt+0x5b3c>
  40a5f0:	mov	w20, #0x0                   	// #0
  40a5f4:	add	w20, w20, #0x1
  40a5f8:	ldr	x0, [x21]
  40a5fc:	bl	405884 <wcrtomb@plt+0xc64>
  40a600:	mov	w2, #0x0                   	// #0
  40a604:	mov	x1, x22
  40a608:	mov	x0, x21
  40a60c:	bl	4187e4 <wcrtomb@plt+0x13bc4>
  40a610:	mov	w19, w0
  40a614:	cmp	w0, #0x5
  40a618:	b.eq	40a5f4 <wcrtomb@plt+0x59d4>  // b.none
  40a61c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40a620:	ldr	x0, [x0, #944]
  40a624:	cbz	x0, 40a62c <wcrtomb@plt+0x5a0c>
  40a628:	blr	x0
  40a62c:	mov	w4, #0x5                   	// #5
  40a630:	sxtw	x3, w20
  40a634:	mov	x2, x23
  40a638:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40a63c:	add	x1, x1, #0x5c0
  40a640:	mov	x0, #0x0                   	// #0
  40a644:	bl	4048f0 <dcngettext@plt>
  40a648:	mov	w3, w20
  40a64c:	mov	x2, x0
  40a650:	mov	w1, #0x0                   	// #0
  40a654:	mov	w0, #0x0                   	// #0
  40a658:	bl	404050 <error@plt>
  40a65c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40a660:	mov	w1, #0x2                   	// #2
  40a664:	str	w1, [x0, #3392]
  40a668:	b	40a704 <wcrtomb@plt+0x5ae4>
  40a66c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40a670:	ldr	w0, [x0, #408]
  40a674:	tbz	w0, #0, 40a6e8 <wcrtomb@plt+0x5ac8>
  40a678:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40a67c:	ldr	x0, [x0, #944]
  40a680:	cbz	x0, 40a688 <wcrtomb@plt+0x5a68>
  40a684:	blr	x0
  40a688:	mov	w2, #0x5                   	// #5
  40a68c:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40a690:	add	x1, x1, #0x5f0
  40a694:	mov	x0, #0x0                   	// #0
  40a698:	bl	4049c0 <dcgettext@plt>
  40a69c:	mov	x19, x0
  40a6a0:	bl	405818 <wcrtomb@plt+0xbf8>
  40a6a4:	add	x1, sp, #0x48
  40a6a8:	bl	438ce8 <argp_parse@@Base+0x55a8>
  40a6ac:	mov	x3, x0
  40a6b0:	mov	x2, x19
  40a6b4:	mov	w1, #0x0                   	// #0
  40a6b8:	mov	w0, #0x0                   	// #0
  40a6bc:	bl	404050 <error@plt>
  40a6c0:	b	40a6e8 <wcrtomb@plt+0x5ac8>
  40a6c4:	mov	w3, #0x1                   	// #1
  40a6c8:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40a6cc:	add	x2, x2, #0xf90
  40a6d0:	mov	x1, x22
  40a6d4:	ldr	x0, [x21]
  40a6d8:	bl	4183b4 <wcrtomb@plt+0x13794>
  40a6dc:	bl	409a64 <wcrtomb@plt+0x4e44>
  40a6e0:	mov	x0, x22
  40a6e4:	bl	4249a8 <wcrtomb@plt+0x1fd88>
  40a6e8:	mov	w2, #0x0                   	// #0
  40a6ec:	mov	x1, x22
  40a6f0:	mov	x0, x21
  40a6f4:	bl	4187e4 <wcrtomb@plt+0x13bc4>
  40a6f8:	mov	w19, w0
  40a6fc:	cmp	w0, #0x5
  40a700:	b.eq	40a5f0 <wcrtomb@plt+0x59d0>  // b.none
  40a704:	cmp	w19, #0x4
  40a708:	b.eq	40a740 <wcrtomb@plt+0x5b20>  // b.none
  40a70c:	cmp	w19, #0x3
  40a710:	b.ne	40a6c4 <wcrtomb@plt+0x5aa4>  // b.any
  40a714:	ldr	x0, [x21]
  40a718:	bl	405884 <wcrtomb@plt+0xc64>
  40a71c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40a720:	ldrb	w0, [x0, #13]
  40a724:	cbnz	w0, 40a6e8 <wcrtomb@plt+0x5ac8>
  40a728:	mov	w2, #0x0                   	// #0
  40a72c:	mov	x1, x22
  40a730:	mov	x0, x21
  40a734:	bl	4187e4 <wcrtomb@plt+0x13bc4>
  40a738:	cmp	w0, #0x3
  40a73c:	b.ne	40a66c <wcrtomb@plt+0x5a4c>  // b.any
  40a740:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40a744:	mov	w1, #0x1                   	// #1
  40a748:	str	w1, [x0, #3896]
  40a74c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40a750:	strb	wzr, [x0, #3960]
  40a754:	ldp	x21, x22, [sp, #32]
  40a758:	ldr	x23, [sp, #48]
  40a75c:	ldp	x19, x20, [sp, #16]
  40a760:	ldp	x29, x30, [sp], #96
  40a764:	ret
  40a768:	bl	427120 <wcrtomb@plt+0x22500>
  40a76c:	and	w0, w0, #0xff
  40a770:	cbnz	w0, 40a414 <wcrtomb@plt+0x57f4>
  40a774:	b	40a47c <wcrtomb@plt+0x585c>
  40a778:	cbz	x2, 40a798 <wcrtomb@plt+0x5b78>
  40a77c:	mov	x3, #0x0                   	// #0
  40a780:	ldrb	w4, [x1, x3]
  40a784:	strb	w4, [x0, x3]
  40a788:	cbz	w4, 40a798 <wcrtomb@plt+0x5b78>
  40a78c:	add	x3, x3, #0x1
  40a790:	cmp	x2, x3
  40a794:	b.ne	40a780 <wcrtomb@plt+0x5b60>  // b.any
  40a798:	ret
  40a79c:	ldr	x2, [x0]
  40a7a0:	ldr	x0, [x0, #8]
  40a7a4:	eor	x2, x2, x0
  40a7a8:	udiv	x0, x2, x1
  40a7ac:	msub	x0, x0, x1, x2
  40a7b0:	ret
  40a7b4:	ldr	x2, [x0]
  40a7b8:	ldr	x3, [x1]
  40a7bc:	eor	x2, x2, x3
  40a7c0:	ldr	x0, [x0, #8]
  40a7c4:	ldr	x1, [x1, #8]
  40a7c8:	eor	x0, x0, x1
  40a7cc:	orr	x0, x2, x0
  40a7d0:	cmp	x0, #0x0
  40a7d4:	cset	w0, eq  // eq = none
  40a7d8:	ret
  40a7dc:	stp	x29, x30, [sp, #-32]!
  40a7e0:	mov	x29, sp
  40a7e4:	stp	x19, x20, [sp, #16]
  40a7e8:	mov	x20, x0
  40a7ec:	bl	406d94 <wcrtomb@plt+0x2174>
  40a7f0:	mov	x19, x0
  40a7f4:	mov	x2, #0x200                 	// #512
  40a7f8:	mov	w1, #0x0                   	// #0
  40a7fc:	bl	404420 <memset@plt>
  40a800:	mov	x2, #0x64                  	// #100
  40a804:	ldr	x1, [x20, #8]
  40a808:	mov	x0, x19
  40a80c:	bl	40a778 <wcrtomb@plt+0x5b58>
  40a810:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40a814:	ldr	w0, [x0, #752]
  40a818:	cmp	w0, #0x2
  40a81c:	b.eq	40a830 <wcrtomb@plt+0x5c10>  // b.none
  40a820:	mov	x0, x19
  40a824:	ldp	x19, x20, [sp, #16]
  40a828:	ldp	x29, x30, [sp], #32
  40a82c:	ret
  40a830:	strb	wzr, [x19, #99]
  40a834:	b	40a820 <wcrtomb@plt+0x5c00>
  40a838:	stp	x29, x30, [sp, #-32]!
  40a83c:	mov	x29, sp
  40a840:	str	x19, [sp, #16]
  40a844:	mov	x19, x0
  40a848:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40a84c:	ldr	w0, [x0, #1904]
  40a850:	cbz	w0, 40a870 <wcrtomb@plt+0x5c50>
  40a854:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40a858:	ldr	w0, [x0, #1904]
  40a85c:	str	wzr, [x19]
  40a860:	mov	w0, w0
  40a864:	ldr	x19, [sp, #16]
  40a868:	ldp	x29, x30, [sp], #32
  40a86c:	ret
  40a870:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40a874:	add	x1, x1, #0x770
  40a878:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  40a87c:	add	x0, x0, #0x608
  40a880:	bl	41d3b8 <wcrtomb@plt+0x18798>
  40a884:	cbnz	w0, 40a854 <wcrtomb@plt+0x5c34>
  40a888:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40a88c:	mov	w1, #0xfffffffe            	// #-2
  40a890:	str	w1, [x0, #1904]
  40a894:	b	40a854 <wcrtomb@plt+0x5c34>
  40a898:	stp	x29, x30, [sp, #-32]!
  40a89c:	mov	x29, sp
  40a8a0:	str	x19, [sp, #16]
  40a8a4:	mov	x19, x0
  40a8a8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40a8ac:	ldr	w0, [x0, #1908]
  40a8b0:	cbz	w0, 40a8d0 <wcrtomb@plt+0x5cb0>
  40a8b4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40a8b8:	ldr	w0, [x0, #1908]
  40a8bc:	str	wzr, [x19]
  40a8c0:	mov	w0, w0
  40a8c4:	ldr	x19, [sp, #16]
  40a8c8:	ldp	x29, x30, [sp], #32
  40a8cc:	ret
  40a8d0:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40a8d4:	add	x1, x1, #0x770
  40a8d8:	add	x1, x1, #0x4
  40a8dc:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  40a8e0:	add	x0, x0, #0x608
  40a8e4:	bl	41d470 <wcrtomb@plt+0x18850>
  40a8e8:	cbnz	w0, 40a8b4 <wcrtomb@plt+0x5c94>
  40a8ec:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40a8f0:	mov	w1, #0xfffffffe            	// #-2
  40a8f4:	str	w1, [x0, #1908]
  40a8f8:	b	40a8b4 <wcrtomb@plt+0x5c94>
  40a8fc:	stp	x29, x30, [sp, #-32]!
  40a900:	mov	x29, sp
  40a904:	stp	x19, x20, [sp, #16]
  40a908:	mov	x20, x0
  40a90c:	bl	404ad0 <__errno_location@plt>
  40a910:	ldr	w0, [x0]
  40a914:	cmp	w0, #0x18
  40a918:	cset	w19, eq  // eq = none
  40a91c:	cmp	x20, #0x0
  40a920:	csel	w19, w19, wzr, ne  // ne = any
  40a924:	cbnz	w19, 40a938 <wcrtomb@plt+0x5d18>
  40a928:	mov	w0, w19
  40a92c:	ldp	x19, x20, [sp, #16]
  40a930:	ldp	x29, x30, [sp], #32
  40a934:	ret
  40a938:	ldr	x0, [x20, #392]
  40a93c:	cbz	x0, 40a984 <wcrtomb@plt+0x5d64>
  40a940:	ldr	x0, [x0, #392]
  40a944:	cbnz	x0, 40a95c <wcrtomb@plt+0x5d3c>
  40a948:	mov	w19, #0x0                   	// #0
  40a94c:	b	40a928 <wcrtomb@plt+0x5d08>
  40a950:	ldr	x1, [x0, #392]
  40a954:	cbz	x1, 40a98c <wcrtomb@plt+0x5d6c>
  40a958:	mov	x0, x1
  40a95c:	ldr	w1, [x0, #408]
  40a960:	cmp	w1, #0x0
  40a964:	b.le	40a950 <wcrtomb@plt+0x5d30>
  40a968:	ldr	x1, [x0, #392]
  40a96c:	cbz	x1, 40a97c <wcrtomb@plt+0x5d5c>
  40a970:	ldr	w2, [x1, #408]
  40a974:	cmp	w2, #0x0
  40a978:	b.gt	40a958 <wcrtomb@plt+0x5d38>
  40a97c:	bl	424938 <wcrtomb@plt+0x1fd18>
  40a980:	b	40a928 <wcrtomb@plt+0x5d08>
  40a984:	mov	w19, #0x0                   	// #0
  40a988:	b	40a928 <wcrtomb@plt+0x5d08>
  40a98c:	mov	w19, #0x0                   	// #0
  40a990:	b	40a928 <wcrtomb@plt+0x5d08>
  40a994:	stp	x29, x30, [sp, #-48]!
  40a998:	mov	x29, sp
  40a99c:	stp	x19, x20, [sp, #16]
  40a9a0:	str	x21, [sp, #32]
  40a9a4:	mov	x21, x0
  40a9a8:	ldr	x20, [x0]
  40a9ac:	mov	x0, x20
  40a9b0:	bl	403ff0 <strlen@plt>
  40a9b4:	mov	x19, x0
  40a9b8:	b	40a9c0 <wcrtomb@plt+0x5da0>
  40a9bc:	mov	x19, x1
  40a9c0:	cbz	x19, 40a9d4 <wcrtomb@plt+0x5db4>
  40a9c4:	sub	x1, x19, #0x1
  40a9c8:	ldrb	w2, [x20, x1]
  40a9cc:	cmp	w2, #0x2f
  40a9d0:	b.eq	40a9bc <wcrtomb@plt+0x5d9c>  // b.none
  40a9d4:	ldrb	w0, [x20, x19]
  40a9d8:	cmp	w0, #0x2f
  40a9dc:	b.ne	40aa08 <wcrtomb@plt+0x5de8>  // b.any
  40a9e0:	ldr	x0, [x21]
  40a9e4:	mov	w1, #0x2f                  	// #47
  40a9e8:	strb	w1, [x0, x19]
  40a9ec:	ldr	x0, [x21]
  40a9f0:	add	x19, x0, x19
  40a9f4:	strb	wzr, [x19, #1]
  40a9f8:	ldp	x19, x20, [sp, #16]
  40a9fc:	ldr	x21, [sp, #32]
  40aa00:	ldp	x29, x30, [sp], #48
  40aa04:	ret
  40aa08:	add	x1, x19, #0x2
  40aa0c:	mov	x0, x20
  40aa10:	bl	43ff70 <argp_parse@@Base+0xc830>
  40aa14:	str	x0, [x21]
  40aa18:	b	40a9e0 <wcrtomb@plt+0x5dc0>
  40aa1c:	stp	x29, x30, [sp, #-32]!
  40aa20:	mov	x29, sp
  40aa24:	stp	x19, x20, [sp, #16]
  40aa28:	mov	x19, x0
  40aa2c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40aa30:	ldr	w0, [x0, #408]
  40aa34:	tbz	w0, #5, 40aa7c <wcrtomb@plt+0x5e5c>
  40aa38:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40aa3c:	ldr	x0, [x0, #944]
  40aa40:	cbz	x0, 40aa48 <wcrtomb@plt+0x5e28>
  40aa44:	blr	x0
  40aa48:	mov	w2, #0x5                   	// #5
  40aa4c:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40aa50:	add	x1, x1, #0x610
  40aa54:	mov	x0, #0x0                   	// #0
  40aa58:	bl	4049c0 <dcgettext@plt>
  40aa5c:	mov	x20, x0
  40aa60:	mov	x0, x19
  40aa64:	bl	43efc4 <argp_parse@@Base+0xb884>
  40aa68:	mov	x3, x0
  40aa6c:	mov	x2, x20
  40aa70:	mov	w1, #0x0                   	// #0
  40aa74:	mov	w0, #0x0                   	// #0
  40aa78:	bl	404050 <error@plt>
  40aa7c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40aa80:	ldrb	w0, [x0, #889]
  40aa84:	cbz	w0, 40aa94 <wcrtomb@plt+0x5e74>
  40aa88:	ldp	x19, x20, [sp, #16]
  40aa8c:	ldp	x29, x30, [sp], #32
  40aa90:	ret
  40aa94:	mov	w0, #0x2                   	// #2
  40aa98:	bl	424a80 <wcrtomb@plt+0x1fe60>
  40aa9c:	b	40aa88 <wcrtomb@plt+0x5e68>
  40aaa0:	stp	x29, x30, [sp, #-48]!
  40aaa4:	mov	x29, sp
  40aaa8:	stp	x19, x20, [sp, #16]
  40aaac:	mov	x19, x0
  40aab0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40aab4:	ldrb	w0, [x0, #20]
  40aab8:	cbnz	w0, 40aad0 <wcrtomb@plt+0x5eb0>
  40aabc:	ldr	w1, [x19, #108]
  40aac0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40aac4:	ldr	w0, [x0, #1912]
  40aac8:	cmp	w1, w0
  40aacc:	b.hi	40aadc <wcrtomb@plt+0x5ebc>  // b.pmore
  40aad0:	ldp	x19, x20, [sp, #16]
  40aad4:	ldp	x29, x30, [sp], #48
  40aad8:	ret
  40aadc:	str	xzr, [sp, #40]
  40aae0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40aae4:	ldrb	w2, [x0, #888]
  40aae8:	mov	w1, #0x1                   	// #1
  40aaec:	ldr	x0, [x19]
  40aaf0:	bl	42a2dc <wcrtomb@plt+0x256bc>
  40aaf4:	mov	x1, x0
  40aaf8:	add	x0, sp, #0x28
  40aafc:	bl	41a5bc <wcrtomb@plt+0x1599c>
  40ab00:	mov	w1, #0x2                   	// #2
  40ab04:	add	x0, sp, #0x28
  40ab08:	bl	427104 <wcrtomb@plt+0x224e4>
  40ab0c:	ldr	x0, [sp, #40]
  40ab10:	bl	403ff0 <strlen@plt>
  40ab14:	add	x0, x0, #0x15
  40ab18:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  40ab1c:	mov	x20, x0
  40ab20:	ldr	x0, [x19, #96]
  40ab24:	str	x0, [x20, #8]
  40ab28:	ldr	x0, [x19, #88]
  40ab2c:	str	x0, [x20]
  40ab30:	ldr	w0, [x19, #108]
  40ab34:	str	w0, [x20, #16]
  40ab38:	ldr	x19, [sp, #40]
  40ab3c:	mov	x1, x19
  40ab40:	add	x0, x20, #0x14
  40ab44:	bl	404910 <strcpy@plt>
  40ab48:	mov	x0, x19
  40ab4c:	bl	4047c0 <free@plt>
  40ab50:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40ab54:	ldr	x0, [x0, #1920]
  40ab58:	cbz	x0, 40ab88 <wcrtomb@plt+0x5f68>
  40ab5c:	mov	x1, x20
  40ab60:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40ab64:	ldr	x0, [x0, #1920]
  40ab68:	bl	4381cc <argp_parse@@Base+0x4a8c>
  40ab6c:	cbz	x0, 40abb0 <wcrtomb@plt+0x5f90>
  40ab70:	cmp	x20, x0
  40ab74:	b.ne	40abb4 <wcrtomb@plt+0x5f94>  // b.any
  40ab78:	ldr	w1, [x0, #16]
  40ab7c:	sub	w1, w1, #0x1
  40ab80:	str	w1, [x0, #16]
  40ab84:	b	40aad0 <wcrtomb@plt+0x5eb0>
  40ab88:	mov	x4, #0x0                   	// #0
  40ab8c:	adrp	x3, 40a000 <wcrtomb@plt+0x53e0>
  40ab90:	add	x3, x3, #0x7b4
  40ab94:	adrp	x2, 40a000 <wcrtomb@plt+0x53e0>
  40ab98:	add	x2, x2, #0x79c
  40ab9c:	mov	x1, #0x0                   	// #0
  40aba0:	bl	437c94 <argp_parse@@Base+0x4554>
  40aba4:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40aba8:	str	x0, [x1, #1920]
  40abac:	cbnz	x0, 40ab5c <wcrtomb@plt+0x5f3c>
  40abb0:	bl	40e5ec <wcrtomb@plt+0x99cc>
  40abb4:	bl	404660 <abort@plt>
  40abb8:	stp	x29, x30, [sp, #-224]!
  40abbc:	mov	x29, sp
  40abc0:	stp	x19, x20, [sp, #16]
  40abc4:	stp	x21, x22, [sp, #32]
  40abc8:	stp	x23, x24, [sp, #48]
  40abcc:	stp	x25, x26, [sp, #64]
  40abd0:	stp	x27, x28, [sp, #80]
  40abd4:	mov	w22, w0
  40abd8:	mov	x20, x1
  40abdc:	mov	x26, x2
  40abe0:	mov	x24, x3
  40abe4:	mov	x23, x4
  40abe8:	mov	x19, x5
  40abec:	mov	x25, x6
  40abf0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40abf4:	ldr	w0, [x0, #752]
  40abf8:	and	w0, w0, #0xfffffffb
  40abfc:	cbnz	w22, 40af30 <wcrtomb@plt+0x6310>
  40ac00:	add	x1, x5, x5, lsl #1
  40ac04:	sub	x1, x1, #0x3
  40ac08:	cmp	x1, #0x3f
  40ac0c:	b.hi	40acb4 <wcrtomb@plt+0x6094>  // b.pmore
  40ac10:	add	w1, w5, w5, lsl #1
  40ac14:	sub	w2, w1, #0x3
  40ac18:	mov	x1, #0x1                   	// #1
  40ac1c:	lsl	x1, x1, x2
  40ac20:	sub	x1, x1, #0x1
  40ac24:	cmp	x1, x20
  40ac28:	b.cs	40acb4 <wcrtomb@plt+0x6094>  // b.hs, b.nlast
  40ac2c:	cmp	w0, #0x2
  40ac30:	b.ne	40adec <wcrtomb@plt+0x61cc>  // b.any
  40ac34:	cbnz	w22, 40af38 <wcrtomb@plt+0x6318>
  40ac38:	sub	x21, x5, #0x1
  40ac3c:	lsl	x1, x21, #3
  40ac40:	mov	x0, x20
  40ac44:	cmp	x1, #0x3f
  40ac48:	b.hi	40af28 <wcrtomb@plt+0x6308>  // b.pmore
  40ac4c:	lsl	w1, w21, #3
  40ac50:	mov	x28, #0x1                   	// #1
  40ac54:	lsl	x28, x28, x1
  40ac58:	sub	x27, x28, #0x1
  40ac5c:	cmp	x0, x27
  40ac60:	b.ls	40acdc <wcrtomb@plt+0x60bc>  // b.plast
  40ac64:	cbz	w22, 40ac80 <wcrtomb@plt+0x6060>
  40ac68:	lsl	x0, x26, #3
  40ac6c:	str	x0, [sp, #104]
  40ac70:	add	x0, x19, x19, lsl #1
  40ac74:	sub	x0, x0, #0x3
  40ac78:	cmp	x0, x26, lsl #3
  40ac7c:	b.cs	40acf0 <wcrtomb@plt+0x60d0>  // b.hs, b.nlast
  40ac80:	add	x1, sp, #0x80
  40ac84:	mov	x0, x27
  40ac88:	bl	438ce8 <argp_parse@@Base+0x55a8>
  40ac8c:	mov	x21, x0
  40ac90:	cmn	x27, #0x1
  40ac94:	add	x1, sp, #0xb1
  40ac98:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  40ac9c:	csel	x0, x28, x0, ne  // ne = any
  40aca0:	bl	438ce8 <argp_parse@@Base+0x55a8>
  40aca4:	sub	x28, x0, #0x1
  40aca8:	mov	w1, #0x2d                  	// #45
  40acac:	sturb	w1, [x0, #-1]
  40acb0:	b	40ae30 <wcrtomb@plt+0x6210>
  40acb4:	sub	x19, x19, #0x1
  40acb8:	strb	wzr, [x23, x19]
  40acbc:	sub	x19, x19, #0x1
  40acc0:	and	w0, w20, #0x7
  40acc4:	add	w0, w0, #0x30
  40acc8:	strb	w0, [x23, x19]
  40accc:	lsr	x20, x20, #3
  40acd0:	cbnz	x19, 40acbc <wcrtomb@plt+0x609c>
  40acd4:	mov	w0, #0x1                   	// #1
  40acd8:	b	40af0c <wcrtomb@plt+0x62ec>
  40acdc:	cmp	w22, #0x0
  40ace0:	mov	w0, #0xff                  	// #255
  40ace4:	mov	w1, #0x80                  	// #128
  40ace8:	csel	w0, w0, w1, ne  // ne = any
  40acec:	b	40af50 <wcrtomb@plt+0x6330>
  40acf0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40acf4:	ldr	w0, [x0, #1928]
  40acf8:	cbnz	w0, 40ad3c <wcrtomb@plt+0x611c>
  40acfc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40ad00:	mov	w1, #0x1                   	// #1
  40ad04:	str	w1, [x0, #1928]
  40ad08:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40ad0c:	ldr	x0, [x0, #944]
  40ad10:	cbz	x0, 40ad18 <wcrtomb@plt+0x60f8>
  40ad14:	blr	x0
  40ad18:	mov	w2, #0x5                   	// #5
  40ad1c:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40ad20:	add	x1, x1, #0x638
  40ad24:	mov	x0, #0x0                   	// #0
  40ad28:	bl	4049c0 <dcgettext@plt>
  40ad2c:	mov	x2, x0
  40ad30:	mov	w1, #0x0                   	// #0
  40ad34:	mov	w0, #0x0                   	// #0
  40ad38:	bl	404050 <error@plt>
  40ad3c:	strb	wzr, [x23, x21]
  40ad40:	lsl	w26, w26, #3
  40ad44:	mov	x0, #0x1                   	// #1
  40ad48:	lsl	x0, x0, x26
  40ad4c:	sub	x0, x0, #0x1
  40ad50:	ldr	x1, [sp, #104]
  40ad54:	cmp	x1, #0x40
  40ad58:	csinv	x0, x0, xzr, cc  // cc = lo, ul, last
  40ad5c:	and	x20, x0, x20
  40ad60:	sub	x21, x21, #0x1
  40ad64:	and	w0, w20, #0x7
  40ad68:	add	w0, w0, #0x30
  40ad6c:	strb	w0, [x23, x21]
  40ad70:	lsr	x20, x20, #3
  40ad74:	cbnz	x21, 40ad60 <wcrtomb@plt+0x6140>
  40ad78:	mov	w0, #0x1                   	// #1
  40ad7c:	b	40af0c <wcrtomb@plt+0x62ec>
  40ad80:	add	x1, sp, #0x98
  40ad84:	mov	x0, x20
  40ad88:	bl	438ce8 <argp_parse@@Base+0x55a8>
  40ad8c:	mov	x20, x0
  40ad90:	b	40ae4c <wcrtomb@plt+0x622c>
  40ad94:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40ad98:	ldr	x0, [x0, #944]
  40ad9c:	cbz	x0, 40ada4 <wcrtomb@plt+0x6184>
  40ada0:	blr	x0
  40ada4:	mov	w2, #0x5                   	// #5
  40ada8:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40adac:	add	x1, x1, #0x698
  40adb0:	mov	x0, #0x0                   	// #0
  40adb4:	bl	4049c0 <dcgettext@plt>
  40adb8:	mov	x6, x21
  40adbc:	mov	x5, x28
  40adc0:	mov	x4, x25
  40adc4:	mov	x3, x20
  40adc8:	mov	x2, x0
  40adcc:	mov	w1, #0x0                   	// #0
  40add0:	mov	w0, #0x0                   	// #0
  40add4:	bl	404050 <error@plt>
  40add8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40addc:	mov	w1, #0x2                   	// #2
  40ade0:	str	w1, [x0, #3392]
  40ade4:	mov	w0, #0x0                   	// #0
  40ade8:	b	40af0c <wcrtomb@plt+0x62ec>
  40adec:	add	x0, x19, x19, lsl #1
  40adf0:	sub	x0, x0, #0x3
  40adf4:	mov	x27, #0xffffffffffffffff    	// #-1
  40adf8:	cmp	x0, #0x3f
  40adfc:	b.hi	40ae14 <wcrtomb@plt+0x61f4>  // b.pmore
  40ae00:	add	w27, w19, w19, lsl #1
  40ae04:	sub	w0, w27, #0x3
  40ae08:	mov	x27, #0x1                   	// #1
  40ae0c:	lsl	x27, x27, x0
  40ae10:	sub	x27, x27, #0x1
  40ae14:	add	x1, sp, #0x80
  40ae18:	mov	x0, x27
  40ae1c:	bl	438ce8 <argp_parse@@Base+0x55a8>
  40ae20:	mov	x21, x0
  40ae24:	mov	x24, #0x0                   	// #0
  40ae28:	adrp	x28, 45b000 <_obstack_memory_used@@Base+0x19e64>
  40ae2c:	add	x28, x28, #0x388
  40ae30:	cbz	w22, 40ad80 <wcrtomb@plt+0x6160>
  40ae34:	add	x1, sp, #0x99
  40ae38:	neg	x0, x20
  40ae3c:	bl	438ce8 <argp_parse@@Base+0x55a8>
  40ae40:	sub	x20, x0, #0x1
  40ae44:	mov	w1, #0x2d                  	// #45
  40ae48:	sturb	w1, [x0, #-1]
  40ae4c:	cbz	x24, 40ad94 <wcrtomb@plt+0x6174>
  40ae50:	add	x0, sp, #0x7c
  40ae54:	blr	x24
  40ae58:	and	x27, x0, x27
  40ae5c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40ae60:	ldr	w0, [x0, #752]
  40ae64:	cmp	w0, #0x6
  40ae68:	cset	w0, eq  // eq = none
  40ae6c:	ldr	w1, [sp, #124]
  40ae70:	ands	w0, w0, w1
  40ae74:	str	w0, [sp, #124]
  40ae78:	cneg	x27, x27, ne  // ne = any
  40ae7c:	add	x1, sp, #0xc9
  40ae80:	mov	x0, x27
  40ae84:	bl	438ce8 <argp_parse@@Base+0x55a8>
  40ae88:	mov	x22, x0
  40ae8c:	ldr	w0, [sp, #124]
  40ae90:	cbz	w0, 40aea0 <wcrtomb@plt+0x6280>
  40ae94:	mov	w0, #0x2d                  	// #45
  40ae98:	sturb	w0, [x22, #-1]
  40ae9c:	sub	x22, x22, #0x1
  40aea0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40aea4:	ldr	x0, [x0, #944]
  40aea8:	cbz	x0, 40aeb0 <wcrtomb@plt+0x6290>
  40aeac:	blr	x0
  40aeb0:	mov	w2, #0x5                   	// #5
  40aeb4:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40aeb8:	add	x1, x1, #0x660
  40aebc:	mov	x0, #0x0                   	// #0
  40aec0:	bl	4049c0 <dcgettext@plt>
  40aec4:	mov	x7, x22
  40aec8:	mov	x6, x21
  40aecc:	mov	x5, x28
  40aed0:	mov	x4, x25
  40aed4:	mov	x3, x20
  40aed8:	mov	x2, x0
  40aedc:	mov	w1, #0x0                   	// #0
  40aee0:	mov	w0, #0x0                   	// #0
  40aee4:	bl	404050 <error@plt>
  40aee8:	mov	x6, x25
  40aeec:	mov	x5, x19
  40aef0:	mov	x4, x23
  40aef4:	mov	x3, #0x0                   	// #0
  40aef8:	mov	x2, x26
  40aefc:	mov	x1, x27
  40af00:	ldr	w0, [sp, #124]
  40af04:	bl	40abb8 <wcrtomb@plt+0x5f98>
  40af08:	and	w0, w0, #0xff
  40af0c:	ldp	x19, x20, [sp, #16]
  40af10:	ldp	x21, x22, [sp, #32]
  40af14:	ldp	x23, x24, [sp, #48]
  40af18:	ldp	x25, x26, [sp, #64]
  40af1c:	ldp	x27, x28, [sp, #80]
  40af20:	ldp	x29, x30, [sp], #224
  40af24:	ret
  40af28:	mov	w0, #0x80                  	// #128
  40af2c:	b	40af50 <wcrtomb@plt+0x6330>
  40af30:	cmp	w0, #0x2
  40af34:	b.ne	40adec <wcrtomb@plt+0x61cc>  // b.any
  40af38:	mvn	x0, x20
  40af3c:	sub	x21, x19, #0x1
  40af40:	lsl	x1, x21, #3
  40af44:	cmp	x1, #0x3f
  40af48:	b.ls	40ac4c <wcrtomb@plt+0x602c>  // b.plast
  40af4c:	mov	w0, #0xff                  	// #255
  40af50:	strb	w0, [x23], #1
  40af54:	neg	w22, w22
  40af58:	lsl	x22, x22, #56
  40af5c:	sub	x21, x21, #0x1
  40af60:	strb	w20, [x23, x21]
  40af64:	orr	x20, x22, x20, lsr #8
  40af68:	cbnz	x21, 40af5c <wcrtomb@plt+0x633c>
  40af6c:	mov	w0, #0x1                   	// #1
  40af70:	b	40af0c <wcrtomb@plt+0x62ec>
  40af74:	stp	x29, x30, [sp, #-16]!
  40af78:	mov	x29, sp
  40af7c:	adrp	x3, 481000 <argp_program_version_hook@@Base+0x298>
  40af80:	ldr	w3, [x3, #752]
  40af84:	sub	w4, w3, #0x3
  40af88:	cmp	w4, #0x1
  40af8c:	mov	w7, w0
  40af90:	and	x0, x0, #0xfff
  40af94:	ccmp	w3, #0x6, #0x4, hi  // hi = pmore
  40af98:	adrp	x6, 453000 <_obstack_memory_used@@Base+0x11e64>
  40af9c:	add	x6, x6, #0x6b8
  40afa0:	mov	x5, x2
  40afa4:	mov	x4, x1
  40afa8:	mov	x3, #0x0                   	// #0
  40afac:	mov	x2, #0x4                   	// #4
  40afb0:	csel	x1, x0, x7, eq  // eq = none
  40afb4:	mov	w0, #0x0                   	// #0
  40afb8:	bl	40abb8 <wcrtomb@plt+0x5f98>
  40afbc:	ldp	x29, x30, [sp], #16
  40afc0:	ret
  40afc4:	stp	x29, x30, [sp, #-16]!
  40afc8:	mov	x29, sp
  40afcc:	adrp	x6, 453000 <_obstack_memory_used@@Base+0x11e64>
  40afd0:	add	x6, x6, #0x6c0
  40afd4:	mov	x5, x2
  40afd8:	mov	x4, x1
  40afdc:	mov	x3, #0x0                   	// #0
  40afe0:	mov	x2, #0x4                   	// #4
  40afe4:	sxtw	x1, w0
  40afe8:	lsr	w0, w0, #31
  40afec:	bl	40abb8 <wcrtomb@plt+0x5f98>
  40aff0:	ldp	x29, x30, [sp], #16
  40aff4:	ret
  40aff8:	stp	x29, x30, [sp, #-16]!
  40affc:	mov	x29, sp
  40b000:	adrp	x6, 453000 <_obstack_memory_used@@Base+0x11e64>
  40b004:	add	x6, x6, #0x6c8
  40b008:	mov	x5, x2
  40b00c:	mov	x4, x1
  40b010:	mov	x3, #0x0                   	// #0
  40b014:	mov	x2, #0x4                   	// #4
  40b018:	sxtw	x1, w0
  40b01c:	lsr	w0, w0, #31
  40b020:	bl	40abb8 <wcrtomb@plt+0x5f98>
  40b024:	ldp	x29, x30, [sp], #16
  40b028:	ret
  40b02c:	stp	x29, x30, [sp, #-64]!
  40b030:	mov	x29, sp
  40b034:	stp	x19, x20, [sp, #16]
  40b038:	stp	x21, x22, [sp, #32]
  40b03c:	str	x23, [sp, #48]
  40b040:	mov	x21, x0
  40b044:	mov	w23, w1
  40b048:	mov	x22, x2
  40b04c:	mov	x0, #0x28                  	// #40
  40b050:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  40b054:	mov	x19, x0
  40b058:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40b05c:	add	x20, x20, #0x770
  40b060:	ldr	x0, [x20, #32]
  40b064:	str	x0, [x19, #32]
  40b068:	str	x21, [x19]
  40b06c:	str	w23, [x19, #16]
  40b070:	str	x22, [x19, #24]
  40b074:	mov	x0, x21
  40b078:	bl	403ff0 <strlen@plt>
  40b07c:	str	x0, [x19, #8]
  40b080:	str	x19, [x20, #32]
  40b084:	ldp	x19, x20, [sp, #16]
  40b088:	ldp	x21, x22, [sp, #32]
  40b08c:	ldr	x23, [sp, #48]
  40b090:	ldp	x29, x30, [sp], #64
  40b094:	ret
  40b098:	adrp	x3, 481000 <argp_program_version_hook@@Base+0x298>
  40b09c:	ldr	w3, [x3, #580]
  40b0a0:	cbz	w3, 40b138 <wcrtomb@plt+0x6518>
  40b0a4:	stp	x29, x30, [sp, #-48]!
  40b0a8:	mov	x29, sp
  40b0ac:	stp	x19, x20, [sp, #16]
  40b0b0:	stp	x21, x22, [sp, #32]
  40b0b4:	mov	x21, x0
  40b0b8:	mov	x20, x1
  40b0bc:	mov	x19, x2
  40b0c0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40b0c4:	ldr	w0, [x0, #408]
  40b0c8:	tbz	w0, #2, 40b128 <wcrtomb@plt+0x6508>
  40b0cc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40b0d0:	ldr	x0, [x0, #944]
  40b0d4:	cbz	x0, 40b0dc <wcrtomb@plt+0x64bc>
  40b0d8:	blr	x0
  40b0dc:	mov	w2, #0x5                   	// #5
  40b0e0:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40b0e4:	add	x1, x1, #0x6d0
  40b0e8:	mov	x0, #0x0                   	// #0
  40b0ec:	bl	4049c0 <dcgettext@plt>
  40b0f0:	mov	x22, x0
  40b0f4:	mov	x0, x21
  40b0f8:	bl	43efc4 <argp_parse@@Base+0xb884>
  40b0fc:	mov	x21, x0
  40b100:	mov	x1, x20
  40b104:	mov	w0, #0x1                   	// #1
  40b108:	bl	43ede8 <argp_parse@@Base+0xb6a8>
  40b10c:	mov	x5, x19
  40b110:	mov	x4, x0
  40b114:	mov	x3, x21
  40b118:	mov	x2, x22
  40b11c:	mov	w1, #0x0                   	// #0
  40b120:	mov	w0, #0x0                   	// #0
  40b124:	bl	404050 <error@plt>
  40b128:	ldp	x19, x20, [sp, #16]
  40b12c:	ldp	x21, x22, [sp, #32]
  40b130:	ldp	x29, x30, [sp], #48
  40b134:	ret
  40b138:	ret
  40b13c:	stp	x29, x30, [sp, #-64]!
  40b140:	mov	x29, sp
  40b144:	mov	x2, #0x2b                  	// #43
  40b148:	add	x1, sp, #0x10
  40b14c:	bl	404950 <read@plt>
  40b150:	cmp	x0, #0x2b
  40b154:	b.eq	40b164 <wcrtomb@plt+0x6544>  // b.none
  40b158:	mov	w0, #0x0                   	// #0
  40b15c:	ldp	x29, x30, [sp], #64
  40b160:	ret
  40b164:	mov	x2, #0x2b                  	// #43
  40b168:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40b16c:	add	x1, x1, #0x700
  40b170:	add	x0, sp, #0x10
  40b174:	bl	4046e0 <memcmp@plt>
  40b178:	cmp	w0, #0x0
  40b17c:	cset	w0, eq  // eq = none
  40b180:	b	40b15c <wcrtomb@plt+0x653c>
  40b184:	stp	x29, x30, [sp, #-16]!
  40b188:	mov	x29, sp
  40b18c:	adrp	x6, 453000 <_obstack_memory_used@@Base+0x11e64>
  40b190:	add	x6, x6, #0x730
  40b194:	mov	x5, x2
  40b198:	mov	x4, x1
  40b19c:	mov	x3, #0x0                   	// #0
  40b1a0:	mov	x2, #0x8                   	// #8
  40b1a4:	mov	x1, x0
  40b1a8:	lsr	x0, x0, #63
  40b1ac:	bl	40abb8 <wcrtomb@plt+0x5f98>
  40b1b0:	ldp	x29, x30, [sp], #16
  40b1b4:	ret
  40b1b8:	stp	x29, x30, [sp, #-16]!
  40b1bc:	mov	x29, sp
  40b1c0:	adrp	x6, 453000 <_obstack_memory_used@@Base+0x11e64>
  40b1c4:	add	x6, x6, #0x738
  40b1c8:	mov	x5, x2
  40b1cc:	mov	x4, x1
  40b1d0:	mov	x3, #0x0                   	// #0
  40b1d4:	mov	x2, #0x8                   	// #8
  40b1d8:	mov	x1, x0
  40b1dc:	lsr	x0, x0, #63
  40b1e0:	bl	40abb8 <wcrtomb@plt+0x5f98>
  40b1e4:	ldp	x29, x30, [sp], #16
  40b1e8:	ret
  40b1ec:	stp	x29, x30, [sp, #-32]!
  40b1f0:	mov	x29, sp
  40b1f4:	str	x19, [sp, #16]
  40b1f8:	bl	406d94 <wcrtomb@plt+0x2174>
  40b1fc:	mov	x19, x0
  40b200:	mov	x2, #0x200                 	// #512
  40b204:	mov	w1, #0x0                   	// #0
  40b208:	bl	404420 <memset@plt>
  40b20c:	mov	x0, x19
  40b210:	bl	405884 <wcrtomb@plt+0xc64>
  40b214:	bl	406d94 <wcrtomb@plt+0x2174>
  40b218:	mov	x19, x0
  40b21c:	bl	405974 <wcrtomb@plt+0xd54>
  40b220:	mov	x2, x0
  40b224:	mov	w1, #0x0                   	// #0
  40b228:	mov	x0, x19
  40b22c:	bl	404420 <memset@plt>
  40b230:	mov	x0, x19
  40b234:	bl	405884 <wcrtomb@plt+0xc64>
  40b238:	ldr	x19, [sp, #16]
  40b23c:	ldp	x29, x30, [sp], #32
  40b240:	ret
  40b244:	stp	x29, x30, [sp, #-48]!
  40b248:	mov	x29, sp
  40b24c:	stp	x19, x20, [sp, #16]
  40b250:	stp	x21, x22, [sp, #32]
  40b254:	mov	x22, x0
  40b258:	mov	x21, x1
  40b25c:	mov	x20, x2
  40b260:	bl	406d94 <wcrtomb@plt+0x2174>
  40b264:	mov	x19, x0
  40b268:	mov	x2, #0x200                 	// #512
  40b26c:	mov	w1, #0x0                   	// #0
  40b270:	bl	404420 <memset@plt>
  40b274:	mov	x2, #0x64                  	// #100
  40b278:	mov	x1, x22
  40b27c:	mov	x0, x19
  40b280:	bl	40a778 <wcrtomb@plt+0x5b58>
  40b284:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40b288:	ldr	w0, [x0, #752]
  40b28c:	cmp	w0, #0x2
  40b290:	b.eq	40b360 <wcrtomb@plt+0x6740>  // b.none
  40b294:	mov	x2, #0xc                   	// #12
  40b298:	add	x1, x19, #0x7c
  40b29c:	mov	x0, x21
  40b2a0:	bl	40b184 <wcrtomb@plt+0x6564>
  40b2a4:	mov	x0, #0x0                   	// #0
  40b2a8:	tbnz	x20, #63, 40b2b8 <wcrtomb@plt+0x6698>
  40b2ac:	mov	x0, #0x1ffffffff           	// #8589934591
  40b2b0:	cmp	x20, x0
  40b2b4:	csel	x0, x20, x0, ls  // ls = plast
  40b2b8:	mov	x2, #0xc                   	// #12
  40b2bc:	add	x1, x19, #0x88
  40b2c0:	bl	40b1b8 <wcrtomb@plt+0x6598>
  40b2c4:	mov	x2, #0x8                   	// #8
  40b2c8:	add	x1, x19, #0x64
  40b2cc:	mov	w0, #0x81a4                	// #33188
  40b2d0:	bl	40af74 <wcrtomb@plt+0x6354>
  40b2d4:	adrp	x6, 453000 <_obstack_memory_used@@Base+0x11e64>
  40b2d8:	add	x6, x6, #0x740
  40b2dc:	mov	x5, #0x8                   	// #8
  40b2e0:	add	x4, x19, #0x6c
  40b2e4:	adrp	x3, 40a000 <wcrtomb@plt+0x53e0>
  40b2e8:	add	x3, x3, #0x838
  40b2ec:	mov	x2, #0x4                   	// #4
  40b2f0:	mov	x1, #0x0                   	// #0
  40b2f4:	mov	w0, #0x0                   	// #0
  40b2f8:	bl	40abb8 <wcrtomb@plt+0x5f98>
  40b2fc:	adrp	x6, 453000 <_obstack_memory_used@@Base+0x11e64>
  40b300:	add	x6, x6, #0x748
  40b304:	mov	x5, #0x8                   	// #8
  40b308:	add	x4, x19, #0x74
  40b30c:	adrp	x3, 40a000 <wcrtomb@plt+0x53e0>
  40b310:	add	x3, x3, #0x898
  40b314:	mov	x2, #0x4                   	// #4
  40b318:	mov	x1, #0x0                   	// #0
  40b31c:	mov	w0, #0x0                   	// #0
  40b320:	bl	40abb8 <wcrtomb@plt+0x5f98>
  40b324:	add	x1, x19, #0x101
  40b328:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x10e64>
  40b32c:	add	x0, x0, #0xde8
  40b330:	ldr	w2, [x0]
  40b334:	str	w2, [x1]
  40b338:	ldrh	w0, [x0, #4]
  40b33c:	strh	w0, [x1, #4]
  40b340:	add	x0, x19, #0x107
  40b344:	mov	w1, #0x3030                	// #12336
  40b348:	strh	w1, [x0]
  40b34c:	mov	x0, x19
  40b350:	ldp	x19, x20, [sp, #16]
  40b354:	ldp	x21, x22, [sp, #32]
  40b358:	ldp	x29, x30, [sp], #48
  40b35c:	ret
  40b360:	strb	wzr, [x19, #99]
  40b364:	b	40b294 <wcrtomb@plt+0x6674>
  40b368:	sub	sp, sp, #0x230
  40b36c:	stp	x29, x30, [sp]
  40b370:	mov	x29, sp
  40b374:	stp	x19, x20, [sp, #16]
  40b378:	stp	x21, x22, [sp, #32]
  40b37c:	and	w21, w0, #0xff
  40b380:	mov	x19, x2
  40b384:	ldr	x0, [x1, #360]
  40b388:	cbz	x0, 40b3a4 <wcrtomb@plt+0x6784>
  40b38c:	mov	x0, x19
  40b390:	ldp	x19, x20, [sp, #16]
  40b394:	ldp	x21, x22, [sp, #32]
  40b398:	ldp	x29, x30, [sp]
  40b39c:	add	sp, sp, #0x230
  40b3a0:	ret
  40b3a4:	mov	x20, x1
  40b3a8:	ldr	x0, [x1, #344]
  40b3ac:	cbz	x0, 40b38c <wcrtomb@plt+0x676c>
  40b3b0:	add	x22, x1, #0x158
  40b3b4:	mov	x0, x22
  40b3b8:	bl	413e7c <wcrtomb@plt+0xf25c>
  40b3bc:	mov	x2, #0x200                 	// #512
  40b3c0:	mov	x1, x19
  40b3c4:	add	x0, sp, #0x30
  40b3c8:	bl	403f70 <memcpy@plt>
  40b3cc:	cbz	w21, 40b410 <wcrtomb@plt+0x67f0>
  40b3d0:	bl	41380c <wcrtomb@plt+0xebec>
  40b3d4:	mov	x19, x0
  40b3d8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40b3dc:	ldr	x2, [x0, #648]
  40b3e0:	mov	w0, #0x67                  	// #103
  40b3e4:	mov	x3, x22
  40b3e8:	mov	x1, x19
  40b3ec:	bl	413f5c <wcrtomb@plt+0xf33c>
  40b3f0:	mov	x0, x19
  40b3f4:	bl	4047c0 <free@plt>
  40b3f8:	bl	406d94 <wcrtomb@plt+0x2174>
  40b3fc:	mov	x19, x0
  40b400:	mov	x2, #0x200                 	// #512
  40b404:	add	x1, sp, #0x30
  40b408:	bl	403f70 <memcpy@plt>
  40b40c:	b	40b38c <wcrtomb@plt+0x676c>
  40b410:	mov	x0, x20
  40b414:	bl	4137b4 <wcrtomb@plt+0xeb94>
  40b418:	mov	x19, x0
  40b41c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40b420:	ldr	w0, [x0, #4088]
  40b424:	cbz	w0, 40b438 <wcrtomb@plt+0x6818>
  40b428:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40b42c:	ldr	x2, [x0, #728]
  40b430:	mov	w0, #0x78                  	// #120
  40b434:	b	40b3e4 <wcrtomb@plt+0x67c4>
  40b438:	ldr	x2, [x20, #176]
  40b43c:	mov	w0, #0x78                  	// #120
  40b440:	b	40b3e4 <wcrtomb@plt+0x67c4>
  40b444:	stp	x29, x30, [sp, #-32]!
  40b448:	mov	x29, sp
  40b44c:	str	x19, [sp, #16]
  40b450:	mov	x19, x0
  40b454:	add	x4, x0, #0x94
  40b458:	mov	x0, #0x2020202020202020    	// #2314885530818453536
  40b45c:	stur	x0, [x19, #148]
  40b460:	mov	x2, x19
  40b464:	add	x5, x19, #0x200
  40b468:	mov	w1, #0x0                   	// #0
  40b46c:	ldrb	w3, [x2], #1
  40b470:	add	w1, w1, w3
  40b474:	cmp	x5, x2
  40b478:	b.ne	40b46c <wcrtomb@plt+0x684c>  // b.any
  40b47c:	adrp	x6, 453000 <_obstack_memory_used@@Base+0x11e64>
  40b480:	add	x6, x6, #0x750
  40b484:	mov	x5, #0x7                   	// #7
  40b488:	mov	x3, #0x0                   	// #0
  40b48c:	mov	x2, #0x8                   	// #8
  40b490:	sxtw	x1, w1
  40b494:	mov	w0, #0x0                   	// #0
  40b498:	bl	40abb8 <wcrtomb@plt+0x5f98>
  40b49c:	mov	x0, x19
  40b4a0:	bl	405884 <wcrtomb@plt+0xc64>
  40b4a4:	ldr	x19, [sp, #16]
  40b4a8:	ldp	x29, x30, [sp], #32
  40b4ac:	ret
  40b4b0:	stp	x29, x30, [sp, #-32]!
  40b4b4:	mov	x29, sp
  40b4b8:	stp	x19, x20, [sp, #16]
  40b4bc:	mov	x20, x0
  40b4c0:	mov	x19, x1
  40b4c4:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  40b4c8:	ldr	w1, [x1, #580]
  40b4cc:	cbz	w1, 40b4f0 <wcrtomb@plt+0x68d0>
  40b4d0:	ldrb	w3, [x19, #156]
  40b4d4:	sub	w1, w3, #0x4b
  40b4d8:	and	w1, w1, #0xff
  40b4dc:	cmp	w3, #0x78
  40b4e0:	mov	w0, #0x67                  	// #103
  40b4e4:	ccmp	w3, w0, #0x4, ne  // ne = any
  40b4e8:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  40b4ec:	b.hi	40b510 <wcrtomb@plt+0x68f0>  // b.pmore
  40b4f0:	mov	x2, x19
  40b4f4:	mov	x1, x20
  40b4f8:	mov	w0, #0x0                   	// #0
  40b4fc:	bl	40b368 <wcrtomb@plt+0x6748>
  40b500:	bl	40b444 <wcrtomb@plt+0x6824>
  40b504:	ldp	x19, x20, [sp, #16]
  40b508:	ldp	x29, x30, [sp], #32
  40b50c:	ret
  40b510:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40b514:	ldr	w1, [x0, #752]
  40b518:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40b51c:	str	w1, [x0, #3984]
  40b520:	mov	x1, x19
  40b524:	mov	x0, x20
  40b528:	bl	4195f0 <wcrtomb@plt+0x149d0>
  40b52c:	b	40b4f0 <wcrtomb@plt+0x68d0>
  40b530:	stp	x29, x30, [sp, #-64]!
  40b534:	mov	x29, sp
  40b538:	stp	x19, x20, [sp, #16]
  40b53c:	stp	x21, x22, [sp, #32]
  40b540:	stp	x23, x24, [sp, #48]
  40b544:	mov	x20, x0
  40b548:	mov	x22, x1
  40b54c:	and	w24, w2, #0xff
  40b550:	mov	x0, x1
  40b554:	bl	403ff0 <strlen@plt>
  40b558:	add	x21, x0, #0x1
  40b55c:	mov	x2, #0x0                   	// #0
  40b560:	mov	x1, x21
  40b564:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  40b568:	add	x0, x0, #0x760
  40b56c:	bl	40b244 <wcrtomb@plt+0x6624>
  40b570:	mov	x19, x0
  40b574:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40b578:	ldrb	w0, [x0, #608]
  40b57c:	cbnz	w0, 40b5bc <wcrtomb@plt+0x699c>
  40b580:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40b584:	ldr	x0, [x0, #1944]
  40b588:	cbz	x0, 40b684 <wcrtomb@plt+0x6a64>
  40b58c:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40b590:	add	x23, x23, #0x770
  40b594:	mov	x2, #0x20                  	// #32
  40b598:	ldr	x1, [x23, #40]
  40b59c:	add	x0, x19, #0x109
  40b5a0:	bl	40a778 <wcrtomb@plt+0x5b58>
  40b5a4:	strb	wzr, [x19, #296]
  40b5a8:	mov	x2, #0x20                  	// #32
  40b5ac:	ldr	x1, [x23, #48]
  40b5b0:	add	x0, x19, #0x129
  40b5b4:	bl	40a778 <wcrtomb@plt+0x5b58>
  40b5b8:	strb	wzr, [x19, #328]
  40b5bc:	add	x0, x19, #0x101
  40b5c0:	mov	x1, #0x7375                	// #29557
  40b5c4:	movk	x1, #0x6174, lsl #16
  40b5c8:	movk	x1, #0x2072, lsl #32
  40b5cc:	movk	x1, #0x20, lsl #48
  40b5d0:	str	x1, [x0]
  40b5d4:	strb	w24, [x19, #156]
  40b5d8:	mov	x2, #0xffffffffffffffff    	// #-1
  40b5dc:	mov	x1, x19
  40b5e0:	mov	x0, x20
  40b5e4:	bl	40b4b0 <wcrtomb@plt+0x6890>
  40b5e8:	bl	406d94 <wcrtomb@plt+0x2174>
  40b5ec:	mov	x20, x0
  40b5f0:	bl	405974 <wcrtomb@plt+0xd54>
  40b5f4:	mov	x19, x0
  40b5f8:	cmp	x21, x0
  40b5fc:	b.ls	40b640 <wcrtomb@plt+0x6a20>  // b.plast
  40b600:	mov	x2, x19
  40b604:	mov	x1, x22
  40b608:	mov	x0, x20
  40b60c:	bl	403f70 <memcpy@plt>
  40b610:	add	x22, x22, x19
  40b614:	sub	x21, x21, x19
  40b618:	sub	x19, x19, #0x1
  40b61c:	and	x19, x19, #0xfffffffffffffe00
  40b620:	add	x0, x20, x19
  40b624:	bl	405884 <wcrtomb@plt+0xc64>
  40b628:	bl	406d94 <wcrtomb@plt+0x2174>
  40b62c:	mov	x20, x0
  40b630:	bl	405974 <wcrtomb@plt+0xd54>
  40b634:	mov	x19, x0
  40b638:	cmp	x21, x0
  40b63c:	b.hi	40b600 <wcrtomb@plt+0x69e0>  // b.pmore
  40b640:	mov	x2, x21
  40b644:	mov	x1, x22
  40b648:	mov	x0, x20
  40b64c:	bl	403f70 <memcpy@plt>
  40b650:	sub	x2, x19, x21
  40b654:	mov	w1, #0x0                   	// #0
  40b658:	add	x0, x20, x21
  40b65c:	bl	404420 <memset@plt>
  40b660:	sub	x0, x21, #0x1
  40b664:	and	x0, x0, #0xfffffffffffffe00
  40b668:	add	x0, x20, x0
  40b66c:	bl	405884 <wcrtomb@plt+0xc64>
  40b670:	ldp	x19, x20, [sp, #16]
  40b674:	ldp	x21, x22, [sp, #32]
  40b678:	ldp	x23, x24, [sp, #48]
  40b67c:	ldp	x29, x30, [sp], #64
  40b680:	ret
  40b684:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40b688:	add	x23, x23, #0x770
  40b68c:	add	x1, x23, #0x28
  40b690:	bl	41d250 <wcrtomb@plt+0x18630>
  40b694:	add	x1, x23, #0x30
  40b698:	mov	w0, #0x0                   	// #0
  40b69c:	bl	41d304 <wcrtomb@plt+0x186e4>
  40b6a0:	b	40b58c <wcrtomb@plt+0x696c>
  40b6a4:	stp	x29, x30, [sp, #-96]!
  40b6a8:	mov	x29, sp
  40b6ac:	stp	x19, x20, [sp, #16]
  40b6b0:	stp	x21, x22, [sp, #32]
  40b6b4:	mov	x19, x0
  40b6b8:	str	xzr, [sp, #88]
  40b6bc:	str	xzr, [sp, #80]
  40b6c0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40b6c4:	ldr	w0, [x0, #752]
  40b6c8:	cmp	w0, #0x4
  40b6cc:	b.eq	40b72c <wcrtomb@plt+0x6b0c>  // b.none
  40b6d0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40b6d4:	ldr	w20, [x0, #752]
  40b6d8:	cmp	w20, #0x2
  40b6dc:	b.eq	40bd9c <wcrtomb@plt+0x717c>  // b.none
  40b6e0:	ldr	x22, [x19, #8]
  40b6e4:	mov	x0, x22
  40b6e8:	bl	403ff0 <strlen@plt>
  40b6ec:	cmp	x0, #0x64
  40b6f0:	b.ls	40bdb0 <wcrtomb@plt+0x7190>  // b.plast
  40b6f4:	cmp	w20, #0x3
  40b6f8:	b.eq	40b7c8 <wcrtomb@plt+0x6ba8>  // b.none
  40b6fc:	b.ls	40b760 <wcrtomb@plt+0x6b40>  // b.plast
  40b700:	cmp	w20, #0x4
  40b704:	b.ne	40b7c0 <wcrtomb@plt+0x6ba0>  // b.any
  40b708:	mov	x2, #0x0                   	// #0
  40b70c:	mov	x1, x19
  40b710:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  40b714:	add	x0, x0, #0x770
  40b718:	bl	413cf0 <wcrtomb@plt+0xf0d0>
  40b71c:	mov	x0, x19
  40b720:	bl	40a7dc <wcrtomb@plt+0x5bbc>
  40b724:	mov	x20, x0
  40b728:	b	40bdbc <wcrtomb@plt+0x719c>
  40b72c:	ldr	x0, [x19, #8]
  40b730:	bl	427bac <wcrtomb@plt+0x22f8c>
  40b734:	and	w0, w0, #0xff
  40b738:	cbnz	w0, 40b6d0 <wcrtomb@plt+0x6ab0>
  40b73c:	mov	x2, #0x0                   	// #0
  40b740:	mov	x1, x19
  40b744:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  40b748:	add	x0, x0, #0x770
  40b74c:	bl	413cf0 <wcrtomb@plt+0xf0d0>
  40b750:	mov	x0, x19
  40b754:	bl	40a7dc <wcrtomb@plt+0x5bbc>
  40b758:	mov	x20, x0
  40b75c:	b	40bdbc <wcrtomb@plt+0x719c>
  40b760:	cmp	w20, #0x1
  40b764:	b.ne	40b934 <wcrtomb@plt+0x6d14>  // b.any
  40b768:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40b76c:	ldr	x0, [x0, #944]
  40b770:	cbz	x0, 40b778 <wcrtomb@plt+0x6b58>
  40b774:	blr	x0
  40b778:	mov	w2, #0x5                   	// #5
  40b77c:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40b780:	add	x1, x1, #0x778
  40b784:	mov	x0, #0x0                   	// #0
  40b788:	bl	4049c0 <dcgettext@plt>
  40b78c:	mov	x20, x0
  40b790:	ldr	x0, [x19, #8]
  40b794:	bl	43efc4 <argp_parse@@Base+0xb884>
  40b798:	mov	w4, #0x63                  	// #99
  40b79c:	mov	x3, x0
  40b7a0:	mov	x2, x20
  40b7a4:	mov	w1, #0x0                   	// #0
  40b7a8:	mov	w0, #0x0                   	// #0
  40b7ac:	bl	404050 <error@plt>
  40b7b0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40b7b4:	mov	w1, #0x2                   	// #2
  40b7b8:	str	w1, [x0, #3392]
  40b7bc:	b	40b854 <wcrtomb@plt+0x6c34>
  40b7c0:	cmp	w20, #0x5
  40b7c4:	b.ne	40b85c <wcrtomb@plt+0x6c3c>  // b.any
  40b7c8:	cmp	x0, #0x100
  40b7cc:	b.hi	40b878 <wcrtomb@plt+0x6c58>  // b.pmore
  40b7d0:	mov	x21, #0x9c                  	// #156
  40b7d4:	cmp	x0, x21
  40b7d8:	b.hi	40b7ec <wcrtomb@plt+0x6bcc>  // b.pmore
  40b7dc:	sub	x21, x0, #0x1
  40b7e0:	ldrb	w1, [x22, x21]
  40b7e4:	cmp	w1, #0x2f
  40b7e8:	csel	x21, x21, x0, eq  // eq = none
  40b7ec:	sub	x21, x21, #0x1
  40b7f0:	ldrb	w1, [x22, x21]
  40b7f4:	cmp	w1, #0x2f
  40b7f8:	b.eq	40b8d0 <wcrtomb@plt+0x6cb0>  // b.none
  40b7fc:	subs	x21, x21, #0x1
  40b800:	b.ne	40b7f0 <wcrtomb@plt+0x6bd0>  // b.any
  40b804:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40b808:	ldr	x0, [x0, #944]
  40b80c:	cbz	x0, 40b814 <wcrtomb@plt+0x6bf4>
  40b810:	blr	x0
  40b814:	mov	w2, #0x5                   	// #5
  40b818:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40b81c:	add	x1, x1, #0x7a8
  40b820:	mov	x0, #0x0                   	// #0
  40b824:	bl	4049c0 <dcgettext@plt>
  40b828:	mov	x19, x0
  40b82c:	mov	x0, x22
  40b830:	bl	43efc4 <argp_parse@@Base+0xb884>
  40b834:	mov	x3, x0
  40b838:	mov	x2, x19
  40b83c:	mov	w1, #0x0                   	// #0
  40b840:	mov	w0, #0x0                   	// #0
  40b844:	bl	404050 <error@plt>
  40b848:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40b84c:	mov	w1, #0x2                   	// #2
  40b850:	str	w1, [x0, #3392]
  40b854:	mov	x20, #0x0                   	// #0
  40b858:	b	40bd60 <wcrtomb@plt+0x7140>
  40b85c:	cmp	w20, #0x6
  40b860:	b.ne	40b934 <wcrtomb@plt+0x6d14>  // b.any
  40b864:	mov	w2, #0x4c                  	// #76
  40b868:	mov	x1, x22
  40b86c:	mov	x0, x19
  40b870:	bl	40b530 <wcrtomb@plt+0x6910>
  40b874:	b	40b71c <wcrtomb@plt+0x6afc>
  40b878:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40b87c:	ldr	x0, [x0, #944]
  40b880:	cbz	x0, 40b888 <wcrtomb@plt+0x6c68>
  40b884:	blr	x0
  40b888:	mov	w2, #0x5                   	// #5
  40b88c:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40b890:	add	x1, x1, #0x778
  40b894:	mov	x0, #0x0                   	// #0
  40b898:	bl	4049c0 <dcgettext@plt>
  40b89c:	mov	x19, x0
  40b8a0:	mov	x0, x22
  40b8a4:	bl	43efc4 <argp_parse@@Base+0xb884>
  40b8a8:	mov	w4, #0x100                 	// #256
  40b8ac:	mov	x3, x0
  40b8b0:	mov	x2, x19
  40b8b4:	mov	w1, #0x0                   	// #0
  40b8b8:	mov	w0, #0x0                   	// #0
  40b8bc:	bl	404050 <error@plt>
  40b8c0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40b8c4:	mov	w1, #0x2                   	// #2
  40b8c8:	str	w1, [x0, #3392]
  40b8cc:	b	40b854 <wcrtomb@plt+0x6c34>
  40b8d0:	cbz	x21, 40b804 <wcrtomb@plt+0x6be4>
  40b8d4:	str	x23, [sp, #48]
  40b8d8:	sub	x0, x0, #0x1
  40b8dc:	sub	x23, x0, x21
  40b8e0:	sub	x0, x23, #0x1
  40b8e4:	cmp	x0, #0x63
  40b8e8:	b.hi	40b92c <wcrtomb@plt+0x6d0c>  // b.pmore
  40b8ec:	bl	406d94 <wcrtomb@plt+0x2174>
  40b8f0:	mov	x20, x0
  40b8f4:	mov	x2, #0x200                 	// #512
  40b8f8:	mov	w1, #0x0                   	// #0
  40b8fc:	bl	404420 <memset@plt>
  40b900:	mov	x2, x21
  40b904:	mov	x1, x22
  40b908:	add	x0, x20, #0x159
  40b90c:	bl	403f70 <memcpy@plt>
  40b910:	add	x1, x21, #0x1
  40b914:	mov	x2, x23
  40b918:	add	x1, x22, x1
  40b91c:	mov	x0, x20
  40b920:	bl	403f70 <memcpy@plt>
  40b924:	ldr	x23, [sp, #48]
  40b928:	b	40bdbc <wcrtomb@plt+0x719c>
  40b92c:	ldr	x23, [sp, #48]
  40b930:	b	40b804 <wcrtomb@plt+0x6be4>
  40b934:	str	x23, [sp, #48]
  40b938:	bl	404660 <abort@plt>
  40b93c:	mov	x2, #0x8                   	// #8
  40b940:	add	x1, x20, #0x64
  40b944:	ldr	w0, [x19, #104]
  40b948:	bl	40af74 <wcrtomb@plt+0x6354>
  40b94c:	b	40be44 <wcrtomb@plt+0x7224>
  40b950:	mov	x2, #0x0                   	// #0
  40b954:	mov	x1, x19
  40b958:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  40b95c:	add	x0, x0, #0x7e0
  40b960:	bl	413cf0 <wcrtomb@plt+0xf0d0>
  40b964:	mov	w1, #0x0                   	// #0
  40b968:	b	40be60 <wcrtomb@plt+0x7240>
  40b96c:	mov	x2, #0x0                   	// #0
  40b970:	mov	x1, x19
  40b974:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  40b978:	add	x0, x0, #0x7e8
  40b97c:	bl	413cf0 <wcrtomb@plt+0xf0d0>
  40b980:	mov	w1, #0x0                   	// #0
  40b984:	b	40beac <wcrtomb@plt+0x728c>
  40b988:	mov	x1, #0x1ffffffff           	// #8589934591
  40b98c:	cmp	x0, x1
  40b990:	b.ls	40bef0 <wcrtomb@plt+0x72d0>  // b.plast
  40b994:	mov	x2, #0x0                   	// #0
  40b998:	mov	x1, x19
  40b99c:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  40b9a0:	add	x0, x0, #0x7f0
  40b9a4:	bl	413cf0 <wcrtomb@plt+0xf0d0>
  40b9a8:	mov	x0, #0x0                   	// #0
  40b9ac:	b	40bef0 <wcrtomb@plt+0x72d0>
  40b9b0:	ldp	x0, x1, [x19, #232]
  40b9b4:	stp	x0, x1, [sp, #64]
  40b9b8:	b	40bf20 <wcrtomb@plt+0x7300>
  40b9bc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40b9c0:	add	x0, x0, #0x2d8
  40b9c4:	ldp	x0, x1, [x0]
  40b9c8:	stp	x0, x1, [sp, #64]
  40b9cc:	b	40bf20 <wcrtomb@plt+0x7300>
  40b9d0:	ldr	x1, [x19, #232]
  40b9d4:	ldr	x2, [x19, #240]
  40b9d8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40b9dc:	add	x3, x0, #0x2d8
  40b9e0:	ldr	x0, [x0, #728]
  40b9e4:	ldr	x3, [x3, #8]
  40b9e8:	cmp	x1, x0
  40b9ec:	b.lt	40ba14 <wcrtomb@plt+0x6df4>  // b.tstop
  40b9f0:	b.gt	40ba00 <wcrtomb@plt+0x6de0>
  40b9f4:	sub	w2, w2, w3
  40b9f8:	cmp	w2, #0x0
  40b9fc:	b.le	40ba14 <wcrtomb@plt+0x6df4>
  40ba00:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40ba04:	add	x0, x0, #0x2d8
  40ba08:	ldp	x0, x1, [x0]
  40ba0c:	stp	x0, x1, [sp, #64]
  40ba10:	b	40bf20 <wcrtomb@plt+0x7300>
  40ba14:	ldp	x0, x1, [x19, #232]
  40ba18:	stp	x0, x1, [sp, #64]
  40ba1c:	b	40bf20 <wcrtomb@plt+0x7300>
  40ba20:	ldr	x1, [sp, #64]
  40ba24:	mov	x0, #0x1ffffffff           	// #8589934591
  40ba28:	cmp	x1, x0
  40ba2c:	b.hi	40ba38 <wcrtomb@plt+0x6e18>  // b.pmore
  40ba30:	ldr	x0, [sp, #72]
  40ba34:	cbz	x0, 40bf30 <wcrtomb@plt+0x7310>
  40ba38:	add	x2, sp, #0x40
  40ba3c:	mov	x1, x19
  40ba40:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  40ba44:	add	x0, x0, #0x9d8
  40ba48:	bl	413cf0 <wcrtomb@plt+0xf0d0>
  40ba4c:	ldr	x1, [sp, #64]
  40ba50:	mov	x0, #0x1ffffffff           	// #8589934591
  40ba54:	cmp	x1, x0
  40ba58:	b.ls	40bf30 <wcrtomb@plt+0x7310>  // b.plast
  40ba5c:	str	xzr, [sp, #64]
  40ba60:	b	40bf30 <wcrtomb@plt+0x7310>
  40ba64:	mov	x20, #0x0                   	// #0
  40ba68:	b	40bd60 <wcrtomb@plt+0x7140>
  40ba6c:	mov	x2, #0x0                   	// #0
  40ba70:	mov	x1, x19
  40ba74:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  40ba78:	add	x0, x0, #0x7f8
  40ba7c:	bl	413cf0 <wcrtomb@plt+0xf0d0>
  40ba80:	mov	w0, #0x0                   	// #0
  40ba84:	b	40bf90 <wcrtomb@plt+0x7370>
  40ba88:	mov	x2, #0x0                   	// #0
  40ba8c:	mov	x1, x19
  40ba90:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  40ba94:	add	x0, x0, #0x808
  40ba98:	bl	413cf0 <wcrtomb@plt+0xf0d0>
  40ba9c:	mov	w0, #0x0                   	// #0
  40baa0:	b	40bfc0 <wcrtomb@plt+0x73a0>
  40baa4:	mov	x20, #0x0                   	// #0
  40baa8:	b	40bd60 <wcrtomb@plt+0x7140>
  40baac:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40bab0:	ldr	w0, [x0, #752]
  40bab4:	and	w0, w0, #0xfffffffb
  40bab8:	cmp	w0, #0x2
  40babc:	b.eq	40bfd4 <wcrtomb@plt+0x73b4>  // b.none
  40bac0:	mov	x2, #0x8                   	// #8
  40bac4:	add	x1, x20, #0x149
  40bac8:	mov	w0, #0x0                   	// #0
  40bacc:	bl	40afc4 <wcrtomb@plt+0x63a4>
  40bad0:	and	w0, w0, #0xff
  40bad4:	cbz	w0, 40bd8c <wcrtomb@plt+0x716c>
  40bad8:	mov	x2, #0x8                   	// #8
  40badc:	add	x1, x20, #0x151
  40bae0:	mov	w0, #0x0                   	// #0
  40bae4:	bl	40aff8 <wcrtomb@plt+0x63d8>
  40bae8:	and	w0, w0, #0xff
  40baec:	cbnz	w0, 40bfd4 <wcrtomb@plt+0x73b4>
  40baf0:	mov	x20, #0x0                   	// #0
  40baf4:	b	40bd60 <wcrtomb@plt+0x7140>
  40baf8:	mov	x2, #0x0                   	// #0
  40bafc:	mov	x1, x19
  40bb00:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  40bb04:	add	x0, x0, #0x818
  40bb08:	bl	413cf0 <wcrtomb@plt+0xf0d0>
  40bb0c:	mov	x2, #0x0                   	// #0
  40bb10:	mov	x1, x19
  40bb14:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  40bb18:	add	x0, x0, #0x820
  40bb1c:	bl	413cf0 <wcrtomb@plt+0xf0d0>
  40bb20:	b	40bffc <wcrtomb@plt+0x73dc>
  40bb24:	mov	x2, #0xc                   	// #12
  40bb28:	add	x1, x20, #0x159
  40bb2c:	ldr	x0, [x19, #216]
  40bb30:	bl	40b1b8 <wcrtomb@plt+0x6598>
  40bb34:	mov	x2, #0xc                   	// #12
  40bb38:	add	x1, x20, #0x165
  40bb3c:	ldr	x0, [x19, #248]
  40bb40:	bl	40b1b8 <wcrtomb@plt+0x6598>
  40bb44:	b	40bffc <wcrtomb@plt+0x73dc>
  40bb48:	cmp	w0, #0x2
  40bb4c:	b.ne	40bcbc <wcrtomb@plt+0x709c>  // b.any
  40bb50:	add	x0, x20, #0x101
  40bb54:	mov	x1, #0x7375                	// #29557
  40bb58:	movk	x1, #0x6174, lsl #16
  40bb5c:	movk	x1, #0x2072, lsl #32
  40bb60:	movk	x1, #0x20, lsl #48
  40bb64:	str	x1, [x0]
  40bb68:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40bb6c:	ldrb	w0, [x0, #608]
  40bb70:	cbnz	w0, 40bbdc <wcrtomb@plt+0x6fbc>
  40bb74:	ldr	x0, [sp, #88]
  40bb78:	cbz	x0, 40bcc4 <wcrtomb@plt+0x70a4>
  40bb7c:	bl	440154 <argp_parse@@Base+0xca14>
  40bb80:	str	x0, [x19, #32]
  40bb84:	ldr	x0, [sp, #80]
  40bb88:	cbz	x0, 40bcd4 <wcrtomb@plt+0x70b4>
  40bb8c:	bl	440154 <argp_parse@@Base+0xca14>
  40bb90:	str	x0, [x19, #40]
  40bb94:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40bb98:	ldr	w0, [x0, #752]
  40bb9c:	cmp	w0, #0x4
  40bba0:	b.eq	40bce4 <wcrtomb@plt+0x70c4>  // b.none
  40bba4:	mov	x2, #0x20                  	// #32
  40bba8:	ldr	x1, [x19, #32]
  40bbac:	add	x0, x20, #0x109
  40bbb0:	bl	40a778 <wcrtomb@plt+0x5b58>
  40bbb4:	strb	wzr, [x20, #296]
  40bbb8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40bbbc:	ldr	w0, [x0, #752]
  40bbc0:	cmp	w0, #0x4
  40bbc4:	b.eq	40bd20 <wcrtomb@plt+0x7100>  // b.none
  40bbc8:	mov	x2, #0x20                  	// #32
  40bbcc:	ldr	x1, [x19, #40]
  40bbd0:	add	x0, x20, #0x129
  40bbd4:	bl	40a778 <wcrtomb@plt+0x5b58>
  40bbd8:	strb	wzr, [x20, #328]
  40bbdc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40bbe0:	ldr	w0, [x0, #752]
  40bbe4:	cmp	w0, #0x4
  40bbe8:	b.ne	40bd60 <wcrtomb@plt+0x7140>  // b.any
  40bbec:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40bbf0:	ldr	w0, [x0, #832]
  40bbf4:	cmp	w0, #0x0
  40bbf8:	b.le	40bc34 <wcrtomb@plt+0x7014>
  40bbfc:	ldr	x0, [x19, #56]
  40bc00:	cbz	x0, 40bc18 <wcrtomb@plt+0x6ff8>
  40bc04:	mov	x2, #0x0                   	// #0
  40bc08:	mov	x1, x19
  40bc0c:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  40bc10:	add	x0, x0, #0x838
  40bc14:	bl	413cf0 <wcrtomb@plt+0xf0d0>
  40bc18:	ldr	x0, [x19, #72]
  40bc1c:	cbz	x0, 40bc34 <wcrtomb@plt+0x7014>
  40bc20:	mov	x2, #0x0                   	// #0
  40bc24:	mov	x1, x19
  40bc28:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  40bc2c:	add	x0, x0, #0x850
  40bc30:	bl	413cf0 <wcrtomb@plt+0xf0d0>
  40bc34:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40bc38:	ldr	w0, [x0, #920]
  40bc3c:	cmp	w0, #0x0
  40bc40:	b.le	40bc60 <wcrtomb@plt+0x7040>
  40bc44:	ldr	x0, [x19, #48]
  40bc48:	cbz	x0, 40bc60 <wcrtomb@plt+0x7040>
  40bc4c:	mov	x2, #0x0                   	// #0
  40bc50:	mov	x1, x19
  40bc54:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  40bc58:	add	x0, x0, #0x868
  40bc5c:	bl	413cf0 <wcrtomb@plt+0xf0d0>
  40bc60:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40bc64:	ldr	w0, [x0, #592]
  40bc68:	cmp	w0, #0x0
  40bc6c:	b.le	40bd60 <wcrtomb@plt+0x7140>
  40bc70:	str	xzr, [sp, #64]
  40bc74:	ldr	x21, [x19, #336]
  40bc78:	ldr	x0, [x19, #328]
  40bc7c:	cbz	x0, 40bd60 <wcrtomb@plt+0x7140>
  40bc80:	mov	x0, #0x0                   	// #0
  40bc84:	add	x0, x0, x0, lsl #1
  40bc88:	add	x2, sp, #0x40
  40bc8c:	mov	x1, x19
  40bc90:	ldr	x0, [x21, x0, lsl #3]
  40bc94:	bl	413cf0 <wcrtomb@plt+0xf0d0>
  40bc98:	ldr	x0, [sp, #64]
  40bc9c:	add	x0, x0, #0x1
  40bca0:	str	x0, [sp, #64]
  40bca4:	ldr	x1, [x19, #328]
  40bca8:	cmp	x0, x1
  40bcac:	b.cc	40bc84 <wcrtomb@plt+0x7064>  // b.lo, b.ul, b.last
  40bcb0:	b	40bd60 <wcrtomb@plt+0x7140>
  40bcb4:	cmp	w0, #0x6
  40bcb8:	b.eq	40bb50 <wcrtomb@plt+0x6f30>  // b.none
  40bcbc:	str	x23, [sp, #48]
  40bcc0:	bl	404660 <abort@plt>
  40bcc4:	add	x1, x19, #0x20
  40bcc8:	ldr	w0, [x19, #112]
  40bccc:	bl	41d250 <wcrtomb@plt+0x18630>
  40bcd0:	b	40bb84 <wcrtomb@plt+0x6f64>
  40bcd4:	add	x1, x19, #0x28
  40bcd8:	ldr	w0, [x19, #116]
  40bcdc:	bl	41d304 <wcrtomb@plt+0x186e4>
  40bce0:	b	40bb94 <wcrtomb@plt+0x6f74>
  40bce4:	ldr	x21, [x19, #32]
  40bce8:	mov	x0, x21
  40bcec:	bl	403ff0 <strlen@plt>
  40bcf0:	cmp	x0, #0x20
  40bcf4:	b.hi	40bd08 <wcrtomb@plt+0x70e8>  // b.pmore
  40bcf8:	mov	x0, x21
  40bcfc:	bl	427bac <wcrtomb@plt+0x22f8c>
  40bd00:	and	w0, w0, #0xff
  40bd04:	cbnz	w0, 40bba4 <wcrtomb@plt+0x6f84>
  40bd08:	mov	x2, #0x0                   	// #0
  40bd0c:	mov	x1, x19
  40bd10:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  40bd14:	add	x0, x0, #0x828
  40bd18:	bl	413cf0 <wcrtomb@plt+0xf0d0>
  40bd1c:	b	40bba4 <wcrtomb@plt+0x6f84>
  40bd20:	ldr	x21, [x19, #40]
  40bd24:	mov	x0, x21
  40bd28:	bl	403ff0 <strlen@plt>
  40bd2c:	cmp	x0, #0x20
  40bd30:	b.hi	40bd44 <wcrtomb@plt+0x7124>  // b.pmore
  40bd34:	mov	x0, x21
  40bd38:	bl	427bac <wcrtomb@plt+0x22f8c>
  40bd3c:	and	w0, w0, #0xff
  40bd40:	cbnz	w0, 40bbc8 <wcrtomb@plt+0x6fa8>
  40bd44:	mov	x2, #0x0                   	// #0
  40bd48:	mov	x1, x19
  40bd4c:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  40bd50:	add	x0, x0, #0x830
  40bd54:	bl	413cf0 <wcrtomb@plt+0xf0d0>
  40bd58:	b	40bbc8 <wcrtomb@plt+0x6fa8>
  40bd5c:	mov	x20, #0x0                   	// #0
  40bd60:	mov	x0, x20
  40bd64:	ldp	x19, x20, [sp, #16]
  40bd68:	ldp	x21, x22, [sp, #32]
  40bd6c:	ldp	x29, x30, [sp], #96
  40bd70:	ret
  40bd74:	mov	x20, #0x0                   	// #0
  40bd78:	b	40bd60 <wcrtomb@plt+0x7140>
  40bd7c:	mov	x20, #0x0                   	// #0
  40bd80:	b	40bd60 <wcrtomb@plt+0x7140>
  40bd84:	mov	x20, #0x0                   	// #0
  40bd88:	b	40bd60 <wcrtomb@plt+0x7140>
  40bd8c:	mov	x20, #0x0                   	// #0
  40bd90:	b	40bd60 <wcrtomb@plt+0x7140>
  40bd94:	strb	wzr, [x20, #156]
  40bd98:	b	40bd60 <wcrtomb@plt+0x7140>
  40bd9c:	ldr	x22, [x19, #8]
  40bda0:	mov	x0, x22
  40bda4:	bl	403ff0 <strlen@plt>
  40bda8:	cmp	x0, #0x63
  40bdac:	b.hi	40b864 <wcrtomb@plt+0x6c44>  // b.pmore
  40bdb0:	mov	x0, x19
  40bdb4:	bl	40a7dc <wcrtomb@plt+0x5bbc>
  40bdb8:	mov	x20, x0
  40bdbc:	cbz	x20, 40bd60 <wcrtomb@plt+0x7140>
  40bdc0:	add	x2, sp, #0x58
  40bdc4:	add	x1, x19, #0x70
  40bdc8:	ldr	w0, [x19, #112]
  40bdcc:	bl	41a424 <wcrtomb@plt+0x15804>
  40bdd0:	add	x2, sp, #0x50
  40bdd4:	add	x1, x19, #0x74
  40bdd8:	ldr	w0, [x19, #116]
  40bddc:	bl	41a4e8 <wcrtomb@plt+0x158c8>
  40bde0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40bde4:	ldr	x3, [x0, #536]
  40bde8:	cbz	x3, 40be1c <wcrtomb@plt+0x71fc>
  40bdec:	ldr	w21, [x19, #104]
  40bdf0:	and	w0, w21, #0xf000
  40bdf4:	cmp	w0, #0x4, lsl #12
  40bdf8:	mov	x4, #0x0                   	// #0
  40bdfc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40be00:	ldr	w2, [x0, #16]
  40be04:	cset	w1, eq  // eq = none
  40be08:	mov	w0, w21
  40be0c:	bl	43996c <argp_parse@@Base+0x622c>
  40be10:	and	w21, w21, #0xfffff000
  40be14:	orr	w21, w21, w0
  40be18:	str	w21, [x19, #104]
  40be1c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40be20:	ldr	w0, [x0, #752]
  40be24:	and	w0, w0, #0xfffffffd
  40be28:	cmp	w0, #0x1
  40be2c:	b.ne	40b93c <wcrtomb@plt+0x6d1c>  // b.any
  40be30:	ldr	w0, [x19, #104]
  40be34:	mov	x2, #0x8                   	// #8
  40be38:	add	x1, x20, #0x64
  40be3c:	and	w0, w0, #0xfff
  40be40:	bl	40af74 <wcrtomb@plt+0x6354>
  40be44:	ldr	w1, [x19, #112]
  40be48:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40be4c:	ldr	w0, [x0, #752]
  40be50:	cmp	w0, #0x4
  40be54:	mov	w0, #0x1fffff              	// #2097151
  40be58:	ccmp	w1, w0, #0x0, eq  // eq = none
  40be5c:	b.hi	40b950 <wcrtomb@plt+0x6d30>  // b.pmore
  40be60:	adrp	x6, 453000 <_obstack_memory_used@@Base+0x11e64>
  40be64:	add	x6, x6, #0x740
  40be68:	mov	x5, #0x8                   	// #8
  40be6c:	add	x4, x20, #0x6c
  40be70:	adrp	x3, 40a000 <wcrtomb@plt+0x53e0>
  40be74:	add	x3, x3, #0x838
  40be78:	mov	x2, #0x4                   	// #4
  40be7c:	mov	w1, w1
  40be80:	mov	w0, #0x0                   	// #0
  40be84:	bl	40abb8 <wcrtomb@plt+0x5f98>
  40be88:	and	w0, w0, #0xff
  40be8c:	cbz	w0, 40bd5c <wcrtomb@plt+0x713c>
  40be90:	ldr	w1, [x19, #116]
  40be94:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40be98:	ldr	w0, [x0, #752]
  40be9c:	cmp	w0, #0x4
  40bea0:	mov	w0, #0x1fffff              	// #2097151
  40bea4:	ccmp	w1, w0, #0x0, eq  // eq = none
  40bea8:	b.hi	40b96c <wcrtomb@plt+0x6d4c>  // b.pmore
  40beac:	adrp	x6, 453000 <_obstack_memory_used@@Base+0x11e64>
  40beb0:	add	x6, x6, #0x748
  40beb4:	mov	x5, #0x8                   	// #8
  40beb8:	add	x4, x20, #0x74
  40bebc:	adrp	x3, 40a000 <wcrtomb@plt+0x53e0>
  40bec0:	add	x3, x3, #0x898
  40bec4:	mov	x2, #0x4                   	// #4
  40bec8:	mov	w1, w1
  40becc:	mov	w0, #0x0                   	// #0
  40bed0:	bl	40abb8 <wcrtomb@plt+0x5f98>
  40bed4:	and	w0, w0, #0xff
  40bed8:	cbz	w0, 40bd74 <wcrtomb@plt+0x7154>
  40bedc:	ldr	x0, [x19, #136]
  40bee0:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  40bee4:	ldr	w1, [x1, #752]
  40bee8:	cmp	w1, #0x4
  40beec:	b.eq	40b988 <wcrtomb@plt+0x6d68>  // b.none
  40bef0:	mov	x2, #0xc                   	// #12
  40bef4:	add	x1, x20, #0x7c
  40bef8:	bl	40b184 <wcrtomb@plt+0x6564>
  40befc:	and	w0, w0, #0xff
  40bf00:	cbz	w0, 40bd7c <wcrtomb@plt+0x715c>
  40bf04:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40bf08:	ldr	w0, [x0, #4088]
  40bf0c:	cmp	w0, #0x1
  40bf10:	b.eq	40b9bc <wcrtomb@plt+0x6d9c>  // b.none
  40bf14:	cmp	w0, #0x2
  40bf18:	b.eq	40b9d0 <wcrtomb@plt+0x6db0>  // b.none
  40bf1c:	cbz	w0, 40b9b0 <wcrtomb@plt+0x6d90>
  40bf20:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40bf24:	ldr	w0, [x0, #752]
  40bf28:	cmp	w0, #0x4
  40bf2c:	b.eq	40ba20 <wcrtomb@plt+0x6e00>  // b.none
  40bf30:	mov	x2, #0xc                   	// #12
  40bf34:	add	x1, x20, #0x88
  40bf38:	ldr	x0, [sp, #64]
  40bf3c:	bl	40b1b8 <wcrtomb@plt+0x6598>
  40bf40:	and	w0, w0, #0xff
  40bf44:	cbz	w0, 40ba64 <wcrtomb@plt+0x6e44>
  40bf48:	ldr	w0, [x19, #104]
  40bf4c:	mov	w1, #0xb000                	// #45056
  40bf50:	and	w0, w0, w1
  40bf54:	cmp	w0, #0x2, lsl #12
  40bf58:	b.ne	40baac <wcrtomb@plt+0x6e8c>  // b.any
  40bf5c:	ldr	x1, [x19, #120]
  40bf60:	ubfx	w2, w1, #8, #12
  40bf64:	lsr	x0, x1, #32
  40bf68:	and	w0, w0, #0xfffff000
  40bf6c:	orr	w0, w0, w2
  40bf70:	lsr	x21, x1, #12
  40bf74:	bfxil	w21, w1, #0, #8
  40bf78:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  40bf7c:	ldr	w1, [x1, #752]
  40bf80:	cmp	w1, #0x4
  40bf84:	mov	w1, #0x1fffff              	// #2097151
  40bf88:	ccmp	w0, w1, #0x0, eq  // eq = none
  40bf8c:	b.hi	40ba6c <wcrtomb@plt+0x6e4c>  // b.pmore
  40bf90:	mov	x2, #0x8                   	// #8
  40bf94:	add	x1, x20, #0x149
  40bf98:	bl	40afc4 <wcrtomb@plt+0x63a4>
  40bf9c:	and	w0, w0, #0xff
  40bfa0:	cbz	w0, 40bd84 <wcrtomb@plt+0x7164>
  40bfa4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40bfa8:	ldr	w0, [x0, #752]
  40bfac:	cmp	w0, #0x4
  40bfb0:	mov	w0, #0x1fffff              	// #2097151
  40bfb4:	ccmp	w21, w0, #0x0, eq  // eq = none
  40bfb8:	b.hi	40ba88 <wcrtomb@plt+0x6e68>  // b.pmore
  40bfbc:	mov	w0, w21
  40bfc0:	mov	x2, #0x8                   	// #8
  40bfc4:	add	x1, x20, #0x151
  40bfc8:	bl	40aff8 <wcrtomb@plt+0x63d8>
  40bfcc:	and	w0, w0, #0xff
  40bfd0:	cbz	w0, 40baa4 <wcrtomb@plt+0x6e84>
  40bfd4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40bfd8:	ldr	w0, [x0, #752]
  40bfdc:	cmp	w0, #0x4
  40bfe0:	b.eq	40baf8 <wcrtomb@plt+0x6ed8>  // b.none
  40bfe4:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40bfe8:	ldrb	w1, [x1, #4065]
  40bfec:	cbz	w1, 40bffc <wcrtomb@plt+0x73dc>
  40bff0:	and	w0, w0, #0xfffffffb
  40bff4:	cmp	w0, #0x2
  40bff8:	b.eq	40bb24 <wcrtomb@plt+0x6f04>  // b.none
  40bffc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40c000:	ldr	w0, [x0, #752]
  40c004:	cmp	w0, #0x1
  40c008:	b.eq	40bd94 <wcrtomb@plt+0x7174>  // b.none
  40c00c:	mov	w1, #0x30                  	// #48
  40c010:	strb	w1, [x20, #156]
  40c014:	cmp	w0, #0x4
  40c018:	b.hi	40bcb4 <wcrtomb@plt+0x7094>  // b.pmore
  40c01c:	cmp	w0, #0x2
  40c020:	b.ls	40bb48 <wcrtomb@plt+0x6f28>  // b.plast
  40c024:	add	x1, x20, #0x101
  40c028:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x10e64>
  40c02c:	add	x0, x0, #0xde8
  40c030:	ldr	w2, [x0]
  40c034:	str	w2, [x1]
  40c038:	ldrh	w0, [x0, #4]
  40c03c:	strh	w0, [x1, #4]
  40c040:	add	x0, x20, #0x107
  40c044:	mov	w1, #0x3030                	// #12336
  40c048:	strh	w1, [x0]
  40c04c:	b	40bb68 <wcrtomb@plt+0x6f48>
  40c050:	stp	x29, x30, [sp, #-32]!
  40c054:	mov	x29, sp
  40c058:	stp	x19, x20, [sp, #16]
  40c05c:	mov	x19, x0
  40c060:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40c064:	ldr	w0, [x0, #752]
  40c068:	cmp	w0, #0x6
  40c06c:	b.hi	40c11c <wcrtomb@plt+0x74fc>  // b.pmore
  40c070:	mov	x1, #0x1                   	// #1
  40c074:	lsl	x1, x1, x0
  40c078:	mov	x0, #0x2a                  	// #42
  40c07c:	tst	x1, x0
  40c080:	b.ne	40c0ac <wcrtomb@plt+0x748c>  // b.any
  40c084:	mov	x0, #0x44                  	// #68
  40c088:	tst	x1, x0
  40c08c:	b.ne	40c108 <wcrtomb@plt+0x74e8>  // b.any
  40c090:	tbz	w1, #4, 40c11c <wcrtomb@plt+0x74fc>
  40c094:	mov	x2, #0x0                   	// #0
  40c098:	mov	x1, x19
  40c09c:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  40c0a0:	add	x0, x0, #0x880
  40c0a4:	bl	413cf0 <wcrtomb@plt+0xf0d0>
  40c0a8:	b	40c0fc <wcrtomb@plt+0x74dc>
  40c0ac:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40c0b0:	ldr	x0, [x0, #944]
  40c0b4:	cbz	x0, 40c0bc <wcrtomb@plt+0x749c>
  40c0b8:	blr	x0
  40c0bc:	mov	w2, #0x5                   	// #5
  40c0c0:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40c0c4:	add	x1, x1, #0x890
  40c0c8:	mov	x0, #0x0                   	// #0
  40c0cc:	bl	4049c0 <dcgettext@plt>
  40c0d0:	mov	x20, x0
  40c0d4:	ldr	x0, [x19, #24]
  40c0d8:	bl	43efc4 <argp_parse@@Base+0xb884>
  40c0dc:	mov	x3, x0
  40c0e0:	mov	x2, x20
  40c0e4:	mov	w1, #0x0                   	// #0
  40c0e8:	mov	w0, #0x0                   	// #0
  40c0ec:	bl	404050 <error@plt>
  40c0f0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40c0f4:	mov	w1, #0x2                   	// #2
  40c0f8:	str	w1, [x0, #3392]
  40c0fc:	ldp	x19, x20, [sp, #16]
  40c100:	ldp	x29, x30, [sp], #32
  40c104:	ret
  40c108:	mov	w2, #0x4b                  	// #75
  40c10c:	ldr	x1, [x19, #24]
  40c110:	mov	x0, x19
  40c114:	bl	40b530 <wcrtomb@plt+0x6910>
  40c118:	b	40c0fc <wcrtomb@plt+0x74dc>
  40c11c:	bl	404660 <abort@plt>
  40c120:	cmp	x0, #0x0
  40c124:	b.le	40c188 <wcrtomb@plt+0x7568>
  40c128:	stp	x29, x30, [sp, #-48]!
  40c12c:	mov	x29, sp
  40c130:	stp	x19, x20, [sp, #16]
  40c134:	stp	x21, x22, [sp, #32]
  40c138:	mov	x20, x0
  40c13c:	sub	x21, x0, #0x200
  40c140:	sub	x0, x0, #0x1
  40c144:	and	x0, x0, #0xfffffffffffffe00
  40c148:	sub	x21, x21, x0
  40c14c:	mov	x22, #0x200                 	// #512
  40c150:	bl	406d94 <wcrtomb@plt+0x2174>
  40c154:	mov	x19, x0
  40c158:	mov	x2, x22
  40c15c:	mov	w1, #0x0                   	// #0
  40c160:	bl	404420 <memset@plt>
  40c164:	mov	x0, x19
  40c168:	bl	405884 <wcrtomb@plt+0xc64>
  40c16c:	sub	x20, x20, #0x200
  40c170:	cmp	x20, x21
  40c174:	b.ne	40c150 <wcrtomb@plt+0x7530>  // b.any
  40c178:	ldp	x19, x20, [sp, #16]
  40c17c:	ldp	x21, x22, [sp, #32]
  40c180:	ldp	x29, x30, [sp], #48
  40c184:	ret
  40c188:	ret
  40c18c:	stp	x29, x30, [sp, #-128]!
  40c190:	mov	x29, sp
  40c194:	stp	x19, x20, [sp, #16]
  40c198:	stp	x23, x24, [sp, #48]
  40c19c:	mov	w23, w0
  40c1a0:	mov	x24, x1
  40c1a4:	ldr	x20, [x1, #136]
  40c1a8:	bl	405818 <wcrtomb@plt+0xbf8>
  40c1ac:	mov	x19, x0
  40c1b0:	mov	x0, x24
  40c1b4:	bl	40b6a4 <wcrtomb@plt+0x6a84>
  40c1b8:	cbz	x0, 40c3a4 <wcrtomb@plt+0x7784>
  40c1bc:	stp	x21, x22, [sp, #32]
  40c1c0:	stp	x25, x26, [sp, #64]
  40c1c4:	stp	x27, x28, [sp, #80]
  40c1c8:	mov	x1, x0
  40c1cc:	mov	x2, x19
  40c1d0:	mov	x0, x24
  40c1d4:	bl	40b4b0 <wcrtomb@plt+0x6890>
  40c1d8:	ldr	x1, [x24, #136]
  40c1dc:	mov	x2, x1
  40c1e0:	ldr	x0, [x24, #8]
  40c1e4:	bl	405324 <wcrtomb@plt+0x704>
  40c1e8:	mov	x25, #0x200                 	// #512
  40c1ec:	b	40c228 <wcrtomb@plt+0x7608>
  40c1f0:	sub	x2, x25, x2
  40c1f4:	mov	w1, #0x0                   	// #0
  40c1f8:	add	x0, x21, x20
  40c1fc:	bl	404420 <memset@plt>
  40c200:	b	40c254 <wcrtomb@plt+0x7634>
  40c204:	cmp	w23, #0x0
  40c208:	b.gt	40c264 <wcrtomb@plt+0x7644>
  40c20c:	cmn	x0, #0x1
  40c210:	b.eq	40c348 <wcrtomb@plt+0x7728>  // b.none
  40c214:	sub	x20, x22, x19
  40c218:	sub	x19, x19, #0x1
  40c21c:	and	x19, x19, #0xfffffffffffffe00
  40c220:	add	x0, x21, x19
  40c224:	bl	405884 <wcrtomb@plt+0xc64>
  40c228:	cmp	x20, #0x0
  40c22c:	b.le	40c384 <wcrtomb@plt+0x7764>
  40c230:	bl	406d94 <wcrtomb@plt+0x2174>
  40c234:	mov	x21, x0
  40c238:	bl	405974 <wcrtomb@plt+0xd54>
  40c23c:	mov	x19, x0
  40c240:	mov	x22, x20
  40c244:	cmp	x20, x0
  40c248:	b.cs	40c204 <wcrtomb@plt+0x75e4>  // b.hs, b.nlast
  40c24c:	ands	x2, x20, #0x1ff
  40c250:	b.ne	40c1f0 <wcrtomb@plt+0x75d0>  // b.any
  40c254:	mov	x19, x22
  40c258:	cmp	w23, #0x0
  40c25c:	b.le	40c214 <wcrtomb@plt+0x75f4>
  40c260:	mov	x19, x22
  40c264:	mov	x2, x19
  40c268:	mov	x1, x21
  40c26c:	mov	w0, w23
  40c270:	bl	41b4e0 <wcrtomb@plt+0x168c0>
  40c274:	mov	x26, x0
  40c278:	cmn	x0, #0x1
  40c27c:	b.eq	40c348 <wcrtomb@plt+0x7728>  // b.none
  40c280:	sub	x27, x22, x0
  40c284:	mov	x20, x27
  40c288:	sub	x0, x19, #0x1
  40c28c:	and	x0, x0, #0xfffffffffffffe00
  40c290:	add	x0, x21, x0
  40c294:	bl	405884 <wcrtomb@plt+0xc64>
  40c298:	cmp	x26, x19
  40c29c:	b.eq	40c228 <wcrtomb@plt+0x7608>  // b.none
  40c2a0:	sub	x2, x19, x26
  40c2a4:	mov	w1, #0x0                   	// #0
  40c2a8:	add	x0, x21, x26
  40c2ac:	bl	404420 <memset@plt>
  40c2b0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40c2b4:	ldr	w0, [x0, #408]
  40c2b8:	tbz	w0, #7, 40c320 <wcrtomb@plt+0x7700>
  40c2bc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40c2c0:	ldr	x0, [x0, #944]
  40c2c4:	cbz	x0, 40c2cc <wcrtomb@plt+0x76ac>
  40c2c8:	blr	x0
  40c2cc:	mov	w4, #0x5                   	// #5
  40c2d0:	mov	x3, x27
  40c2d4:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x11e64>
  40c2d8:	add	x2, x2, #0x8b8
  40c2dc:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40c2e0:	add	x1, x1, #0x8e8
  40c2e4:	mov	x0, #0x0                   	// #0
  40c2e8:	bl	4048f0 <dcngettext@plt>
  40c2ec:	mov	x20, x0
  40c2f0:	ldr	x0, [x24]
  40c2f4:	bl	43efc4 <argp_parse@@Base+0xb884>
  40c2f8:	mov	x21, x0
  40c2fc:	add	x1, sp, #0x68
  40c300:	mov	x0, x27
  40c304:	bl	438ce8 <argp_parse@@Base+0x55a8>
  40c308:	mov	x4, x0
  40c30c:	mov	x3, x21
  40c310:	mov	x2, x20
  40c314:	mov	w1, #0x0                   	// #0
  40c318:	mov	w0, #0x0                   	// #0
  40c31c:	bl	404050 <error@plt>
  40c320:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40c324:	ldrb	w0, [x0, #889]
  40c328:	cbz	w0, 40c378 <wcrtomb@plt+0x7758>
  40c32c:	sub	x0, x22, x19
  40c330:	bl	40c120 <wcrtomb@plt+0x7500>
  40c334:	mov	w0, #0x1                   	// #1
  40c338:	ldp	x21, x22, [sp, #32]
  40c33c:	ldp	x25, x26, [sp, #64]
  40c340:	ldp	x27, x28, [sp, #80]
  40c344:	b	40c394 <wcrtomb@plt+0x7774>
  40c348:	ldr	x1, [x24, #136]
  40c34c:	mov	x2, x19
  40c350:	sub	x1, x1, x20
  40c354:	ldr	x0, [x24]
  40c358:	bl	41b844 <wcrtomb@plt+0x16c24>
  40c35c:	mov	x0, x20
  40c360:	bl	40c120 <wcrtomb@plt+0x7500>
  40c364:	mov	w0, #0x1                   	// #1
  40c368:	ldp	x21, x22, [sp, #32]
  40c36c:	ldp	x25, x26, [sp, #64]
  40c370:	ldp	x27, x28, [sp, #80]
  40c374:	b	40c394 <wcrtomb@plt+0x7774>
  40c378:	mov	w0, #0x1                   	// #1
  40c37c:	bl	424a80 <wcrtomb@plt+0x1fe60>
  40c380:	b	40c32c <wcrtomb@plt+0x770c>
  40c384:	mov	w0, #0x0                   	// #0
  40c388:	ldp	x21, x22, [sp, #32]
  40c38c:	ldp	x25, x26, [sp, #64]
  40c390:	ldp	x27, x28, [sp, #80]
  40c394:	ldp	x19, x20, [sp, #16]
  40c398:	ldp	x23, x24, [sp, #48]
  40c39c:	ldp	x29, x30, [sp], #128
  40c3a0:	ret
  40c3a4:	mov	w0, #0x2                   	// #2
  40c3a8:	b	40c394 <wcrtomb@plt+0x7774>
  40c3ac:	stp	x29, x30, [sp, #-32]!
  40c3b0:	mov	x29, sp
  40c3b4:	stp	x19, x20, [sp, #16]
  40c3b8:	mov	x20, x0
  40c3bc:	ldr	w0, [x20, #408]
  40c3c0:	bl	404620 <fdopendir@plt>
  40c3c4:	mov	x19, x0
  40c3c8:	str	x0, [x20, #400]
  40c3cc:	cbnz	x0, 40c3e4 <wcrtomb@plt+0x77c4>
  40c3d0:	mov	x0, x20
  40c3d4:	bl	40a8fc <wcrtomb@plt+0x5cdc>
  40c3d8:	and	w0, w0, #0xff
  40c3dc:	cbnz	w0, 40c3bc <wcrtomb@plt+0x779c>
  40c3e0:	b	40c3f8 <wcrtomb@plt+0x77d8>
  40c3e4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40c3e8:	ldr	w1, [x0, #456]
  40c3ec:	mov	x0, x19
  40c3f0:	bl	43f604 <argp_parse@@Base+0xbec4>
  40c3f4:	mov	x19, x0
  40c3f8:	mov	x0, x19
  40c3fc:	ldp	x19, x20, [sp, #16]
  40c400:	ldp	x29, x30, [sp], #32
  40c404:	ret
  40c408:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40c40c:	ldr	x0, [x0, #1920]
  40c410:	cbz	x0, 40c4c0 <wcrtomb@plt+0x78a0>
  40c414:	stp	x29, x30, [sp, #-64]!
  40c418:	mov	x29, sp
  40c41c:	stp	x19, x20, [sp, #16]
  40c420:	bl	437a80 <argp_parse@@Base+0x4340>
  40c424:	mov	x19, x0
  40c428:	cbz	x0, 40c4b4 <wcrtomb@plt+0x7894>
  40c42c:	stp	x21, x22, [sp, #32]
  40c430:	stp	x23, x24, [sp, #48]
  40c434:	adrp	x24, 481000 <argp_program_version_hook@@Base+0x298>
  40c438:	adrp	x22, 453000 <_obstack_memory_used@@Base+0x11e64>
  40c43c:	add	x22, x22, #0x918
  40c440:	mov	w23, #0x5                   	// #5
  40c444:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40c448:	add	x21, x21, #0x770
  40c44c:	b	40c494 <wcrtomb@plt+0x7874>
  40c450:	mov	w2, w23
  40c454:	mov	x1, x22
  40c458:	mov	x0, #0x0                   	// #0
  40c45c:	bl	4049c0 <dcgettext@plt>
  40c460:	mov	x20, x0
  40c464:	add	x0, x19, #0x14
  40c468:	bl	43f194 <argp_parse@@Base+0xba54>
  40c46c:	mov	x3, x0
  40c470:	mov	x2, x20
  40c474:	mov	w1, #0x0                   	// #0
  40c478:	mov	w0, #0x0                   	// #0
  40c47c:	bl	404050 <error@plt>
  40c480:	mov	x1, x19
  40c484:	ldr	x0, [x21, #16]
  40c488:	bl	437ac0 <argp_parse@@Base+0x4380>
  40c48c:	mov	x19, x0
  40c490:	cbz	x0, 40c4ac <wcrtomb@plt+0x788c>
  40c494:	ldr	w0, [x19, #16]
  40c498:	cbz	w0, 40c480 <wcrtomb@plt+0x7860>
  40c49c:	ldr	x0, [x24, #944]
  40c4a0:	cbz	x0, 40c450 <wcrtomb@plt+0x7830>
  40c4a4:	blr	x0
  40c4a8:	b	40c450 <wcrtomb@plt+0x7830>
  40c4ac:	ldp	x21, x22, [sp, #32]
  40c4b0:	ldp	x23, x24, [sp, #48]
  40c4b4:	ldp	x19, x20, [sp, #16]
  40c4b8:	ldp	x29, x30, [sp], #64
  40c4bc:	ret
  40c4c0:	ret
  40c4c4:	stp	x29, x30, [sp, #-64]!
  40c4c8:	mov	x29, sp
  40c4cc:	stp	x19, x20, [sp, #16]
  40c4d0:	stp	x21, x22, [sp, #32]
  40c4d4:	str	x23, [sp, #48]
  40c4d8:	mov	x19, x0
  40c4dc:	mov	x22, x1
  40c4e0:	mov	w23, w2
  40c4e4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40c4e8:	ldrb	w0, [x0, #1960]
  40c4ec:	cbz	w0, 40c544 <wcrtomb@plt+0x7924>
  40c4f0:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x3be64>
  40c4f4:	add	x21, x21, #0x888
  40c4f8:	add	x3, x19, #0x198
  40c4fc:	cmp	x19, #0x0
  40c500:	csel	x3, x3, x21, ne  // ne = any
  40c504:	ldr	w0, [x3]
  40c508:	mov	w2, w23
  40c50c:	mov	x1, x22
  40c510:	bl	4045c0 <__openat_2@plt>
  40c514:	mov	w20, w0
  40c518:	tbz	w0, #31, 40c52c <wcrtomb@plt+0x790c>
  40c51c:	mov	x0, x19
  40c520:	bl	40a8fc <wcrtomb@plt+0x5cdc>
  40c524:	and	w0, w0, #0xff
  40c528:	cbnz	w0, 40c4f8 <wcrtomb@plt+0x78d8>
  40c52c:	mov	w0, w20
  40c530:	ldp	x19, x20, [sp, #16]
  40c534:	ldp	x21, x22, [sp, #32]
  40c538:	ldr	x23, [sp, #48]
  40c53c:	ldp	x29, x30, [sp], #64
  40c540:	ret
  40c544:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40c548:	mov	w1, #0x1                   	// #1
  40c54c:	strb	w1, [x0, #1960]
  40c550:	mov	w0, #0x2                   	// #2
  40c554:	bl	4045b0 <strerror@plt>
  40c558:	mov	w2, #0x5                   	// #5
  40c55c:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  40c560:	add	x1, x1, #0x7f8
  40c564:	mov	x0, #0x0                   	// #0
  40c568:	bl	4049c0 <dcgettext@plt>
  40c56c:	b	40c4f0 <wcrtomb@plt+0x78d0>
  40c570:	stp	x29, x30, [sp, #-64]!
  40c574:	mov	x29, sp
  40c578:	stp	x19, x20, [sp, #16]
  40c57c:	stp	x21, x22, [sp, #32]
  40c580:	mov	x22, x0
  40c584:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40c588:	ldr	x20, [x0, #1936]
  40c58c:	cbz	x20, 40c614 <wcrtomb@plt+0x79f4>
  40c590:	stp	x23, x24, [sp, #48]
  40c594:	mov	x24, x1
  40c598:	adrp	x23, 481000 <argp_program_version_hook@@Base+0x298>
  40c59c:	add	x23, x23, #0x284
  40c5a0:	b	40c5c0 <wcrtomb@plt+0x79a0>
  40c5a4:	blr	x2
  40c5a8:	and	w21, w0, #0xff
  40c5ac:	mov	w0, w19
  40c5b0:	bl	4045d0 <close@plt>
  40c5b4:	cbnz	w21, 40c5e4 <wcrtomb@plt+0x79c4>
  40c5b8:	ldr	x20, [x20, #32]
  40c5bc:	cbz	x20, 40c5fc <wcrtomb@plt+0x79dc>
  40c5c0:	ldr	w2, [x23]
  40c5c4:	ldr	x1, [x20]
  40c5c8:	mov	x0, x22
  40c5cc:	bl	40c4c4 <wcrtomb@plt+0x78a4>
  40c5d0:	mov	w19, w0
  40c5d4:	tbnz	w0, #31, 40c5b8 <wcrtomb@plt+0x7998>
  40c5d8:	ldr	x2, [x20, #24]
  40c5dc:	cbnz	x2, 40c5a4 <wcrtomb@plt+0x7984>
  40c5e0:	bl	4045d0 <close@plt>
  40c5e4:	cbz	x24, 40c5f0 <wcrtomb@plt+0x79d0>
  40c5e8:	ldr	x0, [x20]
  40c5ec:	str	x0, [x24]
  40c5f0:	ldr	w0, [x20, #16]
  40c5f4:	ldp	x23, x24, [sp, #48]
  40c5f8:	b	40c604 <wcrtomb@plt+0x79e4>
  40c5fc:	mov	w0, #0x0                   	// #0
  40c600:	ldp	x23, x24, [sp, #48]
  40c604:	ldp	x19, x20, [sp, #16]
  40c608:	ldp	x21, x22, [sp, #32]
  40c60c:	ldp	x29, x30, [sp], #64
  40c610:	ret
  40c614:	mov	w0, #0x0                   	// #0
  40c618:	b	40c604 <wcrtomb@plt+0x79e4>
  40c61c:	stp	x29, x30, [sp, #-176]!
  40c620:	mov	x29, sp
  40c624:	stp	x19, x20, [sp, #16]
  40c628:	ldr	x19, [x0, #392]
  40c62c:	cbz	x19, 40c6cc <wcrtomb@plt+0x7aac>
  40c630:	ldr	w1, [x19, #408]
  40c634:	cbnz	w1, 40c6cc <wcrtomb@plt+0x7aac>
  40c638:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  40c63c:	ldr	w2, [x1, #636]
  40c640:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x16e64>
  40c644:	add	x1, x1, #0xaf8
  40c648:	ldr	w0, [x0, #408]
  40c64c:	bl	4045c0 <__openat_2@plt>
  40c650:	mov	w20, w0
  40c654:	tbz	w0, #31, 40c698 <wcrtomb@plt+0x7a78>
  40c658:	bl	404ad0 <__errno_location@plt>
  40c65c:	ldr	w0, [x0]
  40c660:	neg	w20, w0
  40c664:	cmp	w0, #0x0
  40c668:	b.le	40c6c8 <wcrtomb@plt+0x7aa8>
  40c66c:	str	x21, [sp, #32]
  40c670:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40c674:	ldr	w2, [x0, #636]
  40c678:	ldr	x1, [x19]
  40c67c:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  40c680:	ldr	w0, [x0, #2184]
  40c684:	bl	4045c0 <__openat_2@plt>
  40c688:	mov	w21, w0
  40c68c:	tbz	w0, #31, 40c6ec <wcrtomb@plt+0x7acc>
  40c690:	ldr	x21, [sp, #32]
  40c694:	b	40c6c8 <wcrtomb@plt+0x7aa8>
  40c698:	add	x2, sp, #0x30
  40c69c:	mov	w1, w0
  40c6a0:	mov	w0, #0x0                   	// #0
  40c6a4:	bl	4049a0 <__fxstat@plt>
  40c6a8:	cbnz	w0, 40c6bc <wcrtomb@plt+0x7a9c>
  40c6ac:	ldr	x1, [x19, #96]
  40c6b0:	ldr	x0, [sp, #56]
  40c6b4:	cmp	x1, x0
  40c6b8:	b.eq	40c6d8 <wcrtomb@plt+0x7ab8>  // b.none
  40c6bc:	mov	w0, w20
  40c6c0:	bl	4045d0 <close@plt>
  40c6c4:	mov	w20, #0x2                   	// #2
  40c6c8:	str	w20, [x19, #408]
  40c6cc:	ldp	x19, x20, [sp, #16]
  40c6d0:	ldp	x29, x30, [sp], #176
  40c6d4:	ret
  40c6d8:	ldr	x1, [x19, #88]
  40c6dc:	ldr	x0, [sp, #48]
  40c6e0:	cmp	x1, x0
  40c6e4:	b.ne	40c6bc <wcrtomb@plt+0x7a9c>  // b.any
  40c6e8:	b	40c6c8 <wcrtomb@plt+0x7aa8>
  40c6ec:	add	x2, sp, #0x30
  40c6f0:	mov	w1, w20
  40c6f4:	mov	w0, #0x0                   	// #0
  40c6f8:	bl	4049a0 <__fxstat@plt>
  40c6fc:	cbnz	w0, 40c710 <wcrtomb@plt+0x7af0>
  40c700:	ldr	x1, [x19, #96]
  40c704:	ldr	x0, [sp, #56]
  40c708:	cmp	x1, x0
  40c70c:	b.eq	40c720 <wcrtomb@plt+0x7b00>  // b.none
  40c710:	mov	w0, w21
  40c714:	bl	4045d0 <close@plt>
  40c718:	ldr	x21, [sp, #32]
  40c71c:	b	40c6c8 <wcrtomb@plt+0x7aa8>
  40c720:	ldr	x1, [x19, #88]
  40c724:	ldr	x0, [sp, #48]
  40c728:	cmp	x1, x0
  40c72c:	b.ne	40c710 <wcrtomb@plt+0x7af0>  // b.any
  40c730:	mov	w20, w21
  40c734:	ldr	x21, [sp, #32]
  40c738:	b	40c6c8 <wcrtomb@plt+0x7aa8>
  40c73c:	sub	sp, sp, #0x2d0
  40c740:	stp	x29, x30, [sp]
  40c744:	mov	x29, sp
  40c748:	stp	x19, x20, [sp, #16]
  40c74c:	stp	x21, x22, [sp, #32]
  40c750:	stp	x23, x24, [sp, #48]
  40c754:	mov	x19, x0
  40c758:	mov	x22, x1
  40c75c:	mov	x20, x2
  40c760:	add	x0, sp, #0x128
  40c764:	bl	42491c <wcrtomb@plt+0x1fcfc>
  40c768:	str	x19, [sp, #688]
  40c76c:	cmp	x19, #0x0
  40c770:	cset	w23, eq  // eq = none
  40c774:	cbz	x19, 40c830 <wcrtomb@plt+0x7c10>
  40c778:	ldr	w21, [x19, #408]
  40c77c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40c780:	ldrb	w0, [x0, #528]
  40c784:	cbnz	w0, 40d858 <wcrtomb@plt+0x8c38>
  40c788:	mov	x1, x20
  40c78c:	add	x0, sp, #0x128
  40c790:	bl	41a5bc <wcrtomb@plt+0x1599c>
  40c794:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40c798:	ldrb	w2, [x0, #888]
  40c79c:	mov	w1, #0x0                   	// #0
  40c7a0:	mov	x0, x20
  40c7a4:	bl	42a2dc <wcrtomb@plt+0x256bc>
  40c7a8:	add	x24, sp, #0x130
  40c7ac:	mov	x1, x0
  40c7b0:	mov	x0, x24
  40c7b4:	bl	41a5bc <wcrtomb@plt+0x1599c>
  40c7b8:	mov	w1, #0x1                   	// #1
  40c7bc:	mov	x0, x24
  40c7c0:	bl	427104 <wcrtomb@plt+0x224e4>
  40c7c4:	cmp	x19, #0x0
  40c7c8:	cset	w24, ne  // ne = any
  40c7cc:	cmp	w21, #0x0
  40c7d0:	ccmp	w24, #0x0, #0x4, lt  // lt = tstop
  40c7d4:	b.eq	40c8a0 <wcrtomb@plt+0x7c80>  // b.none
  40c7d8:	bl	404ad0 <__errno_location@plt>
  40c7dc:	neg	w21, w21
  40c7e0:	str	w21, [x0]
  40c7e4:	adrp	x2, 41b000 <wcrtomb@plt+0x163e0>
  40c7e8:	add	x2, x2, #0x80c
  40c7ec:	mov	w1, w23
  40c7f0:	mov	x0, x20
  40c7f4:	bl	41b95c <wcrtomb@plt+0x16d3c>
  40c7f8:	cbz	x19, 40c810 <wcrtomb@plt+0x7bf0>
  40c7fc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40c800:	ldr	x0, [x0, #768]
  40c804:	cbz	x0, 40c810 <wcrtomb@plt+0x7bf0>
  40c808:	mov	x0, x19
  40c80c:	bl	4158bc <wcrtomb@plt+0x10c9c>
  40c810:	add	x0, sp, #0x128
  40c814:	bl	4249a8 <wcrtomb@plt+0x1fd88>
  40c818:	ldp	x19, x20, [sp, #16]
  40c81c:	ldp	x21, x22, [sp, #32]
  40c820:	ldp	x23, x24, [sp, #48]
  40c824:	ldp	x29, x30, [sp]
  40c828:	add	sp, sp, #0x2d0
  40c82c:	ret
  40c830:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  40c834:	ldr	w21, [x0, #2184]
  40c838:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40c83c:	ldrb	w24, [x0, #528]
  40c840:	cbz	w24, 40c85c <wcrtomb@plt+0x7c3c>
  40c844:	mov	x1, x20
  40c848:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  40c84c:	add	x0, x0, #0xa30
  40c850:	bl	422bb4 <wcrtomb@plt+0x1df94>
  40c854:	cbnz	w0, 40c788 <wcrtomb@plt+0x7b68>
  40c858:	b	40c810 <wcrtomb@plt+0x7bf0>
  40c85c:	stp	x25, x26, [sp, #64]
  40c860:	mov	x1, x20
  40c864:	add	x0, sp, #0x128
  40c868:	bl	41a5bc <wcrtomb@plt+0x1599c>
  40c86c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40c870:	ldrb	w2, [x0, #888]
  40c874:	mov	w1, #0x0                   	// #0
  40c878:	mov	x0, x20
  40c87c:	bl	42a2dc <wcrtomb@plt+0x256bc>
  40c880:	add	x25, sp, #0x130
  40c884:	mov	x1, x0
  40c888:	mov	x0, x25
  40c88c:	bl	41a5bc <wcrtomb@plt+0x1599c>
  40c890:	mov	w1, #0x1                   	// #1
  40c894:	mov	x0, x25
  40c898:	bl	427104 <wcrtomb@plt+0x224e4>
  40c89c:	ldp	x25, x26, [sp, #64]
  40c8a0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40c8a4:	ldr	w4, [x0, #496]
  40c8a8:	add	x3, sp, #0x180
  40c8ac:	mov	x2, x22
  40c8b0:	mov	w1, w21
  40c8b4:	mov	w0, #0x0                   	// #0
  40c8b8:	bl	404c00 <__fxstatat@plt>
  40c8bc:	str	w0, [sp, #112]
  40c8c0:	cbnz	w0, 40c9d8 <wcrtomb@plt+0x7db8>
  40c8c4:	stp	x25, x26, [sp, #64]
  40c8c8:	stp	x27, x28, [sp, #80]
  40c8cc:	ldr	w1, [sp, #400]
  40c8d0:	and	w0, w1, #0xf000
  40c8d4:	cmp	w0, #0x4, lsl #12
  40c8d8:	b.eq	40c97c <wcrtomb@plt+0x7d5c>  // b.none
  40c8dc:	cmp	w0, #0x8, lsl #12
  40c8e0:	b.ne	40c9e4 <wcrtomb@plt+0x7dc4>  // b.any
  40c8e4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40c8e8:	ldrb	w0, [x0, #472]
  40c8ec:	cbnz	w0, 40c910 <wcrtomb@plt+0x7cf0>
  40c8f0:	ldr	x2, [sp, #432]
  40c8f4:	mov	w0, #0x1                   	// #1
  40c8f8:	cbnz	x2, 40c970 <wcrtomb@plt+0x7d50>
  40c8fc:	mov	w0, #0x124                 	// #292
  40c900:	and	w1, w1, w0
  40c904:	cmp	w1, w0
  40c908:	cset	w0, ne  // ne = any
  40c90c:	b	40c970 <wcrtomb@plt+0x7d50>
  40c910:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40c914:	ldrb	w1, [x0, #633]
  40c918:	ldr	w2, [sp, #112]
  40c91c:	mov	w0, w2
  40c920:	cbz	w1, 40c96c <wcrtomb@plt+0x7d4c>
  40c924:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40c928:	ldrb	w1, [x0, #848]
  40c92c:	mov	w0, w2
  40c930:	cbz	w1, 40c96c <wcrtomb@plt+0x7d4c>
  40c934:	ldr	x3, [sp, #448]
  40c938:	ldr	x0, [sp, #432]
  40c93c:	add	x1, x0, #0x1ff
  40c940:	cmp	x0, #0x0
  40c944:	csel	x1, x1, x0, lt  // lt = tstop
  40c948:	asr	x1, x1, #9
  40c94c:	tst	x0, #0x1ff
  40c950:	b.eq	40c960 <wcrtomb@plt+0x7d40>  // b.none
  40c954:	add	x0, x0, #0x1ff
  40c958:	cmp	x0, #0x3fe
  40c95c:	cset	w2, hi  // hi = pmore
  40c960:	add	x1, x1, w2, sxtw
  40c964:	cmp	x3, x1
  40c968:	cset	w0, lt  // lt = tstop
  40c96c:	and	w0, w0, #0x1
  40c970:	ldr	w1, [sp, #112]
  40c974:	str	w1, [sp, #104]
  40c978:	cbz	w0, 40c9ec <wcrtomb@plt+0x7dcc>
  40c97c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40c980:	ldr	w2, [x0, #644]
  40c984:	mov	x1, x22
  40c988:	mov	x0, x19
  40c98c:	bl	40c4c4 <wcrtomb@plt+0x78a4>
  40c990:	str	w0, [sp, #104]
  40c994:	adrp	x2, 41b000 <wcrtomb@plt+0x163e0>
  40c998:	add	x2, x2, #0x80c
  40c99c:	tbz	w0, #31, 40c9ac <wcrtomb@plt+0x7d8c>
  40c9a0:	ldp	x25, x26, [sp, #64]
  40c9a4:	ldp	x27, x28, [sp, #80]
  40c9a8:	b	40c7ec <wcrtomb@plt+0x7bcc>
  40c9ac:	str	w0, [sp, #704]
  40c9b0:	add	x2, sp, #0x180
  40c9b4:	mov	w1, w0
  40c9b8:	mov	w0, #0x0                   	// #0
  40c9bc:	bl	4049a0 <__fxstat@plt>
  40c9c0:	cbz	w0, 40c9ec <wcrtomb@plt+0x7dcc>
  40c9c4:	adrp	x2, 41b000 <wcrtomb@plt+0x163e0>
  40c9c8:	add	x2, x2, #0x924
  40c9cc:	ldp	x25, x26, [sp, #64]
  40c9d0:	ldp	x27, x28, [sp, #80]
  40c9d4:	b	40c7ec <wcrtomb@plt+0x7bcc>
  40c9d8:	adrp	x2, 41b000 <wcrtomb@plt+0x163e0>
  40c9dc:	add	x2, x2, #0x924
  40c9e0:	b	40c7ec <wcrtomb@plt+0x7bcc>
  40c9e4:	ldr	w0, [sp, #112]
  40c9e8:	str	w0, [sp, #104]
  40c9ec:	ldr	x27, [sp, #432]
  40c9f0:	str	x27, [sp, #560]
  40c9f4:	ldr	x0, [sp, #456]
  40c9f8:	str	x0, [sp, #512]
  40c9fc:	ldr	x0, [sp, #464]
  40ca00:	str	x0, [sp, #520]
  40ca04:	ldr	x1, [sp, #472]
  40ca08:	ldr	x2, [sp, #480]
  40ca0c:	str	x1, [sp, #528]
  40ca10:	str	x2, [sp, #536]
  40ca14:	ldr	x25, [sp, #488]
  40ca18:	ldr	x26, [sp, #496]
  40ca1c:	str	x25, [sp, #544]
  40ca20:	str	x26, [sp, #552]
  40ca24:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40ca28:	ldrb	w3, [x0, #4065]
  40ca2c:	eor	w0, w3, #0x1
  40ca30:	orr	w0, w23, w0
  40ca34:	cbz	w0, 40ca6c <wcrtomb@plt+0x7e4c>
  40ca38:	ldr	w0, [sp, #400]
  40ca3c:	and	w0, w0, #0xf000
  40ca40:	cmp	w0, #0x4, lsl #12
  40ca44:	b.eq	40ca6c <wcrtomb@plt+0x7e4c>  // b.none
  40ca48:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40ca4c:	add	x4, x0, #0xfe8
  40ca50:	ldr	x0, [x0, #4072]
  40ca54:	ldr	x4, [x4, #8]
  40ca58:	cmp	x1, x0
  40ca5c:	b.lt	40cbc4 <wcrtomb@plt+0x7fa4>  // b.tstop
  40ca60:	b.gt	40ca6c <wcrtomb@plt+0x7e4c>
  40ca64:	cmp	w2, w4
  40ca68:	b.mi	40cbc4 <wcrtomb@plt+0x7fa4>  // b.first
  40ca6c:	add	x0, sp, #0x128
  40ca70:	bl	420ed0 <wcrtomb@plt+0x1c2b0>
  40ca74:	ands	w28, w0, #0xff
  40ca78:	b.ne	40cc54 <wcrtomb@plt+0x8034>  // b.any
  40ca7c:	ldr	w0, [sp, #400]
  40ca80:	and	w0, w0, #0xf000
  40ca84:	str	w0, [sp, #124]
  40ca88:	cmp	w0, #0x4, lsl #12
  40ca8c:	b.ne	40ccb0 <wcrtomb@plt+0x8090>  // b.any
  40ca90:	mov	w4, #0x0                   	// #0
  40ca94:	mov	w3, #0x0                   	// #0
  40ca98:	add	x2, sp, #0x128
  40ca9c:	mov	x1, x22
  40caa0:	mov	w0, w21
  40caa4:	bl	428afc <wcrtomb@plt+0x23edc>
  40caa8:	ldr	w3, [sp, #104]
  40caac:	add	x2, sp, #0x128
  40cab0:	mov	x1, x22
  40cab4:	mov	w0, w21
  40cab8:	bl	429164 <wcrtomb@plt+0x24544>
  40cabc:	ldr	w3, [sp, #104]
  40cac0:	add	x2, sp, #0x128
  40cac4:	mov	x1, x22
  40cac8:	mov	w0, w21
  40cacc:	bl	428e2c <wcrtomb@plt+0x2420c>
  40cad0:	add	x0, sp, #0x128
  40cad4:	bl	40a994 <wcrtomb@plt+0x5d74>
  40cad8:	add	x0, sp, #0x130
  40cadc:	bl	40a994 <wcrtomb@plt+0x5d74>
  40cae0:	add	x1, sp, #0xa0
  40cae4:	add	x0, sp, #0x128
  40cae8:	bl	40c570 <wcrtomb@plt+0x7950>
  40caec:	cmp	w0, #0x3
  40caf0:	b.eq	40ce68 <wcrtomb@plt+0x8248>  // b.none
  40caf4:	add	x0, sp, #0x128
  40caf8:	bl	40c3ac <wcrtomb@plt+0x778c>
  40cafc:	str	x0, [sp, #136]
  40cb00:	cbz	x0, 40cea0 <wcrtomb@plt+0x8280>
  40cb04:	ldr	x0, [sp, #688]
  40cb08:	str	x0, [sp, #104]
  40cb0c:	bl	405818 <wcrtomb@plt+0xbf8>
  40cb10:	str	x0, [sp, #112]
  40cb14:	str	xzr, [sp, #432]
  40cb18:	add	x0, sp, #0x128
  40cb1c:	bl	40b6a4 <wcrtomb@plt+0x6a84>
  40cb20:	mov	x21, x0
  40cb24:	cbz	x0, 40cf68 <wcrtomb@plt+0x8348>
  40cb28:	add	x0, sp, #0x128
  40cb2c:	bl	40e9a8 <wcrtomb@plt+0x9d88>
  40cb30:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40cb34:	ldrb	w0, [x0, #4065]
  40cb38:	cbz	w0, 40d784 <wcrtomb@plt+0x8b64>
  40cb3c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40cb40:	ldr	w0, [x0, #752]
  40cb44:	cmp	w0, #0x4
  40cb48:	b.eq	40d804 <wcrtomb@plt+0x8be4>  // b.none
  40cb4c:	mov	w0, #0x44                  	// #68
  40cb50:	strb	w0, [x21, #156]
  40cb54:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40cb58:	ldr	x0, [x0, #4048]
  40cb5c:	ldr	x0, [x0, #56]
  40cb60:	cbz	x0, 40d79c <wcrtomb@plt+0x8b7c>
  40cb64:	bl	405818 <wcrtomb@plt+0xbf8>
  40cb68:	str	x0, [sp, #112]
  40cb6c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40cb70:	ldr	x0, [x0, #4048]
  40cb74:	ldr	x0, [x0, #56]
  40cb78:	bl	415f1c <wcrtomb@plt+0x112fc>
  40cb7c:	str	x0, [sp, #128]
  40cb80:	bl	4157f0 <wcrtomb@plt+0x10bd0>
  40cb84:	str	x0, [sp, #104]
  40cb88:	mov	x2, #0xc                   	// #12
  40cb8c:	add	x1, x21, #0x7c
  40cb90:	bl	40b184 <wcrtomb@plt+0x6564>
  40cb94:	ldr	x2, [sp, #112]
  40cb98:	mov	x1, x21
  40cb9c:	add	x0, sp, #0x128
  40cba0:	bl	40b4b0 <wcrtomb@plt+0x6890>
  40cba4:	ldr	x21, [sp, #104]
  40cba8:	mov	x2, x21
  40cbac:	mov	x1, x21
  40cbb0:	ldr	x0, [sp, #304]
  40cbb4:	bl	405324 <wcrtomb@plt+0x704>
  40cbb8:	cmp	x21, #0x0
  40cbbc:	b.gt	40cf18 <wcrtomb@plt+0x82f8>
  40cbc0:	b	40cf68 <wcrtomb@plt+0x8348>
  40cbc4:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  40cbc8:	ldr	w1, [x1, #908]
  40cbcc:	cmp	w1, #0x0
  40cbd0:	ccmp	x25, x0, #0x1, ne  // ne = any
  40cbd4:	b.lt	40cbe8 <wcrtomb@plt+0x7fc8>  // b.tstop
  40cbd8:	cmp	x25, x0
  40cbdc:	b.gt	40ca6c <wcrtomb@plt+0x7e4c>
  40cbe0:	cmp	w26, w4
  40cbe4:	b.pl	40ca6c <wcrtomb@plt+0x7e4c>  // b.nfrst
  40cbe8:	cbnz	w3, 40d66c <wcrtomb@plt+0x8a4c>
  40cbec:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40cbf0:	ldr	w0, [x0, #580]
  40cbf4:	cbz	w0, 40d678 <wcrtomb@plt+0x8a58>
  40cbf8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40cbfc:	ldr	w0, [x0, #408]
  40cc00:	tbz	w0, #8, 40d684 <wcrtomb@plt+0x8a64>
  40cc04:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40cc08:	ldr	x0, [x0, #944]
  40cc0c:	cbz	x0, 40cc14 <wcrtomb@plt+0x7ff4>
  40cc10:	blr	x0
  40cc14:	mov	w2, #0x5                   	// #5
  40cc18:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40cc1c:	add	x1, x1, #0x930
  40cc20:	mov	x0, #0x0                   	// #0
  40cc24:	bl	4049c0 <dcgettext@plt>
  40cc28:	mov	x21, x0
  40cc2c:	mov	x0, x20
  40cc30:	bl	43efc4 <argp_parse@@Base+0xb884>
  40cc34:	mov	x3, x0
  40cc38:	mov	x2, x21
  40cc3c:	mov	w1, #0x0                   	// #0
  40cc40:	mov	w0, #0x0                   	// #0
  40cc44:	bl	404050 <error@plt>
  40cc48:	ldp	x25, x26, [sp, #64]
  40cc4c:	ldp	x27, x28, [sp, #80]
  40cc50:	b	40c7f8 <wcrtomb@plt+0x7bd8>
  40cc54:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40cc58:	ldr	w0, [x0, #408]
  40cc5c:	tbz	w0, #10, 40d690 <wcrtomb@plt+0x8a70>
  40cc60:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40cc64:	ldr	x0, [x0, #944]
  40cc68:	cbz	x0, 40cc70 <wcrtomb@plt+0x8050>
  40cc6c:	blr	x0
  40cc70:	mov	w2, #0x5                   	// #5
  40cc74:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40cc78:	add	x1, x1, #0x958
  40cc7c:	mov	x0, #0x0                   	// #0
  40cc80:	bl	4049c0 <dcgettext@plt>
  40cc84:	mov	x21, x0
  40cc88:	mov	x0, x20
  40cc8c:	bl	43efc4 <argp_parse@@Base+0xb884>
  40cc90:	mov	x3, x0
  40cc94:	mov	x2, x21
  40cc98:	mov	w1, #0x0                   	// #0
  40cc9c:	mov	w0, #0x0                   	// #0
  40cca0:	bl	404050 <error@plt>
  40cca4:	ldp	x25, x26, [sp, #64]
  40cca8:	ldp	x27, x28, [sp, #80]
  40ccac:	b	40c7f8 <wcrtomb@plt+0x7bd8>
  40ccb0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40ccb4:	ldr	x0, [x0, #1920]
  40ccb8:	cbz	x0, 40cdd4 <wcrtomb@plt+0x81b4>
  40ccbc:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40ccc0:	ldr	w1, [x1, #1912]
  40ccc4:	ldr	w2, [sp, #404]
  40ccc8:	cmp	w2, w1
  40cccc:	b.hi	40ccdc <wcrtomb@plt+0x80bc>  // b.pmore
  40ccd0:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  40ccd4:	ldrb	w1, [x1, #680]
  40ccd8:	cbz	w1, 40cdd4 <wcrtomb@plt+0x81b4>
  40ccdc:	ldr	x1, [sp, #392]
  40cce0:	str	x1, [sp, #176]
  40cce4:	ldr	x1, [sp, #384]
  40cce8:	str	x1, [sp, #168]
  40ccec:	add	x1, sp, #0xa8
  40ccf0:	bl	437a0c <argp_parse@@Base+0x42cc>
  40ccf4:	mov	x28, x0
  40ccf8:	cbz	x0, 40cdd4 <wcrtomb@plt+0x81b4>
  40ccfc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40cd00:	ldrb	w2, [x0, #888]
  40cd04:	mov	w1, #0x1                   	// #1
  40cd08:	add	x0, x28, #0x14
  40cd0c:	bl	42a2dc <wcrtomb@plt+0x256bc>
  40cd10:	str	x0, [sp, #128]
  40cd14:	ldr	w0, [x28, #16]
  40cd18:	cbz	w0, 40cd24 <wcrtomb@plt+0x8104>
  40cd1c:	sub	w0, w0, #0x1
  40cd20:	str	w0, [x28, #16]
  40cd24:	bl	405818 <wcrtomb@plt+0xbf8>
  40cd28:	str	x0, [sp, #136]
  40cd2c:	ldr	x1, [sp, #128]
  40cd30:	add	x0, sp, #0x140
  40cd34:	bl	41a5bc <wcrtomb@plt+0x1599c>
  40cd38:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40cd3c:	ldr	w0, [x0, #752]
  40cd40:	cmp	w0, #0x2
  40cd44:	cset	x28, ne  // ne = any
  40cd48:	add	x28, x28, #0x63
  40cd4c:	ldr	x0, [sp, #128]
  40cd50:	bl	403ff0 <strlen@plt>
  40cd54:	cmp	x0, x28
  40cd58:	b.hi	40cdb0 <wcrtomb@plt+0x8190>  // b.pmore
  40cd5c:	str	xzr, [sp, #432]
  40cd60:	add	x0, sp, #0x128
  40cd64:	bl	40b6a4 <wcrtomb@plt+0x6a84>
  40cd68:	mov	x28, x0
  40cd6c:	cbz	x0, 40cdd4 <wcrtomb@plt+0x81b4>
  40cd70:	mov	x2, #0x64                  	// #100
  40cd74:	ldr	x1, [sp, #128]
  40cd78:	add	x0, x0, #0x9d
  40cd7c:	bl	40a778 <wcrtomb@plt+0x5b58>
  40cd80:	mov	w0, #0x31                  	// #49
  40cd84:	strb	w0, [x28, #156]
  40cd88:	ldr	x2, [sp, #136]
  40cd8c:	mov	x1, x28
  40cd90:	add	x0, sp, #0x128
  40cd94:	bl	40b4b0 <wcrtomb@plt+0x6890>
  40cd98:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40cd9c:	ldrb	w0, [x0, #680]
  40cda0:	cbnz	w0, 40cdbc <wcrtomb@plt+0x819c>
  40cda4:	ldp	x25, x26, [sp, #64]
  40cda8:	ldp	x27, x28, [sp, #80]
  40cdac:	b	40c7f8 <wcrtomb@plt+0x7bd8>
  40cdb0:	add	x0, sp, #0x128
  40cdb4:	bl	40c050 <wcrtomb@plt+0x7430>
  40cdb8:	b	40cd5c <wcrtomb@plt+0x813c>
  40cdbc:	mov	w1, #0x0                   	// #0
  40cdc0:	ldr	x0, [sp, #296]
  40cdc4:	bl	427470 <wcrtomb@plt+0x22850>
  40cdc8:	ldp	x25, x26, [sp, #64]
  40cdcc:	ldp	x27, x28, [sp, #80]
  40cdd0:	b	40c7f8 <wcrtomb@plt+0x7bd8>
  40cdd4:	ldr	w0, [sp, #400]
  40cdd8:	and	w0, w0, #0xf000
  40cddc:	cmp	w0, #0x8, lsl #12
  40cde0:	b.eq	40d6cc <wcrtomb@plt+0x8aac>  // b.none
  40cde4:	cmp	w0, #0xa, lsl #12
  40cde8:	b.eq	40d398 <wcrtomb@plt+0x8778>  // b.none
  40cdec:	cmp	w0, #0x2, lsl #12
  40cdf0:	b.eq	40d4bc <wcrtomb@plt+0x889c>  // b.none
  40cdf4:	cmp	w0, #0x6, lsl #12
  40cdf8:	b.eq	40d560 <wcrtomb@plt+0x8940>  // b.none
  40cdfc:	cmp	w0, #0x1, lsl #12
  40ce00:	b.eq	40d5a8 <wcrtomb@plt+0x8988>  // b.none
  40ce04:	cmp	w0, #0xc, lsl #12
  40ce08:	b.ne	40d5f0 <wcrtomb@plt+0x89d0>  // b.any
  40ce0c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40ce10:	ldr	w0, [x0, #408]
  40ce14:	tbz	w0, #5, 40d6b4 <wcrtomb@plt+0x8a94>
  40ce18:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40ce1c:	ldr	x0, [x0, #944]
  40ce20:	cbz	x0, 40ce28 <wcrtomb@plt+0x8208>
  40ce24:	blr	x0
  40ce28:	mov	w2, #0x5                   	// #5
  40ce2c:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40ce30:	add	x1, x1, #0xa18
  40ce34:	mov	x0, #0x0                   	// #0
  40ce38:	bl	4049c0 <dcgettext@plt>
  40ce3c:	mov	x21, x0
  40ce40:	mov	x0, x20
  40ce44:	bl	43efc4 <argp_parse@@Base+0xb884>
  40ce48:	mov	x3, x0
  40ce4c:	mov	x2, x21
  40ce50:	mov	w1, #0x0                   	// #0
  40ce54:	mov	w0, #0x0                   	// #0
  40ce58:	bl	404050 <error@plt>
  40ce5c:	ldp	x25, x26, [sp, #64]
  40ce60:	ldp	x27, x28, [sp, #80]
  40ce64:	b	40c7f8 <wcrtomb@plt+0x7bd8>
  40ce68:	ldr	x20, [sp, #296]
  40ce6c:	ldr	x21, [sp, #160]
  40ce70:	mov	w2, #0x5                   	// #5
  40ce74:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40ce78:	add	x1, x1, #0x980
  40ce7c:	mov	x0, #0x0                   	// #0
  40ce80:	bl	4049c0 <dcgettext@plt>
  40ce84:	mov	x2, x0
  40ce88:	mov	x1, x21
  40ce8c:	mov	x0, x20
  40ce90:	bl	40b098 <wcrtomb@plt+0x6478>
  40ce94:	ldp	x25, x26, [sp, #64]
  40ce98:	ldp	x27, x28, [sp, #80]
  40ce9c:	b	40c7f8 <wcrtomb@plt+0x7bd8>
  40cea0:	ldr	x0, [sp, #296]
  40cea4:	bl	41b8b4 <wcrtomb@plt+0x16c94>
  40cea8:	mov	w0, w28
  40ceac:	b	40cf7c <wcrtomb@plt+0x835c>
  40ceb0:	mov	x2, #0x200                 	// #512
  40ceb4:	sub	x2, x2, x0
  40ceb8:	mov	w1, #0x0                   	// #0
  40cebc:	ldr	x0, [sp, #112]
  40cec0:	ldr	x3, [sp, #144]
  40cec4:	add	x0, x0, x3
  40cec8:	bl	404420 <memset@plt>
  40cecc:	b	40cf40 <wcrtomb@plt+0x8320>
  40ced0:	mov	x2, x21
  40ced4:	ldr	x1, [sp, #128]
  40ced8:	ldr	x0, [sp, #112]
  40cedc:	bl	403f70 <memcpy@plt>
  40cee0:	ldr	x2, [sp, #104]
  40cee4:	sub	x2, x2, x21
  40cee8:	str	x2, [sp, #104]
  40ceec:	ldr	x1, [sp, #128]
  40cef0:	add	x3, x1, x21
  40cef4:	str	x3, [sp, #128]
  40cef8:	sub	x0, x21, #0x1
  40cefc:	and	x0, x0, #0xfffffffffffffe00
  40cf00:	ldr	x1, [sp, #112]
  40cf04:	add	x0, x1, x0
  40cf08:	bl	405884 <wcrtomb@plt+0xc64>
  40cf0c:	ldr	x2, [sp, #104]
  40cf10:	cmp	x2, #0x0
  40cf14:	b.le	40cf68 <wcrtomb@plt+0x8348>
  40cf18:	bl	406d94 <wcrtomb@plt+0x2174>
  40cf1c:	str	x0, [sp, #112]
  40cf20:	bl	405974 <wcrtomb@plt+0xd54>
  40cf24:	mov	x21, x0
  40cf28:	ldr	x0, [sp, #104]
  40cf2c:	str	x0, [sp, #144]
  40cf30:	cmp	x21, x0
  40cf34:	b.ls	40ced0 <wcrtomb@plt+0x82b0>  // b.plast
  40cf38:	ands	x0, x0, #0x1ff
  40cf3c:	b.ne	40ceb0 <wcrtomb@plt+0x8290>  // b.any
  40cf40:	ldr	x21, [sp, #144]
  40cf44:	mov	x2, x21
  40cf48:	ldr	x1, [sp, #128]
  40cf4c:	ldr	x0, [sp, #112]
  40cf50:	bl	403f70 <memcpy@plt>
  40cf54:	sub	x0, x21, #0x1
  40cf58:	and	x0, x0, #0xfffffffffffffe00
  40cf5c:	ldr	x1, [sp, #112]
  40cf60:	add	x0, x1, x0
  40cf64:	bl	405884 <wcrtomb@plt+0xc64>
  40cf68:	add	x0, sp, #0x128
  40cf6c:	bl	40c61c <wcrtomb@plt+0x79fc>
  40cf70:	ldr	x0, [sp, #136]
  40cf74:	bl	4047c0 <free@plt>
  40cf78:	mov	w0, #0x1                   	// #1
  40cf7c:	ldr	w1, [sp, #704]
  40cf80:	str	w1, [sp, #104]
  40cf84:	cbz	x19, 40d160 <wcrtomb@plt+0x8540>
  40cf88:	ldr	w21, [x19, #408]
  40cf8c:	b	40d1b8 <wcrtomb@plt+0x8598>
  40cf90:	ldr	x0, [sp, #688]
  40cf94:	ldr	x1, [x0, #88]
  40cf98:	ldr	x0, [sp, #384]
  40cf9c:	cmp	x1, x0
  40cfa0:	b.eq	40d7c4 <wcrtomb@plt+0x8ba4>  // b.none
  40cfa4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40cfa8:	ldr	w0, [x0, #580]
  40cfac:	cbz	w0, 40cf68 <wcrtomb@plt+0x8348>
  40cfb0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40cfb4:	ldr	w0, [x0, #408]
  40cfb8:	tbz	w0, #18, 40cf68 <wcrtomb@plt+0x8348>
  40cfbc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40cfc0:	ldr	x0, [x0, #944]
  40cfc4:	cbz	x0, 40cfcc <wcrtomb@plt+0x83ac>
  40cfc8:	blr	x0
  40cfcc:	mov	w2, #0x5                   	// #5
  40cfd0:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40cfd4:	add	x1, x1, #0x9a8
  40cfd8:	mov	x0, #0x0                   	// #0
  40cfdc:	bl	4049c0 <dcgettext@plt>
  40cfe0:	mov	x21, x0
  40cfe4:	ldr	x0, [sp, #296]
  40cfe8:	bl	43efc4 <argp_parse@@Base+0xb884>
  40cfec:	mov	x3, x0
  40cff0:	mov	x2, x21
  40cff4:	mov	w1, #0x0                   	// #0
  40cff8:	mov	w0, #0x0                   	// #0
  40cffc:	bl	404050 <error@plt>
  40d000:	b	40cf68 <wcrtomb@plt+0x8348>
  40d004:	add	x1, x0, #0x1
  40d008:	ldr	x0, [sp, #112]
  40d00c:	bl	43ff70 <argp_parse@@Base+0xc830>
  40d010:	str	x0, [sp, #112]
  40d014:	ldr	x0, [sp, #144]
  40d018:	str	x0, [sp, #152]
  40d01c:	b	40d058 <wcrtomb@plt+0x8438>
  40d020:	ldr	x0, [sp, #104]
  40d024:	add	x0, x0, #0x1
  40d028:	add	x21, x21, x0
  40d02c:	mov	x0, x21
  40d030:	bl	403ff0 <strlen@plt>
  40d034:	str	x0, [sp, #104]
  40d038:	cbz	x0, 40d094 <wcrtomb@plt+0x8474>
  40d03c:	ldr	x0, [sp, #128]
  40d040:	ldr	x1, [sp, #104]
  40d044:	add	x0, x0, x1
  40d048:	str	x0, [sp, #144]
  40d04c:	ldr	x1, [sp, #152]
  40d050:	cmp	x0, x1
  40d054:	b.hi	40d004 <wcrtomb@plt+0x83e4>  // b.pmore
  40d058:	mov	x1, x21
  40d05c:	ldr	x0, [sp, #112]
  40d060:	ldr	x2, [sp, #128]
  40d064:	add	x0, x0, x2
  40d068:	bl	404910 <strcpy@plt>
  40d06c:	add	x1, sp, #0x128
  40d070:	ldr	x0, [sp, #112]
  40d074:	bl	40ec08 <wcrtomb@plt+0x9fe8>
  40d078:	and	w0, w0, #0xff
  40d07c:	cbnz	w0, 40d020 <wcrtomb@plt+0x8400>
  40d080:	ldr	x2, [sp, #112]
  40d084:	mov	x1, x21
  40d088:	add	x0, sp, #0x128
  40d08c:	bl	40c73c <wcrtomb@plt+0x7b1c>
  40d090:	b	40d020 <wcrtomb@plt+0x8400>
  40d094:	ldr	x0, [sp, #112]
  40d098:	bl	4047c0 <free@plt>
  40d09c:	b	40cf68 <wcrtomb@plt+0x8348>
  40d0a0:	ldr	x0, [sp, #296]
  40d0a4:	str	x0, [sp, #104]
  40d0a8:	ldr	x21, [sp, #168]
  40d0ac:	mov	w2, #0x5                   	// #5
  40d0b0:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40d0b4:	add	x1, x1, #0x9e0
  40d0b8:	mov	x0, #0x0                   	// #0
  40d0bc:	bl	4049c0 <dcgettext@plt>
  40d0c0:	mov	x2, x0
  40d0c4:	mov	x1, x21
  40d0c8:	ldr	x0, [sp, #104]
  40d0cc:	bl	40b098 <wcrtomb@plt+0x6478>
  40d0d0:	ldr	x0, [sp, #296]
  40d0d4:	bl	403ff0 <strlen@plt>
  40d0d8:	mov	x21, x0
  40d0dc:	ldr	x0, [sp, #168]
  40d0e0:	bl	403ff0 <strlen@plt>
  40d0e4:	add	x0, x21, x0
  40d0e8:	add	x0, x0, #0x1
  40d0ec:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  40d0f0:	mov	x21, x0
  40d0f4:	ldr	x1, [sp, #296]
  40d0f8:	bl	404910 <strcpy@plt>
  40d0fc:	ldr	x0, [sp, #168]
  40d100:	str	x0, [sp, #104]
  40d104:	mov	x1, x0
  40d108:	mov	x0, x21
  40d10c:	bl	404400 <strcat@plt>
  40d110:	mov	x2, x21
  40d114:	ldr	x1, [sp, #104]
  40d118:	add	x0, sp, #0x128
  40d11c:	bl	40c73c <wcrtomb@plt+0x7b1c>
  40d120:	mov	x0, x21
  40d124:	bl	4047c0 <free@plt>
  40d128:	b	40cf68 <wcrtomb@plt+0x8348>
  40d12c:	ldr	x0, [sp, #296]
  40d130:	str	x0, [sp, #104]
  40d134:	ldr	x21, [sp, #168]
  40d138:	mov	w2, #0x5                   	// #5
  40d13c:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40d140:	add	x1, x1, #0x9e0
  40d144:	mov	x0, #0x0                   	// #0
  40d148:	bl	4049c0 <dcgettext@plt>
  40d14c:	mov	x2, x0
  40d150:	mov	x1, x21
  40d154:	ldr	x0, [sp, #104]
  40d158:	bl	40b098 <wcrtomb@plt+0x6478>
  40d15c:	b	40cf68 <wcrtomb@plt+0x8348>
  40d160:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x3be64>
  40d164:	ldr	w21, [x1, #2184]
  40d168:	b	40d1b8 <wcrtomb@plt+0x8598>
  40d16c:	add	x1, sp, #0x128
  40d170:	ldr	w0, [sp, #104]
  40d174:	bl	42035c <wcrtomb@plt+0x1b73c>
  40d178:	mov	w28, w0
  40d17c:	cmp	w0, #0x3
  40d180:	b.eq	40d190 <wcrtomb@plt+0x8570>  // b.none
  40d184:	cmp	w0, #0x1
  40d188:	b.ls	40d778 <wcrtomb@plt+0x8b58>  // b.plast
  40d18c:	b	40d1ac <wcrtomb@plt+0x858c>
  40d190:	add	x1, sp, #0x128
  40d194:	ldr	w0, [sp, #104]
  40d198:	bl	40c18c <wcrtomb@plt+0x756c>
  40d19c:	mov	w28, w0
  40d1a0:	b	40d770 <wcrtomb@plt+0x8b50>
  40d1a4:	cmp	w28, #0x3
  40d1a8:	b.eq	40d1e8 <wcrtomb@plt+0x85c8>  // b.none
  40d1ac:	cmp	w28, #0x0
  40d1b0:	cset	w0, eq  // eq = none
  40d1b4:	mov	w28, #0x1                   	// #1
  40d1b8:	cbz	w0, 40d210 <wcrtomb@plt+0x85f0>
  40d1bc:	ldr	w0, [sp, #104]
  40d1c0:	tbnz	w0, #31, 40d1ec <wcrtomb@plt+0x85cc>
  40d1c4:	ldr	w0, [sp, #104]
  40d1c8:	cbnz	w0, 40d24c <wcrtomb@plt+0x862c>
  40d1cc:	cmp	w21, #0x0
  40d1d0:	ccmp	w24, #0x0, #0x4, lt  // lt = tstop
  40d1d4:	b.eq	40d224 <wcrtomb@plt+0x8604>  // b.none
  40d1d8:	bl	404ad0 <__errno_location@plt>
  40d1dc:	neg	w21, w21
  40d1e0:	str	w21, [x0]
  40d1e4:	b	40d1fc <wcrtomb@plt+0x85dc>
  40d1e8:	bl	404660 <abort@plt>
  40d1ec:	bl	404ad0 <__errno_location@plt>
  40d1f0:	ldr	w1, [sp, #104]
  40d1f4:	neg	w1, w1
  40d1f8:	str	w1, [x0]
  40d1fc:	adrp	x2, 41b000 <wcrtomb@plt+0x163e0>
  40d200:	add	x2, x2, #0x924
  40d204:	mov	w1, w23
  40d208:	mov	x0, x20
  40d20c:	bl	41b95c <wcrtomb@plt+0x16d3c>
  40d210:	add	x0, sp, #0x128
  40d214:	bl	424938 <wcrtomb@plt+0x1fd18>
  40d218:	ldp	x25, x26, [sp, #64]
  40d21c:	ldp	x27, x28, [sp, #80]
  40d220:	b	40c7f8 <wcrtomb@plt+0x7bd8>
  40d224:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40d228:	ldr	w4, [x0, #496]
  40d22c:	add	x3, sp, #0xa8
  40d230:	mov	x2, x22
  40d234:	mov	w1, w21
  40d238:	mov	w0, #0x0                   	// #0
  40d23c:	bl	404c00 <__fxstatat@plt>
  40d240:	cmp	w0, #0x0
  40d244:	cset	w0, eq  // eq = none
  40d248:	b	40d264 <wcrtomb@plt+0x8644>
  40d24c:	add	x2, sp, #0xa8
  40d250:	ldr	w1, [sp, #104]
  40d254:	mov	w0, #0x0                   	// #0
  40d258:	bl	4049a0 <__fxstat@plt>
  40d25c:	cmp	w0, #0x0
  40d260:	cset	w0, eq  // eq = none
  40d264:	cbz	w0, 40d1fc <wcrtomb@plt+0x85dc>
  40d268:	ldr	w0, [sp, #124]
  40d26c:	cmp	w0, #0x4, lsl #12
  40d270:	cset	w23, eq  // eq = none
  40d274:	mov	w2, w23
  40d278:	ldr	x1, [sp, #280]
  40d27c:	ldr	x0, [sp, #272]
  40d280:	cmp	x25, x0
  40d284:	b.ne	40d290 <wcrtomb@plt+0x8670>  // b.any
  40d288:	cmp	w1, w26
  40d28c:	b.eq	40d328 <wcrtomb@plt+0x8708>  // b.none
  40d290:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40d294:	ldrb	w0, [x0, #680]
  40d298:	eor	w0, w0, #0x1
  40d29c:	orr	w28, w28, w0
  40d2a0:	tst	w28, #0xff
  40d2a4:	b.eq	40d328 <wcrtomb@plt+0x8708>  // b.none
  40d2a8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40d2ac:	ldr	w0, [x0, #408]
  40d2b0:	tbz	w0, #4, 40d2f8 <wcrtomb@plt+0x86d8>
  40d2b4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40d2b8:	ldr	x0, [x0, #944]
  40d2bc:	cbz	x0, 40d2c4 <wcrtomb@plt+0x86a4>
  40d2c0:	blr	x0
  40d2c4:	mov	w2, #0x5                   	// #5
  40d2c8:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40d2cc:	add	x1, x1, #0x9f8
  40d2d0:	mov	x0, #0x0                   	// #0
  40d2d4:	bl	4049c0 <dcgettext@plt>
  40d2d8:	mov	x21, x0
  40d2dc:	mov	x0, x20
  40d2e0:	bl	43efc4 <argp_parse@@Base+0xb884>
  40d2e4:	mov	x3, x0
  40d2e8:	mov	x2, x21
  40d2ec:	mov	w1, #0x0                   	// #0
  40d2f0:	mov	w0, #0x0                   	// #0
  40d2f4:	bl	404050 <error@plt>
  40d2f8:	mov	w0, #0x1                   	// #1
  40d2fc:	bl	424a80 <wcrtomb@plt+0x1fe60>
  40d300:	add	x0, sp, #0x128
  40d304:	bl	424938 <wcrtomb@plt+0x1fd18>
  40d308:	and	w0, w0, #0xff
  40d30c:	cbz	w0, 40d69c <wcrtomb@plt+0x8a7c>
  40d310:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40d314:	ldrb	w0, [x0, #680]
  40d318:	cbnz	w0, 40d380 <wcrtomb@plt+0x8760>
  40d31c:	ldp	x25, x26, [sp, #64]
  40d320:	ldp	x27, x28, [sp, #80]
  40d324:	b	40c7f8 <wcrtomb@plt+0x7bd8>
  40d328:	ldr	x0, [sp, #216]
  40d32c:	cmp	x27, x0
  40d330:	b.lt	40d2a8 <wcrtomb@plt+0x8688>  // b.tstop
  40d334:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40d338:	ldr	w0, [x0, #492]
  40d33c:	ldr	w1, [sp, #104]
  40d340:	cmp	w1, #0x0
  40d344:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  40d348:	b.ne	40d300 <wcrtomb@plt+0x86e0>  // b.any
  40d34c:	cmp	x27, #0x0
  40d350:	ccmp	w2, #0x0, #0x0, eq  // eq = none
  40d354:	b.eq	40d300 <wcrtomb@plt+0x86e0>  // b.none
  40d358:	add	x0, sp, #0x200
  40d35c:	ldp	x3, x4, [x0]
  40d360:	mov	x2, x22
  40d364:	mov	w1, w21
  40d368:	ldr	w0, [sp, #104]
  40d36c:	bl	41b608 <wcrtomb@plt+0x169e8>
  40d370:	cbz	w0, 40d300 <wcrtomb@plt+0x86e0>
  40d374:	mov	x0, x20
  40d378:	bl	42a15c <wcrtomb@plt+0x2553c>
  40d37c:	b	40d300 <wcrtomb@plt+0x86e0>
  40d380:	mov	w1, w23
  40d384:	mov	x0, x20
  40d388:	bl	427470 <wcrtomb@plt+0x22850>
  40d38c:	ldp	x25, x26, [sp, #64]
  40d390:	ldp	x27, x28, [sp, #80]
  40d394:	b	40c7f8 <wcrtomb@plt+0x7bd8>
  40d398:	ldr	x2, [sp, #432]
  40d39c:	mov	x1, x22
  40d3a0:	mov	w0, w21
  40d3a4:	bl	42fb40 <wcrtomb@plt+0x2af20>
  40d3a8:	str	x0, [sp, #320]
  40d3ac:	cbz	x0, 40d46c <wcrtomb@plt+0x884c>
  40d3b0:	mov	w1, #0x4                   	// #4
  40d3b4:	add	x0, sp, #0x140
  40d3b8:	bl	427104 <wcrtomb@plt+0x224e4>
  40d3bc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40d3c0:	ldr	w0, [x0, #752]
  40d3c4:	cmp	w0, #0x2
  40d3c8:	cset	x23, ne  // ne = any
  40d3cc:	add	x23, x23, #0x63
  40d3d0:	ldr	x0, [sp, #320]
  40d3d4:	bl	403ff0 <strlen@plt>
  40d3d8:	cmp	x0, x23
  40d3dc:	b.hi	40d4a0 <wcrtomb@plt+0x8880>  // b.pmore
  40d3e0:	mov	w3, #0x0                   	// #0
  40d3e4:	add	x2, sp, #0x128
  40d3e8:	mov	x1, x22
  40d3ec:	mov	w0, w21
  40d3f0:	bl	429164 <wcrtomb@plt+0x24544>
  40d3f4:	mov	w3, #0x0                   	// #0
  40d3f8:	add	x2, sp, #0x128
  40d3fc:	mov	x1, x22
  40d400:	mov	w0, w21
  40d404:	bl	428e2c <wcrtomb@plt+0x2420c>
  40d408:	bl	405818 <wcrtomb@plt+0xbf8>
  40d40c:	mov	x22, x0
  40d410:	str	xzr, [sp, #432]
  40d414:	add	x0, sp, #0x128
  40d418:	bl	40b6a4 <wcrtomb@plt+0x6a84>
  40d41c:	mov	x21, x0
  40d420:	cbz	x0, 40d6a8 <wcrtomb@plt+0x8a88>
  40d424:	mov	x2, #0x64                  	// #100
  40d428:	ldr	x1, [sp, #320]
  40d42c:	add	x0, x0, #0x9d
  40d430:	bl	40a778 <wcrtomb@plt+0x5b58>
  40d434:	mov	w0, #0x32                  	// #50
  40d438:	strb	w0, [x21, #156]
  40d43c:	mov	x2, x22
  40d440:	mov	x1, x21
  40d444:	add	x0, sp, #0x128
  40d448:	bl	40b4b0 <wcrtomb@plt+0x6890>
  40d44c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40d450:	ldrb	w0, [x0, #680]
  40d454:	cbnz	w0, 40d4ac <wcrtomb@plt+0x888c>
  40d458:	add	x0, sp, #0x128
  40d45c:	bl	40aaa0 <wcrtomb@plt+0x5e80>
  40d460:	ldp	x25, x26, [sp, #64]
  40d464:	ldp	x27, x28, [sp, #80]
  40d468:	b	40c7f8 <wcrtomb@plt+0x7bd8>
  40d46c:	bl	404ad0 <__errno_location@plt>
  40d470:	ldr	w0, [x0]
  40d474:	cmp	w0, #0xc
  40d478:	b.eq	40d49c <wcrtomb@plt+0x887c>  // b.none
  40d47c:	adrp	x2, 41b000 <wcrtomb@plt+0x163e0>
  40d480:	add	x2, x2, #0x87c
  40d484:	mov	w1, w23
  40d488:	mov	x0, x20
  40d48c:	bl	41b95c <wcrtomb@plt+0x16d3c>
  40d490:	ldp	x25, x26, [sp, #64]
  40d494:	ldp	x27, x28, [sp, #80]
  40d498:	b	40c7f8 <wcrtomb@plt+0x7bd8>
  40d49c:	bl	40e5ec <wcrtomb@plt+0x99cc>
  40d4a0:	add	x0, sp, #0x128
  40d4a4:	bl	40c050 <wcrtomb@plt+0x7430>
  40d4a8:	b	40d3e0 <wcrtomb@plt+0x87c0>
  40d4ac:	mov	w1, #0x0                   	// #0
  40d4b0:	mov	x0, x20
  40d4b4:	bl	427470 <wcrtomb@plt+0x22850>
  40d4b8:	b	40d458 <wcrtomb@plt+0x8838>
  40d4bc:	mov	w4, #0x1                   	// #1
  40d4c0:	mov	w3, #0x0                   	// #0
  40d4c4:	add	x2, sp, #0x128
  40d4c8:	mov	x1, x22
  40d4cc:	mov	w0, w21
  40d4d0:	bl	428afc <wcrtomb@plt+0x23edc>
  40d4d4:	mov	w3, #0x0                   	// #0
  40d4d8:	add	x2, sp, #0x128
  40d4dc:	mov	x1, x22
  40d4e0:	mov	w0, w21
  40d4e4:	bl	429164 <wcrtomb@plt+0x24544>
  40d4e8:	mov	w3, #0x0                   	// #0
  40d4ec:	add	x2, sp, #0x128
  40d4f0:	mov	x1, x22
  40d4f4:	mov	w0, w21
  40d4f8:	bl	428e2c <wcrtomb@plt+0x2420c>
  40d4fc:	mov	w22, #0x33                  	// #51
  40d500:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40d504:	ldr	w0, [x0, #752]
  40d508:	cmp	w0, #0x1
  40d50c:	b.eq	40d604 <wcrtomb@plt+0x89e4>  // b.none
  40d510:	bl	405818 <wcrtomb@plt+0xbf8>
  40d514:	mov	x23, x0
  40d518:	str	xzr, [sp, #432]
  40d51c:	add	x0, sp, #0x128
  40d520:	bl	40b6a4 <wcrtomb@plt+0x6a84>
  40d524:	mov	x21, x0
  40d528:	cbz	x0, 40d6c0 <wcrtomb@plt+0x8aa0>
  40d52c:	strb	w22, [x0, #156]
  40d530:	cmp	w22, #0x36
  40d534:	b.ne	40d618 <wcrtomb@plt+0x89f8>  // b.any
  40d538:	mov	x2, x23
  40d53c:	mov	x1, x21
  40d540:	add	x0, sp, #0x128
  40d544:	bl	40b4b0 <wcrtomb@plt+0x6890>
  40d548:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40d54c:	ldrb	w0, [x0, #680]
  40d550:	cbnz	w0, 40d654 <wcrtomb@plt+0x8a34>
  40d554:	ldp	x25, x26, [sp, #64]
  40d558:	ldp	x27, x28, [sp, #80]
  40d55c:	b	40c7f8 <wcrtomb@plt+0x7bd8>
  40d560:	mov	w4, #0x1                   	// #1
  40d564:	mov	w3, #0x0                   	// #0
  40d568:	add	x2, sp, #0x128
  40d56c:	mov	x1, x22
  40d570:	mov	w0, w21
  40d574:	bl	428afc <wcrtomb@plt+0x23edc>
  40d578:	mov	w3, #0x0                   	// #0
  40d57c:	add	x2, sp, #0x128
  40d580:	mov	x1, x22
  40d584:	mov	w0, w21
  40d588:	bl	429164 <wcrtomb@plt+0x24544>
  40d58c:	mov	w3, #0x0                   	// #0
  40d590:	add	x2, sp, #0x128
  40d594:	mov	x1, x22
  40d598:	mov	w0, w21
  40d59c:	bl	428e2c <wcrtomb@plt+0x2420c>
  40d5a0:	mov	w22, #0x34                  	// #52
  40d5a4:	b	40d500 <wcrtomb@plt+0x88e0>
  40d5a8:	mov	w4, #0x1                   	// #1
  40d5ac:	mov	w3, #0x0                   	// #0
  40d5b0:	add	x2, sp, #0x128
  40d5b4:	mov	x1, x22
  40d5b8:	mov	w0, w21
  40d5bc:	bl	428afc <wcrtomb@plt+0x23edc>
  40d5c0:	mov	w3, #0x0                   	// #0
  40d5c4:	add	x2, sp, #0x128
  40d5c8:	mov	x1, x22
  40d5cc:	mov	w0, w21
  40d5d0:	bl	429164 <wcrtomb@plt+0x24544>
  40d5d4:	mov	w3, #0x0                   	// #0
  40d5d8:	add	x2, sp, #0x128
  40d5dc:	mov	x1, x22
  40d5e0:	mov	w0, w21
  40d5e4:	bl	428e2c <wcrtomb@plt+0x2420c>
  40d5e8:	mov	w22, #0x36                  	// #54
  40d5ec:	b	40d500 <wcrtomb@plt+0x88e0>
  40d5f0:	mov	x0, x20
  40d5f4:	bl	40aa1c <wcrtomb@plt+0x5dfc>
  40d5f8:	ldp	x25, x26, [sp, #64]
  40d5fc:	ldp	x27, x28, [sp, #80]
  40d600:	b	40c7f8 <wcrtomb@plt+0x7bd8>
  40d604:	mov	x0, x20
  40d608:	bl	40aa1c <wcrtomb@plt+0x5dfc>
  40d60c:	ldp	x25, x26, [sp, #64]
  40d610:	ldp	x27, x28, [sp, #80]
  40d614:	b	40c7f8 <wcrtomb@plt+0x7bd8>
  40d618:	ldr	x1, [sp, #416]
  40d61c:	ubfx	w0, w1, #8, #12
  40d620:	lsr	x1, x1, #32
  40d624:	and	w3, w1, #0xfffff000
  40d628:	mov	x2, #0x8                   	// #8
  40d62c:	add	x1, x21, #0x149
  40d630:	orr	w0, w3, w0
  40d634:	bl	40afc4 <wcrtomb@plt+0x63a4>
  40d638:	ldr	x3, [sp, #416]
  40d63c:	lsr	x0, x3, #12
  40d640:	mov	x2, #0x8                   	// #8
  40d644:	add	x1, x21, #0x151
  40d648:	bfxil	w0, w3, #0, #8
  40d64c:	bl	40aff8 <wcrtomb@plt+0x63d8>
  40d650:	b	40d538 <wcrtomb@plt+0x8918>
  40d654:	mov	w1, #0x0                   	// #0
  40d658:	mov	x0, x20
  40d65c:	bl	427470 <wcrtomb@plt+0x22850>
  40d660:	ldp	x25, x26, [sp, #64]
  40d664:	ldp	x27, x28, [sp, #80]
  40d668:	b	40c7f8 <wcrtomb@plt+0x7bd8>
  40d66c:	ldp	x25, x26, [sp, #64]
  40d670:	ldp	x27, x28, [sp, #80]
  40d674:	b	40c7f8 <wcrtomb@plt+0x7bd8>
  40d678:	ldp	x25, x26, [sp, #64]
  40d67c:	ldp	x27, x28, [sp, #80]
  40d680:	b	40c7f8 <wcrtomb@plt+0x7bd8>
  40d684:	ldp	x25, x26, [sp, #64]
  40d688:	ldp	x27, x28, [sp, #80]
  40d68c:	b	40c7f8 <wcrtomb@plt+0x7bd8>
  40d690:	ldp	x25, x26, [sp, #64]
  40d694:	ldp	x27, x28, [sp, #80]
  40d698:	b	40c7f8 <wcrtomb@plt+0x7bd8>
  40d69c:	ldp	x25, x26, [sp, #64]
  40d6a0:	ldp	x27, x28, [sp, #80]
  40d6a4:	b	40c7f8 <wcrtomb@plt+0x7bd8>
  40d6a8:	ldp	x25, x26, [sp, #64]
  40d6ac:	ldp	x27, x28, [sp, #80]
  40d6b0:	b	40c7f8 <wcrtomb@plt+0x7bd8>
  40d6b4:	ldp	x25, x26, [sp, #64]
  40d6b8:	ldp	x27, x28, [sp, #80]
  40d6bc:	b	40c7f8 <wcrtomb@plt+0x7bd8>
  40d6c0:	ldp	x25, x26, [sp, #64]
  40d6c4:	ldp	x27, x28, [sp, #80]
  40d6c8:	b	40c7f8 <wcrtomb@plt+0x7bd8>
  40d6cc:	mov	w4, #0x1                   	// #1
  40d6d0:	mov	w3, #0x0                   	// #0
  40d6d4:	add	x2, sp, #0x128
  40d6d8:	mov	x1, x22
  40d6dc:	mov	w0, w21
  40d6e0:	bl	428afc <wcrtomb@plt+0x23edc>
  40d6e4:	ldr	w28, [sp, #104]
  40d6e8:	mov	w3, w28
  40d6ec:	add	x2, sp, #0x128
  40d6f0:	mov	x1, x22
  40d6f4:	mov	w0, w21
  40d6f8:	bl	429164 <wcrtomb@plt+0x24544>
  40d6fc:	mov	w3, w28
  40d700:	add	x2, sp, #0x128
  40d704:	mov	x1, x22
  40d708:	mov	w0, w21
  40d70c:	bl	428e2c <wcrtomb@plt+0x2420c>
  40d710:	cbz	w28, 40d760 <wcrtomb@plt+0x8b40>
  40d714:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40d718:	ldrb	w0, [x0, #848]
  40d71c:	cbz	w0, 40d760 <wcrtomb@plt+0x8b40>
  40d720:	ldr	x2, [sp, #448]
  40d724:	ldr	x1, [sp, #432]
  40d728:	add	x0, x1, #0x1ff
  40d72c:	cmp	x1, #0x0
  40d730:	csel	x0, x0, x1, lt  // lt = tstop
  40d734:	asr	x0, x0, #9
  40d738:	tst	x1, #0x1ff
  40d73c:	b.eq	40d750 <wcrtomb@plt+0x8b30>  // b.none
  40d740:	add	x1, x1, #0x1ff
  40d744:	cmp	x1, #0x3fe
  40d748:	cset	w1, hi  // hi = pmore
  40d74c:	str	w1, [sp, #112]
  40d750:	ldr	w1, [sp, #112]
  40d754:	add	x0, x0, w1, sxtw
  40d758:	cmp	x2, x0
  40d75c:	b.lt	40d16c <wcrtomb@plt+0x854c>  // b.tstop
  40d760:	add	x1, sp, #0x128
  40d764:	ldr	w0, [sp, #104]
  40d768:	bl	40c18c <wcrtomb@plt+0x756c>
  40d76c:	mov	w28, w0
  40d770:	cmp	w28, #0x1
  40d774:	b.hi	40d1a4 <wcrtomb@plt+0x8584>  // b.pmore
  40d778:	add	x0, sp, #0x128
  40d77c:	bl	40aaa0 <wcrtomb@plt+0x5e80>
  40d780:	b	40d1ac <wcrtomb@plt+0x858c>
  40d784:	mov	w0, #0x35                  	// #53
  40d788:	strb	w0, [x21, #156]
  40d78c:	ldr	x2, [sp, #112]
  40d790:	mov	x1, x21
  40d794:	add	x0, sp, #0x128
  40d798:	bl	40b4b0 <wcrtomb@plt+0x6890>
  40d79c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40d7a0:	ldr	w0, [x0, #612]
  40d7a4:	cbz	w0, 40cf68 <wcrtomb@plt+0x8348>
  40d7a8:	ldr	x0, [sp, #104]
  40d7ac:	cmp	x0, #0x0
  40d7b0:	cset	w1, ne  // ne = any
  40d7b4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40d7b8:	ldrb	w0, [x0, #21]
  40d7bc:	tst	w1, w0
  40d7c0:	b.ne	40cf90 <wcrtomb@plt+0x8370>  // b.any
  40d7c4:	add	x1, sp, #0xa8
  40d7c8:	add	x0, sp, #0x128
  40d7cc:	bl	40c570 <wcrtomb@plt+0x7950>
  40d7d0:	cmp	w0, #0x1
  40d7d4:	b.eq	40d0a0 <wcrtomb@plt+0x8480>  // b.none
  40d7d8:	cmp	w0, #0x2
  40d7dc:	b.eq	40d12c <wcrtomb@plt+0x850c>  // b.none
  40d7e0:	cbnz	w0, 40cf68 <wcrtomb@plt+0x8348>
  40d7e4:	ldr	x0, [sp, #296]
  40d7e8:	bl	440154 <argp_parse@@Base+0xca14>
  40d7ec:	str	x0, [sp, #112]
  40d7f0:	bl	403ff0 <strlen@plt>
  40d7f4:	str	x0, [sp, #128]
  40d7f8:	ldr	x21, [sp, #136]
  40d7fc:	str	x0, [sp, #152]
  40d800:	b	40d02c <wcrtomb@plt+0x840c>
  40d804:	mov	w0, #0x35                  	// #53
  40d808:	strb	w0, [x21, #156]
  40d80c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40d810:	ldr	x0, [x0, #4048]
  40d814:	ldr	x0, [x0, #56]
  40d818:	cbz	x0, 40d79c <wcrtomb@plt+0x8b7c>
  40d81c:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  40d820:	ldr	w1, [x1, #752]
  40d824:	cmp	w1, #0x4
  40d828:	b.ne	40cb64 <wcrtomb@plt+0x7f44>  // b.any
  40d82c:	bl	415f1c <wcrtomb@plt+0x112fc>
  40d830:	mov	x2, x0
  40d834:	add	x1, sp, #0x128
  40d838:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  40d83c:	add	x0, x0, #0x998
  40d840:	bl	413cf0 <wcrtomb@plt+0xf0d0>
  40d844:	ldr	x2, [sp, #112]
  40d848:	mov	x1, x21
  40d84c:	add	x0, sp, #0x128
  40d850:	bl	40b4b0 <wcrtomb@plt+0x6890>
  40d854:	b	40cf68 <wcrtomb@plt+0x8348>
  40d858:	mov	x1, x20
  40d85c:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  40d860:	add	x0, x0, #0xa30
  40d864:	bl	422bb4 <wcrtomb@plt+0x1df94>
  40d868:	cbnz	w0, 40c788 <wcrtomb@plt+0x7b68>
  40d86c:	b	40c7fc <wcrtomb@plt+0x7bdc>
  40d870:	sub	sp, sp, #0x210
  40d874:	stp	x29, x30, [sp]
  40d878:	mov	x29, sp
  40d87c:	stp	x19, x20, [sp, #16]
  40d880:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40d884:	ldr	x1, [x0, #4040]
  40d888:	mov	w0, #0x0                   	// #0
  40d88c:	cmp	x1, #0x1
  40d890:	b.ls	40d8f0 <wcrtomb@plt+0x8cd0>  // b.plast
  40d894:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40d898:	str	w0, [x1, #1912]
  40d89c:	mov	w0, #0x1                   	// #1
  40d8a0:	bl	407ed4 <wcrtomb@plt+0x32b4>
  40d8a4:	bl	4053c8 <wcrtomb@plt+0x7a8>
  40d8a8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40d8ac:	ldrb	w0, [x0, #4065]
  40d8b0:	mov	w20, #0x1                   	// #1
  40d8b4:	cbnz	w0, 40d900 <wcrtomb@plt+0x8ce0>
  40d8b8:	mov	w0, w20
  40d8bc:	bl	41d678 <wcrtomb@plt+0x18a58>
  40d8c0:	mov	x19, x0
  40d8c4:	cbz	x0, 40db3c <wcrtomb@plt+0x8f1c>
  40d8c8:	mov	x1, #0x0                   	// #0
  40d8cc:	mov	x0, x19
  40d8d0:	bl	40ec08 <wcrtomb@plt+0x9fe8>
  40d8d4:	and	w0, w0, #0xff
  40d8d8:	cbnz	w0, 40d8b8 <wcrtomb@plt+0x8c98>
  40d8dc:	mov	x2, x19
  40d8e0:	mov	x1, x19
  40d8e4:	mov	x0, #0x0                   	// #0
  40d8e8:	bl	40c73c <wcrtomb@plt+0x7b1c>
  40d8ec:	b	40d8b8 <wcrtomb@plt+0x8c98>
  40d8f0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40d8f4:	ldrb	w0, [x0, #512]
  40d8f8:	eor	w0, w0, #0x1
  40d8fc:	b	40d894 <wcrtomb@plt+0x8c74>
  40d900:	stp	x21, x22, [sp, #32]
  40d904:	stp	x23, x24, [sp, #48]
  40d908:	stp	x25, x26, [sp, #64]
  40d90c:	mov	x0, #0x3e8                 	// #1000
  40d910:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  40d914:	mov	x21, x0
  40d918:	bl	41e058 <wcrtomb@plt+0x19438>
  40d91c:	bl	41e4a8 <wcrtomb@plt+0x19888>
  40d920:	mov	x19, x0
  40d924:	cbz	x0, 40d950 <wcrtomb@plt+0x8d30>
  40d928:	mov	x1, #0x0                   	// #0
  40d92c:	ldr	x0, [x19, #16]
  40d930:	bl	40ec08 <wcrtomb@plt+0x9fe8>
  40d934:	and	w0, w0, #0xff
  40d938:	cbnz	w0, 40d91c <wcrtomb@plt+0x8cfc>
  40d93c:	ldr	x1, [x19, #16]
  40d940:	mov	x2, x1
  40d944:	mov	x0, #0x0                   	// #0
  40d948:	bl	40c73c <wcrtomb@plt+0x7b1c>
  40d94c:	b	40d91c <wcrtomb@plt+0x8cfc>
  40d950:	bl	41e520 <wcrtomb@plt+0x19900>
  40d954:	mov	x23, #0x3e8                 	// #1000
  40d958:	adrp	x24, 481000 <argp_program_version_hook@@Base+0x298>
  40d95c:	add	x24, x24, #0x27c
  40d960:	add	x25, sp, #0xc0
  40d964:	bl	41e4a8 <wcrtomb@plt+0x19888>
  40d968:	mov	x19, x0
  40d96c:	cbz	x0, 40db28 <wcrtomb@plt+0x8f08>
  40d970:	mov	x1, #0x0                   	// #0
  40d974:	ldr	x0, [x19, #16]
  40d978:	bl	40ec08 <wcrtomb@plt+0x9fe8>
  40d97c:	and	w0, w0, #0xff
  40d980:	cbnz	w0, 40d964 <wcrtomb@plt+0x8d44>
  40d984:	ldr	x0, [x19, #16]
  40d988:	bl	403ff0 <strlen@plt>
  40d98c:	mov	x26, x0
  40d990:	cmp	x23, x0
  40d994:	b.ls	40d9e8 <wcrtomb@plt+0x8dc8>  // b.plast
  40d998:	mov	x2, x26
  40d99c:	ldr	x1, [x19, #16]
  40d9a0:	mov	x0, x21
  40d9a4:	bl	403f70 <memcpy@plt>
  40d9a8:	add	x0, x21, x26
  40d9ac:	ldurb	w0, [x0, #-1]
  40d9b0:	cmp	w0, #0x2f
  40d9b4:	b.eq	40d9c4 <wcrtomb@plt+0x8da4>  // b.none
  40d9b8:	mov	w0, #0x2f                  	// #47
  40d9bc:	strb	w0, [x21, x26]
  40d9c0:	add	x26, x26, #0x1
  40d9c4:	add	x0, sp, #0x68
  40d9c8:	bl	42491c <wcrtomb@plt+0x1fcfc>
  40d9cc:	ldr	x0, [x19, #56]
  40d9d0:	bl	415f08 <wcrtomb@plt+0x112e8>
  40d9d4:	mov	x22, x0
  40d9d8:	cbnz	x0, 40da08 <wcrtomb@plt+0x8de8>
  40d9dc:	add	x0, sp, #0x68
  40d9e0:	bl	4249a8 <wcrtomb@plt+0x1fd88>
  40d9e4:	b	40d964 <wcrtomb@plt+0x8d44>
  40d9e8:	lsl	x23, x23, #1
  40d9ec:	cmp	x26, x23
  40d9f0:	b.cs	40d9e8 <wcrtomb@plt+0x8dc8>  // b.hs, b.nlast
  40d9f4:	mov	x1, x23
  40d9f8:	mov	x0, x21
  40d9fc:	bl	43ff70 <argp_parse@@Base+0xc830>
  40da00:	mov	x21, x0
  40da04:	b	40d998 <wcrtomb@plt+0x8d78>
  40da08:	stp	x27, x28, [sp, #80]
  40da0c:	ldrb	w28, [x0]
  40da10:	cbz	w28, 40db20 <wcrtomb@plt+0x8f00>
  40da14:	adrp	x27, 47d000 <_obstack_memory_used@@Base+0x3be64>
  40da18:	b	40daa0 <wcrtomb@plt+0x8e80>
  40da1c:	ldr	x0, [x19, #64]
  40da20:	cmp	x0, #0x0
  40da24:	adrp	x2, 41b000 <wcrtomb@plt+0x163e0>
  40da28:	add	x2, x2, #0x80c
  40da2c:	cset	w1, eq  // eq = none
  40da30:	ldr	x0, [x19, #16]
  40da34:	bl	41b95c <wcrtomb@plt+0x16d3c>
  40da38:	ldp	x27, x28, [sp, #80]
  40da3c:	b	40d9dc <wcrtomb@plt+0x8dbc>
  40da40:	ldr	x0, [x19, #64]
  40da44:	cmp	x0, #0x0
  40da48:	adrp	x2, 41b000 <wcrtomb@plt+0x163e0>
  40da4c:	add	x2, x2, #0x924
  40da50:	cset	w1, eq  // eq = none
  40da54:	ldr	x0, [x19, #16]
  40da58:	bl	41b95c <wcrtomb@plt+0x16d3c>
  40da5c:	ldp	x27, x28, [sp, #80]
  40da60:	b	40d9dc <wcrtomb@plt+0x8dbc>
  40da64:	add	x0, x26, x20
  40da68:	cmp	x0, x23
  40da6c:	b.hi	40daf8 <wcrtomb@plt+0x8ed8>  // b.pmore
  40da70:	add	x28, x22, #0x1
  40da74:	mov	x1, x28
  40da78:	add	x0, x21, x26
  40da7c:	bl	404910 <strcpy@plt>
  40da80:	mov	x2, x21
  40da84:	mov	x1, x28
  40da88:	add	x0, sp, #0x68
  40da8c:	bl	40c73c <wcrtomb@plt+0x7b1c>
  40da90:	add	x20, x20, #0x1
  40da94:	add	x22, x22, x20
  40da98:	ldrb	w28, [x22]
  40da9c:	cbz	w28, 40db18 <wcrtomb@plt+0x8ef8>
  40daa0:	mov	x0, x22
  40daa4:	bl	403ff0 <strlen@plt>
  40daa8:	mov	x20, x0
  40daac:	cmp	w28, #0x59
  40dab0:	b.ne	40da90 <wcrtomb@plt+0x8e70>  // b.any
  40dab4:	ldr	x0, [sp, #104]
  40dab8:	cbnz	x0, 40da64 <wcrtomb@plt+0x8e44>
  40dabc:	ldr	w2, [x24]
  40dac0:	ldr	x1, [x19, #16]
  40dac4:	ldr	w0, [x27, #2184]
  40dac8:	bl	4045c0 <__openat_2@plt>
  40dacc:	mov	w1, w0
  40dad0:	tbnz	w0, #31, 40da1c <wcrtomb@plt+0x8dfc>
  40dad4:	str	w0, [sp, #512]
  40dad8:	mov	x2, x25
  40dadc:	mov	w0, #0x0                   	// #0
  40dae0:	bl	4049a0 <__fxstat@plt>
  40dae4:	cbnz	w0, 40da40 <wcrtomb@plt+0x8e20>
  40dae8:	ldr	x0, [x19, #16]
  40daec:	bl	440154 <argp_parse@@Base+0xca14>
  40daf0:	str	x0, [sp, #104]
  40daf4:	b	40da64 <wcrtomb@plt+0x8e44>
  40daf8:	lsl	x23, x23, #1
  40dafc:	cmp	x0, x23
  40db00:	b.hi	40daf8 <wcrtomb@plt+0x8ed8>  // b.pmore
  40db04:	mov	x1, x23
  40db08:	mov	x0, x21
  40db0c:	bl	43ff70 <argp_parse@@Base+0xc830>
  40db10:	mov	x21, x0
  40db14:	b	40da70 <wcrtomb@plt+0x8e50>
  40db18:	ldp	x27, x28, [sp, #80]
  40db1c:	b	40d9dc <wcrtomb@plt+0x8dbc>
  40db20:	ldp	x27, x28, [sp, #80]
  40db24:	b	40d9dc <wcrtomb@plt+0x8dbc>
  40db28:	mov	x0, x21
  40db2c:	bl	4047c0 <free@plt>
  40db30:	ldp	x21, x22, [sp, #32]
  40db34:	ldp	x23, x24, [sp, #48]
  40db38:	ldp	x25, x26, [sp, #64]
  40db3c:	bl	40b1ec <wcrtomb@plt+0x65cc>
  40db40:	bl	4076d0 <wcrtomb@plt+0x2ab0>
  40db44:	bl	427428 <wcrtomb@plt+0x22808>
  40db48:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40db4c:	ldr	x0, [x0, #768]
  40db50:	cbz	x0, 40db58 <wcrtomb@plt+0x8f38>
  40db54:	bl	416da0 <wcrtomb@plt+0x12180>
  40db58:	ldp	x19, x20, [sp, #16]
  40db5c:	ldp	x29, x30, [sp]
  40db60:	add	sp, sp, #0x210
  40db64:	ret
  40db68:	cbz	x0, 40dd48 <wcrtomb@plt+0x9128>
  40db6c:	stp	x29, x30, [sp, #-48]!
  40db70:	mov	x29, sp
  40db74:	stp	x19, x20, [sp, #16]
  40db78:	mov	x19, x0
  40db7c:	tbnz	x0, #63, 40dc58 <wcrtomb@plt+0x9038>
  40db80:	mov	w0, #0x3                   	// #3
  40db84:	strh	w0, [sp, #40]
  40db88:	str	w19, [sp, #44]
  40db8c:	cmp	x19, w19, sxtw
  40db90:	cset	w0, eq  // eq = none
  40db94:	cbz	w0, 40dbe0 <wcrtomb@plt+0x8fc0>
  40db98:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40db9c:	ldr	w0, [x0, #912]
  40dba0:	mov	w1, #0x3fffffff            	// #1073741823
  40dba4:	cmp	w0, w1
  40dba8:	b.le	40dc78 <wcrtomb@plt+0x9058>
  40dbac:	add	x2, sp, #0x28
  40dbb0:	mov	w1, #0x6d01                	// #27905
  40dbb4:	movk	w1, #0x4008, lsl #16
  40dbb8:	mov	w3, #0xc0000000            	// #-1073741824
  40dbbc:	add	w0, w0, w3
  40dbc0:	bl	42b1b0 <wcrtomb@plt+0x26590>
  40dbc4:	mvn	w0, w0
  40dbc8:	lsr	w0, w0, #31
  40dbcc:	cbnz	w0, 40dc4c <wcrtomb@plt+0x902c>
  40dbd0:	bl	404ad0 <__errno_location@plt>
  40dbd4:	ldr	w0, [x0]
  40dbd8:	cmp	w0, #0x5
  40dbdc:	b.eq	40dc94 <wcrtomb@plt+0x9074>  // b.none
  40dbe0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40dbe4:	ldr	w0, [x0, #912]
  40dbe8:	mov	w1, #0x3fffffff            	// #1073741823
  40dbec:	cmp	w0, w1
  40dbf0:	b.le	40dcec <wcrtomb@plt+0x90cc>
  40dbf4:	mov	w2, #0x1                   	// #1
  40dbf8:	mov	x1, #0x0                   	// #0
  40dbfc:	mov	w3, #0xc0000000            	// #-1073741824
  40dc00:	add	w0, w0, w3
  40dc04:	bl	42b034 <wcrtomb@plt+0x26414>
  40dc08:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  40dc0c:	ldr	x2, [x1, #856]
  40dc10:	mul	x1, x19, x2
  40dc14:	add	x20, x0, x1
  40dc18:	sdiv	x19, x1, x19
  40dc1c:	cmp	x19, x2
  40dc20:	b.ne	40dc38 <wcrtomb@plt+0x9018>  // b.any
  40dc24:	cmp	x0, x20
  40dc28:	lsr	x1, x1, #63
  40dc2c:	cset	w0, gt
  40dc30:	cmp	w0, w1, uxtb
  40dc34:	b.eq	40dcfc <wcrtomb@plt+0x90dc>  // b.none
  40dc38:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40dc3c:	ldr	x0, [x0, #624]
  40dc40:	mov	x1, x20
  40dc44:	ldr	x0, [x0]
  40dc48:	bl	429ed4 <wcrtomb@plt+0x252b4>
  40dc4c:	ldp	x19, x20, [sp, #16]
  40dc50:	ldp	x29, x30, [sp], #48
  40dc54:	ret
  40dc58:	mov	w0, #0x4                   	// #4
  40dc5c:	strh	w0, [sp, #40]
  40dc60:	neg	w0, w19
  40dc64:	str	w0, [sp, #44]
  40dc68:	sxtw	x0, w0
  40dc6c:	cmn	x0, x19
  40dc70:	cset	w0, eq  // eq = none
  40dc74:	b	40db94 <wcrtomb@plt+0x8f74>
  40dc78:	add	x2, sp, #0x28
  40dc7c:	mov	x1, #0x6d01                	// #27905
  40dc80:	movk	x1, #0x4008, lsl #16
  40dc84:	bl	404bd0 <ioctl@plt>
  40dc88:	mvn	w0, w0
  40dc8c:	lsr	w0, w0, #31
  40dc90:	b	40dbcc <wcrtomb@plt+0x8fac>
  40dc94:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40dc98:	ldr	w0, [x0, #912]
  40dc9c:	mov	w1, #0x3fffffff            	// #1073741823
  40dca0:	cmp	w0, w1
  40dca4:	b.le	40dcd0 <wcrtomb@plt+0x90b0>
  40dca8:	add	x2, sp, #0x28
  40dcac:	mov	w1, #0x6d01                	// #27905
  40dcb0:	movk	w1, #0x4008, lsl #16
  40dcb4:	mov	w3, #0xc0000000            	// #-1073741824
  40dcb8:	add	w0, w0, w3
  40dcbc:	bl	42b1b0 <wcrtomb@plt+0x26590>
  40dcc0:	mvn	w0, w0
  40dcc4:	lsr	w0, w0, #31
  40dcc8:	cbz	w0, 40dbe0 <wcrtomb@plt+0x8fc0>
  40dccc:	b	40dc4c <wcrtomb@plt+0x902c>
  40dcd0:	add	x2, sp, #0x28
  40dcd4:	mov	x1, #0x6d01                	// #27905
  40dcd8:	movk	x1, #0x4008, lsl #16
  40dcdc:	bl	404bd0 <ioctl@plt>
  40dce0:	mvn	w0, w0
  40dce4:	lsr	w0, w0, #31
  40dce8:	b	40dcc8 <wcrtomb@plt+0x90a8>
  40dcec:	mov	w2, #0x1                   	// #1
  40dcf0:	mov	x1, #0x0                   	// #0
  40dcf4:	bl	4041d0 <lseek@plt>
  40dcf8:	b	40dc08 <wcrtomb@plt+0x8fe8>
  40dcfc:	cmp	x20, #0x0
  40dd00:	csel	x20, x20, xzr, ge  // ge = tcont
  40dd04:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40dd08:	ldr	w0, [x0, #912]
  40dd0c:	mov	w1, #0x3fffffff            	// #1073741823
  40dd10:	cmp	w0, w1
  40dd14:	b.le	40dd38 <wcrtomb@plt+0x9118>
  40dd18:	mov	w2, #0x0                   	// #0
  40dd1c:	mov	x1, x20
  40dd20:	mov	w3, #0xc0000000            	// #-1073741824
  40dd24:	add	w0, w0, w3
  40dd28:	bl	42b034 <wcrtomb@plt+0x26414>
  40dd2c:	cmp	x0, x20
  40dd30:	b.ne	40dc38 <wcrtomb@plt+0x9018>  // b.any
  40dd34:	b	40dc4c <wcrtomb@plt+0x902c>
  40dd38:	mov	w2, #0x0                   	// #0
  40dd3c:	mov	x1, x20
  40dd40:	bl	4041d0 <lseek@plt>
  40dd44:	b	40dd2c <wcrtomb@plt+0x910c>
  40dd48:	ret
  40dd4c:	stp	x29, x30, [sp, #-48]!
  40dd50:	mov	x29, sp
  40dd54:	stp	x19, x20, [sp, #16]
  40dd58:	mov	w19, w0
  40dd5c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40dd60:	ldr	x20, [x0, #3920]
  40dd64:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40dd68:	add	x2, x1, #0x7b0
  40dd6c:	ldr	x1, [x1, #1968]
  40dd70:	str	x1, [x0, #3920]
  40dd74:	ldrb	w0, [x2, #8]
  40dd78:	cbz	w0, 40ddc4 <wcrtomb@plt+0x91a4>
  40dd7c:	str	x21, [sp, #32]
  40dd80:	adrp	x21, 481000 <argp_program_version_hook@@Base+0x298>
  40dd84:	mov	w0, #0x1                   	// #1
  40dd88:	str	w0, [x21, #912]
  40dd8c:	bl	407eb0 <wcrtomb@plt+0x3290>
  40dd90:	str	wzr, [x21, #912]
  40dd94:	ldr	x21, [sp, #32]
  40dd98:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40dd9c:	str	x20, [x0, #3920]
  40dda0:	cbz	w19, 40ddb0 <wcrtomb@plt+0x9190>
  40dda4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40dda8:	ldrb	w0, [x0, #1976]
  40ddac:	cbz	w0, 40ddf0 <wcrtomb@plt+0x91d0>
  40ddb0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40ddb4:	str	wzr, [x0, #1980]
  40ddb8:	ldp	x19, x20, [sp, #16]
  40ddbc:	ldp	x29, x30, [sp], #48
  40ddc0:	ret
  40ddc4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40ddc8:	ldr	x0, [x0, #3888]
  40ddcc:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40ddd0:	ldr	x1, [x1, #3968]
  40ddd4:	add	x0, x0, x1
  40ddd8:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40dddc:	ldr	x1, [x1, #3872]
  40dde0:	sub	x0, x0, x1
  40dde4:	bl	40db68 <wcrtomb@plt+0x8f48>
  40dde8:	bl	407eb0 <wcrtomb@plt+0x3290>
  40ddec:	b	40dd98 <wcrtomb@plt+0x9178>
  40ddf0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40ddf4:	ldr	x0, [x0, #3888]
  40ddf8:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40ddfc:	ldr	x1, [x1, #3968]
  40de00:	add	x0, x0, x1
  40de04:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40de08:	ldr	x1, [x1, #3872]
  40de0c:	sub	x0, x1, x0
  40de10:	bl	40db68 <wcrtomb@plt+0x8f48>
  40de14:	b	40ddb0 <wcrtomb@plt+0x9190>
  40de18:	cbz	x1, 40deb8 <wcrtomb@plt+0x9298>
  40de1c:	stp	x29, x30, [sp, #-80]!
  40de20:	mov	x29, sp
  40de24:	stp	x19, x20, [sp, #16]
  40de28:	stp	x21, x22, [sp, #32]
  40de2c:	stp	x23, x24, [sp, #48]
  40de30:	str	x25, [sp, #64]
  40de34:	mov	x19, x0
  40de38:	add	x22, x0, x1, lsl #9
  40de3c:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40de40:	add	x20, x20, #0x7b0
  40de44:	mov	x24, #0x200                 	// #512
  40de48:	adrp	x23, 481000 <argp_program_version_hook@@Base+0x298>
  40de4c:	add	x23, x23, #0x2ac
  40de50:	mov	w25, #0x1                   	// #1
  40de54:	b	40de6c <wcrtomb@plt+0x924c>
  40de58:	mov	w0, w25
  40de5c:	bl	40dd4c <wcrtomb@plt+0x912c>
  40de60:	add	x19, x19, #0x200
  40de64:	cmp	x19, x22
  40de68:	b.eq	40dea0 <wcrtomb@plt+0x9280>  // b.none
  40de6c:	ldr	x3, [x20]
  40de70:	ldr	w1, [x20, #12]
  40de74:	add	w21, w1, #0x1
  40de78:	str	w21, [x20, #12]
  40de7c:	sbfiz	x0, x1, #9, #32
  40de80:	mov	x2, x24
  40de84:	mov	x1, x19
  40de88:	add	x0, x3, x0
  40de8c:	bl	403f70 <memcpy@plt>
  40de90:	ldr	w0, [x23]
  40de94:	cmp	w21, w0
  40de98:	b.ne	40de60 <wcrtomb@plt+0x9240>  // b.any
  40de9c:	b	40de58 <wcrtomb@plt+0x9238>
  40dea0:	ldp	x19, x20, [sp, #16]
  40dea4:	ldp	x21, x22, [sp, #32]
  40dea8:	ldp	x23, x24, [sp, #48]
  40deac:	ldr	x25, [sp, #64]
  40deb0:	ldp	x29, x30, [sp], #80
  40deb4:	ret
  40deb8:	ret
  40debc:	stp	x29, x30, [sp, #-112]!
  40dec0:	mov	x29, sp
  40dec4:	stp	x19, x20, [sp, #16]
  40dec8:	stp	x21, x22, [sp, #32]
  40decc:	stp	x23, x24, [sp, #48]
  40ded0:	bl	41d73c <wcrtomb@plt+0x18b1c>
  40ded4:	mov	w0, #0x2                   	// #2
  40ded8:	bl	407ed4 <wcrtomb@plt+0x32b4>
  40dedc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40dee0:	ldr	x0, [x0, #624]
  40dee4:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  40dee8:	add	x1, x1, #0xca8
  40deec:	ldr	x0, [x0]
  40def0:	bl	404720 <strcmp@plt>
  40def4:	cmp	w0, #0x0
  40def8:	cset	w1, eq  // eq = none
  40defc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40df00:	strb	w1, [x0, #1976]
  40df04:	mov	w22, #0x0                   	// #0
  40df08:	adrp	x21, 481000 <argp_program_version_hook@@Base+0x298>
  40df0c:	add	x21, x21, #0x20
  40df10:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40df14:	add	x20, x20, #0xfa8
  40df18:	mov	w23, #0x1                   	// #1
  40df1c:	adrp	x24, 481000 <argp_program_version_hook@@Base+0x298>
  40df20:	add	x24, x24, #0xd
  40df24:	b	40dfbc <wcrtomb@plt+0x939c>
  40df28:	cmp	w0, #0x2
  40df2c:	b.eq	40e4d8 <wcrtomb@plt+0x98b8>  // b.none
  40df30:	cbz	w0, 40df74 <wcrtomb@plt+0x9354>
  40df34:	ldr	x0, [x21, #8]
  40df38:	bl	41e41c <wcrtomb@plt+0x197fc>
  40df3c:	cbz	x0, 40df80 <wcrtomb@plt+0x9360>
  40df40:	ldr	x1, [x0, #48]
  40df44:	add	x1, x1, #0x1
  40df48:	str	x1, [x0, #48]
  40df4c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40df50:	ldr	x0, [x0, #696]
  40df54:	cbnz	x0, 40df88 <wcrtomb@plt+0x9368>
  40df58:	cmp	x1, #0x0
  40df5c:	cset	w0, eq  // eq = none
  40df60:	cbnz	w0, 40df94 <wcrtomb@plt+0x9374>
  40df64:	stp	x25, x26, [sp, #64]
  40df68:	stp	x27, x28, [sp, #80]
  40df6c:	mov	w19, #0x1                   	// #1
  40df70:	b	40e4e0 <wcrtomb@plt+0x98c0>
  40df74:	stp	x25, x26, [sp, #64]
  40df78:	stp	x27, x28, [sp, #80]
  40df7c:	bl	404660 <abort@plt>
  40df80:	bl	419828 <wcrtomb@plt+0x14c08>
  40df84:	b	40dfb8 <wcrtomb@plt+0x9398>
  40df88:	cmp	x1, x0
  40df8c:	cset	w0, ne  // ne = any
  40df90:	b	40df60 <wcrtomb@plt+0x9340>
  40df94:	bl	419828 <wcrtomb@plt+0x14c08>
  40df98:	b	40dfb8 <wcrtomb@plt+0x9398>
  40df9c:	ldrb	w0, [x24]
  40dfa0:	cbz	w0, 40e4ac <wcrtomb@plt+0x988c>
  40dfa4:	ldr	x0, [x20]
  40dfa8:	bl	405884 <wcrtomb@plt+0xc64>
  40dfac:	b	40dfb8 <wcrtomb@plt+0x9398>
  40dfb0:	cmp	w22, #0x4
  40dfb4:	b.eq	40e078 <wcrtomb@plt+0x9458>  // b.none
  40dfb8:	mov	w22, w19
  40dfbc:	mov	w2, w23
  40dfc0:	mov	x1, x21
  40dfc4:	mov	x0, x20
  40dfc8:	bl	4187e4 <wcrtomb@plt+0x13bc4>
  40dfcc:	mov	w19, w0
  40dfd0:	cmp	w0, #0x3
  40dfd4:	b.eq	40df9c <wcrtomb@plt+0x937c>  // b.none
  40dfd8:	b.ls	40df28 <wcrtomb@plt+0x9308>  // b.plast
  40dfdc:	cmp	w0, #0x4
  40dfe0:	b.eq	40e55c <wcrtomb@plt+0x993c>  // b.none
  40dfe4:	cmp	w0, #0x5
  40dfe8:	b.ne	40dfb8 <wcrtomb@plt+0x9398>  // b.any
  40dfec:	ldr	x0, [x20]
  40dff0:	bl	405884 <wcrtomb@plt+0xc64>
  40dff4:	cmp	w22, #0x3
  40dff8:	b.hi	40dfb0 <wcrtomb@plt+0x9390>  // b.pmore
  40dffc:	cbnz	w22, 40e034 <wcrtomb@plt+0x9414>
  40e000:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40e004:	ldr	x0, [x0, #944]
  40e008:	cbz	x0, 40e010 <wcrtomb@plt+0x93f0>
  40e00c:	blr	x0
  40e010:	mov	w2, #0x5                   	// #5
  40e014:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  40e018:	add	x1, x1, #0x960
  40e01c:	mov	x0, #0x0                   	// #0
  40e020:	bl	4049c0 <dcgettext@plt>
  40e024:	mov	x2, x0
  40e028:	mov	w1, #0x0                   	// #0
  40e02c:	mov	w0, #0x0                   	// #0
  40e030:	bl	404050 <error@plt>
  40e034:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40e038:	ldr	x0, [x0, #944]
  40e03c:	cbz	x0, 40e044 <wcrtomb@plt+0x9424>
  40e040:	blr	x0
  40e044:	mov	w2, #0x5                   	// #5
  40e048:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40e04c:	add	x1, x1, #0xa38
  40e050:	mov	x0, #0x0                   	// #0
  40e054:	bl	4049c0 <dcgettext@plt>
  40e058:	mov	x2, x0
  40e05c:	mov	w1, #0x0                   	// #0
  40e060:	mov	w0, #0x0                   	// #0
  40e064:	bl	404050 <error@plt>
  40e068:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e06c:	mov	w1, #0x2                   	// #2
  40e070:	str	w1, [x0, #3392]
  40e074:	b	40dfb8 <wcrtomb@plt+0x9398>
  40e078:	stp	x25, x26, [sp, #64]
  40e07c:	stp	x27, x28, [sp, #80]
  40e080:	bl	404660 <abort@plt>
  40e084:	sxtw	x2, w2
  40e088:	bl	403f70 <memcpy@plt>
  40e08c:	b	40e534 <wcrtomb@plt+0x9914>
  40e090:	bl	406ab8 <wcrtomb@plt+0x1e98>
  40e094:	b	40e118 <wcrtomb@plt+0x94f8>
  40e098:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40e09c:	ldrb	w0, [x0, #13]
  40e0a0:	cbz	w0, 40e13c <wcrtomb@plt+0x951c>
  40e0a4:	ldr	x0, [sp, #104]
  40e0a8:	ldr	x0, [x0]
  40e0ac:	bl	405884 <wcrtomb@plt+0xc64>
  40e0b0:	b	40e100 <wcrtomb@plt+0x94e0>
  40e0b4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40e0b8:	ldr	x0, [x0, #944]
  40e0bc:	cbz	x0, 40e0c4 <wcrtomb@plt+0x94a4>
  40e0c0:	blr	x0
  40e0c4:	mov	w2, #0x5                   	// #5
  40e0c8:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40e0cc:	add	x1, x1, #0xa50
  40e0d0:	mov	x0, #0x0                   	// #0
  40e0d4:	bl	4049c0 <dcgettext@plt>
  40e0d8:	mov	x2, x0
  40e0dc:	mov	w1, #0x0                   	// #0
  40e0e0:	mov	w0, #0x0                   	// #0
  40e0e4:	bl	404050 <error@plt>
  40e0e8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e0ec:	mov	w1, #0x2                   	// #2
  40e0f0:	str	w1, [x0, #3392]
  40e0f4:	ldr	x0, [sp, #104]
  40e0f8:	ldr	x0, [x0]
  40e0fc:	bl	405884 <wcrtomb@plt+0xc64>
  40e100:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e104:	ldr	x1, [x0, #3944]
  40e108:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e10c:	ldr	x0, [x0, #3880]
  40e110:	cmp	x1, x0
  40e114:	b.eq	40e090 <wcrtomb@plt+0x9470>  // b.none
  40e118:	mov	w2, #0x0                   	// #0
  40e11c:	mov	x1, x27
  40e120:	ldr	x0, [sp, #104]
  40e124:	bl	4187e4 <wcrtomb@plt+0x13bc4>
  40e128:	mov	w19, w0
  40e12c:	mov	x0, x27
  40e130:	bl	413ba4 <wcrtomb@plt+0xef84>
  40e134:	cmp	w19, #0x3
  40e138:	b.eq	40e098 <wcrtomb@plt+0x9478>  // b.none
  40e13c:	sub	w0, w19, #0x3
  40e140:	cmp	w0, #0x1
  40e144:	b.ls	40e3f0 <wcrtomb@plt+0x97d0>  // b.plast
  40e148:	cmp	w19, #0x5
  40e14c:	b.eq	40e0b4 <wcrtomb@plt+0x9494>  // b.none
  40e150:	ldr	x0, [x27, #8]
  40e154:	bl	41e41c <wcrtomb@plt+0x197fc>
  40e158:	cbz	x0, 40e180 <wcrtomb@plt+0x9560>
  40e15c:	ldr	x1, [x0, #48]
  40e160:	add	x1, x1, #0x1
  40e164:	str	x1, [x0, #48]
  40e168:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40e16c:	ldr	x0, [x0, #696]
  40e170:	cbnz	x0, 40e1fc <wcrtomb@plt+0x95dc>
  40e174:	cmp	x1, #0x0
  40e178:	cset	w0, ne  // ne = any
  40e17c:	cbnz	w0, 40e208 <wcrtomb@plt+0x95e8>
  40e180:	ldr	x19, [x27, #352]
  40e184:	cbz	x19, 40e280 <wcrtomb@plt+0x9660>
  40e188:	ldr	x24, [x27, #360]
  40e18c:	and	x22, x19, #0x1ff
  40e190:	lsr	x1, x19, #9
  40e194:	mov	x0, x24
  40e198:	bl	40de18 <wcrtomb@plt+0x91f8>
  40e19c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e1a0:	add	x23, x0, #0x7b0
  40e1a4:	ldr	w20, [x23, #12]
  40e1a8:	sbfiz	x1, x20, #9, #32
  40e1ac:	ldr	x21, [x0, #1968]
  40e1b0:	add	x21, x21, x1
  40e1b4:	and	x1, x19, #0xfffffffffffffe00
  40e1b8:	mov	x2, x22
  40e1bc:	add	x1, x24, x1
  40e1c0:	mov	x0, x21
  40e1c4:	bl	403f70 <memcpy@plt>
  40e1c8:	mov	x2, #0x200                 	// #512
  40e1cc:	sub	x2, x2, x22
  40e1d0:	mov	w1, #0x0                   	// #0
  40e1d4:	add	x0, x21, x22
  40e1d8:	bl	404420 <memset@plt>
  40e1dc:	add	w20, w20, #0x1
  40e1e0:	str	w20, [x23, #12]
  40e1e4:	ldr	w0, [x26]
  40e1e8:	cmp	w20, w0
  40e1ec:	b.ne	40e2a8 <wcrtomb@plt+0x9688>  // b.any
  40e1f0:	mov	w0, #0x1                   	// #1
  40e1f4:	bl	40dd4c <wcrtomb@plt+0x912c>
  40e1f8:	b	40e2a8 <wcrtomb@plt+0x9688>
  40e1fc:	cmp	x1, x0
  40e200:	cset	w0, eq  // eq = none
  40e204:	b	40e17c <wcrtomb@plt+0x955c>
  40e208:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e20c:	ldr	x0, [x0, #4008]
  40e210:	bl	405884 <wcrtomb@plt+0xc64>
  40e214:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40e218:	ldr	x0, [x0, #168]
  40e21c:	add	x2, x0, #0x3fe
  40e220:	adds	x0, x0, #0x1ff
  40e224:	csel	x2, x2, x0, mi  // mi = first
  40e228:	asr	x19, x2, #9
  40e22c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e230:	ldr	x1, [x0, #3944]
  40e234:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e238:	ldr	x0, [x0, #3880]
  40e23c:	sub	x0, x0, x1
  40e240:	asr	x3, x0, #9
  40e244:	cmp	x3, x2, asr #9
  40e248:	b.gt	40e270 <wcrtomb@plt+0x9650>
  40e24c:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e250:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e254:	sub	x19, x19, x0, asr #9
  40e258:	bl	406ab8 <wcrtomb@plt+0x1e98>
  40e25c:	ldr	x1, [x21, #3944]
  40e260:	ldr	x0, [x20, #3880]
  40e264:	sub	x0, x0, x1
  40e268:	cmp	x19, x0, asr #9
  40e26c:	b.ge	40e254 <wcrtomb@plt+0x9634>  // b.tcont
  40e270:	add	x19, x1, x19, lsl #9
  40e274:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e278:	str	x19, [x0, #3944]
  40e27c:	b	40e53c <wcrtomb@plt+0x991c>
  40e280:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e284:	ldr	x1, [x0, #4000]
  40e288:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e28c:	ldr	x0, [x0, #3992]
  40e290:	bl	40de18 <wcrtomb@plt+0x91f8>
  40e294:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e298:	ldr	x1, [x0, #4016]
  40e29c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e2a0:	ldr	x0, [x0, #4024]
  40e2a4:	bl	40de18 <wcrtomb@plt+0x91f8>
  40e2a8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e2ac:	add	x20, x0, #0x7b0
  40e2b0:	ldr	w19, [x20, #12]
  40e2b4:	ldr	x3, [x0, #1968]
  40e2b8:	sbfiz	x0, x19, #9, #32
  40e2bc:	mov	x2, #0x200                 	// #512
  40e2c0:	ldr	x21, [sp, #104]
  40e2c4:	ldr	x1, [x21]
  40e2c8:	add	x0, x3, x0
  40e2cc:	bl	403f70 <memcpy@plt>
  40e2d0:	add	w19, w19, #0x1
  40e2d4:	str	w19, [x20, #12]
  40e2d8:	ldr	x0, [x27, #136]
  40e2dc:	add	x23, x0, #0x3fe
  40e2e0:	adds	x0, x0, #0x1ff
  40e2e4:	csel	x0, x23, x0, mi  // mi = first
  40e2e8:	asr	x23, x0, #9
  40e2ec:	ldr	x0, [x21]
  40e2f0:	bl	405884 <wcrtomb@plt+0xc64>
  40e2f4:	ldr	w1, [x20, #12]
  40e2f8:	ldr	w0, [x26]
  40e2fc:	cmp	w1, w0
  40e300:	b.eq	40e340 <wcrtomb@plt+0x9720>  // b.none
  40e304:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e308:	ldr	x0, [x0, #3880]
  40e30c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e310:	ldr	x1, [x1, #3944]
  40e314:	sub	x0, x0, x1
  40e318:	asr	x21, x0, #9
  40e31c:	sbfx	x0, x0, #9, #32
  40e320:	cmp	x0, x23
  40e324:	csel	w21, w21, w23, le
  40e328:	cbz	x23, 40e100 <wcrtomb@plt+0x94e0>
  40e32c:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e330:	adrp	x28, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e334:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e338:	add	x25, x25, #0x7b0
  40e33c:	b	40e37c <wcrtomb@plt+0x975c>
  40e340:	mov	w0, #0x1                   	// #1
  40e344:	bl	40dd4c <wcrtomb@plt+0x912c>
  40e348:	b	40e304 <wcrtomb@plt+0x96e4>
  40e34c:	bl	406a9c <wcrtomb@plt+0x1e7c>
  40e350:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e354:	ldr	x0, [x0, #3920]
  40e358:	str	x0, [x24, #3944]
  40e35c:	ldr	w21, [x26]
  40e360:	cmp	x23, w21, sxtw
  40e364:	csel	w21, w21, w23, ge  // ge = tcont
  40e368:	b	40e38c <wcrtomb@plt+0x976c>
  40e36c:	bl	404660 <abort@plt>
  40e370:	mov	w0, #0x1                   	// #1
  40e374:	bl	40dd4c <wcrtomb@plt+0x912c>
  40e378:	cbz	x23, 40e100 <wcrtomb@plt+0x94e0>
  40e37c:	ldr	x1, [x24, #3944]
  40e380:	ldr	x0, [x28, #3880]
  40e384:	cmp	x1, x0
  40e388:	b.eq	40e34c <wcrtomb@plt+0x972c>  // b.none
  40e38c:	ldr	w20, [x25, #12]
  40e390:	ldr	w19, [x26]
  40e394:	sub	w19, w19, w20
  40e398:	cmp	w19, w21
  40e39c:	csel	w19, w19, w21, le
  40e3a0:	cbz	w19, 40e36c <wcrtomb@plt+0x974c>
  40e3a4:	lsl	w22, w19, #9
  40e3a8:	sxtw	x22, w22
  40e3ac:	sbfiz	x0, x20, #9, #32
  40e3b0:	ldr	x3, [x25]
  40e3b4:	mov	x2, x22
  40e3b8:	ldr	x1, [x24, #3944]
  40e3bc:	add	x0, x3, x0
  40e3c0:	bl	403f70 <memcpy@plt>
  40e3c4:	add	w20, w20, w19
  40e3c8:	str	w20, [x25, #12]
  40e3cc:	ldr	x0, [x24, #3944]
  40e3d0:	add	x22, x0, x22
  40e3d4:	str	x22, [x24, #3944]
  40e3d8:	sub	x23, x23, w19, sxtw
  40e3dc:	sub	w21, w21, w19
  40e3e0:	ldr	w0, [x26]
  40e3e4:	cmp	w20, w0
  40e3e8:	b.ne	40e378 <wcrtomb@plt+0x9758>  // b.any
  40e3ec:	b	40e370 <wcrtomb@plt+0x9750>
  40e3f0:	mov	w20, #0x0                   	// #0
  40e3f4:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e3f8:	add	x21, x21, #0x7b0
  40e3fc:	adrp	x22, 481000 <argp_program_version_hook@@Base+0x298>
  40e400:	add	x22, x22, #0x2ac
  40e404:	ldr	w0, [x21, #12]
  40e408:	ldr	w19, [x22]
  40e40c:	sub	w19, w19, w0
  40e410:	lsl	w2, w19, #9
  40e414:	sbfiz	x0, x0, #9, #32
  40e418:	ldr	x3, [x21]
  40e41c:	sxtw	x2, w2
  40e420:	mov	w1, #0x0                   	// #0
  40e424:	add	x0, x3, x0
  40e428:	bl	404420 <memset@plt>
  40e42c:	add	w20, w20, w19
  40e430:	cmp	w20, #0x1
  40e434:	cset	w0, le
  40e438:	bl	40dd4c <wcrtomb@plt+0x912c>
  40e43c:	cmp	w20, #0x1
  40e440:	b.le	40e404 <wcrtomb@plt+0x97e4>
  40e444:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e448:	ldrb	w0, [x0, #1976]
  40e44c:	cbnz	w0, 40e4a0 <wcrtomb@plt+0x9880>
  40e450:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40e454:	ldr	w0, [x0, #912]
  40e458:	mov	w1, #0x3fffffff            	// #1073741823
  40e45c:	cmp	w0, w1
  40e460:	b.le	40e470 <wcrtomb@plt+0x9850>
  40e464:	ldp	x25, x26, [sp, #64]
  40e468:	ldp	x27, x28, [sp, #80]
  40e46c:	b	40e584 <wcrtomb@plt+0x9964>
  40e470:	bl	421210 <wcrtomb@plt+0x1c5f0>
  40e474:	cbnz	w0, 40e484 <wcrtomb@plt+0x9864>
  40e478:	ldp	x25, x26, [sp, #64]
  40e47c:	ldp	x27, x28, [sp, #80]
  40e480:	b	40e584 <wcrtomb@plt+0x9964>
  40e484:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40e488:	ldr	x0, [x0, #624]
  40e48c:	ldr	x0, [x0]
  40e490:	bl	42a11c <wcrtomb@plt+0x254fc>
  40e494:	ldp	x25, x26, [sp, #64]
  40e498:	ldp	x27, x28, [sp, #80]
  40e49c:	b	40e584 <wcrtomb@plt+0x9964>
  40e4a0:	ldp	x25, x26, [sp, #64]
  40e4a4:	ldp	x27, x28, [sp, #80]
  40e4a8:	b	40e584 <wcrtomb@plt+0x9964>
  40e4ac:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e4b0:	ldr	x0, [x0, #3872]
  40e4b4:	sub	x0, x0, #0x1
  40e4b8:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e4bc:	str	x0, [x1, #3968]
  40e4c0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40e4c4:	ldr	x0, [x0, #856]
  40e4c8:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  40e4cc:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e4d0:	str	x0, [x1, #1968]
  40e4d4:	b	40e584 <wcrtomb@plt+0x9964>
  40e4d8:	stp	x25, x26, [sp, #64]
  40e4dc:	stp	x27, x28, [sp, #80]
  40e4e0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e4e4:	ldr	x0, [x0, #3872]
  40e4e8:	sub	x0, x0, #0x1
  40e4ec:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e4f0:	str	x0, [x1, #3968]
  40e4f4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40e4f8:	ldr	x0, [x0, #856]
  40e4fc:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  40e500:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e504:	add	x4, x1, #0x7b0
  40e508:	str	x0, [x1, #1968]
  40e50c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e510:	strb	wzr, [x1, #3928]
  40e514:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e518:	ldr	x1, [x1, #3920]
  40e51c:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e520:	ldr	x2, [x2, #3944]
  40e524:	sub	x2, x2, x1
  40e528:	asr	x3, x2, #9
  40e52c:	str	w3, [x4, #12]
  40e530:	cbnz	w3, 40e084 <wcrtomb@plt+0x9464>
  40e534:	cmp	w19, #0x1
  40e538:	b.eq	40e208 <wcrtomb@plt+0x95e8>  // b.none
  40e53c:	adrp	x27, 481000 <argp_program_version_hook@@Base+0x298>
  40e540:	add	x27, x27, #0x20
  40e544:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e548:	add	x0, x0, #0xfa8
  40e54c:	str	x0, [sp, #104]
  40e550:	adrp	x26, 481000 <argp_program_version_hook@@Base+0x298>
  40e554:	add	x26, x26, #0x2ac
  40e558:	b	40e100 <wcrtomb@plt+0x94e0>
  40e55c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e560:	ldr	x0, [x0, #3872]
  40e564:	sub	x0, x0, #0x1
  40e568:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e56c:	str	x0, [x1, #3968]
  40e570:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40e574:	ldr	x0, [x0, #856]
  40e578:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  40e57c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e580:	str	x0, [x1, #1968]
  40e584:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e588:	ldr	x0, [x0, #1968]
  40e58c:	bl	4047c0 <free@plt>
  40e590:	bl	4076d0 <wcrtomb@plt+0x2ab0>
  40e594:	bl	41dddc <wcrtomb@plt+0x191bc>
  40e598:	ldp	x19, x20, [sp, #16]
  40e59c:	ldp	x21, x22, [sp, #32]
  40e5a0:	ldp	x23, x24, [sp, #48]
  40e5a4:	ldp	x29, x30, [sp], #112
  40e5a8:	ret
  40e5ac:	stp	x29, x30, [sp, #-16]!
  40e5b0:	mov	x29, sp
  40e5b4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e5b8:	ldr	x0, [x0, #3976]
  40e5bc:	cbz	x0, 40e5c4 <wcrtomb@plt+0x99a4>
  40e5c0:	blr	x0
  40e5c4:	mov	w2, #0x5                   	// #5
  40e5c8:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40e5cc:	add	x1, x1, #0xa78
  40e5d0:	mov	x0, #0x0                   	// #0
  40e5d4:	bl	4049c0 <dcgettext@plt>
  40e5d8:	mov	x2, x0
  40e5dc:	mov	w1, #0x0                   	// #0
  40e5e0:	mov	w0, #0x2                   	// #2
  40e5e4:	bl	404050 <error@plt>
  40e5e8:	bl	404660 <abort@plt>
  40e5ec:	stp	x29, x30, [sp, #-16]!
  40e5f0:	mov	x29, sp
  40e5f4:	mov	w2, #0x5                   	// #5
  40e5f8:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40e5fc:	add	x1, x1, #0xaa0
  40e600:	mov	x0, #0x0                   	// #0
  40e604:	bl	4049c0 <dcgettext@plt>
  40e608:	mov	x3, x0
  40e60c:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x12e64>
  40e610:	add	x2, x2, #0x848
  40e614:	mov	w1, #0x0                   	// #0
  40e618:	mov	w0, #0x0                   	// #0
  40e61c:	bl	404050 <error@plt>
  40e620:	bl	40e5ac <wcrtomb@plt+0x998c>
  40e624:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e628:	add	x1, x1, #0x7c0
  40e62c:	cmp	x0, #0x0
  40e630:	csel	x0, x1, x0, eq  // eq = none
  40e634:	mov	w1, #0x8000000             	// #134217728
  40e638:	str	w1, [x0]
  40e63c:	ret
  40e640:	stp	x29, x30, [sp, #-48]!
  40e644:	mov	x29, sp
  40e648:	stp	x19, x20, [sp, #16]
  40e64c:	str	x21, [sp, #32]
  40e650:	mov	x21, x0
  40e654:	mov	x19, x1
  40e658:	mov	w20, w2
  40e65c:	bl	404750 <__ctype_b_loc@plt>
  40e660:	ldr	x4, [x0]
  40e664:	ldrb	w1, [x19]
  40e668:	and	x3, x1, #0xff
  40e66c:	ldrh	w3, [x4, x3, lsl #1]
  40e670:	tbz	w3, #13, 40e67c <wcrtomb@plt+0x9a5c>
  40e674:	add	x19, x19, #0x1
  40e678:	b	40e664 <wcrtomb@plt+0x9a44>
  40e67c:	cmp	w1, #0x23
  40e680:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40e684:	b.eq	40e6c4 <wcrtomb@plt+0x9aa4>  // b.none
  40e688:	cmp	w1, #0x21
  40e68c:	b.eq	40e6d4 <wcrtomb@plt+0x9ab4>  // b.none
  40e690:	mov	x2, #0x3                   	// #3
  40e694:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40e698:	add	x1, x1, #0xab8
  40e69c:	mov	x0, x19
  40e6a0:	bl	4043c0 <strncmp@plt>
  40e6a4:	cbnz	w0, 40e6b4 <wcrtomb@plt+0x9a94>
  40e6a8:	add	x19, x19, #0x3
  40e6ac:	and	w20, w20, #0xefffffff
  40e6b0:	orr	w20, w20, #0x8000000
  40e6b4:	mov	w2, w20
  40e6b8:	mov	x1, x19
  40e6bc:	mov	x0, x21
  40e6c0:	bl	435364 <argp_parse@@Base+0x1c24>
  40e6c4:	ldp	x19, x20, [sp, #16]
  40e6c8:	ldr	x21, [sp, #32]
  40e6cc:	ldp	x29, x30, [sp], #48
  40e6d0:	ret
  40e6d4:	ldrb	w0, [x19, #1]
  40e6d8:	cmp	w0, #0x21
  40e6dc:	b.eq	40e6ec <wcrtomb@plt+0x9acc>  // b.none
  40e6e0:	add	x19, x19, #0x1
  40e6e4:	orr	w20, w20, #0x20000000
  40e6e8:	b	40e690 <wcrtomb@plt+0x9a70>
  40e6ec:	add	x19, x19, #0x2
  40e6f0:	b	40e690 <wcrtomb@plt+0x9a70>
  40e6f4:	stp	x29, x30, [sp, #-48]!
  40e6f8:	mov	x29, sp
  40e6fc:	stp	x19, x20, [sp, #16]
  40e700:	str	x21, [sp, #32]
  40e704:	mov	x21, x0
  40e708:	mov	x19, x1
  40e70c:	mov	w20, w2
  40e710:	bl	404750 <__ctype_b_loc@plt>
  40e714:	ldr	x4, [x0]
  40e718:	ldrb	w1, [x19]
  40e71c:	and	x3, x1, #0xff
  40e720:	ldrh	w3, [x4, x3, lsl #1]
  40e724:	tbz	w3, #13, 40e730 <wcrtomb@plt+0x9b10>
  40e728:	add	x19, x19, #0x1
  40e72c:	b	40e718 <wcrtomb@plt+0x9af8>
  40e730:	cmp	w1, #0x23
  40e734:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40e738:	b.eq	40e754 <wcrtomb@plt+0x9b34>  // b.none
  40e73c:	cmp	w1, #0x5c
  40e740:	b.eq	40e764 <wcrtomb@plt+0x9b44>  // b.none
  40e744:	mov	w2, w20
  40e748:	mov	x1, x19
  40e74c:	mov	x0, x21
  40e750:	bl	435364 <argp_parse@@Base+0x1c24>
  40e754:	ldp	x19, x20, [sp, #16]
  40e758:	ldr	x21, [sp, #32]
  40e75c:	ldp	x29, x30, [sp], #48
  40e760:	ret
  40e764:	ldrb	w0, [x19, #1]
  40e768:	cmp	w0, #0x23
  40e76c:	cinc	x19, x19, eq  // eq = none
  40e770:	b	40e744 <wcrtomb@plt+0x9b24>
  40e774:	stp	x29, x30, [sp, #-64]!
  40e778:	mov	x29, sp
  40e77c:	stp	x19, x20, [sp, #16]
  40e780:	stp	x21, x22, [sp, #32]
  40e784:	stp	x23, x24, [sp, #48]
  40e788:	mov	x23, x0
  40e78c:	mov	x19, x1
  40e790:	mov	w21, w2
  40e794:	mov	x22, x3
  40e798:	bl	404750 <__ctype_b_loc@plt>
  40e79c:	ldr	x20, [x0]
  40e7a0:	ldrb	w1, [x19]
  40e7a4:	and	x4, x1, #0xff
  40e7a8:	ldrh	w4, [x20, x4, lsl #1]
  40e7ac:	tbz	w4, #13, 40e7b8 <wcrtomb@plt+0x9b98>
  40e7b0:	add	x19, x19, #0x1
  40e7b4:	b	40e7a0 <wcrtomb@plt+0x9b80>
  40e7b8:	cmp	w1, #0x23
  40e7bc:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40e7c0:	b.eq	40e81c <wcrtomb@plt+0x9bfc>  // b.none
  40e7c4:	mov	x2, #0x7                   	// #7
  40e7c8:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40e7cc:	add	x1, x1, #0xac0
  40e7d0:	mov	x0, x19
  40e7d4:	bl	4043c0 <strncmp@plt>
  40e7d8:	cbz	w0, 40e830 <wcrtomb@plt+0x9c10>
  40e7dc:	mov	x0, x19
  40e7e0:	bl	403ff0 <strlen@plt>
  40e7e4:	sub	x20, x0, #0x1
  40e7e8:	ldrb	w1, [x19, x20]
  40e7ec:	cmp	w1, #0x2f
  40e7f0:	b.eq	40e88c <wcrtomb@plt+0x9c6c>  // b.none
  40e7f4:	ldr	w2, [x22]
  40e7f8:	and	w0, w21, #0xefffffff
  40e7fc:	and	w21, w21, #0xf7ffffff
  40e800:	mov	w1, #0x8000000             	// #134217728
  40e804:	cmp	w2, w1
  40e808:	csel	w21, w21, w0, ne  // ne = any
  40e80c:	orr	w2, w2, w21
  40e810:	mov	x1, x19
  40e814:	mov	x0, x23
  40e818:	bl	435364 <argp_parse@@Base+0x1c24>
  40e81c:	ldp	x19, x20, [sp, #16]
  40e820:	ldp	x21, x22, [sp, #32]
  40e824:	ldp	x23, x24, [sp, #48]
  40e828:	ldp	x29, x30, [sp], #64
  40e82c:	ret
  40e830:	add	x21, x19, #0x7
  40e834:	ldrb	w0, [x19, #7]
  40e838:	ldrh	w0, [x20, x0, lsl #1]
  40e83c:	tbz	w0, #13, 40e84c <wcrtomb@plt+0x9c2c>
  40e840:	ldrb	w0, [x21, #1]!
  40e844:	ldrh	w0, [x20, x0, lsl #1]
  40e848:	tbnz	w0, #13, 40e840 <wcrtomb@plt+0x9c20>
  40e84c:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40e850:	add	x1, x1, #0xac8
  40e854:	mov	x0, x21
  40e858:	bl	404720 <strcmp@plt>
  40e85c:	cbnz	w0, 40e86c <wcrtomb@plt+0x9c4c>
  40e860:	mov	w0, #0x8000000             	// #134217728
  40e864:	str	w0, [x22]
  40e868:	b	40e81c <wcrtomb@plt+0x9bfc>
  40e86c:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40e870:	add	x1, x1, #0xad0
  40e874:	mov	x0, x21
  40e878:	bl	404720 <strcmp@plt>
  40e87c:	cbnz	w0, 40e81c <wcrtomb@plt+0x9bfc>
  40e880:	mov	w0, #0x10000000            	// #268435456
  40e884:	str	w0, [x22]
  40e888:	b	40e81c <wcrtomb@plt+0x9bfc>
  40e88c:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  40e890:	mov	x24, x0
  40e894:	mov	x2, x20
  40e898:	mov	x1, x19
  40e89c:	bl	403f70 <memcpy@plt>
  40e8a0:	strb	wzr, [x24, x20]
  40e8a4:	mov	x1, x24
  40e8a8:	mov	x0, x23
  40e8ac:	bl	434f18 <argp_parse@@Base+0x17d8>
  40e8b0:	mov	w0, #0x8                   	// #8
  40e8b4:	movk	w0, #0x400, lsl #16
  40e8b8:	orr	w21, w21, w0
  40e8bc:	mov	x19, x24
  40e8c0:	b	40e7f4 <wcrtomb@plt+0x9bd4>
  40e8c4:	stp	x29, x30, [sp, #-288]!
  40e8c8:	mov	x29, sp
  40e8cc:	stp	x19, x20, [sp, #16]
  40e8d0:	str	x21, [sp, #32]
  40e8d4:	mov	x20, x0
  40e8d8:	mov	x0, x1
  40e8dc:	mov	w21, w2
  40e8e0:	mov	w2, #0x844                 	// #2116
  40e8e4:	add	x1, sp, #0x38
  40e8e8:	bl	42e010 <wcrtomb@plt+0x293f0>
  40e8ec:	cbnz	w0, 40e928 <wcrtomb@plt+0x9d08>
  40e8f0:	ldr	x0, [sp, #56]
  40e8f4:	mov	x19, #0x0                   	// #0
  40e8f8:	cbz	x0, 40e920 <wcrtomb@plt+0x9d00>
  40e8fc:	mov	w2, w21
  40e900:	ldr	x1, [sp, #64]
  40e904:	ldr	x1, [x1, x19, lsl #3]
  40e908:	mov	x0, x20
  40e90c:	bl	435364 <argp_parse@@Base+0x1c24>
  40e910:	add	x19, x19, #0x1
  40e914:	ldr	x1, [sp, #56]
  40e918:	cmp	x1, x19
  40e91c:	b.hi	40e8fc <wcrtomb@plt+0x9cdc>  // b.pmore
  40e920:	add	x0, sp, #0x38
  40e924:	bl	42c074 <wcrtomb@plt+0x27454>
  40e928:	ldp	x19, x20, [sp, #16]
  40e92c:	ldr	x21, [sp, #32]
  40e930:	ldp	x29, x30, [sp], #288
  40e934:	ret
  40e938:	stp	x29, x30, [sp, #-48]!
  40e93c:	mov	x29, sp
  40e940:	stp	x19, x20, [sp, #16]
  40e944:	str	x21, [sp, #32]
  40e948:	mov	x20, x0
  40e94c:	mov	w21, w1
  40e950:	bl	403ff0 <strlen@plt>
  40e954:	add	x0, x0, #0x10
  40e958:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  40e95c:	mov	x19, x0
  40e960:	str	xzr, [x0]
  40e964:	str	w21, [x0, #8]
  40e968:	mov	x1, x20
  40e96c:	add	x0, x0, #0xc
  40e970:	bl	404910 <strcpy@plt>
  40e974:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e978:	ldr	x0, [x0, #1992]
  40e97c:	cbz	x0, 40e99c <wcrtomb@plt+0x9d7c>
  40e980:	str	x19, [x0]
  40e984:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e988:	str	x19, [x0, #1992]
  40e98c:	ldp	x19, x20, [sp, #16]
  40e990:	ldr	x21, [sp, #32]
  40e994:	ldp	x29, x30, [sp], #48
  40e998:	ret
  40e99c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e9a0:	str	x19, [x0, #2000]
  40e9a4:	b	40e984 <wcrtomb@plt+0x9d64>
  40e9a8:	stp	x29, x30, [sp, #-112]!
  40e9ac:	mov	x29, sp
  40e9b0:	stp	x25, x26, [sp, #64]
  40e9b4:	ldr	x26, [x0, #416]
  40e9b8:	cbz	x26, 40e9c8 <wcrtomb@plt+0x9da8>
  40e9bc:	ldp	x25, x26, [sp, #64]
  40e9c0:	ldp	x29, x30, [sp], #112
  40e9c4:	ret
  40e9c8:	stp	x19, x20, [sp, #16]
  40e9cc:	stp	x21, x22, [sp, #32]
  40e9d0:	mov	x22, x0
  40e9d4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40e9d8:	ldr	x19, [x0, #2000]
  40e9dc:	cbz	x19, 40ebb4 <wcrtomb@plt+0x9f94>
  40e9e0:	stp	x23, x24, [sp, #48]
  40e9e4:	stp	x27, x28, [sp, #80]
  40e9e8:	mov	x25, x26
  40e9ec:	adrp	x27, 456000 <_obstack_memory_used@@Base+0x14e64>
  40e9f0:	add	x27, x27, #0xc38
  40e9f4:	adrp	x28, 47d000 <_obstack_memory_used@@Base+0x3be64>
  40e9f8:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  40e9fc:	add	x0, x0, #0xad8
  40ea00:	str	x0, [sp, #104]
  40ea04:	b	40eae0 <wcrtomb@plt+0x9ec0>
  40ea08:	mov	x0, x20
  40ea0c:	bl	429b9c <wcrtomb@plt+0x24f7c>
  40ea10:	b	40ead8 <wcrtomb@plt+0x9eb8>
  40ea14:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40ea18:	ldr	x0, [x0, #944]
  40ea1c:	cbz	x0, 40ea24 <wcrtomb@plt+0x9e04>
  40ea20:	blr	x0
  40ea24:	bl	404ad0 <__errno_location@plt>
  40ea28:	ldr	w23, [x0]
  40ea2c:	mov	w2, #0x5                   	// #5
  40ea30:	ldr	x1, [sp, #104]
  40ea34:	mov	x0, #0x0                   	// #0
  40ea38:	bl	4049c0 <dcgettext@plt>
  40ea3c:	mov	x3, x20
  40ea40:	mov	x2, x0
  40ea44:	mov	w1, w23
  40ea48:	mov	w0, #0x0                   	// #0
  40ea4c:	bl	404050 <error@plt>
  40ea50:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40ea54:	mov	w1, #0x2                   	// #2
  40ea58:	str	w1, [x0, #3392]
  40ea5c:	mov	w0, w21
  40ea60:	bl	4045d0 <close@plt>
  40ea64:	b	40ead8 <wcrtomb@plt+0x9eb8>
  40ea68:	add	x21, x28, #0x7b8
  40ea6c:	ldr	x1, [x21, #24]
  40ea70:	cbz	x1, 40ea80 <wcrtomb@plt+0x9e60>
  40ea74:	ldr	x0, [x21, #32]
  40ea78:	blr	x1
  40ea7c:	str	x0, [x21, #32]
  40ea80:	ldr	x5, [x21, #32]
  40ea84:	mov	w4, #0xa                   	// #10
  40ea88:	mov	w3, #0x50000000            	// #1342177280
  40ea8c:	mov	x2, x23
  40ea90:	mov	x1, x24
  40ea94:	ldr	x0, [x21, #16]
  40ea98:	bl	4356a4 <argp_parse@@Base+0x1f64>
  40ea9c:	cbnz	w0, 40eb54 <wcrtomb@plt+0x9f34>
  40eaa0:	mov	x0, x23
  40eaa4:	bl	4042a0 <fclose@plt>
  40eaa8:	mov	x0, #0x20                  	// #32
  40eaac:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  40eab0:	str	x24, [x0, #24]
  40eab4:	ldr	w1, [x19, #8]
  40eab8:	cbz	w1, 40eac0 <wcrtomb@plt+0x9ea0>
  40eabc:	ldr	w1, [x21, #8]
  40eac0:	str	w1, [x0, #16]
  40eac4:	str	x25, [x0, #8]
  40eac8:	str	xzr, [x0]
  40eacc:	cbz	x25, 40eb90 <wcrtomb@plt+0x9f70>
  40ead0:	str	x0, [x25]
  40ead4:	mov	x25, x0
  40ead8:	ldr	x19, [x19]
  40eadc:	cbz	x19, 40eb9c <wcrtomb@plt+0x9f7c>
  40eae0:	add	x20, x19, #0xc
  40eae4:	mov	w3, #0x0                   	// #0
  40eae8:	mov	w2, #0x0                   	// #0
  40eaec:	mov	x1, x20
  40eaf0:	ldr	w0, [x22, #408]
  40eaf4:	bl	404aa0 <faccessat@plt>
  40eaf8:	cbnz	w0, 40ead8 <wcrtomb@plt+0x9eb8>
  40eafc:	mov	w2, #0x0                   	// #0
  40eb00:	mov	x1, x20
  40eb04:	mov	x0, x22
  40eb08:	bl	40c4c4 <wcrtomb@plt+0x78a4>
  40eb0c:	mov	w21, w0
  40eb10:	cmn	w0, #0x1
  40eb14:	b.eq	40ea08 <wcrtomb@plt+0x9de8>  // b.none
  40eb18:	mov	x1, x27
  40eb1c:	bl	404430 <fdopen@plt>
  40eb20:	mov	x23, x0
  40eb24:	cbz	x0, 40ea14 <wcrtomb@plt+0x9df4>
  40eb28:	bl	43503c <argp_parse@@Base+0x18fc>
  40eb2c:	mov	x24, x0
  40eb30:	ldr	x0, [x28, #1976]
  40eb34:	cbz	x0, 40ea68 <wcrtomb@plt+0x9e48>
  40eb38:	add	x21, x28, #0x7b8
  40eb3c:	mov	x1, x20
  40eb40:	bl	404720 <strcmp@plt>
  40eb44:	cbz	w0, 40ea6c <wcrtomb@plt+0x9e4c>
  40eb48:	ldr	x0, [x21, #40]!
  40eb4c:	cbnz	x0, 40eb3c <wcrtomb@plt+0x9f1c>
  40eb50:	b	40ea6c <wcrtomb@plt+0x9e4c>
  40eb54:	bl	404ad0 <__errno_location@plt>
  40eb58:	ldr	w19, [x0]
  40eb5c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40eb60:	ldr	x0, [x0, #944]
  40eb64:	cbz	x0, 40eb6c <wcrtomb@plt+0x9f4c>
  40eb68:	blr	x0
  40eb6c:	mov	x0, x20
  40eb70:	bl	43efc4 <argp_parse@@Base+0xb884>
  40eb74:	mov	x3, x0
  40eb78:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x12e64>
  40eb7c:	add	x2, x2, #0x848
  40eb80:	mov	w1, w19
  40eb84:	mov	w0, #0x0                   	// #0
  40eb88:	bl	404050 <error@plt>
  40eb8c:	bl	40e5ac <wcrtomb@plt+0x998c>
  40eb90:	mov	x25, x0
  40eb94:	mov	x26, x0
  40eb98:	b	40ead8 <wcrtomb@plt+0x9eb8>
  40eb9c:	ldp	x23, x24, [sp, #48]
  40eba0:	ldp	x27, x28, [sp, #80]
  40eba4:	str	x26, [x22, #416]
  40eba8:	ldp	x19, x20, [sp, #16]
  40ebac:	ldp	x21, x22, [sp, #32]
  40ebb0:	b	40e9bc <wcrtomb@plt+0x9d9c>
  40ebb4:	mov	x26, x19
  40ebb8:	b	40eba4 <wcrtomb@plt+0x9f84>
  40ebbc:	stp	x29, x30, [sp, #-48]!
  40ebc0:	mov	x29, sp
  40ebc4:	stp	x19, x20, [sp, #16]
  40ebc8:	str	x21, [sp, #32]
  40ebcc:	mov	x21, x0
  40ebd0:	ldr	x19, [x0, #416]
  40ebd4:	cbz	x19, 40ebf4 <wcrtomb@plt+0x9fd4>
  40ebd8:	mov	x20, x19
  40ebdc:	ldr	x19, [x19]
  40ebe0:	ldr	x0, [x20, #24]
  40ebe4:	bl	435054 <argp_parse@@Base+0x1914>
  40ebe8:	mov	x0, x20
  40ebec:	bl	4047c0 <free@plt>
  40ebf0:	cbnz	x19, 40ebd8 <wcrtomb@plt+0x9fb8>
  40ebf4:	str	xzr, [x21, #416]
  40ebf8:	ldp	x19, x20, [sp, #16]
  40ebfc:	ldr	x21, [sp, #32]
  40ec00:	ldp	x29, x30, [sp], #48
  40ec04:	ret
  40ec08:	stp	x29, x30, [sp, #-80]!
  40ec0c:	mov	x29, sp
  40ec10:	stp	x23, x24, [sp, #48]
  40ec14:	stp	x25, x26, [sp, #64]
  40ec18:	mov	x23, x0
  40ec1c:	mov	x24, x1
  40ec20:	mov	x1, x0
  40ec24:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40ec28:	ldr	x0, [x0]
  40ec2c:	bl	4351e4 <argp_parse@@Base+0x1aa4>
  40ec30:	ands	w25, w0, #0xff
  40ec34:	b.ne	40ed18 <wcrtomb@plt+0xa0f8>  // b.any
  40ec38:	cbz	x24, 40ed18 <wcrtomb@plt+0xa0f8>
  40ec3c:	stp	x19, x20, [sp, #16]
  40ec40:	stp	x21, x22, [sp, #32]
  40ec44:	mov	w22, #0x0                   	// #0
  40ec48:	mov	x21, #0x0                   	// #0
  40ec4c:	mov	x20, #0x0                   	// #0
  40ec50:	mov	w26, #0x2                   	// #2
  40ec54:	b	40ecf8 <wcrtomb@plt+0xa0d8>
  40ec58:	ldrb	w0, [x23]
  40ec5c:	mov	x20, x23
  40ec60:	cmp	w0, #0x2e
  40ec64:	b.ne	40ecc4 <wcrtomb@plt+0xa0a4>  // b.any
  40ec68:	ldrb	w0, [x20, #1]
  40ec6c:	cmp	w0, #0x2f
  40ec70:	b.ne	40ecc4 <wcrtomb@plt+0xa0a4>  // b.any
  40ec74:	ldrb	w0, [x20, #2]!
  40ec78:	cmp	w0, #0x2e
  40ec7c:	b.eq	40ec68 <wcrtomb@plt+0xa048>  // b.none
  40ec80:	b	40ecc4 <wcrtomb@plt+0xa0a4>
  40ec84:	mov	x1, x21
  40ec88:	ldr	x0, [x19, #24]
  40ec8c:	bl	4351e4 <argp_parse@@Base+0x1aa4>
  40ec90:	and	w0, w0, #0xff
  40ec94:	cbnz	w0, 40ed04 <wcrtomb@plt+0xa0e4>
  40ec98:	ldr	x19, [x19]
  40ec9c:	cbz	x19, 40ecec <wcrtomb@plt+0xa0cc>
  40eca0:	ldr	w0, [x19, #16]
  40eca4:	tst	w22, w0
  40eca8:	b.ne	40ec98 <wcrtomb@plt+0xa078>  // b.any
  40ecac:	mov	x1, x23
  40ecb0:	ldr	x0, [x19, #24]
  40ecb4:	bl	4351e4 <argp_parse@@Base+0x1aa4>
  40ecb8:	and	w0, w0, #0xff
  40ecbc:	cbnz	w0, 40ed04 <wcrtomb@plt+0xa0e4>
  40ecc0:	cbz	x20, 40ec58 <wcrtomb@plt+0xa038>
  40ecc4:	mov	x1, x20
  40ecc8:	ldr	x0, [x19, #24]
  40eccc:	bl	4351e4 <argp_parse@@Base+0x1aa4>
  40ecd0:	and	w0, w0, #0xff
  40ecd4:	cbnz	w0, 40ed04 <wcrtomb@plt+0xa0e4>
  40ecd8:	cbnz	x21, 40ec84 <wcrtomb@plt+0xa064>
  40ecdc:	mov	x0, x23
  40ece0:	bl	4349cc <argp_parse@@Base+0x128c>
  40ece4:	mov	x21, x0
  40ece8:	b	40ec84 <wcrtomb@plt+0xa064>
  40ecec:	ldr	x24, [x24, #392]
  40ecf0:	mov	w22, w26
  40ecf4:	cbz	x24, 40ed08 <wcrtomb@plt+0xa0e8>
  40ecf8:	ldr	x19, [x24, #416]
  40ecfc:	cbnz	x19, 40eca0 <wcrtomb@plt+0xa080>
  40ed00:	b	40ecec <wcrtomb@plt+0xa0cc>
  40ed04:	mov	w25, #0x1                   	// #1
  40ed08:	mov	x0, x21
  40ed0c:	bl	4047c0 <free@plt>
  40ed10:	ldp	x19, x20, [sp, #16]
  40ed14:	ldp	x21, x22, [sp, #32]
  40ed18:	mov	w0, w25
  40ed1c:	ldp	x23, x24, [sp, #48]
  40ed20:	ldp	x25, x26, [sp, #64]
  40ed24:	ldp	x29, x30, [sp], #80
  40ed28:	ret
  40ed2c:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  40ed30:	ldr	x0, [x0, #1976]
  40ed34:	cbz	x0, 40ed68 <wcrtomb@plt+0xa148>
  40ed38:	stp	x29, x30, [sp, #-32]!
  40ed3c:	mov	x29, sp
  40ed40:	str	x19, [sp, #16]
  40ed44:	adrp	x19, 47d000 <_obstack_memory_used@@Base+0x3be64>
  40ed48:	add	x19, x19, #0x7b8
  40ed4c:	mov	w1, #0x0                   	// #0
  40ed50:	bl	40e938 <wcrtomb@plt+0x9d18>
  40ed54:	ldr	x0, [x19, #40]!
  40ed58:	cbnz	x0, 40ed4c <wcrtomb@plt+0xa12c>
  40ed5c:	ldr	x19, [sp, #16]
  40ed60:	ldp	x29, x30, [sp], #32
  40ed64:	ret
  40ed68:	ret
  40ed6c:	mov	w0, #0x1                   	// #1
  40ed70:	ret
  40ed74:	stp	x29, x30, [sp, #-32]!
  40ed78:	mov	x29, sp
  40ed7c:	str	x19, [sp, #16]
  40ed80:	mov	x19, x0
  40ed84:	ldr	x0, [x0, #160]
  40ed88:	bl	4047c0 <free@plt>
  40ed8c:	ldr	x1, [x19, #136]
  40ed90:	ldr	x0, [x19, #144]
  40ed94:	bl	41392c <wcrtomb@plt+0xed0c>
  40ed98:	ldr	x0, [x19, #96]
  40ed9c:	bl	4047c0 <free@plt>
  40eda0:	ldr	x0, [x19, #104]
  40eda4:	bl	4047c0 <free@plt>
  40eda8:	ldr	x0, [x19, #120]
  40edac:	bl	4047c0 <free@plt>
  40edb0:	mov	x0, x19
  40edb4:	bl	4047c0 <free@plt>
  40edb8:	ldr	x19, [sp, #16]
  40edbc:	ldp	x29, x30, [sp], #32
  40edc0:	ret
  40edc4:	stp	x29, x30, [sp, #-16]!
  40edc8:	mov	x29, sp
  40edcc:	bl	419828 <wcrtomb@plt+0x14c08>
  40edd0:	mov	w0, #0x0                   	// #0
  40edd4:	ldp	x29, x30, [sp], #16
  40edd8:	ret
  40eddc:	stp	x29, x30, [sp, #-16]!
  40ede0:	mov	x29, sp
  40ede4:	bl	419828 <wcrtomb@plt+0x14c08>
  40ede8:	mov	w0, #0x0                   	// #0
  40edec:	ldp	x29, x30, [sp], #16
  40edf0:	ret
  40edf4:	stp	x29, x30, [sp, #-112]!
  40edf8:	mov	x29, sp
  40edfc:	stp	x19, x20, [sp, #16]
  40ee00:	stp	x21, x22, [sp, #32]
  40ee04:	mov	x21, x0
  40ee08:	mov	x19, x1
  40ee0c:	mov	x20, x2
  40ee10:	tbnz	x1, #63, 40ee48 <wcrtomb@plt+0xa228>
  40ee14:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40ee18:	ldr	x0, [x0, #872]
  40ee1c:	cmp	x1, x0
  40ee20:	b.gt	40eea8 <wcrtomb@plt+0xa288>
  40ee24:	b.lt	40ee38 <wcrtomb@plt+0xa218>  // b.tstop
  40ee28:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40ee2c:	ldr	x0, [x0, #880]
  40ee30:	cmp	w0, w2
  40ee34:	b.mi	40eea8 <wcrtomb@plt+0xa288>  // b.first
  40ee38:	ldp	x19, x20, [sp, #16]
  40ee3c:	ldp	x21, x22, [sp, #32]
  40ee40:	ldp	x29, x30, [sp], #112
  40ee44:	ret
  40ee48:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40ee4c:	ldr	w0, [x0, #408]
  40ee50:	tbz	w0, #15, 40ee38 <wcrtomb@plt+0xa218>
  40ee54:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40ee58:	ldr	x0, [x0, #944]
  40ee5c:	cbz	x0, 40ee64 <wcrtomb@plt+0xa244>
  40ee60:	blr	x0
  40ee64:	mov	w2, #0x5                   	// #5
  40ee68:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40ee6c:	add	x1, x1, #0xb30
  40ee70:	mov	x0, #0x0                   	// #0
  40ee74:	bl	4049c0 <dcgettext@plt>
  40ee78:	mov	x22, x0
  40ee7c:	mov	w2, #0x1                   	// #1
  40ee80:	mov	x0, x19
  40ee84:	mov	x1, x20
  40ee88:	bl	418c40 <wcrtomb@plt+0x14020>
  40ee8c:	mov	x4, x0
  40ee90:	mov	x3, x21
  40ee94:	mov	x2, x22
  40ee98:	mov	w1, #0x0                   	// #0
  40ee9c:	mov	w0, #0x0                   	// #0
  40eea0:	bl	404050 <error@plt>
  40eea4:	b	40ee38 <wcrtomb@plt+0xa218>
  40eea8:	add	x0, sp, #0x40
  40eeac:	bl	4373d0 <argp_parse@@Base+0x3c90>
  40eeb0:	ldr	x0, [sp, #64]
  40eeb4:	ldr	x1, [sp, #72]
  40eeb8:	cmp	x19, x0
  40eebc:	b.gt	40eecc <wcrtomb@plt+0xa2ac>
  40eec0:	b.lt	40ee38 <wcrtomb@plt+0xa218>  // b.tstop
  40eec4:	cmp	w1, w20
  40eec8:	b.pl	40ee38 <wcrtomb@plt+0xa218>  // b.nfrst
  40eecc:	stp	x23, x24, [sp, #48]
  40eed0:	sub	x22, x19, x0
  40eed4:	subs	x23, x20, x1
  40eed8:	b.mi	40ef58 <wcrtomb@plt+0xa338>  // b.first
  40eedc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40eee0:	ldr	w0, [x0, #408]
  40eee4:	tbz	w0, #15, 40ef6c <wcrtomb@plt+0xa34c>
  40eee8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40eeec:	ldr	x0, [x0, #944]
  40eef0:	cbz	x0, 40eef8 <wcrtomb@plt+0xa2d8>
  40eef4:	blr	x0
  40eef8:	mov	w2, #0x5                   	// #5
  40eefc:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40ef00:	add	x1, x1, #0xb58
  40ef04:	mov	x0, #0x0                   	// #0
  40ef08:	bl	4049c0 <dcgettext@plt>
  40ef0c:	mov	x24, x0
  40ef10:	mov	w2, #0x1                   	// #1
  40ef14:	mov	x0, x19
  40ef18:	mov	x1, x20
  40ef1c:	bl	418c40 <wcrtomb@plt+0x14020>
  40ef20:	mov	x19, x0
  40ef24:	add	x2, sp, #0x50
  40ef28:	mov	x0, x22
  40ef2c:	mov	x1, x23
  40ef30:	bl	41ad74 <wcrtomb@plt+0x16154>
  40ef34:	mov	x5, x0
  40ef38:	mov	x4, x19
  40ef3c:	mov	x3, x21
  40ef40:	mov	x2, x24
  40ef44:	mov	w1, #0x0                   	// #0
  40ef48:	mov	w0, #0x0                   	// #0
  40ef4c:	bl	404050 <error@plt>
  40ef50:	ldp	x23, x24, [sp, #48]
  40ef54:	b	40ee38 <wcrtomb@plt+0xa218>
  40ef58:	mov	x0, #0xca00                	// #51712
  40ef5c:	movk	x0, #0x3b9a, lsl #16
  40ef60:	add	x23, x23, x0
  40ef64:	sub	x22, x22, #0x1
  40ef68:	b	40eedc <wcrtomb@plt+0xa2bc>
  40ef6c:	ldp	x23, x24, [sp, #48]
  40ef70:	b	40ee38 <wcrtomb@plt+0xa218>
  40ef74:	stp	x29, x30, [sp, #-160]!
  40ef78:	mov	x29, sp
  40ef7c:	stp	x19, x20, [sp, #16]
  40ef80:	mov	x19, x0
  40ef84:	mov	w20, #0x1                   	// #1
  40ef88:	b	40efa4 <wcrtomb@plt+0xa384>
  40ef8c:	ldr	x0, [x19, #160]
  40ef90:	bl	42a0bc <wcrtomb@plt+0x2549c>
  40ef94:	ldr	x19, [x19]
  40ef98:	cbz	x19, 40efcc <wcrtomb@plt+0xa3ac>
  40ef9c:	ldrb	w0, [x19, #88]
  40efa0:	cbnz	w0, 40efcc <wcrtomb@plt+0xa3ac>
  40efa4:	strb	w20, [x19, #88]
  40efa8:	add	x1, sp, #0x20
  40efac:	ldr	x0, [x19, #160]
  40efb0:	bl	41b26c <wcrtomb@plt+0x1664c>
  40efb4:	cbnz	w0, 40ef8c <wcrtomb@plt+0xa36c>
  40efb8:	ldr	x0, [sp, #32]
  40efbc:	str	x0, [x19, #8]
  40efc0:	ldr	x0, [sp, #40]
  40efc4:	str	x0, [x19, #16]
  40efc8:	b	40ef94 <wcrtomb@plt+0xa374>
  40efcc:	ldp	x19, x20, [sp, #16]
  40efd0:	ldp	x29, x30, [sp], #160
  40efd4:	ret
  40efd8:	stp	x29, x30, [sp, #-80]!
  40efdc:	mov	x29, sp
  40efe0:	stp	x19, x20, [sp, #16]
  40efe4:	stp	x21, x22, [sp, #32]
  40efe8:	stp	x23, x24, [sp, #48]
  40efec:	stp	x25, x26, [sp, #64]
  40eff0:	mov	x21, x0
  40eff4:	mov	x20, x1
  40eff8:	mov	w24, w2
  40effc:	mov	w23, w3
  40f000:	mov	w26, w4
  40f004:	mov	w22, w5
  40f008:	bl	403ff0 <strlen@plt>
  40f00c:	mov	x25, x0
  40f010:	mov	x0, #0xa8                  	// #168
  40f014:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  40f018:	mov	x19, x0
  40f01c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40f020:	ldr	x0, [x0, #2008]
  40f024:	str	x0, [x19]
  40f028:	str	w26, [x19, #24]
  40f02c:	cbz	x20, 40f138 <wcrtomb@plt+0xa518>
  40f030:	ldr	x0, [x20, #88]
  40f034:	str	x0, [x19, #8]
  40f038:	ldr	x0, [x20, #96]
  40f03c:	str	x0, [x19, #16]
  40f040:	ldr	w0, [x20, #112]
  40f044:	str	w0, [x19, #28]
  40f048:	ldr	w0, [x20, #116]
  40f04c:	str	w0, [x19, #32]
  40f050:	ldp	x0, x1, [x20, #216]
  40f054:	stp	x0, x1, [x19, #40]
  40f058:	ldp	x0, x1, [x20, #232]
  40f05c:	stp	x0, x1, [x19, #56]
  40f060:	str	x25, [x19, #152]
  40f064:	mov	x0, x21
  40f068:	bl	440154 <argp_parse@@Base+0xca14>
  40f06c:	str	x0, [x19, #160]
  40f070:	str	w24, [x19, #72]
  40f074:	str	w23, [x19, #76]
  40f078:	strb	wzr, [x19, #80]
  40f07c:	str	w22, [x19, #84]
  40f080:	strb	wzr, [x19, #88]
  40f084:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40f088:	ldr	w0, [x0, #4032]
  40f08c:	str	w0, [x19, #92]
  40f090:	mov	x0, x19
  40f094:	str	xzr, [x0, #96]!
  40f098:	ldr	x1, [x20, #48]
  40f09c:	bl	41a5bc <wcrtomb@plt+0x1599c>
  40f0a0:	ldr	x0, [x20, #56]
  40f0a4:	cbz	x0, 40f198 <wcrtomb@plt+0xa578>
  40f0a8:	ldr	x1, [x20, #64]
  40f0ac:	add	x1, x1, #0x1
  40f0b0:	bl	440120 <argp_parse@@Base+0xc9e0>
  40f0b4:	str	x0, [x19, #104]
  40f0b8:	ldr	x0, [x20, #64]
  40f0bc:	str	x0, [x19, #112]
  40f0c0:	ldr	x0, [x20, #72]
  40f0c4:	cbz	x0, 40f18c <wcrtomb@plt+0xa56c>
  40f0c8:	ldr	x1, [x20, #80]
  40f0cc:	add	x1, x1, #0x1
  40f0d0:	bl	440120 <argp_parse@@Base+0xc9e0>
  40f0d4:	str	x0, [x19, #120]
  40f0d8:	ldr	x0, [x20, #80]
  40f0dc:	str	x0, [x19, #128]
  40f0e0:	add	x2, x19, #0x88
  40f0e4:	add	x1, x19, #0x90
  40f0e8:	mov	x0, x20
  40f0ec:	bl	413b24 <wcrtomb@plt+0xef04>
  40f0f0:	mov	x1, x21
  40f0f4:	ldr	x0, [x19, #160]
  40f0f8:	bl	404910 <strcpy@plt>
  40f0fc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40f100:	str	x19, [x0, #2008]
  40f104:	mov	x0, x21
  40f108:	bl	41aff0 <wcrtomb@plt+0x163d0>
  40f10c:	and	w0, w0, #0xff
  40f110:	cbnz	w0, 40f12c <wcrtomb@plt+0xa50c>
  40f114:	ldp	x19, x20, [sp, #16]
  40f118:	ldp	x21, x22, [sp, #32]
  40f11c:	ldp	x23, x24, [sp, #48]
  40f120:	ldp	x25, x26, [sp, #64]
  40f124:	ldp	x29, x30, [sp], #80
  40f128:	ret
  40f12c:	mov	x0, x19
  40f130:	bl	40ef74 <wcrtomb@plt+0xa354>
  40f134:	b	40f114 <wcrtomb@plt+0xa4f4>
  40f138:	str	x25, [x19, #152]
  40f13c:	mov	x0, x21
  40f140:	bl	440154 <argp_parse@@Base+0xca14>
  40f144:	str	x0, [x19, #160]
  40f148:	str	w24, [x19, #72]
  40f14c:	str	w23, [x19, #76]
  40f150:	mov	w0, #0x1                   	// #1
  40f154:	strb	w0, [x19, #80]
  40f158:	str	w22, [x19, #84]
  40f15c:	strb	wzr, [x19, #88]
  40f160:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40f164:	ldr	w0, [x0, #4032]
  40f168:	str	w0, [x19, #92]
  40f16c:	str	xzr, [x19, #96]
  40f170:	str	xzr, [x19, #104]
  40f174:	str	xzr, [x19, #112]
  40f178:	str	xzr, [x19, #120]
  40f17c:	str	xzr, [x19, #128]
  40f180:	str	xzr, [x19, #144]
  40f184:	str	xzr, [x19, #136]
  40f188:	b	40f0f0 <wcrtomb@plt+0xa4d0>
  40f18c:	str	xzr, [x19, #120]
  40f190:	str	xzr, [x19, #128]
  40f194:	b	40f0e0 <wcrtomb@plt+0xa4c0>
  40f198:	str	xzr, [x19, #104]
  40f19c:	str	xzr, [x19, #112]
  40f1a0:	b	40f0c0 <wcrtomb@plt+0xa4a0>
  40f1a4:	stp	x29, x30, [sp, #-208]!
  40f1a8:	mov	x29, sp
  40f1ac:	stp	x19, x20, [sp, #16]
  40f1b0:	stp	x21, x22, [sp, #32]
  40f1b4:	mov	x20, x0
  40f1b8:	ldrb	w0, [x0]
  40f1bc:	cbz	w0, 40f1e4 <wcrtomb@plt+0xa5c4>
  40f1c0:	stp	x23, x24, [sp, #48]
  40f1c4:	stp	x25, x26, [sp, #64]
  40f1c8:	mov	x25, x1
  40f1cc:	mov	x19, x20
  40f1d0:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40f1d4:	add	x23, x23, #0x7d8
  40f1d8:	adrp	x24, 47d000 <_obstack_memory_used@@Base+0x3be64>
  40f1dc:	add	x24, x24, #0x888
  40f1e0:	b	40f268 <wcrtomb@plt+0xa648>
  40f1e4:	mov	w22, #0x0                   	// #0
  40f1e8:	b	40f340 <wcrtomb@plt+0xa720>
  40f1ec:	add	x0, x20, #0x1
  40f1f0:	cmp	x19, x0
  40f1f4:	b.eq	40f268 <wcrtomb@plt+0xa648>  // b.none
  40f1f8:	ldurb	w0, [x19, #-2]
  40f1fc:	cmp	w0, #0x2f
  40f200:	b.eq	40f268 <wcrtomb@plt+0xa648>  // b.none
  40f204:	cmp	w0, #0x2e
  40f208:	b.ne	40f290 <wcrtomb@plt+0xa670>  // b.any
  40f20c:	add	x0, x20, #0x2
  40f210:	cmp	x19, x0
  40f214:	b.eq	40f268 <wcrtomb@plt+0xa648>  // b.none
  40f218:	ldurb	w0, [x19, #-3]
  40f21c:	cmp	w0, #0x2f
  40f220:	b.ne	40f290 <wcrtomb@plt+0xa670>  // b.any
  40f224:	b	40f268 <wcrtomb@plt+0xa648>
  40f228:	ldr	w2, [x23, #16]
  40f22c:	mov	w5, #0x100                 	// #256
  40f230:	mov	w4, w21
  40f234:	mov	w3, #0x1ff                 	// #511
  40f238:	bic	w2, w22, w2
  40f23c:	mov	x1, #0x0                   	// #0
  40f240:	mov	x0, x20
  40f244:	bl	40efd8 <wcrtomb@plt+0xa3b8>
  40f248:	mov	w2, w21
  40f24c:	sub	w1, w19, w20
  40f250:	mov	x0, x20
  40f254:	bl	419668 <wcrtomb@plt+0x14a48>
  40f258:	mov	w0, #0x1                   	// #1
  40f25c:	strb	w0, [x25]
  40f260:	mov	w0, #0x2f                  	// #47
  40f264:	strb	w0, [x19]
  40f268:	ldrb	w2, [x19, #1]!
  40f26c:	cbz	w2, 40f334 <wcrtomb@plt+0xa714>
  40f270:	cmp	w2, #0x2f
  40f274:	ccmp	x20, x19, #0x4, eq  // eq = none
  40f278:	b.eq	40f268 <wcrtomb@plt+0xa648>  // b.none
  40f27c:	ldurb	w0, [x19, #-1]
  40f280:	cmp	w0, #0x2f
  40f284:	b.eq	40f268 <wcrtomb@plt+0xa648>  // b.none
  40f288:	cmp	w0, #0x2e
  40f28c:	b.eq	40f1ec <wcrtomb@plt+0xa5cc>  // b.none
  40f290:	strb	wzr, [x19]
  40f294:	ldr	w21, [x23, #8]
  40f298:	mvn	w21, w21
  40f29c:	and	w21, w21, #0x1ff
  40f2a0:	ldrb	w0, [x23, #12]
  40f2a4:	cmp	w0, #0x0
  40f2a8:	mov	w22, #0xc0                  	// #192
  40f2ac:	csel	w22, w22, wzr, eq  // eq = none
  40f2b0:	orr	w22, w22, w21
  40f2b4:	mov	w2, w22
  40f2b8:	mov	x1, x20
  40f2bc:	ldr	w0, [x24]
  40f2c0:	bl	404260 <mkdirat@plt>
  40f2c4:	cbz	w0, 40f228 <wcrtomb@plt+0xa608>
  40f2c8:	bl	404ad0 <__errno_location@plt>
  40f2cc:	mov	x21, x0
  40f2d0:	ldr	w26, [x0]
  40f2d4:	cmp	w26, #0x11
  40f2d8:	b.ne	40f2e8 <wcrtomb@plt+0xa6c8>  // b.any
  40f2dc:	mov	w0, #0x2f                  	// #47
  40f2e0:	strb	w0, [x19]
  40f2e4:	b	40f268 <wcrtomb@plt+0xa648>
  40f2e8:	mov	w4, #0x0                   	// #0
  40f2ec:	add	x3, sp, #0x50
  40f2f0:	mov	x2, x20
  40f2f4:	ldr	w1, [x24]
  40f2f8:	mov	w0, #0x0                   	// #0
  40f2fc:	bl	404c00 <__fxstatat@plt>
  40f300:	mov	w22, w0
  40f304:	cbnz	w0, 40f314 <wcrtomb@plt+0xa6f4>
  40f308:	mov	w0, #0x2f                  	// #47
  40f30c:	strb	w0, [x19]
  40f310:	b	40f268 <wcrtomb@plt+0xa648>
  40f314:	str	w26, [x21]
  40f318:	mov	x0, x20
  40f31c:	bl	429b3c <wcrtomb@plt+0x24f1c>
  40f320:	mov	w0, #0x2f                  	// #47
  40f324:	strb	w0, [x19]
  40f328:	ldp	x23, x24, [sp, #48]
  40f32c:	ldp	x25, x26, [sp, #64]
  40f330:	b	40f340 <wcrtomb@plt+0xa720>
  40f334:	mov	w22, #0x0                   	// #0
  40f338:	ldp	x23, x24, [sp, #48]
  40f33c:	ldp	x25, x26, [sp, #64]
  40f340:	mov	w0, w22
  40f344:	ldp	x19, x20, [sp, #16]
  40f348:	ldp	x21, x22, [sp, #32]
  40f34c:	ldp	x29, x30, [sp], #208
  40f350:	ret
  40f354:	stp	x29, x30, [sp, #-160]!
  40f358:	mov	x29, sp
  40f35c:	stp	x19, x20, [sp, #16]
  40f360:	mov	x19, x2
  40f364:	cbz	x1, 40f388 <wcrtomb@plt+0xa768>
  40f368:	ldr	w3, [x1, #16]
  40f36c:	and	w3, w3, #0xf000
  40f370:	mov	w0, #0x0                   	// #0
  40f374:	cmp	w3, #0x4, lsl #12
  40f378:	b.ne	40f3c4 <wcrtomb@plt+0xa7a4>  // b.any
  40f37c:	ldp	x19, x20, [sp, #16]
  40f380:	ldp	x29, x30, [sp], #160
  40f384:	ret
  40f388:	mov	x20, x0
  40f38c:	add	x1, sp, #0x20
  40f390:	bl	41b26c <wcrtomb@plt+0x1664c>
  40f394:	cbz	w0, 40f3bc <wcrtomb@plt+0xa79c>
  40f398:	bl	404ad0 <__errno_location@plt>
  40f39c:	ldr	w1, [x0]
  40f3a0:	mov	w0, #0x0                   	// #0
  40f3a4:	cmp	w1, #0x2
  40f3a8:	b.eq	40f37c <wcrtomb@plt+0xa75c>  // b.none
  40f3ac:	mov	x0, x20
  40f3b0:	bl	42a0dc <wcrtomb@plt+0x254bc>
  40f3b4:	mov	w0, #0x1                   	// #1
  40f3b8:	b	40f37c <wcrtomb@plt+0xa75c>
  40f3bc:	add	x1, sp, #0x20
  40f3c0:	b	40f368 <wcrtomb@plt+0xa748>
  40f3c4:	ldr	x2, [x1, #88]
  40f3c8:	ldr	x3, [x1, #96]
  40f3cc:	ldp	x0, x1, [x19, #232]
  40f3d0:	bl	424a44 <wcrtomb@plt+0x1fe24>
  40f3d4:	cmp	w0, #0x0
  40f3d8:	cset	w0, le
  40f3dc:	b	40f37c <wcrtomb@plt+0xa75c>
  40f3e0:	stp	x29, x30, [sp, #-192]!
  40f3e4:	mov	x29, sp
  40f3e8:	str	x23, [sp, #48]
  40f3ec:	and	w23, w1, #0xff
  40f3f0:	ldrb	w1, [x2]
  40f3f4:	cbnz	w1, 40f594 <wcrtomb@plt+0xa974>
  40f3f8:	stp	x19, x20, [sp, #16]
  40f3fc:	stp	x21, x22, [sp, #32]
  40f400:	mov	x22, x0
  40f404:	mov	x20, x2
  40f408:	bl	404ad0 <__errno_location@plt>
  40f40c:	mov	x21, x0
  40f410:	ldr	w19, [x0]
  40f414:	cmp	w19, #0x11
  40f418:	b.eq	40f4bc <wcrtomb@plt+0xa89c>  // b.none
  40f41c:	b.le	40f47c <wcrtomb@plt+0xa85c>
  40f420:	cmp	w19, #0x28
  40f424:	b.eq	40f434 <wcrtomb@plt+0xa814>  // b.none
  40f428:	and	w0, w19, #0xffffffbf
  40f42c:	cmp	w0, #0x1f
  40f430:	b.ne	40f4a0 <wcrtomb@plt+0xa880>  // b.any
  40f434:	cbz	w23, 40f4a0 <wcrtomb@plt+0xa880>
  40f438:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40f43c:	ldr	w0, [x0, #688]
  40f440:	cmp	w0, #0x2
  40f444:	b.ne	40f4a0 <wcrtomb@plt+0xa880>  // b.any
  40f448:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40f44c:	ldrb	w0, [x0, #512]
  40f450:	cbnz	w0, 40f4a0 <wcrtomb@plt+0xa880>
  40f454:	mov	w1, #0x2f                  	// #47
  40f458:	mov	x0, x22
  40f45c:	bl	404870 <strchr@plt>
  40f460:	cbz	x0, 40f514 <wcrtomb@plt+0xa8f4>
  40f464:	add	x1, sp, #0x40
  40f468:	mov	x0, x22
  40f46c:	bl	41b26c <wcrtomb@plt+0x1664c>
  40f470:	add	x1, sp, #0x40
  40f474:	cbz	w0, 40f4c0 <wcrtomb@plt+0xa8a0>
  40f478:	b	40f4a0 <wcrtomb@plt+0xa880>
  40f47c:	cmp	w19, #0x2
  40f480:	b.ne	40f4a0 <wcrtomb@plt+0xa880>  // b.any
  40f484:	mov	x1, x20
  40f488:	mov	x0, x22
  40f48c:	bl	40f1a4 <wcrtomb@plt+0xa584>
  40f490:	cbnz	w0, 40f4a0 <wcrtomb@plt+0xa880>
  40f494:	ldrb	w1, [x20]
  40f498:	mov	w0, #0x1                   	// #1
  40f49c:	cbnz	w1, 40f5a8 <wcrtomb@plt+0xa988>
  40f4a0:	str	w19, [x21]
  40f4a4:	mov	w0, #0x0                   	// #0
  40f4a8:	ldp	x19, x20, [sp, #16]
  40f4ac:	ldp	x21, x22, [sp, #32]
  40f4b0:	ldr	x23, [sp, #48]
  40f4b4:	ldp	x29, x30, [sp], #192
  40f4b8:	ret
  40f4bc:	mov	x1, #0x0                   	// #0
  40f4c0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40f4c4:	ldr	w2, [x0, #688]
  40f4c8:	cmp	w2, #0x5
  40f4cc:	b.eq	40f53c <wcrtomb@plt+0xa91c>  // b.none
  40f4d0:	b.hi	40f4f4 <wcrtomb@plt+0xa8d4>  // b.pmore
  40f4d4:	cmp	w2, #0x2
  40f4d8:	b.ls	40f514 <wcrtomb@plt+0xa8f4>  // b.plast
  40f4dc:	mov	w0, #0x0                   	// #0
  40f4e0:	cmp	w2, #0x4
  40f4e4:	b.ne	40f484 <wcrtomb@plt+0xa864>  // b.any
  40f4e8:	ldp	x19, x20, [sp, #16]
  40f4ec:	ldp	x21, x22, [sp, #32]
  40f4f0:	b	40f4b0 <wcrtomb@plt+0xa890>
  40f4f4:	cmp	w2, #0x6
  40f4f8:	b.ne	40f484 <wcrtomb@plt+0xa864>  // b.any
  40f4fc:	adrp	x2, 481000 <argp_program_version_hook@@Base+0x298>
  40f500:	add	x2, x2, #0x20
  40f504:	mov	x0, x22
  40f508:	bl	40f354 <wcrtomb@plt+0xa734>
  40f50c:	and	w0, w0, #0xff
  40f510:	cbnz	w0, 40f484 <wcrtomb@plt+0xa864>
  40f514:	mov	w1, #0x0                   	// #0
  40f518:	mov	x0, x22
  40f51c:	bl	41bf7c <wcrtomb@plt+0x1735c>
  40f520:	mov	w1, w0
  40f524:	mov	w0, #0x1                   	// #1
  40f528:	cmp	w1, #0x0
  40f52c:	b.le	40f484 <wcrtomb@plt+0xa864>
  40f530:	ldp	x19, x20, [sp, #16]
  40f534:	ldp	x21, x22, [sp, #32]
  40f538:	b	40f4b0 <wcrtomb@plt+0xa890>
  40f53c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40f540:	ldr	w1, [x0, #408]
  40f544:	mov	w0, #0x2                   	// #2
  40f548:	tbz	w1, #20, 40f59c <wcrtomb@plt+0xa97c>
  40f54c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40f550:	ldr	x0, [x0, #944]
  40f554:	cbz	x0, 40f55c <wcrtomb@plt+0xa93c>
  40f558:	blr	x0
  40f55c:	mov	w2, #0x5                   	// #5
  40f560:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40f564:	add	x1, x1, #0xb80
  40f568:	mov	x0, #0x0                   	// #0
  40f56c:	bl	4049c0 <dcgettext@plt>
  40f570:	mov	x3, x22
  40f574:	mov	x2, x0
  40f578:	mov	w1, #0x0                   	// #0
  40f57c:	mov	w0, #0x0                   	// #0
  40f580:	bl	404050 <error@plt>
  40f584:	mov	w0, #0x2                   	// #2
  40f588:	ldp	x19, x20, [sp, #16]
  40f58c:	ldp	x21, x22, [sp, #32]
  40f590:	b	40f4b0 <wcrtomb@plt+0xa890>
  40f594:	mov	w0, #0x0                   	// #0
  40f598:	b	40f4b0 <wcrtomb@plt+0xa890>
  40f59c:	ldp	x19, x20, [sp, #16]
  40f5a0:	ldp	x21, x22, [sp, #32]
  40f5a4:	b	40f4b0 <wcrtomb@plt+0xa890>
  40f5a8:	ldp	x19, x20, [sp, #16]
  40f5ac:	ldp	x21, x22, [sp, #32]
  40f5b0:	b	40f4b0 <wcrtomb@plt+0xa890>
  40f5b4:	stp	x29, x30, [sp, #-192]!
  40f5b8:	mov	x29, sp
  40f5bc:	stp	x19, x20, [sp, #16]
  40f5c0:	stp	x21, x22, [sp, #32]
  40f5c4:	stp	x23, x24, [sp, #48]
  40f5c8:	mov	x19, x0
  40f5cc:	and	w23, w1, #0xff
  40f5d0:	mov	x22, x2
  40f5d4:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x3be64>
  40f5d8:	add	x21, x21, #0x888
  40f5dc:	mov	w24, #0xc1                  	// #193
  40f5e0:	mov	w3, #0x0                   	// #0
  40f5e4:	mov	w2, w24
  40f5e8:	mov	x1, x19
  40f5ec:	ldr	w0, [x21]
  40f5f0:	bl	404ab0 <openat@plt>
  40f5f4:	mov	w20, w0
  40f5f8:	tbz	w0, #31, 40f644 <wcrtomb@plt+0xaa24>
  40f5fc:	mov	x2, x22
  40f600:	mov	w1, #0x0                   	// #0
  40f604:	mov	x0, x19
  40f608:	bl	40f3e0 <wcrtomb@plt+0xa7c0>
  40f60c:	cbz	w0, 40f634 <wcrtomb@plt+0xaa14>
  40f610:	cmp	w0, #0x2
  40f614:	b.ne	40f5e0 <wcrtomb@plt+0xa9c0>  // b.any
  40f618:	mov	w21, #0x0                   	// #0
  40f61c:	mov	w0, w21
  40f620:	ldp	x19, x20, [sp, #16]
  40f624:	ldp	x21, x22, [sp, #32]
  40f628:	ldp	x23, x24, [sp, #48]
  40f62c:	ldp	x29, x30, [sp], #192
  40f630:	ret
  40f634:	mov	x0, x19
  40f638:	bl	429b9c <wcrtomb@plt+0x24f7c>
  40f63c:	mov	w21, #0xffffffff            	// #-1
  40f640:	b	40f61c <wcrtomb@plt+0xa9fc>
  40f644:	add	x2, sp, #0x40
  40f648:	mov	w1, w0
  40f64c:	mov	w0, #0x0                   	// #0
  40f650:	bl	4049a0 <__fxstat@plt>
  40f654:	cbnz	w0, 40f768 <wcrtomb@plt+0xab48>
  40f658:	mov	w0, w20
  40f65c:	bl	4045d0 <close@plt>
  40f660:	mov	w21, w0
  40f664:	cbnz	w0, 40f780 <wcrtomb@plt+0xab60>
  40f668:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40f66c:	ldr	x0, [x0, #56]
  40f670:	bl	403ff0 <strlen@plt>
  40f674:	add	x0, x0, #0xa1
  40f678:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  40f67c:	mov	x20, x0
  40f680:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40f684:	add	x0, x0, #0x7d8
  40f688:	ldr	x1, [x0, #24]
  40f68c:	str	x1, [x20]
  40f690:	str	x20, [x0, #24]
  40f694:	ldr	x0, [sp, #64]
  40f698:	str	x0, [x20, #8]
  40f69c:	ldr	x0, [sp, #72]
  40f6a0:	str	x0, [x20, #16]
  40f6a4:	mov	x0, #0xffffffffffffffff    	// #-1
  40f6a8:	str	x0, [x20, #24]
  40f6ac:	str	x0, [x20, #32]
  40f6b0:	strb	w23, [x20, #40]
  40f6b4:	cbz	w23, 40f6e8 <wcrtomb@plt+0xaac8>
  40f6b8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40f6bc:	add	x0, x0, #0x20
  40f6c0:	ldr	w1, [x0, #104]
  40f6c4:	str	w1, [x20, #44]
  40f6c8:	ldr	w1, [x0, #112]
  40f6cc:	str	w1, [x20, #48]
  40f6d0:	ldr	w1, [x0, #116]
  40f6d4:	str	w1, [x20, #52]
  40f6d8:	ldp	x2, x3, [x0, #216]
  40f6dc:	stp	x2, x3, [x20, #56]
  40f6e0:	ldp	x0, x1, [x0, #232]
  40f6e4:	stp	x0, x1, [x20, #72]
  40f6e8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40f6ec:	ldr	w0, [x0, #4032]
  40f6f0:	str	w0, [x20, #88]
  40f6f4:	mov	x0, x19
  40f6f8:	bl	403ff0 <strlen@plt>
  40f6fc:	add	x0, x0, #0x9
  40f700:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  40f704:	str	x0, [x20, #96]
  40f708:	str	xzr, [x0], #8
  40f70c:	mov	x1, x19
  40f710:	bl	404910 <strcpy@plt>
  40f714:	mov	x0, x20
  40f718:	str	xzr, [x0, #104]!
  40f71c:	adrp	x22, 481000 <argp_program_version_hook@@Base+0x298>
  40f720:	add	x22, x22, #0x20
  40f724:	ldr	x1, [x22, #48]
  40f728:	bl	41a5bc <wcrtomb@plt+0x1599c>
  40f72c:	str	xzr, [x20, #112]
  40f730:	str	xzr, [x20, #120]
  40f734:	str	xzr, [x20, #128]
  40f738:	str	xzr, [x20, #136]
  40f73c:	add	x2, x20, #0x90
  40f740:	add	x1, x20, #0x98
  40f744:	mov	x0, x22
  40f748:	bl	413b24 <wcrtomb@plt+0xef04>
  40f74c:	ldr	x1, [x22, #24]
  40f750:	add	x0, x20, #0xa0
  40f754:	bl	404910 <strcpy@plt>
  40f758:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40f75c:	ldr	x20, [x0, #2008]
  40f760:	cbnz	x20, 40f798 <wcrtomb@plt+0xab78>
  40f764:	b	40f61c <wcrtomb@plt+0xa9fc>
  40f768:	mov	x0, x19
  40f76c:	bl	42a0bc <wcrtomb@plt+0x2549c>
  40f770:	mov	w0, w20
  40f774:	bl	4045d0 <close@plt>
  40f778:	mov	w21, #0xffffffff            	// #-1
  40f77c:	b	40f61c <wcrtomb@plt+0xa9fc>
  40f780:	mov	x0, x19
  40f784:	bl	429a50 <wcrtomb@plt+0x24e30>
  40f788:	mov	w21, #0xffffffff            	// #-1
  40f78c:	b	40f61c <wcrtomb@plt+0xa9fc>
  40f790:	ldr	x20, [x20]
  40f794:	cbz	x20, 40f61c <wcrtomb@plt+0xa9fc>
  40f798:	ldrb	w0, [x20, #88]
  40f79c:	cbnz	w0, 40f790 <wcrtomb@plt+0xab70>
  40f7a0:	ldr	x23, [x20, #152]
  40f7a4:	mov	x2, x23
  40f7a8:	ldr	x1, [x20, #160]
  40f7ac:	mov	x0, x19
  40f7b0:	bl	4043c0 <strncmp@plt>
  40f7b4:	mov	w22, w0
  40f7b8:	cbnz	w0, 40f790 <wcrtomb@plt+0xab70>
  40f7bc:	ldrb	w0, [x19, x23]
  40f7c0:	cmp	w0, #0x2f
  40f7c4:	b.ne	40f790 <wcrtomb@plt+0xab70>  // b.any
  40f7c8:	mov	x0, x19
  40f7cc:	bl	434ae4 <argp_parse@@Base+0x13a4>
  40f7d0:	add	x23, x23, #0x1
  40f7d4:	add	x23, x19, x23
  40f7d8:	cmp	x0, x23
  40f7dc:	b.ne	40f790 <wcrtomb@plt+0xab70>  // b.any
  40f7e0:	mov	x0, x20
  40f7e4:	bl	40ef74 <wcrtomb@plt+0xa354>
  40f7e8:	mov	w21, w22
  40f7ec:	b	40f61c <wcrtomb@plt+0xa9fc>
  40f7f0:	stp	x29, x30, [sp, #-352]!
  40f7f4:	mov	x29, sp
  40f7f8:	stp	x21, x22, [sp, #32]
  40f7fc:	stp	x23, x24, [sp, #48]
  40f800:	mov	x21, x0
  40f804:	strb	wzr, [sp, #351]
  40f808:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40f80c:	ldr	x23, [x0, #56]
  40f810:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40f814:	ldrb	w0, [x0, #888]
  40f818:	cbz	w0, 40f834 <wcrtomb@plt+0xac14>
  40f81c:	stp	x19, x20, [sp, #16]
  40f820:	str	x25, [sp, #64]
  40f824:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x3be64>
  40f828:	add	x22, x22, #0x888
  40f82c:	mov	w24, #0x100                 	// #256
  40f830:	b	40f92c <wcrtomb@plt+0xad0c>
  40f834:	mov	x0, x23
  40f838:	bl	41e644 <wcrtomb@plt+0x19a24>
  40f83c:	and	w0, w0, #0xff
  40f840:	cbz	w0, 40f81c <wcrtomb@plt+0xabfc>
  40f844:	add	x2, sp, #0x15f
  40f848:	mov	w1, #0x0                   	// #0
  40f84c:	mov	x0, x21
  40f850:	bl	40f5b4 <wcrtomb@plt+0xa994>
  40f854:	mov	w1, w0
  40f858:	b	40f9d0 <wcrtomb@plt+0xadb0>
  40f85c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40f860:	ldr	x19, [x0, #2032]
  40f864:	cbz	x19, 40f9c4 <wcrtomb@plt+0xada4>
  40f868:	mov	w4, #0x100                 	// #256
  40f86c:	add	x3, sp, #0x58
  40f870:	mov	x2, x23
  40f874:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  40f878:	ldr	w1, [x0, #2184]
  40f87c:	mov	w0, #0x0                   	// #0
  40f880:	bl	404c00 <__fxstatat@plt>
  40f884:	cbnz	w0, 40f9c4 <wcrtomb@plt+0xada4>
  40f888:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40f88c:	ldr	w1, [x0, #4032]
  40f890:	ldr	x2, [sp, #88]
  40f894:	ldr	x3, [sp, #96]
  40f898:	b	40f8a4 <wcrtomb@plt+0xac84>
  40f89c:	ldr	x19, [x19]
  40f8a0:	cbz	x19, 40f9c4 <wcrtomb@plt+0xada4>
  40f8a4:	ldr	w0, [x19, #88]
  40f8a8:	cmp	w0, w1
  40f8ac:	b.ne	40f89c <wcrtomb@plt+0xac7c>  // b.any
  40f8b0:	ldr	x0, [x19, #8]
  40f8b4:	cmp	x0, x2
  40f8b8:	b.ne	40f89c <wcrtomb@plt+0xac7c>  // b.any
  40f8bc:	ldr	x0, [x19, #16]
  40f8c0:	cmp	x0, x3
  40f8c4:	b.ne	40f89c <wcrtomb@plt+0xac7c>  // b.any
  40f8c8:	ldr	x0, [x19, #24]
  40f8cc:	cmn	x0, #0x1
  40f8d0:	b.ne	40f89c <wcrtomb@plt+0xac7c>  // b.any
  40f8d4:	ldr	x0, [x19, #32]
  40f8d8:	cmn	w0, #0x1
  40f8dc:	b.ne	40f89c <wcrtomb@plt+0xac7c>  // b.any
  40f8e0:	mov	x0, x21
  40f8e4:	bl	403ff0 <strlen@plt>
  40f8e8:	add	x0, x0, #0x9
  40f8ec:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  40f8f0:	mov	x20, x0
  40f8f4:	mov	x1, x21
  40f8f8:	add	x0, x0, #0x8
  40f8fc:	bl	404910 <strcpy@plt>
  40f900:	ldr	x0, [x19, #96]
  40f904:	str	x0, [x20]
  40f908:	str	x20, [x19, #96]
  40f90c:	b	40f9c4 <wcrtomb@plt+0xada4>
  40f910:	str	w25, [x19]
  40f914:	add	x2, sp, #0x15f
  40f918:	mov	w1, #0x0                   	// #0
  40f91c:	mov	x0, x21
  40f920:	bl	40f3e0 <wcrtomb@plt+0xa7c0>
  40f924:	cmp	w0, #0x1
  40f928:	b.ne	40f9e4 <wcrtomb@plt+0xadc4>  // b.any
  40f92c:	ldr	w0, [x22]
  40f930:	mov	w4, #0x0                   	// #0
  40f934:	mov	x3, x21
  40f938:	mov	w2, w0
  40f93c:	mov	x1, x23
  40f940:	bl	4040e0 <linkat@plt>
  40f944:	mov	w20, w0
  40f948:	bl	404ad0 <__errno_location@plt>
  40f94c:	mov	x19, x0
  40f950:	ldr	w25, [x0]
  40f954:	cbz	w20, 40f85c <wcrtomb@plt+0xac3c>
  40f958:	cmp	w25, #0x11
  40f95c:	b.ne	40f970 <wcrtomb@plt+0xad50>  // b.any
  40f960:	mov	x1, x21
  40f964:	mov	x0, x23
  40f968:	bl	404720 <strcmp@plt>
  40f96c:	cbz	w0, 40f9c4 <wcrtomb@plt+0xada4>
  40f970:	mov	w4, w24
  40f974:	add	x3, sp, #0x58
  40f978:	mov	x2, x23
  40f97c:	ldr	w1, [x22]
  40f980:	mov	w0, #0x0                   	// #0
  40f984:	bl	404c00 <__fxstatat@plt>
  40f988:	cbnz	w0, 40f910 <wcrtomb@plt+0xacf0>
  40f98c:	mov	w4, w24
  40f990:	add	x3, sp, #0xd8
  40f994:	mov	x2, x21
  40f998:	ldr	w1, [x22]
  40f99c:	bl	404c00 <__fxstatat@plt>
  40f9a0:	cbnz	w0, 40f910 <wcrtomb@plt+0xacf0>
  40f9a4:	ldr	x1, [sp, #88]
  40f9a8:	ldr	x0, [sp, #216]
  40f9ac:	cmp	x1, x0
  40f9b0:	b.ne	40f910 <wcrtomb@plt+0xacf0>  // b.any
  40f9b4:	ldr	x1, [sp, #96]
  40f9b8:	ldr	x0, [sp, #224]
  40f9bc:	cmp	x1, x0
  40f9c0:	b.ne	40f910 <wcrtomb@plt+0xacf0>  // b.any
  40f9c4:	mov	w1, #0x0                   	// #0
  40f9c8:	ldp	x19, x20, [sp, #16]
  40f9cc:	ldr	x25, [sp, #64]
  40f9d0:	mov	w0, w1
  40f9d4:	ldp	x21, x22, [sp, #32]
  40f9d8:	ldp	x23, x24, [sp, #48]
  40f9dc:	ldp	x29, x30, [sp], #352
  40f9e0:	ret
  40f9e4:	mov	w1, #0x0                   	// #0
  40f9e8:	cmp	w0, #0x2
  40f9ec:	b.eq	40fa24 <wcrtomb@plt+0xae04>  // b.none
  40f9f0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40f9f4:	ldrb	w0, [x0, #4065]
  40f9f8:	cbz	w0, 40fa08 <wcrtomb@plt+0xade8>
  40f9fc:	ldr	w0, [x19]
  40fa00:	cmp	w0, #0x11
  40fa04:	b.eq	40fa30 <wcrtomb@plt+0xae10>  // b.none
  40fa08:	mov	x1, x21
  40fa0c:	mov	x0, x23
  40fa10:	bl	429aa8 <wcrtomb@plt+0x24e88>
  40fa14:	mov	w1, #0x1                   	// #1
  40fa18:	ldp	x19, x20, [sp, #16]
  40fa1c:	ldr	x25, [sp, #64]
  40fa20:	b	40f9d0 <wcrtomb@plt+0xadb0>
  40fa24:	ldp	x19, x20, [sp, #16]
  40fa28:	ldr	x25, [sp, #64]
  40fa2c:	b	40f9d0 <wcrtomb@plt+0xadb0>
  40fa30:	ldp	x19, x20, [sp, #16]
  40fa34:	ldr	x25, [sp, #64]
  40fa38:	b	40f9d0 <wcrtomb@plt+0xadb0>
  40fa3c:	stp	x29, x30, [sp, #-352]!
  40fa40:	mov	x29, sp
  40fa44:	stp	x19, x20, [sp, #16]
  40fa48:	stp	x21, x22, [sp, #32]
  40fa4c:	stp	x23, x24, [sp, #48]
  40fa50:	stp	x25, x26, [sp, #64]
  40fa54:	mov	x19, x0
  40fa58:	mov	w20, w1
  40fa5c:	strb	wzr, [sp, #351]
  40fa60:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40fa64:	ldrb	w0, [x0, #21]
  40fa68:	cbz	w0, 40fa78 <wcrtomb@plt+0xae58>
  40fa6c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40fa70:	ldr	x0, [x0, #760]
  40fa74:	cbz	x0, 40fb2c <wcrtomb@plt+0xaf0c>
  40fa78:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40fa7c:	ldrb	w0, [x0, #4065]
  40fa80:	cbnz	w0, 40fb70 <wcrtomb@plt+0xaf50>
  40fa84:	cmp	w20, #0x44
  40fa88:	b.eq	40fb7c <wcrtomb@plt+0xaf5c>  // b.none
  40fa8c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40fa90:	ldr	w22, [x0, #136]
  40fa94:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40fa98:	ldr	w1, [x0, #916]
  40fa9c:	mov	w0, #0x1c0                 	// #448
  40faa0:	cmp	w1, #0x0
  40faa4:	b.le	40fb84 <wcrtomb@plt+0xaf64>
  40faa8:	and	w22, w22, w0
  40faac:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40fab0:	ldrb	w0, [x0, #2020]
  40fab4:	cmp	w0, #0x0
  40fab8:	mov	w0, #0xc0                  	// #192
  40fabc:	csel	w0, w0, wzr, eq  // eq = none
  40fac0:	orr	w22, w22, w0
  40fac4:	mov	w26, #0x0                   	// #0
  40fac8:	mov	w25, #0x0                   	// #0
  40facc:	adrp	x23, 47d000 <_obstack_memory_used@@Base+0x3be64>
  40fad0:	add	x23, x23, #0x888
  40fad4:	adrp	x24, 481000 <argp_program_version_hook@@Base+0x298>
  40fad8:	add	x24, x24, #0x230
  40fadc:	mov	w2, w22
  40fae0:	mov	x1, x19
  40fae4:	ldr	w0, [x23]
  40fae8:	bl	404260 <mkdirat@plt>
  40faec:	mov	w21, w0
  40faf0:	cbz	w0, 40fba0 <wcrtomb@plt+0xaf80>
  40faf4:	bl	404ad0 <__errno_location@plt>
  40faf8:	mov	x20, x0
  40fafc:	ldr	w0, [x0]
  40fb00:	cmp	w0, #0x11
  40fb04:	b.ne	40fc20 <wcrtomb@plt+0xb000>  // b.any
  40fb08:	ldrb	w0, [sp, #351]
  40fb0c:	cbnz	w0, 40fbb8 <wcrtomb@plt+0xaf98>
  40fb10:	ldrb	w0, [x24]
  40fb14:	cbnz	w0, 40fbc0 <wcrtomb@plt+0xafa0>
  40fb18:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40fb1c:	ldr	w0, [x0, #688]
  40fb20:	tst	w0, #0xfffffffd
  40fb24:	b.eq	40fbf4 <wcrtomb@plt+0xafd4>  // b.none
  40fb28:	b	40fc20 <wcrtomb@plt+0xb000>
  40fb2c:	mov	w4, #0x0                   	// #0
  40fb30:	add	x3, sp, #0xd8
  40fb34:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x15e64>
  40fb38:	add	x2, x2, #0x340
  40fb3c:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  40fb40:	ldr	w1, [x0, #2184]
  40fb44:	mov	w0, #0x0                   	// #0
  40fb48:	bl	404c00 <__fxstatat@plt>
  40fb4c:	cbnz	w0, 40fb60 <wcrtomb@plt+0xaf40>
  40fb50:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40fb54:	ldr	x1, [sp, #216]
  40fb58:	str	x1, [x0, #760]
  40fb5c:	b	40fa78 <wcrtomb@plt+0xae58>
  40fb60:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x15e64>
  40fb64:	add	x0, x0, #0x340
  40fb68:	bl	41b924 <wcrtomb@plt+0x16d04>
  40fb6c:	b	40fa78 <wcrtomb@plt+0xae58>
  40fb70:	mov	x0, x19
  40fb74:	bl	417018 <wcrtomb@plt+0x123f8>
  40fb78:	b	40fa8c <wcrtomb@plt+0xae6c>
  40fb7c:	bl	419828 <wcrtomb@plt+0x14c08>
  40fb80:	b	40fa8c <wcrtomb@plt+0xae6c>
  40fb84:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40fb88:	ldr	w0, [x0, #548]
  40fb8c:	cmp	w0, #0x0
  40fb90:	mov	w0, #0x1c0                 	// #448
  40fb94:	mov	w1, #0x1ff                 	// #511
  40fb98:	csel	w0, w0, w1, gt
  40fb9c:	b	40faa8 <wcrtomb@plt+0xae88>
  40fba0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40fba4:	ldr	w25, [x0, #2024]
  40fba8:	bic	w25, w22, w25
  40fbac:	mov	w5, #0x100                 	// #256
  40fbb0:	mov	w26, #0x1ff                 	// #511
  40fbb4:	b	40fc50 <wcrtomb@plt+0xb030>
  40fbb8:	ldrb	w0, [x24]
  40fbbc:	cbz	w0, 40fbf4 <wcrtomb@plt+0xafd4>
  40fbc0:	mov	w4, #0x100                 	// #256
  40fbc4:	add	x3, sp, #0xd8
  40fbc8:	mov	x2, x19
  40fbcc:	ldr	w1, [x23]
  40fbd0:	mov	w0, #0x0                   	// #0
  40fbd4:	bl	404c00 <__fxstatat@plt>
  40fbd8:	cbnz	w0, 40fbec <wcrtomb@plt+0xafcc>
  40fbdc:	ldr	w0, [sp, #232]
  40fbe0:	and	w0, w0, #0xf000
  40fbe4:	cmp	w0, #0xa, lsl #12
  40fbe8:	b.eq	40fc88 <wcrtomb@plt+0xb068>  // b.none
  40fbec:	mov	w0, #0x11                  	// #17
  40fbf0:	str	w0, [x20]
  40fbf4:	add	x1, sp, #0x58
  40fbf8:	mov	x0, x19
  40fbfc:	bl	41b26c <wcrtomb@plt+0x1664c>
  40fc00:	cbnz	w0, 40fc18 <wcrtomb@plt+0xaff8>
  40fc04:	ldr	w25, [sp, #104]
  40fc08:	and	w0, w25, #0xf000
  40fc0c:	cmp	w0, #0x4, lsl #12
  40fc10:	b.eq	40fcc4 <wcrtomb@plt+0xb0a4>  // b.none
  40fc14:	mov	w26, #0xffffffff            	// #-1
  40fc18:	mov	w0, #0x11                  	// #17
  40fc1c:	str	w0, [x20]
  40fc20:	add	x2, sp, #0x15f
  40fc24:	mov	w1, #0x0                   	// #0
  40fc28:	mov	x0, x19
  40fc2c:	bl	40f3e0 <wcrtomb@plt+0xa7c0>
  40fc30:	cbz	w0, 40fde4 <wcrtomb@plt+0xb1c4>
  40fc34:	cmp	w0, #0x1
  40fc38:	b.eq	40fadc <wcrtomb@plt+0xaebc>  // b.none
  40fc3c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40fc40:	ldr	w0, [x0, #688]
  40fc44:	tst	w0, #0xfffffffd
  40fc48:	b.ne	40fc6c <wcrtomb@plt+0xb04c>  // b.any
  40fc4c:	mov	w5, #0x0                   	// #0
  40fc50:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  40fc54:	add	x1, x1, #0x20
  40fc58:	ldr	w4, [x1, #104]
  40fc5c:	mov	w3, w26
  40fc60:	mov	w2, w25
  40fc64:	mov	x0, x19
  40fc68:	bl	40efd8 <wcrtomb@plt+0xa3b8>
  40fc6c:	mov	w0, w21
  40fc70:	ldp	x19, x20, [sp, #16]
  40fc74:	ldp	x21, x22, [sp, #32]
  40fc78:	ldp	x23, x24, [sp, #48]
  40fc7c:	ldp	x25, x26, [sp, #64]
  40fc80:	ldp	x29, x30, [sp], #352
  40fc84:	ret
  40fc88:	mov	w4, #0x0                   	// #0
  40fc8c:	add	x3, sp, #0xd8
  40fc90:	mov	x2, x19
  40fc94:	ldr	w1, [x23]
  40fc98:	mov	w0, #0x0                   	// #0
  40fc9c:	bl	404c00 <__fxstatat@plt>
  40fca0:	cbnz	w0, 40fbec <wcrtomb@plt+0xafcc>
  40fca4:	ldr	w0, [sp, #232]
  40fca8:	and	w0, w0, #0xf000
  40fcac:	mov	w1, #0x11                  	// #17
  40fcb0:	str	w1, [x20]
  40fcb4:	cmp	w0, #0x4, lsl #12
  40fcb8:	b.ne	40fbf4 <wcrtomb@plt+0xafd4>  // b.any
  40fcbc:	mov	w21, #0x0                   	// #0
  40fcc0:	b	40fc6c <wcrtomb@plt+0xb04c>
  40fcc4:	ldrb	w0, [sp, #351]
  40fcc8:	mov	w26, #0xffffffff            	// #-1
  40fccc:	cbz	w0, 40fc3c <wcrtomb@plt+0xb01c>
  40fcd0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40fcd4:	ldr	x20, [x0, #2008]
  40fcd8:	cbz	x20, 40fd90 <wcrtomb@plt+0xb170>
  40fcdc:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x3be64>
  40fce0:	add	x21, x21, #0x888
  40fce4:	b	40fcfc <wcrtomb@plt+0xb0dc>
  40fce8:	ldr	x0, [x20, #160]
  40fcec:	bl	42a0bc <wcrtomb@plt+0x2549c>
  40fcf0:	b	40fcbc <wcrtomb@plt+0xb09c>
  40fcf4:	ldr	x20, [x20]
  40fcf8:	cbz	x20, 40fd90 <wcrtomb@plt+0xb170>
  40fcfc:	ldr	w4, [x20, #84]
  40fd00:	add	x3, sp, #0xd8
  40fd04:	ldr	x2, [x20, #160]
  40fd08:	ldr	w1, [x21]
  40fd0c:	mov	w0, #0x0                   	// #0
  40fd10:	bl	404c00 <__fxstatat@plt>
  40fd14:	cbnz	w0, 40fce8 <wcrtomb@plt+0xb0c8>
  40fd18:	ldr	x1, [sp, #216]
  40fd1c:	ldr	x0, [sp, #88]
  40fd20:	cmp	x1, x0
  40fd24:	b.ne	40fcf4 <wcrtomb@plt+0xb0d4>  // b.any
  40fd28:	ldr	x1, [sp, #224]
  40fd2c:	ldr	x0, [sp, #96]
  40fd30:	cmp	x1, x0
  40fd34:	b.ne	40fcf4 <wcrtomb@plt+0xb0d4>  // b.any
  40fd38:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40fd3c:	add	x0, x0, #0x20
  40fd40:	ldr	x1, [x0, #88]
  40fd44:	str	x1, [x20, #8]
  40fd48:	ldr	x1, [x0, #96]
  40fd4c:	str	x1, [x20, #16]
  40fd50:	ldr	w1, [x0, #104]
  40fd54:	str	w1, [x20, #24]
  40fd58:	ldr	w1, [x0, #112]
  40fd5c:	str	w1, [x20, #28]
  40fd60:	ldr	w1, [x0, #116]
  40fd64:	str	w1, [x20, #32]
  40fd68:	ldp	x2, x3, [x0, #216]
  40fd6c:	stp	x2, x3, [x20, #40]
  40fd70:	ldp	x0, x1, [x0, #232]
  40fd74:	stp	x0, x1, [x20, #56]
  40fd78:	ldr	w0, [sp, #232]
  40fd7c:	str	w0, [x20, #72]
  40fd80:	mov	w0, #0xffffffff            	// #-1
  40fd84:	str	w0, [x20, #76]
  40fd88:	strb	wzr, [x20, #80]
  40fd8c:	b	40fcbc <wcrtomb@plt+0xb09c>
  40fd90:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40fd94:	ldr	x0, [x0, #944]
  40fd98:	cbz	x0, 40fda0 <wcrtomb@plt+0xb180>
  40fd9c:	blr	x0
  40fda0:	mov	w2, #0x5                   	// #5
  40fda4:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  40fda8:	add	x1, x1, #0xba0
  40fdac:	mov	x0, #0x0                   	// #0
  40fdb0:	bl	4049c0 <dcgettext@plt>
  40fdb4:	mov	x20, x0
  40fdb8:	mov	x0, x19
  40fdbc:	bl	43efc4 <argp_parse@@Base+0xb884>
  40fdc0:	mov	x3, x0
  40fdc4:	mov	x2, x20
  40fdc8:	mov	w1, #0x0                   	// #0
  40fdcc:	mov	w0, #0x0                   	// #0
  40fdd0:	bl	404050 <error@plt>
  40fdd4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40fdd8:	mov	w1, #0x2                   	// #2
  40fddc:	str	w1, [x0, #3392]
  40fde0:	b	40fcbc <wcrtomb@plt+0xb09c>
  40fde4:	ldr	w0, [x20]
  40fde8:	cmp	w0, #0x11
  40fdec:	b.eq	40fc3c <wcrtomb@plt+0xb01c>  // b.none
  40fdf0:	mov	x0, x19
  40fdf4:	bl	429b3c <wcrtomb@plt+0x24f1c>
  40fdf8:	mov	w21, #0x1                   	// #1
  40fdfc:	b	40fc6c <wcrtomb@plt+0xb04c>
  40fe00:	stp	x29, x30, [sp, #-48]!
  40fe04:	mov	x29, sp
  40fe08:	stp	x19, x20, [sp, #16]
  40fe0c:	stp	x21, x22, [sp, #32]
  40fe10:	mov	x22, x1
  40fe14:	mov	w20, w2
  40fe18:	mov	w21, w3
  40fe1c:	tbnz	w0, #31, 40fe48 <wcrtomb@plt+0xb228>
  40fe20:	mov	w1, w2
  40fe24:	bl	404480 <fchmod@plt>
  40fe28:	mov	w19, w0
  40fe2c:	cbz	w0, 40fe64 <wcrtomb@plt+0xb244>
  40fe30:	bl	404ad0 <__errno_location@plt>
  40fe34:	ldr	w0, [x0]
  40fe38:	cmp	w0, #0x26
  40fe3c:	mov	w1, #0x5f                  	// #95
  40fe40:	ccmp	w0, w1, #0x4, ne  // ne = any
  40fe44:	b.ne	40fe64 <wcrtomb@plt+0xb244>  // b.any
  40fe48:	mov	w3, w21
  40fe4c:	mov	w2, w20
  40fe50:	mov	x1, x22
  40fe54:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  40fe58:	ldr	w0, [x0, #2184]
  40fe5c:	bl	404b30 <fchmodat@plt>
  40fe60:	mov	w19, w0
  40fe64:	mov	w0, w19
  40fe68:	ldp	x19, x20, [sp, #16]
  40fe6c:	ldp	x21, x22, [sp, #32]
  40fe70:	ldp	x29, x30, [sp], #48
  40fe74:	ret
  40fe78:	stp	x29, x30, [sp, #-224]!
  40fe7c:	mov	x29, sp
  40fe80:	stp	x19, x20, [sp, #16]
  40fe84:	stp	x21, x22, [sp, #32]
  40fe88:	stp	x23, x24, [sp, #48]
  40fe8c:	stp	x25, x26, [sp, #64]
  40fe90:	stp	x27, x28, [sp, #80]
  40fe94:	mov	x20, x0
  40fe98:	mov	x19, x1
  40fe9c:	mov	w26, w2
  40fea0:	mov	w23, w3
  40fea4:	mov	w21, w4
  40fea8:	and	w25, w5, #0xff
  40feac:	and	w24, w6, #0xff
  40feb0:	mov	w27, w7
  40feb4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40feb8:	ldrb	w0, [x0, #488]
  40febc:	orr	w0, w0, w24
  40fec0:	cbz	w0, 40ff84 <wcrtomb@plt+0xb364>
  40fec4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40fec8:	ldr	w0, [x0, #916]
  40fecc:	cmp	w0, #0x0
  40fed0:	ccmp	w24, #0x0, #0x0, gt
  40fed4:	b.eq	410024 <wcrtomb@plt+0xb404>  // b.none
  40fed8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40fedc:	ldr	w22, [x0, #2024]
  40fee0:	ldr	w0, [x19, #104]
  40fee4:	bic	w22, w0, w22
  40fee8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  40feec:	ldr	w0, [x0, #548]
  40fef0:	cmp	w0, #0x0
  40fef4:	ccmp	w24, #0x0, #0x0, gt
  40fef8:	mov	w24, #0xfff                 	// #4095
  40fefc:	mov	w0, #0x1ff                 	// #511
  40ff00:	csel	w24, w24, w0, eq  // eq = none
  40ff04:	eor	w0, w22, w23
  40ff08:	orn	w0, w0, w21
  40ff0c:	tst	w0, w24
  40ff10:	b.eq	40ff34 <wcrtomb@plt+0xb314>  // b.none
  40ff14:	orr	w21, w21, w24
  40ff18:	mvn	w21, w21
  40ff1c:	tst	x21, #0xfff
  40ff20:	b.ne	4100cc <wcrtomb@plt+0xb4ac>  // b.any
  40ff24:	and	w23, w23, #0xfff
  40ff28:	eor	w22, w22, w23
  40ff2c:	ands	w22, w22, w24
  40ff30:	b.ne	410118 <wcrtomb@plt+0xb4f8>  // b.any
  40ff34:	mov	w3, #0x1                   	// #1
  40ff38:	mov	w2, w25
  40ff3c:	mov	x1, x20
  40ff40:	mov	x0, x19
  40ff44:	bl	429264 <wcrtomb@plt+0x24644>
  40ff48:	mov	w2, w25
  40ff4c:	mov	x1, x20
  40ff50:	mov	x0, x19
  40ff54:	bl	428c94 <wcrtomb@plt+0x24074>
  40ff58:	mov	w2, w25
  40ff5c:	mov	x1, x20
  40ff60:	mov	x0, x19
  40ff64:	bl	4291e4 <wcrtomb@plt+0x245c4>
  40ff68:	ldp	x19, x20, [sp, #16]
  40ff6c:	ldp	x21, x22, [sp, #32]
  40ff70:	ldp	x23, x24, [sp, #48]
  40ff74:	ldp	x25, x26, [sp, #64]
  40ff78:	ldp	x27, x28, [sp, #80]
  40ff7c:	ldp	x29, x30, [sp], #224
  40ff80:	ret
  40ff84:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40ff88:	ldrb	w0, [x0, #4065]
  40ff8c:	cbz	w0, 40ffdc <wcrtomb@plt+0xb3bc>
  40ff90:	ldp	x0, x1, [x1, #216]
  40ff94:	stp	x0, x1, [sp, #96]
  40ff98:	ldp	x0, x1, [x19, #232]
  40ff9c:	stp	x0, x1, [sp, #112]
  40ffa0:	mov	w4, w27
  40ffa4:	add	x3, sp, #0x60
  40ffa8:	mov	x2, x20
  40ffac:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  40ffb0:	ldr	w1, [x0, #2184]
  40ffb4:	mov	w0, w26
  40ffb8:	bl	435908 <argp_parse@@Base+0x21c8>
  40ffbc:	cbnz	w0, 40fff8 <wcrtomb@plt+0xb3d8>
  40ffc0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  40ffc4:	ldrb	w0, [x0, #4065]
  40ffc8:	cbnz	w0, 40ffe8 <wcrtomb@plt+0xb3c8>
  40ffcc:	ldp	x1, x2, [sp, #112]
  40ffd0:	mov	x0, x20
  40ffd4:	bl	40edf4 <wcrtomb@plt+0xa1d4>
  40ffd8:	b	40fec4 <wcrtomb@plt+0xb2a4>
  40ffdc:	mov	x0, #0x3ffffffe            	// #1073741822
  40ffe0:	str	x0, [sp, #104]
  40ffe4:	b	40ff98 <wcrtomb@plt+0xb378>
  40ffe8:	ldp	x1, x2, [sp, #96]
  40ffec:	mov	x0, x20
  40fff0:	bl	40edf4 <wcrtomb@plt+0xa1d4>
  40fff4:	b	40ffcc <wcrtomb@plt+0xb3ac>
  40fff8:	cmp	w25, #0x32
  40fffc:	b.ne	410018 <wcrtomb@plt+0xb3f8>  // b.any
  410000:	bl	404ad0 <__errno_location@plt>
  410004:	ldr	w0, [x0]
  410008:	cmp	w0, #0x26
  41000c:	mov	w1, #0x5f                  	// #95
  410010:	ccmp	w0, w1, #0x4, ne  // ne = any
  410014:	b.eq	40fec4 <wcrtomb@plt+0xb2a4>  // b.none
  410018:	mov	x0, x20
  41001c:	bl	42a15c <wcrtomb@plt+0x2553c>
  410020:	b	40fec4 <wcrtomb@plt+0xb2a4>
  410024:	ldr	w22, [x19, #112]
  410028:	ldr	w28, [x19, #116]
  41002c:	tbnz	w26, #31, 41005c <wcrtomb@plt+0xb43c>
  410030:	mov	w2, w28
  410034:	mov	w1, w22
  410038:	mov	w0, w26
  41003c:	bl	404b70 <fchown@plt>
  410040:	cbz	w0, 4100b0 <wcrtomb@plt+0xb490>
  410044:	bl	404ad0 <__errno_location@plt>
  410048:	ldr	w0, [x0]
  41004c:	cmp	w0, #0x26
  410050:	mov	w1, #0x5f                  	// #95
  410054:	ccmp	w0, w1, #0x4, ne  // ne = any
  410058:	b.ne	41007c <wcrtomb@plt+0xb45c>  // b.any
  41005c:	mov	w4, w27
  410060:	mov	w3, w28
  410064:	mov	w2, w22
  410068:	mov	x1, x20
  41006c:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  410070:	ldr	w0, [x0, #2184]
  410074:	bl	404840 <fchownat@plt>
  410078:	cbz	w0, 4100b0 <wcrtomb@plt+0xb490>
  41007c:	cmp	w25, #0x32
  410080:	b.ne	41009c <wcrtomb@plt+0xb47c>  // b.any
  410084:	bl	404ad0 <__errno_location@plt>
  410088:	ldr	w0, [x0]
  41008c:	cmp	w0, #0x26
  410090:	mov	w1, #0x5f                  	// #95
  410094:	ccmp	w0, w1, #0x4, ne  // ne = any
  410098:	b.eq	40fed8 <wcrtomb@plt+0xb2b8>  // b.none
  41009c:	mov	w2, w28
  4100a0:	mov	w1, w22
  4100a4:	mov	x0, x20
  4100a8:	bl	4299bc <wcrtomb@plt+0x24d9c>
  4100ac:	b	40fed8 <wcrtomb@plt+0xb2b8>
  4100b0:	orn	w2, w23, w21
  4100b4:	and	w0, w23, #0xc00
  4100b8:	bic	w0, w21, w0
  4100bc:	mov	w1, #0x49                  	// #73
  4100c0:	tst	w2, w1
  4100c4:	csel	w21, w0, w21, ne  // ne = any
  4100c8:	b	40fed8 <wcrtomb@plt+0xb2b8>
  4100cc:	tbnz	w26, #31, 4100ec <wcrtomb@plt+0xb4cc>
  4100d0:	add	x2, sp, #0x60
  4100d4:	mov	w1, w26
  4100d8:	mov	w0, #0x0                   	// #0
  4100dc:	bl	4049a0 <__fxstat@plt>
  4100e0:	cbnz	w0, 41010c <wcrtomb@plt+0xb4ec>
  4100e4:	ldr	w23, [sp, #112]
  4100e8:	b	40ff24 <wcrtomb@plt+0xb304>
  4100ec:	mov	w4, w27
  4100f0:	add	x3, sp, #0x60
  4100f4:	mov	x2, x20
  4100f8:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  4100fc:	ldr	w1, [x0, #2184]
  410100:	mov	w0, #0x0                   	// #0
  410104:	bl	404c00 <__fxstatat@plt>
  410108:	b	4100e0 <wcrtomb@plt+0xb4c0>
  41010c:	mov	x0, x20
  410110:	bl	42a0bc <wcrtomb@plt+0x2549c>
  410114:	b	40ff34 <wcrtomb@plt+0xb314>
  410118:	eor	w22, w23, w22
  41011c:	mov	w3, w27
  410120:	mov	w2, w22
  410124:	mov	x1, x20
  410128:	mov	w0, w26
  41012c:	bl	40fe00 <wcrtomb@plt+0xb1e0>
  410130:	mov	w21, w0
  410134:	cbz	w0, 4101a0 <wcrtomb@plt+0xb580>
  410138:	bl	404ad0 <__errno_location@plt>
  41013c:	ldr	w21, [x0]
  410140:	cmp	w25, #0x32
  410144:	cset	w0, ne  // ne = any
  410148:	cmp	w27, #0x0
  41014c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  410150:	b.eq	4101b4 <wcrtomb@plt+0xb594>  // b.none
  410154:	cmp	w21, #0x26
  410158:	mov	w0, #0x5f                  	// #95
  41015c:	ccmp	w21, w0, #0x4, ne  // ne = any
  410160:	b.ne	410184 <wcrtomb@plt+0xb564>  // b.any
  410164:	mov	w3, #0x0                   	// #0
  410168:	mov	w2, w22
  41016c:	mov	x1, x20
  410170:	mov	w0, w26
  410174:	bl	40fe00 <wcrtomb@plt+0xb1e0>
  410178:	cbz	w0, 40ff34 <wcrtomb@plt+0xb314>
  41017c:	bl	404ad0 <__errno_location@plt>
  410180:	ldr	w21, [x0]
  410184:	cbz	w21, 40ff34 <wcrtomb@plt+0xb314>
  410188:	bl	404ad0 <__errno_location@plt>
  41018c:	str	w21, [x0]
  410190:	mov	w1, w22
  410194:	mov	x0, x20
  410198:	bl	42992c <wcrtomb@plt+0x24d0c>
  41019c:	b	40ff34 <wcrtomb@plt+0xb314>
  4101a0:	cmp	w25, #0x32
  4101a4:	cset	w0, ne  // ne = any
  4101a8:	cmp	w27, #0x0
  4101ac:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  4101b0:	b.ne	410184 <wcrtomb@plt+0xb564>  // b.any
  4101b4:	cbz	w21, 40ff34 <wcrtomb@plt+0xb314>
  4101b8:	cbnz	w0, 410188 <wcrtomb@plt+0xb568>
  4101bc:	cmp	w21, #0x26
  4101c0:	mov	w0, #0x5f                  	// #95
  4101c4:	ccmp	w21, w0, #0x4, ne  // ne = any
  4101c8:	b.eq	40ff34 <wcrtomb@plt+0xb314>  // b.none
  4101cc:	b	410188 <wcrtomb@plt+0xb568>
  4101d0:	sub	sp, sp, #0x290
  4101d4:	stp	x29, x30, [sp]
  4101d8:	mov	x29, sp
  4101dc:	stp	x19, x20, [sp, #16]
  4101e0:	stp	x23, x24, [sp, #48]
  4101e4:	stp	x25, x26, [sp, #64]
  4101e8:	mov	x23, x0
  4101ec:	and	w25, w1, #0xff
  4101f0:	bl	403ff0 <strlen@plt>
  4101f4:	mov	x24, x0
  4101f8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4101fc:	ldr	x19, [x0, #2008]
  410200:	cbz	x19, 4103e0 <wcrtomb@plt+0xb7c0>
  410204:	stp	x21, x22, [sp, #32]
  410208:	str	x27, [sp, #80]
  41020c:	mov	w20, #0x0                   	// #0
  410210:	mov	w27, #0x35                  	// #53
  410214:	adrp	x26, 47d000 <_obstack_memory_used@@Base+0x3be64>
  410218:	add	x26, x26, #0x888
  41021c:	b	4102dc <wcrtomb@plt+0xb6bc>
  410220:	ldr	x1, [x19, #160]
  410224:	mov	x0, x23
  410228:	bl	4046e0 <memcmp@plt>
  41022c:	cbz	w0, 4103f8 <wcrtomb@plt+0xb7d8>
  410230:	ldr	w0, [x19, #92]
  410234:	bl	41b6a8 <wcrtomb@plt+0x16a88>
  410238:	cbnz	w20, 410324 <wcrtomb@plt+0xb704>
  41023c:	ldr	w0, [x19, #24]
  410240:	str	w0, [sp, #336]
  410244:	ldr	w0, [x19, #28]
  410248:	str	w0, [sp, #344]
  41024c:	ldr	w0, [x19, #32]
  410250:	str	w0, [sp, #348]
  410254:	ldp	x0, x1, [x19, #40]
  410258:	stp	x0, x1, [sp, #448]
  41025c:	ldp	x0, x1, [x19, #56]
  410260:	stp	x0, x1, [sp, #464]
  410264:	ldr	x0, [x19, #96]
  410268:	str	x0, [sp, #280]
  41026c:	ldr	x0, [x19, #104]
  410270:	str	x0, [sp, #288]
  410274:	ldr	x0, [x19, #112]
  410278:	str	x0, [sp, #296]
  41027c:	ldr	x0, [x19, #120]
  410280:	str	x0, [sp, #304]
  410284:	ldr	x0, [x19, #128]
  410288:	str	x0, [sp, #312]
  41028c:	ldr	x0, [x19, #144]
  410290:	str	x0, [sp, #568]
  410294:	ldr	x0, [x19, #136]
  410298:	str	x0, [sp, #560]
  41029c:	ldr	w7, [x19, #84]
  4102a0:	ldrb	w6, [x19, #80]
  4102a4:	mov	w5, w27
  4102a8:	mov	w4, w22
  4102ac:	mov	w3, w21
  4102b0:	mov	w2, #0xffffffff            	// #-1
  4102b4:	add	x1, sp, #0xe8
  4102b8:	ldr	x0, [x19, #160]
  4102bc:	bl	40fe78 <wcrtomb@plt+0xb258>
  4102c0:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4102c4:	ldr	x0, [x19]
  4102c8:	str	x0, [x21, #2008]
  4102cc:	mov	x0, x19
  4102d0:	bl	40ed74 <wcrtomb@plt+0xa154>
  4102d4:	ldr	x19, [x21, #2008]
  4102d8:	cbz	x19, 4103cc <wcrtomb@plt+0xb7ac>
  4102dc:	ldr	w21, [x19, #72]
  4102e0:	ldr	w22, [x19, #76]
  4102e4:	ldrb	w1, [x19, #88]
  4102e8:	orr	w20, w1, w20
  4102ec:	cmp	w1, w25
  4102f0:	b.hi	4103d8 <wcrtomb@plt+0xb7b8>  // b.pmore
  4102f4:	ldr	x2, [x19, #152]
  4102f8:	cmp	x2, x24
  4102fc:	b.cs	410230 <wcrtomb@plt+0xb610>  // b.hs, b.nlast
  410300:	ldrb	w0, [x23, x2]
  410304:	cbz	w0, 410230 <wcrtomb@plt+0xb610>
  410308:	cmp	w0, #0x2f
  41030c:	b.eq	410220 <wcrtomb@plt+0xb600>  // b.none
  410310:	add	x0, x23, x2
  410314:	ldurb	w0, [x0, #-1]
  410318:	cmp	w0, #0x2f
  41031c:	b.ne	410230 <wcrtomb@plt+0xb610>  // b.any
  410320:	b	410220 <wcrtomb@plt+0xb600>
  410324:	ldr	w4, [x19, #84]
  410328:	add	x3, sp, #0x68
  41032c:	ldr	x2, [x19, #160]
  410330:	ldr	w1, [x26]
  410334:	mov	w0, #0x0                   	// #0
  410338:	bl	404c00 <__fxstatat@plt>
  41033c:	cbnz	w0, 4103a4 <wcrtomb@plt+0xb784>
  410340:	ldr	x0, [x19, #8]
  410344:	ldr	x1, [sp, #104]
  410348:	cmp	x1, x0
  41034c:	b.eq	4103b0 <wcrtomb@plt+0xb790>  // b.none
  410350:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  410354:	ldr	x0, [x0, #944]
  410358:	cbz	x0, 410360 <wcrtomb@plt+0xb740>
  41035c:	blr	x0
  410360:	mov	w2, #0x5                   	// #5
  410364:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  410368:	add	x1, x1, #0xbd8
  41036c:	mov	x0, #0x0                   	// #0
  410370:	bl	4049c0 <dcgettext@plt>
  410374:	mov	x21, x0
  410378:	ldr	x0, [x19, #160]
  41037c:	bl	43efc4 <argp_parse@@Base+0xb884>
  410380:	mov	x3, x0
  410384:	mov	x2, x21
  410388:	mov	w1, #0x0                   	// #0
  41038c:	mov	w0, #0x0                   	// #0
  410390:	bl	404050 <error@plt>
  410394:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  410398:	mov	w1, #0x2                   	// #2
  41039c:	str	w1, [x0, #3392]
  4103a0:	b	4102c0 <wcrtomb@plt+0xb6a0>
  4103a4:	ldr	x0, [x19, #160]
  4103a8:	bl	42a0bc <wcrtomb@plt+0x2549c>
  4103ac:	b	4102c0 <wcrtomb@plt+0xb6a0>
  4103b0:	ldr	x0, [x19, #16]
  4103b4:	ldr	x1, [sp, #112]
  4103b8:	cmp	x1, x0
  4103bc:	b.ne	410350 <wcrtomb@plt+0xb730>  // b.any
  4103c0:	ldr	w21, [sp, #120]
  4103c4:	mov	w22, #0xffffffff            	// #-1
  4103c8:	b	41023c <wcrtomb@plt+0xb61c>
  4103cc:	ldp	x21, x22, [sp, #32]
  4103d0:	ldr	x27, [sp, #80]
  4103d4:	b	4103e0 <wcrtomb@plt+0xb7c0>
  4103d8:	ldp	x21, x22, [sp, #32]
  4103dc:	ldr	x27, [sp, #80]
  4103e0:	ldp	x19, x20, [sp, #16]
  4103e4:	ldp	x23, x24, [sp, #48]
  4103e8:	ldp	x25, x26, [sp, #64]
  4103ec:	ldp	x29, x30, [sp]
  4103f0:	add	sp, sp, #0x290
  4103f4:	ret
  4103f8:	ldp	x21, x22, [sp, #32]
  4103fc:	ldr	x27, [sp, #80]
  410400:	b	4103e0 <wcrtomb@plt+0xb7c0>
  410404:	stp	x29, x30, [sp, #-80]!
  410408:	mov	x29, sp
  41040c:	stp	x19, x20, [sp, #16]
  410410:	stp	x21, x22, [sp, #32]
  410414:	str	x23, [sp, #48]
  410418:	mov	x20, x0
  41041c:	mov	w23, w1
  410420:	strb	wzr, [sp, #79]
  410424:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  410428:	ldr	w21, [x0, #136]
  41042c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  410430:	ldr	w0, [x0, #916]
  410434:	cmp	w0, #0x0
  410438:	mov	w0, #0xffffffc0            	// #-64
  41043c:	csinv	w0, w0, wzr, gt
  410440:	and	w21, w21, w0
  410444:	and	w21, w21, #0x1ff
  410448:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x3be64>
  41044c:	add	x22, x22, #0x888
  410450:	mov	w2, w21
  410454:	mov	x1, x20
  410458:	ldr	w0, [x22]
  41045c:	bl	4049d0 <mkfifoat@plt>
  410460:	mov	w19, w0
  410464:	cbz	w0, 4104b0 <wcrtomb@plt+0xb890>
  410468:	add	x2, sp, #0x4f
  41046c:	mov	w1, #0x0                   	// #0
  410470:	mov	x0, x20
  410474:	bl	40f3e0 <wcrtomb@plt+0xa7c0>
  410478:	cbz	w0, 4104a0 <wcrtomb@plt+0xb880>
  41047c:	cmp	w0, #0x2
  410480:	b.ne	410450 <wcrtomb@plt+0xb830>  // b.any
  410484:	mov	w19, #0x0                   	// #0
  410488:	mov	w0, w19
  41048c:	ldp	x19, x20, [sp, #16]
  410490:	ldp	x21, x22, [sp, #32]
  410494:	ldr	x23, [sp, #48]
  410498:	ldp	x29, x30, [sp], #80
  41049c:	ret
  4104a0:	mov	x0, x20
  4104a4:	bl	429b5c <wcrtomb@plt+0x24f3c>
  4104a8:	mov	w19, #0xffffffff            	// #-1
  4104ac:	b	410488 <wcrtomb@plt+0xb868>
  4104b0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4104b4:	ldr	w3, [x0, #2024]
  4104b8:	mov	w7, #0x100                 	// #256
  4104bc:	mov	w6, #0x0                   	// #0
  4104c0:	mov	w5, w23
  4104c4:	mov	w4, #0x1ff                 	// #511
  4104c8:	bic	w3, w21, w3
  4104cc:	mov	w2, #0xffffffff            	// #-1
  4104d0:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  4104d4:	add	x1, x1, #0x20
  4104d8:	mov	x0, x20
  4104dc:	bl	40fe78 <wcrtomb@plt+0xb258>
  4104e0:	b	410488 <wcrtomb@plt+0xb868>
  4104e4:	stp	x29, x30, [sp, #-80]!
  4104e8:	mov	x29, sp
  4104ec:	stp	x19, x20, [sp, #16]
  4104f0:	stp	x21, x22, [sp, #32]
  4104f4:	stp	x23, x24, [sp, #48]
  4104f8:	mov	x20, x0
  4104fc:	mov	w23, w1
  410500:	strb	wzr, [sp, #79]
  410504:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  410508:	ldr	w21, [x0, #136]
  41050c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  410510:	ldr	w0, [x0, #916]
  410514:	cmp	w0, #0x0
  410518:	mov	w0, #0xffffffc0            	// #-64
  41051c:	csinv	w0, w0, wzr, gt
  410520:	and	w21, w21, w0
  410524:	mov	w0, #0x61ff                	// #25087
  410528:	and	w21, w21, w0
  41052c:	adrp	x24, 47d000 <_obstack_memory_used@@Base+0x3be64>
  410530:	add	x24, x24, #0x888
  410534:	adrp	x22, 481000 <argp_program_version_hook@@Base+0x298>
  410538:	add	x22, x22, #0x20
  41053c:	ldr	x0, [x22, #120]
  410540:	str	x0, [sp, #64]
  410544:	add	x4, sp, #0x40
  410548:	mov	w3, w21
  41054c:	mov	x2, x20
  410550:	ldr	w1, [x24]
  410554:	mov	w0, #0x0                   	// #0
  410558:	bl	404490 <__xmknodat@plt>
  41055c:	mov	w19, w0
  410560:	cbz	w0, 4105ac <wcrtomb@plt+0xb98c>
  410564:	add	x2, sp, #0x4f
  410568:	mov	w1, #0x0                   	// #0
  41056c:	mov	x0, x20
  410570:	bl	40f3e0 <wcrtomb@plt+0xa7c0>
  410574:	cbz	w0, 41059c <wcrtomb@plt+0xb97c>
  410578:	cmp	w0, #0x2
  41057c:	b.ne	41053c <wcrtomb@plt+0xb91c>  // b.any
  410580:	mov	w19, #0x0                   	// #0
  410584:	mov	w0, w19
  410588:	ldp	x19, x20, [sp, #16]
  41058c:	ldp	x21, x22, [sp, #32]
  410590:	ldp	x23, x24, [sp, #48]
  410594:	ldp	x29, x30, [sp], #80
  410598:	ret
  41059c:	mov	x0, x20
  4105a0:	bl	429b7c <wcrtomb@plt+0x24f5c>
  4105a4:	mov	w19, #0xffffffff            	// #-1
  4105a8:	b	410584 <wcrtomb@plt+0xb964>
  4105ac:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4105b0:	ldr	w3, [x0, #2024]
  4105b4:	mov	w7, #0x100                 	// #256
  4105b8:	mov	w6, #0x0                   	// #0
  4105bc:	mov	w5, w23
  4105c0:	mov	w4, #0x1ff                 	// #511
  4105c4:	bic	w3, w21, w3
  4105c8:	mov	w2, #0xffffffff            	// #-1
  4105cc:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  4105d0:	add	x1, x1, #0x20
  4105d4:	mov	x0, x20
  4105d8:	bl	40fe78 <wcrtomb@plt+0xb258>
  4105dc:	b	410584 <wcrtomb@plt+0xb964>
  4105e0:	stp	x29, x30, [sp, #-64]!
  4105e4:	mov	x29, sp
  4105e8:	stp	x19, x20, [sp, #16]
  4105ec:	mov	x20, x0
  4105f0:	strb	wzr, [sp, #63]
  4105f4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4105f8:	ldrb	w0, [x0, #888]
  4105fc:	cbnz	w0, 410620 <wcrtomb@plt+0xba00>
  410600:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  410604:	ldr	x0, [x0, #56]
  410608:	ldrb	w1, [x0]
  41060c:	cmp	w1, #0x2f
  410610:	b.eq	410680 <wcrtomb@plt+0xba60>  // b.none
  410614:	bl	41e644 <wcrtomb@plt+0x19a24>
  410618:	and	w0, w0, #0xff
  41061c:	cbnz	w0, 410680 <wcrtomb@plt+0xba60>
  410620:	stp	x21, x22, [sp, #32]
  410624:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x3be64>
  410628:	add	x22, x22, #0x888
  41062c:	adrp	x21, 481000 <argp_program_version_hook@@Base+0x298>
  410630:	add	x21, x21, #0x20
  410634:	mov	x2, x20
  410638:	ldr	w1, [x22]
  41063c:	ldr	x0, [x21, #24]
  410640:	bl	404a40 <symlinkat@plt>
  410644:	mov	w19, w0
  410648:	cbz	w0, 4106b4 <wcrtomb@plt+0xba94>
  41064c:	add	x2, sp, #0x3f
  410650:	mov	w1, #0x0                   	// #0
  410654:	mov	x0, x20
  410658:	bl	40f3e0 <wcrtomb@plt+0xa7c0>
  41065c:	cbz	w0, 410698 <wcrtomb@plt+0xba78>
  410660:	cmp	w0, #0x2
  410664:	b.ne	410634 <wcrtomb@plt+0xba14>  // b.any
  410668:	mov	w19, #0x0                   	// #0
  41066c:	ldp	x21, x22, [sp, #32]
  410670:	mov	w0, w19
  410674:	ldp	x19, x20, [sp, #16]
  410678:	ldp	x29, x30, [sp], #64
  41067c:	ret
  410680:	add	x2, sp, #0x3f
  410684:	mov	w1, #0x1                   	// #1
  410688:	mov	x0, x20
  41068c:	bl	40f5b4 <wcrtomb@plt+0xa994>
  410690:	mov	w19, w0
  410694:	b	410670 <wcrtomb@plt+0xba50>
  410698:	mov	x1, x20
  41069c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4106a0:	ldr	x0, [x0, #56]
  4106a4:	bl	42a010 <wcrtomb@plt+0x253f0>
  4106a8:	mov	w19, #0xffffffff            	// #-1
  4106ac:	ldp	x21, x22, [sp, #32]
  4106b0:	b	410670 <wcrtomb@plt+0xba50>
  4106b4:	mov	w7, #0x100                 	// #256
  4106b8:	mov	w6, #0x0                   	// #0
  4106bc:	mov	w5, #0x32                  	// #50
  4106c0:	mov	w4, #0x0                   	// #0
  4106c4:	mov	w3, #0x0                   	// #0
  4106c8:	mov	w2, #0xffffffff            	// #-1
  4106cc:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  4106d0:	add	x1, x1, #0x20
  4106d4:	mov	x0, x20
  4106d8:	bl	40fe78 <wcrtomb@plt+0xb258>
  4106dc:	ldp	x21, x22, [sp, #32]
  4106e0:	b	410670 <wcrtomb@plt+0xba50>
  4106e4:	stp	x29, x30, [sp, #-272]!
  4106e8:	mov	x29, sp
  4106ec:	stp	x19, x20, [sp, #16]
  4106f0:	stp	x21, x22, [sp, #32]
  4106f4:	stp	x25, x26, [sp, #64]
  4106f8:	stp	x27, x28, [sp, #80]
  4106fc:	mov	x20, x0
  410700:	mov	w22, w1
  410704:	strb	wzr, [sp, #263]
  410708:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41070c:	ldr	w0, [x0, #136]
  410710:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  410714:	ldr	w2, [x1, #916]
  410718:	and	w1, w0, #0x1ff
  41071c:	and	w21, w0, #0x1c0
  410720:	cmp	w2, #0x0
  410724:	csel	w21, w21, w1, gt
  410728:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  41072c:	ldrb	w1, [x1, #561]
  410730:	cbnz	w1, 410a50 <wcrtomb@plt+0xbe30>
  410734:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  410738:	ldr	x1, [x1, #552]
  41073c:	cbz	x1, 410770 <wcrtomb@plt+0xbb50>
  410740:	adrp	x2, 481000 <argp_program_version_hook@@Base+0x298>
  410744:	add	x2, x2, #0x20
  410748:	mov	w1, #0x66                  	// #102
  41074c:	mov	x0, x20
  410750:	bl	421968 <wcrtomb@plt+0x1cd48>
  410754:	mov	w19, w0
  410758:	mov	w25, #0x0                   	// #0
  41075c:	mov	w28, #0x0                   	// #0
  410760:	tbz	w0, #31, 4109ac <wcrtomb@plt+0xbd8c>
  410764:	bl	419828 <wcrtomb@plt+0x14c08>
  410768:	mov	w21, #0x0                   	// #0
  41076c:	b	410ab8 <wcrtomb@plt+0xbe98>
  410770:	stp	x23, x24, [sp, #48]
  410774:	strb	wzr, [sp, #127]
  410778:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  41077c:	ldr	w1, [x1, #592]
  410780:	cmp	w1, #0x0
  410784:	b.le	410b84 <wcrtomb@plt+0xbf64>
  410788:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  41078c:	ldr	x1, [x1, #360]
  410790:	cbz	x1, 410bac <wcrtomb@plt+0xbf8c>
  410794:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  410798:	ldr	w19, [x1, #2024]
  41079c:	bic	w0, w0, w19
  4107a0:	and	w19, w0, #0x1ff
  4107a4:	adrp	x23, 47d000 <_obstack_memory_used@@Base+0x3be64>
  4107a8:	add	x23, x23, #0x888
  4107ac:	str	xzr, [sp, #128]
  4107b0:	add	x4, sp, #0x80
  4107b4:	mov	w3, w19
  4107b8:	mov	x2, x20
  4107bc:	ldr	w1, [x23]
  4107c0:	mov	w0, #0x0                   	// #0
  4107c4:	bl	404490 <__xmknodat@plt>
  4107c8:	cbz	w0, 4107f0 <wcrtomb@plt+0xbbd0>
  4107cc:	add	x2, sp, #0x7f
  4107d0:	mov	w1, #0x0                   	// #0
  4107d4:	mov	x0, x20
  4107d8:	bl	40f3e0 <wcrtomb@plt+0xa7c0>
  4107dc:	cbz	w0, 410810 <wcrtomb@plt+0xbbf0>
  4107e0:	cmp	w0, #0x2
  4107e4:	b.ne	4107ac <wcrtomb@plt+0xbb8c>  // b.any
  4107e8:	mov	w24, #0x0                   	// #0
  4107ec:	b	410b88 <wcrtomb@plt+0xbf68>
  4107f0:	mov	w3, #0x0                   	// #0
  4107f4:	mov	w2, w22
  4107f8:	mov	x1, x20
  4107fc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  410800:	add	x0, x0, #0x20
  410804:	bl	429264 <wcrtomb@plt+0x24644>
  410808:	mov	w24, #0x1                   	// #1
  41080c:	b	410b88 <wcrtomb@plt+0xbf68>
  410810:	bl	419828 <wcrtomb@plt+0x14c08>
  410814:	mov	x0, x20
  410818:	bl	429b9c <wcrtomb@plt+0x24f7c>
  41081c:	mov	w21, #0x1                   	// #1
  410820:	ldp	x23, x24, [sp, #48]
  410824:	b	410ab8 <wcrtomb@plt+0xbe98>
  410828:	bl	419828 <wcrtomb@plt+0x14c08>
  41082c:	mov	w21, #0x0                   	// #0
  410830:	cmp	w19, #0x2
  410834:	b.ne	410840 <wcrtomb@plt+0xbc20>  // b.any
  410838:	ldp	x23, x24, [sp, #48]
  41083c:	b	410ab8 <wcrtomb@plt+0xbe98>
  410840:	mov	x0, x20
  410844:	bl	429b9c <wcrtomb@plt+0x24f7c>
  410848:	mov	w21, #0x1                   	// #1
  41084c:	ldp	x23, x24, [sp, #48]
  410850:	b	410ab8 <wcrtomb@plt+0xbe98>
  410854:	ldrb	w0, [x26]
  410858:	cmp	w0, #0x0
  41085c:	mov	w19, #0x8b41                	// #35649
  410860:	movk	w19, #0x8, lsl #16
  410864:	csel	w19, w27, w19, ne  // ne = any
  410868:	b	41095c <wcrtomb@plt+0xbd3c>
  41086c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  410870:	ldr	w0, [x0, #2040]
  410874:	cbnz	w0, 410970 <wcrtomb@plt+0xbd50>
  410878:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41087c:	mov	w1, #0x1                   	// #1
  410880:	str	w1, [x0, #2040]
  410884:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  410888:	ldr	w0, [x0, #408]
  41088c:	tbz	w0, #3, 410970 <wcrtomb@plt+0xbd50>
  410890:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  410894:	ldr	x0, [x0, #944]
  410898:	cbz	x0, 4108a0 <wcrtomb@plt+0xbc80>
  41089c:	blr	x0
  4108a0:	mov	w2, #0x5                   	// #5
  4108a4:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  4108a8:	add	x1, x1, #0xc18
  4108ac:	mov	x0, #0x0                   	// #0
  4108b0:	bl	4049c0 <dcgettext@plt>
  4108b4:	mov	x2, x0
  4108b8:	mov	w1, #0x0                   	// #0
  4108bc:	mov	w0, #0x0                   	// #0
  4108c0:	bl	404050 <error@plt>
  4108c4:	b	410970 <wcrtomb@plt+0xbd50>
  4108c8:	add	x2, sp, #0x80
  4108cc:	mov	w1, w0
  4108d0:	mov	w0, #0x0                   	// #0
  4108d4:	bl	4049a0 <__fxstat@plt>
  4108d8:	cbnz	w0, 4108f8 <wcrtomb@plt+0xbcd8>
  4108dc:	ldr	w28, [sp, #144]
  4108e0:	and	w0, w28, #0xf000
  4108e4:	cmp	w0, #0x8, lsl #12
  4108e8:	b.ne	41091c <wcrtomb@plt+0xbcfc>  // b.any
  4108ec:	mov	w25, #0xffffffff            	// #-1
  4108f0:	ldp	x23, x24, [sp, #48]
  4108f4:	b	4109ac <wcrtomb@plt+0xbd8c>
  4108f8:	bl	404ad0 <__errno_location@plt>
  4108fc:	mov	x28, x0
  410900:	ldr	w0, [x0]
  410904:	str	w0, [sp, #108]
  410908:	mov	w0, w19
  41090c:	bl	4045d0 <close@plt>
  410910:	ldr	w0, [sp, #108]
  410914:	str	w0, [x28]
  410918:	b	410930 <wcrtomb@plt+0xbd10>
  41091c:	mov	w0, w19
  410920:	bl	4045d0 <close@plt>
  410924:	bl	404ad0 <__errno_location@plt>
  410928:	mov	w1, #0x11                  	// #17
  41092c:	str	w1, [x0]
  410930:	add	x2, sp, #0x107
  410934:	mov	w1, #0x1                   	// #1
  410938:	mov	x0, x20
  41093c:	bl	40f3e0 <wcrtomb@plt+0xa7c0>
  410940:	mov	w19, w0
  410944:	cmp	w0, #0x1
  410948:	b.ne	410828 <wcrtomb@plt+0xbc08>  // b.any
  41094c:	ldr	w28, [x23]
  410950:	mov	w19, w25
  410954:	cmp	w28, #0x2
  410958:	b.eq	410854 <wcrtomb@plt+0xbc34>  // b.none
  41095c:	and	w0, w19, #0xffffff7f
  410960:	cmp	w24, #0x0
  410964:	csel	w19, w0, w19, ne  // ne = any
  410968:	cmp	w22, #0x37
  41096c:	b.eq	41086c <wcrtomb@plt+0xbc4c>  // b.none
  410970:	mov	w3, w21
  410974:	mov	w2, w19
  410978:	mov	x1, x20
  41097c:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  410980:	ldr	w0, [x0, #2184]
  410984:	bl	404ab0 <openat@plt>
  410988:	mov	w19, w0
  41098c:	tbnz	w0, #31, 410930 <wcrtomb@plt+0xbd10>
  410990:	cmp	w28, #0x2
  410994:	b.eq	4108c8 <wcrtomb@plt+0xbca8>  // b.none
  410998:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41099c:	ldr	w28, [x0, #2024]
  4109a0:	bic	w28, w21, w28
  4109a4:	mov	w25, #0x1ff                 	// #511
  4109a8:	ldp	x23, x24, [sp, #48]
  4109ac:	adrp	x21, 481000 <argp_program_version_hook@@Base+0x298>
  4109b0:	add	x21, x21, #0x20
  4109b4:	mov	x0, x21
  4109b8:	bl	4053e8 <wcrtomb@plt+0x7c8>
  4109bc:	ldrb	w0, [x21, #272]
  4109c0:	cbnz	w0, 410a60 <wcrtomb@plt+0xbe40>
  4109c4:	stp	x23, x24, [sp, #48]
  4109c8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4109cc:	ldr	x0, [x0, #168]
  4109d0:	str	x0, [sp, #264]
  4109d4:	ldr	x0, [sp, #264]
  4109d8:	cmp	x0, #0x0
  4109dc:	b.le	410b34 <wcrtomb@plt+0xbf14>
  4109e0:	bl	405430 <wcrtomb@plt+0x810>
  4109e4:	bl	406d94 <wcrtomb@plt+0x2174>
  4109e8:	mov	x23, x0
  4109ec:	cbz	x0, 410ad4 <wcrtomb@plt+0xbeb4>
  4109f0:	bl	405974 <wcrtomb@plt+0xd54>
  4109f4:	ldr	x21, [sp, #264]
  4109f8:	cmp	x21, x0
  4109fc:	csel	x21, x21, x0, ls  // ls = plast
  410a00:	bl	404ad0 <__errno_location@plt>
  410a04:	str	wzr, [x0]
  410a08:	mov	x2, x21
  410a0c:	mov	x1, x23
  410a10:	mov	w0, w19
  410a14:	bl	41b574 <wcrtomb@plt+0x16954>
  410a18:	mov	x24, x0
  410a1c:	ldr	x0, [sp, #264]
  410a20:	sub	x0, x0, x21
  410a24:	str	x0, [sp, #264]
  410a28:	sub	x0, x21, #0x1
  410a2c:	add	x0, x23, x0
  410a30:	bl	405884 <wcrtomb@plt+0xc64>
  410a34:	cmp	x21, x24
  410a38:	b.eq	4109d4 <wcrtomb@plt+0xbdb4>  // b.none
  410a3c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  410a40:	ldr	x0, [x0, #552]
  410a44:	cbz	x0, 410b1c <wcrtomb@plt+0xbefc>
  410a48:	ldp	x23, x24, [sp, #48]
  410a4c:	b	410a70 <wcrtomb@plt+0xbe50>
  410a50:	mov	w25, #0x0                   	// #0
  410a54:	mov	w28, #0x0                   	// #0
  410a58:	mov	w19, #0x1                   	// #1
  410a5c:	b	4109ac <wcrtomb@plt+0xbd8c>
  410a60:	add	x2, sp, #0x108
  410a64:	mov	x1, x21
  410a68:	mov	w0, w19
  410a6c:	bl	420638 <wcrtomb@plt+0x1ba18>
  410a70:	ldr	x0, [sp, #264]
  410a74:	bl	419768 <wcrtomb@plt+0x14b48>
  410a78:	bl	405408 <wcrtomb@plt+0x7e8>
  410a7c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  410a80:	ldrb	w0, [x0, #561]
  410a84:	mov	w21, #0x0                   	// #0
  410a88:	cbnz	w0, 410ab8 <wcrtomb@plt+0xbe98>
  410a8c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  410a90:	ldr	x0, [x0, #552]
  410a94:	cbz	x0, 410b3c <wcrtomb@plt+0xbf1c>
  410a98:	mov	w0, w19
  410a9c:	bl	4045d0 <close@plt>
  410aa0:	mov	w21, w0
  410aa4:	tbnz	w0, #31, 410b78 <wcrtomb@plt+0xbf58>
  410aa8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  410aac:	ldr	x0, [x0, #552]
  410ab0:	cbz	x0, 410ab8 <wcrtomb@plt+0xbe98>
  410ab4:	bl	421c38 <wcrtomb@plt+0x1d018>
  410ab8:	mov	w0, w21
  410abc:	ldp	x19, x20, [sp, #16]
  410ac0:	ldp	x21, x22, [sp, #32]
  410ac4:	ldp	x25, x26, [sp, #64]
  410ac8:	ldp	x27, x28, [sp, #80]
  410acc:	ldp	x29, x30, [sp], #272
  410ad0:	ret
  410ad4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  410ad8:	ldr	x0, [x0, #944]
  410adc:	cbz	x0, 410ae4 <wcrtomb@plt+0xbec4>
  410ae0:	blr	x0
  410ae4:	mov	w2, #0x5                   	// #5
  410ae8:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  410aec:	add	x1, x1, #0x380
  410af0:	mov	x0, #0x0                   	// #0
  410af4:	bl	4049c0 <dcgettext@plt>
  410af8:	mov	x2, x0
  410afc:	mov	w1, #0x0                   	// #0
  410b00:	mov	w0, #0x0                   	// #0
  410b04:	bl	404050 <error@plt>
  410b08:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  410b0c:	mov	w1, #0x2                   	// #2
  410b10:	str	w1, [x0, #3392]
  410b14:	ldp	x23, x24, [sp, #48]
  410b18:	b	410a70 <wcrtomb@plt+0xbe50>
  410b1c:	mov	x2, x21
  410b20:	mov	x1, x24
  410b24:	mov	x0, x20
  410b28:	bl	42a1bc <wcrtomb@plt+0x2559c>
  410b2c:	ldp	x23, x24, [sp, #48]
  410b30:	b	410a70 <wcrtomb@plt+0xbe50>
  410b34:	ldp	x23, x24, [sp, #48]
  410b38:	b	410a70 <wcrtomb@plt+0xbe50>
  410b3c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  410b40:	ldr	w0, [x0, #688]
  410b44:	cmp	w0, #0x2
  410b48:	cset	w7, ne  // ne = any
  410b4c:	lsl	w7, w7, #8
  410b50:	mov	w6, #0x0                   	// #0
  410b54:	mov	w5, w22
  410b58:	mov	w4, w25
  410b5c:	mov	w3, w28
  410b60:	mov	w2, w19
  410b64:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  410b68:	add	x1, x1, #0x20
  410b6c:	mov	x0, x20
  410b70:	bl	40fe78 <wcrtomb@plt+0xb258>
  410b74:	b	410a98 <wcrtomb@plt+0xbe78>
  410b78:	mov	x0, x20
  410b7c:	bl	429a50 <wcrtomb@plt+0x24e30>
  410b80:	b	410aa8 <wcrtomb@plt+0xbe88>
  410b84:	mov	w24, #0x0                   	// #0
  410b88:	adrp	x23, 481000 <argp_program_version_hook@@Base+0x298>
  410b8c:	add	x23, x23, #0x2b0
  410b90:	mov	w25, #0x9c1                 	// #2497
  410b94:	movk	w25, #0x8, lsl #16
  410b98:	adrp	x26, 481000 <argp_program_version_hook@@Base+0x298>
  410b9c:	add	x26, x26, #0x200
  410ba0:	mov	w27, #0xb41                 	// #2881
  410ba4:	movk	w27, #0x8, lsl #16
  410ba8:	b	41094c <wcrtomb@plt+0xbd2c>
  410bac:	mov	w24, #0x0                   	// #0
  410bb0:	b	410b88 <wcrtomb@plt+0xbf68>
  410bb4:	sub	sp, sp, #0x280
  410bb8:	stp	x29, x30, [sp]
  410bbc:	mov	x29, sp
  410bc0:	stp	x21, x22, [sp, #32]
  410bc4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  410bc8:	ldr	x21, [x0, #2032]
  410bcc:	cbz	x21, 410dd4 <wcrtomb@plt+0xc1b4>
  410bd0:	stp	x19, x20, [sp, #16]
  410bd4:	stp	x23, x24, [sp, #48]
  410bd8:	str	x25, [sp, #64]
  410bdc:	adrp	x23, 47d000 <_obstack_memory_used@@Base+0x3be64>
  410be0:	add	x23, x23, #0x888
  410be4:	b	410da8 <wcrtomb@plt+0xc188>
  410be8:	mov	x0, x20
  410bec:	bl	42a13c <wcrtomb@plt+0x2551c>
  410bf0:	ldr	x19, [x19]
  410bf4:	cbz	x19, 410d68 <wcrtomb@plt+0xc148>
  410bf8:	add	x20, x19, #0x8
  410bfc:	mov	w4, w22
  410c00:	add	x3, sp, #0x58
  410c04:	mov	x2, x20
  410c08:	ldr	w1, [x23]
  410c0c:	mov	w0, #0x0                   	// #0
  410c10:	bl	404c00 <__fxstatat@plt>
  410c14:	cbnz	w0, 410bf0 <wcrtomb@plt+0xbfd0>
  410c18:	ldr	x0, [x21, #8]
  410c1c:	ldr	x1, [sp, #88]
  410c20:	cmp	x1, x0
  410c24:	b.ne	410bf0 <wcrtomb@plt+0xbfd0>  // b.any
  410c28:	ldr	x0, [x21, #16]
  410c2c:	ldr	x1, [sp, #96]
  410c30:	cmp	x1, x0
  410c34:	b.ne	410bf0 <wcrtomb@plt+0xbfd0>  // b.any
  410c38:	ldr	x0, [x21, #24]
  410c3c:	cmn	x0, #0x1
  410c40:	b.ne	410bf0 <wcrtomb@plt+0xbfd0>  // b.any
  410c44:	ldr	x0, [x21, #32]
  410c48:	cmn	w0, #0x1
  410c4c:	b.ne	410bf0 <wcrtomb@plt+0xbfd0>  // b.any
  410c50:	mov	w2, #0x0                   	// #0
  410c54:	mov	x1, x20
  410c58:	ldr	w0, [x23]
  410c5c:	bl	404160 <unlinkat@plt>
  410c60:	cbnz	w0, 410be8 <wcrtomb@plt+0xbfc8>
  410c64:	cbz	x24, 410c84 <wcrtomb@plt+0xc064>
  410c68:	ldr	w0, [x23]
  410c6c:	mov	w4, #0x0                   	// #0
  410c70:	mov	x3, x20
  410c74:	mov	w2, w0
  410c78:	mov	x1, x24
  410c7c:	bl	4040e0 <linkat@plt>
  410c80:	cbz	w0, 410bf0 <wcrtomb@plt+0xbfd0>
  410c84:	ldrb	w0, [x21, #40]
  410c88:	cbnz	w0, 410cb8 <wcrtomb@plt+0xc098>
  410c8c:	ldr	w0, [x23]
  410c90:	mov	w4, #0x0                   	// #0
  410c94:	mov	x3, x20
  410c98:	mov	w2, w0
  410c9c:	mov	x1, x25
  410ca0:	bl	4040e0 <linkat@plt>
  410ca4:	cbz	w0, 410bf0 <wcrtomb@plt+0xbfd0>
  410ca8:	mov	x1, x20
  410cac:	mov	x0, x25
  410cb0:	bl	429aa8 <wcrtomb@plt+0x24e88>
  410cb4:	b	410bf0 <wcrtomb@plt+0xbfd0>
  410cb8:	mov	x2, x20
  410cbc:	ldr	w1, [x23]
  410cc0:	mov	x0, x25
  410cc4:	bl	404a40 <symlinkat@plt>
  410cc8:	cbz	w0, 410cdc <wcrtomb@plt+0xc0bc>
  410ccc:	mov	x1, x20
  410cd0:	mov	x0, x25
  410cd4:	bl	42a010 <wcrtomb@plt+0x253f0>
  410cd8:	b	410bf0 <wcrtomb@plt+0xbfd0>
  410cdc:	ldr	w0, [x21, #44]
  410ce0:	str	w0, [sp, #320]
  410ce4:	ldr	w0, [x21, #48]
  410ce8:	str	w0, [sp, #328]
  410cec:	ldr	w0, [x21, #52]
  410cf0:	str	w0, [sp, #332]
  410cf4:	ldp	x0, x1, [x21, #56]
  410cf8:	stp	x0, x1, [sp, #432]
  410cfc:	ldp	x0, x1, [x21, #72]
  410d00:	stp	x0, x1, [sp, #448]
  410d04:	ldr	x0, [x21, #104]
  410d08:	str	x0, [sp, #264]
  410d0c:	ldr	x0, [x21, #112]
  410d10:	str	x0, [sp, #272]
  410d14:	ldr	x0, [x21, #120]
  410d18:	str	x0, [sp, #280]
  410d1c:	ldr	x0, [x21, #128]
  410d20:	str	x0, [sp, #288]
  410d24:	ldr	x0, [x21, #136]
  410d28:	str	x0, [sp, #296]
  410d2c:	ldr	x0, [x21, #152]
  410d30:	str	x0, [sp, #552]
  410d34:	ldr	x0, [x21, #144]
  410d38:	str	x0, [sp, #544]
  410d3c:	mov	w7, w22
  410d40:	mov	w6, #0x0                   	// #0
  410d44:	mov	w5, #0x32                  	// #50
  410d48:	mov	w4, #0x0                   	// #0
  410d4c:	mov	w3, #0x0                   	// #0
  410d50:	mov	w2, #0xffffffff            	// #-1
  410d54:	add	x1, sp, #0xd8
  410d58:	mov	x0, x20
  410d5c:	bl	40fe78 <wcrtomb@plt+0xb258>
  410d60:	mov	x24, x20
  410d64:	b	410bf0 <wcrtomb@plt+0xbfd0>
  410d68:	ldr	x19, [x21, #96]
  410d6c:	cbz	x19, 410d80 <wcrtomb@plt+0xc160>
  410d70:	mov	x0, x19
  410d74:	ldr	x19, [x19]
  410d78:	bl	4047c0 <free@plt>
  410d7c:	cbnz	x19, 410d70 <wcrtomb@plt+0xc150>
  410d80:	ldr	x1, [x21, #144]
  410d84:	ldr	x0, [x21, #152]
  410d88:	bl	41392c <wcrtomb@plt+0xed0c>
  410d8c:	ldr	x0, [x21, #104]
  410d90:	bl	4047c0 <free@plt>
  410d94:	ldr	x19, [x21]
  410d98:	mov	x0, x21
  410d9c:	bl	4047c0 <free@plt>
  410da0:	cbz	x19, 410dc8 <wcrtomb@plt+0xc1a8>
  410da4:	mov	x21, x19
  410da8:	ldr	w0, [x21, #88]
  410dac:	bl	41b6a8 <wcrtomb@plt+0x16a88>
  410db0:	ldr	x19, [x21, #96]
  410db4:	cbz	x19, 410d80 <wcrtomb@plt+0xc160>
  410db8:	mov	x24, #0x0                   	// #0
  410dbc:	mov	w22, #0x100                 	// #256
  410dc0:	add	x25, x21, #0xa0
  410dc4:	b	410bf8 <wcrtomb@plt+0xbfd8>
  410dc8:	ldp	x19, x20, [sp, #16]
  410dcc:	ldp	x23, x24, [sp, #48]
  410dd0:	ldr	x25, [sp, #64]
  410dd4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  410dd8:	str	xzr, [x0, #2032]
  410ddc:	ldp	x21, x22, [sp, #32]
  410de0:	ldp	x29, x30, [sp]
  410de4:	add	sp, sp, #0x280
  410de8:	ret
  410dec:	stp	x29, x30, [sp, #-32]!
  410df0:	mov	x29, sp
  410df4:	str	x19, [sp, #16]
  410df8:	adrp	x19, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  410dfc:	add	x19, x19, #0x7f8
  410e00:	mov	w1, #0x0                   	// #0
  410e04:	mov	x0, x19
  410e08:	bl	4101d0 <wcrtomb@plt+0xb5b0>
  410e0c:	bl	410bb4 <wcrtomb@plt+0xbf94>
  410e10:	mov	w1, #0x1                   	// #1
  410e14:	mov	x0, x19
  410e18:	bl	4101d0 <wcrtomb@plt+0xb5b0>
  410e1c:	ldr	x19, [sp, #16]
  410e20:	ldp	x29, x30, [sp], #32
  410e24:	ret
  410e28:	stp	x29, x30, [sp, #-48]!
  410e2c:	mov	x29, sp
  410e30:	stp	x19, x20, [sp, #16]
  410e34:	str	x21, [sp, #32]
  410e38:	bl	4040d0 <geteuid@plt>
  410e3c:	cmp	w0, #0x0
  410e40:	cset	w1, eq  // eq = none
  410e44:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x3ee64>
  410e48:	add	x19, x19, #0x7d8
  410e4c:	strb	w1, [x19, #12]
  410e50:	adrp	x21, 481000 <argp_program_version_hook@@Base+0x298>
  410e54:	ldr	w0, [x21, #548]
  410e58:	add	w0, w0, w1
  410e5c:	str	w0, [x21, #548]
  410e60:	adrp	x2, 481000 <argp_program_version_hook@@Base+0x298>
  410e64:	ldr	w0, [x2, #916]
  410e68:	add	w0, w0, w1
  410e6c:	str	w0, [x2, #916]
  410e70:	mov	w0, #0x0                   	// #0
  410e74:	bl	404a80 <umask@plt>
  410e78:	mov	w20, w0
  410e7c:	str	w0, [x19, #8]
  410e80:	ldr	w0, [x21, #548]
  410e84:	cmp	w0, #0x0
  410e88:	b.le	410ea4 <wcrtomb@plt+0xc284>
  410e8c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  410e90:	str	wzr, [x0, #2024]
  410e94:	ldp	x19, x20, [sp, #16]
  410e98:	ldr	x21, [sp, #32]
  410e9c:	ldp	x29, x30, [sp], #48
  410ea0:	ret
  410ea4:	mov	w0, w20
  410ea8:	bl	404a80 <umask@plt>
  410eac:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  410eb0:	str	w20, [x0, #2024]
  410eb4:	b	410e94 <wcrtomb@plt+0xc274>
  410eb8:	stp	x29, x30, [sp, #-64]!
  410ebc:	mov	x29, sp
  410ec0:	stp	x19, x20, [sp, #16]
  410ec4:	str	x23, [sp, #48]
  410ec8:	mov	x23, x0
  410ecc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  410ed0:	ldr	x19, [x0, #2008]
  410ed4:	cbz	x19, 410f44 <wcrtomb@plt+0xc324>
  410ed8:	stp	x21, x22, [sp, #32]
  410edc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  410ee0:	ldr	w22, [x0, #4032]
  410ee4:	mov	x21, #0x0                   	// #0
  410ee8:	b	410f08 <wcrtomb@plt+0xc2e8>
  410eec:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  410ef0:	str	x20, [x0, #2008]
  410ef4:	ldp	x21, x22, [sp, #32]
  410ef8:	b	410f44 <wcrtomb@plt+0xc324>
  410efc:	mov	x21, x19
  410f00:	cbz	x20, 410f40 <wcrtomb@plt+0xc320>
  410f04:	mov	x19, x20
  410f08:	ldr	x20, [x19]
  410f0c:	ldr	w1, [x19, #92]
  410f10:	cmp	w1, w22
  410f14:	b.ne	410efc <wcrtomb@plt+0xc2dc>  // b.any
  410f18:	mov	x1, x23
  410f1c:	ldr	x0, [x19, #160]
  410f20:	bl	404720 <strcmp@plt>
  410f24:	cbnz	w0, 410efc <wcrtomb@plt+0xc2dc>
  410f28:	mov	x0, x19
  410f2c:	bl	40ed74 <wcrtomb@plt+0xa154>
  410f30:	cbz	x21, 410eec <wcrtomb@plt+0xc2cc>
  410f34:	str	x20, [x21]
  410f38:	ldp	x21, x22, [sp, #32]
  410f3c:	b	410f44 <wcrtomb@plt+0xc324>
  410f40:	ldp	x21, x22, [sp, #32]
  410f44:	ldp	x19, x20, [sp, #16]
  410f48:	ldr	x23, [sp, #48]
  410f4c:	ldp	x29, x30, [sp], #64
  410f50:	ret
  410f54:	stp	x29, x30, [sp, #-48]!
  410f58:	mov	x29, sp
  410f5c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  410f60:	adrp	x0, 410000 <wcrtomb@plt+0xb3e0>
  410f64:	add	x0, x0, #0xdec
  410f68:	str	x0, [x1, #3976]
  410f6c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  410f70:	ldr	x0, [x0, #4008]
  410f74:	bl	405884 <wcrtomb@plt+0xc64>
  410f78:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  410f7c:	ldrb	w0, [x0, #888]
  410f80:	cbz	w0, 411078 <wcrtomb@plt+0xc458>
  410f84:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  410f88:	ldr	x1, [x0, #40]
  410f8c:	ldrb	w0, [x1]
  410f90:	cbz	w0, 4110e8 <wcrtomb@plt+0xc4c8>
  410f94:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  410f98:	ldrb	w0, [x0, #528]
  410f9c:	cbnz	w0, 4110f4 <wcrtomb@plt+0xc4d4>
  410fa0:	stp	x19, x20, [sp, #16]
  410fa4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  410fa8:	ldr	w0, [x0, #580]
  410fac:	cbnz	w0, 411108 <wcrtomb@plt+0xc4e8>
  410fb0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  410fb4:	ldrb	w0, [x0, #904]
  410fb8:	cbz	w0, 411124 <wcrtomb@plt+0xc504>
  410fbc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  410fc0:	ldrb	w0, [x0, #693]
  410fc4:	cbz	w0, 410fe0 <wcrtomb@plt+0xc3c0>
  410fc8:	mov	w1, #0x0                   	// #0
  410fcc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  410fd0:	ldr	x0, [x0, #40]
  410fd4:	bl	41b29c <wcrtomb@plt+0x1667c>
  410fd8:	and	w0, w0, #0xff
  410fdc:	cbz	w0, 411148 <wcrtomb@plt+0xc528>
  410fe0:	stp	x21, x22, [sp, #32]
  410fe4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  410fe8:	add	x0, x0, #0x20
  410fec:	bl	42059c <wcrtomb@plt+0x1b97c>
  410ff0:	and	w0, w0, #0xff
  410ff4:	cbnz	w0, 4114e4 <wcrtomb@plt+0xc8c4>
  410ff8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  410ffc:	ldr	x0, [x0, #4008]
  411000:	ldrb	w0, [x0, #156]
  411004:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  411008:	ldr	x21, [x1, #40]
  41100c:	mov	w22, w0
  411010:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  411014:	ldrb	w1, [x1, #561]
  411018:	cbz	w1, 4111b0 <wcrtomb@plt+0xc590>
  41101c:	mov	w20, #0x0                   	// #0
  411020:	cmp	w0, #0x35
  411024:	b.eq	411054 <wcrtomb@plt+0xc434>  // b.none
  411028:	b.ls	4111c4 <wcrtomb@plt+0xc5a4>  // b.plast
  41102c:	cmp	w0, #0x4c
  411030:	b.hi	41127c <wcrtomb@plt+0xc65c>  // b.pmore
  411034:	cmp	w0, #0x4a
  411038:	b.hi	411378 <wcrtomb@plt+0xc758>  // b.pmore
  41103c:	cmp	w0, #0x36
  411040:	b.eq	4113d0 <wcrtomb@plt+0xc7b0>  // b.none
  411044:	cmp	w0, #0x37
  411048:	b.eq	411264 <wcrtomb@plt+0xc644>  // b.none
  41104c:	cmp	w0, #0x44
  411050:	b.ne	4112f8 <wcrtomb@plt+0xc6d8>  // b.any
  411054:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  411058:	ldrb	w0, [x0, #408]
  41105c:	cbz	w0, 4113f4 <wcrtomb@plt+0xc7d4>
  411060:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  411064:	mov	w1, #0x1                   	// #1
  411068:	strb	w1, [x0, #904]
  41106c:	adrp	x19, 40f000 <wcrtomb@plt+0xa3e0>
  411070:	add	x19, x19, #0xa3c
  411074:	b	411208 <wcrtomb@plt+0xc5e8>
  411078:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41107c:	ldr	x0, [x0, #32]
  411080:	bl	41e644 <wcrtomb@plt+0x19a24>
  411084:	and	w0, w0, #0xff
  411088:	cbz	w0, 410f84 <wcrtomb@plt+0xc364>
  41108c:	stp	x19, x20, [sp, #16]
  411090:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  411094:	ldr	x0, [x0, #944]
  411098:	cbz	x0, 4110a0 <wcrtomb@plt+0xc480>
  41109c:	blr	x0
  4110a0:	mov	w2, #0x5                   	// #5
  4110a4:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  4110a8:	add	x1, x1, #0xc48
  4110ac:	mov	x0, #0x0                   	// #0
  4110b0:	bl	4049c0 <dcgettext@plt>
  4110b4:	mov	x19, x0
  4110b8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4110bc:	ldr	x0, [x0, #32]
  4110c0:	bl	43efc4 <argp_parse@@Base+0xb884>
  4110c4:	mov	x3, x0
  4110c8:	mov	x2, x19
  4110cc:	mov	w1, #0x0                   	// #0
  4110d0:	mov	w0, #0x0                   	// #0
  4110d4:	bl	404050 <error@plt>
  4110d8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4110dc:	mov	w1, #0x2                   	// #2
  4110e0:	str	w1, [x0, #3392]
  4110e4:	ldp	x19, x20, [sp, #16]
  4110e8:	bl	419828 <wcrtomb@plt+0x14c08>
  4110ec:	ldp	x29, x30, [sp], #48
  4110f0:	ret
  4110f4:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  4110f8:	add	x0, x0, #0xc68
  4110fc:	bl	422bb4 <wcrtomb@plt+0x1df94>
  411100:	cbnz	w0, 410fa0 <wcrtomb@plt+0xc380>
  411104:	b	4110e8 <wcrtomb@plt+0xc4c8>
  411108:	mov	x2, #0xffffffffffffffff    	// #-1
  41110c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  411110:	ldr	x1, [x0, #4008]
  411114:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  411118:	add	x0, x0, #0x20
  41111c:	bl	4195f0 <wcrtomb@plt+0x149d0>
  411120:	b	410fb0 <wcrtomb@plt+0xc390>
  411124:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  411128:	ldr	w19, [x0, #4032]
  41112c:	mov	w1, #0x0                   	// #0
  411130:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  411134:	ldr	x0, [x0, #40]
  411138:	bl	4101d0 <wcrtomb@plt+0xb5b0>
  41113c:	mov	w0, w19
  411140:	bl	41b6a8 <wcrtomb@plt+0x16a88>
  411144:	b	410fbc <wcrtomb@plt+0xc39c>
  411148:	bl	404ad0 <__errno_location@plt>
  41114c:	ldr	w20, [x0]
  411150:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  411154:	ldr	x0, [x0, #944]
  411158:	cbz	x0, 411160 <wcrtomb@plt+0xc540>
  41115c:	blr	x0
  411160:	mov	w2, #0x5                   	// #5
  411164:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  411168:	add	x1, x1, #0xc70
  41116c:	mov	x0, #0x0                   	// #0
  411170:	bl	4049c0 <dcgettext@plt>
  411174:	mov	x19, x0
  411178:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41117c:	ldr	x0, [x0, #40]
  411180:	bl	43efc4 <argp_parse@@Base+0xb884>
  411184:	mov	x3, x0
  411188:	mov	x2, x19
  41118c:	mov	w1, w20
  411190:	mov	w0, #0x0                   	// #0
  411194:	bl	404050 <error@plt>
  411198:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41119c:	mov	w1, #0x2                   	// #2
  4111a0:	str	w1, [x0, #3392]
  4111a4:	bl	419828 <wcrtomb@plt+0x14c08>
  4111a8:	ldp	x19, x20, [sp, #16]
  4111ac:	b	4110ec <wcrtomb@plt+0xc4cc>
  4111b0:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  4111b4:	ldr	x1, [x1, #552]
  4111b8:	mov	w20, #0x1                   	// #1
  4111bc:	cbz	x1, 411020 <wcrtomb@plt+0xc400>
  4111c0:	b	41101c <wcrtomb@plt+0xc3fc>
  4111c4:	cmp	w0, #0x32
  4111c8:	b.eq	4113c4 <wcrtomb@plt+0xc7a4>  // b.none
  4111cc:	b.ls	4111f8 <wcrtomb@plt+0xc5d8>  // b.plast
  4111d0:	cmp	w0, #0x33
  4111d4:	b.eq	411358 <wcrtomb@plt+0xc738>  // b.none
  4111d8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4111dc:	add	x0, x0, #0x20
  4111e0:	ldr	w1, [x0, #104]
  4111e4:	orr	w1, w1, #0x6000
  4111e8:	str	w1, [x0, #104]
  4111ec:	adrp	x19, 410000 <wcrtomb@plt+0xb3e0>
  4111f0:	add	x19, x19, #0x4e4
  4111f4:	b	411208 <wcrtomb@plt+0xc5e8>
  4111f8:	cmp	w0, #0x31
  4111fc:	b.ne	411250 <wcrtomb@plt+0xc630>  // b.any
  411200:	adrp	x19, 40f000 <wcrtomb@plt+0xa3e0>
  411204:	add	x19, x19, #0x7f0
  411208:	cbz	w20, 4114c4 <wcrtomb@plt+0xc8a4>
  41120c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  411210:	ldr	w0, [x0, #688]
  411214:	cmp	w0, #0x3
  411218:	b.eq	411428 <wcrtomb@plt+0xc808>  // b.none
  41121c:	cmp	w0, #0x6
  411220:	b.eq	411458 <wcrtomb@plt+0xc838>  // b.none
  411224:	mov	w1, w22
  411228:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41122c:	ldr	x0, [x0, #40]
  411230:	blr	x19
  411234:	cbz	w0, 411520 <wcrtomb@plt+0xc900>
  411238:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41123c:	ldrb	w0, [x0, #693]
  411240:	cbnz	w0, 4114d4 <wcrtomb@plt+0xc8b4>
  411244:	ldp	x19, x20, [sp, #16]
  411248:	ldp	x21, x22, [sp, #32]
  41124c:	b	4110ec <wcrtomb@plt+0xc4cc>
  411250:	cmp	w0, #0x32
  411254:	b.eq	4112f8 <wcrtomb@plt+0xc6d8>  // b.none
  411258:	cbz	w0, 411264 <wcrtomb@plt+0xc644>
  41125c:	cmp	w0, #0x30
  411260:	b.ne	4112f8 <wcrtomb@plt+0xc6d8>  // b.any
  411264:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  411268:	ldrb	w0, [x0, #48]
  41126c:	cbnz	w0, 4113e8 <wcrtomb@plt+0xc7c8>
  411270:	adrp	x19, 410000 <wcrtomb@plt+0xb3e0>
  411274:	add	x19, x19, #0x6e4
  411278:	b	41120c <wcrtomb@plt+0xc5ec>
  41127c:	cmp	w0, #0x56
  411280:	b.eq	4113dc <wcrtomb@plt+0xc7bc>  // b.none
  411284:	b.hi	4112f8 <wcrtomb@plt+0xc6d8>  // b.pmore
  411288:	cmp	w0, #0x4d
  41128c:	b.ne	4112f0 <wcrtomb@plt+0xc6d0>  // b.any
  411290:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  411294:	ldr	x0, [x0, #944]
  411298:	cbz	x0, 4112a0 <wcrtomb@plt+0xc680>
  41129c:	blr	x0
  4112a0:	mov	w2, #0x5                   	// #5
  4112a4:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  4112a8:	add	x1, x1, #0xc98
  4112ac:	mov	x0, #0x0                   	// #0
  4112b0:	bl	4049c0 <dcgettext@plt>
  4112b4:	mov	x19, x0
  4112b8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4112bc:	ldr	x0, [x0, #40]
  4112c0:	bl	43efc4 <argp_parse@@Base+0xb884>
  4112c4:	mov	x3, x0
  4112c8:	mov	x2, x19
  4112cc:	mov	w1, #0x0                   	// #0
  4112d0:	mov	w0, #0x0                   	// #0
  4112d4:	bl	404050 <error@plt>
  4112d8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4112dc:	mov	w1, #0x2                   	// #2
  4112e0:	str	w1, [x0, #3392]
  4112e4:	adrp	x19, 40e000 <wcrtomb@plt+0x93e0>
  4112e8:	add	x19, x19, #0xdc4
  4112ec:	b	411208 <wcrtomb@plt+0xc5e8>
  4112f0:	cmp	w0, #0x53
  4112f4:	b.eq	41140c <wcrtomb@plt+0xc7ec>  // b.none
  4112f8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4112fc:	ldr	w0, [x0, #408]
  411300:	tbz	w0, #16, 411400 <wcrtomb@plt+0xc7e0>
  411304:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  411308:	ldr	x0, [x0, #944]
  41130c:	cbz	x0, 411314 <wcrtomb@plt+0xc6f4>
  411310:	blr	x0
  411314:	mov	w2, #0x5                   	// #5
  411318:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  41131c:	add	x1, x1, #0xcf8
  411320:	mov	x0, #0x0                   	// #0
  411324:	bl	4049c0 <dcgettext@plt>
  411328:	mov	x19, x0
  41132c:	mov	x0, x21
  411330:	bl	43efc4 <argp_parse@@Base+0xb884>
  411334:	mov	w4, w22
  411338:	mov	x3, x0
  41133c:	mov	x2, x19
  411340:	mov	w1, #0x0                   	// #0
  411344:	mov	w0, #0x0                   	// #0
  411348:	bl	404050 <error@plt>
  41134c:	adrp	x19, 410000 <wcrtomb@plt+0xb3e0>
  411350:	add	x19, x19, #0x6e4
  411354:	b	411208 <wcrtomb@plt+0xc5e8>
  411358:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41135c:	add	x0, x0, #0x20
  411360:	ldr	w1, [x0, #104]
  411364:	orr	w1, w1, #0x2000
  411368:	str	w1, [x0, #104]
  41136c:	adrp	x19, 410000 <wcrtomb@plt+0xb3e0>
  411370:	add	x19, x19, #0x4e4
  411374:	b	411208 <wcrtomb@plt+0xc5e8>
  411378:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41137c:	ldr	x0, [x0, #944]
  411380:	cbz	x0, 411388 <wcrtomb@plt+0xc768>
  411384:	blr	x0
  411388:	mov	w2, #0x5                   	// #5
  41138c:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  411390:	add	x1, x1, #0xcd8
  411394:	mov	x0, #0x0                   	// #0
  411398:	bl	4049c0 <dcgettext@plt>
  41139c:	mov	x2, x0
  4113a0:	mov	w1, #0x0                   	// #0
  4113a4:	mov	w0, #0x0                   	// #0
  4113a8:	bl	404050 <error@plt>
  4113ac:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4113b0:	mov	w1, #0x2                   	// #2
  4113b4:	str	w1, [x0, #3392]
  4113b8:	adrp	x19, 40e000 <wcrtomb@plt+0x93e0>
  4113bc:	add	x19, x19, #0xd6c
  4113c0:	b	411208 <wcrtomb@plt+0xc5e8>
  4113c4:	adrp	x19, 410000 <wcrtomb@plt+0xb3e0>
  4113c8:	add	x19, x19, #0x5e0
  4113cc:	b	411208 <wcrtomb@plt+0xc5e8>
  4113d0:	adrp	x19, 410000 <wcrtomb@plt+0xb3e0>
  4113d4:	add	x19, x19, #0x404
  4113d8:	b	411208 <wcrtomb@plt+0xc5e8>
  4113dc:	adrp	x19, 40e000 <wcrtomb@plt+0x93e0>
  4113e0:	add	x19, x19, #0xddc
  4113e4:	b	411208 <wcrtomb@plt+0xc5e8>
  4113e8:	adrp	x19, 40f000 <wcrtomb@plt+0xa3e0>
  4113ec:	add	x19, x19, #0xa3c
  4113f0:	b	411208 <wcrtomb@plt+0xc5e8>
  4113f4:	adrp	x19, 40f000 <wcrtomb@plt+0xa3e0>
  4113f8:	add	x19, x19, #0xa3c
  4113fc:	b	411208 <wcrtomb@plt+0xc5e8>
  411400:	adrp	x19, 410000 <wcrtomb@plt+0xb3e0>
  411404:	add	x19, x19, #0x6e4
  411408:	b	411208 <wcrtomb@plt+0xc5e8>
  41140c:	adrp	x19, 410000 <wcrtomb@plt+0xb3e0>
  411410:	add	x19, x19, #0x6e4
  411414:	b	41120c <wcrtomb@plt+0xc5ec>
  411418:	mov	w22, #0x53                  	// #83
  41141c:	adrp	x19, 410000 <wcrtomb@plt+0xb3e0>
  411420:	add	x19, x19, #0x6e4
  411424:	b	41120c <wcrtomb@plt+0xc5ec>
  411428:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41142c:	ldrb	w1, [x0, #4066]
  411430:	mov	x0, x21
  411434:	bl	41bf7c <wcrtomb@plt+0x1735c>
  411438:	cbnz	w0, 411224 <wcrtomb@plt+0xc604>
  41143c:	bl	404ad0 <__errno_location@plt>
  411440:	ldr	w0, [x0]
  411444:	tst	w0, #0xfffffffd
  411448:	b.eq	411224 <wcrtomb@plt+0xc604>  // b.none
  41144c:	mov	x0, x21
  411450:	bl	42a13c <wcrtomb@plt+0x2551c>
  411454:	b	4114c4 <wcrtomb@plt+0xc8a4>
  411458:	adrp	x2, 481000 <argp_program_version_hook@@Base+0x298>
  41145c:	add	x2, x2, #0x20
  411460:	mov	x1, #0x0                   	// #0
  411464:	mov	x0, x21
  411468:	bl	40f354 <wcrtomb@plt+0xa734>
  41146c:	and	w0, w0, #0xff
  411470:	cbz	w0, 411224 <wcrtomb@plt+0xc604>
  411474:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  411478:	ldr	w0, [x0, #408]
  41147c:	tbz	w0, #11, 4114c4 <wcrtomb@plt+0xc8a4>
  411480:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  411484:	ldr	x0, [x0, #944]
  411488:	cbz	x0, 411490 <wcrtomb@plt+0xc870>
  41148c:	blr	x0
  411490:	mov	w2, #0x5                   	// #5
  411494:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  411498:	add	x1, x1, #0xd30
  41149c:	mov	x0, #0x0                   	// #0
  4114a0:	bl	4049c0 <dcgettext@plt>
  4114a4:	mov	x19, x0
  4114a8:	mov	x0, x21
  4114ac:	bl	43f194 <argp_parse@@Base+0xba54>
  4114b0:	mov	x3, x0
  4114b4:	mov	x2, x19
  4114b8:	mov	w1, #0x0                   	// #0
  4114bc:	mov	w0, #0x0                   	// #0
  4114c0:	bl	404050 <error@plt>
  4114c4:	bl	419828 <wcrtomb@plt+0x14c08>
  4114c8:	ldp	x19, x20, [sp, #16]
  4114cc:	ldp	x21, x22, [sp, #32]
  4114d0:	b	4110ec <wcrtomb@plt+0xc4cc>
  4114d4:	bl	41b11c <wcrtomb@plt+0x164fc>
  4114d8:	ldp	x19, x20, [sp, #16]
  4114dc:	ldp	x21, x22, [sp, #32]
  4114e0:	b	4110ec <wcrtomb@plt+0xc4cc>
  4114e4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4114e8:	ldr	x21, [x0, #40]
  4114ec:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4114f0:	ldrb	w0, [x0, #561]
  4114f4:	cbnz	w0, 411418 <wcrtomb@plt+0xc7f8>
  4114f8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4114fc:	ldr	x0, [x0, #552]
  411500:	cbz	x0, 411510 <wcrtomb@plt+0xc8f0>
  411504:	mov	w0, #0x53                  	// #83
  411508:	mov	w22, w0
  41150c:	b	41101c <wcrtomb@plt+0xc3fc>
  411510:	mov	w22, #0x53                  	// #83
  411514:	adrp	x19, 410000 <wcrtomb@plt+0xb3e0>
  411518:	add	x19, x19, #0x6e4
  41151c:	b	41120c <wcrtomb@plt+0xc5ec>
  411520:	ldp	x19, x20, [sp, #16]
  411524:	ldp	x21, x22, [sp, #32]
  411528:	b	4110ec <wcrtomb@plt+0xc4cc>
  41152c:	stp	x29, x30, [sp, #-80]!
  411530:	mov	x29, sp
  411534:	stp	x19, x20, [sp, #16]
  411538:	stp	x21, x22, [sp, #32]
  41153c:	mov	x20, x0
  411540:	mov	x21, x1
  411544:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  411548:	ldr	w0, [x0, #2184]
  41154c:	mov	x3, x1
  411550:	mov	w2, w0
  411554:	mov	x1, x20
  411558:	bl	404810 <renameat@plt>
  41155c:	cbz	w0, 4115f0 <wcrtomb@plt+0xc9d0>
  411560:	bl	404ad0 <__errno_location@plt>
  411564:	mov	x19, x0
  411568:	ldr	w22, [x0]
  41156c:	cmp	w22, #0x2
  411570:	b.eq	41166c <wcrtomb@plt+0xca4c>  // b.none
  411574:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  411578:	ldr	x0, [x0, #944]
  41157c:	cbz	x0, 411584 <wcrtomb@plt+0xc964>
  411580:	blr	x0
  411584:	mov	w2, #0x5                   	// #5
  411588:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  41158c:	add	x1, x1, #0xd50
  411590:	mov	x0, #0x0                   	// #0
  411594:	bl	4049c0 <dcgettext@plt>
  411598:	mov	x19, x0
  41159c:	mov	x1, x20
  4115a0:	mov	w0, #0x0                   	// #0
  4115a4:	bl	43f17c <argp_parse@@Base+0xba3c>
  4115a8:	mov	x20, x0
  4115ac:	mov	x1, x21
  4115b0:	mov	w0, #0x1                   	// #1
  4115b4:	bl	43f17c <argp_parse@@Base+0xba3c>
  4115b8:	mov	x4, x0
  4115bc:	mov	x3, x20
  4115c0:	mov	x2, x19
  4115c4:	mov	w1, w22
  4115c8:	mov	w0, #0x0                   	// #0
  4115cc:	bl	404050 <error@plt>
  4115d0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4115d4:	mov	w1, #0x2                   	// #2
  4115d8:	str	w1, [x0, #3392]
  4115dc:	mov	w0, #0x0                   	// #0
  4115e0:	ldp	x19, x20, [sp, #16]
  4115e4:	ldp	x21, x22, [sp, #32]
  4115e8:	ldp	x29, x30, [sp], #80
  4115ec:	ret
  4115f0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4115f4:	ldr	x19, [x0, #2008]
  4115f8:	cbz	x19, 4116a8 <wcrtomb@plt+0xca88>
  4115fc:	str	x23, [sp, #48]
  411600:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  411604:	ldr	w23, [x0, #4032]
  411608:	b	411614 <wcrtomb@plt+0xc9f4>
  41160c:	ldr	x19, [x19]
  411610:	cbz	x19, 411660 <wcrtomb@plt+0xca40>
  411614:	ldr	w0, [x19, #92]
  411618:	cmp	w0, w23
  41161c:	b.ne	41160c <wcrtomb@plt+0xc9ec>  // b.any
  411620:	ldr	x22, [x19, #160]
  411624:	mov	x1, x20
  411628:	mov	x0, x22
  41162c:	bl	404720 <strcmp@plt>
  411630:	cbnz	w0, 41160c <wcrtomb@plt+0xc9ec>
  411634:	mov	x0, x22
  411638:	bl	4047c0 <free@plt>
  41163c:	mov	x0, x21
  411640:	bl	440154 <argp_parse@@Base+0xca14>
  411644:	str	x0, [x19, #160]
  411648:	mov	x0, x21
  41164c:	bl	403ff0 <strlen@plt>
  411650:	str	x0, [x19, #152]
  411654:	mov	w0, #0x1                   	// #1
  411658:	ldr	x23, [sp, #48]
  41165c:	b	4115e0 <wcrtomb@plt+0xc9c0>
  411660:	mov	w0, #0x1                   	// #1
  411664:	ldr	x23, [sp, #48]
  411668:	b	4115e0 <wcrtomb@plt+0xc9c0>
  41166c:	add	x1, sp, #0x4f
  411670:	mov	x0, x21
  411674:	bl	40f1a4 <wcrtomb@plt+0xa584>
  411678:	cbnz	w0, 411574 <wcrtomb@plt+0xc954>
  41167c:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  411680:	ldr	w0, [x0, #2184]
  411684:	mov	x3, x21
  411688:	mov	w2, w0
  41168c:	mov	x1, x20
  411690:	bl	404810 <renameat@plt>
  411694:	mov	w1, w0
  411698:	mov	w0, #0x1                   	// #1
  41169c:	cbz	w1, 4115e0 <wcrtomb@plt+0xc9c0>
  4116a0:	ldr	w22, [x19]
  4116a4:	b	411574 <wcrtomb@plt+0xc954>
  4116a8:	mov	w0, #0x1                   	// #1
  4116ac:	b	4115e0 <wcrtomb@plt+0xc9c0>
  4116b0:	ret
  4116b4:	ret
  4116b8:	stp	x29, x30, [sp, #-32]!
  4116bc:	mov	x29, sp
  4116c0:	stp	x19, x20, [sp, #16]
  4116c4:	mov	x20, x0
  4116c8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4116cc:	ldr	x19, [x0, #2048]
  4116d0:	cbz	x19, 4116f4 <wcrtomb@plt+0xcad4>
  4116d4:	mov	x1, x20
  4116d8:	ldr	x0, [x19, #8]
  4116dc:	bl	404720 <strcmp@plt>
  4116e0:	cbz	w0, 4116fc <wcrtomb@plt+0xcadc>
  4116e4:	ldr	x19, [x19]
  4116e8:	cbnz	x19, 4116d4 <wcrtomb@plt+0xcab4>
  4116ec:	mov	w0, #0x0                   	// #0
  4116f0:	b	411700 <wcrtomb@plt+0xcae0>
  4116f4:	mov	w0, #0x0                   	// #0
  4116f8:	b	411700 <wcrtomb@plt+0xcae0>
  4116fc:	mov	w0, #0x1                   	// #1
  411700:	ldp	x19, x20, [sp, #16]
  411704:	ldp	x29, x30, [sp], #32
  411708:	ret
  41170c:	stp	x29, x30, [sp, #-64]!
  411710:	mov	x29, sp
  411714:	stp	x19, x20, [sp, #16]
  411718:	str	x21, [sp, #32]
  41171c:	mov	x20, x0
  411720:	mov	x21, x1
  411724:	mov	x19, x2
  411728:	mov	w2, #0x0                   	// #0
  41172c:	add	x1, sp, #0x38
  411730:	mov	x0, x19
  411734:	bl	41ae0c <wcrtomb@plt+0x161ec>
  411738:	tbnz	x1, #63, 411748 <wcrtomb@plt+0xcb28>
  41173c:	ldr	x1, [sp, #56]
  411740:	ldrb	w1, [x1]
  411744:	cbz	w1, 411798 <wcrtomb@plt+0xcb78>
  411748:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41174c:	ldr	x0, [x0, #944]
  411750:	cbz	x0, 411758 <wcrtomb@plt+0xcb38>
  411754:	blr	x0
  411758:	mov	w2, #0x5                   	// #5
  41175c:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  411760:	add	x1, x1, #0xd68
  411764:	mov	x0, #0x0                   	// #0
  411768:	bl	4049c0 <dcgettext@plt>
  41176c:	mov	x2, x0
  411770:	mov	w1, #0x0                   	// #0
  411774:	mov	w0, #0x0                   	// #0
  411778:	bl	404050 <error@plt>
  41177c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  411780:	mov	w1, #0x2                   	// #2
  411784:	str	w1, [x0, #3392]
  411788:	ldp	x19, x20, [sp, #16]
  41178c:	ldr	x21, [sp, #32]
  411790:	ldp	x29, x30, [sp], #64
  411794:	ret
  411798:	str	x0, [x21]
  41179c:	mov	x1, x19
  4117a0:	mov	x0, x20
  4117a4:	bl	41a5bc <wcrtomb@plt+0x1599c>
  4117a8:	b	411788 <wcrtomb@plt+0xcb68>
  4117ac:	stp	x29, x30, [sp, #-48]!
  4117b0:	mov	x29, sp
  4117b4:	stp	x19, x20, [sp, #16]
  4117b8:	stp	x21, x22, [sp, #32]
  4117bc:	mov	x21, x0
  4117c0:	mov	x22, x1
  4117c4:	mov	x19, x2
  4117c8:	mov	x0, #0x18                  	// #24
  4117cc:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  4117d0:	mov	x20, x0
  4117d4:	mov	x0, x22
  4117d8:	bl	440154 <argp_parse@@Base+0xca14>
  4117dc:	str	x0, [x20, #8]
  4117e0:	cbz	x19, 4117f0 <wcrtomb@plt+0xcbd0>
  4117e4:	mov	x0, x19
  4117e8:	bl	440154 <argp_parse@@Base+0xca14>
  4117ec:	mov	x19, x0
  4117f0:	str	x19, [x20, #16]
  4117f4:	ldr	x0, [x21]
  4117f8:	str	x0, [x20]
  4117fc:	str	x20, [x21]
  411800:	ldp	x19, x20, [sp, #16]
  411804:	ldp	x21, x22, [sp, #32]
  411808:	ldp	x29, x30, [sp], #48
  41180c:	ret
  411810:	stp	x29, x30, [sp, #-48]!
  411814:	mov	x29, sp
  411818:	stp	x19, x20, [sp, #16]
  41181c:	str	x21, [sp, #32]
  411820:	mov	x21, x0
  411824:	mov	x20, x2
  411828:	mov	x19, x3
  41182c:	mov	x0, x3
  411830:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  411834:	str	x0, [x21, #384]
  411838:	mov	x2, x19
  41183c:	mov	x1, x20
  411840:	bl	403f70 <memcpy@plt>
  411844:	ldp	x19, x20, [sp, #16]
  411848:	ldr	x21, [sp, #32]
  41184c:	ldp	x29, x30, [sp], #48
  411850:	ret
  411854:	stp	x29, x30, [sp, #-32]!
  411858:	mov	x29, sp
  41185c:	str	x19, [sp, #16]
  411860:	mov	x19, x0
  411864:	ldr	x0, [x0]
  411868:	cbz	x0, 411878 <wcrtomb@plt+0xcc58>
  41186c:	ldr	x19, [sp, #16]
  411870:	ldp	x29, x30, [sp], #32
  411874:	ret
  411878:	mov	x0, #0x58                  	// #88
  41187c:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  411880:	str	x0, [x19]
  411884:	adrp	x4, 404000 <fputs@plt>
  411888:	add	x4, x4, #0x7c0
  41188c:	adrp	x3, 43f000 <argp_parse@@Base+0xb8c0>
  411890:	add	x3, x3, #0xef4
  411894:	mov	x2, #0x0                   	// #0
  411898:	mov	x1, #0x0                   	// #0
  41189c:	bl	440f78 <_obstack_begin@@Base>
  4118a0:	b	41186c <wcrtomb@plt+0xcc4c>
  4118a4:	stp	x29, x30, [sp, #-32]!
  4118a8:	mov	x29, sp
  4118ac:	stp	x19, x20, [sp, #16]
  4118b0:	mov	x19, x0
  4118b4:	mov	x20, x1
  4118b8:	ldr	x0, [x0]
  4118bc:	cbz	x0, 4118c8 <wcrtomb@plt+0xcca8>
  4118c0:	bl	4047c0 <free@plt>
  4118c4:	str	xzr, [x19]
  4118c8:	mov	x2, x19
  4118cc:	mov	x1, x20
  4118d0:	mov	w0, #0x0                   	// #0
  4118d4:	bl	427a8c <wcrtomb@plt+0x22e6c>
  4118d8:	and	w0, w0, #0xff
  4118dc:	cbz	w0, 4118ec <wcrtomb@plt+0xcccc>
  4118e0:	ldp	x19, x20, [sp, #16]
  4118e4:	ldp	x29, x30, [sp], #32
  4118e8:	ret
  4118ec:	mov	x1, x20
  4118f0:	mov	x0, x19
  4118f4:	bl	41a5bc <wcrtomb@plt+0x1599c>
  4118f8:	b	4118e0 <wcrtomb@plt+0xccc0>
  4118fc:	stp	x29, x30, [sp, #-16]!
  411900:	mov	x29, sp
  411904:	mov	x1, x2
  411908:	add	x0, x0, #0x30
  41190c:	bl	4118a4 <wcrtomb@plt+0xcc84>
  411910:	ldp	x29, x30, [sp], #16
  411914:	ret
  411918:	stp	x29, x30, [sp, #-16]!
  41191c:	mov	x29, sp
  411920:	mov	x1, x2
  411924:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  411928:	add	x0, x0, #0xf48
  41192c:	bl	4118a4 <wcrtomb@plt+0xcc84>
  411930:	ldp	x29, x30, [sp], #16
  411934:	ret
  411938:	stp	x29, x30, [sp, #-16]!
  41193c:	mov	x29, sp
  411940:	mov	x1, x2
  411944:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  411948:	add	x0, x0, #0xf40
  41194c:	bl	4118a4 <wcrtomb@plt+0xcc84>
  411950:	ldp	x29, x30, [sp], #16
  411954:	ret
  411958:	stp	x29, x30, [sp, #-16]!
  41195c:	mov	x29, sp
  411960:	mov	x1, x2
  411964:	add	x0, x0, #0x20
  411968:	bl	4118a4 <wcrtomb@plt+0xcc84>
  41196c:	ldp	x29, x30, [sp], #16
  411970:	ret
  411974:	stp	x29, x30, [sp, #-16]!
  411978:	mov	x29, sp
  41197c:	mov	x1, x2
  411980:	add	x0, x0, #0x18
  411984:	bl	4118a4 <wcrtomb@plt+0xcc84>
  411988:	ldp	x29, x30, [sp], #16
  41198c:	ret
  411990:	stp	x29, x30, [sp, #-16]!
  411994:	mov	x29, sp
  411998:	mov	x1, x2
  41199c:	add	x0, x0, #0x28
  4119a0:	bl	4118a4 <wcrtomb@plt+0xcc84>
  4119a4:	ldp	x29, x30, [sp], #16
  4119a8:	ret
  4119ac:	stp	x29, x30, [sp, #-48]!
  4119b0:	mov	x29, sp
  4119b4:	stp	x19, x20, [sp, #16]
  4119b8:	stp	x21, x22, [sp, #32]
  4119bc:	mov	x21, x0
  4119c0:	mov	x22, x1
  4119c4:	mov	x19, x2
  4119c8:	ldr	x20, [x0]
  4119cc:	ldr	x0, [x20, #32]
  4119d0:	ldr	x1, [x20, #24]
  4119d4:	sub	x0, x0, x1
  4119d8:	cmp	x2, x0
  4119dc:	b.hi	411a18 <wcrtomb@plt+0xcdf8>  // b.pmore
  4119e0:	mov	x2, x19
  4119e4:	mov	x1, x22
  4119e8:	ldr	x0, [x20, #24]
  4119ec:	bl	403f70 <memcpy@plt>
  4119f0:	ldr	x0, [x20, #24]
  4119f4:	add	x0, x0, x19
  4119f8:	str	x0, [x20, #24]
  4119fc:	ldr	x2, [x21, #8]
  411a00:	add	x19, x2, x19
  411a04:	str	x19, [x21, #8]
  411a08:	ldp	x19, x20, [sp, #16]
  411a0c:	ldp	x21, x22, [sp, #32]
  411a10:	ldp	x29, x30, [sp], #48
  411a14:	ret
  411a18:	mov	x1, x2
  411a1c:	mov	x0, x20
  411a20:	bl	440fcc <_obstack_newchunk@@Base>
  411a24:	b	4119e0 <wcrtomb@plt+0xcdc0>
  411a28:	stp	x29, x30, [sp, #-48]!
  411a2c:	mov	x29, sp
  411a30:	stp	x19, x20, [sp, #16]
  411a34:	str	x21, [sp, #32]
  411a38:	mov	x19, x0
  411a3c:	and	w21, w1, #0xff
  411a40:	ldr	x20, [x0]
  411a44:	ldr	x1, [x20, #32]
  411a48:	ldr	x0, [x20, #24]
  411a4c:	cmp	x1, x0
  411a50:	b.eq	411a80 <wcrtomb@plt+0xce60>  // b.none
  411a54:	ldr	x0, [x20, #24]
  411a58:	add	x1, x0, #0x1
  411a5c:	str	x1, [x20, #24]
  411a60:	strb	w21, [x0]
  411a64:	ldr	x0, [x19, #8]
  411a68:	add	x0, x0, #0x1
  411a6c:	str	x0, [x19, #8]
  411a70:	ldp	x19, x20, [sp, #16]
  411a74:	ldr	x21, [sp, #32]
  411a78:	ldp	x29, x30, [sp], #48
  411a7c:	ret
  411a80:	mov	x1, #0x1                   	// #1
  411a84:	mov	x0, x20
  411a88:	bl	440fcc <_obstack_newchunk@@Base>
  411a8c:	b	411a54 <wcrtomb@plt+0xce34>
  411a90:	stp	x29, x30, [sp, #-144]!
  411a94:	mov	x29, sp
  411a98:	stp	x19, x20, [sp, #16]
  411a9c:	stp	x21, x22, [sp, #32]
  411aa0:	stp	x23, x24, [sp, #48]
  411aa4:	stp	x25, x26, [sp, #64]
  411aa8:	mov	x24, x0
  411aac:	mov	x22, x1
  411ab0:	str	x2, [sp, #104]
  411ab4:	mov	x25, x3
  411ab8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  411abc:	ldr	x0, [x0, #2056]
  411ac0:	cbz	x0, 411af8 <wcrtomb@plt+0xced8>
  411ac4:	strb	wzr, [x0]
  411ac8:	ldrb	w19, [x22]
  411acc:	mov	x20, #0x0                   	// #0
  411ad0:	cbz	w19, 411b14 <wcrtomb@plt+0xcef4>
  411ad4:	stp	x27, x28, [sp, #80]
  411ad8:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x3ee64>
  411adc:	add	x21, x21, #0x800
  411ae0:	add	x26, x21, #0x10
  411ae4:	mov	w28, #0x3325                	// #13093
  411ae8:	movk	w28, #0x44, lsl #16
  411aec:	mov	w27, #0x3225                	// #12837
  411af0:	movk	w27, #0x35, lsl #16
  411af4:	b	411b48 <wcrtomb@plt+0xcf28>
  411af8:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x3ee64>
  411afc:	add	x19, x19, #0x800
  411b00:	mov	x0, #0x100                 	// #256
  411b04:	str	x0, [x19, #16]
  411b08:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  411b0c:	str	x0, [x19, #8]
  411b10:	b	411ac8 <wcrtomb@plt+0xcea8>
  411b14:	mov	x20, #0x0                   	// #0
  411b18:	b	411b88 <wcrtomb@plt+0xcf68>
  411b1c:	mov	x1, x26
  411b20:	ldr	x0, [x21, #8]
  411b24:	bl	440068 <argp_parse@@Base+0xc928>
  411b28:	str	x0, [x21, #8]
  411b2c:	b	411b58 <wcrtomb@plt+0xcf38>
  411b30:	ldr	x0, [x21, #8]
  411b34:	str	w27, [x0, x20]
  411b38:	mov	x20, x23
  411b3c:	add	x20, x20, #0x1
  411b40:	ldrb	w19, [x22, #1]!
  411b44:	cbz	w19, 411b84 <wcrtomb@plt+0xcf64>
  411b48:	add	x23, x20, #0x2
  411b4c:	ldr	x0, [x21, #16]
  411b50:	cmp	x23, x0
  411b54:	b.cs	411b1c <wcrtomb@plt+0xcefc>  // b.hs, b.nlast
  411b58:	cmp	w19, #0x25
  411b5c:	b.eq	411b30 <wcrtomb@plt+0xcf10>  // b.none
  411b60:	cmp	w19, #0x3d
  411b64:	b.eq	411b74 <wcrtomb@plt+0xcf54>  // b.none
  411b68:	ldr	x0, [x21, #8]
  411b6c:	strb	w19, [x0, x20]
  411b70:	b	411b3c <wcrtomb@plt+0xcf1c>
  411b74:	ldr	x0, [x21, #8]
  411b78:	str	w28, [x0, x20]
  411b7c:	mov	x20, x23
  411b80:	b	411b3c <wcrtomb@plt+0xcf1c>
  411b84:	ldp	x27, x28, [sp, #80]
  411b88:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  411b8c:	ldr	x22, [x0, #2056]
  411b90:	strb	wzr, [x22, x20]
  411b94:	mov	x0, x22
  411b98:	bl	403ff0 <strlen@plt>
  411b9c:	mov	x23, x0
  411ba0:	add	x20, x25, #0x3
  411ba4:	add	x20, x20, x0
  411ba8:	mov	x19, #0x0                   	// #0
  411bac:	add	x21, sp, #0x8c
  411bb0:	add	x1, sp, #0x78
  411bb4:	add	x0, x19, x20
  411bb8:	bl	438ce8 <argp_parse@@Base+0x55a8>
  411bbc:	mov	x1, x19
  411bc0:	sub	x19, x21, x0
  411bc4:	cmp	x1, x19
  411bc8:	b.ne	411bb0 <wcrtomb@plt+0xcf90>  // b.any
  411bcc:	mov	x2, x19
  411bd0:	mov	x1, x0
  411bd4:	mov	x0, x24
  411bd8:	bl	4119ac <wcrtomb@plt+0xcd8c>
  411bdc:	mov	w1, #0x20                  	// #32
  411be0:	mov	x0, x24
  411be4:	bl	411a28 <wcrtomb@plt+0xce08>
  411be8:	mov	x2, x23
  411bec:	mov	x1, x22
  411bf0:	mov	x0, x24
  411bf4:	bl	4119ac <wcrtomb@plt+0xcd8c>
  411bf8:	mov	w1, #0x3d                  	// #61
  411bfc:	mov	x0, x24
  411c00:	bl	411a28 <wcrtomb@plt+0xce08>
  411c04:	mov	x2, x25
  411c08:	ldr	x1, [sp, #104]
  411c0c:	mov	x0, x24
  411c10:	bl	4119ac <wcrtomb@plt+0xcd8c>
  411c14:	mov	w1, #0xa                   	// #10
  411c18:	mov	x0, x24
  411c1c:	bl	411a28 <wcrtomb@plt+0xce08>
  411c20:	ldp	x19, x20, [sp, #16]
  411c24:	ldp	x21, x22, [sp, #32]
  411c28:	ldp	x23, x24, [sp, #48]
  411c2c:	ldp	x25, x26, [sp, #64]
  411c30:	ldp	x29, x30, [sp], #144
  411c34:	ret
  411c38:	stp	x29, x30, [sp, #-48]!
  411c3c:	mov	x29, sp
  411c40:	stp	x19, x20, [sp, #16]
  411c44:	str	x21, [sp, #32]
  411c48:	mov	x20, x0
  411c4c:	mov	x21, x1
  411c50:	mov	x19, x2
  411c54:	mov	x0, x2
  411c58:	bl	403ff0 <strlen@plt>
  411c5c:	mov	x3, x0
  411c60:	mov	x2, x19
  411c64:	mov	x1, x21
  411c68:	mov	x0, x20
  411c6c:	bl	411a90 <wcrtomb@plt+0xce70>
  411c70:	ldp	x19, x20, [sp, #16]
  411c74:	ldr	x21, [sp, #32]
  411c78:	ldp	x29, x30, [sp], #48
  411c7c:	ret
  411c80:	stp	x29, x30, [sp, #-64]!
  411c84:	mov	x29, sp
  411c88:	stp	x19, x20, [sp, #16]
  411c8c:	str	x21, [sp, #32]
  411c90:	mov	x19, x0
  411c94:	mov	x21, x1
  411c98:	mov	x20, x2
  411c9c:	add	x2, sp, #0x38
  411ca0:	mov	x1, x0
  411ca4:	mov	w0, #0x1                   	// #1
  411ca8:	bl	427a8c <wcrtomb@plt+0x22e6c>
  411cac:	and	w0, w0, #0xff
  411cb0:	cbz	w0, 411cdc <wcrtomb@plt+0xd0bc>
  411cb4:	ldr	x2, [sp, #56]
  411cb8:	mov	x1, x21
  411cbc:	mov	x0, x20
  411cc0:	bl	411c38 <wcrtomb@plt+0xd018>
  411cc4:	ldr	x0, [sp, #56]
  411cc8:	bl	4047c0 <free@plt>
  411ccc:	ldp	x19, x20, [sp, #16]
  411cd0:	ldr	x21, [sp, #32]
  411cd4:	ldp	x29, x30, [sp], #64
  411cd8:	ret
  411cdc:	mov	x0, x19
  411ce0:	bl	440154 <argp_parse@@Base+0xca14>
  411ce4:	str	x0, [sp, #56]
  411ce8:	b	411cb4 <wcrtomb@plt+0xd094>
  411cec:	stp	x29, x30, [sp, #-16]!
  411cf0:	mov	x29, sp
  411cf4:	ldr	x0, [x0, #48]
  411cf8:	bl	411c80 <wcrtomb@plt+0xd060>
  411cfc:	ldp	x29, x30, [sp], #16
  411d00:	ret
  411d04:	stp	x29, x30, [sp, #-16]!
  411d08:	mov	x29, sp
  411d0c:	mov	x0, x3
  411d10:	bl	411c80 <wcrtomb@plt+0xd060>
  411d14:	ldp	x29, x30, [sp], #16
  411d18:	ret
  411d1c:	stp	x29, x30, [sp, #-16]!
  411d20:	mov	x29, sp
  411d24:	ldr	x0, [x0, #32]
  411d28:	bl	411c80 <wcrtomb@plt+0xd060>
  411d2c:	ldp	x29, x30, [sp], #16
  411d30:	ret
  411d34:	stp	x29, x30, [sp, #-16]!
  411d38:	mov	x29, sp
  411d3c:	ldr	x0, [x0, #8]
  411d40:	bl	411c80 <wcrtomb@plt+0xd060>
  411d44:	ldp	x29, x30, [sp], #16
  411d48:	ret
  411d4c:	stp	x29, x30, [sp, #-16]!
  411d50:	mov	x29, sp
  411d54:	ldr	x0, [x0, #24]
  411d58:	bl	411c80 <wcrtomb@plt+0xd060>
  411d5c:	ldp	x29, x30, [sp], #16
  411d60:	ret
  411d64:	stp	x29, x30, [sp, #-16]!
  411d68:	mov	x29, sp
  411d6c:	ldr	x0, [x0, #40]
  411d70:	bl	411c80 <wcrtomb@plt+0xd060>
  411d74:	ldp	x29, x30, [sp], #16
  411d78:	ret
  411d7c:	stp	x29, x30, [sp, #-16]!
  411d80:	mov	x29, sp
  411d84:	mov	x4, x0
  411d88:	mov	x0, x2
  411d8c:	ldr	x2, [x3]
  411d90:	add	x2, x2, x2, lsl #1
  411d94:	ldr	x3, [x4, #336]
  411d98:	add	x2, x3, x2, lsl #3
  411d9c:	ldr	x3, [x2, #16]
  411da0:	ldr	x2, [x2, #8]
  411da4:	bl	411a90 <wcrtomb@plt+0xce70>
  411da8:	ldp	x29, x30, [sp], #16
  411dac:	ret
  411db0:	stp	x29, x30, [sp, #-16]!
  411db4:	mov	x29, sp
  411db8:	mov	x4, x0
  411dbc:	mov	x0, x2
  411dc0:	ldr	x3, [x4, #80]
  411dc4:	ldr	x2, [x4, #72]
  411dc8:	bl	411a90 <wcrtomb@plt+0xce70>
  411dcc:	ldp	x29, x30, [sp], #16
  411dd0:	ret
  411dd4:	stp	x29, x30, [sp, #-16]!
  411dd8:	mov	x29, sp
  411ddc:	mov	x4, x0
  411de0:	mov	x0, x2
  411de4:	ldr	x3, [x4, #64]
  411de8:	ldr	x2, [x4, #56]
  411dec:	bl	411a90 <wcrtomb@plt+0xce70>
  411df0:	ldp	x29, x30, [sp], #16
  411df4:	ret
  411df8:	stp	x29, x30, [sp, #-64]!
  411dfc:	mov	x29, sp
  411e00:	stp	x19, x20, [sp, #16]
  411e04:	stp	x21, x22, [sp, #32]
  411e08:	stp	x23, x24, [sp, #48]
  411e0c:	mov	x20, x0
  411e10:	mov	x24, x2
  411e14:	mov	x23, x3
  411e18:	mov	x21, x4
  411e1c:	ldr	x19, [x1]
  411e20:	add	x19, x19, #0x1
  411e24:	str	x19, [x1]
  411e28:	add	x19, x19, x19, lsl #1
  411e2c:	lsl	x19, x19, #3
  411e30:	mov	x1, x19
  411e34:	ldr	x0, [x0]
  411e38:	bl	43ff70 <argp_parse@@Base+0xc830>
  411e3c:	mov	x22, x0
  411e40:	str	x0, [x20]
  411e44:	sub	x19, x19, #0x18
  411e48:	mov	x0, x24
  411e4c:	bl	440154 <argp_parse@@Base+0xca14>
  411e50:	str	x0, [x22, x19]
  411e54:	ldr	x22, [x20]
  411e58:	add	x22, x22, x19
  411e5c:	add	x1, x21, #0x1
  411e60:	mov	x0, x23
  411e64:	bl	440120 <argp_parse@@Base+0xc9e0>
  411e68:	str	x0, [x22, #8]
  411e6c:	ldr	x0, [x20]
  411e70:	add	x19, x0, x19
  411e74:	str	x21, [x19, #16]
  411e78:	ldp	x19, x20, [sp, #16]
  411e7c:	ldp	x21, x22, [sp, #32]
  411e80:	ldp	x23, x24, [sp, #48]
  411e84:	ldp	x29, x30, [sp], #64
  411e88:	ret
  411e8c:	stp	x29, x30, [sp, #-32]!
  411e90:	mov	x29, sp
  411e94:	stp	x19, x20, [sp, #16]
  411e98:	mov	x19, x0
  411e9c:	mov	x0, x2
  411ea0:	mov	x20, x3
  411ea4:	add	x1, x3, #0x1
  411ea8:	bl	440120 <argp_parse@@Base+0xc9e0>
  411eac:	str	x0, [x19, #72]
  411eb0:	str	x20, [x19, #80]
  411eb4:	ldp	x19, x20, [sp, #16]
  411eb8:	ldp	x29, x30, [sp], #32
  411ebc:	ret
  411ec0:	stp	x29, x30, [sp, #-32]!
  411ec4:	mov	x29, sp
  411ec8:	stp	x19, x20, [sp, #16]
  411ecc:	mov	x19, x0
  411ed0:	mov	x0, x2
  411ed4:	mov	x20, x3
  411ed8:	add	x1, x3, #0x1
  411edc:	bl	440120 <argp_parse@@Base+0xc9e0>
  411ee0:	str	x0, [x19, #56]
  411ee4:	str	x20, [x19, #64]
  411ee8:	ldp	x19, x20, [sp, #16]
  411eec:	ldp	x29, x30, [sp], #32
  411ef0:	ret
  411ef4:	stp	x29, x30, [sp, #-48]!
  411ef8:	mov	x29, sp
  411efc:	stp	x19, x20, [sp, #16]
  411f00:	str	x21, [sp, #32]
  411f04:	mov	x21, x0
  411f08:	adrp	x20, 454000 <_obstack_memory_used@@Base+0x12e64>
  411f0c:	add	x20, x20, #0x200
  411f10:	adrp	x19, 453000 <_obstack_memory_used@@Base+0x11e64>
  411f14:	add	x19, x19, #0x818
  411f18:	b	411f34 <wcrtomb@plt+0xd314>
  411f1c:	mov	x1, x21
  411f20:	mov	x0, x19
  411f24:	bl	404720 <strcmp@plt>
  411f28:	cbz	w0, 411f60 <wcrtomb@plt+0xd340>
  411f2c:	ldr	x19, [x20, #32]!
  411f30:	cbz	x19, 411f5c <wcrtomb@plt+0xd33c>
  411f34:	ldrb	w1, [x20, #28]
  411f38:	cbz	w1, 411f1c <wcrtomb@plt+0xd2fc>
  411f3c:	mov	x0, x19
  411f40:	bl	403ff0 <strlen@plt>
  411f44:	mov	x2, x0
  411f48:	mov	x1, x21
  411f4c:	mov	x0, x19
  411f50:	bl	4043c0 <strncmp@plt>
  411f54:	cbnz	w0, 411f2c <wcrtomb@plt+0xd30c>
  411f58:	b	411f60 <wcrtomb@plt+0xd340>
  411f5c:	mov	x20, x19
  411f60:	mov	x0, x20
  411f64:	ldp	x19, x20, [sp, #16]
  411f68:	ldr	x21, [sp, #32]
  411f6c:	ldp	x29, x30, [sp], #48
  411f70:	ret
  411f74:	stp	x29, x30, [sp, #-48]!
  411f78:	mov	x29, sp
  411f7c:	stp	x19, x20, [sp, #16]
  411f80:	stp	x21, x22, [sp, #32]
  411f84:	mov	x20, x0
  411f88:	mov	x22, x1
  411f8c:	cbnz	x0, 411fa8 <wcrtomb@plt+0xd388>
  411f90:	ldp	x19, x20, [sp, #16]
  411f94:	ldp	x21, x22, [sp, #32]
  411f98:	ldp	x29, x30, [sp], #48
  411f9c:	ret
  411fa0:	ldr	x20, [x20]
  411fa4:	cbz	x20, 411f90 <wcrtomb@plt+0xd370>
  411fa8:	ldr	x0, [x20, #8]
  411fac:	bl	411ef4 <wcrtomb@plt+0xd2d4>
  411fb0:	mov	x19, x0
  411fb4:	cbz	x0, 411fa0 <wcrtomb@plt+0xd380>
  411fb8:	ldr	x21, [x20, #16]
  411fbc:	mov	x0, x21
  411fc0:	bl	403ff0 <strlen@plt>
  411fc4:	ldr	x4, [x19, #16]
  411fc8:	mov	x3, x0
  411fcc:	mov	x2, x21
  411fd0:	ldr	x1, [x19]
  411fd4:	mov	x0, x22
  411fd8:	blr	x4
  411fdc:	b	411fa0 <wcrtomb@plt+0xd380>
  411fe0:	stp	x29, x30, [sp, #-48]!
  411fe4:	mov	x29, sp
  411fe8:	stp	x19, x20, [sp, #16]
  411fec:	stp	x21, x22, [sp, #32]
  411ff0:	mov	x22, x0
  411ff4:	mov	x19, x1
  411ff8:	mov	x20, x2
  411ffc:	mov	x21, x3
  412000:	mov	x0, x1
  412004:	bl	411ef4 <wcrtomb@plt+0xd2d4>
  412008:	cbz	x0, 412030 <wcrtomb@plt+0xd410>
  41200c:	ldr	w1, [x0, #24]
  412010:	tbz	w1, #1, 412030 <wcrtomb@plt+0xd410>
  412014:	ldr	x4, [x0, #16]
  412018:	mov	x3, x21
  41201c:	mov	x2, x20
  412020:	mov	x1, x19
  412024:	mov	x0, x22
  412028:	blr	x4
  41202c:	b	412040 <wcrtomb@plt+0xd420>
  412030:	mov	x2, x20
  412034:	mov	x1, x19
  412038:	mov	x0, x22
  41203c:	bl	4117ac <wcrtomb@plt+0xcb8c>
  412040:	ldp	x19, x20, [sp, #16]
  412044:	ldp	x21, x22, [sp, #32]
  412048:	ldp	x29, x30, [sp], #48
  41204c:	ret
  412050:	stp	x29, x30, [sp, #-112]!
  412054:	mov	x29, sp
  412058:	stp	x19, x20, [sp, #16]
  41205c:	stp	x21, x22, [sp, #32]
  412060:	stp	x23, x24, [sp, #48]
  412064:	mov	x20, x1
  412068:	mov	x22, x2
  41206c:	mov	x23, x3
  412070:	ldr	x21, [x1]
  412074:	ldrb	w4, [x21]
  412078:	cmp	w4, #0x20
  41207c:	ccmp	w4, #0x9, #0x4, ne  // ne = any
  412080:	b.ne	412108 <wcrtomb@plt+0xd4e8>  // b.any
  412084:	mov	x19, x21
  412088:	ldrb	w4, [x19, #1]!
  41208c:	cmp	w4, #0x20
  412090:	ccmp	w4, #0x9, #0x4, ne  // ne = any
  412094:	b.eq	412088 <wcrtomb@plt+0xd468>  // b.none
  412098:	sub	w1, w4, #0x30
  41209c:	cmp	w1, #0x9
  4120a0:	b.ls	412110 <wcrtomb@plt+0xd4f0>  // b.plast
  4120a4:	mov	w19, #0x0                   	// #0
  4120a8:	cbz	w4, 4120f0 <wcrtomb@plt+0xd4d0>
  4120ac:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4120b0:	ldr	x0, [x0, #944]
  4120b4:	cbz	x0, 4120bc <wcrtomb@plt+0xd49c>
  4120b8:	blr	x0
  4120bc:	mov	w2, #0x5                   	// #5
  4120c0:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  4120c4:	add	x1, x1, #0xd90
  4120c8:	mov	x0, #0x0                   	// #0
  4120cc:	bl	4049c0 <dcgettext@plt>
  4120d0:	mov	x2, x0
  4120d4:	mov	w1, #0x0                   	// #0
  4120d8:	mov	w0, #0x0                   	// #0
  4120dc:	bl	404050 <error@plt>
  4120e0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4120e4:	mov	w1, #0x2                   	// #2
  4120e8:	str	w1, [x0, #3392]
  4120ec:	mov	w19, #0x0                   	// #0
  4120f0:	mov	w0, w19
  4120f4:	ldp	x19, x20, [sp, #16]
  4120f8:	ldp	x21, x22, [sp, #32]
  4120fc:	ldp	x23, x24, [sp, #48]
  412100:	ldp	x29, x30, [sp], #112
  412104:	ret
  412108:	mov	x19, x21
  41210c:	b	412098 <wcrtomb@plt+0xd478>
  412110:	stp	x25, x26, [sp, #64]
  412114:	ldr	x24, [x0, #16]
  412118:	ldr	x25, [x0, #8]
  41211c:	mov	w3, #0x0                   	// #0
  412120:	mov	w2, #0xa                   	// #10
  412124:	add	x1, sp, #0x68
  412128:	mov	x0, x19
  41212c:	bl	4044c0 <__strtoul_internal@plt>
  412130:	add	x24, x24, x25
  412134:	sub	x24, x24, x21
  412138:	cmp	x24, x0
  41213c:	b.cc	4121ac <wcrtomb@plt+0xd58c>  // b.lo, b.ul, b.last
  412140:	add	x21, x21, x0
  412144:	ldr	x0, [sp, #104]
  412148:	ldrb	w1, [x0]
  41214c:	cmp	w1, #0x20
  412150:	cset	w25, eq  // eq = none
  412154:	cmp	w1, #0x9
  412158:	csinc	w25, w25, wzr, ne  // ne = any
  41215c:	cbnz	w25, 412208 <wcrtomb@plt+0xd5e8>
  412160:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  412164:	ldr	x0, [x0, #944]
  412168:	cbz	x0, 412170 <wcrtomb@plt+0xd550>
  41216c:	blr	x0
  412170:	mov	w2, #0x5                   	// #5
  412174:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  412178:	add	x1, x1, #0xdf0
  41217c:	mov	x0, #0x0                   	// #0
  412180:	bl	4049c0 <dcgettext@plt>
  412184:	mov	x2, x0
  412188:	mov	w1, #0x0                   	// #0
  41218c:	mov	w0, #0x0                   	// #0
  412190:	bl	404050 <error@plt>
  412194:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  412198:	mov	w1, #0x2                   	// #2
  41219c:	str	w1, [x0, #3392]
  4121a0:	mov	w19, #0x0                   	// #0
  4121a4:	ldp	x25, x26, [sp, #64]
  4121a8:	b	4120f0 <wcrtomb@plt+0xd4d0>
  4121ac:	ldr	x20, [sp, #104]
  4121b0:	sub	x20, x20, x19
  4121b4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4121b8:	ldr	x0, [x0, #944]
  4121bc:	cbz	x0, 4121c4 <wcrtomb@plt+0xd5a4>
  4121c0:	blr	x0
  4121c4:	mov	w2, #0x5                   	// #5
  4121c8:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  4121cc:	add	x1, x1, #0xdc0
  4121d0:	mov	x0, #0x0                   	// #0
  4121d4:	bl	4049c0 <dcgettext@plt>
  4121d8:	mov	x4, x19
  4121dc:	mov	w3, w20
  4121e0:	mov	x2, x0
  4121e4:	mov	w1, #0x0                   	// #0
  4121e8:	mov	w0, #0x0                   	// #0
  4121ec:	bl	404050 <error@plt>
  4121f0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4121f4:	mov	w1, #0x2                   	// #2
  4121f8:	str	w1, [x0, #3392]
  4121fc:	mov	w19, #0x0                   	// #0
  412200:	ldp	x25, x26, [sp, #64]
  412204:	b	4120f0 <wcrtomb@plt+0xd4d0>
  412208:	str	x27, [sp, #80]
  41220c:	mov	x27, x0
  412210:	ldrb	w1, [x27, #1]!
  412214:	cmp	w1, #0x20
  412218:	cset	w19, eq  // eq = none
  41221c:	cmp	w1, #0x9
  412220:	csinc	w19, w19, wzr, ne  // ne = any
  412224:	cbnz	w19, 412210 <wcrtomb@plt+0xd5f0>
  412228:	cmp	x0, x27
  41222c:	b.eq	4122b4 <wcrtomb@plt+0xd694>  // b.none
  412230:	mov	w1, #0x3d                  	// #61
  412234:	mov	x0, x27
  412238:	bl	404870 <strchr@plt>
  41223c:	mov	x24, x0
  412240:	cmp	x0, #0x0
  412244:	cset	w26, eq  // eq = none
  412248:	cmp	x21, x0
  41224c:	cset	w0, ls  // ls = plast
  412250:	orr	w26, w26, w0
  412254:	cbnz	w26, 4122bc <wcrtomb@plt+0xd69c>
  412258:	ldurb	w0, [x21, #-1]
  41225c:	cmp	w0, #0xa
  412260:	b.eq	412308 <wcrtomb@plt+0xd6e8>  // b.none
  412264:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  412268:	ldr	x0, [x0, #944]
  41226c:	cbz	x0, 412274 <wcrtomb@plt+0xd654>
  412270:	blr	x0
  412274:	mov	w2, #0x5                   	// #5
  412278:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  41227c:	add	x1, x1, #0xe58
  412280:	mov	x0, #0x0                   	// #0
  412284:	bl	4049c0 <dcgettext@plt>
  412288:	mov	x2, x0
  41228c:	mov	w1, #0x0                   	// #0
  412290:	mov	w0, #0x0                   	// #0
  412294:	bl	404050 <error@plt>
  412298:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41229c:	mov	w1, #0x2                   	// #2
  4122a0:	str	w1, [x0, #3392]
  4122a4:	mov	w19, w26
  4122a8:	ldp	x25, x26, [sp, #64]
  4122ac:	ldr	x27, [sp, #80]
  4122b0:	b	4120f0 <wcrtomb@plt+0xd4d0>
  4122b4:	ldr	x27, [sp, #80]
  4122b8:	b	412160 <wcrtomb@plt+0xd540>
  4122bc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4122c0:	ldr	x0, [x0, #944]
  4122c4:	cbz	x0, 4122cc <wcrtomb@plt+0xd6ac>
  4122c8:	blr	x0
  4122cc:	mov	w2, #0x5                   	// #5
  4122d0:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  4122d4:	add	x1, x1, #0xe28
  4122d8:	mov	x0, #0x0                   	// #0
  4122dc:	bl	4049c0 <dcgettext@plt>
  4122e0:	mov	x2, x0
  4122e4:	mov	w1, #0x0                   	// #0
  4122e8:	mov	w0, #0x0                   	// #0
  4122ec:	bl	404050 <error@plt>
  4122f0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4122f4:	mov	w1, #0x2                   	// #2
  4122f8:	str	w1, [x0, #3392]
  4122fc:	ldp	x25, x26, [sp, #64]
  412300:	ldr	x27, [sp, #80]
  412304:	b	4120f0 <wcrtomb@plt+0xd4d0>
  412308:	sturb	wzr, [x21, #-1]
  41230c:	strb	wzr, [x24]
  412310:	sub	x3, x21, x24
  412314:	sub	x3, x3, #0x2
  412318:	add	x2, x24, #0x1
  41231c:	mov	x1, x27
  412320:	mov	x0, x23
  412324:	blr	x22
  412328:	mov	w0, #0x3d                  	// #61
  41232c:	strb	w0, [x24]
  412330:	mov	w0, #0xa                   	// #10
  412334:	sturb	w0, [x21, #-1]
  412338:	str	x21, [x20]
  41233c:	mov	w19, w25
  412340:	ldp	x25, x26, [sp, #64]
  412344:	ldr	x27, [sp, #80]
  412348:	b	4120f0 <wcrtomb@plt+0xd4d0>
  41234c:	stp	x29, x30, [sp, #-96]!
  412350:	mov	x29, sp
  412354:	stp	x19, x20, [sp, #16]
  412358:	stp	x21, x22, [sp, #32]
  41235c:	mov	x19, x0
  412360:	mov	x20, x1
  412364:	mov	x0, x2
  412368:	mov	x22, x3
  41236c:	add	x1, sp, #0x48
  412370:	bl	438be8 <argp_parse@@Base+0x54a8>
  412374:	mov	x21, x0
  412378:	add	x1, sp, #0x30
  41237c:	mov	x0, x22
  412380:	bl	438ce8 <argp_parse@@Base+0x55a8>
  412384:	mov	x22, x0
  412388:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41238c:	ldr	x0, [x0, #944]
  412390:	cbz	x0, 412398 <wcrtomb@plt+0xd778>
  412394:	blr	x0
  412398:	mov	w2, #0x5                   	// #5
  41239c:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  4123a0:	add	x1, x1, #0xe88
  4123a4:	mov	x0, #0x0                   	// #0
  4123a8:	bl	4049c0 <dcgettext@plt>
  4123ac:	mov	x6, x22
  4123b0:	mov	x5, x21
  4123b4:	mov	x4, x20
  4123b8:	mov	x3, x19
  4123bc:	mov	x2, x0
  4123c0:	mov	w1, #0x0                   	// #0
  4123c4:	mov	w0, #0x0                   	// #0
  4123c8:	bl	404050 <error@plt>
  4123cc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4123d0:	mov	w1, #0x2                   	// #2
  4123d4:	str	w1, [x0, #3392]
  4123d8:	ldp	x19, x20, [sp, #16]
  4123dc:	ldp	x21, x22, [sp, #32]
  4123e0:	ldp	x29, x30, [sp], #96
  4123e4:	ret
  4123e8:	stp	x29, x30, [sp, #-80]!
  4123ec:	mov	x29, sp
  4123f0:	stp	x19, x20, [sp, #16]
  4123f4:	stp	x21, x22, [sp, #32]
  4123f8:	stp	x23, x24, [sp, #48]
  4123fc:	mov	x22, x0
  412400:	mov	x19, x1
  412404:	mov	x23, x2
  412408:	mov	x24, x3
  41240c:	mov	x21, x4
  412410:	add	x1, sp, #0x48
  412414:	mov	x0, x19
  412418:	bl	41abbc <wcrtomb@plt+0x15f9c>
  41241c:	mov	x20, x0
  412420:	bl	404ad0 <__errno_location@plt>
  412424:	ldr	w1, [x0]
  412428:	cmp	w1, #0x16
  41242c:	b.eq	412450 <wcrtomb@plt+0xd830>  // b.none
  412430:	ldr	x0, [sp, #72]
  412434:	ldrb	w0, [x0]
  412438:	cbnz	w0, 412450 <wcrtomb@plt+0xd830>
  41243c:	cmp	w1, #0x22
  412440:	b.eq	4124b0 <wcrtomb@plt+0xd890>  // b.none
  412444:	str	x20, [x22]
  412448:	mov	w0, #0x1                   	// #1
  41244c:	b	41249c <wcrtomb@plt+0xd87c>
  412450:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  412454:	ldr	x0, [x0, #944]
  412458:	cbz	x0, 412460 <wcrtomb@plt+0xd840>
  41245c:	blr	x0
  412460:	mov	w2, #0x5                   	// #5
  412464:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  412468:	add	x1, x1, #0xeb8
  41246c:	mov	x0, #0x0                   	// #0
  412470:	bl	4049c0 <dcgettext@plt>
  412474:	mov	x4, x19
  412478:	mov	x3, x21
  41247c:	mov	x2, x0
  412480:	mov	w1, #0x0                   	// #0
  412484:	mov	w0, #0x0                   	// #0
  412488:	bl	404050 <error@plt>
  41248c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  412490:	mov	w1, #0x2                   	// #2
  412494:	str	w1, [x0, #3392]
  412498:	mov	w0, #0x0                   	// #0
  41249c:	ldp	x19, x20, [sp, #16]
  4124a0:	ldp	x21, x22, [sp, #32]
  4124a4:	ldp	x23, x24, [sp, #48]
  4124a8:	ldp	x29, x30, [sp], #80
  4124ac:	ret
  4124b0:	mov	x3, x24
  4124b4:	mov	x2, x23
  4124b8:	mov	x1, x19
  4124bc:	mov	x0, x21
  4124c0:	bl	41234c <wcrtomb@plt+0xd72c>
  4124c4:	mov	w0, #0x0                   	// #0
  4124c8:	b	41249c <wcrtomb@plt+0xd87c>
  4124cc:	stp	x29, x30, [sp, #-48]!
  4124d0:	mov	x29, sp
  4124d4:	str	x19, [sp, #16]
  4124d8:	mov	x19, x0
  4124dc:	mov	x4, x3
  4124e0:	mov	x3, x2
  4124e4:	mov	x2, #0x0                   	// #0
  4124e8:	add	x0, sp, #0x28
  4124ec:	bl	4123e8 <wcrtomb@plt+0xd7c8>
  4124f0:	mov	w1, w0
  4124f4:	tst	w0, #0xff
  4124f8:	b.eq	412504 <wcrtomb@plt+0xd8e4>  // b.none
  4124fc:	ldr	x0, [sp, #40]
  412500:	str	x0, [x19]
  412504:	mov	w0, w1
  412508:	ldr	x19, [sp, #16]
  41250c:	ldp	x29, x30, [sp], #48
  412510:	ret
  412514:	stp	x29, x30, [sp, #-32]!
  412518:	mov	x29, sp
  41251c:	mov	x0, x2
  412520:	mov	x3, x1
  412524:	mov	x2, #0xffffffffffffffff    	// #-1
  412528:	mov	x1, x0
  41252c:	add	x0, sp, #0x18
  412530:	bl	4124cc <wcrtomb@plt+0xd8ac>
  412534:	and	w0, w0, #0xff
  412538:	cbz	w0, 412548 <wcrtomb@plt+0xd928>
  41253c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  412540:	ldr	x1, [sp, #24]
  412544:	str	x1, [x0, #3952]
  412548:	ldp	x29, x30, [sp], #32
  41254c:	ret
  412550:	stp	x29, x30, [sp, #-32]!
  412554:	mov	x29, sp
  412558:	mov	x0, x2
  41255c:	mov	x3, x1
  412560:	mov	x2, #0xffffffffffffffff    	// #-1
  412564:	mov	x1, x0
  412568:	add	x0, sp, #0x18
  41256c:	bl	4124cc <wcrtomb@plt+0xd8ac>
  412570:	and	w0, w0, #0xff
  412574:	cbz	w0, 412584 <wcrtomb@plt+0xd964>
  412578:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41257c:	ldr	x1, [sp, #24]
  412580:	str	x1, [x0, #3936]
  412584:	ldp	x29, x30, [sp], #32
  412588:	ret
  41258c:	stp	x29, x30, [sp, #-64]!
  412590:	mov	x29, sp
  412594:	stp	x19, x20, [sp, #16]
  412598:	str	x21, [sp, #32]
  41259c:	mov	x19, x0
  4125a0:	mov	x20, x1
  4125a4:	mov	x21, x2
  4125a8:	mov	x3, x1
  4125ac:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  4125b0:	mov	x1, x21
  4125b4:	add	x0, sp, #0x38
  4125b8:	bl	4124cc <wcrtomb@plt+0xd8ac>
  4125bc:	and	w0, w0, #0xff
  4125c0:	cbz	w0, 4125ec <wcrtomb@plt+0xd9cc>
  4125c4:	ldr	x0, [x19, #288]
  4125c8:	ldr	x1, [x19, #296]
  4125cc:	cmp	x0, x1
  4125d0:	b.cs	4125fc <wcrtomb@plt+0xd9dc>  // b.hs, b.nlast
  4125d4:	ldr	x1, [x19, #304]
  4125d8:	add	x2, x0, #0x1
  4125dc:	str	x2, [x19, #288]
  4125e0:	add	x0, x1, x0, lsl #4
  4125e4:	ldr	x1, [sp, #56]
  4125e8:	str	x1, [x0, #8]
  4125ec:	ldp	x19, x20, [sp, #16]
  4125f0:	ldr	x21, [sp, #32]
  4125f4:	ldp	x29, x30, [sp], #64
  4125f8:	ret
  4125fc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  412600:	ldr	x0, [x0, #944]
  412604:	cbz	x0, 41260c <wcrtomb@plt+0xd9ec>
  412608:	blr	x0
  41260c:	mov	w2, #0x5                   	// #5
  412610:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  412614:	add	x1, x1, #0xee8
  412618:	mov	x0, #0x0                   	// #0
  41261c:	bl	4049c0 <dcgettext@plt>
  412620:	mov	x4, x21
  412624:	mov	x3, x20
  412628:	mov	x2, x0
  41262c:	mov	w1, #0x0                   	// #0
  412630:	mov	w0, #0x0                   	// #0
  412634:	bl	404050 <error@plt>
  412638:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41263c:	mov	w1, #0x2                   	// #2
  412640:	str	w1, [x0, #3392]
  412644:	b	4125ec <wcrtomb@plt+0xd9cc>
  412648:	stp	x29, x30, [sp, #-48]!
  41264c:	mov	x29, sp
  412650:	stp	x19, x20, [sp, #16]
  412654:	mov	x20, x0
  412658:	mov	x19, x2
  41265c:	mov	x3, x1
  412660:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  412664:	mov	x1, x19
  412668:	add	x0, sp, #0x28
  41266c:	bl	4124cc <wcrtomb@plt+0xd8ac>
  412670:	and	w0, w0, #0xff
  412674:	cbz	w0, 412698 <wcrtomb@plt+0xda78>
  412678:	ldr	x0, [x20, #288]
  41267c:	ldr	x1, [x20, #296]
  412680:	cmp	x0, x1
  412684:	b.cs	4126a4 <wcrtomb@plt+0xda84>  // b.hs, b.nlast
  412688:	ldr	x1, [x20, #304]
  41268c:	lsl	x0, x0, #4
  412690:	ldr	x2, [sp, #40]
  412694:	str	x2, [x1, x0]
  412698:	ldp	x19, x20, [sp, #16]
  41269c:	ldp	x29, x30, [sp], #48
  4126a0:	ret
  4126a4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4126a8:	ldr	x0, [x0, #944]
  4126ac:	cbz	x0, 4126b4 <wcrtomb@plt+0xda94>
  4126b0:	blr	x0
  4126b4:	mov	w2, #0x5                   	// #5
  4126b8:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  4126bc:	add	x1, x1, #0xee8
  4126c0:	mov	x0, #0x0                   	// #0
  4126c4:	bl	4049c0 <dcgettext@plt>
  4126c8:	mov	x4, x19
  4126cc:	adrp	x3, 453000 <_obstack_memory_used@@Base+0x11e64>
  4126d0:	add	x3, x3, #0xf10
  4126d4:	mov	x2, x0
  4126d8:	mov	w1, #0x0                   	// #0
  4126dc:	mov	w0, #0x0                   	// #0
  4126e0:	bl	404050 <error@plt>
  4126e4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4126e8:	mov	w1, #0x2                   	// #2
  4126ec:	str	w1, [x0, #3392]
  4126f0:	b	412698 <wcrtomb@plt+0xda78>
  4126f4:	stp	x29, x30, [sp, #-48]!
  4126f8:	mov	x29, sp
  4126fc:	str	x19, [sp, #16]
  412700:	mov	x19, x0
  412704:	mov	x0, x2
  412708:	mov	x3, x1
  41270c:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  412710:	mov	x1, x0
  412714:	add	x0, sp, #0x28
  412718:	bl	4124cc <wcrtomb@plt+0xd8ac>
  41271c:	and	w0, w0, #0xff
  412720:	cbz	w0, 412734 <wcrtomb@plt+0xdb14>
  412724:	mov	w0, #0x1                   	// #1
  412728:	strb	w0, [x19, #320]
  41272c:	ldr	x0, [sp, #40]
  412730:	str	x0, [x19, #312]
  412734:	ldr	x19, [sp, #16]
  412738:	ldp	x29, x30, [sp], #48
  41273c:	ret
  412740:	stp	x29, x30, [sp, #-48]!
  412744:	mov	x29, sp
  412748:	str	x19, [sp, #16]
  41274c:	mov	x19, x0
  412750:	mov	x0, x2
  412754:	mov	x3, x1
  412758:	mov	x2, #0xffffffff            	// #4294967295
  41275c:	mov	x1, x0
  412760:	add	x0, sp, #0x28
  412764:	bl	4124cc <wcrtomb@plt+0xd8ac>
  412768:	and	w1, w0, #0xff
  41276c:	cbz	w1, 412778 <wcrtomb@plt+0xdb58>
  412770:	ldr	x0, [sp, #40]
  412774:	str	w0, [x19, #280]
  412778:	ldr	x19, [sp, #16]
  41277c:	ldp	x29, x30, [sp], #48
  412780:	ret
  412784:	stp	x29, x30, [sp, #-48]!
  412788:	mov	x29, sp
  41278c:	str	x19, [sp, #16]
  412790:	mov	x19, x0
  412794:	mov	x0, x2
  412798:	mov	x3, x1
  41279c:	mov	x2, #0xffffffff            	// #4294967295
  4127a0:	mov	x1, x0
  4127a4:	add	x0, sp, #0x28
  4127a8:	bl	4124cc <wcrtomb@plt+0xd8ac>
  4127ac:	and	w1, w0, #0xff
  4127b0:	cbz	w1, 4127bc <wcrtomb@plt+0xdb9c>
  4127b4:	ldr	x0, [sp, #40]
  4127b8:	str	w0, [x19, #276]
  4127bc:	ldr	x19, [sp, #16]
  4127c0:	ldp	x29, x30, [sp], #48
  4127c4:	ret
  4127c8:	stp	x29, x30, [sp, #-48]!
  4127cc:	mov	x29, sp
  4127d0:	str	x19, [sp, #16]
  4127d4:	mov	x19, x0
  4127d8:	mov	x0, x2
  4127dc:	mov	x3, x1
  4127e0:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  4127e4:	mov	x1, x0
  4127e8:	add	x0, sp, #0x28
  4127ec:	bl	4124cc <wcrtomb@plt+0xd8ac>
  4127f0:	and	w1, w0, #0xff
  4127f4:	cbz	w1, 412800 <wcrtomb@plt+0xdbe0>
  4127f8:	ldr	x0, [sp, #40]
  4127fc:	str	x0, [x19, #136]
  412800:	ldr	x19, [sp, #16]
  412804:	ldp	x29, x30, [sp], #48
  412808:	ret
  41280c:	stp	x29, x30, [sp, #-48]!
  412810:	mov	x29, sp
  412814:	str	x19, [sp, #16]
  412818:	mov	x19, x0
  41281c:	mov	x0, x2
  412820:	mov	x4, x1
  412824:	mov	x3, #0xffffffff            	// #4294967295
  412828:	mov	x2, #0x0                   	// #0
  41282c:	mov	x1, x0
  412830:	add	x0, sp, #0x28
  412834:	bl	4123e8 <wcrtomb@plt+0xd7c8>
  412838:	and	w1, w0, #0xff
  41283c:	cbz	w1, 412848 <wcrtomb@plt+0xdc28>
  412840:	ldr	x0, [sp, #40]
  412844:	str	w0, [x19, #112]
  412848:	ldr	x19, [sp, #16]
  41284c:	ldp	x29, x30, [sp], #48
  412850:	ret
  412854:	stp	x29, x30, [sp, #-48]!
  412858:	mov	x29, sp
  41285c:	str	x19, [sp, #16]
  412860:	mov	x19, x0
  412864:	mov	x0, x2
  412868:	mov	x4, x1
  41286c:	mov	x3, #0xffffffff            	// #4294967295
  412870:	mov	x2, #0x0                   	// #0
  412874:	mov	x1, x0
  412878:	add	x0, sp, #0x28
  41287c:	bl	4123e8 <wcrtomb@plt+0xd7c8>
  412880:	and	w1, w0, #0xff
  412884:	cbz	w1, 412890 <wcrtomb@plt+0xdc70>
  412888:	ldr	x0, [sp, #40]
  41288c:	str	w0, [x19, #116]
  412890:	ldr	x19, [sp, #16]
  412894:	ldp	x29, x30, [sp], #48
  412898:	ret
  41289c:	stp	x29, x30, [sp, #-64]!
  4128a0:	mov	x29, sp
  4128a4:	stp	x19, x20, [sp, #16]
  4128a8:	str	x21, [sp, #32]
  4128ac:	mov	x20, x0
  4128b0:	mov	x19, x1
  4128b4:	mov	x21, x2
  4128b8:	mov	w2, #0x1                   	// #1
  4128bc:	add	x1, sp, #0x38
  4128c0:	mov	x0, x19
  4128c4:	bl	41ae0c <wcrtomb@plt+0x161ec>
  4128c8:	tbnz	x1, #63, 4128e8 <wcrtomb@plt+0xdcc8>
  4128cc:	str	x0, [x20]
  4128d0:	str	x1, [x20, #8]
  4128d4:	mov	w0, #0x1                   	// #1
  4128d8:	ldp	x19, x20, [sp, #16]
  4128dc:	ldr	x21, [sp, #32]
  4128e0:	ldp	x29, x30, [sp], #64
  4128e4:	ret
  4128e8:	ldr	x0, [sp, #56]
  4128ec:	cmp	x0, x19
  4128f0:	b.ls	4128fc <wcrtomb@plt+0xdcdc>  // b.plast
  4128f4:	ldrb	w0, [x0]
  4128f8:	cbz	w0, 41294c <wcrtomb@plt+0xdd2c>
  4128fc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  412900:	ldr	x0, [x0, #944]
  412904:	cbz	x0, 41290c <wcrtomb@plt+0xdcec>
  412908:	blr	x0
  41290c:	mov	w2, #0x5                   	// #5
  412910:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  412914:	add	x1, x1, #0xeb8
  412918:	mov	x0, #0x0                   	// #0
  41291c:	bl	4049c0 <dcgettext@plt>
  412920:	mov	x4, x19
  412924:	mov	x3, x21
  412928:	mov	x2, x0
  41292c:	mov	w1, #0x0                   	// #0
  412930:	mov	w0, #0x0                   	// #0
  412934:	bl	404050 <error@plt>
  412938:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41293c:	mov	w1, #0x2                   	// #2
  412940:	str	w1, [x0, #3392]
  412944:	mov	w0, #0x0                   	// #0
  412948:	b	4128d8 <wcrtomb@plt+0xdcb8>
  41294c:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
  412950:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
  412954:	mov	x1, x19
  412958:	mov	x0, x21
  41295c:	bl	41234c <wcrtomb@plt+0xd72c>
  412960:	mov	w0, #0x0                   	// #0
  412964:	b	4128d8 <wcrtomb@plt+0xdcb8>
  412968:	stp	x29, x30, [sp, #-48]!
  41296c:	mov	x29, sp
  412970:	str	x19, [sp, #16]
  412974:	mov	x19, x0
  412978:	mov	x0, x2
  41297c:	mov	x2, x1
  412980:	mov	x1, x0
  412984:	add	x0, sp, #0x20
  412988:	bl	41289c <wcrtomb@plt+0xdc7c>
  41298c:	and	w1, w0, #0xff
  412990:	cbz	w1, 41299c <wcrtomb@plt+0xdd7c>
  412994:	ldp	x0, x1, [sp, #32]
  412998:	stp	x0, x1, [x19, #232]
  41299c:	ldr	x19, [sp, #16]
  4129a0:	ldp	x29, x30, [sp], #48
  4129a4:	ret
  4129a8:	stp	x29, x30, [sp, #-48]!
  4129ac:	mov	x29, sp
  4129b0:	str	x19, [sp, #16]
  4129b4:	mov	x19, x0
  4129b8:	mov	x0, x2
  4129bc:	mov	x2, x1
  4129c0:	mov	x1, x0
  4129c4:	add	x0, sp, #0x20
  4129c8:	bl	41289c <wcrtomb@plt+0xdc7c>
  4129cc:	and	w1, w0, #0xff
  4129d0:	cbz	w1, 4129dc <wcrtomb@plt+0xddbc>
  4129d4:	ldp	x0, x1, [sp, #32]
  4129d8:	stp	x0, x1, [x19, #248]
  4129dc:	ldr	x19, [sp, #16]
  4129e0:	ldp	x29, x30, [sp], #48
  4129e4:	ret
  4129e8:	stp	x29, x30, [sp, #-48]!
  4129ec:	mov	x29, sp
  4129f0:	str	x19, [sp, #16]
  4129f4:	mov	x19, x0
  4129f8:	mov	x0, x2
  4129fc:	mov	x2, x1
  412a00:	mov	x1, x0
  412a04:	add	x0, sp, #0x20
  412a08:	bl	41289c <wcrtomb@plt+0xdc7c>
  412a0c:	and	w1, w0, #0xff
  412a10:	cbz	w1, 412a1c <wcrtomb@plt+0xddfc>
  412a14:	ldp	x0, x1, [sp, #32]
  412a18:	stp	x0, x1, [x19, #216]
  412a1c:	ldr	x19, [sp, #16]
  412a20:	ldp	x29, x30, [sp], #48
  412a24:	ret
  412a28:	stp	x29, x30, [sp, #-64]!
  412a2c:	mov	x29, sp
  412a30:	stp	x19, x20, [sp, #16]
  412a34:	mov	x20, x1
  412a38:	mov	x19, x2
  412a3c:	add	x3, sp, #0x28
  412a40:	mov	x2, #0xffffffffffffffff    	// #-1
  412a44:	mov	x1, #0x0                   	// #0
  412a48:	bl	41ab94 <wcrtomb@plt+0x15f74>
  412a4c:	mov	x2, x0
  412a50:	mov	x1, x20
  412a54:	mov	x0, x19
  412a58:	bl	411c38 <wcrtomb@plt+0xd018>
  412a5c:	ldp	x19, x20, [sp, #16]
  412a60:	ldp	x29, x30, [sp], #64
  412a64:	ret
  412a68:	stp	x29, x30, [sp, #-16]!
  412a6c:	mov	x29, sp
  412a70:	ldr	x0, [x3]
  412a74:	bl	412a28 <wcrtomb@plt+0xde08>
  412a78:	ldp	x29, x30, [sp], #16
  412a7c:	ret
  412a80:	stp	x29, x30, [sp, #-16]!
  412a84:	mov	x29, sp
  412a88:	ldr	x0, [x3]
  412a8c:	bl	412a28 <wcrtomb@plt+0xde08>
  412a90:	ldp	x29, x30, [sp], #16
  412a94:	ret
  412a98:	stp	x29, x30, [sp, #-16]!
  412a9c:	mov	x29, sp
  412aa0:	ldr	x3, [x3]
  412aa4:	ldr	x0, [x0, #304]
  412aa8:	add	x3, x0, x3, lsl #4
  412aac:	ldr	x0, [x3, #8]
  412ab0:	bl	412a28 <wcrtomb@plt+0xde08>
  412ab4:	ldp	x29, x30, [sp], #16
  412ab8:	ret
  412abc:	stp	x29, x30, [sp, #-16]!
  412ac0:	mov	x29, sp
  412ac4:	ldr	x3, [x3]
  412ac8:	ldr	x0, [x0, #304]
  412acc:	lsl	x3, x3, #4
  412ad0:	ldr	x0, [x0, x3]
  412ad4:	bl	412a28 <wcrtomb@plt+0xde08>
  412ad8:	ldp	x29, x30, [sp], #16
  412adc:	ret
  412ae0:	stp	x29, x30, [sp, #-16]!
  412ae4:	mov	x29, sp
  412ae8:	ldr	x0, [x0, #288]
  412aec:	bl	412a28 <wcrtomb@plt+0xde08>
  412af0:	ldp	x29, x30, [sp], #16
  412af4:	ret
  412af8:	stp	x29, x30, [sp, #-16]!
  412afc:	mov	x29, sp
  412b00:	ldr	w0, [x0, #280]
  412b04:	bl	412a28 <wcrtomb@plt+0xde08>
  412b08:	ldp	x29, x30, [sp], #16
  412b0c:	ret
  412b10:	stp	x29, x30, [sp, #-16]!
  412b14:	mov	x29, sp
  412b18:	ldr	w0, [x0, #276]
  412b1c:	bl	412a28 <wcrtomb@plt+0xde08>
  412b20:	ldp	x29, x30, [sp], #16
  412b24:	ret
  412b28:	stp	x29, x30, [sp, #-16]!
  412b2c:	mov	x29, sp
  412b30:	ldr	x0, [x0, #136]
  412b34:	bl	412a28 <wcrtomb@plt+0xde08>
  412b38:	ldp	x29, x30, [sp], #16
  412b3c:	ret
  412b40:	stp	x29, x30, [sp, #-48]!
  412b44:	mov	x29, sp
  412b48:	stp	x19, x20, [sp, #16]
  412b4c:	str	x21, [sp, #32]
  412b50:	mov	x21, x1
  412b54:	mov	x20, x2
  412b58:	mov	x19, x3
  412b5c:	mov	x0, x3
  412b60:	bl	4157f0 <wcrtomb@plt+0x10bd0>
  412b64:	mov	x3, x0
  412b68:	mov	x2, x19
  412b6c:	mov	x1, x21
  412b70:	mov	x0, x20
  412b74:	bl	411a90 <wcrtomb@plt+0xce70>
  412b78:	ldp	x19, x20, [sp, #16]
  412b7c:	ldr	x21, [sp, #32]
  412b80:	ldp	x29, x30, [sp], #48
  412b84:	ret
  412b88:	stp	x29, x30, [sp, #-96]!
  412b8c:	mov	x29, sp
  412b90:	stp	x19, x20, [sp, #16]
  412b94:	stp	x23, x24, [sp, #48]
  412b98:	mov	x20, x0
  412b9c:	mov	x24, x1
  412ba0:	mov	x19, x2
  412ba4:	str	xzr, [x0, #288]
  412ba8:	ldrb	w0, [x2]
  412bac:	sub	w0, w0, #0x30
  412bb0:	cmp	w0, #0x9
  412bb4:	b.hi	412bdc <wcrtomb@plt+0xdfbc>  // b.pmore
  412bb8:	stp	x21, x22, [sp, #32]
  412bbc:	str	x25, [sp, #64]
  412bc0:	bl	404ad0 <__errno_location@plt>
  412bc4:	mov	x21, x0
  412bc8:	mov	w25, #0x1                   	// #1
  412bcc:	mov	w22, #0xa                   	// #10
  412bd0:	b	412cbc <wcrtomb@plt+0xe09c>
  412bd4:	ldp	x21, x22, [sp, #32]
  412bd8:	ldr	x25, [sp, #64]
  412bdc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  412be0:	ldr	x0, [x0, #944]
  412be4:	cbz	x0, 412bec <wcrtomb@plt+0xdfcc>
  412be8:	blr	x0
  412bec:	mov	w2, #0x5                   	// #5
  412bf0:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  412bf4:	add	x1, x1, #0xeb8
  412bf8:	mov	x0, #0x0                   	// #0
  412bfc:	bl	4049c0 <dcgettext@plt>
  412c00:	mov	x4, x19
  412c04:	mov	x3, x24
  412c08:	mov	x2, x0
  412c0c:	mov	w1, #0x0                   	// #0
  412c10:	mov	w0, #0x0                   	// #0
  412c14:	bl	404050 <error@plt>
  412c18:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  412c1c:	mov	w1, #0x2                   	// #2
  412c20:	str	w1, [x0, #3392]
  412c24:	ldp	x19, x20, [sp, #16]
  412c28:	ldp	x23, x24, [sp, #48]
  412c2c:	ldp	x29, x30, [sp], #96
  412c30:	ret
  412c34:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
  412c38:	mov	x2, #0x0                   	// #0
  412c3c:	mov	x1, x19
  412c40:	mov	x0, x24
  412c44:	bl	41234c <wcrtomb@plt+0xd72c>
  412c48:	ldp	x21, x22, [sp, #32]
  412c4c:	ldr	x25, [sp, #64]
  412c50:	b	412c24 <wcrtomb@plt+0xe004>
  412c54:	ldr	w1, [x21]
  412c58:	cmp	w1, #0x22
  412c5c:	b.eq	412cec <wcrtomb@plt+0xe0cc>  // b.none
  412c60:	ldr	x1, [x20, #288]
  412c64:	ldr	x2, [x20, #296]
  412c68:	cmp	x1, x2
  412c6c:	b.cs	412d0c <wcrtomb@plt+0xe0ec>  // b.hs, b.nlast
  412c70:	ldr	x2, [x20, #304]
  412c74:	add	x3, x1, #0x1
  412c78:	str	x3, [x20, #288]
  412c7c:	lsl	x1, x1, #4
  412c80:	add	x3, x2, x1
  412c84:	str	x23, [x2, x1]
  412c88:	str	x0, [x3, #8]
  412c8c:	eor	w1, w25, #0x1
  412c90:	ldr	x3, [sp, #88]
  412c94:	ldrb	w0, [x3]
  412c98:	cbz	w0, 412db8 <wcrtomb@plt+0xe198>
  412c9c:	cmp	w0, #0x2c
  412ca0:	b.ne	412d60 <wcrtomb@plt+0xe140>  // b.any
  412ca4:	add	x19, x3, #0x1
  412ca8:	ldrb	w3, [x3, #1]
  412cac:	sub	w3, w3, #0x30
  412cb0:	cmp	w3, #0x9
  412cb4:	b.hi	412bd4 <wcrtomb@plt+0xdfb4>  // b.pmore
  412cb8:	mov	w25, w1
  412cbc:	str	wzr, [x21]
  412cc0:	mov	w3, #0x0                   	// #0
  412cc4:	mov	w2, w22
  412cc8:	add	x1, sp, #0x58
  412ccc:	mov	x0, x19
  412cd0:	bl	404390 <__strtol_internal@plt>
  412cd4:	cbz	w25, 412c54 <wcrtomb@plt+0xe034>
  412cd8:	ldr	w1, [x21]
  412cdc:	cmp	w1, #0x22
  412ce0:	b.eq	412c34 <wcrtomb@plt+0xe014>  // b.none
  412ce4:	mov	x23, x0
  412ce8:	b	412c8c <wcrtomb@plt+0xe06c>
  412cec:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
  412cf0:	mov	x2, #0x0                   	// #0
  412cf4:	mov	x1, x19
  412cf8:	mov	x0, x24
  412cfc:	bl	41234c <wcrtomb@plt+0xd72c>
  412d00:	ldp	x21, x22, [sp, #32]
  412d04:	ldr	x25, [sp, #64]
  412d08:	b	412c24 <wcrtomb@plt+0xe004>
  412d0c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  412d10:	ldr	x0, [x0, #944]
  412d14:	cbz	x0, 412d1c <wcrtomb@plt+0xe0fc>
  412d18:	blr	x0
  412d1c:	mov	w2, #0x5                   	// #5
  412d20:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  412d24:	add	x1, x1, #0xee8
  412d28:	mov	x0, #0x0                   	// #0
  412d2c:	bl	4049c0 <dcgettext@plt>
  412d30:	mov	x4, x19
  412d34:	mov	x3, x24
  412d38:	mov	x2, x0
  412d3c:	mov	w1, #0x0                   	// #0
  412d40:	mov	w0, #0x0                   	// #0
  412d44:	bl	404050 <error@plt>
  412d48:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  412d4c:	mov	w1, #0x2                   	// #2
  412d50:	str	w1, [x0, #3392]
  412d54:	ldp	x21, x22, [sp, #32]
  412d58:	ldr	x25, [sp, #64]
  412d5c:	b	412c24 <wcrtomb@plt+0xe004>
  412d60:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  412d64:	ldr	x0, [x0, #944]
  412d68:	cbz	x0, 412d70 <wcrtomb@plt+0xe150>
  412d6c:	blr	x0
  412d70:	mov	w2, #0x5                   	// #5
  412d74:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  412d78:	add	x1, x1, #0xf28
  412d7c:	mov	x0, #0x0                   	// #0
  412d80:	bl	4049c0 <dcgettext@plt>
  412d84:	ldr	x1, [sp, #88]
  412d88:	ldrb	w4, [x1]
  412d8c:	mov	x3, x24
  412d90:	mov	x2, x0
  412d94:	mov	w1, #0x0                   	// #0
  412d98:	mov	w0, #0x0                   	// #0
  412d9c:	bl	404050 <error@plt>
  412da0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  412da4:	mov	w1, #0x2                   	// #2
  412da8:	str	w1, [x0, #3392]
  412dac:	ldp	x21, x22, [sp, #32]
  412db0:	ldr	x25, [sp, #64]
  412db4:	b	412c24 <wcrtomb@plt+0xe004>
  412db8:	cbz	w25, 412e0c <wcrtomb@plt+0xe1ec>
  412dbc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  412dc0:	ldr	x0, [x0, #944]
  412dc4:	cbz	x0, 412dcc <wcrtomb@plt+0xe1ac>
  412dc8:	blr	x0
  412dcc:	mov	w2, #0x5                   	// #5
  412dd0:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  412dd4:	add	x1, x1, #0xf68
  412dd8:	mov	x0, #0x0                   	// #0
  412ddc:	bl	4049c0 <dcgettext@plt>
  412de0:	mov	x3, x24
  412de4:	mov	x2, x0
  412de8:	mov	w1, #0x0                   	// #0
  412dec:	mov	w0, #0x0                   	// #0
  412df0:	bl	404050 <error@plt>
  412df4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  412df8:	mov	w1, #0x2                   	// #2
  412dfc:	str	w1, [x0, #3392]
  412e00:	ldp	x21, x22, [sp, #32]
  412e04:	ldr	x25, [sp, #64]
  412e08:	b	412c24 <wcrtomb@plt+0xe004>
  412e0c:	ldp	x21, x22, [sp, #32]
  412e10:	ldr	x25, [sp, #64]
  412e14:	b	412c24 <wcrtomb@plt+0xe004>
  412e18:	stp	x29, x30, [sp, #-48]!
  412e1c:	mov	x29, sp
  412e20:	str	x19, [sp, #16]
  412e24:	mov	x19, x0
  412e28:	mov	x0, x2
  412e2c:	mov	x3, x1
  412e30:	mov	x2, #0xffffffffffffffff    	// #-1
  412e34:	mov	x1, x0
  412e38:	add	x0, sp, #0x28
  412e3c:	bl	4124cc <wcrtomb@plt+0xd8ac>
  412e40:	and	w1, w0, #0xff
  412e44:	cbnz	w1, 412e54 <wcrtomb@plt+0xe234>
  412e48:	ldr	x19, [sp, #16]
  412e4c:	ldp	x29, x30, [sp], #48
  412e50:	ret
  412e54:	ldr	x0, [sp, #40]
  412e58:	str	x0, [x19, #296]
  412e5c:	mov	x1, #0x10                  	// #16
  412e60:	bl	4400e8 <argp_parse@@Base+0xc9a8>
  412e64:	str	x0, [x19, #304]
  412e68:	str	xzr, [x19, #288]
  412e6c:	b	412e48 <wcrtomb@plt+0xe228>
  412e70:	stp	x29, x30, [sp, #-32]!
  412e74:	mov	x29, sp
  412e78:	stp	x19, x20, [sp, #16]
  412e7c:	mov	x19, x0
  412e80:	mov	x20, x2
  412e84:	mov	w1, #0x1                   	// #1
  412e88:	strb	w1, [x0, #321]
  412e8c:	mov	x1, x2
  412e90:	bl	4118a4 <wcrtomb@plt+0xcc84>
  412e94:	mov	x1, x20
  412e98:	add	x0, x19, #0x8
  412e9c:	bl	4118a4 <wcrtomb@plt+0xcc84>
  412ea0:	ldr	x0, [x19, #8]
  412ea4:	bl	434b80 <argp_parse@@Base+0x1440>
  412ea8:	strb	w0, [x19, #16]
  412eac:	ldp	x19, x20, [sp, #16]
  412eb0:	ldp	x29, x30, [sp], #32
  412eb4:	ret
  412eb8:	stp	x29, x30, [sp, #-64]!
  412ebc:	mov	x29, sp
  412ec0:	stp	x19, x20, [sp, #16]
  412ec4:	mov	x20, x2
  412ec8:	mov	x19, x3
  412ecc:	add	x2, sp, #0x20
  412ed0:	bl	41ad74 <wcrtomb@plt+0x16154>
  412ed4:	mov	x2, x0
  412ed8:	mov	x1, x20
  412edc:	mov	x0, x19
  412ee0:	bl	411c38 <wcrtomb@plt+0xd018>
  412ee4:	ldp	x19, x20, [sp, #16]
  412ee8:	ldp	x29, x30, [sp], #64
  412eec:	ret
  412ef0:	stp	x29, x30, [sp, #-16]!
  412ef4:	mov	x29, sp
  412ef8:	add	x0, x0, #0xe8
  412efc:	cmp	x3, #0x0
  412f00:	csel	x0, x0, x3, eq  // eq = none
  412f04:	mov	x3, x2
  412f08:	mov	x2, x1
  412f0c:	ldp	x0, x1, [x0]
  412f10:	bl	412eb8 <wcrtomb@plt+0xe298>
  412f14:	ldp	x29, x30, [sp], #16
  412f18:	ret
  412f1c:	stp	x29, x30, [sp, #-16]!
  412f20:	mov	x29, sp
  412f24:	mov	x3, x2
  412f28:	mov	x2, x1
  412f2c:	ldp	x0, x1, [x0, #248]
  412f30:	bl	412eb8 <wcrtomb@plt+0xe298>
  412f34:	ldp	x29, x30, [sp], #16
  412f38:	ret
  412f3c:	stp	x29, x30, [sp, #-16]!
  412f40:	mov	x29, sp
  412f44:	mov	x3, x2
  412f48:	mov	x2, x1
  412f4c:	ldp	x0, x1, [x0, #216]
  412f50:	bl	412eb8 <wcrtomb@plt+0xe298>
  412f54:	ldp	x29, x30, [sp], #16
  412f58:	ret
  412f5c:	stp	x29, x30, [sp, #-16]!
  412f60:	mov	x29, sp
  412f64:	ldr	x0, [x0, #136]
  412f68:	bl	412a28 <wcrtomb@plt+0xde08>
  412f6c:	ldp	x29, x30, [sp], #16
  412f70:	ret
  412f74:	stp	x29, x30, [sp, #-32]!
  412f78:	mov	x29, sp
  412f7c:	stp	x19, x20, [sp, #16]
  412f80:	mov	x19, x0
  412f84:	ldrb	w0, [x0, #321]
  412f88:	cbz	w0, 412f98 <wcrtomb@plt+0xe378>
  412f8c:	ldp	x19, x20, [sp, #16]
  412f90:	ldp	x29, x30, [sp], #32
  412f94:	ret
  412f98:	mov	x20, x2
  412f9c:	mov	x1, x2
  412fa0:	mov	x0, x19
  412fa4:	bl	4118a4 <wcrtomb@plt+0xcc84>
  412fa8:	mov	x1, x20
  412fac:	add	x0, x19, #0x8
  412fb0:	bl	4118a4 <wcrtomb@plt+0xcc84>
  412fb4:	ldr	x0, [x19, #8]
  412fb8:	bl	434b80 <argp_parse@@Base+0x1440>
  412fbc:	strb	w0, [x19, #16]
  412fc0:	b	412f8c <wcrtomb@plt+0xe36c>
  412fc4:	stp	x29, x30, [sp, #-64]!
  412fc8:	mov	x29, sp
  412fcc:	stp	x19, x20, [sp, #16]
  412fd0:	mov	x20, x1
  412fd4:	mov	x19, x2
  412fd8:	add	x3, sp, #0x28
  412fdc:	mov	x2, #0xffffffff            	// #4294967295
  412fe0:	mov	x1, #0x0                   	// #0
  412fe4:	ldr	w0, [x0, #116]
  412fe8:	bl	41ab94 <wcrtomb@plt+0x15f74>
  412fec:	mov	x2, x0
  412ff0:	mov	x1, x20
  412ff4:	mov	x0, x19
  412ff8:	bl	411c38 <wcrtomb@plt+0xd018>
  412ffc:	ldp	x19, x20, [sp, #16]
  413000:	ldp	x29, x30, [sp], #64
  413004:	ret
  413008:	stp	x29, x30, [sp, #-64]!
  41300c:	mov	x29, sp
  413010:	stp	x19, x20, [sp, #16]
  413014:	mov	x20, x1
  413018:	mov	x19, x2
  41301c:	add	x3, sp, #0x28
  413020:	mov	x2, #0xffffffff            	// #4294967295
  413024:	mov	x1, #0x0                   	// #0
  413028:	ldr	w0, [x0, #112]
  41302c:	bl	41ab94 <wcrtomb@plt+0x15f74>
  413030:	mov	x2, x0
  413034:	mov	x1, x20
  413038:	mov	x0, x19
  41303c:	bl	411c38 <wcrtomb@plt+0xd018>
  413040:	ldp	x19, x20, [sp, #16]
  413044:	ldp	x29, x30, [sp], #64
  413048:	ret
  41304c:	stp	x29, x30, [sp, #-32]!
  413050:	mov	x29, sp
  413054:	stp	x19, x20, [sp, #16]
  413058:	mov	x20, x0
  41305c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  413060:	ldr	x19, [x0, #2072]
  413064:	cbz	x19, 41308c <wcrtomb@plt+0xe46c>
  413068:	mov	w2, #0x0                   	// #0
  41306c:	mov	x1, x20
  413070:	ldr	x0, [x19, #8]
  413074:	bl	4048c0 <fnmatch@plt>
  413078:	cbz	w0, 413094 <wcrtomb@plt+0xe474>
  41307c:	ldr	x19, [x19]
  413080:	cbnz	x19, 413068 <wcrtomb@plt+0xe448>
  413084:	mov	w0, #0x0                   	// #0
  413088:	b	413098 <wcrtomb@plt+0xe478>
  41308c:	mov	w0, #0x0                   	// #0
  413090:	b	413098 <wcrtomb@plt+0xe478>
  413094:	mov	w0, #0x1                   	// #1
  413098:	ldp	x19, x20, [sp, #16]
  41309c:	ldp	x29, x30, [sp], #32
  4130a0:	ret
  4130a4:	stp	x29, x30, [sp, #-48]!
  4130a8:	mov	x29, sp
  4130ac:	stp	x19, x20, [sp, #16]
  4130b0:	stp	x21, x22, [sp, #32]
  4130b4:	mov	x22, x0
  4130b8:	mov	x19, x1
  4130bc:	mov	x21, x2
  4130c0:	mov	x20, x3
  4130c4:	mov	x0, x1
  4130c8:	bl	41304c <wcrtomb@plt+0xe42c>
  4130cc:	and	w1, w0, #0xff
  4130d0:	cbz	w1, 4130e4 <wcrtomb@plt+0xe4c4>
  4130d4:	ldp	x19, x20, [sp, #16]
  4130d8:	ldp	x21, x22, [sp, #32]
  4130dc:	ldp	x29, x30, [sp], #48
  4130e0:	ret
  4130e4:	mov	x0, x19
  4130e8:	bl	4116b8 <wcrtomb@plt+0xca98>
  4130ec:	and	w0, w0, #0xff
  4130f0:	cbnz	w0, 4130d4 <wcrtomb@plt+0xe4b4>
  4130f4:	mov	x0, x19
  4130f8:	bl	411ef4 <wcrtomb@plt+0xd2d4>
  4130fc:	cbz	x0, 41311c <wcrtomb@plt+0xe4fc>
  413100:	ldr	x4, [x0, #16]
  413104:	mov	x3, x20
  413108:	mov	x2, x21
  41310c:	mov	x1, x19
  413110:	mov	x0, x22
  413114:	blr	x4
  413118:	b	4130d4 <wcrtomb@plt+0xe4b4>
  41311c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  413120:	ldr	w0, [x0, #408]
  413124:	tbz	w0, #17, 4130d4 <wcrtomb@plt+0xe4b4>
  413128:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41312c:	ldr	x0, [x0, #944]
  413130:	cbz	x0, 413138 <wcrtomb@plt+0xe518>
  413134:	blr	x0
  413138:	mov	w2, #0x5                   	// #5
  41313c:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  413140:	add	x1, x1, #0xfa8
  413144:	mov	x0, #0x0                   	// #0
  413148:	bl	4049c0 <dcgettext@plt>
  41314c:	mov	x3, x19
  413150:	mov	x2, x0
  413154:	mov	w1, #0x0                   	// #0
  413158:	mov	w0, #0x0                   	// #0
  41315c:	bl	404050 <error@plt>
  413160:	b	4130d4 <wcrtomb@plt+0xe4b4>
  413164:	stp	x29, x30, [sp, #-80]!
  413168:	mov	x29, sp
  41316c:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  413170:	add	x1, x1, #0x2f0
  413174:	bl	403fc0 <strtok@plt>
  413178:	cbz	x0, 413398 <wcrtomb@plt+0xe778>
  41317c:	stp	x19, x20, [sp, #16]
  413180:	stp	x21, x22, [sp, #32]
  413184:	stp	x23, x24, [sp, #48]
  413188:	str	x25, [sp, #64]
  41318c:	mov	x19, x0
  413190:	adrp	x23, 454000 <_obstack_memory_used@@Base+0x12e64>
  413194:	add	x23, x23, #0x28
  413198:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41319c:	add	x22, x22, #0x800
  4131a0:	add	x24, x22, #0x50
  4131a4:	b	4133c8 <wcrtomb@plt+0xe7a8>
  4131a8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4131ac:	ldr	x0, [x0, #944]
  4131b0:	cbz	x0, 4131b8 <wcrtomb@plt+0xe598>
  4131b4:	blr	x0
  4131b8:	mov	w2, #0x5                   	// #5
  4131bc:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  4131c0:	add	x1, x1, #0xfd8
  4131c4:	mov	x0, #0x0                   	// #0
  4131c8:	bl	4049c0 <dcgettext@plt>
  4131cc:	mov	x3, x19
  4131d0:	mov	x2, x0
  4131d4:	mov	w1, #0x0                   	// #0
  4131d8:	mov	w0, #0x0                   	// #0
  4131dc:	bl	404050 <error@plt>
  4131e0:	mov	w0, #0x2                   	// #2
  4131e4:	bl	422b00 <wcrtomb@plt+0x1dee0>
  4131e8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4131ec:	ldr	x0, [x0, #944]
  4131f0:	cbz	x0, 4131f8 <wcrtomb@plt+0xe5d8>
  4131f4:	blr	x0
  4131f8:	mov	w2, #0x5                   	// #5
  4131fc:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  413200:	add	x1, x1, #0x8
  413204:	mov	x0, #0x0                   	// #0
  413208:	bl	4049c0 <dcgettext@plt>
  41320c:	mov	x20, x0
  413210:	mov	x0, x19
  413214:	bl	43f194 <argp_parse@@Base+0xba54>
  413218:	mov	x3, x0
  41321c:	mov	x2, x20
  413220:	mov	w1, #0x0                   	// #0
  413224:	mov	w0, #0x0                   	// #0
  413228:	bl	404050 <error@plt>
  41322c:	mov	w0, #0x2                   	// #2
  413230:	bl	422b00 <wcrtomb@plt+0x1dee0>
  413234:	sub	x21, x20, #0x1
  413238:	mov	w25, #0x0                   	// #0
  41323c:	b	4133f8 <wcrtomb@plt+0xe7d8>
  413240:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  413244:	add	x1, x1, #0x818
  413248:	adrp	x19, 454000 <_obstack_memory_used@@Base+0x12e64>
  41324c:	add	x19, x19, #0x200
  413250:	b	41325c <wcrtomb@plt+0xe63c>
  413254:	ldr	x1, [x19, #32]!
  413258:	cbz	x1, 4133a0 <wcrtomb@plt+0xe780>
  41325c:	ldrb	w0, [x19, #28]
  413260:	cbnz	w0, 413254 <wcrtomb@plt+0xe634>
  413264:	ldr	w0, [x19, #24]
  413268:	tbz	w0, #0, 413254 <wcrtomb@plt+0xe634>
  41326c:	mov	w2, #0x0                   	// #0
  413270:	mov	x0, x21
  413274:	bl	4048c0 <fnmatch@plt>
  413278:	cbnz	w0, 413254 <wcrtomb@plt+0xe634>
  41327c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  413280:	ldr	x0, [x0, #944]
  413284:	cbz	x0, 41328c <wcrtomb@plt+0xe66c>
  413288:	blr	x0
  41328c:	mov	w2, #0x5                   	// #5
  413290:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  413294:	add	x1, x1, #0x30
  413298:	mov	x0, #0x0                   	// #0
  41329c:	bl	4049c0 <dcgettext@plt>
  4132a0:	mov	x19, x0
  4132a4:	mov	x0, x21
  4132a8:	bl	43f194 <argp_parse@@Base+0xba54>
  4132ac:	mov	x3, x0
  4132b0:	mov	x2, x19
  4132b4:	mov	w1, #0x0                   	// #0
  4132b8:	mov	w0, #0x0                   	// #0
  4132bc:	bl	404050 <error@plt>
  4132c0:	mov	w0, #0x2                   	// #2
  4132c4:	bl	422b00 <wcrtomb@plt+0x1dee0>
  4132c8:	mov	x1, x21
  4132cc:	add	x0, x22, #0x20
  4132d0:	bl	41a5bc <wcrtomb@plt+0x1599c>
  4132d4:	b	4133b0 <wcrtomb@plt+0xe790>
  4132d8:	mov	x1, x21
  4132dc:	add	x0, x22, #0x28
  4132e0:	bl	41a5bc <wcrtomb@plt+0x1599c>
  4132e4:	b	4133b0 <wcrtomb@plt+0xe790>
  4132e8:	mov	x2, x21
  4132ec:	add	x1, x22, #0x30
  4132f0:	add	x0, x22, #0x38
  4132f4:	bl	41170c <wcrtomb@plt+0xcaec>
  4132f8:	b	4133b0 <wcrtomb@plt+0xe790>
  4132fc:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  413300:	add	x0, x0, #0x818
  413304:	adrp	x20, 454000 <_obstack_memory_used@@Base+0x12e64>
  413308:	add	x20, x20, #0x200
  41330c:	b	413318 <wcrtomb@plt+0xe6f8>
  413310:	ldr	x0, [x20, #32]!
  413314:	cbz	x0, 4134c4 <wcrtomb@plt+0xe8a4>
  413318:	ldrb	w1, [x20, #28]
  41331c:	cbnz	w1, 413310 <wcrtomb@plt+0xe6f0>
  413320:	ldr	w1, [x20, #24]
  413324:	tbz	w1, #0, 413310 <wcrtomb@plt+0xe6f0>
  413328:	mov	x1, x19
  41332c:	bl	404720 <strcmp@plt>
  413330:	cbnz	w0, 413310 <wcrtomb@plt+0xe6f0>
  413334:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  413338:	ldr	x0, [x0, #944]
  41333c:	cbz	x0, 413344 <wcrtomb@plt+0xe724>
  413340:	blr	x0
  413344:	mov	w2, #0x5                   	// #5
  413348:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  41334c:	add	x1, x1, #0x98
  413350:	mov	x0, #0x0                   	// #0
  413354:	bl	4049c0 <dcgettext@plt>
  413358:	mov	x3, x19
  41335c:	mov	x2, x0
  413360:	mov	w1, #0x0                   	// #0
  413364:	mov	w0, #0x0                   	// #0
  413368:	bl	404050 <error@plt>
  41336c:	mov	w0, #0x2                   	// #2
  413370:	bl	422b00 <wcrtomb@plt+0x1dee0>
  413374:	mov	x2, x21
  413378:	mov	x1, x19
  41337c:	mov	x0, x24
  413380:	bl	4117ac <wcrtomb@plt+0xcb8c>
  413384:	b	4133b0 <wcrtomb@plt+0xe790>
  413388:	ldp	x19, x20, [sp, #16]
  41338c:	ldp	x21, x22, [sp, #32]
  413390:	ldp	x23, x24, [sp, #48]
  413394:	ldr	x25, [sp, #64]
  413398:	ldp	x29, x30, [sp], #80
  41339c:	ret
  4133a0:	mov	x2, #0x0                   	// #0
  4133a4:	mov	x1, x21
  4133a8:	add	x0, x22, #0x18
  4133ac:	bl	4117ac <wcrtomb@plt+0xcb8c>
  4133b0:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  4133b4:	add	x1, x1, #0x2f0
  4133b8:	mov	x0, #0x0                   	// #0
  4133bc:	bl	403fc0 <strtok@plt>
  4133c0:	mov	x19, x0
  4133c4:	cbz	x0, 413388 <wcrtomb@plt+0xe768>
  4133c8:	mov	w1, #0x3d                  	// #61
  4133cc:	mov	x0, x19
  4133d0:	bl	404870 <strchr@plt>
  4133d4:	mov	x20, x0
  4133d8:	cbz	x0, 4131a8 <wcrtomb@plt+0xe588>
  4133dc:	cmp	x0, x19
  4133e0:	b.eq	4131e8 <wcrtomb@plt+0xe5c8>  // b.none
  4133e4:	ldurb	w0, [x0, #-1]
  4133e8:	mov	x21, x20
  4133ec:	mov	w25, #0x1                   	// #1
  4133f0:	cmp	w0, #0x3a
  4133f4:	b.eq	413234 <wcrtomb@plt+0xe614>  // b.none
  4133f8:	cmp	x21, x19
  4133fc:	b.ls	413424 <wcrtomb@plt+0xe804>  // b.plast
  413400:	bl	404750 <__ctype_b_loc@plt>
  413404:	ldr	x1, [x0]
  413408:	ldrb	w0, [x21]
  41340c:	ldrh	w0, [x1, x0, lsl #1]
  413410:	tbz	w0, #13, 413424 <wcrtomb@plt+0xe804>
  413414:	sub	x21, x21, #0x1
  413418:	cmp	x21, x19
  41341c:	b.ne	413408 <wcrtomb@plt+0xe7e8>  // b.any
  413420:	mov	x21, x19
  413424:	strb	wzr, [x21]
  413428:	add	x21, x20, #0x1
  41342c:	ldrb	w20, [x20, #1]
  413430:	cbz	w20, 413450 <wcrtomb@plt+0xe830>
  413434:	bl	404750 <__ctype_b_loc@plt>
  413438:	ldr	x1, [x0]
  41343c:	and	x20, x20, #0xff
  413440:	ldrh	w0, [x1, x20, lsl #1]
  413444:	tbz	w0, #13, 413450 <wcrtomb@plt+0xe830>
  413448:	ldrb	w20, [x21, #1]!
  41344c:	cbnz	w20, 41343c <wcrtomb@plt+0xe81c>
  413450:	mov	x1, x23
  413454:	mov	x0, x19
  413458:	bl	404720 <strcmp@plt>
  41345c:	cbz	w0, 413240 <wcrtomb@plt+0xe620>
  413460:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  413464:	add	x1, x1, #0x50
  413468:	mov	x0, x19
  41346c:	bl	404720 <strcmp@plt>
  413470:	cbz	w0, 4132c8 <wcrtomb@plt+0xe6a8>
  413474:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  413478:	add	x1, x1, #0x60
  41347c:	mov	x0, x19
  413480:	bl	404720 <strcmp@plt>
  413484:	cbz	w0, 4132d8 <wcrtomb@plt+0xe6b8>
  413488:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  41348c:	add	x1, x1, #0x70
  413490:	mov	x0, x19
  413494:	bl	404720 <strcmp@plt>
  413498:	cbz	w0, 4132e8 <wcrtomb@plt+0xe6c8>
  41349c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  4134a0:	add	x1, x1, #0x80
  4134a4:	mov	x0, x19
  4134a8:	bl	404720 <strcmp@plt>
  4134ac:	cbnz	w0, 4132fc <wcrtomb@plt+0xe6dc>
  4134b0:	mov	x2, x21
  4134b4:	add	x1, x22, #0x40
  4134b8:	add	x0, x22, #0x48
  4134bc:	bl	41170c <wcrtomb@plt+0xcaec>
  4134c0:	b	4133b0 <wcrtomb@plt+0xe790>
  4134c4:	cbnz	w25, 413374 <wcrtomb@plt+0xe754>
  4134c8:	mov	x2, x21
  4134cc:	mov	x1, x19
  4134d0:	mov	x0, x22
  4134d4:	bl	4117ac <wcrtomb@plt+0xcb8c>
  4134d8:	b	4133b0 <wcrtomb@plt+0xe790>
  4134dc:	stp	x29, x30, [sp, #-176]!
  4134e0:	mov	x29, sp
  4134e4:	stp	x19, x20, [sp, #16]
  4134e8:	stp	x21, x22, [sp, #32]
  4134ec:	stp	x23, x24, [sp, #48]
  4134f0:	stp	x25, x26, [sp, #64]
  4134f4:	mov	x22, x0
  4134f8:	mov	x19, x1
  4134fc:	str	x2, [sp, #120]
  413500:	ldrb	w0, [x1]
  413504:	cbz	w0, 41364c <wcrtomb@plt+0xea2c>
  413508:	stp	x27, x28, [sp, #80]
  41350c:	str	xzr, [sp, #112]
  413510:	str	xzr, [sp, #104]
  413514:	mov	x25, #0x0                   	// #0
  413518:	mov	x24, #0x0                   	// #0
  41351c:	mov	x23, #0x0                   	// #0
  413520:	mov	x21, #0x0                   	// #0
  413524:	add	x27, sp, #0x94
  413528:	add	x26, sp, #0xac
  41352c:	adrp	x28, 481000 <argp_program_version_hook@@Base+0x298>
  413530:	b	4135d8 <wcrtomb@plt+0xe9b8>
  413534:	cmp	w0, #0x25
  413538:	b.eq	41356c <wcrtomb@plt+0xe94c>  // b.none
  41353c:	cmp	w0, #0x64
  413540:	b.ne	4135bc <wcrtomb@plt+0xe99c>  // b.any
  413544:	cbz	x22, 4135cc <wcrtomb@plt+0xe9ac>
  413548:	cbz	x23, 413574 <wcrtomb@plt+0xe954>
  41354c:	ldrb	w2, [x28, #888]
  413550:	mov	w1, #0x0                   	// #0
  413554:	mov	x0, x23
  413558:	bl	42a2dc <wcrtomb@plt+0x256bc>
  41355c:	mov	x24, x0
  413560:	bl	403ff0 <strlen@plt>
  413564:	add	x21, x21, x0
  413568:	b	4135cc <wcrtomb@plt+0xe9ac>
  41356c:	add	x21, x21, #0x1
  413570:	b	4135cc <wcrtomb@plt+0xe9ac>
  413574:	ldr	x0, [x22]
  413578:	bl	4349b0 <argp_parse@@Base+0x1270>
  41357c:	mov	x23, x0
  413580:	b	41354c <wcrtomb@plt+0xe92c>
  413584:	cbz	x22, 4135cc <wcrtomb@plt+0xe9ac>
  413588:	ldr	x0, [x22]
  41358c:	bl	434ae4 <argp_parse@@Base+0x13a4>
  413590:	mov	x25, x0
  413594:	bl	403ff0 <strlen@plt>
  413598:	add	x21, x21, x0
  41359c:	b	4135cc <wcrtomb@plt+0xe9ac>
  4135a0:	add	x1, sp, #0x80
  4135a4:	ldr	x0, [sp, #120]
  4135a8:	bl	438ce8 <argp_parse@@Base+0x55a8>
  4135ac:	str	x0, [sp, #112]
  4135b0:	sub	x0, x27, x0
  4135b4:	add	x21, x21, x0
  4135b8:	b	4135cc <wcrtomb@plt+0xe9ac>
  4135bc:	add	x21, x21, #0x2
  4135c0:	b	4135cc <wcrtomb@plt+0xe9ac>
  4135c4:	add	x21, x21, #0x1
  4135c8:	mov	x20, x1
  4135cc:	add	x1, x20, #0x1
  4135d0:	ldrb	w0, [x20, #1]
  4135d4:	cbz	w0, 413628 <wcrtomb@plt+0xea08>
  4135d8:	cmp	w0, #0x25
  4135dc:	b.ne	4135c4 <wcrtomb@plt+0xe9a4>  // b.any
  4135e0:	ldrb	w0, [x1, #1]
  4135e4:	cbz	w0, 4135c4 <wcrtomb@plt+0xe9a4>
  4135e8:	add	x20, x1, #0x1
  4135ec:	cmp	w0, #0x66
  4135f0:	b.eq	413584 <wcrtomb@plt+0xe964>  // b.none
  4135f4:	b.ls	413534 <wcrtomb@plt+0xe914>  // b.plast
  4135f8:	cmp	w0, #0x6e
  4135fc:	b.eq	4135a0 <wcrtomb@plt+0xe980>  // b.none
  413600:	cmp	w0, #0x70
  413604:	b.ne	4135bc <wcrtomb@plt+0xe99c>  // b.any
  413608:	bl	4042c0 <getpid@plt>
  41360c:	add	x1, sp, #0x98
  413610:	sxtw	x0, w0
  413614:	bl	438ce8 <argp_parse@@Base+0x55a8>
  413618:	str	x0, [sp, #104]
  41361c:	sub	x0, x26, x0
  413620:	add	x21, x21, x0
  413624:	b	4135cc <wcrtomb@plt+0xe9ac>
  413628:	ldp	x27, x28, [sp, #80]
  41362c:	add	x0, x21, #0x1
  413630:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  413634:	mov	x21, x0
  413638:	ldrb	w1, [x19]
  41363c:	cbz	w1, 413790 <wcrtomb@plt+0xeb70>
  413640:	mov	x20, x0
  413644:	mov	w22, #0x25                  	// #37
  413648:	b	413708 <wcrtomb@plt+0xeae8>
  41364c:	str	xzr, [sp, #112]
  413650:	str	xzr, [sp, #104]
  413654:	mov	x25, #0x0                   	// #0
  413658:	mov	x24, #0x0                   	// #0
  41365c:	mov	x23, #0x0                   	// #0
  413660:	mov	x21, #0x0                   	// #0
  413664:	b	41362c <wcrtomb@plt+0xea0c>
  413668:	cmp	w0, #0x25
  41366c:	b.eq	413694 <wcrtomb@plt+0xea74>  // b.none
  413670:	cmp	w0, #0x64
  413674:	b.ne	4136dc <wcrtomb@plt+0xeabc>  // b.any
  413678:	cbz	x24, 41368c <wcrtomb@plt+0xea6c>
  41367c:	mov	x1, x24
  413680:	mov	x0, x20
  413684:	bl	404220 <stpcpy@plt>
  413688:	mov	x20, x0
  41368c:	add	x19, x19, #0x2
  413690:	b	413700 <wcrtomb@plt+0xeae0>
  413694:	mov	x0, x20
  413698:	strb	w22, [x0], #1
  41369c:	add	x19, x19, #0x2
  4136a0:	mov	x20, x0
  4136a4:	b	413700 <wcrtomb@plt+0xeae0>
  4136a8:	cbz	x25, 4136bc <wcrtomb@plt+0xea9c>
  4136ac:	mov	x1, x25
  4136b0:	mov	x0, x20
  4136b4:	bl	404220 <stpcpy@plt>
  4136b8:	mov	x20, x0
  4136bc:	add	x19, x19, #0x2
  4136c0:	b	413700 <wcrtomb@plt+0xeae0>
  4136c4:	ldr	x1, [sp, #112]
  4136c8:	mov	x0, x20
  4136cc:	bl	404220 <stpcpy@plt>
  4136d0:	mov	x20, x0
  4136d4:	add	x19, x19, #0x2
  4136d8:	b	413700 <wcrtomb@plt+0xeae0>
  4136dc:	strb	w22, [x20]
  4136e0:	cbnz	w0, 4137a4 <wcrtomb@plt+0xeb84>
  4136e4:	add	x19, x19, #0x1
  4136e8:	add	x20, x20, #0x1
  4136ec:	b	413700 <wcrtomb@plt+0xeae0>
  4136f0:	add	x19, x19, #0x1
  4136f4:	mov	x0, x20
  4136f8:	strb	w1, [x0], #1
  4136fc:	mov	x20, x0
  413700:	ldrb	w1, [x19]
  413704:	cbz	w1, 413748 <wcrtomb@plt+0xeb28>
  413708:	cmp	w1, #0x25
  41370c:	b.ne	4136f0 <wcrtomb@plt+0xead0>  // b.any
  413710:	ldrb	w0, [x19, #1]
  413714:	cmp	w0, #0x66
  413718:	b.eq	4136a8 <wcrtomb@plt+0xea88>  // b.none
  41371c:	b.ls	413668 <wcrtomb@plt+0xea48>  // b.plast
  413720:	cmp	w0, #0x6e
  413724:	b.eq	4136c4 <wcrtomb@plt+0xeaa4>  // b.none
  413728:	cmp	w0, #0x70
  41372c:	b.ne	4137a0 <wcrtomb@plt+0xeb80>  // b.any
  413730:	ldr	x1, [sp, #104]
  413734:	mov	x0, x20
  413738:	bl	404220 <stpcpy@plt>
  41373c:	mov	x20, x0
  413740:	add	x19, x19, #0x2
  413744:	b	413700 <wcrtomb@plt+0xeae0>
  413748:	mov	x0, x23
  41374c:	bl	4047c0 <free@plt>
  413750:	cmp	x21, x20
  413754:	b.cs	413770 <wcrtomb@plt+0xeb50>  // b.hs, b.nlast
  413758:	ldurb	w0, [x20, #-1]
  41375c:	cmp	w0, #0x2f
  413760:	b.ne	413770 <wcrtomb@plt+0xeb50>  // b.any
  413764:	sub	x20, x20, #0x1
  413768:	cmp	x21, x20
  41376c:	b.ne	413758 <wcrtomb@plt+0xeb38>  // b.any
  413770:	strb	wzr, [x20]
  413774:	mov	x0, x21
  413778:	ldp	x19, x20, [sp, #16]
  41377c:	ldp	x21, x22, [sp, #32]
  413780:	ldp	x23, x24, [sp, #48]
  413784:	ldp	x25, x26, [sp, #64]
  413788:	ldp	x29, x30, [sp], #176
  41378c:	ret
  413790:	mov	x0, x23
  413794:	bl	4047c0 <free@plt>
  413798:	mov	x20, x21
  41379c:	b	413770 <wcrtomb@plt+0xeb50>
  4137a0:	strb	w22, [x20]
  4137a4:	add	x19, x19, #0x2
  4137a8:	strb	w0, [x20, #1]
  4137ac:	add	x20, x20, #0x2
  4137b0:	b	413700 <wcrtomb@plt+0xeae0>
  4137b4:	stp	x29, x30, [sp, #-32]!
  4137b8:	mov	x29, sp
  4137bc:	str	x19, [sp, #16]
  4137c0:	mov	x19, x0
  4137c4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4137c8:	ldr	x0, [x0, #2080]
  4137cc:	cbz	x0, 4137f0 <wcrtomb@plt+0xebd0>
  4137d0:	mov	x2, #0x0                   	// #0
  4137d4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4137d8:	ldr	x1, [x0, #2080]
  4137dc:	mov	x0, x19
  4137e0:	bl	4134dc <wcrtomb@plt+0xe8bc>
  4137e4:	ldr	x19, [sp, #16]
  4137e8:	ldp	x29, x30, [sp], #32
  4137ec:	ret
  4137f0:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  4137f4:	add	x1, x1, #0xb8
  4137f8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4137fc:	add	x0, x0, #0x800
  413800:	add	x0, x0, #0x20
  413804:	bl	41a5bc <wcrtomb@plt+0x1599c>
  413808:	b	4137d0 <wcrtomb@plt+0xebb0>
  41380c:	stp	x29, x30, [sp, #-32]!
  413810:	mov	x29, sp
  413814:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  413818:	ldr	x0, [x0, #2088]
  41381c:	cbz	x0, 413844 <wcrtomb@plt+0xec24>
  413820:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  413824:	add	x0, x0, #0x800
  413828:	ldr	x2, [x0, #88]
  41382c:	add	x2, x2, #0x1
  413830:	ldr	x1, [x0, #40]
  413834:	mov	x0, #0x0                   	// #0
  413838:	bl	4134dc <wcrtomb@plt+0xe8bc>
  41383c:	ldp	x29, x30, [sp], #32
  413840:	ret
  413844:	stp	x19, x20, [sp, #16]
  413848:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x12e64>
  41384c:	add	x0, x0, #0xd8
  413850:	bl	404af0 <getenv@plt>
  413854:	mov	x20, x0
  413858:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x12e64>
  41385c:	add	x0, x0, #0xd0
  413860:	cmp	x20, #0x0
  413864:	csel	x20, x0, x20, eq  // eq = none
  413868:	mov	x0, x20
  41386c:	bl	403ff0 <strlen@plt>
  413870:	add	x0, x0, #0x12
  413874:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  413878:	mov	x19, x0
  41387c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  413880:	str	x0, [x1, #2088]
  413884:	mov	x1, x20
  413888:	bl	404910 <strcpy@plt>
  41388c:	mov	x0, x19
  413890:	bl	403ff0 <strlen@plt>
  413894:	add	x19, x19, x0
  413898:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x12e64>
  41389c:	add	x0, x0, #0xe0
  4138a0:	ldp	x2, x3, [x0]
  4138a4:	stp	x2, x3, [x19]
  4138a8:	ldrh	w0, [x0, #16]
  4138ac:	strh	w0, [x19, #16]
  4138b0:	ldp	x19, x20, [sp, #16]
  4138b4:	b	413820 <wcrtomb@plt+0xec00>
  4138b8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4138bc:	ldr	x0, [x0, #2128]
  4138c0:	cbnz	x0, 4138c8 <wcrtomb@plt+0xeca8>
  4138c4:	ret
  4138c8:	stp	x29, x30, [sp, #-16]!
  4138cc:	mov	x29, sp
  4138d0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4138d4:	ldr	x0, [x0, #944]
  4138d8:	cbz	x0, 4138e0 <wcrtomb@plt+0xecc0>
  4138dc:	blr	x0
  4138e0:	mov	w2, #0x5                   	// #5
  4138e4:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  4138e8:	add	x1, x1, #0xf8
  4138ec:	mov	x0, #0x0                   	// #0
  4138f0:	bl	4049c0 <dcgettext@plt>
  4138f4:	mov	x2, x0
  4138f8:	mov	w1, #0x0                   	// #0
  4138fc:	mov	w0, #0x0                   	// #0
  413900:	bl	404050 <error@plt>
  413904:	mov	w0, #0x2                   	// #2
  413908:	bl	422b00 <wcrtomb@plt+0x1dee0>
  41390c:	str	xzr, [x0, #336]
  413910:	str	xzr, [x0, #328]
  413914:	str	xzr, [x0, #56]
  413918:	str	xzr, [x0, #64]
  41391c:	str	xzr, [x0, #72]
  413920:	str	xzr, [x0, #80]
  413924:	str	xzr, [x0, #48]
  413928:	ret
  41392c:	stp	x29, x30, [sp, #-48]!
  413930:	mov	x29, sp
  413934:	str	x21, [sp, #32]
  413938:	mov	x21, x0
  41393c:	cbz	x1, 413970 <wcrtomb@plt+0xed50>
  413940:	stp	x19, x20, [sp, #16]
  413944:	mov	x19, x0
  413948:	add	x1, x1, x1, lsl #1
  41394c:	add	x20, x0, x1, lsl #3
  413950:	ldr	x0, [x19]
  413954:	bl	4047c0 <free@plt>
  413958:	ldr	x0, [x19, #8]
  41395c:	bl	4047c0 <free@plt>
  413960:	add	x19, x19, #0x18
  413964:	cmp	x19, x20
  413968:	b.ne	413950 <wcrtomb@plt+0xed30>  // b.any
  41396c:	ldp	x19, x20, [sp, #16]
  413970:	mov	x0, x21
  413974:	bl	4047c0 <free@plt>
  413978:	ldr	x21, [sp, #32]
  41397c:	ldp	x29, x30, [sp], #48
  413980:	ret
  413984:	stp	x29, x30, [sp, #-64]!
  413988:	mov	x29, sp
  41398c:	stp	x19, x20, [sp, #16]
  413990:	stp	x21, x22, [sp, #32]
  413994:	str	x23, [sp, #48]
  413998:	mov	x20, x0
  41399c:	mov	x21, x1
  4139a0:	mov	x22, x2
  4139a4:	mov	x23, x3
  4139a8:	mov	x0, x1
  4139ac:	bl	403ff0 <strlen@plt>
  4139b0:	add	x0, x0, #0xe
  4139b4:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  4139b8:	mov	x19, x0
  4139bc:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x12e64>
  4139c0:	add	x0, x0, #0x128
  4139c4:	ldr	x1, [x0]
  4139c8:	str	x1, [x19]
  4139cc:	ldur	x0, [x0, #6]
  4139d0:	stur	x0, [x19, #6]
  4139d4:	mov	x1, x21
  4139d8:	add	x0, x19, #0xd
  4139dc:	bl	404910 <strcpy@plt>
  4139e0:	mov	x4, x23
  4139e4:	mov	x3, x22
  4139e8:	mov	x2, x19
  4139ec:	add	x1, x20, #0x148
  4139f0:	add	x0, x20, #0x150
  4139f4:	bl	411df8 <wcrtomb@plt+0xd1d8>
  4139f8:	mov	x0, x19
  4139fc:	bl	4047c0 <free@plt>
  413a00:	ldp	x19, x20, [sp, #16]
  413a04:	ldp	x21, x22, [sp, #32]
  413a08:	ldr	x23, [sp, #48]
  413a0c:	ldp	x29, x30, [sp], #64
  413a10:	ret
  413a14:	stp	x29, x30, [sp, #-64]!
  413a18:	mov	x29, sp
  413a1c:	stp	x19, x20, [sp, #16]
  413a20:	stp	x21, x22, [sp, #32]
  413a24:	str	x23, [sp, #48]
  413a28:	mov	x22, x0
  413a2c:	mov	x21, x1
  413a30:	mov	x23, x2
  413a34:	mov	x19, x3
  413a38:	mov	x0, x1
  413a3c:	bl	403ff0 <strlen@plt>
  413a40:	add	x1, x0, #0x10
  413a44:	and	x1, x1, #0xfffffffffffffff0
  413a48:	sub	sp, sp, x1
  413a4c:	mov	x20, sp
  413a50:	add	x2, x0, #0x1
  413a54:	mov	x1, x21
  413a58:	mov	x0, x20
  413a5c:	bl	403f70 <memcpy@plt>
  413a60:	add	x0, x19, #0x10
  413a64:	and	x0, x0, #0xfffffffffffffff0
  413a68:	sub	sp, sp, x0
  413a6c:	mov	x21, sp
  413a70:	add	x2, x19, #0x1
  413a74:	mov	x1, x23
  413a78:	mov	x0, x21
  413a7c:	bl	403f70 <memcpy@plt>
  413a80:	add	x2, x20, #0x1
  413a84:	mov	x1, x20
  413a88:	mov	w3, #0x25                  	// #37
  413a8c:	mov	w4, #0x3d                  	// #61
  413a90:	b	413ab4 <wcrtomb@plt+0xee94>
  413a94:	ldrb	w0, [x1, #1]
  413a98:	cmp	w0, #0x33
  413a9c:	b.eq	413af4 <wcrtomb@plt+0xeed4>  // b.none
  413aa0:	cmp	w0, #0x32
  413aa4:	b.eq	413b0c <wcrtomb@plt+0xeeec>  // b.none
  413aa8:	sturb	w3, [x2, #-1]
  413aac:	add	x1, x1, #0x1
  413ab0:	add	x2, x2, #0x1
  413ab4:	ldrb	w0, [x1]
  413ab8:	cmp	w0, #0x25
  413abc:	b.eq	413a94 <wcrtomb@plt+0xee74>  // b.none
  413ac0:	sturb	w0, [x2, #-1]
  413ac4:	cbnz	w0, 413aac <wcrtomb@plt+0xee8c>
  413ac8:	mov	x3, x19
  413acc:	mov	x2, x21
  413ad0:	add	x1, x20, #0xd
  413ad4:	mov	x0, x22
  413ad8:	bl	413984 <wcrtomb@plt+0xed64>
  413adc:	mov	sp, x29
  413ae0:	ldp	x19, x20, [sp, #16]
  413ae4:	ldp	x21, x22, [sp, #32]
  413ae8:	ldr	x23, [sp, #48]
  413aec:	ldp	x29, x30, [sp], #64
  413af0:	ret
  413af4:	ldrb	w0, [x1, #2]
  413af8:	cmp	w0, #0x44
  413afc:	b.ne	413aa8 <wcrtomb@plt+0xee88>  // b.any
  413b00:	sturb	w4, [x2, #-1]
  413b04:	add	x1, x1, #0x3
  413b08:	b	413ab0 <wcrtomb@plt+0xee90>
  413b0c:	ldrb	w0, [x1, #2]
  413b10:	cmp	w0, #0x35
  413b14:	b.ne	413aa8 <wcrtomb@plt+0xee88>  // b.any
  413b18:	sturb	w3, [x2, #-1]
  413b1c:	add	x1, x1, #0x3
  413b20:	b	413ab0 <wcrtomb@plt+0xee90>
  413b24:	stp	x29, x30, [sp, #-64]!
  413b28:	mov	x29, sp
  413b2c:	stp	x21, x22, [sp, #32]
  413b30:	mov	x21, x0
  413b34:	str	xzr, [x1]
  413b38:	str	xzr, [x2]
  413b3c:	ldr	x0, [x0, #328]
  413b40:	cbz	x0, 413b98 <wcrtomb@plt+0xef78>
  413b44:	stp	x19, x20, [sp, #16]
  413b48:	str	x23, [sp, #48]
  413b4c:	mov	x22, x1
  413b50:	mov	x23, x2
  413b54:	mov	x19, #0x0                   	// #0
  413b58:	mov	x20, #0x0                   	// #0
  413b5c:	ldr	x5, [x21, #336]
  413b60:	add	x3, x5, x19
  413b64:	ldr	x4, [x3, #16]
  413b68:	ldr	x3, [x3, #8]
  413b6c:	ldr	x2, [x5, x19]
  413b70:	mov	x1, x23
  413b74:	mov	x0, x22
  413b78:	bl	411df8 <wcrtomb@plt+0xd1d8>
  413b7c:	add	x20, x20, #0x1
  413b80:	add	x19, x19, #0x18
  413b84:	ldr	x0, [x21, #328]
  413b88:	cmp	x0, x20
  413b8c:	b.hi	413b5c <wcrtomb@plt+0xef3c>  // b.pmore
  413b90:	ldp	x19, x20, [sp, #16]
  413b94:	ldr	x23, [sp, #48]
  413b98:	ldp	x21, x22, [sp, #32]
  413b9c:	ldp	x29, x30, [sp], #64
  413ba0:	ret
  413ba4:	stp	x29, x30, [sp, #-64]!
  413ba8:	mov	x29, sp
  413bac:	stp	x19, x20, [sp, #16]
  413bb0:	mov	x19, x0
  413bb4:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x3ee64>
  413bb8:	add	x20, x20, #0x800
  413bbc:	mov	x1, x0
  413bc0:	ldr	x0, [x20, #80]
  413bc4:	bl	411f74 <wcrtomb@plt+0xd354>
  413bc8:	mov	x1, x19
  413bcc:	ldr	x0, [x20, #96]
  413bd0:	bl	411f74 <wcrtomb@plt+0xd354>
  413bd4:	ldr	x0, [x19, #352]
  413bd8:	cbz	x0, 413c18 <wcrtomb@plt+0xeff8>
  413bdc:	str	x21, [sp, #32]
  413be0:	ldr	x0, [x19, #360]
  413be4:	add	x0, x0, #0x200
  413be8:	str	x0, [sp, #56]
  413bec:	adrp	x20, 413000 <wcrtomb@plt+0xe3e0>
  413bf0:	add	x20, x20, #0xa4
  413bf4:	add	x21, x19, #0x158
  413bf8:	mov	x3, x19
  413bfc:	mov	x2, x20
  413c00:	add	x1, sp, #0x38
  413c04:	mov	x0, x21
  413c08:	bl	412050 <wcrtomb@plt+0xd430>
  413c0c:	and	w0, w0, #0xff
  413c10:	cbnz	w0, 413bf8 <wcrtomb@plt+0xefd8>
  413c14:	ldr	x21, [sp, #32]
  413c18:	mov	x1, x19
  413c1c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  413c20:	ldr	x0, [x0, #2048]
  413c24:	bl	411f74 <wcrtomb@plt+0xd354>
  413c28:	ldr	x0, [x19, #136]
  413c2c:	str	x0, [x19, #264]
  413c30:	ldrb	w0, [x19, #320]
  413c34:	cbz	w0, 413c40 <wcrtomb@plt+0xf020>
  413c38:	ldr	x0, [x19, #312]
  413c3c:	str	x0, [x19, #136]
  413c40:	ldp	x19, x20, [sp, #16]
  413c44:	ldp	x29, x30, [sp], #64
  413c48:	ret
  413c4c:	stp	x29, x30, [sp, #-64]!
  413c50:	mov	x29, sp
  413c54:	stp	x19, x20, [sp, #16]
  413c58:	mov	x19, x0
  413c5c:	ldr	x0, [x0, #8]
  413c60:	cbnz	x0, 413c70 <wcrtomb@plt+0xf050>
  413c64:	ldp	x19, x20, [sp, #16]
  413c68:	ldp	x29, x30, [sp], #64
  413c6c:	ret
  413c70:	str	x21, [sp, #32]
  413c74:	ldr	x0, [x19, #16]
  413c78:	add	x0, x0, #0x200
  413c7c:	str	x0, [sp, #56]
  413c80:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  413c84:	ldr	x20, [x0, #2144]
  413c88:	cbz	x20, 413cb0 <wcrtomb@plt+0xf090>
  413c8c:	mov	x21, x20
  413c90:	ldr	x20, [x20]
  413c94:	ldr	x0, [x21, #8]
  413c98:	bl	4047c0 <free@plt>
  413c9c:	ldr	x0, [x21, #16]
  413ca0:	bl	4047c0 <free@plt>
  413ca4:	mov	x0, x21
  413ca8:	bl	4047c0 <free@plt>
  413cac:	cbnz	x20, 413c8c <wcrtomb@plt+0xf06c>
  413cb0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  413cb4:	str	xzr, [x0, #2144]
  413cb8:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x3ee64>
  413cbc:	add	x20, x20, #0x800
  413cc0:	add	x20, x20, #0x60
  413cc4:	adrp	x21, 411000 <wcrtomb@plt+0xc3e0>
  413cc8:	add	x21, x21, #0xfe0
  413ccc:	mov	x3, x20
  413cd0:	mov	x2, x21
  413cd4:	add	x1, sp, #0x38
  413cd8:	mov	x0, x19
  413cdc:	bl	412050 <wcrtomb@plt+0xd430>
  413ce0:	and	w0, w0, #0xff
  413ce4:	cbnz	w0, 413ccc <wcrtomb@plt+0xf0ac>
  413ce8:	ldr	x21, [sp, #32]
  413cec:	b	413c64 <wcrtomb@plt+0xf044>
  413cf0:	stp	x29, x30, [sp, #-64]!
  413cf4:	mov	x29, sp
  413cf8:	stp	x19, x20, [sp, #16]
  413cfc:	mov	x19, x1
  413d00:	ldr	x1, [x1, #360]
  413d04:	cbz	x1, 413d14 <wcrtomb@plt+0xf0f4>
  413d08:	ldp	x19, x20, [sp, #16]
  413d0c:	ldp	x29, x30, [sp], #64
  413d10:	ret
  413d14:	stp	x21, x22, [sp, #32]
  413d18:	mov	x21, x0
  413d1c:	mov	x20, x2
  413d20:	bl	411ef4 <wcrtomb@plt+0xd2d4>
  413d24:	mov	x22, x0
  413d28:	cbz	x0, 413d90 <wcrtomb@plt+0xf170>
  413d2c:	ldr	x0, [x0, #8]
  413d30:	cbz	x0, 413d98 <wcrtomb@plt+0xf178>
  413d34:	mov	x0, x21
  413d38:	bl	41304c <wcrtomb@plt+0xe42c>
  413d3c:	and	w0, w0, #0xff
  413d40:	cbz	w0, 413d4c <wcrtomb@plt+0xf12c>
  413d44:	ldp	x21, x22, [sp, #32]
  413d48:	b	413d08 <wcrtomb@plt+0xf0e8>
  413d4c:	str	x23, [sp, #48]
  413d50:	add	x23, x19, #0x158
  413d54:	mov	x0, x23
  413d58:	bl	411854 <wcrtomb@plt+0xcc34>
  413d5c:	mov	x0, x21
  413d60:	bl	4116b8 <wcrtomb@plt+0xca98>
  413d64:	and	w0, w0, #0xff
  413d68:	cbnz	w0, 413da0 <wcrtomb@plt+0xf180>
  413d6c:	ldr	x4, [x22, #8]
  413d70:	mov	x3, x20
  413d74:	mov	x2, x23
  413d78:	mov	x1, x21
  413d7c:	mov	x0, x19
  413d80:	blr	x4
  413d84:	ldp	x21, x22, [sp, #32]
  413d88:	ldr	x23, [sp, #48]
  413d8c:	b	413d08 <wcrtomb@plt+0xf0e8>
  413d90:	ldp	x21, x22, [sp, #32]
  413d94:	b	413d08 <wcrtomb@plt+0xf0e8>
  413d98:	ldp	x21, x22, [sp, #32]
  413d9c:	b	413d08 <wcrtomb@plt+0xf0e8>
  413da0:	ldp	x21, x22, [sp, #32]
  413da4:	ldr	x23, [sp, #48]
  413da8:	b	413d08 <wcrtomb@plt+0xf0e8>
  413dac:	stp	x29, x30, [sp, #-64]!
  413db0:	mov	x29, sp
  413db4:	stp	x19, x20, [sp, #16]
  413db8:	stp	x21, x22, [sp, #32]
  413dbc:	stp	x23, x24, [sp, #48]
  413dc0:	mov	x23, x0
  413dc4:	mov	x19, x1
  413dc8:	cmp	x2, #0x0
  413dcc:	csel	x0, x2, xzr, ge  // ge = tcont
  413dd0:	add	x20, x0, #0x200
  413dd4:	str	x20, [x23, #8]
  413dd8:	add	x0, x0, #0x201
  413ddc:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  413de0:	str	x0, [x23, #16]
  413de4:	strb	wzr, [x0, x20]
  413de8:	mov	x22, #0x0                   	// #0
  413dec:	mov	x24, #0x200                 	// #512
  413df0:	cmp	x20, #0x200
  413df4:	csel	x21, x20, x24, ls  // ls = plast
  413df8:	cbz	x19, 413e44 <wcrtomb@plt+0xf224>
  413dfc:	ldr	x0, [x23, #16]
  413e00:	mov	x2, x21
  413e04:	mov	x1, x19
  413e08:	add	x0, x0, x22
  413e0c:	bl	403f70 <memcpy@plt>
  413e10:	mov	x0, x19
  413e14:	bl	405884 <wcrtomb@plt+0xc64>
  413e18:	bl	406d94 <wcrtomb@plt+0x2174>
  413e1c:	mov	x19, x0
  413e20:	add	x22, x22, x21
  413e24:	sub	x20, x20, x21
  413e28:	cmp	x20, #0x0
  413e2c:	b.gt	413df0 <wcrtomb@plt+0xf1d0>
  413e30:	ldp	x19, x20, [sp, #16]
  413e34:	ldp	x21, x22, [sp, #32]
  413e38:	ldp	x23, x24, [sp, #48]
  413e3c:	ldp	x29, x30, [sp], #64
  413e40:	ret
  413e44:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  413e48:	ldr	x0, [x0, #944]
  413e4c:	cbz	x0, 413e54 <wcrtomb@plt+0xf234>
  413e50:	blr	x0
  413e54:	mov	w2, #0x5                   	// #5
  413e58:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  413e5c:	add	x1, x1, #0x380
  413e60:	mov	x0, #0x0                   	// #0
  413e64:	bl	4049c0 <dcgettext@plt>
  413e68:	mov	x2, x0
  413e6c:	mov	w1, #0x0                   	// #0
  413e70:	mov	w0, #0x0                   	// #0
  413e74:	bl	404050 <error@plt>
  413e78:	bl	40e5ac <wcrtomb@plt+0x998c>
  413e7c:	stp	x29, x30, [sp, #-32]!
  413e80:	mov	x29, sp
  413e84:	stp	x19, x20, [sp, #16]
  413e88:	mov	x20, x0
  413e8c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  413e90:	ldr	x19, [x0, #2048]
  413e94:	cbz	x19, 413eb0 <wcrtomb@plt+0xf290>
  413e98:	mov	x2, x20
  413e9c:	ldr	x1, [x19, #8]
  413ea0:	ldr	x0, [x19, #16]
  413ea4:	bl	411c80 <wcrtomb@plt+0xd060>
  413ea8:	ldr	x19, [x19]
  413eac:	cbnz	x19, 413e98 <wcrtomb@plt+0xf278>
  413eb0:	ldr	x1, [x20]
  413eb4:	ldr	x3, [x1, #16]
  413eb8:	ldr	x2, [x1, #24]
  413ebc:	cmp	x2, x3
  413ec0:	b.eq	413f00 <wcrtomb@plt+0xf2e0>  // b.none
  413ec4:	ldr	x0, [x1, #48]
  413ec8:	add	x2, x2, x0
  413ecc:	bic	x0, x2, x0
  413ed0:	ldr	x2, [x1, #8]
  413ed4:	ldr	x4, [x1, #32]
  413ed8:	sub	x5, x0, x2
  413edc:	sub	x2, x4, x2
  413ee0:	cmp	x5, x2
  413ee4:	csel	x0, x0, x4, ls  // ls = plast
  413ee8:	str	x0, [x1, #24]
  413eec:	str	x0, [x1, #16]
  413ef0:	str	x3, [x20, #16]
  413ef4:	ldp	x19, x20, [sp, #16]
  413ef8:	ldp	x29, x30, [sp], #32
  413efc:	ret
  413f00:	ldrb	w0, [x1, #80]
  413f04:	orr	w0, w0, #0x2
  413f08:	strb	w0, [x1, #80]
  413f0c:	b	413ec4 <wcrtomb@plt+0xf2a4>
  413f10:	stp	x29, x30, [sp, #-32]!
  413f14:	mov	x29, sp
  413f18:	str	x19, [sp, #16]
  413f1c:	mov	x19, x0
  413f20:	ldr	x0, [x0]
  413f24:	cbz	x0, 413f50 <wcrtomb@plt+0xf330>
  413f28:	mov	x1, #0x0                   	// #0
  413f2c:	bl	44111c <_obstack_free@@Base>
  413f30:	ldr	x0, [x19]
  413f34:	bl	4047c0 <free@plt>
  413f38:	str	xzr, [x19]
  413f3c:	str	xzr, [x19, #16]
  413f40:	str	xzr, [x19, #8]
  413f44:	ldr	x19, [sp, #16]
  413f48:	ldp	x29, x30, [sp], #32
  413f4c:	ret
  413f50:	ldr	x0, [x19, #16]
  413f54:	bl	4047c0 <free@plt>
  413f58:	b	413f3c <wcrtomb@plt+0xf31c>
  413f5c:	stp	x29, x30, [sp, #-64]!
  413f60:	mov	x29, sp
  413f64:	stp	x19, x20, [sp, #16]
  413f68:	stp	x21, x22, [sp, #32]
  413f6c:	stp	x23, x24, [sp, #48]
  413f70:	and	w24, w0, #0xff
  413f74:	mov	x0, x1
  413f78:	mov	x23, x3
  413f7c:	ldr	x20, [x3, #8]
  413f80:	cmp	w24, #0x67
  413f84:	b.eq	413fac <wcrtomb@plt+0xf38c>  // b.none
  413f88:	cmp	w24, #0x78
  413f8c:	b.eq	413fc4 <wcrtomb@plt+0xf3a4>  // b.none
  413f90:	mov	x1, x20
  413f94:	bl	40b244 <wcrtomb@plt+0x6624>
  413f98:	strb	w24, [x0, #156]
  413f9c:	bl	40b444 <wcrtomb@plt+0x6824>
  413fa0:	ldr	x21, [x23, #16]
  413fa4:	mov	x22, #0x200                 	// #512
  413fa8:	b	414014 <wcrtomb@plt+0xf3f4>
  413fac:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  413fb0:	ldr	x1, [x1, #2120]
  413fb4:	cbz	x1, 413f90 <wcrtomb@plt+0xf370>
  413fb8:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  413fbc:	ldr	x2, [x1, #2112]
  413fc0:	b	413f90 <wcrtomb@plt+0xf370>
  413fc4:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  413fc8:	ldr	x1, [x1, #2104]
  413fcc:	cbz	x1, 413f90 <wcrtomb@plt+0xf370>
  413fd0:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  413fd4:	ldr	x2, [x1, #2096]
  413fd8:	b	413f90 <wcrtomb@plt+0xf370>
  413fdc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  413fe0:	add	x0, x0, #0x800
  413fe4:	ldr	x1, [x0, #88]
  413fe8:	add	x1, x1, #0x1
  413fec:	str	x1, [x0, #88]
  413ff0:	b	41405c <wcrtomb@plt+0xf43c>
  413ff4:	mov	x2, x22
  413ff8:	mov	x1, x21
  413ffc:	bl	403f70 <memcpy@plt>
  414000:	add	x21, x21, #0x200
  414004:	sub	x20, x20, #0x200
  414008:	mov	x0, x19
  41400c:	bl	405884 <wcrtomb@plt+0xc64>
  414010:	cbz	x20, 41404c <wcrtomb@plt+0xf42c>
  414014:	bl	406d94 <wcrtomb@plt+0x2174>
  414018:	mov	x19, x0
  41401c:	cmp	x20, #0x1ff
  414020:	b.hi	413ff4 <wcrtomb@plt+0xf3d4>  // b.pmore
  414024:	mov	x2, x20
  414028:	mov	x1, x21
  41402c:	bl	403f70 <memcpy@plt>
  414030:	mov	x2, #0x200                 	// #512
  414034:	sub	x2, x2, x20
  414038:	mov	w1, #0x0                   	// #0
  41403c:	add	x0, x19, x20
  414040:	bl	404420 <memset@plt>
  414044:	mov	x0, x19
  414048:	bl	405884 <wcrtomb@plt+0xc64>
  41404c:	mov	x0, x23
  414050:	bl	413f10 <wcrtomb@plt+0xf2f0>
  414054:	cmp	w24, #0x67
  414058:	b.eq	413fdc <wcrtomb@plt+0xf3bc>  // b.none
  41405c:	ldp	x19, x20, [sp, #16]
  414060:	ldp	x21, x22, [sp, #32]
  414064:	ldp	x23, x24, [sp, #48]
  414068:	ldp	x29, x30, [sp], #64
  41406c:	ret
  414070:	stp	x29, x30, [sp, #-32]!
  414074:	mov	x29, sp
  414078:	stp	x19, x20, [sp, #16]
  41407c:	mov	x20, x0
  414080:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  414084:	ldr	x0, [x0, #2128]
  414088:	cbz	x0, 4140b8 <wcrtomb@plt+0xf498>
  41408c:	mov	x0, x20
  414090:	bl	411854 <wcrtomb@plt+0xcc34>
  414094:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  414098:	ldr	x19, [x0, #2128]
  41409c:	cbz	x19, 4140b8 <wcrtomb@plt+0xf498>
  4140a0:	mov	x2, x20
  4140a4:	ldr	x1, [x19, #8]
  4140a8:	ldr	x0, [x19, #16]
  4140ac:	bl	411c80 <wcrtomb@plt+0xd060>
  4140b0:	ldr	x19, [x19]
  4140b4:	cbnz	x19, 4140a0 <wcrtomb@plt+0xf480>
  4140b8:	ldr	x0, [x20]
  4140bc:	cbz	x0, 4140f0 <wcrtomb@plt+0xf4d0>
  4140c0:	mov	x0, x20
  4140c4:	bl	413e7c <wcrtomb@plt+0xf25c>
  4140c8:	bl	41380c <wcrtomb@plt+0xebec>
  4140cc:	mov	x19, x0
  4140d0:	mov	x3, x20
  4140d4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4140d8:	ldr	x2, [x0, #648]
  4140dc:	mov	x1, x19
  4140e0:	mov	w0, #0x67                  	// #103
  4140e4:	bl	413f5c <wcrtomb@plt+0xf33c>
  4140e8:	mov	x0, x19
  4140ec:	bl	4047c0 <free@plt>
  4140f0:	ldp	x19, x20, [sp, #16]
  4140f4:	ldp	x29, x30, [sp], #32
  4140f8:	ret
  4140fc:	str	xzr, [x0, #24]
  414100:	ret
  414104:	stp	x29, x30, [sp, #-32]!
  414108:	mov	x29, sp
  41410c:	stp	x19, x20, [sp, #16]
  414110:	mov	x19, x0
  414114:	ldr	x0, [x0, #16]
  414118:	cbz	x0, 414128 <wcrtomb@plt+0xf508>
  41411c:	ldp	x19, x20, [sp, #16]
  414120:	ldp	x29, x30, [sp], #32
  414124:	ret
  414128:	mov	x20, x1
  41412c:	mov	x0, x19
  414130:	bl	411854 <wcrtomb@plt+0xcc34>
  414134:	mov	x0, x20
  414138:	bl	403ff0 <strlen@plt>
  41413c:	ldr	x1, [x19, #24]
  414140:	add	x1, x1, x0
  414144:	str	x1, [x19, #24]
  414148:	mov	x0, x20
  41414c:	bl	403ff0 <strlen@plt>
  414150:	mov	x2, x0
  414154:	mov	x1, x20
  414158:	mov	x0, x19
  41415c:	bl	4119ac <wcrtomb@plt+0xcd8c>
  414160:	b	41411c <wcrtomb@plt+0xf4fc>
  414164:	stp	x29, x30, [sp, #-96]!
  414168:	mov	x29, sp
  41416c:	stp	x21, x22, [sp, #32]
  414170:	mov	x21, x0
  414174:	ldr	x0, [x0, #16]
  414178:	cbz	x0, 41418c <wcrtomb@plt+0xf56c>
  41417c:	mov	w0, #0x0                   	// #0
  414180:	ldp	x21, x22, [sp, #32]
  414184:	ldp	x29, x30, [sp], #96
  414188:	ret
  41418c:	stp	x19, x20, [sp, #16]
  414190:	stp	x23, x24, [sp, #48]
  414194:	mov	x23, x1
  414198:	mov	x0, x21
  41419c:	bl	411854 <wcrtomb@plt+0xcc34>
  4141a0:	mov	x0, x23
  4141a4:	bl	403ff0 <strlen@plt>
  4141a8:	ldr	x22, [x21, #24]
  4141ac:	add	x22, x22, #0x3
  4141b0:	add	x22, x22, x0
  4141b4:	mov	x19, #0x0                   	// #0
  4141b8:	add	x24, sp, #0x5c
  4141bc:	add	x1, sp, #0x48
  4141c0:	add	x0, x19, x22
  4141c4:	bl	438ce8 <argp_parse@@Base+0x55a8>
  4141c8:	mov	x20, x0
  4141cc:	mov	x2, x19
  4141d0:	sub	x19, x24, x0
  4141d4:	cmp	x2, x19
  4141d8:	b.ne	4141bc <wcrtomb@plt+0xf59c>  // b.any
  4141dc:	mov	x0, x23
  4141e0:	bl	403ff0 <strlen@plt>
  4141e4:	add	x19, x0, x19
  4141e8:	add	x19, x19, #0x2
  4141ec:	ldr	x22, [x21]
  4141f0:	ldr	x0, [x22, #32]
  4141f4:	ldr	x1, [x22, #24]
  4141f8:	sub	x0, x0, x1
  4141fc:	cmp	x19, x0
  414200:	b.hi	414280 <wcrtomb@plt+0xf660>  // b.pmore
  414204:	ldr	x0, [x22, #24]
  414208:	add	x0, x0, x19
  41420c:	str	x0, [x22, #24]
  414210:	ldr	x0, [x21, #8]
  414214:	add	x0, x0, x19
  414218:	str	x0, [x21, #8]
  41421c:	mov	w1, #0xa                   	// #10
  414220:	mov	x0, x21
  414224:	bl	411a28 <wcrtomb@plt+0xce08>
  414228:	ldr	x0, [x21]
  41422c:	ldr	x3, [x0, #24]
  414230:	ldr	x2, [x21, #24]
  414234:	mvn	x0, x2
  414238:	sub	x19, x0, x19
  41423c:	add	x19, x3, x19
  414240:	mov	x1, x19
  414244:	add	x0, x3, x0
  414248:	bl	403f80 <memmove@plt>
  41424c:	mov	x1, x20
  414250:	mov	x0, x19
  414254:	bl	404220 <stpcpy@plt>
  414258:	mov	w1, #0x20                  	// #32
  41425c:	strb	w1, [x0], #1
  414260:	mov	x1, x23
  414264:	bl	404220 <stpcpy@plt>
  414268:	mov	w1, #0x3d                  	// #61
  41426c:	strb	w1, [x0]
  414270:	mov	w0, #0x1                   	// #1
  414274:	ldp	x19, x20, [sp, #16]
  414278:	ldp	x23, x24, [sp, #48]
  41427c:	b	414180 <wcrtomb@plt+0xf560>
  414280:	mov	x1, x19
  414284:	mov	x0, x22
  414288:	bl	440fcc <_obstack_newchunk@@Base>
  41428c:	b	414204 <wcrtomb@plt+0xf5e4>
  414290:	ldr	x2, [x0, #24]
  414294:	ldr	x0, [x0, #32]
  414298:	add	x2, x2, x0
  41429c:	udiv	x0, x2, x1
  4142a0:	msub	x0, x0, x1, x2
  4142a4:	ret
  4142a8:	ldr	x3, [x0, #24]
  4142ac:	ldr	x2, [x1, #24]
  4142b0:	cmp	x3, x2
  4142b4:	b.eq	4142c0 <wcrtomb@plt+0xf6a0>  // b.none
  4142b8:	mov	w0, #0x0                   	// #0
  4142bc:	ret
  4142c0:	ldr	x2, [x0, #32]
  4142c4:	ldr	x0, [x1, #32]
  4142c8:	cmp	x2, x0
  4142cc:	cset	w0, eq  // eq = none
  4142d0:	b	4142bc <wcrtomb@plt+0xf69c>
  4142d4:	stp	x29, x30, [sp, #-48]!
  4142d8:	mov	x29, sp
  4142dc:	stp	x19, x20, [sp, #16]
  4142e0:	str	x21, [sp, #32]
  4142e4:	mov	x19, x0
  4142e8:	ldr	x20, [x0, #16]
  4142ec:	ldr	w0, [x0, #8]
  4142f0:	cbz	w0, 414330 <wcrtomb@plt+0xf710>
  4142f4:	ldr	x0, [x19]
  4142f8:	ldr	x0, [x0]
  4142fc:	add	x21, x0, x20
  414300:	ldrb	w0, [x0, x20]
  414304:	cbz	w0, 41435c <wcrtomb@plt+0xf73c>
  414308:	mov	x0, x21
  41430c:	bl	403ff0 <strlen@plt>
  414310:	add	x20, x20, #0x1
  414314:	add	x20, x20, x0
  414318:	str	x20, [x19, #16]
  41431c:	mov	x0, x21
  414320:	ldp	x19, x20, [sp, #16]
  414324:	ldr	x21, [sp, #32]
  414328:	ldp	x29, x30, [sp], #48
  41432c:	ret
  414330:	ldr	x0, [x19]
  414334:	ldr	x1, [x0, #16]
  414338:	mov	x21, #0x0                   	// #0
  41433c:	cmp	x1, x20
  414340:	b.ls	41431c <wcrtomb@plt+0xf6fc>  // b.plast
  414344:	ldr	x0, [x0, #24]
  414348:	ldr	x21, [x0, x20, lsl #3]
  41434c:	sub	x21, x21, #0x1
  414350:	add	x20, x20, #0x1
  414354:	str	x20, [x19, #16]
  414358:	b	41431c <wcrtomb@plt+0xf6fc>
  41435c:	mov	x21, #0x0                   	// #0
  414360:	b	41431c <wcrtomb@plt+0xf6fc>
  414364:	stp	x29, x30, [sp, #-32]!
  414368:	mov	x29, sp
  41436c:	str	x19, [sp, #16]
  414370:	mov	x19, x0
  414374:	ldr	x0, [x0, #80]
  414378:	bl	4047c0 <free@plt>
  41437c:	ldr	x0, [x19, #88]
  414380:	bl	4047c0 <free@plt>
  414384:	mov	x0, x19
  414388:	bl	4047c0 <free@plt>
  41438c:	ldr	x19, [sp, #16]
  414390:	ldp	x29, x30, [sp], #32
  414394:	ret
  414398:	stp	x29, x30, [sp, #-32]!
  41439c:	mov	x29, sp
  4143a0:	str	x19, [sp, #16]
  4143a4:	mov	x19, x0
  4143a8:	ldr	x0, [x0, #24]
  4143ac:	bl	4047c0 <free@plt>
  4143b0:	mov	x0, x19
  4143b4:	bl	4047c0 <free@plt>
  4143b8:	ldr	x19, [sp, #16]
  4143bc:	ldp	x29, x30, [sp], #32
  4143c0:	ret
  4143c4:	stp	x29, x30, [sp, #-64]!
  4143c8:	mov	x29, sp
  4143cc:	stp	x19, x20, [sp, #16]
  4143d0:	stp	x21, x22, [sp, #32]
  4143d4:	str	x23, [sp, #48]
  4143d8:	mov	x23, x0
  4143dc:	mov	x20, x1
  4143e0:	bl	403ff0 <strlen@plt>
  4143e4:	mov	x22, x0
  4143e8:	mov	x0, x20
  4143ec:	bl	403ff0 <strlen@plt>
  4143f0:	mov	x21, x0
  4143f4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4143f8:	ldr	x19, [x0, #2152]
  4143fc:	cbz	x19, 414420 <wcrtomb@plt+0xf800>
  414400:	mov	x4, x21
  414404:	mov	x3, x20
  414408:	mov	x2, x22
  41440c:	mov	x1, x23
  414410:	add	x0, x19, #0x58
  414414:	bl	41aac8 <wcrtomb@plt+0x15ea8>
  414418:	ldr	x19, [x19]
  41441c:	cbnz	x19, 414400 <wcrtomb@plt+0xf7e0>
  414420:	ldp	x19, x20, [sp, #16]
  414424:	ldp	x21, x22, [sp, #32]
  414428:	ldr	x23, [sp, #48]
  41442c:	ldp	x29, x30, [sp], #64
  414430:	ret
  414434:	stp	x29, x30, [sp, #-64]!
  414438:	mov	x29, sp
  41443c:	stp	x19, x20, [sp, #16]
  414440:	stp	x21, x22, [sp, #32]
  414444:	str	x23, [sp, #48]
  414448:	mov	x22, x0
  41444c:	mov	x23, x1
  414450:	bl	403ff0 <strlen@plt>
  414454:	mov	x20, x0
  414458:	mov	x0, #0x60                  	// #96
  41445c:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  414460:	mov	x19, x0
  414464:	str	xzr, [x0]
  414468:	str	xzr, [x0, #48]
  41446c:	str	xzr, [x0, #40]
  414470:	str	xzr, [x0, #64]
  414474:	str	wzr, [x0, #60]
  414478:	cmp	x20, #0x1
  41447c:	b.ls	414490 <wcrtomb@plt+0xf870>  // b.plast
  414480:	sub	x0, x20, #0x1
  414484:	ldrb	w1, [x22, x0]
  414488:	cmp	w1, #0x2f
  41448c:	csel	x20, x20, x0, ne  // ne = any
  414490:	add	x0, x20, #0x1
  414494:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  414498:	mov	x21, x0
  41449c:	str	x0, [x19, #88]
  4144a0:	mov	x2, x20
  4144a4:	mov	x1, x22
  4144a8:	bl	403f70 <memcpy@plt>
  4144ac:	strb	wzr, [x21, x20]
  4144b0:	str	x23, [x19, #80]
  4144b4:	str	xzr, [x19, #72]
  4144b8:	mov	x0, x19
  4144bc:	ldp	x19, x20, [sp, #16]
  4144c0:	ldp	x21, x22, [sp, #32]
  4144c4:	ldr	x23, [sp, #48]
  4144c8:	ldp	x29, x30, [sp], #64
  4144cc:	ret
  4144d0:	stp	x29, x30, [sp, #-32]!
  4144d4:	mov	x29, sp
  4144d8:	stp	x19, x20, [sp, #16]
  4144dc:	mov	x20, x0
  4144e0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4144e4:	ldr	x19, [x0, #2160]
  4144e8:	cbz	x19, 414528 <wcrtomb@plt+0xf908>
  4144ec:	mov	x1, x20
  4144f0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4144f4:	ldr	w0, [x0, #4032]
  4144f8:	bl	41a9d4 <wcrtomb@plt+0x15db4>
  4144fc:	mov	x1, x0
  414500:	mov	x0, x20
  414504:	bl	414434 <wcrtomb@plt+0xf814>
  414508:	mov	x20, x0
  41450c:	mov	x1, x0
  414510:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  414514:	ldr	x0, [x0, #2160]
  414518:	bl	437a0c <argp_parse@@Base+0x42cc>
  41451c:	mov	x19, x0
  414520:	mov	x0, x20
  414524:	bl	414364 <wcrtomb@plt+0xf744>
  414528:	mov	x0, x19
  41452c:	ldp	x19, x20, [sp, #16]
  414530:	ldp	x29, x30, [sp], #32
  414534:	ret
  414538:	stp	x29, x30, [sp, #-48]!
  41453c:	mov	x29, sp
  414540:	stp	x19, x20, [sp, #16]
  414544:	stp	x21, x22, [sp, #32]
  414548:	mov	x22, x0
  41454c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  414550:	ldr	x19, [x0, #2168]
  414554:	cbz	x19, 414594 <wcrtomb@plt+0xf974>
  414558:	mov	x21, x1
  41455c:	mov	x1, #0x0                   	// #0
  414560:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  414564:	add	x0, x0, #0x7f8
  414568:	bl	414434 <wcrtomb@plt+0xf814>
  41456c:	mov	x20, x0
  414570:	str	x22, [x0, #24]
  414574:	str	x21, [x0, #32]
  414578:	mov	x1, x0
  41457c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  414580:	ldr	x0, [x0, #2168]
  414584:	bl	437a0c <argp_parse@@Base+0x42cc>
  414588:	mov	x19, x0
  41458c:	mov	x0, x20
  414590:	bl	414364 <wcrtomb@plt+0xf744>
  414594:	mov	x0, x19
  414598:	ldp	x19, x20, [sp, #16]
  41459c:	ldp	x21, x22, [sp, #32]
  4145a0:	ldp	x29, x30, [sp], #48
  4145a4:	ret
  4145a8:	stp	x29, x30, [sp, #-16]!
  4145ac:	mov	x29, sp
  4145b0:	ldr	x1, [x1]
  4145b4:	ldr	x0, [x0]
  4145b8:	bl	404720 <strcmp@plt>
  4145bc:	ldp	x29, x30, [sp], #16
  4145c0:	ret
  4145c4:	stp	x29, x30, [sp, #-80]!
  4145c8:	mov	x29, sp
  4145cc:	stp	x19, x20, [sp, #16]
  4145d0:	str	x1, [sp, #72]
  4145d4:	cbz	x0, 41465c <wcrtomb@plt+0xfa3c>
  4145d8:	stp	x21, x22, [sp, #32]
  4145dc:	str	x23, [sp, #48]
  4145e0:	ldr	x23, [x0, #24]
  4145e4:	ldr	x22, [x0, #16]
  4145e8:	mov	x21, #0x0                   	// #0
  4145ec:	b	4145f4 <wcrtomb@plt+0xf9d4>
  4145f0:	mov	x22, x19
  4145f4:	cmp	x22, x21
  4145f8:	b.ls	414628 <wcrtomb@plt+0xfa08>  // b.plast
  4145fc:	add	x19, x22, x21
  414600:	lsr	x19, x19, #1
  414604:	add	x20, x23, x19, lsl #3
  414608:	mov	x1, x20
  41460c:	add	x0, sp, #0x48
  414610:	bl	4145a8 <wcrtomb@plt+0xf988>
  414614:	tbnz	w0, #31, 4145f0 <wcrtomb@plt+0xf9d0>
  414618:	cmp	w0, #0x0
  41461c:	b.le	414638 <wcrtomb@plt+0xfa18>
  414620:	add	x21, x19, #0x1
  414624:	b	4145f4 <wcrtomb@plt+0xf9d4>
  414628:	mov	x20, #0x0                   	// #0
  41462c:	ldp	x21, x22, [sp, #32]
  414630:	ldr	x23, [sp, #48]
  414634:	b	41464c <wcrtomb@plt+0xfa2c>
  414638:	cbz	x20, 414664 <wcrtomb@plt+0xfa44>
  41463c:	ldr	x20, [x20]
  414640:	sub	x20, x20, #0x1
  414644:	ldp	x21, x22, [sp, #32]
  414648:	ldr	x23, [sp, #48]
  41464c:	mov	x0, x20
  414650:	ldp	x19, x20, [sp, #16]
  414654:	ldp	x29, x30, [sp], #80
  414658:	ret
  41465c:	mov	x20, x0
  414660:	b	41464c <wcrtomb@plt+0xfa2c>
  414664:	ldp	x21, x22, [sp, #32]
  414668:	ldr	x23, [sp, #48]
  41466c:	b	41464c <wcrtomb@plt+0xfa2c>
  414670:	stp	x29, x30, [sp, #-16]!
  414674:	mov	x29, sp
  414678:	ldr	x1, [x1, #80]
  41467c:	ldr	x0, [x0, #80]
  414680:	bl	404720 <strcmp@plt>
  414684:	cmp	w0, #0x0
  414688:	cset	w0, eq  // eq = none
  41468c:	ldp	x29, x30, [sp], #16
  414690:	ret
  414694:	stp	x29, x30, [sp, #-80]!
  414698:	mov	x29, sp
  41469c:	stp	x19, x20, [sp, #16]
  4146a0:	stp	x21, x22, [sp, #32]
  4146a4:	stp	x23, x24, [sp, #48]
  4146a8:	stp	x25, x26, [sp, #64]
  4146ac:	mov	x26, x0
  4146b0:	mov	x21, x1
  4146b4:	ldrb	w22, [x0]
  4146b8:	cbz	w22, 41470c <wcrtomb@plt+0xfaec>
  4146bc:	mov	x20, x0
  4146c0:	mov	x23, #0x1                   	// #1
  4146c4:	mov	x24, #0x0                   	// #0
  4146c8:	mov	x25, #0x0                   	// #0
  4146cc:	b	4146e4 <wcrtomb@plt+0xfac4>
  4146d0:	add	x25, x25, #0x1
  4146d4:	add	x24, x24, #0x1
  4146d8:	add	x20, x20, x19
  4146dc:	ldrb	w22, [x20]
  4146e0:	cbz	w22, 414718 <wcrtomb@plt+0xfaf8>
  4146e4:	mov	x0, x20
  4146e8:	bl	403ff0 <strlen@plt>
  4146ec:	add	x19, x0, #0x1
  4146f0:	add	x23, x23, x19
  4146f4:	cbz	x21, 4146d0 <wcrtomb@plt+0xfab0>
  4146f8:	mov	w1, w22
  4146fc:	mov	x0, x21
  414700:	bl	404870 <strchr@plt>
  414704:	cbnz	x0, 4146d0 <wcrtomb@plt+0xfab0>
  414708:	b	4146d4 <wcrtomb@plt+0xfab4>
  41470c:	mov	x23, #0x1                   	// #1
  414710:	mov	x24, #0x0                   	// #0
  414714:	mov	x25, #0x0                   	// #0
  414718:	add	x0, x23, #0x20
  41471c:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  414720:	mov	x22, x0
  414724:	add	x0, x0, #0x20
  414728:	str	x0, [x22]
  41472c:	mov	x2, x23
  414730:	mov	x1, x26
  414734:	bl	403f70 <memcpy@plt>
  414738:	str	x24, [x22, #8]
  41473c:	str	x25, [x22, #16]
  414740:	mov	x1, #0x8                   	// #8
  414744:	add	x0, x25, #0x1
  414748:	bl	4400e8 <argp_parse@@Base+0xc9a8>
  41474c:	str	x0, [x22, #24]
  414750:	ldr	x19, [x22]
  414754:	ldrb	w1, [x19]
  414758:	cbz	w1, 4147a0 <wcrtomb@plt+0xfb80>
  41475c:	mov	x20, #0x0                   	// #0
  414760:	b	41478c <wcrtomb@plt+0xfb6c>
  414764:	ldr	x0, [x22, #24]
  414768:	add	x1, x19, #0x1
  41476c:	str	x1, [x0, x20, lsl #3]
  414770:	add	x20, x20, #0x1
  414774:	mov	x0, x19
  414778:	bl	403ff0 <strlen@plt>
  41477c:	add	x0, x0, #0x1
  414780:	add	x19, x19, x0
  414784:	ldrb	w1, [x19]
  414788:	cbz	w1, 4147a4 <wcrtomb@plt+0xfb84>
  41478c:	cbz	x21, 414764 <wcrtomb@plt+0xfb44>
  414790:	mov	x0, x21
  414794:	bl	404870 <strchr@plt>
  414798:	cbnz	x0, 414764 <wcrtomb@plt+0xfb44>
  41479c:	b	414774 <wcrtomb@plt+0xfb54>
  4147a0:	mov	x20, #0x0                   	// #0
  4147a4:	ldr	x0, [x22, #24]
  4147a8:	str	xzr, [x0, x20, lsl #3]
  4147ac:	mov	x0, x22
  4147b0:	ldp	x19, x20, [sp, #16]
  4147b4:	ldp	x21, x22, [sp, #32]
  4147b8:	ldp	x23, x24, [sp, #48]
  4147bc:	ldp	x25, x26, [sp, #64]
  4147c0:	ldp	x29, x30, [sp], #80
  4147c4:	ret
  4147c8:	stp	x29, x30, [sp, #-80]!
  4147cc:	mov	x29, sp
  4147d0:	stp	x19, x20, [sp, #16]
  4147d4:	stp	x21, x22, [sp, #32]
  4147d8:	stp	x23, x24, [sp, #48]
  4147dc:	stp	x25, x26, [sp, #64]
  4147e0:	mov	x19, x0
  4147e4:	mov	x24, x1
  4147e8:	mov	x23, x2
  4147ec:	mov	x22, x3
  4147f0:	mov	x21, x4
  4147f4:	and	w26, w5, #0xff
  4147f8:	and	w25, w6, #0xff
  4147fc:	mov	x20, x7
  414800:	mov	x1, x0
  414804:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  414808:	ldr	w0, [x0, #4032]
  41480c:	bl	41a9d4 <wcrtomb@plt+0x15db4>
  414810:	mov	x1, x0
  414814:	mov	x0, x19
  414818:	bl	414434 <wcrtomb@plt+0xf814>
  41481c:	mov	x19, x0
  414820:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  414824:	ldr	x0, [x0, #2176]
  414828:	cbz	x0, 4148e4 <wcrtomb@plt+0xfcc4>
  41482c:	str	x19, [x0]
  414830:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  414834:	str	x19, [x0, #2176]
  414838:	str	x24, [x19, #8]
  41483c:	str	x23, [x19, #16]
  414840:	str	x22, [x19, #24]
  414844:	str	x21, [x19, #32]
  414848:	mov	w0, #0x1                   	// #1
  41484c:	str	w0, [x19, #56]
  414850:	cbz	w26, 414860 <wcrtomb@plt+0xfc40>
  414854:	ldr	w0, [x19, #60]
  414858:	orr	w0, w0, #0x2
  41485c:	str	w0, [x19, #60]
  414860:	cbz	w25, 414870 <wcrtomb@plt+0xfc50>
  414864:	ldr	w0, [x19, #60]
  414868:	orr	w0, w0, #0x4
  41486c:	str	w0, [x19, #60]
  414870:	cbz	x20, 4148f0 <wcrtomb@plt+0xfcd0>
  414874:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  414878:	add	x1, x1, #0x5e0
  41487c:	mov	x0, x20
  414880:	bl	414694 <wcrtomb@plt+0xfa74>
  414884:	str	x0, [x19, #40]
  414888:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41488c:	ldr	x0, [x0, #2160]
  414890:	cbz	x0, 4148f8 <wcrtomb@plt+0xfcd8>
  414894:	mov	x1, x19
  414898:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41489c:	ldr	x0, [x0, #2160]
  4148a0:	bl	4381cc <argp_parse@@Base+0x4a8c>
  4148a4:	cbz	x0, 414920 <wcrtomb@plt+0xfd00>
  4148a8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4148ac:	ldr	x0, [x0, #2168]
  4148b0:	cbz	x0, 414924 <wcrtomb@plt+0xfd04>
  4148b4:	mov	x1, x19
  4148b8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4148bc:	ldr	x0, [x0, #2168]
  4148c0:	bl	4381cc <argp_parse@@Base+0x4a8c>
  4148c4:	cbz	x0, 41494c <wcrtomb@plt+0xfd2c>
  4148c8:	mov	x0, x19
  4148cc:	ldp	x19, x20, [sp, #16]
  4148d0:	ldp	x21, x22, [sp, #32]
  4148d4:	ldp	x23, x24, [sp, #48]
  4148d8:	ldp	x25, x26, [sp, #64]
  4148dc:	ldp	x29, x30, [sp], #80
  4148e0:	ret
  4148e4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4148e8:	str	x19, [x0, #2152]
  4148ec:	b	414830 <wcrtomb@plt+0xfc10>
  4148f0:	str	xzr, [x19, #40]
  4148f4:	b	414888 <wcrtomb@plt+0xfc68>
  4148f8:	mov	x4, #0x0                   	// #0
  4148fc:	adrp	x3, 414000 <wcrtomb@plt+0xf3e0>
  414900:	add	x3, x3, #0x670
  414904:	adrp	x2, 414000 <wcrtomb@plt+0xf3e0>
  414908:	add	x2, x2, #0x950
  41490c:	mov	x1, #0x0                   	// #0
  414910:	bl	437c94 <argp_parse@@Base+0x4554>
  414914:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  414918:	str	x0, [x1, #2160]
  41491c:	cbnz	x0, 414894 <wcrtomb@plt+0xfc74>
  414920:	bl	40e5ec <wcrtomb@plt+0x99cc>
  414924:	mov	x4, #0x0                   	// #0
  414928:	adrp	x3, 414000 <wcrtomb@plt+0xf3e0>
  41492c:	add	x3, x3, #0x2a8
  414930:	adrp	x2, 414000 <wcrtomb@plt+0xf3e0>
  414934:	add	x2, x2, #0x290
  414938:	mov	x1, #0x0                   	// #0
  41493c:	bl	437c94 <argp_parse@@Base+0x4554>
  414940:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  414944:	str	x0, [x1, #2168]
  414948:	cbnz	x0, 4148b4 <wcrtomb@plt+0xfc94>
  41494c:	bl	40e5ec <wcrtomb@plt+0x99cc>
  414950:	stp	x29, x30, [sp, #-16]!
  414954:	mov	x29, sp
  414958:	ldr	x0, [x0, #80]
  41495c:	bl	437c40 <argp_parse@@Base+0x4500>
  414960:	ldp	x29, x30, [sp], #16
  414964:	ret
  414968:	stp	x29, x30, [sp, #-112]!
  41496c:	mov	x29, sp
  414970:	stp	x19, x20, [sp, #16]
  414974:	stp	x21, x22, [sp, #32]
  414978:	stp	x23, x24, [sp, #48]
  41497c:	stp	x25, x26, [sp, #64]
  414980:	mov	x22, x0
  414984:	mov	x21, x1
  414988:	mov	w20, w2
  41498c:	mov	x23, x3
  414990:	ldr	x25, [x1, #88]
  414994:	bl	4144d0 <wcrtomb@plt+0xf8b0>
  414998:	cbz	x0, 414bb0 <wcrtomb@plt+0xff90>
  41499c:	mov	x19, x0
  4149a0:	ldr	w0, [x0, #60]
  4149a4:	tbz	w0, #0, 4149c4 <wcrtomb@plt+0xfda4>
  4149a8:	tbnz	w20, #5, 4149b8 <wcrtomb@plt+0xfd98>
  4149ac:	mov	w0, #0x4e                  	// #78
  4149b0:	strb	w0, [x23]
  4149b4:	b	414df8 <wcrtomb@plt+0x101d8>
  4149b8:	mov	x1, x22
  4149bc:	add	x0, x19, #0x58
  4149c0:	bl	41a5bc <wcrtomb@plt+0x1599c>
  4149c4:	mov	x1, x22
  4149c8:	ldr	x0, [x19, #88]
  4149cc:	bl	404720 <strcmp@plt>
  4149d0:	cbnz	w0, 414b64 <wcrtomb@plt+0xff44>
  4149d4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4149d8:	ldrb	w0, [x0, #4064]
  4149dc:	cbz	w0, 414a00 <wcrtomb@plt+0xfde0>
  4149e0:	ldr	w0, [x19, #60]
  4149e4:	tst	x0, #0x2
  4149e8:	ccmp	x25, #0x0, #0x0, ne  // ne = any
  4149ec:	b.lt	414a00 <wcrtomb@plt+0xfde0>  // b.tstop
  4149f0:	ldr	x1, [x19, #24]
  4149f4:	ldr	x0, [x21, #88]
  4149f8:	cmp	x1, x0
  4149fc:	b.ne	414a10 <wcrtomb@plt+0xfdf0>  // b.any
  414a00:	ldr	x1, [x19, #32]
  414a04:	ldr	x0, [x21, #96]
  414a08:	cmp	x1, x0
  414a0c:	b.eq	414ba0 <wcrtomb@plt+0xff80>  // b.none
  414a10:	ldr	x1, [x21, #96]
  414a14:	ldr	x0, [x21, #88]
  414a18:	bl	414538 <wcrtomb@plt+0xf918>
  414a1c:	mov	x24, x0
  414a20:	cbz	x0, 414b70 <wcrtomb@plt+0xff50>
  414a24:	mov	x1, x22
  414a28:	ldr	x0, [x0, #88]
  414a2c:	bl	404720 <strcmp@plt>
  414a30:	cbz	w0, 414abc <wcrtomb@plt+0xfe9c>
  414a34:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  414a38:	ldr	w0, [x0, #408]
  414a3c:	tbz	w0, #13, 414aa0 <wcrtomb@plt+0xfe80>
  414a40:	str	x27, [sp, #80]
  414a44:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  414a48:	ldr	x0, [x0, #944]
  414a4c:	cbz	x0, 414a54 <wcrtomb@plt+0xfe34>
  414a50:	blr	x0
  414a54:	mov	w2, #0x5                   	// #5
  414a58:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  414a5c:	add	x1, x1, #0x5e8
  414a60:	mov	x0, #0x0                   	// #0
  414a64:	bl	4049c0 <dcgettext@plt>
  414a68:	mov	x26, x0
  414a6c:	mov	x0, x22
  414a70:	bl	43efc4 <argp_parse@@Base+0xb884>
  414a74:	mov	x27, x0
  414a78:	ldr	x1, [x24, #88]
  414a7c:	mov	w0, #0x1                   	// #1
  414a80:	bl	43f17c <argp_parse@@Base+0xba3c>
  414a84:	mov	x4, x0
  414a88:	mov	x3, x27
  414a8c:	mov	x2, x26
  414a90:	mov	w1, #0x0                   	// #0
  414a94:	mov	w0, #0x0                   	// #0
  414a98:	bl	404050 <error@plt>
  414a9c:	ldr	x27, [sp, #80]
  414aa0:	str	x24, [x19, #64]
  414aa4:	ldr	w0, [x19, #60]
  414aa8:	orr	w0, w0, #0x10
  414aac:	str	w0, [x19, #60]
  414ab0:	mov	x1, x22
  414ab4:	ldr	x0, [x24, #88]
  414ab8:	bl	4143c4 <wcrtomb@plt+0xf7a4>
  414abc:	mov	w0, #0x1                   	// #1
  414ac0:	str	w0, [x19, #56]
  414ac4:	mov	w1, #0x0                   	// #0
  414ac8:	tbnz	x25, #63, 414b90 <wcrtomb@plt+0xff70>
  414acc:	ldr	w0, [x19, #60]
  414ad0:	orr	w0, w0, #0x4
  414ad4:	str	w0, [x19, #60]
  414ad8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  414adc:	ldrb	w0, [x0, #21]
  414ae0:	cbz	w0, 414d78 <wcrtomb@plt+0x10158>
  414ae4:	ldr	x0, [x21, #392]
  414ae8:	cbz	x0, 414d78 <wcrtomb@plt+0x10158>
  414aec:	ldr	x2, [x21, #88]
  414af0:	ldr	x0, [x0, #88]
  414af4:	cmp	x2, x0
  414af8:	b.eq	414d78 <wcrtomb@plt+0x10158>  // b.none
  414afc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  414b00:	ldr	w0, [x0, #408]
  414b04:	tbz	w0, #18, 414b4c <wcrtomb@plt+0xff2c>
  414b08:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  414b0c:	ldr	x0, [x0, #944]
  414b10:	cbz	x0, 414b18 <wcrtomb@plt+0xfef8>
  414b14:	blr	x0
  414b18:	mov	w2, #0x5                   	// #5
  414b1c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  414b20:	add	x1, x1, #0x628
  414b24:	mov	x0, #0x0                   	// #0
  414b28:	bl	4049c0 <dcgettext@plt>
  414b2c:	mov	x20, x0
  414b30:	ldr	x0, [x19, #88]
  414b34:	bl	43efc4 <argp_parse@@Base+0xb884>
  414b38:	mov	x3, x0
  414b3c:	mov	x2, x20
  414b40:	mov	w1, #0x0                   	// #0
  414b44:	mov	w0, #0x0                   	// #0
  414b48:	bl	404050 <error@plt>
  414b4c:	str	wzr, [x19, #56]
  414b50:	ldr	x0, [x19, #40]
  414b54:	cbz	x0, 414de4 <wcrtomb@plt+0x101c4>
  414b58:	bl	414398 <wcrtomb@plt+0xf778>
  414b5c:	str	xzr, [x19, #40]
  414b60:	b	414de4 <wcrtomb@plt+0x101c4>
  414b64:	mov	w0, #0x4e                  	// #78
  414b68:	strb	w0, [x23]
  414b6c:	b	414df8 <wcrtomb@plt+0x101d8>
  414b70:	mov	w0, #0x2                   	// #2
  414b74:	str	w0, [x19, #56]
  414b78:	ldr	x0, [x21, #88]
  414b7c:	str	x0, [x19, #24]
  414b80:	ldr	x0, [x21, #96]
  414b84:	str	x0, [x19, #32]
  414b88:	mov	w1, #0x1                   	// #1
  414b8c:	b	414ac8 <wcrtomb@plt+0xfea8>
  414b90:	ldr	w0, [x19, #60]
  414b94:	orr	w0, w0, #0x2
  414b98:	str	w0, [x19, #60]
  414b9c:	b	414acc <wcrtomb@plt+0xfeac>
  414ba0:	mov	w0, #0x1                   	// #1
  414ba4:	str	w0, [x19, #56]
  414ba8:	mov	w1, #0x0                   	// #0
  414bac:	b	414acc <wcrtomb@plt+0xfeac>
  414bb0:	ldr	x1, [x21, #96]
  414bb4:	ldr	x0, [x21, #88]
  414bb8:	bl	414538 <wcrtomb@plt+0xf918>
  414bbc:	mov	x24, x0
  414bc0:	mov	x7, #0x0                   	// #0
  414bc4:	mov	w6, #0x1                   	// #1
  414bc8:	lsr	x5, x25, #63
  414bcc:	ldr	x4, [x21, #96]
  414bd0:	ldr	x3, [x21, #88]
  414bd4:	ldr	x1, [x21, #176]
  414bd8:	ldr	x2, [x21, #184]
  414bdc:	mov	x0, x22
  414be0:	bl	4147c8 <wcrtomb@plt+0xfba8>
  414be4:	mov	x19, x0
  414be8:	cbz	x24, 414c8c <wcrtomb@plt+0x1006c>
  414bec:	mov	x1, x22
  414bf0:	ldr	x0, [x24, #88]
  414bf4:	bl	404720 <strcmp@plt>
  414bf8:	cbz	w0, 414c7c <wcrtomb@plt+0x1005c>
  414bfc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  414c00:	ldr	w0, [x0, #408]
  414c04:	tbz	w0, #13, 414c60 <wcrtomb@plt+0x10040>
  414c08:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  414c0c:	ldr	x0, [x0, #944]
  414c10:	cbz	x0, 414c18 <wcrtomb@plt+0xfff8>
  414c14:	blr	x0
  414c18:	mov	w2, #0x5                   	// #5
  414c1c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  414c20:	add	x1, x1, #0x5e8
  414c24:	mov	x0, #0x0                   	// #0
  414c28:	bl	4049c0 <dcgettext@plt>
  414c2c:	mov	x25, x0
  414c30:	mov	x0, x22
  414c34:	bl	43efc4 <argp_parse@@Base+0xb884>
  414c38:	mov	x26, x0
  414c3c:	ldr	x1, [x24, #88]
  414c40:	mov	w0, #0x1                   	// #1
  414c44:	bl	43f17c <argp_parse@@Base+0xba3c>
  414c48:	mov	x4, x0
  414c4c:	mov	x3, x26
  414c50:	mov	x2, x25
  414c54:	mov	w1, #0x0                   	// #0
  414c58:	mov	w0, #0x0                   	// #0
  414c5c:	bl	404050 <error@plt>
  414c60:	str	x24, [x19, #64]
  414c64:	ldr	w0, [x19, #60]
  414c68:	orr	w0, w0, #0x10
  414c6c:	str	w0, [x19, #60]
  414c70:	mov	x1, x22
  414c74:	ldr	x0, [x24, #88]
  414c78:	bl	4143c4 <wcrtomb@plt+0xf7a4>
  414c7c:	mov	w0, #0x1                   	// #1
  414c80:	str	w0, [x19, #56]
  414c84:	mov	w1, #0x0                   	// #0
  414c88:	b	414ad8 <wcrtomb@plt+0xfeb8>
  414c8c:	ldr	w0, [x0, #60]
  414c90:	orr	w0, w0, #0x8
  414c94:	str	w0, [x19, #60]
  414c98:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  414c9c:	ldr	w0, [x0, #408]
  414ca0:	tbz	w0, #12, 414ce8 <wcrtomb@plt+0x100c8>
  414ca4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  414ca8:	ldr	x0, [x0, #944]
  414cac:	cbz	x0, 414cb4 <wcrtomb@plt+0x10094>
  414cb0:	blr	x0
  414cb4:	mov	w2, #0x5                   	// #5
  414cb8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  414cbc:	add	x1, x1, #0x610
  414cc0:	mov	x0, #0x0                   	// #0
  414cc4:	bl	4049c0 <dcgettext@plt>
  414cc8:	mov	x24, x0
  414ccc:	mov	x0, x22
  414cd0:	bl	43efc4 <argp_parse@@Base+0xb884>
  414cd4:	mov	x3, x0
  414cd8:	mov	x2, x24
  414cdc:	mov	w1, #0x0                   	// #0
  414ce0:	mov	w0, #0x0                   	// #0
  414ce4:	bl	404050 <error@plt>
  414ce8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  414cec:	ldr	x1, [x0, #768]
  414cf0:	mov	w0, #0x2                   	// #2
  414cf4:	cbz	x1, 414d04 <wcrtomb@plt+0x100e4>
  414cf8:	str	w0, [x19, #56]
  414cfc:	mov	w1, #0x0                   	// #0
  414d00:	b	414ad8 <wcrtomb@plt+0xfeb8>
  414d04:	ldr	x0, [x21, #176]
  414d08:	ldr	x3, [x21, #184]
  414d0c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  414d10:	add	x2, x1, #0xfe8
  414d14:	ldr	x1, [x1, #4072]
  414d18:	ldr	x2, [x2, #8]
  414d1c:	cmp	x0, x1
  414d20:	b.lt	414d68 <wcrtomb@plt+0x10148>  // b.tstop
  414d24:	b.gt	414d34 <wcrtomb@plt+0x10114>
  414d28:	mov	w0, #0x2                   	// #2
  414d2c:	cmp	w3, w2
  414d30:	b.mi	414cf8 <wcrtomb@plt+0x100d8>  // b.first
  414d34:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  414d38:	ldr	w3, [x0, #908]
  414d3c:	mov	w0, #0x1                   	// #1
  414d40:	cbz	w3, 414cf8 <wcrtomb@plt+0x100d8>
  414d44:	ldr	x3, [x21, #192]
  414d48:	ldr	x4, [x21, #200]
  414d4c:	cmp	x1, x3
  414d50:	b.gt	414d70 <wcrtomb@plt+0x10150>
  414d54:	b.lt	414cf8 <wcrtomb@plt+0x100d8>  // b.tstop
  414d58:	sub	w0, w4, w2
  414d5c:	lsr	w0, w0, #31
  414d60:	add	w0, w0, #0x1
  414d64:	b	414cf8 <wcrtomb@plt+0x100d8>
  414d68:	mov	w0, #0x2                   	// #2
  414d6c:	b	414cf8 <wcrtomb@plt+0x100d8>
  414d70:	mov	w0, #0x2                   	// #2
  414d74:	b	414cf8 <wcrtomb@plt+0x100d8>
  414d78:	tbz	w20, #4, 414d90 <wcrtomb@plt+0x10170>
  414d7c:	and	w20, w20, #0x3
  414d80:	str	w20, [x19, #56]
  414d84:	cbnz	w20, 414d90 <wcrtomb@plt+0x10170>
  414d88:	mov	w0, #0x4e                  	// #78
  414d8c:	strb	w0, [x23]
  414d90:	cbz	w1, 414de4 <wcrtomb@plt+0x101c4>
  414d94:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  414d98:	ldr	w0, [x0, #408]
  414d9c:	tbz	w0, #13, 414de4 <wcrtomb@plt+0x101c4>
  414da0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  414da4:	ldr	x0, [x0, #944]
  414da8:	cbz	x0, 414db0 <wcrtomb@plt+0x10190>
  414dac:	blr	x0
  414db0:	mov	w2, #0x5                   	// #5
  414db4:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  414db8:	add	x1, x1, #0x660
  414dbc:	mov	x0, #0x0                   	// #0
  414dc0:	bl	4049c0 <dcgettext@plt>
  414dc4:	mov	x20, x0
  414dc8:	mov	x0, x22
  414dcc:	bl	43efc4 <argp_parse@@Base+0xb884>
  414dd0:	mov	x3, x0
  414dd4:	mov	x2, x20
  414dd8:	mov	w1, #0x0                   	// #0
  414ddc:	mov	w0, #0x0                   	// #0
  414de0:	bl	404050 <error@plt>
  414de4:	ldr	w2, [x19, #60]
  414de8:	orr	w2, w2, #0x1
  414dec:	str	w2, [x19, #60]
  414df0:	ldr	w0, [x19, #56]
  414df4:	cbnz	w0, 414e14 <wcrtomb@plt+0x101f4>
  414df8:	mov	x0, x19
  414dfc:	ldp	x19, x20, [sp, #16]
  414e00:	ldp	x21, x22, [sp, #32]
  414e04:	ldp	x23, x24, [sp, #48]
  414e08:	ldp	x25, x26, [sp, #64]
  414e0c:	ldp	x29, x30, [sp], #112
  414e10:	ret
  414e14:	add	x1, sp, #0x68
  414e18:	mov	x0, x21
  414e1c:	bl	40c570 <wcrtomb@plt+0x7950>
  414e20:	cmp	w0, #0x2
  414e24:	b.eq	414ea8 <wcrtomb@plt+0x10288>  // b.none
  414e28:	cmp	w0, #0x3
  414e2c:	b.eq	414e70 <wcrtomb@plt+0x10250>  // b.none
  414e30:	cmp	w0, #0x1
  414e34:	b.ne	414df8 <wcrtomb@plt+0x101d8>  // b.any
  414e38:	ldr	x20, [sp, #104]
  414e3c:	mov	w2, #0x5                   	// #5
  414e40:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  414e44:	add	x1, x1, #0x9e0
  414e48:	mov	x0, #0x0                   	// #0
  414e4c:	bl	4049c0 <dcgettext@plt>
  414e50:	mov	x2, x0
  414e54:	mov	x1, x20
  414e58:	mov	x0, x22
  414e5c:	bl	40b098 <wcrtomb@plt+0x6478>
  414e60:	str	wzr, [x19, #56]
  414e64:	ldr	x0, [sp, #104]
  414e68:	str	x0, [x19, #72]
  414e6c:	b	414df8 <wcrtomb@plt+0x101d8>
  414e70:	ldr	x20, [sp, #104]
  414e74:	mov	w2, #0x5                   	// #5
  414e78:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  414e7c:	add	x1, x1, #0x980
  414e80:	mov	x0, #0x0                   	// #0
  414e84:	bl	4049c0 <dcgettext@plt>
  414e88:	mov	x2, x0
  414e8c:	mov	x1, x20
  414e90:	mov	x0, x22
  414e94:	bl	40b098 <wcrtomb@plt+0x6478>
  414e98:	mov	w0, #0x4e                  	// #78
  414e9c:	strb	w0, [x23]
  414ea0:	str	wzr, [x19, #56]
  414ea4:	b	414df8 <wcrtomb@plt+0x101d8>
  414ea8:	ldr	x20, [sp, #104]
  414eac:	mov	w2, #0x5                   	// #5
  414eb0:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  414eb4:	add	x1, x1, #0x9e0
  414eb8:	mov	x0, #0x0                   	// #0
  414ebc:	bl	4049c0 <dcgettext@plt>
  414ec0:	mov	x2, x0
  414ec4:	mov	x1, x20
  414ec8:	mov	x0, x22
  414ecc:	bl	40b098 <wcrtomb@plt+0x6478>
  414ed0:	ldr	x0, [sp, #104]
  414ed4:	str	x0, [x19, #72]
  414ed8:	b	414df8 <wcrtomb@plt+0x101d8>
  414edc:	stp	x29, x30, [sp, #-48]!
  414ee0:	mov	x29, sp
  414ee4:	stp	x19, x20, [sp, #16]
  414ee8:	stp	x21, x22, [sp, #32]
  414eec:	mov	x19, x0
  414ef0:	mov	x21, x1
  414ef4:	mov	x20, x2
  414ef8:	ldrb	w0, [x1]
  414efc:	cbnz	w0, 414fd8 <wcrtomb@plt+0x103b8>
  414f00:	ldr	x1, [x19, #32]
  414f04:	ldr	x0, [x19, #24]
  414f08:	cmp	x1, x0
  414f0c:	b.eq	414ff4 <wcrtomb@plt+0x103d4>  // b.none
  414f10:	ldr	x0, [x19, #24]
  414f14:	add	x1, x0, #0x1
  414f18:	str	x1, [x19, #24]
  414f1c:	mov	w1, #0x52                  	// #82
  414f20:	strb	w1, [x0]
  414f24:	mov	x0, x21
  414f28:	bl	403ff0 <strlen@plt>
  414f2c:	add	x22, x0, #0x1
  414f30:	ldr	x0, [x19, #32]
  414f34:	ldr	x1, [x19, #24]
  414f38:	sub	x0, x0, x1
  414f3c:	cmp	x22, x0
  414f40:	b.hi	415004 <wcrtomb@plt+0x103e4>  // b.pmore
  414f44:	mov	x2, x22
  414f48:	mov	x1, x21
  414f4c:	ldr	x0, [x19, #24]
  414f50:	bl	403f70 <memcpy@plt>
  414f54:	ldr	x0, [x19, #24]
  414f58:	add	x22, x0, x22
  414f5c:	str	x22, [x19, #24]
  414f60:	ldrb	w0, [x20]
  414f64:	cbnz	w0, 415014 <wcrtomb@plt+0x103f4>
  414f68:	ldr	x1, [x19, #32]
  414f6c:	ldr	x0, [x19, #24]
  414f70:	cmp	x1, x0
  414f74:	b.eq	415030 <wcrtomb@plt+0x10410>  // b.none
  414f78:	ldr	x0, [x19, #24]
  414f7c:	add	x1, x0, #0x1
  414f80:	str	x1, [x19, #24]
  414f84:	mov	w1, #0x54                  	// #84
  414f88:	strb	w1, [x0]
  414f8c:	mov	x0, x20
  414f90:	bl	403ff0 <strlen@plt>
  414f94:	add	x21, x0, #0x1
  414f98:	ldr	x0, [x19, #32]
  414f9c:	ldr	x1, [x19, #24]
  414fa0:	sub	x0, x0, x1
  414fa4:	cmp	x21, x0
  414fa8:	b.hi	415040 <wcrtomb@plt+0x10420>  // b.pmore
  414fac:	mov	x2, x21
  414fb0:	mov	x1, x20
  414fb4:	ldr	x0, [x19, #24]
  414fb8:	bl	403f70 <memcpy@plt>
  414fbc:	ldr	x0, [x19, #24]
  414fc0:	add	x21, x0, x21
  414fc4:	str	x21, [x19, #24]
  414fc8:	ldp	x19, x20, [sp, #16]
  414fcc:	ldp	x21, x22, [sp, #32]
  414fd0:	ldp	x29, x30, [sp], #48
  414fd4:	ret
  414fd8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  414fdc:	ldrb	w2, [x0, #888]
  414fe0:	mov	w1, #0x0                   	// #0
  414fe4:	mov	x0, x21
  414fe8:	bl	42a2dc <wcrtomb@plt+0x256bc>
  414fec:	mov	x21, x0
  414ff0:	b	414f00 <wcrtomb@plt+0x102e0>
  414ff4:	mov	x1, #0x1                   	// #1
  414ff8:	mov	x0, x19
  414ffc:	bl	440fcc <_obstack_newchunk@@Base>
  415000:	b	414f10 <wcrtomb@plt+0x102f0>
  415004:	mov	x1, x22
  415008:	mov	x0, x19
  41500c:	bl	440fcc <_obstack_newchunk@@Base>
  415010:	b	414f44 <wcrtomb@plt+0x10324>
  415014:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  415018:	ldrb	w2, [x0, #888]
  41501c:	mov	w1, #0x0                   	// #0
  415020:	mov	x0, x20
  415024:	bl	42a2dc <wcrtomb@plt+0x256bc>
  415028:	mov	x20, x0
  41502c:	b	414f68 <wcrtomb@plt+0x10348>
  415030:	mov	x1, #0x1                   	// #1
  415034:	mov	x0, x19
  415038:	bl	440fcc <_obstack_newchunk@@Base>
  41503c:	b	414f78 <wcrtomb@plt+0x10358>
  415040:	mov	x1, x21
  415044:	mov	x0, x19
  415048:	bl	440fcc <_obstack_newchunk@@Base>
  41504c:	b	414fac <wcrtomb@plt+0x1038c>
  415050:	stp	x29, x30, [sp, #-64]!
  415054:	mov	x29, sp
  415058:	stp	x19, x20, [sp, #16]
  41505c:	stp	x21, x22, [sp, #32]
  415060:	stp	x23, x24, [sp, #48]
  415064:	mov	x20, x0
  415068:	mov	x19, x1
  41506c:	mov	x23, x2
  415070:	ldr	x0, [x0, #8]
  415074:	ldr	x1, [x20, #16]
  415078:	cmp	x0, x1
  41507c:	b.cs	4150dc <wcrtomb@plt+0x104bc>  // b.hs, b.nlast
  415080:	add	x1, x0, #0x1
  415084:	str	x1, [x20, #8]
  415088:	ldrb	w21, [x0]
  41508c:	add	w0, w21, #0x1
  415090:	mov	x22, #0x0                   	// #0
  415094:	mov	x24, #0x1                   	// #1
  415098:	cmp	w0, #0x1
  41509c:	b.hi	415128 <wcrtomb@plt+0x10508>  // b.pmore
  4150a0:	ldr	x1, [x19, #32]
  4150a4:	ldr	x0, [x19, #24]
  4150a8:	cmp	x1, x0
  4150ac:	b.eq	415158 <wcrtomb@plt+0x10538>  // b.none
  4150b0:	ldr	x0, [x19, #24]
  4150b4:	add	x1, x0, #0x1
  4150b8:	str	x1, [x19, #24]
  4150bc:	strb	wzr, [x0]
  4150c0:	str	x22, [x23]
  4150c4:	mov	w0, w21
  4150c8:	ldp	x19, x20, [sp, #16]
  4150cc:	ldp	x21, x22, [sp, #32]
  4150d0:	ldp	x23, x24, [sp, #48]
  4150d4:	ldp	x29, x30, [sp], #64
  4150d8:	ret
  4150dc:	mov	x0, x20
  4150e0:	bl	404b90 <__uflow@plt>
  4150e4:	mov	w21, w0
  4150e8:	b	41508c <wcrtomb@plt+0x1046c>
  4150ec:	ldr	x0, [x19, #24]
  4150f0:	add	x1, x0, #0x1
  4150f4:	str	x1, [x19, #24]
  4150f8:	strb	w21, [x0]
  4150fc:	ldr	x1, [x20, #8]
  415100:	ldr	x0, [x20, #16]
  415104:	cmp	x1, x0
  415108:	b.cs	415148 <wcrtomb@plt+0x10528>  // b.hs, b.nlast
  41510c:	add	x0, x1, #0x1
  415110:	str	x0, [x20, #8]
  415114:	ldrb	w21, [x1]
  415118:	add	x22, x22, #0x1
  41511c:	add	w0, w21, #0x1
  415120:	cmp	w0, #0x1
  415124:	b.ls	4150a0 <wcrtomb@plt+0x10480>  // b.plast
  415128:	ldr	x1, [x19, #32]
  41512c:	ldr	x0, [x19, #24]
  415130:	cmp	x1, x0
  415134:	b.ne	4150ec <wcrtomb@plt+0x104cc>  // b.any
  415138:	mov	x1, x24
  41513c:	mov	x0, x19
  415140:	bl	440fcc <_obstack_newchunk@@Base>
  415144:	b	4150ec <wcrtomb@plt+0x104cc>
  415148:	mov	x0, x20
  41514c:	bl	404b90 <__uflow@plt>
  415150:	mov	w21, w0
  415154:	b	415118 <wcrtomb@plt+0x104f8>
  415158:	mov	x1, #0x1                   	// #1
  41515c:	mov	x0, x19
  415160:	bl	440fcc <_obstack_newchunk@@Base>
  415164:	b	4150b0 <wcrtomb@plt+0x10490>
  415168:	sub	sp, sp, #0xd0
  41516c:	stp	x29, x30, [sp, #16]
  415170:	add	x29, sp, #0x10
  415174:	stp	x19, x20, [sp, #32]
  415178:	stp	x21, x22, [sp, #48]
  41517c:	stp	x23, x24, [sp, #64]
  415180:	stp	x25, x26, [sp, #80]
  415184:	str	x27, [sp, #96]
  415188:	mov	x20, x0
  41518c:	mov	x23, x1
  415190:	mov	x25, x2
  415194:	mov	x24, x3
  415198:	mov	x26, x4
  41519c:	ldr	x0, [x0, #8]
  4151a0:	ldr	x1, [x20, #16]
  4151a4:	cmp	x0, x1
  4151a8:	b.cs	4151cc <wcrtomb@plt+0x105ac>  // b.hs, b.nlast
  4151ac:	add	x1, x0, #0x1
  4151b0:	str	x1, [x20, #8]
  4151b4:	ldrb	w0, [x0]
  4151b8:	cmp	w0, #0x2d
  4151bc:	cset	w22, eq  // eq = none
  4151c0:	add	x21, sp, #0xb8
  4151c4:	mov	w19, #0x0                   	// #0
  4151c8:	b	415450 <wcrtomb@plt+0x10830>
  4151cc:	mov	x0, x20
  4151d0:	bl	404b90 <__uflow@plt>
  4151d4:	b	4151b8 <wcrtomb@plt+0x10598>
  4151d8:	mov	x0, x20
  4151dc:	bl	404b90 <__uflow@plt>
  4151e0:	b	415448 <wcrtomb@plt+0x10828>
  4151e4:	add	x2, sp, #0xb8
  4151e8:	strb	wzr, [x2, w19, sxtw]
  4151ec:	tbnz	w0, #31, 415240 <wcrtomb@plt+0x10620>
  4151f0:	cbnz	w0, 4152ac <wcrtomb@plt+0x1068c>
  4151f4:	mov	x3, x24
  4151f8:	mov	x2, x25
  4151fc:	mov	x1, #0x0                   	// #0
  415200:	add	x0, sp, #0xb8
  415204:	bl	41abbc <wcrtomb@plt+0x15f9c>
  415208:	str	x0, [x26]
  41520c:	bl	404ad0 <__errno_location@plt>
  415210:	ldr	w19, [x0]
  415214:	mov	w1, #0x1                   	// #1
  415218:	cbnz	w19, 41531c <wcrtomb@plt+0x106fc>
  41521c:	mov	w0, w1
  415220:	ldp	x19, x20, [sp, #32]
  415224:	ldp	x21, x22, [sp, #48]
  415228:	ldp	x23, x24, [sp, #64]
  41522c:	ldp	x25, x26, [sp, #80]
  415230:	ldr	x27, [sp, #96]
  415234:	ldp	x29, x30, [sp, #16]
  415238:	add	sp, sp, #0xd0
  41523c:	ret
  415240:	ldr	w0, [x20]
  415244:	tbnz	w0, #5, 4152a0 <wcrtomb@plt+0x10680>
  415248:	cbz	w19, 41521c <wcrtomb@plt+0x105fc>
  41524c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  415250:	ldr	x0, [x0, #944]
  415254:	cbz	x0, 41525c <wcrtomb@plt+0x1063c>
  415258:	blr	x0
  41525c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  415260:	ldr	x0, [x0, #768]
  415264:	bl	43efc4 <argp_parse@@Base+0xb884>
  415268:	mov	x19, x0
  41526c:	mov	w2, #0x5                   	// #5
  415270:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  415274:	add	x1, x1, #0x6a8
  415278:	mov	x0, #0x0                   	// #0
  41527c:	bl	4049c0 <dcgettext@plt>
  415280:	mov	x4, x0
  415284:	mov	x3, x19
  415288:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x12e64>
  41528c:	add	x2, x2, #0x6c8
  415290:	mov	w1, #0x0                   	// #0
  415294:	mov	w0, #0x0                   	// #0
  415298:	bl	404050 <error@plt>
  41529c:	bl	40e5ac <wcrtomb@plt+0x998c>
  4152a0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4152a4:	ldr	x0, [x0, #768]
  4152a8:	bl	429d68 <wcrtomb@plt+0x25148>
  4152ac:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4152b0:	ldr	x0, [x0, #944]
  4152b4:	cbz	x0, 4152bc <wcrtomb@plt+0x1069c>
  4152b8:	blr	x0
  4152bc:	mov	w2, #0x5                   	// #5
  4152c0:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  4152c4:	add	x1, x1, #0x6d0
  4152c8:	mov	x0, #0x0                   	// #0
  4152cc:	bl	4049c0 <dcgettext@plt>
  4152d0:	mov	x19, x0
  4152d4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4152d8:	ldr	x0, [x0, #768]
  4152dc:	bl	43efc4 <argp_parse@@Base+0xb884>
  4152e0:	mov	x21, x0
  4152e4:	mov	x0, x20
  4152e8:	bl	404900 <ftello@plt>
  4152ec:	add	x1, sp, #0xa0
  4152f0:	bl	438c68 <argp_parse@@Base+0x5528>
  4152f4:	mov	w7, w27
  4152f8:	add	x6, sp, #0xb8
  4152fc:	mov	x5, x23
  415300:	mov	x4, x0
  415304:	mov	x3, x21
  415308:	mov	x2, x19
  41530c:	mov	w1, #0x0                   	// #0
  415310:	mov	w0, #0x0                   	// #0
  415314:	bl	404050 <error@plt>
  415318:	bl	40e5ac <wcrtomb@plt+0x998c>
  41531c:	cmp	w19, #0x22
  415320:	b.ne	4153bc <wcrtomb@plt+0x1079c>  // b.any
  415324:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  415328:	ldr	x0, [x0, #944]
  41532c:	cbz	x0, 415334 <wcrtomb@plt+0x10714>
  415330:	blr	x0
  415334:	mov	w2, #0x5                   	// #5
  415338:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  41533c:	add	x1, x1, #0x708
  415340:	mov	x0, #0x0                   	// #0
  415344:	bl	4049c0 <dcgettext@plt>
  415348:	mov	x19, x0
  41534c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  415350:	ldr	x0, [x0, #768]
  415354:	bl	43efc4 <argp_parse@@Base+0xb884>
  415358:	mov	x21, x0
  41535c:	mov	x0, x20
  415360:	bl	404900 <ftello@plt>
  415364:	add	x1, sp, #0xa0
  415368:	bl	438c68 <argp_parse@@Base+0x5528>
  41536c:	mov	x20, x0
  415370:	add	x1, sp, #0x88
  415374:	mov	x0, x25
  415378:	bl	438be8 <argp_parse@@Base+0x54a8>
  41537c:	mov	x22, x0
  415380:	add	x1, sp, #0x70
  415384:	mov	x0, x24
  415388:	bl	438ce8 <argp_parse@@Base+0x55a8>
  41538c:	add	x1, sp, #0xb8
  415390:	str	x1, [sp]
  415394:	mov	x7, x23
  415398:	mov	x6, x0
  41539c:	mov	x5, x22
  4153a0:	mov	x4, x20
  4153a4:	mov	x3, x21
  4153a8:	mov	x2, x19
  4153ac:	mov	w1, #0x22                  	// #34
  4153b0:	mov	w0, #0x0                   	// #0
  4153b4:	bl	404050 <error@plt>
  4153b8:	bl	40e5ac <wcrtomb@plt+0x998c>
  4153bc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4153c0:	ldr	x0, [x0, #944]
  4153c4:	cbz	x0, 4153cc <wcrtomb@plt+0x107ac>
  4153c8:	blr	x0
  4153cc:	mov	w2, #0x5                   	// #5
  4153d0:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  4153d4:	add	x1, x1, #0x738
  4153d8:	mov	x0, #0x0                   	// #0
  4153dc:	bl	4049c0 <dcgettext@plt>
  4153e0:	mov	x21, x0
  4153e4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4153e8:	ldr	x0, [x0, #768]
  4153ec:	bl	43efc4 <argp_parse@@Base+0xb884>
  4153f0:	mov	x22, x0
  4153f4:	mov	x0, x20
  4153f8:	bl	404900 <ftello@plt>
  4153fc:	add	x1, sp, #0xa0
  415400:	bl	438c68 <argp_parse@@Base+0x5528>
  415404:	add	x6, sp, #0xb8
  415408:	mov	x5, x23
  41540c:	mov	x4, x0
  415410:	mov	x3, x22
  415414:	mov	x2, x21
  415418:	mov	w1, w19
  41541c:	mov	w0, #0x0                   	// #0
  415420:	bl	404050 <error@plt>
  415424:	bl	40e5ac <wcrtomb@plt+0x998c>
  415428:	strb	w0, [x21]
  41542c:	ldr	x5, [x20, #8]
  415430:	ldr	x0, [x20, #16]
  415434:	cmp	x5, x0
  415438:	b.cs	4151d8 <wcrtomb@plt+0x105b8>  // b.hs, b.nlast
  41543c:	add	x0, x5, #0x1
  415440:	str	x0, [x20, #8]
  415444:	ldrb	w0, [x5]
  415448:	add	w19, w19, #0x1
  41544c:	add	x21, x21, #0x1
  415450:	cmp	w19, #0x0
  415454:	csel	w1, w22, wzr, eq  // eq = none
  415458:	cbnz	w1, 415428 <wcrtomb@plt+0x10808>
  41545c:	mov	w27, w0
  415460:	sub	w2, w0, #0x30
  415464:	cmp	w2, #0x9
  415468:	b.hi	4151e4 <wcrtomb@plt+0x105c4>  // b.pmore
  41546c:	strb	w0, [x21]
  415470:	cmp	w19, #0x14
  415474:	b.ne	41542c <wcrtomb@plt+0x1080c>  // b.any
  415478:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41547c:	ldr	x0, [x0, #944]
  415480:	cbz	x0, 415488 <wcrtomb@plt+0x10868>
  415484:	blr	x0
  415488:	mov	w2, #0x5                   	// #5
  41548c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  415490:	add	x1, x1, #0x680
  415494:	mov	x0, #0x0                   	// #0
  415498:	bl	4049c0 <dcgettext@plt>
  41549c:	mov	x19, x0
  4154a0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4154a4:	ldr	x0, [x0, #768]
  4154a8:	bl	43efc4 <argp_parse@@Base+0xb884>
  4154ac:	mov	x21, x0
  4154b0:	mov	x0, x20
  4154b4:	bl	404900 <ftello@plt>
  4154b8:	add	x1, sp, #0xa0
  4154bc:	bl	438c68 <argp_parse@@Base+0x5528>
  4154c0:	add	x7, sp, #0xb8
  4154c4:	mov	w6, #0x15                  	// #21
  4154c8:	mov	x5, x23
  4154cc:	mov	x4, x0
  4154d0:	mov	x3, x21
  4154d4:	mov	x2, x19
  4154d8:	mov	w1, #0x0                   	// #0
  4154dc:	mov	w0, #0x0                   	// #0
  4154e0:	bl	404050 <error@plt>
  4154e4:	bl	40e5ac <wcrtomb@plt+0x998c>
  4154e8:	stp	x29, x30, [sp, #-48]!
  4154ec:	mov	x29, sp
  4154f0:	stp	x19, x20, [sp, #16]
  4154f4:	mov	x20, x0
  4154f8:	mov	x19, x1
  4154fc:	add	x4, sp, #0x28
  415500:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
  415504:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
  415508:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  41550c:	add	x1, x1, #0x750
  415510:	bl	415168 <wcrtomb@plt+0x10548>
  415514:	and	w1, w0, #0xff
  415518:	cbz	w1, 415560 <wcrtomb@plt+0x10940>
  41551c:	add	x4, sp, #0x20
  415520:	mov	x3, #0xc9ff                	// #51711
  415524:	movk	x3, #0x3b9a, lsl #16
  415528:	mov	x2, #0x0                   	// #0
  41552c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  415530:	add	x1, x1, #0x758
  415534:	mov	x0, x20
  415538:	bl	415168 <wcrtomb@plt+0x10548>
  41553c:	and	w0, w0, #0xff
  415540:	cbz	w0, 415560 <wcrtomb@plt+0x10940>
  415544:	ldr	x0, [sp, #40]
  415548:	str	x0, [x19]
  41554c:	ldr	x0, [sp, #32]
  415550:	str	x0, [x19, #8]
  415554:	ldp	x19, x20, [sp, #16]
  415558:	ldp	x29, x30, [sp], #48
  41555c:	ret
  415560:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  415564:	ldr	x0, [x0, #944]
  415568:	cbz	x0, 415570 <wcrtomb@plt+0x10950>
  41556c:	blr	x0
  415570:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  415574:	ldr	x0, [x0, #768]
  415578:	bl	43efc4 <argp_parse@@Base+0xb884>
  41557c:	mov	x19, x0
  415580:	mov	w2, #0x5                   	// #5
  415584:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  415588:	add	x1, x1, #0x6a8
  41558c:	mov	x0, #0x0                   	// #0
  415590:	bl	4049c0 <dcgettext@plt>
  415594:	mov	x4, x0
  415598:	mov	x3, x19
  41559c:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x12e64>
  4155a0:	add	x2, x2, #0x6c8
  4155a4:	mov	w1, #0x0                   	// #0
  4155a8:	mov	w0, #0x0                   	// #0
  4155ac:	bl	404050 <error@plt>
  4155b0:	bl	40e5ac <wcrtomb@plt+0x998c>
  4155b4:	stp	x29, x30, [sp, #-80]!
  4155b8:	mov	x29, sp
  4155bc:	stp	x19, x20, [sp, #16]
  4155c0:	mov	x20, x0
  4155c4:	mov	x19, x1
  4155c8:	ldr	w0, [x0, #60]
  4155cc:	tbz	w0, #2, 415794 <wcrtomb@plt+0x10b74>
  4155d0:	stp	x21, x22, [sp, #32]
  4155d4:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x19e64>
  4155d8:	add	x1, x22, #0x388
  4155dc:	adrp	x22, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  4155e0:	add	x22, x22, #0x3a8
  4155e4:	tst	x0, #0x2
  4155e8:	csel	x22, x22, x1, ne  // ne = any
  4155ec:	mov	x21, #0x0                   	// #0
  4155f0:	ldrb	w1, [x22, x21]
  4155f4:	ldr	x0, [x19, #40]
  4155f8:	ldr	x2, [x19, #48]
  4155fc:	cmp	x0, x2
  415600:	b.cs	4157ac <wcrtomb@plt+0x10b8c>  // b.hs, b.nlast
  415604:	add	x2, x0, #0x1
  415608:	str	x2, [x19, #40]
  41560c:	strb	w1, [x0]
  415610:	add	x21, x21, #0x1
  415614:	cmp	x21, #0x2
  415618:	b.ne	4155f0 <wcrtomb@plt+0x109d0>  // b.any
  41561c:	add	x3, sp, #0x38
  415620:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  415624:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
  415628:	ldr	x0, [x20, #8]
  41562c:	bl	41ab94 <wcrtomb@plt+0x15f74>
  415630:	mov	x21, x0
  415634:	bl	403ff0 <strlen@plt>
  415638:	mov	x3, x19
  41563c:	mov	x2, #0x1                   	// #1
  415640:	add	x1, x0, x2
  415644:	mov	x0, x21
  415648:	bl	403fd0 <fwrite_unlocked@plt>
  41564c:	add	x1, sp, #0x38
  415650:	ldr	x0, [x20, #16]
  415654:	bl	438be8 <argp_parse@@Base+0x54a8>
  415658:	mov	x21, x0
  41565c:	bl	403ff0 <strlen@plt>
  415660:	mov	x3, x19
  415664:	mov	x2, #0x1                   	// #1
  415668:	add	x1, x0, x2
  41566c:	mov	x0, x21
  415670:	bl	403fd0 <fwrite_unlocked@plt>
  415674:	add	x3, sp, #0x38
  415678:	mov	x2, #0xffffffffffffffff    	// #-1
  41567c:	mov	x1, #0x0                   	// #0
  415680:	ldr	x0, [x20, #24]
  415684:	bl	41ab94 <wcrtomb@plt+0x15f74>
  415688:	mov	x21, x0
  41568c:	bl	403ff0 <strlen@plt>
  415690:	mov	x3, x19
  415694:	mov	x2, #0x1                   	// #1
  415698:	add	x1, x0, x2
  41569c:	mov	x0, x21
  4156a0:	bl	403fd0 <fwrite_unlocked@plt>
  4156a4:	add	x3, sp, #0x38
  4156a8:	mov	x2, #0xffffffffffffffff    	// #-1
  4156ac:	mov	x1, #0x0                   	// #0
  4156b0:	ldr	x0, [x20, #32]
  4156b4:	bl	41ab94 <wcrtomb@plt+0x15f74>
  4156b8:	mov	x21, x0
  4156bc:	bl	403ff0 <strlen@plt>
  4156c0:	mov	x3, x19
  4156c4:	mov	x2, #0x1                   	// #1
  4156c8:	add	x1, x0, x2
  4156cc:	mov	x0, x21
  4156d0:	bl	403fd0 <fwrite_unlocked@plt>
  4156d4:	ldr	x21, [x20, #88]
  4156d8:	mov	x0, x21
  4156dc:	bl	403ff0 <strlen@plt>
  4156e0:	mov	x3, x19
  4156e4:	mov	x2, #0x1                   	// #1
  4156e8:	add	x1, x0, x2
  4156ec:	mov	x0, x21
  4156f0:	bl	403fd0 <fwrite_unlocked@plt>
  4156f4:	ldr	x20, [x20, #40]
  4156f8:	cbz	x20, 415758 <wcrtomb@plt+0x10b38>
  4156fc:	mov	x0, #0x18                  	// #24
  415700:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  415704:	mov	x21, x0
  415708:	str	x20, [x0]
  41570c:	str	wzr, [x0, #8]
  415710:	str	xzr, [x0, #16]
  415714:	bl	4142d4 <wcrtomb@plt+0xf6b4>
  415718:	mov	x20, x0
  41571c:	cbz	x0, 415750 <wcrtomb@plt+0x10b30>
  415720:	mov	x22, #0x1                   	// #1
  415724:	mov	x0, x20
  415728:	bl	403ff0 <strlen@plt>
  41572c:	mov	x3, x19
  415730:	mov	x2, x22
  415734:	add	x1, x0, #0x1
  415738:	mov	x0, x20
  41573c:	bl	403fd0 <fwrite_unlocked@plt>
  415740:	mov	x0, x21
  415744:	bl	4142d4 <wcrtomb@plt+0xf6b4>
  415748:	mov	x20, x0
  41574c:	cbnz	x0, 415724 <wcrtomb@plt+0x10b04>
  415750:	mov	x0, x21
  415754:	bl	4047c0 <free@plt>
  415758:	ldr	x0, [x19, #40]
  41575c:	ldr	x1, [x19, #48]
  415760:	cmp	x0, x1
  415764:	b.cs	4157c0 <wcrtomb@plt+0x10ba0>  // b.hs, b.nlast
  415768:	add	x1, x0, #0x1
  41576c:	str	x1, [x19, #40]
  415770:	strb	wzr, [x0]
  415774:	ldr	x0, [x19, #40]
  415778:	ldr	x1, [x19, #48]
  41577c:	cmp	x0, x1
  415780:	b.cs	4157dc <wcrtomb@plt+0x10bbc>  // b.hs, b.nlast
  415784:	add	x1, x0, #0x1
  415788:	str	x1, [x19, #40]
  41578c:	strb	wzr, [x0]
  415790:	ldp	x21, x22, [sp, #32]
  415794:	ldr	w0, [x19]
  415798:	eor	x0, x0, #0x20
  41579c:	ubfx	x0, x0, #5, #1
  4157a0:	ldp	x19, x20, [sp, #16]
  4157a4:	ldp	x29, x30, [sp], #80
  4157a8:	ret
  4157ac:	mov	x0, x19
  4157b0:	bl	404690 <__overflow@plt>
  4157b4:	cmn	w0, #0x1
  4157b8:	b.eq	41561c <wcrtomb@plt+0x109fc>  // b.none
  4157bc:	b	415610 <wcrtomb@plt+0x109f0>
  4157c0:	mov	w1, #0x0                   	// #0
  4157c4:	mov	x0, x19
  4157c8:	bl	404690 <__overflow@plt>
  4157cc:	cmn	w0, #0x1
  4157d0:	b.ne	415774 <wcrtomb@plt+0x10b54>  // b.any
  4157d4:	ldp	x21, x22, [sp, #32]
  4157d8:	b	415794 <wcrtomb@plt+0x10b74>
  4157dc:	mov	w1, #0x0                   	// #0
  4157e0:	mov	x0, x19
  4157e4:	bl	404690 <__overflow@plt>
  4157e8:	ldp	x21, x22, [sp, #32]
  4157ec:	b	415794 <wcrtomb@plt+0x10b74>
  4157f0:	stp	x29, x30, [sp, #-32]!
  4157f4:	mov	x29, sp
  4157f8:	stp	x19, x20, [sp, #16]
  4157fc:	mov	x19, x0
  415800:	ldrb	w0, [x0]
  415804:	cbz	w0, 415838 <wcrtomb@plt+0x10c18>
  415808:	mov	x20, #0x0                   	// #0
  41580c:	mov	x0, x19
  415810:	bl	403ff0 <strlen@plt>
  415814:	add	x0, x0, #0x1
  415818:	add	x20, x20, x0
  41581c:	add	x19, x19, x0
  415820:	ldrb	w0, [x19]
  415824:	cbnz	w0, 41580c <wcrtomb@plt+0x10bec>
  415828:	add	x0, x20, #0x1
  41582c:	ldp	x19, x20, [sp, #16]
  415830:	ldp	x29, x30, [sp], #32
  415834:	ret
  415838:	mov	x20, #0x0                   	// #0
  41583c:	b	415828 <wcrtomb@plt+0x10c08>
  415840:	stp	x29, x30, [sp, #-32]!
  415844:	mov	x29, sp
  415848:	str	x19, [sp, #16]
  41584c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  415850:	ldr	x0, [x0, #2160]
  415854:	cbz	x0, 41585c <wcrtomb@plt+0x10c3c>
  415858:	bl	437d78 <argp_parse@@Base+0x4638>
  41585c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  415860:	ldr	x0, [x0, #2168]
  415864:	cbz	x0, 41586c <wcrtomb@plt+0x10c4c>
  415868:	bl	437d78 <argp_parse@@Base+0x4638>
  41586c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  415870:	ldr	x19, [x0, #2152]
  415874:	cbz	x19, 415888 <wcrtomb@plt+0x10c68>
  415878:	mov	x0, x19
  41587c:	ldr	x19, [x19]
  415880:	bl	414364 <wcrtomb@plt+0xf744>
  415884:	cbnz	x19, 415878 <wcrtomb@plt+0x10c58>
  415888:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41588c:	add	x1, x0, #0x868
  415890:	str	xzr, [x1, #24]
  415894:	str	xzr, [x0, #2152]
  415898:	ldr	x19, [sp, #16]
  41589c:	ldp	x29, x30, [sp], #32
  4158a0:	ret
  4158a4:	stp	x29, x30, [sp, #-16]!
  4158a8:	mov	x29, sp
  4158ac:	add	x0, x0, #0x58
  4158b0:	bl	41aac8 <wcrtomb@plt+0x15ea8>
  4158b4:	ldp	x29, x30, [sp], #16
  4158b8:	ret
  4158bc:	stp	x29, x30, [sp, #-160]!
  4158c0:	mov	x29, sp
  4158c4:	stp	x19, x20, [sp, #16]
  4158c8:	mov	x20, x0
  4158cc:	ldr	x0, [x0]
  4158d0:	bl	4144d0 <wcrtomb@plt+0xf8b0>
  4158d4:	cbz	x0, 415900 <wcrtomb@plt+0x10ce0>
  4158d8:	mov	x19, x0
  4158dc:	add	x2, sp, #0x20
  4158e0:	ldr	w1, [x20, #408]
  4158e4:	mov	w0, #0x0                   	// #0
  4158e8:	bl	4049a0 <__fxstat@plt>
  4158ec:	cbnz	w0, 41590c <wcrtomb@plt+0x10cec>
  4158f0:	ldr	x0, [sp, #128]
  4158f4:	ldr	x1, [sp, #120]
  4158f8:	str	x1, [x19, #8]
  4158fc:	str	x0, [x19, #16]
  415900:	ldp	x19, x20, [sp, #16]
  415904:	ldp	x29, x30, [sp], #160
  415908:	ret
  41590c:	ldr	x0, [x19, #88]
  415910:	bl	41b924 <wcrtomb@plt+0x16d04>
  415914:	b	415900 <wcrtomb@plt+0x10ce0>
  415918:	sub	sp, sp, #0x230
  41591c:	stp	x29, x30, [sp]
  415920:	mov	x29, sp
  415924:	stp	x19, x20, [sp, #16]
  415928:	stp	x21, x22, [sp, #32]
  41592c:	stp	x25, x26, [sp, #64]
  415930:	mov	x21, x0
  415934:	ldr	x22, [x0]
  415938:	bl	40c3ac <wcrtomb@plt+0x778c>
  41593c:	mov	x26, x0
  415940:	ldr	x0, [x21, #88]
  415944:	str	x0, [sp, #104]
  415948:	ldr	x20, [x21, #392]
  41594c:	cbz	x26, 415a24 <wcrtomb@plt+0x10e04>
  415950:	mov	x0, x21
  415954:	bl	40e9a8 <wcrtomb@plt+0x9d88>
  415958:	mov	x0, x22
  41595c:	bl	440154 <argp_parse@@Base+0xca14>
  415960:	mov	x19, x0
  415964:	bl	41a848 <wcrtomb@plt+0x15c28>
  415968:	cbz	x20, 415ed8 <wcrtomb@plt+0x112b8>
  41596c:	add	x3, sp, #0x22f
  415970:	mov	w2, #0x0                   	// #0
  415974:	mov	x1, x21
  415978:	mov	x0, x19
  41597c:	bl	414968 <wcrtomb@plt+0xfd48>
  415980:	mov	x20, x0
  415984:	mov	x0, x19
  415988:	bl	4047c0 <free@plt>
  41598c:	mov	x0, x22
  415990:	bl	41bacc <wcrtomb@plt+0x16eac>
  415994:	mov	x25, x0
  415998:	ldr	w0, [x20, #56]
  41599c:	cbnz	w0, 415a78 <wcrtomb@plt+0x10e58>
  4159a0:	ldr	x0, [x20, #72]
  4159a4:	cbz	x0, 4159f8 <wcrtomb@plt+0x10dd8>
  4159a8:	bl	403ff0 <strlen@plt>
  4159ac:	mov	x19, x0
  4159b0:	add	x0, x0, #0x3
  4159b4:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  4159b8:	mov	x21, x0
  4159bc:	mov	w1, #0x59                  	// #89
  4159c0:	strb	w1, [x0], #1
  4159c4:	add	x2, x19, #0x1
  4159c8:	ldr	x1, [x20, #72]
  4159cc:	bl	403f70 <memcpy@plt>
  4159d0:	add	x19, x21, x19
  4159d4:	strb	wzr, [x19, #2]
  4159d8:	ldr	x0, [x20, #40]
  4159dc:	str	x0, [x20, #48]
  4159e0:	mov	x1, #0x0                   	// #0
  4159e4:	mov	x0, x21
  4159e8:	bl	414694 <wcrtomb@plt+0xfa74>
  4159ec:	str	x0, [x20, #40]
  4159f0:	mov	x0, x21
  4159f4:	bl	4047c0 <free@plt>
  4159f8:	mov	x0, x25
  4159fc:	bl	41bb50 <wcrtomb@plt+0x16f30>
  415a00:	mov	x0, x26
  415a04:	bl	4047c0 <free@plt>
  415a08:	mov	x0, x20
  415a0c:	ldp	x19, x20, [sp, #16]
  415a10:	ldp	x21, x22, [sp, #32]
  415a14:	ldp	x25, x26, [sp, #64]
  415a18:	ldp	x29, x30, [sp]
  415a1c:	add	sp, sp, #0x230
  415a20:	ret
  415a24:	mov	x0, x22
  415a28:	bl	429e74 <wcrtomb@plt+0x25254>
  415a2c:	mov	x0, x21
  415a30:	bl	40e9a8 <wcrtomb@plt+0x9d88>
  415a34:	mov	x0, x22
  415a38:	bl	440154 <argp_parse@@Base+0xca14>
  415a3c:	mov	x19, x0
  415a40:	bl	41a848 <wcrtomb@plt+0x15c28>
  415a44:	cbz	x20, 415e5c <wcrtomb@plt+0x1123c>
  415a48:	add	x3, sp, #0x22f
  415a4c:	mov	w2, #0x0                   	// #0
  415a50:	mov	x1, x21
  415a54:	mov	x0, x19
  415a58:	bl	414968 <wcrtomb@plt+0xfd48>
  415a5c:	mov	x20, x0
  415a60:	mov	x0, x19
  415a64:	bl	4047c0 <free@plt>
  415a68:	mov	x0, x22
  415a6c:	bl	41bacc <wcrtomb@plt+0x16eac>
  415a70:	mov	x25, x0
  415a74:	b	4159f8 <wcrtomb@plt+0x10dd8>
  415a78:	stp	x23, x24, [sp, #48]
  415a7c:	stp	x27, x28, [sp, #80]
  415a80:	mov	x27, #0x0                   	// #0
  415a84:	cmp	w0, #0x2
  415a88:	b.eq	415aac <wcrtomb@plt+0x10e8c>  // b.none
  415a8c:	ldr	w0, [x20, #60]
  415a90:	tbz	w0, #4, 415aa8 <wcrtomb@plt+0x10e88>
  415a94:	ldr	x0, [x20, #64]
  415a98:	ldr	x27, [x0, #48]
  415a9c:	cbnz	x27, 415aac <wcrtomb@plt+0x10e8c>
  415aa0:	ldr	x27, [x0, #40]
  415aa4:	b	415aac <wcrtomb@plt+0x10e8c>
  415aa8:	ldr	x27, [x20, #40]
  415aac:	ldrb	w0, [x26]
  415ab0:	cbz	w0, 415e8c <wcrtomb@plt+0x1126c>
  415ab4:	mov	x19, x26
  415ab8:	mov	x24, #0x0                   	// #0
  415abc:	mov	x23, #0x0                   	// #0
  415ac0:	mov	x0, x19
  415ac4:	bl	403ff0 <strlen@plt>
  415ac8:	add	x1, x0, #0x2
  415acc:	add	x23, x23, x1
  415ad0:	add	x0, x0, #0x1
  415ad4:	add	x19, x19, x0
  415ad8:	add	x24, x24, #0x1
  415adc:	ldrb	w0, [x19]
  415ae0:	cbnz	w0, 415ac0 <wcrtomb@plt+0x10ea0>
  415ae4:	add	x23, x23, #0x1
  415ae8:	mov	x1, #0x8                   	// #8
  415aec:	mov	x0, x24
  415af0:	bl	4400e8 <argp_parse@@Base+0xc9a8>
  415af4:	str	x0, [sp, #112]
  415af8:	ldrb	w0, [x26]
  415afc:	cbz	w0, 415b24 <wcrtomb@plt+0x10f04>
  415b00:	ldr	x22, [sp, #112]
  415b04:	mov	x19, x26
  415b08:	str	x19, [x22], #8
  415b0c:	mov	x0, x19
  415b10:	bl	403ff0 <strlen@plt>
  415b14:	add	x0, x0, #0x1
  415b18:	add	x19, x19, x0
  415b1c:	ldrb	w0, [x19]
  415b20:	cbnz	w0, 415b08 <wcrtomb@plt+0x10ee8>
  415b24:	adrp	x3, 414000 <wcrtomb@plt+0xf3e0>
  415b28:	add	x3, x3, #0x5a8
  415b2c:	mov	x2, #0x8                   	// #8
  415b30:	mov	x1, x24
  415b34:	ldr	x22, [sp, #112]
  415b38:	mov	x0, x22
  415b3c:	bl	4041a0 <qsort@plt>
  415b40:	mov	x0, x23
  415b44:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  415b48:	str	x0, [sp, #120]
  415b4c:	cbz	x24, 415bc4 <wcrtomb@plt+0x10fa4>
  415b50:	mov	x23, x22
  415b54:	add	x24, x22, x24, lsl #3
  415b58:	mov	x19, x0
  415b5c:	mov	w28, #0x49                  	// #73
  415b60:	b	415b8c <wcrtomb@plt+0x10f6c>
  415b64:	ldr	x0, [x20, #72]
  415b68:	cbz	x0, 415bb8 <wcrtomb@plt+0x10f98>
  415b6c:	mov	w0, #0x49                  	// #73
  415b70:	strb	w0, [x19], #1
  415b74:	ldrb	w0, [x22], #1
  415b78:	strb	w0, [x19], #1
  415b7c:	cbnz	w0, 415b74 <wcrtomb@plt+0x10f54>
  415b80:	add	x23, x23, #0x8
  415b84:	cmp	x24, x23
  415b88:	b.eq	415bc8 <wcrtomb@plt+0x10fa8>  // b.none
  415b8c:	ldr	x22, [x23]
  415b90:	mov	x1, x22
  415b94:	mov	x0, x27
  415b98:	bl	4145c4 <wcrtomb@plt+0xf9a4>
  415b9c:	cbz	x0, 415b64 <wcrtomb@plt+0x10f44>
  415ba0:	ldr	x0, [x20, #72]
  415ba4:	cmp	x0, #0x0
  415ba8:	mov	w0, #0x20                  	// #32
  415bac:	csel	w0, w28, w0, ne  // ne = any
  415bb0:	strb	w0, [x19], #1
  415bb4:	b	415b74 <wcrtomb@plt+0x10f54>
  415bb8:	mov	w0, #0x59                  	// #89
  415bbc:	strb	w0, [x19], #1
  415bc0:	b	415b74 <wcrtomb@plt+0x10f54>
  415bc4:	ldr	x19, [sp, #120]
  415bc8:	strb	wzr, [x19]
  415bcc:	ldr	x0, [x20, #40]
  415bd0:	str	x0, [x20, #48]
  415bd4:	mov	x1, #0x0                   	// #0
  415bd8:	ldr	x19, [sp, #120]
  415bdc:	mov	x0, x19
  415be0:	bl	414694 <wcrtomb@plt+0xfa74>
  415be4:	str	x0, [x20, #40]
  415be8:	mov	x0, x19
  415bec:	bl	4047c0 <free@plt>
  415bf0:	ldr	x0, [sp, #112]
  415bf4:	bl	4047c0 <free@plt>
  415bf8:	ldr	x19, [x20, #40]
  415bfc:	mov	x0, #0x18                  	// #24
  415c00:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  415c04:	mov	x24, x0
  415c08:	str	x19, [x0]
  415c0c:	mov	w1, #0x1                   	// #1
  415c10:	str	w1, [x0, #8]
  415c14:	str	xzr, [x0, #16]
  415c18:	bl	4142d4 <wcrtomb@plt+0xf6b4>
  415c1c:	mov	x19, x0
  415c20:	cbz	x0, 415e48 <wcrtomb@plt+0x11228>
  415c24:	mov	w27, #0x4e                  	// #78
  415c28:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  415c2c:	add	x0, x0, #0x1f0
  415c30:	str	x0, [sp, #120]
  415c34:	add	x0, sp, #0xd8
  415c38:	str	x0, [sp, #112]
  415c3c:	b	415c68 <wcrtomb@plt+0x11048>
  415c40:	mov	x1, x21
  415c44:	mov	x0, x22
  415c48:	bl	40ec08 <wcrtomb@plt+0x9fe8>
  415c4c:	and	w0, w0, #0xff
  415c50:	cbz	w0, 415c90 <wcrtomb@plt+0x11070>
  415c54:	strb	w27, [x19]
  415c58:	mov	x0, x24
  415c5c:	bl	4142d4 <wcrtomb@plt+0xf6b4>
  415c60:	mov	x19, x0
  415c64:	cbz	x0, 415e48 <wcrtomb@plt+0x11228>
  415c68:	add	x23, x19, #0x1
  415c6c:	mov	x1, x23
  415c70:	mov	x0, x25
  415c74:	bl	41bb7c <wcrtomb@plt+0x16f5c>
  415c78:	mov	x22, x0
  415c7c:	ldrb	w0, [x19]
  415c80:	cmp	w0, #0x49
  415c84:	b.ne	415c40 <wcrtomb@plt+0x11020>  // b.any
  415c88:	strb	w27, [x19]
  415c8c:	b	415c58 <wcrtomb@plt+0x11038>
  415c90:	ldr	w28, [x21, #408]
  415c94:	add	x0, sp, #0x80
  415c98:	bl	42491c <wcrtomb@plt+0x1fcfc>
  415c9c:	tbz	w28, #31, 415cd0 <wcrtomb@plt+0x110b0>
  415ca0:	bl	404ad0 <__errno_location@plt>
  415ca4:	neg	w28, w28
  415ca8:	str	w28, [x0]
  415cac:	adrp	x2, 41b000 <wcrtomb@plt+0x163e0>
  415cb0:	add	x2, x2, #0x80c
  415cb4:	mov	w1, #0x0                   	// #0
  415cb8:	mov	x0, x22
  415cbc:	bl	41b95c <wcrtomb@plt+0x16d3c>
  415cc0:	strb	w27, [x19]
  415cc4:	add	x0, sp, #0x80
  415cc8:	bl	4249a8 <wcrtomb@plt+0x1fd88>
  415ccc:	b	415c58 <wcrtomb@plt+0x11038>
  415cd0:	ldr	x0, [sp, #120]
  415cd4:	ldr	w4, [x0]
  415cd8:	ldr	x3, [sp, #112]
  415cdc:	mov	x2, x23
  415ce0:	mov	w1, w28
  415ce4:	mov	w0, #0x0                   	// #0
  415ce8:	bl	404c00 <__fxstatat@plt>
  415cec:	cbnz	w0, 415d48 <wcrtomb@plt+0x11128>
  415cf0:	ldr	w0, [sp, #232]
  415cf4:	and	w0, w0, #0xf000
  415cf8:	cmp	w0, #0x4, lsl #12
  415cfc:	b.ne	415d64 <wcrtomb@plt+0x11144>  // b.any
  415d00:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  415d04:	ldr	w2, [x0, #644]
  415d08:	mov	x1, x23
  415d0c:	mov	x0, x21
  415d10:	bl	40c4c4 <wcrtomb@plt+0x78a4>
  415d14:	adrp	x2, 41b000 <wcrtomb@plt+0x163e0>
  415d18:	add	x2, x2, #0x80c
  415d1c:	tbnz	w0, #31, 415cb4 <wcrtomb@plt+0x11094>
  415d20:	str	w0, [sp, #536]
  415d24:	ldr	x2, [sp, #112]
  415d28:	mov	w1, w0
  415d2c:	mov	w0, #0x0                   	// #0
  415d30:	bl	4049a0 <__fxstat@plt>
  415d34:	mov	w2, w0
  415d38:	cbz	w0, 415d54 <wcrtomb@plt+0x11134>
  415d3c:	adrp	x2, 41b000 <wcrtomb@plt+0x163e0>
  415d40:	add	x2, x2, #0x924
  415d44:	b	415cb4 <wcrtomb@plt+0x11094>
  415d48:	adrp	x2, 41b000 <wcrtomb@plt+0x163e0>
  415d4c:	add	x2, x2, #0x924
  415d50:	b	415cb4 <wcrtomb@plt+0x11094>
  415d54:	ldr	w0, [sp, #232]
  415d58:	and	w0, w0, #0xf000
  415d5c:	cmp	w0, #0x4, lsl #12
  415d60:	b.eq	415d88 <wcrtomb@plt+0x11168>  // b.none
  415d64:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  415d68:	ldrb	w0, [x0, #21]
  415d6c:	cbz	w0, 415dd4 <wcrtomb@plt+0x111b4>
  415d70:	ldr	x0, [sp, #216]
  415d74:	ldr	x1, [sp, #104]
  415d78:	cmp	x0, x1
  415d7c:	b.eq	415dd4 <wcrtomb@plt+0x111b4>  // b.none
  415d80:	strb	w27, [x19]
  415d84:	b	415cc4 <wcrtomb@plt+0x110a4>
  415d88:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  415d8c:	ldr	w0, [x0, #612]
  415d90:	cbz	w0, 415dcc <wcrtomb@plt+0x111ac>
  415d94:	ldr	w0, [x20, #56]
  415d98:	cmp	w0, #0x2
  415d9c:	mov	w0, #0x12                  	// #18
  415da0:	csel	w2, w2, w0, ne  // ne = any
  415da4:	mov	w0, #0x44                  	// #68
  415da8:	strb	w0, [x19]
  415dac:	str	x21, [sp, #520]
  415db0:	mov	x3, x19
  415db4:	add	x1, sp, #0x80
  415db8:	mov	x0, x22
  415dbc:	bl	414968 <wcrtomb@plt+0xfd48>
  415dc0:	add	x0, sp, #0x80
  415dc4:	bl	40c61c <wcrtomb@plt+0x79fc>
  415dc8:	b	415cc4 <wcrtomb@plt+0x110a4>
  415dcc:	mov	w2, #0x10                  	// #16
  415dd0:	b	415da4 <wcrtomb@plt+0x11184>
  415dd4:	ldrb	w0, [x19]
  415dd8:	cmp	w0, #0x59
  415ddc:	b.eq	415cc4 <wcrtomb@plt+0x110a4>  // b.none
  415de0:	ldr	x1, [sp, #304]
  415de4:	ldr	x3, [sp, #312]
  415de8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  415dec:	add	x2, x0, #0xfe8
  415df0:	ldr	x0, [x0, #4072]
  415df4:	ldr	x2, [x2, #8]
  415df8:	cmp	x0, x1
  415dfc:	b.gt	415e18 <wcrtomb@plt+0x111f8>
  415e00:	b.lt	415e0c <wcrtomb@plt+0x111ec>  // b.tstop
  415e04:	cmp	w3, w2
  415e08:	b.mi	415e18 <wcrtomb@plt+0x111f8>  // b.first
  415e0c:	mov	w0, #0x59                  	// #89
  415e10:	strb	w0, [x19]
  415e14:	b	415cc4 <wcrtomb@plt+0x110a4>
  415e18:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  415e1c:	ldr	w1, [x1, #908]
  415e20:	cbz	w1, 415e40 <wcrtomb@plt+0x11220>
  415e24:	ldr	x1, [sp, #320]
  415e28:	ldr	x3, [sp, #328]
  415e2c:	cmp	x0, x1
  415e30:	b.gt	415e40 <wcrtomb@plt+0x11220>
  415e34:	b.lt	415e0c <wcrtomb@plt+0x111ec>  // b.tstop
  415e38:	cmp	w3, w2
  415e3c:	b.pl	415e0c <wcrtomb@plt+0x111ec>  // b.nfrst
  415e40:	strb	w27, [x19]
  415e44:	b	415cc4 <wcrtomb@plt+0x110a4>
  415e48:	mov	x0, x24
  415e4c:	bl	4047c0 <free@plt>
  415e50:	ldp	x23, x24, [sp, #48]
  415e54:	ldp	x27, x28, [sp, #80]
  415e58:	b	4159f8 <wcrtomb@plt+0x10dd8>
  415e5c:	add	x3, sp, #0x22f
  415e60:	mov	w2, #0x20                  	// #32
  415e64:	mov	x1, x21
  415e68:	mov	x0, x19
  415e6c:	bl	414968 <wcrtomb@plt+0xfd48>
  415e70:	mov	x20, x0
  415e74:	mov	x0, x19
  415e78:	bl	4047c0 <free@plt>
  415e7c:	mov	x0, x22
  415e80:	bl	41bacc <wcrtomb@plt+0x16eac>
  415e84:	mov	x25, x0
  415e88:	b	4159f8 <wcrtomb@plt+0x10dd8>
  415e8c:	mov	x1, #0x8                   	// #8
  415e90:	mov	x0, #0x0                   	// #0
  415e94:	bl	4400e8 <argp_parse@@Base+0xc9a8>
  415e98:	str	x0, [sp, #112]
  415e9c:	ldrb	w0, [x26]
  415ea0:	mov	x24, #0x0                   	// #0
  415ea4:	mov	x23, #0x1                   	// #1
  415ea8:	cbnz	w0, 415b00 <wcrtomb@plt+0x10ee0>
  415eac:	adrp	x3, 414000 <wcrtomb@plt+0xf3e0>
  415eb0:	add	x3, x3, #0x5a8
  415eb4:	mov	x2, #0x8                   	// #8
  415eb8:	mov	x1, #0x0                   	// #0
  415ebc:	ldr	x0, [sp, #112]
  415ec0:	bl	4041a0 <qsort@plt>
  415ec4:	mov	x0, #0x1                   	// #1
  415ec8:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  415ecc:	mov	x19, x0
  415ed0:	str	x0, [sp, #120]
  415ed4:	b	415bc8 <wcrtomb@plt+0x10fa8>
  415ed8:	add	x3, sp, #0x22f
  415edc:	mov	w2, #0x20                  	// #32
  415ee0:	mov	x1, x21
  415ee4:	mov	x0, x19
  415ee8:	bl	414968 <wcrtomb@plt+0xfd48>
  415eec:	mov	x20, x0
  415ef0:	mov	x0, x19
  415ef4:	bl	4047c0 <free@plt>
  415ef8:	mov	x0, x22
  415efc:	bl	41bacc <wcrtomb@plt+0x16eac>
  415f00:	mov	x25, x0
  415f04:	b	415998 <wcrtomb@plt+0x10d78>
  415f08:	cbz	x0, 415f18 <wcrtomb@plt+0x112f8>
  415f0c:	ldr	x0, [x0, #40]
  415f10:	cbz	x0, 415f18 <wcrtomb@plt+0x112f8>
  415f14:	ldr	x0, [x0]
  415f18:	ret
  415f1c:	stp	x29, x30, [sp, #-16]!
  415f20:	mov	x29, sp
  415f24:	bl	415f08 <wcrtomb@plt+0x112e8>
  415f28:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  415f2c:	add	x1, x1, #0xb88
  415f30:	cmp	x0, #0x0
  415f34:	csel	x0, x1, x0, eq  // eq = none
  415f38:	ldp	x29, x30, [sp], #16
  415f3c:	ret
  415f40:	stp	x29, x30, [sp, #-192]!
  415f44:	mov	x29, sp
  415f48:	stp	x21, x22, [sp, #32]
  415f4c:	mov	x22, x0
  415f50:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  415f54:	ldr	x0, [x0, #2152]
  415f58:	cbz	x0, 4160cc <wcrtomb@plt+0x114ac>
  415f5c:	stp	x19, x20, [sp, #16]
  415f60:	stp	x23, x24, [sp, #48]
  415f64:	adrp	x4, 404000 <fputs@plt>
  415f68:	add	x4, x4, #0x7c0
  415f6c:	adrp	x3, 43f000 <argp_parse@@Base+0xb8c0>
  415f70:	add	x3, x3, #0xef4
  415f74:	mov	x2, #0x0                   	// #0
  415f78:	mov	x1, #0x0                   	// #0
  415f7c:	add	x0, sp, #0x68
  415f80:	bl	440f78 <_obstack_begin@@Base>
  415f84:	mov	x0, x22
  415f88:	bl	415f08 <wcrtomb@plt+0x112e8>
  415f8c:	mov	x19, x0
  415f90:	mov	x24, #0x0                   	// #0
  415f94:	cbz	x0, 415fd0 <wcrtomb@plt+0x113b0>
  415f98:	bl	4157f0 <wcrtomb@plt+0x10bd0>
  415f9c:	sub	x24, x0, #0x1
  415fa0:	ldr	x0, [sp, #136]
  415fa4:	ldr	x1, [sp, #128]
  415fa8:	sub	x0, x0, x1
  415fac:	cmp	x24, x0
  415fb0:	b.hi	415ff8 <wcrtomb@plt+0x113d8>  // b.pmore
  415fb4:	mov	x2, x24
  415fb8:	mov	x1, x19
  415fbc:	ldr	x0, [sp, #128]
  415fc0:	bl	403f70 <memcpy@plt>
  415fc4:	ldr	x0, [sp, #128]
  415fc8:	add	x0, x0, x24
  415fcc:	str	x0, [sp, #128]
  415fd0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  415fd4:	ldr	x19, [x0, #2152]
  415fd8:	cbz	x19, 416030 <wcrtomb@plt+0x11410>
  415fdc:	stp	x25, x26, [sp, #64]
  415fe0:	str	x27, [sp, #80]
  415fe4:	mov	w25, #0x58                  	// #88
  415fe8:	adrp	x23, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  415fec:	add	x23, x23, #0x7f8
  415ff0:	mov	x26, #0x1                   	// #1
  415ff4:	b	4161c8 <wcrtomb@plt+0x115a8>
  415ff8:	mov	x1, x24
  415ffc:	add	x0, sp, #0x68
  416000:	bl	440fcc <_obstack_newchunk@@Base>
  416004:	b	415fb4 <wcrtomb@plt+0x11394>
  416008:	mov	x1, x26
  41600c:	add	x0, sp, #0x68
  416010:	bl	440fcc <_obstack_newchunk@@Base>
  416014:	b	416120 <wcrtomb@plt+0x11500>
  416018:	mov	x1, x20
  41601c:	add	x0, sp, #0x68
  416020:	bl	440fcc <_obstack_newchunk@@Base>
  416024:	b	416150 <wcrtomb@plt+0x11530>
  416028:	ldp	x25, x26, [sp, #64]
  41602c:	ldr	x27, [sp, #80]
  416030:	cbz	x22, 4160b8 <wcrtomb@plt+0x11498>
  416034:	ldr	x1, [sp, #128]
  416038:	ldr	x0, [sp, #120]
  41603c:	sub	x0, x1, x0
  416040:	cmp	x24, x0
  416044:	b.eq	4160b8 <wcrtomb@plt+0x11498>  // b.none
  416048:	ldr	x0, [sp, #136]
  41604c:	cmp	x1, x0
  416050:	b.eq	4160d8 <wcrtomb@plt+0x114b8>  // b.none
  416054:	ldr	x0, [sp, #128]
  416058:	add	x1, x0, #0x1
  41605c:	str	x1, [sp, #128]
  416060:	strb	wzr, [x0]
  416064:	ldr	x0, [x22, #40]
  416068:	bl	414398 <wcrtomb@plt+0xf778>
  41606c:	ldr	x0, [sp, #120]
  416070:	ldr	x2, [sp, #128]
  416074:	cmp	x2, x0
  416078:	b.eq	4160e8 <wcrtomb@plt+0x114c8>  // b.none
  41607c:	ldr	x1, [sp, #152]
  416080:	add	x2, x2, x1
  416084:	bic	x1, x2, x1
  416088:	ldr	x2, [sp, #112]
  41608c:	ldr	x3, [sp, #136]
  416090:	sub	x4, x1, x2
  416094:	sub	x2, x3, x2
  416098:	cmp	x4, x2
  41609c:	csel	x1, x1, x3, ls  // ls = plast
  4160a0:	str	x1, [sp, #128]
  4160a4:	str	x1, [sp, #120]
  4160a8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  4160ac:	add	x1, x1, #0x5e0
  4160b0:	bl	414694 <wcrtomb@plt+0xfa74>
  4160b4:	str	x0, [x22, #40]
  4160b8:	mov	x1, #0x0                   	// #0
  4160bc:	add	x0, sp, #0x68
  4160c0:	bl	44111c <_obstack_free@@Base>
  4160c4:	ldp	x19, x20, [sp, #16]
  4160c8:	ldp	x23, x24, [sp, #48]
  4160cc:	ldp	x21, x22, [sp, #32]
  4160d0:	ldp	x29, x30, [sp], #192
  4160d4:	ret
  4160d8:	mov	x1, #0x1                   	// #1
  4160dc:	add	x0, sp, #0x68
  4160e0:	bl	440fcc <_obstack_newchunk@@Base>
  4160e4:	b	416054 <wcrtomb@plt+0x11434>
  4160e8:	ldrb	w1, [sp, #184]
  4160ec:	orr	w1, w1, #0x2
  4160f0:	strb	w1, [sp, #184]
  4160f4:	b	41607c <wcrtomb@plt+0x1145c>
  4160f8:	ldr	w0, [x21, #60]
  4160fc:	and	w0, w0, #0xffffffef
  416100:	str	w0, [x21, #60]
  416104:	ldr	x0, [x19, #88]
  416108:	bl	4349b0 <argp_parse@@Base+0x1270>
  41610c:	mov	x27, x0
  416110:	ldr	x1, [sp, #136]
  416114:	ldr	x0, [sp, #128]
  416118:	cmp	x1, x0
  41611c:	b.eq	416008 <wcrtomb@plt+0x113e8>  // b.none
  416120:	ldr	x0, [sp, #128]
  416124:	add	x1, x0, #0x1
  416128:	str	x1, [sp, #128]
  41612c:	strb	w25, [x0]
  416130:	mov	x0, x27
  416134:	bl	403ff0 <strlen@plt>
  416138:	add	x20, x0, #0x1
  41613c:	ldr	x0, [sp, #136]
  416140:	ldr	x1, [sp, #128]
  416144:	sub	x0, x0, x1
  416148:	cmp	x20, x0
  41614c:	b.hi	416018 <wcrtomb@plt+0x113f8>  // b.pmore
  416150:	mov	x2, x20
  416154:	mov	x1, x27
  416158:	ldr	x0, [sp, #128]
  41615c:	bl	403f70 <memcpy@plt>
  416160:	ldr	x0, [sp, #128]
  416164:	add	x20, x0, x20
  416168:	str	x20, [sp, #128]
  41616c:	mov	x2, x23
  416170:	ldr	x1, [x19, #88]
  416174:	add	x0, sp, #0x68
  416178:	bl	414edc <wcrtomb@plt+0x102bc>
  41617c:	cmp	x19, x21
  416180:	b.eq	4161a8 <wcrtomb@plt+0x11588>  // b.none
  416184:	mov	x20, x19
  416188:	ldr	x1, [x20, #64]
  41618c:	ldr	x2, [x20, #88]
  416190:	ldr	x1, [x1, #88]
  416194:	add	x0, sp, #0x68
  416198:	bl	414edc <wcrtomb@plt+0x102bc>
  41619c:	ldr	x20, [x20, #64]
  4161a0:	cmp	x20, x21
  4161a4:	b.ne	416188 <wcrtomb@plt+0x11568>  // b.any
  4161a8:	ldr	x2, [x21, #88]
  4161ac:	mov	x1, x23
  4161b0:	add	x0, sp, #0x68
  4161b4:	bl	414edc <wcrtomb@plt+0x102bc>
  4161b8:	mov	x0, x27
  4161bc:	bl	4047c0 <free@plt>
  4161c0:	ldr	x19, [x19]
  4161c4:	cbz	x19, 416028 <wcrtomb@plt+0x11408>
  4161c8:	ldr	w0, [x19, #60]
  4161cc:	tbz	w0, #4, 4161c0 <wcrtomb@plt+0x115a0>
  4161d0:	mov	x1, x19
  4161d4:	mov	x21, x1
  4161d8:	ldr	x1, [x1, #64]
  4161dc:	cmp	x1, x19
  4161e0:	b.eq	4160f8 <wcrtomb@plt+0x114d8>  // b.none
  4161e4:	ldr	w0, [x21, #60]
  4161e8:	and	w0, w0, #0xffffffef
  4161ec:	str	w0, [x21, #60]
  4161f0:	cbnz	x1, 4161d4 <wcrtomb@plt+0x115b4>
  4161f4:	mov	x20, x19
  4161f8:	ldr	x0, [x20, #64]
  4161fc:	cbz	x0, 4161c0 <wcrtomb@plt+0x115a0>
  416200:	ldr	x2, [x20, #88]
  416204:	ldr	x1, [x0, #88]
  416208:	add	x0, sp, #0x68
  41620c:	bl	414edc <wcrtomb@plt+0x102bc>
  416210:	ldr	x20, [x20, #64]
  416214:	cbnz	x20, 4161f8 <wcrtomb@plt+0x115d8>
  416218:	b	4161c0 <wcrtomb@plt+0x115a0>
  41621c:	stp	x29, x30, [sp, #-112]!
  416220:	mov	x29, sp
  416224:	stp	x19, x20, [sp, #16]
  416228:	stp	x21, x22, [sp, #32]
  41622c:	str	x23, [sp, #48]
  416230:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x12e64>
  416234:	add	x0, x0, #0x768
  416238:	bl	4046c0 <puts@plt>
  41623c:	adrp	x4, 454000 <_obstack_memory_used@@Base+0x12e64>
  416240:	add	x4, x4, #0x798
  416244:	adrp	x3, 454000 <_obstack_memory_used@@Base+0x12e64>
  416248:	add	x3, x3, #0x7a0
  41624c:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x12e64>
  416250:	add	x2, x2, #0x7a8
  416254:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  416258:	add	x1, x1, #0x7b8
  41625c:	mov	w0, #0x1                   	// #1
  416260:	bl	404410 <__printf_chk@plt>
  416264:	adrp	x19, 454000 <_obstack_memory_used@@Base+0x12e64>
  416268:	add	x19, x19, #0xb88
  41626c:	add	x19, x19, #0x8
  416270:	adrp	x21, 454000 <_obstack_memory_used@@Base+0x12e64>
  416274:	add	x21, x21, #0x760
  416278:	adrp	x22, 454000 <_obstack_memory_used@@Base+0x12e64>
  41627c:	add	x22, x22, #0x7d8
  416280:	mov	w23, #0x1                   	// #1
  416284:	ldr	x0, [x19, #8]
  416288:	add	x3, sp, #0x58
  41628c:	ldr	x2, [x19, #16]
  416290:	mov	x1, x0
  416294:	bl	41ab94 <wcrtomb@plt+0x15f74>
  416298:	mov	x20, x0
  41629c:	ldr	x0, [x19, #16]
  4162a0:	add	x3, sp, #0x40
  4162a4:	mov	x2, x0
  4162a8:	ldr	x1, [x19, #8]
  4162ac:	bl	41ab94 <wcrtomb@plt+0x15f74>
  4162b0:	mov	x4, x0
  4162b4:	mov	x3, x20
  4162b8:	mov	x2, x21
  4162bc:	mov	x1, x22
  4162c0:	mov	w0, w23
  4162c4:	bl	404410 <__printf_chk@plt>
  4162c8:	ldr	x21, [x19, #24]!
  4162cc:	cbnz	x21, 416284 <wcrtomb@plt+0x11664>
  4162d0:	mov	w0, #0xa                   	// #10
  4162d4:	bl	404b00 <putchar@plt>
  4162d8:	ldp	x19, x20, [sp, #16]
  4162dc:	ldp	x21, x22, [sp, #32]
  4162e0:	ldr	x23, [sp, #48]
  4162e4:	ldp	x29, x30, [sp], #112
  4162e8:	ret
  4162ec:	stp	x29, x30, [sp, #-256]!
  4162f0:	mov	x29, sp
  4162f4:	str	xzr, [sp, #248]
  4162f8:	str	xzr, [sp, #240]
  4162fc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  416300:	ldr	w0, [x0, #716]
  416304:	cmp	w0, #0x0
  416308:	mov	w2, #0x1b6                 	// #438
  41630c:	mov	w1, #0x42                  	// #66
  416310:	mov	w0, #0x242                 	// #578
  416314:	csel	w1, w1, w0, ne  // ne = any
  416318:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41631c:	ldr	x0, [x0, #768]
  416320:	bl	404340 <open@plt>
  416324:	tbnz	w0, #31, 416408 <wcrtomb@plt+0x117e8>
  416328:	stp	x19, x20, [sp, #16]
  41632c:	mov	w19, w0
  416330:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  416334:	add	x1, x1, #0x7f8
  416338:	bl	404430 <fdopen@plt>
  41633c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  416340:	str	x0, [x1, #2184]
  416344:	cbz	x0, 416418 <wcrtomb@plt+0x117f8>
  416348:	bl	41e4a8 <wcrtomb@plt+0x19888>
  41634c:	bl	41e520 <wcrtomb@plt+0x19900>
  416350:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  416354:	ldr	x3, [x0, #2184]
  416358:	mov	w2, #0xa                   	// #10
  41635c:	add	x1, sp, #0xf0
  416360:	add	x0, sp, #0xf8
  416364:	bl	404b40 <__getdelim@plt>
  416368:	cmp	x0, #0x0
  41636c:	b.le	4169e8 <wcrtomb@plt+0x11dc8>
  416370:	stp	x21, x22, [sp, #32]
  416374:	stp	x23, x24, [sp, #48]
  416378:	ldr	x20, [sp, #248]
  41637c:	mov	x2, #0x7                   	// #7
  416380:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  416384:	add	x1, x1, #0x800
  416388:	mov	x0, x20
  41638c:	bl	4043c0 <strncmp@plt>
  416390:	cbnz	w0, 416d28 <wcrtomb@plt+0x12108>
  416394:	add	x19, x20, #0x8
  416398:	ldrb	w0, [x20, #7]
  41639c:	cmp	w0, #0x2d
  4163a0:	b.eq	4163e4 <wcrtomb@plt+0x117c4>  // b.none
  4163a4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4163a8:	ldr	x0, [x0, #944]
  4163ac:	cbz	x0, 4163b4 <wcrtomb@plt+0x11794>
  4163b0:	blr	x0
  4163b4:	mov	w2, #0x5                   	// #5
  4163b8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  4163bc:	add	x1, x1, #0x808
  4163c0:	mov	x0, #0x0                   	// #0
  4163c4:	bl	4049c0 <dcgettext@plt>
  4163c8:	mov	x2, x0
  4163cc:	mov	w1, #0x0                   	// #0
  4163d0:	mov	w0, #0x1                   	// #1
  4163d4:	bl	404050 <error@plt>
  4163d8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4163dc:	mov	w1, #0x2                   	// #2
  4163e0:	str	w1, [x0, #3392]
  4163e4:	ldrb	w0, [x20, #8]
  4163e8:	cmp	w0, #0x2d
  4163ec:	b.eq	41647c <wcrtomb@plt+0x1185c>  // b.none
  4163f0:	adrp	x22, 481000 <argp_program_version_hook@@Base+0x298>
  4163f4:	adrp	x21, 454000 <_obstack_memory_used@@Base+0x12e64>
  4163f8:	add	x21, x21, #0x808
  4163fc:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x3ee64>
  416400:	add	x20, x20, #0xd40
  416404:	b	41646c <wcrtomb@plt+0x1184c>
  416408:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41640c:	ldr	x0, [x0, #768]
  416410:	bl	429b9c <wcrtomb@plt+0x24f7c>
  416414:	b	416a04 <wcrtomb@plt+0x11de4>
  416418:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41641c:	ldr	x0, [x0, #768]
  416420:	bl	429b9c <wcrtomb@plt+0x24f7c>
  416424:	mov	w0, w19
  416428:	bl	4045d0 <close@plt>
  41642c:	ldp	x19, x20, [sp, #16]
  416430:	b	416a04 <wcrtomb@plt+0x11de4>
  416434:	blr	x0
  416438:	mov	w2, #0x5                   	// #5
  41643c:	mov	x1, x21
  416440:	mov	x0, #0x0                   	// #0
  416444:	bl	4049c0 <dcgettext@plt>
  416448:	mov	x2, x0
  41644c:	mov	w1, #0x0                   	// #0
  416450:	mov	w0, #0x1                   	// #1
  416454:	bl	404050 <error@plt>
  416458:	mov	w0, #0x2                   	// #2
  41645c:	str	w0, [x20]
  416460:	ldrb	w0, [x19, #1]!
  416464:	cmp	w0, #0x2d
  416468:	b.eq	41647c <wcrtomb@plt+0x1185c>  // b.none
  41646c:	cbnz	w0, 416460 <wcrtomb@plt+0x11840>
  416470:	ldr	x0, [x22, #944]
  416474:	cbnz	x0, 416434 <wcrtomb@plt+0x11814>
  416478:	b	416438 <wcrtomb@plt+0x11818>
  41647c:	mov	w3, #0x0                   	// #0
  416480:	mov	w2, #0xa                   	// #10
  416484:	mov	x1, #0x0                   	// #0
  416488:	add	x0, x19, #0x1
  41648c:	bl	4044c0 <__strtoul_internal@plt>
  416490:	mov	x19, x0
  416494:	cmp	x0, #0x1
  416498:	b.ls	4164f4 <wcrtomb@plt+0x118d4>  // b.plast
  41649c:	cmp	x0, #0x2
  4164a0:	b.ne	416cb4 <wcrtomb@plt+0x12094>  // b.any
  4164a4:	stp	x25, x26, [sp, #64]
  4164a8:	stp	x27, x28, [sp, #80]
  4164ac:	adrp	x4, 404000 <fputs@plt>
  4164b0:	add	x4, x4, #0x7c0
  4164b4:	adrp	x3, 43f000 <argp_parse@@Base+0xb8c0>
  4164b8:	add	x3, x3, #0xef4
  4164bc:	mov	x2, #0x0                   	// #0
  4164c0:	mov	x1, #0x0                   	// #0
  4164c4:	add	x0, sp, #0x98
  4164c8:	bl	440f78 <_obstack_begin@@Base>
  4164cc:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4164d0:	add	x1, x1, #0xfe8
  4164d4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4164d8:	ldr	x0, [x0, #2184]
  4164dc:	bl	4154e8 <wcrtomb@plt+0x108c8>
  4164e0:	adrp	x24, 454000 <_obstack_memory_used@@Base+0x12e64>
  4164e4:	add	x24, x24, #0x760
  4164e8:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4164ec:	add	x19, x19, #0x868
  4164f0:	b	416ac4 <wcrtomb@plt+0x11ea4>
  4164f4:	mov	w23, w0
  4164f8:	ldr	x20, [sp, #248]
  4164fc:	str	xzr, [sp, #112]
  416500:	str	xzr, [sp, #128]
  416504:	cmp	w0, #0x1
  416508:	b.ne	4165ec <wcrtomb@plt+0x119cc>  // b.any
  41650c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  416510:	ldr	x3, [x0, #2184]
  416514:	mov	w2, #0xa                   	// #10
  416518:	add	x1, sp, #0x80
  41651c:	add	x0, sp, #0x70
  416520:	bl	404b40 <__getdelim@plt>
  416524:	cmp	x0, #0x0
  416528:	b.le	4165cc <wcrtomb@plt+0x119ac>
  41652c:	stp	x25, x26, [sp, #64]
  416530:	stp	x27, x28, [sp, #80]
  416534:	mov	w2, #0x0                   	// #0
  416538:	add	x1, sp, #0x98
  41653c:	ldr	x0, [sp, #112]
  416540:	bl	41ae0c <wcrtomb@plt+0x161ec>
  416544:	mov	x2, x0
  416548:	mov	x3, x1
  41654c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  416550:	add	x1, x1, #0xfe8
  416554:	stp	x2, x3, [x1]
  416558:	ldr	x0, [x1, #8]
  41655c:	tbnz	x0, #63, 4165f8 <wcrtomb@plt+0x119d8>
  416560:	ldr	x0, [sp, #152]
  416564:	ldrb	w1, [x0]
  416568:	mov	x21, #0x2                   	// #2
  41656c:	cbz	w1, 416d8c <wcrtomb@plt+0x1216c>
  416570:	add	x19, x0, #0x1
  416574:	bl	404ad0 <__errno_location@plt>
  416578:	mov	x20, x0
  41657c:	str	wzr, [x0]
  416580:	mov	w3, #0x0                   	// #0
  416584:	mov	w2, #0xa                   	// #10
  416588:	add	x1, sp, #0x98
  41658c:	mov	x0, x19
  416590:	bl	4044c0 <__strtoul_internal@plt>
  416594:	ldr	w1, [x20]
  416598:	cmp	w1, #0x0
  41659c:	mov	x2, #0xc9ff                	// #51711
  4165a0:	movk	x2, #0x3b9a, lsl #16
  4165a4:	ccmp	x0, x2, #0x0, eq  // eq = none
  4165a8:	b.hi	41665c <wcrtomb@plt+0x11a3c>  // b.pmore
  4165ac:	cbnz	w1, 416664 <wcrtomb@plt+0x11a44>
  4165b0:	ldr	x1, [sp, #152]
  4165b4:	cmp	x19, x1
  4165b8:	b.eq	416664 <wcrtomb@plt+0x11a44>  // b.none
  4165bc:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4165c0:	str	x0, [x1, #4080]
  4165c4:	mov	x21, #0x2                   	// #2
  4165c8:	b	416d8c <wcrtomb@plt+0x1216c>
  4165cc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4165d0:	ldr	x0, [x0, #768]
  4165d4:	bl	429bf4 <wcrtomb@plt+0x24fd4>
  4165d8:	ldr	x0, [sp, #112]
  4165dc:	bl	4047c0 <free@plt>
  4165e0:	ldp	x21, x22, [sp, #32]
  4165e4:	ldp	x23, x24, [sp, #48]
  4165e8:	b	4169e8 <wcrtomb@plt+0x11dc8>
  4165ec:	stp	x25, x26, [sp, #64]
  4165f0:	stp	x27, x28, [sp, #80]
  4165f4:	b	416d38 <wcrtomb@plt+0x12118>
  4165f8:	mov	x19, #0x2                   	// #2
  4165fc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  416600:	ldr	x0, [x0, #944]
  416604:	cbz	x0, 41660c <wcrtomb@plt+0x119ec>
  416608:	blr	x0
  41660c:	bl	404ad0 <__errno_location@plt>
  416610:	ldr	w21, [x0]
  416614:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  416618:	ldr	x0, [x0, #768]
  41661c:	bl	43efc4 <argp_parse@@Base+0xb884>
  416620:	mov	x20, x0
  416624:	mov	w2, #0x5                   	// #5
  416628:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  41662c:	add	x1, x1, #0x828
  416630:	mov	x0, #0x0                   	// #0
  416634:	bl	4049c0 <dcgettext@plt>
  416638:	mov	x5, x0
  41663c:	mov	x4, x19
  416640:	mov	x3, x20
  416644:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x12e64>
  416648:	add	x2, x2, #0x840
  41664c:	mov	w1, w21
  416650:	mov	w0, #0x0                   	// #0
  416654:	bl	404050 <error@plt>
  416658:	bl	40e5ac <wcrtomb@plt+0x998c>
  41665c:	mov	w0, #0x22                  	// #34
  416660:	str	w0, [x20]
  416664:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  416668:	ldr	x0, [x0, #944]
  41666c:	cbz	x0, 416674 <wcrtomb@plt+0x11a54>
  416670:	blr	x0
  416674:	ldr	w20, [x20]
  416678:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41667c:	ldr	x0, [x0, #768]
  416680:	bl	43efc4 <argp_parse@@Base+0xb884>
  416684:	mov	x19, x0
  416688:	mov	w2, #0x5                   	// #5
  41668c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  416690:	add	x1, x1, #0x828
  416694:	mov	x0, #0x0                   	// #0
  416698:	bl	4049c0 <dcgettext@plt>
  41669c:	mov	x5, x0
  4166a0:	mov	x4, #0x2                   	// #2
  4166a4:	mov	x3, x19
  4166a8:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x12e64>
  4166ac:	add	x2, x2, #0x840
  4166b0:	mov	w1, w20
  4166b4:	mov	w0, #0x0                   	// #0
  4166b8:	bl	404050 <error@plt>
  4166bc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4166c0:	mov	w1, #0x2                   	// #2
  4166c4:	str	w1, [x0, #3392]
  4166c8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4166cc:	add	x1, x0, #0xfe8
  4166d0:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
  4166d4:	str	x2, [x0, #4072]
  4166d8:	mov	x0, #0xffffffffffffffff    	// #-1
  4166dc:	str	x0, [x1, #8]
  4166e0:	mov	x21, #0x2                   	// #2
  4166e4:	b	416d8c <wcrtomb@plt+0x1216c>
  4166e8:	strb	wzr, [x2, x1]
  4166ec:	b	41684c <wcrtomb@plt+0x11c2c>
  4166f0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4166f4:	ldr	x0, [x0, #944]
  4166f8:	cbz	x0, 416700 <wcrtomb@plt+0x11ae0>
  4166fc:	blr	x0
  416700:	bl	404ad0 <__errno_location@plt>
  416704:	ldr	w20, [x0]
  416708:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41670c:	ldr	x0, [x0, #768]
  416710:	bl	43efc4 <argp_parse@@Base+0xb884>
  416714:	mov	x19, x0
  416718:	mov	w2, #0x5                   	// #5
  41671c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  416720:	add	x1, x1, #0x850
  416724:	mov	x0, #0x0                   	// #0
  416728:	bl	4049c0 <dcgettext@plt>
  41672c:	mov	x5, x0
  416730:	mov	x4, x21
  416734:	mov	x3, x19
  416738:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x12e64>
  41673c:	add	x2, x2, #0x840
  416740:	mov	w1, w20
  416744:	mov	w0, #0x0                   	// #0
  416748:	bl	404050 <error@plt>
  41674c:	bl	40e5ac <wcrtomb@plt+0x998c>
  416750:	cbnz	w0, 4168bc <wcrtomb@plt+0x11c9c>
  416754:	ldr	x0, [sp, #152]
  416758:	cmp	x27, x0
  41675c:	b.eq	4168bc <wcrtomb@plt+0x11c9c>  // b.none
  416760:	ldrb	w1, [x0]
  416764:	cmp	w1, #0x20
  416768:	b.ne	4168bc <wcrtomb@plt+0x11c9c>  // b.any
  41676c:	mov	x3, #0xffffffffffffffff    	// #-1
  416770:	mov	x2, #0x0                   	// #0
  416774:	add	x1, sp, #0x98
  416778:	bl	41abbc <wcrtomb@plt+0x15f9c>
  41677c:	mov	x27, x0
  416780:	ldr	x28, [sp, #152]
  416784:	bl	404ad0 <__errno_location@plt>
  416788:	mov	x20, x0
  41678c:	ldr	w0, [x0]
  416790:	cbnz	w0, 416918 <wcrtomb@plt+0x11cf8>
  416794:	ldrb	w0, [x28]
  416798:	cmp	w0, #0x20
  41679c:	b.ne	416918 <wcrtomb@plt+0x11cf8>  // b.any
  4167a0:	mov	x3, #0xffffffffffffffff    	// #-1
  4167a4:	mov	x2, #0x0                   	// #0
  4167a8:	add	x1, sp, #0x98
  4167ac:	mov	x0, x28
  4167b0:	bl	41abbc <wcrtomb@plt+0x15f9c>
  4167b4:	mov	x28, x0
  4167b8:	ldr	x0, [sp, #152]
  4167bc:	ldr	w1, [x20]
  4167c0:	cbnz	w1, 416974 <wcrtomb@plt+0x11d54>
  4167c4:	ldrb	w1, [x0]
  4167c8:	cmp	w1, #0x20
  4167cc:	b.ne	416974 <wcrtomb@plt+0x11d54>  // b.any
  4167d0:	add	x20, x0, #0x1
  4167d4:	mov	x0, x20
  4167d8:	bl	41a660 <wcrtomb@plt+0x15a40>
  4167dc:	mov	x7, #0x0                   	// #0
  4167e0:	mov	w6, #0x0                   	// #0
  4167e4:	mov	w5, w25
  4167e8:	mov	x4, x28
  4167ec:	mov	x3, x27
  4167f0:	mov	x1, x26
  4167f4:	mov	x2, x19
  4167f8:	mov	x0, x20
  4167fc:	bl	4147c8 <wcrtomb@plt+0xfba8>
  416800:	ldr	x3, [x22, #32]
  416804:	mov	w2, #0xa                   	// #10
  416808:	add	x1, sp, #0x80
  41680c:	add	x0, sp, #0x70
  416810:	bl	404b40 <__getdelim@plt>
  416814:	mov	x1, x0
  416818:	cmp	w0, #0x0
  41681c:	b.le	4169d0 <wcrtomb@plt+0x11db0>
  416820:	ldr	x2, [sp, #112]
  416824:	ldrb	w0, [x2]
  416828:	cmp	w0, #0x2b
  41682c:	cset	w25, eq  // eq = none
  416830:	cinc	x0, x2, eq  // eq = none
  416834:	add	x21, x21, #0x1
  416838:	sxtw	x1, w1
  41683c:	sub	x1, x1, #0x1
  416840:	ldrb	w3, [x2, x1]
  416844:	cmp	w3, #0xa
  416848:	b.eq	4166e8 <wcrtomb@plt+0x11ac8>  // b.none
  41684c:	mov	x19, #0x0                   	// #0
  416850:	mov	x26, #0x0                   	// #0
  416854:	cmp	w23, #0x1
  416858:	b.ne	41676c <wcrtomb@plt+0x11b4c>  // b.any
  41685c:	mov	w2, #0x0                   	// #0
  416860:	add	x1, sp, #0x98
  416864:	bl	41ae0c <wcrtomb@plt+0x161ec>
  416868:	mov	x26, x0
  41686c:	ldr	x27, [sp, #152]
  416870:	tbnz	x1, #63, 4166f0 <wcrtomb@plt+0x11ad0>
  416874:	ldrb	w0, [x27]
  416878:	cmp	w0, #0x20
  41687c:	b.ne	4166f0 <wcrtomb@plt+0x11ad0>  // b.any
  416880:	bl	404ad0 <__errno_location@plt>
  416884:	mov	x20, x0
  416888:	str	wzr, [x0]
  41688c:	mov	w3, #0x0                   	// #0
  416890:	mov	w2, #0xa                   	// #10
  416894:	add	x1, sp, #0x98
  416898:	mov	x0, x27
  41689c:	bl	4044c0 <__strtoul_internal@plt>
  4168a0:	mov	x19, x0
  4168a4:	ldr	w0, [x20]
  4168a8:	cmp	w0, #0x0
  4168ac:	ccmp	x19, x24, #0x0, eq  // eq = none
  4168b0:	b.ls	416750 <wcrtomb@plt+0x11b30>  // b.plast
  4168b4:	mov	w0, #0x22                  	// #34
  4168b8:	str	w0, [x20]
  4168bc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4168c0:	ldr	x0, [x0, #944]
  4168c4:	cbz	x0, 4168cc <wcrtomb@plt+0x11cac>
  4168c8:	blr	x0
  4168cc:	ldr	w20, [x20]
  4168d0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4168d4:	ldr	x0, [x0, #768]
  4168d8:	bl	43efc4 <argp_parse@@Base+0xb884>
  4168dc:	mov	x19, x0
  4168e0:	mov	w2, #0x5                   	// #5
  4168e4:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  4168e8:	add	x1, x1, #0x870
  4168ec:	mov	x0, #0x0                   	// #0
  4168f0:	bl	4049c0 <dcgettext@plt>
  4168f4:	mov	x5, x0
  4168f8:	mov	x4, x21
  4168fc:	mov	x3, x19
  416900:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x12e64>
  416904:	add	x2, x2, #0x840
  416908:	mov	w1, w20
  41690c:	mov	w0, #0x0                   	// #0
  416910:	bl	404050 <error@plt>
  416914:	bl	40e5ac <wcrtomb@plt+0x998c>
  416918:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41691c:	ldr	x0, [x0, #944]
  416920:	cbz	x0, 416928 <wcrtomb@plt+0x11d08>
  416924:	blr	x0
  416928:	ldr	w20, [x20]
  41692c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  416930:	ldr	x0, [x0, #768]
  416934:	bl	43efc4 <argp_parse@@Base+0xb884>
  416938:	mov	x19, x0
  41693c:	mov	w2, #0x5                   	// #5
  416940:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  416944:	add	x1, x1, #0x898
  416948:	mov	x0, #0x0                   	// #0
  41694c:	bl	4049c0 <dcgettext@plt>
  416950:	mov	x5, x0
  416954:	mov	x4, x21
  416958:	mov	x3, x19
  41695c:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x12e64>
  416960:	add	x2, x2, #0x840
  416964:	mov	w1, w20
  416968:	mov	w0, #0x0                   	// #0
  41696c:	bl	404050 <error@plt>
  416970:	bl	40e5ac <wcrtomb@plt+0x998c>
  416974:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  416978:	ldr	x0, [x0, #944]
  41697c:	cbz	x0, 416984 <wcrtomb@plt+0x11d64>
  416980:	blr	x0
  416984:	ldr	w20, [x20]
  416988:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41698c:	ldr	x0, [x0, #768]
  416990:	bl	43efc4 <argp_parse@@Base+0xb884>
  416994:	mov	x19, x0
  416998:	mov	w2, #0x5                   	// #5
  41699c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  4169a0:	add	x1, x1, #0x8b0
  4169a4:	mov	x0, #0x0                   	// #0
  4169a8:	bl	4049c0 <dcgettext@plt>
  4169ac:	mov	x5, x0
  4169b0:	mov	x4, x21
  4169b4:	mov	x3, x19
  4169b8:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x12e64>
  4169bc:	add	x2, x2, #0x840
  4169c0:	mov	w1, w20
  4169c4:	mov	w0, #0x0                   	// #0
  4169c8:	bl	404050 <error@plt>
  4169cc:	bl	40e5ac <wcrtomb@plt+0x998c>
  4169d0:	ldr	x0, [sp, #112]
  4169d4:	bl	4047c0 <free@plt>
  4169d8:	ldp	x21, x22, [sp, #32]
  4169dc:	ldp	x23, x24, [sp, #48]
  4169e0:	ldp	x25, x26, [sp, #64]
  4169e4:	ldp	x27, x28, [sp, #80]
  4169e8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4169ec:	ldr	x0, [x0, #2184]
  4169f0:	ldr	w0, [x0]
  4169f4:	tbnz	w0, #5, 416d18 <wcrtomb@plt+0x120f8>
  4169f8:	ldr	x0, [sp, #248]
  4169fc:	bl	4047c0 <free@plt>
  416a00:	ldp	x19, x20, [sp, #16]
  416a04:	ldp	x29, x30, [sp], #256
  416a08:	ret
  416a0c:	ldrb	w0, [sp, #232]
  416a10:	orr	w0, w0, #0x2
  416a14:	strb	w0, [sp, #232]
  416a18:	b	416b70 <wcrtomb@plt+0x11f50>
  416a1c:	bl	404b90 <__uflow@plt>
  416a20:	b	416bdc <wcrtomb@plt+0x11fbc>
  416a24:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  416a28:	ldr	x0, [x0, #944]
  416a2c:	cbz	x0, 416a34 <wcrtomb@plt+0x11e14>
  416a30:	blr	x0
  416a34:	mov	w2, #0x5                   	// #5
  416a38:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  416a3c:	add	x1, x1, #0x8d8
  416a40:	mov	x0, #0x0                   	// #0
  416a44:	bl	4049c0 <dcgettext@plt>
  416a48:	mov	x19, x0
  416a4c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  416a50:	ldr	x0, [x0, #768]
  416a54:	bl	43efc4 <argp_parse@@Base+0xb884>
  416a58:	mov	x20, x0
  416a5c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  416a60:	ldr	x0, [x0, #2184]
  416a64:	bl	404900 <ftello@plt>
  416a68:	add	x1, sp, #0x80
  416a6c:	bl	438c68 <argp_parse@@Base+0x5528>
  416a70:	mov	x21, x0
  416a74:	mov	w2, #0x5                   	// #5
  416a78:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  416a7c:	add	x1, x1, #0x8e8
  416a80:	mov	x0, #0x0                   	// #0
  416a84:	bl	4049c0 <dcgettext@plt>
  416a88:	mov	x5, x0
  416a8c:	mov	x4, x21
  416a90:	mov	x3, x20
  416a94:	mov	x2, x19
  416a98:	mov	w1, #0x0                   	// #0
  416a9c:	mov	w0, #0x0                   	// #0
  416aa0:	bl	404050 <error@plt>
  416aa4:	bl	40e5ac <wcrtomb@plt+0x998c>
  416aa8:	ldrb	w0, [sp, #232]
  416aac:	orr	w0, w0, #0x2
  416ab0:	strb	w0, [sp, #232]
  416ab4:	b	416bf0 <wcrtomb@plt+0x11fd0>
  416ab8:	mov	x1, x25
  416abc:	add	x0, sp, #0x98
  416ac0:	bl	44111c <_obstack_free@@Base>
  416ac4:	add	x4, sp, #0x60
  416ac8:	mov	x3, #0x1                   	// #1
  416acc:	mov	x2, #0x0                   	// #0
  416ad0:	mov	x1, x24
  416ad4:	ldr	x0, [x19, #32]
  416ad8:	bl	415168 <wcrtomb@plt+0x10548>
  416adc:	and	w0, w0, #0xff
  416ae0:	cbz	w0, 416d04 <wcrtomb@plt+0x120e4>
  416ae4:	ldr	x0, [sp, #96]
  416ae8:	cmp	x0, #0x0
  416aec:	cset	w23, ne  // ne = any
  416af0:	add	x1, sp, #0x70
  416af4:	ldr	x0, [x19, #32]
  416af8:	bl	4154e8 <wcrtomb@plt+0x108c8>
  416afc:	add	x4, sp, #0x60
  416b00:	mov	x3, #0xffffffffffffffff    	// #-1
  416b04:	mov	x2, #0x0                   	// #0
  416b08:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  416b0c:	add	x1, x1, #0x8c8
  416b10:	ldr	x0, [x19, #32]
  416b14:	bl	415168 <wcrtomb@plt+0x10548>
  416b18:	and	w0, w0, #0xff
  416b1c:	cbz	w0, 416c60 <wcrtomb@plt+0x12040>
  416b20:	ldr	x21, [sp, #96]
  416b24:	add	x4, sp, #0x60
  416b28:	mov	x3, #0xffffffffffffffff    	// #-1
  416b2c:	mov	x2, #0x0                   	// #0
  416b30:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  416b34:	add	x1, x1, #0x8d0
  416b38:	ldr	x0, [x19, #32]
  416b3c:	bl	415168 <wcrtomb@plt+0x10548>
  416b40:	and	w0, w0, #0xff
  416b44:	cbz	w0, 416c60 <wcrtomb@plt+0x12040>
  416b48:	ldr	x22, [sp, #96]
  416b4c:	add	x2, sp, #0x68
  416b50:	add	x1, sp, #0x98
  416b54:	ldr	x0, [x19, #32]
  416b58:	bl	415050 <wcrtomb@plt+0x10430>
  416b5c:	cbnz	w0, 416c60 <wcrtomb@plt+0x12040>
  416b60:	ldr	x20, [sp, #168]
  416b64:	ldr	x1, [sp, #176]
  416b68:	cmp	x20, x1
  416b6c:	b.eq	416a0c <wcrtomb@plt+0x11dec>  // b.none
  416b70:	ldr	x0, [sp, #200]
  416b74:	add	x1, x1, x0
  416b78:	bic	x0, x1, x0
  416b7c:	ldr	x1, [sp, #160]
  416b80:	ldr	x2, [sp, #184]
  416b84:	sub	x3, x0, x1
  416b88:	sub	x1, x2, x1
  416b8c:	cmp	x3, x1
  416b90:	csel	x0, x0, x2, ls  // ls = plast
  416b94:	str	x0, [sp, #176]
  416b98:	str	x0, [sp, #168]
  416b9c:	add	x2, sp, #0x68
  416ba0:	add	x1, sp, #0x98
  416ba4:	ldr	x0, [x19, #32]
  416ba8:	bl	415050 <wcrtomb@plt+0x10430>
  416bac:	cbnz	w0, 416bbc <wcrtomb@plt+0x11f9c>
  416bb0:	ldr	x0, [sp, #104]
  416bb4:	cmp	x0, #0x1
  416bb8:	b.hi	416b9c <wcrtomb@plt+0x11f7c>  // b.pmore
  416bbc:	ldr	x0, [x19, #32]
  416bc0:	ldr	x1, [x0, #8]
  416bc4:	ldr	x2, [x0, #16]
  416bc8:	cmp	x1, x2
  416bcc:	b.cs	416a1c <wcrtomb@plt+0x11dfc>  // b.hs, b.nlast
  416bd0:	add	x2, x1, #0x1
  416bd4:	str	x2, [x0, #8]
  416bd8:	ldrb	w0, [x1]
  416bdc:	cbnz	w0, 416a24 <wcrtomb@plt+0x11e04>
  416be0:	ldr	x25, [sp, #168]
  416be4:	ldr	x1, [sp, #176]
  416be8:	cmp	x25, x1
  416bec:	b.eq	416aa8 <wcrtomb@plt+0x11e88>  // b.none
  416bf0:	ldr	x0, [sp, #200]
  416bf4:	add	x1, x1, x0
  416bf8:	bic	x0, x1, x0
  416bfc:	ldr	x1, [sp, #160]
  416c00:	ldr	x2, [sp, #184]
  416c04:	sub	x3, x0, x1
  416c08:	sub	x1, x2, x1
  416c0c:	cmp	x3, x1
  416c10:	csel	x0, x0, x2, ls  // ls = plast
  416c14:	str	x0, [sp, #176]
  416c18:	str	x0, [sp, #168]
  416c1c:	mov	x7, x25
  416c20:	mov	w6, #0x0                   	// #0
  416c24:	mov	w5, w23
  416c28:	mov	x4, x22
  416c2c:	mov	x3, x21
  416c30:	ldp	x1, x2, [sp, #112]
  416c34:	mov	x0, x20
  416c38:	bl	4147c8 <wcrtomb@plt+0xfba8>
  416c3c:	ldr	x0, [sp, #160]
  416c40:	cmp	x25, x0
  416c44:	b.ls	416ab8 <wcrtomb@plt+0x11e98>  // b.plast
  416c48:	ldr	x0, [sp, #184]
  416c4c:	cmp	x25, x0
  416c50:	b.cs	416ab8 <wcrtomb@plt+0x11e98>  // b.hs, b.nlast
  416c54:	str	x25, [sp, #168]
  416c58:	str	x25, [sp, #176]
  416c5c:	b	416ac4 <wcrtomb@plt+0x11ea4>
  416c60:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  416c64:	ldr	x0, [x0, #944]
  416c68:	cbz	x0, 416c70 <wcrtomb@plt+0x12050>
  416c6c:	blr	x0
  416c70:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  416c74:	ldr	x0, [x0, #768]
  416c78:	bl	43efc4 <argp_parse@@Base+0xb884>
  416c7c:	mov	x19, x0
  416c80:	mov	w2, #0x5                   	// #5
  416c84:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  416c88:	add	x1, x1, #0x6a8
  416c8c:	mov	x0, #0x0                   	// #0
  416c90:	bl	4049c0 <dcgettext@plt>
  416c94:	mov	x4, x0
  416c98:	mov	x3, x19
  416c9c:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x12e64>
  416ca0:	add	x2, x2, #0x6c8
  416ca4:	mov	w1, #0x0                   	// #0
  416ca8:	mov	w0, #0x0                   	// #0
  416cac:	bl	404050 <error@plt>
  416cb0:	bl	40e5ac <wcrtomb@plt+0x998c>
  416cb4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  416cb8:	ldr	x0, [x0, #944]
  416cbc:	cbz	x0, 416cc4 <wcrtomb@plt+0x120a4>
  416cc0:	blr	x0
  416cc4:	mov	w2, #0x5                   	// #5
  416cc8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  416ccc:	add	x1, x1, #0x908
  416cd0:	mov	x0, #0x0                   	// #0
  416cd4:	bl	4049c0 <dcgettext@plt>
  416cd8:	mov	x3, x19
  416cdc:	mov	x2, x0
  416ce0:	mov	w1, #0x0                   	// #0
  416ce4:	mov	w0, #0x1                   	// #1
  416ce8:	bl	404050 <error@plt>
  416cec:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  416cf0:	mov	w1, #0x2                   	// #2
  416cf4:	str	w1, [x0, #3392]
  416cf8:	ldp	x21, x22, [sp, #32]
  416cfc:	ldp	x23, x24, [sp, #48]
  416d00:	b	4169e8 <wcrtomb@plt+0x11dc8>
  416d04:	ldp	x21, x22, [sp, #32]
  416d08:	ldp	x23, x24, [sp, #48]
  416d0c:	ldp	x25, x26, [sp, #64]
  416d10:	ldp	x27, x28, [sp, #80]
  416d14:	b	4169e8 <wcrtomb@plt+0x11dc8>
  416d18:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  416d1c:	ldr	x0, [x0, #768]
  416d20:	bl	429bf4 <wcrtomb@plt+0x24fd4>
  416d24:	b	4169f8 <wcrtomb@plt+0x11dd8>
  416d28:	stp	x25, x26, [sp, #64]
  416d2c:	stp	x27, x28, [sp, #80]
  416d30:	str	xzr, [sp, #112]
  416d34:	str	xzr, [sp, #128]
  416d38:	mov	x0, x20
  416d3c:	bl	404590 <strdup@plt>
  416d40:	mov	x19, x0
  416d44:	str	x0, [sp, #112]
  416d48:	bl	403ff0 <strlen@plt>
  416d4c:	add	x0, x0, #0x1
  416d50:	str	x0, [sp, #128]
  416d54:	mov	w2, #0x0                   	// #0
  416d58:	add	x1, sp, #0x98
  416d5c:	mov	x0, x19
  416d60:	bl	41ae0c <wcrtomb@plt+0x161ec>
  416d64:	mov	x2, x0
  416d68:	mov	x3, x1
  416d6c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  416d70:	add	x1, x1, #0xfe8
  416d74:	stp	x2, x3, [x1]
  416d78:	ldr	x0, [x1, #8]
  416d7c:	mov	x21, #0x1                   	// #1
  416d80:	mov	w23, #0x0                   	// #0
  416d84:	mov	x19, x21
  416d88:	tbnz	x0, #63, 4165fc <wcrtomb@plt+0x119dc>
  416d8c:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x3ee64>
  416d90:	add	x22, x22, #0x868
  416d94:	mov	x24, #0xc9ff                	// #51711
  416d98:	movk	x24, #0x3b9a, lsl #16
  416d9c:	b	416800 <wcrtomb@plt+0x11be0>
  416da0:	stp	x29, x30, [sp, #-80]!
  416da4:	mov	x29, sp
  416da8:	stp	x19, x20, [sp, #16]
  416dac:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  416db0:	ldr	x19, [x0, #2184]
  416db4:	cbz	x19, 416e9c <wcrtomb@plt+0x1227c>
  416db8:	str	x21, [sp, #32]
  416dbc:	mov	w2, #0x0                   	// #0
  416dc0:	mov	x1, #0x0                   	// #0
  416dc4:	mov	x0, x19
  416dc8:	bl	404790 <fseeko@plt>
  416dcc:	cbnz	w0, 416ea8 <wcrtomb@plt+0x12288>
  416dd0:	mov	x0, x19
  416dd4:	bl	404230 <fileno@plt>
  416dd8:	bl	421210 <wcrtomb@plt+0x1c5f0>
  416ddc:	cbnz	w0, 416eb8 <wcrtomb@plt+0x12298>
  416de0:	mov	w5, #0x2                   	// #2
  416de4:	adrp	x4, 454000 <_obstack_memory_used@@Base+0x12e64>
  416de8:	add	x4, x4, #0x938
  416dec:	adrp	x3, 454000 <_obstack_memory_used@@Base+0x12e64>
  416df0:	add	x3, x3, #0x800
  416df4:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x12e64>
  416df8:	add	x2, x2, #0x940
  416dfc:	mov	w1, #0x1                   	// #1
  416e00:	mov	x0, x19
  416e04:	bl	404710 <__fprintf_chk@plt>
  416e08:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  416e0c:	add	x21, x0, #0x288
  416e10:	add	x1, sp, #0x38
  416e14:	ldr	x0, [x0, #648]
  416e18:	bl	438be8 <argp_parse@@Base+0x54a8>
  416e1c:	mov	x20, x0
  416e20:	bl	403ff0 <strlen@plt>
  416e24:	mov	x3, x19
  416e28:	mov	x2, #0x1                   	// #1
  416e2c:	add	x1, x0, x2
  416e30:	mov	x0, x20
  416e34:	bl	403fd0 <fwrite_unlocked@plt>
  416e38:	add	x1, sp, #0x38
  416e3c:	ldr	x0, [x21, #8]
  416e40:	bl	438ce8 <argp_parse@@Base+0x55a8>
  416e44:	mov	x20, x0
  416e48:	bl	403ff0 <strlen@plt>
  416e4c:	mov	x3, x19
  416e50:	mov	x2, #0x1                   	// #1
  416e54:	add	x1, x0, x2
  416e58:	mov	x0, x20
  416e5c:	bl	403fd0 <fwrite_unlocked@plt>
  416e60:	ldr	w0, [x19]
  416e64:	tbnz	w0, #5, 416ec8 <wcrtomb@plt+0x122a8>
  416e68:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  416e6c:	ldr	x0, [x0, #2160]
  416e70:	cbz	x0, 416e8c <wcrtomb@plt+0x1226c>
  416e74:	mov	x2, x19
  416e78:	adrp	x1, 415000 <wcrtomb@plt+0x103e0>
  416e7c:	add	x1, x1, #0x5b4
  416e80:	bl	437ba0 <argp_parse@@Base+0x4460>
  416e84:	ldr	w0, [x19]
  416e88:	tbnz	w0, #5, 416ec8 <wcrtomb@plt+0x122a8>
  416e8c:	mov	x0, x19
  416e90:	bl	4042a0 <fclose@plt>
  416e94:	cbnz	w0, 416ed8 <wcrtomb@plt+0x122b8>
  416e98:	ldr	x21, [sp, #32]
  416e9c:	ldp	x19, x20, [sp, #16]
  416ea0:	ldp	x29, x30, [sp], #80
  416ea4:	ret
  416ea8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  416eac:	ldr	x0, [x0, #768]
  416eb0:	bl	429eb4 <wcrtomb@plt+0x25294>
  416eb4:	b	416dd0 <wcrtomb@plt+0x121b0>
  416eb8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  416ebc:	ldr	x0, [x0, #768]
  416ec0:	bl	42a0fc <wcrtomb@plt+0x254dc>
  416ec4:	b	416de0 <wcrtomb@plt+0x121c0>
  416ec8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  416ecc:	ldr	x0, [x0, #768]
  416ed0:	bl	42a19c <wcrtomb@plt+0x2557c>
  416ed4:	b	416e8c <wcrtomb@plt+0x1226c>
  416ed8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  416edc:	ldr	x0, [x0, #768]
  416ee0:	bl	429a50 <wcrtomb@plt+0x24e30>
  416ee4:	ldr	x21, [sp, #32]
  416ee8:	b	416e9c <wcrtomb@plt+0x1227c>
  416eec:	stp	x29, x30, [sp, #-96]!
  416ef0:	mov	x29, sp
  416ef4:	stp	x19, x20, [sp, #16]
  416ef8:	mov	x20, x0
  416efc:	ldrb	w0, [x0, #376]
  416f00:	cbz	w0, 416f0c <wcrtomb@plt+0x122ec>
  416f04:	ldr	x0, [x20, #384]
  416f08:	cbz	x0, 416f1c <wcrtomb@plt+0x122fc>
  416f0c:	ldrb	w0, [x20, #376]
  416f10:	ldp	x19, x20, [sp, #16]
  416f14:	ldp	x29, x30, [sp], #96
  416f18:	ret
  416f1c:	stp	x21, x22, [sp, #32]
  416f20:	stp	x25, x26, [sp, #64]
  416f24:	ldr	x22, [x20, #136]
  416f28:	mov	x0, x22
  416f2c:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  416f30:	mov	x26, x0
  416f34:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  416f38:	ldr	x0, [x0, #4008]
  416f3c:	bl	405884 <wcrtomb@plt+0xc64>
  416f40:	mov	x0, x20
  416f44:	bl	4053e8 <wcrtomb@plt+0x7c8>
  416f48:	cbz	x22, 416ffc <wcrtomb@plt+0x123dc>
  416f4c:	stp	x23, x24, [sp, #48]
  416f50:	str	x27, [sp, #80]
  416f54:	mov	x23, x26
  416f58:	adrp	x27, 481000 <argp_program_version_hook@@Base+0x298>
  416f5c:	adrp	x25, 453000 <_obstack_memory_used@@Base+0x11e64>
  416f60:	add	x25, x25, #0x380
  416f64:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x3ee64>
  416f68:	add	x24, x24, #0xd40
  416f6c:	b	416fd0 <wcrtomb@plt+0x123b0>
  416f70:	mov	w2, #0x5                   	// #5
  416f74:	mov	x1, x25
  416f78:	mov	x0, #0x0                   	// #0
  416f7c:	bl	4049c0 <dcgettext@plt>
  416f80:	mov	x2, x0
  416f84:	mov	w1, #0x0                   	// #0
  416f88:	mov	w0, #0x1                   	// #1
  416f8c:	bl	404050 <error@plt>
  416f90:	mov	w0, #0x2                   	// #2
  416f94:	str	w0, [x24]
  416f98:	mov	x0, x21
  416f9c:	bl	405974 <wcrtomb@plt+0xd54>
  416fa0:	cmp	x0, x22
  416fa4:	csel	x19, x0, x22, ls  // ls = plast
  416fa8:	mov	x2, x19
  416fac:	mov	x1, x21
  416fb0:	mov	x0, x23
  416fb4:	bl	403f70 <memcpy@plt>
  416fb8:	add	x23, x23, x19
  416fbc:	sub	x0, x19, #0x1
  416fc0:	add	x0, x21, x0
  416fc4:	bl	405884 <wcrtomb@plt+0xc64>
  416fc8:	subs	x22, x22, x19
  416fcc:	b.eq	416ff4 <wcrtomb@plt+0x123d4>  // b.none
  416fd0:	mov	x0, x22
  416fd4:	bl	405430 <wcrtomb@plt+0x810>
  416fd8:	bl	406d94 <wcrtomb@plt+0x2174>
  416fdc:	mov	x21, x0
  416fe0:	cbnz	x0, 416f98 <wcrtomb@plt+0x12378>
  416fe4:	ldr	x0, [x27, #944]
  416fe8:	cbz	x0, 416f70 <wcrtomb@plt+0x12350>
  416fec:	blr	x0
  416ff0:	b	416f70 <wcrtomb@plt+0x12350>
  416ff4:	ldp	x23, x24, [sp, #48]
  416ff8:	ldr	x27, [sp, #80]
  416ffc:	bl	405408 <wcrtomb@plt+0x7e8>
  417000:	str	x26, [x20, #384]
  417004:	mov	w0, #0x1                   	// #1
  417008:	strb	w0, [x20, #377]
  41700c:	ldp	x21, x22, [sp, #32]
  417010:	ldp	x25, x26, [sp, #64]
  417014:	b	416f0c <wcrtomb@plt+0x122ec>
  417018:	stp	x29, x30, [sp, #-224]!
  41701c:	mov	x29, sp
  417020:	stp	x21, x22, [sp, #32]
  417024:	mov	x22, x0
  417028:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41702c:	add	x0, x0, #0x20
  417030:	bl	416eec <wcrtomb@plt+0x122cc>
  417034:	and	w0, w0, #0xff
  417038:	cbnz	w0, 41704c <wcrtomb@plt+0x1242c>
  41703c:	bl	419828 <wcrtomb@plt+0x14c08>
  417040:	ldp	x21, x22, [sp, #32]
  417044:	ldp	x29, x30, [sp], #224
  417048:	ret
  41704c:	stp	x23, x24, [sp, #48]
  417050:	mov	w1, #0x0                   	// #0
  417054:	mov	x0, x22
  417058:	bl	41be90 <wcrtomb@plt+0x17270>
  41705c:	mov	x23, x0
  417060:	cbz	x0, 417798 <wcrtomb@plt+0x12b78>
  417064:	stp	x19, x20, [sp, #16]
  417068:	stp	x25, x26, [sp, #64]
  41706c:	stp	x27, x28, [sp, #80]
  417070:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  417074:	ldr	x19, [x0, #416]
  417078:	ldrb	w1, [x19]
  41707c:	cbz	w1, 4174ec <wcrtomb@plt+0x128cc>
  417080:	mov	w21, #0x0                   	// #0
  417084:	mov	w20, #0x0                   	// #0
  417088:	mov	w25, #0x54                  	// #84
  41708c:	mov	w24, #0x0                   	// #0
  417090:	mov	w26, #0x1                   	// #1
  417094:	b	4177d0 <wcrtomb@plt+0x12bb0>
  417098:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41709c:	ldr	x0, [x0, #944]
  4170a0:	cbz	x0, 4170a8 <wcrtomb@plt+0x12488>
  4170a4:	blr	x0
  4170a8:	mov	w2, #0x5                   	// #5
  4170ac:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  4170b0:	add	x1, x1, #0x950
  4170b4:	mov	x0, #0x0                   	// #0
  4170b8:	bl	4049c0 <dcgettext@plt>
  4170bc:	mov	w4, w27
  4170c0:	mov	w3, w20
  4170c4:	mov	x2, x0
  4170c8:	mov	w1, #0x0                   	// #0
  4170cc:	mov	w0, #0x0                   	// #0
  4170d0:	bl	404050 <error@plt>
  4170d4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4170d8:	mov	w1, #0x2                   	// #2
  4170dc:	str	w1, [x0, #3392]
  4170e0:	ldp	x19, x20, [sp, #16]
  4170e4:	ldp	x23, x24, [sp, #48]
  4170e8:	ldp	x25, x26, [sp, #64]
  4170ec:	ldp	x27, x28, [sp, #80]
  4170f0:	b	41703c <wcrtomb@plt+0x1241c>
  4170f4:	cbnz	w21, 417100 <wcrtomb@plt+0x124e0>
  4170f8:	mov	w21, w26
  4170fc:	b	4177b8 <wcrtomb@plt+0x12b98>
  417100:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  417104:	ldr	x0, [x0, #944]
  417108:	cbz	x0, 417110 <wcrtomb@plt+0x124f0>
  41710c:	blr	x0
  417110:	mov	w2, #0x5                   	// #5
  417114:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  417118:	add	x1, x1, #0x980
  41711c:	mov	x0, #0x0                   	// #0
  417120:	bl	4049c0 <dcgettext@plt>
  417124:	mov	x2, x0
  417128:	mov	w1, #0x0                   	// #0
  41712c:	mov	w0, #0x0                   	// #0
  417130:	bl	404050 <error@plt>
  417134:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  417138:	mov	w1, #0x2                   	// #2
  41713c:	str	w1, [x0, #3392]
  417140:	ldp	x19, x20, [sp, #16]
  417144:	ldp	x23, x24, [sp, #48]
  417148:	ldp	x25, x26, [sp, #64]
  41714c:	ldp	x27, x28, [sp, #80]
  417150:	b	41703c <wcrtomb@plt+0x1241c>
  417154:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  417158:	ldr	x0, [x0, #944]
  41715c:	cbz	x0, 417164 <wcrtomb@plt+0x12544>
  417160:	blr	x0
  417164:	mov	w2, #0x5                   	// #5
  417168:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  41716c:	add	x1, x1, #0x9a8
  417170:	mov	x0, #0x0                   	// #0
  417174:	bl	4049c0 <dcgettext@plt>
  417178:	mov	x2, x0
  41717c:	mov	w1, #0x0                   	// #0
  417180:	mov	w0, #0x0                   	// #0
  417184:	bl	404050 <error@plt>
  417188:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41718c:	mov	w1, #0x2                   	// #2
  417190:	str	w1, [x0, #3392]
  417194:	ldp	x19, x20, [sp, #16]
  417198:	ldp	x23, x24, [sp, #48]
  41719c:	ldp	x25, x26, [sp, #64]
  4171a0:	ldp	x27, x28, [sp, #80]
  4171a4:	b	41703c <wcrtomb@plt+0x1241c>
  4171a8:	cmp	w20, #0x54
  4171ac:	b.ne	4171c8 <wcrtomb@plt+0x125a8>  // b.any
  4171b0:	ldrb	w0, [x19, #1]
  4171b4:	cmp	w0, #0x0
  4171b8:	ccmp	w21, #0x0, #0x0, eq  // eq = none
  4171bc:	b.eq	41721c <wcrtomb@plt+0x125fc>  // b.none
  4171c0:	mov	w20, w24
  4171c4:	b	4177b8 <wcrtomb@plt+0x12b98>
  4171c8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4171cc:	ldr	x0, [x0, #944]
  4171d0:	cbz	x0, 4171d8 <wcrtomb@plt+0x125b8>
  4171d4:	blr	x0
  4171d8:	mov	w2, #0x5                   	// #5
  4171dc:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  4171e0:	add	x1, x1, #0x9d0
  4171e4:	mov	x0, #0x0                   	// #0
  4171e8:	bl	4049c0 <dcgettext@plt>
  4171ec:	mov	x2, x0
  4171f0:	mov	w1, #0x0                   	// #0
  4171f4:	mov	w0, #0x0                   	// #0
  4171f8:	bl	404050 <error@plt>
  4171fc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  417200:	mov	w1, #0x2                   	// #2
  417204:	str	w1, [x0, #3392]
  417208:	ldp	x19, x20, [sp, #16]
  41720c:	ldp	x23, x24, [sp, #48]
  417210:	ldp	x25, x26, [sp, #64]
  417214:	ldp	x27, x28, [sp, #80]
  417218:	b	41703c <wcrtomb@plt+0x1241c>
  41721c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  417220:	ldr	x0, [x0, #944]
  417224:	cbz	x0, 41722c <wcrtomb@plt+0x1260c>
  417228:	blr	x0
  41722c:	mov	w2, #0x5                   	// #5
  417230:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  417234:	add	x1, x1, #0xa00
  417238:	mov	x0, #0x0                   	// #0
  41723c:	bl	4049c0 <dcgettext@plt>
  417240:	mov	x2, x0
  417244:	mov	w1, #0x0                   	// #0
  417248:	mov	w0, #0x0                   	// #0
  41724c:	bl	404050 <error@plt>
  417250:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  417254:	mov	w1, #0x2                   	// #2
  417258:	str	w1, [x0, #3392]
  41725c:	ldp	x19, x20, [sp, #16]
  417260:	ldp	x23, x24, [sp, #48]
  417264:	ldp	x25, x26, [sp, #64]
  417268:	ldp	x27, x28, [sp, #80]
  41726c:	b	41703c <wcrtomb@plt+0x1241c>
  417270:	mov	w20, w25
  417274:	b	4177b8 <wcrtomb@plt+0x12b98>
  417278:	cbnz	w20, 4172ec <wcrtomb@plt+0x126cc>
  41727c:	cbz	w21, 417810 <wcrtomb@plt+0x12bf0>
  417280:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  417284:	ldr	w0, [x0, #408]
  417288:	tbz	w0, #1, 417810 <wcrtomb@plt+0x12bf0>
  41728c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  417290:	ldr	x0, [x0, #944]
  417294:	cbz	x0, 41729c <wcrtomb@plt+0x1267c>
  417298:	blr	x0
  41729c:	mov	w2, #0x5                   	// #5
  4172a0:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  4172a4:	add	x1, x1, #0xa60
  4172a8:	mov	x0, #0x0                   	// #0
  4172ac:	bl	4049c0 <dcgettext@plt>
  4172b0:	mov	x2, x0
  4172b4:	mov	w1, #0x0                   	// #0
  4172b8:	mov	w0, #0x0                   	// #0
  4172bc:	bl	404050 <error@plt>
  4172c0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4172c4:	ldr	x19, [x0, #416]
  4172c8:	ldrb	w0, [x19]
  4172cc:	cbz	w0, 417534 <wcrtomb@plt+0x12914>
  4172d0:	mov	x21, #0x0                   	// #0
  4172d4:	adrp	x25, 481000 <argp_program_version_hook@@Base+0x298>
  4172d8:	add	x25, x25, #0x378
  4172dc:	mov	w26, #0x2f                  	// #47
  4172e0:	adrp	x24, 454000 <_obstack_memory_used@@Base+0x12e64>
  4172e4:	add	x24, x24, #0xa88
  4172e8:	b	417480 <wcrtomb@plt+0x12860>
  4172ec:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4172f0:	ldr	x0, [x0, #944]
  4172f4:	cbz	x0, 4172fc <wcrtomb@plt+0x126dc>
  4172f8:	blr	x0
  4172fc:	mov	w2, #0x5                   	// #5
  417300:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  417304:	add	x1, x1, #0xa28
  417308:	mov	x0, #0x0                   	// #0
  41730c:	bl	4049c0 <dcgettext@plt>
  417310:	mov	w3, w20
  417314:	mov	x2, x0
  417318:	mov	w1, #0x0                   	// #0
  41731c:	mov	w0, #0x0                   	// #0
  417320:	bl	404050 <error@plt>
  417324:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  417328:	mov	w1, #0x2                   	// #2
  41732c:	str	w1, [x0, #3392]
  417330:	ldp	x19, x20, [sp, #16]
  417334:	ldp	x23, x24, [sp, #48]
  417338:	ldp	x25, x26, [sp, #64]
  41733c:	ldp	x27, x28, [sp, #80]
  417340:	b	41703c <wcrtomb@plt+0x1241c>
  417344:	add	x27, x19, #0x1
  417348:	mov	x0, x27
  41734c:	bl	403ff0 <strlen@plt>
  417350:	mov	x20, x0
  417354:	add	x1, x0, #0xc
  417358:	mov	x0, x21
  41735c:	bl	43ff70 <argp_parse@@Base+0xc830>
  417360:	mov	x21, x0
  417364:	mov	x2, x20
  417368:	mov	x1, x27
  41736c:	bl	403f70 <memcpy@plt>
  417370:	strb	w26, [x21, x20]
  417374:	add	x20, x20, #0x1
  417378:	add	x0, x21, x20
  41737c:	ldr	x1, [x24]
  417380:	str	x1, [x21, x20]
  417384:	ldur	w1, [x24, #7]
  417388:	stur	w1, [x0, #7]
  41738c:	mov	x0, x21
  417390:	bl	404650 <mkdtemp@plt>
  417394:	cbnz	x0, 417468 <wcrtomb@plt+0x12848>
  417398:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41739c:	ldr	x0, [x0, #944]
  4173a0:	cbz	x0, 4173a8 <wcrtomb@plt+0x12788>
  4173a4:	blr	x0
  4173a8:	bl	404ad0 <__errno_location@plt>
  4173ac:	ldr	w20, [x0]
  4173b0:	mov	w2, #0x5                   	// #5
  4173b4:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  4173b8:	add	x1, x1, #0xa98
  4173bc:	mov	x0, #0x0                   	// #0
  4173c0:	bl	4049c0 <dcgettext@plt>
  4173c4:	mov	x19, x0
  4173c8:	mov	x0, x21
  4173cc:	bl	43f194 <argp_parse@@Base+0xba54>
  4173d0:	mov	x3, x0
  4173d4:	mov	x2, x19
  4173d8:	mov	w1, w20
  4173dc:	mov	w0, #0x0                   	// #0
  4173e0:	bl	404050 <error@plt>
  4173e4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4173e8:	mov	w1, #0x2                   	// #2
  4173ec:	str	w1, [x0, #3392]
  4173f0:	mov	x0, x21
  4173f4:	bl	4047c0 <free@plt>
  4173f8:	mov	x0, x23
  4173fc:	bl	4047c0 <free@plt>
  417400:	ldp	x19, x20, [sp, #16]
  417404:	ldp	x23, x24, [sp, #48]
  417408:	ldp	x25, x26, [sp, #64]
  41740c:	ldp	x27, x28, [sp, #80]
  417410:	b	41703c <wcrtomb@plt+0x1241c>
  417414:	ldrb	w2, [x25]
  417418:	mov	w1, #0x0                   	// #0
  41741c:	mov	x0, x28
  417420:	bl	42a2dc <wcrtomb@plt+0x256bc>
  417424:	mov	x28, x0
  417428:	b	4174b0 <wcrtomb@plt+0x12890>
  41742c:	ldrb	w2, [x25]
  417430:	mov	w1, #0x0                   	// #0
  417434:	mov	x0, x27
  417438:	bl	42a2dc <wcrtomb@plt+0x256bc>
  41743c:	mov	x27, x0
  417440:	b	4174b8 <wcrtomb@plt+0x12898>
  417444:	ldrb	w0, [x27]
  417448:	cmp	w0, #0x0
  41744c:	csel	x27, x27, x21, ne  // ne = any
  417450:	mov	x1, x27
  417454:	mov	x0, x28
  417458:	bl	41152c <wcrtomb@plt+0xc90c>
  41745c:	and	w0, w0, #0xff
  417460:	cbz	w0, 4174c8 <wcrtomb@plt+0x128a8>
  417464:	mov	x19, x20
  417468:	mov	x0, x19
  41746c:	bl	403ff0 <strlen@plt>
  417470:	add	x0, x0, #0x1
  417474:	add	x19, x19, x0
  417478:	ldrb	w0, [x19]
  41747c:	cbz	w0, 4174f0 <wcrtomb@plt+0x128d0>
  417480:	cmp	w0, #0x58
  417484:	b.eq	417344 <wcrtomb@plt+0x12724>  // b.none
  417488:	cmp	w0, #0x52
  41748c:	b.ne	417468 <wcrtomb@plt+0x12848>  // b.any
  417490:	add	x28, x19, #0x1
  417494:	mov	x0, x19
  417498:	bl	403ff0 <strlen@plt>
  41749c:	add	x20, x0, #0x1
  4174a0:	add	x20, x19, x20
  4174a4:	add	x27, x20, #0x1
  4174a8:	ldrb	w0, [x19, #1]
  4174ac:	cbnz	w0, 417414 <wcrtomb@plt+0x127f4>
  4174b0:	ldrb	w0, [x20, #1]
  4174b4:	cbnz	w0, 41742c <wcrtomb@plt+0x1280c>
  4174b8:	ldrb	w0, [x28]
  4174bc:	cbnz	w0, 417444 <wcrtomb@plt+0x12824>
  4174c0:	mov	x28, x21
  4174c4:	b	417450 <wcrtomb@plt+0x12830>
  4174c8:	mov	x0, x21
  4174cc:	bl	4047c0 <free@plt>
  4174d0:	mov	x0, x23
  4174d4:	bl	4047c0 <free@plt>
  4174d8:	ldp	x19, x20, [sp, #16]
  4174dc:	ldp	x23, x24, [sp, #48]
  4174e0:	ldp	x25, x26, [sp, #64]
  4174e4:	ldp	x27, x28, [sp, #80]
  4174e8:	b	41703c <wcrtomb@plt+0x1241c>
  4174ec:	mov	x21, #0x0                   	// #0
  4174f0:	mov	x0, x21
  4174f4:	bl	4047c0 <free@plt>
  4174f8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  4174fc:	add	x1, x1, #0x5e0
  417500:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  417504:	ldr	x0, [x0, #416]
  417508:	bl	414694 <wcrtomb@plt+0xfa74>
  41750c:	mov	x21, x0
  417510:	ldrb	w0, [x23]
  417514:	cbz	w0, 417768 <wcrtomb@plt+0x12b48>
  417518:	mov	x19, x23
  41751c:	mov	x20, #0x0                   	// #0
  417520:	adrp	x24, 481000 <argp_program_version_hook@@Base+0x298>
  417524:	add	x24, x24, #0x15
  417528:	adrp	x25, 481000 <argp_program_version_hook@@Base+0x298>
  41752c:	add	x25, x25, #0x210
  417530:	b	41758c <wcrtomb@plt+0x1296c>
  417534:	mov	x21, #0x0                   	// #0
  417538:	b	4174f0 <wcrtomb@plt+0x128d0>
  41753c:	blr	x0
  417540:	mov	w2, #0x5                   	// #5
  417544:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  417548:	add	x1, x1, #0xad0
  41754c:	mov	x0, #0x0                   	// #0
  417550:	bl	4049c0 <dcgettext@plt>
  417554:	mov	x26, x0
  417558:	mov	x0, x20
  41755c:	bl	43efc4 <argp_parse@@Base+0xb884>
  417560:	mov	x3, x0
  417564:	mov	x2, x26
  417568:	mov	w1, #0x0                   	// #0
  41756c:	mov	w0, #0x0                   	// #0
  417570:	bl	404050 <error@plt>
  417574:	mov	x0, x19
  417578:	bl	403ff0 <strlen@plt>
  41757c:	add	x0, x0, #0x1
  417580:	add	x19, x19, x0
  417584:	ldrb	w0, [x19]
  417588:	cbz	w0, 41776c <wcrtomb@plt+0x12b4c>
  41758c:	mov	x0, x20
  417590:	bl	4047c0 <free@plt>
  417594:	mov	x1, x19
  417598:	mov	x0, x22
  41759c:	bl	41e544 <wcrtomb@plt+0x19924>
  4175a0:	mov	x20, x0
  4175a4:	add	x1, sp, #0x60
  4175a8:	bl	41b26c <wcrtomb@plt+0x1664c>
  4175ac:	cbz	w0, 4175d8 <wcrtomb@plt+0x129b8>
  4175b0:	bl	404ad0 <__errno_location@plt>
  4175b4:	ldr	w0, [x0]
  4175b8:	cmp	w0, #0x2
  4175bc:	b.eq	417574 <wcrtomb@plt+0x12954>  // b.none
  4175c0:	mov	x0, x20
  4175c4:	bl	41b924 <wcrtomb@plt+0x16d04>
  4175c8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4175cc:	ldr	x0, [x0, #944]
  4175d0:	cbnz	x0, 41753c <wcrtomb@plt+0x1291c>
  4175d4:	b	417540 <wcrtomb@plt+0x12920>
  4175d8:	mov	x1, x19
  4175dc:	mov	x0, x21
  4175e0:	bl	4145c4 <wcrtomb@plt+0xf9a4>
  4175e4:	cbz	x0, 417620 <wcrtomb@plt+0x12a00>
  4175e8:	ldrb	w0, [x0]
  4175ec:	cmp	w0, #0x44
  4175f0:	b.eq	417610 <wcrtomb@plt+0x129f0>  // b.none
  4175f4:	cmp	w0, #0x59
  4175f8:	b.ne	417574 <wcrtomb@plt+0x12954>  // b.any
  4175fc:	ldr	w0, [sp, #112]
  417600:	and	w0, w0, #0xf000
  417604:	cmp	w0, #0x4, lsl #12
  417608:	b.ne	417574 <wcrtomb@plt+0x12954>  // b.any
  41760c:	b	417620 <wcrtomb@plt+0x12a00>
  417610:	ldr	w0, [sp, #112]
  417614:	and	w0, w0, #0xf000
  417618:	cmp	w0, #0x4, lsl #12
  41761c:	b.eq	417574 <wcrtomb@plt+0x12954>  // b.none
  417620:	ldrb	w0, [x24]
  417624:	cbz	w0, 41763c <wcrtomb@plt+0x12a1c>
  417628:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41762c:	ldr	x0, [x0, #760]
  417630:	ldr	x1, [sp, #96]
  417634:	cmp	x1, x0
  417638:	b.ne	4176bc <wcrtomb@plt+0x12a9c>  // b.any
  41763c:	ldrb	w0, [x25]
  417640:	cbnz	w0, 417704 <wcrtomb@plt+0x12ae4>
  417644:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  417648:	ldr	w0, [x0, #580]
  41764c:	cbnz	w0, 41771c <wcrtomb@plt+0x12afc>
  417650:	mov	w1, #0x1                   	// #1
  417654:	mov	x0, x20
  417658:	bl	41bf7c <wcrtomb@plt+0x1735c>
  41765c:	cbnz	w0, 417574 <wcrtomb@plt+0x12954>
  417660:	bl	404ad0 <__errno_location@plt>
  417664:	ldr	w27, [x0]
  417668:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41766c:	ldr	x0, [x0, #944]
  417670:	cbz	x0, 417678 <wcrtomb@plt+0x12a58>
  417674:	blr	x0
  417678:	mov	w2, #0x5                   	// #5
  41767c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  417680:	add	x1, x1, #0xb50
  417684:	mov	x0, #0x0                   	// #0
  417688:	bl	4049c0 <dcgettext@plt>
  41768c:	mov	x26, x0
  417690:	mov	x0, x20
  417694:	bl	43efc4 <argp_parse@@Base+0xb884>
  417698:	mov	x3, x0
  41769c:	mov	x2, x26
  4176a0:	mov	w1, w27
  4176a4:	mov	w0, #0x0                   	// #0
  4176a8:	bl	404050 <error@plt>
  4176ac:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4176b0:	mov	w1, #0x2                   	// #2
  4176b4:	str	w1, [x0, #3392]
  4176b8:	b	417574 <wcrtomb@plt+0x12954>
  4176bc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4176c0:	ldr	x0, [x0, #944]
  4176c4:	cbz	x0, 4176cc <wcrtomb@plt+0x12aac>
  4176c8:	blr	x0
  4176cc:	mov	w2, #0x5                   	// #5
  4176d0:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  4176d4:	add	x1, x1, #0xb00
  4176d8:	mov	x0, #0x0                   	// #0
  4176dc:	bl	4049c0 <dcgettext@plt>
  4176e0:	mov	x26, x0
  4176e4:	mov	x0, x20
  4176e8:	bl	43efc4 <argp_parse@@Base+0xb884>
  4176ec:	mov	x3, x0
  4176f0:	mov	x2, x26
  4176f4:	mov	w1, #0x0                   	// #0
  4176f8:	mov	w0, #0x0                   	// #0
  4176fc:	bl	404050 <error@plt>
  417700:	b	417574 <wcrtomb@plt+0x12954>
  417704:	mov	x1, x20
  417708:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x12e64>
  41770c:	add	x0, x0, #0x28
  417710:	bl	422bb4 <wcrtomb@plt+0x1df94>
  417714:	cbz	w0, 417574 <wcrtomb@plt+0x12954>
  417718:	b	417644 <wcrtomb@plt+0x12a24>
  41771c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  417720:	ldr	x27, [x0, #3864]
  417724:	mov	w2, #0x5                   	// #5
  417728:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  41772c:	add	x1, x1, #0xb38
  417730:	mov	x0, #0x0                   	// #0
  417734:	bl	4049c0 <dcgettext@plt>
  417738:	mov	x26, x0
  41773c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  417740:	ldr	x28, [x0, #3480]
  417744:	mov	x0, x20
  417748:	bl	43f194 <argp_parse@@Base+0xba54>
  41774c:	mov	x4, x0
  417750:	mov	x3, x28
  417754:	mov	x2, x26
  417758:	mov	w1, #0x1                   	// #1
  41775c:	mov	x0, x27
  417760:	bl	404710 <__fprintf_chk@plt>
  417764:	b	417650 <wcrtomb@plt+0x12a30>
  417768:	mov	x20, #0x0                   	// #0
  41776c:	mov	x0, x20
  417770:	bl	4047c0 <free@plt>
  417774:	mov	x0, x21
  417778:	bl	414398 <wcrtomb@plt+0xf778>
  41777c:	mov	x0, x23
  417780:	bl	4047c0 <free@plt>
  417784:	ldp	x19, x20, [sp, #16]
  417788:	ldp	x23, x24, [sp, #48]
  41778c:	ldp	x25, x26, [sp, #64]
  417790:	ldp	x27, x28, [sp, #80]
  417794:	b	417040 <wcrtomb@plt+0x12420>
  417798:	ldp	x23, x24, [sp, #48]
  41779c:	b	41703c <wcrtomb@plt+0x1241c>
  4177a0:	cmp	w1, #0x54
  4177a4:	b.eq	4171c8 <wcrtomb@plt+0x125a8>  // b.none
  4177a8:	cmp	w1, #0x58
  4177ac:	b.eq	4170f4 <wcrtomb@plt+0x124d4>  // b.none
  4177b0:	cmp	w1, #0x52
  4177b4:	b.eq	4177f8 <wcrtomb@plt+0x12bd8>  // b.none
  4177b8:	mov	x0, x19
  4177bc:	bl	403ff0 <strlen@plt>
  4177c0:	add	x0, x0, #0x1
  4177c4:	add	x19, x19, x0
  4177c8:	ldrb	w1, [x19]
  4177cc:	cbz	w1, 417278 <wcrtomb@plt+0x12658>
  4177d0:	cbz	w20, 4177a0 <wcrtomb@plt+0x12b80>
  4177d4:	mov	w27, w1
  4177d8:	cmp	w1, w20
  4177dc:	b.ne	417098 <wcrtomb@plt+0x12478>  // b.any
  4177e0:	cmp	w1, #0x54
  4177e4:	b.eq	4171a8 <wcrtomb@plt+0x12588>  // b.none
  4177e8:	cmp	w1, #0x58
  4177ec:	b.eq	4170f4 <wcrtomb@plt+0x124d4>  // b.none
  4177f0:	cmp	w1, #0x52
  4177f4:	b.ne	4177b8 <wcrtomb@plt+0x12b98>  // b.any
  4177f8:	ldrb	w0, [x19, #1]
  4177fc:	cbnz	w0, 417270 <wcrtomb@plt+0x12650>
  417800:	cbz	w21, 417154 <wcrtomb@plt+0x12534>
  417804:	mov	w20, w25
  417808:	mov	w21, w24
  41780c:	b	4177b8 <wcrtomb@plt+0x12b98>
  417810:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  417814:	ldr	x19, [x0, #416]
  417818:	ldrb	w0, [x19]
  41781c:	b	4172d0 <wcrtomb@plt+0x126b0>
  417820:	cbz	x1, 41793c <wcrtomb@plt+0x12d1c>
  417824:	stp	x29, x30, [sp, #-80]!
  417828:	mov	x29, sp
  41782c:	stp	x19, x20, [sp, #16]
  417830:	stp	x21, x22, [sp, #32]
  417834:	stp	x23, x24, [sp, #48]
  417838:	str	x25, [sp, #64]
  41783c:	add	x19, x0, #0x1
  417840:	mov	w23, #0x0                   	// #0
  417844:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x3ee64>
  417848:	add	x20, x0, x1
  41784c:	mov	w24, #0x0                   	// #0
  417850:	mov	w25, #0xa                   	// #10
  417854:	mov	x21, #0x4401                	// #17409
  417858:	movk	x21, #0x31, lsl #16
  41785c:	b	41787c <wcrtomb@plt+0x12c5c>
  417860:	ldr	x1, [x22, #3864]
  417864:	bl	404170 <fputc@plt>
  417868:	cbz	w23, 4178cc <wcrtomb@plt+0x12cac>
  41786c:	sub	x0, x20, x19
  417870:	mov	w23, #0x1                   	// #1
  417874:	add	x19, x19, #0x1
  417878:	cbz	x0, 417924 <wcrtomb@plt+0x12d04>
  41787c:	ldurb	w0, [x19, #-1]
  417880:	cbz	w0, 4178dc <wcrtomb@plt+0x12cbc>
  417884:	sub	w1, w0, #0x44
  417888:	and	w1, w1, #0xff
  41788c:	cmp	w1, #0x15
  417890:	b.hi	4178a4 <wcrtomb@plt+0x12c84>  // b.pmore
  417894:	mov	x2, #0x1                   	// #1
  417898:	lsl	x1, x2, x1
  41789c:	tst	x1, x21
  4178a0:	b.ne	417860 <wcrtomb@plt+0x12c40>  // b.any
  4178a4:	ldr	x2, [x22, #3864]
  4178a8:	ldr	x1, [x2, #40]
  4178ac:	ldr	x3, [x2, #48]
  4178b0:	cmp	x1, x3
  4178b4:	b.cs	417914 <wcrtomb@plt+0x12cf4>  // b.hs, b.nlast
  4178b8:	add	x3, x1, #0x1
  4178bc:	str	x3, [x2, #40]
  4178c0:	strb	w0, [x1]
  4178c4:	sub	x0, x20, x19
  4178c8:	b	417874 <wcrtomb@plt+0x12c54>
  4178cc:	ldr	x1, [x22, #3864]
  4178d0:	mov	w0, #0x20                  	// #32
  4178d4:	bl	404170 <fputc@plt>
  4178d8:	b	41786c <wcrtomb@plt+0x12c4c>
  4178dc:	ldr	x0, [x22, #3864]
  4178e0:	ldr	x1, [x0, #40]
  4178e4:	ldr	x2, [x0, #48]
  4178e8:	cmp	x1, x2
  4178ec:	b.cs	417908 <wcrtomb@plt+0x12ce8>  // b.hs, b.nlast
  4178f0:	add	x2, x1, #0x1
  4178f4:	str	x2, [x0, #40]
  4178f8:	strb	w25, [x1]
  4178fc:	sub	x0, x20, x19
  417900:	mov	w23, w24
  417904:	b	417874 <wcrtomb@plt+0x12c54>
  417908:	mov	w1, #0xa                   	// #10
  41790c:	bl	404690 <__overflow@plt>
  417910:	b	4178fc <wcrtomb@plt+0x12cdc>
  417914:	mov	w1, w0
  417918:	mov	x0, x2
  41791c:	bl	404690 <__overflow@plt>
  417920:	b	4178c4 <wcrtomb@plt+0x12ca4>
  417924:	ldp	x19, x20, [sp, #16]
  417928:	ldp	x21, x22, [sp, #32]
  41792c:	ldp	x23, x24, [sp, #48]
  417930:	ldr	x25, [sp, #64]
  417934:	ldp	x29, x30, [sp], #80
  417938:	ret
  41793c:	ret
  417940:	stp	x29, x30, [sp, #-32]!
  417944:	mov	x29, sp
  417948:	str	x19, [sp, #16]
  41794c:	mov	x19, x0
  417950:	ldr	w0, [x1]
  417954:	cmp	w0, #0x2
  417958:	b.eq	417988 <wcrtomb@plt+0x12d68>  // b.none
  41795c:	cmp	w0, #0x4
  417960:	b.eq	417978 <wcrtomb@plt+0x12d58>  // b.none
  417964:	cmp	w0, #0x1
  417968:	b.eq	4179a4 <wcrtomb@plt+0x12d84>  // b.none
  41796c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  417970:	ldr	x1, [x0, #816]
  417974:	cbnz	x1, 4179c0 <wcrtomb@plt+0x12da0>
  417978:	mov	x0, x19
  41797c:	ldr	x19, [sp, #16]
  417980:	ldp	x29, x30, [sp], #32
  417984:	ret
  417988:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41798c:	ldrb	w2, [x0, #888]
  417990:	mov	w1, #0x1                   	// #1
  417994:	mov	x0, x19
  417998:	bl	42a2dc <wcrtomb@plt+0x256bc>
  41799c:	mov	x19, x0
  4179a0:	b	41796c <wcrtomb@plt+0x12d4c>
  4179a4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4179a8:	ldrb	w2, [x0, #888]
  4179ac:	mov	w1, #0x0                   	// #0
  4179b0:	mov	x0, x19
  4179b4:	bl	42a2dc <wcrtomb@plt+0x256bc>
  4179b8:	mov	x19, x0
  4179bc:	b	41796c <wcrtomb@plt+0x12d4c>
  4179c0:	mov	x0, x19
  4179c4:	bl	41e5d8 <wcrtomb@plt+0x199b8>
  4179c8:	cmn	x0, #0x1
  4179cc:	b.eq	4179d8 <wcrtomb@plt+0x12db8>  // b.none
  4179d0:	add	x19, x19, x0
  4179d4:	b	417978 <wcrtomb@plt+0x12d58>
  4179d8:	mov	x0, x19
  4179dc:	bl	403ff0 <strlen@plt>
  4179e0:	b	4179d0 <wcrtomb@plt+0x12db0>
  4179e4:	sub	sp, sp, #0x490
  4179e8:	stp	x29, x30, [sp]
  4179ec:	mov	x29, sp
  4179f0:	stp	x19, x20, [sp, #16]
  4179f4:	stp	x21, x22, [sp, #32]
  4179f8:	stp	x23, x24, [sp, #48]
  4179fc:	stp	x25, x26, [sp, #64]
  417a00:	stp	x27, x28, [sp, #80]
  417a04:	mov	x23, x0
  417a08:	mov	x24, x2
  417a0c:	str	x4, [x29, #104]
  417a10:	and	w28, w6, #0xff
  417a14:	add	x20, x0, x1
  417a18:	ldrb	w0, [x0]
  417a1c:	cmp	w0, #0x0
  417a20:	cinc	x19, x23, eq  // eq = none
  417a24:	cmp	x20, x19
  417a28:	b.eq	417a60 <wcrtomb@plt+0x12e40>  // b.none
  417a2c:	mov	x26, x1
  417a30:	mov	x25, x3
  417a34:	and	w21, w5, #0xff
  417a38:	bl	404750 <__ctype_b_loc@plt>
  417a3c:	mov	x27, x0
  417a40:	ldr	x2, [x0]
  417a44:	ldrb	w0, [x19]
  417a48:	and	x1, x0, #0xff
  417a4c:	ldrh	w1, [x2, x1, lsl #1]
  417a50:	tbz	w1, #13, 417ae4 <wcrtomb@plt+0x12ec4>
  417a54:	add	x19, x19, #0x1
  417a58:	cmp	x20, x19
  417a5c:	b.ne	417a44 <wcrtomb@plt+0x12e24>  // b.any
  417a60:	cmp	x24, #0x0
  417a64:	cset	w1, ne  // ne = any
  417a68:	eor	w28, w28, #0x1
  417a6c:	mov	x0, #0xffffffffffffffff    	// #-1
  417a70:	tst	w1, w28
  417a74:	b.eq	417ac0 <wcrtomb@plt+0x12ea0>  // b.none
  417a78:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  417a7c:	ldr	x0, [x0, #944]
  417a80:	cbz	x0, 417a88 <wcrtomb@plt+0x12e68>
  417a84:	blr	x0
  417a88:	mov	w2, #0x5                   	// #5
  417a8c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  417a90:	add	x1, x1, #0xc20
  417a94:	mov	x0, #0x0                   	// #0
  417a98:	bl	4049c0 <dcgettext@plt>
  417a9c:	mov	x3, x24
  417aa0:	mov	x2, x0
  417aa4:	mov	w1, #0x0                   	// #0
  417aa8:	mov	w0, #0x0                   	// #0
  417aac:	bl	404050 <error@plt>
  417ab0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  417ab4:	mov	w1, #0x2                   	// #2
  417ab8:	str	w1, [x0, #3392]
  417abc:	mov	x0, #0xffffffffffffffff    	// #-1
  417ac0:	mov	sp, x29
  417ac4:	ldp	x19, x20, [sp, #16]
  417ac8:	ldp	x21, x22, [sp, #32]
  417acc:	ldp	x23, x24, [sp, #48]
  417ad0:	ldp	x25, x26, [sp, #64]
  417ad4:	ldp	x27, x28, [sp, #80]
  417ad8:	ldp	x29, x30, [sp]
  417adc:	add	sp, sp, #0x490
  417ae0:	ret
  417ae4:	neg	x25, x25
  417ae8:	sub	w1, w0, #0x30
  417aec:	cmp	w1, #0x7
  417af0:	b.hi	417c24 <wcrtomb@plt+0x13004>  // b.pmore
  417af4:	add	x4, x19, #0x1
  417af8:	mov	w5, w1
  417afc:	sxtw	x21, w1
  417b00:	cmp	x20, x4
  417b04:	b.eq	41802c <wcrtomb@plt+0x1340c>  // b.none
  417b08:	mov	x22, x4
  417b0c:	mov	w2, #0x0                   	// #0
  417b10:	ldrb	w1, [x22]
  417b14:	sub	w3, w1, #0x30
  417b18:	cmp	w3, #0x7
  417b1c:	b.hi	417b44 <wcrtomb@plt+0x12f24>  // b.pmore
  417b20:	tst	x21, #0xe000000000000000
  417b24:	cset	w3, ne  // ne = any
  417b28:	orr	w2, w2, w3
  417b2c:	add	x22, x22, #0x1
  417b30:	sub	w1, w1, #0x30
  417b34:	sxtw	x1, w1
  417b38:	add	x21, x1, x21, lsl #3
  417b3c:	cmp	x20, x22
  417b40:	b.ne	417b10 <wcrtomb@plt+0x12ef0>  // b.any
  417b44:	cmp	x24, #0x0
  417b48:	cset	w3, ne  // ne = any
  417b4c:	cmp	w2, #0x0
  417b50:	ldr	x1, [x29, #104]
  417b54:	ccmp	x1, x21, #0x0, eq  // eq = none
  417b58:	cset	w1, cc  // cc = lo, ul, last
  417b5c:	cmp	w0, #0x31
  417b60:	ccmp	w3, #0x0, #0x4, hi  // hi = pmore
  417b64:	csel	w0, w1, wzr, ne  // ne = any
  417b68:	cbnz	w0, 41805c <wcrtomb@plt+0x1343c>
  417b6c:	cbnz	w2, 417bc0 <wcrtomb@plt+0x12fa0>
  417b70:	str	wzr, [x29, #100]
  417b74:	cmp	x20, x22
  417b78:	b.eq	417f0c <wcrtomb@plt+0x132ec>  // b.none
  417b7c:	ldrb	w0, [x22]
  417b80:	cbz	w0, 417b94 <wcrtomb@plt+0x12f74>
  417b84:	and	x0, x0, #0xff
  417b88:	ldr	x1, [x27]
  417b8c:	ldrh	w0, [x1, x0, lsl #1]
  417b90:	tbz	w0, #13, 417e44 <wcrtomb@plt+0x13224>
  417b94:	ldr	w0, [x29, #100]
  417b98:	cbz	w0, 417f0c <wcrtomb@plt+0x132ec>
  417b9c:	cmp	x25, x21
  417ba0:	b.cs	417f00 <wcrtomb@plt+0x132e0>  // b.hs, b.nlast
  417ba4:	cmp	x24, #0x0
  417ba8:	cset	w0, ne  // ne = any
  417bac:	eor	w28, w28, #0x1
  417bb0:	tst	w0, w28
  417bb4:	b.ne	417f34 <wcrtomb@plt+0x13314>  // b.any
  417bb8:	mov	x0, #0xffffffffffffffff    	// #-1
  417bbc:	b	417ac0 <wcrtomb@plt+0x12ea0>
  417bc0:	eor	w28, w28, #0x1
  417bc4:	mov	x0, #0xffffffffffffffff    	// #-1
  417bc8:	tst	w3, w28
  417bcc:	b.eq	417ac0 <wcrtomb@plt+0x12ea0>  // b.none
  417bd0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  417bd4:	ldr	x0, [x0, #944]
  417bd8:	cbz	x0, 417be0 <wcrtomb@plt+0x12fc0>
  417bdc:	blr	x0
  417be0:	mov	w2, #0x5                   	// #5
  417be4:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  417be8:	add	x1, x1, #0xca0
  417bec:	mov	x0, #0x0                   	// #0
  417bf0:	bl	4049c0 <dcgettext@plt>
  417bf4:	mov	x5, x24
  417bf8:	mov	x4, x19
  417bfc:	sub	w3, w22, w19
  417c00:	mov	x2, x0
  417c04:	mov	w1, #0x0                   	// #0
  417c08:	mov	w0, #0x0                   	// #0
  417c0c:	bl	404050 <error@plt>
  417c10:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  417c14:	mov	w1, #0x2                   	// #2
  417c18:	str	w1, [x0, #3392]
  417c1c:	mov	x0, #0xffffffffffffffff    	// #-1
  417c20:	b	417ac0 <wcrtomb@plt+0x12ea0>
  417c24:	cbnz	w21, 417ff8 <wcrtomb@plt+0x133d8>
  417c28:	sub	w1, w0, #0x2b
  417c2c:	and	w1, w1, #0xfffffffd
  417c30:	tst	w1, #0xff
  417c34:	b.ne	417d88 <wcrtomb@plt+0x13168>  // b.any
  417c38:	cbnz	w28, 417c88 <wcrtomb@plt+0x13068>
  417c3c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  417c40:	ldrb	w0, [x0, #2192]
  417c44:	cbnz	w0, 417c88 <wcrtomb@plt+0x13068>
  417c48:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  417c4c:	mov	w1, #0x1                   	// #1
  417c50:	strb	w1, [x0, #2192]
  417c54:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  417c58:	ldr	x0, [x0, #944]
  417c5c:	cbz	x0, 417c64 <wcrtomb@plt+0x13044>
  417c60:	blr	x0
  417c64:	mov	w2, #0x5                   	// #5
  417c68:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  417c6c:	add	x1, x1, #0xcd0
  417c70:	mov	x0, #0x0                   	// #0
  417c74:	bl	4049c0 <dcgettext@plt>
  417c78:	mov	x2, x0
  417c7c:	mov	w1, #0x0                   	// #0
  417c80:	mov	w0, #0x0                   	// #0
  417c84:	bl	404050 <error@plt>
  417c88:	mov	x22, x19
  417c8c:	ldrb	w0, [x22], #1
  417c90:	cmp	w0, #0x2d
  417c94:	cset	w0, eq  // eq = none
  417c98:	str	w0, [x29, #100]
  417c9c:	mov	x21, #0x0                   	// #0
  417ca0:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  417ca4:	add	x1, x1, #0x890
  417ca8:	add	x1, x1, #0x8
  417cac:	cmp	x20, x22
  417cb0:	b.eq	417b94 <wcrtomb@plt+0x12f74>  // b.none
  417cb4:	ldrb	w0, [x22]
  417cb8:	ldrb	w0, [x1, w0, sxtw]
  417cbc:	cmp	w0, #0x3f
  417cc0:	b.hi	417d7c <wcrtomb@plt+0x1315c>  // b.pmore
  417cc4:	tst	x21, #0xfc00000000000000
  417cc8:	b.ne	417ce4 <wcrtomb@plt+0x130c4>  // b.any
  417ccc:	and	x0, x0, #0xff
  417cd0:	orr	x21, x0, x21, lsl #6
  417cd4:	add	x22, x22, #0x1
  417cd8:	cmp	x20, x22
  417cdc:	b.ne	417cb4 <wcrtomb@plt+0x13094>  // b.any
  417ce0:	b	417b94 <wcrtomb@plt+0x12f74>
  417ce4:	add	x0, x26, #0x10
  417ce8:	and	x0, x0, #0xfffffffffffffff0
  417cec:	sub	sp, sp, x0
  417cf0:	mov	x19, sp
  417cf4:	mov	x2, x26
  417cf8:	mov	x1, x23
  417cfc:	mov	x0, x19
  417d00:	bl	403f70 <memcpy@plt>
  417d04:	strb	wzr, [x19, x26]
  417d08:	eor	w28, w28, #0x1
  417d0c:	cmp	x24, #0x0
  417d10:	cset	w1, ne  // ne = any
  417d14:	mov	x0, #0xffffffffffffffff    	// #-1
  417d18:	tst	w1, w28
  417d1c:	b.eq	417ac0 <wcrtomb@plt+0x12ea0>  // b.none
  417d20:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  417d24:	ldr	x0, [x0, #944]
  417d28:	cbz	x0, 417d30 <wcrtomb@plt+0x13110>
  417d2c:	blr	x0
  417d30:	mov	w2, #0x5                   	// #5
  417d34:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  417d38:	add	x1, x1, #0xd00
  417d3c:	mov	x0, #0x0                   	// #0
  417d40:	bl	4049c0 <dcgettext@plt>
  417d44:	mov	x20, x0
  417d48:	mov	x0, x19
  417d4c:	bl	43f194 <argp_parse@@Base+0xba54>
  417d50:	mov	x4, x24
  417d54:	mov	x3, x0
  417d58:	mov	x2, x20
  417d5c:	mov	w1, #0x0                   	// #0
  417d60:	mov	w0, #0x0                   	// #0
  417d64:	bl	404050 <error@plt>
  417d68:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  417d6c:	mov	w1, #0x2                   	// #2
  417d70:	str	w1, [x0, #3392]
  417d74:	mov	x0, #0xffffffffffffffff    	// #-1
  417d78:	b	417ac0 <wcrtomb@plt+0x12ea0>
  417d7c:	cmp	x20, x22
  417d80:	b.ne	417b7c <wcrtomb@plt+0x12f5c>  // b.any
  417d84:	b	417b94 <wcrtomb@plt+0x12f74>
  417d88:	cmp	w0, #0x80
  417d8c:	mov	w1, #0xff                  	// #255
  417d90:	ccmp	w0, w1, #0x4, ne  // ne = any
  417d94:	b.ne	418004 <wcrtomb@plt+0x133e4>  // b.any
  417d98:	and	w2, w0, #0x40
  417d9c:	neg	w1, w2
  417da0:	lsl	x1, x1, #50
  417da4:	add	x19, x19, #0x1
  417da8:	and	w21, w0, #0x3f
  417dac:	sub	w21, w21, w2
  417db0:	sxtw	x21, w21
  417db4:	ldrb	w0, [x19], #1
  417db8:	add	x21, x0, x21, lsl #8
  417dbc:	cmp	x20, x19
  417dc0:	b.eq	417e38 <wcrtomb@plt+0x13218>  // b.none
  417dc4:	and	x0, x21, #0xffffffffffffff
  417dc8:	orr	x0, x0, x1
  417dcc:	cmp	x0, x21
  417dd0:	b.eq	417db4 <wcrtomb@plt+0x13194>  // b.none
  417dd4:	cmp	x24, #0x0
  417dd8:	cset	w1, ne  // ne = any
  417ddc:	eor	w28, w28, #0x1
  417de0:	mov	x0, #0xffffffffffffffff    	// #-1
  417de4:	tst	w1, w28
  417de8:	b.eq	417ac0 <wcrtomb@plt+0x12ea0>  // b.none
  417dec:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  417df0:	ldr	x0, [x0, #944]
  417df4:	cbz	x0, 417dfc <wcrtomb@plt+0x131dc>
  417df8:	blr	x0
  417dfc:	mov	w2, #0x5                   	// #5
  417e00:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  417e04:	add	x1, x1, #0xd38
  417e08:	mov	x0, #0x0                   	// #0
  417e0c:	bl	4049c0 <dcgettext@plt>
  417e10:	mov	x3, x24
  417e14:	mov	x2, x0
  417e18:	mov	w1, #0x0                   	// #0
  417e1c:	mov	w0, #0x0                   	// #0
  417e20:	bl	404050 <error@plt>
  417e24:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  417e28:	mov	w1, #0x2                   	// #2
  417e2c:	str	w1, [x0, #3392]
  417e30:	mov	x0, #0xffffffffffffffff    	// #-1
  417e34:	b	417ac0 <wcrtomb@plt+0x12ea0>
  417e38:	cbz	w2, 417f0c <wcrtomb@plt+0x132ec>
  417e3c:	neg	x21, x21
  417e40:	b	417b9c <wcrtomb@plt+0x12f7c>
  417e44:	mov	x0, #0xffffffffffffffff    	// #-1
  417e48:	cbz	x24, 417ac0 <wcrtomb@plt+0x12ea0>
  417e4c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  417e50:	ldr	x0, [x0, #2456]
  417e54:	cbz	x0, 417ee8 <wcrtomb@plt+0x132c8>
  417e58:	cmp	x23, x20
  417e5c:	b.eq	417e74 <wcrtomb@plt+0x13254>  // b.none
  417e60:	ldurb	w0, [x20, #-1]
  417e64:	cbnz	w0, 417e74 <wcrtomb@plt+0x13254>
  417e68:	sub	x20, x20, #0x1
  417e6c:	cmp	x23, x20
  417e70:	b.ne	417e60 <wcrtomb@plt+0x13240>  // b.any
  417e74:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  417e78:	ldr	x4, [x0, #2456]
  417e7c:	sub	x3, x20, x23
  417e80:	mov	x2, x23
  417e84:	mov	x1, #0x3e8                 	// #1000
  417e88:	add	x0, x29, #0xa8
  417e8c:	bl	43eb74 <argp_parse@@Base+0xb434>
  417e90:	cbnz	w28, 417ee0 <wcrtomb@plt+0x132c0>
  417e94:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  417e98:	ldr	x0, [x0, #944]
  417e9c:	cbz	x0, 417ea4 <wcrtomb@plt+0x13284>
  417ea0:	blr	x0
  417ea4:	mov	w2, #0x5                   	// #5
  417ea8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  417eac:	add	x1, x1, #0xd68
  417eb0:	mov	x0, #0x0                   	// #0
  417eb4:	bl	4049c0 <dcgettext@plt>
  417eb8:	mov	x5, x24
  417ebc:	add	x4, x29, #0xa8
  417ec0:	mov	w3, #0x3e8                 	// #1000
  417ec4:	mov	x2, x0
  417ec8:	mov	w1, #0x0                   	// #0
  417ecc:	mov	w0, #0x0                   	// #0
  417ed0:	bl	404050 <error@plt>
  417ed4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  417ed8:	mov	w1, #0x2                   	// #2
  417edc:	str	w1, [x0, #3392]
  417ee0:	mov	x0, #0xffffffffffffffff    	// #-1
  417ee4:	b	417ac0 <wcrtomb@plt+0x12ea0>
  417ee8:	bl	43ea44 <argp_parse@@Base+0xb304>
  417eec:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  417ef0:	str	x0, [x1, #2456]
  417ef4:	mov	w1, #0x8                   	// #8
  417ef8:	bl	43eab0 <argp_parse@@Base+0xb370>
  417efc:	b	417e58 <wcrtomb@plt+0x13238>
  417f00:	neg	x21, x21
  417f04:	mov	x0, x21
  417f08:	b	417ac0 <wcrtomb@plt+0x12ea0>
  417f0c:	ldr	x0, [x29, #104]
  417f10:	cmp	x21, x0
  417f14:	b.ls	417f04 <wcrtomb@plt+0x132e4>  // b.plast
  417f18:	cmp	x24, #0x0
  417f1c:	cset	w0, ne  // ne = any
  417f20:	eor	w28, w28, #0x1
  417f24:	tst	w0, w28
  417f28:	b.ne	417fd4 <wcrtomb@plt+0x133b4>  // b.any
  417f2c:	mov	x0, #0xffffffffffffffff    	// #-1
  417f30:	b	417ac0 <wcrtomb@plt+0x12ea0>
  417f34:	add	x1, x29, #0x91
  417f38:	mov	x0, x25
  417f3c:	bl	438ce8 <argp_parse@@Base+0x55a8>
  417f40:	mov	x19, x0
  417f44:	add	x1, x29, #0xa9
  417f48:	mov	x0, x21
  417f4c:	bl	438ce8 <argp_parse@@Base+0x55a8>
  417f50:	sub	x21, x0, #0x1
  417f54:	mov	w1, #0x2d                  	// #45
  417f58:	sturb	w1, [x0, #-1]
  417f5c:	cbz	x25, 417f6c <wcrtomb@plt+0x1334c>
  417f60:	mov	w0, #0x2d                  	// #45
  417f64:	sturb	w0, [x19, #-1]
  417f68:	sub	x19, x19, #0x1
  417f6c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  417f70:	ldr	x0, [x0, #944]
  417f74:	cbz	x0, 417f7c <wcrtomb@plt+0x1335c>
  417f78:	blr	x0
  417f7c:	mov	w2, #0x5                   	// #5
  417f80:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  417f84:	add	x1, x1, #0xda0
  417f88:	mov	x0, #0x0                   	// #0
  417f8c:	bl	4049c0 <dcgettext@plt>
  417f90:	mov	x20, x0
  417f94:	add	x1, x29, #0x78
  417f98:	ldr	x0, [x29, #104]
  417f9c:	bl	438ce8 <argp_parse@@Base+0x55a8>
  417fa0:	mov	x6, x0
  417fa4:	mov	x5, x19
  417fa8:	mov	x4, x24
  417fac:	mov	x3, x21
  417fb0:	mov	x2, x20
  417fb4:	mov	w1, #0x0                   	// #0
  417fb8:	mov	w0, #0x0                   	// #0
  417fbc:	bl	404050 <error@plt>
  417fc0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  417fc4:	mov	w1, #0x2                   	// #2
  417fc8:	str	w1, [x0, #3392]
  417fcc:	mov	x0, #0xffffffffffffffff    	// #-1
  417fd0:	b	417ac0 <wcrtomb@plt+0x12ea0>
  417fd4:	add	x1, x29, #0x91
  417fd8:	mov	x0, x25
  417fdc:	bl	438ce8 <argp_parse@@Base+0x55a8>
  417fe0:	mov	x19, x0
  417fe4:	add	x1, x29, #0xa9
  417fe8:	mov	x0, x21
  417fec:	bl	438ce8 <argp_parse@@Base+0x55a8>
  417ff0:	mov	x21, x0
  417ff4:	b	417f5c <wcrtomb@plt+0x1333c>
  417ff8:	mov	x22, x19
  417ffc:	mov	x21, #0x0                   	// #0
  418000:	b	417b70 <wcrtomb@plt+0x12f50>
  418004:	mov	x22, x19
  418008:	mov	x21, #0x0                   	// #0
  41800c:	b	417b70 <wcrtomb@plt+0x12f50>
  418010:	orr	w5, w5, #0x4
  418014:	mov	w21, #0x7                   	// #7
  418018:	sub	w21, w21, w5
  41801c:	sxtw	x21, w21
  418020:	mov	x22, x4
  418024:	mov	w2, #0x0                   	// #0
  418028:	b	4180b0 <wcrtomb@plt+0x13490>
  41802c:	cmp	x24, #0x0
  418030:	cset	w3, ne  // ne = any
  418034:	cmp	w0, #0x31
  418038:	ccmp	w3, #0x0, #0x4, hi  // hi = pmore
  41803c:	cset	w2, ne  // ne = any
  418040:	ldr	x0, [x29, #104]
  418044:	cmp	x0, x21
  418048:	cset	w0, cc  // cc = lo, ul, last
  41804c:	ands	w2, w2, w0
  418050:	b.ne	418010 <wcrtomb@plt+0x133f0>  // b.any
  418054:	mov	x22, x4
  418058:	b	417b6c <wcrtomb@plt+0x12f4c>
  41805c:	orr	w5, w5, #0x4
  418060:	mov	w21, #0x7                   	// #7
  418064:	sub	w21, w21, w5
  418068:	sxtw	x21, w21
  41806c:	mov	x22, x4
  418070:	mov	w2, #0x0                   	// #0
  418074:	mov	w4, #0x7                   	// #7
  418078:	ldrb	w0, [x22]
  41807c:	sub	w1, w0, #0x30
  418080:	cmp	w1, #0x7
  418084:	b.hi	4180b0 <wcrtomb@plt+0x13490>  // b.pmore
  418088:	tst	x21, #0xe000000000000000
  41808c:	cset	w1, ne  // ne = any
  418090:	orr	w2, w2, w1
  418094:	sub	w0, w0, #0x30
  418098:	sub	w0, w4, w0
  41809c:	sxtw	x0, w0
  4180a0:	add	x21, x0, x21, lsl #3
  4180a4:	add	x22, x22, #0x1
  4180a8:	cmp	x20, x22
  4180ac:	b.ne	418078 <wcrtomb@plt+0x13458>  // b.any
  4180b0:	adds	x21, x21, #0x1
  4180b4:	cset	w0, eq  // eq = none
  4180b8:	orr	w2, w2, w0
  4180bc:	eor	w0, w2, #0x1
  4180c0:	cmp	x25, x21
  4180c4:	cset	w1, cs  // cs = hs, nlast
  4180c8:	ands	w0, w1, w0
  4180cc:	str	w0, [x29, #100]
  4180d0:	b.eq	417b6c <wcrtomb@plt+0x12f4c>  // b.none
  4180d4:	cbnz	w28, 418118 <wcrtomb@plt+0x134f8>
  4180d8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4180dc:	ldr	x0, [x0, #944]
  4180e0:	cbz	x0, 4180e8 <wcrtomb@plt+0x134c8>
  4180e4:	blr	x0
  4180e8:	mov	w2, #0x5                   	// #5
  4180ec:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  4180f0:	add	x1, x1, #0xc58
  4180f4:	mov	x0, #0x0                   	// #0
  4180f8:	bl	4049c0 <dcgettext@plt>
  4180fc:	mov	x5, x24
  418100:	mov	x4, x19
  418104:	sub	w3, w22, w19
  418108:	mov	x2, x0
  41810c:	mov	w1, #0x0                   	// #0
  418110:	mov	w0, #0x0                   	// #0
  418114:	bl	404050 <error@plt>
  418118:	cmp	x20, x22
  41811c:	b.ne	417b7c <wcrtomb@plt+0x12f5c>  // b.any
  418120:	b	417b9c <wcrtomb@plt+0x12f7c>
  418124:	stp	x29, x30, [sp, #-16]!
  418128:	mov	x29, sp
  41812c:	mov	w6, #0x0                   	// #0
  418130:	mov	w5, #0x0                   	// #0
  418134:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  418138:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  41813c:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x11e64>
  418140:	add	x2, x2, #0x738
  418144:	bl	4179e4 <wcrtomb@plt+0x12dc4>
  418148:	ldp	x29, x30, [sp], #16
  41814c:	ret
  418150:	stp	x29, x30, [sp, #-16]!
  418154:	mov	x29, sp
  418158:	mov	x2, #0x100                 	// #256
  41815c:	mov	w1, #0x40                  	// #64
  418160:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  418164:	add	x0, x0, #0x890
  418168:	add	x0, x0, #0x8
  41816c:	bl	404420 <memset@plt>
  418170:	mov	x0, #0x0                   	// #0
  418174:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x3ee64>
  418178:	add	x2, x2, #0x890
  41817c:	add	x2, x2, #0x8
  418180:	adrp	x3, 454000 <_obstack_memory_used@@Base+0x12e64>
  418184:	add	x3, x3, #0xf08
  418188:	ldrb	w1, [x0, x3]
  41818c:	strb	w0, [x2, w1, sxtw]
  418190:	add	x0, x0, #0x1
  418194:	cmp	x0, #0x40
  418198:	b.ne	418188 <wcrtomb@plt+0x13568>  // b.any
  41819c:	ldp	x29, x30, [sp], #16
  4181a0:	ret
  4181a4:	cmp	w0, #0x56
  4181a8:	b.eq	418304 <wcrtomb@plt+0x136e4>  // b.none
  4181ac:	stp	x29, x30, [sp, #-64]!
  4181b0:	mov	x29, sp
  4181b4:	stp	x19, x20, [sp, #16]
  4181b8:	mov	w19, w0
  4181bc:	mov	x20, x1
  4181c0:	mov	w1, #0x1                   	// #1
  4181c4:	str	w1, [sp, #60]
  4181c8:	add	x3, sp, #0x3c
  4181cc:	adrp	x2, 417000 <wcrtomb@plt+0x123e0>
  4181d0:	add	x2, x2, #0x940
  4181d4:	add	x0, x20, #0x8
  4181d8:	bl	426ba0 <wcrtomb@plt+0x21f80>
  4181dc:	cmp	w19, #0x31
  4181e0:	b.eq	418220 <wcrtomb@plt+0x13600>  // b.none
  4181e4:	cmp	w19, #0x32
  4181e8:	b.ne	418208 <wcrtomb@plt+0x135e8>  // b.any
  4181ec:	mov	w1, #0x4                   	// #4
  4181f0:	str	w1, [sp, #60]
  4181f4:	add	x3, sp, #0x3c
  4181f8:	adrp	x2, 417000 <wcrtomb@plt+0x123e0>
  4181fc:	add	x2, x2, #0x940
  418200:	add	x0, x20, #0x18
  418204:	bl	426ba0 <wcrtomb@plt+0x21f80>
  418208:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41820c:	ldrb	w0, [x0, #779]
  418210:	cbnz	w0, 418240 <wcrtomb@plt+0x13620>
  418214:	ldp	x19, x20, [sp, #16]
  418218:	ldp	x29, x30, [sp], #64
  41821c:	ret
  418220:	mov	w1, #0x2                   	// #2
  418224:	str	w1, [sp, #60]
  418228:	add	x3, sp, #0x3c
  41822c:	adrp	x2, 417000 <wcrtomb@plt+0x123e0>
  418230:	add	x2, x2, #0x940
  418234:	add	x0, x20, #0x18
  418238:	bl	426ba0 <wcrtomb@plt+0x21f80>
  41823c:	b	418208 <wcrtomb@plt+0x135e8>
  418240:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  418244:	ldr	x20, [x0, #40]
  418248:	ldrb	w1, [x20]
  41824c:	sub	w0, w1, #0x2e
  418250:	and	w0, w0, #0xff
  418254:	cmp	w0, #0x1
  418258:	b.hi	4182dc <wcrtomb@plt+0x136bc>  // b.pmore
  41825c:	mov	x19, x20
  418260:	ldrb	w1, [x19, #1]!
  418264:	sub	w0, w1, #0x2e
  418268:	and	w0, w0, #0xff
  41826c:	cmp	w0, #0x1
  418270:	b.ls	418260 <wcrtomb@plt+0x13640>  // b.plast
  418274:	cbz	w1, 4182e4 <wcrtomb@plt+0x136c4>
  418278:	stp	x21, x22, [sp, #32]
  41827c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  418280:	ldr	x22, [x0, #504]
  418284:	mov	x0, x22
  418288:	bl	403ff0 <strlen@plt>
  41828c:	sxtw	x21, w0
  418290:	mov	x2, x21
  418294:	mov	x1, x22
  418298:	mov	x0, x19
  41829c:	bl	4043c0 <strncmp@plt>
  4182a0:	cbnz	w0, 4182b4 <wcrtomb@plt+0x13694>
  4182a4:	ldrb	w0, [x19, x21]
  4182a8:	cmp	w0, #0x2f
  4182ac:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  4182b0:	b.eq	4182fc <wcrtomb@plt+0x136dc>  // b.none
  4182b4:	mov	x1, x20
  4182b8:	mov	x0, x22
  4182bc:	bl	41e544 <wcrtomb@plt+0x19924>
  4182c0:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  4182c4:	str	x0, [x1, #40]
  4182c8:	bl	41a8a4 <wcrtomb@plt+0x15c84>
  4182cc:	ldp	x21, x22, [sp, #32]
  4182d0:	mov	x0, x20
  4182d4:	bl	4047c0 <free@plt>
  4182d8:	b	418214 <wcrtomb@plt+0x135f4>
  4182dc:	mov	x19, x20
  4182e0:	b	418274 <wcrtomb@plt+0x13654>
  4182e4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4182e8:	ldr	x0, [x0, #504]
  4182ec:	bl	440154 <argp_parse@@Base+0xca14>
  4182f0:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  4182f4:	str	x0, [x1, #40]
  4182f8:	b	4182d0 <wcrtomb@plt+0x136b0>
  4182fc:	ldp	x21, x22, [sp, #32]
  418300:	b	418214 <wcrtomb@plt+0x135f4>
  418304:	ret
  418308:	mov	x8, x0
  41830c:	and	w6, w1, #0xff
  418310:	mov	x2, x0
  418314:	add	x7, x0, #0x200
  418318:	mov	w5, #0x0                   	// #0
  41831c:	mov	w4, #0x0                   	// #0
  418320:	ldrb	w3, [x2], #1
  418324:	add	w4, w4, w3
  418328:	add	w5, w5, w3, sxtb
  41832c:	cmp	x2, x7
  418330:	b.ne	418320 <wcrtomb@plt+0x13700>  // b.any
  418334:	mov	w0, #0x3                   	// #3
  418338:	cbz	w4, 4183b0 <wcrtomb@plt+0x13790>
  41833c:	stp	x29, x30, [sp, #-32]!
  418340:	mov	x29, sp
  418344:	stp	x19, x20, [sp, #16]
  418348:	add	x2, x8, #0x9b
  41834c:	add	x0, x8, #0x93
  418350:	ldrb	w3, [x2], #-1
  418354:	sub	w4, w4, w3
  418358:	sub	w5, w5, w3, sxtb
  41835c:	cmp	x2, x0
  418360:	b.ne	418350 <wcrtomb@plt+0x13730>  // b.any
  418364:	add	w19, w4, #0x100
  418368:	add	w20, w5, #0x100
  41836c:	mov	w5, #0x1                   	// #1
  418370:	mov	x4, #0x7fffffff            	// #2147483647
  418374:	mov	x3, #0x0                   	// #0
  418378:	mov	x2, #0x0                   	// #0
  41837c:	mov	x1, #0x8                   	// #8
  418380:	add	x0, x8, #0x94
  418384:	bl	4179e4 <wcrtomb@plt+0x12dc4>
  418388:	tbnz	w0, #31, 4183a8 <wcrtomb@plt+0x13788>
  41838c:	cmp	w19, w0
  418390:	ccmp	w20, w0, #0x4, ne  // ne = any
  418394:	mov	w0, #0x5                   	// #5
  418398:	csinc	w0, w0, wzr, ne  // ne = any
  41839c:	ldp	x19, x20, [sp, #16]
  4183a0:	ldp	x29, x30, [sp], #32
  4183a4:	ret
  4183a8:	mov	w0, #0x5                   	// #5
  4183ac:	b	41839c <wcrtomb@plt+0x1377c>
  4183b0:	ret
  4183b4:	stp	x29, x30, [sp, #-80]!
  4183b8:	mov	x29, sp
  4183bc:	stp	x19, x20, [sp, #16]
  4183c0:	stp	x21, x22, [sp, #32]
  4183c4:	stp	x23, x24, [sp, #48]
  4183c8:	str	x25, [sp, #64]
  4183cc:	mov	x20, x0
  4183d0:	mov	x19, x1
  4183d4:	mov	x24, x2
  4183d8:	mov	w23, w3
  4183dc:	mov	w6, #0x0                   	// #0
  4183e0:	mov	w5, #0x0                   	// #0
  4183e4:	mov	x4, #0xffffffffffffffff    	// #-1
  4183e8:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  4183ec:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x11e64>
  4183f0:	add	x2, x2, #0x6b8
  4183f4:	mov	x1, #0x8                   	// #8
  4183f8:	add	x0, x0, #0x64
  4183fc:	bl	4179e4 <wcrtomb@plt+0x12dc4>
  418400:	mov	x22, x0
  418404:	and	w25, w0, #0xfff
  418408:	add	x21, x20, #0x101
  41840c:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  418410:	add	x1, x1, #0xde8
  418414:	mov	x0, x21
  418418:	bl	404720 <strcmp@plt>
  41841c:	cbnz	w0, 418604 <wcrtomb@plt+0x139e4>
  418420:	ldrb	w0, [x20, #475]
  418424:	cbnz	w0, 418448 <wcrtomb@plt+0x13828>
  418428:	ldrb	w0, [x20, #476]
  41842c:	sub	w0, w0, #0x30
  418430:	and	w0, w0, #0xff
  418434:	cmp	w0, #0x7
  418438:	b.hi	418448 <wcrtomb@plt+0x13828>  // b.pmore
  41843c:	ldrb	w0, [x20, #487]
  418440:	cmp	w0, #0x20
  418444:	b.eq	4185dc <wcrtomb@plt+0x139bc>  // b.none
  418448:	ldr	x0, [x19, #352]
  41844c:	cmp	x0, #0x0
  418450:	cset	w21, ne  // ne = any
  418454:	add	w21, w21, #0x3
  418458:	str	w21, [x24]
  41845c:	str	w25, [x19, #104]
  418460:	mov	x1, #0xc                   	// #12
  418464:	add	x0, x20, #0x88
  418468:	bl	418124 <wcrtomb@plt+0x13504>
  41846c:	str	x0, [x19, #232]
  418470:	str	xzr, [x19, #240]
  418474:	ldrb	w0, [x20, #265]
  418478:	add	x1, x20, #0x109
  41847c:	cmp	w0, #0x0
  418480:	mov	x2, #0x20                  	// #32
  418484:	csel	x1, x1, xzr, ne  // ne = any
  418488:	add	x0, x19, x2
  41848c:	bl	41a5f8 <wcrtomb@plt+0x159d8>
  418490:	ldrb	w0, [x20, #297]
  418494:	add	x1, x20, #0x129
  418498:	cmp	w0, #0x0
  41849c:	mov	x2, #0x20                  	// #32
  4184a0:	csel	x1, x1, xzr, ne  // ne = any
  4184a4:	add	x0, x19, #0x28
  4184a8:	bl	41a5f8 <wcrtomb@plt+0x159d8>
  4184ac:	mov	x0, x19
  4184b0:	bl	41390c <wcrtomb@plt+0xecec>
  4184b4:	cmp	w21, #0x2
  4184b8:	b.eq	418630 <wcrtomb@plt+0x13a10>  // b.none
  4184bc:	cmp	w21, #0x5
  4184c0:	b.eq	418680 <wcrtomb@plt+0x13a60>  // b.none
  4184c4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4184c8:	add	x0, x0, #0x288
  4184cc:	ldp	x0, x1, [x0]
  4184d0:	stp	x0, x1, [x19, #248]
  4184d4:	stp	x0, x1, [x19, #216]
  4184d8:	cmp	w21, #0x1
  4184dc:	b.eq	4186ac <wcrtomb@plt+0x13a8c>  // b.none
  4184e0:	cbz	w23, 41855c <wcrtomb@plt+0x1393c>
  4184e4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4184e8:	ldrb	w0, [x0, #608]
  4184ec:	cbnz	w0, 4184f8 <wcrtomb@plt+0x138d8>
  4184f0:	ldrb	w0, [x20, #265]
  4184f4:	cbnz	w0, 418704 <wcrtomb@plt+0x13ae4>
  4184f8:	mov	w6, #0x0                   	// #0
  4184fc:	mov	w5, #0x0                   	// #0
  418500:	mov	x4, #0xffffffff            	// #4294967295
  418504:	mov	x3, #0x0                   	// #0
  418508:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x11e64>
  41850c:	add	x2, x2, #0x740
  418510:	mov	x1, #0x8                   	// #8
  418514:	add	x0, x20, #0x6c
  418518:	bl	4179e4 <wcrtomb@plt+0x12dc4>
  41851c:	str	w0, [x19, #112]
  418520:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  418524:	ldrb	w0, [x0, #608]
  418528:	cbnz	w0, 418534 <wcrtomb@plt+0x13914>
  41852c:	ldrb	w0, [x20, #297]
  418530:	cbnz	w0, 418718 <wcrtomb@plt+0x13af8>
  418534:	mov	w6, #0x0                   	// #0
  418538:	mov	w5, #0x0                   	// #0
  41853c:	mov	x4, #0xffffffff            	// #4294967295
  418540:	mov	x3, #0x0                   	// #0
  418544:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x11e64>
  418548:	add	x2, x2, #0x748
  41854c:	mov	x1, #0x8                   	// #8
  418550:	add	x0, x20, #0x74
  418554:	bl	4179e4 <wcrtomb@plt+0x12dc4>
  418558:	str	w0, [x19, #116]
  41855c:	ldrb	w0, [x20, #156]
  418560:	sub	w0, w0, #0x33
  418564:	cmp	w0, #0x1
  418568:	b.ls	41872c <wcrtomb@plt+0x13b0c>  // b.plast
  41856c:	str	xzr, [x19, #120]
  418570:	mov	x0, x19
  418574:	bl	413ba4 <wcrtomb@plt+0xef84>
  418578:	mov	x0, x19
  41857c:	bl	42059c <wcrtomb@plt+0x1b97c>
  418580:	and	w0, w0, #0xff
  418584:	cbnz	w0, 4187a4 <wcrtomb@plt+0x13b84>
  418588:	strb	wzr, [x19, #272]
  41858c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  418590:	ldr	w0, [x0, #3984]
  418594:	and	w0, w0, #0xfffffffb
  418598:	cmp	w0, #0x2
  41859c:	b.ne	4185b4 <wcrtomb@plt+0x13994>  // b.any
  4185a0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4185a4:	ldr	x0, [x0, #4008]
  4185a8:	ldrb	w0, [x0, #156]
  4185ac:	cmp	w0, #0x44
  4185b0:	b.eq	4185bc <wcrtomb@plt+0x1399c>  // b.none
  4185b4:	ldr	x0, [x19, #384]
  4185b8:	cbz	x0, 4185c4 <wcrtomb@plt+0x139a4>
  4185bc:	mov	w0, #0x1                   	// #1
  4185c0:	strb	w0, [x19, #376]
  4185c4:	ldp	x19, x20, [sp, #16]
  4185c8:	ldp	x21, x22, [sp, #32]
  4185cc:	ldp	x23, x24, [sp, #48]
  4185d0:	ldr	x25, [sp, #64]
  4185d4:	ldp	x29, x30, [sp], #80
  4185d8:	ret
  4185dc:	ldrb	w0, [x20, #488]
  4185e0:	sub	w0, w0, #0x30
  4185e4:	and	w0, w0, #0xff
  4185e8:	cmp	w0, #0x7
  4185ec:	b.hi	418448 <wcrtomb@plt+0x13828>  // b.pmore
  4185f0:	ldrb	w0, [x20, #499]
  4185f4:	mov	w21, #0x5                   	// #5
  4185f8:	cmp	w0, #0x20
  4185fc:	b.ne	418448 <wcrtomb@plt+0x13828>  // b.any
  418600:	b	418458 <wcrtomb@plt+0x13838>
  418604:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  418608:	add	x1, x1, #0xdf0
  41860c:	mov	x0, x21
  418610:	bl	404720 <strcmp@plt>
  418614:	mov	w21, #0x1                   	// #1
  418618:	cbnz	w0, 418458 <wcrtomb@plt+0x13838>
  41861c:	tst	x22, #0xfffffffffffff000
  418620:	mov	w21, #0x2                   	// #2
  418624:	mov	w0, #0x6                   	// #6
  418628:	csel	w21, w21, w0, ne  // ne = any
  41862c:	b	418458 <wcrtomb@plt+0x13838>
  418630:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  418634:	ldrb	w0, [x0, #4065]
  418638:	cbnz	w0, 418654 <wcrtomb@plt+0x13a34>
  41863c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  418640:	add	x0, x0, #0x288
  418644:	ldp	x0, x1, [x0]
  418648:	stp	x0, x1, [x19, #248]
  41864c:	stp	x0, x1, [x19, #216]
  418650:	b	4184e0 <wcrtomb@plt+0x138c0>
  418654:	mov	x1, #0xc                   	// #12
  418658:	add	x0, x20, #0x159
  41865c:	bl	418124 <wcrtomb@plt+0x13504>
  418660:	str	x0, [x19, #216]
  418664:	mov	x1, #0xc                   	// #12
  418668:	add	x0, x20, #0x165
  41866c:	bl	418124 <wcrtomb@plt+0x13504>
  418670:	str	x0, [x19, #248]
  418674:	str	xzr, [x19, #256]
  418678:	str	xzr, [x19, #224]
  41867c:	b	4184e0 <wcrtomb@plt+0x138c0>
  418680:	mov	x1, #0xc                   	// #12
  418684:	add	x0, x20, #0x1dc
  418688:	bl	418124 <wcrtomb@plt+0x13504>
  41868c:	str	x0, [x19, #216]
  418690:	mov	x1, #0xc                   	// #12
  418694:	add	x0, x20, #0x1e8
  418698:	bl	418124 <wcrtomb@plt+0x13504>
  41869c:	str	x0, [x19, #248]
  4186a0:	str	xzr, [x19, #256]
  4186a4:	str	xzr, [x19, #224]
  4186a8:	b	4184e0 <wcrtomb@plt+0x138c0>
  4186ac:	mov	w6, #0x0                   	// #0
  4186b0:	mov	w5, #0x0                   	// #0
  4186b4:	mov	x4, #0xffffffff            	// #4294967295
  4186b8:	mov	x3, #0x0                   	// #0
  4186bc:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x11e64>
  4186c0:	add	x2, x2, #0x740
  4186c4:	mov	x1, #0x8                   	// #8
  4186c8:	add	x0, x20, #0x6c
  4186cc:	bl	4179e4 <wcrtomb@plt+0x12dc4>
  4186d0:	str	w0, [x19, #112]
  4186d4:	mov	w6, #0x0                   	// #0
  4186d8:	mov	w5, #0x0                   	// #0
  4186dc:	mov	x4, #0xffffffff            	// #4294967295
  4186e0:	mov	x3, #0x0                   	// #0
  4186e4:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x11e64>
  4186e8:	add	x2, x2, #0x748
  4186ec:	mov	x1, #0x8                   	// #8
  4186f0:	add	x0, x20, #0x74
  4186f4:	bl	4179e4 <wcrtomb@plt+0x12dc4>
  4186f8:	str	w0, [x19, #116]
  4186fc:	str	xzr, [x19, #120]
  418700:	b	418570 <wcrtomb@plt+0x13950>
  418704:	add	x1, x19, #0x70
  418708:	add	x0, x20, #0x109
  41870c:	bl	41d3b8 <wcrtomb@plt+0x18798>
  418710:	cbnz	w0, 418520 <wcrtomb@plt+0x13900>
  418714:	b	4184f8 <wcrtomb@plt+0x138d8>
  418718:	add	x1, x19, #0x74
  41871c:	add	x0, x20, #0x129
  418720:	bl	41d470 <wcrtomb@plt+0x18850>
  418724:	cbnz	w0, 41855c <wcrtomb@plt+0x1393c>
  418728:	b	418534 <wcrtomb@plt+0x13914>
  41872c:	mov	w6, #0x0                   	// #0
  418730:	mov	w5, #0x0                   	// #0
  418734:	mov	x4, #0x7fffffff            	// #2147483647
  418738:	mov	x3, #0xffffffff80000000    	// #-2147483648
  41873c:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x11e64>
  418740:	add	x2, x2, #0x6c0
  418744:	mov	x1, #0x8                   	// #8
  418748:	add	x0, x20, #0x149
  41874c:	bl	4179e4 <wcrtomb@plt+0x12dc4>
  418750:	mov	x21, x0
  418754:	mov	w6, #0x0                   	// #0
  418758:	mov	w5, #0x0                   	// #0
  41875c:	mov	x4, #0x7fffffff            	// #2147483647
  418760:	mov	x3, #0xffffffff80000000    	// #-2147483648
  418764:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x11e64>
  418768:	add	x2, x2, #0x6c8
  41876c:	mov	x1, #0x8                   	// #8
  418770:	add	x0, x20, #0x151
  418774:	bl	4179e4 <wcrtomb@plt+0x12dc4>
  418778:	ubfiz	x1, x21, #8, #12
  41877c:	lsl	x21, x21, #32
  418780:	and	x21, x21, #0xfffff00000000000
  418784:	orr	x1, x1, x21
  418788:	lsl	x21, x0, #12
  41878c:	and	x21, x21, #0xffffff00000
  418790:	and	x0, x0, #0xff
  418794:	orr	x21, x21, x0
  418798:	orr	x21, x21, x1
  41879c:	str	x21, [x19, #120]
  4187a0:	b	418570 <wcrtomb@plt+0x13950>
  4187a4:	mov	x0, x19
  4187a8:	bl	4205ec <wcrtomb@plt+0x1b9cc>
  4187ac:	mov	w0, #0x1                   	// #1
  4187b0:	strb	w0, [x19, #272]
  4187b4:	b	4185c4 <wcrtomb@plt+0x139a4>
  4187b8:	stp	x29, x30, [sp, #-16]!
  4187bc:	mov	x29, sp
  4187c0:	mov	w6, #0x0                   	// #0
  4187c4:	mov	w5, #0x0                   	// #0
  4187c8:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  4187cc:	mov	x3, #0x0                   	// #0
  4187d0:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x11e64>
  4187d4:	add	x2, x2, #0x730
  4187d8:	bl	4179e4 <wcrtomb@plt+0x12dc4>
  4187dc:	ldp	x29, x30, [sp], #16
  4187e0:	ret
  4187e4:	stp	x29, x30, [sp, #-400]!
  4187e8:	mov	x29, sp
  4187ec:	stp	x19, x20, [sp, #16]
  4187f0:	stp	x21, x22, [sp, #32]
  4187f4:	stp	x23, x24, [sp, #48]
  4187f8:	stp	x25, x26, [sp, #64]
  4187fc:	stp	x27, x28, [sp, #80]
  418800:	mov	x25, x0
  418804:	mov	x23, x1
  418808:	mov	w24, w2
  41880c:	mov	x28, #0x0                   	// #0
  418810:	str	xzr, [sp, #120]
  418814:	mov	x27, #0x0                   	// #0
  418818:	str	xzr, [sp, #104]
  41881c:	adrp	x26, 480000 <_obstack_memory_used@@Base+0x3ee64>
  418820:	add	x26, x26, #0x890
  418824:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  418828:	add	x0, x0, #0x380
  41882c:	str	x0, [sp, #112]
  418830:	b	41897c <wcrtomb@plt+0x13d5c>
  418834:	mov	x1, #0xc                   	// #12
  418838:	add	x0, x19, #0x7c
  41883c:	bl	4187b8 <wcrtomb@plt+0x13b98>
  418840:	str	x0, [x23, #136]
  418844:	tbz	x0, #63, 4189b0 <wcrtomb@plt+0x13d90>
  418848:	mov	w20, #0x5                   	// #5
  41884c:	b	418bec <wcrtomb@plt+0x13fcc>
  418850:	ldr	x0, [x23, #136]
  418854:	ands	x1, x0, #0x1ff
  418858:	add	x2, x0, #0x200
  41885c:	add	x21, x0, #0x400
  418860:	sub	x21, x21, x1
  418864:	csel	x21, x21, x2, ne  // ne = any
  418868:	cmp	x21, x0
  41886c:	b.cc	418900 <wcrtomb@plt+0x13ce0>  // b.lo, b.ul, b.last
  418870:	add	x0, x21, #0x1
  418874:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  418878:	mov	x22, x0
  41887c:	ldrb	w0, [x19, #156]
  418880:	cmp	w0, #0x4c
  418884:	b.eq	418904 <wcrtomb@plt+0x13ce4>  // b.none
  418888:	mov	x0, x27
  41888c:	bl	4047c0 <free@plt>
  418890:	lsr	x28, x21, #9
  418894:	mov	x27, x22
  418898:	mov	x0, x19
  41889c:	bl	405884 <wcrtomb@plt+0xc64>
  4188a0:	mov	x2, #0x200                 	// #512
  4188a4:	mov	x1, x19
  4188a8:	mov	x0, x22
  4188ac:	bl	403f70 <memcpy@plt>
  4188b0:	add	x22, x22, #0x200
  4188b4:	subs	x21, x21, #0x200
  4188b8:	b.eq	418958 <wcrtomb@plt+0x13d38>  // b.none
  4188bc:	bl	406d94 <wcrtomb@plt+0x2174>
  4188c0:	mov	x20, x0
  4188c4:	cbz	x0, 41891c <wcrtomb@plt+0x13cfc>
  4188c8:	bl	405974 <wcrtomb@plt+0xd54>
  4188cc:	cmp	x0, x21
  4188d0:	csel	x19, x0, x21, ls  // ls = plast
  4188d4:	mov	x2, x19
  4188d8:	mov	x1, x20
  4188dc:	mov	x0, x22
  4188e0:	bl	403f70 <memcpy@plt>
  4188e4:	add	x22, x22, x19
  4188e8:	sub	x0, x19, #0x1
  4188ec:	add	x0, x20, x0
  4188f0:	bl	405884 <wcrtomb@plt+0xc64>
  4188f4:	subs	x21, x21, x19
  4188f8:	b.ne	4188bc <wcrtomb@plt+0x13c9c>  // b.any
  4188fc:	b	418958 <wcrtomb@plt+0x13d38>
  418900:	bl	40e5ec <wcrtomb@plt+0x99cc>
  418904:	ldr	x0, [sp, #104]
  418908:	bl	4047c0 <free@plt>
  41890c:	lsr	x0, x21, #9
  418910:	str	x0, [sp, #120]
  418914:	str	x22, [sp, #104]
  418918:	b	418898 <wcrtomb@plt+0x13c78>
  41891c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  418920:	ldr	x0, [x0, #944]
  418924:	cbz	x0, 41892c <wcrtomb@plt+0x13d0c>
  418928:	blr	x0
  41892c:	mov	w2, #0x5                   	// #5
  418930:	ldr	x1, [sp, #112]
  418934:	mov	x0, #0x0                   	// #0
  418938:	bl	4049c0 <dcgettext@plt>
  41893c:	mov	x2, x0
  418940:	mov	w1, #0x0                   	// #0
  418944:	mov	w0, #0x0                   	// #0
  418948:	bl	404050 <error@plt>
  41894c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  418950:	mov	w1, #0x2                   	// #2
  418954:	str	w1, [x0, #3392]
  418958:	strb	wzr, [x22]
  41895c:	b	41897c <wcrtomb@plt+0x13d5c>
  418960:	mov	x1, #0xc                   	// #12
  418964:	add	x0, x19, #0x7c
  418968:	bl	4187b8 <wcrtomb@plt+0x13b98>
  41896c:	mov	x2, x0
  418970:	mov	x1, x19
  418974:	add	x0, x23, #0x158
  418978:	bl	413dac <wcrtomb@plt+0xf18c>
  41897c:	bl	406d94 <wcrtomb@plt+0x2174>
  418980:	mov	x19, x0
  418984:	str	x0, [x25]
  418988:	cbz	x0, 418be8 <wcrtomb@plt+0x13fc8>
  41898c:	mov	w1, #0x0                   	// #0
  418990:	bl	418308 <wcrtomb@plt+0x136e8>
  418994:	mov	w20, w0
  418998:	cmp	w0, #0x1
  41899c:	b.ne	418bec <wcrtomb@plt+0x13fcc>  // b.any
  4189a0:	ldrb	w0, [x19, #156]
  4189a4:	cmp	w0, #0x31
  4189a8:	b.ne	418834 <wcrtomb@plt+0x13c14>  // b.any
  4189ac:	str	xzr, [x23, #136]
  4189b0:	ldrb	w2, [x19, #156]
  4189b4:	sub	w0, w2, #0x4b
  4189b8:	and	w0, w0, #0xff
  4189bc:	and	w1, w2, #0xffffffdf
  4189c0:	and	w1, w1, #0xff
  4189c4:	cmp	w1, #0x58
  4189c8:	cset	w1, eq  // eq = none
  4189cc:	cmp	w0, #0x1
  4189d0:	cset	w3, ls  // ls = plast
  4189d4:	orr	w1, w1, w3
  4189d8:	cmp	w2, #0x67
  4189dc:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  4189e0:	b.eq	418a64 <wcrtomb@plt+0x13e44>  // b.none
  4189e4:	cmp	w24, #0x1
  4189e8:	b.eq	418c0c <wcrtomb@plt+0x13fec>  // b.none
  4189ec:	cmp	w0, #0x1
  4189f0:	b.ls	418850 <wcrtomb@plt+0x13c30>  // b.plast
  4189f4:	cbnz	w1, 418960 <wcrtomb@plt+0x13d40>
  4189f8:	ldr	x0, [x26, #272]
  4189fc:	cbz	x0, 418a54 <wcrtomb@plt+0x13e34>
  418a00:	mov	x2, #0x200                 	// #512
  418a04:	mov	x1, x19
  418a08:	ldr	x0, [x26, #272]
  418a0c:	bl	403f70 <memcpy@plt>
  418a10:	stp	xzr, xzr, [sp, #136]
  418a14:	stp	xzr, xzr, [sp, #152]
  418a18:	mov	x1, #0xc                   	// #12
  418a1c:	add	x0, x19, #0x7c
  418a20:	bl	4187b8 <wcrtomb@plt+0x13b98>
  418a24:	mov	x2, x0
  418a28:	mov	x1, x19
  418a2c:	add	x0, sp, #0x88
  418a30:	bl	413dac <wcrtomb@plt+0xf18c>
  418a34:	add	x0, sp, #0x88
  418a38:	bl	413c4c <wcrtomb@plt+0xf02c>
  418a3c:	add	x0, sp, #0x88
  418a40:	bl	413f10 <wcrtomb@plt+0xf2f0>
  418a44:	cmp	w24, #0x2
  418a48:	b.ne	41897c <wcrtomb@plt+0x13d5c>  // b.any
  418a4c:	mov	w20, w24
  418a50:	b	418bec <wcrtomb@plt+0x13fcc>
  418a54:	mov	x0, #0x200                 	// #512
  418a58:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  418a5c:	str	x0, [x26, #272]
  418a60:	b	418a00 <wcrtomb@plt+0x13de0>
  418a64:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  418a68:	ldr	x0, [x0, #3992]
  418a6c:	bl	4047c0 <free@plt>
  418a70:	ldr	x1, [sp, #104]
  418a74:	cbz	x1, 418ae4 <wcrtomb@plt+0x13ec4>
  418a78:	add	x21, x1, #0x200
  418a7c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  418a80:	str	x1, [x0, #3992]
  418a84:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  418a88:	ldr	x1, [sp, #120]
  418a8c:	str	x1, [x0, #4000]
  418a90:	mov	x1, x21
  418a94:	mov	x0, x23
  418a98:	bl	41a5bc <wcrtomb@plt+0x1599c>
  418a9c:	mov	x1, x21
  418aa0:	add	x0, x23, #0x8
  418aa4:	bl	41a5bc <wcrtomb@plt+0x1599c>
  418aa8:	ldr	x0, [x23, #8]
  418aac:	bl	434b80 <argp_parse@@Base+0x1440>
  418ab0:	strb	w0, [x23, #16]
  418ab4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  418ab8:	ldr	x0, [x0, #4024]
  418abc:	bl	4047c0 <free@plt>
  418ac0:	cbz	x27, 418b90 <wcrtomb@plt+0x13f70>
  418ac4:	add	x1, x27, #0x200
  418ac8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  418acc:	str	x27, [x0, #4024]
  418ad0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  418ad4:	str	x28, [x0, #4016]
  418ad8:	add	x0, x23, #0x18
  418adc:	bl	41a5bc <wcrtomb@plt+0x1599c>
  418ae0:	b	418bec <wcrtomb@plt+0x13fcc>
  418ae4:	ldrb	w0, [x19, #345]
  418ae8:	add	x1, sp, #0x88
  418aec:	cbz	w0, 418b08 <wcrtomb@plt+0x13ee8>
  418af0:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  418af4:	add	x1, x1, #0xde8
  418af8:	add	x0, x19, #0x101
  418afc:	bl	404720 <strcmp@plt>
  418b00:	add	x1, sp, #0x88
  418b04:	cbz	w0, 418b5c <wcrtomb@plt+0x13f3c>
  418b08:	ldp	x2, x3, [x19]
  418b0c:	stp	x2, x3, [x1]
  418b10:	ldp	x2, x3, [x19, #16]
  418b14:	stp	x2, x3, [x1, #16]
  418b18:	ldp	x2, x3, [x19, #32]
  418b1c:	stp	x2, x3, [x1, #32]
  418b20:	ldp	x2, x3, [x19, #48]
  418b24:	stp	x2, x3, [x1, #48]
  418b28:	ldp	x2, x3, [x19, #64]
  418b2c:	stp	x2, x3, [x1, #64]
  418b30:	ldp	x2, x3, [x19, #80]
  418b34:	stp	x2, x3, [x1, #80]
  418b38:	ldr	w0, [x19, #96]
  418b3c:	str	w0, [x1, #96]
  418b40:	strb	wzr, [x1, #100]
  418b44:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  418b48:	str	xzr, [x0, #3992]
  418b4c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  418b50:	str	xzr, [x0, #4000]
  418b54:	add	x21, sp, #0x88
  418b58:	b	418a90 <wcrtomb@plt+0x13e70>
  418b5c:	mov	x21, x1
  418b60:	mov	x2, #0x9b                  	// #155
  418b64:	add	x1, x19, #0x159
  418b68:	mov	x0, x21
  418b6c:	bl	403f70 <memcpy@plt>
  418b70:	strb	wzr, [sp, #291]
  418b74:	mov	x0, x21
  418b78:	bl	403ff0 <strlen@plt>
  418b7c:	add	x1, x21, x0
  418b80:	add	x1, x1, #0x1
  418b84:	mov	w2, #0x2f                  	// #47
  418b88:	strb	w2, [x21, x0]
  418b8c:	b	418b08 <wcrtomb@plt+0x13ee8>
  418b90:	add	x19, x19, #0x9d
  418b94:	ldp	x0, x1, [x19]
  418b98:	stp	x0, x1, [sp, #136]
  418b9c:	ldp	x0, x1, [x19, #16]
  418ba0:	stp	x0, x1, [sp, #152]
  418ba4:	ldp	x0, x1, [x19, #32]
  418ba8:	stp	x0, x1, [sp, #168]
  418bac:	ldp	x0, x1, [x19, #48]
  418bb0:	stp	x0, x1, [sp, #184]
  418bb4:	ldp	x0, x1, [x19, #64]
  418bb8:	stp	x0, x1, [sp, #200]
  418bbc:	ldp	x0, x1, [x19, #80]
  418bc0:	stp	x0, x1, [sp, #216]
  418bc4:	ldr	w0, [x19, #96]
  418bc8:	str	w0, [sp, #232]
  418bcc:	strb	wzr, [sp, #236]
  418bd0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  418bd4:	str	xzr, [x0, #4024]
  418bd8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  418bdc:	str	xzr, [x0, #4016]
  418be0:	add	x1, sp, #0x88
  418be4:	b	418ad8 <wcrtomb@plt+0x13eb8>
  418be8:	mov	w20, #0x4                   	// #4
  418bec:	mov	w0, w20
  418bf0:	ldp	x19, x20, [sp, #16]
  418bf4:	ldp	x21, x22, [sp, #32]
  418bf8:	ldp	x23, x24, [sp, #48]
  418bfc:	ldp	x25, x26, [sp, #64]
  418c00:	ldp	x27, x28, [sp, #80]
  418c04:	ldp	x29, x30, [sp], #400
  418c08:	ret
  418c0c:	mov	w20, #0x2                   	// #2
  418c10:	b	418bec <wcrtomb@plt+0x13fcc>
  418c14:	stp	x29, x30, [sp, #-16]!
  418c18:	mov	x29, sp
  418c1c:	mov	w6, #0x0                   	// #0
  418c20:	mov	w5, #0x0                   	// #0
  418c24:	mov	x4, #0xffffffffffffffff    	// #-1
  418c28:	mov	x3, #0x0                   	// #0
  418c2c:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x11e64>
  418c30:	add	x2, x2, #0x750
  418c34:	bl	4179e4 <wcrtomb@plt+0x12dc4>
  418c38:	ldp	x29, x30, [sp], #16
  418c3c:	ret
  418c40:	stp	x29, x30, [sp, #-64]!
  418c44:	mov	x29, sp
  418c48:	stp	x19, x20, [sp, #16]
  418c4c:	str	x21, [sp, #32]
  418c50:	mov	x19, x0
  418c54:	and	w21, w2, #0xff
  418c58:	str	x0, [sp, #56]
  418c5c:	mov	w20, w1
  418c60:	cmp	w1, #0x0
  418c64:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  418c68:	b.ge	418c80 <wcrtomb@plt+0x14060>  // b.tcont
  418c6c:	add	x0, x0, #0x1
  418c70:	str	x0, [sp, #56]
  418c74:	mov	w20, #0xca00                	// #51712
  418c78:	movk	w20, #0x3b9a, lsl #16
  418c7c:	sub	w20, w20, w1
  418c80:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  418c84:	ldrb	w0, [x0, #489]
  418c88:	cbz	w0, 418cd8 <wcrtomb@plt+0x140b8>
  418c8c:	add	x0, sp, #0x38
  418c90:	bl	404520 <gmtime@plt>
  418c94:	mov	x3, x0
  418c98:	cbz	x3, 418d0c <wcrtomb@plt+0x140ec>
  418c9c:	cbz	w21, 418ce8 <wcrtomb@plt+0x140c8>
  418ca0:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x3ee64>
  418ca4:	add	x19, x19, #0x890
  418ca8:	add	x19, x19, #0x118
  418cac:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x19e64>
  418cb0:	add	x2, x2, #0x980
  418cb4:	mov	x1, #0x25                  	// #37
  418cb8:	mov	x0, x19
  418cbc:	bl	404150 <strftime@plt>
  418cc0:	mov	x0, x19
  418cc4:	bl	403ff0 <strlen@plt>
  418cc8:	add	x1, x19, x0
  418ccc:	mov	w0, w20
  418cd0:	bl	41ac9c <wcrtomb@plt+0x1607c>
  418cd4:	b	418d94 <wcrtomb@plt+0x14174>
  418cd8:	add	x0, sp, #0x38
  418cdc:	bl	404240 <localtime@plt>
  418ce0:	mov	x3, x0
  418ce4:	b	418c98 <wcrtomb@plt+0x14078>
  418ce8:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x3ee64>
  418cec:	add	x19, x19, #0x890
  418cf0:	add	x19, x19, #0x118
  418cf4:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x12e64>
  418cf8:	add	x2, x2, #0xdd0
  418cfc:	mov	x1, #0x25                  	// #37
  418d00:	mov	x0, x19
  418d04:	bl	404150 <strftime@plt>
  418d08:	b	418d94 <wcrtomb@plt+0x14174>
  418d0c:	tbnz	x19, #63, 418d48 <wcrtomb@plt+0x14128>
  418d10:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  418d14:	add	x1, x1, #0x890
  418d18:	add	x1, x1, #0x11e
  418d1c:	ldr	x0, [sp, #56]
  418d20:	bl	438ce8 <argp_parse@@Base+0x55a8>
  418d24:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  418d28:	add	x1, x1, #0x890
  418d2c:	add	x2, x1, #0x139
  418d30:	add	x1, x1, #0x12c
  418d34:	cmp	w21, #0x0
  418d38:	csel	x2, x2, x1, ne  // ne = any
  418d3c:	mov	x1, x0
  418d40:	mov	w3, #0x20                  	// #32
  418d44:	b	418d78 <wcrtomb@plt+0x14158>
  418d48:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  418d4c:	add	x1, x1, #0x890
  418d50:	add	x1, x1, #0x11e
  418d54:	ldr	x0, [sp, #56]
  418d58:	neg	x0, x0
  418d5c:	bl	438ce8 <argp_parse@@Base+0x55a8>
  418d60:	mov	x1, x0
  418d64:	sub	x0, x0, #0x1
  418d68:	mov	w2, #0x2d                  	// #45
  418d6c:	sturb	w2, [x1, #-1]
  418d70:	b	418d24 <wcrtomb@plt+0x14104>
  418d74:	strb	w3, [x1, #-1]!
  418d78:	cmp	x1, x2
  418d7c:	b.hi	418d74 <wcrtomb@plt+0x14154>  // b.pmore
  418d80:	sub	x19, x2, x0
  418d84:	cmp	x2, x0
  418d88:	csel	x19, x19, xzr, ls  // ls = plast
  418d8c:	add	x19, x0, x19
  418d90:	cbnz	w21, 418da8 <wcrtomb@plt+0x14188>
  418d94:	mov	x0, x19
  418d98:	ldp	x19, x20, [sp, #16]
  418d9c:	ldr	x21, [sp, #32]
  418da0:	ldp	x29, x30, [sp], #64
  418da4:	ret
  418da8:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  418dac:	add	x1, x1, #0x890
  418db0:	add	x1, x1, #0x132
  418db4:	mov	w0, w20
  418db8:	bl	41ac9c <wcrtomb@plt+0x1607c>
  418dbc:	b	418d94 <wcrtomb@plt+0x14174>
  418dc0:	sub	sp, sp, #0x100
  418dc4:	stp	x29, x30, [sp, #16]
  418dc8:	add	x29, sp, #0x10
  418dcc:	stp	x19, x20, [sp, #32]
  418dd0:	stp	x21, x22, [sp, #48]
  418dd4:	stp	x23, x24, [sp, #64]
  418dd8:	stp	x25, x26, [sp, #80]
  418ddc:	mov	x19, x0
  418de0:	mov	x23, x1
  418de4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  418de8:	ldrb	w0, [x0, #776]
  418dec:	cbz	w0, 4190e4 <wcrtomb@plt+0x144c4>
  418df0:	ldr	x25, [x19, #8]
  418df4:	cbz	x25, 4190dc <wcrtomb@plt+0x144bc>
  418df8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  418dfc:	ldrb	w0, [x0, #609]
  418e00:	cbz	w0, 418e60 <wcrtomb@plt+0x14240>
  418e04:	tbnz	x2, #63, 4190f4 <wcrtomb@plt+0x144d4>
  418e08:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  418e0c:	ldr	x20, [x0, #4000]
  418e10:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  418e14:	ldr	x0, [x0, #4016]
  418e18:	add	x20, x20, x0
  418e1c:	sub	x20, x2, x20
  418e20:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  418e24:	ldr	x22, [x0, #3864]
  418e28:	mov	w2, #0x5                   	// #5
  418e2c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  418e30:	add	x1, x1, #0xde0
  418e34:	mov	x0, #0x0                   	// #0
  418e38:	bl	4049c0 <dcgettext@plt>
  418e3c:	mov	x21, x0
  418e40:	add	x1, sp, #0x60
  418e44:	mov	x0, x20
  418e48:	bl	438ce8 <argp_parse@@Base+0x55a8>
  418e4c:	mov	x3, x0
  418e50:	mov	x2, x21
  418e54:	mov	w1, #0x1                   	// #1
  418e58:	mov	x0, x22
  418e5c:	bl	404710 <__fprintf_chk@plt>
  418e60:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  418e64:	ldr	w0, [x0, #580]
  418e68:	cmp	w0, #0x1
  418e6c:	b.le	419100 <wcrtomb@plt+0x144e0>
  418e70:	mov	w0, #0x3f                  	// #63
  418e74:	strb	w0, [sp, #240]
  418e78:	ldrb	w2, [x23, #156]
  418e7c:	cmp	w2, #0x36
  418e80:	b.eq	4192d4 <wcrtomb@plt+0x146b4>  // b.none
  418e84:	b.hi	419208 <wcrtomb@plt+0x145e8>  // b.pmore
  418e88:	cmp	w2, #0x33
  418e8c:	b.eq	4192c8 <wcrtomb@plt+0x146a8>  // b.none
  418e90:	b.ls	4191c0 <wcrtomb@plt+0x145a0>  // b.plast
  418e94:	cmp	w2, #0x34
  418e98:	mov	w0, #0x64                  	// #100
  418e9c:	mov	w1, #0x62                  	// #98
  418ea0:	csel	w0, w0, w1, ne  // ne = any
  418ea4:	strb	w0, [sp, #240]
  418ea8:	add	x1, sp, #0xf1
  418eac:	ldr	w0, [x19, #104]
  418eb0:	bl	4296cc <wcrtomb@plt+0x24aac>
  418eb4:	add	x1, sp, #0xfa
  418eb8:	mov	x0, x19
  418ebc:	bl	429408 <wcrtomb@plt+0x247e8>
  418ec0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  418ec4:	ldrb	w2, [x0, #632]
  418ec8:	ldp	x0, x1, [x19, #232]
  418ecc:	bl	418c40 <wcrtomb@plt+0x14020>
  418ed0:	mov	x26, x0
  418ed4:	bl	403ff0 <strlen@plt>
  418ed8:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x3be64>
  418edc:	ldr	w1, [x1, #2176]
  418ee0:	cmp	w1, w0
  418ee4:	b.ge	418ef0 <wcrtomb@plt+0x142d0>  // b.tcont
  418ee8:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x3be64>
  418eec:	str	w0, [x1, #2176]
  418ef0:	ldr	x21, [x19, #32]
  418ef4:	cbz	x21, 418f1c <wcrtomb@plt+0x142fc>
  418ef8:	ldrb	w0, [x21]
  418efc:	cbz	w0, 418f1c <wcrtomb@plt+0x142fc>
  418f00:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  418f04:	ldr	w0, [x0, #3984]
  418f08:	cmp	w0, #0x1
  418f0c:	b.eq	418f1c <wcrtomb@plt+0x142fc>  // b.none
  418f10:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  418f14:	ldrb	w0, [x0, #608]
  418f18:	cbz	w0, 418f2c <wcrtomb@plt+0x1430c>
  418f1c:	add	x1, sp, #0xd8
  418f20:	ldr	w0, [x19, #112]
  418f24:	bl	438ce8 <argp_parse@@Base+0x55a8>
  418f28:	mov	x21, x0
  418f2c:	ldr	x22, [x19, #40]
  418f30:	cbz	x22, 418f58 <wcrtomb@plt+0x14338>
  418f34:	ldrb	w0, [x22]
  418f38:	cbz	w0, 418f58 <wcrtomb@plt+0x14338>
  418f3c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  418f40:	ldr	w0, [x0, #3984]
  418f44:	cmp	w0, #0x1
  418f48:	b.eq	418f58 <wcrtomb@plt+0x14338>  // b.none
  418f4c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  418f50:	ldrb	w0, [x0, #608]
  418f54:	cbz	w0, 418f68 <wcrtomb@plt+0x14348>
  418f58:	add	x1, sp, #0xc0
  418f5c:	ldr	w0, [x19, #116]
  418f60:	bl	438ce8 <argp_parse@@Base+0x55a8>
  418f64:	mov	x22, x0
  418f68:	ldrb	w0, [x23, #156]
  418f6c:	sub	w0, w0, #0x33
  418f70:	cmp	w0, #0x1
  418f74:	b.ls	4192ec <wcrtomb@plt+0x146cc>  // b.plast
  418f78:	add	x1, sp, #0x78
  418f7c:	ldr	x0, [x19, #136]
  418f80:	bl	438ce8 <argp_parse@@Base+0x55a8>
  418f84:	mov	x2, #0x2a                  	// #42
  418f88:	mov	x1, x0
  418f8c:	add	x0, sp, #0x90
  418f90:	bl	404370 <__strcpy_chk@plt>
  418f94:	add	x0, sp, #0x90
  418f98:	bl	403ff0 <strlen@plt>
  418f9c:	mov	x24, x0
  418fa0:	mov	x0, x21
  418fa4:	bl	403ff0 <strlen@plt>
  418fa8:	mov	x20, x0
  418fac:	mov	x0, x22
  418fb0:	bl	403ff0 <strlen@plt>
  418fb4:	add	w6, w20, w0
  418fb8:	add	w0, w24, #0x2
  418fbc:	add	w6, w6, w0
  418fc0:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  418fc4:	ldr	w0, [x0, #2180]
  418fc8:	cmp	w0, w6
  418fcc:	b.ge	418fd8 <wcrtomb@plt+0x143b8>  // b.tcont
  418fd0:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  418fd4:	str	w6, [x0, #2180]
  418fd8:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x3be64>
  418fdc:	add	x0, x1, #0x880
  418fe0:	ldr	w0, [x0, #4]
  418fe4:	sub	w6, w0, w6
  418fe8:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x3ee64>
  418fec:	str	x26, [sp, #8]
  418ff0:	ldr	w0, [x1, #2176]
  418ff4:	str	w0, [sp]
  418ff8:	add	x7, sp, #0x90
  418ffc:	add	w6, w6, w24
  419000:	mov	x5, x22
  419004:	mov	x4, x21
  419008:	add	x3, sp, #0xf0
  41900c:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x12e64>
  419010:	add	x2, x2, #0xdf0
  419014:	mov	w1, #0x1                   	// #1
  419018:	ldr	x0, [x20, #3864]
  41901c:	bl	404710 <__fprintf_chk@plt>
  419020:	ldr	x20, [x20, #3864]
  419024:	mov	x0, x25
  419028:	bl	43ee2c <argp_parse@@Base+0xb6ec>
  41902c:	mov	x3, x0
  419030:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x12e64>
  419034:	add	x2, x2, #0xac8
  419038:	mov	w1, #0x1                   	// #1
  41903c:	mov	x0, x20
  419040:	bl	404710 <__fprintf_chk@plt>
  419044:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  419048:	ldrb	w0, [x0, #776]
  41904c:	cbz	w0, 419080 <wcrtomb@plt+0x14460>
  419050:	ldrb	w0, [x19, #16]
  419054:	cbz	w0, 419080 <wcrtomb@plt+0x14460>
  419058:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41905c:	ldr	x0, [x0, #3864]
  419060:	ldr	x1, [x0, #40]
  419064:	ldr	x2, [x0, #48]
  419068:	cmp	x1, x2
  41906c:	b.cs	419354 <wcrtomb@plt+0x14734>  // b.hs, b.nlast
  419070:	add	x2, x1, #0x1
  419074:	str	x2, [x0, #40]
  419078:	mov	w0, #0x2f                  	// #47
  41907c:	strb	w0, [x1]
  419080:	ldrb	w0, [x23, #156]
  419084:	cmp	w0, #0x4b
  419088:	b.eq	4194bc <wcrtomb@plt+0x1489c>  // b.none
  41908c:	b.ls	419360 <wcrtomb@plt+0x14740>  // b.plast
  419090:	cmp	w0, #0x4d
  419094:	b.eq	4194ec <wcrtomb@plt+0x148cc>  // b.none
  419098:	b.ls	41944c <wcrtomb@plt+0x1482c>  // b.plast
  41909c:	cmp	w0, #0x53
  4190a0:	b.eq	419420 <wcrtomb@plt+0x14800>  // b.none
  4190a4:	cmp	w0, #0x56
  4190a8:	b.ne	41937c <wcrtomb@plt+0x1475c>  // b.any
  4190ac:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4190b0:	ldr	x20, [x0, #3864]
  4190b4:	mov	w2, #0x5                   	// #5
  4190b8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  4190bc:	add	x1, x1, #0xe58
  4190c0:	mov	x0, #0x0                   	// #0
  4190c4:	bl	4049c0 <dcgettext@plt>
  4190c8:	mov	x2, x0
  4190cc:	mov	w1, #0x1                   	// #1
  4190d0:	mov	x0, x20
  4190d4:	bl	404710 <__fprintf_chk@plt>
  4190d8:	b	419178 <wcrtomb@plt+0x14558>
  4190dc:	ldr	x25, [x19]
  4190e0:	b	418df8 <wcrtomb@plt+0x141d8>
  4190e4:	ldr	x25, [x19]
  4190e8:	cbnz	x25, 418df8 <wcrtomb@plt+0x141d8>
  4190ec:	ldr	x25, [x19, #8]
  4190f0:	b	418df8 <wcrtomb@plt+0x141d8>
  4190f4:	bl	405818 <wcrtomb@plt+0xbf8>
  4190f8:	mov	x2, x0
  4190fc:	b	418e08 <wcrtomb@plt+0x141e8>
  419100:	mov	x0, x25
  419104:	bl	43ee2c <argp_parse@@Base+0xb6ec>
  419108:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41910c:	ldr	x1, [x1, #3864]
  419110:	bl	4049e0 <fputs_unlocked@plt>
  419114:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  419118:	ldrb	w0, [x0, #776]
  41911c:	cbz	w0, 419150 <wcrtomb@plt+0x14530>
  419120:	ldrb	w0, [x19, #16]
  419124:	cbz	w0, 419150 <wcrtomb@plt+0x14530>
  419128:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41912c:	ldr	x0, [x0, #3864]
  419130:	ldr	x1, [x0, #40]
  419134:	ldr	x2, [x0, #48]
  419138:	cmp	x1, x2
  41913c:	b.cs	4191a8 <wcrtomb@plt+0x14588>  // b.hs, b.nlast
  419140:	add	x2, x1, #0x1
  419144:	str	x2, [x0, #40]
  419148:	mov	w0, #0x2f                  	// #47
  41914c:	strb	w0, [x1]
  419150:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  419154:	ldr	x0, [x0, #3864]
  419158:	ldr	x1, [x0, #40]
  41915c:	ldr	x2, [x0, #48]
  419160:	cmp	x1, x2
  419164:	b.cs	4191b4 <wcrtomb@plt+0x14594>  // b.hs, b.nlast
  419168:	add	x2, x1, #0x1
  41916c:	str	x2, [x0, #40]
  419170:	mov	w0, #0xa                   	// #10
  419174:	strb	w0, [x1]
  419178:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41917c:	ldr	x0, [x0, #3864]
  419180:	bl	4048d0 <fflush_unlocked@plt>
  419184:	mov	x0, x19
  419188:	bl	42952c <wcrtomb@plt+0x2490c>
  41918c:	ldp	x19, x20, [sp, #32]
  419190:	ldp	x21, x22, [sp, #48]
  419194:	ldp	x23, x24, [sp, #64]
  419198:	ldp	x25, x26, [sp, #80]
  41919c:	ldp	x29, x30, [sp, #16]
  4191a0:	add	sp, sp, #0x100
  4191a4:	ret
  4191a8:	mov	w1, #0x2f                  	// #47
  4191ac:	bl	404690 <__overflow@plt>
  4191b0:	b	419150 <wcrtomb@plt+0x14530>
  4191b4:	mov	w1, #0xa                   	// #10
  4191b8:	bl	404690 <__overflow@plt>
  4191bc:	b	419178 <wcrtomb@plt+0x14558>
  4191c0:	cmp	w2, #0x31
  4191c4:	b.eq	4192bc <wcrtomb@plt+0x1469c>  // b.none
  4191c8:	b.ls	4191e0 <wcrtomb@plt+0x145c0>  // b.plast
  4191cc:	cmp	w2, #0x32
  4191d0:	b.ne	418ea8 <wcrtomb@plt+0x14288>  // b.any
  4191d4:	mov	w0, #0x6c                  	// #108
  4191d8:	strb	w0, [sp, #240]
  4191dc:	b	418ea8 <wcrtomb@plt+0x14288>
  4191e0:	cbz	w2, 4191ec <wcrtomb@plt+0x145cc>
  4191e4:	cmp	w2, #0x30
  4191e8:	b.ne	418ea8 <wcrtomb@plt+0x14288>  // b.any
  4191ec:	ldrb	w0, [x19, #16]
  4191f0:	cmp	w0, #0x0
  4191f4:	mov	w0, #0x64                  	// #100
  4191f8:	mov	w1, #0x2d                  	// #45
  4191fc:	csel	w0, w0, w1, ne  // ne = any
  419200:	strb	w0, [sp, #240]
  419204:	b	418ea8 <wcrtomb@plt+0x14288>
  419208:	cmp	w2, #0x4c
  41920c:	b.hi	419234 <wcrtomb@plt+0x14614>  // b.pmore
  419210:	cmp	w2, #0x4a
  419214:	b.hi	419270 <wcrtomb@plt+0x14650>  // b.pmore
  419218:	cmp	w2, #0x37
  41921c:	b.eq	4192e0 <wcrtomb@plt+0x146c0>  // b.none
  419220:	cmp	w2, #0x44
  419224:	b.ne	418ea8 <wcrtomb@plt+0x14288>  // b.any
  419228:	mov	w0, #0x64                  	// #100
  41922c:	strb	w0, [sp, #240]
  419230:	b	418ea8 <wcrtomb@plt+0x14288>
  419234:	cmp	w2, #0x53
  419238:	b.eq	4191ec <wcrtomb@plt+0x145cc>  // b.none
  41923c:	cmp	w2, #0x56
  419240:	b.ne	41925c <wcrtomb@plt+0x1463c>  // b.any
  419244:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  419248:	mov	w1, #0x1                   	// #1
  41924c:	strb	w1, [x0, #2509]
  419250:	mov	w0, #0x56                  	// #86
  419254:	strb	w0, [sp, #240]
  419258:	b	418ea8 <wcrtomb@plt+0x14288>
  41925c:	cmp	w2, #0x4d
  419260:	b.ne	418ea8 <wcrtomb@plt+0x14288>  // b.any
  419264:	mov	w0, #0x4d                  	// #77
  419268:	strb	w0, [sp, #240]
  41926c:	b	418ea8 <wcrtomb@plt+0x14288>
  419270:	mov	w0, #0x4c                  	// #76
  419274:	strb	w0, [sp, #240]
  419278:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41927c:	ldr	x0, [x0, #944]
  419280:	cbz	x0, 419288 <wcrtomb@plt+0x14668>
  419284:	blr	x0
  419288:	mov	w2, #0x5                   	// #5
  41928c:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  419290:	add	x1, x1, #0xcd8
  419294:	mov	x0, #0x0                   	// #0
  419298:	bl	4049c0 <dcgettext@plt>
  41929c:	mov	x2, x0
  4192a0:	mov	w1, #0x0                   	// #0
  4192a4:	mov	w0, #0x0                   	// #0
  4192a8:	bl	404050 <error@plt>
  4192ac:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4192b0:	mov	w1, #0x2                   	// #2
  4192b4:	str	w1, [x0, #3392]
  4192b8:	b	418ea8 <wcrtomb@plt+0x14288>
  4192bc:	mov	w0, #0x68                  	// #104
  4192c0:	strb	w0, [sp, #240]
  4192c4:	b	418ea8 <wcrtomb@plt+0x14288>
  4192c8:	mov	w0, #0x63                  	// #99
  4192cc:	strb	w0, [sp, #240]
  4192d0:	b	418ea8 <wcrtomb@plt+0x14288>
  4192d4:	mov	w0, #0x70                  	// #112
  4192d8:	strb	w0, [sp, #240]
  4192dc:	b	418ea8 <wcrtomb@plt+0x14288>
  4192e0:	mov	w0, #0x43                  	// #67
  4192e4:	strb	w0, [sp, #240]
  4192e8:	b	418ea8 <wcrtomb@plt+0x14288>
  4192ec:	ldr	x1, [x19, #120]
  4192f0:	ubfx	w2, w1, #8, #12
  4192f4:	lsr	x1, x1, #32
  4192f8:	and	w0, w1, #0xfffff000
  4192fc:	add	x1, sp, #0x78
  419300:	orr	w0, w0, w2
  419304:	bl	438ce8 <argp_parse@@Base+0x55a8>
  419308:	mov	x2, #0x2a                  	// #42
  41930c:	mov	x1, x0
  419310:	add	x0, sp, #0x90
  419314:	bl	404370 <__strcpy_chk@plt>
  419318:	mov	x2, #0x2a                  	// #42
  41931c:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  419320:	add	x1, x1, #0x2f0
  419324:	add	x0, sp, #0x90
  419328:	bl	4047d0 <__strcat_chk@plt>
  41932c:	ldr	x2, [x19, #120]
  419330:	lsr	x0, x2, #12
  419334:	add	x1, sp, #0x78
  419338:	bfxil	x0, x2, #0, #8
  41933c:	bl	438ce8 <argp_parse@@Base+0x55a8>
  419340:	mov	x2, #0x2a                  	// #42
  419344:	mov	x1, x0
  419348:	add	x0, sp, #0x90
  41934c:	bl	4047d0 <__strcat_chk@plt>
  419350:	b	418f94 <wcrtomb@plt+0x14374>
  419354:	mov	w1, #0x2f                  	// #47
  419358:	bl	404690 <__overflow@plt>
  41935c:	b	419080 <wcrtomb@plt+0x14460>
  419360:	cmp	w0, #0x32
  419364:	b.eq	419484 <wcrtomb@plt+0x14864>  // b.none
  419368:	b.ls	4193c4 <wcrtomb@plt+0x147a4>  // b.plast
  41936c:	cmp	w0, #0x37
  419370:	b.ls	419420 <wcrtomb@plt+0x14800>  // b.plast
  419374:	cmp	w0, #0x44
  419378:	b.eq	419420 <wcrtomb@plt+0x14800>  // b.none
  41937c:	strb	w0, [sp, #96]
  419380:	strb	wzr, [sp, #97]
  419384:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  419388:	ldr	x21, [x0, #3864]
  41938c:	mov	w2, #0x5                   	// #5
  419390:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  419394:	add	x1, x1, #0xe20
  419398:	mov	x0, #0x0                   	// #0
  41939c:	bl	4049c0 <dcgettext@plt>
  4193a0:	mov	x20, x0
  4193a4:	add	x0, sp, #0x60
  4193a8:	bl	43f194 <argp_parse@@Base+0xba54>
  4193ac:	mov	x3, x0
  4193b0:	mov	x2, x20
  4193b4:	mov	w1, #0x1                   	// #1
  4193b8:	mov	x0, x21
  4193bc:	bl	404710 <__fprintf_chk@plt>
  4193c0:	b	419178 <wcrtomb@plt+0x14558>
  4193c4:	cmp	w0, #0x31
  4193c8:	b.ne	41940c <wcrtomb@plt+0x147ec>  // b.any
  4193cc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4193d0:	ldr	x21, [x0, #3864]
  4193d4:	mov	w2, #0x5                   	// #5
  4193d8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  4193dc:	add	x1, x1, #0xe10
  4193e0:	mov	x0, #0x0                   	// #0
  4193e4:	bl	4049c0 <dcgettext@plt>
  4193e8:	mov	x20, x0
  4193ec:	ldr	x0, [x19, #24]
  4193f0:	bl	43ee2c <argp_parse@@Base+0xb6ec>
  4193f4:	mov	x3, x0
  4193f8:	mov	x2, x20
  4193fc:	mov	w1, #0x1                   	// #1
  419400:	mov	x0, x21
  419404:	bl	404710 <__fprintf_chk@plt>
  419408:	b	419178 <wcrtomb@plt+0x14558>
  41940c:	cmp	w0, #0x32
  419410:	b.eq	41937c <wcrtomb@plt+0x1475c>  // b.none
  419414:	cbz	w0, 419420 <wcrtomb@plt+0x14800>
  419418:	cmp	w0, #0x30
  41941c:	b.ne	41937c <wcrtomb@plt+0x1475c>  // b.any
  419420:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  419424:	ldr	x0, [x0, #3864]
  419428:	ldr	x1, [x0, #40]
  41942c:	ldr	x2, [x0, #48]
  419430:	cmp	x1, x2
  419434:	b.cs	4194b0 <wcrtomb@plt+0x14890>  // b.hs, b.nlast
  419438:	add	x2, x1, #0x1
  41943c:	str	x2, [x0, #40]
  419440:	mov	w0, #0xa                   	// #10
  419444:	strb	w0, [x1]
  419448:	b	419178 <wcrtomb@plt+0x14558>
  41944c:	cmp	w0, #0x4c
  419450:	b.ne	41937c <wcrtomb@plt+0x1475c>  // b.any
  419454:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  419458:	ldr	x20, [x0, #3864]
  41945c:	mov	w2, #0x5                   	// #5
  419460:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  419464:	add	x1, x1, #0xe48
  419468:	mov	x0, #0x0                   	// #0
  41946c:	bl	4049c0 <dcgettext@plt>
  419470:	mov	x2, x0
  419474:	mov	w1, #0x1                   	// #1
  419478:	mov	x0, x20
  41947c:	bl	404710 <__fprintf_chk@plt>
  419480:	b	419178 <wcrtomb@plt+0x14558>
  419484:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  419488:	ldr	x20, [x0, #3864]
  41948c:	ldr	x0, [x19, #24]
  419490:	bl	43ee2c <argp_parse@@Base+0xb6ec>
  419494:	mov	x3, x0
  419498:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x12e64>
  41949c:	add	x2, x2, #0xe08
  4194a0:	mov	w1, #0x1                   	// #1
  4194a4:	mov	x0, x20
  4194a8:	bl	404710 <__fprintf_chk@plt>
  4194ac:	b	419178 <wcrtomb@plt+0x14558>
  4194b0:	mov	w1, #0xa                   	// #10
  4194b4:	bl	404690 <__overflow@plt>
  4194b8:	b	419178 <wcrtomb@plt+0x14558>
  4194bc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4194c0:	ldr	x20, [x0, #3864]
  4194c4:	mov	w2, #0x5                   	// #5
  4194c8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  4194cc:	add	x1, x1, #0xe38
  4194d0:	mov	x0, #0x0                   	// #0
  4194d4:	bl	4049c0 <dcgettext@plt>
  4194d8:	mov	x2, x0
  4194dc:	mov	w1, #0x1                   	// #1
  4194e0:	mov	x0, x20
  4194e4:	bl	404710 <__fprintf_chk@plt>
  4194e8:	b	419178 <wcrtomb@plt+0x14558>
  4194ec:	mov	x1, #0xc                   	// #12
  4194f0:	add	x0, x23, #0x171
  4194f4:	bl	418c14 <wcrtomb@plt+0x13ff4>
  4194f8:	add	x1, sp, #0x78
  4194fc:	bl	438ce8 <argp_parse@@Base+0x55a8>
  419500:	mov	x2, #0x2a                  	// #42
  419504:	mov	x1, x0
  419508:	add	x0, sp, #0x90
  41950c:	bl	404370 <__strcpy_chk@plt>
  419510:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  419514:	ldr	x20, [x0, #3864]
  419518:	mov	w2, #0x5                   	// #5
  41951c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  419520:	add	x1, x1, #0xe70
  419524:	mov	x0, #0x0                   	// #0
  419528:	bl	4049c0 <dcgettext@plt>
  41952c:	add	x3, sp, #0x90
  419530:	mov	x2, x0
  419534:	mov	w1, #0x1                   	// #1
  419538:	mov	x0, x20
  41953c:	bl	404710 <__fprintf_chk@plt>
  419540:	b	419178 <wcrtomb@plt+0x14558>
  419544:	sub	sp, sp, #0x3d0
  419548:	stp	x29, x30, [sp]
  41954c:	mov	x29, sp
  419550:	str	x19, [sp, #16]
  419554:	mov	x2, #0x200                 	// #512
  419558:	mov	w1, #0x0                   	// #0
  41955c:	add	x0, sp, #0x28
  419560:	bl	404420 <memset@plt>
  419564:	mov	w0, #0x56                  	// #86
  419568:	strb	w0, [sp, #196]
  41956c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  419570:	ldr	x0, [x0, #2464]
  419574:	cbz	x0, 419588 <wcrtomb@plt+0x14968>
  419578:	ldr	x1, [x0, #136]
  41957c:	str	x1, [sp, #176]
  419580:	ldr	w0, [x0, #144]
  419584:	str	w0, [sp, #184]
  419588:	add	x0, sp, #0x228
  41958c:	bl	42491c <wcrtomb@plt+0x1fcfc>
  419590:	add	x19, sp, #0x230
  419594:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x15e64>
  419598:	add	x1, x1, #0x340
  41959c:	mov	x0, x19
  4195a0:	bl	41a5bc <wcrtomb@plt+0x1599c>
  4195a4:	mov	w3, #0x0                   	// #0
  4195a8:	add	x2, sp, #0x24
  4195ac:	add	x1, sp, #0x228
  4195b0:	add	x0, sp, #0x28
  4195b4:	bl	4183b4 <wcrtomb@plt+0x13794>
  4195b8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4195bc:	ldr	x1, [x0, #3904]
  4195c0:	mov	x0, x19
  4195c4:	bl	41a5bc <wcrtomb@plt+0x1599c>
  4195c8:	mov	x2, #0x0                   	// #0
  4195cc:	add	x1, sp, #0x28
  4195d0:	add	x0, sp, #0x228
  4195d4:	bl	418dc0 <wcrtomb@plt+0x141a0>
  4195d8:	add	x0, sp, #0x228
  4195dc:	bl	4249a8 <wcrtomb@plt+0x1fd88>
  4195e0:	ldr	x19, [sp, #16]
  4195e4:	ldp	x29, x30, [sp]
  4195e8:	add	sp, sp, #0x3d0
  4195ec:	ret
  4195f0:	stp	x29, x30, [sp, #-48]!
  4195f4:	mov	x29, sp
  4195f8:	stp	x19, x20, [sp, #16]
  4195fc:	str	x21, [sp, #32]
  419600:	mov	x19, x0
  419604:	mov	x20, x1
  419608:	mov	x21, x2
  41960c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  419610:	ldr	w0, [x0, #3984]
  419614:	cmp	w0, #0x4
  419618:	b.eq	41963c <wcrtomb@plt+0x14a1c>  // b.none
  41961c:	mov	x2, x21
  419620:	mov	x1, x20
  419624:	mov	x0, x19
  419628:	bl	418dc0 <wcrtomb@plt+0x141a0>
  41962c:	ldp	x19, x20, [sp, #16]
  419630:	ldr	x21, [sp, #32]
  419634:	ldp	x29, x30, [sp], #48
  419638:	ret
  41963c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  419640:	ldrb	w0, [x0, #2509]
  419644:	cbnz	w0, 41961c <wcrtomb@plt+0x149fc>
  419648:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41964c:	ldr	x0, [x0, #3904]
  419650:	cbz	x0, 41961c <wcrtomb@plt+0x149fc>
  419654:	bl	419544 <wcrtomb@plt+0x14924>
  419658:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41965c:	mov	w1, #0x1                   	// #1
  419660:	strb	w1, [x0, #2509]
  419664:	b	41961c <wcrtomb@plt+0x149fc>
  419668:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  41966c:	ldr	w1, [x1, #580]
  419670:	cmp	w1, #0x1
  419674:	b.gt	41967c <wcrtomb@plt+0x14a5c>
  419678:	ret
  41967c:	stp	x29, x30, [sp, #-96]!
  419680:	mov	x29, sp
  419684:	stp	x19, x20, [sp, #16]
  419688:	stp	x21, x22, [sp, #32]
  41968c:	mov	x20, x0
  419690:	mov	w0, #0x64                  	// #100
  419694:	strb	w0, [sp, #80]
  419698:	add	x1, sp, #0x51
  41969c:	mov	w0, w2
  4196a0:	bl	4296cc <wcrtomb@plt+0x24aac>
  4196a4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4196a8:	ldrb	w0, [x0, #609]
  4196ac:	cbnz	w0, 419724 <wcrtomb@plt+0x14b04>
  4196b0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4196b4:	ldr	x22, [x0, #3864]
  4196b8:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  4196bc:	add	x1, x0, #0x880
  4196c0:	ldr	w19, [x1, #4]
  4196c4:	add	w19, w19, #0x1
  4196c8:	ldr	w0, [x0, #2176]
  4196cc:	add	w19, w19, w0
  4196d0:	mov	w2, #0x5                   	// #5
  4196d4:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  4196d8:	add	x1, x1, #0xe90
  4196dc:	mov	x0, #0x0                   	// #0
  4196e0:	bl	4049c0 <dcgettext@plt>
  4196e4:	mov	x21, x0
  4196e8:	mov	x0, x20
  4196ec:	bl	43ee2c <argp_parse@@Base+0xb6ec>
  4196f0:	mov	x6, x0
  4196f4:	mov	x5, x21
  4196f8:	mov	w4, w19
  4196fc:	add	x3, sp, #0x50
  419700:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x12e64>
  419704:	add	x2, x2, #0xea8
  419708:	mov	w1, #0x1                   	// #1
  41970c:	mov	x0, x22
  419710:	bl	404710 <__fprintf_chk@plt>
  419714:	ldp	x19, x20, [sp, #16]
  419718:	ldp	x21, x22, [sp, #32]
  41971c:	ldp	x29, x30, [sp], #96
  419720:	ret
  419724:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  419728:	ldr	x21, [x0, #3864]
  41972c:	mov	w2, #0x5                   	// #5
  419730:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  419734:	add	x1, x1, #0xde0
  419738:	mov	x0, #0x0                   	// #0
  41973c:	bl	4049c0 <dcgettext@plt>
  419740:	mov	x19, x0
  419744:	bl	405818 <wcrtomb@plt+0xbf8>
  419748:	add	x1, sp, #0x38
  41974c:	bl	438ce8 <argp_parse@@Base+0x55a8>
  419750:	mov	x3, x0
  419754:	mov	x2, x19
  419758:	mov	w1, #0x1                   	// #1
  41975c:	mov	x0, x21
  419760:	bl	404710 <__fprintf_chk@plt>
  419764:	b	4196b0 <wcrtomb@plt+0x14a90>
  419768:	stp	x29, x30, [sp, #-32]!
  41976c:	mov	x29, sp
  419770:	stp	x19, x20, [sp, #16]
  419774:	mov	x19, x0
  419778:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41977c:	ldrb	w0, [x0, #864]
  419780:	cbnz	w0, 4197d0 <wcrtomb@plt+0x14bb0>
  419784:	mov	x0, x19
  419788:	bl	405430 <wcrtomb@plt+0x810>
  41978c:	cmp	x19, #0x0
  419790:	b.le	4197c4 <wcrtomb@plt+0x14ba4>
  419794:	sub	x20, x19, #0x200
  419798:	sub	x0, x19, #0x1
  41979c:	and	x0, x0, #0xfffffffffffffe00
  4197a0:	sub	x20, x20, x0
  4197a4:	bl	406d94 <wcrtomb@plt+0x2174>
  4197a8:	cbz	x0, 4197f0 <wcrtomb@plt+0x14bd0>
  4197ac:	bl	405884 <wcrtomb@plt+0xc64>
  4197b0:	sub	x19, x19, #0x200
  4197b4:	mov	x0, x19
  4197b8:	bl	405430 <wcrtomb@plt+0x810>
  4197bc:	cmp	x19, x20
  4197c0:	b.ne	4197a4 <wcrtomb@plt+0x14b84>  // b.any
  4197c4:	ldp	x19, x20, [sp, #16]
  4197c8:	ldp	x29, x30, [sp], #32
  4197cc:	ret
  4197d0:	mov	x0, x19
  4197d4:	bl	405c90 <wcrtomb@plt+0x1070>
  4197d8:	tbnz	x0, #63, 4197e4 <wcrtomb@plt+0x14bc4>
  4197dc:	sub	x19, x19, x0, lsl #9
  4197e0:	b	419784 <wcrtomb@plt+0x14b64>
  4197e4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4197e8:	strb	wzr, [x0, #864]
  4197ec:	b	419784 <wcrtomb@plt+0x14b64>
  4197f0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4197f4:	ldr	x0, [x0, #944]
  4197f8:	cbz	x0, 419800 <wcrtomb@plt+0x14be0>
  4197fc:	blr	x0
  419800:	mov	w2, #0x5                   	// #5
  419804:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  419808:	add	x1, x1, #0x380
  41980c:	mov	x0, #0x0                   	// #0
  419810:	bl	4049c0 <dcgettext@plt>
  419814:	mov	x2, x0
  419818:	mov	w1, #0x0                   	// #0
  41981c:	mov	w0, #0x0                   	// #0
  419820:	bl	404050 <error@plt>
  419824:	bl	40e5ac <wcrtomb@plt+0x998c>
  419828:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41982c:	ldrb	w0, [x0, #409]
  419830:	cbz	w0, 419838 <wcrtomb@plt+0x14c18>
  419834:	ret
  419838:	stp	x29, x30, [sp, #-32]!
  41983c:	mov	x29, sp
  419840:	stp	x19, x20, [sp, #16]
  419844:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  419848:	ldr	x0, [x0, #4008]
  41984c:	ldrb	w20, [x0, #156]
  419850:	bl	405884 <wcrtomb@plt+0xc64>
  419854:	adrp	x19, 481000 <argp_program_version_hook@@Base+0x298>
  419858:	add	x19, x19, #0x20
  41985c:	mov	x0, x19
  419860:	bl	4053e8 <wcrtomb@plt+0x7c8>
  419864:	ldrb	w0, [x19, #272]
  419868:	cbnz	w0, 419884 <wcrtomb@plt+0x14c64>
  41986c:	cmp	w20, #0x35
  419870:	b.ne	419890 <wcrtomb@plt+0x14c70>  // b.any
  419874:	bl	405408 <wcrtomb@plt+0x7e8>
  419878:	ldp	x19, x20, [sp, #16]
  41987c:	ldp	x29, x30, [sp], #32
  419880:	ret
  419884:	mov	x0, x19
  419888:	bl	420724 <wcrtomb@plt+0x1bb04>
  41988c:	b	419874 <wcrtomb@plt+0x14c54>
  419890:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  419894:	ldr	x0, [x0, #168]
  419898:	bl	419768 <wcrtomb@plt+0x14b48>
  41989c:	b	419874 <wcrtomb@plt+0x14c54>
  4198a0:	stp	x29, x30, [sp, #-112]!
  4198a4:	mov	x29, sp
  4198a8:	stp	x19, x20, [sp, #16]
  4198ac:	stp	x21, x22, [sp, #32]
  4198b0:	stp	x23, x24, [sp, #48]
  4198b4:	mov	x23, x0
  4198b8:	bl	418150 <wcrtomb@plt+0x13530>
  4198bc:	bl	41d73c <wcrtomb@plt+0x18b1c>
  4198c0:	mov	w0, #0x0                   	// #0
  4198c4:	bl	407ed4 <wcrtomb@plt+0x32b4>
  4198c8:	mov	w24, #0x0                   	// #0
  4198cc:	adrp	x20, 481000 <argp_program_version_hook@@Base+0x298>
  4198d0:	add	x20, x20, #0x20
  4198d4:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4198d8:	add	x21, x21, #0xfa8
  4198dc:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  4198e0:	add	x22, x1, #0x261
  4198e4:	mov	x0, x20
  4198e8:	bl	4249a8 <wcrtomb@plt+0x1fd88>
  4198ec:	mov	w2, #0x0                   	// #0
  4198f0:	mov	x1, x20
  4198f4:	mov	x0, x21
  4198f8:	bl	4187e4 <wcrtomb@plt+0x13bc4>
  4198fc:	mov	w19, w0
  419900:	cmp	w0, #0x4
  419904:	b.eq	419c04 <wcrtomb@plt+0x14fe4>  // b.none
  419908:	b.hi	4199f8 <wcrtomb@plt+0x14dd8>  // b.pmore
  41990c:	cmp	w0, #0x3
  419910:	b.eq	419b24 <wcrtomb@plt+0x14f04>  // b.none
  419914:	cmp	w0, #0x1
  419918:	b.ne	4199cc <wcrtomb@plt+0x14dac>  // b.any
  41991c:	mov	w3, #0x1                   	// #1
  419920:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x3ee64>
  419924:	add	x2, x2, #0xf90
  419928:	mov	x1, x20
  41992c:	ldr	x0, [x21]
  419930:	bl	4183b4 <wcrtomb@plt+0x13794>
  419934:	ldr	x0, [x20, #8]
  419938:	bl	41dbd8 <wcrtomb@plt+0x18fb8>
  41993c:	and	w0, w0, #0xff
  419940:	cbz	w0, 4199a0 <wcrtomb@plt+0x14d80>
  419944:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  419948:	ldr	x0, [x0, #4080]
  41994c:	tbnz	x0, #63, 41998c <wcrtomb@plt+0x14d6c>
  419950:	ldr	x0, [x21]
  419954:	mov	x1, #0xc                   	// #12
  419958:	add	x0, x0, #0x88
  41995c:	bl	418124 <wcrtomb@plt+0x13504>
  419960:	str	x0, [x20, #232]
  419964:	str	xzr, [x20, #240]
  419968:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41996c:	ldr	x1, [x1, #4072]
  419970:	cmp	x0, x1
  419974:	b.lt	4199a0 <wcrtomb@plt+0x14d80>  // b.tstop
  419978:	b.gt	41998c <wcrtomb@plt+0x14d6c>
  41997c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  419980:	ldr	x0, [x0, #4080]
  419984:	neg	w0, w0
  419988:	tbnz	w0, #31, 4199a0 <wcrtomb@plt+0x14d80>
  41998c:	ldr	x1, [x20, #392]
  419990:	ldr	x0, [x20, #8]
  419994:	bl	40ec08 <wcrtomb@plt+0x9fe8>
  419998:	and	w0, w0, #0xff
  41999c:	cbz	w0, 419b08 <wcrtomb@plt+0x14ee8>
  4199a0:	ldr	x0, [x21]
  4199a4:	ldrb	w0, [x0, #156]
  4199a8:	cmp	w0, #0x4d
  4199ac:	b.eq	419b08 <wcrtomb@plt+0x14ee8>  // b.none
  4199b0:	cmp	w0, #0x56
  4199b4:	b.eq	419b08 <wcrtomb@plt+0x14ee8>  // b.none
  4199b8:	cmp	w0, #0x35
  4199bc:	b.eq	419ab4 <wcrtomb@plt+0x14e94>  // b.none
  4199c0:	bl	419828 <wcrtomb@plt+0x14c08>
  4199c4:	mov	w24, w19
  4199c8:	b	419aa0 <wcrtomb@plt+0x14e80>
  4199cc:	tst	w0, #0xfffffffd
  4199d0:	b.eq	4199f0 <wcrtomb@plt+0x14dd0>  // b.none
  4199d4:	bl	4076d0 <wcrtomb@plt+0x2ab0>
  4199d8:	bl	41dddc <wcrtomb@plt+0x191bc>
  4199dc:	ldp	x19, x20, [sp, #16]
  4199e0:	ldp	x21, x22, [sp, #32]
  4199e4:	ldp	x23, x24, [sp, #48]
  4199e8:	ldp	x29, x30, [sp], #112
  4199ec:	ret
  4199f0:	stp	x25, x26, [sp, #64]
  4199f4:	bl	404660 <abort@plt>
  4199f8:	cmp	w0, #0x5
  4199fc:	b.ne	4199d4 <wcrtomb@plt+0x14db4>  // b.any
  419a00:	ldr	x0, [x21]
  419a04:	bl	405884 <wcrtomb@plt+0xc64>
  419a08:	cmp	w24, #0x1
  419a0c:	b.eq	419a54 <wcrtomb@plt+0x14e34>  // b.none
  419a10:	cbnz	w24, 419cbc <wcrtomb@plt+0x1509c>
  419a14:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  419a18:	ldr	x0, [x0, #944]
  419a1c:	cbz	x0, 419a24 <wcrtomb@plt+0x14e04>
  419a20:	blr	x0
  419a24:	mov	w2, #0x5                   	// #5
  419a28:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  419a2c:	add	x1, x1, #0x960
  419a30:	mov	x0, #0x0                   	// #0
  419a34:	bl	4049c0 <dcgettext@plt>
  419a38:	mov	x2, x0
  419a3c:	mov	w1, #0x0                   	// #0
  419a40:	mov	w0, #0x0                   	// #0
  419a44:	bl	404050 <error@plt>
  419a48:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  419a4c:	mov	w1, #0x2                   	// #2
  419a50:	str	w1, [x0, #3392]
  419a54:	ldrb	w0, [x22]
  419a58:	cbnz	w0, 419c54 <wcrtomb@plt+0x15034>
  419a5c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  419a60:	ldr	x0, [x0, #944]
  419a64:	cbz	x0, 419a6c <wcrtomb@plt+0x14e4c>
  419a68:	blr	x0
  419a6c:	mov	w2, #0x5                   	// #5
  419a70:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  419a74:	add	x1, x1, #0xa38
  419a78:	mov	x0, #0x0                   	// #0
  419a7c:	bl	4049c0 <dcgettext@plt>
  419a80:	mov	x2, x0
  419a84:	mov	w1, #0x0                   	// #0
  419a88:	mov	w0, #0x0                   	// #0
  419a8c:	bl	404050 <error@plt>
  419a90:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  419a94:	mov	w1, #0x2                   	// #2
  419a98:	str	w1, [x0, #3392]
  419a9c:	mov	w24, w19
  419aa0:	mov	x0, x20
  419aa4:	bl	41dd2c <wcrtomb@plt+0x1910c>
  419aa8:	and	w1, w0, #0xff
  419aac:	cbz	w1, 4198e4 <wcrtomb@plt+0x14cc4>
  419ab0:	b	4199d4 <wcrtomb@plt+0x14db4>
  419ab4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  419ab8:	ldrb	w0, [x0, #634]
  419abc:	cbz	w0, 4199c0 <wcrtomb@plt+0x14da0>
  419ac0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  419ac4:	ldr	x0, [x0, #944]
  419ac8:	cbz	x0, 419ad0 <wcrtomb@plt+0x14eb0>
  419acc:	blr	x0
  419ad0:	mov	w2, #0x5                   	// #5
  419ad4:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  419ad8:	add	x1, x1, #0xeb8
  419adc:	mov	x0, #0x0                   	// #0
  419ae0:	bl	4049c0 <dcgettext@plt>
  419ae4:	mov	x24, x0
  419ae8:	ldr	x0, [x20, #8]
  419aec:	bl	43efc4 <argp_parse@@Base+0xb884>
  419af0:	mov	x3, x0
  419af4:	mov	x2, x24
  419af8:	mov	w1, #0x0                   	// #0
  419afc:	mov	w0, #0x0                   	// #0
  419b00:	bl	404050 <error@plt>
  419b04:	b	4199c0 <wcrtomb@plt+0x14da0>
  419b08:	ldr	x0, [x21]
  419b0c:	mov	x1, x20
  419b10:	ldrb	w0, [x0, #156]
  419b14:	bl	4181a4 <wcrtomb@plt+0x13584>
  419b18:	blr	x23
  419b1c:	mov	w24, w19
  419b20:	b	419aa0 <wcrtomb@plt+0x14e80>
  419b24:	ldrb	w0, [x22]
  419b28:	cbnz	w0, 419bb8 <wcrtomb@plt+0x14f98>
  419b2c:	ldr	x0, [x21]
  419b30:	bl	405884 <wcrtomb@plt+0xc64>
  419b34:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  419b38:	ldrb	w0, [x0, #13]
  419b3c:	cbnz	w0, 419aa0 <wcrtomb@plt+0x14e80>
  419b40:	mov	w2, #0x0                   	// #0
  419b44:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  419b48:	add	x1, x1, #0x20
  419b4c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  419b50:	add	x0, x0, #0xfa8
  419b54:	bl	4187e4 <wcrtomb@plt+0x13bc4>
  419b58:	cmp	w0, #0x3
  419b5c:	b.eq	4199d4 <wcrtomb@plt+0x14db4>  // b.none
  419b60:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  419b64:	ldr	w0, [x0, #408]
  419b68:	tbz	w0, #0, 4199d4 <wcrtomb@plt+0x14db4>
  419b6c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  419b70:	ldr	x0, [x0, #944]
  419b74:	cbz	x0, 419b7c <wcrtomb@plt+0x14f5c>
  419b78:	blr	x0
  419b7c:	mov	w2, #0x5                   	// #5
  419b80:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  419b84:	add	x1, x1, #0x5f0
  419b88:	mov	x0, #0x0                   	// #0
  419b8c:	bl	4049c0 <dcgettext@plt>
  419b90:	mov	x19, x0
  419b94:	bl	405818 <wcrtomb@plt+0xbf8>
  419b98:	add	x1, sp, #0x58
  419b9c:	bl	438ce8 <argp_parse@@Base+0x55a8>
  419ba0:	mov	x3, x0
  419ba4:	mov	x2, x19
  419ba8:	mov	w1, #0x0                   	// #0
  419bac:	mov	w0, #0x0                   	// #0
  419bb0:	bl	404050 <error@plt>
  419bb4:	b	4199d4 <wcrtomb@plt+0x14db4>
  419bb8:	stp	x25, x26, [sp, #64]
  419bbc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  419bc0:	ldr	x25, [x0, #3864]
  419bc4:	mov	w2, #0x5                   	// #5
  419bc8:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  419bcc:	add	x1, x1, #0xec8
  419bd0:	mov	x0, #0x0                   	// #0
  419bd4:	bl	4049c0 <dcgettext@plt>
  419bd8:	mov	x19, x0
  419bdc:	bl	405818 <wcrtomb@plt+0xbf8>
  419be0:	add	x1, sp, #0x58
  419be4:	bl	438ce8 <argp_parse@@Base+0x55a8>
  419be8:	mov	x3, x0
  419bec:	mov	x2, x19
  419bf0:	mov	w1, #0x1                   	// #1
  419bf4:	mov	x0, x25
  419bf8:	bl	404710 <__fprintf_chk@plt>
  419bfc:	ldp	x25, x26, [sp, #64]
  419c00:	b	419b2c <wcrtomb@plt+0x14f0c>
  419c04:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  419c08:	ldrb	w0, [x0, #609]
  419c0c:	cbz	w0, 4199d4 <wcrtomb@plt+0x14db4>
  419c10:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  419c14:	ldr	x20, [x0, #3864]
  419c18:	mov	w2, #0x5                   	// #5
  419c1c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  419c20:	add	x1, x1, #0xee8
  419c24:	mov	x0, #0x0                   	// #0
  419c28:	bl	4049c0 <dcgettext@plt>
  419c2c:	mov	x19, x0
  419c30:	bl	405818 <wcrtomb@plt+0xbf8>
  419c34:	add	x1, sp, #0x58
  419c38:	bl	438ce8 <argp_parse@@Base+0x55a8>
  419c3c:	mov	x3, x0
  419c40:	mov	x2, x19
  419c44:	mov	w1, #0x1                   	// #1
  419c48:	mov	x0, x20
  419c4c:	bl	404710 <__fprintf_chk@plt>
  419c50:	b	4199d4 <wcrtomb@plt+0x14db4>
  419c54:	stp	x25, x26, [sp, #64]
  419c58:	bl	405818 <wcrtomb@plt+0xbf8>
  419c5c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  419c60:	ldr	x1, [x1, #4000]
  419c64:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x3ee64>
  419c68:	ldr	x25, [x2, #4016]
  419c6c:	add	x1, x1, x25
  419c70:	sub	x25, x0, x1
  419c74:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  419c78:	ldr	x26, [x0, #3864]
  419c7c:	mov	w2, #0x5                   	// #5
  419c80:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  419c84:	add	x1, x1, #0xde0
  419c88:	mov	x0, #0x0                   	// #0
  419c8c:	bl	4049c0 <dcgettext@plt>
  419c90:	mov	x24, x0
  419c94:	add	x1, sp, #0x58
  419c98:	mov	x0, x25
  419c9c:	bl	438ce8 <argp_parse@@Base+0x55a8>
  419ca0:	mov	x3, x0
  419ca4:	mov	x2, x24
  419ca8:	mov	w1, #0x1                   	// #1
  419cac:	mov	x0, x26
  419cb0:	bl	404710 <__fprintf_chk@plt>
  419cb4:	ldp	x25, x26, [sp, #64]
  419cb8:	b	419a5c <wcrtomb@plt+0x14e3c>
  419cbc:	mov	w24, w19
  419cc0:	b	419aa0 <wcrtomb@plt+0x14e80>
  419cc4:	stp	x29, x30, [sp, #-32]!
  419cc8:	mov	x29, sp
  419ccc:	bl	405818 <wcrtomb@plt+0xbf8>
  419cd0:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  419cd4:	ldr	w1, [x1, #580]
  419cd8:	cbnz	w1, 419ce8 <wcrtomb@plt+0x150c8>
  419cdc:	bl	419828 <wcrtomb@plt+0x14c08>
  419ce0:	ldp	x29, x30, [sp], #32
  419ce4:	ret
  419ce8:	mov	x2, x0
  419cec:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  419cf0:	ldr	x1, [x0, #4008]
  419cf4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  419cf8:	add	x0, x0, #0x20
  419cfc:	bl	4195f0 <wcrtomb@plt+0x149d0>
  419d00:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  419d04:	ldrb	w0, [x0, #4065]
  419d08:	cbz	w0, 419cdc <wcrtomb@plt+0x150bc>
  419d0c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  419d10:	ldr	w0, [x0, #580]
  419d14:	cmp	w0, #0x2
  419d18:	b.le	419cdc <wcrtomb@plt+0x150bc>
  419d1c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  419d20:	add	x0, x0, #0x20
  419d24:	bl	416eec <wcrtomb@plt+0x122cc>
  419d28:	and	w0, w0, #0xff
  419d2c:	cbz	w0, 419cdc <wcrtomb@plt+0x150bc>
  419d30:	str	x19, [sp, #16]
  419d34:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  419d38:	ldr	x19, [x0, #416]
  419d3c:	mov	x0, x19
  419d40:	bl	4157f0 <wcrtomb@plt+0x10bd0>
  419d44:	mov	x1, x0
  419d48:	mov	x0, x19
  419d4c:	bl	417820 <wcrtomb@plt+0x12c00>
  419d50:	ldr	x19, [sp, #16]
  419d54:	b	419cdc <wcrtomb@plt+0x150bc>
  419d58:	stp	x29, x30, [sp, #-32]!
  419d5c:	mov	x29, sp
  419d60:	bl	418150 <wcrtomb@plt+0x13530>
  419d64:	bl	41d73c <wcrtomb@plt+0x18b1c>
  419d68:	mov	w0, #0x0                   	// #0
  419d6c:	bl	407ed4 <wcrtomb@plt+0x32b4>
  419d70:	mov	w2, #0x0                   	// #0
  419d74:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  419d78:	add	x1, x1, #0x20
  419d7c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  419d80:	add	x0, x0, #0xfa8
  419d84:	bl	4187e4 <wcrtomb@plt+0x13bc4>
  419d88:	cmp	w0, #0x1
  419d8c:	b.eq	419da0 <wcrtomb@plt+0x15180>  // b.none
  419d90:	bl	4076d0 <wcrtomb@plt+0x2ab0>
  419d94:	bl	41df68 <wcrtomb@plt+0x19348>
  419d98:	ldp	x29, x30, [sp], #32
  419d9c:	ret
  419da0:	str	x19, [sp, #16]
  419da4:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x3ee64>
  419da8:	mov	w3, #0x0                   	// #0
  419dac:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x3ee64>
  419db0:	add	x2, x2, #0xf90
  419db4:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  419db8:	add	x1, x1, #0x20
  419dbc:	ldr	x0, [x19, #4008]
  419dc0:	bl	4183b4 <wcrtomb@plt+0x13794>
  419dc4:	ldr	x1, [x19, #4008]
  419dc8:	ldrb	w0, [x1, #156]
  419dcc:	cmp	w0, #0x56
  419dd0:	b.eq	419e14 <wcrtomb@plt+0x151f4>  // b.none
  419dd4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  419dd8:	ldr	x0, [x0, #3904]
  419ddc:	cbz	x0, 419e54 <wcrtomb@plt+0x15234>
  419de0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  419de4:	ldr	w0, [x0, #580]
  419de8:	cbnz	w0, 419e28 <wcrtomb@plt+0x15208>
  419dec:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  419df0:	ldr	x0, [x0, #3904]
  419df4:	bl	41dbd8 <wcrtomb@plt+0x18fb8>
  419df8:	and	w0, w0, #0xff
  419dfc:	cbnz	w0, 419e5c <wcrtomb@plt+0x1523c>
  419e00:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  419e04:	ldrb	w0, [x0, #12]
  419e08:	cbnz	w0, 419e30 <wcrtomb@plt+0x15210>
  419e0c:	ldr	x19, [sp, #16]
  419e10:	b	419d90 <wcrtomb@plt+0x15170>
  419e14:	mov	x2, #0x64                  	// #100
  419e18:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  419e1c:	add	x0, x0, #0xf40
  419e20:	bl	41a5f8 <wcrtomb@plt+0x159d8>
  419e24:	b	419dd4 <wcrtomb@plt+0x151b4>
  419e28:	bl	419544 <wcrtomb@plt+0x14924>
  419e2c:	b	419dec <wcrtomb@plt+0x151cc>
  419e30:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  419e34:	ldr	x0, [x0, #3904]
  419e38:	bl	4069cc <wcrtomb@plt+0x1dac>
  419e3c:	mov	x19, x0
  419e40:	bl	41dbd8 <wcrtomb@plt+0x18fb8>
  419e44:	mov	x0, x19
  419e48:	bl	4047c0 <free@plt>
  419e4c:	ldr	x19, [sp, #16]
  419e50:	b	419d90 <wcrtomb@plt+0x15170>
  419e54:	ldr	x19, [sp, #16]
  419e58:	b	419d90 <wcrtomb@plt+0x15170>
  419e5c:	ldr	x19, [sp, #16]
  419e60:	b	419d90 <wcrtomb@plt+0x15170>
  419e64:	ldr	x0, [x0]
  419e68:	udiv	x2, x0, x1
  419e6c:	msub	x0, x2, x1, x0
  419e70:	ret
  419e74:	ldr	x2, [x0]
  419e78:	ldr	x0, [x1]
  419e7c:	cmp	x2, x0
  419e80:	cset	w0, eq  // eq = none
  419e84:	ret
  419e88:	stp	x29, x30, [sp, #-16]!
  419e8c:	mov	x29, sp
  419e90:	bl	404450 <getpwnam@plt>
  419e94:	cbz	x0, 419ea4 <wcrtomb@plt+0x15284>
  419e98:	ldr	w0, [x0, #16]
  419e9c:	ldp	x29, x30, [sp], #16
  419ea0:	ret
  419ea4:	mov	x0, #0xffffffffffffffff    	// #-1
  419ea8:	b	419e9c <wcrtomb@plt+0x1527c>
  419eac:	stp	x29, x30, [sp, #-96]!
  419eb0:	mov	x29, sp
  419eb4:	stp	x19, x20, [sp, #16]
  419eb8:	stp	x21, x22, [sp, #32]
  419ebc:	stp	x23, x24, [sp, #48]
  419ec0:	str	x25, [sp, #64]
  419ec4:	mov	x22, x0
  419ec8:	mov	x20, x1
  419ecc:	mov	x25, x2
  419ed0:	mov	x21, x3
  419ed4:	mov	x23, x4
  419ed8:	mov	w24, w5
  419edc:	bl	404ad0 <__errno_location@plt>
  419ee0:	mov	x19, x0
  419ee4:	str	wzr, [x0]
  419ee8:	mov	w3, #0x0                   	// #0
  419eec:	mov	w2, #0xa                   	// #10
  419ef0:	add	x1, sp, #0x58
  419ef4:	mov	x0, x20
  419ef8:	bl	4044c0 <__strtoul_internal@plt>
  419efc:	mov	x6, x0
  419f00:	ldr	x0, [sp, #88]
  419f04:	ldrb	w0, [x0]
  419f08:	cbnz	w0, 419f38 <wcrtomb@plt+0x15318>
  419f0c:	ldr	w0, [x19]
  419f10:	cbnz	w0, 419f38 <wcrtomb@plt+0x15318>
  419f14:	cmp	x21, x6
  419f18:	b.cc	419f74 <wcrtomb@plt+0x15354>  // b.lo, b.ul, b.last
  419f1c:	str	x6, [x22]
  419f20:	ldp	x19, x20, [sp, #16]
  419f24:	ldp	x21, x22, [sp, #32]
  419f28:	ldp	x23, x24, [sp, #48]
  419f2c:	ldr	x25, [sp, #64]
  419f30:	ldp	x29, x30, [sp], #96
  419f34:	ret
  419f38:	mov	w2, #0x5                   	// #5
  419f3c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  419f40:	add	x1, x1, #0xf48
  419f44:	mov	x0, #0x0                   	// #0
  419f48:	bl	4049c0 <dcgettext@plt>
  419f4c:	mov	x6, x20
  419f50:	mov	x5, x25
  419f54:	mov	w4, w24
  419f58:	mov	x3, x23
  419f5c:	mov	x2, x0
  419f60:	mov	w1, #0x0                   	// #0
  419f64:	mov	w0, #0x0                   	// #0
  419f68:	bl	404050 <error@plt>
  419f6c:	mov	w0, #0xffffffff            	// #-1
  419f70:	b	419f20 <wcrtomb@plt+0x15300>
  419f74:	mov	w2, #0x5                   	// #5
  419f78:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  419f7c:	add	x1, x1, #0xf60
  419f80:	mov	x0, #0x0                   	// #0
  419f84:	bl	4049c0 <dcgettext@plt>
  419f88:	mov	x6, x20
  419f8c:	mov	x5, x25
  419f90:	mov	w4, w24
  419f94:	mov	x3, x23
  419f98:	mov	x2, x0
  419f9c:	mov	w1, #0x0                   	// #0
  419fa0:	mov	w0, #0x0                   	// #0
  419fa4:	bl	404050 <error@plt>
  419fa8:	mov	w0, #0xffffffff            	// #-1
  419fac:	b	419f20 <wcrtomb@plt+0x15300>
  419fb0:	stp	x29, x30, [sp, #-384]!
  419fb4:	mov	x29, sp
  419fb8:	stp	x19, x20, [sp, #16]
  419fbc:	stp	x21, x22, [sp, #32]
  419fc0:	stp	x23, x24, [sp, #48]
  419fc4:	stp	x25, x26, [sp, #64]
  419fc8:	stp	x27, x28, [sp, #80]
  419fcc:	mov	x26, x0
  419fd0:	mov	x25, x1
  419fd4:	mov	x24, x2
  419fd8:	mov	x27, x3
  419fdc:	str	x4, [sp, #96]
  419fe0:	str	xzr, [sp, #376]
  419fe4:	str	xzr, [sp, #368]
  419fe8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  419fec:	add	x1, x1, #0xc38
  419ff0:	mov	x0, x25
  419ff4:	bl	4042e0 <fopen@plt>
  419ff8:	cbz	x0, 41a028 <wcrtomb@plt+0x15408>
  419ffc:	mov	x23, x0
  41a000:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x12e64>
  41a004:	add	x0, x0, #0xf80
  41a008:	str	x0, [sp, #200]
  41a00c:	mov	w28, #0x0                   	// #0
  41a010:	mov	w20, #0x0                   	// #0
  41a014:	mov	w19, #0x8e44                	// #36420
  41a018:	adrp	x0, 419000 <wcrtomb@plt+0x143e0>
  41a01c:	add	x0, x0, #0xe74
  41a020:	str	x0, [sp, #104]
  41a024:	b	41a184 <wcrtomb@plt+0x15564>
  41a028:	mov	x0, x25
  41a02c:	bl	429bbc <wcrtomb@plt+0x24f9c>
  41a030:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41a034:	ldr	x0, [x0, #944]
  41a038:	cbz	x0, 41a040 <wcrtomb@plt+0x15420>
  41a03c:	blr	x0
  41a040:	mov	w2, #0x5                   	// #5
  41a044:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  41a048:	add	x1, x1, #0xf88
  41a04c:	mov	x0, #0x0                   	// #0
  41a050:	bl	4049c0 <dcgettext@plt>
  41a054:	mov	x19, x0
  41a058:	add	x0, sp, #0x88
  41a05c:	bl	42c118 <wcrtomb@plt+0x274f8>
  41a060:	mov	x5, x0
  41a064:	mov	w4, w20
  41a068:	mov	x3, x25
  41a06c:	mov	x2, x19
  41a070:	mov	w1, #0x0                   	// #0
  41a074:	mov	w0, #0x0                   	// #0
  41a078:	bl	404050 <error@plt>
  41a07c:	bl	40e5ac <wcrtomb@plt+0x998c>
  41a080:	mov	w2, #0x5                   	// #5
  41a084:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  41a088:	add	x1, x1, #0xfa8
  41a08c:	mov	x0, #0x0                   	// #0
  41a090:	bl	4049c0 <dcgettext@plt>
  41a094:	mov	w4, w20
  41a098:	mov	x3, x25
  41a09c:	mov	x2, x0
  41a0a0:	mov	w1, #0x0                   	// #0
  41a0a4:	mov	w0, #0x0                   	// #0
  41a0a8:	bl	404050 <error@plt>
  41a0ac:	mov	w28, #0x1                   	// #1
  41a0b0:	b	41a180 <wcrtomb@plt+0x15560>
  41a0b4:	mov	w5, w20
  41a0b8:	mov	x4, x25
  41a0bc:	ldr	x3, [sp, #96]
  41a0c0:	mov	x2, x27
  41a0c4:	add	x1, x0, #0x1
  41a0c8:	add	x0, sp, #0x78
  41a0cc:	bl	419eac <wcrtomb@plt+0x1528c>
  41a0d0:	cbz	w0, 41a1f0 <wcrtomb@plt+0x155d0>
  41a0d4:	mov	w28, #0x1                   	// #1
  41a0d8:	b	41a180 <wcrtomb@plt+0x15560>
  41a0dc:	mov	w2, #0x5                   	// #5
  41a0e0:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  41a0e4:	add	x1, x1, #0xfc0
  41a0e8:	mov	x0, #0x0                   	// #0
  41a0ec:	bl	4049c0 <dcgettext@plt>
  41a0f0:	ldr	x1, [sp, #144]
  41a0f4:	ldr	x6, [x1]
  41a0f8:	mov	x5, x27
  41a0fc:	mov	w4, w20
  41a100:	mov	x3, x25
  41a104:	mov	x2, x0
  41a108:	mov	w1, #0x0                   	// #0
  41a10c:	mov	w0, #0x0                   	// #0
  41a110:	bl	404050 <error@plt>
  41a114:	mov	w28, #0x1                   	// #1
  41a118:	b	41a180 <wcrtomb@plt+0x15560>
  41a11c:	ldrb	w0, [x22]
  41a120:	cmp	w0, #0x2b
  41a124:	b.eq	41a25c <wcrtomb@plt+0x1563c>  // b.none
  41a128:	mov	x0, x22
  41a12c:	blr	x24
  41a130:	str	x0, [sp, #128]
  41a134:	cmn	x0, #0x1
  41a138:	b.eq	41a29c <wcrtomb@plt+0x1567c>  // b.none
  41a13c:	mov	x0, #0x18                  	// #24
  41a140:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  41a144:	mov	x21, x0
  41a148:	ldr	x0, [sp, #120]
  41a14c:	str	x0, [x21]
  41a150:	ldr	x0, [sp, #128]
  41a154:	str	x0, [x21, #8]
  41a158:	mov	x0, x22
  41a15c:	bl	440154 <argp_parse@@Base+0xca14>
  41a160:	mov	x19, x0
  41a164:	str	x19, [x21, #16]
  41a168:	ldr	x0, [x26]
  41a16c:	cbz	x0, 41a2dc <wcrtomb@plt+0x156bc>
  41a170:	mov	x1, x21
  41a174:	ldr	x0, [x26]
  41a178:	bl	4381cc <argp_parse@@Base+0x4a8c>
  41a17c:	cbz	x0, 41a2fc <wcrtomb@plt+0x156dc>
  41a180:	mov	w19, #0x8e4c                	// #36428
  41a184:	mov	x3, x23
  41a188:	mov	w2, #0xa                   	// #10
  41a18c:	add	x1, sp, #0x170
  41a190:	add	x0, sp, #0x178
  41a194:	bl	404b40 <__getdelim@plt>
  41a198:	cmp	x0, #0x0
  41a19c:	b.le	41a310 <wcrtomb@plt+0x156f0>
  41a1a0:	add	w20, w20, #0x1
  41a1a4:	mov	w2, w19
  41a1a8:	add	x1, sp, #0x88
  41a1ac:	ldr	x0, [sp, #376]
  41a1b0:	bl	42e010 <wcrtomb@plt+0x293f0>
  41a1b4:	cbnz	w0, 41a030 <wcrtomb@plt+0x15410>
  41a1b8:	ldr	x0, [sp, #136]
  41a1bc:	cbz	x0, 41a180 <wcrtomb@plt+0x15560>
  41a1c0:	cmp	x0, #0x2
  41a1c4:	b.ne	41a080 <wcrtomb@plt+0x15460>  // b.any
  41a1c8:	ldr	x0, [sp, #144]
  41a1cc:	ldr	x0, [x0]
  41a1d0:	ldrb	w1, [x0]
  41a1d4:	cmp	w1, #0x2b
  41a1d8:	b.eq	41a0b4 <wcrtomb@plt+0x15494>  // b.none
  41a1dc:	cbz	x24, 41a1f0 <wcrtomb@plt+0x155d0>
  41a1e0:	blr	x24
  41a1e4:	str	x0, [sp, #120]
  41a1e8:	cmn	x0, #0x1
  41a1ec:	b.eq	41a0dc <wcrtomb@plt+0x154bc>  // b.none
  41a1f0:	ldr	x0, [sp, #144]
  41a1f4:	ldr	x22, [x0, #8]
  41a1f8:	mov	w1, #0x3a                  	// #58
  41a1fc:	mov	x0, x22
  41a200:	bl	404870 <strchr@plt>
  41a204:	mov	x19, x0
  41a208:	cbz	x0, 41a11c <wcrtomb@plt+0x154fc>
  41a20c:	cmp	x22, x0
  41a210:	b.cc	41a3a0 <wcrtomb@plt+0x15780>  // b.lo, b.ul, b.last
  41a214:	mov	x1, x0
  41a218:	strb	wzr, [x1], #1
  41a21c:	mov	w5, w20
  41a220:	mov	x4, x25
  41a224:	ldr	x3, [sp, #96]
  41a228:	mov	x2, x27
  41a22c:	add	x0, sp, #0x80
  41a230:	bl	419eac <wcrtomb@plt+0x1528c>
  41a234:	cbnz	w0, 41a308 <wcrtomb@plt+0x156e8>
  41a238:	mov	x0, #0x18                  	// #24
  41a23c:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  41a240:	mov	x21, x0
  41a244:	ldr	x0, [sp, #120]
  41a248:	str	x0, [x21]
  41a24c:	ldr	x0, [sp, #128]
  41a250:	str	x0, [x21, #8]
  41a254:	mov	x19, #0x0                   	// #0
  41a258:	b	41a164 <wcrtomb@plt+0x15544>
  41a25c:	mov	w5, w20
  41a260:	mov	x4, x25
  41a264:	ldr	x3, [sp, #96]
  41a268:	mov	x2, x27
  41a26c:	mov	x1, x22
  41a270:	add	x0, sp, #0x80
  41a274:	bl	419eac <wcrtomb@plt+0x1528c>
  41a278:	cbnz	w0, 41a300 <wcrtomb@plt+0x156e0>
  41a27c:	mov	x0, #0x18                  	// #24
  41a280:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  41a284:	mov	x21, x0
  41a288:	ldr	x0, [sp, #120]
  41a28c:	str	x0, [x21]
  41a290:	ldr	x0, [sp, #128]
  41a294:	str	x0, [x21, #8]
  41a298:	b	41a164 <wcrtomb@plt+0x15544>
  41a29c:	mov	w2, #0x5                   	// #5
  41a2a0:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  41a2a4:	add	x1, x1, #0xfc0
  41a2a8:	mov	x0, #0x0                   	// #0
  41a2ac:	bl	4049c0 <dcgettext@plt>
  41a2b0:	ldr	x1, [sp, #144]
  41a2b4:	ldr	x6, [x1, #8]
  41a2b8:	mov	x5, x27
  41a2bc:	mov	w4, w20
  41a2c0:	mov	x3, x25
  41a2c4:	mov	x2, x0
  41a2c8:	mov	w1, #0x0                   	// #0
  41a2cc:	mov	w0, #0x0                   	// #0
  41a2d0:	bl	404050 <error@plt>
  41a2d4:	mov	w28, #0x1                   	// #1
  41a2d8:	b	41a180 <wcrtomb@plt+0x15560>
  41a2dc:	mov	x4, #0x0                   	// #0
  41a2e0:	ldr	x3, [sp, #104]
  41a2e4:	adrp	x2, 419000 <wcrtomb@plt+0x143e0>
  41a2e8:	add	x2, x2, #0xe64
  41a2ec:	mov	x1, #0x0                   	// #0
  41a2f0:	bl	437c94 <argp_parse@@Base+0x4554>
  41a2f4:	str	x0, [x26]
  41a2f8:	cbnz	x0, 41a170 <wcrtomb@plt+0x15550>
  41a2fc:	bl	40e5ec <wcrtomb@plt+0x99cc>
  41a300:	mov	w28, #0x1                   	// #1
  41a304:	b	41a180 <wcrtomb@plt+0x15560>
  41a308:	mov	w28, #0x1                   	// #1
  41a30c:	b	41a180 <wcrtomb@plt+0x15560>
  41a310:	tbnz	w19, #3, 41a33c <wcrtomb@plt+0x1571c>
  41a314:	mov	x0, x23
  41a318:	bl	4042a0 <fclose@plt>
  41a31c:	cbnz	w28, 41a348 <wcrtomb@plt+0x15728>
  41a320:	ldp	x19, x20, [sp, #16]
  41a324:	ldp	x21, x22, [sp, #32]
  41a328:	ldp	x23, x24, [sp, #48]
  41a32c:	ldp	x25, x26, [sp, #64]
  41a330:	ldp	x27, x28, [sp, #80]
  41a334:	ldp	x29, x30, [sp], #384
  41a338:	ret
  41a33c:	add	x0, sp, #0x88
  41a340:	bl	42c074 <wcrtomb@plt+0x27454>
  41a344:	b	41a314 <wcrtomb@plt+0x156f4>
  41a348:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41a34c:	ldr	x0, [x0, #944]
  41a350:	cbz	x0, 41a358 <wcrtomb@plt+0x15738>
  41a354:	blr	x0
  41a358:	mov	w2, #0x5                   	// #5
  41a35c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  41a360:	add	x1, x1, #0xfe0
  41a364:	mov	x0, #0x0                   	// #0
  41a368:	bl	4049c0 <dcgettext@plt>
  41a36c:	mov	x2, x0
  41a370:	mov	w1, #0x0                   	// #0
  41a374:	mov	w0, #0x0                   	// #0
  41a378:	bl	404050 <error@plt>
  41a37c:	bl	40e5ac <wcrtomb@plt+0x998c>
  41a380:	mov	x0, #0x18                  	// #24
  41a384:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  41a388:	mov	x21, x0
  41a38c:	ldr	x0, [sp, #120]
  41a390:	str	x0, [x21]
  41a394:	ldr	x0, [sp, #128]
  41a398:	str	x0, [x21, #8]
  41a39c:	b	41a158 <wcrtomb@plt+0x15538>
  41a3a0:	mov	x1, x0
  41a3a4:	strb	wzr, [x1], #1
  41a3a8:	mov	w5, w20
  41a3ac:	mov	x4, x25
  41a3b0:	ldr	x3, [sp, #96]
  41a3b4:	mov	x2, x27
  41a3b8:	add	x0, sp, #0x80
  41a3bc:	bl	419eac <wcrtomb@plt+0x1528c>
  41a3c0:	cbz	w0, 41a380 <wcrtomb@plt+0x15760>
  41a3c4:	mov	w28, #0x1                   	// #1
  41a3c8:	b	41a180 <wcrtomb@plt+0x15560>
  41a3cc:	stp	x29, x30, [sp, #-16]!
  41a3d0:	mov	x29, sp
  41a3d4:	bl	404110 <getgrnam@plt>
  41a3d8:	cbz	x0, 41a3e8 <wcrtomb@plt+0x157c8>
  41a3dc:	ldr	w0, [x0, #16]
  41a3e0:	ldp	x29, x30, [sp], #16
  41a3e4:	ret
  41a3e8:	mov	x0, #0xffffffffffffffff    	// #-1
  41a3ec:	b	41a3e0 <wcrtomb@plt+0x157c0>
  41a3f0:	stp	x29, x30, [sp, #-16]!
  41a3f4:	mov	x29, sp
  41a3f8:	mov	x4, #0xffffffff            	// #4294967295
  41a3fc:	adrp	x3, 454000 <_obstack_memory_used@@Base+0x12e64>
  41a400:	add	x3, x3, #0xff8
  41a404:	adrp	x2, 419000 <wcrtomb@plt+0x143e0>
  41a408:	add	x2, x2, #0xe88
  41a40c:	mov	x1, x0
  41a410:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41a414:	add	x0, x0, #0x9d0
  41a418:	bl	419fb0 <wcrtomb@plt+0x15390>
  41a41c:	ldp	x29, x30, [sp], #16
  41a420:	ret
  41a424:	stp	x29, x30, [sp, #-64]!
  41a428:	mov	x29, sp
  41a42c:	stp	x19, x20, [sp, #16]
  41a430:	mov	x20, x1
  41a434:	mov	x19, x2
  41a438:	adrp	x3, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41a43c:	ldr	x4, [x3, #2512]
  41a440:	cbz	x4, 41a474 <wcrtomb@plt+0x15854>
  41a444:	mov	w3, w0
  41a448:	str	x3, [sp, #40]
  41a44c:	add	x1, sp, #0x28
  41a450:	mov	x0, x4
  41a454:	bl	437a0c <argp_parse@@Base+0x42cc>
  41a458:	cbz	x0, 41a474 <wcrtomb@plt+0x15854>
  41a45c:	ldr	x1, [x0, #8]
  41a460:	str	w1, [x20]
  41a464:	ldr	x0, [x0, #16]
  41a468:	str	x0, [x19]
  41a46c:	mov	w0, #0x0                   	// #0
  41a470:	b	41a4a4 <wcrtomb@plt+0x15884>
  41a474:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41a478:	ldr	w1, [x0, #720]
  41a47c:	mov	w0, #0x1                   	// #1
  41a480:	cmn	w1, #0x1
  41a484:	b.eq	41a490 <wcrtomb@plt+0x15870>  // b.none
  41a488:	str	w1, [x20]
  41a48c:	mov	w0, #0x0                   	// #0
  41a490:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  41a494:	ldr	x1, [x1, #520]
  41a498:	cbz	x1, 41a4a4 <wcrtomb@plt+0x15884>
  41a49c:	str	x1, [x19]
  41a4a0:	mov	w0, #0x0                   	// #0
  41a4a4:	ldp	x19, x20, [sp, #16]
  41a4a8:	ldp	x29, x30, [sp], #64
  41a4ac:	ret
  41a4b0:	stp	x29, x30, [sp, #-16]!
  41a4b4:	mov	x29, sp
  41a4b8:	mov	x4, #0xffffffff            	// #4294967295
  41a4bc:	adrp	x3, 455000 <_obstack_memory_used@@Base+0x13e64>
  41a4c0:	add	x3, x3, #0x0
  41a4c4:	adrp	x2, 41a000 <wcrtomb@plt+0x153e0>
  41a4c8:	add	x2, x2, #0x3cc
  41a4cc:	mov	x1, x0
  41a4d0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41a4d4:	add	x0, x0, #0x9d0
  41a4d8:	add	x0, x0, #0x8
  41a4dc:	bl	419fb0 <wcrtomb@plt+0x15390>
  41a4e0:	ldp	x29, x30, [sp], #16
  41a4e4:	ret
  41a4e8:	stp	x29, x30, [sp, #-64]!
  41a4ec:	mov	x29, sp
  41a4f0:	stp	x19, x20, [sp, #16]
  41a4f4:	mov	x20, x1
  41a4f8:	mov	x19, x2
  41a4fc:	adrp	x3, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41a500:	ldr	x4, [x3, #2520]
  41a504:	cbz	x4, 41a538 <wcrtomb@plt+0x15918>
  41a508:	mov	w3, w0
  41a50c:	str	x3, [sp, #40]
  41a510:	add	x1, sp, #0x28
  41a514:	mov	x0, x4
  41a518:	bl	437a0c <argp_parse@@Base+0x42cc>
  41a51c:	cbz	x0, 41a538 <wcrtomb@plt+0x15918>
  41a520:	ldr	x1, [x0, #8]
  41a524:	str	w1, [x20]
  41a528:	ldr	x0, [x0, #16]
  41a52c:	str	x0, [x19]
  41a530:	mov	w0, #0x0                   	// #0
  41a534:	b	41a568 <wcrtomb@plt+0x15948>
  41a538:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41a53c:	ldr	w1, [x0, #640]
  41a540:	mov	w0, #0x1                   	// #1
  41a544:	cmn	w1, #0x1
  41a548:	b.eq	41a554 <wcrtomb@plt+0x15934>  // b.none
  41a54c:	str	w1, [x20]
  41a550:	mov	w0, #0x0                   	// #0
  41a554:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  41a558:	ldr	x1, [x1, #464]
  41a55c:	cbz	x1, 41a568 <wcrtomb@plt+0x15948>
  41a560:	str	x1, [x19]
  41a564:	mov	w0, #0x0                   	// #0
  41a568:	ldp	x19, x20, [sp, #16]
  41a56c:	ldp	x29, x30, [sp], #64
  41a570:	ret
  41a574:	ret
  41a578:	mvn	x0, x1
  41a57c:	lsr	x0, x0, #63
  41a580:	ret
  41a584:	stp	x29, x30, [sp, #-32]!
  41a588:	mov	x29, sp
  41a58c:	stp	x19, x20, [sp, #16]
  41a590:	mov	w19, w0
  41a594:	mov	x20, x1
  41a598:	mov	x0, #0x0                   	// #0
  41a59c:	bl	43ea94 <argp_parse@@Base+0xb354>
  41a5a0:	mov	x2, x20
  41a5a4:	mov	w1, w0
  41a5a8:	mov	w0, w19
  41a5ac:	bl	43eff4 <argp_parse@@Base+0xb8b4>
  41a5b0:	ldp	x19, x20, [sp, #16]
  41a5b4:	ldp	x29, x30, [sp], #32
  41a5b8:	ret
  41a5bc:	stp	x29, x30, [sp, #-32]!
  41a5c0:	mov	x29, sp
  41a5c4:	stp	x19, x20, [sp, #16]
  41a5c8:	mov	x20, x0
  41a5cc:	mov	x19, x1
  41a5d0:	ldr	x0, [x0]
  41a5d4:	bl	4047c0 <free@plt>
  41a5d8:	cbz	x19, 41a5e8 <wcrtomb@plt+0x159c8>
  41a5dc:	mov	x0, x19
  41a5e0:	bl	440154 <argp_parse@@Base+0xca14>
  41a5e4:	mov	x19, x0
  41a5e8:	str	x19, [x20]
  41a5ec:	ldp	x19, x20, [sp, #16]
  41a5f0:	ldp	x29, x30, [sp], #32
  41a5f4:	ret
  41a5f8:	stp	x29, x30, [sp, #-48]!
  41a5fc:	mov	x29, sp
  41a600:	stp	x19, x20, [sp, #16]
  41a604:	stp	x21, x22, [sp, #32]
  41a608:	mov	x20, x0
  41a60c:	mov	x19, x1
  41a610:	mov	x21, x2
  41a614:	ldr	x0, [x0]
  41a618:	bl	4047c0 <free@plt>
  41a61c:	cbz	x19, 41a650 <wcrtomb@plt+0x15a30>
  41a620:	mov	x1, x21
  41a624:	mov	x0, x19
  41a628:	bl	4040c0 <strnlen@plt>
  41a62c:	mov	x21, x0
  41a630:	add	x0, x0, #0x1
  41a634:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  41a638:	mov	x22, x0
  41a63c:	mov	x2, x21
  41a640:	mov	x1, x19
  41a644:	bl	403f70 <memcpy@plt>
  41a648:	strb	wzr, [x22, x21]
  41a64c:	str	x22, [x20]
  41a650:	ldp	x19, x20, [sp, #16]
  41a654:	ldp	x21, x22, [sp, #32]
  41a658:	ldp	x29, x30, [sp], #48
  41a65c:	ret
  41a660:	mov	x3, x0
  41a664:	ldrb	w2, [x0]
  41a668:	cbz	w2, 41a840 <wcrtomb@plt+0x15c20>
  41a66c:	mov	x1, x0
  41a670:	mov	w0, #0x1                   	// #1
  41a674:	mov	w12, #0xc                   	// #12
  41a678:	mov	w4, #0x5c                  	// #92
  41a67c:	mov	w13, #0x0                   	// #0
  41a680:	mov	w11, #0x9                   	// #9
  41a684:	mov	w10, #0xb                   	// #11
  41a688:	mov	w9, #0xa                   	// #10
  41a68c:	mov	w8, #0xd                   	// #13
  41a690:	mov	w7, #0x7                   	// #7
  41a694:	mov	w6, #0x8                   	// #8
  41a698:	mov	w5, #0x7f                  	// #127
  41a69c:	b	41a814 <wcrtomb@plt+0x15bf4>
  41a6a0:	ldrb	w2, [x3, #1]
  41a6a4:	cmp	w2, #0x66
  41a6a8:	b.eq	41a76c <wcrtomb@plt+0x15b4c>  // b.none
  41a6ac:	b.hi	41a718 <wcrtomb@plt+0x15af8>  // b.pmore
  41a6b0:	cmp	w2, #0x5c
  41a6b4:	b.eq	41a754 <wcrtomb@plt+0x15b34>  // b.none
  41a6b8:	b.ls	41a6d8 <wcrtomb@plt+0x15ab8>  // b.plast
  41a6bc:	cmp	w2, #0x61
  41a6c0:	b.eq	41a760 <wcrtomb@plt+0x15b40>  // b.none
  41a6c4:	cmp	w2, #0x62
  41a6c8:	b.ne	41a6fc <wcrtomb@plt+0x15adc>  // b.any
  41a6cc:	strb	w6, [x1], #1
  41a6d0:	add	x3, x3, #0x2
  41a6d4:	b	41a80c <wcrtomb@plt+0x15bec>
  41a6d8:	cmp	w2, #0x37
  41a6dc:	b.ls	41a6f4 <wcrtomb@plt+0x15ad4>  // b.plast
  41a6e0:	cmp	w2, #0x3f
  41a6e4:	b.ne	41a6fc <wcrtomb@plt+0x15adc>  // b.any
  41a6e8:	strb	w5, [x1], #1
  41a6ec:	add	x3, x3, #0x2
  41a6f0:	b	41a80c <wcrtomb@plt+0x15bec>
  41a6f4:	cmp	w2, #0x2f
  41a6f8:	b.hi	41a790 <wcrtomb@plt+0x15b70>  // b.pmore
  41a6fc:	strb	w4, [x1]
  41a700:	ldrb	w0, [x3, #1]
  41a704:	cbnz	w0, 41a7f0 <wcrtomb@plt+0x15bd0>
  41a708:	add	x3, x3, #0x1
  41a70c:	add	x1, x1, #0x1
  41a710:	mov	w0, w13
  41a714:	b	41a80c <wcrtomb@plt+0x15bec>
  41a718:	cmp	w2, #0x74
  41a71c:	b.eq	41a784 <wcrtomb@plt+0x15b64>  // b.none
  41a720:	b.ls	41a738 <wcrtomb@plt+0x15b18>  // b.plast
  41a724:	cmp	w2, #0x76
  41a728:	b.ne	41a6fc <wcrtomb@plt+0x15adc>  // b.any
  41a72c:	strb	w10, [x1], #1
  41a730:	add	x3, x3, #0x2
  41a734:	b	41a80c <wcrtomb@plt+0x15bec>
  41a738:	cmp	w2, #0x6e
  41a73c:	b.eq	41a778 <wcrtomb@plt+0x15b58>  // b.none
  41a740:	cmp	w2, #0x72
  41a744:	b.ne	41a6fc <wcrtomb@plt+0x15adc>  // b.any
  41a748:	strb	w8, [x1], #1
  41a74c:	add	x3, x3, #0x2
  41a750:	b	41a80c <wcrtomb@plt+0x15bec>
  41a754:	strb	w4, [x1], #1
  41a758:	add	x3, x3, #0x2
  41a75c:	b	41a80c <wcrtomb@plt+0x15bec>
  41a760:	strb	w7, [x1], #1
  41a764:	add	x3, x3, #0x2
  41a768:	b	41a80c <wcrtomb@plt+0x15bec>
  41a76c:	strb	w12, [x1], #1
  41a770:	add	x3, x3, #0x2
  41a774:	b	41a80c <wcrtomb@plt+0x15bec>
  41a778:	strb	w9, [x1], #1
  41a77c:	add	x3, x3, #0x2
  41a780:	b	41a80c <wcrtomb@plt+0x15bec>
  41a784:	strb	w11, [x1], #1
  41a788:	add	x3, x3, #0x2
  41a78c:	b	41a80c <wcrtomb@plt+0x15bec>
  41a790:	ldrb	w15, [x3, #2]
  41a794:	sub	w14, w15, #0x30
  41a798:	and	w14, w14, #0xff
  41a79c:	cmp	w14, #0x7
  41a7a0:	b.ls	41a7b4 <wcrtomb@plt+0x15b94>  // b.plast
  41a7a4:	add	x3, x3, #0x2
  41a7a8:	sub	w2, w2, #0x30
  41a7ac:	strb	w2, [x1], #1
  41a7b0:	b	41a80c <wcrtomb@plt+0x15bec>
  41a7b4:	add	w2, w15, w2, lsl #3
  41a7b8:	sub	w2, w2, #0x1b0
  41a7bc:	ldrb	w15, [x3, #3]
  41a7c0:	sub	w14, w15, #0x30
  41a7c4:	and	w14, w14, #0xff
  41a7c8:	cmp	w14, #0x7
  41a7cc:	b.ls	41a7dc <wcrtomb@plt+0x15bbc>  // b.plast
  41a7d0:	add	x3, x3, #0x3
  41a7d4:	strb	w2, [x1], #1
  41a7d8:	b	41a80c <wcrtomb@plt+0x15bec>
  41a7dc:	add	x3, x3, #0x4
  41a7e0:	add	w2, w15, w2, lsl #3
  41a7e4:	sub	w2, w2, #0x30
  41a7e8:	strb	w2, [x1], #1
  41a7ec:	b	41a80c <wcrtomb@plt+0x15bec>
  41a7f0:	add	x3, x3, #0x2
  41a7f4:	strb	w0, [x1, #1]
  41a7f8:	add	x1, x1, #0x2
  41a7fc:	mov	w0, w13
  41a800:	b	41a80c <wcrtomb@plt+0x15bec>
  41a804:	add	x3, x3, #0x1
  41a808:	add	x1, x1, #0x1
  41a80c:	ldrb	w2, [x3]
  41a810:	cbz	w2, 41a830 <wcrtomb@plt+0x15c10>
  41a814:	cmp	w2, #0x5c
  41a818:	b.eq	41a6a0 <wcrtomb@plt+0x15a80>  // b.none
  41a81c:	cmp	x3, x1
  41a820:	b.eq	41a804 <wcrtomb@plt+0x15be4>  // b.none
  41a824:	add	x3, x3, #0x1
  41a828:	strb	w2, [x1], #1
  41a82c:	b	41a80c <wcrtomb@plt+0x15bec>
  41a830:	cmp	x1, x3
  41a834:	b.eq	41a83c <wcrtomb@plt+0x15c1c>  // b.none
  41a838:	strb	wzr, [x1]
  41a83c:	ret
  41a840:	mov	w0, #0x1                   	// #1
  41a844:	b	41a83c <wcrtomb@plt+0x15c1c>
  41a848:	stp	x29, x30, [sp, #-32]!
  41a84c:	mov	x29, sp
  41a850:	str	x19, [sp, #16]
  41a854:	mov	x19, x0
  41a858:	cbz	x0, 41a894 <wcrtomb@plt+0x15c74>
  41a85c:	ldrb	w0, [x0]
  41a860:	cbz	w0, 41a894 <wcrtomb@plt+0x15c74>
  41a864:	mov	x0, x19
  41a868:	bl	403ff0 <strlen@plt>
  41a86c:	sub	x1, x0, #0x1
  41a870:	add	x1, x19, x1
  41a874:	cmp	x19, x1
  41a878:	b.cs	41a894 <wcrtomb@plt+0x15c74>  // b.hs, b.nlast
  41a87c:	ldrb	w0, [x1]
  41a880:	cmp	w0, #0x2f
  41a884:	b.ne	41a894 <wcrtomb@plt+0x15c74>  // b.any
  41a888:	strb	wzr, [x1], #-1
  41a88c:	cmp	x19, x1
  41a890:	b.ne	41a87c <wcrtomb@plt+0x15c5c>  // b.any
  41a894:	mov	x0, x19
  41a898:	ldr	x19, [sp, #16]
  41a89c:	ldp	x29, x30, [sp], #32
  41a8a0:	ret
  41a8a4:	ldrb	w3, [x0]
  41a8a8:	mov	x1, x0
  41a8ac:	mov	x2, x0
  41a8b0:	cmp	w3, #0x2e
  41a8b4:	b.eq	41a91c <wcrtomb@plt+0x15cfc>  // b.none
  41a8b8:	ldrb	w3, [x1], #1
  41a8bc:	strb	w3, [x2], #1
  41a8c0:	cbnz	w3, 41a97c <wcrtomb@plt+0x15d5c>
  41a8c4:	sub	x1, x2, x0
  41a8c8:	cmp	x1, #0x2
  41a8cc:	b.le	41a9d0 <wcrtomb@plt+0x15db0>
  41a8d0:	ldurb	w1, [x2, #-2]
  41a8d4:	cmp	w1, #0x2e
  41a8d8:	b.eq	41a9a8 <wcrtomb@plt+0x15d88>  // b.none
  41a8dc:	ldurb	w1, [x2, #-2]
  41a8e0:	mov	w0, #0x1                   	// #1
  41a8e4:	cmp	w1, #0x2f
  41a8e8:	b.eq	41a9c8 <wcrtomb@plt+0x15da8>  // b.none
  41a8ec:	b	41a9c4 <wcrtomb@plt+0x15da4>
  41a8f0:	mov	x4, x1
  41a8f4:	add	x1, x4, #0x1
  41a8f8:	ldrb	w3, [x4, #1]
  41a8fc:	cmp	w3, #0x2f
  41a900:	b.eq	41a8f0 <wcrtomb@plt+0x15cd0>  // b.none
  41a904:	cmp	w3, #0x0
  41a908:	cinc	x2, x2, eq  // eq = none
  41a90c:	ldrb	w3, [x1]
  41a910:	strb	w3, [x2]
  41a914:	cmp	w3, #0x2e
  41a918:	b.ne	41a8b8 <wcrtomb@plt+0x15c98>  // b.any
  41a91c:	ldrb	w3, [x1, #1]
  41a920:	cmp	w3, #0x2f
  41a924:	b.ne	41a8b8 <wcrtomb@plt+0x15c98>  // b.any
  41a928:	add	x4, x1, #0x2
  41a92c:	ldrb	w3, [x1, #2]
  41a930:	mov	x1, x4
  41a934:	cmp	w3, #0x2f
  41a938:	b.ne	41a904 <wcrtomb@plt+0x15ce4>  // b.any
  41a93c:	b	41a8f4 <wcrtomb@plt+0x15cd4>
  41a940:	cmp	w3, #0x2e
  41a944:	cset	x3, eq  // eq = none
  41a948:	add	x3, x3, #0x1
  41a94c:	add	x1, x1, x3
  41a950:	ldrb	w3, [x1]
  41a954:	cmp	w3, #0x2e
  41a958:	cset	w4, eq  // eq = none
  41a95c:	ldrb	w4, [x1, w4, uxtw]
  41a960:	cmp	w4, #0x2f
  41a964:	b.eq	41a940 <wcrtomb@plt+0x15d20>  // b.none
  41a968:	mov	x4, x1
  41a96c:	mov	x1, x4
  41a970:	ldrb	w3, [x1], #1
  41a974:	strb	w3, [x2], #1
  41a978:	cbz	w3, 41a8c4 <wcrtomb@plt+0x15ca4>
  41a97c:	mov	x4, x1
  41a980:	cmp	w3, #0x2f
  41a984:	b.ne	41a96c <wcrtomb@plt+0x15d4c>  // b.any
  41a988:	ldrb	w3, [x1]
  41a98c:	cmp	w3, #0x2e
  41a990:	cset	w4, eq  // eq = none
  41a994:	ldrb	w4, [x1, w4, uxtw]
  41a998:	cmp	w4, #0x2f
  41a99c:	b.eq	41a940 <wcrtomb@plt+0x15d20>  // b.none
  41a9a0:	mov	x4, x1
  41a9a4:	b	41a96c <wcrtomb@plt+0x15d4c>
  41a9a8:	ldurb	w1, [x2, #-3]
  41a9ac:	cmp	w1, #0x2f
  41a9b0:	b.ne	41a9c4 <wcrtomb@plt+0x15da4>  // b.any
  41a9b4:	sub	x2, x2, #0x1
  41a9b8:	sub	x0, x2, x0
  41a9bc:	cmp	x0, #0x2
  41a9c0:	b.gt	41a8dc <wcrtomb@plt+0x15cbc>
  41a9c4:	mov	w0, #0x0                   	// #0
  41a9c8:	sub	x2, x2, w0, sxtw
  41a9cc:	sturb	wzr, [x2, #-1]
  41a9d0:	ret
  41a9d4:	stp	x29, x30, [sp, #-64]!
  41a9d8:	mov	x29, sp
  41a9dc:	stp	x19, x20, [sp, #16]
  41a9e0:	mov	x20, x1
  41a9e4:	ldrb	w1, [x1]
  41a9e8:	cmp	w1, #0x2f
  41a9ec:	b.eq	41aab8 <wcrtomb@plt+0x15e98>  // b.none
  41a9f0:	stp	x21, x22, [sp, #32]
  41a9f4:	str	x23, [sp, #48]
  41a9f8:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41a9fc:	ldr	x1, [x1, #2528]
  41aa00:	cbz	x1, 41aa7c <wcrtomb@plt+0x15e5c>
  41aa04:	sbfiz	x2, x0, #1, #32
  41aa08:	add	x0, x2, w0, sxtw
  41aa0c:	add	x0, x1, x0, lsl #3
  41aa10:	ldr	x22, [x0, #8]
  41aa14:	cbz	x22, 41aaa4 <wcrtomb@plt+0x15e84>
  41aa18:	mov	x0, x22
  41aa1c:	bl	403ff0 <strlen@plt>
  41aa20:	mov	x21, x0
  41aa24:	add	x23, x0, #0x1
  41aa28:	mov	x0, x20
  41aa2c:	bl	403ff0 <strlen@plt>
  41aa30:	add	x0, x0, #0x1
  41aa34:	add	x0, x0, x23
  41aa38:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  41aa3c:	mov	x19, x0
  41aa40:	mov	x1, x22
  41aa44:	bl	404910 <strcpy@plt>
  41aa48:	mov	w0, #0x2f                  	// #47
  41aa4c:	strb	w0, [x19, x21]
  41aa50:	mov	x1, x20
  41aa54:	add	x0, x19, x23
  41aa58:	bl	404910 <strcpy@plt>
  41aa5c:	ldp	x21, x22, [sp, #32]
  41aa60:	ldr	x23, [sp, #48]
  41aa64:	mov	x0, x19
  41aa68:	bl	41a8a4 <wcrtomb@plt+0x15c84>
  41aa6c:	mov	x0, x19
  41aa70:	ldp	x19, x20, [sp, #16]
  41aa74:	ldp	x29, x30, [sp], #64
  41aa78:	ret
  41aa7c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41aa80:	ldr	x0, [x0, #2536]
  41aa84:	cbz	x0, 41aa94 <wcrtomb@plt+0x15e74>
  41aa88:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41aa8c:	ldr	x22, [x0, #2536]
  41aa90:	b	41aa14 <wcrtomb@plt+0x15df4>
  41aa94:	bl	440180 <argp_parse@@Base+0xca40>
  41aa98:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41aa9c:	str	x0, [x1, #2536]
  41aaa0:	b	41aa88 <wcrtomb@plt+0x15e68>
  41aaa4:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x15e64>
  41aaa8:	add	x1, x1, #0x340
  41aaac:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x13e64>
  41aab0:	add	x0, x0, #0x8
  41aab4:	bl	429848 <wcrtomb@plt+0x24c28>
  41aab8:	mov	x0, x20
  41aabc:	bl	440154 <argp_parse@@Base+0xca14>
  41aac0:	mov	x19, x0
  41aac4:	b	41aa64 <wcrtomb@plt+0x15e44>
  41aac8:	stp	x29, x30, [sp, #-80]!
  41aacc:	mov	x29, sp
  41aad0:	stp	x19, x20, [sp, #16]
  41aad4:	stp	x21, x22, [sp, #32]
  41aad8:	stp	x23, x24, [sp, #48]
  41aadc:	stp	x25, x26, [sp, #64]
  41aae0:	mov	x23, x0
  41aae4:	mov	x24, x1
  41aae8:	mov	x19, x2
  41aaec:	mov	x25, x3
  41aaf0:	mov	x21, x4
  41aaf4:	add	x26, x4, #0x1
  41aaf8:	ldr	x22, [x0]
  41aafc:	mov	x0, x22
  41ab00:	bl	403ff0 <strlen@plt>
  41ab04:	cmp	x0, x19
  41ab08:	b.ls	41ab30 <wcrtomb@plt+0x15f10>  // b.plast
  41ab0c:	mov	x20, x0
  41ab10:	mov	x2, x19
  41ab14:	mov	x1, x24
  41ab18:	mov	x0, x22
  41ab1c:	bl	4046e0 <memcmp@plt>
  41ab20:	cbnz	w0, 41ab30 <wcrtomb@plt+0x15f10>
  41ab24:	ldrb	w0, [x22, x19]
  41ab28:	cmp	w0, #0x2f
  41ab2c:	b.eq	41ab48 <wcrtomb@plt+0x15f28>  // b.none
  41ab30:	ldp	x19, x20, [sp, #16]
  41ab34:	ldp	x21, x22, [sp, #32]
  41ab38:	ldp	x23, x24, [sp, #48]
  41ab3c:	ldp	x25, x26, [sp, #64]
  41ab40:	ldp	x29, x30, [sp], #80
  41ab44:	ret
  41ab48:	cmp	x19, x21
  41ab4c:	b.cc	41ab78 <wcrtomb@plt+0x15f58>  // b.lo, b.ul, b.last
  41ab50:	sub	x2, x20, x19
  41ab54:	add	x2, x2, #0x1
  41ab58:	add	x1, x22, x19
  41ab5c:	add	x0, x22, x21
  41ab60:	bl	403f80 <memmove@plt>
  41ab64:	mov	x2, x21
  41ab68:	mov	x1, x25
  41ab6c:	mov	x0, x22
  41ab70:	bl	403f70 <memcpy@plt>
  41ab74:	b	41ab30 <wcrtomb@plt+0x15f10>
  41ab78:	sub	x1, x20, x19
  41ab7c:	add	x1, x1, x26
  41ab80:	mov	x0, x22
  41ab84:	bl	43ff70 <argp_parse@@Base+0xc830>
  41ab88:	mov	x22, x0
  41ab8c:	str	x0, [x23]
  41ab90:	b	41ab50 <wcrtomb@plt+0x15f30>
  41ab94:	stp	x29, x30, [sp, #-16]!
  41ab98:	mov	x29, sp
  41ab9c:	mov	x1, x3
  41aba0:	cmp	x0, x2
  41aba4:	b.hi	41abb4 <wcrtomb@plt+0x15f94>  // b.pmore
  41aba8:	bl	438ce8 <argp_parse@@Base+0x55a8>
  41abac:	ldp	x29, x30, [sp], #16
  41abb0:	ret
  41abb4:	bl	438be8 <argp_parse@@Base+0x54a8>
  41abb8:	b	41abac <wcrtomb@plt+0x15f8c>
  41abbc:	stp	x29, x30, [sp, #-64]!
  41abc0:	mov	x29, sp
  41abc4:	stp	x19, x20, [sp, #16]
  41abc8:	stp	x21, x22, [sp, #32]
  41abcc:	str	x23, [sp, #48]
  41abd0:	mov	x19, x0
  41abd4:	mov	x23, x1
  41abd8:	mov	x22, x2
  41abdc:	mov	x21, x3
  41abe0:	bl	404ad0 <__errno_location@plt>
  41abe4:	mov	x20, x0
  41abe8:	str	wzr, [x0]
  41abec:	tbnz	x21, #63, 41ac60 <wcrtomb@plt+0x16040>
  41abf0:	ldrb	w0, [x19]
  41abf4:	cmp	w0, #0x2d
  41abf8:	cset	w0, eq  // eq = none
  41abfc:	ldrb	w0, [x19, w0, uxtw]
  41ac00:	sub	w0, w0, #0x30
  41ac04:	cmp	w0, #0x9
  41ac08:	b.ls	41ac2c <wcrtomb@plt+0x1600c>  // b.plast
  41ac0c:	mov	w0, #0x16                  	// #22
  41ac10:	str	w0, [x20]
  41ac14:	mov	x0, #0x0                   	// #0
  41ac18:	ldp	x19, x20, [sp, #16]
  41ac1c:	ldp	x21, x22, [sp, #32]
  41ac20:	ldr	x23, [sp, #48]
  41ac24:	ldp	x29, x30, [sp], #64
  41ac28:	ret
  41ac2c:	mov	w3, #0x0                   	// #0
  41ac30:	mov	w2, #0xa                   	// #10
  41ac34:	mov	x1, x23
  41ac38:	mov	x0, x19
  41ac3c:	bl	404390 <__strtol_internal@plt>
  41ac40:	cmp	x0, x22
  41ac44:	ccmp	x21, x0, #0x1, ge  // ge = tcont
  41ac48:	b.ge	41ac18 <wcrtomb@plt+0x15ff8>  // b.tcont
  41ac4c:	mov	w1, #0x22                  	// #34
  41ac50:	str	w1, [x20]
  41ac54:	cmp	x0, x22
  41ac58:	csel	x0, x22, x21, lt  // lt = tstop
  41ac5c:	b	41ac18 <wcrtomb@plt+0x15ff8>
  41ac60:	ldrb	w0, [x19]
  41ac64:	sub	w0, w0, #0x30
  41ac68:	cmp	w0, #0x9
  41ac6c:	b.hi	41ac0c <wcrtomb@plt+0x15fec>  // b.pmore
  41ac70:	mov	w3, #0x0                   	// #0
  41ac74:	mov	w2, #0xa                   	// #10
  41ac78:	mov	x1, x23
  41ac7c:	mov	x0, x19
  41ac80:	bl	4044c0 <__strtoul_internal@plt>
  41ac84:	cmp	x21, x0
  41ac88:	b.cs	41ac18 <wcrtomb@plt+0x15ff8>  // b.hs, b.nlast
  41ac8c:	mov	w0, #0x22                  	// #34
  41ac90:	str	w0, [x20]
  41ac94:	mov	x0, x21
  41ac98:	b	41ac18 <wcrtomb@plt+0x15ff8>
  41ac9c:	cbnz	w0, 41aca8 <wcrtomb@plt+0x16088>
  41aca0:	strb	wzr, [x1]
  41aca4:	ret
  41aca8:	mov	x6, x1
  41acac:	mov	w2, #0x2e                  	// #46
  41acb0:	strb	w2, [x6], #1
  41acb4:	mov	w2, #0x6667                	// #26215
  41acb8:	movk	w2, #0x6666, lsl #16
  41acbc:	smull	x2, w0, w2
  41acc0:	asr	x2, x2, #34
  41acc4:	sub	w2, w2, w0, asr #31
  41acc8:	add	w2, w2, w2, lsl #2
  41accc:	subs	w2, w0, w2, lsl #1
  41acd0:	b.ne	41ad60 <wcrtomb@plt+0x16140>  // b.any
  41acd4:	mov	w4, #0x9                   	// #9
  41acd8:	mov	w5, #0x6667                	// #26215
  41acdc:	movk	w5, #0x6666, lsl #16
  41ace0:	smull	x2, w0, w5
  41ace4:	asr	x2, x2, #34
  41ace8:	sub	w0, w2, w0, asr #31
  41acec:	mov	w3, w4
  41acf0:	sub	w4, w4, #0x1
  41acf4:	smull	x2, w0, w5
  41acf8:	asr	x2, x2, #34
  41acfc:	sub	w2, w2, w0, asr #31
  41ad00:	add	w2, w2, w2, lsl #2
  41ad04:	subs	w2, w0, w2, lsl #1
  41ad08:	b.eq	41ace0 <wcrtomb@plt+0x160c0>  // b.none
  41ad0c:	strb	wzr, [x6, w4, sxtw]
  41ad10:	sub	w3, w3, #0x2
  41ad14:	add	w2, w2, #0x30
  41ad18:	strb	w2, [x6, w3, sxtw]
  41ad1c:	cbz	w3, 41aca4 <wcrtomb@plt+0x16084>
  41ad20:	sxtw	x3, w3
  41ad24:	mov	w4, #0x6667                	// #26215
  41ad28:	movk	w4, #0x6666, lsl #16
  41ad2c:	smull	x2, w0, w4
  41ad30:	asr	x2, x2, #34
  41ad34:	sub	w0, w2, w0, asr #31
  41ad38:	smull	x2, w0, w4
  41ad3c:	asr	x2, x2, #34
  41ad40:	sub	w2, w2, w0, asr #31
  41ad44:	add	w2, w2, w2, lsl #2
  41ad48:	sub	w2, w0, w2, lsl #1
  41ad4c:	add	w2, w2, #0x30
  41ad50:	strb	w2, [x1, x3]
  41ad54:	sub	x3, x3, #0x1
  41ad58:	cbnz	w3, 41ad2c <wcrtomb@plt+0x1610c>
  41ad5c:	b	41aca4 <wcrtomb@plt+0x16084>
  41ad60:	strb	wzr, [x1, #10]
  41ad64:	add	w2, w2, #0x30
  41ad68:	strb	w2, [x1, #9]
  41ad6c:	mov	w3, #0x8                   	// #8
  41ad70:	b	41ad20 <wcrtomb@plt+0x16100>
  41ad74:	stp	x29, x30, [sp, #-48]!
  41ad78:	mov	x29, sp
  41ad7c:	stp	x19, x20, [sp, #16]
  41ad80:	str	x21, [sp, #32]
  41ad84:	mov	x19, x2
  41ad88:	mov	x3, x0
  41ad8c:	mov	w2, #0xc9ff                	// #51711
  41ad90:	movk	w2, #0x3b9a, lsl #16
  41ad94:	cmp	w1, w2
  41ad98:	b.hi	41add8 <wcrtomb@plt+0x161b8>  // b.pmore
  41ad9c:	mov	w20, w1
  41ada0:	cmp	w1, #0x0
  41ada4:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  41ada8:	b.ge	41addc <wcrtomb@plt+0x161bc>  // b.tcont
  41adac:	add	x3, x0, #0x1
  41adb0:	mov	w20, #0xca00                	// #51712
  41adb4:	movk	w20, #0x3b9a, lsl #16
  41adb8:	sub	w20, w20, w1
  41adbc:	add	x1, x19, #0x1
  41adc0:	neg	x0, x3
  41adc4:	bl	438ce8 <argp_parse@@Base+0x55a8>
  41adc8:	sub	x21, x0, #0x1
  41adcc:	mov	w1, #0x2d                  	// #45
  41add0:	sturb	w1, [x0, #-1]
  41add4:	b	41adec <wcrtomb@plt+0x161cc>
  41add8:	mov	w20, #0x0                   	// #0
  41addc:	tbnz	x0, #63, 41adbc <wcrtomb@plt+0x1619c>
  41ade0:	add	x1, x19, #0x1
  41ade4:	bl	438ce8 <argp_parse@@Base+0x55a8>
  41ade8:	mov	x21, x0
  41adec:	add	x1, x19, #0x15
  41adf0:	mov	w0, w20
  41adf4:	bl	41ac9c <wcrtomb@plt+0x1607c>
  41adf8:	mov	x0, x21
  41adfc:	ldp	x19, x20, [sp, #16]
  41ae00:	ldr	x21, [sp, #32]
  41ae04:	ldp	x29, x30, [sp], #48
  41ae08:	ret
  41ae0c:	stp	x29, x30, [sp, #-64]!
  41ae10:	mov	x29, sp
  41ae14:	stp	x19, x20, [sp, #16]
  41ae18:	stp	x21, x22, [sp, #32]
  41ae1c:	mov	x19, x0
  41ae20:	mov	x20, x1
  41ae24:	ldrb	w21, [x0]
  41ae28:	cmp	w21, #0x2d
  41ae2c:	cset	w0, eq  // eq = none
  41ae30:	ldrb	w0, [x19, w0, uxtw]
  41ae34:	sub	w0, w0, #0x30
  41ae38:	cmp	w0, #0x9
  41ae3c:	b.ls	41ae6c <wcrtomb@plt+0x1624c>  // b.plast
  41ae40:	bl	404ad0 <__errno_location@plt>
  41ae44:	mov	w1, #0x16                  	// #22
  41ae48:	str	w1, [x0]
  41ae4c:	mov	w2, #0xffffffff            	// #-1
  41ae50:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  41ae54:	str	x19, [x20]
  41ae58:	sxtw	x1, w2
  41ae5c:	ldp	x19, x20, [sp, #16]
  41ae60:	ldp	x21, x22, [sp, #32]
  41ae64:	ldp	x29, x30, [sp], #64
  41ae68:	ret
  41ae6c:	str	x23, [sp, #48]
  41ae70:	and	w23, w2, #0xff
  41ae74:	bl	404ad0 <__errno_location@plt>
  41ae78:	mov	x22, x0
  41ae7c:	str	wzr, [x0]
  41ae80:	cmp	w21, #0x2d
  41ae84:	b.eq	41aecc <wcrtomb@plt+0x162ac>  // b.none
  41ae88:	mov	w3, #0x0                   	// #0
  41ae8c:	mov	w2, #0xa                   	// #10
  41ae90:	mov	x1, x20
  41ae94:	mov	x0, x19
  41ae98:	bl	4044c0 <__strtoul_internal@plt>
  41ae9c:	tbnz	x0, #63, 41aee4 <wcrtomb@plt+0x162c4>
  41aea0:	ldr	x19, [x20]
  41aea4:	mov	w2, #0x0                   	// #0
  41aea8:	cbz	w23, 41aeb8 <wcrtomb@plt+0x16298>
  41aeac:	ldrb	w1, [x19]
  41aeb0:	cmp	w1, #0x2e
  41aeb4:	b.eq	41af04 <wcrtomb@plt+0x162e4>  // b.none
  41aeb8:	ldr	w1, [x22]
  41aebc:	cmp	w1, #0x22
  41aec0:	csinv	w2, w2, wzr, ne  // ne = any
  41aec4:	ldr	x23, [sp, #48]
  41aec8:	b	41ae54 <wcrtomb@plt+0x16234>
  41aecc:	mov	w3, #0x0                   	// #0
  41aed0:	mov	w2, #0xa                   	// #10
  41aed4:	mov	x1, x20
  41aed8:	mov	x0, x19
  41aedc:	bl	404390 <__strtol_internal@plt>
  41aee0:	b	41aea0 <wcrtomb@plt+0x16280>
  41aee4:	mov	w0, #0x22                  	// #34
  41aee8:	str	w0, [x22]
  41aeec:	ldr	x19, [x20]
  41aef0:	cbnz	w23, 41afd4 <wcrtomb@plt+0x163b4>
  41aef4:	mov	w2, #0xffffffff            	// #-1
  41aef8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  41aefc:	ldr	x23, [sp, #48]
  41af00:	b	41ae54 <wcrtomb@plt+0x16234>
  41af04:	mov	x1, x19
  41af08:	add	x19, x1, #0x1
  41af0c:	ldrb	w1, [x1, #1]
  41af10:	sub	w2, w1, #0x30
  41af14:	cmp	w2, #0x9
  41af18:	b.hi	41afbc <wcrtomb@plt+0x1639c>  // b.pmore
  41af1c:	mov	w5, #0x0                   	// #0
  41af20:	mov	w3, #0x0                   	// #0
  41af24:	mov	w2, #0x0                   	// #0
  41af28:	b	41af54 <wcrtomb@plt+0x16334>
  41af2c:	mov	x1, x19
  41af30:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  41af34:	b	41af08 <wcrtomb@plt+0x162e8>
  41af38:	cmp	w1, #0x30
  41af3c:	cset	w1, ne  // ne = any
  41af40:	orr	w5, w5, w1
  41af44:	ldrb	w1, [x19, #1]!
  41af48:	sub	w4, w1, #0x30
  41af4c:	cmp	w4, #0x9
  41af50:	b.hi	41af70 <wcrtomb@plt+0x16350>  // b.pmore
  41af54:	cmp	w3, #0x8
  41af58:	b.gt	41af38 <wcrtomb@plt+0x16318>
  41af5c:	add	w3, w3, #0x1
  41af60:	add	w2, w2, w2, lsl #2
  41af64:	sub	w1, w1, #0x30
  41af68:	add	w2, w1, w2, lsl #1
  41af6c:	b	41af44 <wcrtomb@plt+0x16324>
  41af70:	cmp	w3, #0x8
  41af74:	b.gt	41af8c <wcrtomb@plt+0x1636c>
  41af78:	add	w3, w3, #0x1
  41af7c:	add	w2, w2, w2, lsl #2
  41af80:	lsl	w2, w2, #1
  41af84:	cmp	w3, #0x8
  41af88:	b.le	41af78 <wcrtomb@plt+0x16358>
  41af8c:	cmp	w21, #0x2d
  41af90:	b.ne	41aeb8 <wcrtomb@plt+0x16298>  // b.any
  41af94:	adds	w2, w2, w5
  41af98:	b.eq	41aeb8 <wcrtomb@plt+0x16298>  // b.none
  41af9c:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
  41afa0:	cmp	x0, x1
  41afa4:	b.eq	41afcc <wcrtomb@plt+0x163ac>  // b.none
  41afa8:	sub	x0, x0, #0x1
  41afac:	mov	w1, #0xca00                	// #51712
  41afb0:	movk	w1, #0x3b9a, lsl #16
  41afb4:	sub	w2, w1, w2
  41afb8:	b	41aeb8 <wcrtomb@plt+0x16298>
  41afbc:	mov	w5, #0x0                   	// #0
  41afc0:	mov	w3, #0x0                   	// #0
  41afc4:	mov	w2, #0x0                   	// #0
  41afc8:	b	41af78 <wcrtomb@plt+0x16358>
  41afcc:	mov	w2, #0xffffffff            	// #-1
  41afd0:	b	41aeb8 <wcrtomb@plt+0x16298>
  41afd4:	ldrb	w0, [x19]
  41afd8:	cmp	w0, #0x2e
  41afdc:	b.eq	41af2c <wcrtomb@plt+0x1630c>  // b.none
  41afe0:	mov	w2, #0xffffffff            	// #-1
  41afe4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  41afe8:	ldr	x23, [sp, #48]
  41afec:	b	41ae54 <wcrtomb@plt+0x16234>
  41aff0:	ldrb	w1, [x0]
  41aff4:	cmp	w1, #0x2f
  41aff8:	b.eq	41b018 <wcrtomb@plt+0x163f8>  // b.none
  41affc:	cmp	w1, #0x2e
  41b000:	b.eq	41b068 <wcrtomb@plt+0x16448>  // b.none
  41b004:	mov	w2, #0x1                   	// #1
  41b008:	cbnz	w1, 41b098 <wcrtomb@plt+0x16478>
  41b00c:	mov	w0, w2
  41b010:	ret
  41b014:	add	x0, x0, #0x1
  41b018:	ldrb	w1, [x0, #1]
  41b01c:	cmp	w1, #0x2f
  41b020:	b.eq	41b014 <wcrtomb@plt+0x163f4>  // b.none
  41b024:	cmp	w1, #0x2e
  41b028:	b.ne	41b04c <wcrtomb@plt+0x1642c>  // b.any
  41b02c:	ldrb	w2, [x0, #2]
  41b030:	cmp	w2, #0x2e
  41b034:	cset	x2, eq  // eq = none
  41b038:	add	x2, x2, #0x2
  41b03c:	add	x0, x0, x2
  41b040:	ldrb	w2, [x0]
  41b044:	cmp	w2, #0x2f
  41b048:	b.eq	41b018 <wcrtomb@plt+0x163f8>  // b.none
  41b04c:	cmp	w1, #0x0
  41b050:	cset	w0, eq  // eq = none
  41b054:	b	41b010 <wcrtomb@plt+0x163f0>
  41b058:	mov	x0, x1
  41b05c:	ldrb	w1, [x0]
  41b060:	cmp	w1, #0x2e
  41b064:	b.ne	41b004 <wcrtomb@plt+0x163e4>  // b.any
  41b068:	ldrb	w1, [x0, #1]
  41b06c:	cmp	w1, #0x2f
  41b070:	b.ne	41b0a4 <wcrtomb@plt+0x16484>  // b.any
  41b074:	add	x1, x0, #0x2
  41b078:	ldrb	w0, [x0, #2]
  41b07c:	cmp	w0, #0x2f
  41b080:	b.ne	41b058 <wcrtomb@plt+0x16438>  // b.any
  41b084:	ldrb	w0, [x1, #1]!
  41b088:	cmp	w0, #0x2f
  41b08c:	b.eq	41b084 <wcrtomb@plt+0x16464>  // b.none
  41b090:	mov	x0, x1
  41b094:	b	41b05c <wcrtomb@plt+0x1643c>
  41b098:	mov	w2, #0x0                   	// #0
  41b09c:	cmp	w1, #0x2e
  41b0a0:	b.ne	41b00c <wcrtomb@plt+0x163ec>  // b.any
  41b0a4:	ldrb	w0, [x0, #1]
  41b0a8:	cmp	w0, #0x0
  41b0ac:	cset	w2, eq  // eq = none
  41b0b0:	b	41b00c <wcrtomb@plt+0x163ec>
  41b0b4:	stp	x29, x30, [sp, #-32]!
  41b0b8:	mov	x29, sp
  41b0bc:	stp	x19, x20, [sp, #16]
  41b0c0:	mov	x20, x0
  41b0c4:	bl	41aff0 <wcrtomb@plt+0x163d0>
  41b0c8:	and	w0, w0, #0xff
  41b0cc:	cbnz	w0, 41b104 <wcrtomb@plt+0x164e4>
  41b0d0:	mov	w2, #0x200                 	// #512
  41b0d4:	mov	x1, x20
  41b0d8:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  41b0dc:	ldr	w0, [x0, #2184]
  41b0e0:	bl	404160 <unlinkat@plt>
  41b0e4:	mov	w19, w0
  41b0e8:	cbnz	w0, 41b114 <wcrtomb@plt+0x164f4>
  41b0ec:	mov	x0, x20
  41b0f0:	bl	410eb8 <wcrtomb@plt+0xc298>
  41b0f4:	mov	w0, w19
  41b0f8:	ldp	x19, x20, [sp, #16]
  41b0fc:	ldp	x29, x30, [sp], #32
  41b100:	ret
  41b104:	bl	404ad0 <__errno_location@plt>
  41b108:	str	wzr, [x0]
  41b10c:	mov	w19, #0xffffffff            	// #-1
  41b110:	b	41b0f4 <wcrtomb@plt+0x164d4>
  41b114:	mov	w19, #0xffffffff            	// #-1
  41b118:	b	41b0f4 <wcrtomb@plt+0x164d4>
  41b11c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41b120:	ldr	x1, [x0, #2544]
  41b124:	cbz	x1, 41b268 <wcrtomb@plt+0x16648>
  41b128:	stp	x29, x30, [sp, #-48]!
  41b12c:	mov	x29, sp
  41b130:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  41b134:	ldr	w0, [x0, #2184]
  41b138:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41b13c:	ldr	x3, [x2, #2552]
  41b140:	mov	w2, w0
  41b144:	bl	404810 <renameat@plt>
  41b148:	cbz	w0, 41b1d0 <wcrtomb@plt+0x165b0>
  41b14c:	stp	x19, x20, [sp, #16]
  41b150:	stp	x21, x22, [sp, #32]
  41b154:	bl	404ad0 <__errno_location@plt>
  41b158:	ldr	w22, [x0]
  41b15c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41b160:	ldr	x0, [x0, #944]
  41b164:	cbz	x0, 41b16c <wcrtomb@plt+0x1654c>
  41b168:	blr	x0
  41b16c:	mov	w2, #0x5                   	// #5
  41b170:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x13e64>
  41b174:	add	x1, x1, #0x10
  41b178:	mov	x0, #0x0                   	// #0
  41b17c:	bl	4049c0 <dcgettext@plt>
  41b180:	mov	x20, x0
  41b184:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41b188:	add	x19, x19, #0x9e0
  41b18c:	ldr	x0, [x19, #16]
  41b190:	bl	43efc4 <argp_parse@@Base+0xb884>
  41b194:	mov	x21, x0
  41b198:	ldr	x1, [x19, #24]
  41b19c:	mov	w0, #0x1                   	// #1
  41b1a0:	bl	43f17c <argp_parse@@Base+0xba3c>
  41b1a4:	mov	x4, x0
  41b1a8:	mov	x3, x21
  41b1ac:	mov	x2, x20
  41b1b0:	mov	w1, w22
  41b1b4:	mov	w0, #0x0                   	// #0
  41b1b8:	bl	404050 <error@plt>
  41b1bc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41b1c0:	mov	w1, #0x2                   	// #2
  41b1c4:	str	w1, [x0, #3392]
  41b1c8:	ldp	x19, x20, [sp, #16]
  41b1cc:	ldp	x21, x22, [sp, #32]
  41b1d0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41b1d4:	ldr	w0, [x0, #580]
  41b1d8:	cbnz	w0, 41b1f8 <wcrtomb@plt+0x165d8>
  41b1dc:	mov	x1, #0x0                   	// #0
  41b1e0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41b1e4:	add	x0, x0, #0x9e0
  41b1e8:	add	x0, x0, #0x10
  41b1ec:	bl	41a5bc <wcrtomb@plt+0x1599c>
  41b1f0:	ldp	x29, x30, [sp], #48
  41b1f4:	ret
  41b1f8:	stp	x19, x20, [sp, #16]
  41b1fc:	stp	x21, x22, [sp, #32]
  41b200:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41b204:	ldr	x22, [x0, #3864]
  41b208:	mov	w2, #0x5                   	// #5
  41b20c:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x13e64>
  41b210:	add	x1, x1, #0x28
  41b214:	mov	x0, #0x0                   	// #0
  41b218:	bl	4049c0 <dcgettext@plt>
  41b21c:	mov	x20, x0
  41b220:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41b224:	add	x19, x19, #0x9e0
  41b228:	ldr	x1, [x19, #16]
  41b22c:	mov	w0, #0x0                   	// #0
  41b230:	bl	43f17c <argp_parse@@Base+0xba3c>
  41b234:	mov	x21, x0
  41b238:	ldr	x1, [x19, #24]
  41b23c:	mov	w0, #0x1                   	// #1
  41b240:	bl	43f17c <argp_parse@@Base+0xba3c>
  41b244:	mov	x4, x0
  41b248:	mov	x3, x21
  41b24c:	mov	x2, x20
  41b250:	mov	w1, #0x1                   	// #1
  41b254:	mov	x0, x22
  41b258:	bl	404710 <__fprintf_chk@plt>
  41b25c:	ldp	x19, x20, [sp, #16]
  41b260:	ldp	x21, x22, [sp, #32]
  41b264:	b	41b1dc <wcrtomb@plt+0x165bc>
  41b268:	ret
  41b26c:	stp	x29, x30, [sp, #-16]!
  41b270:	mov	x29, sp
  41b274:	adrp	x2, 481000 <argp_program_version_hook@@Base+0x298>
  41b278:	ldr	w4, [x2, #496]
  41b27c:	mov	x3, x1
  41b280:	mov	x2, x0
  41b284:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  41b288:	ldr	w1, [x0, #2184]
  41b28c:	mov	w0, #0x0                   	// #0
  41b290:	bl	404c00 <__fxstatat@plt>
  41b294:	ldp	x29, x30, [sp], #16
  41b298:	ret
  41b29c:	stp	x29, x30, [sp, #-176]!
  41b2a0:	mov	x29, sp
  41b2a4:	stp	x19, x20, [sp, #16]
  41b2a8:	stp	x21, x22, [sp, #32]
  41b2ac:	mov	x19, x0
  41b2b0:	and	w21, w1, #0xff
  41b2b4:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41b2b8:	add	x20, x20, #0x9e0
  41b2bc:	mov	x1, x0
  41b2c0:	add	x0, x20, #0x18
  41b2c4:	bl	41a5bc <wcrtomb@plt+0x1599c>
  41b2c8:	mov	x1, #0x0                   	// #0
  41b2cc:	add	x0, x20, #0x10
  41b2d0:	bl	41a5bc <wcrtomb@plt+0x1599c>
  41b2d4:	cbz	w21, 41b30c <wcrtomb@plt+0x166ec>
  41b2d8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41b2dc:	ldrb	w0, [x0, #952]
  41b2e0:	cbnz	w0, 41b30c <wcrtomb@plt+0x166ec>
  41b2e4:	mov	w1, #0x3a                  	// #58
  41b2e8:	mov	x0, x19
  41b2ec:	bl	404870 <strchr@plt>
  41b2f0:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  41b2f4:	str	x0, [x1, #960]
  41b2f8:	cmp	x0, x19
  41b2fc:	cset	w20, hi  // hi = pmore
  41b300:	cmp	x0, #0x0
  41b304:	csel	w20, w20, wzr, ne  // ne = any
  41b308:	cbnz	w20, 41b344 <wcrtomb@plt+0x16724>
  41b30c:	add	x1, sp, #0x30
  41b310:	mov	x0, x19
  41b314:	bl	41b26c <wcrtomb@plt+0x1664c>
  41b318:	cbz	w0, 41b370 <wcrtomb@plt+0x16750>
  41b31c:	bl	404ad0 <__errno_location@plt>
  41b320:	ldr	w0, [x0]
  41b324:	mov	w21, #0x1                   	// #1
  41b328:	cmp	w0, #0x2
  41b32c:	b.ne	41b360 <wcrtomb@plt+0x16740>  // b.any
  41b330:	mov	w0, w21
  41b334:	ldp	x19, x20, [sp, #16]
  41b338:	ldp	x21, x22, [sp, #32]
  41b33c:	ldp	x29, x30, [sp], #176
  41b340:	ret
  41b344:	sub	x2, x0, x19
  41b348:	mov	w1, #0x2f                  	// #47
  41b34c:	mov	x0, x19
  41b350:	bl	404960 <memchr@plt>
  41b354:	cbnz	x0, 41b30c <wcrtomb@plt+0x166ec>
  41b358:	mov	w21, w20
  41b35c:	b	41b330 <wcrtomb@plt+0x16710>
  41b360:	mov	x0, x19
  41b364:	bl	42a0bc <wcrtomb@plt+0x2549c>
  41b368:	mov	w21, #0x0                   	// #0
  41b36c:	b	41b330 <wcrtomb@plt+0x16710>
  41b370:	ldr	w0, [sp, #64]
  41b374:	and	w1, w0, #0xf000
  41b378:	cmp	w1, #0x4, lsl #12
  41b37c:	b.eq	41b4d8 <wcrtomb@plt+0x168b8>  // b.none
  41b380:	cbz	w21, 41b394 <wcrtomb@plt+0x16774>
  41b384:	mov	w1, #0xb000                	// #45056
  41b388:	and	w0, w0, w1
  41b38c:	cmp	w0, #0x2, lsl #12
  41b390:	b.eq	41b330 <wcrtomb@plt+0x16710>  // b.none
  41b394:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41b398:	ldr	w2, [x0, #664]
  41b39c:	mov	x1, x19
  41b3a0:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  41b3a4:	ldr	w0, [x0, #2184]
  41b3a8:	bl	4347f4 <argp_parse@@Base+0x10b4>
  41b3ac:	mov	x3, x0
  41b3b0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41b3b4:	str	x3, [x0, #2544]
  41b3b8:	cbz	x3, 41b44c <wcrtomb@plt+0x1682c>
  41b3bc:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  41b3c0:	ldr	w0, [x0, #2184]
  41b3c4:	mov	w2, w0
  41b3c8:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41b3cc:	ldr	x1, [x1, #2552]
  41b3d0:	bl	404810 <renameat@plt>
  41b3d4:	cbnz	w0, 41b450 <wcrtomb@plt+0x16830>
  41b3d8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41b3dc:	ldr	w0, [x0, #580]
  41b3e0:	mov	w21, #0x1                   	// #1
  41b3e4:	cbz	w0, 41b330 <wcrtomb@plt+0x16710>
  41b3e8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41b3ec:	ldr	x22, [x0, #3864]
  41b3f0:	mov	w2, #0x5                   	// #5
  41b3f4:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x13e64>
  41b3f8:	add	x1, x1, #0x40
  41b3fc:	mov	x0, #0x0                   	// #0
  41b400:	bl	4049c0 <dcgettext@plt>
  41b404:	mov	x20, x0
  41b408:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41b40c:	add	x19, x19, #0x9e0
  41b410:	ldr	x1, [x19, #24]
  41b414:	mov	w0, #0x0                   	// #0
  41b418:	bl	43f17c <argp_parse@@Base+0xba3c>
  41b41c:	mov	x21, x0
  41b420:	ldr	x1, [x19, #16]
  41b424:	mov	w0, #0x1                   	// #1
  41b428:	bl	43f17c <argp_parse@@Base+0xba3c>
  41b42c:	mov	x4, x0
  41b430:	mov	x3, x21
  41b434:	mov	x2, x20
  41b438:	mov	w1, #0x1                   	// #1
  41b43c:	mov	x0, x22
  41b440:	bl	404710 <__fprintf_chk@plt>
  41b444:	mov	w21, #0x1                   	// #1
  41b448:	b	41b330 <wcrtomb@plt+0x16710>
  41b44c:	bl	40e5ec <wcrtomb@plt+0x99cc>
  41b450:	bl	404ad0 <__errno_location@plt>
  41b454:	ldr	w22, [x0]
  41b458:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41b45c:	ldr	x0, [x0, #944]
  41b460:	cbz	x0, 41b468 <wcrtomb@plt+0x16848>
  41b464:	blr	x0
  41b468:	mov	w2, #0x5                   	// #5
  41b46c:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x13e64>
  41b470:	add	x1, x1, #0x10
  41b474:	mov	x0, #0x0                   	// #0
  41b478:	bl	4049c0 <dcgettext@plt>
  41b47c:	mov	x20, x0
  41b480:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41b484:	add	x19, x19, #0x9e0
  41b488:	ldr	x0, [x19, #24]
  41b48c:	bl	43efc4 <argp_parse@@Base+0xb884>
  41b490:	mov	x21, x0
  41b494:	ldr	x1, [x19, #16]!
  41b498:	mov	w0, #0x1                   	// #1
  41b49c:	bl	43f17c <argp_parse@@Base+0xba3c>
  41b4a0:	mov	x4, x0
  41b4a4:	mov	x3, x21
  41b4a8:	mov	x2, x20
  41b4ac:	mov	w1, w22
  41b4b0:	mov	w0, #0x0                   	// #0
  41b4b4:	bl	404050 <error@plt>
  41b4b8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41b4bc:	mov	w1, #0x2                   	// #2
  41b4c0:	str	w1, [x0, #3392]
  41b4c4:	mov	x1, #0x0                   	// #0
  41b4c8:	mov	x0, x19
  41b4cc:	bl	41a5bc <wcrtomb@plt+0x1599c>
  41b4d0:	mov	w21, #0x0                   	// #0
  41b4d4:	b	41b330 <wcrtomb@plt+0x16710>
  41b4d8:	mov	w21, #0x1                   	// #1
  41b4dc:	b	41b330 <wcrtomb@plt+0x16710>
  41b4e0:	stp	x29, x30, [sp, #-48]!
  41b4e4:	mov	x29, sp
  41b4e8:	stp	x19, x20, [sp, #16]
  41b4ec:	stp	x21, x22, [sp, #32]
  41b4f0:	mov	w22, w0
  41b4f4:	mov	x21, x1
  41b4f8:	mov	x20, x2
  41b4fc:	bl	43f41c <argp_parse@@Base+0xbcdc>
  41b500:	mov	x19, x0
  41b504:	cmn	x0, #0x1
  41b508:	b.eq	41b520 <wcrtomb@plt+0x16900>  // b.none
  41b50c:	mov	x0, x19
  41b510:	ldp	x19, x20, [sp, #16]
  41b514:	ldp	x21, x22, [sp, #32]
  41b518:	ldp	x29, x30, [sp], #48
  41b51c:	ret
  41b520:	bl	404ad0 <__errno_location@plt>
  41b524:	ldr	w0, [x0]
  41b528:	cmp	w0, #0xb
  41b52c:	b.ne	41b50c <wcrtomb@plt+0x168ec>  // b.any
  41b530:	mov	w1, #0x3                   	// #3
  41b534:	mov	w0, w22
  41b538:	bl	440a14 <argp_parse@@Base+0xd2d4>
  41b53c:	tbnz	w0, #31, 41b50c <wcrtomb@plt+0x168ec>
  41b540:	tbz	w0, #11, 41b50c <wcrtomb@plt+0x168ec>
  41b544:	and	w2, w0, #0xfffff7ff
  41b548:	mov	w1, #0x4                   	// #4
  41b54c:	mov	w0, w22
  41b550:	bl	440a14 <argp_parse@@Base+0xd2d4>
  41b554:	cmn	w0, #0x1
  41b558:	b.eq	41b50c <wcrtomb@plt+0x168ec>  // b.none
  41b55c:	mov	x2, x20
  41b560:	mov	x1, x21
  41b564:	mov	w0, w22
  41b568:	bl	43f41c <argp_parse@@Base+0xbcdc>
  41b56c:	mov	x19, x0
  41b570:	b	41b50c <wcrtomb@plt+0x168ec>
  41b574:	stp	x29, x30, [sp, #-48]!
  41b578:	mov	x29, sp
  41b57c:	stp	x19, x20, [sp, #16]
  41b580:	stp	x21, x22, [sp, #32]
  41b584:	mov	w22, w0
  41b588:	mov	x21, x1
  41b58c:	mov	x20, x2
  41b590:	bl	437354 <argp_parse@@Base+0x3c14>
  41b594:	mov	x19, x0
  41b598:	cmp	x20, x0
  41b59c:	b.ls	41b5b0 <wcrtomb@plt+0x16990>  // b.plast
  41b5a0:	bl	404ad0 <__errno_location@plt>
  41b5a4:	ldr	w0, [x0]
  41b5a8:	cmp	w0, #0xb
  41b5ac:	b.eq	41b5c4 <wcrtomb@plt+0x169a4>  // b.none
  41b5b0:	mov	x0, x19
  41b5b4:	ldp	x19, x20, [sp, #16]
  41b5b8:	ldp	x21, x22, [sp, #32]
  41b5bc:	ldp	x29, x30, [sp], #48
  41b5c0:	ret
  41b5c4:	mov	w1, #0x3                   	// #3
  41b5c8:	mov	w0, w22
  41b5cc:	bl	440a14 <argp_parse@@Base+0xd2d4>
  41b5d0:	tbnz	w0, #31, 41b5b0 <wcrtomb@plt+0x16990>
  41b5d4:	tbz	w0, #11, 41b5b0 <wcrtomb@plt+0x16990>
  41b5d8:	and	w2, w0, #0xfffff7ff
  41b5dc:	mov	w1, #0x4                   	// #4
  41b5e0:	mov	w0, w22
  41b5e4:	bl	440a14 <argp_parse@@Base+0xd2d4>
  41b5e8:	cmn	w0, #0x1
  41b5ec:	b.eq	41b5b0 <wcrtomb@plt+0x16990>  // b.none
  41b5f0:	sub	x2, x20, x19
  41b5f4:	add	x1, x21, x19
  41b5f8:	mov	w0, w22
  41b5fc:	bl	437354 <argp_parse@@Base+0x3c14>
  41b600:	add	x19, x19, x0
  41b604:	b	41b5b0 <wcrtomb@plt+0x16990>
  41b608:	stp	x29, x30, [sp, #-48]!
  41b60c:	mov	x29, sp
  41b610:	mov	x5, x4
  41b614:	mov	x4, x3
  41b618:	stp	x4, x5, [sp, #16]
  41b61c:	mov	x3, #0x3ffffffe            	// #1073741822
  41b620:	str	x3, [sp, #40]
  41b624:	adrp	x3, 481000 <argp_program_version_hook@@Base+0x298>
  41b628:	ldr	w4, [x3, #496]
  41b62c:	add	x3, sp, #0x10
  41b630:	bl	435908 <argp_parse@@Base+0x21c8>
  41b634:	ldp	x29, x30, [sp], #48
  41b638:	ret
  41b63c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41b640:	ldr	x1, [x0, #2560]
  41b644:	sub	w0, w1, #0x1
  41b648:	cmp	x1, #0x0
  41b64c:	csel	w0, w0, wzr, ne  // ne = any
  41b650:	ret
  41b654:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41b658:	ldrsw	x0, [x0, #4032]
  41b65c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41b660:	ldr	x1, [x1, #2528]
  41b664:	add	x0, x0, x0, lsl #1
  41b668:	ldr	x0, [x1, x0, lsl #3]
  41b66c:	ret
  41b670:	stp	x29, x30, [sp, #-16]!
  41b674:	mov	x29, sp
  41b678:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  41b67c:	ldrb	w1, [x1, #889]
  41b680:	cbz	w1, 41b6a0 <wcrtomb@plt+0x16a80>
  41b684:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41b688:	ldr	w1, [x1, #408]
  41b68c:	tbnz	w1, #23, 41b698 <wcrtomb@plt+0x16a78>
  41b690:	ldp	x29, x30, [sp], #16
  41b694:	ret
  41b698:	bl	429a70 <wcrtomb@plt+0x24e50>
  41b69c:	b	41b690 <wcrtomb@plt+0x16a70>
  41b6a0:	bl	429a50 <wcrtomb@plt+0x24e30>
  41b6a4:	b	41b690 <wcrtomb@plt+0x16a70>
  41b6a8:	stp	x29, x30, [sp, #-64]!
  41b6ac:	mov	x29, sp
  41b6b0:	stp	x19, x20, [sp, #16]
  41b6b4:	mov	w19, w0
  41b6b8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41b6bc:	ldr	w0, [x0, #4032]
  41b6c0:	cmp	w0, w19
  41b6c4:	b.eq	41b7a8 <wcrtomb@plt+0x16b88>  // b.none
  41b6c8:	stp	x21, x22, [sp, #32]
  41b6cc:	str	x23, [sp, #48]
  41b6d0:	sbfiz	x20, x19, #1, #32
  41b6d4:	add	x20, x20, w19, sxtw
  41b6d8:	lsl	x20, x20, #3
  41b6dc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41b6e0:	ldr	x22, [x0, #2528]
  41b6e4:	add	x23, x22, x20
  41b6e8:	ldr	w21, [x23, #16]
  41b6ec:	cbnz	w21, 41b750 <wcrtomb@plt+0x16b30>
  41b6f0:	ldr	x0, [x22, x20]
  41b6f4:	ldrb	w0, [x0]
  41b6f8:	cmp	w0, #0x2f
  41b6fc:	b.ne	41b7b4 <wcrtomb@plt+0x16b94>  // b.any
  41b700:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41b704:	ldr	w2, [x0, #636]
  41b708:	and	w2, w2, #0xffff7fff
  41b70c:	ldr	x1, [x22, x20]
  41b710:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  41b714:	ldr	w0, [x0, #2184]
  41b718:	bl	4045c0 <__openat_2@plt>
  41b71c:	mov	w21, w0
  41b720:	tbnz	w0, #31, 41b7c0 <wcrtomb@plt+0x16ba0>
  41b724:	str	w0, [x23, #16]
  41b728:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41b72c:	ldr	x1, [x0, #2568]
  41b730:	cmp	x1, #0xf
  41b734:	b.hi	41b7c8 <wcrtomb@plt+0x16ba8>  // b.pmore
  41b738:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41b73c:	add	x0, x0, #0x9e0
  41b740:	add	x2, x1, #0x1
  41b744:	str	x2, [x0, #40]
  41b748:	add	x0, x0, #0x30
  41b74c:	str	w19, [x0, x1, lsl #2]
  41b750:	cmp	w21, #0x0
  41b754:	b.le	41b790 <wcrtomb@plt+0x16b70>
  41b758:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41b75c:	ldr	w2, [x0, #2576]
  41b760:	cmp	w19, w2
  41b764:	b.eq	41b788 <wcrtomb@plt+0x16b68>  // b.none
  41b768:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41b76c:	add	x1, x1, #0x9e0
  41b770:	add	x1, x1, #0x30
  41b774:	mov	w3, w2
  41b778:	ldr	w2, [x1, #4]
  41b77c:	str	w3, [x1, #4]!
  41b780:	cmp	w19, w2
  41b784:	b.ne	41b774 <wcrtomb@plt+0x16b54>  // b.any
  41b788:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41b78c:	str	w19, [x0, #2576]
  41b790:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41b794:	str	w19, [x0, #4032]
  41b798:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  41b79c:	str	w21, [x0, #2184]
  41b7a0:	ldp	x21, x22, [sp, #32]
  41b7a4:	ldr	x23, [sp, #48]
  41b7a8:	ldp	x19, x20, [sp, #16]
  41b7ac:	ldp	x29, x30, [sp], #64
  41b7b0:	ret
  41b7b4:	sub	w0, w19, #0x1
  41b7b8:	bl	41b6a8 <wcrtomb@plt+0x16a88>
  41b7bc:	b	41b700 <wcrtomb@plt+0x16ae0>
  41b7c0:	ldr	x0, [x22, x20]
  41b7c4:	bl	429bbc <wcrtomb@plt+0x24f9c>
  41b7c8:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41b7cc:	add	x0, x1, #0x9e0
  41b7d0:	ldrsw	x0, [x0, #108]
  41b7d4:	add	x0, x0, x0, lsl #1
  41b7d8:	lsl	x20, x0, #3
  41b7dc:	ldr	x23, [x1, #2528]
  41b7e0:	add	x22, x23, x20
  41b7e4:	ldr	w0, [x22, #16]
  41b7e8:	bl	4045d0 <close@plt>
  41b7ec:	cbnz	w0, 41b800 <wcrtomb@plt+0x16be0>
  41b7f0:	str	wzr, [x22, #16]
  41b7f4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41b7f8:	str	w19, [x0, #2636]
  41b7fc:	b	41b750 <wcrtomb@plt+0x16b30>
  41b800:	ldr	x0, [x23, x20]
  41b804:	bl	41b670 <wcrtomb@plt+0x16a50>
  41b808:	b	41b7f0 <wcrtomb@plt+0x16bd0>
  41b80c:	stp	x29, x30, [sp, #-16]!
  41b810:	mov	x29, sp
  41b814:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  41b818:	ldrb	w1, [x1, #889]
  41b81c:	cbz	w1, 41b83c <wcrtomb@plt+0x16c1c>
  41b820:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41b824:	ldr	w1, [x1, #408]
  41b828:	tbnz	w1, #23, 41b834 <wcrtomb@plt+0x16c14>
  41b82c:	ldp	x29, x30, [sp], #16
  41b830:	ret
  41b834:	bl	429bd4 <wcrtomb@plt+0x24fb4>
  41b838:	b	41b82c <wcrtomb@plt+0x16c0c>
  41b83c:	bl	429b9c <wcrtomb@plt+0x24f7c>
  41b840:	b	41b82c <wcrtomb@plt+0x16c0c>
  41b844:	stp	x29, x30, [sp, #-16]!
  41b848:	mov	x29, sp
  41b84c:	adrp	x3, 481000 <argp_program_version_hook@@Base+0x298>
  41b850:	ldrb	w3, [x3, #889]
  41b854:	cbz	w3, 41b874 <wcrtomb@plt+0x16c54>
  41b858:	adrp	x3, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41b85c:	ldr	w3, [x3, #408]
  41b860:	tbnz	w3, #23, 41b86c <wcrtomb@plt+0x16c4c>
  41b864:	ldp	x29, x30, [sp], #16
  41b868:	ret
  41b86c:	bl	429cc4 <wcrtomb@plt+0x250a4>
  41b870:	b	41b864 <wcrtomb@plt+0x16c44>
  41b874:	bl	429c14 <wcrtomb@plt+0x24ff4>
  41b878:	b	41b864 <wcrtomb@plt+0x16c44>
  41b87c:	stp	x29, x30, [sp, #-16]!
  41b880:	mov	x29, sp
  41b884:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  41b888:	ldrb	w1, [x1, #889]
  41b88c:	cbz	w1, 41b8ac <wcrtomb@plt+0x16c8c>
  41b890:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41b894:	ldr	w1, [x1, #408]
  41b898:	tbnz	w1, #23, 41b8a4 <wcrtomb@plt+0x16c84>
  41b89c:	ldp	x29, x30, [sp], #16
  41b8a0:	ret
  41b8a4:	bl	429e34 <wcrtomb@plt+0x25214>
  41b8a8:	b	41b89c <wcrtomb@plt+0x16c7c>
  41b8ac:	bl	429e14 <wcrtomb@plt+0x251f4>
  41b8b0:	b	41b89c <wcrtomb@plt+0x16c7c>
  41b8b4:	stp	x29, x30, [sp, #-16]!
  41b8b8:	mov	x29, sp
  41b8bc:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  41b8c0:	ldrb	w1, [x1, #889]
  41b8c4:	cbz	w1, 41b8e4 <wcrtomb@plt+0x16cc4>
  41b8c8:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41b8cc:	ldr	w1, [x1, #408]
  41b8d0:	tbnz	w1, #23, 41b8dc <wcrtomb@plt+0x16cbc>
  41b8d4:	ldp	x29, x30, [sp], #16
  41b8d8:	ret
  41b8dc:	bl	429e94 <wcrtomb@plt+0x25274>
  41b8e0:	b	41b8d4 <wcrtomb@plt+0x16cb4>
  41b8e4:	bl	429e74 <wcrtomb@plt+0x25254>
  41b8e8:	b	41b8d4 <wcrtomb@plt+0x16cb4>
  41b8ec:	stp	x29, x30, [sp, #-16]!
  41b8f0:	mov	x29, sp
  41b8f4:	adrp	x2, 481000 <argp_program_version_hook@@Base+0x298>
  41b8f8:	ldrb	w2, [x2, #889]
  41b8fc:	cbz	w2, 41b91c <wcrtomb@plt+0x16cfc>
  41b900:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41b904:	ldr	w2, [x2, #408]
  41b908:	tbnz	w2, #23, 41b914 <wcrtomb@plt+0x16cf4>
  41b90c:	ldp	x29, x30, [sp], #16
  41b910:	ret
  41b914:	bl	429f88 <wcrtomb@plt+0x25368>
  41b918:	b	41b90c <wcrtomb@plt+0x16cec>
  41b91c:	bl	429ed4 <wcrtomb@plt+0x252b4>
  41b920:	b	41b90c <wcrtomb@plt+0x16cec>
  41b924:	stp	x29, x30, [sp, #-16]!
  41b928:	mov	x29, sp
  41b92c:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  41b930:	ldrb	w1, [x1, #889]
  41b934:	cbz	w1, 41b954 <wcrtomb@plt+0x16d34>
  41b938:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41b93c:	ldr	w1, [x1, #408]
  41b940:	tbnz	w1, #23, 41b94c <wcrtomb@plt+0x16d2c>
  41b944:	ldp	x29, x30, [sp], #16
  41b948:	ret
  41b94c:	bl	42a0dc <wcrtomb@plt+0x254bc>
  41b950:	b	41b944 <wcrtomb@plt+0x16d24>
  41b954:	bl	42a0bc <wcrtomb@plt+0x2549c>
  41b958:	b	41b944 <wcrtomb@plt+0x16d24>
  41b95c:	stp	x29, x30, [sp, #-32]!
  41b960:	mov	x29, sp
  41b964:	stp	x19, x20, [sp, #16]
  41b968:	mov	x20, x0
  41b96c:	mov	x19, x2
  41b970:	tst	w1, #0xff
  41b974:	b.ne	41b988 <wcrtomb@plt+0x16d68>  // b.any
  41b978:	bl	404ad0 <__errno_location@plt>
  41b97c:	ldr	w0, [x0]
  41b980:	cmp	w0, #0x2
  41b984:	b.eq	41b99c <wcrtomb@plt+0x16d7c>  // b.none
  41b988:	mov	x0, x20
  41b98c:	blr	x19
  41b990:	ldp	x19, x20, [sp, #16]
  41b994:	ldp	x29, x30, [sp], #32
  41b998:	ret
  41b99c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41b9a0:	ldr	w0, [x0, #408]
  41b9a4:	tbz	w0, #6, 41b9ec <wcrtomb@plt+0x16dcc>
  41b9a8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41b9ac:	ldr	x0, [x0, #944]
  41b9b0:	cbz	x0, 41b9b8 <wcrtomb@plt+0x16d98>
  41b9b4:	blr	x0
  41b9b8:	mov	w2, #0x5                   	// #5
  41b9bc:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x13e64>
  41b9c0:	add	x1, x1, #0x58
  41b9c4:	mov	x0, #0x0                   	// #0
  41b9c8:	bl	4049c0 <dcgettext@plt>
  41b9cc:	mov	x19, x0
  41b9d0:	mov	x0, x20
  41b9d4:	bl	43efc4 <argp_parse@@Base+0xb884>
  41b9d8:	mov	x3, x0
  41b9dc:	mov	x2, x19
  41b9e0:	mov	w1, #0x0                   	// #0
  41b9e4:	mov	w0, #0x0                   	// #0
  41b9e8:	bl	404050 <error@plt>
  41b9ec:	mov	w0, #0x1                   	// #1
  41b9f0:	bl	424a80 <wcrtomb@plt+0x1fe60>
  41b9f4:	b	41b990 <wcrtomb@plt+0x16d70>
  41b9f8:	stp	x29, x30, [sp, #-16]!
  41b9fc:	mov	x29, sp
  41ba00:	bl	4041c0 <fork@plt>
  41ba04:	cmn	w0, #0x1
  41ba08:	b.eq	41ba14 <wcrtomb@plt+0x16df4>  // b.none
  41ba0c:	ldp	x29, x30, [sp], #16
  41ba10:	ret
  41ba14:	mov	w2, #0x5                   	// #5
  41ba18:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x13e64>
  41ba1c:	add	x1, x1, #0x80
  41ba20:	mov	x0, #0x0                   	// #0
  41ba24:	bl	4049c0 <dcgettext@plt>
  41ba28:	mov	x1, x0
  41ba2c:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x13e64>
  41ba30:	add	x0, x0, #0x90
  41ba34:	bl	429848 <wcrtomb@plt+0x24c28>
  41ba38:	stp	x29, x30, [sp, #-16]!
  41ba3c:	mov	x29, sp
  41ba40:	bl	404130 <pipe@plt>
  41ba44:	tbnz	w0, #31, 41ba50 <wcrtomb@plt+0x16e30>
  41ba48:	ldp	x29, x30, [sp], #16
  41ba4c:	ret
  41ba50:	mov	w2, #0x5                   	// #5
  41ba54:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x13e64>
  41ba58:	add	x1, x1, #0x98
  41ba5c:	mov	x0, #0x0                   	// #0
  41ba60:	bl	4049c0 <dcgettext@plt>
  41ba64:	mov	x1, x0
  41ba68:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x13e64>
  41ba6c:	add	x0, x0, #0xb0
  41ba70:	bl	429848 <wcrtomb@plt+0x24c28>
  41ba74:	stp	x29, x30, [sp, #-48]!
  41ba78:	mov	x29, sp
  41ba7c:	stp	x19, x20, [sp, #16]
  41ba80:	str	x21, [sp, #32]
  41ba84:	mov	x21, x0
  41ba88:	mov	x20, x1
  41ba8c:	bl	404570 <getpagesize@plt>
  41ba90:	sxtw	x19, w0
  41ba94:	adds	x0, x19, x20
  41ba98:	b.cs	41bac8 <wcrtomb@plt+0x16ea8>  // b.hs, b.nlast
  41ba9c:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  41baa0:	str	x0, [x21]
  41baa4:	sub	x1, x19, #0x1
  41baa8:	add	x1, x0, x1
  41baac:	udiv	x0, x1, x19
  41bab0:	msub	x0, x0, x19, x1
  41bab4:	sub	x0, x1, x0
  41bab8:	ldp	x19, x20, [sp, #16]
  41babc:	ldr	x21, [sp, #32]
  41bac0:	ldp	x29, x30, [sp], #48
  41bac4:	ret
  41bac8:	bl	40e5ec <wcrtomb@plt+0x99cc>
  41bacc:	stp	x29, x30, [sp, #-48]!
  41bad0:	mov	x29, sp
  41bad4:	stp	x19, x20, [sp, #16]
  41bad8:	str	x21, [sp, #32]
  41badc:	mov	x21, x0
  41bae0:	mov	x0, #0x18                  	// #24
  41bae4:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  41bae8:	mov	x19, x0
  41baec:	mov	x0, x21
  41baf0:	bl	403ff0 <strlen@plt>
  41baf4:	add	x0, x0, #0x2
  41baf8:	str	x0, [x19, #8]
  41bafc:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  41bb00:	mov	x20, x0
  41bb04:	str	x0, [x19]
  41bb08:	mov	x1, x21
  41bb0c:	bl	404910 <strcpy@plt>
  41bb10:	mov	x0, x20
  41bb14:	bl	403ff0 <strlen@plt>
  41bb18:	str	x0, [x19, #16]
  41bb1c:	add	x1, x20, x0
  41bb20:	ldurb	w1, [x1, #-1]
  41bb24:	cmp	w1, #0x2f
  41bb28:	b.eq	41bb3c <wcrtomb@plt+0x16f1c>  // b.none
  41bb2c:	add	x1, x0, #0x1
  41bb30:	str	x1, [x19, #16]
  41bb34:	mov	w1, #0x2f                  	// #47
  41bb38:	strb	w1, [x20, x0]
  41bb3c:	mov	x0, x19
  41bb40:	ldp	x19, x20, [sp, #16]
  41bb44:	ldr	x21, [sp, #32]
  41bb48:	ldp	x29, x30, [sp], #48
  41bb4c:	ret
  41bb50:	stp	x29, x30, [sp, #-32]!
  41bb54:	mov	x29, sp
  41bb58:	str	x19, [sp, #16]
  41bb5c:	mov	x19, x0
  41bb60:	ldr	x0, [x0]
  41bb64:	bl	4047c0 <free@plt>
  41bb68:	mov	x0, x19
  41bb6c:	bl	4047c0 <free@plt>
  41bb70:	ldr	x19, [sp, #16]
  41bb74:	ldp	x29, x30, [sp], #32
  41bb78:	ret
  41bb7c:	stp	x29, x30, [sp, #-48]!
  41bb80:	mov	x29, sp
  41bb84:	stp	x19, x20, [sp, #16]
  41bb88:	stp	x21, x22, [sp, #32]
  41bb8c:	mov	x19, x0
  41bb90:	mov	x22, x1
  41bb94:	mov	x0, x1
  41bb98:	bl	403ff0 <strlen@plt>
  41bb9c:	mov	x20, x0
  41bba0:	ldr	x3, [x19, #16]
  41bba4:	add	x0, x3, #0x1
  41bba8:	add	x0, x0, x20
  41bbac:	ldr	x1, [x19, #8]
  41bbb0:	cmp	x0, x1
  41bbb4:	b.cc	41bbe4 <wcrtomb@plt+0x16fc4>  // b.lo, b.ul, b.last
  41bbb8:	add	x21, x19, #0x8
  41bbbc:	mov	x1, x21
  41bbc0:	ldr	x0, [x19]
  41bbc4:	bl	440068 <argp_parse@@Base+0xc928>
  41bbc8:	str	x0, [x19]
  41bbcc:	ldr	x3, [x19, #16]
  41bbd0:	add	x2, x3, #0x1
  41bbd4:	add	x2, x2, x20
  41bbd8:	ldr	x4, [x19, #8]
  41bbdc:	cmp	x2, x4
  41bbe0:	b.cs	41bbbc <wcrtomb@plt+0x16f9c>  // b.hs, b.nlast
  41bbe4:	ldr	x0, [x19]
  41bbe8:	mov	x1, x22
  41bbec:	add	x0, x0, x3
  41bbf0:	bl	404910 <strcpy@plt>
  41bbf4:	ldr	x0, [x19]
  41bbf8:	ldp	x19, x20, [sp, #16]
  41bbfc:	ldp	x21, x22, [sp, #32]
  41bc00:	ldp	x29, x30, [sp], #48
  41bc04:	ret
  41bc08:	stp	x29, x30, [sp, #-48]!
  41bc0c:	mov	x29, sp
  41bc10:	stp	x19, x20, [sp, #16]
  41bc14:	stp	x21, x22, [sp, #32]
  41bc18:	mov	x19, x0
  41bc1c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41bc20:	add	x0, x0, #0x9e0
  41bc24:	ldr	x1, [x0, #112]
  41bc28:	ldr	x0, [x0, #32]
  41bc2c:	cmp	x0, x1
  41bc30:	b.eq	41bc48 <wcrtomb@plt+0x17028>  // b.none
  41bc34:	ldrb	w2, [x19]
  41bc38:	cbz	w2, 41bd74 <wcrtomb@plt+0x17154>
  41bc3c:	cmp	w2, #0x2e
  41bc40:	b.eq	41bd10 <wcrtomb@plt+0x170f0>  // b.none
  41bc44:	b	41bd48 <wcrtomb@plt+0x17128>
  41bc48:	cbnz	x1, 41be60 <wcrtomb@plt+0x17240>
  41bc4c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41bc50:	add	x2, x0, #0x9e0
  41bc54:	mov	x1, #0x2                   	// #2
  41bc58:	str	x1, [x2, #112]
  41bc5c:	ldr	x0, [x0, #2528]
  41bc60:	cbz	x0, 41bccc <wcrtomb@plt+0x170ac>
  41bc64:	add	x2, x1, #0x1
  41bc68:	add	x1, x2, x1, lsr #1
  41bc6c:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41bc70:	add	x21, x22, #0x9e0
  41bc74:	str	x1, [x21, #112]
  41bc78:	add	x1, x1, x1, lsl #1
  41bc7c:	lsl	x1, x1, #3
  41bc80:	bl	43ff70 <argp_parse@@Base+0xc830>
  41bc84:	mov	x20, x0
  41bc88:	str	x0, [x22, #2528]
  41bc8c:	ldr	x0, [x21, #32]
  41bc90:	cbnz	x0, 41bc34 <wcrtomb@plt+0x17014>
  41bc94:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x15e64>
  41bc98:	add	x0, x0, #0x340
  41bc9c:	str	x0, [x20]
  41bca0:	bl	440180 <argp_parse@@Base+0xca40>
  41bca4:	str	x0, [x20, #8]
  41bca8:	ldr	x0, [x21, #32]
  41bcac:	ldr	x3, [x22, #2528]
  41bcb0:	add	x1, x0, x0, lsl #1
  41bcb4:	add	x1, x3, x1, lsl #3
  41bcb8:	mov	w3, #0xffffff9c            	// #-100
  41bcbc:	str	w3, [x1, #16]
  41bcc0:	add	x0, x0, #0x1
  41bcc4:	str	x0, [x21, #32]
  41bcc8:	b	41bc34 <wcrtomb@plt+0x17014>
  41bccc:	mov	x2, #0x18                  	// #24
  41bcd0:	mul	x3, x1, x2
  41bcd4:	umulh	x2, x1, x2
  41bcd8:	cmp	x2, #0x0
  41bcdc:	cset	x2, ne  // ne = any
  41bce0:	cmp	x3, #0x0
  41bce4:	csinc	x2, x2, xzr, ge  // ge = tcont
  41bce8:	cbz	w2, 41bc6c <wcrtomb@plt+0x1704c>
  41bcec:	bl	40e5ec <wcrtomb@plt+0x99cc>
  41bcf0:	mov	x0, x19
  41bcf4:	add	x19, x0, #0x1
  41bcf8:	ldrb	w0, [x0, #1]
  41bcfc:	cmp	w0, #0x2f
  41bd00:	b.eq	41bcf0 <wcrtomb@plt+0x170d0>  // b.none
  41bd04:	ldrb	w0, [x19]
  41bd08:	cmp	w0, #0x2e
  41bd0c:	b.ne	41bd34 <wcrtomb@plt+0x17114>  // b.any
  41bd10:	ldrb	w0, [x19, #1]
  41bd14:	cmp	w0, #0x2f
  41bd18:	b.ne	41bd38 <wcrtomb@plt+0x17118>  // b.any
  41bd1c:	add	x0, x19, #0x2
  41bd20:	ldrb	w1, [x19, #2]
  41bd24:	mov	x19, x0
  41bd28:	cmp	w1, #0x2f
  41bd2c:	b.ne	41bd04 <wcrtomb@plt+0x170e4>  // b.any
  41bd30:	b	41bcf4 <wcrtomb@plt+0x170d4>
  41bd34:	mov	w2, w0
  41bd38:	cmp	w2, #0x2e
  41bd3c:	cset	w0, eq  // eq = none
  41bd40:	ldrb	w0, [x19, w0, uxtw]
  41bd44:	cbz	w0, 41bd64 <wcrtomb@plt+0x17144>
  41bd48:	ldrb	w0, [x19]
  41bd4c:	cmp	w0, #0x2f
  41bd50:	b.ne	41bd74 <wcrtomb@plt+0x17154>  // b.any
  41bd54:	mov	x0, x19
  41bd58:	bl	440154 <argp_parse@@Base+0xca14>
  41bd5c:	mov	x21, x0
  41bd60:	b	41bdf4 <wcrtomb@plt+0x171d4>
  41bd64:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41bd68:	ldr	x0, [x0, #2560]
  41bd6c:	sub	w0, w0, #0x1
  41bd70:	b	41be24 <wcrtomb@plt+0x17204>
  41bd74:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41bd78:	add	x0, x1, #0x9e0
  41bd7c:	ldr	x0, [x0, #32]
  41bd80:	ldr	x1, [x1, #2528]
  41bd84:	add	x0, x0, x0, lsl #1
  41bd88:	add	x0, x1, x0, lsl #3
  41bd8c:	ldur	x21, [x0, #-16]
  41bd90:	cbz	x21, 41bdf4 <wcrtomb@plt+0x171d4>
  41bd94:	mov	x0, x21
  41bd98:	bl	41bacc <wcrtomb@plt+0x16eac>
  41bd9c:	mov	x20, x0
  41bda0:	ldr	x0, [x0]
  41bda4:	ldr	x1, [x20, #16]
  41bda8:	add	x0, x0, x1
  41bdac:	ldurb	w0, [x0, #-1]
  41bdb0:	cmp	w0, #0x2f
  41bdb4:	b.ne	41be34 <wcrtomb@plt+0x17214>  // b.any
  41bdb8:	mov	x1, x19
  41bdbc:	mov	x0, x20
  41bdc0:	bl	41bb7c <wcrtomb@plt+0x16f5c>
  41bdc4:	mov	x0, x19
  41bdc8:	bl	403ff0 <strlen@plt>
  41bdcc:	ldr	x1, [x20, #16]
  41bdd0:	add	x0, x0, x1
  41bdd4:	str	x0, [x20, #16]
  41bdd8:	ldr	x21, [x20]
  41bddc:	add	x1, x21, x0
  41bde0:	ldurb	w1, [x1, #-1]
  41bde4:	cmp	w1, #0x2f
  41bde8:	b.eq	41be58 <wcrtomb@plt+0x17238>  // b.none
  41bdec:	mov	x0, x20
  41bdf0:	bl	4047c0 <free@plt>
  41bdf4:	adrp	x3, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41bdf8:	add	x2, x3, #0x9e0
  41bdfc:	ldr	x0, [x2, #32]
  41be00:	add	x1, x0, x0, lsl #1
  41be04:	lsl	x1, x1, #3
  41be08:	ldr	x4, [x3, #2528]
  41be0c:	add	x3, x4, x1
  41be10:	str	x19, [x4, x1]
  41be14:	str	x21, [x3, #8]
  41be18:	str	wzr, [x3, #16]
  41be1c:	add	x1, x0, #0x1
  41be20:	str	x1, [x2, #32]
  41be24:	ldp	x19, x20, [sp, #16]
  41be28:	ldp	x21, x22, [sp, #32]
  41be2c:	ldp	x29, x30, [sp], #48
  41be30:	ret
  41be34:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x3be64>
  41be38:	add	x1, x1, #0x888
  41be3c:	add	x1, x1, #0x8
  41be40:	mov	x0, x20
  41be44:	bl	41bb7c <wcrtomb@plt+0x16f5c>
  41be48:	ldr	x0, [x20, #16]
  41be4c:	add	x0, x0, #0x1
  41be50:	str	x0, [x20, #16]
  41be54:	b	41bdb8 <wcrtomb@plt+0x17198>
  41be58:	strb	wzr, [x21, x0]
  41be5c:	b	41bdec <wcrtomb@plt+0x171cc>
  41be60:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41be64:	add	x1, x0, #0x9e0
  41be68:	ldr	x0, [x0, #2528]
  41be6c:	ldr	x1, [x1, #112]
  41be70:	cbz	x0, 41bccc <wcrtomb@plt+0x170ac>
  41be74:	mov	x2, #0xe38d                	// #58253
  41be78:	movk	x2, #0x8e38, lsl #16
  41be7c:	movk	x2, #0x38e3, lsl #32
  41be80:	movk	x2, #0x38e, lsl #48
  41be84:	cmp	x1, x2
  41be88:	b.ls	41bc64 <wcrtomb@plt+0x17044>  // b.plast
  41be8c:	bl	40e5ec <wcrtomb@plt+0x99cc>
  41be90:	stp	x29, x30, [sp, #-48]!
  41be94:	mov	x29, sp
  41be98:	stp	x19, x20, [sp, #16]
  41be9c:	str	x21, [sp, #32]
  41bea0:	mov	x19, x0
  41bea4:	mov	w21, w1
  41bea8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41beac:	ldr	w2, [x0, #644]
  41beb0:	orr	w2, w2, #0x4000
  41beb4:	mov	x1, x19
  41beb8:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  41bebc:	ldr	w0, [x0, #2184]
  41bec0:	bl	4045c0 <__openat_2@plt>
  41bec4:	tbz	w0, #31, 41bf04 <wcrtomb@plt+0x172e4>
  41bec8:	cbnz	w21, 41bedc <wcrtomb@plt+0x172bc>
  41becc:	bl	404ad0 <__errno_location@plt>
  41bed0:	ldr	w0, [x0]
  41bed4:	cmp	w0, #0x2
  41bed8:	b.eq	41bf4c <wcrtomb@plt+0x1732c>  // b.none
  41bedc:	mov	x0, x19
  41bee0:	bl	429b9c <wcrtomb@plt+0x24f7c>
  41bee4:	mov	w1, #0x0                   	// #0
  41bee8:	mov	x20, #0x0                   	// #0
  41beec:	cbnz	w1, 41bf40 <wcrtomb@plt+0x17320>
  41bef0:	mov	x0, x20
  41bef4:	ldp	x19, x20, [sp, #16]
  41bef8:	ldr	x21, [sp, #32]
  41befc:	ldp	x29, x30, [sp], #48
  41bf00:	ret
  41bf04:	mov	w20, w0
  41bf08:	bl	404620 <fdopendir@plt>
  41bf0c:	mov	x21, x0
  41bf10:	cbz	x0, 41bf54 <wcrtomb@plt+0x17334>
  41bf14:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41bf18:	ldr	w1, [x0, #456]
  41bf1c:	mov	x0, x21
  41bf20:	bl	43f604 <argp_parse@@Base+0xbec4>
  41bf24:	mov	x20, x0
  41bf28:	cbz	x0, 41bf70 <wcrtomb@plt+0x17350>
  41bf2c:	mov	x0, x21
  41bf30:	bl	4045a0 <closedir@plt>
  41bf34:	cmp	w0, #0x0
  41bf38:	cset	w1, ne  // ne = any
  41bf3c:	b	41beec <wcrtomb@plt+0x172cc>
  41bf40:	mov	x0, x19
  41bf44:	bl	429e74 <wcrtomb@plt+0x25254>
  41bf48:	b	41bef0 <wcrtomb@plt+0x172d0>
  41bf4c:	mov	x20, #0x0                   	// #0
  41bf50:	b	41bef0 <wcrtomb@plt+0x172d0>
  41bf54:	mov	x0, x19
  41bf58:	bl	429e74 <wcrtomb@plt+0x25254>
  41bf5c:	mov	w0, w20
  41bf60:	bl	4045d0 <close@plt>
  41bf64:	cmp	w0, #0x0
  41bf68:	cset	w1, ne  // ne = any
  41bf6c:	b	41bee8 <wcrtomb@plt+0x172c8>
  41bf70:	mov	x0, x19
  41bf74:	bl	429e74 <wcrtomb@plt+0x25254>
  41bf78:	b	41bf2c <wcrtomb@plt+0x1730c>
  41bf7c:	stp	x29, x30, [sp, #-96]!
  41bf80:	mov	x29, sp
  41bf84:	stp	x19, x20, [sp, #16]
  41bf88:	stp	x21, x22, [sp, #32]
  41bf8c:	mov	x19, x0
  41bf90:	mov	w22, w1
  41bf94:	mov	w2, #0x0                   	// #0
  41bf98:	mov	x1, x0
  41bf9c:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  41bfa0:	ldr	w0, [x0, #2184]
  41bfa4:	bl	404160 <unlinkat@plt>
  41bfa8:	mov	w20, #0x1                   	// #1
  41bfac:	cbz	w0, 41bfcc <wcrtomb@plt+0x173ac>
  41bfb0:	bl	404ad0 <__errno_location@plt>
  41bfb4:	mov	x21, x0
  41bfb8:	ldr	w0, [x0]
  41bfbc:	cmp	w0, #0x1
  41bfc0:	mov	w20, #0x0                   	// #0
  41bfc4:	ccmp	w0, #0x15, #0x4, ne  // ne = any
  41bfc8:	b.eq	41bfe0 <wcrtomb@plt+0x173c0>  // b.none
  41bfcc:	mov	w0, w20
  41bfd0:	ldp	x19, x20, [sp, #16]
  41bfd4:	ldp	x21, x22, [sp, #32]
  41bfd8:	ldp	x29, x30, [sp], #96
  41bfdc:	ret
  41bfe0:	mov	x0, x19
  41bfe4:	bl	41b0b4 <wcrtomb@plt+0x16494>
  41bfe8:	mov	w20, #0x1                   	// #1
  41bfec:	cbz	w0, 41bfcc <wcrtomb@plt+0x173ac>
  41bff0:	ldr	w0, [x21]
  41bff4:	cmp	w0, #0x27
  41bff8:	b.hi	41c0e4 <wcrtomb@plt+0x174c4>  // b.pmore
  41bffc:	mov	x2, #0x1                   	// #1
  41c000:	lsl	x2, x2, x0
  41c004:	mov	w20, #0x0                   	// #0
  41c008:	mov	x0, #0x1                   	// #1
  41c00c:	movk	x0, #0x2, lsl #16
  41c010:	movk	x0, #0x80, lsl #32
  41c014:	tst	x2, x0
  41c018:	b.eq	41bfcc <wcrtomb@plt+0x173ac>  // b.none
  41c01c:	cmp	w22, #0x1
  41c020:	b.eq	41c030 <wcrtomb@plt+0x17410>  // b.none
  41c024:	cmp	w22, #0x2
  41c028:	csetm	w20, eq  // eq = none
  41c02c:	b	41bfcc <wcrtomb@plt+0x173ac>
  41c030:	stp	x25, x26, [sp, #64]
  41c034:	mov	w1, #0x0                   	// #0
  41c038:	mov	x0, x19
  41c03c:	bl	41be90 <wcrtomb@plt+0x17270>
  41c040:	mov	x25, x0
  41c044:	cbz	x0, 41c0ec <wcrtomb@plt+0x174cc>
  41c048:	stp	x23, x24, [sp, #48]
  41c04c:	str	x27, [sp, #80]
  41c050:	mov	x24, x0
  41c054:	mov	w26, #0x1                   	// #1
  41c058:	mov	x0, x24
  41c05c:	bl	403ff0 <strlen@plt>
  41c060:	mov	x22, x0
  41c064:	cbz	x0, 41c0bc <wcrtomb@plt+0x1749c>
  41c068:	mov	x1, x24
  41c06c:	mov	x0, x19
  41c070:	bl	41e544 <wcrtomb@plt+0x19924>
  41c074:	mov	x23, x0
  41c078:	mov	w1, w26
  41c07c:	bl	41bf7c <wcrtomb@plt+0x1735c>
  41c080:	mov	w20, w0
  41c084:	ldr	w27, [x21]
  41c088:	mov	x0, x23
  41c08c:	bl	4047c0 <free@plt>
  41c090:	cbz	w20, 41c0a0 <wcrtomb@plt+0x17480>
  41c094:	add	x22, x22, #0x1
  41c098:	add	x24, x24, x22
  41c09c:	b	41c058 <wcrtomb@plt+0x17438>
  41c0a0:	mov	x0, x25
  41c0a4:	bl	4047c0 <free@plt>
  41c0a8:	str	w27, [x21]
  41c0ac:	ldp	x23, x24, [sp, #48]
  41c0b0:	ldp	x25, x26, [sp, #64]
  41c0b4:	ldr	x27, [sp, #80]
  41c0b8:	b	41bfcc <wcrtomb@plt+0x173ac>
  41c0bc:	mov	x0, x25
  41c0c0:	bl	4047c0 <free@plt>
  41c0c4:	mov	x0, x19
  41c0c8:	bl	41b0b4 <wcrtomb@plt+0x16494>
  41c0cc:	cmp	w0, #0x0
  41c0d0:	cset	w20, eq  // eq = none
  41c0d4:	ldp	x23, x24, [sp, #48]
  41c0d8:	ldp	x25, x26, [sp, #64]
  41c0dc:	ldr	x27, [sp, #80]
  41c0e0:	b	41bfcc <wcrtomb@plt+0x173ac>
  41c0e4:	mov	w20, #0x0                   	// #0
  41c0e8:	b	41bfcc <wcrtomb@plt+0x173ac>
  41c0ec:	mov	w20, #0x0                   	// #0
  41c0f0:	ldp	x25, x26, [sp, #64]
  41c0f4:	b	41bfcc <wcrtomb@plt+0x173ac>
  41c0f8:	mov	w2, w0
  41c0fc:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x3be64>
  41c100:	add	x0, x1, #0x898
  41c104:	b	41c118 <wcrtomb@plt+0x174f8>
  41c108:	ldr	w1, [x0, #8]
  41c10c:	cmp	w1, w2
  41c110:	b.eq	41c134 <wcrtomb@plt+0x17514>  // b.none
  41c114:	add	x0, x0, #0x30
  41c118:	ldr	x1, [x0]
  41c11c:	cbnz	x1, 41c108 <wcrtomb@plt+0x174e8>
  41c120:	ldr	w1, [x0, #8]
  41c124:	cbnz	w1, 41c108 <wcrtomb@plt+0x174e8>
  41c128:	ldr	x1, [x0, #32]
  41c12c:	cbnz	x1, 41c108 <wcrtomb@plt+0x174e8>
  41c130:	mov	x0, x1
  41c134:	ret
  41c138:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41c13c:	ldr	x0, [x0, #2648]
  41c140:	cbz	x0, 41c160 <wcrtomb@plt+0x17540>
  41c144:	ldr	x0, [x0, #8]
  41c148:	cbz	x0, 41c160 <wcrtomb@plt+0x17540>
  41c14c:	mov	x1, x0
  41c150:	ldr	x0, [x0, #8]
  41c154:	cbnz	x0, 41c14c <wcrtomb@plt+0x1752c>
  41c158:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41c15c:	str	x1, [x0, #2648]
  41c160:	ret
  41c164:	stp	x29, x30, [sp, #-64]!
  41c168:	mov	x29, sp
  41c16c:	stp	x19, x20, [sp, #16]
  41c170:	mov	x20, x0
  41c174:	cmp	w1, #0x1
  41c178:	b.eq	41c280 <wcrtomb@plt+0x17660>  // b.none
  41c17c:	stp	x21, x22, [sp, #32]
  41c180:	mov	w3, w1
  41c184:	mov	x21, x2
  41c188:	cmp	w1, #0x2
  41c18c:	b.eq	41c1ec <wcrtomb@plt+0x175cc>  // b.none
  41c190:	add	w1, w1, #0x1
  41c194:	add	w1, w1, w1, lsr #31
  41c198:	asr	w1, w1, #1
  41c19c:	add	w3, w3, w3, lsr #31
  41c1a0:	asr	w19, w3, #1
  41c1a4:	subs	w2, w1, #0x1
  41c1a8:	b.ne	41c218 <wcrtomb@plt+0x175f8>  // b.any
  41c1ac:	ldr	x22, [x0]
  41c1b0:	str	xzr, [x0]
  41c1b4:	mov	x2, x21
  41c1b8:	mov	x0, x20
  41c1bc:	bl	41c164 <wcrtomb@plt+0x17544>
  41c1c0:	mov	x20, x0
  41c1c4:	mov	x2, x21
  41c1c8:	mov	w1, w19
  41c1cc:	mov	x0, x22
  41c1d0:	bl	41c164 <wcrtomb@plt+0x17544>
  41c1d4:	mov	x19, x0
  41c1d8:	cmp	x20, #0x0
  41c1dc:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  41c1e0:	b.eq	41c268 <wcrtomb@plt+0x17648>  // b.none
  41c1e4:	add	x22, sp, #0x38
  41c1e8:	b	41c248 <wcrtomb@plt+0x17628>
  41c1ec:	ldr	x1, [x0]
  41c1f0:	blr	x2
  41c1f4:	mov	w1, w0
  41c1f8:	mov	x0, x20
  41c1fc:	cmp	w1, #0x0
  41c200:	b.le	41c28c <wcrtomb@plt+0x1766c>
  41c204:	ldr	x0, [x20]
  41c208:	str	x20, [x0]
  41c20c:	str	xzr, [x20]
  41c210:	ldp	x21, x22, [sp, #32]
  41c214:	b	41c280 <wcrtomb@plt+0x17660>
  41c218:	ldr	x0, [x0]
  41c21c:	subs	w2, w2, #0x1
  41c220:	b.eq	41c1ac <wcrtomb@plt+0x1758c>  // b.none
  41c224:	b	41c218 <wcrtomb@plt+0x175f8>
  41c228:	mov	x0, x20
  41c22c:	mov	x1, x20
  41c230:	ldr	x20, [x20]
  41c234:	str	x1, [x22]
  41c238:	cmp	x20, #0x0
  41c23c:	ccmp	x19, #0x0, #0x4, ne  // ne = any
  41c240:	b.eq	41c26c <wcrtomb@plt+0x1764c>  // b.none
  41c244:	mov	x22, x0
  41c248:	mov	x1, x19
  41c24c:	mov	x0, x20
  41c250:	blr	x21
  41c254:	tbnz	w0, #31, 41c228 <wcrtomb@plt+0x17608>
  41c258:	mov	x0, x19
  41c25c:	mov	x1, x19
  41c260:	ldr	x19, [x19]
  41c264:	b	41c234 <wcrtomb@plt+0x17614>
  41c268:	add	x0, sp, #0x38
  41c26c:	cmp	x20, #0x0
  41c270:	csel	x20, x20, x19, ne  // ne = any
  41c274:	str	x20, [x0]
  41c278:	ldr	x0, [sp, #56]
  41c27c:	ldp	x21, x22, [sp, #32]
  41c280:	ldp	x19, x20, [sp, #16]
  41c284:	ldp	x29, x30, [sp], #64
  41c288:	ret
  41c28c:	ldp	x21, x22, [sp, #32]
  41c290:	b	41c280 <wcrtomb@plt+0x17660>
  41c294:	stp	x29, x30, [sp, #-16]!
  41c298:	mov	x29, sp
  41c29c:	mov	x0, #0x38                  	// #56
  41c2a0:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  41c2a4:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41c2a8:	ldr	x1, [x1, #2648]
  41c2ac:	cbz	x1, 41c2d8 <wcrtomb@plt+0x176b8>
  41c2b0:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41c2b4:	ldr	x1, [x1, #2648]
  41c2b8:	ldr	x2, [x1, #8]
  41c2bc:	str	x2, [x0, #8]
  41c2c0:	cbz	x2, 41c2c8 <wcrtomb@plt+0x176a8>
  41c2c4:	str	x0, [x2]
  41c2c8:	str	x1, [x0]
  41c2cc:	str	x0, [x1, #8]
  41c2d0:	ldp	x29, x30, [sp], #16
  41c2d4:	ret
  41c2d8:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41c2dc:	str	x0, [x1, #2648]
  41c2e0:	str	xzr, [x0]
  41c2e4:	str	xzr, [x0, #8]
  41c2e8:	mov	w1, #0x3                   	// #3
  41c2ec:	str	w1, [x0, #16]
  41c2f0:	mov	x0, #0x38                  	// #56
  41c2f4:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  41c2f8:	b	41c2b0 <wcrtomb@plt+0x17690>
  41c2fc:	mov	x3, x0
  41c300:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41c304:	ldr	x0, [x0, #696]
  41c308:	cbnz	x0, 41c348 <wcrtomb@plt+0x17728>
  41c30c:	ldr	x0, [x1, #48]
  41c310:	cmp	x0, #0x0
  41c314:	cset	w2, ne  // ne = any
  41c318:	ldr	x0, [x3, #48]
  41c31c:	cmp	x0, #0x0
  41c320:	cset	w0, ne  // ne = any
  41c324:	subs	w0, w2, w0
  41c328:	b.ne	41c364 <wcrtomb@plt+0x17744>  // b.any
  41c32c:	stp	x29, x30, [sp, #-16]!
  41c330:	mov	x29, sp
  41c334:	ldr	x1, [x1, #16]
  41c338:	ldr	x0, [x3, #16]
  41c33c:	bl	404720 <strcmp@plt>
  41c340:	ldp	x29, x30, [sp], #16
  41c344:	ret
  41c348:	ldr	x2, [x1, #48]
  41c34c:	cmp	x0, x2
  41c350:	cset	w2, ls  // ls = plast
  41c354:	ldr	x4, [x3, #48]
  41c358:	cmp	x0, x4
  41c35c:	cset	w0, ls  // ls = plast
  41c360:	b	41c324 <wcrtomb@plt+0x17704>
  41c364:	ret
  41c368:	stp	x29, x30, [sp, #-16]!
  41c36c:	mov	x29, sp
  41c370:	ldr	x1, [x1, #88]
  41c374:	ldr	x0, [x0, #88]
  41c378:	bl	404720 <strcmp@plt>
  41c37c:	cmp	w0, #0x0
  41c380:	cset	w0, eq  // eq = none
  41c384:	ldp	x29, x30, [sp], #16
  41c388:	ret
  41c38c:	stp	x29, x30, [sp, #-16]!
  41c390:	mov	x29, sp
  41c394:	ldr	x1, [x1, #16]
  41c398:	ldr	x0, [x0, #16]
  41c39c:	bl	404720 <strcmp@plt>
  41c3a0:	ldp	x29, x30, [sp], #16
  41c3a4:	ret
  41c3a8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41c3ac:	ldr	x0, [x0, #4056]
  41c3b0:	cbz	x0, 41c3e4 <wcrtomb@plt+0x177c4>
  41c3b4:	stp	x29, x30, [sp, #-32]!
  41c3b8:	mov	x29, sp
  41c3bc:	str	x19, [sp, #16]
  41c3c0:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41c3c4:	ldr	x1, [x0, #8]
  41c3c8:	str	x1, [x19, #4056]
  41c3cc:	bl	4047c0 <free@plt>
  41c3d0:	ldr	x0, [x19, #4056]
  41c3d4:	cbnz	x0, 41c3c4 <wcrtomb@plt+0x177a4>
  41c3d8:	ldr	x19, [sp, #16]
  41c3dc:	ldp	x29, x30, [sp], #32
  41c3e0:	ret
  41c3e4:	ret
  41c3e8:	stp	x29, x30, [sp, #-32]!
  41c3ec:	mov	x29, sp
  41c3f0:	str	x19, [sp, #16]
  41c3f4:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41c3f8:	ldr	x19, [x1, #2648]
  41c3fc:	ldr	x0, [x19]
  41c400:	str	x0, [x1, #2648]
  41c404:	cbz	x0, 41c40c <wcrtomb@plt+0x177ec>
  41c408:	str	xzr, [x0, #8]
  41c40c:	ldr	w0, [x19, #16]
  41c410:	cmp	w0, #0x4
  41c414:	ccmp	w0, #0x1, #0x4, ne  // ne = any
  41c418:	b.ne	41c454 <wcrtomb@plt+0x17834>  // b.any
  41c41c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41c420:	ldr	w0, [x0, #796]
  41c424:	cmp	w0, #0x3
  41c428:	ccmp	w0, #0x8, #0x4, ne  // ne = any
  41c42c:	b.ne	41c464 <wcrtomb@plt+0x17844>  // b.any
  41c430:	str	xzr, [x19]
  41c434:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41c438:	ldr	x0, [x0, #4056]
  41c43c:	str	x0, [x19, #8]
  41c440:	cbz	x0, 41c448 <wcrtomb@plt+0x17828>
  41c444:	str	x19, [x0]
  41c448:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41c44c:	str	x19, [x0, #4056]
  41c450:	b	41c464 <wcrtomb@plt+0x17844>
  41c454:	cmp	w0, #0x3
  41c458:	b.ne	41c470 <wcrtomb@plt+0x17850>  // b.any
  41c45c:	mov	x0, x19
  41c460:	bl	4047c0 <free@plt>
  41c464:	ldr	x19, [sp, #16]
  41c468:	ldp	x29, x30, [sp], #32
  41c46c:	ret
  41c470:	bl	41c3a8 <wcrtomb@plt+0x17788>
  41c474:	b	41c45c <wcrtomb@plt+0x1783c>
  41c478:	cbz	x0, 41c4b0 <wcrtomb@plt+0x17890>
  41c47c:	stp	x29, x30, [sp, #-32]!
  41c480:	mov	x29, sp
  41c484:	str	x19, [sp, #16]
  41c488:	mov	x19, x0
  41c48c:	ldr	x0, [x0, #16]
  41c490:	bl	4047c0 <free@plt>
  41c494:	ldr	x0, [x19, #88]
  41c498:	bl	4047c0 <free@plt>
  41c49c:	mov	x0, x19
  41c4a0:	bl	4047c0 <free@plt>
  41c4a4:	ldr	x19, [sp, #16]
  41c4a8:	ldp	x29, x30, [sp], #32
  41c4ac:	ret
  41c4b0:	ret
  41c4b4:	stp	x29, x30, [sp, #-32]!
  41c4b8:	mov	x29, sp
  41c4bc:	str	x19, [sp, #16]
  41c4c0:	mov	x19, x0
  41c4c4:	bl	403ff0 <strlen@plt>
  41c4c8:	sub	x1, x0, #0x1
  41c4cc:	add	x1, x19, x1
  41c4d0:	cmp	x19, x1
  41c4d4:	b.cs	41c4f0 <wcrtomb@plt+0x178d0>  // b.hs, b.nlast
  41c4d8:	ldrb	w2, [x1]
  41c4dc:	cmp	w2, #0x2f
  41c4e0:	b.ne	41c4f0 <wcrtomb@plt+0x178d0>  // b.any
  41c4e4:	strb	wzr, [x1], #-1
  41c4e8:	cmp	x19, x1
  41c4ec:	b.ne	41c4d8 <wcrtomb@plt+0x178b8>  // b.any
  41c4f0:	ldr	x19, [sp, #16]
  41c4f4:	ldp	x29, x30, [sp], #32
  41c4f8:	ret
  41c4fc:	stp	x29, x30, [sp, #-320]!
  41c500:	mov	x29, sp
  41c504:	stp	x19, x20, [sp, #16]
  41c508:	ldrb	w19, [x0]
  41c50c:	cbz	w19, 41c64c <wcrtomb@plt+0x17a2c>
  41c510:	str	x21, [sp, #32]
  41c514:	mov	x20, x0
  41c518:	mov	x21, x1
  41c51c:	bl	404750 <__ctype_b_loc@plt>
  41c520:	ldr	x2, [x0]
  41c524:	and	x0, x19, #0xff
  41c528:	ldrh	w0, [x2, x0, lsl #1]
  41c52c:	tbz	w0, #13, 41c550 <wcrtomb@plt+0x17930>
  41c530:	ldrb	w19, [x20, #1]!
  41c534:	cbnz	w19, 41c524 <wcrtomb@plt+0x17904>
  41c538:	mov	w19, #0x1                   	// #1
  41c53c:	ldr	x21, [sp, #32]
  41c540:	mov	w0, w19
  41c544:	ldp	x19, x20, [sp, #16]
  41c548:	ldp	x29, x30, [sp], #320
  41c54c:	ret
  41c550:	cmp	w19, #0x2d
  41c554:	b.ne	41c654 <wcrtomb@plt+0x17a34>  // b.any
  41c558:	mov	x0, #0x1                   	// #1
  41c55c:	str	x0, [sp, #104]
  41c560:	mov	w2, #0xe46                 	// #3654
  41c564:	movk	w2, #0x200, lsl #16
  41c568:	add	x1, sp, #0x58
  41c56c:	mov	x0, x20
  41c570:	bl	42e010 <wcrtomb@plt+0x293f0>
  41c574:	mov	w19, w0
  41c578:	cbnz	w0, 41c600 <wcrtomb@plt+0x179e0>
  41c57c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41c580:	ldr	x1, [x0, #3480]
  41c584:	ldr	x0, [sp, #96]
  41c588:	str	x1, [x0]
  41c58c:	mov	w0, #0x2                   	// #2
  41c590:	str	w0, [sp, #56]
  41c594:	ldr	x0, [x21, #24]
  41c598:	str	x0, [sp, #64]
  41c59c:	ldr	x0, [x21, #32]
  41c5a0:	str	x0, [sp, #72]
  41c5a4:	add	x2, sp, #0x38
  41c5a8:	ldr	x1, [sp, #96]
  41c5ac:	ldr	x3, [sp, #88]
  41c5b0:	ldr	x0, [sp, #104]
  41c5b4:	add	w0, w3, w0
  41c5b8:	bl	424878 <wcrtomb@plt+0x1fc58>
  41c5bc:	ldr	x0, [sp, #88]
  41c5c0:	ldr	x1, [sp, #104]
  41c5c4:	cmn	x0, x1
  41c5c8:	b.eq	41c5f0 <wcrtomb@plt+0x179d0>  // b.none
  41c5cc:	mov	x1, #0x0                   	// #0
  41c5d0:	ldr	x2, [sp, #96]
  41c5d4:	str	xzr, [x2, x1, lsl #3]
  41c5d8:	add	x1, x1, #0x1
  41c5dc:	ldr	x2, [sp, #88]
  41c5e0:	ldr	x3, [sp, #104]
  41c5e4:	add	x2, x2, x3
  41c5e8:	cmp	x2, x1
  41c5ec:	b.hi	41c5d0 <wcrtomb@plt+0x179b0>  // b.pmore
  41c5f0:	add	x0, sp, #0x58
  41c5f4:	bl	42c074 <wcrtomb@plt+0x27454>
  41c5f8:	ldr	x21, [sp, #32]
  41c5fc:	b	41c540 <wcrtomb@plt+0x17920>
  41c600:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41c604:	ldr	x0, [x0, #944]
  41c608:	cbz	x0, 41c610 <wcrtomb@plt+0x179f0>
  41c60c:	blr	x0
  41c610:	mov	w2, #0x5                   	// #5
  41c614:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  41c618:	add	x1, x1, #0x2d0
  41c61c:	mov	x0, #0x0                   	// #0
  41c620:	bl	4049c0 <dcgettext@plt>
  41c624:	mov	x19, x0
  41c628:	add	x0, sp, #0x58
  41c62c:	bl	42c118 <wcrtomb@plt+0x274f8>
  41c630:	mov	x4, x0
  41c634:	mov	x3, x20
  41c638:	mov	x2, x19
  41c63c:	mov	w1, #0x0                   	// #0
  41c640:	mov	w0, #0x0                   	// #0
  41c644:	bl	404050 <error@plt>
  41c648:	bl	40e5ac <wcrtomb@plt+0x998c>
  41c64c:	mov	w19, #0x1                   	// #1
  41c650:	b	41c540 <wcrtomb@plt+0x17920>
  41c654:	mov	w19, #0x1                   	// #1
  41c658:	ldr	x21, [sp, #32]
  41c65c:	b	41c540 <wcrtomb@plt+0x17920>
  41c660:	stp	x29, x30, [sp, #-48]!
  41c664:	mov	x29, sp
  41c668:	stp	x19, x20, [sp, #16]
  41c66c:	mov	w20, w1
  41c670:	ldr	x1, [x0]
  41c674:	cbz	x1, 41c69c <wcrtomb@plt+0x17a7c>
  41c678:	str	x21, [sp, #32]
  41c67c:	add	x19, x0, #0x8
  41c680:	adrp	x21, 481000 <argp_program_version_hook@@Base+0x298>
  41c684:	mov	w2, w20
  41c688:	ldr	x0, [x21]
  41c68c:	bl	435364 <argp_parse@@Base+0x1c24>
  41c690:	ldr	x1, [x19], #8
  41c694:	cbnz	x1, 41c684 <wcrtomb@plt+0x17a64>
  41c698:	ldr	x21, [sp, #32]
  41c69c:	ldp	x19, x20, [sp, #16]
  41c6a0:	ldp	x29, x30, [sp], #48
  41c6a4:	ret
  41c6a8:	stp	x29, x30, [sp, #-32]!
  41c6ac:	mov	x29, sp
  41c6b0:	stp	x19, x20, [sp, #16]
  41c6b4:	mov	x20, x0
  41c6b8:	mov	x0, #0x60                  	// #96
  41c6bc:	bl	4400bc <argp_parse@@Base+0xc97c>
  41c6c0:	mov	x19, x0
  41c6c4:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  41c6c8:	add	x0, x0, #0x7f8
  41c6cc:	cmp	x20, #0x0
  41c6d0:	csel	x0, x0, x20, eq  // eq = none
  41c6d4:	bl	440154 <argp_parse@@Base+0xca14>
  41c6d8:	str	x0, [x19, #16]
  41c6dc:	bl	403ff0 <strlen@plt>
  41c6e0:	str	x0, [x19, #24]
  41c6e4:	mov	x0, x19
  41c6e8:	ldp	x19, x20, [sp, #16]
  41c6ec:	ldp	x29, x30, [sp], #32
  41c6f0:	ret
  41c6f4:	stp	x29, x30, [sp, #-32]!
  41c6f8:	mov	x29, sp
  41c6fc:	stp	x19, x20, [sp, #16]
  41c700:	mov	x20, x0
  41c704:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41c708:	ldr	x19, [x0, #2656]
  41c70c:	cbnz	x19, 41c71c <wcrtomb@plt+0x17afc>
  41c710:	b	41c73c <wcrtomb@plt+0x17b1c>
  41c714:	ldr	x19, [x19]
  41c718:	cbz	x19, 41c73c <wcrtomb@plt+0x17b1c>
  41c71c:	ldr	x0, [x19, #16]
  41c720:	ldrb	w1, [x0]
  41c724:	cbz	w1, 41c714 <wcrtomb@plt+0x17af4>
  41c728:	ldr	w2, [x19, #32]
  41c72c:	mov	x1, x20
  41c730:	bl	435130 <argp_parse@@Base+0x19f0>
  41c734:	and	w0, w0, #0xff
  41c738:	cbz	w0, 41c714 <wcrtomb@plt+0x17af4>
  41c73c:	mov	x0, x19
  41c740:	ldp	x19, x20, [sp, #16]
  41c744:	ldp	x29, x30, [sp], #32
  41c748:	ret
  41c74c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41c750:	ldr	w1, [x1, #2664]
  41c754:	cbnz	w1, 41c7f0 <wcrtomb@plt+0x17bd0>
  41c758:	stp	x29, x30, [sp, #-16]!
  41c75c:	mov	x29, sp
  41c760:	bl	434f50 <argp_parse@@Base+0x1810>
  41c764:	and	w0, w0, #0xff
  41c768:	cbz	w0, 41c7e0 <wcrtomb@plt+0x17bc0>
  41c76c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41c770:	mov	w1, #0x1                   	// #1
  41c774:	str	w1, [x0, #2668]
  41c778:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41c77c:	ldr	x0, [x0, #944]
  41c780:	cbz	x0, 41c788 <wcrtomb@plt+0x17b68>
  41c784:	blr	x0
  41c788:	mov	w2, #0x5                   	// #5
  41c78c:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x13e64>
  41c790:	add	x1, x1, #0xb8
  41c794:	mov	x0, #0x0                   	// #0
  41c798:	bl	4049c0 <dcgettext@plt>
  41c79c:	mov	x2, x0
  41c7a0:	mov	w1, #0x0                   	// #0
  41c7a4:	mov	w0, #0x0                   	// #0
  41c7a8:	bl	404050 <error@plt>
  41c7ac:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41c7b0:	ldr	x0, [x0, #944]
  41c7b4:	cbz	x0, 41c7bc <wcrtomb@plt+0x17b9c>
  41c7b8:	blr	x0
  41c7bc:	mov	w2, #0x5                   	// #5
  41c7c0:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x13e64>
  41c7c4:	add	x1, x1, #0xe8
  41c7c8:	mov	x0, #0x0                   	// #0
  41c7cc:	bl	4049c0 <dcgettext@plt>
  41c7d0:	mov	x2, x0
  41c7d4:	mov	w1, #0x0                   	// #0
  41c7d8:	mov	w0, #0x0                   	// #0
  41c7dc:	bl	404050 <error@plt>
  41c7e0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41c7e4:	ldr	w0, [x0, #2668]
  41c7e8:	ldp	x29, x30, [sp], #16
  41c7ec:	ret
  41c7f0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41c7f4:	ldr	w0, [x0, #2668]
  41c7f8:	ret
  41c7fc:	stp	x29, x30, [sp, #-16]!
  41c800:	mov	x29, sp
  41c804:	ldr	x0, [x0, #88]
  41c808:	bl	437c40 <argp_parse@@Base+0x4500>
  41c80c:	ldp	x29, x30, [sp], #16
  41c810:	ret
  41c814:	stp	x29, x30, [sp, #-80]!
  41c818:	mov	x29, sp
  41c81c:	stp	x19, x20, [sp, #16]
  41c820:	stp	x21, x22, [sp, #32]
  41c824:	stp	x23, x24, [sp, #48]
  41c828:	str	x25, [sp, #64]
  41c82c:	mov	x19, x0
  41c830:	ldr	x0, [x0, #64]
  41c834:	ldr	x22, [x0, #24]
  41c838:	ldr	x24, [x1, #24]
  41c83c:	ldr	x23, [x1, #16]
  41c840:	sub	x25, x24, x22
  41c844:	ldr	x20, [x19, #24]
  41c848:	add	x20, x25, x20
  41c84c:	add	x0, x20, #0x1
  41c850:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  41c854:	mov	x21, x0
  41c858:	mov	x1, x23
  41c85c:	bl	404910 <strcpy@plt>
  41c860:	ldr	x1, [x19, #16]
  41c864:	add	x1, x1, x22
  41c868:	mov	x0, x21
  41c86c:	bl	404400 <strcat@plt>
  41c870:	ldr	x0, [x19, #16]
  41c874:	bl	4047c0 <free@plt>
  41c878:	str	x21, [x19, #16]
  41c87c:	str	x20, [x19, #24]
  41c880:	ldr	x0, [x19, #64]
  41c884:	mov	x4, x24
  41c888:	mov	x3, x23
  41c88c:	mov	x2, x22
  41c890:	ldr	x1, [x0, #16]
  41c894:	ldr	x0, [x19, #56]
  41c898:	bl	4158a4 <wcrtomb@plt+0x10c84>
  41c89c:	ldr	x19, [x19, #80]
  41c8a0:	cbnz	x19, 41c844 <wcrtomb@plt+0x17c24>
  41c8a4:	ldp	x19, x20, [sp, #16]
  41c8a8:	ldp	x21, x22, [sp, #32]
  41c8ac:	ldp	x23, x24, [sp, #48]
  41c8b0:	ldr	x25, [sp, #64]
  41c8b4:	ldp	x29, x30, [sp], #80
  41c8b8:	ret
  41c8bc:	stp	x29, x30, [sp, #-224]!
  41c8c0:	mov	x29, sp
  41c8c4:	stp	x19, x20, [sp, #16]
  41c8c8:	stp	x21, x22, [sp, #32]
  41c8cc:	stp	x25, x26, [sp, #64]
  41c8d0:	stp	x27, x28, [sp, #80]
  41c8d4:	mov	w26, w0
  41c8d8:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41c8dc:	add	x20, x20, #0xa58
  41c8e0:	add	x28, x20, #0x60
  41c8e4:	mov	x27, x28
  41c8e8:	ldr	x21, [x20]
  41c8ec:	cbz	x21, 41d0a8 <wcrtomb@plt+0x18488>
  41c8f0:	ldr	w0, [x21, #16]
  41c8f4:	cmp	w0, #0x2
  41c8f8:	b.eq	41c968 <wcrtomb@plt+0x17d48>  // b.none
  41c8fc:	cmp	w0, #0x2
  41c900:	b.ls	41c940 <wcrtomb@plt+0x17d20>  // b.plast
  41c904:	cmp	w0, #0x3
  41c908:	b.eq	41c960 <wcrtomb@plt+0x17d40>  // b.none
  41c90c:	cmp	w0, #0x4
  41c910:	b.ne	41c8ec <wcrtomb@plt+0x17ccc>  // b.any
  41c914:	ldr	w19, [x21, #24]
  41c918:	ldr	x21, [x21, #32]
  41c91c:	sub	w0, w19, #0x58
  41c920:	cmp	w0, #0xc4
  41c924:	b.hi	41d078 <wcrtomb@plt+0x18458>  // b.pmore
  41c928:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x13e64>
  41c92c:	add	x1, x1, #0xda8
  41c930:	ldrh	w0, [x1, w0, uxtw #1]
  41c934:	adr	x1, 41c940 <wcrtomb@plt+0x17d20>
  41c938:	add	x0, x1, w0, sxth #2
  41c93c:	br	x0
  41c940:	cbz	w0, 41cd14 <wcrtomb@plt+0x180f4>
  41c944:	cbz	w26, 41cd14 <wcrtomb@plt+0x180f4>
  41c948:	ldr	x0, [x21, #24]
  41c94c:	bl	440154 <argp_parse@@Base+0xca14>
  41c950:	bl	41bc08 <wcrtomb@plt+0x16fe8>
  41c954:	bl	41b6a8 <wcrtomb@plt+0x16a88>
  41c958:	bl	41c3e8 <wcrtomb@plt+0x177c8>
  41c95c:	b	41c8e8 <wcrtomb@plt+0x17cc8>
  41c960:	bl	41c3e8 <wcrtomb@plt+0x177c8>
  41c964:	b	41c8e8 <wcrtomb@plt+0x17cc8>
  41c968:	stp	x23, x24, [sp, #48]
  41c96c:	ldr	x0, [x21, #48]
  41c970:	cbz	x0, 41c9b4 <wcrtomb@plt+0x17d94>
  41c974:	ldr	x22, [x21, #48]
  41c978:	ldr	w25, [x21, #40]
  41c97c:	ldr	x0, [x21, #32]
  41c980:	add	x0, x0, #0x1
  41c984:	str	x0, [x21, #32]
  41c988:	ldr	x0, [x22, #8]
  41c98c:	ldr	x1, [x22, #16]
  41c990:	cmp	x0, x1
  41c994:	b.cs	41cb60 <wcrtomb@plt+0x17f40>  // b.hs, b.nlast
  41c998:	add	x1, x0, #0x1
  41c99c:	str	x1, [x22, #8]
  41c9a0:	ldrb	w19, [x0]
  41c9a4:	cmp	w25, w19
  41c9a8:	b.eq	41c974 <wcrtomb@plt+0x17d54>  // b.none
  41c9ac:	mov	x23, #0x0                   	// #0
  41c9b0:	b	41cc54 <wcrtomb@plt+0x18034>
  41c9b4:	ldr	x22, [x21, #24]
  41c9b8:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  41c9bc:	add	x1, x1, #0xca8
  41c9c0:	mov	x0, x22
  41c9c4:	bl	404720 <strcmp@plt>
  41c9c8:	cbnz	w0, 41c9fc <wcrtomb@plt+0x17ddc>
  41c9cc:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x13e64>
  41c9d0:	add	x0, x0, #0x140
  41c9d4:	bl	422b3c <wcrtomb@plt+0x1df1c>
  41c9d8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41c9dc:	ldr	x0, [x0, #1112]
  41c9e0:	str	x0, [x21, #48]
  41c9e4:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  41c9e8:	ldrb	w0, [x0, #3880]
  41c9ec:	str	w0, [x21, #40]
  41c9f0:	ldrb	w0, [x20, #88]
  41c9f4:	strb	w0, [x21, #44]
  41c9f8:	b	41c974 <wcrtomb@plt+0x17d54>
  41c9fc:	add	x2, sp, #0x60
  41ca00:	mov	x1, x22
  41ca04:	mov	w0, #0x0                   	// #0
  41ca08:	bl	404b10 <__xstat@plt>
  41ca0c:	cbnz	w0, 41ca18 <wcrtomb@plt+0x17df8>
  41ca10:	mov	x0, x21
  41ca14:	b	41ca28 <wcrtomb@plt+0x17e08>
  41ca18:	mov	x0, x22
  41ca1c:	bl	42a0a4 <wcrtomb@plt+0x25484>
  41ca20:	ldr	x0, [x0]
  41ca24:	cbz	x0, 41ca44 <wcrtomb@plt+0x17e24>
  41ca28:	ldr	w1, [x0, #16]
  41ca2c:	cmp	w1, #0x2
  41ca30:	b.ne	41ca20 <wcrtomb@plt+0x17e00>  // b.any
  41ca34:	ldr	x1, [x0, #48]
  41ca38:	cbz	x1, 41ca20 <wcrtomb@plt+0x17e00>
  41ca3c:	ldr	x23, [x0, #24]
  41ca40:	b	41ca58 <wcrtomb@plt+0x17e38>
  41ca44:	mov	w2, #0x5                   	// #5
  41ca48:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x13e64>
  41ca4c:	add	x1, x1, #0x148
  41ca50:	bl	4049c0 <dcgettext@plt>
  41ca54:	mov	x23, x0
  41ca58:	ldr	x19, [x20, #80]
  41ca5c:	cbz	x19, 41cb18 <wcrtomb@plt+0x17ef8>
  41ca60:	ldr	x2, [sp, #104]
  41ca64:	ldr	x3, [sp, #96]
  41ca68:	b	41ca74 <wcrtomb@plt+0x17e54>
  41ca6c:	ldr	x19, [x19]
  41ca70:	cbz	x19, 41cb18 <wcrtomb@plt+0x17ef8>
  41ca74:	ldr	x1, [x19, #8]
  41ca78:	cmp	x1, x2
  41ca7c:	b.ne	41ca6c <wcrtomb@plt+0x17e4c>  // b.any
  41ca80:	ldr	x0, [x19, #16]
  41ca84:	cmp	x0, x3
  41ca88:	b.ne	41ca6c <wcrtomb@plt+0x17e4c>  // b.any
  41ca8c:	mov	w2, #0x1                   	// #1
  41ca90:	mov	w1, #0x3a                  	// #58
  41ca94:	mov	x0, #0x0                   	// #0
  41ca98:	bl	43eacc <argp_parse@@Base+0xb38c>
  41ca9c:	mov	w24, w0
  41caa0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41caa4:	ldr	x0, [x0, #944]
  41caa8:	cbz	x0, 41cab0 <wcrtomb@plt+0x17e90>
  41caac:	blr	x0
  41cab0:	mov	w2, #0x5                   	// #5
  41cab4:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x13e64>
  41cab8:	add	x1, x1, #0x158
  41cabc:	mov	x0, #0x0                   	// #0
  41cac0:	bl	4049c0 <dcgettext@plt>
  41cac4:	mov	x21, x0
  41cac8:	mov	x1, x22
  41cacc:	mov	w0, #0x0                   	// #0
  41cad0:	bl	43ede8 <argp_parse@@Base+0xb6a8>
  41cad4:	ldr	x5, [x19, #24]
  41cad8:	mov	x4, x23
  41cadc:	mov	x3, x0
  41cae0:	mov	x2, x21
  41cae4:	mov	w1, #0x0                   	// #0
  41cae8:	mov	w0, #0x0                   	// #0
  41caec:	bl	404050 <error@plt>
  41caf0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41caf4:	mov	w1, #0x2                   	// #2
  41caf8:	str	w1, [x0, #3392]
  41cafc:	mov	w2, w24
  41cb00:	mov	w1, #0x3a                  	// #58
  41cb04:	mov	x0, #0x0                   	// #0
  41cb08:	bl	43eacc <argp_parse@@Base+0xb38c>
  41cb0c:	bl	41c3e8 <wcrtomb@plt+0x177c8>
  41cb10:	ldp	x23, x24, [sp, #48]
  41cb14:	b	41c8e8 <wcrtomb@plt+0x17cc8>
  41cb18:	mov	x0, #0x20                  	// #32
  41cb1c:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  41cb20:	ldr	x1, [x20, #80]
  41cb24:	str	x1, [x0]
  41cb28:	ldr	x1, [sp, #104]
  41cb2c:	str	x1, [x0, #8]
  41cb30:	ldr	x1, [sp, #96]
  41cb34:	str	x1, [x0, #16]
  41cb38:	str	x23, [x0, #24]
  41cb3c:	str	x0, [x20, #80]
  41cb40:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  41cb44:	add	x1, x1, #0xc38
  41cb48:	ldr	x0, [x21, #24]
  41cb4c:	bl	4042e0 <fopen@plt>
  41cb50:	str	x0, [x21, #48]
  41cb54:	cbnz	x0, 41c9e4 <wcrtomb@plt+0x17dc4>
  41cb58:	ldr	x0, [x21, #24]
  41cb5c:	bl	429bbc <wcrtomb@plt+0x24f9c>
  41cb60:	mov	x0, x22
  41cb64:	bl	404b90 <__uflow@plt>
  41cb68:	mov	w19, w0
  41cb6c:	cmn	w0, #0x1
  41cb70:	cset	w0, ne  // ne = any
  41cb74:	cmp	w0, #0x0
  41cb78:	ccmp	w25, w19, #0x4, ne  // ne = any
  41cb7c:	mov	x24, #0x0                   	// #0
  41cb80:	b.ne	41c9ac <wcrtomb@plt+0x17d8c>  // b.any
  41cb84:	cmp	x24, #0x0
  41cb88:	cset	w22, eq  // eq = none
  41cb8c:	cmp	w22, #0x0
  41cb90:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  41cb94:	b.ne	41c974 <wcrtomb@plt+0x17d54>  // b.any
  41cb98:	ldr	x0, [x20, #96]
  41cb9c:	cmp	x0, x24
  41cba0:	b.eq	41cc74 <wcrtomb@plt+0x18054>  // b.none
  41cba4:	ldr	x0, [x20, #104]
  41cba8:	strb	wzr, [x0, x24]
  41cbac:	bl	41c4b4 <wcrtomb@plt+0x17894>
  41cbb0:	cmp	w22, #0x0
  41cbb4:	ccmn	w19, #0x1, #0x0, ne  // ne = any
  41cbb8:	b.eq	41cce4 <wcrtomb@plt+0x180c4>  // b.none
  41cbbc:	ldrb	w0, [x21, #44]
  41cbc0:	cbnz	w0, 41cbe0 <wcrtomb@plt+0x17fc0>
  41cbc4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41cbc8:	ldrb	w0, [x0, #692]
  41cbcc:	cbnz	w0, 41cccc <wcrtomb@plt+0x180ac>
  41cbd0:	mov	x1, x21
  41cbd4:	ldr	x0, [x20, #104]
  41cbd8:	bl	41c4fc <wcrtomb@plt+0x178dc>
  41cbdc:	cbz	w0, 41ccd8 <wcrtomb@plt+0x180b8>
  41cbe0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41cbe4:	add	x0, x0, #0xa58
  41cbe8:	add	x19, x0, #0x18
  41cbec:	str	wzr, [x19, #16]
  41cbf0:	ldr	x0, [x0, #104]
  41cbf4:	str	x0, [x19, #24]
  41cbf8:	ldp	x23, x24, [sp, #48]
  41cbfc:	b	41cdb4 <wcrtomb@plt+0x18194>
  41cc00:	mov	x1, x27
  41cc04:	ldr	x0, [x20, #104]
  41cc08:	bl	440068 <argp_parse@@Base+0xc928>
  41cc0c:	str	x0, [x20, #104]
  41cc10:	add	x24, x23, #0x1
  41cc14:	ldr	x0, [x20, #104]
  41cc18:	strb	w19, [x0, x23]
  41cc1c:	cbz	w19, 41cc88 <wcrtomb@plt+0x18068>
  41cc20:	ldr	x0, [x22, #8]
  41cc24:	ldr	x1, [x22, #16]
  41cc28:	cmp	x0, x1
  41cc2c:	b.cs	41cc64 <wcrtomb@plt+0x18044>  // b.hs, b.nlast
  41cc30:	add	x1, x0, #0x1
  41cc34:	str	x1, [x22, #8]
  41cc38:	ldrb	w19, [x0]
  41cc3c:	cmn	w19, #0x1
  41cc40:	cset	w0, ne  // ne = any
  41cc44:	cmp	w0, #0x0
  41cc48:	ccmp	w25, w19, #0x4, ne  // ne = any
  41cc4c:	b.eq	41cb84 <wcrtomb@plt+0x17f64>  // b.none
  41cc50:	mov	x23, x24
  41cc54:	ldr	x0, [x20, #96]
  41cc58:	cmp	x23, x0
  41cc5c:	b.ne	41cc10 <wcrtomb@plt+0x17ff0>  // b.any
  41cc60:	b	41cc00 <wcrtomb@plt+0x17fe0>
  41cc64:	mov	x0, x22
  41cc68:	bl	404b90 <__uflow@plt>
  41cc6c:	mov	w19, w0
  41cc70:	b	41cc3c <wcrtomb@plt+0x1801c>
  41cc74:	mov	x1, x28
  41cc78:	ldr	x0, [x20, #104]
  41cc7c:	bl	440068 <argp_parse@@Base+0xc928>
  41cc80:	str	x0, [x20, #104]
  41cc84:	b	41cba4 <wcrtomb@plt+0x17f84>
  41cc88:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41cc8c:	ldr	w0, [x0, #408]
  41cc90:	tbz	w0, #9, 41ccc4 <wcrtomb@plt+0x180a4>
  41cc94:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41cc98:	ldr	x0, [x0, #944]
  41cc9c:	cbz	x0, 41cca4 <wcrtomb@plt+0x18084>
  41cca0:	blr	x0
  41cca4:	ldr	x0, [x21, #24]
  41cca8:	bl	43efc4 <argp_parse@@Base+0xb884>
  41ccac:	mov	x3, x0
  41ccb0:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x13e64>
  41ccb4:	add	x2, x2, #0x190
  41ccb8:	mov	w1, #0x0                   	// #0
  41ccbc:	mov	w0, #0x0                   	// #0
  41ccc0:	bl	404050 <error@plt>
  41ccc4:	str	wzr, [x21, #40]
  41ccc8:	b	41cbbc <wcrtomb@plt+0x17f9c>
  41cccc:	ldr	x0, [x20, #104]
  41ccd0:	bl	41a660 <wcrtomb@plt+0x15a40>
  41ccd4:	b	41cbd0 <wcrtomb@plt+0x17fb0>
  41ccd8:	bl	41c138 <wcrtomb@plt+0x17518>
  41ccdc:	ldp	x23, x24, [sp, #48]
  41cce0:	b	41c8e8 <wcrtomb@plt+0x17cc8>
  41cce4:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  41cce8:	add	x1, x1, #0xca8
  41ccec:	ldr	x0, [x21, #24]
  41ccf0:	bl	404720 <strcmp@plt>
  41ccf4:	cbnz	w0, 41cd08 <wcrtomb@plt+0x180e8>
  41ccf8:	str	xzr, [x21, #48]
  41ccfc:	bl	41c3e8 <wcrtomb@plt+0x177c8>
  41cd00:	ldp	x23, x24, [sp, #48]
  41cd04:	b	41c8e8 <wcrtomb@plt+0x17cc8>
  41cd08:	ldr	x0, [x21, #48]
  41cd0c:	bl	4042a0 <fclose@plt>
  41cd10:	b	41ccf8 <wcrtomb@plt+0x180d8>
  41cd14:	ldr	x20, [x21, #24]
  41cd18:	mov	x0, x20
  41cd1c:	bl	403ff0 <strlen@plt>
  41cd20:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41cd24:	ldr	x1, [x1, #2744]
  41cd28:	cmp	x0, x1
  41cd2c:	b.ls	41cd6c <wcrtomb@plt+0x1814c>  // b.plast
  41cd30:	stp	x23, x24, [sp, #48]
  41cd34:	lsl	x1, x1, #1
  41cd38:	cbz	x1, 41cdd0 <wcrtomb@plt+0x181b0>
  41cd3c:	cmp	x0, x1
  41cd40:	b.hi	41cd34 <wcrtomb@plt+0x18114>  // b.pmore
  41cd44:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41cd48:	add	x19, x19, #0xa58
  41cd4c:	str	x1, [x19, #96]
  41cd50:	ldr	x0, [x19, #104]
  41cd54:	bl	4047c0 <free@plt>
  41cd58:	ldr	x0, [x19, #96]
  41cd5c:	add	x0, x0, #0x2
  41cd60:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  41cd64:	str	x0, [x19, #104]
  41cd68:	ldp	x23, x24, [sp, #48]
  41cd6c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41cd70:	ldr	x19, [x0, #2752]
  41cd74:	mov	x1, x20
  41cd78:	mov	x0, x19
  41cd7c:	bl	404910 <strcpy@plt>
  41cd80:	mov	x0, x19
  41cd84:	bl	41c4b4 <wcrtomb@plt+0x17894>
  41cd88:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41cd8c:	ldrb	w0, [x0, #692]
  41cd90:	cbnz	w0, 41cddc <wcrtomb@plt+0x181bc>
  41cd94:	ldr	w1, [x21, #16]
  41cd98:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41cd9c:	add	x0, x0, #0xa58
  41cda0:	add	x19, x0, #0x18
  41cda4:	str	w1, [x19, #16]
  41cda8:	ldr	x0, [x0, #104]
  41cdac:	str	x0, [x19, #24]
  41cdb0:	bl	41c3e8 <wcrtomb@plt+0x177c8>
  41cdb4:	mov	x0, x19
  41cdb8:	ldp	x19, x20, [sp, #16]
  41cdbc:	ldp	x21, x22, [sp, #32]
  41cdc0:	ldp	x25, x26, [sp, #64]
  41cdc4:	ldp	x27, x28, [sp, #80]
  41cdc8:	ldp	x29, x30, [sp], #224
  41cdcc:	ret
  41cdd0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41cdd4:	str	xzr, [x0, #2744]
  41cdd8:	bl	40e5ec <wcrtomb@plt+0x99cc>
  41cddc:	mov	x0, x19
  41cde0:	bl	41a660 <wcrtomb@plt+0x15a40>
  41cde4:	b	41cd94 <wcrtomb@plt+0x18174>
  41cde8:	mov	w1, #0x10000000            	// #268435456
  41cdec:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x13e64>
  41cdf0:	add	x0, x0, #0xf38
  41cdf4:	bl	41c660 <wcrtomb@plt+0x17a40>
  41cdf8:	bl	41c3e8 <wcrtomb@plt+0x177c8>
  41cdfc:	b	41c8e8 <wcrtomb@plt+0x17cc8>
  41ce00:	ldr	w0, [x20, #16]
  41ce04:	cmp	w0, #0x1
  41ce08:	cset	w2, ne  // ne = any
  41ce0c:	ldr	w0, [x20, #112]
  41ce10:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  41ce14:	ldr	w1, [x1, #612]
  41ce18:	orr	w0, w0, w1
  41ce1c:	orr	w2, w0, w2, lsl #28
  41ce20:	mov	x1, x21
  41ce24:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41ce28:	ldr	x0, [x0]
  41ce2c:	bl	435364 <argp_parse@@Base+0x1c24>
  41ce30:	b	41cdf8 <wcrtomb@plt+0x181d8>
  41ce34:	adrp	x2, 40b000 <wcrtomb@plt+0x63e0>
  41ce38:	add	x2, x2, #0x13c
  41ce3c:	mov	w1, #0x1                   	// #1
  41ce40:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x13e64>
  41ce44:	add	x0, x0, #0x868
  41ce48:	bl	40b02c <wcrtomb@plt+0x640c>
  41ce4c:	b	41cdf8 <wcrtomb@plt+0x181d8>
  41ce50:	adrp	x2, 40b000 <wcrtomb@plt+0x63e0>
  41ce54:	add	x2, x2, #0x13c
  41ce58:	mov	w1, #0x2                   	// #2
  41ce5c:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x13e64>
  41ce60:	add	x0, x0, #0x868
  41ce64:	bl	40b02c <wcrtomb@plt+0x640c>
  41ce68:	b	41cdf8 <wcrtomb@plt+0x181d8>
  41ce6c:	adrp	x2, 40b000 <wcrtomb@plt+0x63e0>
  41ce70:	add	x2, x2, #0x13c
  41ce74:	mov	w1, #0x3                   	// #3
  41ce78:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x13e64>
  41ce7c:	add	x0, x0, #0x868
  41ce80:	bl	40b02c <wcrtomb@plt+0x640c>
  41ce84:	b	41cdf8 <wcrtomb@plt+0x181d8>
  41ce88:	mov	w1, #0x2                   	// #2
  41ce8c:	mov	x0, x21
  41ce90:	bl	40e938 <wcrtomb@plt+0x9d18>
  41ce94:	b	41cdf8 <wcrtomb@plt+0x181d8>
  41ce98:	mov	w1, #0x1                   	// #1
  41ce9c:	mov	x0, x21
  41cea0:	bl	40e938 <wcrtomb@plt+0x9d18>
  41cea4:	b	41cdf8 <wcrtomb@plt+0x181d8>
  41cea8:	mov	x2, #0x0                   	// #0
  41ceac:	mov	w1, #0x1                   	// #1
  41ceb0:	mov	x0, x21
  41ceb4:	bl	40b02c <wcrtomb@plt+0x640c>
  41ceb8:	b	41cdf8 <wcrtomb@plt+0x181d8>
  41cebc:	mov	x2, #0x0                   	// #0
  41cec0:	mov	w1, #0x2                   	// #2
  41cec4:	mov	x0, x21
  41cec8:	bl	40b02c <wcrtomb@plt+0x640c>
  41cecc:	b	41cdf8 <wcrtomb@plt+0x181d8>
  41ced0:	mov	x2, #0x0                   	// #0
  41ced4:	mov	w1, #0x3                   	// #3
  41ced8:	mov	x0, x21
  41cedc:	bl	40b02c <wcrtomb@plt+0x640c>
  41cee0:	b	41cdf8 <wcrtomb@plt+0x181d8>
  41cee4:	mov	w1, #0x0                   	// #0
  41cee8:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x13e64>
  41ceec:	add	x0, x0, #0xf38
  41cef0:	add	x0, x0, #0x20
  41cef4:	bl	41c660 <wcrtomb@plt+0x17a40>
  41cef8:	b	41cdf8 <wcrtomb@plt+0x181d8>
  41cefc:	bl	40ed2c <wcrtomb@plt+0xa10c>
  41cf00:	b	41cdf8 <wcrtomb@plt+0x181d8>
  41cf04:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41cf08:	mov	w1, #0x8                   	// #8
  41cf0c:	str	w1, [x0, #612]
  41cf10:	b	41cdf8 <wcrtomb@plt+0x181d8>
  41cf14:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41cf18:	str	wzr, [x0, #612]
  41cf1c:	b	41cdf8 <wcrtomb@plt+0x181d8>
  41cf20:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41cf24:	mov	w1, #0x1                   	// #1
  41cf28:	strb	w1, [x0, #692]
  41cf2c:	b	41cdf8 <wcrtomb@plt+0x181d8>
  41cf30:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41cf34:	strb	wzr, [x0, #692]
  41cf38:	b	41cdf8 <wcrtomb@plt+0x181d8>
  41cf3c:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  41cf40:	strb	wzr, [x0, #3880]
  41cf44:	mov	w0, #0x1                   	// #1
  41cf48:	strb	w0, [x20, #88]
  41cf4c:	b	41cdf8 <wcrtomb@plt+0x181d8>
  41cf50:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  41cf54:	mov	w1, #0xa                   	// #10
  41cf58:	strb	w1, [x0, #3880]
  41cf5c:	strb	wzr, [x20, #88]
  41cf60:	b	41cdf8 <wcrtomb@plt+0x181d8>
  41cf64:	ldr	w0, [x20, #16]
  41cf68:	cmp	w0, #0x1
  41cf6c:	cset	w3, ne  // ne = any
  41cf70:	ldr	w0, [x20, #112]
  41cf74:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  41cf78:	ldr	w1, [x1, #612]
  41cf7c:	orr	w0, w0, w1
  41cf80:	mov	w4, #0xa                   	// #10
  41cf84:	orr	w3, w0, w3, lsl #28
  41cf88:	mov	x2, x21
  41cf8c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41cf90:	ldr	x1, [x0]
  41cf94:	adrp	x0, 435000 <argp_parse@@Base+0x18c0>
  41cf98:	add	x0, x0, #0x364
  41cf9c:	bl	435844 <argp_parse@@Base+0x2104>
  41cfa0:	cbz	w0, 41cdf8 <wcrtomb@plt+0x181d8>
  41cfa4:	stp	x23, x24, [sp, #48]
  41cfa8:	bl	404ad0 <__errno_location@plt>
  41cfac:	ldr	w19, [x0]
  41cfb0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41cfb4:	ldr	x0, [x0, #944]
  41cfb8:	cbz	x0, 41cfc0 <wcrtomb@plt+0x183a0>
  41cfbc:	blr	x0
  41cfc0:	mov	x0, x21
  41cfc4:	bl	43efc4 <argp_parse@@Base+0xb884>
  41cfc8:	mov	x3, x0
  41cfcc:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x12e64>
  41cfd0:	add	x2, x2, #0x848
  41cfd4:	mov	w1, w19
  41cfd8:	mov	w0, #0x0                   	// #0
  41cfdc:	bl	404050 <error@plt>
  41cfe0:	bl	40e5ac <wcrtomb@plt+0x998c>
  41cfe4:	ldr	w0, [x20, #112]
  41cfe8:	orr	w0, w0, #0x40000000
  41cfec:	str	w0, [x20, #112]
  41cff0:	b	41cdf8 <wcrtomb@plt+0x181d8>
  41cff4:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  41cff8:	str	wzr, [x0, #3884]
  41cffc:	ldr	w0, [x20, #112]
  41d000:	and	w0, w0, #0xbfffffff
  41d004:	str	w0, [x20, #112]
  41d008:	b	41cdf8 <wcrtomb@plt+0x181d8>
  41d00c:	ldr	w0, [x20, #112]
  41d010:	orr	w0, w0, #0x10
  41d014:	str	w0, [x20, #112]
  41d018:	b	41cdf8 <wcrtomb@plt+0x181d8>
  41d01c:	ldr	w0, [x20, #112]
  41d020:	and	w0, w0, #0xffffffef
  41d024:	str	w0, [x20, #112]
  41d028:	b	41cdf8 <wcrtomb@plt+0x181d8>
  41d02c:	mov	w0, #0x2                   	// #2
  41d030:	str	w0, [x20, #16]
  41d034:	b	41cdf8 <wcrtomb@plt+0x181d8>
  41d038:	mov	w0, #0x1                   	// #1
  41d03c:	str	w0, [x20, #16]
  41d040:	b	41cdf8 <wcrtomb@plt+0x181d8>
  41d044:	ldr	w0, [x20, #112]
  41d048:	and	w0, w0, #0xfffffffe
  41d04c:	str	w0, [x20, #112]
  41d050:	b	41cdf8 <wcrtomb@plt+0x181d8>
  41d054:	ldr	w0, [x20, #112]
  41d058:	orr	w0, w0, #0x1
  41d05c:	str	w0, [x20, #112]
  41d060:	b	41cdf8 <wcrtomb@plt+0x181d8>
  41d064:	mov	w0, #0x1                   	// #1
  41d068:	strb	w0, [x20, #88]
  41d06c:	b	41cdf8 <wcrtomb@plt+0x181d8>
  41d070:	strb	wzr, [x20, #88]
  41d074:	b	41cdf8 <wcrtomb@plt+0x181d8>
  41d078:	stp	x23, x24, [sp, #48]
  41d07c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41d080:	ldr	x0, [x0, #944]
  41d084:	cbz	x0, 41d08c <wcrtomb@plt+0x1846c>
  41d088:	blr	x0
  41d08c:	mov	w3, w19
  41d090:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x13e64>
  41d094:	add	x2, x2, #0x1c0
  41d098:	mov	w1, #0x0                   	// #0
  41d09c:	mov	w0, #0x0                   	// #0
  41d0a0:	bl	404050 <error@plt>
  41d0a4:	bl	40e5ac <wcrtomb@plt+0x998c>
  41d0a8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d0ac:	ldr	x19, [x0, #4056]
  41d0b0:	cbz	x19, 41cdb4 <wcrtomb@plt+0x18194>
  41d0b4:	stp	x23, x24, [sp, #48]
  41d0b8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41d0bc:	ldr	x0, [x0, #944]
  41d0c0:	cbz	x0, 41d0c8 <wcrtomb@plt+0x184a8>
  41d0c4:	blr	x0
  41d0c8:	mov	w2, #0x5                   	// #5
  41d0cc:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x13e64>
  41d0d0:	add	x1, x1, #0x1e0
  41d0d4:	mov	x0, #0x0                   	// #0
  41d0d8:	bl	4049c0 <dcgettext@plt>
  41d0dc:	mov	x2, x0
  41d0e0:	mov	w1, #0x0                   	// #0
  41d0e4:	mov	w0, #0x0                   	// #0
  41d0e8:	bl	404050 <error@plt>
  41d0ec:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d0f0:	mov	w1, #0x2                   	// #2
  41d0f4:	str	w1, [x0, #3392]
  41d0f8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d0fc:	ldr	x0, [x0, #4056]
  41d100:	mov	x19, x0
  41d104:	ldr	x0, [x0, #8]
  41d108:	cbnz	x0, 41d100 <wcrtomb@plt+0x184e0>
  41d10c:	adrp	x23, 481000 <argp_program_version_hook@@Base+0x298>
  41d110:	adrp	x24, 455000 <_obstack_memory_used@@Base+0x13e64>
  41d114:	add	x24, x24, #0x2b0
  41d118:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d11c:	add	x21, x21, #0xd40
  41d120:	b	41d170 <wcrtomb@plt+0x18550>
  41d124:	ldr	x0, [x23, #944]
  41d128:	cbz	x0, 41d130 <wcrtomb@plt+0x18510>
  41d12c:	blr	x0
  41d130:	mov	w2, #0x5                   	// #5
  41d134:	mov	x1, x24
  41d138:	mov	x0, #0x0                   	// #0
  41d13c:	bl	4049c0 <dcgettext@plt>
  41d140:	mov	x20, x0
  41d144:	ldr	x0, [x19, #24]
  41d148:	bl	43f194 <argp_parse@@Base+0xba54>
  41d14c:	mov	x3, x0
  41d150:	mov	x2, x20
  41d154:	mov	w1, #0x0                   	// #0
  41d158:	mov	w0, #0x0                   	// #0
  41d15c:	bl	404050 <error@plt>
  41d160:	mov	w0, #0x2                   	// #2
  41d164:	str	w0, [x21]
  41d168:	ldr	x19, [x19]
  41d16c:	cbz	x19, 41d244 <wcrtomb@plt+0x18624>
  41d170:	ldr	w0, [x19, #16]
  41d174:	cmp	w0, #0x1
  41d178:	b.eq	41d124 <wcrtomb@plt+0x18504>  // b.none
  41d17c:	cmp	w0, #0x4
  41d180:	b.ne	41d168 <wcrtomb@plt+0x18548>  // b.any
  41d184:	ldr	x0, [x19, #32]
  41d188:	cbz	x0, 41d1f0 <wcrtomb@plt+0x185d0>
  41d18c:	ldr	x0, [x23, #944]
  41d190:	cbz	x0, 41d198 <wcrtomb@plt+0x18578>
  41d194:	blr	x0
  41d198:	mov	w2, #0x5                   	// #5
  41d19c:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x13e64>
  41d1a0:	add	x1, x1, #0x2c8
  41d1a4:	mov	x0, #0x0                   	// #0
  41d1a8:	bl	4049c0 <dcgettext@plt>
  41d1ac:	mov	x22, x0
  41d1b0:	ldr	w0, [x19, #24]
  41d1b4:	bl	41c0f8 <wcrtomb@plt+0x174d8>
  41d1b8:	mov	x20, x0
  41d1bc:	cbz	x0, 41d1c4 <wcrtomb@plt+0x185a4>
  41d1c0:	ldr	x20, [x0]
  41d1c4:	ldr	x0, [x19, #32]
  41d1c8:	bl	43f194 <argp_parse@@Base+0xba54>
  41d1cc:	mov	x4, x0
  41d1d0:	mov	x3, x20
  41d1d4:	mov	x2, x22
  41d1d8:	mov	w1, #0x0                   	// #0
  41d1dc:	mov	w0, #0x0                   	// #0
  41d1e0:	bl	404050 <error@plt>
  41d1e4:	mov	w0, #0x2                   	// #2
  41d1e8:	str	w0, [x21]
  41d1ec:	b	41d168 <wcrtomb@plt+0x18548>
  41d1f0:	ldr	x0, [x23, #944]
  41d1f4:	cbz	x0, 41d1fc <wcrtomb@plt+0x185dc>
  41d1f8:	blr	x0
  41d1fc:	mov	w2, #0x5                   	// #5
  41d200:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x13e64>
  41d204:	add	x1, x1, #0x2e0
  41d208:	mov	x0, #0x0                   	// #0
  41d20c:	bl	4049c0 <dcgettext@plt>
  41d210:	mov	x20, x0
  41d214:	ldr	w0, [x19, #24]
  41d218:	bl	41c0f8 <wcrtomb@plt+0x174d8>
  41d21c:	mov	x3, x0
  41d220:	cbz	x0, 41d228 <wcrtomb@plt+0x18608>
  41d224:	ldr	x3, [x0]
  41d228:	mov	x2, x20
  41d22c:	mov	w1, #0x0                   	// #0
  41d230:	mov	w0, #0x0                   	// #0
  41d234:	bl	404050 <error@plt>
  41d238:	mov	w0, #0x2                   	// #2
  41d23c:	str	w0, [x21]
  41d240:	b	41d168 <wcrtomb@plt+0x18548>
  41d244:	bl	41c3a8 <wcrtomb@plt+0x17788>
  41d248:	ldp	x23, x24, [sp, #48]
  41d24c:	b	41cdb4 <wcrtomb@plt+0x18194>
  41d250:	stp	x29, x30, [sp, #-32]!
  41d254:	mov	x29, sp
  41d258:	stp	x19, x20, [sp, #16]
  41d25c:	mov	w19, w0
  41d260:	mov	x20, x1
  41d264:	cbz	w0, 41d278 <wcrtomb@plt+0x18658>
  41d268:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d26c:	ldr	w0, [x0, #2764]
  41d270:	cmp	w0, w19
  41d274:	b.eq	41d2d4 <wcrtomb@plt+0x186b4>  // b.none
  41d278:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d27c:	ldr	x0, [x0, #2768]
  41d280:	cbz	x0, 41d294 <wcrtomb@plt+0x18674>
  41d284:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d288:	ldr	w0, [x0, #2776]
  41d28c:	cmp	w0, w19
  41d290:	b.eq	41d2b8 <wcrtomb@plt+0x18698>  // b.none
  41d294:	mov	w0, w19
  41d298:	bl	404730 <getpwuid@plt>
  41d29c:	cbz	x0, 41d2e8 <wcrtomb@plt+0x186c8>
  41d2a0:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d2a4:	add	x2, x2, #0xa58
  41d2a8:	str	w19, [x2, #128]
  41d2ac:	ldr	x1, [x0]
  41d2b0:	add	x0, x2, #0x78
  41d2b4:	bl	41a5bc <wcrtomb@plt+0x1599c>
  41d2b8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d2bc:	ldr	x0, [x0, #2768]
  41d2c0:	bl	440154 <argp_parse@@Base+0xca14>
  41d2c4:	str	x0, [x20]
  41d2c8:	ldp	x19, x20, [sp, #16]
  41d2cc:	ldp	x29, x30, [sp], #32
  41d2d0:	ret
  41d2d4:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  41d2d8:	add	x0, x0, #0x7f8
  41d2dc:	bl	440154 <argp_parse@@Base+0xca14>
  41d2e0:	str	x0, [x20]
  41d2e4:	b	41d2c8 <wcrtomb@plt+0x186a8>
  41d2e8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d2ec:	str	w19, [x0, #2764]
  41d2f0:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  41d2f4:	add	x0, x0, #0x7f8
  41d2f8:	bl	440154 <argp_parse@@Base+0xca14>
  41d2fc:	str	x0, [x20]
  41d300:	b	41d2c8 <wcrtomb@plt+0x186a8>
  41d304:	stp	x29, x30, [sp, #-32]!
  41d308:	mov	x29, sp
  41d30c:	stp	x19, x20, [sp, #16]
  41d310:	mov	w19, w0
  41d314:	mov	x20, x1
  41d318:	cbz	w0, 41d32c <wcrtomb@plt+0x1870c>
  41d31c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d320:	ldr	w0, [x0, #2780]
  41d324:	cmp	w0, w19
  41d328:	b.eq	41d388 <wcrtomb@plt+0x18768>  // b.none
  41d32c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d330:	ldr	x0, [x0, #2784]
  41d334:	cbz	x0, 41d348 <wcrtomb@plt+0x18728>
  41d338:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d33c:	ldr	w0, [x0, #2792]
  41d340:	cmp	w0, w19
  41d344:	b.eq	41d36c <wcrtomb@plt+0x1874c>  // b.none
  41d348:	mov	w0, w19
  41d34c:	bl	404b20 <getgrgid@plt>
  41d350:	cbz	x0, 41d39c <wcrtomb@plt+0x1877c>
  41d354:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d358:	add	x2, x2, #0xa58
  41d35c:	str	w19, [x2, #144]
  41d360:	ldr	x1, [x0]
  41d364:	add	x0, x2, #0x88
  41d368:	bl	41a5bc <wcrtomb@plt+0x1599c>
  41d36c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d370:	ldr	x0, [x0, #2784]
  41d374:	bl	440154 <argp_parse@@Base+0xca14>
  41d378:	str	x0, [x20]
  41d37c:	ldp	x19, x20, [sp, #16]
  41d380:	ldp	x29, x30, [sp], #32
  41d384:	ret
  41d388:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  41d38c:	add	x0, x0, #0x7f8
  41d390:	bl	440154 <argp_parse@@Base+0xca14>
  41d394:	str	x0, [x20]
  41d398:	b	41d37c <wcrtomb@plt+0x1875c>
  41d39c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d3a0:	str	w19, [x0, #2780]
  41d3a4:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  41d3a8:	add	x0, x0, #0x7f8
  41d3ac:	bl	440154 <argp_parse@@Base+0xca14>
  41d3b0:	str	x0, [x20]
  41d3b4:	b	41d37c <wcrtomb@plt+0x1875c>
  41d3b8:	stp	x29, x30, [sp, #-32]!
  41d3bc:	mov	x29, sp
  41d3c0:	stp	x19, x20, [sp, #16]
  41d3c4:	mov	x19, x0
  41d3c8:	mov	x20, x1
  41d3cc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d3d0:	ldr	x1, [x0, #2800]
  41d3d4:	cbz	x1, 41d3e4 <wcrtomb@plt+0x187c4>
  41d3d8:	mov	x0, x19
  41d3dc:	bl	404720 <strcmp@plt>
  41d3e0:	cbz	w0, 41d438 <wcrtomb@plt+0x18818>
  41d3e4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d3e8:	ldr	x1, [x0, #2768]
  41d3ec:	cbz	x1, 41d400 <wcrtomb@plt+0x187e0>
  41d3f0:	ldrb	w2, [x19]
  41d3f4:	ldrb	w0, [x1]
  41d3f8:	cmp	w2, w0
  41d3fc:	b.eq	41d444 <wcrtomb@plt+0x18824>  // b.none
  41d400:	mov	x0, x19
  41d404:	bl	404450 <getpwnam@plt>
  41d408:	cbz	x0, 41d454 <wcrtomb@plt+0x18834>
  41d40c:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d410:	add	x2, x2, #0xa58
  41d414:	ldr	w1, [x0, #16]
  41d418:	str	w1, [x2, #128]
  41d41c:	ldr	x1, [x0]
  41d420:	add	x0, x2, #0x78
  41d424:	bl	41a5bc <wcrtomb@plt+0x1599c>
  41d428:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d42c:	ldr	w0, [x0, #2776]
  41d430:	str	w0, [x20]
  41d434:	mov	w0, #0x1                   	// #1
  41d438:	ldp	x19, x20, [sp, #16]
  41d43c:	ldp	x29, x30, [sp], #32
  41d440:	ret
  41d444:	mov	x0, x19
  41d448:	bl	404720 <strcmp@plt>
  41d44c:	cbz	w0, 41d428 <wcrtomb@plt+0x18808>
  41d450:	b	41d400 <wcrtomb@plt+0x187e0>
  41d454:	mov	x1, x19
  41d458:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d45c:	add	x0, x0, #0xa58
  41d460:	add	x0, x0, #0x98
  41d464:	bl	41a5bc <wcrtomb@plt+0x1599c>
  41d468:	mov	w0, #0x0                   	// #0
  41d46c:	b	41d438 <wcrtomb@plt+0x18818>
  41d470:	stp	x29, x30, [sp, #-32]!
  41d474:	mov	x29, sp
  41d478:	stp	x19, x20, [sp, #16]
  41d47c:	mov	x19, x0
  41d480:	mov	x20, x1
  41d484:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d488:	ldr	x1, [x0, #2808]
  41d48c:	cbz	x1, 41d49c <wcrtomb@plt+0x1887c>
  41d490:	mov	x0, x19
  41d494:	bl	404720 <strcmp@plt>
  41d498:	cbz	w0, 41d4f0 <wcrtomb@plt+0x188d0>
  41d49c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d4a0:	ldr	x1, [x0, #2784]
  41d4a4:	cbz	x1, 41d4b8 <wcrtomb@plt+0x18898>
  41d4a8:	ldrb	w2, [x19]
  41d4ac:	ldrb	w0, [x1]
  41d4b0:	cmp	w2, w0
  41d4b4:	b.eq	41d4fc <wcrtomb@plt+0x188dc>  // b.none
  41d4b8:	mov	x0, x19
  41d4bc:	bl	404110 <getgrnam@plt>
  41d4c0:	cbz	x0, 41d50c <wcrtomb@plt+0x188ec>
  41d4c4:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d4c8:	add	x2, x2, #0xa58
  41d4cc:	ldr	w0, [x0, #16]
  41d4d0:	str	w0, [x2, #144]
  41d4d4:	mov	x1, x19
  41d4d8:	add	x0, x2, #0x88
  41d4dc:	bl	41a5bc <wcrtomb@plt+0x1599c>
  41d4e0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d4e4:	ldr	w0, [x0, #2792]
  41d4e8:	str	w0, [x20]
  41d4ec:	mov	w0, #0x1                   	// #1
  41d4f0:	ldp	x19, x20, [sp, #16]
  41d4f4:	ldp	x29, x30, [sp], #32
  41d4f8:	ret
  41d4fc:	mov	x0, x19
  41d500:	bl	404720 <strcmp@plt>
  41d504:	cbz	w0, 41d4e0 <wcrtomb@plt+0x188c0>
  41d508:	b	41d4b8 <wcrtomb@plt+0x18898>
  41d50c:	mov	x1, x19
  41d510:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d514:	add	x0, x0, #0xa58
  41d518:	add	x0, x0, #0xa0
  41d51c:	bl	41a5bc <wcrtomb@plt+0x1599c>
  41d520:	mov	w0, #0x0                   	// #0
  41d524:	b	41d4f0 <wcrtomb@plt+0x188d0>
  41d528:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d52c:	ldr	x0, [x0, #4040]
  41d530:	cmp	x0, #0x0
  41d534:	cset	w0, ne  // ne = any
  41d538:	ret
  41d53c:	stp	x29, x30, [sp, #-32]!
  41d540:	mov	x29, sp
  41d544:	str	x19, [sp, #16]
  41d548:	mov	x19, x0
  41d54c:	bl	41c294 <wcrtomb@plt+0x17674>
  41d550:	str	wzr, [x0, #16]
  41d554:	str	x19, [x0, #24]
  41d558:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d55c:	ldr	x0, [x1, #4040]
  41d560:	add	x0, x0, #0x1
  41d564:	str	x0, [x1, #4040]
  41d568:	ldr	x19, [sp, #16]
  41d56c:	ldp	x29, x30, [sp], #32
  41d570:	ret
  41d574:	stp	x29, x30, [sp, #-32]!
  41d578:	mov	x29, sp
  41d57c:	stp	x19, x20, [sp, #16]
  41d580:	mov	x20, x1
  41d584:	cmp	w0, #0x54
  41d588:	b.eq	41d5ec <wcrtomb@plt+0x189cc>  // b.none
  41d58c:	mov	w19, w0
  41d590:	cmp	w0, #0x100
  41d594:	b.eq	41d61c <wcrtomb@plt+0x189fc>  // b.none
  41d598:	cmp	w0, #0x43
  41d59c:	b.eq	41d5cc <wcrtomb@plt+0x189ac>  // b.none
  41d5a0:	bl	41c0f8 <wcrtomb@plt+0x174d8>
  41d5a4:	mov	x1, x0
  41d5a8:	mov	w0, #0x7                   	// #7
  41d5ac:	cbz	x1, 41d5e0 <wcrtomb@plt+0x189c0>
  41d5b0:	bl	41c294 <wcrtomb@plt+0x17674>
  41d5b4:	mov	w1, #0x4                   	// #4
  41d5b8:	str	w1, [x0, #16]
  41d5bc:	str	w19, [x0, #24]
  41d5c0:	str	x20, [x0, #32]
  41d5c4:	mov	w0, #0x0                   	// #0
  41d5c8:	b	41d5e0 <wcrtomb@plt+0x189c0>
  41d5cc:	bl	41c294 <wcrtomb@plt+0x17674>
  41d5d0:	mov	w1, #0x1                   	// #1
  41d5d4:	str	w1, [x0, #16]
  41d5d8:	str	x20, [x0, #24]
  41d5dc:	mov	w0, #0x0                   	// #0
  41d5e0:	ldp	x19, x20, [sp, #16]
  41d5e4:	ldp	x29, x30, [sp], #32
  41d5e8:	ret
  41d5ec:	bl	41c294 <wcrtomb@plt+0x17674>
  41d5f0:	mov	w1, #0x2                   	// #2
  41d5f4:	str	w1, [x0, #16]
  41d5f8:	str	x20, [x0, #24]
  41d5fc:	str	xzr, [x0, #32]
  41d600:	str	xzr, [x0, #48]
  41d604:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d608:	ldr	x0, [x1, #4040]
  41d60c:	add	x0, x0, #0x1
  41d610:	str	x0, [x1, #4040]
  41d614:	mov	w0, #0x0                   	// #0
  41d618:	b	41d5e0 <wcrtomb@plt+0x189c0>
  41d61c:	mov	x0, x1
  41d620:	bl	41d53c <wcrtomb@plt+0x1891c>
  41d624:	mov	w0, #0x0                   	// #0
  41d628:	b	41d5e0 <wcrtomb@plt+0x189c0>
  41d62c:	stp	x29, x30, [sp, #-16]!
  41d630:	mov	x29, sp
  41d634:	mov	x0, #0x66                  	// #102
  41d638:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  41d63c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d640:	add	x1, x1, #0xa58
  41d644:	str	x0, [x1, #104]
  41d648:	mov	x0, #0x64                  	// #100
  41d64c:	str	x0, [x1, #96]
  41d650:	bl	41c138 <wcrtomb@plt+0x17518>
  41d654:	ldp	x29, x30, [sp], #16
  41d658:	ret
  41d65c:	stp	x29, x30, [sp, #-16]!
  41d660:	mov	x29, sp
  41d664:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d668:	ldr	x0, [x0, #2752]
  41d66c:	bl	4047c0 <free@plt>
  41d670:	ldp	x29, x30, [sp], #16
  41d674:	ret
  41d678:	stp	x29, x30, [sp, #-16]!
  41d67c:	mov	x29, sp
  41d680:	bl	41c8bc <wcrtomb@plt+0x17c9c>
  41d684:	cbz	x0, 41d68c <wcrtomb@plt+0x18a6c>
  41d688:	ldr	x0, [x0, #24]
  41d68c:	ldp	x29, x30, [sp], #16
  41d690:	ret
  41d694:	stp	x29, x30, [sp, #-48]!
  41d698:	mov	x29, sp
  41d69c:	stp	x19, x20, [sp, #16]
  41d6a0:	str	x21, [sp, #32]
  41d6a4:	mov	w20, w1
  41d6a8:	and	w21, w2, #0xff
  41d6ac:	mov	x19, x3
  41d6b0:	bl	41c6a8 <wcrtomb@plt+0x17a88>
  41d6b4:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d6b8:	add	x2, x2, #0xa58
  41d6bc:	ldr	x3, [x2, #168]
  41d6c0:	str	x3, [x0, #8]
  41d6c4:	str	xzr, [x0]
  41d6c8:	str	xzr, [x0, #48]
  41d6cc:	ldr	w1, [x2, #16]
  41d6d0:	cmp	w1, #0x2
  41d6d4:	cset	w1, eq  // eq = none
  41d6d8:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x3be64>
  41d6dc:	ldr	w2, [x2, #3884]
  41d6e0:	adrp	x4, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d6e4:	ldr	w4, [x4, #2760]
  41d6e8:	orr	w2, w2, w4
  41d6ec:	adrp	x4, 481000 <argp_program_version_hook@@Base+0x298>
  41d6f0:	ldr	w4, [x4, #612]
  41d6f4:	orr	w1, w4, w1, lsl #28
  41d6f8:	orr	w2, w2, w1
  41d6fc:	str	w2, [x0, #32]
  41d700:	str	w20, [x0, #40]
  41d704:	str	xzr, [x0, #56]
  41d708:	str	x19, [x0, #64]
  41d70c:	strb	w21, [x0, #36]
  41d710:	cbz	x3, 41d730 <wcrtomb@plt+0x18b10>
  41d714:	str	x0, [x3]
  41d718:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d71c:	str	x0, [x1, #2816]
  41d720:	ldp	x19, x20, [sp, #16]
  41d724:	ldr	x21, [sp, #32]
  41d728:	ldp	x29, x30, [sp], #48
  41d72c:	ret
  41d730:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d734:	str	x0, [x1, #2656]
  41d738:	b	41d718 <wcrtomb@plt+0x18af8>
  41d73c:	stp	x29, x30, [sp, #-48]!
  41d740:	mov	x29, sp
  41d744:	stp	x19, x20, [sp, #16]
  41d748:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41d74c:	ldrb	w0, [x0, #576]
  41d750:	cbz	w0, 41d760 <wcrtomb@plt+0x18b40>
  41d754:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d758:	add	x20, x20, #0xa58
  41d75c:	b	41d780 <wcrtomb@plt+0x18b60>
  41d760:	str	x21, [sp, #32]
  41d764:	mov	w20, #0x0                   	// #0
  41d768:	mov	w21, #0x1                   	// #1
  41d76c:	b	41d87c <wcrtomb@plt+0x18c5c>
  41d770:	ldr	x0, [x19, #24]
  41d774:	bl	440154 <argp_parse@@Base+0xca14>
  41d778:	bl	41bc08 <wcrtomb@plt+0x16fe8>
  41d77c:	str	w0, [x20, #176]
  41d780:	mov	w0, #0x0                   	// #0
  41d784:	bl	41c8bc <wcrtomb@plt+0x17c9c>
  41d788:	mov	x19, x0
  41d78c:	cbz	x0, 41d81c <wcrtomb@plt+0x18bfc>
  41d790:	ldr	w0, [x0, #16]
  41d794:	cmp	w0, #0x1
  41d798:	b.eq	41d770 <wcrtomb@plt+0x18b50>  // b.none
  41d79c:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d7a0:	add	x20, x20, #0xa58
  41d7a4:	ldr	x0, [x20, #184]
  41d7a8:	bl	41c478 <wcrtomb@plt+0x17858>
  41d7ac:	ldr	x0, [x19, #24]
  41d7b0:	bl	41c6a8 <wcrtomb@plt+0x17a88>
  41d7b4:	str	x0, [x20, #184]
  41d7b8:	ldr	w1, [x20, #176]
  41d7bc:	str	w1, [x0, #40]
  41d7c0:	str	xzr, [x0]
  41d7c4:	str	xzr, [x0, #48]
  41d7c8:	ldr	w1, [x20, #16]
  41d7cc:	cmp	w1, #0x2
  41d7d0:	cset	w3, eq  // eq = none
  41d7d4:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x3be64>
  41d7d8:	ldr	w2, [x2, #3884]
  41d7dc:	ldr	w4, [x20, #112]
  41d7e0:	orr	w2, w2, w4
  41d7e4:	adrp	x4, 481000 <argp_program_version_hook@@Base+0x298>
  41d7e8:	ldr	w4, [x4, #612]
  41d7ec:	orr	w3, w4, w3, lsl #28
  41d7f0:	orr	w2, w2, w3
  41d7f4:	str	w2, [x0, #32]
  41d7f8:	str	xzr, [x0, #56]
  41d7fc:	str	xzr, [x0, #64]
  41d800:	mov	w2, #0x1                   	// #1
  41d804:	strb	w2, [x0, #36]
  41d808:	str	x0, [x20, #168]
  41d80c:	str	x0, [x20, #8]
  41d810:	ldp	x19, x20, [sp, #16]
  41d814:	ldp	x29, x30, [sp], #48
  41d818:	ret
  41d81c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41d820:	ldr	w1, [x0, #2824]
  41d824:	cbz	w1, 41d810 <wcrtomb@plt+0x18bf0>
  41d828:	mov	x3, #0x0                   	// #0
  41d82c:	mov	w2, #0x0                   	// #0
  41d830:	mov	x0, #0x0                   	// #0
  41d834:	bl	41d694 <wcrtomb@plt+0x18a74>
  41d838:	b	41d810 <wcrtomb@plt+0x18bf0>
  41d83c:	ldr	x0, [x0, #24]
  41d840:	bl	440154 <argp_parse@@Base+0xca14>
  41d844:	bl	41bc08 <wcrtomb@plt+0x16fe8>
  41d848:	mov	w19, w0
  41d84c:	mov	w0, #0x0                   	// #0
  41d850:	bl	41c8bc <wcrtomb@plt+0x17c9c>
  41d854:	cbz	x0, 41d884 <wcrtomb@plt+0x18c64>
  41d858:	ldr	w1, [x0, #16]
  41d85c:	cmp	w1, #0x1
  41d860:	b.eq	41d83c <wcrtomb@plt+0x18c1c>  // b.none
  41d864:	mov	x3, #0x0                   	// #0
  41d868:	mov	w2, w21
  41d86c:	mov	w1, w19
  41d870:	ldr	x0, [x0, #24]
  41d874:	bl	41d694 <wcrtomb@plt+0x18a74>
  41d878:	mov	w20, w19
  41d87c:	mov	w19, w20
  41d880:	b	41d84c <wcrtomb@plt+0x18c2c>
  41d884:	cmp	w20, w19
  41d888:	b.ne	41d894 <wcrtomb@plt+0x18c74>  // b.any
  41d88c:	ldr	x21, [sp, #32]
  41d890:	b	41d810 <wcrtomb@plt+0x18bf0>
  41d894:	mov	x3, #0x0                   	// #0
  41d898:	mov	w2, #0x0                   	// #0
  41d89c:	mov	w1, w19
  41d8a0:	mov	x0, #0x0                   	// #0
  41d8a4:	bl	41d694 <wcrtomb@plt+0x18a74>
  41d8a8:	ldr	x21, [sp, #32]
  41d8ac:	b	41d810 <wcrtomb@plt+0x18bf0>
  41d8b0:	sub	sp, sp, #0x240
  41d8b4:	stp	x29, x30, [sp]
  41d8b8:	mov	x29, sp
  41d8bc:	stp	x23, x24, [sp, #48]
  41d8c0:	stp	x25, x26, [sp, #64]
  41d8c4:	mov	x25, x0
  41d8c8:	mov	x23, x1
  41d8cc:	bl	415918 <wcrtomb@plt+0x10cf8>
  41d8d0:	str	x0, [x23, #56]
  41d8d4:	bl	415f08 <wcrtomb@plt+0x112e8>
  41d8d8:	cbz	x0, 41dab4 <wcrtomb@plt+0x18e94>
  41d8dc:	stp	x19, x20, [sp, #16]
  41d8e0:	stp	x21, x22, [sp, #32]
  41d8e4:	stp	x27, x28, [sp, #80]
  41d8e8:	mov	x21, x0
  41d8ec:	ldr	x24, [x23, #24]
  41d8f0:	add	x19, x24, #0x64
  41d8f4:	cmp	x24, #0x63
  41d8f8:	mov	x0, #0x64                  	// #100
  41d8fc:	csel	x19, x19, x0, hi  // hi = pmore
  41d900:	add	x0, x19, #0x1
  41d904:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  41d908:	mov	x22, x0
  41d90c:	ldr	w1, [x23, #40]
  41d910:	str	w1, [sp, #124]
  41d914:	ldr	x1, [x23, #16]
  41d918:	bl	404910 <strcpy@plt>
  41d91c:	add	x0, x22, x24
  41d920:	ldurb	w0, [x0, #-1]
  41d924:	cmp	w0, #0x2f
  41d928:	b.eq	41d940 <wcrtomb@plt+0x18d20>  // b.none
  41d92c:	add	x0, x24, #0x1
  41d930:	mov	w1, #0x2f                  	// #47
  41d934:	strb	w1, [x22, x24]
  41d938:	strb	wzr, [x22, x0]
  41d93c:	mov	x24, x0
  41d940:	ldrb	w26, [x21]
  41d944:	cbz	w26, 41da98 <wcrtomb@plt+0x18e78>
  41d948:	str	xzr, [sp, #112]
  41d94c:	mov	x28, #0x0                   	// #0
  41d950:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41d954:	add	x0, x0, #0x284
  41d958:	str	x0, [sp, #128]
  41d95c:	add	x0, sp, #0xf0
  41d960:	str	x0, [sp, #136]
  41d964:	b	41d9e8 <wcrtomb@plt+0x18dc8>
  41d968:	bl	40e5ec <wcrtomb@plt+0x99cc>
  41d96c:	add	x27, x21, #0x1
  41d970:	mov	x1, x27
  41d974:	add	x0, x22, x24
  41d978:	bl	404910 <strcpy@plt>
  41d97c:	mov	x3, x23
  41d980:	mov	w2, #0x0                   	// #0
  41d984:	ldr	w1, [sp, #124]
  41d988:	mov	x0, x22
  41d98c:	bl	41d694 <wcrtomb@plt+0x18a74>
  41d990:	str	x0, [sp, #104]
  41d994:	cbz	x28, 41da2c <wcrtomb@plt+0x18e0c>
  41d998:	ldr	x1, [sp, #112]
  41d99c:	str	x0, [x1, #80]
  41d9a0:	add	x0, sp, #0x98
  41d9a4:	bl	42491c <wcrtomb@plt+0x1fcfc>
  41d9a8:	str	x25, [sp, #544]
  41d9ac:	ldr	w26, [x25, #408]
  41d9b0:	tbz	w26, #31, 41da34 <wcrtomb@plt+0x18e14>
  41d9b4:	bl	404ad0 <__errno_location@plt>
  41d9b8:	neg	w26, w26
  41d9bc:	str	w26, [x0]
  41d9c0:	mov	x0, x22
  41d9c4:	bl	41b80c <wcrtomb@plt+0x16bec>
  41d9c8:	add	x0, sp, #0x98
  41d9cc:	bl	4249a8 <wcrtomb@plt+0x1fd88>
  41d9d0:	ldr	x0, [sp, #104]
  41d9d4:	str	x0, [sp, #112]
  41d9d8:	add	x20, x20, #0x1
  41d9dc:	add	x21, x21, x20
  41d9e0:	ldrb	w26, [x21]
  41d9e4:	cbz	w26, 41da9c <wcrtomb@plt+0x18e7c>
  41d9e8:	mov	x0, x21
  41d9ec:	bl	403ff0 <strlen@plt>
  41d9f0:	mov	x20, x0
  41d9f4:	cmp	w26, #0x44
  41d9f8:	b.ne	41d9d8 <wcrtomb@plt+0x18db8>  // b.any
  41d9fc:	add	x0, x24, x0
  41da00:	cmp	x0, x19
  41da04:	b.cc	41d96c <wcrtomb@plt+0x18d4c>  // b.lo, b.ul, b.last
  41da08:	lsl	x19, x19, #1
  41da0c:	cbz	x19, 41d968 <wcrtomb@plt+0x18d48>
  41da10:	cmp	x0, x19
  41da14:	b.cs	41da08 <wcrtomb@plt+0x18de8>  // b.hs, b.nlast
  41da18:	add	x1, x19, #0x1
  41da1c:	mov	x0, x22
  41da20:	bl	43ff70 <argp_parse@@Base+0xc830>
  41da24:	mov	x22, x0
  41da28:	b	41d96c <wcrtomb@plt+0x18d4c>
  41da2c:	ldr	x28, [sp, #104]
  41da30:	b	41d9a0 <wcrtomb@plt+0x18d80>
  41da34:	ldr	x0, [sp, #128]
  41da38:	ldr	w2, [x0]
  41da3c:	orr	w2, w2, #0x4000
  41da40:	mov	x1, x27
  41da44:	mov	x0, x25
  41da48:	bl	40c4c4 <wcrtomb@plt+0x78a4>
  41da4c:	tbnz	w0, #31, 41d9c0 <wcrtomb@plt+0x18da0>
  41da50:	str	w0, [sp, #560]
  41da54:	ldr	x2, [sp, #136]
  41da58:	mov	w1, w0
  41da5c:	mov	w0, #0x0                   	// #0
  41da60:	bl	4049a0 <__fxstat@plt>
  41da64:	cbz	w0, 41da74 <wcrtomb@plt+0x18e54>
  41da68:	mov	x0, x22
  41da6c:	bl	41b924 <wcrtomb@plt+0x16d04>
  41da70:	b	41d9c8 <wcrtomb@plt+0x18da8>
  41da74:	mov	x0, x22
  41da78:	bl	440154 <argp_parse@@Base+0xca14>
  41da7c:	str	x0, [sp, #152]
  41da80:	ldr	x1, [sp, #104]
  41da84:	add	x0, sp, #0x98
  41da88:	bl	41d8b0 <wcrtomb@plt+0x18c90>
  41da8c:	add	x0, sp, #0x98
  41da90:	bl	40c61c <wcrtomb@plt+0x79fc>
  41da94:	b	41d9c8 <wcrtomb@plt+0x18da8>
  41da98:	mov	x28, #0x0                   	// #0
  41da9c:	mov	x0, x22
  41daa0:	bl	4047c0 <free@plt>
  41daa4:	str	x28, [x23, #72]
  41daa8:	ldp	x19, x20, [sp, #16]
  41daac:	ldp	x21, x22, [sp, #32]
  41dab0:	ldp	x27, x28, [sp, #80]
  41dab4:	ldp	x23, x24, [sp, #48]
  41dab8:	ldp	x25, x26, [sp, #64]
  41dabc:	ldp	x29, x30, [sp]
  41dac0:	add	sp, sp, #0x240
  41dac4:	ret
  41dac8:	ldr	x1, [x0, #8]
  41dacc:	cbz	x1, 41daec <wcrtomb@plt+0x18ecc>
  41dad0:	ldr	x2, [x0]
  41dad4:	str	x2, [x1]
  41dad8:	ldr	x1, [x0]
  41dadc:	cbz	x1, 41dafc <wcrtomb@plt+0x18edc>
  41dae0:	ldr	x0, [x0, #8]
  41dae4:	str	x0, [x1, #8]
  41dae8:	ret
  41daec:	ldr	x2, [x0]
  41daf0:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41daf4:	str	x2, [x1, #2656]
  41daf8:	b	41dad8 <wcrtomb@plt+0x18eb8>
  41dafc:	ldr	x1, [x0, #8]
  41db00:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41db04:	str	x1, [x0, #2816]
  41db08:	b	41dae8 <wcrtomb@plt+0x18ec8>
  41db0c:	stp	x29, x30, [sp, #-32]!
  41db10:	mov	x29, sp
  41db14:	stp	x19, x20, [sp, #16]
  41db18:	bl	41c6a8 <wcrtomb@plt+0x17a88>
  41db1c:	mov	x19, x0
  41db20:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41db24:	ldrb	w0, [x0, #616]
  41db28:	cbnz	w0, 41dbb0 <wcrtomb@plt+0x18f90>
  41db2c:	str	xzr, [x19, #8]
  41db30:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41db34:	add	x0, x0, #0xa58
  41db38:	ldr	x1, [x0, #8]
  41db3c:	str	x1, [x19]
  41db40:	str	x19, [x0, #8]
  41db44:	ldr	x0, [x0, #168]
  41db48:	cbz	x0, 41dbcc <wcrtomb@plt+0x18fac>
  41db4c:	str	xzr, [x19, #48]
  41db50:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41db54:	ldr	w0, [x0, #2664]
  41db58:	cmp	w0, #0x2
  41db5c:	cset	w1, eq  // eq = none
  41db60:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  41db64:	ldr	w0, [x0, #3884]
  41db68:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41db6c:	ldr	w2, [x2, #2760]
  41db70:	orr	w0, w0, w2
  41db74:	adrp	x2, 481000 <argp_program_version_hook@@Base+0x298>
  41db78:	ldr	w2, [x2, #612]
  41db7c:	orr	w1, w2, w1, lsl #28
  41db80:	orr	w0, w0, w1
  41db84:	str	w0, [x19, #32]
  41db88:	str	wzr, [x19, #40]
  41db8c:	str	xzr, [x19, #56]
  41db90:	str	xzr, [x19, #64]
  41db94:	mov	w0, #0x1                   	// #1
  41db98:	strb	w0, [x19, #36]
  41db9c:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  41dba0:	strb	w0, [x1, #616]
  41dba4:	ldp	x19, x20, [sp, #16]
  41dba8:	ldp	x29, x30, [sp], #32
  41dbac:	ret
  41dbb0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41dbb4:	ldr	x20, [x0, #2656]
  41dbb8:	mov	x0, x20
  41dbbc:	bl	41dac8 <wcrtomb@plt+0x18ea8>
  41dbc0:	mov	x0, x20
  41dbc4:	bl	41c478 <wcrtomb@plt+0x17858>
  41dbc8:	b	41db2c <wcrtomb@plt+0x18f0c>
  41dbcc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41dbd0:	str	x19, [x0, #2816]
  41dbd4:	b	41db4c <wcrtomb@plt+0x18f2c>
  41dbd8:	stp	x29, x30, [sp, #-64]!
  41dbdc:	mov	x29, sp
  41dbe0:	stp	x19, x20, [sp, #16]
  41dbe4:	stp	x21, x22, [sp, #32]
  41dbe8:	stp	x23, x24, [sp, #48]
  41dbec:	mov	x22, x0
  41dbf0:	bl	403ff0 <strlen@plt>
  41dbf4:	mov	x23, x0
  41dbf8:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41dbfc:	add	x20, x20, #0xa58
  41dc00:	adrp	x21, 481000 <argp_program_version_hook@@Base+0x298>
  41dc04:	add	x21, x21, #0x268
  41dc08:	adrp	x24, 481000 <argp_program_version_hook@@Base+0x298>
  41dc0c:	add	x24, x24, #0x240
  41dc10:	b	41dc60 <wcrtomb@plt+0x19040>
  41dc14:	ldr	w0, [x1, #40]
  41dc18:	bl	41b6a8 <wcrtomb@plt+0x16a88>
  41dc1c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41dc20:	add	x0, x0, #0xa58
  41dc24:	str	xzr, [x0, #8]
  41dc28:	str	xzr, [x0, #168]
  41dc2c:	mov	w0, #0x1                   	// #1
  41dc30:	b	41dd10 <wcrtomb@plt+0x190f0>
  41dc34:	strb	wzr, [x21]
  41dc38:	cbnz	x19, 41dc9c <wcrtomb@plt+0x1907c>
  41dc3c:	ldrb	w0, [x24]
  41dc40:	cbz	w0, 41dd10 <wcrtomb@plt+0x190f0>
  41dc44:	ldr	x0, [x20, #8]
  41dc48:	ldr	x0, [x0, #48]
  41dc4c:	cbz	x0, 41dd24 <wcrtomb@plt+0x19104>
  41dc50:	bl	41d73c <wcrtomb@plt+0x18b1c>
  41dc54:	ldr	x0, [x20, #8]
  41dc58:	ldr	x0, [x0, #48]
  41dc5c:	cbnz	x0, 41dd04 <wcrtomb@plt+0x190e4>
  41dc60:	ldr	x1, [x20, #8]
  41dc64:	cbz	x1, 41dd0c <wcrtomb@plt+0x190ec>
  41dc68:	ldr	x2, [x1, #16]
  41dc6c:	ldrb	w2, [x2]
  41dc70:	cbz	w2, 41dc14 <wcrtomb@plt+0x18ff4>
  41dc74:	mov	x1, x23
  41dc78:	mov	x0, x22
  41dc7c:	bl	41c6f4 <wcrtomb@plt+0x17ad4>
  41dc80:	mov	x19, x0
  41dc84:	ldrb	w0, [x21]
  41dc88:	cbz	w0, 41dc38 <wcrtomb@plt+0x19018>
  41dc8c:	ldr	x0, [x20, #8]
  41dc90:	cmp	x0, x19
  41dc94:	b.ne	41dc3c <wcrtomb@plt+0x1901c>  // b.any
  41dc98:	b	41dc34 <wcrtomb@plt+0x19014>
  41dc9c:	ldr	x0, [x19, #24]
  41dca0:	ldrb	w0, [x22, x0]
  41dca4:	cmp	w0, #0x2f
  41dca8:	b.eq	41dcdc <wcrtomb@plt+0x190bc>  // b.none
  41dcac:	ldr	x0, [x19, #48]
  41dcb0:	add	x0, x0, #0x1
  41dcb4:	str	x0, [x19, #48]
  41dcb8:	ldr	w0, [x19, #40]
  41dcbc:	bl	41b6a8 <wcrtomb@plt+0x16a88>
  41dcc0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41dcc4:	ldr	x0, [x0, #696]
  41dcc8:	cbnz	x0, 41dcf4 <wcrtomb@plt+0x190d4>
  41dccc:	ldr	x0, [x19, #48]
  41dcd0:	cmp	x0, #0x0
  41dcd4:	cset	w0, ne  // ne = any
  41dcd8:	b	41dd10 <wcrtomb@plt+0x190f0>
  41dcdc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41dce0:	ldr	w0, [x0, #612]
  41dce4:	cbz	w0, 41dcac <wcrtomb@plt+0x1908c>
  41dce8:	ldr	x0, [x19, #48]
  41dcec:	cbnz	x0, 41dcb8 <wcrtomb@plt+0x19098>
  41dcf0:	b	41dcac <wcrtomb@plt+0x1908c>
  41dcf4:	ldr	x1, [x19, #48]
  41dcf8:	cmp	x1, x0
  41dcfc:	cset	w0, eq  // eq = none
  41dd00:	b	41dd10 <wcrtomb@plt+0x190f0>
  41dd04:	mov	w0, #0x0                   	// #0
  41dd08:	b	41dd10 <wcrtomb@plt+0x190f0>
  41dd0c:	mov	w0, #0x1                   	// #1
  41dd10:	ldp	x19, x20, [sp, #16]
  41dd14:	ldp	x21, x22, [sp, #32]
  41dd18:	ldp	x23, x24, [sp, #48]
  41dd1c:	ldp	x29, x30, [sp], #64
  41dd20:	ret
  41dd24:	mov	w0, #0x0                   	// #0
  41dd28:	b	41dd10 <wcrtomb@plt+0x190f0>
  41dd2c:	stp	x29, x30, [sp, #-48]!
  41dd30:	mov	x29, sp
  41dd34:	stp	x19, x20, [sp, #16]
  41dd38:	str	x21, [sp, #32]
  41dd3c:	ldr	x19, [x0, #8]
  41dd40:	cbz	x19, 41ddbc <wcrtomb@plt+0x1919c>
  41dd44:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  41dd48:	ldr	x20, [x1, #696]
  41dd4c:	mov	w21, #0x0                   	// #0
  41dd50:	cbz	x20, 41ddc8 <wcrtomb@plt+0x191a8>
  41dd54:	ldrb	w21, [x0, #16]
  41dd58:	cbnz	w21, 41ddc4 <wcrtomb@plt+0x191a4>
  41dd5c:	mov	x0, x19
  41dd60:	bl	403ff0 <strlen@plt>
  41dd64:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41dd68:	ldr	x1, [x1, #2656]
  41dd6c:	cbnz	x1, 41dd80 <wcrtomb@plt+0x19160>
  41dd70:	mov	w21, #0x1                   	// #1
  41dd74:	b	41ddc8 <wcrtomb@plt+0x191a8>
  41dd78:	ldr	x1, [x1]
  41dd7c:	cbz	x1, 41ddb4 <wcrtomb@plt+0x19194>
  41dd80:	ldr	x2, [x1, #16]
  41dd84:	ldrb	w2, [x2]
  41dd88:	cbz	w2, 41dd98 <wcrtomb@plt+0x19178>
  41dd8c:	ldr	x2, [x1, #48]
  41dd90:	cmp	x20, x2
  41dd94:	b.hi	41ddc8 <wcrtomb@plt+0x191a8>  // b.pmore
  41dd98:	ldr	x2, [x1, #24]
  41dd9c:	cmp	x2, x0
  41dda0:	b.hi	41dd78 <wcrtomb@plt+0x19158>  // b.pmore
  41dda4:	ldrb	w2, [x19, x2]
  41dda8:	cmp	w2, #0x2f
  41ddac:	b.ne	41dd78 <wcrtomb@plt+0x19158>  // b.any
  41ddb0:	b	41ddc8 <wcrtomb@plt+0x191a8>
  41ddb4:	mov	w21, #0x1                   	// #1
  41ddb8:	b	41ddc8 <wcrtomb@plt+0x191a8>
  41ddbc:	mov	w21, #0x0                   	// #0
  41ddc0:	b	41ddc8 <wcrtomb@plt+0x191a8>
  41ddc4:	mov	w21, #0x0                   	// #0
  41ddc8:	mov	w0, w21
  41ddcc:	ldp	x19, x20, [sp, #16]
  41ddd0:	ldr	x21, [sp, #32]
  41ddd4:	ldp	x29, x30, [sp], #48
  41ddd8:	ret
  41dddc:	stp	x29, x30, [sp, #-64]!
  41dde0:	mov	x29, sp
  41dde4:	stp	x19, x20, [sp, #16]
  41dde8:	stp	x21, x22, [sp, #32]
  41ddec:	str	x23, [sp, #48]
  41ddf0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41ddf4:	ldr	x19, [x0, #2656]
  41ddf8:	cbz	x19, 41debc <wcrtomb@plt+0x1929c>
  41ddfc:	adrp	x20, 481000 <argp_program_version_hook@@Base+0x298>
  41de00:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41de04:	add	x21, x21, #0xd40
  41de08:	adrp	x22, 455000 <_obstack_memory_used@@Base+0x13e64>
  41de0c:	add	x22, x22, #0x318
  41de10:	b	41de64 <wcrtomb@plt+0x19244>
  41de14:	ldr	x1, [x19, #48]
  41de18:	cmp	x0, x1
  41de1c:	cset	w0, hi  // hi = pmore
  41de20:	b	41de78 <wcrtomb@plt+0x19258>
  41de24:	mov	w2, #0x5                   	// #5
  41de28:	mov	x1, x22
  41de2c:	mov	x0, #0x0                   	// #0
  41de30:	bl	4049c0 <dcgettext@plt>
  41de34:	mov	x23, x0
  41de38:	ldr	x0, [x19, #16]
  41de3c:	bl	43efc4 <argp_parse@@Base+0xb884>
  41de40:	mov	x3, x0
  41de44:	mov	x2, x23
  41de48:	mov	w1, #0x0                   	// #0
  41de4c:	mov	w0, #0x0                   	// #0
  41de50:	bl	404050 <error@plt>
  41de54:	mov	w0, #0x2                   	// #2
  41de58:	str	w0, [x21]
  41de5c:	ldr	x19, [x19]
  41de60:	cbz	x19, 41debc <wcrtomb@plt+0x1929c>
  41de64:	ldr	x0, [x20, #696]
  41de68:	cbnz	x0, 41de14 <wcrtomb@plt+0x191f4>
  41de6c:	ldr	x0, [x19, #48]
  41de70:	cmp	x0, #0x0
  41de74:	cset	w0, eq  // eq = none
  41de78:	cbz	w0, 41de5c <wcrtomb@plt+0x1923c>
  41de7c:	ldr	x0, [x19, #16]
  41de80:	ldrb	w1, [x0]
  41de84:	cbz	w1, 41de5c <wcrtomb@plt+0x1923c>
  41de88:	bl	41c74c <wcrtomb@plt+0x17b2c>
  41de8c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41de90:	ldr	x0, [x0, #944]
  41de94:	cbz	x0, 41de9c <wcrtomb@plt+0x1927c>
  41de98:	blr	x0
  41de9c:	ldr	x0, [x19, #48]
  41dea0:	cbnz	x0, 41de24 <wcrtomb@plt+0x19204>
  41dea4:	mov	w2, #0x5                   	// #5
  41dea8:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x13e64>
  41deac:	add	x1, x1, #0x2f8
  41deb0:	bl	4049c0 <dcgettext@plt>
  41deb4:	mov	x23, x0
  41deb8:	b	41de38 <wcrtomb@plt+0x19218>
  41debc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41dec0:	add	x0, x0, #0xa58
  41dec4:	str	xzr, [x0, #8]
  41dec8:	str	xzr, [x0, #168]
  41decc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41ded0:	ldrb	w0, [x0, #576]
  41ded4:	cbz	w0, 41df54 <wcrtomb@plt+0x19334>
  41ded8:	mov	w23, #0x1                   	// #1
  41dedc:	adrp	x22, 455000 <_obstack_memory_used@@Base+0x13e64>
  41dee0:	add	x22, x22, #0x2f8
  41dee4:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41dee8:	add	x21, x21, #0xd40
  41deec:	b	41df28 <wcrtomb@plt+0x19308>
  41def0:	mov	w2, #0x5                   	// #5
  41def4:	mov	x1, x22
  41def8:	mov	x0, #0x0                   	// #0
  41defc:	bl	4049c0 <dcgettext@plt>
  41df00:	mov	x20, x0
  41df04:	mov	x0, x19
  41df08:	bl	43efc4 <argp_parse@@Base+0xb884>
  41df0c:	mov	x3, x0
  41df10:	mov	x2, x20
  41df14:	mov	w1, #0x0                   	// #0
  41df18:	mov	w0, #0x0                   	// #0
  41df1c:	bl	404050 <error@plt>
  41df20:	mov	w0, #0x2                   	// #2
  41df24:	str	w0, [x21]
  41df28:	mov	w0, w23
  41df2c:	bl	41d678 <wcrtomb@plt+0x18a58>
  41df30:	mov	x19, x0
  41df34:	cbz	x0, 41df54 <wcrtomb@plt+0x19334>
  41df38:	mov	x0, x19
  41df3c:	bl	41c74c <wcrtomb@plt+0x17b2c>
  41df40:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41df44:	ldr	x0, [x0, #944]
  41df48:	cbz	x0, 41def0 <wcrtomb@plt+0x192d0>
  41df4c:	blr	x0
  41df50:	b	41def0 <wcrtomb@plt+0x192d0>
  41df54:	ldp	x19, x20, [sp, #16]
  41df58:	ldp	x21, x22, [sp, #32]
  41df5c:	ldr	x23, [sp, #48]
  41df60:	ldp	x29, x30, [sp], #64
  41df64:	ret
  41df68:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41df6c:	ldr	x0, [x0, #2656]
  41df70:	cbz	x0, 41e054 <wcrtomb@plt+0x19434>
  41df74:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  41df78:	ldr	x2, [x1, #696]
  41df7c:	b	41df98 <wcrtomb@plt+0x19378>
  41df80:	ldr	x1, [x0, #48]
  41df84:	cmp	x2, x1
  41df88:	cset	w1, ls  // ls = plast
  41df8c:	cbnz	w1, 41e054 <wcrtomb@plt+0x19434>
  41df90:	ldr	x0, [x0]
  41df94:	cbz	x0, 41dfac <wcrtomb@plt+0x1938c>
  41df98:	cbnz	x2, 41df80 <wcrtomb@plt+0x19360>
  41df9c:	ldr	x1, [x0, #48]
  41dfa0:	cmp	x1, #0x0
  41dfa4:	cset	w1, ne  // ne = any
  41dfa8:	b	41df8c <wcrtomb@plt+0x1936c>
  41dfac:	stp	x29, x30, [sp, #-32]!
  41dfb0:	mov	x29, sp
  41dfb4:	str	x19, [sp, #16]
  41dfb8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41dfbc:	ldr	w0, [x0, #580]
  41dfc0:	cbnz	w0, 41e02c <wcrtomb@plt+0x1940c>
  41dfc4:	mov	w0, #0x1                   	// #1
  41dfc8:	bl	424a80 <wcrtomb@plt+0x1fe60>
  41dfcc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41dfd0:	ldr	x19, [x0, #2656]
  41dfd4:	cbz	x19, 41dfec <wcrtomb@plt+0x193cc>
  41dfd8:	ldr	x0, [x19, #16]
  41dfdc:	bl	41c74c <wcrtomb@plt+0x17b2c>
  41dfe0:	cbnz	w0, 41dfec <wcrtomb@plt+0x193cc>
  41dfe4:	ldr	x19, [x19]
  41dfe8:	cbnz	x19, 41dfd8 <wcrtomb@plt+0x193b8>
  41dfec:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41dff0:	add	x0, x0, #0xa58
  41dff4:	str	xzr, [x0, #8]
  41dff8:	str	xzr, [x0, #168]
  41dffc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41e000:	ldrb	w0, [x0, #576]
  41e004:	cbz	w0, 41e020 <wcrtomb@plt+0x19400>
  41e008:	mov	w19, #0x1                   	// #1
  41e00c:	mov	w0, w19
  41e010:	bl	41d678 <wcrtomb@plt+0x18a58>
  41e014:	cbz	x0, 41e020 <wcrtomb@plt+0x19400>
  41e018:	bl	41c74c <wcrtomb@plt+0x17b2c>
  41e01c:	cbz	w0, 41e00c <wcrtomb@plt+0x193ec>
  41e020:	ldr	x19, [sp, #16]
  41e024:	ldp	x29, x30, [sp], #32
  41e028:	ret
  41e02c:	mov	w2, #0x5                   	// #5
  41e030:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x13e64>
  41e034:	add	x1, x1, #0x348
  41e038:	mov	x0, #0x0                   	// #0
  41e03c:	bl	4049c0 <dcgettext@plt>
  41e040:	mov	x2, x0
  41e044:	mov	w1, #0x0                   	// #0
  41e048:	mov	w0, #0x0                   	// #0
  41e04c:	bl	404050 <error@plt>
  41e050:	b	41dfc4 <wcrtomb@plt+0x193a4>
  41e054:	ret
  41e058:	stp	x29, x30, [sp, #-496]!
  41e05c:	mov	x29, sp
  41e060:	stp	x19, x20, [sp, #16]
  41e064:	stp	x21, x22, [sp, #32]
  41e068:	stp	x23, x24, [sp, #48]
  41e06c:	bl	41d73c <wcrtomb@plt+0x18b1c>
  41e070:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41e074:	ldr	x19, [x0, #2656]
  41e078:	cbz	x19, 41e0d0 <wcrtomb@plt+0x194b0>
  41e07c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41e080:	ldr	x0, [x0, #768]
  41e084:	cbz	x0, 41e0b8 <wcrtomb@plt+0x19498>
  41e088:	bl	41b63c <wcrtomb@plt+0x16a1c>
  41e08c:	cbz	w0, 41e0a8 <wcrtomb@plt+0x19488>
  41e090:	cmp	w0, #0x1
  41e094:	b.ne	41e134 <wcrtomb@plt+0x19514>  // b.any
  41e098:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41e09c:	ldr	x0, [x0, #2656]
  41e0a0:	ldr	w0, [x0, #40]
  41e0a4:	cbz	w0, 41e0f8 <wcrtomb@plt+0x194d8>
  41e0a8:	bl	4162ec <wcrtomb@plt+0x116cc>
  41e0ac:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41e0b0:	ldr	x19, [x0, #2656]
  41e0b4:	cbz	x19, 41e250 <wcrtomb@plt+0x19630>
  41e0b8:	mov	w20, #0x0                   	// #0
  41e0bc:	add	x22, sp, #0xa0
  41e0c0:	adrp	x21, 481000 <argp_program_version_hook@@Base+0x298>
  41e0c4:	add	x21, x21, #0x284
  41e0c8:	adrp	x23, 47d000 <_obstack_memory_used@@Base+0x3be64>
  41e0cc:	b	41e198 <wcrtomb@plt+0x19578>
  41e0d0:	mov	x3, #0x0                   	// #0
  41e0d4:	mov	w2, #0x0                   	// #0
  41e0d8:	mov	w1, #0x0                   	// #0
  41e0dc:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x15e64>
  41e0e0:	add	x0, x0, #0x340
  41e0e4:	bl	41d694 <wcrtomb@plt+0x18a74>
  41e0e8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41e0ec:	ldr	x0, [x0, #768]
  41e0f0:	cbnz	x0, 41e088 <wcrtomb@plt+0x19468>
  41e0f4:	b	41e0ac <wcrtomb@plt+0x1948c>
  41e0f8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41e0fc:	ldr	x0, [x0, #944]
  41e100:	cbz	x0, 41e108 <wcrtomb@plt+0x194e8>
  41e104:	blr	x0
  41e108:	mov	w2, #0x5                   	// #5
  41e10c:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x13e64>
  41e110:	add	x1, x1, #0x360
  41e114:	mov	x0, #0x0                   	// #0
  41e118:	bl	4049c0 <dcgettext@plt>
  41e11c:	mov	x2, x0
  41e120:	mov	w1, #0x0                   	// #0
  41e124:	mov	w0, #0x0                   	// #0
  41e128:	bl	404050 <error@plt>
  41e12c:	mov	w0, #0x2                   	// #2
  41e130:	bl	422b00 <wcrtomb@plt+0x1dee0>
  41e134:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41e138:	ldr	x0, [x0, #944]
  41e13c:	cbz	x0, 41e144 <wcrtomb@plt+0x19524>
  41e140:	blr	x0
  41e144:	mov	w2, #0x5                   	// #5
  41e148:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x13e64>
  41e14c:	add	x1, x1, #0x3b0
  41e150:	mov	x0, #0x0                   	// #0
  41e154:	bl	4049c0 <dcgettext@plt>
  41e158:	mov	x2, x0
  41e15c:	mov	w1, #0x0                   	// #0
  41e160:	mov	w0, #0x0                   	// #0
  41e164:	bl	404050 <error@plt>
  41e168:	mov	w0, #0x2                   	// #2
  41e16c:	bl	422b00 <wcrtomb@plt+0x1dee0>
  41e170:	ldr	x0, [x19, #16]
  41e174:	bl	41b924 <wcrtomb@plt+0x16d04>
  41e178:	b	41e18c <wcrtomb@plt+0x1956c>
  41e17c:	ldr	x0, [x19, #16]
  41e180:	bl	41b80c <wcrtomb@plt+0x16bec>
  41e184:	add	x0, sp, #0x48
  41e188:	bl	4249a8 <wcrtomb@plt+0x1fd88>
  41e18c:	ldr	x19, [x19]
  41e190:	add	w20, w20, #0x1
  41e194:	cbz	x19, 41e254 <wcrtomb@plt+0x19634>
  41e198:	ldr	x0, [x19, #48]
  41e19c:	cbnz	x0, 41e18c <wcrtomb@plt+0x1956c>
  41e1a0:	ldr	x0, [x19, #56]
  41e1a4:	cbnz	x0, 41e18c <wcrtomb@plt+0x1956c>
  41e1a8:	ldr	w0, [x19, #32]
  41e1ac:	tbnz	w0, #28, 41e18c <wcrtomb@plt+0x1956c>
  41e1b0:	ldr	w0, [x19, #40]
  41e1b4:	bl	41b6a8 <wcrtomb@plt+0x16a88>
  41e1b8:	ldr	x0, [x19, #16]
  41e1bc:	ldrb	w0, [x0]
  41e1c0:	cbz	w0, 41e18c <wcrtomb@plt+0x1956c>
  41e1c4:	add	x0, sp, #0x48
  41e1c8:	bl	42491c <wcrtomb@plt+0x1fcfc>
  41e1cc:	mov	x1, x22
  41e1d0:	ldr	x0, [x19, #16]
  41e1d4:	bl	41b26c <wcrtomb@plt+0x1664c>
  41e1d8:	cbnz	w0, 41e170 <wcrtomb@plt+0x19550>
  41e1dc:	ldr	w0, [sp, #176]
  41e1e0:	and	w0, w0, #0xf000
  41e1e4:	cmp	w0, #0x4, lsl #12
  41e1e8:	b.ne	41e184 <wcrtomb@plt+0x19564>  // b.any
  41e1ec:	ldr	w2, [x21]
  41e1f0:	orr	w2, w2, #0x4000
  41e1f4:	ldr	x1, [x19, #16]
  41e1f8:	ldr	w0, [x23, #2184]
  41e1fc:	bl	4045c0 <__openat_2@plt>
  41e200:	mov	w1, w0
  41e204:	tbnz	w0, #31, 41e17c <wcrtomb@plt+0x1955c>
  41e208:	str	w0, [sp, #480]
  41e20c:	mov	x2, x22
  41e210:	mov	w0, #0x0                   	// #0
  41e214:	bl	4049a0 <__fxstat@plt>
  41e218:	cbz	w0, 41e228 <wcrtomb@plt+0x19608>
  41e21c:	ldr	x0, [x19, #16]
  41e220:	bl	41b924 <wcrtomb@plt+0x16d04>
  41e224:	b	41e184 <wcrtomb@plt+0x19564>
  41e228:	ldr	x0, [x19, #16]
  41e22c:	bl	440154 <argp_parse@@Base+0xca14>
  41e230:	str	x0, [sp, #72]
  41e234:	ldr	x0, [x19, #48]
  41e238:	add	x0, x0, #0x1
  41e23c:	str	x0, [x19, #48]
  41e240:	mov	x1, x19
  41e244:	add	x0, sp, #0x48
  41e248:	bl	41d8b0 <wcrtomb@plt+0x18c90>
  41e24c:	b	41e184 <wcrtomb@plt+0x19564>
  41e250:	mov	w20, #0x0                   	// #0
  41e254:	adrp	x2, 41c000 <wcrtomb@plt+0x173e0>
  41e258:	add	x2, x2, #0x38c
  41e25c:	mov	w1, w20
  41e260:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41e264:	ldr	x0, [x0, #2656]
  41e268:	bl	41c164 <wcrtomb@plt+0x17544>
  41e26c:	cbz	x0, 41e288 <wcrtomb@plt+0x19668>
  41e270:	mov	x1, x0
  41e274:	mov	x2, #0x0                   	// #0
  41e278:	str	x2, [x1, #8]
  41e27c:	mov	x2, x1
  41e280:	ldr	x1, [x1]
  41e284:	cbnz	x1, 41e278 <wcrtomb@plt+0x19658>
  41e288:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41e28c:	add	x19, x19, #0xa58
  41e290:	str	x0, [x19, #8]
  41e294:	mov	x4, #0x0                   	// #0
  41e298:	adrp	x3, 41c000 <wcrtomb@plt+0x173e0>
  41e29c:	add	x3, x3, #0x368
  41e2a0:	adrp	x2, 41c000 <wcrtomb@plt+0x173e0>
  41e2a4:	add	x2, x2, #0x7fc
  41e2a8:	mov	x1, #0x0                   	// #0
  41e2ac:	mov	x0, #0x0                   	// #0
  41e2b0:	bl	437c94 <argp_parse@@Base+0x4554>
  41e2b4:	mov	x23, x0
  41e2b8:	ldr	x20, [x19, #8]
  41e2bc:	cbz	x20, 41e37c <wcrtomb@plt+0x1975c>
  41e2c0:	mov	w22, #0x0                   	// #0
  41e2c4:	mov	x24, #0x0                   	// #0
  41e2c8:	b	41e31c <wcrtomb@plt+0x196fc>
  41e2cc:	ldr	x0, [x21, #72]
  41e2d0:	cbz	x0, 41e2dc <wcrtomb@plt+0x196bc>
  41e2d4:	mov	x1, x19
  41e2d8:	bl	41c814 <wcrtomb@plt+0x17bf4>
  41e2dc:	mov	x1, x19
  41e2e0:	mov	x0, x23
  41e2e4:	bl	43820c <argp_parse@@Base+0x4acc>
  41e2e8:	mov	x0, x21
  41e2ec:	bl	41dac8 <wcrtomb@plt+0x18ea8>
  41e2f0:	mov	x0, x21
  41e2f4:	bl	41c478 <wcrtomb@plt+0x17858>
  41e2f8:	sub	w22, w22, #0x1
  41e2fc:	str	xzr, [x19, #48]
  41e300:	mov	x1, x19
  41e304:	mov	x0, x23
  41e308:	bl	4381cc <argp_parse@@Base+0x4a8c>
  41e30c:	cbz	x0, 41e378 <wcrtomb@plt+0x19758>
  41e310:	add	w22, w22, #0x1
  41e314:	mov	x24, x19
  41e318:	cbz	x20, 41e384 <wcrtomb@plt+0x19764>
  41e31c:	mov	x19, x20
  41e320:	ldr	x20, [x20]
  41e324:	ldr	x1, [x19, #16]
  41e328:	ldr	w0, [x19, #40]
  41e32c:	bl	41a9d4 <wcrtomb@plt+0x15db4>
  41e330:	str	x0, [x19, #88]
  41e334:	cbz	x24, 41e2fc <wcrtomb@plt+0x196dc>
  41e338:	mov	x1, x19
  41e33c:	mov	x0, x23
  41e340:	bl	437a0c <argp_parse@@Base+0x42cc>
  41e344:	mov	x21, x0
  41e348:	cbz	x0, 41e2fc <wcrtomb@plt+0x196dc>
  41e34c:	ldr	x0, [x19, #64]
  41e350:	cbz	x0, 41e2cc <wcrtomb@plt+0x196ac>
  41e354:	ldr	x0, [x19, #72]
  41e358:	cbz	x0, 41e364 <wcrtomb@plt+0x19744>
  41e35c:	mov	x1, x21
  41e360:	bl	41c814 <wcrtomb@plt+0x17bf4>
  41e364:	mov	x0, x19
  41e368:	bl	41dac8 <wcrtomb@plt+0x18ea8>
  41e36c:	mov	x0, x19
  41e370:	bl	41c478 <wcrtomb@plt+0x17858>
  41e374:	b	41e318 <wcrtomb@plt+0x196f8>
  41e378:	bl	40e5ec <wcrtomb@plt+0x99cc>
  41e37c:	mov	x24, x20
  41e380:	mov	w22, #0x0                   	// #0
  41e384:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41e388:	add	x19, x19, #0xa58
  41e38c:	str	x24, [x19, #168]
  41e390:	mov	x0, x23
  41e394:	bl	437e20 <argp_parse@@Base+0x46e0>
  41e398:	adrp	x2, 41c000 <wcrtomb@plt+0x173e0>
  41e39c:	add	x2, x2, #0x2fc
  41e3a0:	mov	w1, w22
  41e3a4:	ldr	x0, [x19, #8]
  41e3a8:	bl	41c164 <wcrtomb@plt+0x17544>
  41e3ac:	cbz	x0, 41e410 <wcrtomb@plt+0x197f0>
  41e3b0:	mov	x1, x0
  41e3b4:	mov	x2, #0x0                   	// #0
  41e3b8:	str	x2, [x1, #8]
  41e3bc:	mov	x2, x1
  41e3c0:	ldr	x1, [x1]
  41e3c4:	cbnz	x1, 41e3b8 <wcrtomb@plt+0x19798>
  41e3c8:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41e3cc:	str	x0, [x1, #2656]
  41e3d0:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  41e3d4:	ldr	x1, [x1, #768]
  41e3d8:	cbz	x1, 41e3fc <wcrtomb@plt+0x197dc>
  41e3dc:	ldr	x1, [x0, #16]
  41e3e0:	ldrb	w1, [x1]
  41e3e4:	cbnz	w1, 41e3f4 <wcrtomb@plt+0x197d4>
  41e3e8:	ldr	x0, [x0]
  41e3ec:	cbnz	x0, 41e3dc <wcrtomb@plt+0x197bc>
  41e3f0:	b	41e3fc <wcrtomb@plt+0x197dc>
  41e3f4:	ldr	x0, [x0, #56]
  41e3f8:	bl	415f40 <wcrtomb@plt+0x11320>
  41e3fc:	ldp	x19, x20, [sp, #16]
  41e400:	ldp	x21, x22, [sp, #32]
  41e404:	ldp	x23, x24, [sp, #48]
  41e408:	ldp	x29, x30, [sp], #496
  41e40c:	ret
  41e410:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41e414:	str	x0, [x1, #2656]
  41e418:	b	41e3fc <wcrtomb@plt+0x197dc>
  41e41c:	stp	x29, x30, [sp, #-64]!
  41e420:	mov	x29, sp
  41e424:	stp	x19, x20, [sp, #16]
  41e428:	stp	x21, x22, [sp, #32]
  41e42c:	str	x23, [sp, #48]
  41e430:	mov	x22, x0
  41e434:	bl	403ff0 <strlen@plt>
  41e438:	mov	x21, x0
  41e43c:	adrp	x23, 481000 <argp_program_version_hook@@Base+0x298>
  41e440:	add	x23, x23, #0x240
  41e444:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41e448:	add	x20, x20, #0xa58
  41e44c:	mov	x1, x21
  41e450:	mov	x0, x22
  41e454:	bl	41c6f4 <wcrtomb@plt+0x17ad4>
  41e458:	mov	x19, x0
  41e45c:	cbnz	x0, 41e490 <wcrtomb@plt+0x19870>
  41e460:	ldrb	w1, [x23]
  41e464:	cbz	w1, 41e490 <wcrtomb@plt+0x19870>
  41e468:	ldr	x1, [x20, #8]
  41e46c:	cbz	x1, 41e48c <wcrtomb@plt+0x1986c>
  41e470:	ldr	x1, [x1, #48]
  41e474:	cbz	x1, 41e490 <wcrtomb@plt+0x19870>
  41e478:	bl	41d73c <wcrtomb@plt+0x18b1c>
  41e47c:	ldr	x0, [x20, #8]
  41e480:	ldr	x1, [x0, #48]
  41e484:	cbz	x1, 41e44c <wcrtomb@plt+0x1982c>
  41e488:	b	41e490 <wcrtomb@plt+0x19870>
  41e48c:	mov	x19, x1
  41e490:	mov	x0, x19
  41e494:	ldp	x19, x20, [sp, #16]
  41e498:	ldp	x21, x22, [sp, #32]
  41e49c:	ldr	x23, [sp, #48]
  41e4a0:	ldp	x29, x30, [sp], #64
  41e4a4:	ret
  41e4a8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41e4ac:	ldr	x0, [x0, #4048]
  41e4b0:	cbz	x0, 41e4bc <wcrtomb@plt+0x1989c>
  41e4b4:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41e4b8:	b	41e4e4 <wcrtomb@plt+0x198c4>
  41e4bc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41e4c0:	ldr	x0, [x0, #2656]
  41e4c4:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41e4c8:	str	x0, [x1, #4048]
  41e4cc:	cbnz	x0, 41e4b4 <wcrtomb@plt+0x19894>
  41e4d0:	mov	x0, #0x0                   	// #0
  41e4d4:	ret
  41e4d8:	ldr	x0, [x0]
  41e4dc:	str	x0, [x2, #4048]
  41e4e0:	cbz	x0, 41e4d0 <wcrtomb@plt+0x198b0>
  41e4e4:	ldr	x1, [x0, #48]
  41e4e8:	cbnz	x1, 41e4d8 <wcrtomb@plt+0x198b8>
  41e4ec:	ldr	x1, [x0, #16]
  41e4f0:	ldrb	w1, [x1]
  41e4f4:	cbz	w1, 41e4d8 <wcrtomb@plt+0x198b8>
  41e4f8:	stp	x29, x30, [sp, #-16]!
  41e4fc:	mov	x29, sp
  41e500:	mov	x1, #0x1                   	// #1
  41e504:	str	x1, [x0, #48]
  41e508:	ldr	w0, [x0, #40]
  41e50c:	bl	41b6a8 <wcrtomb@plt+0x16a88>
  41e510:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41e514:	ldr	x0, [x0, #4048]
  41e518:	ldp	x29, x30, [sp], #16
  41e51c:	ret
  41e520:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41e524:	str	xzr, [x0, #4048]
  41e528:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41e52c:	ldr	x0, [x0, #2656]
  41e530:	cbz	x0, 41e540 <wcrtomb@plt+0x19920>
  41e534:	str	xzr, [x0, #48]
  41e538:	ldr	x0, [x0]
  41e53c:	cbnz	x0, 41e534 <wcrtomb@plt+0x19914>
  41e540:	ret
  41e544:	stp	x29, x30, [sp, #-64]!
  41e548:	mov	x29, sp
  41e54c:	stp	x19, x20, [sp, #16]
  41e550:	stp	x21, x22, [sp, #32]
  41e554:	stp	x23, x24, [sp, #48]
  41e558:	mov	x24, x0
  41e55c:	mov	x23, x1
  41e560:	bl	403ff0 <strlen@plt>
  41e564:	mov	x19, x0
  41e568:	mov	x0, x23
  41e56c:	bl	403ff0 <strlen@plt>
  41e570:	add	x22, x0, #0x1
  41e574:	mov	w21, #0x0                   	// #0
  41e578:	cbz	x19, 41e58c <wcrtomb@plt+0x1996c>
  41e57c:	add	x0, x24, x19
  41e580:	ldurb	w0, [x0, #-1]
  41e584:	cmp	w0, #0x2f
  41e588:	cset	w21, ne  // ne = any
  41e58c:	add	x21, x19, w21, sxtw
  41e590:	add	x0, x21, x22
  41e594:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  41e598:	mov	x20, x0
  41e59c:	mov	x2, x19
  41e5a0:	mov	x1, x24
  41e5a4:	bl	403f70 <memcpy@plt>
  41e5a8:	mov	w0, #0x2f                  	// #47
  41e5ac:	strb	w0, [x20, x19]
  41e5b0:	mov	x2, x22
  41e5b4:	mov	x1, x23
  41e5b8:	add	x0, x20, x21
  41e5bc:	bl	403f70 <memcpy@plt>
  41e5c0:	mov	x0, x20
  41e5c4:	ldp	x19, x20, [sp, #16]
  41e5c8:	ldp	x21, x22, [sp, #32]
  41e5cc:	ldp	x23, x24, [sp, #48]
  41e5d0:	ldp	x29, x30, [sp], #64
  41e5d4:	ret
  41e5d8:	ldrb	w2, [x0]
  41e5dc:	cmp	w2, #0x2f
  41e5e0:	b.ne	41e62c <wcrtomb@plt+0x19a0c>  // b.any
  41e5e4:	mov	x2, x0
  41e5e8:	ldrb	w3, [x2, #1]!
  41e5ec:	cmp	w3, #0x2f
  41e5f0:	b.eq	41e5e8 <wcrtomb@plt+0x199c8>  // b.none
  41e5f4:	ldrb	w3, [x2]
  41e5f8:	cbz	w3, 41e63c <wcrtomb@plt+0x19a1c>
  41e5fc:	add	x2, x2, #0x1
  41e600:	cmp	w3, #0x2f
  41e604:	b.ne	41e5f4 <wcrtomb@plt+0x199d4>  // b.any
  41e608:	subs	x1, x1, #0x1
  41e60c:	b.eq	41e634 <wcrtomb@plt+0x19a14>  // b.none
  41e610:	ldrb	w3, [x2]
  41e614:	cmp	w3, #0x2f
  41e618:	b.ne	41e5f4 <wcrtomb@plt+0x199d4>  // b.any
  41e61c:	ldrb	w3, [x2, #1]!
  41e620:	cmp	w3, #0x2f
  41e624:	b.eq	41e61c <wcrtomb@plt+0x199fc>  // b.none
  41e628:	b	41e5f4 <wcrtomb@plt+0x199d4>
  41e62c:	mov	x2, x0
  41e630:	b	41e5f4 <wcrtomb@plt+0x199d4>
  41e634:	sub	x0, x2, x0
  41e638:	b	41e640 <wcrtomb@plt+0x19a20>
  41e63c:	mov	x0, #0xffffffffffffffff    	// #-1
  41e640:	ret
  41e644:	mov	x1, x0
  41e648:	b	41e678 <wcrtomb@plt+0x19a58>
  41e64c:	ldrb	w0, [x1, #1]
  41e650:	cmp	w0, #0x2e
  41e654:	b.ne	41e684 <wcrtomb@plt+0x19a64>  // b.any
  41e658:	ldrb	w2, [x1, #2]
  41e65c:	cmp	w2, #0x2f
  41e660:	cset	w0, eq  // eq = none
  41e664:	cmp	w2, #0x0
  41e668:	csinc	w0, w0, wzr, ne  // ne = any
  41e66c:	cbz	w0, 41e684 <wcrtomb@plt+0x19a64>
  41e670:	b	41e69c <wcrtomb@plt+0x19a7c>
  41e674:	add	x1, x1, #0x1
  41e678:	ldrb	w0, [x1]
  41e67c:	cmp	w0, #0x2e
  41e680:	b.eq	41e64c <wcrtomb@plt+0x19a2c>  // b.none
  41e684:	ldrb	w0, [x1]
  41e688:	cmp	w0, #0x2f
  41e68c:	b.eq	41e674 <wcrtomb@plt+0x19a54>  // b.none
  41e690:	add	x1, x1, #0x1
  41e694:	cbnz	w0, 41e684 <wcrtomb@plt+0x19a64>
  41e698:	mov	w0, #0x0                   	// #0
  41e69c:	ret
  41e6a0:	ldr	x1, [x0, #32]
  41e6a4:	ldr	x1, [x1, #8]
  41e6a8:	cbz	x1, 41e6c4 <wcrtomb@plt+0x19aa4>
  41e6ac:	stp	x29, x30, [sp, #-16]!
  41e6b0:	mov	x29, sp
  41e6b4:	blr	x1
  41e6b8:	and	w0, w0, #0xff
  41e6bc:	ldp	x29, x30, [sp], #16
  41e6c0:	ret
  41e6c4:	mov	w0, #0x1                   	// #1
  41e6c8:	ret
  41e6cc:	ldr	x3, [x0, #32]
  41e6d0:	ldr	x3, [x3, #48]
  41e6d4:	cbz	x3, 41e6f0 <wcrtomb@plt+0x19ad0>
  41e6d8:	stp	x29, x30, [sp, #-16]!
  41e6dc:	mov	x29, sp
  41e6e0:	blr	x3
  41e6e4:	and	w0, w0, #0xff
  41e6e8:	ldp	x29, x30, [sp], #16
  41e6ec:	ret
  41e6f0:	mov	w0, #0x1                   	// #1
  41e6f4:	ret
  41e6f8:	ldr	x1, [x0, #32]
  41e6fc:	ldr	x1, [x1, #40]
  41e700:	cbz	x1, 41e71c <wcrtomb@plt+0x19afc>
  41e704:	stp	x29, x30, [sp, #-16]!
  41e708:	mov	x29, sp
  41e70c:	blr	x1
  41e710:	and	w0, w0, #0xff
  41e714:	ldp	x29, x30, [sp], #16
  41e718:	ret
  41e71c:	mov	w0, #0x1                   	// #1
  41e720:	ret
  41e724:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41e728:	ldr	x0, [x0, #4008]
  41e72c:	ldrb	w0, [x0, #156]
  41e730:	cmp	w0, #0x53
  41e734:	cset	w0, eq  // eq = none
  41e738:	ret
  41e73c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41e740:	ldr	x0, [x0, #4008]
  41e744:	ldrb	w0, [x0, #156]
  41e748:	cmp	w0, #0x53
  41e74c:	cset	w0, eq  // eq = none
  41e750:	ret
  41e754:	ldr	x0, [x0, #24]
  41e758:	ldr	x1, [x0, #288]
  41e75c:	cbnz	x1, 41e770 <wcrtomb@plt+0x19b50>
  41e760:	ldr	w0, [x0, #276]
  41e764:	cmp	w0, #0x0
  41e768:	cset	w0, ne  // ne = any
  41e76c:	ret
  41e770:	mov	w0, #0x1                   	// #1
  41e774:	b	41e76c <wcrtomb@plt+0x19b4c>
  41e778:	stp	xzr, xzr, [x0]
  41e77c:	stp	xzr, xzr, [x0, #16]
  41e780:	stp	xzr, xzr, [x0, #32]
  41e784:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41e788:	ldr	w1, [x1, #3984]
  41e78c:	adrp	x2, 481000 <argp_program_version_hook@@Base+0x298>
  41e790:	ldr	w2, [x2, #752]
  41e794:	cmp	w1, #0x0
  41e798:	csel	w1, w2, w1, eq  // eq = none
  41e79c:	cmp	w1, #0x5
  41e7a0:	b.eq	41e7e4 <wcrtomb@plt+0x19bc4>  // b.none
  41e7a4:	cmp	w1, #0x5
  41e7a8:	b.hi	41e800 <wcrtomb@plt+0x19be0>  // b.pmore
  41e7ac:	cmp	w1, #0x2
  41e7b0:	b.eq	41e7d0 <wcrtomb@plt+0x19bb0>  // b.none
  41e7b4:	cmp	w1, #0x4
  41e7b8:	b.ne	41e7f8 <wcrtomb@plt+0x19bd8>  // b.any
  41e7bc:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  41e7c0:	add	x1, x1, #0xc8
  41e7c4:	add	x1, x1, #0x48
  41e7c8:	str	x1, [x0, #32]
  41e7cc:	b	41e7dc <wcrtomb@plt+0x19bbc>
  41e7d0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  41e7d4:	add	x1, x1, #0xc8
  41e7d8:	str	x1, [x0, #32]
  41e7dc:	mov	w0, #0x1                   	// #1
  41e7e0:	b	41e80c <wcrtomb@plt+0x19bec>
  41e7e4:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  41e7e8:	add	x1, x1, #0xc8
  41e7ec:	add	x1, x1, #0x90
  41e7f0:	str	x1, [x0, #32]
  41e7f4:	b	41e7dc <wcrtomb@plt+0x19bbc>
  41e7f8:	mov	w0, #0x0                   	// #0
  41e7fc:	b	41e80c <wcrtomb@plt+0x19bec>
  41e800:	cmp	w1, #0x6
  41e804:	b.eq	41e7d0 <wcrtomb@plt+0x19bb0>  // b.none
  41e808:	mov	w0, #0x0                   	// #0
  41e80c:	ret
  41e810:	stp	x29, x30, [sp, #-64]!
  41e814:	mov	x29, sp
  41e818:	stp	x19, x20, [sp, #16]
  41e81c:	stp	x21, x22, [sp, #32]
  41e820:	mov	x19, x0
  41e824:	mov	x21, x1
  41e828:	ldrb	w20, [x0, #4]
  41e82c:	cbz	w20, 41e85c <wcrtomb@plt+0x19c3c>
  41e830:	mov	w2, #0x0                   	// #0
  41e834:	ldr	w0, [x0]
  41e838:	bl	4041d0 <lseek@plt>
  41e83c:	lsr	x20, x0, #63
  41e840:	and	w20, w20, #0xff
  41e844:	mov	w0, #0x1                   	// #1
  41e848:	cbnz	w20, 41e8fc <wcrtomb@plt+0x19cdc>
  41e84c:	ldp	x19, x20, [sp, #16]
  41e850:	ldp	x21, x22, [sp, #32]
  41e854:	ldp	x29, x30, [sp], #64
  41e858:	ret
  41e85c:	ldr	x2, [x0, #8]
  41e860:	cmp	x1, x2
  41e864:	b.lt	41e8c8 <wcrtomb@plt+0x19ca8>  // b.tstop
  41e868:	b.le	41e8c0 <wcrtomb@plt+0x19ca0>
  41e86c:	str	x23, [sp, #48]
  41e870:	mov	x23, #0x200                 	// #512
  41e874:	adrp	x22, 456000 <_obstack_memory_used@@Base+0x14e64>
  41e878:	add	x22, x22, #0xc8
  41e87c:	add	x22, x22, #0xd8
  41e880:	sub	x2, x21, x2
  41e884:	cmp	x2, #0x200
  41e888:	csel	x2, x2, x23, le
  41e88c:	mov	x1, x22
  41e890:	ldr	w0, [x19]
  41e894:	bl	404630 <write@plt>
  41e898:	cmp	x0, #0x0
  41e89c:	b.le	41e8dc <wcrtomb@plt+0x19cbc>
  41e8a0:	ldr	x2, [x19, #8]
  41e8a4:	add	x2, x0, x2
  41e8a8:	str	x2, [x19, #8]
  41e8ac:	cmp	x21, x2
  41e8b0:	b.gt	41e880 <wcrtomb@plt+0x19c60>
  41e8b4:	mov	w20, #0x1                   	// #1
  41e8b8:	ldr	x23, [sp, #48]
  41e8bc:	b	41e8d4 <wcrtomb@plt+0x19cb4>
  41e8c0:	mov	w20, #0x1                   	// #1
  41e8c4:	b	41e8d4 <wcrtomb@plt+0x19cb4>
  41e8c8:	bl	404ad0 <__errno_location@plt>
  41e8cc:	mov	w1, #0x16                  	// #22
  41e8d0:	str	w1, [x0]
  41e8d4:	eor	w20, w20, #0x1
  41e8d8:	b	41e844 <wcrtomb@plt+0x19c24>
  41e8dc:	cbnz	x0, 41e8f4 <wcrtomb@plt+0x19cd4>
  41e8e0:	bl	404ad0 <__errno_location@plt>
  41e8e4:	mov	w1, #0x16                  	// #22
  41e8e8:	str	w1, [x0]
  41e8ec:	ldr	x23, [sp, #48]
  41e8f0:	b	41e8d4 <wcrtomb@plt+0x19cb4>
  41e8f4:	ldr	x23, [sp, #48]
  41e8f8:	b	41e8d4 <wcrtomb@plt+0x19cb4>
  41e8fc:	ldr	x0, [x19, #24]
  41e900:	mov	x1, x21
  41e904:	ldr	x0, [x0]
  41e908:	bl	41b8ec <wcrtomb@plt+0x16ccc>
  41e90c:	mov	w0, #0x0                   	// #0
  41e910:	b	41e84c <wcrtomb@plt+0x19c2c>
  41e914:	stp	x29, x30, [sp, #-64]!
  41e918:	mov	x29, sp
  41e91c:	stp	x19, x20, [sp, #16]
  41e920:	stp	x23, x24, [sp, #48]
  41e924:	mov	x19, x0
  41e928:	lsl	x20, x1, #4
  41e92c:	ldr	x1, [x0, #24]
  41e930:	ldr	x1, [x1, #304]
  41e934:	ldr	x1, [x1, x20]
  41e938:	bl	41e810 <wcrtomb@plt+0x19bf0>
  41e93c:	ands	w23, w0, #0xff
  41e940:	b.eq	41e96c <wcrtomb@plt+0x19d4c>  // b.none
  41e944:	stp	x21, x22, [sp, #32]
  41e948:	ldr	x0, [x19, #24]
  41e94c:	ldr	x1, [x0, #304]
  41e950:	add	x20, x1, x20
  41e954:	ldr	x21, [x20, #8]
  41e958:	mov	x24, #0x200                 	// #512
  41e95c:	cbnz	x21, 41e9f8 <wcrtomb@plt+0x19dd8>
  41e960:	ldrb	w20, [x19, #4]
  41e964:	cbnz	w20, 41e980 <wcrtomb@plt+0x19d60>
  41e968:	ldp	x21, x22, [sp, #32]
  41e96c:	mov	w0, w23
  41e970:	ldp	x19, x20, [sp, #16]
  41e974:	ldp	x23, x24, [sp, #48]
  41e978:	ldp	x29, x30, [sp], #64
  41e97c:	ret
  41e980:	ldr	w0, [x19]
  41e984:	bl	421210 <wcrtomb@plt+0x1c5f0>
  41e988:	mov	w23, w20
  41e98c:	cbnz	w0, 41e998 <wcrtomb@plt+0x19d78>
  41e990:	ldp	x21, x22, [sp, #32]
  41e994:	b	41e96c <wcrtomb@plt+0x19d4c>
  41e998:	ldr	x0, [x19, #24]
  41e99c:	ldr	x0, [x0]
  41e9a0:	bl	42a11c <wcrtomb@plt+0x254fc>
  41e9a4:	ldp	x21, x22, [sp, #32]
  41e9a8:	b	41e96c <wcrtomb@plt+0x19d4c>
  41e9ac:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41e9b0:	ldr	x0, [x0, #944]
  41e9b4:	cbz	x0, 41e9bc <wcrtomb@plt+0x19d9c>
  41e9b8:	blr	x0
  41e9bc:	mov	w2, #0x5                   	// #5
  41e9c0:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  41e9c4:	add	x1, x1, #0x380
  41e9c8:	mov	x0, #0x0                   	// #0
  41e9cc:	bl	4049c0 <dcgettext@plt>
  41e9d0:	mov	x2, x0
  41e9d4:	mov	w1, #0x0                   	// #0
  41e9d8:	mov	w0, #0x0                   	// #0
  41e9dc:	bl	404050 <error@plt>
  41e9e0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41e9e4:	mov	w1, #0x2                   	// #2
  41e9e8:	str	w1, [x0, #3392]
  41e9ec:	mov	w23, #0x0                   	// #0
  41e9f0:	ldp	x21, x22, [sp, #32]
  41e9f4:	b	41e96c <wcrtomb@plt+0x19d4c>
  41e9f8:	cmp	x21, #0x0
  41e9fc:	b.le	41ea84 <wcrtomb@plt+0x19e64>
  41ea00:	cmp	x21, #0x200
  41ea04:	csel	x22, x21, x24, le
  41ea08:	bl	406d94 <wcrtomb@plt+0x2174>
  41ea0c:	mov	x20, x0
  41ea10:	cbz	x0, 41e9ac <wcrtomb@plt+0x19d8c>
  41ea14:	bl	405884 <wcrtomb@plt+0xc64>
  41ea18:	ldr	x0, [x19, #16]
  41ea1c:	add	x0, x0, #0x200
  41ea20:	str	x0, [x19, #16]
  41ea24:	mov	x2, x22
  41ea28:	mov	x1, x20
  41ea2c:	ldr	w0, [x19]
  41ea30:	bl	41b574 <wcrtomb@plt+0x16954>
  41ea34:	mov	x20, x0
  41ea38:	sub	x21, x21, x0
  41ea3c:	ldr	x0, [x19, #24]
  41ea40:	ldr	x1, [x0, #264]
  41ea44:	ldr	x0, [x19, #16]
  41ea48:	sub	x0, x1, x0
  41ea4c:	bl	405430 <wcrtomb@plt+0x810>
  41ea50:	ldr	x1, [x19, #8]
  41ea54:	add	x1, x1, x20
  41ea58:	str	x1, [x19, #8]
  41ea5c:	cmp	x22, x20
  41ea60:	b.eq	41e9f8 <wcrtomb@plt+0x19dd8>  // b.none
  41ea64:	ldr	x0, [x19, #24]
  41ea68:	mov	x2, x22
  41ea6c:	mov	x1, x20
  41ea70:	ldr	x0, [x0]
  41ea74:	bl	42a1bc <wcrtomb@plt+0x2559c>
  41ea78:	mov	w23, #0x0                   	// #0
  41ea7c:	ldp	x21, x22, [sp, #32]
  41ea80:	b	41e96c <wcrtomb@plt+0x19d4c>
  41ea84:	ldp	x21, x22, [sp, #32]
  41ea88:	b	41e96c <wcrtomb@plt+0x19d4c>
  41ea8c:	stp	x29, x30, [sp, #-32]!
  41ea90:	mov	x29, sp
  41ea94:	str	x19, [sp, #16]
  41ea98:	mov	x19, x0
  41ea9c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41eaa0:	ldr	x0, [x0, #4008]
  41eaa4:	mov	x1, #0xc                   	// #12
  41eaa8:	add	x0, x0, #0x1c4
  41eaac:	bl	4187b8 <wcrtomb@plt+0x13b98>
  41eab0:	ldr	x1, [x19, #24]
  41eab4:	ldr	x2, [x1, #136]
  41eab8:	str	x2, [x1, #264]
  41eabc:	ldr	x1, [x19, #24]
  41eac0:	cmp	x0, #0x0
  41eac4:	csel	x2, x0, xzr, ge  // ge = tcont
  41eac8:	str	x2, [x1, #136]
  41eacc:	mvn	x0, x0
  41ead0:	lsr	x0, x0, #63
  41ead4:	ldr	x19, [sp, #16]
  41ead8:	ldp	x29, x30, [sp], #32
  41eadc:	ret
  41eae0:	stp	x29, x30, [sp, #-32]!
  41eae4:	mov	x29, sp
  41eae8:	str	x19, [sp, #16]
  41eaec:	mov	x19, x0
  41eaf0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41eaf4:	ldr	x0, [x0, #4008]
  41eaf8:	mov	x1, #0xc                   	// #12
  41eafc:	add	x0, x0, #0x1e3
  41eb00:	bl	4187b8 <wcrtomb@plt+0x13b98>
  41eb04:	ldr	x1, [x19, #24]
  41eb08:	ldr	x2, [x1, #136]
  41eb0c:	str	x2, [x1, #264]
  41eb10:	ldr	x1, [x19, #24]
  41eb14:	cmp	x0, #0x0
  41eb18:	csel	x2, x0, xzr, ge  // ge = tcont
  41eb1c:	str	x2, [x1, #136]
  41eb20:	mvn	x0, x0
  41eb24:	lsr	x0, x0, #63
  41eb28:	ldr	x19, [sp, #16]
  41eb2c:	ldp	x29, x30, [sp], #32
  41eb30:	ret
  41eb34:	stp	x29, x30, [sp, #-48]!
  41eb38:	mov	x29, sp
  41eb3c:	stp	x19, x20, [sp, #16]
  41eb40:	str	x21, [sp, #32]
  41eb44:	mov	x19, x0
  41eb48:	mov	x21, x1
  41eb4c:	ldr	x0, [x0, #304]
  41eb50:	ldr	x20, [x19, #288]
  41eb54:	ldr	x2, [x19, #296]
  41eb58:	cmp	x2, x20
  41eb5c:	b.eq	41eb84 <wcrtomb@plt+0x19f64>  // b.none
  41eb60:	add	x0, x0, x20, lsl #4
  41eb64:	ldp	x2, x3, [x21]
  41eb68:	stp	x2, x3, [x0]
  41eb6c:	add	x20, x20, #0x1
  41eb70:	str	x20, [x19, #288]
  41eb74:	ldp	x19, x20, [sp, #16]
  41eb78:	ldr	x21, [sp, #32]
  41eb7c:	ldp	x29, x30, [sp], #48
  41eb80:	ret
  41eb84:	cbz	x0, 41ebb4 <wcrtomb@plt+0x19f94>
  41eb88:	mov	x1, #0x5555555555555555    	// #6148914691236517205
  41eb8c:	movk	x1, #0x555, lsl #48
  41eb90:	cmp	x2, x1
  41eb94:	b.cs	41ebd0 <wcrtomb@plt+0x19fb0>  // b.hs, b.nlast
  41eb98:	add	x1, x2, #0x1
  41eb9c:	add	x2, x1, x2, lsr #1
  41eba0:	str	x2, [x19, #296]
  41eba4:	lsl	x1, x2, #4
  41eba8:	bl	43ff70 <argp_parse@@Base+0xc830>
  41ebac:	str	x0, [x19, #304]
  41ebb0:	b	41eb60 <wcrtomb@plt+0x19f40>
  41ebb4:	cbz	x2, 41ebd4 <wcrtomb@plt+0x19fb4>
  41ebb8:	cmp	xzr, x2, lsr #60
  41ebbc:	cset	x1, ne  // ne = any
  41ebc0:	tst	x2, #0x800000000000000
  41ebc4:	csinc	w1, w1, wzr, eq  // eq = none
  41ebc8:	cbz	w1, 41eba0 <wcrtomb@plt+0x19f80>
  41ebcc:	bl	40e5ec <wcrtomb@plt+0x99cc>
  41ebd0:	bl	40e5ec <wcrtomb@plt+0x99cc>
  41ebd4:	mov	x2, #0x8                   	// #8
  41ebd8:	b	41eba0 <wcrtomb@plt+0x19f80>
  41ebdc:	stp	x29, x30, [sp, #-48]!
  41ebe0:	mov	x29, sp
  41ebe4:	stp	x19, x20, [sp, #16]
  41ebe8:	mov	x20, x0
  41ebec:	ldrb	w0, [x1, #12]
  41ebf0:	cbnz	w0, 41ec04 <wcrtomb@plt+0x19fe4>
  41ebf4:	mov	w0, #0x1                   	// #1
  41ebf8:	ldp	x19, x20, [sp, #16]
  41ebfc:	ldp	x29, x30, [sp], #48
  41ec00:	ret
  41ec04:	mov	x19, x1
  41ec08:	mov	x1, #0xc                   	// #12
  41ec0c:	mov	x0, x19
  41ec10:	bl	4187b8 <wcrtomb@plt+0x13b98>
  41ec14:	str	x0, [sp, #32]
  41ec18:	mov	x1, #0xc                   	// #12
  41ec1c:	add	x0, x19, x1
  41ec20:	bl	4187b8 <wcrtomb@plt+0x13b98>
  41ec24:	mov	x1, x0
  41ec28:	str	x0, [sp, #40]
  41ec2c:	ldr	x2, [sp, #32]
  41ec30:	cmp	x0, #0x0
  41ec34:	mov	w0, #0x2                   	// #2
  41ec38:	ccmp	x2, #0x0, #0x1, ge  // ge = tcont
  41ec3c:	b.lt	41ebf8 <wcrtomb@plt+0x19fd8>  // b.tstop
  41ec40:	adds	x3, x2, x1
  41ec44:	b.vs	41ebf8 <wcrtomb@plt+0x19fd8>
  41ec48:	ldr	x3, [x20, #24]
  41ec4c:	add	x1, x1, x2
  41ec50:	ldr	x2, [x3, #136]
  41ec54:	cmp	x2, x1
  41ec58:	b.lt	41ebf8 <wcrtomb@plt+0x19fd8>  // b.tstop
  41ec5c:	ldr	x1, [x3, #264]
  41ec60:	tbnz	x1, #63, 41ebf8 <wcrtomb@plt+0x19fd8>
  41ec64:	add	x1, sp, #0x20
  41ec68:	mov	x0, x3
  41ec6c:	bl	41eb34 <wcrtomb@plt+0x19f14>
  41ec70:	mov	w0, #0x0                   	// #0
  41ec74:	b	41ebf8 <wcrtomb@plt+0x19fd8>
  41ec78:	stp	x29, x30, [sp, #-48]!
  41ec7c:	mov	x29, sp
  41ec80:	stp	x19, x20, [sp, #16]
  41ec84:	stp	x21, x22, [sp, #32]
  41ec88:	mov	x21, x0
  41ec8c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41ec90:	ldr	x20, [x0, #4008]
  41ec94:	ldr	x0, [x21, #24]
  41ec98:	str	xzr, [x0, #288]
  41ec9c:	ldrb	w0, [x20, #345]
  41eca0:	cbnz	w0, 41ed54 <wcrtomb@plt+0x1a134>
  41eca4:	ldrb	w0, [x20, #366]
  41eca8:	cbz	w0, 41ed54 <wcrtomb@plt+0x1a134>
  41ecac:	add	x19, x20, #0x164
  41ecb0:	add	x22, x20, #0x1c4
  41ecb4:	mov	x1, x19
  41ecb8:	mov	x0, x21
  41ecbc:	bl	41ebdc <wcrtomb@plt+0x19fbc>
  41ecc0:	cbnz	w0, 41ed98 <wcrtomb@plt+0x1a178>
  41ecc4:	add	x19, x19, #0x18
  41ecc8:	cmp	x19, x22
  41eccc:	b.ne	41ecb4 <wcrtomb@plt+0x1a094>  // b.any
  41ecd0:	ldrb	w0, [x20, #355]
  41ecd4:	cbnz	w0, 41ed54 <wcrtomb@plt+0x1a134>
  41ecd8:	mov	w1, #0x1                   	// #1
  41ecdc:	b	41ed24 <wcrtomb@plt+0x1a104>
  41ece0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41ece4:	ldr	x0, [x0, #944]
  41ece8:	cbz	x0, 41ecf0 <wcrtomb@plt+0x1a0d0>
  41ecec:	blr	x0
  41ecf0:	mov	w2, #0x5                   	// #5
  41ecf4:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  41ecf8:	add	x1, x1, #0x380
  41ecfc:	mov	x0, #0x0                   	// #0
  41ed00:	bl	4049c0 <dcgettext@plt>
  41ed04:	mov	x2, x0
  41ed08:	mov	w1, #0x0                   	// #0
  41ed0c:	mov	w0, #0x0                   	// #0
  41ed10:	bl	404050 <error@plt>
  41ed14:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41ed18:	mov	w1, #0x2                   	// #2
  41ed1c:	str	w1, [x0, #3392]
  41ed20:	mov	w1, #0x0                   	// #0
  41ed24:	mov	w0, w1
  41ed28:	ldp	x19, x20, [sp, #16]
  41ed2c:	ldp	x21, x22, [sp, #32]
  41ed30:	ldp	x29, x30, [sp], #48
  41ed34:	ret
  41ed38:	ldr	x2, [x21, #16]
  41ed3c:	add	x2, x2, #0x200
  41ed40:	str	x2, [x21, #16]
  41ed44:	ldrb	w2, [x22, #504]
  41ed48:	cmp	w2, #0x0
  41ed4c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  41ed50:	b.eq	41ed98 <wcrtomb@plt+0x1a178>  // b.none
  41ed54:	bl	406d94 <wcrtomb@plt+0x2174>
  41ed58:	mov	x22, x0
  41ed5c:	cbz	x0, 41ece0 <wcrtomb@plt+0x1a0c0>
  41ed60:	bl	405884 <wcrtomb@plt+0xc64>
  41ed64:	mov	x20, x22
  41ed68:	mov	x19, #0x0                   	// #0
  41ed6c:	mov	x1, x20
  41ed70:	mov	x0, x21
  41ed74:	bl	41ebdc <wcrtomb@plt+0x19fbc>
  41ed78:	add	x19, x19, #0x1
  41ed7c:	cmp	w0, #0x0
  41ed80:	cset	w1, eq  // eq = none
  41ed84:	add	x20, x20, #0x18
  41ed88:	cmp	w1, #0x0
  41ed8c:	ccmp	x19, #0x14, #0x2, ne  // ne = any
  41ed90:	b.ls	41ed6c <wcrtomb@plt+0x1a14c>  // b.plast
  41ed94:	b	41ed38 <wcrtomb@plt+0x1a118>
  41ed98:	mov	w1, #0x1                   	// #1
  41ed9c:	cmp	w0, #0x2
  41eda0:	b.ne	41ed24 <wcrtomb@plt+0x1a104>  // b.any
  41eda4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41eda8:	ldr	x0, [x0, #944]
  41edac:	cbz	x0, 41edb4 <wcrtomb@plt+0x1a194>
  41edb0:	blr	x0
  41edb4:	mov	w2, #0x5                   	// #5
  41edb8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  41edbc:	add	x1, x1, #0x8
  41edc0:	mov	x0, #0x0                   	// #0
  41edc4:	bl	4049c0 <dcgettext@plt>
  41edc8:	ldr	x1, [x21, #24]
  41edcc:	ldr	x3, [x1]
  41edd0:	mov	x2, x0
  41edd4:	mov	w1, #0x0                   	// #0
  41edd8:	mov	w0, #0x0                   	// #0
  41eddc:	bl	404050 <error@plt>
  41ede0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41ede4:	mov	w1, #0x2                   	// #2
  41ede8:	str	w1, [x0, #3392]
  41edec:	mov	w1, #0x0                   	// #0
  41edf0:	b	41ed24 <wcrtomb@plt+0x1a104>
  41edf4:	stp	x29, x30, [sp, #-48]!
  41edf8:	mov	x29, sp
  41edfc:	stp	x19, x20, [sp, #16]
  41ee00:	stp	x21, x22, [sp, #32]
  41ee04:	mov	x21, x0
  41ee08:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41ee0c:	ldr	x22, [x0, #4008]
  41ee10:	ldr	x0, [x21, #24]
  41ee14:	str	xzr, [x0, #288]
  41ee18:	add	x19, x22, #0x182
  41ee1c:	add	x20, x22, #0x1e2
  41ee20:	mov	x1, x19
  41ee24:	mov	x0, x21
  41ee28:	bl	41ebdc <wcrtomb@plt+0x19fbc>
  41ee2c:	cbnz	w0, 41eef8 <wcrtomb@plt+0x1a2d8>
  41ee30:	add	x19, x19, #0x18
  41ee34:	cmp	x20, x19
  41ee38:	b.ne	41ee20 <wcrtomb@plt+0x1a200>  // b.any
  41ee3c:	ldrb	w0, [x22, #482]
  41ee40:	cbnz	w0, 41eeb4 <wcrtomb@plt+0x1a294>
  41ee44:	mov	w1, #0x1                   	// #1
  41ee48:	b	41ee90 <wcrtomb@plt+0x1a270>
  41ee4c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41ee50:	ldr	x0, [x0, #944]
  41ee54:	cbz	x0, 41ee5c <wcrtomb@plt+0x1a23c>
  41ee58:	blr	x0
  41ee5c:	mov	w2, #0x5                   	// #5
  41ee60:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  41ee64:	add	x1, x1, #0x380
  41ee68:	mov	x0, #0x0                   	// #0
  41ee6c:	bl	4049c0 <dcgettext@plt>
  41ee70:	mov	x2, x0
  41ee74:	mov	w1, #0x0                   	// #0
  41ee78:	mov	w0, #0x0                   	// #0
  41ee7c:	bl	404050 <error@plt>
  41ee80:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41ee84:	mov	w1, #0x2                   	// #2
  41ee88:	str	w1, [x0, #3392]
  41ee8c:	mov	w1, #0x0                   	// #0
  41ee90:	mov	w0, w1
  41ee94:	ldp	x19, x20, [sp, #16]
  41ee98:	ldp	x21, x22, [sp, #32]
  41ee9c:	ldp	x29, x30, [sp], #48
  41eea0:	ret
  41eea4:	ldrb	w2, [x22, #504]
  41eea8:	cmp	w2, #0x0
  41eeac:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  41eeb0:	b.eq	41eef8 <wcrtomb@plt+0x1a2d8>  // b.none
  41eeb4:	bl	406d94 <wcrtomb@plt+0x2174>
  41eeb8:	mov	x22, x0
  41eebc:	cbz	x0, 41ee4c <wcrtomb@plt+0x1a22c>
  41eec0:	bl	405884 <wcrtomb@plt+0xc64>
  41eec4:	mov	x20, x22
  41eec8:	mov	x19, #0x0                   	// #0
  41eecc:	mov	x1, x20
  41eed0:	mov	x0, x21
  41eed4:	bl	41ebdc <wcrtomb@plt+0x19fbc>
  41eed8:	add	x19, x19, #0x1
  41eedc:	cmp	w0, #0x0
  41eee0:	cset	w1, eq  // eq = none
  41eee4:	add	x20, x20, #0x18
  41eee8:	cmp	w1, #0x0
  41eeec:	ccmp	x19, #0x14, #0x2, ne  // ne = any
  41eef0:	b.ls	41eecc <wcrtomb@plt+0x1a2ac>  // b.plast
  41eef4:	b	41eea4 <wcrtomb@plt+0x1a284>
  41eef8:	mov	w1, #0x1                   	// #1
  41eefc:	cmp	w0, #0x2
  41ef00:	b.ne	41ee90 <wcrtomb@plt+0x1a270>  // b.any
  41ef04:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41ef08:	ldr	x0, [x0, #944]
  41ef0c:	cbz	x0, 41ef14 <wcrtomb@plt+0x1a2f4>
  41ef10:	blr	x0
  41ef14:	mov	w2, #0x5                   	// #5
  41ef18:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  41ef1c:	add	x1, x1, #0x8
  41ef20:	mov	x0, #0x0                   	// #0
  41ef24:	bl	4049c0 <dcgettext@plt>
  41ef28:	ldr	x1, [x21, #24]
  41ef2c:	ldr	x3, [x1]
  41ef30:	mov	x2, x0
  41ef34:	mov	w1, #0x0                   	// #0
  41ef38:	mov	w0, #0x0                   	// #0
  41ef3c:	bl	404050 <error@plt>
  41ef40:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41ef44:	mov	w1, #0x2                   	// #2
  41ef48:	str	w1, [x0, #3392]
  41ef4c:	mov	w1, #0x0                   	// #0
  41ef50:	b	41ee90 <wcrtomb@plt+0x1a270>
  41ef54:	stp	x29, x30, [sp, #-240]!
  41ef58:	mov	x29, sp
  41ef5c:	stp	x21, x22, [sp, #32]
  41ef60:	stp	x23, x24, [sp, #48]
  41ef64:	stp	x25, x26, [sp, #64]
  41ef68:	mov	x22, x0
  41ef6c:	lsl	x24, x1, #4
  41ef70:	ldr	x1, [x0, #24]
  41ef74:	ldr	x1, [x1, #304]
  41ef78:	add	x2, x1, x24
  41ef7c:	ldr	x21, [x2, #8]
  41ef80:	ldr	x1, [x1, x24]
  41ef84:	bl	41e810 <wcrtomb@plt+0x19bf0>
  41ef88:	ands	w25, w0, #0xff
  41ef8c:	b.eq	41f038 <wcrtomb@plt+0x1a418>  // b.none
  41ef90:	cmp	x21, #0x0
  41ef94:	b.le	41f038 <wcrtomb@plt+0x1a418>
  41ef98:	stp	x19, x20, [sp, #16]
  41ef9c:	mov	x23, #0x200                 	// #512
  41efa0:	cmp	x21, #0x200
  41efa4:	csel	x26, x21, x23, le
  41efa8:	bl	406d94 <wcrtomb@plt+0x2174>
  41efac:	mov	x20, x0
  41efb0:	mov	x2, x26
  41efb4:	mov	x1, x0
  41efb8:	ldr	w0, [x22]
  41efbc:	bl	43f41c <argp_parse@@Base+0xbcdc>
  41efc0:	mov	x19, x0
  41efc4:	cmn	x0, #0x1
  41efc8:	b.eq	41f008 <wcrtomb@plt+0x1a3e8>  // b.none
  41efcc:	cbz	x0, 41f050 <wcrtomb@plt+0x1a430>
  41efd0:	sub	x2, x23, x0
  41efd4:	mov	w1, #0x0                   	// #0
  41efd8:	add	x0, x20, x0
  41efdc:	bl	404420 <memset@plt>
  41efe0:	sub	x21, x21, x19
  41efe4:	ldr	x2, [x22, #16]
  41efe8:	add	x19, x2, x19
  41efec:	str	x19, [x22, #16]
  41eff0:	mov	x0, x20
  41eff4:	bl	405884 <wcrtomb@plt+0xc64>
  41eff8:	cmp	x21, #0x0
  41effc:	b.gt	41efa0 <wcrtomb@plt+0x1a380>
  41f000:	ldp	x19, x20, [sp, #16]
  41f004:	b	41f038 <wcrtomb@plt+0x1a418>
  41f008:	ldr	x0, [x22, #24]
  41f00c:	ldr	x1, [x0, #304]
  41f010:	add	x2, x1, x24
  41f014:	ldr	x1, [x1, x24]
  41f018:	ldr	x2, [x2, #8]
  41f01c:	add	x1, x1, x2
  41f020:	mov	x2, x26
  41f024:	sub	x1, x1, x21
  41f028:	ldr	x0, [x0]
  41f02c:	bl	41b844 <wcrtomb@plt+0x16c24>
  41f030:	mov	w25, #0x0                   	// #0
  41f034:	ldp	x19, x20, [sp, #16]
  41f038:	mov	w0, w25
  41f03c:	ldp	x21, x22, [sp, #32]
  41f040:	ldp	x23, x24, [sp, #48]
  41f044:	ldp	x25, x26, [sp, #64]
  41f048:	ldp	x29, x30, [sp], #240
  41f04c:	ret
  41f050:	add	x2, sp, #0x70
  41f054:	ldr	w1, [x22]
  41f058:	mov	w0, #0x0                   	// #0
  41f05c:	bl	4049a0 <__fxstat@plt>
  41f060:	cbnz	w0, 41f100 <wcrtomb@plt+0x1a4e0>
  41f064:	ldr	x0, [x22, #24]
  41f068:	ldr	x19, [x0, #136]
  41f06c:	ldr	x0, [sp, #160]
  41f070:	sub	x19, x19, x0
  41f074:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41f078:	ldr	w0, [x0, #408]
  41f07c:	tbz	w0, #7, 41f0e8 <wcrtomb@plt+0x1a4c8>
  41f080:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41f084:	ldr	x0, [x0, #944]
  41f088:	cbz	x0, 41f090 <wcrtomb@plt+0x1a470>
  41f08c:	blr	x0
  41f090:	mov	w4, #0x5                   	// #5
  41f094:	mov	x3, x19
  41f098:	adrp	x2, 453000 <_obstack_memory_used@@Base+0x11e64>
  41f09c:	add	x2, x2, #0x8b8
  41f0a0:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  41f0a4:	add	x1, x1, #0x8e8
  41f0a8:	mov	x0, #0x0                   	// #0
  41f0ac:	bl	4048f0 <dcngettext@plt>
  41f0b0:	mov	x20, x0
  41f0b4:	ldr	x0, [x22, #24]
  41f0b8:	ldr	x0, [x0]
  41f0bc:	bl	43efc4 <argp_parse@@Base+0xb884>
  41f0c0:	mov	x21, x0
  41f0c4:	add	x1, sp, #0x58
  41f0c8:	mov	x0, x19
  41f0cc:	bl	438ce8 <argp_parse@@Base+0x55a8>
  41f0d0:	mov	x4, x0
  41f0d4:	mov	x3, x21
  41f0d8:	mov	x2, x20
  41f0dc:	mov	w1, #0x0                   	// #0
  41f0e0:	mov	w0, #0x0                   	// #0
  41f0e4:	bl	404050 <error@plt>
  41f0e8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41f0ec:	ldrb	w0, [x0, #889]
  41f0f0:	cbz	w0, 41f128 <wcrtomb@plt+0x1a508>
  41f0f4:	mov	w25, #0x0                   	// #0
  41f0f8:	ldp	x19, x20, [sp, #16]
  41f0fc:	b	41f038 <wcrtomb@plt+0x1a418>
  41f100:	ldr	x0, [x22, #24]
  41f104:	ldr	x1, [x0, #304]
  41f108:	add	x2, x1, x24
  41f10c:	ldr	x19, [x1, x24]
  41f110:	ldr	x1, [x2, #8]
  41f114:	add	x19, x19, x1
  41f118:	sub	x21, x19, x21
  41f11c:	ldr	x19, [x0, #136]
  41f120:	sub	x19, x19, x21
  41f124:	b	41f074 <wcrtomb@plt+0x1a454>
  41f128:	mov	w0, #0x1                   	// #1
  41f12c:	bl	424a80 <wcrtomb@plt+0x1fe60>
  41f130:	b	41f0f4 <wcrtomb@plt+0x1a4d4>
  41f134:	stp	x29, x30, [sp, #-64]!
  41f138:	mov	x29, sp
  41f13c:	stp	x19, x20, [sp, #16]
  41f140:	mov	x19, x1
  41f144:	ldrb	w1, [x1]
  41f148:	sub	w1, w1, #0x30
  41f14c:	cmp	w1, #0x9
  41f150:	b.ls	41f164 <wcrtomb@plt+0x1a544>  // b.plast
  41f154:	mov	w0, #0x0                   	// #0
  41f158:	ldp	x19, x20, [sp, #16]
  41f15c:	ldp	x29, x30, [sp], #64
  41f160:	ret
  41f164:	stp	x21, x22, [sp, #32]
  41f168:	mov	x21, x0
  41f16c:	mov	x20, x2
  41f170:	bl	404ad0 <__errno_location@plt>
  41f174:	mov	x22, x0
  41f178:	str	wzr, [x0]
  41f17c:	mov	w3, #0x0                   	// #0
  41f180:	mov	w2, #0xa                   	// #10
  41f184:	add	x1, sp, #0x38
  41f188:	mov	x0, x19
  41f18c:	bl	4044c0 <__strtoul_internal@plt>
  41f190:	mov	x1, x0
  41f194:	mov	w0, #0x0                   	// #0
  41f198:	cmp	x20, x1
  41f19c:	b.cc	41f1cc <wcrtomb@plt+0x1a5ac>  // b.lo, b.ul, b.last
  41f1a0:	ldr	w2, [x22]
  41f1a4:	cmp	w2, #0x22
  41f1a8:	b.eq	41f1d4 <wcrtomb@plt+0x1a5b4>  // b.none
  41f1ac:	ldr	x0, [sp, #56]
  41f1b0:	ldrb	w2, [x0]
  41f1b4:	mov	w0, #0x0                   	// #0
  41f1b8:	cbnz	w2, 41f1dc <wcrtomb@plt+0x1a5bc>
  41f1bc:	str	x1, [x21]
  41f1c0:	mov	w0, #0x1                   	// #1
  41f1c4:	ldp	x21, x22, [sp, #32]
  41f1c8:	b	41f158 <wcrtomb@plt+0x1a538>
  41f1cc:	ldp	x21, x22, [sp, #32]
  41f1d0:	b	41f158 <wcrtomb@plt+0x1a538>
  41f1d4:	ldp	x21, x22, [sp, #32]
  41f1d8:	b	41f158 <wcrtomb@plt+0x1a538>
  41f1dc:	ldp	x21, x22, [sp, #32]
  41f1e0:	b	41f158 <wcrtomb@plt+0x1a538>
  41f1e4:	stp	x29, x30, [sp, #-128]!
  41f1e8:	mov	x29, sp
  41f1ec:	stp	x21, x22, [sp, #32]
  41f1f0:	stp	x23, x24, [sp, #48]
  41f1f4:	mov	x22, x0
  41f1f8:	ldr	x0, [x0, #24]
  41f1fc:	ldr	w0, [x0, #276]
  41f200:	mov	w23, #0x1                   	// #1
  41f204:	cbnz	w0, 41f21c <wcrtomb@plt+0x1a5fc>
  41f208:	mov	w0, w23
  41f20c:	ldp	x21, x22, [sp, #32]
  41f210:	ldp	x23, x24, [sp, #48]
  41f214:	ldp	x29, x30, [sp], #128
  41f218:	ret
  41f21c:	bl	405818 <wcrtomb@plt+0xbf8>
  41f220:	mov	x24, x0
  41f224:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41f228:	ldr	x0, [x0, #4008]
  41f22c:	bl	405884 <wcrtomb@plt+0xc64>
  41f230:	bl	406d94 <wcrtomb@plt+0x2174>
  41f234:	mov	x21, x0
  41f238:	cbz	x0, 41f254 <wcrtomb@plt+0x1a634>
  41f23c:	stp	x19, x20, [sp, #16]
  41f240:	mov	x19, x0
  41f244:	add	x2, x0, #0x200
  41f248:	add	x20, sp, #0x68
  41f24c:	add	x23, sp, #0x7c
  41f250:	b	41f340 <wcrtomb@plt+0x1a720>
  41f254:	stp	x19, x20, [sp, #16]
  41f258:	stp	x25, x26, [sp, #64]
  41f25c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41f260:	ldr	x0, [x0, #944]
  41f264:	cbz	x0, 41f26c <wcrtomb@plt+0x1a64c>
  41f268:	blr	x0
  41f26c:	mov	w2, #0x5                   	// #5
  41f270:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  41f274:	add	x1, x1, #0x380
  41f278:	mov	x0, #0x0                   	// #0
  41f27c:	bl	4049c0 <dcgettext@plt>
  41f280:	mov	x2, x0
  41f284:	mov	w1, #0x0                   	// #0
  41f288:	mov	w0, #0x0                   	// #0
  41f28c:	bl	404050 <error@plt>
  41f290:	bl	40e5ac <wcrtomb@plt+0x998c>
  41f294:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41f298:	ldr	x0, [x0, #944]
  41f29c:	cbz	x0, 41f2a4 <wcrtomb@plt+0x1a684>
  41f2a0:	blr	x0
  41f2a4:	mov	w2, #0x5                   	// #5
  41f2a8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  41f2ac:	add	x1, x1, #0x30
  41f2b0:	mov	x0, #0x0                   	// #0
  41f2b4:	bl	4049c0 <dcgettext@plt>
  41f2b8:	ldr	x1, [x22, #24]
  41f2bc:	ldr	x3, [x1]
  41f2c0:	mov	x2, x0
  41f2c4:	mov	w1, #0x0                   	// #0
  41f2c8:	mov	w0, #0x0                   	// #0
  41f2cc:	bl	404050 <error@plt>
  41f2d0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41f2d4:	mov	w1, #0x2                   	// #2
  41f2d8:	str	w1, [x0, #3392]
  41f2dc:	mov	w23, #0x0                   	// #0
  41f2e0:	ldp	x19, x20, [sp, #16]
  41f2e4:	b	41f208 <wcrtomb@plt+0x1a5e8>
  41f2e8:	stp	x25, x26, [sp, #64]
  41f2ec:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41f2f0:	ldr	x0, [x0, #944]
  41f2f4:	cbz	x0, 41f2fc <wcrtomb@plt+0x1a6dc>
  41f2f8:	blr	x0
  41f2fc:	mov	w2, #0x5                   	// #5
  41f300:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  41f304:	add	x1, x1, #0x380
  41f308:	mov	x0, #0x0                   	// #0
  41f30c:	bl	4049c0 <dcgettext@plt>
  41f310:	mov	x2, x0
  41f314:	mov	w1, #0x0                   	// #0
  41f318:	mov	w0, #0x0                   	// #0
  41f31c:	bl	404050 <error@plt>
  41f320:	bl	40e5ac <wcrtomb@plt+0x998c>
  41f324:	mov	x19, x1
  41f328:	ldrb	w1, [x19], #1
  41f32c:	strb	w1, [x20], #1
  41f330:	cmp	w1, #0xa
  41f334:	b.eq	41f36c <wcrtomb@plt+0x1a74c>  // b.none
  41f338:	cmp	x20, x23
  41f33c:	b.eq	41f294 <wcrtomb@plt+0x1a674>  // b.none
  41f340:	mov	x1, x19
  41f344:	cmp	x19, x2
  41f348:	b.ne	41f324 <wcrtomb@plt+0x1a704>  // b.any
  41f34c:	mov	x0, x21
  41f350:	bl	405884 <wcrtomb@plt+0xc64>
  41f354:	bl	406d94 <wcrtomb@plt+0x2174>
  41f358:	mov	x21, x0
  41f35c:	cbz	x0, 41f2e8 <wcrtomb@plt+0x1a6c8>
  41f360:	mov	x1, x0
  41f364:	add	x2, x0, #0x200
  41f368:	b	41f324 <wcrtomb@plt+0x1a704>
  41f36c:	sturb	wzr, [x20, #-1]
  41f370:	mov	x2, #0xffffffffffffffff    	// #-1
  41f374:	add	x1, sp, #0x68
  41f378:	add	x0, sp, #0x50
  41f37c:	bl	41f134 <wcrtomb@plt+0x1a514>
  41f380:	ands	w23, w0, #0xff
  41f384:	b.ne	41f3d4 <wcrtomb@plt+0x1a7b4>  // b.any
  41f388:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41f38c:	ldr	x0, [x0, #944]
  41f390:	cbz	x0, 41f398 <wcrtomb@plt+0x1a778>
  41f394:	blr	x0
  41f398:	mov	w2, #0x5                   	// #5
  41f39c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  41f3a0:	add	x1, x1, #0x60
  41f3a4:	mov	x0, #0x0                   	// #0
  41f3a8:	bl	4049c0 <dcgettext@plt>
  41f3ac:	ldr	x1, [x22, #24]
  41f3b0:	ldr	x3, [x1]
  41f3b4:	mov	x2, x0
  41f3b8:	mov	w1, #0x0                   	// #0
  41f3bc:	mov	w0, #0x0                   	// #0
  41f3c0:	bl	404050 <error@plt>
  41f3c4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41f3c8:	mov	w1, #0x2                   	// #2
  41f3cc:	str	w1, [x0, #3392]
  41f3d0:	b	41f2dc <wcrtomb@plt+0x1a6bc>
  41f3d4:	ldr	x0, [x22, #24]
  41f3d8:	ldr	x1, [sp, #80]
  41f3dc:	str	x1, [x0, #296]
  41f3e0:	ldr	x20, [x22, #24]
  41f3e4:	mov	x1, #0x10                  	// #16
  41f3e8:	ldr	x0, [x20, #296]
  41f3ec:	bl	4400e8 <argp_parse@@Base+0xc9a8>
  41f3f0:	str	x0, [x20, #304]
  41f3f4:	ldr	x0, [x22, #24]
  41f3f8:	str	xzr, [x0, #288]
  41f3fc:	ldr	x0, [x22, #24]
  41f400:	ldr	x0, [x0, #296]
  41f404:	cbz	x0, 41f680 <wcrtomb@plt+0x1aa60>
  41f408:	stp	x25, x26, [sp, #64]
  41f40c:	mov	x26, #0x0                   	// #0
  41f410:	add	x25, sp, #0x7c
  41f414:	add	x1, x21, #0x200
  41f418:	add	x20, sp, #0x68
  41f41c:	b	41f4c4 <wcrtomb@plt+0x1a8a4>
  41f420:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41f424:	ldr	x0, [x0, #944]
  41f428:	cbz	x0, 41f430 <wcrtomb@plt+0x1a810>
  41f42c:	blr	x0
  41f430:	mov	w2, #0x5                   	// #5
  41f434:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  41f438:	add	x1, x1, #0x30
  41f43c:	mov	x0, #0x0                   	// #0
  41f440:	bl	4049c0 <dcgettext@plt>
  41f444:	ldr	x1, [x22, #24]
  41f448:	ldr	x3, [x1]
  41f44c:	mov	x2, x0
  41f450:	mov	w1, #0x0                   	// #0
  41f454:	mov	w0, #0x0                   	// #0
  41f458:	bl	404050 <error@plt>
  41f45c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41f460:	mov	w1, #0x2                   	// #2
  41f464:	str	w1, [x0, #3392]
  41f468:	ldp	x25, x26, [sp, #64]
  41f46c:	b	41f2dc <wcrtomb@plt+0x1a6bc>
  41f470:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41f474:	ldr	x0, [x0, #944]
  41f478:	cbz	x0, 41f480 <wcrtomb@plt+0x1a860>
  41f47c:	blr	x0
  41f480:	mov	w2, #0x5                   	// #5
  41f484:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  41f488:	add	x1, x1, #0x380
  41f48c:	mov	x0, #0x0                   	// #0
  41f490:	bl	4049c0 <dcgettext@plt>
  41f494:	mov	x2, x0
  41f498:	mov	w1, #0x0                   	// #0
  41f49c:	mov	w0, #0x0                   	// #0
  41f4a0:	bl	404050 <error@plt>
  41f4a4:	bl	40e5ac <wcrtomb@plt+0x998c>
  41f4a8:	mov	x19, x0
  41f4ac:	ldrb	w0, [x19], #1
  41f4b0:	strb	w0, [x20], #1
  41f4b4:	cmp	w0, #0xa
  41f4b8:	b.eq	41f4ec <wcrtomb@plt+0x1a8cc>  // b.none
  41f4bc:	cmp	x20, x25
  41f4c0:	b.eq	41f420 <wcrtomb@plt+0x1a800>  // b.none
  41f4c4:	mov	x0, x19
  41f4c8:	cmp	x19, x1
  41f4cc:	b.ne	41f4a8 <wcrtomb@plt+0x1a888>  // b.any
  41f4d0:	mov	x0, x21
  41f4d4:	bl	405884 <wcrtomb@plt+0xc64>
  41f4d8:	bl	406d94 <wcrtomb@plt+0x2174>
  41f4dc:	mov	x21, x0
  41f4e0:	cbz	x0, 41f470 <wcrtomb@plt+0x1a850>
  41f4e4:	add	x1, x0, #0x200
  41f4e8:	b	41f4a8 <wcrtomb@plt+0x1a888>
  41f4ec:	sturb	wzr, [x20, #-1]
  41f4f0:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  41f4f4:	add	x1, sp, #0x68
  41f4f8:	add	x0, sp, #0x50
  41f4fc:	bl	41f134 <wcrtomb@plt+0x1a514>
  41f500:	and	w0, w0, #0xff
  41f504:	cbz	w0, 41f51c <wcrtomb@plt+0x1a8fc>
  41f508:	ldr	x0, [sp, #80]
  41f50c:	str	x0, [sp, #88]
  41f510:	add	x1, x21, #0x200
  41f514:	add	x20, sp, #0x68
  41f518:	b	41f610 <wcrtomb@plt+0x1a9f0>
  41f51c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41f520:	ldr	x0, [x0, #944]
  41f524:	cbz	x0, 41f52c <wcrtomb@plt+0x1a90c>
  41f528:	blr	x0
  41f52c:	mov	w2, #0x5                   	// #5
  41f530:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  41f534:	add	x1, x1, #0x60
  41f538:	mov	x0, #0x0                   	// #0
  41f53c:	bl	4049c0 <dcgettext@plt>
  41f540:	ldr	x1, [x22, #24]
  41f544:	ldr	x3, [x1]
  41f548:	mov	x2, x0
  41f54c:	mov	w1, #0x0                   	// #0
  41f550:	mov	w0, #0x0                   	// #0
  41f554:	bl	404050 <error@plt>
  41f558:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41f55c:	mov	w1, #0x2                   	// #2
  41f560:	str	w1, [x0, #3392]
  41f564:	ldp	x25, x26, [sp, #64]
  41f568:	b	41f2dc <wcrtomb@plt+0x1a6bc>
  41f56c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41f570:	ldr	x0, [x0, #944]
  41f574:	cbz	x0, 41f57c <wcrtomb@plt+0x1a95c>
  41f578:	blr	x0
  41f57c:	mov	w2, #0x5                   	// #5
  41f580:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  41f584:	add	x1, x1, #0x30
  41f588:	mov	x0, #0x0                   	// #0
  41f58c:	bl	4049c0 <dcgettext@plt>
  41f590:	ldr	x1, [x22, #24]
  41f594:	ldr	x3, [x1]
  41f598:	mov	x2, x0
  41f59c:	mov	w1, #0x0                   	// #0
  41f5a0:	mov	w0, #0x0                   	// #0
  41f5a4:	bl	404050 <error@plt>
  41f5a8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41f5ac:	mov	w1, #0x2                   	// #2
  41f5b0:	str	w1, [x0, #3392]
  41f5b4:	ldp	x25, x26, [sp, #64]
  41f5b8:	b	41f2dc <wcrtomb@plt+0x1a6bc>
  41f5bc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41f5c0:	ldr	x0, [x0, #944]
  41f5c4:	cbz	x0, 41f5cc <wcrtomb@plt+0x1a9ac>
  41f5c8:	blr	x0
  41f5cc:	mov	w2, #0x5                   	// #5
  41f5d0:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  41f5d4:	add	x1, x1, #0x380
  41f5d8:	mov	x0, #0x0                   	// #0
  41f5dc:	bl	4049c0 <dcgettext@plt>
  41f5e0:	mov	x2, x0
  41f5e4:	mov	w1, #0x0                   	// #0
  41f5e8:	mov	w0, #0x0                   	// #0
  41f5ec:	bl	404050 <error@plt>
  41f5f0:	bl	40e5ac <wcrtomb@plt+0x998c>
  41f5f4:	mov	x19, x0
  41f5f8:	ldrb	w0, [x19], #1
  41f5fc:	strb	w0, [x20], #1
  41f600:	cmp	w0, #0xa
  41f604:	b.eq	41f638 <wcrtomb@plt+0x1aa18>  // b.none
  41f608:	cmp	x20, x25
  41f60c:	b.eq	41f56c <wcrtomb@plt+0x1a94c>  // b.none
  41f610:	mov	x0, x19
  41f614:	cmp	x19, x1
  41f618:	b.ne	41f5f4 <wcrtomb@plt+0x1a9d4>  // b.any
  41f61c:	mov	x0, x21
  41f620:	bl	405884 <wcrtomb@plt+0xc64>
  41f624:	bl	406d94 <wcrtomb@plt+0x2174>
  41f628:	mov	x21, x0
  41f62c:	cbz	x0, 41f5bc <wcrtomb@plt+0x1a99c>
  41f630:	add	x1, x0, #0x200
  41f634:	b	41f5f4 <wcrtomb@plt+0x1a9d4>
  41f638:	sturb	wzr, [x20, #-1]
  41f63c:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  41f640:	add	x1, sp, #0x68
  41f644:	add	x0, sp, #0x50
  41f648:	bl	41f134 <wcrtomb@plt+0x1a514>
  41f64c:	and	w0, w0, #0xff
  41f650:	cbz	w0, 41f6a4 <wcrtomb@plt+0x1aa84>
  41f654:	ldr	x0, [sp, #80]
  41f658:	str	x0, [sp, #96]
  41f65c:	add	x1, sp, #0x58
  41f660:	ldr	x0, [x22, #24]
  41f664:	bl	41eb34 <wcrtomb@plt+0x19f14>
  41f668:	add	x26, x26, #0x1
  41f66c:	ldr	x0, [x22, #24]
  41f670:	ldr	x0, [x0, #296]
  41f674:	cmp	x0, x26
  41f678:	b.hi	41f414 <wcrtomb@plt+0x1a7f4>  // b.pmore
  41f67c:	ldp	x25, x26, [sp, #64]
  41f680:	mov	x0, x21
  41f684:	bl	405884 <wcrtomb@plt+0xc64>
  41f688:	bl	405818 <wcrtomb@plt+0xbf8>
  41f68c:	sub	x0, x0, x24
  41f690:	ldr	x1, [x22, #16]
  41f694:	add	x0, x1, x0, lsl #9
  41f698:	str	x0, [x22, #16]
  41f69c:	ldp	x19, x20, [sp, #16]
  41f6a0:	b	41f208 <wcrtomb@plt+0x1a5e8>
  41f6a4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41f6a8:	ldr	x0, [x0, #944]
  41f6ac:	cbz	x0, 41f6b4 <wcrtomb@plt+0x1aa94>
  41f6b0:	blr	x0
  41f6b4:	mov	w2, #0x5                   	// #5
  41f6b8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  41f6bc:	add	x1, x1, #0x60
  41f6c0:	mov	x0, #0x0                   	// #0
  41f6c4:	bl	4049c0 <dcgettext@plt>
  41f6c8:	ldr	x1, [x22, #24]
  41f6cc:	ldr	x3, [x1]
  41f6d0:	mov	x2, x0
  41f6d4:	mov	w1, #0x0                   	// #0
  41f6d8:	mov	w0, #0x0                   	// #0
  41f6dc:	bl	404050 <error@plt>
  41f6e0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41f6e4:	mov	w1, #0x2                   	// #2
  41f6e8:	str	w1, [x0, #3392]
  41f6ec:	ldp	x25, x26, [sp, #64]
  41f6f0:	b	41f2dc <wcrtomb@plt+0x1a6bc>
  41f6f4:	stp	x29, x30, [sp, #-64]!
  41f6f8:	mov	x29, sp
  41f6fc:	stp	x19, x20, [sp, #16]
  41f700:	stp	x21, x22, [sp, #32]
  41f704:	mov	x22, x0
  41f708:	mov	x20, x1
  41f70c:	ldr	x4, [x1]
  41f710:	ldr	x0, [x0, #24]
  41f714:	ldr	x1, [x0, #288]
  41f718:	cmp	x3, #0x0
  41f71c:	ccmp	x4, x1, #0x2, ne  // ne = any
  41f720:	b.cs	41f794 <wcrtomb@plt+0x1ab74>  // b.hs, b.nlast
  41f724:	str	x23, [sp, #48]
  41f728:	mov	x19, x2
  41f72c:	mov	x21, x3
  41f730:	mov	x23, #0xc                   	// #12
  41f734:	ldr	x0, [x0, #304]
  41f738:	lsl	x4, x4, #4
  41f73c:	mov	x2, x23
  41f740:	mov	x1, x19
  41f744:	ldr	x0, [x0, x4]
  41f748:	bl	40b184 <wcrtomb@plt+0x6564>
  41f74c:	ldr	x0, [x22, #24]
  41f750:	ldr	x4, [x20]
  41f754:	ldr	x0, [x0, #304]
  41f758:	add	x4, x0, x4, lsl #4
  41f75c:	mov	x2, x23
  41f760:	add	x1, x19, #0xc
  41f764:	ldr	x0, [x4, #8]
  41f768:	bl	40b184 <wcrtomb@plt+0x6564>
  41f76c:	add	x19, x19, #0x18
  41f770:	ldr	x4, [x20]
  41f774:	add	x4, x4, #0x1
  41f778:	str	x4, [x20]
  41f77c:	ldr	x0, [x22, #24]
  41f780:	ldr	x1, [x0, #288]
  41f784:	subs	x21, x21, #0x1
  41f788:	ccmp	x4, x1, #0x2, ne  // ne = any
  41f78c:	b.cc	41f734 <wcrtomb@plt+0x1ab14>  // b.lo, b.ul, b.last
  41f790:	ldr	x23, [sp, #48]
  41f794:	ldp	x19, x20, [sp, #16]
  41f798:	ldp	x21, x22, [sp, #32]
  41f79c:	ldp	x29, x30, [sp], #64
  41f7a0:	ret
  41f7a4:	stp	x29, x30, [sp, #-80]!
  41f7a8:	mov	x29, sp
  41f7ac:	stp	x19, x20, [sp, #16]
  41f7b0:	stp	x21, x22, [sp, #32]
  41f7b4:	mov	x20, x0
  41f7b8:	bl	405818 <wcrtomb@plt+0xbf8>
  41f7bc:	mov	x21, x0
  41f7c0:	ldr	x0, [x20, #24]
  41f7c4:	bl	40b6a4 <wcrtomb@plt+0x6a84>
  41f7c8:	mov	x19, x0
  41f7cc:	mov	w0, #0x53                  	// #83
  41f7d0:	strb	w0, [x19, #156]
  41f7d4:	ldr	x0, [x20, #24]
  41f7d8:	ldr	x0, [x0, #288]
  41f7dc:	cmp	x0, #0x4
  41f7e0:	b.ls	41f7ec <wcrtomb@plt+0x1abcc>  // b.plast
  41f7e4:	mov	w0, #0x1                   	// #1
  41f7e8:	strb	w0, [x19, #482]
  41f7ec:	ldr	x0, [x20, #24]
  41f7f0:	mov	x2, #0xc                   	// #12
  41f7f4:	add	x1, x19, #0x1e3
  41f7f8:	ldr	x0, [x0, #136]
  41f7fc:	bl	40b184 <wcrtomb@plt+0x6564>
  41f800:	ldr	x0, [x20, #24]
  41f804:	mov	x2, #0xc                   	// #12
  41f808:	add	x1, x19, #0x7c
  41f80c:	ldr	x0, [x0, #264]
  41f810:	bl	40b184 <wcrtomb@plt+0x6564>
  41f814:	str	xzr, [sp, #72]
  41f818:	mov	x3, #0x4                   	// #4
  41f81c:	add	x2, x19, #0x182
  41f820:	add	x1, sp, #0x48
  41f824:	mov	x0, x20
  41f828:	bl	41f6f4 <wcrtomb@plt+0x1aad4>
  41f82c:	ldr	x0, [x20, #24]
  41f830:	ldr	x1, [x0, #288]
  41f834:	ldr	x0, [sp, #72]
  41f838:	cmp	x1, x0
  41f83c:	cset	w0, hi  // hi = pmore
  41f840:	strb	w0, [x19, #482]
  41f844:	mov	x2, x21
  41f848:	mov	x1, x19
  41f84c:	ldr	x0, [x20, #24]
  41f850:	bl	40b4b0 <wcrtomb@plt+0x6890>
  41f854:	ldr	x0, [x20, #24]
  41f858:	ldr	x1, [x0, #288]
  41f85c:	ldr	x0, [sp, #72]
  41f860:	cmp	x1, x0
  41f864:	b.ls	41f8e0 <wcrtomb@plt+0x1acc0>  // b.plast
  41f868:	str	x23, [sp, #48]
  41f86c:	mov	x22, #0x200                 	// #512
  41f870:	mov	x21, #0x15                  	// #21
  41f874:	mov	w23, #0x1                   	// #1
  41f878:	b	41f898 <wcrtomb@plt+0x1ac78>
  41f87c:	mov	x0, x19
  41f880:	bl	405884 <wcrtomb@plt+0xc64>
  41f884:	ldr	x0, [x20, #24]
  41f888:	ldr	x1, [x0, #288]
  41f88c:	ldr	x0, [sp, #72]
  41f890:	cmp	x1, x0
  41f894:	b.ls	41f8dc <wcrtomb@plt+0x1acbc>  // b.plast
  41f898:	bl	406d94 <wcrtomb@plt+0x2174>
  41f89c:	mov	x19, x0
  41f8a0:	mov	x2, x22
  41f8a4:	mov	w1, #0x0                   	// #0
  41f8a8:	bl	404420 <memset@plt>
  41f8ac:	mov	x3, x21
  41f8b0:	mov	x2, x19
  41f8b4:	add	x1, sp, #0x48
  41f8b8:	mov	x0, x20
  41f8bc:	bl	41f6f4 <wcrtomb@plt+0x1aad4>
  41f8c0:	ldr	x0, [x20, #24]
  41f8c4:	ldr	x1, [x0, #288]
  41f8c8:	ldr	x0, [sp, #72]
  41f8cc:	cmp	x1, x0
  41f8d0:	b.ls	41f87c <wcrtomb@plt+0x1ac5c>  // b.plast
  41f8d4:	strb	w23, [x19, #504]
  41f8d8:	b	41f87c <wcrtomb@plt+0x1ac5c>
  41f8dc:	ldr	x23, [sp, #48]
  41f8e0:	mov	w0, #0x1                   	// #1
  41f8e4:	ldp	x19, x20, [sp, #16]
  41f8e8:	ldp	x21, x22, [sp, #32]
  41f8ec:	ldp	x29, x30, [sp], #80
  41f8f0:	ret
  41f8f4:	sub	sp, sp, #0x260
  41f8f8:	stp	x29, x30, [sp]
  41f8fc:	mov	x29, sp
  41f900:	stp	x21, x22, [sp, #32]
  41f904:	stp	x23, x24, [sp, #48]
  41f908:	mov	x22, x0
  41f90c:	ldr	x21, [x0, #24]
  41f910:	ldr	w23, [x0]
  41f914:	str	xzr, [sp, #80]
  41f918:	str	xzr, [sp, #88]
  41f91c:	str	xzr, [x21, #264]
  41f920:	mov	x2, #0x0                   	// #0
  41f924:	mov	w1, #0x0                   	// #0
  41f928:	bl	41e6cc <wcrtomb@plt+0x19aac>
  41f92c:	ands	w0, w0, #0xff
  41f930:	b.eq	41f994 <wcrtomb@plt+0x1ad74>  // b.none
  41f934:	stp	x19, x20, [sp, #16]
  41f938:	str	x25, [sp, #64]
  41f93c:	mov	x20, #0x0                   	// #0
  41f940:	mov	x24, #0x200                 	// #512
  41f944:	mov	w25, #0x1                   	// #1
  41f948:	b	41f9e0 <wcrtomb@plt+0x1adc0>
  41f94c:	str	x20, [sp, #80]
  41f950:	b	41f9b0 <wcrtomb@plt+0x1ad90>
  41f954:	ldr	x0, [sp, #88]
  41f958:	cbnz	x0, 41f960 <wcrtomb@plt+0x1ad40>
  41f95c:	str	x20, [sp, #80]
  41f960:	add	x1, sp, #0x50
  41f964:	mov	x0, x21
  41f968:	bl	41eb34 <wcrtomb@plt+0x19f14>
  41f96c:	ldr	x0, [x21, #264]
  41f970:	add	x19, x0, x19
  41f974:	str	x19, [x21, #264]
  41f978:	mov	x2, #0x0                   	// #0
  41f97c:	mov	w1, #0x2                   	// #2
  41f980:	mov	x0, x22
  41f984:	bl	41e6cc <wcrtomb@plt+0x19aac>
  41f988:	and	w0, w0, #0xff
  41f98c:	ldp	x19, x20, [sp, #16]
  41f990:	ldr	x25, [sp, #64]
  41f994:	ldp	x21, x22, [sp, #32]
  41f998:	ldp	x23, x24, [sp, #48]
  41f99c:	ldp	x29, x30, [sp]
  41f9a0:	add	sp, sp, #0x260
  41f9a4:	ret
  41f9a8:	ldr	x0, [sp, #88]
  41f9ac:	cbz	x0, 41f94c <wcrtomb@plt+0x1ad2c>
  41f9b0:	add	x0, x0, x19
  41f9b4:	str	x0, [sp, #88]
  41f9b8:	ldr	x0, [x21, #264]
  41f9bc:	add	x0, x0, x19
  41f9c0:	str	x0, [x21, #264]
  41f9c4:	add	x2, sp, #0x60
  41f9c8:	mov	w1, w25
  41f9cc:	mov	x0, x22
  41f9d0:	bl	41e6cc <wcrtomb@plt+0x19aac>
  41f9d4:	ands	w0, w0, #0xff
  41f9d8:	b.eq	41fa58 <wcrtomb@plt+0x1ae38>  // b.none
  41f9dc:	add	x20, x20, x19
  41f9e0:	mov	x2, x24
  41f9e4:	add	x1, sp, #0x60
  41f9e8:	mov	w0, w23
  41f9ec:	bl	41b4e0 <wcrtomb@plt+0x168c0>
  41f9f0:	mov	x19, x0
  41f9f4:	sub	x0, x0, #0x1
  41f9f8:	cmn	x0, #0x3
  41f9fc:	b.hi	41f954 <wcrtomb@plt+0x1ad34>  // b.pmore
  41fa00:	add	x0, sp, #0x60
  41fa04:	add	x2, x0, x19
  41fa08:	mov	x1, x0
  41fa0c:	ldrb	w0, [x1], #1
  41fa10:	cbnz	w0, 41f9a8 <wcrtomb@plt+0x1ad88>
  41fa14:	cmp	x2, x1
  41fa18:	b.ne	41fa0c <wcrtomb@plt+0x1adec>  // b.any
  41fa1c:	ldr	x0, [sp, #88]
  41fa20:	cbz	x0, 41f9dc <wcrtomb@plt+0x1adbc>
  41fa24:	add	x1, sp, #0x50
  41fa28:	mov	x0, x21
  41fa2c:	bl	41eb34 <wcrtomb@plt+0x19f14>
  41fa30:	str	xzr, [sp, #88]
  41fa34:	mov	x2, #0x0                   	// #0
  41fa38:	mov	w1, w25
  41fa3c:	mov	x0, x22
  41fa40:	bl	41e6cc <wcrtomb@plt+0x19aac>
  41fa44:	ands	w0, w0, #0xff
  41fa48:	b.ne	41f9dc <wcrtomb@plt+0x1adbc>  // b.any
  41fa4c:	ldp	x19, x20, [sp, #16]
  41fa50:	ldr	x25, [sp, #64]
  41fa54:	b	41f994 <wcrtomb@plt+0x1ad74>
  41fa58:	ldp	x19, x20, [sp, #16]
  41fa5c:	ldr	x25, [sp, #64]
  41fa60:	b	41f994 <wcrtomb@plt+0x1ad74>
  41fa64:	sub	sp, sp, #0x250
  41fa68:	stp	x29, x30, [sp]
  41fa6c:	mov	x29, sp
  41fa70:	stp	x19, x20, [sp, #16]
  41fa74:	stp	x23, x24, [sp, #48]
  41fa78:	str	x25, [sp, #64]
  41fa7c:	mov	x19, x0
  41fa80:	lsl	x25, x1, #4
  41fa84:	ldr	x1, [x0, #24]
  41fa88:	ldr	x1, [x1, #304]
  41fa8c:	ldr	x1, [x1, x25]
  41fa90:	bl	41e810 <wcrtomb@plt+0x19bf0>
  41fa94:	ands	w23, w0, #0xff
  41fa98:	b.ne	41fab8 <wcrtomb@plt+0x1ae98>  // b.any
  41fa9c:	mov	w0, w23
  41faa0:	ldp	x19, x20, [sp, #16]
  41faa4:	ldp	x23, x24, [sp, #48]
  41faa8:	ldr	x25, [sp, #64]
  41faac:	ldp	x29, x30, [sp]
  41fab0:	add	sp, sp, #0x250
  41fab4:	ret
  41fab8:	stp	x21, x22, [sp, #32]
  41fabc:	ldr	x1, [x19, #24]
  41fac0:	ldr	x0, [x1, #304]
  41fac4:	add	x0, x0, x25
  41fac8:	ldr	x21, [x0, #8]
  41facc:	ldr	x1, [x1, #264]
  41fad0:	ldr	x0, [x19, #16]
  41fad4:	sub	x0, x1, x0
  41fad8:	bl	405430 <wcrtomb@plt+0x810>
  41fadc:	cmp	x21, #0x0
  41fae0:	b.le	41fc28 <wcrtomb@plt+0x1b008>
  41fae4:	mov	x24, #0x200                 	// #512
  41fae8:	cmp	x21, #0x200
  41faec:	csel	x22, x21, x24, le
  41faf0:	bl	406d94 <wcrtomb@plt+0x2174>
  41faf4:	mov	x20, x0
  41faf8:	cbz	x0, 41fb64 <wcrtomb@plt+0x1af44>
  41fafc:	bl	405884 <wcrtomb@plt+0xc64>
  41fb00:	ldr	x2, [x19, #16]
  41fb04:	add	x2, x2, #0x200
  41fb08:	str	x2, [x19, #16]
  41fb0c:	mov	x2, x22
  41fb10:	add	x1, sp, #0x50
  41fb14:	ldr	w0, [x19]
  41fb18:	bl	43f41c <argp_parse@@Base+0xbcdc>
  41fb1c:	cmn	x0, #0x1
  41fb20:	b.eq	41fbb0 <wcrtomb@plt+0x1af90>  // b.none
  41fb24:	cbz	x0, 41fbdc <wcrtomb@plt+0x1afbc>
  41fb28:	sub	x21, x21, x0
  41fb2c:	ldr	x0, [x19, #24]
  41fb30:	ldr	x1, [x0, #264]
  41fb34:	ldr	x0, [x19, #16]
  41fb38:	sub	x0, x1, x0
  41fb3c:	bl	405430 <wcrtomb@plt+0x810>
  41fb40:	mov	x2, x22
  41fb44:	add	x1, sp, #0x50
  41fb48:	mov	x0, x20
  41fb4c:	bl	4046e0 <memcmp@plt>
  41fb50:	cbnz	w0, 41fc00 <wcrtomb@plt+0x1afe0>
  41fb54:	cmp	x21, #0x0
  41fb58:	b.gt	41fae8 <wcrtomb@plt+0x1aec8>
  41fb5c:	ldp	x21, x22, [sp, #32]
  41fb60:	b	41fa9c <wcrtomb@plt+0x1ae7c>
  41fb64:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41fb68:	ldr	x0, [x0, #944]
  41fb6c:	cbz	x0, 41fb74 <wcrtomb@plt+0x1af54>
  41fb70:	blr	x0
  41fb74:	mov	w2, #0x5                   	// #5
  41fb78:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  41fb7c:	add	x1, x1, #0x380
  41fb80:	mov	x0, #0x0                   	// #0
  41fb84:	bl	4049c0 <dcgettext@plt>
  41fb88:	mov	x2, x0
  41fb8c:	mov	w1, #0x0                   	// #0
  41fb90:	mov	w0, #0x0                   	// #0
  41fb94:	bl	404050 <error@plt>
  41fb98:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  41fb9c:	mov	w1, #0x2                   	// #2
  41fba0:	str	w1, [x0, #3392]
  41fba4:	mov	w23, #0x0                   	// #0
  41fba8:	ldp	x21, x22, [sp, #32]
  41fbac:	b	41fa9c <wcrtomb@plt+0x1ae7c>
  41fbb0:	ldr	x0, [x19, #24]
  41fbb4:	ldr	x1, [x0, #304]
  41fbb8:	add	x2, x1, x25
  41fbbc:	ldr	x1, [x1, x25]
  41fbc0:	ldr	x2, [x2, #8]
  41fbc4:	add	x1, x1, x2
  41fbc8:	mov	x2, x22
  41fbcc:	sub	x1, x1, x21
  41fbd0:	ldr	x0, [x0]
  41fbd4:	bl	41b844 <wcrtomb@plt+0x16c24>
  41fbd8:	b	41fba4 <wcrtomb@plt+0x1af84>
  41fbdc:	mov	w2, #0x5                   	// #5
  41fbe0:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  41fbe4:	add	x1, x1, #0x4a8
  41fbe8:	bl	4049c0 <dcgettext@plt>
  41fbec:	mov	x1, x0
  41fbf0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41fbf4:	add	x0, x0, #0x20
  41fbf8:	bl	409674 <wcrtomb@plt+0x4a54>
  41fbfc:	b	41fba4 <wcrtomb@plt+0x1af84>
  41fc00:	ldr	x19, [x19, #24]
  41fc04:	mov	w2, #0x5                   	// #5
  41fc08:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  41fc0c:	add	x1, x1, #0x3e8
  41fc10:	mov	x0, #0x0                   	// #0
  41fc14:	bl	4049c0 <dcgettext@plt>
  41fc18:	mov	x1, x0
  41fc1c:	mov	x0, x19
  41fc20:	bl	409674 <wcrtomb@plt+0x4a54>
  41fc24:	b	41fba4 <wcrtomb@plt+0x1af84>
  41fc28:	ldp	x21, x22, [sp, #32]
  41fc2c:	b	41fa9c <wcrtomb@plt+0x1ae7c>
  41fc30:	stp	x29, x30, [sp, #-112]!
  41fc34:	mov	x29, sp
  41fc38:	stp	x19, x20, [sp, #16]
  41fc3c:	stp	x21, x22, [sp, #32]
  41fc40:	mov	x21, x0
  41fc44:	ldr	x0, [x0, #24]
  41fc48:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  41fc4c:	ldr	w1, [x1, #544]
  41fc50:	str	w1, [x0, #276]
  41fc54:	ldr	x0, [x21, #24]
  41fc58:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  41fc5c:	ldr	w1, [x1, #24]
  41fc60:	str	w1, [x0, #280]
  41fc64:	ldr	x0, [x21, #24]
  41fc68:	ldr	w0, [x0, #276]
  41fc6c:	cbnz	w0, 41febc <wcrtomb@plt+0x1b29c>
  41fc70:	bl	405818 <wcrtomb@plt+0xbf8>
  41fc74:	mov	x20, x0
  41fc78:	ldr	x1, [x21, #24]
  41fc7c:	ldr	x22, [x1, #304]
  41fc80:	mov	x2, #0x0                   	// #0
  41fc84:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x12e64>
  41fc88:	add	x0, x0, #0x1b8
  41fc8c:	bl	413cf0 <wcrtomb@plt+0xf0d0>
  41fc90:	mov	x2, #0x0                   	// #0
  41fc94:	ldr	x1, [x21, #24]
  41fc98:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x12e64>
  41fc9c:	add	x0, x0, #0x1a0
  41fca0:	bl	413cf0 <wcrtomb@plt+0xf0d0>
  41fca4:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x12e64>
  41fca8:	add	x0, x0, #0x1e0
  41fcac:	bl	41304c <wcrtomb@plt+0xe42c>
  41fcb0:	and	w0, w0, #0xff
  41fcb4:	cbnz	w0, 41fcc4 <wcrtomb@plt+0x1b0a4>
  41fcb8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  41fcbc:	ldr	w0, [x0, #24]
  41fcc0:	cbnz	w0, 41fd50 <wcrtomb@plt+0x1b130>
  41fcc4:	str	xzr, [sp, #80]
  41fcc8:	ldr	x1, [x21, #24]
  41fccc:	ldr	x0, [x1, #288]
  41fcd0:	cbz	x0, 41fd1c <wcrtomb@plt+0x1b0fc>
  41fcd4:	adrp	x22, 453000 <_obstack_memory_used@@Base+0x11e64>
  41fcd8:	add	x22, x22, #0xf10
  41fcdc:	adrp	x19, 454000 <_obstack_memory_used@@Base+0x12e64>
  41fce0:	add	x19, x19, #0x1c8
  41fce4:	add	x2, sp, #0x50
  41fce8:	mov	x0, x22
  41fcec:	bl	413cf0 <wcrtomb@plt+0xf0d0>
  41fcf0:	add	x2, sp, #0x50
  41fcf4:	ldr	x1, [x21, #24]
  41fcf8:	mov	x0, x19
  41fcfc:	bl	413cf0 <wcrtomb@plt+0xf0d0>
  41fd00:	ldr	x2, [sp, #80]
  41fd04:	add	x2, x2, #0x1
  41fd08:	str	x2, [sp, #80]
  41fd0c:	ldr	x1, [x21, #24]
  41fd10:	ldr	x0, [x1, #288]
  41fd14:	cmp	x2, x0
  41fd18:	b.cc	41fce4 <wcrtomb@plt+0x1b0c4>  // b.lo, b.ul, b.last
  41fd1c:	ldr	x19, [x21, #24]
  41fd20:	ldr	x22, [x19, #136]
  41fd24:	ldr	x0, [x19, #264]
  41fd28:	str	x0, [x19, #136]
  41fd2c:	mov	x0, x19
  41fd30:	bl	40b6a4 <wcrtomb@plt+0x6a84>
  41fd34:	str	x22, [x19, #136]
  41fd38:	mov	x2, x20
  41fd3c:	mov	x1, x0
  41fd40:	ldr	x0, [x21, #24]
  41fd44:	bl	40b4b0 <wcrtomb@plt+0x6890>
  41fd48:	mov	w19, #0x1                   	// #1
  41fd4c:	b	42021c <wcrtomb@plt+0x1b5fc>
  41fd50:	stp	x23, x24, [sp, #48]
  41fd54:	mov	x2, #0x0                   	// #0
  41fd58:	ldr	x1, [x21, #24]
  41fd5c:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x12e64>
  41fd60:	add	x0, x0, #0x148
  41fd64:	bl	413cf0 <wcrtomb@plt+0xf0d0>
  41fd68:	ldr	x19, [x21, #24]
  41fd6c:	ldr	x24, [x19, #8]
  41fd70:	mov	x2, #0x0                   	// #0
  41fd74:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  41fd78:	add	x1, x1, #0x88
  41fd7c:	mov	x0, x19
  41fd80:	bl	4134dc <wcrtomb@plt+0xe8bc>
  41fd84:	str	x0, [x19, #8]
  41fd88:	ldr	x0, [x21, #24]
  41fd8c:	add	x0, x0, #0x158
  41fd90:	bl	4140fc <wcrtomb@plt+0xf4dc>
  41fd94:	str	xzr, [sp, #80]
  41fd98:	ldr	x0, [x21, #24]
  41fd9c:	ldr	x1, [x0, #288]
  41fda0:	cbz	x1, 41fe3c <wcrtomb@plt+0x1b21c>
  41fda4:	adrp	x23, 453000 <_obstack_memory_used@@Base+0x11e64>
  41fda8:	add	x23, x23, #0x2f0
  41fdac:	ldr	x19, [x21, #24]
  41fdb0:	add	x19, x19, #0x158
  41fdb4:	ldr	x0, [sp, #80]
  41fdb8:	lsl	x0, x0, #4
  41fdbc:	add	x1, sp, #0x58
  41fdc0:	ldr	x0, [x22, x0]
  41fdc4:	bl	438ce8 <argp_parse@@Base+0x55a8>
  41fdc8:	mov	x1, x0
  41fdcc:	mov	x0, x19
  41fdd0:	bl	414104 <wcrtomb@plt+0xf4e4>
  41fdd4:	ldr	x0, [x21, #24]
  41fdd8:	mov	x1, x23
  41fddc:	add	x0, x0, #0x158
  41fde0:	bl	414104 <wcrtomb@plt+0xf4e4>
  41fde4:	ldr	x19, [x21, #24]
  41fde8:	add	x19, x19, #0x158
  41fdec:	ldr	x2, [sp, #80]
  41fdf0:	add	x2, x22, x2, lsl #4
  41fdf4:	add	x1, sp, #0x58
  41fdf8:	ldr	x0, [x2, #8]
  41fdfc:	bl	438ce8 <argp_parse@@Base+0x55a8>
  41fe00:	mov	x1, x0
  41fe04:	mov	x0, x19
  41fe08:	bl	414104 <wcrtomb@plt+0xf4e4>
  41fe0c:	ldr	x1, [sp, #80]
  41fe10:	add	x1, x1, #0x1
  41fe14:	str	x1, [sp, #80]
  41fe18:	ldr	x0, [x21, #24]
  41fe1c:	ldr	x2, [x0, #288]
  41fe20:	cmp	x1, x2
  41fe24:	b.cs	41fe3c <wcrtomb@plt+0x1b21c>  // b.hs, b.nlast
  41fe28:	cbz	x1, 41fdac <wcrtomb@plt+0x1b18c>
  41fe2c:	mov	x1, x23
  41fe30:	add	x0, x0, #0x158
  41fe34:	bl	414104 <wcrtomb@plt+0xf4e4>
  41fe38:	b	41fdac <wcrtomb@plt+0x1b18c>
  41fe3c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  41fe40:	add	x1, x1, #0x1e0
  41fe44:	add	x0, x0, #0x158
  41fe48:	bl	414164 <wcrtomb@plt+0xf544>
  41fe4c:	ands	w19, w0, #0xff
  41fe50:	b.eq	41fea0 <wcrtomb@plt+0x1b280>  // b.none
  41fe54:	ldr	x22, [x21, #24]
  41fe58:	ldr	x23, [x22, #136]
  41fe5c:	ldr	x0, [x22, #264]
  41fe60:	str	x0, [x22, #136]
  41fe64:	mov	x0, x22
  41fe68:	bl	40b6a4 <wcrtomb@plt+0x6a84>
  41fe6c:	str	x23, [x22, #136]
  41fe70:	mov	x2, x20
  41fe74:	mov	x1, x0
  41fe78:	ldr	x0, [x21, #24]
  41fe7c:	bl	40b4b0 <wcrtomb@plt+0x6890>
  41fe80:	cbz	x24, 420230 <wcrtomb@plt+0x1b610>
  41fe84:	ldr	x0, [x21, #24]
  41fe88:	ldr	x0, [x0, #8]
  41fe8c:	bl	4047c0 <free@plt>
  41fe90:	ldr	x0, [x21, #24]
  41fe94:	str	x24, [x0, #8]
  41fe98:	ldp	x23, x24, [sp, #48]
  41fe9c:	b	42021c <wcrtomb@plt+0x1b5fc>
  41fea0:	ldr	x0, [x21, #24]
  41fea4:	ldr	x0, [x0, #8]
  41fea8:	bl	4047c0 <free@plt>
  41feac:	ldr	x0, [x21, #24]
  41feb0:	str	x24, [x0, #8]
  41feb4:	ldp	x23, x24, [sp, #48]
  41feb8:	b	42021c <wcrtomb@plt+0x1b5fc>
  41febc:	stp	x23, x24, [sp, #48]
  41fec0:	stp	x25, x26, [sp, #64]
  41fec4:	bl	405818 <wcrtomb@plt+0xbf8>
  41fec8:	mov	x24, x0
  41fecc:	ldr	x0, [x21, #24]
  41fed0:	ldr	x23, [x0, #304]
  41fed4:	ldr	x25, [x0, #8]
  41fed8:	add	x1, sp, #0x58
  41fedc:	ldr	x0, [x0, #288]
  41fee0:	bl	438ce8 <argp_parse@@Base+0x55a8>
  41fee4:	bl	403ff0 <strlen@plt>
  41fee8:	add	x19, x0, #0x1
  41feec:	ldr	x0, [x21, #24]
  41fef0:	ldr	x1, [x0, #288]
  41fef4:	cbz	x1, 41ff48 <wcrtomb@plt+0x1b328>
  41fef8:	mov	x22, x23
  41fefc:	mov	x26, #0x0                   	// #0
  41ff00:	add	x1, sp, #0x58
  41ff04:	ldr	x0, [x22]
  41ff08:	bl	438ce8 <argp_parse@@Base+0x55a8>
  41ff0c:	bl	403ff0 <strlen@plt>
  41ff10:	mov	x20, x0
  41ff14:	add	x1, sp, #0x58
  41ff18:	ldr	x0, [x22, #8]
  41ff1c:	bl	438ce8 <argp_parse@@Base+0x55a8>
  41ff20:	bl	403ff0 <strlen@plt>
  41ff24:	add	x19, x19, #0x2
  41ff28:	add	x20, x20, x0
  41ff2c:	add	x19, x19, x20
  41ff30:	add	x26, x26, #0x1
  41ff34:	ldr	x0, [x21, #24]
  41ff38:	add	x22, x22, #0x10
  41ff3c:	ldr	x1, [x0, #288]
  41ff40:	cmp	x26, x1
  41ff44:	b.cc	41ff00 <wcrtomb@plt+0x1b2e0>  // b.lo, b.ul, b.last
  41ff48:	add	x1, x19, #0x3fe
  41ff4c:	adds	x19, x19, #0x1ff
  41ff50:	csel	x19, x1, x19, mi  // mi = first
  41ff54:	and	x19, x19, #0xfffffffffffffe00
  41ff58:	ldr	x1, [x0, #264]
  41ff5c:	add	x1, x1, x19
  41ff60:	str	x1, [x0, #264]
  41ff64:	ldr	x0, [x21, #16]
  41ff68:	add	x19, x0, x19
  41ff6c:	str	x19, [x21, #16]
  41ff70:	mov	x2, #0x0                   	// #0
  41ff74:	ldr	x1, [x21, #24]
  41ff78:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x12e64>
  41ff7c:	add	x0, x0, #0x158
  41ff80:	bl	413cf0 <wcrtomb@plt+0xf0d0>
  41ff84:	mov	x2, #0x0                   	// #0
  41ff88:	ldr	x1, [x21, #24]
  41ff8c:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x12e64>
  41ff90:	add	x0, x0, #0x170
  41ff94:	bl	413cf0 <wcrtomb@plt+0xf0d0>
  41ff98:	mov	x2, #0x0                   	// #0
  41ff9c:	ldr	x1, [x21, #24]
  41ffa0:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x12e64>
  41ffa4:	add	x0, x0, #0x148
  41ffa8:	bl	413cf0 <wcrtomb@plt+0xf0d0>
  41ffac:	mov	x2, #0x0                   	// #0
  41ffb0:	ldr	x1, [x21, #24]
  41ffb4:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x12e64>
  41ffb8:	add	x0, x0, #0x188
  41ffbc:	bl	413cf0 <wcrtomb@plt+0xf0d0>
  41ffc0:	ldr	x19, [x21, #24]
  41ffc4:	mov	x2, #0x0                   	// #0
  41ffc8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  41ffcc:	add	x1, x1, #0x88
  41ffd0:	mov	x0, x19
  41ffd4:	bl	4134dc <wcrtomb@plt+0xe8bc>
  41ffd8:	str	x0, [x19, #8]
  41ffdc:	ldr	x0, [x21, #24]
  41ffe0:	ldr	x19, [x0, #8]
  41ffe4:	mov	x0, x19
  41ffe8:	bl	403ff0 <strlen@plt>
  41ffec:	cmp	x0, #0x64
  41fff0:	b.ls	41fff8 <wcrtomb@plt+0x1b3d8>  // b.plast
  41fff4:	strb	wzr, [x19, #100]
  41fff8:	ldr	x19, [x21, #24]
  41fffc:	ldr	x20, [x19, #136]
  420000:	ldr	x0, [x19, #264]
  420004:	str	x0, [x19, #136]
  420008:	mov	x0, x19
  42000c:	bl	40b6a4 <wcrtomb@plt+0x6a84>
  420010:	str	x20, [x19, #136]
  420014:	mov	x2, x24
  420018:	mov	x1, x0
  42001c:	ldr	x0, [x21, #24]
  420020:	bl	40b4b0 <wcrtomb@plt+0x6890>
  420024:	ldr	x0, [x21, #24]
  420028:	ldr	x0, [x0, #8]
  42002c:	bl	4047c0 <free@plt>
  420030:	ldr	x0, [x21, #24]
  420034:	str	x25, [x0, #8]
  420038:	bl	406d94 <wcrtomb@plt+0x2174>
  42003c:	mov	x19, x0
  420040:	mov	x20, x0
  420044:	ldr	x0, [x21, #24]
  420048:	add	x1, sp, #0x58
  42004c:	ldr	x0, [x0, #288]
  420050:	bl	438ce8 <argp_parse@@Base+0x55a8>
  420054:	mov	x22, x0
  420058:	add	x1, x19, #0x200
  42005c:	ldrb	w0, [x0]
  420060:	cbnz	w0, 4200cc <wcrtomb@plt+0x1b4ac>
  420064:	add	x0, x19, #0x200
  420068:	cmp	x20, x0
  42006c:	b.ne	420084 <wcrtomb@plt+0x1b464>  // b.any
  420070:	mov	x0, x19
  420074:	bl	405884 <wcrtomb@plt+0xc64>
  420078:	bl	406d94 <wcrtomb@plt+0x2174>
  42007c:	mov	x19, x0
  420080:	mov	x20, x0
  420084:	mov	w0, #0xa                   	// #10
  420088:	strb	w0, [x20], #1
  42008c:	ldr	x0, [x21, #24]
  420090:	ldr	x0, [x0, #288]
  420094:	cbz	x0, 4201f4 <wcrtomb@plt+0x1b5d4>
  420098:	mov	x24, #0x0                   	// #0
  42009c:	mov	w25, #0xa                   	// #10
  4200a0:	b	420194 <wcrtomb@plt+0x1b574>
  4200a4:	mov	x0, x19
  4200a8:	bl	405884 <wcrtomb@plt+0xc64>
  4200ac:	bl	406d94 <wcrtomb@plt+0x2174>
  4200b0:	mov	x19, x0
  4200b4:	add	x1, x0, #0x200
  4200b8:	mov	x20, x0
  4200bc:	ldrb	w0, [x22], #1
  4200c0:	strb	w0, [x20], #1
  4200c4:	ldrb	w0, [x22]
  4200c8:	cbz	w0, 420064 <wcrtomb@plt+0x1b444>
  4200cc:	mov	x0, x20
  4200d0:	cmp	x20, x1
  4200d4:	b.ne	4200b8 <wcrtomb@plt+0x1b498>  // b.any
  4200d8:	b	4200a4 <wcrtomb@plt+0x1b484>
  4200dc:	mov	x20, x2
  4200e0:	ldrb	w0, [x26], #1
  4200e4:	strb	w0, [x20], #1
  4200e8:	ldrb	w0, [x26]
  4200ec:	cbz	w0, 420118 <wcrtomb@plt+0x1b4f8>
  4200f0:	mov	x2, x20
  4200f4:	cmp	x20, x1
  4200f8:	b.ne	4200dc <wcrtomb@plt+0x1b4bc>  // b.any
  4200fc:	mov	x0, x19
  420100:	bl	405884 <wcrtomb@plt+0xc64>
  420104:	bl	406d94 <wcrtomb@plt+0x2174>
  420108:	mov	x19, x0
  42010c:	mov	x2, x0
  420110:	add	x1, x0, #0x200
  420114:	b	4200dc <wcrtomb@plt+0x1b4bc>
  420118:	add	x0, x19, #0x200
  42011c:	cmp	x20, x0
  420120:	b.ne	420138 <wcrtomb@plt+0x1b518>  // b.any
  420124:	mov	x0, x19
  420128:	bl	405884 <wcrtomb@plt+0xc64>
  42012c:	bl	406d94 <wcrtomb@plt+0x2174>
  420130:	mov	x19, x0
  420134:	mov	x20, x0
  420138:	strb	w25, [x20], #1
  42013c:	add	x1, sp, #0x58
  420140:	ldr	x0, [x22, #8]
  420144:	bl	438ce8 <argp_parse@@Base+0x55a8>
  420148:	mov	x22, x0
  42014c:	add	x0, x19, #0x200
  420150:	ldrb	w1, [x22]
  420154:	cbnz	w1, 4201e4 <wcrtomb@plt+0x1b5c4>
  420158:	add	x0, x19, #0x200
  42015c:	cmp	x20, x0
  420160:	b.ne	420178 <wcrtomb@plt+0x1b558>  // b.any
  420164:	mov	x0, x19
  420168:	bl	405884 <wcrtomb@plt+0xc64>
  42016c:	bl	406d94 <wcrtomb@plt+0x2174>
  420170:	mov	x19, x0
  420174:	mov	x20, x0
  420178:	strb	w25, [x20], #1
  42017c:	add	x24, x24, #0x1
  420180:	add	x23, x23, #0x10
  420184:	ldr	x0, [x21, #24]
  420188:	ldr	x0, [x0, #288]
  42018c:	cmp	x24, x0
  420190:	b.cs	4201f4 <wcrtomb@plt+0x1b5d4>  // b.hs, b.nlast
  420194:	mov	x22, x23
  420198:	add	x1, sp, #0x58
  42019c:	ldr	x0, [x23]
  4201a0:	bl	438ce8 <argp_parse@@Base+0x55a8>
  4201a4:	mov	x26, x0
  4201a8:	add	x1, x19, #0x200
  4201ac:	ldrb	w0, [x0]
  4201b0:	cbnz	w0, 4200f0 <wcrtomb@plt+0x1b4d0>
  4201b4:	b	420118 <wcrtomb@plt+0x1b4f8>
  4201b8:	mov	x0, x19
  4201bc:	bl	405884 <wcrtomb@plt+0xc64>
  4201c0:	bl	406d94 <wcrtomb@plt+0x2174>
  4201c4:	mov	x19, x0
  4201c8:	mov	x1, x0
  4201cc:	add	x0, x0, #0x200
  4201d0:	mov	x20, x1
  4201d4:	ldrb	w1, [x22], #1
  4201d8:	strb	w1, [x20], #1
  4201dc:	ldrb	w1, [x22]
  4201e0:	cbz	w1, 420158 <wcrtomb@plt+0x1b538>
  4201e4:	mov	x1, x20
  4201e8:	cmp	x20, x0
  4201ec:	b.ne	4201d0 <wcrtomb@plt+0x1b5b0>  // b.any
  4201f0:	b	4201b8 <wcrtomb@plt+0x1b598>
  4201f4:	sub	x2, x19, x20
  4201f8:	add	x2, x2, #0x200
  4201fc:	mov	w1, #0x0                   	// #0
  420200:	mov	x0, x20
  420204:	bl	404420 <memset@plt>
  420208:	mov	x0, x19
  42020c:	bl	405884 <wcrtomb@plt+0xc64>
  420210:	mov	w19, #0x1                   	// #1
  420214:	ldp	x23, x24, [sp, #48]
  420218:	ldp	x25, x26, [sp, #64]
  42021c:	mov	w0, w19
  420220:	ldp	x19, x20, [sp, #16]
  420224:	ldp	x21, x22, [sp, #32]
  420228:	ldp	x29, x30, [sp], #112
  42022c:	ret
  420230:	ldp	x23, x24, [sp, #48]
  420234:	b	42021c <wcrtomb@plt+0x1b5fc>
  420238:	sub	sp, sp, #0x260
  42023c:	stp	x29, x30, [sp]
  420240:	mov	x29, sp
  420244:	stp	x19, x20, [sp, #16]
  420248:	stp	x21, x22, [sp, #32]
  42024c:	stp	x23, x24, [sp, #48]
  420250:	mov	x22, x0
  420254:	mov	x20, x1
  420258:	mov	x21, x2
  42025c:	bl	41e810 <wcrtomb@plt+0x19bf0>
  420260:	ands	w24, w0, #0xff
  420264:	b.eq	420290 <wcrtomb@plt+0x1b670>  // b.none
  420268:	mov	x23, #0x200                 	// #512
  42026c:	cmp	x20, x21
  420270:	b.lt	420318 <wcrtomb@plt+0x1b6f8>  // b.tstop
  420274:	b	420290 <wcrtomb@plt+0x1b670>
  420278:	ldr	x0, [x22, #24]
  42027c:	mov	x2, x19
  420280:	mov	x1, x20
  420284:	ldr	x0, [x0]
  420288:	bl	41b844 <wcrtomb@plt+0x16c24>
  42028c:	mov	w24, #0x0                   	// #0
  420290:	mov	w0, w24
  420294:	ldp	x19, x20, [sp, #16]
  420298:	ldp	x21, x22, [sp, #32]
  42029c:	ldp	x23, x24, [sp, #48]
  4202a0:	ldp	x29, x30, [sp]
  4202a4:	add	sp, sp, #0x260
  4202a8:	ret
  4202ac:	ldr	x19, [x22, #24]
  4202b0:	mov	w2, #0x5                   	// #5
  4202b4:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  4202b8:	add	x1, x1, #0x4a8
  4202bc:	bl	4049c0 <dcgettext@plt>
  4202c0:	mov	x1, x0
  4202c4:	mov	x0, x19
  4202c8:	bl	409674 <wcrtomb@plt+0x4a54>
  4202cc:	b	42028c <wcrtomb@plt+0x1b66c>
  4202d0:	ldr	x21, [x22, #24]
  4202d4:	mov	w2, #0x5                   	// #5
  4202d8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  4202dc:	add	x1, x1, #0xa0
  4202e0:	mov	x0, #0x0                   	// #0
  4202e4:	bl	4049c0 <dcgettext@plt>
  4202e8:	mov	x19, x0
  4202ec:	add	x1, sp, #0x48
  4202f0:	mov	x0, x20
  4202f4:	bl	438c68 <argp_parse@@Base+0x5528>
  4202f8:	mov	x2, x0
  4202fc:	mov	x1, x19
  420300:	mov	x0, x21
  420304:	bl	409674 <wcrtomb@plt+0x4a54>
  420308:	b	42028c <wcrtomb@plt+0x1b66c>
  42030c:	add	x20, x20, x0
  420310:	cmp	x21, x20
  420314:	b.le	420290 <wcrtomb@plt+0x1b670>
  420318:	sub	x19, x21, x20
  42031c:	cmp	x19, #0x200
  420320:	csel	x19, x19, x23, le
  420324:	mov	x2, x19
  420328:	add	x1, sp, #0x60
  42032c:	ldr	w0, [x22]
  420330:	bl	43f41c <argp_parse@@Base+0xbcdc>
  420334:	cmn	x0, #0x1
  420338:	b.eq	420278 <wcrtomb@plt+0x1b658>  // b.none
  42033c:	cbz	x0, 4202ac <wcrtomb@plt+0x1b68c>
  420340:	add	x1, sp, #0x60
  420344:	add	x3, x1, x0
  420348:	ldrb	w2, [x1], #1
  42034c:	cbnz	w2, 4202d0 <wcrtomb@plt+0x1b6b0>
  420350:	cmp	x1, x3
  420354:	b.ne	420348 <wcrtomb@plt+0x1b728>  // b.any
  420358:	b	42030c <wcrtomb@plt+0x1b6ec>
  42035c:	stp	x29, x30, [sp, #-144]!
  420360:	mov	x29, sp
  420364:	stp	x19, x20, [sp, #16]
  420368:	stp	x21, x22, [sp, #32]
  42036c:	stp	x23, x24, [sp, #48]
  420370:	mov	w22, w0
  420374:	mov	x20, x1
  420378:	add	x0, sp, #0x60
  42037c:	bl	41e778 <wcrtomb@plt+0x19b58>
  420380:	ands	w23, w0, #0xff
  420384:	b.eq	420594 <wcrtomb@plt+0x1b974>  // b.none
  420388:	str	x20, [sp, #120]
  42038c:	str	w22, [sp, #96]
  420390:	mov	w0, #0x1                   	// #1
  420394:	strb	w0, [sp, #100]
  420398:	str	xzr, [sp, #88]
  42039c:	ldr	x0, [x20, #152]
  4203a0:	cbz	x0, 4203fc <wcrtomb@plt+0x1b7dc>
  4203a4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4203a8:	ldr	w0, [x0, #852]
  4203ac:	cmp	w0, #0x1
  4203b0:	b.eq	42044c <wcrtomb@plt+0x1b82c>  // b.none
  4203b4:	tst	w0, #0xfffffffd
  4203b8:	b.eq	420418 <wcrtomb@plt+0x1b7f8>  // b.none
  4203bc:	mov	w23, #0x0                   	// #0
  4203c0:	ldr	x0, [sp, #120]
  4203c4:	ldr	x1, [x0, #264]
  4203c8:	ldr	x0, [sp, #112]
  4203cc:	sub	x0, x1, x0
  4203d0:	bl	40c120 <wcrtomb@plt+0x7500>
  4203d4:	add	x0, sp, #0x60
  4203d8:	bl	41e6a0 <wcrtomb@plt+0x19a80>
  4203dc:	ands	w0, w0, #0xff
  4203e0:	ccmp	w23, #0x0, #0x4, ne  // ne = any
  4203e4:	cset	w0, eq  // eq = none
  4203e8:	ldp	x19, x20, [sp, #16]
  4203ec:	ldp	x21, x22, [sp, #32]
  4203f0:	ldp	x23, x24, [sp, #48]
  4203f4:	ldp	x29, x30, [sp], #144
  4203f8:	ret
  4203fc:	str	xzr, [x20, #264]
  420400:	ldr	x0, [x20, #136]
  420404:	str	x0, [sp, #80]
  420408:	add	x1, sp, #0x50
  42040c:	mov	x0, x20
  420410:	bl	41eb34 <wcrtomb@plt+0x19f14>
  420414:	b	42045c <wcrtomb@plt+0x1b83c>
  420418:	stp	x25, x26, [sp, #64]
  42041c:	str	xzr, [sp, #80]
  420420:	str	xzr, [sp, #88]
  420424:	str	xzr, [x20, #264]
  420428:	mov	x24, #0x0                   	// #0
  42042c:	mov	w26, #0x3                   	// #3
  420430:	mov	w25, #0x4                   	// #4
  420434:	b	4204ec <wcrtomb@plt+0x1b8cc>
  420438:	bl	404ad0 <__errno_location@plt>
  42043c:	ldr	w0, [x0]
  420440:	cmp	w0, #0x6
  420444:	b.eq	4204a0 <wcrtomb@plt+0x1b880>  // b.none
  420448:	ldp	x25, x26, [sp, #64]
  42044c:	add	x0, sp, #0x60
  420450:	bl	41f8f4 <wcrtomb@plt+0x1acd4>
  420454:	ands	w0, w0, #0xff
  420458:	b.eq	420584 <wcrtomb@plt+0x1b964>  // b.none
  42045c:	ldr	x0, [sp, #128]
  420460:	ldr	x1, [x0, #56]
  420464:	cbz	x1, 4203c0 <wcrtomb@plt+0x1b7a0>
  420468:	ldr	x1, [x0, #24]
  42046c:	cbz	x1, 420478 <wcrtomb@plt+0x1b858>
  420470:	add	x0, sp, #0x60
  420474:	blr	x1
  420478:	tbnz	w22, #31, 4203c0 <wcrtomb@plt+0x1b7a0>
  42047c:	ldr	x0, [sp, #120]
  420480:	ldr	x2, [x0, #264]
  420484:	ldr	x1, [sp, #112]
  420488:	sub	x2, x2, x1
  42048c:	ldr	x1, [x0, #136]
  420490:	ldr	x0, [x0, #8]
  420494:	bl	405324 <wcrtomb@plt+0x704>
  420498:	mov	x19, #0x0                   	// #0
  42049c:	b	420560 <wcrtomb@plt+0x1b940>
  4204a0:	str	xzr, [sp, #88]
  4204a4:	ldr	x0, [x20, #136]
  4204a8:	str	x0, [sp, #80]
  4204ac:	add	x1, sp, #0x50
  4204b0:	mov	x0, x20
  4204b4:	bl	41eb34 <wcrtomb@plt+0x19f14>
  4204b8:	ldp	x25, x26, [sp, #64]
  4204bc:	b	42045c <wcrtomb@plt+0x1b83c>
  4204c0:	str	x19, [sp, #80]
  4204c4:	sub	x19, x21, x19
  4204c8:	str	x19, [sp, #88]
  4204cc:	add	x1, sp, #0x50
  4204d0:	mov	x0, x20
  4204d4:	bl	41eb34 <wcrtomb@plt+0x19f14>
  4204d8:	ldr	x0, [x20, #264]
  4204dc:	ldr	x1, [sp, #88]
  4204e0:	add	x0, x0, x1
  4204e4:	str	x0, [x20, #264]
  4204e8:	mov	x24, x21
  4204ec:	mov	w2, w26
  4204f0:	mov	x1, x24
  4204f4:	mov	w0, w22
  4204f8:	bl	4041d0 <lseek@plt>
  4204fc:	mov	x19, x0
  420500:	cmn	x0, #0x1
  420504:	b.eq	420438 <wcrtomb@plt+0x1b818>  // b.none
  420508:	mov	w2, w25
  42050c:	mov	x1, x0
  420510:	mov	w0, w22
  420514:	bl	4041d0 <lseek@plt>
  420518:	mov	x21, x0
  42051c:	orr	x24, x24, x19
  420520:	cbnz	x24, 4204c0 <wcrtomb@plt+0x1b8a0>
  420524:	ldr	x0, [x20, #136]
  420528:	cmp	x21, x0
  42052c:	b.ne	4204c0 <wcrtomb@plt+0x1b8a0>  // b.any
  420530:	mov	w2, #0x0                   	// #0
  420534:	mov	x1, #0x0                   	// #0
  420538:	mov	w0, w22
  42053c:	bl	4041d0 <lseek@plt>
  420540:	ldp	x25, x26, [sp, #64]
  420544:	b	42044c <wcrtomb@plt+0x1b82c>
  420548:	mov	x1, x19
  42054c:	add	x0, sp, #0x60
  420550:	blr	x2
  420554:	add	x19, x19, #0x1
  420558:	ands	w0, w0, #0xff
  42055c:	b.eq	42058c <wcrtomb@plt+0x1b96c>  // b.none
  420560:	ldr	x0, [sp, #120]
  420564:	ldr	x0, [x0, #288]
  420568:	cmp	x0, x19
  42056c:	b.ls	4203c0 <wcrtomb@plt+0x1b7a0>  // b.plast
  420570:	ldr	x0, [sp, #128]
  420574:	ldr	x2, [x0, #56]
  420578:	cbnz	x2, 420548 <wcrtomb@plt+0x1b928>
  42057c:	mov	w23, #0x0                   	// #0
  420580:	b	4203c0 <wcrtomb@plt+0x1b7a0>
  420584:	mov	w23, w0
  420588:	b	4203c0 <wcrtomb@plt+0x1b7a0>
  42058c:	mov	w23, w0
  420590:	b	4203c0 <wcrtomb@plt+0x1b7a0>
  420594:	mov	w0, #0x3                   	// #3
  420598:	b	4203e8 <wcrtomb@plt+0x1b7c8>
  42059c:	stp	x29, x30, [sp, #-80]!
  4205a0:	mov	x29, sp
  4205a4:	str	x19, [sp, #16]
  4205a8:	mov	x19, x0
  4205ac:	add	x0, sp, #0x20
  4205b0:	bl	41e778 <wcrtomb@plt+0x19b58>
  4205b4:	ands	w0, w0, #0xff
  4205b8:	b.ne	4205c8 <wcrtomb@plt+0x1b9a8>  // b.any
  4205bc:	ldr	x19, [sp, #16]
  4205c0:	ldp	x29, x30, [sp], #80
  4205c4:	ret
  4205c8:	str	x19, [sp, #56]
  4205cc:	ldr	x0, [sp, #64]
  4205d0:	ldr	x1, [x0, #16]
  4205d4:	mov	w0, #0x0                   	// #0
  4205d8:	cbz	x1, 4205bc <wcrtomb@plt+0x1b99c>
  4205dc:	add	x0, sp, #0x20
  4205e0:	blr	x1
  4205e4:	and	w0, w0, #0xff
  4205e8:	b	4205bc <wcrtomb@plt+0x1b99c>
  4205ec:	stp	x29, x30, [sp, #-80]!
  4205f0:	mov	x29, sp
  4205f4:	str	x19, [sp, #16]
  4205f8:	mov	x19, x0
  4205fc:	add	x0, sp, #0x20
  420600:	bl	41e778 <wcrtomb@plt+0x19b58>
  420604:	ands	w0, w0, #0xff
  420608:	b.ne	420618 <wcrtomb@plt+0x1b9f8>  // b.any
  42060c:	ldr	x19, [sp, #16]
  420610:	ldp	x29, x30, [sp], #80
  420614:	ret
  420618:	str	x19, [sp, #56]
  42061c:	ldr	x1, [sp, #64]
  420620:	ldr	x1, [x1, #32]
  420624:	cbz	x1, 42060c <wcrtomb@plt+0x1b9ec>
  420628:	add	x0, sp, #0x20
  42062c:	blr	x1
  420630:	and	w0, w0, #0xff
  420634:	b	42060c <wcrtomb@plt+0x1b9ec>
  420638:	stp	x29, x30, [sp, #-96]!
  42063c:	mov	x29, sp
  420640:	stp	x19, x20, [sp, #16]
  420644:	str	x21, [sp, #32]
  420648:	mov	w19, w0
  42064c:	mov	x20, x1
  420650:	mov	x21, x2
  420654:	add	x0, sp, #0x30
  420658:	bl	41e778 <wcrtomb@plt+0x19b58>
  42065c:	and	w0, w0, #0xff
  420660:	cbz	w0, 42071c <wcrtomb@plt+0x1bafc>
  420664:	str	x20, [sp, #72]
  420668:	str	w19, [sp, #48]
  42066c:	mov	w2, #0x0                   	// #0
  420670:	mov	x1, #0x0                   	// #0
  420674:	mov	w0, w19
  420678:	bl	4041d0 <lseek@plt>
  42067c:	cmp	x0, #0x0
  420680:	cset	w0, eq  // eq = none
  420684:	strb	w0, [sp, #52]
  420688:	str	xzr, [sp, #56]
  42068c:	add	x0, sp, #0x30
  420690:	bl	41e6f8 <wcrtomb@plt+0x19ad8>
  420694:	mov	x19, #0x0                   	// #0
  420698:	ands	w20, w0, #0xff
  42069c:	b.ne	4206bc <wcrtomb@plt+0x1ba9c>  // b.any
  4206a0:	b	4206dc <wcrtomb@plt+0x1babc>
  4206a4:	mov	x1, x19
  4206a8:	add	x0, sp, #0x30
  4206ac:	blr	x3
  4206b0:	add	x19, x19, #0x1
  4206b4:	ands	w0, w0, #0xff
  4206b8:	b.eq	420714 <wcrtomb@plt+0x1baf4>  // b.none
  4206bc:	ldr	x1, [sp, #72]
  4206c0:	ldr	x1, [x1, #288]
  4206c4:	cmp	x1, x19
  4206c8:	b.ls	4206dc <wcrtomb@plt+0x1babc>  // b.plast
  4206cc:	ldr	x1, [sp, #80]
  4206d0:	ldr	x3, [x1, #64]
  4206d4:	cbnz	x3, 4206a4 <wcrtomb@plt+0x1ba84>
  4206d8:	mov	w20, #0x0                   	// #0
  4206dc:	ldr	x0, [sp, #72]
  4206e0:	ldr	x0, [x0, #264]
  4206e4:	ldr	x1, [sp, #64]
  4206e8:	sub	x0, x0, x1
  4206ec:	str	x0, [x21]
  4206f0:	add	x0, sp, #0x30
  4206f4:	bl	41e6a0 <wcrtomb@plt+0x19a80>
  4206f8:	ands	w0, w0, #0xff
  4206fc:	ccmp	w20, #0x0, #0x4, ne  // ne = any
  420700:	cset	w0, eq  // eq = none
  420704:	ldp	x19, x20, [sp, #16]
  420708:	ldr	x21, [sp, #32]
  42070c:	ldp	x29, x30, [sp], #96
  420710:	ret
  420714:	mov	w20, w0
  420718:	b	4206dc <wcrtomb@plt+0x1babc>
  42071c:	mov	w0, #0x3                   	// #3
  420720:	b	420704 <wcrtomb@plt+0x1bae4>
  420724:	stp	x29, x30, [sp, #-80]!
  420728:	mov	x29, sp
  42072c:	str	x19, [sp, #16]
  420730:	mov	x19, x0
  420734:	add	x0, sp, #0x20
  420738:	bl	41e778 <wcrtomb@plt+0x19b58>
  42073c:	and	w1, w0, #0xff
  420740:	mov	w0, #0x3                   	// #3
  420744:	cbz	w1, 420788 <wcrtomb@plt+0x1bb68>
  420748:	str	x19, [sp, #56]
  42074c:	mov	w0, #0xffffffff            	// #-1
  420750:	str	w0, [sp, #32]
  420754:	add	x0, sp, #0x20
  420758:	bl	41e6f8 <wcrtomb@plt+0x19ad8>
  42075c:	and	w19, w0, #0xff
  420760:	ldr	x0, [sp, #56]
  420764:	ldr	x1, [x0, #264]
  420768:	ldr	x0, [sp, #48]
  42076c:	sub	x0, x1, x0
  420770:	bl	419768 <wcrtomb@plt+0x14b48>
  420774:	add	x0, sp, #0x20
  420778:	bl	41e6a0 <wcrtomb@plt+0x19a80>
  42077c:	ands	w0, w0, #0xff
  420780:	ccmp	w19, #0x0, #0x4, ne  // ne = any
  420784:	cset	w0, eq  // eq = none
  420788:	ldr	x19, [sp, #16]
  42078c:	ldp	x29, x30, [sp], #80
  420790:	ret
  420794:	stp	x29, x30, [sp, #-96]!
  420798:	mov	x29, sp
  42079c:	stp	x19, x20, [sp, #16]
  4207a0:	str	x21, [sp, #32]
  4207a4:	mov	w20, w0
  4207a8:	mov	x19, x1
  4207ac:	add	x0, sp, #0x30
  4207b0:	bl	41e778 <wcrtomb@plt+0x19b58>
  4207b4:	and	w2, w0, #0xff
  4207b8:	mov	w21, #0x1                   	// #1
  4207bc:	cbnz	w2, 4207d4 <wcrtomb@plt+0x1bbb4>
  4207c0:	mov	w0, w21
  4207c4:	ldp	x19, x20, [sp, #16]
  4207c8:	ldr	x21, [sp, #32]
  4207cc:	ldp	x29, x30, [sp], #96
  4207d0:	ret
  4207d4:	str	x19, [sp, #72]
  4207d8:	str	w20, [sp, #48]
  4207dc:	mov	w0, #0x1                   	// #1
  4207e0:	strb	w0, [sp, #52]
  4207e4:	add	x0, sp, #0x30
  4207e8:	bl	41e6f8 <wcrtomb@plt+0x19ad8>
  4207ec:	and	w21, w0, #0xff
  4207f0:	mov	x0, x19
  4207f4:	bl	4053e8 <wcrtomb@plt+0x7c8>
  4207f8:	mov	x1, #0x0                   	// #0
  4207fc:	mov	x19, #0x0                   	// #0
  420800:	cbnz	w21, 420838 <wcrtomb@plt+0x1bc18>
  420804:	b	420864 <wcrtomb@plt+0x1bc44>
  420808:	mov	x1, x19
  42080c:	add	x0, sp, #0x30
  420810:	bl	41fa64 <wcrtomb@plt+0x1ae44>
  420814:	and	w0, w0, #0xff
  420818:	ldr	x1, [sp, #72]
  42081c:	ldr	x1, [x1, #304]
  420820:	add	x2, x1, x20
  420824:	ldr	x1, [x1, x20]
  420828:	ldr	x2, [x2, #8]
  42082c:	add	x1, x1, x2
  420830:	add	x19, x19, #0x1
  420834:	cbz	w0, 420864 <wcrtomb@plt+0x1bc44>
  420838:	ldr	x2, [sp, #72]
  42083c:	ldr	x0, [x2, #288]
  420840:	cmp	x0, x19
  420844:	b.ls	42087c <wcrtomb@plt+0x1bc5c>  // b.plast
  420848:	lsl	x20, x19, #4
  42084c:	ldr	x0, [x2, #304]
  420850:	ldr	x2, [x0, x20]
  420854:	add	x0, sp, #0x30
  420858:	bl	420238 <wcrtomb@plt+0x1b618>
  42085c:	and	w0, w0, #0xff
  420860:	cbnz	w0, 420808 <wcrtomb@plt+0x1bbe8>
  420864:	ldr	x0, [sp, #72]
  420868:	ldr	x1, [x0, #264]
  42086c:	ldr	x0, [sp, #64]
  420870:	sub	x0, x1, x0
  420874:	bl	419768 <wcrtomb@plt+0x14b48>
  420878:	mov	w21, #0x0                   	// #0
  42087c:	bl	405408 <wcrtomb@plt+0x7e8>
  420880:	add	x0, sp, #0x30
  420884:	bl	41e6a0 <wcrtomb@plt+0x19a80>
  420888:	b	4207c0 <wcrtomb@plt+0x1bba0>
  42088c:	stp	x29, x30, [sp, #-64]!
  420890:	mov	x29, sp
  420894:	stp	x19, x20, [sp, #16]
  420898:	stp	x21, x22, [sp, #32]
  42089c:	mov	x21, x0
  4208a0:	mov	x20, x1
  4208a4:	mov	w1, #0x2e                  	// #46
  4208a8:	bl	4045e0 <strrchr@plt>
  4208ac:	cbz	x0, 420928 <wcrtomb@plt+0x1bd08>
  4208b0:	str	x23, [sp, #48]
  4208b4:	add	x22, x0, #0x1
  4208b8:	mov	x0, x22
  4208bc:	bl	403ff0 <strlen@plt>
  4208c0:	mov	x23, x0
  4208c4:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x3be64>
  4208c8:	ldr	x0, [x1, #4008]
  4208cc:	cbz	x0, 420938 <wcrtomb@plt+0x1bd18>
  4208d0:	add	x19, x1, #0xfa8
  4208d4:	b	4208e0 <wcrtomb@plt+0x1bcc0>
  4208d8:	ldr	x0, [x19, #24]!
  4208dc:	cbz	x0, 420924 <wcrtomb@plt+0x1bd04>
  4208e0:	ldr	x2, [x19, #8]
  4208e4:	cmp	x2, x23
  4208e8:	b.ne	4208d8 <wcrtomb@plt+0x1bcb8>  // b.any
  4208ec:	mov	x2, x23
  4208f0:	mov	x1, x22
  4208f4:	bl	4046e0 <memcmp@plt>
  4208f8:	cbnz	w0, 4208d8 <wcrtomb@plt+0x1bcb8>
  4208fc:	mov	x0, x19
  420900:	cbz	x20, 420940 <wcrtomb@plt+0x1bd20>
  420904:	mov	x0, x21
  420908:	bl	403ff0 <strlen@plt>
  42090c:	mvn	x2, x23
  420910:	add	x2, x2, x0
  420914:	str	x2, [x20]
  420918:	mov	x0, x19
  42091c:	ldr	x23, [sp, #48]
  420920:	b	420928 <wcrtomb@plt+0x1bd08>
  420924:	ldr	x23, [sp, #48]
  420928:	ldp	x19, x20, [sp, #16]
  42092c:	ldp	x21, x22, [sp, #32]
  420930:	ldp	x29, x30, [sp], #64
  420934:	ret
  420938:	ldr	x23, [sp, #48]
  42093c:	b	420928 <wcrtomb@plt+0x1bd08>
  420940:	ldr	x23, [sp, #48]
  420944:	b	420928 <wcrtomb@plt+0x1bd08>
  420948:	stp	x29, x30, [sp, #-32]!
  42094c:	mov	x29, sp
  420950:	str	x19, [sp, #16]
  420954:	mov	x19, x1
  420958:	mov	x1, #0x0                   	// #0
  42095c:	bl	42088c <wcrtomb@plt+0x1bc6c>
  420960:	cbz	x0, 420968 <wcrtomb@plt+0x1bd48>
  420964:	ldr	x19, [x0, #16]
  420968:	cbz	x19, 420974 <wcrtomb@plt+0x1bd54>
  42096c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  420970:	str	x19, [x0, #840]
  420974:	ldr	x19, [sp, #16]
  420978:	ldp	x29, x30, [sp], #32
  42097c:	ret
  420980:	stp	x29, x30, [sp, #-64]!
  420984:	mov	x29, sp
  420988:	stp	x19, x20, [sp, #16]
  42098c:	str	x21, [sp, #32]
  420990:	mov	x21, x0
  420994:	add	x1, sp, #0x38
  420998:	bl	42088c <wcrtomb@plt+0x1bc6c>
  42099c:	mov	x19, x0
  4209a0:	cbz	x0, 420a04 <wcrtomb@plt+0x1bde4>
  4209a4:	ldr	x0, [sp, #56]
  4209a8:	cmp	x0, #0x4
  4209ac:	b.ls	420a18 <wcrtomb@plt+0x1bdf8>  // b.plast
  4209b0:	sub	x20, x0, #0x4
  4209b4:	mov	x2, #0x4                   	// #4
  4209b8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  4209bc:	add	x1, x1, #0x3a0
  4209c0:	add	x0, x21, x20
  4209c4:	bl	4043c0 <strncmp@plt>
  4209c8:	cbnz	w0, 4209e0 <wcrtomb@plt+0x1bdc0>
  4209cc:	ldr	x0, [x19]
  4209d0:	ldrb	w0, [x0]
  4209d4:	cmp	w0, #0x74
  4209d8:	b.eq	4209e0 <wcrtomb@plt+0x1bdc0>  // b.none
  4209dc:	str	x20, [sp, #56]
  4209e0:	ldr	x0, [sp, #56]
  4209e4:	add	x0, x0, #0x1
  4209e8:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  4209ec:	mov	x19, x0
  4209f0:	ldr	x20, [sp, #56]
  4209f4:	mov	x2, x20
  4209f8:	mov	x1, x21
  4209fc:	bl	403f70 <memcpy@plt>
  420a00:	strb	wzr, [x19, x20]
  420a04:	mov	x0, x19
  420a08:	ldp	x19, x20, [sp, #16]
  420a0c:	ldr	x21, [sp, #32]
  420a10:	ldp	x29, x30, [sp], #64
  420a14:	ret
  420a18:	mov	x19, #0x0                   	// #0
  420a1c:	cbz	x0, 420a04 <wcrtomb@plt+0x1bde4>
  420a20:	b	4209e4 <wcrtomb@plt+0x1bdc4>
  420a24:	stp	x29, x30, [sp, #-144]!
  420a28:	mov	x29, sp
  420a2c:	add	x2, sp, #0x10
  420a30:	mov	x1, x0
  420a34:	mov	w0, #0x0                   	// #0
  420a38:	bl	404b10 <__xstat@plt>
  420a3c:	cbnz	w0, 420a58 <wcrtomb@plt+0x1be38>
  420a40:	ldr	w0, [sp, #32]
  420a44:	and	w0, w0, #0xf000
  420a48:	cmp	w0, #0x8, lsl #12
  420a4c:	cset	w0, eq  // eq = none
  420a50:	ldp	x29, x30, [sp], #144
  420a54:	ret
  420a58:	bl	404ad0 <__errno_location@plt>
  420a5c:	ldr	w0, [x0]
  420a60:	cmp	w0, #0x2
  420a64:	cset	w0, eq  // eq = none
  420a68:	b	420a50 <wcrtomb@plt+0x1be30>
  420a6c:	stp	x29, x30, [sp, #-64]!
  420a70:	mov	x29, sp
  420a74:	str	x19, [sp, #16]
  420a78:	mov	x19, x0
  420a7c:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  420a80:	add	x0, x0, #0x428
  420a84:	str	x0, [sp, #32]
  420a88:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  420a8c:	add	x1, x1, #0x430
  420a90:	str	x1, [sp, #40]
  420a94:	str	x19, [sp, #48]
  420a98:	str	xzr, [sp, #56]
  420a9c:	add	x1, sp, #0x20
  420aa0:	bl	404500 <execv@plt>
  420aa4:	mov	x0, x19
  420aa8:	bl	429a90 <wcrtomb@plt+0x24e70>
  420aac:	cmp	w0, w1
  420ab0:	b.ne	420ab8 <wcrtomb@plt+0x1be98>  // b.any
  420ab4:	ret
  420ab8:	stp	x29, x30, [sp, #-48]!
  420abc:	mov	x29, sp
  420ac0:	stp	x19, x20, [sp, #16]
  420ac4:	mov	w19, w0
  420ac8:	mov	w20, w1
  420acc:	mov	w0, w1
  420ad0:	bl	4045d0 <close@plt>
  420ad4:	cbz	w0, 420af0 <wcrtomb@plt+0x1bed0>
  420ad8:	str	x21, [sp, #32]
  420adc:	bl	404ad0 <__errno_location@plt>
  420ae0:	ldr	w21, [x0]
  420ae4:	cmp	w21, #0x9
  420ae8:	b.ne	420b14 <wcrtomb@plt+0x1bef4>  // b.any
  420aec:	ldr	x21, [sp, #32]
  420af0:	mov	w0, w19
  420af4:	bl	404040 <dup@plt>
  420af8:	cmp	w20, w0
  420afc:	b.ne	420b4c <wcrtomb@plt+0x1bf2c>  // b.any
  420b00:	mov	w0, w19
  420b04:	bl	405984 <wcrtomb@plt+0xd64>
  420b08:	ldp	x19, x20, [sp, #16]
  420b0c:	ldp	x29, x30, [sp], #48
  420b10:	ret
  420b14:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  420b18:	ldr	x0, [x0, #944]
  420b1c:	cbz	x0, 420b24 <wcrtomb@plt+0x1bf04>
  420b20:	blr	x0
  420b24:	mov	w2, #0x5                   	// #5
  420b28:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  420b2c:	add	x1, x1, #0x438
  420b30:	mov	x0, #0x0                   	// #0
  420b34:	bl	4049c0 <dcgettext@plt>
  420b38:	mov	x2, x0
  420b3c:	mov	w1, w21
  420b40:	mov	w0, #0x0                   	// #0
  420b44:	bl	404050 <error@plt>
  420b48:	bl	40e5ac <wcrtomb@plt+0x998c>
  420b4c:	tbz	w0, #31, 420b94 <wcrtomb@plt+0x1bf74>
  420b50:	str	x21, [sp, #32]
  420b54:	bl	404ad0 <__errno_location@plt>
  420b58:	ldr	w19, [x0]
  420b5c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  420b60:	ldr	x0, [x0, #944]
  420b64:	cbz	x0, 420b6c <wcrtomb@plt+0x1bf4c>
  420b68:	blr	x0
  420b6c:	mov	w2, #0x5                   	// #5
  420b70:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  420b74:	add	x1, x1, #0x448
  420b78:	mov	x0, #0x0                   	// #0
  420b7c:	bl	4049c0 <dcgettext@plt>
  420b80:	mov	x2, x0
  420b84:	mov	w1, w19
  420b88:	mov	w0, #0x0                   	// #0
  420b8c:	bl	404050 <error@plt>
  420b90:	bl	40e5ac <wcrtomb@plt+0x998c>
  420b94:	str	x21, [sp, #32]
  420b98:	bl	404660 <abort@plt>
  420b9c:	stp	x29, x30, [sp, #-48]!
  420ba0:	mov	x29, sp
  420ba4:	str	x19, [sp, #16]
  420ba8:	mov	w19, w0
  420bac:	mov	w2, #0x0                   	// #0
  420bb0:	add	x1, sp, #0x2c
  420bb4:	mov	w0, w19
  420bb8:	bl	404b60 <waitpid@plt>
  420bbc:	cmn	w0, #0x1
  420bc0:	b.ne	420be0 <wcrtomb@plt+0x1bfc0>  // b.any
  420bc4:	bl	404ad0 <__errno_location@plt>
  420bc8:	ldr	w1, [x0]
  420bcc:	cmp	w1, #0x4
  420bd0:	b.eq	420bac <wcrtomb@plt+0x1bf8c>  // b.none
  420bd4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  420bd8:	ldr	x0, [x0, #840]
  420bdc:	bl	42a17c <wcrtomb@plt+0x2555c>
  420be0:	ldr	w2, [sp, #44]
  420be4:	and	w1, w2, #0x7f
  420be8:	add	w1, w1, #0x1
  420bec:	sbfx	x1, x1, #1, #7
  420bf0:	ubfx	x0, x2, #8, #8
  420bf4:	cmp	w1, #0x0
  420bf8:	b.gt	420c00 <wcrtomb@plt+0x1bfe0>
  420bfc:	bl	404020 <exit@plt>
  420c00:	and	w0, w2, #0x7f
  420c04:	bl	404030 <raise@plt>
  420c08:	mov	w0, #0x0                   	// #0
  420c0c:	b	420bfc <wcrtomb@plt+0x1bfdc>
  420c10:	stp	x29, x30, [sp, #-304]!
  420c14:	mov	x29, sp
  420c18:	stp	x19, x20, [sp, #16]
  420c1c:	stp	x21, x22, [sp, #32]
  420c20:	str	x23, [sp, #48]
  420c24:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  420c28:	ldr	x0, [x0, #1120]
  420c2c:	str	x0, [sp, #176]
  420c30:	mov	x0, #0x1                   	// #1
  420c34:	str	x0, [sp, #80]
  420c38:	add	x0, sp, #0x12c
  420c3c:	bl	405514 <wcrtomb@plt+0x8f4>
  420c40:	mov	w2, #0xe06                 	// #3590
  420c44:	movk	w2, #0x208, lsl #16
  420c48:	cbz	x0, 420db8 <wcrtomb@plt+0x1c198>
  420c4c:	mov	x20, x0
  420c50:	adrp	x21, 456000 <_obstack_memory_used@@Base+0x14e64>
  420c54:	add	x21, x21, #0x478
  420c58:	mov	w22, #0xe0e                 	// #3598
  420c5c:	movk	w22, #0x208, lsl #16
  420c60:	b	420c94 <wcrtomb@plt+0x1c074>
  420c64:	mov	w2, #0x5                   	// #5
  420c68:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  420c6c:	add	x1, x1, #0x468
  420c70:	mov	x0, #0x0                   	// #0
  420c74:	bl	4049c0 <dcgettext@plt>
  420c78:	mov	x3, x19
  420c7c:	mov	x2, x0
  420c80:	mov	w1, #0x0                   	// #0
  420c84:	mov	w0, #0x0                   	// #0
  420c88:	bl	404050 <error@plt>
  420c8c:	mov	x20, x19
  420c90:	mov	w2, w22
  420c94:	add	x1, sp, #0x40
  420c98:	mov	x0, x20
  420c9c:	bl	42e010 <wcrtomb@plt+0x293f0>
  420ca0:	cbnz	w0, 420d60 <wcrtomb@plt+0x1c140>
  420ca4:	ldr	x0, [sp, #72]
  420ca8:	ldr	x2, [sp, #64]
  420cac:	lsl	x2, x2, #3
  420cb0:	ldr	x1, [sp, #80]
  420cb4:	add	x1, x0, x1, lsl #3
  420cb8:	bl	403f80 <memmove@plt>
  420cbc:	ldr	x1, [sp, #64]
  420cc0:	ldr	x0, [sp, #72]
  420cc4:	str	x21, [x0, x1, lsl #3]
  420cc8:	ldr	x1, [sp, #72]
  420ccc:	ldr	x0, [x1]
  420cd0:	bl	404700 <execvp@plt>
  420cd4:	ldr	x1, [sp, #64]
  420cd8:	ldr	x0, [sp, #72]
  420cdc:	str	xzr, [x0, x1, lsl #3]
  420ce0:	add	x0, sp, #0x12c
  420ce4:	bl	405558 <wcrtomb@plt+0x938>
  420ce8:	mov	x19, x0
  420cec:	cbz	x0, 420dac <wcrtomb@plt+0x1c18c>
  420cf0:	cbz	x20, 420c8c <wcrtomb@plt+0x1c06c>
  420cf4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  420cf8:	ldr	w0, [x0, #408]
  420cfc:	tbz	w0, #19, 420c8c <wcrtomb@plt+0x1c06c>
  420d00:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  420d04:	ldr	x0, [x0, #944]
  420d08:	cbz	x0, 420d10 <wcrtomb@plt+0x1c0f0>
  420d0c:	blr	x0
  420d10:	bl	404ad0 <__errno_location@plt>
  420d14:	ldr	w23, [x0]
  420d18:	mov	w2, #0x5                   	// #5
  420d1c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  420d20:	add	x1, x1, #0x458
  420d24:	mov	x0, #0x0                   	// #0
  420d28:	bl	4049c0 <dcgettext@plt>
  420d2c:	mov	x3, x20
  420d30:	mov	x2, x0
  420d34:	mov	w1, w23
  420d38:	mov	w0, #0x0                   	// #0
  420d3c:	bl	404050 <error@plt>
  420d40:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  420d44:	ldr	w0, [x0, #408]
  420d48:	tbz	w0, #19, 420c8c <wcrtomb@plt+0x1c06c>
  420d4c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  420d50:	ldr	x0, [x0, #944]
  420d54:	cbz	x0, 420c64 <wcrtomb@plt+0x1c044>
  420d58:	blr	x0
  420d5c:	b	420c64 <wcrtomb@plt+0x1c044>
  420d60:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  420d64:	ldr	x0, [x0, #944]
  420d68:	cbz	x0, 420d70 <wcrtomb@plt+0x1c150>
  420d6c:	blr	x0
  420d70:	mov	w2, #0x5                   	// #5
  420d74:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  420d78:	add	x1, x1, #0x2d0
  420d7c:	mov	x0, #0x0                   	// #0
  420d80:	bl	4049c0 <dcgettext@plt>
  420d84:	mov	x19, x0
  420d88:	add	x0, sp, #0x40
  420d8c:	bl	42c118 <wcrtomb@plt+0x274f8>
  420d90:	mov	x4, x0
  420d94:	mov	x3, x20
  420d98:	mov	x2, x19
  420d9c:	mov	w1, #0x0                   	// #0
  420da0:	mov	w0, #0x0                   	// #0
  420da4:	bl	404050 <error@plt>
  420da8:	bl	40e5ac <wcrtomb@plt+0x998c>
  420dac:	cbz	x20, 420db8 <wcrtomb@plt+0x1c198>
  420db0:	mov	x0, x20
  420db4:	bl	429a90 <wcrtomb@plt+0x24e70>
  420db8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  420dbc:	ldr	x0, [x0, #944]
  420dc0:	cbz	x0, 420dc8 <wcrtomb@plt+0x1c1a8>
  420dc4:	blr	x0
  420dc8:	mov	w2, #0x5                   	// #5
  420dcc:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  420dd0:	add	x1, x1, #0x480
  420dd4:	mov	x0, #0x0                   	// #0
  420dd8:	bl	4049c0 <dcgettext@plt>
  420ddc:	mov	x2, x0
  420de0:	mov	w1, #0x0                   	// #0
  420de4:	mov	w0, #0x0                   	// #0
  420de8:	bl	404050 <error@plt>
  420dec:	bl	40e5ac <wcrtomb@plt+0x998c>
  420df0:	stp	x29, x30, [sp, #-16]!
  420df4:	mov	x29, sp
  420df8:	cbz	x1, 420e14 <wcrtomb@plt+0x1c1f4>
  420dfc:	mov	w2, #0x1                   	// #1
  420e00:	bl	404100 <setenv@plt>
  420e04:	cbnz	w0, 420e10 <wcrtomb@plt+0x1c1f0>
  420e08:	ldp	x29, x30, [sp], #16
  420e0c:	ret
  420e10:	bl	40e5ec <wcrtomb@plt+0x99cc>
  420e14:	bl	404930 <unsetenv@plt>
  420e18:	b	420e08 <wcrtomb@plt+0x1c1e8>
  420e1c:	stp	x29, x30, [sp, #-64]!
  420e20:	mov	x29, sp
  420e24:	str	x19, [sp, #16]
  420e28:	mov	x19, x0
  420e2c:	mov	x0, x1
  420e30:	mov	x1, x2
  420e34:	add	x2, sp, #0x20
  420e38:	bl	41ad74 <wcrtomb@plt+0x16154>
  420e3c:	mov	w2, #0x1                   	// #1
  420e40:	mov	x1, x0
  420e44:	mov	x0, x19
  420e48:	bl	404100 <setenv@plt>
  420e4c:	cbnz	w0, 420e5c <wcrtomb@plt+0x1c23c>
  420e50:	ldr	x19, [sp, #16]
  420e54:	ldp	x29, x30, [sp], #64
  420e58:	ret
  420e5c:	bl	40e5ec <wcrtomb@plt+0x99cc>
  420e60:	stp	x29, x30, [sp, #-64]!
  420e64:	mov	x29, sp
  420e68:	str	x19, [sp, #16]
  420e6c:	mov	x19, x0
  420e70:	mov	x0, x1
  420e74:	add	x1, sp, #0x28
  420e78:	bl	438ce8 <argp_parse@@Base+0x55a8>
  420e7c:	mov	w2, #0x1                   	// #1
  420e80:	mov	x1, x0
  420e84:	mov	x0, x19
  420e88:	bl	404100 <setenv@plt>
  420e8c:	cbnz	w0, 420e9c <wcrtomb@plt+0x1c27c>
  420e90:	ldr	x19, [sp, #16]
  420e94:	ldp	x29, x30, [sp], #64
  420e98:	ret
  420e9c:	bl	40e5ec <wcrtomb@plt+0x99cc>
  420ea0:	stp	x29, x30, [sp, #-16]!
  420ea4:	mov	x29, sp
  420ea8:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x3ee64>
  420eac:	add	x2, x2, #0xb18
  420eb0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  420eb4:	ldr	w1, [x0, #912]
  420eb8:	mov	w0, #0x0                   	// #0
  420ebc:	bl	4049a0 <__fxstat@plt>
  420ec0:	cmp	w0, #0x0
  420ec4:	cset	w0, eq  // eq = none
  420ec8:	ldp	x29, x30, [sp], #16
  420ecc:	ret
  420ed0:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  420ed4:	ldr	x1, [x1, #480]
  420ed8:	mov	w2, #0x0                   	// #0
  420edc:	cbz	x1, 420ef0 <wcrtomb@plt+0x1c2d0>
  420ee0:	ldr	x3, [x0, #88]
  420ee4:	mov	w2, #0x0                   	// #0
  420ee8:	cmp	x1, x3
  420eec:	b.eq	420ef8 <wcrtomb@plt+0x1c2d8>  // b.none
  420ef0:	mov	w0, w2
  420ef4:	ret
  420ef8:	ldr	x1, [x0, #96]
  420efc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  420f00:	ldr	x0, [x0, #824]
  420f04:	cmp	x1, x0
  420f08:	cset	w2, eq  // eq = none
  420f0c:	b	420ef0 <wcrtomb@plt+0x1c2d0>
  420f10:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  420f14:	ldr	w1, [x0, #912]
  420f18:	mov	w0, #0x3fffffff            	// #1073741823
  420f1c:	cmp	w1, w0
  420f20:	b.gt	420f38 <wcrtomb@plt+0x1c318>
  420f24:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  420f28:	ldr	w0, [x0, #2856]
  420f2c:	and	w0, w0, #0xf000
  420f30:	cmp	w0, #0x8, lsl #12
  420f34:	b.eq	420f44 <wcrtomb@plt+0x1c324>  // b.none
  420f38:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  420f3c:	str	xzr, [x0, #480]
  420f40:	ret
  420f44:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  420f48:	add	x1, x0, #0xb18
  420f4c:	ldr	x2, [x0, #2840]
  420f50:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  420f54:	str	x2, [x0, #480]
  420f58:	ldr	x1, [x1, #8]
  420f5c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  420f60:	str	x1, [x0, #824]
  420f64:	b	420f40 <wcrtomb@plt+0x1c320>
  420f68:	stp	x29, x30, [sp, #-144]!
  420f6c:	mov	x29, sp
  420f70:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  420f74:	ldr	x0, [x0, #624]
  420f78:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  420f7c:	add	x1, x1, #0x700
  420f80:	ldr	x0, [x0]
  420f84:	bl	404720 <strcmp@plt>
  420f88:	mov	w1, #0x1                   	// #1
  420f8c:	cbz	w0, 420fbc <wcrtomb@plt+0x1c39c>
  420f90:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  420f94:	ldr	w2, [x0, #912]
  420f98:	mov	w1, #0x0                   	// #0
  420f9c:	mov	w0, #0x3fffffff            	// #1073741823
  420fa0:	cmp	w2, w0
  420fa4:	b.gt	420fbc <wcrtomb@plt+0x1c39c>
  420fa8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  420fac:	ldr	w0, [x0, #2856]
  420fb0:	and	w0, w0, #0xf000
  420fb4:	cmp	w0, #0x2, lsl #12
  420fb8:	b.eq	420fd0 <wcrtomb@plt+0x1c3b0>  // b.none
  420fbc:	and	w1, w1, #0x1
  420fc0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  420fc4:	strb	w1, [x0, #472]
  420fc8:	ldp	x29, x30, [sp], #144
  420fcc:	ret
  420fd0:	add	x2, sp, #0x10
  420fd4:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  420fd8:	add	x1, x1, #0x700
  420fdc:	mov	w0, #0x0                   	// #0
  420fe0:	bl	404b10 <__xstat@plt>
  420fe4:	mov	w1, w0
  420fe8:	cbnz	w0, 421018 <wcrtomb@plt+0x1c3f8>
  420fec:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  420ff0:	ldr	x2, [x0, #2840]
  420ff4:	ldr	x0, [sp, #16]
  420ff8:	cmp	x2, x0
  420ffc:	b.ne	420fbc <wcrtomb@plt+0x1c39c>  // b.any
  421000:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  421004:	ldr	x1, [x0, #2848]
  421008:	ldr	x0, [sp, #24]
  42100c:	cmp	x1, x0
  421010:	cset	w1, eq  // eq = none
  421014:	b	420fbc <wcrtomb@plt+0x1c39c>
  421018:	mov	w1, #0x0                   	// #0
  42101c:	b	420fbc <wcrtomb@plt+0x1c39c>
  421020:	cbz	w0, 421120 <wcrtomb@plt+0x1c500>
  421024:	stp	x29, x30, [sp, #-48]!
  421028:	mov	x29, sp
  42102c:	stp	x19, x20, [sp, #16]
  421030:	mov	w19, w0
  421034:	and	w20, w1, #0xff
  421038:	mov	w2, #0x0                   	// #0
  42103c:	add	x1, sp, #0x2c
  421040:	mov	w0, w19
  421044:	bl	404b60 <waitpid@plt>
  421048:	cmn	w0, #0x1
  42104c:	b.ne	42106c <wcrtomb@plt+0x1c44c>  // b.any
  421050:	bl	404ad0 <__errno_location@plt>
  421054:	ldr	w1, [x0]
  421058:	cmp	w1, #0x4
  42105c:	b.eq	421038 <wcrtomb@plt+0x1c418>  // b.none
  421060:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  421064:	ldr	x0, [x0, #840]
  421068:	bl	42a17c <wcrtomb@plt+0x2555c>
  42106c:	ldr	w1, [sp, #44]
  421070:	and	w0, w1, #0x7f
  421074:	add	w0, w0, #0x1
  421078:	sbfx	x0, x0, #1, #7
  42107c:	cmp	w0, #0x0
  421080:	b.le	4210dc <wcrtomb@plt+0x1c4bc>
  421084:	and	w19, w1, #0x7f
  421088:	cmp	w20, #0x0
  42108c:	ccmp	w19, #0xd, #0x0, eq  // eq = none
  421090:	b.ne	4210a0 <wcrtomb@plt+0x1c480>  // b.any
  421094:	ldp	x19, x20, [sp, #16]
  421098:	ldp	x29, x30, [sp], #48
  42109c:	ret
  4210a0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4210a4:	ldr	x0, [x0, #944]
  4210a8:	cbz	x0, 4210b0 <wcrtomb@plt+0x1c490>
  4210ac:	blr	x0
  4210b0:	mov	w2, #0x5                   	// #5
  4210b4:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  4210b8:	add	x1, x1, #0x4a8
  4210bc:	mov	x0, #0x0                   	// #0
  4210c0:	bl	4049c0 <dcgettext@plt>
  4210c4:	mov	w3, w19
  4210c8:	mov	x2, x0
  4210cc:	mov	w1, #0x0                   	// #0
  4210d0:	mov	w0, #0x0                   	// #0
  4210d4:	bl	404050 <error@plt>
  4210d8:	bl	40e5ac <wcrtomb@plt+0x998c>
  4210dc:	tst	x1, #0xff00
  4210e0:	b.eq	421094 <wcrtomb@plt+0x1c474>  // b.none
  4210e4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4210e8:	ldr	x0, [x0, #944]
  4210ec:	cbz	x0, 4210f4 <wcrtomb@plt+0x1c4d4>
  4210f0:	blr	x0
  4210f4:	mov	w2, #0x5                   	// #5
  4210f8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  4210fc:	add	x1, x1, #0x4c8
  421100:	mov	x0, #0x0                   	// #0
  421104:	bl	4049c0 <dcgettext@plt>
  421108:	ldrb	w3, [sp, #45]
  42110c:	mov	x2, x0
  421110:	mov	w1, #0x0                   	// #0
  421114:	mov	w0, #0x0                   	// #0
  421118:	bl	404050 <error@plt>
  42111c:	bl	40e5ac <wcrtomb@plt+0x998c>
  421120:	ret
  421124:	stp	x29, x30, [sp, #-48]!
  421128:	mov	x29, sp
  42112c:	stp	x19, x20, [sp, #16]
  421130:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  421134:	add	x0, x0, #0x4e8
  421138:	bl	404af0 <getenv@plt>
  42113c:	mov	x20, x0
  421140:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  421144:	add	x0, x0, #0x428
  421148:	cmp	x20, #0x0
  42114c:	csel	x20, x0, x20, eq  // eq = none
  421150:	bl	41b9f8 <wcrtomb@plt+0x16dd8>
  421154:	mov	w19, w0
  421158:	cbz	w0, 421198 <wcrtomb@plt+0x1c578>
  42115c:	mov	w2, #0x0                   	// #0
  421160:	add	x1, sp, #0x2c
  421164:	mov	w0, w19
  421168:	bl	404b60 <waitpid@plt>
  42116c:	cmn	w0, #0x1
  421170:	b.ne	42118c <wcrtomb@plt+0x1c56c>  // b.any
  421174:	bl	404ad0 <__errno_location@plt>
  421178:	ldr	w1, [x0]
  42117c:	cmp	w1, #0x4
  421180:	b.eq	42115c <wcrtomb@plt+0x1c53c>  // b.none
  421184:	mov	x0, x20
  421188:	bl	42a17c <wcrtomb@plt+0x2555c>
  42118c:	ldp	x19, x20, [sp, #16]
  421190:	ldp	x29, x30, [sp], #48
  421194:	ret
  421198:	mov	x3, #0x0                   	// #0
  42119c:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x14e64>
  4211a0:	add	x2, x2, #0x4f0
  4211a4:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  4211a8:	add	x1, x1, #0x4f8
  4211ac:	mov	x0, x20
  4211b0:	bl	404ae0 <execlp@plt>
  4211b4:	mov	x0, x20
  4211b8:	bl	429a90 <wcrtomb@plt+0x24e70>
  4211bc:	ldr	w2, [x0, #24]
  4211c0:	ldr	w0, [x1, #24]
  4211c4:	cmp	w2, w0
  4211c8:	cset	w0, eq  // eq = none
  4211cc:	ret
  4211d0:	ldr	w2, [x0, #28]
  4211d4:	ldr	w0, [x1, #28]
  4211d8:	cmp	w2, w0
  4211dc:	cset	w0, eq  // eq = none
  4211e0:	ret
  4211e4:	ldr	x3, [x1]
  4211e8:	ldr	x2, [x0]
  4211ec:	cmp	x3, x2
  4211f0:	b.eq	4211fc <wcrtomb@plt+0x1c5dc>  // b.none
  4211f4:	mov	w0, #0x0                   	// #0
  4211f8:	ret
  4211fc:	ldr	x1, [x1, #8]
  421200:	ldr	x0, [x0, #8]
  421204:	cmp	x1, x0
  421208:	cset	w0, eq  // eq = none
  42120c:	b	4211f8 <wcrtomb@plt+0x1c5d8>
  421210:	stp	x29, x30, [sp, #-32]!
  421214:	mov	x29, sp
  421218:	str	x19, [sp, #16]
  42121c:	mov	w19, w0
  421220:	mov	w2, #0x1                   	// #1
  421224:	mov	x1, #0x0                   	// #0
  421228:	bl	4041d0 <lseek@plt>
  42122c:	tbnz	x0, #63, 421248 <wcrtomb@plt+0x1c628>
  421230:	mov	x1, x0
  421234:	mov	w0, w19
  421238:	bl	404a10 <ftruncate@plt>
  42123c:	ldr	x19, [sp, #16]
  421240:	ldp	x29, x30, [sp], #32
  421244:	ret
  421248:	mov	w0, #0xffffffff            	// #-1
  42124c:	b	42123c <wcrtomb@plt+0x1c61c>
  421250:	stp	x29, x30, [sp, #-16]!
  421254:	mov	x29, sp
  421258:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42125c:	ldr	w0, [x0, #912]
  421260:	mov	w1, #0x3fffffff            	// #1073741823
  421264:	cmp	w0, w1
  421268:	b.le	421290 <wcrtomb@plt+0x1c670>
  42126c:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  421270:	ldr	x2, [x1, #856]
  421274:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  421278:	ldr	x1, [x1, #3920]
  42127c:	mov	w3, #0xc0000000            	// #-1073741824
  421280:	add	w0, w0, w3
  421284:	bl	42af58 <wcrtomb@plt+0x26338>
  421288:	ldp	x29, x30, [sp], #16
  42128c:	ret
  421290:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  421294:	ldr	x2, [x1, #856]
  421298:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42129c:	ldr	x1, [x1, #3920]
  4212a0:	bl	437354 <argp_parse@@Base+0x3c14>
  4212a4:	b	421288 <wcrtomb@plt+0x1c668>
  4212a8:	stp	x29, x30, [sp, #-80]!
  4212ac:	mov	x29, sp
  4212b0:	mov	x1, #0x1                   	// #1
  4212b4:	mov	w0, #0xd                   	// #13
  4212b8:	bl	404270 <signal@plt>
  4212bc:	add	x0, sp, #0x48
  4212c0:	bl	41ba38 <wcrtomb@plt+0x16e18>
  4212c4:	bl	41b9f8 <wcrtomb@plt+0x16dd8>
  4212c8:	cmp	w0, #0x0
  4212cc:	b.gt	4215f8 <wcrtomb@plt+0x1c9d8>
  4212d0:	stp	x19, x20, [sp, #16]
  4212d4:	mov	w2, #0x5                   	// #5
  4212d8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  4212dc:	add	x1, x1, #0x500
  4212e0:	mov	x0, #0x0                   	// #0
  4212e4:	bl	4049c0 <dcgettext@plt>
  4212e8:	bl	43d6dc <argp_parse@@Base+0x9f9c>
  4212ec:	mov	x1, #0x0                   	// #0
  4212f0:	mov	w0, #0xd                   	// #13
  4212f4:	bl	404270 <signal@plt>
  4212f8:	mov	w1, #0x0                   	// #0
  4212fc:	ldr	w0, [sp, #72]
  421300:	bl	420aac <wcrtomb@plt+0x1be8c>
  421304:	ldr	w0, [sp, #76]
  421308:	bl	405984 <wcrtomb@plt+0xd64>
  42130c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  421310:	ldrb	w0, [x0, #952]
  421314:	cbnz	w0, 421358 <wcrtomb@plt+0x1c738>
  421318:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42131c:	ldr	x19, [x0, #624]
  421320:	mov	w1, #0x3a                  	// #58
  421324:	ldr	x0, [x19]
  421328:	bl	404870 <strchr@plt>
  42132c:	mov	x2, x0
  421330:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  421334:	str	x2, [x0, #960]
  421338:	cbz	x2, 421358 <wcrtomb@plt+0x1c738>
  42133c:	ldr	x0, [x19]
  421340:	cmp	x2, x0
  421344:	b.ls	421358 <wcrtomb@plt+0x1c738>  // b.plast
  421348:	sub	x2, x2, x0
  42134c:	mov	w1, #0x2f                  	// #47
  421350:	bl	404960 <memchr@plt>
  421354:	cbz	x0, 421420 <wcrtomb@plt+0x1c800>
  421358:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42135c:	ldr	x0, [x0, #624]
  421360:	ldr	x0, [x0]
  421364:	bl	420a24 <wcrtomb@plt+0x1be04>
  421368:	cbz	w0, 421420 <wcrtomb@plt+0x1c800>
  42136c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  421370:	ldrb	w0, [x0, #693]
  421374:	cbnz	w0, 4213e4 <wcrtomb@plt+0x1c7c4>
  421378:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42137c:	ldr	x0, [x0, #624]
  421380:	ldr	x19, [x0]
  421384:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  421388:	add	x1, x1, #0xca8
  42138c:	mov	x0, x19
  421390:	bl	404720 <strcmp@plt>
  421394:	cbz	w0, 42140c <wcrtomb@plt+0x1c7ec>
  421398:	mov	w1, #0x1b6                 	// #438
  42139c:	mov	x0, x19
  4213a0:	bl	404bb0 <creat@plt>
  4213a4:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  4213a8:	str	w0, [x1, #912]
  4213ac:	tbz	w0, #31, 421404 <wcrtomb@plt+0x1c7e4>
  4213b0:	stp	x21, x22, [sp, #32]
  4213b4:	str	x23, [sp, #48]
  4213b8:	bl	404ad0 <__errno_location@plt>
  4213bc:	mov	x19, x0
  4213c0:	ldr	w20, [x0]
  4213c4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4213c8:	ldrb	w0, [x0, #693]
  4213cc:	cbnz	w0, 4213fc <wcrtomb@plt+0x1c7dc>
  4213d0:	str	w20, [x19]
  4213d4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4213d8:	ldr	x0, [x0, #624]
  4213dc:	ldr	x0, [x0]
  4213e0:	bl	429bbc <wcrtomb@plt+0x24f9c>
  4213e4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4213e8:	ldr	x0, [x0, #624]
  4213ec:	mov	w1, #0x1                   	// #1
  4213f0:	ldr	x0, [x0]
  4213f4:	bl	41b29c <wcrtomb@plt+0x1667c>
  4213f8:	b	421378 <wcrtomb@plt+0x1c758>
  4213fc:	bl	41b11c <wcrtomb@plt+0x164fc>
  421400:	b	4213d0 <wcrtomb@plt+0x1c7b0>
  421404:	mov	w1, #0x1                   	// #1
  421408:	bl	420aac <wcrtomb@plt+0x1be8c>
  42140c:	stp	x21, x22, [sp, #32]
  421410:	str	x23, [sp, #48]
  421414:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  421418:	ldr	x0, [x0, #840]
  42141c:	bl	420a6c <wcrtomb@plt+0x1be4c>
  421420:	str	x23, [sp, #48]
  421424:	add	x0, sp, #0x40
  421428:	bl	41ba38 <wcrtomb@plt+0x16e18>
  42142c:	bl	41b9f8 <wcrtomb@plt+0x16dd8>
  421430:	mov	w23, w0
  421434:	cbz	w0, 421488 <wcrtomb@plt+0x1c868>
  421438:	mov	w1, #0x0                   	// #0
  42143c:	ldr	w0, [sp, #64]
  421440:	bl	420aac <wcrtomb@plt+0x1be8c>
  421444:	ldr	w0, [sp, #68]
  421448:	bl	405984 <wcrtomb@plt+0xd64>
  42144c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  421450:	ldr	x19, [x0, #624]
  421454:	ldr	x20, [x19]
  421458:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  42145c:	add	x1, x1, #0xca8
  421460:	mov	x0, x20
  421464:	bl	404720 <strcmp@plt>
  421468:	cbnz	w0, 4214c4 <wcrtomb@plt+0x1c8a4>
  42146c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  421470:	mov	w1, #0x1                   	// #1
  421474:	str	w1, [x0, #912]
  421478:	stp	x21, x22, [sp, #32]
  42147c:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x3ee64>
  421480:	adrp	x21, 481000 <argp_program_version_hook@@Base+0x298>
  421484:	b	4215b4 <wcrtomb@plt+0x1c994>
  421488:	stp	x21, x22, [sp, #32]
  42148c:	mov	w2, #0x5                   	// #5
  421490:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  421494:	add	x1, x1, #0x510
  421498:	mov	x0, #0x0                   	// #0
  42149c:	bl	4049c0 <dcgettext@plt>
  4214a0:	bl	43d6dc <argp_parse@@Base+0x9f9c>
  4214a4:	mov	w1, #0x1                   	// #1
  4214a8:	ldr	w0, [sp, #68]
  4214ac:	bl	420aac <wcrtomb@plt+0x1be8c>
  4214b0:	ldr	w0, [sp, #64]
  4214b4:	bl	405984 <wcrtomb@plt+0xd64>
  4214b8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4214bc:	ldr	x0, [x0, #840]
  4214c0:	bl	420a6c <wcrtomb@plt+0x1be4c>
  4214c4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4214c8:	ldrb	w0, [x0, #952]
  4214cc:	cbnz	w0, 42150c <wcrtomb@plt+0x1c8ec>
  4214d0:	mov	w1, #0x3a                  	// #58
  4214d4:	mov	x0, x20
  4214d8:	bl	404870 <strchr@plt>
  4214dc:	mov	x2, x0
  4214e0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4214e4:	str	x2, [x0, #960]
  4214e8:	cbz	x2, 42150c <wcrtomb@plt+0x1c8ec>
  4214ec:	ldr	x20, [x19]
  4214f0:	cmp	x2, x20
  4214f4:	b.ls	42150c <wcrtomb@plt+0x1c8ec>  // b.plast
  4214f8:	sub	x2, x2, x20
  4214fc:	mov	w1, #0x2f                  	// #47
  421500:	mov	x0, x20
  421504:	bl	404960 <memchr@plt>
  421508:	cbz	x0, 421538 <wcrtomb@plt+0x1c918>
  42150c:	mov	w1, #0x1b6                 	// #438
  421510:	ldr	x0, [x19]
  421514:	bl	404bb0 <creat@plt>
  421518:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  42151c:	str	w0, [x1, #912]
  421520:	tbz	w0, #31, 421478 <wcrtomb@plt+0x1c858>
  421524:	stp	x21, x22, [sp, #32]
  421528:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42152c:	ldr	x0, [x0, #624]
  421530:	ldr	x0, [x0]
  421534:	bl	429bbc <wcrtomb@plt+0x24f9c>
  421538:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42153c:	ldr	x3, [x0, #744]
  421540:	mov	w2, #0x40000000            	// #1073741824
  421544:	mov	w1, #0x41                  	// #65
  421548:	mov	x0, x20
  42154c:	bl	42a790 <wcrtomb@plt+0x25b70>
  421550:	b	421518 <wcrtomb@plt+0x1c8f8>
  421554:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  421558:	ldr	x0, [x0, #840]
  42155c:	bl	429d68 <wcrtomb@plt+0x25148>
  421560:	cbz	x19, 421594 <wcrtomb@plt+0x1c974>
  421564:	adrp	x20, 481000 <argp_program_version_hook@@Base+0x298>
  421568:	ldr	x2, [x20, #856]
  42156c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  421570:	ldr	x0, [x0, #3920]
  421574:	sub	x2, x2, x19
  421578:	mov	w1, #0x0                   	// #0
  42157c:	add	x0, x0, x19
  421580:	bl	404420 <memset@plt>
  421584:	bl	421250 <wcrtomb@plt+0x1c630>
  421588:	ldr	x1, [x20, #856]
  42158c:	cmp	x1, x0
  421590:	b.ne	42159c <wcrtomb@plt+0x1c97c>  // b.any
  421594:	mov	w0, w23
  421598:	bl	420b9c <wcrtomb@plt+0x1bf7c>
  42159c:	bl	405e58 <wcrtomb@plt+0x1238>
  4215a0:	bl	405e58 <wcrtomb@plt+0x1238>
  4215a4:	bl	421250 <wcrtomb@plt+0x1c630>
  4215a8:	ldr	x1, [x21, #856]
  4215ac:	cmp	x1, x0
  4215b0:	b.ne	4215a0 <wcrtomb@plt+0x1c980>  // b.any
  4215b4:	ldr	x20, [x22, #3920]
  4215b8:	ldr	x2, [x21, #856]
  4215bc:	cbz	x2, 421594 <wcrtomb@plt+0x1c974>
  4215c0:	mov	x19, #0x0                   	// #0
  4215c4:	sub	x2, x2, x19
  4215c8:	mov	x1, x20
  4215cc:	mov	w0, #0x0                   	// #0
  4215d0:	bl	43f41c <argp_parse@@Base+0xbcdc>
  4215d4:	cmn	x0, #0x1
  4215d8:	b.eq	421554 <wcrtomb@plt+0x1c934>  // b.none
  4215dc:	cbz	x0, 421560 <wcrtomb@plt+0x1c940>
  4215e0:	add	x19, x19, x0
  4215e4:	add	x20, x20, x0
  4215e8:	ldr	x2, [x21, #856]
  4215ec:	cmp	x2, x19
  4215f0:	b.hi	4215c4 <wcrtomb@plt+0x1c9a4>  // b.pmore
  4215f4:	b	4215a4 <wcrtomb@plt+0x1c984>
  4215f8:	stp	x19, x20, [sp, #16]
  4215fc:	mov	w19, w0
  421600:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  421604:	ldr	w1, [sp, #76]
  421608:	str	w1, [x0, #912]
  42160c:	ldr	w0, [sp, #72]
  421610:	bl	405984 <wcrtomb@plt+0xd64>
  421614:	mov	w0, w19
  421618:	ldp	x19, x20, [sp, #16]
  42161c:	ldp	x29, x30, [sp], #80
  421620:	ret
  421624:	stp	x29, x30, [sp, #-112]!
  421628:	mov	x29, sp
  42162c:	stp	x19, x20, [sp, #16]
  421630:	add	x0, sp, #0x68
  421634:	bl	41ba38 <wcrtomb@plt+0x16e18>
  421638:	bl	41b9f8 <wcrtomb@plt+0x16dd8>
  42163c:	cmp	w0, #0x0
  421640:	b.gt	421940 <wcrtomb@plt+0x1cd20>
  421644:	mov	w2, #0x5                   	// #5
  421648:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  42164c:	add	x1, x1, #0x500
  421650:	mov	x0, #0x0                   	// #0
  421654:	bl	4049c0 <dcgettext@plt>
  421658:	bl	43d6dc <argp_parse@@Base+0x9f9c>
  42165c:	mov	x1, #0x0                   	// #0
  421660:	mov	w0, #0xd                   	// #13
  421664:	bl	404270 <signal@plt>
  421668:	mov	w1, #0x1                   	// #1
  42166c:	ldr	w0, [sp, #108]
  421670:	bl	420aac <wcrtomb@plt+0x1be8c>
  421674:	ldr	w0, [sp, #104]
  421678:	bl	405984 <wcrtomb@plt+0xd64>
  42167c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  421680:	ldr	x19, [x0, #624]
  421684:	ldr	x20, [x19]
  421688:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  42168c:	add	x1, x1, #0xca8
  421690:	mov	x0, x20
  421694:	bl	404720 <strcmp@plt>
  421698:	cbz	w0, 4216ec <wcrtomb@plt+0x1cacc>
  42169c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4216a0:	ldrb	w0, [x0, #952]
  4216a4:	cbnz	w0, 4216e0 <wcrtomb@plt+0x1cac0>
  4216a8:	mov	w1, #0x3a                  	// #58
  4216ac:	mov	x0, x20
  4216b0:	bl	404870 <strchr@plt>
  4216b4:	mov	x2, x0
  4216b8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4216bc:	str	x2, [x0, #960]
  4216c0:	cbz	x2, 4216e0 <wcrtomb@plt+0x1cac0>
  4216c4:	ldr	x0, [x19]
  4216c8:	cmp	x2, x0
  4216cc:	b.ls	4216e0 <wcrtomb@plt+0x1cac0>  // b.plast
  4216d0:	sub	x2, x2, x0
  4216d4:	mov	w1, #0x2f                  	// #47
  4216d8:	bl	404960 <memchr@plt>
  4216dc:	cbz	x0, 4216ec <wcrtomb@plt+0x1cacc>
  4216e0:	ldr	x0, [x19]
  4216e4:	bl	420a24 <wcrtomb@plt+0x1be04>
  4216e8:	cbnz	w0, 42176c <wcrtomb@plt+0x1cb4c>
  4216ec:	stp	x27, x28, [sp, #80]
  4216f0:	add	x0, sp, #0x60
  4216f4:	bl	41ba38 <wcrtomb@plt+0x16e18>
  4216f8:	bl	41b9f8 <wcrtomb@plt+0x16dd8>
  4216fc:	mov	w27, w0
  421700:	cbz	w0, 4217cc <wcrtomb@plt+0x1cbac>
  421704:	mov	w1, #0x1                   	// #1
  421708:	ldr	w0, [sp, #100]
  42170c:	bl	420aac <wcrtomb@plt+0x1be8c>
  421710:	ldr	w0, [sp, #96]
  421714:	bl	405984 <wcrtomb@plt+0xd64>
  421718:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42171c:	ldr	x19, [x0, #624]
  421720:	ldr	x20, [x19]
  421724:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  421728:	add	x1, x1, #0xca8
  42172c:	mov	x0, x20
  421730:	bl	404720 <strcmp@plt>
  421734:	cbnz	w0, 421808 <wcrtomb@plt+0x1cbe8>
  421738:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42173c:	str	wzr, [x0, #912]
  421740:	stp	x21, x22, [sp, #32]
  421744:	stp	x23, x24, [sp, #48]
  421748:	stp	x25, x26, [sp, #64]
  42174c:	adrp	x23, 481000 <argp_program_version_hook@@Base+0x298>
  421750:	add	x23, x23, #0x390
  421754:	adrp	x24, 481000 <argp_program_version_hook@@Base+0x298>
  421758:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42175c:	bl	405444 <wcrtomb@plt+0x824>
  421760:	mov	w20, #0x3fffffff            	// #1073741823
  421764:	mov	w21, #0xc0000000            	// #-1073741824
  421768:	b	4218bc <wcrtomb@plt+0x1cc9c>
  42176c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  421770:	ldr	x0, [x0, #624]
  421774:	mov	w2, #0x1b6                 	// #438
  421778:	mov	w1, #0x0                   	// #0
  42177c:	ldr	x0, [x0]
  421780:	bl	404340 <open@plt>
  421784:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  421788:	str	w0, [x1, #912]
  42178c:	tbnz	w0, #31, 4217ac <wcrtomb@plt+0x1cb8c>
  421790:	stp	x21, x22, [sp, #32]
  421794:	stp	x23, x24, [sp, #48]
  421798:	stp	x25, x26, [sp, #64]
  42179c:	stp	x27, x28, [sp, #80]
  4217a0:	mov	w1, #0x0                   	// #0
  4217a4:	bl	420aac <wcrtomb@plt+0x1be8c>
  4217a8:	bl	420c10 <wcrtomb@plt+0x1bff0>
  4217ac:	stp	x21, x22, [sp, #32]
  4217b0:	stp	x23, x24, [sp, #48]
  4217b4:	stp	x25, x26, [sp, #64]
  4217b8:	stp	x27, x28, [sp, #80]
  4217bc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4217c0:	ldr	x0, [x0, #624]
  4217c4:	ldr	x0, [x0]
  4217c8:	bl	429bbc <wcrtomb@plt+0x24f9c>
  4217cc:	stp	x21, x22, [sp, #32]
  4217d0:	stp	x23, x24, [sp, #48]
  4217d4:	stp	x25, x26, [sp, #64]
  4217d8:	mov	w2, #0x5                   	// #5
  4217dc:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  4217e0:	add	x1, x1, #0x510
  4217e4:	mov	x0, #0x0                   	// #0
  4217e8:	bl	4049c0 <dcgettext@plt>
  4217ec:	bl	43d6dc <argp_parse@@Base+0x9f9c>
  4217f0:	mov	w1, #0x0                   	// #0
  4217f4:	ldr	w0, [sp, #96]
  4217f8:	bl	420aac <wcrtomb@plt+0x1be8c>
  4217fc:	ldr	w0, [sp, #100]
  421800:	bl	405984 <wcrtomb@plt+0xd64>
  421804:	bl	420c10 <wcrtomb@plt+0x1bff0>
  421808:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42180c:	ldrb	w0, [x0, #952]
  421810:	cbnz	w0, 42184c <wcrtomb@plt+0x1cc2c>
  421814:	mov	w1, #0x3a                  	// #58
  421818:	mov	x0, x20
  42181c:	bl	404870 <strchr@plt>
  421820:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  421824:	str	x0, [x1, #960]
  421828:	cbz	x0, 42184c <wcrtomb@plt+0x1cc2c>
  42182c:	ldr	x20, [x19]
  421830:	cmp	x0, x20
  421834:	b.ls	42184c <wcrtomb@plt+0x1cc2c>  // b.plast
  421838:	sub	x2, x0, x20
  42183c:	mov	w1, #0x2f                  	// #47
  421840:	mov	x0, x20
  421844:	bl	404960 <memchr@plt>
  421848:	cbz	x0, 421884 <wcrtomb@plt+0x1cc64>
  42184c:	mov	w2, #0x1b6                 	// #438
  421850:	mov	w1, #0x0                   	// #0
  421854:	ldr	x0, [x19]
  421858:	bl	404340 <open@plt>
  42185c:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  421860:	str	w0, [x1, #912]
  421864:	tbz	w0, #31, 421740 <wcrtomb@plt+0x1cb20>
  421868:	stp	x21, x22, [sp, #32]
  42186c:	stp	x23, x24, [sp, #48]
  421870:	stp	x25, x26, [sp, #64]
  421874:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  421878:	ldr	x0, [x0, #624]
  42187c:	ldr	x0, [x0]
  421880:	bl	429bbc <wcrtomb@plt+0x24f9c>
  421884:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  421888:	ldr	x3, [x0, #744]
  42188c:	mov	w2, #0x40000000            	// #1073741824
  421890:	mov	w1, #0x0                   	// #0
  421894:	mov	x0, x20
  421898:	bl	42a790 <wcrtomb@plt+0x25b70>
  42189c:	b	42185c <wcrtomb@plt+0x1cc3c>
  4218a0:	ldr	x2, [x24, #856]
  4218a4:	ldr	x1, [x22, #3920]
  4218a8:	bl	43f41c <argp_parse@@Base+0xbcdc>
  4218ac:	mov	x19, x0
  4218b0:	cmn	x19, #0x1
  4218b4:	b.ne	4218e0 <wcrtomb@plt+0x1ccc0>  // b.any
  4218b8:	bl	4059b8 <wcrtomb@plt+0xd98>
  4218bc:	ldr	w0, [x23]
  4218c0:	cmp	w0, w20
  4218c4:	b.le	4218a0 <wcrtomb@plt+0x1cc80>
  4218c8:	ldr	x2, [x24, #856]
  4218cc:	ldr	x1, [x22, #3920]
  4218d0:	add	w0, w0, w21
  4218d4:	bl	42ae78 <wcrtomb@plt+0x26258>
  4218d8:	mov	x19, x0
  4218dc:	b	4218b0 <wcrtomb@plt+0x1cc90>
  4218e0:	cbz	x19, 421930 <wcrtomb@plt+0x1cd10>
  4218e4:	ldr	x21, [x22, #3920]
  4218e8:	mov	x26, #0x200                 	// #512
  4218ec:	mov	w25, #0x1                   	// #1
  4218f0:	adrp	x28, 481000 <argp_program_version_hook@@Base+0x298>
  4218f4:	b	42190c <wcrtomb@plt+0x1ccec>
  4218f8:	ldr	x0, [x28, #840]
  4218fc:	bl	42a19c <wcrtomb@plt+0x2557c>
  421900:	add	x21, x21, x20
  421904:	subs	x19, x19, x20
  421908:	b.eq	42175c <wcrtomb@plt+0x1cb3c>  // b.none
  42190c:	cmp	x19, #0x200
  421910:	csel	x20, x19, x26, ls  // ls = plast
  421914:	mov	x2, x20
  421918:	mov	x1, x21
  42191c:	mov	w0, w25
  421920:	bl	437354 <argp_parse@@Base+0x3c14>
  421924:	cmp	x0, x20
  421928:	b.eq	421900 <wcrtomb@plt+0x1cce0>  // b.none
  42192c:	b	4218f8 <wcrtomb@plt+0x1ccd8>
  421930:	mov	w0, #0x1                   	// #1
  421934:	bl	405984 <wcrtomb@plt+0xd64>
  421938:	mov	w0, w27
  42193c:	bl	420b9c <wcrtomb@plt+0x1bf7c>
  421940:	mov	w19, w0
  421944:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  421948:	ldr	w1, [sp, #104]
  42194c:	str	w1, [x0, #912]
  421950:	ldr	w0, [sp, #108]
  421954:	bl	405984 <wcrtomb@plt+0xd64>
  421958:	mov	w0, w19
  42195c:	ldp	x19, x20, [sp, #16]
  421960:	ldp	x29, x30, [sp], #112
  421964:	ret
  421968:	stp	x29, x30, [sp, #-80]!
  42196c:	mov	x29, sp
  421970:	stp	x19, x20, [sp, #16]
  421974:	stp	x21, x22, [sp, #32]
  421978:	mov	x21, x0
  42197c:	mov	w20, w1
  421980:	mov	x22, x2
  421984:	add	x0, sp, #0x48
  421988:	bl	41ba38 <wcrtomb@plt+0x16e18>
  42198c:	mov	x1, #0x1                   	// #1
  421990:	mov	w0, #0xd                   	// #13
  421994:	bl	404270 <signal@plt>
  421998:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42199c:	add	x19, x19, #0xb18
  4219a0:	str	x0, [x19, #128]
  4219a4:	bl	41b9f8 <wcrtomb@plt+0x16dd8>
  4219a8:	str	w0, [x19, #136]
  4219ac:	cbz	w0, 4219cc <wcrtomb@plt+0x1cdac>
  4219b0:	ldr	w0, [sp, #72]
  4219b4:	bl	405984 <wcrtomb@plt+0xd64>
  4219b8:	ldr	w0, [sp, #76]
  4219bc:	ldp	x19, x20, [sp, #16]
  4219c0:	ldp	x21, x22, [sp, #32]
  4219c4:	ldp	x29, x30, [sp], #80
  4219c8:	ret
  4219cc:	mov	w1, #0x0                   	// #0
  4219d0:	ldr	w0, [sp, #72]
  4219d4:	bl	420aac <wcrtomb@plt+0x1be8c>
  4219d8:	ldr	w0, [sp, #76]
  4219dc:	bl	405984 <wcrtomb@plt+0xd64>
  4219e0:	and	w20, w20, #0xff
  4219e4:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  4219e8:	add	x1, x1, #0x938
  4219ec:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  4219f0:	add	x0, x0, #0x528
  4219f4:	bl	420df0 <wcrtomb@plt+0x1c1d0>
  4219f8:	adrp	x19, 481000 <argp_program_version_hook@@Base+0x298>
  4219fc:	ldr	x0, [x19, #672]
  421a00:	ldr	x1, [x0]
  421a04:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  421a08:	add	x0, x0, #0x538
  421a0c:	bl	420df0 <wcrtomb@plt+0x1c1d0>
  421a10:	ldr	x1, [x19, #672]
  421a14:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  421a18:	ldr	x0, [x0, #624]
  421a1c:	sub	x1, x1, x0
  421a20:	asr	x1, x1, #3
  421a24:	add	x1, x1, #0x1
  421a28:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  421a2c:	add	x0, x0, #0x548
  421a30:	bl	420e60 <wcrtomb@plt+0x1c240>
  421a34:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  421a38:	ldrsw	x1, [x0, #684]
  421a3c:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  421a40:	add	x0, x0, #0x558
  421a44:	bl	420e60 <wcrtomb@plt+0x1c240>
  421a48:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  421a4c:	ldr	w0, [x0, #3984]
  421a50:	cbnz	w0, 421a5c <wcrtomb@plt+0x1ce3c>
  421a54:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  421a58:	ldr	w0, [x0, #752]
  421a5c:	bl	422420 <wcrtomb@plt+0x1d800>
  421a60:	mov	x1, x0
  421a64:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  421a68:	add	x0, x0, #0x570
  421a6c:	bl	420df0 <wcrtomb@plt+0x1c1d0>
  421a70:	strb	w20, [sp, #48]
  421a74:	strb	wzr, [sp, #49]
  421a78:	mov	w2, #0x1                   	// #1
  421a7c:	add	x1, sp, #0x30
  421a80:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  421a84:	add	x0, x0, #0x580
  421a88:	bl	404100 <setenv@plt>
  421a8c:	cbnz	w0, 421bd4 <wcrtomb@plt+0x1cfb4>
  421a90:	ldr	w5, [x22, #104]
  421a94:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x14e64>
  421a98:	add	x4, x4, #0x590
  421a9c:	mov	x3, #0x18                  	// #24
  421aa0:	mov	w2, #0x1                   	// #1
  421aa4:	mov	x1, x3
  421aa8:	add	x0, sp, #0x30
  421aac:	bl	404290 <__snprintf_chk@plt>
  421ab0:	mov	w2, #0x1                   	// #1
  421ab4:	add	x1, sp, #0x30
  421ab8:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  421abc:	add	x0, x0, #0x598
  421ac0:	bl	404100 <setenv@plt>
  421ac4:	cbnz	w0, 421bd8 <wcrtomb@plt+0x1cfb8>
  421ac8:	mov	x1, x21
  421acc:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  421ad0:	add	x0, x0, #0x5a8
  421ad4:	bl	420df0 <wcrtomb@plt+0x1c1d0>
  421ad8:	ldr	x1, [x22, #8]
  421adc:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  421ae0:	add	x0, x0, #0x5b8
  421ae4:	bl	420df0 <wcrtomb@plt+0x1c1d0>
  421ae8:	ldr	x1, [x22, #32]
  421aec:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  421af0:	add	x0, x0, #0x5c8
  421af4:	bl	420df0 <wcrtomb@plt+0x1c1d0>
  421af8:	ldr	x1, [x22, #40]
  421afc:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  421b00:	add	x0, x0, #0x5d8
  421b04:	bl	420df0 <wcrtomb@plt+0x1c1d0>
  421b08:	ldp	x1, x2, [x22, #216]
  421b0c:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  421b10:	add	x0, x0, #0x5e8
  421b14:	bl	420e1c <wcrtomb@plt+0x1c1fc>
  421b18:	ldp	x1, x2, [x22, #232]
  421b1c:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  421b20:	add	x0, x0, #0x5f8
  421b24:	bl	420e1c <wcrtomb@plt+0x1c1fc>
  421b28:	ldp	x1, x2, [x22, #248]
  421b2c:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  421b30:	add	x0, x0, #0x608
  421b34:	bl	420e1c <wcrtomb@plt+0x1c1fc>
  421b38:	ldr	x1, [x22, #136]
  421b3c:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  421b40:	add	x0, x0, #0x618
  421b44:	bl	420e60 <wcrtomb@plt+0x1c240>
  421b48:	ldr	w1, [x22, #112]
  421b4c:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  421b50:	add	x0, x0, #0x628
  421b54:	bl	420e60 <wcrtomb@plt+0x1c240>
  421b58:	ldr	w1, [x22, #116]
  421b5c:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  421b60:	add	x0, x0, #0x630
  421b64:	bl	420e60 <wcrtomb@plt+0x1c240>
  421b68:	cmp	w20, #0x68
  421b6c:	b.eq	421c0c <wcrtomb@plt+0x1cfec>  // b.none
  421b70:	b.hi	421bdc <wcrtomb@plt+0x1cfbc>  // b.pmore
  421b74:	sub	w20, w20, #0x62
  421b78:	and	w0, w20, #0xff
  421b7c:	cmp	w0, #0x1
  421b80:	b.hi	421be4 <wcrtomb@plt+0x1cfc4>  // b.pmore
  421b84:	ldr	x0, [x22, #120]
  421b88:	lsr	x1, x0, #12
  421b8c:	bfxil	x1, x0, #0, #8
  421b90:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  421b94:	add	x0, x0, #0x638
  421b98:	bl	420e60 <wcrtomb@plt+0x1c240>
  421b9c:	ldr	x0, [x22, #120]
  421ba0:	ubfx	w1, w0, #8, #12
  421ba4:	lsr	x0, x0, #32
  421ba8:	and	w0, w0, #0xfffff000
  421bac:	orr	w1, w0, w1
  421bb0:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  421bb4:	add	x0, x0, #0x648
  421bb8:	bl	420e60 <wcrtomb@plt+0x1c240>
  421bbc:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  421bc0:	add	x0, x0, #0x658
  421bc4:	bl	404930 <unsetenv@plt>
  421bc8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  421bcc:	ldr	x0, [x0, #552]
  421bd0:	bl	420a6c <wcrtomb@plt+0x1be4c>
  421bd4:	bl	40e5ec <wcrtomb@plt+0x99cc>
  421bd8:	bl	40e5ec <wcrtomb@plt+0x99cc>
  421bdc:	cmp	w20, #0x6c
  421be0:	b.eq	421c0c <wcrtomb@plt+0x1cfec>  // b.none
  421be4:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  421be8:	add	x0, x0, #0x638
  421bec:	bl	404930 <unsetenv@plt>
  421bf0:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  421bf4:	add	x0, x0, #0x648
  421bf8:	bl	404930 <unsetenv@plt>
  421bfc:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  421c00:	add	x0, x0, #0x658
  421c04:	bl	404930 <unsetenv@plt>
  421c08:	b	421bc8 <wcrtomb@plt+0x1cfa8>
  421c0c:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  421c10:	add	x0, x0, #0x638
  421c14:	bl	404930 <unsetenv@plt>
  421c18:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  421c1c:	add	x0, x0, #0x648
  421c20:	bl	404930 <unsetenv@plt>
  421c24:	ldr	x1, [x22, #24]
  421c28:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  421c2c:	add	x0, x0, #0x658
  421c30:	bl	420df0 <wcrtomb@plt+0x1c1d0>
  421c34:	b	421bc8 <wcrtomb@plt+0x1cfa8>
  421c38:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  421c3c:	ldr	w0, [x0, #2976]
  421c40:	tbnz	w0, #31, 421dd8 <wcrtomb@plt+0x1d1b8>
  421c44:	stp	x29, x30, [sp, #-48]!
  421c48:	mov	x29, sp
  421c4c:	str	x19, [sp, #16]
  421c50:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  421c54:	ldr	x1, [x0, #2968]
  421c58:	mov	w0, #0xd                   	// #13
  421c5c:	bl	404270 <signal@plt>
  421c60:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x3ee64>
  421c64:	add	x19, x19, #0xb18
  421c68:	mov	w2, #0x0                   	// #0
  421c6c:	add	x1, sp, #0x2c
  421c70:	ldr	w0, [x19, #136]
  421c74:	bl	404b60 <waitpid@plt>
  421c78:	cmn	w0, #0x1
  421c7c:	b.ne	421cac <wcrtomb@plt+0x1d08c>  // b.any
  421c80:	bl	404ad0 <__errno_location@plt>
  421c84:	ldr	w0, [x0]
  421c88:	cmp	w0, #0x4
  421c8c:	b.eq	421c68 <wcrtomb@plt+0x1d048>  // b.none
  421c90:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  421c94:	mov	w1, #0xffffffff            	// #-1
  421c98:	str	w1, [x0, #2976]
  421c9c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  421ca0:	ldr	x0, [x0, #552]
  421ca4:	bl	42a17c <wcrtomb@plt+0x2555c>
  421ca8:	b	421d80 <wcrtomb@plt+0x1d160>
  421cac:	ldr	w0, [sp, #44]
  421cb0:	tst	x0, #0x7f
  421cb4:	b.ne	421d1c <wcrtomb@plt+0x1d0fc>  // b.any
  421cb8:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  421cbc:	ldrb	w1, [x1, #513]
  421cc0:	cbnz	w1, 421d74 <wcrtomb@plt+0x1d154>
  421cc4:	tst	x0, #0xff00
  421cc8:	b.eq	421d74 <wcrtomb@plt+0x1d154>  // b.none
  421ccc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  421cd0:	ldr	x0, [x0, #944]
  421cd4:	cbz	x0, 421cdc <wcrtomb@plt+0x1d0bc>
  421cd8:	blr	x0
  421cdc:	mov	w2, #0x5                   	// #5
  421ce0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  421ce4:	add	x1, x1, #0x668
  421ce8:	mov	x0, #0x0                   	// #0
  421cec:	bl	4049c0 <dcgettext@plt>
  421cf0:	ldrb	w4, [sp, #45]
  421cf4:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  421cf8:	ldrsw	x3, [x1, #2976]
  421cfc:	mov	x2, x0
  421d00:	mov	w1, #0x0                   	// #0
  421d04:	mov	w0, #0x0                   	// #0
  421d08:	bl	404050 <error@plt>
  421d0c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  421d10:	mov	w1, #0x2                   	// #2
  421d14:	str	w1, [x0, #3392]
  421d18:	b	421d74 <wcrtomb@plt+0x1d154>
  421d1c:	and	w0, w0, #0x7f
  421d20:	add	w0, w0, #0x1
  421d24:	sbfx	x0, x0, #1, #7
  421d28:	cmp	w0, #0x0
  421d2c:	b.le	421d8c <wcrtomb@plt+0x1d16c>
  421d30:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  421d34:	ldr	x0, [x0, #944]
  421d38:	cbz	x0, 421d40 <wcrtomb@plt+0x1d120>
  421d3c:	blr	x0
  421d40:	mov	w2, #0x5                   	// #5
  421d44:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  421d48:	add	x1, x1, #0x688
  421d4c:	mov	x0, #0x0                   	// #0
  421d50:	bl	4049c0 <dcgettext@plt>
  421d54:	ldr	w4, [sp, #44]
  421d58:	and	w4, w4, #0x7f
  421d5c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  421d60:	ldrsw	x3, [x1, #2976]
  421d64:	mov	x2, x0
  421d68:	mov	w1, #0x0                   	// #0
  421d6c:	mov	w0, #0x0                   	// #0
  421d70:	bl	404050 <error@plt>
  421d74:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  421d78:	mov	w1, #0xffffffff            	// #-1
  421d7c:	str	w1, [x0, #2976]
  421d80:	ldr	x19, [sp, #16]
  421d84:	ldp	x29, x30, [sp], #48
  421d88:	ret
  421d8c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  421d90:	ldr	x0, [x0, #944]
  421d94:	cbz	x0, 421d9c <wcrtomb@plt+0x1d17c>
  421d98:	blr	x0
  421d9c:	mov	w2, #0x5                   	// #5
  421da0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  421da4:	add	x1, x1, #0x6b0
  421da8:	mov	x0, #0x0                   	// #0
  421dac:	bl	4049c0 <dcgettext@plt>
  421db0:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  421db4:	ldrsw	x3, [x1, #2976]
  421db8:	mov	x2, x0
  421dbc:	mov	w1, #0x0                   	// #0
  421dc0:	mov	w0, #0x0                   	// #0
  421dc4:	bl	404050 <error@plt>
  421dc8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  421dcc:	mov	w1, #0x2                   	// #2
  421dd0:	str	w1, [x0, #3392]
  421dd4:	b	421d74 <wcrtomb@plt+0x1d154>
  421dd8:	ret
  421ddc:	stp	x29, x30, [sp, #-128]!
  421de0:	mov	x29, sp
  421de4:	stp	x19, x20, [sp, #16]
  421de8:	stp	x21, x22, [sp, #32]
  421dec:	str	x23, [sp, #48]
  421df0:	mov	x22, x0
  421df4:	mov	w19, w1
  421df8:	add	x0, sp, #0x60
  421dfc:	bl	41ba38 <wcrtomb@plt+0x16e18>
  421e00:	mov	x1, #0x1                   	// #1
  421e04:	mov	w0, #0xd                   	// #13
  421e08:	bl	404270 <signal@plt>
  421e0c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  421e10:	str	x0, [x1, #2984]
  421e14:	bl	41b9f8 <wcrtomb@plt+0x16dd8>
  421e18:	cbz	w0, 421f44 <wcrtomb@plt+0x1d324>
  421e1c:	mov	w20, w0
  421e20:	str	xzr, [sp, #80]
  421e24:	str	xzr, [sp, #88]
  421e28:	ldr	w0, [sp, #100]
  421e2c:	bl	405984 <wcrtomb@plt+0xd64>
  421e30:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  421e34:	add	x1, x1, #0xc38
  421e38:	ldr	w0, [sp, #96]
  421e3c:	bl	404430 <fdopen@plt>
  421e40:	mov	x21, x0
  421e44:	mov	x3, x0
  421e48:	mov	w2, #0xa                   	// #10
  421e4c:	add	x1, sp, #0x58
  421e50:	add	x0, sp, #0x50
  421e54:	bl	404b40 <__getdelim@plt>
  421e58:	mov	x19, x0
  421e5c:	mov	w23, w0
  421e60:	mov	x0, x21
  421e64:	bl	4042a0 <fclose@plt>
  421e68:	cmp	w19, #0x0
  421e6c:	b.le	421e84 <wcrtomb@plt+0x1d264>
  421e70:	ldr	x0, [sp, #80]
  421e74:	add	x1, x0, w19, sxtw
  421e78:	ldurb	w1, [x1, #-1]
  421e7c:	cmp	w1, #0xa
  421e80:	b.eq	421ed0 <wcrtomb@plt+0x1d2b0>  // b.none
  421e84:	mov	w2, #0x0                   	// #0
  421e88:	add	x1, sp, #0x4c
  421e8c:	mov	w0, w20
  421e90:	bl	404b60 <waitpid@plt>
  421e94:	mov	w19, w0
  421e98:	cmn	w0, #0x1
  421e9c:	b.ne	421edc <wcrtomb@plt+0x1d2bc>  // b.any
  421ea0:	bl	404ad0 <__errno_location@plt>
  421ea4:	ldr	w1, [x0]
  421ea8:	cmp	w1, #0x4
  421eac:	b.eq	421e84 <wcrtomb@plt+0x1d264>  // b.none
  421eb0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  421eb4:	ldr	x1, [x0, #2984]
  421eb8:	mov	w0, #0xd                   	// #13
  421ebc:	bl	404270 <signal@plt>
  421ec0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  421ec4:	ldr	x0, [x0, #704]
  421ec8:	bl	42a17c <wcrtomb@plt+0x2555c>
  421ecc:	b	421f10 <wcrtomb@plt+0x1d2f0>
  421ed0:	sub	w23, w19, #0x1
  421ed4:	strb	wzr, [x0, w23, sxtw]
  421ed8:	b	421e84 <wcrtomb@plt+0x1d264>
  421edc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  421ee0:	ldr	x1, [x0, #2984]
  421ee4:	mov	w0, #0xd                   	// #13
  421ee8:	bl	404270 <signal@plt>
  421eec:	ldr	w0, [sp, #76]
  421ef0:	tst	x0, #0x7f
  421ef4:	b.ne	421f34 <wcrtomb@plt+0x1d314>  // b.any
  421ef8:	tst	x0, #0xff00
  421efc:	ccmp	w23, #0x0, #0x4, eq  // eq = none
  421f00:	b.gt	421f28 <wcrtomb@plt+0x1d308>
  421f04:	ldr	x0, [sp, #80]
  421f08:	bl	4047c0 <free@plt>
  421f0c:	ldrb	w19, [sp, #77]
  421f10:	mov	w0, w19
  421f14:	ldp	x19, x20, [sp, #16]
  421f18:	ldp	x21, x22, [sp, #32]
  421f1c:	ldr	x23, [sp, #48]
  421f20:	ldp	x29, x30, [sp], #128
  421f24:	ret
  421f28:	ldr	x0, [sp, #80]
  421f2c:	str	x0, [x22]
  421f30:	b	421f0c <wcrtomb@plt+0x1d2ec>
  421f34:	ldr	x0, [sp, #80]
  421f38:	bl	4047c0 <free@plt>
  421f3c:	mov	w19, #0xffffffff            	// #-1
  421f40:	b	421f10 <wcrtomb@plt+0x1d2f0>
  421f44:	mov	w2, #0x1                   	// #1
  421f48:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  421f4c:	add	x1, x1, #0x938
  421f50:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  421f54:	add	x0, x0, #0x528
  421f58:	bl	404100 <setenv@plt>
  421f5c:	mov	w2, #0x1                   	// #1
  421f60:	ldr	x1, [x22]
  421f64:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  421f68:	add	x0, x0, #0x538
  421f6c:	bl	404100 <setenv@plt>
  421f70:	add	x1, sp, #0x68
  421f74:	sxtw	x0, w19
  421f78:	bl	438ce8 <argp_parse@@Base+0x55a8>
  421f7c:	mov	w2, #0x1                   	// #1
  421f80:	mov	x1, x0
  421f84:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  421f88:	add	x0, x0, #0x548
  421f8c:	bl	404100 <setenv@plt>
  421f90:	add	x1, sp, #0x68
  421f94:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  421f98:	ldrsw	x0, [x0, #684]
  421f9c:	bl	438ce8 <argp_parse@@Base+0x55a8>
  421fa0:	mov	w2, #0x1                   	// #1
  421fa4:	mov	x1, x0
  421fa8:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  421fac:	add	x0, x0, #0x558
  421fb0:	bl	404100 <setenv@plt>
  421fb4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  421fb8:	ldr	w0, [x0, #796]
  421fbc:	bl	422978 <wcrtomb@plt+0x1dd58>
  421fc0:	mov	w2, #0x1                   	// #1
  421fc4:	mov	x1, x0
  421fc8:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  421fcc:	add	x0, x0, #0x6d8
  421fd0:	bl	404100 <setenv@plt>
  421fd4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  421fd8:	ldr	w0, [x0, #3984]
  421fdc:	cbnz	w0, 421fe8 <wcrtomb@plt+0x1d3c8>
  421fe0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  421fe4:	ldr	w0, [x0, #752]
  421fe8:	bl	422420 <wcrtomb@plt+0x1d800>
  421fec:	mov	w2, #0x1                   	// #1
  421ff0:	mov	x1, x0
  421ff4:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  421ff8:	add	x0, x0, #0x570
  421ffc:	bl	404100 <setenv@plt>
  422000:	add	x1, sp, #0x68
  422004:	ldrsw	x0, [sp, #100]
  422008:	bl	438ce8 <argp_parse@@Base+0x55a8>
  42200c:	mov	w2, #0x1                   	// #1
  422010:	mov	x1, x0
  422014:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  422018:	add	x0, x0, #0x6e8
  42201c:	bl	404100 <setenv@plt>
  422020:	ldr	w0, [sp, #96]
  422024:	bl	405984 <wcrtomb@plt+0xd64>
  422028:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42202c:	ldr	x0, [x0, #704]
  422030:	bl	420a6c <wcrtomb@plt+0x1be4c>
  422034:	stp	x29, x30, [sp, #-80]!
  422038:	mov	x29, sp
  42203c:	stp	x19, x20, [sp, #16]
  422040:	stp	x21, x22, [sp, #32]
  422044:	mov	x22, x0
  422048:	mov	x21, x1
  42204c:	mov	w20, w2
  422050:	bl	41b9f8 <wcrtomb@plt+0x16dd8>
  422054:	cbz	w0, 42209c <wcrtomb@plt+0x1d47c>
  422058:	mov	w19, w0
  42205c:	mov	w2, #0x0                   	// #0
  422060:	add	x1, sp, #0x34
  422064:	mov	w0, w19
  422068:	bl	404b60 <waitpid@plt>
  42206c:	cmn	w0, #0x1
  422070:	b.ne	42208c <wcrtomb@plt+0x1d46c>  // b.any
  422074:	bl	404ad0 <__errno_location@plt>
  422078:	ldr	w1, [x0]
  42207c:	cmp	w1, #0x4
  422080:	b.eq	42205c <wcrtomb@plt+0x1d43c>  // b.none
  422084:	mov	x0, x22
  422088:	bl	42a17c <wcrtomb@plt+0x2555c>
  42208c:	ldp	x19, x20, [sp, #16]
  422090:	ldp	x21, x22, [sp, #32]
  422094:	ldp	x29, x30, [sp], #80
  422098:	ret
  42209c:	mov	w2, #0x1                   	// #1
  4220a0:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  4220a4:	add	x1, x1, #0x938
  4220a8:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  4220ac:	add	x0, x0, #0x528
  4220b0:	bl	404100 <setenv@plt>
  4220b4:	mov	w2, #0x1                   	// #1
  4220b8:	mov	x1, x21
  4220bc:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  4220c0:	add	x0, x0, #0x538
  4220c4:	bl	404100 <setenv@plt>
  4220c8:	add	x1, sp, #0x38
  4220cc:	sxtw	x0, w20
  4220d0:	bl	438ce8 <argp_parse@@Base+0x55a8>
  4220d4:	mov	w2, #0x1                   	// #1
  4220d8:	mov	x1, x0
  4220dc:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  4220e0:	add	x0, x0, #0x6f0
  4220e4:	bl	404100 <setenv@plt>
  4220e8:	add	x1, sp, #0x38
  4220ec:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4220f0:	ldrsw	x0, [x0, #684]
  4220f4:	bl	438ce8 <argp_parse@@Base+0x55a8>
  4220f8:	mov	w2, #0x1                   	// #1
  4220fc:	mov	x1, x0
  422100:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  422104:	add	x0, x0, #0x558
  422108:	bl	404100 <setenv@plt>
  42210c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  422110:	ldr	w0, [x0, #796]
  422114:	bl	422978 <wcrtomb@plt+0x1dd58>
  422118:	mov	w2, #0x1                   	// #1
  42211c:	mov	x1, x0
  422120:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  422124:	add	x0, x0, #0x6d8
  422128:	bl	404100 <setenv@plt>
  42212c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  422130:	ldr	w0, [x0, #3984]
  422134:	cbnz	w0, 422140 <wcrtomb@plt+0x1d520>
  422138:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42213c:	ldr	w0, [x0, #752]
  422140:	bl	422420 <wcrtomb@plt+0x1d800>
  422144:	mov	w2, #0x1                   	// #1
  422148:	mov	x1, x0
  42214c:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  422150:	add	x0, x0, #0x570
  422154:	bl	404100 <setenv@plt>
  422158:	mov	x0, x22
  42215c:	bl	420a6c <wcrtomb@plt+0x1be4c>
  422160:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  422164:	add	x1, x1, #0xbb0
  422168:	ldr	x0, [x1, w0, sxtw #3]
  42216c:	cbz	x0, 422180 <wcrtomb@plt+0x1d560>
  422170:	ldr	w0, [x0]
  422174:	cmp	w0, #0x1
  422178:	cset	w0, eq  // eq = none
  42217c:	ret
  422180:	mov	w0, #0x0                   	// #0
  422184:	b	42217c <wcrtomb@plt+0x1d55c>
  422188:	b	42219c <wcrtomb@plt+0x1d57c>
  42218c:	ldr	w2, [x0, #8]
  422190:	cmp	w2, w1
  422194:	b.eq	4221c8 <wcrtomb@plt+0x1d5a8>  // b.none
  422198:	add	x0, x0, #0x30
  42219c:	ldr	x2, [x0]
  4221a0:	cbnz	x2, 42218c <wcrtomb@plt+0x1d56c>
  4221a4:	ldr	w2, [x0, #8]
  4221a8:	cbnz	w2, 42218c <wcrtomb@plt+0x1d56c>
  4221ac:	ldr	x2, [x0, #16]
  4221b0:	cbnz	x2, 42218c <wcrtomb@plt+0x1d56c>
  4221b4:	ldr	w2, [x0, #24]
  4221b8:	cbnz	w2, 42218c <wcrtomb@plt+0x1d56c>
  4221bc:	ldr	x2, [x0, #32]
  4221c0:	cbnz	x2, 42218c <wcrtomb@plt+0x1d56c>
  4221c4:	mov	x0, x2
  4221c8:	ret
  4221cc:	mov	x2, x0
  4221d0:	ldr	w3, [x0]
  4221d4:	ldr	w0, [x1]
  4221d8:	cmp	w3, w0
  4221dc:	b.ne	422210 <wcrtomb@plt+0x1d5f0>  // b.any
  4221e0:	mov	w0, #0x1                   	// #1
  4221e4:	cmp	w3, w0
  4221e8:	b.eq	422218 <wcrtomb@plt+0x1d5f8>  // b.none
  4221ec:	stp	x29, x30, [sp, #-16]!
  4221f0:	mov	x29, sp
  4221f4:	ldr	x1, [x1, #8]
  4221f8:	ldr	x0, [x2, #8]
  4221fc:	bl	404720 <strcmp@plt>
  422200:	cmp	w0, #0x0
  422204:	cset	w0, eq  // eq = none
  422208:	ldp	x29, x30, [sp], #16
  42220c:	ret
  422210:	mov	w0, #0x0                   	// #0
  422214:	ret
  422218:	ret
  42221c:	stp	x29, x30, [sp, #-80]!
  422220:	mov	x29, sp
  422224:	stp	x19, x20, [sp, #16]
  422228:	stp	x21, x22, [sp, #32]
  42222c:	mov	x20, x0
  422230:	mov	x22, x1
  422234:	mov	x21, x2
  422238:	mov	x3, #0xffffffffffffffff    	// #-1
  42223c:	str	x3, [sp, #72]
  422240:	mov	w1, #0x3a                  	// #58
  422244:	bl	404870 <strchr@plt>
  422248:	cbz	x0, 4222dc <wcrtomb@plt+0x1d6bc>
  42224c:	mov	x19, x0
  422250:	strb	wzr, [x19], #1
  422254:	ldrb	w0, [x20]
  422258:	cmp	w0, #0x0
  42225c:	csel	x20, x20, xzr, ne  // ne = any
  422260:	adrp	x4, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  422264:	add	x4, x4, #0x7f8
  422268:	add	x3, sp, #0x48
  42226c:	mov	w2, #0xa                   	// #10
  422270:	add	x1, sp, #0x40
  422274:	mov	x0, x19
  422278:	bl	440240 <argp_parse@@Base+0xcb00>
  42227c:	cbnz	w0, 42228c <wcrtomb@plt+0x1d66c>
  422280:	ldr	x0, [sp, #72]
  422284:	cmp	x0, x22
  422288:	b.ls	4222f0 <wcrtomb@plt+0x1d6d0>  // b.plast
  42228c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  422290:	ldr	x0, [x0, #944]
  422294:	cbz	x0, 42229c <wcrtomb@plt+0x1d67c>
  422298:	blr	x0
  42229c:	mov	x0, x19
  4222a0:	bl	43efc4 <argp_parse@@Base+0xb884>
  4222a4:	mov	x19, x0
  4222a8:	mov	w2, #0x5                   	// #5
  4222ac:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  4222b0:	add	x1, x1, #0x710
  4222b4:	mov	x0, #0x0                   	// #0
  4222b8:	bl	4049c0 <dcgettext@plt>
  4222bc:	mov	x4, x0
  4222c0:	mov	x3, x19
  4222c4:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x12e64>
  4222c8:	add	x2, x2, #0x6c8
  4222cc:	mov	w1, #0x0                   	// #0
  4222d0:	mov	w0, #0x0                   	// #0
  4222d4:	bl	404050 <error@plt>
  4222d8:	bl	40e5ac <wcrtomb@plt+0x998c>
  4222dc:	ldrb	w0, [x20]
  4222e0:	sub	w0, w0, #0x30
  4222e4:	and	w0, w0, #0xff
  4222e8:	cmp	w0, #0x9
  4222ec:	b.ls	42230c <wcrtomb@plt+0x1d6ec>  // b.plast
  4222f0:	cbz	x20, 4222f8 <wcrtomb@plt+0x1d6d8>
  4222f4:	str	x20, [x21]
  4222f8:	ldr	x0, [sp, #72]
  4222fc:	ldp	x19, x20, [sp, #16]
  422300:	ldp	x21, x22, [sp, #32]
  422304:	ldp	x29, x30, [sp], #80
  422308:	ret
  42230c:	adrp	x4, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  422310:	add	x4, x4, #0x7f8
  422314:	add	x3, sp, #0x38
  422318:	mov	w2, #0xa                   	// #10
  42231c:	add	x1, sp, #0x40
  422320:	mov	x0, x20
  422324:	bl	440240 <argp_parse@@Base+0xcb00>
  422328:	cbz	w0, 42233c <wcrtomb@plt+0x1d71c>
  42232c:	cmp	w0, #0x1
  422330:	b.ne	4222f4 <wcrtomb@plt+0x1d6d4>  // b.any
  422334:	mov	x19, x20
  422338:	b	42228c <wcrtomb@plt+0x1d66c>
  42233c:	ldr	x0, [sp, #56]
  422340:	cmp	x0, x22
  422344:	b.hi	422334 <wcrtomb@plt+0x1d714>  // b.pmore
  422348:	str	x0, [sp, #72]
  42234c:	b	4222f8 <wcrtomb@plt+0x1d6d8>
  422350:	stp	x29, x30, [sp, #-48]!
  422354:	mov	x29, sp
  422358:	stp	x19, x20, [sp, #16]
  42235c:	stp	x21, x22, [sp, #32]
  422360:	cmp	w0, #0x9
  422364:	b.hi	4223e0 <wcrtomb@plt+0x1d7c0>  // b.pmore
  422368:	mov	w20, w0
  42236c:	mov	x21, x1
  422370:	ldr	x1, [x1, #8]
  422374:	mov	x0, #0x20                  	// #32
  422378:	cbz	x1, 422388 <wcrtomb@plt+0x1d768>
  42237c:	mov	x0, x1
  422380:	bl	403ff0 <strlen@plt>
  422384:	add	x0, x0, #0x21
  422388:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  42238c:	mov	x19, x0
  422390:	ldr	x1, [x21, #8]
  422394:	cbz	x1, 4223e4 <wcrtomb@plt+0x1d7c4>
  422398:	add	x22, x0, #0x20
  42239c:	mov	x0, x22
  4223a0:	bl	404910 <strcpy@plt>
  4223a4:	str	x22, [x19, #8]
  4223a8:	ldr	w0, [x21]
  4223ac:	str	w0, [x19]
  4223b0:	ldr	x0, [x21, #16]
  4223b4:	str	x0, [x19, #16]
  4223b8:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4223bc:	add	x1, x1, #0xbb0
  4223c0:	mov	w20, w20
  4223c4:	ldr	x0, [x1, x20, lsl #3]
  4223c8:	str	x0, [x19, #24]
  4223cc:	str	x19, [x1, x20, lsl #3]
  4223d0:	ldp	x19, x20, [sp, #16]
  4223d4:	ldp	x21, x22, [sp, #32]
  4223d8:	ldp	x29, x30, [sp], #48
  4223dc:	ret
  4223e0:	bl	404660 <abort@plt>
  4223e4:	str	xzr, [x0, #8]
  4223e8:	b	4223a8 <wcrtomb@plt+0x1d788>
  4223ec:	stp	x29, x30, [sp, #-32]!
  4223f0:	mov	x29, sp
  4223f4:	str	x19, [sp, #16]
  4223f8:	mov	w19, w0
  4223fc:	bl	405494 <wcrtomb@plt+0x874>
  422400:	bl	4057ec <wcrtomb@plt+0xbcc>
  422404:	adrp	x1, 422000 <wcrtomb@plt+0x1d3e0>
  422408:	add	x1, x1, #0x3ec
  42240c:	mov	w0, w19
  422410:	bl	404270 <signal@plt>
  422414:	ldr	x19, [sp, #16]
  422418:	ldp	x29, x30, [sp], #32
  42241c:	ret
  422420:	mov	w3, w0
  422424:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x17e64>
  422428:	add	x1, x1, #0x950
  42242c:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x14e64>
  422430:	add	x0, x2, #0x730
  422434:	ldr	w2, [x1, #8]
  422438:	cmp	w2, w3
  42243c:	b.eq	422450 <wcrtomb@plt+0x1d830>  // b.none
  422440:	ldr	x0, [x1, #16]!
  422444:	cbnz	x0, 422434 <wcrtomb@plt+0x1d814>
  422448:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  42244c:	add	x0, x0, #0x738
  422450:	ret
  422454:	stp	x29, x30, [sp, #-16]!
  422458:	mov	x29, sp
  42245c:	mov	w0, #0x6                   	// #6
  422460:	bl	422420 <wcrtomb@plt+0x1d800>
  422464:	adrp	x5, 456000 <_obstack_memory_used@@Base+0x14e64>
  422468:	add	x5, x5, #0x748
  42246c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1be64>
  422470:	ldr	x4, [x1, #2952]
  422474:	mov	w3, #0x14                  	// #20
  422478:	adrp	x2, 452000 <_obstack_memory_used@@Base+0x10e64>
  42247c:	add	x2, x2, #0xca8
  422480:	mov	x1, x0
  422484:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  422488:	add	x0, x0, #0x760
  42248c:	bl	440620 <argp_parse@@Base+0xcee0>
  422490:	ldp	x29, x30, [sp], #16
  422494:	ret
  422498:	stp	x29, x30, [sp, #-176]!
  42249c:	mov	x29, sp
  4224a0:	stp	x19, x20, [sp, #16]
  4224a4:	cmp	w0, #0x114
  4224a8:	b.eq	422684 <wcrtomb@plt+0x1da64>  // b.none
  4224ac:	b.le	422598 <wcrtomb@plt+0x1d978>
  4224b0:	cmp	w0, #0x14f
  4224b4:	b.eq	4226fc <wcrtomb@plt+0x1dadc>  // b.none
  4224b8:	b.le	422614 <wcrtomb@plt+0x1d9f4>
  4224bc:	mov	w2, #0x4                   	// #4
  4224c0:	movk	w2, #0x200, lsl #16
  4224c4:	mov	x19, x1
  4224c8:	cmp	w0, w2
  4224cc:	b.ne	422674 <wcrtomb@plt+0x1da54>  // b.any
  4224d0:	stp	x25, x26, [sp, #64]
  4224d4:	adrp	x4, 404000 <fputs@plt>
  4224d8:	add	x4, x4, #0x7c0
  4224dc:	adrp	x3, 43f000 <argp_parse@@Base+0xb8c0>
  4224e0:	add	x3, x3, #0xef4
  4224e4:	mov	x2, #0x0                   	// #0
  4224e8:	mov	x1, #0x0                   	// #0
  4224ec:	add	x0, sp, #0x58
  4224f0:	bl	440f78 <_obstack_begin@@Base>
  4224f4:	mov	w2, #0x5                   	// #5
  4224f8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  4224fc:	add	x1, x1, #0x7c0
  422500:	mov	x0, #0x0                   	// #0
  422504:	bl	4049c0 <dcgettext@plt>
  422508:	mov	x20, x0
  42250c:	bl	403ff0 <strlen@plt>
  422510:	mov	x19, x0
  422514:	ldr	x0, [sp, #120]
  422518:	ldr	x1, [sp, #112]
  42251c:	sub	x0, x0, x1
  422520:	cmp	x19, x0
  422524:	b.hi	422724 <wcrtomb@plt+0x1db04>  // b.pmore
  422528:	mov	x2, x19
  42252c:	mov	x1, x20
  422530:	ldr	x0, [sp, #112]
  422534:	bl	403f70 <memcpy@plt>
  422538:	ldr	x0, [sp, #112]
  42253c:	add	x19, x0, x19
  422540:	str	x19, [sp, #112]
  422544:	ldr	x0, [sp, #120]
  422548:	sub	x19, x0, x19
  42254c:	cmp	x19, #0x1
  422550:	b.ls	422734 <wcrtomb@plt+0x1db14>  // b.plast
  422554:	ldr	x0, [sp, #112]
  422558:	mov	w1, #0xa0a                 	// #2570
  42255c:	strh	w1, [x0]
  422560:	ldr	x0, [sp, #112]
  422564:	add	x0, x0, #0x2
  422568:	str	x0, [sp, #112]
  42256c:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x1be64>
  422570:	ldr	x26, [x0, #2896]
  422574:	cbz	x26, 422800 <wcrtomb@plt+0x1dbe0>
  422578:	stp	x21, x22, [sp, #32]
  42257c:	stp	x23, x24, [sp, #48]
  422580:	add	x21, x0, #0xb50
  422584:	mov	x24, #0x2                   	// #2
  422588:	mov	w23, #0x2020                	// #8224
  42258c:	mov	x25, #0x1                   	// #1
  422590:	mov	w22, #0xa                   	// #10
  422594:	b	4227a0 <wcrtomb@plt+0x1db80>
  422598:	cmp	w0, #0x6a
  42259c:	b.eq	422650 <wcrtomb@plt+0x1da30>  // b.none
  4225a0:	b.le	4225d8 <wcrtomb@plt+0x1d9b8>
  4225a4:	mov	x19, x1
  4225a8:	cmp	w0, #0x7a
  4225ac:	b.ne	422674 <wcrtomb@plt+0x1da54>  // b.any
  4225b0:	mov	w2, #0x5                   	// #5
  4225b4:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  4225b8:	add	x1, x1, #0x7a0
  4225bc:	mov	x0, #0x0                   	// #0
  4225c0:	bl	4049c0 <dcgettext@plt>
  4225c4:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  4225c8:	add	x1, x1, #0x90
  4225cc:	bl	440620 <argp_parse@@Base+0xcee0>
  4225d0:	mov	x19, x0
  4225d4:	b	422674 <wcrtomb@plt+0x1da54>
  4225d8:	cmp	w0, #0x4a
  4225dc:	b.eq	4226d4 <wcrtomb@plt+0x1dab4>  // b.none
  4225e0:	mov	x19, x1
  4225e4:	cmp	w0, #0x5a
  4225e8:	b.ne	422674 <wcrtomb@plt+0x1da54>  // b.any
  4225ec:	mov	w2, #0x5                   	// #5
  4225f0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  4225f4:	add	x1, x1, #0x7a0
  4225f8:	mov	x0, #0x0                   	// #0
  4225fc:	bl	4049c0 <dcgettext@plt>
  422600:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x16e64>
  422604:	add	x1, x1, #0xc00
  422608:	bl	440620 <argp_parse@@Base+0xcee0>
  42260c:	mov	x19, x0
  422610:	b	422674 <wcrtomb@plt+0x1da54>
  422614:	cmp	w0, #0x115
  422618:	b.eq	4226ac <wcrtomb@plt+0x1da8c>  // b.none
  42261c:	mov	x19, x1
  422620:	cmp	w0, #0x116
  422624:	b.ne	422674 <wcrtomb@plt+0x1da54>  // b.any
  422628:	mov	w2, #0x5                   	// #5
  42262c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  422630:	add	x1, x1, #0x7a0
  422634:	mov	x0, #0x0                   	// #0
  422638:	bl	4049c0 <dcgettext@plt>
  42263c:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  422640:	add	x1, x1, #0xe8
  422644:	bl	440620 <argp_parse@@Base+0xcee0>
  422648:	mov	x19, x0
  42264c:	b	422674 <wcrtomb@plt+0x1da54>
  422650:	mov	w2, #0x5                   	// #5
  422654:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  422658:	add	x1, x1, #0x7a0
  42265c:	mov	x0, #0x0                   	// #0
  422660:	bl	4049c0 <dcgettext@plt>
  422664:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  422668:	add	x1, x1, #0xa0
  42266c:	bl	440620 <argp_parse@@Base+0xcee0>
  422670:	mov	x19, x0
  422674:	mov	x0, x19
  422678:	ldp	x19, x20, [sp, #16]
  42267c:	ldp	x29, x30, [sp], #176
  422680:	ret
  422684:	mov	w2, #0x5                   	// #5
  422688:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  42268c:	add	x1, x1, #0x7a0
  422690:	mov	x0, #0x0                   	// #0
  422694:	bl	4049c0 <dcgettext@plt>
  422698:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  42269c:	add	x1, x1, #0xb8
  4226a0:	bl	440620 <argp_parse@@Base+0xcee0>
  4226a4:	mov	x19, x0
  4226a8:	b	422674 <wcrtomb@plt+0x1da54>
  4226ac:	mov	w2, #0x5                   	// #5
  4226b0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  4226b4:	add	x1, x1, #0x7a0
  4226b8:	mov	x0, #0x0                   	// #0
  4226bc:	bl	4049c0 <dcgettext@plt>
  4226c0:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  4226c4:	add	x1, x1, #0xc8
  4226c8:	bl	440620 <argp_parse@@Base+0xcee0>
  4226cc:	mov	x19, x0
  4226d0:	b	422674 <wcrtomb@plt+0x1da54>
  4226d4:	mov	w2, #0x5                   	// #5
  4226d8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  4226dc:	add	x1, x1, #0x7a0
  4226e0:	mov	x0, #0x0                   	// #0
  4226e4:	bl	4049c0 <dcgettext@plt>
  4226e8:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  4226ec:	add	x1, x1, #0xd8
  4226f0:	bl	440620 <argp_parse@@Base+0xcee0>
  4226f4:	mov	x19, x0
  4226f8:	b	422674 <wcrtomb@plt+0x1da54>
  4226fc:	mov	w2, #0x5                   	// #5
  422700:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  422704:	add	x1, x1, #0x7a0
  422708:	mov	x0, #0x0                   	// #0
  42270c:	bl	4049c0 <dcgettext@plt>
  422710:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  422714:	add	x1, x1, #0xf8
  422718:	bl	440620 <argp_parse@@Base+0xcee0>
  42271c:	mov	x19, x0
  422720:	b	422674 <wcrtomb@plt+0x1da54>
  422724:	mov	x1, x19
  422728:	add	x0, sp, #0x58
  42272c:	bl	440fcc <_obstack_newchunk@@Base>
  422730:	b	422528 <wcrtomb@plt+0x1d908>
  422734:	mov	x1, #0x2                   	// #2
  422738:	add	x0, sp, #0x58
  42273c:	bl	440fcc <_obstack_newchunk@@Base>
  422740:	b	422554 <wcrtomb@plt+0x1d934>
  422744:	mov	x1, x24
  422748:	add	x0, sp, #0x58
  42274c:	bl	440fcc <_obstack_newchunk@@Base>
  422750:	b	4227b4 <wcrtomb@plt+0x1db94>
  422754:	mov	x1, x19
  422758:	add	x0, sp, #0x58
  42275c:	bl	440fcc <_obstack_newchunk@@Base>
  422760:	mov	x2, x19
  422764:	mov	x1, x26
  422768:	ldr	x0, [sp, #112]
  42276c:	bl	403f70 <memcpy@plt>
  422770:	ldr	x0, [sp, #112]
  422774:	add	x19, x0, x19
  422778:	str	x19, [sp, #112]
  42277c:	ldr	x0, [sp, #120]
  422780:	cmp	x19, x0
  422784:	b.eq	4227e8 <wcrtomb@plt+0x1dbc8>  // b.none
  422788:	ldr	x0, [sp, #112]
  42278c:	add	x1, x0, #0x1
  422790:	str	x1, [sp, #112]
  422794:	strb	w22, [x0]
  422798:	ldr	x26, [x21, #8]!
  42279c:	cbz	x26, 4227f8 <wcrtomb@plt+0x1dbd8>
  4227a0:	ldr	x0, [sp, #120]
  4227a4:	ldr	x1, [sp, #112]
  4227a8:	sub	x0, x0, x1
  4227ac:	cmp	x0, #0x1
  4227b0:	b.ls	422744 <wcrtomb@plt+0x1db24>  // b.plast
  4227b4:	ldr	x0, [sp, #112]
  4227b8:	strh	w23, [x0]
  4227bc:	ldr	x20, [sp, #112]
  4227c0:	add	x20, x20, #0x2
  4227c4:	str	x20, [sp, #112]
  4227c8:	mov	x0, x26
  4227cc:	bl	403ff0 <strlen@plt>
  4227d0:	mov	x19, x0
  4227d4:	ldr	x0, [sp, #120]
  4227d8:	sub	x20, x0, x20
  4227dc:	cmp	x19, x20
  4227e0:	b.ls	422760 <wcrtomb@plt+0x1db40>  // b.plast
  4227e4:	b	422754 <wcrtomb@plt+0x1db34>
  4227e8:	mov	x1, x25
  4227ec:	add	x0, sp, #0x58
  4227f0:	bl	440fcc <_obstack_newchunk@@Base>
  4227f4:	b	422788 <wcrtomb@plt+0x1db68>
  4227f8:	ldp	x21, x22, [sp, #32]
  4227fc:	ldp	x23, x24, [sp, #48]
  422800:	mov	w2, #0x5                   	// #5
  422804:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  422808:	add	x1, x1, #0x7f8
  42280c:	mov	x0, #0x0                   	// #0
  422810:	bl	4049c0 <dcgettext@plt>
  422814:	mov	x20, x0
  422818:	bl	403ff0 <strlen@plt>
  42281c:	mov	x19, x0
  422820:	ldr	x0, [sp, #120]
  422824:	ldr	x1, [sp, #112]
  422828:	sub	x0, x0, x1
  42282c:	cmp	x19, x0
  422830:	b.hi	422928 <wcrtomb@plt+0x1dd08>  // b.pmore
  422834:	mov	x2, x19
  422838:	mov	x1, x20
  42283c:	ldr	x0, [sp, #112]
  422840:	bl	403f70 <memcpy@plt>
  422844:	ldr	x0, [sp, #112]
  422848:	add	x19, x0, x19
  42284c:	str	x19, [sp, #112]
  422850:	bl	422454 <wcrtomb@plt+0x1d834>
  422854:	mov	x20, x0
  422858:	bl	403ff0 <strlen@plt>
  42285c:	mov	x19, x0
  422860:	ldr	x0, [sp, #120]
  422864:	ldr	x1, [sp, #112]
  422868:	sub	x0, x0, x1
  42286c:	cmp	x19, x0
  422870:	b.hi	422938 <wcrtomb@plt+0x1dd18>  // b.pmore
  422874:	mov	x2, x19
  422878:	mov	x1, x20
  42287c:	ldr	x0, [sp, #112]
  422880:	bl	403f70 <memcpy@plt>
  422884:	ldr	x0, [sp, #112]
  422888:	add	x19, x0, x19
  42288c:	str	x19, [sp, #112]
  422890:	ldr	x0, [sp, #120]
  422894:	cmp	x19, x0
  422898:	b.eq	422948 <wcrtomb@plt+0x1dd28>  // b.none
  42289c:	ldr	x0, [sp, #112]
  4228a0:	add	x1, x0, #0x1
  4228a4:	str	x1, [sp, #112]
  4228a8:	mov	w1, #0xa                   	// #10
  4228ac:	strb	w1, [x0]
  4228b0:	ldr	x1, [sp, #120]
  4228b4:	ldr	x0, [sp, #112]
  4228b8:	cmp	x1, x0
  4228bc:	b.eq	422958 <wcrtomb@plt+0x1dd38>  // b.none
  4228c0:	ldr	x0, [sp, #112]
  4228c4:	add	x1, x0, #0x1
  4228c8:	str	x1, [sp, #112]
  4228cc:	strb	wzr, [x0]
  4228d0:	ldr	x0, [sp, #104]
  4228d4:	ldr	x2, [sp, #112]
  4228d8:	cmp	x2, x0
  4228dc:	b.eq	422968 <wcrtomb@plt+0x1dd48>  // b.none
  4228e0:	ldr	x1, [sp, #136]
  4228e4:	add	x2, x2, x1
  4228e8:	bic	x1, x2, x1
  4228ec:	ldr	x2, [sp, #96]
  4228f0:	ldr	x3, [sp, #120]
  4228f4:	sub	x4, x1, x2
  4228f8:	sub	x2, x3, x2
  4228fc:	cmp	x4, x2
  422900:	csel	x1, x1, x3, ls  // ls = plast
  422904:	str	x1, [sp, #112]
  422908:	str	x1, [sp, #104]
  42290c:	bl	440154 <argp_parse@@Base+0xca14>
  422910:	mov	x19, x0
  422914:	mov	x1, #0x0                   	// #0
  422918:	add	x0, sp, #0x58
  42291c:	bl	44111c <_obstack_free@@Base>
  422920:	ldp	x25, x26, [sp, #64]
  422924:	b	422674 <wcrtomb@plt+0x1da54>
  422928:	mov	x1, x19
  42292c:	add	x0, sp, #0x58
  422930:	bl	440fcc <_obstack_newchunk@@Base>
  422934:	b	422834 <wcrtomb@plt+0x1dc14>
  422938:	mov	x1, x19
  42293c:	add	x0, sp, #0x58
  422940:	bl	440fcc <_obstack_newchunk@@Base>
  422944:	b	422874 <wcrtomb@plt+0x1dc54>
  422948:	mov	x1, #0x1                   	// #1
  42294c:	add	x0, sp, #0x58
  422950:	bl	440fcc <_obstack_newchunk@@Base>
  422954:	b	42289c <wcrtomb@plt+0x1dc7c>
  422958:	mov	x1, #0x1                   	// #1
  42295c:	add	x0, sp, #0x58
  422960:	bl	440fcc <_obstack_newchunk@@Base>
  422964:	b	4228c0 <wcrtomb@plt+0x1dca0>
  422968:	ldrb	w1, [sp, #168]
  42296c:	orr	w1, w1, #0x2
  422970:	strb	w1, [sp, #168]
  422974:	b	4228e0 <wcrtomb@plt+0x1dcc0>
  422978:	cmp	w0, #0x4
  42297c:	b.eq	422a04 <wcrtomb@plt+0x1dde4>  // b.none
  422980:	mov	w2, w0
  422984:	b.ls	4229b0 <wcrtomb@plt+0x1dd90>  // b.plast
  422988:	cmp	w0, #0x7
  42298c:	b.eq	422a28 <wcrtomb@plt+0x1de08>  // b.none
  422990:	b.ls	4229dc <wcrtomb@plt+0x1ddbc>  // b.plast
  422994:	cmp	w0, #0x8
  422998:	b.eq	422a40 <wcrtomb@plt+0x1de20>  // b.none
  42299c:	cmp	w0, #0x9
  4229a0:	b.ne	4229f8 <wcrtomb@plt+0x1ddd8>  // b.any
  4229a4:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  4229a8:	add	x0, x0, #0x848
  4229ac:	ret
  4229b0:	cmp	w0, #0x2
  4229b4:	b.eq	422a10 <wcrtomb@plt+0x1ddf0>  // b.none
  4229b8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  4229bc:	add	x0, x1, #0x430
  4229c0:	b.hi	4229ac <wcrtomb@plt+0x1dd8c>  // b.pmore
  4229c4:	cbz	w2, 422a1c <wcrtomb@plt+0x1ddfc>
  4229c8:	cmp	w2, #0x1
  4229cc:	b.ne	4229f8 <wcrtomb@plt+0x1ddd8>  // b.any
  4229d0:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  4229d4:	add	x0, x0, #0x838
  4229d8:	ret
  4229dc:	cmp	w0, #0x5
  4229e0:	b.eq	422a34 <wcrtomb@plt+0x1de14>  // b.none
  4229e4:	cmp	w0, #0x6
  4229e8:	b.ne	4229f8 <wcrtomb@plt+0x1ddd8>  // b.any
  4229ec:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  4229f0:	add	x0, x0, #0x840
  4229f4:	ret
  4229f8:	stp	x29, x30, [sp, #-16]!
  4229fc:	mov	x29, sp
  422a00:	bl	404660 <abort@plt>
  422a04:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  422a08:	add	x0, x0, #0x820
  422a0c:	ret
  422a10:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  422a14:	add	x0, x0, #0x828
  422a18:	ret
  422a1c:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  422a20:	add	x0, x0, #0x738
  422a24:	ret
  422a28:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  422a2c:	add	x0, x0, #0x830
  422a30:	ret
  422a34:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  422a38:	add	x0, x0, #0x478
  422a3c:	ret
  422a40:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  422a44:	add	x0, x0, #0x818
  422a48:	ret
  422a4c:	stp	x29, x30, [sp, #-48]!
  422a50:	mov	x29, sp
  422a54:	stp	x19, x20, [sp, #16]
  422a58:	stp	x21, x22, [sp, #32]
  422a5c:	mov	x22, x0
  422a60:	mov	x2, #0x3                   	// #3
  422a64:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  422a68:	add	x1, x1, #0x858
  422a6c:	bl	4043c0 <strncmp@plt>
  422a70:	add	x21, x22, #0x3
  422a74:	cmp	w0, #0x0
  422a78:	csel	x21, x21, x22, eq  // eq = none
  422a7c:	adrp	x19, 459000 <_obstack_memory_used@@Base+0x17e64>
  422a80:	add	x19, x19, #0x950
  422a84:	add	x19, x19, #0x70
  422a88:	adrp	x20, 459000 <_obstack_memory_used@@Base+0x17e64>
  422a8c:	add	x20, x20, #0x950
  422a90:	add	x20, x20, #0xc0
  422a94:	mov	x1, x21
  422a98:	ldr	x0, [x19]
  422a9c:	bl	404720 <strcmp@plt>
  422aa0:	cbz	w0, 422aec <wcrtomb@plt+0x1decc>
  422aa4:	add	x19, x19, #0x10
  422aa8:	cmp	x19, x20
  422aac:	b.ne	422a94 <wcrtomb@plt+0x1de74>  // b.any
  422ab0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  422ab4:	ldr	x0, [x0, #944]
  422ab8:	cbz	x0, 422ac0 <wcrtomb@plt+0x1dea0>
  422abc:	blr	x0
  422ac0:	mov	w2, #0x5                   	// #5
  422ac4:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  422ac8:	add	x1, x1, #0x860
  422acc:	mov	x0, #0x0                   	// #0
  422ad0:	bl	4049c0 <dcgettext@plt>
  422ad4:	mov	x3, x22
  422ad8:	mov	x2, x0
  422adc:	mov	w1, #0x0                   	// #0
  422ae0:	mov	w0, #0x0                   	// #0
  422ae4:	bl	404050 <error@plt>
  422ae8:	bl	40e5ac <wcrtomb@plt+0x998c>
  422aec:	ldr	w0, [x19, #8]
  422af0:	ldp	x19, x20, [sp, #16]
  422af4:	ldp	x21, x22, [sp, #32]
  422af8:	ldp	x29, x30, [sp], #48
  422afc:	ret
  422b00:	stp	x29, x30, [sp, #-32]!
  422b04:	mov	x29, sp
  422b08:	str	x19, [sp, #16]
  422b0c:	mov	w19, w0
  422b10:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  422b14:	ldr	x3, [x0, #3480]
  422b18:	mov	w2, #0x4                   	// #4
  422b1c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  422b20:	ldr	x1, [x0, #1096]
  422b24:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x3ce64>
  422b28:	add	x0, x0, #0x170
  422b2c:	bl	432f28 <argp_help@@Base>
  422b30:	bl	4348cc <argp_parse@@Base+0x118c>
  422b34:	mov	w0, w19
  422b38:	bl	404020 <exit@plt>
  422b3c:	stp	x29, x30, [sp, #-32]!
  422b40:	mov	x29, sp
  422b44:	str	x19, [sp, #16]
  422b48:	mov	x19, x0
  422b4c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  422b50:	ldr	x0, [x0, #3072]
  422b54:	cbnz	x0, 422b6c <wcrtomb@plt+0x1df4c>
  422b58:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  422b5c:	str	x19, [x0, #3072]
  422b60:	ldr	x19, [sp, #16]
  422b64:	ldp	x29, x30, [sp], #32
  422b68:	ret
  422b6c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  422b70:	ldr	x0, [x0, #944]
  422b74:	cbz	x0, 422b7c <wcrtomb@plt+0x1df5c>
  422b78:	blr	x0
  422b7c:	mov	w2, #0x5                   	// #5
  422b80:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  422b84:	add	x1, x1, #0x878
  422b88:	mov	x0, #0x0                   	// #0
  422b8c:	bl	4049c0 <dcgettext@plt>
  422b90:	mov	x4, x19
  422b94:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  422b98:	ldr	x3, [x1, #3072]
  422b9c:	mov	x2, x0
  422ba0:	mov	w1, #0x0                   	// #0
  422ba4:	mov	w0, #0x0                   	// #0
  422ba8:	bl	404050 <error@plt>
  422bac:	mov	w0, #0x2                   	// #2
  422bb0:	bl	422b00 <wcrtomb@plt+0x1dee0>
  422bb4:	stp	x29, x30, [sp, #-64]!
  422bb8:	mov	x29, sp
  422bbc:	stp	x19, x20, [sp, #16]
  422bc0:	stp	x21, x22, [sp, #32]
  422bc4:	mov	x21, x0
  422bc8:	mov	x20, x1
  422bcc:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x3ee64>
  422bd0:	ldr	x2, [x2, #3080]
  422bd4:	cbz	x2, 422c54 <wcrtomb@plt+0x1e034>
  422bd8:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x3ee64>
  422bdc:	ldr	x22, [x19, #3864]
  422be0:	mov	x0, x20
  422be4:	bl	43f194 <argp_parse@@Base+0xba54>
  422be8:	mov	x4, x0
  422bec:	mov	x3, x21
  422bf0:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x14e64>
  422bf4:	add	x2, x2, #0x8b0
  422bf8:	mov	w1, #0x1                   	// #1
  422bfc:	mov	x0, x22
  422c00:	bl	404710 <__fprintf_chk@plt>
  422c04:	ldr	x0, [x19, #3864]
  422c08:	bl	4048d0 <fflush_unlocked@plt>
  422c0c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  422c10:	ldr	w0, [x0, #3088]
  422c14:	mov	w19, #0x0                   	// #0
  422c18:	cbz	w0, 422cbc <wcrtomb@plt+0x1e09c>
  422c1c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  422c20:	ldr	x0, [x0, #3864]
  422c24:	ldr	x1, [x0, #40]
  422c28:	ldr	x2, [x0, #48]
  422c2c:	cmp	x1, x2
  422c30:	b.cs	422d28 <wcrtomb@plt+0x1e108>  // b.hs, b.nlast
  422c34:	add	x2, x1, #0x1
  422c38:	str	x2, [x0, #40]
  422c3c:	mov	w0, #0xa                   	// #10
  422c40:	strb	w0, [x1]
  422c44:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  422c48:	ldr	x0, [x0, #3864]
  422c4c:	bl	4048d0 <fflush_unlocked@plt>
  422c50:	b	422d00 <wcrtomb@plt+0x1e0e0>
  422c54:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  422c58:	ldr	w0, [x0, #912]
  422c5c:	cbz	w0, 422c6c <wcrtomb@plt+0x1e04c>
  422c60:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  422c64:	ldr	x0, [x0, #3072]
  422c68:	cbz	x0, 422c9c <wcrtomb@plt+0x1e07c>
  422c6c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  422c70:	add	x1, x1, #0xc38
  422c74:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x10e64>
  422c78:	add	x0, x0, #0xac8
  422c7c:	bl	4042e0 <fopen@plt>
  422c80:	mov	x2, x0
  422c84:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  422c88:	str	x2, [x0, #3080]
  422c8c:	cbnz	x2, 422bd8 <wcrtomb@plt+0x1dfb8>
  422c90:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x10e64>
  422c94:	add	x0, x0, #0xac8
  422c98:	bl	429bbc <wcrtomb@plt+0x24f9c>
  422c9c:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  422ca0:	add	x0, x0, #0x8a8
  422ca4:	bl	422b3c <wcrtomb@plt+0x1df1c>
  422ca8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  422cac:	ldr	x1, [x0, #1112]
  422cb0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  422cb4:	str	x1, [x0, #3080]
  422cb8:	b	422bd8 <wcrtomb@plt+0x1dfb8>
  422cbc:	str	xzr, [sp, #48]
  422cc0:	str	xzr, [sp, #56]
  422cc4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  422cc8:	ldr	x3, [x0, #3080]
  422ccc:	mov	w2, #0xa                   	// #10
  422cd0:	add	x1, sp, #0x38
  422cd4:	add	x0, sp, #0x30
  422cd8:	bl	404b40 <__getdelim@plt>
  422cdc:	tbz	x0, #63, 422d14 <wcrtomb@plt+0x1e0f4>
  422ce0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  422ce4:	mov	w1, #0x1                   	// #1
  422ce8:	str	w1, [x0, #3088]
  422cec:	ldr	x0, [sp, #48]
  422cf0:	bl	4047c0 <free@plt>
  422cf4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  422cf8:	ldr	w0, [x0, #3088]
  422cfc:	cbnz	w0, 422c1c <wcrtomb@plt+0x1dffc>
  422d00:	mov	w0, w19
  422d04:	ldp	x19, x20, [sp, #16]
  422d08:	ldp	x21, x22, [sp, #32]
  422d0c:	ldp	x29, x30, [sp], #64
  422d10:	ret
  422d14:	ldr	x0, [sp, #48]
  422d18:	bl	404070 <rpmatch@plt>
  422d1c:	cmp	w0, #0x0
  422d20:	cset	w19, gt
  422d24:	b	422cec <wcrtomb@plt+0x1e0cc>
  422d28:	mov	w1, #0xa                   	// #10
  422d2c:	bl	404690 <__overflow@plt>
  422d30:	b	422c44 <wcrtomb@plt+0x1e024>
  422d34:	stp	x29, x30, [sp, #-192]!
  422d38:	mov	x29, sp
  422d3c:	stp	x19, x20, [sp, #16]
  422d40:	mov	x19, x2
  422d44:	mov	x20, x3
  422d48:	ldrb	w4, [x2]
  422d4c:	sub	w4, w4, #0x2e
  422d50:	and	w4, w4, #0xff
  422d54:	cmp	w4, #0x1
  422d58:	b.ls	422de8 <wcrtomb@plt+0x1e1c8>  // b.plast
  422d5c:	stp	x21, x22, [sp, #32]
  422d60:	mov	x21, x0
  422d64:	mov	x22, x1
  422d68:	mov	x2, #0x0                   	// #0
  422d6c:	mov	x1, x19
  422d70:	mov	x0, x3
  422d74:	bl	43d658 <argp_parse@@Base+0x9f18>
  422d78:	and	w0, w0, #0xff
  422d7c:	cbnz	w0, 422e64 <wcrtomb@plt+0x1e244>
  422d80:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  422d84:	ldr	x0, [x0, #944]
  422d88:	cbz	x0, 422d90 <wcrtomb@plt+0x1e170>
  422d8c:	blr	x0
  422d90:	mov	w2, #0x5                   	// #5
  422d94:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  422d98:	add	x1, x1, #0x8d8
  422d9c:	mov	x0, #0x0                   	// #0
  422da0:	bl	4049c0 <dcgettext@plt>
  422da4:	mov	x21, x0
  422da8:	mov	w2, #0x0                   	// #0
  422dac:	ldp	x0, x1, [x20]
  422db0:	bl	418c40 <wcrtomb@plt+0x14020>
  422db4:	mov	x22, x0
  422db8:	mov	x0, x19
  422dbc:	bl	43f194 <argp_parse@@Base+0xba54>
  422dc0:	mov	x4, x0
  422dc4:	mov	x3, x22
  422dc8:	mov	x2, x21
  422dcc:	mov	w1, #0x0                   	// #0
  422dd0:	mov	w0, #0x0                   	// #0
  422dd4:	bl	404050 <error@plt>
  422dd8:	str	xzr, [x20, #8]
  422ddc:	mov	w0, #0x1                   	// #1
  422de0:	ldp	x21, x22, [sp, #32]
  422de4:	b	422e0c <wcrtomb@plt+0x1e1ec>
  422de8:	add	x2, sp, #0x40
  422dec:	mov	x1, x19
  422df0:	mov	w0, #0x0                   	// #0
  422df4:	bl	404b10 <__xstat@plt>
  422df8:	cbnz	w0, 422e18 <wcrtomb@plt+0x1e1f8>
  422dfc:	ldr	x1, [sp, #152]
  422e00:	str	x1, [x20]
  422e04:	ldr	x1, [sp, #160]
  422e08:	str	x1, [x20, #8]
  422e0c:	ldp	x19, x20, [sp, #16]
  422e10:	ldp	x29, x30, [sp], #192
  422e14:	ret
  422e18:	stp	x21, x22, [sp, #32]
  422e1c:	str	x23, [sp, #48]
  422e20:	mov	x0, x19
  422e24:	bl	42a0bc <wcrtomb@plt+0x2549c>
  422e28:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  422e2c:	ldr	x0, [x0, #944]
  422e30:	cbz	x0, 422e38 <wcrtomb@plt+0x1e218>
  422e34:	blr	x0
  422e38:	mov	w2, #0x5                   	// #5
  422e3c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  422e40:	add	x1, x1, #0x8b8
  422e44:	mov	x0, #0x0                   	// #0
  422e48:	bl	4049c0 <dcgettext@plt>
  422e4c:	mov	x2, x0
  422e50:	mov	w1, #0x0                   	// #0
  422e54:	mov	w0, #0x0                   	// #0
  422e58:	bl	404050 <error@plt>
  422e5c:	mov	w0, #0x2                   	// #2
  422e60:	bl	422b00 <wcrtomb@plt+0x1dee0>
  422e64:	str	x23, [sp, #48]
  422e68:	mov	x0, #0x28                  	// #40
  422e6c:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  422e70:	mov	x23, x0
  422e74:	ldp	x0, x1, [x20]
  422e78:	stp	x0, x1, [x23, #8]
  422e7c:	str	x22, [x23, #24]
  422e80:	mov	x0, x19
  422e84:	bl	440154 <argp_parse@@Base+0xca14>
  422e88:	str	x0, [x23, #32]
  422e8c:	ldr	x0, [x21, #8]
  422e90:	str	x0, [x23]
  422e94:	str	x23, [x21, #8]
  422e98:	mov	w0, #0x0                   	// #0
  422e9c:	ldp	x21, x22, [sp, #32]
  422ea0:	ldr	x23, [sp, #48]
  422ea4:	b	422e0c <wcrtomb@plt+0x1e1ec>
  422ea8:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  422eac:	ldr	w1, [x1, #796]
  422eb0:	cmp	w1, #0x0
  422eb4:	ccmp	w1, w0, #0x4, ne  // ne = any
  422eb8:	b.ne	422ec8 <wcrtomb@plt+0x1e2a8>  // b.any
  422ebc:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  422ec0:	str	w0, [x1, #796]
  422ec4:	ret
  422ec8:	stp	x29, x30, [sp, #-16]!
  422ecc:	mov	x29, sp
  422ed0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  422ed4:	ldr	x0, [x0, #944]
  422ed8:	cbz	x0, 422ee0 <wcrtomb@plt+0x1e2c0>
  422edc:	blr	x0
  422ee0:	mov	w2, #0x5                   	// #5
  422ee4:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  422ee8:	add	x1, x1, #0x908
  422eec:	mov	x0, #0x0                   	// #0
  422ef0:	bl	4049c0 <dcgettext@plt>
  422ef4:	mov	x2, x0
  422ef8:	mov	w1, #0x0                   	// #0
  422efc:	mov	w0, #0x0                   	// #0
  422f00:	bl	404050 <error@plt>
  422f04:	mov	w0, #0x2                   	// #2
  422f08:	bl	422b00 <wcrtomb@plt+0x1dee0>
  422f0c:	stp	x29, x30, [sp, #-32]!
  422f10:	mov	x29, sp
  422f14:	stp	x19, x20, [sp, #16]
  422f18:	mov	x19, x0
  422f1c:	mov	x20, x1
  422f20:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  422f24:	ldr	x0, [x0, #944]
  422f28:	cbz	x0, 422f30 <wcrtomb@plt+0x1e310>
  422f2c:	blr	x0
  422f30:	mov	w2, #0x5                   	// #5
  422f34:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  422f38:	add	x1, x1, #0x960
  422f3c:	mov	x0, #0x0                   	// #0
  422f40:	bl	4049c0 <dcgettext@plt>
  422f44:	mov	x4, x20
  422f48:	mov	x3, x19
  422f4c:	mov	x2, x0
  422f50:	mov	w1, #0x0                   	// #0
  422f54:	mov	w0, #0x0                   	// #0
  422f58:	bl	404050 <error@plt>
  422f5c:	mov	w0, #0x2                   	// #2
  422f60:	bl	422b00 <wcrtomb@plt+0x1dee0>
  422f64:	stp	x29, x30, [sp, #-32]!
  422f68:	mov	x29, sp
  422f6c:	stp	x19, x20, [sp, #16]
  422f70:	mov	w19, w0
  422f74:	mov	x20, x1
  422f78:	mov	w0, #0x9                   	// #9
  422f7c:	bl	422350 <wcrtomb@plt+0x1d730>
  422f80:	cbz	x0, 422fa4 <wcrtomb@plt+0x1e384>
  422f84:	mov	x1, x0
  422f88:	mov	x0, x20
  422f8c:	bl	4221cc <wcrtomb@plt+0x1d5ac>
  422f90:	cbz	w0, 422fa4 <wcrtomb@plt+0x1e384>
  422f94:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  422f98:	ldr	w0, [x0, #688]
  422f9c:	cmp	w0, w19
  422fa0:	b.ne	422fb8 <wcrtomb@plt+0x1e398>  // b.any
  422fa4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  422fa8:	str	w19, [x0, #688]
  422fac:	ldp	x19, x20, [sp, #16]
  422fb0:	ldp	x29, x30, [sp], #32
  422fb4:	ret
  422fb8:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x17e64>
  422fbc:	add	x2, x2, #0x950
  422fc0:	add	x2, x2, #0xc0
  422fc4:	ldr	x1, [x2, w0, uxtw #3]
  422fc8:	ldr	x0, [x2, w19, sxtw #3]
  422fcc:	bl	422f0c <wcrtomb@plt+0x1e2ec>
  422fd0:	stp	x29, x30, [sp, #-32]!
  422fd4:	mov	x29, sp
  422fd8:	stp	x19, x20, [sp, #16]
  422fdc:	mov	x19, x0
  422fe0:	mov	w0, #0x0                   	// #0
  422fe4:	bl	422350 <wcrtomb@plt+0x1d730>
  422fe8:	mov	x20, x0
  422fec:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  422ff0:	ldr	x0, [x0, #840]
  422ff4:	cbz	x0, 423010 <wcrtomb@plt+0x1e3f0>
  422ff8:	mov	x1, x19
  422ffc:	bl	404720 <strcmp@plt>
  423000:	cbz	w0, 423010 <wcrtomb@plt+0x1e3f0>
  423004:	ldr	w0, [x20]
  423008:	cmp	w0, #0x1
  42300c:	b.eq	423024 <wcrtomb@plt+0x1e404>  // b.none
  423010:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423014:	str	x19, [x0, #840]
  423018:	ldp	x19, x20, [sp, #16]
  42301c:	ldp	x29, x30, [sp], #32
  423020:	ret
  423024:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423028:	ldr	x0, [x0, #944]
  42302c:	cbz	x0, 423034 <wcrtomb@plt+0x1e414>
  423030:	blr	x0
  423034:	mov	w2, #0x5                   	// #5
  423038:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  42303c:	add	x1, x1, #0x980
  423040:	mov	x0, #0x0                   	// #0
  423044:	bl	4049c0 <dcgettext@plt>
  423048:	mov	x2, x0
  42304c:	mov	w1, #0x0                   	// #0
  423050:	mov	w0, #0x0                   	// #0
  423054:	bl	404050 <error@plt>
  423058:	mov	w0, #0x2                   	// #2
  42305c:	bl	422b00 <wcrtomb@plt+0x1dee0>
  423060:	stp	x29, x30, [sp, #-32]!
  423064:	mov	x29, sp
  423068:	stp	x19, x20, [sp, #16]
  42306c:	mov	x20, x0
  423070:	adrp	x19, 459000 <_obstack_memory_used@@Base+0x17e64>
  423074:	add	x19, x19, #0x950
  423078:	mov	x1, x20
  42307c:	ldr	x0, [x19]
  423080:	bl	404720 <strcmp@plt>
  423084:	cbz	w0, 4230dc <wcrtomb@plt+0x1e4bc>
  423088:	ldr	x1, [x19, #16]!
  42308c:	cbnz	x1, 423078 <wcrtomb@plt+0x1e458>
  423090:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423094:	ldr	x0, [x0, #944]
  423098:	cbz	x0, 4230a0 <wcrtomb@plt+0x1e480>
  42309c:	blr	x0
  4230a0:	mov	w2, #0x5                   	// #5
  4230a4:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  4230a8:	add	x1, x1, #0x9a0
  4230ac:	mov	x0, #0x0                   	// #0
  4230b0:	bl	4049c0 <dcgettext@plt>
  4230b4:	mov	x19, x0
  4230b8:	mov	x0, x20
  4230bc:	bl	43efc4 <argp_parse@@Base+0xb884>
  4230c0:	mov	x3, x0
  4230c4:	mov	x2, x19
  4230c8:	mov	w1, #0x0                   	// #0
  4230cc:	mov	w0, #0x0                   	// #0
  4230d0:	bl	404050 <error@plt>
  4230d4:	mov	w0, #0x2                   	// #2
  4230d8:	bl	422b00 <wcrtomb@plt+0x1dee0>
  4230dc:	ldr	w1, [x19, #8]
  4230e0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4230e4:	str	w1, [x0, #752]
  4230e8:	ldp	x19, x20, [sp, #16]
  4230ec:	ldp	x29, x30, [sp], #32
  4230f0:	ret
  4230f4:	stp	x29, x30, [sp, #-224]!
  4230f8:	mov	x29, sp
  4230fc:	stp	x19, x20, [sp, #16]
  423100:	stp	x21, x22, [sp, #32]
  423104:	mov	w19, w0
  423108:	ldr	x22, [x2, #40]
  42310c:	cmp	w0, #0x14f
  423110:	b.gt	423140 <wcrtomb@plt+0x1e520>
  423114:	mov	x21, x1
  423118:	mov	x20, x2
  42311c:	tbnz	w0, #31, 424868 <wcrtomb@plt+0x1fc48>
  423120:	cmp	w0, #0x14f
  423124:	b.hi	424870 <wcrtomb@plt+0x1fc50>  // b.pmore
  423128:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x17e64>
  42312c:	add	x0, x0, #0x6b0
  423130:	ldrh	w0, [x0, w19, uxtw #1]
  423134:	adr	x1, 423140 <wcrtomb@plt+0x1e520>
  423138:	add	x0, x1, w0, sxth #2
  42313c:	br	x0
  423140:	mov	w0, #0x5                   	// #5
  423144:	movk	w0, #0x100, lsl #16
  423148:	cmp	w19, w0
  42314c:	b.eq	4247e0 <wcrtomb@plt+0x1fbc0>  // b.none
  423150:	mov	w19, #0x7                   	// #7
  423154:	mov	w0, w19
  423158:	ldp	x19, x20, [sp, #16]
  42315c:	ldp	x21, x22, [sp, #32]
  423160:	ldp	x29, x30, [sp], #224
  423164:	ret
  423168:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x1be64>
  42316c:	ldr	x1, [x0, #2896]
  423170:	mov	x20, #0x0                   	// #0
  423174:	cbz	x1, 423198 <wcrtomb@plt+0x1e578>
  423178:	add	x22, x0, #0xb50
  42317c:	mov	x0, x21
  423180:	bl	404720 <strcmp@plt>
  423184:	mov	w19, w0
  423188:	cbz	w0, 423fb4 <wcrtomb@plt+0x1f394>
  42318c:	add	x20, x20, #0x1
  423190:	ldr	x1, [x22, x20, lsl #3]
  423194:	cbnz	x1, 42317c <wcrtomb@plt+0x1e55c>
  423198:	stp	x23, x24, [sp, #48]
  42319c:	stp	x25, x26, [sp, #64]
  4231a0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4231a4:	ldr	x0, [x0, #944]
  4231a8:	cbz	x0, 4231b0 <wcrtomb@plt+0x1e590>
  4231ac:	blr	x0
  4231b0:	mov	w2, #0x5                   	// #5
  4231b4:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  4231b8:	add	x1, x1, #0xb10
  4231bc:	mov	x0, #0x0                   	// #0
  4231c0:	bl	4049c0 <dcgettext@plt>
  4231c4:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4231c8:	ldr	x4, [x1, #3480]
  4231cc:	mov	x3, x21
  4231d0:	mov	x2, x0
  4231d4:	mov	w1, #0x0                   	// #0
  4231d8:	mov	w0, #0x0                   	// #0
  4231dc:	bl	404050 <error@plt>
  4231e0:	bl	40e5ac <wcrtomb@plt+0x998c>
  4231e4:	ldrb	w1, [x21]
  4231e8:	mov	w19, #0x1                   	// #1
  4231ec:	cbz	w1, 42320c <wcrtomb@plt+0x1e5ec>
  4231f0:	mov	w2, w19
  4231f4:	mov	x0, #0x0                   	// #0
  4231f8:	bl	43eacc <argp_parse@@Base+0xb38c>
  4231fc:	ldrb	w1, [x21, #1]!
  423200:	cbnz	w1, 4231f0 <wcrtomb@plt+0x1e5d0>
  423204:	mov	w19, #0x0                   	// #0
  423208:	b	423154 <wcrtomb@plt+0x1e534>
  42320c:	mov	w19, #0x0                   	// #0
  423210:	b	423154 <wcrtomb@plt+0x1e534>
  423214:	ldrb	w1, [x21]
  423218:	mov	w19, #0x0                   	// #0
  42321c:	cbz	w1, 423154 <wcrtomb@plt+0x1e534>
  423220:	mov	w2, #0x0                   	// #0
  423224:	mov	x0, #0x0                   	// #0
  423228:	bl	43eacc <argp_parse@@Base+0xb38c>
  42322c:	ldrb	w1, [x21, #1]!
  423230:	cbnz	w1, 423220 <wcrtomb@plt+0x1e600>
  423234:	mov	w19, #0x0                   	// #0
  423238:	b	423154 <wcrtomb@plt+0x1e534>
  42323c:	mov	x0, x21
  423240:	bl	41d53c <wcrtomb@plt+0x1891c>
  423244:	b	423154 <wcrtomb@plt+0x1e534>
  423248:	mov	w0, #0x2                   	// #2
  42324c:	bl	422ea8 <wcrtomb@plt+0x1e288>
  423250:	mov	w19, #0x0                   	// #0
  423254:	b	423154 <wcrtomb@plt+0x1e534>
  423258:	mov	w0, #0x1                   	// #1
  42325c:	str	w0, [x22, #40]
  423260:	mov	w19, #0x0                   	// #0
  423264:	b	423154 <wcrtomb@plt+0x1e534>
  423268:	str	wzr, [x22, #40]
  42326c:	mov	w19, #0x0                   	// #0
  423270:	b	423154 <wcrtomb@plt+0x1e534>
  423274:	adrp	x4, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  423278:	add	x4, x4, #0x7f8
  42327c:	add	x3, sp, #0x88
  423280:	mov	w2, #0xa                   	// #10
  423284:	mov	x1, #0x0                   	// #0
  423288:	mov	x0, x21
  42328c:	bl	440240 <argp_parse@@Base+0xcb00>
  423290:	cbnz	w0, 4232c8 <wcrtomb@plt+0x1e6a8>
  423294:	ldr	x0, [sp, #136]
  423298:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  42329c:	str	w0, [x1, #684]
  4232a0:	sxtw	x1, w0
  4232a4:	cmp	w0, #0x0
  4232a8:	ccmp	x1, x0, #0x0, gt
  4232ac:	b.ne	4232c8 <wcrtomb@plt+0x1e6a8>  // b.any
  4232b0:	lsl	x2, x0, #9
  4232b4:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  4232b8:	str	x2, [x1, #856]
  4232bc:	mov	w19, #0x0                   	// #0
  4232c0:	tst	x0, #0xff80000000000000
  4232c4:	b.eq	423154 <wcrtomb@plt+0x1e534>  // b.none
  4232c8:	stp	x23, x24, [sp, #48]
  4232cc:	stp	x25, x26, [sp, #64]
  4232d0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4232d4:	ldr	x0, [x0, #944]
  4232d8:	cbz	x0, 4232e0 <wcrtomb@plt+0x1e6c0>
  4232dc:	blr	x0
  4232e0:	mov	x0, x21
  4232e4:	bl	43efc4 <argp_parse@@Base+0xb884>
  4232e8:	mov	x19, x0
  4232ec:	mov	w2, #0x5                   	// #5
  4232f0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  4232f4:	add	x1, x1, #0x9e0
  4232f8:	mov	x0, #0x0                   	// #0
  4232fc:	bl	4049c0 <dcgettext@plt>
  423300:	mov	x4, x0
  423304:	mov	x3, x19
  423308:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x12e64>
  42330c:	add	x2, x2, #0x6c8
  423310:	mov	w1, #0x0                   	// #0
  423314:	mov	w0, #0x0                   	// #0
  423318:	bl	404050 <error@plt>
  42331c:	mov	w0, #0x2                   	// #2
  423320:	bl	422b00 <wcrtomb@plt+0x1dee0>
  423324:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423328:	mov	w1, #0x1                   	// #1
  42332c:	strb	w1, [x0, #777]
  423330:	mov	w19, #0x0                   	// #0
  423334:	b	423154 <wcrtomb@plt+0x1e534>
  423338:	mov	w0, #0x3                   	// #3
  42333c:	bl	422ea8 <wcrtomb@plt+0x1e288>
  423340:	mov	w19, #0x0                   	// #0
  423344:	b	423154 <wcrtomb@plt+0x1e534>
  423348:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42334c:	mov	w1, #0x2                   	// #2
  423350:	str	w1, [x0, #4088]
  423354:	mov	w19, #0x0                   	// #0
  423358:	b	423154 <wcrtomb@plt+0x1e534>
  42335c:	mov	w0, #0x5                   	// #5
  423360:	bl	422ea8 <wcrtomb@plt+0x1e288>
  423364:	mov	w19, #0x0                   	// #0
  423368:	b	423154 <wcrtomb@plt+0x1e534>
  42336c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  423370:	ldr	x1, [x0, #3096]
  423374:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423378:	ldr	x0, [x0, #784]
  42337c:	cmp	x0, x1
  423380:	b.eq	4233a8 <wcrtomb@plt+0x1e788>  // b.none
  423384:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423388:	ldr	x2, [x0, #624]
  42338c:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  423390:	ldr	x0, [x1, #784]
  423394:	add	x3, x0, #0x1
  423398:	str	x3, [x1, #784]
  42339c:	str	x21, [x2, x0, lsl #3]
  4233a0:	mov	w19, #0x0                   	// #0
  4233a4:	b	423154 <wcrtomb@plt+0x1e534>
  4233a8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4233ac:	ldr	x0, [x0, #624]
  4233b0:	cbz	x0, 4233e8 <wcrtomb@plt+0x1e7c8>
  4233b4:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4233b8:	movk	x2, #0xaaa, lsl #48
  4233bc:	cmp	x1, x2
  4233c0:	b.cs	42340c <wcrtomb@plt+0x1e7ec>  // b.hs, b.nlast
  4233c4:	add	x2, x1, #0x1
  4233c8:	add	x1, x2, x1, lsr #1
  4233cc:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4233d0:	str	x1, [x2, #3096]
  4233d4:	lsl	x1, x1, #3
  4233d8:	bl	43ff70 <argp_parse@@Base+0xc830>
  4233dc:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  4233e0:	str	x0, [x1, #624]
  4233e4:	b	423384 <wcrtomb@plt+0x1e764>
  4233e8:	cbz	x1, 423418 <wcrtomb@plt+0x1e7f8>
  4233ec:	cmp	xzr, x1, lsr #61
  4233f0:	cset	x2, ne  // ne = any
  4233f4:	tst	x1, #0x1000000000000000
  4233f8:	csinc	w2, w2, wzr, eq  // eq = none
  4233fc:	cbz	w2, 4233cc <wcrtomb@plt+0x1e7ac>
  423400:	stp	x23, x24, [sp, #48]
  423404:	stp	x25, x26, [sp, #64]
  423408:	bl	40e5ec <wcrtomb@plt+0x99cc>
  42340c:	stp	x23, x24, [sp, #48]
  423410:	stp	x25, x26, [sp, #64]
  423414:	bl	40e5ec <wcrtomb@plt+0x99cc>
  423418:	mov	x1, #0x10                  	// #16
  42341c:	b	4233cc <wcrtomb@plt+0x1e7ac>
  423420:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423424:	str	x21, [x0, #704]
  423428:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42342c:	mov	w1, #0x1                   	// #1
  423430:	strb	w1, [x0, #12]
  423434:	mov	w19, #0x0                   	// #0
  423438:	b	423154 <wcrtomb@plt+0x1e534>
  42343c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423440:	mov	w1, #0x1                   	// #1
  423444:	strb	w1, [x0, #632]
  423448:	mov	w19, #0x0                   	// #0
  42344c:	b	423154 <wcrtomb@plt+0x1e534>
  423450:	ldr	x1, [x22]
  423454:	mov	w0, #0x2                   	// #2
  423458:	bl	422350 <wcrtomb@plt+0x1d730>
  42345c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423460:	str	x21, [x0, #768]
  423464:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423468:	mov	w1, #0x1                   	// #1
  42346c:	str	w1, [x0, #908]
  423470:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  423474:	mov	w1, #0x1                   	// #1
  423478:	strb	w1, [x0, #4065]
  42347c:	mov	w19, #0x0                   	// #0
  423480:	b	423154 <wcrtomb@plt+0x1e534>
  423484:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423488:	mov	w1, #0x1                   	// #1
  42348c:	strb	w1, [x0, #512]
  423490:	mov	w19, #0x0                   	// #0
  423494:	b	423154 <wcrtomb@plt+0x1e534>
  423498:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42349c:	mov	w1, #0x1                   	// #1
  4234a0:	strb	w1, [x0, #20]
  4234a4:	mov	w19, #0x0                   	// #0
  4234a8:	b	423154 <wcrtomb@plt+0x1e534>
  4234ac:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4234b0:	mov	w1, #0x1                   	// #1
  4234b4:	strb	w1, [x0, #13]
  4234b8:	mov	w19, #0x0                   	// #0
  4234bc:	b	423154 <wcrtomb@plt+0x1e534>
  4234c0:	ldr	x1, [x22]
  4234c4:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  4234c8:	add	x0, x0, #0xa0
  4234cc:	bl	422fd0 <wcrtomb@plt+0x1e3b0>
  4234d0:	mov	w19, #0x0                   	// #0
  4234d4:	b	423154 <wcrtomb@plt+0x1e534>
  4234d8:	ldr	x1, [x22]
  4234dc:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  4234e0:	add	x0, x0, #0xd8
  4234e4:	bl	422fd0 <wcrtomb@plt+0x1e3b0>
  4234e8:	mov	w19, #0x0                   	// #0
  4234ec:	b	423154 <wcrtomb@plt+0x1e534>
  4234f0:	ldr	x1, [x22]
  4234f4:	mov	w0, #0x4                   	// #4
  4234f8:	bl	422f64 <wcrtomb@plt+0x1e344>
  4234fc:	mov	w19, #0x0                   	// #0
  423500:	b	423154 <wcrtomb@plt+0x1e534>
  423504:	ldr	x1, [x22]
  423508:	mov	w0, #0x5                   	// #5
  42350c:	bl	422350 <wcrtomb@plt+0x1d730>
  423510:	mov	x0, x21
  423514:	bl	41db0c <wcrtomb@plt+0x18eec>
  423518:	mov	w19, #0x0                   	// #0
  42351c:	b	423154 <wcrtomb@plt+0x1e534>
  423520:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423524:	mov	w1, #0x1                   	// #1
  423528:	strb	w1, [x0, #21]
  42352c:	mov	w19, #0x0                   	// #0
  423530:	b	423154 <wcrtomb@plt+0x1e534>
  423534:	ldr	x1, [x22]
  423538:	mov	w0, #0x7                   	// #7
  42353c:	bl	422350 <wcrtomb@plt+0x1d730>
  423540:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423544:	mov	w1, #0x1                   	// #1
  423548:	strb	w1, [x0, #779]
  42354c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423550:	str	x21, [x0, #504]
  423554:	mov	w19, #0x0                   	// #0
  423558:	b	423154 <wcrtomb@plt+0x1e534>
  42355c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  423560:	mov	w1, #0x1                   	// #1
  423564:	str	w1, [x0, #3104]
  423568:	mov	w19, #0x0                   	// #0
  42356c:	b	423154 <wcrtomb@plt+0x1e534>
  423570:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x14e64>
  423574:	add	x4, x4, #0x9f8
  423578:	add	x3, sp, #0x68
  42357c:	mov	w2, #0xa                   	// #10
  423580:	add	x1, sp, #0x88
  423584:	mov	x0, x21
  423588:	bl	440240 <argp_parse@@Base+0xcb00>
  42358c:	cbnz	w0, 4235d4 <wcrtomb@plt+0x1e9b4>
  423590:	ldr	x0, [sp, #136]
  423594:	cmp	x0, x21
  423598:	b.ls	4235b0 <wcrtomb@plt+0x1e990>  // b.plast
  42359c:	ldurb	w1, [x0, #-1]
  4235a0:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  4235a4:	add	x0, x0, #0x9f8
  4235a8:	bl	404870 <strchr@plt>
  4235ac:	cbz	x0, 423630 <wcrtomb@plt+0x1ea10>
  4235b0:	ldr	d0, [sp, #104]
  4235b4:	ucvtf	d0, d0
  4235b8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4235bc:	str	d0, [x0, #568]
  4235c0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4235c4:	mov	w1, #0x1                   	// #1
  4235c8:	strb	w1, [x0, #12]
  4235cc:	mov	w19, #0x0                   	// #0
  4235d0:	b	423154 <wcrtomb@plt+0x1e534>
  4235d4:	stp	x23, x24, [sp, #48]
  4235d8:	stp	x25, x26, [sp, #64]
  4235dc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4235e0:	ldr	x0, [x0, #944]
  4235e4:	cbz	x0, 4235ec <wcrtomb@plt+0x1e9cc>
  4235e8:	blr	x0
  4235ec:	mov	x0, x21
  4235f0:	bl	43efc4 <argp_parse@@Base+0xb884>
  4235f4:	mov	x19, x0
  4235f8:	mov	w2, #0x5                   	// #5
  4235fc:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  423600:	add	x1, x1, #0xa08
  423604:	mov	x0, #0x0                   	// #0
  423608:	bl	4049c0 <dcgettext@plt>
  42360c:	mov	x4, x0
  423610:	mov	x3, x19
  423614:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x12e64>
  423618:	add	x2, x2, #0x6c8
  42361c:	mov	w1, #0x0                   	// #0
  423620:	mov	w0, #0x0                   	// #0
  423624:	bl	404050 <error@plt>
  423628:	mov	w0, #0x2                   	// #2
  42362c:	bl	422b00 <wcrtomb@plt+0x1dee0>
  423630:	ldr	d0, [sp, #104]
  423634:	ucvtf	d0, d0
  423638:	mov	x0, #0x4090000000000000    	// #4652218415073722368
  42363c:	fmov	d1, x0
  423640:	fmul	d0, d0, d1
  423644:	b	4235b8 <wcrtomb@plt+0x1e998>
  423648:	mov	w2, #0xa                   	// #10
  42364c:	add	x1, sp, #0x88
  423650:	mov	x0, x21
  423654:	bl	403fe0 <strtoul@plt>
  423658:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  42365c:	str	w0, [x1, #716]
  423660:	ldr	x0, [sp, #136]
  423664:	ldrb	w0, [x0]
  423668:	mov	w19, #0x0                   	// #0
  42366c:	cbz	w0, 423154 <wcrtomb@plt+0x1e534>
  423670:	stp	x23, x24, [sp, #48]
  423674:	stp	x25, x26, [sp, #64]
  423678:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42367c:	ldr	x0, [x0, #944]
  423680:	cbz	x0, 423688 <wcrtomb@plt+0x1ea68>
  423684:	blr	x0
  423688:	mov	w2, #0x5                   	// #5
  42368c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  423690:	add	x1, x1, #0xa20
  423694:	mov	x0, #0x0                   	// #0
  423698:	bl	4049c0 <dcgettext@plt>
  42369c:	mov	x2, x0
  4236a0:	mov	w1, #0x0                   	// #0
  4236a4:	mov	w0, #0x0                   	// #0
  4236a8:	bl	404050 <error@plt>
  4236ac:	mov	w0, #0x2                   	// #2
  4236b0:	bl	422b00 <wcrtomb@plt+0x1dee0>
  4236b4:	ldr	x1, [x22]
  4236b8:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  4236bc:	add	x0, x0, #0xb8
  4236c0:	bl	422fd0 <wcrtomb@plt+0x1e3b0>
  4236c4:	mov	w19, #0x0                   	// #0
  4236c8:	b	423154 <wcrtomb@plt+0x1e534>
  4236cc:	ldr	x1, [x22]
  4236d0:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  4236d4:	add	x0, x0, #0xc8
  4236d8:	bl	422fd0 <wcrtomb@plt+0x1e3b0>
  4236dc:	mov	w19, #0x0                   	// #0
  4236e0:	b	423154 <wcrtomb@plt+0x1e534>
  4236e4:	ldr	x1, [x22]
  4236e8:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  4236ec:	add	x0, x0, #0xe8
  4236f0:	bl	422fd0 <wcrtomb@plt+0x1e3b0>
  4236f4:	mov	w19, #0x0                   	// #0
  4236f8:	b	423154 <wcrtomb@plt+0x1e534>
  4236fc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423700:	mov	w1, #0x1                   	// #1
  423704:	strb	w1, [x0, #488]
  423708:	mov	w19, #0x0                   	// #0
  42370c:	b	423154 <wcrtomb@plt+0x1e534>
  423710:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423714:	mov	w1, #0x1                   	// #1
  423718:	strb	w1, [x0, #12]
  42371c:	mov	w19, #0x0                   	// #0
  423720:	b	423154 <wcrtomb@plt+0x1e534>
  423724:	adrp	x3, 481000 <argp_program_version_hook@@Base+0x298>
  423728:	add	x3, x3, #0x2d8
  42372c:	mov	x2, x21
  423730:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  423734:	add	x1, x1, #0xa40
  423738:	mov	x0, x22
  42373c:	bl	422d34 <wcrtomb@plt+0x1e114>
  423740:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  423744:	ldr	w0, [x0, #4088]
  423748:	mov	w19, #0x0                   	// #0
  42374c:	cbnz	w0, 423154 <wcrtomb@plt+0x1e534>
  423750:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  423754:	mov	w1, #0x1                   	// #1
  423758:	str	w1, [x0, #4088]
  42375c:	b	423154 <wcrtomb@plt+0x1e534>
  423760:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423764:	mov	w1, #0x1                   	// #1
  423768:	str	w1, [x0, #8]
  42376c:	mov	w19, #0x0                   	// #0
  423770:	b	423154 <wcrtomb@plt+0x1e534>
  423774:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423778:	str	wzr, [x0, #8]
  42377c:	mov	w19, #0x0                   	// #0
  423780:	b	423154 <wcrtomb@plt+0x1e534>
  423784:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423788:	mov	w1, #0x1                   	// #1
  42378c:	str	w1, [x0, #908]
  423790:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  423794:	ldr	x0, [x0, #4080]
  423798:	tbz	x0, #63, 4237e4 <wcrtomb@plt+0x1ebc4>
  42379c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  4237a0:	add	x1, x1, #0x9c0
  4237a4:	adrp	x3, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4237a8:	add	x3, x3, #0xfe8
  4237ac:	mov	x2, x21
  4237b0:	mov	x0, x22
  4237b4:	bl	422d34 <wcrtomb@plt+0x1e114>
  4237b8:	ldr	x1, [x22]
  4237bc:	mov	w0, #0x3                   	// #3
  4237c0:	bl	422350 <wcrtomb@plt+0x1d730>
  4237c4:	mov	w19, #0x0                   	// #0
  4237c8:	b	423154 <wcrtomb@plt+0x1e534>
  4237cc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4237d0:	ldr	x0, [x0, #4080]
  4237d4:	tbz	x0, #63, 4237e4 <wcrtomb@plt+0x1ebc4>
  4237d8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  4237dc:	add	x1, x1, #0x9d0
  4237e0:	b	4237a4 <wcrtomb@plt+0x1eb84>
  4237e4:	stp	x23, x24, [sp, #48]
  4237e8:	stp	x25, x26, [sp, #64]
  4237ec:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4237f0:	ldr	x0, [x0, #944]
  4237f4:	cbz	x0, 4237fc <wcrtomb@plt+0x1ebdc>
  4237f8:	blr	x0
  4237fc:	mov	w2, #0x5                   	// #5
  423800:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  423804:	add	x1, x1, #0xa48
  423808:	mov	x0, #0x0                   	// #0
  42380c:	bl	4049c0 <dcgettext@plt>
  423810:	mov	x2, x0
  423814:	mov	w1, #0x0                   	// #0
  423818:	mov	w0, #0x0                   	// #0
  42381c:	bl	404050 <error@plt>
  423820:	mov	w0, #0x2                   	// #2
  423824:	bl	422b00 <wcrtomb@plt+0x1dee0>
  423828:	mov	w0, #0x1                   	// #1
  42382c:	strb	w0, [x22, #16]
  423830:	mov	w19, #0x0                   	// #0
  423834:	b	423154 <wcrtomb@plt+0x1e534>
  423838:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42383c:	mov	w1, #0x1                   	// #1
  423840:	strb	w1, [x0, #561]
  423844:	mov	w19, #0x0                   	// #0
  423848:	b	423154 <wcrtomb@plt+0x1e534>
  42384c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423850:	mov	w1, #0x1                   	// #1
  423854:	str	w1, [x0, #548]
  423858:	mov	w19, #0x0                   	// #0
  42385c:	b	423154 <wcrtomb@plt+0x1e534>
  423860:	ldr	x1, [x22]
  423864:	mov	w0, #0x8                   	// #8
  423868:	bl	422350 <wcrtomb@plt+0x1d730>
  42386c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423870:	mov	w1, #0x1                   	// #1
  423874:	strb	w1, [x0, #888]
  423878:	mov	w19, #0x0                   	// #0
  42387c:	b	423154 <wcrtomb@plt+0x1e534>
  423880:	mov	w0, #0x1                   	// #1
  423884:	bl	422ea8 <wcrtomb@plt+0x1e288>
  423888:	mov	w19, #0x0                   	// #0
  42388c:	b	423154 <wcrtomb@plt+0x1e534>
  423890:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423894:	mov	w1, #0x1                   	// #1
  423898:	strb	w1, [x0, #609]
  42389c:	mov	w19, #0x0                   	// #0
  4238a0:	b	423154 <wcrtomb@plt+0x1e534>
  4238a4:	ldr	x1, [x22]
  4238a8:	mov	w0, #0x6                   	// #6
  4238ac:	bl	422350 <wcrtomb@plt+0x1d730>
  4238b0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4238b4:	mov	w1, #0x1                   	// #1
  4238b8:	strb	w1, [x0, #576]
  4238bc:	mov	w19, #0x0                   	// #0
  4238c0:	b	423154 <wcrtomb@plt+0x1e534>
  4238c4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4238c8:	mov	w1, #0x1                   	// #1
  4238cc:	strb	w1, [x0, #848]
  4238d0:	mov	w19, #0x0                   	// #0
  4238d4:	b	423154 <wcrtomb@plt+0x1e534>
  4238d8:	ldr	x1, [x22]
  4238dc:	mov	w0, #0x5                   	// #5
  4238e0:	bl	422f64 <wcrtomb@plt+0x1e344>
  4238e4:	mov	w19, #0x0                   	// #0
  4238e8:	b	423154 <wcrtomb@plt+0x1e534>
  4238ec:	adrp	x19, 459000 <_obstack_memory_used@@Base+0x17e64>
  4238f0:	add	x19, x19, #0x950
  4238f4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4238f8:	ldr	x5, [x0, #920]
  4238fc:	mov	x4, #0x4                   	// #4
  423900:	add	x3, x19, #0xf8
  423904:	add	x2, x19, #0x100
  423908:	mov	x1, x21
  42390c:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  423910:	add	x0, x0, #0xa68
  423914:	bl	42fefc <wcrtomb@plt+0x2b2dc>
  423918:	add	x19, x19, x0, lsl #2
  42391c:	ldr	w1, [x19, #248]
  423920:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423924:	str	w1, [x0, #852]
  423928:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42392c:	mov	w1, #0x1                   	// #1
  423930:	strb	w1, [x0, #848]
  423934:	mov	w19, #0x0                   	// #0
  423938:	b	423154 <wcrtomb@plt+0x1e534>
  42393c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423940:	mov	w1, #0x1                   	// #1
  423944:	strb	w1, [x0, #848]
  423948:	mov	w2, #0xa                   	// #10
  42394c:	add	x1, sp, #0x88
  423950:	mov	x0, x21
  423954:	bl	403fe0 <strtoul@plt>
  423958:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  42395c:	str	w0, [x1, #544]
  423960:	ldr	x0, [sp, #136]
  423964:	ldrb	w1, [x0]
  423968:	cbz	w1, 423998 <wcrtomb@plt+0x1ed78>
  42396c:	cmp	w1, #0x2e
  423970:	b.ne	4239a0 <wcrtomb@plt+0x1ed80>  // b.any
  423974:	mov	w2, #0xa                   	// #10
  423978:	add	x1, sp, #0x88
  42397c:	add	x0, x0, #0x1
  423980:	bl	403fe0 <strtoul@plt>
  423984:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  423988:	str	w0, [x1, #24]
  42398c:	ldr	x0, [sp, #136]
  423990:	ldrb	w0, [x0]
  423994:	cbnz	w0, 4239e4 <wcrtomb@plt+0x1edc4>
  423998:	mov	w19, #0x0                   	// #0
  42399c:	b	423154 <wcrtomb@plt+0x1e534>
  4239a0:	stp	x23, x24, [sp, #48]
  4239a4:	stp	x25, x26, [sp, #64]
  4239a8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4239ac:	ldr	x0, [x0, #944]
  4239b0:	cbz	x0, 4239b8 <wcrtomb@plt+0x1ed98>
  4239b4:	blr	x0
  4239b8:	mov	w2, #0x5                   	// #5
  4239bc:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  4239c0:	add	x1, x1, #0xa80
  4239c4:	mov	x0, #0x0                   	// #0
  4239c8:	bl	4049c0 <dcgettext@plt>
  4239cc:	mov	x2, x0
  4239d0:	mov	w1, #0x0                   	// #0
  4239d4:	mov	w0, #0x0                   	// #0
  4239d8:	bl	404050 <error@plt>
  4239dc:	mov	w0, #0x2                   	// #2
  4239e0:	bl	422b00 <wcrtomb@plt+0x1dee0>
  4239e4:	stp	x23, x24, [sp, #48]
  4239e8:	stp	x25, x26, [sp, #64]
  4239ec:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4239f0:	ldr	x0, [x0, #944]
  4239f4:	cbz	x0, 4239fc <wcrtomb@plt+0x1eddc>
  4239f8:	blr	x0
  4239fc:	mov	w2, #0x5                   	// #5
  423a00:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  423a04:	add	x1, x1, #0xa80
  423a08:	mov	x0, #0x0                   	// #0
  423a0c:	bl	4049c0 <dcgettext@plt>
  423a10:	mov	x2, x0
  423a14:	mov	w1, #0x0                   	// #0
  423a18:	mov	w0, #0x0                   	// #0
  423a1c:	bl	404050 <error@plt>
  423a20:	mov	w0, #0x2                   	// #2
  423a24:	bl	422b00 <wcrtomb@plt+0x1dee0>
  423a28:	mov	w0, #0x7                   	// #7
  423a2c:	bl	422ea8 <wcrtomb@plt+0x1e288>
  423a30:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  423a34:	ldr	w0, [x1, #580]
  423a38:	add	w0, w0, #0x1
  423a3c:	str	w0, [x1, #580]
  423a40:	mov	w19, #0x0                   	// #0
  423a44:	b	423154 <wcrtomb@plt+0x1e534>
  423a48:	mov	w0, #0x9                   	// #9
  423a4c:	bl	422ea8 <wcrtomb@plt+0x1e288>
  423a50:	mov	w19, #0x0                   	// #0
  423a54:	b	423154 <wcrtomb@plt+0x1e534>
  423a58:	mov	w0, #0x8                   	// #8
  423a5c:	bl	422ea8 <wcrtomb@plt+0x1e288>
  423a60:	mov	w19, #0x0                   	// #0
  423a64:	b	423154 <wcrtomb@plt+0x1e534>
  423a68:	ldr	x1, [x22]
  423a6c:	mov	w0, #0x3                   	// #3
  423a70:	bl	422f64 <wcrtomb@plt+0x1e344>
  423a74:	mov	w19, #0x0                   	// #0
  423a78:	b	423154 <wcrtomb@plt+0x1e534>
  423a7c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423a80:	mov	w1, #0x1                   	// #1
  423a84:	strb	w1, [x0, #489]
  423a88:	mov	w19, #0x0                   	// #0
  423a8c:	b	423154 <wcrtomb@plt+0x1e534>
  423a90:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  423a94:	ldr	w0, [x1, #580]
  423a98:	add	w0, w0, #0x1
  423a9c:	str	w0, [x1, #580]
  423aa0:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  423aa4:	ldr	w0, [x1, #408]
  423aa8:	mov	w2, #0x3000                	// #12288
  423aac:	movk	w2, #0x58, lsl #16
  423ab0:	orr	w0, w0, w2
  423ab4:	str	w0, [x1, #408]
  423ab8:	mov	w19, #0x0                   	// #0
  423abc:	b	423154 <wcrtomb@plt+0x1e534>
  423ac0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423ac4:	str	x21, [x0, #584]
  423ac8:	mov	w19, #0x0                   	// #0
  423acc:	b	423154 <wcrtomb@plt+0x1e534>
  423ad0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423ad4:	mov	w1, #0x1                   	// #1
  423ad8:	strb	w1, [x0, #528]
  423adc:	mov	w19, #0x0                   	// #0
  423ae0:	b	423154 <wcrtomb@plt+0x1e534>
  423ae4:	ldr	x1, [x22]
  423ae8:	mov	w0, #0x4                   	// #4
  423aec:	bl	422350 <wcrtomb@plt+0x1d730>
  423af0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423af4:	mov	w1, #0x1                   	// #1
  423af8:	strb	w1, [x0, #778]
  423afc:	mov	w19, #0x0                   	// #0
  423b00:	b	423154 <wcrtomb@plt+0x1e534>
  423b04:	mov	w0, #0x6                   	// #6
  423b08:	bl	422ea8 <wcrtomb@plt+0x1e288>
  423b0c:	mov	w19, #0x0                   	// #0
  423b10:	b	423154 <wcrtomb@plt+0x1e534>
  423b14:	ldr	x1, [x22]
  423b18:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  423b1c:	add	x0, x0, #0x90
  423b20:	bl	422fd0 <wcrtomb@plt+0x1e3b0>
  423b24:	mov	w19, #0x0                   	// #0
  423b28:	b	423154 <wcrtomb@plt+0x1e534>
  423b2c:	ldr	x1, [x22]
  423b30:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x16e64>
  423b34:	add	x0, x0, #0xc00
  423b38:	bl	422fd0 <wcrtomb@plt+0x1e3b0>
  423b3c:	mov	w19, #0x0                   	// #0
  423b40:	b	423154 <wcrtomb@plt+0x1e534>
  423b44:	ldr	x1, [x22]
  423b48:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  423b4c:	add	x0, x0, #0xf8
  423b50:	bl	422fd0 <wcrtomb@plt+0x1e3b0>
  423b54:	mov	w19, #0x0                   	// #0
  423b58:	b	423154 <wcrtomb@plt+0x1e534>
  423b5c:	mov	w0, #0x1                   	// #1
  423b60:	cbz	x21, 423b98 <wcrtomb@plt+0x1ef78>
  423b64:	adrp	x19, 459000 <_obstack_memory_used@@Base+0x17e64>
  423b68:	add	x19, x19, #0x950
  423b6c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  423b70:	ldr	x5, [x0, #920]
  423b74:	mov	x4, #0x4                   	// #4
  423b78:	add	x3, x19, #0x118
  423b7c:	add	x2, x19, #0x120
  423b80:	mov	x1, x21
  423b84:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  423b88:	add	x0, x0, #0xaa0
  423b8c:	bl	42fefc <wcrtomb@plt+0x2b2dc>
  423b90:	add	x19, x19, x0, lsl #2
  423b94:	ldr	w0, [x19, #280]
  423b98:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  423b9c:	str	w0, [x1, #492]
  423ba0:	mov	w19, #0x0                   	// #0
  423ba4:	b	423154 <wcrtomb@plt+0x1e534>
  423ba8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  423bac:	mov	w1, #0x1                   	// #1
  423bb0:	strb	w1, [x0, #4064]
  423bb4:	mov	w19, #0x0                   	// #0
  423bb8:	b	423154 <wcrtomb@plt+0x1e534>
  423bbc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  423bc0:	strb	wzr, [x0, #4064]
  423bc4:	mov	w19, #0x0                   	// #0
  423bc8:	b	423154 <wcrtomb@plt+0x1e534>
  423bcc:	cbz	x21, 423c58 <wcrtomb@plt+0x1f038>
  423bd0:	ldrb	w0, [x21]
  423bd4:	cmp	w0, #0x2e
  423bd8:	b.eq	423c44 <wcrtomb@plt+0x1f024>  // b.none
  423bdc:	mov	w2, #0x0                   	// #0
  423be0:	add	x1, sp, #0x88
  423be4:	mov	x0, x21
  423be8:	bl	403fe0 <strtoul@plt>
  423bec:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  423bf0:	str	w0, [x1, #792]
  423bf4:	ldr	x0, [sp, #136]
  423bf8:	ldrb	w0, [x0]
  423bfc:	mov	w19, #0x0                   	// #0
  423c00:	cbz	w0, 423154 <wcrtomb@plt+0x1e534>
  423c04:	stp	x23, x24, [sp, #48]
  423c08:	stp	x25, x26, [sp, #64]
  423c0c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423c10:	ldr	x0, [x0, #944]
  423c14:	cbz	x0, 423c1c <wcrtomb@plt+0x1effc>
  423c18:	blr	x0
  423c1c:	mov	w2, #0x5                   	// #5
  423c20:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  423c24:	add	x1, x1, #0xab8
  423c28:	mov	x0, #0x0                   	// #0
  423c2c:	bl	4049c0 <dcgettext@plt>
  423c30:	mov	x2, x0
  423c34:	mov	w1, #0x0                   	// #0
  423c38:	mov	w0, #0x0                   	// #0
  423c3c:	bl	404050 <error@plt>
  423c40:	bl	40e5ac <wcrtomb@plt+0x998c>
  423c44:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x15e64>
  423c48:	add	x0, x0, #0x340
  423c4c:	bl	408ee4 <wcrtomb@plt+0x42c4>
  423c50:	add	x21, x21, #0x1
  423c54:	b	423bdc <wcrtomb@plt+0x1efbc>
  423c58:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423c5c:	mov	w1, #0xa                   	// #10
  423c60:	str	w1, [x0, #792]
  423c64:	mov	w19, #0x0                   	// #0
  423c68:	b	423154 <wcrtomb@plt+0x1e534>
  423c6c:	mov	x0, x21
  423c70:	bl	408ee4 <wcrtomb@plt+0x42c4>
  423c74:	mov	w19, #0x0                   	// #0
  423c78:	b	423154 <wcrtomb@plt+0x1e534>
  423c7c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423c80:	mov	w1, #0x1                   	// #1
  423c84:	strb	w1, [x0, #693]
  423c88:	mov	w19, #0x0                   	// #0
  423c8c:	cbz	x21, 423154 <wcrtomb@plt+0x1e534>
  423c90:	str	x21, [x22, #32]
  423c94:	b	423154 <wcrtomb@plt+0x1e534>
  423c98:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423c9c:	mov	w1, #0x1                   	// #1
  423ca0:	strb	w1, [x0, #904]
  423ca4:	mov	w19, #0x0                   	// #0
  423ca8:	b	423154 <wcrtomb@plt+0x1e534>
  423cac:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423cb0:	strb	wzr, [x0, #904]
  423cb4:	mov	w19, #0x0                   	// #0
  423cb8:	b	423154 <wcrtomb@plt+0x1e534>
  423cbc:	mov	w0, #0x4                   	// #4
  423cc0:	bl	422ea8 <wcrtomb@plt+0x1e288>
  423cc4:	mov	w19, #0x0                   	// #0
  423cc8:	b	423154 <wcrtomb@plt+0x1e534>
  423ccc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423cd0:	mov	w1, #0x1                   	// #1
  423cd4:	strb	w1, [x0, #952]
  423cd8:	mov	w19, #0x0                   	// #0
  423cdc:	b	423154 <wcrtomb@plt+0x1e534>
  423ce0:	mov	x0, x21
  423ce4:	bl	423060 <wcrtomb@plt+0x1e440>
  423ce8:	mov	w19, #0x0                   	// #0
  423cec:	b	423154 <wcrtomb@plt+0x1e534>
  423cf0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423cf4:	str	x21, [x0, #896]
  423cf8:	mov	w19, #0x0                   	// #0
  423cfc:	b	423154 <wcrtomb@plt+0x1e534>
  423d00:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423d04:	mov	w1, #0x1                   	// #1
  423d08:	strb	w1, [x0, #513]
  423d0c:	mov	w19, #0x0                   	// #0
  423d10:	b	423154 <wcrtomb@plt+0x1e534>
  423d14:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423d18:	mov	w1, #0x1                   	// #1
  423d1c:	strb	w1, [x0, #889]
  423d20:	mov	w19, #0x0                   	// #0
  423d24:	b	423154 <wcrtomb@plt+0x1e534>
  423d28:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423d2c:	mov	w1, #0x1                   	// #1
  423d30:	strb	w1, [x0, #560]
  423d34:	mov	w19, #0x0                   	// #0
  423d38:	b	423154 <wcrtomb@plt+0x1e534>
  423d3c:	ldr	x1, [x22]
  423d40:	mov	w0, #0x6                   	// #6
  423d44:	bl	422f64 <wcrtomb@plt+0x1e344>
  423d48:	mov	w19, #0x0                   	// #0
  423d4c:	b	423154 <wcrtomb@plt+0x1e534>
  423d50:	adrp	x2, 481000 <argp_program_version_hook@@Base+0x298>
  423d54:	add	x2, x2, #0x1d0
  423d58:	mov	x1, #0xffffffff            	// #4294967295
  423d5c:	mov	x0, x21
  423d60:	bl	42221c <wcrtomb@plt+0x1d5fc>
  423d64:	cmn	x0, #0x1
  423d68:	b.eq	423d7c <wcrtomb@plt+0x1f15c>  // b.none
  423d6c:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  423d70:	str	w0, [x1, #640]
  423d74:	mov	w19, #0x0                   	// #0
  423d78:	b	423154 <wcrtomb@plt+0x1e534>
  423d7c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423d80:	mov	w1, #0xffffffff            	// #-1
  423d84:	str	w1, [x0, #640]
  423d88:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423d8c:	ldr	x0, [x0, #464]
  423d90:	mov	w19, #0x0                   	// #0
  423d94:	cbz	x0, 423154 <wcrtomb@plt+0x1e534>
  423d98:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  423d9c:	add	x1, x1, #0x280
  423da0:	bl	41d470 <wcrtomb@plt+0x18850>
  423da4:	b	423154 <wcrtomb@plt+0x1e534>
  423da8:	mov	x0, x21
  423dac:	bl	41a4b0 <wcrtomb@plt+0x15890>
  423db0:	mov	w19, #0x0                   	// #0
  423db4:	b	423154 <wcrtomb@plt+0x1e534>
  423db8:	mov	x0, x21
  423dbc:	bl	43954c <argp_parse@@Base+0x5e0c>
  423dc0:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  423dc4:	str	x0, [x1, #536]
  423dc8:	cbz	x0, 423de8 <wcrtomb@plt+0x1f1c8>
  423dcc:	mov	w0, #0x0                   	// #0
  423dd0:	bl	404a80 <umask@plt>
  423dd4:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  423dd8:	str	w0, [x1, #16]
  423ddc:	bl	404a80 <umask@plt>
  423de0:	mov	w19, #0x0                   	// #0
  423de4:	b	423154 <wcrtomb@plt+0x1e534>
  423de8:	stp	x23, x24, [sp, #48]
  423dec:	stp	x25, x26, [sp, #64]
  423df0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423df4:	ldr	x0, [x0, #944]
  423df8:	cbz	x0, 423e00 <wcrtomb@plt+0x1f1e0>
  423dfc:	blr	x0
  423e00:	mov	w2, #0x5                   	// #5
  423e04:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  423e08:	add	x1, x1, #0xae0
  423e0c:	mov	x0, #0x0                   	// #0
  423e10:	bl	4049c0 <dcgettext@plt>
  423e14:	mov	x2, x0
  423e18:	mov	w1, #0x0                   	// #0
  423e1c:	mov	w0, #0x0                   	// #0
  423e20:	bl	404050 <error@plt>
  423e24:	bl	40e5ac <wcrtomb@plt+0x998c>
  423e28:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423e2c:	strb	wzr, [x0, #513]
  423e30:	mov	w19, #0x0                   	// #0
  423e34:	b	423154 <wcrtomb@plt+0x1e534>
  423e38:	ldr	x1, [x22]
  423e3c:	mov	w0, #0x1                   	// #1
  423e40:	bl	422f64 <wcrtomb@plt+0x1e344>
  423e44:	mov	w19, #0x0                   	// #0
  423e48:	b	423154 <wcrtomb@plt+0x1e534>
  423e4c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423e50:	mov	w1, #0x1                   	// #1
  423e54:	strb	w1, [x0, #608]
  423e58:	mov	w19, #0x0                   	// #0
  423e5c:	b	423154 <wcrtomb@plt+0x1e534>
  423e60:	ldr	x1, [x22]
  423e64:	mov	w0, #0x1                   	// #1
  423e68:	bl	422350 <wcrtomb@plt+0x1d730>
  423e6c:	cbz	x21, 423ea4 <wcrtomb@plt+0x1f284>
  423e70:	adrp	x4, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  423e74:	add	x4, x4, #0x7f8
  423e78:	add	x3, sp, #0x88
  423e7c:	mov	w2, #0xa                   	// #10
  423e80:	mov	x1, #0x0                   	// #0
  423e84:	mov	x0, x21
  423e88:	bl	440240 <argp_parse@@Base+0xcb00>
  423e8c:	cbnz	w0, 423eb8 <wcrtomb@plt+0x1f298>
  423e90:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423e94:	ldr	x1, [sp, #136]
  423e98:	str	x1, [x0, #696]
  423e9c:	mov	w19, #0x0                   	// #0
  423ea0:	b	423154 <wcrtomb@plt+0x1e534>
  423ea4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423ea8:	mov	x1, #0x1                   	// #1
  423eac:	str	x1, [x0, #696]
  423eb0:	mov	w19, #0x0                   	// #0
  423eb4:	b	423154 <wcrtomb@plt+0x1e534>
  423eb8:	stp	x23, x24, [sp, #48]
  423ebc:	stp	x25, x26, [sp, #64]
  423ec0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423ec4:	ldr	x0, [x0, #944]
  423ec8:	cbz	x0, 423ed0 <wcrtomb@plt+0x1f2b0>
  423ecc:	blr	x0
  423ed0:	mov	x0, x21
  423ed4:	bl	43efc4 <argp_parse@@Base+0xb884>
  423ed8:	mov	x19, x0
  423edc:	mov	w2, #0x5                   	// #5
  423ee0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  423ee4:	add	x1, x1, #0xb00
  423ee8:	mov	x0, #0x0                   	// #0
  423eec:	bl	4049c0 <dcgettext@plt>
  423ef0:	mov	x4, x0
  423ef4:	mov	x3, x19
  423ef8:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x12e64>
  423efc:	add	x2, x2, #0x6c8
  423f00:	mov	w1, #0x0                   	// #0
  423f04:	mov	w0, #0x0                   	// #0
  423f08:	bl	404050 <error@plt>
  423f0c:	bl	40e5ac <wcrtomb@plt+0x998c>
  423f10:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  423f14:	add	x0, x0, #0x730
  423f18:	bl	423060 <wcrtomb@plt+0x1e440>
  423f1c:	mov	w19, #0x0                   	// #0
  423f20:	b	423154 <wcrtomb@plt+0x1e534>
  423f24:	ldr	x1, [x22]
  423f28:	mov	w0, #0x0                   	// #0
  423f2c:	bl	422f64 <wcrtomb@plt+0x1e344>
  423f30:	mov	w19, #0x0                   	// #0
  423f34:	b	423154 <wcrtomb@plt+0x1e534>
  423f38:	ldr	x1, [x22]
  423f3c:	mov	w0, #0x2                   	// #2
  423f40:	bl	422f64 <wcrtomb@plt+0x1e344>
  423f44:	mov	w19, #0x0                   	// #0
  423f48:	b	423154 <wcrtomb@plt+0x1e534>
  423f4c:	adrp	x2, 481000 <argp_program_version_hook@@Base+0x298>
  423f50:	add	x2, x2, #0x208
  423f54:	mov	x1, #0xffffffff            	// #4294967295
  423f58:	mov	x0, x21
  423f5c:	bl	42221c <wcrtomb@plt+0x1d5fc>
  423f60:	cmn	x0, #0x1
  423f64:	b.eq	423f78 <wcrtomb@plt+0x1f358>  // b.none
  423f68:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  423f6c:	str	w0, [x1, #720]
  423f70:	mov	w19, #0x0                   	// #0
  423f74:	b	423154 <wcrtomb@plt+0x1e534>
  423f78:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423f7c:	mov	w1, #0xffffffff            	// #-1
  423f80:	str	w1, [x0, #720]
  423f84:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  423f88:	ldr	x0, [x0, #520]
  423f8c:	mov	w19, #0x0                   	// #0
  423f90:	cbz	x0, 423154 <wcrtomb@plt+0x1e534>
  423f94:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  423f98:	add	x1, x1, #0x2d0
  423f9c:	bl	41d3b8 <wcrtomb@plt+0x18798>
  423fa0:	b	423154 <wcrtomb@plt+0x1e534>
  423fa4:	mov	x0, x21
  423fa8:	bl	41a3f0 <wcrtomb@plt+0x157d0>
  423fac:	mov	w19, #0x0                   	// #0
  423fb0:	b	423154 <wcrtomb@plt+0x1e534>
  423fb4:	mov	w1, w20
  423fb8:	mov	x0, #0x0                   	// #0
  423fbc:	bl	43eab0 <argp_parse@@Base+0xb370>
  423fc0:	b	423154 <wcrtomb@plt+0x1e534>
  423fc4:	stp	x23, x24, [sp, #48]
  423fc8:	stp	x25, x26, [sp, #64]
  423fcc:	adrp	x4, 404000 <fputs@plt>
  423fd0:	add	x4, x4, #0x7c0
  423fd4:	adrp	x3, 43f000 <argp_parse@@Base+0xb8c0>
  423fd8:	add	x3, x3, #0xef4
  423fdc:	mov	x2, #0x0                   	// #0
  423fe0:	mov	x1, #0x0                   	// #0
  423fe4:	add	x0, sp, #0x88
  423fe8:	bl	440f78 <_obstack_begin@@Base>
  423fec:	adrp	x26, 453000 <_obstack_memory_used@@Base+0x11e64>
  423ff0:	add	x26, x26, #0x2f0
  423ff4:	b	4241d4 <wcrtomb@plt+0x1f5b4>
  423ff8:	sub	x19, x0, x21
  423ffc:	add	x19, x19, #0x1
  424000:	ldr	x0, [sp, #168]
  424004:	ldr	x1, [sp, #160]
  424008:	sub	x0, x0, x1
  42400c:	cmp	x19, x0
  424010:	b.hi	424090 <wcrtomb@plt+0x1f470>  // b.pmore
  424014:	mov	x2, x19
  424018:	mov	x1, x21
  42401c:	ldr	x0, [sp, #160]
  424020:	bl	403f70 <memcpy@plt>
  424024:	ldr	x25, [sp, #160]
  424028:	add	x25, x25, x19
  42402c:	str	x25, [sp, #160]
  424030:	sub	x19, x24, x19
  424034:	add	x23, x20, #0x1
  424038:	ldrb	w20, [x20, #1]
  42403c:	cbz	w20, 424060 <wcrtomb@plt+0x1f440>
  424040:	bl	404750 <__ctype_b_loc@plt>
  424044:	ldr	x0, [x0]
  424048:	and	x1, x20, #0xff
  42404c:	ldrh	w1, [x0, x1, lsl #1]
  424050:	tbz	w1, #13, 4240a0 <wcrtomb@plt+0x1f480>
  424054:	sub	x19, x19, #0x1
  424058:	ldrb	w20, [x23, #1]!
  42405c:	cbnz	w20, 424048 <wcrtomb@plt+0x1f428>
  424060:	ldr	x0, [sp, #168]
  424064:	sub	x25, x0, x25
  424068:	cmp	x19, x25
  42406c:	b.hi	42419c <wcrtomb@plt+0x1f57c>  // b.pmore
  424070:	mov	x2, x19
  424074:	mov	x1, x23
  424078:	ldr	x0, [sp, #160]
  42407c:	bl	403f70 <memcpy@plt>
  424080:	ldr	x0, [sp, #160]
  424084:	add	x19, x0, x19
  424088:	str	x19, [sp, #160]
  42408c:	b	4241c8 <wcrtomb@plt+0x1f5a8>
  424090:	mov	x1, x19
  424094:	add	x0, sp, #0x88
  424098:	bl	440fcc <_obstack_newchunk@@Base>
  42409c:	b	424014 <wcrtomb@plt+0x1f3f4>
  4240a0:	cmp	w20, #0x7b
  4240a4:	b.ne	424060 <wcrtomb@plt+0x1f440>  // b.any
  4240a8:	add	x0, x23, x19
  4240ac:	ldurb	w0, [x0, #-1]
  4240b0:	cmp	w0, #0x7d
  4240b4:	b.ne	424060 <wcrtomb@plt+0x1f440>  // b.any
  4240b8:	mov	x0, x19
  4240bc:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  4240c0:	mov	x20, x0
  4240c4:	sub	x25, x19, #0x2
  4240c8:	mov	x2, x25
  4240cc:	add	x1, x23, #0x1
  4240d0:	bl	403f70 <memcpy@plt>
  4240d4:	strb	wzr, [x20, x25]
  4240d8:	add	x3, sp, #0x58
  4240dc:	mov	x2, x20
  4240e0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  4240e4:	add	x1, x1, #0xb60
  4240e8:	mov	x0, x22
  4240ec:	bl	422d34 <wcrtomb@plt+0x1e114>
  4240f0:	cbz	w0, 424130 <wcrtomb@plt+0x1f510>
  4240f4:	ldr	x0, [sp, #168]
  4240f8:	ldr	x1, [sp, #160]
  4240fc:	sub	x0, x0, x1
  424100:	cmp	x19, x0
  424104:	b.hi	42418c <wcrtomb@plt+0x1f56c>  // b.pmore
  424108:	mov	x2, x19
  42410c:	mov	x1, x23
  424110:	ldr	x0, [sp, #160]
  424114:	bl	403f70 <memcpy@plt>
  424118:	ldr	x0, [sp, #160]
  42411c:	add	x19, x0, x19
  424120:	str	x19, [sp, #160]
  424124:	mov	x0, x20
  424128:	bl	4047c0 <free@plt>
  42412c:	b	4241c8 <wcrtomb@plt+0x1f5a8>
  424130:	add	x2, sp, #0x68
  424134:	ldp	x0, x1, [sp, #88]
  424138:	bl	41ad74 <wcrtomb@plt+0x16154>
  42413c:	mov	x23, x0
  424140:	bl	403ff0 <strlen@plt>
  424144:	mov	x19, x0
  424148:	ldr	x0, [sp, #168]
  42414c:	ldr	x1, [sp, #160]
  424150:	sub	x0, x0, x1
  424154:	cmp	x19, x0
  424158:	b.hi	42417c <wcrtomb@plt+0x1f55c>  // b.pmore
  42415c:	mov	x2, x19
  424160:	mov	x1, x23
  424164:	ldr	x0, [sp, #160]
  424168:	bl	403f70 <memcpy@plt>
  42416c:	ldr	x0, [sp, #160]
  424170:	add	x19, x0, x19
  424174:	str	x19, [sp, #160]
  424178:	b	424124 <wcrtomb@plt+0x1f504>
  42417c:	mov	x1, x19
  424180:	add	x0, sp, #0x88
  424184:	bl	440fcc <_obstack_newchunk@@Base>
  424188:	b	42415c <wcrtomb@plt+0x1f53c>
  42418c:	mov	x1, x19
  424190:	add	x0, sp, #0x88
  424194:	bl	440fcc <_obstack_newchunk@@Base>
  424198:	b	424108 <wcrtomb@plt+0x1f4e8>
  42419c:	mov	x1, x19
  4241a0:	add	x0, sp, #0x88
  4241a4:	bl	440fcc <_obstack_newchunk@@Base>
  4241a8:	b	424070 <wcrtomb@plt+0x1f450>
  4241ac:	mov	x2, x24
  4241b0:	mov	x1, x21
  4241b4:	ldr	x0, [sp, #160]
  4241b8:	bl	403f70 <memcpy@plt>
  4241bc:	ldr	x0, [sp, #160]
  4241c0:	add	x0, x0, x24
  4241c4:	str	x0, [sp, #160]
  4241c8:	add	x21, x21, x24
  4241cc:	ldrb	w0, [x21]
  4241d0:	cbnz	w0, 424228 <wcrtomb@plt+0x1f608>
  4241d4:	ldrb	w0, [x21]
  4241d8:	cbz	w0, 424260 <wcrtomb@plt+0x1f640>
  4241dc:	mov	x1, x26
  4241e0:	mov	x0, x21
  4241e4:	bl	404a90 <strcspn@plt>
  4241e8:	mov	x24, x0
  4241ec:	mov	x2, x0
  4241f0:	mov	w1, #0x3d                  	// #61
  4241f4:	mov	x0, x21
  4241f8:	bl	404960 <memchr@plt>
  4241fc:	mov	x20, x0
  424200:	cbnz	x0, 423ff8 <wcrtomb@plt+0x1f3d8>
  424204:	ldr	x0, [sp, #168]
  424208:	ldr	x1, [sp, #160]
  42420c:	sub	x0, x0, x1
  424210:	cmp	x24, x0
  424214:	b.ls	4241ac <wcrtomb@plt+0x1f58c>  // b.plast
  424218:	mov	x1, x24
  42421c:	add	x0, sp, #0x88
  424220:	bl	440fcc <_obstack_newchunk@@Base>
  424224:	b	4241ac <wcrtomb@plt+0x1f58c>
  424228:	ldr	x1, [sp, #168]
  42422c:	ldr	x0, [sp, #160]
  424230:	cmp	x1, x0
  424234:	b.eq	424250 <wcrtomb@plt+0x1f630>  // b.none
  424238:	ldr	x0, [sp, #160]
  42423c:	add	x1, x0, #0x1
  424240:	str	x1, [sp, #160]
  424244:	ldrb	w1, [x21], #1
  424248:	strb	w1, [x0]
  42424c:	b	4241d4 <wcrtomb@plt+0x1f5b4>
  424250:	mov	x1, #0x1                   	// #1
  424254:	add	x0, sp, #0x88
  424258:	bl	440fcc <_obstack_newchunk@@Base>
  42425c:	b	424238 <wcrtomb@plt+0x1f618>
  424260:	ldr	x1, [sp, #168]
  424264:	ldr	x0, [sp, #160]
  424268:	cmp	x1, x0
  42426c:	b.eq	4242f8 <wcrtomb@plt+0x1f6d8>  // b.none
  424270:	ldr	x0, [sp, #160]
  424274:	add	x1, x0, #0x1
  424278:	str	x1, [sp, #160]
  42427c:	strb	wzr, [x0]
  424280:	ldr	x0, [sp, #152]
  424284:	ldr	x2, [sp, #160]
  424288:	cmp	x0, x2
  42428c:	b.eq	424308 <wcrtomb@plt+0x1f6e8>  // b.none
  424290:	ldr	x1, [sp, #184]
  424294:	add	x2, x2, x1
  424298:	bic	x1, x2, x1
  42429c:	ldr	x2, [sp, #144]
  4242a0:	ldr	x3, [sp, #168]
  4242a4:	sub	x4, x1, x2
  4242a8:	sub	x2, x3, x2
  4242ac:	cmp	x4, x2
  4242b0:	csel	x1, x1, x3, ls  // ls = plast
  4242b4:	str	x1, [sp, #160]
  4242b8:	str	x1, [sp, #152]
  4242bc:	bl	440154 <argp_parse@@Base+0xca14>
  4242c0:	mov	x19, x0
  4242c4:	mov	x1, #0x0                   	// #0
  4242c8:	add	x0, sp, #0x88
  4242cc:	bl	44111c <_obstack_free@@Base>
  4242d0:	mov	w0, #0x1                   	// #1
  4242d4:	strb	w0, [x22, #17]
  4242d8:	mov	x0, x19
  4242dc:	bl	413164 <wcrtomb@plt+0xe544>
  4242e0:	mov	x0, x19
  4242e4:	bl	4047c0 <free@plt>
  4242e8:	mov	w19, #0x0                   	// #0
  4242ec:	ldp	x23, x24, [sp, #48]
  4242f0:	ldp	x25, x26, [sp, #64]
  4242f4:	b	423154 <wcrtomb@plt+0x1e534>
  4242f8:	mov	x1, #0x1                   	// #1
  4242fc:	add	x0, sp, #0x88
  424300:	bl	440fcc <_obstack_newchunk@@Base>
  424304:	b	424270 <wcrtomb@plt+0x1f650>
  424308:	ldrb	w1, [sp, #216]
  42430c:	orr	w1, w1, #0x2
  424310:	strb	w1, [sp, #216]
  424314:	b	424290 <wcrtomb@plt+0x1f670>
  424318:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  42431c:	add	x0, x0, #0xb70
  424320:	bl	423060 <wcrtomb@plt+0x1e440>
  424324:	mov	w19, #0x0                   	// #0
  424328:	b	423154 <wcrtomb@plt+0x1e534>
  42432c:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x14e64>
  424330:	add	x4, x4, #0x9f8
  424334:	add	x3, sp, #0x88
  424338:	mov	w2, #0xa                   	// #10
  42433c:	mov	x1, #0x0                   	// #0
  424340:	mov	x0, x21
  424344:	bl	440240 <argp_parse@@Base+0xcb00>
  424348:	cbnz	w0, 424374 <wcrtomb@plt+0x1f754>
  42434c:	ldr	x0, [sp, #136]
  424350:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  424354:	str	x0, [x1, #856]
  424358:	tst	x0, #0x1ff
  42435c:	b.ne	4243d0 <wcrtomb@plt+0x1f7b0>  // b.any
  424360:	lsr	x0, x0, #9
  424364:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  424368:	str	w0, [x1, #684]
  42436c:	mov	w19, #0x0                   	// #0
  424370:	b	423154 <wcrtomb@plt+0x1e534>
  424374:	stp	x23, x24, [sp, #48]
  424378:	stp	x25, x26, [sp, #64]
  42437c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424380:	ldr	x0, [x0, #944]
  424384:	cbz	x0, 42438c <wcrtomb@plt+0x1f76c>
  424388:	blr	x0
  42438c:	mov	x0, x21
  424390:	bl	43efc4 <argp_parse@@Base+0xb884>
  424394:	mov	x19, x0
  424398:	mov	w2, #0x5                   	// #5
  42439c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  4243a0:	add	x1, x1, #0xb78
  4243a4:	mov	x0, #0x0                   	// #0
  4243a8:	bl	4049c0 <dcgettext@plt>
  4243ac:	mov	x4, x0
  4243b0:	mov	x3, x19
  4243b4:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x12e64>
  4243b8:	add	x2, x2, #0x6c8
  4243bc:	mov	w1, #0x0                   	// #0
  4243c0:	mov	w0, #0x0                   	// #0
  4243c4:	bl	404050 <error@plt>
  4243c8:	mov	w0, #0x2                   	// #2
  4243cc:	bl	422b00 <wcrtomb@plt+0x1dee0>
  4243d0:	stp	x23, x24, [sp, #48]
  4243d4:	stp	x25, x26, [sp, #64]
  4243d8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4243dc:	ldr	x0, [x0, #944]
  4243e0:	cbz	x0, 4243e8 <wcrtomb@plt+0x1f7c8>
  4243e4:	blr	x0
  4243e8:	mov	w2, #0x5                   	// #5
  4243ec:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  4243f0:	add	x1, x1, #0xb90
  4243f4:	mov	x0, #0x0                   	// #0
  4243f8:	bl	4049c0 <dcgettext@plt>
  4243fc:	mov	w3, #0x200                 	// #512
  424400:	mov	x2, x0
  424404:	mov	w1, #0x0                   	// #0
  424408:	mov	w0, #0x0                   	// #0
  42440c:	bl	404050 <error@plt>
  424410:	mov	w0, #0x2                   	// #2
  424414:	bl	422b00 <wcrtomb@plt+0x1dee0>
  424418:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42441c:	mov	w1, #0x1                   	// #1
  424420:	strb	w1, [x0, #4066]
  424424:	mov	w19, #0x0                   	// #0
  424428:	b	423154 <wcrtomb@plt+0x1e534>
  42442c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424430:	mov	w1, #0x1                   	// #1
  424434:	strb	w1, [x0, #680]
  424438:	mov	w19, #0x0                   	// #0
  42443c:	b	423154 <wcrtomb@plt+0x1e534>
  424440:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424444:	mov	w1, #0x1                   	// #1
  424448:	strb	w1, [x0, #712]
  42444c:	mov	w19, #0x0                   	// #0
  424450:	b	423154 <wcrtomb@plt+0x1e534>
  424454:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  424458:	str	x21, [x0, #600]
  42445c:	mov	w19, #0x0                   	// #0
  424460:	b	423154 <wcrtomb@plt+0x1e534>
  424464:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424468:	str	x21, [x0, #744]
  42446c:	mov	w19, #0x0                   	// #0
  424470:	b	423154 <wcrtomb@plt+0x1e534>
  424474:	stp	x23, x24, [sp, #48]
  424478:	stp	x25, x26, [sp, #64]
  42447c:	bl	422454 <wcrtomb@plt+0x1d834>
  424480:	mov	x19, x0
  424484:	bl	4046c0 <puts@plt>
  424488:	bl	4348cc <argp_parse@@Base+0x118c>
  42448c:	mov	x0, x19
  424490:	bl	4047c0 <free@plt>
  424494:	mov	w0, #0x0                   	// #0
  424498:	bl	404020 <exit@plt>
  42449c:	stp	x23, x24, [sp, #48]
  4244a0:	stp	x25, x26, [sp, #64]
  4244a4:	bl	41621c <wcrtomb@plt+0x115fc>
  4244a8:	bl	4348cc <argp_parse@@Base+0x118c>
  4244ac:	mov	w0, #0x0                   	// #0
  4244b0:	bl	404020 <exit@plt>
  4244b4:	adrp	x4, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  4244b8:	add	x4, x4, #0x7f8
  4244bc:	add	x3, sp, #0x88
  4244c0:	mov	w2, #0xa                   	// #10
  4244c4:	mov	x1, #0x0                   	// #0
  4244c8:	mov	x0, x21
  4244cc:	bl	440240 <argp_parse@@Base+0xcb00>
  4244d0:	cbnz	w0, 4244e8 <wcrtomb@plt+0x1f8c8>
  4244d4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4244d8:	ldr	x1, [sp, #136]
  4244dc:	str	x1, [x0, #816]
  4244e0:	mov	w19, #0x0                   	// #0
  4244e4:	b	423154 <wcrtomb@plt+0x1e534>
  4244e8:	stp	x23, x24, [sp, #48]
  4244ec:	stp	x25, x26, [sp, #64]
  4244f0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4244f4:	ldr	x0, [x0, #944]
  4244f8:	cbz	x0, 424500 <wcrtomb@plt+0x1f8e0>
  4244fc:	blr	x0
  424500:	mov	x0, x21
  424504:	bl	43efc4 <argp_parse@@Base+0xb884>
  424508:	mov	x19, x0
  42450c:	mov	w2, #0x5                   	// #5
  424510:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  424514:	add	x1, x1, #0xbb8
  424518:	mov	x0, #0x0                   	// #0
  42451c:	bl	4049c0 <dcgettext@plt>
  424520:	mov	x4, x0
  424524:	mov	x3, x19
  424528:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x12e64>
  42452c:	add	x2, x2, #0x6c8
  424530:	mov	w1, #0x0                   	// #0
  424534:	mov	w0, #0x0                   	// #0
  424538:	bl	404050 <error@plt>
  42453c:	mov	w0, #0x2                   	// #2
  424540:	bl	422b00 <wcrtomb@plt+0x1dee0>
  424544:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424548:	mov	w1, #0x1                   	// #1
  42454c:	strb	w1, [x0, #634]
  424550:	mov	w19, #0x0                   	// #0
  424554:	b	423154 <wcrtomb@plt+0x1e534>
  424558:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42455c:	mov	w1, #0x1                   	// #1
  424560:	strb	w1, [x0, #776]
  424564:	mov	w19, #0x0                   	// #0
  424568:	b	423154 <wcrtomb@plt+0x1e534>
  42456c:	adrp	x19, 47e000 <_obstack_memory_used@@Base+0x3ce64>
  424570:	add	x19, x19, #0x170
  424574:	add	x19, x19, #0x38
  424578:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42457c:	ldr	x5, [x0, #920]
  424580:	mov	x4, #0x4                   	// #4
  424584:	mov	x3, x19
  424588:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x17e64>
  42458c:	add	x2, x2, #0x950
  424590:	add	x2, x2, #0x138
  424594:	mov	x1, x21
  424598:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  42459c:	add	x0, x0, #0xbd8
  4245a0:	bl	42fefc <wcrtomb@plt+0x2b2dc>
  4245a4:	ldr	w1, [x19, x0, lsl #2]
  4245a8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4245ac:	str	w1, [x0, #456]
  4245b0:	mov	w19, #0x0                   	// #0
  4245b4:	b	423154 <wcrtomb@plt+0x1e534>
  4245b8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4245bc:	mov	w1, #0x1                   	// #1
  4245c0:	strb	w1, [x0, #693]
  4245c4:	str	x21, [x22, #24]
  4245c8:	mov	w19, #0x0                   	// #0
  4245cc:	b	423154 <wcrtomb@plt+0x1e534>
  4245d0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4245d4:	ldr	x0, [x0, #552]
  4245d8:	cbnz	x0, 4245ec <wcrtomb@plt+0x1f9cc>
  4245dc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4245e0:	str	x21, [x0, #552]
  4245e4:	mov	w19, #0x0                   	// #0
  4245e8:	b	423154 <wcrtomb@plt+0x1e534>
  4245ec:	stp	x23, x24, [sp, #48]
  4245f0:	stp	x25, x26, [sp, #64]
  4245f4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4245f8:	ldr	x0, [x0, #944]
  4245fc:	cbz	x0, 424604 <wcrtomb@plt+0x1f9e4>
  424600:	blr	x0
  424604:	mov	w2, #0x5                   	// #5
  424608:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  42460c:	add	x1, x1, #0xbe0
  424610:	mov	x0, #0x0                   	// #0
  424614:	bl	4049c0 <dcgettext@plt>
  424618:	mov	x2, x0
  42461c:	mov	w1, #0x0                   	// #0
  424620:	mov	w0, #0x0                   	// #0
  424624:	bl	404050 <error@plt>
  424628:	mov	w0, #0x2                   	// #2
  42462c:	bl	422b00 <wcrtomb@plt+0x1dee0>
  424630:	cbz	x21, 424650 <wcrtomb@plt+0x1fa30>
  424634:	mov	x0, x21
  424638:	bl	422a4c <wcrtomb@plt+0x1de2c>
  42463c:	adrp	x1, 422000 <wcrtomb@plt+0x1d3e0>
  424640:	add	x1, x1, #0x3ec
  424644:	bl	404270 <signal@plt>
  424648:	mov	w19, #0x0                   	// #0
  42464c:	b	423154 <wcrtomb@plt+0x1e534>
  424650:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424654:	mov	w1, #0x1                   	// #1
  424658:	strb	w1, [x0, #633]
  42465c:	mov	w19, #0x0                   	// #0
  424660:	b	423154 <wcrtomb@plt+0x1e534>
  424664:	mov	x0, x21
  424668:	bl	426b78 <wcrtomb@plt+0x21f58>
  42466c:	mov	w19, #0x0                   	// #0
  424670:	b	423154 <wcrtomb@plt+0x1e534>
  424674:	ldr	x1, [x22]
  424678:	mov	x0, x21
  42467c:	bl	422fd0 <wcrtomb@plt+0x1e3b0>
  424680:	mov	w19, #0x0                   	// #0
  424684:	b	423154 <wcrtomb@plt+0x1e534>
  424688:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42468c:	str	x21, [x0, #600]
  424690:	mov	w19, #0x0                   	// #0
  424694:	b	423154 <wcrtomb@plt+0x1e534>
  424698:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42469c:	mov	w1, #0xffffffff            	// #-1
  4246a0:	str	w1, [x0, #916]
  4246a4:	mov	w19, #0x0                   	// #0
  4246a8:	b	423154 <wcrtomb@plt+0x1e534>
  4246ac:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4246b0:	mov	w1, #0xffffffff            	// #-1
  4246b4:	str	w1, [x0, #548]
  4246b8:	mov	w19, #0x0                   	// #0
  4246bc:	b	423154 <wcrtomb@plt+0x1e534>
  4246c0:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  4246c4:	add	x0, x0, #0xb70
  4246c8:	bl	423060 <wcrtomb@plt+0x1e440>
  4246cc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4246d0:	mov	w1, #0x1                   	// #1
  4246d4:	str	w1, [x0, #832]
  4246d8:	mov	w19, #0x0                   	// #0
  4246dc:	b	423154 <wcrtomb@plt+0x1e534>
  4246e0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4246e4:	mov	w1, #0xffffffff            	// #-1
  4246e8:	str	w1, [x0, #832]
  4246ec:	mov	w19, #0x0                   	// #0
  4246f0:	b	423154 <wcrtomb@plt+0x1e534>
  4246f4:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  4246f8:	add	x0, x0, #0xb70
  4246fc:	bl	423060 <wcrtomb@plt+0x1e440>
  424700:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424704:	mov	w1, #0x1                   	// #1
  424708:	str	w1, [x0, #920]
  42470c:	mov	w19, #0x0                   	// #0
  424710:	b	423154 <wcrtomb@plt+0x1e534>
  424714:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424718:	mov	w1, #0xffffffff            	// #-1
  42471c:	str	w1, [x0, #920]
  424720:	mov	w19, #0x0                   	// #0
  424724:	b	423154 <wcrtomb@plt+0x1e534>
  424728:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  42472c:	add	x0, x0, #0xb70
  424730:	bl	423060 <wcrtomb@plt+0x1e440>
  424734:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424738:	mov	w1, #0x1                   	// #1
  42473c:	str	w1, [x0, #592]
  424740:	mov	w19, #0x0                   	// #0
  424744:	b	423154 <wcrtomb@plt+0x1e534>
  424748:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42474c:	mov	w1, #0xffffffff            	// #-1
  424750:	str	w1, [x0, #592]
  424754:	mov	w19, #0x0                   	// #0
  424758:	b	423154 <wcrtomb@plt+0x1e534>
  42475c:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  424760:	add	x0, x0, #0xb70
  424764:	bl	423060 <wcrtomb@plt+0x1e440>
  424768:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42476c:	mov	w1, #0x1                   	// #1
  424770:	str	w1, [x0, #592]
  424774:	cmp	w19, #0x14e
  424778:	cset	w1, eq  // eq = none
  42477c:	mov	x0, x21
  424780:	bl	428d1c <wcrtomb@plt+0x240fc>
  424784:	mov	w19, #0x0                   	// #0
  424788:	b	423154 <wcrtomb@plt+0x1e534>
  42478c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424790:	mov	w1, #0x1                   	// #1
  424794:	str	w1, [x0, #916]
  424798:	mov	w19, #0x0                   	// #0
  42479c:	b	423154 <wcrtomb@plt+0x1e534>
  4247a0:	mov	x0, x21
  4247a4:	bl	427bdc <wcrtomb@plt+0x22fbc>
  4247a8:	mov	w19, #0x0                   	// #0
  4247ac:	b	423154 <wcrtomb@plt+0x1e534>
  4247b0:	stp	x23, x24, [sp, #48]
  4247b4:	stp	x25, x26, [sp, #64]
  4247b8:	mov	w2, #0x5                   	// #5
  4247bc:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  4247c0:	add	x1, x1, #0xc08
  4247c4:	mov	x0, #0x0                   	// #0
  4247c8:	bl	4049c0 <dcgettext@plt>
  4247cc:	mov	x1, x0
  4247d0:	mov	x0, x20
  4247d4:	bl	432fec <argp_error@@Base>
  4247d8:	mov	w0, #0x40                  	// #64
  4247dc:	bl	404020 <exit@plt>
  4247e0:	stp	x23, x24, [sp, #48]
  4247e4:	stp	x25, x26, [sp, #64]
  4247e8:	ldr	x0, [x22]
  4247ec:	ldr	w0, [x0]
  4247f0:	cmp	w0, #0x2
  4247f4:	b.eq	424804 <wcrtomb@plt+0x1fbe4>  // b.none
  4247f8:	cbz	w0, 424838 <wcrtomb@plt+0x1fc18>
  4247fc:	mov	w0, #0x40                  	// #64
  424800:	bl	404020 <exit@plt>
  424804:	mov	w2, #0x5                   	// #5
  424808:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  42480c:	add	x1, x1, #0xc40
  424810:	mov	x0, #0x0                   	// #0
  424814:	bl	4049c0 <dcgettext@plt>
  424818:	ldr	x1, [x22]
  42481c:	ldr	x4, [x1, #16]
  424820:	ldr	x3, [x1, #8]
  424824:	mov	x2, x0
  424828:	mov	w1, #0x0                   	// #0
  42482c:	mov	w0, #0x0                   	// #0
  424830:	bl	404050 <error@plt>
  424834:	b	4247fc <wcrtomb@plt+0x1fbdc>
  424838:	mov	w2, #0x5                   	// #5
  42483c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  424840:	add	x1, x1, #0xc60
  424844:	mov	x0, #0x0                   	// #0
  424848:	bl	4049c0 <dcgettext@plt>
  42484c:	ldr	x1, [x22]
  424850:	ldr	x3, [x1, #8]
  424854:	mov	x2, x0
  424858:	mov	w1, #0x0                   	// #0
  42485c:	mov	w0, #0x0                   	// #0
  424860:	bl	404050 <error@plt>
  424864:	b	4247fc <wcrtomb@plt+0x1fbdc>
  424868:	mov	w19, #0x7                   	// #7
  42486c:	b	423154 <wcrtomb@plt+0x1e534>
  424870:	mov	w19, #0x7                   	// #7
  424874:	b	423154 <wcrtomb@plt+0x1e534>
  424878:	stp	x29, x30, [sp, #-48]!
  42487c:	mov	x29, sp
  424880:	str	x19, [sp, #16]
  424884:	mov	x19, x2
  424888:	adrp	x5, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42488c:	add	x5, x5, #0xbb0
  424890:	str	x2, [x5, #120]
  424894:	add	x5, x5, #0x78
  424898:	add	x4, sp, #0x2c
  42489c:	mov	w3, #0x28                  	// #40
  4248a0:	mov	x2, x1
  4248a4:	mov	w1, w0
  4248a8:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x3ce64>
  4248ac:	add	x0, x0, #0x170
  4248b0:	bl	433740 <argp_parse@@Base>
  4248b4:	cbnz	w0, 4248cc <wcrtomb@plt+0x1fcac>
  4248b8:	ldr	w0, [x19]
  4248bc:	cbz	w0, 4248d0 <wcrtomb@plt+0x1fcb0>
  4248c0:	ldr	x19, [sp, #16]
  4248c4:	ldp	x29, x30, [sp], #48
  4248c8:	ret
  4248cc:	bl	404660 <abort@plt>
  4248d0:	bl	41d528 <wcrtomb@plt+0x18908>
  4248d4:	and	w0, w0, #0xff
  4248d8:	cbz	w0, 4248c0 <wcrtomb@plt+0x1fca0>
  4248dc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4248e0:	ldr	x0, [x0, #944]
  4248e4:	cbz	x0, 4248ec <wcrtomb@plt+0x1fccc>
  4248e8:	blr	x0
  4248ec:	mov	w2, #0x5                   	// #5
  4248f0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  4248f4:	add	x1, x1, #0xc78
  4248f8:	mov	x0, #0x0                   	// #0
  4248fc:	bl	4049c0 <dcgettext@plt>
  424900:	ldr	x3, [x19, #8]
  424904:	mov	x2, x0
  424908:	mov	w1, #0x0                   	// #0
  42490c:	mov	w0, #0x0                   	// #0
  424910:	bl	404050 <error@plt>
  424914:	mov	w0, #0x2                   	// #2
  424918:	bl	422b00 <wcrtomb@plt+0x1dee0>
  42491c:	stp	x29, x30, [sp, #-16]!
  424920:	mov	x29, sp
  424924:	mov	x2, #0x1a8                 	// #424
  424928:	mov	w1, #0x0                   	// #0
  42492c:	bl	404420 <memset@plt>
  424930:	ldp	x29, x30, [sp], #16
  424934:	ret
  424938:	stp	x29, x30, [sp, #-32]!
  42493c:	mov	x29, sp
  424940:	str	x19, [sp, #16]
  424944:	mov	x19, x0
  424948:	ldr	x0, [x0, #400]
  42494c:	cbz	x0, 424974 <wcrtomb@plt+0x1fd54>
  424950:	bl	4045a0 <closedir@plt>
  424954:	mov	w1, w0
  424958:	str	xzr, [x19, #400]
  42495c:	str	wzr, [x19, #408]
  424960:	mov	w0, #0x1                   	// #1
  424964:	cbnz	w1, 424998 <wcrtomb@plt+0x1fd78>
  424968:	ldr	x19, [sp, #16]
  42496c:	ldp	x29, x30, [sp], #32
  424970:	ret
  424974:	ldr	w0, [x19, #408]
  424978:	cmp	w0, #0x0
  42497c:	b.gt	42498c <wcrtomb@plt+0x1fd6c>
  424980:	str	wzr, [x19, #408]
  424984:	mov	w0, #0x1                   	// #1
  424988:	b	424968 <wcrtomb@plt+0x1fd48>
  42498c:	bl	4045d0 <close@plt>
  424990:	mov	w1, w0
  424994:	b	424958 <wcrtomb@plt+0x1fd38>
  424998:	ldr	x0, [x19]
  42499c:	bl	41b670 <wcrtomb@plt+0x16a50>
  4249a0:	mov	w0, #0x0                   	// #0
  4249a4:	b	424968 <wcrtomb@plt+0x1fd48>
  4249a8:	stp	x29, x30, [sp, #-32]!
  4249ac:	mov	x29, sp
  4249b0:	str	x19, [sp, #16]
  4249b4:	mov	x19, x0
  4249b8:	bl	424938 <wcrtomb@plt+0x1fd18>
  4249bc:	ldr	x1, [x19, #328]
  4249c0:	ldr	x0, [x19, #336]
  4249c4:	bl	41392c <wcrtomb@plt+0xed0c>
  4249c8:	ldr	x0, [x19]
  4249cc:	bl	4047c0 <free@plt>
  4249d0:	ldr	x0, [x19, #8]
  4249d4:	bl	4047c0 <free@plt>
  4249d8:	ldr	x0, [x19, #24]
  4249dc:	bl	4047c0 <free@plt>
  4249e0:	ldr	x0, [x19, #32]
  4249e4:	bl	4047c0 <free@plt>
  4249e8:	ldr	x0, [x19, #40]
  4249ec:	bl	4047c0 <free@plt>
  4249f0:	ldr	x0, [x19, #48]
  4249f4:	bl	4047c0 <free@plt>
  4249f8:	ldr	x0, [x19, #56]
  4249fc:	bl	4047c0 <free@plt>
  424a00:	ldr	x0, [x19, #72]
  424a04:	bl	4047c0 <free@plt>
  424a08:	ldr	x0, [x19, #304]
  424a0c:	bl	4047c0 <free@plt>
  424a10:	ldr	x0, [x19, #384]
  424a14:	bl	4047c0 <free@plt>
  424a18:	add	x0, x19, #0x158
  424a1c:	bl	413f10 <wcrtomb@plt+0xf2f0>
  424a20:	mov	x0, x19
  424a24:	bl	40ebbc <wcrtomb@plt+0x9f9c>
  424a28:	mov	x2, #0x1a8                 	// #424
  424a2c:	mov	w1, #0x0                   	// #0
  424a30:	mov	x0, x19
  424a34:	bl	404420 <memset@plt>
  424a38:	ldr	x19, [sp, #16]
  424a3c:	ldp	x29, x30, [sp], #32
  424a40:	ret
  424a44:	adrp	x4, 480000 <_obstack_memory_used@@Base+0x3ee64>
  424a48:	ldr	w5, [x4, #3984]
  424a4c:	mov	w4, #0x10                  	// #16
  424a50:	asr	w4, w4, w5
  424a54:	ands	w4, w4, #0x1
  424a58:	csel	x3, x3, xzr, ne  // ne = any
  424a5c:	cmp	w4, #0x0
  424a60:	csel	x1, x1, xzr, ne  // ne = any
  424a64:	cmp	x0, x2
  424a68:	b.lt	424a78 <wcrtomb@plt+0x1fe58>  // b.tstop
  424a6c:	sub	w1, w1, w3
  424a70:	csinc	w0, w1, wzr, le
  424a74:	ret
  424a78:	mov	w0, #0xffffffff            	// #-1
  424a7c:	b	424a74 <wcrtomb@plt+0x1fe54>
  424a80:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  424a84:	ldr	w1, [x1, #3392]
  424a88:	cmp	w1, w0
  424a8c:	b.ge	424a98 <wcrtomb@plt+0x1fe78>  // b.tcont
  424a90:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  424a94:	str	w0, [x1, #3392]
  424a98:	ret
  424a9c:	stp	x29, x30, [sp, #-416]!
  424aa0:	mov	x29, sp
  424aa4:	stp	x19, x20, [sp, #16]
  424aa8:	stp	x21, x22, [sp, #32]
  424aac:	stp	x23, x24, [sp, #48]
  424ab0:	stp	x25, x26, [sp, #64]
  424ab4:	mov	w19, w0
  424ab8:	mov	x21, x1
  424abc:	bl	405450 <wcrtomb@plt+0x830>
  424ac0:	ldr	x0, [x21]
  424ac4:	bl	43d6dc <argp_parse@@Base+0x9f9c>
  424ac8:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  424acc:	add	x1, x1, #0x7f8
  424ad0:	mov	w0, #0x6                   	// #6
  424ad4:	bl	404be0 <setlocale@plt>
  424ad8:	adrp	x22, 456000 <_obstack_memory_used@@Base+0x14e64>
  424adc:	add	x22, x22, #0x3a8
  424ae0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  424ae4:	add	x1, x1, #0xc98
  424ae8:	mov	x0, x22
  424aec:	bl	4043d0 <bindtextdomain@plt>
  424af0:	mov	x0, x22
  424af4:	bl	4046f0 <textdomain@plt>
  424af8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  424afc:	mov	w1, #0x2                   	// #2
  424b00:	str	w1, [x0, #968]
  424b04:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  424b08:	str	wzr, [x0, #3392]
  424b0c:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  424b10:	adrp	x0, 409000 <wcrtomb@plt+0x43e0>
  424b14:	add	x0, x0, #0x1ec
  424b18:	str	x0, [x1, #944]
  424b1c:	mov	w1, #0x7                   	// #7
  424b20:	mov	x0, #0x0                   	// #0
  424b24:	bl	43eab0 <argp_parse@@Base+0xb370>
  424b28:	bl	42b394 <wcrtomb@plt+0x26774>
  424b2c:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x3ee64>
  424b30:	add	x20, x20, #0xbb0
  424b34:	mov	x0, #0xa                   	// #10
  424b38:	str	x0, [x20, #104]
  424b3c:	mov	x0, #0x50                  	// #80
  424b40:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  424b44:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  424b48:	str	x0, [x1, #624]
  424b4c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424b50:	str	xzr, [x0, #784]
  424b54:	mov	x1, #0x0                   	// #0
  424b58:	mov	w0, #0x11                  	// #17
  424b5c:	bl	404270 <signal@plt>
  424b60:	mov	w23, #0x1                   	// #1
  424b64:	str	w23, [sp, #120]
  424b68:	str	xzr, [sp, #128]
  424b6c:	str	xzr, [sp, #136]
  424b70:	str	xzr, [sp, #144]
  424b74:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x3ce64>
  424b78:	add	x1, x1, #0x170
  424b7c:	add	x1, x1, #0x48
  424b80:	mov	x0, x22
  424b84:	bl	434210 <argp_parse@@Base+0xad0>
  424b88:	str	xzr, [x20, #128]
  424b8c:	strb	wzr, [x20, #136]
  424b90:	strb	wzr, [x20, #137]
  424b94:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  424b98:	add	x0, x0, #0xcb0
  424b9c:	bl	404af0 <getenv@plt>
  424ba0:	str	x0, [x20, #144]
  424ba4:	str	xzr, [x20, #152]
  424ba8:	str	wzr, [x20, #160]
  424bac:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424bb0:	str	wzr, [x0, #796]
  424bb4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424bb8:	str	wzr, [x0, #752]
  424bbc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424bc0:	mov	w1, #0x14                  	// #20
  424bc4:	str	w1, [x0, #684]
  424bc8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424bcc:	mov	x1, #0x2800                	// #10240
  424bd0:	str	x1, [x0, #856]
  424bd4:	bl	43503c <argp_parse@@Base+0x18fc>
  424bd8:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  424bdc:	str	x0, [x1]
  424be0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424be4:	str	wzr, [x0, #852]
  424be8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  424bec:	add	x1, x0, #0xfe8
  424bf0:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
  424bf4:	str	x2, [x0, #4072]
  424bf8:	mov	x0, #0xffffffffffffffff    	// #-1
  424bfc:	str	x0, [x1, #8]
  424c00:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  424c04:	add	x3, x1, #0x2d8
  424c08:	str	x2, [x1, #728]
  424c0c:	str	x0, [x3, #8]
  424c10:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  424c14:	mov	w2, #0x8                   	// #8
  424c18:	str	w2, [x1, #612]
  424c1c:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  424c20:	strb	w23, [x1, #692]
  424c24:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  424c28:	str	w23, [x1, #544]
  424c2c:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  424c30:	str	wzr, [x1, #24]
  424c34:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  424c38:	str	wzr, [x1, #456]
  424c3c:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  424c40:	str	w0, [x1, #720]
  424c44:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  424c48:	str	xzr, [x1, #520]
  424c4c:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  424c50:	str	w0, [x1, #640]
  424c54:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  424c58:	str	xzr, [x1, #464]
  424c5c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  424c60:	strb	w23, [x1, #4064]
  424c64:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  424c68:	str	w0, [x1, #716]
  424c6c:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  424c70:	str	w0, [x1, #8]
  424c74:	cmp	w19, w23
  424c78:	b.le	424c8c <wcrtomb@plt+0x2006c>
  424c7c:	ldr	x0, [x21, #8]
  424c80:	ldrb	w1, [x0]
  424c84:	cmp	w1, #0x2d
  424c88:	b.ne	424f0c <wcrtomb@plt+0x202ec>  // b.any
  424c8c:	adrp	x20, 456000 <_obstack_memory_used@@Base+0x14e64>
  424c90:	add	x20, x20, #0xcf0
  424c94:	mov	x0, x20
  424c98:	bl	404af0 <getenv@plt>
  424c9c:	str	wzr, [sp, #152]
  424ca0:	str	x20, [sp, #160]
  424ca4:	str	xzr, [sp, #168]
  424ca8:	str	xzr, [sp, #176]
  424cac:	cbz	x0, 424cdc <wcrtomb@plt+0x200bc>
  424cb0:	mov	x1, #0x1                   	// #1
  424cb4:	str	x1, [sp, #200]
  424cb8:	mov	w2, #0xe46                 	// #3654
  424cbc:	movk	w2, #0x200, lsl #16
  424cc0:	add	x1, sp, #0xb8
  424cc4:	bl	42e010 <wcrtomb@plt+0x293f0>
  424cc8:	cbnz	w0, 425070 <wcrtomb@plt+0x20450>
  424ccc:	ldr	x0, [sp, #184]
  424cd0:	cbnz	x0, 4250bc <wcrtomb@plt+0x2049c>
  424cd4:	add	x0, sp, #0xb8
  424cd8:	bl	42c074 <wcrtomb@plt+0x27454>
  424cdc:	adrp	x5, 480000 <_obstack_memory_used@@Base+0x3ee64>
  424ce0:	add	x5, x5, #0xbb0
  424ce4:	add	x0, sp, #0x78
  424ce8:	str	x0, [x5, #120]
  424cec:	add	x5, x5, #0x78
  424cf0:	add	x4, sp, #0xb8
  424cf4:	mov	w3, #0x8                   	// #8
  424cf8:	mov	x2, x21
  424cfc:	mov	w1, w19
  424d00:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x3ce64>
  424d04:	add	x0, x0, #0x170
  424d08:	bl	433740 <argp_parse@@Base>
  424d0c:	mov	w20, w0
  424d10:	cbnz	w0, 4250ec <wcrtomb@plt+0x204cc>
  424d14:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  424d18:	ldrb	w0, [x0, #3128]
  424d1c:	cbz	w0, 424d3c <wcrtomb@plt+0x2011c>
  424d20:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424d24:	ldr	w0, [x0, #796]
  424d28:	cmp	w0, #0x3
  424d2c:	b.eq	4250f8 <wcrtomb@plt+0x204d8>  // b.none
  424d30:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424d34:	mov	w1, #0xffffffff            	// #-1
  424d38:	str	w1, [x0, #916]
  424d3c:	ldr	w1, [sp, #184]
  424d40:	cmp	w1, w19
  424d44:	b.ge	424d64 <wcrtomb@plt+0x20144>  // b.tcont
  424d48:	ldr	x0, [x21, w1, sxtw #3]
  424d4c:	bl	41d53c <wcrtomb@plt+0x1891c>
  424d50:	ldr	w1, [sp, #184]
  424d54:	add	w1, w1, #0x1
  424d58:	str	w1, [sp, #184]
  424d5c:	cmp	w19, w1
  424d60:	b.gt	424d48 <wcrtomb@plt+0x20128>
  424d64:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424d68:	ldr	w0, [x0, #752]
  424d6c:	cbnz	w0, 424d88 <wcrtomb@plt+0x20168>
  424d70:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  424d74:	ldrb	w0, [x0, #3129]
  424d78:	cbz	w0, 425108 <wcrtomb@plt+0x204e8>
  424d7c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424d80:	mov	w1, #0x4                   	// #4
  424d84:	str	w1, [x0, #752]
  424d88:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424d8c:	ldr	x0, [x0, #584]
  424d90:	cbz	x0, 424da4 <wcrtomb@plt+0x20184>
  424d94:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424d98:	ldr	w0, [x0, #796]
  424d9c:	cmp	w0, #0x3
  424da0:	b.eq	424dc8 <wcrtomb@plt+0x201a8>  // b.none
  424da4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  424da8:	ldrb	w0, [x0, #4065]
  424dac:	cbnz	w0, 424dc8 <wcrtomb@plt+0x201a8>
  424db0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424db4:	ldrb	w0, [x0, #12]
  424db8:	cbnz	w0, 424dc8 <wcrtomb@plt+0x201a8>
  424dbc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424dc0:	ldrb	w0, [x0, #848]
  424dc4:	cbz	w0, 424de4 <wcrtomb@plt+0x201c4>
  424dc8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424dcc:	ldr	w1, [x0, #752]
  424dd0:	mov	w0, #0x1                   	// #1
  424dd4:	lsl	w0, w0, w1
  424dd8:	mov	w1, #0x54                  	// #84
  424ddc:	tst	w0, w1
  424de0:	b.eq	425118 <wcrtomb@plt+0x204f8>  // b.none
  424de4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424de8:	ldr	x0, [x0, #696]
  424dec:	cbnz	x0, 425158 <wcrtomb@plt+0x20538>
  424df0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424df4:	ldr	x0, [x0, #784]
  424df8:	cbz	x0, 4251f4 <wcrtomb@plt+0x205d4>
  424dfc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424e00:	ldr	x0, [x0, #784]
  424e04:	cmp	x0, #0x1
  424e08:	b.ls	424e18 <wcrtomb@plt+0x201f8>  // b.plast
  424e0c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424e10:	ldrb	w0, [x0, #12]
  424e14:	cbz	w0, 425234 <wcrtomb@plt+0x20614>
  424e18:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424e1c:	ldr	x0, [x0, #768]
  424e20:	cbz	x0, 424e60 <wcrtomb@plt+0x20240>
  424e24:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  424e28:	ldr	x0, [x0, #4080]
  424e2c:	tbnz	x0, #63, 424e70 <wcrtomb@plt+0x20250>
  424e30:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  424e34:	add	x0, x0, #0xbb0
  424e38:	ldr	x19, [x0, #16]
  424e3c:	ldr	x1, [x0, #24]
  424e40:	mov	x0, x19
  424e44:	bl	4221cc <wcrtomb@plt+0x1d5ac>
  424e48:	cbnz	w0, 425274 <wcrtomb@plt+0x20654>
  424e4c:	ldr	w0, [x19]
  424e50:	cmp	w0, #0x1
  424e54:	b.ne	42528c <wcrtomb@plt+0x2066c>  // b.any
  424e58:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424e5c:	str	xzr, [x0, #768]
  424e60:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424e64:	ldr	w0, [x0, #716]
  424e68:	cmn	w0, #0x1
  424e6c:	b.ne	425f88 <wcrtomb@plt+0x21368>  // b.any
  424e70:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424e74:	ldr	x0, [x0, #584]
  424e78:	cbz	x0, 424eb4 <wcrtomb@plt+0x20294>
  424e7c:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  424e80:	ldr	w1, [x1, #752]
  424e84:	and	w1, w1, #0xfffffffb
  424e88:	cmp	w1, #0x2
  424e8c:	b.ne	424eb4 <wcrtomb@plt+0x20294>  // b.any
  424e90:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  424e94:	ldrb	w1, [x1, #12]
  424e98:	cmp	w1, #0x0
  424e9c:	mov	x19, #0x51                  	// #81
  424ea0:	mov	x1, #0x63                  	// #99
  424ea4:	csel	x19, x19, x1, ne  // ne = any
  424ea8:	bl	403ff0 <strlen@plt>
  424eac:	cmp	x0, x19
  424eb0:	b.hi	42529c <wcrtomb@plt+0x2067c>  // b.pmore
  424eb4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424eb8:	ldrb	w0, [x0, #778]
  424ebc:	cbz	w0, 42539c <wcrtomb@plt+0x2077c>
  424ec0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424ec4:	ldrb	w0, [x0, #12]
  424ec8:	cbnz	w0, 425300 <wcrtomb@plt+0x206e0>
  424ecc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424ed0:	ldr	x0, [x0, #840]
  424ed4:	cbnz	x0, 425340 <wcrtomb@plt+0x20720>
  424ed8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424edc:	ldr	w19, [x0, #796]
  424ee0:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x17e64>
  424ee4:	add	x0, x0, #0x950
  424ee8:	add	x0, x0, #0x158
  424eec:	ldr	w0, [x0, w19, uxtw #2]
  424ef0:	tbnz	w0, #1, 4253d8 <wcrtomb@plt+0x207b8>
  424ef4:	mov	w0, #0x4                   	// #4
  424ef8:	bl	422160 <wcrtomb@plt+0x1d540>
  424efc:	cbnz	w0, 425380 <wcrtomb@plt+0x20760>
  424f00:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424f04:	strb	wzr, [x0, #778]
  424f08:	b	4253d8 <wcrtomb@plt+0x207b8>
  424f0c:	mov	w1, #0x2d                  	// #45
  424f10:	strb	w1, [sp, #184]
  424f14:	strb	wzr, [sp, #186]
  424f18:	bl	403ff0 <strlen@plt>
  424f1c:	add	w0, w19, w0
  424f20:	sub	w1, w0, #0x1
  424f24:	str	w1, [sp, #100]
  424f28:	sbfiz	x0, x0, #3, #32
  424f2c:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  424f30:	str	x0, [sp, #104]
  424f34:	mov	x22, x0
  424f38:	mov	x20, x21
  424f3c:	ldr	x0, [x20], #16
  424f40:	str	x0, [x22], #8
  424f44:	ldr	x25, [x21, #8]
  424f48:	ldrb	w0, [x25]
  424f4c:	cbz	w0, 425028 <wcrtomb@plt+0x20408>
  424f50:	stp	x27, x28, [sp, #80]
  424f54:	add	x28, x21, w19, sxtw #3
  424f58:	mov	x24, x22
  424f5c:	adrp	x27, 47e000 <_obstack_memory_used@@Base+0x3ce64>
  424f60:	b	424f9c <wcrtomb@plt+0x2037c>
  424f64:	add	x0, x27, #0x170
  424f68:	ldr	x23, [x0, #32]
  424f6c:	cbz	x23, 424f90 <wcrtomb@plt+0x20370>
  424f70:	ldr	x0, [x23]
  424f74:	cbz	x0, 424f90 <wcrtomb@plt+0x20370>
  424f78:	mov	w1, w26
  424f7c:	ldr	x0, [x0]
  424f80:	bl	422188 <wcrtomb@plt+0x1d568>
  424f84:	cbnz	x0, 424fc4 <wcrtomb@plt+0x203a4>
  424f88:	ldr	x0, [x23, #32]!
  424f8c:	cbnz	x0, 424f78 <wcrtomb@plt+0x20358>
  424f90:	ldrb	w0, [x25, #1]!
  424f94:	cbz	w0, 425024 <wcrtomb@plt+0x20404>
  424f98:	mov	x24, x22
  424f9c:	strb	w0, [sp, #185]
  424fa0:	mov	x22, x24
  424fa4:	add	x0, sp, #0xb8
  424fa8:	bl	440154 <argp_parse@@Base+0xca14>
  424fac:	str	x0, [x22], #8
  424fb0:	ldrb	w26, [x25]
  424fb4:	mov	w1, w26
  424fb8:	ldr	x0, [x27, #368]
  424fbc:	bl	422188 <wcrtomb@plt+0x1d568>
  424fc0:	cbz	x0, 424f64 <wcrtomb@plt+0x20344>
  424fc4:	ldr	x0, [x0, #16]
  424fc8:	cbz	x0, 424f90 <wcrtomb@plt+0x20370>
  424fcc:	cmp	x28, x20
  424fd0:	b.ls	424fe4 <wcrtomb@plt+0x203c4>  // b.plast
  424fd4:	add	x22, x24, #0x10
  424fd8:	ldr	x0, [x20], #8
  424fdc:	str	x0, [x24, #8]
  424fe0:	b	424f90 <wcrtomb@plt+0x20370>
  424fe4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  424fe8:	ldr	x0, [x0, #944]
  424fec:	cbz	x0, 424ff4 <wcrtomb@plt+0x203d4>
  424ff0:	blr	x0
  424ff4:	mov	w2, #0x5                   	// #5
  424ff8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  424ffc:	add	x1, x1, #0xcc8
  425000:	mov	x0, #0x0                   	// #0
  425004:	bl	4049c0 <dcgettext@plt>
  425008:	ldrb	w3, [x25]
  42500c:	mov	x2, x0
  425010:	mov	w1, #0x0                   	// #0
  425014:	mov	w0, #0x0                   	// #0
  425018:	bl	404050 <error@plt>
  42501c:	mov	w0, #0x2                   	// #2
  425020:	bl	422b00 <wcrtomb@plt+0x1dee0>
  425024:	ldp	x27, x28, [sp, #80]
  425028:	add	x19, x21, w19, sxtw #3
  42502c:	cmp	x19, x20
  425030:	b.ls	425060 <wcrtomb@plt+0x20440>  // b.plast
  425034:	sub	x19, x19, #0x1
  425038:	sub	x2, x19, x20
  42503c:	lsr	x2, x2, #3
  425040:	add	x3, x2, #0x1
  425044:	mov	x0, #0x0                   	// #0
  425048:	ldr	x1, [x20, x0, lsl #3]
  42504c:	str	x1, [x22, x0, lsl #3]
  425050:	cmp	x0, x2
  425054:	add	x0, x0, #0x1
  425058:	b.ne	425048 <wcrtomb@plt+0x20428>  // b.any
  42505c:	add	x22, x22, x3, lsl #3
  425060:	str	xzr, [x22]
  425064:	ldr	x21, [sp, #104]
  425068:	ldr	w19, [sp, #100]
  42506c:	b	424c8c <wcrtomb@plt+0x2006c>
  425070:	stp	x27, x28, [sp, #80]
  425074:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425078:	ldr	x0, [x0, #944]
  42507c:	cbz	x0, 425084 <wcrtomb@plt+0x20464>
  425080:	blr	x0
  425084:	mov	w2, #0x5                   	// #5
  425088:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  42508c:	add	x1, x1, #0xd00
  425090:	mov	x0, #0x0                   	// #0
  425094:	bl	4049c0 <dcgettext@plt>
  425098:	mov	x19, x0
  42509c:	add	x0, sp, #0xb8
  4250a0:	bl	42c118 <wcrtomb@plt+0x274f8>
  4250a4:	mov	x3, x0
  4250a8:	mov	x2, x19
  4250ac:	mov	w1, #0x0                   	// #0
  4250b0:	mov	w0, #0x0                   	// #0
  4250b4:	bl	404050 <error@plt>
  4250b8:	bl	40e5ac <wcrtomb@plt+0x998c>
  4250bc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4250c0:	ldr	x1, [x0, #3480]
  4250c4:	ldr	x0, [sp, #192]
  4250c8:	str	x1, [x0]
  4250cc:	add	x2, sp, #0x98
  4250d0:	ldr	x1, [sp, #192]
  4250d4:	ldr	x3, [sp, #200]
  4250d8:	ldr	x0, [sp, #184]
  4250dc:	add	w0, w3, w0
  4250e0:	bl	424878 <wcrtomb@plt+0x1fc58>
  4250e4:	str	xzr, [sp, #184]
  4250e8:	b	424cd4 <wcrtomb@plt+0x200b4>
  4250ec:	stp	x27, x28, [sp, #80]
  4250f0:	mov	w0, #0x2                   	// #2
  4250f4:	bl	404020 <exit@plt>
  4250f8:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  4250fc:	add	x0, x0, #0x730
  425100:	bl	423060 <wcrtomb@plt+0x1e440>
  425104:	b	424d3c <wcrtomb@plt+0x2011c>
  425108:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42510c:	mov	w1, #0x6                   	// #6
  425110:	str	w1, [x0, #752]
  425114:	b	424d88 <wcrtomb@plt+0x20168>
  425118:	stp	x27, x28, [sp, #80]
  42511c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425120:	ldr	x0, [x0, #944]
  425124:	cbz	x0, 42512c <wcrtomb@plt+0x2050c>
  425128:	blr	x0
  42512c:	mov	w2, #0x5                   	// #5
  425130:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  425134:	add	x1, x1, #0xd20
  425138:	mov	x0, #0x0                   	// #0
  42513c:	bl	4049c0 <dcgettext@plt>
  425140:	mov	x2, x0
  425144:	mov	w1, #0x0                   	// #0
  425148:	mov	w0, #0x0                   	// #0
  42514c:	bl	404050 <error@plt>
  425150:	mov	w0, #0x2                   	// #2
  425154:	bl	422b00 <wcrtomb@plt+0x1dee0>
  425158:	bl	41d528 <wcrtomb@plt+0x18908>
  42515c:	and	w0, w0, #0xff
  425160:	cbz	w0, 425198 <wcrtomb@plt+0x20578>
  425164:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425168:	ldr	w19, [x0, #796]
  42516c:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x17e64>
  425170:	add	x0, x0, #0x950
  425174:	add	x0, x0, #0x158
  425178:	ldr	w0, [x0, w19, uxtw #2]
  42517c:	tbnz	w0, #4, 424df0 <wcrtomb@plt+0x201d0>
  425180:	mov	w0, #0x1                   	// #1
  425184:	bl	422160 <wcrtomb@plt+0x1d540>
  425188:	cbnz	w0, 4251d8 <wcrtomb@plt+0x205b8>
  42518c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425190:	str	xzr, [x0, #696]
  425194:	b	424df0 <wcrtomb@plt+0x201d0>
  425198:	stp	x27, x28, [sp, #80]
  42519c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4251a0:	ldr	x0, [x0, #944]
  4251a4:	cbz	x0, 4251ac <wcrtomb@plt+0x2058c>
  4251a8:	blr	x0
  4251ac:	mov	w2, #0x5                   	// #5
  4251b0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  4251b4:	add	x1, x1, #0xd58
  4251b8:	mov	x0, #0x0                   	// #0
  4251bc:	bl	4049c0 <dcgettext@plt>
  4251c0:	mov	x2, x0
  4251c4:	mov	w1, #0x0                   	// #0
  4251c8:	mov	w0, #0x0                   	// #0
  4251cc:	bl	404050 <error@plt>
  4251d0:	mov	w0, #0x2                   	// #2
  4251d4:	bl	422b00 <wcrtomb@plt+0x1dee0>
  4251d8:	stp	x27, x28, [sp, #80]
  4251dc:	mov	w0, w19
  4251e0:	bl	422978 <wcrtomb@plt+0x1dd58>
  4251e4:	mov	x1, x0
  4251e8:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  4251ec:	add	x0, x0, #0xd88
  4251f0:	bl	422f0c <wcrtomb@plt+0x1e2ec>
  4251f4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4251f8:	mov	x1, #0x1                   	// #1
  4251fc:	str	x1, [x0, #784]
  425200:	adrp	x19, 481000 <argp_program_version_hook@@Base+0x298>
  425204:	ldr	x21, [x19, #624]
  425208:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  42520c:	add	x0, x0, #0xd98
  425210:	bl	404af0 <getenv@plt>
  425214:	str	x0, [x21]
  425218:	ldr	x0, [x19, #624]
  42521c:	ldr	x1, [x0]
  425220:	cbnz	x1, 424dfc <wcrtomb@plt+0x201dc>
  425224:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  425228:	add	x1, x1, #0xca8
  42522c:	str	x1, [x0]
  425230:	b	424dfc <wcrtomb@plt+0x201dc>
  425234:	stp	x27, x28, [sp, #80]
  425238:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42523c:	ldr	x0, [x0, #944]
  425240:	cbz	x0, 425248 <wcrtomb@plt+0x20628>
  425244:	blr	x0
  425248:	mov	w2, #0x5                   	// #5
  42524c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  425250:	add	x1, x1, #0xda0
  425254:	mov	x0, #0x0                   	// #0
  425258:	bl	4049c0 <dcgettext@plt>
  42525c:	mov	x2, x0
  425260:	mov	w1, #0x0                   	// #0
  425264:	mov	w0, #0x0                   	// #0
  425268:	bl	404050 <error@plt>
  42526c:	mov	w0, #0x2                   	// #2
  425270:	bl	422b00 <wcrtomb@plt+0x1dee0>
  425274:	stp	x27, x28, [sp, #80]
  425278:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  42527c:	add	x1, x1, #0xdd0
  425280:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  425284:	add	x0, x0, #0xdd8
  425288:	bl	422f0c <wcrtomb@plt+0x1e2ec>
  42528c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  425290:	add	x0, x0, #0xfe8
  425294:	stp	xzr, xzr, [x0]
  425298:	b	424e70 <wcrtomb@plt+0x20250>
  42529c:	stp	x27, x28, [sp, #80]
  4252a0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4252a4:	ldr	x0, [x0, #944]
  4252a8:	cbz	x0, 4252b0 <wcrtomb@plt+0x20690>
  4252ac:	blr	x0
  4252b0:	mov	w4, #0x5                   	// #5
  4252b4:	mov	x3, x19
  4252b8:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x14e64>
  4252bc:	add	x2, x2, #0xe28
  4252c0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  4252c4:	add	x1, x1, #0xe60
  4252c8:	mov	x0, #0x0                   	// #0
  4252cc:	bl	4048f0 <dcngettext@plt>
  4252d0:	mov	x20, x0
  4252d4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4252d8:	ldr	x0, [x0, #584]
  4252dc:	bl	43efc4 <argp_parse@@Base+0xb884>
  4252e0:	mov	x4, x19
  4252e4:	mov	x3, x0
  4252e8:	mov	x2, x20
  4252ec:	mov	w1, #0x0                   	// #0
  4252f0:	mov	w0, #0x0                   	// #0
  4252f4:	bl	404050 <error@plt>
  4252f8:	mov	w0, #0x2                   	// #2
  4252fc:	bl	422b00 <wcrtomb@plt+0x1dee0>
  425300:	stp	x27, x28, [sp, #80]
  425304:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425308:	ldr	x0, [x0, #944]
  42530c:	cbz	x0, 425314 <wcrtomb@plt+0x206f4>
  425310:	blr	x0
  425314:	mov	w2, #0x5                   	// #5
  425318:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  42531c:	add	x1, x1, #0xe98
  425320:	mov	x0, #0x0                   	// #0
  425324:	bl	4049c0 <dcgettext@plt>
  425328:	mov	x2, x0
  42532c:	mov	w1, #0x0                   	// #0
  425330:	mov	w0, #0x0                   	// #0
  425334:	bl	404050 <error@plt>
  425338:	mov	w0, #0x2                   	// #2
  42533c:	bl	422b00 <wcrtomb@plt+0x1dee0>
  425340:	stp	x27, x28, [sp, #80]
  425344:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425348:	ldr	x0, [x0, #944]
  42534c:	cbz	x0, 425354 <wcrtomb@plt+0x20734>
  425350:	blr	x0
  425354:	mov	w2, #0x5                   	// #5
  425358:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  42535c:	add	x1, x1, #0xec0
  425360:	mov	x0, #0x0                   	// #0
  425364:	bl	4049c0 <dcgettext@plt>
  425368:	mov	x2, x0
  42536c:	mov	w1, #0x0                   	// #0
  425370:	mov	w0, #0x0                   	// #0
  425374:	bl	404050 <error@plt>
  425378:	mov	w0, #0x2                   	// #2
  42537c:	bl	422b00 <wcrtomb@plt+0x1dee0>
  425380:	stp	x27, x28, [sp, #80]
  425384:	mov	w0, w19
  425388:	bl	422978 <wcrtomb@plt+0x1dd58>
  42538c:	mov	x1, x0
  425390:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  425394:	add	x0, x0, #0xee8
  425398:	bl	422f0c <wcrtomb@plt+0x1e2ec>
  42539c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4253a0:	ldr	x0, [x0, #840]
  4253a4:	cbz	x0, 4253d8 <wcrtomb@plt+0x207b8>
  4253a8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4253ac:	ldrb	w0, [x0, #12]
  4253b0:	cbnz	w0, 4254d4 <wcrtomb@plt+0x208b4>
  4253b4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4253b8:	ldr	w1, [x0, #796]
  4253bc:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x17e64>
  4253c0:	add	x0, x0, #0x950
  4253c4:	add	x0, x0, #0x158
  4253c8:	ldr	w0, [x0, w1, uxtw #2]
  4253cc:	tbnz	w0, #2, 425514 <wcrtomb@plt+0x208f4>
  4253d0:	cmp	w1, #0x2
  4253d4:	b.eq	425554 <wcrtomb@plt+0x20934>  // b.none
  4253d8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4253dc:	ldr	w0, [x0, #4088]
  4253e0:	cmp	w0, #0x2
  4253e4:	b.eq	425594 <wcrtomb@plt+0x20974>  // b.none
  4253e8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4253ec:	ldrb	w0, [x0, #3129]
  4253f0:	cbz	w0, 425620 <wcrtomb@plt+0x20a00>
  4253f4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4253f8:	ldr	w0, [x0, #752]
  4253fc:	cmp	w0, #0x4
  425400:	b.eq	425620 <wcrtomb@plt+0x20a00>  // b.none
  425404:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x17e64>
  425408:	add	x0, x0, #0x950
  42540c:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  425410:	ldr	w1, [x1, #796]
  425414:	add	x0, x0, #0x158
  425418:	ldr	w0, [x0, x1, lsl #2]
  42541c:	tbz	w0, #0, 4255e0 <wcrtomb@plt+0x209c0>
  425420:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425424:	ldr	w0, [x0, #832]
  425428:	cmp	w0, #0x0
  42542c:	b.le	425fc0 <wcrtomb@plt+0x213a0>
  425430:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425434:	ldr	w0, [x0, #920]
  425438:	cmp	w0, #0x0
  42543c:	b.le	425fd0 <wcrtomb@plt+0x213b0>
  425440:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425444:	ldrb	w0, [x0, #616]
  425448:	cbnz	w0, 425488 <wcrtomb@plt+0x20868>
  42544c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425450:	ldrb	w0, [x0, #576]
  425454:	cbz	w0, 425488 <wcrtomb@plt+0x20868>
  425458:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42545c:	ldr	w19, [x0, #796]
  425460:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x17e64>
  425464:	add	x0, x0, #0x950
  425468:	add	x0, x0, #0x158
  42546c:	ldr	w0, [x0, w19, uxtw #2]
  425470:	tbnz	w0, #0, 425488 <wcrtomb@plt+0x20868>
  425474:	mov	w0, #0x6                   	// #6
  425478:	bl	422160 <wcrtomb@plt+0x1d540>
  42547c:	cbnz	w0, 425790 <wcrtomb@plt+0x20b70>
  425480:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425484:	strb	wzr, [x0, #576]
  425488:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42548c:	ldrb	w0, [x0, #779]
  425490:	cbz	w0, 4257d8 <wcrtomb@plt+0x20bb8>
  425494:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425498:	ldrb	w0, [x0, #888]
  42549c:	cbz	w0, 4257cc <wcrtomb@plt+0x20bac>
  4254a0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4254a4:	add	x0, x0, #0xbb0
  4254a8:	ldr	x19, [x0, #56]
  4254ac:	ldr	x1, [x0, #64]
  4254b0:	mov	x0, x19
  4254b4:	bl	4221cc <wcrtomb@plt+0x1d5ac>
  4254b8:	cbnz	w0, 4257ac <wcrtomb@plt+0x20b8c>
  4254bc:	ldr	w0, [x19]
  4254c0:	cmp	w0, #0x1
  4254c4:	b.eq	4257c4 <wcrtomb@plt+0x20ba4>  // b.none
  4254c8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4254cc:	strb	wzr, [x0, #779]
  4254d0:	b	4257d8 <wcrtomb@plt+0x20bb8>
  4254d4:	stp	x27, x28, [sp, #80]
  4254d8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4254dc:	ldr	x0, [x0, #944]
  4254e0:	cbz	x0, 4254e8 <wcrtomb@plt+0x208c8>
  4254e4:	blr	x0
  4254e8:	mov	w2, #0x5                   	// #5
  4254ec:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  4254f0:	add	x1, x1, #0xef8
  4254f4:	mov	x0, #0x0                   	// #0
  4254f8:	bl	4049c0 <dcgettext@plt>
  4254fc:	mov	x2, x0
  425500:	mov	w1, #0x0                   	// #0
  425504:	mov	w0, #0x0                   	// #0
  425508:	bl	404050 <error@plt>
  42550c:	mov	w0, #0x2                   	// #2
  425510:	bl	422b00 <wcrtomb@plt+0x1dee0>
  425514:	stp	x27, x28, [sp, #80]
  425518:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42551c:	ldr	x0, [x0, #944]
  425520:	cbz	x0, 425528 <wcrtomb@plt+0x20908>
  425524:	blr	x0
  425528:	mov	w2, #0x5                   	// #5
  42552c:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  425530:	add	x1, x1, #0x18
  425534:	mov	x0, #0x0                   	// #0
  425538:	bl	4049c0 <dcgettext@plt>
  42553c:	mov	x2, x0
  425540:	mov	w1, #0x0                   	// #0
  425544:	mov	w0, #0x0                   	// #0
  425548:	bl	404050 <error@plt>
  42554c:	mov	w0, #0x2                   	// #2
  425550:	bl	422b00 <wcrtomb@plt+0x1dee0>
  425554:	stp	x27, x28, [sp, #80]
  425558:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42555c:	ldr	x0, [x0, #944]
  425560:	cbz	x0, 425568 <wcrtomb@plt+0x20948>
  425564:	blr	x0
  425568:	mov	w2, #0x5                   	// #5
  42556c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  425570:	add	x1, x1, #0xf28
  425574:	mov	x0, #0x0                   	// #0
  425578:	bl	4049c0 <dcgettext@plt>
  42557c:	mov	x2, x0
  425580:	mov	w1, #0x0                   	// #0
  425584:	mov	w0, #0x0                   	// #0
  425588:	bl	404050 <error@plt>
  42558c:	mov	w0, #0x2                   	// #2
  425590:	bl	422b00 <wcrtomb@plt+0x1dee0>
  425594:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425598:	ldr	x0, [x0, #736]
  42559c:	tbz	x0, #63, 4253e8 <wcrtomb@plt+0x207c8>
  4255a0:	stp	x27, x28, [sp, #80]
  4255a4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4255a8:	ldr	x0, [x0, #944]
  4255ac:	cbz	x0, 4255b4 <wcrtomb@plt+0x20994>
  4255b0:	blr	x0
  4255b4:	mov	w2, #0x5                   	// #5
  4255b8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  4255bc:	add	x1, x1, #0xf50
  4255c0:	mov	x0, #0x0                   	// #0
  4255c4:	bl	4049c0 <dcgettext@plt>
  4255c8:	mov	x2, x0
  4255cc:	mov	w1, #0x0                   	// #0
  4255d0:	mov	w0, #0x0                   	// #0
  4255d4:	bl	404050 <error@plt>
  4255d8:	mov	w0, #0x2                   	// #2
  4255dc:	bl	422b00 <wcrtomb@plt+0x1dee0>
  4255e0:	stp	x27, x28, [sp, #80]
  4255e4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4255e8:	ldr	x0, [x0, #944]
  4255ec:	cbz	x0, 4255f4 <wcrtomb@plt+0x209d4>
  4255f0:	blr	x0
  4255f4:	mov	w2, #0x5                   	// #5
  4255f8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  4255fc:	add	x1, x1, #0xf88
  425600:	mov	x0, #0x0                   	// #0
  425604:	bl	4049c0 <dcgettext@plt>
  425608:	mov	x2, x0
  42560c:	mov	w1, #0x0                   	// #0
  425610:	mov	w0, #0x0                   	// #0
  425614:	bl	404050 <error@plt>
  425618:	mov	w0, #0x2                   	// #2
  42561c:	bl	422b00 <wcrtomb@plt+0x1dee0>
  425620:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425624:	ldr	w0, [x0, #832]
  425628:	cmp	w0, #0x0
  42562c:	b.le	4256f8 <wcrtomb@plt+0x20ad8>
  425630:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425634:	ldr	w0, [x0, #752]
  425638:	cmp	w0, #0x4
  42563c:	b.ne	42569c <wcrtomb@plt+0x20a7c>  // b.any
  425640:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425644:	ldr	w0, [x0, #920]
  425648:	cmp	w0, #0x0
  42564c:	b.le	425fd0 <wcrtomb@plt+0x213b0>
  425650:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425654:	ldrb	w0, [x0, #616]
  425658:	cbz	w0, 42544c <wcrtomb@plt+0x2082c>
  42565c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425660:	ldr	w19, [x0, #796]
  425664:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x17e64>
  425668:	add	x0, x0, #0x950
  42566c:	add	x0, x0, #0x158
  425670:	ldr	w0, [x0, w19, uxtw #2]
  425674:	tbnz	w0, #0, 425488 <wcrtomb@plt+0x20868>
  425678:	mov	w0, #0x5                   	// #5
  42567c:	bl	422160 <wcrtomb@plt+0x1d540>
  425680:	cbnz	w0, 425774 <wcrtomb@plt+0x20b54>
  425684:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425688:	strb	wzr, [x0, #616]
  42568c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425690:	ldrb	w0, [x0, #576]
  425694:	cbnz	w0, 425474 <wcrtomb@plt+0x20854>
  425698:	b	425488 <wcrtomb@plt+0x20868>
  42569c:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x17e64>
  4256a0:	add	x0, x0, #0x950
  4256a4:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  4256a8:	ldr	w1, [x1, #796]
  4256ac:	add	x0, x0, #0x158
  4256b0:	ldr	w0, [x0, x1, lsl #2]
  4256b4:	tbnz	w0, #0, 425430 <wcrtomb@plt+0x20810>
  4256b8:	stp	x27, x28, [sp, #80]
  4256bc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4256c0:	ldr	x0, [x0, #944]
  4256c4:	cbz	x0, 4256cc <wcrtomb@plt+0x20aac>
  4256c8:	blr	x0
  4256cc:	mov	w2, #0x5                   	// #5
  4256d0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  4256d4:	add	x1, x1, #0xfb8
  4256d8:	mov	x0, #0x0                   	// #0
  4256dc:	bl	4049c0 <dcgettext@plt>
  4256e0:	mov	x2, x0
  4256e4:	mov	w1, #0x0                   	// #0
  4256e8:	mov	w0, #0x0                   	// #0
  4256ec:	bl	404050 <error@plt>
  4256f0:	mov	w0, #0x2                   	// #2
  4256f4:	bl	422b00 <wcrtomb@plt+0x1dee0>
  4256f8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4256fc:	ldr	w0, [x0, #920]
  425700:	cmp	w0, #0x0
  425704:	b.le	425fd0 <wcrtomb@plt+0x213b0>
  425708:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42570c:	ldr	w0, [x0, #752]
  425710:	cmp	w0, #0x4
  425714:	b.eq	425650 <wcrtomb@plt+0x20a30>  // b.none
  425718:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x17e64>
  42571c:	add	x0, x0, #0x950
  425720:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  425724:	ldr	w1, [x1, #796]
  425728:	add	x0, x0, #0x158
  42572c:	ldr	w0, [x0, x1, lsl #2]
  425730:	tbnz	w0, #0, 425440 <wcrtomb@plt+0x20820>
  425734:	stp	x27, x28, [sp, #80]
  425738:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42573c:	ldr	x0, [x0, #944]
  425740:	cbz	x0, 425748 <wcrtomb@plt+0x20b28>
  425744:	blr	x0
  425748:	mov	w2, #0x5                   	// #5
  42574c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  425750:	add	x1, x1, #0xfe8
  425754:	mov	x0, #0x0                   	// #0
  425758:	bl	4049c0 <dcgettext@plt>
  42575c:	mov	x2, x0
  425760:	mov	w1, #0x0                   	// #0
  425764:	mov	w0, #0x0                   	// #0
  425768:	bl	404050 <error@plt>
  42576c:	mov	w0, #0x2                   	// #2
  425770:	bl	422b00 <wcrtomb@plt+0x1dee0>
  425774:	stp	x27, x28, [sp, #80]
  425778:	mov	w0, w19
  42577c:	bl	422978 <wcrtomb@plt+0x1dd58>
  425780:	mov	x1, x0
  425784:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x15e64>
  425788:	add	x0, x0, #0x48
  42578c:	bl	422f0c <wcrtomb@plt+0x1e2ec>
  425790:	stp	x27, x28, [sp, #80]
  425794:	mov	w0, w19
  425798:	bl	422978 <wcrtomb@plt+0x1dd58>
  42579c:	mov	x1, x0
  4257a0:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x15e64>
  4257a4:	add	x0, x0, #0x58
  4257a8:	bl	422f0c <wcrtomb@plt+0x1e2ec>
  4257ac:	stp	x27, x28, [sp, #80]
  4257b0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x15e64>
  4257b4:	add	x1, x1, #0x68
  4257b8:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x15e64>
  4257bc:	add	x0, x0, #0x80
  4257c0:	bl	422f0c <wcrtomb@plt+0x1e2ec>
  4257c4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4257c8:	strb	wzr, [x0, #888]
  4257cc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4257d0:	ldr	x0, [x0, #504]
  4257d4:	cbz	x0, 425830 <wcrtomb@plt+0x20c10>
  4257d8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4257dc:	ldrb	w0, [x0, #4066]
  4257e0:	cbz	w0, 4257f0 <wcrtomb@plt+0x20bd0>
  4257e4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4257e8:	mov	w1, #0x3                   	// #3
  4257ec:	str	w1, [x0, #688]
  4257f0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4257f4:	ldrb	w0, [x0, #512]
  4257f8:	cbnz	w0, 425e40 <wcrtomb@plt+0x21220>
  4257fc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425800:	ldr	w0, [x0, #492]
  425804:	cmp	w0, #0x2
  425808:	b.eq	425dfc <wcrtomb@plt+0x211dc>  // b.none
  42580c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425810:	mov	w1, #0x8900                	// #35072
  425814:	movk	w1, #0x8, lsl #16
  425818:	str	w1, [x0, #644]
  42581c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425820:	add	w1, w1, #0x4, lsl #12
  425824:	str	w1, [x0, #636]
  425828:	mov	w20, #0x100                 	// #256
  42582c:	b	425e6c <wcrtomb@plt+0x2124c>
  425830:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425834:	ldr	x0, [x0, #624]
  425838:	ldr	x0, [x0]
  42583c:	bl	4349cc <argp_parse@@Base+0x128c>
  425840:	mov	x21, x0
  425844:	bl	420980 <wcrtomb@plt+0x1bd60>
  425848:	mov	x19, x0
  42584c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425850:	str	x19, [x0, #504]
  425854:	mov	x0, x21
  425858:	bl	4047c0 <free@plt>
  42585c:	cbnz	x19, 4257d8 <wcrtomb@plt+0x20bb8>
  425860:	stp	x27, x28, [sp, #80]
  425864:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425868:	ldr	x0, [x0, #944]
  42586c:	cbz	x0, 425874 <wcrtomb@plt+0x20c54>
  425870:	blr	x0
  425874:	mov	w2, #0x5                   	// #5
  425878:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x15e64>
  42587c:	add	x1, x1, #0x90
  425880:	mov	x0, #0x0                   	// #0
  425884:	bl	4049c0 <dcgettext@plt>
  425888:	mov	x2, x0
  42588c:	mov	w1, #0x0                   	// #0
  425890:	mov	w0, #0x0                   	// #0
  425894:	bl	404050 <error@plt>
  425898:	mov	w0, #0x2                   	// #2
  42589c:	bl	422b00 <wcrtomb@plt+0x1dee0>
  4258a0:	bl	41d528 <wcrtomb@plt+0x18908>
  4258a4:	and	w0, w0, #0xff
  4258a8:	cbnz	w0, 425e9c <wcrtomb@plt+0x2127c>
  4258ac:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  4258b0:	ldr	w0, [x1, #580]
  4258b4:	add	w0, w0, #0x1
  4258b8:	str	w0, [x1, #580]
  4258bc:	b	425e9c <wcrtomb@plt+0x2127c>
  4258c0:	stp	x27, x28, [sp, #80]
  4258c4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4258c8:	ldr	x0, [x0, #944]
  4258cc:	cbz	x0, 4258d4 <wcrtomb@plt+0x20cb4>
  4258d0:	blr	x0
  4258d4:	mov	w2, #0x5                   	// #5
  4258d8:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x15e64>
  4258dc:	add	x1, x1, #0xf0
  4258e0:	mov	x0, #0x0                   	// #0
  4258e4:	bl	4049c0 <dcgettext@plt>
  4258e8:	mov	x2, x0
  4258ec:	mov	w1, #0x0                   	// #0
  4258f0:	mov	w0, #0x0                   	// #0
  4258f4:	bl	404050 <error@plt>
  4258f8:	mov	w0, #0x2                   	// #2
  4258fc:	bl	422b00 <wcrtomb@plt+0x1dee0>
  425900:	stp	x27, x28, [sp, #80]
  425904:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  425908:	add	x1, x1, #0xdd8
  42590c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x15e64>
  425910:	add	x0, x0, #0x120
  425914:	bl	422f0c <wcrtomb@plt+0x1e2ec>
  425918:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42591c:	str	xzr, [x0, #768]
  425920:	b	425f08 <wcrtomb@plt+0x212e8>
  425924:	cbnz	w0, 425a7c <wcrtomb@plt+0x20e5c>
  425928:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42592c:	ldr	x0, [x0, #896]
  425930:	cbz	x0, 425b24 <wcrtomb@plt+0x20f04>
  425934:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  425938:	add	x1, x1, #0xab8
  42593c:	bl	4042e0 <fopen@plt>
  425940:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  425944:	str	x0, [x1, #3864]
  425948:	cbz	x0, 425b14 <wcrtomb@plt+0x20ef4>
  42594c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425950:	ldr	x1, [x0, #624]
  425954:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425958:	str	x1, [x0, #672]
  42595c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  425960:	ldr	x0, [x0, #3136]
  425964:	cbz	x0, 425974 <wcrtomb@plt+0x20d54>
  425968:	bl	440154 <argp_parse@@Base+0xca14>
  42596c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  425970:	str	x0, [x1, #3456]
  425974:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425978:	ldrb	w0, [x0, #693]
  42597c:	cbnz	w0, 425b50 <wcrtomb@plt+0x20f30>
  425980:	bl	40915c <wcrtomb@plt+0x453c>
  425984:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  425988:	ldr	x20, [x0, #3120]
  42598c:	cbz	x20, 425c14 <wcrtomb@plt+0x20ff4>
  425990:	adrp	x23, 481000 <argp_program_version_hook@@Base+0x298>
  425994:	add	x23, x23, #0x244
  425998:	mov	w25, #0x1                   	// #1
  42599c:	adrp	x24, 481000 <argp_program_version_hook@@Base+0x298>
  4259a0:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x15e64>
  4259a4:	add	x22, x22, #0x1b0
  4259a8:	b	425bd8 <wcrtomb@plt+0x20fb8>
  4259ac:	cmp	w0, #0x8
  4259b0:	b.eq	425a7c <wcrtomb@plt+0x20e5c>  // b.none
  4259b4:	cmp	w0, #0x9
  4259b8:	b.ne	425928 <wcrtomb@plt+0x20d08>  // b.any
  4259bc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4259c0:	ldr	x2, [x0, #624]
  4259c4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4259c8:	str	x2, [x0, #672]
  4259cc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4259d0:	ldr	x0, [x0, #784]
  4259d4:	add	x0, x2, x0, lsl #3
  4259d8:	cmp	x2, x0
  4259dc:	b.cs	425928 <wcrtomb@plt+0x20d08>  // b.hs, b.nlast
  4259e0:	adrp	x20, 452000 <_obstack_memory_used@@Base+0x10e64>
  4259e4:	add	x20, x20, #0xca8
  4259e8:	adrp	x21, 457000 <_obstack_memory_used@@Base+0x15e64>
  4259ec:	add	x21, x21, #0x168
  4259f0:	adrp	x19, 481000 <argp_program_version_hook@@Base+0x298>
  4259f4:	adrp	x22, 481000 <argp_program_version_hook@@Base+0x298>
  4259f8:	b	425a68 <wcrtomb@plt+0x20e48>
  4259fc:	stp	x27, x28, [sp, #80]
  425a00:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425a04:	ldr	x0, [x0, #944]
  425a08:	cbz	x0, 425a10 <wcrtomb@plt+0x20df0>
  425a0c:	blr	x0
  425a10:	mov	w2, #0x5                   	// #5
  425a14:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x15e64>
  425a18:	add	x1, x1, #0x138
  425a1c:	mov	x0, #0x0                   	// #0
  425a20:	bl	4049c0 <dcgettext@plt>
  425a24:	mov	x2, x0
  425a28:	mov	w1, #0x0                   	// #0
  425a2c:	mov	w0, #0x0                   	// #0
  425a30:	bl	404050 <error@plt>
  425a34:	mov	w0, #0x2                   	// #2
  425a38:	bl	422b00 <wcrtomb@plt+0x1dee0>
  425a3c:	mov	x0, x21
  425a40:	bl	422b3c <wcrtomb@plt+0x1df1c>
  425a44:	ldr	x2, [x19, #672]
  425a48:	add	x2, x2, #0x8
  425a4c:	str	x2, [x19, #672]
  425a50:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425a54:	ldr	x0, [x0, #784]
  425a58:	ldr	x1, [x22, #624]
  425a5c:	add	x0, x1, x0, lsl #3
  425a60:	cmp	x2, x0
  425a64:	b.cs	425928 <wcrtomb@plt+0x20d08>  // b.hs, b.nlast
  425a68:	mov	x1, x20
  425a6c:	ldr	x0, [x2]
  425a70:	bl	404720 <strcmp@plt>
  425a74:	cbnz	w0, 425a44 <wcrtomb@plt+0x20e24>
  425a78:	b	425a3c <wcrtomb@plt+0x20e1c>
  425a7c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425a80:	ldr	x19, [x0, #624]
  425a84:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425a88:	str	x19, [x0, #672]
  425a8c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425a90:	ldr	x20, [x0, #784]
  425a94:	add	x20, x19, x20, lsl #3
  425a98:	cmp	x20, x19
  425a9c:	b.ls	425928 <wcrtomb@plt+0x20d08>  // b.plast
  425aa0:	stp	x27, x28, [sp, #80]
  425aa4:	adrp	x21, 452000 <_obstack_memory_used@@Base+0x10e64>
  425aa8:	add	x21, x21, #0xca8
  425aac:	adrp	x22, 481000 <argp_program_version_hook@@Base+0x298>
  425ab0:	mov	x1, x21
  425ab4:	ldr	x0, [x19]
  425ab8:	bl	404720 <strcmp@plt>
  425abc:	cbz	w0, 425ad8 <wcrtomb@plt+0x20eb8>
  425ac0:	add	x19, x19, #0x8
  425ac4:	str	x19, [x22, #672]
  425ac8:	cmp	x20, x19
  425acc:	b.hi	425ab0 <wcrtomb@plt+0x20e90>  // b.pmore
  425ad0:	ldp	x27, x28, [sp, #80]
  425ad4:	b	425928 <wcrtomb@plt+0x20d08>
  425ad8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425adc:	ldr	x0, [x0, #944]
  425ae0:	cbz	x0, 425ae8 <wcrtomb@plt+0x20ec8>
  425ae4:	blr	x0
  425ae8:	mov	w2, #0x5                   	// #5
  425aec:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x15e64>
  425af0:	add	x1, x1, #0x170
  425af4:	mov	x0, #0x0                   	// #0
  425af8:	bl	4049c0 <dcgettext@plt>
  425afc:	mov	x2, x0
  425b00:	mov	w1, #0x0                   	// #0
  425b04:	mov	w0, #0x0                   	// #0
  425b08:	bl	404050 <error@plt>
  425b0c:	mov	w0, #0x2                   	// #2
  425b10:	bl	422b00 <wcrtomb@plt+0x1dee0>
  425b14:	stp	x27, x28, [sp, #80]
  425b18:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425b1c:	ldr	x0, [x0, #896]
  425b20:	bl	429bbc <wcrtomb@plt+0x24f9c>
  425b24:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425b28:	ldrb	w0, [x0, #561]
  425b2c:	cbz	w0, 425b44 <wcrtomb@plt+0x20f24>
  425b30:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  425b34:	ldr	x1, [x0, #1096]
  425b38:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  425b3c:	str	x1, [x0, #3864]
  425b40:	b	42594c <wcrtomb@plt+0x20d2c>
  425b44:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  425b48:	ldr	x1, [x0, #1104]
  425b4c:	b	425b38 <wcrtomb@plt+0x20f18>
  425b50:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  425b54:	ldr	x1, [x0, #3144]
  425b58:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x15e64>
  425b5c:	add	x0, x0, #0x1a0
  425b60:	bl	434874 <argp_parse@@Base+0x1134>
  425b64:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  425b68:	str	w0, [x1, #664]
  425b6c:	cbz	w0, 425b88 <wcrtomb@plt+0x20f68>
  425b70:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425b74:	ldrb	w0, [x0, #561]
  425b78:	cbnz	w0, 425b88 <wcrtomb@plt+0x20f68>
  425b7c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425b80:	ldr	x0, [x0, #552]
  425b84:	cbz	x0, 425980 <wcrtomb@plt+0x20d60>
  425b88:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425b8c:	strb	wzr, [x0, #693]
  425b90:	b	425980 <wcrtomb@plt+0x20d60>
  425b94:	blr	x0
  425b98:	mov	w2, #0x5                   	// #5
  425b9c:	mov	x1, x22
  425ba0:	mov	x0, #0x0                   	// #0
  425ba4:	bl	4049c0 <dcgettext@plt>
  425ba8:	mov	x5, x21
  425bac:	ldr	x4, [x19, #32]
  425bb0:	ldr	x3, [x19, #24]
  425bb4:	mov	x2, x0
  425bb8:	mov	w1, #0x0                   	// #0
  425bbc:	mov	w0, #0x0                   	// #0
  425bc0:	bl	404050 <error@plt>
  425bc4:	ldr	x0, [x19, #32]
  425bc8:	bl	4047c0 <free@plt>
  425bcc:	mov	x0, x19
  425bd0:	bl	4047c0 <free@plt>
  425bd4:	cbz	x20, 425c14 <wcrtomb@plt+0x20ff4>
  425bd8:	mov	x19, x20
  425bdc:	ldr	x20, [x20]
  425be0:	ldr	w0, [x23]
  425be4:	cbz	w0, 425bc4 <wcrtomb@plt+0x20fa4>
  425be8:	mov	w2, w25
  425bec:	ldp	x0, x1, [x19, #8]
  425bf0:	bl	418c40 <wcrtomb@plt+0x14020>
  425bf4:	mov	x21, x0
  425bf8:	mov	x1, x0
  425bfc:	ldr	x0, [x19, #32]
  425c00:	bl	404720 <strcmp@plt>
  425c04:	cbz	w0, 425bc4 <wcrtomb@plt+0x20fa4>
  425c08:	ldr	x0, [x24, #944]
  425c0c:	cbnz	x0, 425b94 <wcrtomb@plt+0x20f74>
  425c10:	b	425b98 <wcrtomb@plt+0x20f78>
  425c14:	bl	41d62c <wcrtomb@plt+0x18a0c>
  425c18:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425c1c:	ldr	x0, [x0, #600]
  425c20:	cbz	x0, 425c28 <wcrtomb@plt+0x21008>
  425c24:	bl	405fec <wcrtomb@plt+0x13cc>
  425c28:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425c2c:	ldr	w0, [x0, #796]
  425c30:	cmp	w0, #0x5
  425c34:	b.eq	425da8 <wcrtomb@plt+0x21188>  // b.none
  425c38:	b.ls	425c60 <wcrtomb@plt+0x21040>  // b.plast
  425c3c:	cmp	w0, #0x7
  425c40:	b.eq	425d98 <wcrtomb@plt+0x21178>  // b.none
  425c44:	b.ls	425d30 <wcrtomb@plt+0x21110>  // b.plast
  425c48:	cmp	w0, #0x8
  425c4c:	b.eq	425c84 <wcrtomb@plt+0x21064>  // b.none
  425c50:	cmp	w0, #0x9
  425c54:	b.ne	425c88 <wcrtomb@plt+0x21068>  // b.any
  425c58:	bl	419d58 <wcrtomb@plt+0x15138>
  425c5c:	b	425c88 <wcrtomb@plt+0x21068>
  425c60:	cmp	w0, #0x3
  425c64:	b.eq	425d90 <wcrtomb@plt+0x21170>  // b.none
  425c68:	b.ls	425c74 <wcrtomb@plt+0x21054>  // b.plast
  425c6c:	bl	40debc <wcrtomb@plt+0x929c>
  425c70:	b	425c88 <wcrtomb@plt+0x21068>
  425c74:	cbz	w0, 425d50 <wcrtomb@plt+0x21130>
  425c78:	sub	w0, w0, #0x1
  425c7c:	cmp	w0, #0x1
  425c80:	b.hi	425c88 <wcrtomb@plt+0x21068>  // b.pmore
  425c84:	bl	4275d0 <wcrtomb@plt+0x229b0>
  425c88:	bl	409528 <wcrtomb@plt+0x4908>
  425c8c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425c90:	ldrb	w0, [x0, #633]
  425c94:	cbnz	w0, 425dbc <wcrtomb@plt+0x2119c>
  425c98:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  425c9c:	ldr	w0, [x0, #3104]
  425ca0:	cbnz	w0, 425dc4 <wcrtomb@plt+0x211a4>
  425ca4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425ca8:	ldr	x0, [x0, #600]
  425cac:	cbz	x0, 425cb4 <wcrtomb@plt+0x21094>
  425cb0:	bl	4060f0 <wcrtomb@plt+0x14d0>
  425cb4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425cb8:	ldr	x0, [x0, #624]
  425cbc:	bl	4047c0 <free@plt>
  425cc0:	bl	428de4 <wcrtomb@plt+0x241c4>
  425cc4:	bl	41d65c <wcrtomb@plt+0x18a3c>
  425cc8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  425ccc:	ldr	w0, [x0, #3392]
  425cd0:	cmp	w0, #0x2
  425cd4:	b.eq	425dcc <wcrtomb@plt+0x211ac>  // b.none
  425cd8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  425cdc:	ldr	x1, [x0, #3864]
  425ce0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  425ce4:	ldr	x0, [x0, #1104]
  425ce8:	cmp	x1, x0
  425cec:	b.eq	425df4 <wcrtomb@plt+0x211d4>  // b.none
  425cf0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  425cf4:	ldr	x0, [x0, #1096]
  425cf8:	ldr	w1, [x0]
  425cfc:	tbnz	w1, #5, 425d08 <wcrtomb@plt+0x210e8>
  425d00:	bl	4042a0 <fclose@plt>
  425d04:	cbz	w0, 425d10 <wcrtomb@plt+0x210f0>
  425d08:	mov	w0, #0x2                   	// #2
  425d0c:	bl	424a80 <wcrtomb@plt+0x1fe60>
  425d10:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  425d14:	ldr	w0, [x0, #3392]
  425d18:	ldp	x19, x20, [sp, #16]
  425d1c:	ldp	x21, x22, [sp, #32]
  425d20:	ldp	x23, x24, [sp, #48]
  425d24:	ldp	x25, x26, [sp, #64]
  425d28:	ldp	x29, x30, [sp], #416
  425d2c:	ret
  425d30:	cmp	w0, #0x6
  425d34:	b.ne	425c88 <wcrtomb@plt+0x21068>  // b.any
  425d38:	bl	410e28 <wcrtomb@plt+0xc208>
  425d3c:	adrp	x0, 410000 <wcrtomb@plt+0xb3e0>
  425d40:	add	x0, x0, #0xf54
  425d44:	bl	4198a0 <wcrtomb@plt+0x14c80>
  425d48:	bl	410dec <wcrtomb@plt+0xc1cc>
  425d4c:	b	425c88 <wcrtomb@plt+0x21068>
  425d50:	stp	x27, x28, [sp, #80]
  425d54:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425d58:	ldr	x0, [x0, #944]
  425d5c:	cbz	x0, 425d64 <wcrtomb@plt+0x21144>
  425d60:	blr	x0
  425d64:	mov	w2, #0x5                   	// #5
  425d68:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x15e64>
  425d6c:	add	x1, x1, #0x1d8
  425d70:	mov	x0, #0x0                   	// #0
  425d74:	bl	4049c0 <dcgettext@plt>
  425d78:	mov	x2, x0
  425d7c:	mov	w1, #0x0                   	// #0
  425d80:	mov	w0, #0x0                   	// #0
  425d84:	bl	404050 <error@plt>
  425d88:	mov	w0, #0x2                   	// #2
  425d8c:	bl	422b00 <wcrtomb@plt+0x1dee0>
  425d90:	bl	40d870 <wcrtomb@plt+0x8c50>
  425d94:	b	425c88 <wcrtomb@plt+0x21068>
  425d98:	adrp	x0, 419000 <wcrtomb@plt+0x143e0>
  425d9c:	add	x0, x0, #0xcc4
  425da0:	bl	4198a0 <wcrtomb@plt+0x14c80>
  425da4:	b	425c88 <wcrtomb@plt+0x21068>
  425da8:	bl	40963c <wcrtomb@plt+0x4a1c>
  425dac:	adrp	x0, 409000 <wcrtomb@plt+0x43e0>
  425db0:	add	x0, x0, #0xa64
  425db4:	bl	4198a0 <wcrtomb@plt+0x14c80>
  425db8:	b	425c88 <wcrtomb@plt+0x21068>
  425dbc:	bl	4057ec <wcrtomb@plt+0xbcc>
  425dc0:	b	425c98 <wcrtomb@plt+0x21078>
  425dc4:	bl	40c408 <wcrtomb@plt+0x77e8>
  425dc8:	b	425ca4 <wcrtomb@plt+0x21084>
  425dcc:	mov	w2, #0x5                   	// #5
  425dd0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x15e64>
  425dd4:	add	x1, x1, #0x228
  425dd8:	mov	x0, #0x0                   	// #0
  425ddc:	bl	4049c0 <dcgettext@plt>
  425de0:	mov	x2, x0
  425de4:	mov	w1, #0x0                   	// #0
  425de8:	mov	w0, #0x0                   	// #0
  425dec:	bl	404050 <error@plt>
  425df0:	b	425cd8 <wcrtomb@plt+0x210b8>
  425df4:	bl	4348cc <argp_parse@@Base+0x118c>
  425df8:	b	425d10 <wcrtomb@plt+0x210f0>
  425dfc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425e00:	mov	w1, #0x8900                	// #35072
  425e04:	movk	w1, #0xc, lsl #16
  425e08:	str	w1, [x0, #644]
  425e0c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425e10:	add	w1, w1, #0x4, lsl #12
  425e14:	str	w1, [x0, #636]
  425e18:	mov	w20, #0x100                 	// #256
  425e1c:	b	425e6c <wcrtomb@plt+0x2124c>
  425e20:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425e24:	mov	w1, #0x900                 	// #2304
  425e28:	movk	w1, #0xc, lsl #16
  425e2c:	str	w1, [x0, #644]
  425e30:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425e34:	add	w1, w1, #0x4, lsl #12
  425e38:	str	w1, [x0, #636]
  425e3c:	b	425e6c <wcrtomb@plt+0x2124c>
  425e40:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425e44:	ldr	w0, [x0, #492]
  425e48:	cmp	w0, #0x2
  425e4c:	b.eq	425e20 <wcrtomb@plt+0x21200>  // b.none
  425e50:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425e54:	mov	w1, #0x900                 	// #2304
  425e58:	movk	w1, #0x8, lsl #16
  425e5c:	str	w1, [x0, #644]
  425e60:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425e64:	add	w1, w1, #0x4, lsl #12
  425e68:	str	w1, [x0, #636]
  425e6c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425e70:	str	w20, [x0, #496]
  425e74:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425e78:	ldr	w0, [x0, #796]
  425e7c:	cmp	w0, #0x9
  425e80:	b.eq	4258a0 <wcrtomb@plt+0x20c80>  // b.none
  425e84:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425e88:	ldrb	w0, [x0, #489]
  425e8c:	cbz	w0, 425e9c <wcrtomb@plt+0x2127c>
  425e90:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425e94:	mov	w1, #0x2                   	// #2
  425e98:	str	w1, [x0, #580]
  425e9c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425ea0:	ldr	d0, [x0, #568]
  425ea4:	fcmp	d0, #0.0
  425ea8:	b.eq	425ec0 <wcrtomb@plt+0x212a0>  // b.none
  425eac:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425eb0:	ldr	d1, [x0, #856]
  425eb4:	ucvtf	d1, d1
  425eb8:	fcmpe	d0, d1
  425ebc:	b.mi	4258c0 <wcrtomb@plt+0x20ca0>  // b.first
  425ec0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425ec4:	ldrb	w0, [x0, #576]
  425ec8:	cbz	w0, 425f08 <wcrtomb@plt+0x212e8>
  425ecc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425ed0:	ldr	x0, [x0, #768]
  425ed4:	cbz	x0, 425f08 <wcrtomb@plt+0x212e8>
  425ed8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  425edc:	add	x0, x0, #0xbb0
  425ee0:	ldr	x19, [x0, #48]
  425ee4:	ldr	x1, [x0, #16]
  425ee8:	mov	x0, x19
  425eec:	bl	4221cc <wcrtomb@plt+0x1d5ac>
  425ef0:	cbnz	w0, 425900 <wcrtomb@plt+0x20ce0>
  425ef4:	ldr	w0, [x19]
  425ef8:	cmp	w0, #0x1
  425efc:	b.eq	425918 <wcrtomb@plt+0x20cf8>  // b.none
  425f00:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425f04:	strb	wzr, [x0, #576]
  425f08:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425f0c:	ldr	w0, [x0, #796]
  425f10:	cmp	w0, #0x7
  425f14:	b.hi	4259ac <wcrtomb@plt+0x20d8c>  // b.pmore
  425f18:	cmp	w0, #0x4
  425f1c:	b.hi	4259bc <wcrtomb@plt+0x20d9c>  // b.pmore
  425f20:	cmp	w0, #0x2
  425f24:	b.ls	425924 <wcrtomb@plt+0x20d04>  // b.plast
  425f28:	cmp	w0, #0x3
  425f2c:	b.ne	425928 <wcrtomb@plt+0x20d08>  // b.any
  425f30:	bl	41d528 <wcrtomb@plt+0x18908>
  425f34:	and	w0, w0, #0xff
  425f38:	cbz	w0, 4259fc <wcrtomb@plt+0x20ddc>
  425f3c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  425f40:	ldr	w0, [x0, #3152]
  425f44:	cbz	w0, 425928 <wcrtomb@plt+0x20d08>
  425f48:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425f4c:	ldr	x0, [x0, #784]
  425f50:	cbz	x0, 425928 <wcrtomb@plt+0x20d08>
  425f54:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425f58:	ldr	x0, [x0, #624]
  425f5c:	ldr	x19, [x0]
  425f60:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  425f64:	add	x1, x1, #0xca8
  425f68:	mov	x0, x19
  425f6c:	bl	404720 <strcmp@plt>
  425f70:	cbz	w0, 425928 <wcrtomb@plt+0x20d08>
  425f74:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425f78:	ldr	x1, [x0, #840]
  425f7c:	mov	x0, x19
  425f80:	bl	420948 <wcrtomb@plt+0x1bd28>
  425f84:	b	425928 <wcrtomb@plt+0x20d08>
  425f88:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425f8c:	ldr	x0, [x0, #944]
  425f90:	cbz	x0, 425f98 <wcrtomb@plt+0x21378>
  425f94:	blr	x0
  425f98:	mov	w2, #0x5                   	// #5
  425f9c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  425fa0:	add	x1, x1, #0xdf0
  425fa4:	mov	x0, #0x0                   	// #0
  425fa8:	bl	4049c0 <dcgettext@plt>
  425fac:	mov	x2, x0
  425fb0:	mov	w1, #0x0                   	// #0
  425fb4:	mov	w0, #0x0                   	// #0
  425fb8:	bl	404050 <error@plt>
  425fbc:	b	424e70 <wcrtomb@plt+0x20250>
  425fc0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425fc4:	ldr	w0, [x0, #920]
  425fc8:	cmp	w0, #0x0
  425fcc:	b.gt	425718 <wcrtomb@plt+0x20af8>
  425fd0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425fd4:	ldr	w0, [x0, #592]
  425fd8:	cmp	w0, #0x0
  425fdc:	b.le	425650 <wcrtomb@plt+0x20a30>
  425fe0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  425fe4:	ldr	w0, [x0, #752]
  425fe8:	cmp	w0, #0x4
  425fec:	b.eq	425650 <wcrtomb@plt+0x20a30>  // b.none
  425ff0:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x17e64>
  425ff4:	add	x0, x0, #0x950
  425ff8:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  425ffc:	ldr	w1, [x1, #796]
  426000:	add	x0, x0, #0x158
  426004:	ldr	w0, [x0, x1, lsl #2]
  426008:	tbnz	w0, #0, 425440 <wcrtomb@plt+0x20820>
  42600c:	stp	x27, x28, [sp, #80]
  426010:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  426014:	ldr	x0, [x0, #944]
  426018:	cbz	x0, 426020 <wcrtomb@plt+0x21400>
  42601c:	blr	x0
  426020:	mov	w2, #0x5                   	// #5
  426024:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x15e64>
  426028:	add	x1, x1, #0x18
  42602c:	mov	x0, #0x0                   	// #0
  426030:	bl	4049c0 <dcgettext@plt>
  426034:	mov	x2, x0
  426038:	mov	w1, #0x0                   	// #0
  42603c:	mov	w0, #0x0                   	// #0
  426040:	bl	404050 <error@plt>
  426044:	mov	w0, #0x2                   	// #2
  426048:	bl	422b00 <wcrtomb@plt+0x1dee0>
  42604c:	cmp	w1, #0x68
  426050:	b.eq	4260f8 <wcrtomb@plt+0x214d8>  // b.none
  426054:	cmp	w1, #0x68
  426058:	b.gt	4260a4 <wcrtomb@plt+0x21484>
  42605c:	cmp	w1, #0x52
  426060:	b.eq	4260e4 <wcrtomb@plt+0x214c4>  // b.none
  426064:	cmp	w1, #0x53
  426068:	b.ne	426080 <wcrtomb@plt+0x21460>  // b.any
  42606c:	ldr	w1, [x0]
  426070:	and	w1, w1, #0xfffffffb
  426074:	str	w1, [x0]
  426078:	mov	w0, #0x0                   	// #0
  42607c:	b	4260a0 <wcrtomb@plt+0x21480>
  426080:	cmp	w1, #0x48
  426084:	b.ne	42609c <wcrtomb@plt+0x2147c>  // b.any
  426088:	ldr	w1, [x0]
  42608c:	and	w1, w1, #0xfffffffd
  426090:	str	w1, [x0]
  426094:	mov	w0, #0x0                   	// #0
  426098:	b	4260a0 <wcrtomb@plt+0x21480>
  42609c:	mov	w0, #0x1                   	// #1
  4260a0:	ret
  4260a4:	cmp	w1, #0x72
  4260a8:	b.eq	4260d0 <wcrtomb@plt+0x214b0>  // b.none
  4260ac:	cmp	w1, #0x73
  4260b0:	b.ne	4260c8 <wcrtomb@plt+0x214a8>  // b.any
  4260b4:	ldr	w1, [x0]
  4260b8:	orr	w1, w1, #0x4
  4260bc:	str	w1, [x0]
  4260c0:	mov	w0, #0x0                   	// #0
  4260c4:	b	4260a0 <wcrtomb@plt+0x21480>
  4260c8:	mov	w0, #0x1                   	// #1
  4260cc:	b	4260a0 <wcrtomb@plt+0x21480>
  4260d0:	ldr	w1, [x0]
  4260d4:	orr	w1, w1, #0x1
  4260d8:	str	w1, [x0]
  4260dc:	mov	w0, #0x0                   	// #0
  4260e0:	b	4260a0 <wcrtomb@plt+0x21480>
  4260e4:	ldr	w1, [x0]
  4260e8:	and	w1, w1, #0xfffffffe
  4260ec:	str	w1, [x0]
  4260f0:	mov	w0, #0x0                   	// #0
  4260f4:	b	4260a0 <wcrtomb@plt+0x21480>
  4260f8:	ldr	w1, [x0]
  4260fc:	orr	w1, w1, #0x2
  426100:	str	w1, [x0]
  426104:	mov	w0, #0x0                   	// #0
  426108:	b	4260a0 <wcrtomb@plt+0x21480>
  42610c:	stp	x29, x30, [sp, #-32]!
  426110:	mov	x29, sp
  426114:	str	x19, [sp, #16]
  426118:	mov	x19, x0
  42611c:	mov	x0, #0x20                  	// #32
  426120:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  426124:	str	xzr, [x0]
  426128:	ldr	x1, [x19, #96]
  42612c:	cbz	x1, 426150 <wcrtomb@plt+0x21530>
  426130:	str	x0, [x1]
  426134:	str	x0, [x19, #96]
  426138:	ldr	x1, [x19, #104]
  42613c:	add	x1, x1, #0x1
  426140:	str	x1, [x19, #104]
  426144:	ldr	x19, [sp, #16]
  426148:	ldp	x29, x30, [sp], #32
  42614c:	ret
  426150:	str	x0, [x19, #88]
  426154:	b	426134 <wcrtomb@plt+0x21514>
  426158:	stp	x29, x30, [sp, #-32]!
  42615c:	mov	x29, sp
  426160:	str	x19, [sp, #16]
  426164:	mov	w19, w1
  426168:	bl	42610c <wcrtomb@plt+0x214ec>
  42616c:	mov	w1, #0x2                   	// #2
  426170:	str	w1, [x0, #8]
  426174:	str	w19, [x0, #16]
  426178:	ldr	x19, [sp, #16]
  42617c:	ldp	x29, x30, [sp], #32
  426180:	ret
  426184:	stp	x29, x30, [sp, #-32]!
  426188:	mov	x29, sp
  42618c:	stp	x19, x20, [sp, #16]
  426190:	mov	w20, w1
  426194:	bl	42610c <wcrtomb@plt+0x214ec>
  426198:	mov	x19, x0
  42619c:	str	wzr, [x0, #8]
  4261a0:	mov	x0, #0x2                   	// #2
  4261a4:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  4261a8:	str	x0, [x19, #16]
  4261ac:	strb	w20, [x0]
  4261b0:	ldr	x0, [x19, #16]
  4261b4:	strb	wzr, [x0, #1]
  4261b8:	mov	x0, #0x1                   	// #1
  4261bc:	str	x0, [x19, #24]
  4261c0:	ldp	x19, x20, [sp, #16]
  4261c4:	ldp	x29, x30, [sp], #32
  4261c8:	ret
  4261cc:	stp	x29, x30, [sp, #-48]!
  4261d0:	mov	x29, sp
  4261d4:	stp	x19, x20, [sp, #16]
  4261d8:	subs	x20, x2, x1
  4261dc:	b.ne	4261ec <wcrtomb@plt+0x215cc>  // b.any
  4261e0:	ldp	x19, x20, [sp, #16]
  4261e4:	ldp	x29, x30, [sp], #48
  4261e8:	ret
  4261ec:	str	x21, [sp, #32]
  4261f0:	mov	x19, x1
  4261f4:	bl	42610c <wcrtomb@plt+0x214ec>
  4261f8:	mov	x21, x0
  4261fc:	str	wzr, [x0, #8]
  426200:	add	x0, x20, #0x1
  426204:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  426208:	str	x0, [x21, #16]
  42620c:	mov	x2, x20
  426210:	mov	x1, x19
  426214:	bl	403f70 <memcpy@plt>
  426218:	ldr	x0, [x21, #16]
  42621c:	strb	wzr, [x0, x20]
  426220:	str	x20, [x21, #24]
  426224:	ldr	x21, [sp, #32]
  426228:	b	4261e0 <wcrtomb@plt+0x215c0>
  42622c:	stp	x29, x30, [sp, #-48]!
  426230:	mov	x29, sp
  426234:	stp	x19, x20, [sp, #16]
  426238:	stp	x21, x22, [sp, #32]
  42623c:	mov	w20, w0
  426240:	mov	x22, x1
  426244:	mov	x19, x2
  426248:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42624c:	ldr	x0, [x0, #3160]
  426250:	cmp	x0, x2
  426254:	b.cc	4262a4 <wcrtomb@plt+0x21684>  // b.lo, b.ul, b.last
  426258:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42625c:	ldr	x21, [x0, #3168]
  426260:	mov	x2, x19
  426264:	mov	x1, x22
  426268:	mov	x0, x21
  42626c:	bl	403f70 <memcpy@plt>
  426270:	cmp	w20, #0x3
  426274:	b.eq	4262fc <wcrtomb@plt+0x216dc>  // b.none
  426278:	b.hi	4262c4 <wcrtomb@plt+0x216a4>  // b.pmore
  42627c:	cmp	w20, #0x1
  426280:	b.eq	42632c <wcrtomb@plt+0x2170c>  // b.none
  426284:	cmp	w20, #0x2
  426288:	b.ne	426340 <wcrtomb@plt+0x21720>  // b.any
  42628c:	bl	4041f0 <__ctype_tolower_loc@plt>
  426290:	ldrb	w1, [x21]
  426294:	ldr	x0, [x0]
  426298:	ldr	w0, [x0, x1, lsl #2]
  42629c:	strb	w0, [x21]
  4262a0:	b	426340 <wcrtomb@plt+0x21720>
  4262a4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4262a8:	add	x21, x0, #0xc58
  4262ac:	str	x2, [x0, #3160]
  4262b0:	mov	x1, x2
  4262b4:	ldr	x0, [x21, #8]
  4262b8:	bl	43ff70 <argp_parse@@Base+0xc830>
  4262bc:	str	x0, [x21, #8]
  4262c0:	b	426258 <wcrtomb@plt+0x21638>
  4262c4:	cmp	w20, #0x4
  4262c8:	b.ne	426340 <wcrtomb@plt+0x21720>  // b.any
  4262cc:	add	x19, x21, x19
  4262d0:	cmp	x21, x19
  4262d4:	b.cs	426340 <wcrtomb@plt+0x21720>  // b.hs, b.nlast
  4262d8:	bl	4041f0 <__ctype_tolower_loc@plt>
  4262dc:	mov	x1, x21
  4262e0:	ldrb	w3, [x1]
  4262e4:	ldr	x2, [x0]
  4262e8:	ldr	w2, [x2, x3, lsl #2]
  4262ec:	strb	w2, [x1], #1
  4262f0:	cmp	x1, x19
  4262f4:	b.ne	4262e0 <wcrtomb@plt+0x216c0>  // b.any
  4262f8:	b	426340 <wcrtomb@plt+0x21720>
  4262fc:	add	x19, x21, x19
  426300:	cmp	x21, x19
  426304:	b.cs	426340 <wcrtomb@plt+0x21720>  // b.hs, b.nlast
  426308:	bl	404550 <__ctype_toupper_loc@plt>
  42630c:	mov	x1, x21
  426310:	ldrb	w3, [x1]
  426314:	ldr	x2, [x0]
  426318:	ldr	w2, [x2, x3, lsl #2]
  42631c:	strb	w2, [x1], #1
  426320:	cmp	x1, x19
  426324:	b.ne	426310 <wcrtomb@plt+0x216f0>  // b.any
  426328:	b	426340 <wcrtomb@plt+0x21720>
  42632c:	bl	404550 <__ctype_toupper_loc@plt>
  426330:	ldrb	w1, [x21]
  426334:	ldr	x0, [x0]
  426338:	ldr	w0, [x0, x1, lsl #2]
  42633c:	strb	w0, [x21]
  426340:	mov	x0, x21
  426344:	ldp	x19, x20, [sp, #16]
  426348:	ldp	x21, x22, [sp, #32]
  42634c:	ldp	x29, x30, [sp], #48
  426350:	ret
  426354:	sub	sp, sp, #0x280
  426358:	stp	x29, x30, [sp]
  42635c:	mov	x29, sp
  426360:	stp	x19, x20, [sp, #16]
  426364:	stp	x21, x22, [sp, #32]
  426368:	stp	x23, x24, [sp, #48]
  42636c:	mov	x24, x0
  426370:	mov	x0, #0x70                  	// #112
  426374:	bl	4400bc <argp_parse@@Base+0xc97c>
  426378:	mov	x21, x0
  42637c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  426380:	ldr	x0, [x0, #3176]
  426384:	cbz	x0, 4263f0 <wcrtomb@plt+0x217d0>
  426388:	str	x21, [x0]
  42638c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  426390:	str	x21, [x0, #3176]
  426394:	ldrb	w0, [x24]
  426398:	cmp	w0, #0x73
  42639c:	b.eq	426490 <wcrtomb@plt+0x21870>  // b.none
  4263a0:	mov	x2, #0x6                   	// #6
  4263a4:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x17e64>
  4263a8:	add	x1, x1, #0xd90
  4263ac:	mov	x0, x24
  4263b0:	bl	4043c0 <strncmp@plt>
  4263b4:	cbnz	w0, 42644c <wcrtomb@plt+0x2182c>
  4263b8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4263bc:	str	wzr, [x0, #384]
  4263c0:	add	x19, x24, #0x6
  4263c4:	ldrb	w1, [x24, #6]
  4263c8:	cbz	w1, 426b5c <wcrtomb@plt+0x21f3c>
  4263cc:	add	x20, x0, #0x180
  4263d0:	cmp	w1, #0x3b
  4263d4:	b.eq	4263fc <wcrtomb@plt+0x217dc>  // b.none
  4263d8:	mov	x0, x20
  4263dc:	bl	42604c <wcrtomb@plt+0x2142c>
  4263e0:	cbnz	w0, 426404 <wcrtomb@plt+0x217e4>
  4263e4:	ldrb	w1, [x19, #1]!
  4263e8:	cbnz	w1, 4263d0 <wcrtomb@plt+0x217b0>
  4263ec:	b	426b5c <wcrtomb@plt+0x21f3c>
  4263f0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4263f4:	str	x21, [x0, #3184]
  4263f8:	b	42638c <wcrtomb@plt+0x2176c>
  4263fc:	add	x19, x19, #0x1
  426400:	b	426b5c <wcrtomb@plt+0x21f3c>
  426404:	stp	x25, x26, [sp, #64]
  426408:	stp	x27, x28, [sp, #80]
  42640c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  426410:	ldr	x0, [x0, #944]
  426414:	cbz	x0, 42641c <wcrtomb@plt+0x217fc>
  426418:	blr	x0
  42641c:	mov	w2, #0x5                   	// #5
  426420:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x17e64>
  426424:	add	x1, x1, #0xd98
  426428:	mov	x0, #0x0                   	// #0
  42642c:	bl	4049c0 <dcgettext@plt>
  426430:	ldrb	w3, [x19]
  426434:	mov	x2, x0
  426438:	mov	w1, #0x0                   	// #0
  42643c:	mov	w0, #0x0                   	// #0
  426440:	bl	404050 <error@plt>
  426444:	mov	w0, #0x2                   	// #2
  426448:	bl	422b00 <wcrtomb@plt+0x1dee0>
  42644c:	stp	x25, x26, [sp, #64]
  426450:	stp	x27, x28, [sp, #80]
  426454:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  426458:	ldr	x0, [x0, #944]
  42645c:	cbz	x0, 426464 <wcrtomb@plt+0x21844>
  426460:	blr	x0
  426464:	mov	w2, #0x5                   	// #5
  426468:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x17e64>
  42646c:	add	x1, x1, #0xdb8
  426470:	mov	x0, #0x0                   	// #0
  426474:	bl	4049c0 <dcgettext@plt>
  426478:	mov	x2, x0
  42647c:	mov	w1, #0x0                   	// #0
  426480:	mov	w0, #0x0                   	// #0
  426484:	bl	404050 <error@plt>
  426488:	mov	w0, #0x2                   	// #2
  42648c:	bl	422b00 <wcrtomb@plt+0x1dee0>
  426490:	stp	x25, x26, [sp, #64]
  426494:	stp	x27, x28, [sp, #80]
  426498:	ldrb	w22, [x24, #1]
  42649c:	str	w22, [sp, #108]
  4264a0:	add	x28, x24, #0x2
  4264a4:	ldrb	w0, [x24, #2]
  4264a8:	cmp	w0, #0x0
  4264ac:	ccmp	w22, w0, #0x4, ne  // ne = any
  4264b0:	b.eq	4264f4 <wcrtomb@plt+0x218d4>  // b.none
  4264b4:	mov	w20, #0x2                   	// #2
  4264b8:	mov	x23, #0x2                   	// #2
  4264bc:	b	4264d8 <wcrtomb@plt+0x218b8>
  4264c0:	add	w20, w20, #0x1
  4264c4:	sxtw	x23, w20
  4264c8:	ldrb	w0, [x24, w20, sxtw]
  4264cc:	cmp	w0, #0x0
  4264d0:	ccmp	w22, w0, #0x4, ne  // ne = any
  4264d4:	b.eq	4264fc <wcrtomb@plt+0x218dc>  // b.none
  4264d8:	cmp	w0, #0x5c
  4264dc:	b.ne	4264c0 <wcrtomb@plt+0x218a0>  // b.any
  4264e0:	add	x23, x24, x23
  4264e4:	ldrb	w0, [x23, #1]
  4264e8:	cmp	w0, #0x0
  4264ec:	cinc	w20, w20, ne  // ne = any
  4264f0:	b	4264c0 <wcrtomb@plt+0x218a0>
  4264f4:	mov	w20, #0x2                   	// #2
  4264f8:	mov	x23, #0x2                   	// #2
  4264fc:	cmp	w22, w0
  426500:	b.ne	42652c <wcrtomb@plt+0x2190c>  // b.any
  426504:	add	w25, w20, #0x1
  426508:	sxtw	x1, w25
  42650c:	add	x0, x24, x1
  426510:	str	x0, [sp, #96]
  426514:	ldrb	w0, [x24, w25, sxtw]
  426518:	cmp	w0, #0x0
  42651c:	ccmp	w22, w0, #0x4, ne  // ne = any
  426520:	b.eq	42659c <wcrtomb@plt+0x2197c>  // b.none
  426524:	mov	w19, w25
  426528:	b	426580 <wcrtomb@plt+0x21960>
  42652c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  426530:	ldr	x0, [x0, #944]
  426534:	cbz	x0, 42653c <wcrtomb@plt+0x2191c>
  426538:	blr	x0
  42653c:	mov	w2, #0x5                   	// #5
  426540:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x17e64>
  426544:	add	x1, x1, #0xdb8
  426548:	mov	x0, #0x0                   	// #0
  42654c:	bl	4049c0 <dcgettext@plt>
  426550:	mov	x2, x0
  426554:	mov	w1, #0x0                   	// #0
  426558:	mov	w0, #0x0                   	// #0
  42655c:	bl	404050 <error@plt>
  426560:	mov	w0, #0x2                   	// #2
  426564:	bl	422b00 <wcrtomb@plt+0x1dee0>
  426568:	add	w19, w19, #0x1
  42656c:	sxtw	x1, w19
  426570:	ldrb	w0, [x24, w19, sxtw]
  426574:	cmp	w0, #0x0
  426578:	ccmp	w22, w0, #0x4, ne  // ne = any
  42657c:	b.eq	4265a0 <wcrtomb@plt+0x21980>  // b.none
  426580:	cmp	w0, #0x5c
  426584:	b.ne	426568 <wcrtomb@plt+0x21948>  // b.any
  426588:	add	x1, x24, x1
  42658c:	ldrb	w0, [x1, #1]
  426590:	cmp	w0, #0x0
  426594:	cinc	w19, w19, ne  // ne = any
  426598:	b	426568 <wcrtomb@plt+0x21948>
  42659c:	mov	w19, w25
  4265a0:	cmp	w22, w0
  4265a4:	b.ne	4265e4 <wcrtomb@plt+0x219c4>  // b.any
  4265a8:	str	wzr, [x21, #8]
  4265ac:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4265b0:	ldr	w0, [x0, #384]
  4265b4:	str	w0, [x21, #12]
  4265b8:	add	x1, x1, #0x1
  4265bc:	add	x0, x24, x1
  4265c0:	str	x0, [sp, #624]
  4265c4:	ldrb	w1, [x24, x1]
  4265c8:	cmp	w1, #0x3b
  4265cc:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  4265d0:	b.eq	4266ec <wcrtomb@plt+0x21acc>  // b.none
  4265d4:	mov	w24, #0x0                   	// #0
  4265d8:	add	x27, x21, #0xc
  4265dc:	mov	w26, #0x1                   	// #1
  4265e0:	b	4266a8 <wcrtomb@plt+0x21a88>
  4265e4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4265e8:	ldr	x0, [x0, #944]
  4265ec:	cbz	x0, 4265f4 <wcrtomb@plt+0x219d4>
  4265f0:	blr	x0
  4265f4:	mov	w2, #0x5                   	// #5
  4265f8:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x17e64>
  4265fc:	add	x1, x1, #0xdb8
  426600:	mov	x0, #0x0                   	// #0
  426604:	bl	4049c0 <dcgettext@plt>
  426608:	mov	x2, x0
  42660c:	mov	w1, #0x0                   	// #0
  426610:	mov	w0, #0x0                   	// #0
  426614:	bl	404050 <error@plt>
  426618:	mov	w0, #0x2                   	// #2
  42661c:	bl	422b00 <wcrtomb@plt+0x1dee0>
  426620:	cmp	w1, #0x2f
  426624:	b.hi	4266cc <wcrtomb@plt+0x21aac>  // b.pmore
  426628:	mov	x0, x27
  42662c:	bl	42604c <wcrtomb@plt+0x2142c>
  426630:	cbz	w0, 42668c <wcrtomb@plt+0x21a6c>
  426634:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  426638:	ldr	x0, [x0, #944]
  42663c:	cbz	x0, 426644 <wcrtomb@plt+0x21a24>
  426640:	blr	x0
  426644:	mov	w2, #0x5                   	// #5
  426648:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x17e64>
  42664c:	add	x1, x1, #0xdd8
  426650:	mov	x0, #0x0                   	// #0
  426654:	bl	4049c0 <dcgettext@plt>
  426658:	ldr	x1, [sp, #624]
  42665c:	ldrb	w3, [x1]
  426660:	mov	x2, x0
  426664:	mov	w1, #0x0                   	// #0
  426668:	mov	w0, #0x0                   	// #0
  42666c:	bl	404050 <error@plt>
  426670:	mov	w0, #0x2                   	// #2
  426674:	bl	422b00 <wcrtomb@plt+0x1dee0>
  426678:	cmp	w1, #0x78
  42667c:	b.ne	426628 <wcrtomb@plt+0x21a08>  // b.any
  426680:	orr	w24, w24, #0x1
  426684:	b	42668c <wcrtomb@plt+0x21a6c>
  426688:	orr	w24, w24, #0x2
  42668c:	ldr	x1, [sp, #624]
  426690:	add	x0, x1, #0x1
  426694:	str	x0, [sp, #624]
  426698:	ldrb	w1, [x1, #1]
  42669c:	cmp	w1, #0x3b
  4266a0:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  4266a4:	b.eq	4266f0 <wcrtomb@plt+0x21ad0>  // b.none
  4266a8:	cmp	w1, #0x69
  4266ac:	b.eq	426688 <wcrtomb@plt+0x21a68>  // b.none
  4266b0:	b.hi	426678 <wcrtomb@plt+0x21a58>  // b.pmore
  4266b4:	cmp	w1, #0x39
  4266b8:	b.ls	426620 <wcrtomb@plt+0x21a00>  // b.plast
  4266bc:	cmp	w1, #0x67
  4266c0:	b.ne	426628 <wcrtomb@plt+0x21a08>  // b.any
  4266c4:	str	w26, [x21, #8]
  4266c8:	b	42668c <wcrtomb@plt+0x21a6c>
  4266cc:	mov	w2, #0x0                   	// #0
  4266d0:	add	x1, sp, #0x270
  4266d4:	bl	403fe0 <strtoul@plt>
  4266d8:	str	w0, [x21, #16]
  4266dc:	ldr	x0, [sp, #624]
  4266e0:	sub	x0, x0, #0x1
  4266e4:	str	x0, [sp, #624]
  4266e8:	b	42668c <wcrtomb@plt+0x21a6c>
  4266ec:	mov	w24, #0x0                   	// #0
  4266f0:	cmp	w1, #0x3b
  4266f4:	b.eq	4267b0 <wcrtomb@plt+0x21b90>  // b.none
  4266f8:	sub	w0, w20, #0x1
  4266fc:	sxtw	x0, w0
  426700:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  426704:	mov	x26, x0
  426708:	sub	w2, w20, #0x2
  42670c:	sxtw	x2, w2
  426710:	mov	x1, x28
  426714:	bl	403f70 <memcpy@plt>
  426718:	add	x0, x26, x23
  42671c:	sturb	wzr, [x0, #-2]
  426720:	add	x27, x21, #0x18
  426724:	mov	w2, w24
  426728:	mov	x1, x26
  42672c:	mov	x0, x27
  426730:	bl	44d948 <_obstack_memory_used@@Base+0xc7ac>
  426734:	cbnz	w0, 4267bc <wcrtomb@plt+0x21b9c>
  426738:	ldrb	w0, [x26]
  42673c:	cmp	w0, #0x5e
  426740:	b.eq	42675c <wcrtomb@plt+0x21b3c>  // b.none
  426744:	cmp	w20, #0x2
  426748:	b.le	426760 <wcrtomb@plt+0x21b40>
  42674c:	add	x23, x26, x23
  426750:	ldurb	w0, [x23, #-3]
  426754:	cmp	w0, #0x24
  426758:	b.ne	426760 <wcrtomb@plt+0x21b40>  // b.any
  42675c:	str	wzr, [x21, #8]
  426760:	mov	x0, x26
  426764:	bl	4047c0 <free@plt>
  426768:	sub	w19, w19, w25
  42676c:	add	w0, w19, #0x1
  426770:	sxtw	x0, w0
  426774:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  426778:	mov	x20, x0
  42677c:	sxtw	x2, w19
  426780:	ldr	x1, [sp, #96]
  426784:	bl	403f70 <memcpy@plt>
  426788:	strb	wzr, [x20, w19, sxtw]
  42678c:	str	x20, [sp, #632]
  426790:	ldrb	w0, [x20]
  426794:	cbz	w0, 426b38 <wcrtomb@plt+0x21f18>
  426798:	mov	x1, x20
  42679c:	mov	x2, x20
  4267a0:	mov	w19, #0x1                   	// #1
  4267a4:	mov	w23, #0x8                   	// #8
  4267a8:	add	x24, sp, #0x72
  4267ac:	b	426a24 <wcrtomb@plt+0x21e04>
  4267b0:	add	x0, x0, #0x1
  4267b4:	str	x0, [sp, #624]
  4267b8:	b	4266f8 <wcrtomb@plt+0x21ad8>
  4267bc:	mov	x3, #0x200                 	// #512
  4267c0:	add	x2, sp, #0x70
  4267c4:	mov	x1, x27
  4267c8:	bl	44da3c <_obstack_memory_used@@Base+0xc8a0>
  4267cc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4267d0:	ldr	x0, [x0, #944]
  4267d4:	cbz	x0, 4267dc <wcrtomb@plt+0x21bbc>
  4267d8:	blr	x0
  4267dc:	mov	w2, #0x5                   	// #5
  4267e0:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x17e64>
  4267e4:	add	x1, x1, #0xe08
  4267e8:	mov	x0, #0x0                   	// #0
  4267ec:	bl	4049c0 <dcgettext@plt>
  4267f0:	add	x3, sp, #0x70
  4267f4:	mov	x2, x0
  4267f8:	mov	w1, #0x0                   	// #0
  4267fc:	mov	w0, #0x0                   	// #0
  426800:	bl	404050 <error@plt>
  426804:	mov	w0, #0x2                   	// #2
  426808:	bl	422b00 <wcrtomb@plt+0x1dee0>
  42680c:	mov	x0, x21
  426810:	bl	4261cc <wcrtomb@plt+0x215ac>
  426814:	ldr	x1, [sp, #632]
  426818:	add	x0, x1, #0x1
  42681c:	str	x0, [sp, #632]
  426820:	ldrb	w1, [x1, #1]
  426824:	cmp	w1, #0x62
  426828:	b.eq	426a40 <wcrtomb@plt+0x21e20>  // b.none
  42682c:	b.hi	4268e4 <wcrtomb@plt+0x21cc4>  // b.pmore
  426830:	cmp	w1, #0x4c
  426834:	b.eq	426a78 <wcrtomb@plt+0x21e58>  // b.none
  426838:	b.ls	426868 <wcrtomb@plt+0x21c48>  // b.plast
  42683c:	cmp	w1, #0x5c
  426840:	b.eq	4269fc <wcrtomb@plt+0x21ddc>  // b.none
  426844:	cmp	w1, #0x61
  426848:	b.ne	4268c0 <wcrtomb@plt+0x21ca0>  // b.any
  42684c:	mov	w1, #0x7                   	// #7
  426850:	mov	x0, x21
  426854:	bl	426184 <wcrtomb@plt+0x21564>
  426858:	ldr	x0, [sp, #632]
  42685c:	add	x0, x0, #0x1
  426860:	str	x0, [sp, #632]
  426864:	b	426a14 <wcrtomb@plt+0x21df4>
  426868:	cmp	w1, #0x39
  42686c:	b.hi	42689c <wcrtomb@plt+0x21c7c>  // b.pmore
  426870:	cmp	w1, #0x2f
  426874:	b.hi	426990 <wcrtomb@plt+0x21d70>  // b.pmore
  426878:	cmp	w1, #0x26
  42687c:	b.ne	426acc <wcrtomb@plt+0x21eac>  // b.any
  426880:	mov	w1, #0x26                  	// #38
  426884:	mov	x0, x21
  426888:	bl	426184 <wcrtomb@plt+0x21564>
  42688c:	ldr	x0, [sp, #632]
  426890:	add	x0, x0, #0x1
  426894:	str	x0, [sp, #632]
  426898:	b	426a14 <wcrtomb@plt+0x21df4>
  42689c:	cmp	w1, #0x45
  4268a0:	b.ne	426acc <wcrtomb@plt+0x21eac>  // b.any
  4268a4:	mov	w1, #0x0                   	// #0
  4268a8:	mov	x0, x21
  4268ac:	bl	426158 <wcrtomb@plt+0x21538>
  4268b0:	ldr	x0, [sp, #632]
  4268b4:	add	x0, x0, #0x1
  4268b8:	str	x0, [sp, #632]
  4268bc:	b	426a14 <wcrtomb@plt+0x21df4>
  4268c0:	cmp	w1, #0x55
  4268c4:	b.ne	426acc <wcrtomb@plt+0x21eac>  // b.any
  4268c8:	mov	w1, #0x3                   	// #3
  4268cc:	mov	x0, x21
  4268d0:	bl	426158 <wcrtomb@plt+0x21538>
  4268d4:	ldr	x0, [sp, #632]
  4268d8:	add	x0, x0, #0x1
  4268dc:	str	x0, [sp, #632]
  4268e0:	b	426a14 <wcrtomb@plt+0x21df4>
  4268e4:	cmp	w1, #0x72
  4268e8:	b.eq	426a5c <wcrtomb@plt+0x21e3c>  // b.none
  4268ec:	b.ls	42691c <wcrtomb@plt+0x21cfc>  // b.plast
  4268f0:	cmp	w1, #0x75
  4268f4:	b.eq	426ab0 <wcrtomb@plt+0x21e90>  // b.none
  4268f8:	cmp	w1, #0x76
  4268fc:	b.ne	42696c <wcrtomb@plt+0x21d4c>  // b.any
  426900:	mov	w1, #0xb                   	// #11
  426904:	mov	x0, x21
  426908:	bl	426184 <wcrtomb@plt+0x21564>
  42690c:	ldr	x0, [sp, #632]
  426910:	add	x0, x0, #0x1
  426914:	str	x0, [sp, #632]
  426918:	b	426a14 <wcrtomb@plt+0x21df4>
  42691c:	cmp	w1, #0x6c
  426920:	b.eq	426a94 <wcrtomb@plt+0x21e74>  // b.none
  426924:	cmp	w1, #0x6e
  426928:	b.ne	426948 <wcrtomb@plt+0x21d28>  // b.any
  42692c:	mov	w1, #0xa                   	// #10
  426930:	mov	x0, x21
  426934:	bl	426184 <wcrtomb@plt+0x21564>
  426938:	ldr	x0, [sp, #632]
  42693c:	add	x0, x0, #0x1
  426940:	str	x0, [sp, #632]
  426944:	b	426a14 <wcrtomb@plt+0x21df4>
  426948:	cmp	w1, #0x66
  42694c:	b.ne	426acc <wcrtomb@plt+0x21eac>  // b.any
  426950:	mov	w1, #0xc                   	// #12
  426954:	mov	x0, x21
  426958:	bl	426184 <wcrtomb@plt+0x21564>
  42695c:	ldr	x0, [sp, #632]
  426960:	add	x0, x0, #0x1
  426964:	str	x0, [sp, #632]
  426968:	b	426a14 <wcrtomb@plt+0x21df4>
  42696c:	cmp	w1, #0x74
  426970:	b.ne	426acc <wcrtomb@plt+0x21eac>  // b.any
  426974:	mov	w1, #0x9                   	// #9
  426978:	mov	x0, x21
  42697c:	bl	426184 <wcrtomb@plt+0x21564>
  426980:	ldr	x0, [sp, #632]
  426984:	add	x0, x0, #0x1
  426988:	str	x0, [sp, #632]
  42698c:	b	426a14 <wcrtomb@plt+0x21df4>
  426990:	mov	w2, #0xa                   	// #10
  426994:	add	x1, sp, #0x278
  426998:	bl	403fe0 <strtoul@plt>
  42699c:	mov	x25, x0
  4269a0:	ldr	x0, [x21, #72]
  4269a4:	cmp	x0, x25
  4269a8:	b.cc	4269c0 <wcrtomb@plt+0x21da0>  // b.lo, b.ul, b.last
  4269ac:	mov	x0, x21
  4269b0:	bl	42610c <wcrtomb@plt+0x214ec>
  4269b4:	str	w19, [x0, #8]
  4269b8:	str	x25, [x0, #16]
  4269bc:	b	426a14 <wcrtomb@plt+0x21df4>
  4269c0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4269c4:	ldr	x0, [x0, #944]
  4269c8:	cbz	x0, 4269d0 <wcrtomb@plt+0x21db0>
  4269cc:	blr	x0
  4269d0:	mov	w2, #0x5                   	// #5
  4269d4:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x17e64>
  4269d8:	add	x1, x1, #0xe30
  4269dc:	mov	x0, #0x0                   	// #0
  4269e0:	bl	4049c0 <dcgettext@plt>
  4269e4:	mov	x2, x0
  4269e8:	mov	w1, #0x0                   	// #0
  4269ec:	mov	w0, #0x0                   	// #0
  4269f0:	bl	404050 <error@plt>
  4269f4:	mov	w0, #0x2                   	// #2
  4269f8:	bl	422b00 <wcrtomb@plt+0x1dee0>
  4269fc:	mov	w1, #0x5c                  	// #92
  426a00:	mov	x0, x21
  426a04:	bl	426184 <wcrtomb@plt+0x21564>
  426a08:	ldr	x0, [sp, #632]
  426a0c:	add	x0, x0, #0x1
  426a10:	str	x0, [sp, #632]
  426a14:	ldr	x1, [sp, #632]
  426a18:	ldr	x2, [sp, #632]
  426a1c:	ldrb	w0, [x2]
  426a20:	cbz	w0, 426b40 <wcrtomb@plt+0x21f20>
  426a24:	cmp	w0, #0x5c
  426a28:	b.eq	42680c <wcrtomb@plt+0x21bec>  // b.none
  426a2c:	cmp	w0, #0x26
  426a30:	b.eq	426b10 <wcrtomb@plt+0x21ef0>  // b.none
  426a34:	add	x2, x2, #0x1
  426a38:	str	x2, [sp, #632]
  426a3c:	b	426a18 <wcrtomb@plt+0x21df8>
  426a40:	mov	w1, w23
  426a44:	mov	x0, x21
  426a48:	bl	426184 <wcrtomb@plt+0x21564>
  426a4c:	ldr	x0, [sp, #632]
  426a50:	add	x0, x0, #0x1
  426a54:	str	x0, [sp, #632]
  426a58:	b	426a14 <wcrtomb@plt+0x21df4>
  426a5c:	mov	w1, #0xd                   	// #13
  426a60:	mov	x0, x21
  426a64:	bl	426184 <wcrtomb@plt+0x21564>
  426a68:	ldr	x0, [sp, #632]
  426a6c:	add	x0, x0, #0x1
  426a70:	str	x0, [sp, #632]
  426a74:	b	426a14 <wcrtomb@plt+0x21df4>
  426a78:	mov	w1, #0x4                   	// #4
  426a7c:	mov	x0, x21
  426a80:	bl	426158 <wcrtomb@plt+0x21538>
  426a84:	ldr	x0, [sp, #632]
  426a88:	add	x0, x0, #0x1
  426a8c:	str	x0, [sp, #632]
  426a90:	b	426a14 <wcrtomb@plt+0x21df4>
  426a94:	mov	w1, #0x2                   	// #2
  426a98:	mov	x0, x21
  426a9c:	bl	426158 <wcrtomb@plt+0x21538>
  426aa0:	ldr	x0, [sp, #632]
  426aa4:	add	x0, x0, #0x1
  426aa8:	str	x0, [sp, #632]
  426aac:	b	426a14 <wcrtomb@plt+0x21df4>
  426ab0:	mov	w1, w19
  426ab4:	mov	x0, x21
  426ab8:	bl	426158 <wcrtomb@plt+0x21538>
  426abc:	ldr	x0, [sp, #632]
  426ac0:	add	x0, x0, #0x1
  426ac4:	str	x0, [sp, #632]
  426ac8:	b	426a14 <wcrtomb@plt+0x21df4>
  426acc:	cmp	w22, w1
  426ad0:	b.eq	426b00 <wcrtomb@plt+0x21ee0>  // b.none
  426ad4:	mov	w0, #0x5c                  	// #92
  426ad8:	strb	w0, [sp, #112]
  426adc:	strb	w1, [sp, #113]
  426ae0:	mov	x2, x24
  426ae4:	add	x1, sp, #0x70
  426ae8:	mov	x0, x21
  426aec:	bl	4261cc <wcrtomb@plt+0x215ac>
  426af0:	ldr	x0, [sp, #632]
  426af4:	add	x0, x0, #0x1
  426af8:	str	x0, [sp, #632]
  426afc:	b	426a14 <wcrtomb@plt+0x21df4>
  426b00:	ldr	w1, [sp, #108]
  426b04:	mov	x0, x21
  426b08:	bl	426184 <wcrtomb@plt+0x21564>
  426b0c:	b	426af0 <wcrtomb@plt+0x21ed0>
  426b10:	mov	x0, x21
  426b14:	bl	4261cc <wcrtomb@plt+0x215ac>
  426b18:	mov	x0, x21
  426b1c:	bl	42610c <wcrtomb@plt+0x214ec>
  426b20:	str	w19, [x0, #8]
  426b24:	str	xzr, [x0, #16]
  426b28:	ldr	x1, [sp, #632]
  426b2c:	add	x1, x1, #0x1
  426b30:	str	x1, [sp, #632]
  426b34:	b	426a18 <wcrtomb@plt+0x21df8>
  426b38:	mov	x1, x20
  426b3c:	mov	x2, x20
  426b40:	mov	x0, x21
  426b44:	bl	4261cc <wcrtomb@plt+0x215ac>
  426b48:	mov	x0, x20
  426b4c:	bl	4047c0 <free@plt>
  426b50:	ldr	x19, [sp, #624]
  426b54:	ldp	x25, x26, [sp, #64]
  426b58:	ldp	x27, x28, [sp, #80]
  426b5c:	mov	x0, x19
  426b60:	ldp	x19, x20, [sp, #16]
  426b64:	ldp	x21, x22, [sp, #32]
  426b68:	ldp	x23, x24, [sp, #48]
  426b6c:	ldp	x29, x30, [sp]
  426b70:	add	sp, sp, #0x280
  426b74:	ret
  426b78:	ldrb	w1, [x0]
  426b7c:	cbz	w1, 426b9c <wcrtomb@plt+0x21f7c>
  426b80:	stp	x29, x30, [sp, #-16]!
  426b84:	mov	x29, sp
  426b88:	bl	426354 <wcrtomb@plt+0x21734>
  426b8c:	ldrb	w1, [x0]
  426b90:	cbnz	w1, 426b88 <wcrtomb@plt+0x21f68>
  426b94:	ldp	x29, x30, [sp], #16
  426b98:	ret
  426b9c:	ret
  426ba0:	stp	x29, x30, [sp, #-160]!
  426ba4:	mov	x29, sp
  426ba8:	stp	x19, x20, [sp, #16]
  426bac:	stp	x21, x22, [sp, #32]
  426bb0:	stp	x23, x24, [sp, #48]
  426bb4:	str	x0, [sp, #144]
  426bb8:	str	w1, [sp, #124]
  426bbc:	str	x2, [sp, #136]
  426bc0:	str	x3, [sp, #152]
  426bc4:	ldr	x21, [x0]
  426bc8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  426bcc:	ldrb	w0, [x0, #3192]
  426bd0:	cbz	w0, 426bf8 <wcrtomb@plt+0x21fd8>
  426bd4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  426bd8:	ldr	x24, [x0, #3184]
  426bdc:	cbz	x24, 4270b4 <wcrtomb@plt+0x22494>
  426be0:	stp	x25, x26, [sp, #64]
  426be4:	stp	x27, x28, [sp, #80]
  426be8:	mov	w20, #0x0                   	// #0
  426bec:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x3ee64>
  426bf0:	add	x19, x19, #0xc58
  426bf4:	b	426fb4 <wcrtomb@plt+0x22394>
  426bf8:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x3ee64>
  426bfc:	add	x19, x19, #0xc58
  426c00:	adrp	x4, 404000 <fputs@plt>
  426c04:	add	x4, x4, #0x7c0
  426c08:	adrp	x3, 43f000 <argp_parse@@Base+0xb8c0>
  426c0c:	add	x3, x3, #0xef4
  426c10:	mov	x2, #0x0                   	// #0
  426c14:	mov	x1, #0x0                   	// #0
  426c18:	add	x0, x19, #0x28
  426c1c:	bl	440f78 <_obstack_begin@@Base>
  426c20:	mov	w0, #0x1                   	// #1
  426c24:	strb	w0, [x19, #32]
  426c28:	b	426bd4 <wcrtomb@plt+0x21fb4>
  426c2c:	mov	x1, x25
  426c30:	add	x0, x19, #0x28
  426c34:	bl	440fcc <_obstack_newchunk@@Base>
  426c38:	b	426e78 <wcrtomb@plt+0x22258>
  426c3c:	mov	x1, x22
  426c40:	add	x0, x19, #0x28
  426c44:	bl	440fcc <_obstack_newchunk@@Base>
  426c48:	b	426ec8 <wcrtomb@plt+0x222a8>
  426c4c:	ldr	x25, [x24, #88]
  426c50:	cbnz	x25, 426cb8 <wcrtomb@plt+0x22098>
  426c54:	b	426e24 <wcrtomb@plt+0x22204>
  426c58:	ldr	x2, [x25, #24]
  426c5c:	ldr	x1, [x25, #16]
  426c60:	mov	w0, w20
  426c64:	bl	42622c <wcrtomb@plt+0x2160c>
  426c68:	str	x0, [sp, #104]
  426c6c:	sub	w0, w20, #0x1
  426c70:	cmp	w0, #0x1
  426c74:	csel	w20, w20, w23, hi  // hi = pmore
  426c78:	csel	w23, w23, w27, hi  // hi = pmore
  426c7c:	ldr	x27, [x25, #24]
  426c80:	ldr	x0, [x19, #72]
  426c84:	ldr	x1, [x19, #64]
  426c88:	sub	x0, x0, x1
  426c8c:	cmp	x27, x0
  426c90:	b.hi	426ce0 <wcrtomb@plt+0x220c0>  // b.pmore
  426c94:	mov	x2, x27
  426c98:	ldr	x1, [sp, #104]
  426c9c:	ldr	x0, [x19, #64]
  426ca0:	bl	403f70 <memcpy@plt>
  426ca4:	ldr	x0, [x19, #64]
  426ca8:	add	x27, x0, x27
  426cac:	str	x27, [x19, #64]
  426cb0:	ldr	x25, [x25]
  426cb4:	cbz	x25, 426e24 <wcrtomb@plt+0x22204>
  426cb8:	ldr	w27, [x25, #8]
  426cbc:	cmp	w27, #0x1
  426cc0:	b.eq	426cf0 <wcrtomb@plt+0x220d0>  // b.none
  426cc4:	cmp	w27, #0x2
  426cc8:	b.eq	426d90 <wcrtomb@plt+0x22170>  // b.none
  426ccc:	cbnz	w27, 426cb0 <wcrtomb@plt+0x22090>
  426cd0:	cbnz	w20, 426c58 <wcrtomb@plt+0x22038>
  426cd4:	ldr	x0, [x25, #16]
  426cd8:	str	x0, [sp, #104]
  426cdc:	b	426c7c <wcrtomb@plt+0x2205c>
  426ce0:	mov	x1, x27
  426ce4:	add	x0, x19, #0x28
  426ce8:	bl	440fcc <_obstack_newchunk@@Base>
  426cec:	b	426c94 <wcrtomb@plt+0x22074>
  426cf0:	ldr	x0, [x25, #16]
  426cf4:	lsl	x0, x0, #4
  426cf8:	add	x1, x26, x0
  426cfc:	ldr	x0, [x26, x0]
  426d00:	cmn	x0, #0x1
  426d04:	b.eq	426cb0 <wcrtomb@plt+0x22090>  // b.none
  426d08:	ldr	x27, [x1, #8]
  426d0c:	cmn	x27, #0x1
  426d10:	b.eq	426cb0 <wcrtomb@plt+0x22090>  // b.none
  426d14:	sub	x27, x27, x0
  426d18:	add	x0, x21, x0
  426d1c:	str	x0, [sp, #104]
  426d20:	cbnz	w20, 426d58 <wcrtomb@plt+0x22138>
  426d24:	ldr	x0, [x19, #72]
  426d28:	ldr	x1, [x19, #64]
  426d2c:	sub	x0, x0, x1
  426d30:	cmp	x27, x0
  426d34:	b.hi	426d80 <wcrtomb@plt+0x22160>  // b.pmore
  426d38:	mov	x2, x27
  426d3c:	ldr	x1, [sp, #104]
  426d40:	ldr	x0, [x19, #64]
  426d44:	bl	403f70 <memcpy@plt>
  426d48:	ldr	x0, [x19, #64]
  426d4c:	add	x27, x0, x27
  426d50:	str	x27, [x19, #64]
  426d54:	b	426cb0 <wcrtomb@plt+0x22090>
  426d58:	mov	x2, x27
  426d5c:	mov	x1, x0
  426d60:	mov	w0, w20
  426d64:	bl	42622c <wcrtomb@plt+0x2160c>
  426d68:	str	x0, [sp, #104]
  426d6c:	sub	w0, w20, #0x1
  426d70:	cmp	w0, #0x1
  426d74:	csel	w20, w20, w23, hi  // hi = pmore
  426d78:	csel	w23, w23, wzr, hi  // hi = pmore
  426d7c:	b	426d24 <wcrtomb@plt+0x22104>
  426d80:	mov	x1, x27
  426d84:	add	x0, x19, #0x28
  426d88:	bl	440fcc <_obstack_newchunk@@Base>
  426d8c:	b	426d38 <wcrtomb@plt+0x22118>
  426d90:	ldr	w0, [x25, #16]
  426d94:	cmp	w0, #0x2
  426d98:	b.hi	426da8 <wcrtomb@plt+0x22188>  // b.pmore
  426d9c:	cbnz	w0, 426db8 <wcrtomb@plt+0x22198>
  426da0:	mov	w20, w0
  426da4:	b	426cb0 <wcrtomb@plt+0x22090>
  426da8:	sub	w1, w0, #0x3
  426dac:	cmp	w1, #0x1
  426db0:	csel	w20, w20, w0, hi  // hi = pmore
  426db4:	b	426cb0 <wcrtomb@plt+0x22090>
  426db8:	cbz	w23, 426dd0 <wcrtomb@plt+0x221b0>
  426dbc:	sub	w1, w23, #0x3
  426dc0:	cmp	w1, #0x1
  426dc4:	b.ls	426ddc <wcrtomb@plt+0x221bc>  // b.plast
  426dc8:	mov	w20, w0
  426dcc:	b	426cb0 <wcrtomb@plt+0x22090>
  426dd0:	mov	w23, w20
  426dd4:	mov	w20, w0
  426dd8:	b	426cb0 <wcrtomb@plt+0x22090>
  426ddc:	mov	w23, w20
  426de0:	mov	w20, w0
  426de4:	b	426cb0 <wcrtomb@plt+0x22090>
  426de8:	mov	x0, x21
  426dec:	bl	403ff0 <strlen@plt>
  426df0:	mov	x22, x0
  426df4:	ldr	x0, [x19, #72]
  426df8:	ldr	x1, [x19, #64]
  426dfc:	sub	x0, x0, x1
  426e00:	cmp	x22, x0
  426e04:	b.hi	426eec <wcrtomb@plt+0x222cc>  // b.pmore
  426e08:	mov	x2, x22
  426e0c:	mov	x1, x21
  426e10:	ldr	x0, [x19, #64]
  426e14:	bl	403f70 <memcpy@plt>
  426e18:	ldr	x0, [x19, #64]
  426e1c:	add	x0, x0, x22
  426e20:	str	x0, [x19, #64]
  426e24:	add	x21, x21, x22
  426e28:	ldr	w0, [x24, #8]
  426e2c:	cbz	w0, 426efc <wcrtomb@plt+0x222dc>
  426e30:	ldrb	w0, [x21]
  426e34:	cbz	w0, 426f38 <wcrtomb@plt+0x22318>
  426e38:	ldr	x2, [x24, #72]
  426e3c:	mov	w4, #0x0                   	// #0
  426e40:	mov	x3, x26
  426e44:	add	x2, x2, #0x1
  426e48:	mov	x1, x21
  426e4c:	ldr	x0, [sp, #128]
  426e50:	bl	44db14 <_obstack_memory_used@@Base+0xc978>
  426e54:	cbnz	w0, 426de8 <wcrtomb@plt+0x221c8>
  426e58:	ldr	x22, [x26, #8]
  426e5c:	ldr	x25, [x26]
  426e60:	cbz	x25, 426e94 <wcrtomb@plt+0x22274>
  426e64:	ldr	x0, [x19, #72]
  426e68:	ldr	x1, [x19, #64]
  426e6c:	sub	x0, x0, x1
  426e70:	cmp	x25, x0
  426e74:	b.hi	426c2c <wcrtomb@plt+0x2200c>  // b.pmore
  426e78:	mov	x2, x25
  426e7c:	mov	x1, x21
  426e80:	ldr	x0, [x19, #64]
  426e84:	bl	403f70 <memcpy@plt>
  426e88:	ldr	x0, [x19, #64]
  426e8c:	add	x25, x0, x25
  426e90:	str	x25, [x19, #64]
  426e94:	ldr	x0, [sp, #112]
  426e98:	add	x0, x0, #0x1
  426e9c:	mov	x1, x0
  426ea0:	str	x0, [sp, #112]
  426ea4:	ldr	w0, [x24, #16]
  426ea8:	cbz	w0, 426c4c <wcrtomb@plt+0x2202c>
  426eac:	cmp	x1, w0, uxtw
  426eb0:	b.cs	426c4c <wcrtomb@plt+0x2202c>  // b.hs, b.nlast
  426eb4:	ldr	x0, [x19, #72]
  426eb8:	ldr	x1, [x19, #64]
  426ebc:	sub	x0, x0, x1
  426ec0:	cmp	x22, x0
  426ec4:	b.hi	426c3c <wcrtomb@plt+0x2201c>  // b.pmore
  426ec8:	mov	x2, x22
  426ecc:	mov	x1, x21
  426ed0:	ldr	x0, [x19, #64]
  426ed4:	bl	403f70 <memcpy@plt>
  426ed8:	ldr	x0, [x19, #64]
  426edc:	add	x0, x0, x22
  426ee0:	str	x0, [x19, #64]
  426ee4:	add	x21, x21, x22
  426ee8:	b	426e30 <wcrtomb@plt+0x22210>
  426eec:	mov	x1, x22
  426ef0:	add	x0, x19, #0x28
  426ef4:	bl	440fcc <_obstack_newchunk@@Base>
  426ef8:	b	426e08 <wcrtomb@plt+0x221e8>
  426efc:	mov	x0, x21
  426f00:	bl	403ff0 <strlen@plt>
  426f04:	mov	x20, x0
  426f08:	ldr	x0, [x19, #72]
  426f0c:	ldr	x1, [x19, #64]
  426f10:	sub	x0, x0, x1
  426f14:	cmp	x20, x0
  426f18:	b.hi	426ff8 <wcrtomb@plt+0x223d8>  // b.pmore
  426f1c:	mov	x2, x20
  426f20:	mov	x1, x21
  426f24:	ldr	x0, [x19, #64]
  426f28:	bl	403f70 <memcpy@plt>
  426f2c:	ldr	x0, [x19, #64]
  426f30:	add	x20, x0, x20
  426f34:	str	x20, [x19, #64]
  426f38:	ldr	x1, [x19, #72]
  426f3c:	ldr	x0, [x19, #64]
  426f40:	cmp	x1, x0
  426f44:	b.eq	427008 <wcrtomb@plt+0x223e8>  // b.none
  426f48:	add	x20, x19, #0x28
  426f4c:	ldr	x0, [x19, #64]
  426f50:	add	x1, x0, #0x1
  426f54:	str	x1, [x19, #64]
  426f58:	strb	wzr, [x0]
  426f5c:	mov	x0, x26
  426f60:	bl	4047c0 <free@plt>
  426f64:	ldr	x21, [x19, #56]
  426f68:	ldr	x1, [x19, #64]
  426f6c:	cmp	x21, x1
  426f70:	b.eq	427018 <wcrtomb@plt+0x223f8>  // b.none
  426f74:	ldr	x0, [x19, #88]
  426f78:	add	x1, x1, x0
  426f7c:	bic	x0, x1, x0
  426f80:	str	x0, [x19, #64]
  426f84:	ldr	x1, [x19, #48]
  426f88:	ldr	x2, [x19, #72]
  426f8c:	sub	x0, x0, x1
  426f90:	sub	x1, x2, x1
  426f94:	cmp	x0, x1
  426f98:	b.ls	426fa0 <wcrtomb@plt+0x22380>  // b.plast
  426f9c:	str	x2, [x19, #64]
  426fa0:	ldr	x1, [x19, #64]
  426fa4:	str	x1, [x19, #56]
  426fa8:	mov	w20, #0x1                   	// #1
  426fac:	ldr	x24, [x24]
  426fb0:	cbz	x24, 427028 <wcrtomb@plt+0x22408>
  426fb4:	ldr	w0, [x24, #12]
  426fb8:	ldr	w1, [sp, #124]
  426fbc:	tst	w1, w0
  426fc0:	b.eq	426fac <wcrtomb@plt+0x2238c>  // b.none
  426fc4:	ldr	x0, [x24, #72]
  426fc8:	add	x0, x0, #0x1
  426fcc:	lsl	x0, x0, #4
  426fd0:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  426fd4:	mov	x26, x0
  426fd8:	ldrb	w0, [x21]
  426fdc:	cbz	w0, 426f38 <wcrtomb@plt+0x22318>
  426fe0:	mov	w23, #0x0                   	// #0
  426fe4:	mov	w20, #0x0                   	// #0
  426fe8:	str	xzr, [sp, #112]
  426fec:	add	x0, x24, #0x18
  426ff0:	str	x0, [sp, #128]
  426ff4:	b	426e38 <wcrtomb@plt+0x22218>
  426ff8:	mov	x1, x20
  426ffc:	add	x0, x19, #0x28
  427000:	bl	440fcc <_obstack_newchunk@@Base>
  427004:	b	426f1c <wcrtomb@plt+0x222fc>
  427008:	mov	x1, #0x1                   	// #1
  42700c:	add	x0, x19, #0x28
  427010:	bl	440fcc <_obstack_newchunk@@Base>
  427014:	b	426f48 <wcrtomb@plt+0x22328>
  427018:	ldrb	w0, [x20, #80]
  42701c:	orr	w0, w0, #0x2
  427020:	strb	w0, [x20, #80]
  427024:	b	426f74 <wcrtomb@plt+0x22354>
  427028:	cbz	w20, 4270ac <wcrtomb@plt+0x2248c>
  42702c:	mov	x1, x21
  427030:	ldr	x2, [sp, #136]
  427034:	cbz	x2, 427048 <wcrtomb@plt+0x22428>
  427038:	ldr	x1, [sp, #152]
  42703c:	mov	x0, x21
  427040:	blr	x2
  427044:	mov	x1, x0
  427048:	ldr	x0, [sp, #144]
  42704c:	bl	41a5bc <wcrtomb@plt+0x1599c>
  427050:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  427054:	ldr	x0, [x0, #3208]
  427058:	cmp	x0, x21
  42705c:	b.cs	42708c <wcrtomb@plt+0x2246c>  // b.hs, b.nlast
  427060:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  427064:	ldr	x0, [x0, #3232]
  427068:	cmp	x0, x21
  42706c:	b.ls	42708c <wcrtomb@plt+0x2246c>  // b.plast
  427070:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  427074:	add	x0, x0, #0xc58
  427078:	str	x21, [x0, #56]
  42707c:	str	x21, [x0, #64]
  427080:	ldp	x25, x26, [sp, #64]
  427084:	ldp	x27, x28, [sp, #80]
  427088:	b	4270ec <wcrtomb@plt+0x224cc>
  42708c:	mov	x1, x21
  427090:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  427094:	add	x0, x0, #0xc58
  427098:	add	x0, x0, #0x28
  42709c:	bl	44111c <_obstack_free@@Base>
  4270a0:	ldp	x25, x26, [sp, #64]
  4270a4:	ldp	x27, x28, [sp, #80]
  4270a8:	b	4270ec <wcrtomb@plt+0x224cc>
  4270ac:	ldp	x25, x26, [sp, #64]
  4270b0:	ldp	x27, x28, [sp, #80]
  4270b4:	mov	w20, #0x0                   	// #0
  4270b8:	ldr	x2, [sp, #136]
  4270bc:	cbz	x2, 4270ec <wcrtomb@plt+0x224cc>
  4270c0:	ldr	x19, [sp, #144]
  4270c4:	str	xzr, [x19]
  4270c8:	ldr	x1, [sp, #152]
  4270cc:	mov	x0, x21
  4270d0:	blr	x2
  4270d4:	mov	x1, x0
  4270d8:	mov	x0, x19
  4270dc:	bl	41a5bc <wcrtomb@plt+0x1599c>
  4270e0:	mov	x0, x21
  4270e4:	bl	4047c0 <free@plt>
  4270e8:	mov	w20, #0x1                   	// #1
  4270ec:	mov	w0, w20
  4270f0:	ldp	x19, x20, [sp, #16]
  4270f4:	ldp	x21, x22, [sp, #32]
  4270f8:	ldp	x23, x24, [sp, #48]
  4270fc:	ldp	x29, x30, [sp], #160
  427100:	ret
  427104:	stp	x29, x30, [sp, #-16]!
  427108:	mov	x29, sp
  42710c:	mov	x3, #0x0                   	// #0
  427110:	mov	x2, #0x0                   	// #0
  427114:	bl	426ba0 <wcrtomb@plt+0x21f80>
  427118:	ldp	x29, x30, [sp], #16
  42711c:	ret
  427120:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  427124:	ldr	x0, [x0, #3184]
  427128:	cmp	x0, #0x0
  42712c:	cset	w0, ne  // ne = any
  427130:	ret
  427134:	cbz	x0, 427164 <wcrtomb@plt+0x22544>
  427138:	ldr	x2, [x0]
  42713c:	str	x2, [x1]
  427140:	str	x1, [x0]
  427144:	ldr	x0, [x1]
  427148:	cbz	x0, 427178 <wcrtomb@plt+0x22558>
  42714c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  427150:	add	x0, x0, #0xcd8
  427154:	ldr	x1, [x0, #16]
  427158:	add	x1, x1, #0x1
  42715c:	str	x1, [x0, #16]
  427160:	ret
  427164:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  427168:	ldr	x2, [x0, #3288]
  42716c:	str	x2, [x1]
  427170:	str	x1, [x0, #3288]
  427174:	b	427144 <wcrtomb@plt+0x22524>
  427178:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42717c:	str	x1, [x0, #3296]
  427180:	b	42714c <wcrtomb@plt+0x2252c>
  427184:	stp	x29, x30, [sp, #-96]!
  427188:	mov	x29, sp
  42718c:	stp	x19, x20, [sp, #16]
  427190:	stp	x23, x24, [sp, #48]
  427194:	and	w24, w0, #0xff
  427198:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42719c:	ldr	w23, [x0, #4032]
  4271a0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4271a4:	ldr	x20, [x0, #3288]
  4271a8:	cbz	x20, 427330 <wcrtomb@plt+0x22710>
  4271ac:	stp	x21, x22, [sp, #32]
  4271b0:	stp	x25, x26, [sp, #64]
  4271b4:	str	x27, [sp, #80]
  4271b8:	mov	x22, #0x0                   	// #0
  4271bc:	add	x21, x0, #0xcd8
  4271c0:	adrp	x25, 47d000 <_obstack_memory_used@@Base+0x3be64>
  4271c4:	add	x25, x25, #0x888
  4271c8:	mov	w26, #0x200                 	// #512
  4271cc:	b	42723c <wcrtomb@plt+0x2261c>
  4271d0:	mov	w2, #0x0                   	// #0
  4271d4:	ldr	x1, [x19, #16]
  4271d8:	ldr	w0, [x25]
  4271dc:	bl	404160 <unlinkat@plt>
  4271e0:	cbz	w0, 4271f4 <wcrtomb@plt+0x225d4>
  4271e4:	bl	404ad0 <__errno_location@plt>
  4271e8:	ldr	w0, [x0]
  4271ec:	cmp	w0, #0x2
  4271f0:	b.ne	427220 <wcrtomb@plt+0x22600>  // b.any
  4271f4:	ldr	x0, [x19, #16]
  4271f8:	bl	4047c0 <free@plt>
  4271fc:	ldr	x0, [x21, #24]
  427200:	str	x0, [x19]
  427204:	str	x19, [x21, #24]
  427208:	ldr	x0, [x21, #16]
  42720c:	sub	x0, x0, #0x1
  427210:	str	x0, [x21, #16]
  427214:	cbz	x22, 42722c <wcrtomb@plt+0x2260c>
  427218:	str	x20, [x22]
  42721c:	b	427238 <wcrtomb@plt+0x22618>
  427220:	ldr	x0, [x19, #16]
  427224:	bl	42a13c <wcrtomb@plt+0x2551c>
  427228:	b	4271f4 <wcrtomb@plt+0x225d4>
  42722c:	str	x20, [x21]
  427230:	b	427238 <wcrtomb@plt+0x22618>
  427234:	mov	x22, x19
  427238:	cbz	x20, 4272f4 <wcrtomb@plt+0x226d4>
  42723c:	mov	x19, x20
  427240:	ldr	x20, [x20]
  427244:	cbnz	w24, 42725c <wcrtomb@plt+0x2263c>
  427248:	ldr	x1, [x19, #32]
  42724c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  427250:	ldr	x0, [x0, #3888]
  427254:	cmp	x1, x0
  427258:	b.cs	427234 <wcrtomb@plt+0x22614>  // b.hs, b.nlast
  42725c:	ldr	w0, [x19, #8]
  427260:	bl	41b6a8 <wcrtomb@plt+0x16a88>
  427264:	ldrb	w0, [x19, #24]
  427268:	cbz	w0, 4271d0 <wcrtomb@plt+0x225b0>
  42726c:	ldr	w0, [x19, #8]
  427270:	cbz	w0, 427290 <wcrtomb@plt+0x22670>
  427274:	ldr	x0, [x19, #16]
  427278:	ldrb	w1, [x0]
  42727c:	cbz	w1, 4272d4 <wcrtomb@plt+0x226b4>
  427280:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x15e64>
  427284:	add	x1, x1, #0x340
  427288:	bl	404720 <strcmp@plt>
  42728c:	cbz	w0, 4272dc <wcrtomb@plt+0x226bc>
  427290:	ldr	x27, [x19, #16]
  427294:	mov	w2, w26
  427298:	mov	x1, x27
  42729c:	ldr	w0, [x25]
  4272a0:	bl	404160 <unlinkat@plt>
  4272a4:	cbz	w0, 4271f4 <wcrtomb@plt+0x225d4>
  4272a8:	bl	404ad0 <__errno_location@plt>
  4272ac:	ldr	w0, [x0]
  4272b0:	cmp	w0, #0x11
  4272b4:	b.eq	4272e4 <wcrtomb@plt+0x226c4>  // b.none
  4272b8:	cmp	w0, #0x27
  4272bc:	b.eq	4272ec <wcrtomb@plt+0x226cc>  // b.none
  4272c0:	cmp	w0, #0x2
  4272c4:	b.eq	4271f4 <wcrtomb@plt+0x225d4>  // b.none
  4272c8:	mov	x0, x27
  4272cc:	bl	429e54 <wcrtomb@plt+0x25234>
  4272d0:	b	4271f4 <wcrtomb@plt+0x225d4>
  4272d4:	mov	x22, x19
  4272d8:	b	427238 <wcrtomb@plt+0x22618>
  4272dc:	mov	x22, x19
  4272e0:	b	427238 <wcrtomb@plt+0x22618>
  4272e4:	mov	x22, x19
  4272e8:	b	427238 <wcrtomb@plt+0x22618>
  4272ec:	mov	x22, x19
  4272f0:	b	427238 <wcrtomb@plt+0x22618>
  4272f4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4272f8:	ldr	x20, [x0, #3288]
  4272fc:	cbz	x20, 427324 <wcrtomb@plt+0x22704>
  427300:	cbz	w24, 427418 <wcrtomb@plt+0x227f8>
  427304:	adrp	x26, 457000 <_obstack_memory_used@@Base+0x15e64>
  427308:	add	x26, x26, #0x340
  42730c:	adrp	x24, 47d000 <_obstack_memory_used@@Base+0x3be64>
  427310:	add	x24, x24, #0x888
  427314:	mov	w25, #0x200                 	// #512
  427318:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42731c:	add	x21, x21, #0xcd8
  427320:	b	427388 <wcrtomb@plt+0x22768>
  427324:	ldp	x21, x22, [sp, #32]
  427328:	ldp	x25, x26, [sp, #64]
  42732c:	ldr	x27, [sp, #80]
  427330:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  427334:	str	xzr, [x0, #3296]
  427338:	b	427400 <wcrtomb@plt+0x227e0>
  42733c:	ldr	x22, [x19, #16]
  427340:	mov	w2, w25
  427344:	mov	x1, x22
  427348:	ldr	w0, [x24]
  42734c:	bl	404160 <unlinkat@plt>
  427350:	cbz	w0, 427364 <wcrtomb@plt+0x22744>
  427354:	bl	404ad0 <__errno_location@plt>
  427358:	ldr	w0, [x0]
  42735c:	cmp	w0, #0x2
  427360:	b.ne	4273d8 <wcrtomb@plt+0x227b8>  // b.any
  427364:	ldr	x0, [x19, #16]
  427368:	bl	4047c0 <free@plt>
  42736c:	ldr	x0, [x21, #24]
  427370:	str	x0, [x19]
  427374:	str	x19, [x21, #24]
  427378:	ldr	x0, [x21, #16]
  42737c:	sub	x0, x0, #0x1
  427380:	str	x0, [x21, #16]
  427384:	cbz	x20, 4273e4 <wcrtomb@plt+0x227c4>
  427388:	mov	x19, x20
  42738c:	ldr	x20, [x20]
  427390:	ldr	w0, [x19, #8]
  427394:	bl	41b6a8 <wcrtomb@plt+0x16a88>
  427398:	ldr	w0, [x19, #8]
  42739c:	cbz	w0, 42733c <wcrtomb@plt+0x2271c>
  4273a0:	ldrb	w0, [x19, #24]
  4273a4:	cbz	w0, 42733c <wcrtomb@plt+0x2271c>
  4273a8:	ldr	x0, [x19, #16]
  4273ac:	ldrb	w1, [x0]
  4273b0:	cbz	w1, 4273c0 <wcrtomb@plt+0x227a0>
  4273b4:	mov	x1, x26
  4273b8:	bl	404720 <strcmp@plt>
  4273bc:	cbnz	w0, 42733c <wcrtomb@plt+0x2271c>
  4273c0:	bl	41b654 <wcrtomb@plt+0x16a34>
  4273c4:	mov	x22, x0
  4273c8:	ldr	w0, [x19, #8]
  4273cc:	sub	w0, w0, #0x1
  4273d0:	bl	41b6a8 <wcrtomb@plt+0x16a88>
  4273d4:	b	427340 <wcrtomb@plt+0x22720>
  4273d8:	mov	x0, x22
  4273dc:	bl	429e54 <wcrtomb@plt+0x25234>
  4273e0:	b	427364 <wcrtomb@plt+0x22744>
  4273e4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4273e8:	add	x1, x0, #0xcd8
  4273ec:	str	xzr, [x1, #8]
  4273f0:	str	xzr, [x0, #3288]
  4273f4:	ldp	x21, x22, [sp, #32]
  4273f8:	ldp	x25, x26, [sp, #64]
  4273fc:	ldr	x27, [sp, #80]
  427400:	mov	w0, w23
  427404:	bl	41b6a8 <wcrtomb@plt+0x16a88>
  427408:	ldp	x19, x20, [sp, #16]
  42740c:	ldp	x23, x24, [sp, #48]
  427410:	ldp	x29, x30, [sp], #96
  427414:	ret
  427418:	ldp	x21, x22, [sp, #32]
  42741c:	ldp	x25, x26, [sp, #64]
  427420:	ldr	x27, [sp, #80]
  427424:	b	427400 <wcrtomb@plt+0x227e0>
  427428:	stp	x29, x30, [sp, #-32]!
  42742c:	mov	x29, sp
  427430:	stp	x19, x20, [sp, #16]
  427434:	mov	w0, #0x1                   	// #1
  427438:	bl	427184 <wcrtomb@plt+0x22564>
  42743c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  427440:	ldr	x19, [x0, #3312]
  427444:	cbz	x19, 427464 <wcrtomb@plt+0x22844>
  427448:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42744c:	add	x20, x20, #0xcd8
  427450:	mov	x0, x19
  427454:	ldr	x19, [x19]
  427458:	bl	4047c0 <free@plt>
  42745c:	str	x19, [x20, #24]
  427460:	cbnz	x19, 427450 <wcrtomb@plt+0x22830>
  427464:	ldp	x19, x20, [sp, #16]
  427468:	ldp	x29, x30, [sp], #32
  42746c:	ret
  427470:	stp	x29, x30, [sp, #-48]!
  427474:	mov	x29, sp
  427478:	stp	x19, x20, [sp, #16]
  42747c:	stp	x21, x22, [sp, #32]
  427480:	mov	x19, x0
  427484:	and	w21, w1, #0xff
  427488:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42748c:	ldr	x0, [x0, #3288]
  427490:	cbz	x0, 4274a8 <wcrtomb@plt+0x22888>
  427494:	ldr	x1, [x0, #32]
  427498:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42749c:	ldr	x0, [x0, #3888]
  4274a0:	cmp	x1, x0
  4274a4:	b.cc	42752c <wcrtomb@plt+0x2290c>  // b.lo, b.ul, b.last
  4274a8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4274ac:	ldr	x20, [x0, #3312]
  4274b0:	cbz	x20, 427538 <wcrtomb@plt+0x22918>
  4274b4:	ldr	x1, [x20]
  4274b8:	str	x1, [x0, #3312]
  4274bc:	str	xzr, [x20]
  4274c0:	str	xzr, [x20]
  4274c4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4274c8:	ldr	w0, [x0, #4032]
  4274cc:	str	w0, [x20, #8]
  4274d0:	mov	x0, x19
  4274d4:	bl	440154 <argp_parse@@Base+0xca14>
  4274d8:	str	x0, [x20, #16]
  4274dc:	bl	41a8a4 <wcrtomb@plt+0x15c84>
  4274e0:	strb	w21, [x20, #24]
  4274e4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4274e8:	ldr	x0, [x0, #3888]
  4274ec:	str	x0, [x20, #32]
  4274f0:	cbz	w21, 42758c <wcrtomb@plt+0x2296c>
  4274f4:	ldr	x0, [x20, #16]
  4274f8:	ldrb	w1, [x0]
  4274fc:	cbz	w1, 427510 <wcrtomb@plt+0x228f0>
  427500:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x15e64>
  427504:	add	x1, x1, #0x340
  427508:	bl	404720 <strcmp@plt>
  42750c:	cbnz	w0, 42758c <wcrtomb@plt+0x2296c>
  427510:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  427514:	ldr	x19, [x0, #3288]
  427518:	cbz	x19, 4275bc <wcrtomb@plt+0x2299c>
  42751c:	mov	x21, #0x0                   	// #0
  427520:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x15e64>
  427524:	add	x22, x22, #0x340
  427528:	b	427568 <wcrtomb@plt+0x22948>
  42752c:	mov	w0, #0x0                   	// #0
  427530:	bl	427184 <wcrtomb@plt+0x22564>
  427534:	b	4274a8 <wcrtomb@plt+0x22888>
  427538:	mov	x0, #0x28                  	// #40
  42753c:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  427540:	mov	x20, x0
  427544:	b	4274c0 <wcrtomb@plt+0x228a0>
  427548:	ldr	w1, [x19, #8]
  42754c:	ldr	w0, [x20, #8]
  427550:	cmp	w1, w0
  427554:	b.lt	4275ac <wcrtomb@plt+0x2298c>  // b.tstop
  427558:	ldr	x1, [x19]
  42755c:	mov	x21, x19
  427560:	cbz	x1, 4275bc <wcrtomb@plt+0x2299c>
  427564:	mov	x19, x1
  427568:	ldrb	w0, [x19, #24]
  42756c:	cbz	w0, 427558 <wcrtomb@plt+0x22938>
  427570:	ldr	x0, [x19, #16]
  427574:	ldrb	w1, [x0]
  427578:	cbz	w1, 427548 <wcrtomb@plt+0x22928>
  42757c:	mov	x1, x22
  427580:	bl	404720 <strcmp@plt>
  427584:	cbnz	w0, 427558 <wcrtomb@plt+0x22938>
  427588:	b	427548 <wcrtomb@plt+0x22928>
  42758c:	mov	x1, x20
  427590:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  427594:	ldr	x0, [x0, #3296]
  427598:	bl	427134 <wcrtomb@plt+0x22514>
  42759c:	ldp	x19, x20, [sp, #16]
  4275a0:	ldp	x21, x22, [sp, #32]
  4275a4:	ldp	x29, x30, [sp], #48
  4275a8:	ret
  4275ac:	mov	x1, x20
  4275b0:	mov	x0, x21
  4275b4:	bl	427134 <wcrtomb@plt+0x22514>
  4275b8:	b	42759c <wcrtomb@plt+0x2297c>
  4275bc:	mov	x1, x20
  4275c0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4275c4:	ldr	x0, [x0, #3296]
  4275c8:	bl	427134 <wcrtomb@plt+0x22514>
  4275cc:	b	42759c <wcrtomb@plt+0x2297c>
  4275d0:	stp	x29, x30, [sp, #-256]!
  4275d4:	mov	x29, sp
  4275d8:	stp	x19, x20, [sp, #16]
  4275dc:	stp	x21, x22, [sp, #32]
  4275e0:	stp	x23, x24, [sp, #48]
  4275e4:	bl	41d73c <wcrtomb@plt+0x18b1c>
  4275e8:	mov	w0, #0x2                   	// #2
  4275ec:	bl	407ed4 <wcrtomb@plt+0x32b4>
  4275f0:	bl	4138b8 <wcrtomb@plt+0xec98>
  4275f4:	mov	w20, #0x0                   	// #0
  4275f8:	adrp	x21, 481000 <argp_program_version_hook@@Base+0x298>
  4275fc:	add	x21, x21, #0x20
  427600:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x3ee64>
  427604:	add	x22, x22, #0xfa8
  427608:	adrp	x23, 453000 <_obstack_memory_used@@Base+0x11e64>
  42760c:	add	x23, x23, #0xa38
  427610:	b	427628 <wcrtomb@plt+0x22a08>
  427614:	tst	w0, #0xfffffffd
  427618:	b.eq	4276a4 <wcrtomb@plt+0x22a84>  // b.none
  42761c:	mov	x0, x21
  427620:	bl	4249a8 <wcrtomb@plt+0x1fd88>
  427624:	mov	w20, w19
  427628:	mov	w2, #0x0                   	// #0
  42762c:	mov	x1, x21
  427630:	mov	x0, x22
  427634:	bl	4187e4 <wcrtomb@plt+0x13bc4>
  427638:	mov	w19, w0
  42763c:	cmp	w0, #0x4
  427640:	b.eq	427838 <wcrtomb@plt+0x22c18>  // b.none
  427644:	b.hi	4276b0 <wcrtomb@plt+0x22a90>  // b.pmore
  427648:	cmp	w0, #0x3
  42764c:	b.eq	427828 <wcrtomb@plt+0x22c08>  // b.none
  427650:	cmp	w0, #0x1
  427654:	b.ne	427614 <wcrtomb@plt+0x229f4>  // b.any
  427658:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42765c:	mov	w3, #0x0                   	// #0
  427660:	add	x2, x20, #0xf90
  427664:	mov	x1, x21
  427668:	ldr	x0, [x22]
  42766c:	bl	4183b4 <wcrtomb@plt+0x13794>
  427670:	ldr	x0, [x22]
  427674:	mov	x1, x21
  427678:	ldrb	w0, [x0, #156]
  42767c:	bl	4181a4 <wcrtomb@plt+0x13584>
  427680:	ldr	w1, [x20, #3984]
  427684:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  427688:	str	w1, [x0, #752]
  42768c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  427690:	ldr	w0, [x0, #796]
  427694:	cmp	w0, #0x8
  427698:	b.eq	427740 <wcrtomb@plt+0x22b20>  // b.none
  42769c:	bl	419828 <wcrtomb@plt+0x14c08>
  4276a0:	b	42761c <wcrtomb@plt+0x229fc>
  4276a4:	stp	x25, x26, [sp, #64]
  4276a8:	str	x27, [sp, #80]
  4276ac:	bl	404660 <abort@plt>
  4276b0:	cmp	w0, #0x5
  4276b4:	b.ne	42761c <wcrtomb@plt+0x229fc>  // b.any
  4276b8:	ldr	x0, [x22]
  4276bc:	bl	405884 <wcrtomb@plt+0xc64>
  4276c0:	cmp	w20, #0x1
  4276c4:	b.eq	427700 <wcrtomb@plt+0x22ae0>  // b.none
  4276c8:	b.hi	427878 <wcrtomb@plt+0x22c58>  // b.pmore
  4276cc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4276d0:	ldr	x0, [x0, #944]
  4276d4:	cbz	x0, 4276dc <wcrtomb@plt+0x22abc>
  4276d8:	blr	x0
  4276dc:	mov	w2, #0x5                   	// #5
  4276e0:	adrp	x1, 452000 <_obstack_memory_used@@Base+0x10e64>
  4276e4:	add	x1, x1, #0x960
  4276e8:	mov	x0, #0x0                   	// #0
  4276ec:	bl	4049c0 <dcgettext@plt>
  4276f0:	mov	x2, x0
  4276f4:	mov	w1, #0x0                   	// #0
  4276f8:	mov	w0, #0x0                   	// #0
  4276fc:	bl	404050 <error@plt>
  427700:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  427704:	ldr	x0, [x0, #944]
  427708:	cbz	x0, 427710 <wcrtomb@plt+0x22af0>
  42770c:	blr	x0
  427710:	mov	w2, #0x5                   	// #5
  427714:	mov	x1, x23
  427718:	mov	x0, #0x0                   	// #0
  42771c:	bl	4049c0 <dcgettext@plt>
  427720:	mov	x2, x0
  427724:	mov	w1, #0x0                   	// #0
  427728:	mov	w0, #0x0                   	// #0
  42772c:	bl	404050 <error@plt>
  427730:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  427734:	mov	w1, #0x2                   	// #2
  427738:	str	w1, [x0, #3392]
  42773c:	b	42761c <wcrtomb@plt+0x229fc>
  427740:	ldr	x0, [x21, #8]
  427744:	bl	41e41c <wcrtomb@plt+0x197fc>
  427748:	mov	x20, x0
  42774c:	cbz	x0, 42769c <wcrtomb@plt+0x22a7c>
  427750:	ldr	w0, [x0, #40]
  427754:	bl	41b6a8 <wcrtomb@plt+0x16a88>
  427758:	add	x1, sp, #0x80
  42775c:	ldr	x0, [x21, #8]
  427760:	bl	41b26c <wcrtomb@plt+0x1664c>
  427764:	cbnz	w0, 42769c <wcrtomb@plt+0x22a7c>
  427768:	ldr	w0, [sp, #144]
  42776c:	and	w0, w0, #0xf000
  427770:	cmp	w0, #0x4, lsl #12
  427774:	b.eq	42779c <wcrtomb@plt+0x22b7c>  // b.none
  427778:	ldp	x2, x3, [x21, #232]
  42777c:	ldr	x0, [sp, #216]
  427780:	ldr	x1, [sp, #224]
  427784:	bl	424a44 <wcrtomb@plt+0x1fe24>
  427788:	cmp	w0, #0x0
  42778c:	b.gt	42769c <wcrtomb@plt+0x22a7c>
  427790:	mov	x0, x20
  427794:	bl	41dac8 <wcrtomb@plt+0x18ea8>
  427798:	b	42769c <wcrtomb@plt+0x22a7c>
  42779c:	stp	x25, x26, [sp, #64]
  4277a0:	mov	w1, #0x1                   	// #1
  4277a4:	ldr	x0, [x20, #16]
  4277a8:	bl	41be90 <wcrtomb@plt+0x17270>
  4277ac:	mov	x25, x0
  4277b0:	cbnz	x0, 4277bc <wcrtomb@plt+0x22b9c>
  4277b4:	ldp	x25, x26, [sp, #64]
  4277b8:	b	42769c <wcrtomb@plt+0x22a7c>
  4277bc:	ldr	x0, [x20, #16]
  4277c0:	bl	41bacc <wcrtomb@plt+0x16eac>
  4277c4:	mov	x26, x0
  4277c8:	ldrb	w0, [x25]
  4277cc:	cbz	w0, 427808 <wcrtomb@plt+0x22be8>
  4277d0:	mov	x24, x25
  4277d4:	mov	x1, x24
  4277d8:	mov	x0, x26
  4277dc:	bl	41bb7c <wcrtomb@plt+0x16f5c>
  4277e0:	mov	x3, #0x0                   	// #0
  4277e4:	mov	w2, #0x0                   	// #0
  4277e8:	ldr	w1, [x20, #40]
  4277ec:	bl	41d694 <wcrtomb@plt+0x18a74>
  4277f0:	mov	x0, x24
  4277f4:	bl	403ff0 <strlen@plt>
  4277f8:	add	x0, x0, #0x1
  4277fc:	add	x24, x24, x0
  427800:	ldrb	w0, [x24]
  427804:	cbnz	w0, 4277d4 <wcrtomb@plt+0x22bb4>
  427808:	mov	x0, x26
  42780c:	bl	41bb50 <wcrtomb@plt+0x16f30>
  427810:	mov	x0, x25
  427814:	bl	4047c0 <free@plt>
  427818:	mov	x0, x20
  42781c:	bl	41dac8 <wcrtomb@plt+0x18ea8>
  427820:	ldp	x25, x26, [sp, #64]
  427824:	b	42769c <wcrtomb@plt+0x22a7c>
  427828:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42782c:	ldr	x1, [x0, #4008]
  427830:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  427834:	str	x1, [x0, #3944]
  427838:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42783c:	add	x0, x0, #0x20
  427840:	bl	4249a8 <wcrtomb@plt+0x1fd88>
  427844:	bl	40583c <wcrtomb@plt+0xc1c>
  427848:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42784c:	mov	w1, #0x1                   	// #1
  427850:	strb	w1, [x0, #928]
  427854:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  427858:	ldr	x1, [x0, #3944]
  42785c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  427860:	str	x1, [x0, #936]
  427864:	adrp	x23, 481000 <argp_program_version_hook@@Base+0x298>
  427868:	add	x23, x23, #0x210
  42786c:	adrp	x24, 481000 <argp_program_version_hook@@Base+0x298>
  427870:	add	x24, x24, #0x31c
  427874:	b	4279e8 <wcrtomb@plt+0x22dc8>
  427878:	cmp	w20, #0x3
  42787c:	b.eq	427700 <wcrtomb@plt+0x22ae0>  // b.none
  427880:	sub	w20, w20, #0x2
  427884:	tst	w20, #0xfffffffd
  427888:	b.ne	42761c <wcrtomb@plt+0x229fc>  // b.any
  42788c:	stp	x25, x26, [sp, #64]
  427890:	str	x27, [sp, #80]
  427894:	bl	404660 <abort@plt>
  427898:	mov	x1, x21
  42789c:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  4278a0:	add	x0, x0, #0xa30
  4278a4:	bl	422bb4 <wcrtomb@plt+0x1df94>
  4278a8:	cbnz	w0, 427a10 <wcrtomb@plt+0x22df0>
  4278ac:	b	4279e8 <wcrtomb@plt+0x22dc8>
  4278b0:	mov	x0, x21
  4278b4:	bl	429b9c <wcrtomb@plt+0x24f7c>
  4278b8:	b	4279e8 <wcrtomb@plt+0x22dc8>
  4278bc:	mov	x0, x21
  4278c0:	bl	42a0bc <wcrtomb@plt+0x2549c>
  4278c4:	b	4279c0 <wcrtomb@plt+0x22da0>
  4278c8:	sub	x2, x25, x2
  4278cc:	mov	w1, #0x0                   	// #0
  4278d0:	add	x0, x20, x19
  4278d4:	bl	404420 <memset@plt>
  4278d8:	mov	x2, x26
  4278dc:	mov	x1, x20
  4278e0:	mov	w0, w22
  4278e4:	bl	43f41c <argp_parse@@Base+0xbcdc>
  4278e8:	cmn	x0, #0x1
  4278ec:	b.eq	42793c <wcrtomb@plt+0x22d1c>  // b.none
  4278f0:	cbz	x0, 427950 <wcrtomb@plt+0x22d30>
  4278f4:	sub	x19, x27, x0
  4278f8:	sub	x1, x0, #0x1
  4278fc:	and	x1, x1, #0xfffffffffffffe00
  427900:	add	x0, x20, x1
  427904:	bl	405884 <wcrtomb@plt+0xc64>
  427908:	cmp	x19, #0x0
  42790c:	b.le	4279b8 <wcrtomb@plt+0x22d98>
  427910:	bl	406d94 <wcrtomb@plt+0x2174>
  427914:	mov	x20, x0
  427918:	bl	405974 <wcrtomb@plt+0xd54>
  42791c:	mov	x26, x0
  427920:	mov	x27, x19
  427924:	cmp	x0, x19
  427928:	b.ls	4278d8 <wcrtomb@plt+0x22cb8>  // b.plast
  42792c:	mov	x26, x19
  427930:	ands	x2, x19, #0x1ff
  427934:	b.eq	4278d8 <wcrtomb@plt+0x22cb8>  // b.none
  427938:	b	4278c8 <wcrtomb@plt+0x22ca8>
  42793c:	mov	x2, x26
  427940:	ldr	x1, [sp, #176]
  427944:	sub	x1, x1, x19
  427948:	mov	x0, x21
  42794c:	bl	429d80 <wcrtomb@plt+0x25160>
  427950:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  427954:	ldr	x0, [x0, #944]
  427958:	cbz	x0, 427960 <wcrtomb@plt+0x22d40>
  42795c:	blr	x0
  427960:	mov	w4, #0x5                   	// #5
  427964:	mov	x3, x27
  427968:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x17e64>
  42796c:	add	x2, x2, #0xe70
  427970:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x17e64>
  427974:	add	x1, x1, #0xe90
  427978:	mov	x0, #0x0                   	// #0
  42797c:	bl	4048f0 <dcngettext@plt>
  427980:	mov	x19, x0
  427984:	mov	x0, x21
  427988:	bl	43efc4 <argp_parse@@Base+0xb884>
  42798c:	mov	x20, x0
  427990:	add	x1, sp, #0x68
  427994:	mov	x0, x27
  427998:	bl	438ce8 <argp_parse@@Base+0x55a8>
  42799c:	mov	x4, x0
  4279a0:	mov	x3, x20
  4279a4:	mov	x2, x19
  4279a8:	mov	w1, #0x0                   	// #0
  4279ac:	mov	w0, #0x0                   	// #0
  4279b0:	bl	404050 <error@plt>
  4279b4:	bl	40e5ac <wcrtomb@plt+0x998c>
  4279b8:	ldp	x25, x26, [sp, #64]
  4279bc:	ldr	x27, [sp, #80]
  4279c0:	mov	w0, w22
  4279c4:	bl	4045d0 <close@plt>
  4279c8:	cbz	w0, 4279e8 <wcrtomb@plt+0x22dc8>
  4279cc:	mov	x0, x21
  4279d0:	bl	429a50 <wcrtomb@plt+0x24e30>
  4279d4:	b	4279e8 <wcrtomb@plt+0x22dc8>
  4279d8:	mov	x2, x21
  4279dc:	mov	x1, x21
  4279e0:	mov	x0, #0x0                   	// #0
  4279e4:	bl	40c73c <wcrtomb@plt+0x7b1c>
  4279e8:	bl	41e4a8 <wcrtomb@plt+0x19888>
  4279ec:	cbz	x0, 427a68 <wcrtomb@plt+0x22e48>
  4279f0:	ldr	x21, [x0, #16]
  4279f4:	mov	x1, #0x0                   	// #0
  4279f8:	mov	x0, x21
  4279fc:	bl	40ec08 <wcrtomb@plt+0x9fe8>
  427a00:	and	w0, w0, #0xff
  427a04:	cbnz	w0, 4279e8 <wcrtomb@plt+0x22dc8>
  427a08:	ldrb	w0, [x23]
  427a0c:	cbnz	w0, 427898 <wcrtomb@plt+0x22c78>
  427a10:	ldr	w0, [x24]
  427a14:	cmp	w0, #0x2
  427a18:	b.ne	4279d8 <wcrtomb@plt+0x22db8>  // b.any
  427a1c:	mov	w2, #0x0                   	// #0
  427a20:	mov	x1, x21
  427a24:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  427a28:	ldr	w0, [x0, #2184]
  427a2c:	bl	404ab0 <openat@plt>
  427a30:	mov	w22, w0
  427a34:	tbnz	w0, #31, 4278b0 <wcrtomb@plt+0x22c90>
  427a38:	add	x2, sp, #0x80
  427a3c:	mov	w1, w0
  427a40:	mov	w0, #0x0                   	// #0
  427a44:	bl	4049a0 <__fxstat@plt>
  427a48:	cbnz	w0, 4278bc <wcrtomb@plt+0x22c9c>
  427a4c:	ldr	x19, [sp, #176]
  427a50:	cmp	x19, #0x0
  427a54:	b.le	4279c0 <wcrtomb@plt+0x22da0>
  427a58:	stp	x25, x26, [sp, #64]
  427a5c:	str	x27, [sp, #80]
  427a60:	mov	x25, #0x200                 	// #512
  427a64:	b	427910 <wcrtomb@plt+0x22cf0>
  427a68:	bl	40b1ec <wcrtomb@plt+0x65cc>
  427a6c:	bl	4076d0 <wcrtomb@plt+0x2ab0>
  427a70:	bl	427428 <wcrtomb@plt+0x22808>
  427a74:	bl	41dddc <wcrtomb@plt+0x191bc>
  427a78:	ldp	x19, x20, [sp, #16]
  427a7c:	ldp	x21, x22, [sp, #32]
  427a80:	ldp	x23, x24, [sp, #48]
  427a84:	ldp	x29, x30, [sp], #256
  427a88:	ret
  427a8c:	stp	x29, x30, [sp, #-80]!
  427a90:	mov	x29, sp
  427a94:	stp	x19, x20, [sp, #16]
  427a98:	stp	x21, x22, [sp, #32]
  427a9c:	and	w22, w0, #0xff
  427aa0:	mov	x19, x1
  427aa4:	mov	x21, x2
  427aa8:	and	x0, x0, #0xff
  427aac:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  427ab0:	add	x1, x1, #0x188
  427ab4:	ldr	x20, [x1, x0, lsl #3]
  427ab8:	cmn	x20, #0x1
  427abc:	b.eq	427b2c <wcrtomb@plt+0x22f0c>  // b.none
  427ac0:	cbz	x20, 427b88 <wcrtomb@plt+0x22f68>
  427ac4:	mov	x0, x19
  427ac8:	bl	403ff0 <strlen@plt>
  427acc:	add	x0, x0, #0x1
  427ad0:	str	x0, [sp, #56]
  427ad4:	lsl	x0, x0, #4
  427ad8:	add	x0, x0, #0x1
  427adc:	str	x0, [sp, #48]
  427ae0:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  427ae4:	mov	x22, x0
  427ae8:	str	x0, [sp, #64]
  427aec:	str	x19, [sp, #72]
  427af0:	add	x4, sp, #0x30
  427af4:	add	x3, sp, #0x40
  427af8:	add	x2, sp, #0x38
  427afc:	add	x1, sp, #0x48
  427b00:	mov	x0, x20
  427b04:	bl	404740 <iconv@plt>
  427b08:	cbnz	x0, 427b9c <wcrtomb@plt+0x22f7c>
  427b0c:	ldr	x0, [sp, #64]
  427b10:	strb	wzr, [x0]
  427b14:	str	x22, [x21]
  427b18:	mov	w0, #0x1                   	// #1
  427b1c:	ldp	x19, x20, [sp, #16]
  427b20:	ldp	x21, x22, [sp, #32]
  427b24:	ldp	x29, x30, [sp], #80
  427b28:	ret
  427b2c:	cbz	w22, 427b6c <wcrtomb@plt+0x22f4c>
  427b30:	bl	438d28 <argp_parse@@Base+0x55e8>
  427b34:	mov	x1, x0
  427b38:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x17e64>
  427b3c:	add	x0, x0, #0xeb0
  427b40:	bl	404940 <iconv_open@plt>
  427b44:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  427b48:	str	x0, [x1, #400]
  427b4c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  427b50:	add	x0, x0, #0x188
  427b54:	ldr	x20, [x0, w22, sxtw #3]
  427b58:	cbz	x20, 427b88 <wcrtomb@plt+0x22f68>
  427b5c:	mov	w0, #0x0                   	// #0
  427b60:	cmn	x20, #0x1
  427b64:	b.eq	427b1c <wcrtomb@plt+0x22efc>  // b.none
  427b68:	b	427ac4 <wcrtomb@plt+0x22ea4>
  427b6c:	bl	438d28 <argp_parse@@Base+0x55e8>
  427b70:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x17e64>
  427b74:	add	x1, x1, #0xeb0
  427b78:	bl	404940 <iconv_open@plt>
  427b7c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  427b80:	str	x0, [x1, #392]
  427b84:	b	427b4c <wcrtomb@plt+0x22f2c>
  427b88:	mov	x0, x19
  427b8c:	bl	440154 <argp_parse@@Base+0xca14>
  427b90:	str	x0, [x21]
  427b94:	mov	w0, #0x1                   	// #1
  427b98:	b	427b1c <wcrtomb@plt+0x22efc>
  427b9c:	mov	x0, x22
  427ba0:	bl	4047c0 <free@plt>
  427ba4:	mov	w0, #0x0                   	// #0
  427ba8:	b	427b1c <wcrtomb@plt+0x22efc>
  427bac:	ldrb	w1, [x0]
  427bb0:	cbz	w1, 427bcc <wcrtomb@plt+0x22fac>
  427bb4:	tst	w1, #0xffffff80
  427bb8:	b.ne	427bd4 <wcrtomb@plt+0x22fb4>  // b.any
  427bbc:	ldrb	w1, [x0, #1]!
  427bc0:	cbnz	w1, 427bb4 <wcrtomb@plt+0x22f94>
  427bc4:	mov	w0, #0x1                   	// #1
  427bc8:	b	427bd8 <wcrtomb@plt+0x22fb8>
  427bcc:	mov	w0, #0x1                   	// #1
  427bd0:	b	427bd8 <wcrtomb@plt+0x22fb8>
  427bd4:	mov	w0, #0x0                   	// #0
  427bd8:	ret
  427bdc:	stp	x29, x30, [sp, #-48]!
  427be0:	mov	x29, sp
  427be4:	stp	x19, x20, [sp, #16]
  427be8:	mov	x19, x0
  427bec:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x15e64>
  427bf0:	add	x1, x1, #0x358
  427bf4:	bl	404720 <strcmp@plt>
  427bf8:	cbz	w0, 427c74 <wcrtomb@plt+0x23054>
  427bfc:	str	x21, [sp, #32]
  427c00:	mov	x0, x19
  427c04:	bl	403ff0 <strlen@plt>
  427c08:	cmp	x0, #0x2
  427c0c:	b.ls	427c88 <wcrtomb@plt+0x23068>  // b.plast
  427c10:	mov	x2, #0x3                   	// #3
  427c14:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x17e64>
  427c18:	add	x1, x1, #0xeb8
  427c1c:	mov	x0, x19
  427c20:	bl	4046e0 <memcmp@plt>
  427c24:	cbnz	w0, 427c88 <wcrtomb@plt+0x23068>
  427c28:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x3ee64>
  427c2c:	add	x20, x21, #0x198
  427c30:	add	x20, x20, #0x8
  427c34:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  427c38:	ldr	x5, [x0, #920]
  427c3c:	mov	x4, #0x4                   	// #4
  427c40:	mov	x3, x20
  427c44:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x18e64>
  427c48:	add	x2, x2, #0x60
  427c4c:	add	x1, x19, #0x3
  427c50:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x17e64>
  427c54:	add	x0, x0, #0xec0
  427c58:	bl	42fefc <wcrtomb@plt+0x2b2dc>
  427c5c:	ldr	w0, [x20, x0, lsl #2]
  427c60:	ldr	w1, [x21, #408]
  427c64:	bic	w0, w1, w0
  427c68:	str	w0, [x21, #408]
  427c6c:	ldr	x21, [sp, #32]
  427c70:	b	427c7c <wcrtomb@plt+0x2305c>
  427c74:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  427c78:	str	wzr, [x0, #408]
  427c7c:	ldp	x19, x20, [sp, #16]
  427c80:	ldp	x29, x30, [sp], #48
  427c84:	ret
  427c88:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x3ee64>
  427c8c:	add	x20, x21, #0x198
  427c90:	add	x20, x20, #0x8
  427c94:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  427c98:	ldr	x5, [x0, #920]
  427c9c:	mov	x4, #0x4                   	// #4
  427ca0:	mov	x3, x20
  427ca4:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x18e64>
  427ca8:	add	x2, x2, #0x60
  427cac:	mov	x1, x19
  427cb0:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x17e64>
  427cb4:	add	x0, x0, #0xec0
  427cb8:	bl	42fefc <wcrtomb@plt+0x2b2dc>
  427cbc:	ldr	w1, [x21, #408]
  427cc0:	ldr	w0, [x20, x0, lsl #2]
  427cc4:	orr	w1, w1, w0
  427cc8:	str	w1, [x21, #408]
  427ccc:	ldr	x21, [sp, #32]
  427cd0:	b	427c7c <wcrtomb@plt+0x2305c>
  427cd4:	mov	x12, #0x1010                	// #4112
  427cd8:	sub	sp, sp, x12
  427cdc:	stp	x29, x30, [sp]
  427ce0:	mov	x29, sp
  427ce4:	stp	x19, x20, [sp, #16]
  427ce8:	stp	x21, x22, [sp, #32]
  427cec:	str	x25, [sp, #64]
  427cf0:	mov	x20, x1
  427cf4:	mov	x25, x2
  427cf8:	cmn	w0, #0x64
  427cfc:	b.eq	427d90 <wcrtomb@plt+0x23170>  // b.none
  427d00:	mov	w19, w0
  427d04:	ldrb	w0, [x1]
  427d08:	cmp	w0, #0x2f
  427d0c:	b.eq	427d90 <wcrtomb@plt+0x23170>  // b.none
  427d10:	mov	x2, x1
  427d14:	mov	w1, w19
  427d18:	add	x0, sp, #0x50
  427d1c:	bl	4411c8 <_obstack_memory_used@@Base+0x2c>
  427d20:	mov	x22, x0
  427d24:	cbz	x0, 427dd0 <wcrtomb@plt+0x231b0>
  427d28:	stp	x23, x24, [sp, #48]
  427d2c:	mov	x1, x25
  427d30:	bl	4359ac <argp_parse@@Base+0x226c>
  427d34:	mov	w21, w0
  427d38:	bl	404ad0 <__errno_location@plt>
  427d3c:	mov	x23, x0
  427d40:	ldr	w24, [x0]
  427d44:	add	x0, sp, #0x50
  427d48:	cmp	x22, x0
  427d4c:	b.eq	427d58 <wcrtomb@plt+0x23138>  // b.none
  427d50:	mov	x0, x22
  427d54:	bl	4047c0 <free@plt>
  427d58:	cmn	w21, #0x1
  427d5c:	b.ne	427eb8 <wcrtomb@plt+0x23298>  // b.any
  427d60:	cmp	w24, #0x14
  427d64:	b.eq	427dcc <wcrtomb@plt+0x231ac>  // b.none
  427d68:	sub	w0, w24, #0x1
  427d6c:	cmp	w0, #0x1
  427d70:	ccmp	w24, #0xd, #0x4, hi  // hi = pmore
  427d74:	b.eq	427e28 <wcrtomb@plt+0x23208>  // b.none
  427d78:	cmp	w24, #0x26
  427d7c:	mov	w0, #0x5f                  	// #95
  427d80:	ccmp	w24, w0, #0x4, ne  // ne = any
  427d84:	b.ne	427dc0 <wcrtomb@plt+0x231a0>  // b.any
  427d88:	ldp	x23, x24, [sp, #48]
  427d8c:	b	427dd0 <wcrtomb@plt+0x231b0>
  427d90:	mov	x1, x25
  427d94:	mov	x0, x20
  427d98:	bl	4359ac <argp_parse@@Base+0x226c>
  427d9c:	mov	w21, w0
  427da0:	mov	w0, w21
  427da4:	ldp	x19, x20, [sp, #16]
  427da8:	ldp	x21, x22, [sp, #32]
  427dac:	ldr	x25, [sp, #64]
  427db0:	ldp	x29, x30, [sp]
  427db4:	mov	x12, #0x1010                	// #4112
  427db8:	add	sp, sp, x12
  427dbc:	ret
  427dc0:	str	w24, [x23]
  427dc4:	ldp	x23, x24, [sp, #48]
  427dc8:	b	427da0 <wcrtomb@plt+0x23180>
  427dcc:	ldp	x23, x24, [sp, #48]
  427dd0:	add	x0, sp, #0x50
  427dd4:	bl	43f50c <argp_parse@@Base+0xbdcc>
  427dd8:	cbnz	w0, 427e30 <wcrtomb@plt+0x23210>
  427ddc:	tbnz	w19, #31, 427dec <wcrtomb@plt+0x231cc>
  427de0:	ldr	w0, [sp, #80]
  427de4:	cmp	w0, w19
  427de8:	b.eq	427e40 <wcrtomb@plt+0x23220>  // b.none
  427dec:	mov	w0, w19
  427df0:	bl	404060 <fchdir@plt>
  427df4:	cbnz	w0, 427e5c <wcrtomb@plt+0x2323c>
  427df8:	mov	x1, x25
  427dfc:	mov	x0, x20
  427e00:	bl	4359ac <argp_parse@@Base+0x226c>
  427e04:	mov	w21, w0
  427e08:	cmn	w0, #0x1
  427e0c:	b.eq	427e7c <wcrtomb@plt+0x2325c>  // b.none
  427e10:	add	x0, sp, #0x50
  427e14:	bl	43f564 <argp_parse@@Base+0xbe24>
  427e18:	cbnz	w0, 427ea8 <wcrtomb@plt+0x23288>
  427e1c:	add	x0, sp, #0x50
  427e20:	bl	43f590 <argp_parse@@Base+0xbe50>
  427e24:	b	427da0 <wcrtomb@plt+0x23180>
  427e28:	ldp	x23, x24, [sp, #48]
  427e2c:	b	427dd0 <wcrtomb@plt+0x231b0>
  427e30:	stp	x23, x24, [sp, #48]
  427e34:	bl	404ad0 <__errno_location@plt>
  427e38:	ldr	w0, [x0]
  427e3c:	bl	439a88 <argp_parse@@Base+0x6348>
  427e40:	add	x0, sp, #0x50
  427e44:	bl	43f590 <argp_parse@@Base+0xbe50>
  427e48:	bl	404ad0 <__errno_location@plt>
  427e4c:	mov	w1, #0x9                   	// #9
  427e50:	str	w1, [x0]
  427e54:	mov	w21, #0xffffffff            	// #-1
  427e58:	b	427da0 <wcrtomb@plt+0x23180>
  427e5c:	bl	404ad0 <__errno_location@plt>
  427e60:	mov	x19, x0
  427e64:	ldr	w20, [x0]
  427e68:	add	x0, sp, #0x50
  427e6c:	bl	43f590 <argp_parse@@Base+0xbe50>
  427e70:	str	w20, [x19]
  427e74:	mov	w21, #0xffffffff            	// #-1
  427e78:	b	427da0 <wcrtomb@plt+0x23180>
  427e7c:	bl	404ad0 <__errno_location@plt>
  427e80:	mov	x19, x0
  427e84:	ldr	w20, [x0]
  427e88:	add	x0, sp, #0x50
  427e8c:	bl	43f564 <argp_parse@@Base+0xbe24>
  427e90:	cbnz	w0, 427ea8 <wcrtomb@plt+0x23288>
  427e94:	add	x0, sp, #0x50
  427e98:	bl	43f590 <argp_parse@@Base+0xbe50>
  427e9c:	cbz	w20, 427da0 <wcrtomb@plt+0x23180>
  427ea0:	str	w20, [x19]
  427ea4:	b	427da0 <wcrtomb@plt+0x23180>
  427ea8:	stp	x23, x24, [sp, #48]
  427eac:	bl	404ad0 <__errno_location@plt>
  427eb0:	ldr	w0, [x0]
  427eb4:	bl	439ac8 <argp_parse@@Base+0x6388>
  427eb8:	ldp	x23, x24, [sp, #48]
  427ebc:	b	427da0 <wcrtomb@plt+0x23180>
  427ec0:	mov	x12, #0x1010                	// #4112
  427ec4:	sub	sp, sp, x12
  427ec8:	stp	x29, x30, [sp]
  427ecc:	mov	x29, sp
  427ed0:	stp	x19, x20, [sp, #16]
  427ed4:	stp	x21, x22, [sp, #32]
  427ed8:	str	x25, [sp, #64]
  427edc:	mov	x20, x1
  427ee0:	mov	w25, w2
  427ee4:	cmn	w0, #0x64
  427ee8:	b.eq	427f50 <wcrtomb@plt+0x23330>  // b.none
  427eec:	mov	w19, w0
  427ef0:	ldrb	w0, [x1]
  427ef4:	cmp	w0, #0x2f
  427ef8:	b.eq	427f50 <wcrtomb@plt+0x23330>  // b.none
  427efc:	mov	x2, x1
  427f00:	mov	w1, w19
  427f04:	add	x0, sp, #0x50
  427f08:	bl	4411c8 <_obstack_memory_used@@Base+0x2c>
  427f0c:	mov	x22, x0
  427f10:	cbz	x0, 427fc0 <wcrtomb@plt+0x233a0>
  427f14:	stp	x23, x24, [sp, #48]
  427f18:	mov	w1, w25
  427f1c:	bl	404770 <acl_get_file@plt>
  427f20:	mov	x21, x0
  427f24:	bl	404ad0 <__errno_location@plt>
  427f28:	mov	x23, x0
  427f2c:	ldr	w24, [x0]
  427f30:	add	x0, sp, #0x50
  427f34:	cmp	x22, x0
  427f38:	b.eq	427f44 <wcrtomb@plt+0x23324>  // b.none
  427f3c:	mov	x0, x22
  427f40:	bl	4047c0 <free@plt>
  427f44:	cbz	x21, 427f80 <wcrtomb@plt+0x23360>
  427f48:	ldp	x23, x24, [sp, #48]
  427f4c:	b	427f60 <wcrtomb@plt+0x23340>
  427f50:	mov	w1, w25
  427f54:	mov	x0, x20
  427f58:	bl	404770 <acl_get_file@plt>
  427f5c:	mov	x21, x0
  427f60:	mov	x0, x21
  427f64:	ldp	x19, x20, [sp, #16]
  427f68:	ldp	x21, x22, [sp, #32]
  427f6c:	ldr	x25, [sp, #64]
  427f70:	ldp	x29, x30, [sp]
  427f74:	mov	x12, #0x1010                	// #4112
  427f78:	add	sp, sp, x12
  427f7c:	ret
  427f80:	cmp	w24, #0x14
  427f84:	b.eq	427fbc <wcrtomb@plt+0x2339c>  // b.none
  427f88:	sub	w0, w24, #0x1
  427f8c:	cmp	w0, #0x1
  427f90:	ccmp	w24, #0xd, #0x4, hi  // hi = pmore
  427f94:	b.eq	428014 <wcrtomb@plt+0x233f4>  // b.none
  427f98:	cmp	w24, #0x26
  427f9c:	mov	w0, #0x5f                  	// #95
  427fa0:	ccmp	w24, w0, #0x4, ne  // ne = any
  427fa4:	b.ne	427fb0 <wcrtomb@plt+0x23390>  // b.any
  427fa8:	ldp	x23, x24, [sp, #48]
  427fac:	b	427fc0 <wcrtomb@plt+0x233a0>
  427fb0:	str	w24, [x23]
  427fb4:	ldp	x23, x24, [sp, #48]
  427fb8:	b	427f60 <wcrtomb@plt+0x23340>
  427fbc:	ldp	x23, x24, [sp, #48]
  427fc0:	add	x0, sp, #0x50
  427fc4:	bl	43f50c <argp_parse@@Base+0xbdcc>
  427fc8:	cbnz	w0, 42801c <wcrtomb@plt+0x233fc>
  427fcc:	tbnz	w19, #31, 427fdc <wcrtomb@plt+0x233bc>
  427fd0:	ldr	w0, [sp, #80]
  427fd4:	cmp	w0, w19
  427fd8:	b.eq	42802c <wcrtomb@plt+0x2340c>  // b.none
  427fdc:	mov	w0, w19
  427fe0:	bl	404060 <fchdir@plt>
  427fe4:	cbnz	w0, 428048 <wcrtomb@plt+0x23428>
  427fe8:	mov	w1, w25
  427fec:	mov	x0, x20
  427ff0:	bl	404770 <acl_get_file@plt>
  427ff4:	mov	x21, x0
  427ff8:	cbz	x0, 428068 <wcrtomb@plt+0x23448>
  427ffc:	add	x0, sp, #0x50
  428000:	bl	43f564 <argp_parse@@Base+0xbe24>
  428004:	cbnz	w0, 428094 <wcrtomb@plt+0x23474>
  428008:	add	x0, sp, #0x50
  42800c:	bl	43f590 <argp_parse@@Base+0xbe50>
  428010:	b	427f60 <wcrtomb@plt+0x23340>
  428014:	ldp	x23, x24, [sp, #48]
  428018:	b	427fc0 <wcrtomb@plt+0x233a0>
  42801c:	stp	x23, x24, [sp, #48]
  428020:	bl	404ad0 <__errno_location@plt>
  428024:	ldr	w0, [x0]
  428028:	bl	439a88 <argp_parse@@Base+0x6348>
  42802c:	add	x0, sp, #0x50
  428030:	bl	43f590 <argp_parse@@Base+0xbe50>
  428034:	bl	404ad0 <__errno_location@plt>
  428038:	mov	w1, #0x9                   	// #9
  42803c:	str	w1, [x0]
  428040:	mov	x21, #0x0                   	// #0
  428044:	b	427f60 <wcrtomb@plt+0x23340>
  428048:	bl	404ad0 <__errno_location@plt>
  42804c:	mov	x19, x0
  428050:	ldr	w20, [x0]
  428054:	add	x0, sp, #0x50
  428058:	bl	43f590 <argp_parse@@Base+0xbe50>
  42805c:	str	w20, [x19]
  428060:	mov	x21, #0x0                   	// #0
  428064:	b	427f60 <wcrtomb@plt+0x23340>
  428068:	bl	404ad0 <__errno_location@plt>
  42806c:	mov	x19, x0
  428070:	ldr	w20, [x0]
  428074:	add	x0, sp, #0x50
  428078:	bl	43f564 <argp_parse@@Base+0xbe24>
  42807c:	cbnz	w0, 428094 <wcrtomb@plt+0x23474>
  428080:	add	x0, sp, #0x50
  428084:	bl	43f590 <argp_parse@@Base+0xbe50>
  428088:	cbz	w20, 427f60 <wcrtomb@plt+0x23340>
  42808c:	str	w20, [x19]
  428090:	b	427f60 <wcrtomb@plt+0x23340>
  428094:	stp	x23, x24, [sp, #48]
  428098:	bl	404ad0 <__errno_location@plt>
  42809c:	ldr	w0, [x0]
  4280a0:	bl	439ac8 <argp_parse@@Base+0x6388>
  4280a4:	stp	x29, x30, [sp, #-32]!
  4280a8:	mov	x29, sp
  4280ac:	stp	x19, x20, [sp, #16]
  4280b0:	mov	x19, x0
  4280b4:	mov	x20, x1
  4280b8:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  4280bc:	add	x1, x1, #0x130
  4280c0:	bl	404a90 <strcspn@plt>
  4280c4:	add	x4, x19, x0
  4280c8:	ldrb	w3, [x19, x0]
  4280cc:	cbz	w3, 428120 <wcrtomb@plt+0x23500>
  4280d0:	mov	x2, x4
  4280d4:	b	4280e4 <wcrtomb@plt+0x234c4>
  4280d8:	add	x2, x2, #0x1
  4280dc:	ldrb	w3, [x2]
  4280e0:	cbz	w3, 428120 <wcrtomb@plt+0x23500>
  4280e4:	cmp	w3, #0x9
  4280e8:	b.eq	4280d8 <wcrtomb@plt+0x234b8>  // b.none
  4280ec:	cmp	w3, #0x23
  4280f0:	b.eq	428100 <wcrtomb@plt+0x234e0>  // b.none
  4280f4:	add	x2, x2, #0x1
  4280f8:	strb	w3, [x4], #1
  4280fc:	b	4280dc <wcrtomb@plt+0x234bc>
  428100:	ldrb	w0, [x2]
  428104:	cmp	w0, #0xa
  428108:	b.eq	428118 <wcrtomb@plt+0x234f8>  // b.none
  42810c:	ldrb	w3, [x2, #1]!
  428110:	cmp	w3, #0xa
  428114:	b.ne	42810c <wcrtomb@plt+0x234ec>  // b.any
  428118:	ldrb	w3, [x2]
  42811c:	b	4280e4 <wcrtomb@plt+0x234c4>
  428120:	sub	x19, x4, x19
  428124:	str	x19, [x20]
  428128:	strb	wzr, [x4]
  42812c:	ldp	x19, x20, [sp, #16]
  428130:	ldp	x29, x30, [sp], #32
  428134:	ret
  428138:	sub	sp, sp, #0x1, lsl #12
  42813c:	stp	x29, x30, [sp]
  428140:	mov	x29, sp
  428144:	stp	x19, x20, [sp, #16]
  428148:	stp	x21, x22, [sp, #32]
  42814c:	mov	x20, x1
  428150:	cmn	w0, #0x64
  428154:	b.eq	4281e4 <wcrtomb@plt+0x235c4>  // b.none
  428158:	mov	w19, w0
  42815c:	ldrb	w0, [x1]
  428160:	cmp	w0, #0x2f
  428164:	b.eq	4281e4 <wcrtomb@plt+0x235c4>  // b.none
  428168:	mov	x2, x1
  42816c:	mov	w1, w19
  428170:	add	x0, sp, #0x40
  428174:	bl	4411c8 <_obstack_memory_used@@Base+0x2c>
  428178:	mov	x22, x0
  42817c:	cbz	x0, 428218 <wcrtomb@plt+0x235f8>
  428180:	stp	x23, x24, [sp, #48]
  428184:	bl	404280 <acl_delete_def_file@plt>
  428188:	mov	w21, w0
  42818c:	bl	404ad0 <__errno_location@plt>
  428190:	mov	x23, x0
  428194:	ldr	w24, [x0]
  428198:	add	x0, sp, #0x40
  42819c:	cmp	x22, x0
  4281a0:	b.eq	4281ac <wcrtomb@plt+0x2358c>  // b.none
  4281a4:	mov	x0, x22
  4281a8:	bl	4047c0 <free@plt>
  4281ac:	cmn	w21, #0x1
  4281b0:	b.ne	4282fc <wcrtomb@plt+0x236dc>  // b.any
  4281b4:	cmp	w24, #0x14
  4281b8:	b.eq	428214 <wcrtomb@plt+0x235f4>  // b.none
  4281bc:	sub	w0, w24, #0x1
  4281c0:	cmp	w0, #0x1
  4281c4:	ccmp	w24, #0xd, #0x4, hi  // hi = pmore
  4281c8:	b.eq	42826c <wcrtomb@plt+0x2364c>  // b.none
  4281cc:	cmp	w24, #0x26
  4281d0:	mov	w0, #0x5f                  	// #95
  4281d4:	ccmp	w24, w0, #0x4, ne  // ne = any
  4281d8:	b.ne	428208 <wcrtomb@plt+0x235e8>  // b.any
  4281dc:	ldp	x23, x24, [sp, #48]
  4281e0:	b	428218 <wcrtomb@plt+0x235f8>
  4281e4:	mov	x0, x20
  4281e8:	bl	404280 <acl_delete_def_file@plt>
  4281ec:	mov	w21, w0
  4281f0:	mov	w0, w21
  4281f4:	ldp	x19, x20, [sp, #16]
  4281f8:	ldp	x21, x22, [sp, #32]
  4281fc:	ldp	x29, x30, [sp]
  428200:	add	sp, sp, #0x1, lsl #12
  428204:	ret
  428208:	str	w24, [x23]
  42820c:	ldp	x23, x24, [sp, #48]
  428210:	b	4281f0 <wcrtomb@plt+0x235d0>
  428214:	ldp	x23, x24, [sp, #48]
  428218:	add	x0, sp, #0x40
  42821c:	bl	43f50c <argp_parse@@Base+0xbdcc>
  428220:	cbnz	w0, 428274 <wcrtomb@plt+0x23654>
  428224:	tbnz	w19, #31, 428234 <wcrtomb@plt+0x23614>
  428228:	ldr	w0, [sp, #64]
  42822c:	cmp	w0, w19
  428230:	b.eq	428284 <wcrtomb@plt+0x23664>  // b.none
  428234:	mov	w0, w19
  428238:	bl	404060 <fchdir@plt>
  42823c:	cbnz	w0, 4282a0 <wcrtomb@plt+0x23680>
  428240:	mov	x0, x20
  428244:	bl	404280 <acl_delete_def_file@plt>
  428248:	mov	w21, w0
  42824c:	cmn	w0, #0x1
  428250:	b.eq	4282c0 <wcrtomb@plt+0x236a0>  // b.none
  428254:	add	x0, sp, #0x40
  428258:	bl	43f564 <argp_parse@@Base+0xbe24>
  42825c:	cbnz	w0, 4282ec <wcrtomb@plt+0x236cc>
  428260:	add	x0, sp, #0x40
  428264:	bl	43f590 <argp_parse@@Base+0xbe50>
  428268:	b	4281f0 <wcrtomb@plt+0x235d0>
  42826c:	ldp	x23, x24, [sp, #48]
  428270:	b	428218 <wcrtomb@plt+0x235f8>
  428274:	stp	x23, x24, [sp, #48]
  428278:	bl	404ad0 <__errno_location@plt>
  42827c:	ldr	w0, [x0]
  428280:	bl	439a88 <argp_parse@@Base+0x6348>
  428284:	add	x0, sp, #0x40
  428288:	bl	43f590 <argp_parse@@Base+0xbe50>
  42828c:	bl	404ad0 <__errno_location@plt>
  428290:	mov	w1, #0x9                   	// #9
  428294:	str	w1, [x0]
  428298:	mov	w21, #0xffffffff            	// #-1
  42829c:	b	4281f0 <wcrtomb@plt+0x235d0>
  4282a0:	bl	404ad0 <__errno_location@plt>
  4282a4:	mov	x19, x0
  4282a8:	ldr	w20, [x0]
  4282ac:	add	x0, sp, #0x40
  4282b0:	bl	43f590 <argp_parse@@Base+0xbe50>
  4282b4:	str	w20, [x19]
  4282b8:	mov	w21, #0xffffffff            	// #-1
  4282bc:	b	4281f0 <wcrtomb@plt+0x235d0>
  4282c0:	bl	404ad0 <__errno_location@plt>
  4282c4:	mov	x19, x0
  4282c8:	ldr	w20, [x0]
  4282cc:	add	x0, sp, #0x40
  4282d0:	bl	43f564 <argp_parse@@Base+0xbe24>
  4282d4:	cbnz	w0, 4282ec <wcrtomb@plt+0x236cc>
  4282d8:	add	x0, sp, #0x40
  4282dc:	bl	43f590 <argp_parse@@Base+0xbe50>
  4282e0:	cbz	w20, 4281f0 <wcrtomb@plt+0x235d0>
  4282e4:	str	w20, [x19]
  4282e8:	b	4281f0 <wcrtomb@plt+0x235d0>
  4282ec:	stp	x23, x24, [sp, #48]
  4282f0:	bl	404ad0 <__errno_location@plt>
  4282f4:	ldr	w0, [x0]
  4282f8:	bl	439ac8 <argp_parse@@Base+0x6388>
  4282fc:	ldp	x23, x24, [sp, #48]
  428300:	b	4281f0 <wcrtomb@plt+0x235d0>
  428304:	mov	x12, #0x1010                	// #4112
  428308:	sub	sp, sp, x12
  42830c:	stp	x29, x30, [sp]
  428310:	mov	x29, sp
  428314:	stp	x19, x20, [sp, #16]
  428318:	stp	x21, x22, [sp, #32]
  42831c:	stp	x23, x24, [sp, #48]
  428320:	mov	x20, x1
  428324:	mov	w23, w2
  428328:	mov	x24, x3
  42832c:	cmn	w0, #0x64
  428330:	b.eq	428420 <wcrtomb@plt+0x23800>  // b.none
  428334:	mov	w19, w0
  428338:	ldrb	w0, [x1]
  42833c:	cmp	w0, #0x2f
  428340:	b.eq	428420 <wcrtomb@plt+0x23800>  // b.none
  428344:	stp	x25, x26, [sp, #64]
  428348:	mov	x2, x1
  42834c:	mov	w1, w19
  428350:	add	x0, sp, #0x50
  428354:	bl	4411c8 <_obstack_memory_used@@Base+0x2c>
  428358:	mov	x25, x0
  42835c:	cbz	x0, 4283c0 <wcrtomb@plt+0x237a0>
  428360:	mov	x2, x24
  428364:	mov	w1, w23
  428368:	bl	404560 <acl_set_file@plt>
  42836c:	mov	w21, w0
  428370:	bl	404ad0 <__errno_location@plt>
  428374:	mov	x22, x0
  428378:	ldr	w26, [x0]
  42837c:	add	x0, sp, #0x50
  428380:	cmp	x25, x0
  428384:	b.eq	428390 <wcrtomb@plt+0x23770>  // b.none
  428388:	mov	x0, x25
  42838c:	bl	4047c0 <free@plt>
  428390:	cmn	w21, #0x1
  428394:	b.ne	4284ec <wcrtomb@plt+0x238cc>  // b.any
  428398:	cmp	w26, #0x14
  42839c:	b.eq	4283c0 <wcrtomb@plt+0x237a0>  // b.none
  4283a0:	sub	w0, w26, #0x1
  4283a4:	cmp	w0, #0x1
  4283a8:	ccmp	w26, #0xd, #0x4, hi  // hi = pmore
  4283ac:	b.eq	4283c0 <wcrtomb@plt+0x237a0>  // b.none
  4283b0:	cmp	w26, #0x26
  4283b4:	mov	w0, #0x5f                  	// #95
  4283b8:	ccmp	w26, w0, #0x4, ne  // ne = any
  4283bc:	b.ne	428454 <wcrtomb@plt+0x23834>  // b.any
  4283c0:	add	x0, sp, #0x50
  4283c4:	bl	43f50c <argp_parse@@Base+0xbdcc>
  4283c8:	cbnz	w0, 428460 <wcrtomb@plt+0x23840>
  4283cc:	tbnz	w19, #31, 4283dc <wcrtomb@plt+0x237bc>
  4283d0:	ldr	w0, [sp, #80]
  4283d4:	cmp	w0, w19
  4283d8:	b.eq	42846c <wcrtomb@plt+0x2384c>  // b.none
  4283dc:	mov	w0, w19
  4283e0:	bl	404060 <fchdir@plt>
  4283e4:	cbnz	w0, 42848c <wcrtomb@plt+0x2386c>
  4283e8:	mov	x2, x24
  4283ec:	mov	w1, w23
  4283f0:	mov	x0, x20
  4283f4:	bl	404560 <acl_set_file@plt>
  4283f8:	mov	w21, w0
  4283fc:	cmn	w0, #0x1
  428400:	b.eq	4284b0 <wcrtomb@plt+0x23890>  // b.none
  428404:	add	x0, sp, #0x50
  428408:	bl	43f564 <argp_parse@@Base+0xbe24>
  42840c:	cbnz	w0, 4284e0 <wcrtomb@plt+0x238c0>
  428410:	add	x0, sp, #0x50
  428414:	bl	43f590 <argp_parse@@Base+0xbe50>
  428418:	ldp	x25, x26, [sp, #64]
  42841c:	b	428434 <wcrtomb@plt+0x23814>
  428420:	mov	x2, x24
  428424:	mov	w1, w23
  428428:	mov	x0, x20
  42842c:	bl	404560 <acl_set_file@plt>
  428430:	mov	w21, w0
  428434:	mov	w0, w21
  428438:	ldp	x19, x20, [sp, #16]
  42843c:	ldp	x21, x22, [sp, #32]
  428440:	ldp	x23, x24, [sp, #48]
  428444:	ldp	x29, x30, [sp]
  428448:	mov	x12, #0x1010                	// #4112
  42844c:	add	sp, sp, x12
  428450:	ret
  428454:	str	w26, [x22]
  428458:	ldp	x25, x26, [sp, #64]
  42845c:	b	428434 <wcrtomb@plt+0x23814>
  428460:	bl	404ad0 <__errno_location@plt>
  428464:	ldr	w0, [x0]
  428468:	bl	439a88 <argp_parse@@Base+0x6348>
  42846c:	add	x0, sp, #0x50
  428470:	bl	43f590 <argp_parse@@Base+0xbe50>
  428474:	bl	404ad0 <__errno_location@plt>
  428478:	mov	w1, #0x9                   	// #9
  42847c:	str	w1, [x0]
  428480:	mov	w21, #0xffffffff            	// #-1
  428484:	ldp	x25, x26, [sp, #64]
  428488:	b	428434 <wcrtomb@plt+0x23814>
  42848c:	bl	404ad0 <__errno_location@plt>
  428490:	mov	x19, x0
  428494:	ldr	w20, [x0]
  428498:	add	x0, sp, #0x50
  42849c:	bl	43f590 <argp_parse@@Base+0xbe50>
  4284a0:	str	w20, [x19]
  4284a4:	mov	w21, #0xffffffff            	// #-1
  4284a8:	ldp	x25, x26, [sp, #64]
  4284ac:	b	428434 <wcrtomb@plt+0x23814>
  4284b0:	bl	404ad0 <__errno_location@plt>
  4284b4:	mov	x19, x0
  4284b8:	ldr	w20, [x0]
  4284bc:	add	x0, sp, #0x50
  4284c0:	bl	43f564 <argp_parse@@Base+0xbe24>
  4284c4:	cbnz	w0, 4284e0 <wcrtomb@plt+0x238c0>
  4284c8:	add	x0, sp, #0x50
  4284cc:	bl	43f590 <argp_parse@@Base+0xbe50>
  4284d0:	cbz	w20, 4284f4 <wcrtomb@plt+0x238d4>
  4284d4:	str	w20, [x19]
  4284d8:	ldp	x25, x26, [sp, #64]
  4284dc:	b	428434 <wcrtomb@plt+0x23814>
  4284e0:	bl	404ad0 <__errno_location@plt>
  4284e4:	ldr	w0, [x0]
  4284e8:	bl	439ac8 <argp_parse@@Base+0x6388>
  4284ec:	ldp	x25, x26, [sp, #64]
  4284f0:	b	428434 <wcrtomb@plt+0x23814>
  4284f4:	ldp	x25, x26, [sp, #64]
  4284f8:	b	428434 <wcrtomb@plt+0x23814>
  4284fc:	stp	x29, x30, [sp, #-128]!
  428500:	mov	x29, sp
  428504:	stp	x19, x20, [sp, #16]
  428508:	stp	x25, x26, [sp, #64]
  42850c:	mov	x25, x1
  428510:	mov	w26, w2
  428514:	cbz	x3, 4285b0 <wcrtomb@plt+0x23990>
  428518:	stp	x21, x22, [sp, #32]
  42851c:	stp	x23, x24, [sp, #48]
  428520:	str	x27, [sp, #80]
  428524:	mov	x22, x3
  428528:	mov	x21, x3
  42852c:	mov	x20, x3
  428530:	adrp	x27, 45a000 <_obstack_memory_used@@Base+0x18e64>
  428534:	add	x27, x27, #0x140
  428538:	adrp	x24, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42853c:	add	x24, x24, #0x138
  428540:	b	42872c <wcrtomb@plt+0x23b0c>
  428544:	add	x20, x19, #0x1
  428548:	strb	w0, [x21], #1
  42854c:	b	42872c <wcrtomb@plt+0x23b0c>
  428550:	cmp	x20, x21
  428554:	b.eq	42855c <wcrtomb@plt+0x2393c>  // b.none
  428558:	strb	wzr, [x21]
  42855c:	mov	x0, x22
  428560:	bl	4049f0 <acl_from_text@plt>
  428564:	mov	x19, x0
  428568:	ldp	x21, x22, [sp, #32]
  42856c:	ldp	x23, x24, [sp, #48]
  428570:	ldr	x27, [sp, #80]
  428574:	cbz	x19, 4286b0 <wcrtomb@plt+0x23a90>
  428578:	mov	x3, x19
  42857c:	mov	w2, w26
  428580:	mov	x1, x25
  428584:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  428588:	ldr	w0, [x0, #2184]
  42858c:	bl	428304 <wcrtomb@plt+0x236e4>
  428590:	cmn	w0, #0x1
  428594:	b.eq	4286c4 <wcrtomb@plt+0x23aa4>  // b.none
  428598:	mov	x0, x19
  42859c:	bl	404bf0 <acl_free@plt>
  4285a0:	ldp	x19, x20, [sp, #16]
  4285a4:	ldp	x25, x26, [sp, #64]
  4285a8:	ldp	x29, x30, [sp], #128
  4285ac:	ret
  4285b0:	and	w5, w5, #0xff
  4285b4:	cbnz	w5, 428650 <wcrtomb@plt+0x23a30>
  4285b8:	ldr	w0, [x0, #104]
  4285bc:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  4285c0:	add	x1, x1, #0x1d8
  4285c4:	ldp	x2, x3, [x1]
  4285c8:	stp	x2, x3, [sp, #96]
  4285cc:	ldp	x2, x3, [x1, #16]
  4285d0:	stp	x2, x3, [sp, #112]
  4285d4:	tbz	w0, #8, 4285e0 <wcrtomb@plt+0x239c0>
  4285d8:	mov	w1, #0x72                  	// #114
  4285dc:	strb	w1, [sp, #102]
  4285e0:	tbz	w0, #7, 4285ec <wcrtomb@plt+0x239cc>
  4285e4:	mov	w1, #0x77                  	// #119
  4285e8:	strb	w1, [sp, #103]
  4285ec:	tbz	w0, #6, 4285f8 <wcrtomb@plt+0x239d8>
  4285f0:	mov	w1, #0x78                  	// #120
  4285f4:	strb	w1, [sp, #104]
  4285f8:	tbz	w0, #5, 428604 <wcrtomb@plt+0x239e4>
  4285fc:	mov	w1, #0x72                  	// #114
  428600:	strb	w1, [sp, #113]
  428604:	tbz	w0, #4, 428610 <wcrtomb@plt+0x239f0>
  428608:	mov	w1, #0x77                  	// #119
  42860c:	strb	w1, [sp, #114]
  428610:	tbz	w0, #3, 42861c <wcrtomb@plt+0x239fc>
  428614:	mov	w1, #0x78                  	// #120
  428618:	strb	w1, [sp, #115]
  42861c:	tbz	w0, #2, 428628 <wcrtomb@plt+0x23a08>
  428620:	mov	w1, #0x72                  	// #114
  428624:	strb	w1, [sp, #124]
  428628:	tbz	w0, #1, 428634 <wcrtomb@plt+0x23a14>
  42862c:	mov	w1, #0x77                  	// #119
  428630:	strb	w1, [sp, #125]
  428634:	tbz	w0, #0, 428640 <wcrtomb@plt+0x23a20>
  428638:	mov	w0, #0x78                  	// #120
  42863c:	strb	w0, [sp, #126]
  428640:	add	x0, sp, #0x60
  428644:	bl	4049f0 <acl_from_text@plt>
  428648:	mov	x19, x0
  42864c:	b	428574 <wcrtomb@plt+0x23954>
  428650:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  428654:	ldr	w0, [x0, #2184]
  428658:	bl	428138 <wcrtomb@plt+0x23518>
  42865c:	cbz	w0, 4285a0 <wcrtomb@plt+0x23980>
  428660:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  428664:	ldr	w0, [x0, #408]
  428668:	tbz	w0, #21, 4285a0 <wcrtomb@plt+0x23980>
  42866c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  428670:	ldr	x0, [x0, #944]
  428674:	cbz	x0, 42867c <wcrtomb@plt+0x23a5c>
  428678:	blr	x0
  42867c:	bl	404ad0 <__errno_location@plt>
  428680:	ldr	w19, [x0]
  428684:	mov	w2, #0x5                   	// #5
  428688:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42868c:	add	x1, x1, #0x148
  428690:	mov	x0, #0x0                   	// #0
  428694:	bl	4049c0 <dcgettext@plt>
  428698:	mov	x3, x25
  42869c:	mov	x2, x0
  4286a0:	mov	w1, w19
  4286a4:	mov	w0, #0x0                   	// #0
  4286a8:	bl	404050 <error@plt>
  4286ac:	b	4285a0 <wcrtomb@plt+0x23980>
  4286b0:	mov	x1, x25
  4286b4:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  4286b8:	add	x0, x0, #0x190
  4286bc:	bl	4298b4 <wcrtomb@plt+0x24c94>
  4286c0:	b	4285a0 <wcrtomb@plt+0x23980>
  4286c4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4286c8:	ldr	w0, [x0, #408]
  4286cc:	tbz	w0, #21, 428598 <wcrtomb@plt+0x23978>
  4286d0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4286d4:	ldr	x0, [x0, #944]
  4286d8:	cbz	x0, 4286e0 <wcrtomb@plt+0x23ac0>
  4286dc:	blr	x0
  4286e0:	bl	404ad0 <__errno_location@plt>
  4286e4:	ldr	w20, [x0]
  4286e8:	mov	w2, #0x5                   	// #5
  4286ec:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  4286f0:	add	x1, x1, #0x1a0
  4286f4:	mov	x0, #0x0                   	// #0
  4286f8:	bl	4049c0 <dcgettext@plt>
  4286fc:	mov	x3, x25
  428700:	mov	x2, x0
  428704:	mov	w1, w20
  428708:	mov	w0, #0x0                   	// #0
  42870c:	bl	404050 <error@plt>
  428710:	b	428598 <wcrtomb@plt+0x23978>
  428714:	add	x21, x21, x23
  428718:	ldrb	w0, [x19]
  42871c:	cmp	w0, #0x2c
  428720:	ccmp	w0, #0xa, #0x4, ne  // ne = any
  428724:	mov	x20, x19
  428728:	b.eq	428544 <wcrtomb@plt+0x23924>  // b.none
  42872c:	ldrb	w0, [x20]
  428730:	cbz	w0, 428550 <wcrtomb@plt+0x23930>
  428734:	mov	x1, x24
  428738:	mov	x0, x20
  42873c:	bl	404a90 <strcspn@plt>
  428740:	add	x19, x20, x0
  428744:	ldrb	w0, [x20, x0]
  428748:	cmp	w0, #0x3a
  42874c:	b.ne	428794 <wcrtomb@plt+0x23b74>  // b.any
  428750:	add	x23, x19, #0x1
  428754:	mov	x1, x24
  428758:	mov	x0, x23
  42875c:	bl	404a90 <strcspn@plt>
  428760:	add	x19, x23, x0
  428764:	ldrb	w0, [x23, x0]
  428768:	cmp	w0, #0x3a
  42876c:	b.ne	428794 <wcrtomb@plt+0x23b74>  // b.any
  428770:	add	x19, x19, #0x1
  428774:	mov	x1, x24
  428778:	mov	x0, x19
  42877c:	bl	404a90 <strcspn@plt>
  428780:	add	x19, x19, x0
  428784:	sub	x23, x19, x20
  428788:	cmp	x20, x21
  42878c:	b.ne	4287a0 <wcrtomb@plt+0x23b80>  // b.any
  428790:	b	4287b0 <wcrtomb@plt+0x23b90>
  428794:	sub	x23, x19, x20
  428798:	cmp	x20, x21
  42879c:	b.eq	428714 <wcrtomb@plt+0x23af4>  // b.none
  4287a0:	mov	x2, x23
  4287a4:	mov	x1, x20
  4287a8:	mov	x0, x21
  4287ac:	bl	403f80 <memmove@plt>
  4287b0:	add	x21, x21, x23
  4287b4:	ldrb	w0, [x19]
  4287b8:	cmp	w0, #0x3a
  4287bc:	b.ne	428718 <wcrtomb@plt+0x23af8>  // b.any
  4287c0:	mov	x1, x27
  4287c4:	mov	x0, x19
  4287c8:	bl	404a90 <strcspn@plt>
  4287cc:	add	x19, x19, x0
  4287d0:	b	428718 <wcrtomb@plt+0x23af8>
  4287d4:	stp	x29, x30, [sp, #-48]!
  4287d8:	mov	x29, sp
  4287dc:	str	x21, [sp, #32]
  4287e0:	mov	x21, x0
  4287e4:	ldr	x0, [x1, #8]
  4287e8:	cbz	x0, 428834 <wcrtomb@plt+0x23c14>
  4287ec:	stp	x19, x20, [sp, #16]
  4287f0:	mov	x20, x1
  4287f4:	ldr	x0, [x1, #16]
  4287f8:	cbz	x0, 428844 <wcrtomb@plt+0x23c24>
  4287fc:	mov	x19, #0x0                   	// #0
  428800:	ldr	x3, [x20]
  428804:	mov	w2, #0x0                   	// #0
  428808:	mov	x1, x21
  42880c:	ldr	x0, [x3, x19, lsl #3]
  428810:	bl	4048c0 <fnmatch@plt>
  428814:	cbz	w0, 428850 <wcrtomb@plt+0x23c30>
  428818:	add	x19, x19, #0x1
  42881c:	ldr	x1, [x20, #16]
  428820:	cmp	x1, x19
  428824:	b.hi	428800 <wcrtomb@plt+0x23be0>  // b.pmore
  428828:	mov	w0, #0x0                   	// #0
  42882c:	ldp	x19, x20, [sp, #16]
  428830:	b	428838 <wcrtomb@plt+0x23c18>
  428834:	mov	w0, #0x0                   	// #0
  428838:	ldr	x21, [sp, #32]
  42883c:	ldp	x29, x30, [sp], #48
  428840:	ret
  428844:	mov	w0, #0x0                   	// #0
  428848:	ldp	x19, x20, [sp, #16]
  42884c:	b	428838 <wcrtomb@plt+0x23c18>
  428850:	mov	w0, #0x1                   	// #1
  428854:	ldp	x19, x20, [sp, #16]
  428858:	b	428838 <wcrtomb@plt+0x23c18>
  42885c:	stp	x29, x30, [sp, #-32]!
  428860:	mov	x29, sp
  428864:	str	x19, [sp, #16]
  428868:	mov	x19, x0
  42886c:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x3ee64>
  428870:	ldr	x2, [x2, #3328]
  428874:	cbnz	x2, 4288ac <wcrtomb@plt+0x23c8c>
  428878:	and	w1, w1, #0xff
  42887c:	cbnz	w1, 4288c0 <wcrtomb@plt+0x23ca0>
  428880:	mov	x2, #0x5                   	// #5
  428884:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  428888:	add	x1, x1, #0x1f8
  42888c:	bl	4043c0 <strncmp@plt>
  428890:	cmp	w0, #0x0
  428894:	cset	w1, eq  // eq = none
  428898:	mov	w0, #0x1                   	// #1
  42889c:	cbnz	w1, 4288c0 <wcrtomb@plt+0x23ca0>
  4288a0:	ldr	x19, [sp, #16]
  4288a4:	ldp	x29, x30, [sp], #32
  4288a8:	ret
  4288ac:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4288b0:	add	x1, x1, #0xcf8
  4288b4:	bl	4287d4 <wcrtomb@plt+0x23bb4>
  4288b8:	and	w1, w0, #0xff
  4288bc:	b	428898 <wcrtomb@plt+0x23c78>
  4288c0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4288c4:	ldr	x1, [x0, #3352]
  4288c8:	mov	w0, #0x0                   	// #0
  4288cc:	cbz	x1, 4288a0 <wcrtomb@plt+0x23c80>
  4288d0:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4288d4:	add	x1, x1, #0xcf8
  4288d8:	add	x1, x1, #0x18
  4288dc:	mov	x0, x19
  4288e0:	bl	4287d4 <wcrtomb@plt+0x23bb4>
  4288e4:	and	w0, w0, #0xff
  4288e8:	b	4288a0 <wcrtomb@plt+0x23c80>
  4288ec:	cmp	x2, #0x0
  4288f0:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  4288f4:	b.ne	4288fc <wcrtomb@plt+0x23cdc>  // b.any
  4288f8:	ret
  4288fc:	stp	x29, x30, [sp, #-192]!
  428900:	mov	x29, sp
  428904:	stp	x19, x20, [sp, #16]
  428908:	stp	x21, x22, [sp, #32]
  42890c:	stp	x23, x24, [sp, #48]
  428910:	stp	x25, x26, [sp, #64]
  428914:	stp	x27, x28, [sp, #80]
  428918:	mov	x26, x0
  42891c:	and	w28, w1, #0xff
  428920:	mov	x24, x2
  428924:	mov	x25, x3
  428928:	bl	403ff0 <strlen@plt>
  42892c:	mov	x22, x0
  428930:	adrp	x4, 404000 <fputs@plt>
  428934:	add	x4, x4, #0x7c0
  428938:	adrp	x3, 43f000 <argp_parse@@Base+0xb8c0>
  42893c:	add	x3, x3, #0xef4
  428940:	mov	x2, #0x0                   	// #0
  428944:	mov	x1, #0x0                   	// #0
  428948:	add	x0, sp, #0x68
  42894c:	bl	440f78 <_obstack_begin@@Base>
  428950:	mov	x21, x24
  428954:	mov	w23, #0x0                   	// #0
  428958:	adrp	x27, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42895c:	add	x27, x27, #0x200
  428960:	sxtw	x22, w22
  428964:	b	4289f0 <wcrtomb@plt+0x23dd0>
  428968:	ldr	x0, [sp, #128]
  42896c:	add	x1, x0, #0x1
  428970:	str	x1, [sp, #128]
  428974:	strb	w28, [x0]
  428978:	ldr	x0, [sp, #136]
  42897c:	ldr	x1, [sp, #128]
  428980:	sub	x0, x0, x1
  428984:	cmp	x22, x0
  428988:	b.hi	428a2c <wcrtomb@plt+0x23e0c>  // b.pmore
  42898c:	mov	x2, x22
  428990:	mov	x1, x26
  428994:	ldr	x0, [sp, #128]
  428998:	bl	403f70 <memcpy@plt>
  42899c:	ldr	x0, [sp, #128]
  4289a0:	add	x0, x0, x22
  4289a4:	str	x0, [sp, #128]
  4289a8:	sxtw	x20, w19
  4289ac:	ldr	x1, [sp, #136]
  4289b0:	sub	x0, x1, x0
  4289b4:	cmp	x0, w19, sxtw
  4289b8:	b.cc	428a3c <wcrtomb@plt+0x23e1c>  // b.lo, b.ul, b.last
  4289bc:	mov	x2, x20
  4289c0:	mov	x1, x21
  4289c4:	ldr	x0, [sp, #128]
  4289c8:	bl	403f70 <memcpy@plt>
  4289cc:	ldr	x0, [sp, #128]
  4289d0:	add	x0, x0, x20
  4289d4:	str	x0, [sp, #128]
  4289d8:	add	w19, w19, #0x1
  4289dc:	add	w23, w23, w19
  4289e0:	add	x20, x20, #0x1
  4289e4:	add	x21, x21, x20
  4289e8:	cmp	x25, w23, sxtw
  4289ec:	b.cc	428a4c <wcrtomb@plt+0x23e2c>  // b.lo, b.ul, b.last
  4289f0:	mov	x1, x27
  4289f4:	mov	x0, x21
  4289f8:	bl	404a90 <strcspn@plt>
  4289fc:	mov	x19, x0
  428a00:	cbz	w0, 428a4c <wcrtomb@plt+0x23e2c>
  428a04:	cmp	x24, x21
  428a08:	b.eq	428978 <wcrtomb@plt+0x23d58>  // b.none
  428a0c:	ldr	x1, [sp, #136]
  428a10:	ldr	x0, [sp, #128]
  428a14:	cmp	x1, x0
  428a18:	b.ne	428968 <wcrtomb@plt+0x23d48>  // b.any
  428a1c:	mov	x1, #0x1                   	// #1
  428a20:	add	x0, sp, #0x68
  428a24:	bl	440fcc <_obstack_newchunk@@Base>
  428a28:	b	428968 <wcrtomb@plt+0x23d48>
  428a2c:	mov	x1, x22
  428a30:	add	x0, sp, #0x68
  428a34:	bl	440fcc <_obstack_newchunk@@Base>
  428a38:	b	42898c <wcrtomb@plt+0x23d6c>
  428a3c:	mov	x1, x20
  428a40:	add	x0, sp, #0x68
  428a44:	bl	440fcc <_obstack_newchunk@@Base>
  428a48:	b	4289bc <wcrtomb@plt+0x23d9c>
  428a4c:	ldr	x1, [sp, #136]
  428a50:	ldr	x0, [sp, #128]
  428a54:	cmp	x1, x0
  428a58:	b.eq	428adc <wcrtomb@plt+0x23ebc>  // b.none
  428a5c:	ldr	x0, [sp, #128]
  428a60:	add	x1, x0, #0x1
  428a64:	str	x1, [sp, #128]
  428a68:	strb	wzr, [x0]
  428a6c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  428a70:	ldr	x1, [x0, #3864]
  428a74:	ldr	x0, [sp, #120]
  428a78:	ldr	x3, [sp, #128]
  428a7c:	cmp	x3, x0
  428a80:	b.eq	428aec <wcrtomb@plt+0x23ecc>  // b.none
  428a84:	ldr	x2, [sp, #152]
  428a88:	add	x3, x3, x2
  428a8c:	bic	x2, x3, x2
  428a90:	ldr	x3, [sp, #112]
  428a94:	ldr	x4, [sp, #136]
  428a98:	sub	x5, x2, x3
  428a9c:	sub	x3, x4, x3
  428aa0:	cmp	x5, x3
  428aa4:	csel	x2, x2, x4, ls  // ls = plast
  428aa8:	str	x2, [sp, #128]
  428aac:	str	x2, [sp, #120]
  428ab0:	bl	404000 <fputs@plt>
  428ab4:	mov	x1, #0x0                   	// #0
  428ab8:	add	x0, sp, #0x68
  428abc:	bl	44111c <_obstack_free@@Base>
  428ac0:	ldp	x19, x20, [sp, #16]
  428ac4:	ldp	x21, x22, [sp, #32]
  428ac8:	ldp	x23, x24, [sp, #48]
  428acc:	ldp	x25, x26, [sp, #64]
  428ad0:	ldp	x27, x28, [sp, #80]
  428ad4:	ldp	x29, x30, [sp], #192
  428ad8:	ret
  428adc:	mov	x1, #0x1                   	// #1
  428ae0:	add	x0, sp, #0x68
  428ae4:	bl	440fcc <_obstack_newchunk@@Base>
  428ae8:	b	428a5c <wcrtomb@plt+0x23e3c>
  428aec:	ldrb	w2, [sp, #184]
  428af0:	orr	w2, w2, #0x2
  428af4:	strb	w2, [sp, #184]
  428af8:	b	428a84 <wcrtomb@plt+0x23e64>
  428afc:	adrp	x3, 481000 <argp_program_version_hook@@Base+0x298>
  428b00:	ldr	w3, [x3, #832]
  428b04:	cmp	w3, #0x0
  428b08:	b.gt	428b10 <wcrtomb@plt+0x23ef0>
  428b0c:	ret
  428b10:	stp	x29, x30, [sp, #-64]!
  428b14:	mov	x29, sp
  428b18:	stp	x19, x20, [sp, #16]
  428b1c:	stp	x21, x22, [sp, #32]
  428b20:	mov	w22, w0
  428b24:	mov	x21, x1
  428b28:	mov	x20, x2
  428b2c:	mov	w19, w4
  428b30:	add	x2, x2, #0x58
  428b34:	bl	427cd4 <wcrtomb@plt+0x230b4>
  428b38:	cbz	w0, 428b9c <wcrtomb@plt+0x23f7c>
  428b3c:	cmn	w0, #0x1
  428b40:	b.eq	428bac <wcrtomb@plt+0x23f8c>  // b.none
  428b44:	stp	x23, x24, [sp, #48]
  428b48:	mov	w2, #0x8000                	// #32768
  428b4c:	mov	x1, x21
  428b50:	mov	w0, w22
  428b54:	bl	427ec0 <wcrtomb@plt+0x232a0>
  428b58:	mov	x23, x0
  428b5c:	cbz	x0, 428bc0 <wcrtomb@plt+0x23fa0>
  428b60:	mov	x1, #0x0                   	// #0
  428b64:	bl	4045f0 <acl_to_text@plt>
  428b68:	mov	x24, x0
  428b6c:	mov	x0, x23
  428b70:	bl	404bf0 <acl_free@plt>
  428b74:	cbz	x24, 428be4 <wcrtomb@plt+0x23fc4>
  428b78:	mov	x0, x24
  428b7c:	bl	440154 <argp_parse@@Base+0xca14>
  428b80:	str	x0, [x20, #56]
  428b84:	add	x1, x20, #0x40
  428b88:	bl	4280a4 <wcrtomb@plt+0x23484>
  428b8c:	mov	x0, x24
  428b90:	bl	404bf0 <acl_free@plt>
  428b94:	cbz	w19, 428bf8 <wcrtomb@plt+0x23fd8>
  428b98:	ldp	x23, x24, [sp, #48]
  428b9c:	ldp	x19, x20, [sp, #16]
  428ba0:	ldp	x21, x22, [sp, #32]
  428ba4:	ldp	x29, x30, [sp], #64
  428ba8:	ret
  428bac:	mov	x1, x21
  428bb0:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  428bb4:	add	x0, x0, #0x208
  428bb8:	bl	4298b4 <wcrtomb@plt+0x24c94>
  428bbc:	b	428b9c <wcrtomb@plt+0x23f7c>
  428bc0:	bl	404ad0 <__errno_location@plt>
  428bc4:	ldr	w0, [x0]
  428bc8:	cmp	w0, #0x5f
  428bcc:	b.eq	428b94 <wcrtomb@plt+0x23f74>  // b.none
  428bd0:	mov	x1, x21
  428bd4:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  428bd8:	add	x0, x0, #0x218
  428bdc:	bl	4298b4 <wcrtomb@plt+0x24c94>
  428be0:	b	428b94 <wcrtomb@plt+0x23f74>
  428be4:	mov	x1, x21
  428be8:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  428bec:	add	x0, x0, #0x228
  428bf0:	bl	4298b4 <wcrtomb@plt+0x24c94>
  428bf4:	b	428b94 <wcrtomb@plt+0x23f74>
  428bf8:	mov	w2, #0x4000                	// #16384
  428bfc:	mov	x1, x21
  428c00:	mov	w0, w22
  428c04:	bl	427ec0 <wcrtomb@plt+0x232a0>
  428c08:	mov	x19, x0
  428c0c:	cbz	x0, 428c4c <wcrtomb@plt+0x2402c>
  428c10:	mov	x1, #0x0                   	// #0
  428c14:	bl	4045f0 <acl_to_text@plt>
  428c18:	mov	x22, x0
  428c1c:	mov	x0, x19
  428c20:	bl	404bf0 <acl_free@plt>
  428c24:	cbz	x22, 428c7c <wcrtomb@plt+0x2405c>
  428c28:	mov	x0, x22
  428c2c:	bl	440154 <argp_parse@@Base+0xca14>
  428c30:	str	x0, [x20, #72]
  428c34:	add	x1, x20, #0x50
  428c38:	bl	4280a4 <wcrtomb@plt+0x23484>
  428c3c:	mov	x0, x22
  428c40:	bl	404bf0 <acl_free@plt>
  428c44:	ldp	x23, x24, [sp, #48]
  428c48:	b	428b9c <wcrtomb@plt+0x23f7c>
  428c4c:	bl	404ad0 <__errno_location@plt>
  428c50:	ldr	w0, [x0]
  428c54:	cmp	w0, #0x5f
  428c58:	b.ne	428c64 <wcrtomb@plt+0x24044>  // b.any
  428c5c:	ldp	x23, x24, [sp, #48]
  428c60:	b	428b9c <wcrtomb@plt+0x23f7c>
  428c64:	mov	x1, x21
  428c68:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  428c6c:	add	x0, x0, #0x218
  428c70:	bl	4298b4 <wcrtomb@plt+0x24c94>
  428c74:	ldp	x23, x24, [sp, #48]
  428c78:	b	428b9c <wcrtomb@plt+0x23f7c>
  428c7c:	mov	x1, x21
  428c80:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  428c84:	add	x0, x0, #0x228
  428c88:	bl	4298b4 <wcrtomb@plt+0x24c94>
  428c8c:	ldp	x23, x24, [sp, #48]
  428c90:	b	428b9c <wcrtomb@plt+0x23f7c>
  428c94:	stp	x29, x30, [sp, #-48]!
  428c98:	mov	x29, sp
  428c9c:	stp	x19, x20, [sp, #16]
  428ca0:	str	x21, [sp, #32]
  428ca4:	mov	x19, x0
  428ca8:	and	w21, w2, #0xff
  428cac:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  428cb0:	ldr	w0, [x0, #832]
  428cb4:	cmp	w21, #0x32
  428cb8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  428cbc:	b.gt	428cd0 <wcrtomb@plt+0x240b0>
  428cc0:	ldp	x19, x20, [sp, #16]
  428cc4:	ldr	x21, [sp, #32]
  428cc8:	ldp	x29, x30, [sp], #48
  428ccc:	ret
  428cd0:	mov	x20, x1
  428cd4:	mov	w5, #0x0                   	// #0
  428cd8:	ldr	x4, [x19, #64]
  428cdc:	ldr	x3, [x19, #56]
  428ce0:	mov	w2, #0x8000                	// #32768
  428ce4:	mov	x0, x19
  428ce8:	bl	4284fc <wcrtomb@plt+0x238dc>
  428cec:	cmp	w21, #0x35
  428cf0:	mov	w0, #0x44                  	// #68
  428cf4:	ccmp	w21, w0, #0x4, ne  // ne = any
  428cf8:	b.ne	428cc0 <wcrtomb@plt+0x240a0>  // b.any
  428cfc:	mov	w5, #0x1                   	// #1
  428d00:	ldr	x4, [x19, #80]
  428d04:	ldr	x3, [x19, #72]
  428d08:	mov	w2, #0x4000                	// #16384
  428d0c:	mov	x1, x20
  428d10:	mov	x0, x19
  428d14:	bl	4284fc <wcrtomb@plt+0x238dc>
  428d18:	b	428cc0 <wcrtomb@plt+0x240a0>
  428d1c:	stp	x29, x30, [sp, #-32]!
  428d20:	mov	x29, sp
  428d24:	stp	x19, x20, [sp, #16]
  428d28:	mov	x20, x0
  428d2c:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x3ee64>
  428d30:	add	x19, x19, #0xcf8
  428d34:	add	x2, x19, #0x18
  428d38:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x3ee64>
  428d3c:	add	x19, x19, #0xcf8
  428d40:	tst	w1, #0xff
  428d44:	csel	x19, x19, x2, ne  // ne = any
  428d48:	ldr	x0, [x19, #8]
  428d4c:	ldr	x1, [x19, #16]
  428d50:	cmp	x1, x0
  428d54:	b.eq	428d78 <wcrtomb@plt+0x24158>  // b.none
  428d58:	ldr	x1, [x19]
  428d5c:	ldr	x0, [x19, #16]
  428d60:	add	x2, x0, #0x1
  428d64:	str	x2, [x19, #16]
  428d68:	str	x20, [x1, x0, lsl #3]
  428d6c:	ldp	x19, x20, [sp, #16]
  428d70:	ldp	x29, x30, [sp], #32
  428d74:	ret
  428d78:	cbnz	x0, 428d84 <wcrtomb@plt+0x24164>
  428d7c:	mov	x0, #0x4                   	// #4
  428d80:	str	x0, [x19, #8]
  428d84:	ldr	x0, [x19]
  428d88:	ldr	x1, [x19, #8]
  428d8c:	cbz	x0, 428dbc <wcrtomb@plt+0x2419c>
  428d90:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  428d94:	movk	x2, #0xaaa, lsl #48
  428d98:	cmp	x1, x2
  428d9c:	b.cs	428dd8 <wcrtomb@plt+0x241b8>  // b.hs, b.nlast
  428da0:	add	x2, x1, #0x1
  428da4:	add	x1, x2, x1, lsr #1
  428da8:	str	x1, [x19, #8]
  428dac:	lsl	x1, x1, #3
  428db0:	bl	43ff70 <argp_parse@@Base+0xc830>
  428db4:	str	x0, [x19]
  428db8:	b	428d58 <wcrtomb@plt+0x24138>
  428dbc:	cbz	x1, 428ddc <wcrtomb@plt+0x241bc>
  428dc0:	cmp	xzr, x1, lsr #61
  428dc4:	cset	x2, ne  // ne = any
  428dc8:	tst	x1, #0x1000000000000000
  428dcc:	csinc	w2, w2, wzr, eq  // eq = none
  428dd0:	cbz	w2, 428da8 <wcrtomb@plt+0x24188>
  428dd4:	bl	40e5ec <wcrtomb@plt+0x99cc>
  428dd8:	bl	40e5ec <wcrtomb@plt+0x99cc>
  428ddc:	mov	x1, #0x10                  	// #16
  428de0:	b	428da8 <wcrtomb@plt+0x24188>
  428de4:	stp	x29, x30, [sp, #-16]!
  428de8:	mov	x29, sp
  428dec:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  428df0:	ldr	x0, [x0, #3328]
  428df4:	cbnz	x0, 428e0c <wcrtomb@plt+0x241ec>
  428df8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  428dfc:	ldr	x0, [x0, #3352]
  428e00:	cbnz	x0, 428e1c <wcrtomb@plt+0x241fc>
  428e04:	ldp	x29, x30, [sp], #16
  428e08:	ret
  428e0c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  428e10:	ldr	x0, [x0, #3320]
  428e14:	bl	4047c0 <free@plt>
  428e18:	b	428df8 <wcrtomb@plt+0x241d8>
  428e1c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  428e20:	ldr	x0, [x0, #3344]
  428e24:	bl	4047c0 <free@plt>
  428e28:	b	428e04 <wcrtomb@plt+0x241e4>
  428e2c:	stp	x29, x30, [sp, #-112]!
  428e30:	mov	x29, sp
  428e34:	stp	x25, x26, [sp, #64]
  428e38:	mov	w26, w0
  428e3c:	str	x2, [sp, #96]
  428e40:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  428e44:	ldr	w0, [x0, #592]
  428e48:	cmp	w0, #0x0
  428e4c:	b.le	4290d4 <wcrtomb@plt+0x244b4>
  428e50:	stp	x21, x22, [sp, #32]
  428e54:	mov	x25, x1
  428e58:	mov	w22, w3
  428e5c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  428e60:	ldr	x0, [x0, #3368]
  428e64:	cbz	x0, 428e8c <wcrtomb@plt+0x2426c>
  428e68:	stp	x19, x20, [sp, #16]
  428e6c:	stp	x23, x24, [sp, #48]
  428e70:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x3ee64>
  428e74:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x3ee64>
  428e78:	add	x19, x19, #0xcf8
  428e7c:	mov	x21, #0x5555555555555555    	// #6148914691236517205
  428e80:	movk	x21, #0x5553
  428e84:	mov	x23, #0x80                  	// #128
  428e88:	b	428f54 <wcrtomb@plt+0x24334>
  428e8c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  428e90:	ldr	x1, [x0, #520]
  428e94:	cbz	x1, 428eb8 <wcrtomb@plt+0x24298>
  428e98:	tbnz	x1, #63, 428ea8 <wcrtomb@plt+0x24288>
  428e9c:	stp	x19, x20, [sp, #16]
  428ea0:	stp	x23, x24, [sp, #48]
  428ea4:	b	428ec4 <wcrtomb@plt+0x242a4>
  428ea8:	stp	x19, x20, [sp, #16]
  428eac:	stp	x23, x24, [sp, #48]
  428eb0:	stp	x27, x28, [sp, #80]
  428eb4:	bl	40e5ec <wcrtomb@plt+0x99cc>
  428eb8:	stp	x19, x20, [sp, #16]
  428ebc:	stp	x23, x24, [sp, #48]
  428ec0:	mov	x1, #0x80                  	// #128
  428ec4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  428ec8:	str	x1, [x0, #520]
  428ecc:	mov	x0, #0x0                   	// #0
  428ed0:	bl	43ff70 <argp_parse@@Base+0xc830>
  428ed4:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  428ed8:	str	x0, [x1, #3368]
  428edc:	b	428e70 <wcrtomb@plt+0x24250>
  428ee0:	cbz	x1, 428ef8 <wcrtomb@plt+0x242d8>
  428ee4:	tbz	x1, #63, 428f48 <wcrtomb@plt+0x24328>
  428ee8:	stp	x27, x28, [sp, #80]
  428eec:	bl	40e5ec <wcrtomb@plt+0x99cc>
  428ef0:	stp	x27, x28, [sp, #80]
  428ef4:	bl	40e5ec <wcrtomb@plt+0x99cc>
  428ef8:	mov	x1, x23
  428efc:	b	428f48 <wcrtomb@plt+0x24328>
  428f00:	ldr	x2, [x20, #520]
  428f04:	ldr	x1, [x19, #48]
  428f08:	mov	w0, w22
  428f0c:	bl	404980 <flistxattr@plt>
  428f10:	mov	x24, x0
  428f14:	cmn	x0, #0x1
  428f18:	b.ne	428f78 <wcrtomb@plt+0x24358>  // b.any
  428f1c:	bl	404ad0 <__errno_location@plt>
  428f20:	ldr	w0, [x0]
  428f24:	cmp	w0, #0x22
  428f28:	b.ne	429124 <wcrtomb@plt+0x24504>  // b.any
  428f2c:	ldr	x0, [x19, #48]
  428f30:	ldr	x1, [x20, #520]
  428f34:	cbz	x0, 428ee0 <wcrtomb@plt+0x242c0>
  428f38:	cmp	x1, x21
  428f3c:	b.hi	428ef0 <wcrtomb@plt+0x242d0>  // b.pmore
  428f40:	add	x2, x1, #0x1
  428f44:	add	x1, x2, x1, lsr #1
  428f48:	str	x1, [x20, #520]
  428f4c:	bl	43ff70 <argp_parse@@Base+0xc830>
  428f50:	str	x0, [x19, #48]
  428f54:	cbnz	w22, 428f00 <wcrtomb@plt+0x242e0>
  428f58:	ldr	x3, [x20, #520]
  428f5c:	ldr	x2, [x19, #48]
  428f60:	mov	x1, x25
  428f64:	mov	w0, w26
  428f68:	bl	42f948 <wcrtomb@plt+0x2ad28>
  428f6c:	mov	x24, x0
  428f70:	cmn	x0, #0x1
  428f74:	b.eq	428f1c <wcrtomb@plt+0x242fc>  // b.none
  428f78:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  428f7c:	add	x0, x0, #0xcf8
  428f80:	ldr	x23, [x0, #48]
  428f84:	ldr	x0, [x0, #56]
  428f88:	cbz	x0, 428fc8 <wcrtomb@plt+0x243a8>
  428f8c:	cmp	x24, #0x0
  428f90:	b.le	429154 <wcrtomb@plt+0x24534>
  428f94:	stp	x27, x28, [sp, #80]
  428f98:	cmp	w22, #0x0
  428f9c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  428fa0:	add	x1, x1, #0x258
  428fa4:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  428fa8:	add	x0, x0, #0x268
  428fac:	csel	x0, x1, x0, eq  // eq = none
  428fb0:	str	x0, [sp, #104]
  428fb4:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x3ee64>
  428fb8:	add	x21, x21, #0xcf8
  428fbc:	mov	x27, #0x5555555555555555    	// #6148914691236517205
  428fc0:	movk	x27, #0x5553
  428fc4:	b	42910c <wcrtomb@plt+0x244ec>
  428fc8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  428fcc:	ldr	x1, [x0, #528]
  428fd0:	cbz	x1, 428fe0 <wcrtomb@plt+0x243c0>
  428fd4:	tbz	x1, #63, 428fe4 <wcrtomb@plt+0x243c4>
  428fd8:	stp	x27, x28, [sp, #80]
  428fdc:	bl	40e5ec <wcrtomb@plt+0x99cc>
  428fe0:	mov	x1, #0x80                  	// #128
  428fe4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  428fe8:	str	x1, [x0, #528]
  428fec:	mov	x0, #0x0                   	// #0
  428ff0:	bl	43ff70 <argp_parse@@Base+0xc830>
  428ff4:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  428ff8:	str	x0, [x1, #3376]
  428ffc:	b	428f8c <wcrtomb@plt+0x2436c>
  429000:	cbz	x1, 429010 <wcrtomb@plt+0x243f0>
  429004:	tbz	x1, #63, 429064 <wcrtomb@plt+0x24444>
  429008:	bl	40e5ec <wcrtomb@plt+0x99cc>
  42900c:	bl	40e5ec <wcrtomb@plt+0x99cc>
  429010:	mov	x1, #0x80                  	// #128
  429014:	b	429064 <wcrtomb@plt+0x24444>
  429018:	ldr	x3, [x20, #8]
  42901c:	ldr	x2, [x21, #56]
  429020:	mov	x1, x23
  429024:	mov	w0, w22
  429028:	bl	404830 <fgetxattr@plt>
  42902c:	mov	x19, x0
  429030:	cmn	x0, #0x1
  429034:	b.ne	429098 <wcrtomb@plt+0x24478>  // b.any
  429038:	bl	404ad0 <__errno_location@plt>
  42903c:	ldr	w0, [x0]
  429040:	cmp	w0, #0x22
  429044:	b.ne	4290e0 <wcrtomb@plt+0x244c0>  // b.any
  429048:	ldr	x0, [x21, #56]
  42904c:	ldr	x1, [x20, #8]
  429050:	cbz	x0, 429000 <wcrtomb@plt+0x243e0>
  429054:	cmp	x1, x27
  429058:	b.hi	42900c <wcrtomb@plt+0x243ec>  // b.pmore
  42905c:	add	x2, x1, #0x1
  429060:	add	x1, x2, x1, lsr #1
  429064:	str	x1, [x20, #8]
  429068:	bl	43ff70 <argp_parse@@Base+0xc830>
  42906c:	str	x0, [x21, #56]
  429070:	cbnz	w22, 429018 <wcrtomb@plt+0x243f8>
  429074:	ldr	x4, [x20, #8]
  429078:	ldr	x3, [x21, #56]
  42907c:	mov	x2, x23
  429080:	mov	x1, x25
  429084:	mov	w0, w26
  429088:	bl	42f53c <wcrtomb@plt+0x2a91c>
  42908c:	mov	x19, x0
  429090:	cmn	x0, #0x1
  429094:	b.eq	429038 <wcrtomb@plt+0x24418>  // b.none
  429098:	mov	w1, #0x1                   	// #1
  42909c:	mov	x0, x23
  4290a0:	bl	42885c <wcrtomb@plt+0x23c3c>
  4290a4:	and	w0, w0, #0xff
  4290a8:	cbnz	w0, 4290f4 <wcrtomb@plt+0x244d4>
  4290ac:	mov	x3, x19
  4290b0:	ldr	x2, [x21, #56]
  4290b4:	mov	x1, x23
  4290b8:	ldr	x0, [sp, #96]
  4290bc:	bl	413984 <wcrtomb@plt+0xed64>
  4290c0:	b	4290f4 <wcrtomb@plt+0x244d4>
  4290c4:	ldp	x19, x20, [sp, #16]
  4290c8:	ldp	x21, x22, [sp, #32]
  4290cc:	ldp	x23, x24, [sp, #48]
  4290d0:	ldp	x27, x28, [sp, #80]
  4290d4:	ldp	x25, x26, [sp, #64]
  4290d8:	ldp	x29, x30, [sp], #112
  4290dc:	ret
  4290e0:	cmp	w0, #0x3d
  4290e4:	b.eq	4290f4 <wcrtomb@plt+0x244d4>  // b.none
  4290e8:	mov	x1, x25
  4290ec:	ldr	x0, [sp, #104]
  4290f0:	bl	4298b4 <wcrtomb@plt+0x24c94>
  4290f4:	add	x0, x28, #0x1
  4290f8:	add	x23, x23, x0
  4290fc:	sub	x24, x24, x28
  429100:	sub	x24, x24, #0x1
  429104:	cmp	x24, #0x0
  429108:	b.le	4290c4 <wcrtomb@plt+0x244a4>
  42910c:	mov	x0, x23
  429110:	bl	403ff0 <strlen@plt>
  429114:	mov	x28, x0
  429118:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42911c:	add	x20, x20, #0x208
  429120:	b	429070 <wcrtomb@plt+0x24450>
  429124:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  429128:	add	x0, x0, #0x248
  42912c:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x18e64>
  429130:	add	x2, x2, #0x238
  429134:	cmp	w22, #0x0
  429138:	mov	x1, x25
  42913c:	csel	x0, x2, x0, eq  // eq = none
  429140:	bl	4298b4 <wcrtomb@plt+0x24c94>
  429144:	ldp	x19, x20, [sp, #16]
  429148:	ldp	x21, x22, [sp, #32]
  42914c:	ldp	x23, x24, [sp, #48]
  429150:	b	4290d4 <wcrtomb@plt+0x244b4>
  429154:	ldp	x19, x20, [sp, #16]
  429158:	ldp	x21, x22, [sp, #32]
  42915c:	ldp	x23, x24, [sp, #48]
  429160:	b	4290d4 <wcrtomb@plt+0x244b4>
  429164:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  429168:	ldr	w0, [x0, #920]
  42916c:	cmp	w0, #0x0
  429170:	b.le	4291e0 <wcrtomb@plt+0x245c0>
  429174:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  429178:	ldr	w0, [x0, #3384]
  42917c:	cbnz	w0, 4291d0 <wcrtomb@plt+0x245b0>
  429180:	stp	x29, x30, [sp, #-16]!
  429184:	mov	x29, sp
  429188:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42918c:	ldr	x0, [x0, #944]
  429190:	cbz	x0, 429198 <wcrtomb@plt+0x24578>
  429194:	blr	x0
  429198:	mov	w2, #0x5                   	// #5
  42919c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  4291a0:	add	x1, x1, #0x278
  4291a4:	mov	x0, #0x0                   	// #0
  4291a8:	bl	4049c0 <dcgettext@plt>
  4291ac:	mov	x2, x0
  4291b0:	mov	w1, #0x0                   	// #0
  4291b4:	mov	w0, #0x0                   	// #0
  4291b8:	bl	404050 <error@plt>
  4291bc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4291c0:	mov	w1, #0x1                   	// #1
  4291c4:	str	w1, [x0, #3384]
  4291c8:	ldp	x29, x30, [sp], #16
  4291cc:	ret
  4291d0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4291d4:	mov	w1, #0x1                   	// #1
  4291d8:	str	w1, [x0, #3384]
  4291dc:	ret
  4291e0:	ret
  4291e4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4291e8:	ldr	w0, [x0, #920]
  4291ec:	cmp	w0, #0x0
  4291f0:	b.le	429260 <wcrtomb@plt+0x24640>
  4291f4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4291f8:	ldr	w0, [x0, #3388]
  4291fc:	cbnz	w0, 429250 <wcrtomb@plt+0x24630>
  429200:	stp	x29, x30, [sp, #-16]!
  429204:	mov	x29, sp
  429208:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42920c:	ldr	x0, [x0, #944]
  429210:	cbz	x0, 429218 <wcrtomb@plt+0x245f8>
  429214:	blr	x0
  429218:	mov	w2, #0x5                   	// #5
  42921c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  429220:	add	x1, x1, #0x278
  429224:	mov	x0, #0x0                   	// #0
  429228:	bl	4049c0 <dcgettext@plt>
  42922c:	mov	x2, x0
  429230:	mov	w1, #0x0                   	// #0
  429234:	mov	w0, #0x0                   	// #0
  429238:	bl	404050 <error@plt>
  42923c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  429240:	mov	w1, #0x1                   	// #1
  429244:	str	w1, [x0, #3388]
  429248:	ldp	x29, x30, [sp], #16
  42924c:	ret
  429250:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  429254:	mov	w1, #0x1                   	// #1
  429258:	str	w1, [x0, #3388]
  42925c:	ret
  429260:	ret
  429264:	stp	x29, x30, [sp, #-112]!
  429268:	mov	x29, sp
  42926c:	stp	x19, x20, [sp, #16]
  429270:	mov	x20, x0
  429274:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  429278:	ldr	w0, [x0, #592]
  42927c:	cmp	w0, #0x0
  429280:	b.le	4293f0 <wcrtomb@plt+0x247d0>
  429284:	stp	x23, x24, [sp, #48]
  429288:	stp	x25, x26, [sp, #64]
  42928c:	mov	x25, x1
  429290:	and	w23, w2, #0xff
  429294:	mov	w24, w3
  429298:	ldr	x0, [x20, #328]
  42929c:	cbz	x0, 4293fc <wcrtomb@plt+0x247dc>
  4292a0:	stp	x21, x22, [sp, #32]
  4292a4:	stp	x27, x28, [sp, #80]
  4292a8:	mov	x21, #0x0                   	// #0
  4292ac:	mov	x22, #0x0                   	// #0
  4292b0:	adrp	x27, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4292b4:	add	x27, x27, #0x198
  4292b8:	adrp	x28, 481000 <argp_program_version_hook@@Base+0x298>
  4292bc:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  4292c0:	add	x0, x0, #0x2d8
  4292c4:	str	x0, [sp, #96]
  4292c8:	b	42933c <wcrtomb@plt+0x2471c>
  4292cc:	mov	w5, #0x0                   	// #0
  4292d0:	mov	x2, x19
  4292d4:	mov	x1, x25
  4292d8:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  4292dc:	ldr	w0, [x0, #2184]
  4292e0:	bl	42f104 <wcrtomb@plt+0x2a4e4>
  4292e4:	adrp	x26, 45a000 <_obstack_memory_used@@Base+0x18e64>
  4292e8:	add	x26, x26, #0x2b0
  4292ec:	b	4293c0 <wcrtomb@plt+0x247a0>
  4292f0:	bl	404ad0 <__errno_location@plt>
  4292f4:	ldr	w0, [x0]
  4292f8:	str	w0, [sp, #108]
  4292fc:	mov	w2, #0x5                   	// #5
  429300:	ldr	x1, [sp, #96]
  429304:	mov	x0, #0x0                   	// #0
  429308:	bl	4049c0 <dcgettext@plt>
  42930c:	mov	x5, x25
  429310:	mov	x4, x19
  429314:	mov	x3, x26
  429318:	mov	x2, x0
  42931c:	ldr	w1, [sp, #108]
  429320:	mov	w0, #0x0                   	// #0
  429324:	bl	404050 <error@plt>
  429328:	add	x22, x22, #0x1
  42932c:	add	x21, x21, #0x18
  429330:	ldr	x0, [x20, #328]
  429334:	cmp	x0, x22
  429338:	b.ls	4293e0 <wcrtomb@plt+0x247c0>  // b.plast
  42933c:	ldr	x0, [x20, #336]
  429340:	ldr	x19, [x0, x21]
  429344:	add	x19, x19, #0xd
  429348:	cmp	w23, #0x30
  42934c:	b.ne	429370 <wcrtomb@plt+0x24750>  // b.any
  429350:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  429354:	add	x1, x1, #0x2c0
  429358:	mov	x0, x19
  42935c:	bl	404720 <strcmp@plt>
  429360:	cmp	w0, #0x0
  429364:	cset	w0, ne  // ne = any
  429368:	cmp	w0, w24
  42936c:	b.eq	429328 <wcrtomb@plt+0x24708>  // b.none
  429370:	mov	w1, #0x0                   	// #0
  429374:	mov	x0, x19
  429378:	bl	42885c <wcrtomb@plt+0x23c3c>
  42937c:	and	w0, w0, #0xff
  429380:	cbnz	w0, 429328 <wcrtomb@plt+0x24708>
  429384:	ldr	x0, [x20, #336]
  429388:	add	x0, x0, x21
  42938c:	ldr	x3, [x0, #8]
  429390:	cbz	x3, 429328 <wcrtomb@plt+0x24708>
  429394:	ldr	x4, [x0, #16]
  429398:	cmp	w23, #0x32
  42939c:	b.eq	4292cc <wcrtomb@plt+0x246ac>  // b.none
  4293a0:	mov	w5, #0x0                   	// #0
  4293a4:	mov	x2, x19
  4293a8:	mov	x1, x25
  4293ac:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3be64>
  4293b0:	ldr	w0, [x0, #2184]
  4293b4:	bl	42eee0 <wcrtomb@plt+0x2a2c0>
  4293b8:	adrp	x26, 45a000 <_obstack_memory_used@@Base+0x18e64>
  4293bc:	add	x26, x26, #0x2a0
  4293c0:	cmn	w0, #0x1
  4293c4:	b.ne	429328 <wcrtomb@plt+0x24708>  // b.any
  4293c8:	ldr	w0, [x27]
  4293cc:	tbz	w0, #21, 429328 <wcrtomb@plt+0x24708>
  4293d0:	ldr	x0, [x28, #944]
  4293d4:	cbz	x0, 4292f0 <wcrtomb@plt+0x246d0>
  4293d8:	blr	x0
  4293dc:	b	4292f0 <wcrtomb@plt+0x246d0>
  4293e0:	ldp	x21, x22, [sp, #32]
  4293e4:	ldp	x23, x24, [sp, #48]
  4293e8:	ldp	x25, x26, [sp, #64]
  4293ec:	ldp	x27, x28, [sp, #80]
  4293f0:	ldp	x19, x20, [sp, #16]
  4293f4:	ldp	x29, x30, [sp], #112
  4293f8:	ret
  4293fc:	ldp	x23, x24, [sp, #48]
  429400:	ldp	x25, x26, [sp, #64]
  429404:	b	4293f0 <wcrtomb@plt+0x247d0>
  429408:	stp	x29, x30, [sp, #-48]!
  42940c:	mov	x29, sp
  429410:	stp	x19, x20, [sp, #16]
  429414:	stp	x21, x22, [sp, #32]
  429418:	mov	x19, x0
  42941c:	mov	x22, x1
  429420:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  429424:	ldr	w0, [x0, #580]
  429428:	cmp	w0, #0x1
  42942c:	b.le	4294a0 <wcrtomb@plt+0x24880>
  429430:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  429434:	ldr	w0, [x0, #592]
  429438:	cmp	w0, #0x0
  42943c:	b.le	4294a8 <wcrtomb@plt+0x24888>
  429440:	mov	w0, #0x20                  	// #32
  429444:	strb	w0, [x22]
  429448:	strb	wzr, [x22, #1]
  42944c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  429450:	ldr	w0, [x0, #592]
  429454:	cmp	w0, #0x0
  429458:	b.le	4294d4 <wcrtomb@plt+0x248b4>
  42945c:	ldr	x0, [x19, #328]
  429460:	cbz	x0, 4294d4 <wcrtomb@plt+0x248b4>
  429464:	mov	x20, #0x0                   	// #0
  429468:	mov	x21, #0x0                   	// #0
  42946c:	ldr	x0, [x19, #336]
  429470:	ldr	x0, [x0, x20]
  429474:	mov	w1, #0x0                   	// #0
  429478:	add	x0, x0, #0xd
  42947c:	bl	42885c <wcrtomb@plt+0x23c3c>
  429480:	and	w0, w0, #0xff
  429484:	cbz	w0, 4294cc <wcrtomb@plt+0x248ac>
  429488:	add	x21, x21, #0x1
  42948c:	add	x20, x20, #0x18
  429490:	ldr	x0, [x19, #328]
  429494:	cmp	x0, x21
  429498:	b.hi	42946c <wcrtomb@plt+0x2484c>  // b.pmore
  42949c:	b	4294d4 <wcrtomb@plt+0x248b4>
  4294a0:	strb	wzr, [x1]
  4294a4:	b	42951c <wcrtomb@plt+0x248fc>
  4294a8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4294ac:	ldr	w0, [x0, #920]
  4294b0:	cmp	w0, #0x0
  4294b4:	b.gt	429440 <wcrtomb@plt+0x24820>
  4294b8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4294bc:	ldr	w0, [x0, #832]
  4294c0:	cmp	w0, #0x0
  4294c4:	b.gt	429440 <wcrtomb@plt+0x24820>
  4294c8:	b	4294f4 <wcrtomb@plt+0x248d4>
  4294cc:	mov	w0, #0x2a                  	// #42
  4294d0:	strb	w0, [x22]
  4294d4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4294d8:	ldr	w0, [x0, #920]
  4294dc:	cmp	w0, #0x0
  4294e0:	b.le	4294f4 <wcrtomb@plt+0x248d4>
  4294e4:	ldr	x0, [x19, #48]
  4294e8:	cbz	x0, 4294f4 <wcrtomb@plt+0x248d4>
  4294ec:	mov	w0, #0x2e                  	// #46
  4294f0:	strb	w0, [x22]
  4294f4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4294f8:	ldr	w0, [x0, #832]
  4294fc:	cmp	w0, #0x0
  429500:	b.le	42951c <wcrtomb@plt+0x248fc>
  429504:	ldr	x0, [x19, #64]
  429508:	cbnz	x0, 429514 <wcrtomb@plt+0x248f4>
  42950c:	ldr	x0, [x19, #80]
  429510:	cbz	x0, 42951c <wcrtomb@plt+0x248fc>
  429514:	mov	w0, #0x2b                  	// #43
  429518:	strb	w0, [x22]
  42951c:	ldp	x19, x20, [sp, #16]
  429520:	ldp	x21, x22, [sp, #32]
  429524:	ldp	x29, x30, [sp], #48
  429528:	ret
  42952c:	stp	x29, x30, [sp, #-80]!
  429530:	mov	x29, sp
  429534:	stp	x19, x20, [sp, #16]
  429538:	mov	x19, x0
  42953c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  429540:	ldr	w0, [x0, #580]
  429544:	cmp	w0, #0x2
  429548:	b.le	4296c0 <wcrtomb@plt+0x24aa0>
  42954c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  429550:	ldr	w0, [x0, #920]
  429554:	cmp	w0, #0x0
  429558:	b.le	42957c <wcrtomb@plt+0x2495c>
  42955c:	ldr	x3, [x19, #48]
  429560:	cbz	x3, 42957c <wcrtomb@plt+0x2495c>
  429564:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x18e64>
  429568:	add	x2, x2, #0x310
  42956c:	mov	w1, #0x1                   	// #1
  429570:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  429574:	ldr	x0, [x0, #3864]
  429578:	bl	404710 <__fprintf_chk@plt>
  42957c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  429580:	ldr	w0, [x0, #832]
  429584:	cmp	w0, #0x0
  429588:	b.le	429608 <wcrtomb@plt+0x249e8>
  42958c:	ldr	x0, [x19, #64]
  429590:	cbnz	x0, 42959c <wcrtomb@plt+0x2497c>
  429594:	ldr	x0, [x19, #80]
  429598:	cbz	x0, 429608 <wcrtomb@plt+0x249e8>
  42959c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4295a0:	ldr	x3, [x0, #3864]
  4295a4:	mov	x2, #0x5                   	// #5
  4295a8:	mov	x1, #0x1                   	// #1
  4295ac:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  4295b0:	add	x0, x0, #0x320
  4295b4:	bl	4048b0 <fwrite@plt>
  4295b8:	ldr	x3, [x19, #64]
  4295bc:	ldr	x2, [x19, #56]
  4295c0:	mov	w1, #0x2c                  	// #44
  4295c4:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  4295c8:	add	x0, x0, #0x7f8
  4295cc:	bl	4288ec <wcrtomb@plt+0x23ccc>
  4295d0:	ldr	x0, [x19, #64]
  4295d4:	cbz	x0, 4295e0 <wcrtomb@plt+0x249c0>
  4295d8:	ldr	x0, [x19, #80]
  4295dc:	cbnz	x0, 429648 <wcrtomb@plt+0x24a28>
  4295e0:	ldr	x3, [x19, #80]
  4295e4:	ldr	x2, [x19, #72]
  4295e8:	mov	w1, #0x2c                  	// #44
  4295ec:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  4295f0:	add	x0, x0, #0x328
  4295f4:	bl	4288ec <wcrtomb@plt+0x23ccc>
  4295f8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4295fc:	ldr	x1, [x0, #3864]
  429600:	mov	w0, #0xa                   	// #10
  429604:	bl	404170 <fputc@plt>
  429608:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42960c:	ldr	w0, [x0, #592]
  429610:	cmp	w0, #0x0
  429614:	b.le	4296c0 <wcrtomb@plt+0x24aa0>
  429618:	ldr	x0, [x19, #328]
  42961c:	cbz	x0, 4296c0 <wcrtomb@plt+0x24aa0>
  429620:	stp	x21, x22, [sp, #32]
  429624:	stp	x23, x24, [sp, #48]
  429628:	str	x25, [sp, #64]
  42962c:	mov	x21, #0x0                   	// #0
  429630:	mov	x22, #0x0                   	// #0
  429634:	adrp	x23, 45a000 <_obstack_memory_used@@Base+0x18e64>
  429638:	add	x23, x23, #0x338
  42963c:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x3ee64>
  429640:	mov	w24, #0x1                   	// #1
  429644:	b	429690 <wcrtomb@plt+0x24a70>
  429648:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42964c:	ldr	x1, [x0, #3864]
  429650:	mov	w0, #0x2c                  	// #44
  429654:	bl	404170 <fputc@plt>
  429658:	b	4295e0 <wcrtomb@plt+0x249c0>
  42965c:	ldr	x0, [x19, #336]
  429660:	add	x0, x0, x21
  429664:	mov	x4, x20
  429668:	ldr	x3, [x0, #16]
  42966c:	mov	x2, x23
  429670:	mov	w1, w24
  429674:	ldr	x0, [x25, #3864]
  429678:	bl	404710 <__fprintf_chk@plt>
  42967c:	add	x22, x22, #0x1
  429680:	add	x21, x21, #0x18
  429684:	ldr	x0, [x19, #328]
  429688:	cmp	x0, x22
  42968c:	b.ls	4296b4 <wcrtomb@plt+0x24a94>  // b.plast
  429690:	ldr	x0, [x19, #336]
  429694:	ldr	x20, [x0, x21]
  429698:	add	x20, x20, #0xd
  42969c:	mov	w1, #0x0                   	// #0
  4296a0:	mov	x0, x20
  4296a4:	bl	42885c <wcrtomb@plt+0x23c3c>
  4296a8:	and	w0, w0, #0xff
  4296ac:	cbnz	w0, 42967c <wcrtomb@plt+0x24a5c>
  4296b0:	b	42965c <wcrtomb@plt+0x24a3c>
  4296b4:	ldp	x21, x22, [sp, #32]
  4296b8:	ldp	x23, x24, [sp, #48]
  4296bc:	ldr	x25, [sp, #64]
  4296c0:	ldp	x19, x20, [sp, #16]
  4296c4:	ldp	x29, x30, [sp], #80
  4296c8:	ret
  4296cc:	tst	x0, #0x100
  4296d0:	mov	w2, #0x72                  	// #114
  4296d4:	mov	w3, #0x2d                  	// #45
  4296d8:	csel	w2, w2, w3, ne  // ne = any
  4296dc:	strb	w2, [x1]
  4296e0:	tst	x0, #0x80
  4296e4:	mov	w2, #0x77                  	// #119
  4296e8:	csel	w2, w2, w3, ne  // ne = any
  4296ec:	strb	w2, [x1, #1]
  4296f0:	tbz	w0, #11, 429788 <wcrtomb@plt+0x24b68>
  4296f4:	tst	x0, #0x40
  4296f8:	mov	w2, #0x73                  	// #115
  4296fc:	mov	w3, #0x53                  	// #83
  429700:	csel	w2, w2, w3, ne  // ne = any
  429704:	strb	w2, [x1, #2]
  429708:	tst	x0, #0x20
  42970c:	mov	w2, #0x72                  	// #114
  429710:	mov	w3, #0x2d                  	// #45
  429714:	csel	w2, w2, w3, ne  // ne = any
  429718:	strb	w2, [x1, #3]
  42971c:	tst	x0, #0x10
  429720:	mov	w2, #0x77                  	// #119
  429724:	csel	w2, w2, w3, ne  // ne = any
  429728:	strb	w2, [x1, #4]
  42972c:	tbz	w0, #10, 42979c <wcrtomb@plt+0x24b7c>
  429730:	tst	x0, #0x8
  429734:	mov	w2, #0x73                  	// #115
  429738:	mov	w3, #0x53                  	// #83
  42973c:	csel	w2, w2, w3, ne  // ne = any
  429740:	strb	w2, [x1, #5]
  429744:	tst	x0, #0x4
  429748:	mov	w2, #0x72                  	// #114
  42974c:	mov	w3, #0x2d                  	// #45
  429750:	csel	w2, w2, w3, ne  // ne = any
  429754:	strb	w2, [x1, #6]
  429758:	tst	x0, #0x2
  42975c:	mov	w2, #0x77                  	// #119
  429760:	csel	w2, w2, w3, ne  // ne = any
  429764:	strb	w2, [x1, #7]
  429768:	tbz	w0, #9, 4297b0 <wcrtomb@plt+0x24b90>
  42976c:	tst	x0, #0x1
  429770:	mov	w0, #0x74                  	// #116
  429774:	mov	w2, #0x54                  	// #84
  429778:	csel	w0, w0, w2, ne  // ne = any
  42977c:	strb	w0, [x1, #8]
  429780:	strb	wzr, [x1, #9]
  429784:	ret
  429788:	tst	x0, #0x40
  42978c:	mov	w2, #0x78                  	// #120
  429790:	mov	w3, #0x2d                  	// #45
  429794:	csel	w2, w2, w3, ne  // ne = any
  429798:	b	429704 <wcrtomb@plt+0x24ae4>
  42979c:	tst	x0, #0x8
  4297a0:	mov	w2, #0x78                  	// #120
  4297a4:	mov	w3, #0x2d                  	// #45
  4297a8:	csel	w2, w2, w3, ne  // ne = any
  4297ac:	b	429740 <wcrtomb@plt+0x24b20>
  4297b0:	tst	x0, #0x1
  4297b4:	mov	w0, #0x78                  	// #120
  4297b8:	mov	w2, #0x2d                  	// #45
  4297bc:	csel	w0, w0, w2, ne  // ne = any
  4297c0:	b	42977c <wcrtomb@plt+0x24b5c>
  4297c4:	stp	x29, x30, [sp, #-48]!
  4297c8:	mov	x29, sp
  4297cc:	stp	x19, x20, [sp, #16]
  4297d0:	stp	x21, x22, [sp, #32]
  4297d4:	mov	x20, x0
  4297d8:	mov	x21, x1
  4297dc:	bl	404ad0 <__errno_location@plt>
  4297e0:	ldr	w22, [x0]
  4297e4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4297e8:	ldr	x0, [x0, #944]
  4297ec:	cbz	x0, 4297f4 <wcrtomb@plt+0x24bd4>
  4297f0:	blr	x0
  4297f4:	mov	w2, #0x5                   	// #5
  4297f8:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  4297fc:	add	x1, x1, #0x348
  429800:	mov	x0, #0x0                   	// #0
  429804:	bl	4049c0 <dcgettext@plt>
  429808:	mov	x19, x0
  42980c:	mov	x0, x21
  429810:	bl	43efc4 <argp_parse@@Base+0xb884>
  429814:	mov	x4, x20
  429818:	mov	x3, x0
  42981c:	mov	x2, x19
  429820:	mov	w1, w22
  429824:	mov	w0, #0x0                   	// #0
  429828:	bl	404050 <error@plt>
  42982c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  429830:	mov	w1, #0x2                   	// #2
  429834:	str	w1, [x0, #3392]
  429838:	ldp	x19, x20, [sp, #16]
  42983c:	ldp	x21, x22, [sp, #32]
  429840:	ldp	x29, x30, [sp], #48
  429844:	ret
  429848:	stp	x29, x30, [sp, #-48]!
  42984c:	mov	x29, sp
  429850:	stp	x19, x20, [sp, #16]
  429854:	stp	x21, x22, [sp, #32]
  429858:	mov	x20, x0
  42985c:	mov	x21, x1
  429860:	bl	404ad0 <__errno_location@plt>
  429864:	ldr	w22, [x0]
  429868:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42986c:	ldr	x0, [x0, #944]
  429870:	cbz	x0, 429878 <wcrtomb@plt+0x24c58>
  429874:	blr	x0
  429878:	mov	w2, #0x5                   	// #5
  42987c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  429880:	add	x1, x1, #0x348
  429884:	mov	x0, #0x0                   	// #0
  429888:	bl	4049c0 <dcgettext@plt>
  42988c:	mov	x19, x0
  429890:	mov	x0, x21
  429894:	bl	43efc4 <argp_parse@@Base+0xb884>
  429898:	mov	x4, x20
  42989c:	mov	x3, x0
  4298a0:	mov	x2, x19
  4298a4:	mov	w1, w22
  4298a8:	mov	w0, #0x0                   	// #0
  4298ac:	bl	404050 <error@plt>
  4298b0:	bl	40e5ac <wcrtomb@plt+0x998c>
  4298b4:	stp	x29, x30, [sp, #-48]!
  4298b8:	mov	x29, sp
  4298bc:	stp	x19, x20, [sp, #16]
  4298c0:	stp	x21, x22, [sp, #32]
  4298c4:	mov	x20, x0
  4298c8:	mov	x21, x1
  4298cc:	bl	404ad0 <__errno_location@plt>
  4298d0:	ldr	w22, [x0]
  4298d4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4298d8:	ldr	x0, [x0, #944]
  4298dc:	cbz	x0, 4298e4 <wcrtomb@plt+0x24cc4>
  4298e0:	blr	x0
  4298e4:	mov	w2, #0x5                   	// #5
  4298e8:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  4298ec:	add	x1, x1, #0x358
  4298f0:	mov	x0, #0x0                   	// #0
  4298f4:	bl	4049c0 <dcgettext@plt>
  4298f8:	mov	x19, x0
  4298fc:	mov	x0, x21
  429900:	bl	43efc4 <argp_parse@@Base+0xb884>
  429904:	mov	x4, x20
  429908:	mov	x3, x0
  42990c:	mov	x2, x19
  429910:	mov	w1, w22
  429914:	mov	w0, #0x0                   	// #0
  429918:	bl	404050 <error@plt>
  42991c:	ldp	x19, x20, [sp, #16]
  429920:	ldp	x21, x22, [sp, #32]
  429924:	ldp	x29, x30, [sp], #48
  429928:	ret
  42992c:	stp	x29, x30, [sp, #-64]!
  429930:	mov	x29, sp
  429934:	stp	x19, x20, [sp, #16]
  429938:	str	x21, [sp, #32]
  42993c:	mov	x20, x0
  429940:	mov	w19, w1
  429944:	bl	404ad0 <__errno_location@plt>
  429948:	ldr	w21, [x0]
  42994c:	add	x1, sp, #0x30
  429950:	mov	w0, w19
  429954:	bl	4296cc <wcrtomb@plt+0x24aac>
  429958:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42995c:	ldr	x0, [x0, #944]
  429960:	cbz	x0, 429968 <wcrtomb@plt+0x24d48>
  429964:	blr	x0
  429968:	mov	w2, #0x5                   	// #5
  42996c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  429970:	add	x1, x1, #0x370
  429974:	mov	x0, #0x0                   	// #0
  429978:	bl	4049c0 <dcgettext@plt>
  42997c:	mov	x19, x0
  429980:	mov	x0, x20
  429984:	bl	43efc4 <argp_parse@@Base+0xb884>
  429988:	add	x4, sp, #0x30
  42998c:	mov	x3, x0
  429990:	mov	x2, x19
  429994:	mov	w1, w21
  429998:	mov	w0, #0x0                   	// #0
  42999c:	bl	404050 <error@plt>
  4299a0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4299a4:	mov	w1, #0x2                   	// #2
  4299a8:	str	w1, [x0, #3392]
  4299ac:	ldp	x19, x20, [sp, #16]
  4299b0:	ldr	x21, [sp, #32]
  4299b4:	ldp	x29, x30, [sp], #64
  4299b8:	ret
  4299bc:	stp	x29, x30, [sp, #-64]!
  4299c0:	mov	x29, sp
  4299c4:	stp	x19, x20, [sp, #16]
  4299c8:	stp	x21, x22, [sp, #32]
  4299cc:	str	x23, [sp, #48]
  4299d0:	mov	x22, x0
  4299d4:	mov	w20, w1
  4299d8:	mov	w21, w2
  4299dc:	bl	404ad0 <__errno_location@plt>
  4299e0:	ldr	w23, [x0]
  4299e4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  4299e8:	ldr	x0, [x0, #944]
  4299ec:	cbz	x0, 4299f4 <wcrtomb@plt+0x24dd4>
  4299f0:	blr	x0
  4299f4:	mov	w2, #0x5                   	// #5
  4299f8:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  4299fc:	add	x1, x1, #0x390
  429a00:	mov	x0, #0x0                   	// #0
  429a04:	bl	4049c0 <dcgettext@plt>
  429a08:	mov	x19, x0
  429a0c:	mov	x0, x22
  429a10:	bl	43efc4 <argp_parse@@Base+0xb884>
  429a14:	mov	w5, w21
  429a18:	mov	w4, w20
  429a1c:	mov	x3, x0
  429a20:	mov	x2, x19
  429a24:	mov	w1, w23
  429a28:	mov	w0, #0x0                   	// #0
  429a2c:	bl	404050 <error@plt>
  429a30:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  429a34:	mov	w1, #0x2                   	// #2
  429a38:	str	w1, [x0, #3392]
  429a3c:	ldp	x19, x20, [sp, #16]
  429a40:	ldp	x21, x22, [sp, #32]
  429a44:	ldr	x23, [sp, #48]
  429a48:	ldp	x29, x30, [sp], #64
  429a4c:	ret
  429a50:	stp	x29, x30, [sp, #-16]!
  429a54:	mov	x29, sp
  429a58:	mov	x1, x0
  429a5c:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  429a60:	add	x0, x0, #0x3c0
  429a64:	bl	4297c4 <wcrtomb@plt+0x24ba4>
  429a68:	ldp	x29, x30, [sp], #16
  429a6c:	ret
  429a70:	stp	x29, x30, [sp, #-16]!
  429a74:	mov	x29, sp
  429a78:	mov	x1, x0
  429a7c:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  429a80:	add	x0, x0, #0x3c0
  429a84:	bl	4298b4 <wcrtomb@plt+0x24c94>
  429a88:	ldp	x29, x30, [sp], #16
  429a8c:	ret
  429a90:	stp	x29, x30, [sp, #-16]!
  429a94:	mov	x29, sp
  429a98:	mov	x1, x0
  429a9c:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  429aa0:	add	x0, x0, #0x3c8
  429aa4:	bl	429848 <wcrtomb@plt+0x24c28>
  429aa8:	stp	x29, x30, [sp, #-48]!
  429aac:	mov	x29, sp
  429ab0:	stp	x19, x20, [sp, #16]
  429ab4:	stp	x21, x22, [sp, #32]
  429ab8:	mov	x21, x0
  429abc:	mov	x20, x1
  429ac0:	bl	404ad0 <__errno_location@plt>
  429ac4:	ldr	w22, [x0]
  429ac8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  429acc:	ldr	x0, [x0, #944]
  429ad0:	cbz	x0, 429ad8 <wcrtomb@plt+0x24eb8>
  429ad4:	blr	x0
  429ad8:	mov	w2, #0x5                   	// #5
  429adc:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  429ae0:	add	x1, x1, #0x3d0
  429ae4:	mov	x0, #0x0                   	// #0
  429ae8:	bl	4049c0 <dcgettext@plt>
  429aec:	mov	x19, x0
  429af0:	mov	x0, x20
  429af4:	bl	43efc4 <argp_parse@@Base+0xb884>
  429af8:	mov	x20, x0
  429afc:	mov	x1, x21
  429b00:	mov	w0, #0x1                   	// #1
  429b04:	bl	43f17c <argp_parse@@Base+0xba3c>
  429b08:	mov	x4, x0
  429b0c:	mov	x3, x20
  429b10:	mov	x2, x19
  429b14:	mov	w1, w22
  429b18:	mov	w0, #0x0                   	// #0
  429b1c:	bl	404050 <error@plt>
  429b20:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  429b24:	mov	w1, #0x2                   	// #2
  429b28:	str	w1, [x0, #3392]
  429b2c:	ldp	x19, x20, [sp, #16]
  429b30:	ldp	x21, x22, [sp, #32]
  429b34:	ldp	x29, x30, [sp], #48
  429b38:	ret
  429b3c:	stp	x29, x30, [sp, #-16]!
  429b40:	mov	x29, sp
  429b44:	mov	x1, x0
  429b48:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  429b4c:	add	x0, x0, #0x3f0
  429b50:	bl	4297c4 <wcrtomb@plt+0x24ba4>
  429b54:	ldp	x29, x30, [sp], #16
  429b58:	ret
  429b5c:	stp	x29, x30, [sp, #-16]!
  429b60:	mov	x29, sp
  429b64:	mov	x1, x0
  429b68:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  429b6c:	add	x0, x0, #0x3f8
  429b70:	bl	4297c4 <wcrtomb@plt+0x24ba4>
  429b74:	ldp	x29, x30, [sp], #16
  429b78:	ret
  429b7c:	stp	x29, x30, [sp, #-16]!
  429b80:	mov	x29, sp
  429b84:	mov	x1, x0
  429b88:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  429b8c:	add	x0, x0, #0x400
  429b90:	bl	4297c4 <wcrtomb@plt+0x24ba4>
  429b94:	ldp	x29, x30, [sp], #16
  429b98:	ret
  429b9c:	stp	x29, x30, [sp, #-16]!
  429ba0:	mov	x29, sp
  429ba4:	mov	x1, x0
  429ba8:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  429bac:	add	x0, x0, #0x408
  429bb0:	bl	4297c4 <wcrtomb@plt+0x24ba4>
  429bb4:	ldp	x29, x30, [sp], #16
  429bb8:	ret
  429bbc:	stp	x29, x30, [sp, #-16]!
  429bc0:	mov	x29, sp
  429bc4:	mov	x1, x0
  429bc8:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  429bcc:	add	x0, x0, #0x408
  429bd0:	bl	429848 <wcrtomb@plt+0x24c28>
  429bd4:	stp	x29, x30, [sp, #-16]!
  429bd8:	mov	x29, sp
  429bdc:	mov	x1, x0
  429be0:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  429be4:	add	x0, x0, #0x408
  429be8:	bl	4298b4 <wcrtomb@plt+0x24c94>
  429bec:	ldp	x29, x30, [sp], #16
  429bf0:	ret
  429bf4:	stp	x29, x30, [sp, #-16]!
  429bf8:	mov	x29, sp
  429bfc:	mov	x1, x0
  429c00:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  429c04:	add	x0, x0, #0x260
  429c08:	bl	4297c4 <wcrtomb@plt+0x24ba4>
  429c0c:	ldp	x29, x30, [sp], #16
  429c10:	ret
  429c14:	stp	x29, x30, [sp, #-96]!
  429c18:	mov	x29, sp
  429c1c:	stp	x19, x20, [sp, #16]
  429c20:	stp	x21, x22, [sp, #32]
  429c24:	str	x23, [sp, #48]
  429c28:	mov	x21, x0
  429c2c:	mov	x22, x1
  429c30:	mov	x19, x2
  429c34:	bl	404ad0 <__errno_location@plt>
  429c38:	ldr	w23, [x0]
  429c3c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  429c40:	ldr	x0, [x0, #944]
  429c44:	cbz	x0, 429c4c <wcrtomb@plt+0x2502c>
  429c48:	blr	x0
  429c4c:	mov	w4, #0x5                   	// #5
  429c50:	mov	x3, x19
  429c54:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x18e64>
  429c58:	add	x2, x2, #0x410
  429c5c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  429c60:	add	x1, x1, #0x448
  429c64:	mov	x0, #0x0                   	// #0
  429c68:	bl	4048f0 <dcngettext@plt>
  429c6c:	mov	x20, x0
  429c70:	mov	x0, x21
  429c74:	bl	43efc4 <argp_parse@@Base+0xb884>
  429c78:	mov	x21, x0
  429c7c:	add	x1, sp, #0x48
  429c80:	mov	x0, x22
  429c84:	bl	438ce8 <argp_parse@@Base+0x55a8>
  429c88:	mov	x5, x19
  429c8c:	mov	x4, x0
  429c90:	mov	x3, x21
  429c94:	mov	x2, x20
  429c98:	mov	w1, w23
  429c9c:	mov	w0, #0x0                   	// #0
  429ca0:	bl	404050 <error@plt>
  429ca4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  429ca8:	mov	w1, #0x2                   	// #2
  429cac:	str	w1, [x0, #3392]
  429cb0:	ldp	x19, x20, [sp, #16]
  429cb4:	ldp	x21, x22, [sp, #32]
  429cb8:	ldr	x23, [sp, #48]
  429cbc:	ldp	x29, x30, [sp], #96
  429cc0:	ret
  429cc4:	stp	x29, x30, [sp, #-96]!
  429cc8:	mov	x29, sp
  429ccc:	stp	x19, x20, [sp, #16]
  429cd0:	stp	x21, x22, [sp, #32]
  429cd4:	str	x23, [sp, #48]
  429cd8:	mov	x21, x0
  429cdc:	mov	x22, x1
  429ce0:	mov	x19, x2
  429ce4:	bl	404ad0 <__errno_location@plt>
  429ce8:	ldr	w23, [x0]
  429cec:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  429cf0:	ldr	x0, [x0, #944]
  429cf4:	cbz	x0, 429cfc <wcrtomb@plt+0x250dc>
  429cf8:	blr	x0
  429cfc:	mov	w4, #0x5                   	// #5
  429d00:	mov	x3, x19
  429d04:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x18e64>
  429d08:	add	x2, x2, #0x480
  429d0c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  429d10:	add	x1, x1, #0x4c0
  429d14:	mov	x0, #0x0                   	// #0
  429d18:	bl	4048f0 <dcngettext@plt>
  429d1c:	mov	x20, x0
  429d20:	mov	x0, x21
  429d24:	bl	43efc4 <argp_parse@@Base+0xb884>
  429d28:	mov	x21, x0
  429d2c:	add	x1, sp, #0x48
  429d30:	mov	x0, x22
  429d34:	bl	438ce8 <argp_parse@@Base+0x55a8>
  429d38:	mov	x5, x19
  429d3c:	mov	x4, x0
  429d40:	mov	x3, x21
  429d44:	mov	x2, x20
  429d48:	mov	w1, w23
  429d4c:	mov	w0, #0x0                   	// #0
  429d50:	bl	404050 <error@plt>
  429d54:	ldp	x19, x20, [sp, #16]
  429d58:	ldp	x21, x22, [sp, #32]
  429d5c:	ldr	x23, [sp, #48]
  429d60:	ldp	x29, x30, [sp], #96
  429d64:	ret
  429d68:	stp	x29, x30, [sp, #-16]!
  429d6c:	mov	x29, sp
  429d70:	mov	x1, x0
  429d74:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  429d78:	add	x0, x0, #0x260
  429d7c:	bl	429848 <wcrtomb@plt+0x24c28>
  429d80:	stp	x29, x30, [sp, #-96]!
  429d84:	mov	x29, sp
  429d88:	stp	x19, x20, [sp, #16]
  429d8c:	stp	x21, x22, [sp, #32]
  429d90:	str	x23, [sp, #48]
  429d94:	mov	x21, x0
  429d98:	mov	x22, x1
  429d9c:	mov	x19, x2
  429da0:	bl	404ad0 <__errno_location@plt>
  429da4:	ldr	w23, [x0]
  429da8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  429dac:	ldr	x0, [x0, #944]
  429db0:	cbz	x0, 429db8 <wcrtomb@plt+0x25198>
  429db4:	blr	x0
  429db8:	mov	w4, #0x5                   	// #5
  429dbc:	mov	x3, x19
  429dc0:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x18e64>
  429dc4:	add	x2, x2, #0x410
  429dc8:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  429dcc:	add	x1, x1, #0x448
  429dd0:	mov	x0, #0x0                   	// #0
  429dd4:	bl	4048f0 <dcngettext@plt>
  429dd8:	mov	x20, x0
  429ddc:	mov	x0, x21
  429de0:	bl	43efc4 <argp_parse@@Base+0xb884>
  429de4:	mov	x21, x0
  429de8:	add	x1, sp, #0x48
  429dec:	mov	x0, x22
  429df0:	bl	438ce8 <argp_parse@@Base+0x55a8>
  429df4:	mov	x5, x19
  429df8:	mov	x4, x0
  429dfc:	mov	x3, x21
  429e00:	mov	x2, x20
  429e04:	mov	w1, w23
  429e08:	mov	w0, #0x0                   	// #0
  429e0c:	bl	404050 <error@plt>
  429e10:	bl	40e5ac <wcrtomb@plt+0x998c>
  429e14:	stp	x29, x30, [sp, #-16]!
  429e18:	mov	x29, sp
  429e1c:	mov	x1, x0
  429e20:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  429e24:	add	x0, x0, #0x500
  429e28:	bl	4297c4 <wcrtomb@plt+0x24ba4>
  429e2c:	ldp	x29, x30, [sp], #16
  429e30:	ret
  429e34:	stp	x29, x30, [sp, #-16]!
  429e38:	mov	x29, sp
  429e3c:	mov	x1, x0
  429e40:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  429e44:	add	x0, x0, #0x500
  429e48:	bl	4298b4 <wcrtomb@plt+0x24c94>
  429e4c:	ldp	x29, x30, [sp], #16
  429e50:	ret
  429e54:	stp	x29, x30, [sp, #-16]!
  429e58:	mov	x29, sp
  429e5c:	mov	x1, x0
  429e60:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  429e64:	add	x0, x0, #0x510
  429e68:	bl	4297c4 <wcrtomb@plt+0x24ba4>
  429e6c:	ldp	x29, x30, [sp], #16
  429e70:	ret
  429e74:	stp	x29, x30, [sp, #-16]!
  429e78:	mov	x29, sp
  429e7c:	mov	x1, x0
  429e80:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  429e84:	add	x0, x0, #0x518
  429e88:	bl	4297c4 <wcrtomb@plt+0x24ba4>
  429e8c:	ldp	x29, x30, [sp], #16
  429e90:	ret
  429e94:	stp	x29, x30, [sp, #-16]!
  429e98:	mov	x29, sp
  429e9c:	mov	x1, x0
  429ea0:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  429ea4:	add	x0, x0, #0x518
  429ea8:	bl	4298b4 <wcrtomb@plt+0x24c94>
  429eac:	ldp	x29, x30, [sp], #16
  429eb0:	ret
  429eb4:	stp	x29, x30, [sp, #-16]!
  429eb8:	mov	x29, sp
  429ebc:	mov	x1, x0
  429ec0:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x15e64>
  429ec4:	add	x0, x0, #0x350
  429ec8:	bl	4297c4 <wcrtomb@plt+0x24ba4>
  429ecc:	ldp	x29, x30, [sp], #16
  429ed0:	ret
  429ed4:	stp	x29, x30, [sp, #-80]!
  429ed8:	mov	x29, sp
  429edc:	stp	x19, x20, [sp, #16]
  429ee0:	stp	x21, x22, [sp, #32]
  429ee4:	mov	x20, x0
  429ee8:	mov	x21, x1
  429eec:	bl	404ad0 <__errno_location@plt>
  429ef0:	ldr	w22, [x0]
  429ef4:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  429ef8:	ldr	x0, [x0, #944]
  429efc:	cbz	x0, 429f04 <wcrtomb@plt+0x252e4>
  429f00:	blr	x0
  429f04:	mov	w2, #0x5                   	// #5
  429f08:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  429f0c:	add	x1, x1, #0x520
  429f10:	mov	x0, #0x0                   	// #0
  429f14:	bl	4049c0 <dcgettext@plt>
  429f18:	mov	x19, x0
  429f1c:	mov	x0, x20
  429f20:	bl	43efc4 <argp_parse@@Base+0xb884>
  429f24:	mov	x20, x0
  429f28:	add	x1, sp, #0x38
  429f2c:	mov	x0, x21
  429f30:	bl	438ce8 <argp_parse@@Base+0x55a8>
  429f34:	mov	x4, x0
  429f38:	mov	x3, x20
  429f3c:	mov	x2, x19
  429f40:	mov	w1, w22
  429f44:	mov	w0, #0x0                   	// #0
  429f48:	bl	404050 <error@plt>
  429f4c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  429f50:	mov	w1, #0x2                   	// #2
  429f54:	str	w1, [x0, #3392]
  429f58:	ldp	x19, x20, [sp, #16]
  429f5c:	ldp	x21, x22, [sp, #32]
  429f60:	ldp	x29, x30, [sp], #80
  429f64:	ret
  429f68:	stp	x29, x30, [sp, #-16]!
  429f6c:	mov	x29, sp
  429f70:	mov	x1, x0
  429f74:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x15e64>
  429f78:	add	x0, x0, #0x350
  429f7c:	bl	4298b4 <wcrtomb@plt+0x24c94>
  429f80:	ldp	x29, x30, [sp], #16
  429f84:	ret
  429f88:	stp	x29, x30, [sp, #-80]!
  429f8c:	mov	x29, sp
  429f90:	stp	x19, x20, [sp, #16]
  429f94:	stp	x21, x22, [sp, #32]
  429f98:	mov	x20, x0
  429f9c:	mov	x21, x1
  429fa0:	bl	404ad0 <__errno_location@plt>
  429fa4:	ldr	w22, [x0]
  429fa8:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  429fac:	ldr	x0, [x0, #944]
  429fb0:	cbz	x0, 429fb8 <wcrtomb@plt+0x25398>
  429fb4:	blr	x0
  429fb8:	mov	w2, #0x5                   	// #5
  429fbc:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  429fc0:	add	x1, x1, #0x538
  429fc4:	mov	x0, #0x0                   	// #0
  429fc8:	bl	4049c0 <dcgettext@plt>
  429fcc:	mov	x19, x0
  429fd0:	mov	x0, x20
  429fd4:	bl	43efc4 <argp_parse@@Base+0xb884>
  429fd8:	mov	x20, x0
  429fdc:	add	x1, sp, #0x38
  429fe0:	mov	x0, x21
  429fe4:	bl	438ce8 <argp_parse@@Base+0x55a8>
  429fe8:	mov	x4, x0
  429fec:	mov	x3, x20
  429ff0:	mov	x2, x19
  429ff4:	mov	w1, w22
  429ff8:	mov	w0, #0x0                   	// #0
  429ffc:	bl	404050 <error@plt>
  42a000:	ldp	x19, x20, [sp, #16]
  42a004:	ldp	x21, x22, [sp, #32]
  42a008:	ldp	x29, x30, [sp], #80
  42a00c:	ret
  42a010:	stp	x29, x30, [sp, #-48]!
  42a014:	mov	x29, sp
  42a018:	stp	x19, x20, [sp, #16]
  42a01c:	stp	x21, x22, [sp, #32]
  42a020:	mov	x21, x0
  42a024:	mov	x20, x1
  42a028:	bl	404ad0 <__errno_location@plt>
  42a02c:	ldr	w22, [x0]
  42a030:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42a034:	ldr	x0, [x0, #944]
  42a038:	cbz	x0, 42a040 <wcrtomb@plt+0x25420>
  42a03c:	blr	x0
  42a040:	mov	w2, #0x5                   	// #5
  42a044:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42a048:	add	x1, x1, #0x558
  42a04c:	mov	x0, #0x0                   	// #0
  42a050:	bl	4049c0 <dcgettext@plt>
  42a054:	mov	x19, x0
  42a058:	mov	x0, x20
  42a05c:	bl	43efc4 <argp_parse@@Base+0xb884>
  42a060:	mov	x20, x0
  42a064:	mov	x1, x21
  42a068:	mov	w0, #0x1                   	// #1
  42a06c:	bl	43f17c <argp_parse@@Base+0xba3c>
  42a070:	mov	x4, x0
  42a074:	mov	x3, x20
  42a078:	mov	x2, x19
  42a07c:	mov	w1, w22
  42a080:	mov	w0, #0x0                   	// #0
  42a084:	bl	404050 <error@plt>
  42a088:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42a08c:	mov	w1, #0x2                   	// #2
  42a090:	str	w1, [x0, #3392]
  42a094:	ldp	x19, x20, [sp, #16]
  42a098:	ldp	x21, x22, [sp, #32]
  42a09c:	ldp	x29, x30, [sp], #48
  42a0a0:	ret
  42a0a4:	stp	x29, x30, [sp, #-16]!
  42a0a8:	mov	x29, sp
  42a0ac:	mov	x1, x0
  42a0b0:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42a0b4:	add	x0, x0, #0x578
  42a0b8:	bl	429848 <wcrtomb@plt+0x24c28>
  42a0bc:	stp	x29, x30, [sp, #-16]!
  42a0c0:	mov	x29, sp
  42a0c4:	mov	x1, x0
  42a0c8:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42a0cc:	add	x0, x0, #0x578
  42a0d0:	bl	4297c4 <wcrtomb@plt+0x24ba4>
  42a0d4:	ldp	x29, x30, [sp], #16
  42a0d8:	ret
  42a0dc:	stp	x29, x30, [sp, #-16]!
  42a0e0:	mov	x29, sp
  42a0e4:	mov	x1, x0
  42a0e8:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42a0ec:	add	x0, x0, #0x578
  42a0f0:	bl	4298b4 <wcrtomb@plt+0x24c94>
  42a0f4:	ldp	x29, x30, [sp], #16
  42a0f8:	ret
  42a0fc:	stp	x29, x30, [sp, #-16]!
  42a100:	mov	x29, sp
  42a104:	mov	x1, x0
  42a108:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42a10c:	add	x0, x0, #0x580
  42a110:	bl	4297c4 <wcrtomb@plt+0x24ba4>
  42a114:	ldp	x29, x30, [sp], #16
  42a118:	ret
  42a11c:	stp	x29, x30, [sp, #-16]!
  42a120:	mov	x29, sp
  42a124:	mov	x1, x0
  42a128:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42a12c:	add	x0, x0, #0x580
  42a130:	bl	4298b4 <wcrtomb@plt+0x24c94>
  42a134:	ldp	x29, x30, [sp], #16
  42a138:	ret
  42a13c:	stp	x29, x30, [sp, #-16]!
  42a140:	mov	x29, sp
  42a144:	mov	x1, x0
  42a148:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42a14c:	add	x0, x0, #0x590
  42a150:	bl	4297c4 <wcrtomb@plt+0x24ba4>
  42a154:	ldp	x29, x30, [sp], #16
  42a158:	ret
  42a15c:	stp	x29, x30, [sp, #-16]!
  42a160:	mov	x29, sp
  42a164:	mov	x1, x0
  42a168:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42a16c:	add	x0, x0, #0x598
  42a170:	bl	4297c4 <wcrtomb@plt+0x24ba4>
  42a174:	ldp	x29, x30, [sp], #16
  42a178:	ret
  42a17c:	stp	x29, x30, [sp, #-16]!
  42a180:	mov	x29, sp
  42a184:	mov	x1, x0
  42a188:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42a18c:	add	x0, x0, #0x5a0
  42a190:	bl	4297c4 <wcrtomb@plt+0x24ba4>
  42a194:	ldp	x29, x30, [sp], #16
  42a198:	ret
  42a19c:	stp	x29, x30, [sp, #-16]!
  42a1a0:	mov	x29, sp
  42a1a4:	mov	x1, x0
  42a1a8:	adrp	x0, 453000 <_obstack_memory_used@@Base+0x11e64>
  42a1ac:	add	x0, x0, #0x258
  42a1b0:	bl	4297c4 <wcrtomb@plt+0x24ba4>
  42a1b4:	ldp	x29, x30, [sp], #16
  42a1b8:	ret
  42a1bc:	stp	x29, x30, [sp, #-48]!
  42a1c0:	mov	x29, sp
  42a1c4:	str	x21, [sp, #32]
  42a1c8:	mov	x21, x0
  42a1cc:	cbz	x1, 42a244 <wcrtomb@plt+0x25624>
  42a1d0:	stp	x19, x20, [sp, #16]
  42a1d4:	mov	x19, x1
  42a1d8:	mov	x20, x2
  42a1dc:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42a1e0:	ldr	x0, [x0, #944]
  42a1e4:	cbz	x0, 42a1ec <wcrtomb@plt+0x255cc>
  42a1e8:	blr	x0
  42a1ec:	mov	w4, #0x5                   	// #5
  42a1f0:	mov	x3, x20
  42a1f4:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42a1f8:	add	x2, x2, #0x5a8
  42a1fc:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42a200:	add	x1, x1, #0x5c8
  42a204:	mov	x0, #0x0                   	// #0
  42a208:	bl	4048f0 <dcngettext@plt>
  42a20c:	mov	x5, x20
  42a210:	mov	x4, x19
  42a214:	mov	x3, x21
  42a218:	mov	x2, x0
  42a21c:	mov	w1, #0x0                   	// #0
  42a220:	mov	w0, #0x0                   	// #0
  42a224:	bl	404050 <error@plt>
  42a228:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42a22c:	mov	w1, #0x2                   	// #2
  42a230:	str	w1, [x0, #3392]
  42a234:	ldp	x19, x20, [sp, #16]
  42a238:	ldr	x21, [sp, #32]
  42a23c:	ldp	x29, x30, [sp], #48
  42a240:	ret
  42a244:	bl	42a19c <wcrtomb@plt+0x2557c>
  42a248:	b	42a238 <wcrtomb@plt+0x25618>
  42a24c:	stp	x29, x30, [sp, #-16]!
  42a250:	mov	x29, sp
  42a254:	mov	x1, x0
  42a258:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42a25c:	add	x0, x0, #0x5e8
  42a260:	bl	429848 <wcrtomb@plt+0x24c28>
  42a264:	stp	x29, x30, [sp, #-16]!
  42a268:	mov	x29, sp
  42a26c:	bl	404720 <strcmp@plt>
  42a270:	cmp	w0, #0x0
  42a274:	cset	w0, eq  // eq = none
  42a278:	ldp	x29, x30, [sp], #16
  42a27c:	ret
  42a280:	stp	x29, x30, [sp, #-16]!
  42a284:	mov	x29, sp
  42a288:	bl	437c40 <argp_parse@@Base+0x4500>
  42a28c:	ldp	x29, x30, [sp], #16
  42a290:	ret
  42a294:	stp	x29, x30, [sp, #-16]!
  42a298:	mov	x29, sp
  42a29c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42a2a0:	ldr	x0, [x0, #3400]
  42a2a4:	cbz	x0, 42a2b4 <wcrtomb@plt+0x25694>
  42a2a8:	bl	437870 <argp_parse@@Base+0x4130>
  42a2ac:	mov	w1, #0x1                   	// #1
  42a2b0:	cbnz	x0, 42a2d0 <wcrtomb@plt+0x256b0>
  42a2b4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42a2b8:	ldr	x0, [x0, #3408]
  42a2bc:	mov	w1, #0x0                   	// #0
  42a2c0:	cbz	x0, 42a2d0 <wcrtomb@plt+0x256b0>
  42a2c4:	bl	437870 <argp_parse@@Base+0x4130>
  42a2c8:	cmp	x0, #0x0
  42a2cc:	cset	w1, ne  // ne = any
  42a2d0:	mov	w0, w1
  42a2d4:	ldp	x29, x30, [sp], #16
  42a2d8:	ret
  42a2dc:	stp	x29, x30, [sp, #-64]!
  42a2e0:	mov	x29, sp
  42a2e4:	stp	x19, x20, [sp, #16]
  42a2e8:	stp	x21, x22, [sp, #32]
  42a2ec:	mov	x19, x0
  42a2f0:	and	w21, w1, #0xff
  42a2f4:	tst	w2, #0xff
  42a2f8:	b.ne	42a490 <wcrtomb@plt+0x25870>  // b.any
  42a2fc:	ldrb	w2, [x0]
  42a300:	cbz	w2, 42a438 <wcrtomb@plt+0x25818>
  42a304:	stp	x23, x24, [sp, #48]
  42a308:	mov	x1, x0
  42a30c:	mov	x3, #0x0                   	// #0
  42a310:	b	42a344 <wcrtomb@plt+0x25724>
  42a314:	ldrb	w0, [x1, #1]
  42a318:	cmp	w0, #0x2e
  42a31c:	b.ne	42a34c <wcrtomb@plt+0x2572c>  // b.any
  42a320:	mov	x0, x1
  42a324:	ldrb	w2, [x0, #2]!
  42a328:	cmp	w2, #0x2f
  42a32c:	sub	x0, x0, x19
  42a330:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  42a334:	csel	x3, x0, x3, eq  // eq = none
  42a338:	b	42a34c <wcrtomb@plt+0x2572c>
  42a33c:	ldrb	w2, [x1]
  42a340:	cbz	w2, 42a360 <wcrtomb@plt+0x25740>
  42a344:	cmp	w2, #0x2e
  42a348:	b.eq	42a314 <wcrtomb@plt+0x256f4>  // b.none
  42a34c:	ldrb	w2, [x1], #1
  42a350:	cmp	w2, #0x2f
  42a354:	b.eq	42a33c <wcrtomb@plt+0x2571c>  // b.none
  42a358:	ldrb	w2, [x1]
  42a35c:	cbnz	w2, 42a34c <wcrtomb@plt+0x2572c>
  42a360:	add	x20, x19, x3
  42a364:	ldrb	w0, [x19, x3]
  42a368:	cmp	w0, #0x2f
  42a36c:	b.eq	42a398 <wcrtomb@plt+0x25778>  // b.none
  42a370:	subs	x23, x20, x19
  42a374:	b.ne	42a3a8 <wcrtomb@plt+0x25788>  // b.any
  42a378:	ldp	x23, x24, [sp, #48]
  42a37c:	ldrb	w0, [x20]
  42a380:	cbnz	w0, 42a49c <wcrtomb@plt+0x2587c>
  42a384:	cmp	x20, x19
  42a388:	b.eq	42a440 <wcrtomb@plt+0x25820>  // b.none
  42a38c:	adrp	x20, 457000 <_obstack_memory_used@@Base+0x15e64>
  42a390:	add	x20, x20, #0x340
  42a394:	b	42a49c <wcrtomb@plt+0x2587c>
  42a398:	ldrb	w0, [x20, #1]!
  42a39c:	cmp	w0, #0x2f
  42a3a0:	b.ne	42a370 <wcrtomb@plt+0x25750>  // b.any
  42a3a4:	b	42a398 <wcrtomb@plt+0x25778>
  42a3a8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42a3ac:	add	x0, x0, #0xd48
  42a3b0:	ldr	x24, [x0, w21, sxtw #3]
  42a3b4:	add	x0, x23, #0x1
  42a3b8:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  42a3bc:	mov	x22, x0
  42a3c0:	mov	x2, x23
  42a3c4:	mov	x1, x19
  42a3c8:	bl	403f70 <memcpy@plt>
  42a3cc:	strb	wzr, [x22, x23]
  42a3d0:	cbz	x24, 42a400 <wcrtomb@plt+0x257e0>
  42a3d4:	mov	x1, x22
  42a3d8:	mov	x0, x24
  42a3dc:	bl	4381cc <argp_parse@@Base+0x4a8c>
  42a3e0:	mov	x23, x0
  42a3e4:	cbz	x0, 42a434 <wcrtomb@plt+0x25814>
  42a3e8:	cmp	x22, x0
  42a3ec:	b.eq	42a4b0 <wcrtomb@plt+0x25890>  // b.none
  42a3f0:	mov	x0, x22
  42a3f4:	bl	4047c0 <free@plt>
  42a3f8:	ldp	x23, x24, [sp, #48]
  42a3fc:	b	42a37c <wcrtomb@plt+0x2575c>
  42a400:	mov	x4, #0x0                   	// #0
  42a404:	adrp	x3, 42a000 <wcrtomb@plt+0x253e0>
  42a408:	add	x3, x3, #0x264
  42a40c:	adrp	x2, 42a000 <wcrtomb@plt+0x253e0>
  42a410:	add	x2, x2, #0x280
  42a414:	mov	x1, #0x0                   	// #0
  42a418:	mov	x0, #0x0                   	// #0
  42a41c:	bl	437c94 <argp_parse@@Base+0x4554>
  42a420:	mov	x24, x0
  42a424:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42a428:	add	x0, x0, #0xd48
  42a42c:	str	x24, [x0, w21, sxtw #3]
  42a430:	cbnz	x24, 42a3d4 <wcrtomb@plt+0x257b4>
  42a434:	bl	40e5ec <wcrtomb@plt+0x99cc>
  42a438:	mov	x20, x0
  42a43c:	b	42a37c <wcrtomb@plt+0x2575c>
  42a440:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42a444:	ldr	x0, [x0, #944]
  42a448:	cbz	x0, 42a450 <wcrtomb@plt+0x25830>
  42a44c:	blr	x0
  42a450:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42a454:	add	x0, x0, #0x6a0
  42a458:	add	x21, x0, w21, sxtw #3
  42a45c:	mov	w2, #0x5                   	// #5
  42a460:	ldr	x1, [x21, #16]
  42a464:	mov	x0, #0x0                   	// #0
  42a468:	bl	4049c0 <dcgettext@plt>
  42a46c:	mov	x3, x0
  42a470:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x12e64>
  42a474:	add	x2, x2, #0x848
  42a478:	mov	w1, #0x0                   	// #0
  42a47c:	mov	w0, #0x0                   	// #0
  42a480:	bl	404050 <error@plt>
  42a484:	adrp	x20, 457000 <_obstack_memory_used@@Base+0x15e64>
  42a488:	add	x20, x20, #0x340
  42a48c:	b	42a49c <wcrtomb@plt+0x2587c>
  42a490:	ldrb	w0, [x0]
  42a494:	mov	x20, x19
  42a498:	cbz	w0, 42a440 <wcrtomb@plt+0x25820>
  42a49c:	mov	x0, x20
  42a4a0:	ldp	x19, x20, [sp, #16]
  42a4a4:	ldp	x21, x22, [sp, #32]
  42a4a8:	ldp	x29, x30, [sp], #64
  42a4ac:	ret
  42a4b0:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  42a4b4:	ldr	x0, [x0, #944]
  42a4b8:	cbz	x0, 42a4c0 <wcrtomb@plt+0x258a0>
  42a4bc:	blr	x0
  42a4c0:	mov	w2, #0x5                   	// #5
  42a4c4:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42a4c8:	add	x0, x0, #0x6a0
  42a4cc:	ldr	x1, [x0, w21, sxtw #3]
  42a4d0:	mov	x0, #0x0                   	// #0
  42a4d4:	bl	4049c0 <dcgettext@plt>
  42a4d8:	mov	x3, x23
  42a4dc:	mov	x2, x0
  42a4e0:	mov	w1, #0x0                   	// #0
  42a4e4:	mov	w0, #0x0                   	// #0
  42a4e8:	bl	404050 <error@plt>
  42a4ec:	ldp	x23, x24, [sp, #48]
  42a4f0:	b	42a37c <wcrtomb@plt+0x2575c>
  42a4f4:	stp	x29, x30, [sp, #-48]!
  42a4f8:	mov	x29, sp
  42a4fc:	stp	x19, x20, [sp, #16]
  42a500:	stp	x21, x22, [sp, #32]
  42a504:	mov	w22, w1
  42a508:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42a50c:	add	x20, x20, #0x218
  42a510:	sbfiz	x19, x0, #3, #32
  42a514:	ldr	w0, [x20, x19]
  42a518:	bl	4045d0 <close@plt>
  42a51c:	add	x21, x20, #0x20
  42a520:	add	x21, x21, x19
  42a524:	ldr	w0, [x21, #4]
  42a528:	bl	4045d0 <close@plt>
  42a52c:	mov	w0, #0xffffffff            	// #-1
  42a530:	str	w0, [x20, x19]
  42a534:	str	w0, [x21, #4]
  42a538:	bl	404ad0 <__errno_location@plt>
  42a53c:	str	w22, [x0]
  42a540:	ldp	x19, x20, [sp, #16]
  42a544:	ldp	x21, x22, [sp, #32]
  42a548:	ldp	x29, x30, [sp], #48
  42a54c:	ret
  42a550:	stp	x29, x30, [sp, #-48]!
  42a554:	mov	x29, sp
  42a558:	stp	x19, x20, [sp, #16]
  42a55c:	stp	x21, x22, [sp, #32]
  42a560:	mov	w21, w0
  42a564:	mov	x20, x1
  42a568:	mov	x0, x1
  42a56c:	bl	403ff0 <strlen@plt>
  42a570:	mov	x19, x0
  42a574:	mov	x1, #0x1                   	// #1
  42a578:	mov	w0, #0xd                   	// #13
  42a57c:	bl	404270 <signal@plt>
  42a580:	mov	x22, x0
  42a584:	adrp	x3, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42a588:	add	x3, x3, #0x218
  42a58c:	add	x3, x3, w21, sxtw #3
  42a590:	mov	x2, x19
  42a594:	mov	x1, x20
  42a598:	ldr	w0, [x3, #36]
  42a59c:	bl	437354 <argp_parse@@Base+0x3c14>
  42a5a0:	mov	x20, x0
  42a5a4:	mov	x1, x22
  42a5a8:	mov	w0, #0xd                   	// #13
  42a5ac:	bl	404270 <signal@plt>
  42a5b0:	mov	w0, #0x0                   	// #0
  42a5b4:	cmp	x20, x19
  42a5b8:	b.ne	42a5cc <wcrtomb@plt+0x259ac>  // b.any
  42a5bc:	ldp	x19, x20, [sp, #16]
  42a5c0:	ldp	x21, x22, [sp, #32]
  42a5c4:	ldp	x29, x30, [sp], #48
  42a5c8:	ret
  42a5cc:	mov	w1, #0x5                   	// #5
  42a5d0:	mov	w0, w21
  42a5d4:	bl	42a4f4 <wcrtomb@plt+0x258d4>
  42a5d8:	mov	w0, #0xffffffff            	// #-1
  42a5dc:	b	42a5bc <wcrtomb@plt+0x2599c>
  42a5e0:	stp	x29, x30, [sp, #-80]!
  42a5e4:	mov	x29, sp
  42a5e8:	stp	x19, x20, [sp, #16]
  42a5ec:	stp	x21, x22, [sp, #32]
  42a5f0:	stp	x23, x24, [sp, #48]
  42a5f4:	mov	w23, w0
  42a5f8:	mov	x21, x1
  42a5fc:	mov	x19, x1
  42a600:	mov	w20, #0x0                   	// #0
  42a604:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42a608:	add	x22, x22, #0x218
  42a60c:	add	x22, x22, w0, sxtw #3
  42a610:	mov	x24, #0x1                   	// #1
  42a614:	mov	x2, x24
  42a618:	mov	x1, x19
  42a61c:	ldr	w0, [x22]
  42a620:	bl	43f41c <argp_parse@@Base+0xbcdc>
  42a624:	cmp	x0, #0x1
  42a628:	b.ne	42a65c <wcrtomb@plt+0x25a3c>  // b.any
  42a62c:	ldrb	w2, [x19]
  42a630:	cmp	w2, #0xa
  42a634:	b.eq	42a680 <wcrtomb@plt+0x25a60>  // b.none
  42a638:	add	w20, w20, #0x1
  42a63c:	add	x19, x19, #0x1
  42a640:	cmp	w20, #0x40
  42a644:	b.ne	42a614 <wcrtomb@plt+0x259f4>  // b.any
  42a648:	mov	w1, #0x5                   	// #5
  42a64c:	mov	w0, w23
  42a650:	bl	42a4f4 <wcrtomb@plt+0x258d4>
  42a654:	mov	x0, #0x0                   	// #0
  42a658:	b	42a66c <wcrtomb@plt+0x25a4c>
  42a65c:	mov	w1, #0x5                   	// #5
  42a660:	mov	w0, w23
  42a664:	bl	42a4f4 <wcrtomb@plt+0x258d4>
  42a668:	mov	x0, #0x0                   	// #0
  42a66c:	ldp	x19, x20, [sp, #16]
  42a670:	ldp	x21, x22, [sp, #32]
  42a674:	ldp	x23, x24, [sp, #48]
  42a678:	ldp	x29, x30, [sp], #80
  42a67c:	ret
  42a680:	strb	wzr, [x19]
  42a684:	cmp	w20, #0x40
  42a688:	b.eq	42a648 <wcrtomb@plt+0x25a28>  // b.none
  42a68c:	ldrb	w1, [x21]
  42a690:	cmp	w1, #0x20
  42a694:	b.ne	42a6a4 <wcrtomb@plt+0x25a84>  // b.any
  42a698:	ldrb	w1, [x21, #1]!
  42a69c:	cmp	w1, #0x20
  42a6a0:	b.eq	42a698 <wcrtomb@plt+0x25a78>  // b.none
  42a6a4:	sub	w0, w1, #0x45
  42a6a8:	and	w0, w0, #0xff
  42a6ac:	cmp	w0, #0x1
  42a6b0:	b.ls	42a6d4 <wcrtomb@plt+0x25ab4>  // b.plast
  42a6b4:	add	x0, x21, #0x1
  42a6b8:	cmp	w1, #0x41
  42a6bc:	b.eq	42a66c <wcrtomb@plt+0x25a4c>  // b.none
  42a6c0:	mov	w1, #0x5                   	// #5
  42a6c4:	mov	w0, w23
  42a6c8:	bl	42a4f4 <wcrtomb@plt+0x258d4>
  42a6cc:	mov	x0, #0x0                   	// #0
  42a6d0:	b	42a66c <wcrtomb@plt+0x25a4c>
  42a6d4:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42a6d8:	add	x19, x19, #0x218
  42a6dc:	add	x19, x19, w23, sxtw #3
  42a6e0:	mov	x20, #0x1                   	// #1
  42a6e4:	mov	x2, x20
  42a6e8:	add	x1, sp, #0x4f
  42a6ec:	ldr	w0, [x19]
  42a6f0:	bl	43f41c <argp_parse@@Base+0xbcdc>
  42a6f4:	cmp	x0, #0x1
  42a6f8:	b.ne	42a708 <wcrtomb@plt+0x25ae8>  // b.any
  42a6fc:	ldrb	w0, [sp, #79]
  42a700:	cmp	w0, #0xa
  42a704:	b.ne	42a6e4 <wcrtomb@plt+0x25ac4>  // b.any
  42a708:	bl	404ad0 <__errno_location@plt>
  42a70c:	mov	x19, x0
  42a710:	mov	w2, #0xa                   	// #10
  42a714:	mov	x1, #0x0                   	// #0
  42a718:	add	x0, x21, #0x1
  42a71c:	bl	404780 <strtol@plt>
  42a720:	mov	x1, x0
  42a724:	str	w0, [x19]
  42a728:	ldrb	w2, [x21]
  42a72c:	mov	x0, #0x0                   	// #0
  42a730:	cmp	w2, #0x46
  42a734:	b.ne	42a66c <wcrtomb@plt+0x25a4c>  // b.any
  42a738:	mov	w0, w23
  42a73c:	bl	42a4f4 <wcrtomb@plt+0x258d4>
  42a740:	mov	x0, #0x0                   	// #0
  42a744:	b	42a66c <wcrtomb@plt+0x25a4c>
  42a748:	stp	x29, x30, [sp, #-80]!
  42a74c:	mov	x29, sp
  42a750:	add	x1, sp, #0x10
  42a754:	bl	42a5e0 <wcrtomb@plt+0x259c0>
  42a758:	cbz	x0, 42a788 <wcrtomb@plt+0x25b68>
  42a75c:	mov	w2, #0xa                   	// #10
  42a760:	mov	x1, #0x0                   	// #0
  42a764:	bl	404780 <strtol@plt>
  42a768:	tbnz	x0, #63, 42a774 <wcrtomb@plt+0x25b54>
  42a76c:	ldp	x29, x30, [sp], #80
  42a770:	ret
  42a774:	bl	404ad0 <__errno_location@plt>
  42a778:	mov	w1, #0x5                   	// #5
  42a77c:	str	w1, [x0]
  42a780:	mov	x0, #0xffffffffffffffff    	// #-1
  42a784:	b	42a76c <wcrtomb@plt+0x25b4c>
  42a788:	mov	x0, #0xffffffffffffffff    	// #-1
  42a78c:	b	42a76c <wcrtomb@plt+0x25b4c>
  42a790:	stp	x29, x30, [sp, #-96]!
  42a794:	mov	x29, sp
  42a798:	stp	x19, x20, [sp, #16]
  42a79c:	stp	x21, x22, [sp, #32]
  42a7a0:	stp	x23, x24, [sp, #48]
  42a7a4:	stp	x25, x26, [sp, #64]
  42a7a8:	stp	x27, x28, [sp, #80]
  42a7ac:	mov	w20, w1
  42a7b0:	mov	w22, w2
  42a7b4:	mov	x21, x3
  42a7b8:	mov	x4, #0x0                   	// #0
  42a7bc:	adrp	x6, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42a7c0:	add	x6, x6, #0x218
  42a7c4:	add	x3, x6, #0x20
  42a7c8:	b	42a7dc <wcrtomb@plt+0x25bbc>
  42a7cc:	add	w19, w2, #0x1
  42a7d0:	add	x4, x4, #0x1
  42a7d4:	cmp	x4, #0x4
  42a7d8:	b.eq	42a804 <wcrtomb@plt+0x25be4>  // b.none
  42a7dc:	mov	w2, w4
  42a7e0:	mov	w19, w4
  42a7e4:	lsl	x5, x4, #3
  42a7e8:	ldr	w1, [x5, x6]
  42a7ec:	cmn	w1, #0x1
  42a7f0:	b.ne	42a7cc <wcrtomb@plt+0x25bac>  // b.any
  42a7f4:	add	x5, x3, x5
  42a7f8:	ldr	w1, [x5, #4]
  42a7fc:	cmn	w1, #0x1
  42a800:	b.ne	42a7cc <wcrtomb@plt+0x25bac>  // b.any
  42a804:	cmp	w19, #0x4
  42a808:	b.eq	42a830 <wcrtomb@plt+0x25c10>  // b.none
  42a80c:	bl	440154 <argp_parse@@Base+0xca14>
  42a810:	mov	x23, x0
  42a814:	ldrb	w4, [x0]
  42a818:	cbz	w4, 42ae0c <wcrtomb@plt+0x261ec>
  42a81c:	mov	x1, x0
  42a820:	mov	x26, x0
  42a824:	mov	x25, #0x0                   	// #0
  42a828:	mov	x24, #0x0                   	// #0
  42a82c:	b	42a850 <wcrtomb@plt+0x25c30>
  42a830:	bl	404ad0 <__errno_location@plt>
  42a834:	mov	w1, #0x18                  	// #24
  42a838:	str	w1, [x0]
  42a83c:	mov	w27, #0xffffffff            	// #-1
  42a840:	b	42a880 <wcrtomb@plt+0x25c60>
  42a844:	cbz	x25, 42a8a0 <wcrtomb@plt+0x25c80>
  42a848:	ldrb	w4, [x1, #1]!
  42a84c:	cbz	w4, 42a8c4 <wcrtomb@plt+0x25ca4>
  42a850:	cmp	w4, #0x3a
  42a854:	b.eq	42a8b4 <wcrtomb@plt+0x25c94>  // b.none
  42a858:	cmp	w4, #0x40
  42a85c:	b.eq	42a844 <wcrtomb@plt+0x25c24>  // b.none
  42a860:	cmp	w4, #0xa
  42a864:	b.ne	42a848 <wcrtomb@plt+0x25c28>  // b.any
  42a868:	mov	x0, x23
  42a86c:	bl	4047c0 <free@plt>
  42a870:	bl	404ad0 <__errno_location@plt>
  42a874:	mov	w1, #0x2                   	// #2
  42a878:	str	w1, [x0]
  42a87c:	mov	w27, #0xffffffff            	// #-1
  42a880:	mov	w0, w27
  42a884:	ldp	x19, x20, [sp, #16]
  42a888:	ldp	x21, x22, [sp, #32]
  42a88c:	ldp	x23, x24, [sp, #48]
  42a890:	ldp	x25, x26, [sp, #64]
  42a894:	ldp	x27, x28, [sp, #80]
  42a898:	ldp	x29, x30, [sp], #96
  42a89c:	ret
  42a8a0:	mov	x0, x1
  42a8a4:	strb	wzr, [x0], #1
  42a8a8:	mov	x25, x26
  42a8ac:	mov	x26, x0
  42a8b0:	b	42a848 <wcrtomb@plt+0x25c28>
  42a8b4:	cbnz	x24, 42a848 <wcrtomb@plt+0x25c28>
  42a8b8:	mov	x24, x1
  42a8bc:	strb	wzr, [x24], #1
  42a8c0:	b	42a848 <wcrtomb@plt+0x25c28>
  42a8c4:	mov	x0, x26
  42a8c8:	bl	404bc0 <gethostbyname@plt>
  42a8cc:	cbz	x0, 42aafc <wcrtomb@plt+0x25edc>
  42a8d0:	cbz	x25, 42a8e0 <wcrtomb@plt+0x25cc0>
  42a8d4:	ldrb	w0, [x25]
  42a8d8:	cmp	w0, #0x0
  42a8dc:	csel	x25, x25, xzr, ne  // ne = any
  42a8e0:	cbz	x21, 42ab28 <wcrtomb@plt+0x25f08>
  42a8e4:	mov	x0, x21
  42a8e8:	bl	434ae4 <argp_parse@@Base+0x13a4>
  42a8ec:	mov	x28, x0
  42a8f0:	sbfiz	x27, x19, #3, #32
  42a8f4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42a8f8:	add	x0, x0, #0x218
  42a8fc:	add	x0, x0, #0x20
  42a900:	add	x0, x0, x27
  42a904:	bl	404130 <pipe@plt>
  42a908:	cmn	w0, #0x1
  42a90c:	b.eq	42ab44 <wcrtomb@plt+0x25f24>  // b.none
  42a910:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42a914:	add	x0, x0, #0x218
  42a918:	add	x0, x0, x27
  42a91c:	bl	404130 <pipe@plt>
  42a920:	cmn	w0, #0x1
  42a924:	b.eq	42ab44 <wcrtomb@plt+0x25f24>  // b.none
  42a928:	bl	4041c0 <fork@plt>
  42a92c:	mov	w27, w0
  42a930:	cmn	w0, #0x1
  42a934:	b.eq	42ab54 <wcrtomb@plt+0x25f34>  // b.none
  42a938:	cbnz	w0, 42aa40 <wcrtomb@plt+0x25e20>
  42a93c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42a940:	add	x0, x0, #0x218
  42a944:	add	x0, x0, w19, sxtw #3
  42a948:	mov	w1, #0x0                   	// #0
  42a94c:	ldr	w0, [x0, #32]
  42a950:	bl	404a30 <dup2@plt>
  42a954:	tbnz	w0, #31, 42a9a4 <wcrtomb@plt+0x25d84>
  42a958:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42a95c:	add	x0, x0, #0x218
  42a960:	add	x0, x0, w19, sxtw #3
  42a964:	ldr	w0, [x0, #32]
  42a968:	cbnz	w0, 42ab60 <wcrtomb@plt+0x25f40>
  42a96c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42a970:	add	x0, x0, #0x218
  42a974:	add	x0, x0, w19, sxtw #3
  42a978:	ldr	w0, [x0, #36]
  42a97c:	cbz	w0, 42a988 <wcrtomb@plt+0x25d68>
  42a980:	bl	4045d0 <close@plt>
  42a984:	cbnz	w0, 42a9a4 <wcrtomb@plt+0x25d84>
  42a988:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42a98c:	add	x0, x0, #0x218
  42a990:	add	x0, x0, w19, sxtw #3
  42a994:	mov	w1, #0x1                   	// #1
  42a998:	ldr	w0, [x0, #4]
  42a99c:	bl	404a30 <dup2@plt>
  42a9a0:	tbz	w0, #31, 42ab6c <wcrtomb@plt+0x25f4c>
  42a9a4:	bl	404ad0 <__errno_location@plt>
  42a9a8:	ldr	w27, [x0]
  42a9ac:	mov	w2, #0x5                   	// #5
  42a9b0:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42a9b4:	add	x1, x1, #0x6e8
  42a9b8:	mov	x0, #0x0                   	// #0
  42a9bc:	bl	4049c0 <dcgettext@plt>
  42a9c0:	mov	x2, x0
  42a9c4:	mov	w1, w27
  42a9c8:	mov	w0, #0x80                  	// #128
  42a9cc:	bl	404050 <error@plt>
  42a9d0:	bl	404120 <getuid@plt>
  42a9d4:	bl	403fb0 <setuid@plt>
  42a9d8:	cbnz	w0, 42aba0 <wcrtomb@plt+0x25f80>
  42a9dc:	bl	404800 <getgid@plt>
  42a9e0:	bl	404670 <setgid@plt>
  42a9e4:	cbnz	w0, 42aba0 <wcrtomb@plt+0x25f80>
  42a9e8:	cbz	x25, 42aba4 <wcrtomb@plt+0x25f84>
  42a9ec:	mov	x6, #0x0                   	// #0
  42a9f0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42a9f4:	ldr	x5, [x0, #600]
  42a9f8:	mov	x4, x25
  42a9fc:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42aa00:	add	x3, x3, #0x710
  42aa04:	mov	x2, x26
  42aa08:	mov	x1, x28
  42aa0c:	mov	x0, x21
  42aa10:	bl	404080 <execl@plt>
  42aa14:	bl	404ad0 <__errno_location@plt>
  42aa18:	ldr	w21, [x0]
  42aa1c:	mov	w2, #0x5                   	// #5
  42aa20:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42aa24:	add	x1, x1, #0x718
  42aa28:	mov	x0, #0x0                   	// #0
  42aa2c:	bl	4049c0 <dcgettext@plt>
  42aa30:	mov	x2, x0
  42aa34:	mov	w1, w21
  42aa38:	mov	w0, #0x80                  	// #128
  42aa3c:	bl	404050 <error@plt>
  42aa40:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42aa44:	add	x21, x21, #0x218
  42aa48:	sbfiz	x25, x19, #3, #32
  42aa4c:	add	x0, x21, x25
  42aa50:	ldr	w0, [x0, #4]
  42aa54:	bl	4045d0 <close@plt>
  42aa58:	add	x21, x21, #0x20
  42aa5c:	ldr	w0, [x21, x25]
  42aa60:	bl	4045d0 <close@plt>
  42aa64:	mov	x0, x24
  42aa68:	bl	403ff0 <strlen@plt>
  42aa6c:	mov	x21, x0
  42aa70:	add	x0, x0, #0x3e8
  42aa74:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  42aa78:	mov	x25, x0
  42aa7c:	mov	x4, x24
  42aa80:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42aa84:	add	x3, x3, #0x738
  42aa88:	mov	x2, #0xffffffffffffffff    	// #-1
  42aa8c:	mov	w1, #0x1                   	// #1
  42aa90:	bl	404010 <__sprintf_chk@plt>
  42aa94:	add	x21, x21, #0x2
  42aa98:	add	x21, x25, x21
  42aa9c:	mov	w4, w20
  42aaa0:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42aaa4:	add	x3, x3, #0x740
  42aaa8:	mov	x2, #0xffffffffffffffff    	// #-1
  42aaac:	mov	w1, #0x1                   	// #1
  42aab0:	mov	x0, x21
  42aab4:	bl	404010 <__sprintf_chk@plt>
  42aab8:	and	w0, w20, #0x3
  42aabc:	cmp	w0, #0x1
  42aac0:	b.eq	42ac60 <wcrtomb@plt+0x26040>  // b.none
  42aac4:	cmp	w0, #0x2
  42aac8:	b.ne	42abc4 <wcrtomb@plt+0x25fa4>  // b.any
  42aacc:	mov	x0, x21
  42aad0:	bl	403ff0 <strlen@plt>
  42aad4:	add	x2, x21, x0
  42aad8:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42aadc:	add	x1, x1, #0x758
  42aae0:	ldr	w3, [x1]
  42aae4:	str	w3, [x21, x0]
  42aae8:	ldur	w0, [x1, #3]
  42aaec:	stur	w0, [x2, #3]
  42aaf0:	b	42abec <wcrtomb@plt+0x25fcc>
  42aaf4:	mov	x25, x24
  42aaf8:	mov	x26, x23
  42aafc:	mov	w2, #0x5                   	// #5
  42ab00:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42ab04:	add	x1, x1, #0x6c0
  42ab08:	mov	x0, #0x0                   	// #0
  42ab0c:	bl	4049c0 <dcgettext@plt>
  42ab10:	mov	x3, x26
  42ab14:	mov	x2, x0
  42ab18:	mov	w1, #0x0                   	// #0
  42ab1c:	mov	w0, #0x80                  	// #128
  42ab20:	bl	404050 <error@plt>
  42ab24:	b	42a8d0 <wcrtomb@plt+0x25cb0>
  42ab28:	mov	x0, x23
  42ab2c:	bl	4047c0 <free@plt>
  42ab30:	bl	404ad0 <__errno_location@plt>
  42ab34:	mov	w1, #0x5                   	// #5
  42ab38:	str	w1, [x0]
  42ab3c:	mov	w27, #0xffffffff            	// #-1
  42ab40:	b	42a880 <wcrtomb@plt+0x25c60>
  42ab44:	mov	x0, x23
  42ab48:	bl	4047c0 <free@plt>
  42ab4c:	mov	w27, #0xffffffff            	// #-1
  42ab50:	b	42a880 <wcrtomb@plt+0x25c60>
  42ab54:	mov	x0, x23
  42ab58:	bl	4047c0 <free@plt>
  42ab5c:	b	42a880 <wcrtomb@plt+0x25c60>
  42ab60:	bl	4045d0 <close@plt>
  42ab64:	cbnz	w0, 42a9a4 <wcrtomb@plt+0x25d84>
  42ab68:	b	42a96c <wcrtomb@plt+0x25d4c>
  42ab6c:	sbfiz	x0, x19, #3, #32
  42ab70:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42ab74:	add	x1, x1, #0x218
  42ab78:	ldr	w0, [x1, x0]
  42ab7c:	bl	4045d0 <close@plt>
  42ab80:	cbnz	w0, 42a9a4 <wcrtomb@plt+0x25d84>
  42ab84:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42ab88:	add	x0, x0, #0x218
  42ab8c:	add	x0, x0, w19, sxtw #3
  42ab90:	ldr	w0, [x0, #4]
  42ab94:	bl	4045d0 <close@plt>
  42ab98:	cbz	w0, 42a9d0 <wcrtomb@plt+0x25db0>
  42ab9c:	b	42a9a4 <wcrtomb@plt+0x25d84>
  42aba0:	bl	404660 <abort@plt>
  42aba4:	mov	x4, #0x0                   	// #0
  42aba8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42abac:	ldr	x3, [x0, #600]
  42abb0:	mov	x2, x26
  42abb4:	mov	x1, x28
  42abb8:	mov	x0, x21
  42abbc:	bl	404080 <execl@plt>
  42abc0:	b	42aa14 <wcrtomb@plt+0x25df4>
  42abc4:	cbnz	w0, 42ac88 <wcrtomb@plt+0x26068>
  42abc8:	mov	x0, x21
  42abcc:	bl	403ff0 <strlen@plt>
  42abd0:	add	x2, x21, x0
  42abd4:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42abd8:	add	x1, x1, #0x748
  42abdc:	ldr	x3, [x1]
  42abe0:	str	x3, [x21, x0]
  42abe4:	ldrb	w0, [x1, #8]
  42abe8:	strb	w0, [x2, #8]
  42abec:	tbnz	w20, #10, 42ac8c <wcrtomb@plt+0x2606c>
  42abf0:	tbnz	w20, #6, 42acb4 <wcrtomb@plt+0x26094>
  42abf4:	tbnz	w20, #12, 42acdc <wcrtomb@plt+0x260bc>
  42abf8:	tbnz	w20, #7, 42ad04 <wcrtomb@plt+0x260e4>
  42abfc:	tbnz	w20, #8, 42ad24 <wcrtomb@plt+0x26104>
  42ac00:	tbnz	w20, #11, 42ad4c <wcrtomb@plt+0x2612c>
  42ac04:	and	w0, w20, #0x1ff000
  42ac08:	and	w0, w0, #0xfff01fff
  42ac0c:	cbnz	w0, 42ad74 <wcrtomb@plt+0x26154>
  42ac10:	tbnz	w20, #9, 42adb8 <wcrtomb@plt+0x26198>
  42ac14:	mov	x0, x25
  42ac18:	bl	403ff0 <strlen@plt>
  42ac1c:	mov	w1, #0xa                   	// #10
  42ac20:	strh	w1, [x25, x0]
  42ac24:	mov	x1, x25
  42ac28:	mov	w0, w19
  42ac2c:	bl	42a550 <wcrtomb@plt+0x25930>
  42ac30:	cmn	w0, #0x1
  42ac34:	b.eq	42ade0 <wcrtomb@plt+0x261c0>  // b.none
  42ac38:	mov	w0, w19
  42ac3c:	bl	42a748 <wcrtomb@plt+0x25b28>
  42ac40:	cmn	x0, #0x1
  42ac44:	b.eq	42ade0 <wcrtomb@plt+0x261c0>  // b.none
  42ac48:	mov	x0, x25
  42ac4c:	bl	4047c0 <free@plt>
  42ac50:	mov	x0, x23
  42ac54:	bl	4047c0 <free@plt>
  42ac58:	add	w27, w22, w19
  42ac5c:	b	42a880 <wcrtomb@plt+0x25c60>
  42ac60:	mov	x0, x21
  42ac64:	bl	403ff0 <strlen@plt>
  42ac68:	add	x2, x21, x0
  42ac6c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42ac70:	add	x1, x1, #0x760
  42ac74:	ldr	x3, [x1]
  42ac78:	str	x3, [x21, x0]
  42ac7c:	ldrb	w0, [x1, #8]
  42ac80:	strb	w0, [x2, #8]
  42ac84:	b	42abec <wcrtomb@plt+0x25fcc>
  42ac88:	bl	404660 <abort@plt>
  42ac8c:	mov	x0, x21
  42ac90:	bl	403ff0 <strlen@plt>
  42ac94:	add	x2, x21, x0
  42ac98:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42ac9c:	add	x1, x1, #0x770
  42aca0:	ldr	x3, [x1]
  42aca4:	str	x3, [x21, x0]
  42aca8:	ldrh	w0, [x1, #8]
  42acac:	strh	w0, [x2, #8]
  42acb0:	b	42abf0 <wcrtomb@plt+0x25fd0>
  42acb4:	mov	x0, x21
  42acb8:	bl	403ff0 <strlen@plt>
  42acbc:	add	x2, x21, x0
  42acc0:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42acc4:	add	x1, x1, #0x780
  42acc8:	ldr	x3, [x1]
  42accc:	str	x3, [x21, x0]
  42acd0:	ldrb	w0, [x1, #8]
  42acd4:	strb	w0, [x2, #8]
  42acd8:	b	42abf4 <wcrtomb@plt+0x25fd4>
  42acdc:	mov	x0, x21
  42ace0:	bl	403ff0 <strlen@plt>
  42ace4:	add	x2, x21, x0
  42ace8:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42acec:	add	x1, x1, #0x790
  42acf0:	ldr	x3, [x1]
  42acf4:	str	x3, [x21, x0]
  42acf8:	ldrb	w0, [x1, #8]
  42acfc:	strb	w0, [x2, #8]
  42ad00:	b	42abf8 <wcrtomb@plt+0x25fd8>
  42ad04:	mov	x0, x21
  42ad08:	bl	403ff0 <strlen@plt>
  42ad0c:	mov	x1, #0x4f7c                	// #20348
  42ad10:	movk	x1, #0x455f, lsl #16
  42ad14:	movk	x1, #0x4358, lsl #32
  42ad18:	movk	x1, #0x4c, lsl #48
  42ad1c:	str	x1, [x21, x0]
  42ad20:	b	42abfc <wcrtomb@plt+0x25fdc>
  42ad24:	mov	x0, x21
  42ad28:	bl	403ff0 <strlen@plt>
  42ad2c:	add	x2, x21, x0
  42ad30:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42ad34:	add	x1, x1, #0x7a0
  42ad38:	ldr	x3, [x1]
  42ad3c:	str	x3, [x21, x0]
  42ad40:	ldrh	w0, [x1, #8]
  42ad44:	strh	w0, [x2, #8]
  42ad48:	b	42ac00 <wcrtomb@plt+0x25fe0>
  42ad4c:	mov	x0, x21
  42ad50:	bl	403ff0 <strlen@plt>
  42ad54:	add	x2, x21, x0
  42ad58:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42ad5c:	add	x1, x1, #0x7b0
  42ad60:	ldr	x3, [x1]
  42ad64:	str	x3, [x21, x0]
  42ad68:	ldr	w0, [x1, #8]
  42ad6c:	str	w0, [x2, #8]
  42ad70:	b	42ac04 <wcrtomb@plt+0x25fe4>
  42ad74:	mov	x0, x21
  42ad78:	bl	403ff0 <strlen@plt>
  42ad7c:	add	x2, x21, x0
  42ad80:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42ad84:	add	x1, x1, #0x7c0
  42ad88:	ldr	x3, [x1]
  42ad8c:	str	x3, [x21, x0]
  42ad90:	ldrb	w0, [x1, #8]
  42ad94:	strb	w0, [x2, #8]
  42ad98:	mov	x0, x21
  42ad9c:	bl	403ff0 <strlen@plt>
  42ada0:	mov	x1, #0x4f7c                	// #20348
  42ada4:	movk	x1, #0x535f, lsl #16
  42ada8:	movk	x1, #0x4e59, lsl #32
  42adac:	movk	x1, #0x43, lsl #48
  42adb0:	str	x1, [x21, x0]
  42adb4:	b	42ac10 <wcrtomb@plt+0x25ff0>
  42adb8:	mov	x0, x21
  42adbc:	bl	403ff0 <strlen@plt>
  42adc0:	add	x2, x21, x0
  42adc4:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42adc8:	add	x1, x1, #0x7d0
  42adcc:	ldr	x3, [x1]
  42add0:	str	x3, [x21, x0]
  42add4:	ldrb	w0, [x1, #8]
  42add8:	strb	w0, [x2, #8]
  42addc:	b	42ac14 <wcrtomb@plt+0x25ff4>
  42ade0:	bl	404ad0 <__errno_location@plt>
  42ade4:	ldr	w20, [x0]
  42ade8:	mov	x0, x25
  42adec:	bl	4047c0 <free@plt>
  42adf0:	mov	x0, x23
  42adf4:	bl	4047c0 <free@plt>
  42adf8:	mov	w1, w20
  42adfc:	mov	w0, w19
  42ae00:	bl	42a4f4 <wcrtomb@plt+0x258d4>
  42ae04:	mov	w27, #0xffffffff            	// #-1
  42ae08:	b	42a880 <wcrtomb@plt+0x25c60>
  42ae0c:	bl	404bc0 <gethostbyname@plt>
  42ae10:	mov	x24, x0
  42ae14:	cbz	x0, 42aaf4 <wcrtomb@plt+0x25ed4>
  42ae18:	mov	x26, x23
  42ae1c:	mov	x24, #0x0                   	// #0
  42ae20:	mov	x25, #0x0                   	// #0
  42ae24:	b	42a8e0 <wcrtomb@plt+0x25cc0>
  42ae28:	stp	x29, x30, [sp, #-32]!
  42ae2c:	mov	x29, sp
  42ae30:	stp	x19, x20, [sp, #16]
  42ae34:	mov	w20, w0
  42ae38:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42ae3c:	add	x1, x1, #0x7e0
  42ae40:	bl	42a550 <wcrtomb@plt+0x25930>
  42ae44:	cmn	w0, #0x1
  42ae48:	b.eq	42ae6c <wcrtomb@plt+0x2624c>  // b.none
  42ae4c:	mov	w0, w20
  42ae50:	bl	42a748 <wcrtomb@plt+0x25b28>
  42ae54:	mov	x19, x0
  42ae58:	bl	404ad0 <__errno_location@plt>
  42ae5c:	ldr	w1, [x0]
  42ae60:	mov	w0, w20
  42ae64:	bl	42a4f4 <wcrtomb@plt+0x258d4>
  42ae68:	mov	w0, w19
  42ae6c:	ldp	x19, x20, [sp, #16]
  42ae70:	ldp	x29, x30, [sp], #32
  42ae74:	ret
  42ae78:	stp	x29, x30, [sp, #-128]!
  42ae7c:	mov	x29, sp
  42ae80:	stp	x19, x20, [sp, #16]
  42ae84:	stp	x21, x22, [sp, #32]
  42ae88:	str	x23, [sp, #48]
  42ae8c:	mov	w23, w0
  42ae90:	mov	x20, x1
  42ae94:	mov	x19, x2
  42ae98:	mov	x4, x2
  42ae9c:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42aea0:	add	x3, x3, #0x7e8
  42aea4:	mov	x2, #0x40                  	// #64
  42aea8:	mov	w1, #0x1                   	// #1
  42aeac:	add	x0, sp, x2
  42aeb0:	bl	404010 <__sprintf_chk@plt>
  42aeb4:	add	x1, sp, #0x40
  42aeb8:	mov	w0, w23
  42aebc:	bl	42a550 <wcrtomb@plt+0x25930>
  42aec0:	mov	x21, #0xffffffffffffffff    	// #-1
  42aec4:	cmn	w0, #0x1
  42aec8:	b.eq	42af38 <wcrtomb@plt+0x26318>  // b.none
  42aecc:	mov	w0, w23
  42aed0:	bl	42a748 <wcrtomb@plt+0x25b28>
  42aed4:	mov	x21, x0
  42aed8:	cmp	x19, x0
  42aedc:	ccmn	x0, #0x1, #0x4, cs  // cs = hs, nlast
  42aee0:	b.eq	42af50 <wcrtomb@plt+0x26330>  // b.none
  42aee4:	cbz	x0, 42af38 <wcrtomb@plt+0x26318>
  42aee8:	mov	x19, #0x0                   	// #0
  42aeec:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42aef0:	add	x22, x22, #0x218
  42aef4:	add	x22, x22, w23, sxtw #3
  42aef8:	sub	x2, x21, x19
  42aefc:	mov	x1, x20
  42af00:	ldr	w0, [x22]
  42af04:	bl	43f41c <argp_parse@@Base+0xbcdc>
  42af08:	sub	x1, x0, #0x1
  42af0c:	cmn	x1, #0x3
  42af10:	b.hi	42af28 <wcrtomb@plt+0x26308>  // b.pmore
  42af14:	add	x19, x19, x0
  42af18:	add	x20, x20, x0
  42af1c:	cmp	x21, x19
  42af20:	b.hi	42aef8 <wcrtomb@plt+0x262d8>  // b.pmore
  42af24:	b	42af38 <wcrtomb@plt+0x26318>
  42af28:	mov	w1, #0x5                   	// #5
  42af2c:	mov	w0, w23
  42af30:	bl	42a4f4 <wcrtomb@plt+0x258d4>
  42af34:	mov	x21, #0xffffffffffffffff    	// #-1
  42af38:	mov	x0, x21
  42af3c:	ldp	x19, x20, [sp, #16]
  42af40:	ldp	x21, x22, [sp, #32]
  42af44:	ldr	x23, [sp, #48]
  42af48:	ldp	x29, x30, [sp], #128
  42af4c:	ret
  42af50:	mov	x21, #0xffffffffffffffff    	// #-1
  42af54:	b	42af38 <wcrtomb@plt+0x26318>
  42af58:	stp	x29, x30, [sp, #-112]!
  42af5c:	mov	x29, sp
  42af60:	stp	x19, x20, [sp, #16]
  42af64:	stp	x21, x22, [sp, #32]
  42af68:	mov	w19, w0
  42af6c:	mov	x21, x1
  42af70:	mov	x20, x2
  42af74:	mov	x4, x2
  42af78:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42af7c:	add	x3, x3, #0x7f0
  42af80:	mov	x2, #0x40                  	// #64
  42af84:	mov	w1, #0x1                   	// #1
  42af88:	add	x0, sp, #0x30
  42af8c:	bl	404010 <__sprintf_chk@plt>
  42af90:	add	x1, sp, #0x30
  42af94:	mov	w0, w19
  42af98:	bl	42a550 <wcrtomb@plt+0x25930>
  42af9c:	cmn	w0, #0x1
  42afa0:	b.eq	42b024 <wcrtomb@plt+0x26404>  // b.none
  42afa4:	mov	x1, #0x1                   	// #1
  42afa8:	mov	w0, #0xd                   	// #13
  42afac:	bl	404270 <signal@plt>
  42afb0:	mov	x22, x0
  42afb4:	adrp	x3, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42afb8:	add	x3, x3, #0x218
  42afbc:	add	x3, x3, w19, sxtw #3
  42afc0:	mov	x2, x20
  42afc4:	mov	x1, x21
  42afc8:	ldr	w0, [x3, #36]
  42afcc:	bl	437354 <argp_parse@@Base+0x3c14>
  42afd0:	mov	x21, x0
  42afd4:	mov	x1, x22
  42afd8:	mov	w0, #0xd                   	// #13
  42afdc:	bl	404270 <signal@plt>
  42afe0:	cmp	x20, x21
  42afe4:	b.eq	42b008 <wcrtomb@plt+0x263e8>  // b.none
  42afe8:	mov	w1, #0x5                   	// #5
  42afec:	mov	w0, w19
  42aff0:	bl	42a4f4 <wcrtomb@plt+0x258d4>
  42aff4:	mov	x0, x21
  42aff8:	ldp	x19, x20, [sp, #16]
  42affc:	ldp	x21, x22, [sp, #32]
  42b000:	ldp	x29, x30, [sp], #112
  42b004:	ret
  42b008:	mov	w0, w19
  42b00c:	bl	42a748 <wcrtomb@plt+0x25b28>
  42b010:	tbnz	x0, #63, 42b02c <wcrtomb@plt+0x2640c>
  42b014:	cmp	x21, x0
  42b018:	b.eq	42aff4 <wcrtomb@plt+0x263d4>  // b.none
  42b01c:	mov	x21, x0
  42b020:	b	42afe8 <wcrtomb@plt+0x263c8>
  42b024:	mov	x21, #0x0                   	// #0
  42b028:	b	42aff4 <wcrtomb@plt+0x263d4>
  42b02c:	mov	x21, #0x0                   	// #0
  42b030:	b	42aff4 <wcrtomb@plt+0x263d4>
  42b034:	stp	x29, x30, [sp, #-192]!
  42b038:	mov	x29, sp
  42b03c:	str	x19, [sp, #16]
  42b040:	mov	w19, w0
  42b044:	mov	w5, w2
  42b048:	cmp	x1, #0x0
  42b04c:	cneg	x7, x1, lt  // lt = tstop
  42b050:	strb	wzr, [sp, #124]
  42b054:	add	x4, sp, #0x7c
  42b058:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
  42b05c:	movk	x8, #0xcccd
  42b060:	mov	x0, x4
  42b064:	umulh	x3, x7, x8
  42b068:	lsr	x3, x3, #3
  42b06c:	add	x6, x3, x3, lsl #2
  42b070:	sub	x6, x7, x6, lsl #1
  42b074:	add	w6, w6, #0x30
  42b078:	strb	w6, [x4, #-1]!
  42b07c:	mov	x6, x7
  42b080:	mov	x7, x3
  42b084:	cmp	x6, #0x9
  42b088:	b.hi	42b060 <wcrtomb@plt+0x26440>  // b.pmore
  42b08c:	tbnz	x1, #63, 42b11c <wcrtomb@plt+0x264fc>
  42b090:	cmp	w5, #0x1
  42b094:	b.eq	42b0a0 <wcrtomb@plt+0x26480>  // b.none
  42b098:	cmp	w5, #0x2
  42b09c:	b.ne	42b12c <wcrtomb@plt+0x2650c>  // b.any
  42b0a0:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42b0a4:	add	x3, x3, #0x7f8
  42b0a8:	mov	x2, #0x40                  	// #64
  42b0ac:	mov	w1, #0x1                   	// #1
  42b0b0:	add	x0, sp, #0x80
  42b0b4:	bl	404010 <__sprintf_chk@plt>
  42b0b8:	add	x1, sp, #0x80
  42b0bc:	mov	w0, w19
  42b0c0:	bl	42a550 <wcrtomb@plt+0x25930>
  42b0c4:	cmn	w0, #0x1
  42b0c8:	b.eq	42b1a8 <wcrtomb@plt+0x26588>  // b.none
  42b0cc:	add	x1, sp, #0x28
  42b0d0:	mov	w0, w19
  42b0d4:	bl	42a5e0 <wcrtomb@plt+0x259c0>
  42b0d8:	cbz	x0, 42b190 <wcrtomb@plt+0x26570>
  42b0dc:	ldrb	w4, [x0]
  42b0e0:	cmp	w4, #0x20
  42b0e4:	ccmp	w4, #0x9, #0x4, ne  // ne = any
  42b0e8:	b.eq	42b134 <wcrtomb@plt+0x26514>  // b.none
  42b0ec:	sub	w1, w4, #0x2b
  42b0f0:	and	w1, w1, #0xfffffffd
  42b0f4:	tst	w1, #0xff
  42b0f8:	cset	w1, eq  // eq = none
  42b0fc:	cinc	x3, x0, eq  // eq = none
  42b100:	add	x3, x3, #0x1
  42b104:	ldrb	w1, [x0, w1, uxtw]
  42b108:	sub	w1, w1, #0x30
  42b10c:	cmp	w1, #0x9
  42b110:	b.hi	42b198 <wcrtomb@plt+0x26578>  // b.pmore
  42b114:	mov	x0, #0x0                   	// #0
  42b118:	b	42b164 <wcrtomb@plt+0x26544>
  42b11c:	mov	w1, #0x2d                  	// #45
  42b120:	sturb	w1, [x4, #-1]
  42b124:	sub	x4, x0, #0x2
  42b128:	b	42b090 <wcrtomb@plt+0x26470>
  42b12c:	cbz	w5, 42b0a0 <wcrtomb@plt+0x26480>
  42b130:	bl	404660 <abort@plt>
  42b134:	ldrb	w4, [x0, #1]!
  42b138:	cmp	w4, #0x20
  42b13c:	ccmp	w4, #0x9, #0x4, ne  // ne = any
  42b140:	b.ne	42b0ec <wcrtomb@plt+0x264cc>  // b.any
  42b144:	b	42b134 <wcrtomb@plt+0x26514>
  42b148:	sub	x0, x2, w1, sxtw
  42b14c:	cmp	x2, x0
  42b150:	b.lt	42b1a0 <wcrtomb@plt+0x26580>  // b.tstop
  42b154:	ldrb	w1, [x3], #1
  42b158:	sub	w1, w1, #0x30
  42b15c:	cmp	w1, #0x9
  42b160:	b.hi	42b184 <wcrtomb@plt+0x26564>  // b.pmore
  42b164:	add	x0, x0, x0, lsl #2
  42b168:	lsl	x2, x0, #1
  42b16c:	cmp	w4, #0x2d
  42b170:	b.eq	42b148 <wcrtomb@plt+0x26528>  // b.none
  42b174:	add	x0, x2, w1, sxtw
  42b178:	cmp	x2, x0
  42b17c:	b.le	42b154 <wcrtomb@plt+0x26534>
  42b180:	mov	x0, #0xffffffffffffffff    	// #-1
  42b184:	ldr	x19, [sp, #16]
  42b188:	ldp	x29, x30, [sp], #192
  42b18c:	ret
  42b190:	mov	x0, #0xffffffffffffffff    	// #-1
  42b194:	b	42b184 <wcrtomb@plt+0x26564>
  42b198:	mov	x0, #0x0                   	// #0
  42b19c:	b	42b184 <wcrtomb@plt+0x26564>
  42b1a0:	mov	x0, #0xffffffffffffffff    	// #-1
  42b1a4:	b	42b184 <wcrtomb@plt+0x26564>
  42b1a8:	mov	x0, #0xffffffffffffffff    	// #-1
  42b1ac:	b	42b184 <wcrtomb@plt+0x26564>
  42b1b0:	stp	x29, x30, [sp, #-144]!
  42b1b4:	mov	x29, sp
  42b1b8:	stp	x19, x20, [sp, #16]
  42b1bc:	stp	x21, x22, [sp, #32]
  42b1c0:	mov	w21, w0
  42b1c4:	mov	x19, x2
  42b1c8:	mov	w0, #0x6d02                	// #27906
  42b1cc:	movk	w0, #0x8030, lsl #16
  42b1d0:	cmp	w1, w0
  42b1d4:	b.eq	42b2a4 <wcrtomb@plt+0x26684>  // b.none
  42b1d8:	mov	w0, #0x6d01                	// #27905
  42b1dc:	movk	w0, #0x4008, lsl #16
  42b1e0:	cmp	w1, w0
  42b1e4:	b.eq	42b208 <wcrtomb@plt+0x265e8>  // b.none
  42b1e8:	bl	404ad0 <__errno_location@plt>
  42b1ec:	mov	w1, #0x5f                  	// #95
  42b1f0:	str	w1, [x0]
  42b1f4:	mov	w0, #0xffffffff            	// #-1
  42b1f8:	ldp	x19, x20, [sp, #16]
  42b1fc:	ldp	x21, x22, [sp, #32]
  42b200:	ldp	x29, x30, [sp], #144
  42b204:	ret
  42b208:	ldr	w7, [x2, #4]
  42b20c:	sxtw	x0, w7
  42b210:	cmp	w7, #0x0
  42b214:	cneg	x0, x0, lt  // lt = tstop
  42b218:	strb	wzr, [sp, #76]
  42b21c:	add	x5, sp, #0x4c
  42b220:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
  42b224:	movk	x4, #0xcccd
  42b228:	mov	x6, x5
  42b22c:	umulh	x1, x0, x4
  42b230:	lsr	x1, x1, #3
  42b234:	add	x3, x1, x1, lsl #2
  42b238:	sub	x3, x0, x3, lsl #1
  42b23c:	add	w3, w3, #0x30
  42b240:	strb	w3, [x5, #-1]!
  42b244:	mov	x2, x0
  42b248:	mov	x0, x1
  42b24c:	cmp	x2, #0x9
  42b250:	b.hi	42b228 <wcrtomb@plt+0x26608>  // b.pmore
  42b254:	tbnz	w7, #31, 42b294 <wcrtomb@plt+0x26674>
  42b258:	ldrsh	w4, [x19]
  42b25c:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42b260:	add	x3, x3, #0x800
  42b264:	mov	x2, #0x40                  	// #64
  42b268:	mov	w1, #0x1                   	// #1
  42b26c:	add	x0, sp, #0x50
  42b270:	bl	404010 <__sprintf_chk@plt>
  42b274:	add	x1, sp, #0x50
  42b278:	mov	w0, w21
  42b27c:	bl	42a550 <wcrtomb@plt+0x25930>
  42b280:	cmn	w0, #0x1
  42b284:	b.eq	42b1f8 <wcrtomb@plt+0x265d8>  // b.none
  42b288:	mov	w0, w21
  42b28c:	bl	42a748 <wcrtomb@plt+0x25b28>
  42b290:	b	42b1f8 <wcrtomb@plt+0x265d8>
  42b294:	mov	w0, #0x2d                  	// #45
  42b298:	sturb	w0, [x5, #-1]
  42b29c:	sub	x5, x6, #0x2
  42b2a0:	b	42b258 <wcrtomb@plt+0x26638>
  42b2a4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  42b2a8:	add	x1, x1, #0x990
  42b2ac:	mov	w0, w21
  42b2b0:	bl	42a550 <wcrtomb@plt+0x25930>
  42b2b4:	cmn	w0, #0x1
  42b2b8:	b.eq	42b1f8 <wcrtomb@plt+0x265d8>  // b.none
  42b2bc:	mov	w0, w21
  42b2c0:	bl	42a748 <wcrtomb@plt+0x25b28>
  42b2c4:	mov	x20, x0
  42b2c8:	cmn	x0, #0x1
  42b2cc:	b.eq	42b384 <wcrtomb@plt+0x26764>  // b.none
  42b2d0:	cmp	x0, #0x8
  42b2d4:	b.hi	42b35c <wcrtomb@plt+0x2673c>  // b.pmore
  42b2d8:	cmp	x0, #0x0
  42b2dc:	b.le	42b318 <wcrtomb@plt+0x266f8>
  42b2e0:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42b2e4:	add	x22, x22, #0x218
  42b2e8:	add	x22, x22, w21, sxtw #3
  42b2ec:	mov	x2, x20
  42b2f0:	mov	x1, x19
  42b2f4:	ldr	w0, [x22]
  42b2f8:	bl	43f41c <argp_parse@@Base+0xbcdc>
  42b2fc:	sub	x1, x0, #0x1
  42b300:	cmn	x1, #0x3
  42b304:	b.hi	42b370 <wcrtomb@plt+0x26750>  // b.pmore
  42b308:	sub	x20, x20, x0
  42b30c:	add	x19, x19, x0
  42b310:	cmp	x20, #0x0
  42b314:	b.gt	42b2ec <wcrtomb@plt+0x266cc>
  42b318:	ldr	x1, [x19]
  42b31c:	mov	w0, #0x0                   	// #0
  42b320:	cmp	x1, #0xff
  42b324:	b.le	42b1f8 <wcrtomb@plt+0x265d8>
  42b328:	mov	x4, x20
  42b32c:	cbz	x20, 42b38c <wcrtomb@plt+0x2676c>
  42b330:	mov	x0, #0x0                   	// #0
  42b334:	add	x1, x19, #0x1
  42b338:	ldrb	w2, [x19, x0]
  42b33c:	ldrb	w3, [x1, x0]
  42b340:	strb	w3, [x19, x0]
  42b344:	strb	w2, [x1, x0]
  42b348:	add	x0, x0, #0x2
  42b34c:	cmp	x0, x4
  42b350:	b.cc	42b338 <wcrtomb@plt+0x26718>  // b.lo, b.ul, b.last
  42b354:	mov	w0, #0x0                   	// #0
  42b358:	b	42b1f8 <wcrtomb@plt+0x265d8>
  42b35c:	bl	404ad0 <__errno_location@plt>
  42b360:	mov	w1, #0x4b                  	// #75
  42b364:	str	w1, [x0]
  42b368:	mov	w0, #0xffffffff            	// #-1
  42b36c:	b	42b1f8 <wcrtomb@plt+0x265d8>
  42b370:	mov	w1, #0x5                   	// #5
  42b374:	mov	w0, w21
  42b378:	bl	42a4f4 <wcrtomb@plt+0x258d4>
  42b37c:	mov	w0, #0xffffffff            	// #-1
  42b380:	b	42b1f8 <wcrtomb@plt+0x265d8>
  42b384:	mov	w0, #0xffffffff            	// #-1
  42b388:	b	42b1f8 <wcrtomb@plt+0x265d8>
  42b38c:	mov	w0, #0x0                   	// #0
  42b390:	b	42b1f8 <wcrtomb@plt+0x265d8>
  42b394:	stp	x29, x30, [sp, #-64]!
  42b398:	mov	x29, sp
  42b39c:	stp	x19, x20, [sp, #16]
  42b3a0:	stp	x21, x22, [sp, #32]
  42b3a4:	stp	x23, x24, [sp, #48]
  42b3a8:	mov	x19, #0x0                   	// #0
  42b3ac:	mov	w23, #0x1                   	// #1
  42b3b0:	mov	w20, w23
  42b3b4:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42b3b8:	add	x22, x0, #0x828
  42b3bc:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42b3c0:	add	x21, x0, #0x818
  42b3c4:	b	42b414 <wcrtomb@plt+0x267f4>
  42b3c8:	ldr	w24, [x22, x19, lsl #2]
  42b3cc:	cbz	w24, 42b3ec <wcrtomb@plt+0x267cc>
  42b3d0:	mov	w1, w24
  42b3d4:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42b3d8:	add	x0, x0, #0x808
  42b3dc:	bl	404ba0 <__open_2@plt>
  42b3e0:	mov	w1, w0
  42b3e4:	cmp	w0, w19
  42b3e8:	b.eq	42b43c <wcrtomb@plt+0x2681c>  // b.none
  42b3ec:	mov	w1, w24
  42b3f0:	mov	x0, x21
  42b3f4:	bl	404ba0 <__open_2@plt>
  42b3f8:	cmp	w0, w19
  42b3fc:	b.eq	42b408 <wcrtomb@plt+0x267e8>  // b.none
  42b400:	mov	w23, #0x0                   	// #0
  42b404:	tbz	w0, #31, 42b444 <wcrtomb@plt+0x26824>
  42b408:	add	x19, x19, #0x1
  42b40c:	cmp	x19, #0x3
  42b410:	b.eq	42b450 <wcrtomb@plt+0x26830>  // b.none
  42b414:	mov	w1, w20
  42b418:	mov	w0, w19
  42b41c:	bl	440a14 <argp_parse@@Base+0xd2d4>
  42b420:	tbz	w0, #31, 42b408 <wcrtomb@plt+0x267e8>
  42b424:	bl	404ad0 <__errno_location@plt>
  42b428:	ldr	w0, [x0]
  42b42c:	cmp	w0, #0x9
  42b430:	b.eq	42b3c8 <wcrtomb@plt+0x267a8>  // b.none
  42b434:	mov	w23, #0x0                   	// #0
  42b438:	b	42b408 <wcrtomb@plt+0x267e8>
  42b43c:	mov	w0, #0x0                   	// #0
  42b440:	cbz	w1, 42b408 <wcrtomb@plt+0x267e8>
  42b444:	bl	4045d0 <close@plt>
  42b448:	mov	w23, #0x0                   	// #0
  42b44c:	b	42b408 <wcrtomb@plt+0x267e8>
  42b450:	mov	w0, w23
  42b454:	ldp	x19, x20, [sp, #16]
  42b458:	ldp	x21, x22, [sp, #32]
  42b45c:	ldp	x23, x24, [sp, #48]
  42b460:	ldp	x29, x30, [sp], #64
  42b464:	ret
  42b468:	tbz	w0, #1, 42b4fc <wcrtomb@plt+0x268dc>
  42b46c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42b470:	mov	w2, #0x77                  	// #119
  42b474:	strb	w2, [x1, #3416]
  42b478:	tst	x0, #0x4
  42b47c:	mov	w1, #0x71                  	// #113
  42b480:	mov	w2, #0x2d                  	// #45
  42b484:	csel	w1, w1, w2, ne  // ne = any
  42b488:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42b48c:	strb	w1, [x2, #3417]
  42b490:	tst	x0, #0x8
  42b494:	mov	w1, #0x45                  	// #69
  42b498:	mov	w2, #0x2d                  	// #45
  42b49c:	csel	w1, w1, w2, ne  // ne = any
  42b4a0:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42b4a4:	strb	w1, [x2, #3418]
  42b4a8:	tst	x0, #0x10
  42b4ac:	mov	w1, #0x6a                  	// #106
  42b4b0:	mov	w2, #0x2d                  	// #45
  42b4b4:	csel	w1, w1, w2, ne  // ne = any
  42b4b8:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42b4bc:	strb	w1, [x2, #3419]
  42b4c0:	tst	x0, #0x20
  42b4c4:	mov	w1, #0x73                  	// #115
  42b4c8:	mov	w2, #0x2d                  	// #45
  42b4cc:	csel	w1, w1, w2, ne  // ne = any
  42b4d0:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42b4d4:	strb	w1, [x2, #3420]
  42b4d8:	tst	x0, #0x40
  42b4dc:	mov	w1, #0x64                  	// #100
  42b4e0:	mov	w0, #0x2d                  	// #45
  42b4e4:	csel	w1, w1, w0, ne  // ne = any
  42b4e8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42b4ec:	add	x0, x0, #0xd58
  42b4f0:	strb	w1, [x0, #5]
  42b4f4:	strb	wzr, [x0, #6]
  42b4f8:	ret
  42b4fc:	tbz	w0, #0, 42b510 <wcrtomb@plt+0x268f0>
  42b500:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42b504:	mov	w2, #0x6e                  	// #110
  42b508:	strb	w2, [x1, #3416]
  42b50c:	b	42b478 <wcrtomb@plt+0x26858>
  42b510:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42b514:	mov	w2, #0x2d                  	// #45
  42b518:	strb	w2, [x1, #3416]
  42b51c:	b	42b478 <wcrtomb@plt+0x26858>
  42b520:	ldr	w2, [x1, #16]
  42b524:	tbnz	w2, #0, 42b544 <wcrtomb@plt+0x26924>
  42b528:	tbz	w2, #1, 42b534 <wcrtomb@plt+0x26914>
  42b52c:	ldr	x0, [x1, #24]
  42b530:	b	42b54c <wcrtomb@plt+0x2692c>
  42b534:	ldr	x0, [x0, #168]
  42b538:	ldr	x1, [x1, #24]
  42b53c:	add	x0, x0, x1
  42b540:	b	42b54c <wcrtomb@plt+0x2692c>
  42b544:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  42b548:	add	x0, x0, #0x7f8
  42b54c:	ret
  42b550:	ldr	x3, [x1]
  42b554:	cbz	x3, 42b58c <wcrtomb@plt+0x2696c>
  42b558:	ldr	x2, [x1, #8]
  42b55c:	str	x2, [x3, #8]
  42b560:	ldr	x2, [x1, #8]
  42b564:	cbz	x2, 42b57c <wcrtomb@plt+0x2695c>
  42b568:	ldr	x0, [x1]
  42b56c:	str	x0, [x2]
  42b570:	str	xzr, [x1]
  42b574:	str	xzr, [x1, #8]
  42b578:	ret
  42b57c:	ldr	w2, [x3, #16]
  42b580:	and	w2, w2, #0xffffffef
  42b584:	str	w2, [x3, #16]
  42b588:	b	42b594 <wcrtomb@plt+0x26974>
  42b58c:	ldr	x2, [x1, #8]
  42b590:	str	x2, [x0, #208]
  42b594:	ldr	x2, [x1, #8]
  42b598:	cbnz	x2, 42b568 <wcrtomb@plt+0x26948>
  42b59c:	ldr	x2, [x1]
  42b5a0:	str	x2, [x0, #216]
  42b5a4:	b	42b570 <wcrtomb@plt+0x26950>
  42b5a8:	stp	x29, x30, [sp, #-80]!
  42b5ac:	mov	x29, sp
  42b5b0:	stp	x19, x20, [sp, #16]
  42b5b4:	ldr	x19, [x0, #208]
  42b5b8:	cbz	x19, 42b678 <wcrtomb@plt+0x26a58>
  42b5bc:	stp	x21, x22, [sp, #32]
  42b5c0:	stp	x23, x24, [sp, #48]
  42b5c4:	stp	x25, x26, [sp, #64]
  42b5c8:	mov	x22, x0
  42b5cc:	mov	w21, #0x0                   	// #0
  42b5d0:	adrp	x26, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42b5d4:	add	x26, x26, #0x858
  42b5d8:	adrp	x25, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42b5dc:	add	x25, x25, #0x838
  42b5e0:	b	42b630 <wcrtomb@plt+0x26a10>
  42b5e4:	ldr	x23, [x22, #104]
  42b5e8:	ldr	w24, [x22, #224]
  42b5ec:	mov	w0, w20
  42b5f0:	bl	42b468 <wcrtomb@plt+0x26848>
  42b5f4:	ldr	x1, [x19, #24]
  42b5f8:	ldr	x7, [x22, #168]
  42b5fc:	ldr	x6, [x19, #32]
  42b600:	add	x7, x7, x1
  42b604:	sub	w6, w6, w1
  42b608:	mov	x5, x0
  42b60c:	mov	w4, w20
  42b610:	mov	x3, x19
  42b614:	mov	w2, w21
  42b618:	mov	w1, w24
  42b61c:	mov	x0, x26
  42b620:	blr	x23
  42b624:	ldr	x19, [x19, #8]
  42b628:	add	w21, w21, #0x1
  42b62c:	cbz	x19, 42b66c <wcrtomb@plt+0x26a4c>
  42b630:	ldr	w20, [x19, #16]
  42b634:	tbz	w20, #1, 42b5e4 <wcrtomb@plt+0x269c4>
  42b638:	ldr	x23, [x22, #104]
  42b63c:	ldr	w24, [x22, #224]
  42b640:	mov	w0, w20
  42b644:	bl	42b468 <wcrtomb@plt+0x26848>
  42b648:	ldr	x6, [x19, #24]
  42b64c:	mov	x5, x0
  42b650:	mov	w4, w20
  42b654:	mov	x3, x19
  42b658:	mov	w2, w21
  42b65c:	mov	w1, w24
  42b660:	mov	x0, x25
  42b664:	blr	x23
  42b668:	b	42b624 <wcrtomb@plt+0x26a04>
  42b66c:	ldp	x21, x22, [sp, #32]
  42b670:	ldp	x23, x24, [sp, #48]
  42b674:	ldp	x25, x26, [sp, #64]
  42b678:	ldp	x19, x20, [sp, #16]
  42b67c:	ldp	x29, x30, [sp], #80
  42b680:	ret
  42b684:	cmp	x1, x2
  42b688:	b.cs	42b748 <wcrtomb@plt+0x26b28>  // b.hs, b.nlast
  42b68c:	mov	x9, #0x1                   	// #1
  42b690:	mov	w5, #0x0                   	// #0
  42b694:	mov	w7, #0x0                   	// #0
  42b698:	b	42b6bc <wcrtomb@plt+0x26a9c>
  42b69c:	add	x9, x9, #0x1
  42b6a0:	b	42b6b0 <wcrtomb@plt+0x26a90>
  42b6a4:	ldrb	w5, [x0, x1]
  42b6a8:	cmp	w5, #0x27
  42b6ac:	cset	w5, ne  // ne = any
  42b6b0:	add	x1, x1, #0x1
  42b6b4:	cmp	x2, x1
  42b6b8:	b.ls	42b740 <wcrtomb@plt+0x26b20>  // b.plast
  42b6bc:	cmp	w5, #0x1
  42b6c0:	b.eq	42b6a4 <wcrtomb@plt+0x26a84>  // b.none
  42b6c4:	cmp	w5, #0x2
  42b6c8:	b.eq	42b710 <wcrtomb@plt+0x26af0>  // b.none
  42b6cc:	cbnz	w5, 42b6b0 <wcrtomb@plt+0x26a90>
  42b6d0:	ldrb	w6, [x0, x1]
  42b6d4:	cmp	w6, #0x22
  42b6d8:	b.eq	42b730 <wcrtomb@plt+0x26b10>  // b.none
  42b6dc:	cmp	w6, #0x27
  42b6e0:	b.eq	42b738 <wcrtomb@plt+0x26b18>  // b.none
  42b6e4:	ldrb	w8, [x4]
  42b6e8:	cmp	w8, w6
  42b6ec:	b.eq	42b69c <wcrtomb@plt+0x26a7c>  // b.none
  42b6f0:	ldrb	w8, [x4, #1]
  42b6f4:	cmp	w8, w6
  42b6f8:	b.ne	42b6b0 <wcrtomb@plt+0x26a90>  // b.any
  42b6fc:	subs	x9, x9, #0x1
  42b700:	b.ne	42b6b0 <wcrtomb@plt+0x26a90>  // b.any
  42b704:	str	x1, [x3]
  42b708:	mov	w0, #0x0                   	// #0
  42b70c:	b	42b744 <wcrtomb@plt+0x26b24>
  42b710:	ldrb	w6, [x0, x1]
  42b714:	cmp	w6, #0x5c
  42b718:	b.eq	42b728 <wcrtomb@plt+0x26b08>  // b.none
  42b71c:	cmp	w6, #0x22
  42b720:	csel	w5, w5, w7, ne  // ne = any
  42b724:	b	42b6b0 <wcrtomb@plt+0x26a90>
  42b728:	add	x1, x1, #0x1
  42b72c:	b	42b6b0 <wcrtomb@plt+0x26a90>
  42b730:	mov	w5, #0x2                   	// #2
  42b734:	b	42b6b0 <wcrtomb@plt+0x26a90>
  42b738:	mov	w5, #0x1                   	// #1
  42b73c:	b	42b6b0 <wcrtomb@plt+0x26a90>
  42b740:	mov	w0, #0x1                   	// #1
  42b744:	ret
  42b748:	mov	w0, #0x1                   	// #1
  42b74c:	b	42b744 <wcrtomb@plt+0x26b24>
  42b750:	sub	w2, w0, #0x41
  42b754:	sub	w1, w0, #0x61
  42b758:	cmp	w2, #0x19
  42b75c:	ccmp	w1, #0x1a, #0x0, hi  // hi = pmore
  42b760:	mov	w1, #0x5f                  	// #95
  42b764:	ccmp	w0, w1, #0x4, hi  // hi = pmore
  42b768:	cset	w0, eq  // eq = none
  42b76c:	ret
  42b770:	cmp	w0, #0x28
  42b774:	cset	w0, eq  // eq = none
  42b778:	ret
  42b77c:	stp	x29, x30, [sp, #-32]!
  42b780:	mov	x29, sp
  42b784:	str	x19, [sp, #16]
  42b788:	mov	x19, x0
  42b78c:	ldr	w0, [x0, #16]
  42b790:	tbnz	w0, #1, 42b7a8 <wcrtomb@plt+0x26b88>
  42b794:	mov	x0, x19
  42b798:	bl	4047c0 <free@plt>
  42b79c:	ldr	x19, [sp, #16]
  42b7a0:	ldp	x29, x30, [sp], #32
  42b7a4:	ret
  42b7a8:	ldr	x0, [x19, #24]
  42b7ac:	bl	4047c0 <free@plt>
  42b7b0:	b	42b794 <wcrtomb@plt+0x26b74>
  42b7b4:	stp	x29, x30, [sp, #-32]!
  42b7b8:	mov	x29, sp
  42b7bc:	stp	x19, x20, [sp, #16]
  42b7c0:	mov	x20, x0
  42b7c4:	ldr	x19, [x0, #208]
  42b7c8:	cbz	x19, 42b7dc <wcrtomb@plt+0x26bbc>
  42b7cc:	mov	x0, x19
  42b7d0:	ldr	x19, [x19, #8]
  42b7d4:	bl	42b77c <wcrtomb@plt+0x26b5c>
  42b7d8:	cbnz	x19, 42b7cc <wcrtomb@plt+0x26bac>
  42b7dc:	str	xzr, [x20, #216]
  42b7e0:	str	xzr, [x20, #208]
  42b7e4:	ldp	x19, x20, [sp, #16]
  42b7e8:	ldp	x29, x30, [sp], #32
  42b7ec:	ret
  42b7f0:	stp	x29, x30, [sp, #-48]!
  42b7f4:	mov	x29, sp
  42b7f8:	stp	x19, x20, [sp, #16]
  42b7fc:	str	x21, [sp, #32]
  42b800:	mov	x21, x0
  42b804:	ldr	x19, [x0, #208]
  42b808:	cbnz	x19, 42b828 <wcrtomb@plt+0x26c08>
  42b80c:	ldp	x19, x20, [sp, #16]
  42b810:	ldr	x21, [sp, #32]
  42b814:	ldp	x29, x30, [sp], #48
  42b818:	ret
  42b81c:	ldr	w1, [x20, #16]
  42b820:	tbnz	w1, #0, 42b850 <wcrtomb@plt+0x26c30>
  42b824:	cbz	x19, 42b80c <wcrtomb@plt+0x26bec>
  42b828:	mov	x20, x19
  42b82c:	ldr	x19, [x19, #8]
  42b830:	ldr	w1, [x20, #16]
  42b834:	tbz	w1, #6, 42b81c <wcrtomb@plt+0x26bfc>
  42b838:	ldr	x1, [x20]
  42b83c:	cbz	x1, 42b81c <wcrtomb@plt+0x26bfc>
  42b840:	ldr	w2, [x1, #16]
  42b844:	and	w2, w2, #0xffffffef
  42b848:	str	w2, [x1, #16]
  42b84c:	b	42b81c <wcrtomb@plt+0x26bfc>
  42b850:	mov	x1, x20
  42b854:	mov	x0, x21
  42b858:	bl	42b550 <wcrtomb@plt+0x26930>
  42b85c:	mov	x0, x20
  42b860:	bl	42b77c <wcrtomb@plt+0x26b5c>
  42b864:	b	42b824 <wcrtomb@plt+0x26c04>
  42b868:	stp	x29, x30, [sp, #-16]!
  42b86c:	mov	x29, sp
  42b870:	ldr	x1, [x0, #208]
  42b874:	cbnz	x1, 42b920 <wcrtomb@plt+0x26d00>
  42b878:	bl	42b7f0 <wcrtomb@plt+0x26bd0>
  42b87c:	mov	w0, #0x0                   	// #0
  42b880:	ldp	x29, x30, [sp], #16
  42b884:	ret
  42b888:	ldr	x2, [x1, #24]
  42b88c:	ldr	x5, [x1, #32]
  42b890:	cmp	x2, x5
  42b894:	b.cs	42b8d0 <wcrtomb@plt+0x26cb0>  // b.hs, b.nlast
  42b898:	ldr	x6, [x0, #168]
  42b89c:	ldrb	w4, [x6, x2]
  42b8a0:	sub	w3, w4, #0x9
  42b8a4:	and	w3, w3, #0xff
  42b8a8:	cmp	w4, #0x20
  42b8ac:	ccmp	w3, #0x1, #0x0, ne  // ne = any
  42b8b0:	b.hi	42b8c8 <wcrtomb@plt+0x26ca8>  // b.pmore
  42b8b4:	add	x2, x2, #0x1
  42b8b8:	cmp	x2, x5
  42b8bc:	b.ne	42b89c <wcrtomb@plt+0x26c7c>  // b.any
  42b8c0:	str	x5, [x1, #24]
  42b8c4:	b	42b928 <wcrtomb@plt+0x26d08>
  42b8c8:	mov	x5, x2
  42b8cc:	b	42b8c0 <wcrtomb@plt+0x26ca0>
  42b8d0:	mov	x5, x2
  42b8d4:	b	42b8c0 <wcrtomb@plt+0x26ca0>
  42b8d8:	mov	x5, x7
  42b8dc:	cmp	x8, x5
  42b8e0:	b.cs	42b90c <wcrtomb@plt+0x26cec>  // b.hs, b.nlast
  42b8e4:	sub	x7, x5, #0x1
  42b8e8:	ldr	x3, [x0, #168]
  42b8ec:	ldrb	w6, [x3, x7]
  42b8f0:	sub	w3, w6, #0x9
  42b8f4:	and	w3, w3, #0xff
  42b8f8:	cmp	w6, #0x20
  42b8fc:	ccmp	w3, #0x1, #0x0, ne  // ne = any
  42b900:	b.ls	42b8d8 <wcrtomb@plt+0x26cb8>  // b.plast
  42b904:	str	x5, [x2, #32]
  42b908:	b	42b91c <wcrtomb@plt+0x26cfc>
  42b90c:	str	x5, [x2, #32]
  42b910:	b.ne	42b91c <wcrtomb@plt+0x26cfc>  // b.any
  42b914:	orr	w4, w4, #0x1
  42b918:	str	w4, [x2, #16]
  42b91c:	cbz	x1, 42b878 <wcrtomb@plt+0x26c58>
  42b920:	ldr	w2, [x1, #16]
  42b924:	tbz	w2, #2, 42b888 <wcrtomb@plt+0x26c68>
  42b928:	mov	x2, x1
  42b92c:	ldr	x1, [x1, #8]
  42b930:	cbz	x1, 42b944 <wcrtomb@plt+0x26d24>
  42b934:	ldr	w4, [x2, #16]
  42b938:	tbnz	w4, #4, 42b928 <wcrtomb@plt+0x26d08>
  42b93c:	tbnz	w4, #2, 42b920 <wcrtomb@plt+0x26d00>
  42b940:	b	42b94c <wcrtomb@plt+0x26d2c>
  42b944:	ldr	w4, [x2, #16]
  42b948:	tbnz	w4, #2, 42b878 <wcrtomb@plt+0x26c58>
  42b94c:	ldr	x5, [x2, #32]
  42b950:	ldr	x8, [x2, #24]
  42b954:	b	42b8dc <wcrtomb@plt+0x26cbc>
  42b958:	stp	x29, x30, [sp, #-32]!
  42b95c:	mov	x29, sp
  42b960:	stp	x19, x20, [sp, #16]
  42b964:	mov	x19, x0
  42b968:	mov	x20, x1
  42b96c:	ldr	w0, [x0, #192]
  42b970:	cmp	w0, #0x9
  42b974:	b.eq	42b994 <wcrtomb@plt+0x26d74>  // b.none
  42b978:	ldr	w0, [x20, #192]
  42b97c:	str	w0, [x19, #192]
  42b980:	cmp	w0, #0x9
  42b984:	b.eq	42b9a0 <wcrtomb@plt+0x26d80>  // b.none
  42b988:	ldp	x19, x20, [sp, #16]
  42b98c:	ldp	x29, x30, [sp], #32
  42b990:	ret
  42b994:	ldr	x0, [x19, #200]
  42b998:	bl	4047c0 <free@plt>
  42b99c:	b	42b978 <wcrtomb@plt+0x26d58>
  42b9a0:	ldr	x0, [x20, #200]
  42b9a4:	str	x0, [x19, #200]
  42b9a8:	str	wzr, [x20, #192]
  42b9ac:	str	xzr, [x20, #200]
  42b9b0:	b	42b988 <wcrtomb@plt+0x26d68>
  42b9b4:	stp	x29, x30, [sp, #-320]!
  42b9b8:	mov	x29, sp
  42b9bc:	str	x19, [sp, #16]
  42b9c0:	str	x1, [sp, #264]
  42b9c4:	str	x2, [sp, #272]
  42b9c8:	str	x3, [sp, #280]
  42b9cc:	str	x4, [sp, #288]
  42b9d0:	str	x5, [sp, #296]
  42b9d4:	str	x6, [sp, #304]
  42b9d8:	str	x7, [sp, #312]
  42b9dc:	str	q0, [sp, #128]
  42b9e0:	str	q1, [sp, #144]
  42b9e4:	str	q2, [sp, #160]
  42b9e8:	str	q3, [sp, #176]
  42b9ec:	str	q4, [sp, #192]
  42b9f0:	str	q5, [sp, #208]
  42b9f4:	str	q6, [sp, #224]
  42b9f8:	str	q7, [sp, #240]
  42b9fc:	add	x1, sp, #0x140
  42ba00:	str	x1, [sp, #96]
  42ba04:	str	x1, [sp, #104]
  42ba08:	add	x1, sp, #0x100
  42ba0c:	str	x1, [sp, #112]
  42ba10:	mov	w1, #0xffffffc8            	// #-56
  42ba14:	str	w1, [sp, #120]
  42ba18:	mov	w1, #0xffffff80            	// #-128
  42ba1c:	str	w1, [sp, #124]
  42ba20:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42ba24:	ldp	x4, x5, [sp, #96]
  42ba28:	stp	x4, x5, [sp, #64]
  42ba2c:	ldp	x2, x3, [sp, #112]
  42ba30:	stp	x2, x3, [sp, #80]
  42ba34:	stp	x4, x5, [sp, #32]
  42ba38:	stp	x2, x3, [sp, #48]
  42ba3c:	add	x3, sp, #0x20
  42ba40:	mov	x2, x0
  42ba44:	mov	w1, #0x1                   	// #1
  42ba48:	ldr	x0, [x19, #1096]
  42ba4c:	bl	4044b0 <__vfprintf_chk@plt>
  42ba50:	ldr	x1, [x19, #1096]
  42ba54:	mov	w0, #0xa                   	// #10
  42ba58:	bl	404170 <fputc@plt>
  42ba5c:	ldr	x19, [sp, #16]
  42ba60:	ldp	x29, x30, [sp], #320
  42ba64:	ret
  42ba68:	stp	x29, x30, [sp, #-32]!
  42ba6c:	mov	x29, sp
  42ba70:	str	x19, [sp, #16]
  42ba74:	ldr	x19, [x0, #96]
  42ba78:	mov	w2, #0x5                   	// #5
  42ba7c:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  42ba80:	add	x1, x1, #0xaa0
  42ba84:	mov	x0, #0x0                   	// #0
  42ba88:	bl	4049c0 <dcgettext@plt>
  42ba8c:	mov	x1, x0
  42ba90:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x12e64>
  42ba94:	add	x0, x0, #0x848
  42ba98:	blr	x19
  42ba9c:	bl	404660 <abort@plt>
  42baa0:	ldr	w1, [x0, #16]
  42baa4:	tbnz	w1, #0, 42bad4 <wcrtomb@plt+0x26eb4>
  42baa8:	tbz	w1, #1, 42bac4 <wcrtomb@plt+0x26ea4>
  42baac:	stp	x29, x30, [sp, #-16]!
  42bab0:	mov	x29, sp
  42bab4:	ldr	x0, [x0, #24]
  42bab8:	bl	403ff0 <strlen@plt>
  42babc:	ldp	x29, x30, [sp], #16
  42bac0:	ret
  42bac4:	ldr	x1, [x0, #32]
  42bac8:	ldr	x0, [x0, #24]
  42bacc:	sub	x0, x1, x0
  42bad0:	ret
  42bad4:	mov	x0, #0x0                   	// #0
  42bad8:	ret
  42badc:	stp	x29, x30, [sp, #-96]!
  42bae0:	mov	x29, sp
  42bae4:	stp	x21, x22, [sp, #32]
  42bae8:	stp	x23, x24, [sp, #48]
  42baec:	str	x27, [sp, #80]
  42baf0:	mov	x27, x0
  42baf4:	cmp	w3, #0x0
  42baf8:	b.le	42bb98 <wcrtomb@plt+0x26f78>
  42bafc:	stp	x19, x20, [sp, #16]
  42bb00:	stp	x25, x26, [sp, #64]
  42bb04:	mov	x20, x1
  42bb08:	mov	w22, w2
  42bb0c:	mov	w24, w3
  42bb10:	mov	w23, #0x0                   	// #0
  42bb14:	mov	w21, #0x0                   	// #0
  42bb18:	adrp	x25, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42bb1c:	add	x25, x25, #0x880
  42bb20:	mov	w26, #0xff                  	// #255
  42bb24:	b	42bb44 <wcrtomb@plt+0x26f24>
  42bb28:	cmp	w1, w22
  42bb2c:	b.ge	42bbc8 <wcrtomb@plt+0x26fa8>  // b.tcont
  42bb30:	madd	w23, w22, w23, w1
  42bb34:	add	w21, w21, #0x1
  42bb38:	add	x20, x20, #0x1
  42bb3c:	cmp	w24, w21
  42bb40:	b.eq	42bb8c <wcrtomb@plt+0x26f6c>  // b.none
  42bb44:	ldrb	w19, [x20]
  42bb48:	cmp	w19, #0x7f
  42bb4c:	b.gt	42bba4 <wcrtomb@plt+0x26f84>
  42bb50:	sub	w0, w19, #0x30
  42bb54:	mov	w1, w0
  42bb58:	cmp	w0, #0x9
  42bb5c:	b.ls	42bb28 <wcrtomb@plt+0x26f08>  // b.plast
  42bb60:	mov	w1, w19
  42bb64:	mov	x0, x25
  42bb68:	bl	404870 <strchr@plt>
  42bb6c:	mov	w1, w26
  42bb70:	cbz	x0, 42bb28 <wcrtomb@plt+0x26f08>
  42bb74:	bl	404550 <__ctype_toupper_loc@plt>
  42bb78:	and	x19, x19, #0xff
  42bb7c:	ldr	x0, [x0]
  42bb80:	ldr	w1, [x0, x19, lsl #2]
  42bb84:	sub	w1, w1, #0x37
  42bb88:	b	42bb28 <wcrtomb@plt+0x26f08>
  42bb8c:	ldp	x19, x20, [sp, #16]
  42bb90:	ldp	x25, x26, [sp, #64]
  42bb94:	b	42bbac <wcrtomb@plt+0x26f8c>
  42bb98:	mov	w23, #0x0                   	// #0
  42bb9c:	mov	w21, #0x0                   	// #0
  42bba0:	b	42bbac <wcrtomb@plt+0x26f8c>
  42bba4:	ldp	x19, x20, [sp, #16]
  42bba8:	ldp	x25, x26, [sp, #64]
  42bbac:	str	w23, [x27]
  42bbb0:	mov	w0, w21
  42bbb4:	ldp	x21, x22, [sp, #32]
  42bbb8:	ldp	x23, x24, [sp, #48]
  42bbbc:	ldr	x27, [sp, #80]
  42bbc0:	ldp	x29, x30, [sp], #96
  42bbc4:	ret
  42bbc8:	ldp	x19, x20, [sp, #16]
  42bbcc:	ldp	x25, x26, [sp, #64]
  42bbd0:	b	42bbac <wcrtomb@plt+0x26f8c>
  42bbd4:	mov	x4, x2
  42bbd8:	ldr	x2, [x0, #208]
  42bbdc:	cbz	x2, 42bc04 <wcrtomb@plt+0x26fe4>
  42bbe0:	cbz	w3, 42bc44 <wcrtomb@plt+0x27024>
  42bbe4:	ldr	x2, [x4]
  42bbe8:	cbz	x2, 42bc18 <wcrtomb@plt+0x26ff8>
  42bbec:	stp	x29, x30, [sp, #-16]!
  42bbf0:	mov	x29, sp
  42bbf4:	mov	w3, #0x0                   	// #0
  42bbf8:	bl	42bbd4 <wcrtomb@plt+0x26fb4>
  42bbfc:	ldp	x29, x30, [sp], #16
  42bc00:	ret
  42bc04:	str	xzr, [x1]
  42bc08:	str	xzr, [x1, #8]
  42bc0c:	str	x1, [x0, #216]
  42bc10:	str	x1, [x0, #208]
  42bc14:	ret
  42bc18:	mov	x2, x1
  42bc1c:	b	42bc24 <wcrtomb@plt+0x27004>
  42bc20:	mov	x2, x3
  42bc24:	cbz	x2, 42bc30 <wcrtomb@plt+0x27010>
  42bc28:	ldr	x3, [x2, #8]
  42bc2c:	cbnz	x3, 42bc20 <wcrtomb@plt+0x27000>
  42bc30:	str	xzr, [x1]
  42bc34:	str	x4, [x2, #8]
  42bc38:	str	x2, [x4]
  42bc3c:	str	x1, [x0, #208]
  42bc40:	ret
  42bc44:	mov	x2, x1
  42bc48:	b	42bc50 <wcrtomb@plt+0x27030>
  42bc4c:	mov	x2, x3
  42bc50:	cbz	x2, 42bc5c <wcrtomb@plt+0x2703c>
  42bc54:	ldr	x3, [x2, #8]
  42bc58:	cbnz	x3, 42bc4c <wcrtomb@plt+0x2702c>
  42bc5c:	ldr	x3, [x4, #8]
  42bc60:	cbz	x3, 42bc78 <wcrtomb@plt+0x27058>
  42bc64:	str	x2, [x3]
  42bc68:	str	x3, [x2, #8]
  42bc6c:	str	x4, [x1]
  42bc70:	str	x1, [x4, #8]
  42bc74:	ret
  42bc78:	str	x2, [x0, #216]
  42bc7c:	b	42bc68 <wcrtomb@plt+0x27048>
  42bc80:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42bc84:	ldrb	w2, [x1, #608]
  42bc88:	add	x1, x1, #0x260
  42bc8c:	cbz	w2, 42bcb0 <wcrtomb@plt+0x27090>
  42bc90:	ldrb	w3, [x1, #1]
  42bc94:	cbz	w3, 42bcc0 <wcrtomb@plt+0x270a0>
  42bc98:	cmp	w0, w2
  42bc9c:	b.eq	42bcb8 <wcrtomb@plt+0x27098>  // b.none
  42bca0:	ldrb	w2, [x1, #2]!
  42bca4:	cbnz	w2, 42bc90 <wcrtomb@plt+0x27070>
  42bca8:	mov	w0, #0x0                   	// #0
  42bcac:	b	42bcc4 <wcrtomb@plt+0x270a4>
  42bcb0:	mov	w0, #0x0                   	// #0
  42bcb4:	b	42bcc4 <wcrtomb@plt+0x270a4>
  42bcb8:	mov	w0, w3
  42bcbc:	b	42bcc4 <wcrtomb@plt+0x270a4>
  42bcc0:	mov	w0, #0x0                   	// #0
  42bcc4:	ret
  42bcc8:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42bccc:	ldrb	w1, [x1, #608]
  42bcd0:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42bcd4:	add	x2, x2, #0x260
  42bcd8:	cbz	w1, 42bcfc <wcrtomb@plt+0x270dc>
  42bcdc:	ldrb	w3, [x2, #1]
  42bce0:	cbz	w3, 42bd0c <wcrtomb@plt+0x270ec>
  42bce4:	cmp	w0, w3
  42bce8:	b.eq	42bd04 <wcrtomb@plt+0x270e4>  // b.none
  42bcec:	ldrb	w1, [x2, #2]!
  42bcf0:	cbnz	w1, 42bcdc <wcrtomb@plt+0x270bc>
  42bcf4:	mov	w0, #0x0                   	// #0
  42bcf8:	b	42bd10 <wcrtomb@plt+0x270f0>
  42bcfc:	mov	w0, #0x0                   	// #0
  42bd00:	b	42bd10 <wcrtomb@plt+0x270f0>
  42bd04:	mov	w0, w1
  42bd08:	b	42bd10 <wcrtomb@plt+0x270f0>
  42bd0c:	mov	w0, #0x0                   	// #0
  42bd10:	ret
  42bd14:	stp	x29, x30, [sp, #-80]!
  42bd18:	mov	x29, sp
  42bd1c:	stp	x19, x20, [sp, #16]
  42bd20:	stp	x23, x24, [sp, #48]
  42bd24:	mov	w24, w1
  42bd28:	str	wzr, [x2]
  42bd2c:	ldrb	w1, [x0]
  42bd30:	cbz	w1, 42bdf0 <wcrtomb@plt+0x271d0>
  42bd34:	stp	x21, x22, [sp, #32]
  42bd38:	str	x25, [sp, #64]
  42bd3c:	mov	x19, x0
  42bd40:	mov	x22, x2
  42bd44:	mov	x20, #0x0                   	// #0
  42bd48:	adrp	x21, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42bd4c:	add	x21, x21, #0x890
  42bd50:	mov	w23, #0x1                   	// #1
  42bd54:	mov	w25, #0x5c                  	// #92
  42bd58:	b	42bd68 <wcrtomb@plt+0x27148>
  42bd5c:	add	x20, x20, #0x1
  42bd60:	ldrb	w1, [x19, #1]!
  42bd64:	cbz	w1, 42bdd4 <wcrtomb@plt+0x271b4>
  42bd68:	mov	x0, x21
  42bd6c:	bl	404870 <strchr@plt>
  42bd70:	cbz	x0, 42bd78 <wcrtomb@plt+0x27158>
  42bd74:	str	w23, [x22]
  42bd78:	ldrb	w0, [x19]
  42bd7c:	cmp	w0, #0x20
  42bd80:	b.eq	42bd5c <wcrtomb@plt+0x2713c>  // b.none
  42bd84:	cmp	w0, #0x22
  42bd88:	b.eq	42bda8 <wcrtomb@plt+0x27188>  // b.none
  42bd8c:	sub	w1, w0, #0x20
  42bd90:	and	w1, w1, #0xff
  42bd94:	cmp	w1, #0x5f
  42bd98:	ccmp	w0, w25, #0x4, ls  // ls = plast
  42bd9c:	b.eq	42bdb0 <wcrtomb@plt+0x27190>  // b.none
  42bda0:	add	x20, x20, #0x1
  42bda4:	b	42bd60 <wcrtomb@plt+0x27140>
  42bda8:	add	x20, x20, #0x2
  42bdac:	b	42bd60 <wcrtomb@plt+0x27140>
  42bdb0:	cbz	w24, 42bdbc <wcrtomb@plt+0x2719c>
  42bdb4:	add	x20, x20, #0x3
  42bdb8:	b	42bd60 <wcrtomb@plt+0x27140>
  42bdbc:	bl	42bcc8 <wcrtomb@plt+0x270a8>
  42bdc0:	add	x1, x20, #0x2
  42bdc4:	add	x20, x20, #0x4
  42bdc8:	cmp	w0, #0x0
  42bdcc:	csel	x20, x20, x1, eq  // eq = none
  42bdd0:	b	42bd60 <wcrtomb@plt+0x27140>
  42bdd4:	ldp	x21, x22, [sp, #32]
  42bdd8:	ldr	x25, [sp, #64]
  42bddc:	mov	x0, x20
  42bde0:	ldp	x19, x20, [sp, #16]
  42bde4:	ldp	x23, x24, [sp, #48]
  42bde8:	ldp	x29, x30, [sp], #80
  42bdec:	ret
  42bdf0:	mov	x20, #0x0                   	// #0
  42bdf4:	b	42bddc <wcrtomb@plt+0x271bc>
  42bdf8:	ldrb	w5, [x1]
  42bdfc:	cbz	w5, 42bf18 <wcrtomb@plt+0x272f8>
  42be00:	stp	x29, x30, [sp, #-80]!
  42be04:	mov	x29, sp
  42be08:	stp	x19, x20, [sp, #16]
  42be0c:	stp	x21, x22, [sp, #32]
  42be10:	str	x23, [sp, #48]
  42be14:	mov	x19, x0
  42be18:	mov	x20, x1
  42be1c:	mov	w21, w2
  42be20:	adrp	x23, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42be24:	add	x23, x23, #0x8a0
  42be28:	adrp	x22, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42be2c:	add	x22, x22, #0x898
  42be30:	b	42be54 <wcrtomb@plt+0x27234>
  42be34:	mov	x0, x19
  42be38:	mov	w1, #0x5c                  	// #92
  42be3c:	strb	w1, [x0], #2
  42be40:	ldrb	w1, [x20]
  42be44:	strb	w1, [x19, #1]
  42be48:	mov	x19, x0
  42be4c:	ldrb	w5, [x20, #1]!
  42be50:	cbz	w5, 42bf04 <wcrtomb@plt+0x272e4>
  42be54:	cmp	w5, #0x22
  42be58:	b.eq	42be34 <wcrtomb@plt+0x27214>  // b.none
  42be5c:	sub	w0, w5, #0x20
  42be60:	and	w0, w0, #0xff
  42be64:	cmp	w0, #0x5f
  42be68:	mov	w0, #0x5c                  	// #92
  42be6c:	ccmp	w5, w0, #0x4, ls  // ls = plast
  42be70:	b.eq	42be7c <wcrtomb@plt+0x2725c>  // b.none
  42be74:	strb	w5, [x19], #1
  42be78:	b	42be4c <wcrtomb@plt+0x2722c>
  42be7c:	cbz	w21, 42beb0 <wcrtomb@plt+0x27290>
  42be80:	mov	x4, x22
  42be84:	mov	x3, #0x4                   	// #4
  42be88:	mov	w2, #0x1                   	// #1
  42be8c:	mov	x1, x3
  42be90:	add	x0, sp, #0x48
  42be94:	bl	404290 <__snprintf_chk@plt>
  42be98:	ldrh	w0, [sp, #72]
  42be9c:	strh	w0, [x19]
  42bea0:	ldrb	w0, [sp, #74]
  42bea4:	strb	w0, [x19, #2]
  42bea8:	add	x19, x19, #0x3
  42beac:	b	42be4c <wcrtomb@plt+0x2722c>
  42beb0:	mov	w0, w5
  42beb4:	bl	42bcc8 <wcrtomb@plt+0x270a8>
  42beb8:	mov	w1, #0x5c                  	// #92
  42bebc:	strb	w1, [x19]
  42bec0:	cbz	w0, 42bed0 <wcrtomb@plt+0x272b0>
  42bec4:	strb	w0, [x19, #1]
  42bec8:	add	x19, x19, #0x2
  42becc:	b	42be4c <wcrtomb@plt+0x2722c>
  42bed0:	ldrb	w5, [x20]
  42bed4:	mov	x4, x23
  42bed8:	mov	x3, #0x4                   	// #4
  42bedc:	mov	w2, #0x1                   	// #1
  42bee0:	mov	x1, x3
  42bee4:	add	x0, sp, #0x48
  42bee8:	bl	404290 <__snprintf_chk@plt>
  42beec:	ldrh	w0, [sp, #72]
  42bef0:	sturh	w0, [x19, #1]
  42bef4:	ldrb	w0, [sp, #74]
  42bef8:	strb	w0, [x19, #3]
  42befc:	add	x19, x19, #0x4
  42bf00:	b	42be4c <wcrtomb@plt+0x2722c>
  42bf04:	ldp	x19, x20, [sp, #16]
  42bf08:	ldp	x21, x22, [sp, #32]
  42bf0c:	ldr	x23, [sp, #48]
  42bf10:	ldp	x29, x30, [sp], #80
  42bf14:	ret
  42bf18:	ret
  42bf1c:	stp	x29, x30, [sp, #-32]!
  42bf20:	mov	x29, sp
  42bf24:	stp	x19, x20, [sp, #16]
  42bf28:	mov	x19, x0
  42bf2c:	ldr	x0, [x0]
  42bf30:	cbz	x0, 42bf78 <wcrtomb@plt+0x27358>
  42bf34:	mov	x20, #0x0                   	// #0
  42bf38:	b	42bf60 <wcrtomb@plt+0x27340>
  42bf3c:	bl	4047c0 <free@plt>
  42bf40:	ldr	x0, [x19, #16]
  42bf44:	add	x0, x20, x0
  42bf48:	ldr	x1, [x19, #8]
  42bf4c:	str	xzr, [x1, x0, lsl #3]
  42bf50:	add	x20, x20, #0x1
  42bf54:	ldr	x0, [x19]
  42bf58:	cmp	x0, x20
  42bf5c:	b.ls	42bf78 <wcrtomb@plt+0x27358>  // b.plast
  42bf60:	ldr	x0, [x19, #16]
  42bf64:	add	x0, x20, x0
  42bf68:	ldr	x1, [x19, #8]
  42bf6c:	ldr	x0, [x1, x0, lsl #3]
  42bf70:	cbnz	x0, 42bf3c <wcrtomb@plt+0x2731c>
  42bf74:	b	42bf50 <wcrtomb@plt+0x27330>
  42bf78:	str	xzr, [x19]
  42bf7c:	ldp	x19, x20, [sp, #16]
  42bf80:	ldp	x29, x30, [sp], #32
  42bf84:	ret
  42bf88:	stp	x29, x30, [sp, #-32]!
  42bf8c:	mov	x29, sp
  42bf90:	stp	x19, x20, [sp, #16]
  42bf94:	mov	x20, x0
  42bf98:	ldr	w0, [x0, #32]
  42bf9c:	tbnz	w0, #2, 42bfdc <wcrtomb@plt+0x273bc>
  42bfa0:	ldr	x1, [x20, #120]
  42bfa4:	cbz	x1, 42bfdc <wcrtomb@plt+0x273bc>
  42bfa8:	ldr	x0, [x1]
  42bfac:	cbz	x0, 42bfc8 <wcrtomb@plt+0x273a8>
  42bfb0:	mov	x19, #0x8                   	// #8
  42bfb4:	bl	4047c0 <free@plt>
  42bfb8:	ldr	x1, [x20, #120]
  42bfbc:	ldr	x0, [x1, x19]
  42bfc0:	add	x19, x19, #0x8
  42bfc4:	cbnz	x0, 42bfb4 <wcrtomb@plt+0x27394>
  42bfc8:	mov	x0, x1
  42bfcc:	bl	4047c0 <free@plt>
  42bfd0:	str	xzr, [x20, #136]
  42bfd4:	str	xzr, [x20, #128]
  42bfd8:	str	xzr, [x20, #120]
  42bfdc:	ldp	x19, x20, [sp, #16]
  42bfe0:	ldp	x29, x30, [sp], #32
  42bfe4:	ret
  42bfe8:	stp	x29, x30, [sp, #-32]!
  42bfec:	mov	x29, sp
  42bff0:	str	x19, [sp, #16]
  42bff4:	mov	x19, x0
  42bff8:	ldr	w0, [x0, #192]
  42bffc:	cmp	w0, #0x9
  42c000:	b.eq	42c018 <wcrtomb@plt+0x273f8>  // b.none
  42c004:	str	xzr, [x19, #200]
  42c008:	str	wzr, [x19, #192]
  42c00c:	ldr	x19, [sp, #16]
  42c010:	ldp	x29, x30, [sp], #32
  42c014:	ret
  42c018:	ldr	x0, [x19, #200]
  42c01c:	bl	4047c0 <free@plt>
  42c020:	b	42c004 <wcrtomb@plt+0x273e4>
  42c024:	stp	x29, x30, [sp, #-32]!
  42c028:	mov	x29, sp
  42c02c:	str	x19, [sp, #16]
  42c030:	mov	x19, x0
  42c034:	ldr	w0, [x0, #32]
  42c038:	tbz	w0, #3, 42c064 <wcrtomb@plt+0x27444>
  42c03c:	tbz	w0, #0, 42c058 <wcrtomb@plt+0x27438>
  42c040:	mov	x0, x19
  42c044:	bl	42bfe8 <wcrtomb@plt+0x273c8>
  42c048:	str	wzr, [x19, #192]
  42c04c:	ldr	x19, [sp, #16]
  42c050:	ldp	x29, x30, [sp], #32
  42c054:	ret
  42c058:	mov	x0, x19
  42c05c:	bl	42bf1c <wcrtomb@plt+0x272fc>
  42c060:	b	42c040 <wcrtomb@plt+0x27420>
  42c064:	str	xzr, [x19, #8]
  42c068:	str	xzr, [x19]
  42c06c:	str	xzr, [x19, #24]
  42c070:	b	42c048 <wcrtomb@plt+0x27428>
  42c074:	stp	x29, x30, [sp, #-32]!
  42c078:	mov	x29, sp
  42c07c:	str	x19, [sp, #16]
  42c080:	mov	x19, x0
  42c084:	bl	42b7b4 <wcrtomb@plt+0x26b94>
  42c088:	mov	x0, x19
  42c08c:	bl	42bf1c <wcrtomb@plt+0x272fc>
  42c090:	ldr	x0, [x19, #8]
  42c094:	bl	4047c0 <free@plt>
  42c098:	str	xzr, [x19, #8]
  42c09c:	mov	x0, x19
  42c0a0:	bl	42bf88 <wcrtomb@plt+0x27368>
  42c0a4:	ldr	x19, [sp, #16]
  42c0a8:	ldp	x29, x30, [sp], #32
  42c0ac:	ret
  42c0b0:	stp	x29, x30, [sp, #-48]!
  42c0b4:	mov	x29, sp
  42c0b8:	stp	x19, x20, [sp, #16]
  42c0bc:	str	x21, [sp, #32]
  42c0c0:	mov	x19, x0
  42c0c4:	mov	x20, x1
  42c0c8:	mov	x21, x2
  42c0cc:	ldr	x0, [x0]
  42c0d0:	add	x0, x0, #0x1
  42c0d4:	lsl	x1, x0, #3
  42c0d8:	ldr	x0, [x19, #8]
  42c0dc:	bl	404540 <realloc@plt>
  42c0e0:	cbz	x0, 42c110 <wcrtomb@plt+0x274f0>
  42c0e4:	str	x0, [x21]
  42c0e8:	ldr	x0, [x19]
  42c0ec:	str	x0, [x20]
  42c0f0:	str	xzr, [x19, #8]
  42c0f4:	str	xzr, [x19]
  42c0f8:	str	xzr, [x19, #24]
  42c0fc:	mov	w0, #0x0                   	// #0
  42c100:	ldp	x19, x20, [sp, #16]
  42c104:	ldr	x21, [sp, #32]
  42c108:	ldp	x29, x30, [sp], #48
  42c10c:	ret
  42c110:	mov	w0, #0xffffffff            	// #-1
  42c114:	b	42c100 <wcrtomb@plt+0x274e0>
  42c118:	ldr	w1, [x0, #192]
  42c11c:	cmp	w1, #0x9
  42c120:	b.eq	42c140 <wcrtomb@plt+0x27520>  // b.none
  42c124:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42c128:	ldr	w2, [x0, #628]
  42c12c:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42c130:	add	x0, x0, #0x8a8
  42c134:	cmp	w1, w2
  42c138:	b.lt	42c148 <wcrtomb@plt+0x27528>  // b.tstop
  42c13c:	ret
  42c140:	ldr	x0, [x0, #200]
  42c144:	b	42c13c <wcrtomb@plt+0x2751c>
  42c148:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42c14c:	add	x0, x0, #0x260
  42c150:	add	x0, x0, #0x18
  42c154:	ldr	x0, [x0, w1, sxtw #3]
  42c158:	b	42c13c <wcrtomb@plt+0x2751c>
  42c15c:	stp	x29, x30, [sp, #-32]!
  42c160:	mov	x29, sp
  42c164:	stp	x19, x20, [sp, #16]
  42c168:	mov	x19, x0
  42c16c:	ldr	w0, [x0, #192]
  42c170:	cmp	w0, #0x1
  42c174:	b.eq	42c1a0 <wcrtomb@plt+0x27580>  // b.none
  42c178:	mov	x0, x19
  42c17c:	bl	42c118 <wcrtomb@plt+0x274f8>
  42c180:	ldr	x2, [x19, #96]
  42c184:	mov	x1, x0
  42c188:	adrp	x0, 454000 <_obstack_memory_used@@Base+0x12e64>
  42c18c:	add	x0, x0, #0x848
  42c190:	blr	x2
  42c194:	ldp	x19, x20, [sp, #16]
  42c198:	ldp	x29, x30, [sp], #32
  42c19c:	ret
  42c1a0:	ldr	x20, [x19, #96]
  42c1a4:	mov	w2, #0x5                   	// #5
  42c1a8:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42c1ac:	add	x1, x1, #0x8b8
  42c1b0:	mov	x0, #0x0                   	// #0
  42c1b4:	bl	4049c0 <dcgettext@plt>
  42c1b8:	ldr	x2, [x19, #184]
  42c1bc:	ldr	x1, [x19, #168]
  42c1c0:	ldrb	w1, [x1, x2]
  42c1c4:	blr	x20
  42c1c8:	b	42c194 <wcrtomb@plt+0x27574>
  42c1cc:	stp	x29, x30, [sp, #-32]!
  42c1d0:	mov	x29, sp
  42c1d4:	str	x19, [sp, #16]
  42c1d8:	mov	x19, x0
  42c1dc:	bl	404ad0 <__errno_location@plt>
  42c1e0:	mov	w1, #0xc                   	// #12
  42c1e4:	str	w1, [x0]
  42c1e8:	mov	w0, #0x2                   	// #2
  42c1ec:	str	w0, [x19, #192]
  42c1f0:	ldr	w0, [x19, #32]
  42c1f4:	tbz	w0, #7, 42c204 <wcrtomb@plt+0x275e4>
  42c1f8:	ldr	x1, [x19, #88]
  42c1fc:	mov	x0, x19
  42c200:	blr	x1
  42c204:	ldr	w0, [x19, #32]
  42c208:	tbnz	w0, #4, 42c22c <wcrtomb@plt+0x2760c>
  42c20c:	ldr	w0, [x19, #32]
  42c210:	tbz	w0, #3, 42c238 <wcrtomb@plt+0x27618>
  42c214:	mov	x0, x19
  42c218:	bl	42b7b4 <wcrtomb@plt+0x26b94>
  42c21c:	ldr	w0, [x19, #192]
  42c220:	ldr	x19, [sp, #16]
  42c224:	ldp	x29, x30, [sp], #32
  42c228:	ret
  42c22c:	mov	x0, x19
  42c230:	bl	42c15c <wcrtomb@plt+0x2753c>
  42c234:	b	42c20c <wcrtomb@plt+0x275ec>
  42c238:	mov	x0, x19
  42c23c:	bl	42c074 <wcrtomb@plt+0x27454>
  42c240:	b	42c214 <wcrtomb@plt+0x275f4>
  42c244:	stp	x29, x30, [sp, #-32]!
  42c248:	mov	x29, sp
  42c24c:	stp	x19, x20, [sp, #16]
  42c250:	mov	x19, x0
  42c254:	mov	x20, x1
  42c258:	ldr	w0, [x0, #32]
  42c25c:	mov	x1, #0x0                   	// #0
  42c260:	tbz	w0, #1, 42c268 <wcrtomb@plt+0x27648>
  42c264:	ldr	x1, [x19, #16]
  42c268:	ldr	x2, [x19, #8]
  42c26c:	cbz	x2, 42c2c4 <wcrtomb@plt+0x276a4>
  42c270:	ldr	x0, [x19]
  42c274:	add	x1, x1, x0
  42c278:	add	x3, x1, x20
  42c27c:	ldr	x4, [x19, #24]
  42c280:	mov	w0, #0x0                   	// #0
  42c284:	cmp	x4, x3
  42c288:	b.cs	42c2b8 <wcrtomb@plt+0x27698>  // b.hs, b.nlast
  42c28c:	cmp	x20, #0x80
  42c290:	mov	x0, #0x80                  	// #128
  42c294:	csel	x20, x20, x0, cs  // cs = hs, nlast
  42c298:	add	x20, x20, x1
  42c29c:	lsl	x1, x20, #3
  42c2a0:	mov	x0, x2
  42c2a4:	bl	404540 <realloc@plt>
  42c2a8:	cbz	x0, 42c2e4 <wcrtomb@plt+0x276c4>
  42c2ac:	str	x20, [x19, #24]
  42c2b0:	str	x0, [x19, #8]
  42c2b4:	mov	w0, #0x0                   	// #0
  42c2b8:	ldp	x19, x20, [sp, #16]
  42c2bc:	ldp	x29, x30, [sp], #32
  42c2c0:	ret
  42c2c4:	add	x1, x1, x20
  42c2c8:	cmp	x1, #0x80
  42c2cc:	mov	x0, #0x80                  	// #128
  42c2d0:	csel	x20, x20, x0, hi  // hi = pmore
  42c2d4:	mov	x1, #0x8                   	// #8
  42c2d8:	mov	x0, x20
  42c2dc:	bl	4044d0 <calloc@plt>
  42c2e0:	b	42c2a8 <wcrtomb@plt+0x27688>
  42c2e4:	mov	x0, x19
  42c2e8:	bl	42c1cc <wcrtomb@plt+0x275ac>
  42c2ec:	b	42c2b8 <wcrtomb@plt+0x27698>
  42c2f0:	stp	x29, x30, [sp, #-64]!
  42c2f4:	mov	x29, sp
  42c2f8:	stp	x19, x20, [sp, #16]
  42c2fc:	stp	x21, x22, [sp, #32]
  42c300:	str	x23, [sp, #48]
  42c304:	mov	x20, x0
  42c308:	mov	x23, x2
  42c30c:	sxtw	x22, w1
  42c310:	add	x2, x22, #0x1
  42c314:	ldr	x1, [x0]
  42c318:	add	x1, x2, x1
  42c31c:	bl	42c244 <wcrtomb@plt+0x27624>
  42c320:	mov	w21, w0
  42c324:	cbnz	w0, 42c37c <wcrtomb@plt+0x2775c>
  42c328:	cbz	x22, 42c3ec <wcrtomb@plt+0x277cc>
  42c32c:	mov	x19, #0x0                   	// #0
  42c330:	ldr	x0, [x23, x19, lsl #3]
  42c334:	bl	404590 <strdup@plt>
  42c338:	cbz	x0, 42c394 <wcrtomb@plt+0x27774>
  42c33c:	ldr	x3, [x20, #16]
  42c340:	add	x3, x19, x3
  42c344:	ldr	x1, [x20]
  42c348:	add	x3, x3, x1
  42c34c:	ldr	x1, [x20, #8]
  42c350:	str	x0, [x1, x3, lsl #3]
  42c354:	add	x19, x19, #0x1
  42c358:	cmp	x22, x19
  42c35c:	b.ne	42c330 <wcrtomb@plt+0x27710>  // b.any
  42c360:	ldr	x0, [x20]
  42c364:	add	x19, x19, x0
  42c368:	str	x19, [x20]
  42c36c:	ldr	x0, [x20, #16]
  42c370:	add	x19, x19, x0
  42c374:	ldr	x0, [x20, #8]
  42c378:	str	xzr, [x0, x19, lsl #3]
  42c37c:	mov	w0, w21
  42c380:	ldp	x19, x20, [sp, #16]
  42c384:	ldp	x21, x22, [sp, #32]
  42c388:	ldr	x23, [sp, #48]
  42c38c:	ldp	x29, x30, [sp], #64
  42c390:	ret
  42c394:	cbz	x19, 42c3dc <wcrtomb@plt+0x277bc>
  42c398:	ldr	x0, [x20, #16]
  42c39c:	add	x0, x19, x0
  42c3a0:	ldr	x1, [x20]
  42c3a4:	add	x0, x0, x1
  42c3a8:	ldr	x1, [x20, #8]
  42c3ac:	add	x0, x1, x0, lsl #3
  42c3b0:	ldur	x0, [x0, #-8]
  42c3b4:	bl	4047c0 <free@plt>
  42c3b8:	ldr	x0, [x20, #16]
  42c3bc:	add	x0, x19, x0
  42c3c0:	ldr	x1, [x20]
  42c3c4:	add	x0, x0, x1
  42c3c8:	ldr	x1, [x20, #8]
  42c3cc:	add	x0, x1, x0, lsl #3
  42c3d0:	stur	xzr, [x0, #-8]
  42c3d4:	subs	x19, x19, #0x1
  42c3d8:	b.ne	42c398 <wcrtomb@plt+0x27778>  // b.any
  42c3dc:	mov	x0, x20
  42c3e0:	bl	42c1cc <wcrtomb@plt+0x275ac>
  42c3e4:	mov	w21, w0
  42c3e8:	b	42c37c <wcrtomb@plt+0x2775c>
  42c3ec:	mov	x19, x22
  42c3f0:	b	42c360 <wcrtomb@plt+0x27740>
  42c3f4:	stp	x29, x30, [sp, #-32]!
  42c3f8:	mov	x29, sp
  42c3fc:	stp	x19, x20, [sp, #16]
  42c400:	mov	x20, x0
  42c404:	mov	x19, x1
  42c408:	mov	x1, #0x28                  	// #40
  42c40c:	mov	x0, #0x1                   	// #1
  42c410:	bl	4044d0 <calloc@plt>
  42c414:	cbz	x0, 42c42c <wcrtomb@plt+0x2780c>
  42c418:	str	x0, [x19]
  42c41c:	mov	w0, #0x0                   	// #0
  42c420:	ldp	x19, x20, [sp, #16]
  42c424:	ldp	x29, x30, [sp], #32
  42c428:	ret
  42c42c:	mov	x0, x20
  42c430:	bl	42c1cc <wcrtomb@plt+0x275ac>
  42c434:	b	42c420 <wcrtomb@plt+0x27800>
  42c438:	stp	x29, x30, [sp, #-64]!
  42c43c:	mov	x29, sp
  42c440:	stp	x19, x20, [sp, #16]
  42c444:	stp	x21, x22, [sp, #32]
  42c448:	mov	x20, x0
  42c44c:	mov	x22, x1
  42c450:	mov	x21, x2
  42c454:	mov	w19, w3
  42c458:	cmp	x2, x1
  42c45c:	b.ne	42c468 <wcrtomb@plt+0x27848>  // b.any
  42c460:	and	w0, w3, #0x100
  42c464:	tbz	w19, #8, 42c478 <wcrtomb@plt+0x27858>
  42c468:	add	x1, sp, #0x38
  42c46c:	mov	x0, x20
  42c470:	bl	42c3f4 <wcrtomb@plt+0x277d4>
  42c474:	cbz	w0, 42c488 <wcrtomb@plt+0x27868>
  42c478:	ldp	x19, x20, [sp, #16]
  42c47c:	ldp	x21, x22, [sp, #32]
  42c480:	ldp	x29, x30, [sp], #64
  42c484:	ret
  42c488:	ldr	x1, [sp, #56]
  42c48c:	mov	w3, #0xfffffefd            	// #-259
  42c490:	and	w19, w19, w3
  42c494:	str	w19, [x1, #16]
  42c498:	str	x22, [x1, #24]
  42c49c:	str	x21, [x1, #32]
  42c4a0:	str	xzr, [x1, #8]
  42c4a4:	ldr	x2, [x20, #216]
  42c4a8:	str	x2, [x1]
  42c4ac:	cbz	x2, 42c4bc <wcrtomb@plt+0x2789c>
  42c4b0:	str	x1, [x2, #8]
  42c4b4:	str	x1, [x20, #216]
  42c4b8:	b	42c478 <wcrtomb@plt+0x27858>
  42c4bc:	str	x1, [x20, #208]
  42c4c0:	b	42c4b4 <wcrtomb@plt+0x27894>
  42c4c4:	stp	x29, x30, [sp, #-128]!
  42c4c8:	mov	x29, sp
  42c4cc:	stp	x21, x22, [sp, #32]
  42c4d0:	stp	x25, x26, [sp, #64]
  42c4d4:	mov	x25, x0
  42c4d8:	ldr	x21, [x0, #208]
  42c4dc:	cbz	x21, 42c798 <wcrtomb@plt+0x27b78>
  42c4e0:	stp	x19, x20, [sp, #16]
  42c4e4:	stp	x23, x24, [sp, #48]
  42c4e8:	stp	x27, x28, [sp, #80]
  42c4ec:	b	42c6c8 <wcrtomb@plt+0x27aa8>
  42c4f0:	mov	x0, x25
  42c4f4:	bl	42c1cc <wcrtomb@plt+0x275ac>
  42c4f8:	ldp	x19, x20, [sp, #16]
  42c4fc:	ldp	x23, x24, [sp, #48]
  42c500:	ldp	x27, x28, [sp, #80]
  42c504:	b	42c788 <wcrtomb@plt+0x27b68>
  42c508:	add	x1, x1, #0x1
  42c50c:	mov	w3, #0x2                   	// #2
  42c510:	mov	w2, #0x10                  	// #16
  42c514:	add	x1, x22, x1
  42c518:	add	x0, sp, #0x7c
  42c51c:	bl	42badc <wcrtomb@plt+0x26ebc>
  42c520:	cbnz	w0, 42c544 <wcrtomb@plt+0x27924>
  42c524:	mov	x0, x19
  42c528:	mov	w1, #0x5c                  	// #92
  42c52c:	strb	w1, [x0], #2
  42c530:	add	w20, w20, #0x2
  42c534:	ldrb	w1, [x22, w23, sxtw]
  42c538:	strb	w1, [x19, #1]
  42c53c:	mov	x19, x0
  42c540:	b	42c650 <wcrtomb@plt+0x27a30>
  42c544:	ldr	w1, [sp, #124]
  42c548:	strb	w1, [x19], #1
  42c54c:	add	w0, w0, #0x1
  42c550:	add	w20, w0, w23
  42c554:	b	42c650 <wcrtomb@plt+0x27a30>
  42c558:	tst	w3, w28
  42c55c:	b.eq	42c5e8 <wcrtomb@plt+0x279c8>  // b.none
  42c560:	sxtw	x2, w23
  42c564:	add	x1, x22, x2
  42c568:	ldrb	w0, [x22, w23, sxtw]
  42c56c:	sub	w0, w0, #0x30
  42c570:	and	w0, w0, #0xff
  42c574:	cmp	w0, #0x9
  42c578:	b.hi	42c5e8 <wcrtomb@plt+0x279c8>  // b.pmore
  42c57c:	cmp	x24, x2
  42c580:	b.ne	42c5a4 <wcrtomb@plt+0x27984>  // b.any
  42c584:	mov	x0, x19
  42c588:	mov	w1, #0x5c                  	// #92
  42c58c:	strb	w1, [x0], #2
  42c590:	add	w20, w20, #0x2
  42c594:	ldrb	w1, [x22, w23, sxtw]
  42c598:	strb	w1, [x19, #1]
  42c59c:	mov	x19, x0
  42c5a0:	b	42c650 <wcrtomb@plt+0x27a30>
  42c5a4:	mov	w3, #0x3                   	// #3
  42c5a8:	mov	w2, #0x8                   	// #8
  42c5ac:	add	x0, sp, #0x7c
  42c5b0:	bl	42badc <wcrtomb@plt+0x26ebc>
  42c5b4:	cbnz	w0, 42c5d8 <wcrtomb@plt+0x279b8>
  42c5b8:	mov	x0, x19
  42c5bc:	mov	w1, #0x5c                  	// #92
  42c5c0:	strb	w1, [x0], #2
  42c5c4:	add	w20, w20, #0x2
  42c5c8:	ldrb	w1, [x22, w23, sxtw]
  42c5cc:	strb	w1, [x19, #1]
  42c5d0:	mov	x19, x0
  42c5d4:	b	42c650 <wcrtomb@plt+0x27a30>
  42c5d8:	ldr	w1, [sp, #124]
  42c5dc:	strb	w1, [x19], #1
  42c5e0:	add	w20, w23, w0
  42c5e4:	b	42c650 <wcrtomb@plt+0x27a30>
  42c5e8:	ldr	x1, [x26, #8]
  42c5ec:	ldrb	w4, [x22, w23, sxtw]
  42c5f0:	ldrb	w0, [x1]
  42c5f4:	cbz	w0, 42c610 <wcrtomb@plt+0x279f0>
  42c5f8:	ldrb	w2, [x1, #1]
  42c5fc:	cbz	w2, 42c610 <wcrtomb@plt+0x279f0>
  42c600:	cmp	w4, w0
  42c604:	b.eq	42c638 <wcrtomb@plt+0x27a18>  // b.none
  42c608:	ldrb	w0, [x1, #2]!
  42c60c:	cbnz	w0, 42c5f8 <wcrtomb@plt+0x279d8>
  42c610:	str	wzr, [sp, #124]
  42c614:	ldr	w0, [sp, #108]
  42c618:	tst	w3, w0
  42c61c:	b.eq	42c628 <wcrtomb@plt+0x27a08>  // b.none
  42c620:	mov	w0, #0x5c                  	// #92
  42c624:	strb	w0, [x19], #1
  42c628:	add	w20, w20, #0x2
  42c62c:	ldrb	w0, [x22, w23, sxtw]
  42c630:	strb	w0, [x19], #1
  42c634:	b	42c650 <wcrtomb@plt+0x27a30>
  42c638:	str	w2, [sp, #124]
  42c63c:	strb	w2, [x19], #1
  42c640:	add	w20, w20, #0x2
  42c644:	b	42c650 <wcrtomb@plt+0x27a30>
  42c648:	add	w20, w20, #0x1
  42c64c:	strb	w0, [x19], #1
  42c650:	sxtw	x0, w20
  42c654:	cmp	x24, w20, sxtw
  42c658:	b.ls	42c6bc <wcrtomb@plt+0x27a9c>  // b.plast
  42c65c:	ldrb	w0, [x22, x0]
  42c660:	cmp	w0, #0x5c
  42c664:	b.ne	42c648 <wcrtomb@plt+0x27a28>  // b.any
  42c668:	add	w23, w20, #0x1
  42c66c:	ldr	w3, [x25, #36]
  42c670:	tst	w3, w27
  42c674:	b.eq	42c558 <wcrtomb@plt+0x27938>  // b.none
  42c678:	sxtw	x1, w23
  42c67c:	ldrb	w0, [x22, w23, sxtw]
  42c680:	and	w0, w0, #0xffffffdf
  42c684:	and	w0, w0, #0xff
  42c688:	cmp	w0, #0x58
  42c68c:	b.ne	42c558 <wcrtomb@plt+0x27938>  // b.any
  42c690:	sub	x0, x24, x1
  42c694:	cmp	x0, #0x1
  42c698:	b.hi	42c508 <wcrtomb@plt+0x278e8>  // b.pmore
  42c69c:	mov	x0, x19
  42c6a0:	mov	w1, #0x5c                  	// #92
  42c6a4:	strb	w1, [x0], #2
  42c6a8:	add	w20, w20, #0x2
  42c6ac:	ldrb	w1, [x22, w23, sxtw]
  42c6b0:	strb	w1, [x19, #1]
  42c6b4:	mov	x19, x0
  42c6b8:	b	42c650 <wcrtomb@plt+0x27a30>
  42c6bc:	strb	wzr, [x19]
  42c6c0:	ldr	x21, [x21, #8]
  42c6c4:	cbz	x21, 42c778 <wcrtomb@plt+0x27b58>
  42c6c8:	ldr	w0, [x25, #32]
  42c6cc:	tst	w0, #0x600
  42c6d0:	b.eq	42c6c0 <wcrtomb@plt+0x27aa0>  // b.none
  42c6d4:	ldr	w19, [x21, #16]
  42c6d8:	tbnz	w19, #3, 42c6c0 <wcrtomb@plt+0x27aa0>
  42c6dc:	mov	x1, x21
  42c6e0:	mov	x0, x25
  42c6e4:	bl	42b520 <wcrtomb@plt+0x26900>
  42c6e8:	mov	x22, x0
  42c6ec:	mov	x0, x21
  42c6f0:	bl	42baa0 <wcrtomb@plt+0x26e80>
  42c6f4:	mov	x24, x0
  42c6f8:	tbnz	w19, #1, 42c72c <wcrtomb@plt+0x27b0c>
  42c6fc:	add	x0, x0, #0x1
  42c700:	bl	404310 <malloc@plt>
  42c704:	mov	x19, x0
  42c708:	cbz	x0, 42c4f0 <wcrtomb@plt+0x278d0>
  42c70c:	mov	x2, x24
  42c710:	mov	x1, x22
  42c714:	bl	403f70 <memcpy@plt>
  42c718:	strb	wzr, [x19, x24]
  42c71c:	str	x19, [x21, #24]
  42c720:	ldr	w0, [x21, #16]
  42c724:	orr	w0, w0, #0x2
  42c728:	str	w0, [x21, #16]
  42c72c:	ldr	x19, [x21, #24]
  42c730:	ldr	w0, [x21, #16]
  42c734:	ubfx	x0, x0, #2, #1
  42c738:	mov	w26, w0
  42c73c:	cbz	x24, 42c6bc <wcrtomb@plt+0x27a9c>
  42c740:	lsl	w0, w0, #2
  42c744:	mov	w1, #0x40                  	// #64
  42c748:	lsl	w27, w1, w0
  42c74c:	mov	w1, #0x20                  	// #32
  42c750:	lsl	w28, w1, w0
  42c754:	mov	w1, #0x10                  	// #16
  42c758:	lsl	w0, w1, w0
  42c75c:	str	w0, [sp, #108]
  42c760:	mov	w20, #0x0                   	// #0
  42c764:	mov	x0, #0x0                   	// #0
  42c768:	sxtw	x26, w26
  42c76c:	add	x26, x26, #0x8
  42c770:	add	x26, x25, x26, lsl #3
  42c774:	b	42c65c <wcrtomb@plt+0x27a3c>
  42c778:	mov	w0, #0x0                   	// #0
  42c77c:	ldp	x19, x20, [sp, #16]
  42c780:	ldp	x23, x24, [sp, #48]
  42c784:	ldp	x27, x28, [sp, #80]
  42c788:	ldp	x21, x22, [sp, #32]
  42c78c:	ldp	x25, x26, [sp, #64]
  42c790:	ldp	x29, x30, [sp], #128
  42c794:	ret
  42c798:	mov	w0, #0x0                   	// #0
  42c79c:	b	42c788 <wcrtomb@plt+0x27b68>
  42c7a0:	stp	x29, x30, [sp, #-96]!
  42c7a4:	mov	x29, sp
  42c7a8:	stp	x21, x22, [sp, #32]
  42c7ac:	mov	w21, #0x0                   	// #0
  42c7b0:	cbnz	x4, 42c7c4 <wcrtomb@plt+0x27ba4>
  42c7b4:	mov	w0, w21
  42c7b8:	ldp	x21, x22, [sp, #32]
  42c7bc:	ldp	x29, x30, [sp], #96
  42c7c0:	ret
  42c7c4:	stp	x19, x20, [sp, #16]
  42c7c8:	stp	x23, x24, [sp, #48]
  42c7cc:	stp	x25, x26, [sp, #64]
  42c7d0:	mov	x23, x0
  42c7d4:	mov	x22, x1
  42c7d8:	mov	x24, x2
  42c7dc:	mov	x20, x3
  42c7e0:	mov	x19, x4
  42c7e4:	mov	w25, w5
  42c7e8:	add	x1, sp, #0x58
  42c7ec:	bl	42c3f4 <wcrtomb@plt+0x277d4>
  42c7f0:	mov	w21, w0
  42c7f4:	cbz	w0, 42c80c <wcrtomb@plt+0x27bec>
  42c7f8:	mov	w21, #0x1                   	// #1
  42c7fc:	ldp	x19, x20, [sp, #16]
  42c800:	ldp	x23, x24, [sp, #48]
  42c804:	ldp	x25, x26, [sp, #64]
  42c808:	b	42c7b4 <wcrtomb@plt+0x27b94>
  42c80c:	mov	w3, #0x0                   	// #0
  42c810:	ldr	x2, [x22]
  42c814:	ldr	x1, [sp, #88]
  42c818:	mov	x0, x23
  42c81c:	bl	42bbd4 <wcrtomb@plt+0x26fb4>
  42c820:	ldr	w0, [x24, #16]
  42c824:	tbnz	w0, #1, 42c864 <wcrtomb@plt+0x27c44>
  42c828:	ldr	x0, [sp, #88]
  42c82c:	ldr	x3, [x24, #24]
  42c830:	add	x3, x20, x3
  42c834:	str	x3, [x0, #24]
  42c838:	add	x19, x3, x19
  42c83c:	str	x19, [x0, #32]
  42c840:	ldr	x0, [sp, #88]
  42c844:	ldr	w5, [x0, #16]
  42c848:	orr	w5, w5, w25
  42c84c:	str	w5, [x0, #16]
  42c850:	str	x0, [x22]
  42c854:	ldp	x19, x20, [sp, #16]
  42c858:	ldp	x23, x24, [sp, #48]
  42c85c:	ldp	x25, x26, [sp, #64]
  42c860:	b	42c7b4 <wcrtomb@plt+0x27b94>
  42c864:	mov	x1, x24
  42c868:	mov	x0, x23
  42c86c:	bl	42b520 <wcrtomb@plt+0x26900>
  42c870:	mov	x26, x0
  42c874:	add	x0, x19, #0x1
  42c878:	bl	404310 <malloc@plt>
  42c87c:	mov	x24, x0
  42c880:	cbz	x0, 42c8a8 <wcrtomb@plt+0x27c88>
  42c884:	mov	x2, x19
  42c888:	add	x1, x26, x20
  42c88c:	bl	403f70 <memcpy@plt>
  42c890:	strb	wzr, [x24, x19]
  42c894:	ldr	x0, [sp, #88]
  42c898:	mov	w1, #0x2                   	// #2
  42c89c:	str	w1, [x0, #16]
  42c8a0:	str	x24, [x0, #24]
  42c8a4:	b	42c840 <wcrtomb@plt+0x27c20>
  42c8a8:	mov	x0, x23
  42c8ac:	bl	42c1cc <wcrtomb@plt+0x275ac>
  42c8b0:	mov	w21, w0
  42c8b4:	ldp	x19, x20, [sp, #16]
  42c8b8:	ldp	x23, x24, [sp, #48]
  42c8bc:	ldp	x25, x26, [sp, #64]
  42c8c0:	b	42c7b4 <wcrtomb@plt+0x27b94>
  42c8c4:	stp	x29, x30, [sp, #-128]!
  42c8c8:	mov	x29, sp
  42c8cc:	stp	x19, x20, [sp, #16]
  42c8d0:	stp	x21, x22, [sp, #32]
  42c8d4:	stp	x23, x24, [sp, #48]
  42c8d8:	stp	x25, x26, [sp, #64]
  42c8dc:	mov	x24, x0
  42c8e0:	mov	x21, x1
  42c8e4:	mov	x25, x2
  42c8e8:	str	x3, [sp, #104]
  42c8ec:	bl	42b520 <wcrtomb@plt+0x26900>
  42c8f0:	mov	x19, x0
  42c8f4:	mov	x0, x21
  42c8f8:	bl	42baa0 <wcrtomb@plt+0x26e80>
  42c8fc:	add	x20, x19, x0
  42c900:	str	x21, [sp, #112]
  42c904:	str	x19, [sp, #120]
  42c908:	cmp	x19, x20
  42c90c:	b.cs	42ca84 <wcrtomb@plt+0x27e64>  // b.hs, b.nlast
  42c910:	stp	x27, x28, [sp, #80]
  42c914:	mov	x26, x0
  42c918:	mov	x22, x19
  42c91c:	mov	x23, #0x0                   	// #0
  42c920:	mov	w27, #0x10                  	// #16
  42c924:	mov	w28, #0x14                  	// #20
  42c928:	b	42c948 <wcrtomb@plt+0x27d28>
  42c92c:	add	x19, x19, #0x1
  42c930:	str	x19, [sp, #120]
  42c934:	ldr	x19, [sp, #120]
  42c938:	add	x19, x19, #0x1
  42c93c:	str	x19, [sp, #120]
  42c940:	cmp	x19, x20
  42c944:	b.cs	42c9f0 <wcrtomb@plt+0x27dd0>  // b.hs, b.nlast
  42c948:	ldrb	w0, [x19]
  42c94c:	cmp	w0, #0x5c
  42c950:	b.eq	42c92c <wcrtomb@plt+0x27d0c>  // b.none
  42c954:	cmp	w0, #0x24
  42c958:	b.ne	42c934 <wcrtomb@plt+0x27d14>  // b.any
  42c95c:	ldrb	w0, [x19, #1]
  42c960:	blr	x25
  42c964:	cbz	w0, 42c934 <wcrtomb@plt+0x27d14>
  42c968:	ldr	x19, [sp, #120]
  42c96c:	sub	x19, x19, x22
  42c970:	ldr	x0, [sp, #112]
  42c974:	cmp	x0, x21
  42c978:	b.eq	42c988 <wcrtomb@plt+0x27d68>  // b.none
  42c97c:	ldr	w1, [x0, #16]
  42c980:	orr	w1, w1, #0x10
  42c984:	str	w1, [x0, #16]
  42c988:	mov	w5, w27
  42c98c:	mov	x4, x19
  42c990:	mov	x3, x23
  42c994:	mov	x2, x21
  42c998:	add	x1, sp, #0x70
  42c99c:	mov	x0, x24
  42c9a0:	bl	42c7a0 <wcrtomb@plt+0x27b80>
  42c9a4:	cbnz	w0, 42ca8c <wcrtomb@plt+0x27e6c>
  42c9a8:	ldr	x1, [sp, #120]
  42c9ac:	add	x1, x1, #0x1
  42c9b0:	str	x1, [sp, #120]
  42c9b4:	ldr	w5, [x21, #16]
  42c9b8:	and	w5, w5, w28
  42c9bc:	add	x4, sp, #0x78
  42c9c0:	add	x3, sp, #0x70
  42c9c4:	sub	x2, x26, x19
  42c9c8:	mov	x0, x24
  42c9cc:	ldr	x6, [sp, #104]
  42c9d0:	blr	x6
  42c9d4:	cbnz	w0, 42ca98 <wcrtomb@plt+0x27e78>
  42c9d8:	ldr	x0, [sp, #120]
  42c9dc:	add	x23, x23, #0x1
  42c9e0:	sub	x22, x0, x22
  42c9e4:	add	x23, x22, x23
  42c9e8:	add	x22, x0, #0x1
  42c9ec:	b	42c934 <wcrtomb@plt+0x27d14>
  42c9f0:	cmp	x19, x22
  42c9f4:	b.ls	42ca40 <wcrtomb@plt+0x27e20>  // b.plast
  42c9f8:	ldr	x0, [sp, #112]
  42c9fc:	cmp	x0, x21
  42ca00:	b.eq	42ca10 <wcrtomb@plt+0x27df0>  // b.none
  42ca04:	ldr	w1, [x0, #16]
  42ca08:	orr	w1, w1, #0x10
  42ca0c:	str	w1, [x0, #16]
  42ca10:	ldr	w5, [x21, #16]
  42ca14:	mov	w0, #0x14                  	// #20
  42ca18:	and	w5, w5, w0
  42ca1c:	sub	x4, x19, x22
  42ca20:	mov	x3, x23
  42ca24:	mov	x2, x21
  42ca28:	add	x1, sp, #0x70
  42ca2c:	mov	x0, x24
  42ca30:	bl	42c7a0 <wcrtomb@plt+0x27b80>
  42ca34:	mov	w1, w0
  42ca38:	mov	w0, #0x1                   	// #1
  42ca3c:	cbnz	w1, 42caa4 <wcrtomb@plt+0x27e84>
  42ca40:	mov	w0, #0x0                   	// #0
  42ca44:	ldr	x1, [sp, #112]
  42ca48:	cmp	x1, x21
  42ca4c:	b.eq	42caac <wcrtomb@plt+0x27e8c>  // b.none
  42ca50:	mov	x1, x21
  42ca54:	mov	x0, x24
  42ca58:	bl	42b550 <wcrtomb@plt+0x26930>
  42ca5c:	mov	x0, x21
  42ca60:	bl	42b77c <wcrtomb@plt+0x26b5c>
  42ca64:	mov	w0, #0x0                   	// #0
  42ca68:	ldp	x27, x28, [sp, #80]
  42ca6c:	ldp	x19, x20, [sp, #16]
  42ca70:	ldp	x21, x22, [sp, #32]
  42ca74:	ldp	x23, x24, [sp, #48]
  42ca78:	ldp	x25, x26, [sp, #64]
  42ca7c:	ldp	x29, x30, [sp], #128
  42ca80:	ret
  42ca84:	mov	w0, #0x0                   	// #0
  42ca88:	b	42ca6c <wcrtomb@plt+0x27e4c>
  42ca8c:	mov	w0, #0x1                   	// #1
  42ca90:	ldp	x27, x28, [sp, #80]
  42ca94:	b	42ca6c <wcrtomb@plt+0x27e4c>
  42ca98:	mov	w0, #0x1                   	// #1
  42ca9c:	ldp	x27, x28, [sp, #80]
  42caa0:	b	42ca6c <wcrtomb@plt+0x27e4c>
  42caa4:	ldp	x27, x28, [sp, #80]
  42caa8:	b	42ca6c <wcrtomb@plt+0x27e4c>
  42caac:	ldp	x27, x28, [sp, #80]
  42cab0:	b	42ca6c <wcrtomb@plt+0x27e4c>
  42cab4:	stp	x29, x30, [sp, #-64]!
  42cab8:	mov	x29, sp
  42cabc:	stp	x19, x20, [sp, #16]
  42cac0:	stp	x21, x22, [sp, #32]
  42cac4:	mov	x21, x0
  42cac8:	ldr	x19, [x0, #208]
  42cacc:	cbz	x19, 42cb28 <wcrtomb@plt+0x27f08>
  42cad0:	str	x23, [sp, #48]
  42cad4:	mov	w20, #0x48                  	// #72
  42cad8:	adrp	x23, 42e000 <wcrtomb@plt+0x293e0>
  42cadc:	add	x23, x23, #0x5c
  42cae0:	adrp	x22, 42b000 <wcrtomb@plt+0x263e0>
  42cae4:	add	x22, x22, #0x750
  42cae8:	b	42caf0 <wcrtomb@plt+0x27ed0>
  42caec:	cbz	x19, 42cb24 <wcrtomb@plt+0x27f04>
  42caf0:	mov	x1, x19
  42caf4:	ldr	x19, [x19, #8]
  42caf8:	ldr	w2, [x1, #16]
  42cafc:	tst	w2, w20
  42cb00:	b.ne	42caec <wcrtomb@plt+0x27ecc>  // b.any
  42cb04:	mov	x3, x23
  42cb08:	mov	x2, x22
  42cb0c:	mov	x0, x21
  42cb10:	bl	42c8c4 <wcrtomb@plt+0x27ca4>
  42cb14:	cbz	w0, 42caec <wcrtomb@plt+0x27ecc>
  42cb18:	mov	w0, #0x1                   	// #1
  42cb1c:	ldr	x23, [sp, #48]
  42cb20:	b	42cb34 <wcrtomb@plt+0x27f14>
  42cb24:	ldr	x23, [sp, #48]
  42cb28:	mov	x0, x21
  42cb2c:	bl	42b7f0 <wcrtomb@plt+0x26bd0>
  42cb30:	mov	w0, #0x0                   	// #0
  42cb34:	ldp	x19, x20, [sp, #16]
  42cb38:	ldp	x21, x22, [sp, #32]
  42cb3c:	ldp	x29, x30, [sp], #64
  42cb40:	ret
  42cb44:	stp	x29, x30, [sp, #-48]!
  42cb48:	mov	x29, sp
  42cb4c:	stp	x19, x20, [sp, #16]
  42cb50:	mov	x20, x0
  42cb54:	ldr	x19, [x0, #208]
  42cb58:	cbz	x19, 42cbac <wcrtomb@plt+0x27f8c>
  42cb5c:	stp	x21, x22, [sp, #32]
  42cb60:	adrp	x22, 42e000 <wcrtomb@plt+0x293e0>
  42cb64:	add	x22, x22, #0xbf4
  42cb68:	adrp	x21, 42b000 <wcrtomb@plt+0x263e0>
  42cb6c:	add	x21, x21, #0x770
  42cb70:	b	42cb78 <wcrtomb@plt+0x27f58>
  42cb74:	cbz	x19, 42cba8 <wcrtomb@plt+0x27f88>
  42cb78:	mov	x1, x19
  42cb7c:	ldr	x19, [x19, #8]
  42cb80:	ldr	w2, [x1, #16]
  42cb84:	tbnz	w2, #3, 42cb74 <wcrtomb@plt+0x27f54>
  42cb88:	mov	x3, x22
  42cb8c:	mov	x2, x21
  42cb90:	mov	x0, x20
  42cb94:	bl	42c8c4 <wcrtomb@plt+0x27ca4>
  42cb98:	cbz	w0, 42cb74 <wcrtomb@plt+0x27f54>
  42cb9c:	mov	w0, #0x1                   	// #1
  42cba0:	ldp	x21, x22, [sp, #32]
  42cba4:	b	42cbb8 <wcrtomb@plt+0x27f98>
  42cba8:	ldp	x21, x22, [sp, #32]
  42cbac:	mov	x0, x20
  42cbb0:	bl	42b7f0 <wcrtomb@plt+0x26bd0>
  42cbb4:	mov	w0, #0x0                   	// #0
  42cbb8:	ldp	x19, x20, [sp, #16]
  42cbbc:	ldp	x29, x30, [sp], #48
  42cbc0:	ret
  42cbc4:	stp	x29, x30, [sp, #-112]!
  42cbc8:	mov	x29, sp
  42cbcc:	stp	x19, x20, [sp, #16]
  42cbd0:	stp	x25, x26, [sp, #64]
  42cbd4:	ldr	x19, [x0, #208]
  42cbd8:	cbz	x19, 42cd8c <wcrtomb@plt+0x2816c>
  42cbdc:	stp	x21, x22, [sp, #32]
  42cbe0:	stp	x23, x24, [sp, #48]
  42cbe4:	stp	x27, x28, [sp, #80]
  42cbe8:	mov	x23, x0
  42cbec:	str	xzr, [sp, #104]
  42cbf0:	mov	x26, #0x0                   	// #0
  42cbf4:	b	42ccc0 <wcrtomb@plt+0x280a0>
  42cbf8:	cmp	x22, x20
  42cbfc:	b.eq	42ccb8 <wcrtomb@plt+0x28098>  // b.none
  42cc00:	cmp	x20, #0x1
  42cc04:	b.ls	42cda0 <wcrtomb@plt+0x28180>  // b.plast
  42cc08:	ldr	x0, [sp, #104]
  42cc0c:	cmp	x0, x20
  42cc10:	b.cs	42cc2c <wcrtomb@plt+0x2800c>  // b.hs, b.nlast
  42cc14:	mov	x1, x20
  42cc18:	mov	x0, x26
  42cc1c:	bl	404540 <realloc@plt>
  42cc20:	cbz	x0, 42cd18 <wcrtomb@plt+0x280f8>
  42cc24:	str	x20, [sp, #104]
  42cc28:	mov	x26, x0
  42cc2c:	sub	x20, x20, #0x1
  42cc30:	mov	x2, x20
  42cc34:	add	x1, x21, #0x1
  42cc38:	mov	x0, x26
  42cc3c:	bl	403f70 <memcpy@plt>
  42cc40:	strb	wzr, [x26, x20]
  42cc44:	mov	x0, x26
  42cc48:	bl	404450 <getpwnam@plt>
  42cc4c:	cbz	x0, 42ccb8 <wcrtomb@plt+0x28098>
  42cc50:	ldr	x28, [x0, #32]
  42cc54:	mov	x0, x28
  42cc58:	bl	403ff0 <strlen@plt>
  42cc5c:	mov	x25, x0
  42cc60:	sub	x22, x22, x20
  42cc64:	add	x27, x22, x0
  42cc68:	mov	x0, x27
  42cc6c:	bl	404310 <malloc@plt>
  42cc70:	mov	x24, x0
  42cc74:	cbz	x0, 42cd38 <wcrtomb@plt+0x28118>
  42cc78:	mov	x2, x25
  42cc7c:	mov	x1, x28
  42cc80:	bl	403f70 <memcpy@plt>
  42cc84:	add	x1, x20, #0x1
  42cc88:	sub	x2, x22, #0x1
  42cc8c:	add	x1, x21, x1
  42cc90:	add	x0, x24, x25
  42cc94:	bl	403f70 <memcpy@plt>
  42cc98:	add	x27, x24, x27
  42cc9c:	sturb	wzr, [x27, #-1]
  42cca0:	ldr	w0, [x19, #16]
  42cca4:	tbnz	w0, #1, 42cd58 <wcrtomb@plt+0x28138>
  42cca8:	str	x24, [x19, #24]
  42ccac:	ldr	w0, [x19, #16]
  42ccb0:	orr	w0, w0, #0x2
  42ccb4:	str	w0, [x19, #16]
  42ccb8:	ldr	x19, [x19, #8]
  42ccbc:	cbz	x19, 42cd64 <wcrtomb@plt+0x28144>
  42ccc0:	ldr	w0, [x19, #16]
  42ccc4:	tbnz	w0, #2, 42ccb8 <wcrtomb@plt+0x28098>
  42ccc8:	mov	x1, x19
  42cccc:	mov	x0, x23
  42ccd0:	bl	42b520 <wcrtomb@plt+0x26900>
  42ccd4:	mov	x21, x0
  42ccd8:	ldrb	w0, [x0]
  42ccdc:	cmp	w0, #0x7e
  42cce0:	b.ne	42ccb8 <wcrtomb@plt+0x28098>  // b.any
  42cce4:	mov	x0, x19
  42cce8:	bl	42baa0 <wcrtomb@plt+0x26e80>
  42ccec:	mov	x22, x0
  42ccf0:	mov	x20, #0x1                   	// #1
  42ccf4:	cmp	x0, x20
  42ccf8:	b.ls	42cd94 <wcrtomb@plt+0x28174>  // b.plast
  42ccfc:	ldrb	w1, [x21, x20]
  42cd00:	cmp	w1, #0x2f
  42cd04:	b.eq	42cbf8 <wcrtomb@plt+0x27fd8>  // b.none
  42cd08:	add	x20, x20, #0x1
  42cd0c:	cmp	x22, x20
  42cd10:	b.ne	42ccfc <wcrtomb@plt+0x280dc>  // b.any
  42cd14:	b	42ccb8 <wcrtomb@plt+0x28098>
  42cd18:	mov	x0, x26
  42cd1c:	bl	4047c0 <free@plt>
  42cd20:	mov	x0, x23
  42cd24:	bl	42c1cc <wcrtomb@plt+0x275ac>
  42cd28:	ldp	x21, x22, [sp, #32]
  42cd2c:	ldp	x23, x24, [sp, #48]
  42cd30:	ldp	x27, x28, [sp, #80]
  42cd34:	b	42cd7c <wcrtomb@plt+0x2815c>
  42cd38:	mov	x0, x26
  42cd3c:	bl	4047c0 <free@plt>
  42cd40:	mov	x0, x23
  42cd44:	bl	42c1cc <wcrtomb@plt+0x275ac>
  42cd48:	ldp	x21, x22, [sp, #32]
  42cd4c:	ldp	x23, x24, [sp, #48]
  42cd50:	ldp	x27, x28, [sp, #80]
  42cd54:	b	42cd7c <wcrtomb@plt+0x2815c>
  42cd58:	ldr	x0, [x19, #24]
  42cd5c:	bl	4047c0 <free@plt>
  42cd60:	b	42cca8 <wcrtomb@plt+0x28088>
  42cd64:	ldp	x21, x22, [sp, #32]
  42cd68:	ldp	x23, x24, [sp, #48]
  42cd6c:	ldp	x27, x28, [sp, #80]
  42cd70:	mov	x0, x26
  42cd74:	bl	4047c0 <free@plt>
  42cd78:	mov	w0, #0x0                   	// #0
  42cd7c:	ldp	x19, x20, [sp, #16]
  42cd80:	ldp	x25, x26, [sp, #64]
  42cd84:	ldp	x29, x30, [sp], #112
  42cd88:	ret
  42cd8c:	mov	x26, x19
  42cd90:	b	42cd70 <wcrtomb@plt+0x28150>
  42cd94:	cmp	x0, #0x1
  42cd98:	b.eq	42ccb8 <wcrtomb@plt+0x28098>  // b.none
  42cd9c:	mov	x20, #0x1                   	// #1
  42cda0:	bl	404120 <getuid@plt>
  42cda4:	bl	404730 <getpwuid@plt>
  42cda8:	b	42cc4c <wcrtomb@plt+0x2802c>
  42cdac:	stp	x29, x30, [sp, #-96]!
  42cdb0:	mov	x29, sp
  42cdb4:	stp	x25, x26, [sp, #64]
  42cdb8:	mov	x26, x0
  42cdbc:	ldr	w0, [x1, #16]
  42cdc0:	tbz	w0, #4, 42cf38 <wcrtomb@plt+0x28318>
  42cdc4:	stp	x19, x20, [sp, #16]
  42cdc8:	stp	x21, x22, [sp, #32]
  42cdcc:	stp	x23, x24, [sp, #48]
  42cdd0:	stp	x27, x28, [sp, #80]
  42cdd4:	mov	x22, x1
  42cdd8:	mov	x19, x1
  42cddc:	mov	x20, #0x0                   	// #0
  42cde0:	mov	x0, x19
  42cde4:	bl	42baa0 <wcrtomb@plt+0x26e80>
  42cde8:	add	x20, x20, x0
  42cdec:	ldr	x19, [x19, #8]
  42cdf0:	cbz	x19, 42ce08 <wcrtomb@plt+0x281e8>
  42cdf4:	ldr	w0, [x19, #16]
  42cdf8:	tbnz	w0, #4, 42cde0 <wcrtomb@plt+0x281c0>
  42cdfc:	mov	x0, x19
  42ce00:	bl	42baa0 <wcrtomb@plt+0x26e80>
  42ce04:	add	x20, x20, x0
  42ce08:	add	x0, x20, #0x1
  42ce0c:	bl	404310 <malloc@plt>
  42ce10:	mov	x28, x0
  42ce14:	cbz	x0, 42ce54 <wcrtomb@plt+0x28234>
  42ce18:	ldr	x25, [x22, #8]
  42ce1c:	mov	x1, x22
  42ce20:	mov	x0, x26
  42ce24:	bl	42b520 <wcrtomb@plt+0x26900>
  42ce28:	mov	x20, x0
  42ce2c:	mov	x0, x22
  42ce30:	bl	42baa0 <wcrtomb@plt+0x26e80>
  42ce34:	mov	x24, x0
  42ce38:	mov	x2, x0
  42ce3c:	mov	x1, x20
  42ce40:	mov	x0, x28
  42ce44:	bl	403f70 <memcpy@plt>
  42ce48:	add	x24, x28, x24
  42ce4c:	mov	w27, #0x0                   	// #0
  42ce50:	b	42cea4 <wcrtomb@plt+0x28284>
  42ce54:	mov	x0, x26
  42ce58:	bl	42c1cc <wcrtomb@plt+0x275ac>
  42ce5c:	ldp	x19, x20, [sp, #16]
  42ce60:	ldp	x21, x22, [sp, #32]
  42ce64:	ldp	x23, x24, [sp, #48]
  42ce68:	ldp	x27, x28, [sp, #80]
  42ce6c:	b	42cf20 <wcrtomb@plt+0x28300>
  42ce70:	ldr	w0, [x20, #16]
  42ce74:	and	w1, w0, #0x4
  42ce78:	ldr	w0, [x22, #16]
  42ce7c:	orr	w0, w0, w1
  42ce80:	str	w0, [x22, #16]
  42ce84:	mov	x1, x20
  42ce88:	mov	x0, x26
  42ce8c:	bl	42b550 <wcrtomb@plt+0x26930>
  42ce90:	cmp	x20, x19
  42ce94:	cset	w21, eq  // eq = none
  42ce98:	mov	x0, x20
  42ce9c:	bl	42b77c <wcrtomb@plt+0x26b5c>
  42cea0:	cbnz	w21, 42ceec <wcrtomb@plt+0x282cc>
  42cea4:	mov	x20, x25
  42cea8:	ldr	x25, [x25, #8]
  42ceac:	mov	x1, x20
  42ceb0:	mov	x0, x26
  42ceb4:	bl	42b520 <wcrtomb@plt+0x26900>
  42ceb8:	mov	x23, x0
  42cebc:	mov	x0, x20
  42cec0:	bl	42baa0 <wcrtomb@plt+0x26e80>
  42cec4:	mov	x21, x0
  42cec8:	mov	x2, x0
  42cecc:	mov	x1, x23
  42ced0:	mov	x0, x24
  42ced4:	bl	403f70 <memcpy@plt>
  42ced8:	add	x24, x24, x21
  42cedc:	mov	w21, w27
  42cee0:	cmp	x22, x20
  42cee4:	b.ne	42ce70 <wcrtomb@plt+0x28250>  // b.any
  42cee8:	b	42cea0 <wcrtomb@plt+0x28280>
  42ceec:	strb	wzr, [x24]
  42cef0:	ldr	w1, [x22, #16]
  42cef4:	and	w0, w1, #0xffffffef
  42cef8:	str	w0, [x22, #16]
  42cefc:	tbnz	w1, #1, 42cf2c <wcrtomb@plt+0x2830c>
  42cf00:	orr	w0, w0, #0x2
  42cf04:	str	w0, [x22, #16]
  42cf08:	str	x28, [x22, #24]
  42cf0c:	mov	w0, #0x0                   	// #0
  42cf10:	ldp	x19, x20, [sp, #16]
  42cf14:	ldp	x21, x22, [sp, #32]
  42cf18:	ldp	x23, x24, [sp, #48]
  42cf1c:	ldp	x27, x28, [sp, #80]
  42cf20:	ldp	x25, x26, [sp, #64]
  42cf24:	ldp	x29, x30, [sp], #96
  42cf28:	ret
  42cf2c:	ldr	x0, [x22, #24]
  42cf30:	bl	4047c0 <free@plt>
  42cf34:	b	42cf08 <wcrtomb@plt+0x282e8>
  42cf38:	mov	w0, #0x0                   	// #0
  42cf3c:	b	42cf20 <wcrtomb@plt+0x28300>
  42cf40:	stp	x29, x30, [sp, #-32]!
  42cf44:	mov	x29, sp
  42cf48:	str	x19, [sp, #16]
  42cf4c:	mov	w19, w1
  42cf50:	str	w1, [x0, #192]
  42cf54:	ldr	w1, [x0, #32]
  42cf58:	tbnz	w1, #4, 42cf6c <wcrtomb@plt+0x2834c>
  42cf5c:	mov	w0, w19
  42cf60:	ldr	x19, [sp, #16]
  42cf64:	ldp	x29, x30, [sp], #32
  42cf68:	ret
  42cf6c:	bl	42c15c <wcrtomb@plt+0x2753c>
  42cf70:	b	42cf5c <wcrtomb@plt+0x2833c>
  42cf74:	stp	x29, x30, [sp, #-32]!
  42cf78:	mov	x29, sp
  42cf7c:	str	x19, [sp, #16]
  42cf80:	mov	x19, x0
  42cf84:	str	w3, [x0, #32]
  42cf88:	tbnz	w3, #16, 42cf98 <wcrtomb@plt+0x28378>
  42cf8c:	adrp	x0, 42b000 <wcrtomb@plt+0x263e0>
  42cf90:	add	x0, x0, #0xa68
  42cf94:	str	x0, [x19, #88]
  42cf98:	and	w4, w3, #0x20000
  42cf9c:	tbnz	w3, #17, 42cfac <wcrtomb@plt+0x2838c>
  42cfa0:	adrp	x0, 42b000 <wcrtomb@plt+0x263e0>
  42cfa4:	add	x0, x0, #0x9b4
  42cfa8:	str	x0, [x19, #96]
  42cfac:	tbnz	w3, #6, 42cfbc <wcrtomb@plt+0x2839c>
  42cfb0:	str	xzr, [x19, #136]
  42cfb4:	str	xzr, [x19, #128]
  42cfb8:	str	xzr, [x19, #120]
  42cfbc:	tbnz	w3, #2, 42cfc8 <wcrtomb@plt+0x283a8>
  42cfc0:	ldr	x0, [x19, #160]
  42cfc4:	cbz	x0, 42d058 <wcrtomb@plt+0x28438>
  42cfc8:	tbz	w3, #21, 42cfdc <wcrtomb@plt+0x283bc>
  42cfcc:	tbnz	w3, #18, 42cfdc <wcrtomb@plt+0x283bc>
  42cfd0:	cbz	w4, 42d078 <wcrtomb@plt+0x28458>
  42cfd4:	ldr	x0, [x19, #96]
  42cfd8:	str	x0, [x19, #104]
  42cfdc:	str	x1, [x19, #168]
  42cfe0:	str	x2, [x19, #176]
  42cfe4:	ldr	w0, [x19, #32]
  42cfe8:	tbnz	w0, #1, 42cff0 <wcrtomb@plt+0x283d0>
  42cfec:	str	xzr, [x19, #16]
  42cff0:	tbnz	w0, #14, 42d000 <wcrtomb@plt+0x283e0>
  42cff4:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42cff8:	add	x1, x1, #0x8e0
  42cffc:	str	x1, [x19, #56]
  42d000:	tbnz	w0, #15, 42d008 <wcrtomb@plt+0x283e8>
  42d004:	str	xzr, [x19, #64]
  42d008:	tbnz	w0, #26, 42d010 <wcrtomb@plt+0x283f0>
  42d00c:	str	xzr, [x19, #152]
  42d010:	tbnz	w0, #31, 42d018 <wcrtomb@plt+0x283f8>
  42d014:	str	wzr, [x19, #36]
  42d018:	tbz	w0, #28, 42d0b8 <wcrtomb@plt+0x28498>
  42d01c:	ldr	x1, [x19, #72]
  42d020:	cbz	x1, 42d098 <wcrtomb@plt+0x28478>
  42d024:	ldr	x1, [x19, #80]
  42d028:	cbz	x1, 42d0a8 <wcrtomb@plt+0x28488>
  42d02c:	str	xzr, [x19, #184]
  42d030:	str	xzr, [x19, #48]
  42d034:	tbnz	w0, #3, 42d108 <wcrtomb@plt+0x284e8>
  42d038:	str	xzr, [x19, #216]
  42d03c:	str	xzr, [x19, #208]
  42d040:	mov	x0, x19
  42d044:	bl	42c024 <wcrtomb@plt+0x27404>
  42d048:	mov	w0, #0x0                   	// #0
  42d04c:	ldr	x19, [sp, #16]
  42d050:	ldp	x29, x30, [sp], #32
  42d054:	ret
  42d058:	mov	w1, #0x3                   	// #3
  42d05c:	mov	x0, x19
  42d060:	bl	42cf40 <wcrtomb@plt+0x28320>
  42d064:	bl	404ad0 <__errno_location@plt>
  42d068:	mov	w1, #0x16                  	// #22
  42d06c:	str	w1, [x0]
  42d070:	ldr	w0, [x19, #192]
  42d074:	b	42d04c <wcrtomb@plt+0x2842c>
  42d078:	tbz	w3, #4, 42d08c <wcrtomb@plt+0x2846c>
  42d07c:	adrp	x0, 42b000 <wcrtomb@plt+0x263e0>
  42d080:	add	x0, x0, #0x9b4
  42d084:	str	x0, [x19, #104]
  42d088:	b	42cfdc <wcrtomb@plt+0x283bc>
  42d08c:	and	w3, w3, #0xffdfffff
  42d090:	str	w3, [x19, #32]
  42d094:	b	42cfdc <wcrtomb@plt+0x283bc>
  42d098:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  42d09c:	add	x1, x1, #0x7f8
  42d0a0:	str	x1, [x19, #72]
  42d0a4:	b	42d024 <wcrtomb@plt+0x28404>
  42d0a8:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  42d0ac:	add	x1, x1, #0x7f8
  42d0b0:	str	x1, [x19, #80]
  42d0b4:	b	42d02c <wcrtomb@plt+0x2840c>
  42d0b8:	tbz	w0, #25, 42d0e0 <wcrtomb@plt+0x284c0>
  42d0bc:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42d0c0:	add	x1, x1, #0x260
  42d0c4:	str	x1, [x19, #72]
  42d0c8:	str	x1, [x19, #80]
  42d0cc:	ldr	w1, [x19, #36]
  42d0d0:	mov	w2, #0x660                 	// #1632
  42d0d4:	orr	w1, w1, w2
  42d0d8:	str	w1, [x19, #36]
  42d0dc:	b	42d02c <wcrtomb@plt+0x2840c>
  42d0e0:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  42d0e4:	add	x1, x1, #0x7f8
  42d0e8:	str	x1, [x19, #72]
  42d0ec:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42d0f0:	add	x1, x1, #0x8e8
  42d0f4:	str	x1, [x19, #80]
  42d0f8:	ldr	w1, [x19, #36]
  42d0fc:	orr	w1, w1, #0x100
  42d100:	str	w1, [x19, #36]
  42d104:	b	42d02c <wcrtomb@plt+0x2840c>
  42d108:	mov	x0, x19
  42d10c:	bl	42b7b4 <wcrtomb@plt+0x26b94>
  42d110:	b	42d038 <wcrtomb@plt+0x28418>
  42d114:	stp	x29, x30, [sp, #-304]!
  42d118:	mov	x29, sp
  42d11c:	stp	x19, x20, [sp, #16]
  42d120:	stp	x25, x26, [sp, #64]
  42d124:	ldr	w25, [x0, #36]
  42d128:	ubfx	x25, x25, #2, #1
  42d12c:	ldr	x19, [x0, #208]
  42d130:	cbz	x19, 42d3ec <wcrtomb@plt+0x287cc>
  42d134:	stp	x21, x22, [sp, #32]
  42d138:	stp	x23, x24, [sp, #48]
  42d13c:	str	x27, [sp, #80]
  42d140:	mov	x23, x0
  42d144:	lsl	w25, w25, #7
  42d148:	adrp	x24, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42d14c:	add	x24, x24, #0x8f0
  42d150:	b	42d1fc <wcrtomb@plt+0x285dc>
  42d154:	mov	x0, x23
  42d158:	bl	42c1cc <wcrtomb@plt+0x275ac>
  42d15c:	ldp	x21, x22, [sp, #32]
  42d160:	ldp	x23, x24, [sp, #48]
  42d164:	ldr	x27, [sp, #80]
  42d168:	b	42d2d4 <wcrtomb@plt+0x286b4>
  42d16c:	mov	x0, x20
  42d170:	bl	4047c0 <free@plt>
  42d174:	ldr	x0, [sp, #104]
  42d178:	mov	x21, x22
  42d17c:	mov	x20, #0x0                   	// #0
  42d180:	cbz	x0, 42d1dc <wcrtomb@plt+0x285bc>
  42d184:	add	x1, sp, #0xb0
  42d188:	mov	x0, x23
  42d18c:	bl	42c3f4 <wcrtomb@plt+0x277d4>
  42d190:	cbnz	w0, 42d3c4 <wcrtomb@plt+0x287a4>
  42d194:	ldr	x0, [sp, #112]
  42d198:	ldr	x0, [x0, x20, lsl #3]
  42d19c:	bl	404590 <strdup@plt>
  42d1a0:	cbz	x0, 42d3a4 <wcrtomb@plt+0x28784>
  42d1a4:	ldr	x1, [sp, #176]
  42d1a8:	str	x0, [x1, #24]
  42d1ac:	ldr	w0, [x1, #16]
  42d1b0:	orr	w0, w0, #0x6
  42d1b4:	str	w0, [x1, #16]
  42d1b8:	mov	w3, #0x0                   	// #0
  42d1bc:	mov	x2, x21
  42d1c0:	mov	x0, x23
  42d1c4:	bl	42bbd4 <wcrtomb@plt+0x26fb4>
  42d1c8:	ldr	x21, [sp, #176]
  42d1cc:	add	x20, x20, #0x1
  42d1d0:	ldr	x0, [sp, #104]
  42d1d4:	cmp	x0, x20
  42d1d8:	b.hi	42d184 <wcrtomb@plt+0x28564>  // b.pmore
  42d1dc:	add	x0, sp, #0x68
  42d1e0:	bl	404880 <globfree@plt>
  42d1e4:	mov	x1, x22
  42d1e8:	mov	x0, x23
  42d1ec:	bl	42b550 <wcrtomb@plt+0x26930>
  42d1f0:	mov	x0, x22
  42d1f4:	bl	42b77c <wcrtomb@plt+0x26b5c>
  42d1f8:	cbz	x19, 42d3d8 <wcrtomb@plt+0x287b8>
  42d1fc:	mov	x22, x19
  42d200:	ldr	x19, [x19, #8]
  42d204:	ldr	w0, [x22, #16]
  42d208:	tbnz	w0, #2, 42d1f8 <wcrtomb@plt+0x285d8>
  42d20c:	mov	x1, x22
  42d210:	mov	x0, x23
  42d214:	bl	42b520 <wcrtomb@plt+0x26900>
  42d218:	mov	x21, x0
  42d21c:	mov	x0, x22
  42d220:	bl	42baa0 <wcrtomb@plt+0x26e80>
  42d224:	mov	x26, x0
  42d228:	add	x27, x21, w0, uxtw
  42d22c:	mov	x20, x21
  42d230:	cmp	x20, x27
  42d234:	b.eq	42d1f8 <wcrtomb@plt+0x285d8>  // b.none
  42d238:	ldrb	w1, [x20], #1
  42d23c:	mov	x0, x24
  42d240:	bl	404870 <strchr@plt>
  42d244:	cbz	x0, 42d230 <wcrtomb@plt+0x28610>
  42d248:	add	x0, x26, #0x1
  42d24c:	bl	404310 <malloc@plt>
  42d250:	mov	x20, x0
  42d254:	cbz	x0, 42d154 <wcrtomb@plt+0x28534>
  42d258:	mov	x2, x26
  42d25c:	mov	x1, x21
  42d260:	mov	x0, x20
  42d264:	bl	403f70 <memcpy@plt>
  42d268:	strb	wzr, [x20, x26]
  42d26c:	add	x3, sp, #0x68
  42d270:	mov	x2, #0x0                   	// #0
  42d274:	mov	w1, w25
  42d278:	mov	x0, x20
  42d27c:	bl	404a00 <glob@plt>
  42d280:	cmp	w0, #0x1
  42d284:	b.eq	42d2b8 <wcrtomb@plt+0x28698>  // b.none
  42d288:	cmp	w0, #0x3
  42d28c:	b.eq	42d2e4 <wcrtomb@plt+0x286c4>  // b.none
  42d290:	cbz	w0, 42d16c <wcrtomb@plt+0x2854c>
  42d294:	mov	x0, x20
  42d298:	bl	4047c0 <free@plt>
  42d29c:	mov	w1, #0x8                   	// #8
  42d2a0:	mov	x0, x23
  42d2a4:	bl	42cf40 <wcrtomb@plt+0x28320>
  42d2a8:	ldp	x21, x22, [sp, #32]
  42d2ac:	ldp	x23, x24, [sp, #48]
  42d2b0:	ldr	x27, [sp, #80]
  42d2b4:	b	42d2d4 <wcrtomb@plt+0x286b4>
  42d2b8:	mov	x0, x20
  42d2bc:	bl	4047c0 <free@plt>
  42d2c0:	mov	x0, x23
  42d2c4:	bl	42c1cc <wcrtomb@plt+0x275ac>
  42d2c8:	ldp	x21, x22, [sp, #32]
  42d2cc:	ldp	x23, x24, [sp, #48]
  42d2d0:	ldr	x27, [sp, #80]
  42d2d4:	ldp	x19, x20, [sp, #16]
  42d2d8:	ldp	x25, x26, [sp, #64]
  42d2dc:	ldp	x29, x30, [sp], #304
  42d2e0:	ret
  42d2e4:	ldr	w0, [x23, #36]
  42d2e8:	tbnz	w0, #0, 42d360 <wcrtomb@plt+0x28740>
  42d2ec:	tbz	w0, #1, 42d374 <wcrtomb@plt+0x28754>
  42d2f0:	ldr	w0, [x23, #192]
  42d2f4:	cmp	w0, #0x9
  42d2f8:	b.eq	42d380 <wcrtomb@plt+0x28760>  // b.none
  42d2fc:	mov	w2, #0x5                   	// #5
  42d300:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42d304:	add	x1, x1, #0x8f8
  42d308:	mov	x0, #0x0                   	// #0
  42d30c:	bl	4049c0 <dcgettext@plt>
  42d310:	mov	x5, x20
  42d314:	mov	x4, x0
  42d318:	mov	x3, #0x80                  	// #128
  42d31c:	mov	w2, #0x1                   	// #1
  42d320:	mov	x1, x3
  42d324:	add	x0, sp, #0xb0
  42d328:	bl	404290 <__snprintf_chk@plt>
  42d32c:	mov	x0, x20
  42d330:	bl	4047c0 <free@plt>
  42d334:	add	x0, sp, #0xb0
  42d338:	bl	404590 <strdup@plt>
  42d33c:	str	x0, [x23, #200]
  42d340:	cbz	x0, 42d38c <wcrtomb@plt+0x2876c>
  42d344:	mov	w1, #0x9                   	// #9
  42d348:	mov	x0, x23
  42d34c:	bl	42cf40 <wcrtomb@plt+0x28320>
  42d350:	ldp	x21, x22, [sp, #32]
  42d354:	ldp	x23, x24, [sp, #48]
  42d358:	ldr	x27, [sp, #80]
  42d35c:	b	42d2d4 <wcrtomb@plt+0x286b4>
  42d360:	mov	x1, x22
  42d364:	mov	x0, x23
  42d368:	bl	42b550 <wcrtomb@plt+0x26930>
  42d36c:	mov	x0, x22
  42d370:	bl	42b77c <wcrtomb@plt+0x26b5c>
  42d374:	mov	x0, x20
  42d378:	bl	4047c0 <free@plt>
  42d37c:	b	42d1f8 <wcrtomb@plt+0x285d8>
  42d380:	ldr	x0, [x23, #200]
  42d384:	bl	4047c0 <free@plt>
  42d388:	b	42d2fc <wcrtomb@plt+0x286dc>
  42d38c:	mov	x0, x23
  42d390:	bl	42c1cc <wcrtomb@plt+0x275ac>
  42d394:	ldp	x21, x22, [sp, #32]
  42d398:	ldp	x23, x24, [sp, #48]
  42d39c:	ldr	x27, [sp, #80]
  42d3a0:	b	42d2d4 <wcrtomb@plt+0x286b4>
  42d3a4:	ldr	x0, [sp, #176]
  42d3a8:	bl	42b77c <wcrtomb@plt+0x26b5c>
  42d3ac:	mov	x0, x23
  42d3b0:	bl	42c1cc <wcrtomb@plt+0x275ac>
  42d3b4:	ldp	x21, x22, [sp, #32]
  42d3b8:	ldp	x23, x24, [sp, #48]
  42d3bc:	ldr	x27, [sp, #80]
  42d3c0:	b	42d2d4 <wcrtomb@plt+0x286b4>
  42d3c4:	mov	w0, #0x1                   	// #1
  42d3c8:	ldp	x21, x22, [sp, #32]
  42d3cc:	ldp	x23, x24, [sp, #48]
  42d3d0:	ldr	x27, [sp, #80]
  42d3d4:	b	42d2d4 <wcrtomb@plt+0x286b4>
  42d3d8:	mov	w0, #0x0                   	// #0
  42d3dc:	ldp	x21, x22, [sp, #32]
  42d3e0:	ldp	x23, x24, [sp, #48]
  42d3e4:	ldr	x27, [sp, #80]
  42d3e8:	b	42d2d4 <wcrtomb@plt+0x286b4>
  42d3ec:	mov	w0, #0x0                   	// #0
  42d3f0:	b	42d2d4 <wcrtomb@plt+0x286b4>
  42d3f4:	stp	x29, x30, [sp, #-128]!
  42d3f8:	mov	x29, sp
  42d3fc:	stp	x19, x20, [sp, #16]
  42d400:	stp	x21, x22, [sp, #32]
  42d404:	stp	x23, x24, [sp, #48]
  42d408:	stp	x25, x26, [sp, #64]
  42d40c:	mov	x20, x0
  42d410:	ldr	x23, [x0, #176]
  42d414:	ldr	x22, [x0, #168]
  42d418:	ldr	x26, [x0, #64]
  42d41c:	ldr	x24, [x0, #216]
  42d420:	str	x1, [sp, #120]
  42d424:	cmp	x23, x1
  42d428:	b.ls	42d4d0 <wcrtomb@plt+0x288b0>  // b.plast
  42d42c:	stp	x27, x28, [sp, #80]
  42d430:	mov	x21, x1
  42d434:	mov	w25, w2
  42d438:	ldr	w27, [x0, #32]
  42d43c:	tbz	w27, #13, 42d44c <wcrtomb@plt+0x2882c>
  42d440:	ldrb	w0, [x22, x1]
  42d444:	cmp	w0, #0x73
  42d448:	b.eq	42d4f0 <wcrtomb@plt+0x288d0>  // b.none
  42d44c:	cbnz	w25, 42d5f8 <wcrtomb@plt+0x289d8>
  42d450:	ldrb	w1, [x22, x21]
  42d454:	ldr	x0, [x20, #56]
  42d458:	bl	404870 <strchr@plt>
  42d45c:	cbz	x0, 42d5ec <wcrtomb@plt+0x289cc>
  42d460:	ldr	x0, [x20, #32]
  42d464:	and	x0, x0, #0xfffffff000
  42d468:	and	x0, x0, #0xffffff8000001fff
  42d46c:	cbz	x0, 42d728 <wcrtomb@plt+0x28b08>
  42d470:	add	x0, x21, #0x1
  42d474:	str	x0, [sp, #120]
  42d478:	mov	w3, #0x40                  	// #64
  42d47c:	mov	x19, x21
  42d480:	ldr	x2, [sp, #120]
  42d484:	mov	x1, x19
  42d488:	mov	x0, x20
  42d48c:	bl	42c438 <wcrtomb@plt+0x27818>
  42d490:	cbnz	w0, 42d75c <wcrtomb@plt+0x28b3c>
  42d494:	ldr	x1, [sp, #120]
  42d498:	str	x1, [x20, #184]
  42d49c:	ldr	w1, [x20, #32]
  42d4a0:	tbnz	w1, #29, 42d8c4 <wcrtomb@plt+0x28ca4>
  42d4a4:	mov	w0, #0x1                   	// #1
  42d4a8:	cbz	w25, 42d8cc <wcrtomb@plt+0x28cac>
  42d4ac:	cbz	x24, 42d740 <wcrtomb@plt+0x28b20>
  42d4b0:	ldr	w0, [x24, #16]
  42d4b4:	orr	w0, w0, #0x4
  42d4b8:	str	w0, [x24, #16]
  42d4bc:	ldr	x24, [x24, #8]
  42d4c0:	cbnz	x24, 42d4b0 <wcrtomb@plt+0x28890>
  42d4c4:	mov	w0, #0x1                   	// #1
  42d4c8:	ldp	x27, x28, [sp, #80]
  42d4cc:	b	42d4d8 <wcrtomb@plt+0x288b8>
  42d4d0:	str	wzr, [x0, #192]
  42d4d4:	mov	w0, #0x0                   	// #0
  42d4d8:	ldp	x19, x20, [sp, #16]
  42d4dc:	ldp	x21, x22, [sp, #32]
  42d4e0:	ldp	x23, x24, [sp, #48]
  42d4e4:	ldp	x25, x26, [sp, #64]
  42d4e8:	ldp	x29, x30, [sp], #128
  42d4ec:	ret
  42d4f0:	add	x0, x1, #0x3
  42d4f4:	cmp	x0, x23
  42d4f8:	b.cs	42d44c <wcrtomb@plt+0x2882c>  // b.hs, b.nlast
  42d4fc:	add	x0, x22, x1
  42d500:	ldrb	w1, [x0, #1]
  42d504:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42d508:	add	x0, x0, #0x918
  42d50c:	bl	404870 <strchr@plt>
  42d510:	mov	x19, x21
  42d514:	cbz	x0, 42d44c <wcrtomb@plt+0x2882c>
  42d518:	adrp	x27, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42d51c:	add	x27, x27, #0x918
  42d520:	b	42d568 <wcrtomb@plt+0x28948>
  42d524:	ldrb	w2, [x22, x19]
  42d528:	cmp	w26, w2
  42d52c:	b.eq	42d554 <wcrtomb@plt+0x28934>  // b.none
  42d530:	and	w0, w2, #0xffffffdf
  42d534:	sub	w0, w0, #0x41
  42d538:	and	w0, w0, #0xff
  42d53c:	cmp	w0, #0x19
  42d540:	b.ls	42d5b4 <wcrtomb@plt+0x28994>  // b.plast
  42d544:	sub	w0, w2, #0x30
  42d548:	and	w0, w0, #0xff
  42d54c:	cmp	w0, #0x9
  42d550:	b.ls	42d5b4 <wcrtomb@plt+0x28994>  // b.plast
  42d554:	cmp	x23, x19
  42d558:	b.ls	42d5dc <wcrtomb@plt+0x289bc>  // b.plast
  42d55c:	cmp	w2, #0x3b
  42d560:	b.ne	42d5dc <wcrtomb@plt+0x289bc>  // b.any
  42d564:	add	x19, x19, #0x1
  42d568:	ldrb	w0, [x22, x19]
  42d56c:	cmp	w0, #0x73
  42d570:	b.ne	42d5dc <wcrtomb@plt+0x289bc>  // b.any
  42d574:	add	x0, x19, #0x3
  42d578:	cmp	x23, x0
  42d57c:	b.ls	42d5dc <wcrtomb@plt+0x289bc>  // b.plast
  42d580:	add	x0, x22, x19
  42d584:	ldrb	w26, [x0, #1]
  42d588:	mov	w1, w26
  42d58c:	mov	x0, x27
  42d590:	bl	404870 <strchr@plt>
  42d594:	cbz	x0, 42d5dc <wcrtomb@plt+0x289bc>
  42d598:	add	x19, x19, #0x2
  42d59c:	cmp	x23, x19
  42d5a0:	b.ls	42d5dc <wcrtomb@plt+0x289bc>  // b.plast
  42d5a4:	mov	w1, #0x1                   	// #1
  42d5a8:	b	42d5c0 <wcrtomb@plt+0x289a0>
  42d5ac:	cmp	w26, w0
  42d5b0:	cinc	w1, w1, eq  // eq = none
  42d5b4:	add	x19, x19, #0x1
  42d5b8:	cmp	x23, x19
  42d5bc:	b.ls	42d5dc <wcrtomb@plt+0x289bc>  // b.plast
  42d5c0:	cmp	w1, #0x3
  42d5c4:	b.eq	42d524 <wcrtomb@plt+0x28904>  // b.none
  42d5c8:	ldrb	w0, [x22, x19]
  42d5cc:	cmp	w0, #0x5c
  42d5d0:	b.ne	42d5ac <wcrtomb@plt+0x2898c>  // b.any
  42d5d4:	add	x19, x19, #0x1
  42d5d8:	b	42d5b4 <wcrtomb@plt+0x28994>
  42d5dc:	sxtw	x19, w19
  42d5e0:	str	x19, [sp, #120]
  42d5e4:	mov	w3, #0x20                  	// #32
  42d5e8:	b	42d47c <wcrtomb@plt+0x2885c>
  42d5ec:	mov	x19, x21
  42d5f0:	mov	w27, #0x0                   	// #0
  42d5f4:	b	42d600 <wcrtomb@plt+0x289e0>
  42d5f8:	mov	x19, x21
  42d5fc:	mov	w27, #0x0                   	// #0
  42d600:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42d604:	add	x0, x0, #0x948
  42d608:	str	x0, [sp, #104]
  42d60c:	adrp	x28, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42d610:	add	x28, x28, #0x940
  42d614:	b	42d7dc <wcrtomb@plt+0x28bbc>
  42d618:	add	x24, x21, #0x1
  42d61c:	cmp	x23, x24
  42d620:	b.ls	42d63c <wcrtomb@plt+0x28a1c>  // b.plast
  42d624:	ldrb	w0, [x22, x24]
  42d628:	cmp	w0, #0xa
  42d62c:	b.eq	42d63c <wcrtomb@plt+0x28a1c>  // b.none
  42d630:	add	x24, x24, #0x1
  42d634:	cmp	x23, x24
  42d638:	b.hi	42d624 <wcrtomb@plt+0x28a04>  // b.pmore
  42d63c:	mov	w3, #0x0                   	// #0
  42d640:	mov	x2, x21
  42d644:	mov	x1, x19
  42d648:	mov	x0, x20
  42d64c:	bl	42c438 <wcrtomb@plt+0x27818>
  42d650:	mov	w1, w0
  42d654:	mov	w0, #0x2                   	// #2
  42d658:	cbnz	w1, 42d8bc <wcrtomb@plt+0x28c9c>
  42d65c:	str	x24, [x20, #184]
  42d660:	mov	w0, #0x1                   	// #1
  42d664:	ldp	x27, x28, [sp, #80]
  42d668:	b	42d4d8 <wcrtomb@plt+0x288b8>
  42d66c:	add	x0, x21, #0x1
  42d670:	cmp	x0, x23
  42d674:	b.ne	42d6a8 <wcrtomb@plt+0x28a88>  // b.any
  42d678:	str	x23, [sp, #120]
  42d67c:	cbz	w27, 42d738 <wcrtomb@plt+0x28b18>
  42d680:	mov	w3, #0x0                   	// #0
  42d684:	ldr	x0, [sp, #120]
  42d688:	cmp	x0, x19
  42d68c:	b.ls	42d480 <wcrtomb@plt+0x28860>  // b.plast
  42d690:	ldr	x0, [x20, #216]
  42d694:	cbz	x0, 42d480 <wcrtomb@plt+0x28860>
  42d698:	ldr	w1, [x0, #16]
  42d69c:	orr	w1, w1, #0x10
  42d6a0:	str	w1, [x0, #16]
  42d6a4:	b	42d480 <wcrtomb@plt+0x28860>
  42d6a8:	add	x21, x21, #0x2
  42d6ac:	str	x21, [sp, #120]
  42d6b0:	b	42d7d0 <wcrtomb@plt+0x28bb0>
  42d6b4:	ldr	w0, [x20, #32]
  42d6b8:	tbnz	w0, #6, 42d6cc <wcrtomb@plt+0x28aac>
  42d6bc:	add	x0, x22, x1
  42d6c0:	ldrb	w0, [x0, #1]
  42d6c4:	cmp	w0, #0x7b
  42d6c8:	b.eq	42d708 <wcrtomb@plt+0x28ae8>  // b.none
  42d6cc:	ldr	w0, [x20, #32]
  42d6d0:	tbnz	w0, #2, 42d7ac <wcrtomb@plt+0x28b8c>
  42d6d4:	ldr	x1, [sp, #120]
  42d6d8:	add	x0, x22, x1
  42d6dc:	ldrb	w0, [x0, #1]
  42d6e0:	cmp	w0, #0x28
  42d6e4:	b.ne	42d7ac <wcrtomb@plt+0x28b8c>  // b.any
  42d6e8:	ldr	x4, [sp, #104]
  42d6ec:	add	x3, sp, #0x78
  42d6f0:	mov	x2, x23
  42d6f4:	add	x1, x1, #0x2
  42d6f8:	mov	x0, x22
  42d6fc:	bl	42b684 <wcrtomb@plt+0x26a64>
  42d700:	cbnz	w0, 42d7ac <wcrtomb@plt+0x28b8c>
  42d704:	b	42d7d0 <wcrtomb@plt+0x28bb0>
  42d708:	mov	x4, x28
  42d70c:	add	x3, sp, #0x78
  42d710:	mov	x2, x23
  42d714:	add	x1, x1, #0x2
  42d718:	mov	x0, x22
  42d71c:	bl	42b684 <wcrtomb@plt+0x26a64>
  42d720:	cbnz	w0, 42d6cc <wcrtomb@plt+0x28aac>
  42d724:	b	42d7d0 <wcrtomb@plt+0x28bb0>
  42d728:	tst	x27, #0x800
  42d72c:	cset	w3, eq  // eq = none
  42d730:	lsl	w3, w3, #8
  42d734:	b	42d47c <wcrtomb@plt+0x2885c>
  42d738:	mov	w3, #0x0                   	// #0
  42d73c:	b	42d480 <wcrtomb@plt+0x28860>
  42d740:	ldr	x24, [x20, #208]
  42d744:	cbnz	x24, 42d4b0 <wcrtomb@plt+0x28890>
  42d748:	ldp	x27, x28, [sp, #80]
  42d74c:	b	42d4d8 <wcrtomb@plt+0x288b8>
  42d750:	mov	w0, #0x2                   	// #2
  42d754:	ldp	x27, x28, [sp, #80]
  42d758:	b	42d4d8 <wcrtomb@plt+0x288b8>
  42d75c:	mov	w0, #0x2                   	// #2
  42d760:	ldp	x27, x28, [sp, #80]
  42d764:	b	42d4d8 <wcrtomb@plt+0x288b8>
  42d768:	cmp	x3, x19
  42d76c:	b.ls	42d8a0 <wcrtomb@plt+0x28c80>  // b.plast
  42d770:	cmp	w2, #0x27
  42d774:	mov	w3, #0x10c                 	// #268
  42d778:	mov	w0, #0x104                 	// #260
  42d77c:	csel	w3, w3, w0, eq  // eq = none
  42d780:	mov	x2, x19
  42d784:	mov	x0, x20
  42d788:	bl	42c438 <wcrtomb@plt+0x27818>
  42d78c:	cbnz	w0, 42d8b0 <wcrtomb@plt+0x28c90>
  42d790:	str	x19, [sp, #120]
  42d794:	add	x19, x19, #0x1
  42d798:	mov	w27, #0x1                   	// #1
  42d79c:	ldr	x1, [sp, #120]
  42d7a0:	ldrb	w0, [x22, x1]
  42d7a4:	cmp	w0, #0x24
  42d7a8:	b.eq	42d6b4 <wcrtomb@plt+0x28a94>  // b.none
  42d7ac:	cbnz	w25, 42d7c4 <wcrtomb@plt+0x28ba4>
  42d7b0:	ldr	x0, [sp, #120]
  42d7b4:	ldrb	w1, [x22, x0]
  42d7b8:	ldr	x0, [x20, #56]
  42d7bc:	bl	404870 <strchr@plt>
  42d7c0:	cbnz	x0, 42d67c <wcrtomb@plt+0x28a5c>
  42d7c4:	ldr	x0, [sp, #120]
  42d7c8:	add	x0, x0, #0x1
  42d7cc:	str	x0, [sp, #120]
  42d7d0:	ldr	x21, [sp, #120]
  42d7d4:	cmp	x21, x23
  42d7d8:	b.cs	42d67c <wcrtomb@plt+0x28a5c>  // b.hs, b.nlast
  42d7dc:	cbz	x26, 42d7f0 <wcrtomb@plt+0x28bd0>
  42d7e0:	ldrb	w1, [x22, x21]
  42d7e4:	mov	x0, x26
  42d7e8:	bl	404870 <strchr@plt>
  42d7ec:	cbnz	x0, 42d618 <wcrtomb@plt+0x289f8>
  42d7f0:	ldr	w0, [x20, #32]
  42d7f4:	tst	w0, #0x600
  42d7f8:	b.eq	42d79c <wcrtomb@plt+0x28b7c>  // b.none
  42d7fc:	ldrb	w1, [x22, x21]
  42d800:	cmp	w1, #0x5c
  42d804:	b.eq	42d66c <wcrtomb@plt+0x28a4c>  // b.none
  42d808:	and	w2, w0, #0x200
  42d80c:	cmp	w1, #0x27
  42d810:	ccmp	w2, #0x0, #0x4, eq  // eq = none
  42d814:	b.ne	42d828 <wcrtomb@plt+0x28c08>  // b.any
  42d818:	and	w0, w0, #0x400
  42d81c:	cmp	w1, #0x22
  42d820:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  42d824:	b.eq	42d79c <wcrtomb@plt+0x28b7c>  // b.none
  42d828:	cbz	w27, 42d840 <wcrtomb@plt+0x28c20>
  42d82c:	ldr	x0, [x20, #216]
  42d830:	cbz	x0, 42d840 <wcrtomb@plt+0x28c20>
  42d834:	ldr	w1, [x0, #16]
  42d838:	orr	w1, w1, #0x10
  42d83c:	str	w1, [x0, #16]
  42d840:	mov	w3, #0x10                  	// #16
  42d844:	mov	x2, x21
  42d848:	mov	x1, x19
  42d84c:	mov	x0, x20
  42d850:	bl	42c438 <wcrtomb@plt+0x27818>
  42d854:	cbnz	w0, 42d750 <wcrtomb@plt+0x28b30>
  42d858:	ldr	x6, [sp, #120]
  42d85c:	ldr	x4, [x20, #168]
  42d860:	ldr	x3, [x20, #176]
  42d864:	ldrb	w2, [x4, x6]
  42d868:	add	x1, x6, #0x1
  42d86c:	cmp	x3, x1
  42d870:	b.ls	42d8a0 <wcrtomb@plt+0x28c80>  // b.plast
  42d874:	mov	x19, x1
  42d878:	mov	w5, #0x22                  	// #34
  42d87c:	ldrb	w0, [x4, x19]
  42d880:	cmp	w2, w0
  42d884:	b.eq	42d768 <wcrtomb@plt+0x28b48>  // b.none
  42d888:	cmp	w0, #0x5c
  42d88c:	ccmp	w2, w5, #0x0, eq  // eq = none
  42d890:	cinc	x19, x19, eq  // eq = none
  42d894:	add	x19, x19, #0x1
  42d898:	cmp	x3, x19
  42d89c:	b.hi	42d87c <wcrtomb@plt+0x28c5c>  // b.pmore
  42d8a0:	str	x6, [x20, #184]
  42d8a4:	mov	w1, #0x1                   	// #1
  42d8a8:	mov	x0, x20
  42d8ac:	bl	42cf40 <wcrtomb@plt+0x28320>
  42d8b0:	mov	w0, #0x2                   	// #2
  42d8b4:	ldp	x27, x28, [sp, #80]
  42d8b8:	b	42d4d8 <wcrtomb@plt+0x288b8>
  42d8bc:	ldp	x27, x28, [sp, #80]
  42d8c0:	b	42d4d8 <wcrtomb@plt+0x288b8>
  42d8c4:	ldp	x27, x28, [sp, #80]
  42d8c8:	b	42d4d8 <wcrtomb@plt+0x288b8>
  42d8cc:	ldp	x27, x28, [sp, #80]
  42d8d0:	b	42d4d8 <wcrtomb@plt+0x288b8>
  42d8d4:	stp	x29, x30, [sp, #-80]!
  42d8d8:	mov	x29, sp
  42d8dc:	stp	x19, x20, [sp, #16]
  42d8e0:	stp	x21, x22, [sp, #32]
  42d8e4:	mov	x20, x0
  42d8e8:	mov	x19, x1
  42d8ec:	ldr	w0, [x0, #32]
  42d8f0:	tbnz	w0, #21, 42d924 <wcrtomb@plt+0x28d04>
  42d8f4:	ldr	w0, [x20, #32]
  42d8f8:	tbnz	w0, #22, 42d950 <wcrtomb@plt+0x28d30>
  42d8fc:	ldr	w0, [x20, #36]
  42d900:	tbz	w0, #7, 42d918 <wcrtomb@plt+0x28cf8>
  42d904:	ldr	x0, [x20, #48]
  42d908:	add	x0, x0, #0x1
  42d90c:	ldr	x1, [x20, #40]
  42d910:	cmp	x0, x1
  42d914:	b.eq	42d950 <wcrtomb@plt+0x28d30>  // b.none
  42d918:	mov	x21, #0x1000                	// #4096
  42d91c:	movk	x21, #0x80, lsl #32
  42d920:	b	42d978 <wcrtomb@plt+0x28d58>
  42d924:	ldr	x21, [x20, #104]
  42d928:	mov	w2, #0x5                   	// #5
  42d92c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42d930:	add	x1, x1, #0x950
  42d934:	mov	x0, #0x0                   	// #0
  42d938:	bl	4049c0 <dcgettext@plt>
  42d93c:	ldr	x3, [x20, #168]
  42d940:	ldr	w2, [x20, #176]
  42d944:	ldr	w1, [x20, #224]
  42d948:	blr	x21
  42d94c:	b	42d8f4 <wcrtomb@plt+0x28cd4>
  42d950:	mov	w2, #0x1                   	// #1
  42d954:	mov	x1, x19
  42d958:	mov	x0, x20
  42d95c:	bl	42d3f4 <wcrtomb@plt+0x287d4>
  42d960:	cmp	w0, #0x2
  42d964:	b.ne	42d9c0 <wcrtomb@plt+0x28da0>  // b.any
  42d968:	ldr	w0, [x20, #192]
  42d96c:	b	42dab4 <wcrtomb@plt+0x28e94>
  42d970:	ldr	x19, [x20, #184]
  42d974:	add	x19, x19, #0x1
  42d978:	mov	w2, #0x0                   	// #0
  42d97c:	mov	x1, x19
  42d980:	mov	x0, x20
  42d984:	bl	42d3f4 <wcrtomb@plt+0x287d4>
  42d988:	cmp	w0, #0x1
  42d98c:	b.ne	42d9a4 <wcrtomb@plt+0x28d84>  // b.any
  42d990:	ldr	x0, [x20, #32]
  42d994:	tst	x0, x21
  42d998:	b.eq	42d970 <wcrtomb@plt+0x28d50>  // b.none
  42d99c:	ldr	x19, [x20, #184]
  42d9a0:	b	42d978 <wcrtomb@plt+0x28d58>
  42d9a4:	ldr	x1, [x20, #216]
  42d9a8:	cbz	x1, 42d9b8 <wcrtomb@plt+0x28d98>
  42d9ac:	ldr	w2, [x1, #16]
  42d9b0:	and	w2, w2, #0xffffffef
  42d9b4:	str	w2, [x1, #16]
  42d9b8:	cmp	w0, #0x2
  42d9bc:	b.eq	42da00 <wcrtomb@plt+0x28de0>  // b.none
  42d9c0:	ldr	w0, [x20, #32]
  42d9c4:	tbnz	w0, #21, 42da08 <wcrtomb@plt+0x28de8>
  42d9c8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42d9cc:	ldr	x0, [x0, #704]
  42d9d0:	cbz	x0, 42dab0 <wcrtomb@plt+0x28e90>
  42d9d4:	stp	x23, x24, [sp, #48]
  42d9d8:	str	x25, [sp, #64]
  42d9dc:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42d9e0:	add	x21, x21, #0x260
  42d9e4:	add	x21, x21, #0x60
  42d9e8:	mov	w23, #0x5                   	// #5
  42d9ec:	adrp	x22, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42d9f0:	add	x22, x22, #0x978
  42d9f4:	adrp	x24, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42d9f8:	add	x24, x24, #0x988
  42d9fc:	b	42dafc <wcrtomb@plt+0x28edc>
  42da00:	ldr	w0, [x20, #192]
  42da04:	b	42dab4 <wcrtomb@plt+0x28e94>
  42da08:	ldr	x19, [x20, #104]
  42da0c:	ldr	w21, [x20, #224]
  42da10:	mov	w2, #0x5                   	// #5
  42da14:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42da18:	add	x1, x1, #0x968
  42da1c:	mov	x0, #0x0                   	// #0
  42da20:	bl	4049c0 <dcgettext@plt>
  42da24:	mov	x2, x0
  42da28:	mov	w1, w21
  42da2c:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42da30:	add	x0, x0, #0x978
  42da34:	blr	x19
  42da38:	mov	x0, x20
  42da3c:	bl	42b5a8 <wcrtomb@plt+0x26988>
  42da40:	b	42d9c8 <wcrtomb@plt+0x28da8>
  42da44:	ldr	x19, [x20, #208]
  42da48:	cbnz	x19, 42da90 <wcrtomb@plt+0x28e70>
  42da4c:	ldr	w0, [x20, #32]
  42da50:	tbz	w0, #21, 42db2c <wcrtomb@plt+0x28f0c>
  42da54:	ldr	x19, [x20, #104]
  42da58:	ldr	w25, [x20, #224]
  42da5c:	mov	w2, w23
  42da60:	mov	x1, x24
  42da64:	mov	x0, #0x0                   	// #0
  42da68:	bl	4049c0 <dcgettext@plt>
  42da6c:	mov	x2, x0
  42da70:	mov	w1, w25
  42da74:	mov	x0, x22
  42da78:	blr	x19
  42da7c:	mov	x0, x20
  42da80:	bl	42b5a8 <wcrtomb@plt+0x26988>
  42da84:	b	42db2c <wcrtomb@plt+0x28f0c>
  42da88:	ldr	x19, [x19, #8]
  42da8c:	cbz	x19, 42da4c <wcrtomb@plt+0x28e2c>
  42da90:	ldr	w0, [x19, #16]
  42da94:	tbz	w0, #4, 42da88 <wcrtomb@plt+0x28e68>
  42da98:	mov	x1, x19
  42da9c:	mov	x0, x20
  42daa0:	bl	42cdac <wcrtomb@plt+0x2818c>
  42daa4:	cbz	w0, 42da88 <wcrtomb@plt+0x28e68>
  42daa8:	ldp	x23, x24, [sp, #48]
  42daac:	ldr	x25, [sp, #64]
  42dab0:	ldr	w0, [x20, #192]
  42dab4:	ldp	x19, x20, [sp, #16]
  42dab8:	ldp	x21, x22, [sp, #32]
  42dabc:	ldp	x29, x30, [sp], #80
  42dac0:	ret
  42dac4:	ldr	x19, [x20, #104]
  42dac8:	ldr	w25, [x20, #224]
  42dacc:	mov	w2, w23
  42dad0:	ldr	x1, [x21]
  42dad4:	mov	x0, #0x0                   	// #0
  42dad8:	bl	4049c0 <dcgettext@plt>
  42dadc:	mov	x2, x0
  42dae0:	mov	w1, w25
  42dae4:	mov	x0, x22
  42dae8:	blr	x19
  42daec:	mov	x0, x20
  42daf0:	bl	42b5a8 <wcrtomb@plt+0x26988>
  42daf4:	ldr	x0, [x21, #24]!
  42daf8:	cbz	x0, 42db4c <wcrtomb@plt+0x28f2c>
  42dafc:	ldr	w2, [x21, #8]
  42db00:	ldr	w1, [x20, #32]
  42db04:	and	w1, w2, w1
  42db08:	ldr	w0, [x21, #12]
  42db0c:	tbz	w0, #1, 42db18 <wcrtomb@plt+0x28ef8>
  42db10:	cmp	w2, w1
  42db14:	cset	w1, eq  // eq = none
  42db18:	tbz	w0, #0, 42db24 <wcrtomb@plt+0x28f04>
  42db1c:	cmp	w1, #0x0
  42db20:	cset	w1, eq  // eq = none
  42db24:	cbz	w1, 42daf4 <wcrtomb@plt+0x28ed4>
  42db28:	tbnz	w0, #2, 42da44 <wcrtomb@plt+0x28e24>
  42db2c:	ldr	x1, [x21, #16]
  42db30:	cbz	x1, 42daf4 <wcrtomb@plt+0x28ed4>
  42db34:	mov	x0, x20
  42db38:	blr	x1
  42db3c:	cbnz	w0, 42db58 <wcrtomb@plt+0x28f38>
  42db40:	ldr	w0, [x20, #32]
  42db44:	tbz	w0, #21, 42daf4 <wcrtomb@plt+0x28ed4>
  42db48:	b	42dac4 <wcrtomb@plt+0x28ea4>
  42db4c:	ldp	x23, x24, [sp, #48]
  42db50:	ldr	x25, [sp, #64]
  42db54:	b	42dab0 <wcrtomb@plt+0x28e90>
  42db58:	ldp	x23, x24, [sp, #48]
  42db5c:	ldr	x25, [sp, #64]
  42db60:	b	42dab0 <wcrtomb@plt+0x28e90>
  42db64:	stp	x29, x30, [sp, #-96]!
  42db68:	mov	x29, sp
  42db6c:	stp	x19, x20, [sp, #16]
  42db70:	stp	x21, x22, [sp, #32]
  42db74:	stp	x23, x24, [sp, #48]
  42db78:	stp	x25, x26, [sp, #64]
  42db7c:	str	x27, [sp, #80]
  42db80:	mov	x20, x0
  42db84:	mov	w25, #0x0                   	// #0
  42db88:	mov	w24, w25
  42db8c:	adrp	x27, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42db90:	add	x27, x27, #0x998
  42db94:	mov	x26, #0x1000                	// #4096
  42db98:	movk	x26, #0x80, lsl #32
  42db9c:	b	42dcc8 <wcrtomb@plt+0x290a8>
  42dba0:	mov	x1, x22
  42dba4:	mov	x0, x20
  42dba8:	bl	42b550 <wcrtomb@plt+0x26930>
  42dbac:	b	42dc10 <wcrtomb@plt+0x28ff0>
  42dbb0:	ldrb	w23, [x0]
  42dbb4:	b	42dc10 <wcrtomb@plt+0x28ff0>
  42dbb8:	ldr	w0, [x20, #36]
  42dbbc:	tbz	w0, #7, 42dc04 <wcrtomb@plt+0x28fe4>
  42dbc0:	mov	x1, x22
  42dbc4:	mov	x0, x20
  42dbc8:	bl	42b550 <wcrtomb@plt+0x26930>
  42dbcc:	b	42dc10 <wcrtomb@plt+0x28ff0>
  42dbd0:	cmp	w23, #0x0
  42dbd4:	cinc	x21, x21, ne  // ne = any
  42dbd8:	ldr	w0, [x20, #36]
  42dbdc:	tbz	w0, #7, 42dc00 <wcrtomb@plt+0x28fe0>
  42dbe0:	ldr	x0, [x20, #48]
  42dbe4:	add	x0, x0, #0x1
  42dbe8:	add	x0, x0, x21
  42dbec:	ldr	x1, [x20, #40]
  42dbf0:	cmp	x0, x1
  42dbf4:	b.eq	42de04 <wcrtomb@plt+0x291e4>  // b.none
  42dbf8:	mov	w23, w24
  42dbfc:	b	42dc04 <wcrtomb@plt+0x28fe4>
  42dc00:	mov	w23, w24
  42dc04:	add	x21, x21, #0x1
  42dc08:	ldr	w0, [x20, #32]
  42dc0c:	tbnz	w0, #29, 42dc88 <wcrtomb@plt+0x29068>
  42dc10:	cbz	x19, 42dc88 <wcrtomb@plt+0x29068>
  42dc14:	mov	x22, x19
  42dc18:	ldr	x19, [x19, #8]
  42dc1c:	ldr	w0, [x22, #16]
  42dc20:	tbz	w0, #6, 42dbd0 <wcrtomb@plt+0x28fb0>
  42dc24:	ldr	w0, [x20, #32]
  42dc28:	tbz	w0, #12, 42dbb8 <wcrtomb@plt+0x28f98>
  42dc2c:	tbz	w0, #11, 42dc04 <wcrtomb@plt+0x28fe4>
  42dc30:	mov	x1, x22
  42dc34:	mov	x0, x20
  42dc38:	bl	42b520 <wcrtomb@plt+0x26900>
  42dc3c:	cbz	w23, 42dbb0 <wcrtomb@plt+0x28f90>
  42dc40:	ldrb	w0, [x0]
  42dc44:	cmp	w0, w23
  42dc48:	b.eq	42dba0 <wcrtomb@plt+0x28f80>  // b.none
  42dc4c:	add	x21, x21, #0x1
  42dc50:	mov	w23, w24
  42dc54:	b	42dc04 <wcrtomb@plt+0x28fe4>
  42dc58:	mov	x19, x0
  42dc5c:	ldr	w0, [x1, #16]
  42dc60:	orr	w0, w0, #0x10
  42dc64:	str	w0, [x1, #16]
  42dc68:	ldr	x0, [x19, #8]
  42dc6c:	mov	x1, x19
  42dc70:	cbnz	x0, 42dc58 <wcrtomb@plt+0x29038>
  42dc74:	mov	x1, x22
  42dc78:	mov	x0, x20
  42dc7c:	bl	42cdac <wcrtomb@plt+0x2818c>
  42dc80:	cbnz	w0, 42dcdc <wcrtomb@plt+0x290bc>
  42dc84:	add	x21, x21, #0x1
  42dc88:	cbnz	x21, 42dd1c <wcrtomb@plt+0x290fc>
  42dc8c:	ldr	w0, [x20, #32]
  42dc90:	tbz	w0, #29, 42dd18 <wcrtomb@plt+0x290f8>
  42dc94:	ldr	x2, [x20, #184]
  42dc98:	ldr	x1, [x20, #176]
  42dc9c:	cmp	x2, x1
  42dca0:	b.cs	42dd0c <wcrtomb@plt+0x290ec>  // b.hs, b.nlast
  42dca4:	tbnz	w0, #21, 42dce4 <wcrtomb@plt+0x290c4>
  42dca8:	ldr	x0, [x20, #32]
  42dcac:	tst	x0, x26
  42dcb0:	b.eq	42dd00 <wcrtomb@plt+0x290e0>  // b.none
  42dcb4:	ldr	x1, [x20, #184]
  42dcb8:	mov	x0, x20
  42dcbc:	bl	42d8d4 <wcrtomb@plt+0x28cb4>
  42dcc0:	mov	w19, w0
  42dcc4:	cbnz	w0, 42ddcc <wcrtomb@plt+0x291ac>
  42dcc8:	ldr	x19, [x20, #208]
  42dccc:	cbz	x19, 42dc8c <wcrtomb@plt+0x2906c>
  42dcd0:	mov	w23, w25
  42dcd4:	mov	x21, #0x0                   	// #0
  42dcd8:	b	42dc14 <wcrtomb@plt+0x28ff4>
  42dcdc:	ldr	w19, [x20, #192]
  42dce0:	b	42ddcc <wcrtomb@plt+0x291ac>
  42dce4:	ldr	x19, [x20, #104]
  42dce8:	mov	w2, #0x5                   	// #5
  42dcec:	mov	x1, x27
  42dcf0:	mov	x0, #0x0                   	// #0
  42dcf4:	bl	4049c0 <dcgettext@plt>
  42dcf8:	blr	x19
  42dcfc:	b	42dca8 <wcrtomb@plt+0x29088>
  42dd00:	ldr	x1, [x20, #184]
  42dd04:	add	x1, x1, #0x1
  42dd08:	b	42dcb8 <wcrtomb@plt+0x29098>
  42dd0c:	str	xzr, [x20, #96]
  42dd10:	mov	w19, #0x0                   	// #0
  42dd14:	b	42ddcc <wcrtomb@plt+0x291ac>
  42dd18:	mov	x21, #0x0                   	// #0
  42dd1c:	add	x1, x21, #0x1
  42dd20:	mov	x0, x20
  42dd24:	bl	42c244 <wcrtomb@plt+0x27624>
  42dd28:	mov	w19, w0
  42dd2c:	cbnz	w0, 42ddec <wcrtomb@plt+0x291cc>
  42dd30:	ldr	x21, [x20, #208]
  42dd34:	cbz	x21, 42ddb8 <wcrtomb@plt+0x29198>
  42dd38:	mov	x1, x21
  42dd3c:	mov	x0, x20
  42dd40:	bl	42b520 <wcrtomb@plt+0x26900>
  42dd44:	mov	x23, x0
  42dd48:	mov	x0, x21
  42dd4c:	bl	42baa0 <wcrtomb@plt+0x26e80>
  42dd50:	mov	x22, x0
  42dd54:	add	x0, x0, #0x1
  42dd58:	bl	404310 <malloc@plt>
  42dd5c:	mov	x21, x0
  42dd60:	ldr	x0, [x20, #16]
  42dd64:	ldr	x1, [x20]
  42dd68:	add	x0, x0, x1
  42dd6c:	ldr	x1, [x20, #8]
  42dd70:	str	x21, [x1, x0, lsl #3]
  42dd74:	cbz	x21, 42ddf4 <wcrtomb@plt+0x291d4>
  42dd78:	mov	x2, x22
  42dd7c:	mov	x1, x23
  42dd80:	mov	x0, x21
  42dd84:	bl	403f70 <memcpy@plt>
  42dd88:	strb	wzr, [x21, x22]
  42dd8c:	ldr	x1, [x20, #208]
  42dd90:	mov	x0, x20
  42dd94:	bl	42b550 <wcrtomb@plt+0x26930>
  42dd98:	ldr	x0, [x20]
  42dd9c:	add	x0, x0, #0x1
  42dda0:	str	x0, [x20]
  42dda4:	ldr	x0, [x20, #48]
  42dda8:	add	x0, x0, #0x1
  42ddac:	str	x0, [x20, #48]
  42ddb0:	ldr	w0, [x20, #32]
  42ddb4:	tbz	w0, #29, 42dd30 <wcrtomb@plt+0x29110>
  42ddb8:	ldr	x0, [x20, #16]
  42ddbc:	ldr	x1, [x20]
  42ddc0:	add	x0, x0, x1
  42ddc4:	ldr	x1, [x20, #8]
  42ddc8:	str	xzr, [x1, x0, lsl #3]
  42ddcc:	mov	w0, w19
  42ddd0:	ldp	x19, x20, [sp, #16]
  42ddd4:	ldp	x21, x22, [sp, #32]
  42ddd8:	ldp	x23, x24, [sp, #48]
  42dddc:	ldp	x25, x26, [sp, #64]
  42dde0:	ldr	x27, [sp, #80]
  42dde4:	ldp	x29, x30, [sp], #96
  42dde8:	ret
  42ddec:	ldr	w19, [x20, #192]
  42ddf0:	b	42ddcc <wcrtomb@plt+0x291ac>
  42ddf4:	mov	x0, x20
  42ddf8:	bl	42c1cc <wcrtomb@plt+0x275ac>
  42ddfc:	mov	w19, w0
  42de00:	b	42ddcc <wcrtomb@plt+0x291ac>
  42de04:	mov	x1, x22
  42de08:	cbnz	x19, 42dc5c <wcrtomb@plt+0x2903c>
  42de0c:	b	42dc84 <wcrtomb@plt+0x29064>
  42de10:	stp	x29, x30, [sp, #-48]!
  42de14:	mov	x29, sp
  42de18:	stp	x19, x20, [sp, #16]
  42de1c:	stp	x21, x22, [sp, #32]
  42de20:	mov	x19, x0
  42de24:	mov	x20, x1
  42de28:	mov	x1, x2
  42de2c:	mov	w2, w3
  42de30:	mov	w22, w5
  42de34:	ldr	x0, [x0, #56]
  42de38:	str	x0, [x20, #56]
  42de3c:	ldr	x0, [x19, #104]
  42de40:	str	x0, [x20, #104]
  42de44:	ldr	x0, [x19, #96]
  42de48:	str	x0, [x20, #96]
  42de4c:	ldr	x0, [x19, #88]
  42de50:	str	x0, [x20, #88]
  42de54:	tbnz	w4, #6, 42de78 <wcrtomb@plt+0x29258>
  42de58:	ldr	x0, [x19, #112]
  42de5c:	str	x0, [x20, #112]
  42de60:	ldr	x0, [x19, #144]
  42de64:	str	x0, [x20, #144]
  42de68:	ldr	w0, [x19, #32]
  42de6c:	mov	w3, #0x8180000             	// #135790592
  42de70:	and	w0, w0, w3
  42de74:	orr	w4, w4, w0
  42de78:	tbnz	w4, #2, 42de84 <wcrtomb@plt+0x29264>
  42de7c:	ldr	x0, [x19, #160]
  42de80:	str	x0, [x20, #160]
  42de84:	mov	w0, #0x44                  	// #68
  42de88:	and	w0, w4, w0
  42de8c:	cmp	w0, #0x44
  42de90:	b.eq	42dea8 <wcrtomb@plt+0x29288>  // b.none
  42de94:	ldr	x0, [x19, #152]
  42de98:	str	x0, [x20, #152]
  42de9c:	ldr	w0, [x19, #32]
  42dea0:	and	w0, w0, #0x4000000
  42dea4:	orr	w4, w4, w0
  42dea8:	ldr	w0, [x19, #36]
  42deac:	str	w0, [x20, #36]
  42deb0:	ldr	w0, [x19, #32]
  42deb4:	mov	w3, #0x10                  	// #16
  42deb8:	movk	w3, #0x8020, lsl #16
  42debc:	and	w0, w0, w3
  42dec0:	orr	w4, w0, w4
  42dec4:	mov	w3, #0x4000                	// #16384
  42dec8:	movk	w3, #0x7, lsl #16
  42decc:	orr	w3, w4, w3
  42ded0:	sxtw	x2, w2
  42ded4:	mov	x0, x20
  42ded8:	bl	42cf74 <wcrtomb@plt+0x28354>
  42dedc:	mov	w21, w0
  42dee0:	cbz	w0, 42def8 <wcrtomb@plt+0x292d8>
  42dee4:	mov	w0, w21
  42dee8:	ldp	x19, x20, [sp, #16]
  42deec:	ldp	x21, x22, [sp, #32]
  42def0:	ldp	x29, x30, [sp], #48
  42def4:	ret
  42def8:	ldr	w0, [x19, #224]
  42defc:	add	w0, w0, #0x1
  42df00:	str	w0, [x20, #224]
  42df04:	mov	x1, #0x0                   	// #0
  42df08:	mov	x0, x20
  42df0c:	bl	42d8d4 <wcrtomb@plt+0x28cb4>
  42df10:	mov	w21, w0
  42df14:	cbnz	w0, 42df38 <wcrtomb@plt+0x29318>
  42df18:	mov	w21, w22
  42df1c:	cbz	w22, 42dee4 <wcrtomb@plt+0x292c4>
  42df20:	mov	x0, x20
  42df24:	bl	42db64 <wcrtomb@plt+0x28f44>
  42df28:	mov	w21, w0
  42df2c:	mov	x0, x20
  42df30:	bl	42b7b4 <wcrtomb@plt+0x26b94>
  42df34:	b	42dee4 <wcrtomb@plt+0x292c4>
  42df38:	mov	x0, x20
  42df3c:	bl	42b7b4 <wcrtomb@plt+0x26b94>
  42df40:	b	42dee4 <wcrtomb@plt+0x292c4>
  42df44:	stp	x29, x30, [sp, #-32]!
  42df48:	mov	x29, sp
  42df4c:	stp	x19, x20, [sp, #16]
  42df50:	mov	x19, x2
  42df54:	cbz	x0, 42df90 <wcrtomb@plt+0x29370>
  42df58:	mov	x2, x1
  42df5c:	mov	x1, x0
  42df60:	mov	x0, x19
  42df64:	bl	42cf74 <wcrtomb@plt+0x28354>
  42df68:	cbnz	w0, 42df84 <wcrtomb@plt+0x29364>
  42df6c:	str	wzr, [x19, #224]
  42df70:	mov	x20, #0x0                   	// #0
  42df74:	mov	x1, x20
  42df78:	mov	x0, x19
  42df7c:	bl	42d8d4 <wcrtomb@plt+0x28cb4>
  42df80:	cbz	w0, 42e004 <wcrtomb@plt+0x293e4>
  42df84:	ldp	x19, x20, [sp, #16]
  42df88:	ldp	x29, x30, [sp], #32
  42df8c:	ret
  42df90:	tbz	w3, #29, 42dfcc <wcrtomb@plt+0x293ac>
  42df94:	ldr	x0, [x2, #208]
  42df98:	cbnz	x0, 42dfdc <wcrtomb@plt+0x293bc>
  42df9c:	ldr	w0, [x2, #32]
  42dfa0:	tbz	w0, #12, 42dfe8 <wcrtomb@plt+0x293c8>
  42dfa4:	ldr	x20, [x2, #184]
  42dfa8:	ldr	x2, [x19, #184]
  42dfac:	ldr	x1, [x19, #176]
  42dfb0:	cmp	x2, x1
  42dfb4:	b.eq	42dff4 <wcrtomb@plt+0x293d4>  // b.none
  42dfb8:	orr	w0, w0, #0x8
  42dfbc:	str	w0, [x19, #32]
  42dfc0:	mov	x0, x19
  42dfc4:	bl	42c024 <wcrtomb@plt+0x27404>
  42dfc8:	b	42df74 <wcrtomb@plt+0x29354>
  42dfcc:	mov	w1, #0x3                   	// #3
  42dfd0:	mov	x0, x2
  42dfd4:	bl	42cf40 <wcrtomb@plt+0x28320>
  42dfd8:	b	42df84 <wcrtomb@plt+0x29364>
  42dfdc:	mov	x0, x2
  42dfe0:	bl	42db64 <wcrtomb@plt+0x28f44>
  42dfe4:	b	42df84 <wcrtomb@plt+0x29364>
  42dfe8:	ldr	x20, [x2, #184]
  42dfec:	add	x20, x20, #0x1
  42dff0:	b	42dfa8 <wcrtomb@plt+0x29388>
  42dff4:	mov	w1, #0x6                   	// #6
  42dff8:	mov	x0, x19
  42dffc:	bl	42cf40 <wcrtomb@plt+0x28320>
  42e000:	b	42df84 <wcrtomb@plt+0x29364>
  42e004:	mov	x0, x19
  42e008:	bl	42db64 <wcrtomb@plt+0x28f44>
  42e00c:	b	42df84 <wcrtomb@plt+0x29364>
  42e010:	stp	x29, x30, [sp, #-48]!
  42e014:	mov	x29, sp
  42e018:	stp	x19, x20, [sp, #16]
  42e01c:	str	x21, [sp, #32]
  42e020:	mov	x19, x0
  42e024:	mov	x20, x1
  42e028:	mov	w21, w2
  42e02c:	mov	x1, #0x0                   	// #0
  42e030:	cbz	x0, 42e03c <wcrtomb@plt+0x2941c>
  42e034:	bl	403ff0 <strlen@plt>
  42e038:	mov	x1, x0
  42e03c:	mov	w3, w21
  42e040:	mov	x2, x20
  42e044:	mov	x0, x19
  42e048:	bl	42df44 <wcrtomb@plt+0x29324>
  42e04c:	ldp	x19, x20, [sp, #16]
  42e050:	ldr	x21, [sp, #32]
  42e054:	ldp	x29, x30, [sp], #48
  42e058:	ret
  42e05c:	sub	sp, sp, #0x260
  42e060:	stp	x29, x30, [sp]
  42e064:	mov	x29, sp
  42e068:	stp	x19, x20, [sp, #16]
  42e06c:	stp	x21, x22, [sp, #32]
  42e070:	stp	x23, x24, [sp, #48]
  42e074:	stp	x25, x26, [sp, #64]
  42e078:	stp	x27, x28, [sp, #80]
  42e07c:	mov	x24, x0
  42e080:	mov	x20, x1
  42e084:	str	x3, [sp, #104]
  42e088:	mov	x27, x4
  42e08c:	str	w5, [sp, #96]
  42e090:	ldrb	w1, [x1]
  42e094:	and	w0, w1, #0xffffffdf
  42e098:	sub	w0, w0, #0x41
  42e09c:	and	w0, w0, #0xff
  42e0a0:	cmp	w1, #0x5f
  42e0a4:	ccmp	w0, #0x19, #0x0, ne  // ne = any
  42e0a8:	b.hi	42e138 <wcrtomb@plt+0x29518>  // b.pmore
  42e0ac:	cmp	x2, #0x1
  42e0b0:	b.ls	42e130 <wcrtomb@plt+0x29510>  // b.plast
  42e0b4:	mov	x19, #0x1                   	// #1
  42e0b8:	b	42e0c8 <wcrtomb@plt+0x294a8>
  42e0bc:	add	x19, x19, #0x1
  42e0c0:	cmp	x2, x19
  42e0c4:	b.eq	42e0f4 <wcrtomb@plt+0x294d4>  // b.none
  42e0c8:	ldrb	w1, [x20, x19]
  42e0cc:	and	w0, w1, #0xffffffdf
  42e0d0:	sub	w0, w0, #0x41
  42e0d4:	and	w0, w0, #0xff
  42e0d8:	cmp	w0, #0x19
  42e0dc:	b.ls	42e0bc <wcrtomb@plt+0x2949c>  // b.plast
  42e0e0:	sub	w0, w1, #0x30
  42e0e4:	and	w0, w0, #0xff
  42e0e8:	cmp	w1, #0x5f
  42e0ec:	ccmp	w0, #0x9, #0x0, ne  // ne = any
  42e0f0:	b.ls	42e0bc <wcrtomb@plt+0x2949c>  // b.plast
  42e0f4:	sub	x0, x19, #0x1
  42e0f8:	add	x0, x20, x0
  42e0fc:	str	x0, [x27]
  42e100:	mov	x21, x20
  42e104:	mov	x26, #0x0                   	// #0
  42e108:	ldr	w28, [x24, #32]
  42e10c:	tbz	w28, #19, 42eb94 <wcrtomb@plt+0x29f74>
  42e110:	tbz	w28, #27, 42e374 <wcrtomb@plt+0x29754>
  42e114:	ldr	x0, [x24, #112]
  42e118:	str	x0, [sp, #112]
  42e11c:	ldr	x23, [x0]
  42e120:	cbz	x23, 42eb94 <wcrtomb@plt+0x29f74>
  42e124:	add	x22, x0, #0x8
  42e128:	mov	x25, #0x0                   	// #0
  42e12c:	b	42e340 <wcrtomb@plt+0x29720>
  42e130:	mov	x19, #0x1                   	// #1
  42e134:	b	42e0f4 <wcrtomb@plt+0x294d4>
  42e138:	cmp	w1, #0x7b
  42e13c:	b.ne	42e298 <wcrtomb@plt+0x29678>  // b.any
  42e140:	add	x21, x20, #0x1
  42e144:	sub	x22, x2, #0x1
  42e148:	cmp	x22, #0x1
  42e14c:	b.ls	42ebe0 <wcrtomb@plt+0x29fc0>  // b.plast
  42e150:	add	x23, x20, #0x2
  42e154:	mov	x19, #0x1                   	// #1
  42e158:	adrp	x25, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42e15c:	add	x25, x25, #0x9a8
  42e160:	mov	x26, x23
  42e164:	ldrb	w1, [x23]
  42e168:	cmp	w1, #0x3a
  42e16c:	b.eq	42e198 <wcrtomb@plt+0x29578>  // b.none
  42e170:	cmp	w1, #0x7d
  42e174:	b.eq	42e230 <wcrtomb@plt+0x29610>  // b.none
  42e178:	mov	x0, x25
  42e17c:	bl	404870 <strchr@plt>
  42e180:	cbnz	x0, 42e254 <wcrtomb@plt+0x29634>
  42e184:	add	x19, x19, #0x1
  42e188:	add	x23, x23, #0x1
  42e18c:	cmp	x22, x19
  42e190:	b.ne	42e160 <wcrtomb@plt+0x29540>  // b.any
  42e194:	b	42e240 <wcrtomb@plt+0x29620>
  42e198:	add	x1, x19, #0x1
  42e19c:	add	x26, x21, x1
  42e1a0:	adrp	x4, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42e1a4:	add	x4, x4, #0x940
  42e1a8:	add	x3, sp, #0x80
  42e1ac:	mov	x2, x22
  42e1b0:	mov	x0, x21
  42e1b4:	bl	42b684 <wcrtomb@plt+0x26a64>
  42e1b8:	cbnz	w0, 42e21c <wcrtomb@plt+0x295fc>
  42e1bc:	ldr	x0, [sp, #128]
  42e1c0:	add	x0, x21, x0
  42e1c4:	str	x0, [x27]
  42e1c8:	cmp	x22, x19
  42e1cc:	b.eq	42e240 <wcrtomb@plt+0x29620>  // b.none
  42e1d0:	ldrb	w1, [x26]
  42e1d4:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42e1d8:	add	x0, x0, #0x9a8
  42e1dc:	bl	404870 <strchr@plt>
  42e1e0:	cbnz	x0, 42e108 <wcrtomb@plt+0x294e8>
  42e1e4:	ldr	w0, [x24, #32]
  42e1e8:	tbnz	w0, #5, 42e8e0 <wcrtomb@plt+0x29cc0>
  42e1ec:	tbnz	w0, #24, 42e8f4 <wcrtomb@plt+0x29cd4>
  42e1f0:	ldr	w0, [x24, #32]
  42e1f4:	tbz	w0, #23, 42e91c <wcrtomb@plt+0x29cfc>
  42e1f8:	str	xzr, [sp, #600]
  42e1fc:	ldr	x19, [x27]
  42e200:	add	x1, sp, #0x250
  42e204:	mov	x0, x24
  42e208:	bl	42c3f4 <wcrtomb@plt+0x277d4>
  42e20c:	mov	w22, w0
  42e210:	cbz	w0, 42ea34 <wcrtomb@plt+0x29e14>
  42e214:	mov	w22, #0x1                   	// #1
  42e218:	b	42e528 <wcrtomb@plt+0x29908>
  42e21c:	mov	w1, #0x4                   	// #4
  42e220:	mov	x0, x24
  42e224:	bl	42cf40 <wcrtomb@plt+0x28320>
  42e228:	mov	w22, w0
  42e22c:	b	42e528 <wcrtomb@plt+0x29908>
  42e230:	str	x23, [x27]
  42e234:	mov	x26, #0x0                   	// #0
  42e238:	cmp	x22, x19
  42e23c:	b.ne	42e108 <wcrtomb@plt+0x294e8>  // b.any
  42e240:	mov	w1, #0x4                   	// #4
  42e244:	mov	x0, x24
  42e248:	bl	42cf40 <wcrtomb@plt+0x28320>
  42e24c:	mov	w22, w0
  42e250:	b	42e528 <wcrtomb@plt+0x29908>
  42e254:	adrp	x4, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42e258:	add	x4, x4, #0x940
  42e25c:	add	x3, sp, #0x80
  42e260:	mov	x2, x22
  42e264:	mov	x1, x19
  42e268:	mov	x0, x21
  42e26c:	bl	42b684 <wcrtomb@plt+0x26a64>
  42e270:	cbnz	w0, 42e284 <wcrtomb@plt+0x29664>
  42e274:	ldr	x0, [sp, #128]
  42e278:	add	x0, x21, x0
  42e27c:	str	x0, [x27]
  42e280:	b	42e1c8 <wcrtomb@plt+0x295a8>
  42e284:	mov	w1, #0x4                   	// #4
  42e288:	mov	x0, x24
  42e28c:	bl	42cf40 <wcrtomb@plt+0x28320>
  42e290:	mov	w22, w0
  42e294:	b	42e528 <wcrtomb@plt+0x29908>
  42e298:	add	x1, sp, #0x250
  42e29c:	mov	x0, x24
  42e2a0:	bl	42c3f4 <wcrtomb@plt+0x277d4>
  42e2a4:	mov	w22, w0
  42e2a8:	cbz	w0, 42e2b4 <wcrtomb@plt+0x29694>
  42e2ac:	mov	w22, #0x1                   	// #1
  42e2b0:	b	42e528 <wcrtomb@plt+0x29908>
  42e2b4:	mov	w3, #0x0                   	// #0
  42e2b8:	ldr	x21, [sp, #104]
  42e2bc:	ldr	x2, [x21]
  42e2c0:	ldr	x1, [sp, #592]
  42e2c4:	mov	x0, x24
  42e2c8:	bl	42bbd4 <wcrtomb@plt+0x26fb4>
  42e2cc:	ldr	x19, [sp, #592]
  42e2d0:	str	x19, [x21]
  42e2d4:	ldr	w0, [sp, #96]
  42e2d8:	orr	w0, w0, #0x2
  42e2dc:	str	w0, [x19, #16]
  42e2e0:	mov	x0, #0x3                   	// #3
  42e2e4:	bl	404310 <malloc@plt>
  42e2e8:	str	x0, [x19, #24]
  42e2ec:	cbz	x0, 42e318 <wcrtomb@plt+0x296f8>
  42e2f0:	mov	w1, #0x24                  	// #36
  42e2f4:	strb	w1, [x0]
  42e2f8:	ldr	x0, [x19, #24]
  42e2fc:	ldrb	w1, [x20]
  42e300:	strb	w1, [x0, #1]
  42e304:	ldr	x0, [sp, #592]
  42e308:	ldr	x0, [x0, #24]
  42e30c:	strb	wzr, [x0, #2]
  42e310:	str	x20, [x27]
  42e314:	b	42e528 <wcrtomb@plt+0x29908>
  42e318:	mov	x0, x24
  42e31c:	bl	42c1cc <wcrtomb@plt+0x275ac>
  42e320:	mov	w22, w0
  42e324:	b	42e528 <wcrtomb@plt+0x29908>
  42e328:	ldr	x0, [x22]
  42e32c:	cbz	x0, 42eb94 <wcrtomb@plt+0x29f74>
  42e330:	add	x25, x25, #0x2
  42e334:	add	x22, x22, #0x10
  42e338:	ldur	x23, [x22, #-8]
  42e33c:	cbz	x23, 42eb94 <wcrtomb@plt+0x29f74>
  42e340:	mov	x0, x23
  42e344:	bl	403ff0 <strlen@plt>
  42e348:	cmp	x0, x19
  42e34c:	b.ne	42e328 <wcrtomb@plt+0x29708>  // b.any
  42e350:	mov	x2, x19
  42e354:	mov	x1, x21
  42e358:	mov	x0, x23
  42e35c:	bl	4046e0 <memcmp@plt>
  42e360:	cbnz	w0, 42e328 <wcrtomb@plt+0x29708>
  42e364:	add	x25, x25, #0x1
  42e368:	ldr	x0, [sp, #112]
  42e36c:	ldr	x0, [x0, x25, lsl #3]
  42e370:	b	42e3dc <wcrtomb@plt+0x297bc>
  42e374:	ldr	x4, [x24, #112]
  42e378:	cbz	x4, 42eb94 <wcrtomb@plt+0x29f74>
  42e37c:	ldr	x3, [x4]
  42e380:	cbz	x3, 42eb94 <wcrtomb@plt+0x29f74>
  42e384:	add	x4, x4, #0x8
  42e388:	mov	x5, x19
  42e38c:	b	42e3a0 <wcrtomb@plt+0x29780>
  42e390:	cmp	x0, x19
  42e394:	b.eq	42e4a8 <wcrtomb@plt+0x29888>  // b.none
  42e398:	ldr	x3, [x4], #8
  42e39c:	cbz	x3, 42eb94 <wcrtomb@plt+0x29f74>
  42e3a0:	mov	x0, #0x0                   	// #0
  42e3a4:	cbz	x19, 42e4b0 <wcrtomb@plt+0x29890>
  42e3a8:	ldrb	w2, [x21, x0]
  42e3ac:	ldrb	w1, [x3, x0]
  42e3b0:	cmp	w2, w1
  42e3b4:	b.ne	42e390 <wcrtomb@plt+0x29770>  // b.any
  42e3b8:	add	x0, x0, #0x1
  42e3bc:	cmp	x0, x19
  42e3c0:	b.ne	42e3a8 <wcrtomb@plt+0x29788>  // b.any
  42e3c4:	mov	x0, x5
  42e3c8:	ldrb	w1, [x3, x0]
  42e3cc:	cmp	w1, #0x3d
  42e3d0:	b.ne	42e398 <wcrtomb@plt+0x29778>  // b.any
  42e3d4:	add	x0, x0, #0x1
  42e3d8:	add	x0, x3, x0
  42e3dc:	cbz	x0, 42eb98 <wcrtomb@plt+0x29f78>
  42e3e0:	bl	404590 <strdup@plt>
  42e3e4:	str	x0, [sp, #600]
  42e3e8:	cbz	x0, 42e4ec <wcrtomb@plt+0x298cc>
  42e3ec:	ldr	x0, [sp, #600]
  42e3f0:	ldrb	w1, [x0]
  42e3f4:	cbnz	w1, 42ebe8 <wcrtomb@plt+0x29fc8>
  42e3f8:	cbz	x26, 42e414 <wcrtomb@plt+0x297f4>
  42e3fc:	ldurb	w1, [x26, #-1]
  42e400:	cmp	w1, #0x3a
  42e404:	b.eq	42e508 <wcrtomb@plt+0x298e8>  // b.none
  42e408:	ldrb	w0, [x26]
  42e40c:	cmp	w0, #0x2b
  42e410:	b.eq	42e54c <wcrtomb@plt+0x2992c>  // b.none
  42e414:	ldr	x19, [sp, #600]
  42e418:	cbz	x19, 42ebbc <wcrtomb@plt+0x29f9c>
  42e41c:	ldr	x0, [sp, #96]
  42e420:	tbnz	w0, #2, 42e968 <wcrtomb@plt+0x29d48>
  42e424:	ldrb	w0, [x19]
  42e428:	cbz	w0, 42e9c8 <wcrtomb@plt+0x29da8>
  42e42c:	mov	x0, x19
  42e430:	bl	403ff0 <strlen@plt>
  42e434:	ldr	x1, [x24, #32]
  42e438:	and	x1, x1, #0xfffffff000
  42e43c:	ands	x1, x1, #0xffffff8000001fff
  42e440:	mov	w5, #0x0                   	// #0
  42e444:	mov	w4, #0x1644                	// #5700
  42e448:	mov	w1, #0x644                 	// #1604
  42e44c:	csel	w4, w4, w1, ne  // ne = any
  42e450:	mov	w3, w0
  42e454:	mov	x2, x19
  42e458:	add	x1, sp, #0x80
  42e45c:	mov	x0, x24
  42e460:	bl	42de10 <wcrtomb@plt+0x291f0>
  42e464:	mov	w22, w0
  42e468:	ldr	x0, [sp, #600]
  42e46c:	bl	4047c0 <free@plt>
  42e470:	cbnz	w22, 42ea18 <wcrtomb@plt+0x29df8>
  42e474:	mov	w3, #0x0                   	// #0
  42e478:	ldr	x19, [sp, #104]
  42e47c:	ldr	x2, [x19]
  42e480:	ldr	x1, [sp, #336]
  42e484:	mov	x0, x24
  42e488:	bl	42bbd4 <wcrtomb@plt+0x26fb4>
  42e48c:	ldr	x0, [sp, #344]
  42e490:	str	x0, [x19]
  42e494:	str	xzr, [sp, #344]
  42e498:	str	xzr, [sp, #336]
  42e49c:	add	x0, sp, #0x80
  42e4a0:	bl	42c074 <wcrtomb@plt+0x27454>
  42e4a4:	b	42e528 <wcrtomb@plt+0x29908>
  42e4a8:	mov	x0, x5
  42e4ac:	b	42e3c8 <wcrtomb@plt+0x297a8>
  42e4b0:	mov	x0, x5
  42e4b4:	b	42e3c8 <wcrtomb@plt+0x297a8>
  42e4b8:	ldr	x4, [x24, #144]
  42e4bc:	ldr	x3, [x24, #152]
  42e4c0:	mov	x2, x19
  42e4c4:	mov	x1, x21
  42e4c8:	add	x0, sp, #0x258
  42e4cc:	blr	x4
  42e4d0:	mov	w22, w0
  42e4d4:	cbz	w0, 42e4fc <wcrtomb@plt+0x298dc>
  42e4d8:	cmp	w0, #0x9
  42e4dc:	b.eq	42e944 <wcrtomb@plt+0x29d24>  // b.none
  42e4e0:	b.gt	42e518 <wcrtomb@plt+0x298f8>
  42e4e4:	cmp	w0, #0x2
  42e4e8:	b.ne	42e510 <wcrtomb@plt+0x298f0>  // b.any
  42e4ec:	mov	x0, x24
  42e4f0:	bl	42c1cc <wcrtomb@plt+0x275ac>
  42e4f4:	mov	w22, w0
  42e4f8:	b	42e528 <wcrtomb@plt+0x29908>
  42e4fc:	ldr	x0, [sp, #600]
  42e500:	cbz	x0, 42e3f8 <wcrtomb@plt+0x297d8>
  42e504:	b	42e3f0 <wcrtomb@plt+0x297d0>
  42e508:	bl	4047c0 <free@plt>
  42e50c:	b	42eb9c <wcrtomb@plt+0x29f7c>
  42e510:	cmp	w0, #0x5
  42e514:	b.eq	42eb98 <wcrtomb@plt+0x29f78>  // b.none
  42e518:	mov	w1, w22
  42e51c:	mov	x0, x24
  42e520:	bl	42cf40 <wcrtomb@plt+0x28320>
  42e524:	mov	w22, #0x1                   	// #1
  42e528:	mov	w0, w22
  42e52c:	ldp	x19, x20, [sp, #16]
  42e530:	ldp	x21, x22, [sp, #32]
  42e534:	ldp	x23, x24, [sp, #48]
  42e538:	ldp	x25, x26, [sp, #64]
  42e53c:	ldp	x27, x28, [sp, #80]
  42e540:	ldp	x29, x30, [sp]
  42e544:	add	sp, sp, #0x260
  42e548:	ret
  42e54c:	add	x2, x26, #0x1
  42e550:	ldr	w0, [x24, #32]
  42e554:	mov	w1, #0x44                  	// #68
  42e558:	and	w0, w0, w1
  42e55c:	ldr	x3, [x27]
  42e560:	mov	w5, #0x1                   	// #1
  42e564:	mov	w4, #0x700                 	// #1792
  42e568:	movk	w4, #0x40, lsl #16
  42e56c:	orr	w4, w0, w4
  42e570:	sub	w3, w3, w2
  42e574:	add	x1, sp, #0x168
  42e578:	mov	x0, x24
  42e57c:	bl	42de10 <wcrtomb@plt+0x291f0>
  42e580:	mov	w22, w0
  42e584:	cbnz	w0, 42e528 <wcrtomb@plt+0x29908>
  42e588:	ldr	x0, [sp, #600]
  42e58c:	bl	4047c0 <free@plt>
  42e590:	ldr	x0, [sp, #368]
  42e594:	ldr	x1, [x0]
  42e598:	str	x1, [sp, #600]
  42e59c:	str	xzr, [x0]
  42e5a0:	add	x0, sp, #0x168
  42e5a4:	bl	42c074 <wcrtomb@plt+0x27454>
  42e5a8:	b	42e414 <wcrtomb@plt+0x297f4>
  42e5ac:	add	x2, x26, #0x1
  42e5b0:	ldr	w0, [x24, #32]
  42e5b4:	mov	w1, #0x44                  	// #68
  42e5b8:	and	w0, w0, w1
  42e5bc:	ldr	x3, [x27]
  42e5c0:	mov	w5, #0x1                   	// #1
  42e5c4:	mov	w4, #0x700                 	// #1792
  42e5c8:	movk	w4, #0x40, lsl #16
  42e5cc:	orr	w4, w0, w4
  42e5d0:	sub	w3, w3, w2
  42e5d4:	add	x1, sp, #0x168
  42e5d8:	mov	x0, x24
  42e5dc:	bl	42de10 <wcrtomb@plt+0x291f0>
  42e5e0:	mov	w22, w0
  42e5e4:	cbnz	w0, 42e528 <wcrtomb@plt+0x29908>
  42e5e8:	ldr	x0, [sp, #368]
  42e5ec:	ldr	x1, [x0]
  42e5f0:	str	x1, [sp, #600]
  42e5f4:	str	xzr, [x0]
  42e5f8:	add	x0, sp, #0x168
  42e5fc:	bl	42c074 <wcrtomb@plt+0x27454>
  42e600:	ldrb	w0, [x26]
  42e604:	cmp	w0, #0x3d
  42e608:	b.ne	42e414 <wcrtomb@plt+0x297f4>  // b.any
  42e60c:	ldr	x0, [sp, #600]
  42e610:	str	x0, [sp, #120]
  42e614:	ldr	w22, [x24, #32]
  42e618:	tbnz	w22, #27, 42eb28 <wcrtomb@plt+0x29f08>
  42e61c:	ldr	x1, [x24, #136]
  42e620:	ldr	x0, [x24, #128]
  42e624:	add	x0, x0, #0x1
  42e628:	mov	x28, #0x1                   	// #1
  42e62c:	cmp	x0, x1
  42e630:	b.cc	42e660 <wcrtomb@plt+0x29a40>  // b.lo, b.ul, b.last
  42e634:	ldr	x0, [x24, #120]
  42e638:	cbz	x0, 42e6d4 <wcrtomb@plt+0x29ab4>
  42e63c:	lsl	x2, x1, #1
  42e640:	str	x2, [x24, #136]
  42e644:	lsl	x1, x1, #4
  42e648:	bl	404540 <realloc@plt>
  42e64c:	cbz	x0, 42e7ec <wcrtomb@plt+0x29bcc>
  42e650:	str	x0, [x24, #120]
  42e654:	str	x0, [x24, #112]
  42e658:	ldr	w0, [x24, #32]
  42e65c:	tbnz	w0, #27, 42eb3c <wcrtomb@plt+0x29f1c>
  42e660:	ldr	x0, [sp, #120]
  42e664:	bl	403ff0 <strlen@plt>
  42e668:	add	x1, x19, #0x2
  42e66c:	add	x0, x1, x0
  42e670:	bl	404310 <malloc@plt>
  42e674:	mov	x22, x0
  42e678:	cbz	x0, 42e818 <wcrtomb@plt+0x29bf8>
  42e67c:	mov	x2, x19
  42e680:	mov	x1, x21
  42e684:	bl	403f70 <memcpy@plt>
  42e688:	mov	w0, #0x3d                  	// #61
  42e68c:	strb	w0, [x22, x19]
  42e690:	add	x0, x19, #0x1
  42e694:	ldr	x1, [sp, #120]
  42e698:	add	x0, x22, x0
  42e69c:	bl	404910 <strcpy@plt>
  42e6a0:	ldr	x1, [x24, #112]
  42e6a4:	ldr	x0, [x24, #128]
  42e6a8:	add	x2, x0, #0x1
  42e6ac:	str	x2, [x24, #128]
  42e6b0:	str	x22, [x1, x0, lsl #3]
  42e6b4:	ldr	x1, [x24, #112]
  42e6b8:	ldr	x0, [x24, #128]
  42e6bc:	add	x2, x0, #0x1
  42e6c0:	str	x2, [x24, #128]
  42e6c4:	str	xzr, [x1, x0, lsl #3]
  42e6c8:	b	42e414 <wcrtomb@plt+0x297f4>
  42e6cc:	mov	x28, #0x2                   	// #2
  42e6d0:	b	42e634 <wcrtomb@plt+0x29a14>
  42e6d4:	tbz	w22, #19, 42e7b0 <wcrtomb@plt+0x29b90>
  42e6d8:	ldr	x25, [x24, #112]
  42e6dc:	cbz	x25, 42eaf8 <wcrtomb@plt+0x29ed8>
  42e6e0:	ldr	x0, [x25]
  42e6e4:	cbz	x0, 42ead4 <wcrtomb@plt+0x29eb4>
  42e6e8:	mov	x26, #0x0                   	// #0
  42e6ec:	str	x26, [sp, #112]
  42e6f0:	add	x26, x26, #0x1
  42e6f4:	ldr	x0, [x25, x26, lsl #3]
  42e6f8:	cbnz	x0, 42e6ec <wcrtomb@plt+0x29acc>
  42e6fc:	add	x28, x28, #0x2
  42e700:	ldr	x0, [sp, #112]
  42e704:	add	x28, x28, x0
  42e708:	mov	x1, #0x8                   	// #8
  42e70c:	mov	x0, x28
  42e710:	bl	4044d0 <calloc@plt>
  42e714:	mov	x22, x0
  42e718:	cbz	x0, 42eb10 <wcrtomb@plt+0x29ef0>
  42e71c:	mov	x23, #0x0                   	// #0
  42e720:	mov	x0, x26
  42e724:	cbnz	x26, 42e730 <wcrtomb@plt+0x29b10>
  42e728:	b	42e750 <wcrtomb@plt+0x29b30>
  42e72c:	mov	x23, x0
  42e730:	ldr	x0, [x25, x23, lsl #3]
  42e734:	bl	404590 <strdup@plt>
  42e738:	str	x0, [x22, x23, lsl #3]
  42e73c:	cbz	x0, 42e7a4 <wcrtomb@plt+0x29b84>
  42e740:	add	x0, x23, #0x1
  42e744:	ldr	x1, [sp, #112]
  42e748:	cmp	x1, x23
  42e74c:	b.ne	42e72c <wcrtomb@plt+0x29b0c>  // b.any
  42e750:	str	xzr, [x22, x0, lsl #3]
  42e754:	str	x22, [x24, #120]
  42e758:	str	x26, [x24, #128]
  42e75c:	str	x28, [x24, #136]
  42e760:	str	x22, [x24, #112]
  42e764:	b	42e658 <wcrtomb@plt+0x29a38>
  42e768:	ldr	x0, [x21, x19, lsl #3]
  42e76c:	bl	4047c0 <free@plt>
  42e770:	sub	x19, x19, #0x1
  42e774:	cmp	x19, #0x1
  42e778:	b.hi	42e768 <wcrtomb@plt+0x29b48>  // b.pmore
  42e77c:	cmp	x23, #0x0
  42e780:	csinc	x0, x23, xzr, eq  // eq = none
  42e784:	add	x0, x22, x0, lsl #3
  42e788:	ldur	x0, [x0, #-8]
  42e78c:	bl	4047c0 <free@plt>
  42e790:	mov	x0, x22
  42e794:	bl	4047c0 <free@plt>
  42e798:	mov	x0, x24
  42e79c:	bl	42c1cc <wcrtomb@plt+0x275ac>
  42e7a0:	b	42e414 <wcrtomb@plt+0x297f4>
  42e7a4:	mov	x19, x23
  42e7a8:	sub	x21, x22, #0x8
  42e7ac:	b	42e774 <wcrtomb@plt+0x29b54>
  42e7b0:	mov	x1, #0x8                   	// #8
  42e7b4:	mov	x0, #0x10                  	// #16
  42e7b8:	bl	4044d0 <calloc@plt>
  42e7bc:	cbz	x0, 42e7e0 <wcrtomb@plt+0x29bc0>
  42e7c0:	str	x0, [x24, #120]
  42e7c4:	str	xzr, [x24, #128]
  42e7c8:	mov	x1, #0x10                  	// #16
  42e7cc:	str	x1, [x24, #136]
  42e7d0:	str	x0, [x24, #112]
  42e7d4:	orr	w22, w22, #0x80000
  42e7d8:	str	w22, [x24, #32]
  42e7dc:	b	42e658 <wcrtomb@plt+0x29a38>
  42e7e0:	mov	x0, x24
  42e7e4:	bl	42c1cc <wcrtomb@plt+0x275ac>
  42e7e8:	b	42e414 <wcrtomb@plt+0x297f4>
  42e7ec:	mov	x0, x24
  42e7f0:	bl	42c1cc <wcrtomb@plt+0x275ac>
  42e7f4:	b	42e414 <wcrtomb@plt+0x297f4>
  42e7f8:	mov	x0, x24
  42e7fc:	bl	42c1cc <wcrtomb@plt+0x275ac>
  42e800:	b	42e414 <wcrtomb@plt+0x297f4>
  42e804:	mov	x0, x22
  42e808:	bl	4047c0 <free@plt>
  42e80c:	mov	x0, x24
  42e810:	bl	42c1cc <wcrtomb@plt+0x275ac>
  42e814:	b	42e414 <wcrtomb@plt+0x297f4>
  42e818:	mov	x0, x24
  42e81c:	bl	42c1cc <wcrtomb@plt+0x275ac>
  42e820:	b	42e414 <wcrtomb@plt+0x297f4>
  42e824:	add	x26, x26, #0x1
  42e828:	ldr	x0, [x27]
  42e82c:	subs	x22, x0, x26
  42e830:	b.ne	42e85c <wcrtomb@plt+0x29c3c>  // b.any
  42e834:	ldr	x22, [x24, #96]
  42e838:	mov	w2, #0x5                   	// #5
  42e83c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42e840:	add	x1, x1, #0x9b0
  42e844:	mov	x0, #0x0                   	// #0
  42e848:	bl	4049c0 <dcgettext@plt>
  42e84c:	mov	x2, x21
  42e850:	mov	w1, w19
  42e854:	blr	x22
  42e858:	b	42ebb8 <wcrtomb@plt+0x29f98>
  42e85c:	ldr	w0, [x24, #32]
  42e860:	mov	w1, #0x44                  	// #68
  42e864:	and	w0, w0, w1
  42e868:	mov	w5, #0x1                   	// #1
  42e86c:	mov	w4, #0x700                 	// #1792
  42e870:	movk	w4, #0x40, lsl #16
  42e874:	orr	w4, w0, w4
  42e878:	mov	w3, w22
  42e87c:	mov	x2, x26
  42e880:	add	x1, sp, #0x168
  42e884:	mov	x0, x24
  42e888:	bl	42de10 <wcrtomb@plt+0x291f0>
  42e88c:	cbnz	w0, 42e8bc <wcrtomb@plt+0x29c9c>
  42e890:	ldr	x4, [x24, #96]
  42e894:	ldr	x0, [sp, #368]
  42e898:	ldr	x3, [x0]
  42e89c:	mov	x2, x21
  42e8a0:	mov	w1, w19
  42e8a4:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42e8a8:	add	x0, x0, #0x9d0
  42e8ac:	blr	x4
  42e8b0:	add	x0, sp, #0x168
  42e8b4:	bl	42c074 <wcrtomb@plt+0x27454>
  42e8b8:	b	42ebb8 <wcrtomb@plt+0x29f98>
  42e8bc:	ldr	x5, [x24, #96]
  42e8c0:	mov	x4, x26
  42e8c4:	mov	w3, w22
  42e8c8:	mov	x2, x21
  42e8cc:	mov	w1, w19
  42e8d0:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42e8d4:	add	x0, x0, #0x9e0
  42e8d8:	blr	x5
  42e8dc:	b	42e8b0 <wcrtomb@plt+0x29c90>
  42e8e0:	mov	w1, #0x5                   	// #5
  42e8e4:	mov	x0, x24
  42e8e8:	bl	42cf40 <wcrtomb@plt+0x28320>
  42e8ec:	mov	w22, #0x1                   	// #1
  42e8f0:	b	42e528 <wcrtomb@plt+0x29908>
  42e8f4:	ldr	x22, [x24, #96]
  42e8f8:	mov	w2, #0x5                   	// #5
  42e8fc:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42e900:	add	x1, x1, #0x9f0
  42e904:	mov	x0, #0x0                   	// #0
  42e908:	bl	4049c0 <dcgettext@plt>
  42e90c:	mov	x2, x21
  42e910:	mov	w1, w19
  42e914:	blr	x22
  42e918:	b	42e1f0 <wcrtomb@plt+0x295d0>
  42e91c:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  42e920:	add	x0, x0, #0x7f8
  42e924:	bl	404590 <strdup@plt>
  42e928:	mov	x19, x0
  42e92c:	str	x0, [sp, #600]
  42e930:	cbnz	x0, 42e41c <wcrtomb@plt+0x297fc>
  42e934:	mov	x0, x24
  42e938:	bl	42c1cc <wcrtomb@plt+0x275ac>
  42e93c:	mov	w22, w0
  42e940:	b	42e528 <wcrtomb@plt+0x29908>
  42e944:	ldr	w0, [x24, #192]
  42e948:	cmp	w0, #0x9
  42e94c:	b.eq	42e95c <wcrtomb@plt+0x29d3c>  // b.none
  42e950:	ldr	x0, [sp, #600]
  42e954:	str	x0, [x24, #200]
  42e958:	b	42e518 <wcrtomb@plt+0x298f8>
  42e95c:	ldr	x0, [x24, #200]
  42e960:	bl	4047c0 <free@plt>
  42e964:	b	42e950 <wcrtomb@plt+0x29d30>
  42e968:	add	x1, sp, #0x250
  42e96c:	mov	x0, x24
  42e970:	bl	42c3f4 <wcrtomb@plt+0x277d4>
  42e974:	mov	w22, w0
  42e978:	cbnz	w0, 42e9b8 <wcrtomb@plt+0x29d98>
  42e97c:	mov	w3, #0x0                   	// #0
  42e980:	ldr	x19, [sp, #104]
  42e984:	ldr	x2, [x19]
  42e988:	ldr	x1, [sp, #592]
  42e98c:	mov	x0, x24
  42e990:	bl	42bbd4 <wcrtomb@plt+0x26fb4>
  42e994:	ldr	x0, [sp, #592]
  42e998:	str	x0, [x19]
  42e99c:	mov	w1, #0xa                   	// #10
  42e9a0:	ldr	w2, [sp, #96]
  42e9a4:	orr	w1, w2, w1
  42e9a8:	str	w1, [x0, #16]
  42e9ac:	ldr	x1, [sp, #600]
  42e9b0:	str	x1, [x0, #24]
  42e9b4:	b	42e528 <wcrtomb@plt+0x29908>
  42e9b8:	ldr	x0, [sp, #600]
  42e9bc:	bl	4047c0 <free@plt>
  42e9c0:	mov	w22, #0x1                   	// #1
  42e9c4:	b	42e528 <wcrtomb@plt+0x29908>
  42e9c8:	mov	x0, x19
  42e9cc:	bl	4047c0 <free@plt>
  42e9d0:	add	x1, sp, #0x250
  42e9d4:	mov	x0, x24
  42e9d8:	bl	42c3f4 <wcrtomb@plt+0x277d4>
  42e9dc:	mov	w22, w0
  42e9e0:	cbz	w0, 42e9ec <wcrtomb@plt+0x29dcc>
  42e9e4:	mov	w22, #0x1                   	// #1
  42e9e8:	b	42e528 <wcrtomb@plt+0x29908>
  42e9ec:	mov	w3, #0x0                   	// #0
  42e9f0:	ldr	x19, [sp, #104]
  42e9f4:	ldr	x2, [x19]
  42e9f8:	ldr	x1, [sp, #592]
  42e9fc:	mov	x0, x24
  42ea00:	bl	42bbd4 <wcrtomb@plt+0x26fb4>
  42ea04:	ldr	x0, [sp, #592]
  42ea08:	str	x0, [x19]
  42ea0c:	mov	w1, #0x1                   	// #1
  42ea10:	str	w1, [x0, #16]
  42ea14:	b	42e528 <wcrtomb@plt+0x29908>
  42ea18:	add	x1, sp, #0x80
  42ea1c:	mov	x0, x24
  42ea20:	bl	42b958 <wcrtomb@plt+0x26d38>
  42ea24:	add	x0, sp, #0x80
  42ea28:	bl	42c074 <wcrtomb@plt+0x27454>
  42ea2c:	mov	w22, #0x1                   	// #1
  42ea30:	b	42e528 <wcrtomb@plt+0x29908>
  42ea34:	sub	x20, x20, #0x1
  42ea38:	sub	x19, x19, x20
  42ea3c:	mov	w3, #0x0                   	// #0
  42ea40:	ldr	x23, [sp, #104]
  42ea44:	ldr	x2, [x23]
  42ea48:	ldr	x1, [sp, #592]
  42ea4c:	mov	x0, x24
  42ea50:	bl	42bbd4 <wcrtomb@plt+0x26fb4>
  42ea54:	ldr	x21, [sp, #592]
  42ea58:	str	x21, [x23]
  42ea5c:	mov	w0, #0xa                   	// #10
  42ea60:	ldr	w1, [sp, #96]
  42ea64:	orr	w0, w1, w0
  42ea68:	str	w0, [x21, #16]
  42ea6c:	add	x0, x19, #0x2
  42ea70:	bl	404310 <malloc@plt>
  42ea74:	str	x0, [x21, #24]
  42ea78:	cbz	x0, 42ea98 <wcrtomb@plt+0x29e78>
  42ea7c:	add	x19, x19, #0x1
  42ea80:	mov	x2, x19
  42ea84:	mov	x1, x20
  42ea88:	bl	403f70 <memcpy@plt>
  42ea8c:	ldr	x0, [x21, #24]
  42ea90:	strb	wzr, [x0, x19]
  42ea94:	b	42e528 <wcrtomb@plt+0x29908>
  42ea98:	mov	x0, x24
  42ea9c:	bl	42c1cc <wcrtomb@plt+0x275ac>
  42eaa0:	mov	w22, w0
  42eaa4:	b	42e528 <wcrtomb@plt+0x29908>
  42eaa8:	mov	w3, #0x0                   	// #0
  42eaac:	ldr	x19, [sp, #104]
  42eab0:	ldr	x2, [x19]
  42eab4:	ldr	x1, [sp, #592]
  42eab8:	mov	x0, x24
  42eabc:	bl	42bbd4 <wcrtomb@plt+0x26fb4>
  42eac0:	ldr	x0, [sp, #592]
  42eac4:	str	x0, [x19]
  42eac8:	mov	w1, #0x1                   	// #1
  42eacc:	str	w1, [x0, #16]
  42ead0:	b	42e528 <wcrtomb@plt+0x29908>
  42ead4:	add	x28, x28, #0x1
  42ead8:	mov	x1, #0x8                   	// #8
  42eadc:	mov	x0, x28
  42eae0:	bl	4044d0 <calloc@plt>
  42eae4:	mov	x22, x0
  42eae8:	cbz	x0, 42eb10 <wcrtomb@plt+0x29ef0>
  42eaec:	mov	x26, #0x0                   	// #0
  42eaf0:	mov	x0, #0x0                   	// #0
  42eaf4:	b	42e750 <wcrtomb@plt+0x29b30>
  42eaf8:	add	x28, x28, #0x1
  42eafc:	mov	x1, #0x8                   	// #8
  42eb00:	mov	x0, x28
  42eb04:	bl	4044d0 <calloc@plt>
  42eb08:	mov	x22, x0
  42eb0c:	cbnz	x0, 42eb1c <wcrtomb@plt+0x29efc>
  42eb10:	mov	x0, x24
  42eb14:	bl	42c1cc <wcrtomb@plt+0x275ac>
  42eb18:	b	42e414 <wcrtomb@plt+0x297f4>
  42eb1c:	mov	x26, #0x0                   	// #0
  42eb20:	mov	x0, #0x0                   	// #0
  42eb24:	b	42e750 <wcrtomb@plt+0x29b30>
  42eb28:	ldr	x1, [x24, #136]
  42eb2c:	ldr	x0, [x24, #128]
  42eb30:	add	x0, x0, #0x2
  42eb34:	cmp	x0, x1
  42eb38:	b.cs	42e6cc <wcrtomb@plt+0x29aac>  // b.hs, b.nlast
  42eb3c:	add	x0, x19, #0x1
  42eb40:	bl	404310 <malloc@plt>
  42eb44:	mov	x22, x0
  42eb48:	cbz	x0, 42e7f8 <wcrtomb@plt+0x29bd8>
  42eb4c:	mov	x2, x19
  42eb50:	mov	x1, x21
  42eb54:	bl	403f70 <memcpy@plt>
  42eb58:	strb	wzr, [x22, x19]
  42eb5c:	ldr	x0, [sp, #120]
  42eb60:	bl	404590 <strdup@plt>
  42eb64:	cbz	x0, 42e804 <wcrtomb@plt+0x29be4>
  42eb68:	ldr	x2, [x24, #112]
  42eb6c:	ldr	x1, [x24, #128]
  42eb70:	add	x3, x1, #0x1
  42eb74:	str	x3, [x24, #128]
  42eb78:	str	x22, [x2, x1, lsl #3]
  42eb7c:	ldr	x2, [x24, #112]
  42eb80:	ldr	x1, [x24, #128]
  42eb84:	add	x3, x1, #0x1
  42eb88:	str	x3, [x24, #128]
  42eb8c:	str	x0, [x2, x1, lsl #3]
  42eb90:	b	42e6b4 <wcrtomb@plt+0x29a94>
  42eb94:	tbnz	w28, #20, 42e4b8 <wcrtomb@plt+0x29898>
  42eb98:	cbz	x26, 42e1e4 <wcrtomb@plt+0x295c4>
  42eb9c:	ldrb	w1, [x26]
  42eba0:	and	w0, w1, #0xffffffef
  42eba4:	and	w0, w0, #0xff
  42eba8:	cmp	w0, #0x2d
  42ebac:	b.eq	42e5ac <wcrtomb@plt+0x2998c>  // b.none
  42ebb0:	cmp	w1, #0x3f
  42ebb4:	b.eq	42e824 <wcrtomb@plt+0x29c04>  // b.none
  42ebb8:	str	xzr, [sp, #600]
  42ebbc:	ldr	w0, [x24, #32]
  42ebc0:	tbnz	w0, #23, 42e1fc <wcrtomb@plt+0x295dc>
  42ebc4:	add	x1, sp, #0x250
  42ebc8:	mov	x0, x24
  42ebcc:	bl	42c3f4 <wcrtomb@plt+0x277d4>
  42ebd0:	mov	w22, w0
  42ebd4:	cbz	w0, 42eaa8 <wcrtomb@plt+0x29e88>
  42ebd8:	mov	w22, #0x1                   	// #1
  42ebdc:	b	42e528 <wcrtomb@plt+0x29908>
  42ebe0:	mov	x19, #0x1                   	// #1
  42ebe4:	b	42e234 <wcrtomb@plt+0x29614>
  42ebe8:	cbnz	x26, 42e408 <wcrtomb@plt+0x297e8>
  42ebec:	ldr	x19, [sp, #600]
  42ebf0:	b	42e41c <wcrtomb@plt+0x297fc>
  42ebf4:	stp	x29, x30, [sp, #-320]!
  42ebf8:	mov	x29, sp
  42ebfc:	stp	x19, x20, [sp, #16]
  42ec00:	stp	x21, x22, [sp, #32]
  42ec04:	str	x23, [sp, #48]
  42ec08:	mov	x19, x0
  42ec0c:	mov	x22, x3
  42ec10:	mov	x23, x4
  42ec14:	mov	w21, w5
  42ec18:	add	x20, x1, #0x1
  42ec1c:	adrp	x4, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42ec20:	add	x4, x4, #0x948
  42ec24:	add	x3, sp, #0x138
  42ec28:	sub	x2, x2, #0x1
  42ec2c:	mov	x1, #0x0                   	// #0
  42ec30:	mov	x0, x20
  42ec34:	bl	42b684 <wcrtomb@plt+0x26a64>
  42ec38:	cbnz	w0, 42ed04 <wcrtomb@plt+0x2a0e4>
  42ec3c:	ldr	x2, [sp, #312]
  42ec40:	add	x0, x20, x2
  42ec44:	str	x0, [x23]
  42ec48:	ldr	w0, [x19, #36]
  42ec4c:	tbnz	w0, #3, 42ed18 <wcrtomb@plt+0x2a0f8>
  42ec50:	ldr	x5, [x19, #160]
  42ec54:	ldr	x4, [x19, #152]
  42ec58:	mov	x3, #0x0                   	// #0
  42ec5c:	mov	x1, x20
  42ec60:	add	x0, sp, #0x130
  42ec64:	blr	x5
  42ec68:	mov	w20, w0
  42ec6c:	cmp	w20, #0x2
  42ec70:	b.eq	42ed80 <wcrtomb@plt+0x2a160>  // b.none
  42ec74:	cbnz	w20, 42ed90 <wcrtomb@plt+0x2a170>
  42ec78:	ldr	x20, [sp, #304]
  42ec7c:	cbz	x20, 42ee9c <wcrtomb@plt+0x2a27c>
  42ec80:	tbnz	w21, #2, 42ede4 <wcrtomb@plt+0x2a1c4>
  42ec84:	ldrb	w0, [x20]
  42ec88:	cbz	w0, 42ee34 <wcrtomb@plt+0x2a214>
  42ec8c:	mov	x0, x20
  42ec90:	bl	403ff0 <strlen@plt>
  42ec94:	ldr	x1, [x19, #32]
  42ec98:	and	x1, x1, #0xfffffff000
  42ec9c:	ands	x1, x1, #0xffffff8000001fff
  42eca0:	mov	w5, #0x0                   	// #0
  42eca4:	mov	w4, #0x1744                	// #5956
  42eca8:	mov	w1, #0x744                 	// #1860
  42ecac:	csel	w4, w4, w1, ne  // ne = any
  42ecb0:	mov	w3, w0
  42ecb4:	mov	x2, x20
  42ecb8:	add	x1, sp, #0x40
  42ecbc:	mov	x0, x19
  42ecc0:	bl	42de10 <wcrtomb@plt+0x291f0>
  42ecc4:	mov	w20, w0
  42ecc8:	ldr	x0, [sp, #304]
  42eccc:	bl	4047c0 <free@plt>
  42ecd0:	cbnz	w20, 42ee80 <wcrtomb@plt+0x2a260>
  42ecd4:	mov	w3, #0x0                   	// #0
  42ecd8:	ldr	x2, [x22]
  42ecdc:	ldr	x1, [sp, #272]
  42ece0:	mov	x0, x19
  42ece4:	bl	42bbd4 <wcrtomb@plt+0x26fb4>
  42ece8:	ldr	x0, [sp, #280]
  42ecec:	str	x0, [x22]
  42ecf0:	str	xzr, [sp, #280]
  42ecf4:	str	xzr, [sp, #272]
  42ecf8:	add	x0, sp, #0x40
  42ecfc:	bl	42c074 <wcrtomb@plt+0x27454>
  42ed00:	b	42eda8 <wcrtomb@plt+0x2a188>
  42ed04:	mov	w1, #0x7                   	// #7
  42ed08:	mov	x0, x19
  42ed0c:	bl	42cf40 <wcrtomb@plt+0x28320>
  42ed10:	mov	w20, #0x1                   	// #1
  42ed14:	b	42eda8 <wcrtomb@plt+0x2a188>
  42ed18:	mov	w5, #0x1                   	// #1
  42ed1c:	mov	w4, #0x700                 	// #1792
  42ed20:	mov	w3, w2
  42ed24:	mov	x2, x20
  42ed28:	add	x1, sp, #0x40
  42ed2c:	mov	x0, x19
  42ed30:	bl	42de10 <wcrtomb@plt+0x291f0>
  42ed34:	cbnz	w0, 42ed64 <wcrtomb@plt+0x2a144>
  42ed38:	ldr	x5, [x19, #160]
  42ed3c:	ldr	x4, [x19, #152]
  42ed40:	ldr	x3, [sp, #72]
  42ed44:	ldr	x2, [sp, #312]
  42ed48:	mov	x1, x20
  42ed4c:	add	x0, sp, #0x130
  42ed50:	blr	x5
  42ed54:	mov	w20, w0
  42ed58:	add	x0, sp, #0x40
  42ed5c:	bl	42c074 <wcrtomb@plt+0x27454>
  42ed60:	b	42ec6c <wcrtomb@plt+0x2a04c>
  42ed64:	add	x1, sp, #0x40
  42ed68:	mov	x0, x19
  42ed6c:	bl	42b958 <wcrtomb@plt+0x26d38>
  42ed70:	add	x0, sp, #0x40
  42ed74:	bl	42c074 <wcrtomb@plt+0x27454>
  42ed78:	mov	w20, #0x1                   	// #1
  42ed7c:	b	42eda8 <wcrtomb@plt+0x2a188>
  42ed80:	mov	x0, x19
  42ed84:	bl	42c1cc <wcrtomb@plt+0x275ac>
  42ed88:	mov	w20, w0
  42ed8c:	b	42eda8 <wcrtomb@plt+0x2a188>
  42ed90:	cmp	w20, #0x9
  42ed94:	b.eq	42edc0 <wcrtomb@plt+0x2a1a0>  // b.none
  42ed98:	mov	w1, w20
  42ed9c:	mov	x0, x19
  42eda0:	bl	42cf40 <wcrtomb@plt+0x28320>
  42eda4:	mov	w20, #0x1                   	// #1
  42eda8:	mov	w0, w20
  42edac:	ldp	x19, x20, [sp, #16]
  42edb0:	ldp	x21, x22, [sp, #32]
  42edb4:	ldr	x23, [sp, #48]
  42edb8:	ldp	x29, x30, [sp], #320
  42edbc:	ret
  42edc0:	ldr	w0, [x19, #192]
  42edc4:	cmp	w0, #0x9
  42edc8:	b.eq	42edd8 <wcrtomb@plt+0x2a1b8>  // b.none
  42edcc:	ldr	x0, [sp, #304]
  42edd0:	str	x0, [x19, #200]
  42edd4:	b	42ed98 <wcrtomb@plt+0x2a178>
  42edd8:	ldr	x0, [x19, #200]
  42eddc:	bl	4047c0 <free@plt>
  42ede0:	b	42edcc <wcrtomb@plt+0x2a1ac>
  42ede4:	add	x1, sp, #0x128
  42ede8:	mov	x0, x19
  42edec:	bl	42c3f4 <wcrtomb@plt+0x277d4>
  42edf0:	mov	w20, w0
  42edf4:	cbz	w0, 42ee00 <wcrtomb@plt+0x2a1e0>
  42edf8:	mov	w20, #0x1                   	// #1
  42edfc:	b	42eda8 <wcrtomb@plt+0x2a188>
  42ee00:	mov	w3, #0x0                   	// #0
  42ee04:	ldr	x2, [x22]
  42ee08:	ldr	x1, [sp, #296]
  42ee0c:	mov	x0, x19
  42ee10:	bl	42bbd4 <wcrtomb@plt+0x26fb4>
  42ee14:	ldr	x0, [sp, #296]
  42ee18:	str	x0, [x22]
  42ee1c:	mov	w1, #0xa                   	// #10
  42ee20:	orr	w21, w21, w1
  42ee24:	str	w21, [x0, #16]
  42ee28:	ldr	x1, [sp, #304]
  42ee2c:	str	x1, [x0, #24]
  42ee30:	b	42eda8 <wcrtomb@plt+0x2a188>
  42ee34:	mov	x0, x20
  42ee38:	bl	4047c0 <free@plt>
  42ee3c:	add	x1, sp, #0x128
  42ee40:	mov	x0, x19
  42ee44:	bl	42c3f4 <wcrtomb@plt+0x277d4>
  42ee48:	mov	w20, w0
  42ee4c:	cbz	w0, 42ee58 <wcrtomb@plt+0x2a238>
  42ee50:	mov	w20, #0x1                   	// #1
  42ee54:	b	42eda8 <wcrtomb@plt+0x2a188>
  42ee58:	mov	w3, #0x0                   	// #0
  42ee5c:	ldr	x2, [x22]
  42ee60:	ldr	x1, [sp, #296]
  42ee64:	mov	x0, x19
  42ee68:	bl	42bbd4 <wcrtomb@plt+0x26fb4>
  42ee6c:	ldr	x0, [sp, #296]
  42ee70:	str	x0, [x22]
  42ee74:	mov	w1, #0x1                   	// #1
  42ee78:	str	w1, [x0, #16]
  42ee7c:	b	42eda8 <wcrtomb@plt+0x2a188>
  42ee80:	add	x1, sp, #0x40
  42ee84:	mov	x0, x19
  42ee88:	bl	42b958 <wcrtomb@plt+0x26d38>
  42ee8c:	add	x0, sp, #0x40
  42ee90:	bl	42c074 <wcrtomb@plt+0x27454>
  42ee94:	mov	w20, #0x1                   	// #1
  42ee98:	b	42eda8 <wcrtomb@plt+0x2a188>
  42ee9c:	add	x1, sp, #0x128
  42eea0:	mov	x0, x19
  42eea4:	bl	42c3f4 <wcrtomb@plt+0x277d4>
  42eea8:	mov	w20, w0
  42eeac:	cbz	w0, 42eeb8 <wcrtomb@plt+0x2a298>
  42eeb0:	mov	w20, #0x1                   	// #1
  42eeb4:	b	42eda8 <wcrtomb@plt+0x2a188>
  42eeb8:	mov	w3, #0x0                   	// #0
  42eebc:	ldr	x2, [x22]
  42eec0:	ldr	x1, [sp, #296]
  42eec4:	mov	x0, x19
  42eec8:	bl	42bbd4 <wcrtomb@plt+0x26fb4>
  42eecc:	ldr	x0, [sp, #296]
  42eed0:	str	x0, [x22]
  42eed4:	mov	w1, #0x1                   	// #1
  42eed8:	str	w1, [x0, #16]
  42eedc:	b	42eda8 <wcrtomb@plt+0x2a188>
  42eee0:	mov	x12, #0x1020                	// #4128
  42eee4:	sub	sp, sp, x12
  42eee8:	stp	x29, x30, [sp]
  42eeec:	mov	x29, sp
  42eef0:	stp	x19, x20, [sp, #16]
  42eef4:	stp	x21, x22, [sp, #32]
  42eef8:	stp	x23, x24, [sp, #48]
  42eefc:	stp	x25, x26, [sp, #64]
  42ef00:	mov	x20, x1
  42ef04:	mov	x22, x2
  42ef08:	mov	x23, x3
  42ef0c:	mov	x24, x4
  42ef10:	mov	w25, w5
  42ef14:	cmn	w0, #0x64
  42ef18:	b.eq	42efb8 <wcrtomb@plt+0x2a398>  // b.none
  42ef1c:	mov	w19, w0
  42ef20:	ldrb	w0, [x1]
  42ef24:	cmp	w0, #0x2f
  42ef28:	b.eq	42efb8 <wcrtomb@plt+0x2a398>  // b.none
  42ef2c:	mov	x2, x1
  42ef30:	mov	w1, w19
  42ef34:	add	x0, sp, #0x60
  42ef38:	bl	4411c8 <_obstack_memory_used@@Base+0x2c>
  42ef3c:	mov	x26, x0
  42ef40:	cbz	x0, 42f008 <wcrtomb@plt+0x2a3e8>
  42ef44:	stp	x27, x28, [sp, #80]
  42ef48:	mov	w4, w25
  42ef4c:	mov	x3, x24
  42ef50:	mov	x2, x23
  42ef54:	mov	x1, x22
  42ef58:	bl	4043f0 <setxattr@plt>
  42ef5c:	mov	w21, w0
  42ef60:	bl	404ad0 <__errno_location@plt>
  42ef64:	mov	x27, x0
  42ef68:	ldr	w28, [x0]
  42ef6c:	add	x0, sp, #0x60
  42ef70:	cmp	x26, x0
  42ef74:	b.eq	42ef80 <wcrtomb@plt+0x2a360>  // b.none
  42ef78:	mov	x0, x26
  42ef7c:	bl	4047c0 <free@plt>
  42ef80:	cmn	w21, #0x1
  42ef84:	b.ne	42f0fc <wcrtomb@plt+0x2a4dc>  // b.any
  42ef88:	cmp	w28, #0x14
  42ef8c:	b.eq	42f004 <wcrtomb@plt+0x2a3e4>  // b.none
  42ef90:	sub	w0, w28, #0x1
  42ef94:	cmp	w0, #0x1
  42ef98:	ccmp	w28, #0xd, #0x4, hi  // hi = pmore
  42ef9c:	b.eq	42f06c <wcrtomb@plt+0x2a44c>  // b.none
  42efa0:	cmp	w28, #0x26
  42efa4:	mov	w0, #0x5f                  	// #95
  42efa8:	ccmp	w28, w0, #0x4, ne  // ne = any
  42efac:	b.ne	42eff8 <wcrtomb@plt+0x2a3d8>  // b.any
  42efb0:	ldp	x27, x28, [sp, #80]
  42efb4:	b	42f008 <wcrtomb@plt+0x2a3e8>
  42efb8:	mov	w4, w25
  42efbc:	mov	x3, x24
  42efc0:	mov	x2, x23
  42efc4:	mov	x1, x22
  42efc8:	mov	x0, x20
  42efcc:	bl	4043f0 <setxattr@plt>
  42efd0:	mov	w21, w0
  42efd4:	mov	w0, w21
  42efd8:	ldp	x19, x20, [sp, #16]
  42efdc:	ldp	x21, x22, [sp, #32]
  42efe0:	ldp	x23, x24, [sp, #48]
  42efe4:	ldp	x25, x26, [sp, #64]
  42efe8:	ldp	x29, x30, [sp]
  42efec:	mov	x12, #0x1020                	// #4128
  42eff0:	add	sp, sp, x12
  42eff4:	ret
  42eff8:	str	w28, [x27]
  42effc:	ldp	x27, x28, [sp, #80]
  42f000:	b	42efd4 <wcrtomb@plt+0x2a3b4>
  42f004:	ldp	x27, x28, [sp, #80]
  42f008:	add	x0, sp, #0x60
  42f00c:	bl	43f50c <argp_parse@@Base+0xbdcc>
  42f010:	cbnz	w0, 42f074 <wcrtomb@plt+0x2a454>
  42f014:	tbnz	w19, #31, 42f024 <wcrtomb@plt+0x2a404>
  42f018:	ldr	w0, [sp, #96]
  42f01c:	cmp	w0, w19
  42f020:	b.eq	42f084 <wcrtomb@plt+0x2a464>  // b.none
  42f024:	mov	w0, w19
  42f028:	bl	404060 <fchdir@plt>
  42f02c:	cbnz	w0, 42f0a0 <wcrtomb@plt+0x2a480>
  42f030:	mov	w4, w25
  42f034:	mov	x3, x24
  42f038:	mov	x2, x23
  42f03c:	mov	x1, x22
  42f040:	mov	x0, x20
  42f044:	bl	4043f0 <setxattr@plt>
  42f048:	mov	w21, w0
  42f04c:	cmn	w0, #0x1
  42f050:	b.eq	42f0c0 <wcrtomb@plt+0x2a4a0>  // b.none
  42f054:	add	x0, sp, #0x60
  42f058:	bl	43f564 <argp_parse@@Base+0xbe24>
  42f05c:	cbnz	w0, 42f0ec <wcrtomb@plt+0x2a4cc>
  42f060:	add	x0, sp, #0x60
  42f064:	bl	43f590 <argp_parse@@Base+0xbe50>
  42f068:	b	42efd4 <wcrtomb@plt+0x2a3b4>
  42f06c:	ldp	x27, x28, [sp, #80]
  42f070:	b	42f008 <wcrtomb@plt+0x2a3e8>
  42f074:	stp	x27, x28, [sp, #80]
  42f078:	bl	404ad0 <__errno_location@plt>
  42f07c:	ldr	w0, [x0]
  42f080:	bl	439a88 <argp_parse@@Base+0x6348>
  42f084:	add	x0, sp, #0x60
  42f088:	bl	43f590 <argp_parse@@Base+0xbe50>
  42f08c:	bl	404ad0 <__errno_location@plt>
  42f090:	mov	w1, #0x9                   	// #9
  42f094:	str	w1, [x0]
  42f098:	mov	w21, #0xffffffff            	// #-1
  42f09c:	b	42efd4 <wcrtomb@plt+0x2a3b4>
  42f0a0:	bl	404ad0 <__errno_location@plt>
  42f0a4:	mov	x19, x0
  42f0a8:	ldr	w20, [x0]
  42f0ac:	add	x0, sp, #0x60
  42f0b0:	bl	43f590 <argp_parse@@Base+0xbe50>
  42f0b4:	str	w20, [x19]
  42f0b8:	mov	w21, #0xffffffff            	// #-1
  42f0bc:	b	42efd4 <wcrtomb@plt+0x2a3b4>
  42f0c0:	bl	404ad0 <__errno_location@plt>
  42f0c4:	mov	x19, x0
  42f0c8:	ldr	w20, [x0]
  42f0cc:	add	x0, sp, #0x60
  42f0d0:	bl	43f564 <argp_parse@@Base+0xbe24>
  42f0d4:	cbnz	w0, 42f0ec <wcrtomb@plt+0x2a4cc>
  42f0d8:	add	x0, sp, #0x60
  42f0dc:	bl	43f590 <argp_parse@@Base+0xbe50>
  42f0e0:	cbz	w20, 42efd4 <wcrtomb@plt+0x2a3b4>
  42f0e4:	str	w20, [x19]
  42f0e8:	b	42efd4 <wcrtomb@plt+0x2a3b4>
  42f0ec:	stp	x27, x28, [sp, #80]
  42f0f0:	bl	404ad0 <__errno_location@plt>
  42f0f4:	ldr	w0, [x0]
  42f0f8:	bl	439ac8 <argp_parse@@Base+0x6388>
  42f0fc:	ldp	x27, x28, [sp, #80]
  42f100:	b	42efd4 <wcrtomb@plt+0x2a3b4>
  42f104:	mov	x12, #0x1020                	// #4128
  42f108:	sub	sp, sp, x12
  42f10c:	stp	x29, x30, [sp]
  42f110:	mov	x29, sp
  42f114:	stp	x19, x20, [sp, #16]
  42f118:	stp	x21, x22, [sp, #32]
  42f11c:	stp	x23, x24, [sp, #48]
  42f120:	stp	x25, x26, [sp, #64]
  42f124:	mov	x20, x1
  42f128:	mov	x22, x2
  42f12c:	mov	x23, x3
  42f130:	mov	x24, x4
  42f134:	mov	w25, w5
  42f138:	cmn	w0, #0x64
  42f13c:	b.eq	42f1dc <wcrtomb@plt+0x2a5bc>  // b.none
  42f140:	mov	w19, w0
  42f144:	ldrb	w0, [x1]
  42f148:	cmp	w0, #0x2f
  42f14c:	b.eq	42f1dc <wcrtomb@plt+0x2a5bc>  // b.none
  42f150:	mov	x2, x1
  42f154:	mov	w1, w19
  42f158:	add	x0, sp, #0x60
  42f15c:	bl	4411c8 <_obstack_memory_used@@Base+0x2c>
  42f160:	mov	x26, x0
  42f164:	cbz	x0, 42f22c <wcrtomb@plt+0x2a60c>
  42f168:	stp	x27, x28, [sp, #80]
  42f16c:	mov	w4, w25
  42f170:	mov	x3, x24
  42f174:	mov	x2, x23
  42f178:	mov	x1, x22
  42f17c:	bl	4044e0 <lsetxattr@plt>
  42f180:	mov	w21, w0
  42f184:	bl	404ad0 <__errno_location@plt>
  42f188:	mov	x27, x0
  42f18c:	ldr	w28, [x0]
  42f190:	add	x0, sp, #0x60
  42f194:	cmp	x26, x0
  42f198:	b.eq	42f1a4 <wcrtomb@plt+0x2a584>  // b.none
  42f19c:	mov	x0, x26
  42f1a0:	bl	4047c0 <free@plt>
  42f1a4:	cmn	w21, #0x1
  42f1a8:	b.ne	42f320 <wcrtomb@plt+0x2a700>  // b.any
  42f1ac:	cmp	w28, #0x14
  42f1b0:	b.eq	42f228 <wcrtomb@plt+0x2a608>  // b.none
  42f1b4:	sub	w0, w28, #0x1
  42f1b8:	cmp	w0, #0x1
  42f1bc:	ccmp	w28, #0xd, #0x4, hi  // hi = pmore
  42f1c0:	b.eq	42f290 <wcrtomb@plt+0x2a670>  // b.none
  42f1c4:	cmp	w28, #0x26
  42f1c8:	mov	w0, #0x5f                  	// #95
  42f1cc:	ccmp	w28, w0, #0x4, ne  // ne = any
  42f1d0:	b.ne	42f21c <wcrtomb@plt+0x2a5fc>  // b.any
  42f1d4:	ldp	x27, x28, [sp, #80]
  42f1d8:	b	42f22c <wcrtomb@plt+0x2a60c>
  42f1dc:	mov	w4, w25
  42f1e0:	mov	x3, x24
  42f1e4:	mov	x2, x23
  42f1e8:	mov	x1, x22
  42f1ec:	mov	x0, x20
  42f1f0:	bl	4044e0 <lsetxattr@plt>
  42f1f4:	mov	w21, w0
  42f1f8:	mov	w0, w21
  42f1fc:	ldp	x19, x20, [sp, #16]
  42f200:	ldp	x21, x22, [sp, #32]
  42f204:	ldp	x23, x24, [sp, #48]
  42f208:	ldp	x25, x26, [sp, #64]
  42f20c:	ldp	x29, x30, [sp]
  42f210:	mov	x12, #0x1020                	// #4128
  42f214:	add	sp, sp, x12
  42f218:	ret
  42f21c:	str	w28, [x27]
  42f220:	ldp	x27, x28, [sp, #80]
  42f224:	b	42f1f8 <wcrtomb@plt+0x2a5d8>
  42f228:	ldp	x27, x28, [sp, #80]
  42f22c:	add	x0, sp, #0x60
  42f230:	bl	43f50c <argp_parse@@Base+0xbdcc>
  42f234:	cbnz	w0, 42f298 <wcrtomb@plt+0x2a678>
  42f238:	tbnz	w19, #31, 42f248 <wcrtomb@plt+0x2a628>
  42f23c:	ldr	w0, [sp, #96]
  42f240:	cmp	w0, w19
  42f244:	b.eq	42f2a8 <wcrtomb@plt+0x2a688>  // b.none
  42f248:	mov	w0, w19
  42f24c:	bl	404060 <fchdir@plt>
  42f250:	cbnz	w0, 42f2c4 <wcrtomb@plt+0x2a6a4>
  42f254:	mov	w4, w25
  42f258:	mov	x3, x24
  42f25c:	mov	x2, x23
  42f260:	mov	x1, x22
  42f264:	mov	x0, x20
  42f268:	bl	4044e0 <lsetxattr@plt>
  42f26c:	mov	w21, w0
  42f270:	cmn	w0, #0x1
  42f274:	b.eq	42f2e4 <wcrtomb@plt+0x2a6c4>  // b.none
  42f278:	add	x0, sp, #0x60
  42f27c:	bl	43f564 <argp_parse@@Base+0xbe24>
  42f280:	cbnz	w0, 42f310 <wcrtomb@plt+0x2a6f0>
  42f284:	add	x0, sp, #0x60
  42f288:	bl	43f590 <argp_parse@@Base+0xbe50>
  42f28c:	b	42f1f8 <wcrtomb@plt+0x2a5d8>
  42f290:	ldp	x27, x28, [sp, #80]
  42f294:	b	42f22c <wcrtomb@plt+0x2a60c>
  42f298:	stp	x27, x28, [sp, #80]
  42f29c:	bl	404ad0 <__errno_location@plt>
  42f2a0:	ldr	w0, [x0]
  42f2a4:	bl	439a88 <argp_parse@@Base+0x6348>
  42f2a8:	add	x0, sp, #0x60
  42f2ac:	bl	43f590 <argp_parse@@Base+0xbe50>
  42f2b0:	bl	404ad0 <__errno_location@plt>
  42f2b4:	mov	w1, #0x9                   	// #9
  42f2b8:	str	w1, [x0]
  42f2bc:	mov	w21, #0xffffffff            	// #-1
  42f2c0:	b	42f1f8 <wcrtomb@plt+0x2a5d8>
  42f2c4:	bl	404ad0 <__errno_location@plt>
  42f2c8:	mov	x19, x0
  42f2cc:	ldr	w20, [x0]
  42f2d0:	add	x0, sp, #0x60
  42f2d4:	bl	43f590 <argp_parse@@Base+0xbe50>
  42f2d8:	str	w20, [x19]
  42f2dc:	mov	w21, #0xffffffff            	// #-1
  42f2e0:	b	42f1f8 <wcrtomb@plt+0x2a5d8>
  42f2e4:	bl	404ad0 <__errno_location@plt>
  42f2e8:	mov	x19, x0
  42f2ec:	ldr	w20, [x0]
  42f2f0:	add	x0, sp, #0x60
  42f2f4:	bl	43f564 <argp_parse@@Base+0xbe24>
  42f2f8:	cbnz	w0, 42f310 <wcrtomb@plt+0x2a6f0>
  42f2fc:	add	x0, sp, #0x60
  42f300:	bl	43f590 <argp_parse@@Base+0xbe50>
  42f304:	cbz	w20, 42f1f8 <wcrtomb@plt+0x2a5d8>
  42f308:	str	w20, [x19]
  42f30c:	b	42f1f8 <wcrtomb@plt+0x2a5d8>
  42f310:	stp	x27, x28, [sp, #80]
  42f314:	bl	404ad0 <__errno_location@plt>
  42f318:	ldr	w0, [x0]
  42f31c:	bl	439ac8 <argp_parse@@Base+0x6388>
  42f320:	ldp	x27, x28, [sp, #80]
  42f324:	b	42f1f8 <wcrtomb@plt+0x2a5d8>
  42f328:	mov	x12, #0x1020                	// #4128
  42f32c:	sub	sp, sp, x12
  42f330:	stp	x29, x30, [sp]
  42f334:	mov	x29, sp
  42f338:	stp	x19, x20, [sp, #16]
  42f33c:	stp	x21, x22, [sp, #32]
  42f340:	stp	x23, x24, [sp, #48]
  42f344:	stp	x25, x26, [sp, #64]
  42f348:	mov	x20, x1
  42f34c:	mov	x23, x2
  42f350:	mov	x24, x3
  42f354:	mov	x25, x4
  42f358:	cmn	w0, #0x64
  42f35c:	b.eq	42f3f8 <wcrtomb@plt+0x2a7d8>  // b.none
  42f360:	mov	w19, w0
  42f364:	ldrb	w0, [x1]
  42f368:	cmp	w0, #0x2f
  42f36c:	b.eq	42f3f8 <wcrtomb@plt+0x2a7d8>  // b.none
  42f370:	mov	x2, x1
  42f374:	mov	w1, w19
  42f378:	add	x0, sp, #0x60
  42f37c:	bl	4411c8 <_obstack_memory_used@@Base+0x2c>
  42f380:	mov	x26, x0
  42f384:	cbz	x0, 42f444 <wcrtomb@plt+0x2a824>
  42f388:	str	x27, [sp, #80]
  42f38c:	mov	x3, x25
  42f390:	mov	x2, x24
  42f394:	mov	x1, x23
  42f398:	bl	4046d0 <getxattr@plt>
  42f39c:	mov	x21, x0
  42f3a0:	bl	404ad0 <__errno_location@plt>
  42f3a4:	mov	x22, x0
  42f3a8:	ldr	w27, [x0]
  42f3ac:	add	x0, sp, #0x60
  42f3b0:	cmp	x26, x0
  42f3b4:	b.eq	42f3c0 <wcrtomb@plt+0x2a7a0>  // b.none
  42f3b8:	mov	x0, x26
  42f3bc:	bl	4047c0 <free@plt>
  42f3c0:	cmn	x21, #0x1
  42f3c4:	b.ne	42f534 <wcrtomb@plt+0x2a914>  // b.any
  42f3c8:	cmp	w27, #0x14
  42f3cc:	b.eq	42f440 <wcrtomb@plt+0x2a820>  // b.none
  42f3d0:	sub	w0, w27, #0x1
  42f3d4:	cmp	w0, #0x1
  42f3d8:	ccmp	w27, #0xd, #0x4, hi  // hi = pmore
  42f3dc:	b.eq	42f4a4 <wcrtomb@plt+0x2a884>  // b.none
  42f3e0:	cmp	w27, #0x26
  42f3e4:	mov	w0, #0x5f                  	// #95
  42f3e8:	ccmp	w27, w0, #0x4, ne  // ne = any
  42f3ec:	b.ne	42f434 <wcrtomb@plt+0x2a814>  // b.any
  42f3f0:	ldr	x27, [sp, #80]
  42f3f4:	b	42f444 <wcrtomb@plt+0x2a824>
  42f3f8:	mov	x3, x25
  42f3fc:	mov	x2, x24
  42f400:	mov	x1, x23
  42f404:	mov	x0, x20
  42f408:	bl	4046d0 <getxattr@plt>
  42f40c:	mov	x21, x0
  42f410:	mov	x0, x21
  42f414:	ldp	x19, x20, [sp, #16]
  42f418:	ldp	x21, x22, [sp, #32]
  42f41c:	ldp	x23, x24, [sp, #48]
  42f420:	ldp	x25, x26, [sp, #64]
  42f424:	ldp	x29, x30, [sp]
  42f428:	mov	x12, #0x1020                	// #4128
  42f42c:	add	sp, sp, x12
  42f430:	ret
  42f434:	str	w27, [x22]
  42f438:	ldr	x27, [sp, #80]
  42f43c:	b	42f410 <wcrtomb@plt+0x2a7f0>
  42f440:	ldr	x27, [sp, #80]
  42f444:	add	x0, sp, #0x60
  42f448:	bl	43f50c <argp_parse@@Base+0xbdcc>
  42f44c:	cbnz	w0, 42f4ac <wcrtomb@plt+0x2a88c>
  42f450:	tbnz	w19, #31, 42f460 <wcrtomb@plt+0x2a840>
  42f454:	ldr	w0, [sp, #96]
  42f458:	cmp	w0, w19
  42f45c:	b.eq	42f4bc <wcrtomb@plt+0x2a89c>  // b.none
  42f460:	mov	w0, w19
  42f464:	bl	404060 <fchdir@plt>
  42f468:	cbnz	w0, 42f4d8 <wcrtomb@plt+0x2a8b8>
  42f46c:	mov	x3, x25
  42f470:	mov	x2, x24
  42f474:	mov	x1, x23
  42f478:	mov	x0, x20
  42f47c:	bl	4046d0 <getxattr@plt>
  42f480:	mov	x21, x0
  42f484:	cmn	x0, #0x1
  42f488:	b.eq	42f4f8 <wcrtomb@plt+0x2a8d8>  // b.none
  42f48c:	add	x0, sp, #0x60
  42f490:	bl	43f564 <argp_parse@@Base+0xbe24>
  42f494:	cbnz	w0, 42f524 <wcrtomb@plt+0x2a904>
  42f498:	add	x0, sp, #0x60
  42f49c:	bl	43f590 <argp_parse@@Base+0xbe50>
  42f4a0:	b	42f410 <wcrtomb@plt+0x2a7f0>
  42f4a4:	ldr	x27, [sp, #80]
  42f4a8:	b	42f444 <wcrtomb@plt+0x2a824>
  42f4ac:	str	x27, [sp, #80]
  42f4b0:	bl	404ad0 <__errno_location@plt>
  42f4b4:	ldr	w0, [x0]
  42f4b8:	bl	439a88 <argp_parse@@Base+0x6348>
  42f4bc:	add	x0, sp, #0x60
  42f4c0:	bl	43f590 <argp_parse@@Base+0xbe50>
  42f4c4:	bl	404ad0 <__errno_location@plt>
  42f4c8:	mov	w1, #0x9                   	// #9
  42f4cc:	str	w1, [x0]
  42f4d0:	mov	x21, #0xffffffffffffffff    	// #-1
  42f4d4:	b	42f410 <wcrtomb@plt+0x2a7f0>
  42f4d8:	bl	404ad0 <__errno_location@plt>
  42f4dc:	mov	x19, x0
  42f4e0:	ldr	w20, [x0]
  42f4e4:	add	x0, sp, #0x60
  42f4e8:	bl	43f590 <argp_parse@@Base+0xbe50>
  42f4ec:	str	w20, [x19]
  42f4f0:	mov	x21, #0xffffffffffffffff    	// #-1
  42f4f4:	b	42f410 <wcrtomb@plt+0x2a7f0>
  42f4f8:	bl	404ad0 <__errno_location@plt>
  42f4fc:	mov	x19, x0
  42f500:	ldr	w20, [x0]
  42f504:	add	x0, sp, #0x60
  42f508:	bl	43f564 <argp_parse@@Base+0xbe24>
  42f50c:	cbnz	w0, 42f524 <wcrtomb@plt+0x2a904>
  42f510:	add	x0, sp, #0x60
  42f514:	bl	43f590 <argp_parse@@Base+0xbe50>
  42f518:	cbz	w20, 42f410 <wcrtomb@plt+0x2a7f0>
  42f51c:	str	w20, [x19]
  42f520:	b	42f410 <wcrtomb@plt+0x2a7f0>
  42f524:	str	x27, [sp, #80]
  42f528:	bl	404ad0 <__errno_location@plt>
  42f52c:	ldr	w0, [x0]
  42f530:	bl	439ac8 <argp_parse@@Base+0x6388>
  42f534:	ldr	x27, [sp, #80]
  42f538:	b	42f410 <wcrtomb@plt+0x2a7f0>
  42f53c:	mov	x12, #0x1020                	// #4128
  42f540:	sub	sp, sp, x12
  42f544:	stp	x29, x30, [sp]
  42f548:	mov	x29, sp
  42f54c:	stp	x19, x20, [sp, #16]
  42f550:	stp	x21, x22, [sp, #32]
  42f554:	stp	x23, x24, [sp, #48]
  42f558:	stp	x25, x26, [sp, #64]
  42f55c:	mov	x20, x1
  42f560:	mov	x23, x2
  42f564:	mov	x24, x3
  42f568:	mov	x25, x4
  42f56c:	cmn	w0, #0x64
  42f570:	b.eq	42f60c <wcrtomb@plt+0x2a9ec>  // b.none
  42f574:	mov	w19, w0
  42f578:	ldrb	w0, [x1]
  42f57c:	cmp	w0, #0x2f
  42f580:	b.eq	42f60c <wcrtomb@plt+0x2a9ec>  // b.none
  42f584:	mov	x2, x1
  42f588:	mov	w1, w19
  42f58c:	add	x0, sp, #0x60
  42f590:	bl	4411c8 <_obstack_memory_used@@Base+0x2c>
  42f594:	mov	x26, x0
  42f598:	cbz	x0, 42f658 <wcrtomb@plt+0x2aa38>
  42f59c:	str	x27, [sp, #80]
  42f5a0:	mov	x3, x25
  42f5a4:	mov	x2, x24
  42f5a8:	mov	x1, x23
  42f5ac:	bl	404580 <lgetxattr@plt>
  42f5b0:	mov	x21, x0
  42f5b4:	bl	404ad0 <__errno_location@plt>
  42f5b8:	mov	x22, x0
  42f5bc:	ldr	w27, [x0]
  42f5c0:	add	x0, sp, #0x60
  42f5c4:	cmp	x26, x0
  42f5c8:	b.eq	42f5d4 <wcrtomb@plt+0x2a9b4>  // b.none
  42f5cc:	mov	x0, x26
  42f5d0:	bl	4047c0 <free@plt>
  42f5d4:	cmn	x21, #0x1
  42f5d8:	b.ne	42f748 <wcrtomb@plt+0x2ab28>  // b.any
  42f5dc:	cmp	w27, #0x14
  42f5e0:	b.eq	42f654 <wcrtomb@plt+0x2aa34>  // b.none
  42f5e4:	sub	w0, w27, #0x1
  42f5e8:	cmp	w0, #0x1
  42f5ec:	ccmp	w27, #0xd, #0x4, hi  // hi = pmore
  42f5f0:	b.eq	42f6b8 <wcrtomb@plt+0x2aa98>  // b.none
  42f5f4:	cmp	w27, #0x26
  42f5f8:	mov	w0, #0x5f                  	// #95
  42f5fc:	ccmp	w27, w0, #0x4, ne  // ne = any
  42f600:	b.ne	42f648 <wcrtomb@plt+0x2aa28>  // b.any
  42f604:	ldr	x27, [sp, #80]
  42f608:	b	42f658 <wcrtomb@plt+0x2aa38>
  42f60c:	mov	x3, x25
  42f610:	mov	x2, x24
  42f614:	mov	x1, x23
  42f618:	mov	x0, x20
  42f61c:	bl	404580 <lgetxattr@plt>
  42f620:	mov	x21, x0
  42f624:	mov	x0, x21
  42f628:	ldp	x19, x20, [sp, #16]
  42f62c:	ldp	x21, x22, [sp, #32]
  42f630:	ldp	x23, x24, [sp, #48]
  42f634:	ldp	x25, x26, [sp, #64]
  42f638:	ldp	x29, x30, [sp]
  42f63c:	mov	x12, #0x1020                	// #4128
  42f640:	add	sp, sp, x12
  42f644:	ret
  42f648:	str	w27, [x22]
  42f64c:	ldr	x27, [sp, #80]
  42f650:	b	42f624 <wcrtomb@plt+0x2aa04>
  42f654:	ldr	x27, [sp, #80]
  42f658:	add	x0, sp, #0x60
  42f65c:	bl	43f50c <argp_parse@@Base+0xbdcc>
  42f660:	cbnz	w0, 42f6c0 <wcrtomb@plt+0x2aaa0>
  42f664:	tbnz	w19, #31, 42f674 <wcrtomb@plt+0x2aa54>
  42f668:	ldr	w0, [sp, #96]
  42f66c:	cmp	w0, w19
  42f670:	b.eq	42f6d0 <wcrtomb@plt+0x2aab0>  // b.none
  42f674:	mov	w0, w19
  42f678:	bl	404060 <fchdir@plt>
  42f67c:	cbnz	w0, 42f6ec <wcrtomb@plt+0x2aacc>
  42f680:	mov	x3, x25
  42f684:	mov	x2, x24
  42f688:	mov	x1, x23
  42f68c:	mov	x0, x20
  42f690:	bl	404580 <lgetxattr@plt>
  42f694:	mov	x21, x0
  42f698:	cmn	x0, #0x1
  42f69c:	b.eq	42f70c <wcrtomb@plt+0x2aaec>  // b.none
  42f6a0:	add	x0, sp, #0x60
  42f6a4:	bl	43f564 <argp_parse@@Base+0xbe24>
  42f6a8:	cbnz	w0, 42f738 <wcrtomb@plt+0x2ab18>
  42f6ac:	add	x0, sp, #0x60
  42f6b0:	bl	43f590 <argp_parse@@Base+0xbe50>
  42f6b4:	b	42f624 <wcrtomb@plt+0x2aa04>
  42f6b8:	ldr	x27, [sp, #80]
  42f6bc:	b	42f658 <wcrtomb@plt+0x2aa38>
  42f6c0:	str	x27, [sp, #80]
  42f6c4:	bl	404ad0 <__errno_location@plt>
  42f6c8:	ldr	w0, [x0]
  42f6cc:	bl	439a88 <argp_parse@@Base+0x6348>
  42f6d0:	add	x0, sp, #0x60
  42f6d4:	bl	43f590 <argp_parse@@Base+0xbe50>
  42f6d8:	bl	404ad0 <__errno_location@plt>
  42f6dc:	mov	w1, #0x9                   	// #9
  42f6e0:	str	w1, [x0]
  42f6e4:	mov	x21, #0xffffffffffffffff    	// #-1
  42f6e8:	b	42f624 <wcrtomb@plt+0x2aa04>
  42f6ec:	bl	404ad0 <__errno_location@plt>
  42f6f0:	mov	x19, x0
  42f6f4:	ldr	w20, [x0]
  42f6f8:	add	x0, sp, #0x60
  42f6fc:	bl	43f590 <argp_parse@@Base+0xbe50>
  42f700:	str	w20, [x19]
  42f704:	mov	x21, #0xffffffffffffffff    	// #-1
  42f708:	b	42f624 <wcrtomb@plt+0x2aa04>
  42f70c:	bl	404ad0 <__errno_location@plt>
  42f710:	mov	x19, x0
  42f714:	ldr	w20, [x0]
  42f718:	add	x0, sp, #0x60
  42f71c:	bl	43f564 <argp_parse@@Base+0xbe24>
  42f720:	cbnz	w0, 42f738 <wcrtomb@plt+0x2ab18>
  42f724:	add	x0, sp, #0x60
  42f728:	bl	43f590 <argp_parse@@Base+0xbe50>
  42f72c:	cbz	w20, 42f624 <wcrtomb@plt+0x2aa04>
  42f730:	str	w20, [x19]
  42f734:	b	42f624 <wcrtomb@plt+0x2aa04>
  42f738:	str	x27, [sp, #80]
  42f73c:	bl	404ad0 <__errno_location@plt>
  42f740:	ldr	w0, [x0]
  42f744:	bl	439ac8 <argp_parse@@Base+0x6388>
  42f748:	ldr	x27, [sp, #80]
  42f74c:	b	42f624 <wcrtomb@plt+0x2aa04>
  42f750:	mov	x12, #0x1010                	// #4112
  42f754:	sub	sp, sp, x12
  42f758:	stp	x29, x30, [sp]
  42f75c:	mov	x29, sp
  42f760:	stp	x19, x20, [sp, #16]
  42f764:	stp	x21, x22, [sp, #32]
  42f768:	stp	x23, x24, [sp, #48]
  42f76c:	mov	x20, x1
  42f770:	mov	x23, x2
  42f774:	mov	x24, x3
  42f778:	cmn	w0, #0x64
  42f77c:	b.eq	42f86c <wcrtomb@plt+0x2ac4c>  // b.none
  42f780:	mov	w19, w0
  42f784:	ldrb	w0, [x1]
  42f788:	cmp	w0, #0x2f
  42f78c:	b.eq	42f86c <wcrtomb@plt+0x2ac4c>  // b.none
  42f790:	stp	x25, x26, [sp, #64]
  42f794:	mov	x2, x1
  42f798:	mov	w1, w19
  42f79c:	add	x0, sp, #0x50
  42f7a0:	bl	4411c8 <_obstack_memory_used@@Base+0x2c>
  42f7a4:	mov	x25, x0
  42f7a8:	cbz	x0, 42f80c <wcrtomb@plt+0x2abec>
  42f7ac:	mov	x2, x24
  42f7b0:	mov	x1, x23
  42f7b4:	bl	4044f0 <listxattr@plt>
  42f7b8:	mov	x21, x0
  42f7bc:	bl	404ad0 <__errno_location@plt>
  42f7c0:	mov	x22, x0
  42f7c4:	ldr	w26, [x0]
  42f7c8:	add	x0, sp, #0x50
  42f7cc:	cmp	x25, x0
  42f7d0:	b.eq	42f7dc <wcrtomb@plt+0x2abbc>  // b.none
  42f7d4:	mov	x0, x25
  42f7d8:	bl	4047c0 <free@plt>
  42f7dc:	cmn	x21, #0x1
  42f7e0:	b.ne	42f938 <wcrtomb@plt+0x2ad18>  // b.any
  42f7e4:	cmp	w26, #0x14
  42f7e8:	b.eq	42f80c <wcrtomb@plt+0x2abec>  // b.none
  42f7ec:	sub	w0, w26, #0x1
  42f7f0:	cmp	w0, #0x1
  42f7f4:	ccmp	w26, #0xd, #0x4, hi  // hi = pmore
  42f7f8:	b.eq	42f80c <wcrtomb@plt+0x2abec>  // b.none
  42f7fc:	cmp	w26, #0x26
  42f800:	mov	w0, #0x5f                  	// #95
  42f804:	ccmp	w26, w0, #0x4, ne  // ne = any
  42f808:	b.ne	42f8a0 <wcrtomb@plt+0x2ac80>  // b.any
  42f80c:	add	x0, sp, #0x50
  42f810:	bl	43f50c <argp_parse@@Base+0xbdcc>
  42f814:	cbnz	w0, 42f8ac <wcrtomb@plt+0x2ac8c>
  42f818:	tbnz	w19, #31, 42f828 <wcrtomb@plt+0x2ac08>
  42f81c:	ldr	w0, [sp, #80]
  42f820:	cmp	w0, w19
  42f824:	b.eq	42f8b8 <wcrtomb@plt+0x2ac98>  // b.none
  42f828:	mov	w0, w19
  42f82c:	bl	404060 <fchdir@plt>
  42f830:	cbnz	w0, 42f8d8 <wcrtomb@plt+0x2acb8>
  42f834:	mov	x2, x24
  42f838:	mov	x1, x23
  42f83c:	mov	x0, x20
  42f840:	bl	4044f0 <listxattr@plt>
  42f844:	mov	x21, x0
  42f848:	cmn	x0, #0x1
  42f84c:	b.eq	42f8fc <wcrtomb@plt+0x2acdc>  // b.none
  42f850:	add	x0, sp, #0x50
  42f854:	bl	43f564 <argp_parse@@Base+0xbe24>
  42f858:	cbnz	w0, 42f92c <wcrtomb@plt+0x2ad0c>
  42f85c:	add	x0, sp, #0x50
  42f860:	bl	43f590 <argp_parse@@Base+0xbe50>
  42f864:	ldp	x25, x26, [sp, #64]
  42f868:	b	42f880 <wcrtomb@plt+0x2ac60>
  42f86c:	mov	x2, x24
  42f870:	mov	x1, x23
  42f874:	mov	x0, x20
  42f878:	bl	4044f0 <listxattr@plt>
  42f87c:	mov	x21, x0
  42f880:	mov	x0, x21
  42f884:	ldp	x19, x20, [sp, #16]
  42f888:	ldp	x21, x22, [sp, #32]
  42f88c:	ldp	x23, x24, [sp, #48]
  42f890:	ldp	x29, x30, [sp]
  42f894:	mov	x12, #0x1010                	// #4112
  42f898:	add	sp, sp, x12
  42f89c:	ret
  42f8a0:	str	w26, [x22]
  42f8a4:	ldp	x25, x26, [sp, #64]
  42f8a8:	b	42f880 <wcrtomb@plt+0x2ac60>
  42f8ac:	bl	404ad0 <__errno_location@plt>
  42f8b0:	ldr	w0, [x0]
  42f8b4:	bl	439a88 <argp_parse@@Base+0x6348>
  42f8b8:	add	x0, sp, #0x50
  42f8bc:	bl	43f590 <argp_parse@@Base+0xbe50>
  42f8c0:	bl	404ad0 <__errno_location@plt>
  42f8c4:	mov	w1, #0x9                   	// #9
  42f8c8:	str	w1, [x0]
  42f8cc:	mov	x21, #0xffffffffffffffff    	// #-1
  42f8d0:	ldp	x25, x26, [sp, #64]
  42f8d4:	b	42f880 <wcrtomb@plt+0x2ac60>
  42f8d8:	bl	404ad0 <__errno_location@plt>
  42f8dc:	mov	x19, x0
  42f8e0:	ldr	w20, [x0]
  42f8e4:	add	x0, sp, #0x50
  42f8e8:	bl	43f590 <argp_parse@@Base+0xbe50>
  42f8ec:	str	w20, [x19]
  42f8f0:	mov	x21, #0xffffffffffffffff    	// #-1
  42f8f4:	ldp	x25, x26, [sp, #64]
  42f8f8:	b	42f880 <wcrtomb@plt+0x2ac60>
  42f8fc:	bl	404ad0 <__errno_location@plt>
  42f900:	mov	x19, x0
  42f904:	ldr	w20, [x0]
  42f908:	add	x0, sp, #0x50
  42f90c:	bl	43f564 <argp_parse@@Base+0xbe24>
  42f910:	cbnz	w0, 42f92c <wcrtomb@plt+0x2ad0c>
  42f914:	add	x0, sp, #0x50
  42f918:	bl	43f590 <argp_parse@@Base+0xbe50>
  42f91c:	cbz	w20, 42f940 <wcrtomb@plt+0x2ad20>
  42f920:	str	w20, [x19]
  42f924:	ldp	x25, x26, [sp, #64]
  42f928:	b	42f880 <wcrtomb@plt+0x2ac60>
  42f92c:	bl	404ad0 <__errno_location@plt>
  42f930:	ldr	w0, [x0]
  42f934:	bl	439ac8 <argp_parse@@Base+0x6388>
  42f938:	ldp	x25, x26, [sp, #64]
  42f93c:	b	42f880 <wcrtomb@plt+0x2ac60>
  42f940:	ldp	x25, x26, [sp, #64]
  42f944:	b	42f880 <wcrtomb@plt+0x2ac60>
  42f948:	mov	x12, #0x1010                	// #4112
  42f94c:	sub	sp, sp, x12
  42f950:	stp	x29, x30, [sp]
  42f954:	mov	x29, sp
  42f958:	stp	x19, x20, [sp, #16]
  42f95c:	stp	x21, x22, [sp, #32]
  42f960:	stp	x23, x24, [sp, #48]
  42f964:	mov	x20, x1
  42f968:	mov	x23, x2
  42f96c:	mov	x24, x3
  42f970:	cmn	w0, #0x64
  42f974:	b.eq	42fa64 <wcrtomb@plt+0x2ae44>  // b.none
  42f978:	mov	w19, w0
  42f97c:	ldrb	w0, [x1]
  42f980:	cmp	w0, #0x2f
  42f984:	b.eq	42fa64 <wcrtomb@plt+0x2ae44>  // b.none
  42f988:	stp	x25, x26, [sp, #64]
  42f98c:	mov	x2, x1
  42f990:	mov	w1, w19
  42f994:	add	x0, sp, #0x50
  42f998:	bl	4411c8 <_obstack_memory_used@@Base+0x2c>
  42f99c:	mov	x25, x0
  42f9a0:	cbz	x0, 42fa04 <wcrtomb@plt+0x2ade4>
  42f9a4:	mov	x2, x24
  42f9a8:	mov	x1, x23
  42f9ac:	bl	404a20 <llistxattr@plt>
  42f9b0:	mov	x21, x0
  42f9b4:	bl	404ad0 <__errno_location@plt>
  42f9b8:	mov	x22, x0
  42f9bc:	ldr	w26, [x0]
  42f9c0:	add	x0, sp, #0x50
  42f9c4:	cmp	x25, x0
  42f9c8:	b.eq	42f9d4 <wcrtomb@plt+0x2adb4>  // b.none
  42f9cc:	mov	x0, x25
  42f9d0:	bl	4047c0 <free@plt>
  42f9d4:	cmn	x21, #0x1
  42f9d8:	b.ne	42fb30 <wcrtomb@plt+0x2af10>  // b.any
  42f9dc:	cmp	w26, #0x14
  42f9e0:	b.eq	42fa04 <wcrtomb@plt+0x2ade4>  // b.none
  42f9e4:	sub	w0, w26, #0x1
  42f9e8:	cmp	w0, #0x1
  42f9ec:	ccmp	w26, #0xd, #0x4, hi  // hi = pmore
  42f9f0:	b.eq	42fa04 <wcrtomb@plt+0x2ade4>  // b.none
  42f9f4:	cmp	w26, #0x26
  42f9f8:	mov	w0, #0x5f                  	// #95
  42f9fc:	ccmp	w26, w0, #0x4, ne  // ne = any
  42fa00:	b.ne	42fa98 <wcrtomb@plt+0x2ae78>  // b.any
  42fa04:	add	x0, sp, #0x50
  42fa08:	bl	43f50c <argp_parse@@Base+0xbdcc>
  42fa0c:	cbnz	w0, 42faa4 <wcrtomb@plt+0x2ae84>
  42fa10:	tbnz	w19, #31, 42fa20 <wcrtomb@plt+0x2ae00>
  42fa14:	ldr	w0, [sp, #80]
  42fa18:	cmp	w0, w19
  42fa1c:	b.eq	42fab0 <wcrtomb@plt+0x2ae90>  // b.none
  42fa20:	mov	w0, w19
  42fa24:	bl	404060 <fchdir@plt>
  42fa28:	cbnz	w0, 42fad0 <wcrtomb@plt+0x2aeb0>
  42fa2c:	mov	x2, x24
  42fa30:	mov	x1, x23
  42fa34:	mov	x0, x20
  42fa38:	bl	404a20 <llistxattr@plt>
  42fa3c:	mov	x21, x0
  42fa40:	cmn	x0, #0x1
  42fa44:	b.eq	42faf4 <wcrtomb@plt+0x2aed4>  // b.none
  42fa48:	add	x0, sp, #0x50
  42fa4c:	bl	43f564 <argp_parse@@Base+0xbe24>
  42fa50:	cbnz	w0, 42fb24 <wcrtomb@plt+0x2af04>
  42fa54:	add	x0, sp, #0x50
  42fa58:	bl	43f590 <argp_parse@@Base+0xbe50>
  42fa5c:	ldp	x25, x26, [sp, #64]
  42fa60:	b	42fa78 <wcrtomb@plt+0x2ae58>
  42fa64:	mov	x2, x24
  42fa68:	mov	x1, x23
  42fa6c:	mov	x0, x20
  42fa70:	bl	404a20 <llistxattr@plt>
  42fa74:	mov	x21, x0
  42fa78:	mov	x0, x21
  42fa7c:	ldp	x19, x20, [sp, #16]
  42fa80:	ldp	x21, x22, [sp, #32]
  42fa84:	ldp	x23, x24, [sp, #48]
  42fa88:	ldp	x29, x30, [sp]
  42fa8c:	mov	x12, #0x1010                	// #4112
  42fa90:	add	sp, sp, x12
  42fa94:	ret
  42fa98:	str	w26, [x22]
  42fa9c:	ldp	x25, x26, [sp, #64]
  42faa0:	b	42fa78 <wcrtomb@plt+0x2ae58>
  42faa4:	bl	404ad0 <__errno_location@plt>
  42faa8:	ldr	w0, [x0]
  42faac:	bl	439a88 <argp_parse@@Base+0x6348>
  42fab0:	add	x0, sp, #0x50
  42fab4:	bl	43f590 <argp_parse@@Base+0xbe50>
  42fab8:	bl	404ad0 <__errno_location@plt>
  42fabc:	mov	w1, #0x9                   	// #9
  42fac0:	str	w1, [x0]
  42fac4:	mov	x21, #0xffffffffffffffff    	// #-1
  42fac8:	ldp	x25, x26, [sp, #64]
  42facc:	b	42fa78 <wcrtomb@plt+0x2ae58>
  42fad0:	bl	404ad0 <__errno_location@plt>
  42fad4:	mov	x19, x0
  42fad8:	ldr	w20, [x0]
  42fadc:	add	x0, sp, #0x50
  42fae0:	bl	43f590 <argp_parse@@Base+0xbe50>
  42fae4:	str	w20, [x19]
  42fae8:	mov	x21, #0xffffffffffffffff    	// #-1
  42faec:	ldp	x25, x26, [sp, #64]
  42faf0:	b	42fa78 <wcrtomb@plt+0x2ae58>
  42faf4:	bl	404ad0 <__errno_location@plt>
  42faf8:	mov	x19, x0
  42fafc:	ldr	w20, [x0]
  42fb00:	add	x0, sp, #0x50
  42fb04:	bl	43f564 <argp_parse@@Base+0xbe24>
  42fb08:	cbnz	w0, 42fb24 <wcrtomb@plt+0x2af04>
  42fb0c:	add	x0, sp, #0x50
  42fb10:	bl	43f590 <argp_parse@@Base+0xbe50>
  42fb14:	cbz	w20, 42fb38 <wcrtomb@plt+0x2af18>
  42fb18:	str	w20, [x19]
  42fb1c:	ldp	x25, x26, [sp, #64]
  42fb20:	b	42fa78 <wcrtomb@plt+0x2ae58>
  42fb24:	bl	404ad0 <__errno_location@plt>
  42fb28:	ldr	w0, [x0]
  42fb2c:	bl	439ac8 <argp_parse@@Base+0x6388>
  42fb30:	ldp	x25, x26, [sp, #64]
  42fb34:	b	42fa78 <wcrtomb@plt+0x2ae58>
  42fb38:	ldp	x25, x26, [sp, #64]
  42fb3c:	b	42fa78 <wcrtomb@plt+0x2ae58>
  42fb40:	stp	x29, x30, [sp, #-80]!
  42fb44:	mov	x29, sp
  42fb48:	stp	x19, x20, [sp, #16]
  42fb4c:	stp	x21, x22, [sp, #32]
  42fb50:	stp	x23, x24, [sp, #48]
  42fb54:	str	x25, [sp, #64]
  42fb58:	mov	w23, w0
  42fb5c:	mov	x22, x1
  42fb60:	cmp	x2, #0x401
  42fb64:	mov	x19, #0x401                 	// #1025
  42fb68:	csinc	x19, x19, x2, cs  // cs = hs, nlast
  42fb6c:	mov	x24, #0x3fffffffffffffff    	// #4611686018427387903
  42fb70:	mov	x25, #0x7ffffffffffffffe    	// #9223372036854775806
  42fb74:	b	42fbc4 <wcrtomb@plt+0x2afa4>
  42fb78:	bl	404ad0 <__errno_location@plt>
  42fb7c:	ldr	w0, [x0]
  42fb80:	cmp	w0, #0x22
  42fb84:	b.eq	42fbf0 <wcrtomb@plt+0x2afd0>  // b.none
  42fb88:	mov	x0, x20
  42fb8c:	bl	4047c0 <free@plt>
  42fb90:	mov	x20, #0x0                   	// #0
  42fb94:	b	42fb9c <wcrtomb@plt+0x2af7c>
  42fb98:	strb	wzr, [x20, x21]
  42fb9c:	mov	x0, x20
  42fba0:	ldp	x19, x20, [sp, #16]
  42fba4:	ldp	x21, x22, [sp, #32]
  42fba8:	ldp	x23, x24, [sp, #48]
  42fbac:	ldr	x25, [sp, #64]
  42fbb0:	ldp	x29, x30, [sp], #80
  42fbb4:	ret
  42fbb8:	cmp	x19, x25
  42fbbc:	b.hi	42fc10 <wcrtomb@plt+0x2aff0>  // b.pmore
  42fbc0:	mov	x19, #0x7fffffffffffffff    	// #9223372036854775807
  42fbc4:	mov	x0, x19
  42fbc8:	bl	404310 <malloc@plt>
  42fbcc:	mov	x20, x0
  42fbd0:	cbz	x0, 42fb9c <wcrtomb@plt+0x2af7c>
  42fbd4:	mov	x3, x19
  42fbd8:	mov	x2, x0
  42fbdc:	mov	x1, x22
  42fbe0:	mov	w0, w23
  42fbe4:	bl	404c10 <readlinkat@plt>
  42fbe8:	mov	x21, x0
  42fbec:	tbnz	x0, #63, 42fb78 <wcrtomb@plt+0x2af58>
  42fbf0:	cmp	x19, x21
  42fbf4:	b.hi	42fb98 <wcrtomb@plt+0x2af78>  // b.pmore
  42fbf8:	mov	x0, x20
  42fbfc:	bl	4047c0 <free@plt>
  42fc00:	cmp	x19, x24
  42fc04:	b.hi	42fbb8 <wcrtomb@plt+0x2af98>  // b.pmore
  42fc08:	lsl	x19, x19, #1
  42fc0c:	b	42fbc4 <wcrtomb@plt+0x2afa4>
  42fc10:	bl	404ad0 <__errno_location@plt>
  42fc14:	mov	w1, #0xc                   	// #12
  42fc18:	str	w1, [x0]
  42fc1c:	mov	x20, #0x0                   	// #0
  42fc20:	b	42fb9c <wcrtomb@plt+0x2af7c>
  42fc24:	stp	x29, x30, [sp, #-16]!
  42fc28:	mov	x29, sp
  42fc2c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42fc30:	ldr	w0, [x0, #968]
  42fc34:	bl	404020 <exit@plt>
  42fc38:	stp	x29, x30, [sp, #-96]!
  42fc3c:	mov	x29, sp
  42fc40:	stp	x19, x20, [sp, #16]
  42fc44:	stp	x23, x24, [sp, #48]
  42fc48:	stp	x25, x26, [sp, #64]
  42fc4c:	stp	x27, x28, [sp, #80]
  42fc50:	mov	x25, x0
  42fc54:	mov	x24, x1
  42fc58:	mov	x27, x2
  42fc5c:	mov	x23, x3
  42fc60:	bl	403ff0 <strlen@plt>
  42fc64:	ldr	x19, [x24]
  42fc68:	cbz	x19, 42fd28 <wcrtomb@plt+0x2b108>
  42fc6c:	stp	x21, x22, [sp, #32]
  42fc70:	mov	x22, x0
  42fc74:	mov	x21, x27
  42fc78:	mov	w28, #0x0                   	// #0
  42fc7c:	mov	x26, #0xffffffffffffffff    	// #-1
  42fc80:	mov	x20, #0x0                   	// #0
  42fc84:	b	42fca8 <wcrtomb@plt+0x2b088>
  42fc88:	mov	x26, x20
  42fc8c:	ldp	x21, x22, [sp, #32]
  42fc90:	b	42fd0c <wcrtomb@plt+0x2b0ec>
  42fc94:	mov	x26, x20
  42fc98:	add	x20, x20, #0x1
  42fc9c:	ldr	x19, [x24, x20, lsl #3]
  42fca0:	add	x21, x21, x23
  42fca4:	cbz	x19, 42fcfc <wcrtomb@plt+0x2b0dc>
  42fca8:	mov	x2, x22
  42fcac:	mov	x1, x25
  42fcb0:	mov	x0, x19
  42fcb4:	bl	4043c0 <strncmp@plt>
  42fcb8:	cbnz	w0, 42fc98 <wcrtomb@plt+0x2b078>
  42fcbc:	mov	x0, x19
  42fcc0:	bl	403ff0 <strlen@plt>
  42fcc4:	cmp	x0, x22
  42fcc8:	b.eq	42fc88 <wcrtomb@plt+0x2b068>  // b.none
  42fccc:	cmn	x26, #0x1
  42fcd0:	b.eq	42fc94 <wcrtomb@plt+0x2b074>  // b.none
  42fcd4:	cbz	x27, 42fcf4 <wcrtomb@plt+0x2b0d4>
  42fcd8:	mov	x2, x23
  42fcdc:	mov	x1, x21
  42fce0:	madd	x0, x26, x23, x27
  42fce4:	bl	4046e0 <memcmp@plt>
  42fce8:	cmp	w0, #0x0
  42fcec:	csinc	w28, w28, wzr, eq  // eq = none
  42fcf0:	b	42fc98 <wcrtomb@plt+0x2b078>
  42fcf4:	mov	w28, #0x1                   	// #1
  42fcf8:	b	42fc98 <wcrtomb@plt+0x2b078>
  42fcfc:	cmp	w28, #0x0
  42fd00:	mov	x0, #0xfffffffffffffffe    	// #-2
  42fd04:	csel	x26, x26, x0, eq  // eq = none
  42fd08:	ldp	x21, x22, [sp, #32]
  42fd0c:	mov	x0, x26
  42fd10:	ldp	x19, x20, [sp, #16]
  42fd14:	ldp	x23, x24, [sp, #48]
  42fd18:	ldp	x25, x26, [sp, #64]
  42fd1c:	ldp	x27, x28, [sp, #80]
  42fd20:	ldp	x29, x30, [sp], #96
  42fd24:	ret
  42fd28:	mov	x26, #0xffffffffffffffff    	// #-1
  42fd2c:	b	42fd0c <wcrtomb@plt+0x2b0ec>
  42fd30:	stp	x29, x30, [sp, #-48]!
  42fd34:	mov	x29, sp
  42fd38:	stp	x19, x20, [sp, #16]
  42fd3c:	str	x21, [sp, #32]
  42fd40:	mov	x21, x0
  42fd44:	mov	x20, x1
  42fd48:	cmn	x2, #0x1
  42fd4c:	b.eq	42fdb0 <wcrtomb@plt+0x2b190>  // b.none
  42fd50:	mov	w2, #0x5                   	// #5
  42fd54:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42fd58:	add	x1, x1, #0xb60
  42fd5c:	mov	x0, #0x0                   	// #0
  42fd60:	bl	4049c0 <dcgettext@plt>
  42fd64:	mov	x19, x0
  42fd68:	mov	x2, x20
  42fd6c:	mov	w1, #0x8                   	// #8
  42fd70:	mov	w0, #0x0                   	// #0
  42fd74:	bl	43ee68 <argp_parse@@Base+0xb728>
  42fd78:	mov	x20, x0
  42fd7c:	mov	x1, x21
  42fd80:	mov	w0, #0x1                   	// #1
  42fd84:	bl	43f17c <argp_parse@@Base+0xba3c>
  42fd88:	mov	x4, x0
  42fd8c:	mov	x3, x20
  42fd90:	mov	x2, x19
  42fd94:	mov	w1, #0x0                   	// #0
  42fd98:	mov	w0, #0x0                   	// #0
  42fd9c:	bl	404050 <error@plt>
  42fda0:	ldp	x19, x20, [sp, #16]
  42fda4:	ldr	x21, [sp, #32]
  42fda8:	ldp	x29, x30, [sp], #48
  42fdac:	ret
  42fdb0:	mov	w2, #0x5                   	// #5
  42fdb4:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42fdb8:	add	x1, x1, #0xb40
  42fdbc:	mov	x0, #0x0                   	// #0
  42fdc0:	bl	4049c0 <dcgettext@plt>
  42fdc4:	mov	x19, x0
  42fdc8:	b	42fd68 <wcrtomb@plt+0x2b148>
  42fdcc:	stp	x29, x30, [sp, #-96]!
  42fdd0:	mov	x29, sp
  42fdd4:	stp	x19, x20, [sp, #16]
  42fdd8:	stp	x21, x22, [sp, #32]
  42fddc:	stp	x23, x24, [sp, #48]
  42fde0:	mov	x24, x0
  42fde4:	mov	x20, x1
  42fde8:	mov	x22, x2
  42fdec:	mov	w2, #0x5                   	// #5
  42fdf0:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42fdf4:	add	x1, x1, #0xb80
  42fdf8:	mov	x0, #0x0                   	// #0
  42fdfc:	bl	4049c0 <dcgettext@plt>
  42fe00:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42fe04:	ldr	x1, [x1, #1096]
  42fe08:	bl	4049e0 <fputs_unlocked@plt>
  42fe0c:	ldr	x21, [x24]
  42fe10:	cbz	x21, 42feb4 <wcrtomb@plt+0x2b294>
  42fe14:	stp	x25, x26, [sp, #64]
  42fe18:	stp	x27, x28, [sp, #80]
  42fe1c:	mov	x23, #0x0                   	// #0
  42fe20:	mov	x19, #0x0                   	// #0
  42fe24:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42fe28:	adrp	x26, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42fe2c:	add	x26, x26, #0xb98
  42fe30:	adrp	x27, 45a000 <_obstack_memory_used@@Base+0x18e64>
  42fe34:	add	x27, x27, #0xba0
  42fe38:	b	42fe70 <wcrtomb@plt+0x2b250>
  42fe3c:	ldr	x23, [x25, #1096]
  42fe40:	mov	x0, x21
  42fe44:	bl	43f194 <argp_parse@@Base+0xba54>
  42fe48:	mov	x3, x0
  42fe4c:	mov	x2, x26
  42fe50:	mov	w1, #0x1                   	// #1
  42fe54:	mov	x0, x23
  42fe58:	bl	404710 <__fprintf_chk@plt>
  42fe5c:	mov	x23, x20
  42fe60:	add	x19, x19, #0x1
  42fe64:	ldr	x21, [x24, x19, lsl #3]
  42fe68:	add	x20, x20, x22
  42fe6c:	cbz	x21, 42feac <wcrtomb@plt+0x2b28c>
  42fe70:	cbz	x19, 42fe3c <wcrtomb@plt+0x2b21c>
  42fe74:	mov	x2, x22
  42fe78:	mov	x1, x20
  42fe7c:	mov	x0, x23
  42fe80:	bl	4046e0 <memcmp@plt>
  42fe84:	cbnz	w0, 42fe3c <wcrtomb@plt+0x2b21c>
  42fe88:	ldr	x28, [x25, #1096]
  42fe8c:	mov	x0, x21
  42fe90:	bl	43f194 <argp_parse@@Base+0xba54>
  42fe94:	mov	x3, x0
  42fe98:	mov	x2, x27
  42fe9c:	mov	w1, #0x1                   	// #1
  42fea0:	mov	x0, x28
  42fea4:	bl	404710 <__fprintf_chk@plt>
  42fea8:	b	42fe60 <wcrtomb@plt+0x2b240>
  42feac:	ldp	x25, x26, [sp, #64]
  42feb0:	ldp	x27, x28, [sp, #80]
  42feb4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  42feb8:	ldr	x0, [x0, #1096]
  42febc:	ldr	x1, [x0, #40]
  42fec0:	ldr	x2, [x0, #48]
  42fec4:	cmp	x1, x2
  42fec8:	b.cs	42fef0 <wcrtomb@plt+0x2b2d0>  // b.hs, b.nlast
  42fecc:	add	x2, x1, #0x1
  42fed0:	str	x2, [x0, #40]
  42fed4:	mov	w0, #0xa                   	// #10
  42fed8:	strb	w0, [x1]
  42fedc:	ldp	x19, x20, [sp, #16]
  42fee0:	ldp	x21, x22, [sp, #32]
  42fee4:	ldp	x23, x24, [sp, #48]
  42fee8:	ldp	x29, x30, [sp], #96
  42feec:	ret
  42fef0:	mov	w1, #0xa                   	// #10
  42fef4:	bl	404690 <__overflow@plt>
  42fef8:	b	42fedc <wcrtomb@plt+0x2b2bc>
  42fefc:	stp	x29, x30, [sp, #-64]!
  42ff00:	mov	x29, sp
  42ff04:	stp	x19, x20, [sp, #16]
  42ff08:	stp	x21, x22, [sp, #32]
  42ff0c:	stp	x23, x24, [sp, #48]
  42ff10:	mov	x23, x0
  42ff14:	mov	x22, x1
  42ff18:	mov	x19, x2
  42ff1c:	mov	x20, x3
  42ff20:	mov	x21, x4
  42ff24:	mov	x24, x5
  42ff28:	mov	x3, x4
  42ff2c:	mov	x2, x20
  42ff30:	mov	x1, x19
  42ff34:	mov	x0, x22
  42ff38:	bl	42fc38 <wcrtomb@plt+0x2b018>
  42ff3c:	tbnz	x0, #63, 42ff54 <wcrtomb@plt+0x2b334>
  42ff40:	ldp	x19, x20, [sp, #16]
  42ff44:	ldp	x21, x22, [sp, #32]
  42ff48:	ldp	x23, x24, [sp, #48]
  42ff4c:	ldp	x29, x30, [sp], #64
  42ff50:	ret
  42ff54:	mov	x2, x0
  42ff58:	mov	x1, x22
  42ff5c:	mov	x0, x23
  42ff60:	bl	42fd30 <wcrtomb@plt+0x2b110>
  42ff64:	mov	x2, x21
  42ff68:	mov	x1, x20
  42ff6c:	mov	x0, x19
  42ff70:	bl	42fdcc <wcrtomb@plt+0x2b1ac>
  42ff74:	blr	x24
  42ff78:	mov	x0, #0xffffffffffffffff    	// #-1
  42ff7c:	b	42ff40 <wcrtomb@plt+0x2b320>
  42ff80:	stp	x29, x30, [sp, #-64]!
  42ff84:	mov	x29, sp
  42ff88:	stp	x21, x22, [sp, #32]
  42ff8c:	ldr	x22, [x1]
  42ff90:	cbz	x22, 42ffe0 <wcrtomb@plt+0x2b3c0>
  42ff94:	stp	x19, x20, [sp, #16]
  42ff98:	str	x23, [sp, #48]
  42ff9c:	mov	x23, x0
  42ffa0:	mov	x21, x3
  42ffa4:	mov	x19, x2
  42ffa8:	add	x20, x1, #0x8
  42ffac:	mov	x2, x21
  42ffb0:	mov	x1, x19
  42ffb4:	mov	x0, x23
  42ffb8:	bl	4046e0 <memcmp@plt>
  42ffbc:	cbz	w0, 42ffd8 <wcrtomb@plt+0x2b3b8>
  42ffc0:	ldr	x22, [x20], #8
  42ffc4:	add	x19, x19, x21
  42ffc8:	cbnz	x22, 42ffac <wcrtomb@plt+0x2b38c>
  42ffcc:	ldp	x19, x20, [sp, #16]
  42ffd0:	ldr	x23, [sp, #48]
  42ffd4:	b	42ffe0 <wcrtomb@plt+0x2b3c0>
  42ffd8:	ldp	x19, x20, [sp, #16]
  42ffdc:	ldr	x23, [sp, #48]
  42ffe0:	mov	x0, x22
  42ffe4:	ldp	x21, x22, [sp, #32]
  42ffe8:	ldp	x29, x30, [sp], #64
  42ffec:	ret
  42fff0:	ldr	x1, [x0]
  42fff4:	ldr	w0, [x0, #8]
  42fff8:	cbz	w0, 430038 <wcrtomb@plt+0x2b418>
  42fffc:	sub	w0, w0, #0x1
  430000:	add	x2, x0, #0x1
  430004:	add	x2, x2, x2, lsl #1
  430008:	add	x2, x1, x2, lsl #4
  43000c:	b	43001c <wcrtomb@plt+0x2b3fc>
  430010:	add	x1, x1, #0x30
  430014:	cmp	x1, x2
  430018:	b.eq	430030 <wcrtomb@plt+0x2b410>  // b.none
  43001c:	ldr	x0, [x1]
  430020:	cbz	x0, 430010 <wcrtomb@plt+0x2b3f0>
  430024:	ldr	w3, [x1, #24]
  430028:	tbnz	w3, #1, 430010 <wcrtomb@plt+0x2b3f0>
  43002c:	b	430034 <wcrtomb@plt+0x2b414>
  430030:	mov	x0, #0x0                   	// #0
  430034:	ret
  430038:	mov	x0, #0x0                   	// #0
  43003c:	b	430034 <wcrtomb@plt+0x2b414>
  430040:	cmp	w0, w1
  430044:	b.eq	430064 <wcrtomb@plt+0x2b444>  // b.none
  430048:	mvn	w3, w1
  43004c:	lsr	w3, w3, #31
  430050:	sub	w2, w0, w1
  430054:	sub	w1, w1, w0
  430058:	cmp	w3, w0, lsr #31
  43005c:	csel	w0, w1, w2, eq  // eq = none
  430060:	ret
  430064:	mov	w0, w2
  430068:	b	430060 <wcrtomb@plt+0x2b440>
  43006c:	ldr	x2, [x0, #16]
  430070:	cbz	x2, 43007c <wcrtomb@plt+0x2b45c>
  430074:	mov	w0, #0x0                   	// #0
  430078:	ret
  43007c:	ldr	x2, [x1, #16]
  430080:	cbnz	x2, 430074 <wcrtomb@plt+0x2b454>
  430084:	ldr	w2, [x0, #24]
  430088:	ldr	w1, [x1, #24]
  43008c:	orr	w1, w2, w1
  430090:	tbnz	w1, #4, 430074 <wcrtomb@plt+0x2b454>
  430094:	ldr	w1, [x0, #8]
  430098:	ldr	x0, [x3]
  43009c:	add	x2, x0, #0x1
  4300a0:	str	x2, [x3]
  4300a4:	strb	w1, [x0]
  4300a8:	b	430074 <wcrtomb@plt+0x2b454>
  4300ac:	stp	x29, x30, [sp, #-48]!
  4300b0:	mov	x29, sp
  4300b4:	str	x21, [sp, #32]
  4300b8:	mov	x5, x0
  4300bc:	mov	x21, x1
  4300c0:	ldr	x1, [x0, #16]
  4300c4:	cbz	x1, 4300fc <wcrtomb@plt+0x2b4dc>
  4300c8:	stp	x19, x20, [sp, #16]
  4300cc:	mov	x20, x2
  4300d0:	mov	x0, x3
  4300d4:	mov	x19, x4
  4300d8:	ldr	w2, [x5, #24]
  4300dc:	tbz	w2, #0, 430108 <wcrtomb@plt+0x2b4e8>
  4300e0:	mov	w2, #0x5                   	// #5
  4300e4:	bl	4049c0 <dcgettext@plt>
  4300e8:	mov	x2, x0
  4300ec:	mov	x1, x20
  4300f0:	mov	x0, x19
  4300f4:	bl	44e96c <_obstack_memory_used@@Base+0xd7d0>
  4300f8:	ldp	x19, x20, [sp, #16]
  4300fc:	ldr	x21, [sp, #32]
  430100:	ldp	x29, x30, [sp], #48
  430104:	ret
  430108:	mov	w2, #0x5                   	// #5
  43010c:	bl	4049c0 <dcgettext@plt>
  430110:	mov	x2, x0
  430114:	mov	x1, x21
  430118:	mov	x0, x19
  43011c:	bl	44e96c <_obstack_memory_used@@Base+0xd7d0>
  430120:	ldp	x19, x20, [sp, #16]
  430124:	b	4300fc <wcrtomb@plt+0x2b4dc>
  430128:	stp	x29, x30, [sp, #-32]!
  43012c:	mov	x29, sp
  430130:	str	x19, [sp, #16]
  430134:	mov	x19, x0
  430138:	bl	404750 <__ctype_b_loc@plt>
  43013c:	mov	x3, x0
  430140:	ldr	x1, [x19]
  430144:	ldrb	w2, [x1]
  430148:	and	x4, x2, #0xff
  43014c:	ldr	x0, [x3]
  430150:	ldrh	w0, [x0, x4, lsl #1]
  430154:	tbz	w0, #13, 430164 <wcrtomb@plt+0x2b544>
  430158:	add	x1, x1, #0x1
  43015c:	str	x1, [x19]
  430160:	b	430140 <wcrtomb@plt+0x2b520>
  430164:	cmp	w2, #0x2d
  430168:	cset	w0, ne  // ne = any
  43016c:	cbz	w2, 430190 <wcrtomb@plt+0x2b570>
  430170:	add	x1, x1, #0x1
  430174:	and	x2, x2, #0xff
  430178:	ldr	x4, [x3]
  43017c:	ldrh	w2, [x4, x2, lsl #1]
  430180:	tbnz	w2, #3, 430190 <wcrtomb@plt+0x2b570>
  430184:	str	x1, [x19]
  430188:	ldrb	w2, [x1], #1
  43018c:	cbnz	w2, 430174 <wcrtomb@plt+0x2b554>
  430190:	ldr	x19, [sp, #16]
  430194:	ldp	x29, x30, [sp], #32
  430198:	ret
  43019c:	stp	x29, x30, [sp, #-32]!
  4301a0:	mov	x29, sp
  4301a4:	stp	x19, x20, [sp, #16]
  4301a8:	mov	x20, x0
  4301ac:	ldr	x19, [x0, #24]
  4301b0:	cbz	x19, 4301c4 <wcrtomb@plt+0x2b5a4>
  4301b4:	mov	x0, x19
  4301b8:	ldr	x19, [x19, #40]
  4301bc:	bl	4047c0 <free@plt>
  4301c0:	cbnz	x19, 4301b4 <wcrtomb@plt+0x2b594>
  4301c4:	ldr	w0, [x20, #8]
  4301c8:	cbnz	w0, 4301e0 <wcrtomb@plt+0x2b5c0>
  4301cc:	mov	x0, x20
  4301d0:	bl	4047c0 <free@plt>
  4301d4:	ldp	x19, x20, [sp, #16]
  4301d8:	ldp	x29, x30, [sp], #32
  4301dc:	ret
  4301e0:	ldr	x0, [x20]
  4301e4:	bl	4047c0 <free@plt>
  4301e8:	ldr	x0, [x20, #16]
  4301ec:	bl	4047c0 <free@plt>
  4301f0:	b	4301cc <wcrtomb@plt+0x2b5ac>
  4301f4:	stp	x29, x30, [sp, #-64]!
  4301f8:	mov	x29, sp
  4301fc:	stp	x21, x22, [sp, #32]
  430200:	mov	x21, x1
  430204:	ldr	x22, [x0]
  430208:	ldr	w1, [x0, #8]
  43020c:	cbz	w1, 4302b4 <wcrtomb@plt+0x2b694>
  430210:	stp	x19, x20, [sp, #16]
  430214:	str	x23, [sp, #48]
  430218:	sub	w0, w1, #0x1
  43021c:	mov	w0, w0
  430220:	add	x0, x0, #0x1
  430224:	lsl	x23, x0, #3
  430228:	sub	x0, x23, x0
  43022c:	add	x23, x22, x0, lsl #3
  430230:	b	430280 <wcrtomb@plt+0x2b660>
  430234:	add	x19, x19, #0x30
  430238:	cmp	x19, x20
  43023c:	b.eq	430274 <wcrtomb@plt+0x2b654>  // b.none
  430240:	ldr	x0, [x19]
  430244:	cbz	x0, 430234 <wcrtomb@plt+0x2b614>
  430248:	ldr	w1, [x19, #24]
  43024c:	tbnz	w1, #1, 430234 <wcrtomb@plt+0x2b614>
  430250:	mov	x1, x21
  430254:	bl	404720 <strcmp@plt>
  430258:	cbnz	w0, 430234 <wcrtomb@plt+0x2b614>
  43025c:	ldp	x19, x20, [sp, #16]
  430260:	ldr	x23, [sp, #48]
  430264:	mov	x0, x22
  430268:	ldp	x21, x22, [sp, #32]
  43026c:	ldp	x29, x30, [sp], #64
  430270:	ret
  430274:	add	x22, x22, #0x38
  430278:	cmp	x22, x23
  43027c:	b.eq	4302a4 <wcrtomb@plt+0x2b684>  // b.none
  430280:	ldr	x19, [x22]
  430284:	ldr	w0, [x22, #8]
  430288:	sub	w20, w0, #0x1
  43028c:	cbz	w0, 430274 <wcrtomb@plt+0x2b654>
  430290:	mov	w20, w20
  430294:	add	x20, x20, #0x1
  430298:	add	x20, x20, x20, lsl #1
  43029c:	add	x20, x19, x20, lsl #4
  4302a0:	b	430240 <wcrtomb@plt+0x2b620>
  4302a4:	mov	x22, #0x0                   	// #0
  4302a8:	ldp	x19, x20, [sp, #16]
  4302ac:	ldr	x23, [sp, #48]
  4302b0:	b	430264 <wcrtomb@plt+0x2b644>
  4302b4:	mov	x22, #0x0                   	// #0
  4302b8:	b	430264 <wcrtomb@plt+0x2b644>
  4302bc:	stp	x29, x30, [sp, #-32]!
  4302c0:	mov	x29, sp
  4302c4:	stp	x19, x20, [sp, #16]
  4302c8:	ldr	x20, [x0, #32]
  4302cc:	ldr	x0, [x0, #16]
  4302d0:	mov	x19, #0x0                   	// #0
  4302d4:	cbz	x0, 4302e8 <wcrtomb@plt+0x2b6c8>
  4302d8:	mov	w1, #0xa                   	// #10
  4302dc:	bl	404870 <strchr@plt>
  4302e0:	cmp	x0, #0x0
  4302e4:	cset	x19, ne  // ne = any
  4302e8:	cbz	x20, 430304 <wcrtomb@plt+0x2b6e4>
  4302ec:	ldr	x0, [x20]
  4302f0:	cbz	x0, 430304 <wcrtomb@plt+0x2b6e4>
  4302f4:	bl	4302bc <wcrtomb@plt+0x2b69c>
  4302f8:	add	x19, x19, x0
  4302fc:	ldr	x0, [x20, #32]!
  430300:	cbnz	x0, 4302f4 <wcrtomb@plt+0x2b6d4>
  430304:	mov	x0, x19
  430308:	ldp	x19, x20, [sp, #16]
  43030c:	ldp	x29, x30, [sp], #32
  430310:	ret
  430314:	stp	x29, x30, [sp, #-48]!
  430318:	mov	x29, sp
  43031c:	stp	x19, x20, [sp, #16]
  430320:	mov	x19, x0
  430324:	cbz	x2, 430364 <wcrtomb@plt+0x2b744>
  430328:	str	x21, [sp, #32]
  43032c:	mov	w21, w1
  430330:	mov	x20, x2
  430334:	ldr	x0, [x2, #40]
  430338:	cbz	x0, 430374 <wcrtomb@plt+0x2b754>
  43033c:	mov	x1, x3
  430340:	mov	x0, x2
  430344:	bl	43418c <argp_parse@@Base+0xa4c>
  430348:	ldr	x3, [x20, #40]
  43034c:	mov	x2, x0
  430350:	mov	x1, x19
  430354:	mov	w0, w21
  430358:	blr	x3
  43035c:	mov	x19, x0
  430360:	ldr	x21, [sp, #32]
  430364:	mov	x0, x19
  430368:	ldp	x19, x20, [sp, #16]
  43036c:	ldp	x29, x30, [sp], #48
  430370:	ret
  430374:	ldr	x21, [sp, #32]
  430378:	b	430364 <wcrtomb@plt+0x2b744>
  43037c:	stp	x29, x30, [sp, #-112]!
  430380:	mov	x29, sp
  430384:	stp	x19, x20, [sp, #16]
  430388:	stp	x21, x22, [sp, #32]
  43038c:	stp	x23, x24, [sp, #48]
  430390:	str	x2, [sp, #104]
  430394:	ldr	x19, [x0]
  430398:	ldr	x24, [x0, #16]
  43039c:	ldr	w21, [x0, #8]
  4303a0:	cbz	w21, 430458 <wcrtomb@plt+0x2b838>
  4303a4:	stp	x25, x26, [sp, #64]
  4303a8:	stp	x27, x28, [sp, #80]
  4303ac:	mov	x27, x1
  4303b0:	mov	x28, x3
  4303b4:	mov	x26, x19
  4303b8:	mov	w25, #0x0                   	// #0
  4303bc:	b	4303d4 <wcrtomb@plt+0x2b7b4>
  4303c0:	mov	w22, w25
  4303c4:	add	x19, x19, #0x30
  4303c8:	subs	w21, w21, #0x1
  4303cc:	ccmp	w22, #0x0, #0x0, ne  // ne = any
  4303d0:	b.ne	430438 <wcrtomb@plt+0x2b818>  // b.any
  4303d4:	ldr	w20, [x19, #24]
  4303d8:	and	w22, w20, #0x8
  4303dc:	tbnz	w20, #3, 4303c0 <wcrtomb@plt+0x2b7a0>
  4303e0:	ldr	w23, [x19, #8]
  4303e4:	sub	w0, w23, #0x1
  4303e8:	cmp	w0, #0xfe
  4303ec:	b.hi	4303c4 <wcrtomb@plt+0x2b7a4>  // b.pmore
  4303f0:	bl	404750 <__ctype_b_loc@plt>
  4303f4:	ldr	x0, [x0]
  4303f8:	ldrh	w0, [x0, w23, sxtw #1]
  4303fc:	tbz	w0, #14, 4303c4 <wcrtomb@plt+0x2b7a4>
  430400:	ldrb	w0, [x24]
  430404:	cmp	w0, w23
  430408:	b.ne	4303c4 <wcrtomb@plt+0x2b7a4>  // b.any
  43040c:	tst	x20, #0x4
  430410:	csel	x26, x26, x19, ne  // ne = any
  430414:	tbnz	w20, #1, 430430 <wcrtomb@plt+0x2b810>
  430418:	mov	x3, x28
  43041c:	ldr	x2, [sp, #104]
  430420:	mov	x1, x26
  430424:	mov	x0, x19
  430428:	blr	x27
  43042c:	mov	w22, w0
  430430:	add	x24, x24, #0x1
  430434:	b	4303c4 <wcrtomb@plt+0x2b7a4>
  430438:	ldp	x25, x26, [sp, #64]
  43043c:	ldp	x27, x28, [sp, #80]
  430440:	mov	w0, w22
  430444:	ldp	x19, x20, [sp, #16]
  430448:	ldp	x21, x22, [sp, #32]
  43044c:	ldp	x23, x24, [sp, #48]
  430450:	ldp	x29, x30, [sp], #112
  430454:	ret
  430458:	mov	w22, #0x0                   	// #0
  43045c:	b	430440 <wcrtomb@plt+0x2b820>
  430460:	stp	x29, x30, [sp, #-128]!
  430464:	mov	x29, sp
  430468:	stp	x19, x20, [sp, #16]
  43046c:	stp	x21, x22, [sp, #32]
  430470:	stp	x23, x24, [sp, #48]
  430474:	stp	x25, x26, [sp, #64]
  430478:	stp	x27, x28, [sp, #80]
  43047c:	ldr	w21, [x0, #8]
  430480:	cbz	w21, 43066c <wcrtomb@plt+0x2ba4c>
  430484:	mov	x20, x0
  430488:	mov	x24, x1
  43048c:	ldr	x0, [x0, #16]
  430490:	bl	403ff0 <strlen@plt>
  430494:	add	x0, x0, #0x10
  430498:	and	x0, x0, #0xfffffffffffffff0
  43049c:	sub	sp, sp, x0
  4304a0:	mov	x23, sp
  4304a4:	str	x23, [x29, #120]
  4304a8:	ldr	x19, [x20]
  4304ac:	sub	w21, w21, #0x1
  4304b0:	add	x0, x21, #0x1
  4304b4:	lsl	x21, x0, #3
  4304b8:	sub	x21, x21, x0
  4304bc:	add	x21, x19, x21, lsl #3
  4304c0:	adrp	x22, 430000 <wcrtomb@plt+0x2b3e0>
  4304c4:	add	x22, x22, #0x6c
  4304c8:	ldr	x1, [x19, #40]
  4304cc:	add	x3, x29, #0x78
  4304d0:	ldr	x2, [x1, #48]
  4304d4:	mov	x1, x22
  4304d8:	mov	x0, x19
  4304dc:	bl	43037c <wcrtomb@plt+0x2b75c>
  4304e0:	add	x19, x19, #0x38
  4304e4:	cmp	x19, x21
  4304e8:	b.ne	4304c8 <wcrtomb@plt+0x2b8a8>  // b.any
  4304ec:	ldr	x0, [x29, #120]
  4304f0:	cmp	x0, x23
  4304f4:	b.hi	43057c <wcrtomb@plt+0x2b95c>  // b.pmore
  4304f8:	ldr	x19, [x20]
  4304fc:	ldr	w0, [x20, #8]
  430500:	cbz	w0, 43066c <wcrtomb@plt+0x2ba4c>
  430504:	sub	w0, w0, #0x1
  430508:	add	x0, x0, #0x1
  43050c:	lsl	x21, x0, #3
  430510:	sub	x21, x21, x0
  430514:	add	x21, x19, x21, lsl #3
  430518:	adrp	x22, 430000 <wcrtomb@plt+0x2b3e0>
  43051c:	add	x22, x22, #0x864
  430520:	ldr	x1, [x19, #40]
  430524:	mov	x3, x24
  430528:	ldr	x2, [x1, #48]
  43052c:	mov	x1, x22
  430530:	mov	x0, x19
  430534:	bl	43037c <wcrtomb@plt+0x2b75c>
  430538:	add	x19, x19, #0x38
  43053c:	cmp	x21, x19
  430540:	b.ne	430520 <wcrtomb@plt+0x2b900>  // b.any
  430544:	ldr	x23, [x20]
  430548:	ldr	w0, [x20, #8]
  43054c:	cbz	w0, 43066c <wcrtomb@plt+0x2ba4c>
  430550:	sub	w0, w0, #0x1
  430554:	add	x0, x0, #0x1
  430558:	lsl	x27, x0, #3
  43055c:	sub	x0, x27, x0
  430560:	add	x27, x23, x0, lsl #3
  430564:	adrp	x28, 45a000 <_obstack_memory_used@@Base+0x18e64>
  430568:	add	x28, x28, #0xbb0
  43056c:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  430570:	add	x0, x0, #0xbc0
  430574:	str	x0, [x29, #104]
  430578:	b	43063c <wcrtomb@plt+0x2ba1c>
  43057c:	add	x1, x0, #0x1
  430580:	str	x1, [x29, #120]
  430584:	strb	wzr, [x0]
  430588:	mov	x2, x23
  43058c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  430590:	add	x1, x1, #0xba8
  430594:	mov	x0, x24
  430598:	bl	44e96c <_obstack_memory_used@@Base+0xd7d0>
  43059c:	b	4304f8 <wcrtomb@plt+0x2b8d8>
  4305a0:	tbnz	w20, #4, 4305d0 <wcrtomb@plt+0x2b9b0>
  4305a4:	ldr	x1, [x22, #16]
  4305a8:	cbnz	x1, 430608 <wcrtomb@plt+0x2b9e8>
  4305ac:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  4305b0:	add	x1, x1, #0xbd0
  4305b4:	mov	x0, x24
  4305b8:	bl	44e96c <_obstack_memory_used@@Base+0xd7d0>
  4305bc:	b	4305d0 <wcrtomb@plt+0x2b9b0>
  4305c0:	ldr	x2, [x19]
  4305c4:	ldr	x1, [x29, #104]
  4305c8:	mov	x0, x24
  4305cc:	bl	44e96c <_obstack_memory_used@@Base+0xd7d0>
  4305d0:	add	x19, x19, #0x30
  4305d4:	cmp	x21, x19
  4305d8:	b.eq	430630 <wcrtomb@plt+0x2ba10>  // b.none
  4305dc:	ldr	x2, [x19]
  4305e0:	cbz	x2, 4305d0 <wcrtomb@plt+0x2b9b0>
  4305e4:	ldr	w20, [x19, #24]
  4305e8:	tst	x20, #0x4
  4305ec:	csel	x22, x22, x19, ne  // ne = any
  4305f0:	tbnz	w20, #1, 4305d0 <wcrtomb@plt+0x2b9b0>
  4305f4:	ldr	x1, [x19, #16]
  4305f8:	ldr	w0, [x22, #24]
  4305fc:	orr	w20, w20, w0
  430600:	cbz	x1, 4305a0 <wcrtomb@plt+0x2b980>
  430604:	tbnz	w20, #4, 4305d0 <wcrtomb@plt+0x2b9b0>
  430608:	mov	w2, w26
  43060c:	mov	x0, x25
  430610:	bl	4049c0 <dcgettext@plt>
  430614:	mov	x3, x0
  430618:	tbz	w20, #0, 4305c0 <wcrtomb@plt+0x2b9a0>
  43061c:	ldr	x2, [x19]
  430620:	mov	x1, x28
  430624:	mov	x0, x24
  430628:	bl	44e96c <_obstack_memory_used@@Base+0xd7d0>
  43062c:	b	4305d0 <wcrtomb@plt+0x2b9b0>
  430630:	add	x23, x23, #0x38
  430634:	cmp	x23, x27
  430638:	b.eq	43066c <wcrtomb@plt+0x2ba4c>  // b.none
  43063c:	ldr	x0, [x23, #40]
  430640:	ldr	x25, [x0, #48]
  430644:	ldr	x19, [x23]
  430648:	ldr	w0, [x23, #8]
  43064c:	cbz	w0, 430630 <wcrtomb@plt+0x2ba10>
  430650:	sub	w0, w0, #0x1
  430654:	add	x21, x0, #0x1
  430658:	add	x21, x21, x21, lsl #1
  43065c:	add	x21, x19, x21, lsl #4
  430660:	mov	x22, x19
  430664:	mov	w26, #0x5                   	// #5
  430668:	b	4305dc <wcrtomb@plt+0x2b9bc>
  43066c:	mov	sp, x29
  430670:	ldp	x19, x20, [sp, #16]
  430674:	ldp	x21, x22, [sp, #32]
  430678:	ldp	x23, x24, [sp, #48]
  43067c:	ldp	x25, x26, [sp, #64]
  430680:	ldp	x27, x28, [sp, #80]
  430684:	ldp	x29, x30, [sp], #128
  430688:	ret
  43068c:	stp	x29, x30, [sp, #-48]!
  430690:	mov	x29, sp
  430694:	stp	x19, x20, [sp, #16]
  430698:	mov	x19, x0
  43069c:	mov	w20, w1
  4306a0:	ldr	x0, [x0, #56]
  4306a4:	ldr	x1, [x19, #48]
  4306a8:	sub	x0, x0, x1
  4306ac:	ldr	x1, [x19, #32]
  4306b0:	cmp	x0, x1
  4306b4:	b.hi	4306e4 <wcrtomb@plt+0x2bac4>  // b.pmore
  4306b8:	ldr	x0, [x19, #40]
  4306bc:	cmp	x0, #0x0
  4306c0:	csel	x0, x0, xzr, ge  // ge = tcont
  4306c4:	sub	w0, w20, w0
  4306c8:	sub	w20, w0, #0x1
  4306cc:	cmp	w0, #0x0
  4306d0:	b.le	430734 <wcrtomb@plt+0x2bb14>
  4306d4:	stp	x21, x22, [sp, #32]
  4306d8:	mov	w21, #0x20                  	// #32
  4306dc:	mov	x22, #0x1                   	// #1
  4306e0:	b	43070c <wcrtomb@plt+0x2baec>
  4306e4:	mov	x0, x19
  4306e8:	bl	44e32c <_obstack_memory_used@@Base+0xd190>
  4306ec:	b	4306b8 <wcrtomb@plt+0x2ba98>
  4306f0:	ldr	x0, [x19, #56]
  4306f4:	add	x1, x0, #0x1
  4306f8:	str	x1, [x19, #56]
  4306fc:	strb	w21, [x0]
  430700:	sub	w20, w20, #0x1
  430704:	cmn	w20, #0x1
  430708:	b.eq	430730 <wcrtomb@plt+0x2bb10>  // b.none
  43070c:	ldr	x1, [x19, #56]
  430710:	ldr	x0, [x19, #64]
  430714:	cmp	x1, x0
  430718:	b.cc	4306f0 <wcrtomb@plt+0x2bad0>  // b.lo, b.ul, b.last
  43071c:	mov	x1, x22
  430720:	mov	x0, x19
  430724:	bl	44e874 <_obstack_memory_used@@Base+0xd6d8>
  430728:	cbnz	w0, 4306f0 <wcrtomb@plt+0x2bad0>
  43072c:	b	430700 <wcrtomb@plt+0x2bae0>
  430730:	ldp	x21, x22, [sp, #32]
  430734:	ldp	x19, x20, [sp, #16]
  430738:	ldp	x29, x30, [sp], #48
  43073c:	ret
  430740:	stp	x29, x30, [sp, #-32]!
  430744:	mov	x29, sp
  430748:	stp	x19, x20, [sp, #16]
  43074c:	ldr	w1, [x0, #24]
  430750:	mov	w19, #0x0                   	// #0
  430754:	tbnz	w1, #3, 430780 <wcrtomb@plt+0x2bb60>
  430758:	and	w19, w1, #0x8
  43075c:	ldr	w20, [x0, #8]
  430760:	sub	w0, w20, #0x1
  430764:	cmp	w0, #0xfe
  430768:	b.hi	430780 <wcrtomb@plt+0x2bb60>  // b.pmore
  43076c:	bl	404750 <__ctype_b_loc@plt>
  430770:	ldr	x0, [x0]
  430774:	ldrh	w0, [x0, w20, sxtw #1]
  430778:	tst	x0, #0x4000
  43077c:	csel	w19, w19, w20, eq  // eq = none
  430780:	mov	w0, w19
  430784:	ldp	x19, x20, [sp, #16]
  430788:	ldp	x29, x30, [sp], #32
  43078c:	ret
  430790:	stp	x29, x30, [sp, #-32]!
  430794:	mov	x29, sp
  430798:	stp	x19, x20, [sp, #16]
  43079c:	mov	x19, x0
  4307a0:	mov	x20, x1
  4307a4:	ldr	x0, [x0, #56]
  4307a8:	ldr	x1, [x19, #48]
  4307ac:	sub	x0, x0, x1
  4307b0:	ldr	x1, [x19, #32]
  4307b4:	cmp	x0, x1
  4307b8:	b.hi	430808 <wcrtomb@plt+0x2bbe8>  // b.pmore
  4307bc:	ldr	x0, [x19, #40]
  4307c0:	cmp	x0, #0x0
  4307c4:	csel	x0, x0, xzr, ge  // ge = tcont
  4307c8:	add	x0, x0, x20
  4307cc:	ldr	x1, [x19, #16]
  4307d0:	cmp	x0, x1
  4307d4:	b.cc	430828 <wcrtomb@plt+0x2bc08>  // b.lo, b.ul, b.last
  4307d8:	ldr	x1, [x19, #56]
  4307dc:	ldr	x0, [x19, #64]
  4307e0:	cmp	x1, x0
  4307e4:	b.cs	430814 <wcrtomb@plt+0x2bbf4>  // b.hs, b.nlast
  4307e8:	ldr	x0, [x19, #56]
  4307ec:	add	x1, x0, #0x1
  4307f0:	str	x1, [x19, #56]
  4307f4:	mov	w1, #0xa                   	// #10
  4307f8:	strb	w1, [x0]
  4307fc:	ldp	x19, x20, [sp, #16]
  430800:	ldp	x29, x30, [sp], #32
  430804:	ret
  430808:	mov	x0, x19
  43080c:	bl	44e32c <_obstack_memory_used@@Base+0xd190>
  430810:	b	4307bc <wcrtomb@plt+0x2bb9c>
  430814:	mov	x1, #0x1                   	// #1
  430818:	mov	x0, x19
  43081c:	bl	44e874 <_obstack_memory_used@@Base+0xd6d8>
  430820:	cbnz	w0, 4307e8 <wcrtomb@plt+0x2bbc8>
  430824:	b	4307fc <wcrtomb@plt+0x2bbdc>
  430828:	ldr	x1, [x19, #56]
  43082c:	ldr	x0, [x19, #64]
  430830:	cmp	x1, x0
  430834:	b.cs	430850 <wcrtomb@plt+0x2bc30>  // b.hs, b.nlast
  430838:	ldr	x0, [x19, #56]
  43083c:	add	x1, x0, #0x1
  430840:	str	x1, [x19, #56]
  430844:	mov	w1, #0x20                  	// #32
  430848:	strb	w1, [x0]
  43084c:	b	4307fc <wcrtomb@plt+0x2bbdc>
  430850:	mov	x1, #0x1                   	// #1
  430854:	mov	x0, x19
  430858:	bl	44e874 <_obstack_memory_used@@Base+0xd6d8>
  43085c:	cbnz	w0, 430838 <wcrtomb@plt+0x2bc18>
  430860:	b	4307fc <wcrtomb@plt+0x2bbdc>
  430864:	stp	x29, x30, [sp, #-48]!
  430868:	mov	x29, sp
  43086c:	stp	x19, x20, [sp, #16]
  430870:	stp	x21, x22, [sp, #32]
  430874:	mov	x19, x0
  430878:	mov	x0, x2
  43087c:	mov	x21, x3
  430880:	ldr	x4, [x19, #16]
  430884:	cbz	x4, 4308ac <wcrtomb@plt+0x2bc8c>
  430888:	ldr	w20, [x19, #24]
  43088c:	ldr	w1, [x1, #24]
  430890:	orr	w20, w20, w1
  430894:	tbz	w20, #4, 4308b8 <wcrtomb@plt+0x2bc98>
  430898:	mov	w0, #0x0                   	// #0
  43089c:	ldp	x19, x20, [sp, #16]
  4308a0:	ldp	x21, x22, [sp, #32]
  4308a4:	ldp	x29, x30, [sp], #48
  4308a8:	ret
  4308ac:	ldr	x4, [x1, #16]
  4308b0:	cbz	x4, 430898 <wcrtomb@plt+0x2bc78>
  4308b4:	b	430888 <wcrtomb@plt+0x2bc68>
  4308b8:	mov	w2, #0x5                   	// #5
  4308bc:	mov	x1, x4
  4308c0:	bl	4049c0 <dcgettext@plt>
  4308c4:	mov	x22, x0
  4308c8:	tbz	w20, #0, 4308e8 <wcrtomb@plt+0x2bcc8>
  4308cc:	mov	x3, x0
  4308d0:	ldr	w2, [x19, #8]
  4308d4:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  4308d8:	add	x1, x1, #0xbd8
  4308dc:	mov	x0, x21
  4308e0:	bl	44e96c <_obstack_memory_used@@Base+0xd7d0>
  4308e4:	b	430898 <wcrtomb@plt+0x2bc78>
  4308e8:	bl	403ff0 <strlen@plt>
  4308ec:	add	x1, x0, #0x6
  4308f0:	mov	x0, x21
  4308f4:	bl	430790 <wcrtomb@plt+0x2bb70>
  4308f8:	mov	x3, x22
  4308fc:	ldr	w2, [x19, #8]
  430900:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  430904:	add	x1, x1, #0xbe8
  430908:	mov	x0, x21
  43090c:	bl	44e96c <_obstack_memory_used@@Base+0xd7d0>
  430910:	b	430898 <wcrtomb@plt+0x2bc78>
  430914:	stp	x29, x30, [sp, #-112]!
  430918:	mov	x29, sp
  43091c:	stp	x19, x20, [sp, #16]
  430920:	stp	x21, x22, [sp, #32]
  430924:	stp	x23, x24, [sp, #48]
  430928:	stp	x25, x26, [sp, #64]
  43092c:	stp	x27, x28, [sp, #80]
  430930:	mov	x19, x0
  430934:	mov	x26, x1
  430938:	mov	x25, x2
  43093c:	mov	w20, w3
  430940:	mov	x21, x4
  430944:	ldr	x22, [x2]
  430948:	str	x22, [sp, #104]
  43094c:	ldr	x24, [x0, #32]
  430950:	mov	w2, #0x5                   	// #5
  430954:	ldr	x1, [x0, #16]
  430958:	ldr	x0, [x0, #48]
  43095c:	bl	4049c0 <dcgettext@plt>
  430960:	str	x0, [sp, #96]
  430964:	mov	x3, x26
  430968:	mov	x2, x19
  43096c:	mov	w1, #0x6                   	// #6
  430970:	movk	w1, #0x200, lsl #16
  430974:	bl	430314 <wcrtomb@plt+0x2b6f4>
  430978:	mov	x27, x0
  43097c:	cbz	x0, 430ae0 <wcrtomb@plt+0x2bec0>
  430980:	mov	w1, #0xa                   	// #10
  430984:	bl	4049b0 <strchrnul@plt>
  430988:	mov	x19, x0
  43098c:	ldrb	w0, [x0]
  430990:	cbz	w0, 4309dc <wcrtomb@plt+0x2bdbc>
  430994:	ldrb	w28, [x22]
  430998:	cbz	w28, 4309d4 <wcrtomb@plt+0x2bdb4>
  43099c:	mov	w22, #0x0                   	// #0
  4309a0:	add	x23, x19, #0x1
  4309a4:	mov	w1, #0xa                   	// #10
  4309a8:	mov	x0, x23
  4309ac:	bl	4049b0 <strchrnul@plt>
  4309b0:	mov	x19, x0
  4309b4:	add	w22, w22, #0x1
  4309b8:	cmp	w22, w28
  4309bc:	b.ne	4309a0 <wcrtomb@plt+0x2bd80>  // b.any
  4309c0:	ldr	x0, [x25]
  4309c4:	add	x0, x0, #0x1
  4309c8:	str	x0, [x25]
  4309cc:	mov	w28, #0x1                   	// #1
  4309d0:	b	4309e4 <wcrtomb@plt+0x2bdc4>
  4309d4:	mov	x23, x27
  4309d8:	b	4309c0 <wcrtomb@plt+0x2bda0>
  4309dc:	mov	x23, x27
  4309e0:	mov	w28, #0x0                   	// #0
  4309e4:	add	x1, x19, #0x1
  4309e8:	sub	x1, x1, x23
  4309ec:	mov	x0, x21
  4309f0:	bl	430790 <wcrtomb@plt+0x2bb70>
  4309f4:	sub	x22, x19, x23
  4309f8:	ldr	x0, [x21, #56]
  4309fc:	add	x0, x0, x22
  430a00:	ldr	x1, [x21, #64]
  430a04:	cmp	x1, x0
  430a08:	b.cs	430a1c <wcrtomb@plt+0x2bdfc>  // b.hs, b.nlast
  430a0c:	mov	x1, x22
  430a10:	mov	x0, x21
  430a14:	bl	44e874 <_obstack_memory_used@@Base+0xd6d8>
  430a18:	cbz	w0, 430a38 <wcrtomb@plt+0x2be18>
  430a1c:	mov	x2, x22
  430a20:	mov	x1, x23
  430a24:	ldr	x0, [x21, #56]
  430a28:	bl	403f70 <memcpy@plt>
  430a2c:	ldr	x0, [x21, #56]
  430a30:	add	x22, x0, x22
  430a34:	str	x22, [x21, #56]
  430a38:	ldr	x0, [sp, #96]
  430a3c:	cmp	x0, x27
  430a40:	b.ne	430ac0 <wcrtomb@plt+0x2bea0>  // b.any
  430a44:	cbz	x24, 430a74 <wcrtomb@plt+0x2be54>
  430a48:	ldr	x0, [x24]
  430a4c:	cbz	x0, 430a74 <wcrtomb@plt+0x2be54>
  430a50:	mov	x4, x21
  430a54:	mov	w3, w20
  430a58:	mov	x2, x25
  430a5c:	mov	x1, x26
  430a60:	bl	430914 <wcrtomb@plt+0x2bcf4>
  430a64:	cmp	w0, #0x0
  430a68:	cset	w20, eq  // eq = none
  430a6c:	ldr	x0, [x24, #32]!
  430a70:	cbnz	x0, 430a50 <wcrtomb@plt+0x2be30>
  430a74:	cmp	w20, #0x0
  430a78:	ccmp	w28, #0x0, #0x4, ne  // ne = any
  430a7c:	b.eq	430a9c <wcrtomb@plt+0x2be7c>  // b.none
  430a80:	ldrb	w0, [x19]
  430a84:	cbz	w0, 430acc <wcrtomb@plt+0x2beac>
  430a88:	ldr	x1, [sp, #104]
  430a8c:	ldrb	w0, [x1]
  430a90:	add	w0, w0, #0x1
  430a94:	strb	w0, [x1]
  430a98:	mov	w20, #0x0                   	// #0
  430a9c:	cmp	w20, #0x0
  430aa0:	cset	w0, eq  // eq = none
  430aa4:	ldp	x19, x20, [sp, #16]
  430aa8:	ldp	x21, x22, [sp, #32]
  430aac:	ldp	x23, x24, [sp, #48]
  430ab0:	ldp	x25, x26, [sp, #64]
  430ab4:	ldp	x27, x28, [sp, #80]
  430ab8:	ldp	x29, x30, [sp], #112
  430abc:	ret
  430ac0:	mov	x0, x27
  430ac4:	bl	4047c0 <free@plt>
  430ac8:	b	430a44 <wcrtomb@plt+0x2be24>
  430acc:	ldr	x1, [sp, #104]
  430ad0:	ldrb	w0, [x1]
  430ad4:	cbz	w0, 430a9c <wcrtomb@plt+0x2be7c>
  430ad8:	strb	wzr, [x1]
  430adc:	b	430a9c <wcrtomb@plt+0x2be7c>
  430ae0:	mov	x19, x0
  430ae4:	mov	w28, #0x0                   	// #0
  430ae8:	cbnz	x24, 430a48 <wcrtomb@plt+0x2be28>
  430aec:	b	430a9c <wcrtomb@plt+0x2be7c>
  430af0:	stp	x29, x30, [sp, #-64]!
  430af4:	mov	x29, sp
  430af8:	stp	x19, x20, [sp, #16]
  430afc:	stp	x21, x22, [sp, #32]
  430b00:	mov	x20, x1
  430b04:	mov	x19, x2
  430b08:	mov	w2, #0x5                   	// #5
  430b0c:	mov	x1, x0
  430b10:	ldr	x0, [x20, #48]
  430b14:	bl	4049c0 <dcgettext@plt>
  430b18:	mov	x21, x0
  430b1c:	ldr	x3, [x19, #32]
  430b20:	mov	x2, x20
  430b24:	mov	w1, #0x3                   	// #3
  430b28:	movk	w1, #0x200, lsl #16
  430b2c:	bl	430314 <wcrtomb@plt+0x2b6f4>
  430b30:	mov	x20, x0
  430b34:	cbz	x0, 430c44 <wcrtomb@plt+0x2c024>
  430b38:	ldrb	w0, [x0]
  430b3c:	cbz	w0, 430c38 <wcrtomb@plt+0x2c018>
  430b40:	str	x23, [sp, #48]
  430b44:	ldr	x0, [x19, #16]
  430b48:	ldr	x0, [x0]
  430b4c:	cbz	x0, 430b78 <wcrtomb@plt+0x2bf58>
  430b50:	ldr	x22, [x19, #8]
  430b54:	ldr	x1, [x22, #56]
  430b58:	ldr	x0, [x22, #64]
  430b5c:	cmp	x1, x0
  430b60:	b.cs	430c64 <wcrtomb@plt+0x2c044>  // b.hs, b.nlast
  430b64:	ldr	x0, [x22, #56]
  430b68:	add	x1, x0, #0x1
  430b6c:	str	x1, [x22, #56]
  430b70:	mov	w1, #0xa                   	// #10
  430b74:	strb	w1, [x0]
  430b78:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x3ee64>
  430b7c:	add	x23, x23, #0x3a0
  430b80:	ldr	w1, [x23, #24]
  430b84:	ldr	x0, [x19, #8]
  430b88:	bl	43068c <wcrtomb@plt+0x2ba6c>
  430b8c:	ldr	x22, [x19, #8]
  430b90:	ldrsw	x23, [x23, #24]
  430b94:	ldr	x0, [x22, #56]
  430b98:	ldr	x1, [x22, #48]
  430b9c:	sub	x0, x0, x1
  430ba0:	ldr	x1, [x22, #32]
  430ba4:	cmp	x0, x1
  430ba8:	b.hi	430c78 <wcrtomb@plt+0x2c058>  // b.pmore
  430bac:	str	x23, [x22, #8]
  430bb0:	ldr	x22, [x19, #8]
  430bb4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  430bb8:	ldr	w23, [x0, #952]
  430bbc:	ldr	x0, [x22, #56]
  430bc0:	ldr	x1, [x22, #48]
  430bc4:	sub	x0, x0, x1
  430bc8:	ldr	x1, [x22, #32]
  430bcc:	cmp	x0, x1
  430bd0:	b.hi	430c84 <wcrtomb@plt+0x2c064>  // b.pmore
  430bd4:	sxtw	x23, w23
  430bd8:	str	x23, [x22, #24]
  430bdc:	mov	x0, x20
  430be0:	bl	403ff0 <strlen@plt>
  430be4:	mov	x22, x0
  430be8:	cbnz	x0, 430c90 <wcrtomb@plt+0x2c070>
  430bec:	ldr	x22, [x19, #8]
  430bf0:	ldr	x0, [x22, #56]
  430bf4:	ldr	x1, [x22, #48]
  430bf8:	sub	x0, x0, x1
  430bfc:	ldr	x1, [x22, #32]
  430c00:	cmp	x0, x1
  430c04:	b.hi	430cd8 <wcrtomb@plt+0x2c0b8>  // b.pmore
  430c08:	str	xzr, [x22, #8]
  430c0c:	ldr	x22, [x19, #8]
  430c10:	ldr	x1, [x22, #56]
  430c14:	ldr	x0, [x22, #64]
  430c18:	cmp	x1, x0
  430c1c:	b.cs	430ce4 <wcrtomb@plt+0x2c0c4>  // b.hs, b.nlast
  430c20:	ldr	x0, [x22, #56]
  430c24:	add	x1, x0, #0x1
  430c28:	str	x1, [x22, #56]
  430c2c:	mov	w1, #0xa                   	// #10
  430c30:	strb	w1, [x0]
  430c34:	ldr	x23, [sp, #48]
  430c38:	ldr	x0, [x19, #16]
  430c3c:	mov	w1, #0x1                   	// #1
  430c40:	str	w1, [x0, #8]
  430c44:	cmp	x21, x20
  430c48:	b.eq	430c54 <wcrtomb@plt+0x2c034>  // b.none
  430c4c:	mov	x0, x20
  430c50:	bl	4047c0 <free@plt>
  430c54:	ldp	x19, x20, [sp, #16]
  430c58:	ldp	x21, x22, [sp, #32]
  430c5c:	ldp	x29, x30, [sp], #64
  430c60:	ret
  430c64:	mov	x1, #0x1                   	// #1
  430c68:	mov	x0, x22
  430c6c:	bl	44e874 <_obstack_memory_used@@Base+0xd6d8>
  430c70:	cbnz	w0, 430b64 <wcrtomb@plt+0x2bf44>
  430c74:	b	430b78 <wcrtomb@plt+0x2bf58>
  430c78:	mov	x0, x22
  430c7c:	bl	44e32c <_obstack_memory_used@@Base+0xd190>
  430c80:	b	430bac <wcrtomb@plt+0x2bf8c>
  430c84:	mov	x0, x22
  430c88:	bl	44e32c <_obstack_memory_used@@Base+0xd190>
  430c8c:	b	430bd4 <wcrtomb@plt+0x2bfb4>
  430c90:	ldr	x23, [x19, #8]
  430c94:	ldr	x0, [x23, #56]
  430c98:	add	x0, x0, x22
  430c9c:	ldr	x1, [x23, #64]
  430ca0:	cmp	x1, x0
  430ca4:	b.cs	430cb8 <wcrtomb@plt+0x2c098>  // b.hs, b.nlast
  430ca8:	mov	x1, x22
  430cac:	mov	x0, x23
  430cb0:	bl	44e874 <_obstack_memory_used@@Base+0xd6d8>
  430cb4:	cbz	w0, 430bec <wcrtomb@plt+0x2bfcc>
  430cb8:	mov	x2, x22
  430cbc:	mov	x1, x20
  430cc0:	ldr	x0, [x23, #56]
  430cc4:	bl	403f70 <memcpy@plt>
  430cc8:	ldr	x0, [x23, #56]
  430ccc:	add	x22, x0, x22
  430cd0:	str	x22, [x23, #56]
  430cd4:	b	430bec <wcrtomb@plt+0x2bfcc>
  430cd8:	mov	x0, x22
  430cdc:	bl	44e32c <_obstack_memory_used@@Base+0xd190>
  430ce0:	b	430c08 <wcrtomb@plt+0x2bfe8>
  430ce4:	mov	x1, #0x1                   	// #1
  430ce8:	mov	x0, x22
  430cec:	bl	44e874 <_obstack_memory_used@@Base+0xd6d8>
  430cf0:	cbnz	w0, 430c20 <wcrtomb@plt+0x2c000>
  430cf4:	ldr	x23, [sp, #48]
  430cf8:	b	430c38 <wcrtomb@plt+0x2c018>
  430cfc:	stp	x29, x30, [sp, #-64]!
  430d00:	mov	x29, sp
  430d04:	stp	x19, x20, [sp, #16]
  430d08:	stp	x21, x22, [sp, #32]
  430d0c:	mov	w21, w0
  430d10:	mov	x19, x1
  430d14:	ldr	w1, [x1, #24]
  430d18:	cbz	w1, 430e3c <wcrtomb@plt+0x2c21c>
  430d1c:	ldr	x1, [x19, #16]
  430d20:	ldr	x22, [x1]
  430d24:	ldr	x0, [x19]
  430d28:	ldr	x20, [x0, #32]
  430d2c:	ldr	w1, [x1, #8]
  430d30:	cmp	w1, #0x0
  430d34:	ccmp	x22, #0x0, #0x4, ne  // ne = any
  430d38:	b.ne	430dd4 <wcrtomb@plt+0x2c1b4>  // b.any
  430d3c:	cbz	x20, 430db4 <wcrtomb@plt+0x2c194>
  430d40:	ldr	x0, [x20]
  430d44:	cbz	x0, 430db4 <wcrtomb@plt+0x2c194>
  430d48:	ldrb	w1, [x0]
  430d4c:	cbz	w1, 430db4 <wcrtomb@plt+0x2c194>
  430d50:	cbz	x22, 430d7c <wcrtomb@plt+0x2c15c>
  430d54:	ldr	x1, [x22, #32]
  430d58:	cmp	x1, x20
  430d5c:	b.eq	430db4 <wcrtomb@plt+0x2c194>  // b.none
  430d60:	cbz	x1, 430d7c <wcrtomb@plt+0x2c15c>
  430d64:	ldr	x1, [x1, #16]
  430d68:	cmp	x1, #0x0
  430d6c:	ccmp	x20, x1, #0x4, ne  // ne = any
  430d70:	b.ne	430d64 <wcrtomb@plt+0x2c144>  // b.any
  430d74:	cmp	x20, x1
  430d78:	b.eq	430db4 <wcrtomb@plt+0x2c194>  // b.none
  430d7c:	ldr	x1, [x19, #8]
  430d80:	ldr	x22, [x1, #24]
  430d84:	mov	x2, x19
  430d88:	ldr	x1, [x20, #24]
  430d8c:	bl	430af0 <wcrtomb@plt+0x2bed0>
  430d90:	ldr	x20, [x19, #8]
  430d94:	ldr	x0, [x20, #56]
  430d98:	ldr	x1, [x20, #48]
  430d9c:	sub	x0, x0, x1
  430da0:	ldr	x1, [x20, #32]
  430da4:	cmp	x0, x1
  430da8:	b.hi	430e30 <wcrtomb@plt+0x2c210>  // b.pmore
  430dac:	sxtw	x22, w22
  430db0:	str	x22, [x20, #24]
  430db4:	str	wzr, [x19, #24]
  430db8:	mov	w1, w21
  430dbc:	ldr	x0, [x19, #8]
  430dc0:	bl	43068c <wcrtomb@plt+0x2ba6c>
  430dc4:	ldp	x19, x20, [sp, #16]
  430dc8:	ldp	x21, x22, [sp, #32]
  430dcc:	ldp	x29, x30, [sp], #64
  430dd0:	ret
  430dd4:	ldr	w1, [x0, #24]
  430dd8:	ldr	w0, [x22, #24]
  430ddc:	cmp	w1, w0
  430de0:	b.eq	430d3c <wcrtomb@plt+0x2c11c>  // b.none
  430de4:	str	x23, [sp, #48]
  430de8:	ldr	x23, [x19, #8]
  430dec:	ldr	x1, [x23, #56]
  430df0:	ldr	x0, [x23, #64]
  430df4:	cmp	x1, x0
  430df8:	b.cs	430e18 <wcrtomb@plt+0x2c1f8>  // b.hs, b.nlast
  430dfc:	ldr	x0, [x23, #56]
  430e00:	add	x1, x0, #0x1
  430e04:	str	x1, [x23, #56]
  430e08:	mov	w1, #0xa                   	// #10
  430e0c:	strb	w1, [x0]
  430e10:	ldr	x23, [sp, #48]
  430e14:	b	430d3c <wcrtomb@plt+0x2c11c>
  430e18:	mov	x1, #0x1                   	// #1
  430e1c:	mov	x0, x23
  430e20:	bl	44e874 <_obstack_memory_used@@Base+0xd6d8>
  430e24:	cbnz	w0, 430dfc <wcrtomb@plt+0x2c1dc>
  430e28:	ldr	x23, [sp, #48]
  430e2c:	b	430d3c <wcrtomb@plt+0x2c11c>
  430e30:	mov	x0, x20
  430e34:	bl	44e32c <_obstack_memory_used@@Base+0xd190>
  430e38:	b	430dac <wcrtomb@plt+0x2c18c>
  430e3c:	ldr	x20, [x19, #8]
  430e40:	ldr	x0, [x20, #56]
  430e44:	add	x0, x0, #0x2
  430e48:	ldr	x1, [x20, #64]
  430e4c:	cmp	x1, x0
  430e50:	b.cs	430e64 <wcrtomb@plt+0x2c244>  // b.hs, b.nlast
  430e54:	mov	x1, #0x2                   	// #2
  430e58:	mov	x0, x20
  430e5c:	bl	44e874 <_obstack_memory_used@@Base+0xd6d8>
  430e60:	cbz	w0, 430db8 <wcrtomb@plt+0x2c198>
  430e64:	ldr	x0, [x20, #56]
  430e68:	mov	w1, #0x202c                	// #8236
  430e6c:	strh	w1, [x0]
  430e70:	ldr	x0, [x20, #56]
  430e74:	add	x0, x0, #0x2
  430e78:	str	x0, [x20, #56]
  430e7c:	b	430db8 <wcrtomb@plt+0x2c198>
  430e80:	stp	x29, x30, [sp, #-112]!
  430e84:	mov	x29, sp
  430e88:	stp	x19, x20, [sp, #16]
  430e8c:	stp	x21, x22, [sp, #32]
  430e90:	stp	x23, x24, [sp, #48]
  430e94:	stp	x25, x26, [sp, #64]
  430e98:	stp	x27, x28, [sp, #80]
  430e9c:	mov	x22, x0
  430ea0:	str	x1, [sp, #96]
  430ea4:	mov	w25, w2
  430ea8:	mov	w26, w3
  430eac:	mov	w27, w4
  430eb0:	mov	x19, x5
  430eb4:	mov	w2, #0x5                   	// #5
  430eb8:	ldr	x1, [x0, #24]
  430ebc:	ldr	x0, [x0, #48]
  430ec0:	bl	4049c0 <dcgettext@plt>
  430ec4:	mov	x21, x0
  430ec8:	ldr	x23, [x22, #32]
  430ecc:	cbz	x0, 4312c8 <wcrtomb@plt+0x2c6a8>
  430ed0:	mov	w1, #0xb                   	// #11
  430ed4:	bl	404870 <strchr@plt>
  430ed8:	cbz	w25, 430f10 <wcrtomb@plt+0x2c2f0>
  430edc:	cmp	x0, #0x0
  430ee0:	cinc	x21, x0, ne  // ne = any
  430ee4:	ldr	x0, [x22, #40]
  430ee8:	cbz	x0, 431308 <wcrtomb@plt+0x2c6e8>
  430eec:	ldr	x1, [sp, #96]
  430ef0:	mov	x0, x22
  430ef4:	bl	43418c <argp_parse@@Base+0xa4c>
  430ef8:	str	x0, [sp, #104]
  430efc:	ldr	x3, [x22, #40]
  430f00:	mov	x24, #0x0                   	// #0
  430f04:	mov	w0, #0x2                   	// #2
  430f08:	movk	w0, #0x200, lsl #16
  430f0c:	b	430f50 <wcrtomb@plt+0x2c330>
  430f10:	cbz	x0, 431348 <wcrtomb@plt+0x2c728>
  430f14:	sub	x24, x0, x21
  430f18:	ldr	x0, [x22, #40]
  430f1c:	cbz	x0, 430fbc <wcrtomb@plt+0x2c39c>
  430f20:	cbz	x24, 430f34 <wcrtomb@plt+0x2c314>
  430f24:	mov	x1, x24
  430f28:	mov	x0, x21
  430f2c:	bl	404850 <strndup@plt>
  430f30:	mov	x21, x0
  430f34:	ldr	x1, [sp, #96]
  430f38:	mov	x0, x22
  430f3c:	bl	43418c <argp_parse@@Base+0xa4c>
  430f40:	str	x0, [sp, #104]
  430f44:	ldr	x3, [x22, #40]
  430f48:	mov	w0, #0x1                   	// #1
  430f4c:	movk	w0, #0x200, lsl #16
  430f50:	ldr	x2, [sp, #104]
  430f54:	mov	x1, x21
  430f58:	blr	x3
  430f5c:	mov	x28, x0
  430f60:	mov	w20, #0x0                   	// #0
  430f64:	cbz	x0, 431050 <wcrtomb@plt+0x2c430>
  430f68:	cbnz	w26, 430fc8 <wcrtomb@plt+0x2c3a8>
  430f6c:	cmp	x24, #0x0
  430f70:	ccmp	x28, x21, #0x0, ne  // ne = any
  430f74:	b.ne	431004 <wcrtomb@plt+0x2c3e4>  // b.any
  430f78:	ldr	x0, [x19, #56]
  430f7c:	add	x0, x0, x24
  430f80:	ldr	x1, [x19, #64]
  430f84:	cmp	x1, x0
  430f88:	b.cs	430f9c <wcrtomb@plt+0x2c37c>  // b.hs, b.nlast
  430f8c:	mov	x1, x24
  430f90:	mov	x0, x19
  430f94:	bl	44e874 <_obstack_memory_used@@Base+0xd6d8>
  430f98:	cbz	w0, 431014 <wcrtomb@plt+0x2c3f4>
  430f9c:	mov	x2, x24
  430fa0:	mov	x1, x21
  430fa4:	ldr	x0, [x19, #56]
  430fa8:	bl	403f70 <memcpy@plt>
  430fac:	ldr	x0, [x19, #56]
  430fb0:	add	x0, x0, x24
  430fb4:	str	x0, [x19, #56]
  430fb8:	b	431014 <wcrtomb@plt+0x2c3f4>
  430fbc:	mov	x28, x21
  430fc0:	str	xzr, [sp, #104]
  430fc4:	b	430f68 <wcrtomb@plt+0x2c348>
  430fc8:	ldr	x1, [x19, #56]
  430fcc:	ldr	x0, [x19, #64]
  430fd0:	cmp	x1, x0
  430fd4:	b.cs	430ff0 <wcrtomb@plt+0x2c3d0>  // b.hs, b.nlast
  430fd8:	ldr	x0, [x19, #56]
  430fdc:	add	x1, x0, #0x1
  430fe0:	str	x1, [x19, #56]
  430fe4:	mov	w1, #0xa                   	// #10
  430fe8:	strb	w1, [x0]
  430fec:	b	430f6c <wcrtomb@plt+0x2c34c>
  430ff0:	mov	x1, #0x1                   	// #1
  430ff4:	mov	x0, x19
  430ff8:	bl	44e874 <_obstack_memory_used@@Base+0xd6d8>
  430ffc:	cbnz	w0, 430fd8 <wcrtomb@plt+0x2c3b8>
  431000:	b	430f6c <wcrtomb@plt+0x2c34c>
  431004:	mov	x0, x28
  431008:	bl	403ff0 <strlen@plt>
  43100c:	mov	x20, x0
  431010:	cbnz	x0, 431160 <wcrtomb@plt+0x2c540>
  431014:	ldr	x0, [x19, #56]
  431018:	ldr	x1, [x19, #48]
  43101c:	sub	x0, x0, x1
  431020:	ldr	x1, [x19, #32]
  431024:	cmp	x0, x1
  431028:	b.hi	4311a4 <wcrtomb@plt+0x2c584>  // b.pmore
  43102c:	ldr	x0, [x19, #40]
  431030:	cmp	x0, #0x0
  431034:	csel	x0, x0, xzr, ge  // ge = tcont
  431038:	ldr	x1, [x19, #8]
  43103c:	cmp	x1, x0
  431040:	b.cc	4311b0 <wcrtomb@plt+0x2c590>  // b.lo, b.ul, b.last
  431044:	mov	w20, #0x1                   	// #1
  431048:	cmp	x28, x21
  43104c:	b.ne	4311ec <wcrtomb@plt+0x2c5cc>  // b.any
  431050:	cmp	x21, #0x0
  431054:	ccmp	x24, #0x0, #0x4, ne  // ne = any
  431058:	b.eq	43106c <wcrtomb@plt+0x2c44c>  // b.none
  43105c:	ldr	x0, [x22, #40]
  431060:	cbz	x0, 4310e8 <wcrtomb@plt+0x2c4c8>
  431064:	mov	x0, x21
  431068:	bl	4047c0 <free@plt>
  43106c:	cbz	w25, 4310e8 <wcrtomb@plt+0x2c4c8>
  431070:	ldr	x3, [x22, #40]
  431074:	cbz	x3, 4310e8 <wcrtomb@plt+0x2c4c8>
  431078:	ldr	x2, [sp, #104]
  43107c:	mov	x1, #0x0                   	// #0
  431080:	mov	w0, #0x4                   	// #4
  431084:	movk	w0, #0x200, lsl #16
  431088:	blr	x3
  43108c:	mov	x21, x0
  431090:	cbz	x0, 4310e8 <wcrtomb@plt+0x2c4c8>
  431094:	orr	w20, w26, w20
  431098:	cbnz	w20, 4311f8 <wcrtomb@plt+0x2c5d8>
  43109c:	mov	x0, x21
  4310a0:	bl	403ff0 <strlen@plt>
  4310a4:	mov	x20, x0
  4310a8:	cbnz	x0, 431234 <wcrtomb@plt+0x2c614>
  4310ac:	mov	x0, x21
  4310b0:	bl	4047c0 <free@plt>
  4310b4:	ldr	x0, [x19, #56]
  4310b8:	ldr	x1, [x19, #48]
  4310bc:	sub	x0, x0, x1
  4310c0:	ldr	x1, [x19, #32]
  4310c4:	cmp	x0, x1
  4310c8:	b.hi	431278 <wcrtomb@plt+0x2c658>  // b.pmore
  4310cc:	ldr	x0, [x19, #40]
  4310d0:	cmp	x0, #0x0
  4310d4:	csel	x0, x0, xzr, ge  // ge = tcont
  4310d8:	ldr	x1, [x19, #8]
  4310dc:	mov	w20, #0x1                   	// #1
  4310e0:	cmp	x1, x0
  4310e4:	b.cc	431284 <wcrtomb@plt+0x2c664>  // b.lo, b.ul, b.last
  4310e8:	cbz	x23, 431140 <wcrtomb@plt+0x2c520>
  4310ec:	ldr	x0, [x23]
  4310f0:	cbz	x0, 431140 <wcrtomb@plt+0x2c520>
  4310f4:	cmp	w27, #0x0
  4310f8:	cset	w21, eq  // eq = none
  4310fc:	cmp	w20, #0x0
  431100:	ccmp	w21, #0x0, #0x0, ne  // ne = any
  431104:	b.eq	431140 <wcrtomb@plt+0x2c520>  // b.none
  431108:	orr	w1, w26, w20
  43110c:	cmp	w1, #0x0
  431110:	mov	x5, x19
  431114:	mov	w4, w27
  431118:	cset	w3, ne  // ne = any
  43111c:	mov	w2, w25
  431120:	ldr	x1, [sp, #96]
  431124:	bl	430e80 <wcrtomb@plt+0x2c260>
  431128:	orr	w20, w20, w0
  43112c:	ldr	x0, [x23, #32]!
  431130:	cbz	x0, 431140 <wcrtomb@plt+0x2c520>
  431134:	cmp	w20, #0x0
  431138:	ccmp	w21, #0x0, #0x0, ne  // ne = any
  43113c:	b.ne	431108 <wcrtomb@plt+0x2c4e8>  // b.any
  431140:	mov	w0, w20
  431144:	ldp	x19, x20, [sp, #16]
  431148:	ldp	x21, x22, [sp, #32]
  43114c:	ldp	x23, x24, [sp, #48]
  431150:	ldp	x25, x26, [sp, #64]
  431154:	ldp	x27, x28, [sp, #80]
  431158:	ldp	x29, x30, [sp], #112
  43115c:	ret
  431160:	ldr	x0, [x19, #56]
  431164:	add	x0, x0, x20
  431168:	ldr	x1, [x19, #64]
  43116c:	cmp	x1, x0
  431170:	b.cs	431184 <wcrtomb@plt+0x2c564>  // b.hs, b.nlast
  431174:	mov	x1, x20
  431178:	mov	x0, x19
  43117c:	bl	44e874 <_obstack_memory_used@@Base+0xd6d8>
  431180:	cbz	w0, 431014 <wcrtomb@plt+0x2c3f4>
  431184:	mov	x2, x20
  431188:	mov	x1, x28
  43118c:	ldr	x0, [x19, #56]
  431190:	bl	403f70 <memcpy@plt>
  431194:	ldr	x0, [x19, #56]
  431198:	add	x20, x0, x20
  43119c:	str	x20, [x19, #56]
  4311a0:	b	431014 <wcrtomb@plt+0x2c3f4>
  4311a4:	mov	x0, x19
  4311a8:	bl	44e32c <_obstack_memory_used@@Base+0xd190>
  4311ac:	b	43102c <wcrtomb@plt+0x2c40c>
  4311b0:	ldr	x1, [x19, #56]
  4311b4:	ldr	x0, [x19, #64]
  4311b8:	cmp	x1, x0
  4311bc:	b.cs	4311d8 <wcrtomb@plt+0x2c5b8>  // b.hs, b.nlast
  4311c0:	ldr	x0, [x19, #56]
  4311c4:	add	x1, x0, #0x1
  4311c8:	str	x1, [x19, #56]
  4311cc:	mov	w1, #0xa                   	// #10
  4311d0:	strb	w1, [x0]
  4311d4:	b	431044 <wcrtomb@plt+0x2c424>
  4311d8:	mov	x1, #0x1                   	// #1
  4311dc:	mov	x0, x19
  4311e0:	bl	44e874 <_obstack_memory_used@@Base+0xd6d8>
  4311e4:	cbnz	w0, 4311c0 <wcrtomb@plt+0x2c5a0>
  4311e8:	b	431044 <wcrtomb@plt+0x2c424>
  4311ec:	mov	x0, x28
  4311f0:	bl	4047c0 <free@plt>
  4311f4:	b	431050 <wcrtomb@plt+0x2c430>
  4311f8:	ldr	x1, [x19, #56]
  4311fc:	ldr	x0, [x19, #64]
  431200:	cmp	x1, x0
  431204:	b.cs	431220 <wcrtomb@plt+0x2c600>  // b.hs, b.nlast
  431208:	ldr	x0, [x19, #56]
  43120c:	add	x1, x0, #0x1
  431210:	str	x1, [x19, #56]
  431214:	mov	w1, #0xa                   	// #10
  431218:	strb	w1, [x0]
  43121c:	b	43109c <wcrtomb@plt+0x2c47c>
  431220:	mov	x1, #0x1                   	// #1
  431224:	mov	x0, x19
  431228:	bl	44e874 <_obstack_memory_used@@Base+0xd6d8>
  43122c:	cbnz	w0, 431208 <wcrtomb@plt+0x2c5e8>
  431230:	b	43109c <wcrtomb@plt+0x2c47c>
  431234:	ldr	x0, [x19, #56]
  431238:	add	x0, x0, x20
  43123c:	ldr	x1, [x19, #64]
  431240:	cmp	x1, x0
  431244:	b.cs	431258 <wcrtomb@plt+0x2c638>  // b.hs, b.nlast
  431248:	mov	x1, x20
  43124c:	mov	x0, x19
  431250:	bl	44e874 <_obstack_memory_used@@Base+0xd6d8>
  431254:	cbz	w0, 4310ac <wcrtomb@plt+0x2c48c>
  431258:	mov	x2, x20
  43125c:	mov	x1, x21
  431260:	ldr	x0, [x19, #56]
  431264:	bl	403f70 <memcpy@plt>
  431268:	ldr	x0, [x19, #56]
  43126c:	add	x20, x0, x20
  431270:	str	x20, [x19, #56]
  431274:	b	4310ac <wcrtomb@plt+0x2c48c>
  431278:	mov	x0, x19
  43127c:	bl	44e32c <_obstack_memory_used@@Base+0xd190>
  431280:	b	4310cc <wcrtomb@plt+0x2c4ac>
  431284:	ldr	x1, [x19, #56]
  431288:	ldr	x0, [x19, #64]
  43128c:	cmp	x1, x0
  431290:	b.cs	4312b0 <wcrtomb@plt+0x2c690>  // b.hs, b.nlast
  431294:	ldr	x0, [x19, #56]
  431298:	add	x1, x0, #0x1
  43129c:	str	x1, [x19, #56]
  4312a0:	mov	w1, #0xa                   	// #10
  4312a4:	strb	w1, [x0]
  4312a8:	mov	w20, #0x1                   	// #1
  4312ac:	b	4310e8 <wcrtomb@plt+0x2c4c8>
  4312b0:	mov	x1, #0x1                   	// #1
  4312b4:	mov	x0, x19
  4312b8:	bl	44e874 <_obstack_memory_used@@Base+0xd6d8>
  4312bc:	cbnz	w0, 431294 <wcrtomb@plt+0x2c674>
  4312c0:	mov	w20, #0x1                   	// #1
  4312c4:	b	4310e8 <wcrtomb@plt+0x2c4c8>
  4312c8:	ldr	x0, [x22, #40]
  4312cc:	mov	x28, x21
  4312d0:	cbz	x0, 43130c <wcrtomb@plt+0x2c6ec>
  4312d4:	ldr	x1, [sp, #96]
  4312d8:	mov	x0, x22
  4312dc:	bl	43418c <argp_parse@@Base+0xa4c>
  4312e0:	str	x0, [sp, #104]
  4312e4:	ldr	x3, [x22, #40]
  4312e8:	mov	x24, #0x0                   	// #0
  4312ec:	cmp	w25, #0x0
  4312f0:	mov	w0, #0x2                   	// #2
  4312f4:	movk	w0, #0x200, lsl #16
  4312f8:	mov	w1, #0x1                   	// #1
  4312fc:	movk	w1, #0x200, lsl #16
  431300:	csel	w0, w0, w1, ne  // ne = any
  431304:	b	430f50 <wcrtomb@plt+0x2c330>
  431308:	mov	x28, x21
  43130c:	mov	x24, #0x0                   	// #0
  431310:	str	xzr, [sp, #104]
  431314:	cbnz	x28, 430f68 <wcrtomb@plt+0x2c348>
  431318:	str	x28, [sp, #104]
  43131c:	mov	w20, #0x0                   	// #0
  431320:	b	43106c <wcrtomb@plt+0x2c44c>
  431324:	ldr	x1, [sp, #96]
  431328:	mov	x0, x22
  43132c:	bl	43418c <argp_parse@@Base+0xa4c>
  431330:	str	x0, [sp, #104]
  431334:	ldr	x3, [x22, #40]
  431338:	mov	x24, #0x0                   	// #0
  43133c:	mov	w0, #0x1                   	// #1
  431340:	movk	w0, #0x200, lsl #16
  431344:	b	430f50 <wcrtomb@plt+0x2c330>
  431348:	ldr	x0, [x22, #40]
  43134c:	cbnz	x0, 431324 <wcrtomb@plt+0x2c704>
  431350:	mov	x28, x21
  431354:	b	43130c <wcrtomb@plt+0x2c6ec>
  431358:	stp	x29, x30, [sp, #-80]!
  43135c:	mov	x29, sp
  431360:	stp	x19, x20, [sp, #16]
  431364:	mov	x20, x0
  431368:	mov	x19, x1
  43136c:	ldr	w0, [x0, #24]
  431370:	ldr	w1, [x1, #24]
  431374:	ldr	x2, [x20, #32]
  431378:	ldr	x3, [x19, #32]
  43137c:	cmp	x2, x3
  431380:	b.eq	431438 <wcrtomb@plt+0x2c818>  // b.none
  431384:	cbz	x2, 431400 <wcrtomb@plt+0x2c7e0>
  431388:	cbz	x3, 43141c <wcrtomb@plt+0x2c7fc>
  43138c:	ldr	w0, [x2, #32]
  431390:	ldr	w1, [x3, #32]
  431394:	cmp	w1, w0
  431398:	b.ge	4313ac <wcrtomb@plt+0x2c78c>  // b.tcont
  43139c:	ldr	x2, [x2, #16]
  4313a0:	ldr	w0, [x2, #32]
  4313a4:	cmp	w1, w0
  4313a8:	b.lt	43139c <wcrtomb@plt+0x2c77c>  // b.tstop
  4313ac:	cmp	w1, w0
  4313b0:	b.le	4313c4 <wcrtomb@plt+0x2c7a4>
  4313b4:	ldr	x3, [x3, #16]
  4313b8:	ldr	w1, [x3, #32]
  4313bc:	cmp	w1, w0
  4313c0:	b.gt	4313b4 <wcrtomb@plt+0x2c794>
  4313c4:	mov	x0, x2
  4313c8:	ldr	x2, [x2, #16]
  4313cc:	mov	x1, x3
  4313d0:	ldr	x3, [x3, #16]
  4313d4:	cmp	x2, x3
  4313d8:	b.ne	4313c4 <wcrtomb@plt+0x2c7a4>  // b.any
  4313dc:	ldr	w3, [x1, #8]
  4313e0:	ldr	w2, [x0, #8]
  4313e4:	sub	w2, w3, w2
  4313e8:	ldr	w1, [x1, #12]
  4313ec:	ldr	w0, [x0, #12]
  4313f0:	bl	430040 <wcrtomb@plt+0x2b420>
  4313f4:	ldp	x19, x20, [sp, #16]
  4313f8:	ldp	x29, x30, [sp], #80
  4313fc:	ret
  431400:	mov	x1, x3
  431404:	ldr	x3, [x3, #16]
  431408:	cbnz	x3, 431400 <wcrtomb@plt+0x2c7e0>
  43140c:	mov	w2, #0xffffffff            	// #-1
  431410:	ldr	w1, [x1, #12]
  431414:	bl	430040 <wcrtomb@plt+0x2b420>
  431418:	b	4313f4 <wcrtomb@plt+0x2c7d4>
  43141c:	mov	x0, x2
  431420:	ldr	x2, [x2, #16]
  431424:	cbnz	x2, 43141c <wcrtomb@plt+0x2c7fc>
  431428:	mov	w2, #0x1                   	// #1
  43142c:	ldr	w0, [x0, #12]
  431430:	bl	430040 <wcrtomb@plt+0x2b420>
  431434:	b	4313f4 <wcrtomb@plt+0x2c7d4>
  431438:	cmp	w0, w1
  43143c:	b.eq	43144c <wcrtomb@plt+0x2c82c>  // b.none
  431440:	mov	w2, #0x0                   	// #0
  431444:	bl	430040 <wcrtomb@plt+0x2b420>
  431448:	b	4313f4 <wcrtomb@plt+0x2c7d4>
  43144c:	stp	x21, x22, [sp, #32]
  431450:	stp	x23, x24, [sp, #48]
  431454:	ldr	x0, [x20, #40]
  431458:	adrp	x21, 430000 <wcrtomb@plt+0x2b3e0>
  43145c:	add	x21, x21, #0x740
  431460:	mov	x3, #0x0                   	// #0
  431464:	ldr	x2, [x0, #48]
  431468:	mov	x1, x21
  43146c:	mov	x0, x20
  431470:	bl	43037c <wcrtomb@plt+0x2b75c>
  431474:	mov	w23, w0
  431478:	ldr	x0, [x19, #40]
  43147c:	mov	x3, #0x0                   	// #0
  431480:	ldr	x2, [x0, #48]
  431484:	mov	x1, x21
  431488:	mov	x0, x19
  43148c:	bl	43037c <wcrtomb@plt+0x2b75c>
  431490:	mov	w21, w0
  431494:	ldr	x0, [x20]
  431498:	ldr	w24, [x0, #24]
  43149c:	and	w24, w24, #0x8
  4314a0:	ldr	x0, [x19]
  4314a4:	ldr	w0, [x0, #24]
  4314a8:	and	w22, w0, #0x8
  4314ac:	mov	x0, x20
  4314b0:	bl	42fff0 <wcrtomb@plt+0x2b3d0>
  4314b4:	mov	x20, x0
  4314b8:	str	x0, [sp, #64]
  4314bc:	mov	x0, x19
  4314c0:	bl	42fff0 <wcrtomb@plt+0x2b3d0>
  4314c4:	str	x0, [sp, #72]
  4314c8:	cbz	w24, 43154c <wcrtomb@plt+0x2c92c>
  4314cc:	cbz	x20, 43154c <wcrtomb@plt+0x2c92c>
  4314d0:	add	x0, sp, #0x40
  4314d4:	bl	430128 <wcrtomb@plt+0x2b508>
  4314d8:	cmp	w0, #0x0
  4314dc:	cset	w19, ne  // ne = any
  4314e0:	cbz	w22, 4315a8 <wcrtomb@plt+0x2c988>
  4314e4:	ldr	x0, [sp, #72]
  4314e8:	mov	w22, #0x0                   	// #0
  4314ec:	cbz	x0, 4315a8 <wcrtomb@plt+0x2c988>
  4314f0:	b	431598 <wcrtomb@plt+0x2c978>
  4314f4:	cbz	w23, 431538 <wcrtomb@plt+0x2c918>
  4314f8:	cbnz	w21, 431508 <wcrtomb@plt+0x2c8e8>
  4314fc:	ldr	x0, [sp, #72]
  431500:	cbz	x0, 431508 <wcrtomb@plt+0x2c8e8>
  431504:	ldrb	w21, [x0]
  431508:	bl	4041f0 <__ctype_tolower_loc@plt>
  43150c:	ldr	x1, [x0]
  431510:	and	x0, x23, #0xff
  431514:	and	x2, x21, #0xff
  431518:	ldr	w0, [x1, x0, lsl #2]
  43151c:	ldr	w1, [x1, x2, lsl #2]
  431520:	sub	w19, w21, w23
  431524:	subs	w0, w0, w1
  431528:	csel	w0, w19, w0, eq  // eq = none
  43152c:	ldp	x21, x22, [sp, #32]
  431530:	ldp	x23, x24, [sp, #48]
  431534:	b	4313f4 <wcrtomb@plt+0x2c7d4>
  431538:	ldr	x0, [sp, #64]
  43153c:	cbnz	x0, 431584 <wcrtomb@plt+0x2c964>
  431540:	b	4314f8 <wcrtomb@plt+0x2c8d8>
  431544:	mov	w23, w1
  431548:	b	4314f8 <wcrtomb@plt+0x2c8d8>
  43154c:	cbnz	w22, 43158c <wcrtomb@plt+0x2c96c>
  431550:	and	w23, w23, #0xff
  431554:	and	w21, w21, #0xff
  431558:	orr	w1, w21, w23
  43155c:	cbnz	w1, 4314f4 <wcrtomb@plt+0x2c8d4>
  431560:	ldr	x0, [sp, #64]
  431564:	cbz	x0, 431544 <wcrtomb@plt+0x2c924>
  431568:	ldr	x1, [sp, #72]
  43156c:	cbz	x1, 431580 <wcrtomb@plt+0x2c960>
  431570:	bl	404510 <strcasecmp@plt>
  431574:	ldp	x21, x22, [sp, #32]
  431578:	ldp	x23, x24, [sp, #48]
  43157c:	b	4313f4 <wcrtomb@plt+0x2c7d4>
  431580:	ldr	x0, [sp, #64]
  431584:	ldrb	w23, [x0]
  431588:	b	4314f8 <wcrtomb@plt+0x2c8d8>
  43158c:	ldr	x0, [sp, #72]
  431590:	mov	w19, #0x0                   	// #0
  431594:	cbz	x0, 431550 <wcrtomb@plt+0x2c930>
  431598:	add	x0, sp, #0x48
  43159c:	bl	430128 <wcrtomb@plt+0x2b508>
  4315a0:	cmp	w0, #0x0
  4315a4:	cset	w22, ne  // ne = any
  4315a8:	cmp	w22, w19
  4315ac:	b.eq	431550 <wcrtomb@plt+0x2c930>  // b.none
  4315b0:	sub	w0, w19, w22
  4315b4:	ldp	x21, x22, [sp, #32]
  4315b8:	ldp	x23, x24, [sp, #48]
  4315bc:	b	4313f4 <wcrtomb@plt+0x2c7d4>
  4315c0:	stp	x29, x30, [sp, #-176]!
  4315c4:	mov	x29, sp
  4315c8:	stp	x19, x20, [sp, #16]
  4315cc:	stp	x21, x22, [sp, #32]
  4315d0:	stp	x23, x24, [sp, #48]
  4315d4:	stp	x25, x26, [sp, #64]
  4315d8:	stp	x27, x28, [sp, #80]
  4315dc:	mov	x26, x0
  4315e0:	mov	x27, x1
  4315e4:	ldr	x23, [x0, #32]
  4315e8:	ldr	x20, [x0]
  4315ec:	mov	x0, #0x20                  	// #32
  4315f0:	bl	404310 <malloc@plt>
  4315f4:	cbz	x0, 43161c <wcrtomb@plt+0x2c9fc>
  4315f8:	mov	x19, x0
  4315fc:	str	wzr, [x0, #8]
  431600:	str	xzr, [x0, #24]
  431604:	cbz	x20, 431798 <wcrtomb@plt+0x2cb78>
  431608:	ldr	w0, [x20, #24]
  43160c:	tbnz	w0, #2, 43163c <wcrtomb@plt+0x2ca1c>
  431610:	mov	x21, x20
  431614:	mov	w22, #0x0                   	// #0
  431618:	b	431660 <wcrtomb@plt+0x2ca40>
  43161c:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x18e64>
  431620:	add	x3, x3, #0xe70
  431624:	mov	w2, #0x1b9                 	// #441
  431628:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  43162c:	add	x1, x1, #0xbf8
  431630:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  431634:	add	x0, x0, #0xc08
  431638:	bl	404ac0 <__assert_fail@plt>
  43163c:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x18e64>
  431640:	add	x3, x3, #0xe70
  431644:	mov	w2, #0x1c3                 	// #451
  431648:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  43164c:	add	x1, x1, #0xbf8
  431650:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  431654:	add	x0, x0, #0xc10
  431658:	bl	404ac0 <__assert_fail@plt>
  43165c:	add	x21, x21, #0x30
  431660:	ldr	w0, [x21, #8]
  431664:	cbnz	w0, 431670 <wcrtomb@plt+0x2ca50>
  431668:	ldr	x0, [x21]
  43166c:	cbz	x0, 4316b4 <wcrtomb@plt+0x2ca94>
  431670:	ldr	w0, [x21, #24]
  431674:	tbnz	w0, #2, 431684 <wcrtomb@plt+0x2ca64>
  431678:	ldr	w0, [x19, #8]
  43167c:	add	w0, w0, #0x1
  431680:	str	w0, [x19, #8]
  431684:	ldr	w0, [x21, #24]
  431688:	tbnz	w0, #3, 43165c <wcrtomb@plt+0x2ca3c>
  43168c:	ldr	w24, [x21, #8]
  431690:	sub	w0, w24, #0x1
  431694:	cmp	w0, #0xfe
  431698:	b.hi	43165c <wcrtomb@plt+0x2ca3c>  // b.pmore
  43169c:	bl	404750 <__ctype_b_loc@plt>
  4316a0:	ldr	x0, [x0]
  4316a4:	ldrh	w0, [x0, w24, sxtw #1]
  4316a8:	ubfx	x0, x0, #14, #1
  4316ac:	add	w22, w22, w0
  4316b0:	b	43165c <wcrtomb@plt+0x2ca3c>
  4316b4:	ldr	x0, [x21, #32]
  4316b8:	cbnz	x0, 431670 <wcrtomb@plt+0x2ca50>
  4316bc:	ldr	w25, [x21, #40]
  4316c0:	cbnz	w25, 431670 <wcrtomb@plt+0x2ca50>
  4316c4:	ldr	w1, [x19, #8]
  4316c8:	lsl	x0, x1, #3
  4316cc:	sub	x0, x0, x1
  4316d0:	lsl	x0, x0, #3
  4316d4:	bl	404310 <malloc@plt>
  4316d8:	mov	x21, x0
  4316dc:	str	x0, [x19]
  4316e0:	add	w0, w22, #0x1
  4316e4:	bl	404310 <malloc@plt>
  4316e8:	mov	x28, x0
  4316ec:	str	x0, [x19, #16]
  4316f0:	cmp	x0, #0x0
  4316f4:	mov	x22, x0
  4316f8:	ccmp	x21, #0x0, #0x4, ne  // ne = any
  4316fc:	b.ne	431748 <wcrtomb@plt+0x2cb28>  // b.any
  431700:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x18e64>
  431704:	add	x3, x3, #0xe70
  431708:	mov	w2, #0x1d1                 	// #465
  43170c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  431710:	add	x1, x1, #0xbf8
  431714:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  431718:	add	x0, x0, #0xc20
  43171c:	bl	404ac0 <__assert_fail@plt>
  431720:	mov	w25, w0
  431724:	str	w25, [x21, #24]
  431728:	str	x27, [x21, #32]
  43172c:	str	x26, [x21, #40]
  431730:	b	431aec <wcrtomb@plt+0x2cecc>
  431734:	ldr	x0, [x20, #32]
  431738:	cbnz	x0, 431ae4 <wcrtomb@plt+0x2cec4>
  43173c:	ldr	w0, [x20, #40]
  431740:	cbnz	w0, 431ae4 <wcrtomb@plt+0x2cec4>
  431744:	add	x21, x21, #0x38
  431748:	ldr	w0, [x20, #8]
  43174c:	cbnz	w0, 431758 <wcrtomb@plt+0x2cb38>
  431750:	ldr	x0, [x20]
  431754:	cbz	x0, 431784 <wcrtomb@plt+0x2cb64>
  431758:	str	x20, [x21]
  43175c:	str	wzr, [x21, #8]
  431760:	str	x22, [x21, #16]
  431764:	ldr	w0, [x20, #40]
  431768:	cbnz	w0, 431720 <wcrtomb@plt+0x2cb00>
  43176c:	ldr	x0, [x20]
  431770:	cbnz	x0, 431724 <wcrtomb@plt+0x2cb04>
  431774:	ldr	w0, [x20, #8]
  431778:	cmp	w0, #0x0
  43177c:	cinc	w25, w25, eq  // eq = none
  431780:	b	431724 <wcrtomb@plt+0x2cb04>
  431784:	ldr	x0, [x20, #32]
  431788:	cbnz	x0, 431758 <wcrtomb@plt+0x2cb38>
  43178c:	ldr	w0, [x20, #40]
  431790:	cbnz	w0, 431758 <wcrtomb@plt+0x2cb38>
  431794:	strb	wzr, [x22]
  431798:	cbz	x23, 431b24 <wcrtomb@plt+0x2cf04>
  43179c:	ldr	x0, [x23]
  4317a0:	cbz	x0, 431b24 <wcrtomb@plt+0x2cf04>
  4317a4:	str	x27, [sp, #144]
  4317a8:	add	x0, x19, #0x18
  4317ac:	str	x0, [sp, #168]
  4317b0:	b	4317e4 <wcrtomb@plt+0x2cbc4>
  4317b4:	ldr	x1, [sp, #168]
  4317b8:	b	431870 <wcrtomb@plt+0x2cc50>
  4317bc:	str	w21, [x19, #8]
  4317c0:	ldr	x0, [x22]
  4317c4:	str	x0, [x19]
  4317c8:	ldr	x0, [x22, #16]
  4317cc:	str	x0, [x19, #16]
  4317d0:	str	wzr, [x22, #8]
  4317d4:	mov	x0, x22
  4317d8:	bl	43019c <wcrtomb@plt+0x2b57c>
  4317dc:	ldr	x0, [x23, #32]!
  4317e0:	cbz	x0, 431b24 <wcrtomb@plt+0x2cf04>
  4317e4:	ldr	w21, [x23, #24]
  4317e8:	cbnz	w21, 4317f8 <wcrtomb@plt+0x2cbd8>
  4317ec:	ldr	x0, [x23, #16]
  4317f0:	ldr	x1, [sp, #144]
  4317f4:	cbz	x0, 43184c <wcrtomb@plt+0x2cc2c>
  4317f8:	ldr	x22, [x23, #16]
  4317fc:	ldr	x20, [x26, #32]
  431800:	sub	x20, x23, x20
  431804:	asr	x20, x20, #5
  431808:	mov	x0, #0x30                  	// #48
  43180c:	bl	404310 <malloc@plt>
  431810:	mov	x1, x0
  431814:	cbz	x0, 43184c <wcrtomb@plt+0x2cc2c>
  431818:	str	w21, [x0, #12]
  43181c:	str	x22, [x0]
  431820:	str	w20, [x0, #8]
  431824:	str	x27, [x0, #16]
  431828:	str	x26, [x0, #24]
  43182c:	mov	w0, #0x0                   	// #0
  431830:	cbz	x27, 43183c <wcrtomb@plt+0x2cc1c>
  431834:	ldr	w0, [x27, #32]
  431838:	add	w0, w0, #0x1
  43183c:	str	w0, [x1, #32]
  431840:	ldr	x0, [x19, #24]
  431844:	str	x0, [x1, #40]
  431848:	str	x1, [x19, #24]
  43184c:	ldr	x0, [x23]
  431850:	bl	4315c0 <wcrtomb@plt+0x2c9a0>
  431854:	mov	x22, x0
  431858:	ldr	x0, [x19, #24]
  43185c:	cbz	x0, 4317b4 <wcrtomb@plt+0x2cb94>
  431860:	mov	x1, x0
  431864:	ldr	x0, [x0, #40]
  431868:	cbnz	x0, 431860 <wcrtomb@plt+0x2cc40>
  43186c:	add	x1, x1, #0x28
  431870:	ldr	x0, [x22, #24]
  431874:	str	x0, [x1]
  431878:	str	xzr, [x22, #24]
  43187c:	ldr	w21, [x22, #8]
  431880:	cbz	w21, 4317d4 <wcrtomb@plt+0x2cbb4>
  431884:	ldr	w20, [x19, #8]
  431888:	cbz	w20, 4317bc <wcrtomb@plt+0x2cb9c>
  43188c:	add	w0, w21, w20
  431890:	str	w0, [sp, #156]
  431894:	add	w1, w21, w20
  431898:	lsl	x0, x1, #3
  43189c:	sub	x0, x0, x1
  4318a0:	lsl	x0, x0, #3
  4318a4:	bl	404310 <malloc@plt>
  4318a8:	str	x0, [sp, #136]
  4318ac:	ldr	x25, [x19, #16]
  4318b0:	mov	x0, x25
  4318b4:	bl	403ff0 <strlen@plt>
  4318b8:	mov	w24, w0
  4318bc:	str	x24, [sp, #104]
  4318c0:	ldr	x28, [x22, #16]
  4318c4:	mov	x0, x28
  4318c8:	bl	403ff0 <strlen@plt>
  4318cc:	add	x0, x0, #0x1
  4318d0:	add	x0, x0, x24
  4318d4:	bl	404310 <malloc@plt>
  4318d8:	mov	x24, x0
  4318dc:	ldr	x0, [sp, #136]
  4318e0:	cmp	x0, #0x0
  4318e4:	ccmp	x24, #0x0, #0x4, ne  // ne = any
  4318e8:	b.eq	43198c <wcrtomb@plt+0x2cd6c>  // b.none
  4318ec:	ldr	x1, [x19]
  4318f0:	str	x1, [sp, #160]
  4318f4:	ubfiz	x2, x20, #3, #32
  4318f8:	sub	x2, x2, w20, uxtw
  4318fc:	lsl	x2, x2, #3
  431900:	ldr	x0, [sp, #136]
  431904:	bl	404820 <mempcpy@plt>
  431908:	ubfiz	x2, x21, #3, #32
  43190c:	sub	x2, x2, w21, uxtw
  431910:	lsl	x2, x2, #3
  431914:	ldr	x1, [x22]
  431918:	bl	403f70 <memcpy@plt>
  43191c:	ldr	x2, [sp, #104]
  431920:	mov	x1, x25
  431924:	mov	x0, x24
  431928:	bl	403f70 <memcpy@plt>
  43192c:	sub	w20, w20, #0x1
  431930:	add	x20, x20, #0x1
  431934:	lsl	x0, x20, #3
  431938:	sub	x20, x0, x20
  43193c:	ldr	x1, [sp, #136]
  431940:	add	x20, x1, x20, lsl #3
  431944:	ldr	x0, [x1, #16]
  431948:	sub	x0, x0, x25
  43194c:	add	x0, x24, x0
  431950:	str	x0, [x1, #16]
  431954:	add	x1, x1, #0x38
  431958:	cmp	x1, x20
  43195c:	b.ne	431944 <wcrtomb@plt+0x2cd24>  // b.any
  431960:	ldr	x0, [sp, #104]
  431964:	add	x1, x24, x0
  431968:	str	x1, [sp, #112]
  43196c:	sub	w21, w21, #0x1
  431970:	add	x21, x21, #0x1
  431974:	lsl	x0, x21, #3
  431978:	sub	x21, x0, x21
  43197c:	add	x0, x20, x21, lsl #3
  431980:	str	x0, [sp, #128]
  431984:	str	x1, [sp, #104]
  431988:	b	431a00 <wcrtomb@plt+0x2cde0>
  43198c:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x18e64>
  431990:	add	x3, x3, #0xe70
  431994:	add	x3, x3, #0x10
  431998:	mov	w2, #0x366                 	// #870
  43199c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  4319a0:	add	x1, x1, #0xbf8
  4319a4:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  4319a8:	add	x0, x0, #0xc48
  4319ac:	bl	404ac0 <__assert_fail@plt>
  4319b0:	ldr	x0, [sp, #112]
  4319b4:	cmp	x24, x0
  4319b8:	b.cs	4319dc <wcrtomb@plt+0x2cdbc>  // b.hs, b.nlast
  4319bc:	mov	x0, x24
  4319c0:	ldrb	w2, [x0]
  4319c4:	cmp	w2, w1
  4319c8:	b.eq	4319e8 <wcrtomb@plt+0x2cdc8>  // b.none
  4319cc:	add	x0, x0, #0x1
  4319d0:	ldr	x2, [sp, #112]
  4319d4:	cmp	x2, x0
  4319d8:	b.ne	4319c0 <wcrtomb@plt+0x2cda0>  // b.any
  4319dc:	ldr	x0, [sp, #104]
  4319e0:	strb	w1, [x0], #1
  4319e4:	str	x0, [sp, #104]
  4319e8:	add	x28, x28, #0x1
  4319ec:	b	431a68 <wcrtomb@plt+0x2ce48>
  4319f0:	add	x20, x20, #0x38
  4319f4:	ldr	x0, [sp, #128]
  4319f8:	cmp	x20, x0
  4319fc:	b.eq	431a2c <wcrtomb@plt+0x2ce0c>  // b.none
  431a00:	ldr	x0, [sp, #104]
  431a04:	str	x0, [x20, #16]
  431a08:	ldr	w0, [x20, #8]
  431a0c:	ldr	x21, [x20]
  431a10:	cbz	w0, 4319f0 <wcrtomb@plt+0x2cdd0>
  431a14:	sub	w0, w0, #0x1
  431a18:	add	x0, x0, #0x1
  431a1c:	add	x0, x0, x0, lsl #1
  431a20:	add	x0, x21, x0, lsl #4
  431a24:	str	x0, [sp, #120]
  431a28:	b	431a78 <wcrtomb@plt+0x2ce58>
  431a2c:	ldr	x0, [sp, #104]
  431a30:	strb	wzr, [x0]
  431a34:	ldr	x0, [sp, #160]
  431a38:	bl	4047c0 <free@plt>
  431a3c:	ldr	x0, [x19, #16]
  431a40:	bl	4047c0 <free@plt>
  431a44:	ldr	x0, [sp, #136]
  431a48:	str	x0, [x19]
  431a4c:	ldr	w0, [sp, #156]
  431a50:	str	w0, [x19, #8]
  431a54:	str	x24, [x19, #16]
  431a58:	b	4317d4 <wcrtomb@plt+0x2cbb4>
  431a5c:	ldrb	w1, [x28]
  431a60:	cmp	w1, w25
  431a64:	b.eq	4319b0 <wcrtomb@plt+0x2cd90>  // b.none
  431a68:	add	x21, x21, #0x30
  431a6c:	ldr	x0, [sp, #120]
  431a70:	cmp	x0, x21
  431a74:	b.eq	4319f0 <wcrtomb@plt+0x2cdd0>  // b.none
  431a78:	ldr	w0, [x21, #24]
  431a7c:	tbnz	w0, #3, 431a68 <wcrtomb@plt+0x2ce48>
  431a80:	ldr	w25, [x21, #8]
  431a84:	sub	w0, w25, #0x1
  431a88:	cmp	w0, #0xfe
  431a8c:	b.hi	431a68 <wcrtomb@plt+0x2ce48>  // b.pmore
  431a90:	bl	404750 <__ctype_b_loc@plt>
  431a94:	ldr	x0, [x0]
  431a98:	ldrh	w0, [x0, w25, sxtw #1]
  431a9c:	tbnz	w0, #14, 431a5c <wcrtomb@plt+0x2ce3c>
  431aa0:	b	431a68 <wcrtomb@plt+0x2ce48>
  431aa4:	and	w24, w24, #0xff
  431aa8:	mov	x0, x28
  431aac:	cmp	x28, x22
  431ab0:	b.cs	431acc <wcrtomb@plt+0x2ceac>  // b.hs, b.nlast
  431ab4:	ldrb	w1, [x0]
  431ab8:	cmp	w1, w24
  431abc:	b.eq	431ad0 <wcrtomb@plt+0x2ceb0>  // b.none
  431ac0:	add	x0, x0, #0x1
  431ac4:	cmp	x22, x0
  431ac8:	b.ne	431ab4 <wcrtomb@plt+0x2ce94>  // b.any
  431acc:	strb	w24, [x22], #1
  431ad0:	add	x20, x20, #0x30
  431ad4:	ldr	w0, [x20, #8]
  431ad8:	cbnz	w0, 431ae4 <wcrtomb@plt+0x2cec4>
  431adc:	ldr	x0, [x20]
  431ae0:	cbz	x0, 431734 <wcrtomb@plt+0x2cb14>
  431ae4:	ldr	w0, [x20, #24]
  431ae8:	tbz	w0, #2, 431744 <wcrtomb@plt+0x2cb24>
  431aec:	ldr	w0, [x21, #8]
  431af0:	add	w0, w0, #0x1
  431af4:	str	w0, [x21, #8]
  431af8:	ldr	w0, [x20, #24]
  431afc:	tbnz	w0, #3, 431ad0 <wcrtomb@plt+0x2ceb0>
  431b00:	ldr	w24, [x20, #8]
  431b04:	sub	w0, w24, #0x1
  431b08:	cmp	w0, #0xfe
  431b0c:	b.hi	431ad0 <wcrtomb@plt+0x2ceb0>  // b.pmore
  431b10:	bl	404750 <__ctype_b_loc@plt>
  431b14:	ldr	x0, [x0]
  431b18:	ldrh	w0, [x0, w24, sxtw #1]
  431b1c:	tbnz	w0, #14, 431aa4 <wcrtomb@plt+0x2ce84>
  431b20:	b	431ad0 <wcrtomb@plt+0x2ceb0>
  431b24:	mov	x0, x19
  431b28:	ldp	x19, x20, [sp, #16]
  431b2c:	ldp	x21, x22, [sp, #32]
  431b30:	ldp	x23, x24, [sp, #48]
  431b34:	ldp	x25, x26, [sp, #64]
  431b38:	ldp	x27, x28, [sp, #80]
  431b3c:	ldp	x29, x30, [sp], #176
  431b40:	ret

0000000000431b44 <argp_failure@@Base>:
  431b44:	stp	x29, x30, [sp, #-496]!
  431b48:	mov	x29, sp
  431b4c:	stp	x19, x20, [sp, #16]
  431b50:	stp	x21, x22, [sp, #32]
  431b54:	str	x23, [sp, #48]
  431b58:	mov	x20, x0
  431b5c:	mov	w23, w1
  431b60:	mov	w22, w2
  431b64:	mov	x21, x3
  431b68:	str	x4, [sp, #464]
  431b6c:	str	x5, [sp, #472]
  431b70:	str	x6, [sp, #480]
  431b74:	str	x7, [sp, #488]
  431b78:	str	q0, [sp, #336]
  431b7c:	str	q1, [sp, #352]
  431b80:	str	q2, [sp, #368]
  431b84:	str	q3, [sp, #384]
  431b88:	str	q4, [sp, #400]
  431b8c:	str	q5, [sp, #416]
  431b90:	str	q6, [sp, #432]
  431b94:	str	q7, [sp, #448]
  431b98:	cbz	x0, 431d00 <argp_failure@@Base+0x1bc>
  431b9c:	ldr	w0, [x0, #28]
  431ba0:	tbnz	w0, #1, 431cec <argp_failure@@Base+0x1a8>
  431ba4:	ldr	x19, [x20, #72]
  431ba8:	cbz	x19, 431cec <argp_failure@@Base+0x1a8>
  431bac:	mov	x0, x19
  431bb0:	bl	404090 <flockfile@plt>
  431bb4:	ldr	x0, [x20, #64]
  431bb8:	mov	x1, x19
  431bbc:	bl	4049e0 <fputs_unlocked@plt>
  431bc0:	cbz	x21, 431c54 <argp_failure@@Base+0x110>
  431bc4:	add	x0, sp, #0x1f0
  431bc8:	str	x0, [sp, #104]
  431bcc:	str	x0, [sp, #112]
  431bd0:	add	x0, sp, #0x1d0
  431bd4:	str	x0, [sp, #120]
  431bd8:	mov	w0, #0xffffffe0            	// #-32
  431bdc:	str	w0, [sp, #128]
  431be0:	mov	w0, #0xffffff80            	// #-128
  431be4:	str	w0, [sp, #132]
  431be8:	ldr	x0, [x19, #40]
  431bec:	ldr	x1, [x19, #48]
  431bf0:	cmp	x0, x1
  431bf4:	b.cs	431d20 <argp_failure@@Base+0x1dc>  // b.hs, b.nlast
  431bf8:	add	x1, x0, #0x1
  431bfc:	str	x1, [x19, #40]
  431c00:	mov	w1, #0x3a                  	// #58
  431c04:	strb	w1, [x0]
  431c08:	ldr	x0, [x19, #40]
  431c0c:	ldr	x1, [x19, #48]
  431c10:	cmp	x0, x1
  431c14:	b.cs	431d30 <argp_failure@@Base+0x1ec>  // b.hs, b.nlast
  431c18:	add	x1, x0, #0x1
  431c1c:	str	x1, [x19, #40]
  431c20:	mov	w1, #0x20                  	// #32
  431c24:	strb	w1, [x0]
  431c28:	ldp	x2, x3, [sp, #104]
  431c2c:	stp	x2, x3, [sp, #136]
  431c30:	ldp	x0, x1, [sp, #120]
  431c34:	stp	x0, x1, [sp, #152]
  431c38:	stp	x2, x3, [sp, #64]
  431c3c:	stp	x0, x1, [sp, #80]
  431c40:	add	x3, sp, #0x40
  431c44:	mov	x2, x21
  431c48:	mov	w1, #0x1                   	// #1
  431c4c:	mov	x0, x19
  431c50:	bl	4044b0 <__vfprintf_chk@plt>
  431c54:	cbz	w22, 431cb4 <argp_failure@@Base+0x170>
  431c58:	ldr	x0, [x19, #40]
  431c5c:	ldr	x1, [x19, #48]
  431c60:	cmp	x0, x1
  431c64:	b.cs	431d40 <argp_failure@@Base+0x1fc>  // b.hs, b.nlast
  431c68:	add	x1, x0, #0x1
  431c6c:	str	x1, [x19, #40]
  431c70:	mov	w1, #0x3a                  	// #58
  431c74:	strb	w1, [x0]
  431c78:	ldr	x0, [x19, #40]
  431c7c:	ldr	x1, [x19, #48]
  431c80:	cmp	x0, x1
  431c84:	b.cs	431d50 <argp_failure@@Base+0x20c>  // b.hs, b.nlast
  431c88:	add	x1, x0, #0x1
  431c8c:	str	x1, [x19, #40]
  431c90:	mov	w1, #0x20                  	// #32
  431c94:	strb	w1, [x0]
  431c98:	mov	x2, #0xc8                  	// #200
  431c9c:	add	x1, sp, #0x88
  431ca0:	mov	w0, w22
  431ca4:	bl	4044a0 <strerror_r@plt>
  431ca8:	cbz	x0, 431d60 <argp_failure@@Base+0x21c>
  431cac:	mov	x1, x19
  431cb0:	bl	4049e0 <fputs_unlocked@plt>
  431cb4:	ldr	x0, [x19, #40]
  431cb8:	ldr	x1, [x19, #48]
  431cbc:	cmp	x0, x1
  431cc0:	b.cs	431d88 <argp_failure@@Base+0x244>  // b.hs, b.nlast
  431cc4:	add	x1, x0, #0x1
  431cc8:	str	x1, [x19, #40]
  431ccc:	mov	w1, #0xa                   	// #10
  431cd0:	strb	w1, [x0]
  431cd4:	mov	x0, x19
  431cd8:	bl	404330 <funlockfile@plt>
  431cdc:	cbz	w23, 431cec <argp_failure@@Base+0x1a8>
  431ce0:	cbz	x20, 431d98 <argp_failure@@Base+0x254>
  431ce4:	ldr	w0, [x20, #28]
  431ce8:	tbz	w0, #5, 431d98 <argp_failure@@Base+0x254>
  431cec:	ldp	x19, x20, [sp, #16]
  431cf0:	ldp	x21, x22, [sp, #32]
  431cf4:	ldr	x23, [sp, #48]
  431cf8:	ldp	x29, x30, [sp], #496
  431cfc:	ret
  431d00:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  431d04:	ldr	x19, [x0, #1096]
  431d08:	cbz	x19, 431cec <argp_failure@@Base+0x1a8>
  431d0c:	mov	x0, x19
  431d10:	bl	404090 <flockfile@plt>
  431d14:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  431d18:	ldr	x0, [x0, #1128]
  431d1c:	b	431bb8 <argp_failure@@Base+0x74>
  431d20:	mov	w1, #0x3a                  	// #58
  431d24:	mov	x0, x19
  431d28:	bl	404690 <__overflow@plt>
  431d2c:	b	431c08 <argp_failure@@Base+0xc4>
  431d30:	mov	w1, #0x20                  	// #32
  431d34:	mov	x0, x19
  431d38:	bl	404690 <__overflow@plt>
  431d3c:	b	431c28 <argp_failure@@Base+0xe4>
  431d40:	mov	w1, #0x3a                  	// #58
  431d44:	mov	x0, x19
  431d48:	bl	404690 <__overflow@plt>
  431d4c:	b	431c78 <argp_failure@@Base+0x134>
  431d50:	mov	w1, #0x20                  	// #32
  431d54:	mov	x0, x19
  431d58:	bl	404690 <__overflow@plt>
  431d5c:	b	431c98 <argp_failure@@Base+0x154>
  431d60:	mov	w0, w22
  431d64:	bl	4045b0 <strerror@plt>
  431d68:	cbnz	x0, 431cac <argp_failure@@Base+0x168>
  431d6c:	ldr	x0, [x20]
  431d70:	mov	w2, #0x5                   	// #5
  431d74:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  431d78:	add	x1, x1, #0xc68
  431d7c:	ldr	x0, [x0, #48]
  431d80:	bl	4049c0 <dcgettext@plt>
  431d84:	b	431cac <argp_failure@@Base+0x168>
  431d88:	mov	w1, #0xa                   	// #10
  431d8c:	mov	x0, x19
  431d90:	bl	404690 <__overflow@plt>
  431d94:	b	431cd4 <argp_failure@@Base+0x190>
  431d98:	mov	w0, w23
  431d9c:	bl	404020 <exit@plt>
  431da0:	stp	x29, x30, [sp, #-240]!
  431da4:	mov	x29, sp
  431da8:	stp	x19, x20, [sp, #16]
  431dac:	stp	x21, x22, [sp, #32]
  431db0:	stp	x23, x24, [sp, #48]
  431db4:	stp	x25, x26, [sp, #64]
  431db8:	stp	x27, x28, [sp, #80]
  431dbc:	str	x0, [x29, #168]
  431dc0:	str	x2, [x29, #120]
  431dc4:	cbz	x2, 432d58 <argp_failure@@Base+0x1214>
  431dc8:	mov	x20, x1
  431dcc:	mov	w24, w3
  431dd0:	mov	x27, x4
  431dd4:	mov	x0, x2
  431dd8:	bl	404090 <flockfile@plt>
  431ddc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  431de0:	ldr	w28, [x0, #964]
  431de4:	cbz	w28, 431e78 <argp_failure@@Base+0x334>
  431de8:	mov	x3, #0x0                   	// #0
  431dec:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  431df0:	ldrsw	x2, [x0, #960]
  431df4:	mov	x1, #0x0                   	// #0
  431df8:	ldr	x0, [x29, #120]
  431dfc:	bl	44e298 <_obstack_memory_used@@Base+0xd0fc>
  431e00:	mov	x19, x0
  431e04:	cbz	x0, 432230 <argp_failure@@Base+0x6ec>
  431e08:	mov	x28, #0x0                   	// #0
  431e0c:	mov	w0, #0xb                   	// #11
  431e10:	tst	w24, w0
  431e14:	b.ne	43223c <argp_failure@@Base+0x6f8>  // b.any
  431e18:	mov	w21, #0x0                   	// #0
  431e1c:	tst	x24, #0x3
  431e20:	b.ne	4322c4 <argp_failure@@Base+0x780>  // b.any
  431e24:	tbnz	w24, #4, 43251c <argp_failure@@Base+0x9d8>
  431e28:	tbnz	w24, #2, 432540 <argp_failure@@Base+0x9fc>
  431e2c:	tbz	w24, #3, 432cf8 <argp_failure@@Base+0x11b4>
  431e30:	ldr	w0, [x28, #8]
  431e34:	cbz	w0, 432cf8 <argp_failure@@Base+0x11b4>
  431e38:	cbnz	w21, 432574 <argp_failure@@Base+0xa30>
  431e3c:	str	xzr, [x29, #184]
  431e40:	str	wzr, [x29, #192]
  431e44:	str	wzr, [x29, #196]
  431e48:	ldr	x22, [x28]
  431e4c:	ldr	w0, [x28, #8]
  431e50:	cbz	w0, 432cf4 <argp_failure@@Base+0x11b0>
  431e54:	sub	w0, w0, #0x1
  431e58:	add	x0, x0, #0x1
  431e5c:	lsl	x1, x0, #3
  431e60:	sub	x0, x1, x0
  431e64:	add	x0, x22, x0, lsl #3
  431e68:	str	x0, [x29, #104]
  431e6c:	adrp	x27, 480000 <_obstack_memory_used@@Base+0x3ee64>
  431e70:	add	x27, x27, #0x3a0
  431e74:	b	432b88 <argp_failure@@Base+0x1044>
  431e78:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  431e7c:	add	x0, x0, #0xc80
  431e80:	bl	404af0 <getenv@plt>
  431e84:	mov	x21, x0
  431e88:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  431e8c:	add	x0, x0, #0x3a0
  431e90:	ldp	x2, x3, [x0]
  431e94:	stp	x2, x3, [x29, #200]
  431e98:	ldp	x2, x3, [x0, #16]
  431e9c:	stp	x2, x3, [x29, #216]
  431ea0:	ldr	x0, [x0, #32]
  431ea4:	str	x0, [x29, #232]
  431ea8:	cbz	x21, 431de8 <argp_failure@@Base+0x2a4>
  431eac:	ldrb	w0, [x21]
  431eb0:	cbz	w0, 431ed8 <argp_failure@@Base+0x394>
  431eb4:	bl	404750 <__ctype_b_loc@plt>
  431eb8:	mov	x26, x0
  431ebc:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  431ec0:	add	x0, x0, #0xe70
  431ec4:	str	x0, [x29, #144]
  431ec8:	add	x25, x0, #0xb0
  431ecc:	b	4320ec <argp_failure@@Base+0x5a8>
  431ed0:	tbnz	w1, #10, 431f64 <argp_failure@@Base+0x420>
  431ed4:	cbnz	w3, 4321c8 <argp_failure@@Base+0x684>
  431ed8:	ldr	w3, [x29, #232]
  431edc:	adrp	x19, 45a000 <_obstack_memory_used@@Base+0x18e64>
  431ee0:	add	x19, x19, #0xe70
  431ee4:	add	x19, x19, #0x20
  431ee8:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  431eec:	add	x1, x1, #0xe70
  431ef0:	add	x1, x1, #0xb0
  431ef4:	add	x2, x29, #0xc8
  431ef8:	add	x19, x19, #0x10
  431efc:	cmp	x19, x1
  431f00:	b.eq	432204 <argp_failure@@Base+0x6c0>  // b.none
  431f04:	ldrb	w0, [x19, #14]
  431f08:	cbnz	w0, 431ef8 <argp_failure@@Base+0x3b4>
  431f0c:	ldrb	w0, [x19, #15]
  431f10:	cmp	w0, #0x20
  431f14:	b.eq	431ef8 <argp_failure@@Base+0x3b4>  // b.none
  431f18:	and	x0, x0, #0xff
  431f1c:	ldr	w0, [x2, x0]
  431f20:	cmp	w0, w3
  431f24:	b.lt	431ef8 <argp_failure@@Base+0x3b4>  // b.tstop
  431f28:	ldr	x0, [x20]
  431f2c:	mov	w2, #0x5                   	// #5
  431f30:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  431f34:	add	x1, x1, #0xd08
  431f38:	ldr	x0, [x0, #48]
  431f3c:	bl	4049c0 <dcgettext@plt>
  431f40:	mov	x5, x19
  431f44:	adrp	x4, 45a000 <_obstack_memory_used@@Base+0x18e64>
  431f48:	add	x4, x4, #0xd40
  431f4c:	mov	x3, x0
  431f50:	mov	w2, #0x0                   	// #0
  431f54:	mov	w1, #0x0                   	// #0
  431f58:	mov	x0, x20
  431f5c:	bl	431b44 <argp_failure@@Base>
  431f60:	b	431de8 <argp_failure@@Base+0x2a4>
  431f64:	and	w1, w1, #0x8
  431f68:	cmp	w3, #0x2d
  431f6c:	mov	w2, #0x5f                  	// #95
  431f70:	ccmp	w3, w2, #0x4, ne  // ne = any
  431f74:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  431f78:	b.eq	432f18 <argp_failure@@Base+0x13d4>  // b.none
  431f7c:	mov	x19, x21
  431f80:	mov	w4, w2
  431f84:	ldrb	w2, [x19, #1]!
  431f88:	and	x1, x2, #0xff
  431f8c:	ldrh	w1, [x0, x1, lsl #1]
  431f90:	and	w1, w1, #0x8
  431f94:	cmp	w2, #0x2d
  431f98:	ccmp	w2, w4, #0x4, ne  // ne = any
  431f9c:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  431fa0:	b.ne	431f84 <argp_failure@@Base+0x440>  // b.any
  431fa4:	sub	x23, x19, x21
  431fa8:	mov	w1, w2
  431fac:	and	x2, x2, #0xff
  431fb0:	ldrh	w2, [x0, x2, lsl #1]
  431fb4:	tbz	w2, #13, 431fc8 <argp_failure@@Base+0x484>
  431fb8:	ldrb	w1, [x19, #1]!
  431fbc:	and	x2, x1, #0xff
  431fc0:	ldrh	w2, [x0, x2, lsl #1]
  431fc4:	tbnz	w2, #13, 431fb8 <argp_failure@@Base+0x474>
  431fc8:	cmp	w1, #0x2c
  431fcc:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  431fd0:	b.eq	432020 <argp_failure@@Base+0x4dc>  // b.none
  431fd4:	cmp	w1, #0x3d
  431fd8:	b.eq	431ffc <argp_failure@@Base+0x4b8>  // b.none
  431fdc:	ldrb	w1, [x19]
  431fe0:	ldrh	w0, [x0, x1, lsl #1]
  431fe4:	str	w28, [x29, #160]
  431fe8:	str	w28, [x29, #152]
  431fec:	tbnz	w0, #11, 432064 <argp_failure@@Base+0x520>
  431ff0:	ldr	x0, [x29, #144]
  431ff4:	add	x22, x0, #0x20
  431ff8:	b	432114 <argp_failure@@Base+0x5d0>
  431ffc:	add	x1, x19, #0x1
  432000:	ldrb	w2, [x19, #1]
  432004:	ldrh	w2, [x0, x2, lsl #1]
  432008:	tbz	w2, #13, 43205c <argp_failure@@Base+0x518>
  43200c:	ldrb	w2, [x1, #1]!
  432010:	ldrh	w2, [x0, x2, lsl #1]
  432014:	tbnz	w2, #13, 43200c <argp_failure@@Base+0x4c8>
  432018:	mov	x19, x1
  43201c:	b	431fdc <argp_failure@@Base+0x498>
  432020:	mov	w0, #0x1                   	// #1
  432024:	str	w0, [x29, #160]
  432028:	str	w0, [x29, #152]
  43202c:	cmp	w3, #0x6e
  432030:	b.ne	431ff0 <argp_failure@@Base+0x4ac>  // b.any
  432034:	ldrb	w0, [x21, #1]
  432038:	cmp	w0, #0x6f
  43203c:	b.ne	431ff0 <argp_failure@@Base+0x4ac>  // b.any
  432040:	ldrb	w0, [x21, #2]
  432044:	cmp	w0, #0x2d
  432048:	b.ne	431ff0 <argp_failure@@Base+0x4ac>  // b.any
  43204c:	add	x21, x21, #0x3
  432050:	sub	x23, x23, #0x3
  432054:	str	w28, [x29, #152]
  432058:	b	431ff0 <argp_failure@@Base+0x4ac>
  43205c:	mov	x19, x1
  432060:	b	431fdc <argp_failure@@Base+0x498>
  432064:	mov	w2, #0xa                   	// #10
  432068:	mov	x1, #0x0                   	// #0
  43206c:	mov	x0, x19
  432070:	bl	404780 <strtol@plt>
  432074:	str	w0, [x29, #152]
  432078:	ldr	x0, [x26]
  43207c:	ldrb	w1, [x19]
  432080:	ldrh	w1, [x0, x1, lsl #1]
  432084:	tbz	w1, #11, 432094 <argp_failure@@Base+0x550>
  432088:	ldrb	w1, [x19, #1]!
  43208c:	ldrh	w1, [x0, x1, lsl #1]
  432090:	tbnz	w1, #11, 432088 <argp_failure@@Base+0x544>
  432094:	ldrb	w1, [x19]
  432098:	ldrh	w1, [x0, x1, lsl #1]
  43209c:	tbz	w1, #13, 4320b4 <argp_failure@@Base+0x570>
  4320a0:	ldrb	w1, [x19, #1]!
  4320a4:	ldrh	w1, [x0, x1, lsl #1]
  4320a8:	tbnz	w1, #13, 4320a0 <argp_failure@@Base+0x55c>
  4320ac:	str	w28, [x29, #160]
  4320b0:	b	431ff0 <argp_failure@@Base+0x4ac>
  4320b4:	str	w28, [x29, #160]
  4320b8:	b	431ff0 <argp_failure@@Base+0x4ac>
  4320bc:	ldrb	w0, [x22, #15]
  4320c0:	add	x1, x29, #0xc8
  4320c4:	ldr	w2, [x29, #152]
  4320c8:	str	w2, [x1, x0]
  4320cc:	cmp	x22, x25
  4320d0:	b.eq	432188 <argp_failure@@Base+0x644>  // b.none
  4320d4:	ldrb	w0, [x19]
  4320d8:	cmp	w0, #0x2c
  4320dc:	cset	w0, eq  // eq = none
  4320e0:	cinc	x21, x19, eq  // eq = none
  4320e4:	ldrb	w0, [x19, w0, uxtw]
  4320e8:	cbz	w0, 431ed8 <argp_failure@@Base+0x394>
  4320ec:	ldr	x0, [x26]
  4320f0:	ldrb	w3, [x21]
  4320f4:	and	x1, x3, #0xff
  4320f8:	ldrh	w1, [x0, x1, lsl #1]
  4320fc:	tbz	w1, #13, 431ed0 <argp_failure@@Base+0x38c>
  432100:	add	x21, x21, #0x1
  432104:	b	4320f0 <argp_failure@@Base+0x5ac>
  432108:	add	x22, x22, #0x10
  43210c:	cmp	x22, x25
  432110:	b.eq	432188 <argp_failure@@Base+0x644>  // b.none
  432114:	mov	x0, x22
  432118:	bl	403ff0 <strlen@plt>
  43211c:	cmp	x0, x23
  432120:	b.ne	432108 <argp_failure@@Base+0x5c4>  // b.any
  432124:	mov	x2, x23
  432128:	mov	x1, x22
  43212c:	mov	x0, x21
  432130:	bl	4043c0 <strncmp@plt>
  432134:	cbnz	w0, 432108 <argp_failure@@Base+0x5c4>
  432138:	ldr	w0, [x29, #160]
  43213c:	cbz	w0, 4320bc <argp_failure@@Base+0x578>
  432140:	ldrb	w0, [x22, #14]
  432144:	cbnz	w0, 4320bc <argp_failure@@Base+0x578>
  432148:	mov	x0, x20
  43214c:	cbz	x20, 432158 <argp_failure@@Base+0x614>
  432150:	ldr	x0, [x20]
  432154:	ldr	x0, [x0, #48]
  432158:	mov	w2, #0x5                   	// #5
  43215c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  432160:	add	x1, x1, #0xc90
  432164:	bl	4049c0 <dcgettext@plt>
  432168:	mov	x5, x21
  43216c:	mov	w4, w23
  432170:	mov	x3, x0
  432174:	mov	w2, #0x0                   	// #0
  432178:	mov	w1, #0x0                   	// #0
  43217c:	mov	x0, x20
  432180:	bl	431b44 <argp_failure@@Base>
  432184:	b	4320cc <argp_failure@@Base+0x588>
  432188:	mov	x0, x20
  43218c:	cbz	x20, 432198 <argp_failure@@Base+0x654>
  432190:	ldr	x0, [x20]
  432194:	ldr	x0, [x0, #48]
  432198:	mov	w2, #0x5                   	// #5
  43219c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  4321a0:	add	x1, x1, #0xcc0
  4321a4:	bl	4049c0 <dcgettext@plt>
  4321a8:	mov	x5, x21
  4321ac:	mov	w4, w23
  4321b0:	mov	x3, x0
  4321b4:	mov	w2, #0x0                   	// #0
  4321b8:	mov	w1, #0x0                   	// #0
  4321bc:	mov	x0, x20
  4321c0:	bl	431b44 <argp_failure@@Base>
  4321c4:	b	4320d4 <argp_failure@@Base+0x590>
  4321c8:	mov	x0, x20
  4321cc:	cbz	x20, 4321d8 <argp_failure@@Base+0x694>
  4321d0:	ldr	x0, [x20]
  4321d4:	ldr	x0, [x0, #48]
  4321d8:	mov	w2, #0x5                   	// #5
  4321dc:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  4321e0:	add	x1, x1, #0xce8
  4321e4:	bl	4049c0 <dcgettext@plt>
  4321e8:	mov	x4, x21
  4321ec:	mov	x3, x0
  4321f0:	mov	w2, #0x0                   	// #0
  4321f4:	mov	w1, #0x0                   	// #0
  4321f8:	mov	x0, x20
  4321fc:	bl	431b44 <argp_failure@@Base>
  432200:	b	431ed8 <argp_failure@@Base+0x394>
  432204:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  432208:	add	x0, x0, #0x3a0
  43220c:	ldp	x2, x3, [x29, #200]
  432210:	stp	x2, x3, [x0]
  432214:	ldp	x2, x3, [x29, #216]
  432218:	stp	x2, x3, [x0, #16]
  43221c:	ldr	x1, [x29, #232]
  432220:	str	x1, [x0, #32]
  432224:	mov	w1, #0x1                   	// #1
  432228:	str	w1, [x0, #36]
  43222c:	b	431de8 <argp_failure@@Base+0x2a4>
  432230:	ldr	x0, [x29, #120]
  432234:	bl	404330 <funlockfile@plt>
  432238:	b	432d58 <argp_failure@@Base+0x1214>
  43223c:	mov	x1, #0x0                   	// #0
  432240:	ldr	x0, [x29, #168]
  432244:	bl	4315c0 <wcrtomb@plt+0x2c9a0>
  432248:	mov	x28, x0
  43224c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  432250:	add	x1, x1, #0xd48
  432254:	bl	4301f4 <wcrtomb@plt+0x2b5d4>
  432258:	cbz	x0, 432264 <argp_failure@@Base+0x720>
  43225c:	mov	w1, #0xffffffff            	// #-1
  432260:	str	w1, [x0, #24]
  432264:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  432268:	add	x1, x1, #0xd50
  43226c:	mov	x0, x28
  432270:	bl	4301f4 <wcrtomb@plt+0x2b5d4>
  432274:	cbz	x0, 432280 <argp_failure@@Base+0x73c>
  432278:	mov	w1, #0xffffffff            	// #-1
  43227c:	str	w1, [x0, #24]
  432280:	ldr	w0, [x28, #8]
  432284:	cbz	w0, 431e18 <argp_failure@@Base+0x2d4>
  432288:	ldr	x2, [x28]
  43228c:	mov	w0, #0x0                   	// #0
  432290:	str	w0, [x2, #48]
  432294:	add	w0, w0, #0x1
  432298:	add	x2, x2, #0x38
  43229c:	ldr	w1, [x28, #8]
  4322a0:	cmp	w0, w1
  4322a4:	b.cc	432290 <argp_failure@@Base+0x74c>  // b.lo, b.ul, b.last
  4322a8:	adrp	x3, 431000 <wcrtomb@plt+0x2c3e0>
  4322ac:	add	x3, x3, #0x358
  4322b0:	mov	x2, #0x38                  	// #56
  4322b4:	mov	w1, w1
  4322b8:	ldr	x0, [x28]
  4322bc:	bl	4041a0 <qsort@plt>
  4322c0:	b	431e18 <argp_failure@@Base+0x2d4>
  4322c4:	ldr	x0, [x29, #168]
  4322c8:	bl	4302bc <wcrtomb@plt+0x2b69c>
  4322cc:	mov	x2, x0
  4322d0:	add	x0, x0, #0xf
  4322d4:	and	x0, x0, #0xfffffffffffffff0
  4322d8:	sub	sp, sp, x0
  4322dc:	mov	x26, sp
  4322e0:	mov	w1, #0x0                   	// #0
  4322e4:	mov	x0, x26
  4322e8:	bl	404420 <memset@plt>
  4322ec:	mov	w22, #0x1                   	// #1
  4322f0:	adrp	x25, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4322f4:	add	x25, x25, #0x3a0
  4322f8:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  4322fc:	add	x0, x0, #0xd68
  432300:	str	x0, [x29, #152]
  432304:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  432308:	add	x0, x0, #0xd60
  43230c:	str	x0, [x29, #160]
  432310:	b	4323f0 <argp_failure@@Base+0x8ac>
  432314:	mov	x0, x19
  432318:	bl	44e32c <_obstack_memory_used@@Base+0xd190>
  43231c:	b	43240c <argp_failure@@Base+0x8c8>
  432320:	mov	w2, #0x5                   	// #5
  432324:	ldr	x1, [x29, #152]
  432328:	ldr	x0, [x29, #168]
  43232c:	ldr	x0, [x0, #48]
  432330:	bl	4049c0 <dcgettext@plt>
  432334:	mov	x3, x27
  432338:	mov	x2, x0
  43233c:	ldr	x1, [x29, #160]
  432340:	mov	x0, x19
  432344:	bl	44e96c <_obstack_memory_used@@Base+0xd7d0>
  432348:	b	43244c <argp_failure@@Base+0x908>
  43234c:	mov	x0, x19
  432350:	bl	44e32c <_obstack_memory_used@@Base+0xd190>
  432354:	b	432468 <argp_failure@@Base+0x924>
  432358:	mov	x1, x19
  43235c:	mov	x0, x28
  432360:	bl	430460 <wcrtomb@plt+0x2b840>
  432364:	orr	w24, w24, #0x2
  432368:	mov	x4, x19
  43236c:	mov	w3, #0x1                   	// #1
  432370:	add	x2, x29, #0xc8
  432374:	mov	x1, x20
  432378:	ldr	x0, [x29, #168]
  43237c:	bl	430914 <wcrtomb@plt+0x2bcf4>
  432380:	mov	w21, w0
  432384:	ldr	x0, [x19, #56]
  432388:	ldr	x1, [x19, #48]
  43238c:	sub	x0, x0, x1
  432390:	ldr	x1, [x19, #32]
  432394:	cmp	x0, x1
  432398:	b.hi	4324e8 <argp_failure@@Base+0x9a4>  // b.pmore
  43239c:	sxtw	x23, w23
  4323a0:	str	x23, [x19, #24]
  4323a4:	sxtw	x22, w22
  4323a8:	ldr	x0, [x19, #56]
  4323ac:	ldr	x1, [x19, #48]
  4323b0:	sub	x0, x0, x1
  4323b4:	ldr	x1, [x19, #32]
  4323b8:	cmp	x0, x1
  4323bc:	b.hi	4324f4 <argp_failure@@Base+0x9b0>  // b.pmore
  4323c0:	str	x22, [x19, #8]
  4323c4:	ldr	x1, [x19, #56]
  4323c8:	ldr	x0, [x19, #64]
  4323cc:	cmp	x1, x0
  4323d0:	b.cs	432500 <argp_failure@@Base+0x9bc>  // b.hs, b.nlast
  4323d4:	ldr	x0, [x19, #56]
  4323d8:	add	x1, x0, #0x1
  4323dc:	str	x1, [x19, #56]
  4323e0:	mov	w1, #0xa                   	// #10
  4323e4:	strb	w1, [x0]
  4323e8:	mov	w22, #0x0                   	// #0
  4323ec:	cbz	w21, 432514 <argp_failure@@Base+0x9d0>
  4323f0:	ldr	w21, [x25, #28]
  4323f4:	ldr	x0, [x19, #56]
  4323f8:	ldr	x1, [x19, #48]
  4323fc:	sub	x0, x0, x1
  432400:	ldr	x1, [x19, #32]
  432404:	cmp	x0, x1
  432408:	b.hi	432314 <argp_failure@@Base+0x7d0>  // b.pmore
  43240c:	ldr	x23, [x19, #24]
  432410:	sxtw	x21, w21
  432414:	str	x21, [x19, #24]
  432418:	str	x26, [x29, #200]
  43241c:	cbz	w22, 432320 <argp_failure@@Base+0x7dc>
  432420:	mov	w2, #0x5                   	// #5
  432424:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  432428:	add	x1, x1, #0xd58
  43242c:	ldr	x0, [x29, #168]
  432430:	ldr	x0, [x0, #48]
  432434:	bl	4049c0 <dcgettext@plt>
  432438:	mov	x3, x27
  43243c:	mov	x2, x0
  432440:	ldr	x1, [x29, #160]
  432444:	mov	x0, x19
  432448:	bl	44e96c <_obstack_memory_used@@Base+0xd7d0>
  43244c:	ldrsw	x21, [x25, #28]
  432450:	ldr	x0, [x19, #56]
  432454:	ldr	x1, [x19, #48]
  432458:	sub	x0, x0, x1
  43245c:	ldr	x1, [x19, #32]
  432460:	cmp	x0, x1
  432464:	b.hi	43234c <argp_failure@@Base+0x808>  // b.pmore
  432468:	ldr	x22, [x19, #8]
  43246c:	str	x21, [x19, #8]
  432470:	tbz	w24, #1, 432358 <argp_failure@@Base+0x814>
  432474:	ldr	w0, [x28, #8]
  432478:	cbz	w0, 432368 <argp_failure@@Base+0x824>
  43247c:	mov	w2, #0x5                   	// #5
  432480:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  432484:	add	x1, x1, #0xd70
  432488:	ldr	x0, [x29, #168]
  43248c:	ldr	x0, [x0, #48]
  432490:	bl	4049c0 <dcgettext@plt>
  432494:	str	x0, [x29, #144]
  432498:	bl	403ff0 <strlen@plt>
  43249c:	mov	x21, x0
  4324a0:	cbz	x0, 432368 <argp_failure@@Base+0x824>
  4324a4:	ldr	x0, [x19, #56]
  4324a8:	add	x0, x0, x21
  4324ac:	ldr	x1, [x19, #64]
  4324b0:	cmp	x1, x0
  4324b4:	b.cs	4324c8 <argp_failure@@Base+0x984>  // b.hs, b.nlast
  4324b8:	mov	x1, x21
  4324bc:	mov	x0, x19
  4324c0:	bl	44e874 <_obstack_memory_used@@Base+0xd6d8>
  4324c4:	cbz	w0, 432368 <argp_failure@@Base+0x824>
  4324c8:	mov	x2, x21
  4324cc:	ldr	x1, [x29, #144]
  4324d0:	ldr	x0, [x19, #56]
  4324d4:	bl	403f70 <memcpy@plt>
  4324d8:	ldr	x0, [x19, #56]
  4324dc:	add	x21, x0, x21
  4324e0:	str	x21, [x19, #56]
  4324e4:	b	432368 <argp_failure@@Base+0x824>
  4324e8:	mov	x0, x19
  4324ec:	bl	44e32c <_obstack_memory_used@@Base+0xd190>
  4324f0:	b	43239c <argp_failure@@Base+0x858>
  4324f4:	mov	x0, x19
  4324f8:	bl	44e32c <_obstack_memory_used@@Base+0xd190>
  4324fc:	b	4323c0 <argp_failure@@Base+0x87c>
  432500:	mov	x1, #0x1                   	// #1
  432504:	mov	x0, x19
  432508:	bl	44e874 <_obstack_memory_used@@Base+0xd6d8>
  43250c:	cbnz	w0, 4323d4 <argp_failure@@Base+0x890>
  432510:	b	4323e8 <argp_failure@@Base+0x8a4>
  432514:	mov	w21, #0x1                   	// #1
  432518:	b	431e24 <argp_failure@@Base+0x2e0>
  43251c:	mov	x5, x19
  432520:	mov	w4, #0x1                   	// #1
  432524:	mov	w3, #0x0                   	// #0
  432528:	mov	w2, #0x0                   	// #0
  43252c:	mov	x1, x20
  432530:	ldr	x0, [x29, #168]
  432534:	bl	430e80 <wcrtomb@plt+0x2c260>
  432538:	orr	w21, w21, w0
  43253c:	b	431e28 <argp_failure@@Base+0x2e4>
  432540:	mov	w2, #0x5                   	// #5
  432544:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  432548:	add	x1, x1, #0xd80
  43254c:	ldr	x0, [x29, #168]
  432550:	ldr	x0, [x0, #48]
  432554:	bl	4049c0 <dcgettext@plt>
  432558:	mov	x3, x27
  43255c:	mov	x2, x27
  432560:	mov	x1, x0
  432564:	mov	x0, x19
  432568:	bl	44e96c <_obstack_memory_used@@Base+0xd7d0>
  43256c:	mov	w21, #0x1                   	// #1
  432570:	b	431e2c <argp_failure@@Base+0x2e8>
  432574:	ldr	x1, [x19, #56]
  432578:	ldr	x0, [x19, #64]
  43257c:	cmp	x1, x0
  432580:	b.cs	43259c <argp_failure@@Base+0xa58>  // b.hs, b.nlast
  432584:	ldr	x0, [x19, #56]
  432588:	add	x1, x0, #0x1
  43258c:	str	x1, [x19, #56]
  432590:	mov	w1, #0xa                   	// #10
  432594:	strb	w1, [x0]
  432598:	b	431e3c <argp_failure@@Base+0x2f8>
  43259c:	mov	x1, #0x1                   	// #1
  4325a0:	mov	x0, x19
  4325a4:	bl	44e874 <_obstack_memory_used@@Base+0xd6d8>
  4325a8:	cbnz	w0, 432584 <argp_failure@@Base+0xa40>
  4325ac:	b	431e3c <argp_failure@@Base+0x2f8>
  4325b0:	mov	x0, x19
  4325b4:	bl	44e32c <_obstack_memory_used@@Base+0xd190>
  4325b8:	b	432ba8 <argp_failure@@Base+0x1064>
  4325bc:	add	x0, x0, #0x30
  4325c0:	cmp	x0, x1
  4325c4:	b.eq	4325e8 <argp_failure@@Base+0xaa4>  // b.none
  4325c8:	ldr	x2, [x0]
  4325cc:	cbz	x2, 4325bc <argp_failure@@Base+0xa78>
  4325d0:	ldr	w2, [x0, #24]
  4325d4:	tbnz	w2, #1, 4325bc <argp_failure@@Base+0xa78>
  4325d8:	mov	w0, #0x1                   	// #1
  4325dc:	str	w0, [x29, #144]
  4325e0:	b	4325e8 <argp_failure@@Base+0xaa4>
  4325e4:	str	wzr, [x29, #144]
  4325e8:	ldr	w23, [x27, #8]
  4325ec:	ldr	x0, [x19, #56]
  4325f0:	ldr	x1, [x19, #48]
  4325f4:	sub	x0, x0, x1
  4325f8:	ldr	x1, [x19, #32]
  4325fc:	cmp	x0, x1
  432600:	b.hi	43263c <argp_failure@@Base+0xaf8>  // b.pmore
  432604:	sxtw	x23, w23
  432608:	str	x23, [x19, #24]
  43260c:	ldr	w0, [x22, #8]
  432610:	cbz	w0, 432724 <argp_failure@@Base+0xbe0>
  432614:	sub	w0, w0, #0x1
  432618:	add	x0, x0, #0x1
  43261c:	add	x0, x0, x0, lsl #1
  432620:	add	x0, x21, x0, lsl #4
  432624:	str	x0, [x29, #152]
  432628:	mov	x23, x21
  43262c:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  432630:	add	x0, x0, #0xdb8
  432634:	str	x0, [x29, #112]
  432638:	b	432ee8 <argp_failure@@Base+0x13a4>
  43263c:	mov	x0, x19
  432640:	bl	44e32c <_obstack_memory_used@@Base+0xd190>
  432644:	b	432604 <argp_failure@@Base+0xac0>
  432648:	ldr	x0, [x29, #160]
  43264c:	tbz	w0, #1, 432658 <argp_failure@@Base+0xb14>
  432650:	add	x26, x26, #0x1
  432654:	b	432ed8 <argp_failure@@Base+0x1394>
  432658:	add	x1, x29, #0xc8
  43265c:	ldr	w0, [x27, #8]
  432660:	bl	430cfc <wcrtomb@plt+0x2c0dc>
  432664:	ldr	x1, [x19, #56]
  432668:	ldr	x0, [x19, #64]
  43266c:	cmp	x1, x0
  432670:	b.cs	4326e8 <argp_failure@@Base+0xba4>  // b.hs, b.nlast
  432674:	ldr	x0, [x19, #56]
  432678:	add	x1, x0, #0x1
  43267c:	str	x1, [x19, #56]
  432680:	mov	w1, #0x2d                  	// #45
  432684:	strb	w1, [x0]
  432688:	ldrb	w25, [x26]
  43268c:	ldr	x1, [x19, #56]
  432690:	ldr	x0, [x19, #64]
  432694:	cmp	x1, x0
  432698:	b.cs	4326fc <argp_failure@@Base+0xbb8>  // b.hs, b.nlast
  43269c:	ldr	x0, [x19, #56]
  4326a0:	add	x1, x0, #0x1
  4326a4:	str	x1, [x19, #56]
  4326a8:	strb	w25, [x0]
  4326ac:	ldr	w0, [x29, #144]
  4326b0:	cbz	w0, 4326bc <argp_failure@@Base+0xb78>
  4326b4:	ldr	w0, [x27]
  4326b8:	cbz	w0, 432710 <argp_failure@@Base+0xbcc>
  4326bc:	mov	x3, x20
  4326c0:	cbz	x20, 4326cc <argp_failure@@Base+0xb88>
  4326c4:	ldr	x0, [x20]
  4326c8:	ldr	x3, [x0, #48]
  4326cc:	mov	x4, x19
  4326d0:	ldr	x2, [x29, #112]
  4326d4:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  4326d8:	add	x1, x1, #0xac8
  4326dc:	mov	x0, x21
  4326e0:	bl	4300ac <wcrtomb@plt+0x2b48c>
  4326e4:	b	432650 <argp_failure@@Base+0xb0c>
  4326e8:	mov	x1, #0x1                   	// #1
  4326ec:	mov	x0, x19
  4326f0:	bl	44e874 <_obstack_memory_used@@Base+0xd6d8>
  4326f4:	cbnz	w0, 432674 <argp_failure@@Base+0xb30>
  4326f8:	b	432688 <argp_failure@@Base+0xb44>
  4326fc:	mov	x1, #0x1                   	// #1
  432700:	mov	x0, x19
  432704:	bl	44e874 <_obstack_memory_used@@Base+0xd6d8>
  432708:	cbnz	w0, 43269c <argp_failure@@Base+0xb58>
  43270c:	b	4326ac <argp_failure@@Base+0xb68>
  432710:	ldr	x0, [x21, #16]
  432714:	cbz	x0, 432650 <argp_failure@@Base+0xb0c>
  432718:	mov	w0, #0x1                   	// #1
  43271c:	str	w0, [x29, #196]
  432720:	b	432650 <argp_failure@@Base+0xb0c>
  432724:	ldr	w0, [x21, #24]
  432728:	tbz	w0, #3, 432818 <argp_failure@@Base+0xcd4>
  43272c:	ldr	w23, [x27, #16]
  432730:	ldr	x0, [x19, #56]
  432734:	ldr	x1, [x19, #48]
  432738:	sub	x0, x0, x1
  43273c:	ldr	x1, [x19, #32]
  432740:	cmp	x0, x1
  432744:	b.hi	432774 <argp_failure@@Base+0xc30>  // b.pmore
  432748:	sxtw	x23, w23
  43274c:	str	x23, [x19, #24]
  432750:	ldr	w0, [x22, #8]
  432754:	cbz	w0, 4328d8 <argp_failure@@Base+0xd94>
  432758:	sub	w26, w0, #0x1
  43275c:	add	x26, x26, #0x1
  432760:	add	x26, x26, x26, lsl #1
  432764:	add	x26, x21, x26, lsl #4
  432768:	mov	x23, x21
  43276c:	str	x20, [x29, #160]
  432770:	b	4327a8 <argp_failure@@Base+0xc64>
  432774:	mov	x0, x19
  432778:	bl	44e32c <_obstack_memory_used@@Base+0xd190>
  43277c:	b	432748 <argp_failure@@Base+0xc04>
  432780:	mov	x2, x25
  432784:	ldr	x1, [x29, #152]
  432788:	ldr	x0, [x19, #56]
  43278c:	bl	403f70 <memcpy@plt>
  432790:	ldr	x0, [x19, #56]
  432794:	add	x25, x0, x25
  432798:	str	x25, [x19, #56]
  43279c:	add	x23, x23, #0x30
  4327a0:	cmp	x23, x26
  4327a4:	b.eq	4328d8 <argp_failure@@Base+0xd94>  // b.none
  4327a8:	ldr	x0, [x23]
  4327ac:	cbz	x0, 43279c <argp_failure@@Base+0xc58>
  4327b0:	ldr	w0, [x23, #24]
  4327b4:	tbnz	w0, #1, 43279c <argp_failure@@Base+0xc58>
  4327b8:	add	x1, x29, #0xc8
  4327bc:	ldr	w0, [x27, #16]
  4327c0:	bl	430cfc <wcrtomb@plt+0x2c0dc>
  4327c4:	ldr	x0, [x29, #160]
  4327c8:	cbz	x20, 4327d4 <argp_failure@@Base+0xc90>
  4327cc:	ldr	x0, [x20]
  4327d0:	ldr	x0, [x0, #48]
  4327d4:	mov	w2, #0x5                   	// #5
  4327d8:	ldr	x1, [x23]
  4327dc:	bl	4049c0 <dcgettext@plt>
  4327e0:	str	x0, [x29, #152]
  4327e4:	bl	403ff0 <strlen@plt>
  4327e8:	mov	x25, x0
  4327ec:	cbz	x0, 43279c <argp_failure@@Base+0xc58>
  4327f0:	ldr	x0, [x19, #56]
  4327f4:	add	x0, x0, x25
  4327f8:	ldr	x1, [x19, #64]
  4327fc:	cmp	x1, x0
  432800:	b.cs	432780 <argp_failure@@Base+0xc3c>  // b.hs, b.nlast
  432804:	mov	x1, x25
  432808:	mov	x0, x19
  43280c:	bl	44e874 <_obstack_memory_used@@Base+0xd6d8>
  432810:	cbz	w0, 43279c <argp_failure@@Base+0xc58>
  432814:	b	432780 <argp_failure@@Base+0xc3c>
  432818:	ldr	w23, [x27, #12]
  43281c:	ldr	x0, [x19, #56]
  432820:	ldr	x1, [x19, #48]
  432824:	sub	x0, x0, x1
  432828:	ldr	x1, [x19, #32]
  43282c:	cmp	x0, x1
  432830:	b.hi	432864 <argp_failure@@Base+0xd20>  // b.pmore
  432834:	sxtw	x23, w23
  432838:	str	x23, [x19, #24]
  43283c:	ldr	w0, [x22, #8]
  432840:	cbz	w0, 4328d8 <argp_failure@@Base+0xd94>
  432844:	sub	w25, w0, #0x1
  432848:	add	x25, x25, #0x1
  43284c:	add	x25, x25, x25, lsl #1
  432850:	add	x25, x21, x25, lsl #4
  432854:	mov	x23, x21
  432858:	adrp	x26, 45a000 <_obstack_memory_used@@Base+0x18e64>
  43285c:	add	x26, x26, #0xdc0
  432860:	b	4328a0 <argp_failure@@Base+0xd5c>
  432864:	mov	x0, x19
  432868:	bl	44e32c <_obstack_memory_used@@Base+0xd190>
  43286c:	b	432834 <argp_failure@@Base+0xcf0>
  432870:	ldr	x0, [x20]
  432874:	ldr	x3, [x0, #48]
  432878:	mov	x4, x19
  43287c:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x18e64>
  432880:	add	x2, x2, #0xdc8
  432884:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  432888:	add	x1, x1, #0xdd0
  43288c:	mov	x0, x21
  432890:	bl	4300ac <wcrtomb@plt+0x2b48c>
  432894:	add	x23, x23, #0x30
  432898:	cmp	x23, x25
  43289c:	b.eq	4328d8 <argp_failure@@Base+0xd94>  // b.none
  4328a0:	ldr	x0, [x23]
  4328a4:	cbz	x0, 432894 <argp_failure@@Base+0xd50>
  4328a8:	ldr	w0, [x23, #24]
  4328ac:	tbnz	w0, #1, 432894 <argp_failure@@Base+0xd50>
  4328b0:	add	x1, x29, #0xc8
  4328b4:	ldr	w0, [x27, #12]
  4328b8:	bl	430cfc <wcrtomb@plt+0x2c0dc>
  4328bc:	ldr	x2, [x23]
  4328c0:	mov	x1, x26
  4328c4:	mov	x0, x19
  4328c8:	bl	44e96c <_obstack_memory_used@@Base+0xd7d0>
  4328cc:	mov	x3, x20
  4328d0:	cbnz	x20, 432870 <argp_failure@@Base+0xd2c>
  4328d4:	b	432878 <argp_failure@@Base+0xd34>
  4328d8:	ldr	x0, [x19, #56]
  4328dc:	ldr	x1, [x19, #48]
  4328e0:	sub	x0, x0, x1
  4328e4:	ldr	x1, [x19, #32]
  4328e8:	cmp	x0, x1
  4328ec:	b.hi	432940 <argp_failure@@Base+0xdfc>  // b.pmore
  4328f0:	str	xzr, [x19, #8]
  4328f4:	ldr	w0, [x29, #224]
  4328f8:	cbz	w0, 43294c <argp_failure@@Base+0xe08>
  4328fc:	ldr	w0, [x21, #24]
  432900:	tbnz	w0, #3, 432924 <argp_failure@@Base+0xde0>
  432904:	ldr	w23, [x21, #8]
  432908:	sub	w0, w23, #0x1
  43290c:	cmp	w0, #0xfe
  432910:	b.hi	432924 <argp_failure@@Base+0xde0>  // b.pmore
  432914:	bl	404750 <__ctype_b_loc@plt>
  432918:	ldr	x0, [x0]
  43291c:	ldrh	w0, [x0, w23, sxtw #1]
  432920:	tbnz	w0, #14, 432b38 <argp_failure@@Base+0xff4>
  432924:	ldr	x0, [x21]
  432928:	cbnz	x0, 432b38 <argp_failure@@Base+0xff4>
  43292c:	add	x2, x29, #0xc8
  432930:	ldr	x1, [x22, #40]
  432934:	ldr	x0, [x21, #32]
  432938:	bl	430af0 <wcrtomb@plt+0x2bed0>
  43293c:	b	432b34 <argp_failure@@Base+0xff0>
  432940:	mov	x0, x19
  432944:	bl	44e32c <_obstack_memory_used@@Base+0xd190>
  432948:	b	4328f0 <argp_failure@@Base+0xdac>
  43294c:	ldr	x23, [x21, #32]
  432950:	cbz	x23, 432974 <argp_failure@@Base+0xe30>
  432954:	mov	x0, x20
  432958:	cbz	x20, 432964 <argp_failure@@Base+0xe20>
  43295c:	ldr	x0, [x20]
  432960:	ldr	x0, [x0, #48]
  432964:	mov	w2, #0x5                   	// #5
  432968:	mov	x1, x23
  43296c:	bl	4049c0 <dcgettext@plt>
  432970:	mov	x23, x0
  432974:	mov	x3, x20
  432978:	ldr	x2, [x22, #40]
  43297c:	ldr	w1, [x21, #8]
  432980:	mov	x0, x23
  432984:	bl	430314 <wcrtomb@plt+0x2b6f4>
  432988:	mov	x21, x0
  43298c:	cbz	x0, 432af4 <argp_failure@@Base+0xfb0>
  432990:	ldrb	w0, [x0]
  432994:	cbz	w0, 432aec <argp_failure@@Base+0xfa8>
  432998:	ldr	x0, [x19, #56]
  43299c:	ldr	x1, [x19, #48]
  4329a0:	sub	x0, x0, x1
  4329a4:	ldr	x1, [x19, #32]
  4329a8:	cmp	x0, x1
  4329ac:	b.hi	432a50 <argp_failure@@Base+0xf0c>  // b.pmore
  4329b0:	ldr	x25, [x19, #40]
  4329b4:	cmp	x25, #0x0
  4329b8:	csel	x25, x25, xzr, ge  // ge = tcont
  4329bc:	ldrsw	x26, [x27, #20]
  4329c0:	str	x26, [x19, #8]
  4329c4:	ldr	w26, [x27, #20]
  4329c8:	ldr	x0, [x19, #56]
  4329cc:	ldr	x1, [x19, #48]
  4329d0:	sub	x0, x0, x1
  4329d4:	ldr	x1, [x19, #32]
  4329d8:	cmp	x0, x1
  4329dc:	b.hi	432a8c <argp_failure@@Base+0xf48>  // b.pmore
  4329e0:	sxtw	x26, w26
  4329e4:	str	x26, [x19, #24]
  4329e8:	ldr	w1, [x27, #20]
  4329ec:	add	w0, w1, #0x3
  4329f0:	cmp	w25, w0
  4329f4:	b.hi	432a98 <argp_failure@@Base+0xf54>  // b.pmore
  4329f8:	cmp	w25, w1
  4329fc:	b.cc	432ad4 <argp_failure@@Base+0xf90>  // b.lo, b.ul, b.last
  432a00:	ldr	x0, [x19, #56]
  432a04:	add	x0, x0, #0x3
  432a08:	ldr	x1, [x19, #64]
  432a0c:	cmp	x1, x0
  432a10:	b.cs	432a24 <argp_failure@@Base+0xee0>  // b.hs, b.nlast
  432a14:	mov	x1, #0x3                   	// #3
  432a18:	mov	x0, x19
  432a1c:	bl	44e874 <_obstack_memory_used@@Base+0xd6d8>
  432a20:	cbz	w0, 432adc <argp_failure@@Base+0xf98>
  432a24:	ldr	x1, [x19, #56]
  432a28:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  432a2c:	add	x0, x0, #0xdd8
  432a30:	ldrh	w2, [x0]
  432a34:	strh	w2, [x1]
  432a38:	ldrb	w0, [x0, #2]
  432a3c:	strb	w0, [x1, #2]
  432a40:	ldr	x0, [x19, #56]
  432a44:	add	x0, x0, #0x3
  432a48:	str	x0, [x19, #56]
  432a4c:	b	432adc <argp_failure@@Base+0xf98>
  432a50:	mov	x0, x19
  432a54:	bl	44e32c <_obstack_memory_used@@Base+0xd190>
  432a58:	ldr	x25, [x19, #40]
  432a5c:	cmp	x25, #0x0
  432a60:	csel	x25, x25, xzr, ge  // ge = tcont
  432a64:	ldrsw	x26, [x27, #20]
  432a68:	ldr	x0, [x19, #56]
  432a6c:	ldr	x1, [x19, #48]
  432a70:	sub	x0, x0, x1
  432a74:	ldr	x1, [x19, #32]
  432a78:	cmp	x0, x1
  432a7c:	b.ls	4329c0 <argp_failure@@Base+0xe7c>  // b.plast
  432a80:	mov	x0, x19
  432a84:	bl	44e32c <_obstack_memory_used@@Base+0xd190>
  432a88:	b	4329c0 <argp_failure@@Base+0xe7c>
  432a8c:	mov	x0, x19
  432a90:	bl	44e32c <_obstack_memory_used@@Base+0xd190>
  432a94:	b	4329e0 <argp_failure@@Base+0xe9c>
  432a98:	ldr	x1, [x19, #56]
  432a9c:	ldr	x0, [x19, #64]
  432aa0:	cmp	x1, x0
  432aa4:	b.cs	432ac0 <argp_failure@@Base+0xf7c>  // b.hs, b.nlast
  432aa8:	ldr	x0, [x19, #56]
  432aac:	add	x1, x0, #0x1
  432ab0:	str	x1, [x19, #56]
  432ab4:	mov	w1, #0xa                   	// #10
  432ab8:	strb	w1, [x0]
  432abc:	b	432adc <argp_failure@@Base+0xf98>
  432ac0:	mov	x1, #0x1                   	// #1
  432ac4:	mov	x0, x19
  432ac8:	bl	44e874 <_obstack_memory_used@@Base+0xd6d8>
  432acc:	cbnz	w0, 432aa8 <argp_failure@@Base+0xf64>
  432ad0:	b	432adc <argp_failure@@Base+0xf98>
  432ad4:	mov	x0, x19
  432ad8:	bl	43068c <wcrtomb@plt+0x2ba6c>
  432adc:	mov	x0, x21
  432ae0:	bl	403ff0 <strlen@plt>
  432ae4:	mov	x25, x0
  432ae8:	cbnz	x0, 432c08 <argp_failure@@Base+0x10c4>
  432aec:	cmp	x23, x21
  432af0:	b.ne	432c4c <argp_failure@@Base+0x1108>  // b.any
  432af4:	ldr	x0, [x19, #56]
  432af8:	ldr	x1, [x19, #48]
  432afc:	sub	x0, x0, x1
  432b00:	ldr	x1, [x19, #32]
  432b04:	cmp	x0, x1
  432b08:	b.hi	432c58 <argp_failure@@Base+0x1114>  // b.pmore
  432b0c:	str	xzr, [x19, #8]
  432b10:	ldr	x1, [x19, #56]
  432b14:	ldr	x0, [x19, #64]
  432b18:	cmp	x1, x0
  432b1c:	b.cs	432c64 <argp_failure@@Base+0x1120>  // b.hs, b.nlast
  432b20:	ldr	x0, [x19, #56]
  432b24:	add	x1, x0, #0x1
  432b28:	str	x1, [x19, #56]
  432b2c:	mov	w1, #0xa                   	// #10
  432b30:	strb	w1, [x0]
  432b34:	str	x22, [x29, #184]
  432b38:	ldrsw	x21, [x29, #136]
  432b3c:	ldr	x0, [x19, #56]
  432b40:	ldr	x1, [x19, #48]
  432b44:	sub	x0, x0, x1
  432b48:	ldr	x1, [x19, #32]
  432b4c:	cmp	x0, x1
  432b50:	b.hi	432c78 <argp_failure@@Base+0x1134>  // b.pmore
  432b54:	str	x21, [x19, #8]
  432b58:	ldr	x0, [x19, #56]
  432b5c:	ldr	x1, [x19, #48]
  432b60:	sub	x0, x0, x1
  432b64:	ldr	x1, [x19, #32]
  432b68:	cmp	x0, x1
  432b6c:	b.hi	432c84 <argp_failure@@Base+0x1140>  // b.pmore
  432b70:	ldrsw	x0, [x29, #128]
  432b74:	str	x0, [x19, #24]
  432b78:	add	x22, x22, #0x38
  432b7c:	ldr	x0, [x29, #104]
  432b80:	cmp	x0, x22
  432b84:	b.eq	432c90 <argp_failure@@Base+0x114c>  // b.none
  432b88:	ldr	x21, [x22]
  432b8c:	ldr	x26, [x22, #16]
  432b90:	ldr	x0, [x19, #56]
  432b94:	ldr	x1, [x19, #48]
  432b98:	sub	x0, x0, x1
  432b9c:	ldr	x1, [x19, #32]
  432ba0:	cmp	x0, x1
  432ba4:	b.hi	4325b0 <argp_failure@@Base+0xa6c>  // b.pmore
  432ba8:	ldr	x0, [x19, #8]
  432bac:	str	x0, [x29, #136]
  432bb0:	str	xzr, [x19, #8]
  432bb4:	ldr	x0, [x19, #24]
  432bb8:	str	x0, [x29, #128]
  432bbc:	str	x22, [x29, #200]
  432bc0:	str	x19, [x29, #208]
  432bc4:	add	x0, x29, #0xb8
  432bc8:	str	x0, [x29, #216]
  432bcc:	mov	w0, #0x1                   	// #1
  432bd0:	str	w0, [x29, #224]
  432bd4:	str	x20, [x29, #232]
  432bd8:	ldr	w0, [x21, #24]
  432bdc:	and	w1, w0, #0x8
  432be0:	str	w1, [x29, #144]
  432be4:	tbnz	w0, #3, 4325e4 <argp_failure@@Base+0xaa0>
  432be8:	ldr	w0, [x22, #8]
  432bec:	cbz	w0, 4325e8 <argp_failure@@Base+0xaa4>
  432bf0:	sub	w1, w0, #0x1
  432bf4:	add	x1, x1, #0x1
  432bf8:	add	x1, x1, x1, lsl #1
  432bfc:	add	x1, x21, x1, lsl #4
  432c00:	mov	x0, x21
  432c04:	b	4325c8 <argp_failure@@Base+0xa84>
  432c08:	ldr	x0, [x19, #56]
  432c0c:	add	x0, x0, x25
  432c10:	ldr	x1, [x19, #64]
  432c14:	cmp	x1, x0
  432c18:	b.cs	432c2c <argp_failure@@Base+0x10e8>  // b.hs, b.nlast
  432c1c:	mov	x1, x25
  432c20:	mov	x0, x19
  432c24:	bl	44e874 <_obstack_memory_used@@Base+0xd6d8>
  432c28:	cbz	w0, 432aec <argp_failure@@Base+0xfa8>
  432c2c:	mov	x2, x25
  432c30:	mov	x1, x21
  432c34:	ldr	x0, [x19, #56]
  432c38:	bl	403f70 <memcpy@plt>
  432c3c:	ldr	x0, [x19, #56]
  432c40:	add	x25, x0, x25
  432c44:	str	x25, [x19, #56]
  432c48:	b	432aec <argp_failure@@Base+0xfa8>
  432c4c:	mov	x0, x21
  432c50:	bl	4047c0 <free@plt>
  432c54:	b	432af4 <argp_failure@@Base+0xfb0>
  432c58:	mov	x0, x19
  432c5c:	bl	44e32c <_obstack_memory_used@@Base+0xd190>
  432c60:	b	432b0c <argp_failure@@Base+0xfc8>
  432c64:	mov	x1, #0x1                   	// #1
  432c68:	mov	x0, x19
  432c6c:	bl	44e874 <_obstack_memory_used@@Base+0xd6d8>
  432c70:	cbnz	w0, 432b20 <argp_failure@@Base+0xfdc>
  432c74:	b	432b34 <argp_failure@@Base+0xff0>
  432c78:	mov	x0, x19
  432c7c:	bl	44e32c <_obstack_memory_used@@Base+0xd190>
  432c80:	b	432b54 <argp_failure@@Base+0x1010>
  432c84:	mov	x0, x19
  432c88:	bl	44e32c <_obstack_memory_used@@Base+0xd190>
  432c8c:	b	432b70 <argp_failure@@Base+0x102c>
  432c90:	ldr	w0, [x29, #196]
  432c94:	cbz	w0, 432cf4 <argp_failure@@Base+0x11b0>
  432c98:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  432c9c:	ldr	w0, [x0, #932]
  432ca0:	cbz	w0, 432cf4 <argp_failure@@Base+0x11b0>
  432ca4:	cbz	x20, 432eac <argp_failure@@Base+0x1368>
  432ca8:	ldr	x0, [x20]
  432cac:	mov	w2, #0x5                   	// #5
  432cb0:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  432cb4:	add	x1, x1, #0xde0
  432cb8:	ldr	x0, [x0, #48]
  432cbc:	bl	4049c0 <dcgettext@plt>
  432cc0:	mov	x22, x0
  432cc4:	ldr	x2, [x20]
  432cc8:	mov	x3, x20
  432ccc:	mov	w1, #0x5                   	// #5
  432cd0:	movk	w1, #0x200, lsl #16
  432cd4:	mov	x0, x22
  432cd8:	bl	430314 <wcrtomb@plt+0x2b6f4>
  432cdc:	mov	x21, x0
  432ce0:	cbz	x0, 432cf4 <argp_failure@@Base+0x11b0>
  432ce4:	ldrb	w0, [x0]
  432ce8:	cbnz	w0, 432d78 <argp_failure@@Base+0x1234>
  432cec:	cmp	x21, x22
  432cf0:	b.ne	432e40 <argp_failure@@Base+0x12fc>  // b.any
  432cf4:	mov	w21, #0x1                   	// #1
  432cf8:	tbnz	w24, #5, 432e4c <argp_failure@@Base+0x1308>
  432cfc:	tbz	w24, #6, 432d3c <argp_failure@@Base+0x11f8>
  432d00:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  432d04:	ldr	x0, [x0, #984]
  432d08:	cbz	x0, 432d3c <argp_failure@@Base+0x11f8>
  432d0c:	cbnz	w21, 432e70 <argp_failure@@Base+0x132c>
  432d10:	mov	w2, #0x5                   	// #5
  432d14:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  432d18:	add	x1, x1, #0xe58
  432d1c:	ldr	x0, [x29, #168]
  432d20:	ldr	x0, [x0, #48]
  432d24:	bl	4049c0 <dcgettext@plt>
  432d28:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  432d2c:	ldr	x2, [x1, #984]
  432d30:	mov	x1, x0
  432d34:	mov	x0, x19
  432d38:	bl	44e96c <_obstack_memory_used@@Base+0xd7d0>
  432d3c:	ldr	x0, [x29, #120]
  432d40:	bl	404330 <funlockfile@plt>
  432d44:	cbz	x28, 432d50 <argp_failure@@Base+0x120c>
  432d48:	mov	x0, x28
  432d4c:	bl	43019c <wcrtomb@plt+0x2b57c>
  432d50:	mov	x0, x19
  432d54:	bl	44e824 <_obstack_memory_used@@Base+0xd688>
  432d58:	mov	sp, x29
  432d5c:	ldp	x19, x20, [sp, #16]
  432d60:	ldp	x21, x22, [sp, #32]
  432d64:	ldp	x23, x24, [sp, #48]
  432d68:	ldp	x25, x26, [sp, #64]
  432d6c:	ldp	x27, x28, [sp, #80]
  432d70:	ldp	x29, x30, [sp], #240
  432d74:	ret
  432d78:	ldr	x1, [x19, #56]
  432d7c:	ldr	x0, [x19, #64]
  432d80:	cmp	x1, x0
  432d84:	b.cs	432dd4 <argp_failure@@Base+0x1290>  // b.hs, b.nlast
  432d88:	ldr	x0, [x19, #56]
  432d8c:	add	x1, x0, #0x1
  432d90:	str	x1, [x19, #56]
  432d94:	mov	w1, #0xa                   	// #10
  432d98:	strb	w1, [x0]
  432d9c:	mov	x0, x21
  432da0:	bl	403ff0 <strlen@plt>
  432da4:	mov	x23, x0
  432da8:	cbnz	x0, 432de8 <argp_failure@@Base+0x12a4>
  432dac:	ldr	x1, [x19, #56]
  432db0:	ldr	x0, [x19, #64]
  432db4:	cmp	x1, x0
  432db8:	b.cs	432e2c <argp_failure@@Base+0x12e8>  // b.hs, b.nlast
  432dbc:	ldr	x0, [x19, #56]
  432dc0:	add	x1, x0, #0x1
  432dc4:	str	x1, [x19, #56]
  432dc8:	mov	w1, #0xa                   	// #10
  432dcc:	strb	w1, [x0]
  432dd0:	b	432cec <argp_failure@@Base+0x11a8>
  432dd4:	mov	x1, #0x1                   	// #1
  432dd8:	mov	x0, x19
  432ddc:	bl	44e874 <_obstack_memory_used@@Base+0xd6d8>
  432de0:	cbnz	w0, 432d88 <argp_failure@@Base+0x1244>
  432de4:	b	432d9c <argp_failure@@Base+0x1258>
  432de8:	ldr	x0, [x19, #56]
  432dec:	add	x0, x0, x23
  432df0:	ldr	x1, [x19, #64]
  432df4:	cmp	x1, x0
  432df8:	b.cs	432e0c <argp_failure@@Base+0x12c8>  // b.hs, b.nlast
  432dfc:	mov	x1, x23
  432e00:	mov	x0, x19
  432e04:	bl	44e874 <_obstack_memory_used@@Base+0xd6d8>
  432e08:	cbz	w0, 432dac <argp_failure@@Base+0x1268>
  432e0c:	mov	x2, x23
  432e10:	mov	x1, x21
  432e14:	ldr	x0, [x19, #56]
  432e18:	bl	403f70 <memcpy@plt>
  432e1c:	ldr	x0, [x19, #56]
  432e20:	add	x23, x0, x23
  432e24:	str	x23, [x19, #56]
  432e28:	b	432dac <argp_failure@@Base+0x1268>
  432e2c:	mov	x1, #0x1                   	// #1
  432e30:	mov	x0, x19
  432e34:	bl	44e874 <_obstack_memory_used@@Base+0xd6d8>
  432e38:	cbnz	w0, 432dbc <argp_failure@@Base+0x1278>
  432e3c:	b	432cec <argp_failure@@Base+0x11a8>
  432e40:	mov	x0, x21
  432e44:	bl	4047c0 <free@plt>
  432e48:	b	432cf4 <argp_failure@@Base+0x11b0>
  432e4c:	mov	x5, x19
  432e50:	mov	w4, #0x0                   	// #0
  432e54:	mov	w3, w21
  432e58:	mov	w2, #0x1                   	// #1
  432e5c:	mov	x1, x20
  432e60:	ldr	x0, [x29, #168]
  432e64:	bl	430e80 <wcrtomb@plt+0x2c260>
  432e68:	orr	w21, w21, w0
  432e6c:	b	432cfc <argp_failure@@Base+0x11b8>
  432e70:	ldr	x1, [x19, #56]
  432e74:	ldr	x0, [x19, #64]
  432e78:	cmp	x1, x0
  432e7c:	b.cs	432e98 <argp_failure@@Base+0x1354>  // b.hs, b.nlast
  432e80:	ldr	x0, [x19, #56]
  432e84:	add	x1, x0, #0x1
  432e88:	str	x1, [x19, #56]
  432e8c:	mov	w1, #0xa                   	// #10
  432e90:	strb	w1, [x0]
  432e94:	b	432d10 <argp_failure@@Base+0x11cc>
  432e98:	mov	x1, #0x1                   	// #1
  432e9c:	mov	x0, x19
  432ea0:	bl	44e874 <_obstack_memory_used@@Base+0xd6d8>
  432ea4:	cbnz	w0, 432e80 <argp_failure@@Base+0x133c>
  432ea8:	b	432d10 <argp_failure@@Base+0x11cc>
  432eac:	mov	w2, #0x5                   	// #5
  432eb0:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  432eb4:	add	x1, x1, #0xde0
  432eb8:	mov	x0, #0x0                   	// #0
  432ebc:	bl	4049c0 <dcgettext@plt>
  432ec0:	mov	x22, x0
  432ec4:	mov	x2, x20
  432ec8:	b	432cc8 <argp_failure@@Base+0x1184>
  432ecc:	ldrb	w0, [x26]
  432ed0:	cmp	w0, w25
  432ed4:	b.eq	432648 <argp_failure@@Base+0xb04>  // b.none
  432ed8:	add	x23, x23, #0x30
  432edc:	ldr	x0, [x29, #152]
  432ee0:	cmp	x23, x0
  432ee4:	b.eq	432724 <argp_failure@@Base+0xbe0>  // b.none
  432ee8:	ldr	w0, [x23, #24]
  432eec:	str	w0, [x29, #160]
  432ef0:	tbnz	w0, #3, 432ed8 <argp_failure@@Base+0x1394>
  432ef4:	ldr	w25, [x23, #8]
  432ef8:	sub	w0, w25, #0x1
  432efc:	cmp	w0, #0xfe
  432f00:	b.hi	432ed8 <argp_failure@@Base+0x1394>  // b.pmore
  432f04:	bl	404750 <__ctype_b_loc@plt>
  432f08:	ldr	x0, [x0]
  432f0c:	ldrh	w0, [x0, w25, sxtw #1]
  432f10:	tbnz	w0, #14, 432ecc <argp_failure@@Base+0x1388>
  432f14:	b	432ed8 <argp_failure@@Base+0x1394>
  432f18:	ldrb	w1, [x21]
  432f1c:	mov	x19, x21
  432f20:	mov	x23, #0x0                   	// #0
  432f24:	b	431fc8 <argp_failure@@Base+0x484>

0000000000432f28 <argp_help@@Base>:
  432f28:	stp	x29, x30, [sp, #-16]!
  432f2c:	mov	x29, sp
  432f30:	mov	x4, x3
  432f34:	mov	w3, w2
  432f38:	mov	x2, x1
  432f3c:	mov	x1, #0x0                   	// #0
  432f40:	bl	431da0 <argp_failure@@Base+0x25c>
  432f44:	ldp	x29, x30, [sp], #16
  432f48:	ret

0000000000432f4c <argp_state_help@@Base>:
  432f4c:	stp	x29, x30, [sp, #-32]!
  432f50:	mov	x29, sp
  432f54:	stp	x19, x20, [sp, #16]
  432f58:	mov	w20, w2
  432f5c:	cbz	x0, 432f78 <argp_state_help@@Base+0x2c>
  432f60:	mov	x19, x0
  432f64:	ldr	w0, [x0, #28]
  432f68:	tbz	w0, #1, 432fa8 <argp_state_help@@Base+0x5c>
  432f6c:	ldp	x19, x20, [sp, #16]
  432f70:	ldp	x29, x30, [sp], #32
  432f74:	ret
  432f78:	cbz	x1, 432f6c <argp_state_help@@Base+0x20>
  432f7c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  432f80:	ldr	x4, [x0, #1128]
  432f84:	mov	w3, w2
  432f88:	mov	x2, x1
  432f8c:	mov	x1, #0x0                   	// #0
  432f90:	mov	x0, #0x0                   	// #0
  432f94:	bl	431da0 <argp_failure@@Base+0x25c>
  432f98:	b	432fdc <argp_state_help@@Base+0x90>
  432f9c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  432fa0:	ldr	w0, [x0, #1072]
  432fa4:	bl	404020 <exit@plt>
  432fa8:	cbz	x1, 432f6c <argp_state_help@@Base+0x20>
  432fac:	ldr	w2, [x19, #28]
  432fb0:	orr	w0, w20, #0x80
  432fb4:	tst	x2, #0x40
  432fb8:	csel	w20, w0, w20, ne  // ne = any
  432fbc:	ldr	x4, [x19, #64]
  432fc0:	mov	w3, w20
  432fc4:	mov	x2, x1
  432fc8:	mov	x1, x19
  432fcc:	ldr	x0, [x19]
  432fd0:	bl	431da0 <argp_failure@@Base+0x25c>
  432fd4:	ldr	w0, [x19, #28]
  432fd8:	tbnz	w0, #5, 432f6c <argp_state_help@@Base+0x20>
  432fdc:	tbnz	w20, #8, 432f9c <argp_state_help@@Base+0x50>
  432fe0:	tbz	w20, #9, 432f6c <argp_state_help@@Base+0x20>
  432fe4:	mov	w0, #0x0                   	// #0
  432fe8:	bl	404020 <exit@plt>

0000000000432fec <argp_error@@Base>:
  432fec:	stp	x29, x30, [sp, #-320]!
  432ff0:	mov	x29, sp
  432ff4:	stp	x19, x20, [sp, #16]
  432ff8:	str	x21, [sp, #32]
  432ffc:	mov	x20, x0
  433000:	mov	x21, x1
  433004:	str	x2, [sp, #272]
  433008:	str	x3, [sp, #280]
  43300c:	str	x4, [sp, #288]
  433010:	str	x5, [sp, #296]
  433014:	str	x6, [sp, #304]
  433018:	str	x7, [sp, #312]
  43301c:	str	q0, [sp, #144]
  433020:	str	q1, [sp, #160]
  433024:	str	q2, [sp, #176]
  433028:	str	q3, [sp, #192]
  43302c:	str	q4, [sp, #208]
  433030:	str	q5, [sp, #224]
  433034:	str	q6, [sp, #240]
  433038:	str	q7, [sp, #256]
  43303c:	cbz	x0, 43313c <argp_error@@Base+0x150>
  433040:	ldr	w0, [x0, #28]
  433044:	tbnz	w0, #1, 43312c <argp_error@@Base+0x140>
  433048:	ldr	x19, [x20, #72]
  43304c:	cbz	x19, 43312c <argp_error@@Base+0x140>
  433050:	mov	x0, x19
  433054:	bl	404090 <flockfile@plt>
  433058:	add	x0, sp, #0x140
  43305c:	str	x0, [sp, #80]
  433060:	str	x0, [sp, #88]
  433064:	add	x0, sp, #0x110
  433068:	str	x0, [sp, #96]
  43306c:	mov	w0, #0xffffffd0            	// #-48
  433070:	str	w0, [sp, #104]
  433074:	mov	w0, #0xffffff80            	// #-128
  433078:	str	w0, [sp, #108]
  43307c:	ldr	x0, [x20, #64]
  433080:	mov	x1, x19
  433084:	bl	4049e0 <fputs_unlocked@plt>
  433088:	ldr	x0, [x19, #40]
  43308c:	ldr	x1, [x19, #48]
  433090:	cmp	x0, x1
  433094:	b.cs	433180 <argp_error@@Base+0x194>  // b.hs, b.nlast
  433098:	add	x1, x0, #0x1
  43309c:	str	x1, [x19, #40]
  4330a0:	mov	w1, #0x3a                  	// #58
  4330a4:	strb	w1, [x0]
  4330a8:	ldr	x0, [x19, #40]
  4330ac:	ldr	x1, [x19, #48]
  4330b0:	cmp	x0, x1
  4330b4:	b.cs	433190 <argp_error@@Base+0x1a4>  // b.hs, b.nlast
  4330b8:	add	x1, x0, #0x1
  4330bc:	str	x1, [x19, #40]
  4330c0:	mov	w1, #0x20                  	// #32
  4330c4:	strb	w1, [x0]
  4330c8:	ldp	x2, x3, [sp, #80]
  4330cc:	stp	x2, x3, [sp, #112]
  4330d0:	ldp	x0, x1, [sp, #96]
  4330d4:	stp	x0, x1, [sp, #128]
  4330d8:	stp	x2, x3, [sp, #48]
  4330dc:	stp	x0, x1, [sp, #64]
  4330e0:	add	x3, sp, #0x30
  4330e4:	mov	x2, x21
  4330e8:	mov	w1, #0x1                   	// #1
  4330ec:	mov	x0, x19
  4330f0:	bl	4044b0 <__vfprintf_chk@plt>
  4330f4:	ldr	x0, [x19, #40]
  4330f8:	ldr	x1, [x19, #48]
  4330fc:	cmp	x0, x1
  433100:	b.cs	4331a0 <argp_error@@Base+0x1b4>  // b.hs, b.nlast
  433104:	add	x1, x0, #0x1
  433108:	str	x1, [x19, #40]
  43310c:	mov	w1, #0xa                   	// #10
  433110:	strb	w1, [x0]
  433114:	mov	w2, #0x104                 	// #260
  433118:	mov	x1, x19
  43311c:	mov	x0, x20
  433120:	bl	432f4c <argp_state_help@@Base>
  433124:	mov	x0, x19
  433128:	bl	404330 <funlockfile@plt>
  43312c:	ldp	x19, x20, [sp, #16]
  433130:	ldr	x21, [sp, #32]
  433134:	ldp	x29, x30, [sp], #320
  433138:	ret
  43313c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  433140:	ldr	x19, [x0, #1096]
  433144:	cbz	x19, 43312c <argp_error@@Base+0x140>
  433148:	mov	x0, x19
  43314c:	bl	404090 <flockfile@plt>
  433150:	add	x0, sp, #0x140
  433154:	str	x0, [sp, #80]
  433158:	str	x0, [sp, #88]
  43315c:	add	x0, sp, #0x110
  433160:	str	x0, [sp, #96]
  433164:	mov	w0, #0xffffffd0            	// #-48
  433168:	str	w0, [sp, #104]
  43316c:	mov	w0, #0xffffff80            	// #-128
  433170:	str	w0, [sp, #108]
  433174:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  433178:	ldr	x0, [x0, #1128]
  43317c:	b	433080 <argp_error@@Base+0x94>
  433180:	mov	w1, #0x3a                  	// #58
  433184:	mov	x0, x19
  433188:	bl	404690 <__overflow@plt>
  43318c:	b	4330a8 <argp_error@@Base+0xbc>
  433190:	mov	w1, #0x20                  	// #32
  433194:	mov	x0, x19
  433198:	bl	404690 <__overflow@plt>
  43319c:	b	4330c8 <argp_error@@Base+0xdc>
  4331a0:	mov	w1, #0xa                   	// #10
  4331a4:	mov	x0, x19
  4331a8:	bl	404690 <__overflow@plt>
  4331ac:	b	433114 <argp_error@@Base+0x128>
  4331b0:	stp	x29, x30, [sp, #-32]!
  4331b4:	mov	x29, sp
  4331b8:	stp	x19, x20, [sp, #16]
  4331bc:	mov	x19, x0
  4331c0:	mov	w0, w2
  4331c4:	ldr	x2, [x19]
  4331c8:	cbz	x2, 433214 <argp_error@@Base+0x228>
  4331cc:	mov	x20, x1
  4331d0:	mov	x1, x3
  4331d4:	ldr	x2, [x19, #64]
  4331d8:	str	x2, [x20, #56]
  4331dc:	ldr	x2, [x19, #48]
  4331e0:	str	x2, [x20, #40]
  4331e4:	ldr	x2, [x19, #56]
  4331e8:	str	x2, [x20, #48]
  4331ec:	ldr	w2, [x19, #24]
  4331f0:	str	w2, [x20, #32]
  4331f4:	ldr	x3, [x19]
  4331f8:	mov	x2, x20
  4331fc:	blr	x3
  433200:	ldr	x1, [x20, #56]
  433204:	str	x1, [x19, #64]
  433208:	ldp	x19, x20, [sp, #16]
  43320c:	ldp	x29, x30, [sp], #32
  433210:	ret
  433214:	mov	w0, #0x7                   	// #7
  433218:	b	433208 <argp_error@@Base+0x21c>
  43321c:	stp	x29, x30, [sp, #-32]!
  433220:	mov	x29, sp
  433224:	stp	x19, x20, [sp, #16]
  433228:	mov	x19, x1
  43322c:	ldr	x20, [x0, #32]
  433230:	ldr	x2, [x0]
  433234:	cbz	x2, 43324c <argp_error@@Base+0x260>
  433238:	ldr	x0, [x1, #16]
  43323c:	add	x0, x0, #0x1
  433240:	str	x0, [x1, #16]
  433244:	mov	w0, #0x0                   	// #0
  433248:	b	433268 <argp_error@@Base+0x27c>
  43324c:	ldr	x0, [x0, #8]
  433250:	cbz	x0, 4332a8 <argp_error@@Base+0x2bc>
  433254:	ldr	x0, [x1, #16]
  433258:	add	x0, x0, #0x1
  43325c:	str	x0, [x1, #16]
  433260:	b	4332a8 <argp_error@@Base+0x2bc>
  433264:	add	w0, w0, #0x1
  433268:	add	x2, x2, #0x30
  43326c:	ldur	w3, [x2, #-40]
  433270:	cbnz	w3, 433264 <argp_error@@Base+0x278>
  433274:	ldur	x3, [x2, #-48]
  433278:	cbnz	x3, 433264 <argp_error@@Base+0x278>
  43327c:	ldur	x1, [x2, #-16]
  433280:	cbnz	x1, 433264 <argp_error@@Base+0x278>
  433284:	ldur	w1, [x2, #-8]
  433288:	cbnz	w1, 433264 <argp_error@@Base+0x278>
  43328c:	add	w1, w0, w0, lsl #1
  433290:	ldr	x2, [x19]
  433294:	add	x1, x2, w1, sxtw
  433298:	str	x1, [x19]
  43329c:	ldr	x1, [x19, #8]
  4332a0:	add	x0, x1, w0, sxtw
  4332a4:	str	x0, [x19, #8]
  4332a8:	cbz	x20, 4332d0 <argp_error@@Base+0x2e4>
  4332ac:	ldr	x0, [x20]
  4332b0:	cbz	x0, 4332d0 <argp_error@@Base+0x2e4>
  4332b4:	mov	x1, x19
  4332b8:	bl	43321c <argp_error@@Base+0x230>
  4332bc:	ldr	x0, [x19, #24]
  4332c0:	add	x0, x0, #0x1
  4332c4:	str	x0, [x19, #24]
  4332c8:	ldr	x0, [x20, #32]!
  4332cc:	cbnz	x0, 4332b4 <argp_error@@Base+0x2c8>
  4332d0:	ldp	x19, x20, [sp, #16]
  4332d4:	ldp	x29, x30, [sp], #32
  4332d8:	ret
  4332dc:	cmp	w0, #0x56
  4332e0:	b.eq	4332ec <argp_error@@Base+0x300>  // b.none
  4332e4:	mov	w0, #0x7                   	// #7
  4332e8:	ret
  4332ec:	stp	x29, x30, [sp, #-32]!
  4332f0:	mov	x29, sp
  4332f4:	str	x19, [sp, #16]
  4332f8:	mov	x19, x2
  4332fc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  433300:	ldr	x2, [x0, #3432]
  433304:	cbz	x2, 43332c <argp_error@@Base+0x340>
  433308:	mov	x1, x19
  43330c:	ldr	x0, [x19, #80]
  433310:	blr	x2
  433314:	ldr	w1, [x19, #28]
  433318:	mov	w0, #0x0                   	// #0
  43331c:	tbz	w1, #5, 433380 <argp_error@@Base+0x394>
  433320:	ldr	x19, [sp, #16]
  433324:	ldp	x29, x30, [sp], #32
  433328:	ret
  43332c:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  433330:	ldr	x3, [x0, #968]
  433334:	cbz	x3, 433350 <argp_error@@Base+0x364>
  433338:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43333c:	add	x2, x2, #0xbc8
  433340:	mov	w1, #0x1                   	// #1
  433344:	ldr	x0, [x19, #80]
  433348:	bl	404710 <__fprintf_chk@plt>
  43334c:	b	433314 <argp_error@@Base+0x328>
  433350:	ldr	x0, [x19]
  433354:	mov	w2, #0x5                   	// #5
  433358:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  43335c:	add	x1, x1, #0xf20
  433360:	ldr	x0, [x0, #48]
  433364:	bl	4049c0 <dcgettext@plt>
  433368:	mov	x2, x0
  43336c:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  433370:	add	x1, x1, #0x848
  433374:	mov	x0, x19
  433378:	bl	432fec <argp_error@@Base>
  43337c:	b	433314 <argp_error@@Base+0x328>
  433380:	bl	404020 <exit@plt>
  433384:	stp	x29, x30, [sp, #-32]!
  433388:	mov	x29, sp
  43338c:	stp	x19, x20, [sp, #16]
  433390:	mov	x20, x1
  433394:	mov	x19, x2
  433398:	cmn	w0, #0x2
  43339c:	b.eq	433404 <argp_error@@Base+0x418>  // b.none
  4333a0:	mov	w3, w0
  4333a4:	cmn	w0, #0x1
  4333a8:	b.ge	4333d8 <argp_error@@Base+0x3ec>  // b.tcont
  4333ac:	cmn	w0, #0x4
  4333b0:	b.eq	433444 <argp_error@@Base+0x458>  // b.none
  4333b4:	mov	w0, #0x7                   	// #7
  4333b8:	cmn	w3, #0x3
  4333bc:	b.ne	4333f8 <argp_error@@Base+0x40c>  // b.any
  4333c0:	mov	w2, #0x201                 	// #513
  4333c4:	ldr	x1, [x19, #80]
  4333c8:	mov	x0, x19
  4333cc:	bl	432f4c <argp_state_help@@Base>
  4333d0:	mov	w0, #0x0                   	// #0
  4333d4:	b	4333f8 <argp_error@@Base+0x40c>
  4333d8:	mov	w0, #0x7                   	// #7
  4333dc:	cmp	w3, #0x3f
  4333e0:	b.ne	4333f8 <argp_error@@Base+0x40c>  // b.any
  4333e4:	mov	w2, #0x27a                 	// #634
  4333e8:	ldr	x1, [x19, #80]
  4333ec:	mov	x0, x19
  4333f0:	bl	432f4c <argp_state_help@@Base>
  4333f4:	mov	w0, #0x0                   	// #0
  4333f8:	ldp	x19, x20, [sp, #16]
  4333fc:	ldp	x29, x30, [sp], #32
  433400:	ret
  433404:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  433408:	str	x1, [x0, #1088]
  43340c:	mov	x0, x1
  433410:	bl	434ae4 <argp_parse@@Base+0x13a4>
  433414:	str	x0, [x19, #64]
  433418:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43341c:	str	x0, [x1, #1128]
  433420:	ldr	w1, [x19, #28]
  433424:	and	w1, w1, #0x3
  433428:	mov	w0, #0x0                   	// #0
  43342c:	cmp	w1, #0x1
  433430:	b.ne	4333f8 <argp_error@@Base+0x40c>  // b.any
  433434:	ldr	x0, [x19, #16]
  433438:	str	x20, [x0]
  43343c:	mov	w0, #0x0                   	// #0
  433440:	b	4333f8 <argp_error@@Base+0x40c>
  433444:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  433448:	add	x0, x0, #0xf48
  43344c:	cmp	x1, #0x0
  433450:	mov	w2, #0xa                   	// #10
  433454:	mov	x1, #0x0                   	// #0
  433458:	csel	x0, x0, x20, eq  // eq = none
  43345c:	bl	404780 <strtol@plt>
  433460:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  433464:	str	w0, [x1, #3424]
  433468:	ldr	w0, [x1, #3424]
  43346c:	sub	w2, w0, #0x1
  433470:	str	w2, [x1, #3424]
  433474:	cmp	w0, #0x0
  433478:	b.le	4334a8 <argp_error@@Base+0x4bc>
  43347c:	mov	w20, #0x1                   	// #1
  433480:	add	x19, x1, #0xd60
  433484:	mov	w0, w20
  433488:	bl	404470 <sleep@plt>
  43348c:	ldr	w0, [x19]
  433490:	sub	w1, w0, #0x1
  433494:	str	w1, [x19]
  433498:	cmp	w0, #0x0
  43349c:	b.gt	433484 <argp_error@@Base+0x498>
  4334a0:	mov	w0, #0x0                   	// #0
  4334a4:	b	4333f8 <argp_error@@Base+0x40c>
  4334a8:	mov	w0, #0x0                   	// #0
  4334ac:	b	4333f8 <argp_error@@Base+0x40c>
  4334b0:	stp	x29, x30, [sp, #-128]!
  4334b4:	mov	x29, sp
  4334b8:	stp	x19, x20, [sp, #16]
  4334bc:	stp	x21, x22, [sp, #32]
  4334c0:	stp	x25, x26, [sp, #64]
  4334c4:	stp	x27, x28, [sp, #80]
  4334c8:	str	x0, [sp, #104]
  4334cc:	str	x1, [sp, #112]
  4334d0:	str	w2, [sp, #124]
  4334d4:	mov	x26, x3
  4334d8:	mov	x22, x4
  4334dc:	ldr	x20, [x0]
  4334e0:	ldr	x27, [x0, #32]
  4334e4:	cbz	x20, 4334f8 <argp_error@@Base+0x50c>
  4334e8:	stp	x23, x24, [sp, #48]
  4334ec:	mov	x19, x20
  4334f0:	mov	w28, #0x3a                  	// #58
  4334f4:	b	433530 <argp_error@@Base+0x544>
  4334f8:	ldr	x0, [sp, #104]
  4334fc:	ldr	x0, [x0, #8]
  433500:	cbnz	x0, 43367c <argp_error@@Base+0x690>
  433504:	mov	x26, x20
  433508:	b	4336ec <argp_error@@Base+0x700>
  43350c:	ldr	x0, [x21, #32]!
  433510:	cbz	x0, 4335e0 <argp_error@@Base+0x5f4>
  433514:	mov	x1, x23
  433518:	bl	404720 <strcmp@plt>
  43351c:	cbnz	w0, 43350c <argp_error@@Base+0x520>
  433520:	sub	x21, x21, x25
  433524:	asr	x21, x21, #5
  433528:	tbnz	w21, #31, 4335e0 <argp_error@@Base+0x5f4>
  43352c:	add	x19, x19, #0x30
  433530:	ldr	w21, [x19, #8]
  433534:	cbnz	w21, 433540 <argp_error@@Base+0x554>
  433538:	ldr	x0, [x19]
  43353c:	cbz	x0, 433668 <argp_error@@Base+0x67c>
  433540:	ldr	w1, [x19, #24]
  433544:	tst	x1, #0x4
  433548:	csel	x20, x20, x19, ne  // ne = any
  43354c:	ldr	w0, [x20, #24]
  433550:	and	w24, w0, #0x8
  433554:	tbnz	w0, #3, 43352c <argp_error@@Base+0x540>
  433558:	tbnz	w1, #3, 4335c0 <argp_error@@Base+0x5d4>
  43355c:	sub	w0, w21, #0x1
  433560:	cmp	w0, #0xfe
  433564:	b.hi	4335c0 <argp_error@@Base+0x5d4>  // b.pmore
  433568:	bl	404750 <__ctype_b_loc@plt>
  43356c:	ldr	x0, [x0]
  433570:	ldrh	w0, [x0, w21, sxtw #1]
  433574:	tbz	w0, #14, 4335c0 <argp_error@@Base+0x5d4>
  433578:	ldr	x0, [x22, #8]
  43357c:	add	x1, x0, #0x1
  433580:	str	x1, [x22, #8]
  433584:	strb	w21, [x0]
  433588:	ldr	x0, [x20, #16]
  43358c:	cbz	x0, 4335b8 <argp_error@@Base+0x5cc>
  433590:	ldr	x0, [x22, #8]
  433594:	add	x1, x0, #0x1
  433598:	str	x1, [x22, #8]
  43359c:	strb	w28, [x0]
  4335a0:	ldr	w0, [x20, #24]
  4335a4:	tbz	w0, #0, 4335b8 <argp_error@@Base+0x5cc>
  4335a8:	ldr	x0, [x22, #8]
  4335ac:	add	x1, x0, #0x1
  4335b0:	str	x1, [x22, #8]
  4335b4:	strb	w28, [x0]
  4335b8:	ldr	x0, [x22, #8]
  4335bc:	strb	wzr, [x0]
  4335c0:	ldr	x23, [x19]
  4335c4:	cbz	x23, 43352c <argp_error@@Base+0x540>
  4335c8:	ldr	x0, [x22]
  4335cc:	ldr	x25, [x0, #16]
  4335d0:	ldr	x0, [x25]
  4335d4:	cbz	x0, 4335e0 <argp_error@@Base+0x5f4>
  4335d8:	mov	x21, x25
  4335dc:	b	433514 <argp_error@@Base+0x528>
  4335e0:	ldr	x0, [x22, #16]
  4335e4:	str	x23, [x0]
  4335e8:	ldr	x0, [x20, #16]
  4335ec:	cbz	x0, 4335fc <argp_error@@Base+0x610>
  4335f0:	ldr	w24, [x20, #24]
  4335f4:	and	w24, w24, #0x1
  4335f8:	add	w24, w24, #0x1
  4335fc:	ldr	x0, [x22, #16]
  433600:	str	w24, [x0, #8]
  433604:	ldr	x0, [x22, #16]
  433608:	str	xzr, [x0, #16]
  43360c:	ldr	w0, [x19, #8]
  433610:	and	w1, w0, #0xffffff
  433614:	cbnz	w0, 433620 <argp_error@@Base+0x634>
  433618:	ldr	w0, [x20, #8]
  43361c:	and	w1, w0, #0xffffff
  433620:	ldr	x2, [x22, #16]
  433624:	ldr	x0, [x22]
  433628:	ldr	x0, [x0, #80]
  43362c:	sub	x0, x26, x0
  433630:	asr	x0, x0, #3
  433634:	mov	x3, #0x8e39                	// #36409
  433638:	movk	x3, #0x38e3, lsl #16
  43363c:	movk	x3, #0xe38e, lsl #32
  433640:	movk	x3, #0x8e38, lsl #48
  433644:	mul	x0, x0, x3
  433648:	add	w0, w0, #0x1
  43364c:	add	w0, w1, w0, lsl #24
  433650:	str	w0, [x2, #24]
  433654:	ldr	x0, [x22, #16]
  433658:	add	x1, x0, #0x20
  43365c:	str	x1, [x22, #16]
  433660:	str	xzr, [x0, #32]
  433664:	b	43352c <argp_error@@Base+0x540>
  433668:	ldr	x0, [x19, #32]
  43366c:	cbnz	x0, 433540 <argp_error@@Base+0x554>
  433670:	ldr	w0, [x19, #40]
  433674:	cbnz	w0, 433540 <argp_error@@Base+0x554>
  433678:	ldp	x23, x24, [sp, #48]
  43367c:	ldr	x1, [sp, #104]
  433680:	ldr	x0, [x1, #8]
  433684:	str	x0, [x26]
  433688:	str	x1, [x26, #8]
  43368c:	ldr	x0, [x22, #8]
  433690:	str	x0, [x26, #16]
  433694:	str	wzr, [x26, #24]
  433698:	ldr	x0, [sp, #112]
  43369c:	str	x0, [x26, #32]
  4336a0:	ldr	w0, [sp, #124]
  4336a4:	str	w0, [x26, #40]
  4336a8:	str	xzr, [x26, #48]
  4336ac:	str	xzr, [x26, #64]
  4336b0:	str	xzr, [x26, #56]
  4336b4:	cbz	x27, 4336e8 <argp_error@@Base+0x6fc>
  4336b8:	ldr	x0, [x27]
  4336bc:	cbz	x0, 433738 <argp_error@@Base+0x74c>
  4336c0:	mov	w0, #0x0                   	// #0
  4336c4:	add	w0, w0, #0x1
  4336c8:	mov	w2, w0
  4336cc:	ubfiz	x1, x0, #5, #32
  4336d0:	ldr	x1, [x27, x1]
  4336d4:	cbnz	x1, 4336c4 <argp_error@@Base+0x6d8>
  4336d8:	ldr	x0, [x22, #24]
  4336dc:	str	x0, [x26, #56]
  4336e0:	add	x2, x0, x2, lsl #3
  4336e4:	str	x2, [x22, #24]
  4336e8:	add	x3, x26, #0x48
  4336ec:	cbz	x27, 43371c <argp_error@@Base+0x730>
  4336f0:	ldr	x0, [x27]
  4336f4:	cbz	x0, 43371c <argp_error@@Base+0x730>
  4336f8:	mov	w19, #0x0                   	// #0
  4336fc:	mov	w2, w19
  433700:	mov	x4, x22
  433704:	add	w19, w19, #0x1
  433708:	mov	x1, x26
  43370c:	bl	4334b0 <argp_error@@Base+0x4c4>
  433710:	mov	x3, x0
  433714:	ldr	x0, [x27, #32]!
  433718:	cbnz	x0, 4336fc <argp_error@@Base+0x710>
  43371c:	mov	x0, x3
  433720:	ldp	x19, x20, [sp, #16]
  433724:	ldp	x21, x22, [sp, #32]
  433728:	ldp	x25, x26, [sp, #64]
  43372c:	ldp	x27, x28, [sp, #80]
  433730:	ldp	x29, x30, [sp], #128
  433734:	ret
  433738:	mov	x2, #0x0                   	// #0
  43373c:	b	4336d8 <argp_error@@Base+0x6ec>

0000000000433740 <argp_parse@@Base>:
  433740:	stp	x29, x30, [sp, #-464]!
  433744:	mov	x29, sp
  433748:	stp	x19, x20, [sp, #16]
  43374c:	stp	x21, x22, [sp, #32]
  433750:	stp	x23, x24, [sp, #48]
  433754:	stp	x25, x26, [sp, #64]
  433758:	stp	x27, x28, [sp, #80]
  43375c:	mov	x23, x0
  433760:	str	w1, [x29, #124]
  433764:	mov	x25, x2
  433768:	mov	w21, w3
  43376c:	str	x4, [x29, #96]
  433770:	str	x5, [x29, #104]
  433774:	tbnz	w21, #0, 433790 <argp_parse@@Base+0x50>
  433778:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43377c:	ldr	x0, [x0, #1088]
  433780:	cbz	x0, 4337c8 <argp_parse@@Base+0x88>
  433784:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  433788:	ldr	x0, [x0, #1128]
  43378c:	cbz	x0, 4337d8 <argp_parse@@Base+0x98>
  433790:	tbz	w21, #4, 4337ec <argp_parse@@Base+0xac>
  433794:	str	w21, [x29, #112]
  433798:	stp	xzr, xzr, [x29, #192]
  43379c:	stp	xzr, xzr, [x29, #208]
  4337a0:	stp	xzr, xzr, [x29, #224]
  4337a4:	str	xzr, [x29, #240]
  4337a8:	ands	w28, w21, #0x4
  4337ac:	cset	x0, eq  // eq = none
  4337b0:	str	x0, [x29, #128]
  4337b4:	str	xzr, [x29, #136]
  4337b8:	str	xzr, [x29, #144]
  4337bc:	str	xzr, [x29, #152]
  4337c0:	cbz	x23, 4338a8 <argp_parse@@Base+0x168>
  4337c4:	b	43389c <argp_parse@@Base+0x15c>
  4337c8:	ldr	x1, [x2]
  4337cc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4337d0:	str	x1, [x0, #1088]
  4337d4:	b	433784 <argp_parse@@Base+0x44>
  4337d8:	ldr	x0, [x25]
  4337dc:	bl	434ae4 <argp_parse@@Base+0x13a4>
  4337e0:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4337e4:	str	x0, [x1, #1128]
  4337e8:	b	433790 <argp_parse@@Base+0x50>
  4337ec:	sub	sp, sp, #0x80
  4337f0:	mov	x0, sp
  4337f4:	sub	sp, sp, #0x40
  4337f8:	mov	x1, sp
  4337fc:	stp	xzr, xzr, [x1]
  433800:	stp	xzr, xzr, [x1, #16]
  433804:	stp	xzr, xzr, [x1, #32]
  433808:	str	xzr, [x1, #48]
  43380c:	str	x0, [x1, #32]
  433810:	stp	xzr, xzr, [x0]
  433814:	stp	xzr, xzr, [x0, #16]
  433818:	stp	xzr, xzr, [x0, #32]
  43381c:	stp	xzr, xzr, [x0, #48]
  433820:	stp	xzr, xzr, [x0, #64]
  433824:	stp	xzr, xzr, [x0, #80]
  433828:	stp	xzr, xzr, [x0, #96]
  43382c:	stp	xzr, xzr, [x0, #112]
  433830:	mov	x2, x0
  433834:	cbz	x23, 43383c <argp_parse@@Base+0xfc>
  433838:	str	x23, [x2], #32
  43383c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  433840:	add	x0, x0, #0x50
  433844:	str	x0, [x2]
  433848:	adrp	x0, 481000 <argp_program_version_hook@@Base+0x298>
  43384c:	ldr	x0, [x0, #968]
  433850:	cbz	x0, 433a28 <argp_parse@@Base+0x2e8>
  433854:	add	x3, x2, #0x40
  433858:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43385c:	add	x0, x0, #0x50
  433860:	add	x0, x0, #0x38
  433864:	str	x0, [x2, #32]
  433868:	str	xzr, [x3]
  43386c:	str	w21, [x29, #112]
  433870:	stp	xzr, xzr, [x29, #192]
  433874:	stp	xzr, xzr, [x29, #208]
  433878:	stp	xzr, xzr, [x29, #224]
  43387c:	str	xzr, [x29, #240]
  433880:	ands	w28, w21, #0x4
  433884:	cset	x0, eq  // eq = none
  433888:	str	x0, [x29, #128]
  43388c:	str	xzr, [x29, #136]
  433890:	str	xzr, [x29, #144]
  433894:	str	xzr, [x29, #152]
  433898:	mov	x23, x1
  43389c:	add	x1, x29, #0x80
  4338a0:	mov	x0, x23
  4338a4:	bl	43321c <argp_error@@Base+0x230>
  4338a8:	ldr	x19, [x29, #144]
  4338ac:	add	x19, x19, #0x1
  4338b0:	add	x19, x19, x19, lsl #3
  4338b4:	lsl	x19, x19, #3
  4338b8:	ldr	x27, [x29, #152]
  4338bc:	lsl	x27, x27, #3
  4338c0:	add	x24, x27, x19
  4338c4:	ldr	x22, [x29, #136]
  4338c8:	add	x22, x22, #0x1
  4338cc:	add	x22, x24, x22, lsl #5
  4338d0:	ldr	x0, [x29, #128]
  4338d4:	add	x0, x0, #0x1
  4338d8:	add	x0, x0, x22
  4338dc:	bl	404310 <malloc@plt>
  4338e0:	mov	x20, x0
  4338e4:	str	x0, [x29, #456]
  4338e8:	cbz	x0, 434144 <argp_parse@@Base+0xa04>
  4338ec:	str	x0, [x29, #328]
  4338f0:	add	x19, x0, x19
  4338f4:	str	x19, [x29, #344]
  4338f8:	add	x24, x0, x24
  4338fc:	str	x24, [x29, #264]
  433900:	add	x26, x0, x22
  433904:	str	x26, [x29, #256]
  433908:	mov	w0, #0x1                   	// #1
  43390c:	str	w0, [x29, #192]
  433910:	str	w0, [x29, #196]
  433914:	ldp	x0, x1, [x29, #192]
  433918:	stp	x0, x1, [x29, #272]
  43391c:	ldp	x0, x1, [x29, #208]
  433920:	stp	x0, x1, [x29, #288]
  433924:	ldp	x0, x1, [x29, #224]
  433928:	stp	x0, x1, [x29, #304]
  43392c:	ldr	x0, [x29, #240]
  433930:	str	x0, [x29, #320]
  433934:	mov	x2, x27
  433938:	mov	w1, #0x0                   	// #0
  43393c:	mov	x0, x19
  433940:	bl	404420 <memset@plt>
  433944:	add	x0, x29, #0xf8
  433948:	str	x0, [x29, #160]
  43394c:	str	x26, [x29, #168]
  433950:	str	x24, [x29, #176]
  433954:	str	x19, [x29, #184]
  433958:	ldr	x0, [x29, #112]
  43395c:	tbz	w0, #3, 433a3c <argp_parse@@Base+0x2fc>
  433960:	add	x26, x26, #0x1
  433964:	str	x26, [x29, #168]
  433968:	mov	w0, #0x2d                  	// #45
  43396c:	strb	w0, [x20, x22]
  433970:	ldr	x0, [x29, #168]
  433974:	strb	wzr, [x0]
  433978:	ldr	x0, [x29, #176]
  43397c:	str	xzr, [x0]
  433980:	str	x23, [x29, #248]
  433984:	cbz	x23, 433a54 <argp_parse@@Base+0x314>
  433988:	add	x4, x29, #0xa0
  43398c:	ldr	x3, [x29, #328]
  433990:	mov	w2, #0x0                   	// #0
  433994:	mov	x1, #0x0                   	// #0
  433998:	mov	x0, x23
  43399c:	bl	4334b0 <argp_error@@Base+0x4c4>
  4339a0:	str	x0, [x29, #336]
  4339a4:	add	x1, x29, #0xf8
  4339a8:	stp	xzr, xzr, [x29, #368]
  4339ac:	stp	xzr, xzr, [x29, #384]
  4339b0:	stp	xzr, xzr, [x29, #400]
  4339b4:	stp	xzr, xzr, [x29, #416]
  4339b8:	ldr	x0, [x29, #248]
  4339bc:	str	x0, [x29, #360]
  4339c0:	ldr	w0, [x29, #124]
  4339c4:	str	w0, [x29, #368]
  4339c8:	str	x25, [x29, #376]
  4339cc:	str	w21, [x29, #388]
  4339d0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4339d4:	ldr	x0, [x0, #1096]
  4339d8:	str	x0, [x29, #432]
  4339dc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4339e0:	ldr	x0, [x0, #1104]
  4339e4:	str	x0, [x29, #440]
  4339e8:	str	x1, [x29, #448]
  4339ec:	mov	w0, #0x1                   	// #1
  4339f0:	str	w0, [x29, #352]
  4339f4:	ldr	x0, [x29, #328]
  4339f8:	ldr	x1, [x29, #336]
  4339fc:	cmp	x0, x1
  433a00:	b.cs	433ae8 <argp_parse@@Base+0x3a8>  // b.hs, b.nlast
  433a04:	ldr	x1, [x29, #104]
  433a08:	str	x1, [x0, #48]
  433a0c:	ldr	x20, [x29, #328]
  433a10:	ldr	x0, [x29, #336]
  433a14:	cmp	x0, x20
  433a18:	b.ls	433ae8 <argp_parse@@Base+0x3a8>  // b.plast
  433a1c:	mov	w21, #0x3                   	// #3
  433a20:	movk	w21, #0x100, lsl #16
  433a24:	b	433a9c <argp_parse@@Base+0x35c>
  433a28:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  433a2c:	ldr	x0, [x0, #3432]
  433a30:	add	x3, x2, #0x20
  433a34:	cbnz	x0, 433854 <argp_parse@@Base+0x114>
  433a38:	b	433868 <argp_parse@@Base+0x128>
  433a3c:	cbz	w28, 433970 <argp_parse@@Base+0x230>
  433a40:	add	x26, x26, #0x1
  433a44:	str	x26, [x29, #168]
  433a48:	mov	w0, #0x2b                  	// #43
  433a4c:	strb	w0, [x20, x22]
  433a50:	b	433970 <argp_parse@@Base+0x230>
  433a54:	ldr	x0, [x29, #328]
  433a58:	str	x0, [x29, #336]
  433a5c:	b	4339a4 <argp_parse@@Base+0x264>
  433a60:	ldr	x0, [x20]
  433a64:	cbz	x0, 433ab8 <argp_parse@@Base+0x378>
  433a68:	mov	x3, #0x0                   	// #0
  433a6c:	mov	w2, w21
  433a70:	add	x1, x29, #0x168
  433a74:	mov	x0, x20
  433a78:	bl	4331b0 <argp_error@@Base+0x1c4>
  433a7c:	mov	w19, w0
  433a80:	add	x20, x20, #0x48
  433a84:	ldr	x0, [x29, #336]
  433a88:	cmp	x20, x0
  433a8c:	b.cs	433adc <argp_parse@@Base+0x39c>  // b.hs, b.nlast
  433a90:	cmp	w19, #0x0
  433a94:	ccmp	w19, #0x7, #0x4, ne  // ne = any
  433a98:	b.ne	434060 <argp_parse@@Base+0x920>  // b.any
  433a9c:	ldr	x0, [x20, #32]
  433aa0:	cbz	x0, 433a60 <argp_parse@@Base+0x320>
  433aa4:	ldr	w1, [x20, #40]
  433aa8:	ldr	x0, [x0, #56]
  433aac:	ldr	x0, [x0, x1, lsl #3]
  433ab0:	str	x0, [x20, #48]
  433ab4:	b	433a60 <argp_parse@@Base+0x320>
  433ab8:	ldr	x0, [x20, #8]
  433abc:	ldr	x0, [x0, #32]
  433ac0:	cbz	x0, 433a68 <argp_parse@@Base+0x328>
  433ac4:	ldr	x0, [x0]
  433ac8:	cbz	x0, 433a68 <argp_parse@@Base+0x328>
  433acc:	ldr	x0, [x20, #56]
  433ad0:	ldr	x1, [x20, #48]
  433ad4:	str	x1, [x0]
  433ad8:	b	433a68 <argp_parse@@Base+0x328>
  433adc:	cmp	w19, #0x0
  433ae0:	ccmp	w19, #0x7, #0x4, ne  // ne = any
  433ae4:	b.ne	434060 <argp_parse@@Base+0x920>  // b.any
  433ae8:	ldr	w0, [x29, #388]
  433aec:	tbz	w0, #1, 433b14 <argp_parse@@Base+0x3d4>
  433af0:	str	wzr, [x29, #276]
  433af4:	tbz	w0, #0, 433b1c <argp_parse@@Base+0x3dc>
  433af8:	ldr	x0, [x29, #376]
  433afc:	sub	x0, x0, #0x8
  433b00:	str	x0, [x29, #376]
  433b04:	ldr	w0, [x29, #368]
  433b08:	add	w0, w0, #0x1
  433b0c:	str	w0, [x29, #368]
  433b10:	b	433b1c <argp_parse@@Base+0x3dc>
  433b14:	mov	w0, #0x1                   	// #1
  433b18:	str	w0, [x29, #276]
  433b1c:	ldr	x0, [x29, #376]
  433b20:	cmp	x25, x0
  433b24:	b.eq	433b48 <argp_parse@@Base+0x408>  // b.none
  433b28:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  433b2c:	ldr	x0, [x0, #1128]
  433b30:	str	x0, [x29, #424]
  433b34:	mov	w25, #0xffffffff            	// #-1
  433b38:	add	x22, x29, #0x168
  433b3c:	mov	w24, #0x6                   	// #6
  433b40:	movk	w24, #0x100, lsl #16
  433b44:	b	433c08 <argp_parse@@Base+0x4c8>
  433b48:	ldr	x0, [x25]
  433b4c:	cbz	x0, 433b28 <argp_parse@@Base+0x3e8>
  433b50:	bl	434ae4 <argp_parse@@Base+0x13a4>
  433b54:	str	x0, [x29, #424]
  433b58:	b	433b34 <argp_parse@@Base+0x3f4>
  433b5c:	ldr	w0, [x29, #384]
  433b60:	str	w0, [x29, #272]
  433b64:	str	w25, [x29, #280]
  433b68:	ldr	w0, [x29, #388]
  433b6c:	tbz	w0, #6, 433c7c <argp_parse@@Base+0x53c>
  433b70:	add	x5, x29, #0x110
  433b74:	mov	x4, #0x0                   	// #0
  433b78:	ldr	x3, [x29, #264]
  433b7c:	ldr	x2, [x29, #256]
  433b80:	ldr	x1, [x29, #376]
  433b84:	ldr	w0, [x29, #368]
  433b88:	bl	440d88 <argp_parse@@Base+0xd648>
  433b8c:	mov	w20, w0
  433b90:	ldr	w19, [x29, #272]
  433b94:	str	w19, [x29, #384]
  433b98:	cmn	w20, #0x1
  433b9c:	b.eq	433ca0 <argp_parse@@Base+0x560>  // b.none
  433ba0:	cmp	w20, #0x3f
  433ba4:	b.eq	433cd0 <argp_parse@@Base+0x590>  // b.none
  433ba8:	cmp	w20, #0x1
  433bac:	b.eq	433c54 <argp_parse@@Base+0x514>  // b.none
  433bb0:	ldr	x19, [x29, #288]
  433bb4:	asr	w0, w20, #24
  433bb8:	cmp	wzr, w20, asr #24
  433bbc:	b.eq	433ce0 <argp_parse@@Base+0x5a0>  // b.none
  433bc0:	ands	w1, w20, #0x800000
  433bc4:	mov	w2, #0xff000000            	// #-16777216
  433bc8:	csel	w1, w1, w2, eq  // eq = none
  433bcc:	and	w2, w20, #0xffffff
  433bd0:	sbfiz	x3, x0, #3, #32
  433bd4:	add	x0, x3, w0, sxtw
  433bd8:	lsl	x0, x0, #3
  433bdc:	sub	x0, x0, #0x48
  433be0:	mov	x3, x19
  433be4:	orr	w2, w2, w1
  433be8:	mov	x1, x22
  433bec:	ldr	x4, [x29, #328]
  433bf0:	add	x0, x4, x0
  433bf4:	bl	4331b0 <argp_error@@Base+0x1c4>
  433bf8:	mov	w19, w0
  433bfc:	cmp	w0, #0x7
  433c00:	b.eq	433e78 <argp_parse@@Base+0x738>  // b.none
  433c04:	cbnz	w19, 433fc8 <argp_parse@@Base+0x888>
  433c08:	ldr	w0, [x29, #396]
  433c0c:	cbz	w0, 433c20 <argp_parse@@Base+0x4e0>
  433c10:	ldr	w1, [x29, #384]
  433c14:	cmp	w0, w1
  433c18:	b.le	433c28 <argp_parse@@Base+0x4e8>
  433c1c:	str	wzr, [x29, #396]
  433c20:	ldr	w0, [x29, #352]
  433c24:	cbnz	w0, 433b5c <argp_parse@@Base+0x41c>
  433c28:	ldr	w0, [x29, #384]
  433c2c:	ldr	w1, [x29, #368]
  433c30:	cmp	w0, w1
  433c34:	b.ge	434134 <argp_parse@@Base+0x9f4>  // b.tcont
  433c38:	ldr	w1, [x29, #388]
  433c3c:	tbnz	w1, #2, 43413c <argp_parse@@Base+0x9fc>
  433c40:	add	w1, w0, #0x1
  433c44:	str	w1, [x29, #384]
  433c48:	ldr	x1, [x29, #376]
  433c4c:	ldr	x0, [x1, w0, sxtw #3]
  433c50:	str	x0, [x29, #288]
  433c54:	ldr	x23, [x29, #288]
  433c58:	ldr	w21, [x29, #384]
  433c5c:	sub	w21, w21, #0x1
  433c60:	str	w21, [x29, #384]
  433c64:	ldr	x20, [x29, #328]
  433c68:	ldr	x0, [x29, #336]
  433c6c:	cmp	x0, x20
  433c70:	b.hi	433d8c <argp_parse@@Base+0x64c>  // b.pmore
  433c74:	mov	w20, #0x1                   	// #1
  433c78:	b	433dcc <argp_parse@@Base+0x68c>
  433c7c:	add	x5, x29, #0x110
  433c80:	mov	x4, #0x0                   	// #0
  433c84:	ldr	x3, [x29, #264]
  433c88:	ldr	x2, [x29, #256]
  433c8c:	ldr	x1, [x29, #376]
  433c90:	ldr	w0, [x29, #368]
  433c94:	bl	440d4c <argp_parse@@Base+0xd60c>
  433c98:	mov	w20, w0
  433c9c:	b	433b90 <argp_parse@@Base+0x450>
  433ca0:	str	wzr, [x29, #352]
  433ca4:	cmp	w19, #0x1
  433ca8:	b.le	433c28 <argp_parse@@Base+0x4e8>
  433cac:	ldr	x0, [x29, #376]
  433cb0:	add	x0, x0, w19, sxtw #3
  433cb4:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  433cb8:	add	x1, x1, #0xf58
  433cbc:	ldur	x0, [x0, #-8]
  433cc0:	bl	404720 <strcmp@plt>
  433cc4:	cbnz	w0, 433c28 <argp_parse@@Base+0x4e8>
  433cc8:	str	w19, [x29, #396]
  433ccc:	b	433c28 <argp_parse@@Base+0x4e8>
  433cd0:	ldr	w0, [x29, #280]
  433cd4:	cmn	w0, #0x1
  433cd8:	b.ne	43412c <argp_parse@@Base+0x9ec>  // b.any
  433cdc:	ldr	x19, [x29, #288]
  433ce0:	mov	w1, w20
  433ce4:	ldr	x0, [x29, #256]
  433ce8:	bl	404870 <strchr@plt>
  433cec:	mov	x2, x0
  433cf0:	cbz	x0, 433d1c <argp_parse@@Base+0x5dc>
  433cf4:	ldr	x0, [x29, #328]
  433cf8:	ldr	x3, [x29, #336]
  433cfc:	cmp	x0, x3
  433d00:	b.cs	433d1c <argp_parse@@Base+0x5dc>  // b.hs, b.nlast
  433d04:	ldr	x1, [x0, #16]
  433d08:	cmp	x2, x1
  433d0c:	b.cc	433e58 <argp_parse@@Base+0x718>  // b.lo, b.ul, b.last
  433d10:	add	x0, x0, #0x48
  433d14:	cmp	x0, x3
  433d18:	b.cc	433d04 <argp_parse@@Base+0x5c4>  // b.lo, b.ul, b.last
  433d1c:	mov	w2, #0x5                   	// #5
  433d20:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  433d24:	add	x1, x1, #0x50
  433d28:	add	x1, x1, #0x70
  433d2c:	ldr	x0, [x29, #248]
  433d30:	ldr	x0, [x0, #48]
  433d34:	bl	4049c0 <dcgettext@plt>
  433d38:	mov	x3, x0
  433d3c:	mov	w2, w20
  433d40:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  433d44:	add	x1, x1, #0xf60
  433d48:	add	x0, x29, #0x168
  433d4c:	bl	432fec <argp_error@@Base>
  433d50:	b	433dcc <argp_parse@@Base+0x68c>
  433d54:	ldr	w0, [x29, #384]
  433d58:	sub	w0, w0, #0x1
  433d5c:	str	w0, [x29, #384]
  433d60:	mov	x3, #0x0                   	// #0
  433d64:	mov	w2, w24
  433d68:	mov	x1, x22
  433d6c:	mov	x0, x20
  433d70:	bl	4331b0 <argp_error@@Base+0x1c4>
  433d74:	mov	w19, w0
  433d78:	add	x20, x20, #0x48
  433d7c:	ldr	x0, [x29, #336]
  433d80:	cmp	x20, x0
  433d84:	ccmp	w19, #0x7, #0x0, cc  // cc = lo, ul, last
  433d88:	b.ne	434160 <argp_parse@@Base+0xa20>  // b.any
  433d8c:	ldr	w0, [x29, #384]
  433d90:	add	w0, w0, #0x1
  433d94:	str	w0, [x29, #384]
  433d98:	mov	x3, x23
  433d9c:	mov	w2, #0x0                   	// #0
  433da0:	mov	x1, x22
  433da4:	mov	x0, x20
  433da8:	bl	4331b0 <argp_error@@Base+0x1c4>
  433dac:	mov	w19, w0
  433db0:	cmp	w0, #0x7
  433db4:	b.eq	433d54 <argp_parse@@Base+0x614>  // b.none
  433db8:	add	x20, x20, #0x48
  433dbc:	cbz	w0, 43416c <argp_parse@@Base+0xa2c>
  433dc0:	cmp	w19, #0x7
  433dc4:	b.ne	433c04 <argp_parse@@Base+0x4c4>  // b.any
  433dc8:	mov	w20, #0x1                   	// #1
  433dcc:	add	w20, w20, #0x1
  433dd0:	tst	w20, #0xfffffffd
  433dd4:	cset	w0, eq  // eq = none
  433dd8:	cbz	w0, 4340d8 <argp_parse@@Base+0x998>
  433ddc:	ldr	w0, [x29, #384]
  433de0:	ldr	w1, [x29, #368]
  433de4:	cmp	w0, w1
  433de8:	b.eq	433ef8 <argp_parse@@Base+0x7b8>  // b.none
  433dec:	ldr	x1, [x29, #96]
  433df0:	cbz	x1, 43409c <argp_parse@@Base+0x95c>
  433df4:	str	w0, [x1]
  433df8:	ldr	x20, [x29, #336]
  433dfc:	sub	x20, x20, #0x48
  433e00:	ldr	x0, [x29, #328]
  433e04:	cmp	x20, x0
  433e08:	b.cc	434110 <argp_parse@@Base+0x9d0>  // b.lo, b.ul, b.last
  433e0c:	mov	w21, #0x4                   	// #4
  433e10:	movk	w21, #0x100, lsl #16
  433e14:	mov	x3, #0x0                   	// #0
  433e18:	mov	w2, w21
  433e1c:	add	x1, x29, #0x168
  433e20:	mov	x0, x20
  433e24:	bl	4331b0 <argp_error@@Base+0x1c4>
  433e28:	mov	w19, w0
  433e2c:	sub	x20, x20, #0x48
  433e30:	ldr	x0, [x29, #328]
  433e34:	cmp	x20, x0
  433e38:	b.cc	4340f0 <argp_parse@@Base+0x9b0>  // b.lo, b.ul, b.last
  433e3c:	cmp	w19, #0x0
  433e40:	ccmp	w19, #0x7, #0x4, ne  // ne = any
  433e44:	b.eq	433e14 <argp_parse@@Base+0x6d4>  // b.none
  433e48:	b	4340f8 <argp_parse@@Base+0x9b8>
  433e4c:	mov	w0, #0x1                   	// #1
  433e50:	str	w0, [x29, #352]
  433e54:	b	433c08 <argp_parse@@Base+0x4c8>
  433e58:	mov	x3, x19
  433e5c:	mov	w2, w20
  433e60:	mov	x1, x22
  433e64:	bl	4331b0 <argp_error@@Base+0x1c4>
  433e68:	mov	w19, w0
  433e6c:	cmp	w0, #0x7
  433e70:	b.ne	433c04 <argp_parse@@Base+0x4c4>  // b.any
  433e74:	b	433d1c <argp_parse@@Base+0x5dc>
  433e78:	ldr	x0, [x29, #264]
  433e7c:	ldr	w1, [x0, #24]
  433e80:	cmp	w1, w20
  433e84:	b.eq	433ea0 <argp_parse@@Base+0x760>  // b.none
  433e88:	ldr	x1, [x0]
  433e8c:	cbz	x1, 433ee0 <argp_parse@@Base+0x7a0>
  433e90:	add	x0, x0, #0x20
  433e94:	ldr	w1, [x0, #24]
  433e98:	cmp	w20, w1
  433e9c:	b.ne	433e88 <argp_parse@@Base+0x748>  // b.any
  433ea0:	ldr	x19, [x0]
  433ea4:	cbz	x19, 433eec <argp_parse@@Base+0x7ac>
  433ea8:	mov	w2, #0x5                   	// #5
  433eac:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  433eb0:	add	x1, x1, #0x50
  433eb4:	add	x1, x1, #0x70
  433eb8:	ldr	x0, [x29, #248]
  433ebc:	ldr	x0, [x0, #48]
  433ec0:	bl	4049c0 <dcgettext@plt>
  433ec4:	mov	x3, x0
  433ec8:	mov	x2, x19
  433ecc:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  433ed0:	add	x1, x1, #0xf68
  433ed4:	add	x0, x29, #0x168
  433ed8:	bl	432fec <argp_error@@Base>
  433edc:	b	433dcc <argp_parse@@Base+0x68c>
  433ee0:	adrp	x19, 45a000 <_obstack_memory_used@@Base+0x18e64>
  433ee4:	add	x19, x19, #0xf50
  433ee8:	b	433ea8 <argp_parse@@Base+0x768>
  433eec:	adrp	x19, 45a000 <_obstack_memory_used@@Base+0x18e64>
  433ef0:	add	x19, x19, #0xf50
  433ef4:	b	433ea8 <argp_parse@@Base+0x768>
  433ef8:	ldr	x21, [x29, #328]
  433efc:	ldr	x20, [x29, #336]
  433f00:	cmp	x21, x20
  433f04:	b.cs	434118 <argp_parse@@Base+0x9d8>  // b.hs, b.nlast
  433f08:	mov	w19, #0x0                   	// #0
  433f0c:	mov	w22, #0x2                   	// #2
  433f10:	movk	w22, #0x100, lsl #16
  433f14:	b	433f34 <argp_parse@@Base+0x7f4>
  433f18:	add	x21, x21, #0x48
  433f1c:	ldr	x20, [x29, #336]
  433f20:	cmp	x21, x20
  433f24:	b.cs	433f58 <argp_parse@@Base+0x818>  // b.hs, b.nlast
  433f28:	cmp	w19, #0x0
  433f2c:	ccmp	w19, #0x7, #0x4, ne  // ne = any
  433f30:	b.ne	43414c <argp_parse@@Base+0xa0c>  // b.any
  433f34:	ldr	w0, [x21, #24]
  433f38:	cbnz	w0, 433f18 <argp_parse@@Base+0x7d8>
  433f3c:	mov	x3, #0x0                   	// #0
  433f40:	mov	w2, w22
  433f44:	add	x1, x29, #0x168
  433f48:	mov	x0, x21
  433f4c:	bl	4331b0 <argp_error@@Base+0x1c4>
  433f50:	mov	w19, w0
  433f54:	b	433f18 <argp_parse@@Base+0x7d8>
  433f58:	sub	x20, x20, #0x48
  433f5c:	ldr	x0, [x29, #328]
  433f60:	cmp	x20, x0
  433f64:	b.cc	434084 <argp_parse@@Base+0x944>  // b.lo, b.ul, b.last
  433f68:	cmp	w19, #0x0
  433f6c:	ccmp	w19, #0x7, #0x4, ne  // ne = any
  433f70:	b.ne	433fb0 <argp_parse@@Base+0x870>  // b.any
  433f74:	mov	w21, #0x1                   	// #1
  433f78:	movk	w21, #0x100, lsl #16
  433f7c:	mov	x3, #0x0                   	// #0
  433f80:	mov	w2, w21
  433f84:	add	x1, x29, #0x168
  433f88:	mov	x0, x20
  433f8c:	bl	4331b0 <argp_error@@Base+0x1c4>
  433f90:	mov	w19, w0
  433f94:	sub	x20, x20, #0x48
  433f98:	ldr	x0, [x29, #328]
  433f9c:	cmp	x20, x0
  433fa0:	b.cc	434084 <argp_parse@@Base+0x944>  // b.lo, b.ul, b.last
  433fa4:	cmp	w19, #0x0
  433fa8:	ccmp	w19, #0x7, #0x4, ne  // ne = any
  433fac:	b.eq	433f7c <argp_parse@@Base+0x83c>  // b.none
  433fb0:	ldr	x0, [x29, #96]
  433fb4:	cbz	x0, 433fc4 <argp_parse@@Base+0x884>
  433fb8:	ldr	w0, [x29, #384]
  433fbc:	ldr	x1, [x29, #96]
  433fc0:	str	w0, [x1]
  433fc4:	cbz	w19, 433df8 <argp_parse@@Base+0x6b8>
  433fc8:	cmp	w19, #0x7
  433fcc:	b.eq	4340d8 <argp_parse@@Base+0x998>  // b.none
  433fd0:	ldr	x20, [x29, #328]
  433fd4:	ldr	x0, [x29, #336]
  433fd8:	cmp	x20, x0
  433fdc:	b.cs	43400c <argp_parse@@Base+0x8cc>  // b.hs, b.nlast
  433fe0:	mov	w21, #0x5                   	// #5
  433fe4:	movk	w21, #0x100, lsl #16
  433fe8:	mov	x3, #0x0                   	// #0
  433fec:	mov	w2, w21
  433ff0:	add	x1, x29, #0x168
  433ff4:	mov	x0, x20
  433ff8:	bl	4331b0 <argp_error@@Base+0x1c4>
  433ffc:	add	x20, x20, #0x48
  434000:	ldr	x0, [x29, #336]
  434004:	cmp	x20, x0
  434008:	b.cc	433fe8 <argp_parse@@Base+0x8a8>  // b.lo, b.ul, b.last
  43400c:	ldr	x20, [x29, #336]
  434010:	sub	x20, x20, #0x48
  434014:	ldr	x0, [x29, #328]
  434018:	cmp	x0, x20
  43401c:	b.hi	43404c <argp_parse@@Base+0x90c>  // b.pmore
  434020:	mov	w21, #0x7                   	// #7
  434024:	movk	w21, #0x100, lsl #16
  434028:	mov	x3, #0x0                   	// #0
  43402c:	mov	w2, w21
  434030:	add	x1, x29, #0x168
  434034:	mov	x0, x20
  434038:	bl	4331b0 <argp_error@@Base+0x1c4>
  43403c:	sub	x20, x20, #0x48
  434040:	ldr	x0, [x29, #328]
  434044:	cmp	x20, x0
  434048:	b.cs	434028 <argp_parse@@Base+0x8e8>  // b.hs, b.nlast
  43404c:	cmp	w19, #0x7
  434050:	mov	w0, #0x16                  	// #22
  434054:	csel	w19, w19, w0, ne  // ne = any
  434058:	ldr	x0, [x29, #456]
  43405c:	bl	4047c0 <free@plt>
  434060:	mov	w0, w19
  434064:	mov	sp, x29
  434068:	ldp	x19, x20, [sp, #16]
  43406c:	ldp	x21, x22, [sp, #32]
  434070:	ldp	x23, x24, [sp, #48]
  434074:	ldp	x25, x26, [sp, #64]
  434078:	ldp	x27, x28, [sp, #80]
  43407c:	ldp	x29, x30, [sp], #464
  434080:	ret
  434084:	cmp	w19, #0x7
  434088:	b.ne	433fb0 <argp_parse@@Base+0x870>  // b.any
  43408c:	mov	w19, #0x0                   	// #0
  434090:	ldr	x0, [x29, #96]
  434094:	cbnz	x0, 433fb8 <argp_parse@@Base+0x878>
  434098:	b	433df8 <argp_parse@@Base+0x6b8>
  43409c:	ldr	w0, [x29, #388]
  4340a0:	tbnz	w0, #1, 4340d8 <argp_parse@@Base+0x998>
  4340a4:	ldr	x19, [x29, #432]
  4340a8:	cbz	x19, 4340d8 <argp_parse@@Base+0x998>
  4340ac:	mov	w2, #0x5                   	// #5
  4340b0:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  4340b4:	add	x1, x1, #0xf78
  4340b8:	ldr	x0, [x29, #248]
  4340bc:	ldr	x0, [x0, #48]
  4340c0:	bl	4049c0 <dcgettext@plt>
  4340c4:	ldr	x3, [x29, #424]
  4340c8:	mov	x2, x0
  4340cc:	mov	w1, #0x1                   	// #1
  4340d0:	mov	x0, x19
  4340d4:	bl	404710 <__fprintf_chk@plt>
  4340d8:	mov	w2, #0x104                 	// #260
  4340dc:	ldr	x1, [x29, #432]
  4340e0:	add	x0, x29, #0x168
  4340e4:	bl	432f4c <argp_state_help@@Base>
  4340e8:	mov	w19, #0x7                   	// #7
  4340ec:	b	433fd0 <argp_parse@@Base+0x890>
  4340f0:	cmp	w19, #0x7
  4340f4:	csel	w19, w19, wzr, ne  // ne = any
  4340f8:	ldr	x20, [x29, #336]
  4340fc:	sub	x20, x20, #0x48
  434100:	ldr	x0, [x29, #328]
  434104:	cmp	x0, x20
  434108:	b.ls	434020 <argp_parse@@Base+0x8e0>  // b.plast
  43410c:	b	434058 <argp_parse@@Base+0x918>
  434110:	mov	w19, #0x0                   	// #0
  434114:	b	434058 <argp_parse@@Base+0x918>
  434118:	sub	x20, x20, #0x48
  43411c:	mov	w19, #0x0                   	// #0
  434120:	cmp	x20, x21
  434124:	b.cs	433f74 <argp_parse@@Base+0x834>  // b.hs, b.nlast
  434128:	b	433fb0 <argp_parse@@Base+0x870>
  43412c:	mov	w0, #0x0                   	// #0
  434130:	b	433dd8 <argp_parse@@Base+0x698>
  434134:	mov	w0, #0x1                   	// #1
  434138:	b	433dd8 <argp_parse@@Base+0x698>
  43413c:	mov	w0, #0x1                   	// #1
  434140:	b	433dd8 <argp_parse@@Base+0x698>
  434144:	mov	w19, #0xc                   	// #12
  434148:	b	434060 <argp_parse@@Base+0x920>
  43414c:	sub	x20, x20, #0x48
  434150:	ldr	x0, [x29, #328]
  434154:	cmp	x20, x0
  434158:	b.cs	433f68 <argp_parse@@Base+0x828>  // b.hs, b.nlast
  43415c:	b	433fb0 <argp_parse@@Base+0x870>
  434160:	cbnz	w19, 433dc0 <argp_parse@@Base+0x680>
  434164:	ldr	w0, [x29, #368]
  434168:	str	w0, [x29, #384]
  43416c:	ldr	w0, [x29, #384]
  434170:	cmp	w21, w0
  434174:	b.ge	433e4c <argp_parse@@Base+0x70c>  // b.tcont
  434178:	sub	w21, w0, w21
  43417c:	ldur	w0, [x20, #-48]
  434180:	add	w21, w0, w21
  434184:	stur	w21, [x20, #-48]
  434188:	b	433c08 <argp_parse@@Base+0x4c8>
  43418c:	cbz	x1, 4341cc <argp_parse@@Base+0xa8c>
  434190:	ldr	x2, [x1, #88]
  434194:	ldr	x1, [x2, #80]
  434198:	ldr	x3, [x2, #88]
  43419c:	cmp	x1, x3
  4341a0:	b.cs	4341d4 <argp_parse@@Base+0xa94>  // b.hs, b.nlast
  4341a4:	ldr	x2, [x1, #8]
  4341a8:	cmp	x2, x0
  4341ac:	b.eq	4341c4 <argp_parse@@Base+0xa84>  // b.none
  4341b0:	add	x1, x1, #0x48
  4341b4:	cmp	x1, x3
  4341b8:	b.cc	4341a4 <argp_parse@@Base+0xa64>  // b.lo, b.ul, b.last
  4341bc:	mov	x0, #0x0                   	// #0
  4341c0:	b	4341c8 <argp_parse@@Base+0xa88>
  4341c4:	ldr	x0, [x1, #48]
  4341c8:	ret
  4341cc:	mov	x0, x1
  4341d0:	b	4341c8 <argp_parse@@Base+0xa88>
  4341d4:	mov	x0, #0x0                   	// #0
  4341d8:	b	4341c8 <argp_parse@@Base+0xa88>
  4341dc:	stp	x29, x30, [sp, #-16]!
  4341e0:	mov	x29, sp
  4341e4:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4341e8:	add	x5, x1, #0xd70
  4341ec:	ldr	x4, [x1, #3440]
  4341f0:	adrp	x3, 454000 <_obstack_memory_used@@Base+0x12e64>
  4341f4:	add	x3, x3, #0x938
  4341f8:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x12e64>
  4341fc:	add	x2, x2, #0x800
  434200:	ldr	x1, [x5, #8]
  434204:	bl	43fd34 <argp_parse@@Base+0xc5f4>
  434208:	ldp	x29, x30, [sp], #16
  43420c:	ret
  434210:	adrp	x3, 480000 <_obstack_memory_used@@Base+0x3ee64>
  434214:	adrp	x2, 434000 <argp_parse@@Base+0x8c0>
  434218:	add	x2, x2, #0x1dc
  43421c:	str	x2, [x3, #3432]
  434220:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x3ee64>
  434224:	add	x3, x2, #0xd70
  434228:	str	x0, [x3, #8]
  43422c:	str	x1, [x2, #3440]
  434230:	ret
  434234:	stp	x29, x30, [sp, #-32]!
  434238:	mov	x29, sp
  43423c:	str	x19, [sp, #16]
  434240:	mov	x19, x0
  434244:	cbz	x0, 434264 <argp_parse@@Base+0xb24>
  434248:	ldrb	w0, [x19]
  43424c:	cbz	w0, 434278 <argp_parse@@Base+0xb38>
  434250:	mov	x0, x19
  434254:	bl	434ae4 <argp_parse@@Base+0x13a4>
  434258:	cmp	x19, x0
  43425c:	b.ne	434278 <argp_parse@@Base+0xb38>  // b.any
  434260:	b	434280 <argp_parse@@Base+0xb40>
  434264:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x14e64>
  434268:	add	x0, x0, #0xcb0
  43426c:	bl	404af0 <getenv@plt>
  434270:	mov	x19, x0
  434274:	cbnz	x0, 434248 <argp_parse@@Base+0xb08>
  434278:	adrp	x19, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43427c:	add	x19, x19, #0x248
  434280:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  434284:	str	x19, [x0, #3456]
  434288:	ldr	x19, [sp, #16]
  43428c:	ldp	x29, x30, [sp], #32
  434290:	ret
  434294:	stp	x29, x30, [sp, #-224]!
  434298:	mov	x29, sp
  43429c:	stp	x19, x20, [sp, #16]
  4342a0:	stp	x25, x26, [sp, #64]
  4342a4:	stp	x27, x28, [sp, #80]
  4342a8:	str	w0, [sp, #196]
  4342ac:	mov	x19, x1
  4342b0:	str	x1, [sp, #120]
  4342b4:	str	w2, [sp, #108]
  4342b8:	and	w0, w3, #0xff
  4342bc:	str	w0, [sp, #192]
  4342c0:	mov	x0, x1
  4342c4:	bl	434ae4 <argp_parse@@Base+0x13a4>
  4342c8:	sub	x26, x0, x19
  4342cc:	bl	403ff0 <strlen@plt>
  4342d0:	add	x27, x26, x0
  4342d4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4342d8:	ldr	x0, [x0, #3456]
  4342dc:	cbz	x0, 434348 <argp_parse@@Base+0xc08>
  4342e0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4342e4:	ldr	x0, [x0, #3456]
  4342e8:	bl	403ff0 <strlen@plt>
  4342ec:	add	x1, x0, #0x1
  4342f0:	str	x1, [sp, #176]
  4342f4:	add	x2, x27, #0x1
  4342f8:	str	x2, [sp, #152]
  4342fc:	cmp	x1, #0x9
  434300:	mov	x0, #0x9                   	// #9
  434304:	csel	x0, x1, x0, cs  // cs = hs, nlast
  434308:	add	x0, x0, x2
  43430c:	str	x0, [sp, #160]
  434310:	bl	404310 <malloc@plt>
  434314:	mov	x20, x0
  434318:	cbz	x0, 43477c <argp_parse@@Base+0x103c>
  43431c:	stp	x21, x22, [sp, #32]
  434320:	stp	x23, x24, [sp, #48]
  434324:	mov	w0, #0xffffffff            	// #-1
  434328:	str	w0, [sp, #220]
  43432c:	str	xzr, [sp, #184]
  434330:	str	xzr, [sp, #112]
  434334:	mov	x0, #0xe                   	// #14
  434338:	str	x0, [sp, #200]
  43433c:	add	x0, x27, #0x4
  434340:	str	x0, [sp, #168]
  434344:	b	434444 <argp_parse@@Base+0xd04>
  434348:	bl	434234 <argp_parse@@Base+0xaf4>
  43434c:	b	4342e0 <argp_parse@@Base+0xba0>
  434350:	ldr	x2, [sp, #176]
  434354:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  434358:	ldr	x1, [x0, #3456]
  43435c:	add	x0, x20, x27
  434360:	bl	403f70 <memcpy@plt>
  434364:	b	434400 <argp_parse@@Base+0xcc0>
  434368:	ldrh	w22, [x20, x26]
  43436c:	mov	w0, #0x2e                  	// #46
  434370:	strh	w0, [x20, x26]
  434374:	add	x3, sp, #0xdc
  434378:	mov	w2, #0x0                   	// #0
  43437c:	mov	x1, x20
  434380:	ldr	w0, [sp, #196]
  434384:	bl	439b08 <argp_parse@@Base+0x63c8>
  434388:	str	x0, [sp, #112]
  43438c:	cbz	x0, 4343b4 <argp_parse@@Base+0xc74>
  434390:	strh	w22, [x19]
  434394:	add	x1, x19, x21
  434398:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43439c:	add	x0, x0, #0x250
  4343a0:	ldr	w2, [x0]
  4343a4:	str	w2, [x19, x21]
  4343a8:	ldrb	w0, [x0, #4]
  4343ac:	strb	w0, [x1, #4]
  4343b0:	b	434480 <argp_parse@@Base+0xd40>
  4343b4:	bl	404ad0 <__errno_location@plt>
  4343b8:	ldr	w0, [x0]
  4343bc:	cmp	w0, #0xc
  4343c0:	cset	w24, eq  // eq = none
  4343c4:	add	w24, w24, #0x2
  4343c8:	strh	w22, [x19]
  4343cc:	add	x1, x19, x21
  4343d0:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  4343d4:	add	x0, x0, #0x250
  4343d8:	ldr	w2, [x0]
  4343dc:	str	w2, [x19, x21]
  4343e0:	ldrb	w0, [x0, #4]
  4343e4:	strb	w0, [x1, #4]
  4343e8:	cmp	w24, #0x2
  4343ec:	b.eq	434634 <argp_parse@@Base+0xef4>  // b.none
  4343f0:	cmp	w24, #0x3
  4343f4:	b.eq	43475c <argp_parse@@Base+0x101c>  // b.none
  4343f8:	cmp	w24, #0x1
  4343fc:	b.eq	434640 <argp_parse@@Base+0xf00>  // b.none
  434400:	ldr	w0, [sp, #192]
  434404:	cbz	w0, 4347d0 <argp_parse@@Base+0x1090>
  434408:	ldr	w0, [sp, #220]
  43440c:	tbnz	w0, #31, 434794 <argp_parse@@Base+0x1054>
  434410:	ldr	w0, [sp, #108]
  434414:	cmp	w0, #0x1
  434418:	cset	w4, ne  // ne = any
  43441c:	add	x3, x20, x26
  434420:	ldr	w2, [sp, #220]
  434424:	ldr	x1, [sp, #120]
  434428:	mov	w0, #0xffffff9c            	// #-100
  43442c:	bl	43f1b0 <argp_parse@@Base+0xba70>
  434430:	cbz	w0, 4347d0 <argp_parse@@Base+0x1090>
  434434:	bl	404ad0 <__errno_location@plt>
  434438:	ldr	w21, [x0]
  43443c:	cmp	w21, #0x11
  434440:	b.ne	4347a4 <argp_parse@@Base+0x1064>  // b.any
  434444:	ldr	x2, [sp, #152]
  434448:	ldr	x1, [sp, #120]
  43444c:	mov	x0, x20
  434450:	bl	403f70 <memcpy@plt>
  434454:	ldr	w0, [sp, #108]
  434458:	cmp	w0, #0x1
  43445c:	b.eq	434350 <argp_parse@@Base+0xc10>  // b.none
  434460:	str	x26, [sp, #128]
  434464:	add	x19, x20, x26
  434468:	mov	x0, x19
  43446c:	bl	434b40 <argp_parse@@Base+0x1400>
  434470:	mov	x21, x0
  434474:	ldr	x0, [sp, #112]
  434478:	cbz	x0, 434368 <argp_parse@@Base+0xc28>
  43447c:	bl	404760 <rewinddir@plt>
  434480:	ldr	x0, [sp, #160]
  434484:	str	x0, [sp, #144]
  434488:	mov	x25, #0x1                   	// #1
  43448c:	mov	w24, #0x2                   	// #2
  434490:	add	x0, x21, #0x4
  434494:	str	x0, [sp, #136]
  434498:	add	x21, x21, #0x2
  43449c:	ldr	x0, [sp, #112]
  4344a0:	bl	404530 <readdir@plt>
  4344a4:	cbz	x0, 4343e8 <argp_parse@@Base+0xca8>
  4344a8:	add	x19, x0, #0x13
  4344ac:	mov	x0, x19
  4344b0:	bl	403ff0 <strlen@plt>
  4344b4:	ldr	x1, [sp, #136]
  4344b8:	cmp	x0, x1
  4344bc:	b.cc	43449c <argp_parse@@Base+0xd5c>  // b.lo, b.ul, b.last
  4344c0:	mov	x2, x21
  4344c4:	mov	x1, x19
  4344c8:	ldr	x0, [sp, #128]
  4344cc:	add	x0, x20, x0
  4344d0:	bl	4046e0 <memcmp@plt>
  4344d4:	cbnz	w0, 43449c <argp_parse@@Base+0xd5c>
  4344d8:	add	x22, x19, x21
  4344dc:	ldrb	w1, [x19, x21]
  4344e0:	sub	w0, w1, #0x31
  4344e4:	and	w0, w0, #0xff
  4344e8:	cmp	w0, #0x8
  4344ec:	b.hi	43449c <argp_parse@@Base+0xd5c>  // b.pmore
  4344f0:	cmp	w1, #0x39
  4344f4:	cset	w23, eq  // eq = none
  4344f8:	ldrb	w0, [x22, #1]
  4344fc:	sub	w1, w0, #0x30
  434500:	cmp	w1, #0x9
  434504:	b.hi	434624 <argp_parse@@Base+0xee4>  // b.pmore
  434508:	mov	x19, #0x1                   	// #1
  43450c:	cmp	w0, #0x39
  434510:	csel	w23, w23, wzr, eq  // eq = none
  434514:	add	x19, x19, #0x1
  434518:	ldrb	w0, [x22, x19]
  43451c:	sub	w1, w0, #0x30
  434520:	cmp	w1, #0x9
  434524:	b.ls	43450c <argp_parse@@Base+0xdcc>  // b.plast
  434528:	cmp	w0, #0x7e
  43452c:	b.ne	43449c <argp_parse@@Base+0xd5c>  // b.any
  434530:	add	x0, x22, x19
  434534:	ldrb	w0, [x0, #1]
  434538:	cbnz	w0, 43449c <argp_parse@@Base+0xd5c>
  43453c:	cmp	x19, x25
  434540:	b.hi	434564 <argp_parse@@Base+0xe24>  // b.pmore
  434544:	b.ne	43449c <argp_parse@@Base+0xd5c>  // b.any
  434548:	add	x0, x27, #0x2
  43454c:	mov	x2, x19
  434550:	mov	x1, x22
  434554:	add	x0, x20, x0
  434558:	bl	4046e0 <memcmp@plt>
  43455c:	cmp	w0, #0x0
  434560:	b.gt	43449c <argp_parse@@Base+0xd5c>
  434564:	and	x28, x23, #0xff
  434568:	add	x25, x19, x28
  43456c:	mov	w24, w23
  434570:	ldr	x0, [sp, #168]
  434574:	add	x0, x0, x25
  434578:	ldr	x1, [sp, #144]
  43457c:	cmp	x0, x1
  434580:	b.ls	43462c <argp_parse@@Base+0xeec>  // b.plast
  434584:	cmp	x0, #0x0
  434588:	cset	x1, lt  // lt = tstop
  43458c:	tst	x0, #0x4000000000000000
  434590:	csinc	w1, w1, wzr, eq  // eq = none
  434594:	lsl	x2, x0, #1
  434598:	cmp	w1, #0x0
  43459c:	csel	x0, x2, x0, eq  // eq = none
  4345a0:	str	x0, [sp, #144]
  4345a4:	mov	x1, x0
  4345a8:	mov	x0, x20
  4345ac:	bl	404540 <realloc@plt>
  4345b0:	mov	x23, x0
  4345b4:	cbz	x0, 43475c <argp_parse@@Base+0x101c>
  4345b8:	add	x1, x23, x27
  4345bc:	mov	w0, #0x2e                  	// #46
  4345c0:	strb	w0, [x23, x27]
  4345c4:	add	x0, x1, #0x2
  4345c8:	mov	w2, #0x7e                  	// #126
  4345cc:	strb	w2, [x1, #1]
  4345d0:	mov	w2, #0x30                  	// #48
  4345d4:	strb	w2, [x1, #2]
  4345d8:	add	x28, x0, x28
  4345dc:	add	x2, x19, #0x2
  4345e0:	mov	x1, x22
  4345e4:	mov	x0, x28
  4345e8:	bl	403f70 <memcpy@plt>
  4345ec:	add	x28, x28, x19
  4345f0:	sub	x1, x28, #0x1
  4345f4:	ldurb	w0, [x28, #-1]
  4345f8:	cmp	w0, #0x39
  4345fc:	b.ne	434614 <argp_parse@@Base+0xed4>  // b.any
  434600:	mov	w2, #0x30                  	// #48
  434604:	strb	w2, [x1]
  434608:	ldrb	w0, [x1, #-1]!
  43460c:	cmp	w0, #0x39
  434610:	b.eq	434604 <argp_parse@@Base+0xec4>  // b.none
  434614:	add	w0, w0, #0x1
  434618:	strb	w0, [x1]
  43461c:	mov	x20, x23
  434620:	b	43449c <argp_parse@@Base+0xd5c>
  434624:	mov	x19, #0x1                   	// #1
  434628:	b	434528 <argp_parse@@Base+0xde8>
  43462c:	mov	x23, x20
  434630:	b	4345b8 <argp_parse@@Base+0xe78>
  434634:	ldr	w0, [sp, #108]
  434638:	cmp	w0, #0x2
  43463c:	b.eq	4346b4 <argp_parse@@Base+0xf74>  // b.none
  434640:	mov	x0, x20
  434644:	bl	434ae4 <argp_parse@@Base+0x13a4>
  434648:	mov	x19, x0
  43464c:	bl	434b40 <argp_parse@@Base+0x1400>
  434650:	mov	x21, x0
  434654:	cmp	x0, #0xe
  434658:	b.ls	434710 <argp_parse@@Base+0xfd0>  // b.plast
  43465c:	ldr	x0, [sp, #184]
  434660:	cbnz	x0, 434744 <argp_parse@@Base+0x1004>
  434664:	ldr	w23, [sp, #220]
  434668:	tbnz	w23, #31, 4346d4 <argp_parse@@Base+0xf94>
  43466c:	bl	404ad0 <__errno_location@plt>
  434670:	mov	x22, x0
  434674:	str	wzr, [x0]
  434678:	mov	w1, #0x3                   	// #3
  43467c:	mov	w0, w23
  434680:	bl	4046b0 <fpathconf@plt>
  434684:	ldr	w1, [x22]
  434688:	cmp	w1, #0x0
  43468c:	cset	x1, eq  // eq = none
  434690:	sub	x0, x0, x1
  434694:	mov	x1, x0
  434698:	str	x0, [sp, #184]
  43469c:	tbz	x0, #63, 434714 <argp_parse@@Base+0xfd4>
  4346a0:	cmn	x0, #0x1
  4346a4:	b.lt	43474c <argp_parse@@Base+0x100c>  // b.tstop
  4346a8:	mov	x0, #0xffffffffffffffff    	// #-1
  4346ac:	str	x0, [sp, #184]
  4346b0:	b	434400 <argp_parse@@Base+0xcc0>
  4346b4:	ldr	x2, [sp, #176]
  4346b8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4346bc:	ldr	x1, [x0, #3456]
  4346c0:	add	x0, x20, x27
  4346c4:	bl	403f70 <memcpy@plt>
  4346c8:	mov	w0, #0x1                   	// #1
  4346cc:	str	w0, [sp, #108]
  4346d0:	b	434640 <argp_parse@@Base+0xf00>
  4346d4:	ldrh	w23, [x19]
  4346d8:	mov	w0, #0x2e                  	// #46
  4346dc:	strh	w0, [x19]
  4346e0:	bl	404ad0 <__errno_location@plt>
  4346e4:	mov	x22, x0
  4346e8:	str	wzr, [x0]
  4346ec:	mov	w1, #0x3                   	// #3
  4346f0:	mov	x0, x20
  4346f4:	bl	4041b0 <pathconf@plt>
  4346f8:	ldr	w1, [x22]
  4346fc:	cmp	w1, #0x0
  434700:	cset	x1, eq  // eq = none
  434704:	sub	x0, x0, x1
  434708:	strh	w23, [x19]
  43470c:	b	434694 <argp_parse@@Base+0xf54>
  434710:	mov	x1, #0xff                  	// #255
  434714:	cmp	x21, x1
  434718:	b.ls	434400 <argp_parse@@Base+0xcc0>  // b.plast
  43471c:	add	x0, x20, x27
  434720:	sub	x0, x0, x19
  434724:	sub	x2, x1, #0x1
  434728:	cmp	x1, x0
  43472c:	csel	x0, x2, x0, ls  // ls = plast
  434730:	mov	w1, #0x7e                  	// #126
  434734:	strb	w1, [x19, x0]
  434738:	add	x0, x19, x0
  43473c:	strb	wzr, [x0, #1]
  434740:	b	434400 <argp_parse@@Base+0xcc0>
  434744:	ldr	x1, [sp, #184]
  434748:	b	434714 <argp_parse@@Base+0xfd4>
  43474c:	mov	x0, #0xe                   	// #14
  434750:	str	x0, [sp, #184]
  434754:	ldr	x1, [sp, #200]
  434758:	b	43471c <argp_parse@@Base+0xfdc>
  43475c:	mov	x0, x20
  434760:	bl	4047c0 <free@plt>
  434764:	bl	404ad0 <__errno_location@plt>
  434768:	mov	w1, #0xc                   	// #12
  43476c:	str	w1, [x0]
  434770:	mov	x20, #0x0                   	// #0
  434774:	ldp	x21, x22, [sp, #32]
  434778:	ldp	x23, x24, [sp, #48]
  43477c:	mov	x0, x20
  434780:	ldp	x19, x20, [sp, #16]
  434784:	ldp	x25, x26, [sp, #64]
  434788:	ldp	x27, x28, [sp, #80]
  43478c:	ldp	x29, x30, [sp], #224
  434790:	ret
  434794:	mov	w0, #0xffffff9c            	// #-100
  434798:	str	w0, [sp, #220]
  43479c:	mov	x26, #0x0                   	// #0
  4347a0:	b	434410 <argp_parse@@Base+0xcd0>
  4347a4:	mov	x19, x0
  4347a8:	ldr	x0, [sp, #112]
  4347ac:	cbz	x0, 4347b4 <argp_parse@@Base+0x1074>
  4347b0:	bl	4045a0 <closedir@plt>
  4347b4:	mov	x0, x20
  4347b8:	bl	4047c0 <free@plt>
  4347bc:	str	w21, [x19]
  4347c0:	mov	x20, #0x0                   	// #0
  4347c4:	ldp	x21, x22, [sp, #32]
  4347c8:	ldp	x23, x24, [sp, #48]
  4347cc:	b	43477c <argp_parse@@Base+0x103c>
  4347d0:	ldr	x0, [sp, #112]
  4347d4:	cbz	x0, 4347e8 <argp_parse@@Base+0x10a8>
  4347d8:	bl	4045a0 <closedir@plt>
  4347dc:	ldp	x21, x22, [sp, #32]
  4347e0:	ldp	x23, x24, [sp, #48]
  4347e4:	b	43477c <argp_parse@@Base+0x103c>
  4347e8:	ldp	x21, x22, [sp, #32]
  4347ec:	ldp	x23, x24, [sp, #48]
  4347f0:	b	43477c <argp_parse@@Base+0x103c>
  4347f4:	stp	x29, x30, [sp, #-16]!
  4347f8:	mov	x29, sp
  4347fc:	mov	w3, #0x0                   	// #0
  434800:	bl	434294 <argp_parse@@Base+0xb54>
  434804:	cbz	x0, 434810 <argp_parse@@Base+0x10d0>
  434808:	ldp	x29, x30, [sp], #16
  43480c:	ret
  434810:	bl	40e5ec <wcrtomb@plt+0x99cc>
  434814:	cbz	x1, 43486c <argp_parse@@Base+0x112c>
  434818:	ldrb	w3, [x1]
  43481c:	mov	w2, #0x2                   	// #2
  434820:	cbnz	w3, 43482c <argp_parse@@Base+0x10ec>
  434824:	mov	w0, w2
  434828:	ret
  43482c:	stp	x29, x30, [sp, #-32]!
  434830:	mov	x29, sp
  434834:	str	x19, [sp, #16]
  434838:	adrp	x19, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43483c:	add	x19, x19, #0x2c0
  434840:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x3ee64>
  434844:	ldr	x5, [x2, #920]
  434848:	mov	x4, #0x4                   	// #4
  43484c:	mov	x3, x19
  434850:	add	x2, x19, #0x20
  434854:	bl	42fefc <wcrtomb@plt+0x2b2dc>
  434858:	ldr	w2, [x19, x0, lsl #2]
  43485c:	mov	w0, w2
  434860:	ldr	x19, [sp, #16]
  434864:	ldp	x29, x30, [sp], #32
  434868:	ret
  43486c:	mov	w2, #0x2                   	// #2
  434870:	b	434824 <argp_parse@@Base+0x10e4>
  434874:	stp	x29, x30, [sp, #-16]!
  434878:	mov	x29, sp
  43487c:	cbz	x1, 434888 <argp_parse@@Base+0x1148>
  434880:	ldrb	w2, [x1]
  434884:	cbnz	w2, 4348ac <argp_parse@@Base+0x116c>
  434888:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43488c:	add	x0, x0, #0x258
  434890:	bl	404af0 <getenv@plt>
  434894:	mov	x1, x0
  434898:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43489c:	add	x0, x0, #0x268
  4348a0:	bl	434814 <argp_parse@@Base+0x10d4>
  4348a4:	ldp	x29, x30, [sp], #16
  4348a8:	ret
  4348ac:	bl	434814 <argp_parse@@Base+0x10d4>
  4348b0:	b	4348a4 <argp_parse@@Base+0x1164>
  4348b4:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4348b8:	str	x0, [x1, #3464]
  4348bc:	ret
  4348c0:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4348c4:	strb	w0, [x1, #3472]
  4348c8:	ret
  4348cc:	stp	x29, x30, [sp, #-48]!
  4348d0:	mov	x29, sp
  4348d4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4348d8:	ldr	x0, [x0, #1104]
  4348dc:	bl	44ea80 <_obstack_memory_used@@Base+0xd8e4>
  4348e0:	cbz	w0, 434900 <argp_parse@@Base+0x11c0>
  4348e4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4348e8:	ldrb	w0, [x0, #3472]
  4348ec:	cbz	w0, 434918 <argp_parse@@Base+0x11d8>
  4348f0:	bl	404ad0 <__errno_location@plt>
  4348f4:	ldr	w0, [x0]
  4348f8:	cmp	w0, #0x20
  4348fc:	b.ne	434918 <argp_parse@@Base+0x11d8>  // b.any
  434900:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  434904:	ldr	x0, [x0, #1096]
  434908:	bl	44ea80 <_obstack_memory_used@@Base+0xd8e4>
  43490c:	cbnz	w0, 43499c <argp_parse@@Base+0x125c>
  434910:	ldp	x29, x30, [sp], #48
  434914:	ret
  434918:	stp	x19, x20, [sp, #16]
  43491c:	str	x21, [sp, #32]
  434920:	mov	w2, #0x5                   	// #5
  434924:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  434928:	add	x1, x1, #0x328
  43492c:	mov	x0, #0x0                   	// #0
  434930:	bl	4049c0 <dcgettext@plt>
  434934:	mov	x19, x0
  434938:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43493c:	ldr	x20, [x0, #3464]
  434940:	cbz	x20, 43497c <argp_parse@@Base+0x123c>
  434944:	bl	404ad0 <__errno_location@plt>
  434948:	ldr	w21, [x0]
  43494c:	mov	x0, x20
  434950:	bl	43efc4 <argp_parse@@Base+0xb884>
  434954:	mov	x4, x19
  434958:	mov	x3, x0
  43495c:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x12e64>
  434960:	add	x2, x2, #0x6c8
  434964:	mov	w1, w21
  434968:	mov	w0, #0x0                   	// #0
  43496c:	bl	404050 <error@plt>
  434970:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  434974:	ldr	w0, [x0, #968]
  434978:	bl	403f90 <_exit@plt>
  43497c:	bl	404ad0 <__errno_location@plt>
  434980:	mov	x3, x19
  434984:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x12e64>
  434988:	add	x2, x2, #0x848
  43498c:	ldr	w1, [x0]
  434990:	mov	w0, #0x0                   	// #0
  434994:	bl	404050 <error@plt>
  434998:	b	434970 <argp_parse@@Base+0x1230>
  43499c:	stp	x19, x20, [sp, #16]
  4349a0:	str	x21, [sp, #32]
  4349a4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4349a8:	ldr	w0, [x0, #968]
  4349ac:	bl	403f90 <_exit@plt>
  4349b0:	stp	x29, x30, [sp, #-16]!
  4349b4:	mov	x29, sp
  4349b8:	bl	434a7c <argp_parse@@Base+0x133c>
  4349bc:	cbz	x0, 4349c8 <argp_parse@@Base+0x1288>
  4349c0:	ldp	x29, x30, [sp], #16
  4349c4:	ret
  4349c8:	bl	40e5ec <wcrtomb@plt+0x99cc>
  4349cc:	stp	x29, x30, [sp, #-32]!
  4349d0:	mov	x29, sp
  4349d4:	stp	x19, x20, [sp, #16]
  4349d8:	mov	x20, x0
  4349dc:	bl	434ae4 <argp_parse@@Base+0x13a4>
  4349e0:	mov	x19, x0
  4349e4:	ldrb	w0, [x0]
  4349e8:	cbz	w0, 434a14 <argp_parse@@Base+0x12d4>
  4349ec:	mov	x0, x19
  4349f0:	bl	434b40 <argp_parse@@Base+0x1400>
  4349f4:	ldrb	w1, [x19, x0]
  4349f8:	cmp	w1, #0x2f
  4349fc:	cinc	x1, x0, eq  // eq = none
  434a00:	mov	x0, x19
  434a04:	bl	4401c4 <argp_parse@@Base+0xca84>
  434a08:	ldp	x19, x20, [sp, #16]
  434a0c:	ldp	x29, x30, [sp], #32
  434a10:	ret
  434a14:	mov	x0, x20
  434a18:	bl	434b40 <argp_parse@@Base+0x1400>
  434a1c:	mov	x1, x0
  434a20:	mov	x0, x20
  434a24:	bl	4401c4 <argp_parse@@Base+0xca84>
  434a28:	b	434a08 <argp_parse@@Base+0x12c8>
  434a2c:	stp	x29, x30, [sp, #-32]!
  434a30:	mov	x29, sp
  434a34:	stp	x19, x20, [sp, #16]
  434a38:	mov	x19, x0
  434a3c:	ldrb	w1, [x0]
  434a40:	cmp	w1, #0x2f
  434a44:	cset	x20, eq  // eq = none
  434a48:	bl	434ae4 <argp_parse@@Base+0x13a4>
  434a4c:	sub	x0, x0, x19
  434a50:	cmp	x0, x20
  434a54:	b.ls	434a70 <argp_parse@@Base+0x1330>  // b.plast
  434a58:	sub	x1, x0, #0x1
  434a5c:	ldrb	w2, [x19, x1]
  434a60:	cmp	w2, #0x2f
  434a64:	b.ne	434a70 <argp_parse@@Base+0x1330>  // b.any
  434a68:	mov	x0, x1
  434a6c:	b	434a50 <argp_parse@@Base+0x1310>
  434a70:	ldp	x19, x20, [sp, #16]
  434a74:	ldp	x29, x30, [sp], #32
  434a78:	ret
  434a7c:	stp	x29, x30, [sp, #-48]!
  434a80:	mov	x29, sp
  434a84:	stp	x19, x20, [sp, #16]
  434a88:	str	x21, [sp, #32]
  434a8c:	mov	x21, x0
  434a90:	bl	434a2c <argp_parse@@Base+0x12ec>
  434a94:	mov	x19, x0
  434a98:	cmp	x0, #0x0
  434a9c:	add	x0, x0, #0x1
  434aa0:	cinc	x0, x0, eq  // eq = none
  434aa4:	bl	404310 <malloc@plt>
  434aa8:	mov	x20, x0
  434aac:	cbz	x0, 434ad0 <argp_parse@@Base+0x1390>
  434ab0:	mov	x2, x19
  434ab4:	mov	x1, x21
  434ab8:	bl	403f70 <memcpy@plt>
  434abc:	cbnz	x19, 434acc <argp_parse@@Base+0x138c>
  434ac0:	mov	w0, #0x2e                  	// #46
  434ac4:	strb	w0, [x20]
  434ac8:	mov	x19, #0x1                   	// #1
  434acc:	strb	wzr, [x20, x19]
  434ad0:	mov	x0, x20
  434ad4:	ldp	x19, x20, [sp, #16]
  434ad8:	ldr	x21, [sp, #32]
  434adc:	ldp	x29, x30, [sp], #48
  434ae0:	ret
  434ae4:	ldrb	w1, [x0]
  434ae8:	cmp	w1, #0x2f
  434aec:	b.ne	434afc <argp_parse@@Base+0x13bc>  // b.any
  434af0:	ldrb	w1, [x0, #1]!
  434af4:	cmp	w1, #0x2f
  434af8:	b.eq	434af0 <argp_parse@@Base+0x13b0>  // b.none
  434afc:	ldrb	w2, [x0]
  434b00:	cbz	w2, 434b3c <argp_parse@@Base+0x13fc>
  434b04:	mov	x3, x0
  434b08:	mov	w1, #0x0                   	// #0
  434b0c:	mov	w5, #0x1                   	// #1
  434b10:	mov	w4, #0x0                   	// #0
  434b14:	b	434b2c <argp_parse@@Base+0x13ec>
  434b18:	cmp	w1, #0x0
  434b1c:	csel	x0, x0, x3, eq  // eq = none
  434b20:	csel	w1, w1, w4, eq  // eq = none
  434b24:	ldrb	w2, [x3, #1]!
  434b28:	cbz	w2, 434b3c <argp_parse@@Base+0x13fc>
  434b2c:	cmp	w2, #0x2f
  434b30:	b.ne	434b18 <argp_parse@@Base+0x13d8>  // b.any
  434b34:	mov	w1, w5
  434b38:	b	434b24 <argp_parse@@Base+0x13e4>
  434b3c:	ret
  434b40:	stp	x29, x30, [sp, #-32]!
  434b44:	mov	x29, sp
  434b48:	str	x19, [sp, #16]
  434b4c:	mov	x19, x0
  434b50:	bl	403ff0 <strlen@plt>
  434b54:	cmp	x0, #0x1
  434b58:	b.ls	434b6c <argp_parse@@Base+0x142c>  // b.plast
  434b5c:	sub	x1, x0, #0x1
  434b60:	ldrb	w2, [x19, x1]
  434b64:	cmp	w2, #0x2f
  434b68:	b.eq	434b78 <argp_parse@@Base+0x1438>  // b.none
  434b6c:	ldr	x19, [sp, #16]
  434b70:	ldp	x29, x30, [sp], #32
  434b74:	ret
  434b78:	mov	x0, x1
  434b7c:	b	434b54 <argp_parse@@Base+0x1414>
  434b80:	stp	x29, x30, [sp, #-32]!
  434b84:	mov	x29, sp
  434b88:	str	x19, [sp, #16]
  434b8c:	mov	x19, x0
  434b90:	bl	434ae4 <argp_parse@@Base+0x13a4>
  434b94:	ldrb	w1, [x0]
  434b98:	cmp	w1, #0x0
  434b9c:	csel	x19, x19, x0, eq  // eq = none
  434ba0:	mov	x0, x19
  434ba4:	bl	434b40 <argp_parse@@Base+0x1400>
  434ba8:	ldrb	w1, [x19, x0]
  434bac:	cmp	w1, #0x0
  434bb0:	strb	wzr, [x19, x0]
  434bb4:	cset	w0, ne  // ne = any
  434bb8:	ldr	x19, [sp, #16]
  434bbc:	ldp	x29, x30, [sp], #32
  434bc0:	ret
  434bc4:	stp	x29, x30, [sp, #-16]!
  434bc8:	mov	x29, sp
  434bcc:	ldr	x3, [x3]
  434bd0:	blr	x3
  434bd4:	ldp	x29, x30, [sp], #16
  434bd8:	ret
  434bdc:	stp	x29, x30, [sp, #-16]!
  434be0:	mov	x29, sp
  434be4:	bl	4047c0 <free@plt>
  434be8:	ldp	x29, x30, [sp], #16
  434bec:	ret
  434bf0:	stp	x29, x30, [sp, #-16]!
  434bf4:	mov	x29, sp
  434bf8:	bl	438e24 <argp_parse@@Base+0x56e4>
  434bfc:	cmp	w0, #0x0
  434c00:	cset	w0, eq  // eq = none
  434c04:	ldp	x29, x30, [sp], #16
  434c08:	ret
  434c0c:	stp	x29, x30, [sp, #-16]!
  434c10:	mov	x29, sp
  434c14:	bl	404720 <strcmp@plt>
  434c18:	cmp	w0, #0x0
  434c1c:	cset	w0, eq  // eq = none
  434c20:	ldp	x29, x30, [sp], #16
  434c24:	ret
  434c28:	stp	x29, x30, [sp, #-64]!
  434c2c:	mov	x29, sp
  434c30:	stp	x19, x20, [sp, #16]
  434c34:	stp	x21, x22, [sp, #32]
  434c38:	mov	x21, x0
  434c3c:	mov	x19, x1
  434c40:	tbz	w2, #3, 434c88 <argp_parse@@Base+0x1548>
  434c44:	tbnz	w2, #4, 434ca4 <argp_parse@@Base+0x1564>
  434c48:	bl	403ff0 <strlen@plt>
  434c4c:	mov	x22, x0
  434c50:	mov	x2, x0
  434c54:	mov	x1, x19
  434c58:	mov	x0, x21
  434c5c:	bl	4043c0 <strncmp@plt>
  434c60:	mov	w20, w0
  434c64:	cbnz	w0, 434c74 <argp_parse@@Base+0x1534>
  434c68:	ldrb	w0, [x19, x22]
  434c6c:	cmp	w0, #0x2f
  434c70:	csel	w20, w20, w0, eq  // eq = none
  434c74:	mov	w0, w20
  434c78:	ldp	x19, x20, [sp, #16]
  434c7c:	ldp	x21, x22, [sp, #32]
  434c80:	ldp	x29, x30, [sp], #64
  434c84:	ret
  434c88:	tbz	w2, #4, 434c98 <argp_parse@@Base+0x1558>
  434c8c:	bl	438e24 <argp_parse@@Base+0x56e4>
  434c90:	mov	w20, w0
  434c94:	b	434c74 <argp_parse@@Base+0x1534>
  434c98:	bl	404720 <strcmp@plt>
  434c9c:	mov	w20, w0
  434ca0:	b	434c74 <argp_parse@@Base+0x1534>
  434ca4:	stp	x23, x24, [sp, #48]
  434ca8:	mov	x0, x1
  434cac:	bl	440154 <argp_parse@@Base+0xca14>
  434cb0:	mov	x22, x0
  434cb4:	mov	w23, #0x2f                  	// #47
  434cb8:	mov	w24, #0x2f                  	// #47
  434cbc:	b	434ce4 <argp_parse@@Base+0x15a4>
  434cc0:	strb	wzr, [x0]
  434cc4:	mov	x1, x22
  434cc8:	mov	x0, x21
  434ccc:	bl	438e24 <argp_parse@@Base+0x56e4>
  434cd0:	mov	w20, w0
  434cd4:	cmp	w0, #0x0
  434cd8:	b.le	434d04 <argp_parse@@Base+0x15c4>
  434cdc:	mov	x0, x19
  434ce0:	strb	w24, [x0], #1
  434ce4:	mov	w1, w23
  434ce8:	bl	404870 <strchr@plt>
  434cec:	mov	x19, x0
  434cf0:	cbnz	x0, 434cc0 <argp_parse@@Base+0x1580>
  434cf4:	mov	x1, x22
  434cf8:	mov	x0, x21
  434cfc:	bl	438e24 <argp_parse@@Base+0x56e4>
  434d00:	mov	w20, w0
  434d04:	mov	x0, x22
  434d08:	bl	4047c0 <free@plt>
  434d0c:	ldp	x23, x24, [sp, #48]
  434d10:	b	434c74 <argp_parse@@Base+0x1534>
  434d14:	stp	x29, x30, [sp, #-16]!
  434d18:	mov	x29, sp
  434d1c:	bl	437c40 <argp_parse@@Base+0x4500>
  434d20:	ldp	x29, x30, [sp], #16
  434d24:	ret
  434d28:	stp	x29, x30, [sp, #-128]!
  434d2c:	mov	x29, sp
  434d30:	stp	x19, x20, [sp, #16]
  434d34:	stp	x21, x22, [sp, #32]
  434d38:	stp	x23, x24, [sp, #48]
  434d3c:	mov	x21, x1
  434d40:	str	x0, [sp, #80]
  434d44:	strb	wzr, [sp, #64]
  434d48:	stur	xzr, [sp, #68]
  434d4c:	strb	wzr, [sp, #76]
  434d50:	mov	x19, #0x0                   	// #0
  434d54:	mov	w22, #0x1                   	// #1
  434d58:	add	x23, sp, #0x44
  434d5c:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0x19e64>
  434d60:	add	x24, x24, #0x778
  434d64:	b	434e6c <argp_parse@@Base+0x172c>
  434d68:	ldrb	w0, [x20]
  434d6c:	b	434e48 <argp_parse@@Base+0x1708>
  434d70:	mov	x0, x23
  434d74:	bl	404680 <mbsinit@plt>
  434d78:	cbz	w0, 434df4 <argp_parse@@Base+0x16b4>
  434d7c:	strb	w22, [sp, #64]
  434d80:	ldr	x20, [sp, #80]
  434d84:	bl	4047f0 <__ctype_get_mb_cur_max@plt>
  434d88:	mov	x1, x0
  434d8c:	mov	x0, x20
  434d90:	bl	43f954 <argp_parse@@Base+0xc214>
  434d94:	mov	x3, x23
  434d98:	mov	x2, x0
  434d9c:	mov	x1, x20
  434da0:	add	x0, sp, #0x64
  434da4:	bl	440da8 <argp_parse@@Base+0xd668>
  434da8:	str	x0, [sp, #88]
  434dac:	cmn	x0, #0x1
  434db0:	b.eq	434e14 <argp_parse@@Base+0x16d4>  // b.none
  434db4:	cmn	x0, #0x2
  434db8:	b.eq	434eac <argp_parse@@Base+0x176c>  // b.none
  434dbc:	cbnz	x0, 434ddc <argp_parse@@Base+0x169c>
  434dc0:	mov	x0, #0x1                   	// #1
  434dc4:	str	x0, [sp, #88]
  434dc8:	ldr	x0, [sp, #80]
  434dcc:	ldrb	w0, [x0]
  434dd0:	cbnz	w0, 434ec0 <argp_parse@@Base+0x1780>
  434dd4:	ldr	w0, [sp, #100]
  434dd8:	cbnz	w0, 434ee0 <argp_parse@@Base+0x17a0>
  434ddc:	strb	w22, [sp, #96]
  434de0:	mov	x0, x23
  434de4:	bl	404680 <mbsinit@plt>
  434de8:	cbz	w0, 434e20 <argp_parse@@Base+0x16e0>
  434dec:	strb	wzr, [sp, #64]
  434df0:	b	434e20 <argp_parse@@Base+0x16e0>
  434df4:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x19e64>
  434df8:	add	x3, x3, #0x398
  434dfc:	mov	w2, #0x96                  	// #150
  434e00:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  434e04:	add	x1, x1, #0x338
  434e08:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  434e0c:	add	x0, x0, #0x348
  434e10:	bl	404ac0 <__assert_fail@plt>
  434e14:	mov	x0, #0x1                   	// #1
  434e18:	str	x0, [sp, #88]
  434e1c:	strb	wzr, [sp, #96]
  434e20:	strb	w22, [sp, #76]
  434e24:	ldrb	w0, [sp, #96]
  434e28:	cbz	w0, 434e34 <argp_parse@@Base+0x16f4>
  434e2c:	ldr	w0, [sp, #100]
  434e30:	cbz	w0, 434f00 <argp_parse@@Base+0x17c0>
  434e34:	ldr	x20, [sp, #80]
  434e38:	ldrb	w0, [sp, #96]
  434e3c:	cbz	w0, 434d68 <argp_parse@@Base+0x1628>
  434e40:	ldr	w0, [sp, #100]
  434e44:	bl	404b80 <towlower@plt>
  434e48:	lsl	x1, x19, #5
  434e4c:	sub	x19, x1, x19
  434e50:	add	x0, x19, w0, uxtw
  434e54:	udiv	x19, x0, x21
  434e58:	msub	x19, x19, x21, x0
  434e5c:	ldr	x0, [sp, #88]
  434e60:	add	x20, x20, x0
  434e64:	str	x20, [sp, #80]
  434e68:	strb	wzr, [sp, #76]
  434e6c:	ldrb	w0, [sp, #76]
  434e70:	cbnz	w0, 434e24 <argp_parse@@Base+0x16e4>
  434e74:	ldrb	w0, [sp, #64]
  434e78:	cbnz	w0, 434d80 <argp_parse@@Base+0x1640>
  434e7c:	ldr	x2, [sp, #80]
  434e80:	ldrb	w1, [x2]
  434e84:	ubfx	x0, x1, #5, #3
  434e88:	ldr	w0, [x24, x0, lsl #2]
  434e8c:	lsr	w0, w0, w1
  434e90:	tbz	w0, #0, 434d70 <argp_parse@@Base+0x1630>
  434e94:	mov	x0, #0x1                   	// #1
  434e98:	str	x0, [sp, #88]
  434e9c:	ldrb	w1, [x2]
  434ea0:	str	w1, [sp, #100]
  434ea4:	strb	w0, [sp, #96]
  434ea8:	b	434e20 <argp_parse@@Base+0x16e0>
  434eac:	ldr	x0, [sp, #80]
  434eb0:	bl	403ff0 <strlen@plt>
  434eb4:	str	x0, [sp, #88]
  434eb8:	strb	wzr, [sp, #96]
  434ebc:	b	434e20 <argp_parse@@Base+0x16e0>
  434ec0:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x19e64>
  434ec4:	add	x3, x3, #0x398
  434ec8:	mov	w2, #0xb2                  	// #178
  434ecc:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  434ed0:	add	x1, x1, #0x338
  434ed4:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  434ed8:	add	x0, x0, #0x360
  434edc:	bl	404ac0 <__assert_fail@plt>
  434ee0:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x19e64>
  434ee4:	add	x3, x3, #0x398
  434ee8:	mov	w2, #0xb3                  	// #179
  434eec:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  434ef0:	add	x1, x1, #0x338
  434ef4:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  434ef8:	add	x0, x0, #0x378
  434efc:	bl	404ac0 <__assert_fail@plt>
  434f00:	mov	x0, x19
  434f04:	ldp	x19, x20, [sp, #16]
  434f08:	ldp	x21, x22, [sp, #32]
  434f0c:	ldp	x23, x24, [sp, #48]
  434f10:	ldp	x29, x30, [sp], #128
  434f14:	ret
  434f18:	stp	x29, x30, [sp, #-32]!
  434f1c:	mov	x29, sp
  434f20:	stp	x19, x20, [sp, #16]
  434f24:	mov	x19, x0
  434f28:	mov	x20, x1
  434f2c:	mov	x0, #0x10                  	// #16
  434f30:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  434f34:	str	x20, [x0, #8]
  434f38:	ldr	x1, [x19, #8]
  434f3c:	str	x1, [x0]
  434f40:	str	x0, [x19, #8]
  434f44:	ldp	x19, x20, [sp, #16]
  434f48:	ldp	x29, x30, [sp], #32
  434f4c:	ret
  434f50:	and	w8, w1, #0x8000000
  434f54:	and	w9, w1, #0x2
  434f58:	mov	x7, #0x1                   	// #1
  434f5c:	mov	x6, #0x401                 	// #1025
  434f60:	movk	x6, #0x8000, lsl #16
  434f64:	and	w3, w1, #0x20
  434f68:	mov	x5, #0x2180                	// #8576
  434f6c:	mov	x4, #0x200                 	// #512
  434f70:	movk	x4, #0x4000, lsl #16
  434f74:	b	434fc4 <argp_parse@@Base+0x1884>
  434f78:	sub	w1, w1, #0x21
  434f7c:	lsl	x1, x7, x1
  434f80:	tst	x1, x6
  434f84:	b.ne	435024 <argp_parse@@Base+0x18e4>  // b.any
  434f88:	tst	x1, x5
  434f8c:	b.ne	434ff8 <argp_parse@@Base+0x18b8>  // b.any
  434f90:	tst	x1, x4
  434f94:	b.eq	434fc0 <argp_parse@@Base+0x1880>  // b.none
  434f98:	mov	w0, #0x1                   	// #1
  434f9c:	b	434fe4 <argp_parse@@Base+0x18a4>
  434fa0:	cmp	w1, #0x5c
  434fa4:	b.eq	435004 <argp_parse@@Base+0x18c4>  // b.none
  434fa8:	cmp	w1, #0x5c
  434fac:	b.ls	434fe8 <argp_parse@@Base+0x18a8>  // b.plast
  434fb0:	sub	w1, w1, #0x7b
  434fb4:	and	w1, w1, #0xfffffffd
  434fb8:	tst	w1, #0xff
  434fbc:	b.eq	434ff8 <argp_parse@@Base+0x18b8>  // b.none
  434fc0:	mov	x0, x2
  434fc4:	mov	x2, x0
  434fc8:	ldrb	w1, [x2], #1
  434fcc:	cmp	w1, #0x40
  434fd0:	b.hi	434fa0 <argp_parse@@Base+0x1860>  // b.pmore
  434fd4:	cmp	w1, #0x20
  434fd8:	b.hi	434f78 <argp_parse@@Base+0x1838>  // b.pmore
  434fdc:	cbnz	w1, 434fc0 <argp_parse@@Base+0x1880>
  434fe0:	mov	w0, #0x0                   	// #0
  434fe4:	ret
  434fe8:	cmp	w1, #0x5b
  434fec:	b.ne	434fc0 <argp_parse@@Base+0x1880>  // b.any
  434ff0:	mov	w0, #0x1                   	// #1
  434ff4:	b	434fe4 <argp_parse@@Base+0x18a4>
  434ff8:	cbz	w8, 434fc0 <argp_parse@@Base+0x1880>
  434ffc:	mov	w0, #0x1                   	// #1
  435000:	b	434fe4 <argp_parse@@Base+0x18a4>
  435004:	mov	w1, w8
  435008:	cbnz	w8, 434fc0 <argp_parse@@Base+0x1880>
  43500c:	cbnz	w9, 43501c <argp_parse@@Base+0x18dc>
  435010:	ldrb	w0, [x0, #1]
  435014:	cmp	w0, #0x0
  435018:	cset	w1, ne  // ne = any
  43501c:	add	x2, x2, w1, sxtw
  435020:	b	434fc0 <argp_parse@@Base+0x1880>
  435024:	cbz	w3, 434fc0 <argp_parse@@Base+0x1880>
  435028:	ldrb	w0, [x0, #1]
  43502c:	cmp	w0, #0x28
  435030:	b.ne	434fc0 <argp_parse@@Base+0x1880>  // b.any
  435034:	mov	w0, #0x1                   	// #1
  435038:	b	434fe4 <argp_parse@@Base+0x18a4>
  43503c:	stp	x29, x30, [sp, #-16]!
  435040:	mov	x29, sp
  435044:	mov	x0, #0x10                  	// #16
  435048:	bl	4400bc <argp_parse@@Base+0xc97c>
  43504c:	ldp	x29, x30, [sp], #16
  435050:	ret
  435054:	stp	x29, x30, [sp, #-64]!
  435058:	mov	x29, sp
  43505c:	stp	x19, x20, [sp, #16]
  435060:	stp	x21, x22, [sp, #32]
  435064:	str	x23, [sp, #48]
  435068:	mov	x23, x0
  43506c:	ldr	x21, [x0]
  435070:	cbnz	x21, 435104 <argp_parse@@Base+0x19c4>
  435074:	ldr	x19, [x23, #8]
  435078:	cbz	x19, 435098 <argp_parse@@Base+0x1958>
  43507c:	mov	x20, x19
  435080:	ldr	x19, [x19]
  435084:	ldr	x0, [x20, #8]
  435088:	bl	4047c0 <free@plt>
  43508c:	mov	x0, x20
  435090:	bl	4047c0 <free@plt>
  435094:	cbnz	x19, 43507c <argp_parse@@Base+0x193c>
  435098:	mov	x0, x23
  43509c:	bl	4047c0 <free@plt>
  4350a0:	ldp	x19, x20, [sp, #16]
  4350a4:	ldp	x21, x22, [sp, #32]
  4350a8:	ldr	x23, [sp, #48]
  4350ac:	ldp	x29, x30, [sp], #64
  4350b0:	ret
  4350b4:	add	x0, x0, #0x8
  4350b8:	bl	44dacc <_obstack_memory_used@@Base+0xc930>
  4350bc:	add	x22, x22, #0x1
  4350c0:	add	x20, x20, #0x48
  4350c4:	ldr	x1, [x19, #32]
  4350c8:	cmp	x22, x1
  4350cc:	b.cs	4350e4 <argp_parse@@Base+0x19a4>  // b.hs, b.nlast
  4350d0:	ldr	x1, [x19, #16]
  4350d4:	add	x0, x1, x20
  4350d8:	ldr	w1, [x1, x20]
  4350dc:	tbz	w1, #27, 4350bc <argp_parse@@Base+0x197c>
  4350e0:	b	4350b4 <argp_parse@@Base+0x1974>
  4350e4:	ldr	x0, [x19, #16]
  4350e8:	bl	4047c0 <free@plt>
  4350ec:	b	4350f8 <argp_parse@@Base+0x19b8>
  4350f0:	ldr	x0, [x19, #16]
  4350f4:	bl	437e20 <argp_parse@@Base+0x46e0>
  4350f8:	mov	x0, x19
  4350fc:	bl	4047c0 <free@plt>
  435100:	cbz	x21, 435074 <argp_parse@@Base+0x1934>
  435104:	mov	x19, x21
  435108:	ldr	x21, [x21]
  43510c:	ldr	w1, [x19, #8]
  435110:	cbz	w1, 4350f0 <argp_parse@@Base+0x19b0>
  435114:	cmp	w1, #0x1
  435118:	b.ne	4350f8 <argp_parse@@Base+0x19b8>  // b.any
  43511c:	ldr	x0, [x19, #32]
  435120:	cbz	x0, 4350e4 <argp_parse@@Base+0x19a4>
  435124:	mov	x20, #0x0                   	// #0
  435128:	mov	x22, #0x0                   	// #0
  43512c:	b	4350d0 <argp_parse@@Base+0x1990>
  435130:	stp	x29, x30, [sp, #-64]!
  435134:	mov	x29, sp
  435138:	stp	x19, x20, [sp, #16]
  43513c:	stp	x21, x22, [sp, #32]
  435140:	str	x23, [sp, #48]
  435144:	mov	x23, x0
  435148:	mov	x19, x1
  43514c:	mov	w22, w2
  435150:	adrp	x21, 434000 <argp_parse@@Base+0x8c0>
  435154:	add	x0, x21, #0xc28
  435158:	adrp	x21, 404000 <fputs@plt>
  43515c:	add	x21, x21, #0x8c0
  435160:	tst	x22, #0x10000000
  435164:	csel	x21, x21, x0, ne  // ne = any
  435168:	mov	x0, x23
  43516c:	blr	x21
  435170:	cmp	w0, #0x0
  435174:	cset	w0, eq  // eq = none
  435178:	tbnz	w22, #30, 43518c <argp_parse@@Base+0x1a4c>
  43517c:	ldrb	w1, [x19]
  435180:	cmp	w1, #0x0
  435184:	csinc	w20, w0, wzr, ne  // ne = any
  435188:	cbz	w20, 4351c8 <argp_parse@@Base+0x1a88>
  43518c:	ldp	x19, x20, [sp, #16]
  435190:	ldp	x21, x22, [sp, #32]
  435194:	ldr	x23, [sp, #48]
  435198:	ldp	x29, x30, [sp], #64
  43519c:	ret
  4351a0:	mov	w2, w22
  4351a4:	add	x1, x19, #0x1
  4351a8:	mov	x0, x23
  4351ac:	blr	x21
  4351b0:	cmp	w0, #0x0
  4351b4:	cset	w0, eq  // eq = none
  4351b8:	ldrb	w1, [x19, #1]!
  4351bc:	cmp	w1, #0x0
  4351c0:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  4351c4:	b.ne	43518c <argp_parse@@Base+0x1a4c>  // b.any
  4351c8:	mov	w0, w20
  4351cc:	cmp	w1, #0x2f
  4351d0:	b.ne	4351b8 <argp_parse@@Base+0x1a78>  // b.any
  4351d4:	ldrb	w1, [x19, #1]
  4351d8:	cmp	w1, #0x2f
  4351dc:	b.ne	4351a0 <argp_parse@@Base+0x1a60>  // b.any
  4351e0:	b	4351b8 <argp_parse@@Base+0x1a78>
  4351e4:	stp	x29, x30, [sp, #-80]!
  4351e8:	mov	x29, sp
  4351ec:	stp	x19, x20, [sp, #16]
  4351f0:	ldr	x20, [x0]
  4351f4:	cbz	x20, 43535c <argp_parse@@Base+0x1c1c>
  4351f8:	stp	x21, x22, [sp, #32]
  4351fc:	stp	x23, x24, [sp, #48]
  435200:	stp	x25, x26, [sp, #64]
  435204:	mov	x22, x1
  435208:	mov	x21, #0x0                   	// #0
  43520c:	mov	w23, #0x2f                  	// #47
  435210:	b	4352f0 <argp_parse@@Base+0x1bb0>
  435214:	mov	x0, x22
  435218:	bl	403ff0 <strlen@plt>
  43521c:	add	x0, x0, #0x1
  435220:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  435224:	mov	x21, x0
  435228:	b	4352fc <argp_parse@@Base+0x1bbc>
  43522c:	cbnz	w24, 4352e4 <argp_parse@@Base+0x1ba4>
  435230:	mov	w1, w23
  435234:	mov	x0, x19
  435238:	bl	404870 <strchr@plt>
  43523c:	cbz	x0, 4352e4 <argp_parse@@Base+0x1ba4>
  435240:	add	x19, x0, #0x1
  435244:	mov	x1, x19
  435248:	mov	x0, x21
  43524c:	bl	404910 <strcpy@plt>
  435250:	mov	x1, x21
  435254:	mov	x0, x26
  435258:	bl	437a0c <argp_parse@@Base+0x42cc>
  43525c:	cbnz	x0, 43531c <argp_parse@@Base+0x1bdc>
  435260:	cbz	w25, 43522c <argp_parse@@Base+0x1aec>
  435264:	mov	w1, w23
  435268:	mov	x0, x21
  43526c:	bl	4045e0 <strrchr@plt>
  435270:	cbz	x0, 43522c <argp_parse@@Base+0x1aec>
  435274:	strb	wzr, [x0]
  435278:	b	435250 <argp_parse@@Base+0x1b10>
  43527c:	ldr	x25, [x20, #32]
  435280:	ldr	x19, [x20, #16]
  435284:	cbz	x25, 4352e4 <argp_parse@@Base+0x1ba4>
  435288:	add	x19, x19, #0x8
  43528c:	mov	x24, #0x0                   	// #0
  435290:	b	4352c8 <argp_parse@@Base+0x1b88>
  435294:	mov	w4, #0x0                   	// #0
  435298:	mov	x3, #0x0                   	// #0
  43529c:	mov	x2, #0x0                   	// #0
  4352a0:	mov	x1, x22
  4352a4:	mov	x0, x19
  4352a8:	bl	44db14 <_obstack_memory_used@@Base+0xc978>
  4352ac:	cmp	w0, #0x0
  4352b0:	cset	w0, eq  // eq = none
  4352b4:	cbnz	w0, 435354 <argp_parse@@Base+0x1c14>
  4352b8:	add	x24, x24, #0x1
  4352bc:	add	x19, x19, #0x48
  4352c0:	cmp	x25, x24
  4352c4:	b.eq	4352e4 <argp_parse@@Base+0x1ba4>  // b.none
  4352c8:	ldur	w2, [x19, #-8]
  4352cc:	tbnz	w2, #27, 435294 <argp_parse@@Base+0x1b54>
  4352d0:	mov	x1, x22
  4352d4:	ldr	x0, [x19]
  4352d8:	bl	435130 <argp_parse@@Base+0x19f0>
  4352dc:	and	w0, w0, #0xff
  4352e0:	b	4352b4 <argp_parse@@Base+0x1b74>
  4352e4:	ldr	x0, [x20]
  4352e8:	cbz	x0, 435314 <argp_parse@@Base+0x1bd4>
  4352ec:	mov	x20, x0
  4352f0:	ldr	w0, [x20, #8]
  4352f4:	cbnz	w0, 43527c <argp_parse@@Base+0x1b3c>
  4352f8:	cbz	x21, 435214 <argp_parse@@Base+0x1ad4>
  4352fc:	ldr	w24, [x20, #12]
  435300:	ldr	x26, [x20, #16]
  435304:	mov	x19, x22
  435308:	and	w25, w24, #0x8
  43530c:	and	w24, w24, #0x40000000
  435310:	b	435244 <argp_parse@@Base+0x1b04>
  435314:	mov	w19, #0x1                   	// #1
  435318:	b	435320 <argp_parse@@Base+0x1be0>
  43531c:	mov	w19, #0x0                   	// #0
  435320:	mov	x0, x21
  435324:	bl	4047c0 <free@plt>
  435328:	ldr	w0, [x20, #12]
  43532c:	eor	x0, x0, #0x20000000
  435330:	ubfx	w0, w0, #29, #1
  435334:	cmp	w0, w19
  435338:	cset	w0, ne  // ne = any
  43533c:	ldp	x21, x22, [sp, #32]
  435340:	ldp	x23, x24, [sp, #48]
  435344:	ldp	x25, x26, [sp, #64]
  435348:	ldp	x19, x20, [sp, #16]
  43534c:	ldp	x29, x30, [sp], #80
  435350:	ret
  435354:	mov	w19, #0x0                   	// #0
  435358:	b	435320 <argp_parse@@Base+0x1be0>
  43535c:	mov	w0, #0x0                   	// #0
  435360:	b	435348 <argp_parse@@Base+0x1c08>
  435364:	stp	x29, x30, [sp, #-64]!
  435368:	mov	x29, sp
  43536c:	stp	x19, x20, [sp, #16]
  435370:	stp	x21, x22, [sp, #32]
  435374:	mov	x20, x0
  435378:	mov	x21, x1
  43537c:	mov	w19, w2
  435380:	tst	w2, #0x18000000
  435384:	b.eq	43557c <argp_parse@@Base+0x1e3c>  // b.none
  435388:	mov	w1, w2
  43538c:	mov	x0, x21
  435390:	bl	434f50 <argp_parse@@Base+0x1810>
  435394:	and	w0, w0, #0xff
  435398:	cbz	w0, 43557c <argp_parse@@Base+0x1e3c>
  43539c:	stp	x23, x24, [sp, #48]
  4353a0:	ldr	x0, [x20]
  4353a4:	cbz	x0, 4353b4 <argp_parse@@Base+0x1c74>
  4353a8:	ldr	w1, [x0, #8]
  4353ac:	cmp	w1, #0x1
  4353b0:	b.eq	435430 <argp_parse@@Base+0x1cf0>  // b.none
  4353b4:	mov	x0, #0x28                  	// #40
  4353b8:	bl	4400bc <argp_parse@@Base+0xc97c>
  4353bc:	mov	w1, #0x1                   	// #1
  4353c0:	str	w1, [x0, #8]
  4353c4:	str	w19, [x0, #12]
  4353c8:	ldr	x1, [x20]
  4353cc:	str	x1, [x0]
  4353d0:	str	x0, [x20]
  4353d4:	ldr	x22, [x20]
  4353d8:	ldr	x1, [x22, #24]
  4353dc:	ldr	x0, [x22, #32]
  4353e0:	cmp	x0, x1
  4353e4:	b.eq	435440 <argp_parse@@Base+0x1d00>  // b.none
  4353e8:	ldr	x1, [x22, #16]
  4353ec:	ldr	x0, [x22, #32]
  4353f0:	add	x3, x0, #0x1
  4353f4:	str	x3, [x22, #32]
  4353f8:	add	x0, x0, x0, lsl #3
  4353fc:	lsl	x0, x0, #3
  435400:	add	x23, x1, x0
  435404:	str	w19, [x1, x0]
  435408:	tbz	w19, #27, 435550 <argp_parse@@Base+0x1e10>
  43540c:	asr	w0, w19, #3
  435410:	and	w0, w0, #0x2
  435414:	mov	w20, #0x9                   	// #9
  435418:	orr	w20, w0, w20
  43541c:	tbz	w19, #3, 43551c <argp_parse@@Base+0x1ddc>
  435420:	mov	x0, x21
  435424:	bl	403ff0 <strlen@plt>
  435428:	mov	x19, x0
  43542c:	b	4354b4 <argp_parse@@Base+0x1d74>
  435430:	ldr	w0, [x0, #12]
  435434:	eor	w0, w19, w0
  435438:	tbz	w0, #29, 4353d4 <argp_parse@@Base+0x1c94>
  43543c:	b	4353b4 <argp_parse@@Base+0x1c74>
  435440:	ldr	x0, [x22, #16]
  435444:	cbz	x0, 435480 <argp_parse@@Base+0x1d40>
  435448:	mov	x2, #0xf683                	// #63107
  43544c:	movk	x2, #0xda12, lsl #16
  435450:	movk	x2, #0x684b, lsl #32
  435454:	movk	x2, #0x12f, lsl #48
  435458:	cmp	x1, x2
  43545c:	b.hi	4354ac <argp_parse@@Base+0x1d6c>  // b.pmore
  435460:	add	x2, x1, #0x1
  435464:	add	x1, x2, x1, lsr #1
  435468:	str	x1, [x22, #24]
  43546c:	add	x1, x1, x1, lsl #3
  435470:	lsl	x1, x1, #3
  435474:	bl	43ff70 <argp_parse@@Base+0xc830>
  435478:	str	x0, [x22, #16]
  43547c:	b	4353e8 <argp_parse@@Base+0x1ca8>
  435480:	cmp	x1, #0x0
  435484:	csinc	x1, x1, xzr, ne  // ne = any
  435488:	mov	x2, #0x48                  	// #72
  43548c:	mul	x3, x1, x2
  435490:	umulh	x2, x1, x2
  435494:	cmp	x2, #0x0
  435498:	cset	x2, ne  // ne = any
  43549c:	cmp	x3, #0x0
  4354a0:	csinc	x2, x2, xzr, ge  // ge = tcont
  4354a4:	cbz	w2, 435468 <argp_parse@@Base+0x1d28>
  4354a8:	bl	40e5ec <wcrtomb@plt+0x99cc>
  4354ac:	bl	40e5ec <wcrtomb@plt+0x99cc>
  4354b0:	mov	x19, x0
  4354b4:	cbz	x19, 43553c <argp_parse@@Base+0x1dfc>
  4354b8:	sub	x0, x19, #0x1
  4354bc:	ldrb	w1, [x21, x0]
  4354c0:	cmp	w1, #0x2f
  4354c4:	b.eq	4354b0 <argp_parse@@Base+0x1d70>  // b.none
  4354c8:	add	x0, x19, #0x7
  4354cc:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  4354d0:	mov	x24, x0
  4354d4:	mov	x2, x19
  4354d8:	mov	x1, x21
  4354dc:	bl	403f70 <memcpy@plt>
  4354e0:	add	x1, x24, x19
  4354e4:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  4354e8:	add	x0, x0, #0x390
  4354ec:	ldr	w2, [x0]
  4354f0:	str	w2, [x24, x19]
  4354f4:	ldur	w0, [x0, #3]
  4354f8:	stur	w0, [x1, #3]
  4354fc:	mov	w2, w20
  435500:	mov	x1, x24
  435504:	add	x0, x23, #0x8
  435508:	bl	44d948 <_obstack_memory_used@@Base+0xc7ac>
  43550c:	mov	w19, w0
  435510:	mov	x0, x24
  435514:	bl	4047c0 <free@plt>
  435518:	b	435530 <argp_parse@@Base+0x1df0>
  43551c:	mov	w2, w20
  435520:	mov	x1, x21
  435524:	add	x0, x23, #0x8
  435528:	bl	44d948 <_obstack_memory_used@@Base+0xc7ac>
  43552c:	mov	w19, w0
  435530:	cbnz	w19, 43553c <argp_parse@@Base+0x1dfc>
  435534:	ldp	x23, x24, [sp, #48]
  435538:	b	43562c <argp_parse@@Base+0x1eec>
  43553c:	ldr	x0, [x22, #32]
  435540:	sub	x0, x0, #0x1
  435544:	str	x0, [x22, #32]
  435548:	ldp	x23, x24, [sp, #48]
  43554c:	b	43562c <argp_parse@@Base+0x1eec>
  435550:	tbnz	w19, #26, 435560 <argp_parse@@Base+0x1e20>
  435554:	str	x21, [x23, #8]
  435558:	ldp	x23, x24, [sp, #48]
  43555c:	b	43562c <argp_parse@@Base+0x1eec>
  435560:	mov	x0, x21
  435564:	bl	440154 <argp_parse@@Base+0xca14>
  435568:	mov	x21, x0
  43556c:	mov	x1, x0
  435570:	mov	x0, x20
  435574:	bl	434f18 <argp_parse@@Base+0x17d8>
  435578:	b	435554 <argp_parse@@Base+0x1e14>
  43557c:	ldr	x0, [x20]
  435580:	cbz	x0, 4355a0 <argp_parse@@Base+0x1e60>
  435584:	ldr	w1, [x0, #8]
  435588:	cbnz	w1, 4355a0 <argp_parse@@Base+0x1e60>
  43558c:	ldr	w0, [x0, #12]
  435590:	eor	w0, w19, w0
  435594:	and	w0, w0, #0x7ffffff8
  435598:	and	w0, w0, #0xe000001f
  43559c:	cbz	w0, 4355ec <argp_parse@@Base+0x1eac>
  4355a0:	mov	x0, #0x28                  	// #40
  4355a4:	bl	4400bc <argp_parse@@Base+0xc97c>
  4355a8:	mov	x22, x0
  4355ac:	str	wzr, [x0, #8]
  4355b0:	str	w19, [x0, #12]
  4355b4:	tbnz	w19, #4, 43563c <argp_parse@@Base+0x1efc>
  4355b8:	adrp	x2, 434000 <argp_parse@@Base+0x8c0>
  4355bc:	add	x2, x2, #0xd14
  4355c0:	adrp	x3, 434000 <argp_parse@@Base+0x8c0>
  4355c4:	add	x3, x3, #0xc0c
  4355c8:	adrp	x4, 434000 <argp_parse@@Base+0x8c0>
  4355cc:	add	x4, x4, #0xbdc
  4355d0:	mov	x1, #0x0                   	// #0
  4355d4:	mov	x0, #0x0                   	// #0
  4355d8:	bl	437c94 <argp_parse@@Base+0x4554>
  4355dc:	str	x0, [x22, #16]
  4355e0:	ldr	x0, [x20]
  4355e4:	str	x0, [x22]
  4355e8:	str	x22, [x20]
  4355ec:	ldr	x22, [x20]
  4355f0:	mov	x0, x21
  4355f4:	bl	440154 <argp_parse@@Base+0xca14>
  4355f8:	mov	x20, x0
  4355fc:	and	w19, w19, #0x1ffffffe
  435600:	and	w19, w19, #0xf0000003
  435604:	mov	w0, #0x10000000            	// #268435456
  435608:	cmp	w19, w0
  43560c:	b.eq	435650 <argp_parse@@Base+0x1f10>  // b.none
  435610:	mov	x1, x20
  435614:	ldr	x0, [x22, #16]
  435618:	bl	4381cc <argp_parse@@Base+0x4a8c>
  43561c:	cmp	x20, x0
  435620:	b.eq	43562c <argp_parse@@Base+0x1eec>  // b.none
  435624:	mov	x0, x20
  435628:	bl	4047c0 <free@plt>
  43562c:	ldp	x19, x20, [sp, #16]
  435630:	ldp	x21, x22, [sp, #32]
  435634:	ldp	x29, x30, [sp], #64
  435638:	ret
  43563c:	adrp	x2, 434000 <argp_parse@@Base+0x8c0>
  435640:	add	x2, x2, #0xd28
  435644:	adrp	x3, 434000 <argp_parse@@Base+0x8c0>
  435648:	add	x3, x3, #0xbf0
  43564c:	b	4355c8 <argp_parse@@Base+0x1e88>
  435650:	mov	x1, x20
  435654:	mov	x2, x20
  435658:	mov	w4, #0x0                   	// #0
  43565c:	mov	w5, #0x1                   	// #1
  435660:	b	435674 <argp_parse@@Base+0x1f34>
  435664:	add	x1, x1, w0, sxtw
  435668:	ldrb	w0, [x1], #1
  43566c:	strb	w0, [x2], #1
  435670:	cbz	w0, 435610 <argp_parse@@Base+0x1ed0>
  435674:	ldrb	w3, [x1]
  435678:	mov	w0, w4
  43567c:	cmp	w3, #0x5c
  435680:	b.ne	435664 <argp_parse@@Base+0x1f24>  // b.any
  435684:	ldrb	w0, [x1, #1]
  435688:	cbz	w0, 435694 <argp_parse@@Base+0x1f54>
  43568c:	mov	w0, w5
  435690:	b	435664 <argp_parse@@Base+0x1f24>
  435694:	ldrb	w0, [x1]
  435698:	add	x1, x1, #0x1
  43569c:	strb	w0, [x2], #1
  4356a0:	b	435674 <argp_parse@@Base+0x1f34>
  4356a4:	stp	x29, x30, [sp, #-112]!
  4356a8:	mov	x29, sp
  4356ac:	stp	x19, x20, [sp, #16]
  4356b0:	stp	x21, x22, [sp, #32]
  4356b4:	stp	x23, x24, [sp, #48]
  4356b8:	stp	x25, x26, [sp, #64]
  4356bc:	stp	x27, x28, [sp, #80]
  4356c0:	mov	x23, x0
  4356c4:	mov	x22, x1
  4356c8:	mov	x20, x2
  4356cc:	mov	w24, w3
  4356d0:	and	w21, w4, #0xff
  4356d4:	mov	x25, x5
  4356d8:	str	xzr, [sp, #104]
  4356dc:	mov	x19, #0x0                   	// #0
  4356e0:	mov	x27, #0x0                   	// #0
  4356e4:	b	435700 <argp_parse@@Base+0x1fc0>
  4356e8:	add	x1, sp, #0x68
  4356ec:	mov	x0, x27
  4356f0:	bl	440068 <argp_parse@@Base+0xc928>
  4356f4:	mov	x27, x0
  4356f8:	strb	w26, [x27, x19]
  4356fc:	add	x19, x19, #0x1
  435700:	ldr	x4, [x20, #8]
  435704:	ldr	x0, [x20, #16]
  435708:	cmp	x4, x0
  43570c:	b.cs	43572c <argp_parse@@Base+0x1fec>  // b.hs, b.nlast
  435710:	add	x0, x4, #0x1
  435714:	str	x0, [x20, #8]
  435718:	ldrb	w26, [x4]
  43571c:	ldr	x0, [sp, #104]
  435720:	cmp	x0, x19
  435724:	b.ne	4356f8 <argp_parse@@Base+0x1fb8>  // b.any
  435728:	b	4356e8 <argp_parse@@Base+0x1fa8>
  43572c:	mov	x0, x20
  435730:	bl	404b90 <__uflow@plt>
  435734:	mov	w26, w0
  435738:	cmn	w0, #0x1
  43573c:	b.ne	43571c <argp_parse@@Base+0x1fdc>  // b.any
  435740:	ldr	w0, [x20]
  435744:	and	w26, w0, #0x20
  435748:	tbz	w0, #5, 435754 <argp_parse@@Base+0x2014>
  43574c:	bl	404ad0 <__errno_location@plt>
  435750:	ldr	w26, [x0]
  435754:	add	x1, x19, #0x1
  435758:	mov	x0, x27
  43575c:	bl	43ff70 <argp_parse@@Base+0xc830>
  435760:	mov	x20, x0
  435764:	strb	w21, [x0, x19]
  435768:	cbz	x19, 43580c <argp_parse@@Base+0x20cc>
  43576c:	add	x0, x0, x19
  435770:	ldurb	w0, [x0, #-1]
  435774:	cmp	w0, w21
  435778:	cinc	x19, x19, ne  // ne = any
  43577c:	add	x19, x20, x19
  435780:	mov	x1, x20
  435784:	mov	x0, x22
  435788:	bl	434f18 <argp_parse@@Base+0x17d8>
  43578c:	cmp	x20, x19
  435790:	b.cs	435818 <argp_parse@@Base+0x20d8>  // b.hs, b.nlast
  435794:	ubfiz	x28, x21, #1, #8
  435798:	mov	x27, x20
  43579c:	b	4357c8 <argp_parse@@Base+0x2088>
  4357a0:	strb	wzr, [x0]
  4357a4:	mov	x3, x25
  4357a8:	mov	w2, w24
  4357ac:	mov	x1, x27
  4357b0:	mov	x0, x22
  4357b4:	blr	x23
  4357b8:	add	x27, x20, #0x1
  4357bc:	add	x20, x20, #0x1
  4357c0:	cmp	x19, x20
  4357c4:	b.eq	435818 <argp_parse@@Base+0x20d8>  // b.none
  4357c8:	ldrb	w0, [x20]
  4357cc:	cmp	w0, w21
  4357d0:	b.ne	4357bc <argp_parse@@Base+0x207c>  // b.any
  4357d4:	bl	404750 <__ctype_b_loc@plt>
  4357d8:	ldr	x2, [x0]
  4357dc:	ldrh	w1, [x2, x28]
  4357e0:	mov	x0, x20
  4357e4:	tbz	w1, #13, 4357a0 <argp_parse@@Base+0x2060>
  4357e8:	cmp	x20, x27
  4357ec:	b.eq	4357b8 <argp_parse@@Base+0x2078>  // b.none
  4357f0:	ldurb	w1, [x0, #-1]
  4357f4:	ldrh	w1, [x2, x1, lsl #1]
  4357f8:	tbz	w1, #13, 4357a0 <argp_parse@@Base+0x2060>
  4357fc:	sub	x0, x0, #0x1
  435800:	cmp	x0, x27
  435804:	b.ne	4357f0 <argp_parse@@Base+0x20b0>  // b.any
  435808:	b	4357b8 <argp_parse@@Base+0x2078>
  43580c:	mov	x1, x0
  435810:	mov	x0, x22
  435814:	bl	434f18 <argp_parse@@Base+0x17d8>
  435818:	bl	404ad0 <__errno_location@plt>
  43581c:	str	w26, [x0]
  435820:	cmp	w26, #0x0
  435824:	csetm	w0, ne  // ne = any
  435828:	ldp	x19, x20, [sp, #16]
  43582c:	ldp	x21, x22, [sp, #32]
  435830:	ldp	x23, x24, [sp, #48]
  435834:	ldp	x25, x26, [sp, #64]
  435838:	ldp	x27, x28, [sp, #80]
  43583c:	ldp	x29, x30, [sp], #112
  435840:	ret
  435844:	stp	x29, x30, [sp, #-64]!
  435848:	mov	x29, sp
  43584c:	stp	x19, x20, [sp, #16]
  435850:	stp	x21, x22, [sp, #32]
  435854:	str	x0, [sp, #56]
  435858:	mov	x20, x1
  43585c:	mov	x0, x2
  435860:	mov	w19, w3
  435864:	and	w21, w4, #0xff
  435868:	ldrb	w2, [x2]
  43586c:	cmp	w2, #0x2d
  435870:	b.eq	4358c0 <argp_parse@@Base+0x2180>  // b.none
  435874:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  435878:	add	x1, x1, #0xc38
  43587c:	bl	4042e0 <fopen@plt>
  435880:	mov	x22, x0
  435884:	cbz	x0, 435900 <argp_parse@@Base+0x21c0>
  435888:	add	x5, sp, #0x38
  43588c:	mov	w4, w21
  435890:	mov	w3, w19
  435894:	mov	x2, x22
  435898:	mov	x1, x20
  43589c:	adrp	x0, 434000 <argp_parse@@Base+0x8c0>
  4358a0:	add	x0, x0, #0xbc4
  4358a4:	bl	4356a4 <argp_parse@@Base+0x1f64>
  4358a8:	mov	w19, w0
  4358ac:	mov	x0, x22
  4358b0:	bl	4042a0 <fclose@plt>
  4358b4:	cmp	w0, #0x0
  4358b8:	csinv	w19, w19, wzr, eq  // eq = none
  4358bc:	b	4358ec <argp_parse@@Base+0x21ac>
  4358c0:	ldrb	w1, [x0, #1]
  4358c4:	cbnz	w1, 435874 <argp_parse@@Base+0x2134>
  4358c8:	add	x5, sp, #0x38
  4358cc:	mov	w4, w21
  4358d0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4358d4:	ldr	x2, [x0, #1112]
  4358d8:	mov	x1, x20
  4358dc:	adrp	x0, 434000 <argp_parse@@Base+0x8c0>
  4358e0:	add	x0, x0, #0xbc4
  4358e4:	bl	4356a4 <argp_parse@@Base+0x1f64>
  4358e8:	mov	w19, w0
  4358ec:	mov	w0, w19
  4358f0:	ldp	x19, x20, [sp, #16]
  4358f4:	ldp	x21, x22, [sp, #32]
  4358f8:	ldp	x29, x30, [sp], #64
  4358fc:	ret
  435900:	mov	w19, #0xffffffff            	// #-1
  435904:	b	4358ec <argp_parse@@Base+0x21ac>
  435908:	stp	x29, x30, [sp, #-64]!
  43590c:	mov	x29, sp
  435910:	stp	x19, x20, [sp, #16]
  435914:	stp	x21, x22, [sp, #32]
  435918:	str	x23, [sp, #48]
  43591c:	mov	w23, w1
  435920:	mov	x20, x2
  435924:	mov	x21, x3
  435928:	mov	w22, w4
  43592c:	tbz	w0, #31, 435948 <argp_parse@@Base+0x2208>
  435930:	cbnz	x2, 435990 <argp_parse@@Base+0x2250>
  435934:	bl	404ad0 <__errno_location@plt>
  435938:	mov	w1, #0x9                   	// #9
  43593c:	str	w1, [x0]
  435940:	mov	w19, #0xffffffff            	// #-1
  435944:	b	435968 <argp_parse@@Base+0x2228>
  435948:	mov	x1, x3
  43594c:	bl	4043b0 <futimens@plt>
  435950:	mov	w19, w0
  435954:	cbz	x20, 435960 <argp_parse@@Base+0x2220>
  435958:	cmn	w0, #0x1
  43595c:	b.eq	435980 <argp_parse@@Base+0x2240>  // b.none
  435960:	cmp	w19, #0x1
  435964:	b.eq	435934 <argp_parse@@Base+0x21f4>  // b.none
  435968:	mov	w0, w19
  43596c:	ldp	x19, x20, [sp, #16]
  435970:	ldp	x21, x22, [sp, #32]
  435974:	ldr	x23, [sp, #48]
  435978:	ldp	x29, x30, [sp], #64
  43597c:	ret
  435980:	bl	404ad0 <__errno_location@plt>
  435984:	ldr	w0, [x0]
  435988:	cmp	w0, #0x26
  43598c:	b.ne	435968 <argp_parse@@Base+0x2228>  // b.any
  435990:	mov	w3, w22
  435994:	mov	x2, x21
  435998:	mov	x1, x20
  43599c:	mov	w0, w23
  4359a0:	bl	4048a0 <utimensat@plt>
  4359a4:	mov	w19, w0
  4359a8:	b	435960 <argp_parse@@Base+0x2220>
  4359ac:	stp	x29, x30, [sp, #-32]!
  4359b0:	mov	x29, sp
  4359b4:	stp	x19, x20, [sp, #16]
  4359b8:	mov	x19, x1
  4359bc:	ldr	w1, [x1, #16]
  4359c0:	and	w1, w1, #0xf000
  4359c4:	cmp	w1, #0xa, lsl #12
  4359c8:	b.ne	4359dc <argp_parse@@Base+0x229c>  // b.any
  4359cc:	mov	w0, #0x0                   	// #0
  4359d0:	ldp	x19, x20, [sp, #16]
  4359d4:	ldp	x29, x30, [sp], #32
  4359d8:	ret
  4359dc:	mov	x20, x0
  4359e0:	mov	x3, #0x0                   	// #0
  4359e4:	mov	x2, #0x0                   	// #0
  4359e8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  4359ec:	add	x1, x1, #0x3b0
  4359f0:	bl	4046d0 <getxattr@plt>
  4359f4:	mov	x1, x0
  4359f8:	tbnz	x0, #63, 435a24 <argp_parse@@Base+0x22e4>
  4359fc:	mov	w0, #0x1                   	// #1
  435a00:	cmp	x1, #0x0
  435a04:	b.gt	4359d0 <argp_parse@@Base+0x2290>
  435a08:	ldr	w1, [x19, #16]
  435a0c:	and	w1, w1, #0xf000
  435a10:	mov	x2, #0x0                   	// #0
  435a14:	cmp	w1, #0x4, lsl #12
  435a18:	b.eq	435a4c <argp_parse@@Base+0x230c>  // b.none
  435a1c:	mov	w0, w2
  435a20:	b	4359d0 <argp_parse@@Base+0x2290>
  435a24:	bl	404ad0 <__errno_location@plt>
  435a28:	ldr	w0, [x0]
  435a2c:	cmp	w0, #0x3d
  435a30:	b.eq	435a08 <argp_parse@@Base+0x22c8>  // b.none
  435a34:	bl	404ad0 <__errno_location@plt>
  435a38:	ldr	w0, [x0]
  435a3c:	bl	44e25c <_obstack_memory_used@@Base+0xd0c0>
  435a40:	and	w0, w0, #0xff
  435a44:	neg	w0, w0
  435a48:	b	4359d0 <argp_parse@@Base+0x2290>
  435a4c:	mov	x3, #0x0                   	// #0
  435a50:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  435a54:	add	x1, x1, #0x3c8
  435a58:	mov	x0, x20
  435a5c:	bl	4046d0 <getxattr@plt>
  435a60:	mov	x2, x0
  435a64:	tbnz	x0, #63, 435a78 <argp_parse@@Base+0x2338>
  435a68:	mov	w0, #0x1                   	// #1
  435a6c:	cmp	x2, #0x0
  435a70:	b.gt	4359d0 <argp_parse@@Base+0x2290>
  435a74:	b	435a1c <argp_parse@@Base+0x22dc>
  435a78:	bl	404ad0 <__errno_location@plt>
  435a7c:	ldr	w0, [x0]
  435a80:	cmp	w0, #0x3d
  435a84:	b.ne	435a34 <argp_parse@@Base+0x22f4>  // b.any
  435a88:	mov	x2, #0x0                   	// #0
  435a8c:	b	435a1c <argp_parse@@Base+0x22dc>
  435a90:	cbz	x2, 435ae8 <argp_parse@@Base+0x23a8>
  435a94:	stp	x29, x30, [sp, #-48]!
  435a98:	mov	x29, sp
  435a9c:	stp	x19, x20, [sp, #16]
  435aa0:	stp	x21, x22, [sp, #32]
  435aa4:	mov	x21, x0
  435aa8:	mov	x19, x1
  435aac:	mov	x20, x2
  435ab0:	bl	4041f0 <__ctype_tolower_loc@plt>
  435ab4:	mov	x22, x0
  435ab8:	add	x20, x19, x20
  435abc:	ldrb	w3, [x19], #1
  435ac0:	ldr	x2, [x22]
  435ac4:	mov	x1, x21
  435ac8:	ldr	w0, [x2, x3, lsl #2]
  435acc:	bl	404170 <fputc@plt>
  435ad0:	cmp	x19, x20
  435ad4:	b.ne	435abc <argp_parse@@Base+0x237c>  // b.any
  435ad8:	ldp	x19, x20, [sp, #16]
  435adc:	ldp	x21, x22, [sp, #32]
  435ae0:	ldp	x29, x30, [sp], #48
  435ae4:	ret
  435ae8:	ret
  435aec:	cbz	x2, 435b44 <argp_parse@@Base+0x2404>
  435af0:	stp	x29, x30, [sp, #-48]!
  435af4:	mov	x29, sp
  435af8:	stp	x19, x20, [sp, #16]
  435afc:	stp	x21, x22, [sp, #32]
  435b00:	mov	x21, x0
  435b04:	mov	x19, x1
  435b08:	mov	x20, x2
  435b0c:	bl	404550 <__ctype_toupper_loc@plt>
  435b10:	mov	x22, x0
  435b14:	add	x20, x19, x20
  435b18:	ldrb	w3, [x19], #1
  435b1c:	ldr	x2, [x22]
  435b20:	mov	x1, x21
  435b24:	ldr	w0, [x2, x3, lsl #2]
  435b28:	bl	404170 <fputc@plt>
  435b2c:	cmp	x19, x20
  435b30:	b.ne	435b18 <argp_parse@@Base+0x23d8>  // b.any
  435b34:	ldp	x19, x20, [sp, #16]
  435b38:	ldp	x21, x22, [sp, #32]
  435b3c:	ldp	x29, x30, [sp], #48
  435b40:	ret
  435b44:	ret
  435b48:	sub	sp, sp, #0x4e0
  435b4c:	stp	x29, x30, [sp]
  435b50:	mov	x29, sp
  435b54:	stp	x19, x20, [sp, #16]
  435b58:	stp	x21, x22, [sp, #32]
  435b5c:	stp	x23, x24, [sp, #48]
  435b60:	stp	x25, x26, [sp, #64]
  435b64:	stp	x27, x28, [sp, #80]
  435b68:	mov	x20, x0
  435b6c:	mov	x26, x1
  435b70:	mov	x21, x2
  435b74:	and	w27, w3, #0xff
  435b78:	str	x4, [sp, #136]
  435b7c:	str	x5, [sp, #128]
  435b80:	str	w6, [sp, #152]
  435b84:	ldr	w23, [x2, #8]
  435b88:	ldr	x24, [x2, #48]
  435b8c:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  435b90:	add	x0, x0, #0x7f8
  435b94:	cmp	x24, #0x0
  435b98:	csel	x24, x0, x24, eq  // eq = none
  435b9c:	cmp	w23, #0xc
  435ba0:	b.le	435bc8 <argp_parse@@Base+0x2488>
  435ba4:	sub	w23, w23, #0xc
  435ba8:	ldrb	w0, [x26]
  435bac:	cbz	w0, 437174 <argp_parse@@Base+0x3a34>
  435bb0:	mov	x19, #0x0                   	// #0
  435bb4:	add	x1, sp, #0xdf
  435bb8:	str	x1, [sp, #120]
  435bbc:	add	x1, sp, #0xe1
  435bc0:	str	x1, [sp, #144]
  435bc4:	b	435bf8 <argp_parse@@Base+0x24b8>
  435bc8:	cmp	w23, #0x0
  435bcc:	mov	w0, #0xc                   	// #12
  435bd0:	csel	w23, w23, w0, ne  // ne = any
  435bd4:	b	435ba8 <argp_parse@@Base+0x2468>
  435bd8:	cbz	x20, 435be4 <argp_parse@@Base+0x24a4>
  435bdc:	mov	x1, x20
  435be0:	bl	404170 <fputc@plt>
  435be4:	add	x19, x19, #0x1
  435be8:	mov	x25, x26
  435bec:	add	x26, x25, #0x1
  435bf0:	ldrb	w0, [x25, #1]
  435bf4:	cbz	w0, 435c0c <argp_parse@@Base+0x24cc>
  435bf8:	cmp	w0, #0x25
  435bfc:	b.eq	435c30 <argp_parse@@Base+0x24f0>  // b.none
  435c00:	cmn	x19, #0x3
  435c04:	b.ls	435bd8 <argp_parse@@Base+0x2498>  // b.plast
  435c08:	mov	x19, #0x0                   	// #0
  435c0c:	mov	x0, x19
  435c10:	ldp	x19, x20, [sp, #16]
  435c14:	ldp	x21, x22, [sp, #32]
  435c18:	ldp	x23, x24, [sp, #48]
  435c1c:	ldp	x25, x26, [sp, #64]
  435c20:	ldp	x27, x28, [sp, #80]
  435c24:	ldp	x29, x30, [sp]
  435c28:	add	sp, sp, #0x4e0
  435c2c:	ret
  435c30:	str	w27, [sp, #108]
  435c34:	str	wzr, [sp, #112]
  435c38:	str	wzr, [sp, #156]
  435c3c:	mov	w1, #0x1                   	// #1
  435c40:	b	435c50 <argp_parse@@Base+0x2510>
  435c44:	cmp	w0, #0x23
  435c48:	b.ne	435c74 <argp_parse@@Base+0x2534>  // b.any
  435c4c:	str	w1, [sp, #112]
  435c50:	ldrb	w0, [x26, #1]!
  435c54:	cmp	w0, #0x30
  435c58:	b.eq	435c7c <argp_parse@@Base+0x253c>  // b.none
  435c5c:	b.ls	435c44 <argp_parse@@Base+0x2504>  // b.plast
  435c60:	cmp	w0, #0x5e
  435c64:	b.ne	435cc4 <argp_parse@@Base+0x2584>  // b.any
  435c68:	mov	w0, #0x1                   	// #1
  435c6c:	str	w0, [sp, #108]
  435c70:	b	435c50 <argp_parse@@Base+0x2510>
  435c74:	cmp	w0, #0x2d
  435c78:	b.ne	435c84 <argp_parse@@Base+0x2544>  // b.any
  435c7c:	str	w0, [sp, #156]
  435c80:	b	435c50 <argp_parse@@Base+0x2510>
  435c84:	mov	w22, #0xffffffff            	// #-1
  435c88:	ldrb	w28, [x26]
  435c8c:	cmp	w28, #0x45
  435c90:	b.eq	435d3c <argp_parse@@Base+0x25fc>  // b.none
  435c94:	cmp	w28, #0x4f
  435c98:	b.eq	435d3c <argp_parse@@Base+0x25fc>  // b.none
  435c9c:	ldrb	w4, [x26]
  435ca0:	mov	w1, w4
  435ca4:	cmp	w4, #0x7a
  435ca8:	b.hi	437048 <argp_parse@@Base+0x3908>  // b.pmore
  435cac:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  435cb0:	add	x0, x0, #0x41c
  435cb4:	ldrh	w0, [x0, w4, uxtw #1]
  435cb8:	adr	x2, 435cc4 <argp_parse@@Base+0x2584>
  435cbc:	add	x0, x2, w0, sxth #2
  435cc0:	br	x0
  435cc4:	cmp	w0, #0x5f
  435cc8:	b.eq	435c7c <argp_parse@@Base+0x253c>  // b.none
  435ccc:	sub	w0, w0, #0x30
  435cd0:	cmp	w0, #0x9
  435cd4:	b.hi	435d34 <argp_parse@@Base+0x25f4>  // b.pmore
  435cd8:	mov	w22, #0x0                   	// #0
  435cdc:	mov	w1, #0xcccc                	// #52428
  435ce0:	movk	w1, #0xccc, lsl #16
  435ce4:	mov	w2, #0x7fffffff            	// #2147483647
  435ce8:	b	435d14 <argp_parse@@Base+0x25d4>
  435cec:	ldrb	w0, [x26]
  435cf0:	cmp	w0, #0x37
  435cf4:	b.ls	435d20 <argp_parse@@Base+0x25e0>  // b.plast
  435cf8:	mov	w22, w2
  435cfc:	b	435d04 <argp_parse@@Base+0x25c4>
  435d00:	mov	w22, w2
  435d04:	ldrb	w0, [x26, #1]!
  435d08:	sub	w0, w0, #0x30
  435d0c:	cmp	w0, #0x9
  435d10:	b.hi	435c88 <argp_parse@@Base+0x2548>  // b.pmore
  435d14:	cmp	w22, w1
  435d18:	b.gt	435d00 <argp_parse@@Base+0x25c0>
  435d1c:	b.eq	435cec <argp_parse@@Base+0x25ac>  // b.none
  435d20:	add	w22, w22, w22, lsl #2
  435d24:	ldrb	w0, [x26]
  435d28:	sub	w0, w0, #0x30
  435d2c:	add	w22, w0, w22, lsl #1
  435d30:	b	435d04 <argp_parse@@Base+0x25c4>
  435d34:	mov	w22, #0xffffffff            	// #-1
  435d38:	b	435c88 <argp_parse@@Base+0x2548>
  435d3c:	mov	w3, w28
  435d40:	add	x25, x26, #0x1
  435d44:	ldrb	w4, [x26, #1]
  435d48:	mov	w1, w4
  435d4c:	cmp	w4, #0x7a
  435d50:	b.hi	437044 <argp_parse@@Base+0x3904>  // b.pmore
  435d54:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  435d58:	add	x0, x0, #0x514
  435d5c:	ldrh	w0, [x0, w4, uxtw #1]
  435d60:	adr	x2, 435d6c <argp_parse@@Base+0x262c>
  435d64:	add	x0, x2, w0, sxth #2
  435d68:	br	x0
  435d6c:	mov	x25, x26
  435d70:	mov	w28, #0x0                   	// #0
  435d74:	str	wzr, [sp, #160]
  435d78:	ldr	w0, [sp, #112]
  435d7c:	cmp	w0, #0x0
  435d80:	ldr	w1, [sp, #160]
  435d84:	csel	w1, w1, w0, eq  // eq = none
  435d88:	str	w1, [sp, #160]
  435d8c:	mov	w1, #0x70                  	// #112
  435d90:	ldr	w0, [sp, #108]
  435d94:	csel	w0, w0, wzr, eq  // eq = none
  435d98:	str	w0, [sp, #108]
  435d9c:	mov	w0, #0x20                  	// #32
  435da0:	strb	w0, [sp, #200]
  435da4:	mov	w0, #0x25                  	// #37
  435da8:	strb	w0, [sp, #201]
  435dac:	add	x0, sp, #0xca
  435db0:	cbz	w28, 4362ac <argp_parse@@Base+0x2b6c>
  435db4:	mov	w3, w28
  435db8:	mov	w28, #0x0                   	// #0
  435dbc:	b	4362a4 <argp_parse@@Base+0x2b64>
  435dc0:	mov	x26, x25
  435dc4:	b	435dcc <argp_parse@@Base+0x268c>
  435dc8:	mov	w3, #0x0                   	// #0
  435dcc:	add	x25, x26, #0x1
  435dd0:	ldrb	w0, [x26, #1]
  435dd4:	cmp	w0, #0x3a
  435dd8:	b.eq	436fa8 <argp_parse@@Base+0x3868>  // b.none
  435ddc:	mov	x7, #0x1                   	// #1
  435de0:	cmp	w0, #0x7a
  435de4:	b.ne	437068 <argp_parse@@Base+0x3928>  // b.any
  435de8:	ldr	w0, [x21, #32]
  435dec:	tbnz	w0, #31, 435bec <argp_parse@@Base+0x24ac>
  435df0:	ldr	x6, [x21, #40]
  435df4:	mov	w5, #0x1                   	// #1
  435df8:	tbnz	w6, #31, 435e10 <argp_parse@@Base+0x26d0>
  435dfc:	mov	w5, #0x0                   	// #0
  435e00:	cbnz	w6, 435e10 <argp_parse@@Base+0x26d0>
  435e04:	ldrb	w0, [x24]
  435e08:	cmp	w0, #0x2d
  435e0c:	cset	w5, eq  // eq = none
  435e10:	mov	w0, #0xb3c5                	// #46021
  435e14:	movk	w0, #0x91a2, lsl #16
  435e18:	smull	x2, w6, w0
  435e1c:	lsr	x2, x2, #32
  435e20:	add	w2, w2, w6
  435e24:	asr	w2, w2, #11
  435e28:	asr	w8, w6, #31
  435e2c:	sub	w2, w2, w8
  435e30:	mov	w4, #0x8889                	// #34953
  435e34:	movk	w4, #0x8888, lsl #16
  435e38:	smull	x0, w6, w4
  435e3c:	lsr	x0, x0, #32
  435e40:	add	w0, w0, w6
  435e44:	asr	w0, w0, #5
  435e48:	sub	w0, w0, w8
  435e4c:	smull	x4, w0, w4
  435e50:	lsr	x4, x4, #32
  435e54:	add	w4, w0, w4
  435e58:	asr	w4, w4, #5
  435e5c:	sub	w8, w4, w0, asr #31
  435e60:	lsl	w4, w8, #4
  435e64:	sub	w4, w4, w8
  435e68:	sub	w8, w0, w4, lsl #2
  435e6c:	lsl	w4, w0, #4
  435e70:	sub	w0, w4, w0
  435e74:	sub	w0, w6, w0, lsl #2
  435e78:	cmp	x7, #0x2
  435e7c:	b.eq	437014 <argp_parse@@Base+0x38d4>  // b.none
  435e80:	b.hi	436fdc <argp_parse@@Base+0x389c>  // b.pmore
  435e84:	cbz	x7, 436ffc <argp_parse@@Base+0x38bc>
  435e88:	mov	w0, #0x64                  	// #100
  435e8c:	madd	w2, w2, w0, w8
  435e90:	mov	w8, #0x4                   	// #4
  435e94:	mov	w7, #0x1                   	// #1
  435e98:	mov	w28, #0x6                   	// #6
  435e9c:	b	436280 <argp_parse@@Base+0x2b40>
  435ea0:	cbnz	w28, 437124 <argp_parse@@Base+0x39e4>
  435ea4:	cmp	w22, #0x0
  435ea8:	csel	w0, w22, wzr, ge  // ge = tcont
  435eac:	sxtw	x0, w0
  435eb0:	cmp	x0, #0x0
  435eb4:	csinc	x28, x0, xzr, ne  // ne = any
  435eb8:	mvn	x1, x19
  435ebc:	cmp	x1, x28
  435ec0:	b.ls	435c08 <argp_parse@@Base+0x24c8>  // b.plast
  435ec4:	cbz	x20, 435f10 <argp_parse@@Base+0x27d0>
  435ec8:	cmp	x0, #0x1
  435ecc:	b.ls	435f04 <argp_parse@@Base+0x27c4>  // b.plast
  435ed0:	sxtw	x22, w22
  435ed4:	sub	x26, x22, #0x1
  435ed8:	ldr	w0, [sp, #156]
  435edc:	cmp	w0, #0x30
  435ee0:	b.eq	435f20 <argp_parse@@Base+0x27e0>  // b.none
  435ee4:	mov	x22, #0x0                   	// #0
  435ee8:	cbz	x26, 435f04 <argp_parse@@Base+0x27c4>
  435eec:	mov	x1, x20
  435ef0:	mov	w0, #0x20                  	// #32
  435ef4:	bl	404170 <fputc@plt>
  435ef8:	add	x22, x22, #0x1
  435efc:	cmp	x26, x22
  435f00:	b.ne	435eec <argp_parse@@Base+0x27ac>  // b.any
  435f04:	mov	x1, x20
  435f08:	ldrb	w0, [x25]
  435f0c:	bl	404170 <fputc@plt>
  435f10:	add	x19, x19, x28
  435f14:	b	435bec <argp_parse@@Base+0x24ac>
  435f18:	mov	x25, x26
  435f1c:	b	435ea4 <argp_parse@@Base+0x2764>
  435f20:	cbz	x26, 435f04 <argp_parse@@Base+0x27c4>
  435f24:	mov	x22, #0x0                   	// #0
  435f28:	mov	x1, x20
  435f2c:	mov	w0, #0x30                  	// #48
  435f30:	bl	404170 <fputc@plt>
  435f34:	add	x22, x22, #0x1
  435f38:	cmp	x26, x22
  435f3c:	b.ne	435f28 <argp_parse@@Base+0x27e8>  // b.any
  435f40:	b	435f04 <argp_parse@@Base+0x27c4>
  435f44:	mov	x25, x26
  435f48:	mov	w3, #0x0                   	// #0
  435f4c:	cbnz	w3, 43706c <argp_parse@@Base+0x392c>
  435f50:	ldr	w0, [sp, #112]
  435f54:	cmp	w0, #0x0
  435f58:	ldr	w1, [sp, #108]
  435f5c:	csel	w0, w1, w0, eq  // eq = none
  435f60:	str	w0, [sp, #108]
  435f64:	mov	w1, #0x61                  	// #97
  435f68:	mov	w0, #0x20                  	// #32
  435f6c:	strb	w0, [sp, #200]
  435f70:	mov	w0, #0x25                  	// #37
  435f74:	strb	w0, [sp, #201]
  435f78:	str	wzr, [sp, #160]
  435f7c:	mov	w28, #0x0                   	// #0
  435f80:	add	x0, sp, #0xca
  435f84:	b	4362ac <argp_parse@@Base+0x2b6c>
  435f88:	mov	x25, x26
  435f8c:	mov	w3, #0x0                   	// #0
  435f90:	cbnz	w3, 43706c <argp_parse@@Base+0x392c>
  435f94:	ldr	w0, [sp, #112]
  435f98:	cmp	w0, #0x0
  435f9c:	ldr	w1, [sp, #108]
  435fa0:	csel	w0, w1, w0, eq  // eq = none
  435fa4:	str	w0, [sp, #108]
  435fa8:	mov	w1, #0x41                  	// #65
  435fac:	b	435f68 <argp_parse@@Base+0x2828>
  435fb0:	mov	x25, x26
  435fb4:	mov	w28, #0x0                   	// #0
  435fb8:	ldr	w0, [sp, #112]
  435fbc:	cmp	w0, #0x0
  435fc0:	ldr	w2, [sp, #108]
  435fc4:	csel	w0, w2, w0, eq  // eq = none
  435fc8:	str	w0, [sp, #108]
  435fcc:	cmp	w28, #0x45
  435fd0:	b.eq	437060 <argp_parse@@Base+0x3920>  // b.none
  435fd4:	str	wzr, [sp, #160]
  435fd8:	b	435d9c <argp_parse@@Base+0x265c>
  435fdc:	mov	x25, x26
  435fe0:	mov	w28, #0x0                   	// #0
  435fe4:	cmp	w28, #0x45
  435fe8:	b.eq	43706c <argp_parse@@Base+0x392c>  // b.none
  435fec:	ldr	w0, [sp, #112]
  435ff0:	cmp	w0, #0x0
  435ff4:	ldr	w1, [sp, #108]
  435ff8:	csel	w0, w1, w0, eq  // eq = none
  435ffc:	str	w0, [sp, #108]
  436000:	mov	w1, #0x42                  	// #66
  436004:	str	wzr, [sp, #160]
  436008:	b	435d9c <argp_parse@@Base+0x265c>
  43600c:	mov	x25, x26
  436010:	mov	w28, #0x0                   	// #0
  436014:	cmp	w28, #0x4f
  436018:	b.eq	43706c <argp_parse@@Base+0x392c>  // b.none
  43601c:	mov	w1, #0x63                  	// #99
  436020:	str	wzr, [sp, #160]
  436024:	b	435d9c <argp_parse@@Base+0x265c>
  436028:	mov	x25, x26
  43602c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  436030:	add	x0, x0, #0x3e8
  436034:	str	x0, [sp, #112]
  436038:	ldr	w6, [sp, #152]
  43603c:	ldr	x5, [sp, #128]
  436040:	ldr	x4, [sp, #136]
  436044:	ldrb	w3, [sp, #108]
  436048:	mov	x2, x21
  43604c:	ldr	x1, [sp, #112]
  436050:	mov	x0, #0x0                   	// #0
  436054:	bl	435b48 <argp_parse@@Base+0x2408>
  436058:	cmp	w22, #0x0
  43605c:	csel	w1, w22, wzr, ge  // ge = tcont
  436060:	sxtw	x1, w1
  436064:	cmp	x0, x1
  436068:	csel	x28, x0, x1, cs  // cs = hs, nlast
  43606c:	mvn	x2, x19
  436070:	cmp	x2, x28
  436074:	b.ls	435c08 <argp_parse@@Base+0x24c8>  // b.plast
  436078:	cbz	x20, 4360d8 <argp_parse@@Base+0x2998>
  43607c:	cmp	x0, x1
  436080:	b.cs	4360b8 <argp_parse@@Base+0x2978>  // b.hs, b.nlast
  436084:	sxtw	x22, w22
  436088:	sub	x26, x22, x0
  43608c:	ldr	w0, [sp, #156]
  436090:	cmp	w0, #0x30
  436094:	b.eq	436104 <argp_parse@@Base+0x29c4>  // b.none
  436098:	mov	x22, #0x0                   	// #0
  43609c:	cbz	x26, 4360b8 <argp_parse@@Base+0x2978>
  4360a0:	mov	x1, x20
  4360a4:	mov	w0, #0x20                  	// #32
  4360a8:	bl	404170 <fputc@plt>
  4360ac:	add	x22, x22, #0x1
  4360b0:	cmp	x26, x22
  4360b4:	b.ne	4360a0 <argp_parse@@Base+0x2960>  // b.any
  4360b8:	ldr	w6, [sp, #152]
  4360bc:	ldr	x5, [sp, #128]
  4360c0:	ldr	x4, [sp, #136]
  4360c4:	ldrb	w3, [sp, #108]
  4360c8:	mov	x2, x21
  4360cc:	ldr	x1, [sp, #112]
  4360d0:	mov	x0, x20
  4360d4:	bl	435b48 <argp_parse@@Base+0x2408>
  4360d8:	add	x19, x19, x28
  4360dc:	b	435bec <argp_parse@@Base+0x24ac>
  4360e0:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  4360e4:	add	x0, x0, #0x3f0
  4360e8:	str	x0, [sp, #112]
  4360ec:	b	436038 <argp_parse@@Base+0x28f8>
  4360f0:	mov	x25, x26
  4360f4:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  4360f8:	add	x0, x0, #0x3f0
  4360fc:	str	x0, [sp, #112]
  436100:	b	436038 <argp_parse@@Base+0x28f8>
  436104:	cbz	x26, 4360b8 <argp_parse@@Base+0x2978>
  436108:	mov	x22, #0x0                   	// #0
  43610c:	mov	x1, x20
  436110:	mov	w0, #0x30                  	// #48
  436114:	bl	404170 <fputc@plt>
  436118:	add	x22, x22, #0x1
  43611c:	cmp	x26, x22
  436120:	b.ne	43610c <argp_parse@@Base+0x29cc>  // b.any
  436124:	b	4360b8 <argp_parse@@Base+0x2978>
  436128:	str	wzr, [sp, #160]
  43612c:	b	435d9c <argp_parse@@Base+0x265c>
  436130:	mov	x25, x26
  436134:	mov	w28, #0x0                   	// #0
  436138:	str	wzr, [sp, #160]
  43613c:	b	435d9c <argp_parse@@Base+0x265c>
  436140:	cbz	x28, 43633c <argp_parse@@Base+0x2bfc>
  436144:	mov	x22, #0x0                   	// #0
  436148:	mov	x1, x20
  43614c:	mov	w0, #0x30                  	// #48
  436150:	bl	404170 <fputc@plt>
  436154:	add	x22, x22, #0x1
  436158:	cmp	x28, x22
  43615c:	b.ne	436148 <argp_parse@@Base+0x2a08>  // b.any
  436160:	b	43633c <argp_parse@@Base+0x2bfc>
  436164:	mov	x2, x26
  436168:	ldr	x1, [sp, #144]
  43616c:	mov	x0, x20
  436170:	bl	435a90 <argp_parse@@Base+0x2350>
  436174:	b	43635c <argp_parse@@Base+0x2c1c>
  436178:	mov	x3, x20
  43617c:	mov	x2, #0x1                   	// #1
  436180:	mov	x1, x26
  436184:	ldr	x0, [sp, #144]
  436188:	bl	4048b0 <fwrite@plt>
  43618c:	b	43635c <argp_parse@@Base+0x2c1c>
  436190:	mov	x25, x26
  436194:	mov	w3, #0x0                   	// #0
  436198:	cmp	w3, #0x45
  43619c:	b.eq	43717c <argp_parse@@Base+0x3a3c>  // b.none
  4361a0:	ldr	w4, [x21, #20]
  4361a4:	mov	w0, #0x851f                	// #34079
  4361a8:	movk	w0, #0x51eb, lsl #16
  4361ac:	smull	x0, w4, w0
  4361b0:	asr	x0, x0, #37
  4361b4:	sub	w0, w0, w4, asr #31
  4361b8:	add	w2, w0, #0x13
  4361bc:	mov	w5, #0x64                  	// #100
  4361c0:	msub	w0, w0, w5, w4
  4361c4:	cmp	w0, #0x0
  4361c8:	ccmp	w2, #0x0, #0x4, lt  // lt = tstop
  4361cc:	cset	w0, gt
  4361d0:	cmn	w4, #0x76c
  4361d4:	cset	w5, lt  // lt = tstop
  4361d8:	sub	w2, w2, w0
  4361dc:	mov	w8, #0x0                   	// #0
  4361e0:	mov	w7, #0x0                   	// #0
  4361e4:	mov	w28, #0x2                   	// #2
  4361e8:	b	436280 <argp_parse@@Base+0x2b40>
  4361ec:	mov	x25, x26
  4361f0:	mov	w28, #0x0                   	// #0
  4361f4:	cmp	w28, #0x4f
  4361f8:	b.eq	43706c <argp_parse@@Base+0x392c>  // b.none
  4361fc:	mov	w1, #0x78                  	// #120
  436200:	str	wzr, [sp, #160]
  436204:	b	435d9c <argp_parse@@Base+0x265c>
  436208:	mov	x25, x26
  43620c:	mov	w3, #0x0                   	// #0
  436210:	cbnz	w3, 43706c <argp_parse@@Base+0x392c>
  436214:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  436218:	add	x0, x0, #0x410
  43621c:	str	x0, [sp, #112]
  436220:	b	436038 <argp_parse@@Base+0x28f8>
  436224:	mov	x25, x26
  436228:	mov	w3, #0x0                   	// #0
  43622c:	cmp	w3, #0x45
  436230:	b.eq	43706c <argp_parse@@Base+0x392c>  // b.none
  436234:	ldr	w2, [x21, #12]
  436238:	mov	w28, #0x2                   	// #2
  43623c:	b	436274 <argp_parse@@Base+0x2b34>
  436240:	mov	x25, x26
  436244:	mov	w3, #0x0                   	// #0
  436248:	cmp	w3, #0x45
  43624c:	b.eq	43706c <argp_parse@@Base+0x392c>  // b.none
  436250:	ldr	w2, [x21, #12]
  436254:	ldr	w4, [sp, #156]
  436258:	cmp	w4, #0x30
  43625c:	mov	w28, #0x2                   	// #2
  436260:	mov	w0, #0x2d                  	// #45
  436264:	ccmp	w4, w0, #0x4, ne  // ne = any
  436268:	mov	w0, #0x5f                  	// #95
  43626c:	csel	w0, w4, w0, eq  // eq = none
  436270:	str	w0, [sp, #156]
  436274:	lsr	w5, w2, #31
  436278:	mov	w8, #0x0                   	// #0
  43627c:	mov	w7, #0x0                   	// #0
  436280:	cmp	w3, #0x4f
  436284:	eor	w0, w5, #0x1
  436288:	csel	w0, w0, wzr, eq  // eq = none
  43628c:	cbz	w0, 436e30 <argp_parse@@Base+0x36f0>
  436290:	mov	w0, #0x20                  	// #32
  436294:	strb	w0, [sp, #200]
  436298:	mov	w0, #0x25                  	// #37
  43629c:	strb	w0, [sp, #201]
  4362a0:	str	wzr, [sp, #160]
  4362a4:	strb	w3, [sp, #202]
  4362a8:	add	x0, sp, #0xcb
  4362ac:	strb	w1, [x0]
  4362b0:	strb	wzr, [x0, #1]
  4362b4:	mov	x3, x21
  4362b8:	add	x2, sp, #0xc8
  4362bc:	mov	x1, #0x400                 	// #1024
  4362c0:	add	x0, sp, #0xe0
  4362c4:	bl	404150 <strftime@plt>
  4362c8:	cbz	x0, 435bec <argp_parse@@Base+0x24ac>
  4362cc:	sub	x26, x0, #0x1
  4362d0:	cmp	w22, #0x0
  4362d4:	csel	w0, w22, wzr, ge  // ge = tcont
  4362d8:	sxtw	x0, w0
  4362dc:	cmp	x26, x0
  4362e0:	csel	x1, x26, x0, cs  // cs = hs, nlast
  4362e4:	mov	x2, x1
  4362e8:	str	x1, [sp, #112]
  4362ec:	mvn	x1, x19
  4362f0:	cmp	x1, x2
  4362f4:	b.ls	435c08 <argp_parse@@Base+0x24c8>  // b.plast
  4362f8:	cbz	x20, 43635c <argp_parse@@Base+0x2c1c>
  4362fc:	cmp	w28, #0x0
  436300:	ccmp	x26, x0, #0x2, eq  // eq = none
  436304:	b.cs	43633c <argp_parse@@Base+0x2bfc>  // b.hs, b.nlast
  436308:	sxtw	x22, w22
  43630c:	sub	x28, x22, x26
  436310:	ldr	w0, [sp, #156]
  436314:	cmp	w0, #0x30
  436318:	b.eq	436140 <argp_parse@@Base+0x2a00>  // b.none
  43631c:	mov	x22, #0x0                   	// #0
  436320:	cbz	x28, 43633c <argp_parse@@Base+0x2bfc>
  436324:	mov	x1, x20
  436328:	mov	w0, #0x20                  	// #32
  43632c:	bl	404170 <fputc@plt>
  436330:	add	x22, x22, #0x1
  436334:	cmp	x28, x22
  436338:	b.ne	436324 <argp_parse@@Base+0x2be4>  // b.any
  43633c:	ldr	w0, [sp, #160]
  436340:	cbnz	w0, 436164 <argp_parse@@Base+0x2a24>
  436344:	ldr	w0, [sp, #108]
  436348:	cbz	w0, 436178 <argp_parse@@Base+0x2a38>
  43634c:	mov	x2, x26
  436350:	ldr	x1, [sp, #144]
  436354:	mov	x0, x20
  436358:	bl	435aec <argp_parse@@Base+0x23ac>
  43635c:	ldr	x0, [sp, #112]
  436360:	add	x19, x19, x0
  436364:	b	435bec <argp_parse@@Base+0x24ac>
  436368:	ldr	w2, [sp, #152]
  43636c:	mov	w28, w22
  436370:	b	436274 <argp_parse@@Base+0x2b34>
  436374:	asr	w8, w8, #1
  436378:	sub	x26, x3, #0x1
  43637c:	umull	x1, w2, w4
  436380:	lsr	x1, x1, #35
  436384:	add	w0, w1, w1, lsl #2
  436388:	sub	w0, w2, w0, lsl #1
  43638c:	add	w0, w0, #0x30
  436390:	sturb	w0, [x3, #-1]
  436394:	cmp	w8, #0x0
  436398:	ccmp	w2, #0x9, #0x2, eq  // eq = none
  43639c:	b.ls	4363b8 <argp_parse@@Base+0x2c78>  // b.plast
  4363a0:	mov	w2, w1
  4363a4:	mov	x3, x26
  4363a8:	tbz	w8, #0, 436374 <argp_parse@@Base+0x2c34>
  4363ac:	sub	x3, x26, #0x1
  4363b0:	sturb	w6, [x26, #-1]
  4363b4:	b	436374 <argp_parse@@Base+0x2c34>
  4363b8:	cmp	w22, w28
  4363bc:	csel	w0, w22, w28, ge  // ge = tcont
  4363c0:	str	w0, [sp, #112]
  4363c4:	cbnz	w5, 4371a0 <argp_parse@@Base+0x3a60>
  4363c8:	mov	w0, #0x2b                  	// #43
  4363cc:	str	w0, [sp, #160]
  4363d0:	cbnz	w7, 4371a8 <argp_parse@@Base+0x3a68>
  4363d4:	ldr	w0, [sp, #156]
  4363d8:	cmp	w0, #0x2d
  4363dc:	b.eq	437288 <argp_parse@@Base+0x3b48>  // b.none
  4363e0:	ldr	x0, [sp, #120]
  4363e4:	sub	x0, x0, x26
  4363e8:	ldr	w1, [sp, #112]
  4363ec:	sub	w0, w1, w0
  4363f0:	str	w0, [sp, #168]
  4363f4:	cmp	w0, #0x0
  4363f8:	b.le	437288 <argp_parse@@Base+0x3b48>
  4363fc:	str	wzr, [sp, #160]
  436400:	mov	w28, #0x0                   	// #0
  436404:	b	4371e0 <argp_parse@@Base+0x3aa0>
  436408:	cmp	w22, #0x0
  43640c:	csel	w0, w22, wzr, ge  // ge = tcont
  436410:	sxtw	x0, w0
  436414:	cmp	x0, #0x0
  436418:	csinc	x1, x0, xzr, ne  // ne = any
  43641c:	mov	x2, x1
  436420:	str	x1, [sp, #168]
  436424:	mvn	x1, x19
  436428:	cmp	x1, x2
  43642c:	b.ls	435c08 <argp_parse@@Base+0x24c8>  // b.plast
  436430:	cbz	x20, 436480 <argp_parse@@Base+0x2d40>
  436434:	ldr	w1, [sp, #112]
  436438:	cmp	w1, #0x0
  43643c:	ccmp	x0, #0x1, #0x0, eq  // eq = none
  436440:	b.ls	436474 <argp_parse@@Base+0x2d34>  // b.plast
  436444:	sxtw	x0, w22
  436448:	subs	x0, x0, #0x1
  43644c:	str	x0, [sp, #176]
  436450:	b.eq	436474 <argp_parse@@Base+0x2d34>  // b.none
  436454:	mov	x28, #0x0                   	// #0
  436458:	mov	x1, x20
  43645c:	mov	w0, #0x20                  	// #32
  436460:	bl	404170 <fputc@plt>
  436464:	add	x28, x28, #0x1
  436468:	ldr	x0, [sp, #176]
  43646c:	cmp	x0, x28
  436470:	b.ne	436458 <argp_parse@@Base+0x2d18>  // b.any
  436474:	mov	x1, x20
  436478:	ldr	w0, [sp, #160]
  43647c:	bl	404170 <fputc@plt>
  436480:	ldr	x0, [sp, #168]
  436484:	add	x19, x19, x0
  436488:	b	437288 <argp_parse@@Base+0x3b48>
  43648c:	ldr	w1, [sp, #168]
  436490:	sxtw	x0, w1
  436494:	str	x0, [sp, #184]
  436498:	mvn	x0, x19
  43649c:	cmp	x0, w1, sxtw
  4364a0:	b.ls	435c08 <argp_parse@@Base+0x24c8>  // b.plast
  4364a4:	cbnz	x20, 436548 <argp_parse@@Base+0x2e08>
  4364a8:	ldr	x0, [sp, #184]
  4364ac:	add	x19, x19, x0
  4364b0:	ldr	w1, [sp, #168]
  4364b4:	sub	w0, w22, w1
  4364b8:	cmp	w22, w1
  4364bc:	csel	w22, w0, wzr, gt
  4364c0:	cbz	w28, 437288 <argp_parse@@Base+0x3b48>
  4364c4:	cmp	w22, #0x0
  4364c8:	csel	w0, w22, wzr, ge  // ge = tcont
  4364cc:	sxtw	x0, w0
  4364d0:	cmp	x0, #0x0
  4364d4:	csinc	x1, x0, xzr, ne  // ne = any
  4364d8:	mov	x2, x1
  4364dc:	str	x1, [sp, #176]
  4364e0:	mvn	x1, x19
  4364e4:	cmp	x1, x2
  4364e8:	b.ls	435c08 <argp_parse@@Base+0x24c8>  // b.plast
  4364ec:	cbz	x20, 43653c <argp_parse@@Base+0x2dfc>
  4364f0:	ldr	w1, [sp, #112]
  4364f4:	cmp	w1, #0x0
  4364f8:	ccmp	x0, #0x1, #0x0, eq  // eq = none
  4364fc:	b.ls	436530 <argp_parse@@Base+0x2df0>  // b.plast
  436500:	sxtw	x28, w22
  436504:	subs	x0, x28, #0x1
  436508:	str	x0, [sp, #168]
  43650c:	b.eq	436530 <argp_parse@@Base+0x2df0>  // b.none
  436510:	mov	x28, #0x0                   	// #0
  436514:	mov	x1, x20
  436518:	mov	w0, #0x20                  	// #32
  43651c:	bl	404170 <fputc@plt>
  436520:	add	x28, x28, #0x1
  436524:	ldr	x0, [sp, #168]
  436528:	cmp	x0, x28
  43652c:	b.ne	436514 <argp_parse@@Base+0x2dd4>  // b.any
  436530:	mov	x1, x20
  436534:	ldr	w0, [sp, #160]
  436538:	bl	404170 <fputc@plt>
  43653c:	ldr	x0, [sp, #176]
  436540:	add	x19, x19, x0
  436544:	b	437288 <argp_parse@@Base+0x3b48>
  436548:	str	xzr, [sp, #176]
  43654c:	mov	x1, x20
  436550:	mov	w0, #0x20                  	// #32
  436554:	bl	404170 <fputc@plt>
  436558:	ldr	x0, [sp, #176]
  43655c:	add	x0, x0, #0x1
  436560:	str	x0, [sp, #176]
  436564:	ldr	x1, [sp, #184]
  436568:	cmp	x1, x0
  43656c:	b.ne	43654c <argp_parse@@Base+0x2e0c>  // b.any
  436570:	b	4364a8 <argp_parse@@Base+0x2d68>
  436574:	cbz	x28, 437264 <argp_parse@@Base+0x3b24>
  436578:	mov	x22, #0x0                   	// #0
  43657c:	mov	x1, x20
  436580:	mov	w0, #0x30                  	// #48
  436584:	bl	404170 <fputc@plt>
  436588:	add	x22, x22, #0x1
  43658c:	cmp	x28, x22
  436590:	b.ne	43657c <argp_parse@@Base+0x2e3c>  // b.any
  436594:	b	437264 <argp_parse@@Base+0x3b24>
  436598:	ldrsw	x22, [sp, #168]
  43659c:	mov	x28, #0x0                   	// #0
  4365a0:	mov	x1, x20
  4365a4:	mov	w0, #0x30                  	// #48
  4365a8:	bl	404170 <fputc@plt>
  4365ac:	add	x28, x28, #0x1
  4365b0:	cmp	x28, x22
  4365b4:	b.ne	4365a0 <argp_parse@@Base+0x2e60>  // b.any
  4365b8:	b	43727c <argp_parse@@Base+0x3b3c>
  4365bc:	cmp	w22, #0x0
  4365c0:	csel	w0, w22, wzr, ge  // ge = tcont
  4365c4:	sxtw	x0, w0
  4365c8:	cmp	x0, #0x0
  4365cc:	csinc	x1, x0, xzr, ne  // ne = any
  4365d0:	mov	x2, x1
  4365d4:	str	x1, [sp, #176]
  4365d8:	mvn	x1, x19
  4365dc:	cmp	x1, x2
  4365e0:	b.ls	435c08 <argp_parse@@Base+0x24c8>  // b.plast
  4365e4:	cbz	x20, 436640 <argp_parse@@Base+0x2f00>
  4365e8:	ldr	w1, [sp, #112]
  4365ec:	cmp	w1, #0x0
  4365f0:	ccmp	x0, #0x1, #0x0, eq  // eq = none
  4365f4:	b.ls	436634 <argp_parse@@Base+0x2ef4>  // b.plast
  4365f8:	sxtw	x0, w22
  4365fc:	sub	x0, x0, #0x1
  436600:	str	x0, [sp, #168]
  436604:	ldr	w1, [sp, #156]
  436608:	cmp	w1, #0x30
  43660c:	b.eq	43664c <argp_parse@@Base+0x2f0c>  // b.none
  436610:	mov	x28, #0x0                   	// #0
  436614:	cbz	x0, 436634 <argp_parse@@Base+0x2ef4>
  436618:	mov	x1, x20
  43661c:	mov	w0, #0x20                  	// #32
  436620:	bl	404170 <fputc@plt>
  436624:	add	x28, x28, #0x1
  436628:	ldr	x0, [sp, #168]
  43662c:	cmp	x0, x28
  436630:	b.ne	436618 <argp_parse@@Base+0x2ed8>  // b.any
  436634:	mov	x1, x20
  436638:	ldr	w0, [sp, #160]
  43663c:	bl	404170 <fputc@plt>
  436640:	ldr	x0, [sp, #176]
  436644:	add	x19, x19, x0
  436648:	b	437288 <argp_parse@@Base+0x3b48>
  43664c:	ldr	x0, [sp, #168]
  436650:	cbz	x0, 436634 <argp_parse@@Base+0x2ef4>
  436654:	mov	x28, #0x0                   	// #0
  436658:	mov	x1, x20
  43665c:	mov	w0, #0x30                  	// #48
  436660:	bl	404170 <fputc@plt>
  436664:	add	x28, x28, #0x1
  436668:	ldr	x0, [sp, #168]
  43666c:	cmp	x0, x28
  436670:	b.ne	436658 <argp_parse@@Base+0x2f18>  // b.any
  436674:	b	436634 <argp_parse@@Base+0x2ef4>
  436678:	ldr	x0, [sp, #112]
  43667c:	cbz	x0, 437308 <argp_parse@@Base+0x3bc8>
  436680:	mov	x22, #0x0                   	// #0
  436684:	mov	x1, x20
  436688:	mov	w0, #0x30                  	// #48
  43668c:	bl	404170 <fputc@plt>
  436690:	add	x22, x22, #0x1
  436694:	ldr	x0, [sp, #112]
  436698:	cmp	x0, x22
  43669c:	b.ne	436684 <argp_parse@@Base+0x2f44>  // b.any
  4366a0:	b	437308 <argp_parse@@Base+0x3bc8>
  4366a4:	mov	x3, x20
  4366a8:	mov	x2, #0x1                   	// #1
  4366ac:	mov	x1, x28
  4366b0:	mov	x0, x26
  4366b4:	bl	4048b0 <fwrite@plt>
  4366b8:	b	437320 <argp_parse@@Base+0x3be0>
  4366bc:	mov	x25, x26
  4366c0:	mov	w3, #0x0                   	// #0
  4366c4:	cbnz	w3, 43706c <argp_parse@@Base+0x392c>
  4366c8:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  4366cc:	add	x0, x0, #0x400
  4366d0:	str	x0, [sp, #112]
  4366d4:	b	436038 <argp_parse@@Base+0x28f8>
  4366d8:	mov	x25, x26
  4366dc:	mov	w3, #0x0                   	// #0
  4366e0:	cmp	w3, #0x45
  4366e4:	b.eq	43706c <argp_parse@@Base+0x392c>  // b.none
  4366e8:	ldr	w2, [x21, #8]
  4366ec:	mov	w28, #0x2                   	// #2
  4366f0:	b	436274 <argp_parse@@Base+0x2b34>
  4366f4:	mov	x25, x26
  4366f8:	mov	w3, #0x0                   	// #0
  4366fc:	cmp	w3, #0x45
  436700:	b.eq	43706c <argp_parse@@Base+0x392c>  // b.none
  436704:	mov	w2, w23
  436708:	mov	w28, #0x2                   	// #2
  43670c:	b	436274 <argp_parse@@Base+0x2b34>
  436710:	mov	x25, x26
  436714:	mov	w3, #0x0                   	// #0
  436718:	cmp	w3, #0x45
  43671c:	b.eq	43706c <argp_parse@@Base+0x392c>  // b.none
  436720:	ldr	w2, [x21, #8]
  436724:	b	436254 <argp_parse@@Base+0x2b14>
  436728:	mov	x25, x26
  43672c:	mov	w3, #0x0                   	// #0
  436730:	cmp	w3, #0x45
  436734:	b.eq	43706c <argp_parse@@Base+0x392c>  // b.none
  436738:	mov	w2, w23
  43673c:	b	436254 <argp_parse@@Base+0x2b14>
  436740:	mov	x25, x26
  436744:	mov	w3, #0x0                   	// #0
  436748:	cmp	w3, #0x45
  43674c:	b.eq	43706c <argp_parse@@Base+0x392c>  // b.none
  436750:	ldr	w2, [x21, #28]
  436754:	cmn	w2, #0x1
  436758:	cset	w5, lt  // lt = tstop
  43675c:	add	w2, w2, #0x1
  436760:	mov	w8, #0x0                   	// #0
  436764:	mov	w7, #0x0                   	// #0
  436768:	mov	w28, #0x3                   	// #3
  43676c:	b	436280 <argp_parse@@Base+0x2b40>
  436770:	mov	x25, x26
  436774:	mov	w3, #0x0                   	// #0
  436778:	cmp	w3, #0x45
  43677c:	b.eq	43706c <argp_parse@@Base+0x392c>  // b.none
  436780:	ldr	w2, [x21, #4]
  436784:	mov	w28, #0x2                   	// #2
  436788:	b	436274 <argp_parse@@Base+0x2b34>
  43678c:	mov	x25, x26
  436790:	mov	w3, #0x0                   	// #0
  436794:	cmp	w3, #0x45
  436798:	b.eq	43706c <argp_parse@@Base+0x392c>  // b.none
  43679c:	ldr	w2, [x21, #16]
  4367a0:	cmn	w2, #0x1
  4367a4:	cset	w5, lt  // lt = tstop
  4367a8:	add	w2, w2, #0x1
  4367ac:	mov	w8, #0x0                   	// #0
  4367b0:	mov	w7, #0x0                   	// #0
  4367b4:	mov	w28, #0x2                   	// #2
  4367b8:	b	436280 <argp_parse@@Base+0x2b40>
  4367bc:	mov	x25, x26
  4367c0:	mov	w3, #0x0                   	// #0
  4367c4:	cmp	w3, #0x45
  4367c8:	b.eq	43706c <argp_parse@@Base+0x392c>  // b.none
  4367cc:	cmn	w22, #0x1
  4367d0:	b.ne	4367e4 <argp_parse@@Base+0x30a4>  // b.any
  4367d4:	ldr	w2, [sp, #152]
  4367d8:	mov	w22, #0x9                   	// #9
  4367dc:	mov	w28, w22
  4367e0:	b	436274 <argp_parse@@Base+0x2b34>
  4367e4:	cmp	w22, #0x8
  4367e8:	b.gt	436368 <argp_parse@@Base+0x2c28>
  4367ec:	mov	w4, w22
  4367f0:	ldr	w2, [sp, #152]
  4367f4:	mov	w5, #0x6667                	// #26215
  4367f8:	movk	w5, #0x6666, lsl #16
  4367fc:	smull	x0, w2, w5
  436800:	asr	x0, x0, #34
  436804:	sub	w2, w0, w2, asr #31
  436808:	add	w4, w4, #0x1
  43680c:	cmp	w4, #0x9
  436810:	b.ne	4367fc <argp_parse@@Base+0x30bc>  // b.any
  436814:	mov	w28, w22
  436818:	b	436274 <argp_parse@@Base+0x2b34>
  43681c:	mov	x25, x26
  436820:	cmp	w22, #0x0
  436824:	csel	w0, w22, wzr, ge  // ge = tcont
  436828:	sxtw	x0, w0
  43682c:	cmp	x0, #0x0
  436830:	csinc	x28, x0, xzr, ne  // ne = any
  436834:	mvn	x1, x19
  436838:	cmp	x1, x28
  43683c:	b.ls	435c08 <argp_parse@@Base+0x24c8>  // b.plast
  436840:	cbz	x20, 43688c <argp_parse@@Base+0x314c>
  436844:	cmp	x0, #0x1
  436848:	b.ls	436880 <argp_parse@@Base+0x3140>  // b.plast
  43684c:	sxtw	x22, w22
  436850:	sub	x26, x22, #0x1
  436854:	ldr	w0, [sp, #156]
  436858:	cmp	w0, #0x30
  43685c:	b.eq	436894 <argp_parse@@Base+0x3154>  // b.none
  436860:	mov	x22, #0x0                   	// #0
  436864:	cbz	x26, 436880 <argp_parse@@Base+0x3140>
  436868:	mov	x1, x20
  43686c:	mov	w0, #0x20                  	// #32
  436870:	bl	404170 <fputc@plt>
  436874:	add	x22, x22, #0x1
  436878:	cmp	x26, x22
  43687c:	b.ne	436868 <argp_parse@@Base+0x3128>  // b.any
  436880:	mov	x1, x20
  436884:	mov	w0, #0xa                   	// #10
  436888:	bl	404170 <fputc@plt>
  43688c:	add	x19, x19, x28
  436890:	b	435bec <argp_parse@@Base+0x24ac>
  436894:	cbz	x26, 436880 <argp_parse@@Base+0x3140>
  436898:	mov	x22, #0x0                   	// #0
  43689c:	mov	x1, x20
  4368a0:	mov	w0, #0x30                  	// #48
  4368a4:	bl	404170 <fputc@plt>
  4368a8:	add	x22, x22, #0x1
  4368ac:	cmp	x26, x22
  4368b0:	b.ne	43689c <argp_parse@@Base+0x315c>  // b.any
  4368b4:	b	436880 <argp_parse@@Base+0x3140>
  4368b8:	mov	w0, #0x1                   	// #1
  4368bc:	str	w0, [sp, #160]
  4368c0:	b	435d78 <argp_parse@@Base+0x2638>
  4368c4:	mov	x25, x26
  4368c8:	mov	w28, #0x0                   	// #0
  4368cc:	mov	w0, #0x1                   	// #1
  4368d0:	str	w0, [sp, #160]
  4368d4:	b	435d78 <argp_parse@@Base+0x2638>
  4368d8:	mov	x25, x26
  4368dc:	mov	w3, #0x0                   	// #0
  4368e0:	ldr	w0, [x21, #16]
  4368e4:	mov	w1, #0x71                  	// #113
  4368e8:	mov	w28, #0x1                   	// #1
  4368ec:	cmp	w3, #0x4f
  4368f0:	b.eq	436290 <argp_parse@@Base+0x2b50>  // b.none
  4368f4:	mov	w2, #0xb                   	// #11
  4368f8:	mul	w2, w0, w2
  4368fc:	asr	w2, w2, #5
  436900:	add	w2, w2, w28
  436904:	mov	w8, #0x0                   	// #0
  436908:	mov	w7, #0x0                   	// #0
  43690c:	mov	w5, #0x0                   	// #0
  436910:	b	436e38 <argp_parse@@Base+0x36f8>
  436914:	mov	x25, x26
  436918:	mov	w3, #0x0                   	// #0
  43691c:	cmp	w3, #0x45
  436920:	b.eq	43706c <argp_parse@@Base+0x392c>  // b.none
  436924:	ldr	w2, [x21]
  436928:	mov	w28, #0x2                   	// #2
  43692c:	b	436274 <argp_parse@@Base+0x2b34>
  436930:	mov	x25, x26
  436934:	ldp	x0, x1, [x21]
  436938:	stp	x0, x1, [sp, #224]
  43693c:	ldp	x0, x1, [x21, #16]
  436940:	stp	x0, x1, [sp, #240]
  436944:	ldp	x0, x1, [x21, #32]
  436948:	stp	x0, x1, [sp, #256]
  43694c:	ldr	x0, [x21, #48]
  436950:	str	x0, [sp, #272]
  436954:	add	x1, sp, #0xe0
  436958:	ldr	x0, [sp, #128]
  43695c:	bl	44e11c <_obstack_memory_used@@Base+0xcf80>
  436960:	mov	x4, x0
  436964:	mov	x2, x0
  436968:	add	x26, sp, #0xdf
  43696c:	mov	x6, #0x6666666666666666    	// #7378697629483820646
  436970:	movk	x6, #0x6667
  436974:	mov	w5, #0x30                  	// #48
  436978:	smulh	x1, x2, x6
  43697c:	asr	x1, x1, #2
  436980:	asr	x3, x2, #63
  436984:	sub	x0, x1, x3
  436988:	add	x0, x0, x0, lsl #2
  43698c:	sub	x0, x2, x0, lsl #1
  436990:	sub	w2, w5, w0
  436994:	and	w2, w2, #0xff
  436998:	add	w0, w0, #0x30
  43699c:	and	w0, w0, #0xff
  4369a0:	cmp	x4, #0x0
  4369a4:	csel	w0, w0, w2, ge  // ge = tcont
  4369a8:	strb	w0, [x26, #-1]!
  4369ac:	subs	x2, x1, x3
  4369b0:	b.ne	436978 <argp_parse@@Base+0x3238>  // b.any
  4369b4:	cmp	w22, #0x0
  4369b8:	csinc	w0, w22, wzr, gt
  4369bc:	str	w0, [sp, #112]
  4369c0:	tbz	x4, #63, 4363d4 <argp_parse@@Base+0x2c94>
  4369c4:	mov	w0, #0x2d                  	// #45
  4369c8:	str	w0, [sp, #160]
  4369cc:	b	4371a8 <argp_parse@@Base+0x3a68>
  4369d0:	mov	x25, x26
  4369d4:	mov	w28, #0x0                   	// #0
  4369d8:	cmp	w28, #0x4f
  4369dc:	b.eq	43706c <argp_parse@@Base+0x392c>  // b.none
  4369e0:	mov	w1, #0x58                  	// #88
  4369e4:	str	wzr, [sp, #160]
  4369e8:	b	435d9c <argp_parse@@Base+0x265c>
  4369ec:	mov	x25, x26
  4369f0:	cmp	w22, #0x0
  4369f4:	csel	w0, w22, wzr, ge  // ge = tcont
  4369f8:	sxtw	x0, w0
  4369fc:	cmp	x0, #0x0
  436a00:	csinc	x28, x0, xzr, ne  // ne = any
  436a04:	mvn	x1, x19
  436a08:	cmp	x1, x28
  436a0c:	b.ls	435c08 <argp_parse@@Base+0x24c8>  // b.plast
  436a10:	cbz	x20, 436a5c <argp_parse@@Base+0x331c>
  436a14:	cmp	x0, #0x1
  436a18:	b.ls	436a50 <argp_parse@@Base+0x3310>  // b.plast
  436a1c:	sxtw	x22, w22
  436a20:	sub	x26, x22, #0x1
  436a24:	ldr	w0, [sp, #156]
  436a28:	cmp	w0, #0x30
  436a2c:	b.eq	436a64 <argp_parse@@Base+0x3324>  // b.none
  436a30:	mov	x22, #0x0                   	// #0
  436a34:	cbz	x26, 436a50 <argp_parse@@Base+0x3310>
  436a38:	mov	x1, x20
  436a3c:	mov	w0, #0x20                  	// #32
  436a40:	bl	404170 <fputc@plt>
  436a44:	add	x22, x22, #0x1
  436a48:	cmp	x26, x22
  436a4c:	b.ne	436a38 <argp_parse@@Base+0x32f8>  // b.any
  436a50:	mov	x1, x20
  436a54:	mov	w0, #0x9                   	// #9
  436a58:	bl	404170 <fputc@plt>
  436a5c:	add	x19, x19, x28
  436a60:	b	435bec <argp_parse@@Base+0x24ac>
  436a64:	cbz	x26, 436a50 <argp_parse@@Base+0x3310>
  436a68:	mov	x22, #0x0                   	// #0
  436a6c:	mov	x1, x20
  436a70:	mov	w0, #0x30                  	// #48
  436a74:	bl	404170 <fputc@plt>
  436a78:	add	x22, x22, #0x1
  436a7c:	cmp	x26, x22
  436a80:	b.ne	436a6c <argp_parse@@Base+0x332c>  // b.any
  436a84:	b	436a50 <argp_parse@@Base+0x3310>
  436a88:	mov	x25, x26
  436a8c:	mov	w3, #0x0                   	// #0
  436a90:	ldr	w0, [x21, #24]
  436a94:	add	w0, w0, #0x6
  436a98:	mov	w2, #0x2493                	// #9363
  436a9c:	movk	w2, #0x9249, lsl #16
  436aa0:	smull	x2, w0, w2
  436aa4:	lsr	x2, x2, #32
  436aa8:	add	w2, w0, w2
  436aac:	asr	w2, w2, #2
  436ab0:	sub	w2, w2, w0, asr #31
  436ab4:	lsl	w4, w2, #3
  436ab8:	sub	w2, w4, w2
  436abc:	sub	w2, w0, w2
  436ac0:	add	w2, w2, #0x1
  436ac4:	mov	w28, #0x1                   	// #1
  436ac8:	b	436274 <argp_parse@@Base+0x2b34>
  436acc:	mov	x25, x26
  436ad0:	mov	w3, #0x0                   	// #0
  436ad4:	cmp	w3, #0x45
  436ad8:	b.eq	43706c <argp_parse@@Base+0x392c>  // b.none
  436adc:	ldr	w2, [x21, #28]
  436ae0:	ldr	w0, [x21, #24]
  436ae4:	sub	w2, w2, w0
  436ae8:	add	w2, w2, #0x7
  436aec:	mov	w0, #0x2493                	// #9363
  436af0:	movk	w0, #0x9249, lsl #16
  436af4:	smull	x0, w2, w0
  436af8:	lsr	x0, x0, #32
  436afc:	add	w0, w2, w0
  436b00:	asr	w0, w0, #2
  436b04:	sub	w2, w0, w2, asr #31
  436b08:	mov	w28, #0x2                   	// #2
  436b0c:	b	436274 <argp_parse@@Base+0x2b34>
  436b10:	mov	x26, x25
  436b14:	b	436b1c <argp_parse@@Base+0x33dc>
  436b18:	mov	w3, #0x0                   	// #0
  436b1c:	cmp	w3, #0x45
  436b20:	b.eq	437048 <argp_parse@@Base+0x3908>  // b.none
  436b24:	ldr	w6, [x21, #20]
  436b28:	cmp	w6, #0x0
  436b2c:	mov	w5, #0x12c                 	// #300
  436b30:	mov	w0, #0xffffff9c            	// #-100
  436b34:	csel	w5, w5, w0, lt  // lt = tstop
  436b38:	add	w5, w6, w5
  436b3c:	ldr	w9, [x21, #28]
  436b40:	ldr	w7, [x21, #24]
  436b44:	sub	w2, w9, w7
  436b48:	add	w2, w2, #0x17e
  436b4c:	mov	w0, #0x2493                	// #9363
  436b50:	movk	w0, #0x9249, lsl #16
  436b54:	smull	x0, w2, w0
  436b58:	lsr	x0, x0, #32
  436b5c:	add	w0, w2, w0
  436b60:	asr	w0, w0, #2
  436b64:	sub	w0, w0, w2, asr #31
  436b68:	lsl	w8, w0, #3
  436b6c:	sub	w8, w8, w0
  436b70:	sub	w2, w2, w8
  436b74:	sub	w2, w9, w2
  436b78:	adds	w2, w2, #0x3
  436b7c:	b.mi	436c84 <argp_parse@@Base+0x3544>  // b.first
  436b80:	mov	w0, #0x0                   	// #0
  436b84:	tst	x5, #0x3
  436b88:	b.ne	436bd4 <argp_parse@@Base+0x3494>  // b.any
  436b8c:	mov	w8, #0x851f                	// #34079
  436b90:	movk	w8, #0x51eb, lsl #16
  436b94:	smull	x8, w5, w8
  436b98:	asr	x8, x8, #37
  436b9c:	sub	w8, w8, w5, asr #31
  436ba0:	mov	w0, #0x64                  	// #100
  436ba4:	msub	w8, w8, w0, w5
  436ba8:	mov	w0, #0x1                   	// #1
  436bac:	cbnz	w8, 436bd4 <argp_parse@@Base+0x3494>
  436bb0:	mov	w0, #0x851f                	// #34079
  436bb4:	movk	w0, #0x51eb, lsl #16
  436bb8:	smull	x0, w5, w0
  436bbc:	asr	x0, x0, #39
  436bc0:	sub	w0, w0, w5, asr #31
  436bc4:	mov	w8, #0x190                 	// #400
  436bc8:	msub	w5, w0, w8, w5
  436bcc:	cmp	w5, #0x0
  436bd0:	cset	w0, eq  // eq = none
  436bd4:	add	w0, w0, #0x16d
  436bd8:	sub	w0, w9, w0
  436bdc:	sub	w5, w0, w7
  436be0:	add	w5, w5, #0x17e
  436be4:	mov	w7, #0x2493                	// #9363
  436be8:	movk	w7, #0x9249, lsl #16
  436bec:	smull	x7, w5, w7
  436bf0:	lsr	x7, x7, #32
  436bf4:	add	w7, w5, w7
  436bf8:	asr	w7, w7, #2
  436bfc:	sub	w7, w7, w5, asr #31
  436c00:	lsl	w8, w7, #3
  436c04:	sub	w7, w8, w7
  436c08:	sub	w5, w5, w7
  436c0c:	sub	w0, w0, w5
  436c10:	adds	w0, w0, #0x3
  436c14:	csel	w2, w2, w0, mi  // mi = first
  436c18:	cmp	w0, #0x0
  436c1c:	cset	w7, ge  // ge = tcont
  436c20:	cmp	w4, #0x47
  436c24:	b.eq	436d20 <argp_parse@@Base+0x35e0>  // b.none
  436c28:	cmp	w4, #0x67
  436c2c:	b.ne	436d4c <argp_parse@@Base+0x360c>  // b.any
  436c30:	mov	w0, #0x851f                	// #34079
  436c34:	movk	w0, #0x51eb, lsl #16
  436c38:	smull	x4, w6, w0
  436c3c:	asr	x4, x4, #37
  436c40:	sub	w4, w4, w6, asr #31
  436c44:	mov	w5, #0x64                  	// #100
  436c48:	msub	w4, w4, w5, w6
  436c4c:	add	w4, w4, w7
  436c50:	smull	x2, w4, w0
  436c54:	asr	x2, x2, #37
  436c58:	sub	w2, w2, w4, asr #31
  436c5c:	msub	w2, w2, w5, w4
  436c60:	mov	x25, x26
  436c64:	mov	w28, #0x2                   	// #2
  436c68:	tbz	w2, #31, 436274 <argp_parse@@Base+0x2b34>
  436c6c:	mov	w0, #0xfffff894            	// #-1900
  436c70:	sub	w7, w0, w7
  436c74:	cmp	w6, w7
  436c78:	b.ge	436d14 <argp_parse@@Base+0x35d4>  // b.tcont
  436c7c:	neg	w2, w2
  436c80:	b	436274 <argp_parse@@Base+0x2b34>
  436c84:	sub	w5, w5, #0x1
  436c88:	mov	w0, #0x0                   	// #0
  436c8c:	tst	x5, #0x3
  436c90:	b.ne	436ccc <argp_parse@@Base+0x358c>  // b.any
  436c94:	mov	w2, #0x851f                	// #34079
  436c98:	movk	w2, #0x51eb, lsl #16
  436c9c:	smull	x2, w5, w2
  436ca0:	asr	x2, x2, #37
  436ca4:	sub	w2, w2, w5, asr #31
  436ca8:	mov	w0, #0x64                  	// #100
  436cac:	msub	w2, w2, w0, w5
  436cb0:	mov	w0, #0x1                   	// #1
  436cb4:	cbnz	w2, 436ccc <argp_parse@@Base+0x358c>
  436cb8:	mov	w2, #0x190                 	// #400
  436cbc:	sdiv	w0, w5, w2
  436cc0:	msub	w5, w0, w2, w5
  436cc4:	cmp	w5, #0x0
  436cc8:	cset	w0, eq  // eq = none
  436ccc:	add	w0, w0, #0x16d
  436cd0:	add	w9, w0, w9
  436cd4:	sub	w2, w9, w7
  436cd8:	add	w2, w2, #0x17e
  436cdc:	mov	w0, #0x2493                	// #9363
  436ce0:	movk	w0, #0x9249, lsl #16
  436ce4:	smull	x0, w2, w0
  436ce8:	lsr	x0, x0, #32
  436cec:	add	w0, w2, w0
  436cf0:	asr	w0, w0, #2
  436cf4:	sub	w0, w0, w2, asr #31
  436cf8:	lsl	w5, w0, #3
  436cfc:	sub	w0, w5, w0
  436d00:	sub	w2, w2, w0
  436d04:	sub	w2, w9, w2
  436d08:	add	w2, w2, #0x3
  436d0c:	mov	w7, #0xffffffff            	// #-1
  436d10:	b	436c20 <argp_parse@@Base+0x34e0>
  436d14:	add	w2, w2, #0x64
  436d18:	mov	w28, #0x2                   	// #2
  436d1c:	b	436274 <argp_parse@@Base+0x2b34>
  436d20:	mov	w0, #0xfffff894            	// #-1900
  436d24:	sub	w0, w0, w7
  436d28:	cmp	w6, w0
  436d2c:	cset	w5, lt  // lt = tstop
  436d30:	add	w2, w6, #0x76c
  436d34:	add	w2, w2, w7
  436d38:	mov	x25, x26
  436d3c:	mov	w8, #0x0                   	// #0
  436d40:	mov	w7, #0x0                   	// #0
  436d44:	mov	w28, #0x4                   	// #4
  436d48:	b	436280 <argp_parse@@Base+0x2b40>
  436d4c:	mov	w0, #0x2493                	// #9363
  436d50:	movk	w0, #0x9249, lsl #16
  436d54:	smull	x0, w2, w0
  436d58:	lsr	x0, x0, #32
  436d5c:	add	w0, w2, w0
  436d60:	asr	w0, w0, #2
  436d64:	sub	w2, w0, w2, asr #31
  436d68:	add	w2, w2, #0x1
  436d6c:	mov	x25, x26
  436d70:	mov	w28, #0x2                   	// #2
  436d74:	b	436274 <argp_parse@@Base+0x2b34>
  436d78:	mov	x25, x26
  436d7c:	mov	w3, #0x0                   	// #0
  436d80:	cmp	w3, #0x45
  436d84:	b.eq	43706c <argp_parse@@Base+0x392c>  // b.none
  436d88:	ldr	w4, [x21, #24]
  436d8c:	add	w4, w4, #0x6
  436d90:	mov	w0, #0x2493                	// #9363
  436d94:	movk	w0, #0x9249, lsl #16
  436d98:	smull	x2, w4, w0
  436d9c:	lsr	x2, x2, #32
  436da0:	add	w2, w4, w2
  436da4:	asr	w2, w2, #2
  436da8:	sub	w2, w2, w4, asr #31
  436dac:	lsl	w5, w2, #3
  436db0:	sub	w2, w5, w2
  436db4:	sub	w4, w4, w2
  436db8:	ldr	w2, [x21, #28]
  436dbc:	sub	w2, w2, w4
  436dc0:	add	w2, w2, #0x7
  436dc4:	smull	x0, w2, w0
  436dc8:	lsr	x0, x0, #32
  436dcc:	add	w0, w2, w0
  436dd0:	asr	w0, w0, #2
  436dd4:	sub	w2, w0, w2, asr #31
  436dd8:	mov	w28, #0x2                   	// #2
  436ddc:	b	436274 <argp_parse@@Base+0x2b34>
  436de0:	mov	x25, x26
  436de4:	mov	w3, #0x0                   	// #0
  436de8:	cmp	w3, #0x45
  436dec:	b.eq	43706c <argp_parse@@Base+0x392c>  // b.none
  436df0:	ldr	w2, [x21, #24]
  436df4:	mov	w28, #0x1                   	// #1
  436df8:	b	436274 <argp_parse@@Base+0x2b34>
  436dfc:	mov	x25, x26
  436e00:	mov	w3, #0x0                   	// #0
  436e04:	cmp	w3, #0x45
  436e08:	b.eq	437188 <argp_parse@@Base+0x3a48>  // b.none
  436e0c:	cmp	w3, #0x4f
  436e10:	b.eq	43706c <argp_parse@@Base+0x392c>  // b.none
  436e14:	ldr	w2, [x21, #20]
  436e18:	cmn	w2, #0x76c
  436e1c:	cset	w5, lt  // lt = tstop
  436e20:	add	w2, w2, #0x76c
  436e24:	mov	w8, #0x0                   	// #0
  436e28:	mov	w7, #0x0                   	// #0
  436e2c:	mov	w28, #0x4                   	// #4
  436e30:	cmp	w5, #0x0
  436e34:	cneg	w2, w2, ne  // ne = any
  436e38:	add	x26, sp, #0xdf
  436e3c:	mov	w6, #0x3a                  	// #58
  436e40:	mov	w4, #0xcccd                	// #52429
  436e44:	movk	w4, #0xcccc, lsl #16
  436e48:	b	4363a4 <argp_parse@@Base+0x2c64>
  436e4c:	mov	x25, x26
  436e50:	mov	w3, #0x0                   	// #0
  436e54:	cmp	w3, #0x45
  436e58:	b.eq	437194 <argp_parse@@Base+0x3a54>  // b.none
  436e5c:	ldr	w0, [x21, #20]
  436e60:	mov	w2, #0x851f                	// #34079
  436e64:	movk	w2, #0x51eb, lsl #16
  436e68:	smull	x2, w0, w2
  436e6c:	asr	x2, x2, #37
  436e70:	sub	w2, w2, w0, asr #31
  436e74:	mov	w4, #0x64                  	// #100
  436e78:	msub	w2, w2, w4, w0
  436e7c:	mov	w28, #0x2                   	// #2
  436e80:	tbz	w2, #31, 436274 <argp_parse@@Base+0x2b34>
  436e84:	cmn	w0, #0x76c
  436e88:	b.ge	436e94 <argp_parse@@Base+0x3754>  // b.tcont
  436e8c:	neg	w2, w2
  436e90:	b	436274 <argp_parse@@Base+0x2b34>
  436e94:	add	w2, w2, #0x64
  436e98:	mov	w28, #0x2                   	// #2
  436e9c:	b	436274 <argp_parse@@Base+0x2b34>
  436ea0:	mov	x25, x26
  436ea4:	ldr	w0, [sp, #112]
  436ea8:	cmp	w0, #0x0
  436eac:	ldr	w0, [sp, #108]
  436eb0:	csel	w0, w0, wzr, eq  // eq = none
  436eb4:	str	w0, [sp, #108]
  436eb8:	mov	x0, x24
  436ebc:	bl	403ff0 <strlen@plt>
  436ec0:	mov	x26, x0
  436ec4:	cmp	w22, #0x0
  436ec8:	csel	w0, w22, wzr, ge  // ge = tcont
  436ecc:	sxtw	x0, w0
  436ed0:	cmp	x26, x0
  436ed4:	csel	x1, x26, x0, cs  // cs = hs, nlast
  436ed8:	mov	x2, x1
  436edc:	str	x1, [sp, #160]
  436ee0:	mvn	x1, x19
  436ee4:	cmp	x1, x2
  436ee8:	b.ls	435c08 <argp_parse@@Base+0x24c8>  // b.plast
  436eec:	cbz	x20, 436f4c <argp_parse@@Base+0x380c>
  436ef0:	cmp	x26, x0
  436ef4:	b.cs	436f2c <argp_parse@@Base+0x37ec>  // b.hs, b.nlast
  436ef8:	sxtw	x22, w22
  436efc:	sub	x28, x22, x26
  436f00:	ldr	w0, [sp, #156]
  436f04:	cmp	w0, #0x30
  436f08:	b.eq	436f58 <argp_parse@@Base+0x3818>  // b.none
  436f0c:	mov	x22, #0x0                   	// #0
  436f10:	cbz	x28, 436f2c <argp_parse@@Base+0x37ec>
  436f14:	mov	x1, x20
  436f18:	mov	w0, #0x20                  	// #32
  436f1c:	bl	404170 <fputc@plt>
  436f20:	add	x22, x22, #0x1
  436f24:	cmp	x28, x22
  436f28:	b.ne	436f14 <argp_parse@@Base+0x37d4>  // b.any
  436f2c:	ldr	w0, [sp, #112]
  436f30:	cbnz	w0, 436f7c <argp_parse@@Base+0x383c>
  436f34:	ldr	w0, [sp, #108]
  436f38:	cbz	w0, 436f90 <argp_parse@@Base+0x3850>
  436f3c:	mov	x2, x26
  436f40:	mov	x1, x24
  436f44:	mov	x0, x20
  436f48:	bl	435aec <argp_parse@@Base+0x23ac>
  436f4c:	ldr	x0, [sp, #160]
  436f50:	add	x19, x19, x0
  436f54:	b	435bec <argp_parse@@Base+0x24ac>
  436f58:	cbz	x28, 436f2c <argp_parse@@Base+0x37ec>
  436f5c:	mov	x22, #0x0                   	// #0
  436f60:	mov	x1, x20
  436f64:	mov	w0, #0x30                  	// #48
  436f68:	bl	404170 <fputc@plt>
  436f6c:	add	x22, x22, #0x1
  436f70:	cmp	x28, x22
  436f74:	b.ne	436f60 <argp_parse@@Base+0x3820>  // b.any
  436f78:	b	436f2c <argp_parse@@Base+0x37ec>
  436f7c:	mov	x2, x26
  436f80:	mov	x1, x24
  436f84:	mov	x0, x20
  436f88:	bl	435a90 <argp_parse@@Base+0x2350>
  436f8c:	b	436f4c <argp_parse@@Base+0x380c>
  436f90:	mov	x3, x20
  436f94:	mov	x2, #0x1                   	// #1
  436f98:	mov	x1, x26
  436f9c:	mov	x0, x24
  436fa0:	bl	4048b0 <fwrite@plt>
  436fa4:	b	436f4c <argp_parse@@Base+0x380c>
  436fa8:	mov	x7, #0x1                   	// #1
  436fac:	add	x7, x7, #0x1
  436fb0:	add	x25, x26, x7
  436fb4:	ldrb	w0, [x26, x7]
  436fb8:	cmp	w0, #0x3a
  436fbc:	b.ne	435de0 <argp_parse@@Base+0x26a0>  // b.any
  436fc0:	b	436fac <argp_parse@@Base+0x386c>
  436fc4:	mov	x7, #0x0                   	// #0
  436fc8:	b	435de8 <argp_parse@@Base+0x26a8>
  436fcc:	mov	x25, x26
  436fd0:	mov	w3, #0x0                   	// #0
  436fd4:	mov	x7, #0x0                   	// #0
  436fd8:	b	435de8 <argp_parse@@Base+0x26a8>
  436fdc:	mov	x26, x25
  436fe0:	cmp	x7, #0x3
  436fe4:	b.ne	437048 <argp_parse@@Base+0x3908>  // b.any
  436fe8:	cbnz	w0, 437014 <argp_parse@@Base+0x38d4>
  436fec:	cbnz	w8, 435e88 <argp_parse@@Base+0x2748>
  436ff0:	mov	w7, #0x1                   	// #1
  436ff4:	mov	w28, #0x3                   	// #3
  436ff8:	b	436280 <argp_parse@@Base+0x2b40>
  436ffc:	mov	w0, #0x64                  	// #100
  437000:	madd	w2, w2, w0, w8
  437004:	mov	w8, #0x0                   	// #0
  437008:	mov	w7, #0x1                   	// #1
  43700c:	mov	w28, #0x5                   	// #5
  437010:	b	436280 <argp_parse@@Base+0x2b40>
  437014:	mov	w4, #0x64                  	// #100
  437018:	mul	w8, w8, w4
  43701c:	mov	w4, #0x2710                	// #10000
  437020:	madd	w2, w2, w4, w8
  437024:	add	w2, w2, w0
  437028:	mov	w8, #0x14                  	// #20
  43702c:	mov	w7, #0x1                   	// #1
  437030:	mov	w28, #0x9                   	// #9
  437034:	b	436280 <argp_parse@@Base+0x2b40>
  437038:	mov	x26, x25
  43703c:	sub	x26, x26, #0x1
  437040:	b	437048 <argp_parse@@Base+0x3908>
  437044:	mov	x26, x25
  437048:	ldrb	w0, [x26]
  43704c:	mov	x25, x26
  437050:	cmp	w0, #0x25
  437054:	b.ne	43706c <argp_parse@@Base+0x392c>  // b.any
  437058:	mov	w28, #0x1                   	// #1
  43705c:	b	43708c <argp_parse@@Base+0x394c>
  437060:	mov	x26, x25
  437064:	b	437048 <argp_parse@@Base+0x3908>
  437068:	mov	x25, x26
  43706c:	sub	x1, x25, #0x1
  437070:	mov	x0, x1
  437074:	add	w1, w1, #0x2
  437078:	sub	w28, w1, w0
  43707c:	mov	x26, x0
  437080:	ldrb	w2, [x0], #-1
  437084:	cmp	w2, #0x25
  437088:	b.ne	437078 <argp_parse@@Base+0x3938>  // b.any
  43708c:	sxtw	x28, w28
  437090:	cmp	w22, #0x0
  437094:	csel	w0, w22, wzr, ge  // ge = tcont
  437098:	sxtw	x0, w0
  43709c:	cmp	x28, x0
  4370a0:	csel	x1, x28, x0, cs  // cs = hs, nlast
  4370a4:	mov	x2, x1
  4370a8:	str	x1, [sp, #160]
  4370ac:	mvn	x1, x19
  4370b0:	cmp	x1, x2
  4370b4:	b.ls	435c08 <argp_parse@@Base+0x24c8>  // b.plast
  4370b8:	cbz	x20, 437118 <argp_parse@@Base+0x39d8>
  4370bc:	cmp	x28, x0
  4370c0:	b.cs	437100 <argp_parse@@Base+0x39c0>  // b.hs, b.nlast
  4370c4:	sxtw	x22, w22
  4370c8:	sub	x0, x22, x28
  4370cc:	str	x0, [sp, #112]
  4370d0:	ldr	w1, [sp, #156]
  4370d4:	cmp	w1, #0x30
  4370d8:	b.eq	437130 <argp_parse@@Base+0x39f0>  // b.none
  4370dc:	mov	x22, #0x0                   	// #0
  4370e0:	cbz	x0, 437100 <argp_parse@@Base+0x39c0>
  4370e4:	mov	x1, x20
  4370e8:	mov	w0, #0x20                  	// #32
  4370ec:	bl	404170 <fputc@plt>
  4370f0:	add	x22, x22, #0x1
  4370f4:	ldr	x0, [sp, #112]
  4370f8:	cmp	x0, x22
  4370fc:	b.ne	4370e4 <argp_parse@@Base+0x39a4>  // b.any
  437100:	ldr	w0, [sp, #108]
  437104:	cbz	w0, 43715c <argp_parse@@Base+0x3a1c>
  437108:	mov	x2, x28
  43710c:	mov	x1, x26
  437110:	mov	x0, x20
  437114:	bl	435aec <argp_parse@@Base+0x23ac>
  437118:	ldr	x0, [sp, #160]
  43711c:	add	x19, x19, x0
  437120:	b	435bec <argp_parse@@Base+0x24ac>
  437124:	mov	x26, x25
  437128:	mov	w28, #0x1                   	// #1
  43712c:	b	43708c <argp_parse@@Base+0x394c>
  437130:	ldr	x0, [sp, #112]
  437134:	cbz	x0, 437100 <argp_parse@@Base+0x39c0>
  437138:	mov	x22, #0x0                   	// #0
  43713c:	mov	x1, x20
  437140:	mov	w0, #0x30                  	// #48
  437144:	bl	404170 <fputc@plt>
  437148:	add	x22, x22, #0x1
  43714c:	ldr	x0, [sp, #112]
  437150:	cmp	x0, x22
  437154:	b.ne	43713c <argp_parse@@Base+0x39fc>  // b.any
  437158:	b	437100 <argp_parse@@Base+0x39c0>
  43715c:	mov	x3, x20
  437160:	mov	x2, #0x1                   	// #1
  437164:	mov	x1, x28
  437168:	mov	x0, x26
  43716c:	bl	4048b0 <fwrite@plt>
  437170:	b	437118 <argp_parse@@Base+0x39d8>
  437174:	mov	x19, #0x0                   	// #0
  437178:	b	435c0c <argp_parse@@Base+0x24cc>
  43717c:	mov	w1, #0x43                  	// #67
  437180:	mov	w28, #0x0                   	// #0
  437184:	b	436290 <argp_parse@@Base+0x2b50>
  437188:	mov	w1, #0x59                  	// #89
  43718c:	mov	w28, #0x0                   	// #0
  437190:	b	436290 <argp_parse@@Base+0x2b50>
  437194:	mov	w1, #0x79                  	// #121
  437198:	mov	w28, #0x0                   	// #0
  43719c:	b	436290 <argp_parse@@Base+0x2b50>
  4371a0:	mov	w0, #0x2d                  	// #45
  4371a4:	str	w0, [sp, #160]
  4371a8:	ldr	w0, [sp, #156]
  4371ac:	cmp	w0, #0x2d
  4371b0:	b.eq	436408 <argp_parse@@Base+0x2cc8>  // b.none
  4371b4:	ldr	w0, [sp, #160]
  4371b8:	cmp	w0, #0x0
  4371bc:	cset	w28, ne  // ne = any
  4371c0:	ldr	x0, [sp, #120]
  4371c4:	sub	x0, x0, x26
  4371c8:	ldr	w1, [sp, #112]
  4371cc:	sub	w0, w1, w0
  4371d0:	sub	w0, w0, w28
  4371d4:	str	w0, [sp, #168]
  4371d8:	cmp	w0, #0x0
  4371dc:	b.le	4365bc <argp_parse@@Base+0x2e7c>
  4371e0:	ldr	w0, [sp, #156]
  4371e4:	cmp	w0, #0x5f
  4371e8:	b.eq	43648c <argp_parse@@Base+0x2d4c>  // b.none
  4371ec:	mvn	x1, x19
  4371f0:	ldr	w2, [sp, #112]
  4371f4:	cmp	x1, w2, sxtw
  4371f8:	b.ls	435c08 <argp_parse@@Base+0x24c8>  // b.plast
  4371fc:	cbz	w28, 437278 <argp_parse@@Base+0x3b38>
  437200:	cmp	w22, #0x0
  437204:	csel	w0, w22, wzr, ge  // ge = tcont
  437208:	sxtw	x0, w0
  43720c:	cmp	x0, #0x0
  437210:	csinc	x3, x0, xzr, ne  // ne = any
  437214:	str	x3, [sp, #176]
  437218:	cmp	x1, x3
  43721c:	b.ls	435c08 <argp_parse@@Base+0x24c8>  // b.plast
  437220:	cbz	x20, 437270 <argp_parse@@Base+0x3b30>
  437224:	cmp	w2, #0x0
  437228:	ccmp	x0, #0x1, #0x0, eq  // eq = none
  43722c:	b.ls	437264 <argp_parse@@Base+0x3b24>  // b.plast
  437230:	sxtw	x22, w22
  437234:	sub	x28, x22, #0x1
  437238:	ldr	w0, [sp, #156]
  43723c:	cmp	w0, #0x30
  437240:	b.eq	436574 <argp_parse@@Base+0x2e34>  // b.none
  437244:	mov	x22, #0x0                   	// #0
  437248:	cbz	x28, 437264 <argp_parse@@Base+0x3b24>
  43724c:	mov	x1, x20
  437250:	mov	w0, #0x20                  	// #32
  437254:	bl	404170 <fputc@plt>
  437258:	add	x22, x22, #0x1
  43725c:	cmp	x28, x22
  437260:	b.ne	43724c <argp_parse@@Base+0x3b0c>  // b.any
  437264:	mov	x1, x20
  437268:	ldr	w0, [sp, #160]
  43726c:	bl	404170 <fputc@plt>
  437270:	ldr	x0, [sp, #176]
  437274:	add	x19, x19, x0
  437278:	cbnz	x20, 436598 <argp_parse@@Base+0x2e58>
  43727c:	ldr	w0, [sp, #168]
  437280:	add	x19, x19, w0, sxtw
  437284:	mov	w22, #0x0                   	// #0
  437288:	ldr	x0, [sp, #120]
  43728c:	sub	x28, x0, x26
  437290:	cmp	w22, #0x0
  437294:	csel	w0, w22, wzr, ge  // ge = tcont
  437298:	sxtw	x0, w0
  43729c:	cmp	x28, x0
  4372a0:	csel	x1, x28, x0, cs  // cs = hs, nlast
  4372a4:	mov	x2, x1
  4372a8:	str	x1, [sp, #160]
  4372ac:	mvn	x1, x19
  4372b0:	cmp	x1, x2
  4372b4:	b.ls	435c08 <argp_parse@@Base+0x24c8>  // b.plast
  4372b8:	cbz	x20, 437320 <argp_parse@@Base+0x3be0>
  4372bc:	ldr	w1, [sp, #112]
  4372c0:	cmp	w1, #0x0
  4372c4:	ccmp	x28, x0, #0x2, eq  // eq = none
  4372c8:	b.cs	437308 <argp_parse@@Base+0x3bc8>  // b.hs, b.nlast
  4372cc:	sxtw	x22, w22
  4372d0:	sub	x0, x22, x28
  4372d4:	str	x0, [sp, #112]
  4372d8:	ldr	w1, [sp, #156]
  4372dc:	cmp	w1, #0x30
  4372e0:	b.eq	436678 <argp_parse@@Base+0x2f38>  // b.none
  4372e4:	mov	x22, #0x0                   	// #0
  4372e8:	cbz	x0, 437308 <argp_parse@@Base+0x3bc8>
  4372ec:	mov	x1, x20
  4372f0:	mov	w0, #0x20                  	// #32
  4372f4:	bl	404170 <fputc@plt>
  4372f8:	add	x22, x22, #0x1
  4372fc:	ldr	x0, [sp, #112]
  437300:	cmp	x0, x22
  437304:	b.ne	4372ec <argp_parse@@Base+0x3bac>  // b.any
  437308:	ldr	w0, [sp, #108]
  43730c:	cbz	w0, 4366a4 <argp_parse@@Base+0x2f64>
  437310:	mov	x2, x28
  437314:	mov	x1, x26
  437318:	mov	x0, x20
  43731c:	bl	435aec <argp_parse@@Base+0x23ac>
  437320:	ldr	x0, [sp, #160]
  437324:	add	x19, x19, x0
  437328:	b	435bec <argp_parse@@Base+0x24ac>
  43732c:	stp	x29, x30, [sp, #-32]!
  437330:	mov	x29, sp
  437334:	strb	wzr, [sp, #31]
  437338:	mov	w6, w4
  43733c:	mov	x5, x3
  437340:	add	x4, sp, #0x1f
  437344:	mov	w3, #0x0                   	// #0
  437348:	bl	435b48 <argp_parse@@Base+0x2408>
  43734c:	ldp	x29, x30, [sp], #32
  437350:	ret
  437354:	stp	x29, x30, [sp, #-48]!
  437358:	mov	x29, sp
  43735c:	stp	x19, x20, [sp, #16]
  437360:	stp	x21, x22, [sp, #32]
  437364:	mov	x19, x2
  437368:	cbz	x2, 4373c8 <argp_parse@@Base+0x3c88>
  43736c:	mov	w22, w0
  437370:	mov	x20, x1
  437374:	mov	x21, #0x0                   	// #0
  437378:	mov	x2, x19
  43737c:	mov	x1, x20
  437380:	mov	w0, w22
  437384:	bl	43f494 <argp_parse@@Base+0xbd54>
  437388:	cmn	x0, #0x1
  43738c:	b.eq	4373b4 <argp_parse@@Base+0x3c74>  // b.none
  437390:	cbz	x0, 4373a8 <argp_parse@@Base+0x3c68>
  437394:	add	x21, x21, x0
  437398:	add	x20, x20, x0
  43739c:	subs	x19, x19, x0
  4373a0:	b.ne	437378 <argp_parse@@Base+0x3c38>  // b.any
  4373a4:	b	4373b4 <argp_parse@@Base+0x3c74>
  4373a8:	bl	404ad0 <__errno_location@plt>
  4373ac:	mov	w1, #0x1c                  	// #28
  4373b0:	str	w1, [x0]
  4373b4:	mov	x0, x21
  4373b8:	ldp	x19, x20, [sp, #16]
  4373bc:	ldp	x21, x22, [sp, #32]
  4373c0:	ldp	x29, x30, [sp], #48
  4373c4:	ret
  4373c8:	mov	x21, x2
  4373cc:	b	4373b4 <argp_parse@@Base+0x3c74>
  4373d0:	stp	x29, x30, [sp, #-16]!
  4373d4:	mov	x29, sp
  4373d8:	mov	x1, x0
  4373dc:	mov	w0, #0x0                   	// #0
  4373e0:	bl	404190 <clock_gettime@plt>
  4373e4:	ldp	x29, x30, [sp], #16
  4373e8:	ret
  4373ec:	stp	x29, x30, [sp, #-32]!
  4373f0:	mov	x29, sp
  4373f4:	add	x0, sp, #0x10
  4373f8:	bl	4373d0 <argp_parse@@Base+0x3c90>
  4373fc:	ldp	x0, x1, [sp, #16]
  437400:	ldp	x29, x30, [sp], #32
  437404:	ret
  437408:	ror	x2, x0, #3
  43740c:	udiv	x0, x2, x1
  437410:	msub	x0, x0, x1, x2
  437414:	ret
  437418:	cmp	x1, x0
  43741c:	cset	w0, eq  // eq = none
  437420:	ret
  437424:	mov	x1, x0
  437428:	ldr	x2, [x0, #40]
  43742c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  437430:	add	x0, x0, #0x680
  437434:	cmp	x2, x0
  437438:	b.eq	4374d8 <argp_parse@@Base+0x3d98>  // b.none
  43743c:	ldr	s0, [x2, #8]
  437440:	mov	w0, #0xcccd                	// #52429
  437444:	movk	w0, #0x3dcc, lsl #16
  437448:	fmov	s1, w0
  43744c:	fcmpe	s0, s1
  437450:	b.le	4374b4 <argp_parse@@Base+0x3d74>
  437454:	mov	w0, #0x6666                	// #26214
  437458:	movk	w0, #0x3f66, lsl #16
  43745c:	fmov	s1, w0
  437460:	fcmpe	s0, s1
  437464:	b.pl	4374b4 <argp_parse@@Base+0x3d74>  // b.nfrst
  437468:	mov	w0, #0xcccd                	// #52429
  43746c:	movk	w0, #0x3f8c, lsl #16
  437470:	fmov	s1, w0
  437474:	ldr	s2, [x2, #12]
  437478:	fcmpe	s2, s1
  43747c:	b.le	4374b4 <argp_parse@@Base+0x3d74>
  437480:	ldr	s1, [x2]
  437484:	fcmpe	s1, #0.0
  437488:	b.lt	4374b4 <argp_parse@@Base+0x3d74>  // b.tstop
  43748c:	mov	w0, #0xcccd                	// #52429
  437490:	movk	w0, #0x3dcc, lsl #16
  437494:	fmov	s2, w0
  437498:	fadd	s1, s1, s2
  43749c:	ldr	s2, [x2, #4]
  4374a0:	fcmpe	s1, s2
  4374a4:	b.pl	4374b4 <argp_parse@@Base+0x3d74>  // b.nfrst
  4374a8:	fmov	s3, #1.000000000000000000e+00
  4374ac:	fcmpe	s2, s3
  4374b0:	b.ls	4374c8 <argp_parse@@Base+0x3d88>  // b.plast
  4374b4:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  4374b8:	add	x0, x0, #0x680
  4374bc:	str	x0, [x1, #40]
  4374c0:	mov	w0, #0x0                   	// #0
  4374c4:	ret
  4374c8:	mov	w0, #0x1                   	// #1
  4374cc:	fcmpe	s0, s1
  4374d0:	b.le	4374b4 <argp_parse@@Base+0x3d74>
  4374d4:	b	4374c4 <argp_parse@@Base+0x3d84>
  4374d8:	mov	w0, #0x1                   	// #1
  4374dc:	b	4374c4 <argp_parse@@Base+0x3d84>
  4374e0:	ldrb	w2, [x1, #16]
  4374e4:	cbnz	w2, 43750c <argp_parse@@Base+0x3dcc>
  4374e8:	ucvtf	s0, x0
  4374ec:	ldr	s1, [x1, #8]
  4374f0:	fdiv	s0, s0, s1
  4374f4:	mov	w0, #0x5f800000            	// #1602224128
  4374f8:	fmov	s1, w0
  4374fc:	mov	x0, #0x0                   	// #0
  437500:	fcmpe	s0, s1
  437504:	b.ge	4375b4 <argp_parse@@Base+0x3e74>  // b.tcont
  437508:	fcvtzu	x0, s0
  43750c:	cmp	x0, #0xa
  437510:	mov	x1, #0xa                   	// #10
  437514:	csel	x0, x0, x1, cs  // cs = hs, nlast
  437518:	orr	x0, x0, #0x1
  43751c:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  437520:	movk	x5, #0xaaab
  437524:	cmn	x0, #0x1
  437528:	b.ne	437550 <argp_parse@@Base+0x3e10>  // b.any
  43752c:	mov	x0, #0x0                   	// #0
  437530:	b	4375b4 <argp_parse@@Base+0x3e74>
  437534:	mov	x1, #0x3                   	// #3
  437538:	udiv	x2, x0, x1
  43753c:	msub	x1, x2, x1, x0
  437540:	cbnz	x1, 43759c <argp_parse@@Base+0x3e5c>
  437544:	add	x0, x0, #0x2
  437548:	cmn	x0, #0x1
  43754c:	b.eq	4375b8 <argp_parse@@Base+0x3e78>  // b.none
  437550:	cmp	x0, #0x9
  437554:	b.ls	437534 <argp_parse@@Base+0x3df4>  // b.plast
  437558:	umulh	x1, x0, x5
  43755c:	and	x2, x1, #0xfffffffffffffffe
  437560:	add	x1, x2, x1, lsr #1
  437564:	cmp	x0, x1
  437568:	b.eq	437544 <argp_parse@@Base+0x3e04>  // b.none
  43756c:	mov	x3, #0x10                  	// #16
  437570:	mov	x2, #0x9                   	// #9
  437574:	mov	x1, #0x3                   	// #3
  437578:	add	x2, x2, x3
  43757c:	add	x1, x1, #0x2
  437580:	cmp	x2, x0
  437584:	b.cs	437538 <argp_parse@@Base+0x3df8>  // b.hs, b.nlast
  437588:	add	x3, x3, #0x8
  43758c:	udiv	x4, x0, x1
  437590:	msub	x4, x4, x1, x0
  437594:	cbnz	x4, 437578 <argp_parse@@Base+0x3e38>
  437598:	b	437544 <argp_parse@@Base+0x3e04>
  43759c:	cmp	xzr, x0, lsr #61
  4375a0:	cset	x1, ne  // ne = any
  4375a4:	tst	x0, #0x1000000000000000
  4375a8:	csinc	w1, w1, wzr, eq  // eq = none
  4375ac:	cmp	w1, #0x0
  4375b0:	csel	x0, x0, xzr, eq  // eq = none
  4375b4:	ret
  4375b8:	mov	x0, #0x0                   	// #0
  4375bc:	b	4375b4 <argp_parse@@Base+0x3e74>
  4375c0:	stp	x29, x30, [sp, #-32]!
  4375c4:	mov	x29, sp
  4375c8:	str	x19, [sp, #16]
  4375cc:	mov	x19, x0
  4375d0:	mov	x0, x1
  4375d4:	ldr	x2, [x19, #48]
  4375d8:	ldr	x1, [x19, #16]
  4375dc:	blr	x2
  4375e0:	ldr	x1, [x19, #16]
  4375e4:	cmp	x1, x0
  4375e8:	b.ls	437600 <argp_parse@@Base+0x3ec0>  // b.plast
  4375ec:	ldr	x1, [x19]
  4375f0:	add	x0, x1, x0, lsl #4
  4375f4:	ldr	x19, [sp, #16]
  4375f8:	ldp	x29, x30, [sp], #32
  4375fc:	ret
  437600:	bl	404660 <abort@plt>
  437604:	stp	x29, x30, [sp, #-80]!
  437608:	mov	x29, sp
  43760c:	stp	x21, x22, [sp, #32]
  437610:	stp	x23, x24, [sp, #48]
  437614:	mov	x21, x0
  437618:	ldr	x22, [x1]
  43761c:	ldr	x0, [x1, #8]
  437620:	cmp	x22, x0
  437624:	b.cs	437758 <argp_parse@@Base+0x4018>  // b.hs, b.nlast
  437628:	stp	x19, x20, [sp, #16]
  43762c:	str	x25, [sp, #64]
  437630:	mov	x23, x1
  437634:	and	w24, w2, #0xff
  437638:	mov	x25, #0x10                  	// #16
  43763c:	b	4376f8 <argp_parse@@Base+0x3fb8>
  437640:	str	x20, [x0]
  437644:	ldr	x0, [x21, #24]
  437648:	add	x0, x0, #0x1
  43764c:	str	x0, [x21, #24]
  437650:	str	xzr, [x2]
  437654:	ldr	x0, [x21, #72]
  437658:	str	x0, [x2, #8]
  43765c:	str	x2, [x21, #72]
  437660:	cbz	x19, 437694 <argp_parse@@Base+0x3f54>
  437664:	ldr	x20, [x19]
  437668:	mov	x1, x20
  43766c:	mov	x0, x21
  437670:	bl	4375c0 <argp_parse@@Base+0x3e80>
  437674:	mov	x2, x19
  437678:	ldr	x19, [x19, #8]
  43767c:	ldr	x1, [x0]
  437680:	cbz	x1, 437640 <argp_parse@@Base+0x3f00>
  437684:	ldr	x1, [x0, #8]
  437688:	str	x1, [x2, #8]
  43768c:	str	x2, [x0, #8]
  437690:	b	437660 <argp_parse@@Base+0x3f20>
  437694:	ldr	x20, [x22]
  437698:	str	xzr, [x22, #8]
  43769c:	cbnz	w24, 4376e8 <argp_parse@@Base+0x3fa8>
  4376a0:	mov	x1, x20
  4376a4:	mov	x0, x21
  4376a8:	bl	4375c0 <argp_parse@@Base+0x3e80>
  4376ac:	mov	x19, x0
  4376b0:	ldr	x0, [x0]
  4376b4:	cbz	x0, 437724 <argp_parse@@Base+0x3fe4>
  4376b8:	ldr	x0, [x21, #72]
  4376bc:	cbz	x0, 43770c <argp_parse@@Base+0x3fcc>
  4376c0:	ldr	x1, [x0, #8]
  4376c4:	str	x1, [x21, #72]
  4376c8:	str	x20, [x0]
  4376cc:	ldr	x1, [x19, #8]
  4376d0:	str	x1, [x0, #8]
  4376d4:	str	x0, [x19, #8]
  4376d8:	str	xzr, [x22]
  4376dc:	ldr	x0, [x23, #24]
  4376e0:	sub	x0, x0, #0x1
  4376e4:	str	x0, [x23, #24]
  4376e8:	add	x22, x22, #0x10
  4376ec:	ldr	x0, [x23, #8]
  4376f0:	cmp	x0, x22
  4376f4:	b.ls	437738 <argp_parse@@Base+0x3ff8>  // b.plast
  4376f8:	ldr	x0, [x22]
  4376fc:	cbz	x0, 4376e8 <argp_parse@@Base+0x3fa8>
  437700:	ldr	x19, [x22, #8]
  437704:	cbnz	x19, 437664 <argp_parse@@Base+0x3f24>
  437708:	b	437694 <argp_parse@@Base+0x3f54>
  43770c:	mov	x0, x25
  437710:	bl	404310 <malloc@plt>
  437714:	cbnz	x0, 4376c8 <argp_parse@@Base+0x3f88>
  437718:	ldp	x19, x20, [sp, #16]
  43771c:	ldr	x25, [sp, #64]
  437720:	b	437744 <argp_parse@@Base+0x4004>
  437724:	str	x20, [x19]
  437728:	ldr	x0, [x21, #24]
  43772c:	add	x0, x0, #0x1
  437730:	str	x0, [x21, #24]
  437734:	b	4376d8 <argp_parse@@Base+0x3f98>
  437738:	mov	w24, #0x1                   	// #1
  43773c:	ldp	x19, x20, [sp, #16]
  437740:	ldr	x25, [sp, #64]
  437744:	mov	w0, w24
  437748:	ldp	x21, x22, [sp, #32]
  43774c:	ldp	x23, x24, [sp, #48]
  437750:	ldp	x29, x30, [sp], #80
  437754:	ret
  437758:	mov	w24, #0x1                   	// #1
  43775c:	b	437744 <argp_parse@@Base+0x4004>
  437760:	stp	x29, x30, [sp, #-64]!
  437764:	mov	x29, sp
  437768:	stp	x19, x20, [sp, #16]
  43776c:	stp	x21, x22, [sp, #32]
  437770:	str	x23, [sp, #48]
  437774:	mov	x21, x0
  437778:	mov	x20, x1
  43777c:	mov	x22, x2
  437780:	and	w23, w3, #0xff
  437784:	bl	4375c0 <argp_parse@@Base+0x3e80>
  437788:	mov	x19, x0
  43778c:	str	x0, [x22]
  437790:	ldr	x0, [x0]
  437794:	cbz	x0, 437830 <argp_parse@@Base+0x40f0>
  437798:	cmp	x0, x20
  43779c:	b.eq	4377f0 <argp_parse@@Base+0x40b0>  // b.none
  4377a0:	ldr	x2, [x21, #56]
  4377a4:	mov	x1, x0
  4377a8:	mov	x0, x20
  4377ac:	blr	x2
  4377b0:	and	w0, w0, #0xff
  4377b4:	cbnz	w0, 4377f0 <argp_parse@@Base+0x40b0>
  4377b8:	ldr	x0, [x19, #8]
  4377bc:	cbz	x0, 437830 <argp_parse@@Base+0x40f0>
  4377c0:	ldr	x1, [x0]
  4377c4:	cmp	x1, x20
  4377c8:	b.eq	437824 <argp_parse@@Base+0x40e4>  // b.none
  4377cc:	ldr	x2, [x21, #56]
  4377d0:	mov	x0, x20
  4377d4:	blr	x2
  4377d8:	and	w0, w0, #0xff
  4377dc:	cbnz	w0, 437824 <argp_parse@@Base+0x40e4>
  4377e0:	ldr	x19, [x19, #8]
  4377e4:	ldr	x0, [x19, #8]
  4377e8:	cbnz	x0, 4377c0 <argp_parse@@Base+0x4080>
  4377ec:	b	437830 <argp_parse@@Base+0x40f0>
  4377f0:	ldr	x0, [x19]
  4377f4:	cbz	w23, 437830 <argp_parse@@Base+0x40f0>
  4377f8:	ldr	x1, [x19, #8]
  4377fc:	cbz	x1, 43781c <argp_parse@@Base+0x40dc>
  437800:	ldp	x2, x3, [x1]
  437804:	stp	x2, x3, [x19]
  437808:	str	xzr, [x1]
  43780c:	ldr	x2, [x21, #72]
  437810:	str	x2, [x1, #8]
  437814:	str	x1, [x21, #72]
  437818:	b	437830 <argp_parse@@Base+0x40f0>
  43781c:	str	xzr, [x19]
  437820:	b	437830 <argp_parse@@Base+0x40f0>
  437824:	ldr	x1, [x19, #8]
  437828:	ldr	x0, [x1]
  43782c:	cbnz	w23, 437844 <argp_parse@@Base+0x4104>
  437830:	ldp	x19, x20, [sp, #16]
  437834:	ldp	x21, x22, [sp, #32]
  437838:	ldr	x23, [sp, #48]
  43783c:	ldp	x29, x30, [sp], #64
  437840:	ret
  437844:	ldr	x2, [x1, #8]
  437848:	str	x2, [x19, #8]
  43784c:	str	xzr, [x1]
  437850:	ldr	x2, [x21, #72]
  437854:	str	x2, [x1, #8]
  437858:	str	x1, [x21, #72]
  43785c:	b	437830 <argp_parse@@Base+0x40f0>
  437860:	ldr	x0, [x0, #16]
  437864:	ret
  437868:	ldr	x0, [x0, #24]
  43786c:	ret
  437870:	ldr	x0, [x0, #32]
  437874:	ret
  437878:	ldr	x3, [x0]
  43787c:	ldr	x4, [x0, #8]
  437880:	cmp	x3, x4
  437884:	b.cs	4378cc <argp_parse@@Base+0x418c>  // b.hs, b.nlast
  437888:	mov	x0, #0x0                   	// #0
  43788c:	b	4378a8 <argp_parse@@Base+0x4168>
  437890:	mov	x2, #0x1                   	// #1
  437894:	cmp	x0, x2
  437898:	csel	x0, x0, x2, cs  // cs = hs, nlast
  43789c:	add	x3, x3, #0x10
  4378a0:	cmp	x3, x4
  4378a4:	b.cs	4378d0 <argp_parse@@Base+0x4190>  // b.hs, b.nlast
  4378a8:	ldr	x1, [x3]
  4378ac:	cbz	x1, 43789c <argp_parse@@Base+0x415c>
  4378b0:	ldr	x1, [x3, #8]
  4378b4:	cbz	x1, 437890 <argp_parse@@Base+0x4150>
  4378b8:	mov	x2, #0x1                   	// #1
  4378bc:	add	x2, x2, #0x1
  4378c0:	ldr	x1, [x1, #8]
  4378c4:	cbnz	x1, 4378bc <argp_parse@@Base+0x417c>
  4378c8:	b	437894 <argp_parse@@Base+0x4154>
  4378cc:	mov	x0, #0x0                   	// #0
  4378d0:	ret
  4378d4:	mov	x6, x0
  4378d8:	ldr	x3, [x0]
  4378dc:	ldr	x4, [x0, #8]
  4378e0:	cmp	x3, x4
  4378e4:	b.cs	437928 <argp_parse@@Base+0x41e8>  // b.hs, b.nlast
  4378e8:	mov	x2, #0x0                   	// #0
  4378ec:	mov	x5, #0x0                   	// #0
  4378f0:	b	437900 <argp_parse@@Base+0x41c0>
  4378f4:	add	x3, x3, #0x10
  4378f8:	cmp	x3, x4
  4378fc:	b.cs	437930 <argp_parse@@Base+0x41f0>  // b.hs, b.nlast
  437900:	ldr	x1, [x3]
  437904:	cbz	x1, 4378f4 <argp_parse@@Base+0x41b4>
  437908:	add	x5, x5, #0x1
  43790c:	add	x2, x2, #0x1
  437910:	ldr	x1, [x3, #8]
  437914:	cbz	x1, 4378f4 <argp_parse@@Base+0x41b4>
  437918:	add	x2, x2, #0x1
  43791c:	ldr	x1, [x1, #8]
  437920:	cbnz	x1, 437918 <argp_parse@@Base+0x41d8>
  437924:	b	4378f4 <argp_parse@@Base+0x41b4>
  437928:	mov	x2, #0x0                   	// #0
  43792c:	mov	x5, #0x0                   	// #0
  437930:	ldr	x1, [x6, #24]
  437934:	mov	w0, #0x0                   	// #0
  437938:	cmp	x1, x5
  43793c:	b.eq	437944 <argp_parse@@Base+0x4204>  // b.none
  437940:	ret
  437944:	ldr	x0, [x6, #32]
  437948:	cmp	x0, x2
  43794c:	cset	w0, eq  // eq = none
  437950:	b	437940 <argp_parse@@Base+0x4200>
  437954:	stp	x29, x30, [sp, #-64]!
  437958:	mov	x29, sp
  43795c:	stp	x19, x20, [sp, #16]
  437960:	stp	x21, x22, [sp, #32]
  437964:	str	x23, [sp, #48]
  437968:	mov	x20, x0
  43796c:	mov	x19, x1
  437970:	ldr	x21, [x0, #16]
  437974:	ldr	x23, [x0, #24]
  437978:	bl	437878 <argp_parse@@Base+0x4138>
  43797c:	mov	x22, x0
  437980:	ldr	x3, [x20, #32]
  437984:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x19e64>
  437988:	add	x2, x2, #0x610
  43798c:	mov	w1, #0x1                   	// #1
  437990:	mov	x0, x19
  437994:	bl	404710 <__fprintf_chk@plt>
  437998:	mov	x3, x21
  43799c:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x19e64>
  4379a0:	add	x2, x2, #0x628
  4379a4:	mov	w1, #0x1                   	// #1
  4379a8:	mov	x0, x19
  4379ac:	bl	404710 <__fprintf_chk@plt>
  4379b0:	ucvtf	d1, x23
  4379b4:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  4379b8:	fmov	d0, x0
  4379bc:	fmul	d1, d1, d0
  4379c0:	ucvtf	d0, x21
  4379c4:	fdiv	d0, d1, d0
  4379c8:	mov	x3, x23
  4379cc:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x19e64>
  4379d0:	add	x2, x2, #0x640
  4379d4:	mov	w1, #0x1                   	// #1
  4379d8:	mov	x0, x19
  4379dc:	bl	404710 <__fprintf_chk@plt>
  4379e0:	mov	x3, x22
  4379e4:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x19e64>
  4379e8:	add	x2, x2, #0x668
  4379ec:	mov	w1, #0x1                   	// #1
  4379f0:	mov	x0, x19
  4379f4:	bl	404710 <__fprintf_chk@plt>
  4379f8:	ldp	x19, x20, [sp, #16]
  4379fc:	ldp	x21, x22, [sp, #32]
  437a00:	ldr	x23, [sp, #48]
  437a04:	ldp	x29, x30, [sp], #64
  437a08:	ret
  437a0c:	stp	x29, x30, [sp, #-48]!
  437a10:	mov	x29, sp
  437a14:	stp	x19, x20, [sp, #16]
  437a18:	str	x21, [sp, #32]
  437a1c:	mov	x21, x0
  437a20:	mov	x20, x1
  437a24:	bl	4375c0 <argp_parse@@Base+0x3e80>
  437a28:	mov	x19, x0
  437a2c:	ldr	x0, [x0]
  437a30:	cbz	x0, 437a78 <argp_parse@@Base+0x4338>
  437a34:	ldr	x1, [x19]
  437a38:	cmp	x1, x20
  437a3c:	b.eq	437a60 <argp_parse@@Base+0x4320>  // b.none
  437a40:	ldr	x2, [x21, #56]
  437a44:	mov	x0, x20
  437a48:	blr	x2
  437a4c:	and	w0, w0, #0xff
  437a50:	cbnz	w0, 437a60 <argp_parse@@Base+0x4320>
  437a54:	ldr	x19, [x19, #8]
  437a58:	cbnz	x19, 437a34 <argp_parse@@Base+0x42f4>
  437a5c:	b	437a64 <argp_parse@@Base+0x4324>
  437a60:	ldr	x19, [x19]
  437a64:	mov	x0, x19
  437a68:	ldp	x19, x20, [sp, #16]
  437a6c:	ldr	x21, [sp, #32]
  437a70:	ldp	x29, x30, [sp], #48
  437a74:	ret
  437a78:	mov	x19, x0
  437a7c:	b	437a64 <argp_parse@@Base+0x4324>
  437a80:	ldr	x1, [x0, #32]
  437a84:	cbz	x1, 437ab8 <argp_parse@@Base+0x4378>
  437a88:	ldr	x1, [x0]
  437a8c:	ldr	x2, [x0, #8]
  437a90:	cmp	x1, x2
  437a94:	b.cs	437aac <argp_parse@@Base+0x436c>  // b.hs, b.nlast
  437a98:	ldr	x0, [x1]
  437a9c:	cbnz	x0, 437abc <argp_parse@@Base+0x437c>
  437aa0:	add	x1, x1, #0x10
  437aa4:	cmp	x1, x2
  437aa8:	b.cc	437a98 <argp_parse@@Base+0x4358>  // b.lo, b.ul, b.last
  437aac:	stp	x29, x30, [sp, #-16]!
  437ab0:	mov	x29, sp
  437ab4:	bl	404660 <abort@plt>
  437ab8:	mov	x0, #0x0                   	// #0
  437abc:	ret
  437ac0:	stp	x29, x30, [sp, #-32]!
  437ac4:	mov	x29, sp
  437ac8:	stp	x19, x20, [sp, #16]
  437acc:	mov	x20, x0
  437ad0:	mov	x19, x1
  437ad4:	bl	4375c0 <argp_parse@@Base+0x3e80>
  437ad8:	mov	x3, x0
  437adc:	mov	x2, x0
  437ae0:	b	437af4 <argp_parse@@Base+0x43b4>
  437ae4:	ldr	x0, [x1]
  437ae8:	b	437b28 <argp_parse@@Base+0x43e8>
  437aec:	ldr	x2, [x2, #8]
  437af0:	cbz	x2, 437b08 <argp_parse@@Base+0x43c8>
  437af4:	ldr	x4, [x2]
  437af8:	cmp	x4, x19
  437afc:	b.ne	437aec <argp_parse@@Base+0x43ac>  // b.any
  437b00:	ldr	x1, [x2, #8]
  437b04:	cbnz	x1, 437ae4 <argp_parse@@Base+0x43a4>
  437b08:	ldr	x1, [x20, #8]
  437b0c:	add	x3, x3, #0x10
  437b10:	cmp	x1, x3
  437b14:	b.ls	437b24 <argp_parse@@Base+0x43e4>  // b.plast
  437b18:	ldr	x0, [x3]
  437b1c:	cbz	x0, 437b0c <argp_parse@@Base+0x43cc>
  437b20:	b	437b28 <argp_parse@@Base+0x43e8>
  437b24:	mov	x0, #0x0                   	// #0
  437b28:	ldp	x19, x20, [sp, #16]
  437b2c:	ldp	x29, x30, [sp], #32
  437b30:	ret
  437b34:	mov	x6, x0
  437b38:	ldr	x5, [x0]
  437b3c:	ldr	x0, [x0, #8]
  437b40:	cmp	x5, x0
  437b44:	b.cs	437b98 <argp_parse@@Base+0x4458>  // b.hs, b.nlast
  437b48:	mov	x0, #0x0                   	// #0
  437b4c:	sub	x4, x1, #0x8
  437b50:	b	437b64 <argp_parse@@Base+0x4424>
  437b54:	add	x5, x5, #0x10
  437b58:	ldr	x1, [x6, #8]
  437b5c:	cmp	x1, x5
  437b60:	b.ls	437b94 <argp_parse@@Base+0x4454>  // b.plast
  437b64:	ldr	x1, [x5]
  437b68:	cbz	x1, 437b54 <argp_parse@@Base+0x4414>
  437b6c:	cmp	x2, x0
  437b70:	b.ls	437b94 <argp_parse@@Base+0x4454>  // b.plast
  437b74:	mov	x1, x5
  437b78:	add	x0, x0, #0x1
  437b7c:	ldr	x3, [x1]
  437b80:	str	x3, [x4, x0, lsl #3]
  437b84:	ldr	x1, [x1, #8]
  437b88:	cbz	x1, 437b54 <argp_parse@@Base+0x4414>
  437b8c:	cmp	x2, x0
  437b90:	b.ne	437b78 <argp_parse@@Base+0x4438>  // b.any
  437b94:	ret
  437b98:	mov	x0, #0x0                   	// #0
  437b9c:	b	437b94 <argp_parse@@Base+0x4454>
  437ba0:	stp	x29, x30, [sp, #-64]!
  437ba4:	mov	x29, sp
  437ba8:	stp	x19, x20, [sp, #16]
  437bac:	stp	x23, x24, [sp, #48]
  437bb0:	mov	x24, x0
  437bb4:	ldr	x23, [x0]
  437bb8:	ldr	x0, [x0, #8]
  437bbc:	cmp	x23, x0
  437bc0:	b.cs	437c20 <argp_parse@@Base+0x44e0>  // b.hs, b.nlast
  437bc4:	stp	x21, x22, [sp, #32]
  437bc8:	mov	x21, x1
  437bcc:	mov	x22, x2
  437bd0:	mov	x20, #0x0                   	// #0
  437bd4:	b	437be8 <argp_parse@@Base+0x44a8>
  437bd8:	add	x23, x23, #0x10
  437bdc:	ldr	x0, [x24, #8]
  437be0:	cmp	x0, x23
  437be4:	b.ls	437c18 <argp_parse@@Base+0x44d8>  // b.plast
  437be8:	ldr	x0, [x23]
  437bec:	cbz	x0, 437bd8 <argp_parse@@Base+0x4498>
  437bf0:	mov	x19, x23
  437bf4:	mov	x1, x22
  437bf8:	ldr	x0, [x19]
  437bfc:	blr	x21
  437c00:	and	w0, w0, #0xff
  437c04:	cbz	w0, 437c28 <argp_parse@@Base+0x44e8>
  437c08:	add	x20, x20, #0x1
  437c0c:	ldr	x19, [x19, #8]
  437c10:	cbnz	x19, 437bf4 <argp_parse@@Base+0x44b4>
  437c14:	b	437bd8 <argp_parse@@Base+0x4498>
  437c18:	ldp	x21, x22, [sp, #32]
  437c1c:	b	437c2c <argp_parse@@Base+0x44ec>
  437c20:	mov	x20, #0x0                   	// #0
  437c24:	b	437c2c <argp_parse@@Base+0x44ec>
  437c28:	ldp	x21, x22, [sp, #32]
  437c2c:	mov	x0, x20
  437c30:	ldp	x19, x20, [sp, #16]
  437c34:	ldp	x23, x24, [sp, #48]
  437c38:	ldp	x29, x30, [sp], #64
  437c3c:	ret
  437c40:	mov	x4, x0
  437c44:	ldrb	w2, [x0]
  437c48:	cbz	w2, 437c70 <argp_parse@@Base+0x4530>
  437c4c:	mov	x0, #0x0                   	// #0
  437c50:	lsl	x3, x0, #5
  437c54:	sub	x0, x3, x0
  437c58:	add	x2, x0, w2, uxtb
  437c5c:	udiv	x0, x2, x1
  437c60:	msub	x0, x0, x1, x2
  437c64:	ldrb	w2, [x4, #1]!
  437c68:	cbnz	w2, 437c50 <argp_parse@@Base+0x4510>
  437c6c:	ret
  437c70:	mov	x0, #0x0                   	// #0
  437c74:	b	437c6c <argp_parse@@Base+0x452c>
  437c78:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  437c7c:	add	x1, x1, #0x680
  437c80:	ldp	x2, x3, [x1]
  437c84:	stp	x2, x3, [x0]
  437c88:	ldr	w1, [x1, #16]
  437c8c:	str	w1, [x0, #16]
  437c90:	ret
  437c94:	stp	x29, x30, [sp, #-64]!
  437c98:	mov	x29, sp
  437c9c:	stp	x19, x20, [sp, #16]
  437ca0:	stp	x21, x22, [sp, #32]
  437ca4:	stp	x23, x24, [sp, #48]
  437ca8:	mov	x24, x0
  437cac:	mov	x20, x1
  437cb0:	mov	x23, x4
  437cb4:	adrp	x1, 437000 <argp_parse@@Base+0x38c0>
  437cb8:	add	x1, x1, #0x408
  437cbc:	cmp	x2, #0x0
  437cc0:	csel	x22, x1, x2, eq  // eq = none
  437cc4:	adrp	x1, 437000 <argp_parse@@Base+0x38c0>
  437cc8:	add	x1, x1, #0x418
  437ccc:	cmp	x3, #0x0
  437cd0:	csel	x21, x1, x3, eq  // eq = none
  437cd4:	mov	x0, #0x50                  	// #80
  437cd8:	bl	404310 <malloc@plt>
  437cdc:	mov	x19, x0
  437ce0:	cbz	x0, 437d50 <argp_parse@@Base+0x4610>
  437ce4:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  437ce8:	add	x0, x0, #0x680
  437cec:	cmp	x20, #0x0
  437cf0:	csel	x20, x0, x20, eq  // eq = none
  437cf4:	str	x20, [x19, #40]
  437cf8:	mov	x0, x19
  437cfc:	bl	437424 <argp_parse@@Base+0x3ce4>
  437d00:	and	w0, w0, #0xff
  437d04:	cbz	w0, 437d68 <argp_parse@@Base+0x4628>
  437d08:	mov	x1, x20
  437d0c:	mov	x0, x24
  437d10:	bl	4374e0 <argp_parse@@Base+0x3da0>
  437d14:	mov	x20, x0
  437d18:	str	x0, [x19, #16]
  437d1c:	cbz	x0, 437d68 <argp_parse@@Base+0x4628>
  437d20:	mov	x1, #0x10                  	// #16
  437d24:	bl	4044d0 <calloc@plt>
  437d28:	str	x0, [x19]
  437d2c:	cbz	x0, 437d68 <argp_parse@@Base+0x4628>
  437d30:	add	x20, x0, x20, lsl #4
  437d34:	str	x20, [x19, #8]
  437d38:	str	xzr, [x19, #24]
  437d3c:	str	xzr, [x19, #32]
  437d40:	str	x22, [x19, #48]
  437d44:	str	x21, [x19, #56]
  437d48:	str	x23, [x19, #64]
  437d4c:	str	xzr, [x19, #72]
  437d50:	mov	x0, x19
  437d54:	ldp	x19, x20, [sp, #16]
  437d58:	ldp	x21, x22, [sp, #32]
  437d5c:	ldp	x23, x24, [sp, #48]
  437d60:	ldp	x29, x30, [sp], #64
  437d64:	ret
  437d68:	mov	x0, x19
  437d6c:	bl	4047c0 <free@plt>
  437d70:	mov	x19, #0x0                   	// #0
  437d74:	b	437d50 <argp_parse@@Base+0x4610>
  437d78:	stp	x29, x30, [sp, #-48]!
  437d7c:	mov	x29, sp
  437d80:	stp	x19, x20, [sp, #16]
  437d84:	str	x21, [sp, #32]
  437d88:	mov	x20, x0
  437d8c:	ldr	x21, [x0]
  437d90:	ldr	x0, [x0, #8]
  437d94:	cmp	x21, x0
  437d98:	b.cc	437e0c <argp_parse@@Base+0x46cc>  // b.lo, b.ul, b.last
  437d9c:	str	xzr, [x20, #24]
  437da0:	str	xzr, [x20, #32]
  437da4:	ldp	x19, x20, [sp, #16]
  437da8:	ldr	x21, [sp, #32]
  437dac:	ldp	x29, x30, [sp], #48
  437db0:	ret
  437db4:	str	xzr, [x19]
  437db8:	ldr	x0, [x19, #8]
  437dbc:	ldr	x1, [x20, #72]
  437dc0:	str	x1, [x19, #8]
  437dc4:	str	x19, [x20, #72]
  437dc8:	cbz	x0, 437de4 <argp_parse@@Base+0x46a4>
  437dcc:	mov	x19, x0
  437dd0:	ldr	x1, [x20, #64]
  437dd4:	cbz	x1, 437db4 <argp_parse@@Base+0x4674>
  437dd8:	ldr	x0, [x19]
  437ddc:	blr	x1
  437de0:	b	437db4 <argp_parse@@Base+0x4674>
  437de4:	ldr	x1, [x20, #64]
  437de8:	cbz	x1, 437df4 <argp_parse@@Base+0x46b4>
  437dec:	ldr	x0, [x21]
  437df0:	blr	x1
  437df4:	str	xzr, [x21]
  437df8:	str	xzr, [x21, #8]
  437dfc:	add	x21, x21, #0x10
  437e00:	ldr	x0, [x20, #8]
  437e04:	cmp	x0, x21
  437e08:	b.ls	437d9c <argp_parse@@Base+0x465c>  // b.plast
  437e0c:	ldr	x0, [x21]
  437e10:	cbz	x0, 437dfc <argp_parse@@Base+0x46bc>
  437e14:	ldr	x19, [x21, #8]
  437e18:	cbnz	x19, 437dd0 <argp_parse@@Base+0x4690>
  437e1c:	b	437de4 <argp_parse@@Base+0x46a4>
  437e20:	stp	x29, x30, [sp, #-48]!
  437e24:	mov	x29, sp
  437e28:	stp	x19, x20, [sp, #16]
  437e2c:	str	x21, [sp, #32]
  437e30:	mov	x21, x0
  437e34:	ldr	x0, [x0, #64]
  437e38:	cbz	x0, 437e8c <argp_parse@@Base+0x474c>
  437e3c:	ldr	x0, [x21, #32]
  437e40:	cbz	x0, 437e8c <argp_parse@@Base+0x474c>
  437e44:	ldr	x20, [x21]
  437e48:	ldr	x0, [x21, #8]
  437e4c:	cmp	x20, x0
  437e50:	b.cc	437e68 <argp_parse@@Base+0x4728>  // b.lo, b.ul, b.last
  437e54:	b	437e9c <argp_parse@@Base+0x475c>
  437e58:	add	x20, x20, #0x10
  437e5c:	ldr	x0, [x21, #8]
  437e60:	cmp	x0, x20
  437e64:	b.ls	437e8c <argp_parse@@Base+0x474c>  // b.plast
  437e68:	ldr	x0, [x20]
  437e6c:	cbz	x0, 437e58 <argp_parse@@Base+0x4718>
  437e70:	mov	x19, x20
  437e74:	ldr	x1, [x21, #64]
  437e78:	ldr	x0, [x19]
  437e7c:	blr	x1
  437e80:	ldr	x19, [x19, #8]
  437e84:	cbnz	x19, 437e74 <argp_parse@@Base+0x4734>
  437e88:	b	437e58 <argp_parse@@Base+0x4718>
  437e8c:	ldr	x20, [x21]
  437e90:	ldr	x0, [x21, #8]
  437e94:	cmp	x20, x0
  437e98:	b.cc	437ee4 <argp_parse@@Base+0x47a4>  // b.lo, b.ul, b.last
  437e9c:	ldr	x19, [x21, #72]
  437ea0:	cbz	x19, 437eb4 <argp_parse@@Base+0x4774>
  437ea4:	mov	x0, x19
  437ea8:	ldr	x19, [x19, #8]
  437eac:	bl	4047c0 <free@plt>
  437eb0:	cbnz	x19, 437ea4 <argp_parse@@Base+0x4764>
  437eb4:	ldr	x0, [x21]
  437eb8:	bl	4047c0 <free@plt>
  437ebc:	mov	x0, x21
  437ec0:	bl	4047c0 <free@plt>
  437ec4:	ldp	x19, x20, [sp, #16]
  437ec8:	ldr	x21, [sp, #32]
  437ecc:	ldp	x29, x30, [sp], #48
  437ed0:	ret
  437ed4:	add	x20, x20, #0x10
  437ed8:	ldr	x0, [x21, #8]
  437edc:	cmp	x0, x20
  437ee0:	b.ls	437e9c <argp_parse@@Base+0x475c>  // b.plast
  437ee4:	ldr	x19, [x20, #8]
  437ee8:	cbz	x19, 437ed4 <argp_parse@@Base+0x4794>
  437eec:	mov	x0, x19
  437ef0:	ldr	x19, [x19, #8]
  437ef4:	bl	4047c0 <free@plt>
  437ef8:	cbnz	x19, 437eec <argp_parse@@Base+0x47ac>
  437efc:	b	437ed4 <argp_parse@@Base+0x4794>
  437f00:	stp	x29, x30, [sp, #-128]!
  437f04:	mov	x29, sp
  437f08:	stp	x19, x20, [sp, #16]
  437f0c:	str	x21, [sp, #32]
  437f10:	mov	x19, x0
  437f14:	mov	x0, x1
  437f18:	ldr	x21, [x19, #40]
  437f1c:	mov	x1, x21
  437f20:	bl	4374e0 <argp_parse@@Base+0x3da0>
  437f24:	cbz	x0, 438018 <argp_parse@@Base+0x48d8>
  437f28:	mov	x20, x0
  437f2c:	ldr	x0, [x19, #16]
  437f30:	cmp	x0, x20
  437f34:	b.eq	438030 <argp_parse@@Base+0x48f0>  // b.none
  437f38:	mov	x1, #0x10                  	// #16
  437f3c:	mov	x0, x20
  437f40:	bl	4044d0 <calloc@plt>
  437f44:	str	x0, [sp, #48]
  437f48:	cbz	x0, 438038 <argp_parse@@Base+0x48f8>
  437f4c:	str	x20, [sp, #64]
  437f50:	add	x20, x0, x20, lsl #4
  437f54:	str	x20, [sp, #56]
  437f58:	str	xzr, [sp, #72]
  437f5c:	str	xzr, [sp, #80]
  437f60:	str	x21, [sp, #88]
  437f64:	ldr	x0, [x19, #48]
  437f68:	str	x0, [sp, #96]
  437f6c:	ldr	x0, [x19, #56]
  437f70:	str	x0, [sp, #104]
  437f74:	ldr	x0, [x19, #64]
  437f78:	str	x0, [sp, #112]
  437f7c:	ldr	x0, [x19, #72]
  437f80:	str	x0, [sp, #120]
  437f84:	mov	w2, #0x0                   	// #0
  437f88:	mov	x1, x19
  437f8c:	add	x0, sp, #0x30
  437f90:	bl	437604 <argp_parse@@Base+0x3ec4>
  437f94:	ands	w20, w0, #0xff
  437f98:	b.ne	437fe0 <argp_parse@@Base+0x48a0>  // b.any
  437f9c:	ldr	x0, [sp, #120]
  437fa0:	str	x0, [x19, #72]
  437fa4:	mov	w2, #0x1                   	// #1
  437fa8:	add	x1, sp, #0x30
  437fac:	mov	x0, x19
  437fb0:	bl	437604 <argp_parse@@Base+0x3ec4>
  437fb4:	and	w0, w0, #0xff
  437fb8:	cbz	w0, 438014 <argp_parse@@Base+0x48d4>
  437fbc:	mov	w2, #0x0                   	// #0
  437fc0:	add	x1, sp, #0x30
  437fc4:	mov	x0, x19
  437fc8:	bl	437604 <argp_parse@@Base+0x3ec4>
  437fcc:	and	w0, w0, #0xff
  437fd0:	cbz	w0, 438014 <argp_parse@@Base+0x48d4>
  437fd4:	ldr	x0, [sp, #48]
  437fd8:	bl	4047c0 <free@plt>
  437fdc:	b	43801c <argp_parse@@Base+0x48dc>
  437fe0:	ldr	x0, [x19]
  437fe4:	bl	4047c0 <free@plt>
  437fe8:	ldr	x0, [sp, #48]
  437fec:	str	x0, [x19]
  437ff0:	ldr	x0, [sp, #56]
  437ff4:	str	x0, [x19, #8]
  437ff8:	ldr	x0, [sp, #64]
  437ffc:	str	x0, [x19, #16]
  438000:	ldr	x0, [sp, #72]
  438004:	str	x0, [x19, #24]
  438008:	ldr	x0, [sp, #120]
  43800c:	str	x0, [x19, #72]
  438010:	b	43801c <argp_parse@@Base+0x48dc>
  438014:	bl	404660 <abort@plt>
  438018:	mov	w20, #0x0                   	// #0
  43801c:	mov	w0, w20
  438020:	ldp	x19, x20, [sp, #16]
  438024:	ldr	x21, [sp, #32]
  438028:	ldp	x29, x30, [sp], #128
  43802c:	ret
  438030:	mov	w20, #0x1                   	// #1
  438034:	b	43801c <argp_parse@@Base+0x48dc>
  438038:	mov	w20, #0x0                   	// #0
  43803c:	b	43801c <argp_parse@@Base+0x48dc>
  438040:	stp	x29, x30, [sp, #-64]!
  438044:	mov	x29, sp
  438048:	stp	x19, x20, [sp, #16]
  43804c:	str	x21, [sp, #32]
  438050:	cbz	x1, 438090 <argp_parse@@Base+0x4950>
  438054:	mov	x19, x0
  438058:	mov	x20, x1
  43805c:	mov	x21, x2
  438060:	mov	w3, #0x0                   	// #0
  438064:	add	x2, sp, #0x38
  438068:	bl	437760 <argp_parse@@Base+0x4020>
  43806c:	mov	x1, x0
  438070:	cbz	x0, 438094 <argp_parse@@Base+0x4954>
  438074:	mov	w0, #0x0                   	// #0
  438078:	cbz	x21, 438080 <argp_parse@@Base+0x4940>
  43807c:	str	x1, [x21]
  438080:	ldp	x19, x20, [sp, #16]
  438084:	ldr	x21, [sp, #32]
  438088:	ldp	x29, x30, [sp], #64
  43808c:	ret
  438090:	bl	404660 <abort@plt>
  438094:	ldr	x0, [x19, #24]
  438098:	ucvtf	s1, x0
  43809c:	ldr	x1, [x19, #40]
  4380a0:	ldr	x0, [x19, #16]
  4380a4:	ucvtf	s0, x0
  4380a8:	ldr	s2, [x1, #8]
  4380ac:	fmul	s0, s0, s2
  4380b0:	fcmpe	s1, s0
  4380b4:	b.gt	4380fc <argp_parse@@Base+0x49bc>
  4380b8:	ldr	x0, [sp, #56]
  4380bc:	ldr	x1, [x0]
  4380c0:	cbz	x1, 4381a8 <argp_parse@@Base+0x4a68>
  4380c4:	ldr	x1, [x19, #72]
  4380c8:	cbz	x1, 438190 <argp_parse@@Base+0x4a50>
  4380cc:	ldr	x0, [x1, #8]
  4380d0:	str	x0, [x19, #72]
  4380d4:	str	x20, [x1]
  4380d8:	ldr	x0, [sp, #56]
  4380dc:	ldr	x2, [x0, #8]
  4380e0:	str	x2, [x1, #8]
  4380e4:	str	x1, [x0, #8]
  4380e8:	ldr	x0, [x19, #32]
  4380ec:	add	x0, x0, #0x1
  4380f0:	str	x0, [x19, #32]
  4380f4:	mov	w0, #0x1                   	// #1
  4380f8:	b	438080 <argp_parse@@Base+0x4940>
  4380fc:	mov	x0, x19
  438100:	bl	437424 <argp_parse@@Base+0x3ce4>
  438104:	ldr	x1, [x19, #40]
  438108:	ldr	s2, [x1, #8]
  43810c:	ldr	x0, [x19, #16]
  438110:	ucvtf	s0, x0
  438114:	ldr	x0, [x19, #24]
  438118:	ucvtf	s1, x0
  43811c:	fmul	s3, s2, s0
  438120:	fcmpe	s1, s3
  438124:	b.le	4380b8 <argp_parse@@Base+0x4978>
  438128:	ldrb	w0, [x1, #16]
  43812c:	cbz	w0, 438180 <argp_parse@@Base+0x4a40>
  438130:	ldr	s1, [x1, #12]
  438134:	fmul	s0, s0, s1
  438138:	mov	w0, #0x5f800000            	// #1602224128
  43813c:	fmov	s1, w0
  438140:	mov	w0, #0xffffffff            	// #-1
  438144:	fcmpe	s0, s1
  438148:	b.ge	438080 <argp_parse@@Base+0x4940>  // b.tcont
  43814c:	fcvtzu	x1, s0
  438150:	mov	x0, x19
  438154:	bl	437f00 <argp_parse@@Base+0x47c0>
  438158:	and	w1, w0, #0xff
  43815c:	mov	w0, #0xffffffff            	// #-1
  438160:	cbz	w1, 438080 <argp_parse@@Base+0x4940>
  438164:	mov	w3, #0x0                   	// #0
  438168:	add	x2, sp, #0x38
  43816c:	mov	x1, x20
  438170:	mov	x0, x19
  438174:	bl	437760 <argp_parse@@Base+0x4020>
  438178:	cbz	x0, 4380b8 <argp_parse@@Base+0x4978>
  43817c:	bl	404660 <abort@plt>
  438180:	ldr	s1, [x1, #12]
  438184:	fmul	s0, s0, s1
  438188:	fmul	s0, s0, s2
  43818c:	b	438138 <argp_parse@@Base+0x49f8>
  438190:	mov	x0, #0x10                  	// #16
  438194:	bl	404310 <malloc@plt>
  438198:	mov	x1, x0
  43819c:	mov	w0, #0xffffffff            	// #-1
  4381a0:	cbz	x1, 438080 <argp_parse@@Base+0x4940>
  4381a4:	b	4380d4 <argp_parse@@Base+0x4994>
  4381a8:	str	x20, [x0]
  4381ac:	ldr	x0, [x19, #32]
  4381b0:	add	x0, x0, #0x1
  4381b4:	str	x0, [x19, #32]
  4381b8:	ldr	x0, [x19, #24]
  4381bc:	add	x0, x0, #0x1
  4381c0:	str	x0, [x19, #24]
  4381c4:	mov	w0, #0x1                   	// #1
  4381c8:	b	438080 <argp_parse@@Base+0x4940>
  4381cc:	stp	x29, x30, [sp, #-48]!
  4381d0:	mov	x29, sp
  4381d4:	str	x19, [sp, #16]
  4381d8:	mov	x19, x1
  4381dc:	add	x2, sp, #0x28
  4381e0:	bl	438040 <argp_parse@@Base+0x4900>
  4381e4:	cmn	w0, #0x1
  4381e8:	b.eq	438204 <argp_parse@@Base+0x4ac4>  // b.none
  4381ec:	cmp	w0, #0x0
  4381f0:	ldr	x0, [sp, #40]
  4381f4:	csel	x0, x0, x19, eq  // eq = none
  4381f8:	ldr	x19, [sp, #16]
  4381fc:	ldp	x29, x30, [sp], #48
  438200:	ret
  438204:	mov	x0, #0x0                   	// #0
  438208:	b	4381f8 <argp_parse@@Base+0x4ab8>
  43820c:	stp	x29, x30, [sp, #-64]!
  438210:	mov	x29, sp
  438214:	stp	x19, x20, [sp, #16]
  438218:	mov	x19, x0
  43821c:	mov	w3, #0x1                   	// #1
  438220:	add	x2, sp, #0x38
  438224:	bl	437760 <argp_parse@@Base+0x4020>
  438228:	mov	x20, x0
  43822c:	cbz	x0, 438248 <argp_parse@@Base+0x4b08>
  438230:	ldr	x0, [x19, #32]
  438234:	sub	x0, x0, #0x1
  438238:	str	x0, [x19, #32]
  43823c:	ldr	x0, [sp, #56]
  438240:	ldr	x0, [x0]
  438244:	cbz	x0, 438258 <argp_parse@@Base+0x4b18>
  438248:	mov	x0, x20
  43824c:	ldp	x19, x20, [sp, #16]
  438250:	ldp	x29, x30, [sp], #64
  438254:	ret
  438258:	ldr	x0, [x19, #24]
  43825c:	sub	x0, x0, #0x1
  438260:	str	x0, [x19, #24]
  438264:	ucvtf	s0, x0
  438268:	ldr	x1, [x19, #40]
  43826c:	ldr	x0, [x19, #16]
  438270:	ucvtf	s1, x0
  438274:	ldr	s2, [x1]
  438278:	fmul	s1, s1, s2
  43827c:	fcmpe	s0, s1
  438280:	b.pl	438248 <argp_parse@@Base+0x4b08>  // b.nfrst
  438284:	mov	x0, x19
  438288:	bl	437424 <argp_parse@@Base+0x3ce4>
  43828c:	ldr	x1, [x19, #40]
  438290:	ldr	x0, [x19, #16]
  438294:	ucvtf	s0, x0
  438298:	ldr	x0, [x19, #24]
  43829c:	ucvtf	s2, x0
  4382a0:	ldr	s1, [x1]
  4382a4:	fmul	s1, s0, s1
  4382a8:	fcmpe	s2, s1
  4382ac:	b.pl	438248 <argp_parse@@Base+0x4b08>  // b.nfrst
  4382b0:	ldrb	w0, [x1, #16]
  4382b4:	cbz	w0, 4382fc <argp_parse@@Base+0x4bbc>
  4382b8:	ldr	s1, [x1, #4]
  4382bc:	fmul	s0, s0, s1
  4382c0:	fcvtzu	x1, s0
  4382c4:	mov	x0, x19
  4382c8:	bl	437f00 <argp_parse@@Base+0x47c0>
  4382cc:	and	w0, w0, #0xff
  4382d0:	cbnz	w0, 438248 <argp_parse@@Base+0x4b08>
  4382d4:	str	x21, [sp, #32]
  4382d8:	ldr	x21, [x19, #72]
  4382dc:	cbz	x21, 4382f0 <argp_parse@@Base+0x4bb0>
  4382e0:	mov	x0, x21
  4382e4:	ldr	x21, [x21, #8]
  4382e8:	bl	4047c0 <free@plt>
  4382ec:	cbnz	x21, 4382e0 <argp_parse@@Base+0x4ba0>
  4382f0:	str	xzr, [x19, #72]
  4382f4:	ldr	x21, [sp, #32]
  4382f8:	b	438248 <argp_parse@@Base+0x4b08>
  4382fc:	ldr	s1, [x1, #4]
  438300:	fmul	s0, s0, s1
  438304:	ldr	s1, [x1, #8]
  438308:	fmul	s0, s0, s1
  43830c:	fcvtzu	x1, s0
  438310:	b	4382c4 <argp_parse@@Base+0x4b84>
  438314:	stp	x29, x30, [sp, #-48]!
  438318:	mov	x29, sp
  43831c:	str	q0, [sp, #32]
  438320:	cmp	w0, #0x1
  438324:	b.eq	438388 <argp_parse@@Base+0x4c48>  // b.none
  438328:	stp	x19, x20, [sp, #16]
  43832c:	mov	w19, w0
  438330:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  438334:	add	x0, x0, #0x710
  438338:	ldr	q1, [x0]
  43833c:	bl	451d34 <_obstack_memory_used@@Base+0x10b98>
  438340:	tbz	w0, #31, 438384 <argp_parse@@Base+0x4c44>
  438344:	ldr	q0, [sp, #32]
  438348:	bl	452660 <_obstack_memory_used@@Base+0x114c4>
  43834c:	mov	x20, x0
  438350:	mov	w0, #0x0                   	// #0
  438354:	cbnz	w19, 438370 <argp_parse@@Base+0x4c30>
  438358:	mov	x0, x20
  43835c:	bl	45276c <_obstack_memory_used@@Base+0x115d0>
  438360:	ldr	q1, [sp, #32]
  438364:	bl	451c10 <_obstack_memory_used@@Base+0x10a74>
  438368:	cmp	w0, #0x0
  43836c:	cset	w0, ne  // ne = any
  438370:	add	x0, x20, w0, sxtw
  438374:	bl	45276c <_obstack_memory_used@@Base+0x115d0>
  438378:	str	q0, [sp, #32]
  43837c:	ldp	x19, x20, [sp, #16]
  438380:	b	438388 <argp_parse@@Base+0x4c48>
  438384:	ldp	x19, x20, [sp, #16]
  438388:	ldr	q0, [sp, #32]
  43838c:	ldp	x29, x30, [sp], #48
  438390:	ret
  438394:	stp	x29, x30, [sp, #-224]!
  438398:	mov	x29, sp
  43839c:	stp	x19, x20, [sp, #16]
  4383a0:	stp	x21, x22, [sp, #32]
  4383a4:	stp	x23, x24, [sp, #48]
  4383a8:	stp	x25, x26, [sp, #64]
  4383ac:	stp	x27, x28, [sp, #80]
  4383b0:	mov	x23, x0
  4383b4:	str	x1, [sp, #144]
  4383b8:	mov	w24, w2
  4383bc:	mov	x21, x3
  4383c0:	mov	x26, x4
  4383c4:	and	w0, w2, #0x3
  4383c8:	str	w0, [sp, #168]
  4383cc:	ands	w0, w2, #0x20
  4383d0:	str	w0, [sp, #172]
  4383d4:	mov	w25, #0x400                 	// #1024
  4383d8:	mov	w0, #0x3e8                 	// #1000
  4383dc:	csel	w25, w25, w0, ne  // ne = any
  4383e0:	bl	404210 <localeconv@plt>
  4383e4:	mov	x19, x0
  4383e8:	ldr	x20, [x0]
  4383ec:	mov	x0, x20
  4383f0:	bl	403ff0 <strlen@plt>
  4383f4:	str	x0, [sp, #160]
  4383f8:	sub	x0, x0, #0x1
  4383fc:	cmp	x0, #0xf
  438400:	b.ls	438414 <argp_parse@@Base+0x4cd4>  // b.plast
  438404:	mov	x0, #0x1                   	// #1
  438408:	str	x0, [sp, #160]
  43840c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x15e64>
  438410:	add	x20, x0, #0x340
  438414:	ldr	x28, [x19, #16]
  438418:	ldr	x27, [x19, #8]
  43841c:	mov	x0, x27
  438420:	bl	403ff0 <strlen@plt>
  438424:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  438428:	add	x1, x1, #0x7f8
  43842c:	cmp	x0, #0x10
  438430:	csel	x27, x1, x27, hi  // hi = pmore
  438434:	ldr	x0, [sp, #144]
  438438:	add	x0, x0, #0x287
  43843c:	str	x0, [sp, #152]
  438440:	cmp	x26, x21
  438444:	b.hi	4385dc <argp_parse@@Base+0x4e9c>  // b.pmore
  438448:	udiv	x0, x21, x26
  43844c:	msub	x0, x0, x26, x21
  438450:	cbnz	x0, 438468 <argp_parse@@Base+0x4d28>
  438454:	udiv	x0, x21, x26
  438458:	mul	x19, x23, x0
  43845c:	udiv	x0, x19, x0
  438460:	cmp	x0, x23
  438464:	b.eq	4386cc <argp_parse@@Base+0x4f8c>  // b.none
  438468:	mov	x0, x21
  43846c:	bl	45276c <_obstack_memory_used@@Base+0x115d0>
  438470:	str	q0, [sp, #96]
  438474:	mov	x0, x26
  438478:	bl	45276c <_obstack_memory_used@@Base+0x115d0>
  43847c:	mov	v1.16b, v0.16b
  438480:	ldr	q0, [sp, #96]
  438484:	bl	45135c <_obstack_memory_used@@Base+0x101c0>
  438488:	str	q0, [sp, #96]
  43848c:	mov	x0, x23
  438490:	bl	45276c <_obstack_memory_used@@Base+0x115d0>
  438494:	mov	v1.16b, v0.16b
  438498:	ldr	q0, [sp, #96]
  43849c:	bl	451ebc <_obstack_memory_used@@Base+0x10d20>
  4384a0:	str	q0, [sp, #128]
  4384a4:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  4384a8:	add	x0, x0, #0x720
  4384ac:	ldr	q0, [x0]
  4384b0:	str	q0, [sp, #96]
  4384b4:	mov	w23, #0x0                   	// #0
  4384b8:	tbz	w24, #4, 438630 <argp_parse@@Base+0x4ef0>
  4384bc:	mov	w0, w25
  4384c0:	bl	452610 <_obstack_memory_used@@Base+0x11474>
  4384c4:	str	q0, [sp, #112]
  4384c8:	mov	v1.16b, v0.16b
  4384cc:	ldr	q0, [sp, #96]
  4384d0:	bl	451ebc <_obstack_memory_used@@Base+0x10d20>
  4384d4:	str	q0, [sp, #96]
  4384d8:	add	w23, w23, #0x1
  4384dc:	mov	v1.16b, v0.16b
  4384e0:	ldr	q0, [sp, #112]
  4384e4:	bl	451ebc <_obstack_memory_used@@Base+0x10d20>
  4384e8:	ldr	q1, [sp, #128]
  4384ec:	bl	451d34 <_obstack_memory_used@@Base+0x10b98>
  4384f0:	cmp	w0, #0x0
  4384f4:	cset	w0, le
  4384f8:	cmp	w23, #0x7
  4384fc:	cset	w1, le
  438500:	tst	w1, w0
  438504:	b.ne	4384bc <argp_parse@@Base+0x4d7c>  // b.any
  438508:	ldr	q1, [sp, #96]
  43850c:	ldr	q0, [sp, #128]
  438510:	bl	45135c <_obstack_memory_used@@Base+0x101c0>
  438514:	str	q0, [sp, #96]
  438518:	ldr	w0, [sp, #168]
  43851c:	bl	438314 <argp_parse@@Base+0x4bd4>
  438520:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x19e64>
  438524:	add	x3, x3, #0x6a0
  438528:	mov	x2, #0xffffffffffffffff    	// #-1
  43852c:	mov	w1, #0x1                   	// #1
  438530:	ldr	x20, [sp, #144]
  438534:	mov	x0, x20
  438538:	bl	404010 <__sprintf_chk@plt>
  43853c:	mov	x0, x20
  438540:	bl	403ff0 <strlen@plt>
  438544:	mov	x22, x0
  438548:	ldr	x0, [sp, #160]
  43854c:	add	x19, x0, #0x1
  438550:	ldr	w0, [sp, #172]
  438554:	cmp	w0, #0x0
  438558:	cset	x0, eq  // eq = none
  43855c:	add	x0, x0, #0x1
  438560:	add	x0, x0, x19
  438564:	cmp	x0, x22
  438568:	b.cc	438580 <argp_parse@@Base+0x4e40>  // b.lo, b.ul, b.last
  43856c:	tbz	w24, #3, 43866c <argp_parse@@Base+0x4f2c>
  438570:	add	x0, x20, x22
  438574:	ldurb	w0, [x0, #-1]
  438578:	cmp	w0, #0x30
  43857c:	b.ne	43866c <argp_parse@@Base+0x4f2c>  // b.any
  438580:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  438584:	add	x0, x0, #0x730
  438588:	ldr	q1, [x0]
  43858c:	ldr	q0, [sp, #96]
  438590:	bl	451ebc <_obstack_memory_used@@Base+0x10d20>
  438594:	ldr	w0, [sp, #168]
  438598:	bl	438314 <argp_parse@@Base+0x4bd4>
  43859c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  4385a0:	add	x0, x0, #0x730
  4385a4:	ldr	q1, [x0]
  4385a8:	bl	45135c <_obstack_memory_used@@Base+0x101c0>
  4385ac:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x19e64>
  4385b0:	add	x3, x3, #0x698
  4385b4:	mov	x2, #0xffffffffffffffff    	// #-1
  4385b8:	mov	w1, #0x1                   	// #1
  4385bc:	ldr	x19, [sp, #144]
  4385c0:	mov	x0, x19
  4385c4:	bl	404010 <__sprintf_chk@plt>
  4385c8:	mov	x0, x19
  4385cc:	bl	403ff0 <strlen@plt>
  4385d0:	mov	x22, x0
  4385d4:	mov	x19, #0x0                   	// #0
  4385d8:	b	43866c <argp_parse@@Base+0x4f2c>
  4385dc:	cbz	x21, 438468 <argp_parse@@Base+0x4d28>
  4385e0:	udiv	x0, x26, x21
  4385e4:	msub	x0, x0, x21, x26
  4385e8:	cbnz	x0, 438468 <argp_parse@@Base+0x4d28>
  4385ec:	udiv	x21, x26, x21
  4385f0:	udiv	x19, x23, x21
  4385f4:	msub	x0, x19, x21, x23
  4385f8:	add	x0, x0, x0, lsl #2
  4385fc:	lsl	x0, x0, #1
  438600:	udiv	x1, x0, x21
  438604:	msub	x0, x1, x21, x0
  438608:	lsl	x2, x0, #1
  43860c:	cmp	x21, x0, lsl #1
  438610:	b.ls	438620 <argp_parse@@Base+0x4ee0>  // b.plast
  438614:	cmp	x2, #0x0
  438618:	cset	w2, ne  // ne = any
  43861c:	b	4386d4 <argp_parse@@Base+0x4f94>
  438620:	cmp	x21, x2
  438624:	cset	w2, cc  // cc = lo, ul, last
  438628:	add	w2, w2, #0x2
  43862c:	b	4386d4 <argp_parse@@Base+0x4f94>
  438630:	ldr	q0, [sp, #128]
  438634:	ldr	w0, [sp, #168]
  438638:	bl	438314 <argp_parse@@Base+0x4bd4>
  43863c:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x19e64>
  438640:	add	x3, x3, #0x698
  438644:	mov	x2, #0xffffffffffffffff    	// #-1
  438648:	mov	w1, #0x1                   	// #1
  43864c:	ldr	x19, [sp, #144]
  438650:	mov	x0, x19
  438654:	bl	404010 <__sprintf_chk@plt>
  438658:	mov	x0, x19
  43865c:	bl	403ff0 <strlen@plt>
  438660:	mov	x22, x0
  438664:	mov	x19, #0x0                   	// #0
  438668:	mov	w23, #0xffffffff            	// #-1
  43866c:	ldr	x0, [sp, #152]
  438670:	sub	x21, x0, x22
  438674:	mov	x2, x22
  438678:	ldr	x1, [sp, #144]
  43867c:	mov	x0, x21
  438680:	bl	403f80 <memmove@plt>
  438684:	sub	x22, x22, x19
  438688:	add	x22, x21, x22
  43868c:	tbnz	w24, #2, 4388d4 <argp_parse@@Base+0x5194>
  438690:	tbz	w24, #7, 4386a4 <argp_parse@@Base+0x4f64>
  438694:	tbnz	w23, #31, 438958 <argp_parse@@Base+0x5218>
  438698:	and	w0, w24, #0x100
  43869c:	orr	w1, w0, w23
  4386a0:	cbnz	w1, 43899c <argp_parse@@Base+0x525c>
  4386a4:	ldr	x0, [sp, #152]
  4386a8:	strb	wzr, [x0]
  4386ac:	mov	x0, x21
  4386b0:	ldp	x19, x20, [sp, #16]
  4386b4:	ldp	x21, x22, [sp, #32]
  4386b8:	ldp	x23, x24, [sp, #48]
  4386bc:	ldp	x25, x26, [sp, #64]
  4386c0:	ldp	x27, x28, [sp, #80]
  4386c4:	ldp	x29, x30, [sp], #224
  4386c8:	ret
  4386cc:	mov	w2, #0x0                   	// #0
  4386d0:	mov	w1, #0x0                   	// #0
  4386d4:	and	w21, w24, #0x10
  4386d8:	tbz	w24, #4, 4387f4 <argp_parse@@Base+0x50b4>
  4386dc:	mov	w4, w25
  4386e0:	cmp	x19, w25, uxtw
  4386e4:	b.cc	438824 <argp_parse@@Base+0x50e4>  // b.lo, b.ul, b.last
  4386e8:	mov	w23, #0x0                   	// #0
  4386ec:	b	438710 <argp_parse@@Base+0x4fd0>
  4386f0:	add	w0, w2, w0
  4386f4:	cmp	w0, w25
  4386f8:	cset	w2, hi  // hi = pmore
  4386fc:	add	w2, w2, #0x2
  438700:	add	w23, w23, #0x1
  438704:	cmp	x4, x3
  438708:	ccmp	w23, #0x7, #0x0, ls  // ls = plast
  43870c:	b.gt	438748 <argp_parse@@Base+0x5008>
  438710:	udiv	x3, x19, x4
  438714:	msub	x19, x3, x4, x19
  438718:	add	w19, w19, w19, lsl #2
  43871c:	add	w19, w1, w19, lsl #1
  438720:	udiv	w1, w19, w25
  438724:	msub	w0, w1, w25, w19
  438728:	asr	w19, w2, #1
  43872c:	add	w0, w19, w0, lsl #1
  438730:	mov	x19, x3
  438734:	cmp	w25, w0
  438738:	b.ls	4386f0 <argp_parse@@Base+0x4fb0>  // b.plast
  43873c:	cmn	w2, w0
  438740:	cset	w2, ne  // ne = any
  438744:	b	438700 <argp_parse@@Base+0x4fc0>
  438748:	ldr	x22, [sp, #152]
  43874c:	cmp	x19, #0x9
  438750:	b.hi	4387fc <argp_parse@@Base+0x50bc>  // b.pmore
  438754:	ldr	w0, [sp, #168]
  438758:	cmp	w0, #0x1
  43875c:	b.eq	4387b8 <argp_parse@@Base+0x5078>  // b.none
  438760:	ldr	w0, [sp, #168]
  438764:	cmp	w0, #0x0
  438768:	cset	w0, eq  // eq = none
  43876c:	cmp	w2, #0x0
  438770:	cset	w3, gt
  438774:	and	w0, w0, w3
  438778:	cbz	w0, 438a1c <argp_parse@@Base+0x52dc>
  43877c:	add	w1, w1, #0x1
  438780:	cmp	w1, #0xa
  438784:	b.eq	4387cc <argp_parse@@Base+0x508c>  // b.none
  438788:	ldr	x0, [sp, #144]
  43878c:	add	x22, x0, #0x286
  438790:	add	w1, w1, #0x30
  438794:	strb	w1, [x0, #646]
  438798:	ldr	x2, [sp, #160]
  43879c:	sub	x22, x22, x2
  4387a0:	mov	x1, x20
  4387a4:	mov	x0, x22
  4387a8:	bl	403f70 <memcpy@plt>
  4387ac:	mov	w2, #0x0                   	// #0
  4387b0:	mov	w1, #0x0                   	// #0
  4387b4:	b	4387fc <argp_parse@@Base+0x50bc>
  4387b8:	and	w0, w1, #0x1
  4387bc:	add	w0, w0, w2
  4387c0:	cmp	w0, #0x2
  4387c4:	cset	w0, gt
  4387c8:	b	438778 <argp_parse@@Base+0x5038>
  4387cc:	add	x19, x19, #0x1
  4387d0:	cmp	x19, #0x9
  4387d4:	b.ls	4387e8 <argp_parse@@Base+0x50a8>  // b.plast
  4387d8:	ldr	x22, [sp, #152]
  4387dc:	mov	w2, #0x0                   	// #0
  4387e0:	mov	w1, #0x0                   	// #0
  4387e4:	b	4387fc <argp_parse@@Base+0x50bc>
  4387e8:	mov	w2, #0x0                   	// #0
  4387ec:	mov	w1, #0x0                   	// #0
  4387f0:	b	438a20 <argp_parse@@Base+0x52e0>
  4387f4:	ldr	x22, [sp, #152]
  4387f8:	mov	w23, #0xffffffff            	// #-1
  4387fc:	ldr	w0, [sp, #168]
  438800:	cmp	w0, #0x1
  438804:	b.eq	438830 <argp_parse@@Base+0x50f0>  // b.none
  438808:	mov	w0, #0x0                   	// #0
  43880c:	ldr	w3, [sp, #168]
  438810:	cbnz	w3, 438848 <argp_parse@@Base+0x5108>
  438814:	add	w1, w1, w2
  438818:	cmp	w1, #0x0
  43881c:	cset	w0, gt
  438820:	b	438848 <argp_parse@@Base+0x5108>
  438824:	ldr	x22, [sp, #152]
  438828:	mov	w23, #0x0                   	// #0
  43882c:	b	4387fc <argp_parse@@Base+0x50bc>
  438830:	and	x0, x19, #0x1
  438834:	add	x2, x0, w2, sxtw
  438838:	cmp	x2, #0x0
  43883c:	cinc	w1, w1, ne  // ne = any
  438840:	cmp	w1, #0x5
  438844:	cset	w0, gt
  438848:	cbz	w0, 438860 <argp_parse@@Base+0x5120>
  43884c:	add	x19, x19, #0x1
  438850:	cbz	w21, 438860 <argp_parse@@Base+0x5120>
  438854:	cmp	x19, w25, uxtw
  438858:	ccmp	w23, #0x7, #0x0, eq  // eq = none
  43885c:	b.le	438898 <argp_parse@@Base+0x5158>
  438860:	mov	x21, x22
  438864:	mov	x2, #0xcccccccccccccccc    	// #-3689348814741910324
  438868:	movk	x2, #0xcccd
  43886c:	umulh	x0, x19, x2
  438870:	lsr	x0, x0, #3
  438874:	add	x1, x0, x0, lsl #2
  438878:	sub	x1, x19, x1, lsl #1
  43887c:	add	w1, w1, #0x30
  438880:	strb	w1, [x21, #-1]!
  438884:	mov	x1, x19
  438888:	mov	x19, x0
  43888c:	cmp	x1, #0x9
  438890:	b.hi	43886c <argp_parse@@Base+0x512c>  // b.pmore
  438894:	b	43868c <argp_parse@@Base+0x4f4c>
  438898:	add	w23, w23, #0x1
  43889c:	tbz	w24, #3, 4388b0 <argp_parse@@Base+0x5170>
  4388a0:	sub	x21, x22, #0x1
  4388a4:	mov	w0, #0x31                  	// #49
  4388a8:	sturb	w0, [x22, #-1]
  4388ac:	b	43868c <argp_parse@@Base+0x4f4c>
  4388b0:	mov	w0, #0x30                  	// #48
  4388b4:	sturb	w0, [x22, #-1]
  4388b8:	ldr	x2, [sp, #160]
  4388bc:	mvn	x0, x2
  4388c0:	add	x22, x22, x0
  4388c4:	mov	x1, x20
  4388c8:	mov	x0, x22
  4388cc:	bl	403f70 <memcpy@plt>
  4388d0:	b	4388a0 <argp_parse@@Base+0x5160>
  4388d4:	sub	x20, x22, x21
  4388d8:	mov	x0, x27
  4388dc:	bl	403ff0 <strlen@plt>
  4388e0:	str	x0, [sp, #96]
  4388e4:	mov	x3, #0x29                  	// #41
  4388e8:	mov	x2, x20
  4388ec:	mov	x1, x21
  4388f0:	add	x0, sp, #0xb0
  4388f4:	bl	404250 <__memcpy_chk@plt>
  4388f8:	mov	x19, #0xffffffffffffffff    	// #-1
  4388fc:	b	43893c <argp_parse@@Base+0x51fc>
  438900:	cmp	x19, x20
  438904:	csel	x19, x19, x20, ls  // ls = plast
  438908:	sub	x21, x22, x19
  43890c:	sub	x20, x20, x19
  438910:	mov	x2, x19
  438914:	add	x0, sp, #0xb0
  438918:	add	x1, x0, x20
  43891c:	mov	x0, x21
  438920:	bl	403f70 <memcpy@plt>
  438924:	cbz	x20, 438690 <argp_parse@@Base+0x4f50>
  438928:	ldr	x2, [sp, #96]
  43892c:	sub	x22, x21, x2
  438930:	mov	x1, x27
  438934:	mov	x0, x22
  438938:	bl	403f70 <memcpy@plt>
  43893c:	ldrb	w0, [x28]
  438940:	cbz	w0, 438900 <argp_parse@@Base+0x51c0>
  438944:	and	x19, x0, #0xff
  438948:	cmp	w0, #0xff
  43894c:	csel	x19, x19, x20, ne  // ne = any
  438950:	add	x28, x28, #0x1
  438954:	b	438900 <argp_parse@@Base+0x51c0>
  438958:	mov	w23, #0x1                   	// #1
  43895c:	mov	x0, #0x1                   	// #1
  438960:	mov	w25, w25
  438964:	cmp	x26, x0
  438968:	b.ls	438994 <argp_parse@@Base+0x5254>  // b.plast
  43896c:	mul	x0, x0, x25
  438970:	cmp	x26, x0
  438974:	b.ls	438698 <argp_parse@@Base+0x4f58>  // b.plast
  438978:	add	w23, w23, #0x1
  43897c:	cmp	w23, #0x8
  438980:	b.ne	43896c <argp_parse@@Base+0x522c>  // b.any
  438984:	and	w0, w24, #0x100
  438988:	tbnz	w24, #6, 4389a4 <argp_parse@@Base+0x5264>
  43898c:	ldr	x1, [sp, #152]
  438990:	b	4389b8 <argp_parse@@Base+0x5278>
  438994:	mov	w23, #0x0                   	// #0
  438998:	b	438698 <argp_parse@@Base+0x4f58>
  43899c:	ldr	x1, [sp, #152]
  4389a0:	tbz	w24, #6, 4389b4 <argp_parse@@Base+0x5274>
  4389a4:	ldr	x3, [sp, #144]
  4389a8:	add	x1, x3, #0x288
  4389ac:	mov	w2, #0x20                  	// #32
  4389b0:	strb	w2, [x3, #647]
  4389b4:	cbz	w23, 438a00 <argp_parse@@Base+0x52c0>
  4389b8:	ldr	w4, [sp, #172]
  4389bc:	cmp	w4, #0x0
  4389c0:	ccmp	w23, #0x1, #0x0, eq  // eq = none
  4389c4:	b.eq	438a30 <argp_parse@@Base+0x52f0>  // b.none
  4389c8:	mov	x3, x1
  4389cc:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x19e64>
  4389d0:	add	x2, x2, #0x740
  4389d4:	ldrb	w2, [x2, w23, sxtw]
  4389d8:	strb	w2, [x3], #1
  4389dc:	str	x3, [sp, #152]
  4389e0:	cbz	w0, 4386a4 <argp_parse@@Base+0x4f64>
  4389e4:	cbz	w4, 4389f8 <argp_parse@@Base+0x52b8>
  4389e8:	mov	w0, #0x69                  	// #105
  4389ec:	strb	w0, [x1, #1]
  4389f0:	add	x1, x1, #0x2
  4389f4:	b	438a04 <argp_parse@@Base+0x52c4>
  4389f8:	ldr	x1, [sp, #152]
  4389fc:	b	438a04 <argp_parse@@Base+0x52c4>
  438a00:	cbz	w0, 438a14 <argp_parse@@Base+0x52d4>
  438a04:	mov	w0, #0x42                  	// #66
  438a08:	strb	w0, [x1], #1
  438a0c:	str	x1, [sp, #152]
  438a10:	b	4386a4 <argp_parse@@Base+0x4f64>
  438a14:	str	x1, [sp, #152]
  438a18:	b	4386a4 <argp_parse@@Base+0x4f64>
  438a1c:	cbnz	w1, 438788 <argp_parse@@Base+0x5048>
  438a20:	tbz	w24, #3, 438788 <argp_parse@@Base+0x5048>
  438a24:	ldr	x22, [sp, #152]
  438a28:	mov	w1, #0x0                   	// #0
  438a2c:	b	4387fc <argp_parse@@Base+0x50bc>
  438a30:	mov	x2, x1
  438a34:	mov	w1, #0x6b                  	// #107
  438a38:	strb	w1, [x2], #1
  438a3c:	mov	x1, x2
  438a40:	str	x2, [sp, #152]
  438a44:	cbnz	w0, 438a04 <argp_parse@@Base+0x52c4>
  438a48:	b	4386a4 <argp_parse@@Base+0x4f64>
  438a4c:	stp	x29, x30, [sp, #-64]!
  438a50:	mov	x29, sp
  438a54:	stp	x19, x20, [sp, #16]
  438a58:	stp	x21, x22, [sp, #32]
  438a5c:	mov	x19, x0
  438a60:	mov	x22, x1
  438a64:	mov	x20, x2
  438a68:	cbz	x0, 438ad8 <argp_parse@@Base+0x5398>
  438a6c:	ldrb	w0, [x19]
  438a70:	mov	w21, #0x0                   	// #0
  438a74:	cmp	w0, #0x27
  438a78:	b.eq	438b28 <argp_parse@@Base+0x53e8>  // b.none
  438a7c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  438a80:	add	x1, x1, #0x740
  438a84:	mov	x3, #0x4                   	// #4
  438a88:	add	x2, x1, #0x10
  438a8c:	add	x1, x1, #0x18
  438a90:	mov	x0, x19
  438a94:	bl	42fc38 <wcrtomb@plt+0x2b018>
  438a98:	tbnz	w0, #31, 438b34 <argp_parse@@Base+0x53f4>
  438a9c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  438aa0:	add	x1, x1, #0x740
  438aa4:	add	x0, x1, w0, sxtw #2
  438aa8:	ldr	w0, [x0, #16]
  438aac:	orr	w21, w21, w0
  438ab0:	mov	x0, #0x1                   	// #1
  438ab4:	str	x0, [x20]
  438ab8:	str	w21, [x22]
  438abc:	mov	w0, #0x0                   	// #0
  438ac0:	ldr	x1, [x20]
  438ac4:	cbz	x1, 438bc0 <argp_parse@@Base+0x5480>
  438ac8:	ldp	x19, x20, [sp, #16]
  438acc:	ldp	x21, x22, [sp, #32]
  438ad0:	ldp	x29, x30, [sp], #64
  438ad4:	ret
  438ad8:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  438adc:	add	x0, x0, #0x6a8
  438ae0:	bl	404af0 <getenv@plt>
  438ae4:	mov	x19, x0
  438ae8:	cbnz	x0, 438a6c <argp_parse@@Base+0x532c>
  438aec:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  438af0:	add	x0, x0, #0x6b8
  438af4:	bl	404af0 <getenv@plt>
  438af8:	mov	x19, x0
  438afc:	cbnz	x0, 438a6c <argp_parse@@Base+0x532c>
  438b00:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  438b04:	add	x0, x0, #0x6c8
  438b08:	bl	404af0 <getenv@plt>
  438b0c:	cmp	x0, #0x0
  438b10:	mov	x0, #0x200                 	// #512
  438b14:	mov	x1, #0x400                 	// #1024
  438b18:	csel	x0, x0, x1, ne  // ne = any
  438b1c:	str	x0, [x20]
  438b20:	mov	w21, #0x0                   	// #0
  438b24:	b	438ab8 <argp_parse@@Base+0x5378>
  438b28:	add	x19, x19, #0x1
  438b2c:	mov	w21, #0x4                   	// #4
  438b30:	b	438a7c <argp_parse@@Base+0x533c>
  438b34:	adrp	x4, 45b000 <_obstack_memory_used@@Base+0x19e64>
  438b38:	add	x4, x4, #0x6d8
  438b3c:	mov	x3, x20
  438b40:	mov	w2, #0x0                   	// #0
  438b44:	add	x1, sp, #0x38
  438b48:	mov	x0, x19
  438b4c:	bl	440240 <argp_parse@@Base+0xcb00>
  438b50:	cbnz	w0, 438b8c <argp_parse@@Base+0x544c>
  438b54:	ldrb	w0, [x19]
  438b58:	sub	w0, w0, #0x30
  438b5c:	and	w0, w0, #0xff
  438b60:	cmp	w0, #0x9
  438b64:	b.ls	438ab8 <argp_parse@@Base+0x5378>  // b.plast
  438b68:	ldr	x1, [sp, #56]
  438b6c:	cmp	x19, x1
  438b70:	b.eq	438b94 <argp_parse@@Base+0x5454>  // b.none
  438b74:	ldrb	w0, [x19, #1]!
  438b78:	sub	w0, w0, #0x30
  438b7c:	and	w0, w0, #0xff
  438b80:	cmp	w0, #0x9
  438b84:	b.hi	438b6c <argp_parse@@Base+0x542c>  // b.pmore
  438b88:	b	438ab8 <argp_parse@@Base+0x5378>
  438b8c:	str	wzr, [x22]
  438b90:	b	438ac0 <argp_parse@@Base+0x5380>
  438b94:	ldurb	w0, [x1, #-1]
  438b98:	cmp	w0, #0x42
  438b9c:	b.eq	438bac <argp_parse@@Base+0x546c>  // b.none
  438ba0:	orr	w21, w21, #0x80
  438ba4:	orr	w21, w21, #0x20
  438ba8:	b	438ab8 <argp_parse@@Base+0x5378>
  438bac:	orr	w21, w21, #0x180
  438bb0:	ldurb	w0, [x1, #-2]
  438bb4:	cmp	w0, #0x69
  438bb8:	b.ne	438ab8 <argp_parse@@Base+0x5378>  // b.any
  438bbc:	b	438ba4 <argp_parse@@Base+0x5464>
  438bc0:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  438bc4:	add	x0, x0, #0x6c8
  438bc8:	bl	404af0 <getenv@plt>
  438bcc:	cmp	x0, #0x0
  438bd0:	mov	x0, #0x200                 	// #512
  438bd4:	mov	x1, #0x400                 	// #1024
  438bd8:	csel	x0, x0, x1, ne  // ne = any
  438bdc:	str	x0, [x20]
  438be0:	mov	w0, #0x4                   	// #4
  438be4:	b	438ac8 <argp_parse@@Base+0x5388>
  438be8:	mov	x2, x0
  438bec:	add	x0, x1, #0x14
  438bf0:	strb	wzr, [x1, #20]
  438bf4:	mov	x4, #0x6666666666666666    	// #7378697629483820646
  438bf8:	movk	x4, #0x6667
  438bfc:	tbnz	x2, #63, 438c28 <argp_parse@@Base+0x54e8>
  438c00:	smulh	x1, x2, x4
  438c04:	asr	x1, x1, #2
  438c08:	sub	x1, x1, x2, asr #63
  438c0c:	add	x3, x1, x1, lsl #2
  438c10:	sub	x2, x2, x3, lsl #1
  438c14:	add	w2, w2, #0x30
  438c18:	strb	w2, [x0, #-1]!
  438c1c:	mov	x2, x1
  438c20:	cbnz	x1, 438c00 <argp_parse@@Base+0x54c0>
  438c24:	ret
  438c28:	mov	x6, x4
  438c2c:	mov	w5, #0x30                  	// #48
  438c30:	mov	x4, x0
  438c34:	smulh	x1, x2, x6
  438c38:	asr	x1, x1, #2
  438c3c:	sub	x1, x1, x2, asr #63
  438c40:	add	x3, x1, x1, lsl #2
  438c44:	sub	x2, x2, x3, lsl #1
  438c48:	sub	w2, w5, w2
  438c4c:	strb	w2, [x0, #-1]!
  438c50:	mov	x2, x1
  438c54:	cbnz	x1, 438c30 <argp_parse@@Base+0x54f0>
  438c58:	mov	w1, #0x2d                  	// #45
  438c5c:	sturb	w1, [x0, #-1]
  438c60:	sub	x0, x4, #0x2
  438c64:	b	438c24 <argp_parse@@Base+0x54e4>
  438c68:	mov	x2, x0
  438c6c:	add	x0, x1, #0x14
  438c70:	strb	wzr, [x1, #20]
  438c74:	mov	x4, #0x6666666666666666    	// #7378697629483820646
  438c78:	movk	x4, #0x6667
  438c7c:	tbnz	x2, #63, 438ca8 <argp_parse@@Base+0x5568>
  438c80:	smulh	x1, x2, x4
  438c84:	asr	x1, x1, #2
  438c88:	sub	x1, x1, x2, asr #63
  438c8c:	add	x3, x1, x1, lsl #2
  438c90:	sub	x2, x2, x3, lsl #1
  438c94:	add	w2, w2, #0x30
  438c98:	strb	w2, [x0, #-1]!
  438c9c:	mov	x2, x1
  438ca0:	cbnz	x1, 438c80 <argp_parse@@Base+0x5540>
  438ca4:	ret
  438ca8:	mov	x6, x4
  438cac:	mov	w5, #0x30                  	// #48
  438cb0:	mov	x4, x0
  438cb4:	smulh	x1, x2, x6
  438cb8:	asr	x1, x1, #2
  438cbc:	sub	x1, x1, x2, asr #63
  438cc0:	add	x3, x1, x1, lsl #2
  438cc4:	sub	x2, x2, x3, lsl #1
  438cc8:	sub	w2, w5, w2
  438ccc:	strb	w2, [x0, #-1]!
  438cd0:	mov	x2, x1
  438cd4:	cbnz	x1, 438cb0 <argp_parse@@Base+0x5570>
  438cd8:	mov	w1, #0x2d                  	// #45
  438cdc:	sturb	w1, [x0, #-1]
  438ce0:	sub	x0, x4, #0x2
  438ce4:	b	438ca4 <argp_parse@@Base+0x5564>
  438ce8:	mov	x3, x0
  438cec:	add	x0, x1, #0x14
  438cf0:	strb	wzr, [x1, #20]
  438cf4:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
  438cf8:	movk	x4, #0xcccd
  438cfc:	umulh	x1, x3, x4
  438d00:	lsr	x1, x1, #3
  438d04:	add	x2, x1, x1, lsl #2
  438d08:	sub	x2, x3, x2, lsl #1
  438d0c:	add	w2, w2, #0x30
  438d10:	strb	w2, [x0, #-1]!
  438d14:	mov	x2, x3
  438d18:	mov	x3, x1
  438d1c:	cmp	x2, #0x9
  438d20:	b.hi	438cfc <argp_parse@@Base+0x55bc>  // b.pmore
  438d24:	ret
  438d28:	stp	x29, x30, [sp, #-16]!
  438d2c:	mov	x29, sp
  438d30:	mov	w0, #0xe                   	// #14
  438d34:	bl	4042d0 <nl_langinfo@plt>
  438d38:	cbz	x0, 438d58 <argp_parse@@Base+0x5618>
  438d3c:	ldrb	w2, [x0]
  438d40:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  438d44:	add	x1, x1, #0x770
  438d48:	cmp	w2, #0x0
  438d4c:	csel	x0, x1, x0, eq  // eq = none
  438d50:	ldp	x29, x30, [sp], #16
  438d54:	ret
  438d58:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  438d5c:	add	x0, x0, #0x770
  438d60:	b	438d50 <argp_parse@@Base+0x5610>
  438d64:	stp	x29, x30, [sp, #-32]!
  438d68:	mov	x29, sp
  438d6c:	str	x19, [sp, #16]
  438d70:	mov	w19, w0
  438d74:	bl	404320 <wcwidth@plt>
  438d78:	tbnz	w0, #31, 438d88 <argp_parse@@Base+0x5648>
  438d7c:	ldr	x19, [sp, #16]
  438d80:	ldp	x29, x30, [sp], #32
  438d84:	ret
  438d88:	mov	w0, w19
  438d8c:	bl	404180 <iswcntrl@plt>
  438d90:	cmp	w0, #0x0
  438d94:	cset	w0, eq  // eq = none
  438d98:	b	438d7c <argp_parse@@Base+0x563c>
  438d9c:	stp	x29, x30, [sp, #-48]!
  438da0:	mov	x29, sp
  438da4:	stp	x19, x20, [sp, #16]
  438da8:	mov	x20, x0
  438dac:	mov	x19, x1
  438db0:	ldr	x0, [x1], #24
  438db4:	cmp	x0, x1
  438db8:	b.eq	438de8 <argp_parse@@Base+0x56a8>  // b.none
  438dbc:	str	x0, [x20]
  438dc0:	ldr	x0, [x19, #8]
  438dc4:	str	x0, [x20, #8]
  438dc8:	ldrb	w0, [x19, #16]
  438dcc:	strb	w0, [x20, #16]
  438dd0:	cbz	w0, 438ddc <argp_parse@@Base+0x569c>
  438dd4:	ldr	w0, [x19, #20]
  438dd8:	str	w0, [x20, #20]
  438ddc:	ldp	x19, x20, [sp, #16]
  438de0:	ldp	x29, x30, [sp], #48
  438de4:	ret
  438de8:	str	x21, [sp, #32]
  438dec:	add	x21, x20, #0x18
  438df0:	ldr	x2, [x19, #8]
  438df4:	mov	x0, x21
  438df8:	bl	403f70 <memcpy@plt>
  438dfc:	str	x21, [x20]
  438e00:	ldr	x21, [sp, #32]
  438e04:	b	438dc0 <argp_parse@@Base+0x5680>
  438e08:	ubfx	x2, x0, #5, #3
  438e0c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  438e10:	add	x1, x1, #0x778
  438e14:	ldr	w1, [x1, x2, lsl #2]
  438e18:	lsr	w0, w1, w0
  438e1c:	and	w0, w0, #0x1
  438e20:	ret
  438e24:	cmp	x0, x1
  438e28:	b.eq	439470 <argp_parse@@Base+0x5d30>  // b.none
  438e2c:	stp	x29, x30, [sp, #-192]!
  438e30:	mov	x29, sp
  438e34:	stp	x19, x20, [sp, #16]
  438e38:	stp	x21, x22, [sp, #32]
  438e3c:	stp	x23, x24, [sp, #48]
  438e40:	mov	x21, x0
  438e44:	mov	x22, x1
  438e48:	bl	4047f0 <__ctype_get_mb_cur_max@plt>
  438e4c:	cmp	x0, #0x1
  438e50:	b.ls	4393f4 <argp_parse@@Base+0x5cb4>  // b.plast
  438e54:	str	x21, [sp, #80]
  438e58:	strb	wzr, [sp, #64]
  438e5c:	stur	xzr, [sp, #68]
  438e60:	strb	wzr, [sp, #76]
  438e64:	str	x22, [sp, #144]
  438e68:	strb	wzr, [sp, #128]
  438e6c:	stur	xzr, [sp, #132]
  438e70:	strb	wzr, [sp, #140]
  438e74:	mov	w20, #0x1                   	// #1
  438e78:	add	x21, sp, #0x44
  438e7c:	add	x22, sp, #0x84
  438e80:	b	4390dc <argp_parse@@Base+0x599c>
  438e84:	b.cs	438ea4 <argp_parse@@Base+0x5764>  // b.hs, b.nlast
  438e88:	ldr	x1, [sp, #144]
  438e8c:	ldr	x0, [sp, #80]
  438e90:	bl	4046e0 <memcmp@plt>
  438e94:	mov	w1, #0x1                   	// #1
  438e98:	cmp	w0, #0x0
  438e9c:	cneg	w0, w1, le
  438ea0:	b	43945c <argp_parse@@Base+0x5d1c>
  438ea4:	mov	x2, x0
  438ea8:	ldr	x1, [sp, #144]
  438eac:	ldr	x0, [sp, #80]
  438eb0:	bl	4046e0 <memcmp@plt>
  438eb4:	mov	w1, #0x1                   	// #1
  438eb8:	cmp	w0, #0x0
  438ebc:	cneg	w0, w1, lt  // lt = tstop
  438ec0:	b	43945c <argp_parse@@Base+0x5d1c>
  438ec4:	mov	x0, x21
  438ec8:	bl	404680 <mbsinit@plt>
  438ecc:	cbz	w0, 438f48 <argp_parse@@Base+0x5808>
  438ed0:	strb	w20, [sp, #64]
  438ed4:	ldr	x19, [sp, #80]
  438ed8:	bl	4047f0 <__ctype_get_mb_cur_max@plt>
  438edc:	mov	x1, x0
  438ee0:	mov	x0, x19
  438ee4:	bl	43f954 <argp_parse@@Base+0xc214>
  438ee8:	mov	x3, x21
  438eec:	mov	x2, x0
  438ef0:	mov	x1, x19
  438ef4:	add	x0, sp, #0x64
  438ef8:	bl	440da8 <argp_parse@@Base+0xd668>
  438efc:	str	x0, [sp, #88]
  438f00:	cmn	x0, #0x1
  438f04:	b.eq	438f68 <argp_parse@@Base+0x5828>  // b.none
  438f08:	cmn	x0, #0x2
  438f0c:	b.eq	438f78 <argp_parse@@Base+0x5838>  // b.none
  438f10:	cbnz	x0, 438f30 <argp_parse@@Base+0x57f0>
  438f14:	mov	x0, #0x1                   	// #1
  438f18:	str	x0, [sp, #88]
  438f1c:	ldr	x0, [sp, #80]
  438f20:	ldrb	w0, [x0]
  438f24:	cbnz	w0, 438f8c <argp_parse@@Base+0x584c>
  438f28:	ldr	w0, [sp, #100]
  438f2c:	cbnz	w0, 438fac <argp_parse@@Base+0x586c>
  438f30:	strb	w20, [sp, #96]
  438f34:	mov	x0, x21
  438f38:	bl	404680 <mbsinit@plt>
  438f3c:	cbz	w0, 439120 <argp_parse@@Base+0x59e0>
  438f40:	strb	wzr, [sp, #64]
  438f44:	b	439120 <argp_parse@@Base+0x59e0>
  438f48:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x19e64>
  438f4c:	add	x3, x3, #0x798
  438f50:	mov	w2, #0x96                  	// #150
  438f54:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  438f58:	add	x1, x1, #0x338
  438f5c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  438f60:	add	x0, x0, #0x348
  438f64:	bl	404ac0 <__assert_fail@plt>
  438f68:	mov	x0, #0x1                   	// #1
  438f6c:	str	x0, [sp, #88]
  438f70:	strb	wzr, [sp, #96]
  438f74:	b	439120 <argp_parse@@Base+0x59e0>
  438f78:	ldr	x0, [sp, #80]
  438f7c:	bl	403ff0 <strlen@plt>
  438f80:	str	x0, [sp, #88]
  438f84:	strb	wzr, [sp, #96]
  438f88:	b	439120 <argp_parse@@Base+0x59e0>
  438f8c:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x19e64>
  438f90:	add	x3, x3, #0x798
  438f94:	mov	w2, #0xb2                  	// #178
  438f98:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  438f9c:	add	x1, x1, #0x338
  438fa0:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  438fa4:	add	x0, x0, #0x360
  438fa8:	bl	404ac0 <__assert_fail@plt>
  438fac:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x19e64>
  438fb0:	add	x3, x3, #0x798
  438fb4:	mov	w2, #0xb3                  	// #179
  438fb8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  438fbc:	add	x1, x1, #0x338
  438fc0:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  438fc4:	add	x0, x0, #0x378
  438fc8:	bl	404ac0 <__assert_fail@plt>
  438fcc:	mov	x0, x22
  438fd0:	bl	404680 <mbsinit@plt>
  438fd4:	cbz	w0, 439050 <argp_parse@@Base+0x5910>
  438fd8:	strb	w20, [sp, #128]
  438fdc:	ldr	x19, [sp, #144]
  438fe0:	bl	4047f0 <__ctype_get_mb_cur_max@plt>
  438fe4:	mov	x1, x0
  438fe8:	mov	x0, x19
  438fec:	bl	43f954 <argp_parse@@Base+0xc214>
  438ff0:	mov	x3, x22
  438ff4:	mov	x2, x0
  438ff8:	mov	x1, x19
  438ffc:	add	x0, sp, #0xa4
  439000:	bl	440da8 <argp_parse@@Base+0xd668>
  439004:	str	x0, [sp, #152]
  439008:	cmn	x0, #0x1
  43900c:	b.eq	439070 <argp_parse@@Base+0x5930>  // b.none
  439010:	cmn	x0, #0x2
  439014:	b.eq	43917c <argp_parse@@Base+0x5a3c>  // b.none
  439018:	cbnz	x0, 439038 <argp_parse@@Base+0x58f8>
  43901c:	mov	x0, #0x1                   	// #1
  439020:	str	x0, [sp, #152]
  439024:	ldr	x0, [sp, #144]
  439028:	ldrb	w0, [x0]
  43902c:	cbnz	w0, 439190 <argp_parse@@Base+0x5a50>
  439030:	ldr	w0, [sp, #164]
  439034:	cbnz	w0, 4391b0 <argp_parse@@Base+0x5a70>
  439038:	strb	w20, [sp, #160]
  43903c:	mov	x0, x22
  439040:	bl	404680 <mbsinit@plt>
  439044:	cbz	w0, 43907c <argp_parse@@Base+0x593c>
  439048:	strb	wzr, [sp, #128]
  43904c:	b	43907c <argp_parse@@Base+0x593c>
  439050:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x19e64>
  439054:	add	x3, x3, #0x798
  439058:	mov	w2, #0x96                  	// #150
  43905c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  439060:	add	x1, x1, #0x338
  439064:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  439068:	add	x0, x0, #0x348
  43906c:	bl	404ac0 <__assert_fail@plt>
  439070:	mov	x0, #0x1                   	// #1
  439074:	str	x0, [sp, #152]
  439078:	strb	wzr, [sp, #160]
  43907c:	strb	w20, [sp, #140]
  439080:	ldrb	w0, [sp, #160]
  439084:	cbz	w0, 439480 <argp_parse@@Base+0x5d40>
  439088:	ldr	w23, [sp, #164]
  43908c:	cbz	w23, 4391d0 <argp_parse@@Base+0x5a90>
  439090:	ldrb	w0, [sp, #96]
  439094:	cbz	w0, 439478 <argp_parse@@Base+0x5d38>
  439098:	ldr	w0, [sp, #100]
  43909c:	bl	404b80 <towlower@plt>
  4390a0:	mov	w19, w0
  4390a4:	mov	w0, w23
  4390a8:	bl	404b80 <towlower@plt>
  4390ac:	sub	w0, w19, w0
  4390b0:	cbnz	w0, 43945c <argp_parse@@Base+0x5d1c>
  4390b4:	ldr	x0, [sp, #80]
  4390b8:	ldr	x1, [sp, #88]
  4390bc:	add	x0, x0, x1
  4390c0:	str	x0, [sp, #80]
  4390c4:	strb	wzr, [sp, #76]
  4390c8:	ldr	x0, [sp, #144]
  4390cc:	ldr	x1, [sp, #152]
  4390d0:	add	x0, x0, x1
  4390d4:	str	x0, [sp, #144]
  4390d8:	strb	wzr, [sp, #140]
  4390dc:	ldrb	w0, [sp, #76]
  4390e0:	cbnz	w0, 439124 <argp_parse@@Base+0x59e4>
  4390e4:	ldrb	w0, [sp, #64]
  4390e8:	cbnz	w0, 438ed4 <argp_parse@@Base+0x5794>
  4390ec:	ldr	x3, [sp, #80]
  4390f0:	ldrb	w2, [x3]
  4390f4:	ubfx	x0, x2, #5, #3
  4390f8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  4390fc:	add	x1, x1, #0x778
  439100:	ldr	w0, [x1, x0, lsl #2]
  439104:	lsr	w0, w0, w2
  439108:	tbz	w0, #0, 438ec4 <argp_parse@@Base+0x5784>
  43910c:	mov	x0, #0x1                   	// #1
  439110:	str	x0, [sp, #88]
  439114:	ldrb	w1, [x3]
  439118:	str	w1, [sp, #100]
  43911c:	strb	w0, [sp, #96]
  439120:	strb	w20, [sp, #76]
  439124:	ldrb	w0, [sp, #96]
  439128:	cbz	w0, 439134 <argp_parse@@Base+0x59f4>
  43912c:	ldr	w0, [sp, #100]
  439130:	cbz	w0, 4394a8 <argp_parse@@Base+0x5d68>
  439134:	ldrb	w0, [sp, #140]
  439138:	cbnz	w0, 439080 <argp_parse@@Base+0x5940>
  43913c:	ldrb	w0, [sp, #128]
  439140:	cbnz	w0, 438fdc <argp_parse@@Base+0x589c>
  439144:	ldr	x3, [sp, #144]
  439148:	ldrb	w2, [x3]
  43914c:	ubfx	x0, x2, #5, #3
  439150:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  439154:	add	x1, x1, #0x778
  439158:	ldr	w0, [x1, x0, lsl #2]
  43915c:	lsr	w0, w0, w2
  439160:	tbz	w0, #0, 438fcc <argp_parse@@Base+0x588c>
  439164:	mov	x0, #0x1                   	// #1
  439168:	str	x0, [sp, #152]
  43916c:	ldrb	w1, [x3]
  439170:	str	w1, [sp, #164]
  439174:	strb	w0, [sp, #160]
  439178:	b	43907c <argp_parse@@Base+0x593c>
  43917c:	ldr	x0, [sp, #144]
  439180:	bl	403ff0 <strlen@plt>
  439184:	str	x0, [sp, #152]
  439188:	strb	wzr, [sp, #160]
  43918c:	b	43907c <argp_parse@@Base+0x593c>
  439190:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x19e64>
  439194:	add	x3, x3, #0x798
  439198:	mov	w2, #0xb2                  	// #178
  43919c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  4391a0:	add	x1, x1, #0x338
  4391a4:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  4391a8:	add	x0, x0, #0x360
  4391ac:	bl	404ac0 <__assert_fail@plt>
  4391b0:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x19e64>
  4391b4:	add	x3, x3, #0x798
  4391b8:	mov	w2, #0xb3                  	// #179
  4391bc:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  4391c0:	add	x1, x1, #0x338
  4391c4:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  4391c8:	add	x0, x0, #0x378
  4391cc:	bl	404ac0 <__assert_fail@plt>
  4391d0:	ldrb	w0, [sp, #76]
  4391d4:	cbz	w0, 4394b0 <argp_parse@@Base+0x5d70>
  4391d8:	b	4394f4 <argp_parse@@Base+0x5db4>
  4391dc:	add	x0, sp, #0x44
  4391e0:	bl	404680 <mbsinit@plt>
  4391e4:	cbz	w0, 439268 <argp_parse@@Base+0x5b28>
  4391e8:	mov	w0, #0x1                   	// #1
  4391ec:	strb	w0, [sp, #64]
  4391f0:	ldr	x19, [sp, #80]
  4391f4:	bl	4047f0 <__ctype_get_mb_cur_max@plt>
  4391f8:	mov	x1, x0
  4391fc:	mov	x0, x19
  439200:	bl	43f954 <argp_parse@@Base+0xc214>
  439204:	add	x3, sp, #0x44
  439208:	mov	x2, x0
  43920c:	mov	x1, x19
  439210:	add	x0, sp, #0x64
  439214:	bl	440da8 <argp_parse@@Base+0xd668>
  439218:	str	x0, [sp, #88]
  43921c:	cmn	x0, #0x1
  439220:	b.eq	439288 <argp_parse@@Base+0x5b48>  // b.none
  439224:	cmn	x0, #0x2
  439228:	b.eq	439298 <argp_parse@@Base+0x5b58>  // b.none
  43922c:	cbnz	x0, 43924c <argp_parse@@Base+0x5b0c>
  439230:	mov	x0, #0x1                   	// #1
  439234:	str	x0, [sp, #88]
  439238:	ldr	x0, [sp, #80]
  43923c:	ldrb	w0, [x0]
  439240:	cbnz	w0, 4392ac <argp_parse@@Base+0x5b6c>
  439244:	ldr	w0, [sp, #100]
  439248:	cbnz	w0, 4392cc <argp_parse@@Base+0x5b8c>
  43924c:	mov	w0, #0x1                   	// #1
  439250:	strb	w0, [sp, #96]
  439254:	add	x0, sp, #0x44
  439258:	bl	404680 <mbsinit@plt>
  43925c:	cbz	w0, 4394ec <argp_parse@@Base+0x5dac>
  439260:	strb	wzr, [sp, #64]
  439264:	b	4394ec <argp_parse@@Base+0x5dac>
  439268:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43926c:	add	x3, x3, #0x798
  439270:	mov	w2, #0x96                  	// #150
  439274:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  439278:	add	x1, x1, #0x338
  43927c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  439280:	add	x0, x0, #0x348
  439284:	bl	404ac0 <__assert_fail@plt>
  439288:	mov	x0, #0x1                   	// #1
  43928c:	str	x0, [sp, #88]
  439290:	strb	wzr, [sp, #96]
  439294:	b	4394ec <argp_parse@@Base+0x5dac>
  439298:	ldr	x0, [sp, #80]
  43929c:	bl	403ff0 <strlen@plt>
  4392a0:	str	x0, [sp, #88]
  4392a4:	strb	wzr, [sp, #96]
  4392a8:	b	4394ec <argp_parse@@Base+0x5dac>
  4392ac:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x19e64>
  4392b0:	add	x3, x3, #0x798
  4392b4:	mov	w2, #0xb2                  	// #178
  4392b8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  4392bc:	add	x1, x1, #0x338
  4392c0:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  4392c4:	add	x0, x0, #0x360
  4392c8:	bl	404ac0 <__assert_fail@plt>
  4392cc:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x19e64>
  4392d0:	add	x3, x3, #0x798
  4392d4:	mov	w2, #0xb3                  	// #179
  4392d8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  4392dc:	add	x1, x1, #0x338
  4392e0:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  4392e4:	add	x0, x0, #0x378
  4392e8:	bl	404ac0 <__assert_fail@plt>
  4392ec:	add	x0, sp, #0x84
  4392f0:	bl	404680 <mbsinit@plt>
  4392f4:	cbz	w0, 439378 <argp_parse@@Base+0x5c38>
  4392f8:	mov	w0, #0x1                   	// #1
  4392fc:	strb	w0, [sp, #128]
  439300:	ldr	x19, [sp, #144]
  439304:	bl	4047f0 <__ctype_get_mb_cur_max@plt>
  439308:	mov	x1, x0
  43930c:	mov	x0, x19
  439310:	bl	43f954 <argp_parse@@Base+0xc214>
  439314:	add	x3, sp, #0x84
  439318:	mov	x2, x0
  43931c:	mov	x1, x19
  439320:	add	x0, sp, #0xa4
  439324:	bl	440da8 <argp_parse@@Base+0xd668>
  439328:	cmn	x0, #0x1
  43932c:	b.eq	4393dc <argp_parse@@Base+0x5c9c>  // b.none
  439330:	cmn	x0, #0x2
  439334:	b.eq	4393e4 <argp_parse@@Base+0x5ca4>  // b.none
  439338:	cbnz	x0, 4393c4 <argp_parse@@Base+0x5c84>
  43933c:	mov	x0, #0x1                   	// #1
  439340:	str	x0, [sp, #152]
  439344:	ldr	x0, [sp, #144]
  439348:	ldrb	w0, [x0]
  43934c:	cbnz	w0, 439398 <argp_parse@@Base+0x5c58>
  439350:	ldr	w0, [sp, #164]
  439354:	cbz	w0, 4393c4 <argp_parse@@Base+0x5c84>
  439358:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43935c:	add	x3, x3, #0x798
  439360:	mov	w2, #0xb3                  	// #179
  439364:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  439368:	add	x1, x1, #0x338
  43936c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  439370:	add	x0, x0, #0x378
  439374:	bl	404ac0 <__assert_fail@plt>
  439378:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43937c:	add	x3, x3, #0x798
  439380:	mov	w2, #0x96                  	// #150
  439384:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  439388:	add	x1, x1, #0x338
  43938c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  439390:	add	x0, x0, #0x348
  439394:	bl	404ac0 <__assert_fail@plt>
  439398:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43939c:	add	x3, x3, #0x798
  4393a0:	mov	w2, #0xb2                  	// #178
  4393a4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  4393a8:	add	x1, x1, #0x338
  4393ac:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  4393b0:	add	x0, x0, #0x360
  4393b4:	bl	404ac0 <__assert_fail@plt>
  4393b8:	ldrb	w1, [sp, #160]
  4393bc:	mov	w0, #0xffffffff            	// #-1
  4393c0:	cbz	w1, 43945c <argp_parse@@Base+0x5d1c>
  4393c4:	ldr	w0, [sp, #164]
  4393c8:	cmp	w0, #0x0
  4393cc:	csetm	w0, ne  // ne = any
  4393d0:	b	43945c <argp_parse@@Base+0x5d1c>
  4393d4:	mov	w0, #0x1                   	// #1
  4393d8:	b	43945c <argp_parse@@Base+0x5d1c>
  4393dc:	mov	w0, #0xffffffff            	// #-1
  4393e0:	b	43945c <argp_parse@@Base+0x5d1c>
  4393e4:	mov	w0, #0xffffffff            	// #-1
  4393e8:	b	43945c <argp_parse@@Base+0x5d1c>
  4393ec:	mov	w0, #0xffffffff            	// #-1
  4393f0:	b	43945c <argp_parse@@Base+0x5d1c>
  4393f4:	bl	404750 <__ctype_b_loc@plt>
  4393f8:	ldr	x24, [x0]
  4393fc:	mov	x20, #0x0                   	// #0
  439400:	b	439414 <argp_parse@@Base+0x5cd4>
  439404:	cbz	w19, 439458 <argp_parse@@Base+0x5d18>
  439408:	add	x20, x20, #0x1
  43940c:	cmp	w19, w2
  439410:	b.ne	439458 <argp_parse@@Base+0x5d18>  // b.any
  439414:	ldrb	w19, [x21, x20]
  439418:	and	x23, x19, #0xff
  43941c:	ldrh	w0, [x24, x23, lsl #1]
  439420:	tbz	w0, #8, 439434 <argp_parse@@Base+0x5cf4>
  439424:	bl	4041f0 <__ctype_tolower_loc@plt>
  439428:	ldr	x0, [x0]
  43942c:	ldr	w0, [x0, x23, lsl #2]
  439430:	and	w19, w0, #0xff
  439434:	ldrb	w2, [x22, x20]
  439438:	and	x23, x2, #0xff
  43943c:	ldrh	w0, [x24, x23, lsl #1]
  439440:	tbz	w0, #8, 439404 <argp_parse@@Base+0x5cc4>
  439444:	bl	4041f0 <__ctype_tolower_loc@plt>
  439448:	ldr	x0, [x0]
  43944c:	ldr	w2, [x0, x23, lsl #2]
  439450:	and	w2, w2, #0xff
  439454:	b	439404 <argp_parse@@Base+0x5cc4>
  439458:	sub	w0, w19, w2
  43945c:	ldp	x19, x20, [sp, #16]
  439460:	ldp	x21, x22, [sp, #32]
  439464:	ldp	x23, x24, [sp, #48]
  439468:	ldp	x29, x30, [sp], #192
  43946c:	ret
  439470:	mov	w0, #0x0                   	// #0
  439474:	ret
  439478:	mov	w0, #0x1                   	// #1
  43947c:	b	43945c <argp_parse@@Base+0x5d1c>
  439480:	ldrb	w0, [sp, #96]
  439484:	cbnz	w0, 4393ec <argp_parse@@Base+0x5cac>
  439488:	ldr	x2, [sp, #88]
  43948c:	ldr	x0, [sp, #152]
  439490:	cmp	x2, x0
  439494:	b.ne	438e84 <argp_parse@@Base+0x5744>  // b.any
  439498:	ldr	x1, [sp, #144]
  43949c:	ldr	x0, [sp, #80]
  4394a0:	bl	4046e0 <memcmp@plt>
  4394a4:	b	4390b0 <argp_parse@@Base+0x5970>
  4394a8:	ldrb	w0, [sp, #76]
  4394ac:	cbnz	w0, 439508 <argp_parse@@Base+0x5dc8>
  4394b0:	ldrb	w0, [sp, #64]
  4394b4:	cbnz	w0, 4391f0 <argp_parse@@Base+0x5ab0>
  4394b8:	ldr	x2, [sp, #80]
  4394bc:	ldrb	w1, [x2]
  4394c0:	ubfx	x3, x1, #5, #3
  4394c4:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  4394c8:	add	x0, x0, #0x778
  4394cc:	ldr	w0, [x0, x3, lsl #2]
  4394d0:	lsr	w0, w0, w1
  4394d4:	tbz	w0, #0, 4391dc <argp_parse@@Base+0x5a9c>
  4394d8:	mov	x0, #0x1                   	// #1
  4394dc:	str	x0, [sp, #88]
  4394e0:	ldrb	w1, [x2]
  4394e4:	str	w1, [sp, #100]
  4394e8:	strb	w0, [sp, #96]
  4394ec:	mov	w0, #0x1                   	// #1
  4394f0:	strb	w0, [sp, #76]
  4394f4:	ldrb	w0, [sp, #96]
  4394f8:	cbz	w0, 4393d4 <argp_parse@@Base+0x5c94>
  4394fc:	ldr	w1, [sp, #100]
  439500:	mov	w0, #0x1                   	// #1
  439504:	cbnz	w1, 43945c <argp_parse@@Base+0x5d1c>
  439508:	ldrb	w0, [sp, #140]
  43950c:	cbnz	w0, 4393b8 <argp_parse@@Base+0x5c78>
  439510:	ldrb	w0, [sp, #128]
  439514:	cbnz	w0, 439300 <argp_parse@@Base+0x5bc0>
  439518:	ldr	x2, [sp, #144]
  43951c:	ldrb	w1, [x2]
  439520:	ubfx	x3, x1, #5, #3
  439524:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  439528:	add	x0, x0, #0x778
  43952c:	ldr	w0, [x0, x3, lsl #2]
  439530:	lsr	w0, w0, w1
  439534:	tbz	w0, #0, 4392ec <argp_parse@@Base+0x5bac>
  439538:	mov	x0, #0x1                   	// #1
  43953c:	str	x0, [sp, #152]
  439540:	ldrb	w0, [x2]
  439544:	str	w0, [sp, #164]
  439548:	b	4393c4 <argp_parse@@Base+0x5c84>
  43954c:	stp	x29, x30, [sp, #-48]!
  439550:	mov	x29, sp
  439554:	stp	x19, x20, [sp, #16]
  439558:	mov	x20, x0
  43955c:	ldrb	w1, [x0]
  439560:	sub	w0, w1, #0x30
  439564:	and	w0, w0, #0xff
  439568:	cmp	w0, #0x7
  43956c:	b.ls	4395f0 <argp_parse@@Base+0x5eb0>  // b.plast
  439570:	mov	x3, x20
  439574:	mov	x0, #0x1                   	// #1
  439578:	mov	w4, #0x2b                  	// #43
  43957c:	cbz	w1, 4395b0 <argp_parse@@Base+0x5e70>
  439580:	and	w2, w1, #0xffffffef
  439584:	and	w2, w2, #0xff
  439588:	cmp	w2, #0x2d
  43958c:	ccmp	w1, w4, #0x4, ne  // ne = any
  439590:	cinc	x0, x0, eq  // eq = none
  439594:	ldrb	w1, [x3, #1]!
  439598:	cbnz	w1, 439580 <argp_parse@@Base+0x5e40>
  43959c:	cmp	xzr, x0, lsr #60
  4395a0:	cset	x1, ne  // ne = any
  4395a4:	tst	x0, #0x800000000000000
  4395a8:	csinc	w1, w1, wzr, eq  // eq = none
  4395ac:	cbnz	w1, 439674 <argp_parse@@Base+0x5f34>
  4395b0:	lsl	x0, x0, #4
  4395b4:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  4395b8:	mov	x4, #0x0                   	// #0
  4395bc:	mov	w17, #0x438                 	// #1080
  4395c0:	mov	w16, #0x207                 	// #519
  4395c4:	mov	w15, #0x9c0                 	// #2496
  4395c8:	mov	w10, #0x3                   	// #3
  4395cc:	mov	w14, #0x92                  	// #146
  4395d0:	mov	w13, #0x49                  	// #73
  4395d4:	mov	w12, #0x124                 	// #292
  4395d8:	mov	w18, #0x1                   	// #1
  4395dc:	mov	w9, #0x2                   	// #2
  4395e0:	mov	w8, #0x1                   	// #1
  4395e4:	mov	w11, #0x0                   	// #0
  4395e8:	mov	w6, #0x0                   	// #0
  4395ec:	b	4396e4 <argp_parse@@Base+0x5fa4>
  4395f0:	mov	x1, x20
  4395f4:	mov	w19, #0x0                   	// #0
  4395f8:	lsl	w19, w19, #3
  4395fc:	sub	w19, w19, #0x30
  439600:	ldrb	w0, [x1], #1
  439604:	add	w19, w0, w19
  439608:	cmp	w19, #0xfff
  43960c:	b.hi	439900 <argp_parse@@Base+0x61c0>  // b.pmore
  439610:	ldrb	w2, [x1]
  439614:	sub	w0, w2, #0x30
  439618:	and	w0, w0, #0xff
  43961c:	cmp	w0, #0x7
  439620:	b.ls	4395f8 <argp_parse@@Base+0x5eb8>  // b.plast
  439624:	mov	x0, #0x0                   	// #0
  439628:	cbnz	w2, 439690 <argp_parse@@Base+0x5f50>
  43962c:	sub	x20, x1, x20
  439630:	and	w0, w19, #0xc00
  439634:	orr	w0, w0, #0x3ff
  439638:	cmp	x20, #0x5
  43963c:	mov	w20, #0xfff                 	// #4095
  439640:	csel	w20, w0, w20, lt  // lt = tstop
  439644:	mov	x0, #0x20                  	// #32
  439648:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  43964c:	mov	w1, #0x3d                  	// #61
  439650:	strb	w1, [x0]
  439654:	mov	w1, #0x1                   	// #1
  439658:	strb	w1, [x0, #1]
  43965c:	mov	w1, #0xfff                 	// #4095
  439660:	str	w1, [x0, #4]
  439664:	str	w19, [x0, #8]
  439668:	str	w20, [x0, #12]
  43966c:	strb	wzr, [x0, #17]
  439670:	b	439690 <argp_parse@@Base+0x5f50>
  439674:	stp	x21, x22, [sp, #32]
  439678:	bl	40e5ec <wcrtomb@plt+0x99cc>
  43967c:	cmp	w1, #0x61
  439680:	b.eq	4396dc <argp_parse@@Base+0x5f9c>  // b.none
  439684:	b.ls	43969c <argp_parse@@Base+0x5f5c>  // b.plast
  439688:	bl	4047c0 <free@plt>
  43968c:	mov	x0, #0x0                   	// #0
  439690:	ldp	x19, x20, [sp, #16]
  439694:	ldp	x29, x30, [sp], #48
  439698:	ret
  43969c:	and	w2, w1, #0xffffffef
  4396a0:	and	w2, w2, #0xff
  4396a4:	cmp	w2, #0x2d
  4396a8:	b.eq	4396b4 <argp_parse@@Base+0x5f74>  // b.none
  4396ac:	cmp	w1, #0x2b
  4396b0:	b.ne	439688 <argp_parse@@Base+0x5f48>  // b.any
  4396b4:	stp	x21, x22, [sp, #32]
  4396b8:	add	x7, x4, #0x1
  4396bc:	add	x4, x0, x4, lsl #4
  4396c0:	mov	w30, #0xfff                 	// #4095
  4396c4:	mov	w19, #0x2b                  	// #43
  4396c8:	b	439874 <argp_parse@@Base+0x6134>
  4396cc:	orr	w6, w6, w17
  4396d0:	b	4396e0 <argp_parse@@Base+0x5fa0>
  4396d4:	orr	w6, w6, w16
  4396d8:	b	4396e0 <argp_parse@@Base+0x5fa0>
  4396dc:	mov	w6, #0xfff                 	// #4095
  4396e0:	add	x20, x20, #0x1
  4396e4:	ldrb	w1, [x20]
  4396e8:	cmp	w1, #0x67
  4396ec:	b.eq	4396cc <argp_parse@@Base+0x5f8c>  // b.none
  4396f0:	b.ls	43967c <argp_parse@@Base+0x5f3c>  // b.plast
  4396f4:	cmp	w1, #0x6f
  4396f8:	b.eq	4396d4 <argp_parse@@Base+0x5f94>  // b.none
  4396fc:	cmp	w1, #0x75
  439700:	b.ne	439688 <argp_parse@@Base+0x5f48>  // b.any
  439704:	orr	w6, w6, w15
  439708:	b	4396e0 <argp_parse@@Base+0x5fa0>
  43970c:	cmp	w1, #0x2f
  439710:	b.hi	439748 <argp_parse@@Base+0x6008>  // b.pmore
  439714:	mov	w5, w8
  439718:	mov	w3, #0x0                   	// #0
  43971c:	b	4397d0 <argp_parse@@Base+0x6090>
  439720:	mov	w5, w8
  439724:	mov	w3, #0x0                   	// #0
  439728:	b	4397d0 <argp_parse@@Base+0x6090>
  43972c:	add	x20, x20, #0x2
  439730:	mov	w3, #0x1c0                 	// #448
  439734:	cmp	w1, #0x75
  439738:	b.eq	4398a4 <argp_parse@@Base+0x6164>  // b.none
  43973c:	mov	w5, w8
  439740:	mov	w3, #0x0                   	// #0
  439744:	b	4397d0 <argp_parse@@Base+0x6090>
  439748:	mov	w1, w11
  43974c:	lsl	w1, w1, #3
  439750:	sub	w1, w1, #0x30
  439754:	ldrb	w3, [x2], #1
  439758:	add	w1, w3, w1
  43975c:	cmp	w1, #0xfff
  439760:	b.hi	4398e8 <argp_parse@@Base+0x61a8>  // b.pmore
  439764:	ldrb	w5, [x2]
  439768:	sub	w3, w5, #0x30
  43976c:	and	w3, w3, #0xff
  439770:	cmp	w3, #0x7
  439774:	b.ls	43974c <argp_parse@@Base+0x600c>  // b.plast
  439778:	cbnz	w6, 4398f0 <argp_parse@@Base+0x61b0>
  43977c:	cmp	w5, #0x2c
  439780:	ccmp	w5, #0x0, #0x4, ne  // ne = any
  439784:	b.ne	4397ac <argp_parse@@Base+0x606c>  // b.any
  439788:	mov	x22, x4
  43978c:	strb	w21, [x4]
  439790:	strb	w18, [x4, #1]
  439794:	str	w30, [x4, #4]
  439798:	str	w1, [x4, #8]
  43979c:	mov	x20, x2
  4397a0:	mov	w6, w30
  4397a4:	mov	w3, w30
  4397a8:	b	43984c <argp_parse@@Base+0x610c>
  4397ac:	ldp	x21, x22, [sp, #32]
  4397b0:	b	439688 <argp_parse@@Base+0x5f48>
  4397b4:	add	x20, x20, #0x2
  4397b8:	mov	w3, #0x7                   	// #7
  4397bc:	b	4398a4 <argp_parse@@Base+0x6164>
  4397c0:	cmp	w1, #0x58
  4397c4:	b.ne	439828 <argp_parse@@Base+0x60e8>  // b.any
  4397c8:	mov	w5, w9
  4397cc:	add	x2, x2, #0x1
  4397d0:	ldrb	w1, [x2]
  4397d4:	cmp	w1, #0x74
  4397d8:	b.eq	439820 <argp_parse@@Base+0x60e0>  // b.none
  4397dc:	b.hi	4397f8 <argp_parse@@Base+0x60b8>  // b.pmore
  4397e0:	cmp	w1, #0x72
  4397e4:	b.eq	439810 <argp_parse@@Base+0x60d0>  // b.none
  4397e8:	cmp	w1, #0x73
  4397ec:	b.ne	4397c0 <argp_parse@@Base+0x6080>  // b.any
  4397f0:	orr	w3, w3, #0xc00
  4397f4:	b	4397cc <argp_parse@@Base+0x608c>
  4397f8:	cmp	w1, #0x77
  4397fc:	b.eq	439818 <argp_parse@@Base+0x60d8>  // b.none
  439800:	cmp	w1, #0x78
  439804:	b.ne	439828 <argp_parse@@Base+0x60e8>  // b.any
  439808:	orr	w3, w3, w13
  43980c:	b	4397cc <argp_parse@@Base+0x608c>
  439810:	orr	w3, w3, w12
  439814:	b	4397cc <argp_parse@@Base+0x608c>
  439818:	orr	w3, w3, w14
  43981c:	b	4397cc <argp_parse@@Base+0x608c>
  439820:	orr	w3, w3, #0x200
  439824:	b	4397cc <argp_parse@@Base+0x608c>
  439828:	mov	x22, x4
  43982c:	strb	w21, [x4]
  439830:	strb	w5, [x4, #1]
  439834:	str	w6, [x4, #4]
  439838:	str	w3, [x4, #8]
  43983c:	mov	x20, x2
  439840:	and	w1, w3, w6
  439844:	cmp	w6, #0x0
  439848:	csel	w3, w1, w3, ne  // ne = any
  43984c:	str	w3, [x22, #12]
  439850:	ldrb	w2, [x20]
  439854:	add	x3, x7, #0x1
  439858:	add	x4, x4, #0x10
  43985c:	and	w1, w2, #0xffffffef
  439860:	and	w1, w1, #0xff
  439864:	cmp	w1, #0x2d
  439868:	ccmp	w2, w19, #0x4, ne  // ne = any
  43986c:	b.ne	4398bc <argp_parse@@Base+0x617c>  // b.any
  439870:	mov	x7, x3
  439874:	mov	x2, x20
  439878:	ldrb	w21, [x2], #1
  43987c:	ldrb	w1, [x20, #1]
  439880:	cmp	w1, #0x6f
  439884:	b.eq	4397b4 <argp_parse@@Base+0x6074>  // b.none
  439888:	b.hi	43972c <argp_parse@@Base+0x5fec>  // b.pmore
  43988c:	cmp	w1, #0x37
  439890:	b.ls	43970c <argp_parse@@Base+0x5fcc>  // b.plast
  439894:	add	x20, x20, #0x2
  439898:	mov	w3, #0x38                  	// #56
  43989c:	cmp	w1, #0x67
  4398a0:	b.ne	439720 <argp_parse@@Base+0x5fe0>  // b.any
  4398a4:	mov	x22, x4
  4398a8:	strb	w21, [x4]
  4398ac:	strb	w10, [x4, #1]
  4398b0:	str	w6, [x4, #4]
  4398b4:	str	w3, [x4, #8]
  4398b8:	b	439840 <argp_parse@@Base+0x6100>
  4398bc:	cmp	w2, #0x2c
  4398c0:	b.ne	4398d4 <argp_parse@@Base+0x6194>  // b.any
  4398c4:	add	x20, x20, #0x1
  4398c8:	mov	x4, x7
  4398cc:	ldp	x21, x22, [sp, #32]
  4398d0:	b	4395e8 <argp_parse@@Base+0x5ea8>
  4398d4:	cbnz	w2, 4398f8 <argp_parse@@Base+0x61b8>
  4398d8:	add	x7, x0, x7, lsl #4
  4398dc:	strb	wzr, [x7, #1]
  4398e0:	ldp	x21, x22, [sp, #32]
  4398e4:	b	439690 <argp_parse@@Base+0x5f50>
  4398e8:	ldp	x21, x22, [sp, #32]
  4398ec:	b	439688 <argp_parse@@Base+0x5f48>
  4398f0:	ldp	x21, x22, [sp, #32]
  4398f4:	b	439688 <argp_parse@@Base+0x5f48>
  4398f8:	ldp	x21, x22, [sp, #32]
  4398fc:	b	439688 <argp_parse@@Base+0x5f48>
  439900:	mov	x0, #0x0                   	// #0
  439904:	b	439690 <argp_parse@@Base+0x5f50>
  439908:	stp	x29, x30, [sp, #-160]!
  43990c:	mov	x29, sp
  439910:	add	x2, sp, #0x20
  439914:	mov	x1, x0
  439918:	mov	w0, #0x0                   	// #0
  43991c:	bl	404b10 <__xstat@plt>
  439920:	cbnz	w0, 439964 <argp_parse@@Base+0x6224>
  439924:	str	x19, [sp, #16]
  439928:	ldr	w19, [sp, #48]
  43992c:	mov	x0, #0x20                  	// #32
  439930:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  439934:	mov	w1, #0x3d                  	// #61
  439938:	strb	w1, [x0]
  43993c:	mov	w1, #0x1                   	// #1
  439940:	strb	w1, [x0, #1]
  439944:	mov	w1, #0xfff                 	// #4095
  439948:	str	w1, [x0, #4]
  43994c:	str	w19, [x0, #8]
  439950:	str	w1, [x0, #12]
  439954:	strb	wzr, [x0, #17]
  439958:	ldr	x19, [sp, #16]
  43995c:	ldp	x29, x30, [sp], #160
  439960:	ret
  439964:	mov	x0, #0x0                   	// #0
  439968:	b	43995c <argp_parse@@Base+0x621c>
  43996c:	and	w1, w1, #0xff
  439970:	and	w0, w0, #0xfff
  439974:	ldrb	w7, [x3, #1]
  439978:	cbz	w7, 439a78 <argp_parse@@Base+0x6338>
  43997c:	cmp	w1, #0x0
  439980:	mov	w11, #0xc00                 	// #3072
  439984:	csel	w11, w11, wzr, ne  // ne = any
  439988:	mov	w8, #0x0                   	// #0
  43998c:	mov	w10, #0x49                  	// #73
  439990:	mov	w14, #0x124                 	// #292
  439994:	mov	w12, #0x0                   	// #0
  439998:	mov	w13, #0x92                  	// #146
  43999c:	mvn	w9, w2
  4399a0:	b	4399f0 <argp_parse@@Base+0x62b0>
  4399a4:	and	w7, w0, w10
  4399a8:	orr	w7, w7, w1
  4399ac:	orr	w15, w2, w10
  4399b0:	cmp	w7, #0x0
  4399b4:	csel	w2, w15, w2, ne  // ne = any
  4399b8:	cmp	w5, #0x0
  4399bc:	csel	w7, w9, w5, eq  // eq = none
  4399c0:	bic	w2, w2, w6
  4399c4:	and	w2, w2, w7
  4399c8:	ldrb	w7, [x3]
  4399cc:	cmp	w7, #0x2d
  4399d0:	b.eq	439a6c <argp_parse@@Base+0x632c>  // b.none
  4399d4:	cmp	w7, #0x3d
  4399d8:	b.eq	439a3c <argp_parse@@Base+0x62fc>  // b.none
  4399dc:	cmp	w7, #0x2b
  4399e0:	b.eq	439a60 <argp_parse@@Base+0x6320>  // b.none
  4399e4:	add	x3, x3, #0x10
  4399e8:	ldrb	w7, [x3, #1]
  4399ec:	cbz	w7, 439a7c <argp_parse@@Base+0x633c>
  4399f0:	ldr	w5, [x3, #4]
  4399f4:	ldr	w6, [x3, #12]
  4399f8:	bic	w6, w11, w6
  4399fc:	ldr	w2, [x3, #8]
  439a00:	cmp	w7, #0x2
  439a04:	b.eq	4399a4 <argp_parse@@Base+0x6264>  // b.none
  439a08:	cmp	w7, #0x3
  439a0c:	b.ne	4399b8 <argp_parse@@Base+0x6278>  // b.any
  439a10:	and	w2, w2, w0
  439a14:	tst	w2, w14
  439a18:	csel	w7, w14, w12, ne  // ne = any
  439a1c:	tst	w2, w13
  439a20:	csel	w15, w13, w12, ne  // ne = any
  439a24:	orr	w7, w7, w15
  439a28:	tst	w2, w10
  439a2c:	csel	w15, w10, w12, ne  // ne = any
  439a30:	orr	w7, w7, w15
  439a34:	orr	w2, w7, w2
  439a38:	b	4399b8 <argp_parse@@Base+0x6278>
  439a3c:	cmp	w5, #0x0
  439a40:	cinv	w5, w5, ne  // ne = any
  439a44:	orr	w5, w5, w6
  439a48:	mvn	w6, w5
  439a4c:	and	w6, w6, #0xfff
  439a50:	orr	w8, w8, w6
  439a54:	and	w5, w5, w0
  439a58:	orr	w0, w5, w2
  439a5c:	b	4399e4 <argp_parse@@Base+0x62a4>
  439a60:	orr	w8, w8, w2
  439a64:	orr	w0, w0, w2
  439a68:	b	4399e4 <argp_parse@@Base+0x62a4>
  439a6c:	orr	w8, w8, w2
  439a70:	bic	w0, w0, w2
  439a74:	b	4399e4 <argp_parse@@Base+0x62a4>
  439a78:	mov	w8, #0x0                   	// #0
  439a7c:	cbz	x4, 439a84 <argp_parse@@Base+0x6344>
  439a80:	str	w8, [x4]
  439a84:	ret
  439a88:	stp	x29, x30, [sp, #-32]!
  439a8c:	mov	x29, sp
  439a90:	stp	x19, x20, [sp, #16]
  439a94:	mov	w19, w0
  439a98:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  439a9c:	ldr	w20, [x0, #968]
  439aa0:	mov	w2, #0x5                   	// #5
  439aa4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  439aa8:	add	x1, x1, #0x7b0
  439aac:	mov	x0, #0x0                   	// #0
  439ab0:	bl	4049c0 <dcgettext@plt>
  439ab4:	mov	x2, x0
  439ab8:	mov	w1, w19
  439abc:	mov	w0, w20
  439ac0:	bl	404050 <error@plt>
  439ac4:	bl	404660 <abort@plt>
  439ac8:	stp	x29, x30, [sp, #-32]!
  439acc:	mov	x29, sp
  439ad0:	stp	x19, x20, [sp, #16]
  439ad4:	mov	w19, w0
  439ad8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  439adc:	ldr	w20, [x0, #968]
  439ae0:	mov	w2, #0x5                   	// #5
  439ae4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  439ae8:	add	x1, x1, #0x7e0
  439aec:	mov	x0, #0x0                   	// #0
  439af0:	bl	4049c0 <dcgettext@plt>
  439af4:	mov	x2, x0
  439af8:	mov	w1, w19
  439afc:	mov	w0, w20
  439b00:	bl	404050 <error@plt>
  439b04:	bl	404660 <abort@plt>
  439b08:	stp	x29, x30, [sp, #-48]!
  439b0c:	mov	x29, sp
  439b10:	stp	x19, x20, [sp, #16]
  439b14:	stp	x21, x22, [sp, #32]
  439b18:	mov	x21, x3
  439b1c:	mov	w3, #0x4900                	// #18688
  439b20:	movk	w3, #0x8, lsl #16
  439b24:	orr	w2, w2, w3
  439b28:	bl	450394 <_obstack_memory_used@@Base+0xf1f8>
  439b2c:	mov	x20, #0x0                   	// #0
  439b30:	tbnz	w0, #31, 439b48 <argp_parse@@Base+0x6408>
  439b34:	mov	w19, w0
  439b38:	bl	404620 <fdopendir@plt>
  439b3c:	mov	x20, x0
  439b40:	cbz	x0, 439b5c <argp_parse@@Base+0x641c>
  439b44:	str	w19, [x21]
  439b48:	mov	x0, x20
  439b4c:	ldp	x19, x20, [sp, #16]
  439b50:	ldp	x21, x22, [sp, #32]
  439b54:	ldp	x29, x30, [sp], #48
  439b58:	ret
  439b5c:	bl	404ad0 <__errno_location@plt>
  439b60:	mov	x21, x0
  439b64:	ldr	w22, [x0]
  439b68:	mov	w0, w19
  439b6c:	bl	4045d0 <close@plt>
  439b70:	str	w22, [x21]
  439b74:	b	439b48 <argp_parse@@Base+0x6408>
  439b78:	ldr	x3, [x1, #8]
  439b7c:	ldr	x4, [x1, #16]
  439b80:	ldr	x2, [x0, #168]
  439b84:	cbz	x2, 439bc0 <argp_parse@@Base+0x6480>
  439b88:	ldr	x5, [x0, #48]
  439b8c:	cbnz	x5, 439bc0 <argp_parse@@Base+0x6480>
  439b90:	ldrb	w5, [x0, #161]
  439b94:	cbnz	w5, 439bc0 <argp_parse@@Base+0x6480>
  439b98:	ldr	x2, [x0, #200]
  439b9c:	cmp	x2, #0x0
  439ba0:	ccmp	x4, #0x2, #0x0, eq  // eq = none
  439ba4:	b.le	439c9c <argp_parse@@Base+0x655c>
  439ba8:	mov	w2, #0x1                   	// #1
  439bac:	strb	w2, [x0, #216]
  439bb0:	ldp	x2, x3, [x1]
  439bb4:	stp	x2, x3, [x0, #32]
  439bb8:	str	x4, [x0, #48]
  439bbc:	b	439c4c <argp_parse@@Base+0x650c>
  439bc0:	cmp	x4, #0x4
  439bc4:	b.le	439c50 <argp_parse@@Base+0x6510>
  439bc8:	add	x2, x2, #0x1
  439bcc:	str	x2, [x0, #168]
  439bd0:	mov	x2, #0xd70b                	// #55051
  439bd4:	movk	x2, #0x70a3, lsl #16
  439bd8:	movk	x2, #0xa3d, lsl #32
  439bdc:	movk	x2, #0xa3d7, lsl #48
  439be0:	smulh	x1, x3, x2
  439be4:	add	x1, x1, x3
  439be8:	asr	x1, x1, #6
  439bec:	asr	x6, x3, #63
  439bf0:	sub	x1, x1, x6
  439bf4:	add	x5, x1, x1, lsl #1
  439bf8:	add	x5, x1, x5, lsl #3
  439bfc:	sub	x5, x3, x5, lsl #2
  439c00:	str	x5, [x0, #64]
  439c04:	smulh	x2, x1, x2
  439c08:	add	x2, x2, x1
  439c0c:	asr	x2, x2, #6
  439c10:	sub	x2, x2, x1, asr #63
  439c14:	add	x5, x2, x2, lsl #1
  439c18:	add	x2, x2, x5, lsl #3
  439c1c:	sub	x1, x1, x2, lsl #2
  439c20:	str	x1, [x0, #56]
  439c24:	mov	x1, #0x594b                	// #22859
  439c28:	movk	x1, #0x3886, lsl #16
  439c2c:	movk	x1, #0xc5d6, lsl #32
  439c30:	movk	x1, #0x346d, lsl #48
  439c34:	smulh	x3, x3, x1
  439c38:	asr	x3, x3, #11
  439c3c:	sub	x3, x3, x6
  439c40:	str	x3, [x0, #40]
  439c44:	sub	x4, x4, #0x4
  439c48:	str	x4, [x0, #48]
  439c4c:	ret
  439c50:	ldr	x1, [x0, #200]
  439c54:	add	x1, x1, #0x1
  439c58:	str	x1, [x0, #200]
  439c5c:	cmp	x4, #0x2
  439c60:	b.le	439ca4 <argp_parse@@Base+0x6564>
  439c64:	mov	x1, #0xd70b                	// #55051
  439c68:	movk	x1, #0x70a3, lsl #16
  439c6c:	movk	x1, #0xa3d, lsl #32
  439c70:	movk	x1, #0xa3d7, lsl #48
  439c74:	smulh	x1, x3, x1
  439c78:	add	x1, x1, x3
  439c7c:	asr	x1, x1, #6
  439c80:	sub	x1, x1, x3, asr #63
  439c84:	str	x1, [x0, #72]
  439c88:	add	x2, x1, x1, lsl #1
  439c8c:	add	x1, x1, x2, lsl #3
  439c90:	sub	x3, x3, x1, lsl #2
  439c94:	str	x3, [x0, #80]
  439c98:	b	439cac <argp_parse@@Base+0x656c>
  439c9c:	mov	x1, #0x1                   	// #1
  439ca0:	str	x1, [x0, #200]
  439ca4:	str	x3, [x0, #72]
  439ca8:	str	xzr, [x0, #80]
  439cac:	str	xzr, [x0, #88]
  439cb0:	str	xzr, [x0, #96]
  439cb4:	mov	w1, #0x2                   	// #2
  439cb8:	str	w1, [x0, #28]
  439cbc:	b	439c4c <argp_parse@@Base+0x650c>
  439cc0:	mov	x3, x0
  439cc4:	ldr	x0, [x1]
  439cc8:	ldr	x4, [x1, #8]
  439ccc:	ldr	x5, [x1, #16]
  439cd0:	ldr	x6, [x1, #24]
  439cd4:	ldr	x7, [x1, #32]
  439cd8:	ldr	x8, [x1, #40]
  439cdc:	ldr	w1, [x1, #48]
  439ce0:	tbnz	w2, #31, 439d88 <argp_parse@@Base+0x6648>
  439ce4:	ldr	w2, [x3, #152]
  439ce8:	adds	w1, w2, w1
  439cec:	cset	w2, vs
  439cf0:	str	w1, [x3, #152]
  439cf4:	ldr	x1, [x3, #144]
  439cf8:	adds	x8, x1, x8
  439cfc:	cset	x9, vs
  439d00:	str	x8, [x3, #144]
  439d04:	ldr	x8, [x3, #136]
  439d08:	adds	x7, x8, x7
  439d0c:	cset	x1, vs
  439d10:	str	x7, [x3, #136]
  439d14:	ldr	x7, [x3, #128]
  439d18:	adds	x6, x7, x6
  439d1c:	cset	x7, vs
  439d20:	str	x6, [x3, #128]
  439d24:	ldr	x6, [x3, #120]
  439d28:	adds	x5, x6, x5
  439d2c:	cset	x6, vs
  439d30:	str	x5, [x3, #120]
  439d34:	ldr	x5, [x3, #112]
  439d38:	adds	x4, x5, x4
  439d3c:	cset	x5, vs
  439d40:	str	x4, [x3, #112]
  439d44:	ldr	x4, [x3, #104]
  439d48:	adds	x0, x4, x0
  439d4c:	str	x0, [x3, #104]
  439d50:	orr	x1, x1, x7
  439d54:	orr	x0, x6, x5
  439d58:	orr	w1, w1, w0
  439d5c:	and	w0, w2, #0x1
  439d60:	and	w2, w9, #0x1
  439d64:	orr	w0, w0, w2
  439d68:	orr	w1, w1, w0
  439d6c:	csinc	w1, w1, wzr, vc
  439d70:	mov	w0, #0x0                   	// #0
  439d74:	cbnz	w1, 439d84 <argp_parse@@Base+0x6644>
  439d78:	mov	w0, #0x1                   	// #1
  439d7c:	strb	w0, [x3, #161]
  439d80:	mov	w0, #0x1                   	// #1
  439d84:	ret
  439d88:	ldr	w2, [x3, #152]
  439d8c:	subs	w1, w2, w1
  439d90:	cset	w2, vs
  439d94:	str	w1, [x3, #152]
  439d98:	ldr	x1, [x3, #144]
  439d9c:	subs	x8, x1, x8
  439da0:	cset	x9, vs
  439da4:	str	x8, [x3, #144]
  439da8:	ldr	x8, [x3, #136]
  439dac:	subs	x7, x8, x7
  439db0:	cset	x1, vs
  439db4:	str	x7, [x3, #136]
  439db8:	ldr	x7, [x3, #128]
  439dbc:	subs	x6, x7, x6
  439dc0:	cset	x7, vs
  439dc4:	str	x6, [x3, #128]
  439dc8:	ldr	x6, [x3, #120]
  439dcc:	subs	x5, x6, x5
  439dd0:	cset	x6, vs
  439dd4:	str	x5, [x3, #120]
  439dd8:	ldr	x5, [x3, #112]
  439ddc:	subs	x4, x5, x4
  439de0:	cset	x5, vs
  439de4:	str	x4, [x3, #112]
  439de8:	ldr	x4, [x3, #104]
  439dec:	subs	x0, x4, x0
  439df0:	str	x0, [x3, #104]
  439df4:	orr	x1, x1, x7
  439df8:	orr	x0, x6, x5
  439dfc:	orr	w1, w1, w0
  439e00:	and	w0, w2, #0x1
  439e04:	and	w2, w9, #0x1
  439e08:	orr	w0, w0, w2
  439e0c:	orr	w1, w1, w0
  439e10:	csinc	w1, w1, wzr, vc
  439e14:	b	439d70 <argp_parse@@Base+0x6630>
  439e18:	mov	x5, x0
  439e1c:	ldr	x4, [x1, #8]
  439e20:	ldr	x0, [x1, #16]
  439e24:	cmp	x0, #0x2
  439e28:	cset	w3, le
  439e2c:	lsr	x0, x2, #63
  439e30:	ands	w0, w3, w0
  439e34:	b.ne	439e6c <argp_parse@@Base+0x672c>  // b.any
  439e38:	tbnz	x2, #63, 439e78 <argp_parse@@Base+0x6738>
  439e3c:	mov	x6, #0x3c                  	// #60
  439e40:	mul	x3, x4, x6
  439e44:	smulh	x4, x4, x6
  439e48:	cmp	x4, x3, asr #63
  439e4c:	cset	w4, ne  // ne = any
  439e50:	ldrb	w1, [x1]
  439e54:	cbz	w1, 439ed8 <argp_parse@@Base+0x6798>
  439e58:	subs	x2, x3, x2
  439e5c:	cset	w1, vs
  439e60:	orr	w1, w4, w1
  439e64:	cbz	w1, 439eb0 <argp_parse@@Base+0x6770>
  439e68:	b	439ed4 <argp_parse@@Base+0x6794>
  439e6c:	add	x2, x4, x4, lsl #1
  439e70:	add	x4, x4, x2, lsl #3
  439e74:	lsl	x4, x4, #2
  439e78:	mov	x1, #0xd70b                	// #55051
  439e7c:	movk	x1, #0x70a3, lsl #16
  439e80:	movk	x1, #0xa3d, lsl #32
  439e84:	movk	x1, #0xa3d7, lsl #48
  439e88:	smulh	x1, x4, x1
  439e8c:	add	x1, x1, x4
  439e90:	asr	x1, x1, #6
  439e94:	sub	x1, x1, x4, asr #63
  439e98:	lsl	x2, x1, #4
  439e9c:	sub	x2, x2, x1
  439ea0:	add	x0, x1, x1, lsl #1
  439ea4:	add	x1, x1, x0, lsl #3
  439ea8:	sub	x4, x4, x1, lsl #2
  439eac:	add	x2, x4, x2, lsl #2
  439eb0:	add	x1, x2, #0x5a0
  439eb4:	mov	w0, #0x0                   	// #0
  439eb8:	cmp	x1, #0xb40
  439ebc:	b.hi	439ed4 <argp_parse@@Base+0x6794>  // b.pmore
  439ec0:	lsl	w0, w2, #4
  439ec4:	sub	w2, w0, w2
  439ec8:	lsl	w2, w2, #2
  439ecc:	str	w2, [x5, #24]
  439ed0:	mov	w0, #0x1                   	// #1
  439ed4:	ret
  439ed8:	adds	x2, x3, x2
  439edc:	cset	w1, vs
  439ee0:	b	439e60 <argp_parse@@Base+0x6720>
  439ee4:	ldr	w2, [x1, #24]
  439ee8:	tbnz	w2, #31, 439f54 <argp_parse@@Base+0x6814>
  439eec:	ldr	w2, [x0]
  439ef0:	ldr	w3, [x1]
  439ef4:	eor	w2, w2, w3
  439ef8:	ldr	w3, [x0, #4]
  439efc:	ldr	w4, [x1, #4]
  439f00:	eor	w3, w3, w4
  439f04:	orr	w2, w2, w3
  439f08:	ldr	w3, [x0, #8]
  439f0c:	ldr	w4, [x1, #8]
  439f10:	eor	w3, w3, w4
  439f14:	ldr	w4, [x0, #12]
  439f18:	ldr	w5, [x1, #12]
  439f1c:	eor	w4, w4, w5
  439f20:	orr	w3, w3, w4
  439f24:	orr	w2, w2, w3
  439f28:	ldr	w3, [x0, #16]
  439f2c:	ldr	w4, [x1, #16]
  439f30:	eor	w3, w3, w4
  439f34:	ldr	w0, [x0, #20]
  439f38:	ldr	w1, [x1, #20]
  439f3c:	eor	w0, w0, w1
  439f40:	orr	w0, w3, w0
  439f44:	orr	w0, w2, w0
  439f48:	cmp	w0, #0x0
  439f4c:	cset	w0, eq  // eq = none
  439f50:	ret
  439f54:	mov	w0, #0x0                   	// #0
  439f58:	b	439f50 <argp_parse@@Base+0x6810>
  439f5c:	stp	x29, x30, [sp, #-48]!
  439f60:	mov	x29, sp
  439f64:	stp	x19, x20, [sp, #16]
  439f68:	str	x21, [sp, #32]
  439f6c:	mov	x21, x0
  439f70:	mov	x20, x1
  439f74:	adrp	x19, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  439f78:	add	x19, x19, #0x9b8
  439f7c:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x19e64>
  439f80:	add	x1, x2, #0x810
  439f84:	mov	x0, x20
  439f88:	bl	404720 <strcmp@plt>
  439f8c:	cbz	w0, 439fe4 <argp_parse@@Base+0x68a4>
  439f90:	ldr	x1, [x19, #16]!
  439f94:	cbnz	x1, 439f84 <argp_parse@@Base+0x6844>
  439f98:	add	x19, x21, #0xe8
  439f9c:	ldr	x1, [x21, #232]
  439fa0:	cbz	x1, 439ff8 <argp_parse@@Base+0x68b8>
  439fa4:	mov	x0, x20
  439fa8:	bl	404720 <strcmp@plt>
  439fac:	cbz	w0, 439fe4 <argp_parse@@Base+0x68a4>
  439fb0:	ldr	x1, [x19, #16]!
  439fb4:	cbnz	x1, 439fa4 <argp_parse@@Base+0x6864>
  439fb8:	adrp	x19, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  439fbc:	add	x19, x19, #0x9b8
  439fc0:	add	x19, x19, #0x40
  439fc4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  439fc8:	add	x1, x1, #0x818
  439fcc:	mov	x0, x20
  439fd0:	bl	404720 <strcmp@plt>
  439fd4:	cbz	w0, 439fe4 <argp_parse@@Base+0x68a4>
  439fd8:	ldr	x1, [x19, #16]!
  439fdc:	cbnz	x1, 439fcc <argp_parse@@Base+0x688c>
  439fe0:	mov	x19, x1
  439fe4:	mov	x0, x19
  439fe8:	ldp	x19, x20, [sp, #16]
  439fec:	ldr	x21, [sp, #32]
  439ff0:	ldp	x29, x30, [sp], #48
  439ff4:	ret
  439ff8:	adrp	x19, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  439ffc:	add	x19, x19, #0x9b8
  43a000:	add	x19, x19, #0x40
  43a004:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43a008:	add	x1, x1, #0x818
  43a00c:	b	439fcc <argp_parse@@Base+0x688c>
  43a010:	stp	x29, x30, [sp, #-48]!
  43a014:	mov	x29, sp
  43a018:	stp	x19, x20, [sp, #16]
  43a01c:	str	x21, [sp, #32]
  43a020:	mov	x19, x0
  43a024:	mov	x20, x1
  43a028:	mov	w21, w2
  43a02c:	ldrb	w0, [x0, #224]
  43a030:	cbz	w0, 43a098 <argp_parse@@Base+0x6958>
  43a034:	ldr	x5, [x19, #8]
  43a038:	add	x0, x5, #0x1
  43a03c:	cmp	x0, #0xd
  43a040:	b.hi	43a078 <argp_parse@@Base+0x6938>  // b.pmore
  43a044:	adrp	x3, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  43a048:	add	x3, x3, #0x9b8
  43a04c:	add	x3, x3, #0x340
  43a050:	mov	x5, x0
  43a054:	add	x0, x0, x0, lsl #1
  43a058:	add	x3, x3, x0, lsl #2
  43a05c:	sub	x3, x3, x5
  43a060:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x12e64>
  43a064:	add	x2, x2, #0x848
  43a068:	sxtw	x1, w21
  43a06c:	mov	x0, x20
  43a070:	bl	404200 <snprintf@plt>
  43a074:	b	43a0a0 <argp_parse@@Base+0x6960>
  43a078:	adrp	x4, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43a07c:	add	x4, x4, #0x820
  43a080:	mov	x3, #0xffffffffffffffff    	// #-1
  43a084:	mov	w2, #0x1                   	// #1
  43a088:	sxtw	x1, w21
  43a08c:	mov	x0, x20
  43a090:	bl	404290 <__snprintf_chk@plt>
  43a094:	b	43a0a0 <argp_parse@@Base+0x6960>
  43a098:	strb	wzr, [x1]
  43a09c:	mov	w0, #0x0                   	// #0
  43a0a0:	ldr	w2, [x19, #16]
  43a0a4:	cmp	w2, #0x6
  43a0a8:	b.hi	43a0b8 <argp_parse@@Base+0x6978>  // b.pmore
  43a0ac:	cmp	w0, #0x0
  43a0b0:	ccmp	w0, w21, #0x0, ge  // ge = tcont
  43a0b4:	b.lt	43a0cc <argp_parse@@Base+0x698c>  // b.tstop
  43a0b8:	mov	x0, x20
  43a0bc:	ldp	x19, x20, [sp, #16]
  43a0c0:	ldr	x21, [sp, #32]
  43a0c4:	ldp	x29, x30, [sp], #48
  43a0c8:	ret
  43a0cc:	adrp	x5, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  43a0d0:	add	x5, x5, #0x9b8
  43a0d4:	add	x5, x5, #0x3e0
  43a0d8:	cmp	w0, #0x0
  43a0dc:	sub	w1, w21, w0
  43a0e0:	add	x5, x5, w2, sxtw #2
  43a0e4:	adrp	x4, 454000 <_obstack_memory_used@@Base+0x12e64>
  43a0e8:	add	x4, x4, #0xac8
  43a0ec:	cinc	x4, x4, eq  // eq = none
  43a0f0:	mov	x3, #0xffffffffffffffff    	// #-1
  43a0f4:	mov	w2, #0x1                   	// #1
  43a0f8:	sxtw	x1, w1
  43a0fc:	add	x0, x20, w0, sxtw
  43a100:	bl	404290 <__snprintf_chk@plt>
  43a104:	b	43a0b8 <argp_parse@@Base+0x6978>
  43a108:	stp	x29, x30, [sp, #-48]!
  43a10c:	mov	x29, sp
  43a110:	stp	x19, x20, [sp, #16]
  43a114:	str	x21, [sp, #32]
  43a118:	mov	w21, w0
  43a11c:	mov	x20, x1
  43a120:	cmp	w0, #0x0
  43a124:	mov	w4, #0x2d                  	// #45
  43a128:	mov	w0, #0x2b                  	// #43
  43a12c:	csel	w4, w4, w0, lt  // lt = tstop
  43a130:	mov	w2, #0xb3c5                	// #46021
  43a134:	movk	w2, #0x91a2, lsl #16
  43a138:	smull	x2, w21, w2
  43a13c:	lsr	x2, x2, #32
  43a140:	add	w2, w21, w2
  43a144:	asr	w2, w2, #11
  43a148:	subs	w19, w2, w21, asr #31
  43a14c:	cneg	w5, w19, mi  // mi = first
  43a150:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43a154:	add	x3, x3, #0x828
  43a158:	mov	x2, #0xffffffffffffffff    	// #-1
  43a15c:	mov	w1, #0x1                   	// #1
  43a160:	mov	x0, x20
  43a164:	bl	404010 <__sprintf_chk@plt>
  43a168:	mov	w1, #0xe10                 	// #3600
  43a16c:	msub	w19, w19, w1, w21
  43a170:	cbz	w19, 43a220 <argp_parse@@Base+0x6ae0>
  43a174:	add	x2, x20, w0, sxtw
  43a178:	cmp	w19, #0x0
  43a17c:	cneg	w19, w19, lt  // lt = tstop
  43a180:	mov	w1, #0x8889                	// #34953
  43a184:	movk	w1, #0x8888, lsl #16
  43a188:	smull	x1, w19, w1
  43a18c:	lsr	x1, x1, #32
  43a190:	add	w1, w19, w1
  43a194:	asr	w1, w1, #5
  43a198:	sub	w1, w1, w19, asr #31
  43a19c:	lsl	w3, w1, #4
  43a1a0:	sub	w3, w3, w1
  43a1a4:	mov	w4, #0x3a                  	// #58
  43a1a8:	strb	w4, [x20, w0, sxtw]
  43a1ac:	mov	w0, #0x6667                	// #26215
  43a1b0:	movk	w0, #0x6666, lsl #16
  43a1b4:	smull	x0, w1, w0
  43a1b8:	asr	x0, x0, #34
  43a1bc:	sub	w0, w0, w1, asr #31
  43a1c0:	add	w4, w0, #0x30
  43a1c4:	strb	w4, [x2, #1]
  43a1c8:	add	w0, w0, w0, lsl #2
  43a1cc:	sub	w0, w1, w0, lsl #1
  43a1d0:	add	w0, w0, #0x30
  43a1d4:	strb	w0, [x2, #2]
  43a1d8:	subs	w19, w19, w3, lsl #2
  43a1dc:	add	x1, x2, #0x3
  43a1e0:	b.eq	43a21c <argp_parse@@Base+0x6adc>  // b.none
  43a1e4:	mov	w0, #0x3a                  	// #58
  43a1e8:	strb	w0, [x2, #3]
  43a1ec:	mov	w0, #0x6667                	// #26215
  43a1f0:	movk	w0, #0x6666, lsl #16
  43a1f4:	smull	x0, w19, w0
  43a1f8:	asr	x0, x0, #34
  43a1fc:	sub	w0, w0, w19, asr #31
  43a200:	add	w1, w0, #0x30
  43a204:	strb	w1, [x2, #4]
  43a208:	add	x1, x2, #0x6
  43a20c:	add	w0, w0, w0, lsl #2
  43a210:	sub	w19, w19, w0, lsl #1
  43a214:	add	w19, w19, #0x30
  43a218:	strb	w19, [x2, #5]
  43a21c:	strb	wzr, [x1]
  43a220:	mov	x0, x20
  43a224:	ldp	x19, x20, [sp, #16]
  43a228:	ldr	x21, [sp, #32]
  43a22c:	ldp	x29, x30, [sp], #48
  43a230:	ret
  43a234:	stp	x29, x30, [sp, #-32]!
  43a238:	mov	x29, sp
  43a23c:	str	x19, [sp, #16]
  43a240:	mov	x19, x1
  43a244:	mov	w4, #0x851f                	// #34079
  43a248:	movk	w4, #0x51eb, lsl #16
  43a24c:	smull	x4, w0, w4
  43a250:	asr	x4, x4, #37
  43a254:	sub	w4, w4, w0, asr #31
  43a258:	mov	w5, #0x64                  	// #100
  43a25c:	msub	w5, w4, w5, w0
  43a260:	cmp	w5, #0x0
  43a264:	cneg	w5, w5, lt  // lt = tstop
  43a268:	adds	w4, w4, #0x13
  43a26c:	cneg	w4, w4, mi  // mi = first
  43a270:	cmn	w0, #0x76c
  43a274:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43a278:	add	x3, x3, #0x830
  43a27c:	cinc	x3, x3, ge  // ge = tcont
  43a280:	mov	x2, #0xffffffffffffffff    	// #-1
  43a284:	mov	w1, #0x1                   	// #1
  43a288:	mov	x0, x19
  43a28c:	bl	404010 <__sprintf_chk@plt>
  43a290:	mov	x0, x19
  43a294:	ldr	x19, [sp, #16]
  43a298:	ldp	x29, x30, [sp], #32
  43a29c:	ret
  43a2a0:	and	w0, w0, #0xff
  43a2a4:	cbnz	x1, 43a2ac <argp_parse@@Base+0x6b6c>
  43a2a8:	ret
  43a2ac:	stp	x29, x30, [sp, #-16]!
  43a2b0:	mov	x29, sp
  43a2b4:	eor	w0, w0, #0x1
  43a2b8:	mov	x4, x2
  43a2bc:	mov	x3, x1
  43a2c0:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43a2c4:	add	x2, x2, #0x840
  43a2c8:	add	x2, x2, w0, uxtb
  43a2cc:	mov	w1, #0x1                   	// #1
  43a2d0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43a2d4:	ldr	x0, [x0, #1096]
  43a2d8:	bl	404710 <__fprintf_chk@plt>
  43a2dc:	mov	w0, #0x1                   	// #1
  43a2e0:	ldp	x29, x30, [sp], #16
  43a2e4:	ret
  43a2e8:	stp	x29, x30, [sp, #-320]!
  43a2ec:	mov	x29, sp
  43a2f0:	stp	x19, x20, [sp, #16]
  43a2f4:	mov	x19, x0
  43a2f8:	str	x1, [sp, #264]
  43a2fc:	str	x2, [sp, #272]
  43a300:	str	x3, [sp, #280]
  43a304:	str	x4, [sp, #288]
  43a308:	str	x5, [sp, #296]
  43a30c:	str	x6, [sp, #304]
  43a310:	str	x7, [sp, #312]
  43a314:	str	q0, [sp, #128]
  43a318:	str	q1, [sp, #144]
  43a31c:	str	q2, [sp, #160]
  43a320:	str	q3, [sp, #176]
  43a324:	str	q4, [sp, #192]
  43a328:	str	q5, [sp, #208]
  43a32c:	str	q6, [sp, #224]
  43a330:	str	q7, [sp, #240]
  43a334:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43a338:	ldr	x3, [x20, #1096]
  43a33c:	mov	x2, #0x6                   	// #6
  43a340:	mov	x1, #0x1                   	// #1
  43a344:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43a348:	add	x0, x0, #0x850
  43a34c:	bl	4048b0 <fwrite@plt>
  43a350:	add	x0, sp, #0x140
  43a354:	str	x0, [sp, #96]
  43a358:	str	x0, [sp, #104]
  43a35c:	add	x0, sp, #0x100
  43a360:	str	x0, [sp, #112]
  43a364:	mov	w0, #0xffffffc8            	// #-56
  43a368:	str	w0, [sp, #120]
  43a36c:	mov	w0, #0xffffff80            	// #-128
  43a370:	str	w0, [sp, #124]
  43a374:	ldp	x2, x3, [sp, #96]
  43a378:	stp	x2, x3, [sp, #64]
  43a37c:	ldp	x0, x1, [sp, #112]
  43a380:	stp	x0, x1, [sp, #80]
  43a384:	stp	x2, x3, [sp, #32]
  43a388:	stp	x0, x1, [sp, #48]
  43a38c:	add	x3, sp, #0x20
  43a390:	mov	x2, x19
  43a394:	mov	w1, #0x1                   	// #1
  43a398:	ldr	x0, [x20, #1096]
  43a39c:	bl	4044b0 <__vfprintf_chk@plt>
  43a3a0:	ldp	x19, x20, [sp, #16]
  43a3a4:	ldp	x29, x30, [sp], #320
  43a3a8:	ret
  43a3ac:	stp	x29, x30, [sp, #-160]!
  43a3b0:	mov	x29, sp
  43a3b4:	stp	x21, x22, [sp, #32]
  43a3b8:	ldrb	w21, [x1, #217]
  43a3bc:	cbnz	w21, 43a3cc <argp_parse@@Base+0x6c8c>
  43a3c0:	ldp	x21, x22, [sp, #32]
  43a3c4:	ldp	x29, x30, [sp], #160
  43a3c8:	ret
  43a3cc:	stp	x19, x20, [sp, #16]
  43a3d0:	mov	x20, x0
  43a3d4:	mov	x19, x1
  43a3d8:	mov	w2, #0x5                   	// #5
  43a3dc:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43a3e0:	add	x1, x1, #0x860
  43a3e4:	mov	x0, #0x0                   	// #0
  43a3e8:	bl	4049c0 <dcgettext@plt>
  43a3ec:	mov	x1, x20
  43a3f0:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43a3f4:	ldr	x0, [x19, #168]
  43a3f8:	cbz	x0, 43a404 <argp_parse@@Base+0x6cc4>
  43a3fc:	ldrb	w0, [x19, #218]
  43a400:	cbz	w0, 43a594 <argp_parse@@Base+0x6e54>
  43a404:	ldrb	w1, [x19, #216]
  43a408:	ldrb	w0, [x19, #223]
  43a40c:	mov	w20, #0x0                   	// #0
  43a410:	cmp	w1, w0
  43a414:	b.eq	43a454 <argp_parse@@Base+0x6d14>  // b.none
  43a418:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43a41c:	ldr	x20, [x0, #1096]
  43a420:	mov	w2, #0x5                   	// #5
  43a424:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43a428:	add	x1, x1, #0x898
  43a42c:	mov	x0, #0x0                   	// #0
  43a430:	bl	4049c0 <dcgettext@plt>
  43a434:	ldr	x3, [x19, #40]
  43a438:	mov	x2, x0
  43a43c:	mov	w1, #0x1                   	// #1
  43a440:	mov	x0, x20
  43a444:	bl	404710 <__fprintf_chk@plt>
  43a448:	ldrb	w0, [x19, #216]
  43a44c:	strb	w0, [x19, #223]
  43a450:	mov	w20, w21
  43a454:	ldr	x0, [x19, #200]
  43a458:	cbz	x0, 43a464 <argp_parse@@Base+0x6d24>
  43a45c:	ldrb	w0, [x19, #221]
  43a460:	cbz	w0, 43a5ec <argp_parse@@Base+0x6eac>
  43a464:	ldr	x0, [x19, #176]
  43a468:	cbz	x0, 43a4d0 <argp_parse@@Base+0x6d90>
  43a46c:	ldrb	w0, [x19, #219]
  43a470:	cbnz	w0, 43a4d0 <argp_parse@@Base+0x6d90>
  43a474:	cbnz	w20, 43a678 <argp_parse@@Base+0x6f38>
  43a478:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43a47c:	ldr	x22, [x0, #1096]
  43a480:	mov	w2, #0x5                   	// #5
  43a484:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43a488:	add	x1, x1, #0x8d0
  43a48c:	mov	x0, #0x0                   	// #0
  43a490:	bl	4049c0 <dcgettext@plt>
  43a494:	mov	x20, x0
  43a498:	mov	w2, #0x64                  	// #100
  43a49c:	add	x1, sp, #0x38
  43a4a0:	mov	x0, x19
  43a4a4:	bl	43a010 <argp_parse@@Base+0x68d0>
  43a4a8:	ldr	w5, [x19, #16]
  43a4ac:	ldr	x4, [x19, #8]
  43a4b0:	mov	x3, x0
  43a4b4:	mov	x2, x20
  43a4b8:	mov	w1, #0x1                   	// #1
  43a4bc:	mov	x0, x22
  43a4c0:	bl	404710 <__fprintf_chk@plt>
  43a4c4:	mov	w0, #0x1                   	// #1
  43a4c8:	strb	w0, [x19, #219]
  43a4cc:	mov	w20, w21
  43a4d0:	ldr	x0, [x19, #184]
  43a4d4:	cbz	x0, 43a52c <argp_parse@@Base+0x6dec>
  43a4d8:	ldrb	w0, [x19, #220]
  43a4dc:	cbnz	w0, 43a52c <argp_parse@@Base+0x6dec>
  43a4e0:	eor	w2, w20, #0x1
  43a4e4:	ldr	x1, [x19, #192]
  43a4e8:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  43a4ec:	add	x0, x0, #0x7f8
  43a4f0:	adrp	x4, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43a4f4:	add	x4, x4, #0x858
  43a4f8:	cmp	x1, #0x0
  43a4fc:	csel	x4, x4, x0, ne  // ne = any
  43a500:	ldr	w3, [x19, #20]
  43a504:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43a508:	add	x0, x0, #0x8f0
  43a50c:	add	x2, x0, w2, uxtb
  43a510:	mov	w1, #0x1                   	// #1
  43a514:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43a518:	ldr	x0, [x0, #1096]
  43a51c:	bl	404710 <__fprintf_chk@plt>
  43a520:	mov	w0, #0x1                   	// #1
  43a524:	strb	w0, [x19, #220]
  43a528:	mov	w20, w21
  43a52c:	ldr	x0, [x19, #208]
  43a530:	cbz	x0, 43a53c <argp_parse@@Base+0x6dfc>
  43a534:	ldrb	w0, [x19, #222]
  43a538:	cbz	w0, 43a68c <argp_parse@@Base+0x6f4c>
  43a53c:	ldrb	w0, [x19, #160]
  43a540:	cbz	w0, 43a57c <argp_parse@@Base+0x6e3c>
  43a544:	ldr	x19, [x19, #88]
  43a548:	cbnz	w20, 43a6d4 <argp_parse@@Base+0x6f94>
  43a54c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43a550:	ldr	x20, [x0, #1096]
  43a554:	mov	w2, #0x5                   	// #5
  43a558:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43a55c:	add	x1, x1, #0x908
  43a560:	mov	x0, #0x0                   	// #0
  43a564:	bl	4049c0 <dcgettext@plt>
  43a568:	mov	x3, x19
  43a56c:	mov	x2, x0
  43a570:	mov	w1, #0x1                   	// #1
  43a574:	mov	x0, x20
  43a578:	bl	404710 <__fprintf_chk@plt>
  43a57c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43a580:	ldr	x1, [x0, #1096]
  43a584:	mov	w0, #0xa                   	// #10
  43a588:	bl	404170 <fputc@plt>
  43a58c:	ldp	x19, x20, [sp, #16]
  43a590:	b	43a3c0 <argp_parse@@Base+0x6c80>
  43a594:	ldr	x5, [x19, #64]
  43a598:	ldr	x4, [x19, #56]
  43a59c:	ldr	x3, [x19, #40]
  43a5a0:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43a5a4:	add	x2, x2, #0x878
  43a5a8:	mov	w1, #0x1                   	// #1
  43a5ac:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43a5b0:	ldr	x0, [x0, #1096]
  43a5b4:	bl	404710 <__fprintf_chk@plt>
  43a5b8:	mov	w0, #0x1                   	// #1
  43a5bc:	strb	w0, [x19, #218]
  43a5c0:	ldrb	w1, [x19, #216]
  43a5c4:	ldrb	w0, [x19, #223]
  43a5c8:	cmp	w1, w0
  43a5cc:	b.eq	43a5e4 <argp_parse@@Base+0x6ea4>  // b.none
  43a5d0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43a5d4:	ldr	x1, [x0, #1096]
  43a5d8:	mov	w0, #0x20                  	// #32
  43a5dc:	bl	404170 <fputc@plt>
  43a5e0:	b	43a418 <argp_parse@@Base+0x6cd8>
  43a5e4:	mov	w20, w21
  43a5e8:	b	43a454 <argp_parse@@Base+0x6d14>
  43a5ec:	eor	w2, w20, #0x1
  43a5f0:	ldr	x5, [x19, #88]
  43a5f4:	ldr	x4, [x19, #80]
  43a5f8:	ldr	x3, [x19, #72]
  43a5fc:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43a600:	add	x0, x0, #0x8a8
  43a604:	add	x2, x0, w2, uxtb
  43a608:	mov	w1, #0x1                   	// #1
  43a60c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43a610:	ldr	x0, [x0, #1096]
  43a614:	bl	404710 <__fprintf_chk@plt>
  43a618:	ldr	x3, [x19, #96]
  43a61c:	cbnz	x3, 43a63c <argp_parse@@Base+0x6efc>
  43a620:	ldr	w0, [x19, #28]
  43a624:	cmp	w0, #0x1
  43a628:	b.eq	43a658 <argp_parse@@Base+0x6f18>  // b.none
  43a62c:	mov	w0, #0x1                   	// #1
  43a630:	strb	w0, [x19, #221]
  43a634:	mov	w20, w21
  43a638:	b	43a464 <argp_parse@@Base+0x6d24>
  43a63c:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43a640:	add	x2, x2, #0x8c0
  43a644:	mov	w1, #0x1                   	// #1
  43a648:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43a64c:	ldr	x0, [x0, #1096]
  43a650:	bl	404710 <__fprintf_chk@plt>
  43a654:	b	43a620 <argp_parse@@Base+0x6ee0>
  43a658:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43a65c:	ldr	x3, [x0, #1096]
  43a660:	mov	x2, #0x2                   	// #2
  43a664:	mov	x1, #0x1                   	// #1
  43a668:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43a66c:	add	x0, x0, #0x8c8
  43a670:	bl	4048b0 <fwrite@plt>
  43a674:	b	43a62c <argp_parse@@Base+0x6eec>
  43a678:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43a67c:	ldr	x1, [x0, #1096]
  43a680:	mov	w0, #0x20                  	// #32
  43a684:	bl	404170 <fputc@plt>
  43a688:	b	43a478 <argp_parse@@Base+0x6d38>
  43a68c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43a690:	ldr	x21, [x0, #1096]
  43a694:	add	x1, sp, #0x38
  43a698:	ldr	w0, [x19, #24]
  43a69c:	bl	43a108 <argp_parse@@Base+0x69c8>
  43a6a0:	eor	w2, w20, #0x1
  43a6a4:	mov	x3, x0
  43a6a8:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43a6ac:	add	x0, x0, #0x900
  43a6b0:	add	x2, x0, w2, uxtb
  43a6b4:	mov	w1, #0x1                   	// #1
  43a6b8:	mov	x0, x21
  43a6bc:	bl	404710 <__fprintf_chk@plt>
  43a6c0:	mov	w0, #0x1                   	// #1
  43a6c4:	strb	w0, [x19, #222]
  43a6c8:	ldrb	w0, [x19, #160]
  43a6cc:	cbz	w0, 43a57c <argp_parse@@Base+0x6e3c>
  43a6d0:	ldr	x19, [x19, #88]
  43a6d4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43a6d8:	ldr	x1, [x0, #1096]
  43a6dc:	mov	w0, #0x20                  	// #32
  43a6e0:	bl	404170 <fputc@plt>
  43a6e4:	b	43a54c <argp_parse@@Base+0x6e0c>
  43a6e8:	stp	x29, x30, [sp, #-32]!
  43a6ec:	mov	x29, sp
  43a6f0:	stp	x19, x20, [sp, #16]
  43a6f4:	mov	x20, x0
  43a6f8:	ldrb	w0, [x1, #217]
  43a6fc:	cbnz	w0, 43a70c <argp_parse@@Base+0x6fcc>
  43a700:	ldp	x19, x20, [sp, #16]
  43a704:	ldp	x29, x30, [sp], #32
  43a708:	ret
  43a70c:	mov	x19, x1
  43a710:	mov	w2, #0x5                   	// #5
  43a714:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43a718:	add	x1, x1, #0x860
  43a71c:	mov	x0, #0x0                   	// #0
  43a720:	bl	4049c0 <dcgettext@plt>
  43a724:	mov	x1, x20
  43a728:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43a72c:	ldr	x1, [x19, #104]
  43a730:	cbnz	x1, 43a764 <argp_parse@@Base+0x7024>
  43a734:	ldr	x0, [x19, #112]
  43a738:	cbnz	x0, 43a764 <argp_parse@@Base+0x7024>
  43a73c:	ldr	x0, [x19, #120]
  43a740:	cbnz	x0, 43a764 <argp_parse@@Base+0x7024>
  43a744:	ldr	x0, [x19, #128]
  43a748:	cbnz	x0, 43a764 <argp_parse@@Base+0x7024>
  43a74c:	ldr	x0, [x19, #136]
  43a750:	cbnz	x0, 43a764 <argp_parse@@Base+0x7024>
  43a754:	ldr	x0, [x19, #144]
  43a758:	cbnz	x0, 43a764 <argp_parse@@Base+0x7024>
  43a75c:	ldr	w0, [x19, #152]
  43a760:	cbz	w0, 43a7e8 <argp_parse@@Base+0x70a8>
  43a764:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43a768:	add	x2, x2, #0x930
  43a76c:	mov	w0, #0x0                   	// #0
  43a770:	bl	43a2a0 <argp_parse@@Base+0x6b60>
  43a774:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43a778:	add	x2, x2, #0x938
  43a77c:	ldr	x1, [x19, #112]
  43a780:	bl	43a2a0 <argp_parse@@Base+0x6b60>
  43a784:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43a788:	add	x2, x2, #0x948
  43a78c:	ldr	x1, [x19, #120]
  43a790:	bl	43a2a0 <argp_parse@@Base+0x6b60>
  43a794:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43a798:	add	x2, x2, #0x950
  43a79c:	ldr	x1, [x19, #128]
  43a7a0:	bl	43a2a0 <argp_parse@@Base+0x6b60>
  43a7a4:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43a7a8:	add	x2, x2, #0x958
  43a7ac:	ldr	x1, [x19, #136]
  43a7b0:	bl	43a2a0 <argp_parse@@Base+0x6b60>
  43a7b4:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43a7b8:	add	x2, x2, #0x960
  43a7bc:	ldr	x1, [x19, #144]
  43a7c0:	bl	43a2a0 <argp_parse@@Base+0x6b60>
  43a7c4:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43a7c8:	add	x2, x2, #0x968
  43a7cc:	ldrsw	x1, [x19, #152]
  43a7d0:	bl	43a2a0 <argp_parse@@Base+0x6b60>
  43a7d4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43a7d8:	ldr	x1, [x0, #1096]
  43a7dc:	mov	w0, #0xa                   	// #10
  43a7e0:	bl	404170 <fputc@plt>
  43a7e4:	b	43a700 <argp_parse@@Base+0x6fc0>
  43a7e8:	mov	w2, #0x5                   	// #5
  43a7ec:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43a7f0:	add	x1, x1, #0x920
  43a7f4:	mov	x0, #0x0                   	// #0
  43a7f8:	bl	4049c0 <dcgettext@plt>
  43a7fc:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43a800:	ldr	x1, [x1, #1096]
  43a804:	bl	404000 <fputs@plt>
  43a808:	b	43a700 <argp_parse@@Base+0x6fc0>
  43a80c:	stp	x29, x30, [sp, #-96]!
  43a810:	mov	x29, sp
  43a814:	stp	x19, x20, [sp, #16]
  43a818:	stp	x21, x22, [sp, #32]
  43a81c:	mov	x22, x1
  43a820:	mov	x20, x2
  43a824:	mov	w19, w3
  43a828:	mov	w5, #0x0                   	// #0
  43a82c:	mov	x4, #0x0                   	// #0
  43a830:	mov	x3, x0
  43a834:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43a838:	add	x2, x2, #0x978
  43a83c:	sxtw	x1, w19
  43a840:	mov	x0, x20
  43a844:	bl	45036c <_obstack_memory_used@@Base+0xf1d0>
  43a848:	cmp	x22, #0x0
  43a84c:	ccmp	w19, w0, #0x4, ne  // ne = any
  43a850:	b.le	43a860 <argp_parse@@Base+0x7120>
  43a854:	mov	x21, x0
  43a858:	ldr	x0, [x22, #208]
  43a85c:	cbnz	x0, 43a874 <argp_parse@@Base+0x7134>
  43a860:	mov	x0, x20
  43a864:	ldp	x19, x20, [sp, #16]
  43a868:	ldp	x21, x22, [sp, #32]
  43a86c:	ldp	x29, x30, [sp], #96
  43a870:	ret
  43a874:	str	x23, [sp, #48]
  43a878:	add	x23, x20, w21, sxtw
  43a87c:	add	x1, sp, #0x40
  43a880:	ldr	w0, [x22, #24]
  43a884:	bl	43a108 <argp_parse@@Base+0x69c8>
  43a888:	sub	w1, w19, w21
  43a88c:	mov	x5, x0
  43a890:	adrp	x4, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43a894:	add	x4, x4, #0x998
  43a898:	mov	x3, #0xffffffffffffffff    	// #-1
  43a89c:	mov	w2, #0x1                   	// #1
  43a8a0:	sxtw	x1, w1
  43a8a4:	mov	x0, x23
  43a8a8:	bl	404290 <__snprintf_chk@plt>
  43a8ac:	ldr	x23, [sp, #48]
  43a8b0:	b	43a860 <argp_parse@@Base+0x7120>
  43a8b4:	sub	sp, sp, #0x620
  43a8b8:	stp	x29, x30, [sp]
  43a8bc:	mov	x29, sp
  43a8c0:	stp	x19, x20, [sp, #16]
  43a8c4:	stp	x21, x22, [sp, #32]
  43a8c8:	stp	x23, x24, [sp, #48]
  43a8cc:	stp	x25, x26, [sp, #64]
  43a8d0:	stp	x27, x28, [sp, #80]
  43a8d4:	mov	x23, x0
  43a8d8:	strh	wzr, [sp, #1472]
  43a8dc:	add	x20, sp, #0x160
  43a8e0:	add	x19, sp, #0x5c0
  43a8e4:	str	wzr, [sp, #148]
  43a8e8:	mov	w27, #0x0                   	// #0
  43a8ec:	mov	w25, #0xfffffffe            	// #-2
  43a8f0:	adrp	x22, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  43a8f4:	add	x22, x22, #0x9b8
  43a8f8:	add	x26, x22, #0xb20
  43a8fc:	mov	x21, x19
  43a900:	b	43be34 <argp_parse@@Base+0x86f4>
  43a904:	mov	w3, #0x1                   	// #1
  43a908:	b	43a91c <argp_parse@@Base+0x71dc>
  43a90c:	cmp	w0, #0x20
  43a910:	b.ne	43a964 <argp_parse@@Base+0x7224>  // b.any
  43a914:	add	x1, x1, #0x1
  43a918:	str	x1, [x23]
  43a91c:	ldr	x1, [x23]
  43a920:	ldrb	w0, [x1]
  43a924:	cmp	w0, #0xd
  43a928:	b.hi	43a90c <argp_parse@@Base+0x71cc>  // b.pmore
  43a92c:	cmp	w0, #0x8
  43a930:	b.hi	43a914 <argp_parse@@Base+0x71d4>  // b.pmore
  43a934:	sub	w2, w0, #0x2b
  43a938:	and	w2, w2, #0xfffffffd
  43a93c:	tst	w2, #0xff
  43a940:	b.eq	43bd00 <argp_parse@@Base+0x85c0>  // b.none
  43a944:	cmp	w0, #0x5a
  43a948:	b.hi	43ab88 <argp_parse@@Base+0x7448>  // b.pmore
  43a94c:	cmp	w0, #0x40
  43a950:	b.hi	43aba4 <argp_parse@@Base+0x7464>  // b.pmore
  43a954:	cmp	w0, #0x28
  43a958:	b.ne	43ae40 <argp_parse@@Base+0x7700>  // b.any
  43a95c:	mov	x1, #0x0                   	// #0
  43a960:	b	43ae64 <argp_parse@@Base+0x7724>
  43a964:	sub	w2, w0, #0x30
  43a968:	cmp	w2, #0x9
  43a96c:	b.hi	43a934 <argp_parse@@Base+0x71f4>  // b.pmore
  43a970:	cmp	w0, #0x2d
  43a974:	cset	w2, eq  // eq = none
  43a978:	sub	w1, w0, #0x2b
  43a97c:	and	w1, w1, #0xfffffffd
  43a980:	tst	w1, #0xff
  43a984:	b.ne	43aa3c <argp_parse@@Base+0x72fc>  // b.any
  43a988:	cmp	w2, #0x0
  43a98c:	cneg	w4, w3, ne  // ne = any
  43a990:	ldr	x0, [x23]
  43a994:	add	x1, x0, #0x1
  43a998:	str	x1, [x23]
  43a99c:	ldrb	w0, [x0, #1]
  43a9a0:	cmp	w0, #0xd
  43a9a4:	b.hi	43a9b4 <argp_parse@@Base+0x7274>  // b.pmore
  43a9a8:	cmp	w0, #0x8
  43a9ac:	b.ls	43a91c <argp_parse@@Base+0x71dc>  // b.plast
  43a9b0:	b	43a990 <argp_parse@@Base+0x7250>
  43a9b4:	cmp	w0, #0x20
  43a9b8:	b.eq	43a990 <argp_parse@@Base+0x7250>  // b.none
  43a9bc:	sub	w1, w0, #0x30
  43a9c0:	cmp	w1, #0x9
  43a9c4:	b.hi	43a91c <argp_parse@@Base+0x71dc>  // b.pmore
  43a9c8:	ldr	x8, [x23]
  43a9cc:	mov	x2, x8
  43a9d0:	mov	x1, #0x0                   	// #0
  43a9d4:	mov	w5, #0x30                  	// #48
  43a9d8:	mov	x6, #0xa                   	// #10
  43a9dc:	sub	w3, w5, w0
  43a9e0:	sub	w0, w0, #0x30
  43a9e4:	cmp	w4, #0x0
  43a9e8:	csel	w0, w0, w3, ge  // ge = tcont
  43a9ec:	sxtw	x0, w0
  43a9f0:	adds	x1, x1, x0
  43a9f4:	mov	x7, x1
  43a9f8:	b.vs	43bcf8 <argp_parse@@Base+0x85b8>
  43a9fc:	ldrb	w0, [x2, #1]!
  43aa00:	sub	w3, w0, #0x30
  43aa04:	cmp	w3, #0x9
  43aa08:	b.ls	43aa44 <argp_parse@@Base+0x7304>  // b.plast
  43aa0c:	and	w0, w0, #0xfffffffd
  43aa10:	and	w0, w0, #0xff
  43aa14:	cmp	w0, #0x2c
  43aa18:	b.ne	43ab5c <argp_parse@@Base+0x741c>  // b.any
  43aa1c:	ldrb	w0, [x2, #1]
  43aa20:	sub	w1, w0, #0x30
  43aa24:	cmp	w1, #0x9
  43aa28:	b.hi	43ab5c <argp_parse@@Base+0x741c>  // b.pmore
  43aa2c:	add	x2, x2, #0x2
  43aa30:	mov	w0, w1
  43aa34:	mov	w3, #0x8                   	// #8
  43aa38:	b	43aa68 <argp_parse@@Base+0x7328>
  43aa3c:	mov	w4, #0x0                   	// #0
  43aa40:	b	43a9c8 <argp_parse@@Base+0x7288>
  43aa44:	mul	x3, x1, x6
  43aa48:	smulh	x7, x1, x6
  43aa4c:	mov	x1, x3
  43aa50:	cmp	x7, x3, asr #63
  43aa54:	b.eq	43a9dc <argp_parse@@Base+0x729c>  // b.none
  43aa58:	mov	w25, #0x3f                  	// #63
  43aa5c:	b	43be60 <argp_parse@@Base+0x8720>
  43aa60:	subs	w3, w3, #0x1
  43aa64:	b.eq	43aa90 <argp_parse@@Base+0x7350>  // b.none
  43aa68:	add	w0, w0, w0, lsl #2
  43aa6c:	lsl	w5, w0, #1
  43aa70:	mov	w0, w5
  43aa74:	ldrb	w1, [x2]
  43aa78:	sub	w6, w1, #0x30
  43aa7c:	cmp	w6, #0x9
  43aa80:	b.hi	43aa60 <argp_parse@@Base+0x7320>  // b.pmore
  43aa84:	add	x2, x2, #0x1
  43aa88:	add	w0, w5, w6
  43aa8c:	b	43aa60 <argp_parse@@Base+0x7320>
  43aa90:	tbnz	w4, #31, 43aaf8 <argp_parse@@Base+0x73b8>
  43aa94:	ldrb	w1, [x2]
  43aa98:	sub	w1, w1, #0x30
  43aa9c:	cmp	w1, #0x9
  43aaa0:	b.hi	43ab3c <argp_parse@@Base+0x73fc>  // b.pmore
  43aaa4:	ldrb	w1, [x2, #1]!
  43aaa8:	sub	w1, w1, #0x30
  43aaac:	cmp	w1, #0x9
  43aab0:	b.ls	43aaa4 <argp_parse@@Base+0x7364>  // b.plast
  43aab4:	cmp	w4, #0x0
  43aab8:	ccmp	w0, #0x0, #0x4, lt  // lt = tstop
  43aabc:	b.eq	43ab3c <argp_parse@@Base+0x73fc>  // b.none
  43aac0:	mov	w25, #0x3f                  	// #63
  43aac4:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
  43aac8:	cmp	x7, x1
  43aacc:	b.eq	43be60 <argp_parse@@Base+0x8720>  // b.none
  43aad0:	sub	x7, x7, #0x1
  43aad4:	str	x7, [sp, #1512]
  43aad8:	mov	w1, #0xca00                	// #51712
  43aadc:	movk	w1, #0x3b9a, lsl #16
  43aae0:	sub	w0, w1, w0
  43aae4:	sxtw	x0, w0
  43aae8:	str	x0, [sp, #160]
  43aaec:	str	x2, [x23]
  43aaf0:	mov	w25, #0x114                 	// #276
  43aaf4:	b	43be60 <argp_parse@@Base+0x8720>
  43aaf8:	ldrb	w1, [x2]
  43aafc:	sub	w3, w1, #0x30
  43ab00:	cmp	w3, #0x9
  43ab04:	b.hi	43aab4 <argp_parse@@Base+0x7374>  // b.pmore
  43ab08:	cmp	w1, #0x30
  43ab0c:	b.ne	43ab24 <argp_parse@@Base+0x73e4>  // b.any
  43ab10:	ldrb	w1, [x2, #1]!
  43ab14:	sub	w3, w1, #0x30
  43ab18:	cmp	w3, #0x9
  43ab1c:	b.hi	43aab4 <argp_parse@@Base+0x7374>  // b.pmore
  43ab20:	b	43ab08 <argp_parse@@Base+0x73c8>
  43ab24:	add	w0, w0, #0x1
  43ab28:	ldrb	w1, [x2]
  43ab2c:	sub	w1, w1, #0x30
  43ab30:	cmp	w1, #0x9
  43ab34:	b.ls	43aaa4 <argp_parse@@Base+0x7364>  // b.plast
  43ab38:	b	43aab4 <argp_parse@@Base+0x7374>
  43ab3c:	str	x7, [sp, #1512]
  43ab40:	sxtw	x0, w0
  43ab44:	str	x0, [sp, #160]
  43ab48:	str	x2, [x23]
  43ab4c:	cmp	w4, #0x0
  43ab50:	cset	w25, eq  // eq = none
  43ab54:	add	w25, w25, #0x114
  43ab58:	b	43be60 <argp_parse@@Base+0x8720>
  43ab5c:	lsr	w0, w4, #31
  43ab60:	strb	w0, [sp, #1512]
  43ab64:	sub	x0, x2, x8
  43ab68:	str	x0, [sp, #168]
  43ab6c:	str	x2, [x23]
  43ab70:	str	x7, [sp, #160]
  43ab74:	cmp	w4, #0x0
  43ab78:	mov	w25, #0x112                 	// #274
  43ab7c:	mov	w0, #0x113                 	// #275
  43ab80:	csel	w25, w25, w0, ne  // ne = any
  43ab84:	b	43be60 <argp_parse@@Base+0x8720>
  43ab88:	sub	w2, w0, #0x61
  43ab8c:	and	w2, w2, #0xff
  43ab90:	cmp	w2, #0x19
  43ab94:	b.hi	43ae40 <argp_parse@@Base+0x7700>  // b.pmore
  43ab98:	add	x1, sp, #0x110
  43ab9c:	add	x3, sp, #0x123
  43aba0:	b	43abbc <argp_parse@@Base+0x747c>
  43aba4:	add	x1, sp, #0x110
  43aba8:	b	43ab9c <argp_parse@@Base+0x745c>
  43abac:	sub	w2, w0, #0x61
  43abb0:	and	w2, w2, #0xff
  43abb4:	cmp	w2, #0x19
  43abb8:	b.hi	43abf0 <argp_parse@@Base+0x74b0>  // b.pmore
  43abbc:	cmp	x1, x3
  43abc0:	b.cs	43abc8 <argp_parse@@Base+0x7488>  // b.hs, b.nlast
  43abc4:	strb	w0, [x1], #1
  43abc8:	ldr	x0, [x23]
  43abcc:	add	x2, x0, #0x1
  43abd0:	str	x2, [x23]
  43abd4:	ldrb	w0, [x0, #1]
  43abd8:	cmp	w0, #0x5a
  43abdc:	b.hi	43abac <argp_parse@@Base+0x746c>  // b.pmore
  43abe0:	cmp	w0, #0x40
  43abe4:	b.hi	43abbc <argp_parse@@Base+0x747c>  // b.pmore
  43abe8:	cmp	w0, #0x2e
  43abec:	b.eq	43abbc <argp_parse@@Base+0x747c>  // b.none
  43abf0:	strb	wzr, [x1]
  43abf4:	ldrb	w0, [sp, #272]
  43abf8:	cbz	w0, 43ac1c <argp_parse@@Base+0x74dc>
  43abfc:	add	x2, sp, #0x110
  43ac00:	sub	w3, w0, #0x61
  43ac04:	sub	w1, w0, #0x20
  43ac08:	cmp	w3, #0x1a
  43ac0c:	csel	w0, w1, w0, cc  // cc = lo, ul, last
  43ac10:	strb	w0, [x2]
  43ac14:	ldrb	w0, [x2, #1]!
  43ac18:	cbnz	w0, 43ac00 <argp_parse@@Base+0x74c0>
  43ac1c:	add	x25, x22, #0x400
  43ac20:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43ac24:	add	x1, x1, #0x9a0
  43ac28:	add	x0, sp, #0x110
  43ac2c:	bl	404720 <strcmp@plt>
  43ac30:	cbz	w0, 43ae2c <argp_parse@@Base+0x76ec>
  43ac34:	ldr	x1, [x25, #16]!
  43ac38:	cbnz	x1, 43ac28 <argp_parse@@Base+0x74e8>
  43ac3c:	add	x0, sp, #0x110
  43ac40:	bl	403ff0 <strlen@plt>
  43ac44:	mov	x1, x0
  43ac48:	str	x0, [sp, #112]
  43ac4c:	mov	w0, #0x1                   	// #1
  43ac50:	cmp	x1, #0x3
  43ac54:	b.eq	43ac64 <argp_parse@@Base+0x7524>  // b.none
  43ac58:	mov	w0, #0x0                   	// #0
  43ac5c:	cmp	x1, #0x4
  43ac60:	b.eq	43ac78 <argp_parse@@Base+0x7538>  // b.none
  43ac64:	str	w0, [sp, #104]
  43ac68:	add	x25, x22, #0x450
  43ac6c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43ac70:	add	x1, x1, #0x9a8
  43ac74:	b	43aca4 <argp_parse@@Base+0x7564>
  43ac78:	ldrb	w0, [sp, #275]
  43ac7c:	cmp	w0, #0x2e
  43ac80:	cset	w0, eq  // eq = none
  43ac84:	b	43ac64 <argp_parse@@Base+0x7524>
  43ac88:	add	x0, sp, #0x110
  43ac8c:	bl	404720 <strcmp@plt>
  43ac90:	cmp	w0, #0x0
  43ac94:	cset	w28, eq  // eq = none
  43ac98:	cbnz	w28, 43ae2c <argp_parse@@Base+0x76ec>
  43ac9c:	ldr	x1, [x25, #16]!
  43aca0:	cbz	x1, 43acc4 <argp_parse@@Base+0x7584>
  43aca4:	ldr	w0, [sp, #104]
  43aca8:	cbz	w0, 43ac88 <argp_parse@@Base+0x7548>
  43acac:	mov	x2, #0x3                   	// #3
  43acb0:	add	x0, sp, #0x110
  43acb4:	bl	4043c0 <strncmp@plt>
  43acb8:	cmp	w0, #0x0
  43acbc:	cset	w28, eq  // eq = none
  43acc0:	b	43ac98 <argp_parse@@Base+0x7558>
  43acc4:	add	x1, sp, #0x110
  43acc8:	mov	x0, x23
  43accc:	bl	439f5c <argp_parse@@Base+0x681c>
  43acd0:	mov	x25, x0
  43acd4:	cbnz	x0, 43ae30 <argp_parse@@Base+0x76f0>
  43acd8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43acdc:	add	x1, x1, #0x9d0
  43ace0:	add	x0, sp, #0x110
  43ace4:	bl	404720 <strcmp@plt>
  43ace8:	cbz	w0, 43bd0c <argp_parse@@Base+0x85cc>
  43acec:	add	x25, x22, #0x5e0
  43acf0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43acf4:	add	x1, x1, #0x9b0
  43acf8:	add	x0, sp, #0x110
  43acfc:	bl	404720 <strcmp@plt>
  43ad00:	cbz	w0, 43ae2c <argp_parse@@Base+0x76ec>
  43ad04:	ldr	x1, [x25, #16]!
  43ad08:	cbnz	x1, 43acf8 <argp_parse@@Base+0x75b8>
  43ad0c:	ldr	x0, [sp, #112]
  43ad10:	sub	x0, x0, #0x1
  43ad14:	str	x0, [sp, #104]
  43ad18:	add	x1, sp, #0x110
  43ad1c:	ldrb	w0, [x1, x0]
  43ad20:	cmp	w0, #0x53
  43ad24:	b.eq	43ad94 <argp_parse@@Base+0x7654>  // b.none
  43ad28:	add	x25, x22, #0x690
  43ad2c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43ad30:	add	x1, x1, #0x9b8
  43ad34:	add	x0, sp, #0x110
  43ad38:	bl	404720 <strcmp@plt>
  43ad3c:	cbz	w0, 43ae2c <argp_parse@@Base+0x76ec>
  43ad40:	ldr	x1, [x25, #16]!
  43ad44:	cbnz	x1, 43ad34 <argp_parse@@Base+0x75f4>
  43ad48:	ldr	x0, [sp, #112]
  43ad4c:	cmp	x0, #0x1
  43ad50:	b.eq	43add0 <argp_parse@@Base+0x7690>  // b.none
  43ad54:	ldrb	w0, [sp, #272]
  43ad58:	add	x2, sp, #0x110
  43ad5c:	mov	x1, x2
  43ad60:	mov	w3, #0x1                   	// #1
  43ad64:	cbnz	w0, 43ae08 <argp_parse@@Base+0x76c8>
  43ad68:	ldrb	w0, [x23, #217]
  43ad6c:	mov	w25, #0x3f                  	// #63
  43ad70:	cbz	w0, 43be4c <argp_parse@@Base+0x870c>
  43ad74:	mov	w2, #0x5                   	// #5
  43ad78:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43ad7c:	add	x1, x1, #0x9d8
  43ad80:	mov	x0, #0x0                   	// #0
  43ad84:	bl	4049c0 <dcgettext@plt>
  43ad88:	add	x1, sp, #0x110
  43ad8c:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43ad90:	b	43be4c <argp_parse@@Base+0x870c>
  43ad94:	ldr	x0, [sp, #104]
  43ad98:	strb	wzr, [x1, x0]
  43ad9c:	add	x25, x22, #0x5e0
  43ada0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43ada4:	add	x1, x1, #0x9b0
  43ada8:	add	x0, sp, #0x110
  43adac:	bl	404720 <strcmp@plt>
  43adb0:	cbz	w0, 43ae2c <argp_parse@@Base+0x76ec>
  43adb4:	ldr	x1, [x25, #16]!
  43adb8:	cbnz	x1, 43ada8 <argp_parse@@Base+0x7668>
  43adbc:	mov	w0, #0x53                  	// #83
  43adc0:	ldr	x1, [sp, #104]
  43adc4:	add	x2, sp, #0x110
  43adc8:	strb	w0, [x2, x1]
  43adcc:	b	43ad28 <argp_parse@@Base+0x75e8>
  43add0:	ldrb	w1, [sp, #272]
  43add4:	add	x25, x22, #0x7e0
  43add8:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43addc:	add	x0, x0, #0x9c8
  43ade0:	ldrb	w0, [x0]
  43ade4:	cmp	w0, w1
  43ade8:	b.eq	43ae2c <argp_parse@@Base+0x76ec>  // b.none
  43adec:	ldr	x0, [x25, #16]!
  43adf0:	cbnz	x0, 43ade0 <argp_parse@@Base+0x76a0>
  43adf4:	b	43ad54 <argp_parse@@Base+0x7614>
  43adf8:	mov	w28, w3
  43adfc:	ldrb	w0, [x2, #1]!
  43ae00:	strb	w0, [x1]
  43ae04:	cbz	w0, 43ae18 <argp_parse@@Base+0x76d8>
  43ae08:	cmp	w0, #0x2e
  43ae0c:	b.eq	43adf8 <argp_parse@@Base+0x76b8>  // b.none
  43ae10:	add	x1, x1, #0x1
  43ae14:	b	43adfc <argp_parse@@Base+0x76bc>
  43ae18:	cbz	w28, 43ad68 <argp_parse@@Base+0x7628>
  43ae1c:	add	x1, sp, #0x110
  43ae20:	mov	x0, x23
  43ae24:	bl	439f5c <argp_parse@@Base+0x681c>
  43ae28:	mov	x25, x0
  43ae2c:	cbz	x25, 43ad68 <argp_parse@@Base+0x7628>
  43ae30:	ldrsw	x0, [x25, #12]
  43ae34:	str	x0, [sp, #1512]
  43ae38:	ldr	w25, [x25, #8]
  43ae3c:	b	43be4c <argp_parse@@Base+0x870c>
  43ae40:	add	x0, x1, #0x1
  43ae44:	str	x0, [x23]
  43ae48:	ldrb	w25, [x1]
  43ae4c:	cbnz	w25, 43be60 <argp_parse@@Base+0x8720>
  43ae50:	mov	w0, #0x0                   	// #0
  43ae54:	mov	w25, #0x0                   	// #0
  43ae58:	b	43aea4 <argp_parse@@Base+0x7764>
  43ae5c:	add	x1, x1, #0x1
  43ae60:	cbz	x1, 43a91c <argp_parse@@Base+0x71dc>
  43ae64:	ldr	x0, [x23]
  43ae68:	add	x2, x0, #0x1
  43ae6c:	str	x2, [x23]
  43ae70:	ldrb	w0, [x0]
  43ae74:	cbz	w0, 43ae90 <argp_parse@@Base+0x7750>
  43ae78:	cmp	w0, #0x28
  43ae7c:	b.eq	43ae5c <argp_parse@@Base+0x771c>  // b.none
  43ae80:	cmp	w0, #0x29
  43ae84:	cset	x0, eq  // eq = none
  43ae88:	sub	x1, x1, x0
  43ae8c:	b	43ae60 <argp_parse@@Base+0x7720>
  43ae90:	mov	w0, #0x0                   	// #0
  43ae94:	mov	w25, #0x0                   	// #0
  43ae98:	b	43aea4 <argp_parse@@Base+0x7764>
  43ae9c:	mov	w0, #0x0                   	// #0
  43aea0:	mov	w25, #0x0                   	// #0
  43aea4:	add	w24, w0, w24
  43aea8:	cmp	w24, #0x70
  43aeac:	b.hi	43af24 <argp_parse@@Base+0x77e4>  // b.pmore
  43aeb0:	ldrsb	w1, [x26, w24, sxtw]
  43aeb4:	cmp	w1, w0
  43aeb8:	b.ne	43af24 <argp_parse@@Base+0x77e4>  // b.any
  43aebc:	add	x0, x22, #0xb98
  43aec0:	ldrb	w27, [x0, w24, sxtw]
  43aec4:	cbz	w27, 43bd14 <argp_parse@@Base+0x85d4>
  43aec8:	ldr	w1, [sp, #148]
  43aecc:	cmp	w1, #0x0
  43aed0:	cset	w0, ne  // ne = any
  43aed4:	sub	w0, w1, w0
  43aed8:	str	w0, [sp, #148]
  43aedc:	add	x0, x20, #0x38
  43aee0:	ldr	x1, [sp, #160]
  43aee4:	str	x1, [sp, #1520]
  43aee8:	ldr	x1, [sp, #168]
  43aeec:	str	x1, [sp, #1528]
  43aef0:	add	x1, sp, #0x650
  43aef4:	ldp	x2, x3, [x1, #-104]
  43aef8:	stp	x2, x3, [x20, #56]
  43aefc:	ldp	x2, x3, [x1, #-88]
  43af00:	stp	x2, x3, [x20, #72]
  43af04:	ldp	x2, x3, [x1, #-72]
  43af08:	stp	x2, x3, [x20, #88]
  43af0c:	ldr	x1, [sp, #1560]
  43af10:	str	x1, [x20, #104]
  43af14:	mov	x20, x0
  43af18:	mov	x24, x19
  43af1c:	mov	w25, #0xfffffffe            	// #-2
  43af20:	b	43be18 <argp_parse@@Base+0x86d8>
  43af24:	add	x0, x22, #0xc10
  43af28:	ldrb	w1, [x0, w27, sxtw]
  43af2c:	str	w1, [sp, #104]
  43af30:	cbz	w1, 43bb78 <argp_parse@@Base+0x8438>
  43af34:	add	x0, x22, #0xc88
  43af38:	ldrb	w24, [x0, w1, sxtw]
  43af3c:	str	w24, [sp, #152]
  43af40:	mov	w2, #0x1                   	// #1
  43af44:	sub	w0, w2, w24
  43af48:	sbfiz	x2, x0, #3, #32
  43af4c:	sub	x2, x2, w0, sxtw
  43af50:	add	x0, x20, x2, lsl #3
  43af54:	ldp	x4, x5, [x0]
  43af58:	add	x3, sp, #0x200
  43af5c:	stp	x4, x5, [x3, #-216]
  43af60:	ldp	x4, x5, [x0, #16]
  43af64:	stp	x4, x5, [x3, #-200]
  43af68:	ldp	x4, x5, [x0, #32]
  43af6c:	stp	x4, x5, [x3, #-184]
  43af70:	ldr	x3, [x0, #48]
  43af74:	str	x3, [sp, #344]
  43af78:	ldr	x27, [x20, x2, lsl #3]
  43af7c:	ldr	x2, [x0, #8]
  43af80:	str	x2, [sp, #112]
  43af84:	ldr	x2, [x0, #16]
  43af88:	str	x2, [sp, #120]
  43af8c:	ldr	x2, [x0, #24]
  43af90:	str	x2, [sp, #136]
  43af94:	ldr	x2, [x0, #32]
  43af98:	str	x2, [sp, #128]
  43af9c:	ldr	x28, [x0, #40]
  43afa0:	ldr	w0, [x0, #48]
  43afa4:	str	w0, [sp, #144]
  43afa8:	sub	w1, w1, #0x4
  43afac:	cmp	w1, #0x57
  43afb0:	b.hi	43bd70 <argp_parse@@Base+0x8630>  // b.pmore
  43afb4:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  43afb8:	add	x0, x0, #0x908
  43afbc:	ldrh	w0, [x0, w1, uxtw #1]
  43afc0:	adr	x1, 43afcc <argp_parse@@Base+0x788c>
  43afc4:	add	x0, x1, w0, sxth #2
  43afc8:	br	x0
  43afcc:	str	wzr, [sp, #144]
  43afd0:	mov	x28, #0x0                   	// #0
  43afd4:	str	xzr, [sp, #128]
  43afd8:	str	xzr, [sp, #136]
  43afdc:	str	xzr, [sp, #120]
  43afe0:	str	xzr, [sp, #112]
  43afe4:	mov	x27, #0x1                   	// #1
  43afe8:	b	43bd70 <argp_parse@@Base+0x8630>
  43afec:	ldp	x0, x1, [x20]
  43aff0:	stp	x0, x1, [x23, #88]
  43aff4:	mov	w0, #0x1                   	// #1
  43aff8:	strb	w0, [x23, #160]
  43affc:	mov	w2, #0x5                   	// #5
  43b000:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43b004:	add	x1, x1, #0x9f8
  43b008:	mov	x0, #0x0                   	// #0
  43b00c:	bl	4049c0 <dcgettext@plt>
  43b010:	mov	x1, x23
  43b014:	bl	43a3ac <argp_parse@@Base+0x6c6c>
  43b018:	b	43bd70 <argp_parse@@Base+0x8630>
  43b01c:	ldr	x0, [x23, #200]
  43b020:	add	x0, x0, #0x1
  43b024:	str	x0, [x23, #200]
  43b028:	ldr	x0, [x23, #168]
  43b02c:	add	x0, x0, #0x1
  43b030:	str	x0, [x23, #168]
  43b034:	mov	w2, #0x5                   	// #5
  43b038:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43b03c:	add	x1, x1, #0xa10
  43b040:	mov	x0, #0x0                   	// #0
  43b044:	bl	4049c0 <dcgettext@plt>
  43b048:	mov	x1, x23
  43b04c:	bl	43a3ac <argp_parse@@Base+0x6c6c>
  43b050:	b	43bd70 <argp_parse@@Base+0x8630>
  43b054:	ldr	x0, [x23, #200]
  43b058:	add	x0, x0, #0x1
  43b05c:	str	x0, [x23, #200]
  43b060:	mov	w2, #0x5                   	// #5
  43b064:	adrp	x1, 454000 <_obstack_memory_used@@Base+0x12e64>
  43b068:	add	x1, x1, #0x78
  43b06c:	mov	x0, #0x0                   	// #0
  43b070:	bl	4049c0 <dcgettext@plt>
  43b074:	mov	x1, x23
  43b078:	bl	43a3ac <argp_parse@@Base+0x6c6c>
  43b07c:	b	43bd70 <argp_parse@@Base+0x8630>
  43b080:	ldr	x0, [x23, #184]
  43b084:	add	x0, x0, #0x1
  43b088:	str	x0, [x23, #184]
  43b08c:	mov	w2, #0x5                   	// #5
  43b090:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43b094:	add	x1, x1, #0xa20
  43b098:	mov	x0, #0x0                   	// #0
  43b09c:	bl	4049c0 <dcgettext@plt>
  43b0a0:	mov	x1, x23
  43b0a4:	bl	43a3ac <argp_parse@@Base+0x6c6c>
  43b0a8:	b	43bd70 <argp_parse@@Base+0x8630>
  43b0ac:	ldr	x0, [x23, #208]
  43b0b0:	add	x0, x0, #0x1
  43b0b4:	str	x0, [x23, #208]
  43b0b8:	mov	w2, #0x5                   	// #5
  43b0bc:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43b0c0:	add	x1, x1, #0xa30
  43b0c4:	mov	x0, #0x0                   	// #0
  43b0c8:	bl	4049c0 <dcgettext@plt>
  43b0cc:	mov	x1, x23
  43b0d0:	bl	43a3ac <argp_parse@@Base+0x6c6c>
  43b0d4:	b	43bd70 <argp_parse@@Base+0x8630>
  43b0d8:	ldr	x0, [x23, #168]
  43b0dc:	add	x0, x0, #0x1
  43b0e0:	str	x0, [x23, #168]
  43b0e4:	mov	w2, #0x5                   	// #5
  43b0e8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  43b0ec:	add	x1, x1, #0xa60
  43b0f0:	mov	x0, #0x0                   	// #0
  43b0f4:	bl	4049c0 <dcgettext@plt>
  43b0f8:	mov	x1, x23
  43b0fc:	bl	43a3ac <argp_parse@@Base+0x6c6c>
  43b100:	b	43bd70 <argp_parse@@Base+0x8630>
  43b104:	ldr	x0, [x23, #176]
  43b108:	add	x0, x0, #0x1
  43b10c:	str	x0, [x23, #176]
  43b110:	mov	w2, #0x5                   	// #5
  43b114:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43b118:	add	x1, x1, #0xa38
  43b11c:	mov	x0, #0x0                   	// #0
  43b120:	bl	4049c0 <dcgettext@plt>
  43b124:	mov	x1, x23
  43b128:	bl	43a3ac <argp_parse@@Base+0x6c6c>
  43b12c:	b	43bd70 <argp_parse@@Base+0x8630>
  43b130:	mov	w2, #0x5                   	// #5
  43b134:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43b138:	add	x1, x1, #0xa40
  43b13c:	mov	x0, #0x0                   	// #0
  43b140:	bl	4049c0 <dcgettext@plt>
  43b144:	mov	x1, x23
  43b148:	bl	43a6e8 <argp_parse@@Base+0x6fa8>
  43b14c:	b	43bd70 <argp_parse@@Base+0x8630>
  43b150:	mov	w2, #0x5                   	// #5
  43b154:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x14e64>
  43b158:	add	x1, x1, #0xb08
  43b15c:	mov	x0, #0x0                   	// #0
  43b160:	bl	4049c0 <dcgettext@plt>
  43b164:	mov	x1, x23
  43b168:	bl	43a3ac <argp_parse@@Base+0x6c6c>
  43b16c:	b	43bd70 <argp_parse@@Base+0x8630>
  43b170:	mov	w2, #0x5                   	// #5
  43b174:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43b178:	add	x1, x1, #0xa50
  43b17c:	mov	x0, #0x0                   	// #0
  43b180:	bl	4049c0 <dcgettext@plt>
  43b184:	mov	x1, x23
  43b188:	bl	43a6e8 <argp_parse@@Base+0x6fa8>
  43b18c:	b	43bd70 <argp_parse@@Base+0x8630>
  43b190:	ldur	x0, [x20, #-48]
  43b194:	str	x0, [x23, #72]
  43b198:	str	xzr, [x23, #80]
  43b19c:	str	xzr, [x23, #88]
  43b1a0:	str	xzr, [x23, #96]
  43b1a4:	ldr	x0, [x20]
  43b1a8:	str	w0, [x23, #28]
  43b1ac:	b	43bd70 <argp_parse@@Base+0x8630>
  43b1b0:	ldur	x0, [x20, #-48]
  43b1b4:	ldur	x1, [x20, #-160]
  43b1b8:	str	x1, [x23, #72]
  43b1bc:	str	x0, [x23, #80]
  43b1c0:	str	xzr, [x23, #88]
  43b1c4:	str	xzr, [x23, #96]
  43b1c8:	ldr	x0, [x20]
  43b1cc:	str	w0, [x23, #28]
  43b1d0:	b	43bd70 <argp_parse@@Base+0x8630>
  43b1d4:	ldur	x1, [x20, #-160]
  43b1d8:	ldur	x0, [x20, #-56]
  43b1dc:	sub	x2, x20, #0x118
  43b1e0:	ldr	x2, [x2, #8]
  43b1e4:	str	x2, [x23, #72]
  43b1e8:	str	x1, [x23, #80]
  43b1ec:	str	x0, [x23, #88]
  43b1f0:	ldursw	x0, [x20, #-48]
  43b1f4:	str	x0, [x23, #96]
  43b1f8:	ldr	x0, [x20]
  43b1fc:	str	w0, [x23, #28]
  43b200:	b	43bd70 <argp_parse@@Base+0x8630>
  43b204:	ldur	x0, [x20, #-48]
  43b208:	str	x0, [x23, #72]
  43b20c:	str	xzr, [x23, #80]
  43b210:	str	xzr, [x23, #88]
  43b214:	str	xzr, [x23, #96]
  43b218:	mov	w0, #0x2                   	// #2
  43b21c:	str	w0, [x23, #28]
  43b220:	b	43bd70 <argp_parse@@Base+0x8630>
  43b224:	ldur	x0, [x20, #-48]
  43b228:	ldur	x1, [x20, #-160]
  43b22c:	str	x1, [x23, #72]
  43b230:	str	x0, [x23, #80]
  43b234:	str	xzr, [x23, #88]
  43b238:	str	xzr, [x23, #96]
  43b23c:	mov	w0, #0x2                   	// #2
  43b240:	str	w0, [x23, #28]
  43b244:	b	43bd70 <argp_parse@@Base+0x8630>
  43b248:	ldur	x1, [x20, #-160]
  43b24c:	ldur	x0, [x20, #-56]
  43b250:	sub	x2, x20, #0x118
  43b254:	ldr	x2, [x2, #8]
  43b258:	str	x2, [x23, #72]
  43b25c:	str	x1, [x23, #80]
  43b260:	str	x0, [x23, #88]
  43b264:	ldursw	x0, [x20, #-48]
  43b268:	str	x0, [x23, #96]
  43b26c:	mov	w0, #0x2                   	// #2
  43b270:	str	w0, [x23, #28]
  43b274:	b	43bd70 <argp_parse@@Base+0x8630>
  43b278:	ldr	x0, [x23, #208]
  43b27c:	add	x0, x0, #0x1
  43b280:	str	x0, [x23, #208]
  43b284:	ldp	x0, x1, [x20, #-56]
  43b288:	stp	x0, x1, [sp, #240]
  43b28c:	ldur	x0, [x20, #-40]
  43b290:	str	x0, [sp, #256]
  43b294:	ldr	x2, [x20]
  43b298:	add	x1, sp, #0xf0
  43b29c:	mov	x0, x23
  43b2a0:	bl	439e18 <argp_parse@@Base+0x66d8>
  43b2a4:	and	w0, w0, #0xff
  43b2a8:	cbnz	w0, 43bd70 <argp_parse@@Base+0x8630>
  43b2ac:	mov	w0, #0x1                   	// #1
  43b2b0:	b	43bc34 <argp_parse@@Base+0x84f4>
  43b2b4:	ldr	x0, [x20]
  43b2b8:	str	w0, [x23, #20]
  43b2bc:	b	43bd70 <argp_parse@@Base+0x8630>
  43b2c0:	mov	w0, #0x1                   	// #1
  43b2c4:	str	w0, [x23, #20]
  43b2c8:	ldr	x0, [x23, #192]
  43b2cc:	add	x0, x0, #0x1
  43b2d0:	str	x0, [x23, #192]
  43b2d4:	b	43bd70 <argp_parse@@Base+0x8630>
  43b2d8:	ldr	x0, [x20]
  43b2dc:	str	w0, [x23, #24]
  43b2e0:	b	43bd70 <argp_parse@@Base+0x8630>
  43b2e4:	mov	w0, #0x6270                	// #25200
  43b2e8:	str	w0, [x23, #24]
  43b2ec:	b	43bd70 <argp_parse@@Base+0x8630>
  43b2f0:	ldur	x0, [x20, #-56]
  43b2f4:	str	w0, [x23, #24]
  43b2f8:	ldp	x0, x1, [x20]
  43b2fc:	stp	x0, x1, [sp, #176]
  43b300:	ldp	x0, x1, [x20, #16]
  43b304:	stp	x0, x1, [sp, #192]
  43b308:	ldp	x0, x1, [x20, #32]
  43b30c:	stp	x0, x1, [sp, #208]
  43b310:	ldr	x0, [x20, #48]
  43b314:	str	x0, [sp, #224]
  43b318:	mov	w2, #0x1                   	// #1
  43b31c:	add	x1, sp, #0xb0
  43b320:	mov	x0, x23
  43b324:	bl	439cc0 <argp_parse@@Base+0x6580>
  43b328:	and	w0, w0, #0xff
  43b32c:	cbz	w0, 43bc94 <argp_parse@@Base+0x8554>
  43b330:	mov	w2, #0x5                   	// #5
  43b334:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43b338:	add	x1, x1, #0xa40
  43b33c:	mov	x0, #0x0                   	// #0
  43b340:	bl	4049c0 <dcgettext@plt>
  43b344:	mov	x1, x23
  43b348:	bl	43a6e8 <argp_parse@@Base+0x6fa8>
  43b34c:	b	43bd70 <argp_parse@@Base+0x8630>
  43b350:	mov	w0, #0x6270                	// #25200
  43b354:	str	w0, [x23, #24]
  43b358:	ldp	x0, x1, [x20]
  43b35c:	stp	x0, x1, [sp, #176]
  43b360:	ldp	x0, x1, [x20, #16]
  43b364:	stp	x0, x1, [sp, #192]
  43b368:	ldp	x0, x1, [x20, #32]
  43b36c:	stp	x0, x1, [sp, #208]
  43b370:	ldr	x0, [x20, #48]
  43b374:	str	x0, [sp, #224]
  43b378:	mov	w2, #0x1                   	// #1
  43b37c:	add	x1, sp, #0xb0
  43b380:	mov	x0, x23
  43b384:	bl	439cc0 <argp_parse@@Base+0x6580>
  43b388:	and	w0, w0, #0xff
  43b38c:	cbz	w0, 43bc9c <argp_parse@@Base+0x855c>
  43b390:	mov	w2, #0x5                   	// #5
  43b394:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43b398:	add	x1, x1, #0xa40
  43b39c:	mov	x0, #0x0                   	// #0
  43b3a0:	bl	4049c0 <dcgettext@plt>
  43b3a4:	mov	x1, x23
  43b3a8:	bl	43a6e8 <argp_parse@@Base+0x6fa8>
  43b3ac:	b	43bd70 <argp_parse@@Base+0x8630>
  43b3b0:	ldp	x0, x1, [x20, #-56]
  43b3b4:	stp	x0, x1, [sp, #176]
  43b3b8:	ldur	x0, [x20, #-40]
  43b3bc:	str	x0, [sp, #192]
  43b3c0:	ldr	x2, [x20]
  43b3c4:	add	x1, sp, #0xb0
  43b3c8:	mov	x0, x23
  43b3cc:	bl	439e18 <argp_parse@@Base+0x66d8>
  43b3d0:	and	w0, w0, #0xff
  43b3d4:	cbz	w0, 43bca4 <argp_parse@@Base+0x8564>
  43b3d8:	ldrsw	x0, [x23, #24]
  43b3dc:	ldur	x1, [x20, #-112]
  43b3e0:	adds	x0, x0, x1
  43b3e4:	cset	w1, vs
  43b3e8:	cmp	x0, w0, sxtw
  43b3ec:	str	w0, [x23, #24]
  43b3f0:	csinc	w0, w1, wzr, eq  // eq = none
  43b3f4:	cbz	w0, 43bd70 <argp_parse@@Base+0x8630>
  43b3f8:	mov	w0, #0x1                   	// #1
  43b3fc:	b	43bc34 <argp_parse@@Base+0x84f4>
  43b400:	ldr	x0, [x20]
  43b404:	add	w0, w0, #0xe10
  43b408:	str	w0, [x23, #24]
  43b40c:	b	43bd70 <argp_parse@@Base+0x8630>
  43b410:	ldur	x0, [x20, #-56]
  43b414:	add	w0, w0, #0xe10
  43b418:	str	w0, [x23, #24]
  43b41c:	b	43bd70 <argp_parse@@Base+0x8630>
  43b420:	str	xzr, [x23, #8]
  43b424:	ldr	x0, [x20]
  43b428:	str	w0, [x23, #16]
  43b42c:	b	43bd70 <argp_parse@@Base+0x8630>
  43b430:	str	xzr, [x23, #8]
  43b434:	ldur	x0, [x20, #-56]
  43b438:	str	w0, [x23, #16]
  43b43c:	b	43bd70 <argp_parse@@Base+0x8630>
  43b440:	ldur	x0, [x20, #-56]
  43b444:	str	x0, [x23, #8]
  43b448:	ldr	x0, [x20]
  43b44c:	str	w0, [x23, #16]
  43b450:	mov	w0, #0x1                   	// #1
  43b454:	strb	w0, [x23, #224]
  43b458:	b	43bd70 <argp_parse@@Base+0x8630>
  43b45c:	ldur	x0, [x20, #-48]
  43b460:	str	x0, [x23, #8]
  43b464:	ldr	x0, [x20]
  43b468:	str	w0, [x23, #16]
  43b46c:	mov	w0, #0x1                   	// #1
  43b470:	strb	w0, [x23, #224]
  43b474:	b	43bd70 <argp_parse@@Base+0x8630>
  43b478:	ldur	x0, [x20, #-104]
  43b47c:	str	x0, [x23, #56]
  43b480:	ldr	x0, [x20, #8]
  43b484:	str	x0, [x23, #64]
  43b488:	b	43bd70 <argp_parse@@Base+0x8630>
  43b48c:	ldur	x0, [x20, #-208]
  43b490:	str	x0, [sp, #152]
  43b494:	cmp	x0, #0x3
  43b498:	b.le	43b4ec <argp_parse@@Base+0x7dac>
  43b49c:	ldrb	w0, [x23, #217]
  43b4a0:	cbnz	w0, 43b4c8 <argp_parse@@Base+0x7d88>
  43b4a4:	ldp	x0, x1, [x20, #-224]
  43b4a8:	stp	x0, x1, [x23, #32]
  43b4ac:	ldur	x0, [x20, #-208]
  43b4b0:	str	x0, [x23, #48]
  43b4b4:	ldur	x0, [x20, #-104]
  43b4b8:	str	x0, [x23, #56]
  43b4bc:	ldr	x0, [x20, #8]
  43b4c0:	str	x0, [x23, #64]
  43b4c4:	b	43bd70 <argp_parse@@Base+0x8630>
  43b4c8:	mov	w2, #0x5                   	// #5
  43b4cc:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43b4d0:	add	x1, x1, #0xa58
  43b4d4:	mov	x0, #0x0                   	// #0
  43b4d8:	bl	4049c0 <dcgettext@plt>
  43b4dc:	ldr	x2, [sp, #152]
  43b4e0:	ldur	x1, [x20, #-216]
  43b4e4:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43b4e8:	b	43b4a4 <argp_parse@@Base+0x7d64>
  43b4ec:	ldrb	w0, [x23, #217]
  43b4f0:	cbnz	w0, 43b518 <argp_parse@@Base+0x7dd8>
  43b4f4:	ldur	x0, [x20, #-216]
  43b4f8:	str	x0, [x23, #56]
  43b4fc:	ldur	x0, [x20, #-104]
  43b500:	str	x0, [x23, #64]
  43b504:	ldp	x0, x1, [x20]
  43b508:	stp	x0, x1, [x23, #32]
  43b50c:	ldr	x0, [x20, #16]
  43b510:	str	x0, [x23, #48]
  43b514:	b	43bd70 <argp_parse@@Base+0x8630>
  43b518:	mov	w2, #0x5                   	// #5
  43b51c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43b520:	add	x1, x1, #0xa90
  43b524:	mov	x0, #0x0                   	// #0
  43b528:	bl	4049c0 <dcgettext@plt>
  43b52c:	ldur	x1, [x20, #-216]
  43b530:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43b534:	b	43b4f4 <argp_parse@@Base+0x7db4>
  43b538:	ldur	x0, [x20, #-104]
  43b53c:	str	x0, [x23, #64]
  43b540:	ldur	x0, [x20, #-56]
  43b544:	str	x0, [x23, #56]
  43b548:	ldr	x0, [x20, #8]
  43b54c:	negs	x0, x0
  43b550:	str	x0, [x23, #40]
  43b554:	b.vs	43bcac <argp_parse@@Base+0x856c>
  43b558:	ldr	x0, [x20, #16]
  43b55c:	str	x0, [x23, #48]
  43b560:	b	43bd70 <argp_parse@@Base+0x8630>
  43b564:	ldur	x0, [x20, #-112]
  43b568:	str	x0, [x23, #56]
  43b56c:	ldur	x0, [x20, #-48]
  43b570:	negs	x0, x0
  43b574:	str	x0, [x23, #64]
  43b578:	b.vs	43bcb4 <argp_parse@@Base+0x8574>
  43b57c:	ldr	x0, [x20, #8]
  43b580:	negs	x0, x0
  43b584:	str	x0, [x23, #40]
  43b588:	b.vs	43bcbc <argp_parse@@Base+0x857c>
  43b58c:	ldr	x0, [x20, #16]
  43b590:	str	x0, [x23, #48]
  43b594:	b	43bd70 <argp_parse@@Base+0x8630>
  43b598:	ldur	x0, [x20, #-56]
  43b59c:	str	x0, [x23, #56]
  43b5a0:	ldr	x0, [x20, #8]
  43b5a4:	str	x0, [x23, #64]
  43b5a8:	b	43bd70 <argp_parse@@Base+0x8630>
  43b5ac:	ldur	x0, [x20, #-168]
  43b5b0:	str	x0, [x23, #56]
  43b5b4:	ldur	x0, [x20, #-104]
  43b5b8:	str	x0, [x23, #64]
  43b5bc:	ldp	x0, x1, [x20]
  43b5c0:	stp	x0, x1, [x23, #32]
  43b5c4:	ldr	x0, [x20, #16]
  43b5c8:	str	x0, [x23, #48]
  43b5cc:	b	43bd70 <argp_parse@@Base+0x8630>
  43b5d0:	ldur	x0, [x20, #-48]
  43b5d4:	str	x0, [x23, #64]
  43b5d8:	ldr	x0, [x20]
  43b5dc:	str	x0, [x23, #56]
  43b5e0:	b	43bd70 <argp_parse@@Base+0x8630>
  43b5e4:	ldur	x0, [x20, #-104]
  43b5e8:	str	x0, [x23, #64]
  43b5ec:	ldur	x0, [x20, #-56]
  43b5f0:	str	x0, [x23, #56]
  43b5f4:	ldp	x0, x1, [x20]
  43b5f8:	stp	x0, x1, [x23, #32]
  43b5fc:	ldr	x0, [x20, #16]
  43b600:	str	x0, [x23, #48]
  43b604:	b	43bd70 <argp_parse@@Base+0x8630>
  43b608:	ldp	x0, x1, [x20, #-112]
  43b60c:	stp	x0, x1, [x23, #32]
  43b610:	ldur	x0, [x20, #-96]
  43b614:	str	x0, [x23, #48]
  43b618:	ldur	x0, [x20, #-48]
  43b61c:	negs	x0, x0
  43b620:	str	x0, [x23, #56]
  43b624:	b.vs	43bcc4 <argp_parse@@Base+0x8584>
  43b628:	ldr	x0, [x20, #8]
  43b62c:	negs	x0, x0
  43b630:	str	x0, [x23, #64]
  43b634:	b.vc	43bd70 <argp_parse@@Base+0x8630>
  43b638:	mov	w0, #0x1                   	// #1
  43b63c:	b	43bc34 <argp_parse@@Base+0x84f4>
  43b640:	ldp	x0, x1, [x20, #-56]
  43b644:	stp	x0, x1, [sp, #176]
  43b648:	ldp	x0, x1, [x20, #-40]
  43b64c:	stp	x0, x1, [sp, #192]
  43b650:	ldp	x0, x1, [x20, #-24]
  43b654:	stp	x0, x1, [sp, #208]
  43b658:	ldur	x0, [x20, #-8]
  43b65c:	str	x0, [sp, #224]
  43b660:	ldr	w2, [x20]
  43b664:	add	x1, sp, #0xb0
  43b668:	mov	x0, x23
  43b66c:	bl	439cc0 <argp_parse@@Base+0x6580>
  43b670:	and	w0, w0, #0xff
  43b674:	cbnz	w0, 43bd70 <argp_parse@@Base+0x8630>
  43b678:	mov	w0, #0x1                   	// #1
  43b67c:	b	43bc34 <argp_parse@@Base+0x84f4>
  43b680:	ldp	x0, x1, [x20]
  43b684:	stp	x0, x1, [sp, #176]
  43b688:	ldp	x0, x1, [x20, #16]
  43b68c:	stp	x0, x1, [sp, #192]
  43b690:	ldp	x0, x1, [x20, #32]
  43b694:	stp	x0, x1, [sp, #208]
  43b698:	ldr	x0, [x20, #48]
  43b69c:	str	x0, [sp, #224]
  43b6a0:	mov	w2, #0x1                   	// #1
  43b6a4:	add	x1, sp, #0xb0
  43b6a8:	mov	x0, x23
  43b6ac:	bl	439cc0 <argp_parse@@Base+0x6580>
  43b6b0:	and	w0, w0, #0xff
  43b6b4:	cbnz	w0, 43bd70 <argp_parse@@Base+0x8630>
  43b6b8:	mov	w0, #0x1                   	// #1
  43b6bc:	b	43bc34 <argp_parse@@Base+0x84f4>
  43b6c0:	ldp	x0, x1, [x20]
  43b6c4:	stp	x0, x1, [sp, #176]
  43b6c8:	ldp	x0, x1, [x20, #16]
  43b6cc:	stp	x0, x1, [sp, #192]
  43b6d0:	ldp	x0, x1, [x20, #32]
  43b6d4:	stp	x0, x1, [sp, #208]
  43b6d8:	ldr	x0, [x20, #48]
  43b6dc:	str	x0, [sp, #224]
  43b6e0:	mov	w2, #0x1                   	// #1
  43b6e4:	add	x1, sp, #0xb0
  43b6e8:	mov	x0, x23
  43b6ec:	bl	439cc0 <argp_parse@@Base+0x6580>
  43b6f0:	and	w0, w0, #0xff
  43b6f4:	cbnz	w0, 43bd70 <argp_parse@@Base+0x8630>
  43b6f8:	mov	w0, #0x1                   	// #1
  43b6fc:	b	43bc34 <argp_parse@@Base+0x84f4>
  43b700:	ldur	x27, [x20, #-56]
  43b704:	str	wzr, [sp, #144]
  43b708:	mov	x28, #0x0                   	// #0
  43b70c:	str	xzr, [sp, #128]
  43b710:	str	xzr, [sp, #136]
  43b714:	str	xzr, [sp, #120]
  43b718:	str	xzr, [sp, #112]
  43b71c:	b	43bd70 <argp_parse@@Base+0x8630>
  43b720:	ldur	x27, [x20, #-48]
  43b724:	str	wzr, [sp, #144]
  43b728:	mov	x28, #0x0                   	// #0
  43b72c:	str	xzr, [sp, #128]
  43b730:	str	xzr, [sp, #136]
  43b734:	str	xzr, [sp, #120]
  43b738:	str	xzr, [sp, #112]
  43b73c:	b	43bd70 <argp_parse@@Base+0x8630>
  43b740:	ldur	x0, [x20, #-56]
  43b744:	str	x0, [sp, #112]
  43b748:	str	wzr, [sp, #144]
  43b74c:	mov	x28, #0x0                   	// #0
  43b750:	str	xzr, [sp, #128]
  43b754:	str	xzr, [sp, #136]
  43b758:	str	xzr, [sp, #120]
  43b75c:	mov	x27, #0x0                   	// #0
  43b760:	b	43bd70 <argp_parse@@Base+0x8630>
  43b764:	ldur	x0, [x20, #-48]
  43b768:	str	x0, [sp, #112]
  43b76c:	str	wzr, [sp, #144]
  43b770:	mov	x28, #0x0                   	// #0
  43b774:	str	xzr, [sp, #128]
  43b778:	str	xzr, [sp, #136]
  43b77c:	str	xzr, [sp, #120]
  43b780:	mov	x27, #0x0                   	// #0
  43b784:	b	43bd70 <argp_parse@@Base+0x8630>
  43b788:	ldur	x0, [x20, #-56]
  43b78c:	ldr	x2, [x20]
  43b790:	mul	x1, x0, x2
  43b794:	smulh	x0, x0, x2
  43b798:	str	x1, [sp, #120]
  43b79c:	cmp	x0, x1, asr #63
  43b7a0:	b.ne	43bccc <argp_parse@@Base+0x858c>  // b.any
  43b7a4:	str	wzr, [sp, #144]
  43b7a8:	mov	x28, #0x0                   	// #0
  43b7ac:	str	xzr, [sp, #128]
  43b7b0:	str	xzr, [sp, #136]
  43b7b4:	str	xzr, [sp, #112]
  43b7b8:	mov	x27, #0x0                   	// #0
  43b7bc:	b	43bd70 <argp_parse@@Base+0x8630>
  43b7c0:	ldur	x0, [x20, #-48]
  43b7c4:	ldr	x2, [x20]
  43b7c8:	mul	x1, x0, x2
  43b7cc:	smulh	x0, x0, x2
  43b7d0:	str	x1, [sp, #120]
  43b7d4:	cmp	x0, x1, asr #63
  43b7d8:	b.ne	43bcd4 <argp_parse@@Base+0x8594>  // b.any
  43b7dc:	str	wzr, [sp, #144]
  43b7e0:	mov	x28, #0x0                   	// #0
  43b7e4:	str	xzr, [sp, #128]
  43b7e8:	str	xzr, [sp, #136]
  43b7ec:	str	xzr, [sp, #112]
  43b7f0:	mov	x27, #0x0                   	// #0
  43b7f4:	b	43bd70 <argp_parse@@Base+0x8630>
  43b7f8:	ldr	x0, [x20]
  43b7fc:	str	x0, [sp, #120]
  43b800:	str	wzr, [sp, #144]
  43b804:	mov	x28, #0x0                   	// #0
  43b808:	str	xzr, [sp, #128]
  43b80c:	str	xzr, [sp, #136]
  43b810:	str	xzr, [sp, #112]
  43b814:	mov	x27, #0x0                   	// #0
  43b818:	b	43bd70 <argp_parse@@Base+0x8630>
  43b81c:	ldur	x0, [x20, #-56]
  43b820:	str	x0, [sp, #136]
  43b824:	str	wzr, [sp, #144]
  43b828:	mov	x28, #0x0                   	// #0
  43b82c:	str	xzr, [sp, #128]
  43b830:	str	xzr, [sp, #120]
  43b834:	str	xzr, [sp, #112]
  43b838:	mov	x27, #0x0                   	// #0
  43b83c:	b	43bd70 <argp_parse@@Base+0x8630>
  43b840:	ldur	x0, [x20, #-48]
  43b844:	str	x0, [sp, #136]
  43b848:	str	wzr, [sp, #144]
  43b84c:	mov	x28, #0x0                   	// #0
  43b850:	str	xzr, [sp, #128]
  43b854:	str	xzr, [sp, #120]
  43b858:	str	xzr, [sp, #112]
  43b85c:	mov	x27, #0x0                   	// #0
  43b860:	b	43bd70 <argp_parse@@Base+0x8630>
  43b864:	str	wzr, [sp, #144]
  43b868:	mov	x28, #0x0                   	// #0
  43b86c:	str	xzr, [sp, #128]
  43b870:	mov	x0, #0x1                   	// #1
  43b874:	str	x0, [sp, #136]
  43b878:	str	xzr, [sp, #120]
  43b87c:	str	xzr, [sp, #112]
  43b880:	mov	x27, #0x0                   	// #0
  43b884:	b	43bd70 <argp_parse@@Base+0x8630>
  43b888:	ldur	x0, [x20, #-56]
  43b88c:	str	x0, [sp, #128]
  43b890:	str	wzr, [sp, #144]
  43b894:	mov	x28, #0x0                   	// #0
  43b898:	str	xzr, [sp, #136]
  43b89c:	str	xzr, [sp, #120]
  43b8a0:	str	xzr, [sp, #112]
  43b8a4:	mov	x27, #0x0                   	// #0
  43b8a8:	b	43bd70 <argp_parse@@Base+0x8630>
  43b8ac:	ldur	x0, [x20, #-48]
  43b8b0:	str	x0, [sp, #128]
  43b8b4:	str	wzr, [sp, #144]
  43b8b8:	mov	x28, #0x0                   	// #0
  43b8bc:	str	xzr, [sp, #136]
  43b8c0:	str	xzr, [sp, #120]
  43b8c4:	str	xzr, [sp, #112]
  43b8c8:	mov	x27, #0x0                   	// #0
  43b8cc:	b	43bd70 <argp_parse@@Base+0x8630>
  43b8d0:	str	wzr, [sp, #144]
  43b8d4:	mov	x28, #0x0                   	// #0
  43b8d8:	mov	x0, #0x1                   	// #1
  43b8dc:	str	x0, [sp, #128]
  43b8e0:	str	xzr, [sp, #136]
  43b8e4:	str	xzr, [sp, #120]
  43b8e8:	str	xzr, [sp, #112]
  43b8ec:	mov	x27, #0x0                   	// #0
  43b8f0:	b	43bd70 <argp_parse@@Base+0x8630>
  43b8f4:	ldur	x28, [x20, #-56]
  43b8f8:	str	wzr, [sp, #144]
  43b8fc:	str	xzr, [sp, #128]
  43b900:	str	xzr, [sp, #136]
  43b904:	str	xzr, [sp, #120]
  43b908:	str	xzr, [sp, #112]
  43b90c:	mov	x27, #0x0                   	// #0
  43b910:	b	43bd70 <argp_parse@@Base+0x8630>
  43b914:	ldur	x28, [x20, #-48]
  43b918:	str	wzr, [sp, #144]
  43b91c:	str	xzr, [sp, #128]
  43b920:	str	xzr, [sp, #136]
  43b924:	str	xzr, [sp, #120]
  43b928:	str	xzr, [sp, #112]
  43b92c:	mov	x27, #0x0                   	// #0
  43b930:	b	43bd70 <argp_parse@@Base+0x8630>
  43b934:	ldur	x28, [x20, #-56]
  43b938:	ldur	w0, [x20, #-48]
  43b93c:	str	w0, [sp, #144]
  43b940:	str	xzr, [sp, #128]
  43b944:	str	xzr, [sp, #136]
  43b948:	str	xzr, [sp, #120]
  43b94c:	str	xzr, [sp, #112]
  43b950:	mov	x27, #0x0                   	// #0
  43b954:	b	43bd70 <argp_parse@@Base+0x8630>
  43b958:	ldur	x28, [x20, #-56]
  43b95c:	ldur	w0, [x20, #-48]
  43b960:	str	w0, [sp, #144]
  43b964:	str	xzr, [sp, #128]
  43b968:	str	xzr, [sp, #136]
  43b96c:	str	xzr, [sp, #120]
  43b970:	str	xzr, [sp, #112]
  43b974:	mov	x27, #0x0                   	// #0
  43b978:	b	43bd70 <argp_parse@@Base+0x8630>
  43b97c:	str	wzr, [sp, #144]
  43b980:	mov	x28, #0x1                   	// #1
  43b984:	str	xzr, [sp, #128]
  43b988:	str	xzr, [sp, #136]
  43b98c:	str	xzr, [sp, #120]
  43b990:	str	xzr, [sp, #112]
  43b994:	mov	x27, #0x0                   	// #0
  43b998:	b	43bd70 <argp_parse@@Base+0x8630>
  43b99c:	ldur	x27, [x20, #-48]
  43b9a0:	str	wzr, [sp, #144]
  43b9a4:	mov	x28, #0x0                   	// #0
  43b9a8:	str	xzr, [sp, #128]
  43b9ac:	str	xzr, [sp, #136]
  43b9b0:	str	xzr, [sp, #120]
  43b9b4:	str	xzr, [sp, #112]
  43b9b8:	b	43bd70 <argp_parse@@Base+0x8630>
  43b9bc:	ldur	x0, [x20, #-48]
  43b9c0:	str	x0, [sp, #112]
  43b9c4:	str	wzr, [sp, #144]
  43b9c8:	mov	x28, #0x0                   	// #0
  43b9cc:	str	xzr, [sp, #128]
  43b9d0:	str	xzr, [sp, #136]
  43b9d4:	str	xzr, [sp, #120]
  43b9d8:	mov	x27, #0x0                   	// #0
  43b9dc:	b	43bd70 <argp_parse@@Base+0x8630>
  43b9e0:	ldur	x0, [x20, #-48]
  43b9e4:	ldr	x2, [x20]
  43b9e8:	mul	x1, x0, x2
  43b9ec:	smulh	x0, x0, x2
  43b9f0:	str	x1, [sp, #120]
  43b9f4:	cmp	x0, x1, asr #63
  43b9f8:	b.ne	43bcdc <argp_parse@@Base+0x859c>  // b.any
  43b9fc:	str	wzr, [sp, #144]
  43ba00:	mov	x28, #0x0                   	// #0
  43ba04:	str	xzr, [sp, #128]
  43ba08:	str	xzr, [sp, #136]
  43ba0c:	str	xzr, [sp, #112]
  43ba10:	mov	x27, #0x0                   	// #0
  43ba14:	b	43bd70 <argp_parse@@Base+0x8630>
  43ba18:	ldur	x0, [x20, #-48]
  43ba1c:	str	x0, [sp, #136]
  43ba20:	str	wzr, [sp, #144]
  43ba24:	mov	x28, #0x0                   	// #0
  43ba28:	str	xzr, [sp, #128]
  43ba2c:	str	xzr, [sp, #120]
  43ba30:	str	xzr, [sp, #112]
  43ba34:	mov	x27, #0x0                   	// #0
  43ba38:	b	43bd70 <argp_parse@@Base+0x8630>
  43ba3c:	ldur	x0, [x20, #-48]
  43ba40:	str	x0, [sp, #128]
  43ba44:	str	wzr, [sp, #144]
  43ba48:	mov	x28, #0x0                   	// #0
  43ba4c:	str	xzr, [sp, #136]
  43ba50:	str	xzr, [sp, #120]
  43ba54:	str	xzr, [sp, #112]
  43ba58:	mov	x27, #0x0                   	// #0
  43ba5c:	b	43bd70 <argp_parse@@Base+0x8630>
  43ba60:	ldur	x28, [x20, #-48]
  43ba64:	str	wzr, [sp, #144]
  43ba68:	str	xzr, [sp, #128]
  43ba6c:	str	xzr, [sp, #136]
  43ba70:	str	xzr, [sp, #120]
  43ba74:	str	xzr, [sp, #112]
  43ba78:	mov	x27, #0x0                   	// #0
  43ba7c:	b	43bd70 <argp_parse@@Base+0x8630>
  43ba80:	ldr	x0, [x20]
  43ba84:	str	x0, [sp, #120]
  43ba88:	str	wzr, [sp, #144]
  43ba8c:	mov	x28, #0x0                   	// #0
  43ba90:	str	xzr, [sp, #128]
  43ba94:	str	xzr, [sp, #136]
  43ba98:	str	xzr, [sp, #112]
  43ba9c:	mov	x27, #0x0                   	// #0
  43baa0:	b	43bd70 <argp_parse@@Base+0x8630>
  43baa4:	ldr	x27, [x20, #8]
  43baa8:	str	xzr, [sp, #112]
  43baac:	b	43bd70 <argp_parse@@Base+0x8630>
  43bab0:	ldr	x27, [x20, #8]
  43bab4:	str	xzr, [sp, #112]
  43bab8:	b	43bd70 <argp_parse@@Base+0x8630>
  43babc:	ldp	x0, x1, [x20]
  43bac0:	stp	x0, x1, [sp, #176]
  43bac4:	ldr	x0, [x20, #16]
  43bac8:	str	x0, [sp, #192]
  43bacc:	add	x1, sp, #0xb0
  43bad0:	mov	x0, x23
  43bad4:	bl	439b78 <argp_parse@@Base+0x6438>
  43bad8:	b	43bd70 <argp_parse@@Base+0x8630>
  43badc:	ldp	x0, x1, [x20, #-56]
  43bae0:	stp	x0, x1, [sp, #176]
  43bae4:	ldur	x0, [x20, #-40]
  43bae8:	str	x0, [sp, #192]
  43baec:	add	x1, sp, #0xb0
  43baf0:	mov	x0, x23
  43baf4:	bl	439b78 <argp_parse@@Base+0x6438>
  43baf8:	ldp	x0, x1, [x20]
  43bafc:	stp	x0, x1, [sp, #176]
  43bb00:	ldp	x0, x1, [x20, #16]
  43bb04:	stp	x0, x1, [sp, #192]
  43bb08:	ldp	x0, x1, [x20, #32]
  43bb0c:	stp	x0, x1, [sp, #208]
  43bb10:	ldr	x0, [x20, #48]
  43bb14:	str	x0, [sp, #224]
  43bb18:	mov	w2, #0x1                   	// #1
  43bb1c:	add	x1, sp, #0xb0
  43bb20:	mov	x0, x23
  43bb24:	bl	439cc0 <argp_parse@@Base+0x6580>
  43bb28:	and	w0, w0, #0xff
  43bb2c:	cbnz	w0, 43bd70 <argp_parse@@Base+0x8630>
  43bb30:	mov	w0, #0x1                   	// #1
  43bb34:	b	43bc34 <argp_parse@@Base+0x84f4>
  43bb38:	mov	x27, #0xffffffffffffffff    	// #-1
  43bb3c:	b	43bd70 <argp_parse@@Base+0x8630>
  43bb40:	ldr	x27, [x20, #8]
  43bb44:	b	43bd70 <argp_parse@@Base+0x8630>
  43bb48:	str	wzr, [sp, #144]
  43bb4c:	mov	x28, #0x0                   	// #0
  43bb50:	str	xzr, [sp, #128]
  43bb54:	str	xzr, [sp, #136]
  43bb58:	str	xzr, [sp, #120]
  43bb5c:	mov	x0, #0x1                   	// #1
  43bb60:	str	x0, [sp, #112]
  43bb64:	mov	x27, #0x0                   	// #0
  43bb68:	b	43bd70 <argp_parse@@Base+0x8630>
  43bb6c:	add	x0, x22, #0xb98
  43bb70:	ldrb	w27, [x0, w1, sxtw]
  43bb74:	b	43be18 <argp_parse@@Base+0x86d8>
  43bb78:	ldr	w0, [sp, #148]
  43bb7c:	cmp	w0, #0x3
  43bb80:	b.ne	43bb90 <argp_parse@@Base+0x8450>  // b.any
  43bb84:	cmp	w25, #0x0
  43bb88:	b.gt	43bb9c <argp_parse@@Base+0x845c>
  43bb8c:	cbz	w25, 43bce4 <argp_parse@@Base+0x85a4>
  43bb90:	add	x1, x22, #0x990
  43bb94:	add	x3, x22, #0xb98
  43bb98:	b	43bbb4 <argp_parse@@Base+0x8474>
  43bb9c:	mov	w25, #0xfffffffe            	// #-2
  43bba0:	b	43bb90 <argp_parse@@Base+0x8450>
  43bba4:	cmp	x19, x21
  43bba8:	b.eq	43bcf0 <argp_parse@@Base+0x85b0>  // b.none
  43bbac:	sub	x20, x20, #0x38
  43bbb0:	ldrsh	w27, [x19, #-2]!
  43bbb4:	ldrsb	w0, [x1, w27, sxtw]
  43bbb8:	cmn	w0, #0x5d
  43bbbc:	b.eq	43bba4 <argp_parse@@Base+0x8464>  // b.none
  43bbc0:	add	w0, w0, #0x1
  43bbc4:	cmp	w0, #0x70
  43bbc8:	b.hi	43bba4 <argp_parse@@Base+0x8464>  // b.pmore
  43bbcc:	ldrsb	w2, [x26, w0, sxtw]
  43bbd0:	cmp	w2, #0x1
  43bbd4:	b.ne	43bba4 <argp_parse@@Base+0x8464>  // b.any
  43bbd8:	ldrb	w27, [x3, w0, sxtw]
  43bbdc:	cbz	w27, 43bba4 <argp_parse@@Base+0x8464>
  43bbe0:	add	x0, x20, #0x38
  43bbe4:	ldr	x1, [sp, #160]
  43bbe8:	str	x1, [sp, #1520]
  43bbec:	ldr	x1, [sp, #168]
  43bbf0:	str	x1, [sp, #1528]
  43bbf4:	add	x1, sp, #0x650
  43bbf8:	ldp	x2, x3, [x1, #-104]
  43bbfc:	stp	x2, x3, [x20, #56]
  43bc00:	ldp	x2, x3, [x1, #-88]
  43bc04:	stp	x2, x3, [x20, #72]
  43bc08:	ldp	x2, x3, [x1, #-72]
  43bc0c:	stp	x2, x3, [x20, #88]
  43bc10:	ldr	x1, [sp, #1560]
  43bc14:	str	x1, [x20, #104]
  43bc18:	mov	x20, x0
  43bc1c:	mov	x24, x19
  43bc20:	mov	w0, #0x3                   	// #3
  43bc24:	str	w0, [sp, #148]
  43bc28:	b	43be18 <argp_parse@@Base+0x86d8>
  43bc2c:	str	wzr, [sp, #152]
  43bc30:	mov	w0, #0x2                   	// #2
  43bc34:	ldr	w1, [sp, #152]
  43bc38:	sub	x19, x19, w1, sxtw #1
  43bc3c:	add	x1, sp, #0x5c0
  43bc40:	cmp	x19, x1
  43bc44:	b.eq	43bc68 <argp_parse@@Base+0x8528>  // b.none
  43bc48:	add	x1, sp, #0x620
  43bc4c:	sub	x19, x19, x1
  43bc50:	add	x1, x19, #0x5e
  43bc54:	lsr	x1, x1, #1
  43bc58:	mov	x3, #0x0                   	// #0
  43bc5c:	cmp	x3, x1
  43bc60:	add	x3, x3, #0x1
  43bc64:	b.ne	43bc5c <argp_parse@@Base+0x851c>  // b.any
  43bc68:	ldp	x19, x20, [sp, #16]
  43bc6c:	ldp	x21, x22, [sp, #32]
  43bc70:	ldp	x23, x24, [sp, #48]
  43bc74:	ldp	x25, x26, [sp, #64]
  43bc78:	ldp	x27, x28, [sp, #80]
  43bc7c:	ldp	x29, x30, [sp]
  43bc80:	add	sp, sp, #0x620
  43bc84:	ret
  43bc88:	str	wzr, [sp, #152]
  43bc8c:	mov	w0, #0x0                   	// #0
  43bc90:	b	43bc34 <argp_parse@@Base+0x84f4>
  43bc94:	mov	w0, #0x1                   	// #1
  43bc98:	b	43bc34 <argp_parse@@Base+0x84f4>
  43bc9c:	mov	w0, #0x1                   	// #1
  43bca0:	b	43bc34 <argp_parse@@Base+0x84f4>
  43bca4:	mov	w0, #0x1                   	// #1
  43bca8:	b	43bc34 <argp_parse@@Base+0x84f4>
  43bcac:	mov	w0, #0x1                   	// #1
  43bcb0:	b	43bc34 <argp_parse@@Base+0x84f4>
  43bcb4:	mov	w0, #0x1                   	// #1
  43bcb8:	b	43bc34 <argp_parse@@Base+0x84f4>
  43bcbc:	mov	w0, #0x1                   	// #1
  43bcc0:	b	43bc34 <argp_parse@@Base+0x84f4>
  43bcc4:	mov	w0, #0x1                   	// #1
  43bcc8:	b	43bc34 <argp_parse@@Base+0x84f4>
  43bccc:	mov	w0, #0x1                   	// #1
  43bcd0:	b	43bc34 <argp_parse@@Base+0x84f4>
  43bcd4:	mov	w0, #0x1                   	// #1
  43bcd8:	b	43bc34 <argp_parse@@Base+0x84f4>
  43bcdc:	mov	w0, #0x1                   	// #1
  43bce0:	b	43bc34 <argp_parse@@Base+0x84f4>
  43bce4:	str	w25, [sp, #152]
  43bce8:	mov	w0, #0x1                   	// #1
  43bcec:	b	43bc34 <argp_parse@@Base+0x84f4>
  43bcf0:	mov	w0, #0x1                   	// #1
  43bcf4:	b	43bc68 <argp_parse@@Base+0x8528>
  43bcf8:	mov	w25, #0x3f                  	// #63
  43bcfc:	b	43be60 <argp_parse@@Base+0x8720>
  43bd00:	cmp	w0, #0x2d
  43bd04:	cset	w2, eq  // eq = none
  43bd08:	b	43a988 <argp_parse@@Base+0x7248>
  43bd0c:	add	x25, x22, #0x980
  43bd10:	b	43ae30 <argp_parse@@Base+0x76f0>
  43bd14:	ldp	x2, x3, [x20, #56]
  43bd18:	add	x1, sp, #0x200
  43bd1c:	stp	x2, x3, [x1, #-216]
  43bd20:	ldp	x2, x3, [x20, #72]
  43bd24:	stp	x2, x3, [x1, #-200]
  43bd28:	ldp	x2, x3, [x20, #88]
  43bd2c:	stp	x2, x3, [x1, #-184]
  43bd30:	ldr	x1, [x20, #104]
  43bd34:	str	x1, [sp, #344]
  43bd38:	ldr	x27, [x20, #56]
  43bd3c:	ldr	x1, [x20, #64]
  43bd40:	str	x1, [sp, #112]
  43bd44:	ldr	x1, [x20, #72]
  43bd48:	str	x1, [sp, #120]
  43bd4c:	ldr	x1, [x20, #80]
  43bd50:	str	x1, [sp, #136]
  43bd54:	ldr	x1, [x20, #88]
  43bd58:	str	x1, [sp, #128]
  43bd5c:	ldr	x28, [x20, #96]
  43bd60:	ldr	w0, [x20, #104]
  43bd64:	str	w0, [sp, #144]
  43bd68:	str	wzr, [sp, #104]
  43bd6c:	mov	w24, #0x0                   	// #0
  43bd70:	ubfiz	x0, x24, #3, #8
  43bd74:	sub	x0, x0, w24, uxtb
  43bd78:	sub	x0, x20, x0, lsl #3
  43bd7c:	sub	x24, x19, w24, uxtb #1
  43bd80:	add	x20, x0, #0x38
  43bd84:	str	x27, [sp, #296]
  43bd88:	ldr	x1, [sp, #112]
  43bd8c:	str	x1, [sp, #304]
  43bd90:	ldr	x1, [sp, #120]
  43bd94:	str	x1, [sp, #312]
  43bd98:	ldr	x1, [sp, #136]
  43bd9c:	str	x1, [sp, #320]
  43bda0:	ldr	x1, [sp, #128]
  43bda4:	str	x1, [sp, #328]
  43bda8:	str	x28, [sp, #336]
  43bdac:	ldr	w1, [sp, #144]
  43bdb0:	str	w1, [sp, #344]
  43bdb4:	add	x1, sp, #0x200
  43bdb8:	ldp	x2, x3, [x1, #-216]
  43bdbc:	stp	x2, x3, [x0, #56]
  43bdc0:	ldp	x0, x1, [x1, #-200]
  43bdc4:	stp	x0, x1, [x20, #16]
  43bdc8:	add	x0, sp, #0x200
  43bdcc:	ldp	x0, x1, [x0, #-184]
  43bdd0:	stp	x0, x1, [x20, #32]
  43bdd4:	ldr	x0, [sp, #344]
  43bdd8:	str	x0, [x20, #48]
  43bddc:	add	x0, x22, #0xce8
  43bde0:	ldr	w1, [sp, #104]
  43bde4:	ldrb	w0, [x0, w1, sxtw]
  43bde8:	sub	w0, w0, #0x1c
  43bdec:	ldrsh	w2, [x24]
  43bdf0:	add	x1, x22, #0xd48
  43bdf4:	ldrsb	w1, [x1, w0, sxtw]
  43bdf8:	add	w1, w1, w2
  43bdfc:	cmp	w1, #0x70
  43be00:	b.hi	43be10 <argp_parse@@Base+0x86d0>  // b.pmore
  43be04:	ldrsb	w3, [x26, w1, sxtw]
  43be08:	cmp	w3, w2
  43be0c:	b.eq	43bb6c <argp_parse@@Base+0x842c>  // b.none
  43be10:	add	x1, x22, #0xd68
  43be14:	ldrsb	w27, [x1, w0, sxtw]
  43be18:	add	x19, x24, #0x2
  43be1c:	strh	w27, [x24, #2]
  43be20:	add	x0, x21, #0x26
  43be24:	cmp	x19, x0
  43be28:	b.cs	43bc2c <argp_parse@@Base+0x84ec>  // b.hs, b.nlast
  43be2c:	cmp	w27, #0xc
  43be30:	b.eq	43bc88 <argp_parse@@Base+0x8548>  // b.none
  43be34:	add	x0, x22, #0x990
  43be38:	ldrsb	w24, [x0, w27, sxtw]
  43be3c:	cmn	w24, #0x5d
  43be40:	b.eq	43af24 <argp_parse@@Base+0x77e4>  // b.none
  43be44:	cmn	w25, #0x2
  43be48:	b.eq	43a904 <argp_parse@@Base+0x71c4>  // b.none
  43be4c:	cmp	w25, #0x0
  43be50:	b.le	43ae9c <argp_parse@@Base+0x775c>
  43be54:	mov	w0, #0x2                   	// #2
  43be58:	cmp	w25, #0x115
  43be5c:	b.hi	43aea4 <argp_parse@@Base+0x7764>  // b.pmore
  43be60:	add	x0, x22, #0xa08
  43be64:	ldrb	w0, [x0, w25, sxtw]
  43be68:	b	43aea4 <argp_parse@@Base+0x7764>
  43be6c:	sub	sp, sp, #0x420
  43be70:	stp	x29, x30, [sp, #32]
  43be74:	add	x29, sp, #0x20
  43be78:	stp	x19, x20, [sp, #48]
  43be7c:	stp	x21, x22, [sp, #64]
  43be80:	stp	x23, x24, [sp, #80]
  43be84:	stp	x25, x26, [sp, #96]
  43be88:	stp	x27, x28, [sp, #112]
  43be8c:	str	x0, [sp, #144]
  43be90:	mov	x26, x1
  43be94:	mov	x20, x2
  43be98:	mov	w24, w3
  43be9c:	mov	x25, x4
  43bea0:	str	x5, [sp, #136]
  43bea4:	mov	x0, x1
  43bea8:	bl	403ff0 <strlen@plt>
  43beac:	str	x0, [sp, #152]
  43beb0:	cbz	x20, 43bf0c <argp_parse@@Base+0x87cc>
  43beb4:	ldr	x23, [x20]
  43beb8:	ldr	x28, [x20, #8]
  43bebc:	mov	x19, x26
  43bec0:	ldrb	w0, [x19]
  43bec4:	cmp	w0, #0xd
  43bec8:	b.hi	43bf1c <argp_parse@@Base+0x87dc>  // b.pmore
  43becc:	cmp	w0, #0x8
  43bed0:	b.hi	43bf24 <argp_parse@@Base+0x87e4>  // b.pmore
  43bed4:	mov	x2, #0x4                   	// #4
  43bed8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43bedc:	add	x1, x1, #0xae0
  43bee0:	mov	x0, x19
  43bee4:	bl	4043c0 <strncmp@plt>
  43bee8:	cbnz	w0, 43d41c <argp_parse@@Base+0x9cdc>
  43beec:	add	x22, x19, #0x4
  43bef0:	ldrb	w21, [x19, #4]
  43bef4:	cbz	w21, 43d41c <argp_parse@@Base+0x9cdc>
  43bef8:	mov	x2, x22
  43befc:	mov	w1, w21
  43bf00:	mov	x0, #0x1                   	// #1
  43bf04:	mov	w3, #0x22                  	// #34
  43bf08:	b	43bf50 <argp_parse@@Base+0x8810>
  43bf0c:	add	x0, sp, #0x2b0
  43bf10:	bl	4373d0 <argp_parse@@Base+0x3c90>
  43bf14:	add	x20, sp, #0x2b0
  43bf18:	b	43beb4 <argp_parse@@Base+0x8774>
  43bf1c:	cmp	w0, #0x20
  43bf20:	b.ne	43bed4 <argp_parse@@Base+0x8794>  // b.any
  43bf24:	add	x19, x19, #0x1
  43bf28:	b	43bec0 <argp_parse@@Base+0x8780>
  43bf2c:	add	x1, x2, #0x1
  43bf30:	ldrb	w2, [x2, #1]
  43bf34:	cmp	w2, #0x5c
  43bf38:	ccmp	w2, w3, #0x4, ne  // ne = any
  43bf3c:	b.ne	43d41c <argp_parse@@Base+0x9cdc>  // b.any
  43bf40:	add	x2, x1, #0x1
  43bf44:	add	x0, x0, #0x1
  43bf48:	ldrb	w1, [x1, #1]
  43bf4c:	cbz	w1, 43d41c <argp_parse@@Base+0x9cdc>
  43bf50:	cmp	w1, #0x5c
  43bf54:	b.eq	43bf2c <argp_parse@@Base+0x87ec>  // b.none
  43bf58:	cmp	w1, #0x22
  43bf5c:	b.eq	43bf68 <argp_parse@@Base+0x8828>  // b.none
  43bf60:	mov	x1, x2
  43bf64:	b	43bf40 <argp_parse@@Base+0x8800>
  43bf68:	cmp	x0, #0x64
  43bf6c:	b.gt	43bff4 <argp_parse@@Base+0x88b4>
  43bf70:	add	x0, sp, #0x2c0
  43bf74:	str	x0, [sp, #136]
  43bf78:	mov	x27, #0x0                   	// #0
  43bf7c:	cmp	w21, #0x22
  43bf80:	b.eq	43c008 <argp_parse@@Base+0x88c8>  // b.none
  43bf84:	ldr	x1, [sp, #136]
  43bf88:	cmp	w21, #0x5c
  43bf8c:	cset	w2, eq  // eq = none
  43bf90:	cinc	x0, x22, eq  // eq = none
  43bf94:	ldrb	w2, [x22, w2, uxtw]
  43bf98:	strb	w2, [x1], #1
  43bf9c:	add	x22, x0, #0x1
  43bfa0:	ldrb	w21, [x0, #1]
  43bfa4:	cmp	w21, #0x22
  43bfa8:	b.ne	43bf88 <argp_parse@@Base+0x8848>  // b.any
  43bfac:	strb	wzr, [x1]
  43bfb0:	ldr	x0, [sp, #136]
  43bfb4:	bl	44dcf0 <_obstack_memory_used@@Base+0xcb54>
  43bfb8:	mov	x21, x0
  43bfbc:	cbz	x0, 43d2f0 <argp_parse@@Base+0x9bb0>
  43bfc0:	add	x19, x22, #0x1
  43bfc4:	ldrb	w0, [x19]
  43bfc8:	cmp	w0, #0xd
  43bfcc:	b.hi	43c010 <argp_parse@@Base+0x88d0>  // b.pmore
  43bfd0:	cmp	w0, #0x8
  43bfd4:	b.hi	43c018 <argp_parse@@Base+0x88d8>  // b.pmore
  43bfd8:	add	x2, sp, #0x278
  43bfdc:	mov	x1, x20
  43bfe0:	mov	x0, x21
  43bfe4:	bl	44e074 <_obstack_memory_used@@Base+0xced8>
  43bfe8:	cbnz	x0, 43d43c <argp_parse@@Base+0x9cfc>
  43bfec:	mov	w19, #0x0                   	// #0
  43bff0:	b	43c224 <argp_parse@@Base+0x8ae4>
  43bff4:	bl	404310 <malloc@plt>
  43bff8:	mov	x27, x0
  43bffc:	cbz	x0, 43d2f0 <argp_parse@@Base+0x9bb0>
  43c000:	str	x0, [sp, #136]
  43c004:	b	43bf7c <argp_parse@@Base+0x883c>
  43c008:	ldr	x1, [sp, #136]
  43c00c:	b	43bfac <argp_parse@@Base+0x886c>
  43c010:	cmp	w0, #0x20
  43c014:	b.ne	43bfd8 <argp_parse@@Base+0x8898>  // b.any
  43c018:	add	x19, x19, #0x1
  43c01c:	b	43bfc4 <argp_parse@@Base+0x8884>
  43c020:	cmp	w19, w20
  43c024:	b.eq	43c07c <argp_parse@@Base+0x893c>  // b.none
  43c028:	sxtw	x0, w19
  43c02c:	adds	x0, x23, x0
  43c030:	add	w19, w19, w22
  43c034:	b.vs	43c07c <argp_parse@@Base+0x893c>
  43c038:	str	x0, [sp, #192]
  43c03c:	add	x2, sp, #0xf8
  43c040:	add	x1, sp, #0xc0
  43c044:	mov	x0, x21
  43c048:	bl	44e074 <_obstack_memory_used@@Base+0xced8>
  43c04c:	cbz	x0, 43c020 <argp_parse@@Base+0x88e0>
  43c050:	ldr	x0, [sp, #296]
  43c054:	cbz	x0, 43c020 <argp_parse@@Base+0x88e0>
  43c058:	ldr	w1, [sp, #280]
  43c05c:	ldr	w2, [sp, #596]
  43c060:	cmp	w1, w2
  43c064:	b.eq	43c020 <argp_parse@@Base+0x88e0>  // b.none
  43c068:	str	x0, [sp, #600]
  43c06c:	mov	w0, #0x10d                 	// #269
  43c070:	str	w0, [sp, #608]
  43c074:	str	w1, [sp, #612]
  43c078:	str	xzr, [sp, #616]
  43c07c:	ldr	x0, [sp, #584]
  43c080:	cbz	x0, 43c0a0 <argp_parse@@Base+0x8960>
  43c084:	ldr	x1, [sp, #600]
  43c088:	cbz	x1, 43c0a0 <argp_parse@@Base+0x8960>
  43c08c:	bl	404720 <strcmp@plt>
  43c090:	cbnz	w0, 43c0a0 <argp_parse@@Base+0x8960>
  43c094:	mov	w0, #0xffffffff            	// #-1
  43c098:	str	w0, [sp, #596]
  43c09c:	str	xzr, [sp, #600]
  43c0a0:	add	x0, sp, #0x160
  43c0a4:	bl	43a8b4 <argp_parse@@Base+0x7174>
  43c0a8:	mov	w20, w0
  43c0ac:	cbnz	w0, 43c1e8 <argp_parse@@Base+0x8aa8>
  43c0b0:	ldrb	w0, [sp, #569]
  43c0b4:	cbnz	w0, 43c278 <argp_parse@@Base+0x8b38>
  43c0b8:	ldrb	w19, [sp, #512]
  43c0bc:	cbz	w19, 43c46c <argp_parse@@Base+0x8d2c>
  43c0c0:	add	x0, sp, #0x240
  43c0c4:	ldp	x0, x1, [x0, #-136]
  43c0c8:	ldr	x2, [sp, #144]
  43c0cc:	stp	x0, x1, [x2]
  43c0d0:	ldrb	w19, [sp, #569]
  43c0d4:	cbz	w19, 43d2e0 <argp_parse@@Base+0x9ba0>
  43c0d8:	ldr	x0, [sp, #136]
  43c0dc:	cbz	x0, 43d2a8 <argp_parse@@Base+0x9b68>
  43c0e0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43c0e4:	add	x1, x1, #0xb90
  43c0e8:	ldr	x0, [sp, #136]
  43c0ec:	bl	404720 <strcmp@plt>
  43c0f0:	cbnz	w0, 43d2c0 <argp_parse@@Base+0x9b80>
  43c0f4:	mov	w2, #0x5                   	// #5
  43c0f8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  43c0fc:	add	x1, x1, #0x470
  43c100:	mov	x0, #0x0                   	// #0
  43c104:	bl	4049c0 <dcgettext@plt>
  43c108:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43c10c:	ldr	x23, [sp, #144]
  43c110:	ldr	x20, [x23]
  43c114:	ldr	x22, [x23, #8]
  43c118:	mov	w2, #0x5                   	// #5
  43c11c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  43c120:	add	x1, x1, #0x4b8
  43c124:	mov	x0, #0x0                   	// #0
  43c128:	bl	4049c0 <dcgettext@plt>
  43c12c:	mov	w2, w22
  43c130:	mov	x1, x20
  43c134:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43c138:	add	x1, sp, #0xc0
  43c13c:	mov	x0, x23
  43c140:	bl	404460 <gmtime_r@plt>
  43c144:	cbz	x0, 43c180 <argp_parse@@Base+0x8a40>
  43c148:	mov	w2, #0x5                   	// #5
  43c14c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  43c150:	add	x1, x1, #0x4e0
  43c154:	mov	x0, #0x0                   	// #0
  43c158:	bl	4049c0 <dcgettext@plt>
  43c15c:	mov	x20, x0
  43c160:	mov	w3, #0x64                  	// #100
  43c164:	add	x2, sp, #0x328
  43c168:	mov	x1, #0x0                   	// #0
  43c16c:	add	x0, sp, #0xc0
  43c170:	bl	43a80c <argp_parse@@Base+0x70cc>
  43c174:	mov	x1, x0
  43c178:	mov	x0, x20
  43c17c:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43c180:	add	x2, sp, #0xf8
  43c184:	ldr	x1, [sp, #144]
  43c188:	mov	x0, x21
  43c18c:	bl	44e074 <_obstack_memory_used@@Base+0xced8>
  43c190:	cbz	x0, 43c224 <argp_parse@@Base+0x8ae4>
  43c194:	ldr	x23, [sp, #288]
  43c198:	mov	w2, #0x5                   	// #5
  43c19c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  43c1a0:	add	x1, x1, #0x4f8
  43c1a4:	mov	x0, #0x0                   	// #0
  43c1a8:	bl	4049c0 <dcgettext@plt>
  43c1ac:	mov	x20, x0
  43c1b0:	mov	w3, #0x64                  	// #100
  43c1b4:	add	x2, sp, #0x328
  43c1b8:	mov	x1, #0x0                   	// #0
  43c1bc:	add	x0, sp, #0xf8
  43c1c0:	bl	43a80c <argp_parse@@Base+0x70cc>
  43c1c4:	mov	x22, x0
  43c1c8:	add	x1, sp, #0x390
  43c1cc:	mov	w0, w23
  43c1d0:	bl	43a108 <argp_parse@@Base+0x69c8>
  43c1d4:	mov	x2, x0
  43c1d8:	mov	x1, x22
  43c1dc:	mov	x0, x20
  43c1e0:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43c1e4:	b	43c224 <argp_parse@@Base+0x8ae4>
  43c1e8:	ldrb	w19, [sp, #569]
  43c1ec:	cbz	w19, 43c224 <argp_parse@@Base+0x8ae4>
  43c1f0:	ldr	x0, [sp, #152]
  43c1f4:	add	x26, x26, x0
  43c1f8:	ldr	x0, [sp, #352]
  43c1fc:	cmp	x0, x26
  43c200:	b.cc	43c260 <argp_parse@@Base+0x8b20>  // b.lo, b.ul, b.last
  43c204:	mov	w2, #0x5                   	// #5
  43c208:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43c20c:	add	x1, x1, #0xae8
  43c210:	mov	x0, #0x0                   	// #0
  43c214:	bl	4049c0 <dcgettext@plt>
  43c218:	ldr	x1, [sp, #352]
  43c21c:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43c220:	mov	w19, #0x0                   	// #0
  43c224:	cmp	x21, x25
  43c228:	b.eq	43c234 <argp_parse@@Base+0x8af4>  // b.none
  43c22c:	mov	x0, x21
  43c230:	bl	44defc <_obstack_memory_used@@Base+0xcd60>
  43c234:	mov	x0, x27
  43c238:	bl	4047c0 <free@plt>
  43c23c:	mov	w0, w19
  43c240:	ldp	x19, x20, [sp, #48]
  43c244:	ldp	x21, x22, [sp, #64]
  43c248:	ldp	x23, x24, [sp, #80]
  43c24c:	ldp	x25, x26, [sp, #96]
  43c250:	ldp	x27, x28, [sp, #112]
  43c254:	ldp	x29, x30, [sp, #32]
  43c258:	add	sp, sp, #0x420
  43c25c:	ret
  43c260:	mov	w2, #0x5                   	// #5
  43c264:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43c268:	add	x1, x1, #0xb00
  43c26c:	mov	x0, #0x0                   	// #0
  43c270:	bl	4049c0 <dcgettext@plt>
  43c274:	b	43c218 <argp_parse@@Base+0x8ad8>
  43c278:	mov	w2, #0x5                   	// #5
  43c27c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43c280:	add	x1, x1, #0xb28
  43c284:	mov	x0, #0x0                   	// #0
  43c288:	bl	4049c0 <dcgettext@plt>
  43c28c:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43c290:	ldrb	w0, [sp, #512]
  43c294:	cbnz	w0, 43c2e4 <argp_parse@@Base+0x8ba4>
  43c298:	ldr	x0, [sp, #560]
  43c29c:	cbnz	x0, 43c364 <argp_parse@@Base+0x8c24>
  43c2a0:	ldr	x22, [sp, #136]
  43c2a4:	cbz	x22, 43c40c <argp_parse@@Base+0x8ccc>
  43c2a8:	cmp	x25, x21
  43c2ac:	b.eq	43c394 <argp_parse@@Base+0x8c54>  // b.none
  43c2b0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43c2b4:	ldr	x19, [x0, #1096]
  43c2b8:	mov	w2, #0x5                   	// #5
  43c2bc:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43c2c0:	add	x1, x1, #0xb78
  43c2c4:	mov	x0, #0x0                   	// #0
  43c2c8:	bl	4049c0 <dcgettext@plt>
  43c2cc:	mov	x3, x22
  43c2d0:	mov	x2, x0
  43c2d4:	mov	w1, #0x1                   	// #1
  43c2d8:	mov	x0, x19
  43c2dc:	bl	404710 <__fprintf_chk@plt>
  43c2e0:	b	43c310 <argp_parse@@Base+0x8bd0>
  43c2e4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43c2e8:	ldr	x19, [x0, #1096]
  43c2ec:	mov	w2, #0x5                   	// #5
  43c2f0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43c2f4:	add	x1, x1, #0xb40
  43c2f8:	mov	x0, #0x0                   	// #0
  43c2fc:	bl	4049c0 <dcgettext@plt>
  43c300:	mov	x2, x0
  43c304:	mov	w1, #0x1                   	// #1
  43c308:	mov	x0, x19
  43c30c:	bl	404710 <__fprintf_chk@plt>
  43c310:	ldr	x0, [sp, #536]
  43c314:	cbz	x0, 43c348 <argp_parse@@Base+0x8c08>
  43c318:	ldr	x0, [sp, #560]
  43c31c:	cbnz	x0, 43c43c <argp_parse@@Base+0x8cfc>
  43c320:	ldr	w0, [sp, #372]
  43c324:	cmp	w0, #0x0
  43c328:	b.le	43c350 <argp_parse@@Base+0x8c10>
  43c32c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43c330:	ldr	x3, [x0, #1096]
  43c334:	mov	x2, #0x5                   	// #5
  43c338:	mov	x1, #0x1                   	// #1
  43c33c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43c340:	add	x0, x0, #0xbf0
  43c344:	bl	4048b0 <fwrite@plt>
  43c348:	ldr	x0, [sp, #560]
  43c34c:	cbnz	x0, 43c43c <argp_parse@@Base+0x8cfc>
  43c350:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43c354:	ldr	x1, [x0, #1096]
  43c358:	mov	w0, #0xa                   	// #10
  43c35c:	bl	404170 <fputc@plt>
  43c360:	b	43c0b8 <argp_parse@@Base+0x8978>
  43c364:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43c368:	ldr	x19, [x0, #1096]
  43c36c:	mov	w2, #0x5                   	// #5
  43c370:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43c374:	add	x1, x1, #0xb60
  43c378:	mov	x0, #0x0                   	// #0
  43c37c:	bl	4049c0 <dcgettext@plt>
  43c380:	mov	x2, x0
  43c384:	mov	w1, #0x1                   	// #1
  43c388:	mov	x0, x19
  43c38c:	bl	404710 <__fprintf_chk@plt>
  43c390:	b	43c310 <argp_parse@@Base+0x8bd0>
  43c394:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43c398:	add	x1, x1, #0xb90
  43c39c:	ldr	x0, [sp, #136]
  43c3a0:	bl	404720 <strcmp@plt>
  43c3a4:	cbnz	w0, 43c3d8 <argp_parse@@Base+0x8c98>
  43c3a8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43c3ac:	ldr	x19, [x0, #1096]
  43c3b0:	mov	w2, #0x5                   	// #5
  43c3b4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43c3b8:	add	x1, x1, #0xb98
  43c3bc:	mov	x0, #0x0                   	// #0
  43c3c0:	bl	4049c0 <dcgettext@plt>
  43c3c4:	mov	x2, x0
  43c3c8:	mov	w1, #0x1                   	// #1
  43c3cc:	mov	x0, x19
  43c3d0:	bl	404710 <__fprintf_chk@plt>
  43c3d4:	b	43c310 <argp_parse@@Base+0x8bd0>
  43c3d8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43c3dc:	ldr	x19, [x0, #1096]
  43c3e0:	mov	w2, #0x5                   	// #5
  43c3e4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43c3e8:	add	x1, x1, #0xbc0
  43c3ec:	mov	x0, #0x0                   	// #0
  43c3f0:	bl	4049c0 <dcgettext@plt>
  43c3f4:	ldr	x3, [sp, #136]
  43c3f8:	mov	x2, x0
  43c3fc:	mov	w1, #0x1                   	// #1
  43c400:	mov	x0, x19
  43c404:	bl	404710 <__fprintf_chk@plt>
  43c408:	b	43c310 <argp_parse@@Base+0x8bd0>
  43c40c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43c410:	ldr	x19, [x0, #1096]
  43c414:	mov	w2, #0x5                   	// #5
  43c418:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43c41c:	add	x1, x1, #0xbe0
  43c420:	mov	x0, #0x0                   	// #0
  43c424:	bl	4049c0 <dcgettext@plt>
  43c428:	mov	x2, x0
  43c42c:	mov	w1, #0x1                   	// #1
  43c430:	mov	x0, x19
  43c434:	bl	404710 <__fprintf_chk@plt>
  43c438:	b	43c310 <argp_parse@@Base+0x8bd0>
  43c43c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43c440:	ldr	x19, [x0, #1096]
  43c444:	add	x1, sp, #0x390
  43c448:	ldr	w0, [sp, #376]
  43c44c:	bl	43a108 <argp_parse@@Base+0x69c8>
  43c450:	mov	x3, x0
  43c454:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43c458:	add	x2, x2, #0xbf8
  43c45c:	mov	w1, #0x1                   	// #1
  43c460:	mov	x0, x19
  43c464:	bl	404710 <__fprintf_chk@plt>
  43c468:	b	43c350 <argp_parse@@Base+0x8c10>
  43c46c:	ldr	x2, [sp, #552]
  43c470:	ldr	x0, [sp, #528]
  43c474:	ldr	x1, [sp, #544]
  43c478:	orr	x0, x0, x1
  43c47c:	ldr	x1, [sp, #520]
  43c480:	orr	x1, x2, x1
  43c484:	orr	x0, x0, x1
  43c488:	ldr	x1, [sp, #536]
  43c48c:	ldr	x3, [sp, #560]
  43c490:	add	x1, x1, x3
  43c494:	orr	x0, x0, x1
  43c498:	cmp	x0, #0x1
  43c49c:	b.le	43c538 <argp_parse@@Base+0x8df8>
  43c4a0:	ldrb	w0, [sp, #569]
  43c4a4:	cbz	w0, 43c224 <argp_parse@@Base+0x8ae4>
  43c4a8:	cmp	x2, #0x1
  43c4ac:	b.gt	43c4f8 <argp_parse@@Base+0x8db8>
  43c4b0:	ldr	x0, [sp, #520]
  43c4b4:	cmp	x0, #0x1
  43c4b8:	b.gt	43c508 <argp_parse@@Base+0x8dc8>
  43c4bc:	ldr	x0, [sp, #528]
  43c4c0:	cmp	x0, #0x1
  43c4c4:	b.gt	43c518 <argp_parse@@Base+0x8dd8>
  43c4c8:	ldr	x0, [sp, #544]
  43c4cc:	cmp	x0, #0x1
  43c4d0:	b.gt	43c528 <argp_parse@@Base+0x8de8>
  43c4d4:	ldr	x0, [sp, #536]
  43c4d8:	ldr	x1, [sp, #560]
  43c4dc:	add	x0, x0, x1
  43c4e0:	cmp	x0, #0x1
  43c4e4:	b.le	43c224 <argp_parse@@Base+0x8ae4>
  43c4e8:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43c4ec:	add	x0, x0, #0xca8
  43c4f0:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43c4f4:	b	43c224 <argp_parse@@Base+0x8ae4>
  43c4f8:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43c4fc:	add	x0, x0, #0xc00
  43c500:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43c504:	b	43c4b0 <argp_parse@@Base+0x8d70>
  43c508:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43c50c:	add	x0, x0, #0xc28
  43c510:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43c514:	b	43c4bc <argp_parse@@Base+0x8d7c>
  43c518:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43c51c:	add	x0, x0, #0xc50
  43c520:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43c524:	b	43c4c8 <argp_parse@@Base+0x8d88>
  43c528:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43c52c:	add	x0, x0, #0xc78
  43c530:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43c534:	b	43c4d4 <argp_parse@@Base+0x8d94>
  43c538:	ldrb	w23, [sp, #569]
  43c53c:	ldr	x22, [sp, #392]
  43c540:	tbnz	x22, #63, 43c690 <argp_parse@@Base+0x8f50>
  43c544:	ldr	x0, [sp, #400]
  43c548:	cmp	x0, #0x2
  43c54c:	b.eq	43c654 <argp_parse@@Base+0x8f14>  // b.none
  43c550:	mov	w1, #0x0                   	// #0
  43c554:	sub	x0, x22, #0x76c
  43c558:	cmp	x22, #0x76c
  43c55c:	b.cs	43c6a8 <argp_parse@@Base+0x8f68>  // b.hs, b.nlast
  43c560:	tbz	x0, #63, 43c6ac <argp_parse@@Base+0x8f6c>
  43c564:	cmp	x0, w0, sxtw
  43c568:	csinc	w1, w1, wzr, eq  // eq = none
  43c56c:	and	w1, w1, #0x1
  43c570:	str	w0, [sp, #1020]
  43c574:	cbnz	w1, 43c6b4 <argp_parse@@Base+0x8f74>
  43c578:	ldr	x0, [sp, #408]
  43c57c:	subs	x0, x0, #0x1
  43c580:	cset	w1, vs
  43c584:	cmp	x0, w0, sxtw
  43c588:	str	w0, [sp, #1016]
  43c58c:	csinc	w0, w1, wzr, eq  // eq = none
  43c590:	cbnz	w0, 43c6b8 <argp_parse@@Base+0x8f78>
  43c594:	ldr	x0, [sp, #416]
  43c598:	str	w0, [sp, #1012]
  43c59c:	cmp	x0, w0, sxtw
  43c5a0:	b.ne	43c6b8 <argp_parse@@Base+0x8f78>  // b.any
  43c5a4:	ldr	x2, [sp, #552]
  43c5a8:	cbnz	x2, 43c5c4 <argp_parse@@Base+0x8e84>
  43c5ac:	ldrb	w0, [sp, #513]
  43c5b0:	cbz	w0, 43c7a4 <argp_parse@@Base+0x9064>
  43c5b4:	ldr	x0, [sp, #520]
  43c5b8:	cbnz	x0, 43c7a4 <argp_parse@@Base+0x9064>
  43c5bc:	ldr	x0, [sp, #528]
  43c5c0:	cbnz	x0, 43d3e4 <argp_parse@@Base+0x9ca4>
  43c5c4:	ldr	x0, [sp, #424]
  43c5c8:	ldr	w1, [sp, #380]
  43c5cc:	cbz	w1, 43c6fc <argp_parse@@Base+0x8fbc>
  43c5d0:	cmp	w1, #0x1
  43c5d4:	b.eq	43c754 <argp_parse@@Base+0x9014>  // b.none
  43c5d8:	cmp	x0, #0x17
  43c5dc:	b.hi	43d3d0 <argp_parse@@Base+0x9c90>  // b.pmore
  43c5e0:	mov	w1, w0
  43c5e4:	str	w1, [sp, #1008]
  43c5e8:	ldr	x0, [sp, #432]
  43c5ec:	str	w0, [sp, #1004]
  43c5f0:	ldr	x0, [sp, #440]
  43c5f4:	str	w0, [sp, #1000]
  43c5f8:	ldrb	w0, [sp, #569]
  43c5fc:	cbz	w0, 43c7bc <argp_parse@@Base+0x907c>
  43c600:	cbz	x2, 43c788 <argp_parse@@Base+0x9048>
  43c604:	mov	w2, #0x5                   	// #5
  43c608:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43c60c:	add	x1, x1, #0xd68
  43c610:	mov	x0, #0x0                   	// #0
  43c614:	bl	4049c0 <dcgettext@plt>
  43c618:	mov	x22, x0
  43c61c:	ldr	w7, [sp, #1000]
  43c620:	ldr	w6, [sp, #1004]
  43c624:	ldr	w5, [sp, #1008]
  43c628:	adrp	x4, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43c62c:	add	x4, x4, #0xdc8
  43c630:	mov	x3, #0x64                  	// #100
  43c634:	mov	w2, #0x1                   	// #1
  43c638:	mov	x1, x3
  43c63c:	add	x0, sp, #0x328
  43c640:	bl	404290 <__snprintf_chk@plt>
  43c644:	add	x1, sp, #0x328
  43c648:	mov	x0, x22
  43c64c:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43c650:	b	43c7bc <argp_parse@@Base+0x907c>
  43c654:	cmp	x22, #0x44
  43c658:	b.le	43d40c <argp_parse@@Base+0x9ccc>
  43c65c:	add	x24, x22, #0x76c
  43c660:	cbnz	w23, 43c66c <argp_parse@@Base+0x8f2c>
  43c664:	mov	x22, x24
  43c668:	b	43c550 <argp_parse@@Base+0x8e10>
  43c66c:	mov	w2, #0x5                   	// #5
  43c670:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43c674:	add	x1, x1, #0xcd0
  43c678:	mov	x0, #0x0                   	// #0
  43c67c:	bl	4049c0 <dcgettext@plt>
  43c680:	mov	x2, x24
  43c684:	mov	x1, x22
  43c688:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43c68c:	b	43c664 <argp_parse@@Base+0x8f24>
  43c690:	mov	x0, #0xfffffffffffff894    	// #-1900
  43c694:	subs	x0, x0, x22
  43c698:	cset	w1, vs
  43c69c:	cmp	x0, w0, sxtw
  43c6a0:	csinc	w1, w1, wzr, eq  // eq = none
  43c6a4:	b	43c570 <argp_parse@@Base+0x8e30>
  43c6a8:	tbz	x0, #63, 43c564 <argp_parse@@Base+0x8e24>
  43c6ac:	mov	w1, #0x1                   	// #1
  43c6b0:	b	43c564 <argp_parse@@Base+0x8e24>
  43c6b4:	cbnz	w23, 43c6dc <argp_parse@@Base+0x8f9c>
  43c6b8:	ldrb	w0, [sp, #569]
  43c6bc:	cbz	w0, 43c224 <argp_parse@@Base+0x8ae4>
  43c6c0:	mov	w2, #0x5                   	// #5
  43c6c4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43c6c8:	add	x1, x1, #0xd20
  43c6cc:	mov	x0, #0x0                   	// #0
  43c6d0:	bl	4049c0 <dcgettext@plt>
  43c6d4:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43c6d8:	b	43c224 <argp_parse@@Base+0x8ae4>
  43c6dc:	mov	w2, #0x5                   	// #5
  43c6e0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43c6e4:	add	x1, x1, #0xd00
  43c6e8:	mov	x0, #0x0                   	// #0
  43c6ec:	bl	4049c0 <dcgettext@plt>
  43c6f0:	mov	x1, x22
  43c6f4:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43c6f8:	b	43c6b8 <argp_parse@@Base+0x8f78>
  43c6fc:	sub	x1, x0, #0x1
  43c700:	cmp	x1, #0xa
  43c704:	b.ls	43c74c <argp_parse@@Base+0x900c>  // b.plast
  43c708:	cmp	x0, #0xc
  43c70c:	csetm	w1, ne  // ne = any
  43c710:	str	w1, [sp, #1008]
  43c714:	adrp	x22, 45a000 <_obstack_memory_used@@Base+0x18e64>
  43c718:	add	x22, x22, #0x28
  43c71c:	b.eq	43c5e8 <argp_parse@@Base+0x8ea8>  // b.none
  43c720:	ldrb	w0, [sp, #569]
  43c724:	cbz	w0, 43c224 <argp_parse@@Base+0x8ae4>
  43c728:	mov	w2, #0x5                   	// #5
  43c72c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43c730:	add	x1, x1, #0xd48
  43c734:	mov	x0, #0x0                   	// #0
  43c738:	bl	4049c0 <dcgettext@plt>
  43c73c:	mov	x2, x22
  43c740:	ldr	x1, [sp, #424]
  43c744:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43c748:	b	43c224 <argp_parse@@Base+0x8ae4>
  43c74c:	mov	w1, w0
  43c750:	b	43c5e4 <argp_parse@@Base+0x8ea4>
  43c754:	sub	x1, x0, #0x1
  43c758:	cmp	x1, #0xa
  43c75c:	b.hi	43c768 <argp_parse@@Base+0x9028>  // b.pmore
  43c760:	add	w1, w0, #0xc
  43c764:	b	43c5e4 <argp_parse@@Base+0x8ea4>
  43c768:	mov	w1, #0xc                   	// #12
  43c76c:	cmp	x0, #0xc
  43c770:	b.eq	43c5e4 <argp_parse@@Base+0x8ea4>  // b.none
  43c774:	mov	w0, #0xffffffff            	// #-1
  43c778:	str	w0, [sp, #1008]
  43c77c:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43c780:	add	x22, x22, #0x8c8
  43c784:	b	43c720 <argp_parse@@Base+0x8fe0>
  43c788:	mov	w2, #0x5                   	// #5
  43c78c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43c790:	add	x1, x1, #0xd98
  43c794:	mov	x0, #0x0                   	// #0
  43c798:	bl	4049c0 <dcgettext@plt>
  43c79c:	mov	x22, x0
  43c7a0:	b	43c61c <argp_parse@@Base+0x8edc>
  43c7a4:	str	wzr, [sp, #1000]
  43c7a8:	str	wzr, [sp, #1004]
  43c7ac:	str	wzr, [sp, #1008]
  43c7b0:	str	xzr, [sp, #448]
  43c7b4:	ldrb	w0, [sp, #569]
  43c7b8:	cbnz	w0, 43d3fc <argp_parse@@Base+0x9cbc>
  43c7bc:	ldr	x0, [sp, #520]
  43c7c0:	ldr	x1, [sp, #528]
  43c7c4:	orr	x0, x0, x1
  43c7c8:	ldr	x1, [sp, #552]
  43c7cc:	orr	x0, x0, x1
  43c7d0:	cbz	x0, 43c7dc <argp_parse@@Base+0x909c>
  43c7d4:	mov	w0, #0xffffffff            	// #-1
  43c7d8:	str	w0, [sp, #1032]
  43c7dc:	ldr	x0, [sp, #536]
  43c7e0:	cbz	x0, 43c7ec <argp_parse@@Base+0x90ac>
  43c7e4:	ldr	w0, [sp, #372]
  43c7e8:	str	w0, [sp, #1032]
  43c7ec:	ldr	w0, [sp, #1000]
  43c7f0:	str	w0, [sp, #944]
  43c7f4:	ldr	w0, [sp, #1004]
  43c7f8:	str	w0, [sp, #948]
  43c7fc:	ldr	w0, [sp, #1008]
  43c800:	str	w0, [sp, #952]
  43c804:	ldr	w0, [sp, #1012]
  43c808:	str	w0, [sp, #956]
  43c80c:	ldr	w0, [sp, #1016]
  43c810:	str	w0, [sp, #960]
  43c814:	ldr	w0, [sp, #1020]
  43c818:	str	w0, [sp, #964]
  43c81c:	ldr	w0, [sp, #1032]
  43c820:	str	w0, [sp, #976]
  43c824:	mov	w0, #0xffffffff            	// #-1
  43c828:	str	w0, [sp, #1024]
  43c82c:	add	x1, sp, #0x3e8
  43c830:	mov	x0, x21
  43c834:	bl	44e11c <_obstack_memory_used@@Base+0xcf80>
  43c838:	mov	x22, x0
  43c83c:	add	x1, sp, #0x3e8
  43c840:	add	x0, sp, #0x3b0
  43c844:	bl	439ee4 <argp_parse@@Base+0x67a4>
  43c848:	ands	w23, w0, #0xff
  43c84c:	b.ne	43cb70 <argp_parse@@Base+0x9430>  // b.any
  43c850:	ldr	x0, [sp, #560]
  43c854:	str	x0, [sp, #152]
  43c858:	cbnz	x0, 43cad8 <argp_parse@@Base+0x9398>
  43c85c:	ldr	w0, [sp, #944]
  43c860:	str	w0, [sp, #136]
  43c864:	ldr	w1, [sp, #1000]
  43c868:	str	w1, [sp, #144]
  43c86c:	ldr	w2, [sp, #948]
  43c870:	str	w2, [sp, #164]
  43c874:	ldr	w3, [sp, #1004]
  43c878:	str	w3, [sp, #168]
  43c87c:	ldr	w4, [sp, #952]
  43c880:	str	w4, [sp, #172]
  43c884:	ldr	w5, [sp, #1008]
  43c888:	str	w5, [sp, #176]
  43c88c:	ldr	w20, [sp, #956]
  43c890:	ldr	w22, [sp, #1012]
  43c894:	ldr	w24, [sp, #960]
  43c898:	ldr	w26, [sp, #1016]
  43c89c:	ldr	w28, [sp, #964]
  43c8a0:	ldr	w6, [sp, #1020]
  43c8a4:	str	w6, [sp, #180]
  43c8a8:	cmp	w0, w1
  43c8ac:	ccmp	w2, w3, #0x0, eq  // eq = none
  43c8b0:	b.ne	43c8cc <argp_parse@@Base+0x918c>  // b.any
  43c8b4:	cmp	w20, w22
  43c8b8:	ccmp	w4, w5, #0x4, eq  // eq = none
  43c8bc:	b.eq	43c8cc <argp_parse@@Base+0x918c>  // b.none
  43c8c0:	cmp	w24, w26
  43c8c4:	ccmp	w28, w6, #0x0, eq  // eq = none
  43c8c8:	b.eq	43d2f8 <argp_parse@@Base+0x9bb8>  // b.none
  43c8cc:	ldrb	w0, [sp, #569]
  43c8d0:	cbz	w0, 43c224 <argp_parse@@Base+0x8ae4>
  43c8d4:	mov	w2, #0x5                   	// #5
  43c8d8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43c8dc:	add	x1, x1, #0xe30
  43c8e0:	mov	x0, #0x0                   	// #0
  43c8e4:	bl	4049c0 <dcgettext@plt>
  43c8e8:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43c8ec:	mov	w2, #0x5                   	// #5
  43c8f0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43c8f4:	add	x1, x1, #0xe58
  43c8f8:	mov	x0, #0x0                   	// #0
  43c8fc:	bl	4049c0 <dcgettext@plt>
  43c900:	str	x0, [sp, #184]
  43c904:	mov	w3, #0x64                  	// #100
  43c908:	add	x2, sp, #0xf8
  43c90c:	add	x1, sp, #0x160
  43c910:	add	x0, sp, #0x3b0
  43c914:	bl	43a80c <argp_parse@@Base+0x70cc>
  43c918:	mov	x1, x0
  43c91c:	ldr	x0, [sp, #184]
  43c920:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43c924:	mov	w2, #0x5                   	// #5
  43c928:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43c92c:	add	x1, x1, #0xe78
  43c930:	mov	x0, #0x0                   	// #0
  43c934:	bl	4049c0 <dcgettext@plt>
  43c938:	str	x0, [sp, #184]
  43c93c:	mov	w3, #0x64                  	// #100
  43c940:	add	x2, sp, #0xf8
  43c944:	add	x1, sp, #0x160
  43c948:	add	x0, sp, #0x3e8
  43c94c:	bl	43a80c <argp_parse@@Base+0x70cc>
  43c950:	mov	x1, x0
  43c954:	ldr	x0, [sp, #184]
  43c958:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43c95c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43c960:	add	x0, x0, #0xad8
  43c964:	adrp	x5, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  43c968:	add	x5, x5, #0x7f8
  43c96c:	ldr	w1, [sp, #180]
  43c970:	cmp	w28, w1
  43c974:	csel	x5, x5, x0, eq  // eq = none
  43c978:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  43c97c:	add	x0, x0, #0xf58
  43c980:	adrp	x6, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  43c984:	add	x6, x6, #0x7f8
  43c988:	cmp	w24, w26
  43c98c:	csel	x6, x6, x0, eq  // eq = none
  43c990:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  43c994:	add	x0, x0, #0xf58
  43c998:	adrp	x7, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  43c99c:	add	x7, x7, #0x7f8
  43c9a0:	cmp	w20, w22
  43c9a4:	csel	x7, x7, x0, eq  // eq = none
  43c9a8:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  43c9ac:	add	x1, x0, #0xf58
  43c9b0:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  43c9b4:	add	x0, x0, #0x7f8
  43c9b8:	ldr	w2, [sp, #172]
  43c9bc:	ldr	w3, [sp, #176]
  43c9c0:	cmp	w2, w3
  43c9c4:	csel	x0, x0, x1, eq  // eq = none
  43c9c8:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  43c9cc:	add	x2, x1, #0xf58
  43c9d0:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  43c9d4:	add	x1, x1, #0x7f8
  43c9d8:	ldr	w3, [sp, #164]
  43c9dc:	ldr	w4, [sp, #168]
  43c9e0:	cmp	w3, w4
  43c9e4:	csel	x1, x1, x2, eq  // eq = none
  43c9e8:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x18e64>
  43c9ec:	add	x3, x2, #0xf58
  43c9f0:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  43c9f4:	add	x2, x2, #0x7f8
  43c9f8:	ldr	w4, [sp, #136]
  43c9fc:	ldr	w8, [sp, #144]
  43ca00:	cmp	w4, w8
  43ca04:	csel	x2, x2, x3, eq  // eq = none
  43ca08:	str	x2, [sp, #16]
  43ca0c:	str	x1, [sp, #8]
  43ca10:	str	x0, [sp]
  43ca14:	adrp	x4, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43ca18:	add	x4, x4, #0xe98
  43ca1c:	mov	x3, #0x64                  	// #100
  43ca20:	mov	w2, #0x1                   	// #1
  43ca24:	mov	x1, x3
  43ca28:	add	x0, sp, #0xf8
  43ca2c:	bl	404290 <__snprintf_chk@plt>
  43ca30:	mov	x0, #0x34                  	// #52
  43ca34:	add	x1, sp, #0xf8
  43ca38:	mov	w2, w0
  43ca3c:	cmp	w0, #0x0
  43ca40:	b.le	43ca54 <argp_parse@@Base+0x9314>
  43ca44:	sub	x0, x0, #0x1
  43ca48:	ldrb	w3, [x0, x1]
  43ca4c:	cmp	w3, #0x20
  43ca50:	b.eq	43ca38 <argp_parse@@Base+0x92f8>  // b.none
  43ca54:	add	x1, sp, #0xf8
  43ca58:	strb	wzr, [x1, w2, sxtw]
  43ca5c:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43ca60:	add	x0, x0, #0xbc8
  43ca64:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43ca68:	mov	w2, #0x5                   	// #5
  43ca6c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43ca70:	add	x1, x1, #0xed8
  43ca74:	mov	x0, #0x0                   	// #0
  43ca78:	bl	4049c0 <dcgettext@plt>
  43ca7c:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43ca80:	cbnz	w23, 43ccb0 <argp_parse@@Base+0x9570>
  43ca84:	cmp	w20, w22
  43ca88:	ccmp	w24, w26, #0x4, ne  // ne = any
  43ca8c:	b.ne	43cccc <argp_parse@@Base+0x958c>  // b.any
  43ca90:	mov	w2, #0x5                   	// #5
  43ca94:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43ca98:	add	x1, x1, #0xf50
  43ca9c:	mov	x0, #0x0                   	// #0
  43caa0:	bl	4049c0 <dcgettext@plt>
  43caa4:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43caa8:	ldr	x0, [sp, #152]
  43caac:	cbz	x0, 43cce8 <argp_parse@@Base+0x95a8>
  43cab0:	mov	w2, #0x5                   	// #5
  43cab4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43cab8:	add	x1, x1, #0xf78
  43cabc:	mov	x0, #0x0                   	// #0
  43cac0:	bl	4049c0 <dcgettext@plt>
  43cac4:	mov	x1, x0
  43cac8:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43cacc:	add	x0, x0, #0xfa8
  43cad0:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43cad4:	b	43c224 <argp_parse@@Base+0x8ae4>
  43cad8:	mov	w0, #0x58                  	// #88
  43cadc:	strb	w0, [sp, #250]
  43cae0:	strb	w0, [sp, #249]
  43cae4:	strb	w0, [sp, #248]
  43cae8:	add	x1, sp, #0xfb
  43caec:	ldr	w0, [sp, #376]
  43caf0:	bl	43a108 <argp_parse@@Base+0x69c8>
  43caf4:	add	x0, sp, #0xf8
  43caf8:	bl	44dcf0 <_obstack_memory_used@@Base+0xcb54>
  43cafc:	mov	x26, x0
  43cb00:	cbz	x0, 43cc88 <argp_parse@@Base+0x9548>
  43cb04:	ldr	w0, [sp, #944]
  43cb08:	str	w0, [sp, #1000]
  43cb0c:	ldr	w0, [sp, #948]
  43cb10:	str	w0, [sp, #1004]
  43cb14:	ldr	w0, [sp, #952]
  43cb18:	str	w0, [sp, #1008]
  43cb1c:	ldr	w0, [sp, #956]
  43cb20:	str	w0, [sp, #1012]
  43cb24:	ldr	w0, [sp, #960]
  43cb28:	str	w0, [sp, #1016]
  43cb2c:	ldr	w0, [sp, #964]
  43cb30:	str	w0, [sp, #1020]
  43cb34:	ldr	w0, [sp, #976]
  43cb38:	str	w0, [sp, #1032]
  43cb3c:	mov	w0, #0xffffffff            	// #-1
  43cb40:	str	w0, [sp, #1024]
  43cb44:	add	x1, sp, #0x3e8
  43cb48:	mov	x0, x26
  43cb4c:	bl	44e11c <_obstack_memory_used@@Base+0xcf80>
  43cb50:	mov	x22, x0
  43cb54:	add	x1, sp, #0x3e8
  43cb58:	add	x0, sp, #0x3b0
  43cb5c:	bl	439ee4 <argp_parse@@Base+0x67a4>
  43cb60:	and	w24, w0, #0xff
  43cb64:	mov	x0, x26
  43cb68:	bl	44defc <_obstack_memory_used@@Base+0xcd60>
  43cb6c:	cbz	w24, 43c85c <argp_parse@@Base+0x911c>
  43cb70:	ldr	x0, [sp, #528]
  43cb74:	cbz	x0, 43cee8 <argp_parse@@Base+0x97a8>
  43cb78:	ldr	x0, [sp, #520]
  43cb7c:	cbnz	x0, 43d554 <argp_parse@@Base+0x9e14>
  43cb80:	ldr	x0, [sp, #360]
  43cb84:	cmp	x0, #0x0
  43cb88:	b.le	43cb9c <argp_parse@@Base+0x945c>
  43cb8c:	ldr	w2, [sp, #1024]
  43cb90:	ldr	w1, [sp, #368]
  43cb94:	cmp	w2, w1
  43cb98:	cset	w20, ne  // ne = any
  43cb9c:	sub	x20, x0, w20, sxtw
  43cba0:	asr	x2, x20, #63
  43cba4:	extr	x1, x2, x20, #61
  43cba8:	lsl	x0, x20, #3
  43cbac:	subs	x20, x0, x20
  43cbb0:	sbc	x0, x1, x2
  43cbb4:	cmp	x0, x20, asr #63
  43cbb8:	b.ne	43cc1c <argp_parse@@Base+0x94dc>  // b.any
  43cbbc:	ldr	w0, [sp, #368]
  43cbc0:	ldr	w1, [sp, #1024]
  43cbc4:	sub	w0, w0, w1
  43cbc8:	add	w0, w0, #0x7
  43cbcc:	mov	w1, #0x2493                	// #9363
  43cbd0:	movk	w1, #0x9249, lsl #16
  43cbd4:	smull	x1, w0, w1
  43cbd8:	lsr	x1, x1, #32
  43cbdc:	add	w1, w0, w1
  43cbe0:	asr	w1, w1, #2
  43cbe4:	sub	w1, w1, w0, asr #31
  43cbe8:	lsl	w3, w1, #3
  43cbec:	sub	w1, w3, w1
  43cbf0:	sub	w0, w0, w1
  43cbf4:	sxtw	x0, w0
  43cbf8:	adds	x0, x0, x20
  43cbfc:	b.vs	43cc1c <argp_parse@@Base+0x94dc>
  43cc00:	ldrsw	x1, [sp, #1012]
  43cc04:	adds	x0, x0, x1
  43cc08:	cset	w1, vs
  43cc0c:	cmp	x0, w0, sxtw
  43cc10:	str	w0, [sp, #1012]
  43cc14:	csinc	w0, w1, wzr, eq  // eq = none
  43cc18:	cbz	w0, 43cd04 <argp_parse@@Base+0x95c4>
  43cc1c:	ldrb	w0, [sp, #569]
  43cc20:	cbz	w0, 43c224 <argp_parse@@Base+0x8ae4>
  43cc24:	mov	w2, #0x5                   	// #5
  43cc28:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43cc2c:	add	x1, x1, #0xfb8
  43cc30:	mov	x0, #0x0                   	// #0
  43cc34:	bl	4049c0 <dcgettext@plt>
  43cc38:	mov	x20, x0
  43cc3c:	mov	w2, #0x64                  	// #100
  43cc40:	add	x1, sp, #0xf8
  43cc44:	add	x0, sp, #0x160
  43cc48:	bl	43a010 <argp_parse@@Base+0x68d0>
  43cc4c:	mov	x22, x0
  43cc50:	ldr	x23, [sp, #360]
  43cc54:	ldr	w24, [sp, #368]
  43cc58:	mov	w3, #0x64                  	// #100
  43cc5c:	add	x2, sp, #0x328
  43cc60:	add	x1, sp, #0x160
  43cc64:	add	x0, sp, #0x3e8
  43cc68:	bl	43a80c <argp_parse@@Base+0x70cc>
  43cc6c:	mov	x4, x0
  43cc70:	mov	w3, w24
  43cc74:	mov	x2, x23
  43cc78:	mov	x1, x22
  43cc7c:	mov	x0, x20
  43cc80:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43cc84:	b	43c224 <argp_parse@@Base+0x8ae4>
  43cc88:	ldrb	w0, [sp, #569]
  43cc8c:	cbz	w0, 43c224 <argp_parse@@Base+0x8ae4>
  43cc90:	mov	w2, #0x5                   	// #5
  43cc94:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43cc98:	add	x1, x1, #0xe10
  43cc9c:	mov	x0, #0x0                   	// #0
  43cca0:	bl	4049c0 <dcgettext@plt>
  43cca4:	add	x1, sp, #0xf8
  43cca8:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43ccac:	b	43c224 <argp_parse@@Base+0x8ae4>
  43ccb0:	mov	w2, #0x5                   	// #5
  43ccb4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43ccb8:	add	x1, x1, #0xef0
  43ccbc:	mov	x0, #0x0                   	// #0
  43ccc0:	bl	4049c0 <dcgettext@plt>
  43ccc4:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43ccc8:	b	43ca84 <argp_parse@@Base+0x9344>
  43cccc:	mov	w2, #0x5                   	// #5
  43ccd0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43ccd4:	add	x1, x1, #0xf28
  43ccd8:	mov	x0, #0x0                   	// #0
  43ccdc:	bl	4049c0 <dcgettext@plt>
  43cce0:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43cce4:	b	43ca90 <argp_parse@@Base+0x9350>
  43cce8:	mov	w2, #0x5                   	// #5
  43ccec:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43ccf0:	add	x1, x1, #0xf90
  43ccf4:	mov	x0, #0x0                   	// #0
  43ccf8:	bl	4049c0 <dcgettext@plt>
  43ccfc:	mov	x1, x0
  43cd00:	b	43cac8 <argp_parse@@Base+0x9388>
  43cd04:	mov	w0, #0xffffffff            	// #-1
  43cd08:	str	w0, [sp, #1032]
  43cd0c:	add	x1, sp, #0x3e8
  43cd10:	mov	x0, x21
  43cd14:	bl	44e11c <_obstack_memory_used@@Base+0xcf80>
  43cd18:	mov	x22, x0
  43cd1c:	cmn	x0, #0x1
  43cd20:	b.eq	43cc1c <argp_parse@@Base+0x94dc>  // b.none
  43cd24:	ldrb	w0, [sp, #569]
  43cd28:	cbnz	w0, 43ce98 <argp_parse@@Base+0x9758>
  43cd2c:	ldr	x0, [sp, #456]
  43cd30:	ldr	x1, [sp, #464]
  43cd34:	orr	x1, x0, x1
  43cd38:	ldr	x2, [sp, #472]
  43cd3c:	orr	x1, x1, x2
  43cd40:	cbnz	x1, 43d398 <argp_parse@@Base+0x9c58>
  43cd44:	ldr	x0, [sp, #560]
  43cd48:	cbnz	x0, 43d1e8 <argp_parse@@Base+0x9aa8>
  43cd4c:	ldrb	w0, [sp, #569]
  43cd50:	cbnz	w0, 43d22c <argp_parse@@Base+0x9aec>
  43cd54:	ldr	x1, [sp, #480]
  43cd58:	mov	x0, #0xe10                 	// #3600
  43cd5c:	mul	x3, x1, x0
  43cd60:	smulh	x2, x1, x0
  43cd64:	mov	x0, x3
  43cd68:	cmp	x2, x3, asr #63
  43cd6c:	b.ne	43c224 <argp_parse@@Base+0x8ae4>  // b.any
  43cd70:	adds	x0, x22, x0
  43cd74:	b.vs	43d284 <argp_parse@@Base+0x9b44>
  43cd78:	ldr	x3, [sp, #488]
  43cd7c:	orr	x2, x3, x1
  43cd80:	mov	x1, #0x3c                  	// #60
  43cd84:	mul	x4, x3, x1
  43cd88:	smulh	x3, x3, x1
  43cd8c:	cmp	x3, x4, asr #63
  43cd90:	b.ne	43d284 <argp_parse@@Base+0x9b44>  // b.any
  43cd94:	adds	x0, x0, x4
  43cd98:	b.vs	43d284 <argp_parse@@Base+0x9b44>
  43cd9c:	ldr	x3, [sp, #496]
  43cda0:	adds	x0, x0, x3
  43cda4:	b.vs	43d284 <argp_parse@@Base+0x9b44>
  43cda8:	ldrsw	x1, [sp, #504]
  43cdac:	orr	x3, x1, x3
  43cdb0:	ldr	x4, [sp, #448]
  43cdb4:	add	x1, x1, x4
  43cdb8:	mov	x4, #0xca00                	// #51712
  43cdbc:	movk	x4, #0x3b9a, lsl #16
  43cdc0:	sdiv	x5, x1, x4
  43cdc4:	msub	x5, x5, x4, x1
  43cdc8:	add	x5, x5, x4
  43cdcc:	sdiv	x20, x5, x4
  43cdd0:	msub	x20, x20, x4, x5
  43cdd4:	sxtw	x5, w20
  43cdd8:	sub	x20, x1, w20, sxtw
  43cddc:	sdiv	x20, x20, x4
  43cde0:	sxtw	x20, w20
  43cde4:	adds	x20, x0, x20
  43cde8:	b.vs	43d284 <argp_parse@@Base+0x9b44>
  43cdec:	ldr	x0, [sp, #144]
  43cdf0:	str	x20, [x0]
  43cdf4:	str	x5, [x0, #8]
  43cdf8:	ldrb	w0, [sp, #569]
  43cdfc:	cbz	w0, 43c0d0 <argp_parse@@Base+0x8990>
  43ce00:	orr	x1, x3, x2
  43ce04:	cbz	x1, 43c0d0 <argp_parse@@Base+0x8990>
  43ce08:	mov	w2, #0x5                   	// #5
  43ce0c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  43ce10:	add	x1, x1, #0x398
  43ce14:	mov	x0, #0x0                   	// #0
  43ce18:	bl	4049c0 <dcgettext@plt>
  43ce1c:	ldr	w4, [sp, #504]
  43ce20:	ldr	x3, [sp, #496]
  43ce24:	ldr	x2, [sp, #488]
  43ce28:	ldr	x1, [sp, #480]
  43ce2c:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43ce30:	mov	w2, #0x5                   	// #5
  43ce34:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  43ce38:	add	x1, x1, #0x3e8
  43ce3c:	mov	x0, #0x0                   	// #0
  43ce40:	bl	4049c0 <dcgettext@plt>
  43ce44:	mov	x1, x20
  43ce48:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43ce4c:	ldr	w0, [sp, #1032]
  43ce50:	cmn	w0, #0x1
  43ce54:	b.eq	43c0d0 <argp_parse@@Base+0x8990>  // b.none
  43ce58:	add	x2, sp, #0xc0
  43ce5c:	ldr	x1, [sp, #144]
  43ce60:	mov	x0, x21
  43ce64:	bl	44e074 <_obstack_memory_used@@Base+0xced8>
  43ce68:	cbz	x0, 43c0d0 <argp_parse@@Base+0x8990>
  43ce6c:	ldr	w1, [sp, #1032]
  43ce70:	ldr	w0, [sp, #224]
  43ce74:	cmp	w1, w0
  43ce78:	b.eq	43c0d0 <argp_parse@@Base+0x8990>  // b.none
  43ce7c:	mov	w2, #0x5                   	// #5
  43ce80:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  43ce84:	add	x1, x1, #0x410
  43ce88:	mov	x0, #0x0                   	// #0
  43ce8c:	bl	4049c0 <dcgettext@plt>
  43ce90:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43ce94:	b	43c0d0 <argp_parse@@Base+0x8990>
  43ce98:	mov	w2, #0x5                   	// #5
  43ce9c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  43cea0:	add	x1, x1, #0x8
  43cea4:	mov	x0, #0x0                   	// #0
  43cea8:	bl	4049c0 <dcgettext@plt>
  43ceac:	mov	x23, x0
  43ceb0:	mov	w2, #0x64                  	// #100
  43ceb4:	add	x1, sp, #0xf8
  43ceb8:	add	x0, sp, #0x160
  43cebc:	bl	43a010 <argp_parse@@Base+0x68d0>
  43cec0:	mov	x20, x0
  43cec4:	mov	w3, #0x64                  	// #100
  43cec8:	add	x2, sp, #0x328
  43cecc:	add	x1, sp, #0x160
  43ced0:	add	x0, sp, #0x3e8
  43ced4:	bl	43a80c <argp_parse@@Base+0x70cc>
  43ced8:	mov	x2, x0
  43cedc:	mov	x1, x20
  43cee0:	mov	x0, x23
  43cee4:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43cee8:	ldrb	w0, [sp, #569]
  43ceec:	cbz	w0, 43cd2c <argp_parse@@Base+0x95ec>
  43cef0:	ldr	x0, [sp, #520]
  43cef4:	cbnz	x0, 43d55c <argp_parse@@Base+0x9e1c>
  43cef8:	ldr	x0, [sp, #528]
  43cefc:	cbnz	x0, 43d564 <argp_parse@@Base+0x9e24>
  43cf00:	mov	w2, #0x5                   	// #5
  43cf04:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  43cf08:	add	x1, x1, #0x28
  43cf0c:	bl	4049c0 <dcgettext@plt>
  43cf10:	mov	x20, x0
  43cf14:	add	x1, sp, #0xc0
  43cf18:	ldr	w0, [sp, #1020]
  43cf1c:	bl	43a234 <argp_parse@@Base+0x6af4>
  43cf20:	ldr	w7, [sp, #1012]
  43cf24:	ldr	w6, [sp, #1016]
  43cf28:	add	w6, w6, #0x1
  43cf2c:	mov	x5, x0
  43cf30:	adrp	x4, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  43cf34:	add	x4, x4, #0x58
  43cf38:	mov	x3, #0x64                  	// #100
  43cf3c:	mov	w2, #0x1                   	// #1
  43cf40:	mov	x1, x3
  43cf44:	add	x0, sp, #0x328
  43cf48:	bl	404290 <__snprintf_chk@plt>
  43cf4c:	add	x1, sp, #0x328
  43cf50:	mov	x0, x20
  43cf54:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43cf58:	ldr	x0, [sp, #528]
  43cf5c:	cbz	x0, 43d564 <argp_parse@@Base+0x9e24>
  43cf60:	ldr	x0, [sp, #520]
  43cf64:	cbz	x0, 43d564 <argp_parse@@Base+0x9e24>
  43cf68:	mov	w2, #0x5                   	// #5
  43cf6c:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  43cf70:	add	x1, x1, #0x70
  43cf74:	mov	x0, #0x0                   	// #0
  43cf78:	bl	4049c0 <dcgettext@plt>
  43cf7c:	mov	x20, x0
  43cf80:	mov	w2, #0x64                  	// #100
  43cf84:	add	x1, sp, #0xf8
  43cf88:	add	x0, sp, #0x160
  43cf8c:	bl	43a010 <argp_parse@@Base+0x68d0>
  43cf90:	mov	x1, x0
  43cf94:	mov	x0, x20
  43cf98:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43cf9c:	b	43d564 <argp_parse@@Base+0x9e24>
  43cfa0:	mov	w2, #0x5                   	// #5
  43cfa4:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  43cfa8:	add	x1, x1, #0xd0
  43cfac:	mov	x0, #0x0                   	// #0
  43cfb0:	bl	4049c0 <dcgettext@plt>
  43cfb4:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43cfb8:	b	43d5cc <argp_parse@@Base+0x9e8c>
  43cfbc:	ldr	w0, [sp, #1008]
  43cfc0:	cmp	w0, #0xc
  43cfc4:	b.eq	43d5d4 <argp_parse@@Base+0x9e94>  // b.none
  43cfc8:	mov	w2, #0x5                   	// #5
  43cfcc:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  43cfd0:	add	x1, x1, #0x138
  43cfd4:	mov	x0, #0x0                   	// #0
  43cfd8:	bl	4049c0 <dcgettext@plt>
  43cfdc:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43cfe0:	b	43d5d4 <argp_parse@@Base+0x9e94>
  43cfe4:	mov	w24, w0
  43cfe8:	str	w20, [sp, #1020]
  43cfec:	str	w0, [sp, #1016]
  43cff0:	str	w23, [sp, #1012]
  43cff4:	ldr	w0, [sp, #952]
  43cff8:	str	w0, [sp, #1008]
  43cffc:	ldr	w0, [sp, #948]
  43d000:	str	w0, [sp, #1004]
  43d004:	ldr	w0, [sp, #944]
  43d008:	str	w0, [sp, #1000]
  43d00c:	ldr	w0, [sp, #976]
  43d010:	str	w0, [sp, #1032]
  43d014:	add	x1, sp, #0x3e8
  43d018:	mov	x0, x21
  43d01c:	bl	44e11c <_obstack_memory_used@@Base+0xcf80>
  43d020:	mov	x22, x0
  43d024:	cmn	x0, #0x1
  43d028:	b.eq	43d05c <argp_parse@@Base+0x991c>  // b.none
  43d02c:	ldrb	w0, [sp, #569]
  43d030:	cbnz	w0, 43d0a0 <argp_parse@@Base+0x9960>
  43d034:	ldr	x0, [sp, #560]
  43d038:	cbz	x0, 43cd54 <argp_parse@@Base+0x9614>
  43d03c:	ldrsw	x0, [sp, #376]
  43d040:	ldr	x1, [sp, #1040]
  43d044:	subs	x0, x0, x1
  43d048:	cset	x1, vs
  43d04c:	subs	x22, x22, x0
  43d050:	csinc	w0, w1, wzr, vc
  43d054:	cbz	w0, 43cd4c <argp_parse@@Base+0x960c>
  43d058:	b	43c224 <argp_parse@@Base+0x8ae4>
  43d05c:	ldrb	w0, [sp, #569]
  43d060:	cbz	w0, 43c224 <argp_parse@@Base+0x8ae4>
  43d064:	mov	w2, #0x5                   	// #5
  43d068:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  43d06c:	add	x1, x1, #0x1a8
  43d070:	mov	x0, #0x0                   	// #0
  43d074:	bl	4049c0 <dcgettext@plt>
  43d078:	mov	x20, x0
  43d07c:	mov	w3, #0x64                  	// #100
  43d080:	add	x2, sp, #0x328
  43d084:	add	x1, sp, #0x160
  43d088:	add	x0, sp, #0x3e8
  43d08c:	bl	43a80c <argp_parse@@Base+0x70cc>
  43d090:	mov	x1, x0
  43d094:	mov	x0, x20
  43d098:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43d09c:	b	43c224 <argp_parse@@Base+0x8ae4>
  43d0a0:	mov	w2, #0x5                   	// #5
  43d0a4:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  43d0a8:	add	x1, x1, #0x1e8
  43d0ac:	mov	x0, #0x0                   	// #0
  43d0b0:	bl	4049c0 <dcgettext@plt>
  43d0b4:	ldr	x3, [sp, #472]
  43d0b8:	ldr	x2, [sp, #464]
  43d0bc:	ldr	x1, [sp, #456]
  43d0c0:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43d0c4:	mov	w2, #0x5                   	// #5
  43d0c8:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  43d0cc:	add	x1, x1, #0x228
  43d0d0:	mov	x0, #0x0                   	// #0
  43d0d4:	bl	4049c0 <dcgettext@plt>
  43d0d8:	mov	x26, x0
  43d0dc:	mov	w3, #0x64                  	// #100
  43d0e0:	add	x2, sp, #0x328
  43d0e4:	add	x1, sp, #0x160
  43d0e8:	add	x0, sp, #0x3e8
  43d0ec:	bl	43a80c <argp_parse@@Base+0x70cc>
  43d0f0:	mov	x1, x0
  43d0f4:	mov	x0, x26
  43d0f8:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43d0fc:	ldr	w0, [sp, #976]
  43d100:	cmn	w0, #0x1
  43d104:	b.eq	43d114 <argp_parse@@Base+0x99d4>  // b.none
  43d108:	ldr	w1, [sp, #1032]
  43d10c:	cmp	w0, w1
  43d110:	b.ne	43d1cc <argp_parse@@Base+0x9a8c>  // b.any
  43d114:	ldr	x0, [sp, #472]
  43d118:	cbnz	x0, 43cd44 <argp_parse@@Base+0x9604>
  43d11c:	ldr	w0, [sp, #1012]
  43d120:	cmp	w23, w0
  43d124:	b.ne	43d13c <argp_parse@@Base+0x99fc>  // b.any
  43d128:	ldr	x0, [sp, #464]
  43d12c:	cbnz	x0, 43cd44 <argp_parse@@Base+0x9604>
  43d130:	ldr	w0, [sp, #1016]
  43d134:	cmp	w24, w0
  43d138:	b.eq	43cd44 <argp_parse@@Base+0x9604>  // b.none
  43d13c:	mov	w2, #0x5                   	// #5
  43d140:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  43d144:	add	x1, x1, #0x288
  43d148:	mov	x0, #0x0                   	// #0
  43d14c:	bl	4049c0 <dcgettext@plt>
  43d150:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43d154:	mov	w2, #0x5                   	// #5
  43d158:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  43d15c:	add	x1, x1, #0x2c8
  43d160:	mov	x0, #0x0                   	// #0
  43d164:	bl	4049c0 <dcgettext@plt>
  43d168:	mov	x26, x0
  43d16c:	add	x1, sp, #0xc0
  43d170:	mov	w0, w20
  43d174:	bl	43a234 <argp_parse@@Base+0x6af4>
  43d178:	mov	w3, w23
  43d17c:	add	w2, w24, #0x1
  43d180:	mov	x1, x0
  43d184:	mov	x0, x26
  43d188:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43d18c:	mov	w2, #0x5                   	// #5
  43d190:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  43d194:	add	x1, x1, #0x2f0
  43d198:	mov	x0, #0x0                   	// #0
  43d19c:	bl	4049c0 <dcgettext@plt>
  43d1a0:	mov	x20, x0
  43d1a4:	add	x1, sp, #0xc0
  43d1a8:	ldr	w0, [sp, #1020]
  43d1ac:	bl	43a234 <argp_parse@@Base+0x6af4>
  43d1b0:	ldr	w3, [sp, #1012]
  43d1b4:	ldr	w2, [sp, #1016]
  43d1b8:	add	w2, w2, #0x1
  43d1bc:	mov	x1, x0
  43d1c0:	mov	x0, x20
  43d1c4:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43d1c8:	b	43cd44 <argp_parse@@Base+0x9604>
  43d1cc:	mov	w2, #0x5                   	// #5
  43d1d0:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  43d1d4:	add	x1, x1, #0x248
  43d1d8:	mov	x0, #0x0                   	// #0
  43d1dc:	bl	4049c0 <dcgettext@plt>
  43d1e0:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43d1e4:	b	43d114 <argp_parse@@Base+0x99d4>
  43d1e8:	ldrsw	x0, [sp, #376]
  43d1ec:	ldr	x1, [sp, #1040]
  43d1f0:	subs	x0, x0, x1
  43d1f4:	cset	x1, vs
  43d1f8:	subs	x22, x22, x0
  43d1fc:	csinc	w0, w1, wzr, vc
  43d200:	cbz	w0, 43cd4c <argp_parse@@Base+0x960c>
  43d204:	ldrb	w0, [sp, #569]
  43d208:	cbz	w0, 43c224 <argp_parse@@Base+0x8ae4>
  43d20c:	mov	w2, #0x5                   	// #5
  43d210:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  43d214:	add	x1, x1, #0x318
  43d218:	mov	x0, #0x0                   	// #0
  43d21c:	bl	4049c0 <dcgettext@plt>
  43d220:	ldr	w1, [sp, #376]
  43d224:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43d228:	b	43c224 <argp_parse@@Base+0x8ae4>
  43d22c:	mov	w2, #0x5                   	// #5
  43d230:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  43d234:	add	x1, x1, #0x348
  43d238:	mov	x0, #0x0                   	// #0
  43d23c:	bl	4049c0 <dcgettext@plt>
  43d240:	mov	x20, x0
  43d244:	mov	w3, #0x64                  	// #100
  43d248:	add	x2, sp, #0x328
  43d24c:	add	x1, sp, #0x160
  43d250:	add	x0, sp, #0x3e8
  43d254:	bl	43a80c <argp_parse@@Base+0x70cc>
  43d258:	mov	x2, x22
  43d25c:	mov	x1, x0
  43d260:	mov	x0, x20
  43d264:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43d268:	ldr	x1, [sp, #480]
  43d26c:	mov	x0, #0xe10                 	// #3600
  43d270:	mul	x3, x1, x0
  43d274:	smulh	x2, x1, x0
  43d278:	mov	x0, x3
  43d27c:	cmp	x2, x3, asr #63
  43d280:	b.eq	43cd70 <argp_parse@@Base+0x9630>  // b.none
  43d284:	ldrb	w0, [sp, #569]
  43d288:	cbz	w0, 43c224 <argp_parse@@Base+0x8ae4>
  43d28c:	mov	w2, #0x5                   	// #5
  43d290:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  43d294:	add	x1, x1, #0x368
  43d298:	mov	x0, #0x0                   	// #0
  43d29c:	bl	4049c0 <dcgettext@plt>
  43d2a0:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43d2a4:	b	43c224 <argp_parse@@Base+0x8ae4>
  43d2a8:	mov	w2, #0x5                   	// #5
  43d2ac:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  43d2b0:	add	x1, x1, #0x450
  43d2b4:	bl	4049c0 <dcgettext@plt>
  43d2b8:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43d2bc:	b	43c10c <argp_parse@@Base+0x89cc>
  43d2c0:	mov	w2, #0x5                   	// #5
  43d2c4:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  43d2c8:	add	x1, x1, #0x490
  43d2cc:	mov	x0, #0x0                   	// #0
  43d2d0:	bl	4049c0 <dcgettext@plt>
  43d2d4:	ldr	x1, [sp, #136]
  43d2d8:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43d2dc:	b	43c10c <argp_parse@@Base+0x89cc>
  43d2e0:	mov	w19, #0x1                   	// #1
  43d2e4:	b	43c224 <argp_parse@@Base+0x8ae4>
  43d2e8:	mov	w19, #0x0                   	// #0
  43d2ec:	b	43c234 <argp_parse@@Base+0x8af4>
  43d2f0:	mov	w19, #0x0                   	// #0
  43d2f4:	b	43c234 <argp_parse@@Base+0x8af4>
  43d2f8:	ldrb	w23, [sp, #569]
  43d2fc:	cbz	w23, 43c224 <argp_parse@@Base+0x8ae4>
  43d300:	mov	w2, #0x5                   	// #5
  43d304:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43d308:	add	x1, x1, #0xe30
  43d30c:	mov	x0, #0x0                   	// #0
  43d310:	bl	4049c0 <dcgettext@plt>
  43d314:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43d318:	mov	w2, #0x5                   	// #5
  43d31c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43d320:	add	x1, x1, #0xe58
  43d324:	mov	x0, #0x0                   	// #0
  43d328:	bl	4049c0 <dcgettext@plt>
  43d32c:	mov	x28, x0
  43d330:	mov	w3, #0x64                  	// #100
  43d334:	add	x2, sp, #0xf8
  43d338:	add	x1, sp, #0x160
  43d33c:	add	x0, sp, #0x3b0
  43d340:	bl	43a80c <argp_parse@@Base+0x70cc>
  43d344:	mov	x1, x0
  43d348:	mov	x0, x28
  43d34c:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43d350:	mov	w2, #0x5                   	// #5
  43d354:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43d358:	add	x1, x1, #0xe78
  43d35c:	mov	x0, #0x0                   	// #0
  43d360:	bl	4049c0 <dcgettext@plt>
  43d364:	mov	x28, x0
  43d368:	mov	w3, #0x64                  	// #100
  43d36c:	add	x2, sp, #0xf8
  43d370:	add	x1, sp, #0x160
  43d374:	add	x0, sp, #0x3e8
  43d378:	bl	43a80c <argp_parse@@Base+0x70cc>
  43d37c:	mov	x1, x0
  43d380:	mov	x0, x28
  43d384:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43d388:	adrp	x5, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  43d38c:	add	x5, x5, #0x7f8
  43d390:	mov	x6, x5
  43d394:	b	43c990 <argp_parse@@Base+0x9250>
  43d398:	ldrsw	x20, [sp, #1020]
  43d39c:	adds	x20, x20, x0
  43d3a0:	cset	w0, vs
  43d3a4:	cmp	x20, w20, sxtw
  43d3a8:	csinc	w0, w0, wzr, eq  // eq = none
  43d3ac:	cbnz	w0, 43c224 <argp_parse@@Base+0x8ae4>
  43d3b0:	ldrsw	x0, [sp, #1016]
  43d3b4:	ldr	x1, [sp, #464]
  43d3b8:	adds	x0, x0, x1
  43d3bc:	cset	w1, vs
  43d3c0:	cmp	x0, w0, sxtw
  43d3c4:	csinc	w1, w1, wzr, eq  // eq = none
  43d3c8:	cbz	w1, 43d60c <argp_parse@@Base+0x9ecc>
  43d3cc:	b	43c224 <argp_parse@@Base+0x8ae4>
  43d3d0:	mov	w0, #0xffffffff            	// #-1
  43d3d4:	str	w0, [sp, #1008]
  43d3d8:	adrp	x22, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  43d3dc:	add	x22, x22, #0x7f8
  43d3e0:	b	43c720 <argp_parse@@Base+0x8fe0>
  43d3e4:	str	wzr, [sp, #1000]
  43d3e8:	str	wzr, [sp, #1004]
  43d3ec:	str	wzr, [sp, #1008]
  43d3f0:	str	xzr, [sp, #448]
  43d3f4:	ldrb	w0, [sp, #569]
  43d3f8:	cbz	w0, 43c7d4 <argp_parse@@Base+0x9094>
  43d3fc:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43d400:	add	x0, x0, #0xdd8
  43d404:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43d408:	b	43c7bc <argp_parse@@Base+0x907c>
  43d40c:	add	x24, x22, #0x7d0
  43d410:	cbnz	w23, 43c66c <argp_parse@@Base+0x8f2c>
  43d414:	mov	x22, x24
  43d418:	b	43c550 <argp_parse@@Base+0x8e10>
  43d41c:	add	x2, sp, #0x278
  43d420:	mov	x1, x20
  43d424:	mov	x0, x25
  43d428:	bl	44e074 <_obstack_memory_used@@Base+0xced8>
  43d42c:	mov	x27, x0
  43d430:	cbz	x0, 43d2e8 <argp_parse@@Base+0x9ba8>
  43d434:	mov	x21, x25
  43d438:	mov	x27, #0x0                   	// #0
  43d43c:	ldrb	w1, [x19]
  43d440:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  43d444:	add	x0, x0, #0x388
  43d448:	cmp	w1, #0x0
  43d44c:	csel	x19, x0, x19, eq  // eq = none
  43d450:	str	x19, [sp, #352]
  43d454:	and	w24, w24, #0x1
  43d458:	strb	w24, [sp, #569]
  43d45c:	ldrsw	x0, [sp, #652]
  43d460:	add	x0, x0, #0x76c
  43d464:	str	x0, [sp, #392]
  43d468:	str	xzr, [sp, #400]
  43d46c:	ldr	w0, [sp, #648]
  43d470:	add	w0, w0, #0x1
  43d474:	sxtw	x0, w0
  43d478:	str	x0, [sp, #408]
  43d47c:	ldrsw	x0, [sp, #644]
  43d480:	str	x0, [sp, #416]
  43d484:	ldrsw	x0, [sp, #640]
  43d488:	str	x0, [sp, #424]
  43d48c:	ldrsw	x0, [sp, #636]
  43d490:	str	x0, [sp, #432]
  43d494:	ldrsw	x0, [sp, #632]
  43d498:	str	x0, [sp, #440]
  43d49c:	sxtw	x28, w28
  43d4a0:	str	x28, [sp, #448]
  43d4a4:	ldr	w0, [sp, #664]
  43d4a8:	str	w0, [sp, #1032]
  43d4ac:	mov	w1, #0x2                   	// #2
  43d4b0:	str	w1, [sp, #380]
  43d4b4:	str	xzr, [sp, #456]
  43d4b8:	str	xzr, [sp, #464]
  43d4bc:	str	xzr, [sp, #472]
  43d4c0:	str	xzr, [sp, #480]
  43d4c4:	str	xzr, [sp, #488]
  43d4c8:	str	xzr, [sp, #496]
  43d4cc:	str	wzr, [sp, #504]
  43d4d0:	strb	wzr, [sp, #512]
  43d4d4:	strb	wzr, [sp, #513]
  43d4d8:	str	xzr, [sp, #520]
  43d4dc:	str	xzr, [sp, #528]
  43d4e0:	str	xzr, [sp, #552]
  43d4e4:	str	xzr, [sp, #536]
  43d4e8:	str	xzr, [sp, #544]
  43d4ec:	str	xzr, [sp, #560]
  43d4f0:	strb	wzr, [sp, #568]
  43d4f4:	strb	wzr, [sp, #570]
  43d4f8:	strb	wzr, [sp, #571]
  43d4fc:	strb	wzr, [sp, #573]
  43d500:	strb	wzr, [sp, #572]
  43d504:	strb	wzr, [sp, #574]
  43d508:	strb	wzr, [sp, #575]
  43d50c:	strb	wzr, [sp, #576]
  43d510:	ldr	x1, [sp, #680]
  43d514:	str	x1, [sp, #584]
  43d518:	mov	w1, #0x10d                 	// #269
  43d51c:	str	w1, [sp, #592]
  43d520:	str	w0, [sp, #596]
  43d524:	str	xzr, [sp, #600]
  43d528:	mov	x0, #0xa700                	// #42752
  43d52c:	movk	x0, #0x76, lsl #16
  43d530:	adds	x0, x23, x0
  43d534:	b.vs	43c07c <argp_parse@@Base+0x893c>
  43d538:	mov	w19, #0x4e00                	// #19968
  43d53c:	movk	w19, #0xed, lsl #16
  43d540:	mov	w20, #0x9c00                	// #39936
  43d544:	movk	w20, #0x1da, lsl #16
  43d548:	mov	w22, #0xa700                	// #42752
  43d54c:	movk	w22, #0x76, lsl #16
  43d550:	b	43c038 <argp_parse@@Base+0x88f8>
  43d554:	ldrb	w0, [sp, #569]
  43d558:	cbz	w0, 43cd2c <argp_parse@@Base+0x95ec>
  43d55c:	ldr	x0, [sp, #528]
  43d560:	cbnz	x0, 43cf68 <argp_parse@@Base+0x9828>
  43d564:	mov	w2, #0x5                   	// #5
  43d568:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  43d56c:	add	x1, x1, #0xb0
  43d570:	mov	x0, #0x0                   	// #0
  43d574:	bl	4049c0 <dcgettext@plt>
  43d578:	mov	x20, x0
  43d57c:	mov	w3, #0x64                  	// #100
  43d580:	add	x2, sp, #0x328
  43d584:	add	x1, sp, #0x160
  43d588:	add	x0, sp, #0x3e8
  43d58c:	bl	43a80c <argp_parse@@Base+0x70cc>
  43d590:	mov	x1, x0
  43d594:	mov	x0, x20
  43d598:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43d59c:	ldr	x0, [sp, #456]
  43d5a0:	ldr	x1, [sp, #464]
  43d5a4:	orr	x1, x0, x1
  43d5a8:	ldr	x2, [sp, #472]
  43d5ac:	orr	x2, x1, x2
  43d5b0:	cbz	x2, 43cd44 <argp_parse@@Base+0x9604>
  43d5b4:	ldrb	w2, [sp, #569]
  43d5b8:	cbz	w2, 43d398 <argp_parse@@Base+0x9c58>
  43d5bc:	cbz	x1, 43cfbc <argp_parse@@Base+0x987c>
  43d5c0:	ldr	w0, [sp, #1012]
  43d5c4:	cmp	w0, #0xf
  43d5c8:	b.ne	43cfa0 <argp_parse@@Base+0x9860>  // b.any
  43d5cc:	ldr	x0, [sp, #472]
  43d5d0:	cbnz	x0, 43cfbc <argp_parse@@Base+0x987c>
  43d5d4:	ldrsw	x20, [sp, #1020]
  43d5d8:	ldr	x0, [sp, #456]
  43d5dc:	adds	x20, x20, x0
  43d5e0:	cset	w0, vs
  43d5e4:	cmp	x20, w20, sxtw
  43d5e8:	csinc	w0, w0, wzr, eq  // eq = none
  43d5ec:	cbnz	w0, 43d628 <argp_parse@@Base+0x9ee8>
  43d5f0:	ldrsw	x0, [sp, #1016]
  43d5f4:	ldr	x1, [sp, #464]
  43d5f8:	adds	x0, x0, x1
  43d5fc:	cset	w1, vs
  43d600:	cmp	x0, w0, sxtw
  43d604:	csinc	w1, w1, wzr, eq  // eq = none
  43d608:	cbnz	w1, 43d628 <argp_parse@@Base+0x9ee8>
  43d60c:	ldrsw	x23, [sp, #1012]
  43d610:	ldr	x1, [sp, #472]
  43d614:	adds	x23, x23, x1
  43d618:	cset	w1, vs
  43d61c:	cmp	x23, w23, sxtw
  43d620:	csinc	w1, w1, wzr, eq  // eq = none
  43d624:	cbz	w1, 43cfe4 <argp_parse@@Base+0x98a4>
  43d628:	ldrb	w0, [sp, #569]
  43d62c:	cbz	w0, 43c224 <argp_parse@@Base+0x8ae4>
  43d630:	mov	w2, #0x5                   	// #5
  43d634:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  43d638:	add	x1, x1, #0x180
  43d63c:	mov	x0, #0x0                   	// #0
  43d640:	bl	4049c0 <dcgettext@plt>
  43d644:	mov	w2, #0x877                 	// #2167
  43d648:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  43d64c:	add	x1, x1, #0x190
  43d650:	bl	43a2e8 <argp_parse@@Base+0x6ba8>
  43d654:	b	43c224 <argp_parse@@Base+0x8ae4>
  43d658:	stp	x29, x30, [sp, #-64]!
  43d65c:	mov	x29, sp
  43d660:	stp	x19, x20, [sp, #16]
  43d664:	stp	x21, x22, [sp, #32]
  43d668:	str	x23, [sp, #48]
  43d66c:	mov	x20, x0
  43d670:	mov	x21, x1
  43d674:	mov	x22, x2
  43d678:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  43d67c:	add	x0, x0, #0x510
  43d680:	bl	404af0 <getenv@plt>
  43d684:	mov	x23, x0
  43d688:	bl	44dcf0 <_obstack_memory_used@@Base+0xcb54>
  43d68c:	cbz	x0, 43d6d4 <argp_parse@@Base+0x9f94>
  43d690:	mov	x19, x0
  43d694:	mov	x5, x23
  43d698:	mov	x4, x0
  43d69c:	mov	w3, #0x0                   	// #0
  43d6a0:	mov	x2, x22
  43d6a4:	mov	x1, x21
  43d6a8:	mov	x0, x20
  43d6ac:	bl	43be6c <argp_parse@@Base+0x872c>
  43d6b0:	and	w20, w0, #0xff
  43d6b4:	mov	x0, x19
  43d6b8:	bl	44defc <_obstack_memory_used@@Base+0xcd60>
  43d6bc:	mov	w0, w20
  43d6c0:	ldp	x19, x20, [sp, #16]
  43d6c4:	ldp	x21, x22, [sp, #32]
  43d6c8:	ldr	x23, [sp, #48]
  43d6cc:	ldp	x29, x30, [sp], #64
  43d6d0:	ret
  43d6d4:	mov	w20, #0x0                   	// #0
  43d6d8:	b	43d6bc <argp_parse@@Base+0x9f7c>
  43d6dc:	stp	x29, x30, [sp, #-48]!
  43d6e0:	mov	x29, sp
  43d6e4:	cbz	x0, 43d75c <argp_parse@@Base+0xa01c>
  43d6e8:	stp	x19, x20, [sp, #16]
  43d6ec:	mov	x19, x0
  43d6f0:	mov	w1, #0x2f                  	// #47
  43d6f4:	bl	4045e0 <strrchr@plt>
  43d6f8:	mov	x20, x0
  43d6fc:	cbz	x0, 43d790 <argp_parse@@Base+0xa050>
  43d700:	str	x21, [sp, #32]
  43d704:	add	x21, x0, #0x1
  43d708:	sub	x0, x21, x19
  43d70c:	cmp	x0, #0x6
  43d710:	b.le	43d784 <argp_parse@@Base+0xa044>
  43d714:	mov	x2, #0x7                   	// #7
  43d718:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43d71c:	add	x1, x1, #0x778
  43d720:	sub	x0, x20, #0x6
  43d724:	bl	4043c0 <strncmp@plt>
  43d728:	cbnz	w0, 43d78c <argp_parse@@Base+0xa04c>
  43d72c:	mov	x2, #0x3                   	// #3
  43d730:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43d734:	add	x1, x1, #0x780
  43d738:	mov	x0, x21
  43d73c:	bl	4043c0 <strncmp@plt>
  43d740:	mov	x19, x21
  43d744:	cbnz	w0, 43d7ac <argp_parse@@Base+0xa06c>
  43d748:	add	x19, x20, #0x4
  43d74c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43d750:	str	x19, [x0, #1128]
  43d754:	ldr	x21, [sp, #32]
  43d758:	b	43d790 <argp_parse@@Base+0xa050>
  43d75c:	stp	x19, x20, [sp, #16]
  43d760:	str	x21, [sp, #32]
  43d764:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43d768:	ldr	x3, [x0, #1096]
  43d76c:	mov	x2, #0x37                  	// #55
  43d770:	mov	x1, #0x1                   	// #1
  43d774:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43d778:	add	x0, x0, #0x740
  43d77c:	bl	4048b0 <fwrite@plt>
  43d780:	bl	404660 <abort@plt>
  43d784:	ldr	x21, [sp, #32]
  43d788:	b	43d790 <argp_parse@@Base+0xa050>
  43d78c:	ldr	x21, [sp, #32]
  43d790:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43d794:	str	x19, [x0, #3480]
  43d798:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43d79c:	str	x19, [x0, #1088]
  43d7a0:	ldp	x19, x20, [sp, #16]
  43d7a4:	ldp	x29, x30, [sp], #48
  43d7a8:	ret
  43d7ac:	ldr	x21, [sp, #32]
  43d7b0:	b	43d790 <argp_parse@@Base+0xa050>
  43d7b4:	stp	xzr, xzr, [x8]
  43d7b8:	stp	xzr, xzr, [x8, #16]
  43d7bc:	stp	xzr, xzr, [x8, #32]
  43d7c0:	str	xzr, [x8, #48]
  43d7c4:	cmp	w0, #0xa
  43d7c8:	b.eq	43d7d4 <argp_parse@@Base+0xa094>  // b.none
  43d7cc:	str	w0, [x8]
  43d7d0:	ret
  43d7d4:	stp	x29, x30, [sp, #-16]!
  43d7d8:	mov	x29, sp
  43d7dc:	bl	404660 <abort@plt>
  43d7e0:	stp	x29, x30, [sp, #-48]!
  43d7e4:	mov	x29, sp
  43d7e8:	stp	x19, x20, [sp, #16]
  43d7ec:	str	x21, [sp, #32]
  43d7f0:	mov	x20, x0
  43d7f4:	mov	w21, w1
  43d7f8:	mov	w2, #0x5                   	// #5
  43d7fc:	mov	x1, x0
  43d800:	mov	x0, #0x0                   	// #0
  43d804:	bl	4049c0 <dcgettext@plt>
  43d808:	mov	x19, x0
  43d80c:	cmp	x20, x0
  43d810:	b.eq	43d828 <argp_parse@@Base+0xa0e8>  // b.none
  43d814:	mov	x0, x19
  43d818:	ldp	x19, x20, [sp, #16]
  43d81c:	ldr	x21, [sp, #32]
  43d820:	ldp	x29, x30, [sp], #48
  43d824:	ret
  43d828:	bl	438d28 <argp_parse@@Base+0x55e8>
  43d82c:	ldrb	w1, [x0]
  43d830:	and	w1, w1, #0xffffffdf
  43d834:	cmp	w1, #0x55
  43d838:	b.ne	43d8b8 <argp_parse@@Base+0xa178>  // b.any
  43d83c:	ldrb	w1, [x0, #1]
  43d840:	and	w1, w1, #0xffffffdf
  43d844:	cmp	w1, #0x54
  43d848:	b.ne	43d87c <argp_parse@@Base+0xa13c>  // b.any
  43d84c:	ldrb	w1, [x0, #2]
  43d850:	and	w1, w1, #0xffffffdf
  43d854:	cmp	w1, #0x46
  43d858:	b.ne	43d87c <argp_parse@@Base+0xa13c>  // b.any
  43d85c:	ldrb	w1, [x0, #3]
  43d860:	cmp	w1, #0x2d
  43d864:	b.ne	43d87c <argp_parse@@Base+0xa13c>  // b.any
  43d868:	ldrb	w1, [x0, #4]
  43d86c:	cmp	w1, #0x38
  43d870:	b.ne	43d87c <argp_parse@@Base+0xa13c>  // b.any
  43d874:	ldrb	w0, [x0, #5]
  43d878:	cbz	w0, 43d898 <argp_parse@@Base+0xa158>
  43d87c:	adrp	x19, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43d880:	add	x0, x19, #0x7b0
  43d884:	adrp	x19, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43d888:	add	x19, x19, #0x788
  43d88c:	cmp	w21, #0x9
  43d890:	csel	x19, x19, x0, eq  // eq = none
  43d894:	b	43d814 <argp_parse@@Base+0xa0d4>
  43d898:	ldrb	w1, [x19]
  43d89c:	adrp	x19, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43d8a0:	add	x0, x19, #0x790
  43d8a4:	adrp	x19, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43d8a8:	add	x19, x19, #0x7a8
  43d8ac:	cmp	w1, #0x60
  43d8b0:	csel	x19, x19, x0, eq  // eq = none
  43d8b4:	b	43d814 <argp_parse@@Base+0xa0d4>
  43d8b8:	cmp	w1, #0x47
  43d8bc:	b.ne	43d87c <argp_parse@@Base+0xa13c>  // b.any
  43d8c0:	ldrb	w1, [x0, #1]
  43d8c4:	and	w1, w1, #0xffffffdf
  43d8c8:	cmp	w1, #0x42
  43d8cc:	b.ne	43d87c <argp_parse@@Base+0xa13c>  // b.any
  43d8d0:	ldrb	w1, [x0, #2]
  43d8d4:	cmp	w1, #0x31
  43d8d8:	b.ne	43d87c <argp_parse@@Base+0xa13c>  // b.any
  43d8dc:	ldrb	w1, [x0, #3]
  43d8e0:	cmp	w1, #0x38
  43d8e4:	b.ne	43d87c <argp_parse@@Base+0xa13c>  // b.any
  43d8e8:	ldrb	w1, [x0, #4]
  43d8ec:	cmp	w1, #0x30
  43d8f0:	b.ne	43d87c <argp_parse@@Base+0xa13c>  // b.any
  43d8f4:	ldrb	w1, [x0, #5]
  43d8f8:	cmp	w1, #0x33
  43d8fc:	b.ne	43d87c <argp_parse@@Base+0xa13c>  // b.any
  43d900:	ldrb	w1, [x0, #6]
  43d904:	cmp	w1, #0x30
  43d908:	b.ne	43d87c <argp_parse@@Base+0xa13c>  // b.any
  43d90c:	ldrb	w0, [x0, #7]
  43d910:	cbnz	w0, 43d87c <argp_parse@@Base+0xa13c>
  43d914:	ldrb	w1, [x19]
  43d918:	adrp	x19, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43d91c:	add	x0, x19, #0x798
  43d920:	adrp	x19, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43d924:	add	x19, x19, #0x7a0
  43d928:	cmp	w1, #0x60
  43d92c:	csel	x19, x19, x0, eq  // eq = none
  43d930:	b	43d814 <argp_parse@@Base+0xa0d4>
  43d934:	sub	sp, sp, #0xf0
  43d938:	stp	x29, x30, [sp, #16]
  43d93c:	add	x29, sp, #0x10
  43d940:	stp	x19, x20, [sp, #32]
  43d944:	stp	x21, x22, [sp, #48]
  43d948:	stp	x23, x24, [sp, #64]
  43d94c:	stp	x25, x26, [sp, #80]
  43d950:	stp	x27, x28, [sp, #96]
  43d954:	mov	x28, x0
  43d958:	mov	x26, x1
  43d95c:	str	x2, [sp, #136]
  43d960:	mov	x24, x3
  43d964:	mov	w25, w4
  43d968:	mov	w19, w5
  43d96c:	str	w5, [sp, #184]
  43d970:	str	x6, [sp, #152]
  43d974:	str	x7, [sp, #200]
  43d978:	bl	4047f0 <__ctype_get_mb_cur_max@plt>
  43d97c:	str	x0, [sp, #168]
  43d980:	mov	x0, x19
  43d984:	ubfx	x0, x0, #1, #1
  43d988:	str	x0, [sp, #112]
  43d98c:	mov	w0, #0x1                   	// #1
  43d990:	str	w0, [sp, #128]
  43d994:	str	wzr, [sp, #180]
  43d998:	str	wzr, [sp, #124]
  43d99c:	str	wzr, [sp, #132]
  43d9a0:	str	xzr, [sp, #144]
  43d9a4:	str	xzr, [sp, #160]
  43d9a8:	str	xzr, [sp, #192]
  43d9ac:	mov	w23, w25
  43d9b0:	mov	x25, x24
  43d9b4:	cmp	w23, #0x4
  43d9b8:	b.eq	43db28 <argp_parse@@Base+0xa3e8>  // b.none
  43d9bc:	b.ls	43da0c <argp_parse@@Base+0xa2cc>  // b.plast
  43d9c0:	cmp	w23, #0x7
  43d9c4:	b.eq	43db98 <argp_parse@@Base+0xa458>  // b.none
  43d9c8:	b.ls	43da58 <argp_parse@@Base+0xa318>  // b.plast
  43d9cc:	sub	w0, w23, #0x8
  43d9d0:	cmp	w0, #0x2
  43d9d4:	b.hi	43db88 <argp_parse@@Base+0xa448>  // b.pmore
  43d9d8:	cmp	w23, #0xa
  43d9dc:	b.ne	43dacc <argp_parse@@Base+0xa38c>  // b.any
  43d9e0:	mov	x27, #0x0                   	// #0
  43d9e4:	ldr	w0, [sp, #112]
  43d9e8:	cbz	w0, 43daf8 <argp_parse@@Base+0xa3b8>
  43d9ec:	ldr	x0, [sp, #240]
  43d9f0:	bl	403ff0 <strlen@plt>
  43d9f4:	str	x0, [sp, #144]
  43d9f8:	ldr	x0, [sp, #240]
  43d9fc:	str	x0, [sp, #160]
  43da00:	mov	w0, #0x1                   	// #1
  43da04:	str	w0, [sp, #132]
  43da08:	b	43da90 <argp_parse@@Base+0xa350>
  43da0c:	cmp	w23, #0x2
  43da10:	b.eq	43db64 <argp_parse@@Base+0xa424>  // b.none
  43da14:	b.ls	43da24 <argp_parse@@Base+0xa2e4>  // b.plast
  43da18:	mov	w0, #0x1                   	// #1
  43da1c:	str	w0, [sp, #132]
  43da20:	b	43da30 <argp_parse@@Base+0xa2f0>
  43da24:	cbz	w23, 43db8c <argp_parse@@Base+0xa44c>
  43da28:	cmp	w23, #0x1
  43da2c:	b.ne	43db88 <argp_parse@@Base+0xa448>  // b.any
  43da30:	mov	w0, #0x1                   	// #1
  43da34:	str	w0, [sp, #112]
  43da38:	mov	x0, #0x1                   	// #1
  43da3c:	str	x0, [sp, #144]
  43da40:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43da44:	add	x0, x0, #0x7b0
  43da48:	str	x0, [sp, #160]
  43da4c:	mov	x27, #0x0                   	// #0
  43da50:	mov	w23, #0x2                   	// #2
  43da54:	b	43da90 <argp_parse@@Base+0xa350>
  43da58:	cmp	w23, #0x5
  43da5c:	b.eq	43da98 <argp_parse@@Base+0xa358>  // b.none
  43da60:	cmp	w23, #0x6
  43da64:	b.ne	43db88 <argp_parse@@Base+0xa448>  // b.any
  43da68:	mov	w0, #0x1                   	// #1
  43da6c:	str	w0, [sp, #112]
  43da70:	str	w0, [sp, #132]
  43da74:	mov	x0, #0x1                   	// #1
  43da78:	str	x0, [sp, #144]
  43da7c:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43da80:	add	x0, x0, #0x788
  43da84:	str	x0, [sp, #160]
  43da88:	mov	x27, #0x0                   	// #0
  43da8c:	mov	w23, #0x5                   	// #5
  43da90:	mov	x24, #0x0                   	// #0
  43da94:	b	43e584 <argp_parse@@Base+0xae44>
  43da98:	ldr	w0, [sp, #112]
  43da9c:	cbnz	w0, 43dbac <argp_parse@@Base+0xa46c>
  43daa0:	cbz	x26, 43dbd0 <argp_parse@@Base+0xa490>
  43daa4:	mov	w0, #0x22                  	// #34
  43daa8:	strb	w0, [x28]
  43daac:	mov	w0, #0x1                   	// #1
  43dab0:	str	w0, [sp, #132]
  43dab4:	mov	x27, #0x1                   	// #1
  43dab8:	str	x27, [sp, #144]
  43dabc:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43dac0:	add	x0, x0, #0x788
  43dac4:	str	x0, [sp, #160]
  43dac8:	b	43da90 <argp_parse@@Base+0xa350>
  43dacc:	mov	w1, w23
  43dad0:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43dad4:	add	x0, x0, #0x7b8
  43dad8:	bl	43d7e0 <argp_parse@@Base+0xa0a0>
  43dadc:	str	x0, [sp, #200]
  43dae0:	mov	w1, w23
  43dae4:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43dae8:	add	x0, x0, #0x7b0
  43daec:	bl	43d7e0 <argp_parse@@Base+0xa0a0>
  43daf0:	str	x0, [sp, #240]
  43daf4:	b	43d9e0 <argp_parse@@Base+0xa2a0>
  43daf8:	ldr	x1, [sp, #200]
  43dafc:	ldrb	w0, [x1]
  43db00:	cbnz	w0, 43db18 <argp_parse@@Base+0xa3d8>
  43db04:	mov	x27, #0x0                   	// #0
  43db08:	b	43d9ec <argp_parse@@Base+0xa2ac>
  43db0c:	add	x27, x27, #0x1
  43db10:	ldrb	w0, [x1, x27]
  43db14:	cbz	w0, 43d9ec <argp_parse@@Base+0xa2ac>
  43db18:	cmp	x26, x27
  43db1c:	b.ls	43db0c <argp_parse@@Base+0xa3cc>  // b.plast
  43db20:	strb	w0, [x28, x27]
  43db24:	b	43db0c <argp_parse@@Base+0xa3cc>
  43db28:	ldr	w0, [sp, #112]
  43db2c:	cbnz	w0, 43da30 <argp_parse@@Base+0xa2f0>
  43db30:	mov	w0, #0x1                   	// #1
  43db34:	str	w0, [sp, #132]
  43db38:	cbz	x26, 43dbf0 <argp_parse@@Base+0xa4b0>
  43db3c:	mov	w0, #0x27                  	// #39
  43db40:	strb	w0, [x28]
  43db44:	str	wzr, [sp, #112]
  43db48:	mov	x27, #0x1                   	// #1
  43db4c:	str	x27, [sp, #144]
  43db50:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43db54:	add	x0, x0, #0x7b0
  43db58:	str	x0, [sp, #160]
  43db5c:	mov	w23, #0x2                   	// #2
  43db60:	b	43da90 <argp_parse@@Base+0xa350>
  43db64:	ldr	w0, [sp, #112]
  43db68:	cbz	w0, 43db38 <argp_parse@@Base+0xa3f8>
  43db6c:	mov	x0, #0x1                   	// #1
  43db70:	str	x0, [sp, #144]
  43db74:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43db78:	add	x0, x0, #0x7b0
  43db7c:	str	x0, [sp, #160]
  43db80:	mov	x27, #0x0                   	// #0
  43db84:	b	43da90 <argp_parse@@Base+0xa350>
  43db88:	bl	404660 <abort@plt>
  43db8c:	str	wzr, [sp, #112]
  43db90:	mov	x27, #0x0                   	// #0
  43db94:	b	43da90 <argp_parse@@Base+0xa350>
  43db98:	str	wzr, [sp, #112]
  43db9c:	mov	w0, #0x1                   	// #1
  43dba0:	str	w0, [sp, #132]
  43dba4:	mov	x27, #0x0                   	// #0
  43dba8:	b	43da90 <argp_parse@@Base+0xa350>
  43dbac:	ldr	w0, [sp, #112]
  43dbb0:	str	w0, [sp, #132]
  43dbb4:	mov	x0, #0x1                   	// #1
  43dbb8:	str	x0, [sp, #144]
  43dbbc:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43dbc0:	add	x0, x0, #0x788
  43dbc4:	str	x0, [sp, #160]
  43dbc8:	mov	x27, #0x0                   	// #0
  43dbcc:	b	43da90 <argp_parse@@Base+0xa350>
  43dbd0:	mov	w0, #0x1                   	// #1
  43dbd4:	str	w0, [sp, #132]
  43dbd8:	mov	x27, #0x1                   	// #1
  43dbdc:	str	x27, [sp, #144]
  43dbe0:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43dbe4:	add	x0, x0, #0x788
  43dbe8:	str	x0, [sp, #160]
  43dbec:	b	43da90 <argp_parse@@Base+0xa350>
  43dbf0:	str	wzr, [sp, #112]
  43dbf4:	mov	x27, #0x1                   	// #1
  43dbf8:	str	x27, [sp, #144]
  43dbfc:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43dc00:	add	x0, x0, #0x7b0
  43dc04:	str	x0, [sp, #160]
  43dc08:	mov	w23, #0x2                   	// #2
  43dc0c:	b	43da90 <argp_parse@@Base+0xa350>
  43dc10:	ldr	x0, [sp, #144]
  43dc14:	add	x20, x24, x0
  43dc18:	cmp	x0, #0x1
  43dc1c:	ccmn	x25, #0x1, #0x0, hi  // hi = pmore
  43dc20:	b.ne	43dc30 <argp_parse@@Base+0xa4f0>  // b.any
  43dc24:	ldr	x0, [sp, #136]
  43dc28:	bl	403ff0 <strlen@plt>
  43dc2c:	mov	x25, x0
  43dc30:	cmp	x20, x25
  43dc34:	b.hi	43e860 <argp_parse@@Base+0xb120>  // b.pmore
  43dc38:	ldr	x0, [sp, #136]
  43dc3c:	add	x20, x0, x24
  43dc40:	ldr	x2, [sp, #144]
  43dc44:	ldr	x1, [sp, #160]
  43dc48:	mov	x0, x20
  43dc4c:	bl	4046e0 <memcmp@plt>
  43dc50:	cbnz	w0, 43e860 <argp_parse@@Base+0xb120>
  43dc54:	ldr	w0, [sp, #112]
  43dc58:	cbnz	w0, 43dc80 <argp_parse@@Base+0xa540>
  43dc5c:	ldrb	w20, [x20]
  43dc60:	cmp	w20, #0x7e
  43dc64:	b.hi	43e14c <argp_parse@@Base+0xaa0c>  // b.pmore
  43dc68:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43dc6c:	add	x0, x0, #0x828
  43dc70:	ldrh	w0, [x0, w20, uxtw #1]
  43dc74:	adr	x1, 43dc80 <argp_parse@@Base+0xa540>
  43dc78:	add	x0, x1, w0, sxth #2
  43dc7c:	br	x0
  43dc80:	mov	x24, x25
  43dc84:	mov	w25, w23
  43dc88:	b	43e7e8 <argp_parse@@Base+0xb0a8>
  43dc8c:	ldr	w0, [sp, #132]
  43dc90:	cbnz	w0, 43dcac <argp_parse@@Base+0xa56c>
  43dc94:	ldr	x0, [sp, #184]
  43dc98:	tbnz	w0, #0, 43e580 <argp_parse@@Base+0xae40>
  43dc9c:	ldr	w0, [sp, #132]
  43dca0:	mov	w22, w0
  43dca4:	mov	w19, w0
  43dca8:	b	43e4c0 <argp_parse@@Base+0xad80>
  43dcac:	ldr	w0, [sp, #112]
  43dcb0:	cbnz	w0, 43e79c <argp_parse@@Base+0xb05c>
  43dcb4:	mov	w22, w0
  43dcb8:	cmp	w23, #0x2
  43dcbc:	cset	w1, eq  // eq = none
  43dcc0:	ldr	w0, [sp, #124]
  43dcc4:	eor	w0, w0, #0x1
  43dcc8:	ands	w0, w1, w0
  43dccc:	b.eq	43dd30 <argp_parse@@Base+0xa5f0>  // b.none
  43dcd0:	cmp	x26, x27
  43dcd4:	b.ls	43dce0 <argp_parse@@Base+0xa5a0>  // b.plast
  43dcd8:	mov	w1, #0x27                  	// #39
  43dcdc:	strb	w1, [x28, x27]
  43dce0:	add	x1, x27, #0x1
  43dce4:	cmp	x26, x1
  43dce8:	b.ls	43dcf4 <argp_parse@@Base+0xa5b4>  // b.plast
  43dcec:	mov	w2, #0x24                  	// #36
  43dcf0:	strb	w2, [x28, x1]
  43dcf4:	add	x1, x27, #0x2
  43dcf8:	cmp	x26, x1
  43dcfc:	b.ls	43dd08 <argp_parse@@Base+0xa5c8>  // b.plast
  43dd00:	mov	w2, #0x27                  	// #39
  43dd04:	strb	w2, [x28, x1]
  43dd08:	add	x1, x27, #0x3
  43dd0c:	cmp	x26, x1
  43dd10:	b.ls	43e84c <argp_parse@@Base+0xb10c>  // b.plast
  43dd14:	mov	w2, #0x5c                  	// #92
  43dd18:	strb	w2, [x28, x1]
  43dd1c:	add	x27, x27, #0x4
  43dd20:	str	w0, [sp, #124]
  43dd24:	mov	w19, #0x0                   	// #0
  43dd28:	mov	w20, #0x30                  	// #48
  43dd2c:	b	43e4e8 <argp_parse@@Base+0xada8>
  43dd30:	cmp	x26, x27
  43dd34:	b.hi	43dd54 <argp_parse@@Base+0xa614>  // b.pmore
  43dd38:	add	x2, x27, #0x1
  43dd3c:	cbnz	w21, 43dd64 <argp_parse@@Base+0xa624>
  43dd40:	mov	w0, w19
  43dd44:	mov	w19, w21
  43dd48:	mov	x27, x2
  43dd4c:	mov	w20, #0x30                  	// #48
  43dd50:	b	43e4c0 <argp_parse@@Base+0xad80>
  43dd54:	mov	w1, #0x5c                  	// #92
  43dd58:	strb	w1, [x28, x27]
  43dd5c:	add	x2, x27, #0x1
  43dd60:	cbz	w21, 43dda0 <argp_parse@@Base+0xa660>
  43dd64:	add	x1, x24, #0x1
  43dd68:	cmp	x1, x25
  43dd6c:	b.cs	43dd88 <argp_parse@@Base+0xa648>  // b.hs, b.nlast
  43dd70:	ldr	x3, [sp, #136]
  43dd74:	ldrb	w1, [x3, x1]
  43dd78:	sub	w1, w1, #0x30
  43dd7c:	and	w1, w1, #0xff
  43dd80:	cmp	w1, #0x9
  43dd84:	b.ls	43ddb4 <argp_parse@@Base+0xa674>  // b.plast
  43dd88:	mov	w1, w0
  43dd8c:	mov	w0, w19
  43dd90:	mov	w19, w1
  43dd94:	mov	x27, x2
  43dd98:	mov	w20, #0x30                  	// #48
  43dd9c:	b	43e4d0 <argp_parse@@Base+0xad90>
  43dda0:	mov	w0, w19
  43dda4:	mov	w19, w21
  43dda8:	mov	x27, x2
  43ddac:	mov	w20, #0x30                  	// #48
  43ddb0:	b	43e4e8 <argp_parse@@Base+0xada8>
  43ddb4:	cmp	x26, x2
  43ddb8:	b.ls	43ddc4 <argp_parse@@Base+0xa684>  // b.plast
  43ddbc:	mov	w1, #0x30                  	// #48
  43ddc0:	strb	w1, [x28, x2]
  43ddc4:	add	x1, x27, #0x2
  43ddc8:	cmp	x26, x1
  43ddcc:	b.ls	43ddd8 <argp_parse@@Base+0xa698>  // b.plast
  43ddd0:	mov	w2, #0x30                  	// #48
  43ddd4:	strb	w2, [x28, x1]
  43ddd8:	add	x2, x27, #0x3
  43dddc:	b	43dd88 <argp_parse@@Base+0xa648>
  43dde0:	mov	w22, #0x0                   	// #0
  43dde4:	cmp	w23, #0x2
  43dde8:	b.eq	43de04 <argp_parse@@Base+0xa6c4>  // b.none
  43ddec:	cmp	w23, #0x5
  43ddf0:	b.eq	43de18 <argp_parse@@Base+0xa6d8>  // b.none
  43ddf4:	mov	w19, #0x0                   	// #0
  43ddf8:	mov	w0, #0x0                   	// #0
  43ddfc:	mov	w20, #0x3f                  	// #63
  43de00:	b	43e4c0 <argp_parse@@Base+0xad80>
  43de04:	ldr	w0, [sp, #112]
  43de08:	cbnz	w0, 43e7a8 <argp_parse@@Base+0xb068>
  43de0c:	mov	w19, w0
  43de10:	mov	w20, #0x3f                  	// #63
  43de14:	b	43e134 <argp_parse@@Base+0xa9f4>
  43de18:	ldr	x0, [sp, #184]
  43de1c:	tbz	w0, #2, 43e5e8 <argp_parse@@Base+0xaea8>
  43de20:	add	x4, x24, #0x2
  43de24:	cmp	x4, x25
  43de28:	b.cs	43e5f8 <argp_parse@@Base+0xaeb8>  // b.hs, b.nlast
  43de2c:	ldr	x0, [sp, #136]
  43de30:	add	x0, x0, x24
  43de34:	ldrb	w20, [x0, #1]
  43de38:	cmp	w20, #0x3f
  43de3c:	b.eq	43de50 <argp_parse@@Base+0xa710>  // b.none
  43de40:	mov	w19, #0x0                   	// #0
  43de44:	mov	w0, #0x0                   	// #0
  43de48:	mov	w20, #0x3f                  	// #63
  43de4c:	b	43e4c0 <argp_parse@@Base+0xad80>
  43de50:	ldr	x0, [sp, #136]
  43de54:	ldrb	w3, [x0, x4]
  43de58:	cmp	w3, #0x3e
  43de5c:	b.hi	43e608 <argp_parse@@Base+0xaec8>  // b.pmore
  43de60:	mov	x1, #0x1                   	// #1
  43de64:	lsl	x1, x1, x3
  43de68:	mov	w19, #0x0                   	// #0
  43de6c:	mov	w0, #0x0                   	// #0
  43de70:	mov	x2, #0xa38200000000        	// #179778741075968
  43de74:	movk	x2, #0x7000, lsl #48
  43de78:	tst	x1, x2
  43de7c:	b.eq	43e4c0 <argp_parse@@Base+0xad80>  // b.none
  43de80:	ldr	w0, [sp, #112]
  43de84:	cbnz	w0, 43e840 <argp_parse@@Base+0xb100>
  43de88:	cmp	x26, x27
  43de8c:	b.ls	43de98 <argp_parse@@Base+0xa758>  // b.plast
  43de90:	mov	w0, #0x3f                  	// #63
  43de94:	strb	w0, [x28, x27]
  43de98:	add	x0, x27, #0x1
  43de9c:	cmp	x26, x0
  43dea0:	b.ls	43deac <argp_parse@@Base+0xa76c>  // b.plast
  43dea4:	mov	w1, #0x22                  	// #34
  43dea8:	strb	w1, [x28, x0]
  43deac:	add	x0, x27, #0x2
  43deb0:	cmp	x26, x0
  43deb4:	b.ls	43dec0 <argp_parse@@Base+0xa780>  // b.plast
  43deb8:	mov	w1, #0x22                  	// #34
  43debc:	strb	w1, [x28, x0]
  43dec0:	add	x0, x27, #0x3
  43dec4:	cmp	x26, x0
  43dec8:	b.ls	43ded4 <argp_parse@@Base+0xa794>  // b.plast
  43decc:	mov	w1, #0x3f                  	// #63
  43ded0:	strb	w1, [x28, x0]
  43ded4:	add	x27, x27, #0x4
  43ded8:	ldr	w0, [sp, #112]
  43dedc:	mov	w19, w0
  43dee0:	mov	w20, w3
  43dee4:	mov	x24, x4
  43dee8:	b	43e4c0 <argp_parse@@Base+0xad80>
  43deec:	mov	w22, #0x0                   	// #0
  43def0:	mov	w20, #0x8                   	// #8
  43def4:	mov	w0, #0x62                  	// #98
  43def8:	b	43df28 <argp_parse@@Base+0xa7e8>
  43defc:	mov	w22, #0x0                   	// #0
  43df00:	mov	w20, #0xc                   	// #12
  43df04:	mov	w0, #0x66                  	// #102
  43df08:	b	43df28 <argp_parse@@Base+0xa7e8>
  43df0c:	mov	w22, #0x0                   	// #0
  43df10:	mov	w20, #0xd                   	// #13
  43df14:	mov	w0, #0x72                  	// #114
  43df18:	ldr	w1, [sp, #112]
  43df1c:	cmp	w1, #0x0
  43df20:	ccmp	w23, #0x2, #0x0, ne  // ne = any
  43df24:	b.eq	43e000 <argp_parse@@Base+0xa8c0>  // b.none
  43df28:	ldr	w1, [sp, #132]
  43df2c:	cbnz	w1, 43e63c <argp_parse@@Base+0xaefc>
  43df30:	mov	w19, w1
  43df34:	mov	w0, w1
  43df38:	b	43e4c0 <argp_parse@@Base+0xad80>
  43df3c:	mov	w22, #0x0                   	// #0
  43df40:	mov	w20, #0x9                   	// #9
  43df44:	mov	w0, #0x74                  	// #116
  43df48:	b	43df18 <argp_parse@@Base+0xa7d8>
  43df4c:	mov	w22, #0x0                   	// #0
  43df50:	mov	w20, #0xb                   	// #11
  43df54:	mov	w0, #0x76                  	// #118
  43df58:	b	43df28 <argp_parse@@Base+0xa7e8>
  43df5c:	mov	w22, #0x0                   	// #0
  43df60:	cmp	w23, #0x2
  43df64:	b.eq	43df90 <argp_parse@@Base+0xa850>  // b.none
  43df68:	ldr	w0, [sp, #132]
  43df6c:	cmp	w0, #0x0
  43df70:	ldr	w0, [sp, #112]
  43df74:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  43df78:	ldr	w0, [sp, #176]
  43df7c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  43df80:	b.ne	43e654 <argp_parse@@Base+0xaf14>  // b.any
  43df84:	mov	w20, #0x5c                  	// #92
  43df88:	mov	w0, w20
  43df8c:	b	43df28 <argp_parse@@Base+0xa7e8>
  43df90:	ldr	w0, [sp, #112]
  43df94:	cbnz	w0, 43e7b4 <argp_parse@@Base+0xb074>
  43df98:	mov	w19, w0
  43df9c:	mov	w20, #0x5c                  	// #92
  43dfa0:	eor	w0, w0, #0x1
  43dfa4:	ldr	w1, [sp, #124]
  43dfa8:	and	w0, w1, w0
  43dfac:	tst	w0, #0xff
  43dfb0:	b.eq	43e560 <argp_parse@@Base+0xae20>  // b.none
  43dfb4:	cmp	x26, x27
  43dfb8:	b.ls	43dfc4 <argp_parse@@Base+0xa884>  // b.plast
  43dfbc:	mov	w0, #0x27                  	// #39
  43dfc0:	strb	w0, [x28, x27]
  43dfc4:	add	x0, x27, #0x1
  43dfc8:	cmp	x26, x0
  43dfcc:	b.ls	43dfd8 <argp_parse@@Base+0xa898>  // b.plast
  43dfd0:	mov	w1, #0x27                  	// #39
  43dfd4:	strb	w1, [x28, x0]
  43dfd8:	add	x27, x27, #0x2
  43dfdc:	str	wzr, [sp, #124]
  43dfe0:	b	43e560 <argp_parse@@Base+0xae20>
  43dfe4:	mov	w0, #0x6e                  	// #110
  43dfe8:	b	43df18 <argp_parse@@Base+0xa7d8>
  43dfec:	mov	w0, #0x6e                  	// #110
  43dff0:	b	43df18 <argp_parse@@Base+0xa7d8>
  43dff4:	mov	w22, #0x0                   	// #0
  43dff8:	mov	w0, #0x6e                  	// #110
  43dffc:	b	43df18 <argp_parse@@Base+0xa7d8>
  43e000:	mov	x24, x25
  43e004:	mov	w25, #0x2                   	// #2
  43e008:	b	43e7d4 <argp_parse@@Base+0xb094>
  43e00c:	mov	w0, #0x61                  	// #97
  43e010:	b	43df28 <argp_parse@@Base+0xa7e8>
  43e014:	mov	w0, #0x61                  	// #97
  43e018:	b	43df28 <argp_parse@@Base+0xa7e8>
  43e01c:	mov	w22, #0x0                   	// #0
  43e020:	cmp	x25, #0x1
  43e024:	cset	w0, ne  // ne = any
  43e028:	cmn	x25, #0x1
  43e02c:	b.eq	43e044 <argp_parse@@Base+0xa904>  // b.none
  43e030:	cbnz	w0, 43e614 <argp_parse@@Base+0xaed4>
  43e034:	cbz	x24, 43e06c <argp_parse@@Base+0xa92c>
  43e038:	mov	w19, #0x0                   	// #0
  43e03c:	mov	w0, #0x0                   	// #0
  43e040:	b	43e4c0 <argp_parse@@Base+0xad80>
  43e044:	ldr	x0, [sp, #136]
  43e048:	ldrb	w0, [x0, #1]
  43e04c:	cmp	w0, #0x0
  43e050:	cset	w0, ne  // ne = any
  43e054:	b	43e030 <argp_parse@@Base+0xa8f0>
  43e058:	mov	w22, #0x0                   	// #0
  43e05c:	b	43e034 <argp_parse@@Base+0xa8f4>
  43e060:	mov	w22, #0x0                   	// #0
  43e064:	b	43e06c <argp_parse@@Base+0xa92c>
  43e068:	mov	w19, w22
  43e06c:	cmp	w23, #0x2
  43e070:	cset	w0, eq  // eq = none
  43e074:	ldr	w1, [sp, #112]
  43e078:	ands	w0, w1, w0
  43e07c:	b.eq	43e4c0 <argp_parse@@Base+0xad80>  // b.none
  43e080:	mov	x24, x25
  43e084:	mov	w25, #0x2                   	// #2
  43e088:	b	43e7d4 <argp_parse@@Base+0xb094>
  43e08c:	ldr	w19, [sp, #112]
  43e090:	b	43e06c <argp_parse@@Base+0xa92c>
  43e094:	mov	w22, #0x0                   	// #0
  43e098:	mov	w19, #0x0                   	// #0
  43e09c:	b	43e06c <argp_parse@@Base+0xa92c>
  43e0a0:	mov	w22, #0x0                   	// #0
  43e0a4:	cmp	w23, #0x2
  43e0a8:	b.eq	43e0bc <argp_parse@@Base+0xa97c>  // b.none
  43e0ac:	str	w19, [sp, #180]
  43e0b0:	mov	w0, #0x0                   	// #0
  43e0b4:	mov	w20, #0x27                  	// #39
  43e0b8:	b	43e4c0 <argp_parse@@Base+0xad80>
  43e0bc:	ldr	w0, [sp, #112]
  43e0c0:	cbnz	w0, 43e7c0 <argp_parse@@Base+0xb080>
  43e0c4:	cmp	x26, #0x0
  43e0c8:	mov	x0, #0x0                   	// #0
  43e0cc:	ldr	x1, [sp, #192]
  43e0d0:	ccmp	x1, #0x0, #0x0, ne  // ne = any
  43e0d4:	b.eq	43e104 <argp_parse@@Base+0xa9c4>  // b.none
  43e0d8:	cmp	x26, x27
  43e0dc:	b.ls	43e0e8 <argp_parse@@Base+0xa9a8>  // b.plast
  43e0e0:	mov	w0, #0x27                  	// #39
  43e0e4:	strb	w0, [x28, x27]
  43e0e8:	add	x0, x27, #0x1
  43e0ec:	cmp	x26, x0
  43e0f0:	b.ls	43e13c <argp_parse@@Base+0xa9fc>  // b.plast
  43e0f4:	mov	w1, #0x5c                  	// #92
  43e0f8:	strb	w1, [x28, x0]
  43e0fc:	mov	x0, x26
  43e100:	ldr	x26, [sp, #192]
  43e104:	add	x1, x27, #0x2
  43e108:	cmp	x1, x0
  43e10c:	b.cs	43e118 <argp_parse@@Base+0xa9d8>  // b.hs, b.nlast
  43e110:	mov	w2, #0x27                  	// #39
  43e114:	strb	w2, [x28, x1]
  43e118:	add	x27, x27, #0x3
  43e11c:	str	w19, [sp, #180]
  43e120:	ldr	w1, [sp, #112]
  43e124:	str	w1, [sp, #124]
  43e128:	str	x26, [sp, #192]
  43e12c:	mov	x26, x0
  43e130:	mov	w20, #0x27                  	// #39
  43e134:	mov	w0, #0x0                   	// #0
  43e138:	b	43e4e8 <argp_parse@@Base+0xada8>
  43e13c:	mov	x0, x26
  43e140:	ldr	x26, [sp, #192]
  43e144:	b	43e104 <argp_parse@@Base+0xa9c4>
  43e148:	mov	w22, #0x0                   	// #0
  43e14c:	ldr	x0, [sp, #168]
  43e150:	cmp	x0, #0x1
  43e154:	b.ne	43e190 <argp_parse@@Base+0xaa50>  // b.any
  43e158:	bl	404750 <__ctype_b_loc@plt>
  43e15c:	and	x1, x20, #0xff
  43e160:	ldr	x0, [x0]
  43e164:	ldrh	w19, [x0, x1, lsl #1]
  43e168:	ubfx	x19, x19, #14, #1
  43e16c:	ldr	x0, [sp, #168]
  43e170:	mov	x2, x0
  43e174:	eor	w0, w19, #0x1
  43e178:	ldr	w1, [sp, #132]
  43e17c:	and	w0, w1, w0
  43e180:	ands	w0, w0, #0xff
  43e184:	b.eq	43e4c0 <argp_parse@@Base+0xad80>  // b.none
  43e188:	mov	w19, #0x0                   	// #0
  43e18c:	b	43e33c <argp_parse@@Base+0xabfc>
  43e190:	str	xzr, [sp, #232]
  43e194:	cmn	x25, #0x1
  43e198:	b.eq	43e1bc <argp_parse@@Base+0xaa7c>  // b.none
  43e19c:	mov	x0, #0x0                   	// #0
  43e1a0:	str	w21, [sp, #176]
  43e1a4:	str	w20, [sp, #208]
  43e1a8:	str	w22, [sp, #212]
  43e1ac:	mov	x22, x0
  43e1b0:	str	x27, [sp, #216]
  43e1b4:	ldr	w27, [sp, #112]
  43e1b8:	b	43e28c <argp_parse@@Base+0xab4c>
  43e1bc:	ldr	x0, [sp, #136]
  43e1c0:	bl	403ff0 <strlen@plt>
  43e1c4:	mov	x25, x0
  43e1c8:	b	43e19c <argp_parse@@Base+0xaa5c>
  43e1cc:	ldr	w20, [sp, #208]
  43e1d0:	mov	x2, x22
  43e1d4:	mov	x0, x21
  43e1d8:	ldr	w21, [sp, #176]
  43e1dc:	ldr	w22, [sp, #212]
  43e1e0:	ldr	x27, [sp, #216]
  43e1e4:	mov	w19, #0x0                   	// #0
  43e1e8:	cmp	x0, x25
  43e1ec:	b.cs	43e334 <argp_parse@@Base+0xabf4>  // b.hs, b.nlast
  43e1f0:	mov	x1, x2
  43e1f4:	ldr	x2, [sp, #136]
  43e1f8:	ldrb	w0, [x2, x0]
  43e1fc:	cbz	w0, 43e21c <argp_parse@@Base+0xaadc>
  43e200:	add	x1, x1, #0x1
  43e204:	add	x0, x24, x1
  43e208:	cmp	x25, x0
  43e20c:	b.hi	43e1f8 <argp_parse@@Base+0xaab8>  // b.pmore
  43e210:	mov	x2, x1
  43e214:	mov	w19, #0x0                   	// #0
  43e218:	b	43e334 <argp_parse@@Base+0xabf4>
  43e21c:	mov	x2, x1
  43e220:	mov	w19, #0x0                   	// #0
  43e224:	b	43e334 <argp_parse@@Base+0xabf4>
  43e228:	add	x1, x1, #0x1
  43e22c:	cmp	x1, x21
  43e230:	b.eq	43e26c <argp_parse@@Base+0xab2c>  // b.none
  43e234:	ldrb	w0, [x1]
  43e238:	sub	w0, w0, #0x5b
  43e23c:	and	w0, w0, #0xff
  43e240:	cmp	w0, #0x21
  43e244:	b.hi	43e228 <argp_parse@@Base+0xaae8>  // b.pmore
  43e248:	mov	x2, #0x1                   	// #1
  43e24c:	lsl	x0, x2, x0
  43e250:	mov	x2, #0x2b                  	// #43
  43e254:	movk	x2, #0x2, lsl #32
  43e258:	tst	x0, x2
  43e25c:	b.eq	43e228 <argp_parse@@Base+0xaae8>  // b.none
  43e260:	mov	x24, x25
  43e264:	mov	w25, #0x2                   	// #2
  43e268:	b	43e7d4 <argp_parse@@Base+0xb094>
  43e26c:	ldr	w0, [sp, #228]
  43e270:	bl	404a70 <iswprint@plt>
  43e274:	cmp	w0, #0x0
  43e278:	csel	w19, w19, wzr, ne  // ne = any
  43e27c:	add	x22, x22, x20
  43e280:	add	x0, sp, #0xe8
  43e284:	bl	404680 <mbsinit@plt>
  43e288:	cbnz	w0, 43e2ec <argp_parse@@Base+0xabac>
  43e28c:	add	x21, x24, x22
  43e290:	add	x3, sp, #0xe8
  43e294:	sub	x2, x25, x21
  43e298:	ldr	x0, [sp, #136]
  43e29c:	add	x1, x0, x21
  43e2a0:	add	x0, sp, #0xe4
  43e2a4:	bl	440da8 <argp_parse@@Base+0xd668>
  43e2a8:	mov	x20, x0
  43e2ac:	cbz	x0, 43e320 <argp_parse@@Base+0xabe0>
  43e2b0:	cmn	x0, #0x1
  43e2b4:	b.eq	43e304 <argp_parse@@Base+0xabc4>  // b.none
  43e2b8:	cmn	x0, #0x2
  43e2bc:	b.eq	43e1cc <argp_parse@@Base+0xaa8c>  // b.none
  43e2c0:	cmp	w27, #0x0
  43e2c4:	ccmp	w23, #0x2, #0x0, ne  // ne = any
  43e2c8:	b.ne	43e26c <argp_parse@@Base+0xab2c>  // b.any
  43e2cc:	cmp	x0, #0x1
  43e2d0:	b.ls	43e26c <argp_parse@@Base+0xab2c>  // b.plast
  43e2d4:	add	x1, x21, #0x1
  43e2d8:	ldr	x0, [sp, #136]
  43e2dc:	add	x1, x0, x1
  43e2e0:	add	x0, x0, x20
  43e2e4:	add	x21, x0, x21
  43e2e8:	b	43e234 <argp_parse@@Base+0xaaf4>
  43e2ec:	ldr	w21, [sp, #176]
  43e2f0:	ldr	w20, [sp, #208]
  43e2f4:	mov	x2, x22
  43e2f8:	ldr	w22, [sp, #212]
  43e2fc:	ldr	x27, [sp, #216]
  43e300:	b	43e334 <argp_parse@@Base+0xabf4>
  43e304:	ldr	w21, [sp, #176]
  43e308:	ldr	w20, [sp, #208]
  43e30c:	mov	x2, x22
  43e310:	ldr	w22, [sp, #212]
  43e314:	ldr	x27, [sp, #216]
  43e318:	mov	w19, #0x0                   	// #0
  43e31c:	b	43e334 <argp_parse@@Base+0xabf4>
  43e320:	ldr	w21, [sp, #176]
  43e324:	ldr	w20, [sp, #208]
  43e328:	mov	x2, x22
  43e32c:	ldr	w22, [sp, #212]
  43e330:	ldr	x27, [sp, #216]
  43e334:	cmp	x2, #0x1
  43e338:	b.ls	43e174 <argp_parse@@Base+0xaa34>  // b.plast
  43e33c:	add	x5, x24, x2
  43e340:	mov	w0, #0x0                   	// #0
  43e344:	eor	w1, w19, #0x1
  43e348:	ldr	w2, [sp, #132]
  43e34c:	and	w1, w2, w1
  43e350:	and	w1, w1, #0xff
  43e354:	mov	w3, w1
  43e358:	mov	w6, #0x5c                  	// #92
  43e35c:	mov	w7, #0x24                  	// #36
  43e360:	ldr	w9, [sp, #112]
  43e364:	ldr	w4, [sp, #124]
  43e368:	ldr	x8, [sp, #136]
  43e36c:	b	43e3e8 <argp_parse@@Base+0xaca8>
  43e370:	cbz	w22, 43e384 <argp_parse@@Base+0xac44>
  43e374:	cmp	x26, x27
  43e378:	b.ls	43e380 <argp_parse@@Base+0xac40>  // b.plast
  43e37c:	strb	w6, [x28, x27]
  43e380:	add	x27, x27, #0x1
  43e384:	add	x2, x24, #0x1
  43e388:	cmp	x2, x5
  43e38c:	b.cs	43e4a0 <argp_parse@@Base+0xad60>  // b.hs, b.nlast
  43e390:	eor	w22, w0, #0x1
  43e394:	and	w22, w4, w22
  43e398:	ands	w22, w22, #0xff
  43e39c:	b.eq	43e4b4 <argp_parse@@Base+0xad74>  // b.none
  43e3a0:	cmp	x26, x27
  43e3a4:	b.ls	43e3b0 <argp_parse@@Base+0xac70>  // b.plast
  43e3a8:	mov	w4, #0x27                  	// #39
  43e3ac:	strb	w4, [x28, x27]
  43e3b0:	add	x4, x27, #0x1
  43e3b4:	cmp	x26, x4
  43e3b8:	b.ls	43e3c4 <argp_parse@@Base+0xac84>  // b.plast
  43e3bc:	mov	w10, #0x27                  	// #39
  43e3c0:	strb	w10, [x28, x4]
  43e3c4:	add	x27, x27, #0x2
  43e3c8:	mov	w22, w3
  43e3cc:	mov	x24, x2
  43e3d0:	mov	w4, w3
  43e3d4:	cmp	x26, x27
  43e3d8:	b.ls	43e3e0 <argp_parse@@Base+0xaca0>  // b.plast
  43e3dc:	strb	w20, [x28, x27]
  43e3e0:	add	x27, x27, #0x1
  43e3e4:	ldrb	w20, [x8, x24]
  43e3e8:	cbz	w1, 43e370 <argp_parse@@Base+0xac30>
  43e3ec:	cbnz	w9, 43e77c <argp_parse@@Base+0xb03c>
  43e3f0:	cmp	w23, #0x2
  43e3f4:	cset	w0, eq  // eq = none
  43e3f8:	eor	w2, w4, #0x1
  43e3fc:	ands	w0, w0, w2
  43e400:	b.eq	43e440 <argp_parse@@Base+0xad00>  // b.none
  43e404:	cmp	x26, x27
  43e408:	b.ls	43e414 <argp_parse@@Base+0xacd4>  // b.plast
  43e40c:	mov	w2, #0x27                  	// #39
  43e410:	strb	w2, [x28, x27]
  43e414:	add	x2, x27, #0x1
  43e418:	cmp	x26, x2
  43e41c:	b.ls	43e424 <argp_parse@@Base+0xace4>  // b.plast
  43e420:	strb	w7, [x28, x2]
  43e424:	add	x2, x27, #0x2
  43e428:	cmp	x26, x2
  43e42c:	b.ls	43e438 <argp_parse@@Base+0xacf8>  // b.plast
  43e430:	mov	w4, #0x27                  	// #39
  43e434:	strb	w4, [x28, x2]
  43e438:	add	x27, x27, #0x3
  43e43c:	mov	w4, w0
  43e440:	cmp	x26, x27
  43e444:	b.ls	43e44c <argp_parse@@Base+0xad0c>  // b.plast
  43e448:	strb	w6, [x28, x27]
  43e44c:	add	x0, x27, #0x1
  43e450:	cmp	x26, x0
  43e454:	b.ls	43e464 <argp_parse@@Base+0xad24>  // b.plast
  43e458:	lsr	w2, w20, #6
  43e45c:	add	w2, w2, #0x30
  43e460:	strb	w2, [x28, x0]
  43e464:	add	x0, x27, #0x2
  43e468:	cmp	x26, x0
  43e46c:	b.ls	43e47c <argp_parse@@Base+0xad3c>  // b.plast
  43e470:	ubfx	x2, x20, #3, #3
  43e474:	add	w2, w2, #0x30
  43e478:	strb	w2, [x28, x0]
  43e47c:	add	x27, x27, #0x3
  43e480:	and	w20, w20, #0x7
  43e484:	add	w20, w20, #0x30
  43e488:	add	x2, x24, #0x1
  43e48c:	cmp	x5, x2
  43e490:	b.ls	43e4a8 <argp_parse@@Base+0xad68>  // b.plast
  43e494:	mov	w0, w3
  43e498:	mov	x24, x2
  43e49c:	b	43e3d4 <argp_parse@@Base+0xac94>
  43e4a0:	str	w4, [sp, #124]
  43e4a4:	b	43dfa0 <argp_parse@@Base+0xa860>
  43e4a8:	str	w4, [sp, #124]
  43e4ac:	mov	w0, w1
  43e4b0:	b	43dfa0 <argp_parse@@Base+0xa860>
  43e4b4:	mov	x24, x2
  43e4b8:	b	43e3d4 <argp_parse@@Base+0xac94>
  43e4bc:	mov	w0, w22
  43e4c0:	cmp	w21, #0x0
  43e4c4:	ldr	w1, [sp, #112]
  43e4c8:	ccmp	w1, #0x0, #0x0, eq  // eq = none
  43e4cc:	b.eq	43e4e8 <argp_parse@@Base+0xada8>  // b.none
  43e4d0:	ldr	x2, [sp, #152]
  43e4d4:	cbz	x2, 43e4e8 <argp_parse@@Base+0xada8>
  43e4d8:	ubfx	x1, x20, #5, #8
  43e4dc:	ldr	w1, [x2, x1, lsl #2]
  43e4e0:	lsr	w1, w1, w20
  43e4e4:	tbnz	w1, #0, 43e4ec <argp_parse@@Base+0xadac>
  43e4e8:	cbz	w22, 43dfa0 <argp_parse@@Base+0xa860>
  43e4ec:	ldr	w0, [sp, #112]
  43e4f0:	cbnz	w0, 43e7cc <argp_parse@@Base+0xb08c>
  43e4f4:	cmp	w23, #0x2
  43e4f8:	cset	w0, eq  // eq = none
  43e4fc:	ldr	w1, [sp, #124]
  43e500:	eor	w1, w1, #0x1
  43e504:	ands	w0, w0, w1
  43e508:	b.eq	43e54c <argp_parse@@Base+0xae0c>  // b.none
  43e50c:	cmp	x26, x27
  43e510:	b.ls	43e51c <argp_parse@@Base+0xaddc>  // b.plast
  43e514:	mov	w1, #0x27                  	// #39
  43e518:	strb	w1, [x28, x27]
  43e51c:	add	x1, x27, #0x1
  43e520:	cmp	x26, x1
  43e524:	b.ls	43e530 <argp_parse@@Base+0xadf0>  // b.plast
  43e528:	mov	w2, #0x24                  	// #36
  43e52c:	strb	w2, [x28, x1]
  43e530:	add	x1, x27, #0x2
  43e534:	cmp	x26, x1
  43e538:	b.ls	43e544 <argp_parse@@Base+0xae04>  // b.plast
  43e53c:	mov	w2, #0x27                  	// #39
  43e540:	strb	w2, [x28, x1]
  43e544:	add	x27, x27, #0x3
  43e548:	str	w0, [sp, #124]
  43e54c:	cmp	x26, x27
  43e550:	b.ls	43e55c <argp_parse@@Base+0xae1c>  // b.plast
  43e554:	mov	w0, #0x5c                  	// #92
  43e558:	strb	w0, [x28, x27]
  43e55c:	add	x27, x27, #0x1
  43e560:	cmp	x27, x26
  43e564:	b.cs	43e56c <argp_parse@@Base+0xae2c>  // b.hs, b.nlast
  43e568:	strb	w20, [x28, x27]
  43e56c:	add	x27, x27, #0x1
  43e570:	cmp	w19, #0x0
  43e574:	ldr	w0, [sp, #128]
  43e578:	csel	w0, w0, w19, ne  // ne = any
  43e57c:	str	w0, [sp, #128]
  43e580:	add	x24, x24, #0x1
  43e584:	cmp	x25, x24
  43e588:	cset	w19, ne  // ne = any
  43e58c:	cmn	x25, #0x1
  43e590:	b.eq	43e664 <argp_parse@@Base+0xaf24>  // b.none
  43e594:	cbz	w19, 43e678 <argp_parse@@Base+0xaf38>
  43e598:	cmp	w23, #0x2
  43e59c:	cset	w21, ne  // ne = any
  43e5a0:	ldr	w0, [sp, #132]
  43e5a4:	and	w21, w0, w21
  43e5a8:	ldr	x0, [sp, #144]
  43e5ac:	cmp	x0, #0x0
  43e5b0:	cset	w0, ne  // ne = any
  43e5b4:	str	w0, [sp, #176]
  43e5b8:	csel	w22, w21, wzr, ne  // ne = any
  43e5bc:	cbnz	w22, 43dc10 <argp_parse@@Base+0xa4d0>
  43e5c0:	ldr	x0, [sp, #136]
  43e5c4:	ldrb	w20, [x0, x24]
  43e5c8:	cmp	w20, #0x7e
  43e5cc:	b.hi	43e14c <argp_parse@@Base+0xaa0c>  // b.pmore
  43e5d0:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43e5d4:	add	x0, x0, #0x928
  43e5d8:	ldrh	w0, [x0, w20, uxtw #1]
  43e5dc:	adr	x1, 43e5e8 <argp_parse@@Base+0xaea8>
  43e5e0:	add	x0, x1, w0, sxth #2
  43e5e4:	br	x0
  43e5e8:	mov	w19, #0x0                   	// #0
  43e5ec:	mov	w0, #0x0                   	// #0
  43e5f0:	mov	w20, #0x3f                  	// #63
  43e5f4:	b	43e4c0 <argp_parse@@Base+0xad80>
  43e5f8:	mov	w19, #0x0                   	// #0
  43e5fc:	mov	w0, #0x0                   	// #0
  43e600:	mov	w20, #0x3f                  	// #63
  43e604:	b	43e4c0 <argp_parse@@Base+0xad80>
  43e608:	mov	w19, #0x0                   	// #0
  43e60c:	mov	w0, #0x0                   	// #0
  43e610:	b	43e4c0 <argp_parse@@Base+0xad80>
  43e614:	mov	w19, #0x0                   	// #0
  43e618:	mov	w0, #0x0                   	// #0
  43e61c:	b	43e4c0 <argp_parse@@Base+0xad80>
  43e620:	mov	w19, w22
  43e624:	ldr	w0, [sp, #112]
  43e628:	b	43e4c0 <argp_parse@@Base+0xad80>
  43e62c:	mov	w19, w22
  43e630:	mov	w22, #0x0                   	// #0
  43e634:	mov	w0, #0x0                   	// #0
  43e638:	b	43e4c0 <argp_parse@@Base+0xad80>
  43e63c:	mov	w20, w0
  43e640:	mov	w19, #0x0                   	// #0
  43e644:	b	43e4ec <argp_parse@@Base+0xadac>
  43e648:	mov	w19, #0x0                   	// #0
  43e64c:	mov	w20, #0x61                  	// #97
  43e650:	b	43e4ec <argp_parse@@Base+0xadac>
  43e654:	mov	w19, #0x0                   	// #0
  43e658:	mov	w0, #0x0                   	// #0
  43e65c:	mov	w20, #0x5c                  	// #92
  43e660:	b	43dfa0 <argp_parse@@Base+0xa860>
  43e664:	ldr	x0, [sp, #136]
  43e668:	ldrb	w0, [x0, x24]
  43e66c:	cmp	w0, #0x0
  43e670:	cset	w19, ne  // ne = any
  43e674:	b	43e594 <argp_parse@@Base+0xae54>
  43e678:	cmp	w23, #0x2
  43e67c:	cset	w1, eq  // eq = none
  43e680:	cmp	w1, #0x0
  43e684:	ldr	w0, [sp, #112]
  43e688:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  43e68c:	ccmp	x27, #0x0, #0x0, ne  // ne = any
  43e690:	b.eq	43e790 <argp_parse@@Base+0xb050>  // b.none
  43e694:	eor	w0, w0, #0x1
  43e698:	and	w0, w0, #0xff
  43e69c:	cmp	w1, #0x0
  43e6a0:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  43e6a4:	cset	w1, ne  // ne = any
  43e6a8:	ldr	w2, [sp, #180]
  43e6ac:	ands	w1, w2, w1
  43e6b0:	b.eq	43e724 <argp_parse@@Base+0xafe4>  // b.none
  43e6b4:	ldr	w0, [sp, #128]
  43e6b8:	cbnz	w0, 43e6ec <argp_parse@@Base+0xafac>
  43e6bc:	cmp	x26, #0x0
  43e6c0:	cset	w0, eq  // eq = none
  43e6c4:	ldr	x2, [sp, #192]
  43e6c8:	cmp	x2, #0x0
  43e6cc:	csel	w0, w0, wzr, ne  // ne = any
  43e6d0:	str	w0, [sp, #180]
  43e6d4:	mov	w23, #0x2                   	// #2
  43e6d8:	cbz	w0, 43e720 <argp_parse@@Base+0xafe0>
  43e6dc:	ldr	w0, [sp, #128]
  43e6e0:	str	w0, [sp, #112]
  43e6e4:	ldr	x26, [sp, #192]
  43e6e8:	b	43d9b4 <argp_parse@@Base+0xa274>
  43e6ec:	ldr	x0, [sp, #240]
  43e6f0:	str	x0, [sp]
  43e6f4:	ldr	x7, [sp, #200]
  43e6f8:	ldr	x6, [sp, #152]
  43e6fc:	ldr	w5, [sp, #184]
  43e700:	mov	w4, #0x5                   	// #5
  43e704:	mov	x3, x25
  43e708:	ldr	x2, [sp, #136]
  43e70c:	ldr	x1, [sp, #192]
  43e710:	mov	x0, x28
  43e714:	bl	43d934 <argp_parse@@Base+0xa1f4>
  43e718:	mov	x27, x0
  43e71c:	b	43e81c <argp_parse@@Base+0xb0dc>
  43e720:	mov	w0, w1
  43e724:	ldr	x1, [sp, #160]
  43e728:	cmp	x1, #0x0
  43e72c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  43e730:	b.eq	43e76c <argp_parse@@Base+0xb02c>  // b.none
  43e734:	mov	x0, x1
  43e738:	ldrb	w2, [x1]
  43e73c:	cbz	w2, 43e76c <argp_parse@@Base+0xb02c>
  43e740:	mov	x1, x27
  43e744:	sub	x0, x0, x27
  43e748:	b	43e758 <argp_parse@@Base+0xb018>
  43e74c:	add	x1, x1, #0x1
  43e750:	ldrb	w2, [x0, x1]
  43e754:	cbz	w2, 43e768 <argp_parse@@Base+0xb028>
  43e758:	cmp	x26, x1
  43e75c:	b.ls	43e74c <argp_parse@@Base+0xb00c>  // b.plast
  43e760:	strb	w2, [x28, x1]
  43e764:	b	43e74c <argp_parse@@Base+0xb00c>
  43e768:	mov	x27, x1
  43e76c:	cmp	x26, x27
  43e770:	b.ls	43e81c <argp_parse@@Base+0xb0dc>  // b.plast
  43e774:	strb	wzr, [x28, x27]
  43e778:	b	43e81c <argp_parse@@Base+0xb0dc>
  43e77c:	mov	x24, x25
  43e780:	mov	w25, w23
  43e784:	ldr	w0, [sp, #112]
  43e788:	str	w0, [sp, #132]
  43e78c:	b	43e7d4 <argp_parse@@Base+0xb094>
  43e790:	mov	x24, x25
  43e794:	mov	w25, #0x2                   	// #2
  43e798:	b	43e7d4 <argp_parse@@Base+0xb094>
  43e79c:	mov	x24, x25
  43e7a0:	mov	w25, w23
  43e7a4:	b	43e7d4 <argp_parse@@Base+0xb094>
  43e7a8:	mov	x24, x25
  43e7ac:	mov	w25, w23
  43e7b0:	b	43e7d4 <argp_parse@@Base+0xb094>
  43e7b4:	mov	x24, x25
  43e7b8:	mov	w25, w23
  43e7bc:	b	43e7d4 <argp_parse@@Base+0xb094>
  43e7c0:	mov	x24, x25
  43e7c4:	mov	w25, w23
  43e7c8:	b	43e7d4 <argp_parse@@Base+0xb094>
  43e7cc:	mov	x24, x25
  43e7d0:	mov	w25, w23
  43e7d4:	ldr	w0, [sp, #132]
  43e7d8:	cmp	w0, #0x0
  43e7dc:	ccmp	w25, #0x2, #0x0, ne  // ne = any
  43e7e0:	mov	w0, #0x4                   	// #4
  43e7e4:	csel	w25, w25, w0, ne  // ne = any
  43e7e8:	ldr	x0, [sp, #240]
  43e7ec:	str	x0, [sp]
  43e7f0:	ldr	x7, [sp, #200]
  43e7f4:	mov	x6, #0x0                   	// #0
  43e7f8:	ldr	w0, [sp, #184]
  43e7fc:	and	w5, w0, #0xfffffffd
  43e800:	mov	w4, w25
  43e804:	mov	x3, x24
  43e808:	ldr	x2, [sp, #136]
  43e80c:	mov	x1, x26
  43e810:	mov	x0, x28
  43e814:	bl	43d934 <argp_parse@@Base+0xa1f4>
  43e818:	mov	x27, x0
  43e81c:	mov	x0, x27
  43e820:	ldp	x19, x20, [sp, #32]
  43e824:	ldp	x21, x22, [sp, #48]
  43e828:	ldp	x23, x24, [sp, #64]
  43e82c:	ldp	x25, x26, [sp, #80]
  43e830:	ldp	x27, x28, [sp, #96]
  43e834:	ldp	x29, x30, [sp, #16]
  43e838:	add	sp, sp, #0xf0
  43e83c:	ret
  43e840:	mov	x24, x25
  43e844:	mov	w25, w23
  43e848:	b	43e7e8 <argp_parse@@Base+0xb0a8>
  43e84c:	add	x27, x27, #0x4
  43e850:	str	w0, [sp, #124]
  43e854:	mov	w19, #0x0                   	// #0
  43e858:	mov	w20, #0x30                  	// #48
  43e85c:	b	43e4c0 <argp_parse@@Base+0xad80>
  43e860:	ldr	x0, [sp, #136]
  43e864:	ldrb	w20, [x0, x24]
  43e868:	cmp	w20, #0x7e
  43e86c:	b.hi	43e148 <argp_parse@@Base+0xaa08>  // b.pmore
  43e870:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43e874:	add	x0, x0, #0xa28
  43e878:	ldrh	w0, [x0, w20, uxtw #1]
  43e87c:	adr	x1, 43e888 <argp_parse@@Base+0xb148>
  43e880:	add	x0, x1, w0, sxth #2
  43e884:	br	x0
  43e888:	sub	sp, sp, #0x80
  43e88c:	stp	x29, x30, [sp, #16]
  43e890:	add	x29, sp, #0x10
  43e894:	stp	x19, x20, [sp, #32]
  43e898:	stp	x21, x22, [sp, #48]
  43e89c:	stp	x23, x24, [sp, #64]
  43e8a0:	stp	x25, x26, [sp, #80]
  43e8a4:	stp	x27, x28, [sp, #96]
  43e8a8:	mov	w19, w0
  43e8ac:	str	x1, [sp, #112]
  43e8b0:	str	x2, [sp, #120]
  43e8b4:	mov	x20, x3
  43e8b8:	bl	404ad0 <__errno_location@plt>
  43e8bc:	mov	x23, x0
  43e8c0:	ldr	w28, [x0]
  43e8c4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43e8c8:	ldr	x21, [x0, #976]
  43e8cc:	tbnz	w19, #31, 43ea10 <argp_parse@@Base+0xb2d0>
  43e8d0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43e8d4:	ldr	w0, [x0, #984]
  43e8d8:	cmp	w0, w19
  43e8dc:	b.gt	43e940 <argp_parse@@Base+0xb200>
  43e8e0:	mov	w0, #0x7fffffff            	// #2147483647
  43e8e4:	cmp	w19, w0
  43e8e8:	b.eq	43ea14 <argp_parse@@Base+0xb2d4>  // b.none
  43e8ec:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43e8f0:	add	x0, x0, #0x3d0
  43e8f4:	add	x0, x0, #0x10
  43e8f8:	cmp	x21, x0
  43e8fc:	b.eq	43ea18 <argp_parse@@Base+0xb2d8>  // b.none
  43e900:	add	w24, w19, #0x1
  43e904:	sbfiz	x1, x24, #4, #32
  43e908:	mov	x0, x21
  43e90c:	bl	43ff70 <argp_parse@@Base+0xc830>
  43e910:	mov	x21, x0
  43e914:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43e918:	str	x21, [x0, #976]
  43e91c:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43e920:	add	x22, x22, #0x3d0
  43e924:	ldr	w0, [x22, #8]
  43e928:	sub	w2, w24, w0
  43e92c:	sbfiz	x2, x2, #4, #32
  43e930:	mov	w1, #0x0                   	// #0
  43e934:	add	x0, x21, w0, sxtw #4
  43e938:	bl	404420 <memset@plt>
  43e93c:	str	w24, [x22, #8]
  43e940:	sbfiz	x19, x19, #4, #32
  43e944:	add	x27, x21, x19
  43e948:	ldr	x25, [x21, x19]
  43e94c:	ldr	x22, [x27, #8]
  43e950:	ldr	w24, [x20, #4]
  43e954:	orr	w24, w24, #0x1
  43e958:	add	x26, x20, #0x8
  43e95c:	ldr	x0, [x20, #48]
  43e960:	str	x0, [sp]
  43e964:	ldr	x7, [x20, #40]
  43e968:	mov	x6, x26
  43e96c:	mov	w5, w24
  43e970:	ldr	w4, [x20]
  43e974:	ldr	x3, [sp, #120]
  43e978:	ldr	x2, [sp, #112]
  43e97c:	mov	x1, x25
  43e980:	mov	x0, x22
  43e984:	bl	43d934 <argp_parse@@Base+0xa1f4>
  43e988:	cmp	x25, x0
  43e98c:	b.hi	43e9e8 <argp_parse@@Base+0xb2a8>  // b.pmore
  43e990:	add	x25, x0, #0x1
  43e994:	str	x25, [x21, x19]
  43e998:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43e99c:	add	x0, x0, #0xda0
  43e9a0:	cmp	x22, x0
  43e9a4:	b.eq	43e9b0 <argp_parse@@Base+0xb270>  // b.none
  43e9a8:	mov	x0, x22
  43e9ac:	bl	4047c0 <free@plt>
  43e9b0:	mov	x0, x25
  43e9b4:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  43e9b8:	mov	x22, x0
  43e9bc:	str	x0, [x27, #8]
  43e9c0:	ldr	x1, [x20, #48]
  43e9c4:	str	x1, [sp]
  43e9c8:	ldr	x7, [x20, #40]
  43e9cc:	mov	x6, x26
  43e9d0:	mov	w5, w24
  43e9d4:	ldr	w4, [x20]
  43e9d8:	ldr	x3, [sp, #120]
  43e9dc:	ldr	x2, [sp, #112]
  43e9e0:	mov	x1, x25
  43e9e4:	bl	43d934 <argp_parse@@Base+0xa1f4>
  43e9e8:	str	w28, [x23]
  43e9ec:	mov	x0, x22
  43e9f0:	ldp	x19, x20, [sp, #32]
  43e9f4:	ldp	x21, x22, [sp, #48]
  43e9f8:	ldp	x23, x24, [sp, #64]
  43e9fc:	ldp	x25, x26, [sp, #80]
  43ea00:	ldp	x27, x28, [sp, #96]
  43ea04:	ldp	x29, x30, [sp, #16]
  43ea08:	add	sp, sp, #0x80
  43ea0c:	ret
  43ea10:	bl	404660 <abort@plt>
  43ea14:	bl	40e5ec <wcrtomb@plt+0x99cc>
  43ea18:	add	w24, w19, #0x1
  43ea1c:	sbfiz	x1, x24, #4, #32
  43ea20:	mov	x0, #0x0                   	// #0
  43ea24:	bl	43ff70 <argp_parse@@Base+0xc830>
  43ea28:	mov	x21, x0
  43ea2c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43ea30:	add	x1, x0, #0x3d0
  43ea34:	str	x21, [x0, #976]
  43ea38:	ldp	x0, x1, [x1, #16]
  43ea3c:	stp	x0, x1, [x21]
  43ea40:	b	43e91c <argp_parse@@Base+0xb1dc>
  43ea44:	stp	x29, x30, [sp, #-48]!
  43ea48:	mov	x29, sp
  43ea4c:	stp	x19, x20, [sp, #16]
  43ea50:	str	x21, [sp, #32]
  43ea54:	mov	x20, x0
  43ea58:	bl	404ad0 <__errno_location@plt>
  43ea5c:	mov	x19, x0
  43ea60:	ldr	w21, [x0]
  43ea64:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43ea68:	add	x2, x2, #0xda0
  43ea6c:	add	x2, x2, #0x100
  43ea70:	cmp	x20, #0x0
  43ea74:	mov	x1, #0x38                  	// #56
  43ea78:	csel	x0, x2, x20, eq  // eq = none
  43ea7c:	bl	440120 <argp_parse@@Base+0xc9e0>
  43ea80:	str	w21, [x19]
  43ea84:	ldp	x19, x20, [sp, #16]
  43ea88:	ldr	x21, [sp, #32]
  43ea8c:	ldp	x29, x30, [sp], #48
  43ea90:	ret
  43ea94:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43ea98:	add	x1, x1, #0xda0
  43ea9c:	add	x1, x1, #0x100
  43eaa0:	cmp	x0, #0x0
  43eaa4:	csel	x0, x1, x0, eq  // eq = none
  43eaa8:	ldr	w0, [x0]
  43eaac:	ret
  43eab0:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43eab4:	add	x2, x2, #0xda0
  43eab8:	add	x2, x2, #0x100
  43eabc:	cmp	x0, #0x0
  43eac0:	csel	x0, x2, x0, eq  // eq = none
  43eac4:	str	w1, [x0]
  43eac8:	ret
  43eacc:	adrp	x3, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43ead0:	add	x3, x3, #0xda0
  43ead4:	add	x3, x3, #0x100
  43ead8:	cmp	x0, #0x0
  43eadc:	csel	x0, x3, x0, eq  // eq = none
  43eae0:	add	x0, x0, #0x8
  43eae4:	ubfx	x4, x1, #5, #3
  43eae8:	and	w1, w1, #0x1f
  43eaec:	ldr	w5, [x0, x4, lsl #2]
  43eaf0:	lsr	w3, w5, w1
  43eaf4:	eor	w2, w3, w2
  43eaf8:	and	w2, w2, #0x1
  43eafc:	lsl	w2, w2, w1
  43eb00:	eor	w2, w2, w5
  43eb04:	str	w2, [x0, x4, lsl #2]
  43eb08:	and	w0, w3, #0x1
  43eb0c:	ret
  43eb10:	mov	x2, x0
  43eb14:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43eb18:	add	x0, x0, #0xda0
  43eb1c:	add	x0, x0, #0x100
  43eb20:	cmp	x2, #0x0
  43eb24:	csel	x2, x0, x2, eq  // eq = none
  43eb28:	ldr	w0, [x2, #4]
  43eb2c:	str	w1, [x2, #4]
  43eb30:	ret
  43eb34:	adrp	x3, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43eb38:	add	x3, x3, #0xda0
  43eb3c:	add	x3, x3, #0x100
  43eb40:	cmp	x0, #0x0
  43eb44:	csel	x0, x3, x0, eq  // eq = none
  43eb48:	mov	w3, #0xa                   	// #10
  43eb4c:	str	w3, [x0]
  43eb50:	cmp	x1, #0x0
  43eb54:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  43eb58:	b.eq	43eb68 <argp_parse@@Base+0xb428>  // b.none
  43eb5c:	str	x1, [x0, #40]
  43eb60:	str	x2, [x0, #48]
  43eb64:	ret
  43eb68:	stp	x29, x30, [sp, #-16]!
  43eb6c:	mov	x29, sp
  43eb70:	bl	404660 <abort@plt>
  43eb74:	sub	sp, sp, #0x60
  43eb78:	stp	x29, x30, [sp, #16]
  43eb7c:	add	x29, sp, #0x10
  43eb80:	stp	x19, x20, [sp, #32]
  43eb84:	stp	x21, x22, [sp, #48]
  43eb88:	stp	x23, x24, [sp, #64]
  43eb8c:	str	x25, [sp, #80]
  43eb90:	mov	x21, x0
  43eb94:	mov	x22, x1
  43eb98:	mov	x23, x2
  43eb9c:	mov	x24, x3
  43eba0:	mov	x19, x4
  43eba4:	adrp	x4, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43eba8:	add	x4, x4, #0xda0
  43ebac:	add	x4, x4, #0x100
  43ebb0:	cmp	x19, #0x0
  43ebb4:	csel	x19, x4, x19, eq  // eq = none
  43ebb8:	bl	404ad0 <__errno_location@plt>
  43ebbc:	mov	x20, x0
  43ebc0:	ldr	w25, [x0]
  43ebc4:	ldr	x7, [x19, #40]
  43ebc8:	ldr	w5, [x19, #4]
  43ebcc:	ldr	w4, [x19]
  43ebd0:	ldr	x0, [x19, #48]
  43ebd4:	str	x0, [sp]
  43ebd8:	add	x6, x19, #0x8
  43ebdc:	mov	x3, x24
  43ebe0:	mov	x2, x23
  43ebe4:	mov	x1, x22
  43ebe8:	mov	x0, x21
  43ebec:	bl	43d934 <argp_parse@@Base+0xa1f4>
  43ebf0:	str	w25, [x20]
  43ebf4:	ldp	x19, x20, [sp, #32]
  43ebf8:	ldp	x21, x22, [sp, #48]
  43ebfc:	ldp	x23, x24, [sp, #64]
  43ec00:	ldr	x25, [sp, #80]
  43ec04:	ldp	x29, x30, [sp, #16]
  43ec08:	add	sp, sp, #0x60
  43ec0c:	ret
  43ec10:	sub	sp, sp, #0x80
  43ec14:	stp	x29, x30, [sp, #16]
  43ec18:	add	x29, sp, #0x10
  43ec1c:	stp	x19, x20, [sp, #32]
  43ec20:	stp	x21, x22, [sp, #48]
  43ec24:	stp	x23, x24, [sp, #64]
  43ec28:	stp	x25, x26, [sp, #80]
  43ec2c:	stp	x27, x28, [sp, #96]
  43ec30:	mov	x22, x0
  43ec34:	mov	x23, x1
  43ec38:	mov	x20, x2
  43ec3c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43ec40:	add	x0, x0, #0xda0
  43ec44:	add	x0, x0, #0x100
  43ec48:	cmp	x3, #0x0
  43ec4c:	csel	x19, x0, x3, eq  // eq = none
  43ec50:	bl	404ad0 <__errno_location@plt>
  43ec54:	mov	x21, x0
  43ec58:	ldr	w28, [x0]
  43ec5c:	cmp	x20, #0x0
  43ec60:	cset	w24, eq  // eq = none
  43ec64:	ldr	w0, [x19, #4]
  43ec68:	orr	w24, w24, w0
  43ec6c:	add	x27, x19, #0x8
  43ec70:	ldr	x7, [x19, #40]
  43ec74:	ldr	w4, [x19]
  43ec78:	ldr	x0, [x19, #48]
  43ec7c:	str	x0, [sp]
  43ec80:	mov	x6, x27
  43ec84:	mov	w5, w24
  43ec88:	mov	x3, x23
  43ec8c:	mov	x2, x22
  43ec90:	mov	x1, #0x0                   	// #0
  43ec94:	mov	x0, #0x0                   	// #0
  43ec98:	bl	43d934 <argp_parse@@Base+0xa1f4>
  43ec9c:	mov	x25, x0
  43eca0:	add	x26, x0, #0x1
  43eca4:	mov	x0, x26
  43eca8:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  43ecac:	str	x0, [sp, #120]
  43ecb0:	ldr	x7, [x19, #40]
  43ecb4:	ldr	w4, [x19]
  43ecb8:	ldr	x1, [x19, #48]
  43ecbc:	str	x1, [sp]
  43ecc0:	mov	x6, x27
  43ecc4:	mov	w5, w24
  43ecc8:	mov	x3, x23
  43eccc:	mov	x2, x22
  43ecd0:	mov	x1, x26
  43ecd4:	bl	43d934 <argp_parse@@Base+0xa1f4>
  43ecd8:	str	w28, [x21]
  43ecdc:	cbz	x20, 43ece4 <argp_parse@@Base+0xb5a4>
  43ece0:	str	x25, [x20]
  43ece4:	ldr	x0, [sp, #120]
  43ece8:	ldp	x19, x20, [sp, #32]
  43ecec:	ldp	x21, x22, [sp, #48]
  43ecf0:	ldp	x23, x24, [sp, #64]
  43ecf4:	ldp	x25, x26, [sp, #80]
  43ecf8:	ldp	x27, x28, [sp, #96]
  43ecfc:	ldp	x29, x30, [sp, #16]
  43ed00:	add	sp, sp, #0x80
  43ed04:	ret
  43ed08:	stp	x29, x30, [sp, #-16]!
  43ed0c:	mov	x29, sp
  43ed10:	mov	x3, x2
  43ed14:	mov	x2, #0x0                   	// #0
  43ed18:	bl	43ec10 <argp_parse@@Base+0xb4d0>
  43ed1c:	ldp	x29, x30, [sp], #16
  43ed20:	ret
  43ed24:	stp	x29, x30, [sp, #-48]!
  43ed28:	mov	x29, sp
  43ed2c:	stp	x19, x20, [sp, #16]
  43ed30:	str	x21, [sp, #32]
  43ed34:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43ed38:	add	x1, x0, #0x3d0
  43ed3c:	ldr	x21, [x0, #976]
  43ed40:	ldr	w20, [x1, #8]
  43ed44:	cmp	w20, #0x1
  43ed48:	b.le	43ed6c <argp_parse@@Base+0xb62c>
  43ed4c:	add	x19, x21, #0x18
  43ed50:	sub	w20, w20, #0x2
  43ed54:	add	x0, x21, #0x28
  43ed58:	add	x20, x0, x20, lsl #4
  43ed5c:	ldr	x0, [x19], #16
  43ed60:	bl	4047c0 <free@plt>
  43ed64:	cmp	x19, x20
  43ed68:	b.ne	43ed5c <argp_parse@@Base+0xb61c>  // b.any
  43ed6c:	ldr	x0, [x21, #8]
  43ed70:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43ed74:	add	x1, x1, #0xda0
  43ed78:	cmp	x0, x1
  43ed7c:	b.eq	43eda0 <argp_parse@@Base+0xb660>  // b.none
  43ed80:	bl	4047c0 <free@plt>
  43ed84:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43ed88:	add	x0, x0, #0x3d0
  43ed8c:	mov	x1, #0x100                 	// #256
  43ed90:	str	x1, [x0, #16]
  43ed94:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43ed98:	add	x1, x1, #0xda0
  43ed9c:	str	x1, [x0, #24]
  43eda0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43eda4:	add	x0, x0, #0x3d0
  43eda8:	add	x0, x0, #0x10
  43edac:	cmp	x21, x0
  43edb0:	b.eq	43edcc <argp_parse@@Base+0xb68c>  // b.none
  43edb4:	mov	x0, x21
  43edb8:	bl	4047c0 <free@plt>
  43edbc:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43edc0:	add	x0, x1, #0x3d0
  43edc4:	add	x0, x0, #0x10
  43edc8:	str	x0, [x1, #976]
  43edcc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43edd0:	mov	w1, #0x1                   	// #1
  43edd4:	str	w1, [x0, #984]
  43edd8:	ldp	x19, x20, [sp, #16]
  43eddc:	ldr	x21, [sp, #32]
  43ede0:	ldp	x29, x30, [sp], #48
  43ede4:	ret
  43ede8:	stp	x29, x30, [sp, #-16]!
  43edec:	mov	x29, sp
  43edf0:	adrp	x3, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43edf4:	add	x3, x3, #0xda0
  43edf8:	add	x3, x3, #0x100
  43edfc:	mov	x2, #0xffffffffffffffff    	// #-1
  43ee00:	bl	43e888 <argp_parse@@Base+0xb148>
  43ee04:	ldp	x29, x30, [sp], #16
  43ee08:	ret
  43ee0c:	stp	x29, x30, [sp, #-16]!
  43ee10:	mov	x29, sp
  43ee14:	adrp	x3, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43ee18:	add	x3, x3, #0xda0
  43ee1c:	add	x3, x3, #0x100
  43ee20:	bl	43e888 <argp_parse@@Base+0xb148>
  43ee24:	ldp	x29, x30, [sp], #16
  43ee28:	ret
  43ee2c:	stp	x29, x30, [sp, #-16]!
  43ee30:	mov	x29, sp
  43ee34:	mov	x1, x0
  43ee38:	mov	w0, #0x0                   	// #0
  43ee3c:	bl	43ede8 <argp_parse@@Base+0xb6a8>
  43ee40:	ldp	x29, x30, [sp], #16
  43ee44:	ret
  43ee48:	stp	x29, x30, [sp, #-16]!
  43ee4c:	mov	x29, sp
  43ee50:	mov	x2, x1
  43ee54:	mov	x1, x0
  43ee58:	mov	w0, #0x0                   	// #0
  43ee5c:	bl	43ee0c <argp_parse@@Base+0xb6cc>
  43ee60:	ldp	x29, x30, [sp], #16
  43ee64:	ret
  43ee68:	stp	x29, x30, [sp, #-96]!
  43ee6c:	mov	x29, sp
  43ee70:	stp	x19, x20, [sp, #16]
  43ee74:	mov	w19, w0
  43ee78:	mov	w0, w1
  43ee7c:	mov	x20, x2
  43ee80:	add	x8, sp, #0x28
  43ee84:	bl	43d7b4 <argp_parse@@Base+0xa074>
  43ee88:	add	x3, sp, #0x28
  43ee8c:	mov	x2, #0xffffffffffffffff    	// #-1
  43ee90:	mov	x1, x20
  43ee94:	mov	w0, w19
  43ee98:	bl	43e888 <argp_parse@@Base+0xb148>
  43ee9c:	ldp	x19, x20, [sp, #16]
  43eea0:	ldp	x29, x30, [sp], #96
  43eea4:	ret
  43eea8:	stp	x29, x30, [sp, #-112]!
  43eeac:	mov	x29, sp
  43eeb0:	stp	x19, x20, [sp, #16]
  43eeb4:	str	x21, [sp, #32]
  43eeb8:	mov	w19, w0
  43eebc:	mov	w0, w1
  43eec0:	mov	x20, x2
  43eec4:	mov	x21, x3
  43eec8:	add	x8, sp, #0x38
  43eecc:	bl	43d7b4 <argp_parse@@Base+0xa074>
  43eed0:	add	x3, sp, #0x38
  43eed4:	mov	x2, x21
  43eed8:	mov	x1, x20
  43eedc:	mov	w0, w19
  43eee0:	bl	43e888 <argp_parse@@Base+0xb148>
  43eee4:	ldp	x19, x20, [sp, #16]
  43eee8:	ldr	x21, [sp, #32]
  43eeec:	ldp	x29, x30, [sp], #112
  43eef0:	ret
  43eef4:	stp	x29, x30, [sp, #-16]!
  43eef8:	mov	x29, sp
  43eefc:	mov	x2, x1
  43ef00:	mov	w1, w0
  43ef04:	mov	w0, #0x0                   	// #0
  43ef08:	bl	43ee68 <argp_parse@@Base+0xb728>
  43ef0c:	ldp	x29, x30, [sp], #16
  43ef10:	ret
  43ef14:	stp	x29, x30, [sp, #-16]!
  43ef18:	mov	x29, sp
  43ef1c:	mov	x3, x2
  43ef20:	mov	x2, x1
  43ef24:	mov	w1, w0
  43ef28:	mov	w0, #0x0                   	// #0
  43ef2c:	bl	43eea8 <argp_parse@@Base+0xb768>
  43ef30:	ldp	x29, x30, [sp], #16
  43ef34:	ret
  43ef38:	stp	x29, x30, [sp, #-96]!
  43ef3c:	mov	x29, sp
  43ef40:	stp	x19, x20, [sp, #16]
  43ef44:	mov	x19, x0
  43ef48:	mov	x20, x1
  43ef4c:	and	w1, w2, #0xff
  43ef50:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43ef54:	add	x2, x2, #0xda0
  43ef58:	add	x0, x2, #0x100
  43ef5c:	ldp	x2, x3, [x2, #256]
  43ef60:	stp	x2, x3, [sp, #40]
  43ef64:	ldp	x2, x3, [x0, #16]
  43ef68:	stp	x2, x3, [sp, #56]
  43ef6c:	ldp	x2, x3, [x0, #32]
  43ef70:	stp	x2, x3, [sp, #72]
  43ef74:	ldr	x0, [x0, #48]
  43ef78:	str	x0, [sp, #88]
  43ef7c:	mov	w2, #0x1                   	// #1
  43ef80:	add	x0, sp, #0x28
  43ef84:	bl	43eacc <argp_parse@@Base+0xb38c>
  43ef88:	add	x3, sp, #0x28
  43ef8c:	mov	x2, x20
  43ef90:	mov	x1, x19
  43ef94:	mov	w0, #0x0                   	// #0
  43ef98:	bl	43e888 <argp_parse@@Base+0xb148>
  43ef9c:	ldp	x19, x20, [sp, #16]
  43efa0:	ldp	x29, x30, [sp], #96
  43efa4:	ret
  43efa8:	stp	x29, x30, [sp, #-16]!
  43efac:	mov	x29, sp
  43efb0:	mov	w2, w1
  43efb4:	mov	x1, #0xffffffffffffffff    	// #-1
  43efb8:	bl	43ef38 <argp_parse@@Base+0xb7f8>
  43efbc:	ldp	x29, x30, [sp], #16
  43efc0:	ret
  43efc4:	stp	x29, x30, [sp, #-16]!
  43efc8:	mov	x29, sp
  43efcc:	mov	w1, #0x3a                  	// #58
  43efd0:	bl	43efa8 <argp_parse@@Base+0xb868>
  43efd4:	ldp	x29, x30, [sp], #16
  43efd8:	ret
  43efdc:	stp	x29, x30, [sp, #-16]!
  43efe0:	mov	x29, sp
  43efe4:	mov	w2, #0x3a                  	// #58
  43efe8:	bl	43ef38 <argp_parse@@Base+0xb7f8>
  43efec:	ldp	x29, x30, [sp], #16
  43eff0:	ret
  43eff4:	stp	x29, x30, [sp, #-160]!
  43eff8:	mov	x29, sp
  43effc:	stp	x19, x20, [sp, #16]
  43f000:	mov	w19, w0
  43f004:	mov	w0, w1
  43f008:	mov	x20, x2
  43f00c:	add	x8, sp, #0x20
  43f010:	bl	43d7b4 <argp_parse@@Base+0xa074>
  43f014:	ldp	x0, x1, [sp, #32]
  43f018:	stp	x0, x1, [sp, #104]
  43f01c:	ldp	x0, x1, [sp, #48]
  43f020:	stp	x0, x1, [sp, #120]
  43f024:	ldp	x0, x1, [sp, #64]
  43f028:	stp	x0, x1, [sp, #136]
  43f02c:	ldr	x0, [sp, #80]
  43f030:	str	x0, [sp, #152]
  43f034:	mov	w2, #0x1                   	// #1
  43f038:	mov	w1, #0x3a                  	// #58
  43f03c:	add	x0, sp, #0x68
  43f040:	bl	43eacc <argp_parse@@Base+0xb38c>
  43f044:	add	x3, sp, #0x68
  43f048:	mov	x2, #0xffffffffffffffff    	// #-1
  43f04c:	mov	x1, x20
  43f050:	mov	w0, w19
  43f054:	bl	43e888 <argp_parse@@Base+0xb148>
  43f058:	ldp	x19, x20, [sp, #16]
  43f05c:	ldp	x29, x30, [sp], #160
  43f060:	ret
  43f064:	stp	x29, x30, [sp, #-112]!
  43f068:	mov	x29, sp
  43f06c:	stp	x19, x20, [sp, #16]
  43f070:	str	x21, [sp, #32]
  43f074:	mov	w19, w0
  43f078:	mov	x20, x3
  43f07c:	mov	x21, x4
  43f080:	adrp	x5, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43f084:	add	x5, x5, #0xda0
  43f088:	add	x0, x5, #0x100
  43f08c:	ldp	x4, x5, [x5, #256]
  43f090:	stp	x4, x5, [sp, #56]
  43f094:	ldp	x4, x5, [x0, #16]
  43f098:	stp	x4, x5, [sp, #72]
  43f09c:	ldp	x4, x5, [x0, #32]
  43f0a0:	stp	x4, x5, [sp, #88]
  43f0a4:	ldr	x0, [x0, #48]
  43f0a8:	str	x0, [sp, #104]
  43f0ac:	add	x0, sp, #0x38
  43f0b0:	bl	43eb34 <argp_parse@@Base+0xb3f4>
  43f0b4:	add	x3, sp, #0x38
  43f0b8:	mov	x2, x21
  43f0bc:	mov	x1, x20
  43f0c0:	mov	w0, w19
  43f0c4:	bl	43e888 <argp_parse@@Base+0xb148>
  43f0c8:	ldp	x19, x20, [sp, #16]
  43f0cc:	ldr	x21, [sp, #32]
  43f0d0:	ldp	x29, x30, [sp], #112
  43f0d4:	ret
  43f0d8:	stp	x29, x30, [sp, #-16]!
  43f0dc:	mov	x29, sp
  43f0e0:	mov	x4, #0xffffffffffffffff    	// #-1
  43f0e4:	bl	43f064 <argp_parse@@Base+0xb924>
  43f0e8:	ldp	x29, x30, [sp], #16
  43f0ec:	ret
  43f0f0:	stp	x29, x30, [sp, #-16]!
  43f0f4:	mov	x29, sp
  43f0f8:	mov	x3, x2
  43f0fc:	mov	x2, x1
  43f100:	mov	x1, x0
  43f104:	mov	w0, #0x0                   	// #0
  43f108:	bl	43f0d8 <argp_parse@@Base+0xb998>
  43f10c:	ldp	x29, x30, [sp], #16
  43f110:	ret
  43f114:	stp	x29, x30, [sp, #-16]!
  43f118:	mov	x29, sp
  43f11c:	mov	x4, x3
  43f120:	mov	x3, x2
  43f124:	mov	x2, x1
  43f128:	mov	x1, x0
  43f12c:	mov	w0, #0x0                   	// #0
  43f130:	bl	43f064 <argp_parse@@Base+0xb924>
  43f134:	ldp	x29, x30, [sp], #16
  43f138:	ret
  43f13c:	stp	x29, x30, [sp, #-16]!
  43f140:	mov	x29, sp
  43f144:	adrp	x3, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43f148:	add	x3, x3, #0x3d0
  43f14c:	add	x3, x3, #0x20
  43f150:	bl	43e888 <argp_parse@@Base+0xb148>
  43f154:	ldp	x29, x30, [sp], #16
  43f158:	ret
  43f15c:	stp	x29, x30, [sp, #-16]!
  43f160:	mov	x29, sp
  43f164:	mov	x2, x1
  43f168:	mov	x1, x0
  43f16c:	mov	w0, #0x0                   	// #0
  43f170:	bl	43f13c <argp_parse@@Base+0xb9fc>
  43f174:	ldp	x29, x30, [sp], #16
  43f178:	ret
  43f17c:	stp	x29, x30, [sp, #-16]!
  43f180:	mov	x29, sp
  43f184:	mov	x2, #0xffffffffffffffff    	// #-1
  43f188:	bl	43f13c <argp_parse@@Base+0xb9fc>
  43f18c:	ldp	x29, x30, [sp], #16
  43f190:	ret
  43f194:	stp	x29, x30, [sp, #-16]!
  43f198:	mov	x29, sp
  43f19c:	mov	x1, x0
  43f1a0:	mov	w0, #0x0                   	// #0
  43f1a4:	bl	43f17c <argp_parse@@Base+0xba3c>
  43f1a8:	ldp	x29, x30, [sp], #16
  43f1ac:	ret
  43f1b0:	stp	x29, x30, [sp, #-336]!
  43f1b4:	mov	x29, sp
  43f1b8:	stp	x19, x20, [sp, #16]
  43f1bc:	stp	x23, x24, [sp, #48]
  43f1c0:	stp	x25, x26, [sp, #64]
  43f1c4:	mov	w25, w0
  43f1c8:	mov	x23, x1
  43f1cc:	mov	w24, w2
  43f1d0:	mov	x26, x3
  43f1d4:	mov	w20, w4
  43f1d8:	bl	4047e0 <renameat2@plt>
  43f1dc:	mov	w19, w0
  43f1e0:	tbz	w0, #31, 43f3ec <argp_parse@@Base+0xbcac>
  43f1e4:	stp	x21, x22, [sp, #32]
  43f1e8:	bl	404ad0 <__errno_location@plt>
  43f1ec:	mov	x21, x0
  43f1f0:	ldr	w0, [x0]
  43f1f4:	sub	w1, w0, #0x16
  43f1f8:	tst	w1, #0xffffffef
  43f1fc:	cset	w22, ne  // ne = any
  43f200:	cmp	w0, #0x5f
  43f204:	csel	w22, w22, wzr, ne  // ne = any
  43f208:	cbnz	w22, 43f3e8 <argp_parse@@Base+0xbca8>
  43f20c:	cbz	w20, 43f250 <argp_parse@@Base+0xbb10>
  43f210:	tst	w20, #0xfffffffe
  43f214:	b.ne	43f2e4 <argp_parse@@Base+0xbba4>  // b.any
  43f218:	mov	w4, #0x100                 	// #256
  43f21c:	add	x3, sp, #0xd0
  43f220:	mov	x2, x26
  43f224:	mov	w1, w24
  43f228:	mov	w0, #0x0                   	// #0
  43f22c:	bl	404c00 <__fxstatat@plt>
  43f230:	cbz	w0, 43f2f8 <argp_parse@@Base+0xbbb8>
  43f234:	ldr	w0, [x21]
  43f238:	cmp	w0, #0x4b
  43f23c:	b.eq	43f2f8 <argp_parse@@Base+0xbbb8>  // b.none
  43f240:	mov	w19, #0xffffffff            	// #-1
  43f244:	cmp	w0, #0x2
  43f248:	b.ne	43f404 <argp_parse@@Base+0xbcc4>  // b.any
  43f24c:	mov	w22, #0x1                   	// #1
  43f250:	mov	x0, x23
  43f254:	bl	403ff0 <strlen@plt>
  43f258:	mov	x19, x0
  43f25c:	mov	x0, x26
  43f260:	bl	403ff0 <strlen@plt>
  43f264:	cmp	x19, #0x0
  43f268:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  43f26c:	b.eq	43f30c <argp_parse@@Base+0xbbcc>  // b.none
  43f270:	add	x19, x23, x19
  43f274:	ldurb	w2, [x19, #-1]
  43f278:	add	x0, x26, x0
  43f27c:	ldurb	w1, [x0, #-1]
  43f280:	cmp	w2, #0x2f
  43f284:	mov	w0, #0x2f                  	// #47
  43f288:	ccmp	w1, w0, #0x4, ne  // ne = any
  43f28c:	b.ne	43f32c <argp_parse@@Base+0xbbec>  // b.any
  43f290:	mov	w4, #0x100                 	// #256
  43f294:	add	x3, sp, #0x50
  43f298:	mov	x2, x23
  43f29c:	mov	w1, w25
  43f2a0:	mov	w0, #0x0                   	// #0
  43f2a4:	bl	404c00 <__fxstatat@plt>
  43f2a8:	mov	w19, #0xffffffff            	// #-1
  43f2ac:	cbnz	w0, 43f40c <argp_parse@@Base+0xbccc>
  43f2b0:	cbz	w22, 43f35c <argp_parse@@Base+0xbc1c>
  43f2b4:	ldr	w0, [sp, #96]
  43f2b8:	and	w0, w0, #0xf000
  43f2bc:	cmp	w0, #0x4, lsl #12
  43f2c0:	b.ne	43f34c <argp_parse@@Base+0xbc0c>  // b.any
  43f2c4:	mov	x3, x26
  43f2c8:	mov	w2, w24
  43f2cc:	mov	x1, x23
  43f2d0:	mov	w0, w25
  43f2d4:	bl	404810 <renameat@plt>
  43f2d8:	mov	w19, w0
  43f2dc:	ldp	x21, x22, [sp, #32]
  43f2e0:	b	43f3ec <argp_parse@@Base+0xbcac>
  43f2e4:	mov	w0, #0x5f                  	// #95
  43f2e8:	str	w0, [x21]
  43f2ec:	mov	w19, #0xffffffff            	// #-1
  43f2f0:	ldp	x21, x22, [sp, #32]
  43f2f4:	b	43f3ec <argp_parse@@Base+0xbcac>
  43f2f8:	mov	w0, #0x11                  	// #17
  43f2fc:	str	w0, [x21]
  43f300:	mov	w19, #0xffffffff            	// #-1
  43f304:	ldp	x21, x22, [sp, #32]
  43f308:	b	43f3ec <argp_parse@@Base+0xbcac>
  43f30c:	mov	x3, x26
  43f310:	mov	w2, w24
  43f314:	mov	x1, x23
  43f318:	mov	w0, w25
  43f31c:	bl	404810 <renameat@plt>
  43f320:	mov	w19, w0
  43f324:	ldp	x21, x22, [sp, #32]
  43f328:	b	43f3ec <argp_parse@@Base+0xbcac>
  43f32c:	mov	x3, x26
  43f330:	mov	w2, w24
  43f334:	mov	x1, x23
  43f338:	mov	w0, w25
  43f33c:	bl	404810 <renameat@plt>
  43f340:	mov	w19, w0
  43f344:	ldp	x21, x22, [sp, #32]
  43f348:	b	43f3ec <argp_parse@@Base+0xbcac>
  43f34c:	mov	w0, #0x2                   	// #2
  43f350:	str	w0, [x21]
  43f354:	ldp	x21, x22, [sp, #32]
  43f358:	b	43f3ec <argp_parse@@Base+0xbcac>
  43f35c:	mov	w4, #0x100                 	// #256
  43f360:	add	x3, sp, #0xd0
  43f364:	mov	x2, x26
  43f368:	mov	w1, w24
  43f36c:	mov	w0, #0x0                   	// #0
  43f370:	bl	404c00 <__fxstatat@plt>
  43f374:	cbz	w0, 43f3a0 <argp_parse@@Base+0xbc60>
  43f378:	ldr	w0, [x21]
  43f37c:	mov	w19, #0xffffffff            	// #-1
  43f380:	cmp	w0, #0x2
  43f384:	b.ne	43f414 <argp_parse@@Base+0xbcd4>  // b.any
  43f388:	ldr	w0, [sp, #96]
  43f38c:	and	w0, w0, #0xf000
  43f390:	cmp	w0, #0x4, lsl #12
  43f394:	b.eq	43f2c4 <argp_parse@@Base+0xbb84>  // b.none
  43f398:	ldp	x21, x22, [sp, #32]
  43f39c:	b	43f3ec <argp_parse@@Base+0xbcac>
  43f3a0:	ldr	w0, [sp, #224]
  43f3a4:	and	w0, w0, #0xf000
  43f3a8:	cmp	w0, #0x4, lsl #12
  43f3ac:	b.ne	43f3d4 <argp_parse@@Base+0xbc94>  // b.any
  43f3b0:	ldr	w0, [sp, #96]
  43f3b4:	and	w0, w0, #0xf000
  43f3b8:	cmp	w0, #0x4, lsl #12
  43f3bc:	b.eq	43f2c4 <argp_parse@@Base+0xbb84>  // b.none
  43f3c0:	mov	w0, #0x15                  	// #21
  43f3c4:	str	w0, [x21]
  43f3c8:	mov	w19, #0xffffffff            	// #-1
  43f3cc:	ldp	x21, x22, [sp, #32]
  43f3d0:	b	43f3ec <argp_parse@@Base+0xbcac>
  43f3d4:	mov	w0, #0x14                  	// #20
  43f3d8:	str	w0, [x21]
  43f3dc:	mov	w19, #0xffffffff            	// #-1
  43f3e0:	ldp	x21, x22, [sp, #32]
  43f3e4:	b	43f3ec <argp_parse@@Base+0xbcac>
  43f3e8:	ldp	x21, x22, [sp, #32]
  43f3ec:	mov	w0, w19
  43f3f0:	ldp	x19, x20, [sp, #16]
  43f3f4:	ldp	x23, x24, [sp, #48]
  43f3f8:	ldp	x25, x26, [sp, #64]
  43f3fc:	ldp	x29, x30, [sp], #336
  43f400:	ret
  43f404:	ldp	x21, x22, [sp, #32]
  43f408:	b	43f3ec <argp_parse@@Base+0xbcac>
  43f40c:	ldp	x21, x22, [sp, #32]
  43f410:	b	43f3ec <argp_parse@@Base+0xbcac>
  43f414:	ldp	x21, x22, [sp, #32]
  43f418:	b	43f3ec <argp_parse@@Base+0xbcac>
  43f41c:	stp	x29, x30, [sp, #-64]!
  43f420:	mov	x29, sp
  43f424:	stp	x19, x20, [sp, #16]
  43f428:	stp	x21, x22, [sp, #32]
  43f42c:	str	x23, [sp, #48]
  43f430:	mov	w23, w0
  43f434:	mov	x22, x1
  43f438:	mov	x20, x2
  43f43c:	mov	x21, #0x7ff00000            	// #2146435072
  43f440:	b	43f448 <argp_parse@@Base+0xbd08>
  43f444:	mov	x20, x21
  43f448:	mov	x2, x20
  43f44c:	mov	x1, x22
  43f450:	mov	w0, w23
  43f454:	bl	404950 <read@plt>
  43f458:	mov	x19, x0
  43f45c:	tbz	x0, #63, 43f480 <argp_parse@@Base+0xbd40>
  43f460:	bl	404ad0 <__errno_location@plt>
  43f464:	ldr	w2, [x0]
  43f468:	cmp	w2, #0x4
  43f46c:	b.eq	43f448 <argp_parse@@Base+0xbd08>  // b.none
  43f470:	cmp	x20, x21
  43f474:	ccmp	w2, #0x16, #0x0, hi  // hi = pmore
  43f478:	b.eq	43f444 <argp_parse@@Base+0xbd04>  // b.none
  43f47c:	mov	x0, x19
  43f480:	ldp	x19, x20, [sp, #16]
  43f484:	ldp	x21, x22, [sp, #32]
  43f488:	ldr	x23, [sp, #48]
  43f48c:	ldp	x29, x30, [sp], #64
  43f490:	ret
  43f494:	stp	x29, x30, [sp, #-64]!
  43f498:	mov	x29, sp
  43f49c:	stp	x19, x20, [sp, #16]
  43f4a0:	stp	x21, x22, [sp, #32]
  43f4a4:	str	x23, [sp, #48]
  43f4a8:	mov	w23, w0
  43f4ac:	mov	x22, x1
  43f4b0:	mov	x20, x2
  43f4b4:	mov	x21, #0x7ff00000            	// #2146435072
  43f4b8:	b	43f4c0 <argp_parse@@Base+0xbd80>
  43f4bc:	mov	x20, x21
  43f4c0:	mov	x2, x20
  43f4c4:	mov	x1, x22
  43f4c8:	mov	w0, w23
  43f4cc:	bl	404630 <write@plt>
  43f4d0:	mov	x19, x0
  43f4d4:	tbz	x0, #63, 43f4f8 <argp_parse@@Base+0xbdb8>
  43f4d8:	bl	404ad0 <__errno_location@plt>
  43f4dc:	ldr	w2, [x0]
  43f4e0:	cmp	w2, #0x4
  43f4e4:	b.eq	43f4c0 <argp_parse@@Base+0xbd80>  // b.none
  43f4e8:	cmp	x20, x21
  43f4ec:	ccmp	w2, #0x16, #0x0, hi  // hi = pmore
  43f4f0:	b.eq	43f4bc <argp_parse@@Base+0xbd7c>  // b.none
  43f4f4:	mov	x0, x19
  43f4f8:	ldp	x19, x20, [sp, #16]
  43f4fc:	ldp	x21, x22, [sp, #32]
  43f500:	ldr	x23, [sp, #48]
  43f504:	ldp	x29, x30, [sp], #64
  43f508:	ret
  43f50c:	stp	x29, x30, [sp, #-32]!
  43f510:	mov	x29, sp
  43f514:	str	x19, [sp, #16]
  43f518:	mov	x19, x0
  43f51c:	str	xzr, [x0, #8]
  43f520:	mov	w1, #0x80000               	// #524288
  43f524:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x15e64>
  43f528:	add	x0, x0, #0x340
  43f52c:	bl	44eb90 <_obstack_memory_used@@Base+0xd9f4>
  43f530:	str	w0, [x19]
  43f534:	tbnz	w0, #31, 43f548 <argp_parse@@Base+0xbe08>
  43f538:	mov	w0, #0x0                   	// #0
  43f53c:	ldr	x19, [sp, #16]
  43f540:	ldp	x29, x30, [sp], #32
  43f544:	ret
  43f548:	mov	x1, #0x0                   	// #0
  43f54c:	mov	x0, #0x0                   	// #0
  43f550:	bl	403fa0 <getcwd@plt>
  43f554:	str	x0, [x19, #8]
  43f558:	cmp	x0, #0x0
  43f55c:	csetm	w0, eq  // eq = none
  43f560:	b	43f53c <argp_parse@@Base+0xbdfc>
  43f564:	stp	x29, x30, [sp, #-16]!
  43f568:	mov	x29, sp
  43f56c:	mov	x1, x0
  43f570:	ldr	w0, [x0]
  43f574:	tbnz	w0, #31, 43f584 <argp_parse@@Base+0xbe44>
  43f578:	bl	404060 <fchdir@plt>
  43f57c:	ldp	x29, x30, [sp], #16
  43f580:	ret
  43f584:	ldr	x0, [x1, #8]
  43f588:	bl	440734 <argp_parse@@Base+0xcff4>
  43f58c:	b	43f57c <argp_parse@@Base+0xbe3c>
  43f590:	stp	x29, x30, [sp, #-32]!
  43f594:	mov	x29, sp
  43f598:	str	x19, [sp, #16]
  43f59c:	mov	x19, x0
  43f5a0:	ldr	w0, [x0]
  43f5a4:	tbz	w0, #31, 43f5bc <argp_parse@@Base+0xbe7c>
  43f5a8:	ldr	x0, [x19, #8]
  43f5ac:	bl	4047c0 <free@plt>
  43f5b0:	ldr	x19, [sp, #16]
  43f5b4:	ldp	x29, x30, [sp], #32
  43f5b8:	ret
  43f5bc:	bl	4045d0 <close@plt>
  43f5c0:	b	43f5a8 <argp_parse@@Base+0xbe68>
  43f5c4:	ldr	x2, [x0, #8]
  43f5c8:	ldr	x0, [x1, #8]
  43f5cc:	cmp	x2, x0
  43f5d0:	b.cc	43f5e0 <argp_parse@@Base+0xbea0>  // b.lo, b.ul, b.last
  43f5d4:	cmp	x2, x0
  43f5d8:	cset	w0, hi  // hi = pmore
  43f5dc:	ret
  43f5e0:	mov	w0, #0xffffffff            	// #-1
  43f5e4:	b	43f5dc <argp_parse@@Base+0xbe9c>
  43f5e8:	stp	x29, x30, [sp, #-16]!
  43f5ec:	mov	x29, sp
  43f5f0:	ldr	x1, [x1]
  43f5f4:	ldr	x0, [x0]
  43f5f8:	bl	404720 <strcmp@plt>
  43f5fc:	ldp	x29, x30, [sp], #16
  43f600:	ret
  43f604:	stp	x29, x30, [sp, #-128]!
  43f608:	mov	x29, sp
  43f60c:	stp	x21, x22, [sp, #32]
  43f610:	stp	x23, x24, [sp, #48]
  43f614:	stp	x27, x28, [sp, #80]
  43f618:	mov	x21, x0
  43f61c:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43f620:	add	x0, x0, #0xba8
  43f624:	ldr	x28, [x0, w1, uxtw #3]
  43f628:	cbz	x21, 43f8d8 <argp_parse@@Base+0xc198>
  43f62c:	stp	x19, x20, [sp, #16]
  43f630:	stp	x25, x26, [sp, #64]
  43f634:	bl	404ad0 <__errno_location@plt>
  43f638:	mov	x22, x0
  43f63c:	mov	x23, #0x0                   	// #0
  43f640:	mov	x25, #0x0                   	// #0
  43f644:	str	xzr, [sp, #104]
  43f648:	mov	x26, #0x0                   	// #0
  43f64c:	str	xzr, [sp, #96]
  43f650:	mov	x24, #0x0                   	// #0
  43f654:	b	43f660 <argp_parse@@Base+0xbf20>
  43f658:	ldrb	w0, [x20, x0]
  43f65c:	cbnz	w0, 43f69c <argp_parse@@Base+0xbf5c>
  43f660:	str	wzr, [x22]
  43f664:	mov	x0, x21
  43f668:	bl	404530 <readdir@plt>
  43f66c:	mov	x19, x0
  43f670:	cbz	x0, 43f7ec <argp_parse@@Base+0xc0ac>
  43f674:	add	x20, x0, #0x13
  43f678:	ldrb	w1, [x0, #19]
  43f67c:	mov	x0, #0x0                   	// #0
  43f680:	cmp	w1, #0x2e
  43f684:	b.ne	43f658 <argp_parse@@Base+0xbf18>  // b.any
  43f688:	ldrb	w0, [x19, #20]
  43f68c:	cmp	w0, #0x2e
  43f690:	cset	x0, eq  // eq = none
  43f694:	add	x0, x0, #0x1
  43f698:	b	43f658 <argp_parse@@Base+0xbf18>
  43f69c:	mov	x0, x20
  43f6a0:	bl	403ff0 <strlen@plt>
  43f6a4:	add	x27, x0, #0x1
  43f6a8:	cbz	x28, 43f760 <argp_parse@@Base+0xc020>
  43f6ac:	ldr	x0, [sp, #104]
  43f6b0:	cmp	x0, x25
  43f6b4:	b.eq	43f6f0 <argp_parse@@Base+0xbfb0>  // b.none
  43f6b8:	lsl	x0, x25, #4
  43f6bc:	str	x0, [sp, #120]
  43f6c0:	add	x2, x26, x0
  43f6c4:	str	x2, [sp, #112]
  43f6c8:	mov	x0, x20
  43f6cc:	bl	440154 <argp_parse@@Base+0xca14>
  43f6d0:	ldr	x1, [sp, #120]
  43f6d4:	str	x0, [x26, x1]
  43f6d8:	ldr	x0, [x19]
  43f6dc:	ldr	x2, [sp, #112]
  43f6e0:	str	x0, [x2, #8]
  43f6e4:	add	x25, x25, #0x1
  43f6e8:	add	x23, x23, x27
  43f6ec:	b	43f660 <argp_parse@@Base+0xbf20>
  43f6f0:	cbz	x26, 43f730 <argp_parse@@Base+0xbff0>
  43f6f4:	ldr	x0, [sp, #104]
  43f6f8:	mov	x1, #0x5555555555555555    	// #6148914691236517205
  43f6fc:	movk	x1, #0x555, lsl #48
  43f700:	cmp	x0, x1
  43f704:	b.cs	43f750 <argp_parse@@Base+0xc010>  // b.hs, b.nlast
  43f708:	ldr	x1, [sp, #104]
  43f70c:	add	x0, x1, #0x1
  43f710:	add	x0, x0, x1, lsr #1
  43f714:	str	x0, [sp, #104]
  43f718:	ldr	x0, [sp, #104]
  43f71c:	lsl	x1, x0, #4
  43f720:	mov	x0, x26
  43f724:	bl	43ff70 <argp_parse@@Base+0xc830>
  43f728:	mov	x26, x0
  43f72c:	b	43f6b8 <argp_parse@@Base+0xbf78>
  43f730:	mov	x1, x0
  43f734:	cbz	x0, 43f754 <argp_parse@@Base+0xc014>
  43f738:	cmp	xzr, x0, lsr #60
  43f73c:	cset	x0, ne  // ne = any
  43f740:	tst	x1, #0x800000000000000
  43f744:	csinc	w0, w0, wzr, eq  // eq = none
  43f748:	cbz	w0, 43f718 <argp_parse@@Base+0xbfd8>
  43f74c:	bl	40e5ec <wcrtomb@plt+0x99cc>
  43f750:	bl	40e5ec <wcrtomb@plt+0x99cc>
  43f754:	mov	x0, #0x8                   	// #8
  43f758:	str	x0, [sp, #104]
  43f75c:	b	43f718 <argp_parse@@Base+0xbfd8>
  43f760:	ldr	x0, [sp, #96]
  43f764:	sub	x0, x0, x23
  43f768:	cmp	x0, x27
  43f76c:	b.hi	43f7b4 <argp_parse@@Base+0xc074>  // b.pmore
  43f770:	adds	x0, x27, x23
  43f774:	str	x0, [sp, #96]
  43f778:	b.cs	43f7c8 <argp_parse@@Base+0xc088>  // b.hs, b.nlast
  43f77c:	cbz	x24, 43f7cc <argp_parse@@Base+0xc08c>
  43f780:	ldr	x0, [sp, #96]
  43f784:	mov	x1, #0x5555555555555555    	// #6148914691236517205
  43f788:	movk	x1, #0x5553
  43f78c:	cmp	x0, x1
  43f790:	b.hi	43f7dc <argp_parse@@Base+0xc09c>  // b.pmore
  43f794:	ldr	x1, [sp, #96]
  43f798:	add	x0, x1, #0x1
  43f79c:	add	x0, x0, x1, lsr #1
  43f7a0:	str	x0, [sp, #96]
  43f7a4:	ldr	x1, [sp, #96]
  43f7a8:	mov	x0, x24
  43f7ac:	bl	43ff70 <argp_parse@@Base+0xc830>
  43f7b0:	mov	x24, x0
  43f7b4:	mov	x2, x27
  43f7b8:	mov	x1, x20
  43f7bc:	add	x0, x24, x23
  43f7c0:	bl	403f70 <memcpy@plt>
  43f7c4:	b	43f6e8 <argp_parse@@Base+0xbfa8>
  43f7c8:	bl	40e5ec <wcrtomb@plt+0x99cc>
  43f7cc:	ldr	x0, [sp, #96]
  43f7d0:	cbz	x0, 43f7e0 <argp_parse@@Base+0xc0a0>
  43f7d4:	tbz	x0, #63, 43f7a4 <argp_parse@@Base+0xc064>
  43f7d8:	bl	40e5ec <wcrtomb@plt+0x99cc>
  43f7dc:	bl	40e5ec <wcrtomb@plt+0x99cc>
  43f7e0:	mov	x0, #0x80                  	// #128
  43f7e4:	str	x0, [sp, #96]
  43f7e8:	b	43f7a4 <argp_parse@@Base+0xc064>
  43f7ec:	ldr	w20, [x22]
  43f7f0:	cbnz	w20, 43f810 <argp_parse@@Base+0xc0d0>
  43f7f4:	cbz	x28, 43f8b8 <argp_parse@@Base+0xc178>
  43f7f8:	cbnz	x25, 43f834 <argp_parse@@Base+0xc0f4>
  43f7fc:	add	x0, x23, #0x1
  43f800:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  43f804:	mov	x24, x0
  43f808:	mov	x23, x25
  43f80c:	b	43f88c <argp_parse@@Base+0xc14c>
  43f810:	mov	x0, x26
  43f814:	bl	4047c0 <free@plt>
  43f818:	mov	x0, x24
  43f81c:	bl	4047c0 <free@plt>
  43f820:	str	w20, [x22]
  43f824:	mov	x24, x19
  43f828:	ldp	x19, x20, [sp, #16]
  43f82c:	ldp	x25, x26, [sp, #64]
  43f830:	b	43f8a0 <argp_parse@@Base+0xc160>
  43f834:	mov	x3, x28
  43f838:	mov	x2, #0x10                  	// #16
  43f83c:	mov	x1, x25
  43f840:	mov	x0, x26
  43f844:	bl	4041a0 <qsort@plt>
  43f848:	add	x0, x23, #0x1
  43f84c:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  43f850:	mov	x24, x0
  43f854:	mov	x19, x26
  43f858:	add	x25, x26, x25, lsl #4
  43f85c:	mov	x23, #0x0                   	// #0
  43f860:	add	x20, x24, x23
  43f864:	ldr	x1, [x19]
  43f868:	mov	x0, x20
  43f86c:	bl	404220 <stpcpy@plt>
  43f870:	sub	x0, x0, x20
  43f874:	add	x0, x0, #0x1
  43f878:	add	x23, x23, x0
  43f87c:	ldr	x0, [x19], #16
  43f880:	bl	4047c0 <free@plt>
  43f884:	cmp	x19, x25
  43f888:	b.ne	43f860 <argp_parse@@Base+0xc120>  // b.any
  43f88c:	mov	x0, x26
  43f890:	bl	4047c0 <free@plt>
  43f894:	strb	wzr, [x24, x23]
  43f898:	ldp	x19, x20, [sp, #16]
  43f89c:	ldp	x25, x26, [sp, #64]
  43f8a0:	mov	x0, x24
  43f8a4:	ldp	x21, x22, [sp, #32]
  43f8a8:	ldp	x23, x24, [sp, #48]
  43f8ac:	ldp	x27, x28, [sp, #80]
  43f8b0:	ldp	x29, x30, [sp], #128
  43f8b4:	ret
  43f8b8:	ldr	x0, [sp, #96]
  43f8bc:	cmp	x0, x23
  43f8c0:	b.ne	43f894 <argp_parse@@Base+0xc154>  // b.any
  43f8c4:	add	x1, x23, #0x1
  43f8c8:	mov	x0, x24
  43f8cc:	bl	43ff70 <argp_parse@@Base+0xc830>
  43f8d0:	mov	x24, x0
  43f8d4:	b	43f894 <argp_parse@@Base+0xc154>
  43f8d8:	mov	x24, x21
  43f8dc:	b	43f8a0 <argp_parse@@Base+0xc160>
  43f8e0:	stp	x29, x30, [sp, #-48]!
  43f8e4:	mov	x29, sp
  43f8e8:	stp	x19, x20, [sp, #16]
  43f8ec:	mov	w20, w1
  43f8f0:	bl	44eafc <_obstack_memory_used@@Base+0xd960>
  43f8f4:	mov	x19, x0
  43f8f8:	cbz	x0, 43f94c <argp_parse@@Base+0xc20c>
  43f8fc:	mov	w1, w20
  43f900:	bl	43f604 <argp_parse@@Base+0xbec4>
  43f904:	mov	x20, x0
  43f908:	mov	x0, x19
  43f90c:	bl	4045a0 <closedir@plt>
  43f910:	cbnz	w0, 43f924 <argp_parse@@Base+0xc1e4>
  43f914:	mov	x0, x20
  43f918:	ldp	x19, x20, [sp, #16]
  43f91c:	ldp	x29, x30, [sp], #48
  43f920:	ret
  43f924:	str	x21, [sp, #32]
  43f928:	bl	404ad0 <__errno_location@plt>
  43f92c:	mov	x19, x0
  43f930:	ldr	w21, [x0]
  43f934:	mov	x0, x20
  43f938:	bl	4047c0 <free@plt>
  43f93c:	str	w21, [x19]
  43f940:	mov	x20, #0x0                   	// #0
  43f944:	ldr	x21, [sp, #32]
  43f948:	b	43f914 <argp_parse@@Base+0xc1d4>
  43f94c:	mov	x20, x0
  43f950:	b	43f914 <argp_parse@@Base+0xc1d4>
  43f954:	stp	x29, x30, [sp, #-32]!
  43f958:	mov	x29, sp
  43f95c:	stp	x19, x20, [sp, #16]
  43f960:	mov	x19, x0
  43f964:	mov	x20, x1
  43f968:	mov	x2, x1
  43f96c:	mov	w1, #0x0                   	// #0
  43f970:	bl	404960 <memchr@plt>
  43f974:	sub	x19, x0, x19
  43f978:	cmp	x0, #0x0
  43f97c:	csinc	x0, x20, x19, eq  // eq = none
  43f980:	ldp	x19, x20, [sp, #16]
  43f984:	ldp	x29, x30, [sp], #32
  43f988:	ret
  43f98c:	sub	sp, sp, #0x50
  43f990:	stp	x29, x30, [sp, #32]
  43f994:	add	x29, sp, #0x20
  43f998:	stp	x19, x20, [sp, #48]
  43f99c:	str	x21, [sp, #64]
  43f9a0:	mov	x21, x0
  43f9a4:	mov	x20, x4
  43f9a8:	mov	x19, x5
  43f9ac:	cbz	x1, 43fa70 <argp_parse@@Base+0xc330>
  43f9b0:	mov	x5, x3
  43f9b4:	mov	x4, x2
  43f9b8:	mov	x3, x1
  43f9bc:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43f9c0:	add	x2, x2, #0xbc0
  43f9c4:	mov	w1, #0x1                   	// #1
  43f9c8:	bl	404710 <__fprintf_chk@plt>
  43f9cc:	mov	w2, #0x5                   	// #5
  43f9d0:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43f9d4:	add	x1, x1, #0xbd8
  43f9d8:	mov	x0, #0x0                   	// #0
  43f9dc:	bl	4049c0 <dcgettext@plt>
  43f9e0:	mov	w4, #0x7e3                 	// #2019
  43f9e4:	mov	x3, x0
  43f9e8:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43f9ec:	add	x2, x2, #0xef0
  43f9f0:	mov	w1, #0x1                   	// #1
  43f9f4:	mov	x0, x21
  43f9f8:	bl	404710 <__fprintf_chk@plt>
  43f9fc:	mov	w2, #0x5                   	// #5
  43fa00:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43fa04:	add	x1, x1, #0xbe0
  43fa08:	mov	x0, #0x0                   	// #0
  43fa0c:	bl	4049c0 <dcgettext@plt>
  43fa10:	mov	x1, x21
  43fa14:	bl	4049e0 <fputs_unlocked@plt>
  43fa18:	cmp	x19, #0x5
  43fa1c:	b.eq	43fc04 <argp_parse@@Base+0xc4c4>  // b.none
  43fa20:	b.hi	43fad4 <argp_parse@@Base+0xc394>  // b.pmore
  43fa24:	cmp	x19, #0x2
  43fa28:	b.eq	43fba0 <argp_parse@@Base+0xc460>  // b.none
  43fa2c:	b.ls	43fa8c <argp_parse@@Base+0xc34c>  // b.plast
  43fa30:	cmp	x19, #0x3
  43fa34:	b.eq	43fbd0 <argp_parse@@Base+0xc490>  // b.none
  43fa38:	mov	w2, #0x5                   	// #5
  43fa3c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43fa40:	add	x1, x1, #0xcf8
  43fa44:	mov	x0, #0x0                   	// #0
  43fa48:	bl	4049c0 <dcgettext@plt>
  43fa4c:	ldr	x6, [x20, #24]
  43fa50:	ldr	x5, [x20, #16]
  43fa54:	ldr	x4, [x20, #8]
  43fa58:	ldr	x3, [x20]
  43fa5c:	mov	x2, x0
  43fa60:	mov	w1, #0x1                   	// #1
  43fa64:	mov	x0, x21
  43fa68:	bl	404710 <__fprintf_chk@plt>
  43fa6c:	b	43fac0 <argp_parse@@Base+0xc380>
  43fa70:	mov	x4, x3
  43fa74:	mov	x3, x2
  43fa78:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43fa7c:	add	x2, x2, #0xbd0
  43fa80:	mov	w1, #0x1                   	// #1
  43fa84:	bl	404710 <__fprintf_chk@plt>
  43fa88:	b	43f9cc <argp_parse@@Base+0xc28c>
  43fa8c:	cbz	x19, 43fac0 <argp_parse@@Base+0xc380>
  43fa90:	cmp	x19, #0x1
  43fa94:	b.ne	43fcd8 <argp_parse@@Base+0xc598>  // b.any
  43fa98:	mov	w2, #0x5                   	// #5
  43fa9c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43faa0:	add	x1, x1, #0xcb0
  43faa4:	mov	x0, #0x0                   	// #0
  43faa8:	bl	4049c0 <dcgettext@plt>
  43faac:	ldr	x3, [x20]
  43fab0:	mov	x2, x0
  43fab4:	mov	w1, #0x1                   	// #1
  43fab8:	mov	x0, x21
  43fabc:	bl	404710 <__fprintf_chk@plt>
  43fac0:	ldp	x19, x20, [sp, #48]
  43fac4:	ldr	x21, [sp, #64]
  43fac8:	ldp	x29, x30, [sp, #32]
  43facc:	add	sp, sp, #0x50
  43fad0:	ret
  43fad4:	cmp	x19, #0x8
  43fad8:	b.eq	43fc84 <argp_parse@@Base+0xc544>  // b.none
  43fadc:	b.ls	43fb44 <argp_parse@@Base+0xc404>  // b.plast
  43fae0:	cmp	x19, #0x9
  43fae4:	b.ne	43fcd8 <argp_parse@@Base+0xc598>  // b.any
  43fae8:	mov	w2, #0x5                   	// #5
  43faec:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43faf0:	add	x1, x1, #0xdc8
  43faf4:	mov	x0, #0x0                   	// #0
  43faf8:	bl	4049c0 <dcgettext@plt>
  43fafc:	ldr	x1, [x20, #64]
  43fb00:	str	x1, [sp, #24]
  43fb04:	ldr	x1, [x20, #56]
  43fb08:	str	x1, [sp, #16]
  43fb0c:	ldr	x1, [x20, #48]
  43fb10:	str	x1, [sp, #8]
  43fb14:	ldr	x1, [x20, #40]
  43fb18:	str	x1, [sp]
  43fb1c:	ldr	x7, [x20, #32]
  43fb20:	ldr	x6, [x20, #24]
  43fb24:	ldr	x5, [x20, #16]
  43fb28:	ldr	x4, [x20, #8]
  43fb2c:	ldr	x3, [x20]
  43fb30:	mov	x2, x0
  43fb34:	mov	w1, #0x1                   	// #1
  43fb38:	mov	x0, x21
  43fb3c:	bl	404710 <__fprintf_chk@plt>
  43fb40:	b	43fac0 <argp_parse@@Base+0xc380>
  43fb44:	cmp	x19, #0x6
  43fb48:	b.eq	43fc40 <argp_parse@@Base+0xc500>  // b.none
  43fb4c:	cmp	x19, #0x7
  43fb50:	b.ne	43fcd8 <argp_parse@@Base+0xc598>  // b.any
  43fb54:	mov	w2, #0x5                   	// #5
  43fb58:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43fb5c:	add	x1, x1, #0xd68
  43fb60:	mov	x0, #0x0                   	// #0
  43fb64:	bl	4049c0 <dcgettext@plt>
  43fb68:	ldr	x1, [x20, #48]
  43fb6c:	str	x1, [sp, #8]
  43fb70:	ldr	x1, [x20, #40]
  43fb74:	str	x1, [sp]
  43fb78:	ldr	x7, [x20, #32]
  43fb7c:	ldr	x6, [x20, #24]
  43fb80:	ldr	x5, [x20, #16]
  43fb84:	ldr	x4, [x20, #8]
  43fb88:	ldr	x3, [x20]
  43fb8c:	mov	x2, x0
  43fb90:	mov	w1, #0x1                   	// #1
  43fb94:	mov	x0, x21
  43fb98:	bl	404710 <__fprintf_chk@plt>
  43fb9c:	b	43fac0 <argp_parse@@Base+0xc380>
  43fba0:	mov	w2, #0x5                   	// #5
  43fba4:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43fba8:	add	x1, x1, #0xcc0
  43fbac:	mov	x0, #0x0                   	// #0
  43fbb0:	bl	4049c0 <dcgettext@plt>
  43fbb4:	ldr	x4, [x20, #8]
  43fbb8:	ldr	x3, [x20]
  43fbbc:	mov	x2, x0
  43fbc0:	mov	w1, #0x1                   	// #1
  43fbc4:	mov	x0, x21
  43fbc8:	bl	404710 <__fprintf_chk@plt>
  43fbcc:	b	43fac0 <argp_parse@@Base+0xc380>
  43fbd0:	mov	w2, #0x5                   	// #5
  43fbd4:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43fbd8:	add	x1, x1, #0xcd8
  43fbdc:	mov	x0, #0x0                   	// #0
  43fbe0:	bl	4049c0 <dcgettext@plt>
  43fbe4:	ldr	x5, [x20, #16]
  43fbe8:	ldr	x4, [x20, #8]
  43fbec:	ldr	x3, [x20]
  43fbf0:	mov	x2, x0
  43fbf4:	mov	w1, #0x1                   	// #1
  43fbf8:	mov	x0, x21
  43fbfc:	bl	404710 <__fprintf_chk@plt>
  43fc00:	b	43fac0 <argp_parse@@Base+0xc380>
  43fc04:	mov	w2, #0x5                   	// #5
  43fc08:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43fc0c:	add	x1, x1, #0xd18
  43fc10:	mov	x0, #0x0                   	// #0
  43fc14:	bl	4049c0 <dcgettext@plt>
  43fc18:	ldr	x7, [x20, #32]
  43fc1c:	ldr	x6, [x20, #24]
  43fc20:	ldr	x5, [x20, #16]
  43fc24:	ldr	x4, [x20, #8]
  43fc28:	ldr	x3, [x20]
  43fc2c:	mov	x2, x0
  43fc30:	mov	w1, #0x1                   	// #1
  43fc34:	mov	x0, x21
  43fc38:	bl	404710 <__fprintf_chk@plt>
  43fc3c:	b	43fac0 <argp_parse@@Base+0xc380>
  43fc40:	mov	w2, #0x5                   	// #5
  43fc44:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43fc48:	add	x1, x1, #0xd40
  43fc4c:	mov	x0, #0x0                   	// #0
  43fc50:	bl	4049c0 <dcgettext@plt>
  43fc54:	ldr	x1, [x20, #40]
  43fc58:	str	x1, [sp]
  43fc5c:	ldr	x7, [x20, #32]
  43fc60:	ldr	x6, [x20, #24]
  43fc64:	ldr	x5, [x20, #16]
  43fc68:	ldr	x4, [x20, #8]
  43fc6c:	ldr	x3, [x20]
  43fc70:	mov	x2, x0
  43fc74:	mov	w1, #0x1                   	// #1
  43fc78:	mov	x0, x21
  43fc7c:	bl	404710 <__fprintf_chk@plt>
  43fc80:	b	43fac0 <argp_parse@@Base+0xc380>
  43fc84:	mov	w2, #0x5                   	// #5
  43fc88:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43fc8c:	add	x1, x1, #0xd98
  43fc90:	mov	x0, #0x0                   	// #0
  43fc94:	bl	4049c0 <dcgettext@plt>
  43fc98:	ldr	x1, [x20, #56]
  43fc9c:	str	x1, [sp, #16]
  43fca0:	ldr	x1, [x20, #48]
  43fca4:	str	x1, [sp, #8]
  43fca8:	ldr	x1, [x20, #40]
  43fcac:	str	x1, [sp]
  43fcb0:	ldr	x7, [x20, #32]
  43fcb4:	ldr	x6, [x20, #24]
  43fcb8:	ldr	x5, [x20, #16]
  43fcbc:	ldr	x4, [x20, #8]
  43fcc0:	ldr	x3, [x20]
  43fcc4:	mov	x2, x0
  43fcc8:	mov	w1, #0x1                   	// #1
  43fccc:	mov	x0, x21
  43fcd0:	bl	404710 <__fprintf_chk@plt>
  43fcd4:	b	43fac0 <argp_parse@@Base+0xc380>
  43fcd8:	mov	w2, #0x5                   	// #5
  43fcdc:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43fce0:	add	x1, x1, #0xe00
  43fce4:	mov	x0, #0x0                   	// #0
  43fce8:	bl	4049c0 <dcgettext@plt>
  43fcec:	ldr	x1, [x20, #64]
  43fcf0:	str	x1, [sp, #24]
  43fcf4:	ldr	x1, [x20, #56]
  43fcf8:	str	x1, [sp, #16]
  43fcfc:	ldr	x1, [x20, #48]
  43fd00:	str	x1, [sp, #8]
  43fd04:	ldr	x1, [x20, #40]
  43fd08:	str	x1, [sp]
  43fd0c:	ldr	x7, [x20, #32]
  43fd10:	ldr	x6, [x20, #24]
  43fd14:	ldr	x5, [x20, #16]
  43fd18:	ldr	x4, [x20, #8]
  43fd1c:	ldr	x3, [x20]
  43fd20:	mov	x2, x0
  43fd24:	mov	w1, #0x1                   	// #1
  43fd28:	mov	x0, x21
  43fd2c:	bl	404710 <__fprintf_chk@plt>
  43fd30:	b	43fac0 <argp_parse@@Base+0xc380>
  43fd34:	stp	x29, x30, [sp, #-16]!
  43fd38:	mov	x29, sp
  43fd3c:	ldr	x5, [x4]
  43fd40:	cbz	x5, 43fd60 <argp_parse@@Base+0xc620>
  43fd44:	mov	x5, #0x0                   	// #0
  43fd48:	add	x5, x5, #0x1
  43fd4c:	ldr	x6, [x4, x5, lsl #3]
  43fd50:	cbnz	x6, 43fd48 <argp_parse@@Base+0xc608>
  43fd54:	bl	43f98c <argp_parse@@Base+0xc24c>
  43fd58:	ldp	x29, x30, [sp], #16
  43fd5c:	ret
  43fd60:	mov	x5, #0x0                   	// #0
  43fd64:	b	43fd54 <argp_parse@@Base+0xc614>
  43fd68:	stp	x29, x30, [sp, #-96]!
  43fd6c:	mov	x29, sp
  43fd70:	ldr	x7, [x4]
  43fd74:	ldr	w8, [x4, #24]
  43fd78:	ldr	x11, [x4, #8]
  43fd7c:	add	x4, sp, #0x10
  43fd80:	mov	x5, #0x0                   	// #0
  43fd84:	b	43fdc0 <argp_parse@@Base+0xc680>
  43fd88:	add	w9, w8, #0x8
  43fd8c:	cmp	w9, #0x0
  43fd90:	b.le	43fdd4 <argp_parse@@Base+0xc694>
  43fd94:	add	x10, x7, #0xf
  43fd98:	mov	w8, w9
  43fd9c:	mov	x6, x7
  43fda0:	and	x7, x10, #0xfffffffffffffff8
  43fda4:	ldr	x6, [x6]
  43fda8:	str	x6, [x4]
  43fdac:	cbz	x6, 43fde0 <argp_parse@@Base+0xc6a0>
  43fdb0:	add	x5, x5, #0x1
  43fdb4:	add	x4, x4, #0x8
  43fdb8:	cmp	x5, #0xa
  43fdbc:	b.eq	43fde0 <argp_parse@@Base+0xc6a0>  // b.none
  43fdc0:	tbnz	w8, #31, 43fd88 <argp_parse@@Base+0xc648>
  43fdc4:	add	x9, x7, #0xf
  43fdc8:	mov	x6, x7
  43fdcc:	and	x7, x9, #0xfffffffffffffff8
  43fdd0:	b	43fda4 <argp_parse@@Base+0xc664>
  43fdd4:	add	x6, x11, w8, sxtw
  43fdd8:	mov	w8, w9
  43fddc:	b	43fda4 <argp_parse@@Base+0xc664>
  43fde0:	add	x4, sp, #0x10
  43fde4:	bl	43f98c <argp_parse@@Base+0xc24c>
  43fde8:	ldp	x29, x30, [sp], #96
  43fdec:	ret
  43fdf0:	stp	x29, x30, [sp, #-240]!
  43fdf4:	mov	x29, sp
  43fdf8:	str	x4, [sp, #208]
  43fdfc:	str	x5, [sp, #216]
  43fe00:	str	x6, [sp, #224]
  43fe04:	str	x7, [sp, #232]
  43fe08:	str	q0, [sp, #80]
  43fe0c:	str	q1, [sp, #96]
  43fe10:	str	q2, [sp, #112]
  43fe14:	str	q3, [sp, #128]
  43fe18:	str	q4, [sp, #144]
  43fe1c:	str	q5, [sp, #160]
  43fe20:	str	q6, [sp, #176]
  43fe24:	str	q7, [sp, #192]
  43fe28:	add	x4, sp, #0xf0
  43fe2c:	str	x4, [sp, #48]
  43fe30:	str	x4, [sp, #56]
  43fe34:	add	x4, sp, #0xd0
  43fe38:	str	x4, [sp, #64]
  43fe3c:	mov	w4, #0xffffffe0            	// #-32
  43fe40:	str	w4, [sp, #72]
  43fe44:	mov	w4, #0xffffff80            	// #-128
  43fe48:	str	w4, [sp, #76]
  43fe4c:	ldp	x4, x5, [sp, #48]
  43fe50:	stp	x4, x5, [sp, #16]
  43fe54:	ldp	x4, x5, [sp, #64]
  43fe58:	stp	x4, x5, [sp, #32]
  43fe5c:	add	x4, sp, #0x10
  43fe60:	bl	43fd68 <argp_parse@@Base+0xc628>
  43fe64:	ldp	x29, x30, [sp], #240
  43fe68:	ret
  43fe6c:	stp	x29, x30, [sp, #-16]!
  43fe70:	mov	x29, sp
  43fe74:	mov	w2, #0x5                   	// #5
  43fe78:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43fe7c:	add	x1, x1, #0xe40
  43fe80:	mov	x0, #0x0                   	// #0
  43fe84:	bl	4049c0 <dcgettext@plt>
  43fe88:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43fe8c:	add	x2, x2, #0xe58
  43fe90:	mov	x1, x0
  43fe94:	mov	w0, #0x1                   	// #1
  43fe98:	bl	404410 <__printf_chk@plt>
  43fe9c:	mov	w2, #0x5                   	// #5
  43fea0:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43fea4:	add	x1, x1, #0xe68
  43fea8:	mov	x0, #0x0                   	// #0
  43feac:	bl	4049c0 <dcgettext@plt>
  43feb0:	adrp	x3, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43feb4:	add	x3, x3, #0xe80
  43feb8:	adrp	x2, 454000 <_obstack_memory_used@@Base+0x12e64>
  43febc:	add	x2, x2, #0x800
  43fec0:	mov	x1, x0
  43fec4:	mov	w0, #0x1                   	// #1
  43fec8:	bl	404410 <__printf_chk@plt>
  43fecc:	mov	w2, #0x5                   	// #5
  43fed0:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1be64>
  43fed4:	add	x1, x1, #0xea8
  43fed8:	mov	x0, #0x0                   	// #0
  43fedc:	bl	4049c0 <dcgettext@plt>
  43fee0:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x3ee64>
  43fee4:	ldr	x1, [x1, #1104]
  43fee8:	bl	4049e0 <fputs_unlocked@plt>
  43feec:	ldp	x29, x30, [sp], #16
  43fef0:	ret
  43fef4:	stp	x29, x30, [sp, #-32]!
  43fef8:	mov	x29, sp
  43fefc:	str	x19, [sp, #16]
  43ff00:	mov	x19, x0
  43ff04:	bl	404310 <malloc@plt>
  43ff08:	cmp	x0, #0x0
  43ff0c:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  43ff10:	b.ne	43ff20 <argp_parse@@Base+0xc7e0>  // b.any
  43ff14:	ldr	x19, [sp, #16]
  43ff18:	ldp	x29, x30, [sp], #32
  43ff1c:	ret
  43ff20:	bl	40e5ec <wcrtomb@plt+0x99cc>
  43ff24:	stp	x29, x30, [sp, #-16]!
  43ff28:	mov	x29, sp
  43ff2c:	mul	x3, x0, x1
  43ff30:	umulh	x2, x0, x1
  43ff34:	cmp	x2, #0x0
  43ff38:	cset	x2, ne  // ne = any
  43ff3c:	cmp	x3, #0x0
  43ff40:	csinc	x2, x2, xzr, ge  // ge = tcont
  43ff44:	cbnz	w2, 43ff58 <argp_parse@@Base+0xc818>
  43ff48:	mul	x0, x0, x1
  43ff4c:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  43ff50:	ldp	x29, x30, [sp], #16
  43ff54:	ret
  43ff58:	bl	40e5ec <wcrtomb@plt+0x99cc>
  43ff5c:	stp	x29, x30, [sp, #-16]!
  43ff60:	mov	x29, sp
  43ff64:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  43ff68:	ldp	x29, x30, [sp], #16
  43ff6c:	ret
  43ff70:	stp	x29, x30, [sp, #-32]!
  43ff74:	mov	x29, sp
  43ff78:	cmp	x1, #0x0
  43ff7c:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  43ff80:	b.ne	43ffa8 <argp_parse@@Base+0xc868>  // b.any
  43ff84:	str	x19, [sp, #16]
  43ff88:	mov	x19, x1
  43ff8c:	bl	404540 <realloc@plt>
  43ff90:	cmp	x0, #0x0
  43ff94:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  43ff98:	b.ne	43ffb4 <argp_parse@@Base+0xc874>  // b.any
  43ff9c:	ldr	x19, [sp, #16]
  43ffa0:	ldp	x29, x30, [sp], #32
  43ffa4:	ret
  43ffa8:	bl	4047c0 <free@plt>
  43ffac:	mov	x0, #0x0                   	// #0
  43ffb0:	b	43ffa0 <argp_parse@@Base+0xc860>
  43ffb4:	bl	40e5ec <wcrtomb@plt+0x99cc>
  43ffb8:	stp	x29, x30, [sp, #-16]!
  43ffbc:	mov	x29, sp
  43ffc0:	mul	x4, x1, x2
  43ffc4:	umulh	x3, x1, x2
  43ffc8:	cmp	x3, #0x0
  43ffcc:	cset	x3, ne  // ne = any
  43ffd0:	cmp	x4, #0x0
  43ffd4:	csinc	x3, x3, xzr, ge  // ge = tcont
  43ffd8:	cbnz	w3, 43ffec <argp_parse@@Base+0xc8ac>
  43ffdc:	mul	x1, x1, x2
  43ffe0:	bl	43ff70 <argp_parse@@Base+0xc830>
  43ffe4:	ldp	x29, x30, [sp], #16
  43ffe8:	ret
  43ffec:	bl	40e5ec <wcrtomb@plt+0x99cc>
  43fff0:	stp	x29, x30, [sp, #-16]!
  43fff4:	mov	x29, sp
  43fff8:	ldr	x3, [x1]
  43fffc:	cbz	x0, 440030 <argp_parse@@Base+0xc8f0>
  440000:	mov	x4, #0x5555555555555555    	// #6148914691236517205
  440004:	movk	x4, #0x5554
  440008:	udiv	x4, x4, x2
  44000c:	cmp	x4, x3
  440010:	b.ls	440064 <argp_parse@@Base+0xc924>  // b.plast
  440014:	add	x4, x3, #0x1
  440018:	add	x3, x4, x3, lsr #1
  44001c:	str	x3, [x1]
  440020:	mul	x1, x3, x2
  440024:	bl	43ff70 <argp_parse@@Base+0xc830>
  440028:	ldp	x29, x30, [sp], #16
  44002c:	ret
  440030:	cbnz	x3, 440044 <argp_parse@@Base+0xc904>
  440034:	mov	x3, #0x80                  	// #128
  440038:	udiv	x3, x3, x2
  44003c:	cmp	x2, #0x80
  440040:	cinc	x3, x3, hi  // hi = pmore
  440044:	mul	x5, x3, x2
  440048:	umulh	x4, x3, x2
  44004c:	cmp	x4, #0x0
  440050:	cset	x4, ne  // ne = any
  440054:	cmp	x5, #0x0
  440058:	csinc	x4, x4, xzr, ge  // ge = tcont
  44005c:	cbz	w4, 44001c <argp_parse@@Base+0xc8dc>
  440060:	bl	40e5ec <wcrtomb@plt+0x99cc>
  440064:	bl	40e5ec <wcrtomb@plt+0x99cc>
  440068:	stp	x29, x30, [sp, #-16]!
  44006c:	mov	x29, sp
  440070:	mov	x2, x1
  440074:	ldr	x1, [x1]
  440078:	cbz	x0, 4400a4 <argp_parse@@Base+0xc964>
  44007c:	mov	x3, #0x5555555555555555    	// #6148914691236517205
  440080:	movk	x3, #0x5553
  440084:	cmp	x1, x3
  440088:	b.hi	4400b0 <argp_parse@@Base+0xc970>  // b.pmore
  44008c:	add	x3, x1, #0x1
  440090:	add	x1, x3, x1, lsr #1
  440094:	str	x1, [x2]
  440098:	bl	43ff70 <argp_parse@@Base+0xc830>
  44009c:	ldp	x29, x30, [sp], #16
  4400a0:	ret
  4400a4:	cbz	x1, 4400b4 <argp_parse@@Base+0xc974>
  4400a8:	tbz	x1, #63, 440094 <argp_parse@@Base+0xc954>
  4400ac:	bl	40e5ec <wcrtomb@plt+0x99cc>
  4400b0:	bl	40e5ec <wcrtomb@plt+0x99cc>
  4400b4:	mov	x1, #0x80                  	// #128
  4400b8:	b	440094 <argp_parse@@Base+0xc954>
  4400bc:	stp	x29, x30, [sp, #-32]!
  4400c0:	mov	x29, sp
  4400c4:	str	x19, [sp, #16]
  4400c8:	mov	x19, x0
  4400cc:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  4400d0:	mov	x2, x19
  4400d4:	mov	w1, #0x0                   	// #0
  4400d8:	bl	404420 <memset@plt>
  4400dc:	ldr	x19, [sp, #16]
  4400e0:	ldp	x29, x30, [sp], #32
  4400e4:	ret
  4400e8:	stp	x29, x30, [sp, #-16]!
  4400ec:	mov	x29, sp
  4400f0:	mul	x3, x0, x1
  4400f4:	umulh	x2, x0, x1
  4400f8:	cmp	x2, #0x0
  4400fc:	cset	x2, ne  // ne = any
  440100:	cmp	x3, #0x0
  440104:	csinc	x2, x2, xzr, ge  // ge = tcont
  440108:	cbnz	w2, 44011c <argp_parse@@Base+0xc9dc>
  44010c:	bl	4044d0 <calloc@plt>
  440110:	cbz	x0, 44011c <argp_parse@@Base+0xc9dc>
  440114:	ldp	x29, x30, [sp], #16
  440118:	ret
  44011c:	bl	40e5ec <wcrtomb@plt+0x99cc>
  440120:	stp	x29, x30, [sp, #-32]!
  440124:	mov	x29, sp
  440128:	stp	x19, x20, [sp, #16]
  44012c:	mov	x20, x0
  440130:	mov	x19, x1
  440134:	mov	x0, x1
  440138:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  44013c:	mov	x2, x19
  440140:	mov	x1, x20
  440144:	bl	403f70 <memcpy@plt>
  440148:	ldp	x19, x20, [sp, #16]
  44014c:	ldp	x29, x30, [sp], #32
  440150:	ret
  440154:	stp	x29, x30, [sp, #-32]!
  440158:	mov	x29, sp
  44015c:	str	x19, [sp, #16]
  440160:	mov	x19, x0
  440164:	bl	403ff0 <strlen@plt>
  440168:	add	x1, x0, #0x1
  44016c:	mov	x0, x19
  440170:	bl	440120 <argp_parse@@Base+0xc9e0>
  440174:	ldr	x19, [sp, #16]
  440178:	ldp	x29, x30, [sp], #32
  44017c:	ret
  440180:	stp	x29, x30, [sp, #-32]!
  440184:	mov	x29, sp
  440188:	str	x19, [sp, #16]
  44018c:	mov	x1, #0x0                   	// #0
  440190:	mov	x0, #0x0                   	// #0
  440194:	bl	403fa0 <getcwd@plt>
  440198:	mov	x19, x0
  44019c:	cbz	x0, 4401b0 <argp_parse@@Base+0xca70>
  4401a0:	mov	x0, x19
  4401a4:	ldr	x19, [sp, #16]
  4401a8:	ldp	x29, x30, [sp], #32
  4401ac:	ret
  4401b0:	bl	404ad0 <__errno_location@plt>
  4401b4:	ldr	w0, [x0]
  4401b8:	cmp	w0, #0xc
  4401bc:	b.ne	4401a0 <argp_parse@@Base+0xca60>  // b.any
  4401c0:	bl	40e5ec <wcrtomb@plt+0x99cc>
  4401c4:	stp	x29, x30, [sp, #-16]!
  4401c8:	mov	x29, sp
  4401cc:	bl	404850 <strndup@plt>
  4401d0:	cbz	x0, 4401dc <argp_parse@@Base+0xca9c>
  4401d4:	ldp	x29, x30, [sp], #16
  4401d8:	ret
  4401dc:	bl	40e5ec <wcrtomb@plt+0x99cc>
  4401e0:	mov	x6, x0
  4401e4:	sub	w3, w2, #0x1
  4401e8:	cbz	w2, 440238 <argp_parse@@Base+0xcaf8>
  4401ec:	ldr	x2, [x0]
  4401f0:	mov	w0, #0x0                   	// #0
  4401f4:	sxtw	x1, w1
  4401f8:	mov	w7, #0x1                   	// #1
  4401fc:	mov	w5, #0x0                   	// #0
  440200:	b	44021c <argp_parse@@Base+0xcadc>
  440204:	mul	x2, x2, x1
  440208:	mov	w4, w5
  44020c:	orr	w0, w0, w4
  440210:	sub	w3, w3, #0x1
  440214:	cmn	w3, #0x1
  440218:	b.eq	440230 <argp_parse@@Base+0xcaf0>  // b.none
  44021c:	umulh	x4, x2, x1
  440220:	cbz	x4, 440204 <argp_parse@@Base+0xcac4>
  440224:	mov	x2, #0xffffffffffffffff    	// #-1
  440228:	mov	w4, w7
  44022c:	b	44020c <argp_parse@@Base+0xcacc>
  440230:	str	x2, [x6]
  440234:	ret
  440238:	mov	w0, #0x0                   	// #0
  44023c:	b	440234 <argp_parse@@Base+0xcaf4>
  440240:	stp	x29, x30, [sp, #-96]!
  440244:	mov	x29, sp
  440248:	stp	x19, x20, [sp, #16]
  44024c:	stp	x21, x22, [sp, #32]
  440250:	stp	x23, x24, [sp, #48]
  440254:	stp	x25, x26, [sp, #64]
  440258:	cmp	w2, #0x24
  44025c:	b.hi	44029c <argp_parse@@Base+0xcb5c>  // b.pmore
  440260:	mov	x25, x0
  440264:	mov	w24, w2
  440268:	mov	x23, x3
  44026c:	mov	x21, x4
  440270:	cmp	x1, #0x0
  440274:	add	x0, sp, #0x58
  440278:	csel	x20, x0, x1, eq  // eq = none
  44027c:	bl	404ad0 <__errno_location@plt>
  440280:	mov	x26, x0
  440284:	str	wzr, [x0]
  440288:	ldrb	w19, [x25]
  44028c:	bl	404750 <__ctype_b_loc@plt>
  440290:	ldr	x2, [x0]
  440294:	mov	x0, x25
  440298:	b	4402c0 <argp_parse@@Base+0xcb80>
  44029c:	adrp	x3, 45d000 <_obstack_memory_used@@Base+0x1be64>
  4402a0:	add	x3, x3, #0xf58
  4402a4:	mov	w2, #0x54                  	// #84
  4402a8:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1be64>
  4402ac:	add	x1, x1, #0xf20
  4402b0:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x1be64>
  4402b4:	add	x0, x0, #0xf30
  4402b8:	bl	404ac0 <__assert_fail@plt>
  4402bc:	ldrb	w19, [x0, #1]!
  4402c0:	and	x1, x19, #0xff
  4402c4:	ldrh	w1, [x2, x1, lsl #1]
  4402c8:	tbnz	w1, #13, 4402bc <argp_parse@@Base+0xcb7c>
  4402cc:	mov	w22, #0x4                   	// #4
  4402d0:	cmp	w19, #0x2d
  4402d4:	b.eq	44041c <argp_parse@@Base+0xccdc>  // b.none
  4402d8:	mov	w3, #0x0                   	// #0
  4402dc:	mov	w2, w24
  4402e0:	mov	x1, x20
  4402e4:	mov	x0, x25
  4402e8:	bl	4044c0 <__strtoul_internal@plt>
  4402ec:	str	x0, [sp, #80]
  4402f0:	ldr	x24, [x20]
  4402f4:	cmp	x24, x25
  4402f8:	b.eq	440318 <argp_parse@@Base+0xcbd8>  // b.none
  4402fc:	ldr	w1, [x26]
  440300:	cbz	w1, 440404 <argp_parse@@Base+0xccc4>
  440304:	mov	w22, #0x4                   	// #4
  440308:	cmp	w1, #0x22
  44030c:	b.ne	44041c <argp_parse@@Base+0xccdc>  // b.any
  440310:	mov	w22, #0x1                   	// #1
  440314:	b	440408 <argp_parse@@Base+0xccc8>
  440318:	cbz	x21, 440610 <argp_parse@@Base+0xced0>
  44031c:	ldrb	w1, [x25]
  440320:	cbz	w1, 44041c <argp_parse@@Base+0xccdc>
  440324:	mov	x0, x21
  440328:	bl	404870 <strchr@plt>
  44032c:	cbz	x0, 440618 <argp_parse@@Base+0xced8>
  440330:	mov	x0, #0x1                   	// #1
  440334:	str	x0, [sp, #80]
  440338:	ldrb	w19, [x24]
  44033c:	mov	w22, #0x0                   	// #0
  440340:	mov	w1, w19
  440344:	mov	x0, x21
  440348:	bl	404870 <strchr@plt>
  44034c:	cbz	x0, 440440 <argp_parse@@Base+0xcd00>
  440350:	sub	w0, w19, #0x45
  440354:	and	w0, w0, #0xff
  440358:	cmp	w0, #0x2f
  44035c:	b.hi	440468 <argp_parse@@Base+0xcd28>  // b.pmore
  440360:	mov	x2, #0x1                   	// #1
  440364:	lsl	x0, x2, x0
  440368:	mov	w25, #0x1                   	// #1
  44036c:	mov	w1, #0x400                 	// #1024
  440370:	mov	x2, #0x8945                	// #35141
  440374:	movk	x2, #0x30, lsl #16
  440378:	movk	x2, #0x8144, lsl #32
  44037c:	tst	x0, x2
  440380:	b.eq	4403c0 <argp_parse@@Base+0xcc80>  // b.none
  440384:	mov	w1, #0x30                  	// #48
  440388:	mov	x0, x21
  44038c:	bl	404870 <strchr@plt>
  440390:	cbz	x0, 440474 <argp_parse@@Base+0xcd34>
  440394:	ldrb	w0, [x24, #1]
  440398:	cmp	w0, #0x44
  44039c:	b.eq	440480 <argp_parse@@Base+0xcd40>  // b.none
  4403a0:	cmp	w0, #0x69
  4403a4:	b.eq	440450 <argp_parse@@Base+0xcd10>  // b.none
  4403a8:	cmp	w0, #0x42
  4403ac:	mov	w25, #0x2                   	// #2
  4403b0:	csinc	w25, w25, wzr, eq  // eq = none
  4403b4:	mov	w1, #0x400                 	// #1024
  4403b8:	mov	w0, #0x3e8                 	// #1000
  4403bc:	csel	w1, w1, w0, ne  // ne = any
  4403c0:	cmp	w19, #0x5a
  4403c4:	b.eq	4405c8 <argp_parse@@Base+0xce88>  // b.none
  4403c8:	b.hi	4404e8 <argp_parse@@Base+0xcda8>  // b.pmore
  4403cc:	cmp	w19, #0x4d
  4403d0:	b.eq	440568 <argp_parse@@Base+0xce28>  // b.none
  4403d4:	b.hi	4404b0 <argp_parse@@Base+0xcd70>  // b.pmore
  4403d8:	cmp	w19, #0x45
  4403dc:	b.eq	440598 <argp_parse@@Base+0xce58>  // b.none
  4403e0:	b.ls	44048c <argp_parse@@Base+0xcd4c>  // b.plast
  4403e4:	cmp	w19, #0x47
  4403e8:	b.eq	44052c <argp_parse@@Base+0xcdec>  // b.none
  4403ec:	cmp	w19, #0x4b
  4403f0:	b.ne	4405d8 <argp_parse@@Base+0xce98>  // b.any
  4403f4:	mov	w2, #0x1                   	// #1
  4403f8:	add	x0, sp, #0x50
  4403fc:	bl	4401e0 <argp_parse@@Base+0xcaa0>
  440400:	b	4405ec <argp_parse@@Base+0xceac>
  440404:	mov	w22, #0x0                   	// #0
  440408:	cbz	x21, 440438 <argp_parse@@Base+0xccf8>
  44040c:	ldrb	w19, [x24]
  440410:	cbnz	w19, 440340 <argp_parse@@Base+0xcc00>
  440414:	ldr	x0, [sp, #80]
  440418:	str	x0, [x23]
  44041c:	mov	w0, w22
  440420:	ldp	x19, x20, [sp, #16]
  440424:	ldp	x21, x22, [sp, #32]
  440428:	ldp	x23, x24, [sp, #48]
  44042c:	ldp	x25, x26, [sp, #64]
  440430:	ldp	x29, x30, [sp], #96
  440434:	ret
  440438:	str	x0, [x23]
  44043c:	b	44041c <argp_parse@@Base+0xccdc>
  440440:	ldr	x0, [sp, #80]
  440444:	str	x0, [x23]
  440448:	orr	w22, w22, #0x2
  44044c:	b	44041c <argp_parse@@Base+0xccdc>
  440450:	ldrb	w0, [x24, #2]
  440454:	cmp	w0, #0x42
  440458:	mov	w25, #0x3                   	// #3
  44045c:	csinc	w25, w25, wzr, eq  // eq = none
  440460:	mov	w1, #0x400                 	// #1024
  440464:	b	4403c0 <argp_parse@@Base+0xcc80>
  440468:	mov	w25, #0x1                   	// #1
  44046c:	mov	w1, #0x400                 	// #1024
  440470:	b	4403c0 <argp_parse@@Base+0xcc80>
  440474:	mov	w25, #0x1                   	// #1
  440478:	mov	w1, #0x400                 	// #1024
  44047c:	b	4403c0 <argp_parse@@Base+0xcc80>
  440480:	mov	w25, #0x2                   	// #2
  440484:	mov	w1, #0x3e8                 	// #1000
  440488:	b	4403c0 <argp_parse@@Base+0xcc80>
  44048c:	cmp	w19, #0x42
  440490:	b.ne	4405d8 <argp_parse@@Base+0xce98>  // b.any
  440494:	ldr	x0, [sp, #80]
  440498:	cmp	xzr, x0, lsr #54
  44049c:	b.ne	440588 <argp_parse@@Base+0xce48>  // b.any
  4404a0:	lsl	x0, x0, #10
  4404a4:	str	x0, [sp, #80]
  4404a8:	mov	w0, #0x0                   	// #0
  4404ac:	b	4405ec <argp_parse@@Base+0xceac>
  4404b0:	cmp	w19, #0x54
  4404b4:	b.eq	4405a8 <argp_parse@@Base+0xce68>  // b.none
  4404b8:	cmp	w19, #0x59
  4404bc:	b.ne	4404d0 <argp_parse@@Base+0xcd90>  // b.any
  4404c0:	mov	w2, #0x8                   	// #8
  4404c4:	add	x0, sp, #0x50
  4404c8:	bl	4401e0 <argp_parse@@Base+0xcaa0>
  4404cc:	b	4405ec <argp_parse@@Base+0xceac>
  4404d0:	cmp	w19, #0x50
  4404d4:	b.ne	4405d8 <argp_parse@@Base+0xce98>  // b.any
  4404d8:	mov	w2, #0x5                   	// #5
  4404dc:	add	x0, sp, #0x50
  4404e0:	bl	4401e0 <argp_parse@@Base+0xcaa0>
  4404e4:	b	4405ec <argp_parse@@Base+0xceac>
  4404e8:	cmp	w19, #0x6b
  4404ec:	b.eq	4403f4 <argp_parse@@Base+0xccb4>  // b.none
  4404f0:	b.ls	44051c <argp_parse@@Base+0xcddc>  // b.plast
  4404f4:	cmp	w19, #0x74
  4404f8:	b.eq	4405a8 <argp_parse@@Base+0xce68>  // b.none
  4404fc:	cmp	w19, #0x77
  440500:	b.ne	440560 <argp_parse@@Base+0xce20>  // b.any
  440504:	ldr	x0, [sp, #80]
  440508:	tbnz	x0, #63, 4405b8 <argp_parse@@Base+0xce78>
  44050c:	lsl	x0, x0, #1
  440510:	str	x0, [sp, #80]
  440514:	mov	w0, #0x0                   	// #0
  440518:	b	4405ec <argp_parse@@Base+0xceac>
  44051c:	cmp	w19, #0x63
  440520:	b.eq	4405e8 <argp_parse@@Base+0xcea8>  // b.none
  440524:	cmp	w19, #0x67
  440528:	b.ne	44053c <argp_parse@@Base+0xcdfc>  // b.any
  44052c:	mov	w2, #0x3                   	// #3
  440530:	add	x0, sp, #0x50
  440534:	bl	4401e0 <argp_parse@@Base+0xcaa0>
  440538:	b	4405ec <argp_parse@@Base+0xceac>
  44053c:	cmp	w19, #0x62
  440540:	b.ne	4405d8 <argp_parse@@Base+0xce98>  // b.any
  440544:	ldr	x0, [sp, #80]
  440548:	cmp	xzr, x0, lsr #55
  44054c:	b.ne	440578 <argp_parse@@Base+0xce38>  // b.any
  440550:	lsl	x0, x0, #9
  440554:	str	x0, [sp, #80]
  440558:	mov	w0, #0x0                   	// #0
  44055c:	b	4405ec <argp_parse@@Base+0xceac>
  440560:	cmp	w19, #0x6d
  440564:	b.ne	4405d8 <argp_parse@@Base+0xce98>  // b.any
  440568:	mov	w2, #0x2                   	// #2
  44056c:	add	x0, sp, #0x50
  440570:	bl	4401e0 <argp_parse@@Base+0xcaa0>
  440574:	b	4405ec <argp_parse@@Base+0xceac>
  440578:	mov	x0, #0xffffffffffffffff    	// #-1
  44057c:	str	x0, [sp, #80]
  440580:	mov	w0, #0x1                   	// #1
  440584:	b	4405ec <argp_parse@@Base+0xceac>
  440588:	mov	x0, #0xffffffffffffffff    	// #-1
  44058c:	str	x0, [sp, #80]
  440590:	mov	w0, #0x1                   	// #1
  440594:	b	4405ec <argp_parse@@Base+0xceac>
  440598:	mov	w2, #0x6                   	// #6
  44059c:	add	x0, sp, #0x50
  4405a0:	bl	4401e0 <argp_parse@@Base+0xcaa0>
  4405a4:	b	4405ec <argp_parse@@Base+0xceac>
  4405a8:	mov	w2, #0x4                   	// #4
  4405ac:	add	x0, sp, #0x50
  4405b0:	bl	4401e0 <argp_parse@@Base+0xcaa0>
  4405b4:	b	4405ec <argp_parse@@Base+0xceac>
  4405b8:	mov	x0, #0xffffffffffffffff    	// #-1
  4405bc:	str	x0, [sp, #80]
  4405c0:	mov	w0, #0x1                   	// #1
  4405c4:	b	4405ec <argp_parse@@Base+0xceac>
  4405c8:	mov	w2, #0x7                   	// #7
  4405cc:	add	x0, sp, #0x50
  4405d0:	bl	4401e0 <argp_parse@@Base+0xcaa0>
  4405d4:	b	4405ec <argp_parse@@Base+0xceac>
  4405d8:	ldr	x0, [sp, #80]
  4405dc:	str	x0, [x23]
  4405e0:	orr	w22, w22, #0x2
  4405e4:	b	44041c <argp_parse@@Base+0xccdc>
  4405e8:	mov	w0, #0x0                   	// #0
  4405ec:	orr	w22, w22, w0
  4405f0:	ldr	x0, [x20]
  4405f4:	add	x1, x0, w25, sxtw
  4405f8:	str	x1, [x20]
  4405fc:	ldrb	w1, [x0, w25, sxtw]
  440600:	orr	w0, w22, #0x2
  440604:	cmp	w1, #0x0
  440608:	csel	w22, w0, w22, ne  // ne = any
  44060c:	b	440414 <argp_parse@@Base+0xccd4>
  440610:	mov	w22, #0x4                   	// #4
  440614:	b	44041c <argp_parse@@Base+0xccdc>
  440618:	mov	w22, #0x4                   	// #4
  44061c:	b	44041c <argp_parse@@Base+0xccdc>
  440620:	stp	x29, x30, [sp, #-272]!
  440624:	mov	x29, sp
  440628:	str	x1, [sp, #216]
  44062c:	str	x2, [sp, #224]
  440630:	str	x3, [sp, #232]
  440634:	str	x4, [sp, #240]
  440638:	str	x5, [sp, #248]
  44063c:	str	x6, [sp, #256]
  440640:	str	x7, [sp, #264]
  440644:	str	q0, [sp, #80]
  440648:	str	q1, [sp, #96]
  44064c:	str	q2, [sp, #112]
  440650:	str	q3, [sp, #128]
  440654:	str	q4, [sp, #144]
  440658:	str	q5, [sp, #160]
  44065c:	str	q6, [sp, #176]
  440660:	str	q7, [sp, #192]
  440664:	add	x1, sp, #0x110
  440668:	str	x1, [sp, #48]
  44066c:	str	x1, [sp, #56]
  440670:	add	x1, sp, #0xd0
  440674:	str	x1, [sp, #64]
  440678:	mov	w1, #0xffffffc8            	// #-56
  44067c:	str	w1, [sp, #72]
  440680:	mov	w1, #0xffffff80            	// #-128
  440684:	str	w1, [sp, #76]
  440688:	ldp	x2, x3, [sp, #48]
  44068c:	stp	x2, x3, [sp, #16]
  440690:	ldp	x2, x3, [sp, #64]
  440694:	stp	x2, x3, [sp, #32]
  440698:	add	x1, sp, #0x10
  44069c:	bl	4505b4 <_obstack_memory_used@@Base+0xf418>
  4406a0:	ldp	x29, x30, [sp], #272
  4406a4:	ret
  4406a8:	ldr	w0, [x0]
  4406ac:	tbz	w0, #31, 4406b4 <argp_parse@@Base+0xcf74>
  4406b0:	ret
  4406b4:	stp	x29, x30, [sp, #-16]!
  4406b8:	mov	x29, sp
  4406bc:	bl	4045d0 <close@plt>
  4406c0:	cbnz	w0, 4406cc <argp_parse@@Base+0xcf8c>
  4406c4:	ldp	x29, x30, [sp], #16
  4406c8:	ret
  4406cc:	adrp	x3, 45d000 <_obstack_memory_used@@Base+0x1be64>
  4406d0:	add	x3, x3, #0xfd8
  4406d4:	mov	w2, #0x40                  	// #64
  4406d8:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1be64>
  4406dc:	add	x1, x1, #0xf68
  4406e0:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x1be64>
  4406e4:	add	x0, x0, #0xf78
  4406e8:	bl	404ac0 <__assert_fail@plt>
  4406ec:	stp	x29, x30, [sp, #-32]!
  4406f0:	mov	x29, sp
  4406f4:	stp	x19, x20, [sp, #16]
  4406f8:	mov	x19, x0
  4406fc:	mov	w2, #0x4900                	// #18688
  440700:	ldr	w0, [x0]
  440704:	bl	404ab0 <openat@plt>
  440708:	tbnz	w0, #31, 44072c <argp_parse@@Base+0xcfec>
  44070c:	mov	w20, w0
  440710:	mov	x0, x19
  440714:	bl	4406a8 <argp_parse@@Base+0xcf68>
  440718:	str	w20, [x19]
  44071c:	mov	w0, #0x0                   	// #0
  440720:	ldp	x19, x20, [sp, #16]
  440724:	ldp	x29, x30, [sp], #32
  440728:	ret
  44072c:	mov	w0, #0xffffffff            	// #-1
  440730:	b	440720 <argp_parse@@Base+0xcfe0>
  440734:	stp	x29, x30, [sp, #-96]!
  440738:	mov	x29, sp
  44073c:	stp	x19, x20, [sp, #16]
  440740:	stp	x21, x22, [sp, #32]
  440744:	mov	x21, x0
  440748:	bl	4047b0 <chdir@plt>
  44074c:	mov	w19, w0
  440750:	cbz	w0, 440768 <argp_parse@@Base+0xd028>
  440754:	bl	404ad0 <__errno_location@plt>
  440758:	mov	x22, x0
  44075c:	ldr	w0, [x0]
  440760:	cmp	w0, #0x24
  440764:	b.eq	44077c <argp_parse@@Base+0xd03c>  // b.none
  440768:	mov	w0, w19
  44076c:	ldp	x19, x20, [sp, #16]
  440770:	ldp	x21, x22, [sp, #32]
  440774:	ldp	x29, x30, [sp], #96
  440778:	ret
  44077c:	stp	x23, x24, [sp, #48]
  440780:	mov	x0, x21
  440784:	bl	403ff0 <strlen@plt>
  440788:	mov	x23, x0
  44078c:	mov	w0, #0xffffff9c            	// #-100
  440790:	str	w0, [sp, #88]
  440794:	cbz	x23, 440898 <argp_parse@@Base+0xd158>
  440798:	cmp	x23, #0xfff
  44079c:	b.ls	4408c0 <argp_parse@@Base+0xd180>  // b.plast
  4407a0:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  4407a4:	add	x1, x1, #0x30
  4407a8:	mov	x0, x21
  4407ac:	bl	404860 <strspn@plt>
  4407b0:	mov	x19, x0
  4407b4:	cmp	x0, #0x2
  4407b8:	b.eq	4408e8 <argp_parse@@Base+0xd1a8>  // b.none
  4407bc:	mov	x20, x21
  4407c0:	cbnz	x0, 44094c <argp_parse@@Base+0xd20c>
  4407c4:	ldrb	w0, [x20]
  4407c8:	cmp	w0, #0x2f
  4407cc:	b.eq	440968 <argp_parse@@Base+0xd228>  // b.none
  4407d0:	add	x21, x21, x23
  4407d4:	cmp	x20, x21
  4407d8:	b.hi	440990 <argp_parse@@Base+0xd250>  // b.pmore
  4407dc:	sub	x0, x21, x20
  4407e0:	cmp	x0, #0xfff
  4407e4:	b.le	440860 <argp_parse@@Base+0xd120>
  4407e8:	str	x25, [sp, #64]
  4407ec:	mov	x25, #0x1000                	// #4096
  4407f0:	mov	w24, #0x2f                  	// #47
  4407f4:	adrp	x23, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  4407f8:	add	x23, x23, #0x30
  4407fc:	mov	x2, x25
  440800:	mov	w1, w24
  440804:	mov	x0, x20
  440808:	bl	404890 <memrchr@plt>
  44080c:	mov	x19, x0
  440810:	cbz	x0, 4409b8 <argp_parse@@Base+0xd278>
  440814:	strb	wzr, [x0]
  440818:	sub	x0, x0, x20
  44081c:	cmp	x0, #0xfff
  440820:	b.gt	4409d0 <argp_parse@@Base+0xd290>
  440824:	mov	x1, x20
  440828:	add	x0, sp, #0x58
  44082c:	bl	4406ec <argp_parse@@Base+0xcfac>
  440830:	mov	w1, #0x2f                  	// #47
  440834:	strb	w1, [x19]
  440838:	cbnz	w0, 4409f4 <argp_parse@@Base+0xd2b4>
  44083c:	add	x19, x19, #0x1
  440840:	mov	x1, x23
  440844:	mov	x0, x19
  440848:	bl	404860 <strspn@plt>
  44084c:	add	x20, x19, x0
  440850:	sub	x0, x21, x20
  440854:	cmp	x0, #0xfff
  440858:	b.gt	4407fc <argp_parse@@Base+0xd0bc>
  44085c:	ldr	x25, [sp, #64]
  440860:	cmp	x21, x20
  440864:	b.ls	440878 <argp_parse@@Base+0xd138>  // b.plast
  440868:	mov	x1, x20
  44086c:	add	x0, sp, #0x58
  440870:	bl	4406ec <argp_parse@@Base+0xcfac>
  440874:	cbnz	w0, 4409f8 <argp_parse@@Base+0xd2b8>
  440878:	ldr	w0, [sp, #88]
  44087c:	bl	404060 <fchdir@plt>
  440880:	mov	w19, w0
  440884:	cbnz	w0, 4409f8 <argp_parse@@Base+0xd2b8>
  440888:	add	x0, sp, #0x58
  44088c:	bl	4406a8 <argp_parse@@Base+0xcf68>
  440890:	ldp	x23, x24, [sp, #48]
  440894:	b	440768 <argp_parse@@Base+0xd028>
  440898:	str	x25, [sp, #64]
  44089c:	adrp	x3, 45d000 <_obstack_memory_used@@Base+0x1be64>
  4408a0:	add	x3, x3, #0xfd8
  4408a4:	add	x3, x3, #0x10
  4408a8:	mov	w2, #0x7e                  	// #126
  4408ac:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1be64>
  4408b0:	add	x1, x1, #0xf68
  4408b4:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x1be64>
  4408b8:	add	x0, x0, #0xf88
  4408bc:	bl	404ac0 <__assert_fail@plt>
  4408c0:	str	x25, [sp, #64]
  4408c4:	adrp	x3, 45d000 <_obstack_memory_used@@Base+0x1be64>
  4408c8:	add	x3, x3, #0xfd8
  4408cc:	add	x3, x3, #0x10
  4408d0:	mov	w2, #0x7f                  	// #127
  4408d4:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1be64>
  4408d8:	add	x1, x1, #0xf68
  4408dc:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x1be64>
  4408e0:	add	x0, x0, #0xf90
  4408e4:	bl	404ac0 <__assert_fail@plt>
  4408e8:	sub	x2, x23, #0x3
  4408ec:	mov	w1, #0x2f                  	// #47
  4408f0:	add	x0, x21, #0x3
  4408f4:	bl	404960 <memchr@plt>
  4408f8:	mov	x19, x0
  4408fc:	cbz	x0, 440938 <argp_parse@@Base+0xd1f8>
  440900:	strb	wzr, [x0]
  440904:	mov	x1, x21
  440908:	add	x0, sp, #0x58
  44090c:	bl	4406ec <argp_parse@@Base+0xcfac>
  440910:	mov	w1, #0x2f                  	// #47
  440914:	strb	w1, [x19]
  440918:	cbnz	w0, 4409f8 <argp_parse@@Base+0xd2b8>
  44091c:	add	x19, x19, #0x1
  440920:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  440924:	add	x1, x1, #0x30
  440928:	mov	x0, x19
  44092c:	bl	404860 <strspn@plt>
  440930:	add	x20, x19, x0
  440934:	b	4407c4 <argp_parse@@Base+0xd084>
  440938:	mov	w0, #0x24                  	// #36
  44093c:	str	w0, [x22]
  440940:	mov	w19, #0xffffffff            	// #-1
  440944:	ldp	x23, x24, [sp, #48]
  440948:	b	440768 <argp_parse@@Base+0xd028>
  44094c:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  440950:	add	x1, x1, #0x30
  440954:	add	x0, sp, #0x58
  440958:	bl	4406ec <argp_parse@@Base+0xcfac>
  44095c:	cbnz	w0, 4409f8 <argp_parse@@Base+0xd2b8>
  440960:	add	x20, x21, x19
  440964:	b	4407c4 <argp_parse@@Base+0xd084>
  440968:	str	x25, [sp, #64]
  44096c:	adrp	x3, 45d000 <_obstack_memory_used@@Base+0x1be64>
  440970:	add	x3, x3, #0xfd8
  440974:	add	x3, x3, #0x10
  440978:	mov	w2, #0xa2                  	// #162
  44097c:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1be64>
  440980:	add	x1, x1, #0xf68
  440984:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x1be64>
  440988:	add	x0, x0, #0xfa0
  44098c:	bl	404ac0 <__assert_fail@plt>
  440990:	str	x25, [sp, #64]
  440994:	adrp	x3, 45d000 <_obstack_memory_used@@Base+0x1be64>
  440998:	add	x3, x3, #0xfd8
  44099c:	add	x3, x3, #0x10
  4409a0:	mov	w2, #0xa3                  	// #163
  4409a4:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1be64>
  4409a8:	add	x1, x1, #0xf68
  4409ac:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x1be64>
  4409b0:	add	x0, x0, #0xfb0
  4409b4:	bl	404ac0 <__assert_fail@plt>
  4409b8:	mov	w0, #0x24                  	// #36
  4409bc:	str	w0, [x22]
  4409c0:	mov	w19, #0xffffffff            	// #-1
  4409c4:	ldp	x23, x24, [sp, #48]
  4409c8:	ldr	x25, [sp, #64]
  4409cc:	b	440768 <argp_parse@@Base+0xd028>
  4409d0:	adrp	x3, 45d000 <_obstack_memory_used@@Base+0x1be64>
  4409d4:	add	x3, x3, #0xfd8
  4409d8:	add	x3, x3, #0x10
  4409dc:	mov	w2, #0xb3                  	// #179
  4409e0:	adrp	x1, 45d000 <_obstack_memory_used@@Base+0x1be64>
  4409e4:	add	x1, x1, #0xf68
  4409e8:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x1be64>
  4409ec:	add	x0, x0, #0xfc0
  4409f0:	bl	404ac0 <__assert_fail@plt>
  4409f4:	ldr	x25, [sp, #64]
  4409f8:	ldr	w19, [x22]
  4409fc:	add	x0, sp, #0x58
  440a00:	bl	4406a8 <argp_parse@@Base+0xcf68>
  440a04:	str	w19, [x22]
  440a08:	mov	w19, #0xffffffff            	// #-1
  440a0c:	ldp	x23, x24, [sp, #48]
  440a10:	b	440768 <argp_parse@@Base+0xd028>
  440a14:	stp	x29, x30, [sp, #-112]!
  440a18:	mov	x29, sp
  440a1c:	stp	x19, x20, [sp, #16]
  440a20:	mov	w19, w0
  440a24:	str	x2, [sp, #80]
  440a28:	str	x3, [sp, #88]
  440a2c:	str	x4, [sp, #96]
  440a30:	str	x5, [sp, #104]
  440a34:	add	x0, sp, #0x70
  440a38:	str	x0, [sp, #48]
  440a3c:	str	x0, [sp, #56]
  440a40:	add	x0, sp, #0x50
  440a44:	str	x0, [sp, #64]
  440a48:	mov	w0, #0xffffffe0            	// #-32
  440a4c:	str	w0, [sp, #72]
  440a50:	str	wzr, [sp, #76]
  440a54:	cbz	w1, 440a98 <argp_parse@@Base+0xd358>
  440a58:	cmp	w1, #0x406
  440a5c:	b.eq	440b00 <argp_parse@@Base+0xd3c0>  // b.none
  440a60:	cmp	w1, #0xb
  440a64:	b.gt	440c60 <argp_parse@@Base+0xd520>
  440a68:	tbz	w1, #31, 440c3c <argp_parse@@Base+0xd4fc>
  440a6c:	ldr	w2, [sp, #72]
  440a70:	ldr	x0, [sp, #48]
  440a74:	tbnz	w2, #31, 440cf4 <argp_parse@@Base+0xd5b4>
  440a78:	add	x2, x0, #0xf
  440a7c:	and	x2, x2, #0xfffffffffffffff8
  440a80:	str	x2, [sp, #48]
  440a84:	ldr	x2, [x0]
  440a88:	mov	w0, w19
  440a8c:	bl	4048e0 <fcntl@plt>
  440a90:	mov	w20, w0
  440a94:	b	440ac4 <argp_parse@@Base+0xd384>
  440a98:	ldr	w1, [sp, #72]
  440a9c:	ldr	x0, [sp, #48]
  440aa0:	tbnz	w1, #31, 440ad4 <argp_parse@@Base+0xd394>
  440aa4:	add	x1, x0, #0xb
  440aa8:	and	x1, x1, #0xfffffffffffffff8
  440aac:	str	x1, [sp, #48]
  440ab0:	ldr	w2, [x0]
  440ab4:	mov	w1, #0x0                   	// #0
  440ab8:	mov	w0, w19
  440abc:	bl	4048e0 <fcntl@plt>
  440ac0:	mov	w20, w0
  440ac4:	mov	w0, w20
  440ac8:	ldp	x19, x20, [sp, #16]
  440acc:	ldp	x29, x30, [sp], #112
  440ad0:	ret
  440ad4:	add	w2, w1, #0x8
  440ad8:	str	w2, [sp, #72]
  440adc:	cmp	w2, #0x0
  440ae0:	b.le	440af4 <argp_parse@@Base+0xd3b4>
  440ae4:	add	x1, x0, #0xb
  440ae8:	and	x1, x1, #0xfffffffffffffff8
  440aec:	str	x1, [sp, #48]
  440af0:	b	440ab0 <argp_parse@@Base+0xd370>
  440af4:	ldr	x0, [sp, #56]
  440af8:	add	x0, x0, w1, sxtw
  440afc:	b	440ab0 <argp_parse@@Base+0xd370>
  440b00:	str	x21, [sp, #32]
  440b04:	ldr	w1, [sp, #72]
  440b08:	ldr	x0, [sp, #48]
  440b0c:	tbnz	w1, #31, 440b58 <argp_parse@@Base+0xd418>
  440b10:	add	x1, x0, #0xb
  440b14:	and	x1, x1, #0xfffffffffffffff8
  440b18:	str	x1, [sp, #48]
  440b1c:	ldr	w21, [x0]
  440b20:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  440b24:	ldr	w0, [x0, #3800]
  440b28:	tbnz	w0, #31, 440be8 <argp_parse@@Base+0xd4a8>
  440b2c:	mov	w2, w21
  440b30:	mov	w1, #0x406                 	// #1030
  440b34:	mov	w0, w19
  440b38:	bl	4048e0 <fcntl@plt>
  440b3c:	mov	w20, w0
  440b40:	tbnz	w0, #31, 440b84 <argp_parse@@Base+0xd444>
  440b44:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  440b48:	mov	w1, #0x1                   	// #1
  440b4c:	str	w1, [x0, #3800]
  440b50:	ldr	x21, [sp, #32]
  440b54:	b	440ac4 <argp_parse@@Base+0xd384>
  440b58:	add	w2, w1, #0x8
  440b5c:	str	w2, [sp, #72]
  440b60:	cmp	w2, #0x0
  440b64:	b.le	440b78 <argp_parse@@Base+0xd438>
  440b68:	add	x1, x0, #0xb
  440b6c:	and	x1, x1, #0xfffffffffffffff8
  440b70:	str	x1, [sp, #48]
  440b74:	b	440b1c <argp_parse@@Base+0xd3dc>
  440b78:	ldr	x0, [sp, #56]
  440b7c:	add	x0, x0, w1, sxtw
  440b80:	b	440b1c <argp_parse@@Base+0xd3dc>
  440b84:	bl	404ad0 <__errno_location@plt>
  440b88:	ldr	w0, [x0]
  440b8c:	cmp	w0, #0x16
  440b90:	b.ne	440b44 <argp_parse@@Base+0xd404>  // b.any
  440b94:	mov	w2, w21
  440b98:	mov	w1, #0x0                   	// #0
  440b9c:	mov	w0, w19
  440ba0:	bl	4048e0 <fcntl@plt>
  440ba4:	mov	w20, w0
  440ba8:	tbnz	w0, #31, 440d20 <argp_parse@@Base+0xd5e0>
  440bac:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  440bb0:	mov	w1, #0xffffffff            	// #-1
  440bb4:	str	w1, [x0, #3800]
  440bb8:	mov	w1, #0x1                   	// #1
  440bbc:	mov	w0, w20
  440bc0:	bl	4048e0 <fcntl@plt>
  440bc4:	tbnz	w0, #31, 440c18 <argp_parse@@Base+0xd4d8>
  440bc8:	orr	w2, w0, #0x1
  440bcc:	mov	w1, #0x2                   	// #2
  440bd0:	mov	w0, w20
  440bd4:	bl	4048e0 <fcntl@plt>
  440bd8:	cmn	w0, #0x1
  440bdc:	b.eq	440c18 <argp_parse@@Base+0xd4d8>  // b.none
  440be0:	ldr	x21, [sp, #32]
  440be4:	b	440ac4 <argp_parse@@Base+0xd384>
  440be8:	mov	w2, w21
  440bec:	mov	w1, #0x0                   	// #0
  440bf0:	mov	w0, w19
  440bf4:	bl	4048e0 <fcntl@plt>
  440bf8:	mov	w20, w0
  440bfc:	tbnz	w0, #31, 440d28 <argp_parse@@Base+0xd5e8>
  440c00:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  440c04:	ldr	w0, [x0, #3800]
  440c08:	cmn	w0, #0x1
  440c0c:	b.eq	440bb8 <argp_parse@@Base+0xd478>  // b.none
  440c10:	ldr	x21, [sp, #32]
  440c14:	b	440ac4 <argp_parse@@Base+0xd384>
  440c18:	bl	404ad0 <__errno_location@plt>
  440c1c:	mov	x19, x0
  440c20:	ldr	w21, [x0]
  440c24:	mov	w0, w20
  440c28:	bl	4045d0 <close@plt>
  440c2c:	str	w21, [x19]
  440c30:	mov	w20, #0xffffffff            	// #-1
  440c34:	ldr	x21, [sp, #32]
  440c38:	b	440ac4 <argp_parse@@Base+0xd384>
  440c3c:	mov	x2, #0x1                   	// #1
  440c40:	lsl	x2, x2, x1
  440c44:	mov	x0, #0x515                 	// #1301
  440c48:	tst	x2, x0
  440c4c:	b.ne	440c9c <argp_parse@@Base+0xd55c>  // b.any
  440c50:	mov	x0, #0xa0a                 	// #2570
  440c54:	tst	x2, x0
  440c58:	b.ne	440c8c <argp_parse@@Base+0xd54c>  // b.any
  440c5c:	b	440a6c <argp_parse@@Base+0xd32c>
  440c60:	sub	w0, w1, #0x400
  440c64:	cmp	w0, #0xa
  440c68:	b.hi	440a6c <argp_parse@@Base+0xd32c>  // b.pmore
  440c6c:	mov	x2, #0x1                   	// #1
  440c70:	lsl	x2, x2, x0
  440c74:	mov	x0, #0x2c5                 	// #709
  440c78:	tst	x2, x0
  440c7c:	b.ne	440c9c <argp_parse@@Base+0xd55c>  // b.any
  440c80:	mov	x0, #0x502                 	// #1282
  440c84:	tst	x2, x0
  440c88:	b.eq	440a6c <argp_parse@@Base+0xd32c>  // b.none
  440c8c:	mov	w0, w19
  440c90:	bl	4048e0 <fcntl@plt>
  440c94:	mov	w20, w0
  440c98:	b	440ac4 <argp_parse@@Base+0xd384>
  440c9c:	ldr	w2, [sp, #72]
  440ca0:	ldr	x0, [sp, #48]
  440ca4:	tbnz	w2, #31, 440cc8 <argp_parse@@Base+0xd588>
  440ca8:	add	x2, x0, #0xb
  440cac:	and	x2, x2, #0xfffffffffffffff8
  440cb0:	str	x2, [sp, #48]
  440cb4:	ldr	w2, [x0]
  440cb8:	mov	w0, w19
  440cbc:	bl	4048e0 <fcntl@plt>
  440cc0:	mov	w20, w0
  440cc4:	b	440ac4 <argp_parse@@Base+0xd384>
  440cc8:	add	w3, w2, #0x8
  440ccc:	str	w3, [sp, #72]
  440cd0:	cmp	w3, #0x0
  440cd4:	b.le	440ce8 <argp_parse@@Base+0xd5a8>
  440cd8:	add	x2, x0, #0xb
  440cdc:	and	x2, x2, #0xfffffffffffffff8
  440ce0:	str	x2, [sp, #48]
  440ce4:	b	440cb4 <argp_parse@@Base+0xd574>
  440ce8:	ldr	x0, [sp, #56]
  440cec:	add	x0, x0, w2, sxtw
  440cf0:	b	440cb4 <argp_parse@@Base+0xd574>
  440cf4:	add	w3, w2, #0x8
  440cf8:	str	w3, [sp, #72]
  440cfc:	cmp	w3, #0x0
  440d00:	b.le	440d14 <argp_parse@@Base+0xd5d4>
  440d04:	add	x2, x0, #0xf
  440d08:	and	x2, x2, #0xfffffffffffffff8
  440d0c:	str	x2, [sp, #48]
  440d10:	b	440a84 <argp_parse@@Base+0xd344>
  440d14:	ldr	x0, [sp, #56]
  440d18:	add	x0, x0, w2, sxtw
  440d1c:	b	440a84 <argp_parse@@Base+0xd344>
  440d20:	ldr	x21, [sp, #32]
  440d24:	b	440ac4 <argp_parse@@Base+0xd384>
  440d28:	ldr	x21, [sp, #32]
  440d2c:	b	440ac4 <argp_parse@@Base+0xd384>
  440d30:	stp	x29, x30, [sp, #-16]!
  440d34:	mov	x29, sp
  440d38:	mov	w6, #0x0                   	// #0
  440d3c:	mov	w5, #0x0                   	// #0
  440d40:	bl	4512b4 <_obstack_memory_used@@Base+0x10118>
  440d44:	ldp	x29, x30, [sp], #16
  440d48:	ret
  440d4c:	stp	x29, x30, [sp, #-16]!
  440d50:	mov	x29, sp
  440d54:	mov	w7, #0x0                   	// #0
  440d58:	mov	x6, x5
  440d5c:	mov	w5, #0x0                   	// #0
  440d60:	bl	450c88 <_obstack_memory_used@@Base+0xfaec>
  440d64:	ldp	x29, x30, [sp], #16
  440d68:	ret
  440d6c:	stp	x29, x30, [sp, #-16]!
  440d70:	mov	x29, sp
  440d74:	mov	w6, #0x0                   	// #0
  440d78:	mov	w5, #0x1                   	// #1
  440d7c:	bl	4512b4 <_obstack_memory_used@@Base+0x10118>
  440d80:	ldp	x29, x30, [sp], #16
  440d84:	ret
  440d88:	stp	x29, x30, [sp, #-16]!
  440d8c:	mov	x29, sp
  440d90:	mov	w7, #0x0                   	// #0
  440d94:	mov	x6, x5
  440d98:	mov	w5, #0x1                   	// #1
  440d9c:	bl	450c88 <_obstack_memory_used@@Base+0xfaec>
  440da0:	ldp	x29, x30, [sp], #16
  440da4:	ret
  440da8:	stp	x29, x30, [sp, #-64]!
  440dac:	mov	x29, sp
  440db0:	stp	x19, x20, [sp, #16]
  440db4:	stp	x21, x22, [sp, #32]
  440db8:	mov	x19, x0
  440dbc:	mov	x22, x1
  440dc0:	mov	x21, x2
  440dc4:	cmp	x0, #0x0
  440dc8:	add	x0, sp, #0x3c
  440dcc:	csel	x19, x0, x19, eq  // eq = none
  440dd0:	mov	x0, x19
  440dd4:	bl	403f60 <mbrtowc@plt>
  440dd8:	mov	x20, x0
  440ddc:	cmp	x21, #0x0
  440de0:	ccmn	x0, #0x3, #0x0, ne  // ne = any
  440de4:	b.hi	440dfc <argp_parse@@Base+0xd6bc>  // b.pmore
  440de8:	mov	x0, x20
  440dec:	ldp	x19, x20, [sp, #16]
  440df0:	ldp	x21, x22, [sp, #32]
  440df4:	ldp	x29, x30, [sp], #64
  440df8:	ret
  440dfc:	mov	w0, #0x0                   	// #0
  440e00:	bl	44ebe0 <_obstack_memory_used@@Base+0xda44>
  440e04:	and	w0, w0, #0xff
  440e08:	cbnz	w0, 440de8 <argp_parse@@Base+0xd6a8>
  440e0c:	ldrb	w0, [x22]
  440e10:	str	w0, [x19]
  440e14:	mov	x20, #0x1                   	// #1
  440e18:	b	440de8 <argp_parse@@Base+0xd6a8>
  440e1c:	stp	x29, x30, [sp, #-16]!
  440e20:	mov	x29, sp
  440e24:	mov	x2, x0
  440e28:	ldrb	w0, [x0, #80]
  440e2c:	tbz	w0, #0, 440e44 <argp_parse@@Base+0xd704>
  440e30:	ldr	x3, [x2, #56]
  440e34:	ldr	x0, [x2, #72]
  440e38:	blr	x3
  440e3c:	ldp	x29, x30, [sp], #16
  440e40:	ret
  440e44:	ldr	x2, [x2, #56]
  440e48:	mov	x0, x1
  440e4c:	blr	x2
  440e50:	b	440e3c <argp_parse@@Base+0xd6fc>
  440e54:	stp	x29, x30, [sp, #-16]!
  440e58:	mov	x29, sp
  440e5c:	mov	x2, x0
  440e60:	ldrb	w0, [x0, #80]
  440e64:	tbz	w0, #0, 440e7c <argp_parse@@Base+0xd73c>
  440e68:	ldr	x3, [x2, #64]
  440e6c:	ldr	x0, [x2, #72]
  440e70:	blr	x3
  440e74:	ldp	x29, x30, [sp], #16
  440e78:	ret
  440e7c:	ldr	x2, [x2, #64]
  440e80:	mov	x0, x1
  440e84:	blr	x2
  440e88:	b	440e74 <argp_parse@@Base+0xd734>
  440e8c:	stp	x29, x30, [sp, #-48]!
  440e90:	mov	x29, sp
  440e94:	stp	x19, x20, [sp, #16]
  440e98:	str	x21, [sp, #32]
  440e9c:	mov	x19, x0
  440ea0:	cmp	x2, #0x0
  440ea4:	mov	x0, #0x10                  	// #16
  440ea8:	csel	x20, x2, x0, ne  // ne = any
  440eac:	cmp	x1, #0x0
  440eb0:	mov	x0, #0xfe0                 	// #4064
  440eb4:	csel	x1, x1, x0, ne  // ne = any
  440eb8:	str	x1, [x19]
  440ebc:	sub	x21, x20, #0x1
  440ec0:	str	x21, [x19, #48]
  440ec4:	mov	x0, x19
  440ec8:	bl	440e1c <argp_parse@@Base+0xd6dc>
  440ecc:	str	x0, [x19, #8]
  440ed0:	cbz	x0, 440f20 <argp_parse@@Base+0xd7e0>
  440ed4:	add	x2, x0, #0x10
  440ed8:	add	x2, x2, x21
  440edc:	neg	x20, x20
  440ee0:	and	x20, x2, x20
  440ee4:	str	x20, [x19, #16]
  440ee8:	str	x20, [x19, #24]
  440eec:	ldr	x1, [x19]
  440ef0:	add	x1, x0, x1
  440ef4:	str	x1, [x0]
  440ef8:	str	x1, [x19, #32]
  440efc:	str	xzr, [x0, #8]
  440f00:	ldrb	w0, [x19, #80]
  440f04:	and	w0, w0, #0xfffffff9
  440f08:	strb	w0, [x19, #80]
  440f0c:	mov	w0, #0x1                   	// #1
  440f10:	ldp	x19, x20, [sp, #16]
  440f14:	ldr	x21, [sp, #32]
  440f18:	ldp	x29, x30, [sp], #48
  440f1c:	ret
  440f20:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  440f24:	ldr	x0, [x0, #1064]
  440f28:	blr	x0
  440f2c:	stp	x29, x30, [sp, #-32]!
  440f30:	mov	x29, sp
  440f34:	str	x19, [sp, #16]
  440f38:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  440f3c:	ldr	x19, [x0, #1096]
  440f40:	mov	w2, #0x5                   	// #5
  440f44:	adrp	x1, 453000 <_obstack_memory_used@@Base+0x11e64>
  440f48:	add	x1, x1, #0xaa0
  440f4c:	mov	x0, #0x0                   	// #0
  440f50:	bl	4049c0 <dcgettext@plt>
  440f54:	mov	x3, x0
  440f58:	adrp	x2, 45d000 <_obstack_memory_used@@Base+0x1be64>
  440f5c:	add	x2, x2, #0xbc8
  440f60:	mov	w1, #0x1                   	// #1
  440f64:	mov	x0, x19
  440f68:	bl	404710 <__fprintf_chk@plt>
  440f6c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  440f70:	ldr	w0, [x0, #968]
  440f74:	bl	404020 <exit@plt>

0000000000440f78 <_obstack_begin@@Base>:
  440f78:	stp	x29, x30, [sp, #-16]!
  440f7c:	mov	x29, sp
  440f80:	str	x3, [x0, #56]
  440f84:	str	x4, [x0, #64]
  440f88:	ldrb	w3, [x0, #80]
  440f8c:	and	w3, w3, #0xfffffffe
  440f90:	strb	w3, [x0, #80]
  440f94:	bl	440e8c <argp_parse@@Base+0xd74c>
  440f98:	ldp	x29, x30, [sp], #16
  440f9c:	ret

0000000000440fa0 <_obstack_begin_1@@Base>:
  440fa0:	stp	x29, x30, [sp, #-16]!
  440fa4:	mov	x29, sp
  440fa8:	str	x3, [x0, #56]
  440fac:	str	x4, [x0, #64]
  440fb0:	str	x5, [x0, #72]
  440fb4:	ldrb	w3, [x0, #80]
  440fb8:	orr	w3, w3, #0x1
  440fbc:	strb	w3, [x0, #80]
  440fc0:	bl	440e8c <argp_parse@@Base+0xd74c>
  440fc4:	ldp	x29, x30, [sp], #16
  440fc8:	ret

0000000000440fcc <_obstack_newchunk@@Base>:
  440fcc:	stp	x29, x30, [sp, #-64]!
  440fd0:	mov	x29, sp
  440fd4:	stp	x19, x20, [sp, #16]
  440fd8:	stp	x21, x22, [sp, #32]
  440fdc:	str	x23, [sp, #48]
  440fe0:	mov	x19, x0
  440fe4:	ldr	x22, [x0, #8]
  440fe8:	ldr	x21, [x0, #24]
  440fec:	ldr	x0, [x0, #16]
  440ff0:	sub	x21, x21, x0
  440ff4:	add	x1, x21, x1
  440ff8:	ldr	x0, [x19, #48]
  440ffc:	add	x0, x1, x0
  441000:	lsr	x20, x21, #3
  441004:	add	x20, x20, #0x64
  441008:	add	x20, x20, x0
  44100c:	ldr	x2, [x19]
  441010:	cmp	x2, x0
  441014:	csel	x2, x2, x0, cs  // cs = hs, nlast
  441018:	cmp	x2, x20
  44101c:	csel	x20, x2, x20, cs  // cs = hs, nlast
  441020:	cmp	x21, x1
  441024:	ccmp	x1, x0, #0x2, ls  // ls = plast
  441028:	b.hi	4410c4 <_obstack_newchunk@@Base+0xf8>  // b.pmore
  44102c:	mov	x1, x20
  441030:	mov	x0, x19
  441034:	bl	440e1c <argp_parse@@Base+0xd6dc>
  441038:	mov	x23, x0
  44103c:	cbz	x0, 4410c4 <_obstack_newchunk@@Base+0xf8>
  441040:	str	x0, [x19, #8]
  441044:	str	x22, [x0, #8]
  441048:	add	x2, x0, x20
  44104c:	str	x2, [x19, #32]
  441050:	mov	x1, x0
  441054:	str	x2, [x1], #16
  441058:	ldr	x20, [x19, #48]
  44105c:	add	x1, x1, x20
  441060:	bic	x20, x1, x20
  441064:	mov	x2, x21
  441068:	ldr	x1, [x19, #16]
  44106c:	mov	x0, x20
  441070:	bl	403f70 <memcpy@plt>
  441074:	ldrb	w0, [x19, #80]
  441078:	tbnz	w0, #1, 441098 <_obstack_newchunk@@Base+0xcc>
  44107c:	ldr	x0, [x19, #48]
  441080:	add	x1, x22, #0x10
  441084:	add	x1, x1, x0
  441088:	bic	x0, x1, x0
  44108c:	ldr	x1, [x19, #16]
  441090:	cmp	x1, x0
  441094:	b.eq	4410d0 <_obstack_newchunk@@Base+0x104>  // b.none
  441098:	str	x20, [x19, #16]
  44109c:	add	x20, x20, x21
  4410a0:	str	x20, [x19, #24]
  4410a4:	ldrb	w0, [x19, #80]
  4410a8:	and	w0, w0, #0xfffffffd
  4410ac:	strb	w0, [x19, #80]
  4410b0:	ldp	x19, x20, [sp, #16]
  4410b4:	ldp	x21, x22, [sp, #32]
  4410b8:	ldr	x23, [sp, #48]
  4410bc:	ldp	x29, x30, [sp], #64
  4410c0:	ret
  4410c4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4410c8:	ldr	x0, [x0, #1064]
  4410cc:	blr	x0
  4410d0:	ldr	x0, [x22, #8]
  4410d4:	str	x0, [x23, #8]
  4410d8:	mov	x1, x22
  4410dc:	mov	x0, x19
  4410e0:	bl	440e54 <argp_parse@@Base+0xd714>
  4410e4:	b	441098 <_obstack_newchunk@@Base+0xcc>

00000000004410e8 <_obstack_allocated_p@@Base>:
  4410e8:	ldr	x0, [x0, #8]
  4410ec:	cbnz	x0, 4410fc <_obstack_allocated_p@@Base+0x14>
  4410f0:	b	441110 <_obstack_allocated_p@@Base+0x28>
  4410f4:	ldr	x0, [x0, #8]
  4410f8:	cbz	x0, 441110 <_obstack_allocated_p@@Base+0x28>
  4410fc:	cmp	x1, x0
  441100:	b.ls	4410f4 <_obstack_allocated_p@@Base+0xc>  // b.plast
  441104:	ldr	x2, [x0]
  441108:	cmp	x2, x1
  44110c:	b.cc	4410f4 <_obstack_allocated_p@@Base+0xc>  // b.lo, b.ul, b.last
  441110:	cmp	x0, #0x0
  441114:	cset	w0, ne  // ne = any
  441118:	ret

000000000044111c <_obstack_free@@Base>:
  44111c:	stp	x29, x30, [sp, #-48]!
  441120:	mov	x29, sp
  441124:	stp	x19, x20, [sp, #16]
  441128:	str	x21, [sp, #32]
  44112c:	mov	x19, x0
  441130:	mov	x21, x1
  441134:	ldr	x1, [x0, #8]
  441138:	cbnz	x1, 441164 <_obstack_free@@Base+0x48>
  44113c:	cbz	x21, 44118c <_obstack_free@@Base+0x70>
  441140:	bl	404660 <abort@plt>
  441144:	ldr	x20, [x1, #8]
  441148:	mov	x0, x19
  44114c:	bl	440e54 <argp_parse@@Base+0xd714>
  441150:	ldrb	w2, [x19, #80]
  441154:	orr	w2, w2, #0x2
  441158:	strb	w2, [x19, #80]
  44115c:	cbz	x20, 44113c <_obstack_free@@Base+0x20>
  441160:	mov	x1, x20
  441164:	cmp	x21, x1
  441168:	b.ls	441144 <_obstack_free@@Base+0x28>  // b.plast
  44116c:	ldr	x0, [x1]
  441170:	cmp	x0, x21
  441174:	b.cc	441144 <_obstack_free@@Base+0x28>  // b.lo, b.ul, b.last
  441178:	str	x21, [x19, #24]
  44117c:	str	x21, [x19, #16]
  441180:	ldr	x0, [x1]
  441184:	str	x0, [x19, #32]
  441188:	str	x1, [x19, #8]
  44118c:	ldp	x19, x20, [sp, #16]
  441190:	ldr	x21, [sp, #32]
  441194:	ldp	x29, x30, [sp], #48
  441198:	ret

000000000044119c <_obstack_memory_used@@Base>:
  44119c:	ldr	x1, [x0, #8]
  4411a0:	cbz	x1, 4411c0 <_obstack_memory_used@@Base+0x24>
  4411a4:	mov	x0, #0x0                   	// #0
  4411a8:	ldr	x2, [x1]
  4411ac:	sub	x2, x2, x1
  4411b0:	add	x0, x0, x2
  4411b4:	ldr	x1, [x1, #8]
  4411b8:	cbnz	x1, 4411a8 <_obstack_memory_used@@Base+0xc>
  4411bc:	ret
  4411c0:	mov	x0, #0x0                   	// #0
  4411c4:	b	4411bc <_obstack_memory_used@@Base+0x20>
  4411c8:	stp	x29, x30, [sp, #-80]!
  4411cc:	mov	x29, sp
  4411d0:	stp	x19, x20, [sp, #16]
  4411d4:	mov	x19, x0
  4411d8:	ldrb	w0, [x2]
  4411dc:	cbz	w0, 441260 <_obstack_memory_used@@Base+0xc4>
  4411e0:	stp	x21, x22, [sp, #32]
  4411e4:	mov	w21, w1
  4411e8:	mov	x20, x2
  4411ec:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4411f0:	ldr	w0, [x0, #3804]
  4411f4:	cbz	w0, 44126c <_obstack_memory_used@@Base+0xd0>
  4411f8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4411fc:	ldr	w0, [x0, #3804]
  441200:	tbnz	w0, #31, 4412e4 <_obstack_memory_used@@Base+0x148>
  441204:	mov	x0, x20
  441208:	bl	403ff0 <strlen@plt>
  44120c:	add	x0, x0, #0x1b
  441210:	cmp	x0, #0xfc0
  441214:	b.ls	441224 <_obstack_memory_used@@Base+0x88>  // b.plast
  441218:	bl	404310 <malloc@plt>
  44121c:	mov	x19, x0
  441220:	cbz	x0, 4412f0 <_obstack_memory_used@@Base+0x154>
  441224:	mov	w4, w21
  441228:	adrp	x3, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  44122c:	add	x3, x3, #0x20
  441230:	mov	x2, #0xffffffffffffffff    	// #-1
  441234:	mov	w1, #0x1                   	// #1
  441238:	mov	x0, x19
  44123c:	bl	404010 <__sprintf_chk@plt>
  441240:	mov	x1, x20
  441244:	add	x0, x19, w0, sxtw
  441248:	bl	404910 <strcpy@plt>
  44124c:	mov	x0, x19
  441250:	ldp	x21, x22, [sp, #32]
  441254:	ldp	x19, x20, [sp, #16]
  441258:	ldp	x29, x30, [sp], #80
  44125c:	ret
  441260:	strb	wzr, [x19]
  441264:	mov	x0, x19
  441268:	b	441254 <_obstack_memory_used@@Base+0xb8>
  44126c:	mov	w1, #0x4900                	// #18688
  441270:	adrp	x0, 45d000 <_obstack_memory_used@@Base+0x1be64>
  441274:	add	x0, x0, #0xff8
  441278:	bl	404340 <open@plt>
  44127c:	mov	w22, w0
  441280:	tbz	w0, #31, 44129c <_obstack_memory_used@@Base+0x100>
  441284:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  441288:	mov	w1, #0xffffffff            	// #-1
  44128c:	str	w1, [x0, #3804]
  441290:	mov	x0, #0x0                   	// #0
  441294:	ldp	x21, x22, [sp, #32]
  441298:	b	441254 <_obstack_memory_used@@Base+0xb8>
  44129c:	mov	w4, w0
  4412a0:	adrp	x3, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  4412a4:	add	x3, x3, #0x8
  4412a8:	mov	x2, #0x20                  	// #32
  4412ac:	mov	w1, #0x1                   	// #1
  4412b0:	add	x0, sp, #0x30
  4412b4:	bl	404010 <__sprintf_chk@plt>
  4412b8:	mov	w1, #0x0                   	// #0
  4412bc:	add	x0, sp, #0x30
  4412c0:	bl	4046a0 <access@plt>
  4412c4:	mov	w1, #0x1                   	// #1
  4412c8:	cmp	w0, #0x0
  4412cc:	cneg	w1, w1, ne  // ne = any
  4412d0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4412d4:	str	w1, [x0, #3804]
  4412d8:	mov	w0, w22
  4412dc:	bl	4045d0 <close@plt>
  4412e0:	b	4411f8 <_obstack_memory_used@@Base+0x5c>
  4412e4:	mov	x0, #0x0                   	// #0
  4412e8:	ldp	x21, x22, [sp, #32]
  4412ec:	b	441254 <_obstack_memory_used@@Base+0xb8>
  4412f0:	ldp	x21, x22, [sp, #32]
  4412f4:	b	441254 <_obstack_memory_used@@Base+0xb8>
  4412f8:	mov	x2, x0
  4412fc:	ldr	w0, [x0, #144]
  441300:	cmp	w0, #0x1
  441304:	b.eq	44133c <_obstack_memory_used@@Base+0x1a0>  // b.none
  441308:	add	x1, x1, #0x1
  44130c:	ldr	x3, [x2, #48]
  441310:	cmp	x1, x3
  441314:	b.ge	441340 <_obstack_memory_used@@Base+0x1a4>  // b.tcont
  441318:	ldr	x4, [x2, #16]
  44131c:	mov	w0, #0x1                   	// #1
  441320:	ldr	w2, [x4, x1, lsl #2]
  441324:	cmn	w2, #0x1
  441328:	b.ne	44133c <_obstack_memory_used@@Base+0x1a0>  // b.any
  44132c:	add	w0, w0, #0x1
  441330:	add	x1, x1, #0x1
  441334:	cmp	x3, x1
  441338:	b.ne	441320 <_obstack_memory_used@@Base+0x184>  // b.any
  44133c:	ret
  441340:	mov	w0, #0x1                   	// #1
  441344:	b	44133c <_obstack_memory_used@@Base+0x1a0>
  441348:	ldr	w2, [x0, #144]
  44134c:	cmp	w2, #0x1
  441350:	b.eq	441360 <_obstack_memory_used@@Base+0x1c4>  // b.none
  441354:	ldr	x0, [x0, #16]
  441358:	ldr	w0, [x0, x1, lsl #2]
  44135c:	ret
  441360:	ldr	x0, [x0, #8]
  441364:	ldrb	w0, [x0, x1]
  441368:	b	44135c <_obstack_memory_used@@Base+0x1c0>
  44136c:	ldr	x1, [x0, #88]
  441370:	ldr	x4, [x0, #64]
  441374:	cmp	x4, x1
  441378:	csel	x4, x4, x1, le
  44137c:	ldr	x1, [x0, #48]
  441380:	cmp	x4, x1
  441384:	b.le	4413c0 <_obstack_memory_used@@Base+0x224>
  441388:	ldr	x2, [x0]
  44138c:	ldr	x3, [x0, #40]
  441390:	add	x2, x2, x1
  441394:	ldrb	w2, [x2, x3]
  441398:	ldr	x3, [x0, #120]
  44139c:	ldrb	w3, [x3, x2]
  4413a0:	ldr	x2, [x0, #8]
  4413a4:	strb	w3, [x2, x1]
  4413a8:	add	x1, x1, #0x1
  4413ac:	cmp	x4, x1
  4413b0:	b.ne	441388 <_obstack_memory_used@@Base+0x1ec>  // b.any
  4413b4:	str	x4, [x0, #48]
  4413b8:	str	x4, [x0, #56]
  4413bc:	ret
  4413c0:	mov	x4, x1
  4413c4:	b	4413b4 <_obstack_memory_used@@Base+0x218>
  4413c8:	mov	x3, x0
  4413cc:	cmp	x0, #0x0
  4413d0:	cset	w0, eq  // eq = none
  4413d4:	cmp	x1, #0x0
  4413d8:	csinc	w0, w0, wzr, ne  // ne = any
  4413dc:	cbnz	w0, 44141c <_obstack_memory_used@@Base+0x280>
  4413e0:	ldr	x2, [x3, #8]
  4413e4:	ldr	x4, [x1, #8]
  4413e8:	cmp	x2, x4
  4413ec:	b.ne	441420 <_obstack_memory_used@@Base+0x284>  // b.any
  4413f0:	subs	x2, x2, #0x1
  4413f4:	b.mi	441414 <_obstack_memory_used@@Base+0x278>  // b.first
  4413f8:	ldr	x5, [x3, #16]
  4413fc:	ldr	x4, [x1, #16]
  441400:	ldr	x5, [x5, x2, lsl #3]
  441404:	ldr	x4, [x4, x2, lsl #3]
  441408:	cmp	x5, x4
  44140c:	b.eq	4413f0 <_obstack_memory_used@@Base+0x254>  // b.none
  441410:	b	441420 <_obstack_memory_used@@Base+0x284>
  441414:	mov	w0, #0x1                   	// #1
  441418:	b	441420 <_obstack_memory_used@@Base+0x284>
  44141c:	mov	w0, #0x0                   	// #0
  441420:	ret
  441424:	ldr	x3, [x0, #8]
  441428:	cmp	x3, #0x0
  44142c:	b.le	44147c <_obstack_memory_used@@Base+0x2e0>
  441430:	sub	x3, x3, #0x1
  441434:	mov	x4, #0x0                   	// #0
  441438:	cmp	x3, x4
  44143c:	b.ls	441468 <_obstack_memory_used@@Base+0x2cc>  // b.plast
  441440:	add	x2, x3, x4
  441444:	lsr	x2, x2, #1
  441448:	ldr	x5, [x0, #16]
  44144c:	ldr	x5, [x5, x2, lsl #3]
  441450:	cmp	x5, x1
  441454:	b.lt	441460 <_obstack_memory_used@@Base+0x2c4>  // b.tstop
  441458:	mov	x3, x2
  44145c:	b	441438 <_obstack_memory_used@@Base+0x29c>
  441460:	add	x4, x2, #0x1
  441464:	b	441438 <_obstack_memory_used@@Base+0x29c>
  441468:	ldr	x0, [x0, #16]
  44146c:	ldr	x0, [x0, x4, lsl #3]
  441470:	cmp	x0, x1
  441474:	csinc	x0, xzr, x4, ne  // ne = any
  441478:	ret
  44147c:	mov	x0, #0x0                   	// #0
  441480:	b	441478 <_obstack_memory_used@@Base+0x2dc>
  441484:	tbnz	x1, #63, 4414cc <_obstack_memory_used@@Base+0x330>
  441488:	ldr	x2, [x0, #8]
  44148c:	cmp	x2, x1
  441490:	b.le	4414cc <_obstack_memory_used@@Base+0x330>
  441494:	sub	x2, x2, #0x1
  441498:	str	x2, [x0, #8]
  44149c:	cmp	x2, x1
  4414a0:	b.le	4414cc <_obstack_memory_used@@Base+0x330>
  4414a4:	add	x2, x1, #0x1
  4414a8:	lsl	x2, x2, #3
  4414ac:	ldr	x3, [x0, #16]
  4414b0:	ldr	x4, [x3, x2]
  4414b4:	str	x4, [x3, x1, lsl #3]
  4414b8:	add	x1, x1, #0x1
  4414bc:	add	x2, x2, #0x8
  4414c0:	ldr	x3, [x0, #8]
  4414c4:	cmp	x3, x1
  4414c8:	b.gt	4414ac <_obstack_memory_used@@Base+0x310>
  4414cc:	ret
  4414d0:	ldrb	w2, [x1, #48]
  4414d4:	cmp	w2, #0x4
  4414d8:	b.eq	4414ec <_obstack_memory_used@@Base+0x350>  // b.none
  4414dc:	cmp	w2, #0x11
  4414e0:	b.eq	44151c <_obstack_memory_used@@Base+0x380>  // b.none
  4414e4:	mov	w0, #0x0                   	// #0
  4414e8:	ret
  4414ec:	ldr	x2, [x0, #224]
  4414f0:	cbz	x2, 4414e4 <_obstack_memory_used@@Base+0x348>
  4414f4:	ldrsw	x3, [x1, #40]
  4414f8:	ldr	x2, [x2, x3, lsl #3]
  4414fc:	str	x2, [x1, #40]
  441500:	mov	w1, #0x1                   	// #1
  441504:	lsl	w1, w1, w2
  441508:	sxtw	x1, w1
  44150c:	ldr	x2, [x0, #160]
  441510:	orr	x1, x2, x1
  441514:	str	x1, [x0, #160]
  441518:	b	4414e4 <_obstack_memory_used@@Base+0x348>
  44151c:	ldr	x2, [x1, #8]
  441520:	cbz	x2, 4414e4 <_obstack_memory_used@@Base+0x348>
  441524:	ldrb	w3, [x2, #48]
  441528:	cmp	w3, #0x11
  44152c:	b.ne	4414e4 <_obstack_memory_used@@Base+0x348>  // b.any
  441530:	ldr	x3, [x2, #40]
  441534:	ldr	x2, [x2, #8]
  441538:	str	x2, [x1, #8]
  44153c:	cbz	x2, 441544 <_obstack_memory_used@@Base+0x3a8>
  441540:	str	x1, [x2]
  441544:	ldr	x2, [x0, #224]
  441548:	ldr	x1, [x1, #40]
  44154c:	ldr	x1, [x2, x1, lsl #3]
  441550:	str	x1, [x2, x3, lsl #3]
  441554:	cmp	x3, #0x3f
  441558:	b.gt	4414e4 <_obstack_memory_used@@Base+0x348>
  44155c:	mov	x1, #0x1                   	// #1
  441560:	lsl	x1, x1, x3
  441564:	ldr	x2, [x0, #160]
  441568:	bic	x1, x2, x1
  44156c:	str	x1, [x0, #160]
  441570:	b	4414e4 <_obstack_memory_used@@Base+0x348>
  441574:	ldrb	w0, [x1, #48]
  441578:	cmp	w0, #0xb
  44157c:	b.eq	4415ac <_obstack_memory_used@@Base+0x410>  // b.none
  441580:	cmp	w0, #0x10
  441584:	b.eq	4415bc <_obstack_memory_used@@Base+0x420>  // b.none
  441588:	ldr	x0, [x1, #8]
  44158c:	cbz	x0, 441598 <_obstack_memory_used@@Base+0x3fc>
  441590:	ldr	x2, [x1, #32]
  441594:	str	x2, [x0, #32]
  441598:	ldr	x0, [x1, #16]
  44159c:	cbz	x0, 4415b4 <_obstack_memory_used@@Base+0x418>
  4415a0:	ldr	x1, [x1, #32]
  4415a4:	str	x1, [x0, #32]
  4415a8:	b	4415b4 <_obstack_memory_used@@Base+0x418>
  4415ac:	ldr	x0, [x1, #8]
  4415b0:	str	x1, [x0, #32]
  4415b4:	mov	w0, #0x0                   	// #0
  4415b8:	ret
  4415bc:	ldr	x0, [x1, #8]
  4415c0:	ldr	x2, [x1, #16]
  4415c4:	ldr	x2, [x2, #24]
  4415c8:	str	x2, [x0, #32]
  4415cc:	ldr	x0, [x1, #16]
  4415d0:	ldr	x1, [x1, #32]
  4415d4:	str	x1, [x0, #32]
  4415d8:	b	4415b4 <_obstack_memory_used@@Base+0x418>
  4415dc:	ldr	x3, [x1, #72]
  4415e0:	ldr	x4, [x1, #104]
  4415e4:	cmp	x4, x3
  4415e8:	b.le	441654 <_obstack_memory_used@@Base+0x4b8>
  4415ec:	ldr	x4, [x1, #8]
  4415f0:	ldrb	w3, [x4, x3]
  4415f4:	strb	w3, [x0]
  4415f8:	ldr	w4, [x1, #144]
  4415fc:	cmp	w4, #0x1
  441600:	b.le	441624 <_obstack_memory_used@@Base+0x488>
  441604:	ldr	x4, [x1, #72]
  441608:	ldr	x5, [x1, #48]
  44160c:	cmp	x4, x5
  441610:	b.eq	441624 <_obstack_memory_used@@Base+0x488>  // b.none
  441614:	ldr	x5, [x1, #16]
  441618:	ldr	w4, [x5, x4, lsl #2]
  44161c:	cmn	w4, #0x1
  441620:	b.eq	441664 <_obstack_memory_used@@Base+0x4c8>  // b.none
  441624:	cmp	w3, #0x5c
  441628:	b.eq	441674 <_obstack_memory_used@@Base+0x4d8>  // b.none
  44162c:	cmp	w3, #0x5b
  441630:	b.eq	4416bc <_obstack_memory_used@@Base+0x520>  // b.none
  441634:	cmp	w3, #0x5d
  441638:	b.eq	44175c <_obstack_memory_used@@Base+0x5c0>  // b.none
  44163c:	cmp	w3, #0x5e
  441640:	b.ne	441744 <_obstack_memory_used@@Base+0x5a8>  // b.any
  441644:	mov	w1, #0x19                  	// #25
  441648:	strb	w1, [x0, #8]
  44164c:	mov	w0, #0x1                   	// #1
  441650:	b	441660 <_obstack_memory_used@@Base+0x4c4>
  441654:	mov	w1, #0x2                   	// #2
  441658:	strb	w1, [x0, #8]
  44165c:	mov	w0, #0x0                   	// #0
  441660:	ret
  441664:	mov	w1, #0x1                   	// #1
  441668:	strb	w1, [x0, #8]
  44166c:	mov	w0, #0x1                   	// #1
  441670:	b	441660 <_obstack_memory_used@@Base+0x4c4>
  441674:	tbz	w2, #0, 44168c <_obstack_memory_used@@Base+0x4f0>
  441678:	ldr	x2, [x1, #72]
  44167c:	add	x2, x2, #0x1
  441680:	ldr	x3, [x1, #88]
  441684:	cmp	x2, x3
  441688:	b.lt	44169c <_obstack_memory_used@@Base+0x500>  // b.tstop
  44168c:	mov	w1, #0x1                   	// #1
  441690:	strb	w1, [x0, #8]
  441694:	mov	w0, #0x1                   	// #1
  441698:	b	441660 <_obstack_memory_used@@Base+0x4c4>
  44169c:	str	x2, [x1, #72]
  4416a0:	ldr	x1, [x1, #8]
  4416a4:	ldrb	w1, [x1, x2]
  4416a8:	strb	w1, [x0]
  4416ac:	mov	w1, #0x1                   	// #1
  4416b0:	strb	w1, [x0, #8]
  4416b4:	mov	w0, #0x1                   	// #1
  4416b8:	b	441660 <_obstack_memory_used@@Base+0x4c4>
  4416bc:	ldr	x3, [x1, #72]
  4416c0:	add	x5, x3, #0x1
  4416c4:	ldr	x4, [x1, #88]
  4416c8:	cmp	x5, x4
  4416cc:	b.ge	4416f8 <_obstack_memory_used@@Base+0x55c>  // b.tcont
  4416d0:	ldr	x1, [x1, #8]
  4416d4:	add	x3, x1, x3
  4416d8:	ldrb	w1, [x3, #1]
  4416dc:	strb	w1, [x0]
  4416e0:	cmp	w1, #0x3a
  4416e4:	b.eq	441730 <_obstack_memory_used@@Base+0x594>  // b.none
  4416e8:	cmp	w1, #0x3d
  4416ec:	b.eq	441720 <_obstack_memory_used@@Base+0x584>  // b.none
  4416f0:	cmp	w1, #0x2e
  4416f4:	b.eq	441710 <_obstack_memory_used@@Base+0x574>  // b.none
  4416f8:	mov	w1, #0x1                   	// #1
  4416fc:	strb	w1, [x0, #8]
  441700:	mov	w1, #0x5b                  	// #91
  441704:	strb	w1, [x0]
  441708:	mov	w0, #0x1                   	// #1
  44170c:	b	441660 <_obstack_memory_used@@Base+0x4c4>
  441710:	mov	w1, #0x1a                  	// #26
  441714:	strb	w1, [x0, #8]
  441718:	mov	w0, #0x2                   	// #2
  44171c:	b	441660 <_obstack_memory_used@@Base+0x4c4>
  441720:	mov	w1, #0x1c                  	// #28
  441724:	strb	w1, [x0, #8]
  441728:	mov	w0, #0x2                   	// #2
  44172c:	b	441660 <_obstack_memory_used@@Base+0x4c4>
  441730:	tbz	w2, #2, 4416f8 <_obstack_memory_used@@Base+0x55c>
  441734:	mov	w1, #0x1e                  	// #30
  441738:	strb	w1, [x0, #8]
  44173c:	mov	w0, #0x2                   	// #2
  441740:	b	441660 <_obstack_memory_used@@Base+0x4c4>
  441744:	cmp	w3, #0x2d
  441748:	b.ne	44168c <_obstack_memory_used@@Base+0x4f0>  // b.any
  44174c:	mov	w1, #0x16                  	// #22
  441750:	strb	w1, [x0, #8]
  441754:	mov	w0, #0x1                   	// #1
  441758:	b	441660 <_obstack_memory_used@@Base+0x4c4>
  44175c:	mov	w1, #0x15                  	// #21
  441760:	strb	w1, [x0, #8]
  441764:	mov	w0, #0x1                   	// #1
  441768:	b	441660 <_obstack_memory_used@@Base+0x4c4>
  44176c:	ldrb	w2, [x1, #48]
  441770:	cmp	w2, #0x11
  441774:	b.eq	441780 <_obstack_memory_used@@Base+0x5e4>  // b.none
  441778:	mov	w0, #0x0                   	// #0
  44177c:	ret
  441780:	ldr	x2, [x1, #40]
  441784:	cmp	x0, x2
  441788:	b.ne	441778 <_obstack_memory_used@@Base+0x5dc>  // b.any
  44178c:	ldrb	w0, [x1, #50]
  441790:	orr	w0, w0, #0x8
  441794:	strb	w0, [x1, #50]
  441798:	b	441778 <_obstack_memory_used@@Base+0x5dc>
  44179c:	stp	x29, x30, [sp, #-144]!
  4417a0:	mov	x29, sp
  4417a4:	stp	x21, x22, [sp, #32]
  4417a8:	stp	x23, x24, [sp, #48]
  4417ac:	stp	x27, x28, [sp, #80]
  4417b0:	mov	x27, x0
  4417b4:	str	w1, [sp, #104]
  4417b8:	ldr	x23, [x0, #152]
  4417bc:	add	x22, x3, x3, lsl #1
  4417c0:	ldr	x0, [x23, #48]
  4417c4:	add	x22, x0, x22, lsl #3
  4417c8:	ldr	x0, [x22, #8]
  4417cc:	cmp	x0, #0x0
  4417d0:	b.le	441960 <_obstack_memory_used@@Base+0x7c4>
  4417d4:	stp	x19, x20, [sp, #16]
  4417d8:	stp	x25, x26, [sp, #64]
  4417dc:	mov	x24, x2
  4417e0:	mov	x26, x3
  4417e4:	mov	x25, x4
  4417e8:	add	x0, x4, x4, lsl #2
  4417ec:	lsl	x0, x0, #3
  4417f0:	str	x0, [sp, #136]
  4417f4:	mov	x0, #0x1                   	// #1
  4417f8:	lsl	x0, x0, x2
  4417fc:	str	x0, [sp, #120]
  441800:	mvn	w0, w0
  441804:	and	w0, w0, #0xffff
  441808:	str	w0, [sp, #132]
  44180c:	mov	x19, #0x0                   	// #0
  441810:	and	w0, w1, #0x1
  441814:	str	w0, [sp, #128]
  441818:	and	w28, w1, #0x2
  44181c:	b	4418e4 <_obstack_memory_used@@Base+0x748>
  441820:	ldr	x0, [x23, #40]
  441824:	ldr	x1, [sp, #112]
  441828:	add	x0, x0, x1
  44182c:	ldr	x0, [x0, #16]
  441830:	ldr	x3, [x0]
  441834:	cmp	x26, x3
  441838:	b.eq	4418ac <_obstack_memory_used@@Base+0x710>  // b.none
  44183c:	mov	x4, x25
  441840:	mov	x2, x24
  441844:	ldr	w1, [sp, #104]
  441848:	mov	x0, x27
  44184c:	bl	44179c <_obstack_memory_used@@Base+0x600>
  441850:	cmn	w0, #0x1
  441854:	b.eq	44198c <_obstack_memory_used@@Base+0x7f0>  // b.none
  441858:	cbnz	w0, 441860 <_obstack_memory_used@@Base+0x6c4>
  44185c:	cbnz	w28, 441998 <_obstack_memory_used@@Base+0x7fc>
  441860:	cmp	x24, #0x3f
  441864:	b.gt	441878 <_obstack_memory_used@@Base+0x6dc>
  441868:	ldrh	w0, [x20, #34]
  44186c:	ldr	w1, [sp, #132]
  441870:	and	w0, w1, w0
  441874:	strh	w0, [x20, #34]
  441878:	add	x20, x20, #0x28
  44187c:	ldurb	w0, [x20, #-8]
  441880:	cbz	w0, 4418d4 <_obstack_memory_used@@Base+0x738>
  441884:	ldr	x0, [x20]
  441888:	cmp	x0, x21
  44188c:	b.ne	441878 <_obstack_memory_used@@Base+0x6dc>  // b.any
  441890:	cmp	x24, #0x3f
  441894:	b.gt	441820 <_obstack_memory_used@@Base+0x684>
  441898:	ldrh	w0, [x20, #34]
  44189c:	ldr	x1, [sp, #120]
  4418a0:	tst	x0, x1
  4418a4:	b.ne	441820 <_obstack_memory_used@@Base+0x684>  // b.any
  4418a8:	b	441878 <_obstack_memory_used@@Base+0x6dc>
  4418ac:	ldr	x0, [sp, #104]
  4418b0:	sbfx	x0, x0, #0, #1
  4418b4:	ldp	x19, x20, [sp, #16]
  4418b8:	ldp	x25, x26, [sp, #64]
  4418bc:	b	441968 <_obstack_memory_used@@Base+0x7cc>
  4418c0:	ldr	w0, [sp, #128]
  4418c4:	cbz	w0, 4418d4 <_obstack_memory_used@@Base+0x738>
  4418c8:	ldr	x0, [x2, x1]
  4418cc:	cmp	x0, x24
  4418d0:	b.eq	44197c <_obstack_memory_used@@Base+0x7e0>  // b.none
  4418d4:	add	x19, x19, #0x1
  4418d8:	ldr	x0, [x22, #8]
  4418dc:	cmp	x0, x19
  4418e0:	b.le	441958 <_obstack_memory_used@@Base+0x7bc>
  4418e4:	ldr	x0, [x22, #16]
  4418e8:	ldr	x21, [x0, x19, lsl #3]
  4418ec:	lsl	x1, x21, #4
  4418f0:	ldr	x2, [x23]
  4418f4:	add	x0, x2, x1
  4418f8:	ldrb	w0, [x0, #8]
  4418fc:	cmp	w0, #0x8
  441900:	b.eq	4418c0 <_obstack_memory_used@@Base+0x724>  // b.none
  441904:	cmp	w0, #0x9
  441908:	b.eq	441938 <_obstack_memory_used@@Base+0x79c>  // b.none
  44190c:	cmp	w0, #0x4
  441910:	b.ne	4418d4 <_obstack_memory_used@@Base+0x738>  // b.any
  441914:	cmn	x25, #0x1
  441918:	b.eq	4418d4 <_obstack_memory_used@@Base+0x738>  // b.none
  44191c:	ldr	x20, [x27, #216]
  441920:	ldr	x0, [sp, #136]
  441924:	add	x20, x20, x0
  441928:	add	x0, x21, x21, lsl #1
  44192c:	lsl	x0, x0, #3
  441930:	str	x0, [sp, #112]
  441934:	b	441884 <_obstack_memory_used@@Base+0x6e8>
  441938:	cbz	w28, 4418d4 <_obstack_memory_used@@Base+0x738>
  44193c:	ldr	x0, [x2, x1]
  441940:	cmp	x0, x24
  441944:	b.ne	4418d4 <_obstack_memory_used@@Base+0x738>  // b.any
  441948:	mov	w0, #0x0                   	// #0
  44194c:	ldp	x19, x20, [sp, #16]
  441950:	ldp	x25, x26, [sp, #64]
  441954:	b	441968 <_obstack_memory_used@@Base+0x7cc>
  441958:	ldp	x19, x20, [sp, #16]
  44195c:	ldp	x25, x26, [sp, #64]
  441960:	ldr	x0, [sp, #104]
  441964:	ubfx	x0, x0, #1, #1
  441968:	ldp	x21, x22, [sp, #32]
  44196c:	ldp	x23, x24, [sp, #48]
  441970:	ldp	x27, x28, [sp, #80]
  441974:	ldp	x29, x30, [sp], #144
  441978:	ret
  44197c:	mov	w0, #0xffffffff            	// #-1
  441980:	ldp	x19, x20, [sp, #16]
  441984:	ldp	x25, x26, [sp, #64]
  441988:	b	441968 <_obstack_memory_used@@Base+0x7cc>
  44198c:	ldp	x19, x20, [sp, #16]
  441990:	ldp	x25, x26, [sp, #64]
  441994:	b	441968 <_obstack_memory_used@@Base+0x7cc>
  441998:	ldp	x19, x20, [sp, #16]
  44199c:	ldp	x25, x26, [sp, #64]
  4419a0:	b	441968 <_obstack_memory_used@@Base+0x7cc>
  4419a4:	mov	x7, x0
  4419a8:	mov	x6, x4
  4419ac:	add	x1, x1, x1, lsl #2
  4419b0:	ldr	x0, [x0, #216]
  4419b4:	add	x1, x0, x1, lsl #3
  4419b8:	ldr	x4, [x1, #16]
  4419bc:	cmp	x4, x6
  4419c0:	b.gt	4419f4 <_obstack_memory_used@@Base+0x858>
  4419c4:	ldr	x8, [x1, #24]
  4419c8:	mov	w0, #0x1                   	// #1
  4419cc:	cmp	x8, x6
  4419d0:	b.lt	4419f0 <_obstack_memory_used@@Base+0x854>  // b.tstop
  4419d4:	cmp	x4, x6
  4419d8:	cset	w1, eq  // eq = none
  4419dc:	cmp	x8, x6
  4419e0:	b.eq	4419fc <_obstack_memory_used@@Base+0x860>  // b.none
  4419e4:	mov	w0, #0x0                   	// #0
  4419e8:	cmp	x4, x6
  4419ec:	b.eq	441a00 <_obstack_memory_used@@Base+0x864>  // b.none
  4419f0:	ret
  4419f4:	mov	w0, #0xffffffff            	// #-1
  4419f8:	ret
  4419fc:	orr	w1, w1, #0x2
  441a00:	stp	x29, x30, [sp, #-16]!
  441a04:	mov	x29, sp
  441a08:	mov	x4, x5
  441a0c:	mov	x0, x7
  441a10:	bl	44179c <_obstack_memory_used@@Base+0x600>
  441a14:	ldp	x29, x30, [sp], #16
  441a18:	ret
  441a1c:	mov	x6, x0
  441a20:	ldr	x7, [x0, #200]
  441a24:	mov	x4, x7
  441a28:	mov	x0, #0x0                   	// #0
  441a2c:	cmp	x4, x0
  441a30:	b.le	441a68 <_obstack_memory_used@@Base+0x8cc>
  441a34:	add	x2, x4, x0
  441a38:	add	x2, x2, x2, lsr #63
  441a3c:	asr	x2, x2, #1
  441a40:	ldr	x5, [x6, #216]
  441a44:	add	x3, x2, x2, lsl #2
  441a48:	add	x3, x5, x3, lsl #3
  441a4c:	ldr	x3, [x3, #8]
  441a50:	cmp	x3, x1
  441a54:	b.lt	441a60 <_obstack_memory_used@@Base+0x8c4>  // b.tstop
  441a58:	mov	x4, x2
  441a5c:	b	441a2c <_obstack_memory_used@@Base+0x890>
  441a60:	add	x0, x2, #0x1
  441a64:	b	441a2c <_obstack_memory_used@@Base+0x890>
  441a68:	cmp	x7, x0
  441a6c:	b.le	441a8c <_obstack_memory_used@@Base+0x8f0>
  441a70:	ldr	x3, [x6, #216]
  441a74:	add	x2, x0, x0, lsl #2
  441a78:	add	x2, x3, x2, lsl #3
  441a7c:	ldr	x2, [x2, #8]
  441a80:	cmp	x2, x1
  441a84:	csinv	x0, x0, xzr, eq  // eq = none
  441a88:	ret
  441a8c:	mov	x0, #0xffffffffffffffff    	// #-1
  441a90:	b	441a88 <_obstack_memory_used@@Base+0x8ec>
  441a94:	stp	x29, x30, [sp, #-112]!
  441a98:	mov	x29, sp
  441a9c:	stp	x19, x20, [sp, #16]
  441aa0:	stp	x21, x22, [sp, #32]
  441aa4:	stp	x23, x24, [sp, #48]
  441aa8:	stp	x25, x26, [sp, #64]
  441aac:	stp	x27, x28, [sp, #80]
  441ab0:	mov	x19, x0
  441ab4:	mov	x20, x1
  441ab8:	mov	x25, x2
  441abc:	mov	x22, x3
  441ac0:	mov	x26, x4
  441ac4:	mov	x23, x5
  441ac8:	ldr	x28, [x0, #152]
  441acc:	mov	x1, x3
  441ad0:	bl	441a1c <_obstack_memory_used@@Base+0x880>
  441ad4:	str	x0, [sp, #96]
  441ad8:	mov	x1, x23
  441adc:	mov	x0, x19
  441ae0:	bl	441a1c <_obstack_memory_used@@Base+0x880>
  441ae4:	str	x0, [sp, #104]
  441ae8:	ldr	x0, [x20, #8]
  441aec:	cmp	x0, #0x0
  441af0:	b.le	441b94 <_obstack_memory_used@@Base+0x9f8>
  441af4:	mov	x24, #0x0                   	// #0
  441af8:	ldr	x0, [x20, #16]
  441afc:	ldr	x1, [x0, x24, lsl #3]
  441b00:	ldr	x0, [x19, #216]
  441b04:	add	x2, x1, x1, lsl #2
  441b08:	ldr	x0, [x0, x2, lsl #3]
  441b0c:	ldr	x2, [x28]
  441b10:	lsl	x0, x0, #4
  441b14:	ldr	x27, [x2, x0]
  441b18:	ldr	x5, [sp, #96]
  441b1c:	mov	x4, x22
  441b20:	mov	x3, x25
  441b24:	mov	x2, x27
  441b28:	mov	x0, x19
  441b2c:	bl	4419a4 <_obstack_memory_used@@Base+0x808>
  441b30:	mov	w21, w0
  441b34:	ldr	x0, [x20, #16]
  441b38:	ldr	x5, [sp, #104]
  441b3c:	mov	x4, x23
  441b40:	mov	x3, x26
  441b44:	mov	x2, x27
  441b48:	ldr	x1, [x0, x24, lsl #3]
  441b4c:	mov	x0, x19
  441b50:	bl	4419a4 <_obstack_memory_used@@Base+0x808>
  441b54:	cmp	w21, w0
  441b58:	b.eq	441b7c <_obstack_memory_used@@Base+0x9e0>  // b.none
  441b5c:	mov	w0, #0x1                   	// #1
  441b60:	ldp	x19, x20, [sp, #16]
  441b64:	ldp	x21, x22, [sp, #32]
  441b68:	ldp	x23, x24, [sp, #48]
  441b6c:	ldp	x25, x26, [sp, #64]
  441b70:	ldp	x27, x28, [sp, #80]
  441b74:	ldp	x29, x30, [sp], #112
  441b78:	ret
  441b7c:	add	x24, x24, #0x1
  441b80:	ldr	x0, [x20, #8]
  441b84:	cmp	x0, x24
  441b88:	b.gt	441af8 <_obstack_memory_used@@Base+0x95c>
  441b8c:	mov	w0, #0x0                   	// #0
  441b90:	b	441b60 <_obstack_memory_used@@Base+0x9c4>
  441b94:	mov	w0, #0x0                   	// #0
  441b98:	b	441b60 <_obstack_memory_used@@Base+0x9c4>
  441b9c:	stp	x29, x30, [sp, #-96]!
  441ba0:	mov	x29, sp
  441ba4:	stp	x19, x20, [sp, #16]
  441ba8:	stp	x21, x22, [sp, #32]
  441bac:	stp	x23, x24, [sp, #48]
  441bb0:	stp	x25, x26, [sp, #64]
  441bb4:	mov	x20, x0
  441bb8:	mov	x19, x1
  441bbc:	mov	x23, x2
  441bc0:	mov	w22, w3
  441bc4:	mov	x24, x5
  441bc8:	and	w26, w6, #0xff
  441bcc:	ldr	x25, [x1, #72]
  441bd0:	mov	x1, x25
  441bd4:	mov	x0, x19
  441bd8:	bl	4412f8 <_obstack_memory_used@@Base+0x15c>
  441bdc:	cmp	w0, #0x1
  441be0:	b.gt	441c24 <_obstack_memory_used@@Base+0xa88>
  441be4:	add	x3, x25, w22, sxtw
  441be8:	str	x3, [x19, #72]
  441bec:	ldrb	w1, [x23, #8]
  441bf0:	and	w0, w1, #0xfffffffb
  441bf4:	and	w0, w0, #0xff
  441bf8:	cmp	w0, #0x1a
  441bfc:	ccmp	w1, #0x1c, #0x4, ne  // ne = any
  441c00:	b.eq	441c68 <_obstack_memory_used@@Base+0xacc>  // b.none
  441c04:	cmp	w26, #0x0
  441c08:	ccmp	w1, #0x16, #0x0, eq  // eq = none
  441c0c:	b.eq	441e0c <_obstack_memory_used@@Base+0xc70>  // b.none
  441c10:	str	wzr, [x20]
  441c14:	ldrb	w0, [x23]
  441c18:	strb	w0, [x20, #8]
  441c1c:	mov	w0, #0x0                   	// #0
  441c20:	b	441c50 <_obstack_memory_used@@Base+0xab4>
  441c24:	mov	w21, w0
  441c28:	mov	w0, #0x1                   	// #1
  441c2c:	str	w0, [x20]
  441c30:	ldr	x1, [x19, #72]
  441c34:	mov	x0, x19
  441c38:	bl	441348 <_obstack_memory_used@@Base+0x1ac>
  441c3c:	str	w0, [x20, #8]
  441c40:	ldr	x0, [x19, #72]
  441c44:	add	x21, x0, w21, sxtw
  441c48:	str	x21, [x19, #72]
  441c4c:	mov	w0, #0x0                   	// #0
  441c50:	ldp	x19, x20, [sp, #16]
  441c54:	ldp	x21, x22, [sp, #32]
  441c58:	ldp	x23, x24, [sp, #48]
  441c5c:	ldp	x25, x26, [sp, #64]
  441c60:	ldp	x29, x30, [sp], #96
  441c64:	ret
  441c68:	ldr	x1, [x19, #104]
  441c6c:	mov	w0, #0x7                   	// #7
  441c70:	cmp	x3, x1
  441c74:	b.ge	441c50 <_obstack_memory_used@@Base+0xab4>  // b.tcont
  441c78:	ldrb	w24, [x23]
  441c7c:	mov	x21, #0x0                   	// #0
  441c80:	b	441d60 <_obstack_memory_used@@Base+0xbc4>
  441c84:	ldrb	w0, [x19, #139]
  441c88:	cbnz	w0, 441ca4 <_obstack_memory_used@@Base+0xb08>
  441c8c:	ldr	x1, [x19, #8]
  441c90:	ldr	x0, [x19, #72]
  441c94:	add	x2, x0, #0x1
  441c98:	str	x2, [x19, #72]
  441c9c:	ldrb	w22, [x1, x0]
  441ca0:	b	441d84 <_obstack_memory_used@@Base+0xbe8>
  441ca4:	ldrb	w0, [x19, #140]
  441ca8:	cbz	w0, 441d2c <_obstack_memory_used@@Base+0xb90>
  441cac:	ldr	x26, [x19, #72]
  441cb0:	ldr	x0, [x19, #48]
  441cb4:	cmp	x26, x0
  441cb8:	b.eq	441ccc <_obstack_memory_used@@Base+0xb30>  // b.none
  441cbc:	ldr	x0, [x19, #16]
  441cc0:	ldr	w0, [x0, x26, lsl #2]
  441cc4:	cmn	w0, #0x1
  441cc8:	b.eq	441d00 <_obstack_memory_used@@Base+0xb64>  // b.none
  441ccc:	ldr	x1, [x19, #24]
  441cd0:	ldr	x0, [x19]
  441cd4:	ldr	x2, [x1, x26, lsl #3]
  441cd8:	ldr	x1, [x19, #40]
  441cdc:	add	x0, x0, x2
  441ce0:	ldrb	w22, [x0, x1]
  441ce4:	tst	w22, #0xffffff80
  441ce8:	b.eq	441d14 <_obstack_memory_used@@Base+0xb78>  // b.none
  441cec:	ldr	x0, [x19, #8]
  441cf0:	add	x1, x26, #0x1
  441cf4:	str	x1, [x19, #72]
  441cf8:	ldrb	w22, [x0, x26]
  441cfc:	b	441d84 <_obstack_memory_used@@Base+0xbe8>
  441d00:	ldr	x0, [x19, #8]
  441d04:	add	x1, x26, #0x1
  441d08:	str	x1, [x19, #72]
  441d0c:	ldrb	w22, [x0, x26]
  441d10:	b	441d84 <_obstack_memory_used@@Base+0xbe8>
  441d14:	mov	x1, x26
  441d18:	mov	x0, x19
  441d1c:	bl	4412f8 <_obstack_memory_used@@Base+0x15c>
  441d20:	add	x26, x26, w0, sxtw
  441d24:	str	x26, [x19, #72]
  441d28:	b	441d84 <_obstack_memory_used@@Base+0xbe8>
  441d2c:	ldr	x0, [x19]
  441d30:	ldr	x2, [x19, #40]
  441d34:	ldr	x1, [x19, #72]
  441d38:	add	x3, x1, #0x1
  441d3c:	str	x3, [x19, #72]
  441d40:	add	x0, x0, x2
  441d44:	ldrb	w22, [x0, x1]
  441d48:	b	441d84 <_obstack_memory_used@@Base+0xbe8>
  441d4c:	ldr	x0, [x20, #8]
  441d50:	strb	w22, [x0, x21]
  441d54:	add	x21, x21, #0x1
  441d58:	cmp	x21, #0x20
  441d5c:	b.eq	441e38 <_obstack_memory_used@@Base+0xc9c>  // b.none
  441d60:	mov	w25, w21
  441d64:	ldrb	w0, [x23, #8]
  441d68:	cmp	w0, #0x1e
  441d6c:	b.eq	441c84 <_obstack_memory_used@@Base+0xae8>  // b.none
  441d70:	ldr	x1, [x19, #8]
  441d74:	ldr	x0, [x19, #72]
  441d78:	add	x2, x0, #0x1
  441d7c:	str	x2, [x19, #72]
  441d80:	ldrb	w22, [x1, x0]
  441d84:	ldr	x0, [x19, #72]
  441d88:	ldr	x1, [x19, #104]
  441d8c:	cmp	x1, x0
  441d90:	b.le	441e30 <_obstack_memory_used@@Base+0xc94>
  441d94:	cmp	w24, w22
  441d98:	b.ne	441d4c <_obstack_memory_used@@Base+0xbb0>  // b.any
  441d9c:	ldr	x1, [x19, #8]
  441da0:	ldrb	w1, [x1, x0]
  441da4:	cmp	w1, #0x5d
  441da8:	b.ne	441d4c <_obstack_memory_used@@Base+0xbb0>  // b.any
  441dac:	add	x0, x0, #0x1
  441db0:	str	x0, [x19, #72]
  441db4:	ldr	x0, [x20, #8]
  441db8:	strb	wzr, [x0, w25, sxtw]
  441dbc:	ldrb	w1, [x23, #8]
  441dc0:	cmp	w1, #0x1c
  441dc4:	b.eq	441dec <_obstack_memory_used@@Base+0xc50>  // b.none
  441dc8:	cmp	w1, #0x1e
  441dcc:	b.eq	441dfc <_obstack_memory_used@@Base+0xc60>  // b.none
  441dd0:	mov	w0, #0x0                   	// #0
  441dd4:	cmp	w1, #0x1a
  441dd8:	b.ne	441c50 <_obstack_memory_used@@Base+0xab4>  // b.any
  441ddc:	mov	w0, #0x3                   	// #3
  441de0:	str	w0, [x20]
  441de4:	mov	w0, #0x0                   	// #0
  441de8:	b	441c50 <_obstack_memory_used@@Base+0xab4>
  441dec:	mov	w0, #0x2                   	// #2
  441df0:	str	w0, [x20]
  441df4:	mov	w0, #0x0                   	// #0
  441df8:	b	441c50 <_obstack_memory_used@@Base+0xab4>
  441dfc:	mov	w0, #0x4                   	// #4
  441e00:	str	w0, [x20]
  441e04:	mov	w0, #0x0                   	// #0
  441e08:	b	441c50 <_obstack_memory_used@@Base+0xab4>
  441e0c:	mov	x2, x24
  441e10:	mov	x1, x19
  441e14:	add	x0, sp, #0x50
  441e18:	bl	4415dc <_obstack_memory_used@@Base+0x440>
  441e1c:	ldrb	w0, [sp, #88]
  441e20:	cmp	w0, #0x15
  441e24:	b.eq	441c10 <_obstack_memory_used@@Base+0xa74>  // b.none
  441e28:	mov	w0, #0xb                   	// #11
  441e2c:	b	441c50 <_obstack_memory_used@@Base+0xab4>
  441e30:	mov	w0, #0x7                   	// #7
  441e34:	b	441c50 <_obstack_memory_used@@Base+0xab4>
  441e38:	mov	w0, #0x7                   	// #7
  441e3c:	b	441c50 <_obstack_memory_used@@Base+0xab4>
  441e40:	stp	x29, x30, [sp, #-48]!
  441e44:	mov	x29, sp
  441e48:	stp	x19, x20, [sp, #16]
  441e4c:	str	x21, [sp, #32]
  441e50:	mov	x19, x0
  441e54:	mov	x21, x1
  441e58:	mov	x20, x2
  441e5c:	b	441e90 <_obstack_memory_used@@Base+0xcf4>
  441e60:	mov	x19, x4
  441e64:	mov	x1, x19
  441e68:	mov	x0, x20
  441e6c:	blr	x21
  441e70:	cbnz	w0, 441ea4 <_obstack_memory_used@@Base+0xd08>
  441e74:	ldr	x4, [x19]
  441e78:	cbz	x4, 441ea4 <_obstack_memory_used@@Base+0xd08>
  441e7c:	ldr	x3, [x4, #16]
  441e80:	cmp	x3, #0x0
  441e84:	ccmp	x3, x19, #0x4, ne  // ne = any
  441e88:	b.eq	441e60 <_obstack_memory_used@@Base+0xcc4>  // b.none
  441e8c:	mov	x19, x3
  441e90:	ldr	x3, [x19, #8]
  441e94:	cbnz	x3, 441e8c <_obstack_memory_used@@Base+0xcf0>
  441e98:	ldr	x3, [x19, #16]
  441e9c:	cbnz	x3, 441e8c <_obstack_memory_used@@Base+0xcf0>
  441ea0:	b	441e64 <_obstack_memory_used@@Base+0xcc8>
  441ea4:	ldp	x19, x20, [sp, #16]
  441ea8:	ldr	x21, [sp, #32]
  441eac:	ldp	x29, x30, [sp], #48
  441eb0:	ret
  441eb4:	stp	x29, x30, [sp, #-48]!
  441eb8:	mov	x29, sp
  441ebc:	stp	x19, x20, [sp, #16]
  441ec0:	str	x21, [sp, #32]
  441ec4:	mov	x19, x0
  441ec8:	mov	x21, x1
  441ecc:	mov	x20, x2
  441ed0:	b	441edc <_obstack_memory_used@@Base+0xd40>
  441ed4:	mov	x3, x4
  441ed8:	mov	x19, x3
  441edc:	mov	x1, x19
  441ee0:	mov	x0, x20
  441ee4:	blr	x21
  441ee8:	cbnz	w0, 441f18 <_obstack_memory_used@@Base+0xd7c>
  441eec:	ldr	x3, [x19, #8]
  441ef0:	cbnz	x3, 441ed8 <_obstack_memory_used@@Base+0xd3c>
  441ef4:	ldr	x4, [x19, #16]
  441ef8:	cmp	x4, #0x0
  441efc:	ccmp	x4, x3, #0x4, ne  // ne = any
  441f00:	b.ne	441ed4 <_obstack_memory_used@@Base+0xd38>  // b.any
  441f04:	ldr	x4, [x19]
  441f08:	mov	x3, x19
  441f0c:	cbz	x4, 441f18 <_obstack_memory_used@@Base+0xd7c>
  441f10:	mov	x19, x4
  441f14:	b	441ef4 <_obstack_memory_used@@Base+0xd58>
  441f18:	ldp	x19, x20, [sp, #16]
  441f1c:	ldr	x21, [sp, #32]
  441f20:	ldp	x29, x30, [sp], #48
  441f24:	ret
  441f28:	stp	x29, x30, [sp, #-32]!
  441f2c:	mov	x29, sp
  441f30:	stp	x19, x20, [sp, #16]
  441f34:	mov	x19, x0
  441f38:	mov	x20, x1
  441f3c:	ldr	w0, [x0, #144]
  441f40:	cmp	w0, #0x1
  441f44:	b.le	441f80 <_obstack_memory_used@@Base+0xde4>
  441f48:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  441f4c:	cmp	x1, x0
  441f50:	b.hi	441fb4 <_obstack_memory_used@@Base+0xe18>  // b.pmore
  441f54:	lsl	x1, x1, #2
  441f58:	ldr	x0, [x19, #16]
  441f5c:	bl	404540 <realloc@plt>
  441f60:	cbz	x0, 441fbc <_obstack_memory_used@@Base+0xe20>
  441f64:	str	x0, [x19, #16]
  441f68:	ldr	x0, [x19, #24]
  441f6c:	cbz	x0, 441f80 <_obstack_memory_used@@Base+0xde4>
  441f70:	lsl	x1, x20, #3
  441f74:	bl	404540 <realloc@plt>
  441f78:	cbz	x0, 441fc4 <_obstack_memory_used@@Base+0xe28>
  441f7c:	str	x0, [x19, #24]
  441f80:	ldrb	w0, [x19, #139]
  441f84:	cbnz	w0, 441f9c <_obstack_memory_used@@Base+0xe00>
  441f88:	str	x20, [x19, #64]
  441f8c:	mov	w0, #0x0                   	// #0
  441f90:	ldp	x19, x20, [sp, #16]
  441f94:	ldp	x29, x30, [sp], #32
  441f98:	ret
  441f9c:	mov	x1, x20
  441fa0:	ldr	x0, [x19, #8]
  441fa4:	bl	404540 <realloc@plt>
  441fa8:	cbz	x0, 441fcc <_obstack_memory_used@@Base+0xe30>
  441fac:	str	x0, [x19, #8]
  441fb0:	b	441f88 <_obstack_memory_used@@Base+0xdec>
  441fb4:	mov	w0, #0xc                   	// #12
  441fb8:	b	441f90 <_obstack_memory_used@@Base+0xdf4>
  441fbc:	mov	w0, #0xc                   	// #12
  441fc0:	b	441f90 <_obstack_memory_used@@Base+0xdf4>
  441fc4:	mov	w0, #0xc                   	// #12
  441fc8:	b	441f90 <_obstack_memory_used@@Base+0xdf4>
  441fcc:	mov	w0, #0xc                   	// #12
  441fd0:	b	441f90 <_obstack_memory_used@@Base+0xdf4>
  441fd4:	stp	x29, x30, [sp, #-32]!
  441fd8:	mov	x29, sp
  441fdc:	stp	x19, x20, [sp, #16]
  441fe0:	mov	x19, x0
  441fe4:	mov	x20, x1
  441fe8:	ldr	x0, [x0]
  441fec:	ldr	x2, [x19, #8]
  441ff0:	cmp	x0, x2
  441ff4:	b.eq	44201c <_obstack_memory_used@@Base+0xe80>  // b.none
  441ff8:	ldr	x1, [x19, #16]
  441ffc:	ldr	x0, [x19, #8]
  442000:	add	x2, x0, #0x1
  442004:	str	x2, [x19, #8]
  442008:	str	x20, [x1, x0, lsl #3]
  44200c:	mov	w0, #0x1                   	// #1
  442010:	ldp	x19, x20, [sp, #16]
  442014:	ldp	x29, x30, [sp], #32
  442018:	ret
  44201c:	add	x0, x0, #0x1
  442020:	lsl	x1, x0, #1
  442024:	str	x1, [x19]
  442028:	lsl	x1, x0, #4
  44202c:	ldr	x0, [x19, #16]
  442030:	bl	404540 <realloc@plt>
  442034:	cbz	x0, 442040 <_obstack_memory_used@@Base+0xea4>
  442038:	str	x0, [x19, #16]
  44203c:	b	441ff8 <_obstack_memory_used@@Base+0xe5c>
  442040:	mov	w0, #0x0                   	// #0
  442044:	b	442010 <_obstack_memory_used@@Base+0xe74>
  442048:	stp	x29, x30, [sp, #-48]!
  44204c:	mov	x29, sp
  442050:	stp	x19, x20, [sp, #16]
  442054:	stp	x21, x22, [sp, #32]
  442058:	mov	x19, x0
  44205c:	mov	x21, x1
  442060:	mov	x20, x2
  442064:	mov	x22, x3
  442068:	ldr	w0, [x0, #128]
  44206c:	cmp	w0, #0xf
  442070:	b.eq	4420e4 <_obstack_memory_used@@Base+0xf48>  // b.none
  442074:	ldr	x4, [x19, #112]
  442078:	ldr	w5, [x19, #128]
  44207c:	add	w0, w5, #0x1
  442080:	str	w0, [x19, #128]
  442084:	sbfiz	x5, x5, #6, #32
  442088:	add	x0, x5, #0x8
  44208c:	add	x0, x4, x0
  442090:	add	x4, x4, x5
  442094:	str	xzr, [x4, #8]
  442098:	str	x21, [x4, #16]
  44209c:	str	x20, [x4, #24]
  4420a0:	ldp	x2, x3, [x22]
  4420a4:	stp	x2, x3, [x4, #48]
  4420a8:	ldrb	w1, [x4, #58]
  4420ac:	and	w1, w1, #0xfffffff3
  4420b0:	strb	w1, [x4, #58]
  4420b4:	str	xzr, [x4, #32]
  4420b8:	str	xzr, [x4, #40]
  4420bc:	mov	x1, #0xffffffffffffffff    	// #-1
  4420c0:	str	x1, [x4, #64]
  4420c4:	cbz	x21, 4420cc <_obstack_memory_used@@Base+0xf30>
  4420c8:	str	x0, [x21]
  4420cc:	cbz	x20, 4420d4 <_obstack_memory_used@@Base+0xf38>
  4420d0:	str	x0, [x20]
  4420d4:	ldp	x19, x20, [sp, #16]
  4420d8:	ldp	x21, x22, [sp, #32]
  4420dc:	ldp	x29, x30, [sp], #48
  4420e0:	ret
  4420e4:	mov	x0, #0x3c8                 	// #968
  4420e8:	bl	404310 <malloc@plt>
  4420ec:	cbz	x0, 4420d4 <_obstack_memory_used@@Base+0xf38>
  4420f0:	ldr	x1, [x19, #112]
  4420f4:	str	x1, [x0]
  4420f8:	str	x0, [x19, #112]
  4420fc:	str	wzr, [x19, #128]
  442100:	b	442074 <_obstack_memory_used@@Base+0xed8>
  442104:	stp	x29, x30, [sp, #-64]!
  442108:	mov	x29, sp
  44210c:	stp	x19, x20, [sp, #16]
  442110:	stp	x21, x22, [sp, #32]
  442114:	mov	x19, x0
  442118:	mov	x22, x1
  44211c:	ldr	x20, [x0]
  442120:	add	x21, sp, #0x38
  442124:	add	x3, x19, #0x28
  442128:	mov	x2, #0x0                   	// #0
  44212c:	mov	x1, #0x0                   	// #0
  442130:	mov	x0, x22
  442134:	bl	442048 <_obstack_memory_used@@Base+0xeac>
  442138:	str	x0, [x21]
  44213c:	cbz	x0, 442170 <_obstack_memory_used@@Base+0xfd4>
  442140:	str	x20, [x0]
  442144:	ldr	x1, [x21]
  442148:	ldrb	w0, [x1, #50]
  44214c:	orr	w0, w0, #0x4
  442150:	strb	w0, [x1, #50]
  442154:	ldr	x20, [x21]
  442158:	ldr	x0, [x19, #8]
  44215c:	cbz	x0, 442180 <_obstack_memory_used@@Base+0xfe4>
  442160:	add	x21, x20, #0x8
  442164:	mov	x19, x0
  442168:	b	442124 <_obstack_memory_used@@Base+0xf88>
  44216c:	ldr	x0, [sp, #56]
  442170:	ldp	x19, x20, [sp, #16]
  442174:	ldp	x21, x22, [sp, #32]
  442178:	ldp	x29, x30, [sp], #64
  44217c:	ret
  442180:	ldr	x2, [x19, #16]
  442184:	cmp	x2, #0x0
  442188:	ccmp	x2, x0, #0x4, ne  // ne = any
  44218c:	b.ne	4421a8 <_obstack_memory_used@@Base+0x100c>  // b.any
  442190:	ldr	x2, [x19]
  442194:	ldr	x20, [x20]
  442198:	mov	x0, x19
  44219c:	cbz	x2, 44216c <_obstack_memory_used@@Base+0xfd0>
  4421a0:	mov	x19, x2
  4421a4:	b	442180 <_obstack_memory_used@@Base+0xfe4>
  4421a8:	add	x21, x20, #0x10
  4421ac:	mov	x19, x2
  4421b0:	b	442124 <_obstack_memory_used@@Base+0xf88>
  4421b4:	stp	x29, x30, [sp, #-32]!
  4421b8:	mov	x29, sp
  4421bc:	strb	w3, [sp, #24]
  4421c0:	add	x3, sp, #0x10
  4421c4:	bl	442048 <_obstack_memory_used@@Base+0xeac>
  4421c8:	ldp	x29, x30, [sp], #32
  4421cc:	ret
  4421d0:	stp	x29, x30, [sp, #-80]!
  4421d4:	mov	x29, sp
  4421d8:	stp	x19, x20, [sp, #16]
  4421dc:	stp	x21, x22, [sp, #32]
  4421e0:	stp	x23, x24, [sp, #48]
  4421e4:	str	x25, [sp, #64]
  4421e8:	mov	x24, x0
  4421ec:	mov	x20, x2
  4421f0:	ldr	x25, [x1]
  4421f4:	ldr	x19, [x2, #8]
  4421f8:	ldrb	w0, [x1, #56]
  4421fc:	tst	x0, #0x10
  442200:	ccmp	x19, #0x0, #0x4, ne  // ne = any
  442204:	b.ne	442244 <_obstack_memory_used@@Base+0x10a8>  // b.any
  442208:	mov	w3, #0x8                   	// #8
  44220c:	mov	x2, #0x0                   	// #0
  442210:	mov	x1, #0x0                   	// #0
  442214:	mov	x0, x25
  442218:	bl	4421b4 <_obstack_memory_used@@Base+0x1018>
  44221c:	mov	x21, x0
  442220:	mov	w3, #0x9                   	// #9
  442224:	mov	x2, #0x0                   	// #0
  442228:	mov	x1, #0x0                   	// #0
  44222c:	mov	x0, x25
  442230:	bl	4421b4 <_obstack_memory_used@@Base+0x1018>
  442234:	mov	x22, x0
  442238:	mov	x23, x0
  44223c:	cbz	x19, 4422a4 <_obstack_memory_used@@Base+0x1108>
  442240:	b	44228c <_obstack_memory_used@@Base+0x10f0>
  442244:	ldr	x0, [x2, #40]
  442248:	cmp	x0, #0x3f
  44224c:	b.gt	442300 <_obstack_memory_used@@Base+0x1164>
  442250:	ldr	x1, [x25, #160]
  442254:	lsr	x0, x1, x0
  442258:	tbz	w0, #0, 442300 <_obstack_memory_used@@Base+0x1164>
  44225c:	mov	w3, #0x8                   	// #8
  442260:	mov	x2, #0x0                   	// #0
  442264:	mov	x1, #0x0                   	// #0
  442268:	mov	x0, x25
  44226c:	bl	4421b4 <_obstack_memory_used@@Base+0x1018>
  442270:	mov	x21, x0
  442274:	mov	w3, #0x9                   	// #9
  442278:	mov	x2, #0x0                   	// #0
  44227c:	mov	x1, #0x0                   	// #0
  442280:	mov	x0, x25
  442284:	bl	4421b4 <_obstack_memory_used@@Base+0x1018>
  442288:	mov	x23, x0
  44228c:	mov	w3, #0x10                  	// #16
  442290:	mov	x2, x23
  442294:	mov	x1, x19
  442298:	mov	x0, x25
  44229c:	bl	4421b4 <_obstack_memory_used@@Base+0x1018>
  4422a0:	mov	x22, x0
  4422a4:	mov	w3, #0x10                  	// #16
  4422a8:	mov	x2, x22
  4422ac:	mov	x1, x21
  4422b0:	mov	x0, x25
  4422b4:	bl	4421b4 <_obstack_memory_used@@Base+0x1018>
  4422b8:	mov	x19, x0
  4422bc:	cmp	x0, #0x0
  4422c0:	ccmp	x22, #0x0, #0x4, ne  // ne = any
  4422c4:	b.eq	44231c <_obstack_memory_used@@Base+0x1180>  // b.none
  4422c8:	cmp	x21, #0x0
  4422cc:	ccmp	x23, #0x0, #0x4, ne  // ne = any
  4422d0:	b.eq	44231c <_obstack_memory_used@@Base+0x1180>  // b.none
  4422d4:	ldr	x0, [x20, #40]
  4422d8:	str	x0, [x23, #40]
  4422dc:	str	x0, [x21, #40]
  4422e0:	ldrb	w0, [x20, #50]
  4422e4:	ubfx	x0, x0, #3, #1
  4422e8:	ldrb	w1, [x23, #50]
  4422ec:	bfi	w1, w0, #3, #1
  4422f0:	strb	w1, [x23, #50]
  4422f4:	ldrb	w1, [x21, #50]
  4422f8:	bfi	w1, w0, #3, #1
  4422fc:	strb	w1, [x21, #50]
  442300:	mov	x0, x19
  442304:	ldp	x19, x20, [sp, #16]
  442308:	ldp	x21, x22, [sp, #32]
  44230c:	ldp	x23, x24, [sp, #48]
  442310:	ldr	x25, [sp, #64]
  442314:	ldp	x29, x30, [sp], #80
  442318:	ret
  44231c:	mov	w0, #0xc                   	// #12
  442320:	str	w0, [x24]
  442324:	mov	x19, #0x0                   	// #0
  442328:	b	442300 <_obstack_memory_used@@Base+0x1164>
  44232c:	stp	x29, x30, [sp, #-48]!
  442330:	mov	x29, sp
  442334:	stp	x19, x20, [sp, #16]
  442338:	mov	x20, x0
  44233c:	mov	x19, x1
  442340:	str	wzr, [sp, #44]
  442344:	ldr	x2, [x1, #8]
  442348:	cbz	x2, 442358 <_obstack_memory_used@@Base+0x11bc>
  44234c:	ldrb	w0, [x2, #48]
  442350:	cmp	w0, #0x11
  442354:	b.eq	44237c <_obstack_memory_used@@Base+0x11e0>  // b.none
  442358:	ldr	x2, [x19, #16]
  44235c:	cbz	x2, 44236c <_obstack_memory_used@@Base+0x11d0>
  442360:	ldrb	w0, [x2, #48]
  442364:	cmp	w0, #0x11
  442368:	b.eq	442398 <_obstack_memory_used@@Base+0x11fc>  // b.none
  44236c:	ldr	w0, [sp, #44]
  442370:	ldp	x19, x20, [sp, #16]
  442374:	ldp	x29, x30, [sp], #48
  442378:	ret
  44237c:	mov	x1, x20
  442380:	add	x0, sp, #0x2c
  442384:	bl	4421d0 <_obstack_memory_used@@Base+0x1034>
  442388:	str	x0, [x19, #8]
  44238c:	cbz	x0, 442358 <_obstack_memory_used@@Base+0x11bc>
  442390:	str	x19, [x0]
  442394:	b	442358 <_obstack_memory_used@@Base+0x11bc>
  442398:	mov	x1, x20
  44239c:	add	x0, sp, #0x2c
  4423a0:	bl	4421d0 <_obstack_memory_used@@Base+0x1034>
  4423a4:	str	x0, [x19, #16]
  4423a8:	cbz	x0, 44236c <_obstack_memory_used@@Base+0x11d0>
  4423ac:	str	x19, [x0]
  4423b0:	b	44236c <_obstack_memory_used@@Base+0x11d0>
  4423b4:	stp	x29, x30, [sp, #-32]!
  4423b8:	mov	x29, sp
  4423bc:	stp	x19, x20, [sp, #16]
  4423c0:	mov	x19, x0
  4423c4:	mov	x20, x1
  4423c8:	mov	x0, #0x1                   	// #1
  4423cc:	str	x0, [x19]
  4423d0:	str	x0, [x19, #8]
  4423d4:	mov	x0, #0x8                   	// #8
  4423d8:	bl	404310 <malloc@plt>
  4423dc:	str	x0, [x19, #16]
  4423e0:	cbz	x0, 4423f8 <_obstack_memory_used@@Base+0x125c>
  4423e4:	str	x20, [x0]
  4423e8:	mov	w0, #0x0                   	// #0
  4423ec:	ldp	x19, x20, [sp, #16]
  4423f0:	ldp	x29, x30, [sp], #32
  4423f4:	ret
  4423f8:	str	xzr, [x19, #8]
  4423fc:	str	xzr, [x19]
  442400:	mov	w0, #0xc                   	// #12
  442404:	b	4423ec <_obstack_memory_used@@Base+0x1250>
  442408:	stp	x29, x30, [sp, #-32]!
  44240c:	mov	x29, sp
  442410:	stp	x19, x20, [sp, #16]
  442414:	mov	x19, x0
  442418:	mov	x20, x1
  44241c:	ldr	x1, [x0]
  442420:	cbz	x1, 442450 <_obstack_memory_used@@Base+0x12b4>
  442424:	ldr	x0, [x0, #8]
  442428:	cbnz	x0, 442464 <_obstack_memory_used@@Base+0x12c8>
  44242c:	ldr	x0, [x19, #16]
  442430:	str	x20, [x0]
  442434:	ldr	x0, [x19, #8]
  442438:	add	x0, x0, #0x1
  44243c:	str	x0, [x19, #8]
  442440:	mov	w0, #0x1                   	// #1
  442444:	ldp	x19, x20, [sp, #16]
  442448:	ldp	x29, x30, [sp], #32
  44244c:	ret
  442450:	mov	x1, x20
  442454:	bl	4423b4 <_obstack_memory_used@@Base+0x1218>
  442458:	cmp	w0, #0x0
  44245c:	cset	w0, eq  // eq = none
  442460:	b	442444 <_obstack_memory_used@@Base+0x12a8>
  442464:	cmp	x1, x0
  442468:	b.eq	4424c4 <_obstack_memory_used@@Base+0x1328>  // b.none
  44246c:	ldr	x3, [x19, #16]
  442470:	ldr	x0, [x3]
  442474:	cmp	x0, x20
  442478:	b.le	4424e4 <_obstack_memory_used@@Base+0x1348>
  44247c:	ldr	x0, [x19, #8]
  442480:	cmp	x0, #0x0
  442484:	b.le	4424a8 <_obstack_memory_used@@Base+0x130c>
  442488:	lsl	x1, x0, #3
  44248c:	sub	x1, x1, #0x8
  442490:	ldr	x2, [x19, #16]
  442494:	ldr	x3, [x2, x1]
  442498:	str	x3, [x2, x0, lsl #3]
  44249c:	sub	x1, x1, #0x8
  4424a0:	subs	x0, x0, #0x1
  4424a4:	b.ne	442490 <_obstack_memory_used@@Base+0x12f4>  // b.any
  4424a8:	ldr	x1, [x19, #16]
  4424ac:	str	x20, [x1, x0, lsl #3]
  4424b0:	ldr	x0, [x19, #8]
  4424b4:	add	x0, x0, #0x1
  4424b8:	str	x0, [x19, #8]
  4424bc:	mov	w0, #0x1                   	// #1
  4424c0:	b	442444 <_obstack_memory_used@@Base+0x12a8>
  4424c4:	lsl	x0, x1, #1
  4424c8:	str	x0, [x19]
  4424cc:	lsl	x1, x1, #4
  4424d0:	ldr	x0, [x19, #16]
  4424d4:	bl	404540 <realloc@plt>
  4424d8:	cbz	x0, 442520 <_obstack_memory_used@@Base+0x1384>
  4424dc:	str	x0, [x19, #16]
  4424e0:	b	44246c <_obstack_memory_used@@Base+0x12d0>
  4424e4:	ldr	x0, [x19, #8]
  4424e8:	lsl	x2, x0, #3
  4424ec:	add	x1, x3, x2
  4424f0:	ldur	x1, [x1, #-8]
  4424f4:	cmp	x20, x1
  4424f8:	b.ge	4424a8 <_obstack_memory_used@@Base+0x130c>  // b.tcont
  4424fc:	str	x1, [x3, x2]
  442500:	sub	x0, x0, #0x1
  442504:	ldr	x3, [x19, #16]
  442508:	add	x1, x3, x2
  44250c:	sub	x2, x2, #0x8
  442510:	ldur	x1, [x1, #-16]
  442514:	cmp	x1, x20
  442518:	b.gt	4424fc <_obstack_memory_used@@Base+0x1360>
  44251c:	b	4424a8 <_obstack_memory_used@@Base+0x130c>
  442520:	mov	w0, #0x0                   	// #0
  442524:	b	442444 <_obstack_memory_used@@Base+0x12a8>
  442528:	stp	x29, x30, [sp, #-64]!
  44252c:	mov	x29, sp
  442530:	stp	x19, x20, [sp, #16]
  442534:	stp	x21, x22, [sp, #32]
  442538:	stp	x23, x24, [sp, #48]
  44253c:	mov	x21, x0
  442540:	mov	x22, x1
  442544:	mov	x20, x2
  442548:	mov	x24, x3
  44254c:	mov	w23, w4
  442550:	b	442598 <_obstack_memory_used@@Base+0x13fc>
  442554:	mov	x1, x20
  442558:	mov	x0, x22
  44255c:	bl	442408 <_obstack_memory_used@@Base+0x126c>
  442560:	and	w0, w0, #0xff
  442564:	cbz	w0, 442624 <_obstack_memory_used@@Base+0x1488>
  442568:	add	x19, x19, x19, lsl #1
  44256c:	lsl	x19, x19, #3
  442570:	ldr	x0, [x21, #40]
  442574:	add	x0, x0, x19
  442578:	ldr	x1, [x0, #8]
  44257c:	cbz	x1, 44263c <_obstack_memory_used@@Base+0x14a0>
  442580:	cmp	x1, #0x2
  442584:	b.eq	4425f8 <_obstack_memory_used@@Base+0x145c>  // b.none
  442588:	ldr	x0, [x21, #40]
  44258c:	add	x19, x0, x19
  442590:	ldr	x0, [x19, #16]
  442594:	ldr	x20, [x0]
  442598:	mov	x1, x20
  44259c:	mov	x0, x22
  4425a0:	bl	441424 <_obstack_memory_used@@Base+0x288>
  4425a4:	cbnz	x0, 44261c <_obstack_memory_used@@Base+0x1480>
  4425a8:	mov	x19, x20
  4425ac:	lsl	x0, x20, #4
  4425b0:	ldr	x1, [x21]
  4425b4:	add	x2, x1, x0
  4425b8:	ldrb	w2, [x2, #8]
  4425bc:	cmp	w2, w23
  4425c0:	b.ne	442554 <_obstack_memory_used@@Base+0x13b8>  // b.any
  4425c4:	ldr	x0, [x1, x0]
  4425c8:	cmp	x0, x24
  4425cc:	b.ne	442554 <_obstack_memory_used@@Base+0x13b8>  // b.any
  4425d0:	mov	w0, #0x0                   	// #0
  4425d4:	cmp	w23, #0x9
  4425d8:	b.ne	442628 <_obstack_memory_used@@Base+0x148c>  // b.any
  4425dc:	mov	x1, x20
  4425e0:	mov	x0, x22
  4425e4:	bl	442408 <_obstack_memory_used@@Base+0x126c>
  4425e8:	ands	w0, w0, #0xff
  4425ec:	mov	w0, #0xc                   	// #12
  4425f0:	csel	w0, w0, wzr, eq  // eq = none
  4425f4:	b	442628 <_obstack_memory_used@@Base+0x148c>
  4425f8:	ldr	x0, [x0, #16]
  4425fc:	mov	w4, w23
  442600:	mov	x3, x24
  442604:	ldr	x2, [x0, #8]
  442608:	mov	x1, x22
  44260c:	mov	x0, x21
  442610:	bl	442528 <_obstack_memory_used@@Base+0x138c>
  442614:	cbz	w0, 442588 <_obstack_memory_used@@Base+0x13ec>
  442618:	b	442628 <_obstack_memory_used@@Base+0x148c>
  44261c:	mov	w0, #0x0                   	// #0
  442620:	b	442628 <_obstack_memory_used@@Base+0x148c>
  442624:	mov	w0, #0xc                   	// #12
  442628:	ldp	x19, x20, [sp, #16]
  44262c:	ldp	x21, x22, [sp, #32]
  442630:	ldp	x23, x24, [sp, #48]
  442634:	ldp	x29, x30, [sp], #64
  442638:	ret
  44263c:	mov	w0, #0x0                   	// #0
  442640:	b	442628 <_obstack_memory_used@@Base+0x148c>
  442644:	stp	x29, x30, [sp, #-32]!
  442648:	mov	x29, sp
  44264c:	str	x19, [sp, #16]
  442650:	mov	x19, x0
  442654:	str	x1, [x0]
  442658:	str	xzr, [x0, #8]
  44265c:	lsl	x0, x1, #3
  442660:	bl	404310 <malloc@plt>
  442664:	str	x0, [x19, #16]
  442668:	cmp	x0, #0x0
  44266c:	mov	w0, #0xc                   	// #12
  442670:	csel	w0, w0, wzr, eq  // eq = none
  442674:	ldr	x19, [sp, #16]
  442678:	ldp	x29, x30, [sp], #32
  44267c:	ret
  442680:	stp	x29, x30, [sp, #-64]!
  442684:	mov	x29, sp
  442688:	stp	x19, x20, [sp, #16]
  44268c:	stp	x21, x22, [sp, #32]
  442690:	stp	x23, x24, [sp, #48]
  442694:	mov	x21, x0
  442698:	mov	x20, x1
  44269c:	mov	x22, x2
  4426a0:	mov	x23, x1
  4426a4:	str	x2, [x23], #32
  4426a8:	ldr	x1, [x1, #16]
  4426ac:	mov	x0, x23
  4426b0:	bl	442644 <_obstack_memory_used@@Base+0x14a8>
  4426b4:	cbnz	w0, 442788 <_obstack_memory_used@@Base+0x15ec>
  4426b8:	mov	w24, w0
  4426bc:	ldr	x0, [x20, #16]
  4426c0:	cmp	x0, #0x0
  4426c4:	b.le	442710 <_obstack_memory_used@@Base+0x1574>
  4426c8:	mov	x19, #0x0                   	// #0
  4426cc:	b	4426e0 <_obstack_memory_used@@Base+0x1544>
  4426d0:	add	x19, x19, #0x1
  4426d4:	ldr	x0, [x20, #16]
  4426d8:	cmp	x0, x19
  4426dc:	b.le	442710 <_obstack_memory_used@@Base+0x1574>
  4426e0:	ldr	x0, [x20, #24]
  4426e4:	ldr	x1, [x0, x19, lsl #3]
  4426e8:	ldr	x3, [x21]
  4426ec:	add	x3, x3, x1, lsl #4
  4426f0:	ldrb	w3, [x3, #8]
  4426f4:	tbnz	w3, #3, 4426d0 <_obstack_memory_used@@Base+0x1534>
  4426f8:	mov	x0, x23
  4426fc:	bl	441fd4 <_obstack_memory_used@@Base+0xe38>
  442700:	and	w0, w0, #0xff
  442704:	cbnz	w0, 4426d0 <_obstack_memory_used@@Base+0x1534>
  442708:	mov	w24, #0xc                   	// #12
  44270c:	b	44274c <_obstack_memory_used@@Base+0x15b0>
  442710:	ldr	x19, [x21, #136]
  442714:	and	x22, x22, x19
  442718:	add	x22, x22, x22, lsl #1
  44271c:	lsl	x19, x22, #3
  442720:	ldr	x21, [x21, #64]
  442724:	add	x22, x21, x19
  442728:	ldr	x0, [x21, x19]
  44272c:	ldr	x1, [x22, #8]
  442730:	cmp	x1, x0
  442734:	b.le	442764 <_obstack_memory_used@@Base+0x15c8>
  442738:	ldr	x1, [x22, #16]
  44273c:	ldr	x0, [x21, x19]
  442740:	add	x2, x0, #0x1
  442744:	str	x2, [x21, x19]
  442748:	str	x20, [x1, x0, lsl #3]
  44274c:	mov	w0, w24
  442750:	ldp	x19, x20, [sp, #16]
  442754:	ldp	x21, x22, [sp, #32]
  442758:	ldp	x23, x24, [sp, #48]
  44275c:	ldp	x29, x30, [sp], #64
  442760:	ret
  442764:	add	x0, x0, #0x1
  442768:	lsl	x23, x0, #1
  44276c:	lsl	x1, x0, #4
  442770:	ldr	x0, [x22, #16]
  442774:	bl	404540 <realloc@plt>
  442778:	cbz	x0, 442790 <_obstack_memory_used@@Base+0x15f4>
  44277c:	str	x0, [x22, #16]
  442780:	str	x23, [x22, #8]
  442784:	b	442738 <_obstack_memory_used@@Base+0x159c>
  442788:	mov	w24, #0xc                   	// #12
  44278c:	b	44274c <_obstack_memory_used@@Base+0x15b0>
  442790:	mov	w24, #0xc                   	// #12
  442794:	b	44274c <_obstack_memory_used@@Base+0x15b0>
  442798:	stp	x29, x30, [sp, #-96]!
  44279c:	mov	x29, sp
  4427a0:	stp	x21, x22, [sp, #32]
  4427a4:	stp	x23, x24, [sp, #48]
  4427a8:	mov	x23, x0
  4427ac:	ldr	x22, [x0, #152]
  4427b0:	ldr	x0, [x1, #8]
  4427b4:	cmp	x0, #0x0
  4427b8:	b.le	4428c0 <_obstack_memory_used@@Base+0x1724>
  4427bc:	stp	x19, x20, [sp, #16]
  4427c0:	stp	x25, x26, [sp, #64]
  4427c4:	mov	x20, x1
  4427c8:	mov	x24, x2
  4427cc:	mov	x19, #0x0                   	// #0
  4427d0:	mov	x26, #0x30                  	// #48
  4427d4:	mov	x25, #0x1                   	// #1
  4427d8:	b	44280c <_obstack_memory_used@@Base+0x1670>
  4427dc:	lsl	x27, x1, #1
  4427e0:	lsl	x1, x1, #4
  4427e4:	ldr	x0, [x23, #248]
  4427e8:	bl	404540 <realloc@plt>
  4427ec:	cbz	x0, 4428c8 <_obstack_memory_used@@Base+0x172c>
  4427f0:	str	x0, [x23, #248]
  4427f4:	str	x27, [x23, #240]
  4427f8:	b	442858 <_obstack_memory_used@@Base+0x16bc>
  4427fc:	add	x19, x19, #0x1
  442800:	ldr	x0, [x20, #8]
  442804:	cmp	x0, x19
  442808:	b.le	4428a4 <_obstack_memory_used@@Base+0x1708>
  44280c:	ldr	x0, [x20, #16]
  442810:	ldr	x21, [x0, x19, lsl #3]
  442814:	lsl	x3, x21, #4
  442818:	ldr	x4, [x22]
  44281c:	add	x0, x4, x3
  442820:	ldrb	w0, [x0, #8]
  442824:	cmp	w0, #0x8
  442828:	b.ne	4427fc <_obstack_memory_used@@Base+0x1660>  // b.any
  44282c:	ldr	x0, [x4, x3]
  442830:	cmp	x0, #0x3f
  442834:	b.gt	4427fc <_obstack_memory_used@@Base+0x1660>
  442838:	ldr	x1, [x22, #160]
  44283c:	lsr	x0, x1, x0
  442840:	tbz	w0, #0, 4427fc <_obstack_memory_used@@Base+0x1660>
  442844:	stp	x27, x28, [sp, #80]
  442848:	ldr	x1, [x23, #240]
  44284c:	ldr	x0, [x23, #232]
  442850:	cmp	x0, x1
  442854:	b.eq	4427dc <_obstack_memory_used@@Base+0x1640>  // b.none
  442858:	ldr	x28, [x23, #232]
  44285c:	ldr	x27, [x23, #248]
  442860:	mov	x1, x26
  442864:	mov	x0, x25
  442868:	bl	4044d0 <calloc@plt>
  44286c:	str	x0, [x27, x28, lsl #3]
  442870:	ldr	x1, [x23, #232]
  442874:	ldr	x0, [x23, #248]
  442878:	ldr	x0, [x0, x1, lsl #3]
  44287c:	cbz	x0, 4428c8 <_obstack_memory_used@@Base+0x172c>
  442880:	str	x21, [x0, #8]
  442884:	ldr	x1, [x23, #248]
  442888:	ldr	x0, [x23, #232]
  44288c:	add	x2, x0, #0x1
  442890:	str	x2, [x23, #232]
  442894:	ldr	x0, [x1, x0, lsl #3]
  442898:	str	x24, [x0]
  44289c:	ldp	x27, x28, [sp, #80]
  4428a0:	b	4427fc <_obstack_memory_used@@Base+0x1660>
  4428a4:	mov	w0, #0x0                   	// #0
  4428a8:	ldp	x19, x20, [sp, #16]
  4428ac:	ldp	x25, x26, [sp, #64]
  4428b0:	ldp	x21, x22, [sp, #32]
  4428b4:	ldp	x23, x24, [sp, #48]
  4428b8:	ldp	x29, x30, [sp], #96
  4428bc:	ret
  4428c0:	mov	w0, #0x0                   	// #0
  4428c4:	b	4428b0 <_obstack_memory_used@@Base+0x1714>
  4428c8:	mov	w0, #0xc                   	// #12
  4428cc:	ldp	x19, x20, [sp, #16]
  4428d0:	ldp	x25, x26, [sp, #64]
  4428d4:	ldp	x27, x28, [sp, #80]
  4428d8:	b	4428b0 <_obstack_memory_used@@Base+0x1714>
  4428dc:	stp	x29, x30, [sp, #-48]!
  4428e0:	mov	x29, sp
  4428e4:	stp	x19, x20, [sp, #16]
  4428e8:	str	x21, [sp, #32]
  4428ec:	mov	x20, x0
  4428f0:	ldr	x0, [x0, #88]
  4428f4:	ldr	x21, [x20, #64]
  4428f8:	cmp	x21, x0
  4428fc:	csel	x21, x21, x0, le
  442900:	ldr	x19, [x20, #48]
  442904:	cmp	x21, x19
  442908:	b.le	44296c <_obstack_memory_used@@Base+0x17d0>
  44290c:	bl	404550 <__ctype_toupper_loc@plt>
  442910:	ldr	x1, [x20]
  442914:	ldr	x2, [x20, #40]
  442918:	add	x1, x1, x19
  44291c:	ldrb	w1, [x1, x2]
  442920:	ldr	x2, [x20, #120]
  442924:	cbnz	x2, 442960 <_obstack_memory_used@@Base+0x17c4>
  442928:	ldr	x2, [x20, #8]
  44292c:	and	x1, x1, #0xff
  442930:	ldr	x3, [x0]
  442934:	ldr	w1, [x3, x1, lsl #2]
  442938:	strb	w1, [x2, x19]
  44293c:	add	x19, x19, #0x1
  442940:	cmp	x21, x19
  442944:	b.ne	442910 <_obstack_memory_used@@Base+0x1774>  // b.any
  442948:	str	x21, [x20, #48]
  44294c:	str	x21, [x20, #56]
  442950:	ldp	x19, x20, [sp, #16]
  442954:	ldr	x21, [sp, #32]
  442958:	ldp	x29, x30, [sp], #48
  44295c:	ret
  442960:	and	x1, x1, #0xff
  442964:	ldrb	w1, [x2, x1]
  442968:	b	442928 <_obstack_memory_used@@Base+0x178c>
  44296c:	mov	x21, x19
  442970:	b	442948 <_obstack_memory_used@@Base+0x17ac>
  442974:	stp	x29, x30, [sp, #-160]!
  442978:	mov	x29, sp
  44297c:	stp	x19, x20, [sp, #16]
  442980:	stp	x21, x22, [sp, #32]
  442984:	stp	x23, x24, [sp, #48]
  442988:	mov	x19, x0
  44298c:	ldr	x0, [x0, #88]
  442990:	ldr	x21, [x19, #64]
  442994:	cmp	x21, x0
  442998:	csel	x21, x21, x0, le
  44299c:	ldr	x24, [x19, #48]
  4429a0:	cmp	x21, x24
  4429a4:	b.le	442b0c <_obstack_memory_used@@Base+0x1970>
  4429a8:	str	x25, [sp, #64]
  4429ac:	mov	x23, #0x1                   	// #1
  4429b0:	add	x22, x19, #0x20
  4429b4:	mov	w20, #0xffffffff            	// #-1
  4429b8:	b	442ab4 <_obstack_memory_used@@Base+0x1918>
  4429bc:	ldr	w0, [x19, #144]
  4429c0:	cmp	w0, #0x0
  4429c4:	b.le	442a3c <_obstack_memory_used@@Base+0x18a0>
  4429c8:	cmp	x2, #0x0
  4429cc:	b.le	442a44 <_obstack_memory_used@@Base+0x18a8>
  4429d0:	mov	x4, x2
  4429d4:	mov	x1, x23
  4429d8:	b	4429e0 <_obstack_memory_used@@Base+0x1844>
  4429dc:	mov	x1, x0
  4429e0:	ldr	x0, [x19]
  4429e4:	ldr	x3, [x19, #40]
  4429e8:	add	x0, x0, x24
  4429ec:	add	x0, x0, x1
  4429f0:	add	x0, x0, x3
  4429f4:	ldurb	w0, [x0, #-1]
  4429f8:	ldr	x3, [x19, #120]
  4429fc:	ldrb	w3, [x3, x0]
  442a00:	ldr	x0, [x19, #8]
  442a04:	add	x0, x0, x24
  442a08:	add	x0, x0, x1
  442a0c:	sturb	w3, [x0, #-1]
  442a10:	add	x0, sp, #0x60
  442a14:	add	x0, x1, x0
  442a18:	sturb	w3, [x0, #-1]
  442a1c:	ldr	w0, [x19, #144]
  442a20:	cmp	w0, w1
  442a24:	b.le	442a4c <_obstack_memory_used@@Base+0x18b0>
  442a28:	add	x0, x1, #0x1
  442a2c:	cmp	x1, x4
  442a30:	b.ne	4429dc <_obstack_memory_used@@Base+0x1840>  // b.any
  442a34:	add	x1, sp, #0x60
  442a38:	b	442ad4 <_obstack_memory_used@@Base+0x1938>
  442a3c:	add	x1, sp, #0x60
  442a40:	b	442ad4 <_obstack_memory_used@@Base+0x1938>
  442a44:	add	x1, sp, #0x60
  442a48:	b	442ad4 <_obstack_memory_used@@Base+0x1938>
  442a4c:	add	x1, sp, #0x60
  442a50:	b	442ad4 <_obstack_memory_used@@Base+0x1938>
  442a54:	ldr	x0, [x19]
  442a58:	ldr	x1, [x19, #40]
  442a5c:	add	x0, x0, x24
  442a60:	ldrb	w0, [x0, x1]
  442a64:	str	w0, [sp, #92]
  442a68:	ldr	x1, [x19, #120]
  442a6c:	cbnz	x1, 442b28 <_obstack_memory_used@@Base+0x198c>
  442a70:	str	x25, [x19, #32]
  442a74:	mov	x0, x23
  442a78:	add	x1, x24, #0x1
  442a7c:	ldr	x2, [x19, #16]
  442a80:	ldr	w3, [sp, #92]
  442a84:	str	w3, [x2, x24, lsl #2]
  442a88:	add	x0, x24, x0
  442a8c:	cmp	x1, x0
  442a90:	b.ge	442b38 <_obstack_memory_used@@Base+0x199c>  // b.tcont
  442a94:	ldr	x2, [x19, #16]
  442a98:	str	w20, [x2, x1, lsl #2]
  442a9c:	add	x1, x1, #0x1
  442aa0:	cmp	x0, x1
  442aa4:	b.ne	442a94 <_obstack_memory_used@@Base+0x18f8>  // b.any
  442aa8:	mov	x24, x0
  442aac:	cmp	x24, x21
  442ab0:	b.ge	442b40 <_obstack_memory_used@@Base+0x19a4>  // b.tcont
  442ab4:	sub	x2, x21, x24
  442ab8:	ldr	x25, [x19, #32]
  442abc:	ldr	x0, [x19, #120]
  442ac0:	cbnz	x0, 4429bc <_obstack_memory_used@@Base+0x1820>
  442ac4:	ldr	x1, [x19, #40]
  442ac8:	add	x0, x24, x1
  442acc:	ldr	x1, [x19]
  442ad0:	add	x1, x1, x0
  442ad4:	mov	x3, x22
  442ad8:	add	x0, sp, #0x5c
  442adc:	bl	440da8 <argp_parse@@Base+0xd668>
  442ae0:	sub	x1, x0, #0x1
  442ae4:	cmn	x1, #0x3
  442ae8:	b.hi	442a54 <_obstack_memory_used@@Base+0x18b8>  // b.pmore
  442aec:	cmn	x0, #0x2
  442af0:	b.ne	442a78 <_obstack_memory_used@@Base+0x18dc>  // b.any
  442af4:	ldr	x1, [x19, #64]
  442af8:	ldr	x0, [x19, #88]
  442afc:	cmp	x1, x0
  442b00:	b.ge	442a54 <_obstack_memory_used@@Base+0x18b8>  // b.tcont
  442b04:	str	x25, [x19, #32]
  442b08:	ldr	x25, [sp, #64]
  442b0c:	str	x24, [x19, #48]
  442b10:	str	x24, [x19, #56]
  442b14:	ldp	x19, x20, [sp, #16]
  442b18:	ldp	x21, x22, [sp, #32]
  442b1c:	ldp	x23, x24, [sp, #48]
  442b20:	ldp	x29, x30, [sp], #160
  442b24:	ret
  442b28:	and	x0, x0, #0xff
  442b2c:	ldrb	w0, [x1, x0]
  442b30:	str	w0, [sp, #92]
  442b34:	b	442a70 <_obstack_memory_used@@Base+0x18d4>
  442b38:	mov	x24, x1
  442b3c:	b	442aac <_obstack_memory_used@@Base+0x1910>
  442b40:	ldr	x25, [sp, #64]
  442b44:	b	442b0c <_obstack_memory_used@@Base+0x1970>
  442b48:	cbz	x1, 442ce8 <_obstack_memory_used@@Base+0x1b4c>
  442b4c:	stp	x29, x30, [sp, #-48]!
  442b50:	mov	x29, sp
  442b54:	stp	x19, x20, [sp, #16]
  442b58:	str	x21, [sp, #32]
  442b5c:	mov	x19, x0
  442b60:	mov	x21, x1
  442b64:	ldr	x1, [x1, #8]
  442b68:	mov	w0, #0x0                   	// #0
  442b6c:	cbz	x1, 442cd8 <_obstack_memory_used@@Base+0x1b3c>
  442b70:	ldr	x2, [x19]
  442b74:	ldr	x0, [x19, #8]
  442b78:	add	x0, x0, x1, lsl #1
  442b7c:	cmp	x2, x0
  442b80:	b.lt	442bd4 <_obstack_memory_used@@Base+0x1a38>  // b.tstop
  442b84:	ldr	x0, [x19, #8]
  442b88:	cbz	x0, 442bf8 <_obstack_memory_used@@Base+0x1a5c>
  442b8c:	ldr	x2, [x21, #8]
  442b90:	add	x20, x0, x2, lsl #1
  442b94:	sub	x2, x2, #0x1
  442b98:	subs	x0, x0, #0x1
  442b9c:	ccmp	x2, #0x0, #0x1, pl  // pl = nfrst
  442ba0:	b.ge	442c30 <_obstack_memory_used@@Base+0x1a94>  // b.tcont
  442ba4:	tbz	x2, #63, 442c64 <_obstack_memory_used@@Base+0x1ac8>
  442ba8:	ldr	x1, [x19, #8]
  442bac:	ldr	x2, [x21, #8]
  442bb0:	add	x2, x1, x2, lsl #1
  442bb4:	sub	x5, x2, #0x1
  442bb8:	mov	w0, #0x0                   	// #0
  442bbc:	subs	x2, x2, x20
  442bc0:	b.eq	442cd8 <_obstack_memory_used@@Base+0x1b3c>  // b.none
  442bc4:	sub	x3, x1, #0x1
  442bc8:	add	x1, x1, x2
  442bcc:	str	x1, [x19, #8]
  442bd0:	b	442c94 <_obstack_memory_used@@Base+0x1af8>
  442bd4:	add	x1, x1, x2
  442bd8:	lsl	x20, x1, #1
  442bdc:	lsl	x1, x1, #4
  442be0:	ldr	x0, [x19, #16]
  442be4:	bl	404540 <realloc@plt>
  442be8:	cbz	x0, 442cf0 <_obstack_memory_used@@Base+0x1b54>
  442bec:	str	x0, [x19, #16]
  442bf0:	str	x20, [x19]
  442bf4:	b	442b84 <_obstack_memory_used@@Base+0x19e8>
  442bf8:	ldr	x0, [x21, #8]
  442bfc:	str	x0, [x19, #8]
  442c00:	ldr	x2, [x21, #8]
  442c04:	lsl	x2, x2, #3
  442c08:	ldr	x1, [x21, #16]
  442c0c:	ldr	x0, [x19, #16]
  442c10:	bl	403f70 <memcpy@plt>
  442c14:	mov	w0, #0x0                   	// #0
  442c18:	b	442cd8 <_obstack_memory_used@@Base+0x1b3c>
  442c1c:	sub	x2, x2, #0x1
  442c20:	sub	x0, x0, #0x1
  442c24:	cmp	x2, #0x0
  442c28:	ccmp	x0, #0x0, #0x1, ge  // ge = tcont
  442c2c:	b.lt	442ba4 <_obstack_memory_used@@Base+0x1a08>  // b.tstop
  442c30:	ldr	x1, [x19, #16]
  442c34:	ldr	x4, [x1, x0, lsl #3]
  442c38:	ldr	x3, [x21, #16]
  442c3c:	ldr	x3, [x3, x2, lsl #3]
  442c40:	cmp	x4, x3
  442c44:	b.eq	442c1c <_obstack_memory_used@@Base+0x1a80>  // b.none
  442c48:	b.ge	442c5c <_obstack_memory_used@@Base+0x1ac0>  // b.tcont
  442c4c:	sub	x2, x2, #0x1
  442c50:	sub	x20, x20, #0x1
  442c54:	str	x3, [x1, x20, lsl #3]
  442c58:	b	442c24 <_obstack_memory_used@@Base+0x1a88>
  442c5c:	sub	x0, x0, #0x1
  442c60:	b	442c24 <_obstack_memory_used@@Base+0x1a88>
  442c64:	add	x2, x2, #0x1
  442c68:	sub	x20, x20, x2
  442c6c:	ldr	x0, [x19, #16]
  442c70:	lsl	x2, x2, #3
  442c74:	ldr	x1, [x21, #16]
  442c78:	add	x0, x0, x20, lsl #3
  442c7c:	bl	403f70 <memcpy@plt>
  442c80:	b	442ba8 <_obstack_memory_used@@Base+0x1a0c>
  442c84:	add	x4, x3, x2
  442c88:	str	x0, [x1, x4, lsl #3]
  442c8c:	subs	x3, x3, #0x1
  442c90:	b.mi	442cc4 <_obstack_memory_used@@Base+0x1b28>  // b.first
  442c94:	ldr	x1, [x19, #16]
  442c98:	ldr	x4, [x1, x5, lsl #3]
  442c9c:	ldr	x0, [x1, x3, lsl #3]
  442ca0:	cmp	x4, x0
  442ca4:	b.le	442c84 <_obstack_memory_used@@Base+0x1ae8>
  442ca8:	sub	x5, x5, #0x1
  442cac:	add	x0, x3, x2
  442cb0:	str	x4, [x1, x0, lsl #3]
  442cb4:	subs	x2, x2, #0x1
  442cb8:	b.ne	442c94 <_obstack_memory_used@@Base+0x1af8>  // b.any
  442cbc:	mov	w0, #0x0                   	// #0
  442cc0:	b	442cd8 <_obstack_memory_used@@Base+0x1b3c>
  442cc4:	ldr	x0, [x19, #16]
  442cc8:	lsl	x2, x2, #3
  442ccc:	add	x1, x0, x20, lsl #3
  442cd0:	bl	403f70 <memcpy@plt>
  442cd4:	mov	w0, #0x0                   	// #0
  442cd8:	ldp	x19, x20, [sp, #16]
  442cdc:	ldr	x21, [sp, #32]
  442ce0:	ldp	x29, x30, [sp], #48
  442ce4:	ret
  442ce8:	mov	w0, #0x0                   	// #0
  442cec:	ret
  442cf0:	mov	w0, #0xc                   	// #12
  442cf4:	b	442cd8 <_obstack_memory_used@@Base+0x1b3c>
  442cf8:	stp	x29, x30, [sp, #-48]!
  442cfc:	mov	x29, sp
  442d00:	stp	x19, x20, [sp, #16]
  442d04:	mov	x19, x1
  442d08:	ldr	x1, [x1, #8]
  442d0c:	cbz	x1, 442e94 <_obstack_memory_used@@Base+0x1cf8>
  442d10:	stp	x21, x22, [sp, #32]
  442d14:	mov	x21, x0
  442d18:	mov	x20, x2
  442d1c:	ldr	x2, [x2, #8]
  442d20:	mov	w0, #0x0                   	// #0
  442d24:	cbz	x2, 442ea8 <_obstack_memory_used@@Base+0x1d0c>
  442d28:	add	x1, x1, x2
  442d2c:	ldr	x22, [x21]
  442d30:	ldr	x0, [x21, #8]
  442d34:	add	x0, x1, x0
  442d38:	cmp	x0, x22
  442d3c:	b.gt	442d64 <_obstack_memory_used@@Base+0x1bc8>
  442d40:	ldr	x3, [x21, #8]
  442d44:	ldr	x5, [x19, #8]
  442d48:	ldr	x6, [x20, #8]
  442d4c:	add	x1, x3, x5
  442d50:	add	x1, x1, x6
  442d54:	sub	x5, x5, #0x1
  442d58:	sub	x6, x6, #0x1
  442d5c:	sub	x3, x3, #0x1
  442d60:	b	442ddc <_obstack_memory_used@@Base+0x1c40>
  442d64:	add	x22, x1, x22
  442d68:	lsl	x1, x22, #3
  442d6c:	ldr	x0, [x21, #16]
  442d70:	bl	404540 <realloc@plt>
  442d74:	cbz	x0, 442e9c <_obstack_memory_used@@Base+0x1d00>
  442d78:	str	x0, [x21, #16]
  442d7c:	str	x22, [x21]
  442d80:	b	442d40 <_obstack_memory_used@@Base+0x1ba4>
  442d84:	tbnz	x3, #63, 442da4 <_obstack_memory_used@@Base+0x1c08>
  442d88:	ldr	x2, [x21, #16]
  442d8c:	ldr	x0, [x2, x3, lsl #3]
  442d90:	cmp	x4, x0
  442d94:	b.ge	442dc4 <_obstack_memory_used@@Base+0x1c28>  // b.tcont
  442d98:	sub	x3, x3, #0x1
  442d9c:	cmn	x3, #0x1
  442da0:	b.ne	442d8c <_obstack_memory_used@@Base+0x1bf0>  // b.any
  442da4:	sub	x1, x1, #0x1
  442da8:	ldr	x0, [x21, #16]
  442dac:	str	x4, [x0, x1, lsl #3]
  442db0:	subs	x5, x5, #0x1
  442db4:	b.mi	442e00 <_obstack_memory_used@@Base+0x1c64>  // b.first
  442db8:	subs	x6, x6, #0x1
  442dbc:	b.pl	442ddc <_obstack_memory_used@@Base+0x1c40>  // b.nfrst
  442dc0:	b	442e00 <_obstack_memory_used@@Base+0x1c64>
  442dc4:	tbnz	x3, #63, 442da4 <_obstack_memory_used@@Base+0x1c08>
  442dc8:	cmp	x4, x0
  442dcc:	b.ne	442da4 <_obstack_memory_used@@Base+0x1c08>  // b.any
  442dd0:	b	442db0 <_obstack_memory_used@@Base+0x1c14>
  442dd4:	subs	x5, x5, #0x1
  442dd8:	b.mi	442e00 <_obstack_memory_used@@Base+0x1c64>  // b.first
  442ddc:	ldr	x0, [x19, #16]
  442de0:	ldr	x4, [x0, x5, lsl #3]
  442de4:	ldr	x0, [x20, #16]
  442de8:	ldr	x0, [x0, x6, lsl #3]
  442dec:	cmp	x4, x0
  442df0:	b.eq	442d84 <_obstack_memory_used@@Base+0x1be8>  // b.none
  442df4:	b.ge	442dd4 <_obstack_memory_used@@Base+0x1c38>  // b.tcont
  442df8:	subs	x6, x6, #0x1
  442dfc:	b.pl	442ddc <_obstack_memory_used@@Base+0x1c40>  // b.nfrst
  442e00:	ldr	x0, [x21, #8]
  442e04:	sub	x3, x0, #0x1
  442e08:	ldr	x2, [x19, #8]
  442e0c:	add	x2, x0, x2
  442e10:	ldr	x4, [x20, #8]
  442e14:	add	x2, x2, x4
  442e18:	sub	x6, x2, #0x1
  442e1c:	sub	x2, x2, x1
  442e20:	add	x0, x0, x2
  442e24:	str	x0, [x21, #8]
  442e28:	cmp	x2, #0x0
  442e2c:	ccmp	x3, #0x0, #0x1, gt
  442e30:	b.ge	442e68 <_obstack_memory_used@@Base+0x1ccc>  // b.tcont
  442e34:	ldr	x0, [x21, #16]
  442e38:	lsl	x2, x2, #3
  442e3c:	add	x1, x0, x1, lsl #3
  442e40:	bl	403f70 <memcpy@plt>
  442e44:	mov	w0, #0x0                   	// #0
  442e48:	ldp	x21, x22, [sp, #32]
  442e4c:	ldp	x19, x20, [sp, #16]
  442e50:	ldp	x29, x30, [sp], #48
  442e54:	ret
  442e58:	add	x5, x3, x2
  442e5c:	str	x4, [x0, x5, lsl #3]
  442e60:	subs	x3, x3, #0x1
  442e64:	b.mi	442e34 <_obstack_memory_used@@Base+0x1c98>  // b.first
  442e68:	ldr	x0, [x21, #16]
  442e6c:	ldr	x5, [x0, x6, lsl #3]
  442e70:	ldr	x4, [x0, x3, lsl #3]
  442e74:	cmp	x5, x4
  442e78:	b.le	442e58 <_obstack_memory_used@@Base+0x1cbc>
  442e7c:	sub	x6, x6, #0x1
  442e80:	add	x4, x3, x2
  442e84:	str	x5, [x0, x4, lsl #3]
  442e88:	subs	x2, x2, #0x1
  442e8c:	b.ne	442e68 <_obstack_memory_used@@Base+0x1ccc>  // b.any
  442e90:	b	442e34 <_obstack_memory_used@@Base+0x1c98>
  442e94:	mov	w0, #0x0                   	// #0
  442e98:	b	442e4c <_obstack_memory_used@@Base+0x1cb0>
  442e9c:	mov	w0, #0xc                   	// #12
  442ea0:	ldp	x21, x22, [sp, #32]
  442ea4:	b	442e4c <_obstack_memory_used@@Base+0x1cb0>
  442ea8:	ldp	x21, x22, [sp, #32]
  442eac:	b	442e4c <_obstack_memory_used@@Base+0x1cb0>
  442eb0:	stp	x29, x30, [sp, #-32]!
  442eb4:	mov	x29, sp
  442eb8:	stp	x19, x20, [sp, #16]
  442ebc:	mov	x19, x0
  442ec0:	ldr	x0, [x1, #8]
  442ec4:	str	x0, [x19, #8]
  442ec8:	cmp	x0, #0x0
  442ecc:	b.le	442f18 <_obstack_memory_used@@Base+0x1d7c>
  442ed0:	mov	x20, x1
  442ed4:	str	x0, [x19]
  442ed8:	lsl	x0, x0, #3
  442edc:	bl	404310 <malloc@plt>
  442ee0:	str	x0, [x19, #16]
  442ee4:	cbz	x0, 442f08 <_obstack_memory_used@@Base+0x1d6c>
  442ee8:	ldr	x2, [x20, #8]
  442eec:	lsl	x2, x2, #3
  442ef0:	ldr	x1, [x20, #16]
  442ef4:	bl	403f70 <memcpy@plt>
  442ef8:	mov	w0, #0x0                   	// #0
  442efc:	ldp	x19, x20, [sp, #16]
  442f00:	ldp	x29, x30, [sp], #32
  442f04:	ret
  442f08:	str	xzr, [x19, #8]
  442f0c:	str	xzr, [x19]
  442f10:	mov	w0, #0xc                   	// #12
  442f14:	b	442efc <_obstack_memory_used@@Base+0x1d60>
  442f18:	stp	xzr, xzr, [x19]
  442f1c:	str	xzr, [x19, #16]
  442f20:	mov	w0, #0x0                   	// #0
  442f24:	b	442efc <_obstack_memory_used@@Base+0x1d60>
  442f28:	stp	x29, x30, [sp, #-64]!
  442f2c:	mov	x29, sp
  442f30:	stp	x19, x20, [sp, #16]
  442f34:	stp	x21, x22, [sp, #32]
  442f38:	mov	x21, x0
  442f3c:	mov	x19, x2
  442f40:	cbz	x1, 442f60 <_obstack_memory_used@@Base+0x1dc4>
  442f44:	mov	x20, x1
  442f48:	ldr	x0, [x1, #8]
  442f4c:	cmp	x0, #0x0
  442f50:	ccmp	x2, #0x0, #0x4, gt
  442f54:	b.ne	442f8c <_obstack_memory_used@@Base+0x1df0>  // b.any
  442f58:	cmp	x0, #0x0
  442f5c:	b.gt	442f98 <_obstack_memory_used@@Base+0x1dfc>
  442f60:	cbz	x19, 442f70 <_obstack_memory_used@@Base+0x1dd4>
  442f64:	ldr	x0, [x19, #8]
  442f68:	cmp	x0, #0x0
  442f6c:	b.gt	443018 <_obstack_memory_used@@Base+0x1e7c>
  442f70:	stp	xzr, xzr, [x21]
  442f74:	str	xzr, [x21, #16]
  442f78:	mov	w0, #0x0                   	// #0
  442f7c:	ldp	x19, x20, [sp, #16]
  442f80:	ldp	x21, x22, [sp, #32]
  442f84:	ldp	x29, x30, [sp], #64
  442f88:	ret
  442f8c:	ldr	x1, [x2, #8]
  442f90:	cmp	x1, #0x0
  442f94:	b.gt	442fa8 <_obstack_memory_used@@Base+0x1e0c>
  442f98:	mov	x1, x20
  442f9c:	mov	x0, x21
  442fa0:	bl	442eb0 <_obstack_memory_used@@Base+0x1d14>
  442fa4:	b	442f7c <_obstack_memory_used@@Base+0x1de0>
  442fa8:	add	x0, x0, x1
  442fac:	str	x0, [x21]
  442fb0:	lsl	x0, x0, #3
  442fb4:	bl	404310 <malloc@plt>
  442fb8:	str	x0, [x21, #16]
  442fbc:	cbz	x0, 4430c8 <_obstack_memory_used@@Base+0x1f2c>
  442fc0:	stp	x23, x24, [sp, #48]
  442fc4:	ldr	x2, [x20, #8]
  442fc8:	mov	x0, #0x0                   	// #0
  442fcc:	mov	x22, #0x0                   	// #0
  442fd0:	mov	x23, #0x0                   	// #0
  442fd4:	mov	x24, #0x0                   	// #0
  442fd8:	cmp	x2, #0x0
  442fdc:	b.gt	443048 <_obstack_memory_used@@Base+0x1eac>
  442fe0:	ldr	x1, [x19, #8]
  442fe4:	cmp	x1, x22
  442fe8:	b.le	4430b8 <_obstack_memory_used@@Base+0x1f1c>
  442fec:	ldr	x0, [x21, #16]
  442ff0:	sub	x2, x1, x22
  442ff4:	ldr	x1, [x19, #16]
  442ff8:	lsl	x2, x2, #3
  442ffc:	add	x1, x1, x22, lsl #3
  443000:	add	x0, x0, x24, lsl #3
  443004:	bl	403f70 <memcpy@plt>
  443008:	ldr	x0, [x19, #8]
  44300c:	sub	x22, x0, x22
  443010:	add	x24, x24, x22
  443014:	b	4430b8 <_obstack_memory_used@@Base+0x1f1c>
  443018:	mov	x1, x19
  44301c:	mov	x0, x21
  443020:	bl	442eb0 <_obstack_memory_used@@Base+0x1d14>
  443024:	b	442f7c <_obstack_memory_used@@Base+0x1de0>
  443028:	add	x22, x22, #0x1
  44302c:	add	x24, x0, #0x1
  443030:	ldr	x1, [x21, #16]
  443034:	str	x2, [x1, x0, lsl #3]
  443038:	ldr	x2, [x20, #8]
  44303c:	add	x0, x0, #0x1
  443040:	cmp	x2, x23
  443044:	b.le	442fe0 <_obstack_memory_used@@Base+0x1e44>
  443048:	mov	x24, x0
  44304c:	ldr	x1, [x19, #8]
  443050:	cmp	x1, x22
  443054:	b.le	443088 <_obstack_memory_used@@Base+0x1eec>
  443058:	ldr	x1, [x20, #16]
  44305c:	ldr	x1, [x1, x23, lsl #3]
  443060:	ldr	x2, [x19, #16]
  443064:	ldr	x2, [x2, x22, lsl #3]
  443068:	cmp	x1, x2
  44306c:	b.gt	443028 <_obstack_memory_used@@Base+0x1e8c>
  443070:	cinc	x22, x22, eq  // eq = none
  443074:	add	x23, x23, #0x1
  443078:	add	x24, x0, #0x1
  44307c:	ldr	x2, [x21, #16]
  443080:	str	x1, [x2, x0, lsl #3]
  443084:	b	443038 <_obstack_memory_used@@Base+0x1e9c>
  443088:	cmp	x2, x23
  44308c:	b.le	4430b8 <_obstack_memory_used@@Base+0x1f1c>
  443090:	ldr	x3, [x21, #16]
  443094:	sub	x2, x2, x23
  443098:	ldr	x1, [x20, #16]
  44309c:	lsl	x2, x2, #3
  4430a0:	add	x1, x1, x23, lsl #3
  4430a4:	add	x0, x3, x0, lsl #3
  4430a8:	bl	403f70 <memcpy@plt>
  4430ac:	ldr	x0, [x20, #8]
  4430b0:	sub	x23, x0, x23
  4430b4:	add	x24, x24, x23
  4430b8:	str	x24, [x21, #8]
  4430bc:	mov	w0, #0x0                   	// #0
  4430c0:	ldp	x23, x24, [sp, #48]
  4430c4:	b	442f7c <_obstack_memory_used@@Base+0x1de0>
  4430c8:	mov	w0, #0xc                   	// #12
  4430cc:	b	442f7c <_obstack_memory_used@@Base+0x1de0>
  4430d0:	stp	x29, x30, [sp, #-176]!
  4430d4:	mov	x29, sp
  4430d8:	stp	x19, x20, [sp, #16]
  4430dc:	stp	x21, x22, [sp, #32]
  4430e0:	mov	x20, x0
  4430e4:	ldr	x19, [x0, #48]
  4430e8:	ldr	x0, [x0, #88]
  4430ec:	ldr	x22, [x20, #64]
  4430f0:	cmp	x22, x0
  4430f4:	csel	x22, x22, x0, le
  4430f8:	ldrb	w0, [x20, #138]
  4430fc:	cbnz	w0, 443108 <_obstack_memory_used@@Base+0x1f6c>
  443100:	ldr	x0, [x20, #120]
  443104:	cbz	x0, 443130 <_obstack_memory_used@@Base+0x1f94>
  443108:	ldr	x21, [x20, #56]
  44310c:	cmp	x22, x19
  443110:	b.gt	443338 <_obstack_memory_used@@Base+0x219c>
  443114:	str	x19, [x20, #48]
  443118:	str	x21, [x20, #56]
  44311c:	mov	w0, #0x0                   	// #0
  443120:	ldp	x19, x20, [sp, #16]
  443124:	ldp	x21, x22, [sp, #32]
  443128:	ldp	x29, x30, [sp], #176
  44312c:	ret
  443130:	ldrb	w0, [x20, #140]
  443134:	cbnz	w0, 443108 <_obstack_memory_used@@Base+0x1f6c>
  443138:	cmp	x19, x22
  44313c:	b.ge	443328 <_obstack_memory_used@@Base+0x218c>  // b.tcont
  443140:	stp	x23, x24, [sp, #48]
  443144:	stp	x25, x26, [sp, #64]
  443148:	str	x27, [sp, #80]
  44314c:	add	x24, x20, #0x20
  443150:	mov	w23, #0xffffffff            	// #-1
  443154:	b	4431d8 <_obstack_memory_used@@Base+0x203c>
  443158:	bl	404550 <__ctype_toupper_loc@plt>
  44315c:	ldr	x1, [x20, #8]
  443160:	and	x21, x21, #0xff
  443164:	ldr	x0, [x0]
  443168:	ldr	w0, [x0, x21, lsl #2]
  44316c:	strb	w0, [x1, x19]
  443170:	ldr	x0, [x20, #16]
  443174:	ldr	x1, [x20, #8]
  443178:	ldrb	w1, [x1, x19]
  44317c:	str	w1, [x0, x19, lsl #2]
  443180:	add	x19, x19, #0x1
  443184:	b	4431d0 <_obstack_memory_used@@Base+0x2034>
  443188:	ldr	x0, [x20, #8]
  44318c:	mov	x2, x21
  443190:	add	x1, sp, #0x68
  443194:	add	x0, x0, x19
  443198:	bl	403f70 <memcpy@plt>
  44319c:	add	x19, x19, #0x1
  4431a0:	ldr	x0, [x20, #16]
  4431a4:	str	w25, [x0, x26, lsl #2]
  4431a8:	add	x2, x26, x21
  4431ac:	cmp	x19, x2
  4431b0:	b.ge	4431d0 <_obstack_memory_used@@Base+0x2034>  // b.tcont
  4431b4:	mov	x1, x19
  4431b8:	ldr	x0, [x20, #16]
  4431bc:	str	w23, [x0, x1, lsl #2]
  4431c0:	add	x1, x1, #0x1
  4431c4:	cmp	x2, x1
  4431c8:	b.ne	4431b8 <_obstack_memory_used@@Base+0x201c>  // b.any
  4431cc:	mov	x19, x2
  4431d0:	cmp	x19, x22
  4431d4:	b.ge	44331c <_obstack_memory_used@@Base+0x2180>  // b.tcont
  4431d8:	ldr	x25, [x20]
  4431dc:	ldr	x27, [x20, #40]
  4431e0:	add	x0, x25, x27
  4431e4:	ldrb	w21, [x0, x19]
  4431e8:	tst	w21, #0xffffff80
  4431ec:	b.ne	4431fc <_obstack_memory_used@@Base+0x2060>  // b.any
  4431f0:	mov	x0, x24
  4431f4:	bl	404680 <mbsinit@plt>
  4431f8:	cbnz	w0, 443158 <_obstack_memory_used@@Base+0x1fbc>
  4431fc:	ldr	x0, [x20, #32]
  443200:	str	x0, [sp, #168]
  443204:	mov	x26, x19
  443208:	add	x1, x27, x19
  44320c:	mov	x3, x24
  443210:	sub	x2, x22, x19
  443214:	add	x1, x25, x1
  443218:	add	x0, sp, #0x64
  44321c:	bl	440da8 <argp_parse@@Base+0xd668>
  443220:	mov	x21, x0
  443224:	sub	x0, x0, #0x1
  443228:	cmn	x0, #0x4
  44322c:	b.hi	44328c <_obstack_memory_used@@Base+0x20f0>  // b.pmore
  443230:	ldr	w27, [sp, #100]
  443234:	mov	w0, w27
  443238:	bl	404a60 <towupper@plt>
  44323c:	mov	w25, w0
  443240:	cmp	w27, w0
  443244:	b.eq	443268 <_obstack_memory_used@@Base+0x20cc>  // b.none
  443248:	add	x2, sp, #0xa8
  44324c:	mov	w1, w0
  443250:	add	x0, sp, #0x68
  443254:	bl	404c20 <wcrtomb@plt>
  443258:	cmp	x21, x0
  44325c:	b.eq	443188 <_obstack_memory_used@@Base+0x1fec>  // b.none
  443260:	mov	x21, x19
  443264:	b	443344 <_obstack_memory_used@@Base+0x21a8>
  443268:	ldr	x0, [x20, #8]
  44326c:	ldr	x1, [x20, #40]
  443270:	add	x1, x19, x1
  443274:	ldr	x3, [x20]
  443278:	mov	x2, x21
  44327c:	add	x1, x3, x1
  443280:	add	x0, x0, x19
  443284:	bl	403f70 <memcpy@plt>
  443288:	b	44319c <_obstack_memory_used@@Base+0x2000>
  44328c:	cmn	x0, #0x3
  443290:	b.hi	4432cc <_obstack_memory_used@@Base+0x2130>  // b.pmore
  443294:	ldr	x1, [x20, #64]
  443298:	ldr	x0, [x20, #88]
  44329c:	cmp	x1, x0
  4432a0:	b.lt	443304 <_obstack_memory_used@@Base+0x2168>  // b.tstop
  4432a4:	ldr	x0, [x20]
  4432a8:	ldr	x1, [x20, #40]
  4432ac:	add	x0, x0, x19
  4432b0:	ldrb	w0, [x0, x1]
  4432b4:	ldr	x1, [x20, #8]
  4432b8:	strb	w0, [x1, x19]
  4432bc:	add	x19, x19, #0x1
  4432c0:	ldr	x1, [x20, #16]
  4432c4:	str	w0, [x1, x26, lsl #2]
  4432c8:	b	4431d0 <_obstack_memory_used@@Base+0x2034>
  4432cc:	ldr	x0, [x20]
  4432d0:	ldr	x1, [x20, #40]
  4432d4:	add	x0, x0, x19
  4432d8:	ldrb	w0, [x0, x1]
  4432dc:	ldr	x1, [x20, #8]
  4432e0:	strb	w0, [x1, x19]
  4432e4:	add	x19, x19, #0x1
  4432e8:	ldr	x1, [x20, #16]
  4432ec:	str	w0, [x1, x26, lsl #2]
  4432f0:	cmn	x21, #0x1
  4432f4:	b.ne	4431d0 <_obstack_memory_used@@Base+0x2034>  // b.any
  4432f8:	ldr	x0, [sp, #168]
  4432fc:	str	x0, [x20, #32]
  443300:	b	4431d0 <_obstack_memory_used@@Base+0x2034>
  443304:	ldr	x0, [sp, #168]
  443308:	str	x0, [x20, #32]
  44330c:	ldp	x23, x24, [sp, #48]
  443310:	ldp	x25, x26, [sp, #64]
  443314:	ldr	x27, [sp, #80]
  443318:	b	443328 <_obstack_memory_used@@Base+0x218c>
  44331c:	ldp	x23, x24, [sp, #48]
  443320:	ldp	x25, x26, [sp, #64]
  443324:	ldr	x27, [sp, #80]
  443328:	str	x19, [x20, #48]
  44332c:	str	x19, [x20, #56]
  443330:	mov	w0, #0x0                   	// #0
  443334:	b	443120 <_obstack_memory_used@@Base+0x1f84>
  443338:	stp	x23, x24, [sp, #48]
  44333c:	stp	x25, x26, [sp, #64]
  443340:	str	x27, [sp, #80]
  443344:	sub	x2, x22, x19
  443348:	ldr	x0, [x20, #32]
  44334c:	str	x0, [sp, #168]
  443350:	ldr	x1, [x20, #120]
  443354:	cbnz	x1, 443420 <_obstack_memory_used@@Base+0x2284>
  443358:	ldr	x0, [x20, #40]
  44335c:	add	x0, x21, x0
  443360:	ldr	x25, [x20]
  443364:	add	x25, x25, x0
  443368:	add	x3, x20, #0x20
  44336c:	mov	x1, x25
  443370:	add	x0, sp, #0x64
  443374:	bl	440da8 <argp_parse@@Base+0xd668>
  443378:	mov	x23, x0
  44337c:	sub	x27, x0, #0x1
  443380:	cmn	x27, #0x4
  443384:	b.hi	44363c <_obstack_memory_used@@Base+0x24a0>  // b.pmore
  443388:	ldr	w26, [sp, #100]
  44338c:	mov	w0, w26
  443390:	bl	404a60 <towupper@plt>
  443394:	mov	w24, w0
  443398:	cmp	w26, w0
  44339c:	b.eq	4435fc <_obstack_memory_used@@Base+0x2460>  // b.none
  4433a0:	add	x2, sp, #0xa8
  4433a4:	mov	w1, w0
  4433a8:	add	x0, sp, #0x68
  4433ac:	bl	404c20 <wcrtomb@plt>
  4433b0:	mov	x26, x0
  4433b4:	cmp	x23, x0
  4433b8:	b.ne	4434a0 <_obstack_memory_used@@Base+0x2304>  // b.any
  4433bc:	ldr	x0, [x20, #8]
  4433c0:	mov	x2, x26
  4433c4:	add	x1, sp, #0x68
  4433c8:	add	x0, x0, x19
  4433cc:	bl	403f70 <memcpy@plt>
  4433d0:	ldrb	w0, [x20, #140]
  4433d4:	cbnz	w0, 443614 <_obstack_memory_used@@Base+0x2478>
  4433d8:	add	x21, x21, x23
  4433dc:	add	x0, x19, #0x1
  4433e0:	ldr	x1, [x20, #16]
  4433e4:	str	w24, [x1, x19, lsl #2]
  4433e8:	add	x1, x19, x23
  4433ec:	cmp	x0, x1
  4433f0:	b.ge	4436f0 <_obstack_memory_used@@Base+0x2554>  // b.tcont
  4433f4:	mov	w3, #0xffffffff            	// #-1
  4433f8:	ldr	x2, [x20, #16]
  4433fc:	str	w3, [x2, x0, lsl #2]
  443400:	add	x0, x0, #0x1
  443404:	cmp	x1, x0
  443408:	b.ne	4433f8 <_obstack_memory_used@@Base+0x225c>  // b.any
  44340c:	mov	x19, x1
  443410:	ldp	x23, x24, [sp, #48]
  443414:	ldp	x25, x26, [sp, #64]
  443418:	ldr	x27, [sp, #80]
  44341c:	b	44310c <_obstack_memory_used@@Base+0x1f70>
  443420:	ldr	w6, [x20, #144]
  443424:	cmp	w6, #0x0
  443428:	b.le	443488 <_obstack_memory_used@@Base+0x22ec>
  44342c:	cmp	x2, #0x0
  443430:	b.le	443490 <_obstack_memory_used@@Base+0x22f4>
  443434:	ldr	x5, [x20]
  443438:	ldr	x3, [x20, #40]
  44343c:	add	x3, x21, x3
  443440:	mov	x7, x2
  443444:	mov	x0, #0x1                   	// #1
  443448:	sub	x3, x3, #0x1
  44344c:	add	x5, x5, x3
  443450:	b	443458 <_obstack_memory_used@@Base+0x22bc>
  443454:	mov	x0, x3
  443458:	ldrb	w3, [x5, x0]
  44345c:	ldrb	w4, [x1, x3]
  443460:	add	x3, sp, #0x68
  443464:	add	x3, x0, x3
  443468:	sturb	w4, [x3, #-1]
  44346c:	cmp	w6, w0
  443470:	b.le	443498 <_obstack_memory_used@@Base+0x22fc>
  443474:	add	x3, x0, #0x1
  443478:	cmp	x0, x7
  44347c:	b.ne	443454 <_obstack_memory_used@@Base+0x22b8>  // b.any
  443480:	add	x25, sp, #0x68
  443484:	b	443368 <_obstack_memory_used@@Base+0x21cc>
  443488:	add	x25, sp, #0x68
  44348c:	b	443368 <_obstack_memory_used@@Base+0x21cc>
  443490:	add	x25, sp, #0x68
  443494:	b	443368 <_obstack_memory_used@@Base+0x21cc>
  443498:	add	x25, sp, #0x68
  44349c:	b	443368 <_obstack_memory_used@@Base+0x21cc>
  4434a0:	cmn	x0, #0x1
  4434a4:	b.eq	4435e4 <_obstack_memory_used@@Base+0x2448>  // b.none
  4434a8:	mov	x22, x19
  4434ac:	add	x25, x19, x0
  4434b0:	ldr	x0, [x20, #64]
  4434b4:	cmp	x25, x0
  4434b8:	b.ls	4434d4 <_obstack_memory_used@@Base+0x2338>  // b.plast
  4434bc:	ldr	x0, [sp, #168]
  4434c0:	str	x0, [x20, #32]
  4434c4:	ldp	x23, x24, [sp, #48]
  4434c8:	ldp	x25, x26, [sp, #64]
  4434cc:	ldr	x27, [sp, #80]
  4434d0:	b	443114 <_obstack_memory_used@@Base+0x1f78>
  4434d4:	ldr	x1, [x20, #24]
  4434d8:	cbz	x1, 4435c0 <_obstack_memory_used@@Base+0x2424>
  4434dc:	ldrb	w0, [x20, #140]
  4434e0:	cbnz	w0, 443508 <_obstack_memory_used@@Base+0x236c>
  4434e4:	cbz	x22, 443500 <_obstack_memory_used@@Base+0x2364>
  4434e8:	mov	x0, #0x0                   	// #0
  4434ec:	ldr	x1, [x20, #24]
  4434f0:	str	x0, [x1, x0, lsl #3]
  4434f4:	add	x0, x0, #0x1
  4434f8:	cmp	x22, x0
  4434fc:	b.ne	4434ec <_obstack_memory_used@@Base+0x2350>  // b.any
  443500:	mov	w0, #0x1                   	// #1
  443504:	strb	w0, [x20, #140]
  443508:	ldr	x0, [x20, #8]
  44350c:	mov	x2, x26
  443510:	add	x1, sp, #0x68
  443514:	add	x0, x0, x22
  443518:	bl	403f70 <memcpy@plt>
  44351c:	lsl	x0, x22, #2
  443520:	ldr	x1, [x20, #16]
  443524:	str	w24, [x1, x22, lsl #2]
  443528:	ldr	x1, [x20, #24]
  44352c:	str	x21, [x1, x22, lsl #3]
  443530:	cmp	x26, #0x1
  443534:	b.ls	443574 <_obstack_memory_used@@Base+0x23d8>  // b.plast
  443538:	add	x0, x0, #0x4
  44353c:	mov	x1, #0x1                   	// #1
  443540:	mov	w3, #0xffffffff            	// #-1
  443544:	cmp	x23, x1
  443548:	csel	x2, x27, x1, ls  // ls = plast
  44354c:	ldr	x5, [x20, #24]
  443550:	lsl	x4, x0, #1
  443554:	add	x2, x21, x2
  443558:	str	x2, [x5, x4]
  44355c:	ldr	x2, [x20, #16]
  443560:	str	w3, [x2, x0]
  443564:	add	x1, x1, #0x1
  443568:	add	x0, x0, #0x4
  44356c:	cmp	x1, x26
  443570:	b.ne	443544 <_obstack_memory_used@@Base+0x23a8>  // b.any
  443574:	sub	x26, x26, x23
  443578:	ldr	x0, [x20, #88]
  44357c:	add	x0, x26, x0
  443580:	str	x0, [x20, #88]
  443584:	ldr	x1, [x20, #96]
  443588:	cmp	x21, x1
  44358c:	b.ge	44359c <_obstack_memory_used@@Base+0x2400>  // b.tcont
  443590:	ldr	x1, [x20, #104]
  443594:	add	x26, x1, x26
  443598:	str	x26, [x20, #104]
  44359c:	ldr	x22, [x20, #64]
  4435a0:	cmp	x22, x0
  4435a4:	csel	x22, x22, x0, le
  4435a8:	mov	x19, x25
  4435ac:	add	x21, x21, x23
  4435b0:	ldp	x23, x24, [sp, #48]
  4435b4:	ldp	x25, x26, [sp, #64]
  4435b8:	ldr	x27, [sp, #80]
  4435bc:	b	44310c <_obstack_memory_used@@Base+0x1f70>
  4435c0:	lsl	x0, x0, #3
  4435c4:	bl	404310 <malloc@plt>
  4435c8:	str	x0, [x20, #24]
  4435cc:	cbnz	x0, 4434dc <_obstack_memory_used@@Base+0x2340>
  4435d0:	mov	w0, #0xc                   	// #12
  4435d4:	ldp	x23, x24, [sp, #48]
  4435d8:	ldp	x25, x26, [sp, #64]
  4435dc:	ldr	x27, [sp, #80]
  4435e0:	b	443120 <_obstack_memory_used@@Base+0x1f84>
  4435e4:	ldr	x0, [x20, #8]
  4435e8:	mov	x2, x23
  4435ec:	mov	x1, x25
  4435f0:	add	x0, x0, x19
  4435f4:	bl	403f70 <memcpy@plt>
  4435f8:	b	4433d0 <_obstack_memory_used@@Base+0x2234>
  4435fc:	ldr	x0, [x20, #8]
  443600:	mov	x2, x23
  443604:	mov	x1, x25
  443608:	add	x0, x0, x19
  44360c:	bl	403f70 <memcpy@plt>
  443610:	b	4433d0 <_obstack_memory_used@@Base+0x2234>
  443614:	lsl	x1, x19, #3
  443618:	mov	x0, x21
  44361c:	add	x3, x23, x21
  443620:	ldr	x2, [x20, #24]
  443624:	str	x0, [x2, x1]
  443628:	add	x1, x1, #0x8
  44362c:	add	x0, x0, #0x1
  443630:	cmp	x0, x3
  443634:	b.ne	443620 <_obstack_memory_used@@Base+0x2484>  // b.any
  443638:	b	4433d8 <_obstack_memory_used@@Base+0x223c>
  44363c:	cmn	x27, #0x3
  443640:	b.hi	443654 <_obstack_memory_used@@Base+0x24b8>  // b.pmore
  443644:	ldr	x1, [x20, #64]
  443648:	ldr	x0, [x20, #88]
  44364c:	cmp	x1, x0
  443650:	b.lt	4436d8 <_obstack_memory_used@@Base+0x253c>  // b.tstop
  443654:	ldr	x0, [x20]
  443658:	ldr	x1, [x20, #40]
  44365c:	add	x0, x0, x21
  443660:	ldrb	w0, [x0, x1]
  443664:	ldr	x1, [x20, #120]
  443668:	cbnz	x1, 4436a8 <_obstack_memory_used@@Base+0x250c>
  44366c:	mov	x2, x19
  443670:	ldr	x1, [x20, #8]
  443674:	strb	w0, [x1, x19]
  443678:	ldrb	w1, [x20, #140]
  44367c:	cbnz	w1, 4436b4 <_obstack_memory_used@@Base+0x2518>
  443680:	add	x21, x21, #0x1
  443684:	add	x19, x19, #0x1
  443688:	ldr	x1, [x20, #16]
  44368c:	str	w0, [x1, x2, lsl #2]
  443690:	cmn	x23, #0x1
  443694:	b.eq	4436c0 <_obstack_memory_used@@Base+0x2524>  // b.none
  443698:	ldp	x23, x24, [sp, #48]
  44369c:	ldp	x25, x26, [sp, #64]
  4436a0:	ldr	x27, [sp, #80]
  4436a4:	b	44310c <_obstack_memory_used@@Base+0x1f70>
  4436a8:	and	x0, x0, #0xff
  4436ac:	ldrb	w0, [x1, x0]
  4436b0:	b	44366c <_obstack_memory_used@@Base+0x24d0>
  4436b4:	ldr	x1, [x20, #24]
  4436b8:	str	x21, [x1, x19, lsl #3]
  4436bc:	b	443680 <_obstack_memory_used@@Base+0x24e4>
  4436c0:	ldr	x0, [sp, #168]
  4436c4:	str	x0, [x20, #32]
  4436c8:	ldp	x23, x24, [sp, #48]
  4436cc:	ldp	x25, x26, [sp, #64]
  4436d0:	ldr	x27, [sp, #80]
  4436d4:	b	44310c <_obstack_memory_used@@Base+0x1f70>
  4436d8:	ldr	x0, [sp, #168]
  4436dc:	str	x0, [x20, #32]
  4436e0:	ldp	x23, x24, [sp, #48]
  4436e4:	ldp	x25, x26, [sp, #64]
  4436e8:	ldr	x27, [sp, #80]
  4436ec:	b	443114 <_obstack_memory_used@@Base+0x1f78>
  4436f0:	mov	x19, x0
  4436f4:	ldp	x23, x24, [sp, #48]
  4436f8:	ldp	x25, x26, [sp, #64]
  4436fc:	ldr	x27, [sp, #80]
  443700:	b	44310c <_obstack_memory_used@@Base+0x1f70>
  443704:	stp	x29, x30, [sp, #-32]!
  443708:	mov	x29, sp
  44370c:	stp	x19, x20, [sp, #16]
  443710:	mov	x19, x0
  443714:	ldr	x0, [x0, #64]
  443718:	mov	x2, #0xffffffffffffffe     	// #1152921504606846974
  44371c:	cmp	x0, x2
  443720:	b.hi	4437d8 <_obstack_memory_used@@Base+0x263c>  // b.pmore
  443724:	lsl	x0, x0, #1
  443728:	ldr	x2, [x19, #88]
  44372c:	cmp	x0, x2
  443730:	csel	x0, x0, x2, le
  443734:	sxtw	x1, w1
  443738:	cmp	x0, x1
  44373c:	csel	x1, x0, x1, ge  // ge = tcont
  443740:	mov	x0, x19
  443744:	bl	441f28 <_obstack_memory_used@@Base+0xd8c>
  443748:	mov	w20, w0
  44374c:	cbnz	w0, 443790 <_obstack_memory_used@@Base+0x25f4>
  443750:	ldr	x0, [x19, #184]
  443754:	cbz	x0, 443770 <_obstack_memory_used@@Base+0x25d4>
  443758:	ldr	x1, [x19, #64]
  44375c:	add	x1, x1, #0x1
  443760:	lsl	x1, x1, #3
  443764:	bl	404540 <realloc@plt>
  443768:	cbz	x0, 4437e0 <_obstack_memory_used@@Base+0x2644>
  44376c:	str	x0, [x19, #184]
  443770:	ldrb	w0, [x19, #136]
  443774:	cbz	w0, 4437ac <_obstack_memory_used@@Base+0x2610>
  443778:	ldr	w0, [x19, #144]
  44377c:	cmp	w0, #0x1
  443780:	b.le	4437a0 <_obstack_memory_used@@Base+0x2604>
  443784:	mov	x0, x19
  443788:	bl	4430d0 <_obstack_memory_used@@Base+0x1f34>
  44378c:	mov	w20, w0
  443790:	mov	w0, w20
  443794:	ldp	x19, x20, [sp, #16]
  443798:	ldp	x29, x30, [sp], #32
  44379c:	ret
  4437a0:	mov	x0, x19
  4437a4:	bl	4428dc <_obstack_memory_used@@Base+0x1740>
  4437a8:	b	443790 <_obstack_memory_used@@Base+0x25f4>
  4437ac:	ldr	w0, [x19, #144]
  4437b0:	cmp	w0, #0x1
  4437b4:	b.gt	4437cc <_obstack_memory_used@@Base+0x2630>
  4437b8:	ldr	x0, [x19, #120]
  4437bc:	cbz	x0, 443790 <_obstack_memory_used@@Base+0x25f4>
  4437c0:	mov	x0, x19
  4437c4:	bl	44136c <_obstack_memory_used@@Base+0x1d0>
  4437c8:	b	443790 <_obstack_memory_used@@Base+0x25f4>
  4437cc:	mov	x0, x19
  4437d0:	bl	442974 <_obstack_memory_used@@Base+0x17d8>
  4437d4:	b	443790 <_obstack_memory_used@@Base+0x25f4>
  4437d8:	mov	w20, #0xc                   	// #12
  4437dc:	b	443790 <_obstack_memory_used@@Base+0x25f4>
  4437e0:	mov	w20, #0xc                   	// #12
  4437e4:	b	443790 <_obstack_memory_used@@Base+0x25f4>
  4437e8:	stp	x29, x30, [sp, #-48]!
  4437ec:	mov	x29, sp
  4437f0:	stp	x19, x20, [sp, #16]
  4437f4:	str	x21, [sp, #32]
  4437f8:	mov	x19, x0
  4437fc:	mov	x20, x1
  443800:	ldr	x21, [x0, #192]
  443804:	ldr	x0, [x0, #64]
  443808:	cmp	x0, x1
  44380c:	b.gt	44381c <_obstack_memory_used@@Base+0x2680>
  443810:	ldr	x1, [x19, #88]
  443814:	cmp	x0, x1
  443818:	b.lt	443834 <_obstack_memory_used@@Base+0x2698>  // b.tstop
  44381c:	ldr	x0, [x19, #48]
  443820:	cmp	x0, x20
  443824:	b.gt	443844 <_obstack_memory_used@@Base+0x26a8>
  443828:	ldr	x1, [x19, #88]
  44382c:	cmp	x0, x1
  443830:	b.ge	443844 <_obstack_memory_used@@Base+0x26a8>  // b.tcont
  443834:	add	w1, w20, #0x1
  443838:	mov	x0, x19
  44383c:	bl	443704 <_obstack_memory_used@@Base+0x2568>
  443840:	cbnz	w0, 443850 <_obstack_memory_used@@Base+0x26b4>
  443844:	mov	w0, #0x0                   	// #0
  443848:	cmp	x21, x20
  44384c:	b.lt	443860 <_obstack_memory_used@@Base+0x26c4>  // b.tstop
  443850:	ldp	x19, x20, [sp, #16]
  443854:	ldr	x21, [sp, #32]
  443858:	ldp	x29, x30, [sp], #48
  44385c:	ret
  443860:	sub	x2, x20, x21
  443864:	add	x21, x21, #0x1
  443868:	ldr	x0, [x19, #184]
  44386c:	lsl	x2, x2, #3
  443870:	mov	w1, #0x0                   	// #0
  443874:	add	x0, x0, x21, lsl #3
  443878:	bl	404420 <memset@plt>
  44387c:	str	x20, [x19, #192]
  443880:	mov	w0, #0x0                   	// #0
  443884:	b	443850 <_obstack_memory_used@@Base+0x26b4>
  443888:	stp	x29, x30, [sp, #-32]!
  44388c:	mov	x29, sp
  443890:	stp	x19, x20, [sp, #16]
  443894:	mov	x20, x0
  443898:	tbnz	x1, #63, 4438e0 <_obstack_memory_used@@Base+0x2744>
  44389c:	ldr	x0, [x0, #88]
  4438a0:	cmp	x0, x1
  4438a4:	b.eq	4438e8 <_obstack_memory_used@@Base+0x274c>  // b.none
  4438a8:	ldr	w0, [x20, #144]
  4438ac:	cmp	w0, #0x1
  4438b0:	b.le	443944 <_obstack_memory_used@@Base+0x27a8>
  4438b4:	ldr	x0, [x20, #16]
  4438b8:	ldr	w19, [x0, x1, lsl #2]
  4438bc:	cmn	w19, #0x1
  4438c0:	b.ne	4438fc <_obstack_memory_used@@Base+0x2760>  // b.any
  4438c4:	sub	x1, x1, #0x1
  4438c8:	cmn	x1, #0x1
  4438cc:	b.ne	4438b8 <_obstack_memory_used@@Base+0x271c>  // b.any
  4438d0:	ldr	w0, [x20, #112]
  4438d4:	ldp	x19, x20, [sp, #16]
  4438d8:	ldp	x29, x30, [sp], #32
  4438dc:	ret
  4438e0:	ldr	w0, [x0, #112]
  4438e4:	b	4438d4 <_obstack_memory_used@@Base+0x2738>
  4438e8:	tst	x2, #0x2
  4438ec:	mov	w0, #0x8                   	// #8
  4438f0:	mov	w1, #0xa                   	// #10
  4438f4:	csel	w0, w0, w1, ne  // ne = any
  4438f8:	b	4438d4 <_obstack_memory_used@@Base+0x2738>
  4438fc:	ldrb	w0, [x20, #142]
  443900:	cbnz	w0, 443924 <_obstack_memory_used@@Base+0x2788>
  443904:	mov	w0, #0x0                   	// #0
  443908:	cmp	w19, #0xa
  44390c:	b.ne	4438d4 <_obstack_memory_used@@Base+0x2738>  // b.any
  443910:	ldrb	w0, [x20, #141]
  443914:	cmp	w0, #0x0
  443918:	cset	w0, ne  // ne = any
  44391c:	lsl	w0, w0, #1
  443920:	b	4438d4 <_obstack_memory_used@@Base+0x2738>
  443924:	mov	w0, w19
  443928:	bl	404990 <iswalnum@plt>
  44392c:	mov	w1, w0
  443930:	cmp	w19, #0x5f
  443934:	mov	w0, #0x1                   	// #1
  443938:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  44393c:	b.ne	4438d4 <_obstack_memory_used@@Base+0x2738>  // b.any
  443940:	b	443904 <_obstack_memory_used@@Base+0x2768>
  443944:	ldr	x0, [x20, #8]
  443948:	ldrb	w2, [x0, x1]
  44394c:	ubfx	x1, x2, #6, #2
  443950:	ldr	x0, [x20, #128]
  443954:	ldr	x1, [x0, x1, lsl #3]
  443958:	lsr	x1, x1, x2
  44395c:	mov	w0, #0x1                   	// #1
  443960:	tbnz	w1, #0, 4438d4 <_obstack_memory_used@@Base+0x2738>
  443964:	mov	w0, #0x0                   	// #0
  443968:	cmp	w2, #0xa
  44396c:	b.ne	4438d4 <_obstack_memory_used@@Base+0x2738>  // b.any
  443970:	ldrb	w0, [x20, #141]
  443974:	cmp	w0, #0x0
  443978:	cset	w0, ne  // ne = any
  44397c:	lsl	w0, w0, #1
  443980:	b	4438d4 <_obstack_memory_used@@Base+0x2738>
  443984:	stp	x29, x30, [sp, #-32]!
  443988:	mov	x29, sp
  44398c:	str	x19, [sp, #16]
  443990:	mov	x4, x0
  443994:	mov	x19, x1
  443998:	mov	x1, x2
  44399c:	ldr	x0, [x0, #8]
  4439a0:	ldrb	w2, [x0, x2]
  4439a4:	ldrb	w3, [x19, #8]
  4439a8:	cmp	w3, #0x5
  4439ac:	b.eq	443a34 <_obstack_memory_used@@Base+0x2898>  // b.none
  4439b0:	b.hi	443a20 <_obstack_memory_used@@Base+0x2884>  // b.pmore
  4439b4:	cmp	w3, #0x1
  4439b8:	b.eq	443a54 <_obstack_memory_used@@Base+0x28b8>  // b.none
  4439bc:	mov	w0, #0x0                   	// #0
  4439c0:	cmp	w3, #0x3
  4439c4:	b.ne	443a9c <_obstack_memory_used@@Base+0x2900>  // b.any
  4439c8:	ubfx	x3, x2, #6, #2
  4439cc:	ldr	x0, [x19]
  4439d0:	ldr	x0, [x0, x3, lsl #3]
  4439d4:	lsr	x2, x0, x2
  4439d8:	mov	w0, #0x0                   	// #0
  4439dc:	tbz	w2, #0, 443a9c <_obstack_memory_used@@Base+0x2900>
  4439e0:	ldr	w2, [x19, #8]
  4439e4:	mov	w0, #0x1                   	// #1
  4439e8:	tst	w2, #0x3ff00
  4439ec:	b.eq	443a9c <_obstack_memory_used@@Base+0x2900>  // b.none
  4439f0:	ldr	w2, [x4, #160]
  4439f4:	mov	x0, x4
  4439f8:	bl	443888 <_obstack_memory_used@@Base+0x26ec>
  4439fc:	mov	w1, w0
  443a00:	ldr	w0, [x19, #8]
  443a04:	ubfx	x2, x0, #8, #10
  443a08:	tbz	w0, #10, 443a7c <_obstack_memory_used@@Base+0x28e0>
  443a0c:	mov	w0, #0x0                   	// #0
  443a10:	tbz	w1, #0, 443a9c <_obstack_memory_used@@Base+0x2900>
  443a14:	mov	w0, #0x0                   	// #0
  443a18:	tbz	w2, #3, 443a84 <_obstack_memory_used@@Base+0x28e8>
  443a1c:	b	443a9c <_obstack_memory_used@@Base+0x2900>
  443a20:	mov	w0, #0x0                   	// #0
  443a24:	cmp	w3, #0x7
  443a28:	b.ne	443a9c <_obstack_memory_used@@Base+0x2900>  // b.any
  443a2c:	mov	w0, #0x0                   	// #0
  443a30:	tbnz	w2, #7, 443a9c <_obstack_memory_used@@Base+0x2900>
  443a34:	cmp	w2, #0xa
  443a38:	b.eq	443a68 <_obstack_memory_used@@Base+0x28cc>  // b.none
  443a3c:	cbnz	w2, 4439e0 <_obstack_memory_used@@Base+0x2844>
  443a40:	ldr	x0, [x4, #152]
  443a44:	ldr	x2, [x0, #216]
  443a48:	mov	w0, #0x0                   	// #0
  443a4c:	tbz	w2, #7, 4439e0 <_obstack_memory_used@@Base+0x2844>
  443a50:	b	443a9c <_obstack_memory_used@@Base+0x2900>
  443a54:	ldrb	w3, [x19]
  443a58:	mov	w0, #0x0                   	// #0
  443a5c:	cmp	w3, w2
  443a60:	b.ne	443a9c <_obstack_memory_used@@Base+0x2900>  // b.any
  443a64:	b	4439e0 <_obstack_memory_used@@Base+0x2844>
  443a68:	ldr	x0, [x4, #152]
  443a6c:	ldr	x2, [x0, #216]
  443a70:	mov	w0, #0x0                   	// #0
  443a74:	tbnz	w2, #6, 4439e0 <_obstack_memory_used@@Base+0x2844>
  443a78:	b	443a9c <_obstack_memory_used@@Base+0x2900>
  443a7c:	tbz	w2, #3, 443a84 <_obstack_memory_used@@Base+0x28e8>
  443a80:	tbnz	w1, #0, 443aa8 <_obstack_memory_used@@Base+0x290c>
  443a84:	tbz	w2, #5, 443a90 <_obstack_memory_used@@Base+0x28f4>
  443a88:	mov	w0, #0x0                   	// #0
  443a8c:	tbz	w1, #1, 443a9c <_obstack_memory_used@@Base+0x2900>
  443a90:	ubfx	x0, x1, #3, #1
  443a94:	tst	x2, #0x80
  443a98:	csinc	w0, w0, wzr, ne  // ne = any
  443a9c:	ldr	x19, [sp, #16]
  443aa0:	ldp	x29, x30, [sp], #32
  443aa4:	ret
  443aa8:	mov	w0, #0x0                   	// #0
  443aac:	b	443a9c <_obstack_memory_used@@Base+0x2900>
  443ab0:	stp	x29, x30, [sp, #-32]!
  443ab4:	mov	x29, sp
  443ab8:	stp	x19, x20, [sp, #16]
  443abc:	mov	x19, x0
  443ac0:	mov	x20, x1
  443ac4:	mov	x1, x2
  443ac8:	ldr	w2, [x0, #160]
  443acc:	bl	443888 <_obstack_memory_used@@Base+0x26ec>
  443ad0:	ldr	x4, [x20, #16]
  443ad4:	cmp	x4, #0x0
  443ad8:	b.le	443b20 <_obstack_memory_used@@Base+0x2984>
  443adc:	ldr	x6, [x20, #24]
  443ae0:	ldr	x1, [x19, #152]
  443ae4:	ldr	x5, [x1]
  443ae8:	mov	x2, #0x0                   	// #0
  443aec:	and	w9, w0, #0x8
  443af0:	and	w8, w0, #0x2
  443af4:	and	w7, w0, #0x1
  443af8:	b	443b34 <_obstack_memory_used@@Base+0x2998>
  443afc:	tbz	w1, #3, 443b04 <_obstack_memory_used@@Base+0x2968>
  443b00:	cbnz	w7, 443b28 <_obstack_memory_used@@Base+0x298c>
  443b04:	tbz	w1, #5, 443b0c <_obstack_memory_used@@Base+0x2970>
  443b08:	cbz	w8, 443b28 <_obstack_memory_used@@Base+0x298c>
  443b0c:	tbz	w1, #7, 443b14 <_obstack_memory_used@@Base+0x2978>
  443b10:	cbz	w9, 443b28 <_obstack_memory_used@@Base+0x298c>
  443b14:	ldp	x19, x20, [sp, #16]
  443b18:	ldp	x29, x30, [sp], #32
  443b1c:	ret
  443b20:	mov	x0, #0x0                   	// #0
  443b24:	b	443b14 <_obstack_memory_used@@Base+0x2978>
  443b28:	add	x2, x2, #0x1
  443b2c:	cmp	x4, x2
  443b30:	b.eq	443b64 <_obstack_memory_used@@Base+0x29c8>  // b.none
  443b34:	ldr	x0, [x6, x2, lsl #3]
  443b38:	add	x3, x5, x0, lsl #4
  443b3c:	ldr	w1, [x3, #8]
  443b40:	ubfx	x1, x1, #8, #10
  443b44:	ldrb	w3, [x3, #8]
  443b48:	cmp	w3, #0x2
  443b4c:	b.ne	443b28 <_obstack_memory_used@@Base+0x298c>  // b.any
  443b50:	cbz	w1, 443b14 <_obstack_memory_used@@Base+0x2978>
  443b54:	tbz	w1, #2, 443afc <_obstack_memory_used@@Base+0x2960>
  443b58:	cbz	w7, 443b28 <_obstack_memory_used@@Base+0x298c>
  443b5c:	tbz	w1, #3, 443b04 <_obstack_memory_used@@Base+0x2968>
  443b60:	b	443b28 <_obstack_memory_used@@Base+0x298c>
  443b64:	mov	x0, #0x0                   	// #0
  443b68:	b	443b14 <_obstack_memory_used@@Base+0x2978>
  443b6c:	stp	x29, x30, [sp, #-80]!
  443b70:	mov	x29, sp
  443b74:	stp	x19, x20, [sp, #16]
  443b78:	stp	x21, x22, [sp, #32]
  443b7c:	mov	x21, x0
  443b80:	mov	x19, x1
  443b84:	ldr	x1, [x1, #72]
  443b88:	ldr	x3, [x19, #104]
  443b8c:	cmp	x3, x1
  443b90:	b.le	443c78 <_obstack_memory_used@@Base+0x2adc>
  443b94:	mov	x22, x2
  443b98:	ldr	x0, [x19, #8]
  443b9c:	ldrb	w20, [x0, x1]
  443ba0:	strb	w20, [x21]
  443ba4:	ldrb	w1, [x21, #10]
  443ba8:	and	w1, w1, #0xffffff9f
  443bac:	strb	w1, [x21, #10]
  443bb0:	ldr	w0, [x19, #144]
  443bb4:	cmp	w0, #0x1
  443bb8:	b.le	443bdc <_obstack_memory_used@@Base+0x2a40>
  443bbc:	ldr	x1, [x19, #72]
  443bc0:	ldr	x2, [x19, #48]
  443bc4:	cmp	x1, x2
  443bc8:	b.eq	443bdc <_obstack_memory_used@@Base+0x2a40>  // b.none
  443bcc:	ldr	x2, [x19, #16]
  443bd0:	ldr	w1, [x2, x1, lsl #2]
  443bd4:	cmn	w1, #0x1
  443bd8:	b.eq	443c94 <_obstack_memory_used@@Base+0x2af8>  // b.none
  443bdc:	cmp	w20, #0x5c
  443be0:	b.eq	443cb0 <_obstack_memory_used@@Base+0x2b14>  // b.none
  443be4:	mov	w0, #0x1                   	// #1
  443be8:	strb	w0, [x21, #8]
  443bec:	ldr	w0, [x19, #144]
  443bf0:	cmp	w0, #0x1
  443bf4:	b.le	444020 <_obstack_memory_used@@Base+0x2e84>
  443bf8:	str	x23, [sp, #48]
  443bfc:	ldr	x1, [x19, #72]
  443c00:	mov	x0, x19
  443c04:	bl	441348 <_obstack_memory_used@@Base+0x1ac>
  443c08:	mov	w23, w0
  443c0c:	bl	404990 <iswalnum@plt>
  443c10:	cmp	w23, #0x5f
  443c14:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  443c18:	cset	w1, ne  // ne = any
  443c1c:	ldrb	w0, [x21, #10]
  443c20:	bfi	w0, w1, #6, #1
  443c24:	strb	w0, [x21, #10]
  443c28:	ldr	x23, [sp, #48]
  443c2c:	cmp	w20, #0x2e
  443c30:	b.eq	4441dc <_obstack_memory_used@@Base+0x3040>  // b.none
  443c34:	b.ls	444050 <_obstack_memory_used@@Base+0x2eb4>  // b.plast
  443c38:	cmp	w20, #0x7b
  443c3c:	b.eq	444194 <_obstack_memory_used@@Base+0x2ff8>  // b.none
  443c40:	b.ls	4440dc <_obstack_memory_used@@Base+0x2f40>  // b.plast
  443c44:	cmp	w20, #0x7c
  443c48:	b.eq	444160 <_obstack_memory_used@@Base+0x2fc4>  // b.none
  443c4c:	mov	w0, #0x1                   	// #1
  443c50:	cmp	w20, #0x7d
  443c54:	b.ne	443c84 <_obstack_memory_used@@Base+0x2ae8>  // b.any
  443c58:	mov	w0, #0x1                   	// #1
  443c5c:	mov	x1, #0x1200                	// #4608
  443c60:	bics	xzr, x1, x22
  443c64:	b.ne	443c84 <_obstack_memory_used@@Base+0x2ae8>  // b.any
  443c68:	mov	w0, #0x18                  	// #24
  443c6c:	strb	w0, [x21, #8]
  443c70:	mov	w0, #0x1                   	// #1
  443c74:	b	443c84 <_obstack_memory_used@@Base+0x2ae8>
  443c78:	mov	w0, #0x2                   	// #2
  443c7c:	strb	w0, [x21, #8]
  443c80:	mov	w0, #0x0                   	// #0
  443c84:	ldp	x19, x20, [sp, #16]
  443c88:	ldp	x21, x22, [sp, #32]
  443c8c:	ldp	x29, x30, [sp], #80
  443c90:	ret
  443c94:	mov	w0, #0x1                   	// #1
  443c98:	strb	w0, [x21, #8]
  443c9c:	ldrb	w0, [x21, #10]
  443ca0:	orr	w0, w0, #0x20
  443ca4:	strb	w0, [x21, #10]
  443ca8:	mov	w0, #0x1                   	// #1
  443cac:	b	443c84 <_obstack_memory_used@@Base+0x2ae8>
  443cb0:	ldr	x2, [x19, #72]
  443cb4:	add	x1, x2, #0x1
  443cb8:	ldr	x3, [x19, #88]
  443cbc:	cmp	x1, x3
  443cc0:	b.lt	443cd4 <_obstack_memory_used@@Base+0x2b38>  // b.tstop
  443cc4:	mov	w0, #0x24                  	// #36
  443cc8:	strb	w0, [x21, #8]
  443ccc:	mov	w0, #0x1                   	// #1
  443cd0:	b	443c84 <_obstack_memory_used@@Base+0x2ae8>
  443cd4:	ldrb	w3, [x19, #139]
  443cd8:	cbnz	w3, 443d50 <_obstack_memory_used@@Base+0x2bb4>
  443cdc:	ldr	x0, [x19, #8]
  443ce0:	ldrb	w20, [x0, x1]
  443ce4:	strb	w20, [x21]
  443ce8:	mov	w0, #0x1                   	// #1
  443cec:	strb	w0, [x21, #8]
  443cf0:	ldr	w0, [x19, #144]
  443cf4:	cmp	w0, #0x1
  443cf8:	b.le	443dcc <_obstack_memory_used@@Base+0x2c30>
  443cfc:	ldr	x1, [x19, #72]
  443d00:	add	x1, x1, #0x1
  443d04:	mov	x0, x19
  443d08:	bl	441348 <_obstack_memory_used@@Base+0x1ac>
  443d0c:	mov	w19, w0
  443d10:	bl	404990 <iswalnum@plt>
  443d14:	cmp	w19, #0x5f
  443d18:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  443d1c:	cset	w1, ne  // ne = any
  443d20:	ldrb	w0, [x21, #10]
  443d24:	bfi	w0, w1, #6, #1
  443d28:	strb	w0, [x21, #10]
  443d2c:	sub	w0, w20, #0x27
  443d30:	cmp	w0, #0x56
  443d34:	b.hi	444258 <_obstack_memory_used@@Base+0x30bc>  // b.pmore
  443d38:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  443d3c:	add	x1, x1, #0x38
  443d40:	ldrh	w0, [x1, w0, uxtw #1]
  443d44:	adr	x1, 443d50 <_obstack_memory_used@@Base+0x2bb4>
  443d48:	add	x0, x1, w0, sxth #2
  443d4c:	br	x0
  443d50:	cmp	w0, #0x1
  443d54:	b.le	443d8c <_obstack_memory_used@@Base+0x2bf0>
  443d58:	ldr	x0, [x19, #16]
  443d5c:	lsl	x4, x1, #2
  443d60:	ldr	w3, [x0, x1, lsl #2]
  443d64:	cmn	w3, #0x1
  443d68:	b.eq	443dc0 <_obstack_memory_used@@Base+0x2c24>  // b.none
  443d6c:	add	x2, x2, #0x2
  443d70:	ldr	x3, [x19, #48]
  443d74:	cmp	x3, x2
  443d78:	b.eq	443d8c <_obstack_memory_used@@Base+0x2bf0>  // b.none
  443d7c:	add	x0, x0, x4
  443d80:	ldr	w0, [x0, #4]
  443d84:	cmn	w0, #0x1
  443d88:	b.eq	443dc0 <_obstack_memory_used@@Base+0x2c24>  // b.none
  443d8c:	ldrb	w0, [x19, #140]
  443d90:	cbz	w0, 444260 <_obstack_memory_used@@Base+0x30c4>
  443d94:	ldr	x2, [x19, #24]
  443d98:	ldr	x0, [x19]
  443d9c:	ldr	x3, [x2, x1, lsl #3]
  443da0:	ldr	x2, [x19, #40]
  443da4:	add	x0, x0, x3
  443da8:	ldrb	w20, [x0, x2]
  443dac:	tst	w20, #0xffffff80
  443db0:	b.eq	443ce4 <_obstack_memory_used@@Base+0x2b48>  // b.none
  443db4:	ldr	x0, [x19, #8]
  443db8:	ldrb	w20, [x0, x1]
  443dbc:	b	443ce4 <_obstack_memory_used@@Base+0x2b48>
  443dc0:	ldr	x0, [x19, #8]
  443dc4:	ldrb	w20, [x0, x1]
  443dc8:	b	443ce4 <_obstack_memory_used@@Base+0x2b48>
  443dcc:	bl	404750 <__ctype_b_loc@plt>
  443dd0:	and	x1, x20, #0xff
  443dd4:	ldr	x0, [x0]
  443dd8:	ldrh	w0, [x0, x1, lsl #1]
  443ddc:	and	w0, w0, #0x8
  443de0:	cmp	w20, #0x5f
  443de4:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  443de8:	cset	w1, ne  // ne = any
  443dec:	ldrb	w0, [x21, #10]
  443df0:	bfi	w0, w1, #6, #1
  443df4:	strb	w0, [x21, #10]
  443df8:	b	443d2c <_obstack_memory_used@@Base+0x2b90>
  443dfc:	mov	w0, #0x2                   	// #2
  443e00:	mov	x1, #0x8400                	// #33792
  443e04:	tst	x22, x1
  443e08:	b.ne	443c84 <_obstack_memory_used@@Base+0x2ae8>  // b.any
  443e0c:	mov	w0, #0xa                   	// #10
  443e10:	strb	w0, [x21, #8]
  443e14:	mov	w0, #0x2                   	// #2
  443e18:	b	443c84 <_obstack_memory_used@@Base+0x2ae8>
  443e1c:	mov	w0, #0x2                   	// #2
  443e20:	tbnz	w22, #14, 443c84 <_obstack_memory_used@@Base+0x2ae8>
  443e24:	mov	w0, #0x4                   	// #4
  443e28:	strb	w0, [x21, #8]
  443e2c:	sub	w0, w20, #0x31
  443e30:	sxtw	x0, w0
  443e34:	str	x0, [x21]
  443e38:	mov	w0, #0x2                   	// #2
  443e3c:	b	443c84 <_obstack_memory_used@@Base+0x2ae8>
  443e40:	mov	w0, #0x2                   	// #2
  443e44:	tbnz	w22, #19, 443c84 <_obstack_memory_used@@Base+0x2ae8>
  443e48:	mov	w0, #0xc                   	// #12
  443e4c:	strb	w0, [x21, #8]
  443e50:	mov	w0, #0x6                   	// #6
  443e54:	str	w0, [x21]
  443e58:	mov	w0, #0x2                   	// #2
  443e5c:	b	443c84 <_obstack_memory_used@@Base+0x2ae8>
  443e60:	mov	w0, #0x2                   	// #2
  443e64:	tbnz	w22, #19, 443c84 <_obstack_memory_used@@Base+0x2ae8>
  443e68:	mov	w0, #0xc                   	// #12
  443e6c:	strb	w0, [x21, #8]
  443e70:	mov	w0, #0x9                   	// #9
  443e74:	str	w0, [x21]
  443e78:	mov	w0, #0x2                   	// #2
  443e7c:	b	443c84 <_obstack_memory_used@@Base+0x2ae8>
  443e80:	mov	w0, #0x2                   	// #2
  443e84:	tbnz	w22, #19, 443c84 <_obstack_memory_used@@Base+0x2ae8>
  443e88:	mov	w0, #0xc                   	// #12
  443e8c:	strb	w0, [x21, #8]
  443e90:	mov	w0, #0x100                 	// #256
  443e94:	str	w0, [x21]
  443e98:	mov	w0, #0x2                   	// #2
  443e9c:	b	443c84 <_obstack_memory_used@@Base+0x2ae8>
  443ea0:	mov	w0, #0x2                   	// #2
  443ea4:	tbnz	w22, #19, 443c84 <_obstack_memory_used@@Base+0x2ae8>
  443ea8:	mov	w0, #0xc                   	// #12
  443eac:	strb	w0, [x21, #8]
  443eb0:	mov	w0, #0x200                 	// #512
  443eb4:	str	w0, [x21]
  443eb8:	mov	w0, #0x2                   	// #2
  443ebc:	b	443c84 <_obstack_memory_used@@Base+0x2ae8>
  443ec0:	mov	w0, #0x2                   	// #2
  443ec4:	tbnz	w22, #19, 443c84 <_obstack_memory_used@@Base+0x2ae8>
  443ec8:	mov	w0, #0x20                  	// #32
  443ecc:	strb	w0, [x21, #8]
  443ed0:	mov	w0, #0x2                   	// #2
  443ed4:	b	443c84 <_obstack_memory_used@@Base+0x2ae8>
  443ed8:	mov	w0, #0x2                   	// #2
  443edc:	tbnz	w22, #19, 443c84 <_obstack_memory_used@@Base+0x2ae8>
  443ee0:	mov	w0, #0x21                  	// #33
  443ee4:	strb	w0, [x21, #8]
  443ee8:	mov	w0, #0x2                   	// #2
  443eec:	b	443c84 <_obstack_memory_used@@Base+0x2ae8>
  443ef0:	mov	w0, #0x2                   	// #2
  443ef4:	tbnz	w22, #19, 443c84 <_obstack_memory_used@@Base+0x2ae8>
  443ef8:	mov	w0, #0x22                  	// #34
  443efc:	strb	w0, [x21, #8]
  443f00:	mov	w0, #0x2                   	// #2
  443f04:	b	443c84 <_obstack_memory_used@@Base+0x2ae8>
  443f08:	mov	w0, #0x2                   	// #2
  443f0c:	tbnz	w22, #19, 443c84 <_obstack_memory_used@@Base+0x2ae8>
  443f10:	mov	w0, #0x23                  	// #35
  443f14:	strb	w0, [x21, #8]
  443f18:	mov	w0, #0x2                   	// #2
  443f1c:	b	443c84 <_obstack_memory_used@@Base+0x2ae8>
  443f20:	mov	w0, #0x2                   	// #2
  443f24:	tbnz	w22, #19, 443c84 <_obstack_memory_used@@Base+0x2ae8>
  443f28:	mov	w0, #0xc                   	// #12
  443f2c:	strb	w0, [x21, #8]
  443f30:	mov	w0, #0x40                  	// #64
  443f34:	str	w0, [x21]
  443f38:	mov	w0, #0x2                   	// #2
  443f3c:	b	443c84 <_obstack_memory_used@@Base+0x2ae8>
  443f40:	mov	w0, #0x2                   	// #2
  443f44:	tbnz	w22, #19, 443c84 <_obstack_memory_used@@Base+0x2ae8>
  443f48:	mov	w0, #0xc                   	// #12
  443f4c:	strb	w0, [x21, #8]
  443f50:	mov	w0, #0x80                  	// #128
  443f54:	str	w0, [x21]
  443f58:	mov	w0, #0x2                   	// #2
  443f5c:	b	443c84 <_obstack_memory_used@@Base+0x2ae8>
  443f60:	mov	w0, #0x2                   	// #2
  443f64:	tbnz	w22, #13, 443c84 <_obstack_memory_used@@Base+0x2ae8>
  443f68:	mov	w0, #0x8                   	// #8
  443f6c:	strb	w0, [x21, #8]
  443f70:	mov	w0, #0x2                   	// #2
  443f74:	b	443c84 <_obstack_memory_used@@Base+0x2ae8>
  443f78:	mov	w0, #0x2                   	// #2
  443f7c:	tbnz	w22, #13, 443c84 <_obstack_memory_used@@Base+0x2ae8>
  443f80:	mov	w0, #0x9                   	// #9
  443f84:	strb	w0, [x21, #8]
  443f88:	mov	w0, #0x2                   	// #2
  443f8c:	b	443c84 <_obstack_memory_used@@Base+0x2ae8>
  443f90:	mov	x2, #0x402                 	// #1026
  443f94:	and	x2, x22, x2
  443f98:	mov	w0, #0x2                   	// #2
  443f9c:	cmp	x2, #0x2
  443fa0:	b.ne	443c84 <_obstack_memory_used@@Base+0x2ae8>  // b.any
  443fa4:	mov	w0, #0x12                  	// #18
  443fa8:	strb	w0, [x21, #8]
  443fac:	mov	w0, #0x2                   	// #2
  443fb0:	b	443c84 <_obstack_memory_used@@Base+0x2ae8>
  443fb4:	mov	x2, #0x402                 	// #1026
  443fb8:	and	x2, x22, x2
  443fbc:	mov	w0, #0x2                   	// #2
  443fc0:	cmp	x2, #0x2
  443fc4:	b.ne	443c84 <_obstack_memory_used@@Base+0x2ae8>  // b.any
  443fc8:	mov	w0, #0x13                  	// #19
  443fcc:	strb	w0, [x21, #8]
  443fd0:	mov	w0, #0x2                   	// #2
  443fd4:	b	443c84 <_obstack_memory_used@@Base+0x2ae8>
  443fd8:	mov	x2, #0x1200                	// #4608
  443fdc:	and	x2, x22, x2
  443fe0:	mov	w0, #0x2                   	// #2
  443fe4:	cmp	x2, #0x200
  443fe8:	b.ne	443c84 <_obstack_memory_used@@Base+0x2ae8>  // b.any
  443fec:	mov	w0, #0x17                  	// #23
  443ff0:	strb	w0, [x21, #8]
  443ff4:	mov	w0, #0x2                   	// #2
  443ff8:	b	443c84 <_obstack_memory_used@@Base+0x2ae8>
  443ffc:	mov	x2, #0x1200                	// #4608
  444000:	and	x2, x22, x2
  444004:	mov	w0, #0x2                   	// #2
  444008:	cmp	x2, #0x200
  44400c:	b.ne	443c84 <_obstack_memory_used@@Base+0x2ae8>  // b.any
  444010:	mov	w0, #0x18                  	// #24
  444014:	strb	w0, [x21, #8]
  444018:	mov	w0, #0x2                   	// #2
  44401c:	b	443c84 <_obstack_memory_used@@Base+0x2ae8>
  444020:	bl	404750 <__ctype_b_loc@plt>
  444024:	and	x1, x20, #0xff
  444028:	ldr	x0, [x0]
  44402c:	ldrh	w0, [x0, x1, lsl #1]
  444030:	and	w0, w0, #0x8
  444034:	cmp	w20, #0x5f
  444038:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  44403c:	cset	w1, ne  // ne = any
  444040:	ldrb	w0, [x21, #10]
  444044:	bfi	w0, w1, #6, #1
  444048:	strb	w0, [x21, #10]
  44404c:	b	443c2c <_obstack_memory_used@@Base+0x2a90>
  444050:	cmp	w20, #0x29
  444054:	b.eq	4441b4 <_obstack_memory_used@@Base+0x3018>  // b.none
  444058:	b.ls	444090 <_obstack_memory_used@@Base+0x2ef4>  // b.plast
  44405c:	cmp	w20, #0x2a
  444060:	b.eq	444184 <_obstack_memory_used@@Base+0x2fe8>  // b.none
  444064:	mov	w0, #0x1                   	// #1
  444068:	cmp	w20, #0x2b
  44406c:	b.ne	443c84 <_obstack_memory_used@@Base+0x2ae8>  // b.any
  444070:	mov	w0, #0x1                   	// #1
  444074:	mov	x1, #0x402                 	// #1026
  444078:	tst	x22, x1
  44407c:	b.ne	443c84 <_obstack_memory_used@@Base+0x2ae8>  // b.any
  444080:	mov	w0, #0x12                  	// #18
  444084:	strb	w0, [x21, #8]
  444088:	mov	w0, #0x1                   	// #1
  44408c:	b	443c84 <_obstack_memory_used@@Base+0x2ae8>
  444090:	cmp	w20, #0x24
  444094:	b.eq	4441ec <_obstack_memory_used@@Base+0x3050>  // b.none
  444098:	cmp	w20, #0x28
  44409c:	b.ne	4440b8 <_obstack_memory_used@@Base+0x2f1c>  // b.any
  4440a0:	mov	w0, #0x1                   	// #1
  4440a4:	tbz	w22, #13, 443c84 <_obstack_memory_used@@Base+0x2ae8>
  4440a8:	mov	w0, #0x8                   	// #8
  4440ac:	strb	w0, [x21, #8]
  4440b0:	mov	w0, #0x1                   	// #1
  4440b4:	b	443c84 <_obstack_memory_used@@Base+0x2ae8>
  4440b8:	mov	w0, #0x1                   	// #1
  4440bc:	cmp	w20, #0xa
  4440c0:	b.ne	443c84 <_obstack_memory_used@@Base+0x2ae8>  // b.any
  4440c4:	mov	w0, #0x1                   	// #1
  4440c8:	tbz	w22, #11, 443c84 <_obstack_memory_used@@Base+0x2ae8>
  4440cc:	mov	w0, #0xa                   	// #10
  4440d0:	strb	w0, [x21, #8]
  4440d4:	mov	w0, #0x1                   	// #1
  4440d8:	b	443c84 <_obstack_memory_used@@Base+0x2ae8>
  4440dc:	cmp	w20, #0x5b
  4440e0:	b.eq	4441cc <_obstack_memory_used@@Base+0x3030>  // b.none
  4440e4:	cmp	w20, #0x5e
  4440e8:	b.ne	444134 <_obstack_memory_used@@Base+0x2f98>  // b.any
  4440ec:	and	x0, x22, #0xfffff8
  4440f0:	and	x0, x0, #0xffffffffff80000f
  4440f4:	cbnz	x0, 44411c <_obstack_memory_used@@Base+0x2f80>
  4440f8:	ldr	x0, [x19, #72]
  4440fc:	cbz	x0, 44411c <_obstack_memory_used@@Base+0x2f80>
  444100:	ldr	x1, [x19, #8]
  444104:	add	x0, x1, x0
  444108:	ldurb	w1, [x0, #-1]
  44410c:	tst	x22, #0x800
  444110:	mov	w0, #0x1                   	// #1
  444114:	ccmp	w1, #0xa, #0x0, ne  // ne = any
  444118:	b.ne	443c84 <_obstack_memory_used@@Base+0x2ae8>  // b.any
  44411c:	mov	w0, #0xc                   	// #12
  444120:	strb	w0, [x21, #8]
  444124:	mov	w0, #0x10                  	// #16
  444128:	str	w0, [x21]
  44412c:	mov	w0, #0x1                   	// #1
  444130:	b	443c84 <_obstack_memory_used@@Base+0x2ae8>
  444134:	mov	w0, #0x1                   	// #1
  444138:	cmp	w20, #0x3f
  44413c:	b.ne	443c84 <_obstack_memory_used@@Base+0x2ae8>  // b.any
  444140:	mov	w0, #0x1                   	// #1
  444144:	mov	x1, #0x402                 	// #1026
  444148:	tst	x22, x1
  44414c:	b.ne	443c84 <_obstack_memory_used@@Base+0x2ae8>  // b.any
  444150:	mov	w0, #0x13                  	// #19
  444154:	strb	w0, [x21, #8]
  444158:	mov	w0, #0x1                   	// #1
  44415c:	b	443c84 <_obstack_memory_used@@Base+0x2ae8>
  444160:	mov	x2, #0x8400                	// #33792
  444164:	and	x2, x22, x2
  444168:	mov	w0, #0x1                   	// #1
  44416c:	cmp	x2, #0x8, lsl #12
  444170:	b.ne	443c84 <_obstack_memory_used@@Base+0x2ae8>  // b.any
  444174:	mov	w0, #0xa                   	// #10
  444178:	strb	w0, [x21, #8]
  44417c:	mov	w0, #0x1                   	// #1
  444180:	b	443c84 <_obstack_memory_used@@Base+0x2ae8>
  444184:	mov	w0, #0xb                   	// #11
  444188:	strb	w0, [x21, #8]
  44418c:	mov	w0, #0x1                   	// #1
  444190:	b	443c84 <_obstack_memory_used@@Base+0x2ae8>
  444194:	mov	w0, #0x1                   	// #1
  444198:	mov	x1, #0x1200                	// #4608
  44419c:	bics	xzr, x1, x22
  4441a0:	b.ne	443c84 <_obstack_memory_used@@Base+0x2ae8>  // b.any
  4441a4:	mov	w0, #0x17                  	// #23
  4441a8:	strb	w0, [x21, #8]
  4441ac:	mov	w0, #0x1                   	// #1
  4441b0:	b	443c84 <_obstack_memory_used@@Base+0x2ae8>
  4441b4:	mov	w0, #0x1                   	// #1
  4441b8:	tbz	w22, #13, 443c84 <_obstack_memory_used@@Base+0x2ae8>
  4441bc:	mov	w0, #0x9                   	// #9
  4441c0:	strb	w0, [x21, #8]
  4441c4:	mov	w0, #0x1                   	// #1
  4441c8:	b	443c84 <_obstack_memory_used@@Base+0x2ae8>
  4441cc:	mov	w0, #0x14                  	// #20
  4441d0:	strb	w0, [x21, #8]
  4441d4:	mov	w0, #0x1                   	// #1
  4441d8:	b	443c84 <_obstack_memory_used@@Base+0x2ae8>
  4441dc:	mov	w0, #0x5                   	// #5
  4441e0:	strb	w0, [x21, #8]
  4441e4:	mov	w0, #0x1                   	// #1
  4441e8:	b	443c84 <_obstack_memory_used@@Base+0x2ae8>
  4441ec:	tbnz	w22, #3, 444204 <_obstack_memory_used@@Base+0x3068>
  4441f0:	ldr	x0, [x19, #72]
  4441f4:	add	x0, x0, #0x1
  4441f8:	ldr	x1, [x19, #88]
  4441fc:	cmp	x0, x1
  444200:	b.ne	44421c <_obstack_memory_used@@Base+0x3080>  // b.any
  444204:	mov	w0, #0xc                   	// #12
  444208:	strb	w0, [x21, #8]
  44420c:	mov	w0, #0x20                  	// #32
  444210:	str	w0, [x21]
  444214:	mov	w0, #0x1                   	// #1
  444218:	b	443c84 <_obstack_memory_used@@Base+0x2ae8>
  44421c:	str	x0, [x19, #72]
  444220:	mov	x2, x22
  444224:	mov	x1, x19
  444228:	add	x0, sp, #0x40
  44422c:	bl	443b6c <_obstack_memory_used@@Base+0x29d0>
  444230:	ldr	x0, [x19, #72]
  444234:	sub	x0, x0, #0x1
  444238:	str	x0, [x19, #72]
  44423c:	ldrb	w1, [sp, #72]
  444240:	sub	w1, w1, #0x9
  444244:	and	w1, w1, #0xff
  444248:	mov	w0, #0x1                   	// #1
  44424c:	cmp	w1, w0
  444250:	b.hi	443c84 <_obstack_memory_used@@Base+0x2ae8>  // b.pmore
  444254:	b	444204 <_obstack_memory_used@@Base+0x3068>
  444258:	mov	w0, #0x2                   	// #2
  44425c:	b	443c84 <_obstack_memory_used@@Base+0x2ae8>
  444260:	ldr	x0, [x19]
  444264:	ldr	x2, [x19, #40]
  444268:	add	x1, x0, x1
  44426c:	ldrb	w20, [x1, x2]
  444270:	b	443ce4 <_obstack_memory_used@@Base+0x2b48>
  444274:	stp	x29, x30, [sp, #-32]!
  444278:	mov	x29, sp
  44427c:	str	x19, [sp, #16]
  444280:	mov	x19, x1
  444284:	bl	443b6c <_obstack_memory_used@@Base+0x29d0>
  444288:	ldr	x1, [x19, #72]
  44428c:	add	x0, x1, w0, sxtw
  444290:	str	x0, [x19, #72]
  444294:	ldr	x19, [sp, #16]
  444298:	ldp	x29, x30, [sp], #32
  44429c:	ret
  4442a0:	stp	x29, x30, [sp, #-64]!
  4442a4:	mov	x29, sp
  4442a8:	stp	x19, x20, [sp, #16]
  4442ac:	stp	x21, x22, [sp, #32]
  4442b0:	stp	x23, x24, [sp, #48]
  4442b4:	mov	x22, x0
  4442b8:	mov	x19, x1
  4442bc:	mov	x21, x2
  4442c0:	mov	x20, #0xffffffffffffffff    	// #-1
  4442c4:	mov	x24, #0x8030                	// #32816
  4442c8:	mov	x23, #0xfffffffffffffffe    	// #-2
  4442cc:	b	4442d4 <_obstack_memory_used@@Base+0x3138>
  4442d0:	mov	x20, x23
  4442d4:	mov	x2, x21
  4442d8:	mov	x1, x22
  4442dc:	mov	x0, x19
  4442e0:	bl	444274 <_obstack_memory_used@@Base+0x30d8>
  4442e4:	ldrb	w1, [x19]
  4442e8:	ldrb	w3, [x19, #8]
  4442ec:	cmp	w3, #0x2
  4442f0:	b.eq	444354 <_obstack_memory_used@@Base+0x31b8>  // b.none
  4442f4:	cmp	w1, #0x2c
  4442f8:	ccmp	w3, #0x18, #0x4, ne  // ne = any
  4442fc:	b.eq	444358 <_obstack_memory_used@@Base+0x31bc>  // b.none
  444300:	cmp	w3, #0x1
  444304:	b.ne	4442d0 <_obstack_memory_used@@Base+0x3134>  // b.any
  444308:	sub	w0, w1, #0x30
  44430c:	and	w0, w0, #0xff
  444310:	cmp	w0, #0x9
  444314:	ccmn	x20, #0x2, #0x4, ls  // ls = plast
  444318:	b.ne	444324 <_obstack_memory_used@@Base+0x3188>  // b.any
  44431c:	mov	x20, x23
  444320:	b	4442d4 <_obstack_memory_used@@Base+0x3138>
  444324:	cmn	x20, #0x1
  444328:	b.eq	444348 <_obstack_memory_used@@Base+0x31ac>  // b.none
  44432c:	add	x20, x20, x20, lsl #2
  444330:	and	x1, x1, #0xff
  444334:	add	x1, x1, x20, lsl #1
  444338:	cmp	x1, x24
  44433c:	csel	x1, x1, x24, le
  444340:	sub	x20, x1, #0x30
  444344:	b	4442d4 <_obstack_memory_used@@Base+0x3138>
  444348:	sub	w1, w1, #0x30
  44434c:	sxtw	x20, w1
  444350:	b	4442d4 <_obstack_memory_used@@Base+0x3138>
  444354:	mov	x20, #0xfffffffffffffffe    	// #-2
  444358:	mov	x0, x20
  44435c:	ldp	x19, x20, [sp, #16]
  444360:	ldp	x21, x22, [sp, #32]
  444364:	ldp	x23, x24, [sp, #48]
  444368:	ldp	x29, x30, [sp], #64
  44436c:	ret
  444370:	stp	x29, x30, [sp, #-32]!
  444374:	mov	x29, sp
  444378:	str	x19, [sp, #16]
  44437c:	mov	x19, x0
  444380:	ldr	x0, [x0]
  444384:	bl	4047c0 <free@plt>
  444388:	ldr	x0, [x19, #8]
  44438c:	bl	4047c0 <free@plt>
  444390:	ldr	x0, [x19, #16]
  444394:	bl	4047c0 <free@plt>
  444398:	ldr	x0, [x19, #24]
  44439c:	bl	4047c0 <free@plt>
  4443a0:	mov	x0, x19
  4443a4:	bl	4047c0 <free@plt>
  4443a8:	ldr	x19, [sp, #16]
  4443ac:	ldp	x29, x30, [sp], #32
  4443b0:	ret
  4443b4:	stp	x29, x30, [sp, #-16]!
  4443b8:	mov	x29, sp
  4443bc:	ldr	w1, [x0, #8]
  4443c0:	and	w1, w1, #0x7ffff
  4443c4:	and	w1, w1, #0xfffc00ff
  4443c8:	cmp	w1, #0x6
  4443cc:	b.eq	4443e0 <_obstack_memory_used@@Base+0x3244>  // b.none
  4443d0:	cmp	w1, #0x3
  4443d4:	b.eq	4443ec <_obstack_memory_used@@Base+0x3250>  // b.none
  4443d8:	ldp	x29, x30, [sp], #16
  4443dc:	ret
  4443e0:	ldr	x0, [x0]
  4443e4:	bl	444370 <_obstack_memory_used@@Base+0x31d4>
  4443e8:	b	4443d8 <_obstack_memory_used@@Base+0x323c>
  4443ec:	ldr	x0, [x0]
  4443f0:	bl	4047c0 <free@plt>
  4443f4:	b	4443d8 <_obstack_memory_used@@Base+0x323c>
  4443f8:	stp	x29, x30, [sp, #-16]!
  4443fc:	mov	x29, sp
  444400:	add	x0, x1, #0x28
  444404:	bl	4443b4 <_obstack_memory_used@@Base+0x3218>
  444408:	mov	w0, #0x0                   	// #0
  44440c:	ldp	x29, x30, [sp], #16
  444410:	ret
  444414:	stp	x29, x30, [sp, #-96]!
  444418:	mov	x29, sp
  44441c:	stp	x19, x20, [sp, #16]
  444420:	stp	x21, x22, [sp, #32]
  444424:	stp	x23, x24, [sp, #48]
  444428:	mov	x19, x0
  44442c:	mov	x21, x1
  444430:	mov	x20, x2
  444434:	and	w22, w2, #0xff
  444438:	ldr	x23, [x0, #8]
  44443c:	ldr	x0, [x0, #16]
  444440:	cmp	x0, x23
  444444:	b.cs	444500 <_obstack_memory_used@@Base+0x3364>  // b.hs, b.nlast
  444448:	ldr	x0, [x19, #16]
  44444c:	ldr	x1, [x19]
  444450:	lsl	x0, x0, #4
  444454:	add	x2, x1, x0
  444458:	str	x21, [x1, x0]
  44445c:	str	x20, [x2, #8]
  444460:	ldr	x0, [x19, #16]
  444464:	ldr	x1, [x19]
  444468:	add	x0, x1, x0, lsl #4
  44446c:	ldr	w1, [x0, #8]
  444470:	and	w1, w1, #0xfffc00ff
  444474:	str	w1, [x0, #8]
  444478:	cmp	w22, #0x5
  44447c:	b.eq	4445e4 <_obstack_memory_used@@Base+0x3448>  // b.none
  444480:	cmp	w22, #0x6
  444484:	cset	w2, eq  // eq = none
  444488:	ldr	x0, [x19, #16]
  44448c:	ldr	x1, [x19]
  444490:	add	x0, x1, x0, lsl #4
  444494:	ldrb	w1, [x0, #10]
  444498:	bfi	w1, w2, #4, #1
  44449c:	strb	w1, [x0, #10]
  4444a0:	ldr	x1, [x19, #16]
  4444a4:	ldr	x0, [x19, #24]
  4444a8:	mov	x2, #0xffffffffffffffff    	// #-1
  4444ac:	str	x2, [x0, x1, lsl #3]
  4444b0:	ldr	x0, [x19, #16]
  4444b4:	add	x0, x0, x0, lsl #1
  4444b8:	ldr	x1, [x19, #40]
  4444bc:	add	x0, x1, x0, lsl #3
  4444c0:	stp	xzr, xzr, [x0]
  4444c4:	str	xzr, [x0, #16]
  4444c8:	ldr	x0, [x19, #16]
  4444cc:	add	x0, x0, x0, lsl #1
  4444d0:	ldr	x1, [x19, #48]
  4444d4:	add	x0, x1, x0, lsl #3
  4444d8:	stp	xzr, xzr, [x0]
  4444dc:	str	xzr, [x0, #16]
  4444e0:	ldr	x0, [x19, #16]
  4444e4:	add	x1, x0, #0x1
  4444e8:	str	x1, [x19, #16]
  4444ec:	ldp	x19, x20, [sp, #16]
  4444f0:	ldp	x21, x22, [sp, #32]
  4444f4:	ldp	x23, x24, [sp, #48]
  4444f8:	ldp	x29, x30, [sp], #96
  4444fc:	ret
  444500:	lsl	x24, x23, #1
  444504:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  444508:	movk	x0, #0xaaa, lsl #48
  44450c:	cmp	x0, x23, lsl #1
  444510:	b.cc	4445f8 <_obstack_memory_used@@Base+0x345c>  // b.lo, b.ul, b.last
  444514:	lsl	x1, x23, #5
  444518:	ldr	x0, [x19]
  44451c:	bl	404540 <realloc@plt>
  444520:	cbz	x0, 444600 <_obstack_memory_used@@Base+0x3464>
  444524:	stp	x25, x26, [sp, #64]
  444528:	str	x27, [sp, #80]
  44452c:	str	x0, [x19]
  444530:	lsl	x25, x23, #4
  444534:	mov	x1, x25
  444538:	ldr	x0, [x19, #24]
  44453c:	bl	404540 <realloc@plt>
  444540:	mov	x26, x0
  444544:	mov	x1, x25
  444548:	ldr	x0, [x19, #32]
  44454c:	bl	404540 <realloc@plt>
  444550:	mov	x25, x0
  444554:	add	x23, x23, x23, lsl #1
  444558:	lsl	x23, x23, #4
  44455c:	mov	x1, x23
  444560:	ldr	x0, [x19, #40]
  444564:	bl	404540 <realloc@plt>
  444568:	mov	x27, x0
  44456c:	mov	x1, x23
  444570:	ldr	x0, [x19, #48]
  444574:	bl	404540 <realloc@plt>
  444578:	mov	x23, x0
  44457c:	cmp	x26, #0x0
  444580:	ccmp	x25, #0x0, #0x4, ne  // ne = any
  444584:	b.eq	4445b4 <_obstack_memory_used@@Base+0x3418>  // b.none
  444588:	cmp	x27, #0x0
  44458c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  444590:	b.eq	4445b4 <_obstack_memory_used@@Base+0x3418>  // b.none
  444594:	str	x26, [x19, #24]
  444598:	str	x25, [x19, #32]
  44459c:	str	x27, [x19, #40]
  4445a0:	str	x0, [x19, #48]
  4445a4:	str	x24, [x19, #8]
  4445a8:	ldp	x25, x26, [sp, #64]
  4445ac:	ldr	x27, [sp, #80]
  4445b0:	b	444448 <_obstack_memory_used@@Base+0x32ac>
  4445b4:	mov	x0, x26
  4445b8:	bl	4047c0 <free@plt>
  4445bc:	mov	x0, x25
  4445c0:	bl	4047c0 <free@plt>
  4445c4:	mov	x0, x27
  4445c8:	bl	4047c0 <free@plt>
  4445cc:	mov	x0, x23
  4445d0:	bl	4047c0 <free@plt>
  4445d4:	mov	x0, #0xffffffffffffffff    	// #-1
  4445d8:	ldp	x25, x26, [sp, #64]
  4445dc:	ldr	x27, [sp, #80]
  4445e0:	b	4444ec <_obstack_memory_used@@Base+0x3350>
  4445e4:	ldr	w0, [x19, #180]
  4445e8:	mov	w2, #0x1                   	// #1
  4445ec:	cmp	w0, w2
  4445f0:	b.gt	444488 <_obstack_memory_used@@Base+0x32ec>
  4445f4:	b	444480 <_obstack_memory_used@@Base+0x32e4>
  4445f8:	mov	x0, #0xffffffffffffffff    	// #-1
  4445fc:	b	4444ec <_obstack_memory_used@@Base+0x3350>
  444600:	mov	x0, #0xffffffffffffffff    	// #-1
  444604:	b	4444ec <_obstack_memory_used@@Base+0x3350>
  444608:	stp	x29, x30, [sp, #-32]!
  44460c:	mov	x29, sp
  444610:	stp	x19, x20, [sp, #16]
  444614:	mov	x20, x0
  444618:	mov	x19, x1
  44461c:	ldrb	w0, [x1, #48]
  444620:	cmp	w0, #0x10
  444624:	b.ne	44464c <_obstack_memory_used@@Base+0x34b0>  // b.any
  444628:	ldr	x0, [x1, #8]
  44462c:	ldr	x1, [x0, #24]
  444630:	str	x1, [x19, #24]
  444634:	ldr	x0, [x0, #56]
  444638:	str	x0, [x19, #56]
  44463c:	mov	w0, #0x0                   	// #0
  444640:	ldp	x19, x20, [sp, #16]
  444644:	ldp	x29, x30, [sp], #32
  444648:	ret
  44464c:	str	x1, [x19, #24]
  444650:	ldp	x1, x2, [x1, #40]
  444654:	mov	x0, x20
  444658:	bl	444414 <_obstack_memory_used@@Base+0x3278>
  44465c:	mov	x1, x0
  444660:	str	x0, [x19, #56]
  444664:	cmn	x0, #0x1
  444668:	b.eq	44469c <_obstack_memory_used@@Base+0x3500>  // b.none
  44466c:	ldrb	w2, [x19, #48]
  444670:	mov	w0, #0x0                   	// #0
  444674:	cmp	w2, #0xc
  444678:	b.ne	444640 <_obstack_memory_used@@Base+0x34a4>  // b.any
  44467c:	ldr	x0, [x20]
  444680:	add	x1, x0, x1, lsl #4
  444684:	ldr	w0, [x1, #8]
  444688:	ldr	w2, [x19, #40]
  44468c:	bfi	w0, w2, #8, #10
  444690:	str	w0, [x1, #8]
  444694:	mov	w0, #0x0                   	// #0
  444698:	b	444640 <_obstack_memory_used@@Base+0x34a4>
  44469c:	mov	w0, #0xc                   	// #12
  4446a0:	b	444640 <_obstack_memory_used@@Base+0x34a4>
  4446a4:	stp	x29, x30, [sp, #-48]!
  4446a8:	mov	x29, sp
  4446ac:	stp	x19, x20, [sp, #16]
  4446b0:	stp	x21, x22, [sp, #32]
  4446b4:	mov	x19, x0
  4446b8:	mov	x20, x1
  4446bc:	mov	w22, w2
  4446c0:	lsl	x21, x1, #4
  4446c4:	ldr	x1, [x0]
  4446c8:	add	x1, x1, x21
  4446cc:	ldp	x2, x3, [x1]
  4446d0:	mov	x1, x2
  4446d4:	mov	x2, x3
  4446d8:	bl	444414 <_obstack_memory_used@@Base+0x3278>
  4446dc:	cmn	x0, #0x1
  4446e0:	b.eq	444740 <_obstack_memory_used@@Base+0x35a4>  // b.none
  4446e4:	lsl	x3, x0, #4
  4446e8:	ldr	x1, [x19]
  4446ec:	add	x1, x1, x3
  4446f0:	ldr	w2, [x1, #8]
  4446f4:	bfi	w2, w22, #8, #10
  4446f8:	str	w2, [x1, #8]
  4446fc:	ldr	x1, [x19]
  444700:	add	x5, x1, x3
  444704:	add	x1, x1, x21
  444708:	ldr	w4, [x1, #8]
  44470c:	ubfx	x4, x4, #8, #10
  444710:	ldr	w2, [x5, #8]
  444714:	ubfx	x1, x2, #8, #10
  444718:	orr	w4, w4, w1
  44471c:	bfi	w2, w4, #8, #10
  444720:	str	w2, [x5, #8]
  444724:	ldr	x1, [x19]
  444728:	add	x3, x1, x3
  44472c:	ldrb	w1, [x3, #10]
  444730:	orr	w1, w1, #0x4
  444734:	strb	w1, [x3, #10]
  444738:	ldr	x1, [x19, #32]
  44473c:	str	x20, [x1, x0, lsl #3]
  444740:	ldp	x19, x20, [sp, #16]
  444744:	ldp	x21, x22, [sp, #32]
  444748:	ldp	x29, x30, [sp], #48
  44474c:	ret
  444750:	stp	x29, x30, [sp, #-80]!
  444754:	mov	x29, sp
  444758:	stp	x19, x20, [sp, #16]
  44475c:	stp	x21, x22, [sp, #32]
  444760:	stp	x23, x24, [sp, #48]
  444764:	stp	x25, x26, [sp, #64]
  444768:	mov	x20, x0
  44476c:	mov	x21, x1
  444770:	mov	x19, x2
  444774:	mov	x25, x3
  444778:	mov	w23, w4
  44477c:	b	444930 <_obstack_memory_used@@Base+0x3794>
  444780:	lsl	x26, x21, #3
  444784:	ldr	x0, [x20, #24]
  444788:	ldr	x21, [x0, x21, lsl #3]
  44478c:	mov	x24, x19
  444790:	add	x19, x19, x19, lsl #1
  444794:	lsl	x22, x19, #3
  444798:	ldr	x0, [x20, #40]
  44479c:	add	x0, x0, x22
  4447a0:	str	xzr, [x0, #8]
  4447a4:	mov	w2, w23
  4447a8:	mov	x1, x21
  4447ac:	mov	x0, x20
  4447b0:	bl	4446a4 <_obstack_memory_used@@Base+0x3508>
  4447b4:	mov	x19, x0
  4447b8:	cmn	x0, #0x1
  4447bc:	b.eq	444a10 <_obstack_memory_used@@Base+0x3874>  // b.none
  4447c0:	ldr	x0, [x20, #24]
  4447c4:	ldr	x1, [x0, x26]
  4447c8:	str	x1, [x0, x24, lsl #3]
  4447cc:	ldr	x0, [x20, #40]
  4447d0:	mov	x1, x19
  4447d4:	add	x0, x0, x22
  4447d8:	bl	442408 <_obstack_memory_used@@Base+0x126c>
  4447dc:	and	w0, w0, #0xff
  4447e0:	cbnz	w0, 444930 <_obstack_memory_used@@Base+0x3794>
  4447e4:	mov	w0, #0xc                   	// #12
  4447e8:	b	444a3c <_obstack_memory_used@@Base+0x38a0>
  4447ec:	ldr	x0, [x20, #24]
  4447f0:	ldr	x1, [x0, x21, lsl #3]
  4447f4:	str	x1, [x0, x19, lsl #3]
  4447f8:	mov	w0, #0x0                   	// #0
  4447fc:	b	444a3c <_obstack_memory_used@@Base+0x38a0>
  444800:	ldr	x0, [x2, #16]
  444804:	ldr	x24, [x0]
  444808:	add	x22, x19, x19, lsl #1
  44480c:	lsl	x22, x22, #3
  444810:	add	x1, x1, x22
  444814:	str	xzr, [x1, #8]
  444818:	cmp	x21, x25
  44481c:	ccmp	x21, x19, #0x4, eq  // eq = none
  444820:	b.ne	444874 <_obstack_memory_used@@Base+0x36d8>  // b.any
  444824:	ldr	x0, [x20]
  444828:	add	x3, x0, x3
  44482c:	ldr	w0, [x3, #8]
  444830:	ubfx	x0, x0, #8, #10
  444834:	orr	w23, w23, w0
  444838:	mov	w2, w23
  44483c:	mov	x1, x24
  444840:	mov	x0, x20
  444844:	bl	4446a4 <_obstack_memory_used@@Base+0x3508>
  444848:	mov	x19, x0
  44484c:	cmn	x0, #0x1
  444850:	b.eq	444a18 <_obstack_memory_used@@Base+0x387c>  // b.none
  444854:	ldr	x0, [x20, #40]
  444858:	mov	x1, x19
  44485c:	add	x0, x0, x22
  444860:	bl	442408 <_obstack_memory_used@@Base+0x126c>
  444864:	and	w0, w0, #0xff
  444868:	cbz	w0, 444894 <_obstack_memory_used@@Base+0x36f8>
  44486c:	mov	x21, x24
  444870:	b	444930 <_obstack_memory_used@@Base+0x3794>
  444874:	ldr	x2, [x20, #40]
  444878:	mov	x1, x24
  44487c:	add	x0, x2, x22
  444880:	bl	442408 <_obstack_memory_used@@Base+0x126c>
  444884:	ands	w0, w0, #0xff
  444888:	mov	w0, #0xc                   	// #12
  44488c:	csel	w0, w0, wzr, eq  // eq = none
  444890:	b	444a3c <_obstack_memory_used@@Base+0x38a0>
  444894:	mov	w0, #0xc                   	// #12
  444898:	b	444a3c <_obstack_memory_used@@Base+0x38a0>
  44489c:	sub	x1, x1, #0x1
  4448a0:	add	x2, x2, x5
  4448a4:	ldrb	w0, [x2, #10]
  4448a8:	tst	x0, #0x4
  4448ac:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  4448b0:	b.le	4449b4 <_obstack_memory_used@@Base+0x3818>
  4448b4:	ldr	x0, [x3, x1, lsl #3]
  4448b8:	cmp	x21, x0
  4448bc:	b.ne	44489c <_obstack_memory_used@@Base+0x3700>  // b.any
  4448c0:	ldr	w0, [x2, #8]
  4448c4:	ubfx	x0, x0, #8, #10
  4448c8:	cmp	w23, w0
  4448cc:	b.ne	44489c <_obstack_memory_used@@Base+0x3700>  // b.any
  4448d0:	cmn	x1, #0x1
  4448d4:	b.eq	4449b4 <_obstack_memory_used@@Base+0x3818>  // b.none
  4448d8:	ldr	x0, [x20, #40]
  4448dc:	add	x0, x0, x24
  4448e0:	bl	442408 <_obstack_memory_used@@Base+0x126c>
  4448e4:	and	w0, w0, #0xff
  4448e8:	cbz	w0, 444a30 <_obstack_memory_used@@Base+0x3894>
  4448ec:	ldr	x0, [x20, #40]
  4448f0:	add	x22, x0, x22
  4448f4:	ldr	x0, [x22, #16]
  4448f8:	ldr	x21, [x0, #8]
  4448fc:	mov	w2, w23
  444900:	mov	x1, x21
  444904:	mov	x0, x20
  444908:	bl	4446a4 <_obstack_memory_used@@Base+0x3508>
  44490c:	mov	x19, x0
  444910:	cmn	x0, #0x1
  444914:	b.eq	444a38 <_obstack_memory_used@@Base+0x389c>  // b.none
  444918:	ldr	x0, [x20, #40]
  44491c:	mov	x1, x19
  444920:	add	x0, x0, x24
  444924:	bl	442408 <_obstack_memory_used@@Base+0x126c>
  444928:	and	w0, w0, #0xff
  44492c:	cbz	w0, 444a08 <_obstack_memory_used@@Base+0x386c>
  444930:	lsl	x3, x21, #4
  444934:	ldr	x0, [x20]
  444938:	add	x0, x0, x3
  44493c:	ldrb	w0, [x0, #8]
  444940:	cmp	w0, #0x4
  444944:	b.eq	444780 <_obstack_memory_used@@Base+0x35e4>  // b.none
  444948:	ldr	x1, [x20, #40]
  44494c:	add	x22, x21, x21, lsl #1
  444950:	lsl	x22, x22, #3
  444954:	add	x2, x1, x22
  444958:	ldr	x0, [x2, #8]
  44495c:	cbz	x0, 4447ec <_obstack_memory_used@@Base+0x3650>
  444960:	cmp	x0, #0x1
  444964:	b.eq	444800 <_obstack_memory_used@@Base+0x3664>  // b.none
  444968:	ldr	x0, [x2, #16]
  44496c:	ldr	x21, [x0]
  444970:	add	x19, x19, x19, lsl #1
  444974:	lsl	x24, x19, #3
  444978:	add	x1, x1, x24
  44497c:	str	xzr, [x1, #8]
  444980:	ldr	x5, [x20, #16]
  444984:	sub	x1, x5, #0x1
  444988:	ldr	x0, [x20]
  44498c:	add	x2, x0, x1, lsl #4
  444990:	ldrb	w3, [x2, #10]
  444994:	tst	x3, #0x4
  444998:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  44499c:	b.le	4449b4 <_obstack_memory_used@@Base+0x3818>
  4449a0:	ldr	x3, [x20, #32]
  4449a4:	add	x5, x0, x5, lsl #4
  4449a8:	sub	x5, x5, x2
  4449ac:	sub	x5, x5, #0x20
  4449b0:	b	4448b4 <_obstack_memory_used@@Base+0x3718>
  4449b4:	mov	w2, w23
  4449b8:	mov	x1, x21
  4449bc:	mov	x0, x20
  4449c0:	bl	4446a4 <_obstack_memory_used@@Base+0x3508>
  4449c4:	mov	x19, x0
  4449c8:	cmn	x0, #0x1
  4449cc:	b.eq	444a20 <_obstack_memory_used@@Base+0x3884>  // b.none
  4449d0:	ldr	x0, [x20, #40]
  4449d4:	mov	x1, x19
  4449d8:	add	x0, x0, x24
  4449dc:	bl	442408 <_obstack_memory_used@@Base+0x126c>
  4449e0:	and	w0, w0, #0xff
  4449e4:	cbz	w0, 444a28 <_obstack_memory_used@@Base+0x388c>
  4449e8:	mov	w4, w23
  4449ec:	mov	x3, x25
  4449f0:	mov	x2, x19
  4449f4:	mov	x1, x21
  4449f8:	mov	x0, x20
  4449fc:	bl	444750 <_obstack_memory_used@@Base+0x35b4>
  444a00:	cbz	w0, 4448ec <_obstack_memory_used@@Base+0x3750>
  444a04:	b	444a3c <_obstack_memory_used@@Base+0x38a0>
  444a08:	mov	w0, #0xc                   	// #12
  444a0c:	b	444a3c <_obstack_memory_used@@Base+0x38a0>
  444a10:	mov	w0, #0xc                   	// #12
  444a14:	b	444a3c <_obstack_memory_used@@Base+0x38a0>
  444a18:	mov	w0, #0xc                   	// #12
  444a1c:	b	444a3c <_obstack_memory_used@@Base+0x38a0>
  444a20:	mov	w0, #0xc                   	// #12
  444a24:	b	444a3c <_obstack_memory_used@@Base+0x38a0>
  444a28:	mov	w0, #0xc                   	// #12
  444a2c:	b	444a3c <_obstack_memory_used@@Base+0x38a0>
  444a30:	mov	w0, #0xc                   	// #12
  444a34:	b	444a3c <_obstack_memory_used@@Base+0x38a0>
  444a38:	mov	w0, #0xc                   	// #12
  444a3c:	ldp	x19, x20, [sp, #16]
  444a40:	ldp	x21, x22, [sp, #32]
  444a44:	ldp	x23, x24, [sp, #48]
  444a48:	ldp	x25, x26, [sp, #64]
  444a4c:	ldp	x29, x30, [sp], #80
  444a50:	ret
  444a54:	stp	x29, x30, [sp, #-160]!
  444a58:	mov	x29, sp
  444a5c:	stp	x19, x20, [sp, #16]
  444a60:	stp	x21, x22, [sp, #32]
  444a64:	stp	x23, x24, [sp, #48]
  444a68:	stp	x25, x26, [sp, #64]
  444a6c:	stp	x27, x28, [sp, #80]
  444a70:	mov	x25, x0
  444a74:	mov	x19, x1
  444a78:	mov	x23, x2
  444a7c:	and	w28, w3, #0xff
  444a80:	add	x22, x2, x2, lsl #1
  444a84:	lsl	x22, x22, #3
  444a88:	ldr	x0, [x1, #40]
  444a8c:	add	x0, x0, x22
  444a90:	ldr	x1, [x0, #8]
  444a94:	add	x1, x1, #0x1
  444a98:	add	x0, sp, #0x88
  444a9c:	bl	442644 <_obstack_memory_used@@Base+0x14a8>
  444aa0:	mov	w24, w0
  444aa4:	cbnz	w0, 444c38 <_obstack_memory_used@@Base+0x3a9c>
  444aa8:	mov	x26, x22
  444aac:	ldr	x0, [x19, #48]
  444ab0:	add	x0, x0, x22
  444ab4:	mov	x1, #0xffffffffffffffff    	// #-1
  444ab8:	str	x1, [x0, #8]
  444abc:	ldr	x0, [x19]
  444ac0:	lsl	x20, x23, #4
  444ac4:	add	x2, x0, x20
  444ac8:	ldr	w1, [x2, #8]
  444acc:	tst	w1, #0x3ff00
  444ad0:	b.eq	444af8 <_obstack_memory_used@@Base+0x395c>  // b.none
  444ad4:	ldr	x1, [x19, #40]
  444ad8:	add	x1, x1, x22
  444adc:	ldr	x3, [x1, #8]
  444ae0:	cbz	x3, 444c60 <_obstack_memory_used@@Base+0x3ac4>
  444ae4:	ldr	x1, [x1, #16]
  444ae8:	ldr	x1, [x1]
  444aec:	add	x0, x0, x1, lsl #4
  444af0:	ldrb	w0, [x0, #10]
  444af4:	tbz	w0, #2, 444b2c <_obstack_memory_used@@Base+0x3990>
  444af8:	ldr	x0, [x19]
  444afc:	add	x0, x0, x20
  444b00:	ldrb	w0, [x0, #8]
  444b04:	tbz	w0, #3, 444c60 <_obstack_memory_used@@Base+0x3ac4>
  444b08:	ldr	x0, [x19, #40]
  444b0c:	add	x0, x0, x22
  444b10:	ldr	x1, [x0, #8]
  444b14:	cmp	x1, #0x0
  444b18:	b.le	444c60 <_obstack_memory_used@@Base+0x3ac4>
  444b1c:	str	wzr, [sp, #108]
  444b20:	mov	x21, #0x0                   	// #0
  444b24:	mov	w27, #0x1                   	// #1
  444b28:	b	444b9c <_obstack_memory_used@@Base+0x3a00>
  444b2c:	ldr	w4, [x2, #8]
  444b30:	ubfx	x4, x4, #8, #10
  444b34:	mov	x3, x23
  444b38:	mov	x2, x23
  444b3c:	mov	x1, x23
  444b40:	mov	x0, x19
  444b44:	bl	444750 <_obstack_memory_used@@Base+0x35b4>
  444b48:	cbz	w0, 444af8 <_obstack_memory_used@@Base+0x395c>
  444b4c:	mov	w24, w0
  444b50:	b	444c38 <_obstack_memory_used@@Base+0x3a9c>
  444b54:	str	w27, [sp, #108]
  444b58:	b	444b84 <_obstack_memory_used@@Base+0x39e8>
  444b5c:	mov	w3, #0x0                   	// #0
  444b60:	mov	x1, x19
  444b64:	add	x0, sp, #0x70
  444b68:	bl	444a54 <_obstack_memory_used@@Base+0x38b8>
  444b6c:	cbz	w0, 444bd4 <_obstack_memory_used@@Base+0x3a38>
  444b70:	mov	w24, w0
  444b74:	b	444c38 <_obstack_memory_used@@Base+0x3a9c>
  444b78:	ldr	x0, [sp, #128]
  444b7c:	bl	4047c0 <free@plt>
  444b80:	str	w27, [sp, #108]
  444b84:	add	x21, x21, #0x1
  444b88:	ldr	x0, [x19, #40]
  444b8c:	add	x0, x0, x26
  444b90:	ldr	x1, [x0, #8]
  444b94:	cmp	x1, x21
  444b98:	b.le	444bf8 <_obstack_memory_used@@Base+0x3a5c>
  444b9c:	ldr	x0, [x0, #16]
  444ba0:	ldr	x2, [x0, x21, lsl #3]
  444ba4:	add	x20, x2, x2, lsl #1
  444ba8:	lsl	x20, x20, #3
  444bac:	ldr	x0, [x19, #48]
  444bb0:	add	x0, x0, x20
  444bb4:	ldr	x1, [x0, #8]
  444bb8:	cmn	x1, #0x1
  444bbc:	b.eq	444b54 <_obstack_memory_used@@Base+0x39b8>  // b.none
  444bc0:	cbz	x1, 444b5c <_obstack_memory_used@@Base+0x39c0>
  444bc4:	ldp	x2, x3, [x0]
  444bc8:	stp	x2, x3, [sp, #112]
  444bcc:	ldr	x0, [x0, #16]
  444bd0:	str	x0, [sp, #128]
  444bd4:	add	x1, sp, #0x70
  444bd8:	add	x0, sp, #0x88
  444bdc:	bl	442b48 <_obstack_memory_used@@Base+0x19ac>
  444be0:	cbnz	w0, 444b70 <_obstack_memory_used@@Base+0x39d4>
  444be4:	ldr	x0, [x19, #48]
  444be8:	add	x20, x0, x20
  444bec:	ldr	x0, [x20, #8]
  444bf0:	cbnz	x0, 444b84 <_obstack_memory_used@@Base+0x39e8>
  444bf4:	b	444b78 <_obstack_memory_used@@Base+0x39dc>
  444bf8:	mov	x1, x23
  444bfc:	add	x0, sp, #0x88
  444c00:	bl	442408 <_obstack_memory_used@@Base+0x126c>
  444c04:	and	w0, w0, #0xff
  444c08:	cbz	w0, 444c58 <_obstack_memory_used@@Base+0x3abc>
  444c0c:	eor	w28, w28, #0x1
  444c10:	ldr	w0, [sp, #108]
  444c14:	tst	w0, w28
  444c18:	b.eq	444c74 <_obstack_memory_used@@Base+0x3ad8>  // b.none
  444c1c:	ldr	x0, [x19, #48]
  444c20:	add	x22, x0, x22
  444c24:	str	xzr, [x22, #8]
  444c28:	ldp	x0, x1, [sp, #136]
  444c2c:	stp	x0, x1, [x25]
  444c30:	ldr	x0, [sp, #152]
  444c34:	str	x0, [x25, #16]
  444c38:	mov	w0, w24
  444c3c:	ldp	x19, x20, [sp, #16]
  444c40:	ldp	x21, x22, [sp, #32]
  444c44:	ldp	x23, x24, [sp, #48]
  444c48:	ldp	x25, x26, [sp, #64]
  444c4c:	ldp	x27, x28, [sp, #80]
  444c50:	ldp	x29, x30, [sp], #160
  444c54:	ret
  444c58:	mov	w24, #0xc                   	// #12
  444c5c:	b	444c38 <_obstack_memory_used@@Base+0x3a9c>
  444c60:	mov	x1, x23
  444c64:	add	x0, sp, #0x88
  444c68:	bl	442408 <_obstack_memory_used@@Base+0x126c>
  444c6c:	and	w0, w0, #0xff
  444c70:	cbz	w0, 444c90 <_obstack_memory_used@@Base+0x3af4>
  444c74:	ldr	x0, [x19, #48]
  444c78:	add	x22, x0, x22
  444c7c:	ldp	x0, x1, [sp, #136]
  444c80:	stp	x0, x1, [x22]
  444c84:	ldr	x0, [sp, #152]
  444c88:	str	x0, [x22, #16]
  444c8c:	b	444c28 <_obstack_memory_used@@Base+0x3a8c>
  444c90:	mov	w24, #0xc                   	// #12
  444c94:	b	444c38 <_obstack_memory_used@@Base+0x3a9c>
  444c98:	stp	x29, x30, [sp, #-32]!
  444c9c:	mov	x29, sp
  444ca0:	str	x19, [sp, #16]
  444ca4:	mov	x19, x0
  444ca8:	ldr	x0, [x0, #48]
  444cac:	bl	4047c0 <free@plt>
  444cb0:	ldr	x0, [x19, #72]
  444cb4:	bl	4047c0 <free@plt>
  444cb8:	ldr	x0, [x19, #80]
  444cbc:	add	x1, x19, #0x8
  444cc0:	cmp	x0, x1
  444cc4:	b.eq	444cd8 <_obstack_memory_used@@Base+0x3b3c>  // b.none
  444cc8:	ldr	x0, [x0, #16]
  444ccc:	bl	4047c0 <free@plt>
  444cd0:	ldr	x0, [x19, #80]
  444cd4:	bl	4047c0 <free@plt>
  444cd8:	ldr	x0, [x19, #24]
  444cdc:	bl	4047c0 <free@plt>
  444ce0:	ldr	x0, [x19, #96]
  444ce4:	bl	4047c0 <free@plt>
  444ce8:	ldr	x0, [x19, #88]
  444cec:	bl	4047c0 <free@plt>
  444cf0:	mov	x0, x19
  444cf4:	bl	4047c0 <free@plt>
  444cf8:	ldr	x19, [sp, #16]
  444cfc:	ldp	x29, x30, [sp], #32
  444d00:	ret
  444d04:	stp	x29, x30, [sp, #-112]!
  444d08:	mov	x29, sp
  444d0c:	stp	x19, x20, [sp, #16]
  444d10:	stp	x21, x22, [sp, #32]
  444d14:	str	x0, [sp, #104]
  444d18:	mov	x22, x2
  444d1c:	ldr	x2, [x2, #8]
  444d20:	cbz	x2, 444d88 <_obstack_memory_used@@Base+0x3bec>
  444d24:	stp	x23, x24, [sp, #48]
  444d28:	stp	x25, x26, [sp, #64]
  444d2c:	mov	x24, x1
  444d30:	mov	w25, w3
  444d34:	add	x23, x2, w3, uxtw
  444d38:	cmp	x2, #0x0
  444d3c:	b.le	444d58 <_obstack_memory_used@@Base+0x3bbc>
  444d40:	ldr	x0, [x22, #16]
  444d44:	add	x2, x0, x2, lsl #3
  444d48:	ldr	x1, [x0], #8
  444d4c:	add	x23, x23, x1
  444d50:	cmp	x2, x0
  444d54:	b.ne	444d48 <_obstack_memory_used@@Base+0x3bac>  // b.any
  444d58:	ldr	x0, [x24, #136]
  444d5c:	and	x0, x23, x0
  444d60:	add	x0, x0, x0, lsl #1
  444d64:	lsl	x0, x0, #3
  444d68:	ldr	x1, [x24, #64]
  444d6c:	add	x2, x1, x0
  444d70:	ldr	x21, [x1, x0]
  444d74:	cmp	x21, #0x0
  444d78:	b.le	444de0 <_obstack_memory_used@@Base+0x3c44>
  444d7c:	ldr	x26, [x2, #16]
  444d80:	mov	x19, #0x0                   	// #0
  444d84:	b	444da0 <_obstack_memory_used@@Base+0x3c04>
  444d88:	str	wzr, [x0]
  444d8c:	mov	x20, #0x0                   	// #0
  444d90:	b	444fa0 <_obstack_memory_used@@Base+0x3e04>
  444d94:	add	x19, x19, #0x1
  444d98:	cmp	x19, x21
  444d9c:	b.eq	444de0 <_obstack_memory_used@@Base+0x3c44>  // b.none
  444da0:	ldr	x20, [x26, x19, lsl #3]
  444da4:	ldr	x0, [x20]
  444da8:	cmp	x0, x23
  444dac:	b.ne	444d94 <_obstack_memory_used@@Base+0x3bf8>  // b.any
  444db0:	ldrb	w0, [x20, #104]
  444db4:	and	w0, w0, #0xf
  444db8:	cmp	w0, w25
  444dbc:	b.ne	444d94 <_obstack_memory_used@@Base+0x3bf8>  // b.any
  444dc0:	mov	x1, x22
  444dc4:	ldr	x0, [x20, #80]
  444dc8:	bl	4413c8 <_obstack_memory_used@@Base+0x22c>
  444dcc:	and	w0, w0, #0xff
  444dd0:	cbz	w0, 444d94 <_obstack_memory_used@@Base+0x3bf8>
  444dd4:	ldp	x23, x24, [sp, #48]
  444dd8:	ldp	x25, x26, [sp, #64]
  444ddc:	b	444fa0 <_obstack_memory_used@@Base+0x3e04>
  444de0:	mov	x1, #0x1                   	// #1
  444de4:	mov	x0, #0x70                  	// #112
  444de8:	bl	4044d0 <calloc@plt>
  444dec:	mov	x20, x0
  444df0:	cbz	x0, 444eb0 <_obstack_memory_used@@Base+0x3d14>
  444df4:	stp	x27, x28, [sp, #80]
  444df8:	add	x27, x0, #0x8
  444dfc:	mov	x1, x22
  444e00:	mov	x0, x27
  444e04:	bl	442eb0 <_obstack_memory_used@@Base+0x1d14>
  444e08:	cbnz	w0, 444e44 <_obstack_memory_used@@Base+0x3ca8>
  444e0c:	ldrb	w0, [x20, #104]
  444e10:	bfxil	w0, w25, #0, #4
  444e14:	strb	w0, [x20, #104]
  444e18:	str	x27, [x20, #80]
  444e1c:	ldr	x0, [x22, #8]
  444e20:	cmp	x0, #0x0
  444e24:	b.le	444f80 <_obstack_memory_used@@Base+0x3de4>
  444e28:	mov	x26, #0x0                   	// #0
  444e2c:	mov	x21, #0x0                   	// #0
  444e30:	and	w0, w25, #0x4
  444e34:	str	w0, [sp, #100]
  444e38:	and	w28, w25, #0x2
  444e3c:	and	w25, w25, #0x1
  444e40:	b	444f08 <_obstack_memory_used@@Base+0x3d6c>
  444e44:	mov	x0, x20
  444e48:	bl	4047c0 <free@plt>
  444e4c:	ldp	x27, x28, [sp, #80]
  444e50:	b	444eb0 <_obstack_memory_used@@Base+0x3d14>
  444e54:	and	x0, x0, #0xff
  444e58:	orr	w0, w0, #0x10
  444e5c:	strb	w0, [x20, #104]
  444e60:	b	444f60 <_obstack_memory_used@@Base+0x3dc4>
  444e64:	ldrb	w0, [x20, #104]
  444e68:	orr	w0, w0, #0x40
  444e6c:	strb	w0, [x20, #104]
  444e70:	b	444f60 <_obstack_memory_used@@Base+0x3dc4>
  444e74:	mov	x0, #0x18                  	// #24
  444e78:	bl	404310 <malloc@plt>
  444e7c:	str	x0, [x20, #80]
  444e80:	cbz	x0, 444ea4 <_obstack_memory_used@@Base+0x3d08>
  444e84:	mov	x1, x22
  444e88:	bl	442eb0 <_obstack_memory_used@@Base+0x1d14>
  444e8c:	cbnz	w0, 444fc4 <_obstack_memory_used@@Base+0x3e28>
  444e90:	ldrb	w0, [x20, #104]
  444e94:	orr	w0, w0, #0xffffff80
  444e98:	strb	w0, [x20, #104]
  444e9c:	mov	x26, #0x0                   	// #0
  444ea0:	b	444f70 <_obstack_memory_used@@Base+0x3dd4>
  444ea4:	mov	x0, x20
  444ea8:	bl	444c98 <_obstack_memory_used@@Base+0x3afc>
  444eac:	ldp	x27, x28, [sp, #80]
  444eb0:	mov	w0, #0xc                   	// #12
  444eb4:	ldr	x1, [sp, #104]
  444eb8:	str	w0, [x1]
  444ebc:	mov	x20, #0x0                   	// #0
  444ec0:	ldp	x23, x24, [sp, #48]
  444ec4:	ldp	x25, x26, [sp, #64]
  444ec8:	b	444fa0 <_obstack_memory_used@@Base+0x3e04>
  444ecc:	tbz	w19, #1, 444ed4 <_obstack_memory_used@@Base+0x3d38>
  444ed0:	cbnz	w25, 444ee8 <_obstack_memory_used@@Base+0x3d4c>
  444ed4:	tbz	w19, #4, 444edc <_obstack_memory_used@@Base+0x3d40>
  444ed8:	cbz	w28, 444ee8 <_obstack_memory_used@@Base+0x3d4c>
  444edc:	tbz	w19, #6, 444ef8 <_obstack_memory_used@@Base+0x3d5c>
  444ee0:	ldr	w0, [sp, #100]
  444ee4:	cbnz	w0, 444ef8 <_obstack_memory_used@@Base+0x3d5c>
  444ee8:	sub	x1, x21, x26
  444eec:	mov	x0, x27
  444ef0:	bl	441484 <_obstack_memory_used@@Base+0x2e8>
  444ef4:	add	x26, x26, #0x1
  444ef8:	add	x21, x21, #0x1
  444efc:	ldr	x0, [x22, #8]
  444f00:	cmp	x21, x0
  444f04:	b.ge	444f80 <_obstack_memory_used@@Base+0x3de4>  // b.tcont
  444f08:	ldr	x0, [x22, #16]
  444f0c:	ldr	x0, [x0, x21, lsl #3]
  444f10:	ldr	x1, [x24]
  444f14:	add	x0, x1, x0, lsl #4
  444f18:	ldrb	w2, [x0, #8]
  444f1c:	ldr	w19, [x0, #8]
  444f20:	ubfx	x19, x19, #8, #10
  444f24:	cmp	w19, #0x0
  444f28:	ccmp	w2, #0x1, #0x0, eq  // eq = none
  444f2c:	b.eq	444ef8 <_obstack_memory_used@@Base+0x3d5c>  // b.none
  444f30:	ldrb	w1, [x20, #104]
  444f34:	ubfx	x3, x1, #5, #1
  444f38:	ldrb	w0, [x0, #10]
  444f3c:	ubfx	x0, x0, #4, #1
  444f40:	orr	w3, w3, w0
  444f44:	mov	w0, w1
  444f48:	bfi	w0, w3, #5, #1
  444f4c:	strb	w0, [x20, #104]
  444f50:	cmp	w2, #0x2
  444f54:	b.eq	444e54 <_obstack_memory_used@@Base+0x3cb8>  // b.none
  444f58:	cmp	w2, #0x4
  444f5c:	b.eq	444e64 <_obstack_memory_used@@Base+0x3cc8>  // b.none
  444f60:	cbz	w19, 444ef8 <_obstack_memory_used@@Base+0x3d5c>
  444f64:	ldr	x0, [x20, #80]
  444f68:	cmp	x27, x0
  444f6c:	b.eq	444e74 <_obstack_memory_used@@Base+0x3cd8>  // b.none
  444f70:	tbz	w19, #0, 444ecc <_obstack_memory_used@@Base+0x3d30>
  444f74:	cbz	w25, 444ee8 <_obstack_memory_used@@Base+0x3d4c>
  444f78:	tbnz	w19, #1, 444ee8 <_obstack_memory_used@@Base+0x3d4c>
  444f7c:	b	444ed4 <_obstack_memory_used@@Base+0x3d38>
  444f80:	mov	x2, x23
  444f84:	mov	x1, x20
  444f88:	mov	x0, x24
  444f8c:	bl	442680 <_obstack_memory_used@@Base+0x14e4>
  444f90:	cbnz	w0, 444fb4 <_obstack_memory_used@@Base+0x3e18>
  444f94:	ldp	x23, x24, [sp, #48]
  444f98:	ldp	x25, x26, [sp, #64]
  444f9c:	ldp	x27, x28, [sp, #80]
  444fa0:	mov	x0, x20
  444fa4:	ldp	x19, x20, [sp, #16]
  444fa8:	ldp	x21, x22, [sp, #32]
  444fac:	ldp	x29, x30, [sp], #112
  444fb0:	ret
  444fb4:	mov	x0, x20
  444fb8:	bl	444c98 <_obstack_memory_used@@Base+0x3afc>
  444fbc:	ldp	x27, x28, [sp, #80]
  444fc0:	b	444eb0 <_obstack_memory_used@@Base+0x3d14>
  444fc4:	ldp	x27, x28, [sp, #80]
  444fc8:	b	444eb0 <_obstack_memory_used@@Base+0x3d14>
  444fcc:	stp	x29, x30, [sp, #-32]!
  444fd0:	mov	x29, sp
  444fd4:	stp	x19, x20, [sp, #16]
  444fd8:	ldr	x20, [x0]
  444fdc:	ldr	x19, [x20, #112]
  444fe0:	cbz	x19, 444ff4 <_obstack_memory_used@@Base+0x3e58>
  444fe4:	mov	x0, x19
  444fe8:	ldr	x19, [x19]
  444fec:	bl	4047c0 <free@plt>
  444ff0:	cbnz	x19, 444fe4 <_obstack_memory_used@@Base+0x3e48>
  444ff4:	str	xzr, [x20, #112]
  444ff8:	mov	w0, #0xf                   	// #15
  444ffc:	str	w0, [x20, #128]
  445000:	str	xzr, [x20, #104]
  445004:	ldr	x0, [x20, #32]
  445008:	bl	4047c0 <free@plt>
  44500c:	str	xzr, [x20, #32]
  445010:	ldp	x19, x20, [sp, #16]
  445014:	ldp	x29, x30, [sp], #32
  445018:	ret
  44501c:	stp	x29, x30, [sp, #-32]!
  445020:	mov	x29, sp
  445024:	str	x19, [sp, #16]
  445028:	mov	x19, x0
  44502c:	ldr	x0, [x0, #16]
  445030:	bl	4047c0 <free@plt>
  445034:	ldr	x0, [x19, #24]
  445038:	bl	4047c0 <free@plt>
  44503c:	ldrb	w0, [x19, #139]
  445040:	cbnz	w0, 445050 <_obstack_memory_used@@Base+0x3eb4>
  445044:	ldr	x19, [sp, #16]
  445048:	ldp	x29, x30, [sp], #32
  44504c:	ret
  445050:	ldr	x0, [x19, #8]
  445054:	bl	4047c0 <free@plt>
  445058:	b	445044 <_obstack_memory_used@@Base+0x3ea8>
  44505c:	stp	x29, x30, [sp, #-64]!
  445060:	mov	x29, sp
  445064:	stp	x19, x20, [sp, #16]
  445068:	stp	x21, x22, [sp, #32]
  44506c:	mov	x21, x0
  445070:	ldr	x0, [x0]
  445074:	cbz	x0, 4450a0 <_obstack_memory_used@@Base+0x3f04>
  445078:	ldr	x0, [x21, #16]
  44507c:	cbz	x0, 4450a0 <_obstack_memory_used@@Base+0x3f04>
  445080:	mov	x19, #0x0                   	// #0
  445084:	ldr	x0, [x21]
  445088:	add	x0, x0, x19, lsl #4
  44508c:	bl	4443b4 <_obstack_memory_used@@Base+0x3218>
  445090:	add	x19, x19, #0x1
  445094:	ldr	x0, [x21, #16]
  445098:	cmp	x0, x19
  44509c:	b.hi	445084 <_obstack_memory_used@@Base+0x3ee8>  // b.pmore
  4450a0:	ldr	x0, [x21, #24]
  4450a4:	bl	4047c0 <free@plt>
  4450a8:	ldr	x0, [x21, #16]
  4450ac:	cbz	x0, 445110 <_obstack_memory_used@@Base+0x3f74>
  4450b0:	mov	x19, #0x0                   	// #0
  4450b4:	mov	x20, #0x0                   	// #0
  4450b8:	b	4450dc <_obstack_memory_used@@Base+0x3f40>
  4450bc:	add	x0, x0, x19
  4450c0:	ldr	x0, [x0, #16]
  4450c4:	bl	4047c0 <free@plt>
  4450c8:	add	x20, x20, #0x1
  4450cc:	add	x19, x19, #0x18
  4450d0:	ldr	x0, [x21, #16]
  4450d4:	cmp	x0, x20
  4450d8:	b.ls	445110 <_obstack_memory_used@@Base+0x3f74>  // b.plast
  4450dc:	ldr	x0, [x21, #48]
  4450e0:	cbz	x0, 4450f0 <_obstack_memory_used@@Base+0x3f54>
  4450e4:	add	x0, x0, x19
  4450e8:	ldr	x0, [x0, #16]
  4450ec:	bl	4047c0 <free@plt>
  4450f0:	ldr	x0, [x21, #56]
  4450f4:	cbz	x0, 445104 <_obstack_memory_used@@Base+0x3f68>
  4450f8:	add	x0, x0, x19
  4450fc:	ldr	x0, [x0, #16]
  445100:	bl	4047c0 <free@plt>
  445104:	ldr	x0, [x21, #40]
  445108:	cbnz	x0, 4450bc <_obstack_memory_used@@Base+0x3f20>
  44510c:	b	4450c8 <_obstack_memory_used@@Base+0x3f2c>
  445110:	ldr	x0, [x21, #40]
  445114:	bl	4047c0 <free@plt>
  445118:	ldr	x0, [x21, #48]
  44511c:	bl	4047c0 <free@plt>
  445120:	ldr	x0, [x21, #56]
  445124:	bl	4047c0 <free@plt>
  445128:	ldr	x0, [x21]
  44512c:	bl	4047c0 <free@plt>
  445130:	ldr	x0, [x21, #64]
  445134:	cbz	x0, 4451a0 <_obstack_memory_used@@Base+0x4004>
  445138:	str	x23, [sp, #48]
  44513c:	mov	x22, #0x0                   	// #0
  445140:	mov	x23, #0x0                   	// #0
  445144:	b	445164 <_obstack_memory_used@@Base+0x3fc8>
  445148:	ldr	x0, [x20, #16]
  44514c:	bl	4047c0 <free@plt>
  445150:	add	x23, x23, #0x1
  445154:	add	x22, x22, #0x18
  445158:	ldr	x0, [x21, #136]
  44515c:	cmp	x0, x23
  445160:	b.cc	44519c <_obstack_memory_used@@Base+0x4000>  // b.lo, b.ul, b.last
  445164:	ldr	x0, [x21, #64]
  445168:	add	x20, x0, x22
  44516c:	ldr	x0, [x0, x22]
  445170:	cmp	x0, #0x0
  445174:	b.le	445148 <_obstack_memory_used@@Base+0x3fac>
  445178:	mov	x19, #0x0                   	// #0
  44517c:	ldr	x1, [x20, #16]
  445180:	ldr	x0, [x1, x19, lsl #3]
  445184:	bl	444c98 <_obstack_memory_used@@Base+0x3afc>
  445188:	add	x19, x19, #0x1
  44518c:	ldr	x1, [x20]
  445190:	cmp	x1, x19
  445194:	b.gt	44517c <_obstack_memory_used@@Base+0x3fe0>
  445198:	b	445148 <_obstack_memory_used@@Base+0x3fac>
  44519c:	ldr	x23, [sp, #48]
  4451a0:	ldr	x0, [x21, #64]
  4451a4:	bl	4047c0 <free@plt>
  4451a8:	ldr	x0, [x21, #120]
  4451ac:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  4451b0:	add	x1, x1, #0xe8
  4451b4:	cmp	x0, x1
  4451b8:	b.eq	4451c0 <_obstack_memory_used@@Base+0x4024>  // b.none
  4451bc:	bl	4047c0 <free@plt>
  4451c0:	ldr	x0, [x21, #224]
  4451c4:	bl	4047c0 <free@plt>
  4451c8:	mov	x0, x21
  4451cc:	bl	4047c0 <free@plt>
  4451d0:	ldp	x19, x20, [sp, #16]
  4451d4:	ldp	x21, x22, [sp, #32]
  4451d8:	ldp	x29, x30, [sp], #64
  4451dc:	ret
  4451e0:	stp	x29, x30, [sp, #-112]!
  4451e4:	mov	x29, sp
  4451e8:	stp	x19, x20, [sp, #16]
  4451ec:	stp	x21, x22, [sp, #32]
  4451f0:	stp	x23, x24, [sp, #48]
  4451f4:	mov	x20, x0
  4451f8:	mov	x21, x1
  4451fc:	mov	x22, x2
  445200:	mov	w23, w3
  445204:	ldr	x1, [x1, #8]
  445208:	add	x0, sp, #0x58
  44520c:	bl	442644 <_obstack_memory_used@@Base+0x14a8>
  445210:	mov	w24, w0
  445214:	cbnz	w0, 4452f8 <_obstack_memory_used@@Base+0x415c>
  445218:	ldr	x0, [x21, #8]
  44521c:	cmp	x0, #0x0
  445220:	b.le	445314 <_obstack_memory_used@@Base+0x4178>
  445224:	str	x25, [sp, #64]
  445228:	mov	x19, #0x0                   	// #0
  44522c:	b	445294 <_obstack_memory_used@@Base+0x40f8>
  445230:	add	x4, x4, #0x1
  445234:	cmp	x3, x4
  445238:	b.eq	4452c4 <_obstack_memory_used@@Base+0x4128>  // b.none
  44523c:	ldr	x6, [x8, x4, lsl #3]
  445240:	lsl	x0, x6, #4
  445244:	add	x7, x5, x0
  445248:	ldrb	w7, [x7, #8]
  44524c:	cmp	w23, w7
  445250:	b.ne	445230 <_obstack_memory_used@@Base+0x4094>  // b.any
  445254:	ldr	x0, [x5, x0]
  445258:	cmp	x22, x0
  44525c:	b.ne	445230 <_obstack_memory_used@@Base+0x4094>  // b.any
  445260:	cmn	x6, #0x1
  445264:	b.eq	4452c4 <_obstack_memory_used@@Base+0x4128>  // b.none
  445268:	mov	w4, w23
  44526c:	mov	x3, x22
  445270:	add	x1, sp, #0x58
  445274:	mov	x0, x20
  445278:	bl	442528 <_obstack_memory_used@@Base+0x138c>
  44527c:	mov	w25, w0
  445280:	cbnz	w0, 4452e8 <_obstack_memory_used@@Base+0x414c>
  445284:	add	x19, x19, #0x1
  445288:	ldr	x0, [x21, #8]
  44528c:	cmp	x0, x19
  445290:	b.le	445310 <_obstack_memory_used@@Base+0x4174>
  445294:	ldr	x0, [x21, #16]
  445298:	ldr	x2, [x0, x19, lsl #3]
  44529c:	add	x1, x2, x2, lsl #1
  4452a0:	ldr	x0, [x20, #48]
  4452a4:	add	x1, x0, x1, lsl #3
  4452a8:	ldr	x3, [x1, #8]
  4452ac:	cmp	x3, #0x0
  4452b0:	b.le	4452c4 <_obstack_memory_used@@Base+0x4128>
  4452b4:	ldr	x8, [x1, #16]
  4452b8:	ldr	x5, [x20]
  4452bc:	mov	x4, #0x0                   	// #0
  4452c0:	b	44523c <_obstack_memory_used@@Base+0x40a0>
  4452c4:	add	x0, sp, #0x58
  4452c8:	bl	442b48 <_obstack_memory_used@@Base+0x19ac>
  4452cc:	mov	w25, w0
  4452d0:	cbz	w0, 445284 <_obstack_memory_used@@Base+0x40e8>
  4452d4:	ldr	x0, [sp, #104]
  4452d8:	bl	4047c0 <free@plt>
  4452dc:	mov	w24, w25
  4452e0:	ldr	x25, [sp, #64]
  4452e4:	b	4452f8 <_obstack_memory_used@@Base+0x415c>
  4452e8:	ldr	x0, [sp, #104]
  4452ec:	bl	4047c0 <free@plt>
  4452f0:	mov	w24, w25
  4452f4:	ldr	x25, [sp, #64]
  4452f8:	mov	w0, w24
  4452fc:	ldp	x19, x20, [sp, #16]
  445300:	ldp	x21, x22, [sp, #32]
  445304:	ldp	x23, x24, [sp, #48]
  445308:	ldp	x29, x30, [sp], #112
  44530c:	ret
  445310:	ldr	x25, [sp, #64]
  445314:	ldr	x0, [x21, #16]
  445318:	bl	4047c0 <free@plt>
  44531c:	ldp	x0, x1, [sp, #88]
  445320:	stp	x0, x1, [x21]
  445324:	ldr	x0, [sp, #104]
  445328:	str	x0, [x21, #16]
  44532c:	b	4452f8 <_obstack_memory_used@@Base+0x415c>
  445330:	stp	x29, x30, [sp, #-64]!
  445334:	mov	x29, sp
  445338:	str	x23, [sp, #48]
  44533c:	mov	x23, x0
  445340:	ldr	x0, [x0, #232]
  445344:	cmp	x0, #0x0
  445348:	b.le	4453e0 <_obstack_memory_used@@Base+0x4244>
  44534c:	stp	x19, x20, [sp, #16]
  445350:	stp	x21, x22, [sp, #32]
  445354:	mov	x22, #0x0                   	// #0
  445358:	b	445374 <_obstack_memory_used@@Base+0x41d8>
  44535c:	mov	x0, x21
  445360:	bl	4047c0 <free@plt>
  445364:	add	x22, x22, #0x1
  445368:	ldr	x0, [x23, #232]
  44536c:	cmp	x0, x22
  445370:	b.le	4453d8 <_obstack_memory_used@@Base+0x423c>
  445374:	ldr	x0, [x23, #248]
  445378:	ldr	x21, [x0, x22, lsl #3]
  44537c:	ldr	x0, [x21, #32]
  445380:	cmp	x0, #0x0
  445384:	b.le	4453b4 <_obstack_memory_used@@Base+0x4218>
  445388:	mov	x19, #0x0                   	// #0
  44538c:	ldr	x1, [x21, #40]
  445390:	ldr	x20, [x1, x19, lsl #3]
  445394:	ldr	x0, [x20, #32]
  445398:	bl	4047c0 <free@plt>
  44539c:	mov	x0, x20
  4453a0:	bl	4047c0 <free@plt>
  4453a4:	add	x19, x19, #0x1
  4453a8:	ldr	x1, [x21, #32]
  4453ac:	cmp	x1, x19
  4453b0:	b.gt	44538c <_obstack_memory_used@@Base+0x41f0>
  4453b4:	ldr	x0, [x21, #40]
  4453b8:	bl	4047c0 <free@plt>
  4453bc:	ldr	x0, [x21, #16]
  4453c0:	cbz	x0, 44535c <_obstack_memory_used@@Base+0x41c0>
  4453c4:	ldr	x0, [x0, #16]
  4453c8:	bl	4047c0 <free@plt>
  4453cc:	ldr	x0, [x21, #16]
  4453d0:	bl	4047c0 <free@plt>
  4453d4:	b	44535c <_obstack_memory_used@@Base+0x41c0>
  4453d8:	ldp	x19, x20, [sp, #16]
  4453dc:	ldp	x21, x22, [sp, #32]
  4453e0:	str	xzr, [x23, #232]
  4453e4:	str	xzr, [x23, #200]
  4453e8:	ldr	x23, [sp, #48]
  4453ec:	ldp	x29, x30, [sp], #64
  4453f0:	ret
  4453f4:	cbz	x0, 445470 <_obstack_memory_used@@Base+0x42d4>
  4453f8:	stp	x29, x30, [sp, #-48]!
  4453fc:	mov	x29, sp
  445400:	stp	x19, x20, [sp, #16]
  445404:	mov	x20, x0
  445408:	ldr	x0, [x0]
  44540c:	cmp	x0, #0x0
  445410:	b.le	445458 <_obstack_memory_used@@Base+0x42bc>
  445414:	str	x21, [sp, #32]
  445418:	mov	x19, #0x0                   	// #0
  44541c:	mov	x21, #0x0                   	// #0
  445420:	ldr	x1, [x20, #16]
  445424:	add	x1, x1, x19
  445428:	ldr	x0, [x1, #40]
  44542c:	bl	4047c0 <free@plt>
  445430:	ldr	x1, [x20, #16]
  445434:	add	x1, x1, x19
  445438:	ldr	x0, [x1, #16]
  44543c:	bl	4047c0 <free@plt>
  445440:	add	x21, x21, #0x1
  445444:	add	x19, x19, #0x30
  445448:	ldr	x0, [x20]
  44544c:	cmp	x0, x21
  445450:	b.gt	445420 <_obstack_memory_used@@Base+0x4284>
  445454:	ldr	x21, [sp, #32]
  445458:	ldr	x0, [x20, #16]
  44545c:	bl	4047c0 <free@plt>
  445460:	mov	w0, #0x0                   	// #0
  445464:	ldp	x19, x20, [sp, #16]
  445468:	ldp	x29, x30, [sp], #48
  44546c:	ret
  445470:	mov	w0, #0x0                   	// #0
  445474:	ret
  445478:	stp	x29, x30, [sp, #-48]!
  44547c:	mov	x29, sp
  445480:	mov	x3, x0
  445484:	ldr	x5, [x1, #56]
  445488:	ldrb	w2, [x1, #48]
  44548c:	cmp	w2, #0xb
  445490:	b.hi	445514 <_obstack_memory_used@@Base+0x4378>  // b.pmore
  445494:	cmp	w2, #0x9
  445498:	b.hi	445530 <_obstack_memory_used@@Base+0x4394>  // b.pmore
  44549c:	cmp	w2, #0x4
  4454a0:	b.eq	445654 <_obstack_memory_used@@Base+0x44b8>  // b.none
  4454a4:	b.ls	4454d4 <_obstack_memory_used@@Base+0x4338>  // b.plast
  4454a8:	sub	w4, w2, #0x8
  4454ac:	and	w4, w4, #0xff
  4454b0:	cmp	w4, #0x1
  4454b4:	b.hi	445690 <_obstack_memory_used@@Base+0x44f4>  // b.pmore
  4454b8:	ldr	x1, [x1, #32]
  4454bc:	add	x5, x5, x5, lsl #1
  4454c0:	ldr	x0, [x3, #40]
  4454c4:	ldr	x1, [x1, #56]
  4454c8:	add	x0, x0, x5, lsl #3
  4454cc:	bl	4423b4 <_obstack_memory_used@@Base+0x1218>
  4454d0:	b	445528 <_obstack_memory_used@@Base+0x438c>
  4454d4:	cmp	w2, #0x2
  4454d8:	b.ne	4456c0 <_obstack_memory_used@@Base+0x4524>  // b.any
  4454dc:	ldr	x1, [x1, #32]
  4454e0:	mov	w0, #0x0                   	// #0
  4454e4:	cbz	x1, 445528 <_obstack_memory_used@@Base+0x438c>
  4454e8:	stp	x19, x20, [sp, #16]
  4454ec:	str	x21, [sp, #32]
  4454f0:	adrp	x3, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  4454f4:	add	x3, x3, #0xe8
  4454f8:	add	x3, x3, #0x20
  4454fc:	mov	w2, #0x59f                 	// #1439
  445500:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  445504:	add	x1, x1, #0x378
  445508:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  44550c:	add	x0, x0, #0x388
  445510:	bl	404ac0 <__assert_fail@plt>
  445514:	cmp	w2, #0xc
  445518:	b.eq	4454b8 <_obstack_memory_used@@Base+0x431c>  // b.none
  44551c:	mov	w0, #0x0                   	// #0
  445520:	cmp	w2, #0x10
  445524:	b.ne	445690 <_obstack_memory_used@@Base+0x44f4>  // b.any
  445528:	ldp	x29, x30, [sp], #48
  44552c:	ret
  445530:	stp	x19, x20, [sp, #16]
  445534:	str	x21, [sp, #32]
  445538:	ldrb	w0, [x0, #176]
  44553c:	orr	w0, w0, #0x1
  445540:	strb	w0, [x3, #176]
  445544:	ldr	x0, [x1, #8]
  445548:	cbz	x0, 4455c0 <_obstack_memory_used@@Base+0x4424>
  44554c:	ldr	x0, [x0, #24]
  445550:	ldr	x19, [x0, #56]
  445554:	ldr	x0, [x1, #16]
  445558:	cbz	x0, 4455cc <_obstack_memory_used@@Base+0x4430>
  44555c:	ldr	x0, [x0, #24]
  445560:	ldr	x20, [x0, #56]
  445564:	tbnz	x19, #63, 4455d8 <_obstack_memory_used@@Base+0x443c>
  445568:	tbnz	x20, #63, 4455fc <_obstack_memory_used@@Base+0x4460>
  44556c:	add	x5, x5, x5, lsl #1
  445570:	lsl	x5, x5, #3
  445574:	ldr	x0, [x3, #40]
  445578:	add	x21, x0, x5
  44557c:	mov	x1, #0x2                   	// #2
  445580:	str	x1, [x0, x5]
  445584:	mov	x0, #0x10                  	// #16
  445588:	bl	404310 <malloc@plt>
  44558c:	str	x0, [x21, #16]
  445590:	cbz	x0, 4456d8 <_obstack_memory_used@@Base+0x453c>
  445594:	cmp	x19, x20
  445598:	b.eq	445620 <_obstack_memory_used@@Base+0x4484>  // b.none
  44559c:	mov	x1, #0x2                   	// #2
  4455a0:	str	x1, [x21, #8]
  4455a4:	b.ge	44563c <_obstack_memory_used@@Base+0x44a0>  // b.tcont
  4455a8:	str	x19, [x0]
  4455ac:	str	x20, [x0, #8]
  4455b0:	mov	w0, #0x0                   	// #0
  4455b4:	ldp	x19, x20, [sp, #16]
  4455b8:	ldr	x21, [sp, #32]
  4455bc:	b	445528 <_obstack_memory_used@@Base+0x438c>
  4455c0:	ldr	x0, [x1, #32]
  4455c4:	ldr	x19, [x0, #56]
  4455c8:	b	445554 <_obstack_memory_used@@Base+0x43b8>
  4455cc:	ldr	x0, [x1, #32]
  4455d0:	ldr	x20, [x0, #56]
  4455d4:	b	445564 <_obstack_memory_used@@Base+0x43c8>
  4455d8:	adrp	x3, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  4455dc:	add	x3, x3, #0xe8
  4455e0:	add	x3, x3, #0x20
  4455e4:	mov	w2, #0x5af                 	// #1455
  4455e8:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  4455ec:	add	x1, x1, #0x378
  4455f0:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  4455f4:	add	x0, x0, #0x3a0
  4455f8:	bl	404ac0 <__assert_fail@plt>
  4455fc:	adrp	x3, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  445600:	add	x3, x3, #0xe8
  445604:	add	x3, x3, #0x20
  445608:	mov	w2, #0x5b0                 	// #1456
  44560c:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  445610:	add	x1, x1, #0x378
  445614:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  445618:	add	x0, x0, #0x3b0
  44561c:	bl	404ac0 <__assert_fail@plt>
  445620:	mov	x1, #0x1                   	// #1
  445624:	str	x1, [x21, #8]
  445628:	str	x19, [x0]
  44562c:	mov	w0, #0x0                   	// #0
  445630:	ldp	x19, x20, [sp, #16]
  445634:	ldr	x21, [sp, #32]
  445638:	b	445528 <_obstack_memory_used@@Base+0x438c>
  44563c:	str	x20, [x0]
  445640:	str	x19, [x0, #8]
  445644:	mov	w0, #0x0                   	// #0
  445648:	ldp	x19, x20, [sp, #16]
  44564c:	ldr	x21, [sp, #32]
  445650:	b	445528 <_obstack_memory_used@@Base+0x438c>
  445654:	ldr	x0, [x1, #32]
  445658:	ldr	x2, [x0, #56]
  44565c:	ldr	x0, [x3, #24]
  445660:	str	x2, [x0, x5, lsl #3]
  445664:	ldrb	w1, [x1, #48]
  445668:	mov	w0, #0x0                   	// #0
  44566c:	cmp	w1, #0x4
  445670:	b.ne	445528 <_obstack_memory_used@@Base+0x438c>  // b.any
  445674:	ldr	x1, [x3, #24]
  445678:	add	x2, x5, x5, lsl #1
  44567c:	ldr	x0, [x3, #40]
  445680:	ldr	x1, [x1, x5, lsl #3]
  445684:	add	x0, x0, x2, lsl #3
  445688:	bl	4423b4 <_obstack_memory_used@@Base+0x1218>
  44568c:	b	445528 <_obstack_memory_used@@Base+0x438c>
  445690:	tbz	w2, #3, 4456c0 <_obstack_memory_used@@Base+0x4524>
  445694:	stp	x19, x20, [sp, #16]
  445698:	str	x21, [sp, #32]
  44569c:	adrp	x3, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  4456a0:	add	x3, x3, #0xe8
  4456a4:	add	x3, x3, #0x20
  4456a8:	mov	w2, #0x5c2                 	// #1474
  4456ac:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  4456b0:	add	x1, x1, #0x378
  4456b4:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  4456b8:	add	x0, x0, #0x3c0
  4456bc:	bl	404ac0 <__assert_fail@plt>
  4456c0:	ldr	x0, [x1, #32]
  4456c4:	ldr	x1, [x0, #56]
  4456c8:	ldr	x0, [x3, #24]
  4456cc:	str	x1, [x0, x5, lsl #3]
  4456d0:	mov	w0, #0x0                   	// #0
  4456d4:	b	445528 <_obstack_memory_used@@Base+0x438c>
  4456d8:	mov	w0, #0xc                   	// #12
  4456dc:	ldp	x19, x20, [sp, #16]
  4456e0:	ldr	x21, [sp, #32]
  4456e4:	b	445528 <_obstack_memory_used@@Base+0x438c>
  4456e8:	stp	x29, x30, [sp, #-48]!
  4456ec:	mov	x29, sp
  4456f0:	stp	x19, x20, [sp, #16]
  4456f4:	str	x21, [sp, #32]
  4456f8:	mov	x20, x0
  4456fc:	ldr	x19, [x0]
  445700:	sub	x19, x19, #0x1
  445704:	str	x19, [x0]
  445708:	tbnz	x19, #63, 445788 <_obstack_memory_used@@Base+0x45ec>
  44570c:	mov	x0, x3
  445710:	mov	x21, x4
  445714:	add	x19, x19, x19, lsl #1
  445718:	lsl	x19, x19, #4
  44571c:	ldr	x3, [x20, #16]
  445720:	ldr	x3, [x3, x19]
  445724:	str	x3, [x1]
  445728:	ldr	x1, [x20, #16]
  44572c:	add	x1, x1, x19
  445730:	lsl	x2, x2, #4
  445734:	ldr	x1, [x1, #16]
  445738:	bl	403f70 <memcpy@plt>
  44573c:	ldr	x0, [x21, #16]
  445740:	bl	4047c0 <free@plt>
  445744:	ldr	x0, [x20, #16]
  445748:	add	x0, x0, x19
  44574c:	ldr	x0, [x0, #16]
  445750:	bl	4047c0 <free@plt>
  445754:	ldr	x0, [x20, #16]
  445758:	add	x0, x0, x19
  44575c:	ldp	x2, x3, [x0, #24]
  445760:	stp	x2, x3, [x21]
  445764:	ldr	x0, [x0, #40]
  445768:	str	x0, [x21, #16]
  44576c:	ldr	x0, [x20, #16]
  445770:	add	x19, x0, x19
  445774:	ldr	x0, [x19, #8]
  445778:	ldp	x19, x20, [sp, #16]
  44577c:	ldr	x21, [sp, #32]
  445780:	ldp	x29, x30, [sp], #48
  445784:	ret
  445788:	adrp	x3, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  44578c:	add	x3, x3, #0xe8
  445790:	add	x3, x3, #0x30
  445794:	mov	w2, #0x553                 	// #1363
  445798:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  44579c:	add	x1, x1, #0x3e8
  4457a0:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  4457a4:	add	x0, x0, #0x3f8
  4457a8:	bl	404ac0 <__assert_fail@plt>
  4457ac:	stp	x29, x30, [sp, #-64]!
  4457b0:	mov	x29, sp
  4457b4:	stp	x19, x20, [sp, #16]
  4457b8:	stp	x21, x22, [sp, #32]
  4457bc:	stp	x23, x24, [sp, #48]
  4457c0:	mov	x21, x0
  4457c4:	mov	x19, x1
  4457c8:	mov	x20, x2
  4457cc:	mov	x23, x3
  4457d0:	mov	x22, x4
  4457d4:	tbz	w5, #22, 44580c <_obstack_memory_used@@Base+0x4670>
  4457d8:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  4457dc:	add	x1, x1, #0x410
  4457e0:	mov	x0, x4
  4457e4:	bl	404720 <strcmp@plt>
  4457e8:	cbz	w0, 445864 <_obstack_memory_used@@Base+0x46c8>
  4457ec:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  4457f0:	add	x1, x1, #0x418
  4457f4:	mov	x0, x22
  4457f8:	bl	404720 <strcmp@plt>
  4457fc:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  445800:	add	x1, x1, #0x408
  445804:	cmp	w0, #0x0
  445808:	csel	x22, x1, x22, eq  // eq = none
  44580c:	ldr	x0, [x20, #72]
  445810:	ldr	x1, [x23]
  445814:	cmp	x1, x0
  445818:	b.eq	445870 <_obstack_memory_used@@Base+0x46d4>  // b.none
  44581c:	ldr	x24, [x20, #24]
  445820:	ldr	x23, [x20, #72]
  445824:	add	x0, x23, #0x1
  445828:	str	x0, [x20, #72]
  44582c:	mov	x0, x22
  445830:	bl	4040a0 <wctype@plt>
  445834:	str	x0, [x24, x23, lsl #3]
  445838:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  44583c:	add	x1, x1, #0x420
  445840:	mov	x0, x22
  445844:	bl	404720 <strcmp@plt>
  445848:	mov	w20, w0
  44584c:	cbnz	w0, 445928 <_obstack_memory_used@@Base+0x478c>
  445850:	cbnz	x21, 445894 <_obstack_memory_used@@Base+0x46f8>
  445854:	bl	404750 <__ctype_b_loc@plt>
  445858:	mov	x2, #0x0                   	// #0
  44585c:	mov	x6, #0x1                   	// #1
  445860:	b	4458e8 <_obstack_memory_used@@Base+0x474c>
  445864:	adrp	x22, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  445868:	add	x22, x22, #0x408
  44586c:	b	44580c <_obstack_memory_used@@Base+0x4670>
  445870:	lsl	x0, x0, #1
  445874:	add	x24, x0, #0x1
  445878:	lsl	x1, x24, #3
  44587c:	ldr	x0, [x20, #24]
  445880:	bl	404540 <realloc@plt>
  445884:	cbz	x0, 446190 <_obstack_memory_used@@Base+0x4ff4>
  445888:	str	x0, [x20, #24]
  44588c:	str	x24, [x23]
  445890:	b	44581c <_obstack_memory_used@@Base+0x4680>
  445894:	bl	404750 <__ctype_b_loc@plt>
  445898:	mov	x4, x0
  44589c:	mov	x1, #0x0                   	// #0
  4458a0:	mov	x5, #0x1                   	// #1
  4458a4:	b	4458b4 <_obstack_memory_used@@Base+0x4718>
  4458a8:	add	x1, x1, #0x1
  4458ac:	cmp	x1, #0x100
  4458b0:	b.eq	446194 <_obstack_memory_used@@Base+0x4ff8>  // b.none
  4458b4:	ldr	x0, [x4]
  4458b8:	ldrh	w2, [x0, x1, lsl #1]
  4458bc:	tbz	w2, #3, 4458a8 <_obstack_memory_used@@Base+0x470c>
  4458c0:	ldrb	w2, [x21, x1]
  4458c4:	ubfx	x0, x2, #6, #2
  4458c8:	lsl	x2, x5, x2
  4458cc:	ldr	x3, [x19, x0, lsl #3]
  4458d0:	orr	x2, x3, x2
  4458d4:	str	x2, [x19, x0, lsl #3]
  4458d8:	b	4458a8 <_obstack_memory_used@@Base+0x470c>
  4458dc:	add	x2, x2, #0x1
  4458e0:	cmp	x2, #0x100
  4458e4:	b.eq	446194 <_obstack_memory_used@@Base+0x4ff8>  // b.none
  4458e8:	ldr	x1, [x0]
  4458ec:	ldrh	w1, [x1, x2, lsl #1]
  4458f0:	tbz	w1, #3, 4458dc <_obstack_memory_used@@Base+0x4740>
  4458f4:	add	x3, x2, #0x3f
  4458f8:	cmp	x2, #0x0
  4458fc:	csel	x3, x3, x2, lt  // lt = tstop
  445900:	asr	x3, x3, #6
  445904:	negs	x5, x2
  445908:	and	x4, x2, #0x3f
  44590c:	and	x5, x5, #0x3f
  445910:	csneg	x4, x4, x5, mi  // mi = first
  445914:	lsl	x4, x6, x4
  445918:	ldr	x1, [x19, x3, lsl #3]
  44591c:	orr	x4, x1, x4
  445920:	str	x4, [x19, x3, lsl #3]
  445924:	b	4458dc <_obstack_memory_used@@Base+0x4740>
  445928:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  44592c:	add	x1, x1, #0x428
  445930:	mov	x0, x22
  445934:	bl	404720 <strcmp@plt>
  445938:	mov	w20, w0
  44593c:	cbnz	w0, 4459e8 <_obstack_memory_used@@Base+0x484c>
  445940:	cbnz	x21, 445954 <_obstack_memory_used@@Base+0x47b8>
  445944:	bl	404750 <__ctype_b_loc@plt>
  445948:	mov	x1, #0x0                   	// #0
  44594c:	mov	x5, #0x1                   	// #1
  445950:	b	4459a8 <_obstack_memory_used@@Base+0x480c>
  445954:	bl	404750 <__ctype_b_loc@plt>
  445958:	mov	x4, x0
  44595c:	mov	x1, #0x0                   	// #0
  445960:	mov	x5, #0x1                   	// #1
  445964:	b	445974 <_obstack_memory_used@@Base+0x47d8>
  445968:	add	x1, x1, #0x1
  44596c:	cmp	x1, #0x100
  445970:	b.eq	446194 <_obstack_memory_used@@Base+0x4ff8>  // b.none
  445974:	ldr	x0, [x4]
  445978:	ldrh	w0, [x0, x1, lsl #1]
  44597c:	tbz	w0, #1, 445968 <_obstack_memory_used@@Base+0x47cc>
  445980:	ldrb	w0, [x21, x1]
  445984:	ubfx	x3, x0, #6, #2
  445988:	lsl	x0, x5, x0
  44598c:	ldr	x2, [x19, x3, lsl #3]
  445990:	orr	x0, x2, x0
  445994:	str	x0, [x19, x3, lsl #3]
  445998:	b	445968 <_obstack_memory_used@@Base+0x47cc>
  44599c:	add	x1, x1, #0x1
  4459a0:	cmp	x1, #0x100
  4459a4:	b.eq	446194 <_obstack_memory_used@@Base+0x4ff8>  // b.none
  4459a8:	ldr	x2, [x0]
  4459ac:	ldrh	w2, [x2, x1, lsl #1]
  4459b0:	tbz	w2, #1, 44599c <_obstack_memory_used@@Base+0x4800>
  4459b4:	add	x2, x1, #0x3f
  4459b8:	cmp	x1, #0x0
  4459bc:	csel	x2, x2, x1, lt  // lt = tstop
  4459c0:	asr	x2, x2, #6
  4459c4:	negs	x4, x1
  4459c8:	and	x3, x1, #0x3f
  4459cc:	and	x4, x4, #0x3f
  4459d0:	csneg	x3, x3, x4, mi  // mi = first
  4459d4:	lsl	x3, x5, x3
  4459d8:	ldr	x4, [x19, x2, lsl #3]
  4459dc:	orr	x3, x4, x3
  4459e0:	str	x3, [x19, x2, lsl #3]
  4459e4:	b	44599c <_obstack_memory_used@@Base+0x4800>
  4459e8:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  4459ec:	add	x1, x1, #0x418
  4459f0:	mov	x0, x22
  4459f4:	bl	404720 <strcmp@plt>
  4459f8:	mov	w20, w0
  4459fc:	cbnz	w0, 445aac <_obstack_memory_used@@Base+0x4910>
  445a00:	cbnz	x21, 445a18 <_obstack_memory_used@@Base+0x487c>
  445a04:	bl	404750 <__ctype_b_loc@plt>
  445a08:	mov	x4, x0
  445a0c:	mov	x0, #0x0                   	// #0
  445a10:	mov	x5, #0x1                   	// #1
  445a14:	b	445a6c <_obstack_memory_used@@Base+0x48d0>
  445a18:	bl	404750 <__ctype_b_loc@plt>
  445a1c:	mov	x4, x0
  445a20:	mov	x0, #0x0                   	// #0
  445a24:	mov	x5, #0x1                   	// #1
  445a28:	b	445a38 <_obstack_memory_used@@Base+0x489c>
  445a2c:	add	x0, x0, #0x1
  445a30:	cmp	x0, #0x100
  445a34:	b.eq	446194 <_obstack_memory_used@@Base+0x4ff8>  // b.none
  445a38:	ldr	x1, [x4]
  445a3c:	ldrh	w1, [x1, x0, lsl #1]
  445a40:	tbz	w1, #9, 445a2c <_obstack_memory_used@@Base+0x4890>
  445a44:	ldrb	w1, [x21, x0]
  445a48:	ubfx	x3, x1, #6, #2
  445a4c:	lsl	x1, x5, x1
  445a50:	ldr	x2, [x19, x3, lsl #3]
  445a54:	orr	x1, x2, x1
  445a58:	str	x1, [x19, x3, lsl #3]
  445a5c:	b	445a2c <_obstack_memory_used@@Base+0x4890>
  445a60:	add	x0, x0, #0x1
  445a64:	cmp	x0, #0x100
  445a68:	b.eq	446194 <_obstack_memory_used@@Base+0x4ff8>  // b.none
  445a6c:	ldr	x1, [x4]
  445a70:	ldrh	w1, [x1, x0, lsl #1]
  445a74:	tbz	w1, #9, 445a60 <_obstack_memory_used@@Base+0x48c4>
  445a78:	add	x1, x0, #0x3f
  445a7c:	cmp	x0, #0x0
  445a80:	csel	x1, x1, x0, lt  // lt = tstop
  445a84:	asr	x1, x1, #6
  445a88:	negs	x3, x0
  445a8c:	and	x2, x0, #0x3f
  445a90:	and	x3, x3, #0x3f
  445a94:	csneg	x2, x2, x3, mi  // mi = first
  445a98:	lsl	x2, x5, x2
  445a9c:	ldr	x3, [x19, x1, lsl #3]
  445aa0:	orr	x2, x3, x2
  445aa4:	str	x2, [x19, x1, lsl #3]
  445aa8:	b	445a60 <_obstack_memory_used@@Base+0x48c4>
  445aac:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  445ab0:	add	x1, x1, #0x430
  445ab4:	mov	x0, x22
  445ab8:	bl	404720 <strcmp@plt>
  445abc:	mov	w20, w0
  445ac0:	cbnz	w0, 445b70 <_obstack_memory_used@@Base+0x49d4>
  445ac4:	cbnz	x21, 445adc <_obstack_memory_used@@Base+0x4940>
  445ac8:	bl	404750 <__ctype_b_loc@plt>
  445acc:	mov	x4, x0
  445ad0:	mov	x0, #0x0                   	// #0
  445ad4:	mov	x5, #0x1                   	// #1
  445ad8:	b	445b30 <_obstack_memory_used@@Base+0x4994>
  445adc:	bl	404750 <__ctype_b_loc@plt>
  445ae0:	mov	x4, x0
  445ae4:	mov	x0, #0x0                   	// #0
  445ae8:	mov	x5, #0x1                   	// #1
  445aec:	b	445afc <_obstack_memory_used@@Base+0x4960>
  445af0:	add	x0, x0, #0x1
  445af4:	cmp	x0, #0x100
  445af8:	b.eq	446194 <_obstack_memory_used@@Base+0x4ff8>  // b.none
  445afc:	ldr	x1, [x4]
  445b00:	ldrh	w1, [x1, x0, lsl #1]
  445b04:	tbz	w1, #13, 445af0 <_obstack_memory_used@@Base+0x4954>
  445b08:	ldrb	w1, [x21, x0]
  445b0c:	ubfx	x3, x1, #6, #2
  445b10:	lsl	x1, x5, x1
  445b14:	ldr	x2, [x19, x3, lsl #3]
  445b18:	orr	x1, x2, x1
  445b1c:	str	x1, [x19, x3, lsl #3]
  445b20:	b	445af0 <_obstack_memory_used@@Base+0x4954>
  445b24:	add	x0, x0, #0x1
  445b28:	cmp	x0, #0x100
  445b2c:	b.eq	446194 <_obstack_memory_used@@Base+0x4ff8>  // b.none
  445b30:	ldr	x1, [x4]
  445b34:	ldrh	w1, [x1, x0, lsl #1]
  445b38:	tbz	w1, #13, 445b24 <_obstack_memory_used@@Base+0x4988>
  445b3c:	add	x1, x0, #0x3f
  445b40:	cmp	x0, #0x0
  445b44:	csel	x1, x1, x0, lt  // lt = tstop
  445b48:	asr	x1, x1, #6
  445b4c:	negs	x3, x0
  445b50:	and	x2, x0, #0x3f
  445b54:	and	x3, x3, #0x3f
  445b58:	csneg	x2, x2, x3, mi  // mi = first
  445b5c:	lsl	x2, x5, x2
  445b60:	ldr	x3, [x19, x1, lsl #3]
  445b64:	orr	x2, x3, x2
  445b68:	str	x2, [x19, x1, lsl #3]
  445b6c:	b	445b24 <_obstack_memory_used@@Base+0x4988>
  445b70:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  445b74:	add	x1, x1, #0x408
  445b78:	mov	x0, x22
  445b7c:	bl	404720 <strcmp@plt>
  445b80:	mov	w20, w0
  445b84:	cbnz	w0, 445c34 <_obstack_memory_used@@Base+0x4a98>
  445b88:	cbnz	x21, 445ba0 <_obstack_memory_used@@Base+0x4a04>
  445b8c:	bl	404750 <__ctype_b_loc@plt>
  445b90:	mov	x4, x0
  445b94:	mov	x0, #0x0                   	// #0
  445b98:	mov	x5, #0x1                   	// #1
  445b9c:	b	445bf4 <_obstack_memory_used@@Base+0x4a58>
  445ba0:	bl	404750 <__ctype_b_loc@plt>
  445ba4:	mov	x3, x0
  445ba8:	mov	x0, #0x0                   	// #0
  445bac:	mov	x5, #0x1                   	// #1
  445bb0:	b	445bc0 <_obstack_memory_used@@Base+0x4a24>
  445bb4:	add	x0, x0, #0x1
  445bb8:	cmp	x0, #0x100
  445bbc:	b.eq	446194 <_obstack_memory_used@@Base+0x4ff8>  // b.none
  445bc0:	ldr	x1, [x3]
  445bc4:	ldrh	w1, [x1, x0, lsl #1]
  445bc8:	tbz	w1, #10, 445bb4 <_obstack_memory_used@@Base+0x4a18>
  445bcc:	ldrb	w1, [x21, x0]
  445bd0:	ubfx	x4, x1, #6, #2
  445bd4:	lsl	x1, x5, x1
  445bd8:	ldr	x2, [x19, x4, lsl #3]
  445bdc:	orr	x1, x2, x1
  445be0:	str	x1, [x19, x4, lsl #3]
  445be4:	b	445bb4 <_obstack_memory_used@@Base+0x4a18>
  445be8:	add	x0, x0, #0x1
  445bec:	cmp	x0, #0x100
  445bf0:	b.eq	446194 <_obstack_memory_used@@Base+0x4ff8>  // b.none
  445bf4:	ldr	x1, [x4]
  445bf8:	ldrh	w1, [x1, x0, lsl #1]
  445bfc:	tbz	w1, #10, 445be8 <_obstack_memory_used@@Base+0x4a4c>
  445c00:	add	x1, x0, #0x3f
  445c04:	cmp	x0, #0x0
  445c08:	csel	x1, x1, x0, lt  // lt = tstop
  445c0c:	asr	x1, x1, #6
  445c10:	negs	x3, x0
  445c14:	and	x2, x0, #0x3f
  445c18:	and	x3, x3, #0x3f
  445c1c:	csneg	x2, x2, x3, mi  // mi = first
  445c20:	lsl	x2, x5, x2
  445c24:	ldr	x3, [x19, x1, lsl #3]
  445c28:	orr	x2, x3, x2
  445c2c:	str	x2, [x19, x1, lsl #3]
  445c30:	b	445be8 <_obstack_memory_used@@Base+0x4a4c>
  445c34:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  445c38:	add	x1, x1, #0x438
  445c3c:	mov	x0, x22
  445c40:	bl	404720 <strcmp@plt>
  445c44:	mov	w20, w0
  445c48:	cbnz	w0, 445cf8 <_obstack_memory_used@@Base+0x4b5c>
  445c4c:	cbnz	x21, 445c64 <_obstack_memory_used@@Base+0x4ac8>
  445c50:	bl	404750 <__ctype_b_loc@plt>
  445c54:	mov	x4, x0
  445c58:	mov	x0, #0x0                   	// #0
  445c5c:	mov	x5, #0x1                   	// #1
  445c60:	b	445cb8 <_obstack_memory_used@@Base+0x4b1c>
  445c64:	bl	404750 <__ctype_b_loc@plt>
  445c68:	mov	x1, x0
  445c6c:	mov	x0, #0x0                   	// #0
  445c70:	mov	x5, #0x1                   	// #1
  445c74:	b	445c84 <_obstack_memory_used@@Base+0x4ae8>
  445c78:	add	x0, x0, #0x1
  445c7c:	cmp	x0, #0x100
  445c80:	b.eq	446194 <_obstack_memory_used@@Base+0x4ff8>  // b.none
  445c84:	ldr	x2, [x1]
  445c88:	ldrh	w2, [x2, x0, lsl #1]
  445c8c:	tbz	w2, #11, 445c78 <_obstack_memory_used@@Base+0x4adc>
  445c90:	ldrb	w2, [x21, x0]
  445c94:	ubfx	x4, x2, #6, #2
  445c98:	lsl	x2, x5, x2
  445c9c:	ldr	x3, [x19, x4, lsl #3]
  445ca0:	orr	x2, x3, x2
  445ca4:	str	x2, [x19, x4, lsl #3]
  445ca8:	b	445c78 <_obstack_memory_used@@Base+0x4adc>
  445cac:	add	x0, x0, #0x1
  445cb0:	cmp	x0, #0x100
  445cb4:	b.eq	446194 <_obstack_memory_used@@Base+0x4ff8>  // b.none
  445cb8:	ldr	x1, [x4]
  445cbc:	ldrh	w1, [x1, x0, lsl #1]
  445cc0:	tbz	w1, #11, 445cac <_obstack_memory_used@@Base+0x4b10>
  445cc4:	add	x1, x0, #0x3f
  445cc8:	cmp	x0, #0x0
  445ccc:	csel	x1, x1, x0, lt  // lt = tstop
  445cd0:	asr	x1, x1, #6
  445cd4:	negs	x3, x0
  445cd8:	and	x2, x0, #0x3f
  445cdc:	and	x3, x3, #0x3f
  445ce0:	csneg	x2, x2, x3, mi  // mi = first
  445ce4:	lsl	x2, x5, x2
  445ce8:	ldr	x3, [x19, x1, lsl #3]
  445cec:	orr	x2, x3, x2
  445cf0:	str	x2, [x19, x1, lsl #3]
  445cf4:	b	445cac <_obstack_memory_used@@Base+0x4b10>
  445cf8:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  445cfc:	add	x1, x1, #0x440
  445d00:	mov	x0, x22
  445d04:	bl	404720 <strcmp@plt>
  445d08:	mov	w20, w0
  445d0c:	cbnz	w0, 445dbc <_obstack_memory_used@@Base+0x4c20>
  445d10:	cbnz	x21, 445d28 <_obstack_memory_used@@Base+0x4b8c>
  445d14:	bl	404750 <__ctype_b_loc@plt>
  445d18:	mov	x4, x0
  445d1c:	mov	x0, #0x0                   	// #0
  445d20:	mov	x5, #0x1                   	// #1
  445d24:	b	445d7c <_obstack_memory_used@@Base+0x4be0>
  445d28:	bl	404750 <__ctype_b_loc@plt>
  445d2c:	mov	x2, x0
  445d30:	mov	x0, #0x0                   	// #0
  445d34:	mov	x5, #0x1                   	// #1
  445d38:	b	445d48 <_obstack_memory_used@@Base+0x4bac>
  445d3c:	add	x0, x0, #0x1
  445d40:	cmp	x0, #0x100
  445d44:	b.eq	446194 <_obstack_memory_used@@Base+0x4ff8>  // b.none
  445d48:	ldr	x1, [x2]
  445d4c:	ldrh	w1, [x1, x0, lsl #1]
  445d50:	tbz	w1, #14, 445d3c <_obstack_memory_used@@Base+0x4ba0>
  445d54:	ldrb	w1, [x21, x0]
  445d58:	ubfx	x4, x1, #6, #2
  445d5c:	lsl	x1, x5, x1
  445d60:	ldr	x3, [x19, x4, lsl #3]
  445d64:	orr	x1, x3, x1
  445d68:	str	x1, [x19, x4, lsl #3]
  445d6c:	b	445d3c <_obstack_memory_used@@Base+0x4ba0>
  445d70:	add	x0, x0, #0x1
  445d74:	cmp	x0, #0x100
  445d78:	b.eq	446194 <_obstack_memory_used@@Base+0x4ff8>  // b.none
  445d7c:	ldr	x1, [x4]
  445d80:	ldrh	w1, [x1, x0, lsl #1]
  445d84:	tbz	w1, #14, 445d70 <_obstack_memory_used@@Base+0x4bd4>
  445d88:	add	x1, x0, #0x3f
  445d8c:	cmp	x0, #0x0
  445d90:	csel	x1, x1, x0, lt  // lt = tstop
  445d94:	asr	x1, x1, #6
  445d98:	negs	x2, x0
  445d9c:	and	x3, x0, #0x3f
  445da0:	and	x2, x2, #0x3f
  445da4:	csneg	x2, x3, x2, mi  // mi = first
  445da8:	lsl	x2, x5, x2
  445dac:	ldr	x3, [x19, x1, lsl #3]
  445db0:	orr	x2, x3, x2
  445db4:	str	x2, [x19, x1, lsl #3]
  445db8:	b	445d70 <_obstack_memory_used@@Base+0x4bd4>
  445dbc:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  445dc0:	add	x1, x1, #0x410
  445dc4:	mov	x0, x22
  445dc8:	bl	404720 <strcmp@plt>
  445dcc:	mov	w20, w0
  445dd0:	cbnz	w0, 445e80 <_obstack_memory_used@@Base+0x4ce4>
  445dd4:	cbnz	x21, 445dec <_obstack_memory_used@@Base+0x4c50>
  445dd8:	bl	404750 <__ctype_b_loc@plt>
  445ddc:	mov	x4, x0
  445de0:	mov	x0, #0x0                   	// #0
  445de4:	mov	x5, #0x1                   	// #1
  445de8:	b	445e40 <_obstack_memory_used@@Base+0x4ca4>
  445dec:	bl	404750 <__ctype_b_loc@plt>
  445df0:	mov	x2, x0
  445df4:	mov	x0, #0x0                   	// #0
  445df8:	mov	x5, #0x1                   	// #1
  445dfc:	b	445e0c <_obstack_memory_used@@Base+0x4c70>
  445e00:	add	x0, x0, #0x1
  445e04:	cmp	x0, #0x100
  445e08:	b.eq	446194 <_obstack_memory_used@@Base+0x4ff8>  // b.none
  445e0c:	ldr	x1, [x2]
  445e10:	ldrh	w1, [x1, x0, lsl #1]
  445e14:	tbz	w1, #8, 445e00 <_obstack_memory_used@@Base+0x4c64>
  445e18:	ldrb	w1, [x21, x0]
  445e1c:	ubfx	x4, x1, #6, #2
  445e20:	lsl	x1, x5, x1
  445e24:	ldr	x3, [x19, x4, lsl #3]
  445e28:	orr	x1, x3, x1
  445e2c:	str	x1, [x19, x4, lsl #3]
  445e30:	b	445e00 <_obstack_memory_used@@Base+0x4c64>
  445e34:	add	x0, x0, #0x1
  445e38:	cmp	x0, #0x100
  445e3c:	b.eq	446194 <_obstack_memory_used@@Base+0x4ff8>  // b.none
  445e40:	ldr	x1, [x4]
  445e44:	ldrh	w1, [x1, x0, lsl #1]
  445e48:	tbz	w1, #8, 445e34 <_obstack_memory_used@@Base+0x4c98>
  445e4c:	add	x1, x0, #0x3f
  445e50:	cmp	x0, #0x0
  445e54:	csel	x1, x1, x0, lt  // lt = tstop
  445e58:	asr	x1, x1, #6
  445e5c:	negs	x2, x0
  445e60:	and	x3, x0, #0x3f
  445e64:	and	x2, x2, #0x3f
  445e68:	csneg	x2, x3, x2, mi  // mi = first
  445e6c:	lsl	x2, x5, x2
  445e70:	ldr	x3, [x19, x1, lsl #3]
  445e74:	orr	x2, x3, x2
  445e78:	str	x2, [x19, x1, lsl #3]
  445e7c:	b	445e34 <_obstack_memory_used@@Base+0x4c98>
  445e80:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  445e84:	add	x1, x1, #0x448
  445e88:	mov	x0, x22
  445e8c:	bl	404720 <strcmp@plt>
  445e90:	mov	w20, w0
  445e94:	cbnz	w0, 445f44 <_obstack_memory_used@@Base+0x4da8>
  445e98:	cbnz	x21, 445eb0 <_obstack_memory_used@@Base+0x4d14>
  445e9c:	bl	404750 <__ctype_b_loc@plt>
  445ea0:	mov	x3, x0
  445ea4:	mov	x0, #0x0                   	// #0
  445ea8:	mov	x5, #0x1                   	// #1
  445eac:	b	445f04 <_obstack_memory_used@@Base+0x4d68>
  445eb0:	bl	404750 <__ctype_b_loc@plt>
  445eb4:	mov	x2, x0
  445eb8:	mov	x0, #0x0                   	// #0
  445ebc:	mov	x5, #0x1                   	// #1
  445ec0:	b	445ed0 <_obstack_memory_used@@Base+0x4d34>
  445ec4:	add	x0, x0, #0x1
  445ec8:	cmp	x0, #0x100
  445ecc:	b.eq	446194 <_obstack_memory_used@@Base+0x4ff8>  // b.none
  445ed0:	ldr	x1, [x2]
  445ed4:	ldrh	w1, [x1, x0, lsl #1]
  445ed8:	tbz	w1, #0, 445ec4 <_obstack_memory_used@@Base+0x4d28>
  445edc:	ldrb	w1, [x21, x0]
  445ee0:	ubfx	x4, x1, #6, #2
  445ee4:	lsl	x1, x5, x1
  445ee8:	ldr	x3, [x19, x4, lsl #3]
  445eec:	orr	x1, x3, x1
  445ef0:	str	x1, [x19, x4, lsl #3]
  445ef4:	b	445ec4 <_obstack_memory_used@@Base+0x4d28>
  445ef8:	add	x0, x0, #0x1
  445efc:	cmp	x0, #0x100
  445f00:	b.eq	446194 <_obstack_memory_used@@Base+0x4ff8>  // b.none
  445f04:	ldr	x1, [x3]
  445f08:	ldrh	w1, [x1, x0, lsl #1]
  445f0c:	tbz	w1, #0, 445ef8 <_obstack_memory_used@@Base+0x4d5c>
  445f10:	add	x1, x0, #0x3f
  445f14:	cmp	x0, #0x0
  445f18:	csel	x1, x1, x0, lt  // lt = tstop
  445f1c:	asr	x1, x1, #6
  445f20:	negs	x2, x0
  445f24:	and	x4, x0, #0x3f
  445f28:	and	x2, x2, #0x3f
  445f2c:	csneg	x2, x4, x2, mi  // mi = first
  445f30:	lsl	x2, x5, x2
  445f34:	ldr	x4, [x19, x1, lsl #3]
  445f38:	orr	x2, x4, x2
  445f3c:	str	x2, [x19, x1, lsl #3]
  445f40:	b	445ef8 <_obstack_memory_used@@Base+0x4d5c>
  445f44:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  445f48:	add	x1, x1, #0x450
  445f4c:	mov	x0, x22
  445f50:	bl	404720 <strcmp@plt>
  445f54:	mov	w20, w0
  445f58:	cbnz	w0, 446008 <_obstack_memory_used@@Base+0x4e6c>
  445f5c:	cbnz	x21, 445f74 <_obstack_memory_used@@Base+0x4dd8>
  445f60:	bl	404750 <__ctype_b_loc@plt>
  445f64:	mov	x3, x0
  445f68:	mov	x0, #0x0                   	// #0
  445f6c:	mov	x5, #0x1                   	// #1
  445f70:	b	445fc8 <_obstack_memory_used@@Base+0x4e2c>
  445f74:	bl	404750 <__ctype_b_loc@plt>
  445f78:	mov	x2, x0
  445f7c:	mov	x0, #0x0                   	// #0
  445f80:	mov	x5, #0x1                   	// #1
  445f84:	b	445f94 <_obstack_memory_used@@Base+0x4df8>
  445f88:	add	x0, x0, #0x1
  445f8c:	cmp	x0, #0x100
  445f90:	b.eq	446194 <_obstack_memory_used@@Base+0x4ff8>  // b.none
  445f94:	ldr	x1, [x2]
  445f98:	ldrsh	w1, [x1, x0, lsl #1]
  445f9c:	tbz	w1, #31, 445f88 <_obstack_memory_used@@Base+0x4dec>
  445fa0:	ldrb	w1, [x21, x0]
  445fa4:	ubfx	x4, x1, #6, #2
  445fa8:	lsl	x1, x5, x1
  445fac:	ldr	x3, [x19, x4, lsl #3]
  445fb0:	orr	x1, x3, x1
  445fb4:	str	x1, [x19, x4, lsl #3]
  445fb8:	b	445f88 <_obstack_memory_used@@Base+0x4dec>
  445fbc:	add	x0, x0, #0x1
  445fc0:	cmp	x0, #0x100
  445fc4:	b.eq	446194 <_obstack_memory_used@@Base+0x4ff8>  // b.none
  445fc8:	ldr	x1, [x3]
  445fcc:	ldrsh	w1, [x1, x0, lsl #1]
  445fd0:	tbz	w1, #31, 445fbc <_obstack_memory_used@@Base+0x4e20>
  445fd4:	add	x1, x0, #0x3f
  445fd8:	cmp	x0, #0x0
  445fdc:	csel	x1, x1, x0, lt  // lt = tstop
  445fe0:	asr	x1, x1, #6
  445fe4:	negs	x2, x0
  445fe8:	and	x4, x0, #0x3f
  445fec:	and	x2, x2, #0x3f
  445ff0:	csneg	x2, x4, x2, mi  // mi = first
  445ff4:	lsl	x2, x5, x2
  445ff8:	ldr	x4, [x19, x1, lsl #3]
  445ffc:	orr	x2, x4, x2
  446000:	str	x2, [x19, x1, lsl #3]
  446004:	b	445fbc <_obstack_memory_used@@Base+0x4e20>
  446008:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  44600c:	add	x1, x1, #0x458
  446010:	mov	x0, x22
  446014:	bl	404720 <strcmp@plt>
  446018:	mov	w20, w0
  44601c:	cbnz	w0, 4460cc <_obstack_memory_used@@Base+0x4f30>
  446020:	cbnz	x21, 446038 <_obstack_memory_used@@Base+0x4e9c>
  446024:	bl	404750 <__ctype_b_loc@plt>
  446028:	mov	x3, x0
  44602c:	mov	x0, #0x0                   	// #0
  446030:	mov	x5, #0x1                   	// #1
  446034:	b	44608c <_obstack_memory_used@@Base+0x4ef0>
  446038:	bl	404750 <__ctype_b_loc@plt>
  44603c:	mov	x2, x0
  446040:	mov	x0, #0x0                   	// #0
  446044:	mov	x5, #0x1                   	// #1
  446048:	b	446058 <_obstack_memory_used@@Base+0x4ebc>
  44604c:	add	x0, x0, #0x1
  446050:	cmp	x0, #0x100
  446054:	b.eq	446194 <_obstack_memory_used@@Base+0x4ff8>  // b.none
  446058:	ldr	x1, [x2]
  44605c:	ldrh	w1, [x1, x0, lsl #1]
  446060:	tbz	w1, #2, 44604c <_obstack_memory_used@@Base+0x4eb0>
  446064:	ldrb	w1, [x21, x0]
  446068:	ubfx	x4, x1, #6, #2
  44606c:	lsl	x1, x5, x1
  446070:	ldr	x3, [x19, x4, lsl #3]
  446074:	orr	x1, x3, x1
  446078:	str	x1, [x19, x4, lsl #3]
  44607c:	b	44604c <_obstack_memory_used@@Base+0x4eb0>
  446080:	add	x0, x0, #0x1
  446084:	cmp	x0, #0x100
  446088:	b.eq	446194 <_obstack_memory_used@@Base+0x4ff8>  // b.none
  44608c:	ldr	x1, [x3]
  446090:	ldrh	w1, [x1, x0, lsl #1]
  446094:	tbz	w1, #2, 446080 <_obstack_memory_used@@Base+0x4ee4>
  446098:	add	x1, x0, #0x3f
  44609c:	cmp	x0, #0x0
  4460a0:	csel	x1, x1, x0, lt  // lt = tstop
  4460a4:	asr	x1, x1, #6
  4460a8:	negs	x2, x0
  4460ac:	and	x4, x0, #0x3f
  4460b0:	and	x2, x2, #0x3f
  4460b4:	csneg	x2, x4, x2, mi  // mi = first
  4460b8:	lsl	x2, x5, x2
  4460bc:	ldr	x4, [x19, x1, lsl #3]
  4460c0:	orr	x2, x4, x2
  4460c4:	str	x2, [x19, x1, lsl #3]
  4460c8:	b	446080 <_obstack_memory_used@@Base+0x4ee4>
  4460cc:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  4460d0:	add	x1, x1, #0x460
  4460d4:	mov	x0, x22
  4460d8:	bl	404720 <strcmp@plt>
  4460dc:	mov	w20, w0
  4460e0:	cbnz	w0, 4461ac <_obstack_memory_used@@Base+0x5010>
  4460e4:	cbnz	x21, 4460fc <_obstack_memory_used@@Base+0x4f60>
  4460e8:	bl	404750 <__ctype_b_loc@plt>
  4460ec:	mov	x3, x0
  4460f0:	mov	x0, #0x0                   	// #0
  4460f4:	mov	x5, #0x1                   	// #1
  4460f8:	b	446150 <_obstack_memory_used@@Base+0x4fb4>
  4460fc:	bl	404750 <__ctype_b_loc@plt>
  446100:	mov	x2, x0
  446104:	mov	x0, #0x0                   	// #0
  446108:	mov	x5, #0x1                   	// #1
  44610c:	b	44611c <_obstack_memory_used@@Base+0x4f80>
  446110:	add	x0, x0, #0x1
  446114:	cmp	x0, #0x100
  446118:	b.eq	446194 <_obstack_memory_used@@Base+0x4ff8>  // b.none
  44611c:	ldr	x1, [x2]
  446120:	ldrh	w1, [x1, x0, lsl #1]
  446124:	tbz	w1, #12, 446110 <_obstack_memory_used@@Base+0x4f74>
  446128:	ldrb	w1, [x21, x0]
  44612c:	ubfx	x4, x1, #6, #2
  446130:	lsl	x1, x5, x1
  446134:	ldr	x3, [x19, x4, lsl #3]
  446138:	orr	x1, x3, x1
  44613c:	str	x1, [x19, x4, lsl #3]
  446140:	b	446110 <_obstack_memory_used@@Base+0x4f74>
  446144:	add	x0, x0, #0x1
  446148:	cmp	x0, #0x100
  44614c:	b.eq	446194 <_obstack_memory_used@@Base+0x4ff8>  // b.none
  446150:	ldr	x1, [x3]
  446154:	ldrh	w1, [x1, x0, lsl #1]
  446158:	tbz	w1, #12, 446144 <_obstack_memory_used@@Base+0x4fa8>
  44615c:	add	x1, x0, #0x3f
  446160:	cmp	x0, #0x0
  446164:	csel	x1, x1, x0, lt  // lt = tstop
  446168:	asr	x1, x1, #6
  44616c:	negs	x2, x0
  446170:	and	x4, x0, #0x3f
  446174:	and	x2, x2, #0x3f
  446178:	csneg	x2, x4, x2, mi  // mi = first
  44617c:	lsl	x2, x5, x2
  446180:	ldr	x4, [x19, x1, lsl #3]
  446184:	orr	x2, x4, x2
  446188:	str	x2, [x19, x1, lsl #3]
  44618c:	b	446144 <_obstack_memory_used@@Base+0x4fa8>
  446190:	mov	w20, #0xc                   	// #12
  446194:	mov	w0, w20
  446198:	ldp	x19, x20, [sp, #16]
  44619c:	ldp	x21, x22, [sp, #32]
  4461a0:	ldp	x23, x24, [sp, #48]
  4461a4:	ldp	x29, x30, [sp], #64
  4461a8:	ret
  4461ac:	mov	w20, #0x4                   	// #4
  4461b0:	b	446194 <_obstack_memory_used@@Base+0x4ff8>
  4461b4:	stp	x29, x30, [sp, #-112]!
  4461b8:	mov	x29, sp
  4461bc:	stp	x19, x20, [sp, #16]
  4461c0:	stp	x21, x22, [sp, #32]
  4461c4:	stp	x23, x24, [sp, #48]
  4461c8:	stp	x25, x26, [sp, #64]
  4461cc:	mov	x21, x0
  4461d0:	mov	x25, x1
  4461d4:	mov	x26, x2
  4461d8:	mov	x20, x3
  4461dc:	and	w24, w4, #0xff
  4461e0:	mov	x23, x5
  4461e4:	str	xzr, [sp, #104]
  4461e8:	mov	x1, #0x1                   	// #1
  4461ec:	mov	x0, #0x20                  	// #32
  4461f0:	bl	4044d0 <calloc@plt>
  4461f4:	mov	x19, x0
  4461f8:	cbz	x0, 446350 <_obstack_memory_used@@Base+0x51b4>
  4461fc:	mov	x1, #0x1                   	// #1
  446200:	mov	x0, #0x50                  	// #80
  446204:	bl	4044d0 <calloc@plt>
  446208:	mov	x22, x0
  44620c:	cbz	x0, 446360 <_obstack_memory_used@@Base+0x51c4>
  446210:	ldrb	w0, [x0, #32]
  446214:	bfxil	w0, w24, #0, #1
  446218:	strb	w0, [x22, #32]
  44621c:	mov	x5, #0x0                   	// #0
  446220:	mov	x4, x26
  446224:	add	x3, sp, #0x68
  446228:	mov	x2, x22
  44622c:	mov	x1, x19
  446230:	mov	x0, x25
  446234:	bl	4457ac <_obstack_memory_used@@Base+0x4610>
  446238:	mov	w25, w0
  44623c:	cbnz	w0, 446378 <_obstack_memory_used@@Base+0x51dc>
  446240:	ldrb	w1, [x20]
  446244:	mov	x3, #0x1                   	// #1
  446248:	cbz	w1, 446268 <_obstack_memory_used@@Base+0x50cc>
  44624c:	ubfx	x0, x1, #6, #2
  446250:	lsl	x1, x3, x1
  446254:	ldr	x2, [x19, x0, lsl #3]
  446258:	orr	x1, x2, x1
  44625c:	str	x1, [x19, x0, lsl #3]
  446260:	ldrb	w1, [x20, #1]!
  446264:	cbnz	w1, 44624c <_obstack_memory_used@@Base+0x50b0>
  446268:	cbz	w24, 446288 <_obstack_memory_used@@Base+0x50ec>
  44626c:	mov	x0, #0x0                   	// #0
  446270:	ldr	x1, [x19, x0, lsl #3]
  446274:	mvn	x1, x1
  446278:	str	x1, [x19, x0, lsl #3]
  44627c:	add	x0, x0, #0x1
  446280:	cmp	x0, #0x4
  446284:	b.ne	446270 <_obstack_memory_used@@Base+0x50d4>  // b.any
  446288:	ldr	w0, [x21, #180]
  44628c:	cmp	w0, #0x1
  446290:	b.le	4462b8 <_obstack_memory_used@@Base+0x511c>
  446294:	ldr	x3, [x21, #120]
  446298:	mov	x0, #0x0                   	// #0
  44629c:	ldr	x1, [x19, x0]
  4462a0:	ldr	x2, [x3, x0]
  4462a4:	and	x1, x1, x2
  4462a8:	str	x1, [x19, x0]
  4462ac:	add	x0, x0, #0x8
  4462b0:	cmp	x0, #0x20
  4462b4:	b.ne	44629c <_obstack_memory_used@@Base+0x5100>  // b.any
  4462b8:	mov	w0, #0x3                   	// #3
  4462bc:	strb	w0, [sp, #96]
  4462c0:	str	x19, [sp, #88]
  4462c4:	add	x3, sp, #0x58
  4462c8:	mov	x2, #0x0                   	// #0
  4462cc:	mov	x1, #0x0                   	// #0
  4462d0:	mov	x0, x21
  4462d4:	bl	442048 <_obstack_memory_used@@Base+0xeac>
  4462d8:	mov	x20, x0
  4462dc:	cbz	x0, 4463a0 <_obstack_memory_used@@Base+0x5204>
  4462e0:	ldr	w0, [x21, #180]
  4462e4:	cmp	w0, #0x1
  4462e8:	b.le	446394 <_obstack_memory_used@@Base+0x51f8>
  4462ec:	mov	w0, #0x6                   	// #6
  4462f0:	strb	w0, [sp, #96]
  4462f4:	str	x22, [sp, #88]
  4462f8:	ldrb	w0, [x21, #176]
  4462fc:	orr	w0, w0, #0x2
  446300:	strb	w0, [x21, #176]
  446304:	add	x3, sp, #0x58
  446308:	mov	x2, #0x0                   	// #0
  44630c:	mov	x1, #0x0                   	// #0
  446310:	mov	x0, x21
  446314:	bl	442048 <_obstack_memory_used@@Base+0xeac>
  446318:	mov	x2, x0
  44631c:	cbz	x0, 4463a0 <_obstack_memory_used@@Base+0x5204>
  446320:	mov	w3, #0xa                   	// #10
  446324:	mov	x1, x20
  446328:	mov	x0, x21
  44632c:	bl	4421b4 <_obstack_memory_used@@Base+0x1018>
  446330:	mov	x20, x0
  446334:	mov	x0, x20
  446338:	ldp	x19, x20, [sp, #16]
  44633c:	ldp	x21, x22, [sp, #32]
  446340:	ldp	x23, x24, [sp, #48]
  446344:	ldp	x25, x26, [sp, #64]
  446348:	ldp	x29, x30, [sp], #112
  44634c:	ret
  446350:	mov	w0, #0xc                   	// #12
  446354:	str	w0, [x23]
  446358:	mov	x20, x19
  44635c:	b	446334 <_obstack_memory_used@@Base+0x5198>
  446360:	mov	x0, x19
  446364:	bl	4047c0 <free@plt>
  446368:	mov	w0, #0xc                   	// #12
  44636c:	str	w0, [x23]
  446370:	mov	x20, x22
  446374:	b	446334 <_obstack_memory_used@@Base+0x5198>
  446378:	mov	x0, x19
  44637c:	bl	4047c0 <free@plt>
  446380:	mov	x0, x22
  446384:	bl	444370 <_obstack_memory_used@@Base+0x31d4>
  446388:	str	w25, [x23]
  44638c:	mov	x20, #0x0                   	// #0
  446390:	b	446334 <_obstack_memory_used@@Base+0x5198>
  446394:	mov	x0, x22
  446398:	bl	444370 <_obstack_memory_used@@Base+0x31d4>
  44639c:	b	446334 <_obstack_memory_used@@Base+0x5198>
  4463a0:	mov	x0, x19
  4463a4:	bl	4047c0 <free@plt>
  4463a8:	mov	x0, x22
  4463ac:	bl	444370 <_obstack_memory_used@@Base+0x31d4>
  4463b0:	mov	w0, #0xc                   	// #12
  4463b4:	str	w0, [x23]
  4463b8:	mov	x20, #0x0                   	// #0
  4463bc:	b	446334 <_obstack_memory_used@@Base+0x5198>
  4463c0:	stp	x29, x30, [sp, #-80]!
  4463c4:	mov	x29, sp
  4463c8:	stp	x19, x20, [sp, #16]
  4463cc:	stp	x21, x22, [sp, #32]
  4463d0:	stp	x23, x24, [sp, #48]
  4463d4:	mov	x24, x2
  4463d8:	mov	x20, x3
  4463dc:	lsl	x21, x1, #4
  4463e0:	ldr	x23, [x0]
  4463e4:	add	x1, x23, x21
  4463e8:	ldrb	w22, [x1, #8]
  4463ec:	cmp	w22, #0x7
  4463f0:	b.eq	446440 <_obstack_memory_used@@Base+0x52a4>  // b.none
  4463f4:	str	x25, [sp, #64]
  4463f8:	mov	x25, x0
  4463fc:	mov	x1, x3
  446400:	mov	x0, x2
  446404:	bl	4412f8 <_obstack_memory_used@@Base+0x15c>
  446408:	mov	w19, w0
  44640c:	cmp	w22, #0x5
  446410:	b.eq	446548 <_obstack_memory_used@@Base+0x53ac>  // b.none
  446414:	cmp	w22, #0x6
  446418:	ccmp	w0, #0x1, #0x4, eq  // eq = none
  44641c:	b.gt	446584 <_obstack_memory_used@@Base+0x53e8>
  446420:	mov	w19, #0x0                   	// #0
  446424:	ldr	x25, [sp, #64]
  446428:	mov	w0, w19
  44642c:	ldp	x19, x20, [sp, #16]
  446430:	ldp	x21, x22, [sp, #32]
  446434:	ldp	x23, x24, [sp, #48]
  446438:	ldp	x29, x30, [sp], #80
  44643c:	ret
  446440:	ldr	x0, [x2, #8]
  446444:	add	x2, x0, x3
  446448:	ldrb	w1, [x0, x3]
  44644c:	mov	w19, #0x0                   	// #0
  446450:	cmp	w1, #0xc1
  446454:	b.ls	446428 <_obstack_memory_used@@Base+0x528c>  // b.plast
  446458:	ldr	x4, [x24, #88]
  44645c:	add	x3, x3, #0x1
  446460:	cmp	x3, x4
  446464:	b.ge	446428 <_obstack_memory_used@@Base+0x528c>  // b.tcont
  446468:	ldrb	w0, [x2, #1]
  44646c:	cmp	w1, #0xdf
  446470:	b.ls	4464cc <_obstack_memory_used@@Base+0x5330>  // b.plast
  446474:	cmp	w1, #0xef
  446478:	b.hi	4464e4 <_obstack_memory_used@@Base+0x5348>  // b.pmore
  44647c:	cmp	w1, #0xe0
  446480:	mov	w19, #0x0                   	// #0
  446484:	mov	w1, #0x9f                  	// #159
  446488:	ccmp	w0, w1, #0x2, eq  // eq = none
  44648c:	b.ls	446428 <_obstack_memory_used@@Base+0x528c>  // b.plast
  446490:	mov	w19, #0x3                   	// #3
  446494:	sxtw	x3, w19
  446498:	add	x20, x3, x20
  44649c:	cmp	x4, x20
  4464a0:	b.lt	446684 <_obstack_memory_used@@Base+0x54e8>  // b.tstop
  4464a4:	mov	x1, #0x1                   	// #1
  4464a8:	ldrb	w0, [x2, x1]
  4464ac:	sub	w0, w0, #0x80
  4464b0:	and	w0, w0, #0xff
  4464b4:	cmp	w0, #0x3f
  4464b8:	b.hi	44668c <_obstack_memory_used@@Base+0x54f0>  // b.pmore
  4464bc:	add	x1, x1, #0x1
  4464c0:	cmp	x3, x1
  4464c4:	b.gt	4464a8 <_obstack_memory_used@@Base+0x530c>
  4464c8:	b	446428 <_obstack_memory_used@@Base+0x528c>
  4464cc:	sub	w0, w0, #0x80
  4464d0:	and	w0, w0, #0xff
  4464d4:	cmp	w0, #0x40
  4464d8:	cset	w19, cc  // cc = lo, ul, last
  4464dc:	lsl	w19, w19, #1
  4464e0:	b	446428 <_obstack_memory_used@@Base+0x528c>
  4464e4:	cmp	w1, #0xf7
  4464e8:	b.hi	446508 <_obstack_memory_used@@Base+0x536c>  // b.pmore
  4464ec:	cmp	w1, #0xf0
  4464f0:	mov	w19, #0x0                   	// #0
  4464f4:	mov	w1, #0x8f                  	// #143
  4464f8:	ccmp	w0, w1, #0x2, eq  // eq = none
  4464fc:	b.ls	446428 <_obstack_memory_used@@Base+0x528c>  // b.plast
  446500:	mov	w19, #0x4                   	// #4
  446504:	b	446494 <_obstack_memory_used@@Base+0x52f8>
  446508:	cmp	w1, #0xfb
  44650c:	b.hi	446528 <_obstack_memory_used@@Base+0x538c>  // b.pmore
  446510:	cmp	w1, #0xf8
  446514:	mov	w1, #0x87                  	// #135
  446518:	ccmp	w0, w1, #0x2, eq  // eq = none
  44651c:	b.ls	44666c <_obstack_memory_used@@Base+0x54d0>  // b.plast
  446520:	mov	w19, #0x5                   	// #5
  446524:	b	446494 <_obstack_memory_used@@Base+0x52f8>
  446528:	cmp	w1, #0xfd
  44652c:	b.hi	446674 <_obstack_memory_used@@Base+0x54d8>  // b.pmore
  446530:	cmp	w1, #0xfc
  446534:	mov	w1, #0x83                  	// #131
  446538:	ccmp	w0, w1, #0x2, eq  // eq = none
  44653c:	b.ls	44667c <_obstack_memory_used@@Base+0x54e0>  // b.plast
  446540:	mov	w19, #0x6                   	// #6
  446544:	b	446494 <_obstack_memory_used@@Base+0x52f8>
  446548:	cmp	w0, #0x1
  44654c:	b.le	446694 <_obstack_memory_used@@Base+0x54f8>
  446550:	ldr	x0, [x25, #216]
  446554:	tbnz	w0, #6, 446568 <_obstack_memory_used@@Base+0x53cc>
  446558:	ldr	x1, [x24, #8]
  44655c:	ldrb	w1, [x1, x20]
  446560:	cmp	w1, #0xa
  446564:	b.eq	4466a0 <_obstack_memory_used@@Base+0x5504>  // b.none
  446568:	tbz	w0, #7, 4466f0 <_obstack_memory_used@@Base+0x5554>
  44656c:	ldr	x0, [x24, #8]
  446570:	ldrb	w0, [x0, x20]
  446574:	cmp	w0, #0x0
  446578:	csel	w19, w19, wzr, ne  // ne = any
  44657c:	ldr	x25, [sp, #64]
  446580:	b	446428 <_obstack_memory_used@@Base+0x528c>
  446584:	ldr	x22, [x23, x21]
  446588:	ldr	x0, [x22, #64]
  44658c:	cbnz	x0, 4465a8 <_obstack_memory_used@@Base+0x540c>
  446590:	ldr	x0, [x22, #72]
  446594:	cbnz	x0, 4465a8 <_obstack_memory_used@@Base+0x540c>
  446598:	ldr	x0, [x22, #40]
  44659c:	cbnz	x0, 4466d0 <_obstack_memory_used@@Base+0x5534>
  4465a0:	mov	w20, #0x0                   	// #0
  4465a4:	b	446618 <_obstack_memory_used@@Base+0x547c>
  4465a8:	mov	x1, x20
  4465ac:	mov	x0, x24
  4465b0:	bl	441348 <_obstack_memory_used@@Base+0x1ac>
  4465b4:	mov	w20, w0
  4465b8:	ldr	x2, [x22, #40]
  4465bc:	cmp	x2, #0x0
  4465c0:	b.le	4465e4 <_obstack_memory_used@@Base+0x5448>
  4465c4:	ldr	x3, [x22]
  4465c8:	mov	x1, #0x0                   	// #0
  4465cc:	ldr	w0, [x3, x1, lsl #2]
  4465d0:	cmp	w0, w20
  4465d4:	b.eq	446658 <_obstack_memory_used@@Base+0x54bc>  // b.none
  4465d8:	add	x1, x1, #0x1
  4465dc:	cmp	x2, x1
  4465e0:	b.ne	4465cc <_obstack_memory_used@@Base+0x5430>  // b.any
  4465e4:	ldr	x0, [x22, #72]
  4465e8:	cmp	x0, #0x0
  4465ec:	b.le	446618 <_obstack_memory_used@@Base+0x547c>
  4465f0:	mov	x21, #0x0                   	// #0
  4465f4:	ldr	x0, [x22, #24]
  4465f8:	ldr	x1, [x0, x21, lsl #3]
  4465fc:	mov	w0, w20
  446600:	bl	404300 <iswctype@plt>
  446604:	cbnz	w0, 446658 <_obstack_memory_used@@Base+0x54bc>
  446608:	add	x21, x21, #0x1
  44660c:	ldr	x0, [x22, #72]
  446610:	cmp	x0, x21
  446614:	b.gt	4465f4 <_obstack_memory_used@@Base+0x5458>
  446618:	ldr	x2, [x22, #64]
  44661c:	cmp	x2, #0x0
  446620:	b.le	4466b8 <_obstack_memory_used@@Base+0x551c>
  446624:	ldr	x3, [x22, #8]
  446628:	mov	x0, #0x0                   	// #0
  44662c:	b	44663c <_obstack_memory_used@@Base+0x54a0>
  446630:	add	x0, x0, #0x1
  446634:	cmp	x2, x0
  446638:	b.eq	4466b8 <_obstack_memory_used@@Base+0x551c>  // b.none
  44663c:	ldr	w1, [x3, x0, lsl #2]
  446640:	cmp	w20, w1
  446644:	b.cc	446630 <_obstack_memory_used@@Base+0x5494>  // b.lo, b.ul, b.last
  446648:	ldr	x1, [x22, #16]
  44664c:	ldr	w1, [x1, x0, lsl #2]
  446650:	cmp	w20, w1
  446654:	b.hi	446630 <_obstack_memory_used@@Base+0x5494>  // b.pmore
  446658:	ldrb	w0, [x22, #32]
  44665c:	tst	x0, #0x1
  446660:	csel	w19, w19, wzr, eq  // eq = none
  446664:	ldr	x25, [sp, #64]
  446668:	b	446428 <_obstack_memory_used@@Base+0x528c>
  44666c:	mov	w19, #0x0                   	// #0
  446670:	b	446428 <_obstack_memory_used@@Base+0x528c>
  446674:	mov	w19, #0x0                   	// #0
  446678:	b	446428 <_obstack_memory_used@@Base+0x528c>
  44667c:	mov	w19, #0x0                   	// #0
  446680:	b	446428 <_obstack_memory_used@@Base+0x528c>
  446684:	mov	w19, #0x0                   	// #0
  446688:	b	446428 <_obstack_memory_used@@Base+0x528c>
  44668c:	mov	w19, #0x0                   	// #0
  446690:	b	446428 <_obstack_memory_used@@Base+0x528c>
  446694:	mov	w19, #0x0                   	// #0
  446698:	ldr	x25, [sp, #64]
  44669c:	b	446428 <_obstack_memory_used@@Base+0x528c>
  4466a0:	mov	w19, #0x0                   	// #0
  4466a4:	ldr	x25, [sp, #64]
  4466a8:	b	446428 <_obstack_memory_used@@Base+0x528c>
  4466ac:	mov	w19, #0x0                   	// #0
  4466b0:	ldr	x25, [sp, #64]
  4466b4:	b	446428 <_obstack_memory_used@@Base+0x528c>
  4466b8:	ldrb	w0, [x22, #32]
  4466bc:	tbz	w0, #0, 4466ac <_obstack_memory_used@@Base+0x5510>
  4466c0:	cmp	w19, #0x0
  4466c4:	csinc	w19, w19, wzr, gt
  4466c8:	ldr	x25, [sp, #64]
  4466cc:	b	446428 <_obstack_memory_used@@Base+0x528c>
  4466d0:	mov	x1, x20
  4466d4:	mov	x0, x24
  4466d8:	bl	441348 <_obstack_memory_used@@Base+0x1ac>
  4466dc:	mov	w20, w0
  4466e0:	ldr	x2, [x22, #40]
  4466e4:	cmp	x2, #0x0
  4466e8:	b.gt	4465c4 <_obstack_memory_used@@Base+0x5428>
  4466ec:	b	446618 <_obstack_memory_used@@Base+0x547c>
  4466f0:	ldr	x25, [sp, #64]
  4466f4:	b	446428 <_obstack_memory_used@@Base+0x528c>
  4466f8:	stp	x29, x30, [sp, #-128]!
  4466fc:	mov	x29, sp
  446700:	stp	x19, x20, [sp, #16]
  446704:	stp	x21, x22, [sp, #32]
  446708:	mov	x19, x0
  44670c:	mov	x21, x1
  446710:	mov	w22, w2
  446714:	ldr	x20, [x0, #40]
  446718:	cmp	x20, x1
  44671c:	b.le	446820 <_obstack_memory_used@@Base+0x5684>
  446720:	ldr	w0, [x0, #144]
  446724:	cmp	w0, #0x1
  446728:	b.gt	446828 <_obstack_memory_used@@Base+0x568c>
  44672c:	ldr	x0, [x19, #80]
  446730:	str	x0, [x19, #88]
  446734:	ldr	x0, [x19, #96]
  446738:	str	x0, [x19, #104]
  44673c:	str	xzr, [x19, #48]
  446740:	str	xzr, [x19, #40]
  446744:	str	xzr, [x19, #56]
  446748:	strb	wzr, [x19, #140]
  44674c:	tst	x22, #0x1
  446750:	mov	w0, #0x4                   	// #4
  446754:	mov	w1, #0x6                   	// #6
  446758:	csel	w0, w0, w1, ne  // ne = any
  44675c:	str	w0, [x19, #112]
  446760:	ldrb	w0, [x19, #139]
  446764:	mov	x20, x21
  446768:	cbnz	w0, 446774 <_obstack_memory_used@@Base+0x55d8>
  44676c:	ldr	x0, [x19]
  446770:	str	x0, [x19, #8]
  446774:	cbz	x20, 4467e0 <_obstack_memory_used@@Base+0x5644>
  446778:	ldr	x0, [x19, #56]
  44677c:	cmp	x0, x20
  446780:	b.le	446a34 <_obstack_memory_used@@Base+0x5898>
  446784:	ldrb	w0, [x19, #140]
  446788:	cbnz	w0, 446830 <_obstack_memory_used@@Base+0x5694>
  44678c:	mov	w2, w22
  446790:	sub	x1, x20, #0x1
  446794:	mov	x0, x19
  446798:	bl	443888 <_obstack_memory_used@@Base+0x26ec>
  44679c:	str	w0, [x19, #112]
  4467a0:	ldr	w0, [x19, #144]
  4467a4:	cmp	w0, #0x1
  4467a8:	b.gt	446a00 <_obstack_memory_used@@Base+0x5864>
  4467ac:	ldrb	w0, [x19, #139]
  4467b0:	cbnz	w0, 446a1c <_obstack_memory_used@@Base+0x5880>
  4467b4:	ldr	x0, [x19, #48]
  4467b8:	sub	x0, x0, x20
  4467bc:	str	x0, [x19, #48]
  4467c0:	ldr	x0, [x19, #56]
  4467c4:	sub	x0, x0, x20
  4467c8:	str	x0, [x19, #56]
  4467cc:	ldrb	w0, [x19, #139]
  4467d0:	cbnz	w0, 4467e0 <_obstack_memory_used@@Base+0x5644>
  4467d4:	ldr	x0, [x19, #8]
  4467d8:	add	x0, x0, x20
  4467dc:	str	x0, [x19, #8]
  4467e0:	str	x21, [x19, #40]
  4467e4:	ldr	x0, [x19, #88]
  4467e8:	sub	x0, x0, x20
  4467ec:	str	x0, [x19, #88]
  4467f0:	ldr	x1, [x19, #104]
  4467f4:	sub	x20, x1, x20
  4467f8:	str	x20, [x19, #104]
  4467fc:	ldr	w1, [x19, #144]
  446800:	cmp	w1, #0x1
  446804:	b.le	446d48 <_obstack_memory_used@@Base+0x5bac>
  446808:	ldrb	w0, [x19, #136]
  44680c:	cbz	w0, 446d3c <_obstack_memory_used@@Base+0x5ba0>
  446810:	mov	x0, x19
  446814:	bl	4430d0 <_obstack_memory_used@@Base+0x1f34>
  446818:	cbz	w0, 446d54 <_obstack_memory_used@@Base+0x5bb8>
  44681c:	b	446d5c <_obstack_memory_used@@Base+0x5bc0>
  446820:	sub	x20, x1, x20
  446824:	b	446774 <_obstack_memory_used@@Base+0x55d8>
  446828:	str	xzr, [x19, #32]
  44682c:	b	44672c <_obstack_memory_used@@Base+0x5590>
  446830:	stp	x23, x24, [sp, #48]
  446834:	stp	x25, x26, [sp, #64]
  446838:	ldr	x25, [x19, #48]
  44683c:	ldr	x24, [x19, #24]
  446840:	mov	x1, x25
  446844:	mov	x2, #0x0                   	// #0
  446848:	b	446858 <_obstack_memory_used@@Base+0x56bc>
  44684c:	mov	x1, x23
  446850:	cmp	x2, x1
  446854:	b.ge	44687c <_obstack_memory_used@@Base+0x56e0>  // b.tcont
  446858:	add	x23, x2, x1
  44685c:	add	x23, x23, x23, lsr #63
  446860:	asr	x23, x23, #1
  446864:	ldr	x0, [x24, x23, lsl #3]
  446868:	cmp	x0, x20
  44686c:	b.gt	44684c <_obstack_memory_used@@Base+0x56b0>
  446870:	b.ge	446884 <_obstack_memory_used@@Base+0x56e8>  // b.tcont
  446874:	add	x2, x23, #0x1
  446878:	b	446850 <_obstack_memory_used@@Base+0x56b4>
  44687c:	cmp	x0, x20
  446880:	cinc	x23, x23, lt  // lt = tstop
  446884:	mov	w2, w22
  446888:	sub	x1, x23, #0x1
  44688c:	mov	x0, x19
  446890:	bl	443888 <_obstack_memory_used@@Base+0x26ec>
  446894:	str	w0, [x19, #112]
  446898:	cmp	x20, x25
  44689c:	ccmp	x20, x23, #0x0, lt  // lt = tstop
  4468a0:	b.eq	446924 <_obstack_memory_used@@Base+0x5788>  // b.none
  4468a4:	ldr	x0, [x19, #80]
  4468a8:	sub	x0, x0, x21
  4468ac:	add	x0, x0, x20
  4468b0:	str	x0, [x19, #88]
  4468b4:	ldr	x0, [x19, #96]
  4468b8:	sub	x0, x0, x21
  4468bc:	add	x0, x0, x20
  4468c0:	str	x0, [x19, #104]
  4468c4:	strb	wzr, [x19, #140]
  4468c8:	sub	x1, x24, #0x8
  4468cc:	cmp	x23, #0x0
  4468d0:	b.le	4468e8 <_obstack_memory_used@@Base+0x574c>
  4468d4:	ldr	x0, [x1, x23, lsl #3]
  4468d8:	cmp	x0, x20
  4468dc:	b.ne	4468e8 <_obstack_memory_used@@Base+0x574c>  // b.any
  4468e0:	subs	x23, x23, #0x1
  4468e4:	b.ne	4468d4 <_obstack_memory_used@@Base+0x5738>  // b.any
  4468e8:	cmp	x23, x25
  4468ec:	b.ge	4469b0 <_obstack_memory_used@@Base+0x5814>  // b.tcont
  4468f0:	ldr	x1, [x19, #16]
  4468f4:	ldr	w0, [x1, x23, lsl #2]
  4468f8:	cmn	w0, #0x1
  4468fc:	b.ne	4469b0 <_obstack_memory_used@@Base+0x5814>  // b.any
  446900:	add	x23, x23, #0x1
  446904:	cmp	x25, x23
  446908:	b.ne	4468f4 <_obstack_memory_used@@Base+0x5758>  // b.any
  44690c:	str	xzr, [x19, #48]
  446910:	ldr	x0, [x19, #48]
  446914:	str	x0, [x19, #56]
  446918:	ldp	x23, x24, [sp, #48]
  44691c:	ldp	x25, x26, [sp, #64]
  446920:	b	4467cc <_obstack_memory_used@@Base+0x5630>
  446924:	ldr	x0, [x24, x23, lsl #3]
  446928:	cmp	x0, x20
  44692c:	b.ne	4468a4 <_obstack_memory_used@@Base+0x5708>  // b.any
  446930:	ldr	x0, [x19, #16]
  446934:	sub	x2, x25, x20
  446938:	lsl	x2, x2, #2
  44693c:	add	x1, x0, x20, lsl #2
  446940:	bl	403f80 <memmove@plt>
  446944:	ldr	x0, [x19, #8]
  446948:	ldr	x2, [x19, #48]
  44694c:	sub	x2, x2, x20
  446950:	add	x1, x0, x20
  446954:	bl	403f80 <memmove@plt>
  446958:	ldr	x0, [x19, #48]
  44695c:	sub	x0, x0, x20
  446960:	str	x0, [x19, #48]
  446964:	ldr	x1, [x19, #56]
  446968:	sub	x1, x1, x20
  44696c:	str	x1, [x19, #56]
  446970:	cmp	x0, #0x0
  446974:	b.le	446d30 <_obstack_memory_used@@Base+0x5b94>
  446978:	lsl	x2, x20, #3
  44697c:	mov	x0, #0x0                   	// #0
  446980:	ldr	x3, [x19, #24]
  446984:	ldr	x1, [x3, x2]
  446988:	sub	x1, x1, x20
  44698c:	str	x1, [x3, x0, lsl #3]
  446990:	add	x0, x0, #0x1
  446994:	add	x2, x2, #0x8
  446998:	ldr	x1, [x19, #48]
  44699c:	cmp	x1, x0
  4469a0:	b.gt	446980 <_obstack_memory_used@@Base+0x57e4>
  4469a4:	ldp	x23, x24, [sp, #48]
  4469a8:	ldp	x25, x26, [sp, #64]
  4469ac:	b	4467cc <_obstack_memory_used@@Base+0x5630>
  4469b0:	cmp	x25, x23
  4469b4:	b.eq	44690c <_obstack_memory_used@@Base+0x5770>  // b.none
  4469b8:	ldr	x2, [x24, x23, lsl #3]
  4469bc:	sub	x2, x2, x20
  4469c0:	str	x2, [x19, #48]
  4469c4:	cbz	x2, 446910 <_obstack_memory_used@@Base+0x5774>
  4469c8:	cmp	x2, #0x0
  4469cc:	b.le	4469f0 <_obstack_memory_used@@Base+0x5854>
  4469d0:	mov	x0, #0x0                   	// #0
  4469d4:	mov	w3, #0xffffffff            	// #-1
  4469d8:	ldr	x1, [x19, #16]
  4469dc:	str	w3, [x1, x0, lsl #2]
  4469e0:	add	x0, x0, #0x1
  4469e4:	ldr	x2, [x19, #48]
  4469e8:	cmp	x2, x0
  4469ec:	b.gt	4469d8 <_obstack_memory_used@@Base+0x583c>
  4469f0:	mov	w1, #0xff                  	// #255
  4469f4:	ldr	x0, [x19, #8]
  4469f8:	bl	404420 <memset@plt>
  4469fc:	b	446910 <_obstack_memory_used@@Base+0x5774>
  446a00:	ldr	x0, [x19, #16]
  446a04:	ldr	x2, [x19, #48]
  446a08:	sub	x2, x2, x20
  446a0c:	lsl	x2, x2, #2
  446a10:	add	x1, x0, x20, lsl #2
  446a14:	bl	403f80 <memmove@plt>
  446a18:	b	4467ac <_obstack_memory_used@@Base+0x5610>
  446a1c:	ldr	x0, [x19, #8]
  446a20:	ldr	x2, [x19, #48]
  446a24:	sub	x2, x2, x20
  446a28:	add	x1, x0, x20
  446a2c:	bl	403f80 <memmove@plt>
  446a30:	b	4467b4 <_obstack_memory_used@@Base+0x5618>
  446a34:	stp	x25, x26, [sp, #64]
  446a38:	ldr	x26, [x19, #48]
  446a3c:	ldrb	w0, [x19, #140]
  446a40:	cbnz	w0, 446b38 <_obstack_memory_used@@Base+0x599c>
  446a44:	str	xzr, [x19, #48]
  446a48:	ldr	w0, [x19, #144]
  446a4c:	cmp	w0, #0x1
  446a50:	b.le	446cc4 <_obstack_memory_used@@Base+0x5b28>
  446a54:	stp	x23, x24, [sp, #48]
  446a58:	ldrb	w1, [x19, #137]
  446a5c:	cbz	w1, 446aac <_obstack_memory_used@@Base+0x5910>
  446a60:	ldr	x1, [x19]
  446a64:	ldr	x24, [x19, #40]
  446a68:	add	x24, x1, x24
  446a6c:	sub	x0, x20, w0, sxtw
  446a70:	add	x0, x24, x0
  446a74:	cmp	x1, x0
  446a78:	csel	x1, x1, x0, cs  // cs = hs, nlast
  446a7c:	mov	x25, x20
  446a80:	sub	x23, x20, #0x1
  446a84:	add	x23, x24, x23
  446a88:	cmp	x23, x1
  446a8c:	b.cc	446aac <_obstack_memory_used@@Base+0x5910>  // b.lo, b.ul, b.last
  446a90:	ldrb	w0, [x23]
  446a94:	and	w0, w0, #0xc0
  446a98:	cmp	w0, #0x80
  446a9c:	b.ne	446b60 <_obstack_memory_used@@Base+0x59c4>  // b.any
  446aa0:	sub	x23, x23, #0x1
  446aa4:	cmp	x23, x1
  446aa8:	b.cs	446a90 <_obstack_memory_used@@Base+0x58f4>  // b.hs, b.nlast
  446aac:	ldr	x0, [x19, #40]
  446ab0:	ldr	x1, [x19, #56]
  446ab4:	add	x0, x0, x1
  446ab8:	cmp	x21, x0
  446abc:	b.le	446d94 <_obstack_memory_used@@Base+0x5bf8>
  446ac0:	stp	x27, x28, [sp, #80]
  446ac4:	add	x27, x19, #0x20
  446ac8:	ldr	x23, [x19, #80]
  446acc:	sub	x23, x23, x0
  446ad0:	ldr	x28, [x19, #32]
  446ad4:	mov	x25, x0
  446ad8:	ldr	x1, [x19]
  446adc:	mov	x3, x27
  446ae0:	mov	x2, x23
  446ae4:	add	x1, x1, x0
  446ae8:	add	x0, sp, #0x78
  446aec:	bl	440da8 <argp_parse@@Base+0xd668>
  446af0:	sub	x1, x0, #0x1
  446af4:	cmn	x1, #0x4
  446af8:	b.hi	446c28 <_obstack_memory_used@@Base+0x5a8c>  // b.pmore
  446afc:	ldr	w24, [sp, #120]
  446b00:	add	x0, x25, x0
  446b04:	cmp	x21, x0
  446b08:	b.gt	446ac8 <_obstack_memory_used@@Base+0x592c>
  446b0c:	sub	x0, x0, x21
  446b10:	str	x0, [x19, #48]
  446b14:	cmn	w24, #0x1
  446b18:	b.ne	446c4c <_obstack_memory_used@@Base+0x5ab0>  // b.any
  446b1c:	ldp	x27, x28, [sp, #80]
  446b20:	mov	w2, w22
  446b24:	sub	x1, x26, #0x1
  446b28:	mov	x0, x19
  446b2c:	bl	443888 <_obstack_memory_used@@Base+0x26ec>
  446b30:	str	w0, [x19, #112]
  446b34:	b	446bcc <_obstack_memory_used@@Base+0x5a30>
  446b38:	ldr	x0, [x19, #80]
  446b3c:	sub	x0, x0, x21
  446b40:	add	x0, x0, x20
  446b44:	str	x0, [x19, #88]
  446b48:	ldr	x0, [x19, #96]
  446b4c:	sub	x0, x0, x21
  446b50:	add	x0, x0, x20
  446b54:	str	x0, [x19, #104]
  446b58:	strb	wzr, [x19, #140]
  446b5c:	b	446a44 <_obstack_memory_used@@Base+0x58a8>
  446b60:	ldr	x2, [x19, #88]
  446b64:	add	x2, x24, x2
  446b68:	sub	x2, x2, x23
  446b6c:	ldr	x3, [x19, #120]
  446b70:	mov	x1, x23
  446b74:	cbnz	x3, 446be8 <_obstack_memory_used@@Base+0x5a4c>
  446b78:	str	xzr, [sp, #120]
  446b7c:	add	x3, sp, #0x78
  446b80:	add	x0, sp, #0x6c
  446b84:	bl	440da8 <argp_parse@@Base+0xd668>
  446b88:	add	x24, x24, x25
  446b8c:	sub	x23, x24, x23
  446b90:	cmp	x23, x0
  446b94:	ccmn	x0, #0x3, #0x2, ls  // ls = plast
  446b98:	b.hi	446aac <_obstack_memory_used@@Base+0x5910>  // b.pmore
  446b9c:	str	xzr, [x19, #32]
  446ba0:	sub	x23, x0, x23
  446ba4:	str	x23, [x19, #48]
  446ba8:	ldr	w24, [sp, #108]
  446bac:	cmn	w24, #0x1
  446bb0:	b.eq	446aac <_obstack_memory_used@@Base+0x5910>  // b.none
  446bb4:	ldrb	w0, [x19, #142]
  446bb8:	cbnz	w0, 446c54 <_obstack_memory_used@@Base+0x5ab8>
  446bbc:	mov	w1, #0x0                   	// #0
  446bc0:	cmp	w24, #0xa
  446bc4:	b.eq	446c70 <_obstack_memory_used@@Base+0x5ad4>  // b.none
  446bc8:	str	w1, [x19, #112]
  446bcc:	ldr	x2, [x19, #48]
  446bd0:	cbnz	x2, 446c84 <_obstack_memory_used@@Base+0x5ae8>
  446bd4:	ldr	x0, [x19, #48]
  446bd8:	str	x0, [x19, #56]
  446bdc:	ldp	x23, x24, [sp, #48]
  446be0:	ldp	x25, x26, [sp, #64]
  446be4:	b	4467cc <_obstack_memory_used@@Base+0x5630>
  446be8:	cmp	x2, #0x6
  446bec:	mov	x0, #0x6                   	// #6
  446bf0:	csel	x0, x2, x0, le
  446bf4:	subs	w0, w0, #0x1
  446bf8:	b.mi	446c20 <_obstack_memory_used@@Base+0x5a84>  // b.first
  446bfc:	sxtw	x0, w0
  446c00:	add	x4, sp, #0x70
  446c04:	ldrb	w1, [x23, x0]
  446c08:	ldrb	w1, [x3, x1]
  446c0c:	strb	w1, [x0, x4]
  446c10:	sub	x0, x0, #0x1
  446c14:	tbz	w0, #31, 446c04 <_obstack_memory_used@@Base+0x5a68>
  446c18:	add	x1, sp, #0x70
  446c1c:	b	446b78 <_obstack_memory_used@@Base+0x59dc>
  446c20:	add	x1, sp, #0x70
  446c24:	b	446b78 <_obstack_memory_used@@Base+0x59dc>
  446c28:	cmp	x0, #0x0
  446c2c:	mov	w24, #0x0                   	// #0
  446c30:	ccmp	x23, #0x0, #0x4, ne  // ne = any
  446c34:	b.eq	446c40 <_obstack_memory_used@@Base+0x5aa4>  // b.none
  446c38:	ldr	x0, [x19]
  446c3c:	ldrb	w24, [x0, x25]
  446c40:	str	x28, [x19, #32]
  446c44:	mov	x0, #0x1                   	// #1
  446c48:	b	446b00 <_obstack_memory_used@@Base+0x5964>
  446c4c:	ldp	x27, x28, [sp, #80]
  446c50:	b	446bb4 <_obstack_memory_used@@Base+0x5a18>
  446c54:	mov	w0, w24
  446c58:	bl	404990 <iswalnum@plt>
  446c5c:	cmp	w24, #0x5f
  446c60:	mov	w1, #0x1                   	// #1
  446c64:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  446c68:	b.ne	446bc8 <_obstack_memory_used@@Base+0x5a2c>  // b.any
  446c6c:	b	446bbc <_obstack_memory_used@@Base+0x5a20>
  446c70:	ldrb	w0, [x19, #141]
  446c74:	cmp	w0, #0x0
  446c78:	cset	w1, ne  // ne = any
  446c7c:	lsl	w1, w1, #1
  446c80:	b	446bc8 <_obstack_memory_used@@Base+0x5a2c>
  446c84:	cmp	x2, #0x0
  446c88:	b.le	446cac <_obstack_memory_used@@Base+0x5b10>
  446c8c:	mov	x0, #0x0                   	// #0
  446c90:	mov	w3, #0xffffffff            	// #-1
  446c94:	ldr	x1, [x19, #16]
  446c98:	str	w3, [x1, x0, lsl #2]
  446c9c:	add	x0, x0, #0x1
  446ca0:	ldr	x2, [x19, #48]
  446ca4:	cmp	x2, x0
  446ca8:	b.gt	446c94 <_obstack_memory_used@@Base+0x5af8>
  446cac:	ldrb	w0, [x19, #139]
  446cb0:	cbz	w0, 446bd4 <_obstack_memory_used@@Base+0x5a38>
  446cb4:	mov	w1, #0xff                  	// #255
  446cb8:	ldr	x0, [x19, #8]
  446cbc:	bl	404420 <memset@plt>
  446cc0:	b	446bd4 <_obstack_memory_used@@Base+0x5a38>
  446cc4:	ldr	x0, [x19]
  446cc8:	ldr	x1, [x19, #40]
  446ccc:	add	x0, x0, x20
  446cd0:	add	x0, x0, x1
  446cd4:	ldurb	w0, [x0, #-1]
  446cd8:	str	xzr, [x19, #56]
  446cdc:	ldr	x1, [x19, #120]
  446ce0:	cbz	x1, 446cec <_obstack_memory_used@@Base+0x5b50>
  446ce4:	and	x0, x0, #0xff
  446ce8:	ldrb	w0, [x1, x0]
  446cec:	ubfx	x1, x0, #6, #2
  446cf0:	ldr	x2, [x19, #128]
  446cf4:	ldr	x1, [x2, x1, lsl #3]
  446cf8:	lsr	x1, x1, x0
  446cfc:	mov	w2, #0x1                   	// #1
  446d00:	tbnz	w1, #0, 446d10 <_obstack_memory_used@@Base+0x5b74>
  446d04:	mov	w2, #0x0                   	// #0
  446d08:	cmp	w0, #0xa
  446d0c:	b.eq	446d1c <_obstack_memory_used@@Base+0x5b80>  // b.none
  446d10:	str	w2, [x19, #112]
  446d14:	ldp	x25, x26, [sp, #64]
  446d18:	b	4467cc <_obstack_memory_used@@Base+0x5630>
  446d1c:	ldrb	w0, [x19, #141]
  446d20:	cmp	w0, #0x0
  446d24:	cset	w2, ne  // ne = any
  446d28:	lsl	w2, w2, #1
  446d2c:	b	446d10 <_obstack_memory_used@@Base+0x5b74>
  446d30:	ldp	x23, x24, [sp, #48]
  446d34:	ldp	x25, x26, [sp, #64]
  446d38:	b	4467cc <_obstack_memory_used@@Base+0x5630>
  446d3c:	mov	x0, x19
  446d40:	bl	442974 <_obstack_memory_used@@Base+0x17d8>
  446d44:	b	446d54 <_obstack_memory_used@@Base+0x5bb8>
  446d48:	ldrb	w1, [x19, #139]
  446d4c:	cbnz	w1, 446d6c <_obstack_memory_used@@Base+0x5bd0>
  446d50:	str	x0, [x19, #48]
  446d54:	str	xzr, [x19, #72]
  446d58:	mov	w0, #0x0                   	// #0
  446d5c:	ldp	x19, x20, [sp, #16]
  446d60:	ldp	x21, x22, [sp, #32]
  446d64:	ldp	x29, x30, [sp], #128
  446d68:	ret
  446d6c:	ldrb	w0, [x19, #136]
  446d70:	cbnz	w0, 446d88 <_obstack_memory_used@@Base+0x5bec>
  446d74:	ldr	x0, [x19, #120]
  446d78:	cbz	x0, 446d54 <_obstack_memory_used@@Base+0x5bb8>
  446d7c:	mov	x0, x19
  446d80:	bl	44136c <_obstack_memory_used@@Base+0x1d0>
  446d84:	b	446d54 <_obstack_memory_used@@Base+0x5bb8>
  446d88:	mov	x0, x19
  446d8c:	bl	4428dc <_obstack_memory_used@@Base+0x1740>
  446d90:	b	446d54 <_obstack_memory_used@@Base+0x5bb8>
  446d94:	sub	x0, x0, x21
  446d98:	str	x0, [x19, #48]
  446d9c:	b	446b20 <_obstack_memory_used@@Base+0x5984>
  446da0:	stp	x29, x30, [sp, #-128]!
  446da4:	mov	x29, sp
  446da8:	stp	x19, x20, [sp, #16]
  446dac:	stp	x21, x22, [sp, #32]
  446db0:	mov	x22, x0
  446db4:	add	x21, x1, x1, lsl #1
  446db8:	ldr	x0, [x0, #56]
  446dbc:	add	x21, x0, x21, lsl #3
  446dc0:	stp	xzr, xzr, [sp, #104]
  446dc4:	str	xzr, [sp, #120]
  446dc8:	ldr	x0, [x21, #8]
  446dcc:	cmp	x0, #0x0
  446dd0:	b.le	446e6c <_obstack_memory_used@@Base+0x5cd0>
  446dd4:	stp	x23, x24, [sp, #48]
  446dd8:	stp	x25, x26, [sp, #64]
  446ddc:	str	x27, [sp, #80]
  446de0:	mov	x23, x1
  446de4:	mov	x24, x2
  446de8:	mov	x25, x3
  446dec:	mov	x20, #0x0                   	// #0
  446df0:	b	446ee8 <_obstack_memory_used@@Base+0x5d4c>
  446df4:	ldr	x0, [sp, #120]
  446df8:	bl	4047c0 <free@plt>
  446dfc:	ldp	x23, x24, [sp, #48]
  446e00:	ldp	x25, x26, [sp, #64]
  446e04:	ldr	x27, [sp, #80]
  446e08:	b	446e78 <_obstack_memory_used@@Base+0x5cdc>
  446e0c:	cmp	x0, #0x0
  446e10:	b.le	446e8c <_obstack_memory_used@@Base+0x5cf0>
  446e14:	mov	x19, #0x0                   	// #0
  446e18:	b	446e44 <_obstack_memory_used@@Base+0x5ca8>
  446e1c:	mov	x1, x20
  446e20:	mov	x0, x24
  446e24:	bl	441424 <_obstack_memory_used@@Base+0x288>
  446e28:	sub	x1, x0, #0x1
  446e2c:	mov	x0, x24
  446e30:	bl	441484 <_obstack_memory_used@@Base+0x2e8>
  446e34:	add	x19, x19, #0x1
  446e38:	ldr	x0, [x21, #8]
  446e3c:	cmp	x0, x19
  446e40:	b.le	446e60 <_obstack_memory_used@@Base+0x5cc4>
  446e44:	ldr	x0, [x21, #16]
  446e48:	ldr	x20, [x0, x19, lsl #3]
  446e4c:	mov	x1, x20
  446e50:	add	x0, sp, #0x68
  446e54:	bl	441424 <_obstack_memory_used@@Base+0x288>
  446e58:	cbnz	x0, 446e34 <_obstack_memory_used@@Base+0x5c98>
  446e5c:	b	446e1c <_obstack_memory_used@@Base+0x5c80>
  446e60:	ldp	x23, x24, [sp, #48]
  446e64:	ldp	x25, x26, [sp, #64]
  446e68:	ldr	x27, [sp, #80]
  446e6c:	ldr	x0, [sp, #120]
  446e70:	bl	4047c0 <free@plt>
  446e74:	mov	w19, #0x0                   	// #0
  446e78:	mov	w0, w19
  446e7c:	ldp	x19, x20, [sp, #16]
  446e80:	ldp	x21, x22, [sp, #32]
  446e84:	ldp	x29, x30, [sp], #128
  446e88:	ret
  446e8c:	ldp	x23, x24, [sp, #48]
  446e90:	ldp	x25, x26, [sp, #64]
  446e94:	ldr	x27, [sp, #80]
  446e98:	b	446e6c <_obstack_memory_used@@Base+0x5cd0>
  446e9c:	mov	x1, x26
  446ea0:	mov	x0, x21
  446ea4:	bl	441424 <_obstack_memory_used@@Base+0x288>
  446ea8:	cbnz	x0, 446ed8 <_obstack_memory_used@@Base+0x5d3c>
  446eac:	mov	x1, x26
  446eb0:	mov	x0, x24
  446eb4:	bl	441424 <_obstack_memory_used@@Base+0x288>
  446eb8:	cbz	x0, 446ed8 <_obstack_memory_used@@Base+0x5d3c>
  446ebc:	ldr	x2, [x22, #56]
  446ec0:	add	x2, x2, x19
  446ec4:	mov	x1, x25
  446ec8:	add	x0, sp, #0x68
  446ecc:	bl	442cf8 <_obstack_memory_used@@Base+0x1b5c>
  446ed0:	mov	w19, w0
  446ed4:	cbnz	w0, 446df4 <_obstack_memory_used@@Base+0x5c58>
  446ed8:	add	x20, x20, #0x1
  446edc:	ldr	x0, [x21, #8]
  446ee0:	cmp	x0, x20
  446ee4:	b.le	446e0c <_obstack_memory_used@@Base+0x5c70>
  446ee8:	ldr	x0, [x21, #16]
  446eec:	ldr	x4, [x0, x20, lsl #3]
  446ef0:	cmp	x23, x4
  446ef4:	b.eq	446ed8 <_obstack_memory_used@@Base+0x5d3c>  // b.none
  446ef8:	ldr	x5, [x22]
  446efc:	add	x5, x5, x4, lsl #4
  446f00:	ldrb	w0, [x5, #8]
  446f04:	tbz	w0, #3, 446ed8 <_obstack_memory_used@@Base+0x5d3c>
  446f08:	add	x4, x4, x4, lsl #1
  446f0c:	lsl	x19, x4, #3
  446f10:	ldr	x0, [x22, #40]
  446f14:	add	x0, x0, x19
  446f18:	ldr	x1, [x0, #16]
  446f1c:	ldr	x26, [x1]
  446f20:	ldr	x0, [x0, #8]
  446f24:	cmp	x0, #0x1
  446f28:	b.le	446e9c <_obstack_memory_used@@Base+0x5d00>
  446f2c:	ldr	x27, [x1, #8]
  446f30:	mov	x1, x26
  446f34:	mov	x0, x21
  446f38:	bl	441424 <_obstack_memory_used@@Base+0x288>
  446f3c:	cbnz	x0, 446f50 <_obstack_memory_used@@Base+0x5db4>
  446f40:	mov	x1, x26
  446f44:	mov	x0, x24
  446f48:	bl	441424 <_obstack_memory_used@@Base+0x288>
  446f4c:	cbnz	x0, 446ebc <_obstack_memory_used@@Base+0x5d20>
  446f50:	cmp	x27, #0x0
  446f54:	b.le	446ed8 <_obstack_memory_used@@Base+0x5d3c>
  446f58:	mov	x1, x27
  446f5c:	mov	x0, x21
  446f60:	bl	441424 <_obstack_memory_used@@Base+0x288>
  446f64:	cbnz	x0, 446ed8 <_obstack_memory_used@@Base+0x5d3c>
  446f68:	mov	x1, x27
  446f6c:	mov	x0, x24
  446f70:	bl	441424 <_obstack_memory_used@@Base+0x288>
  446f74:	cbz	x0, 446ed8 <_obstack_memory_used@@Base+0x5d3c>
  446f78:	b	446ebc <_obstack_memory_used@@Base+0x5d20>
  446f7c:	stp	x29, x30, [sp, #-384]!
  446f80:	mov	x29, sp
  446f84:	stp	x21, x22, [sp, #32]
  446f88:	stp	x23, x24, [sp, #48]
  446f8c:	stp	x25, x26, [sp, #64]
  446f90:	stp	x27, x28, [sp, #80]
  446f94:	str	x0, [sp, #104]
  446f98:	mov	x28, x1
  446f9c:	mov	x22, x2
  446fa0:	ldr	x26, [x0]
  446fa4:	ldr	w0, [x26, #180]
  446fa8:	mov	w24, #0x0                   	// #0
  446fac:	cmp	w0, #0x1
  446fb0:	b.eq	446fd0 <_obstack_memory_used@@Base+0x5e34>  // b.none
  446fb4:	ldr	x0, [x28, #16]
  446fb8:	cmp	x0, #0x0
  446fbc:	b.le	447304 <_obstack_memory_used@@Base+0x6168>
  446fc0:	stp	x19, x20, [sp, #16]
  446fc4:	mov	x25, #0x0                   	// #0
  446fc8:	mov	w23, #0x1                   	// #1
  446fcc:	b	447024 <_obstack_memory_used@@Base+0x5e88>
  446fd0:	ldr	x0, [sp, #104]
  446fd4:	ldr	x24, [x0, #24]
  446fd8:	ubfx	w24, w24, #22, #1
  446fdc:	b	446fb4 <_obstack_memory_used@@Base+0x5e18>
  446fe0:	ldrb	w20, [x1, x27]
  446fe4:	strb	w23, [x22, x20]
  446fe8:	cbz	w24, 446ffc <_obstack_memory_used@@Base+0x5e60>
  446fec:	bl	4041f0 <__ctype_tolower_loc@plt>
  446ff0:	ldr	x0, [x0]
  446ff4:	ldrsw	x0, [x0, x20, lsl #2]
  446ff8:	strb	w23, [x22, x0]
  446ffc:	ldr	x0, [sp, #104]
  447000:	ldr	x0, [x0, #24]
  447004:	tbz	w0, #22, 447014 <_obstack_memory_used@@Base+0x5e78>
  447008:	ldr	w0, [x26, #180]
  44700c:	cmp	w0, #0x1
  447010:	b.gt	44708c <_obstack_memory_used@@Base+0x5ef0>
  447014:	add	x25, x25, #0x1
  447018:	ldr	x0, [x28, #16]
  44701c:	cmp	x0, x25
  447020:	b.le	447300 <_obstack_memory_used@@Base+0x6164>
  447024:	ldr	x0, [x28, #24]
  447028:	ldr	x19, [x0, x25, lsl #3]
  44702c:	lsl	x27, x19, #4
  447030:	ldr	x1, [x26]
  447034:	add	x0, x1, x27
  447038:	ldrb	w0, [x0, #8]
  44703c:	mov	w20, w0
  447040:	cmp	w0, #0x1
  447044:	b.eq	446fe0 <_obstack_memory_used@@Base+0x5e44>  // b.none
  447048:	cmp	w0, #0x3
  44704c:	b.eq	44714c <_obstack_memory_used@@Base+0x5fb0>  // b.none
  447050:	cmp	w0, #0x6
  447054:	b.eq	4471c8 <_obstack_memory_used@@Base+0x602c>  // b.none
  447058:	and	w1, w0, #0xfffffffd
  44705c:	and	w1, w1, #0xff
  447060:	cmp	w1, #0x5
  447064:	ccmp	w0, #0x2, #0x4, ne  // ne = any
  447068:	b.ne	447014 <_obstack_memory_used@@Base+0x5e78>  // b.any
  44706c:	mov	x2, #0x100                 	// #256
  447070:	mov	w1, #0x1                   	// #1
  447074:	mov	x0, x22
  447078:	bl	404420 <memset@plt>
  44707c:	cmp	w20, #0x2
  447080:	b.eq	4472e8 <_obstack_memory_used@@Base+0x614c>  // b.none
  447084:	ldp	x19, x20, [sp, #16]
  447088:	b	447304 <_obstack_memory_used@@Base+0x6168>
  44708c:	ldr	x0, [x26]
  447090:	ldrb	w0, [x0, x27]
  447094:	strb	w0, [sp, #128]
  447098:	add	x19, x19, #0x1
  44709c:	ldr	x0, [x26, #16]
  4470a0:	add	x3, sp, #0x81
  4470a4:	cmp	x19, x0
  4470a8:	b.cs	447144 <_obstack_memory_used@@Base+0x5fa8>  // b.hs, b.nlast
  4470ac:	mov	w5, #0xff                  	// #255
  4470b0:	movk	w5, #0x20, lsl #16
  4470b4:	mov	w4, #0x1                   	// #1
  4470b8:	movk	w4, #0x20, lsl #16
  4470bc:	lsl	x1, x19, #4
  4470c0:	ldr	x2, [x26]
  4470c4:	add	x0, x2, x1
  4470c8:	ldr	w0, [x0, #8]
  4470cc:	and	w0, w0, w5
  4470d0:	cmp	w0, w4
  4470d4:	b.ne	4470f0 <_obstack_memory_used@@Base+0x5f54>  // b.any
  4470d8:	ldrb	w0, [x2, x1]
  4470dc:	strb	w0, [x3], #1
  4470e0:	add	x19, x19, #0x1
  4470e4:	ldr	x0, [x26, #16]
  4470e8:	cmp	x0, x19
  4470ec:	b.hi	4470bc <_obstack_memory_used@@Base+0x5f20>  // b.pmore
  4470f0:	str	xzr, [sp, #120]
  4470f4:	add	x0, sp, #0x80
  4470f8:	sub	x19, x3, x0
  4470fc:	add	x3, sp, #0x78
  447100:	mov	x2, x19
  447104:	mov	x1, x0
  447108:	add	x0, sp, #0x74
  44710c:	bl	440da8 <argp_parse@@Base+0xd668>
  447110:	cmp	x19, x0
  447114:	b.ne	447014 <_obstack_memory_used@@Base+0x5e78>  // b.any
  447118:	ldr	w0, [sp, #116]
  44711c:	bl	404b80 <towlower@plt>
  447120:	add	x2, sp, #0x78
  447124:	mov	w1, w0
  447128:	add	x0, sp, #0x80
  44712c:	bl	404c20 <wcrtomb@plt>
  447130:	cmn	x0, #0x1
  447134:	b.eq	447014 <_obstack_memory_used@@Base+0x5e78>  // b.none
  447138:	ldrb	w0, [sp, #128]
  44713c:	strb	w23, [x22, x0]
  447140:	b	447014 <_obstack_memory_used@@Base+0x5e78>
  447144:	add	x3, sp, #0x81
  447148:	b	4470f0 <_obstack_memory_used@@Base+0x5f54>
  44714c:	str	xzr, [sp, #96]
  447150:	b	4471ac <_obstack_memory_used@@Base+0x6010>
  447154:	strb	w23, [x22, w2, sxtw]
  447158:	add	w20, w20, #0x1
  44715c:	add	x19, x19, #0x1
  447160:	cmp	w20, #0x40
  447164:	b.eq	447198 <_obstack_memory_used@@Base+0x5ffc>  // b.none
  447168:	mov	w2, w19
  44716c:	lsr	x0, x21, x20
  447170:	tbz	w0, #0, 447158 <_obstack_memory_used@@Base+0x5fbc>
  447174:	strb	w23, [x22, x19]
  447178:	cbz	w24, 447158 <_obstack_memory_used@@Base+0x5fbc>
  44717c:	add	w1, w19, #0x80
  447180:	cmp	w1, #0x17f
  447184:	b.hi	447154 <_obstack_memory_used@@Base+0x5fb8>  // b.pmore
  447188:	bl	4041f0 <__ctype_tolower_loc@plt>
  44718c:	ldr	x0, [x0]
  447190:	ldr	w2, [x0, x19, lsl #2]
  447194:	b	447154 <_obstack_memory_used@@Base+0x5fb8>
  447198:	ldr	x0, [sp, #96]
  44719c:	add	x0, x0, #0x8
  4471a0:	str	x0, [sp, #96]
  4471a4:	cmp	x0, #0x20
  4471a8:	b.eq	447014 <_obstack_memory_used@@Base+0x5e78>  // b.none
  4471ac:	ldr	x0, [x26]
  4471b0:	ldr	x0, [x0, x27]
  4471b4:	ldr	x1, [sp, #96]
  4471b8:	ldr	x21, [x0, x1]
  4471bc:	lsl	x19, x1, #3
  4471c0:	mov	w20, #0x0                   	// #0
  4471c4:	b	447168 <_obstack_memory_used@@Base+0x5fcc>
  4471c8:	ldr	x20, [x1, x27]
  4471cc:	ldr	w0, [x26, #180]
  4471d0:	cmp	w0, #0x1
  4471d4:	b.le	4471fc <_obstack_memory_used@@Base+0x6060>
  4471d8:	ldr	x0, [x20, #72]
  4471dc:	cbnz	x0, 4471f0 <_obstack_memory_used@@Base+0x6054>
  4471e0:	ldrb	w0, [x20, #32]
  4471e4:	tbnz	w0, #0, 4471f0 <_obstack_memory_used@@Base+0x6054>
  4471e8:	ldr	x0, [x20, #64]
  4471ec:	cbz	x0, 4471fc <_obstack_memory_used@@Base+0x6060>
  4471f0:	strb	wzr, [sp, #120]
  4471f4:	mov	x19, #0x1                   	// #1
  4471f8:	b	447224 <_obstack_memory_used@@Base+0x6088>
  4471fc:	ldr	x0, [x20, #40]
  447200:	mov	x19, #0x0                   	// #0
  447204:	cmp	x0, #0x0
  447208:	b.gt	447260 <_obstack_memory_used@@Base+0x60c4>
  44720c:	b	447014 <_obstack_memory_used@@Base+0x5e78>
  447210:	ldrb	w0, [sp, #120]
  447214:	add	w0, w0, #0x1
  447218:	and	w0, w0, #0xff
  44721c:	strb	w0, [sp, #120]
  447220:	cbz	w0, 447014 <_obstack_memory_used@@Base+0x5e78>
  447224:	str	xzr, [sp, #128]
  447228:	add	x3, sp, #0x80
  44722c:	mov	x2, x19
  447230:	add	x1, sp, #0x78
  447234:	mov	x0, #0x0                   	// #0
  447238:	bl	440da8 <argp_parse@@Base+0xd668>
  44723c:	cmn	x0, #0x2
  447240:	b.ne	447210 <_obstack_memory_used@@Base+0x6074>  // b.any
  447244:	ldrb	w0, [sp, #120]
  447248:	strb	w23, [x22, x0]
  44724c:	b	447210 <_obstack_memory_used@@Base+0x6074>
  447250:	add	x19, x19, #0x1
  447254:	ldr	x0, [x20, #40]
  447258:	cmp	x0, x19
  44725c:	b.le	447014 <_obstack_memory_used@@Base+0x5e78>
  447260:	str	xzr, [sp, #120]
  447264:	lsl	x27, x19, #2
  447268:	ldr	x0, [x20]
  44726c:	add	x2, sp, #0x78
  447270:	ldr	w1, [x0, x19, lsl #2]
  447274:	add	x0, sp, #0x80
  447278:	bl	404c20 <wcrtomb@plt>
  44727c:	cmn	x0, #0x1
  447280:	b.eq	4472a0 <_obstack_memory_used@@Base+0x6104>  // b.none
  447284:	ldrb	w21, [sp, #128]
  447288:	strb	w23, [x22, x21]
  44728c:	cbz	w24, 4472a0 <_obstack_memory_used@@Base+0x6104>
  447290:	bl	4041f0 <__ctype_tolower_loc@plt>
  447294:	ldr	x0, [x0]
  447298:	ldrsw	x0, [x0, x21, lsl #2]
  44729c:	strb	w23, [x22, x0]
  4472a0:	ldr	x0, [sp, #104]
  4472a4:	ldr	x0, [x0, #24]
  4472a8:	tbz	w0, #22, 447250 <_obstack_memory_used@@Base+0x60b4>
  4472ac:	ldr	w0, [x26, #180]
  4472b0:	cmp	w0, #0x1
  4472b4:	b.le	447250 <_obstack_memory_used@@Base+0x60b4>
  4472b8:	ldr	x0, [x20]
  4472bc:	ldr	w0, [x0, x27]
  4472c0:	bl	404b80 <towlower@plt>
  4472c4:	add	x2, sp, #0x78
  4472c8:	mov	w1, w0
  4472cc:	add	x0, sp, #0x80
  4472d0:	bl	404c20 <wcrtomb@plt>
  4472d4:	cmn	x0, #0x1
  4472d8:	b.eq	447250 <_obstack_memory_used@@Base+0x60b4>  // b.none
  4472dc:	ldrb	w0, [sp, #128]
  4472e0:	strb	w23, [x22, x0]
  4472e4:	b	447250 <_obstack_memory_used@@Base+0x60b4>
  4472e8:	ldr	x1, [sp, #104]
  4472ec:	ldrb	w0, [x1, #56]
  4472f0:	orr	w0, w0, #0x1
  4472f4:	strb	w0, [x1, #56]
  4472f8:	ldp	x19, x20, [sp, #16]
  4472fc:	b	447304 <_obstack_memory_used@@Base+0x6168>
  447300:	ldp	x19, x20, [sp, #16]
  447304:	ldp	x21, x22, [sp, #32]
  447308:	ldp	x23, x24, [sp, #48]
  44730c:	ldp	x25, x26, [sp, #64]
  447310:	ldp	x27, x28, [sp, #80]
  447314:	ldp	x29, x30, [sp], #384
  447318:	ret
  44731c:	stp	x29, x30, [sp, #-288]!
  447320:	mov	x29, sp
  447324:	stp	x23, x24, [sp, #48]
  447328:	stp	x27, x28, [sp, #80]
  44732c:	mov	x24, x0
  447330:	mov	x28, x1
  447334:	mov	x0, #0x3800                	// #14336
  447338:	bl	404310 <malloc@plt>
  44733c:	str	x0, [sp, #112]
  447340:	cbz	x0, 447cac <_obstack_memory_used@@Base+0x6b10>
  447344:	stp	x19, x20, [sp, #16]
  447348:	str	x0, [sp, #120]
  44734c:	add	x0, x0, #0x1, lsl #12
  447350:	add	x0, x0, #0x800
  447354:	str	x0, [sp, #96]
  447358:	str	xzr, [x28, #88]
  44735c:	str	xzr, [x28, #96]
  447360:	stp	xzr, xzr, [sp, #128]
  447364:	stp	xzr, xzr, [sp, #144]
  447368:	ldr	x0, [x28, #16]
  44736c:	cmp	x0, #0x0
  447370:	b.le	447cb4 <_obstack_memory_used@@Base+0x6b18>
  447374:	stp	x21, x22, [sp, #32]
  447378:	stp	x25, x26, [sp, #64]
  44737c:	mov	x19, #0x0                   	// #0
  447380:	mov	x27, #0x0                   	// #0
  447384:	b	447724 <_obstack_memory_used@@Base+0x6588>
  447388:	ldrb	w2, [x2, x1]
  44738c:	add	x3, sp, #0x80
  447390:	ubfx	x4, x2, #6, #2
  447394:	mov	x1, #0x1                   	// #1
  447398:	lsl	x2, x1, x2
  44739c:	ldr	x1, [x3, x4, lsl #3]
  4473a0:	orr	x1, x1, x2
  4473a4:	str	x1, [x3, x4, lsl #3]
  4473a8:	cbz	w0, 447464 <_obstack_memory_used@@Base+0x62c8>
  4473ac:	tbnz	w0, #5, 44751c <_obstack_memory_used@@Base+0x6380>
  4473b0:	tbnz	w0, #7, 447538 <_obstack_memory_used@@Base+0x639c>
  4473b4:	tbz	w0, #2, 44740c <_obstack_memory_used@@Base+0x6270>
  4473b8:	cmp	w25, #0x1
  4473bc:	b.eq	447544 <_obstack_memory_used@@Base+0x63a8>  // b.none
  4473c0:	ldr	w1, [x24, #180]
  4473c4:	cmp	w1, #0x1
  4473c8:	b.le	447558 <_obstack_memory_used@@Base+0x63bc>
  4473cc:	ldr	x7, [x24, #120]
  4473d0:	add	x4, sp, #0x80
  4473d4:	mov	x3, #0x0                   	// #0
  4473d8:	mov	x2, #0x0                   	// #0
  4473dc:	add	x6, x24, #0xb8
  4473e0:	ldr	x1, [x7, x2, lsl #3]
  4473e4:	ldr	x5, [x6, x2, lsl #3]
  4473e8:	orn	x1, x5, x1
  4473ec:	ldr	x5, [x4]
  4473f0:	and	x1, x1, x5
  4473f4:	str	x1, [x4], #8
  4473f8:	orr	x3, x3, x1
  4473fc:	add	x2, x2, #0x1
  447400:	cmp	x2, #0x4
  447404:	b.ne	4473e0 <_obstack_memory_used@@Base+0x6244>  // b.any
  447408:	cbz	x3, 447714 <_obstack_memory_used@@Base+0x6578>
  44740c:	tbz	w0, #3, 447464 <_obstack_memory_used@@Base+0x62c8>
  447410:	cmp	w25, #0x1
  447414:	b.eq	44758c <_obstack_memory_used@@Base+0x63f0>  // b.none
  447418:	ldr	w0, [x24, #180]
  44741c:	cmp	w0, #0x1
  447420:	b.le	4475a0 <_obstack_memory_used@@Base+0x6404>
  447424:	ldr	x6, [x24, #120]
  447428:	add	x3, sp, #0x80
  44742c:	mov	x2, #0x0                   	// #0
  447430:	mov	x1, #0x0                   	// #0
  447434:	add	x5, x24, #0xb8
  447438:	ldr	x0, [x5, x1, lsl #3]
  44743c:	ldr	x4, [x6, x1, lsl #3]
  447440:	and	x0, x0, x4
  447444:	ldr	x4, [x3]
  447448:	bic	x0, x4, x0
  44744c:	str	x0, [x3], #8
  447450:	orr	x2, x2, x0
  447454:	add	x1, x1, #0x1
  447458:	cmp	x1, #0x4
  44745c:	b.ne	447438 <_obstack_memory_used@@Base+0x629c>  // b.any
  447460:	cbz	x2, 447714 <_obstack_memory_used@@Base+0x6578>
  447464:	cmp	x19, #0x0
  447468:	b.le	44779c <_obstack_memory_used@@Base+0x6600>
  44746c:	ldr	x23, [sp, #112]
  447470:	add	x21, x23, #0x1, lsl #12
  447474:	add	x21, x21, #0x7f8
  447478:	mov	x20, #0x0                   	// #0
  44747c:	b	44762c <_obstack_memory_used@@Base+0x6490>
  447480:	ldr	x5, [x2, x1]
  447484:	add	x3, sp, #0x80
  447488:	mov	x1, #0x0                   	// #0
  44748c:	ldr	x2, [x3]
  447490:	ldr	x4, [x5, x1]
  447494:	orr	x2, x2, x4
  447498:	str	x2, [x3], #8
  44749c:	add	x1, x1, #0x8
  4474a0:	cmp	x1, #0x20
  4474a4:	b.ne	44748c <_obstack_memory_used@@Base+0x62f0>  // b.any
  4474a8:	b	4473a8 <_obstack_memory_used@@Base+0x620c>
  4474ac:	ldr	w1, [x24, #180]
  4474b0:	cmp	w1, #0x1
  4474b4:	b.le	4474e4 <_obstack_memory_used@@Base+0x6348>
  4474b8:	ldr	x5, [x24, #120]
  4474bc:	add	x3, sp, #0x80
  4474c0:	mov	x1, #0x0                   	// #0
  4474c4:	ldr	x2, [x3]
  4474c8:	ldr	x4, [x5, x1]
  4474cc:	orr	x2, x2, x4
  4474d0:	str	x2, [x3], #8
  4474d4:	add	x1, x1, #0x8
  4474d8:	cmp	x1, #0x20
  4474dc:	b.ne	4474c4 <_obstack_memory_used@@Base+0x6328>  // b.any
  4474e0:	b	4474f4 <_obstack_memory_used@@Base+0x6358>
  4474e4:	mov	x2, #0xffffffffffffffff    	// #-1
  4474e8:	mov	x3, #0xffffffffffffffff    	// #-1
  4474ec:	stp	x2, x3, [sp, #128]
  4474f0:	stp	x2, x3, [sp, #144]
  4474f4:	ldr	x1, [x24, #216]
  4474f8:	tbnz	w1, #6, 447508 <_obstack_memory_used@@Base+0x636c>
  4474fc:	ldr	x2, [sp, #128]
  447500:	and	x2, x2, #0xfffffffffffffbff
  447504:	str	x2, [sp, #128]
  447508:	tbz	w1, #7, 4473a8 <_obstack_memory_used@@Base+0x620c>
  44750c:	ldr	x1, [sp, #128]
  447510:	and	x1, x1, #0xfffffffffffffffe
  447514:	str	x1, [sp, #128]
  447518:	b	4473a8 <_obstack_memory_used@@Base+0x620c>
  44751c:	ldr	x1, [sp, #128]
  447520:	stp	xzr, xzr, [sp, #128]
  447524:	stp	xzr, xzr, [sp, #144]
  447528:	tbz	w1, #10, 447714 <_obstack_memory_used@@Base+0x6578>
  44752c:	mov	x1, #0x400                 	// #1024
  447530:	str	x1, [sp, #128]
  447534:	b	4473b0 <_obstack_memory_used@@Base+0x6214>
  447538:	stp	xzr, xzr, [sp, #128]
  44753c:	stp	xzr, xzr, [sp, #144]
  447540:	b	447714 <_obstack_memory_used@@Base+0x6578>
  447544:	ldrb	w1, [x26, #10]
  447548:	tbnz	w1, #6, 4473c0 <_obstack_memory_used@@Base+0x6224>
  44754c:	stp	xzr, xzr, [sp, #128]
  447550:	stp	xzr, xzr, [sp, #144]
  447554:	b	447714 <_obstack_memory_used@@Base+0x6578>
  447558:	add	x4, sp, #0x80
  44755c:	mov	x3, #0x0                   	// #0
  447560:	mov	x2, #0x0                   	// #0
  447564:	add	x6, x24, #0xb8
  447568:	ldr	x1, [x6, x2, lsl #3]
  44756c:	ldr	x5, [x4]
  447570:	and	x1, x1, x5
  447574:	str	x1, [x4], #8
  447578:	orr	x3, x3, x1
  44757c:	add	x2, x2, #0x1
  447580:	cmp	x2, #0x4
  447584:	b.ne	447568 <_obstack_memory_used@@Base+0x63cc>  // b.any
  447588:	b	447408 <_obstack_memory_used@@Base+0x626c>
  44758c:	ldrb	w0, [x26, #10]
  447590:	tbz	w0, #6, 447418 <_obstack_memory_used@@Base+0x627c>
  447594:	stp	xzr, xzr, [sp, #128]
  447598:	stp	xzr, xzr, [sp, #144]
  44759c:	b	447714 <_obstack_memory_used@@Base+0x6578>
  4475a0:	add	x3, sp, #0x80
  4475a4:	mov	x2, #0x0                   	// #0
  4475a8:	mov	x1, #0x0                   	// #0
  4475ac:	add	x5, x24, #0xb8
  4475b0:	ldr	x0, [x5, x1, lsl #3]
  4475b4:	ldr	x4, [x3]
  4475b8:	bic	x0, x4, x0
  4475bc:	str	x0, [x3], #8
  4475c0:	orr	x2, x2, x0
  4475c4:	add	x1, x1, #0x1
  4475c8:	cmp	x1, #0x4
  4475cc:	b.ne	4475b0 <_obstack_memory_used@@Base+0x6414>  // b.any
  4475d0:	b	447460 <_obstack_memory_used@@Base+0x62c4>
  4475d4:	mov	x0, #0x1                   	// #1
  4475d8:	mov	x3, #0x0                   	// #0
  4475dc:	mov	x6, x21
  4475e0:	lsl	x2, x0, #3
  4475e4:	add	x1, sp, #0x80
  4475e8:	add	x1, x2, x1
  4475ec:	ldur	x1, [x1, #-8]
  4475f0:	ldr	x4, [x21, x0, lsl #3]
  4475f4:	and	x1, x1, x4
  4475f8:	add	x4, sp, #0xa0
  4475fc:	add	x2, x2, x4
  447600:	stur	x1, [x2, #-8]
  447604:	orr	x3, x3, x1
  447608:	add	x0, x0, #0x1
  44760c:	cmp	x0, #0x5
  447610:	b.ne	4475e0 <_obstack_memory_used@@Base+0x6444>  // b.any
  447614:	cbnz	x3, 447660 <_obstack_memory_used@@Base+0x64c4>
  447618:	add	x20, x20, #0x1
  44761c:	add	x21, x21, #0x20
  447620:	add	x23, x23, #0x18
  447624:	cmp	x20, x19
  447628:	b.ge	44770c <_obstack_memory_used@@Base+0x6570>  // b.tcont
  44762c:	cmp	w25, #0x1
  447630:	b.ne	4475d4 <_obstack_memory_used@@Base+0x6438>  // b.any
  447634:	ldrb	w2, [x26]
  447638:	ubfx	x0, x2, #6, #2
  44763c:	lsl	x1, x20, #5
  447640:	add	x0, x1, x0, lsl #3
  447644:	ldr	x1, [sp, #96]
  447648:	ldr	x1, [x1, x0]
  44764c:	lsr	x1, x1, x2
  447650:	and	x0, x1, #0x1
  447654:	mov	x3, #0x0                   	// #0
  447658:	tbz	w1, #0, 447618 <_obstack_memory_used@@Base+0x647c>
  44765c:	b	4475dc <_obstack_memory_used@@Base+0x6440>
  447660:	add	x2, sp, #0x80
  447664:	mov	x1, #0x1                   	// #1
  447668:	mov	x22, #0x0                   	// #0
  44766c:	mov	x5, #0x0                   	// #0
  447670:	ldr	x3, [x2]
  447674:	ldr	x0, [x6, x1, lsl #3]
  447678:	bic	x4, x0, x3
  44767c:	add	x7, sp, #0xc0
  447680:	add	x7, x7, x1, lsl #3
  447684:	stur	x4, [x7, #-8]
  447688:	orr	x5, x5, x4
  44768c:	bic	x0, x3, x0
  447690:	str	x0, [x2], #8
  447694:	orr	x22, x22, x0
  447698:	add	x1, x1, #0x1
  44769c:	cmp	x1, #0x5
  4476a0:	b.ne	447670 <_obstack_memory_used@@Base+0x64d4>  // b.any
  4476a4:	cbz	x5, 4476ec <_obstack_memory_used@@Base+0x6550>
  4476a8:	ldr	x0, [sp, #96]
  4476ac:	add	x0, x0, x19, lsl #5
  4476b0:	ldp	x2, x3, [sp, #192]
  4476b4:	stp	x2, x3, [x0]
  4476b8:	ldp	x2, x3, [sp, #208]
  4476bc:	stp	x2, x3, [x0, #16]
  4476c0:	ldp	x0, x1, [sp, #160]
  4476c4:	stp	x0, x1, [x6, #8]
  4476c8:	ldp	x0, x1, [sp, #176]
  4476cc:	stp	x0, x1, [x6, #24]
  4476d0:	add	x0, x19, x19, lsl #1
  4476d4:	mov	x1, x23
  4476d8:	ldr	x2, [sp, #120]
  4476dc:	add	x0, x2, x0, lsl #3
  4476e0:	bl	442eb0 <_obstack_memory_used@@Base+0x1d14>
  4476e4:	cbnz	w0, 4477ec <_obstack_memory_used@@Base+0x6650>
  4476e8:	add	x19, x19, #0x1
  4476ec:	ldr	x0, [x28, #24]
  4476f0:	ldr	x1, [sp, #104]
  4476f4:	ldr	x1, [x0, x1]
  4476f8:	mov	x0, x23
  4476fc:	bl	442408 <_obstack_memory_used@@Base+0x126c>
  447700:	and	w0, w0, #0xff
  447704:	cbz	w0, 4477ec <_obstack_memory_used@@Base+0x6650>
  447708:	cbnz	x22, 447618 <_obstack_memory_used@@Base+0x647c>
  44770c:	cmp	x19, x20
  447710:	b.eq	4477a4 <_obstack_memory_used@@Base+0x6608>  // b.none
  447714:	add	x27, x27, #0x1
  447718:	ldr	x0, [x28, #16]
  44771c:	cmp	x27, x0
  447720:	b.ge	44783c <_obstack_memory_used@@Base+0x66a0>  // b.tcont
  447724:	lsl	x0, x27, #3
  447728:	str	x0, [sp, #104]
  44772c:	ldr	x0, [x28, #24]
  447730:	ldr	x1, [x0, x27, lsl #3]
  447734:	lsl	x1, x1, #4
  447738:	ldr	x2, [x24]
  44773c:	add	x26, x2, x1
  447740:	ldrb	w25, [x26, #8]
  447744:	ldr	w0, [x26, #8]
  447748:	ubfx	x0, x0, #8, #10
  44774c:	cmp	w25, #0x1
  447750:	b.eq	447388 <_obstack_memory_used@@Base+0x61ec>  // b.none
  447754:	cmp	w25, #0x3
  447758:	b.eq	447480 <_obstack_memory_used@@Base+0x62e4>  // b.none
  44775c:	cmp	w25, #0x5
  447760:	b.eq	4474ac <_obstack_memory_used@@Base+0x6310>  // b.none
  447764:	cmp	w25, #0x7
  447768:	b.ne	447714 <_obstack_memory_used@@Base+0x6578>  // b.any
  44776c:	mov	x2, #0xffffffffffffffff    	// #-1
  447770:	mov	x3, #0xffffffffffffffff    	// #-1
  447774:	stp	x2, x3, [sp, #128]
  447778:	ldr	x1, [x24, #216]
  44777c:	tbnz	w1, #6, 447788 <_obstack_memory_used@@Base+0x65ec>
  447780:	mov	x2, #0xfffffffffffffbff    	// #-1025
  447784:	str	x2, [sp, #128]
  447788:	tbz	w1, #7, 4473a8 <_obstack_memory_used@@Base+0x620c>
  44778c:	ldr	x1, [sp, #128]
  447790:	and	x1, x1, #0xfffffffffffffffe
  447794:	str	x1, [sp, #128]
  447798:	b	4473a8 <_obstack_memory_used@@Base+0x620c>
  44779c:	mov	x20, #0x0                   	// #0
  4477a0:	b	44770c <_obstack_memory_used@@Base+0x6570>
  4477a4:	ldr	x0, [sp, #96]
  4477a8:	add	x0, x0, x19, lsl #5
  4477ac:	ldp	x2, x3, [sp, #128]
  4477b0:	stp	x2, x3, [x0]
  4477b4:	ldp	x2, x3, [sp, #144]
  4477b8:	stp	x2, x3, [x0, #16]
  4477bc:	ldr	x1, [x28, #24]
  4477c0:	add	x0, x19, x19, lsl #1
  4477c4:	ldr	x2, [sp, #104]
  4477c8:	ldr	x1, [x1, x2]
  4477cc:	ldr	x2, [sp, #120]
  4477d0:	add	x0, x2, x0, lsl #3
  4477d4:	bl	4423b4 <_obstack_memory_used@@Base+0x1218>
  4477d8:	cbnz	w0, 4477ec <_obstack_memory_used@@Base+0x6650>
  4477dc:	add	x19, x19, #0x1
  4477e0:	stp	xzr, xzr, [sp, #128]
  4477e4:	stp	xzr, xzr, [sp, #144]
  4477e8:	b	447714 <_obstack_memory_used@@Base+0x6578>
  4477ec:	cmp	x19, #0x0
  4477f0:	b.le	447cbc <_obstack_memory_used@@Base+0x6b20>
  4477f4:	ldr	x0, [sp, #112]
  4477f8:	mov	x20, x0
  4477fc:	add	x19, x19, x19, lsl #1
  447800:	add	x19, x0, x19, lsl #3
  447804:	ldr	x0, [x20, #16]
  447808:	bl	4047c0 <free@plt>
  44780c:	add	x20, x20, #0x18
  447810:	cmp	x20, x19
  447814:	b.ne	447804 <_obstack_memory_used@@Base+0x6668>  // b.any
  447818:	mov	x19, #0xffffffffffffffff    	// #-1
  44781c:	ldp	x21, x22, [sp, #32]
  447820:	ldp	x25, x26, [sp, #64]
  447824:	ldr	x0, [sp, #112]
  447828:	bl	4047c0 <free@plt>
  44782c:	mov	w0, #0x0                   	// #0
  447830:	cbz	x19, 4478bc <_obstack_memory_used@@Base+0x6720>
  447834:	ldp	x19, x20, [sp, #16]
  447838:	b	44796c <_obstack_memory_used@@Base+0x67d0>
  44783c:	cmp	x19, #0x0
  447840:	b.le	4478b0 <_obstack_memory_used@@Base+0x6714>
  447844:	add	x1, x19, #0x1
  447848:	add	x0, sp, #0x100
  44784c:	bl	442644 <_obstack_memory_used@@Base+0x14a8>
  447850:	str	w0, [sp, #284]
  447854:	cbnz	w0, 447928 <_obstack_memory_used@@Base+0x678c>
  447858:	mov	x0, #0xa855                	// #43093
  44785c:	movk	x0, #0xaaaa, lsl #16
  447860:	movk	x0, #0xaaaa, lsl #32
  447864:	movk	x0, #0xaaa, lsl #48
  447868:	cmp	x19, x0
  44786c:	b.hi	447928 <_obstack_memory_used@@Base+0x678c>  // b.pmore
  447870:	add	x0, x19, x19, lsl #1
  447874:	lsl	x0, x0, #3
  447878:	str	x0, [sp, #120]
  44787c:	bl	404310 <malloc@plt>
  447880:	mov	x22, x0
  447884:	cbz	x0, 447928 <_obstack_memory_used@@Base+0x678c>
  447888:	lsl	x27, x19, #3
  44788c:	add	x26, x0, x27
  447890:	add	x27, x26, x27
  447894:	stp	xzr, xzr, [sp, #224]
  447898:	stp	xzr, xzr, [sp, #240]
  44789c:	ldr	x0, [sp, #112]
  4478a0:	add	x23, x0, #0x8
  4478a4:	str	wzr, [sp, #104]
  4478a8:	mov	x25, #0x0                   	// #0
  4478ac:	b	4479f0 <_obstack_memory_used@@Base+0x6854>
  4478b0:	ldp	x21, x22, [sp, #32]
  4478b4:	ldp	x25, x26, [sp, #64]
  4478b8:	b	447824 <_obstack_memory_used@@Base+0x6688>
  4478bc:	mov	x1, #0x100                 	// #256
  4478c0:	mov	x0, #0x8                   	// #8
  4478c4:	bl	4044d0 <calloc@plt>
  4478c8:	str	x0, [x28, #88]
  4478cc:	cmp	x0, #0x0
  4478d0:	cset	w0, ne  // ne = any
  4478d4:	ldp	x19, x20, [sp, #16]
  4478d8:	b	44796c <_obstack_memory_used@@Base+0x67d0>
  4478dc:	add	x20, x20, #0x1
  4478e0:	ldr	x0, [x21]
  4478e4:	cmp	x0, x20
  4478e8:	b.le	44797c <_obstack_memory_used@@Base+0x67e0>
  4478ec:	ldr	x0, [x21, #8]
  4478f0:	ldr	x1, [x0, x20, lsl #3]
  4478f4:	ldr	x0, [x24, #24]
  4478f8:	ldr	x1, [x0, x1, lsl #3]
  4478fc:	cmn	x1, #0x1
  447900:	b.eq	4478dc <_obstack_memory_used@@Base+0x6740>  // b.none
  447904:	add	x1, x1, x1, lsl #1
  447908:	ldr	x0, [x24, #48]
  44790c:	add	x1, x0, x1, lsl #3
  447910:	add	x0, sp, #0x100
  447914:	bl	442b48 <_obstack_memory_used@@Base+0x19ac>
  447918:	str	w0, [sp, #284]
  44791c:	cbz	w0, 4478dc <_obstack_memory_used@@Base+0x6740>
  447920:	mov	x0, x22
  447924:	bl	4047c0 <free@plt>
  447928:	ldr	x0, [sp, #272]
  44792c:	bl	4047c0 <free@plt>
  447930:	ldr	x0, [sp, #112]
  447934:	mov	x20, x0
  447938:	add	x19, x19, x19, lsl #1
  44793c:	add	x19, x0, x19, lsl #3
  447940:	ldr	x0, [x20, #16]
  447944:	bl	4047c0 <free@plt>
  447948:	add	x20, x20, #0x18
  44794c:	cmp	x19, x20
  447950:	b.ne	447940 <_obstack_memory_used@@Base+0x67a4>  // b.any
  447954:	ldr	x0, [sp, #112]
  447958:	bl	4047c0 <free@plt>
  44795c:	mov	w0, #0x0                   	// #0
  447960:	ldp	x19, x20, [sp, #16]
  447964:	ldp	x21, x22, [sp, #32]
  447968:	ldp	x25, x26, [sp, #64]
  44796c:	ldp	x23, x24, [sp, #48]
  447970:	ldp	x27, x28, [sp, #80]
  447974:	ldp	x29, x30, [sp], #288
  447978:	ret
  44797c:	mov	w3, #0x0                   	// #0
  447980:	add	x2, sp, #0x100
  447984:	mov	x1, x24
  447988:	add	x0, sp, #0x11c
  44798c:	bl	444d04 <_obstack_memory_used@@Base+0x3b68>
  447990:	mov	x20, x25
  447994:	str	x0, [x22, x25, lsl #3]
  447998:	cbz	x0, 447a0c <_obstack_memory_used@@Base+0x6870>
  44799c:	ldrsb	w1, [x0, #104]
  4479a0:	tbnz	w1, #31, 447a18 <_obstack_memory_used@@Base+0x687c>
  4479a4:	str	x0, [x26, x20, lsl #3]
  4479a8:	str	x0, [x27, x20, lsl #3]
  4479ac:	add	x21, sp, #0xe0
  4479b0:	ldr	x0, [sp, #112]
  4479b4:	str	x0, [sp, #96]
  4479b8:	add	x20, x0, x20, lsl #5
  4479bc:	add	x3, x21, #0x20
  4479c0:	mov	x0, x21
  4479c4:	ldr	x1, [x0]
  4479c8:	ldr	x2, [x20, #6144]
  4479cc:	orr	x1, x1, x2
  4479d0:	str	x1, [x0], #8
  4479d4:	add	x20, x20, #0x8
  4479d8:	cmp	x3, x0
  4479dc:	b.ne	4479c4 <_obstack_memory_used@@Base+0x6828>  // b.any
  4479e0:	add	x25, x25, #0x1
  4479e4:	add	x23, x23, #0x18
  4479e8:	cmp	x25, x19
  4479ec:	b.eq	447a88 <_obstack_memory_used@@Base+0x68ec>  // b.none
  4479f0:	str	xzr, [sp, #264]
  4479f4:	mov	x21, x23
  4479f8:	ldr	x0, [x23]
  4479fc:	cmp	x0, #0x0
  447a00:	b.le	44797c <_obstack_memory_used@@Base+0x67e0>
  447a04:	mov	x20, #0x0                   	// #0
  447a08:	b	4478ec <_obstack_memory_used@@Base+0x6750>
  447a0c:	ldr	w1, [sp, #284]
  447a10:	cbz	w1, 44799c <_obstack_memory_used@@Base+0x6800>
  447a14:	b	447920 <_obstack_memory_used@@Base+0x6784>
  447a18:	mov	w3, #0x1                   	// #1
  447a1c:	add	x2, sp, #0x100
  447a20:	mov	x1, x24
  447a24:	add	x0, sp, #0x11c
  447a28:	bl	444d04 <_obstack_memory_used@@Base+0x3b68>
  447a2c:	str	x0, [x26, x20, lsl #3]
  447a30:	cbz	x0, 447a7c <_obstack_memory_used@@Base+0x68e0>
  447a34:	ldr	x1, [x22, x20, lsl #3]
  447a38:	cmp	x0, x1
  447a3c:	b.eq	447a54 <_obstack_memory_used@@Base+0x68b8>  // b.none
  447a40:	ldr	w0, [x24, #180]
  447a44:	cmp	w0, #0x2
  447a48:	ldr	w0, [sp, #104]
  447a4c:	csinc	w0, w0, wzr, lt  // lt = tstop
  447a50:	str	w0, [sp, #104]
  447a54:	mov	w3, #0x2                   	// #2
  447a58:	add	x2, sp, #0x100
  447a5c:	mov	x1, x24
  447a60:	add	x0, sp, #0x11c
  447a64:	bl	444d04 <_obstack_memory_used@@Base+0x3b68>
  447a68:	str	x0, [x27, x20, lsl #3]
  447a6c:	cbnz	x0, 4479ac <_obstack_memory_used@@Base+0x6810>
  447a70:	ldr	w0, [sp, #284]
  447a74:	cbz	w0, 4479ac <_obstack_memory_used@@Base+0x6810>
  447a78:	b	447920 <_obstack_memory_used@@Base+0x6784>
  447a7c:	ldr	w1, [sp, #284]
  447a80:	cbz	w1, 447a34 <_obstack_memory_used@@Base+0x6898>
  447a84:	b	447920 <_obstack_memory_used@@Base+0x6784>
  447a88:	ldr	w0, [sp, #104]
  447a8c:	cbnz	w0, 447bd8 <_obstack_memory_used@@Base+0x6a3c>
  447a90:	mov	x1, #0x100                 	// #256
  447a94:	mov	x0, #0x8                   	// #8
  447a98:	bl	4044d0 <calloc@plt>
  447a9c:	mov	x9, x0
  447aa0:	str	x0, [x28, #88]
  447aa4:	cbz	x0, 447920 <_obstack_memory_used@@Base+0x6784>
  447aa8:	ldr	x0, [sp, #112]
  447aac:	add	x8, x0, #0x1, lsl #12
  447ab0:	add	x8, x8, #0x800
  447ab4:	mov	x7, #0x0                   	// #0
  447ab8:	add	x24, x24, #0xb8
  447abc:	mov	x11, #0x0                   	// #0
  447ac0:	ldr	x0, [x21]
  447ac4:	cbz	x0, 447ae8 <_obstack_memory_used@@Base+0x694c>
  447ac8:	mov	x10, x7
  447acc:	add	x3, x9, x7, lsl #9
  447ad0:	mov	x2, #0x1                   	// #1
  447ad4:	tbnz	w0, #0, 447b80 <_obstack_memory_used@@Base+0x69e4>
  447ad8:	lsl	x2, x2, #1
  447adc:	lsr	x0, x0, #1
  447ae0:	add	x3, x3, #0x8
  447ae4:	cbnz	x0, 447ad4 <_obstack_memory_used@@Base+0x6938>
  447ae8:	add	x7, x7, #0x1
  447aec:	add	x21, x21, #0x8
  447af0:	add	x8, x8, #0x8
  447af4:	cmp	x7, #0x4
  447af8:	b.ne	447ac0 <_obstack_memory_used@@Base+0x6924>  // b.any
  447afc:	ldr	x0, [sp, #224]
  447b00:	tbz	w0, #10, 447b2c <_obstack_memory_used@@Base+0x6990>
  447b04:	mov	x0, #0x0                   	// #0
  447b08:	ldr	x1, [sp, #112]
  447b0c:	add	x3, x1, #0x1, lsl #12
  447b10:	add	x3, x3, #0x800
  447b14:	lsl	x1, x0, #5
  447b18:	ldr	x1, [x3, x1]
  447b1c:	tbnz	w1, #10, 447c94 <_obstack_memory_used@@Base+0x6af8>
  447b20:	add	x0, x0, #0x1
  447b24:	cmp	x0, x19
  447b28:	b.ne	447b14 <_obstack_memory_used@@Base+0x6978>  // b.any
  447b2c:	mov	x0, x22
  447b30:	bl	4047c0 <free@plt>
  447b34:	ldr	x0, [sp, #272]
  447b38:	bl	4047c0 <free@plt>
  447b3c:	ldr	x0, [sp, #120]
  447b40:	ldr	x1, [sp, #96]
  447b44:	add	x19, x0, x1
  447b48:	ldr	x20, [sp, #96]
  447b4c:	ldr	x0, [x20, #16]
  447b50:	bl	4047c0 <free@plt>
  447b54:	add	x0, x20, #0x18
  447b58:	str	x0, [sp, #96]
  447b5c:	cmp	x19, x0
  447b60:	b.ne	447b48 <_obstack_memory_used@@Base+0x69ac>  // b.any
  447b64:	ldr	x0, [sp, #112]
  447b68:	bl	4047c0 <free@plt>
  447b6c:	mov	w0, #0x1                   	// #1
  447b70:	ldp	x19, x20, [sp, #16]
  447b74:	ldp	x21, x22, [sp, #32]
  447b78:	ldp	x25, x26, [sp, #64]
  447b7c:	b	44796c <_obstack_memory_used@@Base+0x67d0>
  447b80:	mov	x6, x8
  447b84:	ldr	x1, [x8]
  447b88:	tst	x2, x1
  447b8c:	b.ne	447bc4 <_obstack_memory_used@@Base+0x6a28>  // b.any
  447b90:	mov	x1, #0x0                   	// #0
  447b94:	add	x1, x1, #0x1
  447b98:	mov	x5, x1
  447b9c:	lsl	x4, x1, #5
  447ba0:	ldr	x4, [x6, x4]
  447ba4:	tst	x2, x4
  447ba8:	b.eq	447b94 <_obstack_memory_used@@Base+0x69f8>  // b.none
  447bac:	ldr	x1, [x24, x10, lsl #3]
  447bb0:	tst	x2, x1
  447bb4:	b.eq	447bcc <_obstack_memory_used@@Base+0x6a30>  // b.none
  447bb8:	ldr	x1, [x26, x5, lsl #3]
  447bbc:	str	x1, [x3]
  447bc0:	b	447ad8 <_obstack_memory_used@@Base+0x693c>
  447bc4:	mov	x5, x11
  447bc8:	b	447bac <_obstack_memory_used@@Base+0x6a10>
  447bcc:	ldr	x1, [x22, x5, lsl #3]
  447bd0:	str	x1, [x3]
  447bd4:	b	447ad8 <_obstack_memory_used@@Base+0x693c>
  447bd8:	mov	x1, #0x200                 	// #512
  447bdc:	mov	x0, #0x8                   	// #8
  447be0:	bl	4044d0 <calloc@plt>
  447be4:	mov	x9, x0
  447be8:	str	x0, [x28, #96]
  447bec:	cbz	x0, 447920 <_obstack_memory_used@@Base+0x6784>
  447bf0:	add	x10, x0, #0x800
  447bf4:	ldr	x0, [sp, #112]
  447bf8:	add	x7, x0, #0x1, lsl #12
  447bfc:	add	x7, x7, #0x800
  447c00:	mov	w8, #0x0                   	// #0
  447c04:	mov	x11, #0x0                   	// #0
  447c08:	ldr	x0, [x21]
  447c0c:	cbz	x0, 447c2c <_obstack_memory_used@@Base+0x6a90>
  447c10:	mov	x3, x10
  447c14:	mov	x2, #0x1                   	// #1
  447c18:	tbnz	w0, #0, 447c48 <_obstack_memory_used@@Base+0x6aac>
  447c1c:	lsl	x2, x2, #1
  447c20:	lsr	x0, x0, #1
  447c24:	add	x3, x3, #0x8
  447c28:	cbnz	x0, 447c18 <_obstack_memory_used@@Base+0x6a7c>
  447c2c:	add	x21, x21, #0x8
  447c30:	add	w8, w8, #0x40
  447c34:	add	x10, x10, #0x200
  447c38:	add	x7, x7, #0x8
  447c3c:	cmp	w8, #0x100
  447c40:	b.ne	447c08 <_obstack_memory_used@@Base+0x6a6c>  // b.any
  447c44:	b	447afc <_obstack_memory_used@@Base+0x6960>
  447c48:	mov	x6, x7
  447c4c:	ldr	x1, [x7]
  447c50:	tst	x2, x1
  447c54:	b.ne	447c8c <_obstack_memory_used@@Base+0x6af0>  // b.any
  447c58:	mov	x1, #0x0                   	// #0
  447c5c:	add	x1, x1, #0x1
  447c60:	mov	x5, x1
  447c64:	lsl	x4, x1, #5
  447c68:	ldr	x4, [x6, x4]
  447c6c:	tst	x2, x4
  447c70:	b.eq	447c5c <_obstack_memory_used@@Base+0x6ac0>  // b.none
  447c74:	sub	x1, x3, #0x8, lsl #12
  447c78:	ldr	x4, [x22, x5, lsl #3]
  447c7c:	str	x4, [x1, #30720]
  447c80:	ldr	x1, [x26, x5, lsl #3]
  447c84:	str	x1, [x3]
  447c88:	b	447c1c <_obstack_memory_used@@Base+0x6a80>
  447c8c:	mov	x5, x11
  447c90:	b	447c74 <_obstack_memory_used@@Base+0x6ad8>
  447c94:	ldr	x0, [x27, x0, lsl #3]
  447c98:	str	x0, [x9, #80]
  447c9c:	ldr	w1, [sp, #104]
  447ca0:	cbz	w1, 447b2c <_obstack_memory_used@@Base+0x6990>
  447ca4:	str	x0, [x9, #2128]
  447ca8:	b	447b2c <_obstack_memory_used@@Base+0x6990>
  447cac:	mov	w0, #0x0                   	// #0
  447cb0:	b	44796c <_obstack_memory_used@@Base+0x67d0>
  447cb4:	mov	x19, #0x0                   	// #0
  447cb8:	b	447824 <_obstack_memory_used@@Base+0x6688>
  447cbc:	mov	x19, #0xffffffffffffffff    	// #-1
  447cc0:	ldp	x21, x22, [sp, #32]
  447cc4:	ldp	x25, x26, [sp, #64]
  447cc8:	b	447824 <_obstack_memory_used@@Base+0x6688>
  447ccc:	stp	x29, x30, [sp, #-208]!
  447cd0:	mov	x29, sp
  447cd4:	stp	x19, x20, [sp, #16]
  447cd8:	stp	x21, x22, [sp, #32]
  447cdc:	stp	x23, x24, [sp, #48]
  447ce0:	stp	x25, x26, [sp, #64]
  447ce4:	stp	x27, x28, [sp, #80]
  447ce8:	mov	x21, x1
  447cec:	str	x2, [x29, #120]
  447cf0:	mov	x22, x3
  447cf4:	ldr	x0, [x0]
  447cf8:	str	x0, [x29, #136]
  447cfc:	str	xzr, [x29, #152]
  447d00:	mov	x0, #0x2                   	// #2
  447d04:	str	x0, [x29, #160]
  447d08:	str	xzr, [x29, #168]
  447d0c:	tst	w4, #0xff
  447d10:	b.eq	447d7c <_obstack_memory_used@@Base+0x6be0>  // b.none
  447d14:	mov	x0, #0x60                  	// #96
  447d18:	bl	404310 <malloc@plt>
  447d1c:	str	x0, [x29, #168]
  447d20:	cbz	x0, 44827c <_obstack_memory_used@@Base+0x70e0>
  447d24:	add	x26, x29, #0x98
  447d28:	ldr	x0, [x29, #136]
  447d2c:	ldr	x19, [x0, #144]
  447d30:	stp	xzr, xzr, [x29, #176]
  447d34:	str	xzr, [x29, #192]
  447d38:	ldr	x0, [x29, #120]
  447d3c:	lsl	x0, x0, #4
  447d40:	str	x0, [x29, #112]
  447d44:	cmp	x0, #0xfbf
  447d48:	b.hi	447d84 <_obstack_memory_used@@Base+0x6be8>  // b.pmore
  447d4c:	sub	sp, sp, x0
  447d50:	mov	x0, sp
  447d54:	str	x0, [x29, #104]
  447d58:	str	wzr, [x29, #100]
  447d5c:	ldr	x2, [x29, #112]
  447d60:	mov	x1, x22
  447d64:	ldr	x0, [x29, #104]
  447d68:	bl	403f70 <memcpy@plt>
  447d6c:	ldr	x0, [x22]
  447d70:	str	x0, [x29, #200]
  447d74:	ldr	x25, [x29, #120]
  447d78:	b	4480d8 <_obstack_memory_used@@Base+0x6f3c>
  447d7c:	mov	x26, #0x0                   	// #0
  447d80:	b	447d28 <_obstack_memory_used@@Base+0x6b8c>
  447d84:	ldr	x0, [x29, #112]
  447d88:	bl	404310 <malloc@plt>
  447d8c:	str	x0, [x29, #104]
  447d90:	mov	w1, #0x1                   	// #1
  447d94:	str	w1, [x29, #100]
  447d98:	cbnz	x0, 447d5c <_obstack_memory_used@@Base+0x6bc0>
  447d9c:	mov	x0, x26
  447da0:	bl	4453f4 <_obstack_memory_used@@Base+0x4258>
  447da4:	mov	w0, #0xc                   	// #12
  447da8:	b	448250 <_obstack_memory_used@@Base+0x70b4>
  447dac:	ldr	x0, [x2, x1]
  447db0:	add	x0, x0, #0x1
  447db4:	ldr	x1, [x29, #120]
  447db8:	cmp	x1, x0
  447dbc:	b.le	448110 <_obstack_memory_used@@Base+0x6f74>
  447dc0:	lsl	x0, x0, #4
  447dc4:	add	x1, x22, x0
  447dc8:	str	x20, [x22, x0]
  447dcc:	mov	x0, #0xffffffffffffffff    	// #-1
  447dd0:	str	x0, [x1, #8]
  447dd4:	b	448110 <_obstack_memory_used@@Base+0x6f74>
  447dd8:	ldr	x0, [x2, x1]
  447ddc:	add	x0, x0, #0x1
  447de0:	ldr	x1, [x29, #120]
  447de4:	cmp	x1, x0
  447de8:	b.le	448110 <_obstack_memory_used@@Base+0x6f74>
  447dec:	lsl	x0, x0, #4
  447df0:	add	x2, x22, x0
  447df4:	ldr	x1, [x22, x0]
  447df8:	cmp	x20, x1
  447dfc:	b.gt	447e20 <_obstack_memory_used@@Base+0x6c84>
  447e00:	ldrb	w1, [x3, #10]
  447e04:	tbz	w1, #3, 447e18 <_obstack_memory_used@@Base+0x6c7c>
  447e08:	ldr	x1, [x29, #104]
  447e0c:	ldr	x0, [x1, x0]
  447e10:	cmn	x0, #0x1
  447e14:	b.ne	447e38 <_obstack_memory_used@@Base+0x6c9c>  // b.any
  447e18:	str	x20, [x2, #8]
  447e1c:	b	448110 <_obstack_memory_used@@Base+0x6f74>
  447e20:	str	x20, [x2, #8]
  447e24:	ldr	x2, [x29, #112]
  447e28:	mov	x1, x22
  447e2c:	ldr	x0, [x29, #104]
  447e30:	bl	403f70 <memcpy@plt>
  447e34:	b	448110 <_obstack_memory_used@@Base+0x6f74>
  447e38:	ldr	x2, [x29, #112]
  447e3c:	mov	x0, x22
  447e40:	bl	403f70 <memcpy@plt>
  447e44:	b	448110 <_obstack_memory_used@@Base+0x6f74>
  447e48:	cbz	x26, 447ed8 <_obstack_memory_used@@Base+0x6d3c>
  447e4c:	ldr	x0, [x29, #120]
  447e50:	cbz	x0, 447eb0 <_obstack_memory_used@@Base+0x6d14>
  447e54:	mov	x0, x22
  447e58:	mov	x1, #0x0                   	// #0
  447e5c:	b	447e70 <_obstack_memory_used@@Base+0x6cd4>
  447e60:	add	x1, x1, #0x1
  447e64:	add	x0, x0, #0x10
  447e68:	cmp	x25, x1
  447e6c:	b.eq	447eb0 <_obstack_memory_used@@Base+0x6d14>  // b.none
  447e70:	ldr	x2, [x0]
  447e74:	tbnz	x2, #63, 447e60 <_obstack_memory_used@@Base+0x6cc4>
  447e78:	ldr	x2, [x0, #8]
  447e7c:	cmn	x2, #0x1
  447e80:	b.ne	447e60 <_obstack_memory_used@@Base+0x6cc4>  // b.any
  447e84:	ldr	x0, [x29, #120]
  447e88:	cmp	x0, x1
  447e8c:	b.eq	447eb0 <_obstack_memory_used@@Base+0x6d14>  // b.none
  447e90:	add	x4, x29, #0xb0
  447e94:	mov	x3, x22
  447e98:	mov	x2, x25
  447e9c:	add	x1, x29, #0xc8
  447ea0:	mov	x0, x26
  447ea4:	bl	4456e8 <_obstack_memory_used@@Base+0x454c>
  447ea8:	mov	x19, x0
  447eac:	b	448128 <_obstack_memory_used@@Base+0x6f8c>
  447eb0:	ldr	x0, [x29, #192]
  447eb4:	bl	4047c0 <free@plt>
  447eb8:	ldr	w0, [x29, #100]
  447ebc:	cbnz	w0, 447ecc <_obstack_memory_used@@Base+0x6d30>
  447ec0:	mov	x0, x26
  447ec4:	bl	4453f4 <_obstack_memory_used@@Base+0x4258>
  447ec8:	b	448250 <_obstack_memory_used@@Base+0x70b4>
  447ecc:	ldr	x0, [x29, #104]
  447ed0:	bl	4047c0 <free@plt>
  447ed4:	b	447ec0 <_obstack_memory_used@@Base+0x6d24>
  447ed8:	ldr	x0, [x29, #192]
  447edc:	bl	4047c0 <free@plt>
  447ee0:	mov	w0, #0x0                   	// #0
  447ee4:	ldr	w1, [x29, #100]
  447ee8:	cbz	w1, 448250 <_obstack_memory_used@@Base+0x70b4>
  447eec:	ldr	x0, [x29, #104]
  447ef0:	bl	4047c0 <free@plt>
  447ef4:	mov	w0, #0x0                   	// #0
  447ef8:	b	448250 <_obstack_memory_used@@Base+0x70b4>
  447efc:	ldr	x0, [x21, #184]
  447f00:	ldr	x1, [x29, #200]
  447f04:	ldr	x24, [x0, x1, lsl #3]
  447f08:	add	x24, x24, #0x8
  447f0c:	add	x20, x19, x19, lsl #1
  447f10:	ldr	x0, [x23, #40]
  447f14:	add	x20, x0, x20, lsl #3
  447f18:	mov	x1, x19
  447f1c:	add	x0, x29, #0xb0
  447f20:	bl	442408 <_obstack_memory_used@@Base+0x126c>
  447f24:	and	w0, w0, #0xff
  447f28:	cbz	w0, 447fe0 <_obstack_memory_used@@Base+0x6e44>
  447f2c:	ldr	x27, [x20, #8]
  447f30:	cmp	x27, #0x0
  447f34:	b.le	448284 <_obstack_memory_used@@Base+0x70e8>
  447f38:	ldr	x28, [x20, #16]
  447f3c:	mov	x19, #0xffffffffffffffff    	// #-1
  447f40:	mov	x20, #0x0                   	// #0
  447f44:	b	448034 <_obstack_memory_used@@Base+0x6e98>
  447f48:	mov	x1, x19
  447f4c:	add	x0, x29, #0xb0
  447f50:	bl	441424 <_obstack_memory_used@@Base+0x288>
  447f54:	cbnz	x0, 448200 <_obstack_memory_used@@Base+0x7064>
  447f58:	cbz	x26, 4480d4 <_obstack_memory_used@@Base+0x6f38>
  447f5c:	ldr	x20, [x29, #200]
  447f60:	ldr	x24, [x26]
  447f64:	add	x0, x24, #0x1
  447f68:	str	x0, [x26]
  447f6c:	ldr	x1, [x26, #8]
  447f70:	cmp	x0, x1
  447f74:	b.eq	448000 <_obstack_memory_used@@Base+0x6e64>  // b.none
  447f78:	add	x24, x24, x24, lsl #1
  447f7c:	lsl	x24, x24, #4
  447f80:	ldr	x0, [x26, #16]
  447f84:	str	x20, [x0, x24]
  447f88:	ldr	x0, [x26, #16]
  447f8c:	add	x0, x0, x24
  447f90:	str	x23, [x0, #8]
  447f94:	ldr	x20, [x26, #16]
  447f98:	add	x20, x20, x24
  447f9c:	ldr	x23, [x29, #112]
  447fa0:	mov	x0, x23
  447fa4:	bl	404310 <malloc@plt>
  447fa8:	str	x0, [x20, #16]
  447fac:	ldr	x0, [x26, #16]
  447fb0:	add	x0, x0, x24
  447fb4:	ldr	x0, [x0, #16]
  447fb8:	cbz	x0, 447fe0 <_obstack_memory_used@@Base+0x6e44>
  447fbc:	mov	x2, x23
  447fc0:	mov	x1, x22
  447fc4:	bl	403f70 <memcpy@plt>
  447fc8:	ldr	x0, [x26, #16]
  447fcc:	add	x0, x0, x24
  447fd0:	add	x1, x29, #0xb0
  447fd4:	add	x0, x0, #0x18
  447fd8:	bl	442eb0 <_obstack_memory_used@@Base+0x1d14>
  447fdc:	cbz	w0, 4480d4 <_obstack_memory_used@@Base+0x6f38>
  447fe0:	ldr	x0, [x29, #192]
  447fe4:	bl	4047c0 <free@plt>
  447fe8:	ldr	w0, [x29, #100]
  447fec:	cbnz	w0, 448208 <_obstack_memory_used@@Base+0x706c>
  447ff0:	mov	x0, x26
  447ff4:	bl	4453f4 <_obstack_memory_used@@Base+0x4258>
  447ff8:	mov	w0, #0xc                   	// #12
  447ffc:	b	448250 <_obstack_memory_used@@Base+0x70b4>
  448000:	add	x1, x1, x1, lsl #1
  448004:	lsl	x1, x1, #5
  448008:	ldr	x0, [x26, #16]
  44800c:	bl	404540 <realloc@plt>
  448010:	cbz	x0, 447fe0 <_obstack_memory_used@@Base+0x6e44>
  448014:	ldr	x1, [x26, #8]
  448018:	lsl	x1, x1, #1
  44801c:	str	x1, [x26, #8]
  448020:	str	x0, [x26, #16]
  448024:	b	447f78 <_obstack_memory_used@@Base+0x6ddc>
  448028:	add	x20, x20, #0x1
  44802c:	cmp	x27, x20
  448030:	b.eq	4480d4 <_obstack_memory_used@@Base+0x6f38>  // b.none
  448034:	ldr	x23, [x28, x20, lsl #3]
  448038:	mov	x1, x23
  44803c:	mov	x0, x24
  448040:	bl	441424 <_obstack_memory_used@@Base+0x288>
  448044:	cbz	x0, 448028 <_obstack_memory_used@@Base+0x6e8c>
  448048:	cmn	x19, #0x1
  44804c:	b.ne	447f48 <_obstack_memory_used@@Base+0x6dac>  // b.any
  448050:	mov	x19, x23
  448054:	b	448028 <_obstack_memory_used@@Base+0x6e8c>
  448058:	ldr	x3, [x29, #200]
  44805c:	mov	x2, x21
  448060:	mov	x1, x19
  448064:	mov	x0, x23
  448068:	bl	4463c0 <_obstack_memory_used@@Base+0x5224>
  44806c:	sxtw	x20, w0
  448070:	cbnz	w0, 4481a0 <_obstack_memory_used@@Base+0x7004>
  448074:	ldr	x20, [x29, #200]
  448078:	ldr	x1, [x23]
  44807c:	mov	x2, x20
  448080:	add	x1, x1, x24
  448084:	mov	x0, x21
  448088:	bl	443984 <_obstack_memory_used@@Base+0x27e8>
  44808c:	and	w0, w0, #0xff
  448090:	cbz	w0, 448284 <_obstack_memory_used@@Base+0x70e8>
  448094:	ldr	x0, [x23, #24]
  448098:	ldr	x19, [x0, x27, lsl #3]
  44809c:	add	x20, x20, #0x1
  4480a0:	str	x20, [x29, #200]
  4480a4:	cbz	x26, 4480d0 <_obstack_memory_used@@Base+0x6f34>
  4480a8:	ldr	x0, [x21, #168]
  4480ac:	cmp	x20, x0
  4480b0:	b.gt	448284 <_obstack_memory_used@@Base+0x70e8>
  4480b4:	ldr	x0, [x21, #184]
  4480b8:	ldr	x0, [x0, x20, lsl #3]
  4480bc:	cbz	x0, 448284 <_obstack_memory_used@@Base+0x70e8>
  4480c0:	mov	x1, x19
  4480c4:	add	x0, x0, #0x8
  4480c8:	bl	441424 <_obstack_memory_used@@Base+0x288>
  4480cc:	cbz	x0, 448284 <_obstack_memory_used@@Base+0x70e8>
  4480d0:	str	xzr, [x29, #184]
  4480d4:	tbnz	x19, #63, 448288 <_obstack_memory_used@@Base+0x70ec>
  4480d8:	ldr	x20, [x29, #200]
  4480dc:	ldr	x0, [x22, #8]
  4480e0:	cmp	x0, x20
  4480e4:	b.lt	448238 <_obstack_memory_used@@Base+0x709c>  // b.tstop
  4480e8:	str	x25, [x29, #128]
  4480ec:	lsl	x1, x19, #4
  4480f0:	ldr	x0, [x29, #136]
  4480f4:	ldr	x2, [x0]
  4480f8:	add	x3, x2, x1
  4480fc:	ldrb	w0, [x3, #8]
  448100:	cmp	w0, #0x8
  448104:	b.eq	447dac <_obstack_memory_used@@Base+0x6c10>  // b.none
  448108:	cmp	w0, #0x9
  44810c:	b.eq	447dd8 <_obstack_memory_used@@Base+0x6c3c>  // b.none
  448110:	ldr	x0, [x22, #8]
  448114:	cmp	x0, x20
  448118:	b.ne	448128 <_obstack_memory_used@@Base+0x6f8c>  // b.any
  44811c:	ldr	x0, [x21, #176]
  448120:	cmp	x0, x19
  448124:	b.eq	447e48 <_obstack_memory_used@@Base+0x6cac>  // b.none
  448128:	ldr	x23, [x21, #152]
  44812c:	mov	x27, x19
  448130:	lsl	x24, x19, #4
  448134:	ldr	x2, [x23]
  448138:	add	x0, x2, x24
  44813c:	ldrb	w1, [x0, #8]
  448140:	tbnz	w1, #3, 447efc <_obstack_memory_used@@Base+0x6d60>
  448144:	ldrb	w0, [x0, #10]
  448148:	tbnz	w0, #4, 448058 <_obstack_memory_used@@Base+0x6ebc>
  44814c:	cmp	w1, #0x4
  448150:	b.ne	448074 <_obstack_memory_used@@Base+0x6ed8>  // b.any
  448154:	ldr	x0, [x2, x24]
  448158:	add	x0, x0, #0x1
  44815c:	lsl	x0, x0, #4
  448160:	add	x1, x22, x0
  448164:	ldr	x1, [x1, #8]
  448168:	ldr	x0, [x22, x0]
  44816c:	sub	x20, x1, x0
  448170:	cbz	x26, 4481b4 <_obstack_memory_used@@Base+0x7018>
  448174:	cmn	x0, #0x1
  448178:	ccmn	x1, #0x1, #0x4, ne  // ne = any
  44817c:	b.eq	448284 <_obstack_memory_used@@Base+0x70e8>  // b.none
  448180:	cbz	x20, 4481b8 <_obstack_memory_used@@Base+0x701c>
  448184:	ldr	x3, [x21, #8]
  448188:	mov	x2, x20
  44818c:	ldr	x1, [x29, #200]
  448190:	add	x1, x3, x1
  448194:	add	x0, x3, x0
  448198:	bl	4046e0 <memcmp@plt>
  44819c:	cbnz	w0, 448284 <_obstack_memory_used@@Base+0x70e8>
  4481a0:	ldr	x0, [x23, #24]
  4481a4:	ldr	x19, [x0, x27, lsl #3]
  4481a8:	ldr	x0, [x29, #200]
  4481ac:	add	x20, x20, x0
  4481b0:	b	4480a0 <_obstack_memory_used@@Base+0x6f04>
  4481b4:	cbnz	x20, 4481a0 <_obstack_memory_used@@Base+0x7004>
  4481b8:	mov	x1, x19
  4481bc:	add	x0, x29, #0xb0
  4481c0:	bl	442408 <_obstack_memory_used@@Base+0x126c>
  4481c4:	and	w0, w0, #0xff
  4481c8:	cbz	w0, 447fe0 <_obstack_memory_used@@Base+0x6e44>
  4481cc:	ldr	x1, [x23, #40]
  4481d0:	add	x0, x27, x27, lsl #1
  4481d4:	add	x0, x1, x0, lsl #3
  4481d8:	ldr	x0, [x0, #16]
  4481dc:	ldr	x19, [x0]
  4481e0:	ldr	x0, [x21, #184]
  4481e4:	ldr	x1, [x29, #200]
  4481e8:	ldr	x0, [x0, x1, lsl #3]
  4481ec:	mov	x1, x19
  4481f0:	add	x0, x0, #0x8
  4481f4:	bl	441424 <_obstack_memory_used@@Base+0x288>
  4481f8:	cbz	x0, 448074 <_obstack_memory_used@@Base+0x6ed8>
  4481fc:	b	4480d4 <_obstack_memory_used@@Base+0x6f38>
  448200:	mov	x19, x23
  448204:	b	4480d4 <_obstack_memory_used@@Base+0x6f38>
  448208:	ldr	x0, [x29, #104]
  44820c:	bl	4047c0 <free@plt>
  448210:	b	447ff0 <_obstack_memory_used@@Base+0x6e54>
  448214:	ldr	x0, [x29, #192]
  448218:	bl	4047c0 <free@plt>
  44821c:	mov	w0, #0x1                   	// #1
  448220:	ldr	w1, [x29, #100]
  448224:	cbz	w1, 448250 <_obstack_memory_used@@Base+0x70b4>
  448228:	ldr	x0, [x29, #104]
  44822c:	bl	4047c0 <free@plt>
  448230:	mov	w0, #0x1                   	// #1
  448234:	b	448250 <_obstack_memory_used@@Base+0x70b4>
  448238:	ldr	x0, [x29, #192]
  44823c:	bl	4047c0 <free@plt>
  448240:	ldr	w0, [x29, #100]
  448244:	cbnz	w0, 448270 <_obstack_memory_used@@Base+0x70d4>
  448248:	mov	x0, x26
  44824c:	bl	4453f4 <_obstack_memory_used@@Base+0x4258>
  448250:	mov	sp, x29
  448254:	ldp	x19, x20, [sp, #16]
  448258:	ldp	x21, x22, [sp, #32]
  44825c:	ldp	x23, x24, [sp, #48]
  448260:	ldp	x25, x26, [sp, #64]
  448264:	ldp	x27, x28, [sp, #80]
  448268:	ldp	x29, x30, [sp], #208
  44826c:	ret
  448270:	ldr	x0, [x29, #104]
  448274:	bl	4047c0 <free@plt>
  448278:	b	448248 <_obstack_memory_used@@Base+0x70ac>
  44827c:	mov	w0, #0xc                   	// #12
  448280:	b	448250 <_obstack_memory_used@@Base+0x70b4>
  448284:	mov	x19, #0xffffffffffffffff    	// #-1
  448288:	cmn	x19, #0x2
  44828c:	b.eq	447fe0 <_obstack_memory_used@@Base+0x6e44>  // b.none
  448290:	cbz	x26, 448214 <_obstack_memory_used@@Base+0x7078>
  448294:	add	x4, x29, #0xb0
  448298:	mov	x3, x22
  44829c:	ldr	x2, [x29, #128]
  4482a0:	add	x1, x29, #0xc8
  4482a4:	mov	x0, x26
  4482a8:	bl	4456e8 <_obstack_memory_used@@Base+0x454c>
  4482ac:	mov	x19, x0
  4482b0:	b	4480d8 <_obstack_memory_used@@Base+0x6f3c>
  4482b4:	stp	x29, x30, [sp, #-288]!
  4482b8:	mov	x29, sp
  4482bc:	stp	x19, x20, [sp, #16]
  4482c0:	stp	x23, x24, [sp, #48]
  4482c4:	stp	x25, x26, [sp, #64]
  4482c8:	stp	x27, x28, [sp, #80]
  4482cc:	mov	x26, x0
  4482d0:	mov	x19, x1
  4482d4:	mov	x24, x2
  4482d8:	mov	x27, x3
  4482dc:	mov	x20, x4
  4482e0:	mov	x28, x5
  4482e4:	ldr	x23, [x1]
  4482e8:	ldrb	w0, [x2, #8]
  4482ec:	cmp	w0, #0x13
  4482f0:	b.hi	4484ec <_obstack_memory_used@@Base+0x7350>  // b.pmore
  4482f4:	cmp	w0, #0x11
  4482f8:	b.hi	448ecc <_obstack_memory_used@@Base+0x7d30>  // b.pmore
  4482fc:	cmp	w0, #0x8
  448300:	b.eq	44864c <_obstack_memory_used@@Base+0x74b0>  // b.none
  448304:	b.ls	4483c4 <_obstack_memory_used@@Base+0x7228>  // b.plast
  448308:	cmp	w0, #0xb
  44830c:	b.eq	448ecc <_obstack_memory_used@@Base+0x7d30>  // b.none
  448310:	cmp	w0, #0xc
  448314:	b.ne	4484cc <_obstack_memory_used@@Base+0x7330>  // b.any
  448318:	ldr	w1, [x2]
  44831c:	mov	w0, #0x30f                 	// #783
  448320:	tst	w1, w0
  448324:	b.eq	448330 <_obstack_memory_used@@Base+0x7194>  // b.none
  448328:	ldrb	w0, [x23, #176]
  44832c:	tbz	w0, #4, 448f40 <_obstack_memory_used@@Base+0x7da4>
  448330:	ldr	w0, [x24]
  448334:	sub	w1, w0, #0x100
  448338:	tst	w1, #0xfffffeff
  44833c:	b.ne	449050 <_obstack_memory_used@@Base+0x7eb4>  // b.any
  448340:	cmp	w0, #0x100
  448344:	b.eq	449014 <_obstack_memory_used@@Base+0x7e78>  // b.none
  448348:	mov	w0, #0x5                   	// #5
  44834c:	str	w0, [x24]
  448350:	mov	x3, x24
  448354:	mov	x2, #0x0                   	// #0
  448358:	mov	x1, #0x0                   	// #0
  44835c:	mov	x0, x23
  448360:	bl	442048 <_obstack_memory_used@@Base+0xeac>
  448364:	mov	x20, x0
  448368:	mov	w0, #0xa                   	// #10
  44836c:	str	w0, [x24]
  448370:	mov	x3, x24
  448374:	mov	x2, #0x0                   	// #0
  448378:	mov	x1, #0x0                   	// #0
  44837c:	mov	x0, x23
  448380:	bl	442048 <_obstack_memory_used@@Base+0xeac>
  448384:	mov	x19, x0
  448388:	mov	w3, #0xa                   	// #10
  44838c:	mov	x2, x0
  448390:	mov	x1, x20
  448394:	mov	x0, x23
  448398:	bl	4421b4 <_obstack_memory_used@@Base+0x1018>
  44839c:	mov	x25, x0
  4483a0:	cmp	x20, #0x0
  4483a4:	ccmp	x19, #0x0, #0x4, ne  // ne = any
  4483a8:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  4483ac:	b.eq	449040 <_obstack_memory_used@@Base+0x7ea4>  // b.none
  4483b0:	mov	x2, x27
  4483b4:	mov	x1, x26
  4483b8:	mov	x0, x24
  4483bc:	bl	444274 <_obstack_memory_used@@Base+0x30d8>
  4483c0:	b	4494e4 <_obstack_memory_used@@Base+0x8348>
  4483c4:	cmp	w0, #0x4
  4483c8:	b.eq	448e4c <_obstack_memory_used@@Base+0x7cb0>  // b.none
  4483cc:	cmp	w0, #0x5
  4483d0:	b.ne	44840c <_obstack_memory_used@@Base+0x7270>  // b.any
  4483d4:	mov	x3, x2
  4483d8:	mov	x2, #0x0                   	// #0
  4483dc:	mov	x1, #0x0                   	// #0
  4483e0:	mov	x0, x23
  4483e4:	bl	442048 <_obstack_memory_used@@Base+0xeac>
  4483e8:	mov	x25, x0
  4483ec:	cbz	x0, 449078 <_obstack_memory_used@@Base+0x7edc>
  4483f0:	ldr	w0, [x23, #180]
  4483f4:	cmp	w0, #0x1
  4483f8:	b.le	448530 <_obstack_memory_used@@Base+0x7394>
  4483fc:	ldrb	w0, [x23, #176]
  448400:	orr	w0, w0, #0x2
  448404:	strb	w0, [x23, #176]
  448408:	b	448530 <_obstack_memory_used@@Base+0x7394>
  44840c:	mov	x25, #0x0                   	// #0
  448410:	cmp	w0, #0x1
  448414:	b.ne	4494e4 <_obstack_memory_used@@Base+0x8348>  // b.any
  448418:	mov	x3, x2
  44841c:	mov	x2, #0x0                   	// #0
  448420:	mov	x1, #0x0                   	// #0
  448424:	mov	x0, x23
  448428:	bl	442048 <_obstack_memory_used@@Base+0xeac>
  44842c:	mov	x25, x0
  448430:	cbz	x0, 448640 <_obstack_memory_used@@Base+0x74a4>
  448434:	ldr	w0, [x23, #180]
  448438:	mov	w20, #0x10                  	// #16
  44843c:	cmp	w0, #0x1
  448440:	b.le	448530 <_obstack_memory_used@@Base+0x7394>
  448444:	ldr	x0, [x26, #72]
  448448:	ldr	x1, [x26, #104]
  44844c:	cmp	x1, x0
  448450:	b.le	448530 <_obstack_memory_used@@Base+0x7394>
  448454:	ldr	x1, [x26, #48]
  448458:	cmp	x0, x1
  44845c:	b.eq	448530 <_obstack_memory_used@@Base+0x7394>  // b.none
  448460:	ldr	x1, [x26, #16]
  448464:	ldr	w0, [x1, x0, lsl #2]
  448468:	cmn	w0, #0x1
  44846c:	b.ne	448530 <_obstack_memory_used@@Base+0x7394>  // b.any
  448470:	mov	x2, x27
  448474:	mov	x1, x26
  448478:	mov	x0, x24
  44847c:	bl	444274 <_obstack_memory_used@@Base+0x30d8>
  448480:	mov	x3, x24
  448484:	mov	x2, #0x0                   	// #0
  448488:	mov	x1, #0x0                   	// #0
  44848c:	mov	x0, x23
  448490:	bl	442048 <_obstack_memory_used@@Base+0xeac>
  448494:	mov	x19, x0
  448498:	mov	w3, w20
  44849c:	mov	x2, x0
  4484a0:	mov	x1, x25
  4484a4:	mov	x0, x23
  4484a8:	bl	4421b4 <_obstack_memory_used@@Base+0x1018>
  4484ac:	mov	x25, x0
  4484b0:	cmp	x19, #0x0
  4484b4:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  4484b8:	b.ne	448444 <_obstack_memory_used@@Base+0x72a8>  // b.any
  4484bc:	mov	w0, #0xc                   	// #12
  4484c0:	str	w0, [x28]
  4484c4:	mov	x25, #0x0                   	// #0
  4484c8:	b	4494e4 <_obstack_memory_used@@Base+0x8348>
  4484cc:	mov	x25, #0x0                   	// #0
  4484d0:	cmp	w0, #0x9
  4484d4:	b.ne	4494e4 <_obstack_memory_used@@Base+0x8348>  // b.any
  4484d8:	tbnz	w27, #17, 44850c <_obstack_memory_used@@Base+0x7370>
  4484dc:	mov	w0, #0x10                  	// #16
  4484e0:	str	w0, [x28]
  4484e4:	mov	x25, #0x0                   	// #0
  4484e8:	b	4494e4 <_obstack_memory_used@@Base+0x8348>
  4484ec:	cmp	w0, #0x21
  4484f0:	b.hi	44861c <_obstack_memory_used@@Base+0x7480>  // b.pmore
  4484f4:	cmp	w0, #0x1f
  4484f8:	b.hi	449084 <_obstack_memory_used@@Base+0x7ee8>  // b.pmore
  4484fc:	cmp	w0, #0x17
  448500:	b.eq	448ec8 <_obstack_memory_used@@Base+0x7d2c>  // b.none
  448504:	cmp	w0, #0x18
  448508:	b.ne	448584 <_obstack_memory_used@@Base+0x73e8>  // b.any
  44850c:	mov	w0, #0x1                   	// #1
  448510:	strb	w0, [x24, #8]
  448514:	mov	x3, x24
  448518:	mov	x2, #0x0                   	// #0
  44851c:	mov	x1, #0x0                   	// #0
  448520:	mov	x0, x23
  448524:	bl	442048 <_obstack_memory_used@@Base+0xeac>
  448528:	mov	x25, x0
  44852c:	cbz	x0, 448f34 <_obstack_memory_used@@Base+0x7d98>
  448530:	mov	x2, x27
  448534:	mov	x1, x26
  448538:	mov	x0, x24
  44853c:	bl	444274 <_obstack_memory_used@@Base+0x30d8>
  448540:	ldrb	w1, [x24, #8]
  448544:	cmp	w1, #0x12
  448548:	cset	w19, eq  // eq = none
  44854c:	sub	w0, w1, #0x12
  448550:	and	w0, w0, #0xff
  448554:	cmp	w1, #0xb
  448558:	ccmp	w1, #0x17, #0x4, ne  // ne = any
  44855c:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  448560:	b.hi	4494e4 <_obstack_memory_used@@Base+0x8348>  // b.pmore
  448564:	stp	x21, x22, [sp, #32]
  448568:	adrp	x0, 441000 <_obstack_newchunk@@Base+0x34>
  44856c:	add	x0, x0, #0x76c
  448570:	str	x0, [sp, #112]
  448574:	adrp	x0, 444000 <_obstack_memory_used@@Base+0x2e64>
  448578:	add	x0, x0, #0x3f8
  44857c:	str	x0, [sp, #120]
  448580:	b	449354 <_obstack_memory_used@@Base+0x81b8>
  448584:	mov	x25, #0x0                   	// #0
  448588:	cmp	w0, #0x14
  44858c:	b.ne	4494e4 <_obstack_memory_used@@Base+0x8348>  // b.any
  448590:	stp	x21, x22, [sp, #32]
  448594:	str	xzr, [sp, #168]
  448598:	mov	x1, #0x1                   	// #1
  44859c:	mov	x0, #0x20                  	// #32
  4485a0:	bl	4044d0 <calloc@plt>
  4485a4:	mov	x20, x0
  4485a8:	mov	x1, #0x1                   	// #1
  4485ac:	mov	x0, #0x50                  	// #80
  4485b0:	bl	4044d0 <calloc@plt>
  4485b4:	mov	x21, x0
  4485b8:	cmp	x20, #0x0
  4485bc:	cset	w0, eq  // eq = none
  4485c0:	cmp	x21, #0x0
  4485c4:	csinc	w0, w0, wzr, ne  // ne = any
  4485c8:	str	w0, [sp, #96]
  4485cc:	cbnz	w0, 44872c <_obstack_memory_used@@Base+0x7590>
  4485d0:	mov	x2, x27
  4485d4:	mov	x1, x26
  4485d8:	mov	x0, x24
  4485dc:	bl	4415dc <_obstack_memory_used@@Base+0x440>
  4485e0:	mov	w19, w0
  4485e4:	ldrb	w0, [x24, #8]
  4485e8:	cmp	w0, #0x2
  4485ec:	b.eq	448748 <_obstack_memory_used@@Base+0x75ac>  // b.none
  4485f0:	ldr	w1, [sp, #96]
  4485f4:	str	w1, [sp, #152]
  4485f8:	cmp	w0, #0x19
  4485fc:	b.eq	448750 <_obstack_memory_used@@Base+0x75b4>  // b.none
  448600:	ldrb	w0, [x24, #8]
  448604:	cmp	w0, #0x15
  448608:	b.eq	4487a8 <_obstack_memory_used@@Base+0x760c>  // b.none
  44860c:	str	xzr, [sp, #136]
  448610:	mov	w6, #0x1                   	// #1
  448614:	str	xzr, [sp, #120]
  448618:	b	448b60 <_obstack_memory_used@@Base+0x79c4>
  44861c:	cmp	w0, #0x23
  448620:	b.ls	4490c4 <_obstack_memory_used@@Base+0x7f28>  // b.plast
  448624:	mov	x25, #0x0                   	// #0
  448628:	cmp	w0, #0x24
  44862c:	b.ne	4494e4 <_obstack_memory_used@@Base+0x8348>  // b.any
  448630:	mov	w0, #0x5                   	// #5
  448634:	str	w0, [x5]
  448638:	mov	x25, #0x0                   	// #0
  44863c:	b	4494e4 <_obstack_memory_used@@Base+0x8348>
  448640:	mov	w0, #0xc                   	// #12
  448644:	str	w0, [x28]
  448648:	b	4494e4 <_obstack_memory_used@@Base+0x8348>
  44864c:	stp	x21, x22, [sp, #32]
  448650:	ldr	x21, [x1, #48]
  448654:	add	x0, x21, #0x1
  448658:	str	x0, [x1, #48]
  44865c:	orr	x2, x3, #0x800000
  448660:	mov	x1, x26
  448664:	mov	x0, x24
  448668:	bl	444274 <_obstack_memory_used@@Base+0x30d8>
  44866c:	ldrb	w1, [x24, #8]
  448670:	mov	x0, #0x0                   	// #0
  448674:	cmp	w1, #0x9
  448678:	b.ne	4486c4 <_obstack_memory_used@@Base+0x7528>  // b.any
  44867c:	cmp	x21, #0x8
  448680:	b.hi	44869c <_obstack_memory_used@@Base+0x7500>  // b.pmore
  448684:	mov	w1, #0x1                   	// #1
  448688:	lsl	w1, w1, w21
  44868c:	sxtw	x1, w1
  448690:	ldr	x2, [x23, #168]
  448694:	orr	x1, x2, x1
  448698:	str	x1, [x23, #168]
  44869c:	mov	w3, #0x11                  	// #17
  4486a0:	mov	x2, #0x0                   	// #0
  4486a4:	mov	x1, x0
  4486a8:	mov	x0, x23
  4486ac:	bl	4421b4 <_obstack_memory_used@@Base+0x1018>
  4486b0:	mov	x25, x0
  4486b4:	cbz	x0, 448720 <_obstack_memory_used@@Base+0x7584>
  4486b8:	str	x21, [x0, #40]
  4486bc:	ldp	x21, x22, [sp, #32]
  4486c0:	b	448530 <_obstack_memory_used@@Base+0x7394>
  4486c4:	mov	x5, x28
  4486c8:	add	x4, x20, #0x1
  4486cc:	mov	x3, x27
  4486d0:	mov	x2, x24
  4486d4:	mov	x1, x19
  4486d8:	mov	x0, x26
  4486dc:	bl	449718 <_obstack_memory_used@@Base+0x857c>
  4486e0:	ldr	w1, [x28]
  4486e4:	cbz	w1, 4486f4 <_obstack_memory_used@@Base+0x7558>
  4486e8:	mov	x25, #0x0                   	// #0
  4486ec:	ldp	x21, x22, [sp, #32]
  4486f0:	b	4494e4 <_obstack_memory_used@@Base+0x8348>
  4486f4:	ldrb	w1, [x24, #8]
  4486f8:	cmp	w1, #0x9
  4486fc:	b.eq	44867c <_obstack_memory_used@@Base+0x74e0>  // b.none
  448700:	cbz	x0, 448714 <_obstack_memory_used@@Base+0x7578>
  448704:	mov	x2, #0x0                   	// #0
  448708:	adrp	x1, 444000 <_obstack_memory_used@@Base+0x2e64>
  44870c:	add	x1, x1, #0x3f8
  448710:	bl	441e40 <_obstack_memory_used@@Base+0xca4>
  448714:	mov	w0, #0x8                   	// #8
  448718:	str	w0, [x28]
  44871c:	b	4486e8 <_obstack_memory_used@@Base+0x754c>
  448720:	mov	w0, #0xc                   	// #12
  448724:	str	w0, [x28]
  448728:	b	4486e8 <_obstack_memory_used@@Base+0x754c>
  44872c:	mov	x0, x20
  448730:	bl	4047c0 <free@plt>
  448734:	mov	x0, x21
  448738:	bl	4047c0 <free@plt>
  44873c:	mov	w0, #0xc                   	// #12
  448740:	str	w0, [x28]
  448744:	b	4487c8 <_obstack_memory_used@@Base+0x762c>
  448748:	str	w0, [x28]
  44874c:	b	4487b8 <_obstack_memory_used@@Base+0x761c>
  448750:	ldrb	w0, [x21, #32]
  448754:	orr	w0, w0, #0x1
  448758:	strb	w0, [x21, #32]
  44875c:	tbz	w27, #8, 44876c <_obstack_memory_used@@Base+0x75d0>
  448760:	ldr	x0, [x20]
  448764:	orr	x0, x0, #0x400
  448768:	str	x0, [x20]
  44876c:	ldr	x0, [x26, #72]
  448770:	add	x19, x0, w19, sxtw
  448774:	str	x19, [x26, #72]
  448778:	mov	x2, x27
  44877c:	mov	x1, x26
  448780:	mov	x0, x24
  448784:	bl	4415dc <_obstack_memory_used@@Base+0x440>
  448788:	mov	w19, w0
  44878c:	ldrb	w0, [x24, #8]
  448790:	mov	w1, #0x1                   	// #1
  448794:	str	w1, [sp, #152]
  448798:	cmp	w0, #0x2
  44879c:	b.ne	448600 <_obstack_memory_used@@Base+0x7464>  // b.any
  4487a0:	str	w0, [x28]
  4487a4:	b	4487b8 <_obstack_memory_used@@Base+0x761c>
  4487a8:	mov	w0, #0x1                   	// #1
  4487ac:	strb	w0, [x24, #8]
  4487b0:	b	44860c <_obstack_memory_used@@Base+0x7470>
  4487b4:	str	w0, [x28]
  4487b8:	mov	x0, x20
  4487bc:	bl	4047c0 <free@plt>
  4487c0:	mov	x0, x21
  4487c4:	bl	444370 <_obstack_memory_used@@Base+0x31d4>
  4487c8:	ldr	w0, [x28]
  4487cc:	cbnz	w0, 449508 <_obstack_memory_used@@Base+0x836c>
  4487d0:	mov	x25, #0x0                   	// #0
  4487d4:	ldp	x21, x22, [sp, #32]
  4487d8:	b	448530 <_obstack_memory_used@@Base+0x7394>
  4487dc:	mov	w0, #0x7                   	// #7
  4487e0:	str	w0, [x28]
  4487e4:	b	4487b8 <_obstack_memory_used@@Base+0x761c>
  4487e8:	ldr	x0, [x26, #72]
  4487ec:	add	x0, x0, w19, sxtw
  4487f0:	str	x0, [x26, #72]
  4487f4:	mov	x2, x27
  4487f8:	mov	x1, x26
  4487fc:	add	x0, sp, #0xd0
  448800:	bl	4415dc <_obstack_memory_used@@Base+0x440>
  448804:	mov	w3, w0
  448808:	ldrb	w0, [sp, #216]
  44880c:	cmp	w0, #0x2
  448810:	b.eq	448838 <_obstack_memory_used@@Base+0x769c>  // b.none
  448814:	cmp	w0, #0x15
  448818:	b.ne	448844 <_obstack_memory_used@@Base+0x76a8>  // b.any
  44881c:	neg	w0, w19
  448820:	ldr	x1, [x26, #72]
  448824:	add	x0, x1, w0, sxtw
  448828:	str	x0, [x26, #72]
  44882c:	mov	w0, #0x1                   	// #1
  448830:	strb	w0, [x24, #8]
  448834:	b	448bc8 <_obstack_memory_used@@Base+0x7a2c>
  448838:	mov	w0, #0x7                   	// #7
  44883c:	str	w0, [x28]
  448840:	b	4487b8 <_obstack_memory_used@@Base+0x761c>
  448844:	add	x0, sp, #0x100
  448848:	str	x0, [sp, #200]
  44884c:	mov	w0, #0x3                   	// #3
  448850:	str	w0, [sp, #192]
  448854:	mov	w6, #0x1                   	// #1
  448858:	mov	x5, x27
  44885c:	mov	x4, x23
  448860:	add	x2, sp, #0xd0
  448864:	mov	x1, x26
  448868:	add	x0, sp, #0xc0
  44886c:	bl	441b9c <_obstack_memory_used@@Base+0xa00>
  448870:	cbnz	w0, 448984 <_obstack_memory_used@@Base+0x77e8>
  448874:	mov	x2, x27
  448878:	mov	x1, x26
  44887c:	mov	x0, x24
  448880:	bl	4415dc <_obstack_memory_used@@Base+0x440>
  448884:	mov	w19, w0
  448888:	ldr	w0, [x23, #180]
  44888c:	cmp	w0, #0x2
  448890:	csel	x0, x21, xzr, ge  // ge = tcont
  448894:	str	x0, [sp, #112]
  448898:	ldr	w1, [sp, #176]
  44889c:	str	w1, [sp, #144]
  4488a0:	sub	w0, w1, #0x2
  4488a4:	tst	w0, #0xfffffffd
  4488a8:	b.eq	44952c <_obstack_memory_used@@Base+0x8390>  // b.none
  4488ac:	ldr	w0, [sp, #192]
  4488b0:	str	w0, [sp, #128]
  4488b4:	sub	w0, w0, #0x2
  4488b8:	tst	w0, #0xfffffffd
  4488bc:	b.eq	449534 <_obstack_memory_used@@Base+0x8398>  // b.none
  4488c0:	cmp	w1, #0x3
  4488c4:	cset	w0, eq  // eq = none
  4488c8:	str	w0, [sp, #156]
  4488cc:	b.eq	44898c <_obstack_memory_used@@Base+0x77f0>  // b.none
  4488d0:	ldr	w0, [sp, #128]
  4488d4:	cmp	w0, #0x3
  4488d8:	b.eq	4489b4 <_obstack_memory_used@@Base+0x7818>  // b.none
  4488dc:	ldr	w0, [sp, #144]
  4488e0:	mov	w22, #0x0                   	// #0
  4488e4:	cbnz	w0, 4488ec <_obstack_memory_used@@Base+0x7750>
  4488e8:	ldrb	w22, [sp, #184]
  4488ec:	ldr	w0, [sp, #128]
  4488f0:	cbnz	w0, 4489e0 <_obstack_memory_used@@Base+0x7844>
  4488f4:	ldrb	w25, [sp, #200]
  4488f8:	ldr	w0, [sp, #144]
  4488fc:	cmp	w0, #0x0
  448900:	ldr	w0, [sp, #156]
  448904:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  448908:	b.ne	4489fc <_obstack_memory_used@@Base+0x7860>  // b.any
  44890c:	ldr	w22, [sp, #184]
  448910:	ldr	w0, [sp, #128]
  448914:	cmp	w0, #0x0
  448918:	ccmp	w0, #0x3, #0x4, ne  // ne = any
  44891c:	b.eq	448a24 <_obstack_memory_used@@Base+0x7888>  // b.none
  448920:	ldr	w25, [sp, #200]
  448924:	cmn	w22, #0x1
  448928:	ccmn	w25, #0x1, #0x4, ne  // ne = any
  44892c:	b.eq	449550 <_obstack_memory_used@@Base+0x83b4>  // b.none
  448930:	tst	x27, #0x10000
  448934:	ccmp	w25, w22, #0x2, ne  // ne = any
  448938:	b.cc	449558 <_obstack_memory_used@@Base+0x83bc>  // b.lo, b.ul, b.last
  44893c:	ldr	x0, [sp, #112]
  448940:	cbz	x0, 448978 <_obstack_memory_used@@Base+0x77dc>
  448944:	ldr	x0, [x0, #64]
  448948:	ldr	x1, [sp, #136]
  44894c:	cmp	x0, x1
  448950:	b.eq	448a3c <_obstack_memory_used@@Base+0x78a0>  // b.none
  448954:	ldr	x3, [sp, #112]
  448958:	ldr	x1, [x3, #64]
  44895c:	ldr	x0, [x3, #8]
  448960:	str	w22, [x0, x1, lsl #2]
  448964:	ldr	x1, [x3, #16]
  448968:	ldr	x0, [x3, #64]
  44896c:	add	x2, x0, #0x1
  448970:	str	x2, [x3, #64]
  448974:	str	w25, [x1, x0, lsl #2]
  448978:	mov	x0, #0x0                   	// #0
  44897c:	mov	x4, #0x1                   	// #1
  448980:	b	448ae4 <_obstack_memory_used@@Base+0x7948>
  448984:	str	w0, [x28]
  448988:	b	4487b8 <_obstack_memory_used@@Base+0x761c>
  44898c:	ldr	x0, [sp, #184]
  448990:	bl	403ff0 <strlen@plt>
  448994:	cmp	x0, #0x1
  448998:	b.hi	449540 <_obstack_memory_used@@Base+0x83a4>  // b.pmore
  44899c:	ldr	w0, [sp, #128]
  4489a0:	cmp	w0, #0x3
  4489a4:	b.eq	44958c <_obstack_memory_used@@Base+0x83f0>  // b.none
  4489a8:	ldr	x0, [sp, #184]
  4489ac:	ldrb	w22, [x0]
  4489b0:	b	4488ec <_obstack_memory_used@@Base+0x7750>
  4489b4:	ldr	x0, [sp, #200]
  4489b8:	bl	403ff0 <strlen@plt>
  4489bc:	cmp	x0, #0x1
  4489c0:	b.hi	449548 <_obstack_memory_used@@Base+0x83ac>  // b.pmore
  4489c4:	ldr	w0, [sp, #144]
  4489c8:	cbz	w0, 4488e8 <_obstack_memory_used@@Base+0x774c>
  4489cc:	ldr	w0, [sp, #144]
  4489d0:	cmp	w0, #0x3
  4489d4:	b.eq	4489a8 <_obstack_memory_used@@Base+0x780c>  // b.none
  4489d8:	mov	w22, #0x0                   	// #0
  4489dc:	b	4488ec <_obstack_memory_used@@Base+0x7750>
  4489e0:	mov	w25, #0x0                   	// #0
  4489e4:	ldr	w0, [sp, #128]
  4489e8:	cmp	w0, #0x3
  4489ec:	b.ne	4488f8 <_obstack_memory_used@@Base+0x775c>  // b.any
  4489f0:	ldr	x0, [sp, #200]
  4489f4:	ldrb	w25, [x0]
  4489f8:	b	4488f8 <_obstack_memory_used@@Base+0x775c>
  4489fc:	ldr	x0, [sp, #112]
  448a00:	cbz	x0, 449578 <_obstack_memory_used@@Base+0x83dc>
  448a04:	mov	w0, w22
  448a08:	bl	404640 <btowc@plt>
  448a0c:	mov	w22, w0
  448a10:	ldr	w0, [sp, #192]
  448a14:	cmp	w0, #0x0
  448a18:	ccmp	w0, #0x3, #0x4, ne  // ne = any
  448a1c:	b.ne	448920 <_obstack_memory_used@@Base+0x7784>  // b.any
  448a20:	b	448a2c <_obstack_memory_used@@Base+0x7890>
  448a24:	ldr	x0, [sp, #112]
  448a28:	cbz	x0, 448924 <_obstack_memory_used@@Base+0x7788>
  448a2c:	mov	w0, w25
  448a30:	bl	404640 <btowc@plt>
  448a34:	mov	w25, w0
  448a38:	b	448924 <_obstack_memory_used@@Base+0x7788>
  448a3c:	lsl	x0, x1, #1
  448a40:	add	x0, x0, #0x1
  448a44:	str	x0, [sp, #136]
  448a48:	lsl	x0, x0, #2
  448a4c:	str	x0, [sp, #144]
  448a50:	mov	x1, x0
  448a54:	ldr	x2, [sp, #112]
  448a58:	ldr	x0, [x2, #8]
  448a5c:	bl	404540 <realloc@plt>
  448a60:	str	x0, [sp, #128]
  448a64:	ldr	x1, [sp, #144]
  448a68:	ldr	x2, [sp, #112]
  448a6c:	ldr	x0, [x2, #16]
  448a70:	bl	404540 <realloc@plt>
  448a74:	str	x0, [sp, #144]
  448a78:	ldr	x1, [sp, #128]
  448a7c:	cmp	x1, #0x0
  448a80:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  448a84:	b.eq	448aa0 <_obstack_memory_used@@Base+0x7904>  // b.none
  448a88:	ldr	x0, [sp, #112]
  448a8c:	ldr	x1, [sp, #128]
  448a90:	str	x1, [x0, #8]
  448a94:	ldr	x1, [sp, #144]
  448a98:	str	x1, [x0, #16]
  448a9c:	b	448954 <_obstack_memory_used@@Base+0x77b8>
  448aa0:	mov	x0, x1
  448aa4:	bl	4047c0 <free@plt>
  448aa8:	ldr	x0, [sp, #144]
  448aac:	bl	4047c0 <free@plt>
  448ab0:	mov	w0, #0xc                   	// #12
  448ab4:	b	449538 <_obstack_memory_used@@Base+0x839c>
  448ab8:	add	x1, x0, #0x3f
  448abc:	cmp	x0, #0x0
  448ac0:	csel	x1, x1, x0, lt  // lt = tstop
  448ac4:	asr	x1, x1, #6
  448ac8:	lsl	x2, x4, x0
  448acc:	ldr	x3, [x20, x1, lsl #3]
  448ad0:	orr	x2, x3, x2
  448ad4:	str	x2, [x20, x1, lsl #3]
  448ad8:	add	x0, x0, #0x1
  448adc:	cmp	x0, #0x100
  448ae0:	b.eq	449560 <_obstack_memory_used@@Base+0x83c4>  // b.none
  448ae4:	cmp	w22, w0
  448ae8:	ccmp	w25, w0, #0x0, ls  // ls = plast
  448aec:	b.cc	448ad8 <_obstack_memory_used@@Base+0x793c>  // b.lo, b.ul, b.last
  448af0:	b	448ab8 <_obstack_memory_used@@Base+0x791c>
  448af4:	cmp	w0, #0x3
  448af8:	b.eq	448c60 <_obstack_memory_used@@Base+0x7ac4>  // b.none
  448afc:	cmp	w0, #0x4
  448b00:	b.ne	448c94 <_obstack_memory_used@@Base+0x7af8>  // b.any
  448b04:	mov	x5, x27
  448b08:	ldr	x4, [sp, #184]
  448b0c:	add	x3, sp, #0xa8
  448b10:	mov	x2, x21
  448b14:	mov	x1, x20
  448b18:	ldr	x0, [x26, #120]
  448b1c:	bl	4457ac <_obstack_memory_used@@Base+0x4610>
  448b20:	str	w0, [x28]
  448b24:	cbz	w0, 448b48 <_obstack_memory_used@@Base+0x79ac>
  448b28:	b	4487b8 <_obstack_memory_used@@Base+0x761c>
  448b2c:	ldrb	w1, [sp, #184]
  448b30:	ubfx	x2, x1, #6, #2
  448b34:	mov	x0, #0x1                   	// #1
  448b38:	lsl	x1, x0, x1
  448b3c:	ldr	x0, [x20, x2, lsl #3]
  448b40:	orr	x0, x0, x1
  448b44:	str	x0, [x20, x2, lsl #3]
  448b48:	ldrb	w0, [x24, #8]
  448b4c:	cmp	w0, #0x2
  448b50:	b.eq	448cb8 <_obstack_memory_used@@Base+0x7b1c>  // b.none
  448b54:	cmp	w0, #0x15
  448b58:	b.eq	448cc4 <_obstack_memory_used@@Base+0x7b28>  // b.none
  448b5c:	ldr	w6, [sp, #96]
  448b60:	add	x0, sp, #0xe0
  448b64:	str	x0, [sp, #184]
  448b68:	mov	w0, #0x3                   	// #3
  448b6c:	str	w0, [sp, #176]
  448b70:	mov	x5, x27
  448b74:	mov	x4, x23
  448b78:	mov	w3, w19
  448b7c:	mov	x2, x24
  448b80:	mov	x1, x26
  448b84:	add	x0, sp, #0xb0
  448b88:	bl	441b9c <_obstack_memory_used@@Base+0xa00>
  448b8c:	cbnz	w0, 4487b4 <_obstack_memory_used@@Base+0x7618>
  448b90:	mov	x2, x27
  448b94:	mov	x1, x26
  448b98:	mov	x0, x24
  448b9c:	bl	4415dc <_obstack_memory_used@@Base+0x440>
  448ba0:	mov	w19, w0
  448ba4:	ldr	w0, [sp, #176]
  448ba8:	sub	w0, w0, #0x2
  448bac:	tst	w0, #0xfffffffd
  448bb0:	b.eq	448bc8 <_obstack_memory_used@@Base+0x7a2c>  // b.none
  448bb4:	ldrb	w0, [x24, #8]
  448bb8:	cmp	w0, #0x2
  448bbc:	b.eq	4487dc <_obstack_memory_used@@Base+0x7640>  // b.none
  448bc0:	cmp	w0, #0x16
  448bc4:	b.eq	4487e8 <_obstack_memory_used@@Base+0x764c>  // b.none
  448bc8:	ldr	w0, [sp, #176]
  448bcc:	cmp	w0, #0x2
  448bd0:	b.eq	448c2c <_obstack_memory_used@@Base+0x7a90>  // b.none
  448bd4:	b.hi	448af4 <_obstack_memory_used@@Base+0x7958>  // b.pmore
  448bd8:	cbz	w0, 448b2c <_obstack_memory_used@@Base+0x7990>
  448bdc:	ldr	x0, [x21, #40]
  448be0:	ldr	x1, [sp, #120]
  448be4:	cmp	x0, x1
  448be8:	b.eq	448c08 <_obstack_memory_used@@Base+0x7a6c>  // b.none
  448bec:	ldr	x1, [x21]
  448bf0:	ldr	x0, [x21, #40]
  448bf4:	add	x2, x0, #0x1
  448bf8:	str	x2, [x21, #40]
  448bfc:	ldr	w2, [sp, #184]
  448c00:	str	w2, [x1, x0, lsl #2]
  448c04:	b	448b48 <_obstack_memory_used@@Base+0x79ac>
  448c08:	lsl	x0, x1, #1
  448c0c:	add	x0, x0, #0x1
  448c10:	str	x0, [sp, #120]
  448c14:	lsl	x1, x0, #2
  448c18:	ldr	x0, [x21]
  448c1c:	bl	404540 <realloc@plt>
  448c20:	cbz	x0, 448e40 <_obstack_memory_used@@Base+0x7ca4>
  448c24:	str	x0, [x21]
  448c28:	b	448bec <_obstack_memory_used@@Base+0x7a50>
  448c2c:	ldr	x22, [sp, #184]
  448c30:	mov	x0, x22
  448c34:	bl	403ff0 <strlen@plt>
  448c38:	cmp	x0, #0x1
  448c3c:	b.ne	449514 <_obstack_memory_used@@Base+0x8378>  // b.any
  448c40:	ldrb	w1, [x22]
  448c44:	ubfx	x2, x1, #6, #2
  448c48:	lsl	x1, x0, x1
  448c4c:	ldr	x0, [x20, x2, lsl #3]
  448c50:	orr	x0, x0, x1
  448c54:	str	x0, [x20, x2, lsl #3]
  448c58:	str	wzr, [x28]
  448c5c:	b	448b48 <_obstack_memory_used@@Base+0x79ac>
  448c60:	ldr	x22, [sp, #184]
  448c64:	mov	x0, x22
  448c68:	bl	403ff0 <strlen@plt>
  448c6c:	cmp	x0, #0x1
  448c70:	b.ne	449520 <_obstack_memory_used@@Base+0x8384>  // b.any
  448c74:	ldrb	w1, [x22]
  448c78:	ubfx	x2, x1, #6, #2
  448c7c:	lsl	x1, x0, x1
  448c80:	ldr	x0, [x20, x2, lsl #3]
  448c84:	orr	x0, x0, x1
  448c88:	str	x0, [x20, x2, lsl #3]
  448c8c:	str	wzr, [x28]
  448c90:	b	448b48 <_obstack_memory_used@@Base+0x79ac>
  448c94:	adrp	x3, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  448c98:	add	x3, x3, #0xe8
  448c9c:	add	x3, x3, #0x40
  448ca0:	mov	w2, #0xced                 	// #3309
  448ca4:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  448ca8:	add	x1, x1, #0x378
  448cac:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  448cb0:	add	x0, x0, #0x388
  448cb4:	bl	404ac0 <__assert_fail@plt>
  448cb8:	mov	w0, #0x7                   	// #7
  448cbc:	str	w0, [x28]
  448cc0:	b	4487b8 <_obstack_memory_used@@Base+0x761c>
  448cc4:	ldr	x0, [x26, #72]
  448cc8:	add	x19, x0, w19, sxtw
  448ccc:	str	x19, [x26, #72]
  448cd0:	ldr	w0, [sp, #152]
  448cd4:	cbz	w0, 448cf4 <_obstack_memory_used@@Base+0x7b58>
  448cd8:	mov	x0, #0x0                   	// #0
  448cdc:	ldr	x1, [x20, x0, lsl #3]
  448ce0:	mvn	x1, x1
  448ce4:	str	x1, [x20, x0, lsl #3]
  448ce8:	add	x0, x0, #0x1
  448cec:	cmp	x0, #0x4
  448cf0:	b.ne	448cdc <_obstack_memory_used@@Base+0x7b40>  // b.any
  448cf4:	ldr	w2, [x23, #180]
  448cf8:	cmp	w2, #0x1
  448cfc:	b.le	448d24 <_obstack_memory_used@@Base+0x7b88>
  448d00:	ldr	x3, [x23, #120]
  448d04:	mov	x0, #0x0                   	// #0
  448d08:	ldr	x1, [x20, x0]
  448d0c:	ldr	x4, [x3, x0]
  448d10:	and	x1, x1, x4
  448d14:	str	x1, [x20, x0]
  448d18:	add	x0, x0, #0x8
  448d1c:	cmp	x0, #0x20
  448d20:	b.ne	448d08 <_obstack_memory_used@@Base+0x7b6c>  // b.any
  448d24:	ldr	x0, [x21, #40]
  448d28:	cbnz	x0, 448d5c <_obstack_memory_used@@Base+0x7bc0>
  448d2c:	ldr	x0, [x21, #48]
  448d30:	cbnz	x0, 448d5c <_obstack_memory_used@@Base+0x7bc0>
  448d34:	ldr	x0, [x21, #56]
  448d38:	cbnz	x0, 448d5c <_obstack_memory_used@@Base+0x7bc0>
  448d3c:	ldr	x0, [x21, #64]
  448d40:	cbnz	x0, 448d5c <_obstack_memory_used@@Base+0x7bc0>
  448d44:	cmp	w2, #0x1
  448d48:	b.le	448e08 <_obstack_memory_used@@Base+0x7c6c>
  448d4c:	ldr	x0, [x21, #72]
  448d50:	cbnz	x0, 448d5c <_obstack_memory_used@@Base+0x7bc0>
  448d54:	ldrb	w0, [x21, #32]
  448d58:	tbz	w0, #0, 448e08 <_obstack_memory_used@@Base+0x7c6c>
  448d5c:	ldrb	w0, [x23, #176]
  448d60:	orr	w0, w0, #0x2
  448d64:	strb	w0, [x23, #176]
  448d68:	mov	w0, #0x6                   	// #6
  448d6c:	strb	w0, [sp, #264]
  448d70:	str	x21, [sp, #256]
  448d74:	add	x3, sp, #0x100
  448d78:	mov	x2, #0x0                   	// #0
  448d7c:	mov	x1, #0x0                   	// #0
  448d80:	mov	x0, x23
  448d84:	bl	442048 <_obstack_memory_used@@Base+0xeac>
  448d88:	mov	x25, x0
  448d8c:	cbz	x0, 448e40 <_obstack_memory_used@@Base+0x7ca4>
  448d90:	mov	x0, #0x0                   	// #0
  448d94:	ldr	x2, [x20, x0, lsl #3]
  448d98:	cbnz	x2, 448db8 <_obstack_memory_used@@Base+0x7c1c>
  448d9c:	add	x0, x0, #0x1
  448da0:	cmp	x0, #0x4
  448da4:	b.ne	448d94 <_obstack_memory_used@@Base+0x7bf8>  // b.any
  448da8:	mov	x0, x20
  448dac:	bl	4047c0 <free@plt>
  448db0:	ldp	x21, x22, [sp, #32]
  448db4:	b	448530 <_obstack_memory_used@@Base+0x7394>
  448db8:	cmp	w0, #0x3
  448dbc:	b.gt	448da8 <_obstack_memory_used@@Base+0x7c0c>
  448dc0:	mov	w0, #0x3                   	// #3
  448dc4:	strb	w0, [sp, #264]
  448dc8:	str	x20, [sp, #256]
  448dcc:	add	x3, sp, #0x100
  448dd0:	mov	x2, #0x0                   	// #0
  448dd4:	mov	x1, #0x0                   	// #0
  448dd8:	mov	x0, x23
  448ddc:	bl	442048 <_obstack_memory_used@@Base+0xeac>
  448de0:	mov	x1, x0
  448de4:	cbz	x0, 448e40 <_obstack_memory_used@@Base+0x7ca4>
  448de8:	mov	w3, #0xa                   	// #10
  448dec:	mov	x2, x25
  448df0:	mov	x0, x23
  448df4:	bl	4421b4 <_obstack_memory_used@@Base+0x1018>
  448df8:	mov	x25, x0
  448dfc:	cbz	x0, 448e40 <_obstack_memory_used@@Base+0x7ca4>
  448e00:	ldp	x21, x22, [sp, #32]
  448e04:	b	448530 <_obstack_memory_used@@Base+0x7394>
  448e08:	mov	x0, x21
  448e0c:	bl	444370 <_obstack_memory_used@@Base+0x31d4>
  448e10:	mov	w0, #0x3                   	// #3
  448e14:	strb	w0, [sp, #264]
  448e18:	str	x20, [sp, #256]
  448e1c:	add	x3, sp, #0x100
  448e20:	mov	x2, #0x0                   	// #0
  448e24:	mov	x1, #0x0                   	// #0
  448e28:	mov	x0, x23
  448e2c:	bl	442048 <_obstack_memory_used@@Base+0xeac>
  448e30:	mov	x25, x0
  448e34:	cbz	x0, 448e40 <_obstack_memory_used@@Base+0x7ca4>
  448e38:	ldp	x21, x22, [sp, #32]
  448e3c:	b	448530 <_obstack_memory_used@@Base+0x7394>
  448e40:	mov	w0, #0xc                   	// #12
  448e44:	str	w0, [x28]
  448e48:	b	4487b8 <_obstack_memory_used@@Base+0x761c>
  448e4c:	ldr	x1, [x2]
  448e50:	mov	w0, #0x1                   	// #1
  448e54:	lsl	w0, w0, w1
  448e58:	sxtw	x0, w0
  448e5c:	ldr	x1, [x23, #168]
  448e60:	tst	x0, x1
  448e64:	b.eq	448eac <_obstack_memory_used@@Base+0x7d10>  // b.none
  448e68:	ldr	x1, [x23, #160]
  448e6c:	orr	x0, x1, x0
  448e70:	str	x0, [x23, #160]
  448e74:	mov	x3, x2
  448e78:	mov	x2, #0x0                   	// #0
  448e7c:	mov	x1, #0x0                   	// #0
  448e80:	mov	x0, x23
  448e84:	bl	442048 <_obstack_memory_used@@Base+0xeac>
  448e88:	mov	x25, x0
  448e8c:	cbz	x0, 448ebc <_obstack_memory_used@@Base+0x7d20>
  448e90:	ldr	x0, [x23, #152]
  448e94:	add	x0, x0, #0x1
  448e98:	str	x0, [x23, #152]
  448e9c:	ldrb	w0, [x23, #176]
  448ea0:	orr	w0, w0, #0x2
  448ea4:	strb	w0, [x23, #176]
  448ea8:	b	448530 <_obstack_memory_used@@Base+0x7394>
  448eac:	mov	w0, #0x6                   	// #6
  448eb0:	str	w0, [x5]
  448eb4:	mov	x25, #0x0                   	// #0
  448eb8:	b	4494e4 <_obstack_memory_used@@Base+0x8348>
  448ebc:	mov	w0, #0xc                   	// #12
  448ec0:	str	w0, [x28]
  448ec4:	b	4494e4 <_obstack_memory_used@@Base+0x8348>
  448ec8:	tbnz	w3, #24, 448ee0 <_obstack_memory_used@@Base+0x7d44>
  448ecc:	tbnz	w27, #5, 448ef0 <_obstack_memory_used@@Base+0x7d54>
  448ed0:	tbnz	w27, #4, 448f00 <_obstack_memory_used@@Base+0x7d64>
  448ed4:	cmp	w0, #0x9
  448ed8:	b.ne	44850c <_obstack_memory_used@@Base+0x7370>  // b.any
  448edc:	b	4484d8 <_obstack_memory_used@@Base+0x733c>
  448ee0:	mov	w0, #0xd                   	// #13
  448ee4:	str	w0, [x5]
  448ee8:	mov	x25, #0x0                   	// #0
  448eec:	b	4494e4 <_obstack_memory_used@@Base+0x8348>
  448ef0:	mov	w0, #0xd                   	// #13
  448ef4:	str	w0, [x28]
  448ef8:	mov	x25, #0x0                   	// #0
  448efc:	b	4494e4 <_obstack_memory_used@@Base+0x8348>
  448f00:	mov	x2, x27
  448f04:	mov	x1, x26
  448f08:	mov	x0, x24
  448f0c:	bl	444274 <_obstack_memory_used@@Base+0x30d8>
  448f10:	mov	x5, x28
  448f14:	mov	x4, x20
  448f18:	mov	x3, x27
  448f1c:	mov	x2, x24
  448f20:	mov	x1, x19
  448f24:	mov	x0, x26
  448f28:	bl	4482b4 <_obstack_memory_used@@Base+0x7118>
  448f2c:	mov	x25, x0
  448f30:	b	4494e4 <_obstack_memory_used@@Base+0x8348>
  448f34:	mov	w0, #0xc                   	// #12
  448f38:	str	w0, [x28]
  448f3c:	b	4494e4 <_obstack_memory_used@@Base+0x8348>
  448f40:	ldrb	w0, [x23, #176]
  448f44:	orr	w0, w0, #0x10
  448f48:	strb	w0, [x23, #176]
  448f4c:	tbnz	w0, #3, 448f84 <_obstack_memory_used@@Base+0x7de8>
  448f50:	mov	x0, #0x3ff000000000000     	// #287948901175001088
  448f54:	str	x0, [x23, #184]
  448f58:	mov	x0, #0x7fffffe07fffffe     	// #576460743847706622
  448f5c:	movk	x0, #0x87ff, lsl #16
  448f60:	str	x0, [x23, #192]
  448f64:	ldrb	w0, [x23, #176]
  448f68:	tbz	w0, #2, 448f74 <_obstack_memory_used@@Base+0x7dd8>
  448f6c:	stp	xzr, xzr, [x23, #200]
  448f70:	b	448330 <_obstack_memory_used@@Base+0x7194>
  448f74:	stp	x21, x22, [sp, #32]
  448f78:	mov	w20, #0x80                  	// #128
  448f7c:	mov	w19, #0x2                   	// #2
  448f80:	b	448f90 <_obstack_memory_used@@Base+0x7df4>
  448f84:	stp	x21, x22, [sp, #32]
  448f88:	mov	w20, #0x0                   	// #0
  448f8c:	mov	w19, #0x0                   	// #0
  448f90:	sxtw	x19, w19
  448f94:	sbfiz	x21, x20, #1, #32
  448f98:	bl	404750 <__ctype_b_loc@plt>
  448f9c:	mov	x5, x0
  448fa0:	add	x4, x23, #0xb8
  448fa4:	mov	x6, #0x1                   	// #1
  448fa8:	b	449000 <_obstack_memory_used@@Base+0x7e64>
  448fac:	add	w0, w0, #0x1
  448fb0:	add	x3, x3, #0x2
  448fb4:	cmp	w0, #0x40
  448fb8:	b.eq	448fec <_obstack_memory_used@@Base+0x7e50>  // b.none
  448fbc:	add	w2, w20, w0
  448fc0:	ldr	x1, [x5]
  448fc4:	ldrh	w1, [x1, x3]
  448fc8:	and	w1, w1, #0x8
  448fcc:	cmp	w2, #0x5f
  448fd0:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  448fd4:	b.eq	448fac <_obstack_memory_used@@Base+0x7e10>  // b.none
  448fd8:	lsl	x1, x6, x0
  448fdc:	ldr	x2, [x4, x19, lsl #3]
  448fe0:	orr	x1, x2, x1
  448fe4:	str	x1, [x4, x19, lsl #3]
  448fe8:	b	448fac <_obstack_memory_used@@Base+0x7e10>
  448fec:	add	w20, w20, #0x40
  448ff0:	add	x19, x19, #0x1
  448ff4:	add	x21, x21, #0x80
  448ff8:	cmp	w19, #0x3
  448ffc:	b.gt	44900c <_obstack_memory_used@@Base+0x7e70>
  449000:	mov	x3, x21
  449004:	mov	w0, #0x0                   	// #0
  449008:	b	448fbc <_obstack_memory_used@@Base+0x7e20>
  44900c:	ldp	x21, x22, [sp, #32]
  449010:	b	448330 <_obstack_memory_used@@Base+0x7194>
  449014:	mov	w0, #0x6                   	// #6
  449018:	str	w0, [x24]
  44901c:	mov	x3, x24
  449020:	mov	x2, #0x0                   	// #0
  449024:	mov	x1, #0x0                   	// #0
  449028:	mov	x0, x23
  44902c:	bl	442048 <_obstack_memory_used@@Base+0xeac>
  449030:	mov	x20, x0
  449034:	mov	w0, #0x9                   	// #9
  449038:	str	w0, [x24]
  44903c:	b	448370 <_obstack_memory_used@@Base+0x71d4>
  449040:	mov	w0, #0xc                   	// #12
  449044:	str	w0, [x28]
  449048:	mov	x25, #0x0                   	// #0
  44904c:	b	4494e4 <_obstack_memory_used@@Base+0x8348>
  449050:	mov	x3, x24
  449054:	mov	x2, #0x0                   	// #0
  449058:	mov	x1, #0x0                   	// #0
  44905c:	mov	x0, x23
  449060:	bl	442048 <_obstack_memory_used@@Base+0xeac>
  449064:	mov	x25, x0
  449068:	cbnz	x0, 4483b0 <_obstack_memory_used@@Base+0x7214>
  44906c:	mov	w0, #0xc                   	// #12
  449070:	str	w0, [x28]
  449074:	b	4494e4 <_obstack_memory_used@@Base+0x8348>
  449078:	mov	w0, #0xc                   	// #12
  44907c:	str	w0, [x28]
  449080:	b	4494e4 <_obstack_memory_used@@Base+0x8348>
  449084:	cmp	w0, #0x21
  449088:	cset	w4, eq  // eq = none
  44908c:	adrp	x3, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  449090:	add	x3, x3, #0x468
  449094:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  449098:	add	x2, x2, #0x420
  44909c:	ldr	x1, [x26, #120]
  4490a0:	mov	x0, x23
  4490a4:	bl	4461b4 <_obstack_memory_used@@Base+0x5018>
  4490a8:	mov	x25, x0
  4490ac:	ldr	w0, [x28]
  4490b0:	cmp	w0, #0x0
  4490b4:	ccmp	x25, #0x0, #0x0, ne  // ne = any
  4490b8:	b.ne	448530 <_obstack_memory_used@@Base+0x7394>  // b.any
  4490bc:	mov	x25, #0x0                   	// #0
  4490c0:	b	4494e4 <_obstack_memory_used@@Base+0x8348>
  4490c4:	cset	w4, eq  // eq = none
  4490c8:	adrp	x3, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  4490cc:	add	x3, x3, #0x7f8
  4490d0:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  4490d4:	add	x2, x2, #0x430
  4490d8:	ldr	x1, [x26, #120]
  4490dc:	mov	x0, x23
  4490e0:	bl	4461b4 <_obstack_memory_used@@Base+0x5018>
  4490e4:	mov	x25, x0
  4490e8:	ldr	w0, [x28]
  4490ec:	cmp	w0, #0x0
  4490f0:	ccmp	x25, #0x0, #0x0, ne  // ne = any
  4490f4:	b.ne	448530 <_obstack_memory_used@@Base+0x7394>  // b.any
  4490f8:	mov	x25, #0x0                   	// #0
  4490fc:	b	4494e4 <_obstack_memory_used@@Base+0x8348>
  449100:	mov	x2, x27
  449104:	mov	x1, x24
  449108:	mov	x0, x26
  44910c:	bl	4442a0 <_obstack_memory_used@@Base+0x3104>
  449110:	mov	x21, x0
  449114:	cmn	x0, #0x1
  449118:	b.eq	449158 <_obstack_memory_used@@Base+0x7fbc>  // b.none
  44911c:	cmn	x0, #0x2
  449120:	b.eq	449138 <_obstack_memory_used@@Base+0x7f9c>  // b.none
  449124:	ldrb	w0, [x24, #8]
  449128:	cmp	w0, #0x18
  44912c:	b.eq	44924c <_obstack_memory_used@@Base+0x80b0>  // b.none
  449130:	cmp	w0, #0x1
  449134:	b.eq	4491b0 <_obstack_memory_used@@Base+0x8014>  // b.none
  449138:	tbnz	w27, #21, 449184 <_obstack_memory_used@@Base+0x7fe8>
  44913c:	ldrb	w0, [x24, #8]
  449140:	cmp	w0, #0x2
  449144:	b.ne	44923c <_obstack_memory_used@@Base+0x80a0>  // b.any
  449148:	mov	w0, #0x9                   	// #9
  44914c:	str	w0, [x28]
  449150:	mov	x0, #0x0                   	// #0
  449154:	b	449308 <_obstack_memory_used@@Base+0x816c>
  449158:	ldrb	w0, [x24, #8]
  44915c:	cmp	w0, #0x1
  449160:	b.ne	4491a0 <_obstack_memory_used@@Base+0x8004>  // b.any
  449164:	ldrb	w0, [x24]
  449168:	mov	x22, #0x0                   	// #0
  44916c:	cmp	w0, #0x2c
  449170:	b.ne	4491a0 <_obstack_memory_used@@Base+0x8004>  // b.any
  449174:	ldrb	w0, [x24]
  449178:	cmp	w0, #0x2c
  44917c:	b.eq	4491b8 <_obstack_memory_used@@Base+0x801c>  // b.none
  449180:	tbz	w27, #21, 44923c <_obstack_memory_used@@Base+0x80a0>
  449184:	str	x20, [x26, #72]
  449188:	ldp	x0, x1, [sp, #96]
  44918c:	stp	x0, x1, [x24]
  449190:	mov	w0, #0x1                   	// #1
  449194:	strb	w0, [x24, #8]
  449198:	mov	x0, x25
  44919c:	b	449308 <_obstack_memory_used@@Base+0x816c>
  4491a0:	mov	w0, #0xa                   	// #10
  4491a4:	str	w0, [x28]
  4491a8:	mov	x0, #0x0                   	// #0
  4491ac:	b	449308 <_obstack_memory_used@@Base+0x816c>
  4491b0:	mov	x22, x21
  4491b4:	b	449174 <_obstack_memory_used@@Base+0x7fd8>
  4491b8:	mov	x2, x27
  4491bc:	mov	x1, x24
  4491c0:	mov	x0, x26
  4491c4:	bl	4442a0 <_obstack_memory_used@@Base+0x3104>
  4491c8:	mov	x21, x0
  4491cc:	cmn	x22, #0x2
  4491d0:	ccmn	x0, #0x2, #0x4, ne  // ne = any
  4491d4:	b.eq	449138 <_obstack_memory_used@@Base+0x7f9c>  // b.none
  4491d8:	cmp	x0, x22
  4491dc:	ccmn	x0, #0x1, #0x4, lt  // lt = tstop
  4491e0:	b.ne	449254 <_obstack_memory_used@@Base+0x80b8>  // b.any
  4491e4:	ldrb	w0, [x24, #8]
  4491e8:	cmp	w0, #0x18
  4491ec:	b.ne	449254 <_obstack_memory_used@@Base+0x80b8>  // b.any
  4491f0:	cmn	x21, #0x1
  4491f4:	b.eq	449264 <_obstack_memory_used@@Base+0x80c8>  // b.none
  4491f8:	mov	x0, #0x7fff                	// #32767
  4491fc:	cmp	x21, x0
  449200:	cset	x0, gt
  449204:	cbnz	x0, 449274 <_obstack_memory_used@@Base+0x80d8>
  449208:	mov	x2, x27
  44920c:	mov	x1, x26
  449210:	mov	x0, x24
  449214:	bl	444274 <_obstack_memory_used@@Base+0x30d8>
  449218:	cbz	x25, 449480 <_obstack_memory_used@@Base+0x82e4>
  44921c:	orr	x0, x21, x22
  449220:	cbnz	x0, 449284 <_obstack_memory_used@@Base+0x80e8>
  449224:	mov	x2, #0x0                   	// #0
  449228:	ldr	x1, [sp, #120]
  44922c:	mov	x0, x25
  449230:	bl	441e40 <_obstack_memory_used@@Base+0xca4>
  449234:	mov	x0, #0x0                   	// #0
  449238:	b	449308 <_obstack_memory_used@@Base+0x816c>
  44923c:	mov	w0, #0xa                   	// #10
  449240:	str	w0, [x28]
  449244:	mov	x0, #0x0                   	// #0
  449248:	b	449308 <_obstack_memory_used@@Base+0x816c>
  44924c:	mov	x22, x21
  449250:	b	4491e4 <_obstack_memory_used@@Base+0x8048>
  449254:	mov	w0, #0xa                   	// #10
  449258:	str	w0, [x28]
  44925c:	mov	x0, #0x0                   	// #0
  449260:	b	449308 <_obstack_memory_used@@Base+0x816c>
  449264:	mov	x0, #0x7fff                	// #32767
  449268:	cmp	x22, x0
  44926c:	cset	x0, gt
  449270:	b	449204 <_obstack_memory_used@@Base+0x8068>
  449274:	mov	w0, #0xf                   	// #15
  449278:	str	w0, [x28]
  44927c:	mov	x0, #0x0                   	// #0
  449280:	b	449308 <_obstack_memory_used@@Base+0x816c>
  449284:	cmp	x22, #0x0
  449288:	b.le	449460 <_obstack_memory_used@@Base+0x82c4>
  44928c:	cmp	x22, #0x1
  449290:	b.le	44944c <_obstack_memory_used@@Base+0x82b0>
  449294:	str	x25, [sp, #96]
  449298:	mov	x19, x25
  44929c:	mov	x20, #0x2                   	// #2
  4492a0:	mov	x1, x23
  4492a4:	mov	x0, x19
  4492a8:	bl	442104 <_obstack_memory_used@@Base+0xf68>
  4492ac:	mov	x19, x0
  4492b0:	mov	w3, #0x10                  	// #16
  4492b4:	mov	x2, x0
  4492b8:	ldr	x1, [sp, #96]
  4492bc:	mov	x0, x23
  4492c0:	bl	4421b4 <_obstack_memory_used@@Base+0x1018>
  4492c4:	str	x0, [sp, #96]
  4492c8:	cmp	x19, #0x0
  4492cc:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  4492d0:	b.eq	4492fc <_obstack_memory_used@@Base+0x8160>  // b.none
  4492d4:	add	x20, x20, #0x1
  4492d8:	cmp	x20, x22
  4492dc:	b.le	4492a0 <_obstack_memory_used@@Base+0x8104>
  4492e0:	cmp	x21, x22
  4492e4:	b.eq	449570 <_obstack_memory_used@@Base+0x83d4>  // b.none
  4492e8:	mov	x1, x23
  4492ec:	mov	x0, x19
  4492f0:	bl	442104 <_obstack_memory_used@@Base+0xf68>
  4492f4:	mov	x19, x0
  4492f8:	cbnz	x0, 449398 <_obstack_memory_used@@Base+0x81fc>
  4492fc:	mov	w0, #0xc                   	// #12
  449300:	str	w0, [x28]
  449304:	mov	x0, #0x0                   	// #0
  449308:	ldr	w1, [x28]
  44930c:	cmp	w1, #0x0
  449310:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  449314:	b.eq	449498 <_obstack_memory_used@@Base+0x82fc>  // b.none
  449318:	mov	x25, x0
  44931c:	tbz	w27, #24, 449330 <_obstack_memory_used@@Base+0x8194>
  449320:	ldrb	w0, [x24, #8]
  449324:	cmp	w0, #0xb
  449328:	ccmp	w0, #0x17, #0x4, ne  // ne = any
  44932c:	b.eq	4494bc <_obstack_memory_used@@Base+0x8320>  // b.none
  449330:	ldrb	w1, [x24, #8]
  449334:	cmp	w1, #0x12
  449338:	cset	w19, eq  // eq = none
  44933c:	sub	w0, w1, #0x12
  449340:	and	w0, w0, #0xff
  449344:	cmp	w1, #0x17
  449348:	ccmp	w1, #0xb, #0x4, ne  // ne = any
  44934c:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  449350:	b.hi	449500 <_obstack_memory_used@@Base+0x8364>  // b.pmore
  449354:	ldr	x20, [x26, #72]
  449358:	ldp	x2, x3, [x24]
  44935c:	stp	x2, x3, [sp, #96]
  449360:	cmp	w1, #0x17
  449364:	b.eq	449100 <_obstack_memory_used@@Base+0x7f64>  // b.none
  449368:	and	x22, x19, #0xff
  44936c:	mov	x21, #0xffffffffffffffff    	// #-1
  449370:	cmp	w1, #0x13
  449374:	cneg	x21, x21, eq  // eq = none
  449378:	mov	x2, x27
  44937c:	mov	x1, x26
  449380:	mov	x0, x24
  449384:	bl	444274 <_obstack_memory_used@@Base+0x30d8>
  449388:	cbz	x25, 449490 <_obstack_memory_used@@Base+0x82f4>
  44938c:	cbnz	w19, 44944c <_obstack_memory_used@@Base+0x82b0>
  449390:	mov	x19, x25
  449394:	str	xzr, [sp, #96]
  449398:	ldrb	w0, [x19, #48]
  44939c:	cmp	w0, #0x11
  4493a0:	b.eq	44946c <_obstack_memory_used@@Base+0x82d0>  // b.none
  4493a4:	cmn	x21, #0x1
  4493a8:	cset	w3, eq  // eq = none
  4493ac:	add	w3, w3, #0xa
  4493b0:	mov	x2, #0x0                   	// #0
  4493b4:	mov	x1, x19
  4493b8:	mov	x0, x23
  4493bc:	bl	4421b4 <_obstack_memory_used@@Base+0x1018>
  4493c0:	mov	x20, x0
  4493c4:	cbz	x0, 4492fc <_obstack_memory_used@@Base+0x8160>
  4493c8:	add	x22, x22, #0x2
  4493cc:	cmp	x22, x21
  4493d0:	b.gt	44942c <_obstack_memory_used@@Base+0x8290>
  4493d4:	mov	x1, x23
  4493d8:	mov	x0, x19
  4493dc:	bl	442104 <_obstack_memory_used@@Base+0xf68>
  4493e0:	mov	x19, x0
  4493e4:	mov	w3, #0x10                  	// #16
  4493e8:	mov	x2, x0
  4493ec:	mov	x1, x20
  4493f0:	mov	x0, x23
  4493f4:	bl	4421b4 <_obstack_memory_used@@Base+0x1018>
  4493f8:	mov	x1, x0
  4493fc:	cmp	x19, #0x0
  449400:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  449404:	b.eq	4492fc <_obstack_memory_used@@Base+0x8160>  // b.none
  449408:	mov	w3, #0xa                   	// #10
  44940c:	mov	x2, #0x0                   	// #0
  449410:	mov	x0, x23
  449414:	bl	4421b4 <_obstack_memory_used@@Base+0x1018>
  449418:	mov	x20, x0
  44941c:	cbz	x0, 4492fc <_obstack_memory_used@@Base+0x8160>
  449420:	add	x22, x22, #0x1
  449424:	cmp	x22, x21
  449428:	b.le	4493d4 <_obstack_memory_used@@Base+0x8238>
  44942c:	ldr	x0, [sp, #96]
  449430:	cbz	x0, 449568 <_obstack_memory_used@@Base+0x83cc>
  449434:	mov	w3, #0x10                  	// #16
  449438:	mov	x2, x20
  44943c:	ldr	x1, [sp, #96]
  449440:	mov	x0, x23
  449444:	bl	4421b4 <_obstack_memory_used@@Base+0x1018>
  449448:	b	449308 <_obstack_memory_used@@Base+0x816c>
  44944c:	cmp	x21, x22
  449450:	b.eq	449488 <_obstack_memory_used@@Base+0x82ec>  // b.none
  449454:	mov	x19, x25
  449458:	str	x25, [sp, #96]
  44945c:	b	4492e8 <_obstack_memory_used@@Base+0x814c>
  449460:	mov	x19, x25
  449464:	str	xzr, [sp, #96]
  449468:	b	449398 <_obstack_memory_used@@Base+0x81fc>
  44946c:	ldr	x2, [x19, #40]
  449470:	ldr	x1, [sp, #112]
  449474:	mov	x0, x19
  449478:	bl	441e40 <_obstack_memory_used@@Base+0xca4>
  44947c:	b	4493a4 <_obstack_memory_used@@Base+0x8208>
  449480:	mov	x0, x25
  449484:	b	449308 <_obstack_memory_used@@Base+0x816c>
  449488:	mov	x0, x25
  44948c:	b	449308 <_obstack_memory_used@@Base+0x816c>
  449490:	mov	x0, x25
  449494:	b	449308 <_obstack_memory_used@@Base+0x816c>
  449498:	cbz	x25, 4495a4 <_obstack_memory_used@@Base+0x8408>
  44949c:	mov	x2, #0x0                   	// #0
  4494a0:	adrp	x1, 444000 <_obstack_memory_used@@Base+0x2e64>
  4494a4:	add	x1, x1, #0x3f8
  4494a8:	mov	x0, x25
  4494ac:	bl	441e40 <_obstack_memory_used@@Base+0xca4>
  4494b0:	mov	x25, #0x0                   	// #0
  4494b4:	ldp	x21, x22, [sp, #32]
  4494b8:	b	4494e4 <_obstack_memory_used@@Base+0x8348>
  4494bc:	cbz	x25, 4494d4 <_obstack_memory_used@@Base+0x8338>
  4494c0:	mov	x2, #0x0                   	// #0
  4494c4:	adrp	x1, 444000 <_obstack_memory_used@@Base+0x2e64>
  4494c8:	add	x1, x1, #0x3f8
  4494cc:	mov	x0, x25
  4494d0:	bl	441e40 <_obstack_memory_used@@Base+0xca4>
  4494d4:	mov	w0, #0xd                   	// #13
  4494d8:	str	w0, [x28]
  4494dc:	mov	x25, #0x0                   	// #0
  4494e0:	ldp	x21, x22, [sp, #32]
  4494e4:	mov	x0, x25
  4494e8:	ldp	x19, x20, [sp, #16]
  4494ec:	ldp	x23, x24, [sp, #48]
  4494f0:	ldp	x25, x26, [sp, #64]
  4494f4:	ldp	x27, x28, [sp, #80]
  4494f8:	ldp	x29, x30, [sp], #288
  4494fc:	ret
  449500:	ldp	x21, x22, [sp, #32]
  449504:	b	4494e4 <_obstack_memory_used@@Base+0x8348>
  449508:	mov	x25, #0x0                   	// #0
  44950c:	ldp	x21, x22, [sp, #32]
  449510:	b	4494e4 <_obstack_memory_used@@Base+0x8348>
  449514:	mov	w0, #0x3                   	// #3
  449518:	str	w0, [x28]
  44951c:	b	4487b8 <_obstack_memory_used@@Base+0x761c>
  449520:	mov	w0, #0x3                   	// #3
  449524:	str	w0, [x28]
  449528:	b	4487b8 <_obstack_memory_used@@Base+0x761c>
  44952c:	mov	w0, #0xb                   	// #11
  449530:	b	449538 <_obstack_memory_used@@Base+0x839c>
  449534:	mov	w0, #0xb                   	// #11
  449538:	str	w0, [x28]
  44953c:	b	4487b8 <_obstack_memory_used@@Base+0x761c>
  449540:	mov	w0, #0x3                   	// #3
  449544:	b	449538 <_obstack_memory_used@@Base+0x839c>
  449548:	mov	w0, #0x3                   	// #3
  44954c:	b	449538 <_obstack_memory_used@@Base+0x839c>
  449550:	mov	w0, #0x3                   	// #3
  449554:	b	449538 <_obstack_memory_used@@Base+0x839c>
  449558:	mov	w0, #0xb                   	// #11
  44955c:	b	449538 <_obstack_memory_used@@Base+0x839c>
  449560:	str	wzr, [x28]
  449564:	b	448b48 <_obstack_memory_used@@Base+0x79ac>
  449568:	mov	x25, x20
  44956c:	b	44931c <_obstack_memory_used@@Base+0x8180>
  449570:	ldr	x25, [sp, #96]
  449574:	b	44931c <_obstack_memory_used@@Base+0x8180>
  449578:	ldr	w0, [sp, #128]
  44957c:	cmp	w0, #0x0
  449580:	ccmp	w0, #0x3, #0x4, ne  // ne = any
  449584:	b.ne	448920 <_obstack_memory_used@@Base+0x7784>  // b.any
  449588:	b	448924 <_obstack_memory_used@@Base+0x7788>
  44958c:	ldr	x0, [sp, #200]
  449590:	bl	403ff0 <strlen@plt>
  449594:	cmp	x0, #0x1
  449598:	b.ls	4489a8 <_obstack_memory_used@@Base+0x780c>  // b.plast
  44959c:	mov	w0, #0x3                   	// #3
  4495a0:	b	449538 <_obstack_memory_used@@Base+0x839c>
  4495a4:	ldp	x21, x22, [sp, #32]
  4495a8:	b	4494e4 <_obstack_memory_used@@Base+0x8348>
  4495ac:	stp	x29, x30, [sp, #-96]!
  4495b0:	mov	x29, sp
  4495b4:	stp	x19, x20, [sp, #16]
  4495b8:	stp	x21, x22, [sp, #32]
  4495bc:	stp	x23, x24, [sp, #48]
  4495c0:	stp	x25, x26, [sp, #64]
  4495c4:	stp	x27, x28, [sp, #80]
  4495c8:	mov	x26, x0
  4495cc:	mov	x25, x1
  4495d0:	mov	x22, x2
  4495d4:	mov	x27, x3
  4495d8:	mov	x23, x4
  4495dc:	mov	x21, x5
  4495e0:	ldr	x28, [x1]
  4495e4:	bl	4482b4 <_obstack_memory_used@@Base+0x7118>
  4495e8:	mov	x20, x0
  4495ec:	ldr	w0, [x21]
  4495f0:	cmp	w0, #0x0
  4495f4:	ccmp	x20, #0x0, #0x0, ne  // ne = any
  4495f8:	b.eq	449710 <_obstack_memory_used@@Base+0x8574>  // b.none
  4495fc:	ldrb	w1, [x22, #8]
  449600:	and	w0, w1, #0xfffffff7
  449604:	and	w0, w0, #0xff
  449608:	cmp	w0, #0x2
  44960c:	b.ne	449668 <_obstack_memory_used@@Base+0x84cc>  // b.any
  449610:	b	4496f0 <_obstack_memory_used@@Base+0x8554>
  449614:	cbz	x20, 4496f0 <_obstack_memory_used@@Base+0x8554>
  449618:	mov	x2, #0x0                   	// #0
  44961c:	adrp	x1, 444000 <_obstack_memory_used@@Base+0x2e64>
  449620:	add	x1, x1, #0x3f8
  449624:	mov	x0, x20
  449628:	bl	441e40 <_obstack_memory_used@@Base+0xca4>
  44962c:	mov	x20, #0x0                   	// #0
  449630:	b	4496f0 <_obstack_memory_used@@Base+0x8554>
  449634:	mov	w3, #0x10                  	// #16
  449638:	mov	x2, x19
  44963c:	mov	x1, x20
  449640:	mov	x0, x28
  449644:	bl	4421b4 <_obstack_memory_used@@Base+0x1018>
  449648:	mov	x24, x0
  44964c:	cbz	x0, 4496bc <_obstack_memory_used@@Base+0x8520>
  449650:	mov	x20, x0
  449654:	ldrb	w1, [x22, #8]
  449658:	and	w0, w1, #0xfffffff7
  44965c:	and	w0, w0, #0xff
  449660:	cmp	w0, #0x2
  449664:	b.eq	4496f0 <_obstack_memory_used@@Base+0x8554>  // b.none
  449668:	cmp	x23, #0x0
  44966c:	ccmp	w1, #0x9, #0x0, ne  // ne = any
  449670:	b.eq	4496f0 <_obstack_memory_used@@Base+0x8554>  // b.none
  449674:	mov	x5, x21
  449678:	mov	x4, x23
  44967c:	mov	x3, x27
  449680:	mov	x2, x22
  449684:	mov	x1, x25
  449688:	mov	x0, x26
  44968c:	bl	4482b4 <_obstack_memory_used@@Base+0x7118>
  449690:	mov	x19, x0
  449694:	ldr	w0, [x21]
  449698:	cmp	w0, #0x0
  44969c:	ccmp	x19, #0x0, #0x0, ne  // ne = any
  4496a0:	b.eq	449614 <_obstack_memory_used@@Base+0x8478>  // b.none
  4496a4:	cmp	x20, #0x0
  4496a8:	ccmp	x19, #0x0, #0x4, ne  // ne = any
  4496ac:	b.ne	449634 <_obstack_memory_used@@Base+0x8498>  // b.any
  4496b0:	cmp	x20, #0x0
  4496b4:	csel	x20, x20, x19, ne  // ne = any
  4496b8:	b	449654 <_obstack_memory_used@@Base+0x84b8>
  4496bc:	adrp	x22, 444000 <_obstack_memory_used@@Base+0x2e64>
  4496c0:	add	x22, x22, #0x3f8
  4496c4:	mov	x2, #0x0                   	// #0
  4496c8:	mov	x1, x22
  4496cc:	mov	x0, x19
  4496d0:	bl	441e40 <_obstack_memory_used@@Base+0xca4>
  4496d4:	mov	x2, #0x0                   	// #0
  4496d8:	mov	x1, x22
  4496dc:	mov	x0, x20
  4496e0:	bl	441e40 <_obstack_memory_used@@Base+0xca4>
  4496e4:	mov	w0, #0xc                   	// #12
  4496e8:	str	w0, [x21]
  4496ec:	mov	x20, x24
  4496f0:	mov	x0, x20
  4496f4:	ldp	x19, x20, [sp, #16]
  4496f8:	ldp	x21, x22, [sp, #32]
  4496fc:	ldp	x23, x24, [sp, #48]
  449700:	ldp	x25, x26, [sp, #64]
  449704:	ldp	x27, x28, [sp, #80]
  449708:	ldp	x29, x30, [sp], #96
  44970c:	ret
  449710:	mov	x20, #0x0                   	// #0
  449714:	b	4496f0 <_obstack_memory_used@@Base+0x8554>
  449718:	stp	x29, x30, [sp, #-112]!
  44971c:	mov	x29, sp
  449720:	stp	x19, x20, [sp, #16]
  449724:	stp	x21, x22, [sp, #32]
  449728:	stp	x23, x24, [sp, #48]
  44972c:	stp	x25, x26, [sp, #64]
  449730:	stp	x27, x28, [sp, #80]
  449734:	mov	x22, x0
  449738:	str	x1, [sp, #96]
  44973c:	mov	x20, x2
  449740:	mov	x25, x3
  449744:	str	x3, [sp, #104]
  449748:	mov	x24, x4
  44974c:	mov	x23, x5
  449750:	ldr	x21, [x1]
  449754:	ldr	x28, [x21, #168]
  449758:	bl	4495ac <_obstack_memory_used@@Base+0x8410>
  44975c:	mov	x19, x0
  449760:	ldr	w0, [x23]
  449764:	cmp	w0, #0x0
  449768:	ccmp	x19, #0x0, #0x0, ne  // ne = any
  44976c:	b.eq	44986c <_obstack_memory_used@@Base+0x86d0>  // b.none
  449770:	orr	x25, x25, #0x800000
  449774:	mov	w26, #0xa                   	// #10
  449778:	b	4497b8 <_obstack_memory_used@@Base+0x861c>
  44977c:	cbz	x19, 44984c <_obstack_memory_used@@Base+0x86b0>
  449780:	mov	x2, #0x0                   	// #0
  449784:	adrp	x1, 444000 <_obstack_memory_used@@Base+0x2e64>
  449788:	add	x1, x1, #0x3f8
  44978c:	mov	x0, x19
  449790:	bl	441e40 <_obstack_memory_used@@Base+0xca4>
  449794:	mov	x19, #0x0                   	// #0
  449798:	b	44984c <_obstack_memory_used@@Base+0x86b0>
  44979c:	mov	x2, #0x0                   	// #0
  4497a0:	mov	w3, w26
  4497a4:	mov	x1, x19
  4497a8:	mov	x0, x21
  4497ac:	bl	4421b4 <_obstack_memory_used@@Base+0x1018>
  4497b0:	mov	x19, x0
  4497b4:	cbz	x0, 449844 <_obstack_memory_used@@Base+0x86a8>
  4497b8:	ldrb	w0, [x20, #8]
  4497bc:	cmp	w0, #0xa
  4497c0:	b.ne	44984c <_obstack_memory_used@@Base+0x86b0>  // b.any
  4497c4:	mov	x2, x25
  4497c8:	mov	x1, x22
  4497cc:	mov	x0, x20
  4497d0:	bl	444274 <_obstack_memory_used@@Base+0x30d8>
  4497d4:	ldrb	w1, [x20, #8]
  4497d8:	and	w0, w1, #0xfffffff7
  4497dc:	and	w0, w0, #0xff
  4497e0:	cmp	w0, #0x2
  4497e4:	b.eq	44979c <_obstack_memory_used@@Base+0x8600>  // b.none
  4497e8:	cmp	x24, #0x0
  4497ec:	ccmp	w1, #0x9, #0x0, ne  // ne = any
  4497f0:	b.eq	44983c <_obstack_memory_used@@Base+0x86a0>  // b.none
  4497f4:	ldr	x27, [x21, #168]
  4497f8:	str	x28, [x21, #168]
  4497fc:	mov	x5, x23
  449800:	mov	x4, x24
  449804:	ldr	x3, [sp, #104]
  449808:	mov	x2, x20
  44980c:	ldr	x1, [sp, #96]
  449810:	mov	x0, x22
  449814:	bl	4495ac <_obstack_memory_used@@Base+0x8410>
  449818:	mov	x2, x0
  44981c:	ldr	w0, [x23]
  449820:	cmp	w0, #0x0
  449824:	ccmp	x2, #0x0, #0x0, ne  // ne = any
  449828:	b.eq	44977c <_obstack_memory_used@@Base+0x85e0>  // b.none
  44982c:	ldr	x0, [x21, #168]
  449830:	orr	x27, x0, x27
  449834:	str	x27, [x21, #168]
  449838:	b	4497a0 <_obstack_memory_used@@Base+0x8604>
  44983c:	mov	x2, #0x0                   	// #0
  449840:	b	4497a0 <_obstack_memory_used@@Base+0x8604>
  449844:	mov	w0, #0xc                   	// #12
  449848:	str	w0, [x23]
  44984c:	mov	x0, x19
  449850:	ldp	x19, x20, [sp, #16]
  449854:	ldp	x21, x22, [sp, #32]
  449858:	ldp	x23, x24, [sp, #48]
  44985c:	ldp	x25, x26, [sp, #64]
  449860:	ldp	x27, x28, [sp, #80]
  449864:	ldp	x29, x30, [sp], #112
  449868:	ret
  44986c:	mov	x19, #0x0                   	// #0
  449870:	b	44984c <_obstack_memory_used@@Base+0x86b0>
  449874:	stp	x29, x30, [sp, #-80]!
  449878:	mov	x29, sp
  44987c:	stp	x19, x20, [sp, #16]
  449880:	stp	x21, x22, [sp, #32]
  449884:	stp	x23, x24, [sp, #48]
  449888:	mov	x23, x0
  44988c:	mov	x22, x1
  449890:	ldr	x1, [x2, #8]
  449894:	cbz	x1, 4498f4 <_obstack_memory_used@@Base+0x8758>
  449898:	stp	x25, x26, [sp, #64]
  44989c:	mov	x25, x2
  4498a0:	mov	x21, x1
  4498a4:	cmp	x1, #0x0
  4498a8:	b.le	4498c4 <_obstack_memory_used@@Base+0x8728>
  4498ac:	ldr	x3, [x2, #16]
  4498b0:	add	x1, x3, x1, lsl #3
  4498b4:	ldr	x0, [x3], #8
  4498b8:	add	x21, x21, x0
  4498bc:	cmp	x3, x1
  4498c0:	b.ne	4498b4 <_obstack_memory_used@@Base+0x8718>  // b.any
  4498c4:	ldr	x0, [x22, #136]
  4498c8:	and	x0, x21, x0
  4498cc:	add	x0, x0, x0, lsl #1
  4498d0:	lsl	x0, x0, #3
  4498d4:	ldr	x1, [x22, #64]
  4498d8:	add	x2, x1, x0
  4498dc:	ldr	x24, [x1, x0]
  4498e0:	cmp	x24, #0x0
  4498e4:	b.le	449938 <_obstack_memory_used@@Base+0x879c>
  4498e8:	ldr	x26, [x2, #16]
  4498ec:	mov	x20, #0x0                   	// #0
  4498f0:	b	44990c <_obstack_memory_used@@Base+0x8770>
  4498f4:	str	wzr, [x0]
  4498f8:	mov	x19, #0x0                   	// #0
  4498fc:	b	449a6c <_obstack_memory_used@@Base+0x88d0>
  449900:	add	x20, x20, #0x1
  449904:	cmp	x24, x20
  449908:	b.eq	449938 <_obstack_memory_used@@Base+0x879c>  // b.none
  44990c:	ldr	x19, [x26, x20, lsl #3]
  449910:	ldr	x0, [x19]
  449914:	cmp	x21, x0
  449918:	b.ne	449900 <_obstack_memory_used@@Base+0x8764>  // b.any
  44991c:	mov	x1, x25
  449920:	add	x0, x19, #0x8
  449924:	bl	4413c8 <_obstack_memory_used@@Base+0x22c>
  449928:	and	w0, w0, #0xff
  44992c:	cbz	w0, 449900 <_obstack_memory_used@@Base+0x8764>
  449930:	ldp	x25, x26, [sp, #64]
  449934:	b	449a6c <_obstack_memory_used@@Base+0x88d0>
  449938:	mov	x1, #0x1                   	// #1
  44993c:	mov	x0, #0x70                  	// #112
  449940:	bl	4044d0 <calloc@plt>
  449944:	mov	x19, x0
  449948:	cbz	x0, 449988 <_obstack_memory_used@@Base+0x87ec>
  44994c:	add	x20, x0, #0x8
  449950:	mov	x1, x25
  449954:	mov	x0, x20
  449958:	bl	442eb0 <_obstack_memory_used@@Base+0x1d14>
  44995c:	cbnz	w0, 449980 <_obstack_memory_used@@Base+0x87e4>
  449960:	str	x20, [x19, #80]
  449964:	ldr	x6, [x25, #8]
  449968:	cmp	x6, #0x0
  44996c:	b.le	449a54 <_obstack_memory_used@@Base+0x88b8>
  449970:	ldr	x7, [x22]
  449974:	ldr	x0, [x25, #16]
  449978:	add	x6, x0, x6, lsl #3
  44997c:	b	4499ec <_obstack_memory_used@@Base+0x8850>
  449980:	mov	x0, x19
  449984:	bl	4047c0 <free@plt>
  449988:	mov	w0, #0xc                   	// #12
  44998c:	str	w0, [x23]
  449990:	mov	x19, #0x0                   	// #0
  449994:	ldp	x25, x26, [sp, #64]
  449998:	b	449a6c <_obstack_memory_used@@Base+0x88d0>
  44999c:	ldr	w1, [x2, #8]
  4499a0:	tst	w1, #0x3ff00
  4499a4:	b.eq	4499e0 <_obstack_memory_used@@Base+0x8844>  // b.none
  4499a8:	ldrb	w1, [x19, #104]
  4499ac:	ubfx	x3, x1, #5, #1
  4499b0:	ldrb	w4, [x2, #10]
  4499b4:	ubfx	x4, x4, #4, #1
  4499b8:	orr	w3, w3, w4
  4499bc:	bfi	w1, w3, #5, #1
  4499c0:	strb	w1, [x19, #104]
  4499c4:	ldr	w1, [x2, #8]
  4499c8:	tst	w1, #0x3ff00
  4499cc:	b.eq	4499e0 <_obstack_memory_used@@Base+0x8844>  // b.none
  4499d0:	b	449a44 <_obstack_memory_used@@Base+0x88a8>
  4499d4:	and	x1, x1, #0xff
  4499d8:	orr	w1, w1, #0x10
  4499dc:	strb	w1, [x19, #104]
  4499e0:	add	x0, x0, #0x8
  4499e4:	cmp	x6, x0
  4499e8:	b.eq	449a54 <_obstack_memory_used@@Base+0x88b8>  // b.none
  4499ec:	ldr	x2, [x0]
  4499f0:	add	x2, x7, x2, lsl #4
  4499f4:	ldrb	w3, [x2, #8]
  4499f8:	cmp	w3, #0x1
  4499fc:	b.eq	44999c <_obstack_memory_used@@Base+0x8800>  // b.none
  449a00:	ldrb	w1, [x19, #104]
  449a04:	ubfx	x4, x1, #5, #1
  449a08:	ldrb	w5, [x2, #10]
  449a0c:	ubfx	x5, x5, #4, #1
  449a10:	orr	w4, w4, w5
  449a14:	bfi	w1, w4, #5, #1
  449a18:	strb	w1, [x19, #104]
  449a1c:	cmp	w3, #0x2
  449a20:	b.eq	4499d4 <_obstack_memory_used@@Base+0x8838>  // b.none
  449a24:	cmp	w3, #0x4
  449a28:	b.ne	449a3c <_obstack_memory_used@@Base+0x88a0>  // b.any
  449a2c:	ldrb	w1, [x19, #104]
  449a30:	orr	w1, w1, #0x40
  449a34:	strb	w1, [x19, #104]
  449a38:	b	4499e0 <_obstack_memory_used@@Base+0x8844>
  449a3c:	cmp	w3, #0xc
  449a40:	b.ne	4499c4 <_obstack_memory_used@@Base+0x8828>  // b.any
  449a44:	ldrb	w1, [x19, #104]
  449a48:	orr	w1, w1, #0xffffff80
  449a4c:	strb	w1, [x19, #104]
  449a50:	b	4499e0 <_obstack_memory_used@@Base+0x8844>
  449a54:	mov	x2, x21
  449a58:	mov	x1, x19
  449a5c:	mov	x0, x22
  449a60:	bl	442680 <_obstack_memory_used@@Base+0x14e4>
  449a64:	cbnz	w0, 449a84 <_obstack_memory_used@@Base+0x88e8>
  449a68:	ldp	x25, x26, [sp, #64]
  449a6c:	mov	x0, x19
  449a70:	ldp	x19, x20, [sp, #16]
  449a74:	ldp	x21, x22, [sp, #32]
  449a78:	ldp	x23, x24, [sp, #48]
  449a7c:	ldp	x29, x30, [sp], #80
  449a80:	ret
  449a84:	mov	x0, x19
  449a88:	bl	444c98 <_obstack_memory_used@@Base+0x3afc>
  449a8c:	b	449988 <_obstack_memory_used@@Base+0x87ec>
  449a90:	stp	x29, x30, [sp, #-144]!
  449a94:	mov	x29, sp
  449a98:	stp	x21, x22, [sp, #32]
  449a9c:	stp	x23, x24, [sp, #48]
  449aa0:	stp	x27, x28, [sp, #80]
  449aa4:	mov	x24, x0
  449aa8:	mov	x23, x1
  449aac:	mov	x22, x2
  449ab0:	str	x3, [sp, #104]
  449ab4:	mov	w28, w4
  449ab8:	mov	x1, x2
  449abc:	bl	441a1c <_obstack_memory_used@@Base+0x880>
  449ac0:	cmn	x0, #0x1
  449ac4:	b.eq	449ca4 <_obstack_memory_used@@Base+0x8b08>  // b.none
  449ac8:	stp	x19, x20, [sp, #16]
  449acc:	stp	x25, x26, [sp, #64]
  449ad0:	ldr	x25, [x24, #152]
  449ad4:	add	x0, x0, x0, lsl #2
  449ad8:	lsl	x27, x0, #3
  449adc:	b	449b54 <_obstack_memory_used@@Base+0x89b8>
  449ae0:	ldr	x0, [x25, #40]
  449ae4:	add	x21, x21, x21, lsl #1
  449ae8:	add	x21, x0, x21, lsl #3
  449aec:	ldr	x0, [x21, #16]
  449af0:	ldr	x20, [x0]
  449af4:	mov	x1, x20
  449af8:	mov	x0, x23
  449afc:	bl	441424 <_obstack_memory_used@@Base+0x288>
  449b00:	cbnz	x0, 449bb8 <_obstack_memory_used@@Base+0x8a1c>
  449b04:	mov	x1, x20
  449b08:	add	x0, sp, #0x70
  449b0c:	bl	4423b4 <_obstack_memory_used@@Base+0x1218>
  449b10:	str	w0, [sp, #140]
  449b14:	mov	w3, w28
  449b18:	ldr	x2, [sp, #104]
  449b1c:	add	x1, sp, #0x70
  449b20:	mov	x0, x25
  449b24:	bl	4451e0 <_obstack_memory_used@@Base+0x4044>
  449b28:	mov	w19, w0
  449b2c:	add	x1, sp, #0x70
  449b30:	mov	x0, x23
  449b34:	bl	442b48 <_obstack_memory_used@@Base+0x19ac>
  449b38:	mov	w20, w0
  449b3c:	ldr	x0, [sp, #128]
  449b40:	bl	4047c0 <free@plt>
  449b44:	ldr	w0, [sp, #140]
  449b48:	orr	w1, w19, w20
  449b4c:	orr	w1, w1, w0
  449b50:	cbnz	w1, 449b60 <_obstack_memory_used@@Base+0x89c4>
  449b54:	ldr	x19, [x24, #216]
  449b58:	add	x19, x19, x27
  449b5c:	b	449bc4 <_obstack_memory_used@@Base+0x8a28>
  449b60:	cbnz	w0, 449cac <_obstack_memory_used@@Base+0x8b10>
  449b64:	cmp	w19, #0x0
  449b68:	csel	w0, w19, w20, ne  // ne = any
  449b6c:	ldp	x19, x20, [sp, #16]
  449b70:	ldp	x25, x26, [sp, #64]
  449b74:	b	449c90 <_obstack_memory_used@@Base+0x8af4>
  449b78:	mov	x1, x26
  449b7c:	add	x0, sp, #0x70
  449b80:	bl	4423b4 <_obstack_memory_used@@Base+0x1218>
  449b84:	str	w0, [sp, #140]
  449b88:	cbnz	w0, 449cb8 <_obstack_memory_used@@Base+0x8b1c>
  449b8c:	ldr	x21, [x24, #184]
  449b90:	add	x2, sp, #0x70
  449b94:	mov	x1, x25
  449b98:	add	x0, sp, #0x8c
  449b9c:	bl	449874 <_obstack_memory_used@@Base+0x86d8>
  449ba0:	str	x0, [x21, x20, lsl #3]
  449ba4:	ldr	x0, [sp, #128]
  449ba8:	bl	4047c0 <free@plt>
  449bac:	ldr	x0, [x24, #184]
  449bb0:	ldr	x0, [x0, x20, lsl #3]
  449bb4:	cbz	x0, 449c74 <_obstack_memory_used@@Base+0x8ad8>
  449bb8:	add	x19, x19, #0x28
  449bbc:	ldurb	w0, [x19, #-8]
  449bc0:	cbz	w0, 449c88 <_obstack_memory_used@@Base+0x8aec>
  449bc4:	ldr	x21, [x19]
  449bc8:	mov	x1, x21
  449bcc:	mov	x0, x23
  449bd0:	bl	441424 <_obstack_memory_used@@Base+0x288>
  449bd4:	cbz	x0, 449bb8 <_obstack_memory_used@@Base+0x8a1c>
  449bd8:	ldr	x20, [x19, #24]
  449bdc:	add	x20, x22, x20
  449be0:	ldr	x0, [x19, #16]
  449be4:	sub	x20, x20, x0
  449be8:	cmp	x22, x20
  449bec:	b.eq	449ae0 <_obstack_memory_used@@Base+0x8944>  // b.none
  449bf0:	ldr	x0, [x25, #24]
  449bf4:	ldr	x26, [x0, x21, lsl #3]
  449bf8:	ldr	x0, [x24, #184]
  449bfc:	ldr	x21, [x0, x20, lsl #3]
  449c00:	cbz	x21, 449b78 <_obstack_memory_used@@Base+0x89dc>
  449c04:	add	x21, x21, #0x8
  449c08:	mov	x1, x26
  449c0c:	mov	x0, x21
  449c10:	bl	441424 <_obstack_memory_used@@Base+0x288>
  449c14:	cbnz	x0, 449bb8 <_obstack_memory_used@@Base+0x8a1c>
  449c18:	mov	x1, x21
  449c1c:	add	x0, sp, #0x70
  449c20:	bl	442eb0 <_obstack_memory_used@@Base+0x1d14>
  449c24:	str	w0, [sp, #140]
  449c28:	mov	x1, x26
  449c2c:	add	x0, sp, #0x70
  449c30:	bl	442408 <_obstack_memory_used@@Base+0x126c>
  449c34:	and	w0, w0, #0xff
  449c38:	ldr	w1, [sp, #140]
  449c3c:	cmp	w1, #0x0
  449c40:	cset	w1, ne  // ne = any
  449c44:	eor	w0, w0, #0x1
  449c48:	orr	w0, w1, w0
  449c4c:	cbz	w0, 449b8c <_obstack_memory_used@@Base+0x89f0>
  449c50:	ldr	x0, [sp, #128]
  449c54:	bl	4047c0 <free@plt>
  449c58:	ldr	w0, [sp, #140]
  449c5c:	cmp	w0, #0x0
  449c60:	mov	w1, #0xc                   	// #12
  449c64:	csel	w0, w0, w1, ne  // ne = any
  449c68:	ldp	x19, x20, [sp, #16]
  449c6c:	ldp	x25, x26, [sp, #64]
  449c70:	b	449c90 <_obstack_memory_used@@Base+0x8af4>
  449c74:	ldr	w0, [sp, #140]
  449c78:	cbz	w0, 449bb8 <_obstack_memory_used@@Base+0x8a1c>
  449c7c:	ldp	x19, x20, [sp, #16]
  449c80:	ldp	x25, x26, [sp, #64]
  449c84:	b	449c90 <_obstack_memory_used@@Base+0x8af4>
  449c88:	ldp	x19, x20, [sp, #16]
  449c8c:	ldp	x25, x26, [sp, #64]
  449c90:	ldp	x21, x22, [sp, #32]
  449c94:	ldp	x23, x24, [sp, #48]
  449c98:	ldp	x27, x28, [sp, #80]
  449c9c:	ldp	x29, x30, [sp], #144
  449ca0:	ret
  449ca4:	mov	w0, #0x0                   	// #0
  449ca8:	b	449c90 <_obstack_memory_used@@Base+0x8af4>
  449cac:	ldp	x19, x20, [sp, #16]
  449cb0:	ldp	x25, x26, [sp, #64]
  449cb4:	b	449c90 <_obstack_memory_used@@Base+0x8af4>
  449cb8:	ldp	x19, x20, [sp, #16]
  449cbc:	ldp	x25, x26, [sp, #64]
  449cc0:	b	449c90 <_obstack_memory_used@@Base+0x8af4>
  449cc4:	cmp	x3, #0x0
  449cc8:	b.le	449d74 <_obstack_memory_used@@Base+0x8bd8>
  449ccc:	stp	x29, x30, [sp, #-96]!
  449cd0:	mov	x29, sp
  449cd4:	stp	x19, x20, [sp, #16]
  449cd8:	stp	x21, x22, [sp, #32]
  449cdc:	stp	x23, x24, [sp, #48]
  449ce0:	mov	x24, x0
  449ce4:	mov	x20, x1
  449ce8:	mov	x23, x2
  449cec:	mov	x21, x3
  449cf0:	mov	x19, #0x0                   	// #0
  449cf4:	b	449d0c <_obstack_memory_used@@Base+0x8b70>
  449cf8:	ldr	x0, [x23, x19, lsl #3]
  449cfc:	str	x0, [x20, x19, lsl #3]
  449d00:	add	x19, x19, #0x1
  449d04:	cmp	x21, x19
  449d08:	b.eq	449d5c <_obstack_memory_used@@Base+0x8bc0>  // b.none
  449d0c:	ldr	x1, [x20, x19, lsl #3]
  449d10:	cbz	x1, 449cf8 <_obstack_memory_used@@Base+0x8b5c>
  449d14:	ldr	x2, [x23, x19, lsl #3]
  449d18:	cbz	x2, 449d00 <_obstack_memory_used@@Base+0x8b64>
  449d1c:	add	x2, x2, #0x8
  449d20:	add	x1, x1, #0x8
  449d24:	add	x0, sp, #0x40
  449d28:	bl	442f28 <_obstack_memory_used@@Base+0x1d8c>
  449d2c:	str	w0, [sp, #92]
  449d30:	cbnz	w0, 449d60 <_obstack_memory_used@@Base+0x8bc4>
  449d34:	add	x2, sp, #0x40
  449d38:	mov	x1, x24
  449d3c:	add	x0, sp, #0x5c
  449d40:	bl	449874 <_obstack_memory_used@@Base+0x86d8>
  449d44:	str	x0, [x20, x19, lsl #3]
  449d48:	ldr	x0, [sp, #80]
  449d4c:	bl	4047c0 <free@plt>
  449d50:	ldr	w0, [sp, #92]
  449d54:	cbz	w0, 449d00 <_obstack_memory_used@@Base+0x8b64>
  449d58:	b	449d60 <_obstack_memory_used@@Base+0x8bc4>
  449d5c:	mov	w0, #0x0                   	// #0
  449d60:	ldp	x19, x20, [sp, #16]
  449d64:	ldp	x21, x22, [sp, #32]
  449d68:	ldp	x23, x24, [sp, #48]
  449d6c:	ldp	x29, x30, [sp], #96
  449d70:	ret
  449d74:	mov	w0, #0x0                   	// #0
  449d78:	ret
  449d7c:	stp	x29, x30, [sp, #-240]!
  449d80:	mov	x29, sp
  449d84:	stp	x19, x20, [sp, #16]
  449d88:	stp	x21, x22, [sp, #32]
  449d8c:	stp	x23, x24, [sp, #48]
  449d90:	stp	x27, x28, [sp, #80]
  449d94:	mov	x19, x0
  449d98:	mov	x7, x1
  449d9c:	str	x1, [sp, #144]
  449da0:	mov	x20, x2
  449da4:	mov	x23, x3
  449da8:	str	x4, [sp, #168]
  449dac:	str	x5, [sp, #120]
  449db0:	str	w6, [sp, #140]
  449db4:	ldr	x27, [x0, #152]
  449db8:	str	wzr, [sp, #236]
  449dbc:	ldr	x1, [x27]
  449dc0:	lsl	x0, x2, #4
  449dc4:	ldr	x0, [x1, x0]
  449dc8:	str	x0, [sp, #128]
  449dcc:	ldrsw	x22, [x19, #224]
  449dd0:	add	x22, x22, x5
  449dd4:	ldr	x21, [x7, #8]
  449dd8:	cmp	x22, x21
  449ddc:	b.ge	449eb0 <_obstack_memory_used@@Base+0x8d14>  // b.tcont
  449de0:	ldr	x0, [sp, #144]
  449de4:	ldr	x22, [x0]
  449de8:	cbz	x22, 44a2cc <_obstack_memory_used@@Base+0x9130>
  449dec:	ldr	x1, [x19, #184]
  449df0:	str	x1, [sp, #152]
  449df4:	ldr	x1, [x19, #72]
  449df8:	str	x1, [sp, #160]
  449dfc:	ldr	x21, [x0, #16]
  449e00:	str	x21, [x19, #184]
  449e04:	str	x22, [x19, #72]
  449e08:	str	x19, [sp, #104]
  449e0c:	ldr	w2, [x19, #160]
  449e10:	sub	x1, x22, #0x1
  449e14:	mov	x0, x19
  449e18:	bl	443888 <_obstack_memory_used@@Base+0x26ec>
  449e1c:	mov	w24, w0
  449e20:	cmp	x22, x23
  449e24:	b.eq	44a304 <_obstack_memory_used@@Base+0x9168>  // b.none
  449e28:	ldr	x21, [x21, x22, lsl #3]
  449e2c:	cbz	x21, 44a348 <_obstack_memory_used@@Base+0x91ac>
  449e30:	ldrb	w0, [x21, #104]
  449e34:	tbnz	w0, #6, 449f0c <_obstack_memory_used@@Base+0x8d70>
  449e38:	stp	xzr, xzr, [sp, #208]
  449e3c:	str	xzr, [sp, #224]
  449e40:	ldrb	w0, [x21, #104]
  449e44:	tbz	w0, #6, 449e94 <_obstack_memory_used@@Base+0x8cf8>
  449e48:	ldr	x0, [sp, #216]
  449e4c:	cbz	x0, 449e70 <_obstack_memory_used@@Base+0x8cd4>
  449e50:	ldr	w4, [sp, #140]
  449e54:	ldr	x3, [sp, #128]
  449e58:	mov	x2, x22
  449e5c:	add	x1, sp, #0xd0
  449e60:	mov	x0, x19
  449e64:	bl	449a90 <_obstack_memory_used@@Base+0x88f4>
  449e68:	str	w0, [sp, #236]
  449e6c:	cbnz	w0, 449f24 <_obstack_memory_used@@Base+0x8d88>
  449e70:	mov	w3, w24
  449e74:	add	x2, sp, #0xd0
  449e78:	mov	x1, x27
  449e7c:	add	x0, sp, #0xec
  449e80:	bl	444d04 <_obstack_memory_used@@Base+0x3b68>
  449e84:	mov	x21, x0
  449e88:	cbz	x0, 449f34 <_obstack_memory_used@@Base+0x8d98>
  449e8c:	ldr	x0, [x19, #184]
  449e90:	str	x21, [x0, x22, lsl #3]
  449e94:	ldr	x0, [sp, #120]
  449e98:	cmp	x22, x0
  449e9c:	b.ge	44a230 <_obstack_memory_used@@Base+0x9094>  // b.tcont
  449ea0:	stp	x25, x26, [sp, #64]
  449ea4:	add	x24, x22, #0x1
  449ea8:	str	xzr, [sp, #96]
  449eac:	b	44a104 <_obstack_memory_used@@Base+0x8f68>
  449eb0:	add	x22, x22, #0x1
  449eb4:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  449eb8:	sub	x0, x0, x21
  449ebc:	cmp	x0, x22
  449ec0:	b.lt	44a284 <_obstack_memory_used@@Base+0x90e8>  // b.tstop
  449ec4:	add	x24, x21, x22
  449ec8:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  449ecc:	cmp	x24, x0
  449ed0:	b.hi	44a28c <_obstack_memory_used@@Base+0x90f0>  // b.pmore
  449ed4:	stp	x25, x26, [sp, #64]
  449ed8:	lsl	x1, x24, #3
  449edc:	mov	x25, x7
  449ee0:	ldr	x0, [x7, #16]
  449ee4:	bl	404540 <realloc@plt>
  449ee8:	cbz	x0, 44a294 <_obstack_memory_used@@Base+0x90f8>
  449eec:	str	x0, [x25, #16]
  449ef0:	str	x24, [x25, #8]
  449ef4:	lsl	x2, x22, #3
  449ef8:	mov	w1, #0x0                   	// #0
  449efc:	add	x0, x0, x21, lsl #3
  449f00:	bl	404420 <memset@plt>
  449f04:	ldp	x25, x26, [sp, #64]
  449f08:	b	449de0 <_obstack_memory_used@@Base+0x8c44>
  449f0c:	add	x1, x21, #0x8
  449f10:	add	x0, sp, #0xd0
  449f14:	bl	442eb0 <_obstack_memory_used@@Base+0x1d14>
  449f18:	str	w0, [sp, #236]
  449f1c:	cbz	w0, 449e40 <_obstack_memory_used@@Base+0x8ca4>
  449f20:	b	449f5c <_obstack_memory_used@@Base+0x8dc0>
  449f24:	ldr	x0, [sp, #224]
  449f28:	bl	4047c0 <free@plt>
  449f2c:	ldr	w0, [sp, #236]
  449f30:	b	449f5c <_obstack_memory_used@@Base+0x8dc0>
  449f34:	ldr	w0, [sp, #236]
  449f38:	cbz	w0, 449e8c <_obstack_memory_used@@Base+0x8cf0>
  449f3c:	ldr	x0, [sp, #224]
  449f40:	bl	4047c0 <free@plt>
  449f44:	ldr	w0, [sp, #236]
  449f48:	b	449f5c <_obstack_memory_used@@Base+0x8dc0>
  449f4c:	ldr	x0, [sp, #224]
  449f50:	bl	4047c0 <free@plt>
  449f54:	ldr	w0, [sp, #236]
  449f58:	ldp	x25, x26, [sp, #64]
  449f5c:	ldp	x19, x20, [sp, #16]
  449f60:	ldp	x21, x22, [sp, #32]
  449f64:	ldp	x23, x24, [sp, #48]
  449f68:	ldp	x27, x28, [sp, #80]
  449f6c:	ldp	x29, x30, [sp], #240
  449f70:	ret
  449f74:	mov	x3, x22
  449f78:	ldr	x2, [sp, #104]
  449f7c:	mov	x1, x25
  449f80:	mov	x0, x23
  449f84:	bl	4463c0 <_obstack_memory_used@@Base+0x5224>
  449f88:	cmp	w0, #0x1
  449f8c:	b.le	44a190 <_obstack_memory_used@@Base+0x8ff4>
  449f90:	ldr	x1, [x23, #24]
  449f94:	ldr	x28, [x1, x25, lsl #3]
  449f98:	add	x20, x22, w0, sxtw
  449f9c:	ldr	x0, [x19, #184]
  449fa0:	ldr	x1, [x0, x20, lsl #3]
  449fa4:	str	xzr, [sp, #192]
  449fa8:	cbz	x1, 449fc0 <_obstack_memory_used@@Base+0x8e24>
  449fac:	add	x1, x1, #0x8
  449fb0:	add	x0, sp, #0xb8
  449fb4:	bl	442b48 <_obstack_memory_used@@Base+0x19ac>
  449fb8:	str	w0, [sp, #180]
  449fbc:	cbnz	w0, 44a05c <_obstack_memory_used@@Base+0x8ec0>
  449fc0:	mov	x1, x28
  449fc4:	add	x0, sp, #0xb8
  449fc8:	bl	442408 <_obstack_memory_used@@Base+0x126c>
  449fcc:	and	w0, w0, #0xff
  449fd0:	cbz	w0, 44a16c <_obstack_memory_used@@Base+0x8fd0>
  449fd4:	ldr	x28, [x19, #184]
  449fd8:	add	x2, sp, #0xb8
  449fdc:	mov	x1, x23
  449fe0:	add	x0, sp, #0xb4
  449fe4:	bl	449874 <_obstack_memory_used@@Base+0x86d8>
  449fe8:	str	x0, [x28, x20, lsl #3]
  449fec:	ldr	x0, [x19, #184]
  449ff0:	ldr	x0, [x0, x20, lsl #3]
  449ff4:	cbz	x0, 44a178 <_obstack_memory_used@@Base+0x8fdc>
  449ff8:	ldr	x0, [x23, #24]
  449ffc:	ldr	x1, [x0, x25, lsl #3]
  44a000:	add	x0, sp, #0xd0
  44a004:	bl	442408 <_obstack_memory_used@@Base+0x126c>
  44a008:	and	w0, w0, #0xff
  44a00c:	cbz	w0, 44a198 <_obstack_memory_used@@Base+0x8ffc>
  44a010:	add	x26, x26, #0x1
  44a014:	ldr	x0, [x21, #40]
  44a018:	cmp	x26, x0
  44a01c:	b.ge	44a1bc <_obstack_memory_used@@Base+0x9020>  // b.tcont
  44a020:	ldr	x0, [x21, #48]
  44a024:	ldr	x25, [x0, x26, lsl #3]
  44a028:	lsl	x28, x25, #4
  44a02c:	ldr	x0, [x23]
  44a030:	add	x0, x0, x28
  44a034:	ldrb	w0, [x0, #10]
  44a038:	tbnz	w0, #4, 449f74 <_obstack_memory_used@@Base+0x8dd8>
  44a03c:	ldr	x1, [x23]
  44a040:	mov	x2, x22
  44a044:	add	x1, x1, x28
  44a048:	mov	x0, x19
  44a04c:	bl	443984 <_obstack_memory_used@@Base+0x27e8>
  44a050:	and	w0, w0, #0xff
  44a054:	cbz	w0, 44a010 <_obstack_memory_used@@Base+0x8e74>
  44a058:	b	449ff8 <_obstack_memory_used@@Base+0x8e5c>
  44a05c:	ldr	x0, [sp, #200]
  44a060:	bl	4047c0 <free@plt>
  44a064:	ldr	w0, [sp, #180]
  44a068:	str	w0, [sp, #236]
  44a06c:	cbnz	w0, 44a1a8 <_obstack_memory_used@@Base+0x900c>
  44a070:	mov	x20, x24
  44a074:	ldr	x0, [sp, #216]
  44a078:	cbz	x0, 44a0b8 <_obstack_memory_used@@Base+0x8f1c>
  44a07c:	ldr	w3, [sp, #140]
  44a080:	ldr	x2, [sp, #128]
  44a084:	add	x1, sp, #0xd0
  44a088:	mov	x0, x27
  44a08c:	bl	4451e0 <_obstack_memory_used@@Base+0x4044>
  44a090:	str	w0, [sp, #236]
  44a094:	cbnz	w0, 44a1cc <_obstack_memory_used@@Base+0x9030>
  44a098:	ldr	w4, [sp, #140]
  44a09c:	ldr	x3, [sp, #128]
  44a0a0:	mov	x2, x24
  44a0a4:	add	x1, sp, #0xd0
  44a0a8:	mov	x0, x19
  44a0ac:	bl	449a90 <_obstack_memory_used@@Base+0x88f4>
  44a0b0:	str	w0, [sp, #236]
  44a0b4:	cbnz	w0, 44a1e0 <_obstack_memory_used@@Base+0x9044>
  44a0b8:	ldr	w2, [x19, #160]
  44a0bc:	mov	x1, x22
  44a0c0:	ldr	x0, [sp, #104]
  44a0c4:	bl	443888 <_obstack_memory_used@@Base+0x26ec>
  44a0c8:	mov	w3, w0
  44a0cc:	add	x2, sp, #0xd0
  44a0d0:	mov	x1, x27
  44a0d4:	add	x0, sp, #0xec
  44a0d8:	bl	444d04 <_obstack_memory_used@@Base+0x3b68>
  44a0dc:	mov	x21, x0
  44a0e0:	cbz	x0, 44a1f4 <_obstack_memory_used@@Base+0x9058>
  44a0e4:	ldr	x0, [x19, #184]
  44a0e8:	ldr	x1, [sp, #112]
  44a0ec:	str	x21, [x0, x1]
  44a0f0:	str	xzr, [sp, #96]
  44a0f4:	add	x24, x24, #0x1
  44a0f8:	ldr	x0, [sp, #120]
  44a0fc:	cmp	x0, x20
  44a100:	b.le	44a278 <_obstack_memory_used@@Base+0x90dc>
  44a104:	sub	x22, x24, #0x1
  44a108:	ldrsw	x0, [x19, #224]
  44a10c:	ldr	x1, [sp, #96]
  44a110:	cmp	x1, x0
  44a114:	b.gt	44a22c <_obstack_memory_used@@Base+0x9090>
  44a118:	str	xzr, [sp, #216]
  44a11c:	lsl	x0, x24, #3
  44a120:	str	x0, [sp, #112]
  44a124:	ldr	x0, [x19, #184]
  44a128:	ldr	x1, [x0, x24, lsl #3]
  44a12c:	cbz	x1, 44a2c0 <_obstack_memory_used@@Base+0x9124>
  44a130:	add	x1, x1, #0x8
  44a134:	add	x0, sp, #0xd0
  44a138:	bl	442b48 <_obstack_memory_used@@Base+0x19ac>
  44a13c:	str	w0, [sp, #236]
  44a140:	cbnz	w0, 449f4c <_obstack_memory_used@@Base+0x8db0>
  44a144:	cbz	x21, 44a070 <_obstack_memory_used@@Base+0x8ed4>
  44a148:	ldr	x23, [x19, #152]
  44a14c:	str	wzr, [sp, #180]
  44a150:	stp	xzr, xzr, [sp, #184]
  44a154:	str	xzr, [sp, #200]
  44a158:	ldr	x0, [x21, #40]
  44a15c:	cmp	x0, #0x0
  44a160:	b.le	44a1bc <_obstack_memory_used@@Base+0x9020>
  44a164:	mov	x26, #0x0                   	// #0
  44a168:	b	44a020 <_obstack_memory_used@@Base+0x8e84>
  44a16c:	ldr	x0, [sp, #200]
  44a170:	bl	4047c0 <free@plt>
  44a174:	b	44a1a0 <_obstack_memory_used@@Base+0x9004>
  44a178:	ldr	w0, [sp, #180]
  44a17c:	cbz	w0, 449ff8 <_obstack_memory_used@@Base+0x8e5c>
  44a180:	ldr	x0, [sp, #200]
  44a184:	bl	4047c0 <free@plt>
  44a188:	ldr	w0, [sp, #180]
  44a18c:	b	44a068 <_obstack_memory_used@@Base+0x8ecc>
  44a190:	cbz	w0, 44a03c <_obstack_memory_used@@Base+0x8ea0>
  44a194:	b	449ff8 <_obstack_memory_used@@Base+0x8e5c>
  44a198:	ldr	x0, [sp, #200]
  44a19c:	bl	4047c0 <free@plt>
  44a1a0:	mov	w0, #0xc                   	// #12
  44a1a4:	str	w0, [sp, #236]
  44a1a8:	ldr	x0, [sp, #224]
  44a1ac:	bl	4047c0 <free@plt>
  44a1b0:	ldr	w0, [sp, #236]
  44a1b4:	ldp	x25, x26, [sp, #64]
  44a1b8:	b	449f5c <_obstack_memory_used@@Base+0x8dc0>
  44a1bc:	ldr	x0, [sp, #200]
  44a1c0:	bl	4047c0 <free@plt>
  44a1c4:	str	wzr, [sp, #236]
  44a1c8:	b	44a070 <_obstack_memory_used@@Base+0x8ed4>
  44a1cc:	ldr	x0, [sp, #224]
  44a1d0:	bl	4047c0 <free@plt>
  44a1d4:	ldr	w0, [sp, #236]
  44a1d8:	ldp	x25, x26, [sp, #64]
  44a1dc:	b	449f5c <_obstack_memory_used@@Base+0x8dc0>
  44a1e0:	ldr	x0, [sp, #224]
  44a1e4:	bl	4047c0 <free@plt>
  44a1e8:	ldr	w0, [sp, #236]
  44a1ec:	ldp	x25, x26, [sp, #64]
  44a1f0:	b	449f5c <_obstack_memory_used@@Base+0x8dc0>
  44a1f4:	ldr	w0, [sp, #236]
  44a1f8:	cbnz	w0, 44a218 <_obstack_memory_used@@Base+0x907c>
  44a1fc:	ldr	x0, [x19, #184]
  44a200:	ldr	x1, [sp, #112]
  44a204:	str	xzr, [x0, x1]
  44a208:	ldr	x0, [sp, #96]
  44a20c:	add	x0, x0, #0x1
  44a210:	str	x0, [sp, #96]
  44a214:	b	44a0f4 <_obstack_memory_used@@Base+0x8f58>
  44a218:	ldr	x0, [sp, #224]
  44a21c:	bl	4047c0 <free@plt>
  44a220:	ldr	w0, [sp, #236]
  44a224:	ldp	x25, x26, [sp, #64]
  44a228:	b	449f5c <_obstack_memory_used@@Base+0x8dc0>
  44a22c:	ldp	x25, x26, [sp, #64]
  44a230:	ldr	x0, [sp, #224]
  44a234:	bl	4047c0 <free@plt>
  44a238:	ldr	x0, [x19, #184]
  44a23c:	ldr	x1, [sp, #120]
  44a240:	ldr	x0, [x0, x1, lsl #3]
  44a244:	cbz	x0, 44a2a0 <_obstack_memory_used@@Base+0x9104>
  44a248:	ldr	x1, [sp, #144]
  44a24c:	str	x22, [x1]
  44a250:	ldr	x1, [sp, #152]
  44a254:	str	x1, [x19, #184]
  44a258:	ldr	x1, [sp, #160]
  44a25c:	str	x1, [x19, #72]
  44a260:	ldr	x1, [sp, #168]
  44a264:	add	x0, x0, #0x8
  44a268:	bl	441424 <_obstack_memory_used@@Base+0x288>
  44a26c:	cmp	x0, #0x0
  44a270:	cset	w0, eq  // eq = none
  44a274:	b	449f5c <_obstack_memory_used@@Base+0x8dc0>
  44a278:	mov	x22, x20
  44a27c:	ldp	x25, x26, [sp, #64]
  44a280:	b	44a230 <_obstack_memory_used@@Base+0x9094>
  44a284:	mov	w0, #0xc                   	// #12
  44a288:	b	449f5c <_obstack_memory_used@@Base+0x8dc0>
  44a28c:	mov	w0, #0xc                   	// #12
  44a290:	b	449f5c <_obstack_memory_used@@Base+0x8dc0>
  44a294:	mov	w0, #0xc                   	// #12
  44a298:	ldp	x25, x26, [sp, #64]
  44a29c:	b	449f5c <_obstack_memory_used@@Base+0x8dc0>
  44a2a0:	ldr	x0, [sp, #144]
  44a2a4:	str	x22, [x0]
  44a2a8:	ldr	x0, [sp, #152]
  44a2ac:	str	x0, [x19, #184]
  44a2b0:	ldr	x0, [sp, #160]
  44a2b4:	str	x0, [x19, #72]
  44a2b8:	mov	w0, #0x1                   	// #1
  44a2bc:	b	449f5c <_obstack_memory_used@@Base+0x8dc0>
  44a2c0:	cbnz	x21, 44a148 <_obstack_memory_used@@Base+0x8fac>
  44a2c4:	mov	x20, x24
  44a2c8:	b	44a0b8 <_obstack_memory_used@@Base+0x8f1c>
  44a2cc:	ldr	x0, [x19, #184]
  44a2d0:	str	x0, [sp, #152]
  44a2d4:	ldr	x0, [x19, #72]
  44a2d8:	str	x0, [sp, #160]
  44a2dc:	ldr	x0, [sp, #144]
  44a2e0:	ldr	x0, [x0, #16]
  44a2e4:	str	x0, [x19, #184]
  44a2e8:	str	x23, [x19, #72]
  44a2ec:	str	x19, [sp, #104]
  44a2f0:	ldr	w2, [x19, #160]
  44a2f4:	sub	x1, x23, #0x1
  44a2f8:	mov	x0, x19
  44a2fc:	bl	443888 <_obstack_memory_used@@Base+0x26ec>
  44a300:	mov	w24, w0
  44a304:	mov	x1, x20
  44a308:	add	x0, sp, #0xd0
  44a30c:	bl	4423b4 <_obstack_memory_used@@Base+0x1218>
  44a310:	str	w0, [sp, #236]
  44a314:	cbnz	w0, 449f5c <_obstack_memory_used@@Base+0x8dc0>
  44a318:	ldr	w3, [sp, #140]
  44a31c:	ldr	x2, [sp, #128]
  44a320:	add	x1, sp, #0xd0
  44a324:	mov	x0, x27
  44a328:	bl	4451e0 <_obstack_memory_used@@Base+0x4044>
  44a32c:	str	w0, [sp, #236]
  44a330:	mov	x22, x23
  44a334:	cbz	w0, 449e48 <_obstack_memory_used@@Base+0x8cac>
  44a338:	ldr	x0, [sp, #224]
  44a33c:	bl	4047c0 <free@plt>
  44a340:	ldr	w0, [sp, #236]
  44a344:	b	449f5c <_obstack_memory_used@@Base+0x8dc0>
  44a348:	stp	xzr, xzr, [sp, #208]
  44a34c:	str	xzr, [sp, #224]
  44a350:	b	449e94 <_obstack_memory_used@@Base+0x8cf8>
  44a354:	stp	x29, x30, [sp, #-80]!
  44a358:	mov	x29, sp
  44a35c:	stp	x19, x20, [sp, #16]
  44a360:	stp	x21, x22, [sp, #32]
  44a364:	stp	x23, x24, [sp, #48]
  44a368:	mov	x19, x0
  44a36c:	mov	x23, x1
  44a370:	mov	x22, x2
  44a374:	mov	x21, x3
  44a378:	mov	x20, x4
  44a37c:	mov	x1, x2
  44a380:	mov	w6, #0x8                   	// #8
  44a384:	mov	x5, x4
  44a388:	mov	x4, x3
  44a38c:	ldr	x3, [x2, #8]
  44a390:	ldr	x2, [x1], #16
  44a394:	bl	449d7c <_obstack_memory_used@@Base+0x8be0>
  44a398:	cbz	w0, 44a3b0 <_obstack_memory_used@@Base+0x9214>
  44a39c:	ldp	x19, x20, [sp, #16]
  44a3a0:	ldp	x21, x22, [sp, #32]
  44a3a4:	ldp	x23, x24, [sp, #48]
  44a3a8:	ldp	x29, x30, [sp], #80
  44a3ac:	ret
  44a3b0:	str	x25, [sp, #64]
  44a3b4:	ldr	x25, [x23]
  44a3b8:	ldr	x24, [x22, #8]
  44a3bc:	ldr	x1, [x19, #208]
  44a3c0:	ldr	x0, [x19, #200]
  44a3c4:	cmp	x0, x1
  44a3c8:	b.ge	44a4b4 <_obstack_memory_used@@Base+0x9318>  // b.tcont
  44a3cc:	ldr	x0, [x19, #200]
  44a3d0:	cmp	x0, #0x0
  44a3d4:	b.le	44a3f8 <_obstack_memory_used@@Base+0x925c>
  44a3d8:	add	x0, x0, x0, lsl #2
  44a3dc:	lsl	x0, x0, #3
  44a3e0:	sub	x0, x0, #0x28
  44a3e4:	ldr	x1, [x19, #216]
  44a3e8:	add	x0, x1, x0
  44a3ec:	ldr	x1, [x0, #8]
  44a3f0:	cmp	x20, x1
  44a3f4:	b.eq	44a510 <_obstack_memory_used@@Base+0x9374>  // b.none
  44a3f8:	ldr	x0, [x19, #200]
  44a3fc:	ldr	x1, [x19, #216]
  44a400:	add	x0, x0, x0, lsl #2
  44a404:	str	x21, [x1, x0, lsl #3]
  44a408:	ldr	x0, [x19, #200]
  44a40c:	ldr	x1, [x19, #216]
  44a410:	add	x0, x0, x0, lsl #2
  44a414:	add	x0, x1, x0, lsl #3
  44a418:	str	x20, [x0, #8]
  44a41c:	ldr	x0, [x19, #200]
  44a420:	ldr	x1, [x19, #216]
  44a424:	add	x0, x0, x0, lsl #2
  44a428:	add	x0, x1, x0, lsl #3
  44a42c:	str	x25, [x0, #16]
  44a430:	ldr	x0, [x19, #200]
  44a434:	ldr	x1, [x19, #216]
  44a438:	add	x0, x0, x0, lsl #2
  44a43c:	add	x0, x1, x0, lsl #3
  44a440:	str	x24, [x0, #24]
  44a444:	ldr	x0, [x19, #200]
  44a448:	ldr	x1, [x19, #216]
  44a44c:	add	x0, x0, x0, lsl #2
  44a450:	add	x0, x1, x0, lsl #3
  44a454:	cmp	x25, x24
  44a458:	csetm	w1, eq  // eq = none
  44a45c:	strh	w1, [x0, #34]
  44a460:	ldr	x1, [x19, #216]
  44a464:	ldr	x0, [x19, #200]
  44a468:	add	x2, x0, #0x1
  44a46c:	str	x2, [x19, #200]
  44a470:	add	x0, x0, x0, lsl #2
  44a474:	add	x0, x1, x0, lsl #3
  44a478:	strb	wzr, [x0, #32]
  44a47c:	ldrsw	x1, [x19, #224]
  44a480:	sub	x0, x24, x25
  44a484:	cmp	x1, x0
  44a488:	b.ge	44a494 <_obstack_memory_used@@Base+0x92f8>  // b.tcont
  44a48c:	sub	w24, w24, w25
  44a490:	str	w24, [x19, #224]
  44a494:	ldr	x1, [x22, #8]
  44a498:	add	x20, x20, x1
  44a49c:	ldr	x1, [x23]
  44a4a0:	sub	x1, x20, x1
  44a4a4:	mov	x0, x19
  44a4a8:	bl	4437e8 <_obstack_memory_used@@Base+0x264c>
  44a4ac:	ldr	x25, [sp, #64]
  44a4b0:	b	44a39c <_obstack_memory_used@@Base+0x9200>
  44a4b4:	add	x1, x1, x1, lsl #2
  44a4b8:	lsl	x1, x1, #4
  44a4bc:	ldr	x0, [x19, #216]
  44a4c0:	bl	404540 <realloc@plt>
  44a4c4:	cbz	x0, 44a4fc <_obstack_memory_used@@Base+0x9360>
  44a4c8:	str	x0, [x19, #216]
  44a4cc:	ldr	x2, [x19, #208]
  44a4d0:	add	x2, x2, x2, lsl #2
  44a4d4:	ldr	x1, [x19, #200]
  44a4d8:	add	x3, x1, x1, lsl #2
  44a4dc:	lsl	x2, x2, #3
  44a4e0:	mov	w1, #0x0                   	// #0
  44a4e4:	add	x0, x0, x3, lsl #3
  44a4e8:	bl	404420 <memset@plt>
  44a4ec:	ldr	x0, [x19, #208]
  44a4f0:	lsl	x0, x0, #1
  44a4f4:	str	x0, [x19, #208]
  44a4f8:	b	44a3cc <_obstack_memory_used@@Base+0x9230>
  44a4fc:	ldr	x0, [x19, #216]
  44a500:	bl	4047c0 <free@plt>
  44a504:	mov	w0, #0xc                   	// #12
  44a508:	ldr	x25, [sp, #64]
  44a50c:	b	44a39c <_obstack_memory_used@@Base+0x9200>
  44a510:	mov	w1, #0x1                   	// #1
  44a514:	strb	w1, [x0, #32]
  44a518:	b	44a3f8 <_obstack_memory_used@@Base+0x925c>
  44a51c:	stp	x29, x30, [sp, #-208]!
  44a520:	mov	x29, sp
  44a524:	stp	x19, x20, [sp, #16]
  44a528:	stp	x27, x28, [sp, #80]
  44a52c:	mov	x19, x0
  44a530:	mov	x28, x1
  44a534:	ldr	x27, [x0, #152]
  44a538:	ldr	x0, [x0, #72]
  44a53c:	mov	x1, x0
  44a540:	str	x0, [sp, #104]
  44a544:	ldr	x0, [x28, #8]
  44a548:	cmp	x0, #0x0
  44a54c:	b.le	44ab98 <_obstack_memory_used@@Base+0x99fc>
  44a550:	stp	x21, x22, [sp, #32]
  44a554:	stp	x23, x24, [sp, #48]
  44a558:	stp	x25, x26, [sp, #64]
  44a55c:	lsl	x0, x1, #3
  44a560:	str	x0, [sp, #128]
  44a564:	str	xzr, [sp, #96]
  44a568:	b	44a5a0 <_obstack_memory_used@@Base+0x9404>
  44a56c:	tbz	w1, #3, 44a574 <_obstack_memory_used@@Base+0x93d8>
  44a570:	tbnz	w0, #0, 44a584 <_obstack_memory_used@@Base+0x93e8>
  44a574:	tbz	w1, #5, 44a57c <_obstack_memory_used@@Base+0x93e0>
  44a578:	tbz	w0, #1, 44a584 <_obstack_memory_used@@Base+0x93e8>
  44a57c:	tbz	w1, #7, 44a5f8 <_obstack_memory_used@@Base+0x945c>
  44a580:	tbnz	w0, #3, 44a5f8 <_obstack_memory_used@@Base+0x945c>
  44a584:	ldr	x0, [sp, #96]
  44a588:	add	x0, x0, #0x1
  44a58c:	mov	x1, x0
  44a590:	str	x0, [sp, #96]
  44a594:	ldr	x0, [x28, #8]
  44a598:	cmp	x0, x1
  44a59c:	b.le	44ab8c <_obstack_memory_used@@Base+0x99f0>
  44a5a0:	ldr	x0, [x28, #16]
  44a5a4:	ldr	x1, [sp, #96]
  44a5a8:	ldr	x21, [x0, x1, lsl #3]
  44a5ac:	lsl	x22, x21, #4
  44a5b0:	ldr	x20, [x27]
  44a5b4:	add	x20, x20, x22
  44a5b8:	ldrb	w0, [x20, #8]
  44a5bc:	cmp	w0, #0x4
  44a5c0:	b.ne	44a584 <_obstack_memory_used@@Base+0x93e8>  // b.any
  44a5c4:	ldr	w0, [x20, #8]
  44a5c8:	tst	w0, #0x3ff00
  44a5cc:	b.eq	44a5f8 <_obstack_memory_used@@Base+0x945c>  // b.none
  44a5d0:	ldr	w2, [x19, #160]
  44a5d4:	ldr	x1, [sp, #104]
  44a5d8:	mov	x0, x19
  44a5dc:	bl	443888 <_obstack_memory_used@@Base+0x26ec>
  44a5e0:	ldr	w2, [x20, #8]
  44a5e4:	ubfx	x1, x2, #8, #10
  44a5e8:	tbz	w2, #10, 44a56c <_obstack_memory_used@@Base+0x93d0>
  44a5ec:	tbz	w0, #0, 44a584 <_obstack_memory_used@@Base+0x93e8>
  44a5f0:	tbz	w1, #3, 44a574 <_obstack_memory_used@@Base+0x93d8>
  44a5f4:	b	44a584 <_obstack_memory_used@@Base+0x93e8>
  44a5f8:	ldr	x20, [x19, #200]
  44a5fc:	ldr	x1, [sp, #104]
  44a600:	mov	x0, x19
  44a604:	bl	441a1c <_obstack_memory_used@@Base+0x880>
  44a608:	cmn	x0, #0x1
  44a60c:	b.eq	44a634 <_obstack_memory_used@@Base+0x9498>  // b.none
  44a610:	add	x0, x0, x0, lsl #2
  44a614:	ldr	x1, [x19, #216]
  44a618:	add	x0, x1, x0, lsl #3
  44a61c:	ldr	x1, [x0]
  44a620:	cmp	x21, x1
  44a624:	b.eq	44a96c <_obstack_memory_used@@Base+0x97d0>  // b.none
  44a628:	add	x0, x0, #0x28
  44a62c:	ldurb	w1, [x0, #-8]
  44a630:	cbnz	w1, 44a61c <_obstack_memory_used@@Base+0x9480>
  44a634:	ldr	x0, [x19, #152]
  44a638:	str	x0, [sp, #112]
  44a63c:	ldr	x0, [x0]
  44a640:	ldr	x0, [x0, x22]
  44a644:	str	x0, [sp, #120]
  44a648:	ldr	x0, [x19, #232]
  44a64c:	cmp	x0, #0x0
  44a650:	b.le	44a96c <_obstack_memory_used@@Base+0x97d0>
  44a654:	ldr	x0, [x19, #8]
  44a658:	mov	x1, #0x0                   	// #0
  44a65c:	str	x27, [sp, #152]
  44a660:	str	x21, [sp, #136]
  44a664:	str	x20, [sp, #160]
  44a668:	mov	x27, x0
  44a66c:	str	x28, [sp, #168]
  44a670:	mov	x28, x1
  44a674:	b	44a758 <_obstack_memory_used@@Base+0x95bc>
  44a678:	mov	x2, x21
  44a67c:	add	x1, x27, x26
  44a680:	add	x0, x27, x24
  44a684:	bl	4046e0 <memcmp@plt>
  44a688:	cbnz	w0, 44a738 <_obstack_memory_used@@Base+0x959c>
  44a68c:	add	x24, x24, x21
  44a690:	ldr	x4, [sp, #104]
  44a694:	mov	x3, x28
  44a698:	mov	x2, x25
  44a69c:	mov	x1, x20
  44a6a0:	mov	x0, x19
  44a6a4:	bl	44a354 <_obstack_memory_used@@Base+0x91b8>
  44a6a8:	ldr	x27, [x19, #8]
  44a6ac:	cmp	w0, #0x1
  44a6b0:	b.hi	44abc8 <_obstack_memory_used@@Base+0x9a2c>  // b.pmore
  44a6b4:	add	x22, x22, #0x1
  44a6b8:	ldr	x0, [x20, #32]
  44a6bc:	cmp	x22, x0
  44a6c0:	b.ge	44a710 <_obstack_memory_used@@Base+0x9574>  // b.tcont
  44a6c4:	ldr	x0, [x20, #40]
  44a6c8:	ldr	x25, [x0, x22, lsl #3]
  44a6cc:	mov	x26, x23
  44a6d0:	ldr	x23, [x25, #8]
  44a6d4:	sub	x21, x23, x26
  44a6d8:	cmp	x21, #0x0
  44a6dc:	b.le	44a68c <_obstack_memory_used@@Base+0x94f0>
  44a6e0:	add	x1, x21, x24
  44a6e4:	ldr	x0, [x19, #48]
  44a6e8:	cmp	x1, x0
  44a6ec:	b.le	44a678 <_obstack_memory_used@@Base+0x94dc>
  44a6f0:	ldr	x0, [x19, #88]
  44a6f4:	cmp	x1, x0
  44a6f8:	b.gt	44a738 <_obstack_memory_used@@Base+0x959c>
  44a6fc:	mov	x0, x19
  44a700:	bl	4437e8 <_obstack_memory_used@@Base+0x264c>
  44a704:	cbnz	w0, 44abb4 <_obstack_memory_used@@Base+0x9a18>
  44a708:	ldr	x27, [x19, #8]
  44a70c:	b	44a678 <_obstack_memory_used@@Base+0x94dc>
  44a710:	ldr	x28, [sp, #144]
  44a714:	cmp	x22, #0x0
  44a718:	cinc	x23, x23, gt
  44a71c:	ldr	x0, [sp, #104]
  44a720:	cmp	x0, x23
  44a724:	b.lt	44a748 <_obstack_memory_used@@Base+0x95ac>  // b.tstop
  44a728:	mov	x25, x0
  44a72c:	ldr	x26, [sp, #112]
  44a730:	ldr	x22, [sp, #120]
  44a734:	b	44a8b4 <_obstack_memory_used@@Base+0x9718>
  44a738:	ldr	x28, [sp, #144]
  44a73c:	ldr	x0, [x20, #32]
  44a740:	cmp	x0, x22
  44a744:	b.le	44a7a4 <_obstack_memory_used@@Base+0x9608>
  44a748:	add	x28, x28, #0x1
  44a74c:	ldr	x0, [x19, #232]
  44a750:	cmp	x28, x0
  44a754:	b.ge	44a95c <_obstack_memory_used@@Base+0x97c0>  // b.tcont
  44a758:	ldr	x0, [x19, #248]
  44a75c:	ldr	x20, [x0, x28, lsl #3]
  44a760:	ldr	x0, [x20, #8]
  44a764:	ldr	x1, [sp, #112]
  44a768:	ldr	x1, [x1]
  44a76c:	lsl	x0, x0, #4
  44a770:	ldr	x0, [x1, x0]
  44a774:	ldr	x1, [sp, #120]
  44a778:	cmp	x1, x0
  44a77c:	b.ne	44a748 <_obstack_memory_used@@Base+0x95ac>  // b.any
  44a780:	ldr	x23, [x20]
  44a784:	ldr	x0, [x20, #32]
  44a788:	cmp	x0, #0x0
  44a78c:	b.le	44a7ac <_obstack_memory_used@@Base+0x9610>
  44a790:	ldr	x24, [sp, #104]
  44a794:	mov	x22, #0x0                   	// #0
  44a798:	str	x28, [sp, #144]
  44a79c:	ldr	x28, [sp, #136]
  44a7a0:	b	44a6c4 <_obstack_memory_used@@Base+0x9528>
  44a7a4:	mov	x23, x26
  44a7a8:	b	44a714 <_obstack_memory_used@@Base+0x9578>
  44a7ac:	ldr	x24, [sp, #104]
  44a7b0:	b	44a71c <_obstack_memory_used@@Base+0x9580>
  44a7b4:	ldr	x0, [x19, #88]
  44a7b8:	cmp	x0, x24
  44a7bc:	b.le	44a748 <_obstack_memory_used@@Base+0x95ac>
  44a7c0:	add	w1, w24, #0x1
  44a7c4:	mov	x0, x19
  44a7c8:	bl	443704 <_obstack_memory_used@@Base+0x2568>
  44a7cc:	cbnz	w0, 44abb4 <_obstack_memory_used@@Base+0x9a18>
  44a7d0:	ldr	x27, [x19, #8]
  44a7d4:	b	44a8d0 <_obstack_memory_used@@Base+0x9734>
  44a7d8:	add	x0, x0, #0x1
  44a7dc:	cmp	x4, x0
  44a7e0:	b.eq	44a8a8 <_obstack_memory_used@@Base+0x970c>  // b.none
  44a7e4:	ldr	x21, [x5, x0, lsl #3]
  44a7e8:	lsl	x1, x21, #4
  44a7ec:	add	x2, x3, x1
  44a7f0:	ldrb	w2, [x2, #8]
  44a7f4:	cmp	w2, #0x9
  44a7f8:	b.ne	44a7d8 <_obstack_memory_used@@Base+0x963c>  // b.any
  44a7fc:	ldr	x1, [x3, x1]
  44a800:	cmp	x22, x1
  44a804:	b.ne	44a7d8 <_obstack_memory_used@@Base+0x963c>  // b.any
  44a808:	cmn	x21, #0x1
  44a80c:	b.eq	44a8a8 <_obstack_memory_used@@Base+0x970c>  // b.none
  44a810:	ldr	x0, [x20, #16]
  44a814:	cbz	x0, 44a914 <_obstack_memory_used@@Base+0x9778>
  44a818:	mov	w6, #0x9                   	// #9
  44a81c:	mov	x5, x23
  44a820:	mov	x4, x21
  44a824:	ldr	x3, [x20]
  44a828:	ldr	x2, [x20, #8]
  44a82c:	ldr	x1, [x20, #16]
  44a830:	mov	x0, x19
  44a834:	bl	449d7c <_obstack_memory_used@@Base+0x8be0>
  44a838:	cmp	w0, #0x1
  44a83c:	b.eq	44a8a8 <_obstack_memory_used@@Base+0x970c>  // b.none
  44a840:	cbnz	w0, 44abb4 <_obstack_memory_used@@Base+0x9a18>
  44a844:	ldr	x0, [x20, #24]
  44a848:	ldr	x1, [x20, #32]
  44a84c:	cmp	x1, x0
  44a850:	b.eq	44a938 <_obstack_memory_used@@Base+0x979c>  // b.none
  44a854:	mov	x1, #0x28                  	// #40
  44a858:	mov	x0, #0x1                   	// #1
  44a85c:	bl	4044d0 <calloc@plt>
  44a860:	mov	x2, x0
  44a864:	cbz	x0, 44abb0 <_obstack_memory_used@@Base+0x9a14>
  44a868:	ldr	x1, [x20, #32]
  44a86c:	ldr	x0, [x20, #40]
  44a870:	str	x2, [x0, x1, lsl #3]
  44a874:	str	x21, [x2]
  44a878:	str	x23, [x2, #8]
  44a87c:	ldr	x0, [x20, #32]
  44a880:	add	x0, x0, #0x1
  44a884:	str	x0, [x20, #32]
  44a888:	mov	x4, x25
  44a88c:	ldr	x3, [sp, #136]
  44a890:	mov	x1, x20
  44a894:	mov	x0, x19
  44a898:	bl	44a354 <_obstack_memory_used@@Base+0x91b8>
  44a89c:	ldr	x27, [x19, #8]
  44a8a0:	cmp	w0, #0x1
  44a8a4:	b.hi	44abc8 <_obstack_memory_used@@Base+0x9a2c>  // b.pmore
  44a8a8:	add	x23, x23, #0x1
  44a8ac:	cmp	x25, x23
  44a8b0:	b.lt	44a748 <_obstack_memory_used@@Base+0x95ac>  // b.tstop
  44a8b4:	ldr	x0, [x20]
  44a8b8:	sub	x0, x23, x0
  44a8bc:	cmp	x0, #0x0
  44a8c0:	b.le	44a8ec <_obstack_memory_used@@Base+0x9750>
  44a8c4:	ldr	x0, [x19, #48]
  44a8c8:	cmp	x0, x24
  44a8cc:	b.le	44a7b4 <_obstack_memory_used@@Base+0x9618>
  44a8d0:	add	x1, x24, #0x1
  44a8d4:	add	x0, x27, x23
  44a8d8:	ldrb	w2, [x27, x24]
  44a8dc:	ldurb	w0, [x0, #-1]
  44a8e0:	cmp	w2, w0
  44a8e4:	b.ne	44a748 <_obstack_memory_used@@Base+0x95ac>  // b.any
  44a8e8:	mov	x24, x1
  44a8ec:	ldr	x0, [x19, #184]
  44a8f0:	ldr	x0, [x0, x23, lsl #3]
  44a8f4:	cbz	x0, 44a8a8 <_obstack_memory_used@@Base+0x970c>
  44a8f8:	ldr	x4, [x0, #16]
  44a8fc:	cmp	x4, #0x0
  44a900:	b.le	44a8a8 <_obstack_memory_used@@Base+0x970c>
  44a904:	ldr	x5, [x0, #24]
  44a908:	ldr	x3, [x26]
  44a90c:	mov	x0, #0x0                   	// #0
  44a910:	b	44a7e4 <_obstack_memory_used@@Base+0x9648>
  44a914:	ldr	x1, [x20]
  44a918:	sub	x1, x23, x1
  44a91c:	add	x1, x1, #0x1
  44a920:	mov	x0, #0x18                  	// #24
  44a924:	bl	4044d0 <calloc@plt>
  44a928:	str	x0, [x20, #16]
  44a92c:	cbnz	x0, 44a818 <_obstack_memory_used@@Base+0x967c>
  44a930:	mov	w0, #0xc                   	// #12
  44a934:	b	44abb4 <_obstack_memory_used@@Base+0x9a18>
  44a938:	lsl	x0, x0, #1
  44a93c:	add	x27, x0, #0x1
  44a940:	lsl	x1, x27, #3
  44a944:	ldr	x0, [x20, #40]
  44a948:	bl	404540 <realloc@plt>
  44a94c:	cbz	x0, 44abb0 <_obstack_memory_used@@Base+0x9a14>
  44a950:	str	x0, [x20, #40]
  44a954:	str	x27, [x20, #24]
  44a958:	b	44a854 <_obstack_memory_used@@Base+0x96b8>
  44a95c:	ldr	x27, [sp, #152]
  44a960:	ldr	x21, [sp, #136]
  44a964:	ldr	x20, [sp, #160]
  44a968:	ldr	x28, [sp, #168]
  44a96c:	str	wzr, [sp, #204]
  44a970:	ldr	x0, [x19, #200]
  44a974:	cmp	x0, x20
  44a978:	b.le	44a584 <_obstack_memory_used@@Base+0x93e8>
  44a97c:	lsl	x0, x21, #3
  44a980:	str	x0, [sp, #144]
  44a984:	add	x0, x21, x21, lsl #1
  44a988:	lsl	x0, x0, #3
  44a98c:	str	x0, [sp, #136]
  44a990:	add	x22, x20, x20, lsl #2
  44a994:	lsl	x22, x22, #3
  44a998:	ldr	x26, [sp, #104]
  44a99c:	str	x28, [sp, #152]
  44a9a0:	b	44aa50 <_obstack_memory_used@@Base+0x98b4>
  44a9a4:	ldr	x1, [x27, #24]
  44a9a8:	ldr	x2, [sp, #144]
  44a9ac:	ldr	x24, [x1, x2]
  44a9b0:	add	x24, x24, x24, lsl #1
  44a9b4:	ldr	x1, [x27, #48]
  44a9b8:	add	x24, x1, x24, lsl #3
  44a9bc:	b	44aaa0 <_obstack_memory_used@@Base+0x9904>
  44a9c0:	ldr	w3, [sp, #120]
  44a9c4:	mov	x2, x24
  44a9c8:	mov	x1, x27
  44a9cc:	add	x0, sp, #0xcc
  44a9d0:	bl	444d04 <_obstack_memory_used@@Base+0x3b68>
  44a9d4:	str	x0, [x25, x23, lsl #3]
  44a9d8:	ldr	x0, [x19, #184]
  44a9dc:	ldr	x0, [x0, x23, lsl #3]
  44a9e0:	cbnz	x0, 44ab28 <_obstack_memory_used@@Base+0x998c>
  44a9e4:	ldr	w0, [sp, #204]
  44a9e8:	cbz	w0, 44ab28 <_obstack_memory_used@@Base+0x998c>
  44a9ec:	ldp	x21, x22, [sp, #32]
  44a9f0:	ldp	x23, x24, [sp, #48]
  44a9f4:	ldp	x25, x26, [sp, #64]
  44a9f8:	b	44aa10 <_obstack_memory_used@@Base+0x9874>
  44a9fc:	ldr	x0, [sp, #192]
  44aa00:	bl	4047c0 <free@plt>
  44aa04:	ldp	x21, x22, [sp, #32]
  44aa08:	ldp	x23, x24, [sp, #48]
  44aa0c:	ldp	x25, x26, [sp, #64]
  44aa10:	ldr	w0, [sp, #204]
  44aa14:	ldp	x19, x20, [sp, #16]
  44aa18:	ldp	x27, x28, [sp, #80]
  44aa1c:	ldp	x29, x30, [sp], #208
  44aa20:	ret
  44aa24:	ldr	w0, [sp, #204]
  44aa28:	cbz	w0, 44ab28 <_obstack_memory_used@@Base+0x998c>
  44aa2c:	ldp	x21, x22, [sp, #32]
  44aa30:	ldp	x23, x24, [sp, #48]
  44aa34:	ldp	x25, x26, [sp, #64]
  44aa38:	b	44aa10 <_obstack_memory_used@@Base+0x9874>
  44aa3c:	add	x20, x20, #0x1
  44aa40:	add	x22, x22, #0x28
  44aa44:	ldr	x0, [x19, #200]
  44aa48:	cmp	x0, x20
  44aa4c:	b.le	44ab84 <_obstack_memory_used@@Base+0x99e8>
  44aa50:	ldr	x0, [x19, #216]
  44aa54:	add	x1, x0, x22
  44aa58:	ldr	x0, [x0, x22]
  44aa5c:	cmp	x0, x21
  44aa60:	b.ne	44aa3c <_obstack_memory_used@@Base+0x98a0>  // b.any
  44aa64:	ldr	x0, [x1, #8]
  44aa68:	cmp	x0, x26
  44aa6c:	b.ne	44aa3c <_obstack_memory_used@@Base+0x98a0>  // b.any
  44aa70:	ldr	x0, [x1, #24]
  44aa74:	ldr	x23, [x1, #16]
  44aa78:	subs	x28, x0, x23
  44aa7c:	b.ne	44a9a4 <_obstack_memory_used@@Base+0x9808>  // b.any
  44aa80:	ldr	x1, [x27, #40]
  44aa84:	ldr	x2, [sp, #136]
  44aa88:	add	x1, x1, x2
  44aa8c:	ldr	x1, [x1, #16]
  44aa90:	ldr	x24, [x1]
  44aa94:	add	x24, x24, x24, lsl #1
  44aa98:	ldr	x1, [x27, #48]
  44aa9c:	add	x24, x1, x24, lsl #3
  44aaa0:	add	x0, x0, x26
  44aaa4:	sub	x23, x0, x23
  44aaa8:	ldr	w2, [x19, #160]
  44aaac:	sub	x1, x23, #0x1
  44aab0:	mov	x0, x19
  44aab4:	bl	443888 <_obstack_memory_used@@Base+0x26ec>
  44aab8:	str	w0, [sp, #120]
  44aabc:	ldr	x25, [x19, #184]
  44aac0:	ldr	x0, [x25, x23, lsl #3]
  44aac4:	ldr	x1, [sp, #128]
  44aac8:	ldr	x1, [x25, x1]
  44aacc:	str	xzr, [sp, #112]
  44aad0:	cbz	x1, 44aadc <_obstack_memory_used@@Base+0x9940>
  44aad4:	ldr	x1, [x1, #16]
  44aad8:	str	x1, [sp, #112]
  44aadc:	cbz	x0, 44a9c0 <_obstack_memory_used@@Base+0x9824>
  44aae0:	mov	x2, x24
  44aae4:	ldr	x1, [x0, #80]
  44aae8:	add	x0, sp, #0xb0
  44aaec:	bl	442f28 <_obstack_memory_used@@Base+0x1d8c>
  44aaf0:	str	w0, [sp, #204]
  44aaf4:	cbnz	w0, 44a9fc <_obstack_memory_used@@Base+0x9860>
  44aaf8:	ldr	x25, [x19, #184]
  44aafc:	ldr	w3, [sp, #120]
  44ab00:	add	x2, sp, #0xb0
  44ab04:	mov	x1, x27
  44ab08:	add	x0, sp, #0xcc
  44ab0c:	bl	444d04 <_obstack_memory_used@@Base+0x3b68>
  44ab10:	str	x0, [x25, x23, lsl #3]
  44ab14:	ldr	x0, [sp, #192]
  44ab18:	bl	4047c0 <free@plt>
  44ab1c:	ldr	x0, [x19, #184]
  44ab20:	ldr	x0, [x0, x23, lsl #3]
  44ab24:	cbz	x0, 44aa24 <_obstack_memory_used@@Base+0x9888>
  44ab28:	cbnz	x28, 44aa3c <_obstack_memory_used@@Base+0x98a0>
  44ab2c:	ldr	x0, [x19, #184]
  44ab30:	ldr	x1, [sp, #128]
  44ab34:	ldr	x0, [x0, x1]
  44ab38:	ldr	x0, [x0, #16]
  44ab3c:	ldr	x1, [sp, #112]
  44ab40:	cmp	x0, x1
  44ab44:	b.le	44aa3c <_obstack_memory_used@@Base+0x98a0>
  44ab48:	mov	x2, x26
  44ab4c:	mov	x1, x24
  44ab50:	mov	x0, x19
  44ab54:	bl	442798 <_obstack_memory_used@@Base+0x15fc>
  44ab58:	str	w0, [sp, #204]
  44ab5c:	cbnz	w0, 44aba0 <_obstack_memory_used@@Base+0x9a04>
  44ab60:	mov	x1, x24
  44ab64:	mov	x0, x19
  44ab68:	bl	44a51c <_obstack_memory_used@@Base+0x9380>
  44ab6c:	str	w0, [sp, #204]
  44ab70:	cbz	w0, 44aa3c <_obstack_memory_used@@Base+0x98a0>
  44ab74:	ldp	x21, x22, [sp, #32]
  44ab78:	ldp	x23, x24, [sp, #48]
  44ab7c:	ldp	x25, x26, [sp, #64]
  44ab80:	b	44aa10 <_obstack_memory_used@@Base+0x9874>
  44ab84:	ldr	x28, [sp, #152]
  44ab88:	b	44a584 <_obstack_memory_used@@Base+0x93e8>
  44ab8c:	ldp	x21, x22, [sp, #32]
  44ab90:	ldp	x23, x24, [sp, #48]
  44ab94:	ldp	x25, x26, [sp, #64]
  44ab98:	str	wzr, [sp, #204]
  44ab9c:	b	44aa10 <_obstack_memory_used@@Base+0x9874>
  44aba0:	ldp	x21, x22, [sp, #32]
  44aba4:	ldp	x23, x24, [sp, #48]
  44aba8:	ldp	x25, x26, [sp, #64]
  44abac:	b	44aa10 <_obstack_memory_used@@Base+0x9874>
  44abb0:	mov	w0, #0xc                   	// #12
  44abb4:	str	w0, [sp, #204]
  44abb8:	ldp	x21, x22, [sp, #32]
  44abbc:	ldp	x23, x24, [sp, #48]
  44abc0:	ldp	x25, x26, [sp, #64]
  44abc4:	b	44aa10 <_obstack_memory_used@@Base+0x9874>
  44abc8:	str	w0, [sp, #204]
  44abcc:	ldp	x21, x22, [sp, #32]
  44abd0:	ldp	x23, x24, [sp, #48]
  44abd4:	ldp	x25, x26, [sp, #64]
  44abd8:	b	44aa10 <_obstack_memory_used@@Base+0x9874>
  44abdc:	stp	x29, x30, [sp, #-112]!
  44abe0:	mov	x29, sp
  44abe4:	stp	x19, x20, [sp, #16]
  44abe8:	stp	x21, x22, [sp, #32]
  44abec:	stp	x23, x24, [sp, #48]
  44abf0:	mov	x23, x0
  44abf4:	mov	x20, x1
  44abf8:	mov	x19, x2
  44abfc:	ldr	x22, [x1, #152]
  44ac00:	ldr	x21, [x1, #72]
  44ac04:	ldr	x1, [x1, #192]
  44ac08:	cmp	x1, x21
  44ac0c:	b.ge	44ac44 <_obstack_memory_used@@Base+0x9aa8>  // b.tcont
  44ac10:	ldr	x0, [x20, #184]
  44ac14:	str	x2, [x0, x21, lsl #3]
  44ac18:	str	x21, [x20, #192]
  44ac1c:	ldr	x0, [x22, #152]
  44ac20:	cmp	x0, #0x0
  44ac24:	ccmp	x19, #0x0, #0x4, ne  // ne = any
  44ac28:	b.ne	44ad10 <_obstack_memory_used@@Base+0x9b74>  // b.any
  44ac2c:	mov	x0, x19
  44ac30:	ldp	x19, x20, [sp, #16]
  44ac34:	ldp	x21, x22, [sp, #32]
  44ac38:	ldp	x23, x24, [sp, #48]
  44ac3c:	ldp	x29, x30, [sp], #112
  44ac40:	ret
  44ac44:	ldr	x24, [x20, #184]
  44ac48:	ldr	x0, [x24, x21, lsl #3]
  44ac4c:	cbz	x0, 44acc0 <_obstack_memory_used@@Base+0x9b24>
  44ac50:	ldr	x2, [x0, #80]
  44ac54:	cbz	x19, 44acc8 <_obstack_memory_used@@Base+0x9b2c>
  44ac58:	ldr	x24, [x19, #80]
  44ac5c:	mov	x1, x24
  44ac60:	add	x0, sp, #0x58
  44ac64:	bl	442f28 <_obstack_memory_used@@Base+0x1d8c>
  44ac68:	str	w0, [x23]
  44ac6c:	mov	x19, #0x0                   	// #0
  44ac70:	cbnz	w0, 44ac2c <_obstack_memory_used@@Base+0x9a90>
  44ac74:	str	x25, [sp, #64]
  44ac78:	ldr	x1, [x20, #72]
  44ac7c:	ldr	w2, [x20, #160]
  44ac80:	sub	x1, x1, #0x1
  44ac84:	mov	x0, x20
  44ac88:	bl	443888 <_obstack_memory_used@@Base+0x26ec>
  44ac8c:	ldr	x25, [x20, #184]
  44ac90:	mov	w3, w0
  44ac94:	add	x2, sp, #0x58
  44ac98:	mov	x1, x22
  44ac9c:	mov	x0, x23
  44aca0:	bl	444d04 <_obstack_memory_used@@Base+0x3b68>
  44aca4:	mov	x19, x0
  44aca8:	str	x0, [x25, x21, lsl #3]
  44acac:	cbz	x24, 44ad08 <_obstack_memory_used@@Base+0x9b6c>
  44acb0:	ldr	x0, [sp, #104]
  44acb4:	bl	4047c0 <free@plt>
  44acb8:	ldr	x25, [sp, #64]
  44acbc:	b	44ac1c <_obstack_memory_used@@Base+0x9a80>
  44acc0:	str	x2, [x24, x21, lsl #3]
  44acc4:	b	44ac1c <_obstack_memory_used@@Base+0x9a80>
  44acc8:	ldp	x0, x1, [x2]
  44accc:	stp	x0, x1, [sp, #88]
  44acd0:	ldr	x0, [x2, #16]
  44acd4:	str	x0, [sp, #104]
  44acd8:	ldr	w2, [x20, #160]
  44acdc:	sub	x1, x21, #0x1
  44ace0:	mov	x0, x20
  44ace4:	bl	443888 <_obstack_memory_used@@Base+0x26ec>
  44ace8:	mov	w3, w0
  44acec:	add	x2, sp, #0x58
  44acf0:	mov	x1, x22
  44acf4:	mov	x0, x23
  44acf8:	bl	444d04 <_obstack_memory_used@@Base+0x3b68>
  44acfc:	mov	x19, x0
  44ad00:	str	x0, [x24, x21, lsl #3]
  44ad04:	b	44ac1c <_obstack_memory_used@@Base+0x9a80>
  44ad08:	ldr	x25, [sp, #64]
  44ad0c:	b	44ac1c <_obstack_memory_used@@Base+0x9a80>
  44ad10:	add	x22, x19, #0x8
  44ad14:	mov	x2, x21
  44ad18:	mov	x1, x22
  44ad1c:	mov	x0, x20
  44ad20:	bl	442798 <_obstack_memory_used@@Base+0x15fc>
  44ad24:	str	w0, [x23]
  44ad28:	cbnz	w0, 44ad54 <_obstack_memory_used@@Base+0x9bb8>
  44ad2c:	ldrb	w0, [x19, #104]
  44ad30:	tbz	w0, #6, 44ac2c <_obstack_memory_used@@Base+0x9a90>
  44ad34:	mov	x1, x22
  44ad38:	mov	x0, x20
  44ad3c:	bl	44a51c <_obstack_memory_used@@Base+0x9380>
  44ad40:	str	w0, [x23]
  44ad44:	cbnz	w0, 44ad5c <_obstack_memory_used@@Base+0x9bc0>
  44ad48:	ldr	x0, [x20, #184]
  44ad4c:	ldr	x19, [x0, x21, lsl #3]
  44ad50:	b	44ac2c <_obstack_memory_used@@Base+0x9a90>
  44ad54:	mov	x19, #0x0                   	// #0
  44ad58:	b	44ac2c <_obstack_memory_used@@Base+0x9a90>
  44ad5c:	mov	x19, #0x0                   	// #0
  44ad60:	b	44ac2c <_obstack_memory_used@@Base+0x9a90>
  44ad64:	stp	x29, x30, [sp, #-240]!
  44ad68:	mov	x29, sp
  44ad6c:	stp	x19, x20, [sp, #16]
  44ad70:	stp	x21, x22, [sp, #32]
  44ad74:	stp	x23, x24, [sp, #48]
  44ad78:	stp	x25, x26, [sp, #64]
  44ad7c:	mov	x22, x0
  44ad80:	mov	x20, x1
  44ad84:	mov	x19, x2
  44ad88:	mov	x24, x3
  44ad8c:	ldr	x25, [x0, #152]
  44ad90:	str	wzr, [sp, #236]
  44ad94:	lsl	x0, x2, #3
  44ad98:	str	x0, [sp, #112]
  44ad9c:	ldr	x0, [x22, #184]
  44ada0:	ldr	x23, [x0, x2, lsl #3]
  44ada4:	cbz	x23, 44ae84 <_obstack_memory_used@@Base+0x9ce8>
  44ada8:	add	x23, x23, #0x8
  44adac:	ldr	x0, [x3, #8]
  44adb0:	cbz	x0, 44ae8c <_obstack_memory_used@@Base+0x9cf0>
  44adb4:	str	wzr, [sp, #176]
  44adb8:	mov	x2, x3
  44adbc:	mov	x1, x25
  44adc0:	add	x0, sp, #0xb0
  44adc4:	bl	449874 <_obstack_memory_used@@Base+0x86d8>
  44adc8:	mov	x26, x0
  44adcc:	ldr	w21, [sp, #176]
  44add0:	cbnz	w21, 44aeb0 <_obstack_memory_used@@Base+0x9d14>
  44add4:	ldr	x21, [x0, #56]
  44add8:	cbnz	x21, 44ae3c <_obstack_memory_used@@Base+0x9ca0>
  44addc:	stp	x27, x28, [sp, #80]
  44ade0:	add	x27, x0, #0x38
  44ade4:	ldr	x1, [x24, #8]
  44ade8:	mov	x0, x27
  44adec:	bl	442644 <_obstack_memory_used@@Base+0x14a8>
  44adf0:	str	w0, [sp, #176]
  44adf4:	cbnz	w0, 44b388 <_obstack_memory_used@@Base+0xa1ec>
  44adf8:	ldr	x0, [x24, #8]
  44adfc:	cmp	x0, #0x0
  44ae00:	b.le	44aecc <_obstack_memory_used@@Base+0x9d30>
  44ae04:	ldr	x0, [x24, #16]
  44ae08:	ldr	x1, [x0, x21, lsl #3]
  44ae0c:	add	x1, x1, x1, lsl #1
  44ae10:	ldr	x0, [x25, #56]
  44ae14:	add	x1, x0, x1, lsl #3
  44ae18:	mov	x0, x27
  44ae1c:	bl	442b48 <_obstack_memory_used@@Base+0x19ac>
  44ae20:	str	w0, [sp, #176]
  44ae24:	cbnz	w0, 44b394 <_obstack_memory_used@@Base+0xa1f8>
  44ae28:	add	x21, x21, #0x1
  44ae2c:	ldr	x0, [x24, #8]
  44ae30:	cmp	x21, x0
  44ae34:	b.lt	44ae04 <_obstack_memory_used@@Base+0x9c68>  // b.tstop
  44ae38:	ldp	x27, x28, [sp, #80]
  44ae3c:	add	x2, x26, #0x38
  44ae40:	mov	x1, x23
  44ae44:	mov	x0, x24
  44ae48:	bl	442cf8 <_obstack_memory_used@@Base+0x1b5c>
  44ae4c:	mov	w21, w0
  44ae50:	str	w0, [sp, #236]
  44ae54:	cbnz	w0, 44aeb0 <_obstack_memory_used@@Base+0x9d14>
  44ae58:	ldr	x0, [x20, #40]
  44ae5c:	cbnz	x0, 44aed4 <_obstack_memory_used@@Base+0x9d38>
  44ae60:	ldr	x21, [x20]
  44ae64:	mov	x2, x24
  44ae68:	mov	x1, x25
  44ae6c:	add	x0, sp, #0xec
  44ae70:	bl	449874 <_obstack_memory_used@@Base+0x86d8>
  44ae74:	str	x0, [x21, x19, lsl #3]
  44ae78:	ldr	w21, [sp, #236]
  44ae7c:	cbz	w21, 44ae9c <_obstack_memory_used@@Base+0x9d00>
  44ae80:	b	44aeb0 <_obstack_memory_used@@Base+0x9d14>
  44ae84:	ldr	x0, [x3, #8]
  44ae88:	cbnz	x0, 44b0e8 <_obstack_memory_used@@Base+0x9f4c>
  44ae8c:	ldr	x0, [x20]
  44ae90:	str	xzr, [x0, x19, lsl #3]
  44ae94:	mov	w21, #0x0                   	// #0
  44ae98:	cbz	x23, 44aeb0 <_obstack_memory_used@@Base+0x9d14>
  44ae9c:	ldr	x0, [x22, #184]
  44aea0:	ldr	x0, [x0, x19, lsl #3]
  44aea4:	ldrb	w0, [x0, #104]
  44aea8:	mov	w21, #0x0                   	// #0
  44aeac:	tbnz	w0, #6, 44b108 <_obstack_memory_used@@Base+0x9f6c>
  44aeb0:	mov	w0, w21
  44aeb4:	ldp	x19, x20, [sp, #16]
  44aeb8:	ldp	x21, x22, [sp, #32]
  44aebc:	ldp	x23, x24, [sp, #48]
  44aec0:	ldp	x25, x26, [sp, #64]
  44aec4:	ldp	x29, x30, [sp], #240
  44aec8:	ret
  44aecc:	ldp	x27, x28, [sp, #80]
  44aed0:	b	44ae3c <_obstack_memory_used@@Base+0x9ca0>
  44aed4:	ldr	x0, [x22, #216]
  44aed8:	str	x0, [sp, #120]
  44aedc:	ldr	x0, [x20, #40]
  44aee0:	cmp	x0, #0x0
  44aee4:	b.le	44b0e0 <_obstack_memory_used@@Base+0x9f44>
  44aee8:	stp	x27, x28, [sp, #80]
  44aeec:	mov	x27, #0x0                   	// #0
  44aef0:	b	44af80 <_obstack_memory_used@@Base+0x9de4>
  44aef4:	ldr	x6, [x24, #8]
  44aef8:	cmp	x6, #0x0
  44aefc:	b.le	44af70 <_obstack_memory_used@@Base+0x9dd4>
  44af00:	ldr	x0, [x24, #16]
  44af04:	add	x6, x0, x6, lsl #3
  44af08:	mov	x1, #0xffffffffffffffff    	// #-1
  44af0c:	str	x1, [sp, #104]
  44af10:	b	44af2c <_obstack_memory_used@@Base+0x9d90>
  44af14:	ldr	x2, [x5, x4]
  44af18:	cmp	x28, x2
  44af1c:	csel	x1, x1, x3, ne  // ne = any
  44af20:	add	x0, x0, #0x8
  44af24:	cmp	x0, x6
  44af28:	b.eq	44af64 <_obstack_memory_used@@Base+0x9dc8>  // b.none
  44af2c:	ldr	x3, [x0]
  44af30:	lsl	x4, x3, #4
  44af34:	add	x2, x5, x4
  44af38:	ldrb	w2, [x2, #8]
  44af3c:	cmp	w2, #0x8
  44af40:	b.eq	44af14 <_obstack_memory_used@@Base+0x9d78>  // b.none
  44af44:	cmp	w2, #0x9
  44af48:	b.ne	44af20 <_obstack_memory_used@@Base+0x9d84>  // b.any
  44af4c:	ldr	x2, [x5, x4]
  44af50:	cmp	x28, x2
  44af54:	ldr	x2, [sp, #104]
  44af58:	csel	x2, x2, x3, ne  // ne = any
  44af5c:	str	x2, [sp, #104]
  44af60:	b	44af20 <_obstack_memory_used@@Base+0x9d84>
  44af64:	tbz	x1, #63, 44afdc <_obstack_memory_used@@Base+0x9e40>
  44af68:	ldr	x0, [sp, #104]
  44af6c:	tbz	x0, #63, 44b008 <_obstack_memory_used@@Base+0x9e6c>
  44af70:	add	x27, x27, #0x1
  44af74:	ldr	x0, [x20, #40]
  44af78:	cmp	x27, x0
  44af7c:	b.ge	44b0dc <_obstack_memory_used@@Base+0x9f40>  // b.tcont
  44af80:	ldr	x0, [x20, #48]
  44af84:	ldr	x0, [x0, x27, lsl #3]
  44af88:	add	x0, x0, x0, lsl #2
  44af8c:	ldr	x3, [sp, #120]
  44af90:	add	x1, x3, x0, lsl #3
  44af94:	ldr	x2, [x1, #16]
  44af98:	cmp	x19, x2
  44af9c:	b.le	44af70 <_obstack_memory_used@@Base+0x9dd4>
  44afa0:	ldr	x2, [x1, #8]
  44afa4:	cmp	x19, x2
  44afa8:	b.gt	44af70 <_obstack_memory_used@@Base+0x9dd4>
  44afac:	ldr	x5, [x25]
  44afb0:	ldr	x0, [x3, x0, lsl #3]
  44afb4:	lsl	x0, x0, #4
  44afb8:	ldr	x28, [x5, x0]
  44afbc:	ldr	x0, [x1, #24]
  44afc0:	cmp	x19, x0
  44afc4:	b.eq	44aef4 <_obstack_memory_used@@Base+0x9d58>  // b.none
  44afc8:	ldr	x0, [x24, #8]
  44afcc:	mov	x26, #0x0                   	// #0
  44afd0:	cmp	x0, #0x0
  44afd4:	b.gt	44b08c <_obstack_memory_used@@Base+0x9ef0>
  44afd8:	b	44af70 <_obstack_memory_used@@Base+0x9dd4>
  44afdc:	mov	x3, x23
  44afe0:	mov	x2, x24
  44afe4:	mov	x0, x25
  44afe8:	bl	446da0 <_obstack_memory_used@@Base+0x5c04>
  44afec:	mov	w21, w0
  44aff0:	cbnz	w0, 44b3a0 <_obstack_memory_used@@Base+0xa204>
  44aff4:	ldr	x0, [sp, #104]
  44aff8:	tbnz	x0, #63, 44af70 <_obstack_memory_used@@Base+0x9dd4>
  44affc:	ldr	x0, [x24, #8]
  44b000:	cmp	x0, #0x0
  44b004:	b.le	44af70 <_obstack_memory_used@@Base+0x9dd4>
  44b008:	mov	x26, #0x0                   	// #0
  44b00c:	b	44b020 <_obstack_memory_used@@Base+0x9e84>
  44b010:	add	x26, x26, #0x1
  44b014:	ldr	x0, [x24, #8]
  44b018:	cmp	x26, x0
  44b01c:	b.ge	44af70 <_obstack_memory_used@@Base+0x9dd4>  // b.tcont
  44b020:	ldr	x0, [x24, #16]
  44b024:	ldr	x21, [x0, x26, lsl #3]
  44b028:	add	x28, x21, x21, lsl #1
  44b02c:	lsl	x28, x28, #3
  44b030:	ldr	x0, [x25, #56]
  44b034:	ldr	x1, [sp, #104]
  44b038:	add	x0, x0, x28
  44b03c:	bl	441424 <_obstack_memory_used@@Base+0x288>
  44b040:	cbnz	x0, 44b010 <_obstack_memory_used@@Base+0x9e74>
  44b044:	ldr	x0, [x25, #48]
  44b048:	ldr	x1, [sp, #104]
  44b04c:	add	x0, x0, x28
  44b050:	bl	441424 <_obstack_memory_used@@Base+0x288>
  44b054:	cbnz	x0, 44b010 <_obstack_memory_used@@Base+0x9e74>
  44b058:	mov	x3, x23
  44b05c:	mov	x2, x24
  44b060:	mov	x1, x21
  44b064:	mov	x0, x25
  44b068:	bl	446da0 <_obstack_memory_used@@Base+0x5c04>
  44b06c:	mov	w21, w0
  44b070:	cbnz	w0, 44b3a8 <_obstack_memory_used@@Base+0xa20c>
  44b074:	sub	x26, x26, #0x1
  44b078:	b	44b010 <_obstack_memory_used@@Base+0x9e74>
  44b07c:	add	x26, x26, #0x1
  44b080:	ldr	x0, [x24, #8]
  44b084:	cmp	x26, x0
  44b088:	b.ge	44af70 <_obstack_memory_used@@Base+0x9dd4>  // b.tcont
  44b08c:	ldr	x0, [x24, #16]
  44b090:	ldr	x1, [x0, x26, lsl #3]
  44b094:	lsl	x2, x1, #4
  44b098:	ldr	x3, [x25]
  44b09c:	add	x0, x3, x2
  44b0a0:	ldrb	w0, [x0, #8]
  44b0a4:	sub	w0, w0, #0x8
  44b0a8:	cmp	w0, #0x1
  44b0ac:	b.hi	44b07c <_obstack_memory_used@@Base+0x9ee0>  // b.pmore
  44b0b0:	ldr	x0, [x3, x2]
  44b0b4:	cmp	x28, x0
  44b0b8:	b.ne	44b07c <_obstack_memory_used@@Base+0x9ee0>  // b.any
  44b0bc:	mov	x3, x23
  44b0c0:	mov	x2, x24
  44b0c4:	mov	x0, x25
  44b0c8:	bl	446da0 <_obstack_memory_used@@Base+0x5c04>
  44b0cc:	mov	w21, w0
  44b0d0:	cbz	w0, 44b07c <_obstack_memory_used@@Base+0x9ee0>
  44b0d4:	ldp	x27, x28, [sp, #80]
  44b0d8:	b	44aeb0 <_obstack_memory_used@@Base+0x9d14>
  44b0dc:	ldp	x27, x28, [sp, #80]
  44b0e0:	str	wzr, [sp, #236]
  44b0e4:	b	44ae60 <_obstack_memory_used@@Base+0x9cc4>
  44b0e8:	ldr	x20, [x1]
  44b0ec:	mov	x2, x3
  44b0f0:	mov	x1, x25
  44b0f4:	add	x0, sp, #0xec
  44b0f8:	bl	449874 <_obstack_memory_used@@Base+0x86d8>
  44b0fc:	str	x0, [x20, x19, lsl #3]
  44b100:	ldr	w21, [sp, #236]
  44b104:	b	44aeb0 <_obstack_memory_used@@Base+0x9d14>
  44b108:	mov	x1, x19
  44b10c:	mov	x0, x22
  44b110:	bl	441a1c <_obstack_memory_used@@Base+0x880>
  44b114:	mov	x1, x0
  44b118:	str	x0, [sp, #160]
  44b11c:	cmn	x0, #0x1
  44b120:	b.eq	44aeb0 <_obstack_memory_used@@Base+0x9d14>  // b.none
  44b124:	stp	x27, x28, [sp, #80]
  44b128:	ldr	x28, [x22, #152]
  44b12c:	str	xzr, [sp, #176]
  44b130:	ldr	x0, [x23, #8]
  44b134:	cmp	x0, #0x0
  44b138:	b.le	44b37c <_obstack_memory_used@@Base+0xa1e0>
  44b13c:	add	x0, x1, x1, lsl #2
  44b140:	lsl	x0, x0, #3
  44b144:	str	x0, [sp, #168]
  44b148:	mov	x27, #0x0                   	// #0
  44b14c:	add	x0, x20, #0x20
  44b150:	str	x0, [sp, #144]
  44b154:	add	x0, sp, #0xd0
  44b158:	str	x0, [sp, #136]
  44b15c:	b	44b178 <_obstack_memory_used@@Base+0x9fdc>
  44b160:	cmp	w1, #0x4
  44b164:	b.eq	44b1a8 <_obstack_memory_used@@Base+0xa00c>  // b.none
  44b168:	add	x27, x27, #0x1
  44b16c:	ldr	x0, [x23, #8]
  44b170:	cmp	x27, x0
  44b174:	b.ge	44b358 <_obstack_memory_used@@Base+0xa1bc>  // b.tcont
  44b178:	ldr	x0, [x23, #16]
  44b17c:	ldr	x24, [x0, x27, lsl #3]
  44b180:	ldr	x0, [x28]
  44b184:	add	x0, x0, x24, lsl #4
  44b188:	ldrb	w1, [x0, #8]
  44b18c:	ldr	x0, [x20, #16]
  44b190:	cmp	x24, x0
  44b194:	b.ne	44b160 <_obstack_memory_used@@Base+0x9fc4>  // b.any
  44b198:	ldr	x0, [x20, #24]
  44b19c:	cmp	x19, x0
  44b1a0:	b.ne	44b160 <_obstack_memory_used@@Base+0x9fc4>  // b.any
  44b1a4:	b	44b168 <_obstack_memory_used@@Base+0x9fcc>
  44b1a8:	ldr	x21, [x22, #216]
  44b1ac:	ldr	x0, [sp, #168]
  44b1b0:	add	x21, x21, x0
  44b1b4:	add	x0, x24, x24, lsl #1
  44b1b8:	lsl	x0, x0, #3
  44b1bc:	str	x0, [sp, #128]
  44b1c0:	lsl	x0, x24, #3
  44b1c4:	str	x0, [sp, #120]
  44b1c8:	ldr	x25, [sp, #160]
  44b1cc:	add	x0, x19, #0x1
  44b1d0:	str	x0, [sp, #152]
  44b1d4:	b	44b274 <_obstack_memory_used@@Base+0xa0d8>
  44b1d8:	ldr	x0, [x28, #40]
  44b1dc:	ldr	x1, [sp, #128]
  44b1e0:	add	x0, x0, x1
  44b1e4:	ldr	x0, [x0, #16]
  44b1e8:	ldr	x0, [x0]
  44b1ec:	str	x0, [sp, #104]
  44b1f0:	b	44b2a4 <_obstack_memory_used@@Base+0xa108>
  44b1f4:	ldp	x0, x1, [x20]
  44b1f8:	stp	x0, x1, [sp, #176]
  44b1fc:	ldp	x0, x1, [x20, #16]
  44b200:	stp	x0, x1, [sp, #192]
  44b204:	ldp	x0, x1, [x20, #32]
  44b208:	stp	x0, x1, [sp, #208]
  44b20c:	ldr	x0, [x20, #48]
  44b210:	str	x0, [sp, #224]
  44b214:	ldr	x1, [sp, #144]
  44b218:	ldr	x0, [sp, #136]
  44b21c:	bl	442eb0 <_obstack_memory_used@@Base+0x1d14>
  44b220:	mov	w21, w0
  44b224:	cbz	w0, 44b2f8 <_obstack_memory_used@@Base+0xa15c>
  44b228:	b	44b364 <_obstack_memory_used@@Base+0xa1c8>
  44b22c:	ldr	x0, [sp, #176]
  44b230:	ldr	x1, [sp, #112]
  44b234:	str	x26, [x0, x1]
  44b238:	mov	x1, x25
  44b23c:	ldr	x21, [sp, #136]
  44b240:	mov	x0, x21
  44b244:	bl	441424 <_obstack_memory_used@@Base+0x288>
  44b248:	sub	x1, x0, #0x1
  44b24c:	mov	x0, x21
  44b250:	bl	441484 <_obstack_memory_used@@Base+0x2e8>
  44b254:	add	x21, x25, x25, lsl #2
  44b258:	ldr	x0, [x22, #216]
  44b25c:	add	x21, x0, x21, lsl #3
  44b260:	add	x25, x25, #0x1
  44b264:	add	x1, x21, #0x28
  44b268:	ldrb	w0, [x21, #32]
  44b26c:	cbz	w0, 44b168 <_obstack_memory_used@@Base+0x9fcc>
  44b270:	mov	x21, x1
  44b274:	ldr	x0, [x21]
  44b278:	cmp	x24, x0
  44b27c:	b.ne	44b260 <_obstack_memory_used@@Base+0xa0c4>  // b.any
  44b280:	ldr	x0, [x21, #24]
  44b284:	ldr	x1, [x21, #16]
  44b288:	sub	x0, x0, x1
  44b28c:	add	x26, x19, x0
  44b290:	cbz	x0, 44b1d8 <_obstack_memory_used@@Base+0xa03c>
  44b294:	ldr	x0, [x28, #24]
  44b298:	ldr	x1, [sp, #120]
  44b29c:	ldr	x0, [x0, x1]
  44b2a0:	str	x0, [sp, #104]
  44b2a4:	ldr	x0, [x20, #24]
  44b2a8:	cmp	x26, x0
  44b2ac:	b.gt	44b260 <_obstack_memory_used@@Base+0xa0c4>
  44b2b0:	ldr	x0, [x20]
  44b2b4:	ldr	x0, [x0, x26, lsl #3]
  44b2b8:	cbz	x0, 44b260 <_obstack_memory_used@@Base+0xa0c4>
  44b2bc:	ldr	x1, [sp, #104]
  44b2c0:	add	x0, x0, #0x8
  44b2c4:	bl	441424 <_obstack_memory_used@@Base+0x288>
  44b2c8:	cbz	x0, 44b260 <_obstack_memory_used@@Base+0xa0c4>
  44b2cc:	mov	x5, x26
  44b2d0:	ldr	x4, [sp, #104]
  44b2d4:	mov	x3, x19
  44b2d8:	mov	x2, x24
  44b2dc:	ldr	x1, [sp, #144]
  44b2e0:	mov	x0, x22
  44b2e4:	bl	441a94 <_obstack_memory_used@@Base+0x8f8>
  44b2e8:	and	w0, w0, #0xff
  44b2ec:	cbnz	w0, 44b260 <_obstack_memory_used@@Base+0xa0c4>
  44b2f0:	ldr	x0, [sp, #176]
  44b2f4:	cbz	x0, 44b1f4 <_obstack_memory_used@@Base+0xa058>
  44b2f8:	str	x24, [sp, #192]
  44b2fc:	str	x19, [sp, #200]
  44b300:	mov	x1, x25
  44b304:	ldr	x0, [sp, #136]
  44b308:	bl	442408 <_obstack_memory_used@@Base+0x126c>
  44b30c:	and	w0, w0, #0xff
  44b310:	cbz	w0, 44b360 <_obstack_memory_used@@Base+0xa1c4>
  44b314:	ldr	x0, [sp, #176]
  44b318:	ldr	x1, [sp, #112]
  44b31c:	ldr	x26, [x0, x1]
  44b320:	add	x1, sp, #0xb0
  44b324:	mov	x0, x22
  44b328:	bl	44b3b8 <_obstack_memory_used@@Base+0xa21c>
  44b32c:	mov	w21, w0
  44b330:	cbnz	w0, 44b364 <_obstack_memory_used@@Base+0xa1c8>
  44b334:	ldr	x1, [x20, #8]
  44b338:	cbz	x1, 44b22c <_obstack_memory_used@@Base+0xa090>
  44b33c:	ldr	x3, [sp, #152]
  44b340:	ldr	x2, [sp, #176]
  44b344:	mov	x0, x28
  44b348:	bl	449cc4 <_obstack_memory_used@@Base+0x8b28>
  44b34c:	mov	w21, w0
  44b350:	cbz	w0, 44b22c <_obstack_memory_used@@Base+0xa090>
  44b354:	b	44b364 <_obstack_memory_used@@Base+0xa1c8>
  44b358:	mov	w21, #0x0                   	// #0
  44b35c:	b	44b364 <_obstack_memory_used@@Base+0xa1c8>
  44b360:	mov	w21, #0xc                   	// #12
  44b364:	ldr	x0, [sp, #176]
  44b368:	cbz	x0, 44b3b0 <_obstack_memory_used@@Base+0xa214>
  44b36c:	ldr	x0, [sp, #224]
  44b370:	bl	4047c0 <free@plt>
  44b374:	ldp	x27, x28, [sp, #80]
  44b378:	b	44aeb0 <_obstack_memory_used@@Base+0x9d14>
  44b37c:	mov	w21, #0x0                   	// #0
  44b380:	ldp	x27, x28, [sp, #80]
  44b384:	b	44aeb0 <_obstack_memory_used@@Base+0x9d14>
  44b388:	mov	w21, #0xc                   	// #12
  44b38c:	ldp	x27, x28, [sp, #80]
  44b390:	b	44aeb0 <_obstack_memory_used@@Base+0x9d14>
  44b394:	mov	w21, #0xc                   	// #12
  44b398:	ldp	x27, x28, [sp, #80]
  44b39c:	b	44aeb0 <_obstack_memory_used@@Base+0x9d14>
  44b3a0:	ldp	x27, x28, [sp, #80]
  44b3a4:	b	44aeb0 <_obstack_memory_used@@Base+0x9d14>
  44b3a8:	ldp	x27, x28, [sp, #80]
  44b3ac:	b	44aeb0 <_obstack_memory_used@@Base+0x9d14>
  44b3b0:	ldp	x27, x28, [sp, #80]
  44b3b4:	b	44aeb0 <_obstack_memory_used@@Base+0x9d14>
  44b3b8:	stp	x29, x30, [sp, #-176]!
  44b3bc:	mov	x29, sp
  44b3c0:	stp	x19, x20, [sp, #16]
  44b3c4:	stp	x21, x22, [sp, #32]
  44b3c8:	stp	x23, x24, [sp, #48]
  44b3cc:	mov	x20, x0
  44b3d0:	mov	x23, x1
  44b3d4:	ldr	x19, [x1, #24]
  44b3d8:	ldr	x1, [x1, #16]
  44b3dc:	add	x0, sp, #0x98
  44b3e0:	bl	4423b4 <_obstack_memory_used@@Base+0x1218>
  44b3e4:	mov	w21, w0
  44b3e8:	cbnz	w0, 44b614 <_obstack_memory_used@@Base+0xa478>
  44b3ec:	add	x3, sp, #0x98
  44b3f0:	mov	x2, x19
  44b3f4:	mov	x1, x23
  44b3f8:	mov	x0, x20
  44b3fc:	bl	44ad64 <_obstack_memory_used@@Base+0x9bc8>
  44b400:	str	w0, [sp, #140]
  44b404:	cbnz	w0, 44b5f8 <_obstack_memory_used@@Base+0xa45c>
  44b408:	stp	x25, x26, [sp, #64]
  44b40c:	stp	x27, x28, [sp, #80]
  44b410:	mov	w27, w0
  44b414:	str	w0, [sp, #136]
  44b418:	add	x0, x23, #0x20
  44b41c:	str	x0, [sp, #128]
  44b420:	b	44b584 <_obstack_memory_used@@Base+0xa3e8>
  44b424:	ldr	x2, [sp, #104]
  44b428:	mov	w1, #0x0                   	// #0
  44b42c:	bl	404420 <memset@plt>
  44b430:	ldr	x0, [sp, #168]
  44b434:	bl	4047c0 <free@plt>
  44b438:	ldr	w21, [sp, #140]
  44b43c:	ldp	x25, x26, [sp, #64]
  44b440:	ldp	x27, x28, [sp, #80]
  44b444:	b	44b614 <_obstack_memory_used@@Base+0xa478>
  44b448:	ldr	x0, [x23, #24]
  44b44c:	str	x0, [sp, #112]
  44b450:	ldr	x0, [x20, #152]
  44b454:	mov	x3, x19
  44b458:	mov	x2, x20
  44b45c:	mov	x1, x22
  44b460:	str	x0, [sp, #120]
  44b464:	bl	4463c0 <_obstack_memory_used@@Base+0x5224>
  44b468:	mov	w21, w0
  44b46c:	cmp	w0, #0x0
  44b470:	b.le	44b560 <_obstack_memory_used@@Base+0xa3c4>
  44b474:	add	x0, x19, w0, sxtw
  44b478:	ldr	x2, [sp, #112]
  44b47c:	cmp	x2, x0
  44b480:	b.lt	44b4a8 <_obstack_memory_used@@Base+0xa30c>  // b.tstop
  44b484:	ldr	x1, [x23]
  44b488:	ldr	x0, [x1, x0, lsl #3]
  44b48c:	cbz	x0, 44b518 <_obstack_memory_used@@Base+0xa37c>
  44b490:	ldr	x1, [sp, #120]
  44b494:	ldr	x1, [x1, #24]
  44b498:	ldr	x1, [x1, x22, lsl #3]
  44b49c:	add	x0, x0, #0x8
  44b4a0:	bl	441424 <_obstack_memory_used@@Base+0x288>
  44b4a4:	cbz	x0, 44b518 <_obstack_memory_used@@Base+0xa37c>
  44b4a8:	ldr	x0, [x23, #40]
  44b4ac:	cbz	x0, 44b4d8 <_obstack_memory_used@@Base+0xa33c>
  44b4b0:	ldr	x0, [x24, #24]
  44b4b4:	mov	x5, x19
  44b4b8:	mov	x4, x22
  44b4bc:	add	x3, x19, w21, sxtw
  44b4c0:	ldr	x2, [x0, x22, lsl #3]
  44b4c4:	ldr	x1, [sp, #128]
  44b4c8:	mov	x0, x20
  44b4cc:	bl	441a94 <_obstack_memory_used@@Base+0x8f8>
  44b4d0:	and	w0, w0, #0xff
  44b4d4:	cbnz	w0, 44b4ec <_obstack_memory_used@@Base+0xa350>
  44b4d8:	mov	x1, x22
  44b4dc:	add	x0, sp, #0x98
  44b4e0:	bl	442408 <_obstack_memory_used@@Base+0x126c>
  44b4e4:	and	w0, w0, #0xff
  44b4e8:	cbz	w0, 44b600 <_obstack_memory_used@@Base+0xa464>
  44b4ec:	add	x25, x25, #0x1
  44b4f0:	ldr	x0, [x26, #40]
  44b4f4:	cmp	x25, x0
  44b4f8:	b.ge	44b568 <_obstack_memory_used@@Base+0xa3cc>  // b.tcont
  44b4fc:	ldr	x0, [x26, #48]
  44b500:	ldr	x22, [x0, x25, lsl #3]
  44b504:	lsl	x28, x22, #4
  44b508:	ldr	x0, [x24]
  44b50c:	add	x0, x0, x28
  44b510:	ldrb	w0, [x0, #10]
  44b514:	tbnz	w0, #4, 44b448 <_obstack_memory_used@@Base+0xa2ac>
  44b518:	ldr	x1, [x24]
  44b51c:	mov	x2, x19
  44b520:	add	x1, x1, x28
  44b524:	mov	x0, x20
  44b528:	bl	443984 <_obstack_memory_used@@Base+0x27e8>
  44b52c:	and	w0, w0, #0xff
  44b530:	cbz	w0, 44b4ec <_obstack_memory_used@@Base+0xa350>
  44b534:	ldr	x0, [x23]
  44b538:	ldr	x1, [sp, #104]
  44b53c:	ldr	x0, [x0, x1]
  44b540:	cbz	x0, 44b4ec <_obstack_memory_used@@Base+0xa350>
  44b544:	ldr	x1, [x24, #24]
  44b548:	ldr	x1, [x1, x22, lsl #3]
  44b54c:	add	x0, x0, #0x8
  44b550:	bl	441424 <_obstack_memory_used@@Base+0x288>
  44b554:	cbz	x0, 44b4ec <_obstack_memory_used@@Base+0xa350>
  44b558:	mov	w21, #0x1                   	// #1
  44b55c:	b	44b4a8 <_obstack_memory_used@@Base+0xa30c>
  44b560:	cbz	w0, 44b518 <_obstack_memory_used@@Base+0xa37c>
  44b564:	b	44b4a8 <_obstack_memory_used@@Base+0xa30c>
  44b568:	add	x3, sp, #0x98
  44b56c:	mov	x2, x19
  44b570:	mov	x1, x23
  44b574:	mov	x0, x20
  44b578:	bl	44ad64 <_obstack_memory_used@@Base+0x9bc8>
  44b57c:	mov	w21, w0
  44b580:	cbnz	w0, 44b62c <_obstack_memory_used@@Base+0xa490>
  44b584:	cmp	x19, #0x0
  44b588:	b.le	44b5e8 <_obstack_memory_used@@Base+0xa44c>
  44b58c:	ldr	x0, [x23]
  44b590:	lsl	x1, x19, #3
  44b594:	str	x1, [sp, #104]
  44b598:	ldr	x1, [x0, x19, lsl #3]
  44b59c:	cmp	x1, #0x0
  44b5a0:	ldr	w1, [sp, #136]
  44b5a4:	csinc	w27, w1, w27, ne  // ne = any
  44b5a8:	ldr	w1, [x20, #224]
  44b5ac:	cmp	w1, w27
  44b5b0:	b.lt	44b424 <_obstack_memory_used@@Base+0xa288>  // b.tstop
  44b5b4:	str	xzr, [sp, #160]
  44b5b8:	sub	x19, x19, #0x1
  44b5bc:	ldr	x0, [x20, #184]
  44b5c0:	ldr	x1, [sp, #104]
  44b5c4:	add	x0, x0, x1
  44b5c8:	ldur	x26, [x0, #-8]
  44b5cc:	cbz	x26, 44b568 <_obstack_memory_used@@Base+0xa3cc>
  44b5d0:	ldr	x24, [x20, #152]
  44b5d4:	ldr	x0, [x26, #40]
  44b5d8:	cmp	x0, #0x0
  44b5dc:	b.le	44b568 <_obstack_memory_used@@Base+0xa3cc>
  44b5e0:	mov	x25, #0x0                   	// #0
  44b5e4:	b	44b4fc <_obstack_memory_used@@Base+0xa360>
  44b5e8:	ldr	w21, [sp, #140]
  44b5ec:	ldp	x25, x26, [sp, #64]
  44b5f0:	ldp	x27, x28, [sp, #80]
  44b5f4:	b	44b60c <_obstack_memory_used@@Base+0xa470>
  44b5f8:	ldr	w21, [sp, #140]
  44b5fc:	b	44b60c <_obstack_memory_used@@Base+0xa470>
  44b600:	mov	w21, #0xc                   	// #12
  44b604:	ldp	x25, x26, [sp, #64]
  44b608:	ldp	x27, x28, [sp, #80]
  44b60c:	ldr	x0, [sp, #168]
  44b610:	bl	4047c0 <free@plt>
  44b614:	mov	w0, w21
  44b618:	ldp	x19, x20, [sp, #16]
  44b61c:	ldp	x21, x22, [sp, #32]
  44b620:	ldp	x23, x24, [sp, #48]
  44b624:	ldp	x29, x30, [sp], #176
  44b628:	ret
  44b62c:	ldp	x25, x26, [sp, #64]
  44b630:	ldp	x27, x28, [sp, #80]
  44b634:	b	44b60c <_obstack_memory_used@@Base+0xa470>
  44b638:	sub	sp, sp, #0x250
  44b63c:	stp	x29, x30, [sp]
  44b640:	mov	x29, sp
  44b644:	stp	x19, x20, [sp, #16]
  44b648:	stp	x21, x22, [sp, #32]
  44b64c:	stp	x25, x26, [sp, #64]
  44b650:	stp	x27, x28, [sp, #80]
  44b654:	mov	x25, x0
  44b658:	str	x1, [sp, #168]
  44b65c:	str	x2, [sp, #152]
  44b660:	mov	x19, x3
  44b664:	mov	x21, x4
  44b668:	mov	x22, x5
  44b66c:	str	x6, [sp, #160]
  44b670:	str	x7, [sp, #248]
  44b674:	ldr	w0, [sp, #592]
  44b678:	str	w0, [sp, #120]
  44b67c:	ldr	x27, [x25]
  44b680:	mov	x2, #0x100                 	// #256
  44b684:	mov	w1, #0x0                   	// #0
  44b688:	add	x0, sp, #0x148
  44b68c:	bl	404420 <memset@plt>
  44b690:	str	x27, [sp, #480]
  44b694:	ldr	x26, [x25, #32]
  44b698:	cbz	x26, 44b6b0 <_obstack_memory_used@@Base+0xa514>
  44b69c:	ldrb	w0, [x25, #56]
  44b6a0:	tst	x0, #0x8
  44b6a4:	ccmp	x19, x21, #0x4, ne  // ne = any
  44b6a8:	b.ne	44b9ac <_obstack_memory_used@@Base+0xa810>  // b.any
  44b6ac:	mov	x26, #0x0                   	// #0
  44b6b0:	ldr	x1, [x25, #48]
  44b6b4:	ldr	x2, [sp, #160]
  44b6b8:	sub	x0, x2, #0x1
  44b6bc:	sub	x0, x0, x1
  44b6c0:	cmp	x1, x2
  44b6c4:	csel	x0, x0, xzr, cc  // cc = lo, ul, last
  44b6c8:	str	x0, [sp, #208]
  44b6cc:	ldr	x0, [x25, #16]
  44b6d0:	cbz	x0, 44c564 <_obstack_memory_used@@Base+0xb3c8>
  44b6d4:	ldr	x0, [x27, #72]
  44b6d8:	cbz	x0, 44c570 <_obstack_memory_used@@Base+0xb3d4>
  44b6dc:	ldr	x1, [x27, #80]
  44b6e0:	cbz	x1, 44c57c <_obstack_memory_used@@Base+0xb3e0>
  44b6e4:	ldr	x2, [x27, #88]
  44b6e8:	cbz	x2, 44c588 <_obstack_memory_used@@Base+0xb3ec>
  44b6ec:	ldr	x3, [x27, #96]
  44b6f0:	cbz	x3, 44c594 <_obstack_memory_used@@Base+0xb3f8>
  44b6f4:	ldr	x0, [x0, #16]
  44b6f8:	cbnz	x0, 44b728 <_obstack_memory_used@@Base+0xa58c>
  44b6fc:	ldr	x0, [x1, #16]
  44b700:	cbnz	x0, 44b728 <_obstack_memory_used@@Base+0xa58c>
  44b704:	ldr	x1, [x2, #16]
  44b708:	cbz	x1, 44b714 <_obstack_memory_used@@Base+0xa578>
  44b70c:	ldrsb	w1, [x25, #56]
  44b710:	tbnz	w1, #31, 44b728 <_obstack_memory_used@@Base+0xa58c>
  44b714:	cmp	x19, #0x0
  44b718:	ccmp	x21, #0x0, #0x4, ne  // ne = any
  44b71c:	b.ne	44c5a0 <_obstack_memory_used@@Base+0xb404>  // b.any
  44b720:	mov	x21, x0
  44b724:	mov	x19, x0
  44b728:	mov	w20, #0x1                   	// #1
  44b72c:	ldr	x0, [sp, #160]
  44b730:	ldr	x1, [sp, #208]
  44b734:	subs	x0, x0, x1
  44b738:	str	x0, [sp, #200]
  44b73c:	b.ne	44b74c <_obstack_memory_used@@Base+0xa5b0>  // b.any
  44b740:	ldr	x0, [x27, #152]
  44b744:	cmp	x0, #0x0
  44b748:	cset	w20, ne  // ne = any
  44b74c:	ldr	x5, [x25, #40]
  44b750:	str	x5, [sp, #216]
  44b754:	ldr	x0, [x25, #24]
  44b758:	ldr	w3, [x27, #180]
  44b75c:	ldr	x1, [x27, #16]
  44b760:	add	x1, x1, #0x1
  44b764:	sxtw	x2, w3
  44b768:	cmp	x1, x2
  44b76c:	csel	x1, x1, x2, ge  // ge = tcont
  44b770:	ldr	x4, [sp, #152]
  44b774:	add	x2, x4, #0x1
  44b778:	cmp	x1, x2
  44b77c:	csel	x1, x1, x2, le
  44b780:	ldr	x2, [sp, #168]
  44b784:	str	x2, [sp, #328]
  44b788:	str	x4, [sp, #416]
  44b78c:	str	x4, [sp, #408]
  44b790:	str	x5, [sp, #448]
  44b794:	and	x2, x0, #0x400000
  44b798:	ubfx	w0, w0, #22, #1
  44b79c:	strb	w0, [sp, #464]
  44b7a0:	orr	x0, x2, x5
  44b7a4:	cmp	x0, #0x0
  44b7a8:	cset	w0, ne  // ne = any
  44b7ac:	strb	w0, [sp, #467]
  44b7b0:	str	w3, [sp, #472]
  44b7b4:	ldrb	w0, [x27, #176]
  44b7b8:	ubfx	x2, x0, #2, #1
  44b7bc:	strb	w2, [sp, #465]
  44b7c0:	ubfx	x0, x0, #3, #1
  44b7c4:	strb	w0, [sp, #466]
  44b7c8:	str	x4, [sp, #432]
  44b7cc:	str	x4, [sp, #424]
  44b7d0:	add	x0, sp, #0x148
  44b7d4:	bl	441f28 <_obstack_memory_used@@Base+0xd8c>
  44b7d8:	str	w0, [sp, #188]
  44b7dc:	cbnz	w0, 44c4c4 <_obstack_memory_used@@Base+0xb328>
  44b7e0:	stp	x23, x24, [sp, #48]
  44b7e4:	add	x0, x27, #0xb8
  44b7e8:	str	x0, [sp, #456]
  44b7ec:	ldrb	w0, [x27, #176]
  44b7f0:	ubfx	x0, x0, #4, #1
  44b7f4:	strb	w0, [sp, #470]
  44b7f8:	ldrb	w0, [sp, #467]
  44b7fc:	cbz	w0, 44c600 <_obstack_memory_used@@Base+0xb464>
  44b800:	mov	x0, #0x0                   	// #0
  44b804:	str	x0, [sp, #376]
  44b808:	str	x0, [sp, #384]
  44b80c:	str	x22, [sp, #432]
  44b810:	str	x22, [sp, #424]
  44b814:	ldrb	w0, [x25, #56]
  44b818:	ubfx	x0, x0, #7, #1
  44b81c:	strb	w0, [sp, #469]
  44b820:	ldr	x0, [x27, #152]
  44b824:	lsl	x22, x0, #1
  44b828:	ldr	w1, [sp, #120]
  44b82c:	str	w1, [sp, #488]
  44b830:	mov	x1, #0xffffffffffffffff    	// #-1
  44b834:	str	x1, [sp, #496]
  44b838:	cmp	xzr, x0, lsl #1
  44b83c:	b.ge	44b87c <_obstack_memory_used@@Base+0xa6e0>  // b.tcont
  44b840:	mov	x0, #0x6666666666666666    	// #7378697629483820646
  44b844:	movk	x0, #0x666, lsl #48
  44b848:	cmp	x22, x0
  44b84c:	b.hi	44c5f0 <_obstack_memory_used@@Base+0xb454>  // b.pmore
  44b850:	add	x0, x22, x22, lsl #2
  44b854:	lsl	x0, x0, #3
  44b858:	bl	404310 <malloc@plt>
  44b85c:	mov	x23, x0
  44b860:	str	x0, [sp, #544]
  44b864:	lsl	x0, x22, #3
  44b868:	bl	404310 <malloc@plt>
  44b86c:	str	x0, [sp, #576]
  44b870:	cmp	x23, #0x0
  44b874:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  44b878:	b.eq	44c5f0 <_obstack_memory_used@@Base+0xb454>  // b.none
  44b87c:	str	x22, [sp, #536]
  44b880:	mov	w0, #0x1                   	// #1
  44b884:	str	w0, [sp, #552]
  44b888:	str	x22, [sp, #568]
  44b88c:	ldr	x0, [sp, #200]
  44b890:	cmp	x0, #0x1
  44b894:	b.ls	44b9b8 <_obstack_memory_used@@Base+0xa81c>  // b.plast
  44b898:	ldr	x0, [sp, #392]
  44b89c:	mov	x1, #0x1ffffffffffffffe    	// #2305843009213693950
  44b8a0:	cmp	x0, x1
  44b8a4:	b.hi	44c4d0 <_obstack_memory_used@@Base+0xb334>  // b.pmore
  44b8a8:	add	x0, x0, #0x1
  44b8ac:	lsl	x0, x0, #3
  44b8b0:	bl	404310 <malloc@plt>
  44b8b4:	str	x0, [sp, #512]
  44b8b8:	cbz	x0, 44c4e0 <_obstack_memory_used@@Base+0xb344>
  44b8bc:	str	x19, [sp, #584]
  44b8c0:	ldr	x0, [sp, #120]
  44b8c4:	tst	x0, #0x1
  44b8c8:	mov	w0, #0x4                   	// #4
  44b8cc:	mov	w1, #0x6                   	// #6
  44b8d0:	csel	w0, w0, w1, ne  // ne = any
  44b8d4:	str	w0, [sp, #440]
  44b8d8:	mov	w0, #0x1                   	// #1
  44b8dc:	cmp	x19, x21
  44b8e0:	cneg	w0, w0, gt
  44b8e4:	str	w0, [sp, #192]
  44b8e8:	csel	x0, x19, x21, le
  44b8ec:	str	x0, [sp, #144]
  44b8f0:	csel	x0, x19, x21, ge  // ge = tcont
  44b8f4:	mov	x3, x0
  44b8f8:	ldr	w0, [x27, #180]
  44b8fc:	str	w0, [sp, #232]
  44b900:	mov	w1, #0x8                   	// #8
  44b904:	str	w1, [sp, #184]
  44b908:	cbz	x26, 44b95c <_obstack_memory_used@@Base+0xa7c0>
  44b90c:	mov	w2, #0x4                   	// #4
  44b910:	cmp	w0, #0x1
  44b914:	b.eq	44b934 <_obstack_memory_used@@Base+0xa798>  // b.none
  44b918:	ldr	x0, [x25, #24]
  44b91c:	and	x0, x0, #0x400000
  44b920:	ldr	x1, [sp, #216]
  44b924:	orr	x0, x1, x0
  44b928:	cmp	x0, #0x0
  44b92c:	ldr	w0, [sp, #188]
  44b930:	csel	w2, w0, w2, ne  // ne = any
  44b934:	cmp	x19, x21
  44b938:	mov	w0, #0x2                   	// #2
  44b93c:	ldr	w1, [sp, #188]
  44b940:	csel	w0, w1, w0, gt
  44b944:	ldr	x1, [sp, #216]
  44b948:	cmp	x1, #0x0
  44b94c:	cset	w1, ne  // ne = any
  44b950:	orr	w1, w1, w2
  44b954:	orr	w0, w1, w0
  44b958:	str	w0, [sp, #184]
  44b95c:	ldr	x0, [sp, #144]
  44b960:	cmp	x19, x0
  44b964:	cset	w1, lt  // lt = tstop
  44b968:	cmp	x19, x3
  44b96c:	cset	w0, gt
  44b970:	orr	w0, w1, w0
  44b974:	str	w0, [sp, #196]
  44b978:	cbnz	w0, 44c4f0 <_obstack_memory_used@@Base+0xb354>
  44b97c:	str	w20, [sp, #136]
  44b980:	cmp	x19, x21
  44b984:	add	x0, sp, #0x248
  44b988:	csel	x0, x0, xzr, le
  44b98c:	str	x0, [sp, #240]
  44b990:	cmp	x0, #0x0
  44b994:	cset	w0, ne  // ne = any
  44b998:	str	w0, [sp, #236]
  44b99c:	str	x27, [sp, #176]
  44b9a0:	str	x25, [sp, #224]
  44b9a4:	mov	x25, x3
  44b9a8:	b	44c660 <_obstack_memory_used@@Base+0xb4c4>
  44b9ac:	tst	x0, #0x1
  44b9b0:	csel	x26, x26, xzr, eq  // eq = none
  44b9b4:	b	44b6b0 <_obstack_memory_used@@Base+0xa514>
  44b9b8:	ldrb	w0, [x27, #176]
  44b9bc:	tbnz	w0, #1, 44b898 <_obstack_memory_used@@Base+0xa6fc>
  44b9c0:	str	xzr, [sp, #512]
  44b9c4:	b	44b8bc <_obstack_memory_used@@Base+0xa720>
  44b9c8:	cmp	w0, #0x3
  44b9cc:	b.gt	44ba6c <_obstack_memory_used@@Base+0xa8d0>
  44b9d0:	ldr	w20, [sp, #188]
  44b9d4:	ldrsw	x21, [sp, #192]
  44b9d8:	ldr	x23, [sp, #144]
  44b9dc:	ldr	x22, [sp, #152]
  44b9e0:	b	44bca4 <_obstack_memory_used@@Base+0xab08>
  44b9e4:	ldr	x0, [sp, #584]
  44b9e8:	ldr	w2, [sp, #196]
  44b9ec:	mov	w3, #0x1                   	// #1
  44b9f0:	cmp	x25, x0
  44b9f4:	b.le	44bab8 <_obstack_memory_used@@Base+0xa91c>
  44b9f8:	ldr	x4, [sp, #216]
  44b9fc:	ldr	x5, [sp, #168]
  44ba00:	ldrb	w1, [x5, x0]
  44ba04:	ldrb	w1, [x4, x1]
  44ba08:	ldrb	w1, [x26, x1]
  44ba0c:	cbnz	w1, 44bab0 <_obstack_memory_used@@Base+0xa914>
  44ba10:	add	x0, x0, #0x1
  44ba14:	mov	w2, w3
  44ba18:	cmp	x0, x25
  44ba1c:	b.ne	44ba00 <_obstack_memory_used@@Base+0xa864>  // b.any
  44ba20:	str	x25, [sp, #584]
  44ba24:	ldr	x0, [sp, #584]
  44ba28:	ldr	w1, [sp, #188]
  44ba2c:	ldr	x2, [sp, #152]
  44ba30:	cmp	x2, x0
  44ba34:	b.le	44ba40 <_obstack_memory_used@@Base+0xa8a4>
  44ba38:	ldr	x1, [sp, #168]
  44ba3c:	ldrb	w1, [x1, x0]
  44ba40:	sxtw	x0, w1
  44ba44:	ldr	x2, [sp, #216]
  44ba48:	cbz	x2, 44ba50 <_obstack_memory_used@@Base+0xa8b4>
  44ba4c:	ldrb	w0, [x2, w1, sxtw]
  44ba50:	ldrb	w0, [x26, x0]
  44ba54:	cbnz	w0, 44bac4 <_obstack_memory_used@@Base+0xa928>
  44ba58:	ldr	x27, [sp, #176]
  44ba5c:	mov	w0, #0x1                   	// #1
  44ba60:	str	w0, [sp, #140]
  44ba64:	ldp	x23, x24, [sp, #48]
  44ba68:	b	44bc00 <_obstack_memory_used@@Base+0xaa64>
  44ba6c:	ldr	x0, [sp, #584]
  44ba70:	ldr	x1, [sp, #144]
  44ba74:	cmp	x1, x0
  44ba78:	b.gt	44ba9c <_obstack_memory_used@@Base+0xa900>
  44ba7c:	ldr	w3, [sp, #196]
  44ba80:	ldr	w4, [sp, #188]
  44ba84:	mov	w5, #0x1                   	// #1
  44ba88:	ldr	x6, [sp, #216]
  44ba8c:	ldr	x8, [sp, #144]
  44ba90:	ldr	x9, [sp, #168]
  44ba94:	ldr	x7, [sp, #152]
  44ba98:	b	44bbd8 <_obstack_memory_used@@Base+0xaa3c>
  44ba9c:	ldr	x27, [sp, #176]
  44baa0:	mov	w0, #0x1                   	// #1
  44baa4:	str	w0, [sp, #140]
  44baa8:	ldp	x23, x24, [sp, #48]
  44baac:	b	44bc00 <_obstack_memory_used@@Base+0xaa64>
  44bab0:	cbz	w2, 44bac4 <_obstack_memory_used@@Base+0xa928>
  44bab4:	str	x0, [sp, #584]
  44bab8:	ldr	x0, [sp, #584]
  44babc:	cmp	x0, x25
  44bac0:	b.eq	44ba28 <_obstack_memory_used@@Base+0xa88c>  // b.none
  44bac4:	ldr	w2, [sp, #120]
  44bac8:	ldr	x1, [sp, #584]
  44bacc:	add	x0, sp, #0x148
  44bad0:	bl	4466f8 <_obstack_memory_used@@Base+0x555c>
  44bad4:	str	w0, [sp, #140]
  44bad8:	cbnz	w0, 44c524 <_obstack_memory_used@@Base+0xb388>
  44badc:	ldr	w0, [sp, #232]
  44bae0:	cmp	w0, #0x1
  44bae4:	b.eq	44bb00 <_obstack_memory_used@@Base+0xa964>  // b.none
  44bae8:	ldr	x0, [sp, #376]
  44baec:	cbz	x0, 44bb00 <_obstack_memory_used@@Base+0xa964>
  44baf0:	ldr	x0, [sp, #344]
  44baf4:	ldr	w0, [x0]
  44baf8:	cmn	w0, #0x1
  44bafc:	b.eq	44c640 <_obstack_memory_used@@Base+0xb4a4>  // b.none
  44bb00:	str	wzr, [sp, #552]
  44bb04:	str	xzr, [sp, #528]
  44bb08:	str	xzr, [sp, #520]
  44bb0c:	ldr	x19, [sp, #480]
  44bb10:	ldr	x0, [sp, #400]
  44bb14:	mov	x1, x0
  44bb18:	str	x0, [sp, #112]
  44bb1c:	str	wzr, [sp, #264]
  44bb20:	ldr	x20, [x19, #72]
  44bb24:	ldrsb	w0, [x20, #104]
  44bb28:	tbz	w0, #31, 44bce8 <_obstack_memory_used@@Base+0xab4c>
  44bb2c:	ldr	w2, [sp, #488]
  44bb30:	sub	x1, x1, #0x1
  44bb34:	add	x0, sp, #0x148
  44bb38:	bl	443888 <_obstack_memory_used@@Base+0x26ec>
  44bb3c:	tbnz	w0, #0, 44bce0 <_obstack_memory_used@@Base+0xab44>
  44bb40:	cbz	w0, 44bce8 <_obstack_memory_used@@Base+0xab4c>
  44bb44:	and	w1, w0, #0x6
  44bb48:	cmp	w1, #0x6
  44bb4c:	b.eq	44bd44 <_obstack_memory_used@@Base+0xaba8>  // b.none
  44bb50:	tbnz	w0, #1, 44bd4c <_obstack_memory_used@@Base+0xabb0>
  44bb54:	tbz	w0, #2, 44bce8 <_obstack_memory_used@@Base+0xab4c>
  44bb58:	mov	w3, w0
  44bb5c:	ldr	x2, [x20, #80]
  44bb60:	mov	x1, x19
  44bb64:	add	x0, sp, #0x108
  44bb68:	bl	444d04 <_obstack_memory_used@@Base+0x3b68>
  44bb6c:	mov	x20, x0
  44bb70:	cbnz	x0, 44bce8 <_obstack_memory_used@@Base+0xab4c>
  44bb74:	ldr	x27, [sp, #176]
  44bb78:	ldr	w0, [sp, #264]
  44bb7c:	cmp	w0, #0xc
  44bb80:	b.eq	44c5d8 <_obstack_memory_used@@Base+0xb43c>  // b.none
  44bb84:	adrp	x3, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  44bb88:	add	x3, x3, #0xe8
  44bb8c:	add	x3, x3, #0x58
  44bb90:	mov	w2, #0x435                 	// #1077
  44bb94:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  44bb98:	add	x1, x1, #0x3e8
  44bb9c:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  44bba0:	add	x0, x0, #0x470
  44bba4:	bl	404ac0 <__assert_fail@plt>
  44bba8:	cbz	w2, 44bac4 <_obstack_memory_used@@Base+0xa928>
  44bbac:	str	x0, [sp, #584]
  44bbb0:	b	44bab8 <_obstack_memory_used@@Base+0xa91c>
  44bbb4:	sxtw	x2, w1
  44bbb8:	cbz	x6, 44bbc0 <_obstack_memory_used@@Base+0xaa24>
  44bbbc:	ldrb	w2, [x6, w1, sxtw]
  44bbc0:	ldrb	w1, [x26, x2]
  44bbc4:	cbnz	w1, 44bc38 <_obstack_memory_used@@Base+0xaa9c>
  44bbc8:	sub	x0, x0, #0x1
  44bbcc:	mov	w3, w5
  44bbd0:	cmp	x0, x8
  44bbd4:	b.lt	44bbec <_obstack_memory_used@@Base+0xaa50>  // b.tstop
  44bbd8:	mov	w1, w4
  44bbdc:	cmp	x7, x0
  44bbe0:	b.le	44bbb4 <_obstack_memory_used@@Base+0xaa18>
  44bbe4:	ldrb	w1, [x9, x0]
  44bbe8:	b	44bbb4 <_obstack_memory_used@@Base+0xaa18>
  44bbec:	ldr	x27, [sp, #176]
  44bbf0:	str	x0, [sp, #584]
  44bbf4:	mov	w0, #0x1                   	// #1
  44bbf8:	str	w0, [sp, #140]
  44bbfc:	ldp	x23, x24, [sp, #48]
  44bc00:	ldr	x0, [sp, #512]
  44bc04:	bl	4047c0 <free@plt>
  44bc08:	ldr	x0, [x27, #152]
  44bc0c:	cbnz	x0, 44c548 <_obstack_memory_used@@Base+0xb3ac>
  44bc10:	add	x0, sp, #0x148
  44bc14:	bl	44501c <_obstack_memory_used@@Base+0x3e80>
  44bc18:	ldr	w0, [sp, #140]
  44bc1c:	ldp	x19, x20, [sp, #16]
  44bc20:	ldp	x21, x22, [sp, #32]
  44bc24:	ldp	x25, x26, [sp, #64]
  44bc28:	ldp	x27, x28, [sp, #80]
  44bc2c:	ldp	x29, x30, [sp]
  44bc30:	add	sp, sp, #0x250
  44bc34:	ret
  44bc38:	cbz	w3, 44bc40 <_obstack_memory_used@@Base+0xaaa4>
  44bc3c:	str	x0, [sp, #584]
  44bc40:	ldr	x1, [sp, #144]
  44bc44:	cmp	x1, x0
  44bc48:	b.le	44bac4 <_obstack_memory_used@@Base+0xa928>
  44bc4c:	ldr	x27, [sp, #176]
  44bc50:	mov	w0, #0x1                   	// #1
  44bc54:	str	w0, [sp, #140]
  44bc58:	ldp	x23, x24, [sp, #48]
  44bc5c:	b	44bc00 <_obstack_memory_used@@Base+0xaa64>
  44bc60:	ldr	w2, [sp, #120]
  44bc64:	mov	x1, x19
  44bc68:	add	x0, sp, #0x148
  44bc6c:	bl	4466f8 <_obstack_memory_used@@Base+0x555c>
  44bc70:	cbnz	w0, 44c514 <_obstack_memory_used@@Base+0xb378>
  44bc74:	ldr	x0, [sp, #368]
  44bc78:	sub	x0, x19, x0
  44bc7c:	b	44bcbc <_obstack_memory_used@@Base+0xab20>
  44bc80:	ldr	x1, [sp, #336]
  44bc84:	ldrb	w1, [x1, x0]
  44bc88:	ldrb	w0, [x26, w1, sxtw]
  44bc8c:	cbnz	w0, 44bac4 <_obstack_memory_used@@Base+0xa928>
  44bc90:	add	x19, x21, x19
  44bc94:	str	x19, [sp, #584]
  44bc98:	cmp	x19, x23
  44bc9c:	ccmp	x19, x25, #0x0, ge  // ge = tcont
  44bca0:	b.gt	44bccc <_obstack_memory_used@@Base+0xab30>
  44bca4:	ldr	x19, [sp, #584]
  44bca8:	ldr	x0, [sp, #368]
  44bcac:	sub	x0, x19, x0
  44bcb0:	ldr	x1, [sp, #384]
  44bcb4:	cmp	x1, x0
  44bcb8:	b.ls	44bc60 <_obstack_memory_used@@Base+0xaac4>  // b.plast
  44bcbc:	mov	w1, w20
  44bcc0:	cmp	x19, x22
  44bcc4:	b.ge	44bc88 <_obstack_memory_used@@Base+0xaaec>  // b.tcont
  44bcc8:	b	44bc80 <_obstack_memory_used@@Base+0xaae4>
  44bccc:	ldr	x27, [sp, #176]
  44bcd0:	mov	w0, #0x1                   	// #1
  44bcd4:	str	w0, [sp, #140]
  44bcd8:	ldp	x23, x24, [sp, #48]
  44bcdc:	b	44bc00 <_obstack_memory_used@@Base+0xaa64>
  44bce0:	ldr	x20, [x19, #80]
  44bce4:	cbz	x20, 44bb84 <_obstack_memory_used@@Base+0xa9e8>
  44bce8:	ldr	x0, [sp, #512]
  44bcec:	cbz	x0, 44bda8 <_obstack_memory_used@@Base+0xac0c>
  44bcf0:	ldr	x1, [sp, #112]
  44bcf4:	str	x20, [x0, x1, lsl #3]
  44bcf8:	ldr	x0, [x19, #152]
  44bcfc:	ldr	w1, [sp, #236]
  44bd00:	mov	w22, w1
  44bd04:	cbnz	x0, 44bd54 <_obstack_memory_used@@Base+0xabb8>
  44bd08:	ldrb	w0, [x20, #104]
  44bd0c:	mov	x28, #0xffffffffffffffff    	// #-1
  44bd10:	mov	x27, #0x0                   	// #0
  44bd14:	tbnz	w0, #4, 44bdb4 <_obstack_memory_used@@Base+0xac18>
  44bd18:	ldr	x21, [sp, #400]
  44bd1c:	ldr	x0, [sp, #240]
  44bd20:	str	x0, [sp, #104]
  44bd24:	ldr	x0, [sp, #432]
  44bd28:	cmp	x0, x21
  44bd2c:	b.le	44c1a0 <_obstack_memory_used@@Base+0xb004>
  44bd30:	add	x0, sp, #0x110
  44bd34:	str	x0, [sp, #96]
  44bd38:	str	x25, [sp, #128]
  44bd3c:	mov	w25, w22
  44bd40:	b	44c108 <_obstack_memory_used@@Base+0xaf6c>
  44bd44:	ldr	x20, [x19, #96]
  44bd48:	b	44bce4 <_obstack_memory_used@@Base+0xab48>
  44bd4c:	ldr	x20, [x19, #88]
  44bd50:	b	44bce4 <_obstack_memory_used@@Base+0xab48>
  44bd54:	add	x19, x20, #0x8
  44bd58:	mov	x2, #0x0                   	// #0
  44bd5c:	mov	x1, x19
  44bd60:	add	x0, sp, #0x148
  44bd64:	bl	442798 <_obstack_memory_used@@Base+0x15fc>
  44bd68:	str	w0, [sp, #264]
  44bd6c:	sxtw	x28, w0
  44bd70:	cbnz	w0, 44c1e0 <_obstack_memory_used@@Base+0xb044>
  44bd74:	ldrb	w0, [x20, #104]
  44bd78:	ldr	w1, [sp, #196]
  44bd7c:	mov	w22, w1
  44bd80:	tbz	w0, #6, 44bd08 <_obstack_memory_used@@Base+0xab6c>
  44bd84:	mov	x1, x19
  44bd88:	add	x0, sp, #0x148
  44bd8c:	bl	44a51c <_obstack_memory_used@@Base+0x9380>
  44bd90:	str	w0, [sp, #264]
  44bd94:	ldr	w1, [sp, #196]
  44bd98:	mov	w22, w1
  44bd9c:	sxtw	x28, w0
  44bda0:	cbz	w0, 44bd08 <_obstack_memory_used@@Base+0xab6c>
  44bda4:	b	44c1e0 <_obstack_memory_used@@Base+0xb044>
  44bda8:	ldr	w0, [sp, #236]
  44bdac:	mov	w22, w0
  44bdb0:	b	44bd08 <_obstack_memory_used@@Base+0xab6c>
  44bdb4:	ldrsb	w0, [x20, #104]
  44bdb8:	tbnz	w0, #31, 44bdd0 <_obstack_memory_used@@Base+0xac34>
  44bdbc:	ldr	x28, [sp, #112]
  44bdc0:	mov	x27, #0x1                   	// #1
  44bdc4:	ldr	w0, [sp, #136]
  44bdc8:	cbnz	w0, 44bd18 <_obstack_memory_used@@Base+0xab7c>
  44bdcc:	b	44c1e0 <_obstack_memory_used@@Base+0xb044>
  44bdd0:	ldr	x2, [sp, #112]
  44bdd4:	mov	x1, x20
  44bdd8:	add	x0, sp, #0x148
  44bddc:	bl	443ab0 <_obstack_memory_used@@Base+0x2914>
  44bde0:	mov	x27, x0
  44bde4:	cbnz	x0, 44bdbc <_obstack_memory_used@@Base+0xac20>
  44bde8:	mov	x28, #0xffffffffffffffff    	// #-1
  44bdec:	b	44bd18 <_obstack_memory_used@@Base+0xab7c>
  44bdf0:	ldr	x1, [sp, #416]
  44bdf4:	cmp	x0, x1
  44bdf8:	b.ge	44c118 <_obstack_memory_used@@Base+0xaf7c>  // b.tcont
  44bdfc:	add	w1, w21, #0x1
  44be00:	add	x0, sp, #0x148
  44be04:	bl	443704 <_obstack_memory_used@@Base+0x2568>
  44be08:	str	w0, [sp, #264]
  44be0c:	cbz	w0, 44c124 <_obstack_memory_used@@Base+0xaf88>
  44be10:	ldr	x27, [sp, #176]
  44be14:	cmp	w0, #0xc
  44be18:	b.eq	44c5d8 <_obstack_memory_used@@Base+0xb43c>  // b.none
  44be1c:	adrp	x3, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  44be20:	add	x3, x3, #0xe8
  44be24:	add	x3, x3, #0x58
  44be28:	mov	w2, #0x46c                 	// #1132
  44be2c:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  44be30:	add	x1, x1, #0x3e8
  44be34:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  44be38:	add	x0, x0, #0x470
  44be3c:	bl	404ac0 <__assert_fail@plt>
  44be40:	ldr	x1, [sp, #416]
  44be44:	cmp	x0, x1
  44be48:	b.ge	44c124 <_obstack_memory_used@@Base+0xaf88>  // b.tcont
  44be4c:	b	44bdfc <_obstack_memory_used@@Base+0xac60>
  44be50:	ldr	x22, [sp, #480]
  44be54:	ldr	x0, [x20, #16]
  44be58:	cmp	x0, #0x0
  44be5c:	b.le	44c5e8 <_obstack_memory_used@@Base+0xb44c>
  44be60:	mov	x23, #0x0                   	// #0
  44be64:	b	44bf48 <_obstack_memory_used@@Base+0xadac>
  44be68:	tbz	w1, #3, 44be70 <_obstack_memory_used@@Base+0xacd4>
  44be6c:	tbnz	w0, #0, 44bf38 <_obstack_memory_used@@Base+0xad9c>
  44be70:	tbz	w1, #5, 44be78 <_obstack_memory_used@@Base+0xacdc>
  44be74:	tbz	w0, #1, 44bf38 <_obstack_memory_used@@Base+0xad9c>
  44be78:	tbz	w1, #7, 44be80 <_obstack_memory_used@@Base+0xace4>
  44be7c:	tbz	w0, #3, 44bf38 <_obstack_memory_used@@Base+0xad9c>
  44be80:	ldr	x3, [sp, #400]
  44be84:	add	x2, sp, #0x148
  44be88:	mov	x1, x24
  44be8c:	mov	x0, x22
  44be90:	bl	4463c0 <_obstack_memory_used@@Base+0x5224>
  44be94:	cbz	w0, 44bf38 <_obstack_memory_used@@Base+0xad9c>
  44be98:	ldr	x19, [sp, #400]
  44be9c:	add	x19, x19, w0, sxtw
  44bea0:	ldr	w1, [sp, #552]
  44bea4:	cmp	w1, w0
  44bea8:	csel	w0, w1, w0, ge  // ge = tcont
  44beac:	str	w0, [sp, #552]
  44beb0:	mov	x1, x19
  44beb4:	add	x0, sp, #0x148
  44beb8:	bl	4437e8 <_obstack_memory_used@@Base+0x264c>
  44bebc:	str	w0, [sp, #268]
  44bec0:	cbnz	w0, 44bfd8 <_obstack_memory_used@@Base+0xae3c>
  44bec4:	ldr	x0, [x22, #24]
  44bec8:	ldr	x2, [x0, x24, lsl #3]
  44becc:	add	x2, x2, x2, lsl #1
  44bed0:	ldr	x0, [x22, #48]
  44bed4:	add	x2, x0, x2, lsl #3
  44bed8:	ldr	x24, [sp, #512]
  44bedc:	ldr	x0, [x24, x19, lsl #3]
  44bee0:	cbz	x0, 44bf94 <_obstack_memory_used@@Base+0xadf8>
  44bee4:	ldr	x1, [x0, #80]
  44bee8:	ldr	x0, [sp, #96]
  44beec:	bl	442f28 <_obstack_memory_used@@Base+0x1d8c>
  44bef0:	str	w0, [sp, #268]
  44bef4:	cbnz	w0, 44bfd8 <_obstack_memory_used@@Base+0xae3c>
  44bef8:	ldr	w2, [sp, #488]
  44befc:	sub	x1, x19, #0x1
  44bf00:	add	x0, sp, #0x148
  44bf04:	bl	443888 <_obstack_memory_used@@Base+0x26ec>
  44bf08:	ldr	x24, [sp, #512]
  44bf0c:	mov	w3, w0
  44bf10:	ldr	x2, [sp, #96]
  44bf14:	mov	x1, x22
  44bf18:	add	x0, sp, #0x10c
  44bf1c:	bl	444d04 <_obstack_memory_used@@Base+0x3b68>
  44bf20:	str	x0, [x24, x19, lsl #3]
  44bf24:	ldr	x0, [sp, #288]
  44bf28:	bl	4047c0 <free@plt>
  44bf2c:	ldr	x0, [sp, #512]
  44bf30:	ldr	x0, [x0, x19, lsl #3]
  44bf34:	cbz	x0, 44bfd0 <_obstack_memory_used@@Base+0xae34>
  44bf38:	add	x23, x23, #0x1
  44bf3c:	ldr	x0, [x20, #16]
  44bf40:	cmp	x23, x0
  44bf44:	b.ge	44c5e8 <_obstack_memory_used@@Base+0xb44c>  // b.tcont
  44bf48:	ldr	x0, [x20, #24]
  44bf4c:	ldr	x24, [x0, x23, lsl #3]
  44bf50:	ldr	x19, [x22]
  44bf54:	add	x19, x19, x24, lsl #4
  44bf58:	ldrb	w0, [x19, #10]
  44bf5c:	tbz	w0, #4, 44bf38 <_obstack_memory_used@@Base+0xad9c>
  44bf60:	ldr	w0, [x19, #8]
  44bf64:	tst	w0, #0x3ff00
  44bf68:	b.eq	44be80 <_obstack_memory_used@@Base+0xace4>  // b.none
  44bf6c:	ldr	w2, [sp, #488]
  44bf70:	ldr	x1, [sp, #400]
  44bf74:	add	x0, sp, #0x148
  44bf78:	bl	443888 <_obstack_memory_used@@Base+0x26ec>
  44bf7c:	ldr	w2, [x19, #8]
  44bf80:	ubfx	x1, x2, #8, #10
  44bf84:	tbz	w2, #10, 44be68 <_obstack_memory_used@@Base+0xaccc>
  44bf88:	tbz	w0, #0, 44bf38 <_obstack_memory_used@@Base+0xad9c>
  44bf8c:	tbz	w1, #3, 44be70 <_obstack_memory_used@@Base+0xacd4>
  44bf90:	b	44bf38 <_obstack_memory_used@@Base+0xad9c>
  44bf94:	ldp	x0, x1, [x2]
  44bf98:	stp	x0, x1, [sp, #272]
  44bf9c:	ldr	x0, [x2, #16]
  44bfa0:	str	x0, [sp, #288]
  44bfa4:	ldr	w2, [sp, #488]
  44bfa8:	sub	x1, x19, #0x1
  44bfac:	add	x0, sp, #0x148
  44bfb0:	bl	443888 <_obstack_memory_used@@Base+0x26ec>
  44bfb4:	mov	w3, w0
  44bfb8:	ldr	x2, [sp, #96]
  44bfbc:	mov	x1, x22
  44bfc0:	add	x0, sp, #0x10c
  44bfc4:	bl	444d04 <_obstack_memory_used@@Base+0x3b68>
  44bfc8:	str	x0, [x24, x19, lsl #3]
  44bfcc:	b	44bf2c <_obstack_memory_used@@Base+0xad90>
  44bfd0:	ldr	w0, [sp, #268]
  44bfd4:	cbz	w0, 44bf38 <_obstack_memory_used@@Base+0xad9c>
  44bfd8:	str	w0, [sp, #264]
  44bfdc:	ldr	x0, [sp, #512]
  44bfe0:	cbz	x0, 44c7f0 <_obstack_memory_used@@Base+0xb654>
  44bfe4:	mov	x19, #0x0                   	// #0
  44bfe8:	b	44c158 <_obstack_memory_used@@Base+0xafbc>
  44bfec:	ldr	x22, [x20, #96]
  44bff0:	cbz	x22, 44c024 <_obstack_memory_used@@Base+0xae88>
  44bff4:	ldr	w2, [sp, #488]
  44bff8:	ldr	x1, [sp, #400]
  44bffc:	sub	x1, x1, #0x1
  44c000:	add	x0, sp, #0x148
  44c004:	bl	443888 <_obstack_memory_used@@Base+0x26ec>
  44c008:	tbz	w0, #0, 44c018 <_obstack_memory_used@@Base+0xae7c>
  44c00c:	add	x19, x22, w19, uxtb #3
  44c010:	ldr	x19, [x19, #2048]
  44c014:	b	44c150 <_obstack_memory_used@@Base+0xafb4>
  44c018:	and	x19, x19, #0xff
  44c01c:	ldr	x19, [x22, x19, lsl #3]
  44c020:	b	44c150 <_obstack_memory_used@@Base+0xafb4>
  44c024:	mov	x1, x20
  44c028:	ldr	x0, [sp, #480]
  44c02c:	bl	44731c <_obstack_memory_used@@Base+0x6180>
  44c030:	and	w0, w0, #0xff
  44c034:	cbnz	w0, 44c140 <_obstack_memory_used@@Base+0xafa4>
  44c038:	mov	w0, #0xc                   	// #12
  44c03c:	str	w0, [sp, #264]
  44c040:	b	44bfdc <_obstack_memory_used@@Base+0xae40>
  44c044:	ldr	w0, [sp, #264]
  44c048:	cbnz	w0, 44c5d4 <_obstack_memory_used@@Base+0xb438>
  44c04c:	ldr	x0, [sp, #512]
  44c050:	cbz	x0, 44c1b4 <_obstack_memory_used@@Base+0xb018>
  44c054:	cmp	x27, #0x0
  44c058:	ldr	w0, [sp, #136]
  44c05c:	eor	w0, w0, #0x1
  44c060:	csel	w0, w0, wzr, ne  // ne = any
  44c064:	cbnz	w0, 44c1bc <_obstack_memory_used@@Base+0xb020>
  44c068:	ldr	x3, [sp, #520]
  44c06c:	ldr	x0, [sp, #400]
  44c070:	ldr	x2, [sp, #512]
  44c074:	add	x0, x0, #0x1
  44c078:	cmp	x3, x0
  44c07c:	b.lt	44c1c4 <_obstack_memory_used@@Base+0xb028>  // b.tstop
  44c080:	ldr	x1, [sp, #400]
  44c084:	add	x1, x1, #0x1
  44c088:	str	x1, [sp, #400]
  44c08c:	ldr	x1, [x2, x0, lsl #3]
  44c090:	cbz	x1, 44c074 <_obstack_memory_used@@Base+0xaed8>
  44c094:	mov	x2, #0x0                   	// #0
  44c098:	add	x1, sp, #0x148
  44c09c:	add	x0, sp, #0x108
  44c0a0:	bl	44abdc <_obstack_memory_used@@Base+0x9a40>
  44c0a4:	ldr	w1, [sp, #264]
  44c0a8:	cmp	w1, #0x0
  44c0ac:	ccmp	x0, #0x0, #0x0, eq  // eq = none
  44c0b0:	b.eq	44c068 <_obstack_memory_used@@Base+0xaecc>  // b.none
  44c0b4:	mov	x19, x0
  44c0b8:	cbnz	x0, 44c170 <_obstack_memory_used@@Base+0xafd4>
  44c0bc:	ldr	x25, [sp, #128]
  44c0c0:	b	44c1c8 <_obstack_memory_used@@Base+0xb02c>
  44c0c4:	cmp	x20, x19
  44c0c8:	ldr	w0, [sp, #196]
  44c0cc:	csel	w25, w25, w0, eq  // eq = none
  44c0d0:	ldr	x0, [sp, #112]
  44c0d4:	csel	x0, x21, x0, eq  // eq = none
  44c0d8:	str	x0, [sp, #112]
  44c0dc:	b	44c174 <_obstack_memory_used@@Base+0xafd8>
  44c0e0:	ldr	x28, [sp, #400]
  44c0e4:	ldr	w0, [sp, #136]
  44c0e8:	cbz	w0, 44c198 <_obstack_memory_used@@Base+0xaffc>
  44c0ec:	mov	x27, #0x1                   	// #1
  44c0f0:	str	xzr, [sp, #104]
  44c0f4:	ldr	x21, [sp, #400]
  44c0f8:	ldr	x0, [sp, #432]
  44c0fc:	cmp	x21, x0
  44c100:	b.ge	44c1ac <_obstack_memory_used@@Base+0xb010>  // b.tcont
  44c104:	mov	x20, x19
  44c108:	add	x21, x21, #0x1
  44c10c:	ldr	x0, [sp, #392]
  44c110:	cmp	x21, x0
  44c114:	b.ge	44bdf0 <_obstack_memory_used@@Base+0xac54>  // b.tcont
  44c118:	ldr	x0, [sp, #376]
  44c11c:	cmp	x21, x0
  44c120:	b.ge	44be40 <_obstack_memory_used@@Base+0xaca4>  // b.tcont
  44c124:	ldrb	w0, [x20, #104]
  44c128:	tbnz	w0, #5, 44be50 <_obstack_memory_used@@Base+0xacb4>
  44c12c:	ldr	x0, [sp, #400]
  44c130:	add	x1, x0, #0x1
  44c134:	str	x1, [sp, #400]
  44c138:	ldr	x1, [sp, #336]
  44c13c:	ldrb	w19, [x1, x0]
  44c140:	ldr	x0, [x20, #88]
  44c144:	cbz	x0, 44bfec <_obstack_memory_used@@Base+0xae50>
  44c148:	and	x19, x19, #0xff
  44c14c:	ldr	x19, [x0, x19, lsl #3]
  44c150:	ldr	x0, [sp, #512]
  44c154:	cbz	x0, 44c16c <_obstack_memory_used@@Base+0xafd0>
  44c158:	mov	x2, x19
  44c15c:	add	x1, sp, #0x148
  44c160:	add	x0, sp, #0x108
  44c164:	bl	44abdc <_obstack_memory_used@@Base+0x9a40>
  44c168:	mov	x19, x0
  44c16c:	cbz	x19, 44c044 <_obstack_memory_used@@Base+0xaea8>
  44c170:	cbnz	w25, 44c0c4 <_obstack_memory_used@@Base+0xaf28>
  44c174:	ldrb	w0, [x19, #104]
  44c178:	tbz	w0, #4, 44c0f4 <_obstack_memory_used@@Base+0xaf58>
  44c17c:	tbz	w0, #7, 44c0e0 <_obstack_memory_used@@Base+0xaf44>
  44c180:	ldr	x2, [sp, #400]
  44c184:	mov	x1, x19
  44c188:	add	x0, sp, #0x148
  44c18c:	bl	443ab0 <_obstack_memory_used@@Base+0x2914>
  44c190:	cbz	x0, 44c0f4 <_obstack_memory_used@@Base+0xaf58>
  44c194:	b	44c0e0 <_obstack_memory_used@@Base+0xaf44>
  44c198:	ldr	x25, [sp, #128]
  44c19c:	b	44c1e0 <_obstack_memory_used@@Base+0xb044>
  44c1a0:	ldr	x0, [sp, #240]
  44c1a4:	str	x0, [sp, #104]
  44c1a8:	b	44c1c8 <_obstack_memory_used@@Base+0xb02c>
  44c1ac:	ldr	x25, [sp, #128]
  44c1b0:	b	44c1c8 <_obstack_memory_used@@Base+0xb02c>
  44c1b4:	ldr	x25, [sp, #128]
  44c1b8:	b	44c1c8 <_obstack_memory_used@@Base+0xb02c>
  44c1bc:	ldr	x25, [sp, #128]
  44c1c0:	b	44c1c8 <_obstack_memory_used@@Base+0xb02c>
  44c1c4:	ldr	x25, [sp, #128]
  44c1c8:	ldr	x1, [sp, #104]
  44c1cc:	cbz	x1, 44c1e0 <_obstack_memory_used@@Base+0xb044>
  44c1d0:	ldr	x0, [x1]
  44c1d4:	ldr	x2, [sp, #112]
  44c1d8:	add	x0, x0, x2
  44c1dc:	str	x0, [x1]
  44c1e0:	cmn	x28, #0x1
  44c1e4:	b.eq	44c638 <_obstack_memory_used@@Base+0xb49c>  // b.none
  44c1e8:	cmn	x28, #0x2
  44c1ec:	b.eq	44c500 <_obstack_memory_used@@Base+0xb364>  // b.none
  44c1f0:	str	x28, [sp, #496]
  44c1f4:	ldr	x0, [sp, #200]
  44c1f8:	cmp	x0, #0x1
  44c1fc:	cset	w23, hi  // hi = pmore
  44c200:	ldr	x1, [sp, #224]
  44c204:	ldrb	w0, [x1, #56]
  44c208:	tst	x0, #0x10
  44c20c:	ccmp	w23, #0x0, #0x4, eq  // eq = none
  44c210:	b.ne	44c6f8 <_obstack_memory_used@@Base+0xb55c>  // b.any
  44c214:	ldr	x27, [sp, #176]
  44c218:	ldr	x0, [x27, #152]
  44c21c:	cbnz	x0, 44c720 <_obstack_memory_used@@Base+0xb584>
  44c220:	mov	x25, x1
  44c224:	ldr	x1, [sp, #200]
  44c228:	cbz	x1, 44c530 <_obstack_memory_used@@Base+0xb394>
  44c22c:	cmp	x1, #0x1
  44c230:	b.ls	44c5ac <_obstack_memory_used@@Base+0xb410>  // b.plast
  44c234:	ldr	x2, [sp, #248]
  44c238:	add	x0, x2, #0x10
  44c23c:	add	x2, x2, x1, lsl #4
  44c240:	mov	x1, #0xffffffffffffffff    	// #-1
  44c244:	str	x1, [x0, #8]
  44c248:	str	x1, [x0], #16
  44c24c:	cmp	x2, x0
  44c250:	b.ne	44c244 <_obstack_memory_used@@Base+0xb0a8>  // b.any
  44c254:	ldr	x1, [sp, #248]
  44c258:	str	xzr, [x1]
  44c25c:	ldr	x0, [sp, #496]
  44c260:	str	x0, [x1, #8]
  44c264:	ldrb	w0, [x25, #56]
  44c268:	tst	x0, #0x10
  44c26c:	ccmp	w23, #0x0, #0x4, eq  // eq = none
  44c270:	b.ne	44c374 <_obstack_memory_used@@Base+0xb1d8>  // b.any
  44c274:	ldrb	w6, [sp, #468]
  44c278:	ldr	x8, [sp, #376]
  44c27c:	ldr	x9, [sp, #352]
  44c280:	ldr	x4, [sp, #584]
  44c284:	ldr	x0, [sp, #200]
  44c288:	lsl	x0, x0, #4
  44c28c:	ldr	x1, [sp, #248]
  44c290:	add	x5, x0, x1
  44c294:	ldr	x7, [sp, #384]
  44c298:	b	44c3dc <_obstack_memory_used@@Base+0xb240>
  44c29c:	sub	x28, x28, #0x1
  44c2a0:	cmn	x28, #0x1
  44c2a4:	b.eq	44c6e4 <_obstack_memory_used@@Base+0xb548>  // b.none
  44c2a8:	ldr	x1, [x2, x28, lsl #3]
  44c2ac:	cbz	x1, 44c29c <_obstack_memory_used@@Base+0xb100>
  44c2b0:	ldrb	w0, [x1, #104]
  44c2b4:	tbz	w0, #4, 44c29c <_obstack_memory_used@@Base+0xb100>
  44c2b8:	mov	x2, x28
  44c2bc:	add	x0, sp, #0x148
  44c2c0:	bl	443ab0 <_obstack_memory_used@@Base+0x2914>
  44c2c4:	mov	x22, x0
  44c2c8:	b	44c788 <_obstack_memory_used@@Base+0xb5ec>
  44c2cc:	mov	x3, x27
  44c2d0:	mov	x2, x20
  44c2d4:	mov	x1, x19
  44c2d8:	mov	x0, x24
  44c2dc:	bl	449cc4 <_obstack_memory_used@@Base+0x8b28>
  44c2e0:	mov	w21, w0
  44c2e4:	mov	x0, x20
  44c2e8:	bl	4047c0 <free@plt>
  44c2ec:	cbz	w21, 44c334 <_obstack_memory_used@@Base+0xb198>
  44c2f0:	mov	x20, #0x0                   	// #0
  44c2f4:	b	44c620 <_obstack_memory_used@@Base+0xb484>
  44c2f8:	str	x19, [sp, #272]
  44c2fc:	str	xzr, [sp, #280]
  44c300:	str	x22, [sp, #288]
  44c304:	str	x28, [sp, #296]
  44c308:	stp	xzr, xzr, [sp, #304]
  44c30c:	str	xzr, [sp, #320]
  44c310:	add	x1, sp, #0x110
  44c314:	add	x0, sp, #0x148
  44c318:	bl	44b3b8 <_obstack_memory_used@@Base+0xa21c>
  44c31c:	mov	w21, w0
  44c320:	ldr	x0, [sp, #320]
  44c324:	bl	4047c0 <free@plt>
  44c328:	cbnz	w21, 44c61c <_obstack_memory_used@@Base+0xb480>
  44c32c:	ldr	x20, [x19]
  44c330:	cbz	x20, 44c6e4 <_obstack_memory_used@@Base+0xb548>
  44c334:	ldr	x27, [sp, #176]
  44c338:	ldr	x25, [sp, #224]
  44c33c:	ldr	x0, [sp, #512]
  44c340:	bl	4047c0 <free@plt>
  44c344:	str	x19, [sp, #512]
  44c348:	str	x22, [sp, #504]
  44c34c:	str	x28, [sp, #496]
  44c350:	b	44c224 <_obstack_memory_used@@Base+0xb088>
  44c354:	ldr	x27, [sp, #176]
  44c358:	mov	w0, #0x1                   	// #1
  44c35c:	str	w0, [sp, #140]
  44c360:	ldp	x23, x24, [sp, #48]
  44c364:	b	44bc00 <_obstack_memory_used@@Base+0xaa64>
  44c368:	ldr	x27, [sp, #176]
  44c36c:	ldr	x25, [sp, #224]
  44c370:	b	44c224 <_obstack_memory_used@@Base+0xb088>
  44c374:	ldrb	w0, [x27, #176]
  44c378:	ldr	w4, [sp, #140]
  44c37c:	tbz	w0, #0, 44c38c <_obstack_memory_used@@Base+0xb1f0>
  44c380:	ldr	x0, [x27, #152]
  44c384:	cmp	x0, #0x0
  44c388:	cset	w4, gt
  44c38c:	and	w4, w4, #0x1
  44c390:	ldr	x3, [sp, #248]
  44c394:	ldr	x2, [sp, #200]
  44c398:	add	x1, sp, #0x148
  44c39c:	mov	x0, x25
  44c3a0:	bl	447ccc <_obstack_memory_used@@Base+0x6b30>
  44c3a4:	cbz	w0, 44c274 <_obstack_memory_used@@Base+0xb0d8>
  44c3a8:	str	w0, [sp, #140]
  44c3ac:	ldp	x23, x24, [sp, #48]
  44c3b0:	b	44bc00 <_obstack_memory_used@@Base+0xaa64>
  44c3b4:	str	x3, [x2, #8]
  44c3b8:	ldr	x3, [x2]
  44c3bc:	add	x3, x3, x4
  44c3c0:	str	x3, [x2]
  44c3c4:	ldr	x3, [x2, #8]
  44c3c8:	add	x3, x3, x4
  44c3cc:	str	x3, [x2, #8]
  44c3d0:	add	x1, x1, #0x10
  44c3d4:	cmp	x5, x1
  44c3d8:	b.eq	44c41c <_obstack_memory_used@@Base+0xb280>  // b.none
  44c3dc:	mov	x2, x1
  44c3e0:	ldr	x3, [x1]
  44c3e4:	cmn	x3, #0x1
  44c3e8:	b.eq	44c3d0 <_obstack_memory_used@@Base+0xb234>  // b.none
  44c3ec:	cbz	w6, 44c3b8 <_obstack_memory_used@@Base+0xb21c>
  44c3f0:	mov	x10, x7
  44c3f4:	cmp	x3, x8
  44c3f8:	b.eq	44c400 <_obstack_memory_used@@Base+0xb264>  // b.none
  44c3fc:	ldr	x10, [x9, x3, lsl #3]
  44c400:	str	x10, [x2]
  44c404:	ldr	x10, [x2, #8]
  44c408:	mov	x3, x7
  44c40c:	cmp	x8, x10
  44c410:	b.eq	44c3b4 <_obstack_memory_used@@Base+0xb218>  // b.none
  44c414:	ldr	x3, [x9, x10, lsl #3]
  44c418:	b	44c3b4 <_obstack_memory_used@@Base+0xb218>
  44c41c:	ldr	x1, [sp, #208]
  44c420:	cmp	x1, #0x0
  44c424:	b.le	44c450 <_obstack_memory_used@@Base+0xb2b4>
  44c428:	ldr	x1, [sp, #248]
  44c42c:	add	x0, x1, x0
  44c430:	ldr	x2, [sp, #160]
  44c434:	add	x2, x1, x2, lsl #4
  44c438:	mov	x1, #0xffffffffffffffff    	// #-1
  44c43c:	str	x1, [x0]
  44c440:	str	x1, [x0, #8]
  44c444:	add	x0, x0, #0x10
  44c448:	cmp	x2, x0
  44c44c:	b.ne	44c43c <_obstack_memory_used@@Base+0xb2a0>  // b.any
  44c450:	ldr	x0, [x27, #224]
  44c454:	cbz	x0, 44c538 <_obstack_memory_used@@Base+0xb39c>
  44c458:	ldr	x0, [sp, #200]
  44c45c:	cmp	x0, #0x1
  44c460:	b.ls	44c540 <_obstack_memory_used@@Base+0xb3a4>  // b.plast
  44c464:	ldr	x4, [sp, #248]
  44c468:	add	x2, x4, #0x10
  44c46c:	sub	x3, x0, #0x1
  44c470:	mov	x0, #0x0                   	// #0
  44c474:	b	44c488 <_obstack_memory_used@@Base+0xb2ec>
  44c478:	add	x0, x0, #0x1
  44c47c:	add	x2, x2, #0x10
  44c480:	cmp	x3, x0
  44c484:	b.eq	44c4bc <_obstack_memory_used@@Base+0xb320>  // b.none
  44c488:	ldr	x1, [x27, #224]
  44c48c:	ldr	x1, [x1, x0, lsl #3]
  44c490:	cmp	x1, x0
  44c494:	b.eq	44c478 <_obstack_memory_used@@Base+0xb2dc>  // b.none
  44c498:	add	x1, x4, x1, lsl #4
  44c49c:	ldr	x1, [x1, #16]
  44c4a0:	str	x1, [x2]
  44c4a4:	ldr	x1, [x27, #224]
  44c4a8:	ldr	x1, [x1, x0, lsl #3]
  44c4ac:	add	x1, x4, x1, lsl #4
  44c4b0:	ldr	x1, [x1, #24]
  44c4b4:	str	x1, [x2, #8]
  44c4b8:	b	44c478 <_obstack_memory_used@@Base+0xb2dc>
  44c4bc:	ldp	x23, x24, [sp, #48]
  44c4c0:	b	44bc00 <_obstack_memory_used@@Base+0xaa64>
  44c4c4:	ldr	w0, [sp, #188]
  44c4c8:	str	w0, [sp, #140]
  44c4cc:	b	44bc00 <_obstack_memory_used@@Base+0xaa64>
  44c4d0:	mov	w0, #0xc                   	// #12
  44c4d4:	str	w0, [sp, #140]
  44c4d8:	ldp	x23, x24, [sp, #48]
  44c4dc:	b	44bc00 <_obstack_memory_used@@Base+0xaa64>
  44c4e0:	mov	w0, #0xc                   	// #12
  44c4e4:	str	w0, [sp, #140]
  44c4e8:	ldp	x23, x24, [sp, #48]
  44c4ec:	b	44bc00 <_obstack_memory_used@@Base+0xaa64>
  44c4f0:	mov	w0, #0x1                   	// #1
  44c4f4:	str	w0, [sp, #140]
  44c4f8:	ldp	x23, x24, [sp, #48]
  44c4fc:	b	44bc00 <_obstack_memory_used@@Base+0xaa64>
  44c500:	ldr	x27, [sp, #176]
  44c504:	mov	w0, #0xc                   	// #12
  44c508:	str	w0, [sp, #140]
  44c50c:	ldp	x23, x24, [sp, #48]
  44c510:	b	44bc00 <_obstack_memory_used@@Base+0xaa64>
  44c514:	ldr	x27, [sp, #176]
  44c518:	str	w0, [sp, #140]
  44c51c:	ldp	x23, x24, [sp, #48]
  44c520:	b	44bc00 <_obstack_memory_used@@Base+0xaa64>
  44c524:	ldr	x27, [sp, #176]
  44c528:	ldp	x23, x24, [sp, #48]
  44c52c:	b	44bc00 <_obstack_memory_used@@Base+0xaa64>
  44c530:	ldp	x23, x24, [sp, #48]
  44c534:	b	44bc00 <_obstack_memory_used@@Base+0xaa64>
  44c538:	ldp	x23, x24, [sp, #48]
  44c53c:	b	44bc00 <_obstack_memory_used@@Base+0xaa64>
  44c540:	ldp	x23, x24, [sp, #48]
  44c544:	b	44bc00 <_obstack_memory_used@@Base+0xaa64>
  44c548:	add	x0, sp, #0x148
  44c54c:	bl	445330 <_obstack_memory_used@@Base+0x4194>
  44c550:	ldr	x0, [sp, #576]
  44c554:	bl	4047c0 <free@plt>
  44c558:	ldr	x0, [sp, #544]
  44c55c:	bl	4047c0 <free@plt>
  44c560:	b	44bc10 <_obstack_memory_used@@Base+0xaa74>
  44c564:	mov	w0, #0x1                   	// #1
  44c568:	str	w0, [sp, #140]
  44c56c:	b	44bc18 <_obstack_memory_used@@Base+0xaa7c>
  44c570:	mov	w0, #0x1                   	// #1
  44c574:	str	w0, [sp, #140]
  44c578:	b	44bc18 <_obstack_memory_used@@Base+0xaa7c>
  44c57c:	mov	w0, #0x1                   	// #1
  44c580:	str	w0, [sp, #140]
  44c584:	b	44bc18 <_obstack_memory_used@@Base+0xaa7c>
  44c588:	mov	w0, #0x1                   	// #1
  44c58c:	str	w0, [sp, #140]
  44c590:	b	44bc18 <_obstack_memory_used@@Base+0xaa7c>
  44c594:	mov	w0, #0x1                   	// #1
  44c598:	str	w0, [sp, #140]
  44c59c:	b	44bc18 <_obstack_memory_used@@Base+0xaa7c>
  44c5a0:	mov	w0, #0x1                   	// #1
  44c5a4:	str	w0, [sp, #140]
  44c5a8:	b	44bc18 <_obstack_memory_used@@Base+0xaa7c>
  44c5ac:	ldr	x1, [sp, #248]
  44c5b0:	str	xzr, [x1]
  44c5b4:	ldr	x0, [sp, #496]
  44c5b8:	str	x0, [x1, #8]
  44c5bc:	b	44c274 <_obstack_memory_used@@Base+0xb0d8>
  44c5c0:	ldr	x27, [sp, #176]
  44c5c4:	mov	w0, #0xc                   	// #12
  44c5c8:	str	w0, [sp, #140]
  44c5cc:	ldp	x23, x24, [sp, #48]
  44c5d0:	b	44bc00 <_obstack_memory_used@@Base+0xaa64>
  44c5d4:	ldr	x27, [sp, #176]
  44c5d8:	mov	w0, #0xc                   	// #12
  44c5dc:	str	w0, [sp, #140]
  44c5e0:	ldp	x23, x24, [sp, #48]
  44c5e4:	b	44bc00 <_obstack_memory_used@@Base+0xaa64>
  44c5e8:	str	wzr, [sp, #264]
  44c5ec:	b	44c12c <_obstack_memory_used@@Base+0xaf90>
  44c5f0:	mov	w0, #0xc                   	// #12
  44c5f4:	str	w0, [sp, #140]
  44c5f8:	ldp	x23, x24, [sp, #48]
  44c5fc:	b	44bc00 <_obstack_memory_used@@Base+0xaa64>
  44c600:	ldr	x0, [sp, #168]
  44c604:	str	x0, [sp, #336]
  44c608:	ldr	w0, [x27, #180]
  44c60c:	cmp	w0, #0x2
  44c610:	ldr	x0, [sp, #152]
  44c614:	csel	x0, x0, xzr, lt  // lt = tstop
  44c618:	b	44b804 <_obstack_memory_used@@Base+0xa668>
  44c61c:	mov	x20, #0x0                   	// #0
  44c620:	mov	x0, x19
  44c624:	bl	4047c0 <free@plt>
  44c628:	mov	x0, x20
  44c62c:	bl	4047c0 <free@plt>
  44c630:	cmp	w21, #0x1
  44c634:	b.ne	44c6c0 <_obstack_memory_used@@Base+0xb524>  // b.any
  44c638:	add	x0, sp, #0x148
  44c63c:	bl	445330 <_obstack_memory_used@@Base+0x4194>
  44c640:	ldr	x0, [sp, #584]
  44c644:	ldr	w1, [sp, #192]
  44c648:	add	x0, x0, w1, sxtw
  44c64c:	str	x0, [sp, #584]
  44c650:	ldr	x1, [sp, #144]
  44c654:	cmp	x0, x1
  44c658:	ccmp	x0, x25, #0x0, ge  // ge = tcont
  44c65c:	b.gt	44c354 <_obstack_memory_used@@Base+0xb1b8>
  44c660:	ldr	w0, [sp, #184]
  44c664:	cmp	w0, #0x7
  44c668:	b.eq	44b9e4 <_obstack_memory_used@@Base+0xa848>  // b.none
  44c66c:	b.gt	44bac4 <_obstack_memory_used@@Base+0xa928>
  44c670:	cmp	w0, #0x5
  44c674:	b.le	44b9c8 <_obstack_memory_used@@Base+0xa82c>
  44c678:	ldr	w0, [sp, #184]
  44c67c:	cmp	w0, #0x6
  44c680:	b.ne	44b9d0 <_obstack_memory_used@@Base+0xa834>  // b.any
  44c684:	ldr	x0, [sp, #584]
  44c688:	ldr	w2, [sp, #196]
  44c68c:	mov	w3, #0x1                   	// #1
  44c690:	cmp	x25, x0
  44c694:	b.le	44bab8 <_obstack_memory_used@@Base+0xa91c>
  44c698:	ldr	x4, [sp, #168]
  44c69c:	ldrb	w1, [x4, x0]
  44c6a0:	ldrb	w1, [x26, x1]
  44c6a4:	cbnz	w1, 44bba8 <_obstack_memory_used@@Base+0xaa0c>
  44c6a8:	add	x0, x0, #0x1
  44c6ac:	mov	w2, w3
  44c6b0:	cmp	x0, x25
  44c6b4:	b.ne	44c69c <_obstack_memory_used@@Base+0xb500>  // b.any
  44c6b8:	str	x25, [sp, #584]
  44c6bc:	b	44ba24 <_obstack_memory_used@@Base+0xa888>
  44c6c0:	ldr	x27, [sp, #176]
  44c6c4:	str	w21, [sp, #140]
  44c6c8:	ldp	x23, x24, [sp, #48]
  44c6cc:	b	44bc00 <_obstack_memory_used@@Base+0xaa64>
  44c6d0:	ldr	x27, [sp, #176]
  44c6d4:	mov	x0, x19
  44c6d8:	bl	4047c0 <free@plt>
  44c6dc:	mov	w21, #0xc                   	// #12
  44c6e0:	b	44c6c4 <_obstack_memory_used@@Base+0xb528>
  44c6e4:	mov	x0, x19
  44c6e8:	bl	4047c0 <free@plt>
  44c6ec:	mov	x0, x20
  44c6f0:	bl	4047c0 <free@plt>
  44c6f4:	b	44c638 <_obstack_memory_used@@Base+0xb49c>
  44c6f8:	mov	x2, x28
  44c6fc:	ldr	x0, [sp, #512]
  44c700:	ldr	x1, [x0, x28, lsl #3]
  44c704:	add	x0, sp, #0x148
  44c708:	bl	443ab0 <_obstack_memory_used@@Base+0x2914>
  44c70c:	str	x0, [sp, #504]
  44c710:	ldr	x0, [sp, #176]
  44c714:	ldrb	w0, [x0, #176]
  44c718:	tbnz	w0, #0, 44c744 <_obstack_memory_used@@Base+0xb5a8>
  44c71c:	b	44c738 <_obstack_memory_used@@Base+0xb59c>
  44c720:	mov	x2, x28
  44c724:	ldr	x0, [sp, #512]
  44c728:	ldr	x1, [x0, x28, lsl #3]
  44c72c:	add	x0, sp, #0x148
  44c730:	bl	443ab0 <_obstack_memory_used@@Base+0x2914>
  44c734:	str	x0, [sp, #504]
  44c738:	ldr	x0, [sp, #176]
  44c73c:	ldr	x0, [x0, #152]
  44c740:	cbz	x0, 44c368 <_obstack_memory_used@@Base+0xb1cc>
  44c744:	ldr	x24, [sp, #480]
  44c748:	ldr	x22, [sp, #504]
  44c74c:	mov	x0, #0x1ffffffffffffffe    	// #2305843009213693950
  44c750:	cmp	x28, x0
  44c754:	b.hi	44c5c0 <_obstack_memory_used@@Base+0xb424>  // b.pmore
  44c758:	add	x20, x28, #0x1
  44c75c:	lsl	x20, x20, #3
  44c760:	mov	x0, x20
  44c764:	bl	404310 <malloc@plt>
  44c768:	mov	x19, x0
  44c76c:	cbz	x0, 44c6d0 <_obstack_memory_used@@Base+0xb534>
  44c770:	ldr	x0, [x24, #152]
  44c774:	cbz	x0, 44c2f8 <_obstack_memory_used@@Base+0xb15c>
  44c778:	mov	x0, x20
  44c77c:	bl	404310 <malloc@plt>
  44c780:	mov	x20, x0
  44c784:	cbz	x0, 44c6d0 <_obstack_memory_used@@Base+0xb534>
  44c788:	add	x27, x28, #0x1
  44c78c:	lsl	x2, x27, #3
  44c790:	mov	w1, #0x0                   	// #0
  44c794:	mov	x0, x20
  44c798:	bl	404420 <memset@plt>
  44c79c:	str	x19, [sp, #272]
  44c7a0:	str	x20, [sp, #280]
  44c7a4:	str	x22, [sp, #288]
  44c7a8:	str	x28, [sp, #296]
  44c7ac:	stp	xzr, xzr, [sp, #304]
  44c7b0:	str	xzr, [sp, #320]
  44c7b4:	add	x1, sp, #0x110
  44c7b8:	add	x0, sp, #0x148
  44c7bc:	bl	44b3b8 <_obstack_memory_used@@Base+0xa21c>
  44c7c0:	mov	w21, w0
  44c7c4:	ldr	x0, [sp, #320]
  44c7c8:	bl	4047c0 <free@plt>
  44c7cc:	cbnz	w21, 44c620 <_obstack_memory_used@@Base+0xb484>
  44c7d0:	ldr	x0, [x19]
  44c7d4:	cbnz	x0, 44c2cc <_obstack_memory_used@@Base+0xb130>
  44c7d8:	ldr	x0, [x20]
  44c7dc:	cbnz	x0, 44c2cc <_obstack_memory_used@@Base+0xb130>
  44c7e0:	subs	x28, x28, #0x1
  44c7e4:	b.mi	44c6e4 <_obstack_memory_used@@Base+0xb548>  // b.first
  44c7e8:	ldr	x2, [sp, #512]
  44c7ec:	b	44c2a8 <_obstack_memory_used@@Base+0xb10c>
  44c7f0:	ldr	x25, [sp, #128]
  44c7f4:	ldr	w0, [sp, #264]
  44c7f8:	cbz	w0, 44c1c8 <_obstack_memory_used@@Base+0xb02c>
  44c7fc:	ldr	x27, [sp, #176]
  44c800:	b	44c5d8 <_obstack_memory_used@@Base+0xb43c>
  44c804:	stp	x29, x30, [sp, #-288]!
  44c808:	mov	x29, sp
  44c80c:	stp	x19, x20, [sp, #16]
  44c810:	stp	x21, x22, [sp, #32]
  44c814:	stp	x23, x24, [sp, #48]
  44c818:	mov	x20, x0
  44c81c:	mov	x24, x1
  44c820:	mov	x21, x2
  44c824:	mov	x23, x3
  44c828:	str	wzr, [sp, #284]
  44c82c:	ldrb	w0, [x0, #56]
  44c830:	str	x3, [x20, #24]
  44c834:	str	xzr, [x20, #16]
  44c838:	str	xzr, [x20, #48]
  44c83c:	mov	w1, #0xffffff90            	// #-112
  44c840:	and	w0, w0, w1
  44c844:	strb	w0, [x20, #56]
  44c848:	ldr	x19, [x20]
  44c84c:	ldr	x0, [x20, #8]
  44c850:	cmp	x0, #0xe7
  44c854:	b.ls	44caa0 <_obstack_memory_used@@Base+0xb904>  // b.plast
  44c858:	mov	x2, #0xe8                  	// #232
  44c85c:	str	x2, [x20, #16]
  44c860:	mov	w1, #0x0                   	// #0
  44c864:	mov	x0, x19
  44c868:	bl	404420 <memset@plt>
  44c86c:	mov	w0, #0xf                   	// #15
  44c870:	str	w0, [x19, #128]
  44c874:	mov	x0, #0x5555555555555555    	// #6148914691236517205
  44c878:	movk	x0, #0x555, lsl #48
  44c87c:	cmp	x21, x0
  44c880:	b.cs	44d2d0 <_obstack_memory_used@@Base+0xc134>  // b.hs, b.nlast
  44c884:	stp	x25, x26, [sp, #64]
  44c888:	add	x0, x21, #0x1
  44c88c:	str	x0, [x19, #8]
  44c890:	lsl	x0, x0, #4
  44c894:	bl	404310 <malloc@plt>
  44c898:	str	x0, [x19]
  44c89c:	cbz	x21, 44cac4 <_obstack_memory_used@@Base+0xb928>
  44c8a0:	mov	x22, #0x1                   	// #1
  44c8a4:	lsl	x22, x22, #1
  44c8a8:	cmp	x21, x22
  44c8ac:	b.cs	44c8a4 <_obstack_memory_used@@Base+0xb708>  // b.hs, b.nlast
  44c8b0:	mov	x1, x22
  44c8b4:	mov	x0, #0x18                  	// #24
  44c8b8:	bl	4044d0 <calloc@plt>
  44c8bc:	str	x0, [x19, #64]
  44c8c0:	sub	x22, x22, #0x1
  44c8c4:	str	x22, [x19, #136]
  44c8c8:	bl	4047f0 <__ctype_get_mb_cur_max@plt>
  44c8cc:	str	w0, [x19, #180]
  44c8d0:	mov	w0, #0xe                   	// #14
  44c8d4:	bl	4042d0 <nl_langinfo@plt>
  44c8d8:	ldrb	w1, [x0]
  44c8dc:	and	w1, w1, #0xffffffdf
  44c8e0:	and	w1, w1, #0xff
  44c8e4:	cmp	w1, #0x55
  44c8e8:	b.ne	44c944 <_obstack_memory_used@@Base+0xb7a8>  // b.any
  44c8ec:	ldrb	w1, [x0, #1]
  44c8f0:	and	w1, w1, #0xffffffdf
  44c8f4:	and	w1, w1, #0xff
  44c8f8:	cmp	w1, #0x54
  44c8fc:	b.ne	44c944 <_obstack_memory_used@@Base+0xb7a8>  // b.any
  44c900:	ldrb	w1, [x0, #2]
  44c904:	and	w1, w1, #0xffffffdf
  44c908:	and	w1, w1, #0xff
  44c90c:	cmp	w1, #0x46
  44c910:	b.ne	44c944 <_obstack_memory_used@@Base+0xb7a8>  // b.any
  44c914:	ldrb	w1, [x0, #3]
  44c918:	cmp	w1, #0x2d
  44c91c:	cset	x2, eq  // eq = none
  44c920:	add	x2, x2, #0x3
  44c924:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  44c928:	add	x1, x1, #0x488
  44c92c:	add	x0, x0, x2
  44c930:	bl	404720 <strcmp@plt>
  44c934:	cbnz	w0, 44c944 <_obstack_memory_used@@Base+0xb7a8>
  44c938:	ldrb	w0, [x19, #176]
  44c93c:	orr	w0, w0, #0x4
  44c940:	strb	w0, [x19, #176]
  44c944:	ldrb	w0, [x19, #176]
  44c948:	and	w0, w0, #0xfffffff7
  44c94c:	strb	w0, [x19, #176]
  44c950:	ldr	w0, [x19, #180]
  44c954:	cmp	w0, #0x1
  44c958:	b.le	44c970 <_obstack_memory_used@@Base+0xb7d4>
  44c95c:	ldrb	w0, [x19, #176]
  44c960:	tbz	w0, #2, 44cacc <_obstack_memory_used@@Base+0xb930>
  44c964:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  44c968:	add	x0, x0, #0xe8
  44c96c:	str	x0, [x19, #120]
  44c970:	ldr	x0, [x19]
  44c974:	cbz	x0, 44d2cc <_obstack_memory_used@@Base+0xc130>
  44c978:	ldr	x0, [x19, #64]
  44c97c:	cbz	x0, 44cb10 <_obstack_memory_used@@Base+0xb974>
  44c980:	str	wzr, [sp, #284]
  44c984:	mov	x22, x21
  44c988:	ldr	x0, [x20, #40]
  44c98c:	ands	x25, x23, #0x400000
  44c990:	orr	x26, x0, x25
  44c994:	stp	xzr, xzr, [sp, #136]
  44c998:	stp	xzr, xzr, [sp, #152]
  44c99c:	stp	xzr, xzr, [sp, #168]
  44c9a0:	stp	xzr, xzr, [sp, #184]
  44c9a4:	stp	xzr, xzr, [sp, #200]
  44c9a8:	stp	xzr, xzr, [sp, #216]
  44c9ac:	stp	xzr, xzr, [sp, #232]
  44c9b0:	stp	xzr, xzr, [sp, #248]
  44c9b4:	add	x1, sp, #0x200
  44c9b8:	stp	xzr, xzr, [x1, #-248]
  44c9bc:	str	x24, [sp, #128]
  44c9c0:	str	x21, [sp, #216]
  44c9c4:	str	x21, [sp, #208]
  44c9c8:	str	x0, [sp, #248]
  44c9cc:	cset	w0, ne  // ne = any
  44c9d0:	strb	w0, [sp, #264]
  44c9d4:	cmp	x26, #0x0
  44c9d8:	cset	w0, ne  // ne = any
  44c9dc:	strb	w0, [sp, #267]
  44c9e0:	ldr	w0, [x19, #180]
  44c9e4:	str	w0, [sp, #272]
  44c9e8:	ldrb	w0, [x19, #176]
  44c9ec:	ubfx	x1, x0, #2, #1
  44c9f0:	strb	w1, [sp, #265]
  44c9f4:	ubfx	x0, x0, #3, #1
  44c9f8:	strb	w0, [sp, #266]
  44c9fc:	str	x21, [sp, #232]
  44ca00:	str	x21, [sp, #224]
  44ca04:	cmp	x21, #0x0
  44ca08:	b.gt	44cb18 <_obstack_memory_used@@Base+0xb97c>
  44ca0c:	ldrb	w0, [sp, #267]
  44ca10:	cmp	w0, #0x0
  44ca14:	ldr	x0, [sp, #136]
  44ca18:	csel	x24, x0, x24, ne  // ne = any
  44ca1c:	str	x24, [sp, #136]
  44ca20:	cbz	x25, 44cb38 <_obstack_memory_used@@Base+0xb99c>
  44ca24:	ldr	w0, [x19, #180]
  44ca28:	cmp	w0, #0x1
  44ca2c:	b.le	44cb2c <_obstack_memory_used@@Base+0xb990>
  44ca30:	add	x0, sp, #0x80
  44ca34:	bl	4430d0 <_obstack_memory_used@@Base+0x1f34>
  44ca38:	cbnz	w0, 44ca70 <_obstack_memory_used@@Base+0xb8d4>
  44ca3c:	ldr	x0, [sp, #184]
  44ca40:	cmp	x22, x0
  44ca44:	b.le	44cb5c <_obstack_memory_used@@Base+0xb9c0>
  44ca48:	ldr	x1, [sp, #192]
  44ca4c:	ldrsw	x0, [x19, #180]
  44ca50:	ldr	x2, [sp, #176]
  44ca54:	add	x0, x0, x2
  44ca58:	cmp	x1, x0
  44ca5c:	b.gt	44cb5c <_obstack_memory_used@@Base+0xb9c0>
  44ca60:	lsl	x1, x1, #1
  44ca64:	add	x0, sp, #0x80
  44ca68:	bl	441f28 <_obstack_memory_used@@Base+0xd8c>
  44ca6c:	cbz	w0, 44ca30 <_obstack_memory_used@@Base+0xb894>
  44ca70:	str	w0, [sp, #284]
  44ca74:	mov	x0, x20
  44ca78:	bl	444fcc <_obstack_memory_used@@Base+0x3e30>
  44ca7c:	add	x0, sp, #0x80
  44ca80:	bl	44501c <_obstack_memory_used@@Base+0x3e80>
  44ca84:	mov	x0, x19
  44ca88:	bl	44505c <_obstack_memory_used@@Base+0x3ec0>
  44ca8c:	str	xzr, [x20]
  44ca90:	str	xzr, [x20, #8]
  44ca94:	ldr	w0, [sp, #284]
  44ca98:	ldp	x25, x26, [sp, #64]
  44ca9c:	b	44d1b0 <_obstack_memory_used@@Base+0xc014>
  44caa0:	mov	x1, #0xe8                  	// #232
  44caa4:	mov	x0, x19
  44caa8:	bl	404540 <realloc@plt>
  44caac:	mov	x19, x0
  44cab0:	cbz	x0, 44d250 <_obstack_memory_used@@Base+0xc0b4>
  44cab4:	mov	x0, #0xe8                  	// #232
  44cab8:	str	x0, [x20, #8]
  44cabc:	str	x19, [x20]
  44cac0:	b	44c858 <_obstack_memory_used@@Base+0xb6bc>
  44cac4:	mov	x22, #0x1                   	// #1
  44cac8:	b	44c8b0 <_obstack_memory_used@@Base+0xb714>
  44cacc:	mov	x1, #0x1                   	// #1
  44cad0:	mov	x0, #0x20                  	// #32
  44cad4:	bl	4044d0 <calloc@plt>
  44cad8:	str	x0, [x19, #120]
  44cadc:	cbz	x0, 44d2c4 <_obstack_memory_used@@Base+0xc128>
  44cae0:	str	x27, [sp, #80]
  44cae4:	mov	x25, #0x0                   	// #0
  44cae8:	mov	x27, #0x1                   	// #1
  44caec:	b	44cafc <_obstack_memory_used@@Base+0xb960>
  44caf0:	add	x25, x25, #0x8
  44caf4:	cmp	x25, #0x20
  44caf8:	b.eq	44cb08 <_obstack_memory_used@@Base+0xb96c>  // b.none
  44cafc:	lsl	w22, w25, #3
  44cb00:	mov	w26, #0x0                   	// #0
  44cb04:	b	44d314 <_obstack_memory_used@@Base+0xc178>
  44cb08:	ldr	x27, [sp, #80]
  44cb0c:	b	44c970 <_obstack_memory_used@@Base+0xb7d4>
  44cb10:	ldp	x25, x26, [sp, #64]
  44cb14:	b	44d2d0 <_obstack_memory_used@@Base+0xc134>
  44cb18:	add	x1, x21, #0x1
  44cb1c:	add	x0, sp, #0x80
  44cb20:	bl	441f28 <_obstack_memory_used@@Base+0xd8c>
  44cb24:	cbz	w0, 44ca0c <_obstack_memory_used@@Base+0xb870>
  44cb28:	b	44ca70 <_obstack_memory_used@@Base+0xb8d4>
  44cb2c:	add	x0, sp, #0x80
  44cb30:	bl	4428dc <_obstack_memory_used@@Base+0x1740>
  44cb34:	b	44cb5c <_obstack_memory_used@@Base+0xb9c0>
  44cb38:	ldr	w0, [x19, #180]
  44cb3c:	cmp	w0, #0x1
  44cb40:	b.gt	44cb54 <_obstack_memory_used@@Base+0xb9b8>
  44cb44:	cbz	x26, 44cd50 <_obstack_memory_used@@Base+0xbbb4>
  44cb48:	add	x0, sp, #0x80
  44cb4c:	bl	44136c <_obstack_memory_used@@Base+0x1d0>
  44cb50:	b	44cb5c <_obstack_memory_used@@Base+0xb9c0>
  44cb54:	add	x0, sp, #0x80
  44cb58:	bl	442974 <_obstack_memory_used@@Base+0x17d8>
  44cb5c:	str	wzr, [sp, #284]
  44cb60:	str	xzr, [x20, #48]
  44cb64:	ldr	x24, [x20]
  44cb68:	str	x23, [x24, #216]
  44cb6c:	orr	x2, x23, #0x800000
  44cb70:	add	x1, sp, #0x80
  44cb74:	add	x0, sp, #0x68
  44cb78:	bl	444274 <_obstack_memory_used@@Base+0x30d8>
  44cb7c:	add	x5, sp, #0x11c
  44cb80:	mov	x4, #0x0                   	// #0
  44cb84:	mov	x3, x23
  44cb88:	add	x2, sp, #0x68
  44cb8c:	mov	x1, x20
  44cb90:	add	x0, sp, #0x80
  44cb94:	bl	449718 <_obstack_memory_used@@Base+0x857c>
  44cb98:	mov	x21, x0
  44cb9c:	ldr	w0, [sp, #284]
  44cba0:	cmp	w0, #0x0
  44cba4:	ccmp	x21, #0x0, #0x0, ne  // ne = any
  44cba8:	b.eq	44cd68 <_obstack_memory_used@@Base+0xbbcc>  // b.none
  44cbac:	mov	w3, #0x2                   	// #2
  44cbb0:	mov	x2, #0x0                   	// #0
  44cbb4:	mov	x1, #0x0                   	// #0
  44cbb8:	mov	x0, x24
  44cbbc:	bl	4421b4 <_obstack_memory_used@@Base+0x1018>
  44cbc0:	mov	x22, x0
  44cbc4:	cbz	x21, 44cbdc <_obstack_memory_used@@Base+0xba40>
  44cbc8:	mov	w3, #0x10                  	// #16
  44cbcc:	mov	x2, x0
  44cbd0:	mov	x1, x21
  44cbd4:	mov	x0, x24
  44cbd8:	bl	4421b4 <_obstack_memory_used@@Base+0x1018>
  44cbdc:	cmp	x22, #0x0
  44cbe0:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  44cbe4:	b.eq	44cd60 <_obstack_memory_used@@Base+0xbbc4>  // b.none
  44cbe8:	str	x0, [x19, #104]
  44cbec:	ldr	x21, [x20]
  44cbf0:	ldr	x22, [x21, #8]
  44cbf4:	lsl	x24, x22, #3
  44cbf8:	mov	x0, x24
  44cbfc:	bl	404310 <malloc@plt>
  44cc00:	mov	x23, x0
  44cc04:	str	x0, [x21, #24]
  44cc08:	mov	x0, x24
  44cc0c:	bl	404310 <malloc@plt>
  44cc10:	mov	x24, x0
  44cc14:	str	x0, [x21, #32]
  44cc18:	add	x22, x22, x22, lsl #1
  44cc1c:	lsl	x22, x22, #3
  44cc20:	mov	x0, x22
  44cc24:	bl	404310 <malloc@plt>
  44cc28:	mov	x26, x0
  44cc2c:	str	x0, [x21, #40]
  44cc30:	mov	x0, x22
  44cc34:	bl	404310 <malloc@plt>
  44cc38:	str	x0, [x21, #48]
  44cc3c:	cmp	x24, #0x0
  44cc40:	ccmp	x23, #0x0, #0x4, ne  // ne = any
  44cc44:	cset	w24, eq  // eq = none
  44cc48:	cmp	x26, #0x0
  44cc4c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  44cc50:	csinc	w24, w24, wzr, ne  // ne = any
  44cc54:	cbnz	w24, 44d2b0 <_obstack_memory_used@@Base+0xc114>
  44cc58:	ldr	x0, [x20, #48]
  44cc5c:	lsl	x0, x0, #3
  44cc60:	bl	404310 <malloc@plt>
  44cc64:	str	x0, [x21, #224]
  44cc68:	cbz	x0, 44cce0 <_obstack_memory_used@@Base+0xbb44>
  44cc6c:	ldr	x0, [x20, #48]
  44cc70:	cbz	x0, 44cc90 <_obstack_memory_used@@Base+0xbaf4>
  44cc74:	mov	x0, #0x0                   	// #0
  44cc78:	ldr	x1, [x21, #224]
  44cc7c:	str	x0, [x1, x0, lsl #3]
  44cc80:	add	x0, x0, #0x1
  44cc84:	ldr	x1, [x20, #48]
  44cc88:	cmp	x1, x0
  44cc8c:	b.hi	44cc78 <_obstack_memory_used@@Base+0xbadc>  // b.pmore
  44cc90:	mov	x2, x21
  44cc94:	adrp	x1, 441000 <_obstack_newchunk@@Base+0x34>
  44cc98:	add	x1, x1, #0x4d0
  44cc9c:	ldr	x0, [x21, #104]
  44cca0:	bl	441eb4 <_obstack_memory_used@@Base+0xd18>
  44cca4:	ldr	x3, [x20, #48]
  44cca8:	cbz	x3, 44cd70 <_obstack_memory_used@@Base+0xbbd4>
  44ccac:	ldr	x5, [x21, #224]
  44ccb0:	mov	x4, x3
  44ccb4:	mov	x0, #0x0                   	// #0
  44ccb8:	mov	x1, x0
  44ccbc:	ldr	x2, [x5, x0, lsl #3]
  44ccc0:	cmp	x0, x2
  44ccc4:	b.ne	44ccd8 <_obstack_memory_used@@Base+0xbb3c>  // b.any
  44ccc8:	add	x0, x0, #0x1
  44cccc:	mov	x1, x0
  44ccd0:	cmp	x4, x0
  44ccd4:	b.ne	44ccb8 <_obstack_memory_used@@Base+0xbb1c>  // b.any
  44ccd8:	cmp	x1, x3
  44ccdc:	b.eq	44cd70 <_obstack_memory_used@@Base+0xbbd4>  // b.none
  44cce0:	mov	x2, x20
  44cce4:	adrp	x1, 442000 <_obstack_memory_used@@Base+0xe64>
  44cce8:	add	x1, x1, #0x32c
  44ccec:	ldr	x0, [x21, #104]
  44ccf0:	bl	441e40 <_obstack_memory_used@@Base+0xca4>
  44ccf4:	cbnz	w0, 44d2bc <_obstack_memory_used@@Base+0xc120>
  44ccf8:	mov	x2, x21
  44ccfc:	adrp	x1, 444000 <_obstack_memory_used@@Base+0x2e64>
  44cd00:	add	x1, x1, #0x608
  44cd04:	ldr	x0, [x21, #104]
  44cd08:	bl	441e40 <_obstack_memory_used@@Base+0xca4>
  44cd0c:	cbnz	w0, 44d2bc <_obstack_memory_used@@Base+0xc120>
  44cd10:	mov	x2, x21
  44cd14:	adrp	x1, 441000 <_obstack_newchunk@@Base+0x34>
  44cd18:	add	x1, x1, #0x574
  44cd1c:	ldr	x0, [x21, #104]
  44cd20:	bl	441eb4 <_obstack_memory_used@@Base+0xd18>
  44cd24:	mov	x2, x21
  44cd28:	adrp	x1, 445000 <_obstack_memory_used@@Base+0x3e64>
  44cd2c:	add	x1, x1, #0x478
  44cd30:	ldr	x0, [x21, #104]
  44cd34:	bl	441eb4 <_obstack_memory_used@@Base+0xd18>
  44cd38:	cbnz	w0, 44d2bc <_obstack_memory_used@@Base+0xc120>
  44cd3c:	str	x27, [sp, #80]
  44cd40:	mov	w26, w24
  44cd44:	mov	x22, #0x0                   	// #0
  44cd48:	mov	w27, #0x1                   	// #1
  44cd4c:	b	44cda0 <_obstack_memory_used@@Base+0xbc04>
  44cd50:	ldr	x0, [sp, #192]
  44cd54:	str	x0, [sp, #176]
  44cd58:	str	x0, [sp, #184]
  44cd5c:	b	44cb5c <_obstack_memory_used@@Base+0xb9c0>
  44cd60:	mov	w0, #0xc                   	// #12
  44cd64:	str	w0, [sp, #284]
  44cd68:	str	xzr, [x19, #104]
  44cd6c:	b	44ca74 <_obstack_memory_used@@Base+0xb8d8>
  44cd70:	ldr	x0, [x21, #224]
  44cd74:	bl	4047c0 <free@plt>
  44cd78:	str	xzr, [x21, #224]
  44cd7c:	b	44cce0 <_obstack_memory_used@@Base+0xbb44>
  44cd80:	cbz	w26, 44cdf0 <_obstack_memory_used@@Base+0xbc54>
  44cd84:	mov	w26, w24
  44cd88:	mov	x22, #0x0                   	// #0
  44cd8c:	b	44cdac <_obstack_memory_used@@Base+0xbc10>
  44cd90:	ldr	x0, [sp, #120]
  44cd94:	bl	4047c0 <free@plt>
  44cd98:	mov	w26, #0x1                   	// #1
  44cd9c:	add	x22, x22, #0x1
  44cda0:	ldr	x0, [x21, #16]
  44cda4:	cmp	x0, x22
  44cda8:	b.eq	44cd80 <_obstack_memory_used@@Base+0xbbe4>  // b.none
  44cdac:	add	x23, x22, x22, lsl #1
  44cdb0:	lsl	x23, x23, #3
  44cdb4:	ldr	x0, [x21, #48]
  44cdb8:	add	x0, x0, x23
  44cdbc:	ldr	x0, [x0, #8]
  44cdc0:	cbnz	x0, 44cd9c <_obstack_memory_used@@Base+0xbc00>
  44cdc4:	mov	w3, w27
  44cdc8:	mov	x2, x22
  44cdcc:	mov	x1, x21
  44cdd0:	add	x0, sp, #0x68
  44cdd4:	bl	444a54 <_obstack_memory_used@@Base+0x38b8>
  44cdd8:	cbnz	w0, 44d2b8 <_obstack_memory_used@@Base+0xc11c>
  44cddc:	ldr	x0, [x21, #48]
  44cde0:	add	x23, x0, x23
  44cde4:	ldr	x0, [x23, #8]
  44cde8:	cbnz	x0, 44cd9c <_obstack_memory_used@@Base+0xbc00>
  44cdec:	b	44cd90 <_obstack_memory_used@@Base+0xbbf4>
  44cdf0:	ldrb	w0, [x20, #56]
  44cdf4:	tbz	w0, #4, 44cf24 <_obstack_memory_used@@Base+0xbd88>
  44cdf8:	ldr	x0, [x21, #152]
  44cdfc:	cbz	x0, 44cebc <_obstack_memory_used@@Base+0xbd20>
  44ce00:	ldr	x22, [x21, #16]
  44ce04:	add	x0, x22, x22, lsl #1
  44ce08:	lsl	x0, x0, #3
  44ce0c:	bl	404310 <malloc@plt>
  44ce10:	str	x0, [x21, #56]
  44ce14:	cbz	x0, 44d298 <_obstack_memory_used@@Base+0xc0fc>
  44ce18:	cbz	x22, 44cebc <_obstack_memory_used@@Base+0xbd20>
  44ce1c:	mov	x2, #0x0                   	// #0
  44ce20:	mov	x1, #0x0                   	// #0
  44ce24:	ldr	x0, [x21, #56]
  44ce28:	add	x0, x0, x2
  44ce2c:	stp	xzr, xzr, [x0]
  44ce30:	str	xzr, [x0, #16]
  44ce34:	add	x1, x1, #0x1
  44ce38:	ldr	x0, [x21, #16]
  44ce3c:	add	x2, x2, #0x18
  44ce40:	cmp	x1, x0
  44ce44:	b.cc	44ce24 <_obstack_memory_used@@Base+0xbc88>  // b.lo, b.ul, b.last
  44ce48:	cbz	x0, 44cebc <_obstack_memory_used@@Base+0xbd20>
  44ce4c:	mov	x23, #0x0                   	// #0
  44ce50:	mov	x24, #0x0                   	// #0
  44ce54:	ldr	x0, [x21, #48]
  44ce58:	add	x0, x0, x23
  44ce5c:	ldr	x27, [x0, #16]
  44ce60:	ldr	x0, [x0, #8]
  44ce64:	cmp	x0, #0x0
  44ce68:	b.le	44cea8 <_obstack_memory_used@@Base+0xbd0c>
  44ce6c:	mov	x22, #0x0                   	// #0
  44ce70:	ldr	x0, [x27, x22, lsl #3]
  44ce74:	add	x0, x0, x0, lsl #1
  44ce78:	ldr	x2, [x21, #56]
  44ce7c:	mov	x1, x24
  44ce80:	add	x0, x2, x0, lsl #3
  44ce84:	bl	441fd4 <_obstack_memory_used@@Base+0xe38>
  44ce88:	and	w0, w0, #0xff
  44ce8c:	cbz	w0, 44d2a4 <_obstack_memory_used@@Base+0xc108>
  44ce90:	add	x22, x22, #0x1
  44ce94:	ldr	x0, [x21, #48]
  44ce98:	add	x0, x0, x23
  44ce9c:	ldr	x0, [x0, #8]
  44cea0:	cmp	x22, x0
  44cea4:	b.lt	44ce70 <_obstack_memory_used@@Base+0xbcd4>  // b.tstop
  44cea8:	add	x24, x24, #0x1
  44ceac:	add	x23, x23, #0x18
  44ceb0:	ldr	x0, [x21, #16]
  44ceb4:	cmp	x24, x0
  44ceb8:	b.cc	44ce54 <_obstack_memory_used@@Base+0xbcb8>  // b.lo, b.ul, b.last
  44cebc:	str	wzr, [sp, #284]
  44cec0:	ldrb	w1, [x19, #176]
  44cec4:	ubfx	x1, x1, #2, #1
  44cec8:	cmp	x25, #0x0
  44cecc:	csel	w1, w1, wzr, eq  // eq = none
  44ced0:	cbnz	w1, 44cf38 <_obstack_memory_used@@Base+0xbd9c>
  44ced4:	ldr	x0, [x19, #104]
  44ced8:	ldr	x0, [x0, #24]
  44cedc:	ldr	x1, [x0, #56]
  44cee0:	str	x1, [x19, #144]
  44cee4:	add	x1, x1, x1, lsl #1
  44cee8:	ldr	x0, [x19, #48]
  44ceec:	add	x1, x0, x1, lsl #3
  44cef0:	add	x0, sp, #0x68
  44cef4:	bl	442eb0 <_obstack_memory_used@@Base+0x1d14>
  44cef8:	mov	w22, w0
  44cefc:	str	w0, [sp, #100]
  44cf00:	cbnz	w0, 44d188 <_obstack_memory_used@@Base+0xbfec>
  44cf04:	ldr	x0, [x19, #152]
  44cf08:	cmp	x0, #0x0
  44cf0c:	b.le	44d150 <_obstack_memory_used@@Base+0xbfb4>
  44cf10:	ldr	x3, [sp, #112]
  44cf14:	cmp	x3, #0x0
  44cf18:	b.le	44d150 <_obstack_memory_used@@Base+0xbfb4>
  44cf1c:	mov	x21, #0x0                   	// #0
  44cf20:	b	44d0fc <_obstack_memory_used@@Base+0xbf60>
  44cf24:	ldr	x0, [x20, #48]
  44cf28:	cbz	x0, 44cdf8 <_obstack_memory_used@@Base+0xbc5c>
  44cf2c:	ldrb	w0, [x21, #176]
  44cf30:	tbnz	w0, #0, 44ce00 <_obstack_memory_used@@Base+0xbc64>
  44cf34:	b	44cdf8 <_obstack_memory_used@@Base+0xbc5c>
  44cf38:	ldr	x0, [x20, #40]
  44cf3c:	cbnz	x0, 44ced4 <_obstack_memory_used@@Base+0xbd38>
  44cf40:	ldr	x6, [x19, #16]
  44cf44:	cbz	x6, 44d080 <_obstack_memory_used@@Base+0xbee4>
  44cf48:	ldr	x4, [x19]
  44cf4c:	mov	w8, w26
  44cf50:	mov	x5, #0x0                   	// #0
  44cf54:	mov	w9, w1
  44cf58:	mov	x3, #0x1                   	// #1
  44cf5c:	mov	w2, #0x10001               	// #65537
  44cf60:	movk	x2, #0x1, lsl #48
  44cf64:	b	44cf80 <_obstack_memory_used@@Base+0xbde4>
  44cf68:	cmp	w0, #0x2
  44cf6c:	b.ne	44cfd0 <_obstack_memory_used@@Base+0xbe34>  // b.any
  44cf70:	add	x5, x5, #0x1
  44cf74:	add	x4, x4, #0x10
  44cf78:	cmp	x6, x5
  44cf7c:	b.eq	44d258 <_obstack_memory_used@@Base+0xc0bc>  // b.none
  44cf80:	ldrb	w0, [x4, #8]
  44cf84:	cmp	w0, #0x5
  44cf88:	b.eq	44d028 <_obstack_memory_used@@Base+0xbe8c>  // b.none
  44cf8c:	b.hi	44cfb8 <_obstack_memory_used@@Base+0xbe1c>  // b.pmore
  44cf90:	cmp	w0, #0x3
  44cf94:	b.eq	44d010 <_obstack_memory_used@@Base+0xbe74>  // b.none
  44cf98:	cmp	w0, #0x3
  44cf9c:	b.hi	44cf70 <_obstack_memory_used@@Base+0xbdd4>  // b.pmore
  44cfa0:	cmp	w0, #0x1
  44cfa4:	b.ne	44cf68 <_obstack_memory_used@@Base+0xbdcc>  // b.any
  44cfa8:	ldrsb	w0, [x4]
  44cfac:	cmp	w0, #0x0
  44cfb0:	csel	w26, w26, w1, ge  // ge = tcont
  44cfb4:	b	44cf70 <_obstack_memory_used@@Base+0xbdd4>
  44cfb8:	cmp	w0, #0xb
  44cfbc:	b.hi	44cfd4 <_obstack_memory_used@@Base+0xbe38>  // b.pmore
  44cfc0:	cmp	w0, #0x7
  44cfc4:	b.hi	44cf70 <_obstack_memory_used@@Base+0xbdd4>  // b.pmore
  44cfc8:	cmp	w0, #0x6
  44cfcc:	b.eq	44ced4 <_obstack_memory_used@@Base+0xbd38>  // b.none
  44cfd0:	bl	404660 <abort@plt>
  44cfd4:	cmp	w0, #0xc
  44cfd8:	b.ne	44cfd0 <_obstack_memory_used@@Base+0xbe34>  // b.any
  44cfdc:	ldr	w0, [x4]
  44cfe0:	cmp	w0, #0x40
  44cfe4:	b.hi	44d004 <_obstack_memory_used@@Base+0xbe68>  // b.pmore
  44cfe8:	cmp	w0, #0xf
  44cfec:	b.ls	44ced4 <_obstack_memory_used@@Base+0xbd38>  // b.plast
  44cff0:	sub	w0, w0, #0x10
  44cff4:	lsl	x0, x3, x0
  44cff8:	tst	x0, x2
  44cffc:	b.eq	44ced4 <_obstack_memory_used@@Base+0xbd38>  // b.none
  44d000:	b	44cf70 <_obstack_memory_used@@Base+0xbdd4>
  44d004:	cmp	w0, #0x80
  44d008:	b.eq	44cf70 <_obstack_memory_used@@Base+0xbdd4>  // b.none
  44d00c:	b	44ced4 <_obstack_memory_used@@Base+0xbd38>
  44d010:	ldr	x0, [x4]
  44d014:	ldr	x7, [x0, #16]
  44d018:	cbnz	x7, 44ced4 <_obstack_memory_used@@Base+0xbd38>
  44d01c:	ldr	x0, [x0, #24]
  44d020:	cbz	x0, 44cf70 <_obstack_memory_used@@Base+0xbdd4>
  44d024:	b	44ced4 <_obstack_memory_used@@Base+0xbd38>
  44d028:	mov	w8, w9
  44d02c:	b	44cf70 <_obstack_memory_used@@Base+0xbdd4>
  44d030:	ldrsb	w1, [x4, x3]
  44d034:	tbnz	w1, #31, 44d070 <_obstack_memory_used@@Base+0xbed4>
  44d038:	add	x0, x0, #0x1
  44d03c:	ldr	x1, [x19, #16]
  44d040:	cmp	x0, x1
  44d044:	b.cs	44d26c <_obstack_memory_used@@Base+0xc0d0>  // b.hs, b.nlast
  44d048:	lsl	x3, x0, #4
  44d04c:	ldr	x4, [x19]
  44d050:	add	x2, x4, x3
  44d054:	ldrb	w1, [x2, #8]
  44d058:	cmp	w1, #0x1
  44d05c:	b.eq	44d030 <_obstack_memory_used@@Base+0xbe94>  // b.none
  44d060:	cmp	w1, #0x5
  44d064:	b.ne	44d038 <_obstack_memory_used@@Base+0xbe9c>  // b.any
  44d068:	strb	w5, [x2, #8]
  44d06c:	b	44d038 <_obstack_memory_used@@Base+0xbe9c>
  44d070:	ldrb	w1, [x2, #10]
  44d074:	and	w1, w1, #0xffffffdf
  44d078:	strb	w1, [x2, #10]
  44d07c:	b	44d038 <_obstack_memory_used@@Base+0xbe9c>
  44d080:	mov	w8, w26
  44d084:	b	44d26c <_obstack_memory_used@@Base+0xc0d0>
  44d088:	add	x2, x2, #0x1
  44d08c:	cmp	x3, x2
  44d090:	b.eq	44d0ec <_obstack_memory_used@@Base+0xbf50>  // b.none
  44d094:	ldr	x4, [x5, x2, lsl #3]
  44d098:	lsl	x4, x4, #4
  44d09c:	add	x7, x0, x4
  44d0a0:	ldrb	w7, [x7, #8]
  44d0a4:	cmp	w7, #0x9
  44d0a8:	b.ne	44d088 <_obstack_memory_used@@Base+0xbeec>  // b.any
  44d0ac:	ldr	x7, [x0, x4]
  44d0b0:	ldr	x4, [x6]
  44d0b4:	cmp	x7, x4
  44d0b8:	b.ne	44d088 <_obstack_memory_used@@Base+0xbeec>  // b.any
  44d0bc:	cmp	x2, x3
  44d0c0:	b.eq	44d0ec <_obstack_memory_used@@Base+0xbf50>  // b.none
  44d0c4:	ldr	x0, [x19, #40]
  44d0c8:	add	x1, x1, x1, lsl #1
  44d0cc:	add	x1, x0, x1, lsl #3
  44d0d0:	ldr	x0, [x1, #16]
  44d0d4:	ldr	x24, [x0]
  44d0d8:	mov	x1, x24
  44d0dc:	add	x0, sp, #0x68
  44d0e0:	bl	441424 <_obstack_memory_used@@Base+0x288>
  44d0e4:	mov	x23, x0
  44d0e8:	cbz	x0, 44d130 <_obstack_memory_used@@Base+0xbf94>
  44d0ec:	add	x21, x21, #0x1
  44d0f0:	ldr	x3, [sp, #112]
  44d0f4:	cmp	x3, x21
  44d0f8:	b.le	44d150 <_obstack_memory_used@@Base+0xbfb4>
  44d0fc:	ldr	x5, [sp, #120]
  44d100:	ldr	x0, [x19]
  44d104:	ldr	x1, [x5, x21, lsl #3]
  44d108:	add	x6, x0, x1, lsl #4
  44d10c:	ldrb	w2, [x6, #8]
  44d110:	cmp	w2, #0x4
  44d114:	b.ne	44d0ec <_obstack_memory_used@@Base+0xbf50>  // b.any
  44d118:	cmp	x3, #0x0
  44d11c:	b.le	44d128 <_obstack_memory_used@@Base+0xbf8c>
  44d120:	mov	x2, #0x0                   	// #0
  44d124:	b	44d094 <_obstack_memory_used@@Base+0xbef8>
  44d128:	mov	x2, #0x0                   	// #0
  44d12c:	b	44d0bc <_obstack_memory_used@@Base+0xbf20>
  44d130:	add	x24, x24, x24, lsl #1
  44d134:	ldr	x1, [x19, #48]
  44d138:	add	x1, x1, x24, lsl #3
  44d13c:	add	x0, sp, #0x68
  44d140:	bl	442b48 <_obstack_memory_used@@Base+0x19ac>
  44d144:	cbnz	w0, 44d234 <_obstack_memory_used@@Base+0xc098>
  44d148:	mov	x21, x23
  44d14c:	b	44d0ec <_obstack_memory_used@@Base+0xbf50>
  44d150:	mov	w3, #0x0                   	// #0
  44d154:	add	x2, sp, #0x68
  44d158:	mov	x1, x19
  44d15c:	add	x0, sp, #0x64
  44d160:	bl	444d04 <_obstack_memory_used@@Base+0x3b68>
  44d164:	str	x0, [x19, #72]
  44d168:	cbz	x0, 44d1c4 <_obstack_memory_used@@Base+0xc028>
  44d16c:	ldrsb	w1, [x0, #104]
  44d170:	tbnz	w1, #31, 44d1cc <_obstack_memory_used@@Base+0xc030>
  44d174:	str	x0, [x19, #96]
  44d178:	str	x0, [x19, #88]
  44d17c:	str	x0, [x19, #80]
  44d180:	ldr	x0, [sp, #120]
  44d184:	bl	4047c0 <free@plt>
  44d188:	str	w22, [sp, #284]
  44d18c:	mov	x0, x20
  44d190:	bl	444fcc <_obstack_memory_used@@Base+0x3e30>
  44d194:	add	x0, sp, #0x80
  44d198:	bl	44501c <_obstack_memory_used@@Base+0x3e80>
  44d19c:	ldr	w0, [sp, #284]
  44d1a0:	cbnz	w0, 44d23c <_obstack_memory_used@@Base+0xc0a0>
  44d1a4:	ldr	w0, [sp, #284]
  44d1a8:	ldp	x25, x26, [sp, #64]
  44d1ac:	ldr	x27, [sp, #80]
  44d1b0:	ldp	x19, x20, [sp, #16]
  44d1b4:	ldp	x21, x22, [sp, #32]
  44d1b8:	ldp	x23, x24, [sp, #48]
  44d1bc:	ldp	x29, x30, [sp], #288
  44d1c0:	ret
  44d1c4:	ldr	w22, [sp, #100]
  44d1c8:	b	44d188 <_obstack_memory_used@@Base+0xbfec>
  44d1cc:	mov	w3, #0x1                   	// #1
  44d1d0:	add	x2, sp, #0x68
  44d1d4:	mov	x1, x19
  44d1d8:	add	x0, sp, #0x64
  44d1dc:	bl	444d04 <_obstack_memory_used@@Base+0x3b68>
  44d1e0:	str	x0, [x19, #80]
  44d1e4:	mov	w3, #0x2                   	// #2
  44d1e8:	add	x2, sp, #0x68
  44d1ec:	mov	x1, x19
  44d1f0:	add	x0, sp, #0x64
  44d1f4:	bl	444d04 <_obstack_memory_used@@Base+0x3b68>
  44d1f8:	str	x0, [x19, #88]
  44d1fc:	mov	w3, #0x6                   	// #6
  44d200:	add	x2, sp, #0x68
  44d204:	mov	x1, x19
  44d208:	add	x0, sp, #0x64
  44d20c:	bl	444d04 <_obstack_memory_used@@Base+0x3b68>
  44d210:	str	x0, [x19, #96]
  44d214:	ldr	x1, [x19, #80]
  44d218:	cbz	x1, 44d22c <_obstack_memory_used@@Base+0xc090>
  44d21c:	ldr	x1, [x19, #88]
  44d220:	cmp	x1, #0x0
  44d224:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  44d228:	b.ne	44d180 <_obstack_memory_used@@Base+0xbfe4>  // b.any
  44d22c:	ldr	w22, [sp, #100]
  44d230:	b	44d188 <_obstack_memory_used@@Base+0xbfec>
  44d234:	mov	w22, w0
  44d238:	b	44d188 <_obstack_memory_used@@Base+0xbfec>
  44d23c:	mov	x0, x19
  44d240:	bl	44505c <_obstack_memory_used@@Base+0x3ec0>
  44d244:	str	xzr, [x20]
  44d248:	str	xzr, [x20, #8]
  44d24c:	b	44d1a4 <_obstack_memory_used@@Base+0xc008>
  44d250:	mov	w0, #0xc                   	// #12
  44d254:	b	44d1b0 <_obstack_memory_used@@Base+0xc014>
  44d258:	cmp	w26, #0x0
  44d25c:	mov	x0, #0x0                   	// #0
  44d260:	ccmp	w8, #0x0, #0x0, eq  // eq = none
  44d264:	mov	w5, #0x7                   	// #7
  44d268:	b.ne	44d048 <_obstack_memory_used@@Base+0xbeac>  // b.any
  44d26c:	mov	w0, #0x1                   	// #1
  44d270:	str	w0, [x19, #180]
  44d274:	ldrb	w0, [x19, #176]
  44d278:	ldr	x1, [x19, #152]
  44d27c:	cmp	x1, #0x0
  44d280:	ccmp	w8, #0x0, #0x0, le
  44d284:	cset	w1, ne  // ne = any
  44d288:	and	w0, w0, #0xfffffffb
  44d28c:	bfi	w0, w1, #1, #1
  44d290:	strb	w0, [x19, #176]
  44d294:	b	44ced4 <_obstack_memory_used@@Base+0xbd38>
  44d298:	mov	w0, #0xc                   	// #12
  44d29c:	ldr	x27, [sp, #80]
  44d2a0:	b	44d2bc <_obstack_memory_used@@Base+0xc120>
  44d2a4:	mov	w0, #0xc                   	// #12
  44d2a8:	ldr	x27, [sp, #80]
  44d2ac:	b	44d2bc <_obstack_memory_used@@Base+0xc120>
  44d2b0:	mov	w0, #0xc                   	// #12
  44d2b4:	b	44d2bc <_obstack_memory_used@@Base+0xc120>
  44d2b8:	ldr	x27, [sp, #80]
  44d2bc:	str	w0, [sp, #284]
  44d2c0:	b	44ca74 <_obstack_memory_used@@Base+0xb8d8>
  44d2c4:	ldp	x25, x26, [sp, #64]
  44d2c8:	b	44d2d0 <_obstack_memory_used@@Base+0xc134>
  44d2cc:	ldp	x25, x26, [sp, #64]
  44d2d0:	mov	w0, #0xc                   	// #12
  44d2d4:	str	w0, [sp, #284]
  44d2d8:	mov	x0, x19
  44d2dc:	bl	44505c <_obstack_memory_used@@Base+0x3ec0>
  44d2e0:	str	xzr, [x20]
  44d2e4:	str	xzr, [x20, #8]
  44d2e8:	ldr	w0, [sp, #284]
  44d2ec:	b	44d1b0 <_obstack_memory_used@@Base+0xc014>
  44d2f0:	tst	w22, #0xffffff80
  44d2f4:	b.ne	44d304 <_obstack_memory_used@@Base+0xc168>  // b.any
  44d2f8:	ldrb	w0, [x19, #176]
  44d2fc:	orr	w0, w0, #0x8
  44d300:	strb	w0, [x19, #176]
  44d304:	add	w26, w26, #0x1
  44d308:	add	w22, w22, #0x1
  44d30c:	cmp	w26, #0x40
  44d310:	b.eq	44caf0 <_obstack_memory_used@@Base+0xb954>  // b.none
  44d314:	mov	w0, w22
  44d318:	bl	404640 <btowc@plt>
  44d31c:	cmn	w0, #0x1
  44d320:	b.eq	44d2f0 <_obstack_memory_used@@Base+0xc154>  // b.none
  44d324:	ldr	x3, [x19, #120]
  44d328:	lsl	x1, x27, x26
  44d32c:	ldr	x2, [x3, x25]
  44d330:	orr	x1, x2, x1
  44d334:	str	x1, [x3, x25]
  44d338:	tst	w22, #0xffffff80
  44d33c:	b.ne	44d304 <_obstack_memory_used@@Base+0xc168>  // b.any
  44d340:	cmp	w0, w22
  44d344:	b.eq	44d304 <_obstack_memory_used@@Base+0xc168>  // b.none
  44d348:	b	44d2f8 <_obstack_memory_used@@Base+0xc15c>
  44d34c:	stp	x29, x30, [sp, #-16]!
  44d350:	mov	x29, sp
  44d354:	mov	x4, x0
  44d358:	mov	x0, x2
  44d35c:	adrp	x2, 481000 <argp_program_version_hook@@Base+0x298>
  44d360:	ldr	x3, [x2, #976]
  44d364:	ubfx	w5, w3, #25, #1
  44d368:	ldrb	w2, [x0, #56]
  44d36c:	bfi	w2, w5, #4, #1
  44d370:	orr	w2, w2, #0xffffff80
  44d374:	strb	w2, [x0, #56]
  44d378:	mov	x2, x1
  44d37c:	mov	x1, x4
  44d380:	bl	44c804 <_obstack_memory_used@@Base+0xb668>
  44d384:	cbz	w0, 44d3b4 <_obstack_memory_used@@Base+0xc218>
  44d388:	adrp	x2, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  44d38c:	add	x2, x2, #0xe8
  44d390:	add	x1, x2, #0x68
  44d394:	add	x2, x2, #0x1e8
  44d398:	ldr	x0, [x2, w0, sxtw #3]
  44d39c:	mov	w2, #0x5                   	// #5
  44d3a0:	add	x1, x1, x0
  44d3a4:	mov	x0, #0x0                   	// #0
  44d3a8:	bl	4049c0 <dcgettext@plt>
  44d3ac:	ldp	x29, x30, [sp], #16
  44d3b0:	ret
  44d3b4:	mov	x0, #0x0                   	// #0
  44d3b8:	b	44d3ac <_obstack_memory_used@@Base+0xc210>
  44d3bc:	mov	x2, x0
  44d3c0:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  44d3c4:	ldr	x0, [x1, #976]
  44d3c8:	str	x2, [x1, #976]
  44d3cc:	ret
  44d3d0:	stp	x29, x30, [sp, #-48]!
  44d3d4:	mov	x29, sp
  44d3d8:	stp	x19, x20, [sp, #16]
  44d3dc:	str	x21, [sp, #32]
  44d3e0:	mov	x19, x0
  44d3e4:	ldr	x20, [x0]
  44d3e8:	ldr	x21, [x0, #32]
  44d3ec:	mov	x2, #0x100                 	// #256
  44d3f0:	mov	w1, #0x0                   	// #0
  44d3f4:	mov	x0, x21
  44d3f8:	bl	404420 <memset@plt>
  44d3fc:	mov	x2, x21
  44d400:	ldr	x1, [x20, #72]
  44d404:	mov	x0, x19
  44d408:	bl	446f7c <_obstack_memory_used@@Base+0x5de0>
  44d40c:	ldr	x1, [x20, #80]
  44d410:	ldr	x0, [x20, #72]
  44d414:	cmp	x0, x1
  44d418:	b.eq	44d428 <_obstack_memory_used@@Base+0xc28c>  // b.none
  44d41c:	mov	x2, x21
  44d420:	mov	x0, x19
  44d424:	bl	446f7c <_obstack_memory_used@@Base+0x5de0>
  44d428:	ldr	x1, [x20, #88]
  44d42c:	ldr	x0, [x20, #72]
  44d430:	cmp	x0, x1
  44d434:	b.eq	44d444 <_obstack_memory_used@@Base+0xc2a8>  // b.none
  44d438:	mov	x2, x21
  44d43c:	mov	x0, x19
  44d440:	bl	446f7c <_obstack_memory_used@@Base+0x5de0>
  44d444:	ldr	x1, [x20, #96]
  44d448:	ldr	x0, [x20, #72]
  44d44c:	cmp	x0, x1
  44d450:	b.eq	44d460 <_obstack_memory_used@@Base+0xc2c4>  // b.none
  44d454:	mov	x2, x21
  44d458:	mov	x0, x19
  44d45c:	bl	446f7c <_obstack_memory_used@@Base+0x5de0>
  44d460:	ldrb	w0, [x19, #56]
  44d464:	orr	w0, w0, #0x8
  44d468:	strb	w0, [x19, #56]
  44d46c:	mov	w0, #0x0                   	// #0
  44d470:	ldp	x19, x20, [sp, #16]
  44d474:	ldr	x21, [sp, #32]
  44d478:	ldp	x29, x30, [sp], #48
  44d47c:	ret
  44d480:	sub	sp, sp, #0x80
  44d484:	stp	x29, x30, [sp, #16]
  44d488:	add	x29, sp, #0x10
  44d48c:	stp	x21, x22, [sp, #48]
  44d490:	stp	x23, x24, [sp, #64]
  44d494:	str	x1, [sp, #112]
  44d498:	add	x24, x3, x4
  44d49c:	cmp	x3, #0x0
  44d4a0:	ccmp	x3, x2, #0x0, ge  // ge = tcont
  44d4a4:	b.gt	44d7e8 <_obstack_memory_used@@Base+0xc64c>
  44d4a8:	stp	x19, x20, [sp, #32]
  44d4ac:	stp	x25, x26, [sp, #80]
  44d4b0:	stp	x27, x28, [sp, #96]
  44d4b4:	mov	x22, x0
  44d4b8:	mov	x25, x2
  44d4bc:	mov	x21, x3
  44d4c0:	mov	x26, x5
  44d4c4:	mov	x20, x6
  44d4c8:	and	w28, w7, #0xff
  44d4cc:	cmp	x24, x2
  44d4d0:	b.gt	44d5ac <_obstack_memory_used@@Base+0xc410>
  44d4d4:	cmp	x4, #0x0
  44d4d8:	ccmp	x3, x24, #0x4, ge  // ge = tcont
  44d4dc:	b.gt	44d5b4 <_obstack_memory_used@@Base+0xc418>
  44d4e0:	tbnz	x24, #63, 44d80c <_obstack_memory_used@@Base+0xc670>
  44d4e4:	cmp	x4, #0x0
  44d4e8:	ccmp	x3, x24, #0x0, lt  // lt = tstop
  44d4ec:	b.le	44d80c <_obstack_memory_used@@Base+0xc670>
  44d4f0:	ldrb	w0, [x22, #56]
  44d4f4:	ubfx	x27, x0, #5, #2
  44d4f8:	cmp	x24, x21
  44d4fc:	b.le	44d50c <_obstack_memory_used@@Base+0xc370>
  44d500:	ldr	x1, [x22, #32]
  44d504:	cbz	x1, 44d50c <_obstack_memory_used@@Base+0xc370>
  44d508:	tbz	w0, #3, 44d5bc <_obstack_memory_used@@Base+0xc420>
  44d50c:	ldrb	w0, [x22, #56]
  44d510:	tbnz	w0, #4, 44d5e8 <_obstack_memory_used@@Base+0xc44c>
  44d514:	mov	x19, #0x1                   	// #1
  44d518:	cbz	x20, 44d534 <_obstack_memory_used@@Base+0xc398>
  44d51c:	ldrb	w0, [x22, #56]
  44d520:	and	w0, w0, #0x6
  44d524:	cmp	w0, #0x4
  44d528:	b.eq	44d5c8 <_obstack_memory_used@@Base+0xc42c>  // b.none
  44d52c:	ldr	x19, [x22, #48]
  44d530:	add	x19, x19, #0x1
  44d534:	str	x19, [sp, #120]
  44d538:	lsl	x0, x19, #4
  44d53c:	bl	404310 <malloc@plt>
  44d540:	mov	x23, x0
  44d544:	cbz	x0, 44d7f0 <_obstack_memory_used@@Base+0xc654>
  44d548:	str	w27, [sp]
  44d54c:	mov	x7, x0
  44d550:	mov	x6, x19
  44d554:	mov	x5, x26
  44d558:	mov	x4, x24
  44d55c:	mov	x3, x21
  44d560:	mov	x2, x25
  44d564:	ldr	x1, [sp, #112]
  44d568:	mov	x0, x22
  44d56c:	bl	44b638 <_obstack_memory_used@@Base+0xa49c>
  44d570:	cbz	w0, 44d5f4 <_obstack_memory_used@@Base+0xc458>
  44d574:	cmp	w0, #0x1
  44d578:	cset	x21, eq  // eq = none
  44d57c:	sub	x21, x21, #0x2
  44d580:	mov	x0, x23
  44d584:	bl	4047c0 <free@plt>
  44d588:	ldp	x19, x20, [sp, #32]
  44d58c:	ldp	x25, x26, [sp, #80]
  44d590:	ldp	x27, x28, [sp, #96]
  44d594:	mov	x0, x21
  44d598:	ldp	x21, x22, [sp, #48]
  44d59c:	ldp	x23, x24, [sp, #64]
  44d5a0:	ldp	x29, x30, [sp, #16]
  44d5a4:	add	sp, sp, #0x80
  44d5a8:	ret
  44d5ac:	mov	x24, x2
  44d5b0:	b	44d4f0 <_obstack_memory_used@@Base+0xc354>
  44d5b4:	mov	x24, x2
  44d5b8:	b	44d4f0 <_obstack_memory_used@@Base+0xc354>
  44d5bc:	mov	x0, x22
  44d5c0:	bl	44d3d0 <_obstack_memory_used@@Base+0xc234>
  44d5c4:	b	44d50c <_obstack_memory_used@@Base+0xc370>
  44d5c8:	ldr	x0, [x20]
  44d5cc:	ldr	x1, [x22, #48]
  44d5d0:	cmp	x0, x1
  44d5d4:	b.hi	44d52c <_obstack_memory_used@@Base+0xc390>  // b.pmore
  44d5d8:	cmp	x0, #0x0
  44d5dc:	csel	x19, x0, x19, gt
  44d5e0:	csel	x20, x20, xzr, gt
  44d5e4:	b	44d534 <_obstack_memory_used@@Base+0xc398>
  44d5e8:	mov	x19, #0x1                   	// #1
  44d5ec:	mov	x20, #0x0                   	// #0
  44d5f0:	b	44d534 <_obstack_memory_used@@Base+0xc398>
  44d5f4:	cbz	x20, 44d6a8 <_obstack_memory_used@@Base+0xc50c>
  44d5f8:	ldrb	w24, [x22, #56]
  44d5fc:	ubfx	x24, x24, #1, #2
  44d600:	add	x25, x19, #0x1
  44d604:	cbz	w24, 44d6b4 <_obstack_memory_used@@Base+0xc518>
  44d608:	cmp	w24, #0x1
  44d60c:	b.eq	44d6f8 <_obstack_memory_used@@Base+0xc55c>  // b.none
  44d610:	cmp	w24, #0x2
  44d614:	b.ne	44d74c <_obstack_memory_used@@Base+0xc5b0>  // b.any
  44d618:	ldr	x0, [x20]
  44d61c:	ldr	x1, [sp, #120]
  44d620:	cmp	x1, x0
  44d624:	b.hi	44d770 <_obstack_memory_used@@Base+0xc5d4>  // b.pmore
  44d628:	cmp	x19, #0x0
  44d62c:	b.le	44d794 <_obstack_memory_used@@Base+0xc5f8>
  44d630:	add	x1, x23, #0x8
  44d634:	ldr	x0, [sp, #120]
  44d638:	lsl	x2, x0, #3
  44d63c:	mov	x0, #0x0                   	// #0
  44d640:	ldur	x4, [x1, #-8]
  44d644:	ldr	x3, [x20, #8]
  44d648:	str	x4, [x3, x0]
  44d64c:	ldr	x4, [x1], #16
  44d650:	ldr	x3, [x20, #16]
  44d654:	str	x4, [x3, x0]
  44d658:	add	x0, x0, #0x8
  44d65c:	cmp	x0, x2
  44d660:	b.ne	44d640 <_obstack_memory_used@@Base+0xc4a4>  // b.any
  44d664:	ldr	x0, [x20]
  44d668:	cmp	x0, x19
  44d66c:	b.ls	44d694 <_obstack_memory_used@@Base+0xc4f8>  // b.plast
  44d670:	mov	x0, #0xffffffffffffffff    	// #-1
  44d674:	ldr	x1, [x20, #16]
  44d678:	str	x0, [x1, x19, lsl #3]
  44d67c:	ldr	x1, [x20, #8]
  44d680:	str	x0, [x1, x19, lsl #3]
  44d684:	add	x19, x19, #0x1
  44d688:	ldr	x1, [x20]
  44d68c:	cmp	x19, x1
  44d690:	b.cc	44d674 <_obstack_memory_used@@Base+0xc4d8>  // b.lo, b.ul, b.last
  44d694:	ldrb	w0, [x22, #56]
  44d698:	bfi	w0, w24, #1, #2
  44d69c:	strb	w0, [x22, #56]
  44d6a0:	tst	w0, #0x6
  44d6a4:	b.eq	44d804 <_obstack_memory_used@@Base+0xc668>  // b.none
  44d6a8:	cbnz	w28, 44d7ac <_obstack_memory_used@@Base+0xc610>
  44d6ac:	ldr	x21, [x23]
  44d6b0:	b	44d580 <_obstack_memory_used@@Base+0xc3e4>
  44d6b4:	lsl	x26, x25, #3
  44d6b8:	mov	x0, x26
  44d6bc:	bl	404310 <malloc@plt>
  44d6c0:	mov	x24, x0
  44d6c4:	str	x0, [x20, #8]
  44d6c8:	cbz	x0, 44d79c <_obstack_memory_used@@Base+0xc600>
  44d6cc:	mov	x0, x26
  44d6d0:	bl	404310 <malloc@plt>
  44d6d4:	str	x0, [x20, #16]
  44d6d8:	cbz	x0, 44d6e8 <_obstack_memory_used@@Base+0xc54c>
  44d6dc:	str	x25, [x20]
  44d6e0:	mov	w24, #0x1                   	// #1
  44d6e4:	b	44d628 <_obstack_memory_used@@Base+0xc48c>
  44d6e8:	mov	x0, x24
  44d6ec:	bl	4047c0 <free@plt>
  44d6f0:	mov	w24, #0x0                   	// #0
  44d6f4:	b	44d694 <_obstack_memory_used@@Base+0xc4f8>
  44d6f8:	ldr	x0, [x20]
  44d6fc:	cmp	x0, x25
  44d700:	b.cs	44d628 <_obstack_memory_used@@Base+0xc48c>  // b.hs, b.nlast
  44d704:	lsl	x27, x25, #3
  44d708:	mov	x1, x27
  44d70c:	ldr	x0, [x20, #8]
  44d710:	bl	404540 <realloc@plt>
  44d714:	mov	x26, x0
  44d718:	cbz	x0, 44d7a4 <_obstack_memory_used@@Base+0xc608>
  44d71c:	mov	x1, x27
  44d720:	ldr	x0, [x20, #16]
  44d724:	bl	404540 <realloc@plt>
  44d728:	cbz	x0, 44d73c <_obstack_memory_used@@Base+0xc5a0>
  44d72c:	str	x26, [x20, #8]
  44d730:	str	x0, [x20, #16]
  44d734:	str	x25, [x20]
  44d738:	b	44d628 <_obstack_memory_used@@Base+0xc48c>
  44d73c:	mov	x0, x26
  44d740:	bl	4047c0 <free@plt>
  44d744:	mov	w24, #0x0                   	// #0
  44d748:	b	44d694 <_obstack_memory_used@@Base+0xc4f8>
  44d74c:	adrp	x3, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  44d750:	add	x3, x3, #0xe8
  44d754:	add	x3, x3, #0x270
  44d758:	mov	w2, #0x1f9                 	// #505
  44d75c:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  44d760:	add	x1, x1, #0x3e8
  44d764:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  44d768:	add	x0, x0, #0x490
  44d76c:	bl	404ac0 <__assert_fail@plt>
  44d770:	adrp	x3, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  44d774:	add	x3, x3, #0xe8
  44d778:	add	x3, x3, #0x270
  44d77c:	mov	w2, #0x1fb                 	// #507
  44d780:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  44d784:	add	x1, x1, #0x3e8
  44d788:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  44d78c:	add	x0, x0, #0x4b0
  44d790:	bl	404ac0 <__assert_fail@plt>
  44d794:	mov	x19, #0x0                   	// #0
  44d798:	b	44d664 <_obstack_memory_used@@Base+0xc4c8>
  44d79c:	mov	w24, #0x0                   	// #0
  44d7a0:	b	44d694 <_obstack_memory_used@@Base+0xc4f8>
  44d7a4:	mov	w24, #0x0                   	// #0
  44d7a8:	b	44d694 <_obstack_memory_used@@Base+0xc4f8>
  44d7ac:	ldr	x0, [x23]
  44d7b0:	cmp	x0, x21
  44d7b4:	b.ne	44d7c4 <_obstack_memory_used@@Base+0xc628>  // b.any
  44d7b8:	ldr	x3, [x23, #8]
  44d7bc:	sub	x21, x3, x21
  44d7c0:	b	44d580 <_obstack_memory_used@@Base+0xc3e4>
  44d7c4:	adrp	x3, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  44d7c8:	add	x3, x3, #0xe8
  44d7cc:	add	x3, x3, #0x280
  44d7d0:	mov	w2, #0x1be                 	// #446
  44d7d4:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  44d7d8:	add	x1, x1, #0x3e8
  44d7dc:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  44d7e0:	add	x0, x0, #0x4c8
  44d7e4:	bl	404ac0 <__assert_fail@plt>
  44d7e8:	mov	x21, #0xffffffffffffffff    	// #-1
  44d7ec:	b	44d594 <_obstack_memory_used@@Base+0xc3f8>
  44d7f0:	mov	x21, #0xfffffffffffffffe    	// #-2
  44d7f4:	ldp	x19, x20, [sp, #32]
  44d7f8:	ldp	x25, x26, [sp, #80]
  44d7fc:	ldp	x27, x28, [sp, #96]
  44d800:	b	44d594 <_obstack_memory_used@@Base+0xc3f8>
  44d804:	mov	x21, #0xfffffffffffffffe    	// #-2
  44d808:	b	44d580 <_obstack_memory_used@@Base+0xc3e4>
  44d80c:	ldrb	w27, [x22, #56]
  44d810:	ubfx	x27, x27, #5, #2
  44d814:	mov	x24, #0x0                   	// #0
  44d818:	b	44d50c <_obstack_memory_used@@Base+0xc370>
  44d81c:	stp	x29, x30, [sp, #-112]!
  44d820:	mov	x29, sp
  44d824:	stp	x19, x20, [sp, #16]
  44d828:	stp	x27, x28, [sp, #80]
  44d82c:	str	x1, [sp, #104]
  44d830:	ldr	x27, [sp, #112]
  44d834:	cmp	x4, #0x0
  44d838:	ccmp	x27, #0x0, #0x1, ge  // ge = tcont
  44d83c:	ccmp	x2, #0x0, #0x1, ge  // ge = tcont
  44d840:	b.lt	44d918 <_obstack_memory_used@@Base+0xc77c>  // b.tstop
  44d844:	stp	x21, x22, [sp, #32]
  44d848:	stp	x23, x24, [sp, #48]
  44d84c:	stp	x25, x26, [sp, #64]
  44d850:	mov	x22, x0
  44d854:	mov	x19, x2
  44d858:	mov	x21, x3
  44d85c:	mov	x20, x4
  44d860:	mov	x23, x5
  44d864:	mov	x24, x6
  44d868:	mov	x25, x7
  44d86c:	adds	x28, x2, x4
  44d870:	b.vs	44d920 <_obstack_memory_used@@Base+0xc784>
  44d874:	cmp	x4, #0x0
  44d878:	b.le	44d90c <_obstack_memory_used@@Base+0xc770>
  44d87c:	mov	x26, #0x0                   	// #0
  44d880:	cmp	x2, #0x0
  44d884:	b.gt	44d8d8 <_obstack_memory_used@@Base+0xc73c>
  44d888:	ldrb	w7, [sp, #120]
  44d88c:	mov	x6, x25
  44d890:	mov	x5, x27
  44d894:	mov	x4, x24
  44d898:	mov	x3, x23
  44d89c:	mov	x2, x28
  44d8a0:	mov	x1, x21
  44d8a4:	mov	x0, x22
  44d8a8:	bl	44d480 <_obstack_memory_used@@Base+0xc2e4>
  44d8ac:	mov	x19, x0
  44d8b0:	mov	x0, x26
  44d8b4:	bl	4047c0 <free@plt>
  44d8b8:	ldp	x21, x22, [sp, #32]
  44d8bc:	ldp	x23, x24, [sp, #48]
  44d8c0:	ldp	x25, x26, [sp, #64]
  44d8c4:	mov	x0, x19
  44d8c8:	ldp	x19, x20, [sp, #16]
  44d8cc:	ldp	x27, x28, [sp, #80]
  44d8d0:	ldp	x29, x30, [sp], #112
  44d8d4:	ret
  44d8d8:	mov	x0, x28
  44d8dc:	bl	404310 <malloc@plt>
  44d8e0:	mov	x26, x0
  44d8e4:	cbz	x0, 44d934 <_obstack_memory_used@@Base+0xc798>
  44d8e8:	mov	x2, x19
  44d8ec:	ldr	x1, [sp, #104]
  44d8f0:	bl	403f70 <memcpy@plt>
  44d8f4:	mov	x2, x20
  44d8f8:	mov	x1, x21
  44d8fc:	add	x0, x26, x19
  44d900:	bl	403f70 <memcpy@plt>
  44d904:	mov	x21, x26
  44d908:	b	44d888 <_obstack_memory_used@@Base+0xc6ec>
  44d90c:	ldr	x21, [sp, #104]
  44d910:	mov	x26, #0x0                   	// #0
  44d914:	b	44d888 <_obstack_memory_used@@Base+0xc6ec>
  44d918:	mov	x19, #0xfffffffffffffffe    	// #-2
  44d91c:	b	44d8c4 <_obstack_memory_used@@Base+0xc728>
  44d920:	mov	x19, #0xfffffffffffffffe    	// #-2
  44d924:	ldp	x21, x22, [sp, #32]
  44d928:	ldp	x23, x24, [sp, #48]
  44d92c:	ldp	x25, x26, [sp, #64]
  44d930:	b	44d8c4 <_obstack_memory_used@@Base+0xc728>
  44d934:	mov	x19, #0xfffffffffffffffe    	// #-2
  44d938:	ldp	x21, x22, [sp, #32]
  44d93c:	ldp	x23, x24, [sp, #48]
  44d940:	ldp	x25, x26, [sp, #64]
  44d944:	b	44d8c4 <_obstack_memory_used@@Base+0xc728>
  44d948:	stp	x29, x30, [sp, #-64]!
  44d94c:	mov	x29, sp
  44d950:	stp	x19, x20, [sp, #16]
  44d954:	stp	x21, x22, [sp, #32]
  44d958:	str	x23, [sp, #48]
  44d95c:	mov	x19, x0
  44d960:	mov	x22, x1
  44d964:	mov	w20, w2
  44d968:	tst	x20, #0x1
  44d96c:	mov	x21, #0xb2fc                	// #45820
  44d970:	movk	x21, #0x3, lsl #16
  44d974:	mov	x23, #0x2c6                 	// #710
  44d978:	movk	x23, #0x101, lsl #16
  44d97c:	csel	x23, x21, x23, ne  // ne = any
  44d980:	str	xzr, [x0]
  44d984:	str	xzr, [x0, #8]
  44d988:	str	xzr, [x0, #16]
  44d98c:	mov	x0, #0x100                 	// #256
  44d990:	bl	404310 <malloc@plt>
  44d994:	str	x0, [x19, #32]
  44d998:	cbz	x0, 44da34 <_obstack_memory_used@@Base+0xc898>
  44d99c:	sbfiz	x21, x20, #21, #32
  44d9a0:	and	x21, x21, #0x400000
  44d9a4:	orr	x21, x21, x23
  44d9a8:	mov	w1, #0x0                   	// #0
  44d9ac:	tbz	w20, #2, 44d9bc <_obstack_memory_used@@Base+0xc820>
  44d9b0:	and	x21, x21, #0xffffffffffffffbf
  44d9b4:	orr	x21, x21, #0x100
  44d9b8:	mov	w1, #0x1                   	// #1
  44d9bc:	ldrb	w0, [x19, #56]
  44d9c0:	bfi	w0, w1, #7, #1
  44d9c4:	ubfx	x20, x20, #3, #1
  44d9c8:	bfi	w0, w20, #4, #1
  44d9cc:	strb	w0, [x19, #56]
  44d9d0:	str	xzr, [x19, #40]
  44d9d4:	mov	x0, x22
  44d9d8:	bl	403ff0 <strlen@plt>
  44d9dc:	mov	x3, x21
  44d9e0:	mov	x2, x0
  44d9e4:	mov	x1, x22
  44d9e8:	mov	x0, x19
  44d9ec:	bl	44c804 <_obstack_memory_used@@Base+0xb668>
  44d9f0:	mov	w20, w0
  44d9f4:	cmp	w0, #0x10
  44d9f8:	b.eq	44da20 <_obstack_memory_used@@Base+0xc884>  // b.none
  44d9fc:	cbnz	w0, 44da24 <_obstack_memory_used@@Base+0xc888>
  44da00:	mov	x0, x19
  44da04:	bl	44d3d0 <_obstack_memory_used@@Base+0xc234>
  44da08:	mov	w0, w20
  44da0c:	ldp	x19, x20, [sp, #16]
  44da10:	ldp	x21, x22, [sp, #32]
  44da14:	ldr	x23, [sp, #48]
  44da18:	ldp	x29, x30, [sp], #64
  44da1c:	ret
  44da20:	mov	w20, #0x8                   	// #8
  44da24:	ldr	x0, [x19, #32]
  44da28:	bl	4047c0 <free@plt>
  44da2c:	str	xzr, [x19, #32]
  44da30:	b	44da08 <_obstack_memory_used@@Base+0xc86c>
  44da34:	mov	w20, #0xc                   	// #12
  44da38:	b	44da08 <_obstack_memory_used@@Base+0xc86c>
  44da3c:	stp	x29, x30, [sp, #-48]!
  44da40:	mov	x29, sp
  44da44:	stp	x19, x20, [sp, #16]
  44da48:	stp	x21, x22, [sp, #32]
  44da4c:	cmp	w0, #0x10
  44da50:	b.hi	44dabc <_obstack_memory_used@@Base+0xc920>  // b.pmore
  44da54:	mov	x21, x2
  44da58:	mov	x20, x3
  44da5c:	adrp	x4, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  44da60:	add	x4, x4, #0xe8
  44da64:	add	x1, x4, #0x68
  44da68:	add	x4, x4, #0x1e8
  44da6c:	ldr	x0, [x4, w0, sxtw #3]
  44da70:	mov	w2, #0x5                   	// #5
  44da74:	add	x1, x1, x0
  44da78:	mov	x0, #0x0                   	// #0
  44da7c:	bl	4049c0 <dcgettext@plt>
  44da80:	mov	x22, x0
  44da84:	bl	403ff0 <strlen@plt>
  44da88:	add	x19, x0, #0x1
  44da8c:	cbz	x20, 44daa8 <_obstack_memory_used@@Base+0xc90c>
  44da90:	mov	x2, x19
  44da94:	cmp	x19, x20
  44da98:	b.hi	44dac0 <_obstack_memory_used@@Base+0xc924>  // b.pmore
  44da9c:	mov	x1, x22
  44daa0:	mov	x0, x21
  44daa4:	bl	403f70 <memcpy@plt>
  44daa8:	mov	x0, x19
  44daac:	ldp	x19, x20, [sp, #16]
  44dab0:	ldp	x21, x22, [sp, #32]
  44dab4:	ldp	x29, x30, [sp], #48
  44dab8:	ret
  44dabc:	bl	404660 <abort@plt>
  44dac0:	sub	x2, x20, #0x1
  44dac4:	strb	wzr, [x21, x2]
  44dac8:	b	44da9c <_obstack_memory_used@@Base+0xc900>
  44dacc:	stp	x29, x30, [sp, #-32]!
  44dad0:	mov	x29, sp
  44dad4:	str	x19, [sp, #16]
  44dad8:	mov	x19, x0
  44dadc:	ldr	x0, [x0]
  44dae0:	cbz	x0, 44dae8 <_obstack_memory_used@@Base+0xc94c>
  44dae4:	bl	44505c <_obstack_memory_used@@Base+0x3ec0>
  44dae8:	str	xzr, [x19]
  44daec:	str	xzr, [x19, #8]
  44daf0:	ldr	x0, [x19, #32]
  44daf4:	bl	4047c0 <free@plt>
  44daf8:	str	xzr, [x19, #32]
  44dafc:	ldr	x0, [x19, #40]
  44db00:	bl	4047c0 <free@plt>
  44db04:	str	xzr, [x19, #40]
  44db08:	ldr	x19, [sp, #16]
  44db0c:	ldp	x29, x30, [sp], #32
  44db10:	ret
  44db14:	tst	w4, #0xfffffff8
  44db18:	b.ne	44dbd4 <_obstack_memory_used@@Base+0xca38>  // b.any
  44db1c:	sub	sp, sp, #0x50
  44db20:	stp	x29, x30, [sp, #16]
  44db24:	add	x29, sp, #0x10
  44db28:	stp	x19, x20, [sp, #32]
  44db2c:	stp	x21, x22, [sp, #48]
  44db30:	str	x23, [sp, #64]
  44db34:	mov	x20, x0
  44db38:	mov	x21, x1
  44db3c:	mov	x23, x2
  44db40:	mov	x22, x3
  44db44:	mov	w19, w4
  44db48:	tbz	w19, #2, 44db9c <_obstack_memory_used@@Base+0xca00>
  44db4c:	ldr	x3, [x3]
  44db50:	ldr	x2, [x22, #8]
  44db54:	ldrb	w0, [x20, #56]
  44db58:	tbz	w0, #4, 44dbb0 <_obstack_memory_used@@Base+0xca14>
  44db5c:	str	w19, [sp]
  44db60:	mov	x7, #0x0                   	// #0
  44db64:	mov	x6, #0x0                   	// #0
  44db68:	mov	x5, x2
  44db6c:	mov	x4, x2
  44db70:	mov	x1, x21
  44db74:	mov	x0, x20
  44db78:	bl	44b638 <_obstack_memory_used@@Base+0xa49c>
  44db7c:	cmp	w0, #0x0
  44db80:	cset	w0, ne  // ne = any
  44db84:	ldp	x19, x20, [sp, #32]
  44db88:	ldp	x21, x22, [sp, #48]
  44db8c:	ldr	x23, [sp, #64]
  44db90:	ldp	x29, x30, [sp, #16]
  44db94:	add	sp, sp, #0x50
  44db98:	ret
  44db9c:	mov	x0, x1
  44dba0:	bl	403ff0 <strlen@plt>
  44dba4:	mov	x2, x0
  44dba8:	mov	x3, #0x0                   	// #0
  44dbac:	b	44db54 <_obstack_memory_used@@Base+0xc9b8>
  44dbb0:	str	w19, [sp]
  44dbb4:	mov	x7, x22
  44dbb8:	mov	x6, x23
  44dbbc:	mov	x5, x2
  44dbc0:	mov	x4, x2
  44dbc4:	mov	x1, x21
  44dbc8:	mov	x0, x20
  44dbcc:	bl	44b638 <_obstack_memory_used@@Base+0xa49c>
  44dbd0:	b	44db7c <_obstack_memory_used@@Base+0xc9e0>
  44dbd4:	mov	w0, #0x2                   	// #2
  44dbd8:	ret
  44dbdc:	stp	x29, x30, [sp, #-16]!
  44dbe0:	mov	x29, sp
  44dbe4:	mov	x5, x2
  44dbe8:	mov	w7, #0x1                   	// #1
  44dbec:	mov	x6, x4
  44dbf0:	mov	x4, #0x0                   	// #0
  44dbf4:	bl	44d480 <_obstack_memory_used@@Base+0xc2e4>
  44dbf8:	ldp	x29, x30, [sp], #16
  44dbfc:	ret
  44dc00:	stp	x29, x30, [sp, #-16]!
  44dc04:	mov	x29, sp
  44dc08:	mov	w7, #0x0                   	// #0
  44dc0c:	mov	x6, x5
  44dc10:	mov	x5, x2
  44dc14:	bl	44d480 <_obstack_memory_used@@Base+0xc2e4>
  44dc18:	ldp	x29, x30, [sp], #16
  44dc1c:	ret
  44dc20:	sub	sp, sp, #0x20
  44dc24:	stp	x29, x30, [sp, #16]
  44dc28:	add	x29, sp, #0x10
  44dc2c:	mov	w8, #0x1                   	// #1
  44dc30:	strb	w8, [sp, #8]
  44dc34:	str	x7, [sp]
  44dc38:	mov	x7, x6
  44dc3c:	mov	x6, #0x0                   	// #0
  44dc40:	bl	44d81c <_obstack_memory_used@@Base+0xc680>
  44dc44:	ldp	x29, x30, [sp, #16]
  44dc48:	add	sp, sp, #0x20
  44dc4c:	ret
  44dc50:	sub	sp, sp, #0x20
  44dc54:	stp	x29, x30, [sp, #16]
  44dc58:	add	x29, sp, #0x10
  44dc5c:	strb	wzr, [sp, #8]
  44dc60:	ldr	x8, [sp, #32]
  44dc64:	str	x8, [sp]
  44dc68:	bl	44d81c <_obstack_memory_used@@Base+0xc680>
  44dc6c:	ldp	x29, x30, [sp, #16]
  44dc70:	add	sp, sp, #0x20
  44dc74:	ret
  44dc78:	cbz	x2, 44dc9c <_obstack_memory_used@@Base+0xcb00>
  44dc7c:	ldrb	w5, [x0, #56]
  44dc80:	mov	w6, #0x1                   	// #1
  44dc84:	bfi	w5, w6, #1, #2
  44dc88:	strb	w5, [x0, #56]
  44dc8c:	str	x2, [x1]
  44dc90:	str	x3, [x1, #8]
  44dc94:	str	x4, [x1, #16]
  44dc98:	ret
  44dc9c:	ldrb	w2, [x0, #56]
  44dca0:	and	w2, w2, #0xfffffff9
  44dca4:	strb	w2, [x0, #56]
  44dca8:	str	xzr, [x1]
  44dcac:	str	xzr, [x1, #16]
  44dcb0:	str	xzr, [x1, #8]
  44dcb4:	b	44dc98 <_obstack_memory_used@@Base+0xcafc>
  44dcb8:	stp	x29, x30, [sp, #-16]!
  44dcbc:	mov	x29, sp
  44dcc0:	cbz	x0, 44dce0 <_obstack_memory_used@@Base+0xcb44>
  44dcc4:	mov	x1, x0
  44dcc8:	mov	w2, #0x1                   	// #1
  44dccc:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  44dcd0:	add	x0, x0, #0x510
  44dcd4:	bl	404100 <setenv@plt>
  44dcd8:	ldp	x29, x30, [sp], #16
  44dcdc:	ret
  44dce0:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  44dce4:	add	x0, x0, #0x510
  44dce8:	bl	404930 <unsetenv@plt>
  44dcec:	b	44dcd8 <_obstack_memory_used@@Base+0xcb3c>
  44dcf0:	stp	x29, x30, [sp, #-48]!
  44dcf4:	mov	x29, sp
  44dcf8:	stp	x19, x20, [sp, #16]
  44dcfc:	cbz	x0, 44dd74 <_obstack_memory_used@@Base+0xcbd8>
  44dd00:	stp	x21, x22, [sp, #32]
  44dd04:	mov	x20, x0
  44dd08:	bl	403ff0 <strlen@plt>
  44dd0c:	add	x21, x0, #0x1
  44dd10:	cmp	x21, #0x76
  44dd14:	mov	x0, #0x76                  	// #118
  44dd18:	csel	x0, x21, x0, cs  // cs = hs, nlast
  44dd1c:	add	x0, x0, #0x11
  44dd20:	and	x0, x0, #0xfffffffffffffff8
  44dd24:	bl	404310 <malloc@plt>
  44dd28:	mov	x19, x0
  44dd2c:	cbz	x0, 44dd6c <_obstack_memory_used@@Base+0xcbd0>
  44dd30:	str	xzr, [x0]
  44dd34:	mov	w0, #0x1                   	// #1
  44dd38:	strb	w0, [x19, #8]
  44dd3c:	mov	x22, x19
  44dd40:	strb	wzr, [x22, #9]!
  44dd44:	mov	x2, x21
  44dd48:	mov	x1, x20
  44dd4c:	mov	x0, x22
  44dd50:	bl	403f70 <memcpy@plt>
  44dd54:	strb	wzr, [x22, x21]
  44dd58:	ldp	x21, x22, [sp, #32]
  44dd5c:	mov	x0, x19
  44dd60:	ldp	x19, x20, [sp, #16]
  44dd64:	ldp	x29, x30, [sp], #48
  44dd68:	ret
  44dd6c:	ldp	x21, x22, [sp, #32]
  44dd70:	b	44dd5c <_obstack_memory_used@@Base+0xcbc0>
  44dd74:	mov	x0, #0x80                  	// #128
  44dd78:	bl	404310 <malloc@plt>
  44dd7c:	mov	x19, x0
  44dd80:	cbz	x0, 44dd5c <_obstack_memory_used@@Base+0xcbc0>
  44dd84:	str	xzr, [x0]
  44dd88:	strb	wzr, [x0, #8]
  44dd8c:	strb	wzr, [x0, #9]
  44dd90:	b	44dd5c <_obstack_memory_used@@Base+0xcbc0>
  44dd94:	stp	x29, x30, [sp, #-64]!
  44dd98:	mov	x29, sp
  44dd9c:	stp	x21, x22, [sp, #32]
  44dda0:	ldr	x21, [x1, #48]
  44dda4:	cbz	x21, 44dedc <_obstack_memory_used@@Base+0xcd40>
  44dda8:	stp	x19, x20, [sp, #16]
  44ddac:	mov	x20, x0
  44ddb0:	mov	x22, x1
  44ddb4:	cmp	x1, x21
  44ddb8:	b.hi	44ddcc <_obstack_memory_used@@Base+0xcc30>  // b.pmore
  44ddbc:	add	x1, x1, #0x38
  44ddc0:	mov	w0, #0x1                   	// #1
  44ddc4:	cmp	x21, x1
  44ddc8:	b.cc	44def4 <_obstack_memory_used@@Base+0xcd58>  // b.lo, b.ul, b.last
  44ddcc:	ldrb	w0, [x21]
  44ddd0:	cbz	w0, 44debc <_obstack_memory_used@@Base+0xcd20>
  44ddd4:	stp	x23, x24, [sp, #48]
  44ddd8:	add	x19, x20, #0x9
  44dddc:	mov	x1, x21
  44dde0:	mov	x0, x19
  44dde4:	bl	404720 <strcmp@plt>
  44dde8:	cbz	w0, 44deb4 <_obstack_memory_used@@Base+0xcd18>
  44ddec:	ldrb	w0, [x19]
  44ddf0:	cbnz	w0, 44de08 <_obstack_memory_used@@Base+0xcc6c>
  44ddf4:	add	x23, x20, #0x9
  44ddf8:	cmp	x23, x19
  44ddfc:	b.ne	44de34 <_obstack_memory_used@@Base+0xcc98>  // b.any
  44de00:	ldrb	w0, [x20, #8]
  44de04:	cbz	w0, 44de34 <_obstack_memory_used@@Base+0xcc98>
  44de08:	mov	x0, x19
  44de0c:	bl	403ff0 <strlen@plt>
  44de10:	add	x0, x0, #0x1
  44de14:	add	x19, x19, x0
  44de18:	ldrb	w0, [x19]
  44de1c:	cbnz	w0, 44dddc <_obstack_memory_used@@Base+0xcc40>
  44de20:	ldr	x0, [x20]
  44de24:	cbz	x0, 44dddc <_obstack_memory_used@@Base+0xcc40>
  44de28:	add	x19, x0, #0x9
  44de2c:	mov	x20, x0
  44de30:	b	44dddc <_obstack_memory_used@@Base+0xcc40>
  44de34:	mov	x0, x21
  44de38:	bl	403ff0 <strlen@plt>
  44de3c:	add	x24, x0, #0x1
  44de40:	sub	x23, x19, x23
  44de44:	mvn	x0, x23
  44de48:	cmp	x0, x24
  44de4c:	b.cc	44de78 <_obstack_memory_used@@Base+0xccdc>  // b.lo, b.ul, b.last
  44de50:	add	x23, x24, x23
  44de54:	cmp	x23, #0x76
  44de58:	b.hi	44de94 <_obstack_memory_used@@Base+0xccf8>  // b.pmore
  44de5c:	mov	x2, x24
  44de60:	mov	x1, x21
  44de64:	mov	x0, x19
  44de68:	bl	403f70 <memcpy@plt>
  44de6c:	strb	wzr, [x19, x24]
  44de70:	ldp	x23, x24, [sp, #48]
  44de74:	b	44dec4 <_obstack_memory_used@@Base+0xcd28>
  44de78:	bl	404ad0 <__errno_location@plt>
  44de7c:	mov	w1, #0xc                   	// #12
  44de80:	str	w1, [x0]
  44de84:	mov	w0, #0x0                   	// #0
  44de88:	ldp	x19, x20, [sp, #16]
  44de8c:	ldp	x23, x24, [sp, #48]
  44de90:	b	44ded0 <_obstack_memory_used@@Base+0xcd34>
  44de94:	mov	x0, x21
  44de98:	bl	44dcf0 <_obstack_memory_used@@Base+0xcb54>
  44de9c:	str	x0, [x20]
  44dea0:	cbz	x0, 44dee4 <_obstack_memory_used@@Base+0xcd48>
  44dea4:	strb	wzr, [x0, #8]
  44dea8:	add	x19, x0, #0x9
  44deac:	ldp	x23, x24, [sp, #48]
  44deb0:	b	44dec4 <_obstack_memory_used@@Base+0xcd28>
  44deb4:	ldp	x23, x24, [sp, #48]
  44deb8:	b	44dec4 <_obstack_memory_used@@Base+0xcd28>
  44debc:	adrp	x19, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  44dec0:	add	x19, x19, #0x7f8
  44dec4:	str	x19, [x22, #48]
  44dec8:	mov	w0, #0x1                   	// #1
  44decc:	ldp	x19, x20, [sp, #16]
  44ded0:	ldp	x21, x22, [sp, #32]
  44ded4:	ldp	x29, x30, [sp], #64
  44ded8:	ret
  44dedc:	mov	w0, #0x1                   	// #1
  44dee0:	b	44ded0 <_obstack_memory_used@@Base+0xcd34>
  44dee4:	mov	w0, #0x0                   	// #0
  44dee8:	ldp	x19, x20, [sp, #16]
  44deec:	ldp	x23, x24, [sp, #48]
  44def0:	b	44ded0 <_obstack_memory_used@@Base+0xcd34>
  44def4:	ldp	x19, x20, [sp, #16]
  44def8:	b	44ded0 <_obstack_memory_used@@Base+0xcd34>
  44defc:	cmp	x0, #0x1
  44df00:	b.eq	44df34 <_obstack_memory_used@@Base+0xcd98>  // b.none
  44df04:	stp	x29, x30, [sp, #-32]!
  44df08:	mov	x29, sp
  44df0c:	str	x19, [sp, #16]
  44df10:	mov	x19, x0
  44df14:	cbz	x0, 44df28 <_obstack_memory_used@@Base+0xcd8c>
  44df18:	mov	x0, x19
  44df1c:	ldr	x19, [x19]
  44df20:	bl	4047c0 <free@plt>
  44df24:	cbnz	x19, 44df18 <_obstack_memory_used@@Base+0xcd7c>
  44df28:	ldr	x19, [sp, #16]
  44df2c:	ldp	x29, x30, [sp], #32
  44df30:	ret
  44df34:	ret
  44df38:	stp	x29, x30, [sp, #-48]!
  44df3c:	mov	x29, sp
  44df40:	stp	x19, x20, [sp, #16]
  44df44:	str	x21, [sp, #32]
  44df48:	mov	x19, x0
  44df4c:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  44df50:	add	x0, x0, #0x510
  44df54:	bl	404af0 <getenv@plt>
  44df58:	mov	x20, x0
  44df5c:	cbz	x0, 44df9c <_obstack_memory_used@@Base+0xce00>
  44df60:	ldrb	w1, [x19, #8]
  44df64:	mov	w0, #0x0                   	// #0
  44df68:	cbz	w1, 44df80 <_obstack_memory_used@@Base+0xcde4>
  44df6c:	mov	x1, x20
  44df70:	add	x0, x19, #0x9
  44df74:	bl	404720 <strcmp@plt>
  44df78:	cmp	w0, #0x0
  44df7c:	cset	w0, eq  // eq = none
  44df80:	mov	x21, #0x1                   	// #1
  44df84:	cbz	w0, 44dfac <_obstack_memory_used@@Base+0xce10>
  44df88:	mov	x0, x21
  44df8c:	ldp	x19, x20, [sp, #16]
  44df90:	ldr	x21, [sp, #32]
  44df94:	ldp	x29, x30, [sp], #48
  44df98:	ret
  44df9c:	ldrb	w0, [x19, #8]
  44dfa0:	cmp	w0, #0x0
  44dfa4:	cset	w0, eq  // eq = none
  44dfa8:	b	44df80 <_obstack_memory_used@@Base+0xcde4>
  44dfac:	mov	x0, x20
  44dfb0:	bl	44dcf0 <_obstack_memory_used@@Base+0xcb54>
  44dfb4:	mov	x21, x0
  44dfb8:	cbz	x0, 44df88 <_obstack_memory_used@@Base+0xcdec>
  44dfbc:	ldrb	w1, [x19, #8]
  44dfc0:	add	x0, x19, #0x9
  44dfc4:	cmp	w1, #0x0
  44dfc8:	csel	x0, x0, xzr, ne  // ne = any
  44dfcc:	bl	44dcb8 <_obstack_memory_used@@Base+0xcb1c>
  44dfd0:	cbz	w0, 44dff4 <_obstack_memory_used@@Base+0xce58>
  44dfd4:	bl	404ad0 <__errno_location@plt>
  44dfd8:	mov	x19, x0
  44dfdc:	ldr	w20, [x0]
  44dfe0:	mov	x0, x21
  44dfe4:	bl	44defc <_obstack_memory_used@@Base+0xcd60>
  44dfe8:	str	w20, [x19]
  44dfec:	mov	x21, #0x0                   	// #0
  44dff0:	b	44df88 <_obstack_memory_used@@Base+0xcdec>
  44dff4:	bl	404360 <tzset@plt>
  44dff8:	b	44df88 <_obstack_memory_used@@Base+0xcdec>
  44dffc:	stp	x29, x30, [sp, #-48]!
  44e000:	mov	x29, sp
  44e004:	stp	x21, x22, [sp, #32]
  44e008:	mov	w21, #0x1                   	// #1
  44e00c:	cmp	x0, #0x1
  44e010:	b.eq	44e058 <_obstack_memory_used@@Base+0xcebc>  // b.none
  44e014:	stp	x19, x20, [sp, #16]
  44e018:	mov	x19, x0
  44e01c:	bl	404ad0 <__errno_location@plt>
  44e020:	mov	x20, x0
  44e024:	ldr	w22, [x0]
  44e028:	ldrb	w1, [x19, #8]
  44e02c:	add	x0, x19, #0x9
  44e030:	cmp	w1, #0x0
  44e034:	csel	x0, x0, xzr, ne  // ne = any
  44e038:	bl	44dcb8 <_obstack_memory_used@@Base+0xcb1c>
  44e03c:	cbz	w0, 44e068 <_obstack_memory_used@@Base+0xcecc>
  44e040:	ldr	w22, [x20]
  44e044:	mov	w21, #0x0                   	// #0
  44e048:	mov	x0, x19
  44e04c:	bl	44defc <_obstack_memory_used@@Base+0xcd60>
  44e050:	str	w22, [x20]
  44e054:	ldp	x19, x20, [sp, #16]
  44e058:	mov	w0, w21
  44e05c:	ldp	x21, x22, [sp, #32]
  44e060:	ldp	x29, x30, [sp], #48
  44e064:	ret
  44e068:	bl	404360 <tzset@plt>
  44e06c:	mov	w21, #0x1                   	// #1
  44e070:	b	44e048 <_obstack_memory_used@@Base+0xceac>
  44e074:	stp	x29, x30, [sp, #-48]!
  44e078:	mov	x29, sp
  44e07c:	stp	x19, x20, [sp, #16]
  44e080:	stp	x21, x22, [sp, #32]
  44e084:	mov	x22, x1
  44e088:	mov	x19, x2
  44e08c:	cbz	x0, 44e0f0 <_obstack_memory_used@@Base+0xcf54>
  44e090:	mov	x20, x0
  44e094:	bl	44df38 <_obstack_memory_used@@Base+0xcd9c>
  44e098:	mov	x21, x0
  44e09c:	cbz	x0, 44e104 <_obstack_memory_used@@Base+0xcf68>
  44e0a0:	mov	x1, x19
  44e0a4:	mov	x0, x22
  44e0a8:	bl	4040f0 <localtime_r@plt>
  44e0ac:	mov	x22, x0
  44e0b0:	cbz	x0, 44e10c <_obstack_memory_used@@Base+0xcf70>
  44e0b4:	mov	x1, x19
  44e0b8:	mov	x0, x20
  44e0bc:	bl	44dd94 <_obstack_memory_used@@Base+0xcbf8>
  44e0c0:	and	w20, w0, #0xff
  44e0c4:	mov	x0, x21
  44e0c8:	bl	44dffc <_obstack_memory_used@@Base+0xce60>
  44e0cc:	and	w0, w0, #0xff
  44e0d0:	cmp	w20, #0x0
  44e0d4:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  44e0d8:	csel	x19, x19, xzr, ne  // ne = any
  44e0dc:	mov	x0, x19
  44e0e0:	ldp	x19, x20, [sp, #16]
  44e0e4:	ldp	x21, x22, [sp, #32]
  44e0e8:	ldp	x29, x30, [sp], #48
  44e0ec:	ret
  44e0f0:	mov	x1, x2
  44e0f4:	mov	x0, x22
  44e0f8:	bl	404460 <gmtime_r@plt>
  44e0fc:	mov	x19, x0
  44e100:	b	44e0dc <_obstack_memory_used@@Base+0xcf40>
  44e104:	mov	x19, x0
  44e108:	b	44e0dc <_obstack_memory_used@@Base+0xcf40>
  44e10c:	mov	x0, x21
  44e110:	bl	44dffc <_obstack_memory_used@@Base+0xce60>
  44e114:	mov	x19, x22
  44e118:	b	44e0dc <_obstack_memory_used@@Base+0xcf40>
  44e11c:	stp	x29, x30, [sp, #-112]!
  44e120:	mov	x29, sp
  44e124:	stp	x19, x20, [sp, #16]
  44e128:	mov	x19, x1
  44e12c:	cbz	x0, 44e198 <_obstack_memory_used@@Base+0xcffc>
  44e130:	str	x21, [sp, #32]
  44e134:	mov	x20, x0
  44e138:	bl	44df38 <_obstack_memory_used@@Base+0xcd9c>
  44e13c:	mov	x21, x0
  44e140:	cbz	x0, 44e250 <_obstack_memory_used@@Base+0xd0b4>
  44e144:	mov	x0, x19
  44e148:	bl	404610 <mktime@plt>
  44e14c:	str	x0, [sp, #48]
  44e150:	cmn	x0, #0x1
  44e154:	b.eq	44e1a4 <_obstack_memory_used@@Base+0xd008>  // b.none
  44e158:	mov	x1, x19
  44e15c:	mov	x0, x20
  44e160:	bl	44dd94 <_obstack_memory_used@@Base+0xcbf8>
  44e164:	and	w1, w0, #0xff
  44e168:	cbnz	w1, 44e174 <_obstack_memory_used@@Base+0xcfd8>
  44e16c:	mov	x0, #0xffffffffffffffff    	// #-1
  44e170:	str	x0, [sp, #48]
  44e174:	mov	x0, x21
  44e178:	bl	44dffc <_obstack_memory_used@@Base+0xce60>
  44e17c:	and	w0, w0, #0xff
  44e180:	cbz	w0, 44e244 <_obstack_memory_used@@Base+0xd0a8>
  44e184:	ldr	x0, [sp, #48]
  44e188:	ldr	x21, [sp, #32]
  44e18c:	ldp	x19, x20, [sp, #16]
  44e190:	ldp	x29, x30, [sp], #112
  44e194:	ret
  44e198:	mov	x0, x1
  44e19c:	bl	404b50 <timegm@plt>
  44e1a0:	b	44e18c <_obstack_memory_used@@Base+0xcff0>
  44e1a4:	add	x1, sp, #0x38
  44e1a8:	add	x0, sp, #0x30
  44e1ac:	bl	4040f0 <localtime_r@plt>
  44e1b0:	cbz	x0, 44e174 <_obstack_memory_used@@Base+0xcfd8>
  44e1b4:	ldr	w1, [x19, #32]
  44e1b8:	ldr	w0, [sp, #88]
  44e1bc:	cmp	w1, #0x0
  44e1c0:	cset	w3, eq  // eq = none
  44e1c4:	cmp	w0, #0x0
  44e1c8:	cset	w2, eq  // eq = none
  44e1cc:	cmp	w2, w3, uxtb
  44e1d0:	b.eq	44e1e0 <_obstack_memory_used@@Base+0xd044>  // b.none
  44e1d4:	cmp	w1, #0x0
  44e1d8:	ccmp	w0, #0x0, #0x1, ge  // ge = tcont
  44e1dc:	b.ge	44e174 <_obstack_memory_used@@Base+0xcfd8>  // b.tcont
  44e1e0:	ldr	w0, [x19, #16]
  44e1e4:	ldr	w1, [sp, #72]
  44e1e8:	eor	w0, w0, w1
  44e1ec:	ldr	w1, [x19, #20]
  44e1f0:	ldr	w2, [sp, #76]
  44e1f4:	eor	w1, w1, w2
  44e1f8:	orr	w0, w0, w1
  44e1fc:	ldr	w1, [x19, #8]
  44e200:	ldr	w2, [sp, #64]
  44e204:	eor	w1, w1, w2
  44e208:	ldr	w2, [x19, #12]
  44e20c:	ldr	w3, [sp, #68]
  44e210:	eor	w2, w2, w3
  44e214:	orr	w1, w1, w2
  44e218:	orr	w0, w0, w1
  44e21c:	ldr	w1, [x19]
  44e220:	ldr	w2, [sp, #56]
  44e224:	eor	w1, w1, w2
  44e228:	ldr	w2, [x19, #4]
  44e22c:	ldr	w3, [sp, #60]
  44e230:	eor	w2, w2, w3
  44e234:	orr	w1, w1, w2
  44e238:	orr	w0, w0, w1
  44e23c:	cbz	w0, 44e158 <_obstack_memory_used@@Base+0xcfbc>
  44e240:	b	44e174 <_obstack_memory_used@@Base+0xcfd8>
  44e244:	mov	x0, #0xffffffffffffffff    	// #-1
  44e248:	ldr	x21, [sp, #32]
  44e24c:	b	44e18c <_obstack_memory_used@@Base+0xcff0>
  44e250:	mov	x0, #0xffffffffffffffff    	// #-1
  44e254:	ldr	x21, [sp, #32]
  44e258:	b	44e18c <_obstack_memory_used@@Base+0xcff0>
  44e25c:	mov	w1, w0
  44e260:	cmp	w0, #0x26
  44e264:	b.eq	44e290 <_obstack_memory_used@@Base+0xd0f4>  // b.none
  44e268:	b.gt	44e284 <_obstack_memory_used@@Base+0xd0e8>
  44e26c:	mov	w0, #0x0                   	// #0
  44e270:	cmp	w1, #0x10
  44e274:	b.eq	44e280 <_obstack_memory_used@@Base+0xd0e4>  // b.none
  44e278:	cmp	w1, #0x16
  44e27c:	cset	w0, ne  // ne = any
  44e280:	ret
  44e284:	cmp	w0, #0x5f
  44e288:	cset	w0, ne  // ne = any
  44e28c:	b	44e280 <_obstack_memory_used@@Base+0xd0e4>
  44e290:	mov	w0, #0x0                   	// #0
  44e294:	b	44e280 <_obstack_memory_used@@Base+0xd0e4>
  44e298:	stp	x29, x30, [sp, #-64]!
  44e29c:	mov	x29, sp
  44e2a0:	stp	x19, x20, [sp, #16]
  44e2a4:	stp	x21, x22, [sp, #32]
  44e2a8:	str	x23, [sp, #48]
  44e2ac:	mov	x23, x0
  44e2b0:	mov	x22, x1
  44e2b4:	mov	x21, x2
  44e2b8:	mov	x20, x3
  44e2bc:	mov	x0, #0x48                  	// #72
  44e2c0:	bl	404310 <malloc@plt>
  44e2c4:	mov	x19, x0
  44e2c8:	cbz	x0, 44e304 <_obstack_memory_used@@Base+0xd168>
  44e2cc:	str	x23, [x0]
  44e2d0:	str	x22, [x0, #8]
  44e2d4:	str	x21, [x0, #16]
  44e2d8:	str	x20, [x0, #24]
  44e2dc:	str	xzr, [x0, #40]
  44e2e0:	str	xzr, [x0, #32]
  44e2e4:	mov	x0, #0xc8                  	// #200
  44e2e8:	bl	404310 <malloc@plt>
  44e2ec:	mov	x20, x0
  44e2f0:	str	x0, [x19, #48]
  44e2f4:	cbz	x0, 44e31c <_obstack_memory_used@@Base+0xd180>
  44e2f8:	str	x0, [x19, #56]
  44e2fc:	add	x20, x0, #0xc8
  44e300:	str	x20, [x19, #64]
  44e304:	mov	x0, x19
  44e308:	ldp	x19, x20, [sp, #16]
  44e30c:	ldp	x21, x22, [sp, #32]
  44e310:	ldr	x23, [sp, #48]
  44e314:	ldp	x29, x30, [sp], #64
  44e318:	ret
  44e31c:	mov	x0, x19
  44e320:	bl	4047c0 <free@plt>
  44e324:	mov	x19, x20
  44e328:	b	44e304 <_obstack_memory_used@@Base+0xd168>
  44e32c:	stp	x29, x30, [sp, #-96]!
  44e330:	mov	x29, sp
  44e334:	stp	x19, x20, [sp, #16]
  44e338:	mov	x19, x0
  44e33c:	ldr	x20, [x0, #48]
  44e340:	ldr	x0, [x0, #32]
  44e344:	add	x20, x20, x0
  44e348:	ldr	x2, [x19, #56]
  44e34c:	cmp	x20, x2
  44e350:	b.cs	44e7e0 <_obstack_memory_used@@Base+0xd644>  // b.hs, b.nlast
  44e354:	stp	x21, x22, [sp, #32]
  44e358:	stp	x23, x24, [sp, #48]
  44e35c:	stp	x25, x26, [sp, #64]
  44e360:	stp	x27, x28, [sp, #80]
  44e364:	mov	w28, #0xa                   	// #10
  44e368:	mov	w26, #0x20                  	// #32
  44e36c:	b	44e440 <_obstack_memory_used@@Base+0xd2a4>
  44e370:	mov	x22, #0x0                   	// #0
  44e374:	ldr	x0, [x19]
  44e378:	ldr	x1, [x0, #40]
  44e37c:	ldr	x2, [x0, #48]
  44e380:	cmp	x1, x2
  44e384:	b.cs	44e498 <_obstack_memory_used@@Base+0xd2fc>  // b.hs, b.nlast
  44e388:	add	x2, x1, #0x1
  44e38c:	str	x2, [x0, #40]
  44e390:	strb	w26, [x1]
  44e394:	add	x22, x22, #0x1
  44e398:	cmp	x21, x22
  44e39c:	b.ne	44e374 <_obstack_memory_used@@Base+0xd1d8>  // b.any
  44e3a0:	str	x21, [x19, #40]
  44e3a4:	ldr	x24, [x19, #56]
  44e3a8:	sub	x25, x24, x20
  44e3ac:	mov	x2, x25
  44e3b0:	mov	w1, w28
  44e3b4:	mov	x0, x20
  44e3b8:	bl	404960 <memchr@plt>
  44e3bc:	mov	x21, x0
  44e3c0:	ldr	x0, [x19, #40]
  44e3c4:	tbz	x0, #63, 44e3cc <_obstack_memory_used@@Base+0xd230>
  44e3c8:	str	xzr, [x19, #40]
  44e3cc:	cbz	x21, 44e4a4 <_obstack_memory_used@@Base+0xd308>
  44e3d0:	ldr	x0, [x19, #40]
  44e3d4:	ldr	x23, [x19, #16]
  44e3d8:	sub	x1, x21, x20
  44e3dc:	add	x1, x1, x0
  44e3e0:	cmp	x1, x23
  44e3e4:	b.lt	44e550 <_obstack_memory_used@@Base+0xd3b4>  // b.tstop
  44e3e8:	sub	x22, x23, #0x1
  44e3ec:	ldr	x27, [x19, #24]
  44e3f0:	tbz	x27, #63, 44e4c8 <_obstack_memory_used@@Base+0xd32c>
  44e3f4:	cmp	x21, x24
  44e3f8:	b.cs	44e55c <_obstack_memory_used@@Base+0xd3c0>  // b.hs, b.nlast
  44e3fc:	sub	x0, x22, x0
  44e400:	sub	x2, x24, x21
  44e404:	mov	x1, x21
  44e408:	add	x0, x20, x0
  44e40c:	bl	403f80 <memmove@plt>
  44e410:	ldr	x0, [x19, #40]
  44e414:	sub	x22, x22, x0
  44e418:	add	x22, x20, x22
  44e41c:	sub	x21, x22, x21
  44e420:	ldr	x0, [x19, #56]
  44e424:	sub	x21, x0, x21
  44e428:	str	x21, [x19, #56]
  44e42c:	str	xzr, [x19, #40]
  44e430:	add	x20, x20, x23
  44e434:	ldr	x2, [x19, #56]
  44e438:	cmp	x2, x20
  44e43c:	b.ls	44e7d0 <_obstack_memory_used@@Base+0xd634>  // b.plast
  44e440:	ldr	x0, [x19, #40]
  44e444:	cbnz	x0, 44e3a4 <_obstack_memory_used@@Base+0xd208>
  44e448:	ldr	x21, [x19, #8]
  44e44c:	cbz	x21, 44e804 <_obstack_memory_used@@Base+0xd668>
  44e450:	add	x0, x2, x21
  44e454:	ldr	x1, [x19, #64]
  44e458:	cmp	x1, x0
  44e45c:	b.ls	44e370 <_obstack_memory_used@@Base+0xd1d4>  // b.plast
  44e460:	add	x22, x20, x21
  44e464:	sub	x2, x2, x20
  44e468:	mov	x1, x20
  44e46c:	mov	x0, x22
  44e470:	bl	403f80 <memmove@plt>
  44e474:	ldr	x0, [x19, #56]
  44e478:	add	x0, x0, x21
  44e47c:	str	x0, [x19, #56]
  44e480:	mov	x2, x21
  44e484:	mov	w1, #0x20                  	// #32
  44e488:	mov	x0, x20
  44e48c:	bl	404420 <memset@plt>
  44e490:	mov	x20, x22
  44e494:	b	44e3a0 <_obstack_memory_used@@Base+0xd204>
  44e498:	mov	w1, #0x20                  	// #32
  44e49c:	bl	404690 <__overflow@plt>
  44e4a0:	b	44e394 <_obstack_memory_used@@Base+0xd1f8>
  44e4a4:	ldr	x0, [x19, #40]
  44e4a8:	add	x0, x25, x0
  44e4ac:	ldr	x22, [x19, #16]
  44e4b0:	cmp	x0, x22
  44e4b4:	b.cc	44e538 <_obstack_memory_used@@Base+0xd39c>  // b.lo, b.ul, b.last
  44e4b8:	sub	x22, x22, #0x1
  44e4bc:	ldr	x27, [x19, #24]
  44e4c0:	tbnz	x27, #63, 44e55c <_obstack_memory_used@@Base+0xd3c0>
  44e4c4:	mov	x21, x24
  44e4c8:	ldr	x0, [x19, #40]
  44e4cc:	mov	x1, #0x1                   	// #1
  44e4d0:	sub	x0, x1, x0
  44e4d4:	add	x22, x0, x22
  44e4d8:	adds	x22, x20, x22
  44e4dc:	b.cs	44e7fc <_obstack_memory_used@@Base+0xd660>  // b.hs, b.nlast
  44e4e0:	bl	404750 <__ctype_b_loc@plt>
  44e4e4:	ldr	x2, [x0]
  44e4e8:	mov	x0, x22
  44e4ec:	ldrb	w1, [x0]
  44e4f0:	ldrh	w1, [x2, x1, lsl #1]
  44e4f4:	tbnz	w1, #0, 44e588 <_obstack_memory_used@@Base+0xd3ec>
  44e4f8:	sub	x0, x0, #0x1
  44e4fc:	cmp	x20, x0
  44e500:	b.ls	44e4ec <_obstack_memory_used@@Base+0xd350>  // b.plast
  44e504:	add	x23, x0, #0x1
  44e508:	cmp	x20, x23
  44e50c:	b.cc	44e5b4 <_obstack_memory_used@@Base+0xd418>  // b.lo, b.ul, b.last
  44e510:	cmp	x21, x22
  44e514:	b.hi	44e648 <_obstack_memory_used@@Base+0xd4ac>  // b.pmore
  44e518:	b.eq	44e66c <_obstack_memory_used@@Base+0xd4d0>  // b.none
  44e51c:	bl	404750 <__ctype_b_loc@plt>
  44e520:	ldr	x1, [x0]
  44e524:	mov	x23, x22
  44e528:	ldrb	w0, [x23, #1]!
  44e52c:	ldrh	w0, [x1, x0, lsl #1]
  44e530:	tbnz	w0, #0, 44e528 <_obstack_memory_used@@Base+0xd38c>
  44e534:	b	44e5b8 <_obstack_memory_used@@Base+0xd41c>
  44e538:	str	x0, [x19, #40]
  44e53c:	ldp	x21, x22, [sp, #32]
  44e540:	ldp	x23, x24, [sp, #48]
  44e544:	ldp	x25, x26, [sp, #64]
  44e548:	ldp	x27, x28, [sp, #80]
  44e54c:	b	44e7e0 <_obstack_memory_used@@Base+0xd644>
  44e550:	str	xzr, [x19, #40]
  44e554:	add	x20, x21, #0x1
  44e558:	b	44e434 <_obstack_memory_used@@Base+0xd298>
  44e55c:	ldr	x0, [x19, #40]
  44e560:	add	x25, x25, x0
  44e564:	str	x25, [x19, #40]
  44e568:	sub	x25, x22, x25
  44e56c:	add	x24, x24, x25
  44e570:	str	x24, [x19, #56]
  44e574:	ldp	x21, x22, [sp, #32]
  44e578:	ldp	x23, x24, [sp, #48]
  44e57c:	ldp	x25, x26, [sp, #64]
  44e580:	ldp	x27, x28, [sp, #80]
  44e584:	b	44e7e0 <_obstack_memory_used@@Base+0xd644>
  44e588:	add	x23, x0, #0x1
  44e58c:	cmp	x20, x23
  44e590:	b.cs	44e510 <_obstack_memory_used@@Base+0xd374>  // b.hs, b.nlast
  44e594:	cmp	x20, x0
  44e598:	b.hi	44e5b4 <_obstack_memory_used@@Base+0xd418>  // b.pmore
  44e59c:	sub	x0, x0, #0x1
  44e5a0:	cmp	x20, x0
  44e5a4:	b.hi	44e5b4 <_obstack_memory_used@@Base+0xd418>  // b.pmore
  44e5a8:	ldrb	w1, [x0]
  44e5ac:	ldrh	w1, [x2, x1, lsl #1]
  44e5b0:	tbnz	w1, #0, 44e59c <_obstack_memory_used@@Base+0xd400>
  44e5b4:	add	x22, x0, #0x1
  44e5b8:	add	x0, x25, #0x1
  44e5bc:	add	x0, x20, x0
  44e5c0:	cmp	x23, x0
  44e5c4:	b.eq	44e678 <_obstack_memory_used@@Base+0xd4dc>  // b.none
  44e5c8:	add	x0, x22, #0x1
  44e5cc:	sub	x0, x23, x0
  44e5d0:	cmp	x0, x27
  44e5d4:	b.ge	44e688 <_obstack_memory_used@@Base+0xd4ec>  // b.tcont
  44e5d8:	cmp	x23, x24
  44e5dc:	b.cs	44e688 <_obstack_memory_used@@Base+0xd4ec>  // b.hs, b.nlast
  44e5e0:	ldr	x0, [x19, #64]
  44e5e4:	sub	x0, x0, x24
  44e5e8:	add	x1, x27, #0x1
  44e5ec:	cmp	x0, x1
  44e5f0:	b.gt	44e730 <_obstack_memory_used@@Base+0xd594>
  44e5f4:	ldr	x0, [x19, #48]
  44e5f8:	cmp	x0, x22
  44e5fc:	b.cs	44e610 <_obstack_memory_used@@Base+0xd474>  // b.hs, b.nlast
  44e600:	ldr	x3, [x19]
  44e604:	sub	x2, x22, x0
  44e608:	mov	x1, #0x1                   	// #1
  44e60c:	bl	403fd0 <fwrite_unlocked@plt>
  44e610:	ldr	x0, [x19]
  44e614:	ldr	x1, [x0, #40]
  44e618:	ldr	x2, [x0, #48]
  44e61c:	cmp	x1, x2
  44e620:	b.cs	44e770 <_obstack_memory_used@@Base+0xd5d4>  // b.hs, b.nlast
  44e624:	add	x2, x1, #0x1
  44e628:	str	x2, [x0, #40]
  44e62c:	mov	w0, #0xa                   	// #10
  44e630:	strb	w0, [x1]
  44e634:	ldr	x21, [x19, #48]
  44e638:	sub	x20, x20, x21
  44e63c:	add	x25, x25, x20
  44e640:	mov	x20, x21
  44e644:	b	44e698 <_obstack_memory_used@@Base+0xd4fc>
  44e648:	add	x22, x22, #0x1
  44e64c:	cmp	x21, x22
  44e650:	b.eq	44e66c <_obstack_memory_used@@Base+0xd4d0>  // b.none
  44e654:	bl	404750 <__ctype_b_loc@plt>
  44e658:	ldrb	w1, [x22]
  44e65c:	ldr	x0, [x0]
  44e660:	ldrh	w0, [x0, x1, lsl #1]
  44e664:	tbz	w0, #0, 44e648 <_obstack_memory_used@@Base+0xd4ac>
  44e668:	b	44e51c <_obstack_memory_used@@Base+0xd380>
  44e66c:	str	xzr, [x19, #40]
  44e670:	add	x20, x21, #0x1
  44e674:	b	44e434 <_obstack_memory_used@@Base+0xd298>
  44e678:	ldr	x0, [x19, #64]
  44e67c:	sub	x0, x0, x22
  44e680:	cmp	x0, x27
  44e684:	b.le	44e5d8 <_obstack_memory_used@@Base+0xd43c>
  44e688:	mov	w0, #0xa                   	// #10
  44e68c:	strb	w0, [x22], #1
  44e690:	mov	x21, x20
  44e694:	mov	x20, x22
  44e698:	ldr	x1, [x19, #24]
  44e69c:	sub	x0, x23, x20
  44e6a0:	cmp	x0, x1
  44e6a4:	b.ge	44e77c <_obstack_memory_used@@Base+0xd5e0>  // b.tcont
  44e6a8:	add	x0, x25, #0x1
  44e6ac:	add	x0, x21, x0
  44e6b0:	cmp	x23, x0
  44e6b4:	b.ne	44e6c8 <_obstack_memory_used@@Base+0xd52c>  // b.any
  44e6b8:	ldr	x0, [x19, #64]
  44e6bc:	sub	x0, x0, x23
  44e6c0:	cmp	x1, x0
  44e6c4:	b.le	44e77c <_obstack_memory_used@@Base+0xd5e0>
  44e6c8:	mov	x22, #0x0                   	// #0
  44e6cc:	cmp	x1, #0x0
  44e6d0:	b.le	44e704 <_obstack_memory_used@@Base+0xd568>
  44e6d4:	ldr	x0, [x19]
  44e6d8:	ldr	x1, [x0, #40]
  44e6dc:	ldr	x2, [x0, #48]
  44e6e0:	cmp	x1, x2
  44e6e4:	b.cs	44e7ac <_obstack_memory_used@@Base+0xd610>  // b.hs, b.nlast
  44e6e8:	add	x2, x1, #0x1
  44e6ec:	str	x2, [x0, #40]
  44e6f0:	strb	w26, [x1]
  44e6f4:	add	x22, x22, #0x1
  44e6f8:	ldr	x0, [x19, #24]
  44e6fc:	cmp	x0, x22
  44e700:	b.gt	44e6d4 <_obstack_memory_used@@Base+0xd538>
  44e704:	cmp	x20, x23
  44e708:	b.cc	44e7b8 <_obstack_memory_used@@Base+0xd61c>  // b.lo, b.ul, b.last
  44e70c:	sub	x23, x23, x21
  44e710:	sub	x25, x25, x23
  44e714:	add	x25, x20, x25
  44e718:	str	x25, [x19, #56]
  44e71c:	ldr	x0, [x19, #24]
  44e720:	cmp	x0, #0x0
  44e724:	csinv	x0, x0, xzr, ne  // ne = any
  44e728:	str	x0, [x19, #40]
  44e72c:	b	44e434 <_obstack_memory_used@@Base+0xd298>
  44e730:	sub	x24, x24, x23
  44e734:	mov	x0, x1
  44e738:	mov	x2, x24
  44e73c:	mov	x1, x23
  44e740:	add	x0, x22, x0
  44e744:	bl	403f80 <memmove@plt>
  44e748:	ldr	x23, [x19, #24]
  44e74c:	add	x23, x23, #0x1
  44e750:	add	x23, x22, x23
  44e754:	add	x24, x23, x24
  44e758:	sub	x25, x24, x20
  44e75c:	mov	w0, #0xa                   	// #10
  44e760:	strb	w0, [x22], #1
  44e764:	mov	x21, x20
  44e768:	mov	x20, x22
  44e76c:	b	44e698 <_obstack_memory_used@@Base+0xd4fc>
  44e770:	mov	w1, w28
  44e774:	bl	404690 <__overflow@plt>
  44e778:	b	44e634 <_obstack_memory_used@@Base+0xd498>
  44e77c:	add	x0, x20, #0x1
  44e780:	mvn	x3, x20
  44e784:	cmp	x1, #0x0
  44e788:	b.le	44e704 <_obstack_memory_used@@Base+0xd568>
  44e78c:	mov	x20, x0
  44e790:	sturb	w26, [x0, #-1]
  44e794:	add	x0, x0, #0x1
  44e798:	add	x1, x3, x0
  44e79c:	ldr	x2, [x19, #24]
  44e7a0:	cmp	x2, x1
  44e7a4:	b.gt	44e78c <_obstack_memory_used@@Base+0xd5f0>
  44e7a8:	b	44e704 <_obstack_memory_used@@Base+0xd568>
  44e7ac:	mov	w1, #0x20                  	// #32
  44e7b0:	bl	404690 <__overflow@plt>
  44e7b4:	b	44e6f4 <_obstack_memory_used@@Base+0xd558>
  44e7b8:	add	x2, x21, x25
  44e7bc:	sub	x2, x2, x23
  44e7c0:	mov	x1, x23
  44e7c4:	mov	x0, x20
  44e7c8:	bl	403f80 <memmove@plt>
  44e7cc:	b	44e70c <_obstack_memory_used@@Base+0xd570>
  44e7d0:	ldp	x21, x22, [sp, #32]
  44e7d4:	ldp	x23, x24, [sp, #48]
  44e7d8:	ldp	x25, x26, [sp, #64]
  44e7dc:	ldp	x27, x28, [sp, #80]
  44e7e0:	ldr	x0, [x19, #56]
  44e7e4:	ldr	x1, [x19, #48]
  44e7e8:	sub	x0, x0, x1
  44e7ec:	str	x0, [x19, #32]
  44e7f0:	ldp	x19, x20, [sp, #16]
  44e7f4:	ldp	x29, x30, [sp], #96
  44e7f8:	ret
  44e7fc:	mov	x0, x22
  44e800:	b	44e504 <_obstack_memory_used@@Base+0xd368>
  44e804:	ldr	x24, [x19, #56]
  44e808:	sub	x25, x24, x20
  44e80c:	mov	x2, x25
  44e810:	mov	w1, w28
  44e814:	mov	x0, x20
  44e818:	bl	404960 <memchr@plt>
  44e81c:	mov	x21, x0
  44e820:	b	44e3cc <_obstack_memory_used@@Base+0xd230>
  44e824:	stp	x29, x30, [sp, #-32]!
  44e828:	mov	x29, sp
  44e82c:	str	x19, [sp, #16]
  44e830:	mov	x19, x0
  44e834:	bl	44e32c <_obstack_memory_used@@Base+0xd190>
  44e838:	ldr	x2, [x19, #56]
  44e83c:	ldr	x0, [x19, #48]
  44e840:	cmp	x2, x0
  44e844:	b.ls	44e858 <_obstack_memory_used@@Base+0xd6bc>  // b.plast
  44e848:	ldr	x3, [x19]
  44e84c:	sub	x2, x2, x0
  44e850:	mov	x1, #0x1                   	// #1
  44e854:	bl	403fd0 <fwrite_unlocked@plt>
  44e858:	ldr	x0, [x19, #48]
  44e85c:	bl	4047c0 <free@plt>
  44e860:	mov	x0, x19
  44e864:	bl	4047c0 <free@plt>
  44e868:	ldr	x19, [sp, #16]
  44e86c:	ldp	x29, x30, [sp], #32
  44e870:	ret
  44e874:	stp	x29, x30, [sp, #-32]!
  44e878:	mov	x29, sp
  44e87c:	stp	x19, x20, [sp, #16]
  44e880:	mov	x19, x0
  44e884:	mov	x20, x1
  44e888:	ldr	x0, [x0, #64]
  44e88c:	ldr	x1, [x19, #56]
  44e890:	sub	x0, x0, x1
  44e894:	cmp	x0, x20
  44e898:	b.cc	44e8ac <_obstack_memory_used@@Base+0xd710>  // b.lo, b.ul, b.last
  44e89c:	mov	w0, #0x1                   	// #1
  44e8a0:	ldp	x19, x20, [sp, #16]
  44e8a4:	ldp	x29, x30, [sp], #32
  44e8a8:	ret
  44e8ac:	mov	x0, x19
  44e8b0:	bl	44e32c <_obstack_memory_used@@Base+0xd190>
  44e8b4:	ldr	x0, [x19, #48]
  44e8b8:	ldr	x2, [x19, #56]
  44e8bc:	ldr	x3, [x19]
  44e8c0:	sub	x2, x2, x0
  44e8c4:	mov	x1, #0x1                   	// #1
  44e8c8:	bl	403fd0 <fwrite_unlocked@plt>
  44e8cc:	mov	x1, x0
  44e8d0:	ldr	x2, [x19, #56]
  44e8d4:	ldr	x0, [x19, #48]
  44e8d8:	sub	x3, x2, x0
  44e8dc:	cmp	x3, x1
  44e8e0:	b.ne	44e904 <_obstack_memory_used@@Base+0xd768>  // b.any
  44e8e4:	str	x0, [x19, #56]
  44e8e8:	str	xzr, [x19, #32]
  44e8ec:	ldr	x1, [x19, #64]
  44e8f0:	sub	x1, x1, x0
  44e8f4:	cmp	x1, x20
  44e8f8:	b.cc	44e92c <_obstack_memory_used@@Base+0xd790>  // b.lo, b.ul, b.last
  44e8fc:	mov	w0, #0x1                   	// #1
  44e900:	b	44e8a0 <_obstack_memory_used@@Base+0xd704>
  44e904:	sub	x2, x2, x1
  44e908:	str	x2, [x19, #56]
  44e90c:	ldr	x3, [x19, #32]
  44e910:	sub	x3, x3, x1
  44e914:	str	x3, [x19, #32]
  44e918:	sub	x2, x2, x0
  44e91c:	add	x1, x0, x1
  44e920:	bl	403f80 <memmove@plt>
  44e924:	mov	w0, #0x0                   	// #0
  44e928:	b	44e8a0 <_obstack_memory_used@@Base+0xd704>
  44e92c:	adds	x20, x1, x20
  44e930:	b.cc	44e948 <_obstack_memory_used@@Base+0xd7ac>  // b.lo, b.ul, b.last
  44e934:	bl	404ad0 <__errno_location@plt>
  44e938:	mov	w1, #0xc                   	// #12
  44e93c:	str	w1, [x0]
  44e940:	mov	w0, #0x0                   	// #0
  44e944:	b	44e8a0 <_obstack_memory_used@@Base+0xd704>
  44e948:	mov	x1, x20
  44e94c:	bl	404540 <realloc@plt>
  44e950:	cbz	x0, 44e934 <_obstack_memory_used@@Base+0xd798>
  44e954:	str	x0, [x19, #48]
  44e958:	add	x20, x0, x20
  44e95c:	str	x20, [x19, #64]
  44e960:	str	x0, [x19, #56]
  44e964:	mov	w0, #0x1                   	// #1
  44e968:	b	44e8a0 <_obstack_memory_used@@Base+0xd704>
  44e96c:	stp	x29, x30, [sp, #-352]!
  44e970:	mov	x29, sp
  44e974:	stp	x19, x20, [sp, #16]
  44e978:	stp	x21, x22, [sp, #32]
  44e97c:	stp	x23, x24, [sp, #48]
  44e980:	str	x25, [sp, #64]
  44e984:	mov	x19, x0
  44e988:	mov	x20, x1
  44e98c:	str	x2, [sp, #304]
  44e990:	str	x3, [sp, #312]
  44e994:	str	x4, [sp, #320]
  44e998:	str	x5, [sp, #328]
  44e99c:	str	x6, [sp, #336]
  44e9a0:	str	x7, [sp, #344]
  44e9a4:	str	q0, [sp, #176]
  44e9a8:	str	q1, [sp, #192]
  44e9ac:	str	q2, [sp, #208]
  44e9b0:	str	q3, [sp, #224]
  44e9b4:	str	q4, [sp, #240]
  44e9b8:	str	q5, [sp, #256]
  44e9bc:	str	q6, [sp, #272]
  44e9c0:	str	q7, [sp, #288]
  44e9c4:	mov	x1, #0x96                  	// #150
  44e9c8:	add	x24, sp, #0x130
  44e9cc:	mov	w23, #0xffffffd0            	// #-48
  44e9d0:	mov	w22, #0xffffff80            	// #-128
  44e9d4:	mov	x21, #0xffffffffffffffff    	// #-1
  44e9d8:	mov	x0, x19
  44e9dc:	bl	44e874 <_obstack_memory_used@@Base+0xd6d8>
  44e9e0:	cbz	w0, 44ea50 <_obstack_memory_used@@Base+0xd8b4>
  44e9e4:	add	x0, sp, #0x160
  44e9e8:	str	x0, [sp, #112]
  44e9ec:	str	x0, [sp, #120]
  44e9f0:	str	x24, [sp, #128]
  44e9f4:	str	w23, [sp, #136]
  44e9f8:	str	w22, [sp, #140]
  44e9fc:	ldr	x0, [x19, #56]
  44ea00:	ldr	x25, [x19, #64]
  44ea04:	sub	x25, x25, x0
  44ea08:	ldp	x4, x5, [sp, #112]
  44ea0c:	stp	x4, x5, [sp, #144]
  44ea10:	ldp	x2, x3, [sp, #128]
  44ea14:	stp	x2, x3, [sp, #160]
  44ea18:	stp	x4, x5, [sp, #80]
  44ea1c:	stp	x2, x3, [sp, #96]
  44ea20:	add	x5, sp, #0x50
  44ea24:	mov	x4, x20
  44ea28:	mov	x3, x21
  44ea2c:	mov	w2, #0x1                   	// #1
  44ea30:	mov	x1, x25
  44ea34:	bl	4042f0 <__vsnprintf_chk@plt>
  44ea38:	sxtw	x1, w0
  44ea3c:	cmp	x25, w0, sxtw
  44ea40:	b.hi	44ea6c <_obstack_memory_used@@Base+0xd8d0>  // b.pmore
  44ea44:	add	w0, w0, #0x1
  44ea48:	sxtw	x1, w0
  44ea4c:	b	44e9d8 <_obstack_memory_used@@Base+0xd83c>
  44ea50:	mov	x0, #0xffffffffffffffff    	// #-1
  44ea54:	ldp	x19, x20, [sp, #16]
  44ea58:	ldp	x21, x22, [sp, #32]
  44ea5c:	ldp	x23, x24, [sp, #48]
  44ea60:	ldr	x25, [sp, #64]
  44ea64:	ldp	x29, x30, [sp], #352
  44ea68:	ret
  44ea6c:	ldr	x2, [x19, #56]
  44ea70:	add	x1, x2, x1
  44ea74:	str	x1, [x19, #56]
  44ea78:	sxtw	x0, w0
  44ea7c:	b	44ea54 <_obstack_memory_used@@Base+0xd8b8>
  44ea80:	stp	x29, x30, [sp, #-48]!
  44ea84:	mov	x29, sp
  44ea88:	stp	x19, x20, [sp, #16]
  44ea8c:	str	x21, [sp, #32]
  44ea90:	mov	x19, x0
  44ea94:	bl	4041e0 <__fpending@plt>
  44ea98:	mov	x21, x0
  44ea9c:	ldr	w20, [x19]
  44eaa0:	and	w20, w20, #0x20
  44eaa4:	mov	x0, x19
  44eaa8:	bl	4042a0 <fclose@plt>
  44eaac:	cbnz	w20, 44ead8 <_obstack_memory_used@@Base+0xd93c>
  44eab0:	cbz	w0, 44eac8 <_obstack_memory_used@@Base+0xd92c>
  44eab4:	cbnz	x21, 44eaec <_obstack_memory_used@@Base+0xd950>
  44eab8:	bl	404ad0 <__errno_location@plt>
  44eabc:	ldr	w0, [x0]
  44eac0:	cmp	w0, #0x9
  44eac4:	csetm	w0, ne  // ne = any
  44eac8:	ldp	x19, x20, [sp, #16]
  44eacc:	ldr	x21, [sp, #32]
  44ead0:	ldp	x29, x30, [sp], #48
  44ead4:	ret
  44ead8:	cbnz	w0, 44eaf4 <_obstack_memory_used@@Base+0xd958>
  44eadc:	bl	404ad0 <__errno_location@plt>
  44eae0:	str	wzr, [x0]
  44eae4:	mov	w0, #0xffffffff            	// #-1
  44eae8:	b	44eac8 <_obstack_memory_used@@Base+0xd92c>
  44eaec:	mov	w0, #0xffffffff            	// #-1
  44eaf0:	b	44eac8 <_obstack_memory_used@@Base+0xd92c>
  44eaf4:	mov	w0, #0xffffffff            	// #-1
  44eaf8:	b	44eac8 <_obstack_memory_used@@Base+0xd92c>
  44eafc:	stp	x29, x30, [sp, #-48]!
  44eb00:	mov	x29, sp
  44eb04:	stp	x19, x20, [sp, #16]
  44eb08:	bl	404140 <opendir@plt>
  44eb0c:	mov	x19, x0
  44eb10:	cbz	x0, 44eb20 <_obstack_memory_used@@Base+0xd984>
  44eb14:	bl	404920 <dirfd@plt>
  44eb18:	cmp	w0, #0x2
  44eb1c:	b.ls	44eb30 <_obstack_memory_used@@Base+0xd994>  // b.plast
  44eb20:	mov	x0, x19
  44eb24:	ldp	x19, x20, [sp, #16]
  44eb28:	ldp	x29, x30, [sp], #48
  44eb2c:	ret
  44eb30:	stp	x21, x22, [sp, #32]
  44eb34:	mov	w2, #0x3                   	// #3
  44eb38:	mov	w1, #0x406                 	// #1030
  44eb3c:	bl	440a14 <argp_parse@@Base+0xd2d4>
  44eb40:	mov	w20, w0
  44eb44:	tbz	w0, #31, 44eb70 <_obstack_memory_used@@Base+0xd9d4>
  44eb48:	bl	404ad0 <__errno_location@plt>
  44eb4c:	ldr	w22, [x0]
  44eb50:	mov	x21, #0x0                   	// #0
  44eb54:	mov	x0, x19
  44eb58:	bl	4045a0 <closedir@plt>
  44eb5c:	bl	404ad0 <__errno_location@plt>
  44eb60:	str	w22, [x0]
  44eb64:	mov	x19, x21
  44eb68:	ldp	x21, x22, [sp, #32]
  44eb6c:	b	44eb20 <_obstack_memory_used@@Base+0xd984>
  44eb70:	bl	404620 <fdopendir@plt>
  44eb74:	mov	x21, x0
  44eb78:	bl	404ad0 <__errno_location@plt>
  44eb7c:	ldr	w22, [x0]
  44eb80:	cbnz	x21, 44eb54 <_obstack_memory_used@@Base+0xd9b8>
  44eb84:	mov	w0, w20
  44eb88:	bl	4045d0 <close@plt>
  44eb8c:	b	44eb54 <_obstack_memory_used@@Base+0xd9b8>
  44eb90:	stp	x29, x30, [sp, #-64]!
  44eb94:	mov	x29, sp
  44eb98:	str	x2, [sp, #56]
  44eb9c:	mov	w2, #0x0                   	// #0
  44eba0:	tbnz	w1, #6, 44ebb4 <_obstack_memory_used@@Base+0xda18>
  44eba4:	bl	404340 <open@plt>
  44eba8:	bl	4503e4 <_obstack_memory_used@@Base+0xf248>
  44ebac:	ldp	x29, x30, [sp], #64
  44ebb0:	ret
  44ebb4:	add	x2, sp, #0x40
  44ebb8:	str	x2, [sp, #16]
  44ebbc:	str	x2, [sp, #24]
  44ebc0:	add	x2, sp, #0x30
  44ebc4:	str	x2, [sp, #32]
  44ebc8:	str	wzr, [sp, #44]
  44ebcc:	str	wzr, [sp, #40]
  44ebd0:	ldr	x2, [sp, #24]
  44ebd4:	sub	x2, x2, #0x8
  44ebd8:	ldr	w2, [x2]
  44ebdc:	b	44eba4 <_obstack_memory_used@@Base+0xda08>
  44ebe0:	stp	x29, x30, [sp, #-32]!
  44ebe4:	mov	x29, sp
  44ebe8:	mov	x1, #0x0                   	// #0
  44ebec:	bl	404be0 <setlocale@plt>
  44ebf0:	mov	w1, #0x1                   	// #1
  44ebf4:	cbz	x0, 44ec30 <_obstack_memory_used@@Base+0xda94>
  44ebf8:	str	x19, [sp, #16]
  44ebfc:	mov	x19, x0
  44ec00:	adrp	x1, 45c000 <_obstack_memory_used@@Base+0x1ae64>
  44ec04:	add	x1, x1, #0x520
  44ec08:	bl	404720 <strcmp@plt>
  44ec0c:	mov	w1, #0x0                   	// #0
  44ec10:	cbz	w0, 44ec3c <_obstack_memory_used@@Base+0xdaa0>
  44ec14:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  44ec18:	add	x1, x1, #0x4e8
  44ec1c:	mov	x0, x19
  44ec20:	bl	404720 <strcmp@plt>
  44ec24:	cmp	w0, #0x0
  44ec28:	cset	w1, ne  // ne = any
  44ec2c:	ldr	x19, [sp, #16]
  44ec30:	mov	w0, w1
  44ec34:	ldp	x29, x30, [sp], #32
  44ec38:	ret
  44ec3c:	ldr	x19, [sp, #16]
  44ec40:	b	44ec30 <_obstack_memory_used@@Base+0xda94>
  44ec44:	stp	x29, x30, [sp, #-48]!
  44ec48:	mov	x29, sp
  44ec4c:	stp	x19, x20, [sp, #16]
  44ec50:	mov	x20, x0
  44ec54:	cbz	x2, 44ec88 <_obstack_memory_used@@Base+0xdaec>
  44ec58:	str	x21, [sp, #32]
  44ec5c:	mov	x21, x1
  44ec60:	sub	x19, x2, #0x1
  44ec64:	bl	4041f0 <__ctype_tolower_loc@plt>
  44ec68:	ldrb	w3, [x21, x19]
  44ec6c:	ldr	x2, [x0]
  44ec70:	ldr	w2, [x2, x3, lsl #2]
  44ec74:	strb	w2, [x20, x19]
  44ec78:	sub	x19, x19, #0x1
  44ec7c:	cmn	x19, #0x1
  44ec80:	b.ne	44ec68 <_obstack_memory_used@@Base+0xdacc>  // b.any
  44ec84:	ldr	x21, [sp, #32]
  44ec88:	mov	x0, x20
  44ec8c:	ldp	x19, x20, [sp, #16]
  44ec90:	ldp	x29, x30, [sp], #48
  44ec94:	ret
  44ec98:	stp	x29, x30, [sp, #-48]!
  44ec9c:	mov	x29, sp
  44eca0:	stp	x19, x20, [sp, #16]
  44eca4:	mov	x20, x0
  44eca8:	cbz	x2, 44ecdc <_obstack_memory_used@@Base+0xdb40>
  44ecac:	str	x21, [sp, #32]
  44ecb0:	mov	x21, x1
  44ecb4:	sub	x19, x2, #0x1
  44ecb8:	bl	404550 <__ctype_toupper_loc@plt>
  44ecbc:	ldrb	w3, [x21, x19]
  44ecc0:	ldr	x2, [x0]
  44ecc4:	ldr	w2, [x2, x3, lsl #2]
  44ecc8:	strb	w2, [x20, x19]
  44eccc:	sub	x19, x19, #0x1
  44ecd0:	cmn	x19, #0x1
  44ecd4:	b.ne	44ecbc <_obstack_memory_used@@Base+0xdb20>  // b.any
  44ecd8:	ldr	x21, [sp, #32]
  44ecdc:	mov	x0, x20
  44ece0:	ldp	x19, x20, [sp, #16]
  44ece4:	ldp	x29, x30, [sp], #48
  44ece8:	ret
  44ecec:	sub	sp, sp, #0x4d0
  44ecf0:	stp	x29, x30, [sp]
  44ecf4:	mov	x29, sp
  44ecf8:	stp	x19, x20, [sp, #16]
  44ecfc:	stp	x21, x22, [sp, #32]
  44ed00:	stp	x23, x24, [sp, #48]
  44ed04:	stp	x25, x26, [sp, #64]
  44ed08:	stp	x27, x28, [sp, #80]
  44ed0c:	mov	x20, x0
  44ed10:	mov	x22, x1
  44ed14:	mov	x27, x2
  44ed18:	mov	x23, x3
  44ed1c:	and	w0, w4, #0xff
  44ed20:	str	w0, [sp, #100]
  44ed24:	str	x5, [sp, #136]
  44ed28:	str	x6, [sp, #120]
  44ed2c:	str	w7, [sp, #132]
  44ed30:	ldr	w25, [x3, #8]
  44ed34:	ldr	x26, [x3, #48]
  44ed38:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  44ed3c:	add	x0, x0, #0x7f8
  44ed40:	cmp	x26, #0x0
  44ed44:	csel	x26, x0, x26, eq  // eq = none
  44ed48:	cmp	w25, #0xc
  44ed4c:	b.le	44ed74 <_obstack_memory_used@@Base+0xdbd8>
  44ed50:	sub	w25, w25, #0xc
  44ed54:	ldrb	w0, [x27]
  44ed58:	cbz	w0, 4501ac <_obstack_memory_used@@Base+0xf010>
  44ed5c:	mov	x19, #0x0                   	// #0
  44ed60:	add	x1, sp, #0xcf
  44ed64:	str	x1, [sp, #112]
  44ed68:	add	x1, sp, #0xd1
  44ed6c:	str	x1, [sp, #144]
  44ed70:	b	44ed98 <_obstack_memory_used@@Base+0xdbfc>
  44ed74:	cmp	w25, #0x0
  44ed78:	mov	w0, #0xc                   	// #12
  44ed7c:	csel	w25, w25, w0, ne  // ne = any
  44ed80:	b	44ed54 <_obstack_memory_used@@Base+0xdbb8>
  44ed84:	add	x19, x19, #0x1
  44ed88:	mov	x24, x27
  44ed8c:	add	x27, x24, #0x1
  44ed90:	ldrb	w0, [x24, #1]
  44ed94:	cbz	w0, 4501b0 <_obstack_memory_used@@Base+0xf014>
  44ed98:	cmp	w0, #0x25
  44ed9c:	b.eq	44edb8 <_obstack_memory_used@@Base+0xdc1c>  // b.none
  44eda0:	sub	x1, x22, x19
  44eda4:	cmp	x1, #0x1
  44eda8:	b.ls	450184 <_obstack_memory_used@@Base+0xefe8>  // b.plast
  44edac:	cbz	x20, 44ed84 <_obstack_memory_used@@Base+0xdbe8>
  44edb0:	strb	w0, [x20], #1
  44edb4:	b	44ed84 <_obstack_memory_used@@Base+0xdbe8>
  44edb8:	ldr	w0, [sp, #100]
  44edbc:	str	w0, [sp, #96]
  44edc0:	str	wzr, [sp, #104]
  44edc4:	str	wzr, [sp, #128]
  44edc8:	mov	w1, #0x1                   	// #1
  44edcc:	b	44eddc <_obstack_memory_used@@Base+0xdc40>
  44edd0:	cmp	w0, #0x23
  44edd4:	b.ne	44ee00 <_obstack_memory_used@@Base+0xdc64>  // b.any
  44edd8:	str	w1, [sp, #104]
  44eddc:	ldrb	w0, [x27, #1]!
  44ede0:	cmp	w0, #0x30
  44ede4:	b.eq	44ee08 <_obstack_memory_used@@Base+0xdc6c>  // b.none
  44ede8:	b.ls	44edd0 <_obstack_memory_used@@Base+0xdc34>  // b.plast
  44edec:	cmp	w0, #0x5e
  44edf0:	b.ne	44ee50 <_obstack_memory_used@@Base+0xdcb4>  // b.any
  44edf4:	mov	w0, #0x1                   	// #1
  44edf8:	str	w0, [sp, #96]
  44edfc:	b	44eddc <_obstack_memory_used@@Base+0xdc40>
  44ee00:	cmp	w0, #0x2d
  44ee04:	b.ne	44ee10 <_obstack_memory_used@@Base+0xdc74>  // b.any
  44ee08:	str	w0, [sp, #128]
  44ee0c:	b	44eddc <_obstack_memory_used@@Base+0xdc40>
  44ee10:	mov	w21, #0xffffffff            	// #-1
  44ee14:	ldrb	w28, [x27]
  44ee18:	cmp	w28, #0x45
  44ee1c:	b.eq	44eec8 <_obstack_memory_used@@Base+0xdd2c>  // b.none
  44ee20:	cmp	w28, #0x4f
  44ee24:	b.eq	44eec8 <_obstack_memory_used@@Base+0xdd2c>  // b.none
  44ee28:	ldrb	w4, [x27]
  44ee2c:	mov	w1, w4
  44ee30:	cmp	w4, #0x7a
  44ee34:	b.hi	450080 <_obstack_memory_used@@Base+0xeee4>  // b.pmore
  44ee38:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  44ee3c:	add	x0, x0, #0x4f0
  44ee40:	ldrh	w0, [x0, w4, uxtw #1]
  44ee44:	adr	x2, 44ee50 <_obstack_memory_used@@Base+0xdcb4>
  44ee48:	add	x0, x2, w0, sxth #2
  44ee4c:	br	x0
  44ee50:	cmp	w0, #0x5f
  44ee54:	b.eq	44ee08 <_obstack_memory_used@@Base+0xdc6c>  // b.none
  44ee58:	sub	w0, w0, #0x30
  44ee5c:	cmp	w0, #0x9
  44ee60:	b.hi	44eec0 <_obstack_memory_used@@Base+0xdd24>  // b.pmore
  44ee64:	mov	w21, #0x0                   	// #0
  44ee68:	mov	w1, #0xcccc                	// #52428
  44ee6c:	movk	w1, #0xccc, lsl #16
  44ee70:	mov	w2, #0x7fffffff            	// #2147483647
  44ee74:	b	44eea0 <_obstack_memory_used@@Base+0xdd04>
  44ee78:	ldrb	w0, [x27]
  44ee7c:	cmp	w0, #0x37
  44ee80:	b.ls	44eeac <_obstack_memory_used@@Base+0xdd10>  // b.plast
  44ee84:	mov	w21, w2
  44ee88:	b	44ee90 <_obstack_memory_used@@Base+0xdcf4>
  44ee8c:	mov	w21, w2
  44ee90:	ldrb	w0, [x27, #1]!
  44ee94:	sub	w0, w0, #0x30
  44ee98:	cmp	w0, #0x9
  44ee9c:	b.hi	44ee14 <_obstack_memory_used@@Base+0xdc78>  // b.pmore
  44eea0:	cmp	w21, w1
  44eea4:	b.gt	44ee8c <_obstack_memory_used@@Base+0xdcf0>
  44eea8:	b.eq	44ee78 <_obstack_memory_used@@Base+0xdcdc>  // b.none
  44eeac:	add	w21, w21, w21, lsl #2
  44eeb0:	ldrb	w0, [x27]
  44eeb4:	sub	w0, w0, #0x30
  44eeb8:	add	w21, w0, w21, lsl #1
  44eebc:	b	44ee90 <_obstack_memory_used@@Base+0xdcf4>
  44eec0:	mov	w21, #0xffffffff            	// #-1
  44eec4:	b	44ee14 <_obstack_memory_used@@Base+0xdc78>
  44eec8:	mov	w3, w28
  44eecc:	add	x24, x27, #0x1
  44eed0:	ldrb	w4, [x27, #1]
  44eed4:	mov	w1, w4
  44eed8:	cmp	w4, #0x7a
  44eedc:	b.hi	45007c <_obstack_memory_used@@Base+0xeee0>  // b.pmore
  44eee0:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  44eee4:	add	x0, x0, #0x5e8
  44eee8:	ldrh	w0, [x0, w4, uxtw #1]
  44eeec:	adr	x2, 44eef8 <_obstack_memory_used@@Base+0xdd5c>
  44eef0:	add	x0, x2, w0, sxth #2
  44eef4:	br	x0
  44eef8:	mov	x24, x27
  44eefc:	mov	w28, #0x0                   	// #0
  44ef00:	str	wzr, [sp, #152]
  44ef04:	ldr	w0, [sp, #104]
  44ef08:	cmp	w0, #0x0
  44ef0c:	ldr	w1, [sp, #152]
  44ef10:	csel	w1, w1, w0, eq  // eq = none
  44ef14:	str	w1, [sp, #152]
  44ef18:	mov	w1, #0x70                  	// #112
  44ef1c:	ldr	w0, [sp, #96]
  44ef20:	csel	w0, w0, wzr, eq  // eq = none
  44ef24:	str	w0, [sp, #96]
  44ef28:	mov	w0, #0x20                  	// #32
  44ef2c:	strb	w0, [sp, #184]
  44ef30:	mov	w0, #0x25                  	// #37
  44ef34:	strb	w0, [sp, #185]
  44ef38:	add	x0, sp, #0xba
  44ef3c:	cbz	w28, 44f408 <_obstack_memory_used@@Base+0xe26c>
  44ef40:	mov	w3, w28
  44ef44:	mov	w28, #0x0                   	// #0
  44ef48:	b	44f400 <_obstack_memory_used@@Base+0xe264>
  44ef4c:	mov	x27, x24
  44ef50:	b	44ef58 <_obstack_memory_used@@Base+0xddbc>
  44ef54:	mov	w3, #0x0                   	// #0
  44ef58:	add	x24, x27, #0x1
  44ef5c:	ldrb	w0, [x27, #1]
  44ef60:	cmp	w0, #0x3a
  44ef64:	b.eq	44ffe0 <_obstack_memory_used@@Base+0xee44>  // b.none
  44ef68:	mov	x7, #0x1                   	// #1
  44ef6c:	cmp	w0, #0x7a
  44ef70:	b.ne	4500a0 <_obstack_memory_used@@Base+0xef04>  // b.any
  44ef74:	ldr	w0, [x23, #32]
  44ef78:	tbnz	w0, #31, 44ed8c <_obstack_memory_used@@Base+0xdbf0>
  44ef7c:	ldr	x6, [x23, #40]
  44ef80:	mov	w5, #0x1                   	// #1
  44ef84:	tbnz	w6, #31, 44ef9c <_obstack_memory_used@@Base+0xde00>
  44ef88:	mov	w5, #0x0                   	// #0
  44ef8c:	cbnz	w6, 44ef9c <_obstack_memory_used@@Base+0xde00>
  44ef90:	ldrb	w0, [x26]
  44ef94:	cmp	w0, #0x2d
  44ef98:	cset	w5, eq  // eq = none
  44ef9c:	mov	w0, #0xb3c5                	// #46021
  44efa0:	movk	w0, #0x91a2, lsl #16
  44efa4:	smull	x2, w6, w0
  44efa8:	lsr	x2, x2, #32
  44efac:	add	w2, w2, w6
  44efb0:	asr	w2, w2, #11
  44efb4:	asr	w8, w6, #31
  44efb8:	sub	w2, w2, w8
  44efbc:	mov	w4, #0x8889                	// #34953
  44efc0:	movk	w4, #0x8888, lsl #16
  44efc4:	smull	x0, w6, w4
  44efc8:	lsr	x0, x0, #32
  44efcc:	add	w0, w0, w6
  44efd0:	asr	w0, w0, #5
  44efd4:	sub	w0, w0, w8
  44efd8:	smull	x4, w0, w4
  44efdc:	lsr	x4, x4, #32
  44efe0:	add	w4, w0, w4
  44efe4:	asr	w4, w4, #5
  44efe8:	sub	w8, w4, w0, asr #31
  44efec:	lsl	w4, w8, #4
  44eff0:	sub	w4, w4, w8
  44eff4:	sub	w8, w0, w4, lsl #2
  44eff8:	lsl	w4, w0, #4
  44effc:	sub	w0, w4, w0
  44f000:	sub	w0, w6, w0, lsl #2
  44f004:	cmp	x7, #0x2
  44f008:	b.eq	45004c <_obstack_memory_used@@Base+0xeeb0>  // b.none
  44f00c:	b.hi	450014 <_obstack_memory_used@@Base+0xee78>  // b.pmore
  44f010:	cbz	x7, 450034 <_obstack_memory_used@@Base+0xee98>
  44f014:	mov	w0, #0x64                  	// #100
  44f018:	madd	w2, w2, w0, w8
  44f01c:	mov	w8, #0x4                   	// #4
  44f020:	mov	w7, #0x1                   	// #1
  44f024:	mov	w28, #0x6                   	// #6
  44f028:	b	44f3dc <_obstack_memory_used@@Base+0xe240>
  44f02c:	cbnz	w28, 45014c <_obstack_memory_used@@Base+0xefb0>
  44f030:	cmp	w21, #0x0
  44f034:	csel	w0, w21, wzr, ge  // ge = tcont
  44f038:	sxtw	x0, w0
  44f03c:	cmp	x0, #0x0
  44f040:	csinc	x27, x0, xzr, ne  // ne = any
  44f044:	sub	x1, x22, x19
  44f048:	cmp	x1, x27
  44f04c:	b.ls	450184 <_obstack_memory_used@@Base+0xefe8>  // b.plast
  44f050:	cbz	x20, 44f08c <_obstack_memory_used@@Base+0xdef0>
  44f054:	cmp	x0, #0x1
  44f058:	b.ls	44f084 <_obstack_memory_used@@Base+0xdee8>  // b.plast
  44f05c:	sxtw	x21, w21
  44f060:	sub	x21, x21, #0x1
  44f064:	ldr	w0, [sp, #128]
  44f068:	cmp	w0, #0x30
  44f06c:	b.eq	44f09c <_obstack_memory_used@@Base+0xdf00>  // b.none
  44f070:	mov	x2, x21
  44f074:	mov	w1, #0x20                  	// #32
  44f078:	mov	x0, x20
  44f07c:	bl	404420 <memset@plt>
  44f080:	add	x20, x20, x21
  44f084:	ldrb	w0, [x24]
  44f088:	strb	w0, [x20], #1
  44f08c:	add	x19, x19, x27
  44f090:	b	44ed8c <_obstack_memory_used@@Base+0xdbf0>
  44f094:	mov	x24, x27
  44f098:	b	44f030 <_obstack_memory_used@@Base+0xde94>
  44f09c:	mov	x2, x21
  44f0a0:	mov	w1, #0x30                  	// #48
  44f0a4:	mov	x0, x20
  44f0a8:	bl	404420 <memset@plt>
  44f0ac:	add	x20, x20, x21
  44f0b0:	b	44f084 <_obstack_memory_used@@Base+0xdee8>
  44f0b4:	mov	x24, x27
  44f0b8:	mov	w3, #0x0                   	// #0
  44f0bc:	cbnz	w3, 4500a4 <_obstack_memory_used@@Base+0xef08>
  44f0c0:	ldr	w0, [sp, #104]
  44f0c4:	cmp	w0, #0x0
  44f0c8:	ldr	w1, [sp, #96]
  44f0cc:	csel	w0, w1, w0, eq  // eq = none
  44f0d0:	str	w0, [sp, #96]
  44f0d4:	mov	w1, #0x61                  	// #97
  44f0d8:	mov	w0, #0x20                  	// #32
  44f0dc:	strb	w0, [sp, #184]
  44f0e0:	mov	w0, #0x25                  	// #37
  44f0e4:	strb	w0, [sp, #185]
  44f0e8:	str	wzr, [sp, #152]
  44f0ec:	mov	w28, #0x0                   	// #0
  44f0f0:	add	x0, sp, #0xba
  44f0f4:	b	44f408 <_obstack_memory_used@@Base+0xe26c>
  44f0f8:	mov	x24, x27
  44f0fc:	mov	w3, #0x0                   	// #0
  44f100:	cbnz	w3, 4500a4 <_obstack_memory_used@@Base+0xef08>
  44f104:	ldr	w0, [sp, #104]
  44f108:	cmp	w0, #0x0
  44f10c:	ldr	w1, [sp, #96]
  44f110:	csel	w0, w1, w0, eq  // eq = none
  44f114:	str	w0, [sp, #96]
  44f118:	mov	w1, #0x41                  	// #65
  44f11c:	b	44f0d8 <_obstack_memory_used@@Base+0xdf3c>
  44f120:	mov	x24, x27
  44f124:	mov	w28, #0x0                   	// #0
  44f128:	ldr	w0, [sp, #104]
  44f12c:	cmp	w0, #0x0
  44f130:	ldr	w2, [sp, #96]
  44f134:	csel	w0, w2, w0, eq  // eq = none
  44f138:	str	w0, [sp, #96]
  44f13c:	cmp	w28, #0x45
  44f140:	b.eq	450098 <_obstack_memory_used@@Base+0xeefc>  // b.none
  44f144:	str	wzr, [sp, #152]
  44f148:	b	44ef28 <_obstack_memory_used@@Base+0xdd8c>
  44f14c:	mov	x24, x27
  44f150:	mov	w28, #0x0                   	// #0
  44f154:	cmp	w28, #0x45
  44f158:	b.eq	4500a4 <_obstack_memory_used@@Base+0xef08>  // b.none
  44f15c:	ldr	w0, [sp, #104]
  44f160:	cmp	w0, #0x0
  44f164:	ldr	w1, [sp, #96]
  44f168:	csel	w0, w1, w0, eq  // eq = none
  44f16c:	str	w0, [sp, #96]
  44f170:	mov	w1, #0x42                  	// #66
  44f174:	str	wzr, [sp, #152]
  44f178:	b	44ef28 <_obstack_memory_used@@Base+0xdd8c>
  44f17c:	mov	x24, x27
  44f180:	mov	w28, #0x0                   	// #0
  44f184:	cmp	w28, #0x4f
  44f188:	b.eq	4500a4 <_obstack_memory_used@@Base+0xef08>  // b.none
  44f18c:	mov	w1, #0x63                  	// #99
  44f190:	str	wzr, [sp, #152]
  44f194:	b	44ef28 <_obstack_memory_used@@Base+0xdd8c>
  44f198:	mov	x24, x27
  44f19c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  44f1a0:	add	x0, x0, #0x3e8
  44f1a4:	str	x0, [sp, #104]
  44f1a8:	ldr	w7, [sp, #132]
  44f1ac:	ldr	x6, [sp, #120]
  44f1b0:	ldr	x5, [sp, #136]
  44f1b4:	ldrb	w4, [sp, #96]
  44f1b8:	mov	x3, x23
  44f1bc:	ldr	x2, [sp, #104]
  44f1c0:	mov	x1, #0xffffffffffffffff    	// #-1
  44f1c4:	mov	x0, #0x0                   	// #0
  44f1c8:	bl	44ecec <_obstack_memory_used@@Base+0xdb50>
  44f1cc:	mov	x27, x0
  44f1d0:	cmp	w21, #0x0
  44f1d4:	csel	w0, w21, wzr, ge  // ge = tcont
  44f1d8:	sxtw	x0, w0
  44f1dc:	cmp	x27, x0
  44f1e0:	csel	x28, x27, x0, cs  // cs = hs, nlast
  44f1e4:	sub	x1, x22, x19
  44f1e8:	str	x1, [sp, #152]
  44f1ec:	cmp	x1, x28
  44f1f0:	b.ls	450184 <_obstack_memory_used@@Base+0xefe8>  // b.plast
  44f1f4:	cbz	x20, 44f250 <_obstack_memory_used@@Base+0xe0b4>
  44f1f8:	cmp	x27, x0
  44f1fc:	b.cs	44f228 <_obstack_memory_used@@Base+0xe08c>  // b.hs, b.nlast
  44f200:	sxtw	x21, w21
  44f204:	sub	x21, x21, x27
  44f208:	ldr	w0, [sp, #128]
  44f20c:	cmp	w0, #0x30
  44f210:	b.eq	44f27c <_obstack_memory_used@@Base+0xe0e0>  // b.none
  44f214:	mov	x2, x21
  44f218:	mov	w1, #0x20                  	// #32
  44f21c:	mov	x0, x20
  44f220:	bl	404420 <memset@plt>
  44f224:	add	x20, x20, x21
  44f228:	ldr	w7, [sp, #132]
  44f22c:	ldr	x6, [sp, #120]
  44f230:	ldr	x5, [sp, #136]
  44f234:	ldrb	w4, [sp, #96]
  44f238:	mov	x3, x23
  44f23c:	ldr	x2, [sp, #104]
  44f240:	ldr	x1, [sp, #152]
  44f244:	mov	x0, x20
  44f248:	bl	44ecec <_obstack_memory_used@@Base+0xdb50>
  44f24c:	add	x20, x20, x27
  44f250:	add	x19, x19, x28
  44f254:	b	44ed8c <_obstack_memory_used@@Base+0xdbf0>
  44f258:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  44f25c:	add	x0, x0, #0x3f0
  44f260:	str	x0, [sp, #104]
  44f264:	b	44f1a8 <_obstack_memory_used@@Base+0xe00c>
  44f268:	mov	x24, x27
  44f26c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  44f270:	add	x0, x0, #0x3f0
  44f274:	str	x0, [sp, #104]
  44f278:	b	44f1a8 <_obstack_memory_used@@Base+0xe00c>
  44f27c:	mov	x2, x21
  44f280:	mov	w1, #0x30                  	// #48
  44f284:	mov	x0, x20
  44f288:	bl	404420 <memset@plt>
  44f28c:	add	x20, x20, x21
  44f290:	b	44f228 <_obstack_memory_used@@Base+0xe08c>
  44f294:	str	wzr, [sp, #152]
  44f298:	b	44ef28 <_obstack_memory_used@@Base+0xdd8c>
  44f29c:	mov	x24, x27
  44f2a0:	mov	w28, #0x0                   	// #0
  44f2a4:	str	wzr, [sp, #152]
  44f2a8:	b	44ef28 <_obstack_memory_used@@Base+0xdd8c>
  44f2ac:	mov	x2, x21
  44f2b0:	mov	w1, #0x30                  	// #48
  44f2b4:	mov	x0, x20
  44f2b8:	bl	404420 <memset@plt>
  44f2bc:	add	x20, x20, x21
  44f2c0:	b	44f48c <_obstack_memory_used@@Base+0xe2f0>
  44f2c4:	mov	x2, x27
  44f2c8:	ldr	x1, [sp, #144]
  44f2cc:	mov	x0, x20
  44f2d0:	bl	44ec44 <_obstack_memory_used@@Base+0xdaa8>
  44f2d4:	b	44f4ac <_obstack_memory_used@@Base+0xe310>
  44f2d8:	mov	x2, x27
  44f2dc:	ldr	x1, [sp, #144]
  44f2e0:	mov	x0, x20
  44f2e4:	bl	403f70 <memcpy@plt>
  44f2e8:	b	44f4ac <_obstack_memory_used@@Base+0xe310>
  44f2ec:	mov	x24, x27
  44f2f0:	mov	w3, #0x0                   	// #0
  44f2f4:	cmp	w3, #0x45
  44f2f8:	b.eq	4501c4 <_obstack_memory_used@@Base+0xf028>  // b.none
  44f2fc:	ldr	w4, [x23, #20]
  44f300:	mov	w0, #0x851f                	// #34079
  44f304:	movk	w0, #0x51eb, lsl #16
  44f308:	smull	x0, w4, w0
  44f30c:	asr	x0, x0, #37
  44f310:	sub	w0, w0, w4, asr #31
  44f314:	add	w2, w0, #0x13
  44f318:	mov	w5, #0x64                  	// #100
  44f31c:	msub	w0, w0, w5, w4
  44f320:	cmp	w0, #0x0
  44f324:	ccmp	w2, #0x0, #0x4, lt  // lt = tstop
  44f328:	cset	w0, gt
  44f32c:	cmn	w4, #0x76c
  44f330:	cset	w5, lt  // lt = tstop
  44f334:	sub	w2, w2, w0
  44f338:	mov	w8, #0x0                   	// #0
  44f33c:	mov	w7, #0x0                   	// #0
  44f340:	mov	w28, #0x2                   	// #2
  44f344:	b	44f3dc <_obstack_memory_used@@Base+0xe240>
  44f348:	mov	x24, x27
  44f34c:	mov	w28, #0x0                   	// #0
  44f350:	cmp	w28, #0x4f
  44f354:	b.eq	4500a4 <_obstack_memory_used@@Base+0xef08>  // b.none
  44f358:	mov	w1, #0x78                  	// #120
  44f35c:	str	wzr, [sp, #152]
  44f360:	b	44ef28 <_obstack_memory_used@@Base+0xdd8c>
  44f364:	mov	x24, x27
  44f368:	mov	w3, #0x0                   	// #0
  44f36c:	cbnz	w3, 4500a4 <_obstack_memory_used@@Base+0xef08>
  44f370:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  44f374:	add	x0, x0, #0x410
  44f378:	str	x0, [sp, #104]
  44f37c:	b	44f1a8 <_obstack_memory_used@@Base+0xe00c>
  44f380:	mov	x24, x27
  44f384:	mov	w3, #0x0                   	// #0
  44f388:	cmp	w3, #0x45
  44f38c:	b.eq	4500a4 <_obstack_memory_used@@Base+0xef08>  // b.none
  44f390:	ldr	w2, [x23, #12]
  44f394:	mov	w28, #0x2                   	// #2
  44f398:	b	44f3d0 <_obstack_memory_used@@Base+0xe234>
  44f39c:	mov	x24, x27
  44f3a0:	mov	w3, #0x0                   	// #0
  44f3a4:	cmp	w3, #0x45
  44f3a8:	b.eq	4500a4 <_obstack_memory_used@@Base+0xef08>  // b.none
  44f3ac:	ldr	w2, [x23, #12]
  44f3b0:	ldr	w4, [sp, #128]
  44f3b4:	cmp	w4, #0x30
  44f3b8:	mov	w28, #0x2                   	// #2
  44f3bc:	mov	w0, #0x2d                  	// #45
  44f3c0:	ccmp	w4, w0, #0x4, ne  // ne = any
  44f3c4:	mov	w0, #0x5f                  	// #95
  44f3c8:	csel	w0, w4, w0, eq  // eq = none
  44f3cc:	str	w0, [sp, #128]
  44f3d0:	lsr	w5, w2, #31
  44f3d4:	mov	w8, #0x0                   	// #0
  44f3d8:	mov	w7, #0x0                   	// #0
  44f3dc:	cmp	w3, #0x4f
  44f3e0:	eor	w0, w5, #0x1
  44f3e4:	csel	w0, w0, wzr, eq  // eq = none
  44f3e8:	cbz	w0, 44fe8c <_obstack_memory_used@@Base+0xecf0>
  44f3ec:	mov	w0, #0x20                  	// #32
  44f3f0:	strb	w0, [sp, #184]
  44f3f4:	mov	w0, #0x25                  	// #37
  44f3f8:	strb	w0, [sp, #185]
  44f3fc:	str	wzr, [sp, #152]
  44f400:	strb	w3, [sp, #186]
  44f404:	add	x0, sp, #0xbb
  44f408:	strb	w1, [x0]
  44f40c:	strb	wzr, [x0, #1]
  44f410:	mov	x3, x23
  44f414:	add	x2, sp, #0xb8
  44f418:	mov	x1, #0x400                 	// #1024
  44f41c:	add	x0, sp, #0xd0
  44f420:	bl	404150 <strftime@plt>
  44f424:	cbz	x0, 44ed8c <_obstack_memory_used@@Base+0xdbf0>
  44f428:	sub	x27, x0, #0x1
  44f42c:	cmp	w21, #0x0
  44f430:	csel	w0, w21, wzr, ge  // ge = tcont
  44f434:	sxtw	x0, w0
  44f438:	cmp	x27, x0
  44f43c:	csel	x1, x27, x0, cs  // cs = hs, nlast
  44f440:	mov	x2, x1
  44f444:	str	x1, [sp, #104]
  44f448:	sub	x1, x22, x19
  44f44c:	cmp	x1, x2
  44f450:	b.ls	450184 <_obstack_memory_used@@Base+0xefe8>  // b.plast
  44f454:	cbz	x20, 44f4b0 <_obstack_memory_used@@Base+0xe314>
  44f458:	cmp	w28, #0x0
  44f45c:	ccmp	x27, x0, #0x2, eq  // eq = none
  44f460:	b.cs	44f48c <_obstack_memory_used@@Base+0xe2f0>  // b.hs, b.nlast
  44f464:	sxtw	x21, w21
  44f468:	sub	x21, x21, x27
  44f46c:	ldr	w0, [sp, #128]
  44f470:	cmp	w0, #0x30
  44f474:	b.eq	44f2ac <_obstack_memory_used@@Base+0xe110>  // b.none
  44f478:	mov	x2, x21
  44f47c:	mov	w1, #0x20                  	// #32
  44f480:	mov	x0, x20
  44f484:	bl	404420 <memset@plt>
  44f488:	add	x20, x20, x21
  44f48c:	ldr	w0, [sp, #152]
  44f490:	cbnz	w0, 44f2c4 <_obstack_memory_used@@Base+0xe128>
  44f494:	ldr	w0, [sp, #96]
  44f498:	cbz	w0, 44f2d8 <_obstack_memory_used@@Base+0xe13c>
  44f49c:	mov	x2, x27
  44f4a0:	ldr	x1, [sp, #144]
  44f4a4:	mov	x0, x20
  44f4a8:	bl	44ec98 <_obstack_memory_used@@Base+0xdafc>
  44f4ac:	add	x20, x20, x27
  44f4b0:	ldr	x0, [sp, #104]
  44f4b4:	add	x19, x19, x0
  44f4b8:	b	44ed8c <_obstack_memory_used@@Base+0xdbf0>
  44f4bc:	ldr	w2, [sp, #132]
  44f4c0:	mov	w28, w21
  44f4c4:	b	44f3d0 <_obstack_memory_used@@Base+0xe234>
  44f4c8:	asr	w8, w8, #1
  44f4cc:	sub	x27, x3, #0x1
  44f4d0:	umull	x1, w2, w4
  44f4d4:	lsr	x1, x1, #35
  44f4d8:	add	w0, w1, w1, lsl #2
  44f4dc:	sub	w0, w2, w0, lsl #1
  44f4e0:	add	w0, w0, #0x30
  44f4e4:	sturb	w0, [x3, #-1]
  44f4e8:	cmp	w8, #0x0
  44f4ec:	ccmp	w2, #0x9, #0x2, eq  // eq = none
  44f4f0:	b.ls	44f50c <_obstack_memory_used@@Base+0xe370>  // b.plast
  44f4f4:	mov	w2, w1
  44f4f8:	mov	x3, x27
  44f4fc:	tbz	w8, #0, 44f4c8 <_obstack_memory_used@@Base+0xe32c>
  44f500:	sub	x3, x27, #0x1
  44f504:	sturb	w6, [x27, #-1]
  44f508:	b	44f4c8 <_obstack_memory_used@@Base+0xe32c>
  44f50c:	cmp	w28, w21
  44f510:	csel	w0, w28, w21, ge  // ge = tcont
  44f514:	str	w0, [sp, #104]
  44f518:	cbnz	w5, 4501e8 <_obstack_memory_used@@Base+0xf04c>
  44f51c:	mov	w0, #0x2b                  	// #43
  44f520:	str	w0, [sp, #152]
  44f524:	cbnz	w7, 4501f0 <_obstack_memory_used@@Base+0xf054>
  44f528:	ldr	w0, [sp, #128]
  44f52c:	cmp	w0, #0x2d
  44f530:	b.eq	4502d8 <_obstack_memory_used@@Base+0xf13c>  // b.none
  44f534:	ldr	x0, [sp, #112]
  44f538:	sub	x0, x0, x27
  44f53c:	ldr	w1, [sp, #104]
  44f540:	sub	w28, w1, w0
  44f544:	cmp	w28, #0x0
  44f548:	b.le	4502d8 <_obstack_memory_used@@Base+0xf13c>
  44f54c:	str	wzr, [sp, #152]
  44f550:	str	wzr, [sp, #160]
  44f554:	b	450228 <_obstack_memory_used@@Base+0xf08c>
  44f558:	cmp	w21, #0x0
  44f55c:	csel	w0, w21, wzr, ge  // ge = tcont
  44f560:	sxtw	x0, w0
  44f564:	cmp	x0, #0x0
  44f568:	csinc	x28, x0, xzr, ne  // ne = any
  44f56c:	sub	x1, x22, x19
  44f570:	cmp	x1, x28
  44f574:	b.ls	450184 <_obstack_memory_used@@Base+0xefe8>  // b.plast
  44f578:	cbz	x20, 44f5b8 <_obstack_memory_used@@Base+0xe41c>
  44f57c:	ldr	w1, [sp, #104]
  44f580:	cmp	w1, #0x0
  44f584:	ccmp	x0, #0x1, #0x0, eq  // eq = none
  44f588:	b.ls	44f5b0 <_obstack_memory_used@@Base+0xe414>  // b.plast
  44f58c:	sxtw	x0, w21
  44f590:	sub	x0, x0, #0x1
  44f594:	str	x0, [sp, #160]
  44f598:	mov	x2, x0
  44f59c:	mov	w1, #0x20                  	// #32
  44f5a0:	mov	x0, x20
  44f5a4:	bl	404420 <memset@plt>
  44f5a8:	ldr	x0, [sp, #160]
  44f5ac:	add	x20, x20, x0
  44f5b0:	ldrb	w0, [sp, #152]
  44f5b4:	strb	w0, [x20], #1
  44f5b8:	add	x19, x19, x28
  44f5bc:	b	4502d8 <_obstack_memory_used@@Base+0xf13c>
  44f5c0:	sxtw	x0, w28
  44f5c4:	mov	x1, x0
  44f5c8:	str	x0, [sp, #168]
  44f5cc:	sub	x0, x22, x19
  44f5d0:	cmp	x0, w28, sxtw
  44f5d4:	b.ls	450184 <_obstack_memory_used@@Base+0xefe8>  // b.plast
  44f5d8:	cbz	x20, 44f5f4 <_obstack_memory_used@@Base+0xe458>
  44f5dc:	mov	x2, x1
  44f5e0:	mov	w1, #0x20                  	// #32
  44f5e4:	mov	x0, x20
  44f5e8:	bl	404420 <memset@plt>
  44f5ec:	ldr	x0, [sp, #168]
  44f5f0:	add	x20, x20, x0
  44f5f4:	ldr	x0, [sp, #168]
  44f5f8:	add	x19, x19, x0
  44f5fc:	sub	w0, w21, w28
  44f600:	cmp	w21, w28
  44f604:	csel	w21, w0, wzr, gt
  44f608:	ldr	w0, [sp, #160]
  44f60c:	cbz	w0, 4502d8 <_obstack_memory_used@@Base+0xf13c>
  44f610:	cmp	w21, #0x0
  44f614:	csel	w0, w21, wzr, ge  // ge = tcont
  44f618:	sxtw	x0, w0
  44f61c:	cmp	x0, #0x0
  44f620:	csinc	x1, x0, xzr, ne  // ne = any
  44f624:	mov	x2, x1
  44f628:	str	x1, [sp, #160]
  44f62c:	sub	x1, x22, x19
  44f630:	cmp	x1, x2
  44f634:	b.ls	450184 <_obstack_memory_used@@Base+0xefe8>  // b.plast
  44f638:	cbz	x20, 44f670 <_obstack_memory_used@@Base+0xe4d4>
  44f63c:	ldr	w1, [sp, #104]
  44f640:	cmp	w1, #0x0
  44f644:	ccmp	x0, #0x1, #0x0, eq  // eq = none
  44f648:	b.ls	44f668 <_obstack_memory_used@@Base+0xe4cc>  // b.plast
  44f64c:	sxtw	x28, w21
  44f650:	sub	x28, x28, #0x1
  44f654:	mov	x2, x28
  44f658:	mov	w1, #0x20                  	// #32
  44f65c:	mov	x0, x20
  44f660:	bl	404420 <memset@plt>
  44f664:	add	x20, x20, x28
  44f668:	ldrb	w0, [sp, #152]
  44f66c:	strb	w0, [x20], #1
  44f670:	ldr	x0, [sp, #160]
  44f674:	add	x19, x19, x0
  44f678:	b	4502d8 <_obstack_memory_used@@Base+0xf13c>
  44f67c:	mov	x2, x21
  44f680:	mov	w1, #0x30                  	// #48
  44f684:	mov	x0, x20
  44f688:	bl	404420 <memset@plt>
  44f68c:	add	x20, x20, x21
  44f690:	b	4502a4 <_obstack_memory_used@@Base+0xf108>
  44f694:	cmp	w21, #0x0
  44f698:	csel	w0, w21, wzr, ge  // ge = tcont
  44f69c:	sxtw	x0, w0
  44f6a0:	cmp	x0, #0x0
  44f6a4:	csinc	x28, x0, xzr, ne  // ne = any
  44f6a8:	sub	x1, x22, x19
  44f6ac:	cmp	x1, x28
  44f6b0:	b.ls	450184 <_obstack_memory_used@@Base+0xefe8>  // b.plast
  44f6b4:	cbz	x20, 44f700 <_obstack_memory_used@@Base+0xe564>
  44f6b8:	ldr	w1, [sp, #104]
  44f6bc:	cmp	w1, #0x0
  44f6c0:	ccmp	x0, #0x1, #0x0, eq  // eq = none
  44f6c4:	b.ls	44f6f8 <_obstack_memory_used@@Base+0xe55c>  // b.plast
  44f6c8:	sxtw	x0, w21
  44f6cc:	sub	x0, x0, #0x1
  44f6d0:	str	x0, [sp, #160]
  44f6d4:	ldr	w0, [sp, #128]
  44f6d8:	cmp	w0, #0x30
  44f6dc:	b.eq	44f708 <_obstack_memory_used@@Base+0xe56c>  // b.none
  44f6e0:	ldr	x2, [sp, #160]
  44f6e4:	mov	w1, #0x20                  	// #32
  44f6e8:	mov	x0, x20
  44f6ec:	bl	404420 <memset@plt>
  44f6f0:	ldr	x0, [sp, #160]
  44f6f4:	add	x20, x20, x0
  44f6f8:	ldrb	w0, [sp, #152]
  44f6fc:	strb	w0, [x20], #1
  44f700:	add	x19, x19, x28
  44f704:	b	4502d8 <_obstack_memory_used@@Base+0xf13c>
  44f708:	ldr	x2, [sp, #160]
  44f70c:	mov	w1, #0x30                  	// #48
  44f710:	mov	x0, x20
  44f714:	bl	404420 <memset@plt>
  44f718:	ldr	x0, [sp, #160]
  44f71c:	add	x20, x20, x0
  44f720:	b	44f6f8 <_obstack_memory_used@@Base+0xe55c>
  44f724:	mov	x2, x21
  44f728:	mov	w1, #0x30                  	// #48
  44f72c:	mov	x0, x20
  44f730:	bl	404420 <memset@plt>
  44f734:	add	x20, x20, x21
  44f738:	b	450344 <_obstack_memory_used@@Base+0xf1a8>
  44f73c:	mov	x2, x28
  44f740:	mov	x1, x27
  44f744:	mov	x0, x20
  44f748:	bl	403f70 <memcpy@plt>
  44f74c:	b	45035c <_obstack_memory_used@@Base+0xf1c0>
  44f750:	mov	x24, x27
  44f754:	mov	w3, #0x0                   	// #0
  44f758:	cbnz	w3, 4500a4 <_obstack_memory_used@@Base+0xef08>
  44f75c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  44f760:	add	x0, x0, #0x400
  44f764:	str	x0, [sp, #104]
  44f768:	b	44f1a8 <_obstack_memory_used@@Base+0xe00c>
  44f76c:	mov	x24, x27
  44f770:	mov	w3, #0x0                   	// #0
  44f774:	cmp	w3, #0x45
  44f778:	b.eq	4500a4 <_obstack_memory_used@@Base+0xef08>  // b.none
  44f77c:	ldr	w2, [x23, #8]
  44f780:	mov	w28, #0x2                   	// #2
  44f784:	b	44f3d0 <_obstack_memory_used@@Base+0xe234>
  44f788:	mov	x24, x27
  44f78c:	mov	w3, #0x0                   	// #0
  44f790:	cmp	w3, #0x45
  44f794:	b.eq	4500a4 <_obstack_memory_used@@Base+0xef08>  // b.none
  44f798:	mov	w2, w25
  44f79c:	mov	w28, #0x2                   	// #2
  44f7a0:	b	44f3d0 <_obstack_memory_used@@Base+0xe234>
  44f7a4:	mov	x24, x27
  44f7a8:	mov	w3, #0x0                   	// #0
  44f7ac:	cmp	w3, #0x45
  44f7b0:	b.eq	4500a4 <_obstack_memory_used@@Base+0xef08>  // b.none
  44f7b4:	ldr	w2, [x23, #8]
  44f7b8:	b	44f3b0 <_obstack_memory_used@@Base+0xe214>
  44f7bc:	mov	x24, x27
  44f7c0:	mov	w3, #0x0                   	// #0
  44f7c4:	cmp	w3, #0x45
  44f7c8:	b.eq	4500a4 <_obstack_memory_used@@Base+0xef08>  // b.none
  44f7cc:	mov	w2, w25
  44f7d0:	b	44f3b0 <_obstack_memory_used@@Base+0xe214>
  44f7d4:	mov	x24, x27
  44f7d8:	mov	w3, #0x0                   	// #0
  44f7dc:	cmp	w3, #0x45
  44f7e0:	b.eq	4500a4 <_obstack_memory_used@@Base+0xef08>  // b.none
  44f7e4:	ldr	w2, [x23, #28]
  44f7e8:	cmn	w2, #0x1
  44f7ec:	cset	w5, lt  // lt = tstop
  44f7f0:	add	w2, w2, #0x1
  44f7f4:	mov	w8, #0x0                   	// #0
  44f7f8:	mov	w7, #0x0                   	// #0
  44f7fc:	mov	w28, #0x3                   	// #3
  44f800:	b	44f3dc <_obstack_memory_used@@Base+0xe240>
  44f804:	mov	x24, x27
  44f808:	mov	w3, #0x0                   	// #0
  44f80c:	cmp	w3, #0x45
  44f810:	b.eq	4500a4 <_obstack_memory_used@@Base+0xef08>  // b.none
  44f814:	ldr	w2, [x23, #4]
  44f818:	mov	w28, #0x2                   	// #2
  44f81c:	b	44f3d0 <_obstack_memory_used@@Base+0xe234>
  44f820:	mov	x24, x27
  44f824:	mov	w3, #0x0                   	// #0
  44f828:	cmp	w3, #0x45
  44f82c:	b.eq	4500a4 <_obstack_memory_used@@Base+0xef08>  // b.none
  44f830:	ldr	w2, [x23, #16]
  44f834:	cmn	w2, #0x1
  44f838:	cset	w5, lt  // lt = tstop
  44f83c:	add	w2, w2, #0x1
  44f840:	mov	w8, #0x0                   	// #0
  44f844:	mov	w7, #0x0                   	// #0
  44f848:	mov	w28, #0x2                   	// #2
  44f84c:	b	44f3dc <_obstack_memory_used@@Base+0xe240>
  44f850:	mov	x24, x27
  44f854:	mov	w3, #0x0                   	// #0
  44f858:	cmp	w3, #0x45
  44f85c:	b.eq	4500a4 <_obstack_memory_used@@Base+0xef08>  // b.none
  44f860:	cmn	w21, #0x1
  44f864:	b.ne	44f878 <_obstack_memory_used@@Base+0xe6dc>  // b.any
  44f868:	ldr	w2, [sp, #132]
  44f86c:	mov	w21, #0x9                   	// #9
  44f870:	mov	w28, w21
  44f874:	b	44f3d0 <_obstack_memory_used@@Base+0xe234>
  44f878:	cmp	w21, #0x8
  44f87c:	b.gt	44f4bc <_obstack_memory_used@@Base+0xe320>
  44f880:	mov	w4, w21
  44f884:	ldr	w2, [sp, #132]
  44f888:	mov	w5, #0x6667                	// #26215
  44f88c:	movk	w5, #0x6666, lsl #16
  44f890:	smull	x0, w2, w5
  44f894:	asr	x0, x0, #34
  44f898:	sub	w2, w0, w2, asr #31
  44f89c:	add	w4, w4, #0x1
  44f8a0:	cmp	w4, #0x9
  44f8a4:	b.ne	44f890 <_obstack_memory_used@@Base+0xe6f4>  // b.any
  44f8a8:	mov	w28, w21
  44f8ac:	b	44f3d0 <_obstack_memory_used@@Base+0xe234>
  44f8b0:	mov	x24, x27
  44f8b4:	cmp	w21, #0x0
  44f8b8:	csel	w0, w21, wzr, ge  // ge = tcont
  44f8bc:	sxtw	x0, w0
  44f8c0:	cmp	x0, #0x0
  44f8c4:	csinc	x27, x0, xzr, ne  // ne = any
  44f8c8:	sub	x1, x22, x19
  44f8cc:	cmp	x1, x27
  44f8d0:	b.ls	450184 <_obstack_memory_used@@Base+0xefe8>  // b.plast
  44f8d4:	cbz	x20, 44f910 <_obstack_memory_used@@Base+0xe774>
  44f8d8:	cmp	x0, #0x1
  44f8dc:	b.ls	44f908 <_obstack_memory_used@@Base+0xe76c>  // b.plast
  44f8e0:	sxtw	x21, w21
  44f8e4:	sub	x21, x21, #0x1
  44f8e8:	ldr	w0, [sp, #128]
  44f8ec:	cmp	w0, #0x30
  44f8f0:	b.eq	44f918 <_obstack_memory_used@@Base+0xe77c>  // b.none
  44f8f4:	mov	x2, x21
  44f8f8:	mov	w1, #0x20                  	// #32
  44f8fc:	mov	x0, x20
  44f900:	bl	404420 <memset@plt>
  44f904:	add	x20, x20, x21
  44f908:	mov	w0, #0xa                   	// #10
  44f90c:	strb	w0, [x20], #1
  44f910:	add	x19, x19, x27
  44f914:	b	44ed8c <_obstack_memory_used@@Base+0xdbf0>
  44f918:	mov	x2, x21
  44f91c:	mov	w1, #0x30                  	// #48
  44f920:	mov	x0, x20
  44f924:	bl	404420 <memset@plt>
  44f928:	add	x20, x20, x21
  44f92c:	b	44f908 <_obstack_memory_used@@Base+0xe76c>
  44f930:	mov	w0, #0x1                   	// #1
  44f934:	str	w0, [sp, #152]
  44f938:	b	44ef04 <_obstack_memory_used@@Base+0xdd68>
  44f93c:	mov	x24, x27
  44f940:	mov	w28, #0x0                   	// #0
  44f944:	mov	w0, #0x1                   	// #1
  44f948:	str	w0, [sp, #152]
  44f94c:	b	44ef04 <_obstack_memory_used@@Base+0xdd68>
  44f950:	mov	x24, x27
  44f954:	mov	w3, #0x0                   	// #0
  44f958:	ldr	w0, [x23, #16]
  44f95c:	mov	w1, #0x71                  	// #113
  44f960:	mov	w28, #0x1                   	// #1
  44f964:	cmp	w3, #0x4f
  44f968:	b.eq	44f3ec <_obstack_memory_used@@Base+0xe250>  // b.none
  44f96c:	mov	w2, #0xb                   	// #11
  44f970:	mul	w2, w0, w2
  44f974:	asr	w2, w2, #5
  44f978:	add	w2, w2, w28
  44f97c:	mov	w8, #0x0                   	// #0
  44f980:	mov	w7, #0x0                   	// #0
  44f984:	mov	w5, #0x0                   	// #0
  44f988:	b	44fe94 <_obstack_memory_used@@Base+0xecf8>
  44f98c:	mov	x24, x27
  44f990:	mov	w3, #0x0                   	// #0
  44f994:	cmp	w3, #0x45
  44f998:	b.eq	4500a4 <_obstack_memory_used@@Base+0xef08>  // b.none
  44f99c:	ldr	w2, [x23]
  44f9a0:	mov	w28, #0x2                   	// #2
  44f9a4:	b	44f3d0 <_obstack_memory_used@@Base+0xe234>
  44f9a8:	mov	x24, x27
  44f9ac:	ldp	x0, x1, [x23]
  44f9b0:	stp	x0, x1, [sp, #208]
  44f9b4:	ldp	x0, x1, [x23, #16]
  44f9b8:	stp	x0, x1, [sp, #224]
  44f9bc:	ldp	x0, x1, [x23, #32]
  44f9c0:	stp	x0, x1, [sp, #240]
  44f9c4:	ldr	x0, [x23, #48]
  44f9c8:	str	x0, [sp, #256]
  44f9cc:	add	x1, sp, #0xd0
  44f9d0:	ldr	x0, [sp, #120]
  44f9d4:	bl	44e11c <_obstack_memory_used@@Base+0xcf80>
  44f9d8:	mov	x4, x0
  44f9dc:	mov	x2, x0
  44f9e0:	add	x27, sp, #0xcf
  44f9e4:	mov	x6, #0x6666666666666666    	// #7378697629483820646
  44f9e8:	movk	x6, #0x6667
  44f9ec:	mov	w5, #0x30                  	// #48
  44f9f0:	smulh	x1, x2, x6
  44f9f4:	asr	x1, x1, #2
  44f9f8:	asr	x3, x2, #63
  44f9fc:	sub	x0, x1, x3
  44fa00:	add	x0, x0, x0, lsl #2
  44fa04:	sub	x0, x2, x0, lsl #1
  44fa08:	sub	w2, w5, w0
  44fa0c:	and	w2, w2, #0xff
  44fa10:	add	w0, w0, #0x30
  44fa14:	and	w0, w0, #0xff
  44fa18:	cmp	x4, #0x0
  44fa1c:	csel	w0, w0, w2, ge  // ge = tcont
  44fa20:	strb	w0, [x27, #-1]!
  44fa24:	subs	x2, x1, x3
  44fa28:	b.ne	44f9f0 <_obstack_memory_used@@Base+0xe854>  // b.any
  44fa2c:	cmp	w21, #0x0
  44fa30:	csinc	w0, w21, wzr, gt
  44fa34:	str	w0, [sp, #104]
  44fa38:	tbz	x4, #63, 44f528 <_obstack_memory_used@@Base+0xe38c>
  44fa3c:	mov	w0, #0x2d                  	// #45
  44fa40:	str	w0, [sp, #152]
  44fa44:	b	4501f0 <_obstack_memory_used@@Base+0xf054>
  44fa48:	mov	x24, x27
  44fa4c:	mov	w28, #0x0                   	// #0
  44fa50:	cmp	w28, #0x4f
  44fa54:	b.eq	4500a4 <_obstack_memory_used@@Base+0xef08>  // b.none
  44fa58:	mov	w1, #0x58                  	// #88
  44fa5c:	str	wzr, [sp, #152]
  44fa60:	b	44ef28 <_obstack_memory_used@@Base+0xdd8c>
  44fa64:	mov	x24, x27
  44fa68:	cmp	w21, #0x0
  44fa6c:	csel	w0, w21, wzr, ge  // ge = tcont
  44fa70:	sxtw	x0, w0
  44fa74:	cmp	x0, #0x0
  44fa78:	csinc	x27, x0, xzr, ne  // ne = any
  44fa7c:	sub	x1, x22, x19
  44fa80:	cmp	x1, x27
  44fa84:	b.ls	450184 <_obstack_memory_used@@Base+0xefe8>  // b.plast
  44fa88:	cbz	x20, 44fac4 <_obstack_memory_used@@Base+0xe928>
  44fa8c:	cmp	x0, #0x1
  44fa90:	b.ls	44fabc <_obstack_memory_used@@Base+0xe920>  // b.plast
  44fa94:	sxtw	x21, w21
  44fa98:	sub	x21, x21, #0x1
  44fa9c:	ldr	w0, [sp, #128]
  44faa0:	cmp	w0, #0x30
  44faa4:	b.eq	44facc <_obstack_memory_used@@Base+0xe930>  // b.none
  44faa8:	mov	x2, x21
  44faac:	mov	w1, #0x20                  	// #32
  44fab0:	mov	x0, x20
  44fab4:	bl	404420 <memset@plt>
  44fab8:	add	x20, x20, x21
  44fabc:	mov	w0, #0x9                   	// #9
  44fac0:	strb	w0, [x20], #1
  44fac4:	add	x19, x19, x27
  44fac8:	b	44ed8c <_obstack_memory_used@@Base+0xdbf0>
  44facc:	mov	x2, x21
  44fad0:	mov	w1, #0x30                  	// #48
  44fad4:	mov	x0, x20
  44fad8:	bl	404420 <memset@plt>
  44fadc:	add	x20, x20, x21
  44fae0:	b	44fabc <_obstack_memory_used@@Base+0xe920>
  44fae4:	mov	x24, x27
  44fae8:	mov	w3, #0x0                   	// #0
  44faec:	ldr	w0, [x23, #24]
  44faf0:	add	w0, w0, #0x6
  44faf4:	mov	w2, #0x2493                	// #9363
  44faf8:	movk	w2, #0x9249, lsl #16
  44fafc:	smull	x2, w0, w2
  44fb00:	lsr	x2, x2, #32
  44fb04:	add	w2, w0, w2
  44fb08:	asr	w2, w2, #2
  44fb0c:	sub	w2, w2, w0, asr #31
  44fb10:	lsl	w4, w2, #3
  44fb14:	sub	w2, w4, w2
  44fb18:	sub	w2, w0, w2
  44fb1c:	add	w2, w2, #0x1
  44fb20:	mov	w28, #0x1                   	// #1
  44fb24:	b	44f3d0 <_obstack_memory_used@@Base+0xe234>
  44fb28:	mov	x24, x27
  44fb2c:	mov	w3, #0x0                   	// #0
  44fb30:	cmp	w3, #0x45
  44fb34:	b.eq	4500a4 <_obstack_memory_used@@Base+0xef08>  // b.none
  44fb38:	ldr	w2, [x23, #28]
  44fb3c:	ldr	w0, [x23, #24]
  44fb40:	sub	w2, w2, w0
  44fb44:	add	w2, w2, #0x7
  44fb48:	mov	w0, #0x2493                	// #9363
  44fb4c:	movk	w0, #0x9249, lsl #16
  44fb50:	smull	x0, w2, w0
  44fb54:	lsr	x0, x0, #32
  44fb58:	add	w0, w2, w0
  44fb5c:	asr	w0, w0, #2
  44fb60:	sub	w2, w0, w2, asr #31
  44fb64:	mov	w28, #0x2                   	// #2
  44fb68:	b	44f3d0 <_obstack_memory_used@@Base+0xe234>
  44fb6c:	mov	x27, x24
  44fb70:	b	44fb78 <_obstack_memory_used@@Base+0xe9dc>
  44fb74:	mov	w3, #0x0                   	// #0
  44fb78:	cmp	w3, #0x45
  44fb7c:	b.eq	450080 <_obstack_memory_used@@Base+0xeee4>  // b.none
  44fb80:	ldr	w6, [x23, #20]
  44fb84:	cmp	w6, #0x0
  44fb88:	mov	w5, #0x12c                 	// #300
  44fb8c:	mov	w0, #0xffffff9c            	// #-100
  44fb90:	csel	w5, w5, w0, lt  // lt = tstop
  44fb94:	add	w5, w6, w5
  44fb98:	ldr	w9, [x23, #28]
  44fb9c:	ldr	w7, [x23, #24]
  44fba0:	sub	w2, w9, w7
  44fba4:	add	w2, w2, #0x17e
  44fba8:	mov	w0, #0x2493                	// #9363
  44fbac:	movk	w0, #0x9249, lsl #16
  44fbb0:	smull	x0, w2, w0
  44fbb4:	lsr	x0, x0, #32
  44fbb8:	add	w0, w2, w0
  44fbbc:	asr	w0, w0, #2
  44fbc0:	sub	w0, w0, w2, asr #31
  44fbc4:	lsl	w8, w0, #3
  44fbc8:	sub	w8, w8, w0
  44fbcc:	sub	w2, w2, w8
  44fbd0:	sub	w2, w9, w2
  44fbd4:	adds	w2, w2, #0x3
  44fbd8:	b.mi	44fce0 <_obstack_memory_used@@Base+0xeb44>  // b.first
  44fbdc:	mov	w0, #0x0                   	// #0
  44fbe0:	tst	x5, #0x3
  44fbe4:	b.ne	44fc30 <_obstack_memory_used@@Base+0xea94>  // b.any
  44fbe8:	mov	w8, #0x851f                	// #34079
  44fbec:	movk	w8, #0x51eb, lsl #16
  44fbf0:	smull	x8, w5, w8
  44fbf4:	asr	x8, x8, #37
  44fbf8:	sub	w8, w8, w5, asr #31
  44fbfc:	mov	w0, #0x64                  	// #100
  44fc00:	msub	w8, w8, w0, w5
  44fc04:	mov	w0, #0x1                   	// #1
  44fc08:	cbnz	w8, 44fc30 <_obstack_memory_used@@Base+0xea94>
  44fc0c:	mov	w0, #0x851f                	// #34079
  44fc10:	movk	w0, #0x51eb, lsl #16
  44fc14:	smull	x0, w5, w0
  44fc18:	asr	x0, x0, #39
  44fc1c:	sub	w0, w0, w5, asr #31
  44fc20:	mov	w8, #0x190                 	// #400
  44fc24:	msub	w5, w0, w8, w5
  44fc28:	cmp	w5, #0x0
  44fc2c:	cset	w0, eq  // eq = none
  44fc30:	add	w0, w0, #0x16d
  44fc34:	sub	w0, w9, w0
  44fc38:	sub	w5, w0, w7
  44fc3c:	add	w5, w5, #0x17e
  44fc40:	mov	w7, #0x2493                	// #9363
  44fc44:	movk	w7, #0x9249, lsl #16
  44fc48:	smull	x7, w5, w7
  44fc4c:	lsr	x7, x7, #32
  44fc50:	add	w7, w5, w7
  44fc54:	asr	w7, w7, #2
  44fc58:	sub	w7, w7, w5, asr #31
  44fc5c:	lsl	w8, w7, #3
  44fc60:	sub	w7, w8, w7
  44fc64:	sub	w5, w5, w7
  44fc68:	sub	w0, w0, w5
  44fc6c:	adds	w0, w0, #0x3
  44fc70:	csel	w2, w2, w0, mi  // mi = first
  44fc74:	cmp	w0, #0x0
  44fc78:	cset	w7, ge  // ge = tcont
  44fc7c:	cmp	w4, #0x47
  44fc80:	b.eq	44fd7c <_obstack_memory_used@@Base+0xebe0>  // b.none
  44fc84:	cmp	w4, #0x67
  44fc88:	b.ne	44fda8 <_obstack_memory_used@@Base+0xec0c>  // b.any
  44fc8c:	mov	w0, #0x851f                	// #34079
  44fc90:	movk	w0, #0x51eb, lsl #16
  44fc94:	smull	x4, w6, w0
  44fc98:	asr	x4, x4, #37
  44fc9c:	sub	w4, w4, w6, asr #31
  44fca0:	mov	w5, #0x64                  	// #100
  44fca4:	msub	w4, w4, w5, w6
  44fca8:	add	w4, w4, w7
  44fcac:	smull	x2, w4, w0
  44fcb0:	asr	x2, x2, #37
  44fcb4:	sub	w2, w2, w4, asr #31
  44fcb8:	msub	w2, w2, w5, w4
  44fcbc:	mov	x24, x27
  44fcc0:	mov	w28, #0x2                   	// #2
  44fcc4:	tbz	w2, #31, 44f3d0 <_obstack_memory_used@@Base+0xe234>
  44fcc8:	mov	w0, #0xfffff894            	// #-1900
  44fccc:	sub	w7, w0, w7
  44fcd0:	cmp	w6, w7
  44fcd4:	b.ge	44fd70 <_obstack_memory_used@@Base+0xebd4>  // b.tcont
  44fcd8:	neg	w2, w2
  44fcdc:	b	44f3d0 <_obstack_memory_used@@Base+0xe234>
  44fce0:	sub	w5, w5, #0x1
  44fce4:	mov	w0, #0x0                   	// #0
  44fce8:	tst	x5, #0x3
  44fcec:	b.ne	44fd28 <_obstack_memory_used@@Base+0xeb8c>  // b.any
  44fcf0:	mov	w2, #0x851f                	// #34079
  44fcf4:	movk	w2, #0x51eb, lsl #16
  44fcf8:	smull	x2, w5, w2
  44fcfc:	asr	x2, x2, #37
  44fd00:	sub	w2, w2, w5, asr #31
  44fd04:	mov	w0, #0x64                  	// #100
  44fd08:	msub	w2, w2, w0, w5
  44fd0c:	mov	w0, #0x1                   	// #1
  44fd10:	cbnz	w2, 44fd28 <_obstack_memory_used@@Base+0xeb8c>
  44fd14:	mov	w2, #0x190                 	// #400
  44fd18:	sdiv	w0, w5, w2
  44fd1c:	msub	w5, w0, w2, w5
  44fd20:	cmp	w5, #0x0
  44fd24:	cset	w0, eq  // eq = none
  44fd28:	add	w0, w0, #0x16d
  44fd2c:	add	w9, w0, w9
  44fd30:	sub	w2, w9, w7
  44fd34:	add	w2, w2, #0x17e
  44fd38:	mov	w0, #0x2493                	// #9363
  44fd3c:	movk	w0, #0x9249, lsl #16
  44fd40:	smull	x0, w2, w0
  44fd44:	lsr	x0, x0, #32
  44fd48:	add	w0, w2, w0
  44fd4c:	asr	w0, w0, #2
  44fd50:	sub	w0, w0, w2, asr #31
  44fd54:	lsl	w5, w0, #3
  44fd58:	sub	w0, w5, w0
  44fd5c:	sub	w2, w2, w0
  44fd60:	sub	w2, w9, w2
  44fd64:	add	w2, w2, #0x3
  44fd68:	mov	w7, #0xffffffff            	// #-1
  44fd6c:	b	44fc7c <_obstack_memory_used@@Base+0xeae0>
  44fd70:	add	w2, w2, #0x64
  44fd74:	mov	w28, #0x2                   	// #2
  44fd78:	b	44f3d0 <_obstack_memory_used@@Base+0xe234>
  44fd7c:	mov	w0, #0xfffff894            	// #-1900
  44fd80:	sub	w0, w0, w7
  44fd84:	cmp	w6, w0
  44fd88:	cset	w5, lt  // lt = tstop
  44fd8c:	add	w2, w6, #0x76c
  44fd90:	add	w2, w2, w7
  44fd94:	mov	x24, x27
  44fd98:	mov	w8, #0x0                   	// #0
  44fd9c:	mov	w7, #0x0                   	// #0
  44fda0:	mov	w28, #0x4                   	// #4
  44fda4:	b	44f3dc <_obstack_memory_used@@Base+0xe240>
  44fda8:	mov	w0, #0x2493                	// #9363
  44fdac:	movk	w0, #0x9249, lsl #16
  44fdb0:	smull	x0, w2, w0
  44fdb4:	lsr	x0, x0, #32
  44fdb8:	add	w0, w2, w0
  44fdbc:	asr	w0, w0, #2
  44fdc0:	sub	w2, w0, w2, asr #31
  44fdc4:	add	w2, w2, #0x1
  44fdc8:	mov	x24, x27
  44fdcc:	mov	w28, #0x2                   	// #2
  44fdd0:	b	44f3d0 <_obstack_memory_used@@Base+0xe234>
  44fdd4:	mov	x24, x27
  44fdd8:	mov	w3, #0x0                   	// #0
  44fddc:	cmp	w3, #0x45
  44fde0:	b.eq	4500a4 <_obstack_memory_used@@Base+0xef08>  // b.none
  44fde4:	ldr	w4, [x23, #24]
  44fde8:	add	w4, w4, #0x6
  44fdec:	mov	w0, #0x2493                	// #9363
  44fdf0:	movk	w0, #0x9249, lsl #16
  44fdf4:	smull	x2, w4, w0
  44fdf8:	lsr	x2, x2, #32
  44fdfc:	add	w2, w4, w2
  44fe00:	asr	w2, w2, #2
  44fe04:	sub	w2, w2, w4, asr #31
  44fe08:	lsl	w5, w2, #3
  44fe0c:	sub	w2, w5, w2
  44fe10:	sub	w4, w4, w2
  44fe14:	ldr	w2, [x23, #28]
  44fe18:	sub	w2, w2, w4
  44fe1c:	add	w2, w2, #0x7
  44fe20:	smull	x0, w2, w0
  44fe24:	lsr	x0, x0, #32
  44fe28:	add	w0, w2, w0
  44fe2c:	asr	w0, w0, #2
  44fe30:	sub	w2, w0, w2, asr #31
  44fe34:	mov	w28, #0x2                   	// #2
  44fe38:	b	44f3d0 <_obstack_memory_used@@Base+0xe234>
  44fe3c:	mov	x24, x27
  44fe40:	mov	w3, #0x0                   	// #0
  44fe44:	cmp	w3, #0x45
  44fe48:	b.eq	4500a4 <_obstack_memory_used@@Base+0xef08>  // b.none
  44fe4c:	ldr	w2, [x23, #24]
  44fe50:	mov	w28, #0x1                   	// #1
  44fe54:	b	44f3d0 <_obstack_memory_used@@Base+0xe234>
  44fe58:	mov	x24, x27
  44fe5c:	mov	w3, #0x0                   	// #0
  44fe60:	cmp	w3, #0x45
  44fe64:	b.eq	4501d0 <_obstack_memory_used@@Base+0xf034>  // b.none
  44fe68:	cmp	w3, #0x4f
  44fe6c:	b.eq	4500a4 <_obstack_memory_used@@Base+0xef08>  // b.none
  44fe70:	ldr	w2, [x23, #20]
  44fe74:	cmn	w2, #0x76c
  44fe78:	cset	w5, lt  // lt = tstop
  44fe7c:	add	w2, w2, #0x76c
  44fe80:	mov	w8, #0x0                   	// #0
  44fe84:	mov	w7, #0x0                   	// #0
  44fe88:	mov	w28, #0x4                   	// #4
  44fe8c:	cmp	w5, #0x0
  44fe90:	cneg	w2, w2, ne  // ne = any
  44fe94:	add	x27, sp, #0xcf
  44fe98:	mov	w6, #0x3a                  	// #58
  44fe9c:	mov	w4, #0xcccd                	// #52429
  44fea0:	movk	w4, #0xcccc, lsl #16
  44fea4:	b	44f4f8 <_obstack_memory_used@@Base+0xe35c>
  44fea8:	mov	x24, x27
  44feac:	mov	w3, #0x0                   	// #0
  44feb0:	cmp	w3, #0x45
  44feb4:	b.eq	4501dc <_obstack_memory_used@@Base+0xf040>  // b.none
  44feb8:	ldr	w0, [x23, #20]
  44febc:	mov	w2, #0x851f                	// #34079
  44fec0:	movk	w2, #0x51eb, lsl #16
  44fec4:	smull	x2, w0, w2
  44fec8:	asr	x2, x2, #37
  44fecc:	sub	w2, w2, w0, asr #31
  44fed0:	mov	w4, #0x64                  	// #100
  44fed4:	msub	w2, w2, w4, w0
  44fed8:	mov	w28, #0x2                   	// #2
  44fedc:	tbz	w2, #31, 44f3d0 <_obstack_memory_used@@Base+0xe234>
  44fee0:	cmn	w0, #0x76c
  44fee4:	b.ge	44fef0 <_obstack_memory_used@@Base+0xed54>  // b.tcont
  44fee8:	neg	w2, w2
  44feec:	b	44f3d0 <_obstack_memory_used@@Base+0xe234>
  44fef0:	add	w2, w2, #0x64
  44fef4:	mov	w28, #0x2                   	// #2
  44fef8:	b	44f3d0 <_obstack_memory_used@@Base+0xe234>
  44fefc:	mov	x24, x27
  44ff00:	ldr	w0, [sp, #104]
  44ff04:	cmp	w0, #0x0
  44ff08:	ldr	w0, [sp, #96]
  44ff0c:	csel	w0, w0, wzr, eq  // eq = none
  44ff10:	str	w0, [sp, #96]
  44ff14:	mov	x0, x26
  44ff18:	bl	403ff0 <strlen@plt>
  44ff1c:	mov	x27, x0
  44ff20:	cmp	w21, #0x0
  44ff24:	csel	w0, w21, wzr, ge  // ge = tcont
  44ff28:	sxtw	x0, w0
  44ff2c:	cmp	x27, x0
  44ff30:	csel	x28, x27, x0, cs  // cs = hs, nlast
  44ff34:	sub	x1, x22, x19
  44ff38:	cmp	x1, x28
  44ff3c:	b.ls	450184 <_obstack_memory_used@@Base+0xefe8>  // b.plast
  44ff40:	cbz	x20, 44ff98 <_obstack_memory_used@@Base+0xedfc>
  44ff44:	cmp	x27, x0
  44ff48:	b.cs	44ff74 <_obstack_memory_used@@Base+0xedd8>  // b.hs, b.nlast
  44ff4c:	sxtw	x21, w21
  44ff50:	sub	x21, x21, x27
  44ff54:	ldr	w0, [sp, #128]
  44ff58:	cmp	w0, #0x30
  44ff5c:	b.eq	44ffa0 <_obstack_memory_used@@Base+0xee04>  // b.none
  44ff60:	mov	x2, x21
  44ff64:	mov	w1, #0x20                  	// #32
  44ff68:	mov	x0, x20
  44ff6c:	bl	404420 <memset@plt>
  44ff70:	add	x20, x20, x21
  44ff74:	ldr	w0, [sp, #104]
  44ff78:	cbnz	w0, 44ffb8 <_obstack_memory_used@@Base+0xee1c>
  44ff7c:	ldr	w0, [sp, #96]
  44ff80:	cbz	w0, 44ffcc <_obstack_memory_used@@Base+0xee30>
  44ff84:	mov	x2, x27
  44ff88:	mov	x1, x26
  44ff8c:	mov	x0, x20
  44ff90:	bl	44ec98 <_obstack_memory_used@@Base+0xdafc>
  44ff94:	add	x20, x20, x27
  44ff98:	add	x19, x19, x28
  44ff9c:	b	44ed8c <_obstack_memory_used@@Base+0xdbf0>
  44ffa0:	mov	x2, x21
  44ffa4:	mov	w1, #0x30                  	// #48
  44ffa8:	mov	x0, x20
  44ffac:	bl	404420 <memset@plt>
  44ffb0:	add	x20, x20, x21
  44ffb4:	b	44ff74 <_obstack_memory_used@@Base+0xedd8>
  44ffb8:	mov	x2, x27
  44ffbc:	mov	x1, x26
  44ffc0:	mov	x0, x20
  44ffc4:	bl	44ec44 <_obstack_memory_used@@Base+0xdaa8>
  44ffc8:	b	44ff94 <_obstack_memory_used@@Base+0xedf8>
  44ffcc:	mov	x2, x27
  44ffd0:	mov	x1, x26
  44ffd4:	mov	x0, x20
  44ffd8:	bl	403f70 <memcpy@plt>
  44ffdc:	b	44ff94 <_obstack_memory_used@@Base+0xedf8>
  44ffe0:	mov	x7, #0x1                   	// #1
  44ffe4:	add	x7, x7, #0x1
  44ffe8:	add	x24, x27, x7
  44ffec:	ldrb	w0, [x27, x7]
  44fff0:	cmp	w0, #0x3a
  44fff4:	b.ne	44ef6c <_obstack_memory_used@@Base+0xddd0>  // b.any
  44fff8:	b	44ffe4 <_obstack_memory_used@@Base+0xee48>
  44fffc:	mov	x7, #0x0                   	// #0
  450000:	b	44ef74 <_obstack_memory_used@@Base+0xddd8>
  450004:	mov	x24, x27
  450008:	mov	w3, #0x0                   	// #0
  45000c:	mov	x7, #0x0                   	// #0
  450010:	b	44ef74 <_obstack_memory_used@@Base+0xddd8>
  450014:	mov	x27, x24
  450018:	cmp	x7, #0x3
  45001c:	b.ne	450080 <_obstack_memory_used@@Base+0xeee4>  // b.any
  450020:	cbnz	w0, 45004c <_obstack_memory_used@@Base+0xeeb0>
  450024:	cbnz	w8, 44f014 <_obstack_memory_used@@Base+0xde78>
  450028:	mov	w7, #0x1                   	// #1
  45002c:	mov	w28, #0x3                   	// #3
  450030:	b	44f3dc <_obstack_memory_used@@Base+0xe240>
  450034:	mov	w0, #0x64                  	// #100
  450038:	madd	w2, w2, w0, w8
  45003c:	mov	w8, #0x0                   	// #0
  450040:	mov	w7, #0x1                   	// #1
  450044:	mov	w28, #0x5                   	// #5
  450048:	b	44f3dc <_obstack_memory_used@@Base+0xe240>
  45004c:	mov	w4, #0x64                  	// #100
  450050:	mul	w8, w8, w4
  450054:	mov	w4, #0x2710                	// #10000
  450058:	madd	w2, w2, w4, w8
  45005c:	add	w2, w2, w0
  450060:	mov	w8, #0x14                  	// #20
  450064:	mov	w7, #0x1                   	// #1
  450068:	mov	w28, #0x9                   	// #9
  45006c:	b	44f3dc <_obstack_memory_used@@Base+0xe240>
  450070:	mov	x27, x24
  450074:	sub	x27, x27, #0x1
  450078:	b	450080 <_obstack_memory_used@@Base+0xeee4>
  45007c:	mov	x27, x24
  450080:	ldrb	w0, [x27]
  450084:	mov	x24, x27
  450088:	cmp	w0, #0x25
  45008c:	b.ne	4500a4 <_obstack_memory_used@@Base+0xef08>  // b.any
  450090:	mov	w28, #0x1                   	// #1
  450094:	b	4500c4 <_obstack_memory_used@@Base+0xef28>
  450098:	mov	x27, x24
  45009c:	b	450080 <_obstack_memory_used@@Base+0xeee4>
  4500a0:	mov	x24, x27
  4500a4:	sub	x1, x24, #0x1
  4500a8:	mov	x0, x1
  4500ac:	add	w1, w1, #0x2
  4500b0:	sub	w28, w1, w0
  4500b4:	mov	x27, x0
  4500b8:	ldrb	w2, [x0], #-1
  4500bc:	cmp	w2, #0x25
  4500c0:	b.ne	4500b0 <_obstack_memory_used@@Base+0xef14>  // b.any
  4500c4:	sxtw	x28, w28
  4500c8:	cmp	w21, #0x0
  4500cc:	csel	w0, w21, wzr, ge  // ge = tcont
  4500d0:	sxtw	x0, w0
  4500d4:	cmp	x28, x0
  4500d8:	csel	x1, x28, x0, cs  // cs = hs, nlast
  4500dc:	mov	x2, x1
  4500e0:	str	x1, [sp, #104]
  4500e4:	sub	x1, x22, x19
  4500e8:	cmp	x1, x2
  4500ec:	b.ls	450184 <_obstack_memory_used@@Base+0xefe8>  // b.plast
  4500f0:	cbz	x20, 450140 <_obstack_memory_used@@Base+0xefa4>
  4500f4:	cmp	x28, x0
  4500f8:	b.cs	450124 <_obstack_memory_used@@Base+0xef88>  // b.hs, b.nlast
  4500fc:	sxtw	x21, w21
  450100:	sub	x21, x21, x28
  450104:	ldr	w0, [sp, #128]
  450108:	cmp	w0, #0x30
  45010c:	b.eq	450158 <_obstack_memory_used@@Base+0xefbc>  // b.none
  450110:	mov	x2, x21
  450114:	mov	w1, #0x20                  	// #32
  450118:	mov	x0, x20
  45011c:	bl	404420 <memset@plt>
  450120:	add	x20, x20, x21
  450124:	ldr	w0, [sp, #96]
  450128:	cbz	w0, 450170 <_obstack_memory_used@@Base+0xefd4>
  45012c:	mov	x2, x28
  450130:	mov	x1, x27
  450134:	mov	x0, x20
  450138:	bl	44ec98 <_obstack_memory_used@@Base+0xdafc>
  45013c:	add	x20, x20, x28
  450140:	ldr	x0, [sp, #104]
  450144:	add	x19, x19, x0
  450148:	b	44ed8c <_obstack_memory_used@@Base+0xdbf0>
  45014c:	mov	x27, x24
  450150:	mov	w28, #0x1                   	// #1
  450154:	b	4500c4 <_obstack_memory_used@@Base+0xef28>
  450158:	mov	x2, x21
  45015c:	mov	w1, #0x30                  	// #48
  450160:	mov	x0, x20
  450164:	bl	404420 <memset@plt>
  450168:	add	x20, x20, x21
  45016c:	b	450124 <_obstack_memory_used@@Base+0xef88>
  450170:	mov	x2, x28
  450174:	mov	x1, x27
  450178:	mov	x0, x20
  45017c:	bl	403f70 <memcpy@plt>
  450180:	b	45013c <_obstack_memory_used@@Base+0xefa0>
  450184:	mov	x19, #0x0                   	// #0
  450188:	mov	x0, x19
  45018c:	ldp	x19, x20, [sp, #16]
  450190:	ldp	x21, x22, [sp, #32]
  450194:	ldp	x23, x24, [sp, #48]
  450198:	ldp	x25, x26, [sp, #64]
  45019c:	ldp	x27, x28, [sp, #80]
  4501a0:	ldp	x29, x30, [sp]
  4501a4:	add	sp, sp, #0x4d0
  4501a8:	ret
  4501ac:	mov	x19, #0x0                   	// #0
  4501b0:	cmp	x20, #0x0
  4501b4:	ccmp	x22, #0x0, #0x4, ne  // ne = any
  4501b8:	b.eq	450188 <_obstack_memory_used@@Base+0xefec>  // b.none
  4501bc:	strb	wzr, [x20]
  4501c0:	b	450188 <_obstack_memory_used@@Base+0xefec>
  4501c4:	mov	w1, #0x43                  	// #67
  4501c8:	mov	w28, #0x0                   	// #0
  4501cc:	b	44f3ec <_obstack_memory_used@@Base+0xe250>
  4501d0:	mov	w1, #0x59                  	// #89
  4501d4:	mov	w28, #0x0                   	// #0
  4501d8:	b	44f3ec <_obstack_memory_used@@Base+0xe250>
  4501dc:	mov	w1, #0x79                  	// #121
  4501e0:	mov	w28, #0x0                   	// #0
  4501e4:	b	44f3ec <_obstack_memory_used@@Base+0xe250>
  4501e8:	mov	w0, #0x2d                  	// #45
  4501ec:	str	w0, [sp, #152]
  4501f0:	ldr	w0, [sp, #128]
  4501f4:	cmp	w0, #0x2d
  4501f8:	b.eq	44f558 <_obstack_memory_used@@Base+0xe3bc>  // b.none
  4501fc:	ldr	w0, [sp, #152]
  450200:	cmp	w0, #0x0
  450204:	cset	w1, ne  // ne = any
  450208:	str	w1, [sp, #160]
  45020c:	ldr	x0, [sp, #112]
  450210:	sub	x0, x0, x27
  450214:	ldr	w2, [sp, #104]
  450218:	sub	w0, w2, w0
  45021c:	sub	w28, w0, w1
  450220:	cmp	w28, #0x0
  450224:	b.le	44f694 <_obstack_memory_used@@Base+0xe4f8>
  450228:	ldr	w0, [sp, #128]
  45022c:	cmp	w0, #0x5f
  450230:	b.eq	44f5c0 <_obstack_memory_used@@Base+0xe424>  // b.none
  450234:	sub	x1, x22, x19
  450238:	ldr	w2, [sp, #104]
  45023c:	cmp	x1, w2, sxtw
  450240:	b.ls	450184 <_obstack_memory_used@@Base+0xefe8>  // b.plast
  450244:	ldr	w0, [sp, #160]
  450248:	cbz	w0, 4502b4 <_obstack_memory_used@@Base+0xf118>
  45024c:	cmp	w21, #0x0
  450250:	csel	w0, w21, wzr, ge  // ge = tcont
  450254:	sxtw	x0, w0
  450258:	cmp	x0, #0x0
  45025c:	csinc	x3, x0, xzr, ne  // ne = any
  450260:	str	x3, [sp, #160]
  450264:	cmp	x1, x3
  450268:	b.ls	450184 <_obstack_memory_used@@Base+0xefe8>  // b.plast
  45026c:	cbz	x20, 4502ac <_obstack_memory_used@@Base+0xf110>
  450270:	cmp	w2, #0x0
  450274:	ccmp	x0, #0x1, #0x0, eq  // eq = none
  450278:	b.ls	4502a4 <_obstack_memory_used@@Base+0xf108>  // b.plast
  45027c:	sxtw	x21, w21
  450280:	sub	x21, x21, #0x1
  450284:	ldr	w0, [sp, #128]
  450288:	cmp	w0, #0x30
  45028c:	b.eq	44f67c <_obstack_memory_used@@Base+0xe4e0>  // b.none
  450290:	mov	x2, x21
  450294:	mov	w1, #0x20                  	// #32
  450298:	mov	x0, x20
  45029c:	bl	404420 <memset@plt>
  4502a0:	add	x20, x20, x21
  4502a4:	ldrb	w0, [sp, #152]
  4502a8:	strb	w0, [x20], #1
  4502ac:	ldr	x0, [sp, #160]
  4502b0:	add	x19, x19, x0
  4502b4:	cbz	x20, 4502d0 <_obstack_memory_used@@Base+0xf134>
  4502b8:	sxtw	x21, w28
  4502bc:	mov	x2, x21
  4502c0:	mov	w1, #0x30                  	// #48
  4502c4:	mov	x0, x20
  4502c8:	bl	404420 <memset@plt>
  4502cc:	add	x20, x20, x21
  4502d0:	add	x19, x19, w28, sxtw
  4502d4:	mov	w21, #0x0                   	// #0
  4502d8:	ldr	x0, [sp, #112]
  4502dc:	sub	x28, x0, x27
  4502e0:	cmp	w21, #0x0
  4502e4:	csel	w0, w21, wzr, ge  // ge = tcont
  4502e8:	sxtw	x0, w0
  4502ec:	cmp	x28, x0
  4502f0:	csel	x1, x28, x0, cs  // cs = hs, nlast
  4502f4:	mov	x2, x1
  4502f8:	str	x1, [sp, #152]
  4502fc:	sub	x1, x22, x19
  450300:	cmp	x1, x2
  450304:	b.ls	450184 <_obstack_memory_used@@Base+0xefe8>  // b.plast
  450308:	cbz	x20, 450360 <_obstack_memory_used@@Base+0xf1c4>
  45030c:	ldr	w1, [sp, #104]
  450310:	cmp	w1, #0x0
  450314:	ccmp	x28, x0, #0x2, eq  // eq = none
  450318:	b.cs	450344 <_obstack_memory_used@@Base+0xf1a8>  // b.hs, b.nlast
  45031c:	sxtw	x21, w21
  450320:	sub	x21, x21, x28
  450324:	ldr	w0, [sp, #128]
  450328:	cmp	w0, #0x30
  45032c:	b.eq	44f724 <_obstack_memory_used@@Base+0xe588>  // b.none
  450330:	mov	x2, x21
  450334:	mov	w1, #0x20                  	// #32
  450338:	mov	x0, x20
  45033c:	bl	404420 <memset@plt>
  450340:	add	x20, x20, x21
  450344:	ldr	w0, [sp, #96]
  450348:	cbz	w0, 44f73c <_obstack_memory_used@@Base+0xe5a0>
  45034c:	mov	x2, x28
  450350:	mov	x1, x27
  450354:	mov	x0, x20
  450358:	bl	44ec98 <_obstack_memory_used@@Base+0xdafc>
  45035c:	add	x20, x20, x28
  450360:	ldr	x0, [sp, #152]
  450364:	add	x19, x19, x0
  450368:	b	44ed8c <_obstack_memory_used@@Base+0xdbf0>
  45036c:	stp	x29, x30, [sp, #-32]!
  450370:	mov	x29, sp
  450374:	strb	wzr, [sp, #31]
  450378:	mov	w7, w5
  45037c:	mov	x6, x4
  450380:	add	x5, sp, #0x1f
  450384:	mov	w4, #0x0                   	// #0
  450388:	bl	44ecec <_obstack_memory_used@@Base+0xdb50>
  45038c:	ldp	x29, x30, [sp], #32
  450390:	ret
  450394:	stp	x29, x30, [sp, #-64]!
  450398:	mov	x29, sp
  45039c:	str	x3, [sp, #56]
  4503a0:	mov	w3, #0x0                   	// #0
  4503a4:	tbnz	w2, #6, 4503b8 <_obstack_memory_used@@Base+0xf21c>
  4503a8:	bl	404ab0 <openat@plt>
  4503ac:	bl	4503e4 <_obstack_memory_used@@Base+0xf248>
  4503b0:	ldp	x29, x30, [sp], #64
  4503b4:	ret
  4503b8:	add	x3, sp, #0x40
  4503bc:	str	x3, [sp, #16]
  4503c0:	str	x3, [sp, #24]
  4503c4:	add	x3, sp, #0x30
  4503c8:	str	x3, [sp, #32]
  4503cc:	str	wzr, [sp, #44]
  4503d0:	str	wzr, [sp, #40]
  4503d4:	ldr	x3, [sp, #24]
  4503d8:	sub	x3, x3, #0x8
  4503dc:	ldr	w3, [x3]
  4503e0:	b	4503a8 <_obstack_memory_used@@Base+0xf20c>
  4503e4:	stp	x29, x30, [sp, #-48]!
  4503e8:	mov	x29, sp
  4503ec:	stp	x19, x20, [sp, #16]
  4503f0:	mov	w19, w0
  4503f4:	cmp	w0, #0x2
  4503f8:	b.ls	45040c <_obstack_memory_used@@Base+0xf270>  // b.plast
  4503fc:	mov	w0, w19
  450400:	ldp	x19, x20, [sp, #16]
  450404:	ldp	x29, x30, [sp], #48
  450408:	ret
  45040c:	stp	x21, x22, [sp, #32]
  450410:	bl	451340 <_obstack_memory_used@@Base+0x101a4>
  450414:	mov	w21, w0
  450418:	bl	404ad0 <__errno_location@plt>
  45041c:	mov	x20, x0
  450420:	ldr	w22, [x0]
  450424:	mov	w0, w19
  450428:	bl	4045d0 <close@plt>
  45042c:	str	w22, [x20]
  450430:	mov	w19, w21
  450434:	ldp	x21, x22, [sp, #32]
  450438:	b	4503fc <_obstack_memory_used@@Base+0xf260>
  45043c:	stp	x29, x30, [sp, #-112]!
  450440:	mov	x29, sp
  450444:	stp	x19, x20, [sp, #16]
  450448:	stp	x21, x22, [sp, #32]
  45044c:	stp	x23, x24, [sp, #48]
  450450:	stp	x25, x26, [sp, #64]
  450454:	mov	x21, x0
  450458:	mov	x24, x1
  45045c:	ldr	x22, [x1]
  450460:	ldr	w23, [x1, #24]
  450464:	ldp	x0, x1, [x1]
  450468:	stp	x0, x1, [sp, #80]
  45046c:	ldp	x0, x1, [x24, #16]
  450470:	stp	x0, x1, [sp, #96]
  450474:	cbz	x21, 450564 <_obstack_memory_used@@Base+0xf3c8>
  450478:	ldr	x26, [sp, #88]
  45047c:	mov	x20, x21
  450480:	mov	x19, #0x0                   	// #0
  450484:	mov	x25, #0xffffffffffffffff    	// #-1
  450488:	b	4504c0 <_obstack_memory_used@@Base+0xf324>
  45048c:	add	w2, w1, #0x8
  450490:	str	w2, [sp, #104]
  450494:	cmp	w2, #0x0
  450498:	b.le	4504dc <_obstack_memory_used@@Base+0xf340>
  45049c:	add	x1, x0, #0xf
  4504a0:	and	x1, x1, #0xfffffffffffffff8
  4504a4:	str	x1, [sp, #80]
  4504a8:	ldr	x0, [x0]
  4504ac:	bl	403ff0 <strlen@plt>
  4504b0:	adds	x0, x0, x19
  4504b4:	csel	x19, x0, x25, cc  // cc = lo, ul, last
  4504b8:	subs	x20, x20, #0x1
  4504bc:	b.eq	450594 <_obstack_memory_used@@Base+0xf3f8>  // b.none
  4504c0:	ldr	w1, [sp, #104]
  4504c4:	ldr	x0, [sp, #80]
  4504c8:	tbnz	w1, #31, 45048c <_obstack_memory_used@@Base+0xf2f0>
  4504cc:	add	x1, x0, #0xf
  4504d0:	and	x1, x1, #0xfffffffffffffff8
  4504d4:	str	x1, [sp, #80]
  4504d8:	b	4504a8 <_obstack_memory_used@@Base+0xf30c>
  4504dc:	add	x0, x26, w1, sxtw
  4504e0:	b	4504a8 <_obstack_memory_used@@Base+0xf30c>
  4504e4:	bl	404ad0 <__errno_location@plt>
  4504e8:	mov	w1, #0x4b                  	// #75
  4504ec:	str	w1, [x0]
  4504f0:	mov	x26, #0x0                   	// #0
  4504f4:	b	450578 <_obstack_memory_used@@Base+0xf3dc>
  4504f8:	add	w0, w23, #0x8
  4504fc:	cmp	w0, #0x0
  450500:	b.le	450554 <_obstack_memory_used@@Base+0xf3b8>
  450504:	add	x2, x22, #0xf
  450508:	mov	w23, w0
  45050c:	mov	x1, x22
  450510:	and	x22, x2, #0xfffffffffffffff8
  450514:	ldr	x25, [x1]
  450518:	mov	x0, x25
  45051c:	bl	403ff0 <strlen@plt>
  450520:	mov	x19, x0
  450524:	mov	x2, x0
  450528:	mov	x1, x25
  45052c:	mov	x0, x20
  450530:	bl	403f70 <memcpy@plt>
  450534:	add	x20, x20, x19
  450538:	subs	x21, x21, #0x1
  45053c:	b.eq	450574 <_obstack_memory_used@@Base+0xf3d8>  // b.none
  450540:	tbnz	w23, #31, 4504f8 <_obstack_memory_used@@Base+0xf35c>
  450544:	add	x0, x22, #0xf
  450548:	mov	x1, x22
  45054c:	and	x22, x0, #0xfffffffffffffff8
  450550:	b	450514 <_obstack_memory_used@@Base+0xf378>
  450554:	ldr	x1, [x24, #8]
  450558:	add	x1, x1, w23, sxtw
  45055c:	mov	w23, w0
  450560:	b	450514 <_obstack_memory_used@@Base+0xf378>
  450564:	mov	x0, #0x1                   	// #1
  450568:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  45056c:	mov	x20, x0
  450570:	mov	x26, x0
  450574:	strb	wzr, [x20]
  450578:	mov	x0, x26
  45057c:	ldp	x19, x20, [sp, #16]
  450580:	ldp	x21, x22, [sp, #32]
  450584:	ldp	x23, x24, [sp, #48]
  450588:	ldp	x25, x26, [sp, #64]
  45058c:	ldp	x29, x30, [sp], #112
  450590:	ret
  450594:	mov	x0, #0x7fffffff            	// #2147483647
  450598:	cmp	x19, x0
  45059c:	b.hi	4504e4 <_obstack_memory_used@@Base+0xf348>  // b.pmore
  4505a0:	add	x0, x19, #0x1
  4505a4:	bl	43fef4 <argp_parse@@Base+0xc7b4>
  4505a8:	mov	x26, x0
  4505ac:	mov	x20, x0
  4505b0:	b	450540 <_obstack_memory_used@@Base+0xf3a4>
  4505b4:	stp	x29, x30, [sp, #-96]!
  4505b8:	mov	x29, sp
  4505bc:	mov	x2, x0
  4505c0:	ldrb	w3, [x0]
  4505c4:	mov	x4, x0
  4505c8:	mov	x0, #0x0                   	// #0
  4505cc:	cbz	w3, 4505f0 <_obstack_memory_used@@Base+0xf454>
  4505d0:	cmp	w3, #0x25
  4505d4:	b.ne	45060c <_obstack_memory_used@@Base+0xf470>  // b.any
  4505d8:	ldrb	w3, [x4, #1]
  4505dc:	cmp	w3, #0x73
  4505e0:	b.ne	45060c <_obstack_memory_used@@Base+0xf470>  // b.any
  4505e4:	add	x0, x0, #0x1
  4505e8:	ldrb	w3, [x4, #2]!
  4505ec:	cbnz	w3, 4505d0 <_obstack_memory_used@@Base+0xf434>
  4505f0:	ldp	x2, x3, [x1]
  4505f4:	stp	x2, x3, [sp, #16]
  4505f8:	ldp	x2, x3, [x1, #16]
  4505fc:	stp	x2, x3, [sp, #32]
  450600:	add	x1, sp, #0x10
  450604:	bl	45043c <_obstack_memory_used@@Base+0xf2a0>
  450608:	b	45063c <_obstack_memory_used@@Base+0xf4a0>
  45060c:	ldp	x4, x5, [x1]
  450610:	stp	x4, x5, [sp, #56]
  450614:	ldp	x0, x1, [x1, #16]
  450618:	stp	x0, x1, [sp, #72]
  45061c:	stp	x4, x5, [sp, #16]
  450620:	stp	x0, x1, [sp, #32]
  450624:	add	x3, sp, #0x10
  450628:	mov	w1, #0x1                   	// #1
  45062c:	add	x0, sp, #0x58
  450630:	bl	404350 <__vasprintf_chk@plt>
  450634:	tbnz	w0, #31, 450644 <_obstack_memory_used@@Base+0xf4a8>
  450638:	ldr	x0, [sp, #88]
  45063c:	ldp	x29, x30, [sp], #96
  450640:	ret
  450644:	bl	404ad0 <__errno_location@plt>
  450648:	ldr	w1, [x0]
  45064c:	mov	x0, #0x0                   	// #0
  450650:	cmp	w1, #0xc
  450654:	b.ne	45063c <_obstack_memory_used@@Base+0xf4a0>  // b.any
  450658:	bl	40e5ec <wcrtomb@plt+0x99cc>
  45065c:	ldr	w8, [x1, #44]
  450660:	ldr	w9, [x1, #48]
  450664:	ldr	w10, [x1]
  450668:	cmp	w9, w10
  45066c:	ccmp	w8, w9, #0x0, lt  // lt = tstop
  450670:	b.ge	450720 <_obstack_memory_used@@Base+0xf584>  // b.tcont
  450674:	add	x13, x0, #0x8
  450678:	sxtw	x12, w9
  45067c:	b	4506cc <_obstack_memory_used@@Base+0xf530>
  450680:	cmp	w7, #0x0
  450684:	b.le	4506bc <_obstack_memory_used@@Base+0xf520>
  450688:	add	x4, x0, w8, sxtw #3
  45068c:	sxtw	x3, w7
  450690:	neg	x3, x3, lsl #3
  450694:	add	x3, x3, w10, sxtw #3
  450698:	add	x3, x0, x3
  45069c:	mov	x2, #0x0                   	// #0
  4506a0:	ldr	x5, [x4, x2, lsl #3]
  4506a4:	ldr	x6, [x3, x2, lsl #3]
  4506a8:	str	x6, [x4, x2, lsl #3]
  4506ac:	str	x5, [x3, x2, lsl #3]
  4506b0:	add	x2, x2, #0x1
  4506b4:	cmp	w7, w2
  4506b8:	b.gt	4506a0 <_obstack_memory_used@@Base+0xf504>
  4506bc:	sub	w10, w10, w7
  4506c0:	cmp	w10, w9
  4506c4:	ccmp	w9, w8, #0x4, gt
  4506c8:	b.le	450720 <_obstack_memory_used@@Base+0xf584>
  4506cc:	sub	w11, w10, w9
  4506d0:	sub	w7, w9, w8
  4506d4:	cmp	w11, w7
  4506d8:	b.gt	450680 <_obstack_memory_used@@Base+0xf4e4>
  4506dc:	cmp	w11, #0x0
  4506e0:	b.le	450718 <_obstack_memory_used@@Base+0xf57c>
  4506e4:	sxtw	x3, w8
  4506e8:	add	x2, x0, w8, sxtw #3
  4506ec:	sub	w6, w11, #0x1
  4506f0:	add	x6, x6, x3
  4506f4:	add	x6, x13, x6, lsl #3
  4506f8:	sub	x3, x12, x3
  4506fc:	ldr	x4, [x2]
  450700:	ldr	x5, [x2, x3, lsl #3]
  450704:	str	x5, [x2]
  450708:	str	x4, [x2, x3, lsl #3]
  45070c:	add	x2, x2, #0x8
  450710:	cmp	x2, x6
  450714:	b.ne	4506fc <_obstack_memory_used@@Base+0xf560>  // b.any
  450718:	add	w8, w8, w11
  45071c:	b	4506c0 <_obstack_memory_used@@Base+0xf524>
  450720:	ldr	w3, [x1]
  450724:	ldr	w0, [x1, #48]
  450728:	sub	w2, w3, w0
  45072c:	ldr	w0, [x1, #44]
  450730:	add	w0, w0, w2
  450734:	str	w0, [x1, #44]
  450738:	str	w3, [x1, #48]
  45073c:	ret
  450740:	stp	x29, x30, [sp, #-176]!
  450744:	mov	x29, sp
  450748:	stp	x19, x20, [sp, #16]
  45074c:	stp	x21, x22, [sp, #32]
  450750:	stp	x23, x24, [sp, #48]
  450754:	stp	x25, x26, [sp, #64]
  450758:	stp	x27, x28, [sp, #80]
  45075c:	str	w0, [sp, #156]
  450760:	str	x1, [sp, #128]
  450764:	str	x2, [sp, #144]
  450768:	str	x3, [sp, #104]
  45076c:	str	x4, [sp, #120]
  450770:	str	w5, [sp, #112]
  450774:	mov	x25, x6
  450778:	str	w7, [sp, #116]
  45077c:	ldr	x23, [x6, #32]
  450780:	ldrb	w28, [x23]
  450784:	cmp	w28, #0x3d
  450788:	ccmp	w28, #0x0, #0x4, ne  // ne = any
  45078c:	b.eq	4507c0 <_obstack_memory_used@@Base+0xf624>  // b.none
  450790:	mov	x22, x23
  450794:	ldrb	w0, [x22, #1]!
  450798:	cmp	w0, #0x3d
  45079c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  4507a0:	b.ne	450794 <_obstack_memory_used@@Base+0xf5f8>  // b.any
  4507a4:	sub	x21, x22, x23
  4507a8:	ldr	x19, [sp, #104]
  4507ac:	ldr	x24, [x19]
  4507b0:	cbz	x24, 450c54 <_obstack_memory_used@@Base+0xfab8>
  4507b4:	mov	x26, x24
  4507b8:	mov	w20, #0x0                   	// #0
  4507bc:	b	4507d4 <_obstack_memory_used@@Base+0xf638>
  4507c0:	mov	x22, x23
  4507c4:	b	4507a4 <_obstack_memory_used@@Base+0xf608>
  4507c8:	add	w20, w20, #0x1
  4507cc:	ldr	x26, [x19, #32]!
  4507d0:	cbz	x26, 450c58 <_obstack_memory_used@@Base+0xfabc>
  4507d4:	mov	x2, x21
  4507d8:	mov	x1, x23
  4507dc:	mov	x0, x26
  4507e0:	bl	4043c0 <strncmp@plt>
  4507e4:	cbnz	w0, 4507c8 <_obstack_memory_used@@Base+0xf62c>
  4507e8:	mov	x0, x26
  4507ec:	bl	403ff0 <strlen@plt>
  4507f0:	cmp	x0, x21
  4507f4:	b.ne	4507c8 <_obstack_memory_used@@Base+0xf62c>  // b.any
  4507f8:	cbz	x19, 450c5c <_obstack_memory_used@@Base+0xfac0>
  4507fc:	ldr	w0, [x25]
  450800:	add	w1, w0, #0x1
  450804:	str	w1, [x25]
  450808:	str	xzr, [x25, #32]
  45080c:	ldrb	w2, [x22]
  450810:	cbz	w2, 450ba8 <_obstack_memory_used@@Base+0xfa0c>
  450814:	ldr	w0, [x19, #8]
  450818:	cbz	w0, 450b50 <_obstack_memory_used@@Base+0xf9b4>
  45081c:	add	x22, x22, #0x1
  450820:	str	x22, [x25, #16]
  450824:	ldr	x0, [sp, #120]
  450828:	cbz	x0, 450830 <_obstack_memory_used@@Base+0xf694>
  45082c:	str	w20, [x0]
  450830:	ldr	x0, [x19, #16]
  450834:	cbz	x0, 450c44 <_obstack_memory_used@@Base+0xfaa8>
  450838:	ldr	w1, [x19, #24]
  45083c:	str	w1, [x0]
  450840:	mov	w0, #0x0                   	// #0
  450844:	ldp	x19, x20, [sp, #16]
  450848:	ldp	x21, x22, [sp, #32]
  45084c:	ldp	x23, x24, [sp, #48]
  450850:	ldp	x25, x26, [sp, #64]
  450854:	ldp	x27, x28, [sp, #80]
  450858:	ldp	x29, x30, [sp], #176
  45085c:	ret
  450860:	ldr	x1, [x19, #16]
  450864:	ldr	x0, [x27, #16]
  450868:	cmp	x1, x0
  45086c:	b.ne	450920 <_obstack_memory_used@@Base+0xf784>  // b.any
  450870:	ldr	w1, [x19, #24]
  450874:	ldr	w0, [x27, #24]
  450878:	cmp	w1, w0
  45087c:	b.ne	450920 <_obstack_memory_used@@Base+0xf784>  // b.any
  450880:	b	4508e0 <_obstack_memory_used@@Base+0xf744>
  450884:	ldr	x0, [sp, #168]
  450888:	bl	404310 <malloc@plt>
  45088c:	str	x0, [sp, #136]
  450890:	cbz	x0, 450948 <_obstack_memory_used@@Base+0xf7ac>
  450894:	ldr	x2, [sp, #168]
  450898:	mov	w1, #0x0                   	// #0
  45089c:	ldr	x24, [sp, #136]
  4508a0:	mov	x0, x24
  4508a4:	bl	404420 <memset@plt>
  4508a8:	ldr	w1, [sp, #160]
  4508ac:	mov	w2, #0x1                   	// #1
  4508b0:	strb	w2, [x24, w1, sxtw]
  4508b4:	mov	w0, #0x1                   	// #1
  4508b8:	str	w0, [sp, #164]
  4508bc:	b	450938 <_obstack_memory_used@@Base+0xf79c>
  4508c0:	mov	w0, #0x1                   	// #1
  4508c4:	str	w0, [sp, #152]
  4508c8:	ldr	x0, [sp, #136]
  4508cc:	cbz	x0, 4508e0 <_obstack_memory_used@@Base+0xf744>
  4508d0:	b	450938 <_obstack_memory_used@@Base+0xf79c>
  4508d4:	ldr	w0, [sp, #100]
  4508d8:	str	w0, [sp, #160]
  4508dc:	mov	x19, x27
  4508e0:	ldr	x24, [x27, #32]!
  4508e4:	add	x26, x26, #0x1
  4508e8:	cbz	x24, 450954 <_obstack_memory_used@@Base+0xf7b8>
  4508ec:	str	w26, [sp, #100]
  4508f0:	mov	x2, x21
  4508f4:	mov	x1, x23
  4508f8:	mov	x0, x24
  4508fc:	bl	4043c0 <strncmp@plt>
  450900:	cbnz	w0, 4508e0 <_obstack_memory_used@@Base+0xf744>
  450904:	cbz	x19, 4508d4 <_obstack_memory_used@@Base+0xf738>
  450908:	ldr	w0, [sp, #112]
  45090c:	cbnz	w0, 450920 <_obstack_memory_used@@Base+0xf784>
  450910:	ldr	w1, [x19, #8]
  450914:	ldr	w0, [x27, #8]
  450918:	cmp	w1, w0
  45091c:	b.eq	450860 <_obstack_memory_used@@Base+0xf6c4>  // b.none
  450920:	ldr	w0, [sp, #152]
  450924:	cbnz	w0, 4508e0 <_obstack_memory_used@@Base+0xf744>
  450928:	ldr	w0, [sp, #116]
  45092c:	cbz	w0, 4508c0 <_obstack_memory_used@@Base+0xf724>
  450930:	ldr	x0, [sp, #136]
  450934:	cbz	x0, 450884 <_obstack_memory_used@@Base+0xf6e8>
  450938:	ldr	x0, [sp, #136]
  45093c:	mov	w1, #0x1                   	// #1
  450940:	strb	w1, [x0, x26]
  450944:	b	4508e0 <_obstack_memory_used@@Base+0xf744>
  450948:	mov	w0, #0x1                   	// #1
  45094c:	str	w0, [sp, #152]
  450950:	b	4508e0 <_obstack_memory_used@@Base+0xf744>
  450954:	ldr	x0, [sp, #136]
  450958:	cmp	x0, #0x0
  45095c:	ldr	w0, [sp, #152]
  450960:	ccmp	w0, #0x0, #0x0, eq  // eq = none
  450964:	b.ne	4509c0 <_obstack_memory_used@@Base+0xf824>  // b.any
  450968:	cbnz	x19, 450b48 <_obstack_memory_used@@Base+0xf9ac>
  45096c:	ldr	w0, [sp, #112]
  450970:	cbz	w0, 45099c <_obstack_memory_used@@Base+0xf800>
  450974:	ldrsw	x0, [x25]
  450978:	ldr	x1, [sp, #128]
  45097c:	ldr	x0, [x1, x0, lsl #3]
  450980:	ldrb	w0, [x0, #1]
  450984:	cmp	w0, #0x2d
  450988:	b.eq	45099c <_obstack_memory_used@@Base+0xf800>  // b.none
  45098c:	mov	w1, w28
  450990:	ldr	x0, [sp, #144]
  450994:	bl	404870 <strchr@plt>
  450998:	cbnz	x0, 450c4c <_obstack_memory_used@@Base+0xfab0>
  45099c:	ldr	w0, [sp, #116]
  4509a0:	cbnz	w0, 450b08 <_obstack_memory_used@@Base+0xf96c>
  4509a4:	str	xzr, [x25, #32]
  4509a8:	ldr	w0, [x25]
  4509ac:	add	w0, w0, #0x1
  4509b0:	str	w0, [x25]
  4509b4:	str	wzr, [x25, #8]
  4509b8:	mov	w0, #0x3f                  	// #63
  4509bc:	b	450844 <_obstack_memory_used@@Base+0xf6a8>
  4509c0:	ldr	w0, [sp, #116]
  4509c4:	cbz	w0, 450a0c <_obstack_memory_used@@Base+0xf870>
  4509c8:	ldr	w0, [sp, #152]
  4509cc:	cbz	w0, 450a40 <_obstack_memory_used@@Base+0xf8a4>
  4509d0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4509d4:	ldr	x19, [x0, #1096]
  4509d8:	mov	w2, #0x5                   	// #5
  4509dc:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  4509e0:	add	x1, x1, #0x6e0
  4509e4:	mov	x0, #0x0                   	// #0
  4509e8:	bl	4049c0 <dcgettext@plt>
  4509ec:	ldr	x5, [x25, #32]
  4509f0:	ldr	x4, [sp, #176]
  4509f4:	ldr	x1, [sp, #128]
  4509f8:	ldr	x3, [x1]
  4509fc:	mov	x2, x0
  450a00:	mov	w1, #0x1                   	// #1
  450a04:	mov	x0, x19
  450a08:	bl	404710 <__fprintf_chk@plt>
  450a0c:	ldr	w0, [sp, #164]
  450a10:	cbnz	w0, 450afc <_obstack_memory_used@@Base+0xf960>
  450a14:	ldr	x19, [x25, #32]
  450a18:	mov	x0, x19
  450a1c:	bl	403ff0 <strlen@plt>
  450a20:	add	x19, x19, x0
  450a24:	str	x19, [x25, #32]
  450a28:	ldr	w0, [x25]
  450a2c:	add	w0, w0, #0x1
  450a30:	str	w0, [x25]
  450a34:	str	wzr, [x25, #8]
  450a38:	mov	w0, #0x3f                  	// #63
  450a3c:	b	450844 <_obstack_memory_used@@Base+0xf6a8>
  450a40:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x3ee64>
  450a44:	ldr	x0, [x19, #1096]
  450a48:	bl	404090 <flockfile@plt>
  450a4c:	ldr	x19, [x19, #1096]
  450a50:	mov	w2, #0x5                   	// #5
  450a54:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  450a58:	add	x1, x1, #0x700
  450a5c:	mov	x0, #0x0                   	// #0
  450a60:	bl	4049c0 <dcgettext@plt>
  450a64:	ldr	x5, [x25, #32]
  450a68:	ldr	x4, [sp, #176]
  450a6c:	ldr	x1, [sp, #128]
  450a70:	ldr	x3, [x1]
  450a74:	mov	x2, x0
  450a78:	mov	w1, #0x1                   	// #1
  450a7c:	mov	x0, x19
  450a80:	bl	404710 <__fprintf_chk@plt>
  450a84:	cmp	w20, #0x0
  450a88:	b.le	450ae0 <_obstack_memory_used@@Base+0xf944>
  450a8c:	mov	x19, #0x0                   	// #0
  450a90:	adrp	x21, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  450a94:	add	x21, x21, #0x730
  450a98:	adrp	x23, 480000 <_obstack_memory_used@@Base+0x3ee64>
  450a9c:	mov	w22, #0x1                   	// #1
  450aa0:	b	450ab0 <_obstack_memory_used@@Base+0xf914>
  450aa4:	add	x19, x19, #0x1
  450aa8:	cmp	w20, w19
  450aac:	b.le	450ae0 <_obstack_memory_used@@Base+0xf944>
  450ab0:	ldr	x0, [sp, #136]
  450ab4:	ldrb	w0, [x0, x19]
  450ab8:	cbz	w0, 450aa4 <_obstack_memory_used@@Base+0xf908>
  450abc:	lsl	x0, x19, #5
  450ac0:	ldr	x1, [sp, #104]
  450ac4:	ldr	x4, [x1, x0]
  450ac8:	ldr	x3, [sp, #176]
  450acc:	mov	x2, x21
  450ad0:	mov	w1, w22
  450ad4:	ldr	x0, [x23, #1096]
  450ad8:	bl	404710 <__fprintf_chk@plt>
  450adc:	b	450aa4 <_obstack_memory_used@@Base+0xf908>
  450ae0:	adrp	x19, 480000 <_obstack_memory_used@@Base+0x3ee64>
  450ae4:	ldr	x1, [x19, #1096]
  450ae8:	mov	w0, #0xa                   	// #10
  450aec:	bl	404170 <fputc@plt>
  450af0:	ldr	x0, [x19, #1096]
  450af4:	bl	404330 <funlockfile@plt>
  450af8:	b	450a0c <_obstack_memory_used@@Base+0xf870>
  450afc:	ldr	x0, [sp, #136]
  450b00:	bl	4047c0 <free@plt>
  450b04:	b	450a14 <_obstack_memory_used@@Base+0xf878>
  450b08:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  450b0c:	ldr	x19, [x0, #1096]
  450b10:	mov	w2, #0x5                   	// #5
  450b14:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  450b18:	add	x1, x1, #0x738
  450b1c:	mov	x0, #0x0                   	// #0
  450b20:	bl	4049c0 <dcgettext@plt>
  450b24:	ldr	x5, [x25, #32]
  450b28:	ldr	x4, [sp, #176]
  450b2c:	ldr	x1, [sp, #128]
  450b30:	ldr	x3, [x1]
  450b34:	mov	x2, x0
  450b38:	mov	w1, #0x1                   	// #1
  450b3c:	mov	x0, x19
  450b40:	bl	404710 <__fprintf_chk@plt>
  450b44:	b	4509a4 <_obstack_memory_used@@Base+0xf808>
  450b48:	ldr	w20, [sp, #160]
  450b4c:	b	4507fc <_obstack_memory_used@@Base+0xf660>
  450b50:	ldr	w0, [sp, #116]
  450b54:	cbnz	w0, 450b68 <_obstack_memory_used@@Base+0xf9cc>
  450b58:	ldr	w0, [x19, #24]
  450b5c:	str	w0, [x25, #8]
  450b60:	mov	w0, #0x3f                  	// #63
  450b64:	b	450844 <_obstack_memory_used@@Base+0xf6a8>
  450b68:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  450b6c:	ldr	x20, [x0, #1096]
  450b70:	mov	w2, #0x5                   	// #5
  450b74:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  450b78:	add	x1, x1, #0x758
  450b7c:	mov	x0, #0x0                   	// #0
  450b80:	bl	4049c0 <dcgettext@plt>
  450b84:	ldr	x5, [x19]
  450b88:	ldr	x4, [sp, #176]
  450b8c:	ldr	x1, [sp, #128]
  450b90:	ldr	x3, [x1]
  450b94:	mov	x2, x0
  450b98:	mov	w1, #0x1                   	// #1
  450b9c:	mov	x0, x20
  450ba0:	bl	404710 <__fprintf_chk@plt>
  450ba4:	b	450b58 <_obstack_memory_used@@Base+0xf9bc>
  450ba8:	ldr	w2, [x19, #8]
  450bac:	cmp	w2, #0x1
  450bb0:	b.ne	450824 <_obstack_memory_used@@Base+0xf688>  // b.any
  450bb4:	ldr	w2, [sp, #156]
  450bb8:	cmp	w1, w2
  450bbc:	b.ge	450bd8 <_obstack_memory_used@@Base+0xfa3c>  // b.tcont
  450bc0:	add	w0, w0, #0x2
  450bc4:	str	w0, [x25]
  450bc8:	ldr	x0, [sp, #128]
  450bcc:	ldr	x0, [x0, w1, sxtw #3]
  450bd0:	str	x0, [x25, #16]
  450bd4:	b	450824 <_obstack_memory_used@@Base+0xf688>
  450bd8:	ldr	w0, [sp, #116]
  450bdc:	cbnz	w0, 450c04 <_obstack_memory_used@@Base+0xfa68>
  450be0:	ldr	w0, [x19, #24]
  450be4:	str	w0, [x25, #8]
  450be8:	ldr	x0, [sp, #144]
  450bec:	ldrb	w0, [x0]
  450bf0:	cmp	w0, #0x3a
  450bf4:	mov	w0, #0x3a                  	// #58
  450bf8:	mov	w1, #0x3f                  	// #63
  450bfc:	csel	w0, w0, w1, eq  // eq = none
  450c00:	b	450844 <_obstack_memory_used@@Base+0xf6a8>
  450c04:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  450c08:	ldr	x20, [x0, #1096]
  450c0c:	mov	w2, #0x5                   	// #5
  450c10:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  450c14:	add	x1, x1, #0x788
  450c18:	mov	x0, #0x0                   	// #0
  450c1c:	bl	4049c0 <dcgettext@plt>
  450c20:	ldr	x5, [x19]
  450c24:	ldr	x4, [sp, #176]
  450c28:	ldr	x1, [sp, #128]
  450c2c:	ldr	x3, [x1]
  450c30:	mov	x2, x0
  450c34:	mov	w1, #0x1                   	// #1
  450c38:	mov	x0, x20
  450c3c:	bl	404710 <__fprintf_chk@plt>
  450c40:	b	450be0 <_obstack_memory_used@@Base+0xfa44>
  450c44:	ldr	w0, [x19, #24]
  450c48:	b	450844 <_obstack_memory_used@@Base+0xf6a8>
  450c4c:	mov	w0, #0xffffffff            	// #-1
  450c50:	b	450844 <_obstack_memory_used@@Base+0xf6a8>
  450c54:	mov	w20, #0x0                   	// #0
  450c58:	cbz	x24, 45096c <_obstack_memory_used@@Base+0xf7d0>
  450c5c:	ldr	x27, [sp, #104]
  450c60:	mov	x26, #0x0                   	// #0
  450c64:	mov	w0, #0xffffffff            	// #-1
  450c68:	str	w0, [sp, #160]
  450c6c:	str	wzr, [sp, #152]
  450c70:	str	wzr, [sp, #164]
  450c74:	str	xzr, [sp, #136]
  450c78:	mov	x19, #0x0                   	// #0
  450c7c:	sxtw	x0, w20
  450c80:	str	x0, [sp, #168]
  450c84:	b	4508ec <_obstack_memory_used@@Base+0xf750>
  450c88:	sub	sp, sp, #0x80
  450c8c:	stp	x29, x30, [sp, #16]
  450c90:	add	x29, sp, #0x10
  450c94:	stp	x25, x26, [sp, #80]
  450c98:	str	x4, [sp, #120]
  450c9c:	ldr	w25, [x6, #4]
  450ca0:	cmp	w0, #0x0
  450ca4:	b.le	451238 <_obstack_memory_used@@Base+0x1009c>
  450ca8:	stp	x19, x20, [sp, #32]
  450cac:	stp	x21, x22, [sp, #48]
  450cb0:	stp	x23, x24, [sp, #64]
  450cb4:	mov	w20, w0
  450cb8:	mov	x21, x1
  450cbc:	mov	x22, x2
  450cc0:	mov	x24, x3
  450cc4:	mov	w26, w5
  450cc8:	mov	x19, x6
  450ccc:	str	xzr, [x6, #16]
  450cd0:	ldr	w0, [x6]
  450cd4:	cbz	w0, 450cf8 <_obstack_memory_used@@Base+0xfb5c>
  450cd8:	ldr	w0, [x6, #24]
  450cdc:	cbz	w0, 450d00 <_obstack_memory_used@@Base+0xfb64>
  450ce0:	ldrb	w0, [x2]
  450ce4:	sub	w0, w0, #0x2b
  450ce8:	and	w0, w0, #0xfffffffd
  450cec:	tst	w0, #0xff
  450cf0:	cinc	x22, x2, eq  // eq = none
  450cf4:	b	450d34 <_obstack_memory_used@@Base+0xfb98>
  450cf8:	mov	w0, #0x1                   	// #1
  450cfc:	str	w0, [x6]
  450d00:	ldr	w0, [x19]
  450d04:	str	w0, [x19, #48]
  450d08:	str	w0, [x19, #44]
  450d0c:	str	xzr, [x19, #32]
  450d10:	ldrb	w0, [x22]
  450d14:	cmp	w0, #0x2d
  450d18:	b.eq	450e04 <_obstack_memory_used@@Base+0xfc68>  // b.none
  450d1c:	cmp	w0, #0x2b
  450d20:	b.eq	450e14 <_obstack_memory_used@@Base+0xfc78>  // b.none
  450d24:	cbz	w7, 450e20 <_obstack_memory_used@@Base+0xfc84>
  450d28:	str	wzr, [x19, #40]
  450d2c:	mov	w0, #0x1                   	// #1
  450d30:	str	w0, [x19, #24]
  450d34:	ldrb	w0, [x22]
  450d38:	cmp	w0, #0x3a
  450d3c:	csel	w25, w25, wzr, ne  // ne = any
  450d40:	ldr	x0, [x19, #32]
  450d44:	cbz	x0, 450d50 <_obstack_memory_used@@Base+0xfbb4>
  450d48:	ldrb	w0, [x0]
  450d4c:	cbnz	w0, 450fb4 <_obstack_memory_used@@Base+0xfe18>
  450d50:	ldr	w0, [x19]
  450d54:	ldr	w1, [x19, #48]
  450d58:	cmp	w1, w0
  450d5c:	b.le	450d64 <_obstack_memory_used@@Base+0xfbc8>
  450d60:	str	w0, [x19, #48]
  450d64:	ldr	w1, [x19, #44]
  450d68:	cmp	w0, w1
  450d6c:	b.ge	450d74 <_obstack_memory_used@@Base+0xfbd8>  // b.tcont
  450d70:	str	w0, [x19, #44]
  450d74:	ldr	w1, [x19, #40]
  450d78:	cmp	w1, #0x1
  450d7c:	b.eq	450e3c <_obstack_memory_used@@Base+0xfca0>  // b.none
  450d80:	ldr	w23, [x19]
  450d84:	cmp	w23, w20
  450d88:	b.eq	450ddc <_obstack_memory_used@@Base+0xfc40>  // b.none
  450d8c:	stp	x27, x28, [sp, #96]
  450d90:	sxtw	x28, w23
  450d94:	ldr	x27, [x21, x28, lsl #3]
  450d98:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x18e64>
  450d9c:	add	x1, x1, #0xf58
  450da0:	mov	x0, x27
  450da4:	bl	404720 <strcmp@plt>
  450da8:	cbnz	w0, 45126c <_obstack_memory_used@@Base+0x100d0>
  450dac:	add	w23, w23, #0x1
  450db0:	str	w23, [x19]
  450db4:	ldr	w1, [x19, #44]
  450db8:	ldr	w0, [x19, #48]
  450dbc:	cmp	w1, w0
  450dc0:	ccmp	w23, w0, #0x4, ne  // ne = any
  450dc4:	b.ne	450ebc <_obstack_memory_used@@Base+0xfd20>  // b.any
  450dc8:	cmp	w1, w0
  450dcc:	b.eq	450ecc <_obstack_memory_used@@Base+0xfd30>  // b.none
  450dd0:	str	w20, [x19, #48]
  450dd4:	str	w20, [x19]
  450dd8:	ldp	x27, x28, [sp, #96]
  450ddc:	ldr	w0, [x19, #44]
  450de0:	ldr	w1, [x19, #48]
  450de4:	cmp	w0, w1
  450de8:	b.eq	451258 <_obstack_memory_used@@Base+0x100bc>  // b.none
  450dec:	str	w0, [x19]
  450df0:	mov	w0, #0xffffffff            	// #-1
  450df4:	ldp	x19, x20, [sp, #32]
  450df8:	ldp	x21, x22, [sp, #48]
  450dfc:	ldp	x23, x24, [sp, #64]
  450e00:	b	4512a4 <_obstack_memory_used@@Base+0x10108>
  450e04:	mov	w0, #0x2                   	// #2
  450e08:	str	w0, [x19, #40]
  450e0c:	add	x22, x22, #0x1
  450e10:	b	450d2c <_obstack_memory_used@@Base+0xfb90>
  450e14:	str	wzr, [x19, #40]
  450e18:	add	x22, x22, #0x1
  450e1c:	b	450d2c <_obstack_memory_used@@Base+0xfb90>
  450e20:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x19e64>
  450e24:	add	x0, x0, #0x6c8
  450e28:	bl	404af0 <getenv@plt>
  450e2c:	cbnz	x0, 450d28 <_obstack_memory_used@@Base+0xfb8c>
  450e30:	mov	w0, #0x1                   	// #1
  450e34:	str	w0, [x19, #40]
  450e38:	b	450d2c <_obstack_memory_used@@Base+0xfb90>
  450e3c:	ldr	w1, [x19, #48]
  450e40:	ldr	w2, [x19, #44]
  450e44:	cmp	w2, w1
  450e48:	ccmp	w0, w1, #0x4, ne  // ne = any
  450e4c:	b.ne	450e70 <_obstack_memory_used@@Base+0xfcd4>  // b.any
  450e50:	cmp	w0, w1
  450e54:	b.eq	450e5c <_obstack_memory_used@@Base+0xfcc0>  // b.none
  450e58:	str	w0, [x19, #44]
  450e5c:	ldr	w1, [x19]
  450e60:	cmp	w20, w1
  450e64:	b.le	450eb4 <_obstack_memory_used@@Base+0xfd18>
  450e68:	sxtw	x0, w1
  450e6c:	b	450e94 <_obstack_memory_used@@Base+0xfcf8>
  450e70:	mov	x1, x19
  450e74:	mov	x0, x21
  450e78:	bl	45065c <_obstack_memory_used@@Base+0xf4c0>
  450e7c:	b	450e5c <_obstack_memory_used@@Base+0xfcc0>
  450e80:	add	w1, w4, #0x1
  450e84:	str	w1, [x19]
  450e88:	add	x0, x0, #0x1
  450e8c:	cmp	w20, w0
  450e90:	b.le	450eb4 <_obstack_memory_used@@Base+0xfd18>
  450e94:	mov	w4, w0
  450e98:	mov	w1, w0
  450e9c:	ldr	x2, [x21, x0, lsl #3]
  450ea0:	ldrb	w3, [x2]
  450ea4:	cmp	w3, #0x2d
  450ea8:	b.ne	450e80 <_obstack_memory_used@@Base+0xfce4>  // b.any
  450eac:	ldrb	w2, [x2, #1]
  450eb0:	cbz	w2, 450e80 <_obstack_memory_used@@Base+0xfce4>
  450eb4:	str	w1, [x19, #48]
  450eb8:	b	450d80 <_obstack_memory_used@@Base+0xfbe4>
  450ebc:	mov	x1, x19
  450ec0:	mov	x0, x21
  450ec4:	bl	45065c <_obstack_memory_used@@Base+0xf4c0>
  450ec8:	b	450dd0 <_obstack_memory_used@@Base+0xfc34>
  450ecc:	str	w23, [x19, #44]
  450ed0:	b	450dd0 <_obstack_memory_used@@Base+0xfc34>
  450ed4:	ldrb	w1, [x27, #1]
  450ed8:	cbz	w1, 451278 <_obstack_memory_used@@Base+0x100dc>
  450edc:	cbz	x24, 450f00 <_obstack_memory_used@@Base+0xfd64>
  450ee0:	cmp	w1, #0x2d
  450ee4:	b.eq	450f14 <_obstack_memory_used@@Base+0xfd78>  // b.none
  450ee8:	cbz	w26, 450f00 <_obstack_memory_used@@Base+0xfd64>
  450eec:	ldrb	w0, [x27, #2]
  450ef0:	cbnz	w0, 450f60 <_obstack_memory_used@@Base+0xfdc4>
  450ef4:	mov	x0, x22
  450ef8:	bl	404870 <strchr@plt>
  450efc:	cbz	x0, 450f60 <_obstack_memory_used@@Base+0xfdc4>
  450f00:	ldrsw	x0, [x19]
  450f04:	ldr	x0, [x21, x0, lsl #3]
  450f08:	add	x0, x0, #0x1
  450f0c:	str	x0, [x19, #32]
  450f10:	b	450fb8 <_obstack_memory_used@@Base+0xfe1c>
  450f14:	add	x27, x27, #0x2
  450f18:	str	x27, [x19, #32]
  450f1c:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x18e64>
  450f20:	add	x0, x0, #0xf58
  450f24:	str	x0, [sp]
  450f28:	mov	w7, w25
  450f2c:	mov	x6, x19
  450f30:	mov	w5, w26
  450f34:	ldr	x4, [sp, #120]
  450f38:	mov	x3, x24
  450f3c:	mov	x2, x22
  450f40:	mov	x1, x21
  450f44:	mov	w0, w20
  450f48:	bl	450740 <_obstack_memory_used@@Base+0xf5a4>
  450f4c:	ldp	x19, x20, [sp, #32]
  450f50:	ldp	x21, x22, [sp, #48]
  450f54:	ldp	x23, x24, [sp, #64]
  450f58:	ldp	x27, x28, [sp, #96]
  450f5c:	b	4512a4 <_obstack_memory_used@@Base+0x10108>
  450f60:	add	x27, x27, #0x1
  450f64:	str	x27, [x19, #32]
  450f68:	adrp	x0, 452000 <_obstack_memory_used@@Base+0x10e64>
  450f6c:	add	x0, x0, #0xca8
  450f70:	str	x0, [sp]
  450f74:	mov	w7, w25
  450f78:	mov	x6, x19
  450f7c:	mov	w5, w26
  450f80:	ldr	x4, [sp, #120]
  450f84:	mov	x3, x24
  450f88:	mov	x2, x22
  450f8c:	mov	x1, x21
  450f90:	mov	w0, w20
  450f94:	bl	450740 <_obstack_memory_used@@Base+0xf5a4>
  450f98:	cmn	w0, #0x1
  450f9c:	b.eq	450f00 <_obstack_memory_used@@Base+0xfd64>  // b.none
  450fa0:	ldp	x19, x20, [sp, #32]
  450fa4:	ldp	x21, x22, [sp, #48]
  450fa8:	ldp	x23, x24, [sp, #64]
  450fac:	ldp	x27, x28, [sp, #96]
  450fb0:	b	4512a4 <_obstack_memory_used@@Base+0x10108>
  450fb4:	stp	x27, x28, [sp, #96]
  450fb8:	ldr	x26, [x19, #32]
  450fbc:	add	x27, x26, #0x1
  450fc0:	str	x27, [x19, #32]
  450fc4:	ldrb	w23, [x26]
  450fc8:	mov	w28, w23
  450fcc:	mov	w1, w23
  450fd0:	mov	x0, x22
  450fd4:	bl	404870 <strchr@plt>
  450fd8:	ldrb	w1, [x26, #1]
  450fdc:	cbnz	w1, 450fec <_obstack_memory_used@@Base+0xfe50>
  450fe0:	ldr	w1, [x19]
  450fe4:	add	w1, w1, #0x1
  450fe8:	str	w1, [x19]
  450fec:	sub	w1, w23, #0x3a
  450ff0:	and	w1, w1, #0xff
  450ff4:	cmp	x0, #0x0
  450ff8:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  450ffc:	b.ls	451030 <_obstack_memory_used@@Base+0xfe94>  // b.plast
  451000:	ldrb	w1, [x0]
  451004:	cmp	w1, #0x57
  451008:	b.eq	451088 <_obstack_memory_used@@Base+0xfeec>  // b.none
  45100c:	ldrb	w1, [x0, #1]
  451010:	cmp	w1, #0x3a
  451014:	b.eq	451170 <_obstack_memory_used@@Base+0xffd4>  // b.none
  451018:	mov	w0, w23
  45101c:	ldp	x19, x20, [sp, #32]
  451020:	ldp	x21, x22, [sp, #48]
  451024:	ldp	x23, x24, [sp, #64]
  451028:	ldp	x27, x28, [sp, #96]
  45102c:	b	4512a4 <_obstack_memory_used@@Base+0x10108>
  451030:	cbnz	w25, 451050 <_obstack_memory_used@@Base+0xfeb4>
  451034:	str	w28, [x19, #8]
  451038:	mov	w0, #0x3f                  	// #63
  45103c:	ldp	x19, x20, [sp, #32]
  451040:	ldp	x21, x22, [sp, #48]
  451044:	ldp	x23, x24, [sp, #64]
  451048:	ldp	x27, x28, [sp, #96]
  45104c:	b	4512a4 <_obstack_memory_used@@Base+0x10108>
  451050:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  451054:	ldr	x20, [x0, #1096]
  451058:	mov	w2, #0x5                   	// #5
  45105c:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  451060:	add	x1, x1, #0x7b0
  451064:	mov	x0, #0x0                   	// #0
  451068:	bl	4049c0 <dcgettext@plt>
  45106c:	mov	w4, w28
  451070:	ldr	x3, [x21]
  451074:	mov	x2, x0
  451078:	mov	w1, #0x1                   	// #1
  45107c:	mov	x0, x20
  451080:	bl	404710 <__fprintf_chk@plt>
  451084:	b	451034 <_obstack_memory_used@@Base+0xfe98>
  451088:	ldrb	w1, [x0, #1]
  45108c:	cmp	w1, #0x3b
  451090:	ccmp	x24, #0x0, #0x4, eq  // eq = none
  451094:	b.eq	45100c <_obstack_memory_used@@Base+0xfe70>  // b.none
  451098:	ldrb	w0, [x26, #1]
  45109c:	cbnz	w0, 451104 <_obstack_memory_used@@Base+0xff68>
  4510a0:	ldr	w0, [x19]
  4510a4:	cmp	w0, w20
  4510a8:	b.eq	45110c <_obstack_memory_used@@Base+0xff70>  // b.none
  4510ac:	ldr	x0, [x21, w0, sxtw #3]
  4510b0:	str	x0, [x19, #16]
  4510b4:	ldr	x0, [x19, #16]
  4510b8:	str	x0, [x19, #32]
  4510bc:	str	xzr, [x19, #16]
  4510c0:	adrp	x0, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  4510c4:	add	x0, x0, #0x800
  4510c8:	str	x0, [sp]
  4510cc:	mov	w7, w25
  4510d0:	mov	x6, x19
  4510d4:	mov	w5, #0x0                   	// #0
  4510d8:	ldr	x4, [sp, #120]
  4510dc:	mov	x3, x24
  4510e0:	mov	x2, x22
  4510e4:	mov	x1, x21
  4510e8:	mov	w0, w20
  4510ec:	bl	450740 <_obstack_memory_used@@Base+0xf5a4>
  4510f0:	ldp	x19, x20, [sp, #32]
  4510f4:	ldp	x21, x22, [sp, #48]
  4510f8:	ldp	x23, x24, [sp, #64]
  4510fc:	ldp	x27, x28, [sp, #96]
  451100:	b	4512a4 <_obstack_memory_used@@Base+0x10108>
  451104:	str	x27, [x19, #16]
  451108:	b	4510b4 <_obstack_memory_used@@Base+0xff18>
  45110c:	cbnz	w25, 451138 <_obstack_memory_used@@Base+0xff9c>
  451110:	str	w28, [x19, #8]
  451114:	ldrb	w0, [x22]
  451118:	cmp	w0, #0x3a
  45111c:	mov	w23, #0x3f                  	// #63
  451120:	csel	w0, w0, w23, eq  // eq = none
  451124:	ldp	x19, x20, [sp, #32]
  451128:	ldp	x21, x22, [sp, #48]
  45112c:	ldp	x23, x24, [sp, #64]
  451130:	ldp	x27, x28, [sp, #96]
  451134:	b	4512a4 <_obstack_memory_used@@Base+0x10108>
  451138:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  45113c:	ldr	x20, [x0, #1096]
  451140:	mov	w2, #0x5                   	// #5
  451144:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  451148:	add	x1, x1, #0x7d0
  45114c:	mov	x0, #0x0                   	// #0
  451150:	bl	4049c0 <dcgettext@plt>
  451154:	mov	w4, w28
  451158:	ldr	x3, [x21]
  45115c:	mov	x2, x0
  451160:	mov	w1, #0x1                   	// #1
  451164:	mov	x0, x20
  451168:	bl	404710 <__fprintf_chk@plt>
  45116c:	b	451110 <_obstack_memory_used@@Base+0xff74>
  451170:	ldrb	w0, [x0, #2]
  451174:	cmp	w0, #0x3a
  451178:	b.eq	45119c <_obstack_memory_used@@Base+0x10000>  // b.none
  45117c:	ldrb	w0, [x26, #1]
  451180:	cbz	w0, 4511c4 <_obstack_memory_used@@Base+0x10028>
  451184:	str	x27, [x19, #16]
  451188:	ldr	w0, [x19]
  45118c:	add	w0, w0, #0x1
  451190:	str	w0, [x19]
  451194:	str	xzr, [x19, #32]
  451198:	b	451018 <_obstack_memory_used@@Base+0xfe7c>
  45119c:	ldrb	w0, [x26, #1]
  4511a0:	cbz	w0, 4511bc <_obstack_memory_used@@Base+0x10020>
  4511a4:	str	x27, [x19, #16]
  4511a8:	ldr	w0, [x19]
  4511ac:	add	w0, w0, #0x1
  4511b0:	str	w0, [x19]
  4511b4:	str	xzr, [x19, #32]
  4511b8:	b	451018 <_obstack_memory_used@@Base+0xfe7c>
  4511bc:	str	xzr, [x19, #16]
  4511c0:	b	4511b4 <_obstack_memory_used@@Base+0x10018>
  4511c4:	ldr	w0, [x19]
  4511c8:	cmp	w0, w20
  4511cc:	b.eq	4511e4 <_obstack_memory_used@@Base+0x10048>  // b.none
  4511d0:	add	w1, w0, #0x1
  4511d4:	str	w1, [x19]
  4511d8:	ldr	x0, [x21, w0, sxtw #3]
  4511dc:	str	x0, [x19, #16]
  4511e0:	b	451194 <_obstack_memory_used@@Base+0xfff8>
  4511e4:	cbnz	w25, 451200 <_obstack_memory_used@@Base+0x10064>
  4511e8:	str	w28, [x19, #8]
  4511ec:	ldrb	w23, [x22]
  4511f0:	cmp	w23, #0x3a
  4511f4:	mov	w0, #0x3f                  	// #63
  4511f8:	csel	w23, w23, w0, eq  // eq = none
  4511fc:	b	451194 <_obstack_memory_used@@Base+0xfff8>
  451200:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x3ee64>
  451204:	ldr	x20, [x0, #1096]
  451208:	mov	w2, #0x5                   	// #5
  45120c:	adrp	x1, 45e000 <_obstack_memory_used@@Base+0x1ce64>
  451210:	add	x1, x1, #0x7d0
  451214:	mov	x0, #0x0                   	// #0
  451218:	bl	4049c0 <dcgettext@plt>
  45121c:	mov	w4, w28
  451220:	ldr	x3, [x21]
  451224:	mov	x2, x0
  451228:	mov	w1, #0x1                   	// #1
  45122c:	mov	x0, x20
  451230:	bl	404710 <__fprintf_chk@plt>
  451234:	b	4511e8 <_obstack_memory_used@@Base+0x1004c>
  451238:	mov	w0, #0xffffffff            	// #-1
  45123c:	b	4512a4 <_obstack_memory_used@@Base+0x10108>
  451240:	mov	w0, #0xffffffff            	// #-1
  451244:	ldp	x19, x20, [sp, #32]
  451248:	ldp	x21, x22, [sp, #48]
  45124c:	ldp	x23, x24, [sp, #64]
  451250:	ldp	x27, x28, [sp, #96]
  451254:	b	4512a4 <_obstack_memory_used@@Base+0x10108>
  451258:	mov	w0, #0xffffffff            	// #-1
  45125c:	ldp	x19, x20, [sp, #32]
  451260:	ldp	x21, x22, [sp, #48]
  451264:	ldp	x23, x24, [sp, #64]
  451268:	b	4512a4 <_obstack_memory_used@@Base+0x10108>
  45126c:	ldrb	w0, [x27]
  451270:	cmp	w0, #0x2d
  451274:	b.eq	450ed4 <_obstack_memory_used@@Base+0xfd38>  // b.none
  451278:	ldr	w0, [x19, #40]
  45127c:	cbz	w0, 451240 <_obstack_memory_used@@Base+0x100a4>
  451280:	add	w23, w23, #0x1
  451284:	str	w23, [x19]
  451288:	ldr	x0, [x21, x28, lsl #3]
  45128c:	str	x0, [x19, #16]
  451290:	mov	w0, #0x1                   	// #1
  451294:	ldp	x19, x20, [sp, #32]
  451298:	ldp	x21, x22, [sp, #48]
  45129c:	ldp	x23, x24, [sp, #64]
  4512a0:	ldp	x27, x28, [sp, #96]
  4512a4:	ldp	x25, x26, [sp, #80]
  4512a8:	ldp	x29, x30, [sp, #16]
  4512ac:	add	sp, sp, #0x80
  4512b0:	ret
  4512b4:	stp	x29, x30, [sp, #-48]!
  4512b8:	mov	x29, sp
  4512bc:	stp	x19, x20, [sp, #16]
  4512c0:	stp	x21, x22, [sp, #32]
  4512c4:	adrp	x21, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4512c8:	add	x19, x21, #0xee0
  4512cc:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x3ee64>
  4512d0:	add	x22, x20, #0x434
  4512d4:	ldr	w7, [x20, #1076]
  4512d8:	str	w7, [x21, #3808]
  4512dc:	ldr	w7, [x22, #4]
  4512e0:	str	w7, [x19, #4]
  4512e4:	mov	w7, w6
  4512e8:	mov	x6, x19
  4512ec:	bl	450c88 <_obstack_memory_used@@Base+0xfaec>
  4512f0:	ldr	w1, [x21, #3808]
  4512f4:	str	w1, [x20, #1076]
  4512f8:	ldr	x2, [x19, #16]
  4512fc:	adrp	x1, 481000 <argp_program_version_hook@@Base+0x298>
  451300:	str	x2, [x1, #992]
  451304:	ldr	w1, [x19, #8]
  451308:	str	w1, [x22, #8]
  45130c:	ldp	x19, x20, [sp, #16]
  451310:	ldp	x21, x22, [sp, #32]
  451314:	ldp	x29, x30, [sp], #48
  451318:	ret
  45131c:	stp	x29, x30, [sp, #-16]!
  451320:	mov	x29, sp
  451324:	mov	w6, #0x1                   	// #1
  451328:	mov	w5, #0x0                   	// #0
  45132c:	mov	x4, #0x0                   	// #0
  451330:	mov	x3, #0x0                   	// #0
  451334:	bl	4512b4 <_obstack_memory_used@@Base+0x10118>
  451338:	ldp	x29, x30, [sp], #16
  45133c:	ret
  451340:	stp	x29, x30, [sp, #-16]!
  451344:	mov	x29, sp
  451348:	mov	w2, #0x3                   	// #3
  45134c:	mov	w1, #0x0                   	// #0
  451350:	bl	440a14 <argp_parse@@Base+0xd2d4>
  451354:	ldp	x29, x30, [sp], #16
  451358:	ret
  45135c:	stp	x29, x30, [sp, #-32]!
  451360:	mov	x29, sp
  451364:	str	q0, [sp, #16]
  451368:	ldr	x2, [sp, #16]
  45136c:	ldr	x0, [sp, #24]
  451370:	str	q1, [sp, #16]
  451374:	ldr	x7, [sp, #16]
  451378:	ldr	x1, [sp, #24]
  45137c:	mrs	x12, fpcr
  451380:	ubfx	x3, x0, #0, #48
  451384:	ubfx	x6, x0, #48, #15
  451388:	lsr	x0, x0, #63
  45138c:	and	w9, w0, #0xff
  451390:	cbz	w6, 451444 <_obstack_memory_used@@Base+0x102a8>
  451394:	mov	x10, x3
  451398:	mov	w5, #0x7fff                	// #32767
  45139c:	cmp	w6, w5
  4513a0:	b.eq	4514ac <_obstack_memory_used@@Base+0x10310>  // b.none
  4513a4:	extr	x3, x3, x2, #61
  4513a8:	orr	x10, x3, #0x8000000000000
  4513ac:	lsl	x13, x2, #3
  4513b0:	and	x6, x6, #0xffff
  4513b4:	sub	x6, x6, #0x3, lsl #12
  4513b8:	sub	x6, x6, #0xfff
  4513bc:	mov	x14, #0x0                   	// #0
  4513c0:	mov	w3, #0x0                   	// #0
  4513c4:	ubfx	x8, x1, #0, #48
  4513c8:	mov	x4, x8
  4513cc:	ubfx	x11, x1, #48, #15
  4513d0:	lsr	x2, x1, #63
  4513d4:	and	w1, w2, #0xff
  4513d8:	cbz	w11, 4514f4 <_obstack_memory_used@@Base+0x10358>
  4513dc:	mov	w15, #0x7fff                	// #32767
  4513e0:	cmp	w11, w15
  4513e4:	b.eq	451554 <_obstack_memory_used@@Base+0x103b8>  // b.none
  4513e8:	extr	x4, x8, x7, #61
  4513ec:	orr	x4, x4, #0x8000000000000
  4513f0:	lsl	x5, x7, #3
  4513f4:	and	x11, x11, #0xffff
  4513f8:	sub	x11, x11, #0x3, lsl #12
  4513fc:	sub	x11, x11, #0xfff
  451400:	eor	w9, w9, w1
  451404:	and	x9, x9, #0xff
  451408:	sub	x6, x6, x11
  45140c:	lsl	x1, x14, #2
  451410:	mov	x7, #0x0                   	// #0
  451414:	cmp	x1, #0x7
  451418:	b.le	4515ac <_obstack_memory_used@@Base+0x10410>
  45141c:	cmp	x1, #0xe
  451420:	b.gt	451918 <_obstack_memory_used@@Base+0x1077c>
  451424:	cmp	x1, #0xb
  451428:	b.gt	45193c <_obstack_memory_used@@Base+0x107a0>
  45142c:	cmp	x1, #0x9
  451430:	b.gt	451678 <_obstack_memory_used@@Base+0x104dc>
  451434:	mov	x4, #0x0                   	// #0
  451438:	mov	x5, #0x0                   	// #0
  45143c:	mov	x6, #0x7fff                	// #32767
  451440:	b	451ba8 <_obstack_memory_used@@Base+0x10a0c>
  451444:	orr	x13, x3, x2
  451448:	cbz	x13, 4514cc <_obstack_memory_used@@Base+0x10330>
  45144c:	cbz	x3, 451488 <_obstack_memory_used@@Base+0x102ec>
  451450:	clz	x6, x3
  451454:	sub	x10, x6, #0xf
  451458:	add	w13, w10, #0x3
  45145c:	lsl	x3, x3, x13
  451460:	mov	w4, #0x3d                  	// #61
  451464:	sub	w10, w4, w10
  451468:	lsr	x10, x2, x10
  45146c:	orr	x10, x10, x3
  451470:	lsl	x13, x2, x13
  451474:	mov	x2, #0xffffffffffffc011    	// #-16367
  451478:	sub	x6, x2, x6
  45147c:	mov	x14, #0x0                   	// #0
  451480:	mov	w3, #0x0                   	// #0
  451484:	b	4513c4 <_obstack_memory_used@@Base+0x10228>
  451488:	clz	x10, x2
  45148c:	add	x6, x10, #0x40
  451490:	add	x10, x10, #0x31
  451494:	cmp	x10, #0x3c
  451498:	b.le	451458 <_obstack_memory_used@@Base+0x102bc>
  45149c:	sub	w10, w10, #0x3d
  4514a0:	mov	x13, x3
  4514a4:	lsl	x10, x2, x10
  4514a8:	b	451474 <_obstack_memory_used@@Base+0x102d8>
  4514ac:	orr	x13, x3, x2
  4514b0:	cbz	x13, 4514e0 <_obstack_memory_used@@Base+0x10344>
  4514b4:	lsr	x3, x3, #47
  4514b8:	eor	w3, w3, #0x1
  4514bc:	mov	x13, x2
  4514c0:	mov	x6, #0x7fff                	// #32767
  4514c4:	mov	x14, #0x3                   	// #3
  4514c8:	b	4513c4 <_obstack_memory_used@@Base+0x10228>
  4514cc:	mov	x10, x13
  4514d0:	mov	x6, #0x0                   	// #0
  4514d4:	mov	x14, #0x1                   	// #1
  4514d8:	mov	w3, #0x0                   	// #0
  4514dc:	b	4513c4 <_obstack_memory_used@@Base+0x10228>
  4514e0:	mov	x10, x13
  4514e4:	mov	x6, #0x7fff                	// #32767
  4514e8:	mov	x14, #0x2                   	// #2
  4514ec:	mov	w3, #0x0                   	// #0
  4514f0:	b	4513c4 <_obstack_memory_used@@Base+0x10228>
  4514f4:	orr	x5, x8, x7
  4514f8:	cbz	x5, 451574 <_obstack_memory_used@@Base+0x103d8>
  4514fc:	cbz	x8, 451530 <_obstack_memory_used@@Base+0x10394>
  451500:	clz	x16, x8
  451504:	sub	x4, x16, #0xf
  451508:	add	w5, w4, #0x3
  45150c:	lsl	x8, x8, x5
  451510:	mov	w15, #0x3d                  	// #61
  451514:	sub	w4, w15, w4
  451518:	lsr	x4, x7, x4
  45151c:	orr	x4, x4, x8
  451520:	lsl	x5, x7, x5
  451524:	mov	x11, #0xffffffffffffc011    	// #-16367
  451528:	sub	x11, x11, x16
  45152c:	b	451400 <_obstack_memory_used@@Base+0x10264>
  451530:	clz	x4, x7
  451534:	add	x16, x4, #0x40
  451538:	add	x4, x4, #0x31
  45153c:	cmp	x4, #0x3c
  451540:	b.le	451508 <_obstack_memory_used@@Base+0x1036c>
  451544:	sub	w4, w4, #0x3d
  451548:	mov	x5, x8
  45154c:	lsl	x4, x7, x4
  451550:	b	451524 <_obstack_memory_used@@Base+0x10388>
  451554:	orr	x5, x8, x7
  451558:	cbz	x5, 45159c <_obstack_memory_used@@Base+0x10400>
  45155c:	mov	x5, x7
  451560:	mov	x11, #0x7fff                	// #32767
  451564:	mov	x7, #0x3                   	// #3
  451568:	tst	x8, #0x800000000000
  45156c:	csinc	w3, w3, wzr, ne  // ne = any
  451570:	b	451580 <_obstack_memory_used@@Base+0x103e4>
  451574:	mov	x4, x5
  451578:	mov	x11, #0x0                   	// #0
  45157c:	mov	x7, #0x1                   	// #1
  451580:	eor	w9, w9, w1
  451584:	and	x9, x9, #0xff
  451588:	sub	x6, x6, x11
  45158c:	orr	x1, x7, x14, lsl #2
  451590:	cmp	x1, #0x7
  451594:	b.ne	451414 <_obstack_memory_used@@Base+0x10278>  // b.any
  451598:	b	4515f4 <_obstack_memory_used@@Base+0x10458>
  45159c:	mov	x4, x5
  4515a0:	mov	x11, #0x7fff                	// #32767
  4515a4:	mov	x7, #0x2                   	// #2
  4515a8:	b	451580 <_obstack_memory_used@@Base+0x103e4>
  4515ac:	cmp	x1, #0x1
  4515b0:	b.eq	451934 <_obstack_memory_used@@Base+0x10798>  // b.none
  4515b4:	b.le	451694 <_obstack_memory_used@@Base+0x104f8>
  4515b8:	cmp	x1, #0x4
  4515bc:	b.eq	451b8c <_obstack_memory_used@@Base+0x109f0>  // b.none
  4515c0:	b.le	4515ec <_obstack_memory_used@@Base+0x10450>
  4515c4:	cmp	x1, #0x5
  4515c8:	b.ne	451668 <_obstack_memory_used@@Base+0x104cc>  // b.any
  4515cc:	mov	x4, #0xffffffffffff        	// #281474976710655
  4515d0:	mov	x5, #0xffffffffffffffff    	// #-1
  4515d4:	mov	x2, #0x0                   	// #0
  4515d8:	mov	w3, #0x1                   	// #1
  4515dc:	orr	x4, x4, #0x800000000000
  4515e0:	mov	x9, x2
  4515e4:	mov	x6, #0x7fff                	// #32767
  4515e8:	b	451ba8 <_obstack_memory_used@@Base+0x10a0c>
  4515ec:	cmp	x1, #0x2
  4515f0:	b.eq	451b9c <_obstack_memory_used@@Base+0x10a00>  // b.none
  4515f4:	cmp	x7, #0x1
  4515f8:	b.eq	451bd0 <_obstack_memory_used@@Base+0x10a34>  // b.none
  4515fc:	b.gt	451950 <_obstack_memory_used@@Base+0x107b4>
  451600:	mov	x9, x2
  451604:	cbnz	x7, 451ba8 <_obstack_memory_used@@Base+0x10a0c>
  451608:	add	x0, x6, #0x3, lsl #12
  45160c:	add	x0, x0, #0xfff
  451610:	cmp	x0, #0x0
  451614:	b.le	451a1c <_obstack_memory_used@@Base+0x10880>
  451618:	tst	x5, #0x7
  45161c:	b.eq	45163c <_obstack_memory_used@@Base+0x104a0>  // b.none
  451620:	orr	w3, w3, #0x10
  451624:	and	x1, x12, #0xc00000
  451628:	cmp	x1, #0x400, lsl #12
  45162c:	b.eq	451978 <_obstack_memory_used@@Base+0x107dc>  // b.none
  451630:	cmp	x1, #0x800, lsl #12
  451634:	b.eq	451988 <_obstack_memory_used@@Base+0x107ec>  // b.none
  451638:	cbz	x1, 451960 <_obstack_memory_used@@Base+0x107c4>
  45163c:	tbz	x4, #52, 451648 <_obstack_memory_used@@Base+0x104ac>
  451640:	and	x4, x4, #0xffefffffffffffff
  451644:	add	x0, x6, #0x4, lsl #12
  451648:	mov	x1, #0x7ffe                	// #32766
  45164c:	cmp	x0, x1
  451650:	b.gt	451998 <_obstack_memory_used@@Base+0x107fc>
  451654:	extr	x5, x4, x5, #3
  451658:	lsr	x4, x4, #3
  45165c:	mov	x9, x2
  451660:	mov	x6, x0
  451664:	b	451ba8 <_obstack_memory_used@@Base+0x10a0c>
  451668:	mov	x4, #0x0                   	// #0
  45166c:	mov	x5, #0x0                   	// #0
  451670:	mov	x6, #0x0                   	// #0
  451674:	b	451ba8 <_obstack_memory_used@@Base+0x10a0c>
  451678:	cmp	x1, #0xa
  45167c:	b.ne	4515f4 <_obstack_memory_used@@Base+0x10458>  // b.any
  451680:	mov	x4, #0xffffffffffff        	// #281474976710655
  451684:	mov	x5, #0xffffffffffffffff    	// #-1
  451688:	mov	x2, #0x0                   	// #0
  45168c:	mov	w3, #0x1                   	// #1
  451690:	b	4515dc <_obstack_memory_used@@Base+0x10440>
  451694:	cmp	x10, x4
  451698:	b.hi	4516a4 <_obstack_memory_used@@Base+0x10508>  // b.pmore
  45169c:	ccmp	x13, x5, #0x0, eq  // eq = none
  4516a0:	b.cc	4518c8 <_obstack_memory_used@@Base+0x1072c>  // b.lo, b.ul, b.last
  4516a4:	lsr	x2, x10, #1
  4516a8:	extr	x0, x10, x13, #1
  4516ac:	lsl	x13, x13, #63
  4516b0:	extr	x7, x4, x5, #52
  4516b4:	lsl	x8, x5, #12
  4516b8:	ubfx	x10, x4, #20, #32
  4516bc:	and	x11, x7, #0xffffffff
  4516c0:	udiv	x4, x2, x10
  4516c4:	mul	x5, x11, x4
  4516c8:	msub	x2, x4, x10, x2
  4516cc:	extr	x1, x2, x0, #32
  4516d0:	cmp	x5, x1
  4516d4:	b.ls	4516ec <_obstack_memory_used@@Base+0x10550>  // b.plast
  4516d8:	add	x1, x1, x7
  4516dc:	cmp	x5, x1
  4516e0:	ccmp	x7, x1, #0x2, hi  // hi = pmore
  4516e4:	b.ls	4518dc <_obstack_memory_used@@Base+0x10740>  // b.plast
  4516e8:	sub	x4, x4, #0x1
  4516ec:	sub	x1, x1, x5
  4516f0:	udiv	x15, x1, x10
  4516f4:	mul	x2, x11, x15
  4516f8:	msub	x1, x15, x10, x1
  4516fc:	bfi	x0, x1, #32, #32
  451700:	cmp	x2, x0
  451704:	b.ls	45171c <_obstack_memory_used@@Base+0x10580>  // b.plast
  451708:	add	x0, x0, x7
  45170c:	cmp	x2, x0
  451710:	ccmp	x7, x0, #0x2, hi  // hi = pmore
  451714:	b.ls	4518e8 <_obstack_memory_used@@Base+0x1074c>  // b.plast
  451718:	sub	x15, x15, #0x1
  45171c:	sub	x0, x0, x2
  451720:	orr	x15, x15, x4, lsl #32
  451724:	lsr	x1, x15, #32
  451728:	lsr	x14, x8, #32
  45172c:	and	x2, x15, #0xffffffff
  451730:	and	x16, x8, #0xffffffff
  451734:	mul	x4, x2, x16
  451738:	mul	x17, x1, x16
  45173c:	mul	x1, x1, x14
  451740:	madd	x2, x14, x2, x17
  451744:	add	x2, x2, x4, lsr #32
  451748:	mov	x5, #0x100000000           	// #4294967296
  45174c:	add	x5, x1, x5
  451750:	cmp	x17, x2
  451754:	csel	x1, x5, x1, hi  // hi = pmore
  451758:	add	x1, x1, x2, lsr #32
  45175c:	and	x4, x4, #0xffffffff
  451760:	add	x2, x4, x2, lsl #32
  451764:	cmp	x0, x1
  451768:	b.cc	451778 <_obstack_memory_used@@Base+0x105dc>  // b.lo, b.ul, b.last
  45176c:	mov	x4, x15
  451770:	ccmp	x13, x2, #0x2, eq  // eq = none
  451774:	b.cs	4517b0 <_obstack_memory_used@@Base+0x10614>  // b.hs, b.nlast
  451778:	sub	x4, x15, #0x1
  45177c:	adds	x13, x13, x8
  451780:	adc	x0, x0, x7
  451784:	cmp	x7, x0
  451788:	b.cc	451794 <_obstack_memory_used@@Base+0x105f8>  // b.lo, b.ul, b.last
  45178c:	ccmp	x8, x13, #0x2, eq  // eq = none
  451790:	b.hi	4517b0 <_obstack_memory_used@@Base+0x10614>  // b.pmore
  451794:	cmp	x1, x0
  451798:	b.hi	4517a4 <_obstack_memory_used@@Base+0x10608>  // b.pmore
  45179c:	ccmp	x2, x13, #0x0, eq  // eq = none
  4517a0:	b.ls	4517b0 <_obstack_memory_used@@Base+0x10614>  // b.plast
  4517a4:	sub	x4, x15, #0x2
  4517a8:	adds	x13, x13, x8
  4517ac:	adc	x0, x0, x7
  4517b0:	sub	x2, x13, x2
  4517b4:	cmp	x13, x2
  4517b8:	sbc	x0, x0, x1
  4517bc:	mov	x5, #0xffffffffffffffff    	// #-1
  4517c0:	cmp	x7, x0
  4517c4:	b.eq	4518c0 <_obstack_memory_used@@Base+0x10724>  // b.none
  4517c8:	udiv	x1, x0, x10
  4517cc:	mul	x5, x11, x1
  4517d0:	msub	x0, x1, x10, x0
  4517d4:	extr	x0, x0, x2, #32
  4517d8:	cmp	x5, x0
  4517dc:	b.ls	4517f4 <_obstack_memory_used@@Base+0x10658>  // b.plast
  4517e0:	add	x0, x0, x7
  4517e4:	cmp	x5, x0
  4517e8:	ccmp	x7, x0, #0x2, hi  // hi = pmore
  4517ec:	b.ls	4518f4 <_obstack_memory_used@@Base+0x10758>  // b.plast
  4517f0:	sub	x1, x1, #0x1
  4517f4:	sub	x0, x0, x5
  4517f8:	udiv	x5, x0, x10
  4517fc:	mul	x11, x11, x5
  451800:	msub	x0, x5, x10, x0
  451804:	bfi	x2, x0, #32, #32
  451808:	mov	x0, x2
  45180c:	cmp	x11, x2
  451810:	b.ls	451828 <_obstack_memory_used@@Base+0x1068c>  // b.plast
  451814:	add	x0, x2, x7
  451818:	cmp	x11, x0
  45181c:	ccmp	x7, x0, #0x2, hi  // hi = pmore
  451820:	b.ls	451900 <_obstack_memory_used@@Base+0x10764>  // b.plast
  451824:	sub	x5, x5, #0x1
  451828:	sub	x0, x0, x11
  45182c:	orr	x2, x5, x1, lsl #32
  451830:	lsr	x1, x2, #32
  451834:	and	x10, x2, #0xffffffff
  451838:	mul	x5, x16, x10
  45183c:	mul	x16, x1, x16
  451840:	mul	x1, x14, x1
  451844:	madd	x14, x14, x10, x16
  451848:	add	x14, x14, x5, lsr #32
  45184c:	mov	x10, #0x100000000           	// #4294967296
  451850:	add	x10, x1, x10
  451854:	cmp	x16, x14
  451858:	csel	x1, x10, x1, hi  // hi = pmore
  45185c:	add	x1, x1, x14, lsr #32
  451860:	and	x5, x5, #0xffffffff
  451864:	add	x14, x5, x14, lsl #32
  451868:	cmp	x0, x1
  45186c:	b.cc	45187c <_obstack_memory_used@@Base+0x106e0>  // b.lo, b.ul, b.last
  451870:	cmp	x14, #0x0
  451874:	ccmp	x0, x1, #0x0, ne  // ne = any
  451878:	b.ne	45190c <_obstack_memory_used@@Base+0x10770>  // b.any
  45187c:	sub	x5, x2, #0x1
  451880:	adds	x0, x0, x7
  451884:	b.cs	4518b0 <_obstack_memory_used@@Base+0x10714>  // b.hs, b.nlast
  451888:	cmp	x0, x1
  45188c:	b.cc	451898 <_obstack_memory_used@@Base+0x106fc>  // b.lo, b.ul, b.last
  451890:	ccmp	x8, x14, #0x2, eq  // eq = none
  451894:	b.cs	4518b0 <_obstack_memory_used@@Base+0x10714>  // b.hs, b.nlast
  451898:	sub	x5, x2, #0x2
  45189c:	lsl	x2, x8, #1
  4518a0:	cmp	x8, x2
  4518a4:	cinc	x7, x7, hi  // hi = pmore
  4518a8:	add	x0, x0, x7
  4518ac:	mov	x8, x2
  4518b0:	cmp	x0, x1
  4518b4:	orr	x0, x5, #0x1
  4518b8:	ccmp	x8, x14, #0x0, eq  // eq = none
  4518bc:	csel	x5, x0, x5, ne  // ne = any
  4518c0:	mov	x2, x9
  4518c4:	b	451608 <_obstack_memory_used@@Base+0x1046c>
  4518c8:	sub	x6, x6, #0x1
  4518cc:	mov	x0, x13
  4518d0:	mov	x2, x10
  4518d4:	mov	x13, #0x0                   	// #0
  4518d8:	b	4516b0 <_obstack_memory_used@@Base+0x10514>
  4518dc:	sub	x4, x4, #0x2
  4518e0:	add	x1, x1, x7
  4518e4:	b	4516ec <_obstack_memory_used@@Base+0x10550>
  4518e8:	sub	x15, x15, #0x2
  4518ec:	add	x0, x0, x7
  4518f0:	b	45171c <_obstack_memory_used@@Base+0x10580>
  4518f4:	sub	x1, x1, #0x2
  4518f8:	add	x0, x0, x7
  4518fc:	b	4517f4 <_obstack_memory_used@@Base+0x10658>
  451900:	sub	x5, x5, #0x2
  451904:	add	x0, x0, x7
  451908:	b	451828 <_obstack_memory_used@@Base+0x1068c>
  45190c:	mov	x5, x2
  451910:	mov	x8, #0x0                   	// #0
  451914:	b	4518b0 <_obstack_memory_used@@Base+0x10714>
  451918:	tbz	x10, #47, 451bf0 <_obstack_memory_used@@Base+0x10a54>
  45191c:	ands	x1, x4, #0x800000000000
  451920:	csel	x4, x10, x4, ne  // ne = any
  451924:	cmp	x1, #0x0
  451928:	csel	x5, x13, x5, ne  // ne = any
  45192c:	csel	x2, x0, x2, ne  // ne = any
  451930:	b	4515dc <_obstack_memory_used@@Base+0x10440>
  451934:	orr	w3, w3, #0x2
  451938:	b	451434 <_obstack_memory_used@@Base+0x10298>
  45193c:	mov	x4, x10
  451940:	mov	x5, x13
  451944:	mov	x2, x0
  451948:	mov	x7, x14
  45194c:	b	4515f4 <_obstack_memory_used@@Base+0x10458>
  451950:	cmp	x7, #0x2
  451954:	b.ne	4515dc <_obstack_memory_used@@Base+0x10440>  // b.any
  451958:	mov	x9, x2
  45195c:	b	451434 <_obstack_memory_used@@Base+0x10298>
  451960:	and	x1, x5, #0xf
  451964:	cmp	x1, #0x4
  451968:	b.eq	45163c <_obstack_memory_used@@Base+0x104a0>  // b.none
  45196c:	adds	x5, x5, #0x4
  451970:	cinc	x4, x4, cs  // cs = hs, nlast
  451974:	b	45163c <_obstack_memory_used@@Base+0x104a0>
  451978:	cbnz	x2, 45163c <_obstack_memory_used@@Base+0x104a0>
  45197c:	adds	x5, x5, #0x8
  451980:	cinc	x4, x4, cs  // cs = hs, nlast
  451984:	b	45163c <_obstack_memory_used@@Base+0x104a0>
  451988:	cbz	x2, 45163c <_obstack_memory_used@@Base+0x104a0>
  45198c:	adds	x5, x5, #0x8
  451990:	cinc	x4, x4, cs  // cs = hs, nlast
  451994:	b	45163c <_obstack_memory_used@@Base+0x104a0>
  451998:	and	x5, x12, #0xc00000
  45199c:	cmp	x5, #0x400, lsl #12
  4519a0:	b.eq	4519ec <_obstack_memory_used@@Base+0x10850>  // b.none
  4519a4:	cmp	x5, #0x800, lsl #12
  4519a8:	b.eq	451a04 <_obstack_memory_used@@Base+0x10868>  // b.none
  4519ac:	mov	x6, #0x7fff                	// #32767
  4519b0:	cbz	x5, 4519bc <_obstack_memory_used@@Base+0x10820>
  4519b4:	mov	x5, #0xffffffffffffffff    	// #-1
  4519b8:	mov	x6, #0x7ffe                	// #32766
  4519bc:	mov	w0, #0x14                  	// #20
  4519c0:	orr	w3, w3, w0
  4519c4:	mov	x4, x5
  4519c8:	mov	x1, #0x0                   	// #0
  4519cc:	mov	x0, x5
  4519d0:	bfxil	x1, x4, #0, #48
  4519d4:	bfi	x1, x6, #48, #15
  4519d8:	bfi	x1, x2, #63, #1
  4519dc:	stp	x0, x1, [sp, #16]
  4519e0:	mov	w0, w3
  4519e4:	bl	4527e4 <_obstack_memory_used@@Base+0x11648>
  4519e8:	b	451bc4 <_obstack_memory_used@@Base+0x10a28>
  4519ec:	cmp	x2, #0x0
  4519f0:	csetm	x5, ne  // ne = any
  4519f4:	mov	x6, #0x7ffe                	// #32766
  4519f8:	mov	x0, #0x7fff                	// #32767
  4519fc:	csel	x6, x6, x0, ne  // ne = any
  451a00:	b	4519bc <_obstack_memory_used@@Base+0x10820>
  451a04:	cmp	x2, #0x0
  451a08:	csetm	x5, eq  // eq = none
  451a0c:	mov	x6, #0x7ffe                	// #32766
  451a10:	mov	x0, #0x7fff                	// #32767
  451a14:	csel	x6, x6, x0, eq  // eq = none
  451a18:	b	4519bc <_obstack_memory_used@@Base+0x10820>
  451a1c:	mov	x1, #0x1                   	// #1
  451a20:	sub	x0, x1, x0
  451a24:	cmp	x0, #0x74
  451a28:	b.gt	451b2c <_obstack_memory_used@@Base+0x10990>
  451a2c:	cmp	x0, #0x3f
  451a30:	b.gt	451a74 <_obstack_memory_used@@Base+0x108d8>
  451a34:	mov	w6, #0x40                  	// #64
  451a38:	sub	w6, w6, w0
  451a3c:	lsl	x1, x4, x6
  451a40:	lsr	x7, x5, x0
  451a44:	orr	x1, x1, x7
  451a48:	lsl	x5, x5, x6
  451a4c:	cmp	x5, #0x0
  451a50:	cset	x5, ne  // ne = any
  451a54:	orr	x1, x1, x5
  451a58:	lsr	x0, x4, x0
  451a5c:	tst	x1, #0x7
  451a60:	b.ne	451abc <_obstack_memory_used@@Base+0x10920>  // b.any
  451a64:	tbnz	x0, #51, 451adc <_obstack_memory_used@@Base+0x10940>
  451a68:	extr	x5, x0, x1, #3
  451a6c:	lsr	x4, x0, #3
  451a70:	b	451aac <_obstack_memory_used@@Base+0x10910>
  451a74:	sub	w6, w0, #0x40
  451a78:	lsr	x6, x4, x6
  451a7c:	mov	w1, #0x80                  	// #128
  451a80:	sub	w1, w1, w0
  451a84:	lsl	x4, x4, x1
  451a88:	cmp	x0, #0x40
  451a8c:	csel	x0, x4, xzr, ne  // ne = any
  451a90:	orr	x5, x0, x5
  451a94:	cmp	x5, #0x0
  451a98:	cset	x1, ne  // ne = any
  451a9c:	orr	x1, x6, x1
  451aa0:	lsr	x5, x6, #3
  451aa4:	ands	x4, x1, #0x7
  451aa8:	b.ne	451ab8 <_obstack_memory_used@@Base+0x1091c>  // b.any
  451aac:	tbz	w12, #11, 451be4 <_obstack_memory_used@@Base+0x10a48>
  451ab0:	mov	x6, #0x0                   	// #0
  451ab4:	b	451aec <_obstack_memory_used@@Base+0x10950>
  451ab8:	mov	x0, #0x0                   	// #0
  451abc:	orr	w3, w3, #0x10
  451ac0:	and	x12, x12, #0xc00000
  451ac4:	cmp	x12, #0x400, lsl #12
  451ac8:	b.eq	451b0c <_obstack_memory_used@@Base+0x10970>  // b.none
  451acc:	cmp	x12, #0x800, lsl #12
  451ad0:	b.eq	451b1c <_obstack_memory_used@@Base+0x10980>  // b.none
  451ad4:	cbz	x12, 451af4 <_obstack_memory_used@@Base+0x10958>
  451ad8:	tbz	x0, #51, 451c00 <_obstack_memory_used@@Base+0x10a64>
  451adc:	orr	w3, w3, #0x10
  451ae0:	mov	x4, #0x0                   	// #0
  451ae4:	mov	x5, #0x0                   	// #0
  451ae8:	mov	x6, #0x1                   	// #1
  451aec:	orr	w3, w3, #0x8
  451af0:	b	4519c8 <_obstack_memory_used@@Base+0x1082c>
  451af4:	and	x4, x1, #0xf
  451af8:	cmp	x4, #0x4
  451afc:	b.eq	451ad8 <_obstack_memory_used@@Base+0x1093c>  // b.none
  451b00:	adds	x1, x1, #0x4
  451b04:	cinc	x0, x0, cs  // cs = hs, nlast
  451b08:	b	451ad8 <_obstack_memory_used@@Base+0x1093c>
  451b0c:	cbnz	x2, 451ad8 <_obstack_memory_used@@Base+0x1093c>
  451b10:	adds	x1, x1, #0x8
  451b14:	cinc	x0, x0, cs  // cs = hs, nlast
  451b18:	b	451ad8 <_obstack_memory_used@@Base+0x1093c>
  451b1c:	cbz	x2, 451ad8 <_obstack_memory_used@@Base+0x1093c>
  451b20:	adds	x1, x1, #0x8
  451b24:	cinc	x0, x0, cs  // cs = hs, nlast
  451b28:	b	451ad8 <_obstack_memory_used@@Base+0x1093c>
  451b2c:	orr	x5, x5, x4
  451b30:	cbz	x5, 451b5c <_obstack_memory_used@@Base+0x109c0>
  451b34:	orr	w3, w3, #0x10
  451b38:	and	x12, x12, #0xc00000
  451b3c:	cmp	x12, #0x400, lsl #12
  451b40:	b.eq	451b6c <_obstack_memory_used@@Base+0x109d0>  // b.none
  451b44:	cmp	x12, #0x800, lsl #12
  451b48:	b.eq	451b7c <_obstack_memory_used@@Base+0x109e0>  // b.none
  451b4c:	cmp	x12, #0x0
  451b50:	mov	x5, #0x5                   	// #5
  451b54:	csinc	x5, x5, xzr, eq  // eq = none
  451b58:	lsr	x5, x5, #3
  451b5c:	orr	w3, w3, #0x8
  451b60:	mov	x4, #0x0                   	// #0
  451b64:	mov	x6, #0x0                   	// #0
  451b68:	b	4519c8 <_obstack_memory_used@@Base+0x1082c>
  451b6c:	cmp	x2, #0x0
  451b70:	mov	x5, #0x9                   	// #9
  451b74:	csinc	x5, x5, xzr, eq  // eq = none
  451b78:	b	451b58 <_obstack_memory_used@@Base+0x109bc>
  451b7c:	cmp	x2, #0x0
  451b80:	mov	x5, #0x9                   	// #9
  451b84:	csinc	x5, x5, xzr, ne  // ne = any
  451b88:	b	451b58 <_obstack_memory_used@@Base+0x109bc>
  451b8c:	mov	x4, #0x0                   	// #0
  451b90:	mov	x5, #0x0                   	// #0
  451b94:	mov	x6, #0x0                   	// #0
  451b98:	b	451ba8 <_obstack_memory_used@@Base+0x10a0c>
  451b9c:	mov	x4, #0x0                   	// #0
  451ba0:	mov	x5, #0x0                   	// #0
  451ba4:	mov	x6, #0x0                   	// #0
  451ba8:	mov	x1, #0x0                   	// #0
  451bac:	mov	x0, x5
  451bb0:	bfxil	x1, x4, #0, #48
  451bb4:	bfi	x1, x6, #48, #15
  451bb8:	bfi	x1, x9, #63, #1
  451bbc:	stp	x0, x1, [sp, #16]
  451bc0:	cbnz	w3, 4519e0 <_obstack_memory_used@@Base+0x10844>
  451bc4:	ldr	q0, [sp, #16]
  451bc8:	ldp	x29, x30, [sp], #32
  451bcc:	ret
  451bd0:	mov	x9, x2
  451bd4:	mov	x4, #0x0                   	// #0
  451bd8:	mov	x5, #0x0                   	// #0
  451bdc:	mov	x6, #0x0                   	// #0
  451be0:	b	451ba8 <_obstack_memory_used@@Base+0x10a0c>
  451be4:	mov	x9, x2
  451be8:	mov	x6, #0x0                   	// #0
  451bec:	b	451ba8 <_obstack_memory_used@@Base+0x10a0c>
  451bf0:	mov	x4, x10
  451bf4:	mov	x5, x13
  451bf8:	mov	x2, x0
  451bfc:	b	4515dc <_obstack_memory_used@@Base+0x10440>
  451c00:	extr	x5, x0, x1, #3
  451c04:	lsr	x4, x0, #3
  451c08:	mov	x6, #0x0                   	// #0
  451c0c:	b	451aec <_obstack_memory_used@@Base+0x10950>
  451c10:	stp	x29, x30, [sp, #-32]!
  451c14:	mov	x29, sp
  451c18:	str	q0, [sp, #16]
  451c1c:	ldr	x5, [sp, #16]
  451c20:	ldr	x0, [sp, #24]
  451c24:	str	q1, [sp, #16]
  451c28:	ldr	x6, [sp, #16]
  451c2c:	ldr	x2, [sp, #24]
  451c30:	mrs	x1, fpcr
  451c34:	mov	x10, x5
  451c38:	ubfx	x7, x0, #0, #48
  451c3c:	ubfx	x3, x0, #48, #15
  451c40:	lsr	x0, x0, #63
  451c44:	and	w1, w0, #0xff
  451c48:	mov	x9, x6
  451c4c:	ubfx	x8, x2, #0, #48
  451c50:	ubfx	x4, x2, #48, #15
  451c54:	lsr	x0, x2, #63
  451c58:	and	w2, w0, #0xff
  451c5c:	mov	x0, #0x7fff                	// #32767
  451c60:	cmp	x3, x0
  451c64:	b.eq	451c88 <_obstack_memory_used@@Base+0x10aec>  // b.none
  451c68:	mov	x0, #0x7fff                	// #32767
  451c6c:	cmp	x4, x0
  451c70:	b.eq	451ca4 <_obstack_memory_used@@Base+0x10b08>  // b.none
  451c74:	mov	w0, #0x1                   	// #1
  451c78:	cmp	x3, x4
  451c7c:	b.eq	451cd4 <_obstack_memory_used@@Base+0x10b38>  // b.none
  451c80:	ldp	x29, x30, [sp], #32
  451c84:	ret
  451c88:	orr	x0, x7, x5
  451c8c:	cbnz	x0, 451d0c <_obstack_memory_used@@Base+0x10b70>
  451c90:	mov	x0, #0x7fff                	// #32767
  451c94:	cmp	x4, x0
  451c98:	b.eq	451ca4 <_obstack_memory_used@@Base+0x10b08>  // b.none
  451c9c:	mov	w0, #0x1                   	// #1
  451ca0:	b	451c80 <_obstack_memory_used@@Base+0x10ae4>
  451ca4:	orr	x0, x8, x9
  451ca8:	cbz	x0, 451c74 <_obstack_memory_used@@Base+0x10ad8>
  451cac:	mov	x0, #0x7fff                	// #32767
  451cb0:	cmp	x3, x0
  451cb4:	b.eq	451d04 <_obstack_memory_used@@Base+0x10b68>  // b.none
  451cb8:	mov	w0, #0x1                   	// #1
  451cbc:	tst	x8, #0x800000000000
  451cc0:	b.ne	451c80 <_obstack_memory_used@@Base+0x10ae4>  // b.any
  451cc4:	mov	w0, #0x1                   	// #1
  451cc8:	bl	4527e4 <_obstack_memory_used@@Base+0x11648>
  451ccc:	mov	w0, #0x1                   	// #1
  451cd0:	b	451c80 <_obstack_memory_used@@Base+0x10ae4>
  451cd4:	cmp	x7, x8
  451cd8:	ccmp	x5, x6, #0x0, eq  // eq = none
  451cdc:	b.ne	451c80 <_obstack_memory_used@@Base+0x10ae4>  // b.any
  451ce0:	mov	w0, #0x0                   	// #0
  451ce4:	cmp	w1, w2
  451ce8:	b.eq	451c80 <_obstack_memory_used@@Base+0x10ae4>  // b.none
  451cec:	mov	w0, #0x1                   	// #1
  451cf0:	cbnz	x3, 451c80 <_obstack_memory_used@@Base+0x10ae4>
  451cf4:	orr	x7, x7, x10
  451cf8:	cmp	x7, #0x0
  451cfc:	cset	w0, ne  // ne = any
  451d00:	b	451c80 <_obstack_memory_used@@Base+0x10ae4>
  451d04:	orr	x10, x7, x10
  451d08:	cbz	x10, 451d24 <_obstack_memory_used@@Base+0x10b88>
  451d0c:	tst	x7, #0x800000000000
  451d10:	b.eq	451cc4 <_obstack_memory_used@@Base+0x10b28>  // b.none
  451d14:	mov	w0, #0x1                   	// #1
  451d18:	mov	x1, #0x7fff                	// #32767
  451d1c:	cmp	x4, x1
  451d20:	b.ne	451c80 <_obstack_memory_used@@Base+0x10ae4>  // b.any
  451d24:	orr	x9, x8, x9
  451d28:	mov	w0, #0x1                   	// #1
  451d2c:	cbz	x9, 451c80 <_obstack_memory_used@@Base+0x10ae4>
  451d30:	b	451cb8 <_obstack_memory_used@@Base+0x10b1c>
  451d34:	stp	x29, x30, [sp, #-32]!
  451d38:	mov	x29, sp
  451d3c:	str	q0, [sp, #16]
  451d40:	ldr	x7, [sp, #16]
  451d44:	ldr	x1, [sp, #24]
  451d48:	str	q1, [sp, #16]
  451d4c:	ldr	x8, [sp, #16]
  451d50:	ldr	x0, [sp, #24]
  451d54:	mrs	x2, fpcr
  451d58:	mov	x5, x7
  451d5c:	ubfx	x9, x1, #0, #48
  451d60:	ubfx	x3, x1, #48, #15
  451d64:	lsr	x1, x1, #63
  451d68:	and	w2, w1, #0xff
  451d6c:	mov	x6, x8
  451d70:	ubfx	x10, x0, #0, #48
  451d74:	ubfx	x4, x0, #48, #15
  451d78:	lsr	x0, x0, #63
  451d7c:	and	w1, w0, #0xff
  451d80:	mov	x0, #0x7fff                	// #32767
  451d84:	cmp	x3, x0
  451d88:	b.eq	451dc8 <_obstack_memory_used@@Base+0x10c2c>  // b.none
  451d8c:	mov	x0, #0x7fff                	// #32767
  451d90:	cmp	x4, x0
  451d94:	b.eq	451de4 <_obstack_memory_used@@Base+0x10c48>  // b.none
  451d98:	mov	w0, #0x0                   	// #0
  451d9c:	cbnz	x3, 451dac <_obstack_memory_used@@Base+0x10c10>
  451da0:	orr	x5, x5, x9
  451da4:	cmp	x5, #0x0
  451da8:	cset	w0, eq  // eq = none
  451dac:	cbnz	x4, 451df4 <_obstack_memory_used@@Base+0x10c58>
  451db0:	orr	x6, x10, x6
  451db4:	cbnz	x6, 451df4 <_obstack_memory_used@@Base+0x10c58>
  451db8:	cbz	w0, 451e08 <_obstack_memory_used@@Base+0x10c6c>
  451dbc:	mov	w0, #0x0                   	// #0
  451dc0:	ldp	x29, x30, [sp], #32
  451dc4:	ret
  451dc8:	orr	x0, x7, x9
  451dcc:	cbnz	x0, 451e90 <_obstack_memory_used@@Base+0x10cf4>
  451dd0:	mov	x0, #0x7fff                	// #32767
  451dd4:	cmp	x4, x0
  451dd8:	b.eq	451de4 <_obstack_memory_used@@Base+0x10c48>  // b.none
  451ddc:	mov	w0, #0x0                   	// #0
  451de0:	b	451dac <_obstack_memory_used@@Base+0x10c10>
  451de4:	orr	x0, x10, x6
  451de8:	cbnz	x0, 451e90 <_obstack_memory_used@@Base+0x10cf4>
  451dec:	mov	w0, #0x0                   	// #0
  451df0:	cbz	x3, 451da0 <_obstack_memory_used@@Base+0x10c04>
  451df4:	and	x1, x1, #0xff
  451df8:	cbz	w0, 451ea0 <_obstack_memory_used@@Base+0x10d04>
  451dfc:	cmp	x1, #0x0
  451e00:	csinv	w0, w0, wzr, ne  // ne = any
  451e04:	b	451dc0 <_obstack_memory_used@@Base+0x10c24>
  451e08:	mov	w0, #0x1                   	// #1
  451e0c:	cmp	w2, #0x0
  451e10:	cneg	w0, w0, ne  // ne = any
  451e14:	b	451dc0 <_obstack_memory_used@@Base+0x10c24>
  451e18:	cmp	x3, x4
  451e1c:	b.le	451e30 <_obstack_memory_used@@Base+0x10c94>
  451e20:	mov	w0, #0x1                   	// #1
  451e24:	cmp	x5, #0x0
  451e28:	cneg	w0, w0, ne  // ne = any
  451e2c:	b	451dc0 <_obstack_memory_used@@Base+0x10c24>
  451e30:	b.ge	451e44 <_obstack_memory_used@@Base+0x10ca8>  // b.tcont
  451e34:	mov	w0, #0xffffffff            	// #-1
  451e38:	cmp	x5, #0x0
  451e3c:	cneg	w0, w0, ne  // ne = any
  451e40:	b	451dc0 <_obstack_memory_used@@Base+0x10c24>
  451e44:	cmp	x9, x10
  451e48:	b.hi	451e5c <_obstack_memory_used@@Base+0x10cc0>  // b.pmore
  451e4c:	cset	w1, eq  // eq = none
  451e50:	cmp	w1, #0x0
  451e54:	ccmp	x7, x8, #0x0, ne  // ne = any
  451e58:	b.ls	451e6c <_obstack_memory_used@@Base+0x10cd0>  // b.plast
  451e5c:	mov	w0, #0x1                   	// #1
  451e60:	cmp	x5, #0x0
  451e64:	cneg	w0, w0, ne  // ne = any
  451e68:	b	451dc0 <_obstack_memory_used@@Base+0x10c24>
  451e6c:	cmp	x9, x10
  451e70:	b.cc	451e80 <_obstack_memory_used@@Base+0x10ce4>  // b.lo, b.ul, b.last
  451e74:	cmp	w1, #0x0
  451e78:	ccmp	x7, x8, #0x2, ne  // ne = any
  451e7c:	b.cs	451dc0 <_obstack_memory_used@@Base+0x10c24>  // b.hs, b.nlast
  451e80:	mov	w0, #0xffffffff            	// #-1
  451e84:	cmp	x5, #0x0
  451e88:	cneg	w0, w0, ne  // ne = any
  451e8c:	b	451dc0 <_obstack_memory_used@@Base+0x10c24>
  451e90:	mov	w0, #0x1                   	// #1
  451e94:	bl	4527e4 <_obstack_memory_used@@Base+0x11648>
  451e98:	mov	w0, #0x2                   	// #2
  451e9c:	b	451dc0 <_obstack_memory_used@@Base+0x10c24>
  451ea0:	and	x5, x2, #0xff
  451ea4:	cmp	x1, w2, uxtb
  451ea8:	b.eq	451e18 <_obstack_memory_used@@Base+0x10c7c>  // b.none
  451eac:	mov	w0, #0x1                   	// #1
  451eb0:	cmp	x5, #0x0
  451eb4:	cneg	w0, w0, ne  // ne = any
  451eb8:	b	451dc0 <_obstack_memory_used@@Base+0x10c24>
  451ebc:	stp	x29, x30, [sp, #-32]!
  451ec0:	mov	x29, sp
  451ec4:	str	q0, [sp, #16]
  451ec8:	ldr	x2, [sp, #16]
  451ecc:	ldr	x0, [sp, #24]
  451ed0:	str	q1, [sp, #16]
  451ed4:	ldr	x7, [sp, #16]
  451ed8:	ldr	x1, [sp, #24]
  451edc:	mrs	x13, fpcr
  451ee0:	ubfx	x8, x0, #0, #48
  451ee4:	ubfx	x9, x0, #48, #15
  451ee8:	lsr	x0, x0, #63
  451eec:	and	w11, w0, #0xff
  451ef0:	cbz	w9, 451fd8 <_obstack_memory_used@@Base+0x10e3c>
  451ef4:	mov	x4, x8
  451ef8:	mov	w5, #0x7fff                	// #32767
  451efc:	cmp	w9, w5
  451f00:	b.eq	452040 <_obstack_memory_used@@Base+0x10ea4>  // b.none
  451f04:	extr	x4, x8, x2, #61
  451f08:	orr	x4, x4, #0x8000000000000
  451f0c:	lsl	x5, x2, #3
  451f10:	and	x9, x9, #0xffff
  451f14:	sub	x9, x9, #0x3, lsl #12
  451f18:	sub	x9, x9, #0xfff
  451f1c:	mov	x6, #0x0                   	// #0
  451f20:	mov	w8, #0x0                   	// #0
  451f24:	ubfx	x14, x1, #0, #48
  451f28:	ubfx	x12, x1, #48, #15
  451f2c:	lsr	x1, x1, #63
  451f30:	and	w3, w1, #0xff
  451f34:	cbz	w12, 452088 <_obstack_memory_used@@Base+0x10eec>
  451f38:	mov	w10, #0x7fff                	// #32767
  451f3c:	cmp	w12, w10
  451f40:	b.eq	4520ec <_obstack_memory_used@@Base+0x10f50>  // b.none
  451f44:	extr	x10, x14, x7, #61
  451f48:	orr	x10, x10, #0x8000000000000
  451f4c:	lsl	x7, x7, #3
  451f50:	and	x12, x12, #0xffff
  451f54:	sub	x12, x12, #0x3, lsl #12
  451f58:	sub	x12, x12, #0xfff
  451f5c:	mov	x14, #0x0                   	// #0
  451f60:	eor	w11, w11, w3
  451f64:	and	x11, x11, #0xff
  451f68:	add	x12, x9, x12
  451f6c:	add	x9, x12, #0x1
  451f70:	orr	x3, x14, x6, lsl #2
  451f74:	cmp	x3, #0xa
  451f78:	b.le	45218c <_obstack_memory_used@@Base+0x10ff0>
  451f7c:	cmp	x3, #0xc
  451f80:	csel	x1, x1, x0, lt  // lt = tstop
  451f84:	csel	x4, x10, x4, lt  // lt = tstop
  451f88:	csel	x5, x7, x5, lt  // lt = tstop
  451f8c:	csel	x6, x14, x6, lt  // lt = tstop
  451f90:	cmp	x6, #0x2
  451f94:	b.eq	452574 <_obstack_memory_used@@Base+0x113d8>  // b.none
  451f98:	b.gt	4521d8 <_obstack_memory_used@@Base+0x1103c>
  451f9c:	cbz	x6, 452594 <_obstack_memory_used@@Base+0x113f8>
  451fa0:	cmp	x6, #0x1
  451fa4:	csel	x4, x4, xzr, ne  // ne = any
  451fa8:	csel	x5, x5, xzr, ne  // ne = any
  451fac:	csel	x9, x9, xzr, ne  // ne = any
  451fb0:	mov	x3, #0x0                   	// #0
  451fb4:	mov	x2, x5
  451fb8:	bfxil	x3, x4, #0, #48
  451fbc:	bfi	x3, x9, #48, #15
  451fc0:	bfi	x3, x1, #63, #1
  451fc4:	stp	x2, x3, [sp, #16]
  451fc8:	cbnz	w8, 4523c8 <_obstack_memory_used@@Base+0x1122c>
  451fcc:	ldr	q0, [sp, #16]
  451fd0:	ldp	x29, x30, [sp], #32
  451fd4:	ret
  451fd8:	orr	x5, x8, x2
  451fdc:	cbz	x5, 452060 <_obstack_memory_used@@Base+0x10ec4>
  451fe0:	cbz	x8, 45201c <_obstack_memory_used@@Base+0x10e80>
  451fe4:	clz	x6, x8
  451fe8:	sub	x4, x6, #0xf
  451fec:	add	w5, w4, #0x3
  451ff0:	lsl	x8, x8, x5
  451ff4:	mov	w3, #0x3d                  	// #61
  451ff8:	sub	w4, w3, w4
  451ffc:	lsr	x4, x2, x4
  452000:	orr	x4, x4, x8
  452004:	lsl	x5, x2, x5
  452008:	mov	x9, #0xffffffffffffc011    	// #-16367
  45200c:	sub	x9, x9, x6
  452010:	mov	x6, #0x0                   	// #0
  452014:	mov	w8, #0x0                   	// #0
  452018:	b	451f24 <_obstack_memory_used@@Base+0x10d88>
  45201c:	clz	x4, x2
  452020:	add	x6, x4, #0x40
  452024:	add	x4, x4, #0x31
  452028:	cmp	x4, #0x3c
  45202c:	b.le	451fec <_obstack_memory_used@@Base+0x10e50>
  452030:	sub	w4, w4, #0x3d
  452034:	mov	x5, x8
  452038:	lsl	x4, x2, x4
  45203c:	b	452008 <_obstack_memory_used@@Base+0x10e6c>
  452040:	orr	x5, x8, x2
  452044:	cbz	x5, 452074 <_obstack_memory_used@@Base+0x10ed8>
  452048:	lsr	x8, x8, #47
  45204c:	eor	w8, w8, #0x1
  452050:	mov	x5, x2
  452054:	mov	x9, #0x7fff                	// #32767
  452058:	mov	x6, #0x3                   	// #3
  45205c:	b	451f24 <_obstack_memory_used@@Base+0x10d88>
  452060:	mov	x4, x5
  452064:	mov	x9, #0x0                   	// #0
  452068:	mov	x6, #0x1                   	// #1
  45206c:	mov	w8, #0x0                   	// #0
  452070:	b	451f24 <_obstack_memory_used@@Base+0x10d88>
  452074:	mov	x4, x5
  452078:	mov	x9, #0x7fff                	// #32767
  45207c:	mov	x6, #0x2                   	// #2
  452080:	mov	w8, #0x0                   	// #0
  452084:	b	451f24 <_obstack_memory_used@@Base+0x10d88>
  452088:	orr	x10, x14, x7
  45208c:	cbz	x10, 452600 <_obstack_memory_used@@Base+0x11464>
  452090:	cbz	x14, 4520c8 <_obstack_memory_used@@Base+0x10f2c>
  452094:	clz	x15, x14
  452098:	sub	x10, x15, #0xf
  45209c:	add	w12, w10, #0x3
  4520a0:	lsl	x14, x14, x12
  4520a4:	mov	w2, #0x3d                  	// #61
  4520a8:	sub	w10, w2, w10
  4520ac:	lsr	x10, x7, x10
  4520b0:	orr	x10, x10, x14
  4520b4:	lsl	x7, x7, x12
  4520b8:	mov	x12, #0xffffffffffffc011    	// #-16367
  4520bc:	sub	x12, x12, x15
  4520c0:	mov	x14, #0x0                   	// #0
  4520c4:	b	451f60 <_obstack_memory_used@@Base+0x10dc4>
  4520c8:	clz	x10, x7
  4520cc:	add	x15, x10, #0x40
  4520d0:	add	x10, x10, #0x31
  4520d4:	cmp	x10, #0x3c
  4520d8:	b.le	45209c <_obstack_memory_used@@Base+0x10f00>
  4520dc:	sub	w10, w10, #0x3d
  4520e0:	lsl	x10, x7, x10
  4520e4:	mov	x7, x14
  4520e8:	b	4520b8 <_obstack_memory_used@@Base+0x10f1c>
  4520ec:	orr	x10, x14, x7
  4520f0:	cbz	x10, 452160 <_obstack_memory_used@@Base+0x10fc4>
  4520f4:	tst	x14, #0x800000000000
  4520f8:	csinc	w8, w8, wzr, ne  // ne = any
  4520fc:	eor	w11, w11, w3
  452100:	and	x11, x11, #0xff
  452104:	add	x9, x9, #0x8, lsl #12
  452108:	lsl	x2, x6, #2
  45210c:	orr	x3, x2, #0x3
  452110:	cmp	x3, #0xa
  452114:	b.gt	4521e4 <_obstack_memory_used@@Base+0x11048>
  452118:	mov	x10, x14
  45211c:	mov	x14, #0x3                   	// #3
  452120:	mov	x2, #0x1                   	// #1
  452124:	lsl	x2, x2, x3
  452128:	mov	x0, #0x530                 	// #1328
  45212c:	tst	x2, x0
  452130:	b.ne	452340 <_obstack_memory_used@@Base+0x111a4>  // b.any
  452134:	mov	x0, #0x240                 	// #576
  452138:	ands	x2, x2, x0
  45213c:	mov	x4, #0xffffffffffff        	// #281474976710655
  452140:	csel	x4, x10, x4, eq  // eq = none
  452144:	cmp	x2, #0x0
  452148:	csinv	x5, x7, xzr, eq  // eq = none
  45214c:	csel	x1, x1, xzr, eq  // eq = none
  452150:	mov	x6, #0x3                   	// #3
  452154:	csel	x6, x14, x6, eq  // eq = none
  452158:	csinc	w8, w8, wzr, eq  // eq = none
  45215c:	b	451f90 <_obstack_memory_used@@Base+0x10df4>
  452160:	eor	w11, w11, w3
  452164:	and	x11, x11, #0xff
  452168:	add	x12, x9, #0x7, lsl #12
  45216c:	add	x12, x12, #0xfff
  452170:	add	x9, x9, #0x8, lsl #12
  452174:	lsl	x2, x6, #2
  452178:	orr	x3, x2, #0x2
  45217c:	cmp	x3, #0xa
  452180:	b.gt	4521ac <_obstack_memory_used@@Base+0x11010>
  452184:	mov	x7, x10
  452188:	mov	x14, #0x2                   	// #2
  45218c:	cmp	x3, #0x2
  452190:	b.gt	452120 <_obstack_memory_used@@Base+0x10f84>
  452194:	cbz	x3, 4521f0 <_obstack_memory_used@@Base+0x11054>
  452198:	mov	x4, x10
  45219c:	mov	x5, x7
  4521a0:	mov	x1, x11
  4521a4:	mov	x6, x14
  4521a8:	b	451f90 <_obstack_memory_used@@Base+0x10df4>
  4521ac:	mov	x7, x10
  4521b0:	mov	x14, #0x2                   	// #2
  4521b4:	cmp	x3, #0xe
  4521b8:	b.le	451f7c <_obstack_memory_used@@Base+0x10de0>
  4521bc:	tbz	x4, #47, 4521d4 <_obstack_memory_used@@Base+0x11038>
  4521c0:	ands	x2, x10, #0x800000000000
  4521c4:	csel	x4, x4, x10, ne  // ne = any
  4521c8:	cmp	x2, #0x0
  4521cc:	csel	x5, x5, x7, ne  // ne = any
  4521d0:	csel	x0, x0, x1, ne  // ne = any
  4521d4:	mov	x1, x0
  4521d8:	orr	x4, x4, #0x800000000000
  4521dc:	mov	x9, #0x7fff                	// #32767
  4521e0:	b	451fb0 <_obstack_memory_used@@Base+0x10e14>
  4521e4:	mov	x10, x14
  4521e8:	mov	x14, #0x3                   	// #3
  4521ec:	b	4521b4 <_obstack_memory_used@@Base+0x11018>
  4521f0:	lsr	x6, x5, #32
  4521f4:	lsr	x1, x7, #32
  4521f8:	and	x2, x5, #0xffffffff
  4521fc:	and	x7, x7, #0xffffffff
  452200:	mul	x14, x7, x2
  452204:	mul	x3, x6, x7
  452208:	mul	x5, x6, x1
  45220c:	madd	x16, x1, x2, x3
  452210:	add	x16, x16, x14, lsr #32
  452214:	mov	x0, #0x100000000           	// #4294967296
  452218:	add	x0, x5, x0
  45221c:	cmp	x3, x16
  452220:	csel	x5, x0, x5, hi  // hi = pmore
  452224:	and	x14, x14, #0xffffffff
  452228:	add	x14, x14, x16, lsl #32
  45222c:	lsr	x0, x10, #32
  452230:	and	x10, x10, #0xffffffff
  452234:	mul	x3, x2, x10
  452238:	mul	x17, x6, x10
  45223c:	mul	x6, x6, x0
  452240:	madd	x2, x0, x2, x17
  452244:	add	x2, x2, x3, lsr #32
  452248:	mov	x15, #0x100000000           	// #4294967296
  45224c:	add	x15, x6, x15
  452250:	cmp	x17, x2
  452254:	csel	x6, x15, x6, hi  // hi = pmore
  452258:	add	x15, x6, x2, lsr #32
  45225c:	and	x3, x3, #0xffffffff
  452260:	add	x3, x3, x2, lsl #32
  452264:	add	x16, x3, x16, lsr #32
  452268:	lsr	x2, x4, #32
  45226c:	and	x4, x4, #0xffffffff
  452270:	mul	x6, x7, x4
  452274:	mul	x7, x2, x7
  452278:	mul	x17, x1, x2
  45227c:	madd	x1, x1, x4, x7
  452280:	add	x1, x1, x6, lsr #32
  452284:	mov	x18, #0x100000000           	// #4294967296
  452288:	add	x18, x17, x18
  45228c:	cmp	x7, x1
  452290:	csel	x17, x18, x17, hi  // hi = pmore
  452294:	add	x7, x17, x1, lsr #32
  452298:	and	x6, x6, #0xffffffff
  45229c:	add	x1, x6, x1, lsl #32
  4522a0:	mul	x6, x4, x10
  4522a4:	mul	x10, x2, x10
  4522a8:	mul	x2, x0, x2
  4522ac:	madd	x0, x0, x4, x10
  4522b0:	add	x0, x0, x6, lsr #32
  4522b4:	mov	x4, #0x100000000           	// #4294967296
  4522b8:	add	x4, x2, x4
  4522bc:	cmp	x10, x0
  4522c0:	csel	x2, x4, x2, hi  // hi = pmore
  4522c4:	add	x5, x5, x16
  4522c8:	cmp	x5, x3
  4522cc:	cset	x16, cc  // cc = lo, ul, last
  4522d0:	and	x3, x6, #0xffffffff
  4522d4:	add	x3, x3, x0, lsl #32
  4522d8:	add	x3, x3, x15
  4522dc:	cinc	x10, x3, cc  // cc = lo, ul, last
  4522e0:	adds	x1, x5, x1
  4522e4:	cset	x5, cs  // cs = hs, nlast
  4522e8:	add	x4, x10, x7
  4522ec:	cinc	x6, x4, cs  // cs = hs, nlast
  4522f0:	cmp	x3, x15
  4522f4:	ccmp	x10, x16, #0x0, cs  // cs = hs, nlast
  4522f8:	lsr	x0, x0, #32
  4522fc:	cinc	x0, x0, cc  // cc = lo, ul, last
  452300:	cmp	x4, x7
  452304:	ccmp	x6, x5, #0x0, cs  // cs = hs, nlast
  452308:	cinc	x2, x2, cc  // cc = lo, ul, last
  45230c:	add	x0, x0, x2
  452310:	extr	x4, x0, x6, #51
  452314:	orr	x14, x14, x1, lsl #13
  452318:	cmp	x14, #0x0
  45231c:	cset	x5, ne  // ne = any
  452320:	extr	x1, x6, x1, #51
  452324:	orr	x5, x5, x1
  452328:	tbz	x0, #39, 45258c <_obstack_memory_used@@Base+0x113f0>
  45232c:	and	x0, x5, #0x1
  452330:	orr	x5, x0, x5, lsr #1
  452334:	orr	x5, x5, x4, lsl #63
  452338:	lsr	x4, x4, #1
  45233c:	b	452590 <_obstack_memory_used@@Base+0x113f4>
  452340:	mov	x1, x11
  452344:	b	451f90 <_obstack_memory_used@@Base+0x10df4>
  452348:	and	x2, x5, #0xf
  45234c:	cmp	x2, #0x4
  452350:	b.eq	4525c8 <_obstack_memory_used@@Base+0x1142c>  // b.none
  452354:	adds	x5, x5, #0x4
  452358:	cinc	x4, x4, cs  // cs = hs, nlast
  45235c:	b	4525c8 <_obstack_memory_used@@Base+0x1142c>
  452360:	cbnz	x1, 4525c8 <_obstack_memory_used@@Base+0x1142c>
  452364:	adds	x5, x5, #0x8
  452368:	cinc	x4, x4, cs  // cs = hs, nlast
  45236c:	b	4525c8 <_obstack_memory_used@@Base+0x1142c>
  452370:	cbz	x1, 4525c8 <_obstack_memory_used@@Base+0x1142c>
  452374:	adds	x5, x5, #0x8
  452378:	cinc	x4, x4, cs  // cs = hs, nlast
  45237c:	b	4525c8 <_obstack_memory_used@@Base+0x1142c>
  452380:	and	x5, x13, #0xc00000
  452384:	cmp	x5, #0x400, lsl #12
  452388:	b.eq	4523d4 <_obstack_memory_used@@Base+0x11238>  // b.none
  45238c:	cmp	x5, #0x800, lsl #12
  452390:	b.eq	4523ec <_obstack_memory_used@@Base+0x11250>  // b.none
  452394:	mov	x0, #0x7fff                	// #32767
  452398:	cbz	x5, 4523a4 <_obstack_memory_used@@Base+0x11208>
  45239c:	mov	x5, #0xffffffffffffffff    	// #-1
  4523a0:	mov	x0, #0x7ffe                	// #32766
  4523a4:	mov	w2, #0x14                  	// #20
  4523a8:	orr	w8, w8, w2
  4523ac:	mov	x4, x5
  4523b0:	mov	x3, #0x0                   	// #0
  4523b4:	mov	x2, x5
  4523b8:	bfxil	x3, x4, #0, #48
  4523bc:	bfi	x3, x0, #48, #15
  4523c0:	bfi	x3, x1, #63, #1
  4523c4:	stp	x2, x3, [sp, #16]
  4523c8:	mov	w0, w8
  4523cc:	bl	4527e4 <_obstack_memory_used@@Base+0x11648>
  4523d0:	b	451fcc <_obstack_memory_used@@Base+0x10e30>
  4523d4:	cmp	x1, #0x0
  4523d8:	csetm	x5, ne  // ne = any
  4523dc:	mov	x0, #0x7ffe                	// #32766
  4523e0:	mov	x2, #0x7fff                	// #32767
  4523e4:	csel	x0, x0, x2, ne  // ne = any
  4523e8:	b	4523a4 <_obstack_memory_used@@Base+0x11208>
  4523ec:	cmp	x1, #0x0
  4523f0:	csetm	x5, eq  // eq = none
  4523f4:	mov	x0, #0x7ffe                	// #32766
  4523f8:	mov	x2, #0x7fff                	// #32767
  4523fc:	csel	x0, x0, x2, eq  // eq = none
  452400:	b	4523a4 <_obstack_memory_used@@Base+0x11208>
  452404:	mov	x2, #0x1                   	// #1
  452408:	sub	x0, x2, x0
  45240c:	cmp	x0, #0x74
  452410:	b.gt	452514 <_obstack_memory_used@@Base+0x11378>
  452414:	cmp	x0, #0x3f
  452418:	b.gt	45245c <_obstack_memory_used@@Base+0x112c0>
  45241c:	mov	w3, #0x40                  	// #64
  452420:	sub	w3, w3, w0
  452424:	lsl	x2, x4, x3
  452428:	lsr	x6, x5, x0
  45242c:	orr	x2, x2, x6
  452430:	lsl	x3, x5, x3
  452434:	cmp	x3, #0x0
  452438:	cset	x3, ne  // ne = any
  45243c:	orr	x2, x2, x3
  452440:	lsr	x0, x4, x0
  452444:	tst	x2, #0x7
  452448:	b.ne	4524a4 <_obstack_memory_used@@Base+0x11308>  // b.any
  45244c:	tbnz	x0, #51, 4524c4 <_obstack_memory_used@@Base+0x11328>
  452450:	extr	x5, x0, x2, #3
  452454:	lsr	x4, x0, #3
  452458:	b	452494 <_obstack_memory_used@@Base+0x112f8>
  45245c:	sub	w3, w0, #0x40
  452460:	lsr	x3, x4, x3
  452464:	mov	w2, #0x80                  	// #128
  452468:	sub	w2, w2, w0
  45246c:	lsl	x4, x4, x2
  452470:	cmp	x0, #0x40
  452474:	csel	x0, x4, xzr, ne  // ne = any
  452478:	orr	x5, x0, x5
  45247c:	cmp	x5, #0x0
  452480:	cset	x2, ne  // ne = any
  452484:	orr	x2, x3, x2
  452488:	lsr	x5, x3, #3
  45248c:	ands	x4, x2, #0x7
  452490:	b.ne	4524a0 <_obstack_memory_used@@Base+0x11304>  // b.any
  452494:	tbz	w13, #11, 452584 <_obstack_memory_used@@Base+0x113e8>
  452498:	mov	x0, #0x0                   	// #0
  45249c:	b	4524d4 <_obstack_memory_used@@Base+0x11338>
  4524a0:	mov	x0, #0x0                   	// #0
  4524a4:	orr	w8, w8, #0x10
  4524a8:	and	x13, x13, #0xc00000
  4524ac:	cmp	x13, #0x400, lsl #12
  4524b0:	b.eq	4524f4 <_obstack_memory_used@@Base+0x11358>  // b.none
  4524b4:	cmp	x13, #0x800, lsl #12
  4524b8:	b.eq	452504 <_obstack_memory_used@@Base+0x11368>  // b.none
  4524bc:	cbz	x13, 4524dc <_obstack_memory_used@@Base+0x11340>
  4524c0:	tbz	x0, #51, 4525f0 <_obstack_memory_used@@Base+0x11454>
  4524c4:	orr	w8, w8, #0x10
  4524c8:	mov	x4, #0x0                   	// #0
  4524cc:	mov	x5, #0x0                   	// #0
  4524d0:	mov	x0, #0x1                   	// #1
  4524d4:	orr	w8, w8, #0x8
  4524d8:	b	4523b0 <_obstack_memory_used@@Base+0x11214>
  4524dc:	and	x3, x2, #0xf
  4524e0:	cmp	x3, #0x4
  4524e4:	b.eq	4524c0 <_obstack_memory_used@@Base+0x11324>  // b.none
  4524e8:	adds	x2, x2, #0x4
  4524ec:	cinc	x0, x0, cs  // cs = hs, nlast
  4524f0:	b	4524c0 <_obstack_memory_used@@Base+0x11324>
  4524f4:	cbnz	x1, 4524c0 <_obstack_memory_used@@Base+0x11324>
  4524f8:	adds	x2, x2, #0x8
  4524fc:	cinc	x0, x0, cs  // cs = hs, nlast
  452500:	b	4524c0 <_obstack_memory_used@@Base+0x11324>
  452504:	cbz	x1, 4524c0 <_obstack_memory_used@@Base+0x11324>
  452508:	adds	x2, x2, #0x8
  45250c:	cinc	x0, x0, cs  // cs = hs, nlast
  452510:	b	4524c0 <_obstack_memory_used@@Base+0x11324>
  452514:	orr	x5, x5, x4
  452518:	cbz	x5, 452544 <_obstack_memory_used@@Base+0x113a8>
  45251c:	orr	w8, w8, #0x10
  452520:	and	x13, x13, #0xc00000
  452524:	cmp	x13, #0x400, lsl #12
  452528:	b.eq	452554 <_obstack_memory_used@@Base+0x113b8>  // b.none
  45252c:	cmp	x13, #0x800, lsl #12
  452530:	b.eq	452564 <_obstack_memory_used@@Base+0x113c8>  // b.none
  452534:	cmp	x13, #0x0
  452538:	mov	x5, #0x5                   	// #5
  45253c:	csinc	x5, x5, xzr, eq  // eq = none
  452540:	lsr	x5, x5, #3
  452544:	orr	w8, w8, #0x8
  452548:	mov	x4, #0x0                   	// #0
  45254c:	mov	x0, #0x0                   	// #0
  452550:	b	4523b0 <_obstack_memory_used@@Base+0x11214>
  452554:	cmp	x1, #0x0
  452558:	mov	x5, #0x9                   	// #9
  45255c:	csinc	x5, x5, xzr, eq  // eq = none
  452560:	b	452540 <_obstack_memory_used@@Base+0x113a4>
  452564:	cmp	x1, #0x0
  452568:	mov	x5, #0x9                   	// #9
  45256c:	csinc	x5, x5, xzr, ne  // ne = any
  452570:	b	452540 <_obstack_memory_used@@Base+0x113a4>
  452574:	mov	x4, #0x0                   	// #0
  452578:	mov	x5, #0x0                   	// #0
  45257c:	mov	x9, #0x7fff                	// #32767
  452580:	b	451fb0 <_obstack_memory_used@@Base+0x10e14>
  452584:	mov	x9, #0x0                   	// #0
  452588:	b	451fb0 <_obstack_memory_used@@Base+0x10e14>
  45258c:	mov	x9, x12
  452590:	mov	x1, x11
  452594:	add	x0, x9, #0x3, lsl #12
  452598:	add	x0, x0, #0xfff
  45259c:	cmp	x0, #0x0
  4525a0:	b.le	452404 <_obstack_memory_used@@Base+0x11268>
  4525a4:	tst	x5, #0x7
  4525a8:	b.eq	4525c8 <_obstack_memory_used@@Base+0x1142c>  // b.none
  4525ac:	orr	w8, w8, #0x10
  4525b0:	and	x2, x13, #0xc00000
  4525b4:	cmp	x2, #0x400, lsl #12
  4525b8:	b.eq	452360 <_obstack_memory_used@@Base+0x111c4>  // b.none
  4525bc:	cmp	x2, #0x800, lsl #12
  4525c0:	b.eq	452370 <_obstack_memory_used@@Base+0x111d4>  // b.none
  4525c4:	cbz	x2, 452348 <_obstack_memory_used@@Base+0x111ac>
  4525c8:	tbz	x4, #52, 4525d4 <_obstack_memory_used@@Base+0x11438>
  4525cc:	and	x4, x4, #0xffefffffffffffff
  4525d0:	add	x0, x9, #0x4, lsl #12
  4525d4:	mov	x2, #0x7ffe                	// #32766
  4525d8:	cmp	x0, x2
  4525dc:	b.gt	452380 <_obstack_memory_used@@Base+0x111e4>
  4525e0:	extr	x5, x4, x5, #3
  4525e4:	lsr	x4, x4, #3
  4525e8:	mov	x9, x0
  4525ec:	b	451fb0 <_obstack_memory_used@@Base+0x10e14>
  4525f0:	extr	x5, x0, x2, #3
  4525f4:	lsr	x4, x0, #3
  4525f8:	mov	x0, #0x0                   	// #0
  4525fc:	b	4524d4 <_obstack_memory_used@@Base+0x11338>
  452600:	mov	x7, x10
  452604:	mov	x12, #0x0                   	// #0
  452608:	mov	x14, #0x1                   	// #1
  45260c:	b	451f60 <_obstack_memory_used@@Base+0x10dc4>
  452610:	cbz	w0, 452654 <_obstack_memory_used@@Base+0x114b8>
  452614:	mov	w0, w0
  452618:	clz	x2, x0
  45261c:	mov	w1, #0x403e                	// #16446
  452620:	sub	w1, w1, w2
  452624:	sxtw	x3, w1
  452628:	mov	w2, #0x402f                	// #16431
  45262c:	sub	w2, w2, w1
  452630:	lsl	x2, x0, x2
  452634:	mov	x0, #0x0                   	// #0
  452638:	mov	x1, #0x0                   	// #0
  45263c:	bfxil	x1, x2, #0, #48
  452640:	bfi	x1, x3, #48, #15
  452644:	and	x1, x1, #0x7fffffffffffffff
  452648:	fmov	d0, x0
  45264c:	fmov	v0.d[1], x1
  452650:	ret
  452654:	mov	x2, #0x0                   	// #0
  452658:	mov	x3, #0x0                   	// #0
  45265c:	b	452634 <_obstack_memory_used@@Base+0x11498>
  452660:	stp	x29, x30, [sp, #-48]!
  452664:	mov	x29, sp
  452668:	str	x19, [sp, #16]
  45266c:	str	q0, [sp, #32]
  452670:	ldr	x19, [sp, #32]
  452674:	ldr	x1, [sp, #40]
  452678:	mrs	x0, fpcr
  45267c:	ubfx	x3, x1, #0, #48
  452680:	ubfx	x4, x1, #48, #15
  452684:	mov	x2, #0x3ffe                	// #16382
  452688:	cmp	x4, x2
  45268c:	b.gt	4526ac <_obstack_memory_used@@Base+0x11510>
  452690:	cbnz	x4, 452754 <_obstack_memory_used@@Base+0x115b8>
  452694:	orr	x19, x19, x3
  452698:	cbnz	x19, 452760 <_obstack_memory_used@@Base+0x115c4>
  45269c:	mov	x0, x19
  4526a0:	ldr	x19, [sp, #16]
  4526a4:	ldp	x29, x30, [sp], #48
  4526a8:	ret
  4526ac:	lsr	x1, x1, #63
  4526b0:	and	w1, w1, #0xff
  4526b4:	mov	x2, #0x403e                	// #16446
  4526b8:	cmp	x4, x2
  4526bc:	cset	w2, gt
  4526c0:	orr	w2, w1, w2
  4526c4:	cbz	w2, 4526dc <_obstack_memory_used@@Base+0x11540>
  4526c8:	eor	w1, w1, #0x1
  4526cc:	sbfx	x19, x1, #0, #1
  4526d0:	mov	w0, #0x1                   	// #1
  4526d4:	bl	4527e4 <_obstack_memory_used@@Base+0x11648>
  4526d8:	b	45269c <_obstack_memory_used@@Base+0x11500>
  4526dc:	orr	x3, x3, #0x1000000000000
  4526e0:	mov	x1, #0x406f                	// #16495
  4526e4:	sub	x0, x1, x4
  4526e8:	cmp	x0, #0x3f
  4526ec:	b.gt	452724 <_obstack_memory_used@@Base+0x11588>
  4526f0:	sub	w2, w4, #0x4, lsl #12
  4526f4:	sub	w2, w2, #0x2f
  4526f8:	lsl	x0, x19, x2
  4526fc:	cmp	x0, #0x0
  452700:	cset	w1, ne  // ne = any
  452704:	mov	w0, #0x406f                	// #16495
  452708:	sub	w0, w0, w4
  45270c:	lsr	x19, x19, x0
  452710:	lsl	x3, x3, x2
  452714:	orr	x19, x19, x3
  452718:	cbz	w1, 45269c <_obstack_memory_used@@Base+0x11500>
  45271c:	mov	w0, #0x10                  	// #16
  452720:	b	4526d4 <_obstack_memory_used@@Base+0x11538>
  452724:	sub	w1, w4, #0x3, lsl #12
  452728:	sub	w1, w1, #0xfef
  45272c:	lsl	x1, x3, x1
  452730:	cmp	x0, #0x40
  452734:	csel	x0, x1, xzr, ne  // ne = any
  452738:	orr	x19, x0, x19
  45273c:	cmp	x19, #0x0
  452740:	cset	w1, ne  // ne = any
  452744:	mov	w0, #0x402f                	// #16431
  452748:	sub	w0, w0, w4
  45274c:	lsr	x19, x3, x0
  452750:	b	452718 <_obstack_memory_used@@Base+0x1157c>
  452754:	mov	x19, #0x0                   	// #0
  452758:	mov	w0, #0x10                  	// #16
  45275c:	b	4526d4 <_obstack_memory_used@@Base+0x11538>
  452760:	mov	x19, #0x0                   	// #0
  452764:	mov	w0, #0x10                  	// #16
  452768:	b	4526d4 <_obstack_memory_used@@Base+0x11538>
  45276c:	cbz	x0, 4527c0 <_obstack_memory_used@@Base+0x11624>
  452770:	clz	x2, x0
  452774:	mov	w1, #0x403e                	// #16446
  452778:	sub	w2, w1, w2
  45277c:	sxtw	x4, w2
  452780:	mov	x1, #0x406f                	// #16495
  452784:	sub	x1, x1, x4
  452788:	cmp	x1, #0x3f
  45278c:	b.gt	4527ac <_obstack_memory_used@@Base+0x11610>
  452790:	sub	w1, w2, #0x4, lsl #12
  452794:	sub	w1, w1, #0x2f
  452798:	lsr	x1, x0, x1
  45279c:	mov	w3, #0x406f                	// #16495
  4527a0:	sub	w2, w3, w2
  4527a4:	lsl	x0, x0, x2
  4527a8:	b	4527c8 <_obstack_memory_used@@Base+0x1162c>
  4527ac:	mov	w1, #0x402f                	// #16431
  4527b0:	sub	w1, w1, w2
  4527b4:	lsl	x1, x0, x1
  4527b8:	mov	x0, #0x0                   	// #0
  4527bc:	b	4527c8 <_obstack_memory_used@@Base+0x1162c>
  4527c0:	mov	x1, x0
  4527c4:	mov	x4, #0x0                   	// #0
  4527c8:	mov	x3, #0x0                   	// #0
  4527cc:	bfxil	x3, x1, #0, #48
  4527d0:	bfi	x3, x4, #48, #15
  4527d4:	and	x3, x3, #0x7fffffffffffffff
  4527d8:	fmov	d0, x0
  4527dc:	fmov	v0.d[1], x3
  4527e0:	ret
  4527e4:	tbz	w0, #0, 4527f4 <_obstack_memory_used@@Base+0x11658>
  4527e8:	movi	v1.2s, #0x0
  4527ec:	fdiv	s0, s1, s1
  4527f0:	mrs	x1, fpsr
  4527f4:	tbz	w0, #1, 452808 <_obstack_memory_used@@Base+0x1166c>
  4527f8:	fmov	s1, #1.000000000000000000e+00
  4527fc:	movi	v2.2s, #0x0
  452800:	fdiv	s0, s1, s2
  452804:	mrs	x1, fpsr
  452808:	tbz	w0, #2, 452828 <_obstack_memory_used@@Base+0x1168c>
  45280c:	mov	w1, #0x7f7fffff            	// #2139095039
  452810:	fmov	s1, w1
  452814:	mov	w1, #0xc5ae                	// #50606
  452818:	movk	w1, #0x749d, lsl #16
  45281c:	fmov	s2, w1
  452820:	fadd	s0, s1, s2
  452824:	mrs	x1, fpsr
  452828:	tbz	w0, #3, 452838 <_obstack_memory_used@@Base+0x1169c>
  45282c:	movi	v1.2s, #0x80, lsl #16
  452830:	fmul	s0, s1, s1
  452834:	mrs	x1, fpsr
  452838:	tbz	w0, #4, 452850 <_obstack_memory_used@@Base+0x116b4>
  45283c:	mov	w0, #0x7f7fffff            	// #2139095039
  452840:	fmov	s1, w0
  452844:	fmov	s2, #1.000000000000000000e+00
  452848:	fsub	s0, s1, s2
  45284c:	mrs	x0, fpsr
  452850:	ret
  452854:	nop
  452858:	stp	x29, x30, [sp, #-64]!
  45285c:	mov	x29, sp
  452860:	stp	x19, x20, [sp, #16]
  452864:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x3ae64>
  452868:	add	x20, x20, #0xde0
  45286c:	stp	x21, x22, [sp, #32]
  452870:	adrp	x21, 47c000 <_obstack_memory_used@@Base+0x3ae64>
  452874:	add	x21, x21, #0xdd8
  452878:	sub	x20, x20, x21
  45287c:	mov	w22, w0
  452880:	stp	x23, x24, [sp, #48]
  452884:	mov	x23, x1
  452888:	mov	x24, x2
  45288c:	bl	403f20 <mbrtowc@plt-0x40>
  452890:	cmp	xzr, x20, asr #3
  452894:	b.eq	4528c0 <_obstack_memory_used@@Base+0x11724>  // b.none
  452898:	asr	x20, x20, #3
  45289c:	mov	x19, #0x0                   	// #0
  4528a0:	ldr	x3, [x21, x19, lsl #3]
  4528a4:	mov	x2, x24
  4528a8:	add	x19, x19, #0x1
  4528ac:	mov	x1, x23
  4528b0:	mov	w0, w22
  4528b4:	blr	x3
  4528b8:	cmp	x20, x19
  4528bc:	b.ne	4528a0 <_obstack_memory_used@@Base+0x11704>  // b.any
  4528c0:	ldp	x19, x20, [sp, #16]
  4528c4:	ldp	x21, x22, [sp, #32]
  4528c8:	ldp	x23, x24, [sp, #48]
  4528cc:	ldp	x29, x30, [sp], #64
  4528d0:	ret
  4528d4:	nop
  4528d8:	ret

Disassembly of section .fini:

00000000004528dc <.fini>:
  4528dc:	stp	x29, x30, [sp, #-16]!
  4528e0:	mov	x29, sp
  4528e4:	ldp	x29, x30, [sp], #16
  4528e8:	ret
