In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMAArch64Info.a_clang_-O0:

AArch64TargetInfo.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm21getTheAArch64leTargetEv>:
   0:	sub	sp, sp, #0x20
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	adrp	x8, 0 <_ZN4llvm21getTheAArch64leTargetEv>
  10:	add	x8, x8, #0x0
  14:	ldarb	w9, [x8]
  18:	and	w9, w9, #0x1
  1c:	and	w9, w9, #0xff
  20:	str	x8, [sp, #8]
  24:	cbnz	w9, 48 <_ZN4llvm21getTheAArch64leTargetEv+0x48>
  28:	ldr	x0, [sp, #8]
  2c:	bl	0 <__cxa_guard_acquire>
  30:	cbz	w0, 48 <_ZN4llvm21getTheAArch64leTargetEv+0x48>
  34:	adrp	x0, 0 <_ZN4llvm21getTheAArch64leTargetEv>
  38:	add	x0, x0, #0x0
  3c:	bl	0 <_ZN4llvm21getTheAArch64leTargetEv>
  40:	ldr	x0, [sp, #8]
  44:	bl	0 <__cxa_guard_release>
  48:	adrp	x0, 0 <_ZN4llvm21getTheAArch64leTargetEv>
  4c:	add	x0, x0, #0x0
  50:	ldp	x29, x30, [sp, #16]
  54:	add	sp, sp, #0x20
  58:	ret

000000000000005c <_ZN4llvm21getTheAArch64beTargetEv>:
  5c:	sub	sp, sp, #0x20
  60:	stp	x29, x30, [sp, #16]
  64:	add	x29, sp, #0x10
  68:	adrp	x8, 0 <_ZN4llvm21getTheAArch64leTargetEv>
  6c:	add	x8, x8, #0x0
  70:	ldarb	w9, [x8]
  74:	and	w9, w9, #0x1
  78:	and	w9, w9, #0xff
  7c:	str	x8, [sp, #8]
  80:	cbnz	w9, a4 <_ZN4llvm21getTheAArch64beTargetEv+0x48>
  84:	ldr	x0, [sp, #8]
  88:	bl	0 <__cxa_guard_acquire>
  8c:	cbz	w0, a4 <_ZN4llvm21getTheAArch64beTargetEv+0x48>
  90:	adrp	x0, 0 <_ZN4llvm21getTheAArch64leTargetEv>
  94:	add	x0, x0, #0x0
  98:	bl	0 <_ZN4llvm21getTheAArch64leTargetEv>
  9c:	ldr	x0, [sp, #8]
  a0:	bl	0 <__cxa_guard_release>
  a4:	adrp	x0, 0 <_ZN4llvm21getTheAArch64leTargetEv>
  a8:	add	x0, x0, #0x0
  ac:	ldp	x29, x30, [sp, #16]
  b0:	add	sp, sp, #0x20
  b4:	ret

00000000000000b8 <_ZN4llvm22getTheAArch64_32TargetEv>:
  b8:	sub	sp, sp, #0x20
  bc:	stp	x29, x30, [sp, #16]
  c0:	add	x29, sp, #0x10
  c4:	adrp	x8, 0 <_ZN4llvm21getTheAArch64leTargetEv>
  c8:	add	x8, x8, #0x0
  cc:	ldarb	w9, [x8]
  d0:	and	w9, w9, #0x1
  d4:	and	w9, w9, #0xff
  d8:	str	x8, [sp, #8]
  dc:	cbnz	w9, 100 <_ZN4llvm22getTheAArch64_32TargetEv+0x48>
  e0:	ldr	x0, [sp, #8]
  e4:	bl	0 <__cxa_guard_acquire>
  e8:	cbz	w0, 100 <_ZN4llvm22getTheAArch64_32TargetEv+0x48>
  ec:	adrp	x0, 0 <_ZN4llvm21getTheAArch64leTargetEv>
  f0:	add	x0, x0, #0x0
  f4:	bl	0 <_ZN4llvm21getTheAArch64leTargetEv>
  f8:	ldr	x0, [sp, #8]
  fc:	bl	0 <__cxa_guard_release>
 100:	adrp	x0, 0 <_ZN4llvm21getTheAArch64leTargetEv>
 104:	add	x0, x0, #0x0
 108:	ldp	x29, x30, [sp, #16]
 10c:	add	sp, sp, #0x20
 110:	ret

0000000000000114 <_ZN4llvm17getTheARM64TargetEv>:
 114:	sub	sp, sp, #0x20
 118:	stp	x29, x30, [sp, #16]
 11c:	add	x29, sp, #0x10
 120:	adrp	x8, 0 <_ZN4llvm21getTheAArch64leTargetEv>
 124:	add	x8, x8, #0x0
 128:	ldarb	w9, [x8]
 12c:	and	w9, w9, #0x1
 130:	and	w9, w9, #0xff
 134:	str	x8, [sp, #8]
 138:	cbnz	w9, 15c <_ZN4llvm17getTheARM64TargetEv+0x48>
 13c:	ldr	x0, [sp, #8]
 140:	bl	0 <__cxa_guard_acquire>
 144:	cbz	w0, 15c <_ZN4llvm17getTheARM64TargetEv+0x48>
 148:	adrp	x0, 0 <_ZN4llvm21getTheAArch64leTargetEv>
 14c:	add	x0, x0, #0x0
 150:	bl	0 <_ZN4llvm21getTheAArch64leTargetEv>
 154:	ldr	x0, [sp, #8]
 158:	bl	0 <__cxa_guard_release>
 15c:	adrp	x0, 0 <_ZN4llvm21getTheAArch64leTargetEv>
 160:	add	x0, x0, #0x0
 164:	ldp	x29, x30, [sp, #16]
 168:	add	sp, sp, #0x20
 16c:	ret

0000000000000170 <_ZN4llvm20getTheARM64_32TargetEv>:
 170:	sub	sp, sp, #0x20
 174:	stp	x29, x30, [sp, #16]
 178:	add	x29, sp, #0x10
 17c:	adrp	x8, 0 <_ZN4llvm21getTheAArch64leTargetEv>
 180:	add	x8, x8, #0x0
 184:	ldarb	w9, [x8]
 188:	and	w9, w9, #0x1
 18c:	and	w9, w9, #0xff
 190:	str	x8, [sp, #8]
 194:	cbnz	w9, 1b8 <_ZN4llvm20getTheARM64_32TargetEv+0x48>
 198:	ldr	x0, [sp, #8]
 19c:	bl	0 <__cxa_guard_acquire>
 1a0:	cbz	w0, 1b8 <_ZN4llvm20getTheARM64_32TargetEv+0x48>
 1a4:	adrp	x0, 0 <_ZN4llvm21getTheAArch64leTargetEv>
 1a8:	add	x0, x0, #0x0
 1ac:	bl	0 <_ZN4llvm21getTheAArch64leTargetEv>
 1b0:	ldr	x0, [sp, #8]
 1b4:	bl	0 <__cxa_guard_release>
 1b8:	adrp	x0, 0 <_ZN4llvm21getTheAArch64leTargetEv>
 1bc:	add	x0, x0, #0x0
 1c0:	ldp	x29, x30, [sp, #16]
 1c4:	add	sp, sp, #0x20
 1c8:	ret

00000000000001cc <LLVMInitializeAArch64TargetInfo>:
 1cc:	sub	sp, sp, #0xe0
 1d0:	stp	x29, x30, [sp, #208]
 1d4:	add	x29, sp, #0xd0
 1d8:	adrp	x1, 0 <_ZN4llvm21getTheAArch64leTargetEv>
 1dc:	add	x1, x1, #0x0
 1e0:	adrp	x2, 0 <_ZN4llvm21getTheAArch64leTargetEv>
 1e4:	add	x2, x2, #0x0
 1e8:	adrp	x8, 0 <_ZN4llvm21getTheAArch64leTargetEv>
 1ec:	add	x8, x8, #0x0
 1f0:	adrp	x9, 0 <_ZN4llvm21getTheAArch64leTargetEv>
 1f4:	add	x9, x9, #0x0
 1f8:	adrp	x10, 0 <_ZN4llvm21getTheAArch64leTargetEv>
 1fc:	add	x10, x10, #0x0
 200:	adrp	x11, 0 <_ZN4llvm21getTheAArch64leTargetEv>
 204:	add	x11, x11, #0x0
 208:	adrp	x3, 0 <_ZN4llvm21getTheAArch64leTargetEv>
 20c:	add	x3, x3, #0x0
 210:	adrp	x12, 0 <_ZN4llvm21getTheAArch64leTargetEv>
 214:	add	x12, x12, #0x0
 218:	adrp	x13, 0 <_ZN4llvm21getTheAArch64leTargetEv>
 21c:	add	x13, x13, #0x0
 220:	adrp	x14, 0 <_ZN4llvm21getTheAArch64leTargetEv>
 224:	add	x14, x14, #0x0
 228:	adrp	x15, 0 <_ZN4llvm21getTheAArch64leTargetEv>
 22c:	add	x15, x15, #0x0
 230:	sub	x0, x29, #0x1
 234:	sub	x16, x29, #0x2
 238:	sub	x17, x29, #0x3
 23c:	sub	x18, x29, #0x4
 240:	sub	x4, x29, #0x5
 244:	stur	x1, [x29, #-16]
 248:	stur	x2, [x29, #-24]
 24c:	stur	x8, [x29, #-32]
 250:	stur	x9, [x29, #-40]
 254:	stur	x10, [x29, #-48]
 258:	stur	x11, [x29, #-56]
 25c:	stur	x3, [x29, #-64]
 260:	stur	x12, [x29, #-72]
 264:	stur	x13, [x29, #-80]
 268:	stur	x14, [x29, #-88]
 26c:	stur	x15, [x29, #-96]
 270:	str	x0, [sp, #104]
 274:	str	x16, [sp, #96]
 278:	str	x17, [sp, #88]
 27c:	str	x18, [sp, #80]
 280:	str	x4, [sp, #72]
 284:	bl	114 <_ZN4llvm17getTheARM64TargetEv>
 288:	ldr	x8, [sp, #104]
 28c:	str	x0, [sp, #64]
 290:	mov	x0, x8
 294:	bl	37c <_ZZ31LLVMInitializeAArch64TargetInfoENK3$_0cvPFbN4llvm6Triple8ArchTypeEEEv>
 298:	ldr	x1, [sp, #64]
 29c:	str	x0, [sp, #56]
 2a0:	mov	x0, x1
 2a4:	ldur	x1, [x29, #-16]
 2a8:	ldur	x2, [x29, #-24]
 2ac:	ldur	x3, [x29, #-32]
 2b0:	ldr	x4, [sp, #56]
 2b4:	mov	w5, #0x1                   	// #1
 2b8:	and	w6, w5, #0x1
 2bc:	str	w5, [sp, #52]
 2c0:	mov	w5, w6
 2c4:	bl	0 <_ZN4llvm14TargetRegistry14RegisterTargetERNS_6TargetEPKcS4_S4_PFbNS_6Triple8ArchTypeEEb>
 2c8:	bl	170 <_ZN4llvm20getTheARM64_32TargetEv>
 2cc:	ldr	x8, [sp, #96]
 2d0:	str	x0, [sp, #40]
 2d4:	mov	x0, x8
 2d8:	bl	398 <_ZZ31LLVMInitializeAArch64TargetInfoENK3$_1cvPFbN4llvm6Triple8ArchTypeEEEv>
 2dc:	ldr	x1, [sp, #40]
 2e0:	str	x0, [sp, #32]
 2e4:	mov	x0, x1
 2e8:	ldur	x1, [x29, #-40]
 2ec:	ldur	x2, [x29, #-48]
 2f0:	ldur	x3, [x29, #-32]
 2f4:	ldr	x4, [sp, #32]
 2f8:	ldr	w5, [sp, #52]
 2fc:	and	w5, w5, #0x1
 300:	bl	0 <_ZN4llvm14TargetRegistry14RegisterTargetERNS_6TargetEPKcS4_S4_PFbNS_6Triple8ArchTypeEEb>
 304:	bl	0 <_ZN4llvm21getTheAArch64leTargetEv>
 308:	ldr	x8, [sp, #88]
 30c:	str	x0, [sp, #24]
 310:	mov	x0, x8
 314:	ldr	x1, [sp, #24]
 318:	ldur	x2, [x29, #-56]
 31c:	ldur	x3, [x29, #-64]
 320:	ldur	x4, [x29, #-32]
 324:	bl	0 <_ZN4llvm21getTheAArch64leTargetEv>
 328:	bl	5c <_ZN4llvm21getTheAArch64beTargetEv>
 32c:	ldr	x8, [sp, #80]
 330:	str	x0, [sp, #16]
 334:	mov	x0, x8
 338:	ldr	x1, [sp, #16]
 33c:	ldur	x2, [x29, #-72]
 340:	ldur	x3, [x29, #-80]
 344:	ldur	x4, [x29, #-32]
 348:	bl	0 <_ZN4llvm21getTheAArch64leTargetEv>
 34c:	bl	b8 <_ZN4llvm22getTheAArch64_32TargetEv>
 350:	ldr	x8, [sp, #72]
 354:	str	x0, [sp, #8]
 358:	mov	x0, x8
 35c:	ldr	x1, [sp, #8]
 360:	ldur	x2, [x29, #-88]
 364:	ldur	x3, [x29, #-96]
 368:	ldur	x4, [x29, #-32]
 36c:	bl	0 <_ZN4llvm21getTheAArch64leTargetEv>
 370:	ldp	x29, x30, [sp, #208]
 374:	add	sp, sp, #0xe0
 378:	ret

000000000000037c <_ZZ31LLVMInitializeAArch64TargetInfoENK3$_0cvPFbN4llvm6Triple8ArchTypeEEEv>:
 37c:	sub	sp, sp, #0x10
 380:	adrp	x8, 0 <_ZN4llvm21getTheAArch64leTargetEv>
 384:	add	x8, x8, #0x0
 388:	str	x0, [sp, #8]
 38c:	mov	x0, x8
 390:	add	sp, sp, #0x10
 394:	ret

0000000000000398 <_ZZ31LLVMInitializeAArch64TargetInfoENK3$_1cvPFbN4llvm6Triple8ArchTypeEEEv>:
 398:	sub	sp, sp, #0x10
 39c:	adrp	x8, 0 <_ZN4llvm21getTheAArch64leTargetEv>
 3a0:	add	x8, x8, #0x0
 3a4:	str	x0, [sp, #8]
 3a8:	mov	x0, x8
 3ac:	add	sp, sp, #0x10
 3b0:	ret

00000000000003b4 <_ZZ31LLVMInitializeAArch64TargetInfoEN3$_08__invokeEN4llvm6Triple8ArchTypeE>:
 3b4:	sub	sp, sp, #0x20
 3b8:	stp	x29, x30, [sp, #16]
 3bc:	add	x29, sp, #0x10
 3c0:	stur	w0, [x29, #-4]
 3c4:	ldur	w1, [x29, #-4]
 3c8:	mov	x0, x8
 3cc:	bl	3e0 <_ZZ31LLVMInitializeAArch64TargetInfoENK3$_0clEN4llvm6Triple8ArchTypeE>
 3d0:	and	w0, w0, #0x1
 3d4:	ldp	x29, x30, [sp, #16]
 3d8:	add	sp, sp, #0x20
 3dc:	ret

00000000000003e0 <_ZZ31LLVMInitializeAArch64TargetInfoENK3$_0clEN4llvm6Triple8ArchTypeE>:
 3e0:	sub	sp, sp, #0x10
 3e4:	str	x0, [sp, #8]
 3e8:	str	w1, [sp, #4]
 3ec:	mov	w8, wzr
 3f0:	and	w0, w8, #0x1
 3f4:	add	sp, sp, #0x10
 3f8:	ret

00000000000003fc <_ZZ31LLVMInitializeAArch64TargetInfoEN3$_18__invokeEN4llvm6Triple8ArchTypeE>:
 3fc:	sub	sp, sp, #0x20
 400:	stp	x29, x30, [sp, #16]
 404:	add	x29, sp, #0x10
 408:	stur	w0, [x29, #-4]
 40c:	ldur	w1, [x29, #-4]
 410:	mov	x0, x8
 414:	bl	428 <_ZZ31LLVMInitializeAArch64TargetInfoENK3$_1clEN4llvm6Triple8ArchTypeE>
 418:	and	w0, w0, #0x1
 41c:	ldp	x29, x30, [sp, #16]
 420:	add	sp, sp, #0x20
 424:	ret

0000000000000428 <_ZZ31LLVMInitializeAArch64TargetInfoENK3$_1clEN4llvm6Triple8ArchTypeE>:
 428:	sub	sp, sp, #0x10
 42c:	str	x0, [sp, #8]
 430:	str	w1, [sp, #4]
 434:	mov	w8, wzr
 438:	and	w0, w8, #0x1
 43c:	add	sp, sp, #0x10
 440:	ret

Disassembly of section .text._ZN4llvm6TargetC2Ev:

0000000000000000 <_ZN4llvm6TargetC2Ev>:
   0:	sub	sp, sp, #0x10
   4:	mov	x8, xzr
   8:	str	x0, [sp, #8]
   c:	ldr	x9, [sp, #8]
  10:	str	x8, [x9, #144]
  14:	str	x8, [x9, #152]
  18:	str	x8, [x9, #160]
  1c:	str	x8, [x9, #168]
  20:	str	x8, [x9, #176]
  24:	str	x8, [x9, #184]
  28:	str	x8, [x9, #192]
  2c:	str	x8, [x9, #200]
  30:	str	x8, [x9, #208]
  34:	add	sp, sp, #0x10
  38:	ret

Disassembly of section .text._ZN4llvm14RegisterTargetILNS_6Triple8ArchTypeE3ELb1EEC2ERNS_6TargetEPKcS7_S7_:

0000000000000000 <_ZN4llvm14RegisterTargetILNS_6Triple8ArchTypeE3ELb1EEC2ERNS_6TargetEPKcS7_S7_>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #48]
   8:	add	x29, sp, #0x30
   c:	adrp	x8, 0 <_ZN4llvm14RegisterTargetILNS_6Triple8ArchTypeE3ELb1EEC2ERNS_6TargetEPKcS7_S7_>
  10:	add	x8, x8, #0x0
  14:	stur	x0, [x29, #-8]
  18:	stur	x1, [x29, #-16]
  1c:	str	x2, [sp, #24]
  20:	str	x3, [sp, #16]
  24:	str	x4, [sp, #8]
  28:	ldur	x0, [x29, #-16]
  2c:	ldr	x1, [sp, #24]
  30:	ldr	x2, [sp, #16]
  34:	ldr	x3, [sp, #8]
  38:	mov	x4, x8
  3c:	mov	w9, #0x1                   	// #1
  40:	and	w5, w9, #0x1
  44:	bl	0 <_ZN4llvm14TargetRegistry14RegisterTargetERNS_6TargetEPKcS4_S4_PFbNS_6Triple8ArchTypeEEb>
  48:	ldp	x29, x30, [sp, #48]
  4c:	add	sp, sp, #0x40
  50:	ret

Disassembly of section .text._ZN4llvm14RegisterTargetILNS_6Triple8ArchTypeE4ELb1EEC2ERNS_6TargetEPKcS7_S7_:

0000000000000000 <_ZN4llvm14RegisterTargetILNS_6Triple8ArchTypeE4ELb1EEC2ERNS_6TargetEPKcS7_S7_>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #48]
   8:	add	x29, sp, #0x30
   c:	adrp	x8, 0 <_ZN4llvm14RegisterTargetILNS_6Triple8ArchTypeE4ELb1EEC2ERNS_6TargetEPKcS7_S7_>
  10:	add	x8, x8, #0x0
  14:	stur	x0, [x29, #-8]
  18:	stur	x1, [x29, #-16]
  1c:	str	x2, [sp, #24]
  20:	str	x3, [sp, #16]
  24:	str	x4, [sp, #8]
  28:	ldur	x0, [x29, #-16]
  2c:	ldr	x1, [sp, #24]
  30:	ldr	x2, [sp, #16]
  34:	ldr	x3, [sp, #8]
  38:	mov	x4, x8
  3c:	mov	w9, #0x1                   	// #1
  40:	and	w5, w9, #0x1
  44:	bl	0 <_ZN4llvm14TargetRegistry14RegisterTargetERNS_6TargetEPKcS4_S4_PFbNS_6Triple8ArchTypeEEb>
  48:	ldp	x29, x30, [sp, #48]
  4c:	add	sp, sp, #0x40
  50:	ret

Disassembly of section .text._ZN4llvm14RegisterTargetILNS_6Triple8ArchTypeE5ELb1EEC2ERNS_6TargetEPKcS7_S7_:

0000000000000000 <_ZN4llvm14RegisterTargetILNS_6Triple8ArchTypeE5ELb1EEC2ERNS_6TargetEPKcS7_S7_>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #48]
   8:	add	x29, sp, #0x30
   c:	adrp	x8, 0 <_ZN4llvm14RegisterTargetILNS_6Triple8ArchTypeE5ELb1EEC2ERNS_6TargetEPKcS7_S7_>
  10:	add	x8, x8, #0x0
  14:	stur	x0, [x29, #-8]
  18:	stur	x1, [x29, #-16]
  1c:	str	x2, [sp, #24]
  20:	str	x3, [sp, #16]
  24:	str	x4, [sp, #8]
  28:	ldur	x0, [x29, #-16]
  2c:	ldr	x1, [sp, #24]
  30:	ldr	x2, [sp, #16]
  34:	ldr	x3, [sp, #8]
  38:	mov	x4, x8
  3c:	mov	w9, #0x1                   	// #1
  40:	and	w5, w9, #0x1
  44:	bl	0 <_ZN4llvm14TargetRegistry14RegisterTargetERNS_6TargetEPKcS4_S4_PFbNS_6Triple8ArchTypeEEb>
  48:	ldp	x29, x30, [sp, #48]
  4c:	add	sp, sp, #0x40
  50:	ret

Disassembly of section .text._ZN4llvm14RegisterTargetILNS_6Triple8ArchTypeE3ELb1EE12getArchMatchES2_:

0000000000000000 <_ZN4llvm14RegisterTargetILNS_6Triple8ArchTypeE3ELb1EE12getArchMatchES2_>:
   0:	sub	sp, sp, #0x10
   4:	str	w0, [sp, #12]
   8:	ldr	w8, [sp, #12]
   c:	cmp	w8, #0x3
  10:	cset	w8, eq  // eq = none
  14:	and	w0, w8, #0x1
  18:	add	sp, sp, #0x10
  1c:	ret

Disassembly of section .text._ZN4llvm14RegisterTargetILNS_6Triple8ArchTypeE4ELb1EE12getArchMatchES2_:

0000000000000000 <_ZN4llvm14RegisterTargetILNS_6Triple8ArchTypeE4ELb1EE12getArchMatchES2_>:
   0:	sub	sp, sp, #0x10
   4:	str	w0, [sp, #12]
   8:	ldr	w8, [sp, #12]
   c:	cmp	w8, #0x4
  10:	cset	w8, eq  // eq = none
  14:	and	w0, w8, #0x1
  18:	add	sp, sp, #0x10
  1c:	ret

Disassembly of section .text._ZN4llvm14RegisterTargetILNS_6Triple8ArchTypeE5ELb1EE12getArchMatchES2_:

0000000000000000 <_ZN4llvm14RegisterTargetILNS_6Triple8ArchTypeE5ELb1EE12getArchMatchES2_>:
   0:	sub	sp, sp, #0x10
   4:	str	w0, [sp, #12]
   8:	ldr	w8, [sp, #12]
   c:	cmp	w8, #0x5
  10:	cset	w8, eq  // eq = none
  14:	and	w0, w8, #0x1
  18:	add	sp, sp, #0x10
  1c:	ret
