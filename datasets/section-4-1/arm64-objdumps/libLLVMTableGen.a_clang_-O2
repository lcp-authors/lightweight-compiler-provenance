In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMTableGen.a_clang_-O2:

Error.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm9PrintNoteERKNS_5TwineE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x0
  10:	bl	0 <_ZN4llvm9WithColor4noteEv>
  14:	mov	x19, x0
  18:	mov	x0, x20
  1c:	mov	x1, x19
  20:	bl	0 <_ZNK4llvm5Twine5printERNS_11raw_ostreamE>
  24:	ldp	x9, x8, [x19, #16]
  28:	cmp	x9, x8
  2c:	b.ne	4c <_ZN4llvm9PrintNoteERKNS_5TwineE+0x4c>  // b.any
  30:	mov	x0, x19
  34:	ldp	x20, x19, [sp, #16]
  38:	adrp	x1, 0 <_ZN4llvm9PrintNoteERKNS_5TwineE>
  3c:	add	x1, x1, #0x0
  40:	mov	w2, #0x1                   	// #1
  44:	ldp	x29, x30, [sp], #32
  48:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  4c:	mov	w9, #0xa                   	// #10
  50:	strb	w9, [x8]
  54:	ldr	x8, [x19, #24]
  58:	add	x8, x8, #0x1
  5c:	str	x8, [x19, #24]
  60:	ldp	x20, x19, [sp, #16]
  64:	ldp	x29, x30, [sp], #32
  68:	ret

000000000000006c <_ZN4llvm9PrintNoteENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>:
  6c:	sub	sp, sp, #0x70
  70:	stp	x29, x30, [sp, #32]
  74:	str	x25, [sp, #48]
  78:	stp	x24, x23, [sp, #64]
  7c:	stp	x22, x21, [sp, #80]
  80:	stp	x20, x19, [sp, #96]
  84:	add	x29, sp, #0x20
  88:	cmp	x1, #0x0
  8c:	add	x8, x29, #0x18
  90:	str	xzr, [x29, #24]
  94:	csel	x20, x8, x0, eq  // eq = none
  98:	ldr	x8, [x20]
  9c:	adrp	x0, 0 <_ZN4llvm9PrintNoteERKNS_5TwineE>
  a0:	ldr	x0, [x0]
  a4:	mov	x3, x2
  a8:	csinc	x21, x1, xzr, ne  // ne = any
  ac:	mov	w22, #0x1                   	// #1
  b0:	mov	w2, #0x3                   	// #3
  b4:	mov	x1, x8
  b8:	mov	x4, xzr
  bc:	mov	x5, xzr
  c0:	mov	x6, xzr
  c4:	mov	x7, xzr
  c8:	strb	w22, [sp]
  cc:	bl	0 <_ZNK4llvm9SourceMgr12PrintMessageENS_5SMLocENS0_8DiagKindERKNS_5TwineENS_8ArrayRefINS_7SMRangeEEENS6_INS_7SMFixItEEEb>
  d0:	cmp	x21, #0x2
  d4:	b.cc	134 <_ZN4llvm9PrintNoteENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE+0xc8>  // b.lo, b.ul, b.last
  d8:	adrp	x19, 0 <_ZN4llvm9PrintNoteERKNS_5TwineE>
  dc:	ldr	x19, [x19]
  e0:	adrp	x24, 0 <_ZN4llvm9PrintNoteERKNS_5TwineE>
  e4:	mov	w23, #0x2                   	// #2
  e8:	add	x24, x24, #0x0
  ec:	mov	w25, #0x103                 	// #259
  f0:	mov	w8, #0x1                   	// #1
  f4:	ldr	x1, [x20, x8, lsl #3]
  f8:	add	x3, sp, #0x8
  fc:	mov	w2, #0x3                   	// #3
 100:	mov	x0, x19
 104:	mov	x4, xzr
 108:	mov	x5, xzr
 10c:	mov	x6, xzr
 110:	mov	x7, xzr
 114:	stp	x24, xzr, [sp, #8]
 118:	strh	w25, [sp, #24]
 11c:	strb	w22, [sp]
 120:	bl	0 <_ZNK4llvm9SourceMgr12PrintMessageENS_5SMLocENS0_8DiagKindERKNS_5TwineENS_8ArrayRefINS_7SMRangeEEENS6_INS_7SMFixItEEEb>
 124:	mov	w8, w23
 128:	cmp	x21, x8
 12c:	add	w23, w23, #0x1
 130:	b.hi	f4 <_ZN4llvm9PrintNoteENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE+0x88>  // b.pmore
 134:	ldp	x20, x19, [sp, #96]
 138:	ldp	x22, x21, [sp, #80]
 13c:	ldp	x24, x23, [sp, #64]
 140:	ldr	x25, [sp, #48]
 144:	ldp	x29, x30, [sp, #32]
 148:	add	sp, sp, #0x70
 14c:	ret

0000000000000150 <_ZN4llvm12PrintWarningENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>:
 150:	sub	sp, sp, #0x70
 154:	stp	x29, x30, [sp, #32]
 158:	str	x25, [sp, #48]
 15c:	stp	x24, x23, [sp, #64]
 160:	stp	x22, x21, [sp, #80]
 164:	stp	x20, x19, [sp, #96]
 168:	add	x29, sp, #0x20
 16c:	cmp	x1, #0x0
 170:	add	x8, x29, #0x18
 174:	str	xzr, [x29, #24]
 178:	csel	x20, x8, x0, eq  // eq = none
 17c:	ldr	x8, [x20]
 180:	adrp	x0, 0 <_ZN4llvm9PrintNoteERKNS_5TwineE>
 184:	ldr	x0, [x0]
 188:	mov	x3, x2
 18c:	csinc	x21, x1, xzr, ne  // ne = any
 190:	mov	w22, #0x1                   	// #1
 194:	mov	w2, #0x1                   	// #1
 198:	mov	x1, x8
 19c:	mov	x4, xzr
 1a0:	mov	x5, xzr
 1a4:	mov	x6, xzr
 1a8:	mov	x7, xzr
 1ac:	strb	w22, [sp]
 1b0:	bl	0 <_ZNK4llvm9SourceMgr12PrintMessageENS_5SMLocENS0_8DiagKindERKNS_5TwineENS_8ArrayRefINS_7SMRangeEEENS6_INS_7SMFixItEEEb>
 1b4:	cmp	x21, #0x2
 1b8:	b.cc	218 <_ZN4llvm12PrintWarningENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE+0xc8>  // b.lo, b.ul, b.last
 1bc:	adrp	x19, 0 <_ZN4llvm9PrintNoteERKNS_5TwineE>
 1c0:	ldr	x19, [x19]
 1c4:	adrp	x24, 0 <_ZN4llvm9PrintNoteERKNS_5TwineE>
 1c8:	mov	w23, #0x2                   	// #2
 1cc:	add	x24, x24, #0x0
 1d0:	mov	w25, #0x103                 	// #259
 1d4:	mov	w8, #0x1                   	// #1
 1d8:	ldr	x1, [x20, x8, lsl #3]
 1dc:	add	x3, sp, #0x8
 1e0:	mov	w2, #0x3                   	// #3
 1e4:	mov	x0, x19
 1e8:	mov	x4, xzr
 1ec:	mov	x5, xzr
 1f0:	mov	x6, xzr
 1f4:	mov	x7, xzr
 1f8:	stp	x24, xzr, [sp, #8]
 1fc:	strh	w25, [sp, #24]
 200:	strb	w22, [sp]
 204:	bl	0 <_ZNK4llvm9SourceMgr12PrintMessageENS_5SMLocENS0_8DiagKindERKNS_5TwineENS_8ArrayRefINS_7SMRangeEEENS6_INS_7SMFixItEEEb>
 208:	mov	w8, w23
 20c:	cmp	x21, x8
 210:	add	w23, w23, #0x1
 214:	b.hi	1d8 <_ZN4llvm12PrintWarningENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE+0x88>  // b.pmore
 218:	ldp	x20, x19, [sp, #96]
 21c:	ldp	x22, x21, [sp, #80]
 220:	ldp	x24, x23, [sp, #64]
 224:	ldr	x25, [sp, #48]
 228:	ldp	x29, x30, [sp, #32]
 22c:	add	sp, sp, #0x70
 230:	ret

0000000000000234 <_ZN4llvm12PrintWarningEPKcRKNS_5TwineE>:
 234:	sub	sp, sp, #0x20
 238:	stp	x29, x30, [sp, #16]
 23c:	add	x29, sp, #0x10
 240:	mov	x3, x1
 244:	mov	x1, x0
 248:	adrp	x0, 0 <_ZN4llvm9PrintNoteERKNS_5TwineE>
 24c:	ldr	x0, [x0]
 250:	mov	w8, #0x1                   	// #1
 254:	mov	w2, #0x1                   	// #1
 258:	mov	x4, xzr
 25c:	mov	x5, xzr
 260:	mov	x6, xzr
 264:	mov	x7, xzr
 268:	strb	w8, [sp]
 26c:	bl	0 <_ZNK4llvm9SourceMgr12PrintMessageENS_5SMLocENS0_8DiagKindERKNS_5TwineENS_8ArrayRefINS_7SMRangeEEENS6_INS_7SMFixItEEEb>
 270:	ldp	x29, x30, [sp, #16]
 274:	add	sp, sp, #0x20
 278:	ret

000000000000027c <_ZN4llvm12PrintWarningERKNS_5TwineE>:
 27c:	stp	x29, x30, [sp, #-32]!
 280:	stp	x20, x19, [sp, #16]
 284:	mov	x29, sp
 288:	mov	x20, x0
 28c:	bl	0 <_ZN4llvm9WithColor7warningEv>
 290:	mov	x19, x0
 294:	mov	x0, x20
 298:	mov	x1, x19
 29c:	bl	0 <_ZNK4llvm5Twine5printERNS_11raw_ostreamE>
 2a0:	ldp	x9, x8, [x19, #16]
 2a4:	cmp	x9, x8
 2a8:	b.ne	2c8 <_ZN4llvm12PrintWarningERKNS_5TwineE+0x4c>  // b.any
 2ac:	mov	x0, x19
 2b0:	ldp	x20, x19, [sp, #16]
 2b4:	adrp	x1, 0 <_ZN4llvm9PrintNoteERKNS_5TwineE>
 2b8:	add	x1, x1, #0x0
 2bc:	mov	w2, #0x1                   	// #1
 2c0:	ldp	x29, x30, [sp], #32
 2c4:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 2c8:	mov	w9, #0xa                   	// #10
 2cc:	strb	w9, [x8]
 2d0:	ldr	x8, [x19, #24]
 2d4:	add	x8, x8, #0x1
 2d8:	str	x8, [x19, #24]
 2dc:	ldp	x20, x19, [sp, #16]
 2e0:	ldp	x29, x30, [sp], #32
 2e4:	ret

00000000000002e8 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>:
 2e8:	sub	sp, sp, #0x70
 2ec:	stp	x29, x30, [sp, #32]
 2f0:	str	x25, [sp, #48]
 2f4:	stp	x24, x23, [sp, #64]
 2f8:	stp	x22, x21, [sp, #80]
 2fc:	stp	x20, x19, [sp, #96]
 300:	add	x29, sp, #0x20
 304:	adrp	x8, 40 <_ZN4llvm9PrintNoteERKNS_5TwineE+0x40>
 308:	ldr	x8, [x8]
 30c:	cmp	x1, #0x0
 310:	add	x10, x29, #0x18
 314:	str	xzr, [x29, #24]
 318:	ldr	w9, [x8]
 31c:	csel	x20, x10, x0, eq  // eq = none
 320:	adrp	x0, 0 <_ZN4llvm9PrintNoteERKNS_5TwineE>
 324:	mov	x3, x2
 328:	add	w9, w9, #0x1
 32c:	str	w9, [x8]
 330:	ldr	x8, [x20]
 334:	ldr	x0, [x0]
 338:	csinc	x21, x1, xzr, ne  // ne = any
 33c:	mov	w22, #0x1                   	// #1
 340:	mov	x1, x8
 344:	mov	w2, wzr
 348:	mov	x4, xzr
 34c:	mov	x5, xzr
 350:	mov	x6, xzr
 354:	mov	x7, xzr
 358:	strb	w22, [sp]
 35c:	bl	0 <_ZNK4llvm9SourceMgr12PrintMessageENS_5SMLocENS0_8DiagKindERKNS_5TwineENS_8ArrayRefINS_7SMRangeEEENS6_INS_7SMFixItEEEb>
 360:	cmp	x21, #0x2
 364:	b.cc	3c4 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE+0xdc>  // b.lo, b.ul, b.last
 368:	adrp	x19, 0 <_ZN4llvm9PrintNoteERKNS_5TwineE>
 36c:	ldr	x19, [x19]
 370:	adrp	x24, 0 <_ZN4llvm9PrintNoteERKNS_5TwineE>
 374:	mov	w23, #0x2                   	// #2
 378:	add	x24, x24, #0x0
 37c:	mov	w25, #0x103                 	// #259
 380:	mov	w8, #0x1                   	// #1
 384:	ldr	x1, [x20, x8, lsl #3]
 388:	add	x3, sp, #0x8
 38c:	mov	w2, #0x3                   	// #3
 390:	mov	x0, x19
 394:	mov	x4, xzr
 398:	mov	x5, xzr
 39c:	mov	x6, xzr
 3a0:	mov	x7, xzr
 3a4:	stp	x24, xzr, [sp, #8]
 3a8:	strh	w25, [sp, #24]
 3ac:	strb	w22, [sp]
 3b0:	bl	0 <_ZNK4llvm9SourceMgr12PrintMessageENS_5SMLocENS0_8DiagKindERKNS_5TwineENS_8ArrayRefINS_7SMRangeEEENS6_INS_7SMFixItEEEb>
 3b4:	mov	w8, w23
 3b8:	cmp	x21, x8
 3bc:	add	w23, w23, #0x1
 3c0:	b.hi	384 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE+0x9c>  // b.pmore
 3c4:	ldp	x20, x19, [sp, #96]
 3c8:	ldp	x22, x21, [sp, #80]
 3cc:	ldp	x24, x23, [sp, #64]
 3d0:	ldr	x25, [sp, #48]
 3d4:	ldp	x29, x30, [sp, #32]
 3d8:	add	sp, sp, #0x70
 3dc:	ret

00000000000003e0 <_ZN4llvm10PrintErrorEPKcRKNS_5TwineE>:
 3e0:	sub	sp, sp, #0x20
 3e4:	stp	x29, x30, [sp, #16]
 3e8:	add	x29, sp, #0x10
 3ec:	mov	x3, x1
 3f0:	mov	x1, x0
 3f4:	adrp	x0, 0 <_ZN4llvm9PrintNoteERKNS_5TwineE>
 3f8:	ldr	x0, [x0]
 3fc:	mov	w8, #0x1                   	// #1
 400:	mov	w2, wzr
 404:	mov	x4, xzr
 408:	mov	x5, xzr
 40c:	mov	x6, xzr
 410:	mov	x7, xzr
 414:	strb	w8, [sp]
 418:	bl	0 <_ZNK4llvm9SourceMgr12PrintMessageENS_5SMLocENS0_8DiagKindERKNS_5TwineENS_8ArrayRefINS_7SMRangeEEENS6_INS_7SMFixItEEEb>
 41c:	ldp	x29, x30, [sp, #16]
 420:	add	sp, sp, #0x20
 424:	ret

0000000000000428 <_ZN4llvm10PrintErrorERKNS_5TwineE>:
 428:	stp	x29, x30, [sp, #-32]!
 42c:	stp	x20, x19, [sp, #16]
 430:	mov	x29, sp
 434:	mov	x20, x0
 438:	bl	0 <_ZN4llvm9WithColor5errorEv>
 43c:	mov	x19, x0
 440:	mov	x0, x20
 444:	mov	x1, x19
 448:	bl	0 <_ZNK4llvm5Twine5printERNS_11raw_ostreamE>
 44c:	ldp	x9, x8, [x19, #16]
 450:	cmp	x9, x8
 454:	b.ne	474 <_ZN4llvm10PrintErrorERKNS_5TwineE+0x4c>  // b.any
 458:	mov	x0, x19
 45c:	ldp	x20, x19, [sp, #16]
 460:	adrp	x1, 0 <_ZN4llvm9PrintNoteERKNS_5TwineE>
 464:	add	x1, x1, #0x0
 468:	mov	w2, #0x1                   	// #1
 46c:	ldp	x29, x30, [sp], #32
 470:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 474:	mov	w9, #0xa                   	// #10
 478:	strb	w9, [x8]
 47c:	ldr	x8, [x19, #24]
 480:	add	x8, x8, #0x1
 484:	str	x8, [x19, #24]
 488:	ldp	x20, x19, [sp, #16]
 48c:	ldp	x29, x30, [sp], #32
 490:	ret

0000000000000494 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>:
 494:	stp	x29, x30, [sp, #-16]!
 498:	mov	x29, sp
 49c:	bl	428 <_ZN4llvm10PrintErrorERKNS_5TwineE>
 4a0:	bl	0 <_ZN4llvm3sys20RunInterruptHandlersEv>
 4a4:	mov	w0, #0x1                   	// #1
 4a8:	bl	0 <exit>

00000000000004ac <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>:
 4ac:	stp	x29, x30, [sp, #-16]!
 4b0:	mov	x29, sp
 4b4:	bl	2e8 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
 4b8:	bl	0 <_ZN4llvm3sys20RunInterruptHandlersEv>
 4bc:	mov	w0, #0x1                   	// #1
 4c0:	bl	0 <exit>

Disassembly of section .text._ZN4llvm9SourceMgrD2Ev:

0000000000000000 <_ZN4llvm9SourceMgrD2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	x20, x21, [x0, #24]
  14:	mov	x19, x0
  18:	cmp	x20, x21
  1c:	b.ne	74 <_ZN4llvm9SourceMgrD2Ev+0x74>  // b.any
  20:	cbz	x20, 2c <_ZN4llvm9SourceMgrD2Ev+0x2c>
  24:	mov	x0, x20
  28:	bl	0 <_ZdlPv>
  2c:	ldp	x20, x21, [x19]
  30:	cmp	x20, x21
  34:	b.eq	50 <_ZN4llvm9SourceMgrD2Ev+0x50>  // b.none
  38:	mov	x0, x20
  3c:	bl	0 <_ZN4llvm9SourceMgr9SrcBufferD1Ev>
  40:	add	x20, x20, #0x18
  44:	cmp	x21, x20
  48:	b.ne	38 <_ZN4llvm9SourceMgrD2Ev+0x38>  // b.any
  4c:	ldr	x20, [x19]
  50:	cbz	x20, 94 <_ZN4llvm9SourceMgrD2Ev+0x94>
  54:	mov	x0, x20
  58:	ldp	x20, x19, [sp, #32]
  5c:	ldr	x21, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	b	0 <_ZdlPv>
  68:	add	x20, x20, #0x10
  6c:	cmp	x20, x21
  70:	b.eq	88 <_ZN4llvm9SourceMgrD2Ev+0x88>  // b.none
  74:	ldr	x0, [x20], #16
  78:	cmp	x0, x20
  7c:	b.eq	68 <_ZN4llvm9SourceMgrD2Ev+0x68>  // b.none
  80:	bl	0 <_ZdlPv>
  84:	b	68 <_ZN4llvm9SourceMgrD2Ev+0x68>
  88:	ldr	x20, [x19, #24]
  8c:	cbnz	x20, 24 <_ZN4llvm9SourceMgrD2Ev+0x24>
  90:	b	2c <_ZN4llvm9SourceMgrD2Ev+0x2c>
  94:	ldp	x20, x19, [sp, #32]
  98:	ldr	x21, [sp, #16]
  9c:	ldp	x29, x30, [sp], #48
  a0:	ret

Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_Error.cpp>:
   0:	adrp	x1, 0 <_GLOBAL__sub_I_Error.cpp>
   4:	ldr	x1, [x1]
   8:	adrp	x0, 0 <_GLOBAL__sub_I_Error.cpp>
   c:	adrp	x2, 0 <__dso_handle>
  10:	movi	v0.2d, #0x0
  14:	add	x0, x0, #0x0
  18:	add	x2, x2, #0x0
  1c:	stp	q0, q0, [x1, #32]
  20:	stp	q0, q0, [x1]
  24:	b	0 <__cxa_atexit>

JSONBackend.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>:
       0:	stp	x29, x30, [sp, #-96]!
       4:	stp	x28, x27, [sp, #16]
       8:	stp	x26, x25, [sp, #32]
       c:	stp	x24, x23, [sp, #48]
      10:	stp	x22, x21, [sp, #64]
      14:	stp	x20, x19, [sp, #80]
      18:	mov	x29, sp
      1c:	sub	sp, sp, #0x2b0
      20:	mov	x21, x0
      24:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
      28:	str	x1, [sp, #16]
      2c:	mov	w8, #0x3                   	// #3
      30:	mov	w9, #0x1                   	// #1
      34:	add	x0, x0, #0x0
      38:	mov	w10, #0x16                  	// #22
      3c:	mov	w1, #0x16                  	// #22
      40:	mov	x2, xzr
      44:	stp	xzr, xzr, [x29, #-208]
      48:	stur	wzr, [x29, #-184]
      4c:	stur	xzr, [x29, #-192]
      50:	sturb	w8, [x29, #-176]
      54:	stur	x9, [x29, #-168]
      58:	stp	xzr, x0, [x29, #-256]
      5c:	stur	x10, [x29, #-240]
      60:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
      64:	tbz	w0, #0, 1088 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x1088>
      68:	sub	x0, x29, #0xd0
      6c:	sub	x1, x29, #0x100
      70:	sub	x19, x29, #0x100
      74:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
      78:	mov	x20, x0
      7c:	bl	0 <_ZN4llvm4json5Value7destroyEv>
      80:	sub	x1, x29, #0xb0
      84:	mov	x0, x20
      88:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
      8c:	ldur	x20, [x29, #-256]
      90:	cbz	x20, b0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xb0>
      94:	mov	x8, x20
      98:	ldr	x0, [x8], #16
      9c:	cmp	x0, x8
      a0:	b.eq	a8 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xa8>  // b.none
      a4:	bl	0 <_ZdlPv>
      a8:	mov	x0, x20
      ac:	bl	0 <_ZdlPv>
      b0:	sub	x0, x29, #0xb0
      b4:	sub	x22, x29, #0xb0
      b8:	bl	0 <_ZN4llvm4json5Value7destroyEv>
      bc:	add	x23, x19, #0x8
      c0:	stur	wzr, [x29, #-248]
      c4:	stp	xzr, x23, [x29, #-240]
      c8:	stp	x23, xzr, [x29, #-224]
      cc:	ldr	x20, [x21, #24]
      d0:	add	x19, x21, #0x8
      d4:	cmp	x20, x19
      d8:	b.eq	130 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x130>  // b.none
      dc:	add	x22, x22, #0x10
      e0:	b	f8 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xf8>
      e4:	mov	x0, x20
      e8:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
      ec:	mov	x20, x0
      f0:	cmp	x0, x19
      f4:	b.eq	130 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x130>  // b.none
      f8:	ldr	x8, [x20, #64]
      fc:	ldr	x0, [x8]
     100:	ldr	x8, [x0]
     104:	ldr	x9, [x8, #48]
     108:	sub	x8, x29, #0xb0
     10c:	blr	x9
     110:	sub	x0, x29, #0x100
     114:	sub	x1, x29, #0xb0
     118:	bl	0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
     11c:	ldur	x0, [x29, #-176]
     120:	cmp	x0, x22
     124:	b.eq	e4 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xe4>  // b.none
     128:	bl	0 <_ZdlPv>
     12c:	b	e4 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xe4>
     130:	ldr	x19, [x21, #72]
     134:	add	x8, x21, #0x38
     138:	str	x23, [sp, #8]
     13c:	str	x8, [sp, #48]
     140:	cmp	x19, x8
     144:	b.eq	c54 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xc54>  // b.none
     148:	add	x8, sp, #0x138
     14c:	add	x11, sp, #0x120
     150:	add	x12, sp, #0x158
     154:	add	x23, x8, #0x10
     158:	add	x8, x11, #0x8
     15c:	add	x14, sp, #0xc0
     160:	str	x8, [sp, #72]
     164:	add	x8, x12, #0x10
     168:	add	x15, sp, #0xa0
     16c:	str	x8, [sp, #80]
     170:	add	x8, x14, #0x10
     174:	str	x8, [sp, #56]
     178:	add	x8, x15, #0x10
     17c:	sub	x9, x29, #0xb0
     180:	add	x10, sp, #0x100
     184:	add	x13, sp, #0xe0
     188:	add	x16, sp, #0x80
     18c:	add	x17, sp, #0x58
     190:	str	x8, [sp, #40]
     194:	add	x8, x12, #0x8
     198:	add	x24, x9, #0x18
     19c:	add	x28, x10, #0x10
     1a0:	add	x20, x13, #0x10
     1a4:	str	x8, [sp, #32]
     1a8:	add	x22, x16, #0x10
     1ac:	add	x8, x17, #0x10
     1b0:	str	x8, [sp, #24]
     1b4:	b	1d0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x1d0>
     1b8:	mov	x0, x21
     1bc:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     1c0:	ldr	x8, [sp, #48]
     1c4:	mov	x19, x0
     1c8:	cmp	x0, x8
     1cc:	b.eq	c54 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xc54>  // b.none
     1d0:	ldr	x8, [x19, #64]
     1d4:	ldr	x0, [x8]
     1d8:	ldr	x8, [x0]
     1dc:	ldr	x9, [x8, #48]
     1e0:	add	x8, sp, #0x58
     1e4:	blr	x9
     1e8:	ldr	x27, [x19, #64]
     1ec:	stp	xzr, xzr, [sp, #400]
     1f0:	str	wzr, [sp, #424]
     1f4:	str	xzr, [sp, #416]
     1f8:	stp	xzr, xzr, [sp, #376]
     1fc:	str	xzr, [sp, #392]
     200:	ldr	w8, [x27, #80]
     204:	str	x19, [sp, #64]
     208:	cbz	w8, 4ec <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x4ec>
     20c:	ldr	x21, [x27, #72]
     210:	mov	w9, #0x18                  	// #24
     214:	madd	x19, x8, x9, x21
     218:	b	228 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x228>
     21c:	add	x21, x21, #0x18
     220:	cmp	x21, x19
     224:	b.eq	4e0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x4e0>  // b.none
     228:	ldr	w9, [x27, #64]
     22c:	ldr	x0, [x21]
     230:	cbz	w9, 250 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x250>
     234:	ldr	x8, [x27, #56]
     238:	lsl	x9, x9, #3
     23c:	ldr	x10, [x8], #8
     240:	cmp	x10, x0
     244:	b.eq	21c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x21c>  // b.none
     248:	subs	x9, x9, #0x8
     24c:	b.ne	23c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x23c>  // b.any
     250:	ldr	x8, [x0]
     254:	ldr	x9, [x8, #48]
     258:	add	x8, sp, #0x158
     25c:	blr	x9
     260:	ldrb	w8, [x21, #8]
     264:	tbz	w8, #2, 378 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x378>
     268:	ldp	x25, x26, [sp, #344]
     26c:	str	x23, [sp, #312]
     270:	cbnz	x25, 278 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x278>
     274:	cbnz	x26, 105c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x105c>
     278:	cmp	x26, #0x10
     27c:	mov	x0, x23
     280:	str	x26, [sp, #288]
     284:	b.cc	2a4 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x2a4>  // b.lo, b.ul, b.last
     288:	add	x0, sp, #0x138
     28c:	add	x1, sp, #0x120
     290:	mov	x2, xzr
     294:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     298:	ldr	x8, [sp, #288]
     29c:	str	x0, [sp, #312]
     2a0:	str	x8, [sp, #328]
     2a4:	cbz	x26, 2c8 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x2c8>
     2a8:	cmp	x26, #0x1
     2ac:	b.ne	2bc <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x2bc>  // b.any
     2b0:	ldrb	w8, [x25]
     2b4:	strb	w8, [x0]
     2b8:	b	2c8 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x2c8>
     2bc:	mov	x1, x25
     2c0:	mov	x2, x26
     2c4:	bl	0 <memcpy>
     2c8:	ldr	x8, [sp, #288]
     2cc:	ldr	x9, [sp, #312]
     2d0:	mov	x2, xzr
     2d4:	str	x8, [sp, #320]
     2d8:	strb	wzr, [x9, x8]
     2dc:	ldp	x0, x1, [sp, #312]
     2e0:	mov	w8, #0x5                   	// #5
     2e4:	sturb	w8, [x29, #-176]
     2e8:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
     2ec:	tbz	w0, #0, 103c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x103c>
     2f0:	ldr	x8, [sp, #312]
     2f4:	stur	x24, [x29, #-168]
     2f8:	cmp	x8, x23
     2fc:	b.eq	310 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x310>  // b.none
     300:	ldr	x9, [sp, #328]
     304:	stur	x8, [x29, #-168]
     308:	stur	x9, [x29, #-152]
     30c:	b	318 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x318>
     310:	ldr	q0, [x23]
     314:	str	q0, [x24]
     318:	ldp	x8, x10, [sp, #384]
     31c:	ldr	x9, [sp, #320]
     320:	stp	x23, xzr, [sp, #312]
     324:	strb	wzr, [sp, #328]
     328:	cmp	x8, x10
     32c:	stur	x9, [x29, #-160]
     330:	b.eq	350 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x350>  // b.none
     334:	sub	x1, x29, #0xb0
     338:	mov	x0, x8
     33c:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     340:	ldr	x8, [sp, #384]
     344:	add	x8, x8, #0x28
     348:	str	x8, [sp, #384]
     34c:	b	360 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x360>
     350:	add	x0, sp, #0x178
     354:	sub	x2, x29, #0xb0
     358:	mov	x1, x8
     35c:	bl	0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
     360:	sub	x0, x29, #0xb0
     364:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     368:	ldr	x0, [sp, #312]
     36c:	cmp	x0, x23
     370:	b.eq	378 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x378>  // b.none
     374:	bl	0 <_ZdlPv>
     378:	ldr	x0, [x21, #16]
     37c:	sub	x8, x29, #0xb0
     380:	bl	1108 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE>
     384:	ldp	x25, x26, [sp, #344]
     388:	str	x28, [sp, #256]
     38c:	cbnz	x25, 394 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x394>
     390:	cbnz	x26, 105c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x105c>
     394:	cmp	x26, #0x10
     398:	mov	x0, x28
     39c:	stur	x26, [x29, #-16]
     3a0:	b.cc	3c0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x3c0>  // b.lo, b.ul, b.last
     3a4:	add	x0, sp, #0x100
     3a8:	sub	x1, x29, #0x10
     3ac:	mov	x2, xzr
     3b0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     3b4:	ldur	x8, [x29, #-16]
     3b8:	str	x0, [sp, #256]
     3bc:	str	x8, [sp, #272]
     3c0:	cbz	x26, 3e4 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x3e4>
     3c4:	cmp	x26, #0x1
     3c8:	b.ne	3d8 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x3d8>  // b.any
     3cc:	ldrb	w8, [x25]
     3d0:	strb	w8, [x0]
     3d4:	b	3e4 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x3e4>
     3d8:	mov	x1, x25
     3dc:	mov	x2, x26
     3e0:	bl	0 <memcpy>
     3e4:	ldur	x8, [x29, #-16]
     3e8:	ldr	x9, [sp, #256]
     3ec:	mov	w0, #0x20                  	// #32
     3f0:	str	x8, [sp, #264]
     3f4:	strb	wzr, [x9, x8]
     3f8:	bl	0 <_Znwm>
     3fc:	ldr	x9, [sp, #256]
     400:	add	x8, x0, #0x10
     404:	str	x8, [x0]
     408:	cmp	x9, x28
     40c:	b.eq	424 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x424>  // b.none
     410:	ldr	x8, [sp, #272]
     414:	str	x9, [x0]
     418:	str	x8, [x0, #16]
     41c:	mov	x8, x9
     420:	b	42c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x42c>
     424:	ldr	q0, [x28]
     428:	str	q0, [x8]
     42c:	ldr	x1, [sp, #264]
     430:	ldr	x9, [sp, #72]
     434:	str	x0, [sp, #288]
     438:	mov	x2, xzr
     43c:	str	x1, [x0, #8]
     440:	mov	x0, x8
     444:	stp	x28, xzr, [sp, #256]
     448:	strb	wzr, [sp, #272]
     44c:	stp	xzr, xzr, [x9]
     450:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
     454:	tbz	w0, #0, 1068 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x1068>
     458:	ldr	x8, [sp, #288]
     45c:	add	x0, sp, #0x190
     460:	add	x1, sp, #0x120
     464:	ldr	q0, [x8]
     468:	add	x8, sp, #0x120
     46c:	stur	q0, [x8, #8]
     470:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     474:	mov	x25, x0
     478:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     47c:	sub	x1, x29, #0xb0
     480:	mov	x0, x25
     484:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     488:	ldr	x25, [sp, #288]
     48c:	cbz	x25, 4ac <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x4ac>
     490:	mov	x8, x25
     494:	ldr	x0, [x8], #16
     498:	cmp	x0, x8
     49c:	b.eq	4a4 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x4a4>  // b.none
     4a0:	bl	0 <_ZdlPv>
     4a4:	mov	x0, x25
     4a8:	bl	0 <_ZdlPv>
     4ac:	ldr	x0, [sp, #256]
     4b0:	str	xzr, [sp, #288]
     4b4:	cmp	x0, x28
     4b8:	b.eq	4c0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x4c0>  // b.none
     4bc:	bl	0 <_ZdlPv>
     4c0:	sub	x0, x29, #0xb0
     4c4:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     4c8:	ldr	x0, [sp, #344]
     4cc:	ldr	x8, [sp, #80]
     4d0:	cmp	x0, x8
     4d4:	b.eq	21c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x21c>  // b.none
     4d8:	bl	0 <_ZdlPv>
     4dc:	b	21c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x21c>
     4e0:	ldp	x10, x9, [sp, #376]
     4e4:	ldr	x8, [sp, #392]
     4e8:	b	4f8 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x4f8>
     4ec:	mov	x8, xzr
     4f0:	mov	x9, xzr
     4f4:	mov	x10, xzr
     4f8:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
     4fc:	mov	w11, #0x7                   	// #7
     500:	add	x0, x0, #0x0
     504:	mov	w1, #0x7                   	// #7
     508:	mov	x2, xzr
     50c:	sturb	w11, [x29, #-176]
     510:	stp	x10, x9, [x29, #-168]
     514:	stur	x8, [x29, #-152]
     518:	stp	xzr, xzr, [sp, #384]
     51c:	str	xzr, [sp, #376]
     520:	stp	xzr, x0, [sp, #344]
     524:	mov	w26, #0x7                   	// #7
     528:	str	x11, [sp, #360]
     52c:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
     530:	ldr	x19, [sp, #56]
     534:	tbz	w0, #0, 1088 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x1088>
     538:	add	x0, sp, #0x190
     53c:	add	x1, sp, #0x158
     540:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     544:	mov	x25, x0
     548:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     54c:	sub	x1, x29, #0xb0
     550:	mov	x0, x25
     554:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     558:	ldr	x25, [sp, #344]
     55c:	cbz	x25, 57c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x57c>
     560:	mov	x8, x25
     564:	ldr	x0, [x8], #16
     568:	cmp	x0, x8
     56c:	b.eq	574 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x574>  // b.none
     570:	bl	0 <_ZdlPv>
     574:	mov	x0, x25
     578:	bl	0 <_ZdlPv>
     57c:	sub	x0, x29, #0xb0
     580:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     584:	stp	xzr, xzr, [sp, #288]
     588:	str	xzr, [sp, #304]
     58c:	ldr	w8, [x27, #96]
     590:	cbz	w8, 67c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x67c>
     594:	ldr	x19, [x27, #88]
     598:	add	x8, x8, x8, lsl #1
     59c:	lsl	x21, x8, #3
     5a0:	b	5b0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x5b0>
     5a4:	subs	x21, x21, #0x18
     5a8:	add	x19, x19, #0x18
     5ac:	b.eq	66c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x66c>  // b.none
     5b0:	ldr	x8, [x19]
     5b4:	ldr	x0, [x8]
     5b8:	ldr	x8, [x0]
     5bc:	ldr	x9, [x8, #48]
     5c0:	add	x8, sp, #0xe0
     5c4:	blr	x9
     5c8:	ldp	x0, x1, [sp, #224]
     5cc:	mov	w8, #0x5                   	// #5
     5d0:	mov	x2, xzr
     5d4:	sturb	w8, [x29, #-176]
     5d8:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
     5dc:	tbz	w0, #0, 103c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x103c>
     5e0:	ldr	x8, [sp, #224]
     5e4:	stur	x24, [x29, #-168]
     5e8:	cmp	x8, x20
     5ec:	b.eq	600 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x600>  // b.none
     5f0:	ldr	x9, [sp, #240]
     5f4:	stur	x8, [x29, #-168]
     5f8:	stur	x9, [x29, #-152]
     5fc:	b	608 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x608>
     600:	ldr	q0, [x20]
     604:	str	q0, [x24]
     608:	ldp	x8, x10, [sp, #296]
     60c:	ldr	x9, [sp, #232]
     610:	stp	x20, xzr, [sp, #224]
     614:	strb	wzr, [sp, #240]
     618:	cmp	x8, x10
     61c:	stur	x9, [x29, #-160]
     620:	b.eq	640 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x640>  // b.none
     624:	sub	x1, x29, #0xb0
     628:	mov	x0, x8
     62c:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     630:	ldr	x8, [sp, #296]
     634:	add	x8, x8, #0x28
     638:	str	x8, [sp, #296]
     63c:	b	650 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x650>
     640:	add	x0, sp, #0x120
     644:	sub	x2, x29, #0xb0
     648:	mov	x1, x8
     64c:	bl	0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
     650:	sub	x0, x29, #0xb0
     654:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     658:	ldr	x0, [sp, #224]
     65c:	cmp	x0, x20
     660:	b.eq	5a4 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x5a4>  // b.none
     664:	bl	0 <_ZdlPv>
     668:	b	5a4 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x5a4>
     66c:	ldp	x10, x9, [sp, #288]
     670:	ldr	x8, [sp, #304]
     674:	ldr	x19, [sp, #56]
     678:	b	688 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x688>
     67c:	mov	x8, xzr
     680:	mov	x9, xzr
     684:	mov	x10, xzr
     688:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
     68c:	stur	x8, [x29, #-152]
     690:	add	x0, x0, #0x0
     694:	mov	w8, #0xd                   	// #13
     698:	mov	w1, #0xd                   	// #13
     69c:	mov	x2, xzr
     6a0:	sturb	w26, [x29, #-176]
     6a4:	stp	x10, x9, [x29, #-168]
     6a8:	stp	xzr, xzr, [sp, #296]
     6ac:	str	xzr, [sp, #288]
     6b0:	stp	xzr, x0, [sp, #344]
     6b4:	str	x8, [sp, #360]
     6b8:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
     6bc:	tbz	w0, #0, 1088 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x1088>
     6c0:	add	x0, sp, #0x190
     6c4:	add	x1, sp, #0x158
     6c8:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     6cc:	mov	x25, x0
     6d0:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     6d4:	sub	x1, x29, #0xb0
     6d8:	mov	x0, x25
     6dc:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     6e0:	ldr	x25, [sp, #344]
     6e4:	cbz	x25, 704 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x704>
     6e8:	mov	x8, x25
     6ec:	ldr	x0, [x8], #16
     6f0:	cmp	x0, x8
     6f4:	b.eq	6fc <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x6fc>  // b.none
     6f8:	bl	0 <_ZdlPv>
     6fc:	mov	x0, x25
     700:	bl	0 <_ZdlPv>
     704:	sub	x0, x29, #0xb0
     708:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     70c:	ldp	x25, x26, [sp, #88]
     710:	str	x19, [sp, #192]
     714:	cbnz	x25, 71c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x71c>
     718:	cbnz	x26, 105c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x105c>
     71c:	cmp	x26, #0x10
     720:	mov	x0, x19
     724:	str	x26, [sp, #344]
     728:	b.cc	748 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x748>  // b.lo, b.ul, b.last
     72c:	add	x0, sp, #0xc0
     730:	add	x1, sp, #0x158
     734:	mov	x2, xzr
     738:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     73c:	ldr	x8, [sp, #344]
     740:	str	x0, [sp, #192]
     744:	str	x8, [sp, #208]
     748:	cbz	x26, 76c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x76c>
     74c:	cmp	x26, #0x1
     750:	b.ne	760 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x760>  // b.any
     754:	ldrb	w8, [x25]
     758:	strb	w8, [x0]
     75c:	b	76c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x76c>
     760:	mov	x1, x25
     764:	mov	x2, x26
     768:	bl	0 <memcpy>
     76c:	ldr	x8, [sp, #344]
     770:	ldr	x9, [sp, #192]
     774:	mov	x2, xzr
     778:	str	x8, [sp, #200]
     77c:	strb	wzr, [x9, x8]
     780:	ldp	x0, x1, [sp, #192]
     784:	mov	w8, #0x5                   	// #5
     788:	sturb	w8, [x29, #-176]
     78c:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
     790:	tbz	w0, #0, 103c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x103c>
     794:	ldr	x8, [sp, #192]
     798:	stur	x24, [x29, #-168]
     79c:	cmp	x8, x19
     7a0:	b.eq	7b4 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x7b4>  // b.none
     7a4:	ldr	x9, [sp, #208]
     7a8:	stur	x8, [x29, #-168]
     7ac:	stur	x9, [x29, #-152]
     7b0:	b	7bc <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x7bc>
     7b4:	ldr	q0, [x19]
     7b8:	str	q0, [x24]
     7bc:	ldr	x8, [sp, #200]
     7c0:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
     7c4:	add	x0, x0, #0x0
     7c8:	mov	w1, #0x5                   	// #5
     7cc:	stur	x8, [x29, #-160]
     7d0:	mov	w8, #0x5                   	// #5
     7d4:	mov	x2, xzr
     7d8:	stp	x19, xzr, [sp, #192]
     7dc:	strb	wzr, [sp, #208]
     7e0:	stp	xzr, x0, [sp, #344]
     7e4:	str	x8, [sp, #360]
     7e8:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
     7ec:	tbz	w0, #0, 1088 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x1088>
     7f0:	add	x0, sp, #0x190
     7f4:	add	x1, sp, #0x158
     7f8:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     7fc:	mov	x25, x0
     800:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     804:	sub	x1, x29, #0xb0
     808:	mov	x0, x25
     80c:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     810:	ldr	x25, [sp, #344]
     814:	cbz	x25, 834 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x834>
     818:	mov	x8, x25
     81c:	ldr	x0, [x8], #16
     820:	cmp	x0, x8
     824:	b.eq	82c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x82c>  // b.none
     828:	bl	0 <_ZdlPv>
     82c:	mov	x0, x25
     830:	bl	0 <_ZdlPv>
     834:	sub	x0, x29, #0xb0
     838:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     83c:	ldr	x0, [sp, #192]
     840:	cmp	x0, x19
     844:	b.eq	84c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x84c>  // b.none
     848:	bl	0 <_ZdlPv>
     84c:	ldrb	w8, [x27, #124]
     850:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
     854:	mov	w9, #0x1                   	// #1
     858:	add	x0, x0, #0x0
     85c:	sturb	w8, [x29, #-168]
     860:	mov	w8, #0xa                   	// #10
     864:	mov	w1, #0xa                   	// #10
     868:	mov	x2, xzr
     86c:	sturb	w9, [x29, #-176]
     870:	stp	xzr, x0, [sp, #344]
     874:	str	x8, [sp, #360]
     878:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
     87c:	ldr	x19, [sp, #40]
     880:	tbz	w0, #0, 1088 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x1088>
     884:	add	x0, sp, #0x190
     888:	add	x1, sp, #0x158
     88c:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     890:	mov	x25, x0
     894:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     898:	sub	x1, x29, #0xb0
     89c:	mov	x0, x25
     8a0:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     8a4:	ldr	x25, [sp, #344]
     8a8:	cbz	x25, 8c8 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x8c8>
     8ac:	mov	x8, x25
     8b0:	ldr	x0, [x8], #16
     8b4:	cmp	x0, x8
     8b8:	b.eq	8c0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x8c0>  // b.none
     8bc:	bl	0 <_ZdlPv>
     8c0:	mov	x0, x25
     8c4:	bl	0 <_ZdlPv>
     8c8:	sub	x0, x29, #0xb0
     8cc:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     8d0:	ldp	x8, x9, [sp, #408]
     8d4:	ldr	x10, [sp, #400]
     8d8:	mov	w11, #0x1                   	// #1
     8dc:	ldp	x25, x26, [sp, #88]
     8e0:	stp	x11, x8, [x29, #-168]
     8e4:	ldr	w8, [sp, #424]
     8e8:	stur	x9, [x29, #-152]
     8ec:	mov	w9, #0x6                   	// #6
     8f0:	sturb	w9, [x29, #-176]
     8f4:	add	x9, x10, #0x1
     8f8:	stur	w8, [x29, #-144]
     8fc:	stp	x9, xzr, [sp, #400]
     900:	str	xzr, [sp, #416]
     904:	str	wzr, [sp, #424]
     908:	str	x19, [sp, #160]
     90c:	cbnz	x25, 914 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x914>
     910:	cbnz	x26, 105c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x105c>
     914:	cmp	x26, #0x10
     918:	mov	x0, x19
     91c:	stur	x26, [x29, #-16]
     920:	b.cc	940 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x940>  // b.lo, b.ul, b.last
     924:	add	x0, sp, #0xa0
     928:	sub	x1, x29, #0x10
     92c:	mov	x2, xzr
     930:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     934:	ldur	x8, [x29, #-16]
     938:	str	x0, [sp, #160]
     93c:	str	x8, [sp, #176]
     940:	cbz	x26, 964 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x964>
     944:	cmp	x26, #0x1
     948:	b.ne	958 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x958>  // b.any
     94c:	ldrb	w8, [x25]
     950:	strb	w8, [x0]
     954:	b	964 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x964>
     958:	mov	x1, x25
     95c:	mov	x2, x26
     960:	bl	0 <memcpy>
     964:	ldur	x8, [x29, #-16]
     968:	ldr	x9, [sp, #160]
     96c:	mov	w0, #0x20                  	// #32
     970:	str	x8, [sp, #168]
     974:	strb	wzr, [x9, x8]
     978:	bl	0 <_Znwm>
     97c:	ldr	x9, [sp, #160]
     980:	add	x8, x0, #0x10
     984:	str	x8, [x0]
     988:	cmp	x9, x19
     98c:	b.eq	9a4 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x9a4>  // b.none
     990:	ldr	x8, [sp, #176]
     994:	str	x9, [x0]
     998:	str	x8, [x0, #16]
     99c:	mov	x8, x9
     9a0:	b	9ac <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x9ac>
     9a4:	ldr	q0, [x19]
     9a8:	str	q0, [x8]
     9ac:	ldr	x1, [sp, #168]
     9b0:	ldr	x9, [sp, #32]
     9b4:	str	x0, [sp, #344]
     9b8:	mov	x2, xzr
     9bc:	str	x1, [x0, #8]
     9c0:	mov	x0, x8
     9c4:	stp	x19, xzr, [sp, #160]
     9c8:	strb	wzr, [sp, #176]
     9cc:	stp	xzr, xzr, [x9]
     9d0:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
     9d4:	tbz	w0, #0, 1068 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x1068>
     9d8:	ldr	x8, [sp, #344]
     9dc:	sub	x0, x29, #0xd0
     9e0:	add	x1, sp, #0x158
     9e4:	ldr	q0, [x8]
     9e8:	add	x8, sp, #0x120
     9ec:	stur	q0, [x8, #64]
     9f0:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     9f4:	mov	x25, x0
     9f8:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     9fc:	sub	x1, x29, #0xb0
     a00:	mov	x0, x25
     a04:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     a08:	ldr	x25, [sp, #344]
     a0c:	cbz	x25, a2c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xa2c>
     a10:	mov	x8, x25
     a14:	ldr	x0, [x8], #16
     a18:	cmp	x0, x8
     a1c:	b.eq	a24 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xa24>  // b.none
     a20:	bl	0 <_ZdlPv>
     a24:	mov	x0, x25
     a28:	bl	0 <_ZdlPv>
     a2c:	ldr	x0, [sp, #160]
     a30:	str	xzr, [sp, #344]
     a34:	cmp	x0, x19
     a38:	b.eq	a40 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xa40>  // b.none
     a3c:	bl	0 <_ZdlPv>
     a40:	sub	x0, x29, #0xb0
     a44:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     a48:	ldr	w8, [x27, #96]
     a4c:	cbz	w8, bbc <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xbbc>
     a50:	ldr	x19, [x27, #88]
     a54:	add	x8, x8, x8, lsl #1
     a58:	lsl	x21, x8, #3
     a5c:	b	a6c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xa6c>
     a60:	subs	x21, x21, #0x18
     a64:	add	x19, x19, #0x18
     a68:	b.eq	bbc <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xbbc>  // b.none
     a6c:	ldr	x8, [x19]
     a70:	ldr	x0, [x8]
     a74:	ldr	x8, [x0]
     a78:	ldr	x9, [x8, #48]
     a7c:	add	x8, sp, #0x158
     a80:	blr	x9
     a84:	sub	x0, x29, #0x100
     a88:	add	x1, sp, #0x158
     a8c:	bl	0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
     a90:	ldp	x26, x27, [sp, #88]
     a94:	mov	x25, x0
     a98:	str	x22, [sp, #128]
     a9c:	cbnz	x26, aa4 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xaa4>
     aa0:	cbnz	x27, 105c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x105c>
     aa4:	cmp	x27, #0x10
     aa8:	mov	x0, x22
     aac:	stur	x27, [x29, #-16]
     ab0:	b.cc	ad0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xad0>  // b.lo, b.ul, b.last
     ab4:	add	x0, sp, #0x80
     ab8:	sub	x1, x29, #0x10
     abc:	mov	x2, xzr
     ac0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     ac4:	ldur	x8, [x29, #-16]
     ac8:	str	x0, [sp, #128]
     acc:	str	x8, [sp, #144]
     ad0:	cbz	x27, af4 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xaf4>
     ad4:	cmp	x27, #0x1
     ad8:	b.ne	ae8 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xae8>  // b.any
     adc:	ldrb	w8, [x26]
     ae0:	strb	w8, [x0]
     ae4:	b	af4 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xaf4>
     ae8:	mov	x1, x26
     aec:	mov	x2, x27
     af0:	bl	0 <memcpy>
     af4:	ldur	x8, [x29, #-16]
     af8:	ldr	x9, [sp, #128]
     afc:	mov	x2, xzr
     b00:	str	x8, [sp, #136]
     b04:	strb	wzr, [x9, x8]
     b08:	ldp	x0, x1, [sp, #128]
     b0c:	mov	w8, #0x5                   	// #5
     b10:	sturb	w8, [x29, #-176]
     b14:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
     b18:	tbz	w0, #0, 103c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x103c>
     b1c:	ldr	x8, [sp, #128]
     b20:	stur	x24, [x29, #-168]
     b24:	cmp	x8, x22
     b28:	b.eq	b3c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xb3c>  // b.none
     b2c:	ldr	x9, [sp, #144]
     b30:	stur	x8, [x29, #-168]
     b34:	stur	x9, [x29, #-152]
     b38:	b	b44 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xb44>
     b3c:	ldr	q0, [x22]
     b40:	str	q0, [x24]
     b44:	ldr	x8, [sp, #136]
     b48:	stp	x22, xzr, [sp, #128]
     b4c:	strb	wzr, [sp, #144]
     b50:	stur	x8, [x29, #-160]
     b54:	ldp	x8, x9, [x25, #8]
     b58:	cmp	x8, x9
     b5c:	b.eq	b7c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xb7c>  // b.none
     b60:	sub	x1, x29, #0xb0
     b64:	mov	x0, x8
     b68:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     b6c:	ldr	x8, [x25, #8]
     b70:	add	x8, x8, #0x28
     b74:	str	x8, [x25, #8]
     b78:	b	b8c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xb8c>
     b7c:	sub	x2, x29, #0xb0
     b80:	mov	x0, x25
     b84:	mov	x1, x8
     b88:	bl	0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
     b8c:	sub	x0, x29, #0xb0
     b90:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     b94:	ldr	x0, [sp, #128]
     b98:	cmp	x0, x22
     b9c:	b.eq	ba4 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xba4>  // b.none
     ba0:	bl	0 <_ZdlPv>
     ba4:	ldr	x0, [sp, #344]
     ba8:	ldr	x8, [sp, #80]
     bac:	cmp	x0, x8
     bb0:	b.eq	a60 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xa60>  // b.none
     bb4:	bl	0 <_ZdlPv>
     bb8:	b	a60 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xa60>
     bbc:	ldp	x25, x19, [sp, #288]
     bc0:	cmp	x25, x19
     bc4:	b.eq	c48 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xc48>  // b.none
     bc8:	ldr	x21, [sp, #64]
     bcc:	mov	x0, x25
     bd0:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     bd4:	add	x25, x25, #0x28
     bd8:	cmp	x19, x25
     bdc:	b.ne	bcc <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xbcc>  // b.any
     be0:	ldr	x25, [sp, #288]
     be4:	cbz	x25, bf0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xbf0>
     be8:	mov	x0, x25
     bec:	bl	0 <_ZdlPv>
     bf0:	ldp	x25, x19, [sp, #376]
     bf4:	cmp	x25, x19
     bf8:	b.eq	c14 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xc14>  // b.none
     bfc:	mov	x0, x25
     c00:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     c04:	add	x25, x25, #0x28
     c08:	cmp	x19, x25
     c0c:	b.ne	bfc <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xbfc>  // b.any
     c10:	ldr	x25, [sp, #376]
     c14:	cbz	x25, c20 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xc20>
     c18:	mov	x0, x25
     c1c:	bl	0 <_ZdlPv>
     c20:	add	x0, sp, #0x190
     c24:	bl	0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
     c28:	ldr	x0, [sp, #408]
     c2c:	bl	0 <_ZdlPv>
     c30:	ldr	x0, [sp, #88]
     c34:	ldr	x8, [sp, #24]
     c38:	cmp	x0, x8
     c3c:	b.eq	1b8 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x1b8>  // b.none
     c40:	bl	0 <_ZdlPv>
     c44:	b	1b8 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x1b8>
     c48:	ldr	x21, [sp, #64]
     c4c:	cbnz	x25, be8 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xbe8>
     c50:	b	bf0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xbf0>
     c54:	ldur	x20, [x29, #-232]
     c58:	ldr	x27, [sp, #8]
     c5c:	stp	xzr, xzr, [sp, #400]
     c60:	str	wzr, [sp, #424]
     c64:	str	xzr, [sp, #416]
     c68:	cmp	x20, x27
     c6c:	b.eq	e6c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xe6c>  // b.none
     c70:	sub	x8, x29, #0xb0
     c74:	add	x9, sp, #0x158
     c78:	add	x10, sp, #0x178
     c7c:	add	x19, x8, #0x20
     c80:	add	x23, x9, #0x10
     c84:	add	x24, x10, #0x8
     c88:	add	x25, x8, #0x10
     c8c:	mov	w26, #0x7                   	// #7
     c90:	b	ca8 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xca8>
     c94:	mov	x0, x20
     c98:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
     c9c:	mov	x20, x0
     ca0:	cmp	x0, x27
     ca4:	b.eq	e58 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xe58>  // b.none
     ca8:	add	x1, x20, #0x20
     cac:	sub	x0, x29, #0xb0
     cb0:	bl	0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
     cb4:	add	x8, sp, #0x120
     cb8:	ldr	q0, [x8, #256]
     cbc:	ldur	x8, [x29, #-128]
     cc0:	stp	xzr, xzr, [x19]
     cc4:	str	xzr, [x19, #16]
     cc8:	ldp	x21, x22, [x29, #-176]
     ccc:	strb	w26, [sp, #88]
     cd0:	stur	q0, [sp, #96]
     cd4:	str	x8, [sp, #112]
     cd8:	str	x23, [sp, #344]
     cdc:	cbnz	x21, ce4 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xce4>
     ce0:	cbnz	x22, 105c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x105c>
     ce4:	cmp	x22, #0x10
     ce8:	mov	x0, x23
     cec:	str	x22, [sp, #288]
     cf0:	b.cc	d10 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xd10>  // b.lo, b.ul, b.last
     cf4:	add	x0, sp, #0x158
     cf8:	add	x1, sp, #0x120
     cfc:	mov	x2, xzr
     d00:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     d04:	ldr	x8, [sp, #288]
     d08:	str	x0, [sp, #344]
     d0c:	str	x8, [sp, #360]
     d10:	cbz	x22, d34 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xd34>
     d14:	cmp	x22, #0x1
     d18:	b.ne	d28 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xd28>  // b.any
     d1c:	ldrb	w8, [x21]
     d20:	strb	w8, [x0]
     d24:	b	d34 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xd34>
     d28:	mov	x1, x21
     d2c:	mov	x2, x22
     d30:	bl	0 <memcpy>
     d34:	ldr	x8, [sp, #288]
     d38:	ldr	x9, [sp, #344]
     d3c:	mov	w0, #0x20                  	// #32
     d40:	str	x8, [sp, #352]
     d44:	strb	wzr, [x9, x8]
     d48:	bl	0 <_Znwm>
     d4c:	ldr	x9, [sp, #344]
     d50:	add	x8, x0, #0x10
     d54:	str	x8, [x0]
     d58:	cmp	x9, x23
     d5c:	b.eq	d74 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xd74>  // b.none
     d60:	ldr	x8, [sp, #360]
     d64:	str	x9, [x0]
     d68:	str	x8, [x0, #16]
     d6c:	mov	x8, x9
     d70:	b	d7c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xd7c>
     d74:	ldr	q0, [x23]
     d78:	str	q0, [x8]
     d7c:	ldr	x1, [sp, #352]
     d80:	str	x0, [sp, #376]
     d84:	mov	x2, xzr
     d88:	stp	x23, xzr, [sp, #344]
     d8c:	str	x1, [x0, #8]
     d90:	mov	x0, x8
     d94:	strb	wzr, [sp, #360]
     d98:	stp	xzr, xzr, [x24]
     d9c:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
     da0:	tbz	w0, #0, 1068 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x1068>
     da4:	ldr	x8, [sp, #376]
     da8:	add	x0, sp, #0x190
     dac:	add	x1, sp, #0x178
     db0:	ldr	q0, [x8]
     db4:	add	x8, sp, #0x120
     db8:	stur	q0, [x8, #96]
     dbc:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     dc0:	mov	x21, x0
     dc4:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     dc8:	add	x1, sp, #0x58
     dcc:	mov	x0, x21
     dd0:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     dd4:	ldr	x21, [sp, #376]
     dd8:	cbz	x21, df8 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xdf8>
     ddc:	mov	x8, x21
     de0:	ldr	x0, [x8], #16
     de4:	cmp	x0, x8
     de8:	b.eq	df0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xdf0>  // b.none
     dec:	bl	0 <_ZdlPv>
     df0:	mov	x0, x21
     df4:	bl	0 <_ZdlPv>
     df8:	ldr	x0, [sp, #344]
     dfc:	str	xzr, [sp, #376]
     e00:	cmp	x0, x23
     e04:	b.eq	e0c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xe0c>  // b.none
     e08:	bl	0 <_ZdlPv>
     e0c:	add	x0, sp, #0x58
     e10:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     e14:	ldp	x21, x22, [x29, #-144]
     e18:	cmp	x21, x22
     e1c:	b.eq	e38 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xe38>  // b.none
     e20:	mov	x0, x21
     e24:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     e28:	add	x21, x21, #0x28
     e2c:	cmp	x22, x21
     e30:	b.ne	e20 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xe20>  // b.any
     e34:	ldur	x21, [x29, #-144]
     e38:	cbz	x21, e44 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xe44>
     e3c:	mov	x0, x21
     e40:	bl	0 <_ZdlPv>
     e44:	ldur	x0, [x29, #-176]
     e48:	cmp	x0, x25
     e4c:	b.eq	c94 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xc94>  // b.none
     e50:	bl	0 <_ZdlPv>
     e54:	b	c94 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xc94>
     e58:	ldp	x10, x8, [sp, #400]
     e5c:	ldr	d0, [sp, #416]
     e60:	ldr	w9, [sp, #424]
     e64:	add	x10, x10, #0x1
     e68:	b	e7c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xe7c>
     e6c:	mov	w9, wzr
     e70:	mov	x8, xzr
     e74:	movi	v0.2d, #0x0
     e78:	mov	w10, #0x1                   	// #1
     e7c:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
     e80:	mov	w11, #0x6                   	// #6
     e84:	mov	w12, #0x1                   	// #1
     e88:	stur	w9, [x29, #-144]
     e8c:	add	x0, x0, #0x0
     e90:	mov	w9, #0xb                   	// #11
     e94:	mov	w1, #0xb                   	// #11
     e98:	mov	x2, xzr
     e9c:	stp	x10, xzr, [sp, #400]
     ea0:	stur	d0, [x29, #-152]
     ea4:	str	xzr, [sp, #416]
     ea8:	str	wzr, [sp, #424]
     eac:	sturb	w11, [x29, #-176]
     eb0:	stp	x12, x8, [x29, #-168]
     eb4:	stp	xzr, x0, [sp, #88]
     eb8:	str	x9, [sp, #104]
     ebc:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
     ec0:	tbz	w0, #0, 1088 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x1088>
     ec4:	sub	x0, x29, #0xd0
     ec8:	add	x1, sp, #0x58
     ecc:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     ed0:	mov	x20, x0
     ed4:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     ed8:	sub	x1, x29, #0xb0
     edc:	mov	x0, x20
     ee0:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     ee4:	ldr	x20, [sp, #88]
     ee8:	cbz	x20, f08 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xf08>
     eec:	mov	x8, x20
     ef0:	ldr	x0, [x8], #16
     ef4:	cmp	x0, x8
     ef8:	b.eq	f00 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xf00>  // b.none
     efc:	bl	0 <_ZdlPv>
     f00:	mov	x0, x20
     f04:	bl	0 <_ZdlPv>
     f08:	sub	x0, x29, #0xb0
     f0c:	sub	x19, x29, #0xb0
     f10:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     f14:	mov	w8, #0x6                   	// #6
     f18:	strb	w8, [sp, #88]
     f1c:	ldur	x8, [x29, #-192]
     f20:	add	x11, x19, #0x10
     f24:	ldp	x9, x10, [x29, #-208]
     f28:	movi	v0.2d, #0x0
     f2c:	stur	x11, [x29, #-176]
     f30:	adrp	x11, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
     f34:	stur	d0, [x29, #-192]
     f38:	stur	d0, [x29, #-24]
     f3c:	ldr	d0, [x11]
     f40:	str	x8, [sp, #112]
     f44:	ldur	w8, [x29, #-184]
     f48:	ldr	x19, [sp, #16]
     f4c:	mov	w11, #0x1                   	// #1
     f50:	add	x9, x9, #0x1
     f54:	sub	x0, x29, #0xb0
     f58:	add	x1, sp, #0x58
     f5c:	stp	x11, x10, [sp, #96]
     f60:	stur	wzr, [x29, #-184]
     f64:	stur	x19, [x29, #-32]
     f68:	stur	xzr, [x29, #-160]
     f6c:	str	w8, [sp, #120]
     f70:	stp	x9, xzr, [x29, #-208]
     f74:	stur	d0, [x29, #-168]
     f78:	bl	0 <_ZN4llvm4json7OStream5valueERKNS0_5ValueE>
     f7c:	ldur	w8, [x29, #-168]
     f80:	cmp	w8, #0x1
     f84:	b.ne	10a8 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x10a8>  // b.any
     f88:	ldur	x0, [x29, #-176]
     f8c:	ldr	w8, [x0]
     f90:	cbnz	w8, 10c8 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x10c8>
     f94:	ldrb	w8, [x0, #4]
     f98:	cbz	w8, 10e8 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x10e8>
     f9c:	sub	x8, x29, #0xb0
     fa0:	add	x8, x8, #0x10
     fa4:	cmp	x0, x8
     fa8:	b.eq	fb0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xfb0>  // b.none
     fac:	bl	0 <free>
     fb0:	ldp	x9, x8, [x19, #16]
     fb4:	cmp	x9, x8
     fb8:	b.ne	fd4 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xfd4>  // b.any
     fbc:	adrp	x1, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
     fc0:	add	x1, x1, #0x0
     fc4:	mov	w2, #0x1                   	// #1
     fc8:	mov	x0, x19
     fcc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     fd0:	b	fe8 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xfe8>
     fd4:	mov	w9, #0xa                   	// #10
     fd8:	strb	w9, [x8]
     fdc:	ldr	x8, [x19, #24]
     fe0:	add	x8, x8, #0x1
     fe4:	str	x8, [x19, #24]
     fe8:	add	x0, sp, #0x58
     fec:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     ff0:	add	x0, sp, #0x190
     ff4:	bl	0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
     ff8:	ldr	x0, [sp, #408]
     ffc:	bl	0 <_ZdlPv>
    1000:	ldur	x1, [x29, #-240]
    1004:	sub	x0, x29, #0x100
    1008:	bl	0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    100c:	sub	x0, x29, #0xd0
    1010:	bl	0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1014:	ldur	x0, [x29, #-200]
    1018:	bl	0 <_ZdlPv>
    101c:	add	sp, sp, #0x2b0
    1020:	ldp	x20, x19, [sp, #80]
    1024:	ldp	x22, x21, [sp, #64]
    1028:	ldp	x24, x23, [sp, #48]
    102c:	ldp	x26, x25, [sp, #32]
    1030:	ldp	x28, x27, [sp, #16]
    1034:	ldp	x29, x30, [sp], #96
    1038:	ret
    103c:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1040:	adrp	x1, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1044:	adrp	x3, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1048:	add	x0, x0, #0x0
    104c:	add	x1, x1, #0x0
    1050:	add	x3, x3, #0x0
    1054:	mov	w2, #0x138                 	// #312
    1058:	bl	0 <__assert_fail>
    105c:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1060:	add	x0, x0, #0x0
    1064:	bl	0 <_ZSt19__throw_logic_errorPKc>
    1068:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    106c:	adrp	x1, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1070:	adrp	x3, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1074:	add	x0, x0, #0x0
    1078:	add	x1, x1, #0x0
    107c:	add	x3, x3, #0x0
    1080:	mov	w2, #0x1f1                 	// #497
    1084:	bl	0 <__assert_fail>
    1088:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    108c:	adrp	x1, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1090:	adrp	x3, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1094:	add	x0, x0, #0x0
    1098:	add	x1, x1, #0x0
    109c:	add	x3, x3, #0x0
    10a0:	mov	w2, #0x1f8                 	// #504
    10a4:	bl	0 <__assert_fail>
    10a8:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    10ac:	adrp	x1, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    10b0:	adrp	x3, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    10b4:	add	x0, x0, #0x0
    10b8:	add	x1, x1, #0x0
    10bc:	add	x3, x3, #0x0
    10c0:	mov	w2, #0x2fd                 	// #765
    10c4:	bl	0 <__assert_fail>
    10c8:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    10cc:	adrp	x1, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    10d0:	adrp	x3, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    10d4:	add	x0, x0, #0x0
    10d8:	add	x1, x1, #0x0
    10dc:	add	x3, x3, #0x0
    10e0:	mov	w2, #0x2fe                 	// #766
    10e4:	bl	0 <__assert_fail>
    10e8:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    10ec:	adrp	x1, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    10f0:	adrp	x3, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    10f4:	add	x0, x0, #0x0
    10f8:	add	x1, x1, #0x0
    10fc:	add	x3, x3, #0x0
    1100:	mov	w2, #0x2ff                 	// #767
    1104:	bl	0 <__assert_fail>

0000000000001108 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE>:
    1108:	sub	sp, sp, #0x140
    110c:	stp	x29, x30, [sp, #224]
    1110:	stp	x28, x27, [sp, #240]
    1114:	stp	x26, x25, [sp, #256]
    1118:	stp	x24, x23, [sp, #272]
    111c:	stp	x22, x21, [sp, #288]
    1120:	stp	x20, x19, [sp, #304]
    1124:	add	x29, sp, #0xe0
    1128:	ldrb	w9, [x0, #8]
    112c:	mov	x20, x0
    1130:	mov	x19, x8
    1134:	sub	w9, w9, #0x2
    1138:	cmp	w9, #0x16
    113c:	b.hi	1178 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x70>  // b.pmore
    1140:	adrp	x8, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1144:	add	x8, x8, #0x0
    1148:	adr	x10, 1158 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x50>
    114c:	ldrb	w11, [x8, x9]
    1150:	add	x10, x10, x11, lsl #2
    1154:	br	x10
    1158:	ldp	x0, x1, [x20, #24]
    115c:	mov	w8, #0x4                   	// #4
    1160:	mov	x2, xzr
    1164:	strb	w8, [x19]
    1168:	stp	x0, x1, [x19, #8]
    116c:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    1170:	tbnz	w0, #0, 1620 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x518>
    1174:	b	1d7c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xc74>
    1178:	stp	xzr, xzr, [x29, #-80]
    117c:	stur	wzr, [x29, #-56]
    1180:	stur	xzr, [x29, #-64]
    1184:	ldr	x8, [x20]
    1188:	mov	x0, x20
    118c:	add	x21, sp, #0x70
    1190:	ldr	x9, [x8, #40]
    1194:	add	x8, sp, #0x70
    1198:	blr	x9
    119c:	ldp	x0, x1, [sp, #112]
    11a0:	mov	w8, #0x5                   	// #5
    11a4:	mov	x2, xzr
    11a8:	sturb	w8, [x29, #-48]
    11ac:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    11b0:	tbz	w0, #0, 1dbc <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xcb4>
    11b4:	ldr	x8, [sp, #112]
    11b8:	sub	x9, x29, #0x30
    11bc:	add	x22, x21, #0x10
    11c0:	add	x9, x9, #0x18
    11c4:	cmp	x8, x22
    11c8:	stur	x9, [x29, #-40]
    11cc:	b.eq	1344 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x23c>  // b.none
    11d0:	ldr	x9, [sp, #128]
    11d4:	stur	x8, [x29, #-40]
    11d8:	stur	x9, [x29, #-24]
    11dc:	b	134c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x244>
    11e0:	movi	v0.2d, #0x0
    11e4:	stur	xzr, [x29, #-64]
    11e8:	stur	q0, [x29, #-80]
    11ec:	ldr	w8, [x20, #32]
    11f0:	cbz	w8, 132c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x224>
    11f4:	mov	x21, xzr
    11f8:	sub	x22, x8, #0x1
    11fc:	add	x23, x20, #0x28
    1200:	ldr	x0, [x23, x21, lsl #3]
    1204:	sub	x8, x29, #0x30
    1208:	bl	1108 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE>
    120c:	ldp	x8, x9, [x29, #-72]
    1210:	cmp	x8, x9
    1214:	b.eq	1234 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x12c>  // b.none
    1218:	sub	x1, x29, #0x30
    121c:	mov	x0, x8
    1220:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    1224:	ldur	x8, [x29, #-72]
    1228:	add	x8, x8, #0x28
    122c:	stur	x8, [x29, #-72]
    1230:	b	1244 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x13c>
    1234:	sub	x0, x29, #0x50
    1238:	sub	x2, x29, #0x30
    123c:	mov	x1, x8
    1240:	bl	0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1244:	sub	x0, x29, #0x30
    1248:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    124c:	cmp	x22, x21
    1250:	b.eq	1320 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x218>  // b.none
    1254:	ldr	w8, [x20, #32]
    1258:	add	x21, x21, #0x1
    125c:	cmp	x21, x8
    1260:	b.cc	1200 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xf8>  // b.lo, b.ul, b.last
    1264:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1268:	adrp	x1, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    126c:	adrp	x3, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1270:	add	x0, x0, #0x0
    1274:	add	x1, x1, #0x0
    1278:	add	x3, x3, #0x0
    127c:	mov	w2, #0x22e                 	// #558
    1280:	bl	0 <__assert_fail>
    1284:	ldrb	w8, [x20, #24]
    1288:	b	1298 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x190>
    128c:	strb	wzr, [x19]
    1290:	b	1620 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x518>
    1294:	ldr	x8, [x20, #24]
    1298:	mov	w9, #0x3                   	// #3
    129c:	strb	w9, [x19]
    12a0:	str	x8, [x19, #8]
    12a4:	b	1620 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x518>
    12a8:	movi	v0.2d, #0x0
    12ac:	stur	xzr, [x29, #-64]
    12b0:	stur	q0, [x29, #-80]
    12b4:	ldr	w8, [x20, #32]
    12b8:	lsl	x21, x8, #3
    12bc:	cbz	x21, 132c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x224>
    12c0:	add	x20, x20, #0x28
    12c4:	b	12ec <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x1e4>
    12c8:	sub	x0, x29, #0x50
    12cc:	sub	x2, x29, #0x30
    12d0:	mov	x1, x8
    12d4:	bl	0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    12d8:	sub	x0, x29, #0x30
    12dc:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    12e0:	subs	x21, x21, #0x8
    12e4:	add	x20, x20, #0x8
    12e8:	b.eq	1320 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x218>  // b.none
    12ec:	ldr	x0, [x20]
    12f0:	sub	x8, x29, #0x30
    12f4:	bl	1108 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE>
    12f8:	ldp	x8, x9, [x29, #-72]
    12fc:	cmp	x8, x9
    1300:	b.eq	12c8 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x1c0>  // b.none
    1304:	sub	x1, x29, #0x30
    1308:	mov	x0, x8
    130c:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    1310:	ldur	x8, [x29, #-72]
    1314:	add	x8, x8, #0x28
    1318:	stur	x8, [x29, #-72]
    131c:	b	12d8 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x1d0>
    1320:	ldur	q0, [x29, #-80]
    1324:	ldur	x8, [x29, #-64]
    1328:	b	1330 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x228>
    132c:	mov	x8, xzr
    1330:	mov	w9, #0x7                   	// #7
    1334:	stur	q0, [x19, #8]
    1338:	strb	w9, [x19]
    133c:	str	x8, [x19, #24]
    1340:	b	1620 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x518>
    1344:	ldr	q0, [x8]
    1348:	str	q0, [x9]
    134c:	ldr	x8, [sp, #120]
    1350:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1354:	add	x0, x0, #0x0
    1358:	mov	w9, #0x9                   	// #9
    135c:	mov	w1, #0x9                   	// #9
    1360:	mov	x2, xzr
    1364:	stp	x22, xzr, [sp, #112]
    1368:	strb	wzr, [sp, #128]
    136c:	stp	xzr, x0, [sp, #88]
    1370:	stur	x8, [x29, #-32]
    1374:	str	x9, [sp, #104]
    1378:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    137c:	tbz	w0, #0, 1d9c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xc94>
    1380:	sub	x0, x29, #0x50
    1384:	add	x1, sp, #0x58
    1388:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
    138c:	mov	x21, x0
    1390:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1394:	sub	x1, x29, #0x30
    1398:	mov	x0, x21
    139c:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    13a0:	ldr	x21, [sp, #88]
    13a4:	cbz	x21, 13c4 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x2bc>
    13a8:	mov	x8, x21
    13ac:	ldr	x0, [x8], #16
    13b0:	cmp	x0, x8
    13b4:	b.eq	13bc <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x2b4>  // b.none
    13b8:	bl	0 <_ZdlPv>
    13bc:	mov	x0, x21
    13c0:	bl	0 <_ZdlPv>
    13c4:	sub	x0, x29, #0x30
    13c8:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    13cc:	ldr	x0, [sp, #112]
    13d0:	cmp	x0, x22
    13d4:	b.eq	13dc <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x2d4>  // b.none
    13d8:	bl	0 <_ZdlPv>
    13dc:	ldrb	w8, [x20, #8]
    13e0:	cmp	w8, #0x6
    13e4:	b.ne	14a4 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x39c>  // b.any
    13e8:	adrp	x21, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    13ec:	add	x21, x21, #0x0
    13f0:	mov	w8, #0x4                   	// #4
    13f4:	mov	w9, #0x3                   	// #3
    13f8:	mov	w1, #0x3                   	// #3
    13fc:	mov	x0, x21
    1400:	mov	x2, xzr
    1404:	sturb	w8, [x29, #-48]
    1408:	stp	x21, x9, [x29, #-40]
    140c:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    1410:	tbz	w0, #0, 1d7c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xc74>
    1414:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1418:	add	x0, x0, #0x0
    141c:	mov	w8, #0x4                   	// #4
    1420:	mov	w1, #0x4                   	// #4
    1424:	mov	x2, xzr
    1428:	stp	xzr, x0, [sp, #88]
    142c:	str	x8, [sp, #104]
    1430:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    1434:	tbz	w0, #0, 1d9c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xc94>
    1438:	sub	x0, x29, #0x50
    143c:	add	x1, sp, #0x58
    1440:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
    1444:	mov	x22, x0
    1448:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    144c:	sub	x1, x29, #0x30
    1450:	mov	x0, x22
    1454:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    1458:	ldr	x22, [sp, #88]
    145c:	cbz	x22, 147c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x374>
    1460:	mov	x8, x22
    1464:	ldr	x0, [x8], #16
    1468:	cmp	x0, x8
    146c:	b.eq	1474 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x36c>  // b.none
    1470:	bl	0 <_ZdlPv>
    1474:	mov	x0, x22
    1478:	bl	0 <_ZdlPv>
    147c:	sub	x0, x29, #0x30
    1480:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1484:	ldr	x8, [x20, #24]
    1488:	ldr	x8, [x8]
    148c:	cbz	x8, 1dfc <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xcf4>
    1490:	ldrb	w9, [x8, #8]
    1494:	cmp	w9, #0x12
    1498:	b.ne	1e1c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xd14>  // b.any
    149c:	ldp	x0, x1, [x8, #24]
    14a0:	b	1558 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x450>
    14a4:	cmp	w8, #0x15
    14a8:	b.eq	1640 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x538>  // b.none
    14ac:	cmp	w8, #0x13
    14b0:	b.ne	17a8 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x6a0>  // b.any
    14b4:	adrp	x21, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    14b8:	add	x21, x21, #0x0
    14bc:	mov	w8, #0x4                   	// #4
    14c0:	mov	w9, #0x3                   	// #3
    14c4:	mov	w1, #0x3                   	// #3
    14c8:	mov	x0, x21
    14cc:	mov	x2, xzr
    14d0:	sturb	w8, [x29, #-48]
    14d4:	stp	x21, x9, [x29, #-40]
    14d8:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    14dc:	tbz	w0, #0, 1d7c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xc74>
    14e0:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    14e4:	add	x0, x0, #0x0
    14e8:	mov	w8, #0x4                   	// #4
    14ec:	mov	w1, #0x4                   	// #4
    14f0:	mov	x2, xzr
    14f4:	stp	xzr, x0, [sp, #88]
    14f8:	str	x8, [sp, #104]
    14fc:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    1500:	tbz	w0, #0, 1d9c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xc94>
    1504:	sub	x0, x29, #0x50
    1508:	add	x1, sp, #0x58
    150c:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
    1510:	mov	x22, x0
    1514:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1518:	sub	x1, x29, #0x30
    151c:	mov	x0, x22
    1520:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    1524:	ldr	x22, [sp, #88]
    1528:	cbz	x22, 1548 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x440>
    152c:	mov	x8, x22
    1530:	ldr	x0, [x8], #16
    1534:	cmp	x0, x8
    1538:	b.eq	1540 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x438>  // b.none
    153c:	bl	0 <_ZdlPv>
    1540:	mov	x0, x22
    1544:	bl	0 <_ZdlPv>
    1548:	sub	x0, x29, #0x30
    154c:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1550:	mov	x0, x20
    1554:	bl	0 <_ZNK4llvm7VarInit7getNameEv>
    1558:	mov	w8, #0x4                   	// #4
    155c:	mov	x2, xzr
    1560:	sturb	w8, [x29, #-48]
    1564:	stp	x0, x1, [x29, #-40]
    1568:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    156c:	tbz	w0, #0, 1d7c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xc74>
    1570:	mov	w8, #0x3                   	// #3
    1574:	mov	w1, #0x3                   	// #3
    1578:	mov	x0, x21
    157c:	stp	xzr, x21, [sp, #88]
    1580:	str	x8, [sp, #104]
    1584:	mov	x2, xzr
    1588:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    158c:	tbz	w0, #0, 1d9c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xc94>
    1590:	sub	x0, x29, #0x50
    1594:	add	x1, sp, #0x58
    1598:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
    159c:	mov	x20, x0
    15a0:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    15a4:	sub	x1, x29, #0x30
    15a8:	mov	x0, x20
    15ac:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    15b0:	ldr	x20, [sp, #88]
    15b4:	cbz	x20, 15d4 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x4cc>
    15b8:	mov	x8, x20
    15bc:	ldr	x0, [x8], #16
    15c0:	cmp	x0, x8
    15c4:	b.eq	15cc <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x4c4>  // b.none
    15c8:	bl	0 <_ZdlPv>
    15cc:	mov	x0, x20
    15d0:	bl	0 <_ZdlPv>
    15d4:	sub	x0, x29, #0x30
    15d8:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    15dc:	mov	w8, #0x6                   	// #6
    15e0:	ldp	x10, x11, [x29, #-80]
    15e4:	strb	w8, [x19]
    15e8:	ldur	w8, [x29, #-56]
    15ec:	ldur	x12, [x29, #-64]
    15f0:	mov	w9, #0x1                   	// #1
    15f4:	stp	x9, x11, [x19, #8]
    15f8:	str	w8, [x19, #32]
    15fc:	add	x8, x10, #0x1
    1600:	str	x12, [x19, #24]
    1604:	stp	xzr, xzr, [x29, #-72]
    1608:	stur	x8, [x29, #-80]
    160c:	stur	wzr, [x29, #-56]
    1610:	sub	x0, x29, #0x50
    1614:	bl	0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1618:	ldur	x0, [x29, #-72]
    161c:	bl	0 <_ZdlPv>
    1620:	ldp	x20, x19, [sp, #304]
    1624:	ldp	x22, x21, [sp, #288]
    1628:	ldp	x24, x23, [sp, #272]
    162c:	ldp	x26, x25, [sp, #256]
    1630:	ldp	x28, x27, [sp, #240]
    1634:	ldp	x29, x30, [sp, #224]
    1638:	add	sp, sp, #0x140
    163c:	ret
    1640:	ldr	x21, [x20, #24]
    1644:	cbz	x21, 1e3c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xd34>
    1648:	ldrb	w8, [x21, #8]
    164c:	cmp	w8, #0x13
    1650:	b.ne	1924 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x81c>  // b.any
    1654:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1658:	mov	w8, #0x4                   	// #4
    165c:	add	x0, x0, #0x0
    1660:	mov	w9, #0x6                   	// #6
    1664:	mov	w1, #0x6                   	// #6
    1668:	mov	x2, xzr
    166c:	sturb	w8, [x29, #-48]
    1670:	stp	x0, x9, [x29, #-40]
    1674:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    1678:	tbz	w0, #0, 1d7c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xc74>
    167c:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1680:	add	x0, x0, #0x0
    1684:	mov	w8, #0x4                   	// #4
    1688:	mov	w1, #0x4                   	// #4
    168c:	mov	x2, xzr
    1690:	stp	xzr, x0, [sp, #88]
    1694:	str	x8, [sp, #104]
    1698:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    169c:	tbz	w0, #0, 1d9c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xc94>
    16a0:	sub	x0, x29, #0x50
    16a4:	add	x1, sp, #0x58
    16a8:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
    16ac:	mov	x22, x0
    16b0:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    16b4:	sub	x1, x29, #0x30
    16b8:	mov	x0, x22
    16bc:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    16c0:	ldr	x22, [sp, #88]
    16c4:	cbz	x22, 16e4 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x5dc>
    16c8:	mov	x8, x22
    16cc:	ldr	x0, [x8], #16
    16d0:	cmp	x0, x8
    16d4:	b.eq	16dc <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x5d4>  // b.none
    16d8:	bl	0 <_ZdlPv>
    16dc:	mov	x0, x22
    16e0:	bl	0 <_ZdlPv>
    16e4:	sub	x0, x29, #0x30
    16e8:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    16ec:	mov	x0, x21
    16f0:	bl	0 <_ZNK4llvm7VarInit7getNameEv>
    16f4:	mov	w8, #0x4                   	// #4
    16f8:	mov	x2, xzr
    16fc:	sturb	w8, [x29, #-48]
    1700:	stp	x0, x1, [x29, #-40]
    1704:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    1708:	tbz	w0, #0, 1d7c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xc74>
    170c:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1710:	add	x0, x0, #0x0
    1714:	mov	w8, #0x3                   	// #3
    1718:	mov	w1, #0x3                   	// #3
    171c:	mov	x2, xzr
    1720:	stp	xzr, x0, [sp, #88]
    1724:	str	x8, [sp, #104]
    1728:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    172c:	tbz	w0, #0, 1d9c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xc94>
    1730:	sub	x0, x29, #0x50
    1734:	add	x1, sp, #0x58
    1738:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
    173c:	mov	x21, x0
    1740:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1744:	sub	x1, x29, #0x30
    1748:	mov	x0, x21
    174c:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    1750:	ldr	x21, [sp, #88]
    1754:	cbz	x21, 1774 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x66c>
    1758:	mov	x8, x21
    175c:	ldr	x0, [x8], #16
    1760:	cmp	x0, x8
    1764:	b.eq	176c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x664>  // b.none
    1768:	bl	0 <_ZdlPv>
    176c:	mov	x0, x21
    1770:	bl	0 <_ZdlPv>
    1774:	sub	x0, x29, #0x30
    1778:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    177c:	ldr	w8, [x20, #32]
    1780:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1784:	mov	w9, #0x3                   	// #3
    1788:	add	x0, x0, #0x0
    178c:	mov	w10, #0x5                   	// #5
    1790:	sturb	w9, [x29, #-48]
    1794:	stp	xzr, x0, [sp, #88]
    1798:	stur	x8, [x29, #-40]
    179c:	str	x10, [sp, #104]
    17a0:	mov	w1, #0x5                   	// #5
    17a4:	b	1584 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x47c>
    17a8:	cmp	w8, #0x5
    17ac:	b.ne	1924 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x81c>  // b.any
    17b0:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    17b4:	mov	w8, #0x4                   	// #4
    17b8:	add	x0, x0, #0x0
    17bc:	mov	w9, #0x3                   	// #3
    17c0:	mov	w1, #0x3                   	// #3
    17c4:	mov	x2, xzr
    17c8:	sturb	w8, [x29, #-48]
    17cc:	stp	x0, x9, [x29, #-40]
    17d0:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    17d4:	tbz	w0, #0, 1d7c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xc74>
    17d8:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    17dc:	add	x0, x0, #0x0
    17e0:	mov	w8, #0x4                   	// #4
    17e4:	mov	w1, #0x4                   	// #4
    17e8:	mov	x2, xzr
    17ec:	stp	xzr, x0, [sp, #88]
    17f0:	str	x8, [sp, #104]
    17f4:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    17f8:	tbz	w0, #0, 1d9c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xc94>
    17fc:	sub	x0, x29, #0x50
    1800:	add	x1, sp, #0x58
    1804:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
    1808:	mov	x21, x0
    180c:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1810:	sub	x1, x29, #0x30
    1814:	mov	x0, x21
    1818:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    181c:	ldr	x21, [sp, #88]
    1820:	cbz	x21, 1840 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x738>
    1824:	mov	x8, x21
    1828:	ldr	x0, [x8], #16
    182c:	cmp	x0, x8
    1830:	b.eq	1838 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x730>  // b.none
    1834:	bl	0 <_ZdlPv>
    1838:	mov	x0, x21
    183c:	bl	0 <_ZdlPv>
    1840:	sub	x0, x29, #0x30
    1844:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1848:	ldr	x0, [x20, #32]
    184c:	sub	x8, x29, #0x30
    1850:	bl	1108 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE>
    1854:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1858:	add	x0, x0, #0x0
    185c:	mov	w8, #0x8                   	// #8
    1860:	mov	w1, #0x8                   	// #8
    1864:	mov	x2, xzr
    1868:	stp	xzr, x0, [sp, #88]
    186c:	str	x8, [sp, #104]
    1870:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    1874:	tbz	w0, #0, 1d9c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xc94>
    1878:	sub	x0, x29, #0x50
    187c:	add	x1, sp, #0x58
    1880:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
    1884:	mov	x21, x0
    1888:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    188c:	sub	x1, x29, #0x30
    1890:	mov	x0, x21
    1894:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    1898:	ldr	x21, [sp, #88]
    189c:	cbz	x21, 18bc <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x7b4>
    18a0:	mov	x8, x21
    18a4:	ldr	x0, [x8], #16
    18a8:	cmp	x0, x8
    18ac:	b.eq	18b4 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x7ac>  // b.none
    18b0:	bl	0 <_ZdlPv>
    18b4:	mov	x0, x21
    18b8:	bl	0 <_ZdlPv>
    18bc:	sub	x0, x29, #0x30
    18c0:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    18c4:	ldr	x0, [x20, #40]
    18c8:	cbz	x0, 1a14 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x90c>
    18cc:	ldr	x8, [x0]
    18d0:	add	x21, sp, #0x38
    18d4:	ldr	x9, [x8, #48]
    18d8:	add	x8, sp, #0x38
    18dc:	blr	x9
    18e0:	ldp	x0, x1, [sp, #56]
    18e4:	mov	w8, #0x5                   	// #5
    18e8:	mov	x2, xzr
    18ec:	sturb	w8, [x29, #-48]
    18f0:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    18f4:	tbz	w0, #0, 1dbc <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xcb4>
    18f8:	ldr	x8, [sp, #56]
    18fc:	sub	x9, x29, #0x30
    1900:	add	x22, x21, #0x10
    1904:	add	x9, x9, #0x18
    1908:	cmp	x8, x22
    190c:	stur	x9, [x29, #-40]
    1910:	b.eq	197c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x874>  // b.none
    1914:	ldr	x9, [sp, #72]
    1918:	stur	x8, [x29, #-40]
    191c:	stur	x9, [x29, #-24]
    1920:	b	1984 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x87c>
    1924:	ldr	x8, [x20]
    1928:	mov	x0, x20
    192c:	ldr	x8, [x8, #32]
    1930:	blr	x8
    1934:	tbnz	w0, #0, 1e5c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xd54>
    1938:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    193c:	mov	w8, #0x4                   	// #4
    1940:	add	x0, x0, #0x0
    1944:	mov	w9, #0x7                   	// #7
    1948:	mov	w1, #0x7                   	// #7
    194c:	mov	x2, xzr
    1950:	sturb	w8, [x29, #-48]
    1954:	stp	x0, x9, [x29, #-40]
    1958:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    195c:	tbz	w0, #0, 1d7c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xc74>
    1960:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1964:	add	x0, x0, #0x0
    1968:	mov	w8, #0x4                   	// #4
    196c:	stp	xzr, x0, [sp, #88]
    1970:	str	x8, [sp, #104]
    1974:	mov	w1, #0x4                   	// #4
    1978:	b	1584 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x47c>
    197c:	ldr	q0, [x8]
    1980:	str	q0, [x9]
    1984:	ldr	x8, [sp, #64]
    1988:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    198c:	add	x0, x0, #0x0
    1990:	mov	w9, #0x4                   	// #4
    1994:	mov	w1, #0x4                   	// #4
    1998:	mov	x2, xzr
    199c:	stp	x22, xzr, [sp, #56]
    19a0:	strb	wzr, [sp, #72]
    19a4:	stp	xzr, x0, [sp, #88]
    19a8:	stur	x8, [x29, #-32]
    19ac:	str	x9, [sp, #104]
    19b0:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    19b4:	tbz	w0, #0, 1d9c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xc94>
    19b8:	sub	x0, x29, #0x50
    19bc:	add	x1, sp, #0x58
    19c0:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
    19c4:	mov	x21, x0
    19c8:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    19cc:	sub	x1, x29, #0x30
    19d0:	mov	x0, x21
    19d4:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    19d8:	ldr	x21, [sp, #88]
    19dc:	cbz	x21, 19fc <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x8f4>
    19e0:	mov	x8, x21
    19e4:	ldr	x0, [x8], #16
    19e8:	cmp	x0, x8
    19ec:	b.eq	19f4 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x8ec>  // b.none
    19f0:	bl	0 <_ZdlPv>
    19f4:	mov	x0, x21
    19f8:	bl	0 <_ZdlPv>
    19fc:	sub	x0, x29, #0x30
    1a00:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1a04:	ldr	x0, [sp, #56]
    1a08:	cmp	x0, x22
    1a0c:	b.eq	1a14 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x90c>  // b.none
    1a10:	bl	0 <_ZdlPv>
    1a14:	stp	xzr, xzr, [sp, #88]
    1a18:	str	xzr, [sp, #104]
    1a1c:	ldr	w22, [x20, #48]
    1a20:	cbz	w22, 1c80 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xb78>
    1a24:	sub	x8, x29, #0x30
    1a28:	mov	x9, sp
    1a2c:	mov	x23, xzr
    1a30:	add	x24, x20, #0x38
    1a34:	mov	w25, #0x7                   	// #7
    1a38:	add	x26, x8, #0x18
    1a3c:	add	x27, x9, #0x10
    1a40:	stp	xzr, xzr, [sp, #32]
    1a44:	str	xzr, [sp, #48]
    1a48:	ldr	x0, [x24, x23, lsl #3]
    1a4c:	sub	x8, x29, #0x30
    1a50:	bl	1108 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE>
    1a54:	ldp	x8, x9, [sp, #40]
    1a58:	cmp	x8, x9
    1a5c:	b.eq	1a7c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x974>  // b.none
    1a60:	sub	x1, x29, #0x30
    1a64:	mov	x0, x8
    1a68:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    1a6c:	ldr	x8, [sp, #40]
    1a70:	add	x8, x8, #0x28
    1a74:	str	x8, [sp, #40]
    1a78:	b	1a8c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x984>
    1a7c:	add	x0, sp, #0x20
    1a80:	sub	x2, x29, #0x30
    1a84:	mov	x1, x8
    1a88:	bl	0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1a8c:	sub	x0, x29, #0x30
    1a90:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1a94:	ldr	w8, [x20, #52]
    1a98:	cmp	x23, x8
    1a9c:	b.cs	1ddc <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xcd4>  // b.hs, b.nlast
    1aa0:	ldr	w8, [x20, #48]
    1aa4:	add	x8, x24, x8, lsl #3
    1aa8:	ldr	x0, [x8, x23, lsl #3]
    1aac:	cbz	x0, 1af8 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x9f0>
    1ab0:	ldr	x8, [x0]
    1ab4:	ldr	x9, [x8, #48]
    1ab8:	mov	x8, sp
    1abc:	blr	x9
    1ac0:	ldp	x0, x1, [sp]
    1ac4:	mov	w8, #0x5                   	// #5
    1ac8:	mov	x2, xzr
    1acc:	sturb	w8, [x29, #-48]
    1ad0:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    1ad4:	tbz	w0, #0, 1dbc <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xcb4>
    1ad8:	ldr	x8, [sp]
    1adc:	stur	x26, [x29, #-40]
    1ae0:	cmp	x8, x27
    1ae4:	b.eq	1b24 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xa1c>  // b.none
    1ae8:	ldr	x9, [sp, #16]
    1aec:	stur	x8, [x29, #-40]
    1af0:	stur	x9, [x29, #-24]
    1af4:	b	1b2c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xa24>
    1af8:	ldp	x8, x9, [sp, #40]
    1afc:	sturb	wzr, [x29, #-48]
    1b00:	cmp	x8, x9
    1b04:	b.eq	1b90 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xa88>  // b.none
    1b08:	sub	x1, x29, #0x30
    1b0c:	mov	x0, x8
    1b10:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    1b14:	ldr	x8, [sp, #40]
    1b18:	add	x8, x8, #0x28
    1b1c:	str	x8, [sp, #40]
    1b20:	b	1ba0 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xa98>
    1b24:	ldr	q0, [x27]
    1b28:	str	q0, [x26]
    1b2c:	ldp	x8, x10, [sp, #40]
    1b30:	ldr	x9, [sp, #8]
    1b34:	stp	x27, xzr, [sp]
    1b38:	strb	wzr, [sp, #16]
    1b3c:	cmp	x8, x10
    1b40:	stur	x9, [x29, #-32]
    1b44:	b.eq	1b64 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xa5c>  // b.none
    1b48:	sub	x1, x29, #0x30
    1b4c:	mov	x0, x8
    1b50:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    1b54:	ldr	x8, [sp, #40]
    1b58:	add	x8, x8, #0x28
    1b5c:	str	x8, [sp, #40]
    1b60:	b	1b74 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xa6c>
    1b64:	add	x0, sp, #0x20
    1b68:	sub	x2, x29, #0x30
    1b6c:	mov	x1, x8
    1b70:	bl	0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1b74:	sub	x0, x29, #0x30
    1b78:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1b7c:	ldr	x0, [sp]
    1b80:	cmp	x0, x27
    1b84:	b.eq	1ba8 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xaa0>  // b.none
    1b88:	bl	0 <_ZdlPv>
    1b8c:	b	1ba8 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xaa0>
    1b90:	add	x0, sp, #0x20
    1b94:	sub	x2, x29, #0x30
    1b98:	mov	x1, x8
    1b9c:	bl	0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1ba0:	sub	x0, x29, #0x30
    1ba4:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1ba8:	ldp	x8, x10, [sp, #96]
    1bac:	ldr	q0, [sp, #32]
    1bb0:	ldr	x9, [sp, #48]
    1bb4:	sturb	w25, [x29, #-48]
    1bb8:	cmp	x8, x10
    1bbc:	stp	xzr, xzr, [sp, #32]
    1bc0:	stur	q0, [x29, #-40]
    1bc4:	stur	x9, [x29, #-24]
    1bc8:	str	xzr, [sp, #48]
    1bcc:	b.eq	1bec <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xae4>  // b.none
    1bd0:	sub	x1, x29, #0x30
    1bd4:	mov	x0, x8
    1bd8:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    1bdc:	ldr	x8, [sp, #96]
    1be0:	add	x8, x8, #0x28
    1be4:	str	x8, [sp, #96]
    1be8:	b	1bfc <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xaf4>
    1bec:	add	x0, sp, #0x58
    1bf0:	sub	x2, x29, #0x30
    1bf4:	mov	x1, x8
    1bf8:	bl	0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1bfc:	sub	x0, x29, #0x30
    1c00:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1c04:	ldp	x21, x28, [sp, #32]
    1c08:	cmp	x21, x28
    1c0c:	b.eq	1c28 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xb20>  // b.none
    1c10:	mov	x0, x21
    1c14:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1c18:	add	x21, x21, #0x28
    1c1c:	cmp	x28, x21
    1c20:	b.ne	1c10 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xb08>  // b.any
    1c24:	ldr	x21, [sp, #32]
    1c28:	cbz	x21, 1c34 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xb2c>
    1c2c:	mov	x0, x21
    1c30:	bl	0 <_ZdlPv>
    1c34:	add	x23, x23, #0x1
    1c38:	cmp	x23, x22
    1c3c:	b.eq	1c74 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xb6c>  // b.none
    1c40:	ldr	w8, [x20, #48]
    1c44:	stp	xzr, xzr, [sp, #32]
    1c48:	str	xzr, [sp, #48]
    1c4c:	cmp	x23, x8
    1c50:	b.cc	1a48 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x940>  // b.lo, b.ul, b.last
    1c54:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1c58:	adrp	x1, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1c5c:	adrp	x3, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1c60:	add	x0, x0, #0x0
    1c64:	add	x1, x1, #0x0
    1c68:	add	x3, x3, #0x0
    1c6c:	mov	w2, #0x540                 	// #1344
    1c70:	bl	0 <__assert_fail>
    1c74:	ldp	x10, x9, [sp, #88]
    1c78:	ldr	x8, [sp, #104]
    1c7c:	b	1c8c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xb84>
    1c80:	mov	x8, xzr
    1c84:	mov	x9, xzr
    1c88:	mov	x10, xzr
    1c8c:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1c90:	mov	w11, #0x7                   	// #7
    1c94:	stur	x8, [x29, #-24]
    1c98:	add	x0, x0, #0x0
    1c9c:	mov	w8, #0x4                   	// #4
    1ca0:	mov	w1, #0x4                   	// #4
    1ca4:	mov	x2, xzr
    1ca8:	stp	x10, x9, [x29, #-40]
    1cac:	stp	xzr, xzr, [sp, #96]
    1cb0:	str	xzr, [sp, #88]
    1cb4:	sturb	w11, [x29, #-48]
    1cb8:	stp	xzr, x0, [sp, #32]
    1cbc:	str	x8, [sp, #48]
    1cc0:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    1cc4:	tbz	w0, #0, 1d9c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xc94>
    1cc8:	sub	x0, x29, #0x50
    1ccc:	add	x1, sp, #0x20
    1cd0:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
    1cd4:	mov	x20, x0
    1cd8:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1cdc:	sub	x1, x29, #0x30
    1ce0:	mov	x0, x20
    1ce4:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    1ce8:	ldr	x20, [sp, #32]
    1cec:	cbz	x20, 1d0c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xc04>
    1cf0:	mov	x8, x20
    1cf4:	ldr	x0, [x8], #16
    1cf8:	cmp	x0, x8
    1cfc:	b.eq	1d04 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xbfc>  // b.none
    1d00:	bl	0 <_ZdlPv>
    1d04:	mov	x0, x20
    1d08:	bl	0 <_ZdlPv>
    1d0c:	sub	x0, x29, #0x30
    1d10:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1d14:	mov	w8, #0x6                   	// #6
    1d18:	ldp	x10, x11, [x29, #-80]
    1d1c:	ldur	x12, [x29, #-64]
    1d20:	strb	w8, [x19]
    1d24:	ldur	w8, [x29, #-56]
    1d28:	mov	w9, #0x1                   	// #1
    1d2c:	stp	x9, x11, [x19, #8]
    1d30:	str	x12, [x19, #24]
    1d34:	str	w8, [x19, #32]
    1d38:	ldp	x19, x20, [sp, #88]
    1d3c:	add	x8, x10, #0x1
    1d40:	stp	x8, xzr, [x29, #-80]
    1d44:	stur	xzr, [x29, #-64]
    1d48:	cmp	x19, x20
    1d4c:	stur	wzr, [x29, #-56]
    1d50:	b.eq	1d6c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xc64>  // b.none
    1d54:	mov	x0, x19
    1d58:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1d5c:	add	x19, x19, #0x28
    1d60:	cmp	x20, x19
    1d64:	b.ne	1d54 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xc4c>  // b.any
    1d68:	ldr	x19, [sp, #88]
    1d6c:	cbz	x19, 1610 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x508>
    1d70:	mov	x0, x19
    1d74:	bl	0 <_ZdlPv>
    1d78:	b	1610 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x508>
    1d7c:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1d80:	adrp	x1, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1d84:	adrp	x3, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1d88:	add	x0, x0, #0x0
    1d8c:	add	x1, x1, #0x0
    1d90:	add	x3, x3, #0x0
    1d94:	mov	w2, #0x144                 	// #324
    1d98:	bl	0 <__assert_fail>
    1d9c:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1da0:	adrp	x1, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1da4:	adrp	x3, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1da8:	add	x0, x0, #0x0
    1dac:	add	x1, x1, #0x0
    1db0:	add	x3, x3, #0x0
    1db4:	mov	w2, #0x1f8                 	// #504
    1db8:	bl	0 <__assert_fail>
    1dbc:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1dc0:	adrp	x1, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1dc4:	adrp	x3, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1dc8:	add	x0, x0, #0x0
    1dcc:	add	x1, x1, #0x0
    1dd0:	add	x3, x3, #0x0
    1dd4:	mov	w2, #0x138                 	// #312
    1dd8:	bl	0 <__assert_fail>
    1ddc:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1de0:	adrp	x1, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1de4:	adrp	x3, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1de8:	add	x0, x0, #0x0
    1dec:	add	x1, x1, #0x0
    1df0:	add	x3, x3, #0x0
    1df4:	mov	w2, #0x545                 	// #1349
    1df8:	bl	0 <__assert_fail>
    1dfc:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1e00:	adrp	x1, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1e04:	adrp	x3, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1e08:	add	x0, x0, #0x0
    1e0c:	add	x1, x1, #0x0
    1e10:	add	x3, x3, #0x0
    1e14:	mov	w2, #0x69                  	// #105
    1e18:	bl	0 <__assert_fail>
    1e1c:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1e20:	adrp	x1, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1e24:	adrp	x3, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1e28:	add	x0, x0, #0x0
    1e2c:	add	x1, x1, #0x0
    1e30:	add	x3, x3, #0x0
    1e34:	mov	w2, #0x108                 	// #264
    1e38:	bl	0 <__assert_fail>
    1e3c:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1e40:	adrp	x1, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1e44:	adrp	x3, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1e48:	add	x0, x0, #0x0
    1e4c:	add	x1, x1, #0x0
    1e50:	add	x3, x3, #0x0
    1e54:	mov	w2, #0x69                  	// #105
    1e58:	bl	0 <__assert_fail>
    1e5c:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1e60:	adrp	x1, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1e64:	adrp	x3, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1e68:	add	x0, x0, #0x0
    1e6c:	add	x1, x1, #0x0
    1e70:	add	x3, x3, #0x0
    1e74:	mov	w2, #0x75                  	// #117
    1e78:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_:

0000000000000000 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x28, x27, [sp, #48]
   c:	stp	x26, x25, [sp, #64]
  10:	stp	x24, x23, [sp, #80]
  14:	stp	x22, x21, [sp, #96]
  18:	stp	x20, x19, [sp, #112]
  1c:	add	x29, sp, #0x20
  20:	ldr	x25, [x0, #16]
  24:	mov	x20, x1
  28:	mov	x19, x0
  2c:	add	x23, x0, #0x8
  30:	cbz	x25, e0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0xe0>
  34:	str	x19, [sp, #8]
  38:	ldp	x22, x24, [x20]
  3c:	mov	w26, #0x7fffffff            	// #2147483647
  40:	mov	x27, #0xffffffff80000000    	// #-2147483648
  44:	mov	w28, #0x80000000            	// #-2147483648
  48:	mov	x21, x23
  4c:	b	74 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x74>
  50:	tbnz	w0, #31, 68 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x68>
  54:	add	x8, x25, #0x10
  58:	mov	x21, x25
  5c:	ldr	x25, [x8]
  60:	cbnz	x25, 74 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x74>
  64:	b	a8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0xa8>
  68:	add	x8, x25, #0x18
  6c:	ldr	x25, [x8]
  70:	cbz	x25, a8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0xa8>
  74:	ldr	x8, [x25, #40]
  78:	subs	x19, x8, x24
  7c:	csel	x2, x24, x8, hi  // hi = pmore
  80:	cbz	x2, 94 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x94>
  84:	ldr	x0, [x25, #32]
  88:	mov	x1, x22
  8c:	bl	0 <memcmp>
  90:	cbnz	w0, 50 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x50>
  94:	cmp	x19, x26
  98:	b.gt	54 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x54>
  9c:	cmp	x19, x27
  a0:	csel	w0, w19, w28, gt
  a4:	b	50 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x50>
  a8:	cmp	x21, x23
  ac:	b.eq	e8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0xe8>  // b.none
  b0:	ldr	x8, [x20, #8]
  b4:	ldr	x9, [x21, #40]
  b8:	ldr	x19, [sp, #8]
  bc:	subs	x22, x8, x9
  c0:	csel	x2, x9, x8, hi  // hi = pmore
  c4:	cbz	x2, 134 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x134>
  c8:	ldr	x1, [x21, #32]
  cc:	ldr	x0, [x20]
  d0:	bl	0 <memcmp>
  d4:	cbz	w0, 134 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x134>
  d8:	tbz	w0, #31, 110 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x110>
  dc:	b	ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0xec>
  e0:	mov	x21, x23
  e4:	b	ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0xec>
  e8:	ldr	x19, [sp, #8]
  ec:	adrp	x2, 0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_>
  f0:	add	x2, x2, #0x0
  f4:	sub	x3, x29, #0x8
  f8:	add	x4, sp, #0x10
  fc:	mov	x0, x19
 100:	mov	x1, x21
 104:	stur	x20, [x29, #-8]
 108:	bl	0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_>
 10c:	mov	x21, x0
 110:	add	x0, x21, #0x40
 114:	ldp	x20, x19, [sp, #112]
 118:	ldp	x22, x21, [sp, #96]
 11c:	ldp	x24, x23, [sp, #80]
 120:	ldp	x26, x25, [sp, #64]
 124:	ldp	x28, x27, [sp, #48]
 128:	ldp	x29, x30, [sp, #32]
 12c:	add	sp, sp, #0x80
 130:	ret
 134:	mov	w8, #0x7fffffff            	// #2147483647
 138:	cmp	x22, x8
 13c:	b.gt	110 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x110>
 140:	mov	x8, #0xffffffff80000000    	// #-2147483648
 144:	cmp	x22, x8
 148:	mov	w8, #0x80000000            	// #-2147483648
 14c:	csel	w0, w22, w8, gt
 150:	tbz	w0, #31, 110 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x110>
 154:	b	ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0xec>

Disassembly of section .text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayEEC2ERKSA_:

0000000000000000 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayEEC2ERKSA_>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	mov	x19, x0
  18:	add	x0, x0, #0x10
  1c:	str	x0, [x19]
  20:	ldp	x21, x22, [x1]
  24:	mov	x20, x1
  28:	cbnz	x21, 30 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayEEC2ERKSA_+0x30>
  2c:	cbnz	x22, 124 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayEEC2ERKSA_+0x124>
  30:	cmp	x22, #0x10
  34:	str	x22, [sp, #8]
  38:	b.cc	58 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayEEC2ERKSA_+0x58>  // b.lo, b.ul, b.last
  3c:	add	x1, sp, #0x8
  40:	mov	x0, x19
  44:	mov	x2, xzr
  48:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  4c:	str	x0, [x19]
  50:	ldr	x8, [sp, #8]
  54:	str	x8, [x19, #16]
  58:	cbz	x22, 7c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayEEC2ERKSA_+0x7c>
  5c:	cmp	x22, #0x1
  60:	b.ne	70 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayEEC2ERKSA_+0x70>  // b.any
  64:	ldrb	w8, [x21]
  68:	strb	w8, [x0]
  6c:	b	7c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayEEC2ERKSA_+0x7c>
  70:	mov	x1, x21
  74:	mov	x2, x22
  78:	bl	0 <memcpy>
  7c:	ldr	x8, [sp, #8]
  80:	ldr	x9, [x19]
  84:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
  88:	movk	x10, #0xcccd
  8c:	str	x8, [x19, #8]
  90:	strb	wzr, [x9, x8]
  94:	ldp	x9, x8, [x20, #32]
  98:	stp	xzr, xzr, [x19, #32]
  9c:	str	xzr, [x19, #48]
  a0:	subs	x0, x8, x9
  a4:	asr	x8, x0, #3
  a8:	mul	x22, x8, x10
  ac:	b.eq	d0 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayEEC2ERKSA_+0xd0>  // b.none
  b0:	mov	x8, #0x3333333333333333    	// #3689348814741910323
  b4:	movk	x8, #0x3334
  b8:	movk	x8, #0x333, lsl #48
  bc:	cmp	x22, x8
  c0:	b.cs	130 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayEEC2ERKSA_+0x130>  // b.hs, b.nlast
  c4:	bl	0 <_Znwm>
  c8:	mov	x21, x0
  cc:	b	d4 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayEEC2ERKSA_+0xd4>
  d0:	mov	x21, xzr
  d4:	mov	w8, #0x28                  	// #40
  d8:	madd	x8, x22, x8, x21
  dc:	stp	x21, x21, [x19, #32]
  e0:	str	x8, [x19, #48]
  e4:	ldp	x22, x20, [x20, #32]
  e8:	cmp	x22, x20
  ec:	b.eq	10c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayEEC2ERKSA_+0x10c>  // b.none
  f0:	mov	x0, x21
  f4:	mov	x1, x22
  f8:	bl	0 <_ZN4llvm4json5Value8copyFromERKS1_>
  fc:	add	x22, x22, #0x28
 100:	cmp	x20, x22
 104:	add	x21, x21, #0x28
 108:	b.ne	f0 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayEEC2ERKSA_+0xf0>  // b.any
 10c:	str	x21, [x19, #40]
 110:	ldp	x20, x19, [sp, #48]
 114:	ldp	x22, x21, [sp, #32]
 118:	ldp	x29, x30, [sp, #16]
 11c:	add	sp, sp, #0x40
 120:	ret
 124:	adrp	x0, 0 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayEEC2ERKSA_>
 128:	add	x0, x0, #0x0
 12c:	bl	0 <_ZSt19__throw_logic_errorPKc>
 130:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x20, x0
  1c:	mov	w0, #0x58                  	// #88
  20:	mov	x21, x3
  24:	mov	x22, x1
  28:	bl	0 <_Znwm>
  2c:	ldr	x8, [x21]
  30:	add	x25, x0, #0x30
  34:	mov	x21, x0
  38:	str	x25, [x21, #32]!
  3c:	ldp	x23, x24, [x8]
  40:	mov	x19, x0
  44:	cbnz	x23, 4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x4c>
  48:	cbnz	x24, 1c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x1c0>
  4c:	cmp	x24, #0x10
  50:	str	x24, [x29, #24]
  54:	b.cc	7c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x7c>  // b.lo, b.ul, b.last
  58:	add	x1, x29, #0x18
  5c:	mov	x0, x21
  60:	mov	x2, xzr
  64:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  68:	ldr	x8, [x29, #24]
  6c:	str	x0, [x21]
  70:	str	x8, [x25]
  74:	cbnz	x24, 84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x84>
  78:	b	a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0xa4>
  7c:	mov	x0, x25
  80:	cbz	x24, a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0xa4>
  84:	cmp	x24, #0x1
  88:	b.ne	98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x98>  // b.any
  8c:	ldrb	w8, [x23]
  90:	strb	w8, [x0]
  94:	b	a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0xa4>
  98:	mov	x1, x23
  9c:	mov	x2, x24
  a0:	bl	0 <memcpy>
  a4:	ldr	x8, [x29, #24]
  a8:	ldr	x9, [x19, #32]
  ac:	mov	x24, x19
  b0:	mov	x0, x20
  b4:	str	x8, [x19, #40]
  b8:	strb	wzr, [x9, x8]
  bc:	str	xzr, [x24, #64]!
  c0:	mov	x1, x22
  c4:	mov	x2, x21
  c8:	stp	xzr, xzr, [x24, #8]
  cc:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_>
  d0:	mov	x23, x0
  d4:	cbz	x1, e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0xe8>
  d8:	mov	x22, x1
  dc:	cbz	x23, 134 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x134>
  e0:	mov	w0, #0x1                   	// #1
  e4:	b	184 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x184>
  e8:	ldp	x20, x22, [x19, #64]
  ec:	cmp	x20, x22
  f0:	b.eq	10c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x10c>  // b.none
  f4:	mov	x0, x20
  f8:	bl	0 <_ZN4llvm4json5Value7destroyEv>
  fc:	add	x20, x20, #0x28
 100:	cmp	x22, x20
 104:	b.ne	f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0xf4>  // b.any
 108:	ldr	x20, [x24]
 10c:	cbz	x20, 118 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x118>
 110:	mov	x0, x20
 114:	bl	0 <_ZdlPv>
 118:	ldr	x0, [x21]
 11c:	cmp	x0, x25
 120:	b.eq	128 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x128>  // b.none
 124:	bl	0 <_ZdlPv>
 128:	mov	x0, x19
 12c:	bl	0 <_ZdlPv>
 130:	b	1a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x1a4>
 134:	add	x8, x20, #0x8
 138:	cmp	x8, x22
 13c:	b.eq	e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0xe0>  // b.none
 140:	ldr	x8, [x19, #40]
 144:	ldr	x9, [x22, #40]
 148:	subs	x23, x8, x9
 14c:	csel	x2, x9, x8, hi  // hi = pmore
 150:	cbz	x2, 164 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x164>
 154:	ldr	x1, [x22, #32]
 158:	ldr	x0, [x21]
 15c:	bl	0 <memcmp>
 160:	cbnz	w0, 180 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x180>
 164:	mov	w0, #0x7fffffff            	// #2147483647
 168:	cmp	x23, x0
 16c:	b.gt	180 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x180>
 170:	mov	x8, #0xffffffff80000000    	// #-2147483648
 174:	cmp	x23, x8
 178:	mov	w8, #0x80000000            	// #-2147483648
 17c:	csel	w0, w23, w8, gt
 180:	lsr	w0, w0, #31
 184:	add	x3, x20, #0x8
 188:	mov	x1, x19
 18c:	mov	x2, x22
 190:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
 194:	ldr	x8, [x20, #40]
 198:	mov	x23, x19
 19c:	add	x8, x8, #0x1
 1a0:	str	x8, [x20, #40]
 1a4:	mov	x0, x23
 1a8:	ldp	x20, x19, [sp, #64]
 1ac:	ldp	x22, x21, [sp, #48]
 1b0:	ldp	x24, x23, [sp, #32]
 1b4:	ldr	x25, [sp, #16]
 1b8:	ldp	x29, x30, [sp], #80
 1bc:	ret
 1c0:	adrp	x0, 0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_>
 1c4:	add	x0, x0, #0x0
 1c8:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	add	x8, x0, #0x8
  1c:	mov	x21, x0
  20:	cmp	x8, x1
  24:	mov	x20, x2
  28:	b.eq	a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xa0>  // b.none
  2c:	ldr	x23, [x20, #8]
  30:	ldr	x24, [x1, #40]
  34:	mov	x19, x1
  38:	subs	x25, x23, x24
  3c:	csel	x22, x24, x23, hi  // hi = pmore
  40:	cbz	x22, 60 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x60>
  44:	ldr	x1, [x19, #32]
  48:	ldr	x0, [x20]
  4c:	mov	x2, x22
  50:	bl	0 <memcmp>
  54:	cbz	w0, 60 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x60>
  58:	tbz	w0, #31, 80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x80>
  5c:	b	120 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x120>
  60:	mov	w8, #0x7fffffff            	// #2147483647
  64:	cmp	x25, x8
  68:	b.gt	80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x80>
  6c:	mov	x8, #0xffffffff80000000    	// #-2147483648
  70:	cmp	x25, x8
  74:	mov	w8, #0x80000000            	// #-2147483648
  78:	csel	w0, w25, w8, gt
  7c:	tbnz	w0, #31, 120 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x120>
  80:	cbz	x22, f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xf4>
  84:	ldr	x1, [x20]
  88:	ldr	x0, [x19, #32]
  8c:	mov	x2, x22
  90:	bl	0 <memcmp>
  94:	cbz	w0, f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xf4>
  98:	tbz	w0, #31, 118 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x118>
  9c:	b	190 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x190>
  a0:	ldr	x8, [x21, #40]
  a4:	cbz	x8, 1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1e8>
  a8:	ldr	x22, [x21, #32]
  ac:	ldr	x9, [x20, #8]
  b0:	ldr	x8, [x22, #40]
  b4:	subs	x19, x8, x9
  b8:	csel	x2, x9, x8, hi  // hi = pmore
  bc:	cbz	x2, d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xd0>
  c0:	ldr	x1, [x20]
  c4:	ldr	x0, [x22, #32]
  c8:	bl	0 <memcmp>
  cc:	cbnz	w0, ec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xec>
  d0:	mov	w8, #0x7fffffff            	// #2147483647
  d4:	cmp	x19, x8
  d8:	b.gt	1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1e8>
  dc:	mov	x8, #0xffffffff80000000    	// #-2147483648
  e0:	cmp	x19, x8
  e4:	mov	w8, #0x80000000            	// #-2147483648
  e8:	csel	w0, w19, w8, gt
  ec:	tbz	w0, #31, 1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1e8>
  f0:	b	21c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x21c>
  f4:	sub	x8, x24, x23
  f8:	mov	w9, #0x7fffffff            	// #2147483647
  fc:	cmp	x8, x9
 100:	b.gt	118 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x118>
 104:	mov	x9, #0xffffffff80000000    	// #-2147483648
 108:	cmp	x8, x9
 10c:	mov	w9, #0x80000000            	// #-2147483648
 110:	csel	w0, w8, w9, gt
 114:	tbnz	w0, #31, 190 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x190>
 118:	mov	x22, xzr
 11c:	b	1fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1fc>
 120:	ldr	x22, [x21, #24]
 124:	cmp	x22, x19
 128:	b.eq	224 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x224>  // b.none
 12c:	mov	x0, x19
 130:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 134:	ldr	x8, [x0, #40]
 138:	mov	x22, x0
 13c:	subs	x24, x8, x23
 140:	csel	x2, x23, x8, hi  // hi = pmore
 144:	cbz	x2, 158 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x158>
 148:	ldr	x1, [x20]
 14c:	ldr	x0, [x22, #32]
 150:	bl	0 <memcmp>
 154:	cbnz	w0, 174 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x174>
 158:	mov	w8, #0x7fffffff            	// #2147483647
 15c:	cmp	x24, x8
 160:	b.gt	1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1e8>
 164:	mov	x8, #0xffffffff80000000    	// #-2147483648
 168:	cmp	x24, x8
 16c:	mov	w8, #0x80000000            	// #-2147483648
 170:	csel	w0, w24, w8, gt
 174:	tbz	w0, #31, 1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1e8>
 178:	ldr	x8, [x22, #24]
 17c:	cmp	x8, #0x0
 180:	csel	x8, xzr, x19, eq  // eq = none
 184:	csel	x22, x22, x19, eq  // eq = none
 188:	mov	x19, x8
 18c:	b	1fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1fc>
 190:	ldr	x22, [x21, #32]
 194:	cmp	x22, x19
 198:	b.eq	21c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x21c>  // b.none
 19c:	mov	x0, x19
 1a0:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 1a4:	ldr	x8, [x0, #40]
 1a8:	mov	x22, x0
 1ac:	subs	x24, x23, x8
 1b0:	csel	x2, x8, x23, hi  // hi = pmore
 1b4:	cbz	x2, 1c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1c8>
 1b8:	ldr	x1, [x22, #32]
 1bc:	ldr	x0, [x20]
 1c0:	bl	0 <memcmp>
 1c4:	cbnz	w0, 1e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1e4>
 1c8:	mov	w8, #0x7fffffff            	// #2147483647
 1cc:	cmp	x24, x8
 1d0:	b.gt	1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1e8>
 1d4:	mov	x8, #0xffffffff80000000    	// #-2147483648
 1d8:	cmp	x24, x8
 1dc:	mov	w8, #0x80000000            	// #-2147483648
 1e0:	csel	w0, w24, w8, gt
 1e4:	tbnz	w0, #31, 22c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x22c>
 1e8:	mov	x0, x21
 1ec:	mov	x1, x20
 1f0:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_>
 1f4:	mov	x19, x0
 1f8:	mov	x22, x1
 1fc:	mov	x0, x19
 200:	mov	x1, x22
 204:	ldp	x20, x19, [sp, #64]
 208:	ldp	x22, x21, [sp, #48]
 20c:	ldp	x24, x23, [sp, #32]
 210:	ldr	x25, [sp, #16]
 214:	ldp	x29, x30, [sp], #80
 218:	ret
 21c:	mov	x19, xzr
 220:	b	1fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1fc>
 224:	mov	x19, x22
 228:	b	1fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1fc>
 22c:	ldr	x8, [x19, #24]
 230:	cmp	x8, #0x0
 234:	csel	x8, xzr, x22, eq  // eq = none
 238:	csel	x22, x19, x22, eq  // eq = none
 23c:	mov	x19, x8
 240:	b	1fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1fc>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x9, [x0, #16]
  1c:	mov	x21, x0
  20:	mov	x20, x1
  24:	cbz	x9, a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0xa0>
  28:	ldp	x22, x23, [x20]
  2c:	mov	w24, #0x80000000            	// #-2147483648
  30:	mov	x25, #0xffffffff80000000    	// #-2147483648
  34:	b	4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x4c>
  38:	tbnz	w0, #31, 84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x84>
  3c:	mov	w8, wzr
  40:	add	x9, x19, #0x18
  44:	ldr	x9, [x9]
  48:	cbz	x9, 94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x94>
  4c:	ldr	x8, [x9, #40]
  50:	mov	x19, x9
  54:	subs	x26, x23, x8
  58:	csel	x2, x8, x23, hi  // hi = pmore
  5c:	cbz	x2, 70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x70>
  60:	ldr	x1, [x19, #32]
  64:	mov	x0, x22
  68:	bl	0 <memcmp>
  6c:	cbnz	w0, 38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x38>
  70:	cmp	x26, x24
  74:	b.ge	3c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x3c>  // b.tcont
  78:	cmp	x26, x25
  7c:	csel	w0, w26, w24, gt
  80:	b	38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x38>
  84:	add	x9, x19, #0x10
  88:	mov	w8, #0x1                   	// #1
  8c:	ldr	x9, [x9]
  90:	cbnz	x9, 4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x4c>
  94:	mov	x22, x19
  98:	cbnz	w8, a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0xa4>
  9c:	b	bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0xbc>
  a0:	add	x19, x21, #0x8
  a4:	ldr	x8, [x21, #24]
  a8:	cmp	x8, x19
  ac:	b.eq	110 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x110>  // b.none
  b0:	mov	x0, x19
  b4:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  b8:	mov	x22, x0
  bc:	ldr	x8, [x22, #40]
  c0:	ldr	x9, [x20, #8]
  c4:	subs	x21, x8, x9
  c8:	csel	x2, x9, x8, hi  // hi = pmore
  cc:	cbz	x2, e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0xe8>
  d0:	ldr	x1, [x20]
  d4:	ldr	x0, [x22, #32]
  d8:	bl	0 <memcmp>
  dc:	cbz	w0, e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0xe8>
  e0:	tbz	w0, #31, 108 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x108>
  e4:	b	110 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x110>
  e8:	mov	w8, #0x7fffffff            	// #2147483647
  ec:	cmp	x21, x8
  f0:	b.gt	108 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x108>
  f4:	mov	x8, #0xffffffff80000000    	// #-2147483648
  f8:	cmp	x21, x8
  fc:	mov	w8, #0x80000000            	// #-2147483648
 100:	csel	w0, w21, w8, gt
 104:	tbnz	w0, #31, 110 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x110>
 108:	mov	x19, xzr
 10c:	b	114 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x114>
 110:	mov	x22, xzr
 114:	mov	x0, x22
 118:	mov	x1, x19
 11c:	ldp	x20, x19, [sp, #64]
 120:	ldp	x22, x21, [sp, #48]
 124:	ldp	x24, x23, [sp, #32]
 128:	ldp	x26, x25, [sp, #16]
 12c:	ldp	x29, x30, [sp], #80
 130:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldp	x20, x25, [x0]
  1c:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
  20:	sub	x8, x25, x20
  24:	cmp	x8, x9
  28:	b.eq	150 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x150>  // b.none
  2c:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
  30:	asr	x9, x8, #3
  34:	movk	x10, #0xcccd
  38:	cmp	x8, #0x0
  3c:	mul	x9, x9, x10
  40:	mov	x8, #0x3333333333333333    	// #3689348814741910323
  44:	csinc	x11, x9, xzr, ne  // ne = any
  48:	movk	x8, #0x333, lsl #48
  4c:	adds	x9, x11, x9
  50:	cset	w11, cs  // cs = hs, nlast
  54:	cmp	x9, x8
  58:	cset	w12, hi  // hi = pmore
  5c:	orr	w11, w11, w12
  60:	sub	x12, x1, x20
  64:	cmp	w11, #0x0
  68:	csel	x26, x8, x9, ne  // ne = any
  6c:	asr	x8, x12, #3
  70:	mov	x23, x2
  74:	mov	x19, x0
  78:	mov	x22, x1
  7c:	mul	x24, x8, x10
  80:	cbz	x26, 98 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x98>
  84:	add	x8, x26, x26, lsl #2
  88:	lsl	x0, x8, #3
  8c:	bl	0 <_Znwm>
  90:	mov	x21, x0
  94:	b	9c <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x9c>
  98:	mov	x21, xzr
  9c:	mov	w8, #0x28                  	// #40
  a0:	madd	x0, x24, x8, x21
  a4:	mov	x1, x23
  a8:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
  ac:	cmp	x20, x22
  b0:	mov	x23, x21
  b4:	b.eq	f0 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xf0>  // b.none
  b8:	mov	x23, x21
  bc:	mov	x24, x20
  c0:	mov	x0, x23
  c4:	mov	x1, x24
  c8:	bl	0 <_ZN4llvm4json5Value8copyFromERKS1_>
  cc:	add	x24, x24, #0x28
  d0:	cmp	x22, x24
  d4:	add	x23, x23, #0x28
  d8:	b.ne	c0 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xc0>  // b.any
  dc:	b	f0 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xf0>
  e0:	mov	x0, x23
  e4:	mov	x1, x22
  e8:	bl	0 <_ZN4llvm4json5Value8copyFromERKS1_>
  ec:	add	x22, x22, #0x28
  f0:	cmp	x25, x22
  f4:	add	x23, x23, #0x28
  f8:	b.ne	e0 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xe0>  // b.any
  fc:	cmp	x20, x25
 100:	b.eq	11c <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x11c>  // b.none
 104:	mov	x22, x20
 108:	mov	x0, x22
 10c:	bl	0 <_ZN4llvm4json5Value7destroyEv>
 110:	add	x22, x22, #0x28
 114:	cmp	x25, x22
 118:	b.ne	108 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x108>  // b.any
 11c:	cbz	x20, 128 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x128>
 120:	mov	x0, x20
 124:	bl	0 <_ZdlPv>
 128:	mov	w8, #0x28                  	// #40
 12c:	madd	x8, x26, x8, x21
 130:	stp	x21, x23, [x19]
 134:	str	x8, [x19, #16]
 138:	ldp	x20, x19, [sp, #64]
 13c:	ldp	x22, x21, [sp, #48]
 140:	ldp	x24, x23, [sp, #32]
 144:	ldp	x26, x25, [sp, #16]
 148:	ldp	x29, x30, [sp], #80
 14c:	ret
 150:	adrp	x0, 0 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 154:	add	x0, x0, #0x0
 158:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapINS_4json9ObjectKeyENS2_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS3_S4_EEEES3_S4_S7_SA_E10destroyAllEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_4json9ObjectKeyENS2_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS3_S4_EEEES3_S4_S7_SA_E10destroyAllEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #24]
  14:	cbz	w8, a8 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_4json9ObjectKeyENS2_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS3_S4_EEEES3_S4_S7_SA_E10destroyAllEv+0xa8>
  18:	mov	x19, x0
  1c:	mov	x0, #0xffffffffffffffff    	// #-1
  20:	mov	x1, xzr
  24:	mov	x2, xzr
  28:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
  2c:	tbz	w0, #0, b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_4json9ObjectKeyENS2_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS3_S4_EEEES3_S4_S7_SA_E10destroyAllEv+0xb8>
  30:	mov	x0, #0xfffffffffffffffe    	// #-2
  34:	mov	x1, xzr
  38:	mov	x2, xzr
  3c:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
  40:	tbz	w0, #0, b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_4json9ObjectKeyENS2_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS3_S4_EEEES3_S4_S7_SA_E10destroyAllEv+0xb8>
  44:	ldr	w8, [x19, #24]
  48:	cbz	w8, a8 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_4json9ObjectKeyENS2_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS3_S4_EEEES3_S4_S7_SA_E10destroyAllEv+0xa8>
  4c:	ldr	x9, [x19, #8]
  50:	lsl	x21, x8, #6
  54:	add	x19, x9, #0x18
  58:	b	74 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_4json9ObjectKeyENS2_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS3_S4_EEEES3_S4_S7_SA_E10destroyAllEv+0x74>
  5c:	mov	x0, x20
  60:	bl	0 <_ZdlPv>
  64:	stur	xzr, [x19, #-24]
  68:	subs	x21, x21, #0x40
  6c:	add	x19, x19, #0x40
  70:	b.eq	a8 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_4json9ObjectKeyENS2_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS3_S4_EEEES3_S4_S7_SA_E10destroyAllEv+0xa8>  // b.none
  74:	ldur	x8, [x19, #-16]
  78:	cmn	x8, #0x3
  7c:	b.hi	88 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_4json9ObjectKeyENS2_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS3_S4_EEEES3_S4_S7_SA_E10destroyAllEv+0x88>  // b.pmore
  80:	mov	x0, x19
  84:	bl	0 <_ZN4llvm4json5Value7destroyEv>
  88:	ldur	x20, [x19, #-24]
  8c:	cbz	x20, 64 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_4json9ObjectKeyENS2_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS3_S4_EEEES3_S4_S7_SA_E10destroyAllEv+0x64>
  90:	mov	x8, x20
  94:	ldr	x0, [x8], #16
  98:	cmp	x0, x8
  9c:	b.eq	5c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_4json9ObjectKeyENS2_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS3_S4_EEEES3_S4_S7_SA_E10destroyAllEv+0x5c>  // b.none
  a0:	bl	0 <_ZdlPv>
  a4:	b	5c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_4json9ObjectKeyENS2_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS3_S4_EEEES3_S4_S7_SA_E10destroyAllEv+0x5c>
  a8:	ldp	x20, x19, [sp, #32]
  ac:	ldr	x21, [sp, #16]
  b0:	ldp	x29, x30, [sp], #48
  b4:	ret
  b8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_4json9ObjectKeyENS2_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS3_S4_EEEES3_S4_S7_SA_E10destroyAllEv>
  bc:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_4json9ObjectKeyENS2_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS3_S4_EEEES3_S4_S7_SA_E10destroyAllEv>
  c0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_4json9ObjectKeyENS2_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS3_S4_EEEES3_S4_S7_SA_E10destroyAllEv>
  c4:	add	x0, x0, #0x0
  c8:	add	x1, x1, #0x0
  cc:	add	x3, x3, #0x0
  d0:	mov	w2, #0x1f8                 	// #504
  d4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	cbz	x1, 8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x8c>
  18:	mov	x20, x1
  1c:	mov	x19, x0
  20:	b	34 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x34>
  24:	mov	x0, x20
  28:	bl	0 <_ZdlPv>
  2c:	mov	x20, x22
  30:	cbz	x22, 8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x8c>
  34:	ldr	x1, [x20, #24]
  38:	mov	x0, x19
  3c:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E>
  40:	ldp	x21, x23, [x20, #64]
  44:	ldr	x22, [x20, #16]
  48:	cmp	x21, x23
  4c:	b.eq	68 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x68>  // b.none
  50:	mov	x0, x21
  54:	bl	0 <_ZN4llvm4json5Value7destroyEv>
  58:	add	x21, x21, #0x28
  5c:	cmp	x23, x21
  60:	b.ne	50 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x50>  // b.any
  64:	ldr	x21, [x20, #64]
  68:	cbz	x21, 74 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x74>
  6c:	mov	x0, x21
  70:	bl	0 <_ZdlPv>
  74:	ldr	x0, [x20, #32]
  78:	add	x8, x20, #0x30
  7c:	cmp	x0, x8
  80:	b.eq	24 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x24>  // b.none
  84:	bl	0 <_ZdlPv>
  88:	b	24 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x24>
  8c:	ldp	x20, x19, [sp, #48]
  90:	ldp	x22, x21, [sp, #32]
  94:	ldr	x23, [sp, #16]
  98:	ldp	x29, x30, [sp], #64
  9c:	ret

Main.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x28, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	sub	sp, sp, #0x410
  1c:	add	x20, sp, #0x210
  20:	mov	x21, x1
  24:	mov	x19, x0
  28:	add	x8, x20, #0x8
  2c:	add	x9, x20, #0x38
  30:	add	x0, x20, #0x60
  34:	mov	w1, #0x6                   	// #6
  38:	str	wzr, [sp, #536]
  3c:	str	wzr, [sp, #584]
  40:	str	xzr, [sp, #544]
  44:	str	x8, [sp, #552]
  48:	str	x8, [sp, #560]
  4c:	str	xzr, [sp, #568]
  50:	str	xzr, [sp, #592]
  54:	str	x9, [sp, #600]
  58:	str	x9, [sp, #608]
  5c:	str	xzr, [sp, #616]
  60:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
  64:	adrp	x8, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
  68:	ldr	x8, [x8]
  6c:	adrp	x23, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
  70:	add	x9, x20, #0x80
  74:	mov	w10, #0x104                 	// #260
  78:	add	x8, x8, #0x10
  7c:	add	x23, x23, #0x0
  80:	str	x8, [sp, #624]
  84:	add	x8, sp, #0x1f8
  88:	add	x0, sp, #0x80
  8c:	mov	x1, #0xffffffffffffffff    	// #-1
  90:	mov	w2, #0x1                   	// #1
  94:	str	wzr, [sp, #656]
  98:	str	wzr, [sp, #696]
  9c:	str	xzr, [sp, #664]
  a0:	str	x9, [sp, #672]
  a4:	str	x9, [sp, #680]
  a8:	str	xzr, [sp, #688]
  ac:	strh	w10, [sp, #144]
  b0:	stp	x23, xzr, [sp, #128]
  b4:	bl	0 <_ZN4llvm12MemoryBuffer14getFileOrSTDINERKNS_5TwineElb>
  b8:	ldrb	w8, [sp, #520]
  bc:	tbnz	w8, #0, 100 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x100>
  c0:	adrp	x20, 0 <_ZN4llvm6SrcMgrE>
  c4:	ldr	x20, [x20]
  c8:	ldr	x10, [sp, #504]
  cc:	str	xzr, [sp, #504]
  d0:	stp	xzr, xzr, [sp, #136]
  d4:	ldp	x8, x9, [x20, #8]
  d8:	str	x10, [sp, #128]
  dc:	cmp	x8, x9
  e0:	b.eq	1b4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1b4>  // b.none
  e4:	add	x1, sp, #0x80
  e8:	mov	x0, x8
  ec:	bl	0 <_ZN4llvm9SourceMgr9SrcBufferC1EOS1_>
  f0:	ldr	x8, [x20, #8]
  f4:	add	x8, x8, #0x18
  f8:	str	x8, [x20, #8]
  fc:	b	1c8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1c8>
 100:	ldr	w20, [sp, #504]
 104:	cbz	w20, cd0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xcd0>
 108:	sub	x8, x29, #0xd0
 10c:	adrp	x9, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 110:	add	x22, x8, #0x10
 114:	ldr	x8, [x9]
 118:	ldr	x21, [sp, #512]
 11c:	sub	x0, x29, #0xd0
 120:	stp	x22, xzr, [x29, #-208]
 124:	add	x1, x8, #0x1b
 128:	sturb	wzr, [x29, #-192]
 12c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
 130:	ldur	x8, [x29, #-200]
 134:	mov	x24, #0x3fffffffffffffff    	// #4611686018427387903
 138:	sub	x8, x24, x8
 13c:	cmp	x8, #0x1a
 140:	b.ls	cc4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xcc4>  // b.plast
 144:	adrp	x1, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 148:	add	x1, x1, #0x0
 14c:	sub	x0, x29, #0xd0
 150:	mov	w2, #0x1b                  	// #27
 154:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 158:	ldp	x1, x2, [x23]
 15c:	sub	x0, x29, #0xd0
 160:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 164:	ldur	x8, [x29, #-200]
 168:	sub	x8, x24, x8
 16c:	cmp	x8, #0x2
 170:	b.ls	cc4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xcc4>  // b.plast
 174:	adrp	x1, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 178:	add	x1, x1, #0x0
 17c:	sub	x0, x29, #0xd0
 180:	mov	w2, #0x3                   	// #3
 184:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 188:	add	x8, sp, #0x30
 18c:	add	x23, x8, #0x10
 190:	str	x23, [sp, #48]
 194:	mov	x8, x0
 198:	ldr	x9, [x8], #16
 19c:	cmp	x9, x8
 1a0:	b.eq	38c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x38c>  // b.none
 1a4:	str	x9, [sp, #48]
 1a8:	ldr	x9, [x0, #16]
 1ac:	str	x9, [sp, #64]
 1b0:	b	394 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x394>
 1b4:	adrp	x0, 0 <_ZN4llvm6SrcMgrE>
 1b8:	ldr	x0, [x0]
 1bc:	add	x2, sp, #0x80
 1c0:	mov	x1, x8
 1c4:	bl	0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 1c8:	add	x0, sp, #0x80
 1cc:	add	x22, sp, #0x80
 1d0:	bl	0 <_ZN4llvm9SourceMgr9SrcBufferD1Ev>
 1d4:	adrp	x1, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 1d8:	add	x0, x20, #0x18
 1dc:	add	x1, x1, #0x0
 1e0:	bl	0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 1e4:	adrp	x8, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 1e8:	add	x8, x8, #0x0
 1ec:	ldp	x2, x8, [x8]
 1f0:	add	x0, sp, #0x80
 1f4:	mov	x1, x20
 1f8:	sub	x8, x8, x2
 1fc:	asr	x3, x8, #5
 200:	bl	0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
 204:	adrp	x10, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 208:	ldr	d0, [x10]
 20c:	add	x8, x22, #0xe8
 210:	add	x9, x22, #0x138
 214:	add	x10, sp, #0x210
 218:	add	x0, sp, #0x80
 21c:	stp	xzr, xzr, [sp, #328]
 220:	str	xzr, [sp, #344]
 224:	str	wzr, [sp, #360]
 228:	stp	xzr, xzr, [sp, #400]
 22c:	stp	xzr, xzr, [sp, #456]
 230:	stp	xzr, x8, [sp, #368]
 234:	stp	x8, xzr, [sp, #384]
 238:	stp	xzr, x9, [sp, #416]
 23c:	str	d0, [sp, #432]
 240:	str	x10, [sp, #472]
 244:	bl	0 <_ZN4llvm8TGParser9ParseFileEv>
 248:	mov	w20, #0x1                   	// #1
 24c:	tbnz	w0, #0, c2c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xc2c>
 250:	strb	wzr, [sp, #112]
 254:	str	w20, [sp, #80]
 258:	stp	xzr, xzr, [sp, #64]
 25c:	adrp	x9, 0 <_ZTVN4llvm18raw_string_ostreamE>
 260:	ldr	x9, [x9]
 264:	add	x8, sp, #0x60
 268:	add	x22, x8, #0x10
 26c:	add	x0, sp, #0x30
 270:	add	x9, x9, #0x10
 274:	add	x1, sp, #0x210
 278:	stp	x22, xzr, [sp, #96]
 27c:	stp	x9, xzr, [sp, #48]
 280:	str	x8, [sp, #88]
 284:	blr	x21
 288:	tbnz	w0, #0, c14 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xc14>
 28c:	adrp	x23, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 290:	ldr	x8, [x23]
 294:	cbz	x8, 6f4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x6f4>
 298:	adrp	x20, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 29c:	add	x20, x20, #0x0
 2a0:	adrp	x1, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 2a4:	add	x1, x1, #0x0
 2a8:	mov	x0, x20
 2ac:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>
 2b0:	cbz	w0, 54c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x54c>
 2b4:	stur	wzr, [x29, #-40]
 2b8:	bl	0 <_ZNSt3_V215system_categoryEv>
 2bc:	adrp	x21, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 2c0:	add	x21, x21, #0x0
 2c4:	ldp	x1, x2, [x21]
 2c8:	stur	x0, [x29, #-32]
 2cc:	sub	x0, x29, #0x98
 2d0:	sub	x3, x29, #0x28
 2d4:	mov	w4, wzr
 2d8:	sub	x24, x29, #0x98
 2dc:	bl	0 <_ZN4llvm14ToolOutputFileC1ENS_9StringRefERSt10error_codeNS_3sys2fs9OpenFlagsE>
 2e0:	ldur	w8, [x29, #-40]
 2e4:	cbz	w8, 574 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x574>
 2e8:	ldr	x9, [x23]
 2ec:	add	x8, sp, #0x2e0
 2f0:	add	x20, x8, #0x10
 2f4:	add	x0, sp, #0x2e0
 2f8:	add	x1, x9, #0xe
 2fc:	str	x20, [sp, #736]
 300:	str	xzr, [sp, #744]
 304:	strb	wzr, [sp, #752]
 308:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
 30c:	ldr	x8, [sp, #744]
 310:	mov	x23, #0x3fffffffffffffff    	// #4611686018427387903
 314:	sub	x8, x23, x8
 318:	cmp	x8, #0xd
 31c:	b.ls	cc4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xcc4>  // b.plast
 320:	adrp	x1, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 324:	add	x1, x1, #0x0
 328:	add	x0, sp, #0x2e0
 32c:	mov	w2, #0xe                   	// #14
 330:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 334:	ldp	x1, x2, [x21]
 338:	add	x0, sp, #0x2e0
 33c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 340:	ldr	x8, [sp, #744]
 344:	cmp	x8, x23
 348:	b.eq	cc4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xcc4>  // b.none
 34c:	adrp	x1, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 350:	add	x1, x1, #0x0
 354:	add	x0, sp, #0x2e0
 358:	mov	w2, #0x1                   	// #1
 35c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 360:	add	x8, sp, #0x300
 364:	add	x21, x8, #0x10
 368:	str	x21, [sp, #768]
 36c:	mov	x8, x0
 370:	ldr	x9, [x8], #16
 374:	cmp	x9, x8
 378:	b.eq	5a4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x5a4>  // b.none
 37c:	str	x9, [sp, #768]
 380:	ldr	x9, [x0, #16]
 384:	str	x9, [sp, #784]
 388:	b	5ac <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x5ac>
 38c:	ldr	q0, [x9]
 390:	str	q0, [x23]
 394:	ldr	x9, [x0, #8]
 398:	mov	w1, w20
 39c:	sub	x24, x29, #0xf0
 3a0:	str	x9, [sp, #56]
 3a4:	stp	x8, xzr, [x0]
 3a8:	strb	wzr, [x0, #16]
 3ac:	ldr	x8, [x21]
 3b0:	mov	x0, x21
 3b4:	ldr	x9, [x8, #32]
 3b8:	sub	x8, x29, #0xf0
 3bc:	blr	x9
 3c0:	ldp	x3, x4, [sp, #48]
 3c4:	ldp	x1, x2, [x29, #-240]
 3c8:	ldr	x9, [sp, #64]
 3cc:	mov	w10, #0xf                   	// #15
 3d0:	cmp	x3, x23
 3d4:	add	x8, x2, x4
 3d8:	csel	x9, x10, x9, eq  // eq = none
 3dc:	cmp	x8, x9
 3e0:	b.ls	400 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x400>  // b.plast
 3e4:	ldur	x9, [x29, #-224]
 3e8:	add	x10, x24, #0x10
 3ec:	cmp	x1, x10
 3f0:	mov	w10, #0xf                   	// #15
 3f4:	csel	x9, x10, x9, eq  // eq = none
 3f8:	cmp	x8, x9
 3fc:	b.ls	40c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x40c>  // b.plast
 400:	add	x0, sp, #0x30
 404:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 408:	b	41c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x41c>
 40c:	sub	x0, x29, #0xf0
 410:	mov	x1, xzr
 414:	mov	x2, xzr
 418:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
 41c:	sub	x8, x29, #0x98
 420:	add	x20, x8, #0x10
 424:	stur	x20, [x29, #-152]
 428:	mov	x8, x0
 42c:	ldr	x9, [x8], #16
 430:	cmp	x9, x8
 434:	b.eq	448 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x448>  // b.none
 438:	stur	x9, [x29, #-152]
 43c:	ldr	x9, [x0, #16]
 440:	stur	x9, [x29, #-136]
 444:	b	450 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x450>
 448:	ldr	q0, [x9]
 44c:	str	q0, [x20]
 450:	ldr	x9, [x0, #8]
 454:	stur	x9, [x29, #-144]
 458:	stp	x8, xzr, [x0]
 45c:	strb	wzr, [x0, #16]
 460:	ldur	x8, [x29, #-144]
 464:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
 468:	cmp	x8, x9
 46c:	b.eq	cc4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xcc4>  // b.none
 470:	adrp	x1, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 474:	add	x1, x1, #0x0
 478:	sub	x0, x29, #0x98
 47c:	mov	w2, #0x1                   	// #1
 480:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 484:	add	x8, sp, #0x80
 488:	add	x21, x8, #0x10
 48c:	str	x21, [sp, #128]
 490:	mov	x8, x0
 494:	ldr	x9, [x8], #16
 498:	cmp	x9, x8
 49c:	b.eq	4b0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x4b0>  // b.none
 4a0:	str	x9, [sp, #128]
 4a4:	ldr	x9, [x0, #16]
 4a8:	str	x9, [sp, #144]
 4ac:	b	4b8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x4b8>
 4b0:	ldr	q0, [x9]
 4b4:	str	q0, [x21]
 4b8:	ldr	x9, [x0, #8]
 4bc:	mov	w10, #0x104                 	// #260
 4c0:	add	x11, sp, #0x80
 4c4:	add	x1, sp, #0x1e0
 4c8:	str	x9, [sp, #136]
 4cc:	stp	x8, xzr, [x0]
 4d0:	strb	wzr, [x0, #16]
 4d4:	mov	x0, x19
 4d8:	strh	w10, [sp, #496]
 4dc:	stp	x11, xzr, [sp, #480]
 4e0:	bl	cf0 <_ZL11reportErrorPKcN4llvm5TwineE>
 4e4:	ldr	x0, [sp, #128]
 4e8:	cmp	x0, x21
 4ec:	b.eq	4f4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x4f4>  // b.none
 4f0:	bl	0 <_ZdlPv>
 4f4:	ldur	x0, [x29, #-152]
 4f8:	cmp	x0, x20
 4fc:	b.eq	504 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x504>  // b.none
 500:	bl	0 <_ZdlPv>
 504:	ldur	x0, [x29, #-240]
 508:	sub	x8, x29, #0xf0
 50c:	add	x8, x8, #0x10
 510:	cmp	x0, x8
 514:	b.eq	51c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x51c>  // b.none
 518:	bl	0 <_ZdlPv>
 51c:	ldr	x0, [sp, #48]
 520:	cmp	x0, x23
 524:	b.eq	52c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x52c>  // b.none
 528:	bl	0 <_ZdlPv>
 52c:	ldur	x0, [x29, #-208]
 530:	cmp	x0, x22
 534:	b.eq	53c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x53c>  // b.none
 538:	bl	0 <_ZdlPv>
 53c:	mov	w20, #0x1                   	// #1
 540:	ldrb	w8, [sp, #520]
 544:	tbz	w8, #0, c3c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xc3c>
 548:	b	c54 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xc54>
 54c:	adrp	x8, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 550:	add	x8, x8, #0x0
 554:	mov	w9, #0x103                 	// #259
 558:	sub	x1, x29, #0x18
 55c:	mov	x0, x19
 560:	stp	x8, xzr, [x29, #-24]
 564:	sturh	w9, [x29, #-8]
 568:	bl	cf0 <_ZL11reportErrorPKcN4llvm5TwineE>
 56c:	mov	w20, #0x1                   	// #1
 570:	b	c14 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xc14>
 574:	ldp	x1, x2, [x20]
 578:	add	x20, x24, #0x28
 57c:	mov	x0, x20
 580:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 584:	ldp	x9, x8, [x0, #16]
 588:	cmp	x9, x8
 58c:	b.ne	62c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x62c>  // b.any
 590:	adrp	x1, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 594:	add	x1, x1, #0x0
 598:	mov	w2, #0x1                   	// #1
 59c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 5a0:	b	640 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x640>
 5a4:	ldr	q0, [x9]
 5a8:	str	q0, [x21]
 5ac:	ldr	x9, [x0, #8]
 5b0:	add	x23, sp, #0x2c0
 5b4:	str	x9, [sp, #776]
 5b8:	stp	x8, xzr, [x0]
 5bc:	strb	wzr, [x0, #16]
 5c0:	ldur	x0, [x29, #-32]
 5c4:	ldur	w1, [x29, #-40]
 5c8:	ldr	x8, [x0]
 5cc:	ldr	x9, [x8, #32]
 5d0:	add	x8, sp, #0x2c0
 5d4:	blr	x9
 5d8:	ldr	x3, [sp, #768]
 5dc:	ldr	x2, [sp, #712]
 5e0:	ldr	x4, [sp, #776]
 5e4:	ldr	x9, [sp, #784]
 5e8:	ldr	x1, [sp, #704]
 5ec:	cmp	x3, x21
 5f0:	mov	w10, #0xf                   	// #15
 5f4:	add	x8, x2, x4
 5f8:	csel	x9, x10, x9, eq  // eq = none
 5fc:	cmp	x8, x9
 600:	b.ls	620 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x620>  // b.plast
 604:	ldr	x9, [sp, #720]
 608:	add	x10, x23, #0x10
 60c:	cmp	x1, x10
 610:	mov	w10, #0xf                   	// #15
 614:	csel	x9, x10, x9, eq  // eq = none
 618:	cmp	x8, x9
 61c:	b.ls	980 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x980>  // b.plast
 620:	add	x0, sp, #0x300
 624:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 628:	b	990 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x990>
 62c:	mov	w9, #0x3a                  	// #58
 630:	strb	w9, [x8]
 634:	ldr	x8, [x0, #24]
 638:	add	x8, x8, #0x1
 63c:	str	x8, [x0, #24]
 640:	ldr	x21, [sp, #248]
 644:	add	x8, sp, #0x80
 648:	add	x23, x8, #0x68
 64c:	cmp	x21, x23
 650:	b.eq	6a4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x6a4>  // b.none
 654:	mov	w24, #0x20                  	// #32
 658:	b	688 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x688>
 65c:	add	x9, x8, #0x1
 660:	mov	x0, x20
 664:	stur	x9, [x29, #-88]
 668:	strb	w24, [x8]
 66c:	ldp	x1, x2, [x21, #32]
 670:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 674:	mov	x0, x21
 678:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 67c:	mov	x21, x0
 680:	cmp	x0, x23
 684:	b.eq	6a4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x6a4>  // b.none
 688:	ldp	x9, x8, [x29, #-96]
 68c:	cmp	x8, x9
 690:	b.cc	65c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x65c>  // b.lo, b.ul, b.last
 694:	mov	w1, #0x20                  	// #32
 698:	mov	x0, x20
 69c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 6a0:	b	66c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x66c>
 6a4:	ldp	x9, x8, [x29, #-96]
 6a8:	cmp	x9, x8
 6ac:	b.ne	6c8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x6c8>  // b.any
 6b0:	adrp	x1, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 6b4:	add	x1, x1, #0x0
 6b8:	mov	w2, #0x1                   	// #1
 6bc:	mov	x0, x20
 6c0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 6c4:	b	6dc <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x6dc>
 6c8:	mov	w9, #0xa                   	// #10
 6cc:	strb	w9, [x8]
 6d0:	ldur	x8, [x29, #-88]
 6d4:	add	x8, x8, #0x1
 6d8:	stur	x8, [x29, #-88]
 6dc:	mov	w8, #0x1                   	// #1
 6e0:	mov	x0, x20
 6e4:	sturb	w8, [x29, #-120]
 6e8:	bl	0 <_ZN4llvm14raw_fd_ostreamD1Ev>
 6ec:	sub	x0, x29, #0x98
 6f0:	bl	0 <_ZN4llvm14ToolOutputFile16CleanupInstallerD1Ev>
 6f4:	adrp	x8, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 6f8:	ldrb	w8, [x8]
 6fc:	cbz	w8, 7a8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x7a8>
 700:	mov	w8, #0x104                 	// #260
 704:	adrp	x9, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 708:	add	x9, x9, #0x0
 70c:	sturh	w8, [x29, #-192]
 710:	sub	x8, x29, #0x98
 714:	sub	x0, x29, #0xd0
 718:	mov	x1, #0xffffffffffffffff    	// #-1
 71c:	mov	w2, #0x1                   	// #1
 720:	mov	w3, wzr
 724:	stp	x9, xzr, [x29, #-208]
 728:	bl	0 <_ZN4llvm12MemoryBuffer7getFileERKNS_5TwineElbb>
 72c:	ldurb	w8, [x29, #-136]
 730:	tbnz	w8, #0, 780 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x780>
 734:	ldur	x8, [x29, #-152]
 738:	ldr	x9, [sp, #72]
 73c:	ldr	x10, [sp, #56]
 740:	ldp	x21, x8, [x8, #8]
 744:	cmp	x9, x10
 748:	sub	x20, x8, x21
 74c:	b.eq	758 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x758>  // b.none
 750:	add	x0, sp, #0x30
 754:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 758:	ldr	x8, [sp, #88]
 75c:	ldr	x9, [x8, #8]
 760:	cmp	x20, x9
 764:	b.ne	780 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x780>  // b.any
 768:	cbz	x20, 784 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x784>
 76c:	ldr	x1, [x8]
 770:	mov	x0, x21
 774:	mov	x2, x20
 778:	bl	0 <bcmp>
 77c:	cbz	w0, cb4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xcb4>
 780:	mov	w20, #0x1                   	// #1
 784:	ldurb	w8, [x29, #-136]
 788:	tbnz	w8, #0, 7a4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x7a4>
 78c:	ldur	x0, [x29, #-152]
 790:	cbz	x0, 7a0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x7a0>
 794:	ldr	x8, [x0]
 798:	ldr	x8, [x8, #8]
 79c:	blr	x8
 7a0:	stur	xzr, [x29, #-152]
 7a4:	cbz	w20, c14 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xc14>
 7a8:	stur	wzr, [x29, #-24]
 7ac:	bl	0 <_ZNSt3_V215system_categoryEv>
 7b0:	adrp	x21, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 7b4:	add	x21, x21, #0x0
 7b8:	ldp	x1, x2, [x21]
 7bc:	stur	x0, [x29, #-16]
 7c0:	sub	x0, x29, #0x98
 7c4:	sub	x3, x29, #0x18
 7c8:	mov	w4, wzr
 7cc:	sub	x20, x29, #0x98
 7d0:	bl	0 <_ZN4llvm14ToolOutputFileC1ENS_9StringRefERSt10error_codeNS_3sys2fs9OpenFlagsE>
 7d4:	ldur	w8, [x29, #-24]
 7d8:	cbz	w8, 884 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x884>
 7dc:	add	x8, sp, #0x2e0
 7e0:	adrp	x9, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 7e4:	add	x20, x8, #0x10
 7e8:	ldr	x8, [x9]
 7ec:	add	x0, sp, #0x2e0
 7f0:	str	x20, [sp, #736]
 7f4:	str	xzr, [sp, #744]
 7f8:	add	x1, x8, #0xe
 7fc:	strb	wzr, [sp, #752]
 800:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
 804:	ldr	x8, [sp, #744]
 808:	mov	x23, #0x3fffffffffffffff    	// #4611686018427387903
 80c:	sub	x8, x23, x8
 810:	cmp	x8, #0xd
 814:	b.ls	cc4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xcc4>  // b.plast
 818:	adrp	x1, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 81c:	add	x1, x1, #0x0
 820:	add	x0, sp, #0x2e0
 824:	mov	w2, #0xe                   	// #14
 828:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 82c:	ldp	x1, x2, [x21]
 830:	add	x0, sp, #0x2e0
 834:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 838:	ldr	x8, [sp, #744]
 83c:	cmp	x8, x23
 840:	b.eq	cc4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xcc4>  // b.none
 844:	adrp	x1, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 848:	add	x1, x1, #0x0
 84c:	add	x0, sp, #0x2e0
 850:	mov	w2, #0x1                   	// #1
 854:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 858:	add	x8, sp, #0x300
 85c:	add	x21, x8, #0x10
 860:	str	x21, [sp, #768]
 864:	mov	x8, x0
 868:	ldr	x9, [x8], #16
 86c:	cmp	x9, x8
 870:	b.eq	8f8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x8f8>  // b.none
 874:	str	x9, [sp, #768]
 878:	ldr	x9, [x0, #16]
 87c:	str	x9, [sp, #784]
 880:	b	900 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x900>
 884:	ldr	x8, [sp, #72]
 888:	ldr	x9, [sp, #56]
 88c:	add	x20, x20, #0x28
 890:	cmp	x8, x9
 894:	b.eq	8a0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x8a0>  // b.none
 898:	add	x0, sp, #0x30
 89c:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 8a0:	ldr	x8, [sp, #88]
 8a4:	mov	x0, x20
 8a8:	ldp	x1, x2, [x8]
 8ac:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 8b0:	adrp	x8, 0 <_ZN4llvm13ErrorsPrintedE>
 8b4:	ldr	x8, [x8]
 8b8:	ldr	w8, [x8]
 8bc:	cbz	w8, ca4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xca4>
 8c0:	stp	xzr, xzr, [x29, #-208]
 8c4:	stur	w8, [x29, #-208]
 8c8:	ldur	x8, [x29, #-208]
 8cc:	adrp	x10, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 8d0:	mov	w9, #0x109                 	// #265
 8d4:	add	x10, x10, #0x0
 8d8:	mov	w11, #0x309                 	// #777
 8dc:	mov	x1, sp
 8e0:	mov	x0, x19
 8e4:	sturh	w9, [x29, #-192]
 8e8:	stp	x8, x10, [sp]
 8ec:	strh	w11, [sp, #16]
 8f0:	bl	cf0 <_ZL11reportErrorPKcN4llvm5TwineE>
 8f4:	b	bfc <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xbfc>
 8f8:	ldr	q0, [x9]
 8fc:	str	q0, [x21]
 900:	ldr	x9, [x0, #8]
 904:	add	x23, sp, #0x2c0
 908:	str	x9, [sp, #776]
 90c:	stp	x8, xzr, [x0]
 910:	strb	wzr, [x0, #16]
 914:	ldur	x0, [x29, #-16]
 918:	ldur	w1, [x29, #-24]
 91c:	ldr	x8, [x0]
 920:	ldr	x9, [x8, #32]
 924:	add	x8, sp, #0x2c0
 928:	blr	x9
 92c:	ldr	x3, [sp, #768]
 930:	ldr	x2, [sp, #712]
 934:	ldr	x4, [sp, #776]
 938:	ldr	x9, [sp, #784]
 93c:	ldr	x1, [sp, #704]
 940:	cmp	x3, x21
 944:	mov	w10, #0xf                   	// #15
 948:	add	x8, x2, x4
 94c:	csel	x9, x10, x9, eq  // eq = none
 950:	cmp	x8, x9
 954:	b.ls	974 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x974>  // b.plast
 958:	ldr	x9, [sp, #720]
 95c:	add	x10, x23, #0x10
 960:	cmp	x1, x10
 964:	mov	w10, #0xf                   	// #15
 968:	csel	x9, x10, x9, eq  // eq = none
 96c:	cmp	x8, x9
 970:	b.ls	acc <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xacc>  // b.plast
 974:	add	x0, sp, #0x300
 978:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 97c:	b	adc <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xadc>
 980:	add	x0, sp, #0x2c0
 984:	mov	x1, xzr
 988:	mov	x2, xzr
 98c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
 990:	sub	x8, x29, #0xf0
 994:	add	x23, x8, #0x10
 998:	stur	x23, [x29, #-240]
 99c:	mov	x8, x0
 9a0:	ldr	x9, [x8], #16
 9a4:	cmp	x9, x8
 9a8:	b.eq	9bc <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x9bc>  // b.none
 9ac:	stur	x9, [x29, #-240]
 9b0:	ldr	x9, [x0, #16]
 9b4:	stur	x9, [x29, #-224]
 9b8:	b	9c4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x9c4>
 9bc:	ldr	q0, [x9]
 9c0:	str	q0, [x23]
 9c4:	ldr	x9, [x0, #8]
 9c8:	stur	x9, [x29, #-232]
 9cc:	stp	x8, xzr, [x0]
 9d0:	strb	wzr, [x0, #16]
 9d4:	ldur	x8, [x29, #-232]
 9d8:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
 9dc:	cmp	x8, x9
 9e0:	b.eq	cc4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xcc4>  // b.none
 9e4:	adrp	x1, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 9e8:	add	x1, x1, #0x0
 9ec:	sub	x0, x29, #0xf0
 9f0:	mov	w2, #0x1                   	// #1
 9f4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 9f8:	sub	x8, x29, #0xd0
 9fc:	add	x24, x8, #0x10
 a00:	stur	x24, [x29, #-208]
 a04:	mov	x8, x0
 a08:	ldr	x9, [x8], #16
 a0c:	cmp	x9, x8
 a10:	b.eq	a24 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xa24>  // b.none
 a14:	stur	x9, [x29, #-208]
 a18:	ldr	x9, [x0, #16]
 a1c:	stur	x9, [x29, #-192]
 a20:	b	a2c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xa2c>
 a24:	ldr	q0, [x9]
 a28:	str	q0, [x24]
 a2c:	ldr	x9, [x0, #8]
 a30:	mov	w10, #0x104                 	// #260
 a34:	sub	x11, x29, #0xd0
 a38:	sub	x1, x29, #0xb0
 a3c:	stur	x9, [x29, #-200]
 a40:	stp	x8, xzr, [x0]
 a44:	strb	wzr, [x0, #16]
 a48:	mov	x0, x19
 a4c:	sturh	w10, [x29, #-160]
 a50:	stp	x11, xzr, [x29, #-176]
 a54:	bl	cf0 <_ZL11reportErrorPKcN4llvm5TwineE>
 a58:	ldur	x0, [x29, #-208]
 a5c:	cmp	x0, x24
 a60:	b.eq	a68 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xa68>  // b.none
 a64:	bl	0 <_ZdlPv>
 a68:	ldur	x0, [x29, #-240]
 a6c:	cmp	x0, x23
 a70:	b.eq	a78 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xa78>  // b.none
 a74:	bl	0 <_ZdlPv>
 a78:	ldr	x0, [sp, #704]
 a7c:	add	x8, sp, #0x2c0
 a80:	add	x8, x8, #0x10
 a84:	cmp	x0, x8
 a88:	b.eq	a90 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xa90>  // b.none
 a8c:	bl	0 <_ZdlPv>
 a90:	ldr	x0, [sp, #768]
 a94:	cmp	x0, x21
 a98:	b.eq	aa0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xaa0>  // b.none
 a9c:	bl	0 <_ZdlPv>
 aa0:	ldr	x0, [sp, #736]
 aa4:	cmp	x0, x20
 aa8:	b.eq	ab0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xab0>  // b.none
 aac:	bl	0 <_ZdlPv>
 ab0:	sub	x8, x29, #0x98
 ab4:	add	x0, x8, #0x28
 ab8:	bl	0 <_ZN4llvm14raw_fd_ostreamD1Ev>
 abc:	sub	x0, x29, #0x98
 ac0:	bl	0 <_ZN4llvm14ToolOutputFile16CleanupInstallerD1Ev>
 ac4:	mov	w20, #0x1                   	// #1
 ac8:	b	c14 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xc14>
 acc:	add	x0, sp, #0x2c0
 ad0:	mov	x1, xzr
 ad4:	mov	x2, xzr
 ad8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
 adc:	sub	x8, x29, #0xf0
 ae0:	add	x23, x8, #0x10
 ae4:	stur	x23, [x29, #-240]
 ae8:	mov	x8, x0
 aec:	ldr	x9, [x8], #16
 af0:	cmp	x9, x8
 af4:	b.eq	b08 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xb08>  // b.none
 af8:	stur	x9, [x29, #-240]
 afc:	ldr	x9, [x0, #16]
 b00:	stur	x9, [x29, #-224]
 b04:	b	b10 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xb10>
 b08:	ldr	q0, [x9]
 b0c:	str	q0, [x23]
 b10:	ldr	x9, [x0, #8]
 b14:	stur	x9, [x29, #-232]
 b18:	stp	x8, xzr, [x0]
 b1c:	strb	wzr, [x0, #16]
 b20:	ldur	x8, [x29, #-232]
 b24:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
 b28:	cmp	x8, x9
 b2c:	b.eq	cc4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xcc4>  // b.none
 b30:	adrp	x1, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 b34:	add	x1, x1, #0x0
 b38:	sub	x0, x29, #0xf0
 b3c:	mov	w2, #0x1                   	// #1
 b40:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 b44:	sub	x8, x29, #0xd0
 b48:	add	x24, x8, #0x10
 b4c:	stur	x24, [x29, #-208]
 b50:	mov	x8, x0
 b54:	ldr	x9, [x8], #16
 b58:	cmp	x9, x8
 b5c:	b.eq	b70 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xb70>  // b.none
 b60:	stur	x9, [x29, #-208]
 b64:	ldr	x9, [x0, #16]
 b68:	stur	x9, [x29, #-192]
 b6c:	b	b78 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xb78>
 b70:	ldr	q0, [x9]
 b74:	str	q0, [x24]
 b78:	ldr	x9, [x0, #8]
 b7c:	mov	w10, #0x104                 	// #260
 b80:	sub	x11, x29, #0xd0
 b84:	add	x1, sp, #0x18
 b88:	stur	x9, [x29, #-200]
 b8c:	stp	x8, xzr, [x0]
 b90:	strb	wzr, [x0, #16]
 b94:	mov	x0, x19
 b98:	strh	w10, [sp, #40]
 b9c:	stp	x11, xzr, [sp, #24]
 ba0:	bl	cf0 <_ZL11reportErrorPKcN4llvm5TwineE>
 ba4:	ldur	x0, [x29, #-208]
 ba8:	cmp	x0, x24
 bac:	b.eq	bb4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xbb4>  // b.none
 bb0:	bl	0 <_ZdlPv>
 bb4:	ldur	x0, [x29, #-240]
 bb8:	cmp	x0, x23
 bbc:	b.eq	bc4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xbc4>  // b.none
 bc0:	bl	0 <_ZdlPv>
 bc4:	ldr	x0, [sp, #704]
 bc8:	add	x8, sp, #0x2c0
 bcc:	add	x8, x8, #0x10
 bd0:	cmp	x0, x8
 bd4:	b.eq	bdc <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xbdc>  // b.none
 bd8:	bl	0 <_ZdlPv>
 bdc:	ldr	x0, [sp, #768]
 be0:	cmp	x0, x21
 be4:	b.eq	bec <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xbec>  // b.none
 be8:	bl	0 <_ZdlPv>
 bec:	ldr	x0, [sp, #736]
 bf0:	cmp	x0, x20
 bf4:	b.eq	bfc <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xbfc>  // b.none
 bf8:	bl	0 <_ZdlPv>
 bfc:	mov	w20, #0x1                   	// #1
 c00:	sub	x8, x29, #0x98
 c04:	add	x0, x8, #0x28
 c08:	bl	0 <_ZN4llvm14raw_fd_ostreamD1Ev>
 c0c:	sub	x0, x29, #0x98
 c10:	bl	0 <_ZN4llvm14ToolOutputFile16CleanupInstallerD1Ev>
 c14:	add	x0, sp, #0x30
 c18:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 c1c:	ldr	x0, [sp, #96]
 c20:	cmp	x0, x22
 c24:	b.eq	c2c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xc2c>  // b.none
 c28:	bl	0 <_ZdlPv>
 c2c:	add	x0, sp, #0x80
 c30:	bl	0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 c34:	ldrb	w8, [sp, #520]
 c38:	tbnz	w8, #0, c54 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xc54>
 c3c:	ldr	x0, [sp, #504]
 c40:	cbz	x0, c50 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xc50>
 c44:	ldr	x8, [x0]
 c48:	ldr	x8, [x8, #8]
 c4c:	blr	x8
 c50:	str	xzr, [sp, #504]
 c54:	ldr	x1, [sp, #664]
 c58:	add	x19, sp, #0x210
 c5c:	add	x0, x19, #0x78
 c60:	bl	0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 c64:	add	x0, x19, #0x60
 c68:	bl	0 <_ZN4llvm14FoldingSetBaseD2Ev>
 c6c:	ldr	x1, [sp, #592]
 c70:	add	x0, x19, #0x30
 c74:	bl	0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 c78:	ldr	x1, [sp, #544]
 c7c:	add	x0, sp, #0x210
 c80:	bl	0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 c84:	mov	w0, w20
 c88:	add	sp, sp, #0x410
 c8c:	ldp	x20, x19, [sp, #64]
 c90:	ldp	x22, x21, [sp, #48]
 c94:	ldp	x24, x23, [sp, #32]
 c98:	ldr	x28, [sp, #16]
 c9c:	ldp	x29, x30, [sp], #80
 ca0:	ret
 ca4:	mov	w20, wzr
 ca8:	mov	w8, #0x1                   	// #1
 cac:	sturb	w8, [x29, #-120]
 cb0:	b	c00 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xc00>
 cb4:	mov	w20, wzr
 cb8:	ldurb	w8, [x29, #-136]
 cbc:	tbz	w8, #0, 78c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x78c>
 cc0:	b	7a4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x7a4>
 cc4:	adrp	x0, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 cc8:	add	x0, x0, #0x0
 ccc:	bl	0 <_ZSt20__throw_length_errorPKc>
 cd0:	adrp	x0, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 cd4:	adrp	x1, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 cd8:	adrp	x3, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 cdc:	add	x0, x0, #0x0
 ce0:	add	x1, x1, #0x0
 ce4:	add	x3, x3, #0x0
 ce8:	mov	w2, #0xf3                  	// #243
 cec:	bl	0 <__assert_fail>

0000000000000cf0 <_ZL11reportErrorPKcN4llvm5TwineE>:
 cf0:	stp	x29, x30, [sp, #-48]!
 cf4:	stp	x22, x21, [sp, #16]
 cf8:	stp	x20, x19, [sp, #32]
 cfc:	mov	x29, sp
 d00:	mov	x19, x1
 d04:	mov	x21, x0
 d08:	bl	0 <_ZN4llvm4errsEv>
 d0c:	mov	x20, x0
 d10:	cbz	x21, d24 <_ZL11reportErrorPKcN4llvm5TwineE+0x34>
 d14:	mov	x0, x21
 d18:	bl	0 <strlen>
 d1c:	mov	x22, x0
 d20:	b	d28 <_ZL11reportErrorPKcN4llvm5TwineE+0x38>
 d24:	mov	x22, xzr
 d28:	ldp	x8, x0, [x20, #16]
 d2c:	sub	x8, x8, x0
 d30:	cmp	x22, x8
 d34:	b.ls	d54 <_ZL11reportErrorPKcN4llvm5TwineE+0x64>  // b.plast
 d38:	mov	x0, x20
 d3c:	mov	x1, x21
 d40:	mov	x2, x22
 d44:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 d48:	mov	x20, x0
 d4c:	ldr	x0, [x0, #24]
 d50:	b	d70 <_ZL11reportErrorPKcN4llvm5TwineE+0x80>
 d54:	cbz	x22, d70 <_ZL11reportErrorPKcN4llvm5TwineE+0x80>
 d58:	mov	x1, x21
 d5c:	mov	x2, x22
 d60:	bl	0 <memcpy>
 d64:	ldr	x8, [x20, #24]
 d68:	add	x0, x8, x22
 d6c:	str	x0, [x20, #24]
 d70:	ldr	x8, [x20, #16]
 d74:	sub	x8, x8, x0
 d78:	cmp	x8, #0x1
 d7c:	b.hi	d9c <_ZL11reportErrorPKcN4llvm5TwineE+0xac>  // b.pmore
 d80:	adrp	x1, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 d84:	add	x1, x1, #0x0
 d88:	mov	w2, #0x2                   	// #2
 d8c:	mov	x0, x20
 d90:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 d94:	mov	x20, x0
 d98:	b	db0 <_ZL11reportErrorPKcN4llvm5TwineE+0xc0>
 d9c:	mov	w8, #0x203a                	// #8250
 da0:	strh	w8, [x0]
 da4:	ldr	x8, [x20, #24]
 da8:	add	x8, x8, #0x2
 dac:	str	x8, [x20, #24]
 db0:	mov	x0, x19
 db4:	mov	x1, x20
 db8:	bl	0 <_ZNK4llvm5Twine5printERNS_11raw_ostreamE>
 dbc:	bl	0 <_ZN4llvm4errsEv>
 dc0:	ldr	x8, [x0, #24]
 dc4:	ldr	x9, [x0, #8]
 dc8:	cmp	x8, x9
 dcc:	b.eq	de0 <_ZL11reportErrorPKcN4llvm5TwineE+0xf0>  // b.none
 dd0:	ldp	x20, x19, [sp, #32]
 dd4:	ldp	x22, x21, [sp, #16]
 dd8:	ldp	x29, x30, [sp], #48
 ddc:	b	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 de0:	ldp	x20, x19, [sp, #32]
 de4:	ldp	x22, x21, [sp, #16]
 de8:	ldp	x29, x30, [sp], #48
 dec:	ret

Disassembly of section .text._ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED2Ev:

0000000000000000 <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x9, 0 <_ZTVN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEEE>
  10:	ldr	x8, [x0, #240]
  14:	ldr	x9, [x9]
  18:	mov	x19, x0
  1c:	add	x9, x9, #0x10
  20:	str	x9, [x0]
  24:	cbz	x8, 38 <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED2Ev+0x38>
  28:	add	x0, x19, #0xe0
  2c:	mov	w2, #0x3                   	// #3
  30:	mov	x1, x0
  34:	blr	x8
  38:	adrp	x8, 0 <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED2Ev>
  3c:	ldr	x0, [x19, #176]
  40:	ldr	x8, [x8]
  44:	add	x9, x19, #0xc0
  48:	cmp	x0, x9
  4c:	add	x8, x8, #0x10
  50:	str	x8, [x19, #168]
  54:	b.eq	5c <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED2Ev+0x5c>  // b.none
  58:	bl	0 <_ZdlPv>
  5c:	ldr	x0, [x19, #136]
  60:	add	x8, x19, #0x98
  64:	cmp	x0, x8
  68:	b.eq	70 <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED2Ev+0x70>  // b.none
  6c:	bl	0 <_ZdlPv>
  70:	adrp	x9, 0 <_ZTVN4llvm2cl6OptionE>
  74:	ldp	x8, x0, [x19, #96]
  78:	ldr	x9, [x9]
  7c:	cmp	x0, x8
  80:	add	x9, x9, #0x10
  84:	str	x9, [x19]
  88:	b.eq	90 <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED2Ev+0x90>  // b.none
  8c:	bl	0 <free>
  90:	ldr	x8, [x19, #88]
  94:	ldr	x0, [x19, #64]
  98:	add	x9, x19, #0x50
  9c:	add	x8, x8, #0x1
  a0:	cmp	x0, x9
  a4:	str	x8, [x19, #88]
  a8:	b.eq	b8 <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED2Ev+0xb8>  // b.none
  ac:	ldr	x19, [sp, #16]
  b0:	ldp	x29, x30, [sp], #32
  b4:	b	0 <free>
  b8:	ldr	x19, [sp, #16]
  bc:	ldp	x29, x30, [sp], #32
  c0:	ret

Disassembly of section .text._ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED2Ev:

0000000000000000 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x9, 0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED2Ev>
  14:	ldr	x8, [x0, #208]
  18:	ldr	x9, [x9]
  1c:	mov	x19, x0
  20:	add	x9, x9, #0x10
  24:	str	x9, [x0]
  28:	cbz	x8, 3c <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED2Ev+0x3c>
  2c:	add	x0, x19, #0xc0
  30:	mov	w2, #0x3                   	// #3
  34:	mov	x1, x0
  38:	blr	x8
  3c:	ldr	x0, [x19, #160]
  40:	cbz	x0, 48 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED2Ev+0x48>
  44:	bl	0 <_ZdlPv>
  48:	ldp	x20, x21, [x19, #136]
  4c:	cmp	x20, x21
  50:	b.ne	b8 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED2Ev+0xb8>  // b.any
  54:	cbz	x20, 60 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED2Ev+0x60>
  58:	mov	x0, x20
  5c:	bl	0 <_ZdlPv>
  60:	adrp	x9, 0 <_ZTVN4llvm2cl6OptionE>
  64:	ldp	x8, x0, [x19, #96]
  68:	ldr	x9, [x9]
  6c:	cmp	x0, x8
  70:	add	x9, x9, #0x10
  74:	str	x9, [x19]
  78:	b.eq	80 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED2Ev+0x80>  // b.none
  7c:	bl	0 <free>
  80:	ldr	x8, [x19, #88]
  84:	ldr	x0, [x19, #64]
  88:	add	x9, x19, #0x50
  8c:	add	x8, x8, #0x1
  90:	cmp	x0, x9
  94:	str	x8, [x19, #88]
  98:	b.eq	d8 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED2Ev+0xd8>  // b.none
  9c:	ldp	x20, x19, [sp, #32]
  a0:	ldr	x21, [sp, #16]
  a4:	ldp	x29, x30, [sp], #48
  a8:	b	0 <free>
  ac:	add	x20, x20, #0x10
  b0:	cmp	x20, x21
  b4:	b.eq	cc <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED2Ev+0xcc>  // b.none
  b8:	ldr	x0, [x20], #16
  bc:	cmp	x0, x20
  c0:	b.eq	ac <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED2Ev+0xac>  // b.none
  c4:	bl	0 <_ZdlPv>
  c8:	b	ac <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED2Ev+0xac>
  cc:	ldr	x20, [x19, #136]
  d0:	cbnz	x20, 58 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED2Ev+0x58>
  d4:	b	60 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED2Ev+0x60>
  d8:	ldp	x20, x19, [sp, #32]
  dc:	ldr	x21, [sp, #16]
  e0:	ldp	x29, x30, [sp], #48
  e4:	ret

Disassembly of section .text._ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED2Ev:

0000000000000000 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x9, 0 <_ZTVN4llvm2cl3optIbLb0ENS0_6parserIbEEEE>
  10:	ldr	x8, [x0, #184]
  14:	ldr	x9, [x9]
  18:	mov	x19, x0
  1c:	add	x9, x9, #0x10
  20:	str	x9, [x0]
  24:	cbz	x8, 38 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED2Ev+0x38>
  28:	add	x0, x19, #0xa8
  2c:	mov	w2, #0x3                   	// #3
  30:	mov	x1, x0
  34:	blr	x8
  38:	adrp	x9, 0 <_ZTVN4llvm2cl6OptionE>
  3c:	ldp	x8, x0, [x19, #96]
  40:	ldr	x9, [x9]
  44:	cmp	x0, x8
  48:	add	x9, x9, #0x10
  4c:	str	x9, [x19]
  50:	b.eq	58 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED2Ev+0x58>  // b.none
  54:	bl	0 <free>
  58:	ldr	x8, [x19, #88]
  5c:	ldr	x0, [x19, #64]
  60:	add	x9, x19, #0x50
  64:	add	x8, x8, #0x1
  68:	cmp	x0, x9
  6c:	str	x8, [x19, #88]
  70:	b.eq	80 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED2Ev+0x80>  // b.none
  74:	ldr	x19, [sp, #16]
  78:	ldp	x29, x30, [sp], #32
  7c:	b	0 <free>
  80:	ldr	x19, [sp, #16]
  84:	ldp	x29, x30, [sp], #32
  88:	ret

Disassembly of section .text._ZN4llvm8TGParserD2Ev:

0000000000000000 <_ZN4llvm8TGParserD2Ev>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x19, x0
  18:	add	x0, x0, #0x150
  1c:	bl	0 <_ZN4llvm8TGParserD2Ev>
  20:	ldr	x0, [x19, #296]
  24:	add	x8, x19, #0x138
  28:	cmp	x0, x8
  2c:	b.eq	34 <_ZN4llvm8TGParserD2Ev+0x34>  // b.none
  30:	bl	0 <free>
  34:	ldp	x20, x21, [x19, #272]
  38:	cmp	x20, x21
  3c:	b.eq	58 <_ZN4llvm8TGParserD2Ev+0x58>  // b.none
  40:	mov	x0, x20
  44:	bl	0 <_ZN4llvm8TGParserD2Ev>
  48:	add	x20, x20, #0x8
  4c:	cmp	x21, x20
  50:	b.ne	40 <_ZN4llvm8TGParserD2Ev+0x40>  // b.any
  54:	ldr	x20, [x19, #272]
  58:	cbz	x20, 64 <_ZN4llvm8TGParserD2Ev+0x64>
  5c:	mov	x0, x20
  60:	bl	0 <_ZdlPv>
  64:	ldr	x1, [x19, #240]
  68:	add	x0, x19, #0xe0
  6c:	bl	0 <_ZN4llvm8TGParserD2Ev>
  70:	ldp	x20, x21, [x19, #200]
  74:	cmp	x20, x21
  78:	b.ne	ac <_ZN4llvm8TGParserD2Ev+0xac>  // b.any
  7c:	cbz	x20, 88 <_ZN4llvm8TGParserD2Ev+0x88>
  80:	mov	x0, x20
  84:	bl	0 <_ZdlPv>
  88:	mov	x0, x19
  8c:	ldp	x20, x19, [sp, #48]
  90:	ldp	x22, x21, [sp, #32]
  94:	ldr	x23, [sp, #16]
  98:	ldp	x29, x30, [sp], #64
  9c:	b	0 <_ZN4llvm8TGParserD2Ev>
  a0:	add	x20, x20, #0xd0
  a4:	cmp	x20, x21
  a8:	b.eq	f8 <_ZN4llvm8TGParserD2Ev+0xf8>  // b.none
  ac:	ldr	w8, [x20, #8]
  b0:	ldr	x0, [x20]
  b4:	cbz	w8, e4 <_ZN4llvm8TGParserD2Ev+0xe4>
  b8:	add	x8, x8, x8, lsl #1
  bc:	sub	x22, x0, #0x28
  c0:	lsl	x23, x8, #4
  c4:	b	d0 <_ZN4llvm8TGParserD2Ev+0xd0>
  c8:	subs	x23, x23, #0x30
  cc:	b.eq	e0 <_ZN4llvm8TGParserD2Ev+0xe0>  // b.none
  d0:	ldr	x0, [x22, x23]
  d4:	cbz	x0, c8 <_ZN4llvm8TGParserD2Ev+0xc8>
  d8:	bl	0 <_ZdlPv>
  dc:	b	c8 <_ZN4llvm8TGParserD2Ev+0xc8>
  e0:	ldr	x0, [x20]
  e4:	add	x8, x20, #0x10
  e8:	cmp	x0, x8
  ec:	b.eq	a0 <_ZN4llvm8TGParserD2Ev+0xa0>  // b.none
  f0:	bl	0 <free>
  f4:	b	a0 <_ZN4llvm8TGParserD2Ev+0xa0>
  f8:	ldr	x20, [x19, #200]
  fc:	cbnz	x20, 80 <_ZN4llvm8TGParserD2Ev+0x80>
 100:	b	88 <_ZN4llvm8TGParserD2Ev+0x88>

Disassembly of section .text._ZNK4llvm2cl15OptionValueCopyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7compareERKNS0_18GenericOptionValueE:

0000000000000000 <_ZNK4llvm2cl15OptionValueCopyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7compareERKNS0_18GenericOptionValueE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x1, #40]
   c:	cbz	w8, 48 <_ZNK4llvm2cl15OptionValueCopyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7compareERKNS0_18GenericOptionValueE+0x48>
  10:	ldrb	w8, [x0, #40]
  14:	cbz	w8, 48 <_ZNK4llvm2cl15OptionValueCopyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7compareERKNS0_18GenericOptionValueE+0x48>
  18:	ldr	x2, [x0, #16]
  1c:	ldr	x8, [x1, #16]
  20:	cmp	x2, x8
  24:	b.ne	54 <_ZNK4llvm2cl15OptionValueCopyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7compareERKNS0_18GenericOptionValueE+0x54>  // b.any
  28:	cbz	x2, 48 <_ZNK4llvm2cl15OptionValueCopyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7compareERKNS0_18GenericOptionValueE+0x48>
  2c:	ldr	x1, [x1, #8]
  30:	ldr	x0, [x0, #8]
  34:	bl	0 <bcmp>
  38:	cmp	w0, #0x0
  3c:	cset	w0, ne  // ne = any
  40:	ldp	x29, x30, [sp], #16
  44:	ret
  48:	mov	w0, wzr
  4c:	ldp	x29, x30, [sp], #16
  50:	ret
  54:	mov	w0, #0x1                   	// #1
  58:	ldp	x29, x30, [sp], #16
  5c:	ret

Disassembly of section .text._ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_:

0000000000000000 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #32]
   8:	str	x27, [sp, #48]
   c:	stp	x26, x25, [sp, #64]
  10:	stp	x24, x23, [sp, #80]
  14:	stp	x22, x21, [sp, #96]
  18:	stp	x20, x19, [sp, #112]
  1c:	add	x29, sp, #0x20
  20:	mov	x19, x0
  24:	mov	x8, sp
  28:	mov	w20, w1
  2c:	add	x24, x8, #0x10
  30:	add	x0, x0, #0xb8
  34:	mov	x6, sp
  38:	mov	x1, x19
  3c:	strb	wzr, [sp, #16]
  40:	stp	x24, xzr, [sp]
  44:	bl	0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_>
  48:	tbz	w0, #0, 54 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x54>
  4c:	mov	w19, #0x1                   	// #1
  50:	b	1cc <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x1cc>
  54:	ldp	x21, x8, [x19, #144]
  58:	cmp	x21, x8
  5c:	b.eq	b4 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0xb4>  // b.none
  60:	add	x0, x21, #0x10
  64:	str	x0, [x21]
  68:	ldp	x22, x23, [sp]
  6c:	cbnz	x22, 74 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x74>
  70:	cbnz	x23, 204 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x204>
  74:	cmp	x23, #0x10
  78:	str	x23, [x29, #24]
  7c:	b.cc	9c <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x9c>  // b.lo, b.ul, b.last
  80:	add	x1, x29, #0x18
  84:	mov	x0, x21
  88:	mov	x2, xzr
  8c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  90:	str	x0, [x21]
  94:	ldr	x8, [x29, #24]
  98:	str	x8, [x21, #16]
  9c:	cbz	x23, d4 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0xd4>
  a0:	cmp	x23, #0x1
  a4:	b.ne	c8 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0xc8>  // b.any
  a8:	ldrb	w8, [x22]
  ac:	strb	w8, [x0]
  b0:	b	d4 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0xd4>
  b4:	add	x0, x19, #0x88
  b8:	mov	x2, sp
  bc:	mov	x1, x21
  c0:	bl	0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_>
  c4:	b	f0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0xf0>
  c8:	mov	x1, x22
  cc:	mov	x2, x23
  d0:	bl	0 <memcpy>
  d4:	ldr	x8, [x29, #24]
  d8:	ldr	x9, [x21]
  dc:	str	x8, [x21, #8]
  e0:	strb	wzr, [x9, x8]
  e4:	ldr	x8, [x19, #144]
  e8:	add	x8, x8, #0x20
  ec:	str	x8, [x19, #144]
  f0:	mov	x25, x19
  f4:	ldr	x10, [x25, #176]!
  f8:	sturh	w20, [x25, #-164]
  fc:	mov	x9, x25
 100:	ldr	x8, [x9, #-8]!
 104:	cmp	x8, x10
 108:	b.eq	118 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x118>  // b.none
 10c:	str	w20, [x8], #4
 110:	mov	x25, x9
 114:	b	1ac <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x1ac>
 118:	ldr	x21, [x19, #160]
 11c:	sub	x22, x8, x21
 120:	mov	x8, #0x7ffffffffffffffc    	// #9223372036854775804
 124:	cmp	x22, x8
 128:	b.eq	210 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x210>  // b.none
 12c:	asr	x27, x22, #2
 130:	cmp	x22, #0x0
 134:	csinc	x8, x27, xzr, ne  // ne = any
 138:	adds	x8, x8, x27
 13c:	lsr	x10, x8, #61
 140:	cset	w9, cs  // cs = hs, nlast
 144:	cmp	x10, #0x0
 148:	cset	w10, ne  // ne = any
 14c:	orr	w9, w9, w10
 150:	cmp	w9, #0x0
 154:	mov	x9, #0x1fffffffffffffff    	// #2305843009213693951
 158:	csel	x26, x9, x8, ne  // ne = any
 15c:	cbz	x26, 170 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x170>
 160:	lsl	x0, x26, #2
 164:	bl	0 <_Znwm>
 168:	mov	x23, x0
 16c:	b	174 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x174>
 170:	mov	x23, xzr
 174:	add	x27, x23, x27, lsl #2
 178:	cmp	x22, #0x1
 17c:	str	w20, [x27]
 180:	b.lt	194 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x194>  // b.tstop
 184:	mov	x0, x23
 188:	mov	x1, x21
 18c:	mov	x2, x22
 190:	bl	0 <memmove>
 194:	add	x20, x27, #0x4
 198:	cbz	x21, 1a4 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x1a4>
 19c:	mov	x0, x21
 1a0:	bl	0 <_ZdlPv>
 1a4:	add	x8, x23, x26, lsl #2
 1a8:	stp	x23, x20, [x19, #160]
 1ac:	str	x8, [x25]
 1b0:	ldr	x8, [x19, #208]
 1b4:	cbz	x8, 200 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x200>
 1b8:	ldr	x8, [x19, #216]
 1bc:	add	x0, x19, #0xc0
 1c0:	mov	x1, sp
 1c4:	blr	x8
 1c8:	mov	w19, wzr
 1cc:	ldr	x0, [sp]
 1d0:	cmp	x0, x24
 1d4:	b.eq	1dc <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x1dc>  // b.none
 1d8:	bl	0 <_ZdlPv>
 1dc:	mov	w0, w19
 1e0:	ldp	x20, x19, [sp, #112]
 1e4:	ldp	x22, x21, [sp, #96]
 1e8:	ldp	x24, x23, [sp, #80]
 1ec:	ldp	x26, x25, [sp, #64]
 1f0:	ldr	x27, [sp, #48]
 1f4:	ldp	x29, x30, [sp, #32]
 1f8:	add	sp, sp, #0x80
 1fc:	ret
 200:	bl	0 <_ZSt25__throw_bad_function_callv>
 204:	adrp	x0, 0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_>
 208:	add	x0, x0, #0x0
 20c:	bl	0 <_ZSt19__throw_logic_errorPKc>
 210:	adrp	x0, 0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_>
 214:	add	x0, x0, #0x0
 218:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNK4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE27getValueExpectedFlagDefaultEv:

0000000000000000 <_ZNK4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE27getValueExpectedFlagDefaultEv>:
   0:	mov	w0, #0x2                   	// #2
   4:	ret

Disassembly of section .text._ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev:

0000000000000000 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x9, 0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev>
  14:	ldr	x8, [x0, #208]
  18:	ldr	x9, [x9]
  1c:	mov	x19, x0
  20:	add	x9, x9, #0x10
  24:	str	x9, [x0]
  28:	cbz	x8, 3c <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0x3c>
  2c:	add	x0, x19, #0xc0
  30:	mov	w2, #0x3                   	// #3
  34:	mov	x1, x0
  38:	blr	x8
  3c:	ldr	x0, [x19, #160]
  40:	cbz	x0, 48 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0x48>
  44:	bl	0 <_ZdlPv>
  48:	ldp	x20, x21, [x19, #136]
  4c:	cmp	x20, x21
  50:	b.ne	c0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0xc0>  // b.any
  54:	cbz	x20, 60 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0x60>
  58:	mov	x0, x20
  5c:	bl	0 <_ZdlPv>
  60:	adrp	x9, 0 <_ZTVN4llvm2cl6OptionE>
  64:	ldp	x8, x0, [x19, #96]
  68:	ldr	x9, [x9]
  6c:	cmp	x0, x8
  70:	add	x9, x9, #0x10
  74:	str	x9, [x19]
  78:	b.eq	80 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0x80>  // b.none
  7c:	bl	0 <free>
  80:	ldr	x8, [x19, #88]
  84:	ldr	x0, [x19, #64]
  88:	add	x9, x19, #0x50
  8c:	add	x8, x8, #0x1
  90:	cmp	x0, x9
  94:	str	x8, [x19, #88]
  98:	b.eq	a0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0xa0>  // b.none
  9c:	bl	0 <free>
  a0:	mov	x0, x19
  a4:	ldp	x20, x19, [sp, #32]
  a8:	ldr	x21, [sp, #16]
  ac:	ldp	x29, x30, [sp], #48
  b0:	b	0 <_ZdlPv>
  b4:	add	x20, x20, #0x10
  b8:	cmp	x20, x21
  bc:	b.eq	d4 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0xd4>  // b.none
  c0:	ldr	x0, [x20], #16
  c4:	cmp	x0, x20
  c8:	b.eq	b4 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0xb4>  // b.none
  cc:	bl	0 <_ZdlPv>
  d0:	b	b4 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0xb4>
  d4:	ldr	x20, [x19, #136]
  d8:	cbnz	x20, 58 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0x58>
  dc:	b	60 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0x60>

Disassembly of section .text._ZNK4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE14getOptionWidthEv:

0000000000000000 <_ZNK4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE14getOptionWidthEv>:
   0:	mov	x1, x0
   4:	add	x0, x0, #0xb8
   8:	b	0 <_ZNK4llvm2cl17basic_parser_impl14getOptionWidthERKNS0_6OptionE>

Disassembly of section .text._ZNK4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE15printOptionInfoEm:

0000000000000000 <_ZNK4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE15printOptionInfoEm>:
   0:	mov	x8, x0
   4:	add	x0, x0, #0xb8
   8:	mov	x2, x1
   c:	mov	x1, x8
  10:	b	0 <_ZNK4llvm2cl17basic_parser_impl15printOptionInfoERKNS0_6OptionEm>

Disassembly of section .text._ZNK4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16printOptionValueEmb:

0000000000000000 <_ZNK4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16printOptionValueEmb>:
   0:	ret

Disassembly of section .text._ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE10setDefaultEv:

0000000000000000 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE10setDefaultEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	x8, x9, [x0, #160]
  14:	mov	x19, x0
  18:	cmp	x9, x8
  1c:	b.eq	24 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE10setDefaultEv+0x24>  // b.none
  20:	str	x8, [x19, #168]
  24:	ldp	x20, x21, [x19, #136]
  28:	cmp	x21, x20
  2c:	b.eq	5c <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE10setDefaultEv+0x5c>  // b.none
  30:	mov	x22, x20
  34:	b	44 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE10setDefaultEv+0x44>
  38:	add	x22, x22, #0x10
  3c:	cmp	x22, x21
  40:	b.eq	58 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE10setDefaultEv+0x58>  // b.none
  44:	ldr	x0, [x22], #16
  48:	cmp	x0, x22
  4c:	b.eq	38 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE10setDefaultEv+0x38>  // b.none
  50:	bl	0 <_ZdlPv>
  54:	b	38 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE10setDefaultEv+0x38>
  58:	str	x20, [x19, #144]
  5c:	ldp	x20, x19, [sp, #32]
  60:	ldp	x22, x21, [sp, #16]
  64:	ldp	x29, x30, [sp], #48
  68:	ret

Disassembly of section .text._ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE19getExtraOptionNamesERNS_15SmallVectorImplINS_9StringRefEEE:

0000000000000000 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE19getExtraOptionNamesERNS_15SmallVectorImplINS_9StringRefEEE>:
   0:	ret

Disassembly of section .text._ZN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5parseERNS0_6OptionENS_9StringRefESB_RS7_:

0000000000000000 <_ZN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5parseERNS0_6OptionENS_9StringRefESB_RS7_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #48]
   8:	stp	x22, x21, [sp, #64]
   c:	stp	x20, x19, [sp, #80]
  10:	add	x29, sp, #0x30
  14:	add	x8, sp, #0x8
  18:	mov	x20, x6
  1c:	add	x19, x8, #0x10
  20:	str	x19, [sp, #8]
  24:	cbz	x4, 74 <_ZN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5parseERNS0_6OptionENS_9StringRefESB_RS7_+0x74>
  28:	mov	x21, x5
  2c:	mov	x22, x4
  30:	cmp	x5, #0x10
  34:	mov	x0, x19
  38:	stur	x5, [x29, #-8]
  3c:	b.cc	5c <_ZN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5parseERNS0_6OptionENS_9StringRefESB_RS7_+0x5c>  // b.lo, b.ul, b.last
  40:	add	x0, sp, #0x8
  44:	sub	x1, x29, #0x8
  48:	mov	x2, xzr
  4c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  50:	ldur	x8, [x29, #-8]
  54:	str	x0, [sp, #8]
  58:	str	x8, [sp, #24]
  5c:	cbz	x21, 8c <_ZN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5parseERNS0_6OptionENS_9StringRefESB_RS7_+0x8c>
  60:	cmp	x21, #0x1
  64:	b.ne	80 <_ZN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5parseERNS0_6OptionENS_9StringRefESB_RS7_+0x80>  // b.any
  68:	ldrb	w8, [x22]
  6c:	strb	w8, [x0]
  70:	b	8c <_ZN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5parseERNS0_6OptionENS_9StringRefESB_RS7_+0x8c>
  74:	str	xzr, [sp, #16]
  78:	strb	wzr, [sp, #24]
  7c:	b	d8 <_ZN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5parseERNS0_6OptionENS_9StringRefESB_RS7_+0xd8>
  80:	mov	x1, x22
  84:	mov	x2, x21
  88:	bl	0 <memcpy>
  8c:	ldur	x8, [x29, #-8]
  90:	ldr	x9, [sp, #8]
  94:	str	x8, [sp, #16]
  98:	strb	wzr, [x9, x8]
  9c:	ldr	x8, [sp, #8]
  a0:	cmp	x8, x19
  a4:	b.eq	d8 <_ZN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5parseERNS0_6OptionENS_9StringRefESB_RS7_+0xd8>  // b.none
  a8:	mov	x11, x20
  ac:	ldr	x10, [x20]
  b0:	ldr	x9, [x11, #16]!
  b4:	str	x8, [x20]
  b8:	ldur	q0, [sp, #16]
  bc:	cmp	x10, x11
  c0:	csel	x8, xzr, x10, eq  // eq = none
  c4:	stur	q0, [x20, #8]
  c8:	cbz	x8, 118 <_ZN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5parseERNS0_6OptionENS_9StringRefESB_RS7_+0x118>
  cc:	str	x8, [sp, #8]
  d0:	str	x9, [sp, #24]
  d4:	b	120 <_ZN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5parseERNS0_6OptionENS_9StringRefESB_RS7_+0x120>
  d8:	ldr	x2, [sp, #16]
  dc:	cbz	x2, 100 <_ZN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5parseERNS0_6OptionENS_9StringRefESB_RS7_+0x100>
  e0:	ldr	x0, [x20]
  e4:	cmp	x2, #0x1
  e8:	b.ne	f8 <_ZN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5parseERNS0_6OptionENS_9StringRefESB_RS7_+0xf8>  // b.any
  ec:	ldrb	w8, [sp, #24]
  f0:	strb	w8, [x0]
  f4:	b	100 <_ZN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5parseERNS0_6OptionENS_9StringRefESB_RS7_+0x100>
  f8:	mov	x1, x19
  fc:	bl	0 <memcpy>
 100:	ldr	x8, [sp, #16]
 104:	ldr	x9, [x20]
 108:	str	x8, [x20, #8]
 10c:	strb	wzr, [x9, x8]
 110:	ldr	x8, [sp, #8]
 114:	b	120 <_ZN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5parseERNS0_6OptionENS_9StringRefESB_RS7_+0x120>
 118:	mov	x8, x19
 11c:	str	x19, [sp, #8]
 120:	str	xzr, [sp, #16]
 124:	strb	wzr, [x8]
 128:	ldr	x0, [sp, #8]
 12c:	cmp	x0, x19
 130:	b.eq	138 <_ZN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5parseERNS0_6OptionENS_9StringRefESB_RS7_+0x138>  // b.none
 134:	bl	0 <_ZdlPv>
 138:	ldp	x20, x19, [sp, #80]
 13c:	ldp	x22, x21, [sp, #64]
 140:	ldp	x29, x30, [sp, #48]
 144:	mov	w0, wzr
 148:	add	sp, sp, #0x60
 14c:	ret

Disassembly of section .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x28, x27, [sp, #32]
   c:	stp	x26, x25, [sp, #48]
  10:	stp	x24, x23, [sp, #64]
  14:	stp	x22, x21, [sp, #80]
  18:	stp	x20, x19, [sp, #96]
  1c:	add	x29, sp, #0x10
  20:	ldp	x20, x26, [x0]
  24:	mov	x9, #0x7fffffffffffffe0    	// #9223372036854775776
  28:	sub	x8, x26, x20
  2c:	cmp	x8, x9
  30:	b.eq	21c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x21c>  // b.none
  34:	asr	x9, x8, #5
  38:	cmp	x8, #0x0
  3c:	csinc	x10, x9, xzr, ne  // ne = any
  40:	adds	x9, x10, x9
  44:	lsr	x11, x9, #58
  48:	cset	w10, cs  // cs = hs, nlast
  4c:	cmp	x11, #0x0
  50:	cset	w11, ne  // ne = any
  54:	orr	w10, w10, w11
  58:	mov	x8, #0x3ffffffffffffff     	// #288230376151711743
  5c:	cmp	w10, #0x0
  60:	csel	x27, x8, x9, ne  // ne = any
  64:	sub	x8, x1, x20
  68:	mov	x25, x2
  6c:	mov	x19, x0
  70:	mov	x21, x1
  74:	asr	x28, x8, #5
  78:	cbz	x27, 8c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x8c>
  7c:	lsl	x0, x27, #5
  80:	bl	0 <_Znwm>
  84:	mov	x22, x0
  88:	b	90 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x90>
  8c:	mov	x22, xzr
  90:	add	x23, x22, x28, lsl #5
  94:	add	x0, x23, #0x10
  98:	str	x0, [x23]
  9c:	ldp	x24, x25, [x25]
  a0:	cbnz	x24, a8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xa8>
  a4:	cbnz	x25, 228 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x228>
  a8:	cmp	x25, #0x10
  ac:	str	x25, [sp, #8]
  b0:	b.cc	d4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xd4>  // b.lo, b.ul, b.last
  b4:	add	x1, sp, #0x8
  b8:	mov	x0, x23
  bc:	mov	x2, xzr
  c0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  c4:	str	x0, [x23]
  c8:	ldr	x8, [sp, #8]
  cc:	add	x9, x22, x28, lsl #5
  d0:	str	x8, [x9, #16]
  d4:	cbz	x25, f8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xf8>
  d8:	cmp	x25, #0x1
  dc:	b.ne	ec <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xec>  // b.any
  e0:	ldrb	w8, [x24]
  e4:	strb	w8, [x0]
  e8:	b	f8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xf8>
  ec:	mov	x1, x24
  f0:	mov	x2, x25
  f4:	bl	0 <memcpy>
  f8:	ldr	x8, [sp, #8]
  fc:	add	x9, x22, x28, lsl #5
 100:	cmp	x20, x21
 104:	str	x8, [x9, #8]
 108:	ldr	x9, [x23]
 10c:	strb	wzr, [x9, x8]
 110:	mov	x8, x22
 114:	b.eq	170 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x170>  // b.none
 118:	add	x8, x22, #0x10
 11c:	add	x9, x20, #0x10
 120:	b	150 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x150>
 124:	stur	x10, [x8, #-16]
 128:	ldr	x10, [x9]
 12c:	str	x10, [x8]
 130:	ldur	x10, [x9, #-8]
 134:	add	x11, x9, #0x10
 138:	cmp	x11, x21
 13c:	stur	x10, [x8, #-8]
 140:	stp	x9, xzr, [x9, #-16]
 144:	strb	wzr, [x9], #32
 148:	add	x8, x8, #0x20
 14c:	b.eq	16c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x16c>  // b.none
 150:	stur	x8, [x8, #-16]
 154:	ldur	x10, [x9, #-16]
 158:	cmp	x10, x9
 15c:	b.ne	124 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x124>  // b.any
 160:	ldr	q0, [x10]
 164:	str	q0, [x8]
 168:	b	130 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x130>
 16c:	sub	x8, x8, #0x10
 170:	cmp	x26, x21
 174:	b.eq	1e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1e0>  // b.none
 178:	mov	x9, xzr
 17c:	b	1b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1b0>
 180:	str	x13, [x11, #32]
 184:	ldr	x12, [x12, #16]
 188:	str	x12, [x11, #48]
 18c:	ldur	x11, [x10, #-8]
 190:	add	x13, x10, #0x10
 194:	add	x12, x8, x9
 198:	cmp	x13, x26
 19c:	add	x9, x9, #0x20
 1a0:	str	x11, [x12, #40]
 1a4:	stp	x10, xzr, [x10, #-16]
 1a8:	strb	wzr, [x10]
 1ac:	b.eq	1dc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1dc>  // b.none
 1b0:	add	x11, x8, x9
 1b4:	add	x10, x11, #0x30
 1b8:	add	x12, x21, x9
 1bc:	str	x10, [x11, #32]
 1c0:	mov	x10, x12
 1c4:	ldr	x13, [x10], #16
 1c8:	cmp	x13, x10
 1cc:	b.ne	180 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x180>  // b.any
 1d0:	ldr	q0, [x13]
 1d4:	str	q0, [x11, #48]
 1d8:	b	18c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x18c>
 1dc:	add	x8, x8, x9
 1e0:	add	x21, x8, #0x20
 1e4:	cbz	x20, 1f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1f0>
 1e8:	mov	x0, x20
 1ec:	bl	0 <_ZdlPv>
 1f0:	add	x8, x22, x27, lsl #5
 1f4:	stp	x22, x21, [x19]
 1f8:	str	x8, [x19, #16]
 1fc:	ldp	x20, x19, [sp, #96]
 200:	ldp	x22, x21, [sp, #80]
 204:	ldp	x24, x23, [sp, #64]
 208:	ldp	x26, x25, [sp, #48]
 20c:	ldp	x28, x27, [sp, #32]
 210:	ldp	x29, x30, [sp, #16]
 214:	add	sp, sp, #0x70
 218:	ret
 21c:	adrp	x0, 0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
 220:	add	x0, x0, #0x0
 224:	bl	0 <_ZSt20__throw_length_errorPKc>
 228:	adrp	x0, 0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
 22c:	add	x0, x0, #0x0
 230:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_11RecordRecTyEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_11RecordRecTyEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	sub	x8, x1, #0x18
   4:	cmp	x1, #0x0
   8:	csel	x0, xzr, x8, eq  // eq = none
   c:	mov	x1, x2
  10:	b	0 <_ZNK4llvm11RecordRecTy7ProfileERNS_16FoldingSetNodeIDE>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_11RecordRecTyEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_11RecordRecTyEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	sub	x8, x1, #0x18
  10:	cmp	x1, #0x0
  14:	csel	x0, xzr, x8, eq  // eq = none
  18:	mov	x1, x4
  1c:	mov	x19, x4
  20:	mov	x20, x2
  24:	bl	0 <_ZNK4llvm11RecordRecTy7ProfileERNS_16FoldingSetNodeIDE>
  28:	mov	x0, x19
  2c:	mov	x1, x20
  30:	ldp	x20, x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_11RecordRecTyEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_11RecordRecTyEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	sub	x8, x1, #0x18
  10:	cmp	x1, #0x0
  14:	csel	x0, xzr, x8, eq  // eq = none
  18:	mov	x1, x2
  1c:	mov	x19, x2
  20:	bl	0 <_ZNK4llvm11RecordRecTy7ProfileERNS_16FoldingSetNodeIDE>
  24:	mov	x0, x19
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldp	x20, x25, [x0]
  1c:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
  20:	sub	x8, x25, x20
  24:	cmp	x8, x9
  28:	b.eq	150 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x150>  // b.none
  2c:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  30:	asr	x9, x8, #3
  34:	movk	x10, #0xaaab
  38:	cmp	x8, #0x0
  3c:	mul	x9, x9, x10
  40:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  44:	csinc	x11, x9, xzr, ne  // ne = any
  48:	movk	x8, #0x555, lsl #48
  4c:	adds	x9, x11, x9
  50:	cset	w11, cs  // cs = hs, nlast
  54:	cmp	x9, x8
  58:	cset	w12, hi  // hi = pmore
  5c:	orr	w11, w11, w12
  60:	sub	x12, x1, x20
  64:	cmp	w11, #0x0
  68:	csel	x26, x8, x9, ne  // ne = any
  6c:	asr	x8, x12, #3
  70:	mov	x23, x2
  74:	mov	x19, x0
  78:	mov	x22, x1
  7c:	mul	x24, x8, x10
  80:	cbz	x26, 98 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x98>
  84:	add	x8, x26, x26, lsl #1
  88:	lsl	x0, x8, #3
  8c:	bl	0 <_Znwm>
  90:	mov	x21, x0
  94:	b	9c <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x9c>
  98:	mov	x21, xzr
  9c:	mov	w8, #0x18                  	// #24
  a0:	madd	x0, x24, x8, x21
  a4:	mov	x1, x23
  a8:	bl	0 <_ZN4llvm9SourceMgr9SrcBufferC1EOS1_>
  ac:	cmp	x20, x22
  b0:	mov	x23, x21
  b4:	b.eq	f0 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xf0>  // b.none
  b8:	mov	x23, x21
  bc:	mov	x24, x20
  c0:	mov	x0, x23
  c4:	mov	x1, x24
  c8:	bl	0 <_ZN4llvm9SourceMgr9SrcBufferC1EOS1_>
  cc:	add	x24, x24, #0x18
  d0:	cmp	x22, x24
  d4:	add	x23, x23, #0x18
  d8:	b.ne	c0 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xc0>  // b.any
  dc:	b	f0 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xf0>
  e0:	mov	x0, x23
  e4:	mov	x1, x22
  e8:	bl	0 <_ZN4llvm9SourceMgr9SrcBufferC1EOS1_>
  ec:	add	x22, x22, #0x18
  f0:	cmp	x25, x22
  f4:	add	x23, x23, #0x18
  f8:	b.ne	e0 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xe0>  // b.any
  fc:	cmp	x20, x25
 100:	b.eq	11c <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x11c>  // b.none
 104:	mov	x22, x20
 108:	mov	x0, x22
 10c:	bl	0 <_ZN4llvm9SourceMgr9SrcBufferD1Ev>
 110:	add	x22, x22, #0x18
 114:	cmp	x25, x22
 118:	b.ne	108 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x108>  // b.any
 11c:	cbz	x20, 128 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x128>
 120:	mov	x0, x20
 124:	bl	0 <_ZdlPv>
 128:	mov	w8, #0x18                  	// #24
 12c:	madd	x8, x26, x8, x21
 130:	stp	x21, x23, [x19]
 134:	str	x8, [x19, #16]
 138:	ldp	x20, x19, [sp, #64]
 13c:	ldp	x22, x21, [sp, #48]
 140:	ldp	x24, x23, [sp, #32]
 144:	ldp	x26, x25, [sp, #16]
 148:	ldp	x29, x30, [sp], #80
 14c:	ret
 150:	adrp	x0, 0 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 154:	add	x0, x0, #0x0
 158:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_:

0000000000000000 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	add	x29, sp, #0x10
  1c:	mov	x19, x0
  20:	cmp	x1, x0
  24:	b.eq	26c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x26c>  // b.none
  28:	ldp	x20, x26, [x1]
  2c:	ldr	x8, [x19, #16]
  30:	ldr	x22, [x19]
  34:	mov	x23, x1
  38:	sub	x0, x26, x20
  3c:	asr	x25, x0, #5
  40:	sub	x8, x8, x22
  44:	cmp	x25, x8, asr #5
  48:	b.ls	6c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x6c>  // b.plast
  4c:	cbz	x0, 1a8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x1a8>
  50:	lsr	x8, x25, #58
  54:	cbnz	x8, 2c4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x2c4>
  58:	bl	0 <_Znwm>
  5c:	mov	x21, x0
  60:	cmp	x20, x26
  64:	b.ne	1b4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x1b4>  // b.any
  68:	b	23c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x23c>
  6c:	ldr	x21, [x19, #8]
  70:	sub	x9, x21, x22
  74:	asr	x8, x9, #5
  78:	cmp	x8, x25
  7c:	b.cs	150 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x150>  // b.hs, b.nlast
  80:	cmp	x9, #0x1
  84:	b.lt	c0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0xc0>  // b.tstop
  88:	lsr	x8, x9, #5
  8c:	add	x21, x8, #0x1
  90:	mov	x0, x22
  94:	mov	x1, x20
  98:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
  9c:	sub	x21, x21, #0x1
  a0:	add	x20, x20, #0x20
  a4:	cmp	x21, #0x1
  a8:	add	x22, x22, #0x20
  ac:	b.gt	90 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x90>
  b0:	ldp	x8, x21, [x19]
  b4:	ldp	x20, x26, [x23]
  b8:	sub	x8, x21, x8
  bc:	asr	x8, x8, #5
  c0:	add	x23, x20, x8, lsl #5
  c4:	cmp	x23, x26
  c8:	b.ne	fc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0xfc>  // b.any
  cc:	b	260 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x260>
  d0:	mov	x1, x20
  d4:	mov	x2, x22
  d8:	bl	0 <memcpy>
  dc:	ldr	x8, [sp, #8]
  e0:	ldr	x9, [x21]
  e4:	add	x23, x23, #0x20
  e8:	cmp	x23, x26
  ec:	str	x8, [x21, #8]
  f0:	add	x21, x21, #0x20
  f4:	strb	wzr, [x9, x8]
  f8:	b.eq	260 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x260>  // b.none
  fc:	add	x0, x21, #0x10
 100:	str	x0, [x21]
 104:	ldp	x20, x22, [x23]
 108:	cbnz	x20, 110 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x110>
 10c:	cbnz	x22, 2b8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x2b8>
 110:	cmp	x22, #0x10
 114:	str	x22, [sp, #8]
 118:	b.cc	138 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x138>  // b.lo, b.ul, b.last
 11c:	add	x1, sp, #0x8
 120:	mov	x0, x21
 124:	mov	x2, xzr
 128:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 12c:	str	x0, [x21]
 130:	ldr	x8, [sp, #8]
 134:	str	x8, [x21, #16]
 138:	cbz	x22, dc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0xdc>
 13c:	cmp	x22, #0x1
 140:	b.ne	d0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0xd0>  // b.any
 144:	ldrb	w8, [x20]
 148:	strb	w8, [x0]
 14c:	b	dc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0xdc>
 150:	cmp	x0, #0x1
 154:	b.lt	18c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x18c>  // b.tstop
 158:	lsr	x8, x0, #5
 15c:	add	x21, x8, #0x1
 160:	mov	x0, x22
 164:	mov	x1, x20
 168:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
 16c:	sub	x21, x21, #0x1
 170:	add	x20, x20, #0x20
 174:	cmp	x21, #0x1
 178:	add	x22, x22, #0x20
 17c:	b.gt	160 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x160>
 180:	ldr	x21, [x19, #8]
 184:	b	18c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x18c>
 188:	add	x22, x22, #0x10
 18c:	cmp	x22, x21
 190:	b.eq	260 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x260>  // b.none
 194:	ldr	x0, [x22], #16
 198:	cmp	x0, x22
 19c:	b.eq	188 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x188>  // b.none
 1a0:	bl	0 <_ZdlPv>
 1a4:	b	188 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x188>
 1a8:	mov	x21, xzr
 1ac:	cmp	x20, x26
 1b0:	b.eq	23c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x23c>  // b.none
 1b4:	mov	x22, x21
 1b8:	b	1e8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x1e8>
 1bc:	mov	x1, x23
 1c0:	mov	x2, x24
 1c4:	bl	0 <memcpy>
 1c8:	ldr	x8, [sp, #8]
 1cc:	ldr	x9, [x22]
 1d0:	add	x20, x20, #0x20
 1d4:	cmp	x20, x26
 1d8:	str	x8, [x22, #8]
 1dc:	add	x22, x22, #0x20
 1e0:	strb	wzr, [x9, x8]
 1e4:	b.eq	23c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x23c>  // b.none
 1e8:	add	x0, x22, #0x10
 1ec:	str	x0, [x22]
 1f0:	ldp	x23, x24, [x20]
 1f4:	cbnz	x23, 1fc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x1fc>
 1f8:	cbnz	x24, 2b8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x2b8>
 1fc:	cmp	x24, #0x10
 200:	str	x24, [sp, #8]
 204:	b.cc	224 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x224>  // b.lo, b.ul, b.last
 208:	add	x1, sp, #0x8
 20c:	mov	x0, x22
 210:	mov	x2, xzr
 214:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 218:	str	x0, [x22]
 21c:	ldr	x8, [sp, #8]
 220:	str	x8, [x22, #16]
 224:	cbz	x24, 1c8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x1c8>
 228:	cmp	x24, #0x1
 22c:	b.ne	1bc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x1bc>  // b.any
 230:	ldrb	w8, [x23]
 234:	strb	w8, [x0]
 238:	b	1c8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x1c8>
 23c:	ldp	x20, x22, [x19]
 240:	cmp	x20, x22
 244:	b.ne	298 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x298>  // b.any
 248:	cbz	x20, 254 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x254>
 24c:	mov	x0, x20
 250:	bl	0 <_ZdlPv>
 254:	add	x8, x21, x25, lsl #5
 258:	str	x21, [x19]
 25c:	str	x8, [x19, #16]
 260:	ldr	x8, [x19]
 264:	add	x8, x8, x25, lsl #5
 268:	str	x8, [x19, #8]
 26c:	mov	x0, x19
 270:	ldp	x20, x19, [sp, #80]
 274:	ldp	x22, x21, [sp, #64]
 278:	ldp	x24, x23, [sp, #48]
 27c:	ldp	x26, x25, [sp, #32]
 280:	ldp	x29, x30, [sp, #16]
 284:	add	sp, sp, #0x60
 288:	ret
 28c:	add	x20, x20, #0x10
 290:	cmp	x20, x22
 294:	b.eq	2ac <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x2ac>  // b.none
 298:	ldr	x0, [x20], #16
 29c:	cmp	x0, x20
 2a0:	b.eq	28c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x28c>  // b.none
 2a4:	bl	0 <_ZdlPv>
 2a8:	b	28c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x28c>
 2ac:	ldr	x20, [x19]
 2b0:	cbnz	x20, 24c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x24c>
 2b4:	b	254 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x254>
 2b8:	adrp	x0, 0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_>
 2bc:	add	x0, x0, #0x0
 2c0:	bl	0 <_ZSt19__throw_logic_errorPKc>
 2c4:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZNSt10unique_ptrIN4llvm15TGLocalVarScopeESt14default_deleteIS1_EED2Ev:

0000000000000000 <_ZNSt10unique_ptrIN4llvm15TGLocalVarScopeESt14default_deleteIS1_EED2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x20, [x0]
  10:	mov	x19, x0
  14:	cbz	x20, 34 <_ZNSt10unique_ptrIN4llvm15TGLocalVarScopeESt14default_deleteIS1_EED2Ev+0x34>
  18:	add	x0, x20, #0x30
  1c:	bl	0 <_ZNSt10unique_ptrIN4llvm15TGLocalVarScopeESt14default_deleteIS1_EED2Ev>
  20:	ldr	x1, [x20, #16]
  24:	mov	x0, x20
  28:	bl	0 <_ZNSt10unique_ptrIN4llvm15TGLocalVarScopeESt14default_deleteIS1_EED2Ev>
  2c:	mov	x0, x20
  30:	bl	0 <_ZdlPv>
  34:	str	xzr, [x19]
  38:	ldp	x20, x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

Disassembly of section .text._ZN4llvm7TGLexerD2Ev:

0000000000000000 <_ZN4llvm7TGLexerD2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	x20, x22, [x0, #176]
  14:	mov	x19, x0
  18:	cmp	x20, x22
  1c:	b.ne	5c <_ZN4llvm7TGLexerD2Ev+0x5c>  // b.any
  20:	cbz	x20, 2c <_ZN4llvm7TGLexerD2Ev+0x2c>
  24:	mov	x0, x20
  28:	bl	0 <_ZdlPv>
  2c:	ldr	w8, [x19, #156]
  30:	cbz	w8, 9c <_ZN4llvm7TGLexerD2Ev+0x9c>
  34:	ldr	w8, [x19, #152]
  38:	cbz	w8, 9c <_ZN4llvm7TGLexerD2Ev+0x9c>
  3c:	mov	x20, xzr
  40:	lsl	x21, x8, #3
  44:	b	80 <_ZN4llvm7TGLexerD2Ev+0x80>
  48:	mov	x0, x21
  4c:	bl	0 <_ZdlPv>
  50:	str	xzr, [x20], #8
  54:	cmp	x22, x20
  58:	b.eq	d0 <_ZN4llvm7TGLexerD2Ev+0xd0>  // b.none
  5c:	ldr	x21, [x20]
  60:	cbz	x21, 50 <_ZN4llvm7TGLexerD2Ev+0x50>
  64:	ldr	x0, [x21]
  68:	cbz	x0, 48 <_ZN4llvm7TGLexerD2Ev+0x48>
  6c:	bl	0 <_ZdlPv>
  70:	b	48 <_ZN4llvm7TGLexerD2Ev+0x48>
  74:	add	x20, x20, #0x8
  78:	cmp	x21, x20
  7c:	b.eq	9c <_ZN4llvm7TGLexerD2Ev+0x9c>  // b.none
  80:	ldr	x8, [x19, #144]
  84:	ldr	x0, [x8, x20]
  88:	cmn	x0, #0x8
  8c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  90:	b.eq	74 <_ZN4llvm7TGLexerD2Ev+0x74>  // b.none
  94:	bl	0 <free>
  98:	b	74 <_ZN4llvm7TGLexerD2Ev+0x74>
  9c:	ldr	x0, [x19, #144]
  a0:	bl	0 <free>
  a4:	ldr	x1, [x19, #112]
  a8:	add	x0, x19, #0x60
  ac:	bl	0 <_ZN4llvm7TGLexerD2Ev>
  b0:	ldr	x0, [x19, #48]
  b4:	add	x8, x19, #0x40
  b8:	cmp	x0, x8
  bc:	b.eq	dc <_ZN4llvm7TGLexerD2Ev+0xdc>  // b.none
  c0:	ldp	x20, x19, [sp, #32]
  c4:	ldp	x22, x21, [sp, #16]
  c8:	ldp	x29, x30, [sp], #48
  cc:	b	0 <_ZdlPv>
  d0:	ldr	x20, [x19, #176]
  d4:	cbnz	x20, 24 <_ZN4llvm7TGLexerD2Ev+0x24>
  d8:	b	2c <_ZN4llvm7TGLexerD2Ev+0x2c>
  dc:	ldp	x20, x19, [sp, #32]
  e0:	ldp	x22, x21, [sp, #16]
  e4:	ldp	x29, x30, [sp], #48
  e8:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x58>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	b	30 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x30>
  20:	mov	x0, x20
  24:	bl	0 <_ZdlPv>
  28:	mov	x20, x21
  2c:	cbz	x21, 58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x58>
  30:	ldr	x1, [x20, #24]
  34:	mov	x0, x19
  38:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E>
  3c:	ldr	x0, [x20, #32]
  40:	ldr	x21, [x20, #16]
  44:	add	x8, x20, #0x30
  48:	cmp	x0, x8
  4c:	b.eq	20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x20>  // b.none
  50:	bl	0 <_ZdlPv>
  54:	b	20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x20>
  58:	ldp	x20, x19, [sp, #32]
  5c:	ldr	x21, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	ret

Disassembly of section .text._ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev:

0000000000000000 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x20, [x0]
  18:	mov	x19, x0
  1c:	cbz	x20, 40 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0x40>
  20:	ldp	x21, x23, [x20, #24]
  24:	cmp	x21, x23
  28:	b.ne	6c <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0x6c>  // b.any
  2c:	cbz	x21, 38 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0x38>
  30:	mov	x0, x21
  34:	bl	0 <_ZdlPv>
  38:	mov	x0, x20
  3c:	bl	0 <_ZdlPv>
  40:	str	xzr, [x19]
  44:	ldp	x20, x19, [sp, #48]
  48:	ldp	x22, x21, [sp, #32]
  4c:	ldr	x23, [sp, #16]
  50:	ldp	x29, x30, [sp], #64
  54:	ret
  58:	mov	x0, x22
  5c:	bl	0 <_ZdlPv>
  60:	str	xzr, [x21], #16
  64:	cmp	x23, x21
  68:	b.eq	d0 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0xd0>  // b.none
  6c:	add	x0, x21, #0x8
  70:	bl	0 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev>
  74:	ldr	x22, [x21]
  78:	cbz	x22, 60 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0x60>
  7c:	ldr	x0, [x22, #88]
  80:	add	x8, x22, #0x68
  84:	cmp	x0, x8
  88:	b.eq	90 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0x90>  // b.none
  8c:	bl	0 <free>
  90:	ldr	x0, [x22, #72]
  94:	add	x8, x22, #0x58
  98:	cmp	x0, x8
  9c:	b.eq	a4 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0xa4>  // b.none
  a0:	bl	0 <free>
  a4:	ldr	x0, [x22, #56]
  a8:	add	x8, x22, #0x48
  ac:	cmp	x0, x8
  b0:	b.eq	b8 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0xb8>  // b.none
  b4:	bl	0 <free>
  b8:	ldr	x0, [x22, #8]
  bc:	add	x8, x22, #0x18
  c0:	cmp	x0, x8
  c4:	b.eq	58 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0x58>  // b.none
  c8:	bl	0 <free>
  cc:	b	58 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0x58>
  d0:	ldr	x21, [x20, #24]
  d4:	cbnz	x21, 30 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0x30>
  d8:	b	38 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0x38>

Disassembly of section .text._ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_:

0000000000000000 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x20, [x0, #8]
  18:	mov	x19, x0
  1c:	cbz	x20, 40 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x40>
  20:	ldp	x21, x23, [x20, #24]
  24:	cmp	x21, x23
  28:	b.ne	d0 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0xd0>  // b.any
  2c:	cbz	x21, 38 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x38>
  30:	mov	x0, x21
  34:	bl	0 <_ZdlPv>
  38:	mov	x0, x20
  3c:	bl	0 <_ZdlPv>
  40:	ldr	x20, [x19]
  44:	str	xzr, [x19, #8]
  48:	cbz	x20, a4 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0xa4>
  4c:	ldr	x0, [x20, #88]
  50:	add	x8, x20, #0x68
  54:	cmp	x0, x8
  58:	b.eq	60 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x60>  // b.none
  5c:	bl	0 <free>
  60:	ldr	x0, [x20, #72]
  64:	add	x8, x20, #0x58
  68:	cmp	x0, x8
  6c:	b.eq	74 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x74>  // b.none
  70:	bl	0 <free>
  74:	ldr	x0, [x20, #56]
  78:	add	x8, x20, #0x48
  7c:	cmp	x0, x8
  80:	b.eq	88 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x88>  // b.none
  84:	bl	0 <free>
  88:	ldr	x0, [x20, #8]
  8c:	add	x8, x20, #0x18
  90:	cmp	x0, x8
  94:	b.eq	9c <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x9c>  // b.none
  98:	bl	0 <free>
  9c:	mov	x0, x20
  a0:	bl	0 <_ZdlPv>
  a4:	str	xzr, [x19]
  a8:	ldp	x20, x19, [sp, #48]
  ac:	ldp	x22, x21, [sp, #32]
  b0:	ldr	x23, [sp, #16]
  b4:	ldp	x29, x30, [sp], #64
  b8:	ret
  bc:	mov	x0, x22
  c0:	bl	0 <_ZdlPv>
  c4:	str	xzr, [x21], #16
  c8:	cmp	x23, x21
  cc:	b.eq	134 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x134>  // b.none
  d0:	add	x0, x21, #0x8
  d4:	bl	0 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_>
  d8:	ldr	x22, [x21]
  dc:	cbz	x22, c4 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0xc4>
  e0:	ldr	x0, [x22, #88]
  e4:	add	x8, x22, #0x68
  e8:	cmp	x0, x8
  ec:	b.eq	f4 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0xf4>  // b.none
  f0:	bl	0 <free>
  f4:	ldr	x0, [x22, #72]
  f8:	add	x8, x22, #0x58
  fc:	cmp	x0, x8
 100:	b.eq	108 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x108>  // b.none
 104:	bl	0 <free>
 108:	ldr	x0, [x22, #56]
 10c:	add	x8, x22, #0x48
 110:	cmp	x0, x8
 114:	b.eq	11c <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x11c>  // b.none
 118:	bl	0 <free>
 11c:	ldr	x0, [x22, #8]
 120:	add	x8, x22, #0x18
 124:	cmp	x0, x8
 128:	b.eq	bc <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0xbc>  // b.none
 12c:	bl	0 <free>
 130:	b	bc <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0xbc>
 134:	ldr	x21, [x20, #24]
 138:	cbnz	x21, 30 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x30>
 13c:	b	38 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x38>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	cbz	x1, f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0xf0>
  18:	mov	x20, x1
  1c:	mov	x19, x0
  20:	b	34 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x34>
  24:	mov	x0, x20
  28:	bl	0 <_ZdlPv>
  2c:	mov	x20, x23
  30:	cbz	x23, f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0xf0>
  34:	ldr	x1, [x20, #24]
  38:	mov	x0, x19
  3c:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>
  40:	ldr	x21, [x20, #64]
  44:	ldr	x23, [x20, #16]
  48:	cbz	x21, d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0xd4>
  4c:	ldp	x22, x24, [x21, #128]
  50:	cmp	x22, x24
  54:	b.eq	70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x70>  // b.none
  58:	mov	x0, x22
  5c:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>
  60:	add	x22, x22, #0x10
  64:	cmp	x24, x22
  68:	b.ne	58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x58>  // b.any
  6c:	ldr	x22, [x21, #128]
  70:	cbz	x22, 7c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x7c>
  74:	mov	x0, x22
  78:	bl	0 <_ZdlPv>
  7c:	ldr	x0, [x21, #88]
  80:	add	x8, x21, #0x68
  84:	cmp	x0, x8
  88:	b.eq	90 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x90>  // b.none
  8c:	bl	0 <free>
  90:	ldr	x0, [x21, #72]
  94:	add	x8, x21, #0x58
  98:	cmp	x0, x8
  9c:	b.eq	a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0xa4>  // b.none
  a0:	bl	0 <free>
  a4:	ldr	x0, [x21, #56]
  a8:	add	x8, x21, #0x48
  ac:	cmp	x0, x8
  b0:	b.eq	b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0xb8>  // b.none
  b4:	bl	0 <free>
  b8:	ldr	x0, [x21, #8]
  bc:	add	x8, x21, #0x18
  c0:	cmp	x0, x8
  c4:	b.eq	cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0xcc>  // b.none
  c8:	bl	0 <free>
  cc:	mov	x0, x21
  d0:	bl	0 <_ZdlPv>
  d4:	ldr	x0, [x20, #32]
  d8:	add	x8, x20, #0x30
  dc:	str	xzr, [x20, #64]
  e0:	cmp	x0, x8
  e4:	b.eq	24 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x24>  // b.none
  e8:	bl	0 <_ZdlPv>
  ec:	b	24 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x24>
  f0:	ldp	x20, x19, [sp, #48]
  f4:	ldp	x22, x21, [sp, #32]
  f8:	ldp	x24, x23, [sp, #16]
  fc:	ldp	x29, x30, [sp], #64
 100:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x58>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	b	30 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x30>
  20:	mov	x0, x20
  24:	bl	0 <_ZdlPv>
  28:	mov	x20, x21
  2c:	cbz	x21, 58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x58>
  30:	ldr	x1, [x20, #24]
  34:	mov	x0, x19
  38:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>
  3c:	ldr	x0, [x20, #32]
  40:	ldr	x21, [x20, #16]
  44:	add	x8, x20, #0x30
  48:	cmp	x0, x8
  4c:	b.eq	20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x20>  // b.none
  50:	bl	0 <_ZdlPv>
  54:	b	20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x20>
  58:	ldp	x20, x19, [sp, #32]
  5c:	ldr	x21, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 48 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x48>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	ldr	x1, [x20, #24]
  20:	mov	x0, x19
  24:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>
  28:	ldr	x21, [x20, #16]
  2c:	add	x1, x20, #0x20
  30:	mov	x0, x19
  34:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>
  38:	mov	x0, x20
  3c:	bl	0 <_ZdlPv>
  40:	mov	x20, x21
  44:	cbnz	x21, 1c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x1c>
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldr	x21, [sp, #16]
  50:	ldp	x29, x30, [sp], #48
  54:	ret

Disassembly of section .text._ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_:

0000000000000000 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x20, [x1, #32]
  10:	mov	x19, x1
  14:	cbz	x20, 70 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_+0x70>
  18:	ldr	x0, [x20, #88]
  1c:	add	x8, x20, #0x68
  20:	cmp	x0, x8
  24:	b.eq	2c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_+0x2c>  // b.none
  28:	bl	0 <free>
  2c:	ldr	x0, [x20, #72]
  30:	add	x8, x20, #0x58
  34:	cmp	x0, x8
  38:	b.eq	40 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_+0x40>  // b.none
  3c:	bl	0 <free>
  40:	ldr	x0, [x20, #56]
  44:	add	x8, x20, #0x48
  48:	cmp	x0, x8
  4c:	b.eq	54 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_+0x54>  // b.none
  50:	bl	0 <free>
  54:	ldr	x0, [x20, #8]
  58:	add	x8, x20, #0x18
  5c:	cmp	x0, x8
  60:	b.eq	68 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_+0x68>  // b.none
  64:	bl	0 <free>
  68:	mov	x0, x20
  6c:	bl	0 <_ZdlPv>
  70:	ldr	x0, [x19]
  74:	add	x8, x19, #0x10
  78:	str	xzr, [x19, #32]
  7c:	cmp	x0, x8
  80:	b.eq	90 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_+0x90>  // b.none
  84:	ldp	x20, x19, [sp, #16]
  88:	ldp	x29, x30, [sp], #32
  8c:	b	0 <_ZdlPv>
  90:	ldp	x20, x19, [sp, #16]
  94:	ldp	x29, x30, [sp], #32
  98:	ret

Disassembly of section .text._ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN4llvm2cl3optIS5_Lb0ENSA_6parserIS5_EEEUlS7_E_EE9_M_invokeERKSt9_Any_dataS7_:

0000000000000000 <_ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN4llvm2cl3optIS5_Lb0ENSA_6parserIS5_EEEUlS7_E_EE9_M_invokeERKSt9_Any_dataS7_>:
   0:	ret

Disassembly of section .text._ZNSt14_Function_base13_Base_managerIN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS2_6parserIS9_EEEUlRKS9_E_EE10_M_managerERSt9_Any_dataRKSH_St18_Manager_operation:

0000000000000000 <_ZNSt14_Function_base13_Base_managerIN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS2_6parserIS9_EEEUlRKS9_E_EE10_M_managerERSt9_Any_dataRKSH_St18_Manager_operation>:
   0:	cmp	w2, #0x1
   4:	b.ne	c <_ZNSt14_Function_base13_Base_managerIN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS2_6parserIS9_EEEUlRKS9_E_EE10_M_managerERSt9_Any_dataRKSH_St18_Manager_operation+0xc>  // b.any
   8:	str	x1, [x0]
   c:	mov	w0, wzr
  10:	ret

Disassembly of section .text._ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_11initializerIA2_cEEEEvPT_RKT0_:

0000000000000000 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_11initializerIA2_cEEEEvPT_RKT0_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #48]
   8:	stp	x22, x21, [sp, #64]
   c:	stp	x20, x19, [sp, #80]
  10:	add	x29, sp, #0x30
  14:	ldr	x20, [x1]
  18:	add	x8, sp, #0x8
  1c:	add	x22, x8, #0x10
  20:	str	x22, [sp, #8]
  24:	cbz	x20, e4 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_11initializerIA2_cEEEEvPT_RKT0_+0xe4>
  28:	mov	x19, x0
  2c:	mov	x0, x20
  30:	bl	0 <strlen>
  34:	mov	x21, x0
  38:	cmp	x0, #0xf
  3c:	stur	x0, [x29, #-8]
  40:	b.ls	68 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_11initializerIA2_cEEEEvPT_RKT0_+0x68>  // b.plast
  44:	add	x0, sp, #0x8
  48:	sub	x1, x29, #0x8
  4c:	mov	x2, xzr
  50:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  54:	ldur	x8, [x29, #-8]
  58:	str	x0, [sp, #8]
  5c:	str	x8, [sp, #24]
  60:	cbnz	x21, 70 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_11initializerIA2_cEEEEvPT_RKT0_+0x70>
  64:	b	90 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_11initializerIA2_cEEEEvPT_RKT0_+0x90>
  68:	mov	x0, x22
  6c:	cbz	x21, 90 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_11initializerIA2_cEEEEvPT_RKT0_+0x90>
  70:	cmp	x21, #0x1
  74:	b.ne	84 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_11initializerIA2_cEEEEvPT_RKT0_+0x84>  // b.any
  78:	ldrb	w8, [x20]
  7c:	strb	w8, [x0]
  80:	b	90 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_11initializerIA2_cEEEEvPT_RKT0_+0x90>
  84:	mov	x1, x20
  88:	mov	x2, x21
  8c:	bl	0 <memcpy>
  90:	ldur	x8, [x29, #-8]
  94:	ldr	x9, [sp, #8]
  98:	add	x0, x19, #0x88
  9c:	add	x1, sp, #0x8
  a0:	str	x8, [sp, #16]
  a4:	strb	wzr, [x9, x8]
  a8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
  ac:	mov	w8, #0x1                   	// #1
  b0:	add	x0, x19, #0xb0
  b4:	add	x1, sp, #0x8
  b8:	strb	w8, [x19, #208]
  bc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
  c0:	ldr	x0, [sp, #8]
  c4:	cmp	x0, x22
  c8:	b.eq	d0 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_11initializerIA2_cEEEEvPT_RKT0_+0xd0>  // b.none
  cc:	bl	0 <_ZdlPv>
  d0:	ldp	x20, x19, [sp, #80]
  d4:	ldp	x22, x21, [sp, #64]
  d8:	ldp	x29, x30, [sp, #48]
  dc:	add	sp, sp, #0x60
  e0:	ret
  e4:	adrp	x0, 0 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_11initializerIA2_cEEEEvPT_RKT0_>
  e8:	add	x0, x0, #0x0
  ec:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_4descEJNS0_10value_descENS0_11initializerIA1_cEEEEEvPT_RKT0_DpRKT1_:

0000000000000000 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_4descEJNS0_10value_descENS0_11initializerIA1_cEEEEEvPT_RKT0_DpRKT1_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #48]
   8:	stp	x22, x21, [sp, #64]
   c:	stp	x20, x19, [sp, #80]
  10:	add	x29, sp, #0x30
  14:	ldr	q0, [x1]
  18:	add	x8, sp, #0x8
  1c:	add	x22, x8, #0x10
  20:	str	q0, [x0, #32]
  24:	ldr	q0, [x2]
  28:	str	q0, [x0, #48]
  2c:	ldr	x20, [x3]
  30:	str	x22, [sp, #8]
  34:	cbz	x20, f4 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_4descEJNS0_10value_descENS0_11initializerIA1_cEEEEEvPT_RKT0_DpRKT1_+0xf4>
  38:	mov	x19, x0
  3c:	mov	x0, x20
  40:	bl	0 <strlen>
  44:	mov	x21, x0
  48:	cmp	x0, #0xf
  4c:	stur	x0, [x29, #-8]
  50:	b.ls	78 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_4descEJNS0_10value_descENS0_11initializerIA1_cEEEEEvPT_RKT0_DpRKT1_+0x78>  // b.plast
  54:	add	x0, sp, #0x8
  58:	sub	x1, x29, #0x8
  5c:	mov	x2, xzr
  60:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  64:	ldur	x8, [x29, #-8]
  68:	str	x0, [sp, #8]
  6c:	str	x8, [sp, #24]
  70:	cbnz	x21, 80 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_4descEJNS0_10value_descENS0_11initializerIA1_cEEEEEvPT_RKT0_DpRKT1_+0x80>
  74:	b	a0 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_4descEJNS0_10value_descENS0_11initializerIA1_cEEEEEvPT_RKT0_DpRKT1_+0xa0>
  78:	mov	x0, x22
  7c:	cbz	x21, a0 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_4descEJNS0_10value_descENS0_11initializerIA1_cEEEEEvPT_RKT0_DpRKT1_+0xa0>
  80:	cmp	x21, #0x1
  84:	b.ne	94 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_4descEJNS0_10value_descENS0_11initializerIA1_cEEEEEvPT_RKT0_DpRKT1_+0x94>  // b.any
  88:	ldrb	w8, [x20]
  8c:	strb	w8, [x0]
  90:	b	a0 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_4descEJNS0_10value_descENS0_11initializerIA1_cEEEEEvPT_RKT0_DpRKT1_+0xa0>
  94:	mov	x1, x20
  98:	mov	x2, x21
  9c:	bl	0 <memcpy>
  a0:	ldur	x8, [x29, #-8]
  a4:	ldr	x9, [sp, #8]
  a8:	add	x0, x19, #0x88
  ac:	add	x1, sp, #0x8
  b0:	str	x8, [sp, #16]
  b4:	strb	wzr, [x9, x8]
  b8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
  bc:	mov	w8, #0x1                   	// #1
  c0:	add	x0, x19, #0xb0
  c4:	add	x1, sp, #0x8
  c8:	strb	w8, [x19, #208]
  cc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
  d0:	ldr	x0, [sp, #8]
  d4:	cmp	x0, x22
  d8:	b.eq	e0 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_4descEJNS0_10value_descENS0_11initializerIA1_cEEEEEvPT_RKT0_DpRKT1_+0xe0>  // b.none
  dc:	bl	0 <_ZdlPv>
  e0:	ldp	x20, x19, [sp, #80]
  e4:	ldp	x22, x21, [sp, #64]
  e8:	ldp	x29, x30, [sp, #48]
  ec:	add	sp, sp, #0x60
  f0:	ret
  f4:	adrp	x0, 0 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_4descEJNS0_10value_descENS0_11initializerIA1_cEEEEEvPT_RKT0_DpRKT1_>
  f8:	add	x0, x0, #0x0
  fc:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN4llvm2cl4listIS5_bNSA_6parserIS5_EEEUlS7_E_EE9_M_invokeERKSt9_Any_dataS7_:

0000000000000000 <_ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN4llvm2cl4listIS5_bNSA_6parserIS5_EEEUlS7_E_EE9_M_invokeERKSt9_Any_dataS7_>:
   0:	ret

Disassembly of section .text._ZNSt14_Function_base13_Base_managerIN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS2_6parserIS9_EEEUlRKS9_E_EE10_M_managerERSt9_Any_dataRKSH_St18_Manager_operation:

0000000000000000 <_ZNSt14_Function_base13_Base_managerIN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS2_6parserIS9_EEEUlRKS9_E_EE10_M_managerERSt9_Any_dataRKSH_St18_Manager_operation>:
   0:	cmp	w2, #0x1
   4:	b.ne	c <_ZNSt14_Function_base13_Base_managerIN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS2_6parserIS9_EEEUlRKS9_E_EE10_M_managerERSt9_Any_dataRKSH_St18_Manager_operation+0xc>  // b.any
   8:	str	x1, [x0]
   c:	mov	w0, wzr
  10:	ret

Disassembly of section .text._ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE:

0000000000000000 <_ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE>:
   0:	ldrb	w8, [x1, #9]
   4:	cbz	w8, 24 <_ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE+0x24>
   8:	ldrb	w8, [x0, #9]
   c:	cbz	w8, 24 <_ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE+0x24>
  10:	ldrb	w8, [x0, #8]
  14:	ldrb	w9, [x1, #8]
  18:	cmp	w8, w9
  1c:	cset	w0, ne  // ne = any
  20:	ret
  24:	mov	w0, wzr
  28:	ret

Disassembly of section .text._ZNSt17_Function_handlerIFvRKbEN4llvm2cl3optIbLb0ENS4_6parserIbEEEUlS1_E_EE9_M_invokeERKSt9_Any_dataS1_:

0000000000000000 <_ZNSt17_Function_handlerIFvRKbEN4llvm2cl3optIbLb0ENS4_6parserIbEEEUlS1_E_EE9_M_invokeERKSt9_Any_dataS1_>:
   0:	ret

Disassembly of section .text._ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIbLb0ENS2_6parserIbEEEUlRKbE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation:

0000000000000000 <_ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIbLb0ENS2_6parserIbEEEUlRKbE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation>:
   0:	cmp	w2, #0x1
   4:	b.ne	c <_ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIbLb0ENS2_6parserIbEEEUlRKbE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0xc>  // b.any
   8:	str	x1, [x0]
   c:	mov	w0, wzr
  10:	ret

Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_Main.cpp>:
   0:	sub	sp, sp, #0xa0
   4:	stp	d9, d8, [sp, #48]
   8:	stp	x29, x30, [sp, #64]
   c:	stp	x28, x27, [sp, #80]
  10:	stp	x26, x25, [sp, #96]
  14:	stp	x24, x23, [sp, #112]
  18:	stp	x22, x21, [sp, #128]
  1c:	stp	x20, x19, [sp, #144]
  20:	add	x29, sp, #0x30
  24:	adrp	x12, 0 <_GLOBAL__sub_I_Main.cpp>
  28:	adrp	x21, 0 <_GLOBAL__sub_I_Main.cpp>
  2c:	add	x12, x12, #0x0
  30:	add	x21, x21, #0x0
  34:	adrp	x19, 0 <_ZN4llvm2cl15GeneralCategoryE>
  38:	adrp	x9, 0 <_ZTVN4llvm2cl11OptionValueINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
  3c:	adrp	x10, 0 <_ZTVN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEEE>
  40:	adrp	x11, 0 <_ZTVN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
  44:	ldr	x19, [x19]
  48:	ldr	x9, [x9]
  4c:	ldr	x10, [x10]
  50:	ldr	x11, [x11]
  54:	stur	x12, [x29, #-16]
  58:	ldrh	w12, [x21, #10]
  5c:	adrp	x8, 0 <_GLOBAL__sub_I_Main.cpp>
  60:	ldr	d9, [x8]
  64:	movi	v0.2d, #0x0
  68:	and	w12, w12, #0x8000
  6c:	mov	x8, x21
  70:	strh	w12, [x21, #10]
  74:	add	x12, x21, #0x80
  78:	movi	v8.2s, #0x1
  7c:	strh	wzr, [x21, #8]
  80:	stur	q0, [x21, #12]
  84:	stur	q0, [x21, #28]
  88:	stur	q0, [x21, #44]
  8c:	str	wzr, [x21, #60]
  90:	str	x19, [x8, #80]!
  94:	stp	xzr, x12, [x21, #88]
  98:	str	x12, [x21, #104]
  9c:	mov	x12, x21
  a0:	adrp	x26, 0 <_GLOBAL__sub_I_Main.cpp>
  a4:	adrp	x25, 0 <_GLOBAL__sub_I_Main.cpp>
  a8:	str	x8, [x21, #64]
  ac:	mov	x8, x21
  b0:	str	d9, [x21, #112]
  b4:	str	wzr, [x21, #120]
  b8:	str	d8, [x21, #72]
  bc:	strb	wzr, [x12, #152]!
  c0:	adrp	x1, 0 <_GLOBAL__sub_I_Main.cpp>
  c4:	add	x26, x26, #0x0
  c8:	add	x25, x25, #0x0
  cc:	add	x28, x9, #0x10
  d0:	add	x23, x10, #0x10
  d4:	add	x24, x11, #0x10
  d8:	stp	x12, xzr, [x21, #136]
  dc:	strb	wzr, [x8, #192]!
  e0:	add	x1, x1, #0x0
  e4:	mov	w2, #0x1                   	// #1
  e8:	mov	x0, x21
  ec:	stp	x8, xzr, [x21, #176]
  f0:	strb	wzr, [x21, #208]
  f4:	str	x23, [x21]
  f8:	str	x24, [x21, #216]
  fc:	str	x28, [x21, #168]
 100:	stp	x25, x26, [x21, #240]
 104:	bl	0 <_ZN4llvm2cl6Option9setArgStrENS_9StringRefE>
 108:	adrp	x8, 0 <_GLOBAL__sub_I_Main.cpp>
 10c:	adrp	x27, 0 <_GLOBAL__sub_I_Main.cpp>
 110:	add	x8, x8, #0x0
 114:	mov	w9, #0xf                   	// #15
 118:	add	x27, x27, #0x0
 11c:	mov	w22, #0x8                   	// #8
 120:	sub	x1, x29, #0x10
 124:	mov	x0, x21
 128:	stp	x8, x9, [x21, #32]
 12c:	stp	x27, x22, [x21, #48]
 130:	bl	0 <_GLOBAL__sub_I_Main.cpp>
 134:	mov	x0, x21
 138:	bl	0 <_ZN4llvm2cl6Option11addArgumentEv>
 13c:	adrp	x20, 0 <_GLOBAL__sub_I_Main.cpp>
 140:	add	x20, x20, #0x0
 144:	adrp	x2, 0 <__dso_handle>
 148:	add	x2, x2, #0x0
 14c:	mov	x0, x20
 150:	mov	x1, x21
 154:	bl	0 <__cxa_atexit>
 158:	adrp	x8, 0 <_GLOBAL__sub_I_Main.cpp>
 15c:	adrp	x21, 0 <_GLOBAL__sub_I_Main.cpp>
 160:	add	x8, x8, #0x0
 164:	mov	w9, #0x13                  	// #19
 168:	add	x21, x21, #0x0
 16c:	stp	x8, x9, [x29, #-16]
 170:	ldrh	w8, [x21, #10]
 174:	movi	v0.2d, #0x0
 178:	mov	x9, x21
 17c:	strh	wzr, [x21, #8]
 180:	and	w8, w8, #0x8000
 184:	strh	w8, [x21, #10]
 188:	add	x8, x21, #0x80
 18c:	stur	q0, [x21, #12]
 190:	stur	q0, [x21, #28]
 194:	stur	q0, [x21, #44]
 198:	str	wzr, [x21, #60]
 19c:	str	x19, [x9, #80]!
 1a0:	stp	xzr, x8, [x21, #88]
 1a4:	str	x8, [x21, #104]
 1a8:	mov	x8, x21
 1ac:	adrp	x10, 0 <_GLOBAL__sub_I_Main.cpp>
 1b0:	str	x9, [x21, #64]
 1b4:	mov	x9, x21
 1b8:	str	d9, [x21, #112]
 1bc:	str	wzr, [x21, #120]
 1c0:	str	d8, [x21, #72]
 1c4:	strb	wzr, [x8, #152]!
 1c8:	adrp	x1, 0 <_GLOBAL__sub_I_Main.cpp>
 1cc:	add	x10, x10, #0x0
 1d0:	stp	x8, xzr, [x21, #136]
 1d4:	strb	wzr, [x9, #192]!
 1d8:	add	x1, x1, #0x0
 1dc:	mov	w2, #0x1                   	// #1
 1e0:	mov	x0, x21
 1e4:	stp	x27, x22, [sp, #16]
 1e8:	str	x10, [sp, #8]
 1ec:	stp	x9, xzr, [x21, #176]
 1f0:	strb	wzr, [x21, #208]
 1f4:	str	x23, [x21]
 1f8:	str	x24, [x21, #216]
 1fc:	str	x28, [x21, #168]
 200:	stp	x25, x26, [x21, #240]
 204:	mov	x22, x25
 208:	bl	0 <_ZN4llvm2cl6Option9setArgStrENS_9StringRefE>
 20c:	sub	x1, x29, #0x10
 210:	add	x2, sp, #0x10
 214:	add	x3, sp, #0x8
 218:	mov	x0, x21
 21c:	bl	0 <_GLOBAL__sub_I_Main.cpp>
 220:	mov	x0, x21
 224:	bl	0 <_ZN4llvm2cl6Option11addArgumentEv>
 228:	adrp	x25, 0 <__dso_handle>
 22c:	add	x25, x25, #0x0
 230:	mov	x0, x20
 234:	mov	x1, x21
 238:	mov	x2, x25
 23c:	bl	0 <__cxa_atexit>
 240:	adrp	x21, 0 <_GLOBAL__sub_I_Main.cpp>
 244:	add	x21, x21, #0x0
 248:	ldrh	w9, [x21, #10]
 24c:	adrp	x8, 0 <_GLOBAL__sub_I_Main.cpp>
 250:	movi	v0.2d, #0x0
 254:	mov	x10, x21
 258:	add	x11, x21, #0x80
 25c:	add	x8, x8, #0x0
 260:	strh	wzr, [x21, #8]
 264:	stur	q0, [x21, #12]
 268:	stur	q0, [x21, #28]
 26c:	stur	q0, [x21, #44]
 270:	str	wzr, [x21, #60]
 274:	str	x19, [x10, #80]!
 278:	stp	xzr, x11, [x21, #88]
 27c:	str	x11, [x21, #104]
 280:	mov	x11, x21
 284:	stur	x8, [x29, #-16]
 288:	adrp	x8, 0 <_GLOBAL__sub_I_Main.cpp>
 28c:	str	x10, [x21, #64]
 290:	mov	x10, x21
 294:	str	d9, [x21, #112]
 298:	str	wzr, [x21, #120]
 29c:	str	d8, [x21, #72]
 2a0:	strb	wzr, [x11, #152]!
 2a4:	and	w9, w9, #0x8000
 2a8:	add	x8, x8, #0x0
 2ac:	stp	x11, xzr, [x21, #136]
 2b0:	strb	wzr, [x10, #192]!
 2b4:	mov	w11, #0xc                   	// #12
 2b8:	orr	w9, w9, #0x80
 2bc:	sub	x1, x29, #0x10
 2c0:	mov	x0, x21
 2c4:	str	x23, [x21]
 2c8:	stp	x10, xzr, [x21, #176]
 2cc:	strb	wzr, [x21, #208]
 2d0:	str	x24, [x21, #216]
 2d4:	stp	x22, x26, [x21, #240]
 2d8:	str	x28, [x21, #168]
 2dc:	strh	w9, [x21, #10]
 2e0:	stp	x8, x11, [x21, #32]
 2e4:	bl	0 <_GLOBAL__sub_I_Main.cpp>
 2e8:	mov	x0, x21
 2ec:	bl	0 <_ZN4llvm2cl6Option11addArgumentEv>
 2f0:	mov	x0, x20
 2f4:	mov	x1, x21
 2f8:	mov	x2, x25
 2fc:	mov	x26, x25
 300:	bl	0 <__cxa_atexit>
 304:	adrp	x20, 0 <_GLOBAL__sub_I_Main.cpp>
 308:	add	x20, x20, #0x0
 30c:	adrp	x8, 0 <_GLOBAL__sub_I_Main.cpp>
 310:	ldr	x8, [x8]
 314:	ldrh	w9, [x20, #10]
 318:	movi	v0.2d, #0x0
 31c:	mov	x10, x20
 320:	adrp	x22, 0 <_GLOBAL__sub_I_Main.cpp>
 324:	and	w9, w9, #0x8000
 328:	orr	w9, w9, #0x1
 32c:	adrp	x23, 0 <_GLOBAL__sub_I_Main.cpp>
 330:	adrp	x1, 0 <_GLOBAL__sub_I_Main.cpp>
 334:	strh	wzr, [x20, #8]
 338:	stur	q0, [x20, #12]
 33c:	stur	q0, [x20, #28]
 340:	stur	q0, [x20, #44]
 344:	str	wzr, [x20, #60]
 348:	strh	w9, [x20, #10]
 34c:	add	x9, x20, #0x80
 350:	str	x19, [x10, #80]!
 354:	add	x22, x22, #0x0
 358:	add	x23, x23, #0x0
 35c:	add	x25, x8, #0x10
 360:	add	x1, x1, #0x0
 364:	mov	w2, #0x1                   	// #1
 368:	mov	x0, x20
 36c:	stp	xzr, x9, [x20, #88]
 370:	str	x9, [x20, #104]
 374:	str	x10, [x20, #64]
 378:	str	d9, [x20, #112]
 37c:	str	wzr, [x20, #120]
 380:	str	d8, [x20, #72]
 384:	stp	xzr, xzr, [x20, #136]
 388:	str	x25, [x20]
 38c:	stp	xzr, xzr, [x20, #152]
 390:	stp	xzr, xzr, [x20, #168]
 394:	str	x24, [x20, #184]
 398:	stp	x23, x22, [x20, #208]
 39c:	bl	0 <_ZN4llvm2cl6Option9setArgStrENS_9StringRefE>
 3a0:	ldrh	w11, [x20, #10]
 3a4:	adrp	x8, 0 <_GLOBAL__sub_I_Main.cpp>
 3a8:	add	x8, x8, #0x0
 3ac:	mov	w9, #0x1a                  	// #26
 3b0:	adrp	x10, 0 <_GLOBAL__sub_I_Main.cpp>
 3b4:	add	x10, x10, #0x0
 3b8:	stp	x8, x9, [x20, #32]
 3bc:	mov	w8, #0x9                   	// #9
 3c0:	stp	x10, x8, [x20, #48]
 3c4:	and	w8, w11, #0xfffffe7f
 3c8:	orr	w8, w8, #0x100
 3cc:	mov	x0, x20
 3d0:	strh	w8, [x20, #10]
 3d4:	bl	0 <_ZN4llvm2cl6Option11addArgumentEv>
 3d8:	adrp	x21, 0 <_GLOBAL__sub_I_Main.cpp>
 3dc:	add	x21, x21, #0x0
 3e0:	mov	x0, x21
 3e4:	mov	x1, x20
 3e8:	mov	x2, x26
 3ec:	bl	0 <__cxa_atexit>
 3f0:	adrp	x20, 0 <_GLOBAL__sub_I_Main.cpp>
 3f4:	add	x20, x20, #0x0
 3f8:	ldrh	w8, [x20, #10]
 3fc:	movi	v0.2d, #0x0
 400:	mov	x9, x20
 404:	adrp	x1, 0 <_GLOBAL__sub_I_Main.cpp>
 408:	and	w8, w8, #0x8000
 40c:	orr	w8, w8, #0x1
 410:	strh	wzr, [x20, #8]
 414:	stur	q0, [x20, #12]
 418:	stur	q0, [x20, #28]
 41c:	stur	q0, [x20, #44]
 420:	str	wzr, [x20, #60]
 424:	strh	w8, [x20, #10]
 428:	add	x8, x20, #0x80
 42c:	str	x19, [x9, #80]!
 430:	add	x1, x1, #0x0
 434:	mov	w2, #0x1                   	// #1
 438:	mov	x0, x20
 43c:	stp	xzr, x8, [x20, #88]
 440:	str	x8, [x20, #104]
 444:	str	d9, [x20, #112]
 448:	str	wzr, [x20, #120]
 44c:	str	d8, [x20, #72]
 450:	stp	xzr, xzr, [x20, #136]
 454:	str	x25, [x20]
 458:	stp	xzr, xzr, [x20, #152]
 45c:	stp	xzr, xzr, [x20, #168]
 460:	str	x24, [x20, #184]
 464:	str	x9, [x20, #64]
 468:	stp	x23, x22, [x20, #208]
 46c:	bl	0 <_ZN4llvm2cl6Option9setArgStrENS_9StringRefE>
 470:	ldrh	w10, [x20, #10]
 474:	adrp	x8, 0 <_GLOBAL__sub_I_Main.cpp>
 478:	add	x8, x8, #0x0
 47c:	mov	w23, #0x1f                  	// #31
 480:	adrp	x9, 0 <_GLOBAL__sub_I_Main.cpp>
 484:	add	x9, x9, #0x0
 488:	stp	x8, x23, [x20, #32]
 48c:	mov	w8, #0xa                   	// #10
 490:	stp	x9, x8, [x20, #48]
 494:	and	w8, w10, #0xfffffe7f
 498:	orr	w8, w8, #0x100
 49c:	mov	x0, x20
 4a0:	strh	w8, [x20, #10]
 4a4:	bl	0 <_ZN4llvm2cl6Option11addArgumentEv>
 4a8:	mov	x0, x21
 4ac:	mov	x1, x20
 4b0:	mov	x2, x26
 4b4:	bl	0 <__cxa_atexit>
 4b8:	adrp	x20, 0 <_GLOBAL__sub_I_Main.cpp>
 4bc:	add	x20, x20, #0x0
 4c0:	ldrh	w8, [x20, #10]
 4c4:	movi	v0.2d, #0x0
 4c8:	add	x9, x20, #0x80
 4cc:	strh	wzr, [x20, #8]
 4d0:	and	w8, w8, #0x8000
 4d4:	strh	w8, [x20, #10]
 4d8:	mov	x8, x20
 4dc:	stur	q0, [x20, #12]
 4e0:	stur	q0, [x20, #28]
 4e4:	stur	q0, [x20, #44]
 4e8:	str	wzr, [x20, #60]
 4ec:	str	x19, [x8, #80]!
 4f0:	stp	xzr, x9, [x20, #88]
 4f4:	str	x9, [x20, #104]
 4f8:	adrp	x9, 0 <_GLOBAL__sub_I_Main.cpp>
 4fc:	ldr	x9, [x9]
 500:	mov	w10, #0x1                   	// #1
 504:	adrp	x1, 0 <_GLOBAL__sub_I_Main.cpp>
 508:	add	x1, x1, #0x0
 50c:	add	x9, x9, #0x10
 510:	str	x9, [x20, #144]
 514:	adrp	x9, 0 <_ZTVN4llvm2cl3optIbLb0ENS0_6parserIbEEEE>
 518:	ldr	x9, [x9]
 51c:	strb	w10, [x20, #153]
 520:	adrp	x10, 0 <_ZTVN4llvm2cl6parserIbEE>
 524:	ldr	x10, [x10]
 528:	add	x9, x9, #0x10
 52c:	str	x9, [x20]
 530:	adrp	x9, 0 <_GLOBAL__sub_I_Main.cpp>
 534:	add	x10, x10, #0x10
 538:	str	x10, [x20, #160]
 53c:	adrp	x10, 0 <_GLOBAL__sub_I_Main.cpp>
 540:	add	x9, x9, #0x0
 544:	add	x10, x10, #0x0
 548:	mov	w2, #0x10                  	// #16
 54c:	mov	x0, x20
 550:	str	d9, [x20, #112]
 554:	str	wzr, [x20, #120]
 558:	str	d8, [x20, #72]
 55c:	strb	wzr, [x20, #136]
 560:	strb	wzr, [x20, #152]
 564:	str	x8, [x20, #64]
 568:	stp	x10, x9, [x20, #184]
 56c:	bl	0 <_ZN4llvm2cl6Option9setArgStrENS_9StringRefE>
 570:	adrp	x8, 0 <_GLOBAL__sub_I_Main.cpp>
 574:	add	x8, x8, #0x0
 578:	mov	x0, x20
 57c:	stp	x8, x23, [x20, #32]
 580:	bl	0 <_ZN4llvm2cl6Option11addArgumentEv>
 584:	adrp	x0, 0 <_GLOBAL__sub_I_Main.cpp>
 588:	add	x0, x0, #0x0
 58c:	mov	x1, x20
 590:	mov	x2, x26
 594:	bl	0 <__cxa_atexit>
 598:	ldp	x20, x19, [sp, #144]
 59c:	ldp	x22, x21, [sp, #128]
 5a0:	ldp	x24, x23, [sp, #112]
 5a4:	ldp	x26, x25, [sp, #96]
 5a8:	ldp	x28, x27, [sp, #80]
 5ac:	ldp	x29, x30, [sp, #64]
 5b0:	ldp	d9, d8, [sp, #48]
 5b4:	add	sp, sp, #0xa0
 5b8:	ret

Record.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm5RecTy4dumpEv>:
       0:	sub	sp, sp, #0x50
       4:	stp	x29, x30, [sp, #32]
       8:	str	x21, [sp, #48]
       c:	stp	x20, x19, [sp, #64]
      10:	add	x29, sp, #0x20
      14:	mov	x19, x0
      18:	bl	0 <_ZN4llvm4errsEv>
      1c:	ldr	x8, [x19]
      20:	mov	x20, x0
      24:	mov	x0, x19
      28:	mov	x21, sp
      2c:	ldr	x9, [x8, #16]
      30:	mov	x8, sp
      34:	blr	x9
      38:	ldp	x1, x2, [sp]
      3c:	mov	x0, x20
      40:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
      44:	ldr	x0, [sp]
      48:	add	x8, x21, #0x10
      4c:	cmp	x0, x8
      50:	b.eq	58 <_ZNK4llvm5RecTy4dumpEv+0x58>  // b.none
      54:	bl	0 <_ZdlPv>
      58:	ldp	x20, x19, [sp, #64]
      5c:	ldr	x21, [sp, #48]
      60:	ldp	x29, x30, [sp, #32]
      64:	add	sp, sp, #0x50
      68:	ret

000000000000006c <_ZN4llvm5RecTy9getListTyEv>:
      6c:	stp	x29, x30, [sp, #-32]!
      70:	str	x19, [sp, #16]
      74:	mov	x29, sp
      78:	mov	x19, x0
      7c:	ldr	x0, [x0, #16]
      80:	cbnz	x0, b8 <_ZN4llvm5RecTy9getListTyEv+0x4c>
      84:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
      88:	add	x0, x0, #0x0
      8c:	mov	w1, #0x20                  	// #32
      90:	mov	w2, #0x4                   	// #4
      94:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
      98:	adrp	x9, 1d0 <_ZN4llvm9BitsRecTy3getEj+0x4c>
      9c:	ldr	x9, [x9]
      a0:	mov	w8, #0x5                   	// #5
      a4:	str	w8, [x0, #8]
      a8:	stp	xzr, x19, [x0, #16]
      ac:	add	x8, x9, #0x10
      b0:	str	x8, [x0]
      b4:	str	x0, [x19, #16]
      b8:	ldr	x19, [sp, #16]
      bc:	ldp	x29, x30, [sp], #32
      c0:	ret

00000000000000c4 <_ZNK4llvm5RecTy19typeIsConvertibleToEPKS0_>:
      c4:	stp	x29, x30, [sp, #-16]!
      c8:	mov	x29, sp
      cc:	cbz	x1, e8 <_ZNK4llvm5RecTy19typeIsConvertibleToEPKS0_+0x24>
      d0:	ldr	w8, [x0, #8]
      d4:	ldr	w9, [x1, #8]
      d8:	cmp	w8, w9
      dc:	cset	w0, eq  // eq = none
      e0:	ldp	x29, x30, [sp], #16
      e4:	ret
      e8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
      ec:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
      f0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
      f4:	add	x0, x0, #0x0
      f8:	add	x1, x1, #0x0
      fc:	add	x3, x3, #0x0
     100:	mov	w2, #0x46                  	// #70
     104:	bl	0 <__assert_fail>

0000000000000108 <_ZNK4llvm5RecTy7typeIsAEPKS0_>:
     108:	cmp	x0, x1
     10c:	cset	w0, eq  // eq = none
     110:	ret

0000000000000114 <_ZNK4llvm8BitRecTy19typeIsConvertibleToEPKNS_5RecTyE>:
     114:	stp	x29, x30, [sp, #-16]!
     118:	mov	x29, sp
     11c:	cbz	x1, 164 <_ZNK4llvm8BitRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x50>
     120:	ldr	w9, [x0, #8]
     124:	ldr	w8, [x1, #8]
     128:	mov	w0, #0x1                   	// #1
     12c:	cmp	w9, w8
     130:	b.eq	150 <_ZNK4llvm8BitRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x3c>  // b.none
     134:	cmp	w8, #0x3
     138:	b.eq	150 <_ZNK4llvm8BitRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x3c>  // b.none
     13c:	cmp	w8, #0x1
     140:	b.ne	158 <_ZNK4llvm8BitRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x44>  // b.any
     144:	ldr	w8, [x1, #24]
     148:	cmp	w8, #0x1
     14c:	cset	w0, eq  // eq = none
     150:	ldp	x29, x30, [sp], #16
     154:	ret
     158:	mov	w0, wzr
     15c:	ldp	x29, x30, [sp], #16
     160:	ret
     164:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
     168:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
     16c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
     170:	add	x0, x0, #0x0
     174:	add	x1, x1, #0x0
     178:	add	x3, x3, #0x0
     17c:	mov	w2, #0x46                  	// #70
     180:	bl	0 <__assert_fail>

0000000000000184 <_ZN4llvm9BitsRecTy3getEj>:
     184:	stp	x29, x30, [sp, #-48]!
     188:	stp	x22, x21, [sp, #16]
     18c:	stp	x20, x19, [sp, #32]
     190:	mov	x29, sp
     194:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
     198:	add	x8, x8, #0x0
     19c:	ldarb	w8, [x8]
     1a0:	adrp	x20, 0 <_ZNK4llvm5RecTy4dumpEv>
     1a4:	mov	w19, w0
     1a8:	add	x20, x20, #0x0
     1ac:	tbz	w8, #0, 250 <_ZN4llvm9BitsRecTy3getEj+0xcc>
     1b0:	ldp	x22, x8, [x20]
     1b4:	mov	w21, w19
     1b8:	sub	x9, x8, x22
     1bc:	asr	x10, x9, #3
     1c0:	cmp	x10, x21
     1c4:	b.hi	200 <_ZN4llvm9BitsRecTy3getEj+0x7c>  // b.pmore
     1c8:	add	w9, w19, #0x1
     1cc:	cmp	x10, x9
     1d0:	b.cs	1e8 <_ZN4llvm9BitsRecTy3getEj+0x64>  // b.hs, b.nlast
     1d4:	sub	x1, x9, x10
     1d8:	mov	x0, x20
     1dc:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
     1e0:	ldr	x22, [x20]
     1e4:	b	200 <_ZN4llvm9BitsRecTy3getEj+0x7c>
     1e8:	b.ls	200 <_ZN4llvm9BitsRecTy3getEj+0x7c>  // b.plast
     1ec:	add	x9, x22, x9, lsl #3
     1f0:	cmp	x9, x8
     1f4:	b.eq	200 <_ZN4llvm9BitsRecTy3getEj+0x7c>  // b.none
     1f8:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
     1fc:	str	x9, [x8]
     200:	ldr	x0, [x22, x21, lsl #3]
     204:	cbnz	x0, 240 <_ZN4llvm9BitsRecTy3getEj+0xbc>
     208:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
     20c:	add	x0, x0, #0x0
     210:	mov	w1, #0x20                  	// #32
     214:	mov	w2, #0x4                   	// #4
     218:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
     21c:	str	xzr, [x0, #16]
     220:	adrp	x9, f0 <_ZNK4llvm5RecTy19typeIsConvertibleToEPKS0_+0x2c>
     224:	ldr	x9, [x9]
     228:	mov	w8, #0x1                   	// #1
     22c:	str	w8, [x0, #8]
     230:	str	w19, [x0, #24]
     234:	add	x8, x9, #0x10
     238:	str	x8, [x0]
     23c:	str	x0, [x22, x21, lsl #3]
     240:	ldp	x20, x19, [sp, #32]
     244:	ldp	x22, x21, [sp, #16]
     248:	ldp	x29, x30, [sp], #48
     24c:	ret
     250:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
     254:	add	x0, x0, #0x0
     258:	bl	0 <__cxa_guard_acquire>
     25c:	cbz	w0, 1b0 <_ZN4llvm9BitsRecTy3getEj+0x2c>
     260:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
     264:	adrp	x2, 0 <__dso_handle>
     268:	add	x0, x0, #0x0
     26c:	add	x2, x2, #0x0
     270:	mov	x1, x20
     274:	stp	xzr, xzr, [x20]
     278:	str	xzr, [x20, #16]
     27c:	bl	0 <__cxa_atexit>
     280:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
     284:	add	x0, x0, #0x0
     288:	bl	0 <__cxa_guard_release>
     28c:	b	1b0 <_ZN4llvm9BitsRecTy3getEj+0x2c>

0000000000000290 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev>:
     290:	sub	sp, sp, #0x80
     294:	stp	x29, x30, [sp, #80]
     298:	stp	x22, x21, [sp, #96]
     29c:	stp	x20, x19, [sp, #112]
     2a0:	add	x29, sp, #0x50
     2a4:	ldr	w9, [x0, #24]
     2a8:	add	x10, sp, #0x28
     2ac:	mov	x19, x8
     2b0:	add	x8, x10, #0x15
     2b4:	cbz	w9, 2ec <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x5c>
     2b8:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
     2bc:	movk	x10, #0xcccd
     2c0:	mov	w11, #0xa                   	// #10
     2c4:	mov	x20, x8
     2c8:	umulh	x12, x9, x10
     2cc:	lsr	x12, x12, #3
     2d0:	msub	w13, w12, w11, w9
     2d4:	orr	w13, w13, #0x30
     2d8:	cmp	x9, #0x9
     2dc:	strb	w13, [x20, #-1]!
     2e0:	mov	x9, x12
     2e4:	b.hi	2c8 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x38>  // b.pmore
     2e8:	b	2f8 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x68>
     2ec:	mov	w9, #0x30                  	// #48
     2f0:	add	x20, x10, #0x14
     2f4:	strb	w9, [sp, #60]
     2f8:	add	x9, sp, #0x8
     2fc:	sub	x21, x8, x20
     300:	add	x22, x9, #0x10
     304:	cmp	x21, #0x10
     308:	mov	x0, x22
     30c:	str	x22, [sp, #8]
     310:	stur	x21, [x29, #-8]
     314:	b.cc	334 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0xa4>  // b.lo, b.ul, b.last
     318:	add	x0, sp, #0x8
     31c:	sub	x1, x29, #0x8
     320:	mov	x2, xzr
     324:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     328:	ldur	x8, [x29, #-8]
     32c:	str	x0, [sp, #8]
     330:	str	x8, [sp, #24]
     334:	cbz	x21, 358 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0xc8>
     338:	cmp	x21, #0x1
     33c:	b.ne	34c <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0xbc>  // b.any
     340:	ldrb	w8, [x20]
     344:	strb	w8, [x0]
     348:	b	358 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0xc8>
     34c:	mov	x1, x20
     350:	mov	x2, x21
     354:	bl	0 <memcpy>
     358:	ldur	x8, [x29, #-8]
     35c:	ldr	x9, [sp, #8]
     360:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
     364:	add	x3, x3, #0x0
     368:	add	x0, sp, #0x8
     36c:	mov	w4, #0x5                   	// #5
     370:	mov	x1, xzr
     374:	mov	x2, xzr
     378:	str	x8, [sp, #16]
     37c:	strb	wzr, [x9, x8]
     380:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
     384:	add	x8, sp, #0x28
     388:	add	x20, x8, #0x10
     38c:	str	x20, [sp, #40]
     390:	mov	x8, x0
     394:	ldr	x9, [x8], #16
     398:	cmp	x9, x8
     39c:	b.eq	3b0 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x120>  // b.none
     3a0:	str	x9, [sp, #40]
     3a4:	ldr	x9, [x0, #16]
     3a8:	str	x9, [sp, #56]
     3ac:	b	3b8 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x128>
     3b0:	ldr	q0, [x9]
     3b4:	str	q0, [x20]
     3b8:	ldr	x9, [x0, #8]
     3bc:	str	x9, [sp, #48]
     3c0:	stp	x8, xzr, [x0]
     3c4:	strb	wzr, [x0, #16]
     3c8:	ldr	x8, [sp, #48]
     3cc:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
     3d0:	cmp	x8, x9
     3d4:	b.eq	460 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x1d0>  // b.none
     3d8:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
     3dc:	add	x1, x1, #0x0
     3e0:	add	x0, sp, #0x28
     3e4:	mov	w2, #0x1                   	// #1
     3e8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
     3ec:	add	x9, x19, #0x10
     3f0:	str	x9, [x19]
     3f4:	mov	x8, x0
     3f8:	ldr	x10, [x8], #16
     3fc:	cmp	x10, x8
     400:	b.eq	414 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x184>  // b.none
     404:	str	x10, [x19]
     408:	ldr	x9, [x0, #16]
     40c:	str	x9, [x19, #16]
     410:	b	41c <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x18c>
     414:	ldr	q0, [x10]
     418:	str	q0, [x9]
     41c:	ldr	x9, [x0, #8]
     420:	str	x9, [x19, #8]
     424:	stp	x8, xzr, [x0]
     428:	strb	wzr, [x0, #16]
     42c:	ldr	x0, [sp, #40]
     430:	cmp	x0, x20
     434:	b.eq	43c <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x1ac>  // b.none
     438:	bl	0 <_ZdlPv>
     43c:	ldr	x0, [sp, #8]
     440:	cmp	x0, x22
     444:	b.eq	44c <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x1bc>  // b.none
     448:	bl	0 <_ZdlPv>
     44c:	ldp	x20, x19, [sp, #112]
     450:	ldp	x22, x21, [sp, #96]
     454:	ldp	x29, x30, [sp, #80]
     458:	add	sp, sp, #0x80
     45c:	ret
     460:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
     464:	add	x0, x0, #0x0
     468:	bl	0 <_ZSt20__throw_length_errorPKc>

000000000000046c <_ZNK4llvm9BitsRecTy19typeIsConvertibleToEPKNS_5RecTyE>:
     46c:	stp	x29, x30, [sp, #-16]!
     470:	mov	x29, sp
     474:	cbz	x1, 4cc <_ZNK4llvm9BitsRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x60>
     478:	ldr	w9, [x0, #8]
     47c:	ldr	w8, [x1, #8]
     480:	cmp	w9, w8
     484:	b.ne	4a0 <_ZNK4llvm9BitsRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x34>  // b.any
     488:	cmp	w9, #0x1
     48c:	b.ne	4ec <_ZNK4llvm9BitsRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x80>  // b.any
     490:	ldr	w8, [x1, #24]
     494:	ldr	w9, [x0, #24]
     498:	cmp	w8, w9
     49c:	b	4c0 <_ZNK4llvm9BitsRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x54>
     4a0:	cbnz	w8, 4bc <_ZNK4llvm9BitsRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x50>
     4a4:	ldr	w9, [x0, #24]
     4a8:	cmp	w9, #0x1
     4ac:	b.ne	4bc <_ZNK4llvm9BitsRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x50>  // b.any
     4b0:	mov	w0, #0x1                   	// #1
     4b4:	ldp	x29, x30, [sp], #16
     4b8:	ret
     4bc:	cmp	w8, #0x3
     4c0:	cset	w0, eq  // eq = none
     4c4:	ldp	x29, x30, [sp], #16
     4c8:	ret
     4cc:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
     4d0:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
     4d4:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
     4d8:	add	x0, x0, #0x0
     4dc:	add	x1, x1, #0x0
     4e0:	add	x3, x3, #0x0
     4e4:	mov	w2, #0x46                  	// #70
     4e8:	bl	0 <__assert_fail>
     4ec:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
     4f0:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
     4f4:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
     4f8:	add	x0, x0, #0x0
     4fc:	add	x1, x1, #0x0
     500:	add	x3, x3, #0x0
     504:	mov	w2, #0x108                 	// #264
     508:	bl	0 <__assert_fail>

000000000000050c <_ZNK4llvm9BitsRecTy7typeIsAEPKNS_5RecTyE>:
     50c:	stp	x29, x30, [sp, #-16]!
     510:	mov	x29, sp
     514:	cbz	x1, 548 <_ZNK4llvm9BitsRecTy7typeIsAEPKNS_5RecTyE+0x3c>
     518:	ldr	w8, [x1, #8]
     51c:	cmp	w8, #0x1
     520:	b.ne	53c <_ZNK4llvm9BitsRecTy7typeIsAEPKNS_5RecTyE+0x30>  // b.any
     524:	ldr	w8, [x1, #24]
     528:	ldr	w9, [x0, #24]
     52c:	cmp	w8, w9
     530:	cset	w0, eq  // eq = none
     534:	ldp	x29, x30, [sp], #16
     538:	ret
     53c:	mov	w0, wzr
     540:	ldp	x29, x30, [sp], #16
     544:	ret
     548:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
     54c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
     550:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
     554:	add	x0, x0, #0x0
     558:	add	x1, x1, #0x0
     55c:	add	x3, x3, #0x0
     560:	mov	w2, #0x69                  	// #105
     564:	bl	0 <__assert_fail>

0000000000000568 <_ZNK4llvm8IntRecTy19typeIsConvertibleToEPKNS_5RecTyE>:
     568:	ldr	w8, [x1, #8]
     56c:	cmp	w8, #0x2
     570:	cset	w9, cc  // cc = lo, ul, last
     574:	cmp	w8, #0x3
     578:	cset	w8, eq  // eq = none
     57c:	orr	w0, w9, w8
     580:	ret

0000000000000584 <_ZNK4llvm9CodeRecTy19typeIsConvertibleToEPKNS_5RecTyE>:
     584:	ldr	w8, [x1, #8]
     588:	cmp	w8, #0x2
     58c:	cset	w9, eq  // eq = none
     590:	cmp	w8, #0x4
     594:	cset	w8, eq  // eq = none
     598:	orr	w0, w9, w8
     59c:	ret

00000000000005a0 <_ZNK4llvm11StringRecTy11getAsStringB5cxx11Ev>:
     5a0:	mov	w9, #0x7473                	// #29811
     5a4:	movk	w9, #0x6972, lsl #16
     5a8:	mov	x10, x8
     5ac:	mov	w11, #0x676e                	// #26478
     5b0:	mov	w12, #0x6                   	// #6
     5b4:	str	w9, [x10, #16]!
     5b8:	strh	w11, [x8, #20]
     5bc:	stp	x10, x12, [x8]
     5c0:	strb	wzr, [x8, #22]
     5c4:	ret

00000000000005c8 <_ZNK4llvm11StringRecTy19typeIsConvertibleToEPKNS_5RecTyE>:
     5c8:	ldr	w8, [x1, #8]
     5cc:	cmp	w8, #0x4
     5d0:	cset	w9, eq  // eq = none
     5d4:	cmp	w8, #0x2
     5d8:	cset	w8, eq  // eq = none
     5dc:	orr	w0, w9, w8
     5e0:	ret

00000000000005e4 <_ZNK4llvm9ListRecTy11getAsStringB5cxx11Ev>:
     5e4:	sub	sp, sp, #0x60
     5e8:	stp	x29, x30, [sp, #64]
     5ec:	stp	x20, x19, [sp, #80]
     5f0:	add	x29, sp, #0x40
     5f4:	ldr	x0, [x0, #24]
     5f8:	mov	x19, x8
     5fc:	mov	x8, sp
     600:	ldr	x9, [x0]
     604:	ldr	x9, [x9, #16]
     608:	blr	x9
     60c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
     610:	add	x3, x3, #0x0
     614:	mov	x0, sp
     618:	mov	w4, #0x5                   	// #5
     61c:	mov	x1, xzr
     620:	mov	x2, xzr
     624:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
     628:	add	x8, sp, #0x20
     62c:	add	x20, x8, #0x10
     630:	str	x20, [sp, #32]
     634:	mov	x8, x0
     638:	ldr	x9, [x8], #16
     63c:	cmp	x9, x8
     640:	b.eq	654 <_ZNK4llvm9ListRecTy11getAsStringB5cxx11Ev+0x70>  // b.none
     644:	str	x9, [sp, #32]
     648:	ldr	x9, [x0, #16]
     64c:	str	x9, [sp, #48]
     650:	b	65c <_ZNK4llvm9ListRecTy11getAsStringB5cxx11Ev+0x78>
     654:	ldr	q0, [x9]
     658:	str	q0, [x20]
     65c:	ldr	x9, [x0, #8]
     660:	str	x9, [sp, #40]
     664:	stp	x8, xzr, [x0]
     668:	strb	wzr, [x0, #16]
     66c:	ldr	x8, [sp, #40]
     670:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
     674:	cmp	x8, x9
     678:	b.eq	708 <_ZNK4llvm9ListRecTy11getAsStringB5cxx11Ev+0x124>  // b.none
     67c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
     680:	add	x1, x1, #0x0
     684:	add	x0, sp, #0x20
     688:	mov	w2, #0x1                   	// #1
     68c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
     690:	add	x9, x19, #0x10
     694:	str	x9, [x19]
     698:	mov	x8, x0
     69c:	ldr	x10, [x8], #16
     6a0:	cmp	x10, x8
     6a4:	b.eq	6b8 <_ZNK4llvm9ListRecTy11getAsStringB5cxx11Ev+0xd4>  // b.none
     6a8:	str	x10, [x19]
     6ac:	ldr	x9, [x0, #16]
     6b0:	str	x9, [x19, #16]
     6b4:	b	6c0 <_ZNK4llvm9ListRecTy11getAsStringB5cxx11Ev+0xdc>
     6b8:	ldr	q0, [x10]
     6bc:	str	q0, [x9]
     6c0:	ldr	x9, [x0, #8]
     6c4:	str	x9, [x19, #8]
     6c8:	stp	x8, xzr, [x0]
     6cc:	strb	wzr, [x0, #16]
     6d0:	ldr	x0, [sp, #32]
     6d4:	cmp	x0, x20
     6d8:	b.eq	6e0 <_ZNK4llvm9ListRecTy11getAsStringB5cxx11Ev+0xfc>  // b.none
     6dc:	bl	0 <_ZdlPv>
     6e0:	ldr	x0, [sp]
     6e4:	mov	x8, sp
     6e8:	add	x8, x8, #0x10
     6ec:	cmp	x0, x8
     6f0:	b.eq	6f8 <_ZNK4llvm9ListRecTy11getAsStringB5cxx11Ev+0x114>  // b.none
     6f4:	bl	0 <_ZdlPv>
     6f8:	ldp	x20, x19, [sp, #80]
     6fc:	ldp	x29, x30, [sp, #64]
     700:	add	sp, sp, #0x60
     704:	ret
     708:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
     70c:	add	x0, x0, #0x0
     710:	bl	0 <_ZSt20__throw_length_errorPKc>

0000000000000714 <_ZNK4llvm9ListRecTy19typeIsConvertibleToEPKNS_5RecTyE>:
     714:	stp	x29, x30, [sp, #-16]!
     718:	mov	x29, sp
     71c:	cbz	x1, 750 <_ZNK4llvm9ListRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x3c>
     720:	ldr	w8, [x1, #8]
     724:	cmp	w8, #0x5
     728:	b.ne	744 <_ZNK4llvm9ListRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x30>  // b.any
     72c:	ldr	x0, [x0, #24]
     730:	ldr	x1, [x1, #24]
     734:	ldr	x8, [x0]
     738:	ldr	x2, [x8, #24]
     73c:	ldp	x29, x30, [sp], #16
     740:	br	x2
     744:	mov	w0, wzr
     748:	ldp	x29, x30, [sp], #16
     74c:	ret
     750:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
     754:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
     758:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
     75c:	add	x0, x0, #0x0
     760:	add	x1, x1, #0x0
     764:	add	x3, x3, #0x0
     768:	mov	w2, #0x69                  	// #105
     76c:	bl	0 <__assert_fail>

0000000000000770 <_ZNK4llvm9ListRecTy7typeIsAEPKNS_5RecTyE>:
     770:	stp	x29, x30, [sp, #-16]!
     774:	mov	x29, sp
     778:	cbz	x1, 7ac <_ZNK4llvm9ListRecTy7typeIsAEPKNS_5RecTyE+0x3c>
     77c:	ldr	w8, [x1, #8]
     780:	cmp	w8, #0x5
     784:	b.ne	7a0 <_ZNK4llvm9ListRecTy7typeIsAEPKNS_5RecTyE+0x30>  // b.any
     788:	ldr	x0, [x0, #24]
     78c:	ldr	x1, [x1, #24]
     790:	ldr	x8, [x0]
     794:	ldr	x2, [x8, #32]
     798:	ldp	x29, x30, [sp], #16
     79c:	br	x2
     7a0:	mov	w0, wzr
     7a4:	ldp	x29, x30, [sp], #16
     7a8:	ret
     7ac:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
     7b0:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
     7b4:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
     7b8:	add	x0, x0, #0x0
     7bc:	add	x1, x1, #0x0
     7c0:	add	x3, x3, #0x0
     7c4:	mov	w2, #0x69                  	// #105
     7c8:	bl	0 <__assert_fail>

00000000000007cc <_ZNK4llvm8DagRecTy11getAsStringB5cxx11Ev>:
     7cc:	mov	w9, #0x6164                	// #24932
     7d0:	movk	w9, #0x67, lsl #16
     7d4:	mov	x10, x8
     7d8:	mov	w11, #0x3                   	// #3
     7dc:	str	w9, [x10, #16]!
     7e0:	stp	x10, x11, [x8]
     7e4:	ret

00000000000007e8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE>:
     7e8:	sub	sp, sp, #0x120
     7ec:	stp	x29, x30, [sp, #208]
     7f0:	stp	x28, x25, [sp, #224]
     7f4:	stp	x24, x23, [sp, #240]
     7f8:	stp	x22, x21, [sp, #256]
     7fc:	stp	x20, x19, [sp, #272]
     800:	add	x29, sp, #0xd0
     804:	cbz	x1, 85c <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x74>
     808:	ldr	x9, [x0]
     80c:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
     810:	ldr	d0, [x11]
     814:	mov	x8, x1
     818:	ldr	x23, [x9, #104]
     81c:	sub	x10, x29, #0x30
     820:	sbfx	x21, x8, #0, #61
     824:	mov	x19, x0
     828:	lsl	x20, x1, #3
     82c:	add	x1, x10, #0x10
     830:	cmp	x21, #0x4
     834:	stur	x1, [x29, #-48]
     838:	stur	d0, [x29, #-40]
     83c:	b.ls	878 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x90>  // b.plast
     840:	sub	x0, x29, #0x30
     844:	mov	w3, #0x8                   	// #8
     848:	mov	x2, x21
     84c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     850:	ldur	x1, [x29, #-48]
     854:	ldur	w8, [x29, #-40]
     858:	b	87c <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x94>
     85c:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
     860:	add	x8, x8, #0x0
     864:	ldarb	w8, [x8]
     868:	tbz	w8, #0, bb8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x3d0>
     86c:	adrp	x20, 0 <_ZNK4llvm5RecTy4dumpEv>
     870:	add	x20, x20, #0x0
     874:	b	b78 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x390>
     878:	mov	w8, wzr
     87c:	add	x0, x1, w8, uxtw #3
     880:	mov	x1, x19
     884:	mov	x2, x20
     888:	bl	0 <memcpy>
     88c:	ldp	w8, w9, [x29, #-40]
     890:	add	x24, x21, x8
     894:	cmp	x24, x9
     898:	b.hi	c40 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x458>  // b.pmore
     89c:	stur	w24, [x29, #-40]
     8a0:	cbz	w24, 9d0 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x1e8>
     8a4:	ldur	x19, [x29, #-48]
     8a8:	and	x25, x24, #0xffffffff
     8ac:	mov	w8, #0x7e                  	// #126
     8b0:	clz	x9, x25
     8b4:	add	x1, x19, w24, uxtw #3
     8b8:	sub	x2, x8, x9, lsl #1
     8bc:	mov	x0, x19
     8c0:	mov	x3, xzr
     8c4:	bl	f314 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_>
     8c8:	cmp	w24, #0x11
     8cc:	b.cc	92c <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x144>  // b.lo, b.ul, b.last
     8d0:	add	x20, x19, #0x8
     8d4:	mov	w21, #0x8                   	// #8
     8d8:	strb	wzr, [sp, #16]
     8dc:	b	8f8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x110>
     8e0:	mov	x0, x22
     8e4:	mov	x1, xzr
     8e8:	bl	f7c8 <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_>
     8ec:	add	x21, x21, #0x8
     8f0:	cmp	x21, #0x80
     8f4:	b.eq	9a4 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x1bc>  // b.none
     8f8:	add	x22, x19, x21
     8fc:	add	x0, sp, #0x10
     900:	mov	x1, x22
     904:	mov	x2, x19
     908:	bl	f548 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_>
     90c:	tbz	w0, #0, 8e0 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0xf8>
     910:	ldr	x22, [x19, x21]
     914:	mov	x0, x20
     918:	mov	x1, x19
     91c:	mov	x2, x21
     920:	bl	0 <memmove>
     924:	str	x22, [x19]
     928:	b	8ec <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x104>
     92c:	cmp	w24, #0x1
     930:	strb	wzr, [sp, #16]
     934:	b.eq	9d0 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x1e8>  // b.none
     938:	lsl	x8, x25, #3
     93c:	mov	x21, xzr
     940:	sub	x22, x8, #0x8
     944:	b	960 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x178>
     948:	mov	x0, x20
     94c:	mov	x1, xzr
     950:	bl	f7c8 <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_>
     954:	add	x21, x21, #0x8
     958:	cmp	x22, x21
     95c:	b.eq	9d0 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x1e8>  // b.none
     960:	add	x24, x19, x21
     964:	add	x20, x24, #0x8
     968:	add	x0, sp, #0x10
     96c:	mov	x1, x20
     970:	mov	x2, x19
     974:	bl	f548 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_>
     978:	tbz	w0, #0, 948 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x160>
     97c:	ldr	x24, [x24, #8]
     980:	subs	x2, x20, x19
     984:	b.eq	99c <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x1b4>  // b.none
     988:	sub	x8, x19, x2
     98c:	add	x8, x8, x21
     990:	add	x0, x8, #0x10
     994:	mov	x1, x19
     998:	bl	0 <memmove>
     99c:	str	x24, [x19]
     9a0:	b	954 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x16c>
     9a4:	cmp	w24, #0x10
     9a8:	b.eq	9d0 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x1e8>  // b.none
     9ac:	lsl	x8, x25, #3
     9b0:	add	x19, x19, #0x80
     9b4:	sub	x20, x8, #0x80
     9b8:	mov	x0, x19
     9bc:	mov	x1, xzr
     9c0:	bl	f7c8 <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_>
     9c4:	subs	x20, x20, #0x8
     9c8:	add	x19, x19, #0x8
     9cc:	b.ne	9b8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x1d0>  // b.any
     9d0:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
     9d4:	ldur	w19, [x29, #-40]
     9d8:	ldr	d0, [x9]
     9dc:	ldur	x20, [x29, #-48]
     9e0:	add	x8, sp, #0x10
     9e4:	add	x8, x8, #0x10
     9e8:	add	x0, sp, #0x10
     9ec:	mov	x1, x19
     9f0:	str	x8, [sp, #16]
     9f4:	str	d0, [sp, #24]
     9f8:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
     9fc:	cbz	w19, a18 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x230>
     a00:	lsl	x19, x19, #3
     a04:	ldr	x1, [x20], #8
     a08:	add	x0, sp, #0x10
     a0c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
     a10:	subs	x19, x19, #0x8
     a14:	b.ne	a04 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x21c>  // b.any
     a18:	add	x19, x23, #0x60
     a1c:	add	x1, sp, #0x10
     a20:	add	x2, sp, #0x8
     a24:	mov	x0, x19
     a28:	str	xzr, [sp, #8]
     a2c:	add	x21, sp, #0x10
     a30:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
     a34:	cbz	x0, a40 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x258>
     a38:	sub	x20, x0, #0x18
     a3c:	b	b4c <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x364>
     a40:	ldur	w8, [x29, #-40]
     a44:	cbz	w8, aec <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x304>
     a48:	ldur	x9, [x29, #-48]
     a4c:	mov	x10, xzr
     a50:	mov	x11, xzr
     a54:	b	a64 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x27c>
     a58:	add	x11, x11, #0x1
     a5c:	cmp	x11, x8
     a60:	b.cs	ab0 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x2c8>  // b.hs, b.nlast
     a64:	cmp	x10, x11
     a68:	b.eq	a58 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x270>  // b.none
     a6c:	cmp	x10, x8
     a70:	b.cs	c00 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x418>  // b.hs, b.nlast
     a74:	cmp	x11, x8
     a78:	b.cs	c00 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x418>  // b.hs, b.nlast
     a7c:	ldr	x13, [x9, x10, lsl #3]
     a80:	ldr	w14, [x13, #96]
     a84:	cbz	w14, a58 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x270>
     a88:	ldr	x12, [x9, x11, lsl #3]
     a8c:	ldr	x13, [x13, #88]
     a90:	add	x14, x14, x14, lsl #1
     a94:	lsl	x14, x14, #3
     a98:	ldr	x15, [x13], #24
     a9c:	cmp	x15, x12
     aa0:	b.eq	b98 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x3b0>  // b.none
     aa4:	subs	x14, x14, #0x18
     aa8:	b.ne	a98 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x2b0>  // b.any
     aac:	b	a58 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x270>
     ab0:	cmp	x10, x8
     ab4:	b.eq	c00 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x418>  // b.none
     ab8:	ldr	x11, [x9]
     abc:	ldr	x12, [x9, x10, lsl #3]
     ac0:	ldr	x11, [x11, #104]
     ac4:	ldr	x12, [x12, #104]
     ac8:	cmp	x11, x12
     acc:	b.ne	c20 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x438>  // b.any
     ad0:	add	w11, w10, #0x1
     ad4:	cmp	w8, w11
     ad8:	add	x10, x10, #0x1
     adc:	b.hi	a50 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x268>  // b.pmore
     ae0:	lsl	x8, x8, #3
     ae4:	add	x1, x8, #0x28
     ae8:	b	af0 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x308>
     aec:	mov	w1, #0x28                  	// #40
     af0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
     af4:	add	x0, x0, #0x0
     af8:	mov	w2, #0x3                   	// #3
     afc:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
     b00:	mov	w9, #0x7                   	// #7
     b04:	stp	xzr, xzr, [x0, #16]
     b08:	str	w9, [x0, #8]
     b0c:	adrp	x9, 240 <_ZN4llvm9BitsRecTy3getEj+0xbc>
     b10:	ldur	w8, [x29, #-40]
     b14:	ldr	x9, [x9]
     b18:	mov	x20, x0
     b1c:	str	w8, [x0, #32]
     b20:	add	x9, x9, #0x10
     b24:	str	x9, [x0]
     b28:	cbz	w8, b3c <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x354>
     b2c:	ldur	x1, [x29, #-48]
     b30:	lsl	x2, x8, #3
     b34:	add	x0, x20, #0x28
     b38:	bl	0 <memmove>
     b3c:	ldr	x2, [sp, #8]
     b40:	add	x1, x20, #0x18
     b44:	mov	x0, x19
     b48:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
     b4c:	ldr	x0, [sp, #16]
     b50:	add	x8, x21, #0x10
     b54:	cmp	x0, x8
     b58:	b.eq	b60 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x378>  // b.none
     b5c:	bl	0 <free>
     b60:	ldur	x0, [x29, #-48]
     b64:	sub	x8, x29, #0x30
     b68:	add	x8, x8, #0x10
     b6c:	cmp	x0, x8
     b70:	b.eq	b78 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x390>  // b.none
     b74:	bl	0 <free>
     b78:	mov	x0, x20
     b7c:	ldp	x20, x19, [sp, #272]
     b80:	ldp	x22, x21, [sp, #256]
     b84:	ldp	x24, x23, [sp, #240]
     b88:	ldp	x28, x25, [sp, #224]
     b8c:	ldp	x29, x30, [sp, #208]
     b90:	add	sp, sp, #0x120
     b94:	ret
     b98:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
     b9c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
     ba0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
     ba4:	add	x0, x0, #0x0
     ba8:	add	x1, x1, #0x0
     bac:	add	x3, x3, #0x0
     bb0:	mov	w2, #0xb7                  	// #183
     bb4:	bl	0 <__assert_fail>
     bb8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
     bbc:	add	x0, x0, #0x0
     bc0:	bl	0 <__cxa_guard_acquire>
     bc4:	adrp	x20, 0 <_ZNK4llvm5RecTy4dumpEv>
     bc8:	add	x20, x20, #0x0
     bcc:	cbz	w0, b78 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x390>
     bd0:	stp	xzr, xzr, [x20, #16]
     bd4:	adrp	x9, 240 <_ZN4llvm9BitsRecTy3getEj+0xbc>
     bd8:	ldr	x9, [x9]
     bdc:	mov	w8, #0x7                   	// #7
     be0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
     be4:	str	w8, [x20, #8]
     be8:	add	x8, x9, #0x10
     bec:	add	x0, x0, #0x0
     bf0:	str	x8, [x20]
     bf4:	str	wzr, [x20, #32]
     bf8:	bl	0 <__cxa_guard_release>
     bfc:	b	b78 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x390>
     c00:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
     c04:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
     c08:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
     c0c:	add	x0, x0, #0x0
     c10:	add	x1, x1, #0x0
     c14:	add	x3, x3, #0x0
     c18:	mov	w2, #0x95                  	// #149
     c1c:	bl	0 <__assert_fail>
     c20:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
     c24:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
     c28:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
     c2c:	add	x0, x0, #0x0
     c30:	add	x1, x1, #0x0
     c34:	add	x3, x3, #0x0
     c38:	mov	w2, #0xb9                  	// #185
     c3c:	bl	0 <__assert_fail>
     c40:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
     c44:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
     c48:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
     c4c:	add	x0, x0, #0x0
     c50:	add	x1, x1, #0x0
     c54:	add	x3, x3, #0x0
     c58:	mov	w2, #0x43                  	// #67
     c5c:	bl	0 <__assert_fail>

0000000000000c60 <_ZNK4llvm11RecordRecTy7ProfileERNS_16FoldingSetNodeIDE>:
     c60:	stp	x29, x30, [sp, #-48]!
     c64:	str	x21, [sp, #16]
     c68:	stp	x20, x19, [sp, #32]
     c6c:	mov	x29, sp
     c70:	ldr	w20, [x0, #32]
     c74:	mov	x21, x0
     c78:	mov	x19, x1
     c7c:	mov	x0, x1
     c80:	mov	x1, x20
     c84:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
     c88:	cbz	w20, ca8 <_ZNK4llvm11RecordRecTy7ProfileERNS_16FoldingSetNodeIDE+0x48>
     c8c:	add	x21, x21, #0x28
     c90:	lsl	x20, x20, #3
     c94:	ldr	x1, [x21], #8
     c98:	mov	x0, x19
     c9c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
     ca0:	subs	x20, x20, #0x8
     ca4:	b.ne	c94 <_ZNK4llvm11RecordRecTy7ProfileERNS_16FoldingSetNodeIDE+0x34>  // b.any
     ca8:	ldp	x20, x19, [sp, #32]
     cac:	ldr	x21, [sp, #16]
     cb0:	ldp	x29, x30, [sp], #48
     cb4:	ret

0000000000000cb8 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev>:
     cb8:	sub	sp, sp, #0x90
     cbc:	stp	x29, x30, [sp, #64]
     cc0:	stp	x26, x25, [sp, #80]
     cc4:	stp	x24, x23, [sp, #96]
     cc8:	stp	x22, x21, [sp, #112]
     ccc:	stp	x20, x19, [sp, #128]
     cd0:	add	x29, sp, #0x40
     cd4:	ldr	w9, [x0, #32]
     cd8:	mov	x19, x8
     cdc:	cmp	w9, #0x1
     ce0:	b.ne	d14 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x5c>  // b.any
     ce4:	ldr	x8, [x0, #40]
     ce8:	ldp	x22, x21, [sp, #112]
     cec:	ldp	x24, x23, [sp, #96]
     cf0:	ldp	x26, x25, [sp, #80]
     cf4:	ldr	x0, [x8]
     cf8:	ldp	x29, x30, [sp, #64]
     cfc:	ldr	x8, [x0]
     d00:	ldr	x1, [x8, #48]
     d04:	mov	x8, x19
     d08:	ldp	x20, x19, [sp, #128]
     d0c:	add	sp, sp, #0x90
     d10:	br	x1
     d14:	add	x8, sp, #0x20
     d18:	mov	w10, #0x7b                  	// #123
     d1c:	mov	w11, #0x1                   	// #1
     d20:	lsl	x22, x9, #3
     d24:	add	x21, x8, #0x10
     d28:	strh	w10, [sp, #48]
     d2c:	stp	x21, x11, [sp, #32]
     d30:	cbz	x22, dd0 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x118>
     d34:	mov	x9, sp
     d38:	adrp	x20, 0 <_ZNK4llvm5RecTy4dumpEv>
     d3c:	add	x23, x0, #0x28
     d40:	mov	w8, #0x1                   	// #1
     d44:	mov	x24, #0x3fffffffffffffff    	// #4611686018427387903
     d48:	add	x25, x9, #0x10
     d4c:	add	x20, x20, #0x0
     d50:	b	d64 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0xac>
     d54:	mov	w8, wzr
     d58:	subs	x22, x22, #0x8
     d5c:	add	x23, x23, #0x8
     d60:	b.eq	dc0 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x108>  // b.none
     d64:	ldr	x26, [x23]
     d68:	tbnz	w8, #0, d8c <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0xd4>
     d6c:	ldr	x8, [sp, #40]
     d70:	orr	x8, x8, #0x1
     d74:	cmp	x8, x24
     d78:	b.eq	e34 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x17c>  // b.none
     d7c:	add	x0, sp, #0x20
     d80:	mov	w2, #0x2                   	// #2
     d84:	mov	x1, x20
     d88:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
     d8c:	ldr	x0, [x26]
     d90:	ldr	x8, [x0]
     d94:	ldr	x9, [x8, #48]
     d98:	mov	x8, sp
     d9c:	blr	x9
     da0:	ldp	x1, x2, [sp]
     da4:	add	x0, sp, #0x20
     da8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
     dac:	ldr	x0, [sp]
     db0:	cmp	x0, x25
     db4:	b.eq	d54 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x9c>  // b.none
     db8:	bl	0 <_ZdlPv>
     dbc:	b	d54 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x9c>
     dc0:	ldr	x8, [sp, #40]
     dc4:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
     dc8:	cmp	x8, x9
     dcc:	b.eq	e34 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x17c>  // b.none
     dd0:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
     dd4:	add	x1, x1, #0x0
     dd8:	add	x0, sp, #0x20
     ddc:	mov	w2, #0x1                   	// #1
     de0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
     de4:	ldr	x9, [sp, #32]
     de8:	add	x8, x19, #0x10
     dec:	str	x8, [x19]
     df0:	cmp	x9, x21
     df4:	b.eq	e08 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x150>  // b.none
     df8:	ldr	x8, [sp, #48]
     dfc:	str	x9, [x19]
     e00:	str	x8, [x19, #16]
     e04:	b	e10 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x158>
     e08:	ldr	q0, [x21]
     e0c:	str	q0, [x8]
     e10:	ldr	x8, [sp, #40]
     e14:	str	x8, [x19, #8]
     e18:	ldp	x20, x19, [sp, #128]
     e1c:	ldp	x22, x21, [sp, #112]
     e20:	ldp	x24, x23, [sp, #96]
     e24:	ldp	x26, x25, [sp, #80]
     e28:	ldp	x29, x30, [sp, #64]
     e2c:	add	sp, sp, #0x90
     e30:	ret
     e34:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
     e38:	add	x0, x0, #0x0
     e3c:	bl	0 <_ZSt20__throw_length_errorPKc>

0000000000000e40 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE>:
     e40:	ldr	w11, [x0, #32]
     e44:	add	x8, x0, #0x28
     e48:	lsl	x10, x11, #3
     e4c:	cmp	w11, #0x4
     e50:	add	x9, x8, x10
     e54:	b.cc	f3c <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0xfc>  // b.lo, b.ul, b.last
     e58:	lsr	x10, x11, #2
     e5c:	ldr	x11, [x8]
     e60:	cmp	x11, x1
     e64:	b.eq	1018 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1d8>  // b.none
     e68:	ldr	w12, [x11, #96]
     e6c:	cbz	w12, e90 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x50>
     e70:	ldr	x11, [x11, #88]
     e74:	add	x12, x12, x12, lsl #1
     e78:	lsl	x12, x12, #3
     e7c:	ldr	x13, [x11], #24
     e80:	cmp	x13, x1
     e84:	b.eq	1018 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1d8>  // b.none
     e88:	subs	x12, x12, #0x18
     e8c:	b.ne	e7c <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x3c>  // b.any
     e90:	ldr	x11, [x8, #8]
     e94:	cmp	x11, x1
     e98:	b.eq	1004 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1c4>  // b.none
     e9c:	ldr	w12, [x11, #96]
     ea0:	cbz	w12, ec4 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x84>
     ea4:	ldr	x11, [x11, #88]
     ea8:	add	x12, x12, x12, lsl #1
     eac:	lsl	x12, x12, #3
     eb0:	ldr	x13, [x11], #24
     eb4:	cmp	x13, x1
     eb8:	b.eq	1004 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1c4>  // b.none
     ebc:	subs	x12, x12, #0x18
     ec0:	b.ne	eb0 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x70>  // b.any
     ec4:	ldr	x11, [x8, #16]
     ec8:	cmp	x11, x1
     ecc:	b.eq	100c <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1cc>  // b.none
     ed0:	ldr	w12, [x11, #96]
     ed4:	cbz	w12, ef8 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0xb8>
     ed8:	ldr	x11, [x11, #88]
     edc:	add	x12, x12, x12, lsl #1
     ee0:	lsl	x12, x12, #3
     ee4:	ldr	x13, [x11], #24
     ee8:	cmp	x13, x1
     eec:	b.eq	100c <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1cc>  // b.none
     ef0:	subs	x12, x12, #0x18
     ef4:	b.ne	ee4 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0xa4>  // b.any
     ef8:	ldr	x11, [x8, #24]
     efc:	cmp	x11, x1
     f00:	b.eq	1014 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1d4>  // b.none
     f04:	ldr	w12, [x11, #96]
     f08:	cbz	w12, f2c <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0xec>
     f0c:	ldr	x11, [x11, #88]
     f10:	add	x12, x12, x12, lsl #1
     f14:	lsl	x12, x12, #3
     f18:	ldr	x13, [x11], #24
     f1c:	cmp	x13, x1
     f20:	b.eq	1014 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1d4>  // b.none
     f24:	subs	x12, x12, #0x18
     f28:	b.ne	f18 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0xd8>  // b.any
     f2c:	subs	x10, x10, #0x1
     f30:	add	x8, x8, #0x20
     f34:	b.gt	e5c <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1c>
     f38:	sub	x10, x9, x8
     f3c:	asr	x10, x10, #3
     f40:	cmp	x10, #0x1
     f44:	b.eq	fc8 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x188>  // b.none
     f48:	cmp	x10, #0x2
     f4c:	b.eq	f90 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x150>  // b.none
     f50:	cmp	x10, #0x3
     f54:	b.ne	ffc <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1bc>  // b.any
     f58:	ldr	x10, [x8]
     f5c:	cmp	x10, x1
     f60:	b.eq	1018 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1d8>  // b.none
     f64:	ldr	w11, [x10, #96]
     f68:	cbz	w11, f8c <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x14c>
     f6c:	ldr	x10, [x10, #88]
     f70:	add	x11, x11, x11, lsl #1
     f74:	lsl	x11, x11, #3
     f78:	ldr	x12, [x10], #24
     f7c:	cmp	x12, x1
     f80:	b.eq	1018 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1d8>  // b.none
     f84:	subs	x11, x11, #0x18
     f88:	b.ne	f78 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x138>  // b.any
     f8c:	add	x8, x8, #0x8
     f90:	ldr	x10, [x8]
     f94:	cmp	x10, x1
     f98:	b.eq	1018 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1d8>  // b.none
     f9c:	ldr	w11, [x10, #96]
     fa0:	cbz	w11, fc4 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x184>
     fa4:	ldr	x10, [x10, #88]
     fa8:	add	x11, x11, x11, lsl #1
     fac:	lsl	x11, x11, #3
     fb0:	ldr	x12, [x10], #24
     fb4:	cmp	x12, x1
     fb8:	b.eq	1018 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1d8>  // b.none
     fbc:	subs	x11, x11, #0x18
     fc0:	b.ne	fb0 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x170>  // b.any
     fc4:	add	x8, x8, #0x8
     fc8:	ldr	x10, [x8]
     fcc:	cmp	x10, x1
     fd0:	b.eq	1018 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1d8>  // b.none
     fd4:	ldr	w11, [x10, #96]
     fd8:	cbz	w11, ffc <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1bc>
     fdc:	ldr	x10, [x10, #88]
     fe0:	add	x11, x11, x11, lsl #1
     fe4:	lsl	x11, x11, #3
     fe8:	ldr	x12, [x10], #24
     fec:	cmp	x12, x1
     ff0:	b.eq	1018 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1d8>  // b.none
     ff4:	subs	x11, x11, #0x18
     ff8:	b.ne	fe8 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1a8>  // b.any
     ffc:	mov	x8, x9
    1000:	b	1018 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1d8>
    1004:	add	x8, x8, #0x8
    1008:	b	1018 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1d8>
    100c:	add	x8, x8, #0x10
    1010:	b	1018 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1d8>
    1014:	add	x8, x8, #0x18
    1018:	cmp	x8, x9
    101c:	cset	w0, ne  // ne = any
    1020:	ret

0000000000001024 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE>:
    1024:	stp	x29, x30, [sp, #-48]!
    1028:	stp	x22, x21, [sp, #16]
    102c:	stp	x20, x19, [sp, #32]
    1030:	mov	x29, sp
    1034:	cmp	x0, x1
    1038:	b.eq	1128 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x104>  // b.none
    103c:	cbz	x1, 1164 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x140>
    1040:	ldr	w8, [x1, #8]
    1044:	cmp	w8, #0x7
    1048:	b.ne	1130 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x10c>  // b.any
    104c:	ldr	w9, [x1, #32]
    1050:	add	x21, x1, #0x28
    1054:	mov	x19, x0
    1058:	lsl	x8, x9, #3
    105c:	cmp	w9, #0x4
    1060:	add	x20, x21, x8
    1064:	b.cc	10cc <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0xa8>  // b.lo, b.ul, b.last
    1068:	lsr	x8, x9, #2
    106c:	add	x22, x8, #0x1
    1070:	add	x21, x1, #0x40
    1074:	ldur	x1, [x21, #-24]
    1078:	mov	x0, x19
    107c:	bl	e40 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE>
    1080:	tbz	w0, #0, 1138 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x114>
    1084:	ldur	x1, [x21, #-16]
    1088:	mov	x0, x19
    108c:	bl	e40 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE>
    1090:	tbz	w0, #0, 1140 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x11c>
    1094:	ldur	x1, [x21, #-8]
    1098:	mov	x0, x19
    109c:	bl	e40 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE>
    10a0:	tbz	w0, #0, 1148 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x124>
    10a4:	ldr	x1, [x21]
    10a8:	mov	x0, x19
    10ac:	bl	e40 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE>
    10b0:	tbz	w0, #0, 114c <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x128>
    10b4:	sub	x22, x22, #0x1
    10b8:	cmp	x22, #0x1
    10bc:	add	x21, x21, #0x20
    10c0:	b.gt	1074 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x50>
    10c4:	sub	x21, x21, #0x18
    10c8:	sub	x8, x20, x21
    10cc:	asr	x8, x8, #3
    10d0:	cmp	x8, #0x1
    10d4:	b.eq	1110 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0xec>  // b.none
    10d8:	cmp	x8, #0x2
    10dc:	b.eq	10fc <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0xd8>  // b.none
    10e0:	cmp	x8, #0x3
    10e4:	b.ne	1120 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0xfc>  // b.any
    10e8:	ldr	x1, [x21]
    10ec:	mov	x0, x19
    10f0:	bl	e40 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE>
    10f4:	tbz	w0, #0, 114c <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x128>
    10f8:	add	x21, x21, #0x8
    10fc:	ldr	x1, [x21]
    1100:	mov	x0, x19
    1104:	bl	e40 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE>
    1108:	tbz	w0, #0, 114c <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x128>
    110c:	add	x21, x21, #0x8
    1110:	ldr	x1, [x21]
    1114:	mov	x0, x19
    1118:	bl	e40 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE>
    111c:	tbz	w0, #0, 114c <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x128>
    1120:	mov	x21, x20
    1124:	b	114c <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x128>
    1128:	mov	w0, #0x1                   	// #1
    112c:	b	1154 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x130>
    1130:	mov	w0, wzr
    1134:	b	1154 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x130>
    1138:	sub	x21, x21, #0x18
    113c:	b	114c <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x128>
    1140:	sub	x21, x21, #0x10
    1144:	b	114c <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x128>
    1148:	sub	x21, x21, #0x8
    114c:	cmp	x21, x20
    1150:	cset	w0, eq  // eq = none
    1154:	ldp	x20, x19, [sp, #32]
    1158:	ldp	x22, x21, [sp, #16]
    115c:	ldp	x29, x30, [sp], #48
    1160:	ret
    1164:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    1168:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    116c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    1170:	add	x0, x0, #0x0
    1174:	add	x1, x1, #0x0
    1178:	add	x3, x3, #0x0
    117c:	mov	w2, #0x69                  	// #105
    1180:	bl	0 <__assert_fail>

0000000000001184 <_ZNK4llvm11RecordRecTy7typeIsAEPKNS_5RecTyE>:
    1184:	b	1024 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE>

0000000000001188 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_>:
    1188:	sub	sp, sp, #0x90
    118c:	stp	x29, x30, [sp, #96]
    1190:	stp	x22, x21, [sp, #112]
    1194:	stp	x20, x19, [sp, #128]
    1198:	add	x29, sp, #0x60
    119c:	mov	x20, x0
    11a0:	cmp	x0, x1
    11a4:	b.eq	1398 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x210>  // b.none
    11a8:	cbz	x20, 13d0 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x248>
    11ac:	ldr	w8, [x20, #8]
    11b0:	mov	x19, x1
    11b4:	cmp	w8, #0x7
    11b8:	b.ne	12ec <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x164>  // b.any
    11bc:	cbz	x19, 13d0 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x248>
    11c0:	ldr	w8, [x19, #8]
    11c4:	cmp	w8, #0x7
    11c8:	b.ne	12ec <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x164>  // b.any
    11cc:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    11d0:	ldr	d0, [x9]
    11d4:	add	x8, sp, #0x30
    11d8:	mov	x10, sp
    11dc:	add	x22, x8, #0x10
    11e0:	add	x21, x10, #0x10
    11e4:	str	x22, [sp, #48]
    11e8:	str	x21, [sp]
    11ec:	str	d0, [sp, #56]
    11f0:	str	d0, [sp, #8]
    11f4:	ldr	w8, [x20, #32]
    11f8:	add	x2, x20, #0x28
    11fc:	mov	x0, sp
    1200:	mov	x1, x21
    1204:	add	x3, x2, x8, lsl #3
    1208:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    120c:	ldr	w8, [sp, #8]
    1210:	cbnz	w8, 1268 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0xe0>
    1214:	ldr	x0, [sp, #48]
    1218:	ldr	w1, [sp, #56]
    121c:	bl	7e8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE>
    1220:	ldr	x8, [sp]
    1224:	mov	x20, x0
    1228:	cmp	x8, x21
    122c:	b.eq	1238 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0xb0>  // b.none
    1230:	mov	x0, x8
    1234:	bl	0 <free>
    1238:	ldr	x0, [sp, #48]
    123c:	add	x8, sp, #0x30
    1240:	add	x8, x8, #0x10
    1244:	cmp	x0, x8
    1248:	b.eq	1398 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x210>  // b.none
    124c:	bl	0 <free>
    1250:	b	1398 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x210>
    1254:	mov	x1, sp
    1258:	mov	x0, x20
    125c:	bl	c9e0 <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE>
    1260:	ldr	w8, [sp, #8]
    1264:	cbz	w8, 1214 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x8c>
    1268:	ldr	w10, [sp, #12]
    126c:	mov	w9, w8
    1270:	sub	x9, x9, #0x1
    1274:	cmp	x9, x10
    1278:	b.hi	13b0 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x228>  // b.pmore
    127c:	ldr	x10, [sp]
    1280:	mov	x0, x19
    1284:	add	x8, x10, w8, uxtw #3
    1288:	ldur	x20, [x8, #-8]
    128c:	str	w9, [sp, #8]
    1290:	mov	x1, x20
    1294:	bl	e40 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE>
    1298:	tbz	w0, #0, 1254 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0xcc>
    129c:	ldp	w8, w9, [sp, #56]
    12a0:	cmp	w8, w9
    12a4:	b.cs	12d0 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x148>  // b.hs, b.nlast
    12a8:	ldr	x9, [sp, #48]
    12ac:	str	x20, [x9, w8, uxtw #3]
    12b0:	ldp	w8, w9, [sp, #56]
    12b4:	cmp	w8, w9
    12b8:	b.cs	13b0 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x228>  // b.hs, b.nlast
    12bc:	add	w8, w8, #0x1
    12c0:	str	w8, [sp, #56]
    12c4:	ldr	w8, [sp, #8]
    12c8:	cbnz	w8, 1268 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0xe0>
    12cc:	b	1214 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x8c>
    12d0:	add	x0, sp, #0x30
    12d4:	mov	w3, #0x8                   	// #8
    12d8:	mov	x1, x22
    12dc:	mov	x2, xzr
    12e0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    12e4:	ldr	w8, [sp, #56]
    12e8:	b	12a8 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x120>
    12ec:	ldr	x8, [x20]
    12f0:	mov	x0, x20
    12f4:	mov	x1, x19
    12f8:	ldr	x8, [x8, #24]
    12fc:	blr	x8
    1300:	tbz	w0, #0, 130c <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x184>
    1304:	mov	x20, x19
    1308:	b	1398 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x210>
    130c:	ldr	x8, [x19]
    1310:	mov	x0, x19
    1314:	mov	x1, x20
    1318:	ldr	x8, [x8, #24]
    131c:	blr	x8
    1320:	tbnz	w0, #0, 1398 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x210>
    1324:	ldr	w8, [x20, #8]
    1328:	cmp	w8, #0x5
    132c:	b.ne	1394 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x20c>  // b.any
    1330:	ldr	w8, [x19, #8]
    1334:	cmp	w8, #0x5
    1338:	b.ne	1394 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x20c>  // b.any
    133c:	ldr	x0, [x20, #24]
    1340:	ldr	x1, [x19, #24]
    1344:	bl	1188 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_>
    1348:	cbz	x0, 1394 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x20c>
    134c:	ldr	x20, [x0, #16]
    1350:	mov	x19, x0
    1354:	cbnz	x20, 1398 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x210>
    1358:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    135c:	add	x0, x0, #0x0
    1360:	mov	w1, #0x20                  	// #32
    1364:	mov	w2, #0x4                   	// #4
    1368:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    136c:	adrp	x9, 1d0 <_ZN4llvm9BitsRecTy3getEj+0x4c>
    1370:	ldr	x9, [x9]
    1374:	mov	w8, #0x5                   	// #5
    1378:	mov	x20, x0
    137c:	str	w8, [x0, #8]
    1380:	add	x8, x9, #0x10
    1384:	stp	xzr, x19, [x0, #16]
    1388:	str	x8, [x0]
    138c:	str	x0, [x19, #16]
    1390:	b	1398 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x210>
    1394:	mov	x20, xzr
    1398:	mov	x0, x20
    139c:	ldp	x20, x19, [sp, #128]
    13a0:	ldp	x22, x21, [sp, #112]
    13a4:	ldp	x29, x30, [sp, #96]
    13a8:	add	sp, sp, #0x90
    13ac:	ret
    13b0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    13b4:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    13b8:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    13bc:	add	x0, x0, #0x0
    13c0:	add	x1, x1, #0x0
    13c4:	add	x3, x3, #0x0
    13c8:	mov	w2, #0x43                  	// #67
    13cc:	bl	0 <__assert_fail>
    13d0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    13d4:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    13d8:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    13dc:	add	x0, x0, #0x0
    13e0:	add	x1, x1, #0x0
    13e4:	add	x3, x3, #0x0
    13e8:	mov	w2, #0x69                  	// #105
    13ec:	bl	0 <__assert_fail>

00000000000013f0 <_ZN4llvm4Init6anchorEv>:
    13f0:	ret

00000000000013f4 <_ZNK4llvm4Init4dumpEv>:
    13f4:	sub	sp, sp, #0x50
    13f8:	stp	x29, x30, [sp, #32]
    13fc:	str	x21, [sp, #48]
    1400:	stp	x20, x19, [sp, #64]
    1404:	add	x29, sp, #0x20
    1408:	mov	x19, x0
    140c:	bl	0 <_ZN4llvm4errsEv>
    1410:	ldr	x8, [x19]
    1414:	mov	x20, x0
    1418:	mov	x0, x19
    141c:	mov	x21, sp
    1420:	ldr	x9, [x8, #40]
    1424:	mov	x8, sp
    1428:	blr	x9
    142c:	ldp	x1, x2, [sp]
    1430:	mov	x0, x20
    1434:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1438:	ldr	x0, [sp]
    143c:	add	x8, x21, #0x10
    1440:	cmp	x0, x8
    1444:	b.eq	144c <_ZNK4llvm4Init4dumpEv+0x58>  // b.none
    1448:	bl	0 <_ZdlPv>
    144c:	ldp	x20, x19, [sp, #64]
    1450:	ldr	x21, [sp, #48]
    1454:	ldp	x29, x30, [sp, #32]
    1458:	add	sp, sp, #0x50
    145c:	ret

0000000000001460 <_ZN4llvm9UnsetInit3getEv>:
    1460:	stp	x29, x30, [sp, #-16]!
    1464:	mov	x29, sp
    1468:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    146c:	add	x8, x8, #0x0
    1470:	ldarb	w8, [x8]
    1474:	tbz	w8, #0, 1488 <_ZN4llvm9UnsetInit3getEv+0x28>
    1478:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    147c:	add	x0, x0, #0x0
    1480:	ldp	x29, x30, [sp], #16
    1484:	ret
    1488:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    148c:	add	x0, x0, #0x0
    1490:	bl	0 <__cxa_guard_acquire>
    1494:	cbz	w0, 1478 <_ZN4llvm9UnsetInit3getEv+0x18>
    1498:	adrp	x10, 378 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0xe8>
    149c:	ldr	x10, [x10]
    14a0:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    14a4:	add	x8, x8, #0x0
    14a8:	mov	w9, #0x18                  	// #24
    14ac:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    14b0:	strh	w9, [x8, #8]
    14b4:	add	x9, x10, #0x10
    14b8:	add	x0, x0, #0x0
    14bc:	str	x9, [x8]
    14c0:	bl	0 <__cxa_guard_release>
    14c4:	b	1478 <_ZN4llvm9UnsetInit3getEv+0x18>

00000000000014c8 <_ZNK4llvm9UnsetInit9getCastToEPNS_5RecTyE>:
    14c8:	ret

00000000000014cc <_ZNK4llvm9UnsetInit20convertInitializerToEPNS_5RecTyE>:
    14cc:	ret

00000000000014d0 <_ZN4llvm7BitInit3getEb>:
    14d0:	sub	sp, sp, #0x20
    14d4:	stp	x29, x30, [sp, #16]
    14d8:	add	x29, sp, #0x10
    14dc:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    14e0:	add	x8, x8, #0x0
    14e4:	ldarb	w8, [x8]
    14e8:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    14ec:	add	x9, x9, #0x0
    14f0:	tbz	w8, #0, 1520 <_ZN4llvm7BitInit3getEb+0x50>
    14f4:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    14f8:	add	x8, x8, #0x0
    14fc:	ldarb	w8, [x8]
    1500:	adrp	x10, 0 <_ZNK4llvm5RecTy4dumpEv>
    1504:	add	x10, x10, #0x0
    1508:	tbz	w8, #0, 1590 <_ZN4llvm7BitInit3getEb+0xc0>
    150c:	ldp	x29, x30, [sp, #16]
    1510:	tst	w0, #0x1
    1514:	csel	x0, x9, x10, ne  // ne = any
    1518:	add	sp, sp, #0x20
    151c:	ret
    1520:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    1524:	add	x8, x8, #0x0
    1528:	stur	w0, [x29, #-4]
    152c:	mov	x0, x8
    1530:	bl	0 <__cxa_guard_acquire>
    1534:	mov	w8, w0
    1538:	ldur	w0, [x29, #-4]
    153c:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    1540:	add	x9, x9, #0x0
    1544:	cbz	w8, 14f4 <_ZN4llvm7BitInit3getEb+0x24>
    1548:	adrp	x10, 88 <_ZN4llvm5RecTy9getListTyEv+0x1c>
    154c:	adrp	x11, 3f8 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x168>
    1550:	ldr	x10, [x10]
    1554:	ldr	x11, [x11]
    1558:	mov	w8, #0x2                   	// #2
    155c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    1560:	mov	w12, #0x1                   	// #1
    1564:	strh	w8, [x9, #8]
    1568:	add	x8, x11, #0x10
    156c:	add	x0, x0, #0x0
    1570:	str	x10, [x9, #16]
    1574:	str	x8, [x9]
    1578:	strb	w12, [x9, #24]
    157c:	bl	0 <__cxa_guard_release>
    1580:	ldur	w0, [x29, #-4]
    1584:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    1588:	add	x9, x9, #0x0
    158c:	b	14f4 <_ZN4llvm7BitInit3getEb+0x24>
    1590:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    1594:	add	x8, x8, #0x0
    1598:	stur	w0, [x29, #-4]
    159c:	mov	x0, x8
    15a0:	bl	0 <__cxa_guard_acquire>
    15a4:	mov	w8, w0
    15a8:	ldur	w0, [x29, #-4]
    15ac:	adrp	x10, 0 <_ZNK4llvm5RecTy4dumpEv>
    15b0:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    15b4:	add	x10, x10, #0x0
    15b8:	add	x9, x9, #0x0
    15bc:	cbz	w8, 150c <_ZN4llvm7BitInit3getEb+0x3c>
    15c0:	adrp	x9, 88 <_ZN4llvm5RecTy9getListTyEv+0x1c>
    15c4:	adrp	x11, 3f8 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x168>
    15c8:	ldr	x9, [x9]
    15cc:	ldr	x11, [x11]
    15d0:	mov	w8, #0x2                   	// #2
    15d4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    15d8:	strh	w8, [x10, #8]
    15dc:	add	x8, x11, #0x10
    15e0:	add	x0, x0, #0x0
    15e4:	str	x9, [x10, #16]
    15e8:	str	x8, [x10]
    15ec:	strb	wzr, [x10, #24]
    15f0:	bl	0 <__cxa_guard_release>
    15f4:	ldur	w0, [x29, #-4]
    15f8:	adrp	x10, 0 <_ZNK4llvm5RecTy4dumpEv>
    15fc:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    1600:	add	x10, x10, #0x0
    1604:	add	x9, x9, #0x0
    1608:	b	150c <_ZN4llvm7BitInit3getEb+0x3c>

000000000000160c <_ZNK4llvm7BitInit20convertInitializerToEPNS_5RecTyE>:
    160c:	sub	sp, sp, #0x20
    1610:	stp	x29, x30, [sp, #16]
    1614:	add	x29, sp, #0x10
    1618:	cbz	x1, 1678 <_ZNK4llvm7BitInit20convertInitializerToEPNS_5RecTyE+0x6c>
    161c:	ldr	w8, [x1, #8]
    1620:	cmp	w8, #0x3
    1624:	b.eq	1668 <_ZNK4llvm7BitInit20convertInitializerToEPNS_5RecTyE+0x5c>  // b.none
    1628:	cmp	w8, #0x1
    162c:	b.eq	1638 <_ZNK4llvm7BitInit20convertInitializerToEPNS_5RecTyE+0x2c>  // b.none
    1630:	cbz	w8, 165c <_ZNK4llvm7BitInit20convertInitializerToEPNS_5RecTyE+0x50>
    1634:	b	1658 <_ZNK4llvm7BitInit20convertInitializerToEPNS_5RecTyE+0x4c>
    1638:	ldr	w8, [x1, #24]
    163c:	cmp	w8, #0x1
    1640:	b.ne	1658 <_ZNK4llvm7BitInit20convertInitializerToEPNS_5RecTyE+0x4c>  // b.any
    1644:	str	x0, [sp, #8]
    1648:	add	x0, sp, #0x8
    164c:	mov	w1, #0x1                   	// #1
    1650:	bl	176c <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    1654:	b	165c <_ZNK4llvm7BitInit20convertInitializerToEPNS_5RecTyE+0x50>
    1658:	mov	x0, xzr
    165c:	ldp	x29, x30, [sp, #16]
    1660:	add	sp, sp, #0x20
    1664:	ret
    1668:	ldrb	w0, [x0, #24]
    166c:	ldp	x29, x30, [sp, #16]
    1670:	add	sp, sp, #0x20
    1674:	b	1698 <_ZN4llvm7IntInit3getEl>
    1678:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    167c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    1680:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    1684:	add	x0, x0, #0x0
    1688:	add	x1, x1, #0x0
    168c:	add	x3, x3, #0x0
    1690:	mov	w2, #0x69                  	// #105
    1694:	bl	0 <__assert_fail>

0000000000001698 <_ZN4llvm7IntInit3getEl>:
    1698:	stp	x29, x30, [sp, #-32]!
    169c:	str	x19, [sp, #16]
    16a0:	mov	x29, sp
    16a4:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    16a8:	str	x0, [x29, #24]
    16ac:	add	x8, x8, #0x0
    16b0:	ldarb	w8, [x8]
    16b4:	tbz	w8, #0, 1720 <_ZN4llvm7IntInit3getEl+0x88>
    16b8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    16bc:	add	x0, x0, #0x0
    16c0:	add	x1, x29, #0x18
    16c4:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    16c8:	mov	x19, x0
    16cc:	ldr	x0, [x0]
    16d0:	cbnz	x0, 1714 <_ZN4llvm7IntInit3getEl+0x7c>
    16d4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    16d8:	add	x0, x0, #0x0
    16dc:	mov	w1, #0x20                  	// #32
    16e0:	mov	w2, #0x4                   	// #4
    16e4:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    16e8:	adrp	x10, b8 <_ZN4llvm5RecTy9getListTyEv+0x4c>
    16ec:	adrp	x11, 4f8 <_ZNK4llvm9BitsRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x8c>
    16f0:	ldr	x8, [x29, #24]
    16f4:	ldr	x10, [x10]
    16f8:	ldr	x11, [x11]
    16fc:	mov	w9, #0x8                   	// #8
    1700:	strh	w9, [x0, #8]
    1704:	stp	x10, x8, [x0, #16]
    1708:	add	x9, x11, #0x10
    170c:	str	x9, [x0]
    1710:	str	x0, [x19]
    1714:	ldr	x19, [sp, #16]
    1718:	ldp	x29, x30, [sp], #32
    171c:	ret
    1720:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    1724:	add	x0, x0, #0x0
    1728:	bl	0 <__cxa_guard_acquire>
    172c:	cbz	w0, 16b8 <_ZN4llvm7IntInit3getEl+0x20>
    1730:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    1734:	add	x1, x1, #0x0
    1738:	mov	x8, x1
    173c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    1740:	adrp	x2, 0 <__dso_handle>
    1744:	str	wzr, [x8, #8]!
    1748:	add	x0, x0, #0x0
    174c:	add	x2, x2, #0x0
    1750:	stp	xzr, x8, [x1, #16]
    1754:	stp	x8, xzr, [x1, #32]
    1758:	bl	0 <__cxa_atexit>
    175c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    1760:	add	x0, x0, #0x0
    1764:	bl	0 <__cxa_guard_release>
    1768:	b	16b8 <_ZN4llvm7IntInit3getEl+0x20>

000000000000176c <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>:
    176c:	sub	sp, sp, #0xe0
    1770:	stp	x29, x30, [sp, #160]
    1774:	stp	x24, x23, [sp, #176]
    1778:	stp	x22, x21, [sp, #192]
    177c:	stp	x20, x19, [sp, #208]
    1780:	add	x29, sp, #0xa0
    1784:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    1788:	add	x8, x8, #0x0
    178c:	ldarb	w8, [x8]
    1790:	mov	x20, x1
    1794:	mov	x19, x0
    1798:	tbz	w8, #0, 18b0 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE+0x144>
    179c:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    17a0:	ldr	d0, [x8]
    17a4:	add	x8, sp, #0x10
    17a8:	add	x8, x8, #0x10
    17ac:	add	x0, sp, #0x10
    17b0:	mov	x1, x20
    17b4:	str	x8, [sp, #16]
    17b8:	str	d0, [sp, #24]
    17bc:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
    17c0:	lsl	x21, x20, #3
    17c4:	cbz	x20, 17e4 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE+0x78>
    17c8:	mov	x22, x21
    17cc:	mov	x23, x19
    17d0:	ldr	x1, [x23], #8
    17d4:	add	x0, sp, #0x10
    17d8:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    17dc:	subs	x22, x22, #0x8
    17e0:	b.ne	17d0 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE+0x64>  // b.any
    17e4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    17e8:	add	x0, x0, #0x0
    17ec:	add	x1, sp, #0x10
    17f0:	add	x2, sp, #0x8
    17f4:	str	xzr, [sp, #8]
    17f8:	add	x23, sp, #0x10
    17fc:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    1800:	cbz	x0, 180c <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE+0xa0>
    1804:	sub	x21, x0, #0x18
    1808:	b	1880 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE+0x114>
    180c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    1810:	add	x1, x21, #0x28
    1814:	add	x0, x0, #0x0
    1818:	mov	w2, #0x3                   	// #3
    181c:	add	x24, x19, x20, lsl #3
    1820:	mov	w22, #0x3                   	// #3
    1824:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    1828:	mov	x21, x0
    182c:	mov	w0, w20
    1830:	bl	184 <_ZN4llvm9BitsRecTy3getEj>
    1834:	strh	w22, [x21, #8]
    1838:	str	x0, [x21, #16]
    183c:	adrp	x8, 478 <_ZNK4llvm9BitsRecTy19typeIsConvertibleToEPKNS_5RecTyE+0xc>
    1840:	ldr	x8, [x8]
    1844:	mov	x22, x21
    1848:	subs	x2, x24, x19
    184c:	str	xzr, [x22, #24]!
    1850:	add	x8, x8, #0x10
    1854:	str	x8, [x21]
    1858:	str	w20, [x21, #32]
    185c:	b.eq	186c <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE+0x100>  // b.none
    1860:	add	x0, x21, #0x28
    1864:	mov	x1, x19
    1868:	bl	0 <memmove>
    186c:	ldr	x2, [sp, #8]
    1870:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    1874:	add	x0, x0, #0x0
    1878:	mov	x1, x22
    187c:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    1880:	ldr	x0, [sp, #16]
    1884:	add	x8, x23, #0x10
    1888:	cmp	x0, x8
    188c:	b.eq	1894 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE+0x128>  // b.none
    1890:	bl	0 <free>
    1894:	mov	x0, x21
    1898:	ldp	x20, x19, [sp, #208]
    189c:	ldp	x22, x21, [sp, #192]
    18a0:	ldp	x24, x23, [sp, #176]
    18a4:	ldp	x29, x30, [sp, #160]
    18a8:	add	sp, sp, #0xe0
    18ac:	ret
    18b0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    18b4:	add	x0, x0, #0x0
    18b8:	bl	0 <__cxa_guard_acquire>
    18bc:	cbz	w0, 179c <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE+0x30>
    18c0:	adrp	x21, 0 <_ZNK4llvm5RecTy4dumpEv>
    18c4:	add	x21, x21, #0x0
    18c8:	mov	w1, #0x6                   	// #6
    18cc:	mov	x0, x21
    18d0:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    18d4:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    18d8:	ldr	x8, [x8]
    18dc:	adrp	x0, 0 <_ZN4llvm14FoldingSetBaseD2Ev>
    18e0:	adrp	x2, 0 <__dso_handle>
    18e4:	add	x2, x2, #0x0
    18e8:	add	x8, x8, #0x10
    18ec:	str	x8, [x21]
    18f0:	ldr	x0, [x0]
    18f4:	mov	x1, x21
    18f8:	bl	0 <__cxa_atexit>
    18fc:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    1900:	add	x0, x0, #0x0
    1904:	bl	0 <__cxa_guard_release>
    1908:	b	179c <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE+0x30>

000000000000190c <_ZNK4llvm8BitsInit7ProfileERNS_16FoldingSetNodeIDE>:
    190c:	stp	x29, x30, [sp, #-48]!
    1910:	str	x21, [sp, #16]
    1914:	stp	x20, x19, [sp, #32]
    1918:	mov	x29, sp
    191c:	ldr	w20, [x0, #32]
    1920:	mov	x21, x0
    1924:	mov	x19, x1
    1928:	mov	x0, x1
    192c:	mov	x1, x20
    1930:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
    1934:	cbz	w20, 1954 <_ZNK4llvm8BitsInit7ProfileERNS_16FoldingSetNodeIDE+0x48>
    1938:	add	x21, x21, #0x28
    193c:	lsl	x20, x20, #3
    1940:	ldr	x1, [x21], #8
    1944:	mov	x0, x19
    1948:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    194c:	subs	x20, x20, #0x8
    1950:	b.ne	1940 <_ZNK4llvm8BitsInit7ProfileERNS_16FoldingSetNodeIDE+0x34>  // b.any
    1954:	ldp	x20, x19, [sp, #32]
    1958:	ldr	x21, [sp, #16]
    195c:	ldp	x29, x30, [sp], #48
    1960:	ret

0000000000001964 <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE>:
    1964:	stp	x29, x30, [sp, #-16]!
    1968:	mov	x29, sp
    196c:	cbz	x1, 1a40 <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0xdc>
    1970:	ldr	w9, [x1, #8]
    1974:	mov	x8, x0
    1978:	cmp	w9, #0x3
    197c:	b.eq	19bc <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0x58>  // b.none
    1980:	cmp	w9, #0x1
    1984:	b.eq	19a4 <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0x40>  // b.none
    1988:	cbnz	w9, 1a08 <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0xa4>
    198c:	ldr	w9, [x8, #32]
    1990:	cmp	w9, #0x1
    1994:	b.ne	1a08 <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0xa4>  // b.any
    1998:	ldr	x0, [x8, #40]
    199c:	ldp	x29, x30, [sp], #16
    19a0:	ret
    19a4:	ldr	w9, [x8, #32]
    19a8:	ldr	w10, [x1, #24]
    19ac:	cmp	w9, w10
    19b0:	csel	x0, x8, xzr, eq  // eq = none
    19b4:	ldp	x29, x30, [sp], #16
    19b8:	ret
    19bc:	ldr	w9, [x8, #32]
    19c0:	cbz	w9, 1a14 <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0xb0>
    19c4:	mov	w10, wzr
    19c8:	mov	x0, xzr
    19cc:	add	x8, x8, #0x28
    19d0:	ldr	x11, [x8, w10, uxtw #3]
    19d4:	cbz	x11, 1a20 <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0xbc>
    19d8:	ldrb	w12, [x11, #8]
    19dc:	cmp	w12, #0x2
    19e0:	b.ne	1a08 <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0xa4>  // b.any
    19e4:	ldrb	w11, [x11, #24]
    19e8:	mov	w12, w10
    19ec:	add	w10, w12, #0x1
    19f0:	cmp	w9, w10
    19f4:	lsl	x11, x11, x12
    19f8:	orr	x0, x11, x0
    19fc:	b.ne	19d0 <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0x6c>  // b.any
    1a00:	ldp	x29, x30, [sp], #16
    1a04:	b	1698 <_ZN4llvm7IntInit3getEl>
    1a08:	mov	x0, xzr
    1a0c:	ldp	x29, x30, [sp], #16
    1a10:	ret
    1a14:	mov	x0, xzr
    1a18:	ldp	x29, x30, [sp], #16
    1a1c:	b	1698 <_ZN4llvm7IntInit3getEl>
    1a20:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    1a24:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    1a28:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    1a2c:	add	x0, x0, #0x0
    1a30:	add	x1, x1, #0x0
    1a34:	add	x3, x3, #0x0
    1a38:	mov	w2, #0x69                  	// #105
    1a3c:	bl	0 <__assert_fail>
    1a40:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    1a44:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    1a48:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    1a4c:	add	x0, x0, #0x0
    1a50:	add	x1, x1, #0x0
    1a54:	add	x3, x3, #0x0
    1a58:	mov	w2, #0x69                  	// #105
    1a5c:	bl	0 <__assert_fail>

0000000000001a60 <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE>:
    1a60:	sub	sp, sp, #0xc0
    1a64:	stp	x29, x30, [sp, #144]
    1a68:	str	x21, [sp, #160]
    1a6c:	stp	x20, x19, [sp, #176]
    1a70:	add	x29, sp, #0x90
    1a74:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    1a78:	ldr	d0, [x9]
    1a7c:	mov	x8, sp
    1a80:	mov	x19, x2
    1a84:	mov	x20, x1
    1a88:	mov	x21, x0
    1a8c:	add	x1, x8, #0x10
    1a90:	cmp	x2, #0x11
    1a94:	str	x1, [sp]
    1a98:	str	d0, [sp, #8]
    1a9c:	b.cc	1ab8 <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x58>  // b.lo, b.ul, b.last
    1aa0:	mov	x0, sp
    1aa4:	mov	w3, #0x8                   	// #8
    1aa8:	mov	x2, x19
    1aac:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1ab0:	ldr	w8, [sp, #12]
    1ab4:	b	1abc <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x5c>
    1ab8:	mov	w8, #0x10                  	// #16
    1abc:	cmp	x8, x19
    1ac0:	b.cc	1bbc <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x15c>  // b.lo, b.ul, b.last
    1ac4:	ands	x8, x19, #0xffffffff
    1ac8:	str	w19, [sp, #8]
    1acc:	b.eq	1ae0 <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x80>  // b.none
    1ad0:	ldr	x0, [sp]
    1ad4:	lsl	x2, x8, #3
    1ad8:	mov	w1, wzr
    1adc:	bl	0 <memset>
    1ae0:	cbz	w19, 1b30 <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xd0>
    1ae4:	ldr	w8, [sp, #8]
    1ae8:	mov	w11, wzr
    1aec:	add	x9, x21, #0x28
    1af0:	mov	w10, w11
    1af4:	cmp	x19, x10
    1af8:	b.ls	1b7c <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x11c>  // b.plast
    1afc:	ldr	w11, [x20, x10, lsl #2]
    1b00:	ldr	w12, [x21, #32]
    1b04:	cmp	w11, w12
    1b08:	b.cs	1b48 <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xe8>  // b.hs, b.nlast
    1b0c:	cmp	w8, w10
    1b10:	b.eq	1b9c <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x13c>  // b.none
    1b14:	ldr	x12, [x9, x11, lsl #3]
    1b18:	ldr	x13, [sp]
    1b1c:	add	w11, w10, #0x1
    1b20:	cmp	w19, w11
    1b24:	str	x12, [x13, x10, lsl #3]
    1b28:	b.ne	1af0 <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x90>  // b.any
    1b2c:	b	1b34 <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xd4>
    1b30:	ldr	w8, [sp, #8]
    1b34:	ldr	x0, [sp]
    1b38:	mov	w1, w8
    1b3c:	bl	176c <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    1b40:	mov	x19, x0
    1b44:	b	1b4c <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xec>
    1b48:	mov	x19, xzr
    1b4c:	ldr	x0, [sp]
    1b50:	mov	x8, sp
    1b54:	add	x8, x8, #0x10
    1b58:	cmp	x0, x8
    1b5c:	b.eq	1b64 <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x104>  // b.none
    1b60:	bl	0 <free>
    1b64:	mov	x0, x19
    1b68:	ldp	x20, x19, [sp, #176]
    1b6c:	ldr	x21, [sp, #160]
    1b70:	ldp	x29, x30, [sp, #144]
    1b74:	add	sp, sp, #0xc0
    1b78:	ret
    1b7c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    1b80:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    1b84:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    1b88:	add	x0, x0, #0x0
    1b8c:	add	x1, x1, #0x0
    1b90:	add	x3, x3, #0x0
    1b94:	mov	w2, #0xfa                  	// #250
    1b98:	bl	0 <__assert_fail>
    1b9c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    1ba0:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    1ba4:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    1ba8:	add	x0, x0, #0x0
    1bac:	add	x1, x1, #0x0
    1bb0:	add	x3, x3, #0x0
    1bb4:	mov	w2, #0x95                  	// #149
    1bb8:	bl	0 <__assert_fail>
    1bbc:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    1bc0:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    1bc4:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    1bc8:	add	x0, x0, #0x0
    1bcc:	add	x1, x1, #0x0
    1bd0:	add	x3, x3, #0x0
    1bd4:	mov	w2, #0x43                  	// #67
    1bd8:	bl	0 <__assert_fail>

0000000000001bdc <_ZNK4llvm8BitsInit10isConcreteEv>:
    1bdc:	stp	x29, x30, [sp, #-48]!
    1be0:	stp	x22, x21, [sp, #16]
    1be4:	stp	x20, x19, [sp, #32]
    1be8:	mov	x29, sp
    1bec:	ldr	w8, [x0, #32]
    1bf0:	cbz	w8, 1c50 <_ZNK4llvm8BitsInit10isConcreteEv+0x74>
    1bf4:	mov	x19, x0
    1bf8:	mov	x20, xzr
    1bfc:	add	x21, x0, #0x28
    1c00:	sub	x22, x8, #0x1
    1c04:	ldr	x0, [x21, x20, lsl #3]
    1c08:	ldr	x8, [x0]
    1c0c:	ldr	x8, [x8, #32]
    1c10:	blr	x8
    1c14:	tbz	w0, #0, 1c58 <_ZNK4llvm8BitsInit10isConcreteEv+0x7c>
    1c18:	cmp	x22, x20
    1c1c:	b.eq	1c50 <_ZNK4llvm8BitsInit10isConcreteEv+0x74>  // b.none
    1c20:	ldr	w8, [x19, #32]
    1c24:	add	x20, x20, #0x1
    1c28:	cmp	x20, x8
    1c2c:	b.cc	1c04 <_ZNK4llvm8BitsInit10isConcreteEv+0x28>  // b.lo, b.ul, b.last
    1c30:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    1c34:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    1c38:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    1c3c:	add	x0, x0, #0x0
    1c40:	add	x1, x1, #0x0
    1c44:	add	x3, x3, #0x0
    1c48:	mov	w2, #0x22e                 	// #558
    1c4c:	bl	0 <__assert_fail>
    1c50:	mov	w0, #0x1                   	// #1
    1c54:	b	1c5c <_ZNK4llvm8BitsInit10isConcreteEv+0x80>
    1c58:	mov	w0, wzr
    1c5c:	ldp	x20, x19, [sp, #32]
    1c60:	ldp	x22, x21, [sp, #16]
    1c64:	ldp	x29, x30, [sp], #48
    1c68:	ret

0000000000001c6c <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev>:
    1c6c:	sub	sp, sp, #0xb0
    1c70:	stp	x29, x30, [sp, #80]
    1c74:	stp	x28, x27, [sp, #96]
    1c78:	stp	x26, x25, [sp, #112]
    1c7c:	stp	x24, x23, [sp, #128]
    1c80:	stp	x22, x21, [sp, #144]
    1c84:	stp	x20, x19, [sp, #160]
    1c88:	add	x29, sp, #0x50
    1c8c:	sub	x9, x29, #0x20
    1c90:	mov	w10, #0x207b                	// #8315
    1c94:	mov	w11, #0x2                   	// #2
    1c98:	add	x22, x9, #0x10
    1c9c:	sturh	w10, [x29, #-16]
    1ca0:	stp	x22, x11, [x29, #-32]
    1ca4:	sturb	wzr, [x29, #-14]
    1ca8:	ldr	w9, [x0, #32]
    1cac:	mov	x19, x8
    1cb0:	cbz	w9, 1ddc <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x170>
    1cb4:	str	x22, [sp, #8]
    1cb8:	add	x8, sp, #0x10
    1cbc:	adrp	x21, 0 <_ZNK4llvm5RecTy4dumpEv>
    1cc0:	adrp	x22, 0 <_ZNK4llvm5RecTy4dumpEv>
    1cc4:	mov	x20, x0
    1cc8:	mov	x24, xzr
    1ccc:	add	x25, x0, #0x28
    1cd0:	neg	x26, x9
    1cd4:	sub	w27, w9, #0x1
    1cd8:	mov	x28, #0x3fffffffffffffff    	// #4611686018427387903
    1cdc:	add	x21, x21, #0x0
    1ce0:	add	x23, x8, #0x10
    1ce4:	add	x22, x22, #0x0
    1ce8:	b	1cf8 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x8c>
    1cec:	sub	x24, x24, #0x1
    1cf0:	cmp	x26, x24
    1cf4:	b.eq	1d84 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x118>  // b.none
    1cf8:	cbz	x24, 1d1c <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0xb0>
    1cfc:	ldur	x8, [x29, #-24]
    1d00:	orr	x8, x8, #0x1
    1d04:	cmp	x8, x28
    1d08:	b.eq	1e64 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x1f8>  // b.none
    1d0c:	sub	x0, x29, #0x20
    1d10:	mov	w2, #0x2                   	// #2
    1d14:	mov	x1, x22
    1d18:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    1d1c:	ldr	w9, [x20, #32]
    1d20:	add	x8, x27, x24
    1d24:	cmp	w9, w8
    1d28:	b.ls	1e70 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x204>  // b.plast
    1d2c:	ldr	x0, [x25, w8, uxtw #3]
    1d30:	cbz	x0, 1d64 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0xf8>
    1d34:	ldr	x8, [x0]
    1d38:	ldr	x9, [x8, #40]
    1d3c:	add	x8, sp, #0x10
    1d40:	blr	x9
    1d44:	ldp	x1, x2, [sp, #16]
    1d48:	sub	x0, x29, #0x20
    1d4c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    1d50:	ldr	x0, [sp, #16]
    1d54:	cmp	x0, x23
    1d58:	b.eq	1cec <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x80>  // b.none
    1d5c:	bl	0 <_ZdlPv>
    1d60:	b	1cec <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x80>
    1d64:	ldur	x8, [x29, #-24]
    1d68:	cmp	x8, x28
    1d6c:	b.eq	1e64 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x1f8>  // b.none
    1d70:	sub	x0, x29, #0x20
    1d74:	mov	w2, #0x1                   	// #1
    1d78:	mov	x1, x21
    1d7c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    1d80:	b	1cec <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x80>
    1d84:	ldp	x21, x20, [x29, #-32]
    1d88:	add	x0, x19, #0x10
    1d8c:	str	x0, [x19]
    1d90:	cbnz	x21, 1d98 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x12c>
    1d94:	cbnz	x20, 1e90 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x224>
    1d98:	ldr	x22, [sp, #8]
    1d9c:	cmp	x20, #0x10
    1da0:	str	x20, [sp, #16]
    1da4:	b.cc	1dc4 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x158>  // b.lo, b.ul, b.last
    1da8:	add	x1, sp, #0x10
    1dac:	mov	x0, x19
    1db0:	mov	x2, xzr
    1db4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    1db8:	ldr	x8, [sp, #16]
    1dbc:	str	x0, [x19]
    1dc0:	str	x8, [x19, #16]
    1dc4:	cbz	x20, 1dfc <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x190>
    1dc8:	cmp	x20, #0x1
    1dcc:	b.ne	1df0 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x184>  // b.any
    1dd0:	ldrb	w8, [x21]
    1dd4:	strb	w8, [x0]
    1dd8:	b	1dfc <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x190>
    1ddc:	add	x0, x19, #0x10
    1de0:	mov	w20, #0x2                   	// #2
    1de4:	mov	x21, x22
    1de8:	str	x0, [x19]
    1dec:	str	x20, [sp, #16]
    1df0:	mov	x1, x21
    1df4:	mov	x2, x20
    1df8:	bl	0 <memcpy>
    1dfc:	ldr	x8, [sp, #16]
    1e00:	ldr	x9, [x19]
    1e04:	str	x8, [x19, #8]
    1e08:	strb	wzr, [x9, x8]
    1e0c:	ldr	x8, [x19, #8]
    1e10:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    1e14:	orr	x8, x8, #0x1
    1e18:	cmp	x8, x9
    1e1c:	b.eq	1e64 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x1f8>  // b.none
    1e20:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    1e24:	add	x1, x1, #0x0
    1e28:	mov	w2, #0x2                   	// #2
    1e2c:	mov	x0, x19
    1e30:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    1e34:	ldur	x0, [x29, #-32]
    1e38:	cmp	x0, x22
    1e3c:	b.eq	1e44 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x1d8>  // b.none
    1e40:	bl	0 <_ZdlPv>
    1e44:	ldp	x20, x19, [sp, #160]
    1e48:	ldp	x22, x21, [sp, #144]
    1e4c:	ldp	x24, x23, [sp, #128]
    1e50:	ldp	x26, x25, [sp, #112]
    1e54:	ldp	x28, x27, [sp, #96]
    1e58:	ldp	x29, x30, [sp, #80]
    1e5c:	add	sp, sp, #0xb0
    1e60:	ret
    1e64:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    1e68:	add	x0, x0, #0x0
    1e6c:	bl	0 <_ZSt20__throw_length_errorPKc>
    1e70:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    1e74:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    1e78:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    1e7c:	add	x0, x0, #0x0
    1e80:	add	x1, x1, #0x0
    1e84:	add	x3, x3, #0x0
    1e88:	mov	w2, #0x22e                 	// #558
    1e8c:	bl	0 <__assert_fail>
    1e90:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    1e94:	add	x0, x0, #0x0
    1e98:	bl	0 <_ZSt19__throw_logic_errorPKc>

0000000000001e9c <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE>:
    1e9c:	sub	sp, sp, #0xf0
    1ea0:	stp	x29, x30, [sp, #144]
    1ea4:	str	x27, [sp, #160]
    1ea8:	stp	x26, x25, [sp, #176]
    1eac:	stp	x24, x23, [sp, #192]
    1eb0:	stp	x22, x21, [sp, #208]
    1eb4:	stp	x20, x19, [sp, #224]
    1eb8:	add	x29, sp, #0x90
    1ebc:	ldr	w21, [x0, #32]
    1ec0:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    1ec4:	ldr	d0, [x9]
    1ec8:	mov	x8, sp
    1ecc:	mov	x20, x1
    1ed0:	mov	x19, x0
    1ed4:	add	x1, x8, #0x10
    1ed8:	cmp	w21, #0x11
    1edc:	str	x1, [sp]
    1ee0:	str	d0, [sp, #8]
    1ee4:	b.cc	1f00 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x64>  // b.lo, b.ul, b.last
    1ee8:	mov	x0, sp
    1eec:	mov	w3, #0x8                   	// #8
    1ef0:	mov	x2, x21
    1ef4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1ef8:	ldr	w8, [sp, #12]
    1efc:	b	1f04 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x68>
    1f00:	mov	w8, #0x10                  	// #16
    1f04:	cmp	x8, x21
    1f08:	b.cc	2108 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x26c>  // b.lo, b.ul, b.last
    1f0c:	str	w21, [sp, #8]
    1f10:	cbz	w21, 1f24 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x88>
    1f14:	ldr	x0, [sp]
    1f18:	lsl	x2, x21, #3
    1f1c:	mov	w1, wzr
    1f20:	bl	0 <memset>
    1f24:	ldr	w8, [x19, #32]
    1f28:	cbz	w8, 204c <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x1b0>
    1f2c:	mov	x21, xzr
    1f30:	mov	x27, xzr
    1f34:	mov	w24, wzr
    1f38:	mov	x25, xzr
    1f3c:	sub	x26, x8, #0x1
    1f40:	add	x8, x19, x25, lsl #3
    1f44:	ldr	x22, [x8, #40]
    1f48:	cbz	x22, 2088 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x1ec>
    1f4c:	ldrb	w8, [x22, #8]
    1f50:	cmp	w8, #0x15
    1f54:	b.ne	1f94 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0xf8>  // b.any
    1f58:	ldr	x23, [x22, #24]
    1f5c:	cmp	x23, x27
    1f60:	b.eq	1f80 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0xe4>  // b.none
    1f64:	ldr	x8, [x23]
    1f68:	mov	x0, x23
    1f6c:	mov	x1, x20
    1f70:	ldr	x8, [x8, #96]
    1f74:	blr	x8
    1f78:	mov	x21, x0
    1f7c:	mov	x27, x23
    1f80:	cbz	x21, 20e8 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x24c>
    1f84:	ldr	x8, [x21]
    1f88:	ldr	w1, [x22, #32]
    1f8c:	mov	x0, x21
    1f90:	b	1fb0 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x114>
    1f94:	ldr	x8, [x22]
    1f98:	mov	x0, x22
    1f9c:	mov	x1, x20
    1fa0:	ldr	x8, [x8, #96]
    1fa4:	blr	x8
    1fa8:	ldr	x8, [x0]
    1fac:	mov	w1, wzr
    1fb0:	ldr	x8, [x8, #104]
    1fb4:	blr	x8
    1fb8:	mov	x23, x0
    1fbc:	cbz	x0, 20a8 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x20c>
    1fc0:	ldrb	w8, [x23, #8]
    1fc4:	cmp	w8, #0x18
    1fc8:	b.ne	1fe4 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x148>  // b.any
    1fcc:	ldr	x8, [x20]
    1fd0:	mov	x0, x20
    1fd4:	ldr	x8, [x8, #24]
    1fd8:	blr	x8
    1fdc:	tst	w0, #0x1
    1fe0:	csel	x23, x22, x23, ne  // ne = any
    1fe4:	ldr	w1, [sp, #8]
    1fe8:	cmp	x25, x1
    1fec:	b.cs	20c8 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x22c>  // b.hs, b.nlast
    1ff0:	ldr	x8, [sp]
    1ff4:	cmp	x22, x23
    1ff8:	cset	w9, ne  // ne = any
    1ffc:	cmp	x26, x25
    2000:	orr	w24, w24, w9
    2004:	str	x23, [x8, x25, lsl #3]
    2008:	b.eq	203c <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x1a0>  // b.none
    200c:	ldr	w8, [x19, #32]
    2010:	add	x25, x25, #0x1
    2014:	cmp	x25, x8
    2018:	b.cc	1f40 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0xa4>  // b.lo, b.ul, b.last
    201c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2020:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    2024:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    2028:	add	x0, x0, #0x0
    202c:	add	x1, x1, #0x0
    2030:	add	x3, x3, #0x0
    2034:	mov	w2, #0x22e                 	// #558
    2038:	bl	0 <__assert_fail>
    203c:	tbz	w24, #0, 204c <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x1b0>
    2040:	ldr	x0, [sp]
    2044:	bl	176c <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    2048:	mov	x19, x0
    204c:	ldr	x0, [sp]
    2050:	mov	x8, sp
    2054:	add	x8, x8, #0x10
    2058:	cmp	x0, x8
    205c:	b.eq	2064 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x1c8>  // b.none
    2060:	bl	0 <free>
    2064:	mov	x0, x19
    2068:	ldp	x20, x19, [sp, #224]
    206c:	ldp	x22, x21, [sp, #208]
    2070:	ldp	x24, x23, [sp, #192]
    2074:	ldp	x26, x25, [sp, #176]
    2078:	ldr	x27, [sp, #160]
    207c:	ldp	x29, x30, [sp, #144]
    2080:	add	sp, sp, #0xf0
    2084:	ret
    2088:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    208c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    2090:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    2094:	add	x0, x0, #0x0
    2098:	add	x1, x1, #0x0
    209c:	add	x3, x3, #0x0
    20a0:	mov	w2, #0x69                  	// #105
    20a4:	bl	0 <__assert_fail>
    20a8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    20ac:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    20b0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    20b4:	add	x0, x0, #0x0
    20b8:	add	x1, x1, #0x0
    20bc:	add	x3, x3, #0x0
    20c0:	mov	w2, #0x69                  	// #105
    20c4:	bl	0 <__assert_fail>
    20c8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    20cc:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    20d0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    20d4:	add	x0, x0, #0x0
    20d8:	add	x1, x1, #0x0
    20dc:	add	x3, x3, #0x0
    20e0:	mov	w2, #0x95                  	// #149
    20e4:	bl	0 <__assert_fail>
    20e8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    20ec:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    20f0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    20f4:	add	x0, x0, #0x0
    20f8:	add	x1, x1, #0x0
    20fc:	add	x3, x3, #0x0
    2100:	mov	w2, #0x1b9                 	// #441
    2104:	bl	0 <__assert_fail>
    2108:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    210c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    2110:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    2114:	add	x0, x0, #0x0
    2118:	add	x1, x1, #0x0
    211c:	add	x3, x3, #0x0
    2120:	mov	w2, #0x43                  	// #67
    2124:	bl	0 <__assert_fail>

0000000000002128 <_ZNK4llvm7IntInit11getAsStringB5cxx11Ev>:
    2128:	ldr	x0, [x0, #24]
    212c:	b	0 <_ZNK4llvm5RecTy4dumpEv>

0000000000002130 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE>:
    2130:	sub	sp, sp, #0xd0
    2134:	stp	x29, x30, [sp, #160]
    2138:	str	x21, [sp, #176]
    213c:	stp	x20, x19, [sp, #192]
    2140:	add	x29, sp, #0xa0
    2144:	cbz	x1, 2504 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x3d4>
    2148:	ldr	w8, [x1, #8]
    214c:	mov	x19, x1
    2150:	mov	x21, x0
    2154:	cbz	w8, 21cc <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x9c>
    2158:	cmp	w8, #0x1
    215c:	b.eq	216c <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x3c>  // b.none
    2160:	cmp	w8, #0x3
    2164:	b.eq	2428 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x2f8>  // b.none
    2168:	b	21d8 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0xa8>
    216c:	ldr	w20, [x19, #24]
    2170:	ldr	x21, [x21, #24]
    2174:	cmp	w20, #0x3f
    2178:	b.hi	2194 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x64>  // b.pmore
    217c:	asr	x8, x21, x20
    2180:	cbz	x8, 2194 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x64>
    2184:	sub	w8, w20, #0x1
    2188:	asr	x8, x21, x8
    218c:	cmn	x8, #0x1
    2190:	b.ne	21d8 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0xa8>  // b.any
    2194:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    2198:	ldr	d0, [x9]
    219c:	add	x8, sp, #0x10
    21a0:	add	x1, x8, #0x10
    21a4:	cmp	w20, #0x11
    21a8:	str	x1, [sp, #16]
    21ac:	str	d0, [sp, #24]
    21b0:	b.cc	221c <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0xec>  // b.lo, b.ul, b.last
    21b4:	add	x0, sp, #0x10
    21b8:	mov	w3, #0x8                   	// #8
    21bc:	mov	x2, x20
    21c0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    21c4:	ldr	w8, [sp, #28]
    21c8:	b	2220 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0xf0>
    21cc:	ldr	x19, [x21, #24]
    21d0:	cmp	x19, #0x1
    21d4:	b.ls	21e0 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0xb0>  // b.plast
    21d8:	mov	x21, xzr
    21dc:	b	2428 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x2f8>
    21e0:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    21e4:	add	x8, x8, #0x0
    21e8:	ldarb	w8, [x8]
    21ec:	tbz	w8, #0, 2440 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x310>
    21f0:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    21f4:	add	x8, x8, #0x0
    21f8:	ldarb	w8, [x8]
    21fc:	tbz	w8, #0, 2494 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x364>
    2200:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    2204:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    2208:	add	x8, x8, #0x0
    220c:	add	x9, x9, #0x0
    2210:	cmp	x19, #0x0
    2214:	csel	x21, x9, x8, eq  // eq = none
    2218:	b	2428 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x2f8>
    221c:	mov	w8, #0x10                  	// #16
    2220:	cmp	x8, x20
    2224:	b.cc	2524 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x3f4>  // b.lo, b.ul, b.last
    2228:	str	w20, [sp, #24]
    222c:	cbz	w20, 2240 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x110>
    2230:	ldr	x0, [sp, #16]
    2234:	lsl	x2, x20, #3
    2238:	mov	w1, wzr
    223c:	bl	0 <memset>
    2240:	ldr	w8, [x19, #24]
    2244:	cbz	w8, 23f8 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x2c8>
    2248:	adrp	x10, 3f8 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x168>
    224c:	ldr	x10, [x10]
    2250:	adrp	x15, 0 <_ZNK4llvm5RecTy4dumpEv>
    2254:	adrp	x12, 0 <_ZNK4llvm5RecTy4dumpEv>
    2258:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    225c:	add	x14, x10, #0x10
    2260:	adrp	x10, 0 <_ZNK4llvm5RecTy4dumpEv>
    2264:	mov	x8, xzr
    2268:	mov	w9, #0x1                   	// #1
    226c:	add	x15, x15, #0x0
    2270:	add	x12, x12, #0x0
    2274:	add	x11, x11, #0x0
    2278:	add	x10, x10, #0x0
    227c:	ldarb	w13, [x15]
    2280:	lsl	x16, x9, x8
    2284:	cmp	w8, #0x40
    2288:	csel	x17, x16, xzr, cc  // cc = lo, ul, last
    228c:	tbz	w13, #0, 22cc <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x19c>
    2290:	ldarb	w13, [x11]
    2294:	tbz	w13, #0, 235c <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x22c>
    2298:	ldr	w18, [sp, #24]
    229c:	cmp	w18, w8
    22a0:	b.ls	24e4 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x3b4>  // b.plast
    22a4:	ldr	x13, [sp, #16]
    22a8:	and	x16, x17, x21
    22ac:	cmp	x16, #0x0
    22b0:	csel	x16, x10, x12, eq  // eq = none
    22b4:	str	x16, [x13, x8, lsl #3]
    22b8:	ldr	w13, [x19, #24]
    22bc:	add	x8, x8, #0x1
    22c0:	cmp	w8, w13
    22c4:	b.ne	227c <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x14c>  // b.any
    22c8:	b	23fc <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x2cc>
    22cc:	mov	x0, x15
    22d0:	mov	x20, x15
    22d4:	stp	x8, x14, [sp]
    22d8:	str	x17, [x29, #24]
    22dc:	bl	0 <__cxa_guard_acquire>
    22e0:	adrp	x13, 88 <_ZN4llvm5RecTy9getListTyEv+0x1c>
    22e4:	ldr	x17, [x29, #24]
    22e8:	ldp	x8, x14, [sp]
    22ec:	ldr	x13, [x13]
    22f0:	adrp	x10, 0 <_ZNK4llvm5RecTy4dumpEv>
    22f4:	adrp	x12, 0 <_ZNK4llvm5RecTy4dumpEv>
    22f8:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    22fc:	add	x10, x10, #0x0
    2300:	mov	w16, #0x2                   	// #2
    2304:	add	x12, x12, #0x0
    2308:	mov	w9, #0x1                   	// #1
    230c:	add	x11, x11, #0x0
    2310:	mov	x15, x20
    2314:	cbz	w0, 2290 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x160>
    2318:	mov	x0, x20
    231c:	strh	w16, [x12, #8]
    2320:	str	x13, [x12, #16]
    2324:	str	x14, [x12]
    2328:	strb	w9, [x12, #24]
    232c:	bl	0 <__cxa_guard_release>
    2330:	ldr	x17, [x29, #24]
    2334:	ldp	x8, x14, [sp]
    2338:	adrp	x10, 0 <_ZNK4llvm5RecTy4dumpEv>
    233c:	adrp	x12, 0 <_ZNK4llvm5RecTy4dumpEv>
    2340:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    2344:	add	x10, x10, #0x0
    2348:	add	x12, x12, #0x0
    234c:	mov	w9, #0x1                   	// #1
    2350:	add	x11, x11, #0x0
    2354:	mov	x15, x20
    2358:	b	2290 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x160>
    235c:	mov	x0, x11
    2360:	mov	x20, x11
    2364:	stp	x8, x14, [sp]
    2368:	str	x17, [x29, #24]
    236c:	bl	0 <__cxa_guard_acquire>
    2370:	adrp	x13, 3f8 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x168>
    2374:	adrp	x16, 88 <_ZN4llvm5RecTy9getListTyEv+0x1c>
    2378:	ldr	x17, [x29, #24]
    237c:	ldp	x8, x14, [sp]
    2380:	ldr	x13, [x13]
    2384:	ldr	x16, [x16]
    2388:	adrp	x10, 0 <_ZNK4llvm5RecTy4dumpEv>
    238c:	adrp	x12, 0 <_ZNK4llvm5RecTy4dumpEv>
    2390:	adrp	x15, 0 <_ZNK4llvm5RecTy4dumpEv>
    2394:	add	x10, x10, #0x0
    2398:	mov	w18, #0x2                   	// #2
    239c:	add	x12, x12, #0x0
    23a0:	mov	w9, #0x1                   	// #1
    23a4:	mov	x11, x20
    23a8:	add	x15, x15, #0x0
    23ac:	cbz	w0, 2298 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x168>
    23b0:	add	x8, x13, #0x10
    23b4:	mov	x0, x20
    23b8:	strh	w18, [x10, #8]
    23bc:	str	x16, [x10, #16]
    23c0:	str	x8, [x10]
    23c4:	strb	wzr, [x10, #24]
    23c8:	bl	0 <__cxa_guard_release>
    23cc:	ldr	x17, [x29, #24]
    23d0:	ldp	x8, x14, [sp]
    23d4:	adrp	x10, 0 <_ZNK4llvm5RecTy4dumpEv>
    23d8:	adrp	x12, 0 <_ZNK4llvm5RecTy4dumpEv>
    23dc:	adrp	x15, 0 <_ZNK4llvm5RecTy4dumpEv>
    23e0:	add	x10, x10, #0x0
    23e4:	add	x12, x12, #0x0
    23e8:	mov	w9, #0x1                   	// #1
    23ec:	mov	x11, x20
    23f0:	add	x15, x15, #0x0
    23f4:	b	2298 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x168>
    23f8:	ldr	w18, [sp, #24]
    23fc:	ldr	x0, [sp, #16]
    2400:	mov	w1, w18
    2404:	bl	176c <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    2408:	ldr	x8, [sp, #16]
    240c:	add	x9, sp, #0x10
    2410:	add	x9, x9, #0x10
    2414:	mov	x21, x0
    2418:	cmp	x8, x9
    241c:	b.eq	2428 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x2f8>  // b.none
    2420:	mov	x0, x8
    2424:	bl	0 <free>
    2428:	mov	x0, x21
    242c:	ldp	x20, x19, [sp, #192]
    2430:	ldr	x21, [sp, #176]
    2434:	ldp	x29, x30, [sp, #160]
    2438:	add	sp, sp, #0xd0
    243c:	ret
    2440:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2444:	add	x0, x0, #0x0
    2448:	bl	0 <__cxa_guard_acquire>
    244c:	cbz	w0, 21f0 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0xc0>
    2450:	adrp	x10, 88 <_ZN4llvm5RecTy9getListTyEv+0x1c>
    2454:	adrp	x11, 3f8 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x168>
    2458:	ldr	x10, [x10]
    245c:	ldr	x11, [x11]
    2460:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    2464:	add	x8, x8, #0x0
    2468:	mov	w9, #0x2                   	// #2
    246c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2470:	mov	w12, #0x1                   	// #1
    2474:	strh	w9, [x8, #8]
    2478:	add	x9, x11, #0x10
    247c:	add	x0, x0, #0x0
    2480:	str	x10, [x8, #16]
    2484:	str	x9, [x8]
    2488:	strb	w12, [x8, #24]
    248c:	bl	0 <__cxa_guard_release>
    2490:	b	21f0 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0xc0>
    2494:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2498:	add	x0, x0, #0x0
    249c:	bl	0 <__cxa_guard_acquire>
    24a0:	cbz	w0, 2200 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0xd0>
    24a4:	adrp	x10, 88 <_ZN4llvm5RecTy9getListTyEv+0x1c>
    24a8:	adrp	x11, 3f8 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x168>
    24ac:	ldr	x10, [x10]
    24b0:	ldr	x11, [x11]
    24b4:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    24b8:	add	x8, x8, #0x0
    24bc:	mov	w9, #0x2                   	// #2
    24c0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    24c4:	strh	w9, [x8, #8]
    24c8:	add	x9, x11, #0x10
    24cc:	add	x0, x0, #0x0
    24d0:	str	x10, [x8, #16]
    24d4:	str	x9, [x8]
    24d8:	strb	wzr, [x8, #24]
    24dc:	bl	0 <__cxa_guard_release>
    24e0:	b	2200 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0xd0>
    24e4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    24e8:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    24ec:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    24f0:	add	x0, x0, #0x0
    24f4:	add	x1, x1, #0x0
    24f8:	add	x3, x3, #0x0
    24fc:	mov	w2, #0x95                  	// #149
    2500:	bl	0 <__assert_fail>
    2504:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2508:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    250c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    2510:	add	x0, x0, #0x0
    2514:	add	x1, x1, #0x0
    2518:	add	x3, x3, #0x0
    251c:	mov	w2, #0x69                  	// #105
    2520:	bl	0 <__assert_fail>
    2524:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2528:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    252c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    2530:	add	x0, x0, #0x0
    2534:	add	x1, x1, #0x0
    2538:	add	x3, x3, #0x0
    253c:	mov	w2, #0x43                  	// #67
    2540:	bl	0 <__assert_fail>

0000000000002544 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE>:
    2544:	sub	sp, sp, #0xe0
    2548:	stp	x29, x30, [sp, #176]
    254c:	str	x21, [sp, #192]
    2550:	stp	x20, x19, [sp, #208]
    2554:	add	x29, sp, #0xb0
    2558:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    255c:	ldr	d0, [x9]
    2560:	add	x8, sp, #0x20
    2564:	mov	x19, x2
    2568:	mov	x20, x1
    256c:	mov	x21, x0
    2570:	add	x1, x8, #0x10
    2574:	cmp	x2, #0x11
    2578:	str	x1, [sp, #32]
    257c:	str	d0, [sp, #40]
    2580:	b.cc	259c <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x58>  // b.lo, b.ul, b.last
    2584:	add	x0, sp, #0x20
    2588:	mov	w3, #0x8                   	// #8
    258c:	mov	x2, x19
    2590:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2594:	ldr	w8, [sp, #44]
    2598:	b	25a0 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x5c>
    259c:	mov	w8, #0x10                  	// #16
    25a0:	cmp	x8, x19
    25a4:	b.cc	2840 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x2fc>  // b.lo, b.ul, b.last
    25a8:	ands	x8, x19, #0xffffffff
    25ac:	str	w19, [sp, #40]
    25b0:	b.eq	25c4 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x80>  // b.none
    25b4:	ldr	x0, [sp, #32]
    25b8:	lsl	x2, x8, #3
    25bc:	mov	w1, wzr
    25c0:	bl	0 <memset>
    25c4:	cbz	w19, 27b4 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x270>
    25c8:	adrp	x9, 3f8 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x168>
    25cc:	ldr	x9, [x9]
    25d0:	adrp	x12, 0 <_ZNK4llvm5RecTy4dumpEv>
    25d4:	adrp	x10, 0 <_ZNK4llvm5RecTy4dumpEv>
    25d8:	adrp	x13, 0 <_ZNK4llvm5RecTy4dumpEv>
    25dc:	add	x11, x9, #0x10
    25e0:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    25e4:	mov	x8, xzr
    25e8:	mov	w14, #0x1                   	// #1
    25ec:	add	x12, x12, #0x0
    25f0:	add	x10, x10, #0x0
    25f4:	add	x13, x13, #0x0
    25f8:	add	x9, x9, #0x0
    25fc:	cmp	x19, x8
    2600:	b.ls	2800 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x2bc>  // b.plast
    2604:	ldr	w17, [x20, x8, lsl #2]
    2608:	cmp	w17, #0x3f
    260c:	b.hi	27cc <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x288>  // b.pmore
    2610:	ldr	x18, [x21, #24]
    2614:	ldarb	w15, [x12]
    2618:	tbz	w15, #0, 2658 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x114>
    261c:	ldarb	w15, [x13]
    2620:	tbz	w15, #0, 2700 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x1bc>
    2624:	ldr	w1, [sp, #40]
    2628:	cmp	w1, w8
    262c:	b.ls	2820 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x2dc>  // b.plast
    2630:	lsl	x15, x14, x17
    2634:	ldr	x16, [sp, #32]
    2638:	and	x15, x18, x15
    263c:	cmp	x15, #0x0
    2640:	csel	x15, x9, x10, eq  // eq = none
    2644:	str	x15, [x16, x8, lsl #3]
    2648:	add	x8, x8, #0x1
    264c:	cmp	w19, w8
    2650:	b.ne	25fc <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xb8>  // b.any
    2654:	b	27b8 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x274>
    2658:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    265c:	add	x0, x0, #0x0
    2660:	stp	x8, x11, [sp, #8]
    2664:	str	x17, [x29, #24]
    2668:	str	x18, [sp, #24]
    266c:	bl	0 <__cxa_guard_acquire>
    2670:	adrp	x15, 88 <_ZN4llvm5RecTy9getListTyEv+0x1c>
    2674:	ldp	x11, x18, [sp, #16]
    2678:	ldr	x17, [x29, #24]
    267c:	ldr	x15, [x15]
    2680:	ldr	x8, [sp, #8]
    2684:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    2688:	adrp	x10, 0 <_ZNK4llvm5RecTy4dumpEv>
    268c:	adrp	x13, 0 <_ZNK4llvm5RecTy4dumpEv>
    2690:	adrp	x12, 0 <_ZNK4llvm5RecTy4dumpEv>
    2694:	add	x9, x9, #0x0
    2698:	mov	w16, #0x2                   	// #2
    269c:	add	x10, x10, #0x0
    26a0:	mov	w14, #0x1                   	// #1
    26a4:	add	x13, x13, #0x0
    26a8:	add	x12, x12, #0x0
    26ac:	cbz	w0, 261c <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xd8>
    26b0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    26b4:	add	x0, x0, #0x0
    26b8:	strh	w16, [x10, #8]
    26bc:	str	x15, [x10, #16]
    26c0:	str	x11, [x10]
    26c4:	strb	w14, [x10, #24]
    26c8:	bl	0 <__cxa_guard_release>
    26cc:	ldp	x11, x18, [sp, #16]
    26d0:	ldr	x17, [x29, #24]
    26d4:	ldr	x8, [sp, #8]
    26d8:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    26dc:	adrp	x10, 0 <_ZNK4llvm5RecTy4dumpEv>
    26e0:	adrp	x13, 0 <_ZNK4llvm5RecTy4dumpEv>
    26e4:	adrp	x12, 0 <_ZNK4llvm5RecTy4dumpEv>
    26e8:	add	x9, x9, #0x0
    26ec:	add	x10, x10, #0x0
    26f0:	mov	w14, #0x1                   	// #1
    26f4:	add	x13, x13, #0x0
    26f8:	add	x12, x12, #0x0
    26fc:	b	261c <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xd8>
    2700:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2704:	add	x0, x0, #0x0
    2708:	stp	x8, x11, [sp, #8]
    270c:	str	x17, [x29, #24]
    2710:	str	x18, [sp, #24]
    2714:	bl	0 <__cxa_guard_acquire>
    2718:	adrp	x15, 3f8 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x168>
    271c:	adrp	x16, 88 <_ZN4llvm5RecTy9getListTyEv+0x1c>
    2720:	ldp	x11, x18, [sp, #16]
    2724:	ldr	x17, [x29, #24]
    2728:	ldr	x15, [x15]
    272c:	ldr	x16, [x16]
    2730:	ldr	x8, [sp, #8]
    2734:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    2738:	adrp	x10, 0 <_ZNK4llvm5RecTy4dumpEv>
    273c:	adrp	x13, 0 <_ZNK4llvm5RecTy4dumpEv>
    2740:	adrp	x12, 0 <_ZNK4llvm5RecTy4dumpEv>
    2744:	add	x9, x9, #0x0
    2748:	mov	w1, #0x2                   	// #2
    274c:	add	x10, x10, #0x0
    2750:	mov	w14, #0x1                   	// #1
    2754:	add	x13, x13, #0x0
    2758:	add	x12, x12, #0x0
    275c:	cbz	w0, 2624 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xe0>
    2760:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2764:	add	x8, x15, #0x10
    2768:	add	x0, x0, #0x0
    276c:	strh	w1, [x9, #8]
    2770:	str	x16, [x9, #16]
    2774:	str	x8, [x9]
    2778:	strb	wzr, [x9, #24]
    277c:	bl	0 <__cxa_guard_release>
    2780:	ldp	x11, x18, [sp, #16]
    2784:	ldr	x17, [x29, #24]
    2788:	ldr	x8, [sp, #8]
    278c:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    2790:	adrp	x10, 0 <_ZNK4llvm5RecTy4dumpEv>
    2794:	adrp	x13, 0 <_ZNK4llvm5RecTy4dumpEv>
    2798:	adrp	x12, 0 <_ZNK4llvm5RecTy4dumpEv>
    279c:	add	x9, x9, #0x0
    27a0:	add	x10, x10, #0x0
    27a4:	mov	w14, #0x1                   	// #1
    27a8:	add	x13, x13, #0x0
    27ac:	add	x12, x12, #0x0
    27b0:	b	2624 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xe0>
    27b4:	ldr	w1, [sp, #40]
    27b8:	ldr	x0, [sp, #32]
    27bc:	mov	w1, w1
    27c0:	bl	176c <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    27c4:	mov	x19, x0
    27c8:	b	27d0 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x28c>
    27cc:	mov	x19, xzr
    27d0:	ldr	x0, [sp, #32]
    27d4:	add	x8, sp, #0x20
    27d8:	add	x8, x8, #0x10
    27dc:	cmp	x0, x8
    27e0:	b.eq	27e8 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x2a4>  // b.none
    27e4:	bl	0 <free>
    27e8:	mov	x0, x19
    27ec:	ldp	x20, x19, [sp, #208]
    27f0:	ldr	x21, [sp, #192]
    27f4:	ldp	x29, x30, [sp, #176]
    27f8:	add	sp, sp, #0xe0
    27fc:	ret
    2800:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2804:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    2808:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    280c:	add	x0, x0, #0x0
    2810:	add	x1, x1, #0x0
    2814:	add	x3, x3, #0x0
    2818:	mov	w2, #0xfa                  	// #250
    281c:	bl	0 <__assert_fail>
    2820:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2824:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    2828:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    282c:	add	x0, x0, #0x0
    2830:	add	x1, x1, #0x0
    2834:	add	x3, x3, #0x0
    2838:	mov	w2, #0x95                  	// #149
    283c:	bl	0 <__assert_fail>
    2840:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2844:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    2848:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    284c:	add	x0, x0, #0x0
    2850:	add	x1, x1, #0x0
    2854:	add	x3, x3, #0x0
    2858:	mov	w2, #0x43                  	// #67
    285c:	bl	0 <__assert_fail>

0000000000002860 <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE>:
    2860:	sub	sp, sp, #0x50
    2864:	stp	x29, x30, [sp, #32]
    2868:	str	x21, [sp, #48]
    286c:	stp	x20, x19, [sp, #64]
    2870:	add	x29, sp, #0x20
    2874:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    2878:	add	x8, x8, #0x0
    287c:	ldarb	w8, [x8]
    2880:	mov	x19, x2
    2884:	mov	x20, x1
    2888:	mov	x21, x0
    288c:	tbz	w8, #0, 2974 <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE+0x114>
    2890:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    2894:	add	x8, x8, #0x0
    2898:	ldarb	w8, [x8]
    289c:	tbnz	w8, #0, 28ac <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE+0x4c>
    28a0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    28a4:	add	x0, x0, #0x0
    28a8:	bl	0 <_ZN4llvm17TrackingStatistic17RegisterStatisticEv>
    28ac:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    28b0:	add	x8, x8, #0x0
    28b4:	ldxr	w9, [x8]
    28b8:	add	w9, w9, #0x1
    28bc:	stxr	w10, w9, [x8]
    28c0:	cbnz	w10, 28b4 <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE+0x54>
    28c4:	cbz	x20, 2910 <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE+0xb0>
    28c8:	add	x8, sp, #0x8
    28cc:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    28d0:	mov	w9, #0x1                   	// #1
    28d4:	add	x3, x8, #0x10
    28d8:	add	x0, x0, #0x0
    28dc:	mov	x1, x21
    28e0:	mov	x2, x20
    28e4:	stp	x21, x20, [sp, #8]
    28e8:	str	w9, [sp, #24]
    28ec:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    28f0:	ldr	x20, [x0]
    28f4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    28f8:	add	x0, x0, #0x0
    28fc:	mov	w1, #0x30                  	// #48
    2900:	mov	w2, #0x4                   	// #4
    2904:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    2908:	ldr	x8, [x20], #8
    290c:	b	2930 <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE+0xd0>
    2910:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2914:	add	x0, x0, #0x0
    2918:	mov	w1, #0x30                  	// #48
    291c:	mov	w2, #0x4                   	// #4
    2920:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    2924:	adrp	x20, 0 <_ZNK4llvm5RecTy4dumpEv>
    2928:	mov	x8, xzr
    292c:	add	x20, x20, #0x0
    2930:	adrp	x10, a0 <_ZN4llvm5RecTy9getListTyEv+0x34>
    2934:	adrp	x11, 5f8 <_ZNK4llvm9ListRecTy11getAsStringB5cxx11Ev+0x14>
    2938:	ldr	x10, [x10]
    293c:	ldr	x11, [x11]
    2940:	mov	w9, #0x4                   	// #4
    2944:	strh	w9, [x0, #8]
    2948:	stp	x10, x20, [x0, #16]
    294c:	add	x9, x11, #0x10
    2950:	str	x9, [x0]
    2954:	str	x8, [x0, #32]
    2958:	ldr	x8, [x19]
    295c:	ldp	x20, x19, [sp, #64]
    2960:	ldr	x21, [sp, #48]
    2964:	ldp	x29, x30, [sp, #32]
    2968:	str	x8, [x0, #40]
    296c:	add	sp, sp, #0x50
    2970:	ret
    2974:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2978:	add	x0, x0, #0x0
    297c:	bl	0 <__cxa_guard_acquire>
    2980:	cbz	w0, 2890 <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE+0x30>
    2984:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    2988:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    298c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2990:	adrp	x2, 0 <__dso_handle>
    2994:	add	x1, x1, #0x0
    2998:	mov	x8, #0x800000000           	// #34359738368
    299c:	add	x9, x9, #0x0
    29a0:	add	x0, x0, #0x0
    29a4:	add	x2, x2, #0x0
    29a8:	stp	xzr, xzr, [x1]
    29ac:	stp	x8, x9, [x1, #16]
    29b0:	bl	0 <__cxa_atexit>
    29b4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    29b8:	add	x0, x0, #0x0
    29bc:	bl	0 <__cxa_guard_release>
    29c0:	b	2890 <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE+0x30>

00000000000029c4 <_ZN4llvm10StringInit3getENS_9StringRefE>:
    29c4:	sub	sp, sp, #0x40
    29c8:	stp	x29, x30, [sp, #32]
    29cc:	str	x19, [sp, #48]
    29d0:	add	x29, sp, #0x20
    29d4:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    29d8:	add	x8, x8, #0x0
    29dc:	ldarb	w8, [x8]
    29e0:	mov	x2, x1
    29e4:	mov	x1, x0
    29e8:	tbz	w8, #0, 2a6c <_ZN4llvm10StringInit3getENS_9StringRefE+0xa8>
    29ec:	add	x8, sp, #0x8
    29f0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    29f4:	add	x3, x8, #0x10
    29f8:	add	x0, x0, #0x0
    29fc:	stp	x1, x2, [sp, #8]
    2a00:	str	xzr, [sp, #24]
    2a04:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    2a08:	ldr	x19, [x0]
    2a0c:	ldr	x0, [x19, #8]
    2a10:	cbnz	x0, 2a5c <_ZN4llvm10StringInit3getENS_9StringRefE+0x98>
    2a14:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2a18:	add	x0, x0, #0x0
    2a1c:	mov	w1, #0x28                  	// #40
    2a20:	mov	w2, #0x4                   	// #4
    2a24:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    2a28:	adrp	x11, d0 <_ZNK4llvm5RecTy19typeIsConvertibleToEPKS0_+0xc>
    2a2c:	adrp	x12, 578 <_ZNK4llvm8IntRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x10>
    2a30:	ldr	x9, [x19]
    2a34:	ldr	x11, [x11]
    2a38:	ldr	x12, [x12]
    2a3c:	mov	w10, #0x12                  	// #18
    2a40:	add	x8, x19, #0x10
    2a44:	strh	w10, [x0, #8]
    2a48:	add	x10, x12, #0x10
    2a4c:	stp	x11, x8, [x0, #16]
    2a50:	str	x10, [x0]
    2a54:	str	x9, [x0, #32]
    2a58:	str	x0, [x19, #8]
    2a5c:	ldr	x19, [sp, #48]
    2a60:	ldp	x29, x30, [sp, #32]
    2a64:	add	sp, sp, #0x40
    2a68:	ret
    2a6c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2a70:	add	x0, x0, #0x0
    2a74:	str	x2, [x29, #24]
    2a78:	mov	x19, x1
    2a7c:	bl	0 <__cxa_guard_acquire>
    2a80:	ldr	x2, [x29, #24]
    2a84:	mov	x1, x19
    2a88:	cbz	w0, 29ec <_ZN4llvm10StringInit3getENS_9StringRefE+0x28>
    2a8c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    2a90:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    2a94:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2a98:	adrp	x2, 0 <__dso_handle>
    2a9c:	add	x1, x1, #0x0
    2aa0:	mov	x8, #0x1000000000          	// #68719476736
    2aa4:	add	x9, x9, #0x0
    2aa8:	add	x0, x0, #0x0
    2aac:	add	x2, x2, #0x0
    2ab0:	stp	xzr, xzr, [x1]
    2ab4:	stp	x8, x9, [x1, #16]
    2ab8:	bl	0 <__cxa_atexit>
    2abc:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2ac0:	add	x0, x0, #0x0
    2ac4:	bl	0 <__cxa_guard_release>
    2ac8:	ldr	x2, [x29, #24]
    2acc:	mov	x1, x19
    2ad0:	b	29ec <_ZN4llvm10StringInit3getENS_9StringRefE+0x28>

0000000000002ad4 <_ZNK4llvm10StringInit20convertInitializerToEPNS_5RecTyE>:
    2ad4:	sub	sp, sp, #0x20
    2ad8:	stp	x29, x30, [sp, #16]
    2adc:	add	x29, sp, #0x10
    2ae0:	cbz	x1, 2b20 <_ZNK4llvm10StringInit20convertInitializerToEPNS_5RecTyE+0x4c>
    2ae4:	ldr	w8, [x1, #8]
    2ae8:	cmp	w8, #0x2
    2aec:	b.eq	2b00 <_ZNK4llvm10StringInit20convertInitializerToEPNS_5RecTyE+0x2c>  // b.none
    2af0:	cmp	w8, #0x4
    2af4:	b.eq	2b14 <_ZNK4llvm10StringInit20convertInitializerToEPNS_5RecTyE+0x40>  // b.none
    2af8:	mov	x0, xzr
    2afc:	b	2b14 <_ZNK4llvm10StringInit20convertInitializerToEPNS_5RecTyE+0x40>
    2b00:	ldp	x8, x1, [x0, #24]
    2b04:	add	x2, sp, #0x8
    2b08:	str	xzr, [sp, #8]
    2b0c:	mov	x0, x8
    2b10:	bl	2860 <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE>
    2b14:	ldp	x29, x30, [sp, #16]
    2b18:	add	sp, sp, #0x20
    2b1c:	ret
    2b20:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2b24:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    2b28:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    2b2c:	add	x0, x0, #0x0
    2b30:	add	x1, x1, #0x0
    2b34:	add	x3, x3, #0x0
    2b38:	mov	w2, #0x69                  	// #105
    2b3c:	bl	0 <__assert_fail>

0000000000002b40 <_ZNK4llvm8CodeInit20convertInitializerToEPNS_5RecTyE>:
    2b40:	stp	x29, x30, [sp, #-16]!
    2b44:	mov	x29, sp
    2b48:	cbz	x1, 2b7c <_ZNK4llvm8CodeInit20convertInitializerToEPNS_5RecTyE+0x3c>
    2b4c:	ldr	w8, [x1, #8]
    2b50:	cmp	w8, #0x4
    2b54:	b.eq	2b6c <_ZNK4llvm8CodeInit20convertInitializerToEPNS_5RecTyE+0x2c>  // b.none
    2b58:	cmp	w8, #0x2
    2b5c:	b.eq	2b64 <_ZNK4llvm8CodeInit20convertInitializerToEPNS_5RecTyE+0x24>  // b.none
    2b60:	mov	x0, xzr
    2b64:	ldp	x29, x30, [sp], #16
    2b68:	ret
    2b6c:	ldp	x8, x1, [x0, #24]
    2b70:	mov	x0, x8
    2b74:	ldp	x29, x30, [sp], #16
    2b78:	b	29c4 <_ZN4llvm10StringInit3getENS_9StringRefE>
    2b7c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2b80:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    2b84:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    2b88:	add	x0, x0, #0x0
    2b8c:	add	x1, x1, #0x0
    2b90:	add	x3, x3, #0x0
    2b94:	mov	w2, #0x69                  	// #105
    2b98:	bl	0 <__assert_fail>

0000000000002b9c <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>:
    2b9c:	sub	sp, sp, #0xe0
    2ba0:	stp	x29, x30, [sp, #160]
    2ba4:	stp	x24, x23, [sp, #176]
    2ba8:	stp	x22, x21, [sp, #192]
    2bac:	stp	x20, x19, [sp, #208]
    2bb0:	add	x29, sp, #0xa0
    2bb4:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    2bb8:	add	x8, x8, #0x0
    2bbc:	ldarb	w8, [x8]
    2bc0:	mov	x21, x2
    2bc4:	mov	x20, x1
    2bc8:	mov	x19, x0
    2bcc:	tbz	w8, #0, 2d5c <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x1c0>
    2bd0:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    2bd4:	ldr	d0, [x8]
    2bd8:	add	x8, sp, #0x10
    2bdc:	add	x8, x8, #0x10
    2be0:	add	x0, sp, #0x10
    2be4:	mov	x1, x20
    2be8:	str	x8, [sp, #16]
    2bec:	str	d0, [sp, #24]
    2bf0:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
    2bf4:	add	x0, sp, #0x10
    2bf8:	mov	x1, x21
    2bfc:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    2c00:	cbz	x20, 2c20 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x84>
    2c04:	lsl	x22, x20, #3
    2c08:	mov	x23, x19
    2c0c:	ldr	x1, [x23], #8
    2c10:	add	x0, sp, #0x10
    2c14:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    2c18:	subs	x22, x22, #0x8
    2c1c:	b.ne	2c0c <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x70>  // b.any
    2c20:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2c24:	add	x0, x0, #0x0
    2c28:	add	x1, sp, #0x10
    2c2c:	add	x2, sp, #0x8
    2c30:	str	xzr, [sp, #8]
    2c34:	add	x23, sp, #0x10
    2c38:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    2c3c:	cbz	x0, 2c48 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0xac>
    2c40:	sub	x22, x0, #0x18
    2c44:	b	2d2c <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x190>
    2c48:	cbz	x20, 2c7c <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0xe0>
    2c4c:	ldr	x8, [x19]
    2c50:	cbz	x8, 2db8 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x21c>
    2c54:	ldrb	w9, [x8, #8]
    2c58:	sub	w9, w9, #0x1
    2c5c:	cmp	w9, #0x16
    2c60:	b.hi	2c7c <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0xe0>  // b.pmore
    2c64:	ldr	x0, [x8, #16]
    2c68:	mov	x1, x21
    2c6c:	ldr	x8, [x0]
    2c70:	ldr	x8, [x8, #24]
    2c74:	blr	x8
    2c78:	tbz	w0, #0, 2dd8 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x23c>
    2c7c:	lsl	x8, x20, #3
    2c80:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2c84:	add	x1, x8, #0x28
    2c88:	add	x0, x0, #0x0
    2c8c:	mov	w2, #0x3                   	// #3
    2c90:	add	x24, x19, x20, lsl #3
    2c94:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    2c98:	ldr	x8, [x21, #16]
    2c9c:	mov	x22, x0
    2ca0:	cbnz	x8, 2cdc <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x140>
    2ca4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2ca8:	add	x0, x0, #0x0
    2cac:	mov	w1, #0x20                  	// #32
    2cb0:	mov	w2, #0x4                   	// #4
    2cb4:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    2cb8:	adrp	x10, 1d0 <_ZN4llvm9BitsRecTy3getEj+0x4c>
    2cbc:	ldr	x10, [x10]
    2cc0:	mov	w9, #0x5                   	// #5
    2cc4:	mov	x8, x0
    2cc8:	str	w9, [x0, #8]
    2ccc:	add	x9, x10, #0x10
    2cd0:	stp	xzr, x21, [x0, #16]
    2cd4:	str	x9, [x0]
    2cd8:	str	x0, [x21, #16]
    2cdc:	str	x8, [x22, #16]
    2ce0:	adrp	x8, 678 <_ZNK4llvm9ListRecTy11getAsStringB5cxx11Ev+0x94>
    2ce4:	ldr	x8, [x8]
    2ce8:	mov	w9, #0x9                   	// #9
    2cec:	mov	x21, x22
    2cf0:	subs	x2, x24, x19
    2cf4:	strh	w9, [x22, #8]
    2cf8:	str	xzr, [x21, #24]!
    2cfc:	add	x8, x8, #0x10
    2d00:	str	x8, [x22]
    2d04:	str	w20, [x22, #32]
    2d08:	b.eq	2d18 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x17c>  // b.none
    2d0c:	add	x0, x22, #0x28
    2d10:	mov	x1, x19
    2d14:	bl	0 <memmove>
    2d18:	ldr	x2, [sp, #8]
    2d1c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2d20:	add	x0, x0, #0x0
    2d24:	mov	x1, x21
    2d28:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    2d2c:	ldr	x0, [sp, #16]
    2d30:	add	x8, x23, #0x10
    2d34:	cmp	x0, x8
    2d38:	b.eq	2d40 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x1a4>  // b.none
    2d3c:	bl	0 <free>
    2d40:	mov	x0, x22
    2d44:	ldp	x20, x19, [sp, #208]
    2d48:	ldp	x22, x21, [sp, #192]
    2d4c:	ldp	x24, x23, [sp, #176]
    2d50:	ldp	x29, x30, [sp, #160]
    2d54:	add	sp, sp, #0xe0
    2d58:	ret
    2d5c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2d60:	add	x0, x0, #0x0
    2d64:	bl	0 <__cxa_guard_acquire>
    2d68:	cbz	w0, 2bd0 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x34>
    2d6c:	adrp	x22, 0 <_ZNK4llvm5RecTy4dumpEv>
    2d70:	add	x22, x22, #0x0
    2d74:	mov	w1, #0x6                   	// #6
    2d78:	mov	x0, x22
    2d7c:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    2d80:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    2d84:	ldr	x8, [x8]
    2d88:	adrp	x0, 0 <_ZN4llvm14FoldingSetBaseD2Ev>
    2d8c:	adrp	x2, 0 <__dso_handle>
    2d90:	add	x2, x2, #0x0
    2d94:	add	x8, x8, #0x10
    2d98:	str	x8, [x22]
    2d9c:	ldr	x0, [x0]
    2da0:	mov	x1, x22
    2da4:	bl	0 <__cxa_atexit>
    2da8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2dac:	add	x0, x0, #0x0
    2db0:	bl	0 <__cxa_guard_release>
    2db4:	b	2bd0 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x34>
    2db8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2dbc:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    2dc0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    2dc4:	add	x0, x0, #0x0
    2dc8:	add	x1, x1, #0x0
    2dcc:	add	x3, x3, #0x0
    2dd0:	mov	w2, #0x69                  	// #105
    2dd4:	bl	0 <__assert_fail>
    2dd8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2ddc:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    2de0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    2de4:	add	x0, x0, #0x0
    2de8:	add	x1, x1, #0x0
    2dec:	add	x3, x3, #0x0
    2df0:	mov	w2, #0x245                 	// #581
    2df4:	bl	0 <__assert_fail>

0000000000002df8 <_ZNK4llvm8ListInit7ProfileERNS_16FoldingSetNodeIDE>:
    2df8:	stp	x29, x30, [sp, #-48]!
    2dfc:	stp	x22, x21, [sp, #16]
    2e00:	stp	x20, x19, [sp, #32]
    2e04:	mov	x29, sp
    2e08:	ldr	x8, [x0, #16]
    2e0c:	cbz	x8, 2e74 <_ZNK4llvm8ListInit7ProfileERNS_16FoldingSetNodeIDE+0x7c>
    2e10:	ldr	w9, [x8, #8]
    2e14:	cmp	w9, #0x5
    2e18:	b.ne	2e94 <_ZNK4llvm8ListInit7ProfileERNS_16FoldingSetNodeIDE+0x9c>  // b.any
    2e1c:	ldr	w21, [x0, #32]
    2e20:	ldr	x22, [x8, #24]
    2e24:	mov	x20, x0
    2e28:	mov	x19, x1
    2e2c:	mov	x0, x1
    2e30:	mov	x1, x21
    2e34:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
    2e38:	mov	x0, x19
    2e3c:	mov	x1, x22
    2e40:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    2e44:	cbz	w21, 2e64 <_ZNK4llvm8ListInit7ProfileERNS_16FoldingSetNodeIDE+0x6c>
    2e48:	add	x20, x20, #0x28
    2e4c:	lsl	x21, x21, #3
    2e50:	ldr	x1, [x20], #8
    2e54:	mov	x0, x19
    2e58:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    2e5c:	subs	x21, x21, #0x8
    2e60:	b.ne	2e50 <_ZNK4llvm8ListInit7ProfileERNS_16FoldingSetNodeIDE+0x58>  // b.any
    2e64:	ldp	x20, x19, [sp, #32]
    2e68:	ldp	x22, x21, [sp, #16]
    2e6c:	ldp	x29, x30, [sp], #48
    2e70:	ret
    2e74:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2e78:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    2e7c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    2e80:	add	x0, x0, #0x0
    2e84:	add	x1, x1, #0x0
    2e88:	add	x3, x3, #0x0
    2e8c:	mov	w2, #0x69                  	// #105
    2e90:	bl	0 <__assert_fail>
    2e94:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2e98:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    2e9c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    2ea0:	add	x0, x0, #0x0
    2ea4:	add	x1, x1, #0x0
    2ea8:	add	x3, x3, #0x0
    2eac:	mov	w2, #0x108                 	// #264
    2eb0:	bl	0 <__assert_fail>

0000000000002eb4 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE>:
    2eb4:	sub	sp, sp, #0xa0
    2eb8:	stp	x29, x30, [sp, #80]
    2ebc:	stp	x26, x25, [sp, #96]
    2ec0:	stp	x24, x23, [sp, #112]
    2ec4:	stp	x22, x21, [sp, #128]
    2ec8:	stp	x20, x19, [sp, #144]
    2ecc:	add	x29, sp, #0x50
    2ed0:	ldr	x8, [x0, #16]
    2ed4:	mov	x19, x0
    2ed8:	cmp	x8, x1
    2edc:	b.eq	3000 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x14c>  // b.none
    2ee0:	mov	x21, x1
    2ee4:	cbz	x1, 3040 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x18c>
    2ee8:	ldr	w8, [x21, #8]
    2eec:	cmp	w8, #0x5
    2ef0:	b.ne	2fc4 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x110>  // b.any
    2ef4:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    2ef8:	ldr	d0, [x8]
    2efc:	mov	x8, sp
    2f00:	add	x20, x8, #0x10
    2f04:	str	x20, [sp]
    2f08:	str	d0, [sp, #8]
    2f0c:	ldr	w2, [x19, #32]
    2f10:	cmp	w2, #0x9
    2f14:	b.cc	2f2c <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x78>  // b.lo, b.ul, b.last
    2f18:	mov	x0, sp
    2f1c:	mov	w3, #0x8                   	// #8
    2f20:	mov	x1, x20
    2f24:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2f28:	ldr	w2, [x19, #32]
    2f2c:	mov	w8, w2
    2f30:	lsl	x24, x8, #3
    2f34:	cbz	x24, 2fe8 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x134>
    2f38:	ldr	x21, [x21, #24]
    2f3c:	mov	w25, wzr
    2f40:	add	x26, x19, #0x28
    2f44:	ldr	x22, [x26]
    2f48:	mov	x1, x21
    2f4c:	ldr	x8, [x22]
    2f50:	mov	x0, x22
    2f54:	ldr	x8, [x8, #64]
    2f58:	blr	x8
    2f5c:	cbz	x0, 2fcc <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x118>
    2f60:	ldp	w8, w9, [sp, #8]
    2f64:	mov	x23, x0
    2f68:	cmp	w8, w9
    2f6c:	b.cs	2fa8 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0xf4>  // b.hs, b.nlast
    2f70:	ldr	x9, [sp]
    2f74:	str	x23, [x9, w8, uxtw #3]
    2f78:	ldp	w8, w9, [sp, #8]
    2f7c:	cmp	w8, w9
    2f80:	b.cs	3020 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x16c>  // b.hs, b.nlast
    2f84:	cmp	x23, x22
    2f88:	add	x1, x8, #0x1
    2f8c:	cset	w8, ne  // ne = any
    2f90:	subs	x24, x24, #0x8
    2f94:	orr	w25, w25, w8
    2f98:	add	x26, x26, #0x8
    2f9c:	str	w1, [sp, #8]
    2fa0:	b.ne	2f44 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x90>  // b.any
    2fa4:	b	2fd4 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x120>
    2fa8:	mov	x0, sp
    2fac:	mov	w3, #0x8                   	// #8
    2fb0:	mov	x1, x20
    2fb4:	mov	x2, xzr
    2fb8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2fbc:	ldr	w8, [sp, #8]
    2fc0:	b	2f70 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0xbc>
    2fc4:	mov	x19, xzr
    2fc8:	b	3000 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x14c>
    2fcc:	mov	x19, xzr
    2fd0:	b	2fe8 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x134>
    2fd4:	tbz	w25, #0, 2fe8 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x134>
    2fd8:	ldr	x0, [sp]
    2fdc:	mov	x2, x21
    2fe0:	bl	2b9c <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    2fe4:	mov	x19, x0
    2fe8:	ldr	x0, [sp]
    2fec:	mov	x8, sp
    2ff0:	add	x8, x8, #0x10
    2ff4:	cmp	x0, x8
    2ff8:	b.eq	3000 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x14c>  // b.none
    2ffc:	bl	0 <free>
    3000:	mov	x0, x19
    3004:	ldp	x20, x19, [sp, #144]
    3008:	ldp	x22, x21, [sp, #128]
    300c:	ldp	x24, x23, [sp, #112]
    3010:	ldp	x26, x25, [sp, #96]
    3014:	ldp	x29, x30, [sp, #80]
    3018:	add	sp, sp, #0xa0
    301c:	ret
    3020:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    3024:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    3028:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    302c:	add	x0, x0, #0x0
    3030:	add	x1, x1, #0x0
    3034:	add	x3, x3, #0x0
    3038:	mov	w2, #0x43                  	// #67
    303c:	bl	0 <__assert_fail>
    3040:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    3044:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    3048:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    304c:	add	x0, x0, #0x0
    3050:	add	x1, x1, #0x0
    3054:	add	x3, x3, #0x0
    3058:	mov	w2, #0x69                  	// #105
    305c:	bl	0 <__assert_fail>

0000000000003060 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE>:
    3060:	sub	sp, sp, #0x90
    3064:	stp	x29, x30, [sp, #80]
    3068:	stp	x24, x23, [sp, #96]
    306c:	stp	x22, x21, [sp, #112]
    3070:	stp	x20, x19, [sp, #128]
    3074:	add	x29, sp, #0x50
    3078:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    307c:	ldr	d0, [x9]
    3080:	mov	x8, sp
    3084:	mov	x22, x2
    3088:	mov	x20, x1
    308c:	mov	x19, x0
    3090:	add	x21, x8, #0x10
    3094:	cmp	x2, #0x9
    3098:	str	x21, [sp]
    309c:	str	d0, [sp, #8]
    30a0:	b.cc	30bc <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x5c>  // b.lo, b.ul, b.last
    30a4:	mov	x0, sp
    30a8:	mov	w3, #0x8                   	// #8
    30ac:	mov	x1, x21
    30b0:	mov	x2, x22
    30b4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    30b8:	b	30c0 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x60>
    30bc:	cbz	x22, 3138 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0xd8>
    30c0:	add	x23, x19, #0x28
    30c4:	lsl	x22, x22, #2
    30c8:	ldr	w9, [x20]
    30cc:	ldr	w8, [x19, #32]
    30d0:	cmp	w8, w9
    30d4:	b.ls	3130 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0xd0>  // b.plast
    30d8:	ldp	w8, w10, [sp, #8]
    30dc:	ldr	x24, [x23, x9, lsl #3]
    30e0:	cmp	w8, w10
    30e4:	b.cs	3114 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0xb4>  // b.hs, b.nlast
    30e8:	ldr	x9, [sp]
    30ec:	str	x24, [x9, w8, uxtw #3]
    30f0:	ldp	w8, w9, [sp, #8]
    30f4:	cmp	w8, w9
    30f8:	b.cs	3198 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x138>  // b.hs, b.nlast
    30fc:	add	w8, w8, #0x1
    3100:	subs	x22, x22, #0x4
    3104:	add	x20, x20, #0x4
    3108:	str	w8, [sp, #8]
    310c:	b.ne	30c8 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x68>  // b.any
    3110:	b	313c <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0xdc>
    3114:	mov	x0, sp
    3118:	mov	w3, #0x8                   	// #8
    311c:	mov	x1, x21
    3120:	mov	x2, xzr
    3124:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3128:	ldr	w8, [sp, #8]
    312c:	b	30e8 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x88>
    3130:	mov	x19, xzr
    3134:	b	3164 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x104>
    3138:	ldr	w8, [sp, #8]
    313c:	ldr	x9, [x19, #16]
    3140:	cbz	x9, 31b8 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x158>
    3144:	ldr	w10, [x9, #8]
    3148:	cmp	w10, #0x5
    314c:	b.ne	31d8 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x178>  // b.any
    3150:	ldr	x0, [sp]
    3154:	ldr	x2, [x9, #24]
    3158:	mov	w1, w8
    315c:	bl	2b9c <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    3160:	mov	x19, x0
    3164:	ldr	x0, [sp]
    3168:	mov	x8, sp
    316c:	add	x8, x8, #0x10
    3170:	cmp	x0, x8
    3174:	b.eq	317c <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x11c>  // b.none
    3178:	bl	0 <free>
    317c:	mov	x0, x19
    3180:	ldp	x20, x19, [sp, #128]
    3184:	ldp	x22, x21, [sp, #112]
    3188:	ldp	x24, x23, [sp, #96]
    318c:	ldp	x29, x30, [sp, #80]
    3190:	add	sp, sp, #0x90
    3194:	ret
    3198:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    319c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    31a0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    31a4:	add	x0, x0, #0x0
    31a8:	add	x1, x1, #0x0
    31ac:	add	x3, x3, #0x0
    31b0:	mov	w2, #0x43                  	// #67
    31b4:	bl	0 <__assert_fail>
    31b8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    31bc:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    31c0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    31c4:	add	x0, x0, #0x0
    31c8:	add	x1, x1, #0x0
    31cc:	add	x3, x3, #0x0
    31d0:	mov	w2, #0x69                  	// #105
    31d4:	bl	0 <__assert_fail>
    31d8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    31dc:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    31e0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    31e4:	add	x0, x0, #0x0
    31e8:	add	x1, x1, #0x0
    31ec:	add	x3, x3, #0x0
    31f0:	mov	w2, #0x108                 	// #264
    31f4:	bl	0 <__assert_fail>

00000000000031f8 <_ZNK4llvm8ListInit18getElementAsRecordEj>:
    31f8:	sub	sp, sp, #0x30
    31fc:	stp	x29, x30, [sp, #32]
    3200:	add	x29, sp, #0x20
    3204:	ldr	w8, [x0, #32]
    3208:	cmp	w8, w1
    320c:	b.ls	3238 <_ZNK4llvm8ListInit18getElementAsRecordEj+0x40>  // b.plast
    3210:	add	x8, x0, w1, uxtw #3
    3214:	ldr	x8, [x8, #40]
    3218:	cbz	x8, 3258 <_ZNK4llvm8ListInit18getElementAsRecordEj+0x60>
    321c:	ldrb	w9, [x8, #8]
    3220:	cmp	w9, #0x6
    3224:	b.ne	3278 <_ZNK4llvm8ListInit18getElementAsRecordEj+0x80>  // b.any
    3228:	ldr	x0, [x8, #24]
    322c:	ldp	x29, x30, [sp, #32]
    3230:	add	sp, sp, #0x30
    3234:	ret
    3238:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    323c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    3240:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    3244:	add	x0, x0, #0x0
    3248:	add	x1, x1, #0x0
    324c:	add	x3, x3, #0x0
    3250:	mov	w2, #0x27e                 	// #638
    3254:	bl	0 <__assert_fail>
    3258:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    325c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    3260:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    3264:	add	x0, x0, #0x0
    3268:	add	x1, x1, #0x0
    326c:	add	x3, x3, #0x0
    3270:	mov	w2, #0x69                  	// #105
    3274:	bl	0 <__assert_fail>
    3278:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    327c:	add	x8, x8, #0x0
    3280:	mov	w9, #0x103                 	// #259
    3284:	add	x0, sp, #0x8
    3288:	stp	x8, xzr, [sp, #8]
    328c:	strh	w9, [sp, #24]
    3290:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>

0000000000003294 <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE>:
    3294:	sub	sp, sp, #0xa0
    3298:	stp	x29, x30, [sp, #80]
    329c:	stp	x26, x25, [sp, #96]
    32a0:	stp	x24, x23, [sp, #112]
    32a4:	stp	x22, x21, [sp, #128]
    32a8:	stp	x20, x19, [sp, #144]
    32ac:	add	x29, sp, #0x50
    32b0:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    32b4:	ldr	d0, [x8]
    32b8:	mov	x8, sp
    32bc:	add	x20, x8, #0x10
    32c0:	str	x20, [sp]
    32c4:	str	d0, [sp, #8]
    32c8:	ldr	w2, [x0, #32]
    32cc:	mov	x19, x0
    32d0:	mov	x21, x1
    32d4:	cmp	w2, #0x9
    32d8:	b.cc	32f0 <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0x5c>  // b.lo, b.ul, b.last
    32dc:	mov	x0, sp
    32e0:	mov	w3, #0x8                   	// #8
    32e4:	mov	x1, x20
    32e8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    32ec:	ldr	w2, [x19, #32]
    32f0:	mov	w8, w2
    32f4:	lsl	x24, x8, #3
    32f8:	cbz	x24, 33ac <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0x118>
    32fc:	mov	x26, xzr
    3300:	mov	w25, wzr
    3304:	add	x8, x19, x26
    3308:	ldr	x23, [x8, #40]
    330c:	mov	x1, x21
    3310:	ldr	x8, [x23]
    3314:	mov	x0, x23
    3318:	ldr	x8, [x8, #96]
    331c:	blr	x8
    3320:	ldp	w8, w9, [sp, #8]
    3324:	cmp	x0, x23
    3328:	mov	x22, x0
    332c:	cset	w23, ne  // ne = any
    3330:	cmp	w8, w9
    3334:	b.cs	3368 <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0xd4>  // b.hs, b.nlast
    3338:	ldr	x9, [sp]
    333c:	str	x22, [x9, w8, uxtw #3]
    3340:	ldp	w8, w9, [sp, #8]
    3344:	cmp	w8, w9
    3348:	b.cs	33e4 <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0x150>  // b.hs, b.nlast
    334c:	add	x26, x26, #0x8
    3350:	orr	w25, w25, w23
    3354:	add	x1, x8, #0x1
    3358:	cmp	x24, x26
    335c:	str	w1, [sp, #8]
    3360:	b.ne	3304 <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0x70>  // b.any
    3364:	b	3384 <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0xf0>
    3368:	mov	x0, sp
    336c:	mov	w3, #0x8                   	// #8
    3370:	mov	x1, x20
    3374:	mov	x2, xzr
    3378:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    337c:	ldr	w8, [sp, #8]
    3380:	b	3338 <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0xa4>
    3384:	tbz	w25, #0, 33ac <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0x118>
    3388:	ldr	x8, [x19, #16]
    338c:	cbz	x8, 3404 <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0x170>
    3390:	ldr	w9, [x8, #8]
    3394:	cmp	w9, #0x5
    3398:	b.ne	3424 <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0x190>  // b.any
    339c:	ldr	x0, [sp]
    33a0:	ldr	x2, [x8, #24]
    33a4:	bl	2b9c <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    33a8:	mov	x19, x0
    33ac:	ldr	x0, [sp]
    33b0:	mov	x8, sp
    33b4:	add	x8, x8, #0x10
    33b8:	cmp	x0, x8
    33bc:	b.eq	33c4 <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0x130>  // b.none
    33c0:	bl	0 <free>
    33c4:	mov	x0, x19
    33c8:	ldp	x20, x19, [sp, #144]
    33cc:	ldp	x22, x21, [sp, #128]
    33d0:	ldp	x24, x23, [sp, #112]
    33d4:	ldp	x26, x25, [sp, #96]
    33d8:	ldp	x29, x30, [sp, #80]
    33dc:	add	sp, sp, #0xa0
    33e0:	ret
    33e4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    33e8:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    33ec:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    33f0:	add	x0, x0, #0x0
    33f4:	add	x1, x1, #0x0
    33f8:	add	x3, x3, #0x0
    33fc:	mov	w2, #0x43                  	// #67
    3400:	bl	0 <__assert_fail>
    3404:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    3408:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    340c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    3410:	add	x0, x0, #0x0
    3414:	add	x1, x1, #0x0
    3418:	add	x3, x3, #0x0
    341c:	mov	w2, #0x69                  	// #105
    3420:	bl	0 <__assert_fail>
    3424:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    3428:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    342c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    3430:	add	x0, x0, #0x0
    3434:	add	x1, x1, #0x0
    3438:	add	x3, x3, #0x0
    343c:	mov	w2, #0x108                 	// #264
    3440:	bl	0 <__assert_fail>

0000000000003444 <_ZNK4llvm8ListInit10isConcreteEv>:
    3444:	stp	x29, x30, [sp, #-32]!
    3448:	stp	x20, x19, [sp, #16]
    344c:	mov	x29, sp
    3450:	ldr	w8, [x0, #32]
    3454:	lsl	x19, x8, #3
    3458:	cbz	x19, 347c <_ZNK4llvm8ListInit10isConcreteEv+0x38>
    345c:	add	x20, x0, #0x28
    3460:	ldr	x0, [x20], #8
    3464:	ldr	x8, [x0]
    3468:	ldr	x8, [x8, #32]
    346c:	blr	x8
    3470:	tbz	w0, #0, 3484 <_ZNK4llvm8ListInit10isConcreteEv+0x40>
    3474:	subs	x19, x19, #0x8
    3478:	b.ne	3460 <_ZNK4llvm8ListInit10isConcreteEv+0x1c>  // b.any
    347c:	mov	w0, #0x1                   	// #1
    3480:	b	3488 <_ZNK4llvm8ListInit10isConcreteEv+0x44>
    3484:	mov	w0, wzr
    3488:	ldp	x20, x19, [sp, #16]
    348c:	ldp	x29, x30, [sp], #32
    3490:	ret

0000000000003494 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev>:
    3494:	sub	sp, sp, #0x90
    3498:	stp	x29, x30, [sp, #64]
    349c:	stp	x26, x25, [sp, #80]
    34a0:	stp	x24, x23, [sp, #96]
    34a4:	stp	x22, x21, [sp, #112]
    34a8:	stp	x20, x19, [sp, #128]
    34ac:	add	x29, sp, #0x40
    34b0:	add	x9, sp, #0x20
    34b4:	mov	w10, #0x5b                  	// #91
    34b8:	mov	w11, #0x1                   	// #1
    34bc:	add	x22, x9, #0x10
    34c0:	strh	w10, [sp, #48]
    34c4:	stp	x22, x11, [sp, #32]
    34c8:	ldr	w9, [x0, #32]
    34cc:	mov	x19, x8
    34d0:	lsl	x21, x9, #3
    34d4:	cbz	x21, 35c0 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0x12c>
    34d8:	mov	x8, sp
    34dc:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    34e0:	adrp	x24, 0 <_ZNK4llvm5RecTy4dumpEv>
    34e4:	mov	x2, xzr
    34e8:	add	x23, x0, #0x28
    34ec:	add	x1, x1, #0x0
    34f0:	add	x24, x24, #0x0
    34f4:	add	x25, x8, #0x10
    34f8:	mov	x26, #0x3fffffffffffffff    	// #4611686018427387903
    34fc:	ldr	x20, [x23]
    3500:	add	x0, sp, #0x20
    3504:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    3508:	ldr	x8, [x20]
    350c:	mov	x0, x20
    3510:	ldr	x9, [x8, #40]
    3514:	mov	x8, sp
    3518:	blr	x9
    351c:	ldp	x1, x2, [sp]
    3520:	add	x0, sp, #0x20
    3524:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    3528:	ldr	x0, [sp]
    352c:	cmp	x0, x25
    3530:	b.eq	3538 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0xa4>  // b.none
    3534:	bl	0 <_ZdlPv>
    3538:	subs	x21, x21, #0x8
    353c:	b.eq	3568 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0xd4>  // b.none
    3540:	ldr	x8, [sp, #40]
    3544:	add	x23, x23, #0x8
    3548:	mov	w2, #0x2                   	// #2
    354c:	mov	x1, x24
    3550:	orr	x8, x8, #0x1
    3554:	cmp	x8, x26
    3558:	b.ne	34fc <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0x68>  // b.any
    355c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    3560:	add	x0, x0, #0x0
    3564:	bl	0 <_ZSt20__throw_length_errorPKc>
    3568:	ldp	x20, x21, [sp, #32]
    356c:	add	x0, x19, #0x10
    3570:	str	x0, [x19]
    3574:	cbnz	x20, 357c <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0xe8>
    3578:	cbnz	x21, 363c <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0x1a8>
    357c:	cmp	x21, #0x10
    3580:	str	x21, [sp]
    3584:	b.cc	35a4 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0x110>  // b.lo, b.ul, b.last
    3588:	mov	x1, sp
    358c:	mov	x0, x19
    3590:	mov	x2, xzr
    3594:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    3598:	ldr	x8, [sp]
    359c:	str	x0, [x19]
    35a0:	str	x8, [x19, #16]
    35a4:	cbz	x21, 35dc <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0x148>
    35a8:	cmp	x21, #0x1
    35ac:	b.eq	35d4 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0x140>  // b.none
    35b0:	mov	x1, x20
    35b4:	mov	x2, x21
    35b8:	bl	0 <memcpy>
    35bc:	b	35dc <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0x148>
    35c0:	add	x0, x19, #0x10
    35c4:	mov	w8, #0x1                   	// #1
    35c8:	str	x0, [x19]
    35cc:	str	x8, [sp]
    35d0:	mov	x20, x22
    35d4:	ldrb	w8, [x20]
    35d8:	strb	w8, [x0]
    35dc:	ldr	x8, [sp]
    35e0:	ldr	x9, [x19]
    35e4:	str	x8, [x19, #8]
    35e8:	strb	wzr, [x9, x8]
    35ec:	ldr	x8, [x19, #8]
    35f0:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    35f4:	cmp	x8, x9
    35f8:	b.eq	355c <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0xc8>  // b.none
    35fc:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    3600:	add	x1, x1, #0x0
    3604:	mov	w2, #0x1                   	// #1
    3608:	mov	x0, x19
    360c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    3610:	ldr	x0, [sp, #32]
    3614:	cmp	x0, x22
    3618:	b.eq	3620 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0x18c>  // b.none
    361c:	bl	0 <_ZdlPv>
    3620:	ldp	x20, x19, [sp, #128]
    3624:	ldp	x22, x21, [sp, #112]
    3628:	ldp	x24, x23, [sp, #96]
    362c:	ldp	x26, x25, [sp, #80]
    3630:	ldp	x29, x30, [sp, #64]
    3634:	add	sp, sp, #0x90
    3638:	ret
    363c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    3640:	add	x0, x0, #0x0
    3644:	bl	0 <_ZSt19__throw_logic_errorPKc>

0000000000003648 <_ZNK4llvm6OpInit6getBitEj>:
    3648:	adrp	x9, 88 <_ZN4llvm5RecTy9getListTyEv+0x1c>
    364c:	ldr	x8, [x0, #16]
    3650:	ldr	x9, [x9]
    3654:	cmp	x8, x9
    3658:	b.eq	3660 <_ZNK4llvm6OpInit6getBitEj+0x18>  // b.none
    365c:	b	3664 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj>
    3660:	ret

0000000000003664 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj>:
    3664:	sub	sp, sp, #0x40
    3668:	stp	x29, x30, [sp, #16]
    366c:	str	x21, [sp, #32]
    3670:	stp	x20, x19, [sp, #48]
    3674:	add	x29, sp, #0x10
    3678:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    367c:	add	x8, x8, #0x0
    3680:	ldarb	w8, [x8]
    3684:	mov	w19, w1
    3688:	mov	x20, x0
    368c:	tbz	w8, #0, 376c <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x108>
    3690:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    3694:	mov	w8, w19
    3698:	add	x0, x0, #0x0
    369c:	mov	x1, sp
    36a0:	add	x2, x29, #0x18
    36a4:	stp	x20, x8, [sp]
    36a8:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    36ac:	ldr	x21, [x29, #24]
    36b0:	tbz	w0, #0, 36c0 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x5c>
    36b4:	ldr	x0, [x21, #16]
    36b8:	cbnz	x0, 3758 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0xf4>
    36bc:	b	36f0 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x8c>
    36c0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    36c4:	add	x0, x0, #0x0
    36c8:	mov	x1, sp
    36cc:	mov	x2, sp
    36d0:	mov	x3, x21
    36d4:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    36d8:	ldr	x8, [sp]
    36dc:	mov	x21, x0
    36e0:	str	x8, [x0]
    36e4:	ldr	w8, [sp, #8]
    36e8:	str	xzr, [x0, #16]
    36ec:	str	w8, [x0, #8]
    36f0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    36f4:	add	x0, x0, #0x0
    36f8:	mov	w1, #0x28                  	// #40
    36fc:	mov	w2, #0x4                   	// #4
    3700:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    3704:	adrp	x9, 88 <_ZN4llvm5RecTy9getListTyEv+0x1c>
    3708:	adrp	x10, b58 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x370>
    370c:	ldr	x9, [x9]
    3710:	ldr	x10, [x10]
    3714:	mov	w8, #0x15                  	// #21
    3718:	strh	w8, [x0, #8]
    371c:	stp	x9, x20, [x0, #16]
    3720:	add	x8, x10, #0x10
    3724:	str	x8, [x0]
    3728:	str	w19, [x0, #32]
    372c:	ldr	x8, [x20, #16]
    3730:	cbz	x8, 37b4 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x150>
    3734:	ldr	w9, [x8, #8]
    3738:	cmp	w9, #0x3
    373c:	b.eq	3754 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0xf0>  // b.none
    3740:	cmp	w9, #0x1
    3744:	b.ne	37b4 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x150>  // b.any
    3748:	ldr	w8, [x8, #24]
    374c:	cmp	w8, w19
    3750:	b.ls	37b4 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x150>  // b.plast
    3754:	str	x0, [x21, #16]
    3758:	ldp	x20, x19, [sp, #48]
    375c:	ldr	x21, [sp, #32]
    3760:	ldp	x29, x30, [sp, #16]
    3764:	add	sp, sp, #0x40
    3768:	ret
    376c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    3770:	add	x0, x0, #0x0
    3774:	bl	0 <__cxa_guard_acquire>
    3778:	cbz	w0, 3690 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x2c>
    377c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    3780:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    3784:	adrp	x2, 0 <__dso_handle>
    3788:	add	x1, x1, #0x0
    378c:	add	x0, x0, #0x0
    3790:	add	x2, x2, #0x0
    3794:	stp	xzr, xzr, [x1]
    3798:	str	wzr, [x1, #24]
    379c:	str	xzr, [x1, #16]
    37a0:	bl	0 <__cxa_atexit>
    37a4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    37a8:	add	x0, x0, #0x0
    37ac:	bl	0 <__cxa_guard_release>
    37b0:	b	3690 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x2c>
    37b4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    37b8:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    37bc:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    37c0:	add	x0, x0, #0x0
    37c4:	add	x1, x1, #0x0
    37c8:	add	x3, x3, #0x0
    37cc:	mov	w2, #0x45b                 	// #1115
    37d0:	bl	0 <__assert_fail>

00000000000037d4 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE>:
    37d4:	sub	sp, sp, #0xd0
    37d8:	stp	x29, x30, [sp, #144]
    37dc:	str	x23, [sp, #160]
    37e0:	stp	x22, x21, [sp, #176]
    37e4:	stp	x20, x19, [sp, #192]
    37e8:	add	x29, sp, #0x90
    37ec:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    37f0:	add	x8, x8, #0x0
    37f4:	ldarb	w8, [x8]
    37f8:	mov	x20, x2
    37fc:	mov	x19, x1
    3800:	mov	w21, w0
    3804:	tbz	w8, #0, 38e8 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE+0x114>
    3808:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    380c:	ldr	d0, [x8]
    3810:	mov	x8, sp
    3814:	add	x23, x8, #0x10
    3818:	and	w1, w21, #0xff
    381c:	mov	x0, sp
    3820:	str	x23, [sp]
    3824:	str	d0, [sp, #8]
    3828:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
    382c:	mov	x0, sp
    3830:	mov	x1, x19
    3834:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    3838:	mov	x0, sp
    383c:	mov	x1, x20
    3840:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    3844:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    3848:	add	x0, x0, #0x0
    384c:	mov	x1, sp
    3850:	add	x2, x29, #0x18
    3854:	str	xzr, [x29, #24]
    3858:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    385c:	cbz	x0, 3868 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE+0x94>
    3860:	sub	x22, x0, #0x18
    3864:	b	38bc <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE+0xe8>
    3868:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    386c:	add	x0, x0, #0x0
    3870:	mov	w1, #0x28                  	// #40
    3874:	mov	w2, #0x4                   	// #4
    3878:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    387c:	strb	w21, [x0, #9]
    3880:	str	x20, [x0, #16]
    3884:	adrp	x9, 790 <_ZNK4llvm9ListRecTy7typeIsAEPKNS_5RecTyE+0x20>
    3888:	ldr	x9, [x9]
    388c:	mov	w8, #0xd                   	// #13
    3890:	ldr	x2, [x29, #24]
    3894:	mov	x1, x0
    3898:	strb	w8, [x0, #8]
    389c:	add	x8, x9, #0x10
    38a0:	mov	x22, x0
    38a4:	str	xzr, [x1, #24]!
    38a8:	str	x8, [x0]
    38ac:	str	x19, [x0, #32]
    38b0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    38b4:	add	x0, x0, #0x0
    38b8:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    38bc:	ldr	x0, [sp]
    38c0:	cmp	x0, x23
    38c4:	b.eq	38cc <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE+0xf8>  // b.none
    38c8:	bl	0 <free>
    38cc:	mov	x0, x22
    38d0:	ldp	x20, x19, [sp, #192]
    38d4:	ldp	x22, x21, [sp, #176]
    38d8:	ldr	x23, [sp, #160]
    38dc:	ldp	x29, x30, [sp, #144]
    38e0:	add	sp, sp, #0xd0
    38e4:	ret
    38e8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    38ec:	add	x0, x0, #0x0
    38f0:	bl	0 <__cxa_guard_acquire>
    38f4:	cbz	w0, 3808 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE+0x34>
    38f8:	adrp	x22, 0 <_ZNK4llvm5RecTy4dumpEv>
    38fc:	add	x22, x22, #0x0
    3900:	mov	w1, #0x6                   	// #6
    3904:	mov	x0, x22
    3908:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    390c:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    3910:	ldr	x8, [x8]
    3914:	adrp	x0, 0 <_ZN4llvm14FoldingSetBaseD2Ev>
    3918:	adrp	x2, 0 <__dso_handle>
    391c:	add	x2, x2, #0x0
    3920:	add	x8, x8, #0x10
    3924:	str	x8, [x22]
    3928:	ldr	x0, [x0]
    392c:	mov	x1, x22
    3930:	bl	0 <__cxa_atexit>
    3934:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    3938:	add	x0, x0, #0x0
    393c:	bl	0 <__cxa_guard_release>
    3940:	b	3808 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE+0x34>

0000000000003944 <_ZNK4llvm8UnOpInit7ProfileERNS_16FoldingSetNodeIDE>:
    3944:	stp	x29, x30, [sp, #-48]!
    3948:	str	x21, [sp, #16]
    394c:	stp	x20, x19, [sp, #32]
    3950:	mov	x29, sp
    3954:	ldrb	w8, [x0, #9]
    3958:	ldr	x19, [x0, #32]
    395c:	ldr	x20, [x0, #16]
    3960:	mov	x21, x1
    3964:	mov	x0, x1
    3968:	mov	w1, w8
    396c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
    3970:	mov	x0, x21
    3974:	mov	x1, x19
    3978:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    397c:	mov	x0, x21
    3980:	mov	x1, x20
    3984:	ldp	x20, x19, [sp, #32]
    3988:	ldr	x21, [sp, #16]
    398c:	ldp	x29, x30, [sp], #48
    3990:	b	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>

0000000000003994 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb>:
    3994:	stp	x29, x30, [sp, #-96]!
    3998:	stp	x28, x27, [sp, #16]
    399c:	stp	x26, x25, [sp, #32]
    39a0:	stp	x24, x23, [sp, #48]
    39a4:	stp	x22, x21, [sp, #64]
    39a8:	stp	x20, x19, [sp, #80]
    39ac:	mov	x29, sp
    39b0:	sub	sp, sp, #0x1c0
    39b4:	ldrb	w8, [x0, #9]
    39b8:	mov	x19, x0
    39bc:	cmp	w8, #0x5
    39c0:	b.hi	3e38 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4a4>  // b.pmore
    39c4:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    39c8:	add	x9, x9, #0x0
    39cc:	adr	x10, 39e0 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4c>
    39d0:	ldrb	w11, [x9, x8]
    39d4:	add	x10, x10, x11, lsl #2
    39d8:	mov	x20, x1
    39dc:	br	x10
    39e0:	ldr	x22, [x19, #16]
    39e4:	cbz	x22, 3fb8 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x624>
    39e8:	ldr	w8, [x22, #8]
    39ec:	cmp	w8, #0x4
    39f0:	b.eq	3db0 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x41c>  // b.none
    39f4:	cmp	w8, #0x7
    39f8:	b.ne	3e18 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x484>  // b.any
    39fc:	ldr	x23, [x19, #32]
    3a00:	cbz	x23, 3ff8 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x664>
    3a04:	ldrb	w8, [x23, #8]
    3a08:	cmp	w8, #0x12
    3a0c:	b.ne	3e1c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x488>  // b.any
    3a10:	mov	w21, w2
    3a14:	cbnz	x20, 3a1c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x88>
    3a18:	tbz	w21, #0, 3e38 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4a4>
    3a1c:	cbz	x20, 40dc <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x748>
    3a20:	ldr	x8, [x20]
    3a24:	cmp	x8, x23
    3a28:	b.eq	3e60 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4cc>  // b.none
    3a2c:	ldr	x8, [x20, #104]
    3a30:	ldr	x25, [x23, #32]
    3a34:	ldr	x28, [x8, #64]
    3a38:	add	x8, x8, #0x38
    3a3c:	cbz	x28, 3e74 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4e0>
    3a40:	ldr	x24, [x23, #24]
    3a44:	mov	x27, x8
    3a48:	str	x8, [sp, #8]
    3a4c:	b	3d10 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x37c>
    3a50:	ldr	x8, [x19, #32]
    3a54:	cbz	x8, 3f98 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x604>
    3a58:	ldrb	w9, [x8, #8]
    3a5c:	cmp	w9, #0x12
    3a60:	b.eq	3d84 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x3f0>  // b.none
    3a64:	cmp	w9, #0x9
    3a68:	b.ne	3e38 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4a4>  // b.any
    3a6c:	ldr	w8, [x8, #32]
    3a70:	cmp	w8, #0x0
    3a74:	b	3d8c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x3f8>
    3a78:	ldr	x8, [x19, #32]
    3a7c:	cbz	x8, 3f98 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x604>
    3a80:	ldrb	w9, [x8, #8]
    3a84:	cmp	w9, #0x9
    3a88:	b.ne	3e38 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4a4>  // b.any
    3a8c:	ldr	w9, [x8, #32]
    3a90:	cbz	w9, 4018 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x684>
    3a94:	ldr	x10, [x8, #16]
    3a98:	cbz	x10, 4038 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x6a4>
    3a9c:	ldr	w11, [x10, #8]
    3aa0:	cmp	w11, #0x5
    3aa4:	b.ne	4058 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x6c4>  // b.any
    3aa8:	ldr	x2, [x10, #24]
    3aac:	sub	x1, x9, #0x1
    3ab0:	add	x0, x8, #0x30
    3ab4:	add	sp, sp, #0x1c0
    3ab8:	ldp	x20, x19, [sp, #80]
    3abc:	ldp	x22, x21, [sp, #64]
    3ac0:	ldp	x24, x23, [sp, #48]
    3ac4:	ldp	x26, x25, [sp, #32]
    3ac8:	ldp	x28, x27, [sp, #16]
    3acc:	ldp	x29, x30, [sp], #96
    3ad0:	b	2b9c <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    3ad4:	ldr	x8, [x19, #32]
    3ad8:	cbz	x8, 3f98 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x604>
    3adc:	ldrb	w9, [x8, #8]
    3ae0:	cmp	w9, #0x9
    3ae4:	b.ne	3e38 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4a4>  // b.any
    3ae8:	ldr	w0, [x8, #32]
    3aec:	b	3d90 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x3fc>
    3af0:	ldr	x8, [x19, #32]
    3af4:	cbz	x8, 3f98 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x604>
    3af8:	ldrb	w9, [x8, #8]
    3afc:	cmp	w9, #0x9
    3b00:	b.ne	3e38 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4a4>  // b.any
    3b04:	ldr	w9, [x8, #32]
    3b08:	cbz	w9, 4078 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x6e4>
    3b0c:	ldr	x21, [x8, #40]
    3b10:	b	3e3c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4a8>
    3b14:	ldr	x8, [x19, #32]
    3b18:	cbz	x8, 3fd8 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x644>
    3b1c:	ldrb	w9, [x8, #8]
    3b20:	cmp	w9, #0x5
    3b24:	b.ne	3e38 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4a4>  // b.any
    3b28:	ldr	x8, [x8, #32]
    3b2c:	cbz	x8, 4098 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x704>
    3b30:	ldrb	w9, [x8, #8]
    3b34:	cmp	w9, #0x6
    3b38:	b.ne	40b8 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x724>  // b.any
    3b3c:	ldr	x22, [x8, #24]
    3b40:	ldr	x21, [x22, #112]
    3b44:	cbnz	x21, 3bc8 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x234>
    3b48:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    3b4c:	add	x0, x0, #0x0
    3b50:	mov	w1, #0x20                  	// #32
    3b54:	mov	w2, #0x4                   	// #4
    3b58:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    3b5c:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    3b60:	ldr	d0, [x8]
    3b64:	sub	x8, x29, #0x38
    3b68:	mov	x21, x0
    3b6c:	add	x23, x8, #0x10
    3b70:	sub	x1, x29, #0x38
    3b74:	mov	x0, x22
    3b78:	stur	x23, [x29, #-56]
    3b7c:	stur	d0, [x29, #-48]
    3b80:	bl	c9e0 <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE>
    3b84:	ldur	x0, [x29, #-56]
    3b88:	ldur	w1, [x29, #-48]
    3b8c:	bl	7e8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE>
    3b90:	ldur	x8, [x29, #-56]
    3b94:	cmp	x8, x23
    3b98:	mov	x23, x0
    3b9c:	b.eq	3ba8 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x214>  // b.none
    3ba0:	mov	x0, x8
    3ba4:	bl	0 <free>
    3ba8:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    3bac:	ldr	x9, [x9]
    3bb0:	mov	w8, #0x6                   	// #6
    3bb4:	strh	w8, [x21, #8]
    3bb8:	stp	x23, x22, [x21, #16]
    3bbc:	add	x8, x9, #0x10
    3bc0:	str	x8, [x21]
    3bc4:	str	x21, [x22, #112]
    3bc8:	ldr	x0, [x21, #16]
    3bcc:	ldr	x1, [x19, #16]
    3bd0:	ldr	x8, [x0]
    3bd4:	ldr	x8, [x8, #32]
    3bd8:	blr	x8
    3bdc:	tbnz	w0, #0, 3e3c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4a8>
    3be0:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    3be4:	add	x8, x8, #0x0
    3be8:	mov	w23, #0x103                 	// #259
    3bec:	ldr	x22, [x20, #8]
    3bf0:	ldr	w20, [x20, #16]
    3bf4:	stp	x8, xzr, [sp, #224]
    3bf8:	strh	w23, [sp, #240]
    3bfc:	ldr	x0, [x19, #16]
    3c00:	sub	x25, x29, #0x38
    3c04:	ldr	x8, [x0]
    3c08:	ldr	x9, [x8, #16]
    3c0c:	sub	x8, x29, #0x38
    3c10:	blr	x9
    3c14:	mov	w24, #0x104                 	// #260
    3c18:	sub	x8, x29, #0xc8
    3c1c:	add	x0, sp, #0xe0
    3c20:	add	x1, sp, #0xc8
    3c24:	strh	w24, [sp, #216]
    3c28:	stp	x25, xzr, [sp, #200]
    3c2c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    3c30:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    3c34:	add	x8, x8, #0x0
    3c38:	stp	x8, xzr, [sp, #176]
    3c3c:	sub	x8, x29, #0xb0
    3c40:	sub	x0, x29, #0xc8
    3c44:	add	x1, sp, #0xb0
    3c48:	strh	w23, [sp, #192]
    3c4c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    3c50:	ldr	x0, [x21, #16]
    3c54:	add	x21, sp, #0x78
    3c58:	ldr	x8, [x0]
    3c5c:	ldr	x9, [x8, #16]
    3c60:	add	x8, sp, #0x78
    3c64:	blr	x9
    3c68:	sub	x8, x29, #0x98
    3c6c:	sub	x0, x29, #0xb0
    3c70:	add	x1, sp, #0x98
    3c74:	strh	w24, [sp, #168]
    3c78:	stp	x21, xzr, [sp, #152]
    3c7c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    3c80:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    3c84:	add	x8, x8, #0x0
    3c88:	stp	x8, xzr, [sp, #96]
    3c8c:	sub	x8, x29, #0x80
    3c90:	sub	x0, x29, #0x98
    3c94:	add	x1, sp, #0x60
    3c98:	strh	w23, [sp, #112]
    3c9c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    3ca0:	ldr	x8, [x19]
    3ca4:	mov	x0, x19
    3ca8:	add	x21, sp, #0x28
    3cac:	ldr	x9, [x8, #40]
    3cb0:	add	x8, sp, #0x28
    3cb4:	blr	x9
    3cb8:	sub	x8, x29, #0x68
    3cbc:	sub	x0, x29, #0x80
    3cc0:	add	x1, sp, #0x48
    3cc4:	strh	w24, [sp, #88]
    3cc8:	stp	x21, xzr, [sp, #72]
    3ccc:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    3cd0:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    3cd4:	add	x8, x8, #0x0
    3cd8:	stp	x8, xzr, [sp, #16]
    3cdc:	sub	x8, x29, #0x50
    3ce0:	sub	x0, x29, #0x68
    3ce4:	add	x1, sp, #0x10
    3ce8:	strh	w23, [sp, #32]
    3cec:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    3cf0:	sub	x2, x29, #0x50
    3cf4:	mov	x0, x22
    3cf8:	mov	x1, x20
    3cfc:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    3d00:	add	x8, x28, #0x10
    3d04:	mov	x27, x28
    3d08:	ldr	x28, [x8]
    3d0c:	cbz	x28, 3d4c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x3b8>
    3d10:	ldr	x26, [x28, #40]
    3d14:	cmp	x25, x26
    3d18:	csel	x2, x25, x26, cc  // cc = lo, ul, last
    3d1c:	cbz	x2, 3d38 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x3a4>
    3d20:	ldr	x0, [x28, #32]
    3d24:	mov	x1, x24
    3d28:	bl	0 <memcmp>
    3d2c:	cbz	w0, 3d38 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x3a4>
    3d30:	tbz	w0, #31, 3d00 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x36c>
    3d34:	b	3d40 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x3ac>
    3d38:	cmp	x26, x25
    3d3c:	b.cs	3d00 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x36c>  // b.hs, b.nlast
    3d40:	add	x8, x28, #0x18
    3d44:	ldr	x28, [x8]
    3d48:	cbnz	x28, 3d10 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x37c>
    3d4c:	ldr	x8, [sp, #8]
    3d50:	cmp	x27, x8
    3d54:	b.eq	3e78 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4e4>  // b.none
    3d58:	ldr	x28, [x27, #40]
    3d5c:	cmp	x28, x25
    3d60:	csel	x2, x28, x25, cc  // cc = lo, ul, last
    3d64:	cbz	x2, 3e6c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4d8>
    3d68:	ldr	x1, [x27, #32]
    3d6c:	mov	x0, x24
    3d70:	bl	0 <memcmp>
    3d74:	ldr	x8, [sp, #8]
    3d78:	cbz	w0, 3e6c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4d8>
    3d7c:	tbnz	w0, #31, 3e74 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4e0>
    3d80:	b	3e78 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4e4>
    3d84:	ldr	x8, [x8, #32]
    3d88:	cmp	x8, #0x0
    3d8c:	cset	w0, eq  // eq = none
    3d90:	add	sp, sp, #0x1c0
    3d94:	ldp	x20, x19, [sp, #80]
    3d98:	ldp	x22, x21, [sp, #64]
    3d9c:	ldp	x24, x23, [sp, #48]
    3da0:	ldp	x26, x25, [sp, #32]
    3da4:	ldp	x28, x27, [sp, #16]
    3da8:	ldp	x29, x30, [sp], #96
    3dac:	b	1698 <_ZN4llvm7IntInit3getEl>
    3db0:	ldr	x23, [x19, #32]
    3db4:	cbz	x23, 3ff8 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x664>
    3db8:	ldrb	w8, [x23, #8]
    3dbc:	cmp	w8, #0x12
    3dc0:	csel	x21, x23, xzr, eq  // eq = none
    3dc4:	cbnz	x21, 3e3c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4a8>
    3dc8:	cmp	w8, #0x8
    3dcc:	b.eq	3dd8 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x444>  // b.none
    3dd0:	cmp	w8, #0x6
    3dd4:	b.ne	3e1c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x488>  // b.any
    3dd8:	ldr	x8, [x23]
    3ddc:	mov	x0, x23
    3de0:	sub	x19, x29, #0x38
    3de4:	ldr	x9, [x8, #40]
    3de8:	sub	x8, x29, #0x38
    3dec:	blr	x9
    3df0:	ldp	x0, x1, [x29, #-56]
    3df4:	bl	29c4 <_ZN4llvm10StringInit3getENS_9StringRefE>
    3df8:	ldur	x8, [x29, #-56]
    3dfc:	add	x9, x19, #0x10
    3e00:	mov	x21, x0
    3e04:	cmp	x8, x9
    3e08:	b.eq	3e3c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4a8>  // b.none
    3e0c:	mov	x0, x8
    3e10:	bl	0 <_ZdlPv>
    3e14:	b	3e3c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4a8>
    3e18:	ldr	x23, [x19, #32]
    3e1c:	ldr	x8, [x23]
    3e20:	mov	x0, x23
    3e24:	mov	x1, x22
    3e28:	ldr	x8, [x8, #64]
    3e2c:	blr	x8
    3e30:	mov	x21, x0
    3e34:	cbnz	x0, 3e3c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4a8>
    3e38:	mov	x21, x19
    3e3c:	mov	x0, x21
    3e40:	add	sp, sp, #0x1c0
    3e44:	ldp	x20, x19, [sp, #80]
    3e48:	ldp	x22, x21, [sp, #64]
    3e4c:	ldp	x24, x23, [sp, #48]
    3e50:	ldp	x26, x25, [sp, #32]
    3e54:	ldp	x28, x27, [sp, #16]
    3e58:	ldp	x29, x30, [sp], #96
    3e5c:	ret
    3e60:	mov	x24, x20
    3e64:	tbz	w21, #0, 3e38 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4a4>
    3e68:	b	3e88 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4f4>
    3e6c:	cmp	x25, x28
    3e70:	b.cs	3e78 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4e4>  // b.hs, b.nlast
    3e74:	mov	x27, x8
    3e78:	cmp	x27, x8
    3e7c:	b.eq	3f20 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x58c>  // b.none
    3e80:	ldr	x24, [x27, #64]
    3e84:	cbz	x24, 3f20 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x58c>
    3e88:	ldr	x21, [x24, #112]
    3e8c:	cbnz	x21, 3f14 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x580>
    3e90:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    3e94:	add	x0, x0, #0x0
    3e98:	mov	w1, #0x20                  	// #32
    3e9c:	mov	w2, #0x4                   	// #4
    3ea0:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    3ea4:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    3ea8:	ldr	d0, [x8]
    3eac:	sub	x8, x29, #0x38
    3eb0:	mov	x21, x0
    3eb4:	add	x22, x8, #0x10
    3eb8:	sub	x1, x29, #0x38
    3ebc:	mov	x0, x24
    3ec0:	stur	x22, [x29, #-56]
    3ec4:	stur	d0, [x29, #-48]
    3ec8:	bl	c9e0 <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE>
    3ecc:	ldur	x0, [x29, #-56]
    3ed0:	ldur	w1, [x29, #-48]
    3ed4:	bl	7e8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE>
    3ed8:	ldur	x8, [x29, #-56]
    3edc:	cmp	x8, x22
    3ee0:	mov	x22, x0
    3ee4:	b.eq	3ef0 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x55c>  // b.none
    3ee8:	mov	x0, x8
    3eec:	bl	0 <free>
    3ef0:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    3ef4:	ldr	x9, [x9]
    3ef8:	mov	w8, #0x6                   	// #6
    3efc:	strh	w8, [x21, #8]
    3f00:	stp	x22, x24, [x21, #16]
    3f04:	add	x8, x9, #0x10
    3f08:	str	x8, [x21]
    3f0c:	str	x21, [x24, #112]
    3f10:	ldr	x22, [x19, #16]
    3f14:	ldr	x0, [x21, #16]
    3f18:	mov	x1, x22
    3f1c:	b	3bd0 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x23c>
    3f20:	tbz	w21, #0, 3e38 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4a4>
    3f24:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    3f28:	add	x8, x8, #0x0
    3f2c:	mov	w21, #0x103                 	// #259
    3f30:	ldr	x19, [x20, #8]
    3f34:	ldr	w20, [x20, #16]
    3f38:	stp	x8, xzr, [sp, #40]
    3f3c:	strh	w21, [sp, #56]
    3f40:	ldr	x8, [x23, #24]
    3f44:	mov	w9, #0x105                 	// #261
    3f48:	sub	x10, x29, #0x80
    3f4c:	add	x0, sp, #0x28
    3f50:	stp	x8, x25, [x29, #-128]
    3f54:	add	x8, sp, #0x78
    3f58:	sub	x1, x29, #0x50
    3f5c:	sturh	w9, [x29, #-64]
    3f60:	stp	x10, xzr, [x29, #-80]
    3f64:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    3f68:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    3f6c:	add	x8, x8, #0x0
    3f70:	stp	x8, xzr, [x29, #-104]
    3f74:	sub	x8, x29, #0x38
    3f78:	add	x0, sp, #0x78
    3f7c:	sub	x1, x29, #0x68
    3f80:	sturh	w21, [x29, #-88]
    3f84:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    3f88:	sub	x2, x29, #0x38
    3f8c:	mov	x0, x19
    3f90:	mov	x1, x20
    3f94:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    3f98:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    3f9c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    3fa0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    3fa4:	add	x0, x0, #0x0
    3fa8:	add	x1, x1, #0x0
    3fac:	add	x3, x3, #0x0
    3fb0:	mov	w2, #0x69                  	// #105
    3fb4:	bl	0 <__assert_fail>
    3fb8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    3fbc:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    3fc0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    3fc4:	add	x0, x0, #0x0
    3fc8:	add	x1, x1, #0x0
    3fcc:	add	x3, x3, #0x0
    3fd0:	mov	w2, #0x69                  	// #105
    3fd4:	bl	0 <__assert_fail>
    3fd8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    3fdc:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    3fe0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    3fe4:	add	x0, x0, #0x0
    3fe8:	add	x1, x1, #0x0
    3fec:	add	x3, x3, #0x0
    3ff0:	mov	w2, #0x69                  	// #105
    3ff4:	bl	0 <__assert_fail>
    3ff8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    3ffc:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    4000:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    4004:	add	x0, x0, #0x0
    4008:	add	x1, x1, #0x0
    400c:	add	x3, x3, #0x0
    4010:	mov	w2, #0x69                  	// #105
    4014:	bl	0 <__assert_fail>
    4018:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    401c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    4020:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    4024:	add	x0, x0, #0x0
    4028:	add	x1, x1, #0x0
    402c:	add	x3, x3, #0x0
    4030:	mov	w2, #0x305                 	// #773
    4034:	bl	0 <__assert_fail>
    4038:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    403c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    4040:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    4044:	add	x0, x0, #0x0
    4048:	add	x1, x1, #0x0
    404c:	add	x3, x3, #0x0
    4050:	mov	w2, #0x69                  	// #105
    4054:	bl	0 <__assert_fail>
    4058:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    405c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    4060:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    4064:	add	x0, x0, #0x0
    4068:	add	x1, x1, #0x0
    406c:	add	x3, x3, #0x0
    4070:	mov	w2, #0x108                 	// #264
    4074:	bl	0 <__assert_fail>
    4078:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    407c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    4080:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    4084:	add	x0, x0, #0x0
    4088:	add	x1, x1, #0x0
    408c:	add	x3, x3, #0x0
    4090:	mov	w2, #0x2fe                 	// #766
    4094:	bl	0 <__assert_fail>
    4098:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    409c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    40a0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    40a4:	add	x0, x0, #0x0
    40a8:	add	x1, x1, #0x0
    40ac:	add	x3, x3, #0x0
    40b0:	mov	w2, #0x69                  	// #105
    40b4:	bl	0 <__assert_fail>
    40b8:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    40bc:	add	x8, x8, #0x0
    40c0:	mov	w9, #0x103                 	// #259
    40c4:	sub	x2, x29, #0x38
    40c8:	mov	x0, xzr
    40cc:	mov	x1, xzr
    40d0:	stp	x8, xzr, [x29, #-56]
    40d4:	sturh	w9, [x29, #-40]
    40d8:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    40dc:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    40e0:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    40e4:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    40e8:	add	x0, x0, #0x0
    40ec:	add	x1, x1, #0x0
    40f0:	add	x3, x3, #0x0
    40f4:	mov	w2, #0x2d8                 	// #728
    40f8:	bl	0 <__assert_fail>

00000000000040fc <_ZN4llvm7DefInit3getEPNS_6RecordE>:
    40fc:	sub	sp, sp, #0x60
    4100:	stp	x29, x30, [sp, #48]
    4104:	str	x21, [sp, #64]
    4108:	stp	x20, x19, [sp, #80]
    410c:	add	x29, sp, #0x30
    4110:	ldr	x20, [x0, #112]
    4114:	cbnz	x20, 419c <_ZN4llvm7DefInit3getEPNS_6RecordE+0xa0>
    4118:	mov	x19, x0
    411c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    4120:	add	x0, x0, #0x0
    4124:	mov	w1, #0x20                  	// #32
    4128:	mov	w2, #0x4                   	// #4
    412c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    4130:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    4134:	ldr	d0, [x8]
    4138:	mov	x8, sp
    413c:	mov	x20, x0
    4140:	add	x21, x8, #0x10
    4144:	mov	x1, sp
    4148:	mov	x0, x19
    414c:	str	x21, [sp]
    4150:	str	d0, [sp, #8]
    4154:	bl	c9e0 <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE>
    4158:	ldr	x0, [sp]
    415c:	ldr	w1, [sp, #8]
    4160:	bl	7e8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE>
    4164:	ldr	x8, [sp]
    4168:	cmp	x8, x21
    416c:	mov	x21, x0
    4170:	b.eq	417c <_ZN4llvm7DefInit3getEPNS_6RecordE+0x80>  // b.none
    4174:	mov	x0, x8
    4178:	bl	0 <free>
    417c:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    4180:	ldr	x9, [x9]
    4184:	mov	w8, #0x6                   	// #6
    4188:	strh	w8, [x20, #8]
    418c:	stp	x21, x19, [x20, #16]
    4190:	add	x8, x9, #0x10
    4194:	str	x8, [x20]
    4198:	str	x20, [x19, #112]
    419c:	mov	x0, x20
    41a0:	ldp	x20, x19, [sp, #80]
    41a4:	ldr	x21, [sp, #64]
    41a8:	ldp	x29, x30, [sp, #48]
    41ac:	add	sp, sp, #0x60
    41b0:	ret

00000000000041b4 <_ZNK4llvm7DagInit16getOperatorAsDefENS_8ArrayRefINS_5SMLocEEE>:
    41b4:	sub	sp, sp, #0x30
    41b8:	stp	x29, x30, [sp, #32]
    41bc:	add	x29, sp, #0x20
    41c0:	ldr	x9, [x0, #32]
    41c4:	cbz	x9, 41e4 <_ZNK4llvm7DagInit16getOperatorAsDefENS_8ArrayRefINS_5SMLocEEE+0x30>
    41c8:	ldrb	w10, [x9, #8]
    41cc:	cmp	w10, #0x6
    41d0:	b.ne	4204 <_ZNK4llvm7DagInit16getOperatorAsDefENS_8ArrayRefINS_5SMLocEEE+0x50>  // b.any
    41d4:	ldr	x0, [x9, #24]
    41d8:	ldp	x29, x30, [sp, #32]
    41dc:	add	sp, sp, #0x30
    41e0:	ret
    41e4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    41e8:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    41ec:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    41f0:	add	x0, x0, #0x0
    41f4:	add	x1, x1, #0x0
    41f8:	add	x3, x3, #0x0
    41fc:	mov	w2, #0x69                  	// #105
    4200:	bl	0 <__assert_fail>
    4204:	mov	x8, x2
    4208:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    420c:	add	x9, x9, #0x0
    4210:	mov	w10, #0x103                 	// #259
    4214:	add	x2, sp, #0x8
    4218:	mov	x0, x1
    421c:	mov	x1, x8
    4220:	stp	x9, xzr, [sp, #8]
    4224:	strh	w10, [sp, #24]
    4228:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>

000000000000422c <_ZNK4llvm8UnOpInit17resolveReferencesERNS_8ResolverE>:
    422c:	stp	x29, x30, [sp, #-32]!
    4230:	stp	x20, x19, [sp, #16]
    4234:	mov	x29, sp
    4238:	mov	x20, x0
    423c:	ldr	x0, [x0, #32]
    4240:	mov	x19, x1
    4244:	ldr	x8, [x0]
    4248:	ldr	x8, [x8, #96]
    424c:	blr	x8
    4250:	ldr	x8, [x20, #32]
    4254:	mov	x1, x0
    4258:	cmp	x8, x0
    425c:	b.eq	4280 <_ZNK4llvm8UnOpInit17resolveReferencesERNS_8ResolverE+0x54>  // b.none
    4260:	ldrb	w0, [x20, #9]
    4264:	ldr	x2, [x20, #16]
    4268:	bl	37d4 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE>
    426c:	ldr	x1, [x19, #8]
    4270:	ldrb	w2, [x19, #16]
    4274:	ldp	x20, x19, [sp, #16]
    4278:	ldp	x29, x30, [sp], #32
    427c:	b	3994 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb>
    4280:	ldrb	w8, [x19, #16]
    4284:	cbz	w8, 4290 <_ZNK4llvm8UnOpInit17resolveReferencesERNS_8ResolverE+0x64>
    4288:	ldrb	w8, [x20, #9]
    428c:	cbz	w8, 42a0 <_ZNK4llvm8UnOpInit17resolveReferencesERNS_8ResolverE+0x74>
    4290:	mov	x0, x20
    4294:	ldp	x20, x19, [sp, #16]
    4298:	ldp	x29, x30, [sp], #32
    429c:	ret
    42a0:	mov	w0, wzr
    42a4:	b	4264 <_ZNK4llvm8UnOpInit17resolveReferencesERNS_8ResolverE+0x38>

00000000000042a8 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev>:
    42a8:	sub	sp, sp, #0xc0
    42ac:	stp	x29, x30, [sp, #128]
    42b0:	stp	x24, x23, [sp, #144]
    42b4:	stp	x22, x21, [sp, #160]
    42b8:	stp	x20, x19, [sp, #176]
    42bc:	add	x29, sp, #0x80
    42c0:	sub	x9, x29, #0x20
    42c4:	add	x23, x9, #0x10
    42c8:	stp	x23, xzr, [x29, #-32]
    42cc:	sturb	wzr, [x29, #-16]
    42d0:	ldrb	w9, [x0, #9]
    42d4:	mov	x20, x0
    42d8:	mov	x19, x8
    42dc:	cmp	w9, #0x5
    42e0:	b.hi	43ac <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x104>  // b.pmore
    42e4:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    42e8:	add	x8, x8, #0x0
    42ec:	adr	x10, 42fc <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x54>
    42f0:	ldrb	w11, [x8, x9]
    42f4:	add	x10, x10, x11, lsl #2
    42f8:	br	x10
    42fc:	ldr	x0, [x20, #16]
    4300:	ldr	x8, [x0]
    4304:	ldr	x9, [x8, #16]
    4308:	mov	x8, sp
    430c:	blr	x9
    4310:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    4314:	add	x3, x3, #0x0
    4318:	mov	x0, sp
    431c:	mov	w4, #0x6                   	// #6
    4320:	mov	x1, xzr
    4324:	mov	x2, xzr
    4328:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    432c:	add	x8, sp, #0x20
    4330:	add	x22, x8, #0x10
    4334:	str	x22, [sp, #32]
    4338:	mov	x8, x0
    433c:	ldr	x9, [x8], #16
    4340:	cmp	x9, x8
    4344:	b.eq	45cc <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x324>  // b.none
    4348:	str	x9, [sp, #32]
    434c:	ldr	x9, [x0, #16]
    4350:	str	x9, [sp, #48]
    4354:	b	45d4 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x32c>
    4358:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    435c:	add	x3, x3, #0x0
    4360:	b	4398 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0xf0>
    4364:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    4368:	add	x3, x3, #0x0
    436c:	b	4384 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0xdc>
    4370:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    4374:	add	x3, x3, #0x0
    4378:	b	4384 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0xdc>
    437c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    4380:	add	x3, x3, #0x0
    4384:	sub	x0, x29, #0x20
    4388:	mov	w4, #0x5                   	// #5
    438c:	b	43a0 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0xf8>
    4390:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    4394:	add	x3, x3, #0x0
    4398:	sub	x0, x29, #0x20
    439c:	mov	w4, #0x6                   	// #6
    43a0:	mov	x1, xzr
    43a4:	mov	x2, xzr
    43a8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    43ac:	ldp	x21, x22, [x29, #-32]
    43b0:	add	x8, sp, #0x20
    43b4:	add	x24, x8, #0x10
    43b8:	str	x24, [sp, #32]
    43bc:	cbnz	x21, 43c4 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x11c>
    43c0:	cbnz	x22, 471c <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x474>
    43c4:	cmp	x22, #0x10
    43c8:	str	x22, [sp, #64]
    43cc:	b.cc	43f4 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x14c>  // b.lo, b.ul, b.last
    43d0:	add	x0, sp, #0x20
    43d4:	add	x1, sp, #0x40
    43d8:	mov	x2, xzr
    43dc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    43e0:	ldr	x8, [sp, #64]
    43e4:	str	x0, [sp, #32]
    43e8:	str	x8, [sp, #48]
    43ec:	cbnz	x22, 43fc <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x154>
    43f0:	b	441c <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x174>
    43f4:	mov	x0, x24
    43f8:	cbz	x22, 441c <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x174>
    43fc:	cmp	x22, #0x1
    4400:	b.ne	4410 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x168>  // b.any
    4404:	ldrb	w8, [x21]
    4408:	strb	w8, [x0]
    440c:	b	441c <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x174>
    4410:	mov	x1, x21
    4414:	mov	x2, x22
    4418:	bl	0 <memcpy>
    441c:	ldr	x8, [sp, #64]
    4420:	ldr	x9, [sp, #32]
    4424:	str	x8, [sp, #40]
    4428:	strb	wzr, [x9, x8]
    442c:	ldr	x8, [sp, #40]
    4430:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    4434:	cmp	x8, x9
    4438:	b.eq	4710 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x468>  // b.none
    443c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    4440:	add	x1, x1, #0x0
    4444:	add	x0, sp, #0x20
    4448:	mov	w2, #0x1                   	// #1
    444c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    4450:	ldr	x0, [x20, #32]
    4454:	mov	x20, sp
    4458:	ldr	x8, [x0]
    445c:	ldr	x9, [x8, #40]
    4460:	mov	x8, sp
    4464:	blr	x9
    4468:	ldp	x3, x4, [sp, #32]
    446c:	ldp	x1, x2, [sp]
    4470:	ldr	x9, [sp, #48]
    4474:	mov	w10, #0xf                   	// #15
    4478:	cmp	x3, x24
    447c:	add	x8, x2, x4
    4480:	csel	x9, x10, x9, eq  // eq = none
    4484:	cmp	x8, x9
    4488:	b.ls	44a8 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x200>  // b.plast
    448c:	ldr	x9, [sp, #16]
    4490:	add	x10, x20, #0x10
    4494:	cmp	x1, x10
    4498:	mov	w10, #0xf                   	// #15
    449c:	csel	x9, x10, x9, eq  // eq = none
    44a0:	cmp	x8, x9
    44a4:	b.ls	44b4 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x20c>  // b.plast
    44a8:	add	x0, sp, #0x20
    44ac:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    44b0:	b	44c4 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x21c>
    44b4:	mov	x0, sp
    44b8:	mov	x1, xzr
    44bc:	mov	x2, xzr
    44c0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    44c4:	add	x8, sp, #0x40
    44c8:	add	x20, x8, #0x10
    44cc:	str	x20, [sp, #64]
    44d0:	mov	x8, x0
    44d4:	ldr	x9, [x8], #16
    44d8:	cmp	x9, x8
    44dc:	b.eq	44f0 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x248>  // b.none
    44e0:	str	x9, [sp, #64]
    44e4:	ldr	x9, [x0, #16]
    44e8:	str	x9, [sp, #80]
    44ec:	b	44f8 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x250>
    44f0:	ldr	q0, [x9]
    44f4:	str	q0, [x20]
    44f8:	ldr	x9, [x0, #8]
    44fc:	str	x9, [sp, #72]
    4500:	stp	x8, xzr, [x0]
    4504:	strb	wzr, [x0, #16]
    4508:	ldr	x8, [sp, #72]
    450c:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    4510:	cmp	x8, x9
    4514:	b.eq	4710 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x468>  // b.none
    4518:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    451c:	add	x1, x1, #0x0
    4520:	add	x0, sp, #0x40
    4524:	mov	w2, #0x1                   	// #1
    4528:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    452c:	add	x9, x19, #0x10
    4530:	str	x9, [x19]
    4534:	mov	x8, x0
    4538:	ldr	x10, [x8], #16
    453c:	cmp	x10, x8
    4540:	b.eq	4554 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x2ac>  // b.none
    4544:	str	x10, [x19]
    4548:	ldr	x9, [x0, #16]
    454c:	str	x9, [x19, #16]
    4550:	b	455c <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x2b4>
    4554:	ldr	q0, [x10]
    4558:	str	q0, [x9]
    455c:	ldr	x9, [x0, #8]
    4560:	str	x9, [x19, #8]
    4564:	stp	x8, xzr, [x0]
    4568:	strb	wzr, [x0, #16]
    456c:	ldr	x0, [sp, #64]
    4570:	cmp	x0, x20
    4574:	b.eq	457c <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x2d4>  // b.none
    4578:	bl	0 <_ZdlPv>
    457c:	ldr	x0, [sp]
    4580:	mov	x8, sp
    4584:	add	x8, x8, #0x10
    4588:	cmp	x0, x8
    458c:	b.eq	4594 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x2ec>  // b.none
    4590:	bl	0 <_ZdlPv>
    4594:	ldr	x0, [sp, #32]
    4598:	cmp	x0, x24
    459c:	b.eq	45a4 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x2fc>  // b.none
    45a0:	bl	0 <_ZdlPv>
    45a4:	ldur	x0, [x29, #-32]
    45a8:	cmp	x0, x23
    45ac:	b.eq	45b4 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x30c>  // b.none
    45b0:	bl	0 <_ZdlPv>
    45b4:	ldp	x20, x19, [sp, #176]
    45b8:	ldp	x22, x21, [sp, #160]
    45bc:	ldp	x24, x23, [sp, #144]
    45c0:	ldp	x29, x30, [sp, #128]
    45c4:	add	sp, sp, #0xc0
    45c8:	ret
    45cc:	ldr	q0, [x9]
    45d0:	str	q0, [x22]
    45d4:	ldr	x9, [x0, #8]
    45d8:	str	x9, [sp, #40]
    45dc:	stp	x8, xzr, [x0]
    45e0:	strb	wzr, [x0, #16]
    45e4:	ldr	x8, [sp, #40]
    45e8:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    45ec:	cmp	x8, x9
    45f0:	b.eq	4710 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x468>  // b.none
    45f4:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    45f8:	add	x1, x1, #0x0
    45fc:	add	x0, sp, #0x20
    4600:	mov	w2, #0x1                   	// #1
    4604:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    4608:	add	x8, sp, #0x40
    460c:	add	x21, x8, #0x10
    4610:	str	x21, [sp, #64]
    4614:	mov	x8, x0
    4618:	ldr	x9, [x8], #16
    461c:	cmp	x9, x8
    4620:	b.eq	4634 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x38c>  // b.none
    4624:	str	x9, [sp, #64]
    4628:	ldr	x9, [x0, #16]
    462c:	str	x9, [sp, #80]
    4630:	b	463c <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x394>
    4634:	ldr	q0, [x9]
    4638:	str	q0, [x21]
    463c:	ldr	x9, [x0, #8]
    4640:	str	x9, [sp, #72]
    4644:	stp	x8, xzr, [x0]
    4648:	strb	wzr, [x0, #16]
    464c:	ldr	x9, [sp, #64]
    4650:	cmp	x9, x21
    4654:	b.eq	4684 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x3dc>  // b.none
    4658:	ldur	x8, [x29, #-32]
    465c:	ldur	x10, [x29, #-16]
    4660:	ldur	q0, [sp, #72]
    4664:	stur	x9, [x29, #-32]
    4668:	cmp	x8, x23
    466c:	csel	x8, xzr, x8, eq  // eq = none
    4670:	stur	q0, [x29, #-24]
    4674:	cbz	x8, 46a4 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x3fc>
    4678:	str	x8, [sp, #64]
    467c:	str	x10, [sp, #80]
    4680:	b	46cc <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x424>
    4684:	ldr	x2, [sp, #72]
    4688:	cbz	x2, 46b8 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x410>
    468c:	ldur	x0, [x29, #-32]
    4690:	cmp	x2, #0x1
    4694:	b.ne	46b0 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x408>  // b.any
    4698:	ldrb	w8, [sp, #80]
    469c:	strb	w8, [x0]
    46a0:	b	46b8 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x410>
    46a4:	mov	x8, x21
    46a8:	str	x21, [sp, #64]
    46ac:	b	46cc <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x424>
    46b0:	mov	x1, x21
    46b4:	bl	0 <memcpy>
    46b8:	ldr	x8, [sp, #72]
    46bc:	ldur	x9, [x29, #-32]
    46c0:	stur	x8, [x29, #-24]
    46c4:	strb	wzr, [x9, x8]
    46c8:	ldr	x8, [sp, #64]
    46cc:	str	xzr, [sp, #72]
    46d0:	strb	wzr, [x8]
    46d4:	ldr	x0, [sp, #64]
    46d8:	cmp	x0, x21
    46dc:	b.eq	46e4 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x43c>  // b.none
    46e0:	bl	0 <_ZdlPv>
    46e4:	ldr	x0, [sp, #32]
    46e8:	cmp	x0, x22
    46ec:	b.eq	46f4 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x44c>  // b.none
    46f0:	bl	0 <_ZdlPv>
    46f4:	ldr	x0, [sp]
    46f8:	mov	x8, sp
    46fc:	add	x8, x8, #0x10
    4700:	cmp	x0, x8
    4704:	b.eq	43ac <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x104>  // b.none
    4708:	bl	0 <_ZdlPv>
    470c:	b	43ac <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x104>
    4710:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    4714:	add	x0, x0, #0x0
    4718:	bl	0 <_ZSt20__throw_length_errorPKc>
    471c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    4720:	add	x0, x0, #0x0
    4724:	bl	0 <_ZSt19__throw_logic_errorPKc>

0000000000004728 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE>:
    4728:	sub	sp, sp, #0xe0
    472c:	stp	x29, x30, [sp, #160]
    4730:	stp	x24, x23, [sp, #176]
    4734:	stp	x22, x21, [sp, #192]
    4738:	stp	x20, x19, [sp, #208]
    473c:	add	x29, sp, #0xa0
    4740:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    4744:	add	x8, x8, #0x0
    4748:	ldarb	w8, [x8]
    474c:	mov	x21, x3
    4750:	mov	x19, x2
    4754:	mov	x20, x1
    4758:	mov	w22, w0
    475c:	tbz	w8, #0, 484c <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE+0x124>
    4760:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    4764:	ldr	d0, [x8]
    4768:	add	x8, sp, #0x10
    476c:	add	x24, x8, #0x10
    4770:	and	w1, w22, #0xff
    4774:	add	x0, sp, #0x10
    4778:	str	x24, [sp, #16]
    477c:	str	d0, [sp, #24]
    4780:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
    4784:	add	x0, sp, #0x10
    4788:	mov	x1, x20
    478c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    4790:	add	x0, sp, #0x10
    4794:	mov	x1, x19
    4798:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    479c:	add	x0, sp, #0x10
    47a0:	mov	x1, x21
    47a4:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    47a8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    47ac:	add	x0, x0, #0x0
    47b0:	add	x1, sp, #0x10
    47b4:	add	x2, sp, #0x8
    47b8:	str	xzr, [sp, #8]
    47bc:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    47c0:	cbz	x0, 47cc <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE+0xa4>
    47c4:	sub	x23, x0, #0x18
    47c8:	b	4820 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE+0xf8>
    47cc:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    47d0:	add	x0, x0, #0x0
    47d4:	mov	w1, #0x30                  	// #48
    47d8:	mov	w2, #0x4                   	// #4
    47dc:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    47e0:	strb	w22, [x0, #9]
    47e4:	str	x21, [x0, #16]
    47e8:	adrp	x9, 828 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x40>
    47ec:	ldr	x9, [x9]
    47f0:	mov	w8, #0xb                   	// #11
    47f4:	ldr	x2, [sp, #8]
    47f8:	mov	x1, x0
    47fc:	strb	w8, [x0, #8]
    4800:	add	x8, x9, #0x10
    4804:	mov	x23, x0
    4808:	str	xzr, [x1, #24]!
    480c:	str	x8, [x0]
    4810:	stp	x20, x19, [x0, #32]
    4814:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    4818:	add	x0, x0, #0x0
    481c:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    4820:	ldr	x0, [sp, #16]
    4824:	cmp	x0, x24
    4828:	b.eq	4830 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE+0x108>  // b.none
    482c:	bl	0 <free>
    4830:	mov	x0, x23
    4834:	ldp	x20, x19, [sp, #208]
    4838:	ldp	x22, x21, [sp, #192]
    483c:	ldp	x24, x23, [sp, #176]
    4840:	ldp	x29, x30, [sp, #160]
    4844:	add	sp, sp, #0xe0
    4848:	ret
    484c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    4850:	add	x0, x0, #0x0
    4854:	bl	0 <__cxa_guard_acquire>
    4858:	cbz	w0, 4760 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE+0x38>
    485c:	adrp	x23, 0 <_ZNK4llvm5RecTy4dumpEv>
    4860:	add	x23, x23, #0x0
    4864:	mov	w1, #0x6                   	// #6
    4868:	mov	x0, x23
    486c:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    4870:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    4874:	ldr	x8, [x8]
    4878:	adrp	x0, 0 <_ZN4llvm14FoldingSetBaseD2Ev>
    487c:	adrp	x2, 0 <__dso_handle>
    4880:	add	x2, x2, #0x0
    4884:	add	x8, x8, #0x10
    4888:	str	x8, [x23]
    488c:	ldr	x0, [x0]
    4890:	mov	x1, x23
    4894:	bl	0 <__cxa_atexit>
    4898:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    489c:	add	x0, x0, #0x0
    48a0:	bl	0 <__cxa_guard_release>
    48a4:	b	4760 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE+0x38>

00000000000048a8 <_ZNK4llvm9BinOpInit7ProfileERNS_16FoldingSetNodeIDE>:
    48a8:	stp	x29, x30, [sp, #-48]!
    48ac:	stp	x22, x21, [sp, #16]
    48b0:	stp	x20, x19, [sp, #32]
    48b4:	mov	x29, sp
    48b8:	ldrb	w8, [x0, #9]
    48bc:	ldp	x19, x20, [x0, #32]
    48c0:	ldr	x21, [x0, #16]
    48c4:	mov	x22, x1
    48c8:	mov	x0, x1
    48cc:	mov	w1, w8
    48d0:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
    48d4:	mov	x0, x22
    48d8:	mov	x1, x19
    48dc:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    48e0:	mov	x0, x22
    48e4:	mov	x1, x20
    48e8:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    48ec:	mov	x0, x22
    48f0:	mov	x1, x21
    48f4:	ldp	x20, x19, [sp, #32]
    48f8:	ldp	x22, x21, [sp, #16]
    48fc:	ldp	x29, x30, [sp], #48
    4900:	b	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>

0000000000004904 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>:
    4904:	sub	sp, sp, #0x90
    4908:	stp	x29, x30, [sp, #96]
    490c:	stp	x22, x21, [sp, #112]
    4910:	stp	x20, x19, [sp, #128]
    4914:	add	x29, sp, #0x60
    4918:	cbz	x0, 4a68 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_+0x164>
    491c:	ldrb	w8, [x0, #8]
    4920:	mov	x19, x1
    4924:	mov	x1, x0
    4928:	cmp	w8, #0x12
    492c:	b.ne	4a44 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_+0x140>  // b.any
    4930:	cbz	x19, 4a68 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_+0x164>
    4934:	ldrb	w8, [x19, #8]
    4938:	cmp	w8, #0x12
    493c:	b.ne	4a44 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_+0x140>  // b.any
    4940:	ldp	x22, x21, [x1, #24]
    4944:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    4948:	ldr	d0, [x9]
    494c:	mov	x8, sp
    4950:	add	x20, x8, #0x10
    4954:	cmp	x21, #0x51
    4958:	str	x20, [sp]
    495c:	str	d0, [sp, #8]
    4960:	b.cc	4978 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_+0x74>  // b.lo, b.ul, b.last
    4964:	mov	x0, sp
    4968:	mov	w3, #0x1                   	// #1
    496c:	mov	x1, x20
    4970:	mov	x2, x21
    4974:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4978:	cbz	x21, 4994 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_+0x90>
    497c:	ldr	x8, [sp]
    4980:	ldr	w9, [sp, #8]
    4984:	mov	x1, x22
    4988:	mov	x2, x21
    498c:	add	x0, x8, x9
    4990:	bl	0 <memcpy>
    4994:	ldp	w9, w8, [sp, #8]
    4998:	add	x9, x21, x9
    499c:	cmp	x9, x8
    49a0:	b.hi	4a88 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_+0x184>  // b.pmore
    49a4:	str	w9, [sp, #8]
    49a8:	ldp	x19, x21, [x19, #24]
    49ac:	and	x9, x9, #0xffffffff
    49b0:	sub	x8, x8, x9
    49b4:	cmp	x21, x8
    49b8:	b.ls	49d0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_+0xcc>  // b.plast
    49bc:	add	x2, x21, x9
    49c0:	mov	x0, sp
    49c4:	mov	w3, #0x1                   	// #1
    49c8:	mov	x1, x20
    49cc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    49d0:	cbz	x21, 49ec <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_+0xe8>
    49d4:	ldr	x8, [sp]
    49d8:	ldr	w9, [sp, #8]
    49dc:	mov	x1, x19
    49e0:	mov	x2, x21
    49e4:	add	x0, x8, x9
    49e8:	bl	0 <memcpy>
    49ec:	ldp	w8, w9, [sp, #8]
    49f0:	add	x8, x21, x8
    49f4:	cmp	x8, x9
    49f8:	b.hi	4a88 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_+0x184>  // b.pmore
    49fc:	ldr	x0, [sp]
    4a00:	and	x1, x8, #0xffffffff
    4a04:	str	w8, [sp, #8]
    4a08:	bl	29c4 <_ZN4llvm10StringInit3getENS_9StringRefE>
    4a0c:	ldr	x8, [sp]
    4a10:	mov	x9, sp
    4a14:	add	x9, x9, #0x10
    4a18:	mov	x19, x0
    4a1c:	cmp	x8, x9
    4a20:	b.eq	4a2c <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_+0x128>  // b.none
    4a24:	mov	x0, x8
    4a28:	bl	0 <free>
    4a2c:	mov	x0, x19
    4a30:	ldp	x20, x19, [sp, #128]
    4a34:	ldp	x22, x21, [sp, #112]
    4a38:	ldp	x29, x30, [sp, #96]
    4a3c:	add	sp, sp, #0x90
    4a40:	ret
    4a44:	adrp	x3, d0 <_ZNK4llvm5RecTy19typeIsConvertibleToEPKS0_+0xc>
    4a48:	ldr	x3, [x3]
    4a4c:	mov	x2, x19
    4a50:	ldp	x20, x19, [sp, #128]
    4a54:	ldp	x22, x21, [sp, #112]
    4a58:	ldp	x29, x30, [sp, #96]
    4a5c:	mov	w0, #0x9                   	// #9
    4a60:	add	sp, sp, #0x90
    4a64:	b	4728 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE>
    4a68:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    4a6c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    4a70:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    4a74:	add	x0, x0, #0x0
    4a78:	add	x1, x1, #0x0
    4a7c:	add	x3, x3, #0x0
    4a80:	mov	w2, #0x69                  	// #105
    4a84:	bl	0 <__assert_fail>
    4a88:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    4a8c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    4a90:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    4a94:	add	x0, x0, #0x0
    4a98:	add	x1, x1, #0x0
    4a9c:	add	x3, x3, #0x0
    4aa0:	mov	w2, #0x43                  	// #67
    4aa4:	bl	0 <__assert_fail>

0000000000004aa8 <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE>:
    4aa8:	sub	sp, sp, #0x70
    4aac:	stp	x29, x30, [sp, #80]
    4ab0:	stp	x20, x19, [sp, #96]
    4ab4:	add	x29, sp, #0x50
    4ab8:	ldr	x3, [x0, #16]
    4abc:	cbz	x3, 4bb0 <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE+0x108>
    4ac0:	ldr	w8, [x3, #8]
    4ac4:	cmp	w8, #0x5
    4ac8:	b.ne	4bd0 <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE+0x128>  // b.any
    4acc:	ldrb	w8, [x0, #8]
    4ad0:	mov	x19, x0
    4ad4:	mov	x20, x1
    4ad8:	cmp	w8, #0x9
    4adc:	b.ne	4b94 <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE+0xec>  // b.any
    4ae0:	cbz	x20, 4bf0 <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE+0x148>
    4ae4:	ldrb	w8, [x20, #8]
    4ae8:	cmp	w8, #0x9
    4aec:	b.ne	4b94 <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE+0xec>  // b.any
    4af0:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    4af4:	ldr	d0, [x8]
    4af8:	mov	x8, sp
    4afc:	add	x1, x8, #0x10
    4b00:	str	x1, [sp]
    4b04:	str	d0, [sp, #8]
    4b08:	ldr	w8, [x19, #32]
    4b0c:	add	x2, x19, #0x28
    4b10:	mov	x0, sp
    4b14:	add	x3, x2, x8, lsl #3
    4b18:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    4b1c:	ldr	x8, [sp]
    4b20:	ldr	w9, [sp, #8]
    4b24:	ldr	w10, [x20, #32]
    4b28:	add	x2, x20, #0x28
    4b2c:	mov	x0, sp
    4b30:	add	x1, x8, x9, lsl #3
    4b34:	add	x3, x2, x10, lsl #3
    4b38:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    4b3c:	ldr	x8, [x19, #16]
    4b40:	cbz	x8, 4bb0 <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE+0x108>
    4b44:	ldr	w9, [x8, #8]
    4b48:	cmp	w9, #0x5
    4b4c:	b.ne	4c10 <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE+0x168>  // b.any
    4b50:	ldr	x0, [sp]
    4b54:	ldr	w1, [sp, #8]
    4b58:	ldr	x2, [x8, #24]
    4b5c:	bl	2b9c <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    4b60:	ldr	x8, [sp]
    4b64:	mov	x9, sp
    4b68:	add	x9, x9, #0x10
    4b6c:	mov	x19, x0
    4b70:	cmp	x8, x9
    4b74:	b.eq	4b80 <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE+0xd8>  // b.none
    4b78:	mov	x0, x8
    4b7c:	bl	0 <free>
    4b80:	mov	x0, x19
    4b84:	ldp	x20, x19, [sp, #96]
    4b88:	ldp	x29, x30, [sp, #80]
    4b8c:	add	sp, sp, #0x70
    4b90:	ret
    4b94:	mov	x1, x19
    4b98:	mov	x2, x20
    4b9c:	ldp	x20, x19, [sp, #96]
    4ba0:	ldp	x29, x30, [sp, #80]
    4ba4:	mov	w0, #0x7                   	// #7
    4ba8:	add	sp, sp, #0x70
    4bac:	b	4728 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE>
    4bb0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    4bb4:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    4bb8:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    4bbc:	add	x0, x0, #0x0
    4bc0:	add	x1, x1, #0x0
    4bc4:	add	x3, x3, #0x0
    4bc8:	mov	w2, #0x69                  	// #105
    4bcc:	bl	0 <__assert_fail>
    4bd0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    4bd4:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    4bd8:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    4bdc:	add	x0, x0, #0x0
    4be0:	add	x1, x1, #0x0
    4be4:	add	x3, x3, #0x0
    4be8:	mov	w2, #0x375                 	// #885
    4bec:	bl	0 <__assert_fail>
    4bf0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    4bf4:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    4bf8:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    4bfc:	add	x0, x0, #0x0
    4c00:	add	x1, x1, #0x0
    4c04:	add	x3, x3, #0x0
    4c08:	mov	w2, #0x69                  	// #105
    4c0c:	bl	0 <__assert_fail>
    4c10:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    4c14:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    4c18:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    4c1c:	add	x0, x0, #0x0
    4c20:	add	x1, x1, #0x0
    4c24:	add	x3, x3, #0x0
    4c28:	mov	w2, #0x108                 	// #264
    4c2c:	bl	0 <__assert_fail>

0000000000004c30 <_ZN4llvm9BinOpInit12getListSplatEPNS_9TypedInitEPNS_4InitE>:
    4c30:	ldr	x3, [x0, #16]
    4c34:	mov	x8, x0
    4c38:	mov	w0, #0x8                   	// #8
    4c3c:	mov	x2, x1
    4c40:	mov	x1, x8
    4c44:	b	4728 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE>

0000000000004c48 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE>:
    4c48:	sub	sp, sp, #0x1f0
    4c4c:	stp	x29, x30, [sp, #400]
    4c50:	str	x28, [sp, #416]
    4c54:	stp	x26, x25, [sp, #432]
    4c58:	stp	x24, x23, [sp, #448]
    4c5c:	stp	x22, x21, [sp, #464]
    4c60:	stp	x20, x19, [sp, #480]
    4c64:	add	x29, sp, #0x190
    4c68:	ldrb	w8, [x0, #9]
    4c6c:	mov	x19, x0
    4c70:	cmp	w8, #0x11
    4c74:	b.hi	5730 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xae8>  // b.pmore
    4c78:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    4c7c:	add	x9, x9, #0x0
    4c80:	adr	x10, 4c90 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x48>
    4c84:	ldrh	w11, [x9, x8, lsl #1]
    4c88:	add	x10, x10, x11, lsl #2
    4c8c:	br	x10
    4c90:	ldr	x0, [x19, #32]
    4c94:	adrp	x1, b8 <_ZN4llvm5RecTy9getListTyEv+0x4c>
    4c98:	ldr	x8, [x0]
    4c9c:	ldr	x8, [x8, #64]
    4ca0:	ldr	x1, [x1]
    4ca4:	blr	x8
    4ca8:	cbz	x0, 4ce8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa0>
    4cac:	ldrb	w8, [x0, #8]
    4cb0:	cmp	w8, #0x8
    4cb4:	csel	x20, x0, xzr, eq  // eq = none
    4cb8:	b	4cec <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa4>
    4cbc:	ldr	x0, [x19, #32]
    4cc0:	adrp	x1, b8 <_ZN4llvm5RecTy9getListTyEv+0x4c>
    4cc4:	ldr	x8, [x0]
    4cc8:	ldr	x8, [x8, #64]
    4ccc:	ldr	x1, [x1]
    4cd0:	blr	x8
    4cd4:	cbz	x0, 4d4c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x104>
    4cd8:	ldrb	w8, [x0, #8]
    4cdc:	cmp	w8, #0x8
    4ce0:	csel	x21, x0, xzr, eq  // eq = none
    4ce4:	b	4d50 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x108>
    4ce8:	mov	x20, xzr
    4cec:	ldr	x0, [x19, #40]
    4cf0:	adrp	x1, b8 <_ZN4llvm5RecTy9getListTyEv+0x4c>
    4cf4:	ldr	x8, [x0]
    4cf8:	ldr	x8, [x8, #64]
    4cfc:	ldr	x1, [x1]
    4d00:	blr	x8
    4d04:	cbz	x0, 5730 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xae8>
    4d08:	cbz	x20, 5730 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xae8>
    4d0c:	ldrb	w8, [x0, #8]
    4d10:	cmp	w8, #0x8
    4d14:	b.ne	5730 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xae8>  // b.any
    4d18:	ldrb	w10, [x19, #9]
    4d1c:	cmp	w10, #0x6
    4d20:	b.hi	596c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xd24>  // b.pmore
    4d24:	ldr	x8, [x20, #24]
    4d28:	ldr	x9, [x0, #24]
    4d2c:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    4d30:	add	x11, x11, #0x0
    4d34:	adr	x12, 4d44 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xfc>
    4d38:	ldrh	w13, [x11, x10, lsl #1]
    4d3c:	add	x12, x12, x13, lsl #2
    4d40:	br	x12
    4d44:	add	x0, x9, x8
    4d48:	b	5348 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x700>
    4d4c:	mov	x21, xzr
    4d50:	ldr	x0, [x19, #40]
    4d54:	adrp	x1, b8 <_ZN4llvm5RecTy9getListTyEv+0x4c>
    4d58:	ldr	x8, [x0]
    4d5c:	ldr	x8, [x8, #64]
    4d60:	ldr	x1, [x1]
    4d64:	blr	x8
    4d68:	cbz	x0, 4dc0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x178>
    4d6c:	ldrb	w9, [x0, #8]
    4d70:	ldrb	w20, [x19, #9]
    4d74:	cmp	w9, #0x8
    4d78:	csel	x8, x0, xzr, eq  // eq = none
    4d7c:	cbz	x21, 4dc4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x17c>
    4d80:	cmp	w9, #0x8
    4d84:	b.ne	4dc4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x17c>  // b.any
    4d88:	sub	w9, w20, #0xb
    4d8c:	cmp	w9, #0x5
    4d90:	b.hi	59c4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xd7c>  // b.pmore
    4d94:	adrp	x10, 0 <_ZNK4llvm5RecTy4dumpEv>
    4d98:	add	x10, x10, #0x0
    4d9c:	adr	x11, 4dac <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x164>
    4da0:	ldrh	w12, [x10, x9, lsl #1]
    4da4:	add	x11, x11, x12, lsl #2
    4da8:	br	x11
    4dac:	ldr	x9, [x21, #24]
    4db0:	ldr	x8, [x8, #24]
    4db4:	cmp	x9, x8
    4db8:	cset	w19, eq  // eq = none
    4dbc:	b	5378 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x730>
    4dc0:	ldrb	w20, [x19, #9]
    4dc4:	sub	w8, w20, #0xb
    4dc8:	cmp	w8, #0x1
    4dcc:	b.hi	5730 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xae8>  // b.pmore
    4dd0:	ldr	x8, [x19, #32]
    4dd4:	cbz	x8, 592c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xce4>
    4dd8:	ldrb	w10, [x8, #8]
    4ddc:	ldr	x9, [x19, #40]
    4de0:	cmp	w10, #0x12
    4de4:	csel	x8, x8, xzr, eq  // eq = none
    4de8:	cbz	x9, 592c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xce4>
    4dec:	ldrb	w11, [x9, #8]
    4df0:	cmp	w11, #0x12
    4df4:	csel	x9, x9, xzr, eq  // eq = none
    4df8:	cmp	w10, #0x12
    4dfc:	b.ne	5730 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xae8>  // b.any
    4e00:	cmp	w11, #0x12
    4e04:	b.ne	5730 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xae8>  // b.any
    4e08:	ldr	x2, [x8, #32]
    4e0c:	ldr	x10, [x9, #32]
    4e10:	cmp	x2, x10
    4e14:	b.ne	52c4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x67c>  // b.any
    4e18:	cbz	x2, 5468 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x820>
    4e1c:	ldr	x0, [x8, #24]
    4e20:	ldr	x1, [x9, #24]
    4e24:	bl	0 <bcmp>
    4e28:	cmp	w0, #0x0
    4e2c:	cset	w19, eq  // eq = none
    4e30:	b	546c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x824>
    4e34:	ldr	x8, [x19, #32]
    4e38:	cbz	x8, 592c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xce4>
    4e3c:	ldrb	w9, [x8, #8]
    4e40:	ldr	x10, [x19, #40]
    4e44:	cmp	w9, #0x12
    4e48:	csel	x8, x8, xzr, eq  // eq = none
    4e4c:	cbz	x10, 592c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xce4>
    4e50:	ldrb	w11, [x10, #8]
    4e54:	cmp	w11, #0x12
    4e58:	csel	x22, x10, xzr, eq  // eq = none
    4e5c:	cmp	w9, #0x12
    4e60:	b.ne	5730 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xae8>  // b.any
    4e64:	cmp	w11, #0x12
    4e68:	b.ne	5730 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xae8>  // b.any
    4e6c:	ldp	x21, x20, [x8, #24]
    4e70:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    4e74:	ldr	d0, [x9]
    4e78:	sub	x8, x29, #0x60
    4e7c:	add	x19, x8, #0x10
    4e80:	cmp	x20, #0x51
    4e84:	stur	x19, [x29, #-96]
    4e88:	stur	d0, [x29, #-88]
    4e8c:	b.cc	4ea4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x25c>  // b.lo, b.ul, b.last
    4e90:	sub	x0, x29, #0x60
    4e94:	mov	w3, #0x1                   	// #1
    4e98:	mov	x1, x19
    4e9c:	mov	x2, x20
    4ea0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4ea4:	cbz	x20, 4ec0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x278>
    4ea8:	ldur	x8, [x29, #-96]
    4eac:	ldur	w9, [x29, #-88]
    4eb0:	mov	x1, x21
    4eb4:	mov	x2, x20
    4eb8:	add	x0, x8, x9
    4ebc:	bl	0 <memcpy>
    4ec0:	ldp	w9, w8, [x29, #-88]
    4ec4:	add	x9, x20, x9
    4ec8:	cmp	x9, x8
    4ecc:	b.hi	58cc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xc84>  // b.pmore
    4ed0:	stur	w9, [x29, #-88]
    4ed4:	ldp	x21, x20, [x22, #24]
    4ed8:	and	x9, x9, #0xffffffff
    4edc:	sub	x8, x8, x9
    4ee0:	cmp	x20, x8
    4ee4:	b.ls	4efc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x2b4>  // b.plast
    4ee8:	add	x2, x20, x9
    4eec:	sub	x0, x29, #0x60
    4ef0:	mov	w3, #0x1                   	// #1
    4ef4:	mov	x1, x19
    4ef8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4efc:	cbz	x20, 4f18 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x2d0>
    4f00:	ldur	x8, [x29, #-96]
    4f04:	ldur	w9, [x29, #-88]
    4f08:	mov	x1, x21
    4f0c:	mov	x2, x20
    4f10:	add	x0, x8, x9
    4f14:	bl	0 <memcpy>
    4f18:	ldp	w8, w9, [x29, #-88]
    4f1c:	add	x8, x20, x8
    4f20:	cmp	x8, x9
    4f24:	b.hi	58cc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xc84>  // b.pmore
    4f28:	ldur	x0, [x29, #-96]
    4f2c:	and	x1, x8, #0xffffffff
    4f30:	stur	w8, [x29, #-88]
    4f34:	bl	29c4 <_ZN4llvm10StringInit3getENS_9StringRefE>
    4f38:	b	5448 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x800>
    4f3c:	ldr	x9, [x19, #32]
    4f40:	cbz	x9, 5984 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xd3c>
    4f44:	ldrb	w8, [x9, #8]
    4f48:	ldr	x10, [x19, #40]
    4f4c:	cmp	w8, #0x9
    4f50:	csel	x20, x9, xzr, eq  // eq = none
    4f54:	cbz	x10, 5984 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xd3c>
    4f58:	ldrb	w9, [x10, #8]
    4f5c:	cmp	w9, #0x9
    4f60:	csel	x21, x10, xzr, eq  // eq = none
    4f64:	cmp	w8, #0x9
    4f68:	b.ne	5730 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xae8>  // b.any
    4f6c:	cmp	w9, #0x9
    4f70:	b.ne	5730 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xae8>  // b.any
    4f74:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    4f78:	ldr	d0, [x8]
    4f7c:	sub	x8, x29, #0x60
    4f80:	add	x1, x8, #0x10
    4f84:	stur	x1, [x29, #-96]
    4f88:	stur	d0, [x29, #-88]
    4f8c:	ldr	w8, [x20, #32]
    4f90:	add	x2, x20, #0x28
    4f94:	sub	x0, x29, #0x60
    4f98:	add	x3, x2, x8, lsl #3
    4f9c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    4fa0:	ldur	x8, [x29, #-96]
    4fa4:	ldur	w9, [x29, #-88]
    4fa8:	ldr	w10, [x21, #32]
    4fac:	add	x2, x21, #0x28
    4fb0:	sub	x0, x29, #0x60
    4fb4:	add	x1, x8, x9, lsl #3
    4fb8:	add	x3, x2, x10, lsl #3
    4fbc:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    4fc0:	ldr	x8, [x20, #16]
    4fc4:	cbz	x8, 5a1c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xdd4>
    4fc8:	ldr	w9, [x8, #8]
    4fcc:	cmp	w9, #0x5
    4fd0:	b.ne	5a3c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xdf4>  // b.any
    4fd4:	ldur	x0, [x29, #-96]
    4fd8:	ldur	w1, [x29, #-88]
    4fdc:	ldr	x2, [x8, #24]
    4fe0:	b	5444 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x7fc>
    4fe4:	ldr	x9, [x19, #32]
    4fe8:	cbz	x9, 594c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xd04>
    4fec:	ldrb	w8, [x9, #8]
    4ff0:	ldr	x10, [x19, #40]
    4ff4:	cmp	w8, #0x5
    4ff8:	csel	x21, x9, xzr, eq  // eq = none
    4ffc:	cbz	x10, 594c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xd04>
    5000:	ldrb	w9, [x10, #8]
    5004:	cmp	w9, #0x5
    5008:	csel	x20, x10, xzr, eq  // eq = none
    500c:	cmp	w8, #0x5
    5010:	b.ne	5730 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xae8>  // b.any
    5014:	cmp	w9, #0x5
    5018:	b.ne	5730 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xae8>  // b.any
    501c:	ldr	x8, [x21, #32]
    5020:	cbz	x8, 59a4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xd5c>
    5024:	ldrb	w9, [x8, #8]
    5028:	ldr	x10, [x20, #32]
    502c:	cmp	w9, #0x6
    5030:	csel	x11, x8, xzr, eq  // eq = none
    5034:	cbz	x10, 59a4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xd5c>
    5038:	ldrb	w12, [x10, #8]
    503c:	cmp	w12, #0x6
    5040:	csel	x10, x10, xzr, eq  // eq = none
    5044:	cmp	w9, #0x18
    5048:	b.eq	5054 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x40c>  // b.none
    504c:	cmp	w9, #0x6
    5050:	b.ne	5730 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xae8>  // b.any
    5054:	cmp	w12, #0x6
    5058:	b.ne	54d0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x888>  // b.any
    505c:	cmp	w9, #0x6
    5060:	b.ne	54d8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x890>  // b.any
    5064:	ldr	x11, [x11, #24]
    5068:	ldr	x12, [x10, #24]
    506c:	cmp	x11, x12
    5070:	b.eq	54d8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x890>  // b.none
    5074:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    5078:	add	x8, x8, #0x0
    507c:	mov	w19, #0x103                 	// #259
    5080:	stp	x8, xzr, [sp, #184]
    5084:	sub	x8, x29, #0x60
    5088:	mov	x0, x21
    508c:	strh	w19, [sp, #200]
    5090:	sub	x22, x29, #0x60
    5094:	bl	5a5c <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    5098:	mov	w21, #0x104                 	// #260
    509c:	sub	x8, x29, #0xc0
    50a0:	add	x0, sp, #0xb8
    50a4:	add	x1, sp, #0xa0
    50a8:	strh	w21, [sp, #176]
    50ac:	stp	x22, xzr, [sp, #160]
    50b0:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    50b4:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    50b8:	add	x8, x8, #0x0
    50bc:	stp	x8, xzr, [sp, #136]
    50c0:	sub	x8, x29, #0xa8
    50c4:	sub	x0, x29, #0xc0
    50c8:	add	x1, sp, #0x88
    50cc:	strh	w19, [sp, #152]
    50d0:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    50d4:	add	x8, sp, #0x8
    50d8:	mov	x0, x20
    50dc:	add	x22, sp, #0x8
    50e0:	bl	5a5c <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    50e4:	sub	x8, x29, #0x90
    50e8:	sub	x0, x29, #0xa8
    50ec:	add	x1, sp, #0x70
    50f0:	strh	w21, [sp, #128]
    50f4:	stp	x22, xzr, [sp, #112]
    50f8:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    50fc:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    5100:	add	x8, x8, #0x0
    5104:	stp	x8, xzr, [sp, #88]
    5108:	sub	x8, x29, #0x78
    510c:	sub	x0, x29, #0x90
    5110:	add	x1, sp, #0x58
    5114:	strh	w19, [sp, #104]
    5118:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    511c:	sub	x0, x29, #0x78
    5120:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>
    5124:	ldr	x9, [x19, #32]
    5128:	cbz	x9, 59dc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xd94>
    512c:	ldrb	w10, [x9, #8]
    5130:	ldr	x8, [x19, #40]
    5134:	sub	w10, w10, #0x1
    5138:	cmp	w10, #0x17
    513c:	csel	x20, x9, xzr, cc  // cc = lo, ul, last
    5140:	cbz	x8, 59fc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xdb4>
    5144:	and	w9, w10, #0xff
    5148:	cmp	w9, #0x16
    514c:	b.hi	5730 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xae8>  // b.pmore
    5150:	ldrb	w9, [x8, #8]
    5154:	cmp	w9, #0x8
    5158:	b.ne	5730 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xae8>  // b.any
    515c:	ldr	x19, [x8, #24]
    5160:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    5164:	ldr	d0, [x9]
    5168:	sub	x8, x29, #0x60
    516c:	add	x1, x8, #0x10
    5170:	cmp	x19, #0x9
    5174:	stur	x1, [x29, #-96]
    5178:	stur	d0, [x29, #-88]
    517c:	b.cc	53c4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x77c>  // b.lo, b.ul, b.last
    5180:	sub	x0, x29, #0x60
    5184:	mov	w3, #0x8                   	// #8
    5188:	mov	x2, x19
    518c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    5190:	ldur	w8, [x29, #-84]
    5194:	b	53c8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x780>
    5198:	ldr	x8, [x19, #32]
    519c:	cbz	x8, 594c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xd04>
    51a0:	ldrb	w9, [x8, #8]
    51a4:	ldr	x20, [x19, #40]
    51a8:	cmp	w9, #0x5
    51ac:	csel	x22, x8, xzr, eq  // eq = none
    51b0:	cbz	x20, 59a4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xd5c>
    51b4:	cmp	w9, #0x5
    51b8:	b.ne	5730 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xae8>  // b.any
    51bc:	ldrb	w8, [x20, #8]
    51c0:	cmp	w8, #0x6
    51c4:	b.ne	5730 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xae8>  // b.any
    51c8:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    51cc:	ldr	d0, [x9]
    51d0:	sub	x8, x29, #0x60
    51d4:	add	x10, sp, #0x8
    51d8:	add	x19, x8, #0x10
    51dc:	add	x21, x10, #0x10
    51e0:	stur	x19, [x29, #-96]
    51e4:	str	x21, [sp, #8]
    51e8:	stur	d0, [x29, #-88]
    51ec:	str	d0, [sp, #16]
    51f0:	ldr	w8, [x22, #48]
    51f4:	cbz	w8, 54b4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x86c>
    51f8:	mov	x23, xzr
    51fc:	add	x24, x22, #0x38
    5200:	sub	x25, x8, #0x1
    5204:	ldp	w8, w9, [x29, #-88]
    5208:	ldr	x26, [x24, x23, lsl #3]
    520c:	cmp	w8, w9
    5210:	b.cs	528c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x644>  // b.hs, b.nlast
    5214:	ldur	x9, [x29, #-96]
    5218:	str	x26, [x9, w8, uxtw #3]
    521c:	ldp	w8, w9, [x29, #-88]
    5220:	cmp	w8, w9
    5224:	b.cs	58cc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xc84>  // b.hs, b.nlast
    5228:	add	w8, w8, #0x1
    522c:	stur	w8, [x29, #-88]
    5230:	ldr	w8, [x22, #52]
    5234:	cmp	x23, x8
    5238:	b.cs	58ec <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xca4>  // b.hs, b.nlast
    523c:	ldr	w9, [x22, #48]
    5240:	ldp	w8, w10, [sp, #16]
    5244:	add	x9, x24, x9, lsl #3
    5248:	ldr	x26, [x9, x23, lsl #3]
    524c:	cmp	w8, w10
    5250:	b.cs	52a8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x660>  // b.hs, b.nlast
    5254:	ldr	x9, [sp, #8]
    5258:	str	x26, [x9, w8, uxtw #3]
    525c:	ldp	w8, w9, [sp, #16]
    5260:	cmp	w8, w9
    5264:	b.cs	58cc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xc84>  // b.hs, b.nlast
    5268:	add	x5, x8, #0x1
    526c:	cmp	x25, x23
    5270:	str	w5, [sp, #16]
    5274:	b.eq	53b4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x76c>  // b.none
    5278:	ldr	w8, [x22, #48]
    527c:	add	x23, x23, #0x1
    5280:	cmp	x23, x8
    5284:	b.cc	5204 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x5bc>  // b.lo, b.ul, b.last
    5288:	b	590c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xcc4>
    528c:	sub	x0, x29, #0x60
    5290:	mov	w3, #0x8                   	// #8
    5294:	mov	x1, x19
    5298:	mov	x2, xzr
    529c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    52a0:	ldur	w8, [x29, #-88]
    52a4:	b	5214 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x5cc>
    52a8:	add	x0, sp, #0x8
    52ac:	mov	w3, #0x8                   	// #8
    52b0:	mov	x1, x21
    52b4:	mov	x2, xzr
    52b8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    52bc:	ldr	w8, [sp, #16]
    52c0:	b	5254 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x60c>
    52c4:	mov	w19, wzr
    52c8:	b	546c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x824>
    52cc:	lsl	x0, x8, x9
    52d0:	b	5348 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x700>
    52d4:	ldr	x9, [x21, #24]
    52d8:	ldr	x8, [x8, #24]
    52dc:	cmp	x9, x8
    52e0:	cset	w19, ge  // ge = tcont
    52e4:	b	5378 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x730>
    52e8:	and	x0, x9, x8
    52ec:	b	5348 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x700>
    52f0:	orr	x0, x9, x8
    52f4:	b	5348 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x700>
    52f8:	ldr	x9, [x21, #24]
    52fc:	ldr	x8, [x8, #24]
    5300:	cmp	x9, x8
    5304:	cset	w19, le
    5308:	b	5378 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x730>
    530c:	mul	x0, x9, x8
    5310:	b	5348 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x700>
    5314:	ldr	x9, [x21, #24]
    5318:	ldr	x8, [x8, #24]
    531c:	cmp	x9, x8
    5320:	cset	w19, lt  // lt = tstop
    5324:	b	5378 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x730>
    5328:	ldr	x9, [x21, #24]
    532c:	ldr	x8, [x8, #24]
    5330:	cmp	x9, x8
    5334:	cset	w19, ne  // ne = any
    5338:	b	5378 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x730>
    533c:	asr	x0, x8, x9
    5340:	b	5348 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x700>
    5344:	lsr	x0, x8, x9
    5348:	ldp	x20, x19, [sp, #480]
    534c:	ldp	x22, x21, [sp, #464]
    5350:	ldp	x24, x23, [sp, #448]
    5354:	ldp	x26, x25, [sp, #432]
    5358:	ldr	x28, [sp, #416]
    535c:	ldp	x29, x30, [sp, #400]
    5360:	add	sp, sp, #0x1f0
    5364:	b	1698 <_ZN4llvm7IntInit3getEl>
    5368:	ldr	x9, [x21, #24]
    536c:	ldr	x8, [x8, #24]
    5370:	cmp	x9, x8
    5374:	cset	w19, gt
    5378:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    537c:	add	x8, x8, #0x0
    5380:	ldarb	w8, [x8]
    5384:	adrp	x20, 0 <_ZNK4llvm5RecTy4dumpEv>
    5388:	add	x20, x20, #0x0
    538c:	tbz	w8, #0, 5754 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xb0c>
    5390:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    5394:	add	x8, x8, #0x0
    5398:	ldarb	w8, [x8]
    539c:	adrp	x21, 0 <_ZNK4llvm5RecTy4dumpEv>
    53a0:	add	x21, x21, #0x0
    53a4:	tbz	w8, #0, 57a0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xb58>
    53a8:	cmp	w19, #0x0
    53ac:	csel	x19, x20, x21, ne  // ne = any
    53b0:	b	5730 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xae8>
    53b4:	ldur	x19, [x29, #-96]
    53b8:	ldur	w3, [x29, #-88]
    53bc:	ldr	x21, [sp, #8]
    53c0:	b	54bc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x874>
    53c4:	mov	w8, #0x8                   	// #8
    53c8:	cmp	x8, x19
    53cc:	b.cc	58cc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xc84>  // b.lo, b.ul, b.last
    53d0:	ldur	x0, [x29, #-96]
    53d4:	ands	x8, x19, #0xffffffff
    53d8:	stur	w19, [x29, #-88]
    53dc:	b.eq	543c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x7f4>  // b.none
    53e0:	lsl	x8, x8, #3
    53e4:	sub	x9, x8, #0x8
    53e8:	cmp	x9, #0x17
    53ec:	mov	x8, x0
    53f0:	b.ls	5428 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x7e0>  // b.plast
    53f4:	lsr	x8, x9, #3
    53f8:	add	x9, x8, #0x1
    53fc:	and	x10, x9, #0x3ffffffffffffffc
    5400:	dup	v0.2d, x20
    5404:	add	x8, x0, x10, lsl #3
    5408:	add	x11, x0, #0x10
    540c:	mov	x12, x10
    5410:	stp	q0, q0, [x11, #-16]
    5414:	subs	x12, x12, #0x4
    5418:	add	x11, x11, #0x20
    541c:	b.ne	5410 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x7c8>  // b.any
    5420:	cmp	x9, x10
    5424:	b.eq	5438 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x7f0>  // b.none
    5428:	add	x9, x0, w19, uxtw #3
    542c:	str	x20, [x8], #8
    5430:	cmp	x9, x8
    5434:	b.ne	542c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x7e4>  // b.any
    5438:	ldur	x0, [x29, #-96]
    543c:	ldr	x2, [x20, #16]
    5440:	and	x1, x19, #0xffffffff
    5444:	bl	2b9c <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    5448:	ldur	x8, [x29, #-96]
    544c:	sub	x9, x29, #0x60
    5450:	add	x9, x9, #0x10
    5454:	mov	x19, x0
    5458:	cmp	x8, x9
    545c:	b.eq	5730 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xae8>  // b.none
    5460:	mov	x0, x8
    5464:	b	572c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xae4>
    5468:	mov	w19, #0x1                   	// #1
    546c:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    5470:	add	x8, x8, #0x0
    5474:	ldarb	w8, [x8]
    5478:	cmp	w20, #0xb
    547c:	cset	w20, ne  // ne = any
    5480:	tbz	w8, #0, 57e8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xba0>
    5484:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    5488:	add	x8, x8, #0x0
    548c:	ldarb	w8, [x8]
    5490:	eor	w19, w20, w19
    5494:	tbz	w8, #0, 583c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xbf4>
    5498:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    549c:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    54a0:	add	x8, x8, #0x0
    54a4:	add	x9, x9, #0x0
    54a8:	cmp	w19, #0x0
    54ac:	csel	x19, x9, x8, ne  // ne = any
    54b0:	b	5730 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xae8>
    54b4:	mov	x5, xzr
    54b8:	mov	x3, xzr
    54bc:	mov	x0, x20
    54c0:	mov	x1, xzr
    54c4:	mov	x2, x19
    54c8:	mov	x4, x21
    54cc:	b	56f4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xaac>
    54d0:	cmp	w12, #0x18
    54d4:	b.ne	5730 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xae8>  // b.any
    54d8:	cmp	w9, #0x6
    54dc:	csel	x19, x8, x10, eq  // eq = none
    54e0:	cbnz	x19, 54fc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x8b4>
    54e4:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    54e8:	add	x8, x8, #0x0
    54ec:	ldarb	w8, [x8]
    54f0:	tbz	w8, #0, 588c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xc44>
    54f4:	adrp	x19, 0 <_ZNK4llvm5RecTy4dumpEv>
    54f8:	add	x19, x19, #0x0
    54fc:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    5500:	ldr	d0, [x9]
    5504:	sub	x8, x29, #0x60
    5508:	add	x10, sp, #0x8
    550c:	add	x22, x8, #0x10
    5510:	add	x23, x10, #0x10
    5514:	stur	x22, [x29, #-96]
    5518:	str	x23, [sp, #8]
    551c:	stur	d0, [x29, #-88]
    5520:	str	d0, [sp, #16]
    5524:	ldr	w8, [x21, #48]
    5528:	cbz	w8, 5608 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x9c0>
    552c:	mov	x24, xzr
    5530:	add	x25, x21, #0x38
    5534:	sub	x26, x8, #0x1
    5538:	ldp	w9, w10, [x29, #-88]
    553c:	ldr	x8, [x25, x24, lsl #3]
    5540:	cmp	w9, w10
    5544:	b.cs	55c0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x978>  // b.hs, b.nlast
    5548:	ldur	x10, [x29, #-96]
    554c:	str	x8, [x10, w9, uxtw #3]
    5550:	ldp	w8, w9, [x29, #-88]
    5554:	cmp	w8, w9
    5558:	b.cs	58cc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xc84>  // b.hs, b.nlast
    555c:	add	w8, w8, #0x1
    5560:	stur	w8, [x29, #-88]
    5564:	ldr	w8, [x21, #52]
    5568:	cmp	x24, x8
    556c:	b.cs	58ec <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xca4>  // b.hs, b.nlast
    5570:	ldr	w8, [x21, #48]
    5574:	ldp	w9, w10, [sp, #16]
    5578:	add	x8, x25, x8, lsl #3
    557c:	ldr	x8, [x8, x24, lsl #3]
    5580:	cmp	w9, w10
    5584:	b.cs	55e4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x99c>  // b.hs, b.nlast
    5588:	ldr	x10, [sp, #8]
    558c:	str	x8, [x10, w9, uxtw #3]
    5590:	ldp	w8, w9, [sp, #16]
    5594:	cmp	w8, w9
    5598:	b.cs	58cc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xc84>  // b.hs, b.nlast
    559c:	add	w8, w8, #0x1
    55a0:	cmp	x26, x24
    55a4:	str	w8, [sp, #16]
    55a8:	b.eq	5608 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x9c0>  // b.none
    55ac:	ldr	w8, [x21, #48]
    55b0:	add	x24, x24, #0x1
    55b4:	cmp	x24, x8
    55b8:	b.cc	5538 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x8f0>  // b.lo, b.ul, b.last
    55bc:	b	590c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xcc4>
    55c0:	sub	x0, x29, #0x60
    55c4:	mov	w3, #0x8                   	// #8
    55c8:	mov	x1, x22
    55cc:	mov	x2, xzr
    55d0:	str	x8, [x29, #24]
    55d4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    55d8:	ldr	x8, [x29, #24]
    55dc:	ldur	w9, [x29, #-88]
    55e0:	b	5548 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x900>
    55e4:	add	x0, sp, #0x8
    55e8:	mov	w3, #0x8                   	// #8
    55ec:	mov	x1, x23
    55f0:	mov	x2, xzr
    55f4:	str	x8, [x29, #24]
    55f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    55fc:	ldr	x8, [x29, #24]
    5600:	ldr	w9, [sp, #16]
    5604:	b	5588 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x940>
    5608:	ldr	w9, [x20, #48]
    560c:	cbz	w9, 56dc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa94>
    5610:	mov	x21, xzr
    5614:	add	x24, x20, #0x38
    5618:	sub	x25, x9, #0x1
    561c:	ldp	w8, w9, [x29, #-88]
    5620:	ldr	x26, [x24, x21, lsl #3]
    5624:	cmp	w8, w9
    5628:	b.cs	56a4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa5c>  // b.hs, b.nlast
    562c:	ldur	x9, [x29, #-96]
    5630:	str	x26, [x9, w8, uxtw #3]
    5634:	ldp	w8, w9, [x29, #-88]
    5638:	cmp	w8, w9
    563c:	b.cs	58cc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xc84>  // b.hs, b.nlast
    5640:	add	w8, w8, #0x1
    5644:	stur	w8, [x29, #-88]
    5648:	ldr	w8, [x20, #52]
    564c:	cmp	x21, x8
    5650:	b.cs	58ec <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xca4>  // b.hs, b.nlast
    5654:	ldr	w9, [x20, #48]
    5658:	ldp	w8, w10, [sp, #16]
    565c:	add	x9, x24, x9, lsl #3
    5660:	ldr	x26, [x9, x21, lsl #3]
    5664:	cmp	w8, w10
    5668:	b.cs	56c0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa78>  // b.hs, b.nlast
    566c:	ldr	x9, [sp, #8]
    5670:	str	x26, [x9, w8, uxtw #3]
    5674:	ldp	w8, w9, [sp, #16]
    5678:	cmp	w8, w9
    567c:	b.cs	58cc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xc84>  // b.hs, b.nlast
    5680:	add	w8, w8, #0x1
    5684:	cmp	x25, x21
    5688:	str	w8, [sp, #16]
    568c:	b.eq	56dc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa94>  // b.none
    5690:	ldr	w8, [x20, #48]
    5694:	add	x21, x21, #0x1
    5698:	cmp	x21, x8
    569c:	b.cc	561c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x9d4>  // b.lo, b.ul, b.last
    56a0:	b	590c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xcc4>
    56a4:	sub	x0, x29, #0x60
    56a8:	mov	w3, #0x8                   	// #8
    56ac:	mov	x1, x22
    56b0:	mov	x2, xzr
    56b4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    56b8:	ldur	w8, [x29, #-88]
    56bc:	b	562c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x9e4>
    56c0:	add	x0, sp, #0x8
    56c4:	mov	w3, #0x8                   	// #8
    56c8:	mov	x1, x23
    56cc:	mov	x2, xzr
    56d0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    56d4:	ldr	w8, [sp, #16]
    56d8:	b	566c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa24>
    56dc:	ldur	x2, [x29, #-96]
    56e0:	ldur	w3, [x29, #-88]
    56e4:	ldr	x4, [sp, #8]
    56e8:	mov	w5, w8
    56ec:	mov	x0, x19
    56f0:	mov	x1, xzr
    56f4:	bl	5fec <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE>
    56f8:	ldr	x8, [sp, #8]
    56fc:	add	x9, sp, #0x8
    5700:	add	x9, x9, #0x10
    5704:	mov	x19, x0
    5708:	cmp	x8, x9
    570c:	b.eq	5718 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xad0>  // b.none
    5710:	mov	x0, x8
    5714:	bl	0 <free>
    5718:	ldur	x0, [x29, #-96]
    571c:	sub	x8, x29, #0x60
    5720:	add	x8, x8, #0x10
    5724:	cmp	x0, x8
    5728:	b.eq	5730 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xae8>  // b.none
    572c:	bl	0 <free>
    5730:	mov	x0, x19
    5734:	ldp	x20, x19, [sp, #480]
    5738:	ldp	x22, x21, [sp, #464]
    573c:	ldp	x24, x23, [sp, #448]
    5740:	ldp	x26, x25, [sp, #432]
    5744:	ldr	x28, [sp, #416]
    5748:	ldp	x29, x30, [sp, #400]
    574c:	add	sp, sp, #0x1f0
    5750:	ret
    5754:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    5758:	add	x0, x0, #0x0
    575c:	bl	0 <__cxa_guard_acquire>
    5760:	cbz	w0, 5390 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x748>
    5764:	adrp	x9, 88 <_ZN4llvm5RecTy9getListTyEv+0x1c>
    5768:	adrp	x10, 3f8 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x168>
    576c:	ldr	x9, [x9]
    5770:	ldr	x10, [x10]
    5774:	mov	w8, #0x2                   	// #2
    5778:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    577c:	mov	w11, #0x1                   	// #1
    5780:	strh	w8, [x20, #8]
    5784:	add	x8, x10, #0x10
    5788:	add	x0, x0, #0x0
    578c:	str	x9, [x20, #16]
    5790:	str	x8, [x20]
    5794:	strb	w11, [x20, #24]
    5798:	bl	0 <__cxa_guard_release>
    579c:	b	5390 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x748>
    57a0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    57a4:	add	x0, x0, #0x0
    57a8:	bl	0 <__cxa_guard_acquire>
    57ac:	cbz	w0, 53a8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x760>
    57b0:	adrp	x9, 88 <_ZN4llvm5RecTy9getListTyEv+0x1c>
    57b4:	adrp	x10, 3f8 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x168>
    57b8:	ldr	x9, [x9]
    57bc:	ldr	x10, [x10]
    57c0:	mov	w8, #0x2                   	// #2
    57c4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    57c8:	strh	w8, [x21, #8]
    57cc:	add	x8, x10, #0x10
    57d0:	add	x0, x0, #0x0
    57d4:	str	x9, [x21, #16]
    57d8:	str	x8, [x21]
    57dc:	strb	wzr, [x21, #24]
    57e0:	bl	0 <__cxa_guard_release>
    57e4:	b	53a8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x760>
    57e8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    57ec:	add	x0, x0, #0x0
    57f0:	bl	0 <__cxa_guard_acquire>
    57f4:	cbz	w0, 5484 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x83c>
    57f8:	adrp	x10, 88 <_ZN4llvm5RecTy9getListTyEv+0x1c>
    57fc:	adrp	x11, 3f8 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x168>
    5800:	ldr	x10, [x10]
    5804:	ldr	x11, [x11]
    5808:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    580c:	add	x8, x8, #0x0
    5810:	mov	w9, #0x2                   	// #2
    5814:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    5818:	mov	w12, #0x1                   	// #1
    581c:	strh	w9, [x8, #8]
    5820:	add	x9, x11, #0x10
    5824:	add	x0, x0, #0x0
    5828:	str	x10, [x8, #16]
    582c:	str	x9, [x8]
    5830:	strb	w12, [x8, #24]
    5834:	bl	0 <__cxa_guard_release>
    5838:	b	5484 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x83c>
    583c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    5840:	add	x0, x0, #0x0
    5844:	bl	0 <__cxa_guard_acquire>
    5848:	cbz	w0, 5498 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x850>
    584c:	adrp	x10, 88 <_ZN4llvm5RecTy9getListTyEv+0x1c>
    5850:	adrp	x11, 3f8 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x168>
    5854:	ldr	x10, [x10]
    5858:	ldr	x11, [x11]
    585c:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    5860:	add	x8, x8, #0x0
    5864:	mov	w9, #0x2                   	// #2
    5868:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    586c:	strh	w9, [x8, #8]
    5870:	add	x9, x11, #0x10
    5874:	add	x0, x0, #0x0
    5878:	str	x10, [x8, #16]
    587c:	str	x9, [x8]
    5880:	strb	wzr, [x8, #24]
    5884:	bl	0 <__cxa_guard_release>
    5888:	b	5498 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x850>
    588c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    5890:	add	x0, x0, #0x0
    5894:	bl	0 <__cxa_guard_acquire>
    5898:	adrp	x19, 0 <_ZNK4llvm5RecTy4dumpEv>
    589c:	add	x19, x19, #0x0
    58a0:	cbz	w0, 54fc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x8b4>
    58a4:	adrp	x9, 378 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0xe8>
    58a8:	ldr	x9, [x9]
    58ac:	mov	w8, #0x18                  	// #24
    58b0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    58b4:	strh	w8, [x19, #8]
    58b8:	add	x8, x9, #0x10
    58bc:	add	x0, x0, #0x0
    58c0:	str	x8, [x19]
    58c4:	bl	0 <__cxa_guard_release>
    58c8:	b	54fc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x8b4>
    58cc:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    58d0:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    58d4:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    58d8:	add	x0, x0, #0x0
    58dc:	add	x1, x1, #0x0
    58e0:	add	x3, x3, #0x0
    58e4:	mov	w2, #0x43                  	// #67
    58e8:	bl	0 <__assert_fail>
    58ec:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    58f0:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    58f4:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    58f8:	add	x0, x0, #0x0
    58fc:	add	x1, x1, #0x0
    5900:	add	x3, x3, #0x0
    5904:	mov	w2, #0x545                 	// #1349
    5908:	bl	0 <__assert_fail>
    590c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    5910:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    5914:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    5918:	add	x0, x0, #0x0
    591c:	add	x1, x1, #0x0
    5920:	add	x3, x3, #0x0
    5924:	mov	w2, #0x540                 	// #1344
    5928:	bl	0 <__assert_fail>
    592c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    5930:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    5934:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    5938:	add	x0, x0, #0x0
    593c:	add	x1, x1, #0x0
    5940:	add	x3, x3, #0x0
    5944:	mov	w2, #0x69                  	// #105
    5948:	bl	0 <__assert_fail>
    594c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    5950:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    5954:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    5958:	add	x0, x0, #0x0
    595c:	add	x1, x1, #0x0
    5960:	add	x3, x3, #0x0
    5964:	mov	w2, #0x69                  	// #105
    5968:	bl	0 <__assert_fail>
    596c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    5970:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    5974:	add	x0, x0, #0x0
    5978:	add	x1, x1, #0x0
    597c:	mov	w2, #0x404                 	// #1028
    5980:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    5984:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    5988:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    598c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    5990:	add	x0, x0, #0x0
    5994:	add	x1, x1, #0x0
    5998:	add	x3, x3, #0x0
    599c:	mov	w2, #0x69                  	// #105
    59a0:	bl	0 <__assert_fail>
    59a4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    59a8:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    59ac:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    59b0:	add	x0, x0, #0x0
    59b4:	add	x1, x1, #0x0
    59b8:	add	x3, x3, #0x0
    59bc:	mov	w2, #0x69                  	// #105
    59c0:	bl	0 <__assert_fail>
    59c4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    59c8:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    59cc:	add	x0, x0, #0x0
    59d0:	add	x1, x1, #0x0
    59d4:	mov	w2, #0x3d5                 	// #981
    59d8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    59dc:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    59e0:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    59e4:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    59e8:	add	x0, x0, #0x0
    59ec:	add	x1, x1, #0x0
    59f0:	add	x3, x3, #0x0
    59f4:	mov	w2, #0x69                  	// #105
    59f8:	bl	0 <__assert_fail>
    59fc:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    5a00:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    5a04:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    5a08:	add	x0, x0, #0x0
    5a0c:	add	x1, x1, #0x0
    5a10:	add	x3, x3, #0x0
    5a14:	mov	w2, #0x69                  	// #105
    5a18:	bl	0 <__assert_fail>
    5a1c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    5a20:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    5a24:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    5a28:	add	x0, x0, #0x0
    5a2c:	add	x1, x1, #0x0
    5a30:	add	x3, x3, #0x0
    5a34:	mov	w2, #0x69                  	// #105
    5a38:	bl	0 <__assert_fail>
    5a3c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    5a40:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    5a44:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    5a48:	add	x0, x0, #0x0
    5a4c:	add	x1, x1, #0x0
    5a50:	add	x3, x3, #0x0
    5a54:	mov	w2, #0x108                 	// #264
    5a58:	bl	0 <__assert_fail>

0000000000005a5c <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>:
    5a5c:	sub	sp, sp, #0xd0
    5a60:	stp	x29, x30, [sp, #112]
    5a64:	stp	x28, x27, [sp, #128]
    5a68:	stp	x26, x25, [sp, #144]
    5a6c:	stp	x24, x23, [sp, #160]
    5a70:	stp	x22, x21, [sp, #176]
    5a74:	stp	x20, x19, [sp, #192]
    5a78:	add	x29, sp, #0x70
    5a7c:	mov	x20, x0
    5a80:	ldr	x0, [x0, #32]
    5a84:	mov	x19, x8
    5a88:	add	x8, sp, #0x30
    5a8c:	ldr	x9, [x0]
    5a90:	ldr	x9, [x9, #40]
    5a94:	blr	x9
    5a98:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    5a9c:	add	x3, x3, #0x0
    5aa0:	add	x0, sp, #0x30
    5aa4:	mov	w4, #0x1                   	// #1
    5aa8:	mov	x1, xzr
    5aac:	mov	x2, xzr
    5ab0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    5ab4:	sub	x8, x29, #0x20
    5ab8:	add	x10, x8, #0x10
    5abc:	stur	x10, [x29, #-32]
    5ac0:	mov	x8, x0
    5ac4:	ldr	x9, [x8], #16
    5ac8:	str	x10, [sp, #8]
    5acc:	cmp	x9, x8
    5ad0:	b.eq	5ae4 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x88>  // b.none
    5ad4:	stur	x9, [x29, #-32]
    5ad8:	ldr	x9, [x0, #16]
    5adc:	stur	x9, [x29, #-16]
    5ae0:	b	5aec <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x90>
    5ae4:	ldr	q0, [x9]
    5ae8:	str	q0, [x10]
    5aec:	ldr	x9, [x0, #8]
    5af0:	stur	x9, [x29, #-24]
    5af4:	stp	x8, xzr, [x0]
    5af8:	strb	wzr, [x0, #16]
    5afc:	ldr	x0, [sp, #48]
    5b00:	add	x8, sp, #0x30
    5b04:	add	x8, x8, #0x10
    5b08:	cmp	x0, x8
    5b0c:	b.eq	5b14 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0xb8>  // b.none
    5b10:	bl	0 <_ZdlPv>
    5b14:	ldr	x0, [x20, #40]
    5b18:	cbz	x0, 5bc0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x164>
    5b1c:	ldr	x8, [x0]
    5b20:	ldr	x9, [x8, #48]
    5b24:	add	x8, sp, #0x10
    5b28:	blr	x9
    5b2c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    5b30:	add	x3, x3, #0x0
    5b34:	add	x0, sp, #0x10
    5b38:	mov	w4, #0x1                   	// #1
    5b3c:	mov	x1, xzr
    5b40:	mov	x2, xzr
    5b44:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    5b48:	add	x8, sp, #0x30
    5b4c:	add	x21, x8, #0x10
    5b50:	str	x21, [sp, #48]
    5b54:	mov	x8, x0
    5b58:	ldr	x9, [x8], #16
    5b5c:	cmp	x9, x8
    5b60:	b.eq	5b74 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x118>  // b.none
    5b64:	str	x9, [sp, #48]
    5b68:	ldr	x9, [x0, #16]
    5b6c:	str	x9, [sp, #64]
    5b70:	b	5b7c <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x120>
    5b74:	ldr	q0, [x9]
    5b78:	str	q0, [x21]
    5b7c:	ldr	x9, [x0, #8]
    5b80:	str	x9, [sp, #56]
    5b84:	stp	x8, xzr, [x0]
    5b88:	strb	wzr, [x0, #16]
    5b8c:	ldp	x1, x2, [sp, #48]
    5b90:	sub	x0, x29, #0x20
    5b94:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    5b98:	ldr	x0, [sp, #48]
    5b9c:	cmp	x0, x21
    5ba0:	b.eq	5ba8 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x14c>  // b.none
    5ba4:	bl	0 <_ZdlPv>
    5ba8:	ldr	x0, [sp, #16]
    5bac:	add	x8, sp, #0x10
    5bb0:	add	x8, x8, #0x10
    5bb4:	cmp	x0, x8
    5bb8:	b.eq	5bc0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x164>  // b.none
    5bbc:	bl	0 <_ZdlPv>
    5bc0:	ldr	w8, [x20, #48]
    5bc4:	cbz	w8, 5d38 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x2dc>
    5bc8:	mov	x21, x20
    5bcc:	ldr	x0, [x21, #56]!
    5bd0:	ldr	x8, [x0]
    5bd4:	ldr	x9, [x8, #40]
    5bd8:	add	x8, sp, #0x10
    5bdc:	blr	x9
    5be0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    5be4:	add	x3, x3, #0x0
    5be8:	add	x0, sp, #0x10
    5bec:	mov	w4, #0x1                   	// #1
    5bf0:	mov	x1, xzr
    5bf4:	mov	x2, xzr
    5bf8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    5bfc:	add	x8, sp, #0x30
    5c00:	add	x22, x8, #0x10
    5c04:	str	x22, [sp, #48]
    5c08:	mov	x8, x0
    5c0c:	ldr	x9, [x8], #16
    5c10:	cmp	x9, x8
    5c14:	b.eq	5c28 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x1cc>  // b.none
    5c18:	str	x9, [sp, #48]
    5c1c:	ldr	x9, [x0, #16]
    5c20:	str	x9, [sp, #64]
    5c24:	b	5c30 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x1d4>
    5c28:	ldr	q0, [x9]
    5c2c:	str	q0, [x22]
    5c30:	ldr	x9, [x0, #8]
    5c34:	str	x9, [sp, #56]
    5c38:	stp	x8, xzr, [x0]
    5c3c:	strb	wzr, [x0, #16]
    5c40:	ldp	x1, x2, [sp, #48]
    5c44:	sub	x0, x29, #0x20
    5c48:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    5c4c:	ldr	x0, [sp, #48]
    5c50:	cmp	x0, x22
    5c54:	b.eq	5c5c <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x200>  // b.none
    5c58:	bl	0 <_ZdlPv>
    5c5c:	ldr	x0, [sp, #16]
    5c60:	add	x8, sp, #0x10
    5c64:	add	x8, x8, #0x10
    5c68:	cmp	x0, x8
    5c6c:	b.eq	5c74 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x218>  // b.none
    5c70:	bl	0 <_ZdlPv>
    5c74:	ldr	w8, [x20, #52]
    5c78:	cbz	w8, 5fb4 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x558>
    5c7c:	ldr	w8, [x20, #48]
    5c80:	ldr	x0, [x21, x8, lsl #3]
    5c84:	cbz	x0, 5d30 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x2d4>
    5c88:	ldr	x8, [x0]
    5c8c:	ldr	x9, [x8, #48]
    5c90:	add	x8, sp, #0x10
    5c94:	blr	x9
    5c98:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    5c9c:	add	x3, x3, #0x0
    5ca0:	add	x0, sp, #0x10
    5ca4:	mov	w4, #0x2                   	// #2
    5ca8:	mov	x1, xzr
    5cac:	mov	x2, xzr
    5cb0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    5cb4:	add	x8, sp, #0x30
    5cb8:	add	x21, x8, #0x10
    5cbc:	str	x21, [sp, #48]
    5cc0:	mov	x8, x0
    5cc4:	ldr	x9, [x8], #16
    5cc8:	cmp	x9, x8
    5ccc:	b.eq	5ce0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x284>  // b.none
    5cd0:	str	x9, [sp, #48]
    5cd4:	ldr	x9, [x0, #16]
    5cd8:	str	x9, [sp, #64]
    5cdc:	b	5ce8 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x28c>
    5ce0:	ldr	q0, [x9]
    5ce4:	str	q0, [x21]
    5ce8:	ldr	x9, [x0, #8]
    5cec:	str	x9, [sp, #56]
    5cf0:	stp	x8, xzr, [x0]
    5cf4:	strb	wzr, [x0, #16]
    5cf8:	ldp	x1, x2, [sp, #48]
    5cfc:	sub	x0, x29, #0x20
    5d00:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    5d04:	ldr	x0, [sp, #48]
    5d08:	cmp	x0, x21
    5d0c:	b.eq	5d14 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x2b8>  // b.none
    5d10:	bl	0 <_ZdlPv>
    5d14:	ldr	x0, [sp, #16]
    5d18:	add	x8, sp, #0x10
    5d1c:	add	x8, x8, #0x10
    5d20:	cmp	x0, x8
    5d24:	b.eq	5d2c <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x2d0>  // b.none
    5d28:	bl	0 <_ZdlPv>
    5d2c:	ldr	w8, [x20, #48]
    5d30:	cmp	w8, #0x1
    5d34:	b.ne	5e00 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x3a4>  // b.any
    5d38:	ldp	x20, x21, [x29, #-32]
    5d3c:	add	x0, x19, #0x10
    5d40:	str	x0, [x19]
    5d44:	cbnz	x20, 5d4c <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x2f0>
    5d48:	cbnz	x21, 5fd4 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x578>
    5d4c:	cmp	x21, #0x10
    5d50:	str	x21, [sp, #48]
    5d54:	b.cc	5d74 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x318>  // b.lo, b.ul, b.last
    5d58:	add	x1, sp, #0x30
    5d5c:	mov	x0, x19
    5d60:	mov	x2, xzr
    5d64:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    5d68:	ldr	x8, [sp, #48]
    5d6c:	str	x0, [x19]
    5d70:	str	x8, [x19, #16]
    5d74:	cbz	x21, 5d98 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x33c>
    5d78:	cmp	x21, #0x1
    5d7c:	b.ne	5d8c <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x330>  // b.any
    5d80:	ldrb	w8, [x20]
    5d84:	strb	w8, [x0]
    5d88:	b	5d98 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x33c>
    5d8c:	mov	x1, x20
    5d90:	mov	x2, x21
    5d94:	bl	0 <memcpy>
    5d98:	ldr	x8, [sp, #48]
    5d9c:	ldr	x9, [x19]
    5da0:	str	x8, [x19, #8]
    5da4:	strb	wzr, [x9, x8]
    5da8:	ldr	x8, [x19, #8]
    5dac:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    5db0:	cmp	x8, x9
    5db4:	b.eq	5fe0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x584>  // b.none
    5db8:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    5dbc:	add	x1, x1, #0x0
    5dc0:	mov	w2, #0x1                   	// #1
    5dc4:	mov	x0, x19
    5dc8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    5dcc:	ldur	x0, [x29, #-32]
    5dd0:	ldr	x8, [sp, #8]
    5dd4:	cmp	x0, x8
    5dd8:	b.eq	5de0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x384>  // b.none
    5ddc:	bl	0 <_ZdlPv>
    5de0:	ldp	x20, x19, [sp, #192]
    5de4:	ldp	x22, x21, [sp, #176]
    5de8:	ldp	x24, x23, [sp, #160]
    5dec:	ldp	x26, x25, [sp, #144]
    5df0:	ldp	x28, x27, [sp, #128]
    5df4:	ldp	x29, x30, [sp, #112]
    5df8:	add	sp, sp, #0xd0
    5dfc:	ret
    5e00:	cbz	w8, 5f94 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x538>
    5e04:	add	x9, sp, #0x30
    5e08:	add	x10, sp, #0x10
    5e0c:	mov	w8, w8
    5e10:	adrp	x21, 0 <_ZNK4llvm5RecTy4dumpEv>
    5e14:	adrp	x22, 0 <_ZNK4llvm5RecTy4dumpEv>
    5e18:	mov	x24, xzr
    5e1c:	add	x25, x20, #0x40
    5e20:	add	x21, x21, #0x0
    5e24:	add	x26, x9, #0x10
    5e28:	add	x27, x10, #0x10
    5e2c:	sub	x28, x8, #0x2
    5e30:	add	x22, x22, #0x0
    5e34:	ldr	x0, [x25, x24, lsl #3]
    5e38:	ldr	x8, [x0]
    5e3c:	ldr	x9, [x8, #40]
    5e40:	add	x8, sp, #0x10
    5e44:	blr	x9
    5e48:	add	x0, sp, #0x10
    5e4c:	mov	w4, #0x2                   	// #2
    5e50:	mov	x1, xzr
    5e54:	mov	x2, xzr
    5e58:	mov	x3, x21
    5e5c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    5e60:	str	x26, [sp, #48]
    5e64:	mov	x8, x0
    5e68:	ldr	x9, [x8], #16
    5e6c:	cmp	x9, x8
    5e70:	b.eq	5e84 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x428>  // b.none
    5e74:	str	x9, [sp, #48]
    5e78:	ldr	x9, [x0, #16]
    5e7c:	str	x9, [sp, #64]
    5e80:	b	5e8c <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x430>
    5e84:	ldr	q0, [x9]
    5e88:	str	q0, [x26]
    5e8c:	ldr	x9, [x0, #8]
    5e90:	str	x9, [sp, #56]
    5e94:	stp	x8, xzr, [x0]
    5e98:	strb	wzr, [x0, #16]
    5e9c:	ldp	x1, x2, [sp, #48]
    5ea0:	sub	x0, x29, #0x20
    5ea4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    5ea8:	ldr	x0, [sp, #48]
    5eac:	cmp	x0, x26
    5eb0:	b.eq	5eb8 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x45c>  // b.none
    5eb4:	bl	0 <_ZdlPv>
    5eb8:	ldr	x0, [sp, #16]
    5ebc:	add	x23, x24, #0x1
    5ec0:	cmp	x0, x27
    5ec4:	b.eq	5ecc <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x470>  // b.none
    5ec8:	bl	0 <_ZdlPv>
    5ecc:	ldr	w8, [x20, #52]
    5ed0:	cmp	x23, x8
    5ed4:	b.cs	5fb4 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x558>  // b.hs, b.nlast
    5ed8:	ldr	w8, [x20, #48]
    5edc:	add	x8, x25, x8, lsl #3
    5ee0:	ldr	x0, [x8, x24, lsl #3]
    5ee4:	cbz	x0, 5f78 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x51c>
    5ee8:	ldr	x8, [x0]
    5eec:	ldr	x9, [x8, #48]
    5ef0:	add	x8, sp, #0x10
    5ef4:	blr	x9
    5ef8:	add	x0, sp, #0x10
    5efc:	mov	w4, #0x2                   	// #2
    5f00:	mov	x1, xzr
    5f04:	mov	x2, xzr
    5f08:	mov	x3, x22
    5f0c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    5f10:	str	x26, [sp, #48]
    5f14:	mov	x8, x0
    5f18:	ldr	x9, [x8], #16
    5f1c:	cmp	x9, x8
    5f20:	b.eq	5f34 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x4d8>  // b.none
    5f24:	str	x9, [sp, #48]
    5f28:	ldr	x9, [x0, #16]
    5f2c:	str	x9, [sp, #64]
    5f30:	b	5f3c <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x4e0>
    5f34:	ldr	q0, [x9]
    5f38:	str	q0, [x26]
    5f3c:	ldr	x9, [x0, #8]
    5f40:	str	x9, [sp, #56]
    5f44:	stp	x8, xzr, [x0]
    5f48:	strb	wzr, [x0, #16]
    5f4c:	ldp	x1, x2, [sp, #48]
    5f50:	sub	x0, x29, #0x20
    5f54:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    5f58:	ldr	x0, [sp, #48]
    5f5c:	cmp	x0, x26
    5f60:	b.eq	5f68 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x50c>  // b.none
    5f64:	bl	0 <_ZdlPv>
    5f68:	ldr	x0, [sp, #16]
    5f6c:	cmp	x0, x27
    5f70:	b.eq	5f78 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x51c>  // b.none
    5f74:	bl	0 <_ZdlPv>
    5f78:	cmp	x28, x24
    5f7c:	b.eq	5d38 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x2dc>  // b.none
    5f80:	ldr	w8, [x20, #48]
    5f84:	add	x9, x24, #0x2
    5f88:	add	x24, x24, #0x1
    5f8c:	cmp	x9, x8
    5f90:	b.cc	5e34 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x3d8>  // b.lo, b.ul, b.last
    5f94:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    5f98:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    5f9c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    5fa0:	add	x0, x0, #0x0
    5fa4:	add	x1, x1, #0x0
    5fa8:	add	x3, x3, #0x0
    5fac:	mov	w2, #0x540                 	// #1344
    5fb0:	bl	0 <__assert_fail>
    5fb4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    5fb8:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    5fbc:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    5fc0:	add	x0, x0, #0x0
    5fc4:	add	x1, x1, #0x0
    5fc8:	add	x3, x3, #0x0
    5fcc:	mov	w2, #0x545                 	// #1349
    5fd0:	bl	0 <__assert_fail>
    5fd4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    5fd8:	add	x0, x0, #0x0
    5fdc:	bl	0 <_ZSt19__throw_logic_errorPKc>
    5fe0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    5fe4:	add	x0, x0, #0x0
    5fe8:	bl	0 <_ZSt20__throw_length_errorPKc>

0000000000005fec <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE>:
    5fec:	sub	sp, sp, #0xf0
    5ff0:	stp	x29, x30, [sp, #144]
    5ff4:	str	x27, [sp, #160]
    5ff8:	stp	x26, x25, [sp, #176]
    5ffc:	stp	x24, x23, [sp, #192]
    6000:	stp	x22, x21, [sp, #208]
    6004:	stp	x20, x19, [sp, #224]
    6008:	add	x29, sp, #0x90
    600c:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    6010:	add	x8, x8, #0x0
    6014:	ldarb	w8, [x8]
    6018:	mov	x21, x5
    601c:	mov	x19, x4
    6020:	mov	x20, x3
    6024:	mov	x22, x2
    6028:	mov	x23, x1
    602c:	mov	x24, x0
    6030:	tbz	w8, #0, 6158 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE+0x16c>
    6034:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    6038:	ldr	d0, [x8]
    603c:	mov	x8, sp
    6040:	add	x27, x8, #0x10
    6044:	mov	x0, sp
    6048:	mov	x1, x24
    604c:	mov	x2, x23
    6050:	mov	x3, x22
    6054:	mov	x4, x20
    6058:	mov	x5, x19
    605c:	mov	x6, x21
    6060:	str	x27, [sp]
    6064:	str	d0, [sp, #8]
    6068:	bl	bfc8 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE>
    606c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    6070:	add	x0, x0, #0x0
    6074:	mov	x1, sp
    6078:	add	x2, x29, #0x18
    607c:	str	xzr, [x29, #24]
    6080:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    6084:	cbz	x0, 6090 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE+0xa4>
    6088:	sub	x25, x0, #0x18
    608c:	b	6124 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE+0x138>
    6090:	add	x8, x21, x20
    6094:	lsl	x8, x8, #3
    6098:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    609c:	add	x1, x8, #0x38
    60a0:	add	x0, x0, #0x0
    60a4:	mov	w2, #0x3                   	// #3
    60a8:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    60ac:	mov	w8, #0x5                   	// #5
    60b0:	adrp	x9, e8 <_ZNK4llvm5RecTy19typeIsConvertibleToEPKS0_+0x24>
    60b4:	ldr	x9, [x9]
    60b8:	strh	w8, [x0, #8]
    60bc:	adrp	x8, d58 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0xa0>
    60c0:	ldr	x8, [x8]
    60c4:	mov	x26, x0
    60c8:	mov	x25, x0
    60cc:	str	x9, [x0, #16]
    60d0:	lsl	x2, x20, #3
    60d4:	str	xzr, [x26, #24]!
    60d8:	add	x8, x8, #0x10
    60dc:	stp	x24, x23, [x0, #32]
    60e0:	add	x23, x0, #0x38
    60e4:	stp	w20, w21, [x0, #48]
    60e8:	str	x8, [x0]
    60ec:	cbz	x2, 60fc <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE+0x110>
    60f0:	mov	x0, x23
    60f4:	mov	x1, x22
    60f8:	bl	0 <memmove>
    60fc:	lsl	x2, x21, #3
    6100:	cbz	x2, 6110 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE+0x124>
    6104:	add	x0, x23, w20, uxtw #3
    6108:	mov	x1, x19
    610c:	bl	0 <memmove>
    6110:	ldr	x2, [x29, #24]
    6114:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    6118:	add	x0, x0, #0x0
    611c:	mov	x1, x26
    6120:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    6124:	ldr	x0, [sp]
    6128:	cmp	x0, x27
    612c:	b.eq	6134 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE+0x148>  // b.none
    6130:	bl	0 <free>
    6134:	mov	x0, x25
    6138:	ldp	x20, x19, [sp, #224]
    613c:	ldp	x22, x21, [sp, #208]
    6140:	ldp	x24, x23, [sp, #192]
    6144:	ldp	x26, x25, [sp, #176]
    6148:	ldr	x27, [sp, #160]
    614c:	ldp	x29, x30, [sp, #144]
    6150:	add	sp, sp, #0xf0
    6154:	ret
    6158:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    615c:	add	x0, x0, #0x0
    6160:	bl	0 <__cxa_guard_acquire>
    6164:	cbz	w0, 6034 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE+0x48>
    6168:	adrp	x25, 0 <_ZNK4llvm5RecTy4dumpEv>
    616c:	add	x25, x25, #0x0
    6170:	mov	w1, #0x6                   	// #6
    6174:	mov	x0, x25
    6178:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    617c:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    6180:	ldr	x8, [x8]
    6184:	adrp	x0, 0 <_ZN4llvm14FoldingSetBaseD2Ev>
    6188:	adrp	x2, 0 <__dso_handle>
    618c:	add	x2, x2, #0x0
    6190:	add	x8, x8, #0x10
    6194:	str	x8, [x25]
    6198:	ldr	x0, [x0]
    619c:	mov	x1, x25
    61a0:	bl	0 <__cxa_atexit>
    61a4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    61a8:	add	x0, x0, #0x0
    61ac:	bl	0 <__cxa_guard_release>
    61b0:	b	6034 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE+0x48>

00000000000061b4 <_ZNK4llvm9BinOpInit17resolveReferencesERNS_8ResolverE>:
    61b4:	stp	x29, x30, [sp, #-48]!
    61b8:	str	x21, [sp, #16]
    61bc:	stp	x20, x19, [sp, #32]
    61c0:	mov	x29, sp
    61c4:	mov	x19, x0
    61c8:	ldr	x0, [x0, #32]
    61cc:	mov	x21, x1
    61d0:	ldr	x8, [x0]
    61d4:	ldr	x8, [x8, #96]
    61d8:	blr	x8
    61dc:	ldr	x8, [x19, #40]
    61e0:	mov	x20, x0
    61e4:	mov	x1, x21
    61e8:	ldr	x9, [x8]
    61ec:	mov	x0, x8
    61f0:	ldr	x9, [x9, #96]
    61f4:	blr	x9
    61f8:	ldr	x8, [x19, #32]
    61fc:	mov	x2, x0
    6200:	cmp	x8, x20
    6204:	b.ne	6214 <_ZNK4llvm9BinOpInit17resolveReferencesERNS_8ResolverE+0x60>  // b.any
    6208:	ldr	x8, [x19, #40]
    620c:	cmp	x8, x2
    6210:	b.eq	6234 <_ZNK4llvm9BinOpInit17resolveReferencesERNS_8ResolverE+0x80>  // b.none
    6214:	ldr	x3, [x19, #16]
    6218:	ldrb	w0, [x19, #9]
    621c:	mov	x1, x20
    6220:	bl	4728 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE>
    6224:	ldp	x20, x19, [sp, #32]
    6228:	ldr	x21, [sp, #16]
    622c:	ldp	x29, x30, [sp], #48
    6230:	b	4c48 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE>
    6234:	mov	x0, x19
    6238:	ldp	x20, x19, [sp, #32]
    623c:	ldr	x21, [sp, #16]
    6240:	ldp	x29, x30, [sp], #48
    6244:	ret

0000000000006248 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev>:
    6248:	sub	sp, sp, #0x130
    624c:	stp	x29, x30, [sp, #224]
    6250:	str	x28, [sp, #240]
    6254:	stp	x24, x23, [sp, #256]
    6258:	stp	x22, x21, [sp, #272]
    625c:	stp	x20, x19, [sp, #288]
    6260:	add	x29, sp, #0xe0
    6264:	sub	x9, x29, #0x20
    6268:	add	x23, x9, #0x10
    626c:	stp	x23, xzr, [x29, #-32]
    6270:	sturb	wzr, [x29, #-16]
    6274:	ldrb	w9, [x0, #9]
    6278:	mov	x20, x0
    627c:	mov	x19, x8
    6280:	cmp	w9, #0x11
    6284:	b.hi	6394 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x14c>  // b.pmore
    6288:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    628c:	add	x8, x8, #0x0
    6290:	adr	x10, 62a0 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x58>
    6294:	ldrh	w11, [x8, x9, lsl #1]
    6298:	add	x10, x10, x11, lsl #2
    629c:	br	x10
    62a0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    62a4:	add	x3, x3, #0x0
    62a8:	b	636c <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x124>
    62ac:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    62b0:	add	x3, x3, #0x0
    62b4:	b	6380 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x138>
    62b8:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    62bc:	add	x3, x3, #0x0
    62c0:	b	6380 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x138>
    62c4:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    62c8:	add	x3, x3, #0x0
    62cc:	b	636c <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x124>
    62d0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    62d4:	add	x3, x3, #0x0
    62d8:	b	6380 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x138>
    62dc:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    62e0:	add	x3, x3, #0x0
    62e4:	b	6380 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x138>
    62e8:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    62ec:	add	x3, x3, #0x0
    62f0:	b	636c <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x124>
    62f4:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    62f8:	add	x3, x3, #0x0
    62fc:	b	6380 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x138>
    6300:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    6304:	add	x3, x3, #0x0
    6308:	sub	x0, x29, #0x20
    630c:	mov	w4, #0xb                   	// #11
    6310:	b	6388 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x140>
    6314:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    6318:	add	x3, x3, #0x0
    631c:	b	6358 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x110>
    6320:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    6324:	add	x3, x3, #0x0
    6328:	b	6380 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x138>
    632c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    6330:	add	x3, x3, #0x0
    6334:	b	636c <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x124>
    6338:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    633c:	add	x3, x3, #0x0
    6340:	b	636c <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x124>
    6344:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    6348:	add	x3, x3, #0x0
    634c:	b	636c <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x124>
    6350:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    6354:	add	x3, x3, #0x0
    6358:	sub	x0, x29, #0x20
    635c:	mov	w4, #0xa                   	// #10
    6360:	b	6388 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x140>
    6364:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    6368:	add	x3, x3, #0x0
    636c:	sub	x0, x29, #0x20
    6370:	mov	w4, #0x4                   	// #4
    6374:	b	6388 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x140>
    6378:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    637c:	add	x3, x3, #0x0
    6380:	sub	x0, x29, #0x20
    6384:	mov	w4, #0x3                   	// #3
    6388:	mov	x1, xzr
    638c:	mov	x2, xzr
    6390:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    6394:	ldp	x21, x22, [x29, #-32]
    6398:	add	x8, sp, #0x40
    639c:	add	x24, x8, #0x10
    63a0:	str	x24, [sp, #64]
    63a4:	cbnz	x21, 63ac <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x164>
    63a8:	cbnz	x22, 6734 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x4ec>
    63ac:	cmp	x22, #0x10
    63b0:	stur	x22, [x29, #-64]
    63b4:	b.cc	63dc <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x194>  // b.lo, b.ul, b.last
    63b8:	add	x0, sp, #0x40
    63bc:	sub	x1, x29, #0x40
    63c0:	mov	x2, xzr
    63c4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    63c8:	ldur	x8, [x29, #-64]
    63cc:	str	x0, [sp, #64]
    63d0:	str	x8, [sp, #80]
    63d4:	cbnz	x22, 63e4 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x19c>
    63d8:	b	6404 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x1bc>
    63dc:	mov	x0, x24
    63e0:	cbz	x22, 6404 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x1bc>
    63e4:	cmp	x22, #0x1
    63e8:	b.ne	63f8 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x1b0>  // b.any
    63ec:	ldrb	w8, [x21]
    63f0:	strb	w8, [x0]
    63f4:	b	6404 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x1bc>
    63f8:	mov	x1, x21
    63fc:	mov	x2, x22
    6400:	bl	0 <memcpy>
    6404:	ldur	x8, [x29, #-64]
    6408:	ldr	x9, [sp, #64]
    640c:	str	x8, [sp, #72]
    6410:	strb	wzr, [x9, x8]
    6414:	ldr	x8, [sp, #72]
    6418:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    641c:	cmp	x8, x9
    6420:	b.eq	6728 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x4e0>  // b.none
    6424:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    6428:	add	x1, x1, #0x0
    642c:	add	x0, sp, #0x40
    6430:	mov	w2, #0x1                   	// #1
    6434:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    6438:	ldr	x0, [x20, #32]
    643c:	add	x21, sp, #0x20
    6440:	ldr	x8, [x0]
    6444:	ldr	x9, [x8, #40]
    6448:	add	x8, sp, #0x20
    644c:	blr	x9
    6450:	ldp	x3, x4, [sp, #64]
    6454:	ldp	x1, x2, [sp, #32]
    6458:	ldr	x9, [sp, #80]
    645c:	mov	w10, #0xf                   	// #15
    6460:	cmp	x3, x24
    6464:	add	x8, x2, x4
    6468:	csel	x9, x10, x9, eq  // eq = none
    646c:	cmp	x8, x9
    6470:	b.ls	6490 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x248>  // b.plast
    6474:	ldr	x9, [sp, #48]
    6478:	add	x10, x21, #0x10
    647c:	cmp	x1, x10
    6480:	mov	w10, #0xf                   	// #15
    6484:	csel	x9, x10, x9, eq  // eq = none
    6488:	cmp	x8, x9
    648c:	b.ls	649c <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x254>  // b.plast
    6490:	add	x0, sp, #0x40
    6494:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    6498:	b	64ac <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x264>
    649c:	add	x0, sp, #0x20
    64a0:	mov	x1, xzr
    64a4:	mov	x2, xzr
    64a8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    64ac:	add	x8, sp, #0x60
    64b0:	add	x21, x8, #0x10
    64b4:	str	x21, [sp, #96]
    64b8:	mov	x8, x0
    64bc:	ldr	x9, [x8], #16
    64c0:	cmp	x9, x8
    64c4:	b.eq	64d8 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x290>  // b.none
    64c8:	str	x9, [sp, #96]
    64cc:	ldr	x9, [x0, #16]
    64d0:	str	x9, [sp, #112]
    64d4:	b	64e0 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x298>
    64d8:	ldr	q0, [x9]
    64dc:	str	q0, [x21]
    64e0:	ldr	x9, [x0, #8]
    64e4:	str	x9, [sp, #104]
    64e8:	stp	x8, xzr, [x0]
    64ec:	strb	wzr, [x0, #16]
    64f0:	ldr	x8, [sp, #104]
    64f4:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    64f8:	orr	x8, x8, #0x1
    64fc:	cmp	x8, x9
    6500:	b.eq	6728 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x4e0>  // b.none
    6504:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    6508:	add	x1, x1, #0x0
    650c:	add	x0, sp, #0x60
    6510:	mov	w2, #0x2                   	// #2
    6514:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    6518:	sub	x8, x29, #0x60
    651c:	add	x22, x8, #0x10
    6520:	stur	x22, [x29, #-96]
    6524:	mov	x8, x0
    6528:	ldr	x9, [x8], #16
    652c:	cmp	x9, x8
    6530:	b.eq	6544 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x2fc>  // b.none
    6534:	stur	x9, [x29, #-96]
    6538:	ldr	x9, [x0, #16]
    653c:	stur	x9, [x29, #-80]
    6540:	b	654c <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x304>
    6544:	ldr	q0, [x9]
    6548:	str	q0, [x22]
    654c:	ldr	x9, [x0, #8]
    6550:	stur	x9, [x29, #-88]
    6554:	stp	x8, xzr, [x0]
    6558:	strb	wzr, [x0, #16]
    655c:	ldr	x0, [x20, #40]
    6560:	mov	x20, sp
    6564:	ldr	x8, [x0]
    6568:	ldr	x9, [x8, #40]
    656c:	mov	x8, sp
    6570:	blr	x9
    6574:	ldp	x3, x4, [x29, #-96]
    6578:	ldp	x1, x2, [sp]
    657c:	ldur	x9, [x29, #-80]
    6580:	mov	w10, #0xf                   	// #15
    6584:	cmp	x3, x22
    6588:	add	x8, x2, x4
    658c:	csel	x9, x10, x9, eq  // eq = none
    6590:	cmp	x8, x9
    6594:	b.ls	65b4 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x36c>  // b.plast
    6598:	ldr	x9, [sp, #16]
    659c:	add	x10, x20, #0x10
    65a0:	cmp	x1, x10
    65a4:	mov	w10, #0xf                   	// #15
    65a8:	csel	x9, x10, x9, eq  // eq = none
    65ac:	cmp	x8, x9
    65b0:	b.ls	65c0 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x378>  // b.plast
    65b4:	sub	x0, x29, #0x60
    65b8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    65bc:	b	65d0 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x388>
    65c0:	mov	x0, sp
    65c4:	mov	x1, xzr
    65c8:	mov	x2, xzr
    65cc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    65d0:	sub	x8, x29, #0x40
    65d4:	add	x20, x8, #0x10
    65d8:	stur	x20, [x29, #-64]
    65dc:	mov	x8, x0
    65e0:	ldr	x9, [x8], #16
    65e4:	cmp	x9, x8
    65e8:	b.eq	65fc <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x3b4>  // b.none
    65ec:	stur	x9, [x29, #-64]
    65f0:	ldr	x9, [x0, #16]
    65f4:	stur	x9, [x29, #-48]
    65f8:	b	6604 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x3bc>
    65fc:	ldr	q0, [x9]
    6600:	str	q0, [x20]
    6604:	ldr	x9, [x0, #8]
    6608:	stur	x9, [x29, #-56]
    660c:	stp	x8, xzr, [x0]
    6610:	strb	wzr, [x0, #16]
    6614:	ldur	x8, [x29, #-56]
    6618:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    661c:	cmp	x8, x9
    6620:	b.eq	6728 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x4e0>  // b.none
    6624:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    6628:	add	x1, x1, #0x0
    662c:	sub	x0, x29, #0x40
    6630:	mov	w2, #0x1                   	// #1
    6634:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    6638:	add	x9, x19, #0x10
    663c:	str	x9, [x19]
    6640:	mov	x8, x0
    6644:	ldr	x10, [x8], #16
    6648:	cmp	x10, x8
    664c:	b.eq	6660 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x418>  // b.none
    6650:	str	x10, [x19]
    6654:	ldr	x9, [x0, #16]
    6658:	str	x9, [x19, #16]
    665c:	b	6668 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x420>
    6660:	ldr	q0, [x10]
    6664:	str	q0, [x9]
    6668:	ldr	x9, [x0, #8]
    666c:	str	x9, [x19, #8]
    6670:	stp	x8, xzr, [x0]
    6674:	strb	wzr, [x0, #16]
    6678:	ldur	x0, [x29, #-64]
    667c:	cmp	x0, x20
    6680:	b.eq	6688 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x440>  // b.none
    6684:	bl	0 <_ZdlPv>
    6688:	ldr	x0, [sp]
    668c:	mov	x8, sp
    6690:	add	x8, x8, #0x10
    6694:	cmp	x0, x8
    6698:	b.eq	66a0 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x458>  // b.none
    669c:	bl	0 <_ZdlPv>
    66a0:	ldur	x0, [x29, #-96]
    66a4:	cmp	x0, x22
    66a8:	b.eq	66b0 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x468>  // b.none
    66ac:	bl	0 <_ZdlPv>
    66b0:	ldr	x0, [sp, #96]
    66b4:	cmp	x0, x21
    66b8:	b.eq	66c0 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x478>  // b.none
    66bc:	bl	0 <_ZdlPv>
    66c0:	ldr	x0, [sp, #32]
    66c4:	add	x8, sp, #0x20
    66c8:	add	x8, x8, #0x10
    66cc:	cmp	x0, x8
    66d0:	b.eq	66d8 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x490>  // b.none
    66d4:	bl	0 <_ZdlPv>
    66d8:	ldr	x0, [sp, #64]
    66dc:	cmp	x0, x24
    66e0:	b.eq	66e8 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x4a0>  // b.none
    66e4:	bl	0 <_ZdlPv>
    66e8:	ldur	x0, [x29, #-32]
    66ec:	cmp	x0, x23
    66f0:	b.eq	66f8 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x4b0>  // b.none
    66f4:	bl	0 <_ZdlPv>
    66f8:	ldp	x20, x19, [sp, #288]
    66fc:	ldp	x22, x21, [sp, #272]
    6700:	ldp	x24, x23, [sp, #256]
    6704:	ldr	x28, [sp, #240]
    6708:	ldp	x29, x30, [sp, #224]
    670c:	add	sp, sp, #0x130
    6710:	ret
    6714:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    6718:	add	x3, x3, #0x0
    671c:	sub	x0, x29, #0x20
    6720:	mov	w4, #0x6                   	// #6
    6724:	b	6388 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x140>
    6728:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    672c:	add	x0, x0, #0x0
    6730:	bl	0 <_ZSt20__throw_length_errorPKc>
    6734:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    6738:	add	x0, x0, #0x0
    673c:	bl	0 <_ZSt19__throw_logic_errorPKc>

0000000000006740 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE>:
    6740:	sub	sp, sp, #0xe0
    6744:	stp	x29, x30, [sp, #144]
    6748:	str	x25, [sp, #160]
    674c:	stp	x24, x23, [sp, #176]
    6750:	stp	x22, x21, [sp, #192]
    6754:	stp	x20, x19, [sp, #208]
    6758:	add	x29, sp, #0x90
    675c:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    6760:	add	x8, x8, #0x0
    6764:	ldarb	w8, [x8]
    6768:	mov	x22, x4
    676c:	mov	x19, x3
    6770:	mov	x20, x2
    6774:	mov	x21, x1
    6778:	mov	w23, w0
    677c:	tbz	w8, #0, 6880 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE+0x140>
    6780:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    6784:	ldr	d0, [x8]
    6788:	mov	x8, sp
    678c:	add	x25, x8, #0x10
    6790:	and	w1, w23, #0xff
    6794:	mov	x0, sp
    6798:	str	x25, [sp]
    679c:	str	d0, [sp, #8]
    67a0:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
    67a4:	mov	x0, sp
    67a8:	mov	x1, x21
    67ac:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    67b0:	mov	x0, sp
    67b4:	mov	x1, x20
    67b8:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    67bc:	mov	x0, sp
    67c0:	mov	x1, x19
    67c4:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    67c8:	mov	x0, sp
    67cc:	mov	x1, x22
    67d0:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    67d4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    67d8:	add	x0, x0, #0x0
    67dc:	mov	x1, sp
    67e0:	add	x2, x29, #0x18
    67e4:	str	xzr, [x29, #24]
    67e8:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    67ec:	cbz	x0, 67f8 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE+0xb8>
    67f0:	sub	x24, x0, #0x18
    67f4:	b	6850 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE+0x110>
    67f8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    67fc:	add	x0, x0, #0x0
    6800:	mov	w1, #0x38                  	// #56
    6804:	mov	w2, #0x4                   	// #4
    6808:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    680c:	strb	w23, [x0, #9]
    6810:	str	x22, [x0, #16]
    6814:	adrp	x9, 8c0 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0xd8>
    6818:	ldr	x9, [x9]
    681c:	mov	w8, #0xc                   	// #12
    6820:	ldr	x2, [x29, #24]
    6824:	mov	x1, x0
    6828:	strb	w8, [x0, #8]
    682c:	add	x8, x9, #0x10
    6830:	mov	x24, x0
    6834:	str	xzr, [x1, #24]!
    6838:	str	x8, [x0]
    683c:	stp	x21, x20, [x0, #32]
    6840:	str	x19, [x0, #48]
    6844:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    6848:	add	x0, x0, #0x0
    684c:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    6850:	ldr	x0, [sp]
    6854:	cmp	x0, x25
    6858:	b.eq	6860 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE+0x120>  // b.none
    685c:	bl	0 <free>
    6860:	mov	x0, x24
    6864:	ldp	x20, x19, [sp, #208]
    6868:	ldp	x22, x21, [sp, #192]
    686c:	ldp	x24, x23, [sp, #176]
    6870:	ldr	x25, [sp, #160]
    6874:	ldp	x29, x30, [sp, #144]
    6878:	add	sp, sp, #0xe0
    687c:	ret
    6880:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    6884:	add	x0, x0, #0x0
    6888:	bl	0 <__cxa_guard_acquire>
    688c:	cbz	w0, 6780 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE+0x40>
    6890:	adrp	x24, 0 <_ZNK4llvm5RecTy4dumpEv>
    6894:	add	x24, x24, #0x0
    6898:	mov	w1, #0x6                   	// #6
    689c:	mov	x0, x24
    68a0:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    68a4:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    68a8:	ldr	x8, [x8]
    68ac:	adrp	x0, 0 <_ZN4llvm14FoldingSetBaseD2Ev>
    68b0:	adrp	x2, 0 <__dso_handle>
    68b4:	add	x2, x2, #0x0
    68b8:	add	x8, x8, #0x10
    68bc:	str	x8, [x24]
    68c0:	ldr	x0, [x0]
    68c4:	mov	x1, x24
    68c8:	bl	0 <__cxa_atexit>
    68cc:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    68d0:	add	x0, x0, #0x0
    68d4:	bl	0 <__cxa_guard_release>
    68d8:	b	6780 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE+0x40>

00000000000068dc <_ZNK4llvm10TernOpInit7ProfileERNS_16FoldingSetNodeIDE>:
    68dc:	stp	x29, x30, [sp, #-64]!
    68e0:	str	x23, [sp, #16]
    68e4:	stp	x22, x21, [sp, #32]
    68e8:	stp	x20, x19, [sp, #48]
    68ec:	mov	x29, sp
    68f0:	ldrb	w8, [x0, #9]
    68f4:	ldp	x19, x20, [x0, #32]
    68f8:	ldr	x21, [x0, #48]
    68fc:	ldr	x22, [x0, #16]
    6900:	mov	x23, x1
    6904:	mov	x0, x1
    6908:	mov	w1, w8
    690c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
    6910:	mov	x0, x23
    6914:	mov	x1, x19
    6918:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    691c:	mov	x0, x23
    6920:	mov	x1, x20
    6924:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    6928:	mov	x0, x23
    692c:	mov	x1, x21
    6930:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    6934:	mov	x0, x23
    6938:	mov	x1, x22
    693c:	ldp	x20, x19, [sp, #48]
    6940:	ldp	x22, x21, [sp, #32]
    6944:	ldr	x23, [sp, #16]
    6948:	ldp	x29, x30, [sp], #64
    694c:	b	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>

0000000000006950 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE>:
    6950:	sub	sp, sp, #0x160
    6954:	stp	x29, x30, [sp, #256]
    6958:	stp	x28, x27, [sp, #272]
    695c:	stp	x26, x25, [sp, #288]
    6960:	stp	x24, x23, [sp, #304]
    6964:	stp	x22, x21, [sp, #320]
    6968:	stp	x20, x19, [sp, #336]
    696c:	add	x29, sp, #0x100
    6970:	ldrb	w8, [x0, #9]
    6974:	mov	x19, x0
    6978:	cmp	w8, #0x3
    697c:	b.hi	6fb4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x664>  // b.pmore
    6980:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    6984:	add	x9, x9, #0x0
    6988:	adr	x10, 6998 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x48>
    698c:	ldrb	w11, [x9, x8]
    6990:	add	x10, x10, x11, lsl #2
    6994:	br	x10
    6998:	ldr	x9, [x19, #32]
    699c:	cbz	x9, 7508 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xbb8>
    69a0:	ldrb	w8, [x9, #8]
    69a4:	ldr	x10, [x19, #40]
    69a8:	cmp	w8, #0x6
    69ac:	csel	x0, x9, xzr, eq  // eq = none
    69b0:	cmp	w8, #0x13
    69b4:	csel	x20, x9, xzr, eq  // eq = none
    69b8:	cmp	w8, #0x12
    69bc:	csel	x23, x9, xzr, eq  // eq = none
    69c0:	cbz	x10, 7508 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xbb8>
    69c4:	ldrb	w9, [x10, #8]
    69c8:	ldr	x11, [x19, #48]
    69cc:	cmp	w9, #0x6
    69d0:	csel	x26, x10, xzr, eq  // eq = none
    69d4:	cmp	w9, #0x13
    69d8:	csel	x25, x10, xzr, eq  // eq = none
    69dc:	cmp	w9, #0x12
    69e0:	csel	x24, x10, xzr, eq  // eq = none
    69e4:	cbz	x11, 7508 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xbb8>
    69e8:	ldrb	w10, [x11, #8]
    69ec:	cmp	w10, #0x6
    69f0:	csel	x22, x11, xzr, eq  // eq = none
    69f4:	cmp	w10, #0x13
    69f8:	csel	x21, x11, xzr, eq  // eq = none
    69fc:	cmp	w10, #0x12
    6a00:	csel	x11, x11, xzr, eq  // eq = none
    6a04:	cmp	w8, #0x6
    6a08:	b.ne	6e80 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x530>  // b.any
    6a0c:	cmp	w9, #0x6
    6a10:	b.ne	6e80 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x530>  // b.any
    6a14:	cmp	w10, #0x6
    6a18:	b.ne	6e80 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x530>  // b.any
    6a1c:	ldr	x8, [x0]
    6a20:	ldr	x19, [x22, #24]
    6a24:	ldr	x9, [x8, #40]
    6a28:	add	x8, sp, #0x10
    6a2c:	blr	x9
    6a30:	ldr	x8, [x22]
    6a34:	mov	x0, x22
    6a38:	sub	x21, x29, #0x40
    6a3c:	ldr	x9, [x8, #40]
    6a40:	sub	x8, x29, #0x40
    6a44:	blr	x9
    6a48:	ldr	x2, [sp, #24]
    6a4c:	ldur	x8, [x29, #-56]
    6a50:	cmp	x2, x8
    6a54:	b.ne	6f60 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x610>  // b.any
    6a58:	cbz	x2, 6fe4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x694>
    6a5c:	ldur	x1, [x29, #-64]
    6a60:	ldr	x0, [sp, #16]
    6a64:	bl	0 <bcmp>
    6a68:	cmp	w0, #0x0
    6a6c:	cset	w20, eq  // eq = none
    6a70:	b	6fe8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x698>
    6a74:	ldr	x0, [x19, #32]
    6a78:	adrp	x1, b8 <_ZN4llvm5RecTy9getListTyEv+0x4c>
    6a7c:	ldr	x8, [x0]
    6a80:	ldr	x8, [x8, #64]
    6a84:	ldr	x1, [x1]
    6a88:	blr	x8
    6a8c:	cbz	x0, 6fb4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x664>
    6a90:	ldrb	w8, [x0, #8]
    6a94:	cmp	w8, #0x8
    6a98:	b.ne	6fb4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x664>  // b.any
    6a9c:	ldr	x8, [x0, #24]
    6aa0:	cbz	x8, 6fdc <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x68c>
    6aa4:	ldr	x20, [x19, #40]
    6aa8:	b	6fb8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x668>
    6aac:	ldr	x8, [x19, #40]
    6ab0:	cbz	x8, 7548 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xbf8>
    6ab4:	ldrb	w21, [x8, #8]
    6ab8:	ldr	x9, [x19, #48]
    6abc:	cmp	w21, #0x9
    6ac0:	csel	x22, x8, xzr, eq  // eq = none
    6ac4:	cbz	x9, 7548 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xbf8>
    6ac8:	ldrb	w23, [x9, #8]
    6acc:	cmp	w23, #0x9
    6ad0:	csel	x24, x9, xzr, eq  // eq = none
    6ad4:	cmp	w21, #0x18
    6ad8:	b.ne	6ae4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x194>  // b.any
    6adc:	cmp	w23, #0x18
    6ae0:	b.eq	6fb4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x664>  // b.none
    6ae4:	cmp	w23, #0x18
    6ae8:	cset	w9, eq  // eq = none
    6aec:	cmp	w21, #0x18
    6af0:	cset	w11, ne  // ne = any
    6af4:	cmp	w23, #0x9
    6af8:	cset	w10, eq  // eq = none
    6afc:	cmp	w21, #0x9
    6b00:	cset	w12, ne  // ne = any
    6b04:	and	w11, w12, w11
    6b08:	tbnz	w11, #0, 6fb4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x664>
    6b0c:	orr	w9, w10, w9
    6b10:	cbz	w9, 6fb4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x664>
    6b14:	cmp	w21, #0x9
    6b18:	b.ne	6b34 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x1e4>  // b.any
    6b1c:	cmp	w23, #0x9
    6b20:	b.ne	6b34 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x1e4>  // b.any
    6b24:	ldr	w9, [x22, #32]
    6b28:	ldr	w10, [x24, #32]
    6b2c:	cmp	w9, w10
    6b30:	b.ne	6fb4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x664>  // b.any
    6b34:	adrp	x10, 0 <_ZNK4llvm5RecTy4dumpEv>
    6b38:	ldr	d0, [x10]
    6b3c:	add	x9, sp, #0x10
    6b40:	cmp	w21, #0x9
    6b44:	add	x2, x9, #0x10
    6b48:	str	x2, [sp, #16]
    6b4c:	str	d0, [sp, #24]
    6b50:	csel	x8, x8, x24, eq  // eq = none
    6b54:	ldr	w25, [x8, #32]
    6b58:	cbz	w25, 70d0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x780>
    6b5c:	adrp	x14, 378 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0xe8>
    6b60:	ldr	x14, [x14]
    6b64:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    6b68:	adrp	x13, 0 <_ZNK4llvm5RecTy4dumpEv>
    6b6c:	mov	x26, xzr
    6b70:	add	x12, x22, #0x28
    6b74:	add	x28, x24, #0x28
    6b78:	add	x0, x0, #0x0
    6b7c:	add	x13, x13, #0x0
    6b80:	add	x15, x14, #0x10
    6b84:	cmp	w21, #0x9
    6b88:	b.ne	6ba8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x258>  // b.any
    6b8c:	ldr	w8, [x22, #32]
    6b90:	cmp	x26, x8
    6b94:	b.cs	7568 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xc18>  // b.hs, b.nlast
    6b98:	ldr	x20, [x12, x26, lsl #3]
    6b9c:	cmp	w23, #0x9
    6ba0:	b.eq	6bbc <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x26c>  // b.none
    6ba4:	b	6c40 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x2f0>
    6ba8:	ldarb	w8, [x0]
    6bac:	mov	x20, x13
    6bb0:	tbz	w8, #0, 6bd4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x284>
    6bb4:	cmp	w23, #0x9
    6bb8:	b.ne	6c40 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x2f0>  // b.any
    6bbc:	ldr	w8, [x24, #32]
    6bc0:	cmp	x26, x8
    6bc4:	b.cs	7568 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xc18>  // b.hs, b.nlast
    6bc8:	ldr	x8, [x28, x26, lsl #3]
    6bcc:	cbnz	x8, 6c4c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x2fc>
    6bd0:	b	7588 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xc38>
    6bd4:	stp	x12, x15, [sp]
    6bd8:	mov	x27, x14
    6bdc:	mov	x20, x13
    6be0:	bl	0 <__cxa_guard_acquire>
    6be4:	cbz	w0, 6c20 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x2d0>
    6be8:	mov	w8, #0x18                  	// #24
    6bec:	strh	w8, [x20, #8]
    6bf0:	add	x8, x27, #0x10
    6bf4:	adrp	x27, 0 <_ZNK4llvm5RecTy4dumpEv>
    6bf8:	add	x27, x27, #0x0
    6bfc:	mov	x0, x27
    6c00:	str	x8, [x20]
    6c04:	bl	0 <__cxa_guard_release>
    6c08:	adrp	x14, 378 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0xe8>
    6c0c:	ldr	x14, [x14]
    6c10:	ldr	x12, [sp]
    6c14:	mov	x13, x20
    6c18:	mov	x0, x27
    6c1c:	b	6c34 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x2e4>
    6c20:	ldr	x12, [sp]
    6c24:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    6c28:	mov	x13, x20
    6c2c:	add	x0, x0, #0x0
    6c30:	mov	x14, x27
    6c34:	ldr	x15, [sp, #8]
    6c38:	cmp	w23, #0x9
    6c3c:	b.eq	6bbc <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x26c>  // b.none
    6c40:	ldarb	w9, [x0]
    6c44:	mov	x8, x13
    6c48:	tbz	w9, #0, 6cd4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x384>
    6c4c:	ldrb	w11, [x8, #8]
    6c50:	cmp	w11, #0x18
    6c54:	b.eq	6c60 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x310>  // b.none
    6c58:	cmp	w11, #0x12
    6c5c:	b.ne	70d8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x788>  // b.any
    6c60:	ldp	w9, w10, [sp, #24]
    6c64:	cmp	w11, #0x12
    6c68:	csel	x27, x8, xzr, eq  // eq = none
    6c6c:	cmp	w9, w10
    6c70:	b.cs	6ca0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x350>  // b.hs, b.nlast
    6c74:	ldr	x2, [sp, #16]
    6c78:	cmp	w9, w10
    6c7c:	add	x8, x2, w9, uxtw #4
    6c80:	stp	x20, x27, [x8]
    6c84:	b.cs	7528 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xbd8>  // b.hs, b.nlast
    6c88:	add	x26, x26, #0x1
    6c8c:	add	w8, w9, #0x1
    6c90:	cmp	x25, x26
    6c94:	str	w8, [sp, #24]
    6c98:	b.ne	6b84 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x234>  // b.any
    6c9c:	b	70e0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x790>
    6ca0:	add	x0, sp, #0x10
    6ca4:	mov	x1, xzr
    6ca8:	stp	x12, x15, [sp]
    6cac:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    6cb0:	adrp	x14, 378 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0xe8>
    6cb4:	ldp	x12, x15, [sp]
    6cb8:	ldr	x14, [x14]
    6cbc:	ldp	w9, w10, [sp, #24]
    6cc0:	adrp	x13, 0 <_ZNK4llvm5RecTy4dumpEv>
    6cc4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    6cc8:	add	x13, x13, #0x0
    6ccc:	add	x0, x0, #0x0
    6cd0:	b	6c74 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x324>
    6cd4:	stp	x12, x15, [sp]
    6cd8:	mov	x27, x13
    6cdc:	bl	0 <__cxa_guard_acquire>
    6ce0:	cbz	w0, 6d24 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x3d4>
    6ce4:	mov	w8, #0x18                  	// #24
    6ce8:	strh	w8, [x27, #8]
    6cec:	ldr	x8, [sp, #8]
    6cf0:	str	x8, [x27]
    6cf4:	adrp	x27, 0 <_ZNK4llvm5RecTy4dumpEv>
    6cf8:	add	x27, x27, #0x0
    6cfc:	mov	x0, x27
    6d00:	bl	0 <__cxa_guard_release>
    6d04:	adrp	x14, 378 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0xe8>
    6d08:	ldp	x12, x15, [sp]
    6d0c:	ldr	x14, [x14]
    6d10:	adrp	x13, 0 <_ZNK4llvm5RecTy4dumpEv>
    6d14:	add	x13, x13, #0x0
    6d18:	mov	x0, x27
    6d1c:	mov	x8, x13
    6d20:	b	6c4c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x2fc>
    6d24:	adrp	x14, 378 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0xe8>
    6d28:	ldp	x12, x15, [sp]
    6d2c:	ldr	x14, [x14]
    6d30:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    6d34:	mov	x13, x27
    6d38:	mov	x8, x27
    6d3c:	add	x0, x0, #0x0
    6d40:	b	6c4c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x2fc>
    6d44:	mov	x20, x1
    6d48:	ldr	x1, [x19, #40]
    6d4c:	cbz	x1, 75a8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xc58>
    6d50:	ldrb	w8, [x1, #8]
    6d54:	ldr	x22, [x19, #32]
    6d58:	ldr	x21, [x19, #48]
    6d5c:	cmp	w8, #0x5
    6d60:	b.eq	6eec <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x59c>  // b.none
    6d64:	cmp	w8, #0x9
    6d68:	b.ne	6fb4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x664>  // b.any
    6d6c:	ldr	w23, [x1, #32]
    6d70:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    6d74:	ldr	x26, [x19, #16]
    6d78:	ldr	d0, [x9]
    6d7c:	add	x24, x1, #0x28
    6d80:	add	x8, sp, #0x10
    6d84:	lsl	x25, x23, #3
    6d88:	add	x1, x8, #0x10
    6d8c:	cmp	w23, #0x9
    6d90:	add	x27, x24, x25
    6d94:	str	x1, [sp, #16]
    6d98:	str	d0, [sp, #24]
    6d9c:	b.cc	6db0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x460>  // b.lo, b.ul, b.last
    6da0:	add	x0, sp, #0x10
    6da4:	mov	w3, #0x8                   	// #8
    6da8:	mov	x2, x23
    6dac:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6db0:	cmp	x27, x24
    6db4:	b.eq	6dd0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x480>  // b.none
    6db8:	ldr	x8, [sp, #16]
    6dbc:	ldr	w9, [sp, #24]
    6dc0:	mov	x1, x24
    6dc4:	mov	x2, x25
    6dc8:	add	x0, x8, x9, lsl #3
    6dcc:	bl	0 <memcpy>
    6dd0:	ldp	w8, w9, [sp, #24]
    6dd4:	add	x8, x23, x8
    6dd8:	cmp	x8, x9
    6ddc:	b.hi	7528 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xbd8>  // b.pmore
    6de0:	ldr	x23, [sp, #16]
    6de4:	ands	x9, x8, #0xffffffff
    6de8:	str	w8, [sp, #24]
    6dec:	b.eq	6f70 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x620>  // b.none
    6df0:	lsl	x27, x9, #3
    6df4:	adrp	x9, dd8 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x120>
    6df8:	ldr	x9, [x9]
    6dfc:	sub	x8, x29, #0x40
    6e00:	add	x24, x8, #0x18
    6e04:	add	x28, x9, #0x10
    6e08:	b	6e18 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x4c8>
    6e0c:	subs	x27, x27, #0x8
    6e10:	add	x23, x23, #0x8
    6e14:	b.eq	6f68 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x618>  // b.none
    6e18:	ldr	x25, [x23]
    6e1c:	sub	x1, x29, #0x60
    6e20:	mov	x0, x24
    6e24:	sturb	wzr, [x29, #-48]
    6e28:	stp	x28, x20, [x29, #-64]
    6e2c:	stp	xzr, xzr, [x24]
    6e30:	str	wzr, [x24, #24]
    6e34:	str	xzr, [x24, #16]
    6e38:	stur	x22, [x29, #-96]
    6e3c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    6e40:	str	x25, [x0]
    6e44:	strb	wzr, [x0, #8]
    6e48:	ldr	x8, [x21]
    6e4c:	sub	x1, x29, #0x40
    6e50:	mov	x0, x21
    6e54:	ldr	x8, [x8, #96]
    6e58:	blr	x8
    6e5c:	mov	x25, x0
    6e60:	ldur	x0, [x29, #-32]
    6e64:	stur	x28, [x29, #-64]
    6e68:	bl	0 <_ZdlPv>
    6e6c:	ldr	x8, [x23]
    6e70:	cmp	x25, x8
    6e74:	b.eq	6e0c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x4bc>  // b.none
    6e78:	str	x25, [x23]
    6e7c:	b	6e0c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x4bc>
    6e80:	cmp	w8, #0x13
    6e84:	b.ne	6f08 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x5b8>  // b.any
    6e88:	cmp	w9, #0x13
    6e8c:	b.ne	6f08 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x5b8>  // b.any
    6e90:	cmp	w10, #0x13
    6e94:	b.ne	6f08 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x5b8>  // b.any
    6e98:	ldr	x8, [x21, #24]
    6e9c:	cbz	x8, 7588 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xc38>
    6ea0:	ldrb	w9, [x8, #8]
    6ea4:	cmp	w9, #0x12
    6ea8:	b.ne	7608 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xcb8>  // b.any
    6eac:	ldp	x22, x23, [x8, #24]
    6eb0:	add	x8, sp, #0x10
    6eb4:	add	x24, x8, #0x10
    6eb8:	str	x24, [sp, #16]
    6ebc:	cbz	x22, 70a8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x758>
    6ec0:	cmp	x23, #0x10
    6ec4:	stur	x23, [x29, #-64]
    6ec8:	b.cc	70b4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x764>  // b.lo, b.ul, b.last
    6ecc:	add	x0, sp, #0x10
    6ed0:	sub	x1, x29, #0x40
    6ed4:	mov	x2, xzr
    6ed8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    6edc:	ldur	x8, [x29, #-64]
    6ee0:	str	x0, [sp, #16]
    6ee4:	str	x8, [sp, #32]
    6ee8:	b	70b8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x768>
    6eec:	mov	x0, x22
    6ef0:	mov	x2, x21
    6ef4:	mov	x3, x20
    6ef8:	bl	f07c <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE>
    6efc:	mov	x20, x0
    6f00:	cbnz	x0, 6fb8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x668>
    6f04:	b	6fb4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x664>
    6f08:	cmp	w8, #0x12
    6f0c:	b.ne	6fb4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x664>  // b.any
    6f10:	cmp	w9, #0x12
    6f14:	b.ne	6fb4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x664>  // b.any
    6f18:	cmp	w10, #0x12
    6f1c:	b.ne	6fb4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x664>  // b.any
    6f20:	ldp	x19, x20, [x11, #24]
    6f24:	add	x8, sp, #0x10
    6f28:	add	x22, x8, #0x10
    6f2c:	str	x22, [sp, #16]
    6f30:	cbz	x19, 718c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x83c>
    6f34:	cmp	x20, #0x10
    6f38:	stur	x20, [x29, #-64]
    6f3c:	b.cc	7244 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x8f4>  // b.lo, b.ul, b.last
    6f40:	add	x0, sp, #0x10
    6f44:	sub	x1, x29, #0x40
    6f48:	mov	x2, xzr
    6f4c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    6f50:	ldur	x8, [x29, #-64]
    6f54:	str	x0, [sp, #16]
    6f58:	str	x8, [sp, #32]
    6f5c:	b	7248 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x8f8>
    6f60:	mov	w20, wzr
    6f64:	b	6fe8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x698>
    6f68:	ldr	x23, [sp, #16]
    6f6c:	ldr	w8, [sp, #24]
    6f70:	cbz	x26, 75c8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xc78>
    6f74:	ldr	w9, [x26, #8]
    6f78:	cmp	w9, #0x5
    6f7c:	b.ne	75e8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xc98>  // b.any
    6f80:	ldr	x2, [x26, #24]
    6f84:	mov	w1, w8
    6f88:	mov	x0, x23
    6f8c:	bl	2b9c <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    6f90:	ldr	x8, [sp, #16]
    6f94:	add	x9, sp, #0x10
    6f98:	add	x9, x9, #0x10
    6f9c:	mov	x20, x0
    6fa0:	cmp	x8, x9
    6fa4:	b.eq	6fb0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x660>  // b.none
    6fa8:	mov	x0, x8
    6fac:	bl	0 <free>
    6fb0:	cbnz	x20, 6fb8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x668>
    6fb4:	mov	x20, x19
    6fb8:	mov	x0, x20
    6fbc:	ldp	x20, x19, [sp, #336]
    6fc0:	ldp	x22, x21, [sp, #320]
    6fc4:	ldp	x24, x23, [sp, #304]
    6fc8:	ldp	x26, x25, [sp, #288]
    6fcc:	ldp	x28, x27, [sp, #272]
    6fd0:	ldp	x29, x30, [sp, #256]
    6fd4:	add	sp, sp, #0x160
    6fd8:	ret
    6fdc:	ldr	x20, [x19, #48]
    6fe0:	b	6fb8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x668>
    6fe4:	mov	w20, #0x1                   	// #1
    6fe8:	ldur	x0, [x29, #-64]
    6fec:	add	x8, x21, #0x10
    6ff0:	cmp	x0, x8
    6ff4:	b.eq	6ffc <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x6ac>  // b.none
    6ff8:	bl	0 <_ZdlPv>
    6ffc:	ldr	x0, [sp, #16]
    7000:	add	x8, sp, #0x10
    7004:	add	x8, x8, #0x10
    7008:	cmp	x0, x8
    700c:	b.eq	7014 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x6c4>  // b.none
    7010:	bl	0 <_ZdlPv>
    7014:	cbz	w20, 701c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x6cc>
    7018:	ldr	x19, [x26, #24]
    701c:	ldr	x20, [x19, #112]
    7020:	cbnz	x20, 6fb8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x668>
    7024:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    7028:	add	x0, x0, #0x0
    702c:	mov	w1, #0x20                  	// #32
    7030:	mov	w2, #0x4                   	// #4
    7034:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    7038:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    703c:	ldr	d0, [x8]
    7040:	add	x8, sp, #0x10
    7044:	mov	x20, x0
    7048:	add	x21, x8, #0x10
    704c:	add	x1, sp, #0x10
    7050:	mov	x0, x19
    7054:	str	x21, [sp, #16]
    7058:	str	d0, [sp, #24]
    705c:	bl	c9e0 <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE>
    7060:	ldr	x0, [sp, #16]
    7064:	ldr	w1, [sp, #24]
    7068:	bl	7e8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE>
    706c:	ldr	x8, [sp, #16]
    7070:	cmp	x8, x21
    7074:	mov	x21, x0
    7078:	b.eq	7084 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x734>  // b.none
    707c:	mov	x0, x8
    7080:	bl	0 <free>
    7084:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    7088:	ldr	x9, [x9]
    708c:	mov	w8, #0x6                   	// #6
    7090:	strh	w8, [x20, #8]
    7094:	stp	x21, x19, [x20, #16]
    7098:	add	x8, x9, #0x10
    709c:	str	x8, [x20]
    70a0:	str	x20, [x19, #112]
    70a4:	b	6fb8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x668>
    70a8:	str	xzr, [sp, #24]
    70ac:	strb	wzr, [sp, #32]
    70b0:	b	712c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x7dc>
    70b4:	mov	x0, x24
    70b8:	cbz	x23, 711c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x7cc>
    70bc:	cmp	x23, #0x1
    70c0:	b.ne	7110 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x7c0>  // b.any
    70c4:	ldrb	w8, [x22]
    70c8:	strb	w8, [x0]
    70cc:	b	711c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x7cc>
    70d0:	mov	x3, xzr
    70d4:	b	70e4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x794>
    70d8:	mov	x20, x19
    70dc:	b	70f4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x7a4>
    70e0:	mov	w3, w8
    70e4:	ldr	x0, [x19, #32]
    70e8:	mov	x1, xzr
    70ec:	bl	76b4 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE>
    70f0:	mov	x20, x0
    70f4:	ldr	x0, [sp, #16]
    70f8:	add	x8, sp, #0x10
    70fc:	add	x8, x8, #0x10
    7100:	cmp	x0, x8
    7104:	b.eq	6fb8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x668>  // b.none
    7108:	bl	0 <free>
    710c:	b	6fb8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x668>
    7110:	mov	x1, x22
    7114:	mov	x2, x23
    7118:	bl	0 <memcpy>
    711c:	ldur	x8, [x29, #-64]
    7120:	ldr	x9, [sp, #16]
    7124:	str	x8, [sp, #24]
    7128:	strb	wzr, [x9, x8]
    712c:	ldr	x8, [x20]
    7130:	mov	x0, x20
    7134:	ldr	x9, [x8, #40]
    7138:	sub	x8, x29, #0x40
    713c:	blr	x9
    7140:	ldr	x8, [x21]
    7144:	mov	x0, x21
    7148:	sub	x20, x29, #0x60
    714c:	ldr	x9, [x8, #40]
    7150:	sub	x8, x29, #0x60
    7154:	blr	x9
    7158:	ldur	x2, [x29, #-56]
    715c:	ldur	x8, [x29, #-88]
    7160:	cmp	x2, x8
    7164:	b.ne	7184 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x834>  // b.any
    7168:	cbz	x2, 7198 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x848>
    716c:	ldur	x1, [x29, #-96]
    7170:	ldur	x0, [x29, #-64]
    7174:	bl	0 <bcmp>
    7178:	cmp	w0, #0x0
    717c:	cset	w21, eq  // eq = none
    7180:	b	719c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x84c>
    7184:	mov	w21, wzr
    7188:	b	719c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x84c>
    718c:	str	xzr, [sp, #24]
    7190:	strb	wzr, [sp, #32]
    7194:	b	727c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x92c>
    7198:	mov	w21, #0x1                   	// #1
    719c:	ldur	x0, [x29, #-96]
    71a0:	add	x8, x20, #0x10
    71a4:	cmp	x0, x8
    71a8:	b.eq	71b0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x860>  // b.none
    71ac:	bl	0 <_ZdlPv>
    71b0:	ldur	x0, [x29, #-64]
    71b4:	sub	x8, x29, #0x40
    71b8:	add	x8, x8, #0x10
    71bc:	cmp	x0, x8
    71c0:	b.eq	71c8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x878>  // b.none
    71c4:	bl	0 <_ZdlPv>
    71c8:	cbz	w21, 74b4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xb64>
    71cc:	ldr	x8, [x25, #24]
    71d0:	cbz	x8, 7588 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xc38>
    71d4:	ldrb	w9, [x8, #8]
    71d8:	cmp	w9, #0x12
    71dc:	b.ne	7608 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xcb8>  // b.any
    71e0:	ldp	x21, x22, [x8, #24]
    71e4:	sub	x8, x29, #0x40
    71e8:	add	x20, x8, #0x10
    71ec:	stur	x20, [x29, #-64]
    71f0:	cbz	x21, 7238 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x8e8>
    71f4:	cmp	x22, #0x10
    71f8:	mov	x0, x20
    71fc:	stur	x22, [x29, #-96]
    7200:	b.cc	7220 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x8d0>  // b.lo, b.ul, b.last
    7204:	sub	x0, x29, #0x40
    7208:	sub	x1, x29, #0x60
    720c:	mov	x2, xzr
    7210:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    7214:	ldur	x8, [x29, #-96]
    7218:	stur	x0, [x29, #-64]
    721c:	stur	x8, [x29, #-48]
    7220:	cbz	x22, 7418 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xac8>
    7224:	cmp	x22, #0x1
    7228:	b.ne	740c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xabc>  // b.any
    722c:	ldrb	w8, [x21]
    7230:	strb	w8, [x0]
    7234:	b	7418 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xac8>
    7238:	stur	xzr, [x29, #-56]
    723c:	sturb	wzr, [x29, #-48]
    7240:	b	7460 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xb10>
    7244:	mov	x0, x22
    7248:	cbz	x20, 726c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x91c>
    724c:	cmp	x20, #0x1
    7250:	b.ne	7260 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x910>  // b.any
    7254:	ldrb	w8, [x19]
    7258:	strb	w8, [x0]
    725c:	b	726c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x91c>
    7260:	mov	x1, x19
    7264:	mov	x2, x20
    7268:	bl	0 <memcpy>
    726c:	ldur	x8, [x29, #-64]
    7270:	ldr	x9, [sp, #16]
    7274:	str	x8, [sp, #24]
    7278:	strb	wzr, [x9, x8]
    727c:	sub	x8, x29, #0x40
    7280:	mov	x19, xzr
    7284:	add	x25, x8, #0x10
    7288:	b	7294 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x944>
    728c:	ldr	x8, [x24, #32]
    7290:	add	x19, x8, x19
    7294:	ldp	x20, x21, [x23, #24]
    7298:	stur	x25, [x29, #-64]
    729c:	cbz	x20, 72e4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x994>
    72a0:	cmp	x21, #0x10
    72a4:	mov	x0, x25
    72a8:	stur	x21, [x29, #-96]
    72ac:	b.cc	72cc <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x97c>  // b.lo, b.ul, b.last
    72b0:	sub	x0, x29, #0x40
    72b4:	sub	x1, x29, #0x60
    72b8:	mov	x2, xzr
    72bc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    72c0:	ldur	x8, [x29, #-96]
    72c4:	stur	x0, [x29, #-64]
    72c8:	stur	x8, [x29, #-48]
    72cc:	cbz	x21, 7304 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x9b4>
    72d0:	cmp	x21, #0x1
    72d4:	b.ne	72f8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x9a8>  // b.any
    72d8:	ldrb	w8, [x20]
    72dc:	strb	w8, [x0]
    72e0:	b	7304 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x9b4>
    72e4:	mov	x3, xzr
    72e8:	stur	xzr, [x29, #-56]
    72ec:	sturb	wzr, [x29, #-48]
    72f0:	mov	x1, x25
    72f4:	b	7318 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x9c8>
    72f8:	mov	x1, x20
    72fc:	mov	x2, x21
    7300:	bl	0 <memcpy>
    7304:	ldur	x8, [x29, #-96]
    7308:	ldur	x9, [x29, #-64]
    730c:	stur	x8, [x29, #-56]
    7310:	strb	wzr, [x9, x8]
    7314:	ldp	x1, x3, [x29, #-64]
    7318:	add	x0, sp, #0x10
    731c:	mov	x2, x19
    7320:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcmm>
    7324:	ldur	x8, [x29, #-64]
    7328:	mov	x19, x0
    732c:	cmp	x8, x25
    7330:	b.eq	733c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x9ec>  // b.none
    7334:	mov	x0, x8
    7338:	bl	0 <_ZdlPv>
    733c:	cmn	x19, #0x1
    7340:	b.eq	73f8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xaa8>  // b.none
    7344:	ldr	x26, [x23, #32]
    7348:	ldp	x20, x21, [x24, #24]
    734c:	stur	x25, [x29, #-64]
    7350:	cbz	x20, 7398 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xa48>
    7354:	cmp	x21, #0x10
    7358:	mov	x0, x25
    735c:	stur	x21, [x29, #-96]
    7360:	b.cc	7380 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xa30>  // b.lo, b.ul, b.last
    7364:	sub	x0, x29, #0x40
    7368:	sub	x1, x29, #0x60
    736c:	mov	x2, xzr
    7370:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    7374:	ldur	x8, [x29, #-96]
    7378:	stur	x0, [x29, #-64]
    737c:	stur	x8, [x29, #-48]
    7380:	cbz	x21, 73b0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xa60>
    7384:	cmp	x21, #0x1
    7388:	b.ne	73a4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xa54>  // b.any
    738c:	ldrb	w8, [x20]
    7390:	strb	w8, [x0]
    7394:	b	73b0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xa60>
    7398:	stur	xzr, [x29, #-56]
    739c:	sturb	wzr, [x29, #-48]
    73a0:	b	73c0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xa70>
    73a4:	mov	x1, x20
    73a8:	mov	x2, x21
    73ac:	bl	0 <memcpy>
    73b0:	ldur	x8, [x29, #-96]
    73b4:	ldur	x9, [x29, #-64]
    73b8:	stur	x8, [x29, #-56]
    73bc:	strb	wzr, [x9, x8]
    73c0:	ldr	x3, [sp, #24]
    73c4:	subs	x8, x3, x19
    73c8:	b.cc	74f0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xba0>  // b.lo, b.ul, b.last
    73cc:	ldp	x3, x4, [x29, #-64]
    73d0:	cmp	x8, x26
    73d4:	csel	x2, x26, x8, hi  // hi = pmore
    73d8:	add	x0, sp, #0x10
    73dc:	mov	x1, x19
    73e0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    73e4:	ldur	x0, [x29, #-64]
    73e8:	cmp	x0, x25
    73ec:	b.eq	728c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x93c>  // b.none
    73f0:	bl	0 <_ZdlPv>
    73f4:	b	728c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x93c>
    73f8:	ldp	x0, x1, [sp, #16]
    73fc:	bl	29c4 <_ZN4llvm10StringInit3getENS_9StringRefE>
    7400:	ldr	x8, [sp, #16]
    7404:	cmp	x8, x22
    7408:	b	74d0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xb80>
    740c:	mov	x1, x21
    7410:	mov	x2, x22
    7414:	bl	0 <memcpy>
    7418:	ldur	x8, [x29, #-96]
    741c:	ldur	x9, [x29, #-64]
    7420:	stur	x8, [x29, #-56]
    7424:	strb	wzr, [x9, x8]
    7428:	ldur	x9, [x29, #-64]
    742c:	cmp	x9, x20
    7430:	b.eq	7460 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xb10>  // b.none
    7434:	ldr	x8, [sp, #16]
    7438:	ldr	x10, [sp, #32]
    743c:	ldur	q0, [x29, #-56]
    7440:	str	x9, [sp, #16]
    7444:	cmp	x8, x24
    7448:	csel	x8, xzr, x8, eq  // eq = none
    744c:	stur	q0, [sp, #24]
    7450:	cbz	x8, 74e4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xb94>
    7454:	stur	x8, [x29, #-64]
    7458:	stur	x10, [x29, #-48]
    745c:	b	749c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xb4c>
    7460:	ldur	x2, [x29, #-56]
    7464:	cbz	x2, 7488 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xb38>
    7468:	ldr	x0, [sp, #16]
    746c:	cmp	x2, #0x1
    7470:	b.ne	7480 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xb30>  // b.any
    7474:	ldurb	w8, [x29, #-48]
    7478:	strb	w8, [x0]
    747c:	b	7488 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xb38>
    7480:	mov	x1, x20
    7484:	bl	0 <memcpy>
    7488:	ldur	x8, [x29, #-56]
    748c:	ldr	x9, [sp, #16]
    7490:	str	x8, [sp, #24]
    7494:	strb	wzr, [x9, x8]
    7498:	ldur	x8, [x29, #-64]
    749c:	stur	xzr, [x29, #-56]
    74a0:	strb	wzr, [x8]
    74a4:	ldur	x0, [x29, #-64]
    74a8:	cmp	x0, x20
    74ac:	b.eq	74b4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xb64>  // b.none
    74b0:	bl	0 <_ZdlPv>
    74b4:	ldp	x0, x1, [sp, #16]
    74b8:	ldr	x19, [x19, #16]
    74bc:	bl	29c4 <_ZN4llvm10StringInit3getENS_9StringRefE>
    74c0:	mov	x1, x19
    74c4:	bl	965c <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>
    74c8:	ldr	x8, [sp, #16]
    74cc:	cmp	x8, x24
    74d0:	mov	x20, x0
    74d4:	b.eq	6fb8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x668>  // b.none
    74d8:	mov	x0, x8
    74dc:	bl	0 <_ZdlPv>
    74e0:	b	6fb8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x668>
    74e4:	mov	x8, x20
    74e8:	stur	x20, [x29, #-64]
    74ec:	b	749c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xb4c>
    74f0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    74f4:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    74f8:	add	x0, x0, #0x0
    74fc:	add	x1, x1, #0x0
    7500:	mov	x2, x19
    7504:	bl	0 <_ZSt24__throw_out_of_range_fmtPKcz>
    7508:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    750c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    7510:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    7514:	add	x0, x0, #0x0
    7518:	add	x1, x1, #0x0
    751c:	add	x3, x3, #0x0
    7520:	mov	w2, #0x69                  	// #105
    7524:	bl	0 <__assert_fail>
    7528:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    752c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    7530:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    7534:	add	x0, x0, #0x0
    7538:	add	x1, x1, #0x0
    753c:	add	x3, x3, #0x0
    7540:	mov	w2, #0x43                  	// #67
    7544:	bl	0 <__assert_fail>
    7548:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    754c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    7550:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    7554:	add	x0, x0, #0x0
    7558:	add	x1, x1, #0x0
    755c:	add	x3, x3, #0x0
    7560:	mov	w2, #0x69                  	// #105
    7564:	bl	0 <__assert_fail>
    7568:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    756c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    7570:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    7574:	add	x0, x0, #0x0
    7578:	add	x1, x1, #0x0
    757c:	add	x3, x3, #0x0
    7580:	mov	w2, #0x2af                 	// #687
    7584:	bl	0 <__assert_fail>
    7588:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    758c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    7590:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    7594:	add	x0, x0, #0x0
    7598:	add	x1, x1, #0x0
    759c:	add	x3, x3, #0x0
    75a0:	mov	w2, #0x69                  	// #105
    75a4:	bl	0 <__assert_fail>
    75a8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    75ac:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    75b0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    75b4:	add	x0, x0, #0x0
    75b8:	add	x1, x1, #0x0
    75bc:	add	x3, x3, #0x0
    75c0:	mov	w2, #0x69                  	// #105
    75c4:	bl	0 <__assert_fail>
    75c8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    75cc:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    75d0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    75d4:	add	x0, x0, #0x0
    75d8:	add	x1, x1, #0x0
    75dc:	add	x3, x3, #0x0
    75e0:	mov	w2, #0x69                  	// #105
    75e4:	bl	0 <__assert_fail>
    75e8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    75ec:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    75f0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    75f4:	add	x0, x0, #0x0
    75f8:	add	x1, x1, #0x0
    75fc:	add	x3, x3, #0x0
    7600:	mov	w2, #0x108                 	// #264
    7604:	bl	0 <__assert_fail>
    7608:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    760c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    7610:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    7614:	add	x0, x0, #0x0
    7618:	add	x1, x1, #0x0
    761c:	add	x3, x3, #0x0
    7620:	mov	w2, #0x108                 	// #264
    7624:	bl	0 <__assert_fail>

0000000000007628 <_ZNK4llvm7VarInit7getNameEv>:
    7628:	stp	x29, x30, [sp, #-16]!
    762c:	mov	x29, sp
    7630:	ldr	x8, [x0, #24]
    7634:	cbz	x8, 7650 <_ZNK4llvm7VarInit7getNameEv+0x28>
    7638:	ldrb	w9, [x8, #8]
    763c:	cmp	w9, #0x12
    7640:	b.ne	7670 <_ZNK4llvm7VarInit7getNameEv+0x48>  // b.any
    7644:	ldp	x0, x1, [x8, #24]
    7648:	ldp	x29, x30, [sp], #16
    764c:	ret
    7650:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    7654:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    7658:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    765c:	add	x0, x0, #0x0
    7660:	add	x1, x1, #0x0
    7664:	add	x3, x3, #0x0
    7668:	mov	w2, #0x69                  	// #105
    766c:	bl	0 <__assert_fail>
    7670:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    7674:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    7678:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    767c:	add	x0, x0, #0x0
    7680:	add	x1, x1, #0x0
    7684:	add	x3, x3, #0x0
    7688:	mov	w2, #0x108                 	// #264
    768c:	bl	0 <__assert_fail>

0000000000007690 <_ZN4llvm7VarInit3getENS_9StringRefEPNS_5RecTyE>:
    7690:	stp	x29, x30, [sp, #-32]!
    7694:	str	x19, [sp, #16]
    7698:	mov	x29, sp
    769c:	mov	x19, x2
    76a0:	bl	29c4 <_ZN4llvm10StringInit3getENS_9StringRefE>
    76a4:	mov	x1, x19
    76a8:	ldr	x19, [sp, #16]
    76ac:	ldp	x29, x30, [sp], #32
    76b0:	b	965c <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>

00000000000076b4 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE>:
    76b4:	sub	sp, sp, #0xe0
    76b8:	stp	x29, x30, [sp, #160]
    76bc:	stp	x24, x23, [sp, #176]
    76c0:	stp	x22, x21, [sp, #192]
    76c4:	stp	x20, x19, [sp, #208]
    76c8:	add	x29, sp, #0xa0
    76cc:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    76d0:	ldr	d0, [x9]
    76d4:	add	x8, sp, #0x50
    76d8:	mov	x10, sp
    76dc:	mov	x19, x1
    76e0:	mov	x20, x0
    76e4:	add	x21, x8, #0x10
    76e8:	add	x22, x10, #0x10
    76ec:	str	x21, [sp, #80]
    76f0:	str	x22, [sp]
    76f4:	str	d0, [sp, #88]
    76f8:	str	d0, [sp, #8]
    76fc:	cbz	x3, 77c4 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x110>
    7700:	mov	x23, x2
    7704:	mov	w8, wzr
    7708:	add	x24, x2, x3, lsl #4
    770c:	mov	w9, #0x8                   	// #8
    7710:	cmp	w8, w9
    7714:	b.cs	777c <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0xc8>  // b.hs, b.nlast
    7718:	ldr	x9, [sp, #80]
    771c:	ldr	x10, [x23]
    7720:	str	x10, [x9, w8, uxtw #3]
    7724:	ldp	w9, w8, [sp, #88]
    7728:	cmp	w9, w8
    772c:	b.cs	7830 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x17c>  // b.hs, b.nlast
    7730:	ldp	w8, w10, [sp, #8]
    7734:	add	w9, w9, #0x1
    7738:	str	w9, [sp, #88]
    773c:	cmp	w8, w10
    7740:	b.cs	7798 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0xe4>  // b.hs, b.nlast
    7744:	ldr	x9, [sp]
    7748:	ldr	x10, [x23, #8]
    774c:	str	x10, [x9, w8, uxtw #3]
    7750:	ldp	w8, w9, [sp, #8]
    7754:	cmp	w8, w9
    7758:	b.cs	7830 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x17c>  // b.hs, b.nlast
    775c:	add	x23, x23, #0x10
    7760:	add	x5, x8, #0x1
    7764:	cmp	x23, x24
    7768:	str	w5, [sp, #8]
    776c:	b.eq	77b4 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x100>  // b.none
    7770:	ldp	w8, w9, [sp, #88]
    7774:	cmp	w8, w9
    7778:	b.cc	7718 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x64>  // b.lo, b.ul, b.last
    777c:	add	x0, sp, #0x50
    7780:	mov	w3, #0x8                   	// #8
    7784:	mov	x1, x21
    7788:	mov	x2, xzr
    778c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    7790:	ldr	w8, [sp, #88]
    7794:	b	7718 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x64>
    7798:	mov	x0, sp
    779c:	mov	w3, #0x8                   	// #8
    77a0:	mov	x1, x22
    77a4:	mov	x2, xzr
    77a8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    77ac:	ldr	w8, [sp, #8]
    77b0:	b	7744 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x90>
    77b4:	ldr	x21, [sp, #80]
    77b8:	ldr	w3, [sp, #88]
    77bc:	ldr	x22, [sp]
    77c0:	b	77c8 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x114>
    77c4:	mov	x5, xzr
    77c8:	mov	x0, x20
    77cc:	mov	x1, x19
    77d0:	mov	x2, x21
    77d4:	mov	x4, x22
    77d8:	bl	5fec <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE>
    77dc:	ldr	x8, [sp]
    77e0:	mov	x9, sp
    77e4:	add	x9, x9, #0x10
    77e8:	mov	x19, x0
    77ec:	cmp	x8, x9
    77f0:	b.eq	77fc <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x148>  // b.none
    77f4:	mov	x0, x8
    77f8:	bl	0 <free>
    77fc:	ldr	x0, [sp, #80]
    7800:	add	x8, sp, #0x50
    7804:	add	x8, x8, #0x10
    7808:	cmp	x0, x8
    780c:	b.eq	7814 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x160>  // b.none
    7810:	bl	0 <free>
    7814:	mov	x0, x19
    7818:	ldp	x20, x19, [sp, #208]
    781c:	ldp	x22, x21, [sp, #192]
    7820:	ldp	x24, x23, [sp, #176]
    7824:	ldp	x29, x30, [sp, #160]
    7828:	add	sp, sp, #0xe0
    782c:	ret
    7830:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    7834:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    7838:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    783c:	add	x0, x0, #0x0
    7840:	add	x1, x1, #0x0
    7844:	add	x3, x3, #0x0
    7848:	mov	w2, #0x43                  	// #67
    784c:	bl	0 <__assert_fail>

0000000000007850 <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE>:
    7850:	sub	sp, sp, #0xc0
    7854:	stp	x29, x30, [sp, #128]
    7858:	stp	x24, x23, [sp, #144]
    785c:	stp	x22, x21, [sp, #160]
    7860:	stp	x20, x19, [sp, #176]
    7864:	add	x29, sp, #0x80
    7868:	mov	x20, x0
    786c:	ldr	x0, [x0, #32]
    7870:	mov	x19, x1
    7874:	ldr	x8, [x0]
    7878:	ldr	x8, [x8, #96]
    787c:	blr	x8
    7880:	ldrb	w8, [x20, #9]
    7884:	mov	x21, x0
    7888:	cmp	w8, #0x2
    788c:	b.ne	78d4 <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x84>  // b.any
    7890:	ldr	x8, [x20, #32]
    7894:	cmp	x21, x8
    7898:	b.eq	78d4 <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x84>  // b.none
    789c:	ldr	x8, [x21]
    78a0:	adrp	x1, b8 <_ZN4llvm5RecTy9getListTyEv+0x4c>
    78a4:	mov	x0, x21
    78a8:	ldr	x8, [x8, #64]
    78ac:	ldr	x1, [x1]
    78b0:	blr	x8
    78b4:	cbz	x0, 78d4 <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x84>
    78b8:	ldrb	w8, [x0, #8]
    78bc:	cmp	w8, #0x8
    78c0:	b.ne	78d4 <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x84>  // b.any
    78c4:	ldr	x8, [x0, #24]
    78c8:	cbz	x8, 79e0 <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x190>
    78cc:	ldr	x0, [x20, #40]
    78d0:	b	79e4 <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x194>
    78d4:	ldr	x0, [x20, #40]
    78d8:	mov	x1, x19
    78dc:	ldr	x8, [x0]
    78e0:	ldr	x8, [x8, #96]
    78e4:	blr	x8
    78e8:	ldrb	w8, [x20, #9]
    78ec:	mov	x22, x0
    78f0:	cmp	w8, #0x1
    78f4:	b.ne	7964 <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x114>  // b.any
    78f8:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    78fc:	ldr	x8, [x19, #8]
    7900:	ldr	x9, [x9]
    7904:	stp	x19, xzr, [sp, #32]
    7908:	stp	xzr, xzr, [sp, #48]
    790c:	str	wzr, [sp, #64]
    7910:	add	x24, x9, #0x10
    7914:	stp	x24, x8, [sp, #8]
    7918:	ldrb	w8, [x19, #16]
    791c:	add	x9, sp, #0x8
    7920:	add	x0, x9, #0x20
    7924:	sub	x1, x29, #0x38
    7928:	strb	w8, [sp, #24]
    792c:	sub	x8, x29, #0x30
    7930:	sub	x2, x29, #0x8
    7934:	stur	x21, [x29, #-56]
    7938:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    793c:	ldr	x0, [x20, #48]
    7940:	add	x1, sp, #0x8
    7944:	ldr	x8, [x0]
    7948:	ldr	x8, [x8, #96]
    794c:	blr	x8
    7950:	mov	x23, x0
    7954:	ldr	x0, [sp, #48]
    7958:	str	x24, [sp, #8]
    795c:	bl	0 <_ZdlPv>
    7960:	b	797c <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x12c>
    7964:	ldr	x0, [x20, #48]
    7968:	mov	x1, x19
    796c:	ldr	x8, [x0]
    7970:	ldr	x8, [x8, #96]
    7974:	blr	x8
    7978:	mov	x23, x0
    797c:	ldr	x8, [x20, #32]
    7980:	cmp	x8, x21
    7984:	b.ne	79a0 <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x150>  // b.any
    7988:	ldr	x8, [x20, #40]
    798c:	cmp	x8, x22
    7990:	b.ne	79a0 <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x150>  // b.any
    7994:	ldr	x8, [x20, #48]
    7998:	cmp	x8, x23
    799c:	b.eq	79c4 <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x174>  // b.none
    79a0:	ldr	x4, [x20, #16]
    79a4:	ldrb	w0, [x20, #9]
    79a8:	mov	x1, x21
    79ac:	mov	x2, x22
    79b0:	mov	x3, x23
    79b4:	bl	6740 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE>
    79b8:	ldr	x1, [x19, #8]
    79bc:	bl	6950 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE>
    79c0:	mov	x20, x0
    79c4:	mov	x0, x20
    79c8:	ldp	x20, x19, [sp, #176]
    79cc:	ldp	x22, x21, [sp, #160]
    79d0:	ldp	x24, x23, [sp, #144]
    79d4:	ldp	x29, x30, [sp, #128]
    79d8:	add	sp, sp, #0xc0
    79dc:	ret
    79e0:	ldr	x0, [x20, #48]
    79e4:	ldr	x8, [x0]
    79e8:	mov	x1, x19
    79ec:	ldp	x20, x19, [sp, #176]
    79f0:	ldp	x22, x21, [sp, #160]
    79f4:	ldr	x2, [x8, #96]
    79f8:	ldp	x24, x23, [sp, #144]
    79fc:	ldp	x29, x30, [sp, #128]
    7a00:	add	sp, sp, #0xc0
    7a04:	br	x2

0000000000007a08 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev>:
    7a08:	sub	sp, sp, #0x1a0
    7a0c:	stp	x29, x30, [sp, #320]
    7a10:	str	x28, [sp, #336]
    7a14:	stp	x26, x25, [sp, #352]
    7a18:	stp	x24, x23, [sp, #368]
    7a1c:	stp	x22, x21, [sp, #384]
    7a20:	stp	x20, x19, [sp, #400]
    7a24:	add	x29, sp, #0x140
    7a28:	sub	x9, x29, #0x20
    7a2c:	add	x23, x9, #0x10
    7a30:	stp	x23, xzr, [x29, #-32]
    7a34:	sturb	wzr, [x29, #-16]
    7a38:	ldrb	w9, [x0, #9]
    7a3c:	mov	x20, x0
    7a40:	mov	x19, x8
    7a44:	cmp	w9, #0x3
    7a48:	b.hi	7acc <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0xc4>  // b.pmore
    7a4c:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    7a50:	add	x8, x8, #0x0
    7a54:	adr	x10, 7a64 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x5c>
    7a58:	ldrb	w11, [x8, x9]
    7a5c:	add	x10, x10, x11, lsl #2
    7a60:	br	x10
    7a64:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    7a68:	add	x3, x3, #0x0
    7a6c:	sub	x0, x29, #0x20
    7a70:	mov	w4, #0x6                   	// #6
    7a74:	b	7ac0 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0xb8>
    7a78:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    7a7c:	add	x3, x3, #0x0
    7a80:	sub	x0, x29, #0x20
    7a84:	mov	w4, #0x3                   	// #3
    7a88:	b	7ac0 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0xb8>
    7a8c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    7a90:	add	x3, x3, #0x0
    7a94:	sub	x0, x29, #0x20
    7a98:	mov	w4, #0x8                   	// #8
    7a9c:	mov	x1, xzr
    7aa0:	mov	x2, xzr
    7aa4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    7aa8:	mov	w25, #0x1                   	// #1
    7aac:	b	7ad0 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0xc8>
    7ab0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    7ab4:	add	x3, x3, #0x0
    7ab8:	sub	x0, x29, #0x20
    7abc:	mov	w4, #0x4                   	// #4
    7ac0:	mov	x1, xzr
    7ac4:	mov	x2, xzr
    7ac8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    7acc:	mov	w25, wzr
    7ad0:	ldp	x21, x22, [x29, #-32]
    7ad4:	add	x8, sp, #0x60
    7ad8:	add	x24, x8, #0x10
    7adc:	str	x24, [sp, #96]
    7ae0:	cbnz	x21, 7ae8 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0xe0>
    7ae4:	cbnz	x22, 7fc8 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x5c0>
    7ae8:	cmp	x22, #0x10
    7aec:	stur	x22, [x29, #-64]
    7af0:	b.cc	7b18 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x110>  // b.lo, b.ul, b.last
    7af4:	add	x0, sp, #0x60
    7af8:	sub	x1, x29, #0x40
    7afc:	mov	x2, xzr
    7b00:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    7b04:	ldur	x8, [x29, #-64]
    7b08:	str	x0, [sp, #96]
    7b0c:	str	x8, [sp, #112]
    7b10:	cbnz	x22, 7b20 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x118>
    7b14:	b	7b40 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x138>
    7b18:	mov	x0, x24
    7b1c:	cbz	x22, 7b40 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x138>
    7b20:	cmp	x22, #0x1
    7b24:	b.ne	7b34 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x12c>  // b.any
    7b28:	ldrb	w8, [x21]
    7b2c:	strb	w8, [x0]
    7b30:	b	7b40 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x138>
    7b34:	mov	x1, x21
    7b38:	mov	x2, x22
    7b3c:	bl	0 <memcpy>
    7b40:	ldur	x8, [x29, #-64]
    7b44:	ldr	x9, [sp, #96]
    7b48:	str	x8, [sp, #104]
    7b4c:	strb	wzr, [x9, x8]
    7b50:	ldr	x8, [sp, #104]
    7b54:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    7b58:	cmp	x8, x9
    7b5c:	b.eq	7fbc <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x5b4>  // b.none
    7b60:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    7b64:	add	x1, x1, #0x0
    7b68:	add	x0, sp, #0x60
    7b6c:	mov	w2, #0x1                   	// #1
    7b70:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    7b74:	ldr	x0, [x20, #32]
    7b78:	ldr	x8, [x0]
    7b7c:	cbz	w25, 7b88 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x180>
    7b80:	ldr	x9, [x8, #48]
    7b84:	b	7b8c <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x184>
    7b88:	ldr	x9, [x8, #40]
    7b8c:	add	x8, sp, #0x40
    7b90:	blr	x9
    7b94:	ldp	x3, x4, [sp, #96]
    7b98:	ldp	x1, x2, [sp, #64]
    7b9c:	ldr	x9, [sp, #112]
    7ba0:	mov	w10, #0xf                   	// #15
    7ba4:	cmp	x3, x24
    7ba8:	add	x8, x2, x4
    7bac:	csel	x9, x10, x9, eq  // eq = none
    7bb0:	cmp	x8, x9
    7bb4:	b.ls	7bd8 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x1d0>  // b.plast
    7bb8:	ldr	x10, [sp, #80]
    7bbc:	add	x9, sp, #0x40
    7bc0:	add	x9, x9, #0x10
    7bc4:	cmp	x1, x9
    7bc8:	mov	w9, #0xf                   	// #15
    7bcc:	csel	x9, x9, x10, eq  // eq = none
    7bd0:	cmp	x8, x9
    7bd4:	b.ls	7be4 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x1dc>  // b.plast
    7bd8:	add	x0, sp, #0x60
    7bdc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    7be0:	b	7bf4 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x1ec>
    7be4:	add	x0, sp, #0x40
    7be8:	mov	x1, xzr
    7bec:	mov	x2, xzr
    7bf0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    7bf4:	add	x8, sp, #0x80
    7bf8:	add	x21, x8, #0x10
    7bfc:	str	x21, [sp, #128]
    7c00:	mov	x8, x0
    7c04:	ldr	x9, [x8], #16
    7c08:	cmp	x9, x8
    7c0c:	b.eq	7c20 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x218>  // b.none
    7c10:	str	x9, [sp, #128]
    7c14:	ldr	x9, [x0, #16]
    7c18:	str	x9, [sp, #144]
    7c1c:	b	7c28 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x220>
    7c20:	ldr	q0, [x9]
    7c24:	str	q0, [x21]
    7c28:	ldr	x9, [x0, #8]
    7c2c:	str	x9, [sp, #136]
    7c30:	stp	x8, xzr, [x0]
    7c34:	strb	wzr, [x0, #16]
    7c38:	ldr	x8, [sp, #136]
    7c3c:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    7c40:	orr	x8, x8, #0x1
    7c44:	cmp	x8, x9
    7c48:	b.eq	7fbc <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x5b4>  // b.none
    7c4c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    7c50:	add	x1, x1, #0x0
    7c54:	add	x0, sp, #0x80
    7c58:	mov	w2, #0x2                   	// #2
    7c5c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    7c60:	add	x8, sp, #0xa0
    7c64:	add	x22, x8, #0x10
    7c68:	str	x22, [sp, #160]
    7c6c:	mov	x8, x0
    7c70:	ldr	x9, [x8], #16
    7c74:	cmp	x9, x8
    7c78:	b.eq	7c8c <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x284>  // b.none
    7c7c:	str	x9, [sp, #160]
    7c80:	ldr	x9, [x0, #16]
    7c84:	str	x9, [sp, #176]
    7c88:	b	7c94 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x28c>
    7c8c:	ldr	q0, [x9]
    7c90:	str	q0, [x22]
    7c94:	ldr	x9, [x0, #8]
    7c98:	add	x25, sp, #0x20
    7c9c:	str	x9, [sp, #168]
    7ca0:	stp	x8, xzr, [x0]
    7ca4:	strb	wzr, [x0, #16]
    7ca8:	ldr	x0, [x20, #40]
    7cac:	ldr	x8, [x0]
    7cb0:	ldr	x9, [x8, #40]
    7cb4:	add	x8, sp, #0x20
    7cb8:	blr	x9
    7cbc:	ldp	x3, x4, [sp, #160]
    7cc0:	ldp	x1, x2, [sp, #32]
    7cc4:	ldr	x9, [sp, #176]
    7cc8:	mov	w10, #0xf                   	// #15
    7ccc:	cmp	x3, x22
    7cd0:	add	x8, x2, x4
    7cd4:	csel	x9, x10, x9, eq  // eq = none
    7cd8:	cmp	x8, x9
    7cdc:	b.ls	7cfc <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x2f4>  // b.plast
    7ce0:	ldr	x9, [sp, #48]
    7ce4:	add	x10, x25, #0x10
    7ce8:	cmp	x1, x10
    7cec:	mov	w10, #0xf                   	// #15
    7cf0:	csel	x9, x10, x9, eq  // eq = none
    7cf4:	cmp	x8, x9
    7cf8:	b.ls	7d08 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x300>  // b.plast
    7cfc:	add	x0, sp, #0xa0
    7d00:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    7d04:	b	7d18 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x310>
    7d08:	add	x0, sp, #0x20
    7d0c:	mov	x1, xzr
    7d10:	mov	x2, xzr
    7d14:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    7d18:	sub	x8, x29, #0x80
    7d1c:	add	x25, x8, #0x10
    7d20:	stur	x25, [x29, #-128]
    7d24:	mov	x8, x0
    7d28:	ldr	x9, [x8], #16
    7d2c:	cmp	x9, x8
    7d30:	b.eq	7d44 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x33c>  // b.none
    7d34:	stur	x9, [x29, #-128]
    7d38:	ldr	x9, [x0, #16]
    7d3c:	stur	x9, [x29, #-112]
    7d40:	b	7d4c <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x344>
    7d44:	ldr	q0, [x9]
    7d48:	str	q0, [x25]
    7d4c:	ldr	x9, [x0, #8]
    7d50:	stur	x9, [x29, #-120]
    7d54:	stp	x8, xzr, [x0]
    7d58:	strb	wzr, [x0, #16]
    7d5c:	ldur	x8, [x29, #-120]
    7d60:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    7d64:	orr	x8, x8, #0x1
    7d68:	cmp	x8, x9
    7d6c:	b.eq	7fbc <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x5b4>  // b.none
    7d70:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    7d74:	add	x1, x1, #0x0
    7d78:	sub	x0, x29, #0x80
    7d7c:	mov	w2, #0x2                   	// #2
    7d80:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    7d84:	sub	x8, x29, #0x60
    7d88:	add	x26, x8, #0x10
    7d8c:	stur	x26, [x29, #-96]
    7d90:	mov	x8, x0
    7d94:	ldr	x9, [x8], #16
    7d98:	cmp	x9, x8
    7d9c:	b.eq	7db0 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x3a8>  // b.none
    7da0:	stur	x9, [x29, #-96]
    7da4:	ldr	x9, [x0, #16]
    7da8:	stur	x9, [x29, #-80]
    7dac:	b	7db8 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x3b0>
    7db0:	ldr	q0, [x9]
    7db4:	str	q0, [x26]
    7db8:	ldr	x9, [x0, #8]
    7dbc:	stur	x9, [x29, #-88]
    7dc0:	stp	x8, xzr, [x0]
    7dc4:	strb	wzr, [x0, #16]
    7dc8:	ldr	x0, [x20, #48]
    7dcc:	mov	x20, sp
    7dd0:	ldr	x8, [x0]
    7dd4:	ldr	x9, [x8, #40]
    7dd8:	mov	x8, sp
    7ddc:	blr	x9
    7de0:	ldp	x3, x4, [x29, #-96]
    7de4:	ldp	x1, x2, [sp]
    7de8:	ldur	x9, [x29, #-80]
    7dec:	mov	w10, #0xf                   	// #15
    7df0:	cmp	x3, x26
    7df4:	add	x8, x2, x4
    7df8:	csel	x9, x10, x9, eq  // eq = none
    7dfc:	cmp	x8, x9
    7e00:	b.ls	7e20 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x418>  // b.plast
    7e04:	ldr	x9, [sp, #16]
    7e08:	add	x10, x20, #0x10
    7e0c:	cmp	x1, x10
    7e10:	mov	w10, #0xf                   	// #15
    7e14:	csel	x9, x10, x9, eq  // eq = none
    7e18:	cmp	x8, x9
    7e1c:	b.ls	7e2c <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x424>  // b.plast
    7e20:	sub	x0, x29, #0x60
    7e24:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    7e28:	b	7e3c <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x434>
    7e2c:	mov	x0, sp
    7e30:	mov	x1, xzr
    7e34:	mov	x2, xzr
    7e38:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    7e3c:	sub	x8, x29, #0x40
    7e40:	add	x20, x8, #0x10
    7e44:	stur	x20, [x29, #-64]
    7e48:	mov	x8, x0
    7e4c:	ldr	x9, [x8], #16
    7e50:	cmp	x9, x8
    7e54:	b.eq	7e68 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x460>  // b.none
    7e58:	stur	x9, [x29, #-64]
    7e5c:	ldr	x9, [x0, #16]
    7e60:	stur	x9, [x29, #-48]
    7e64:	b	7e70 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x468>
    7e68:	ldr	q0, [x9]
    7e6c:	str	q0, [x20]
    7e70:	ldr	x9, [x0, #8]
    7e74:	stur	x9, [x29, #-56]
    7e78:	stp	x8, xzr, [x0]
    7e7c:	strb	wzr, [x0, #16]
    7e80:	ldur	x8, [x29, #-56]
    7e84:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    7e88:	cmp	x8, x9
    7e8c:	b.eq	7fbc <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x5b4>  // b.none
    7e90:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    7e94:	add	x1, x1, #0x0
    7e98:	sub	x0, x29, #0x40
    7e9c:	mov	w2, #0x1                   	// #1
    7ea0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    7ea4:	add	x9, x19, #0x10
    7ea8:	str	x9, [x19]
    7eac:	mov	x8, x0
    7eb0:	ldr	x10, [x8], #16
    7eb4:	cmp	x10, x8
    7eb8:	b.eq	7ecc <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x4c4>  // b.none
    7ebc:	str	x10, [x19]
    7ec0:	ldr	x9, [x0, #16]
    7ec4:	str	x9, [x19, #16]
    7ec8:	b	7ed4 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x4cc>
    7ecc:	ldr	q0, [x10]
    7ed0:	str	q0, [x9]
    7ed4:	ldr	x9, [x0, #8]
    7ed8:	str	x9, [x19, #8]
    7edc:	stp	x8, xzr, [x0]
    7ee0:	strb	wzr, [x0, #16]
    7ee4:	ldur	x0, [x29, #-64]
    7ee8:	cmp	x0, x20
    7eec:	b.eq	7ef4 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x4ec>  // b.none
    7ef0:	bl	0 <_ZdlPv>
    7ef4:	ldr	x0, [sp]
    7ef8:	mov	x8, sp
    7efc:	add	x8, x8, #0x10
    7f00:	cmp	x0, x8
    7f04:	b.eq	7f0c <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x504>  // b.none
    7f08:	bl	0 <_ZdlPv>
    7f0c:	ldur	x0, [x29, #-96]
    7f10:	cmp	x0, x26
    7f14:	b.eq	7f1c <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x514>  // b.none
    7f18:	bl	0 <_ZdlPv>
    7f1c:	ldur	x0, [x29, #-128]
    7f20:	cmp	x0, x25
    7f24:	b.eq	7f2c <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x524>  // b.none
    7f28:	bl	0 <_ZdlPv>
    7f2c:	ldr	x0, [sp, #32]
    7f30:	add	x8, sp, #0x20
    7f34:	add	x8, x8, #0x10
    7f38:	cmp	x0, x8
    7f3c:	b.eq	7f44 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x53c>  // b.none
    7f40:	bl	0 <_ZdlPv>
    7f44:	ldr	x0, [sp, #160]
    7f48:	cmp	x0, x22
    7f4c:	b.eq	7f54 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x54c>  // b.none
    7f50:	bl	0 <_ZdlPv>
    7f54:	ldr	x0, [sp, #128]
    7f58:	cmp	x0, x21
    7f5c:	b.eq	7f64 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x55c>  // b.none
    7f60:	bl	0 <_ZdlPv>
    7f64:	ldr	x0, [sp, #64]
    7f68:	add	x8, sp, #0x40
    7f6c:	add	x8, x8, #0x10
    7f70:	cmp	x0, x8
    7f74:	b.eq	7f7c <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x574>  // b.none
    7f78:	bl	0 <_ZdlPv>
    7f7c:	ldr	x0, [sp, #96]
    7f80:	cmp	x0, x24
    7f84:	b.eq	7f8c <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x584>  // b.none
    7f88:	bl	0 <_ZdlPv>
    7f8c:	ldur	x0, [x29, #-32]
    7f90:	cmp	x0, x23
    7f94:	b.eq	7f9c <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x594>  // b.none
    7f98:	bl	0 <_ZdlPv>
    7f9c:	ldp	x20, x19, [sp, #400]
    7fa0:	ldp	x22, x21, [sp, #384]
    7fa4:	ldp	x24, x23, [sp, #368]
    7fa8:	ldp	x26, x25, [sp, #352]
    7fac:	ldr	x28, [sp, #336]
    7fb0:	ldp	x29, x30, [sp, #320]
    7fb4:	add	sp, sp, #0x1a0
    7fb8:	ret
    7fbc:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    7fc0:	add	x0, x0, #0x0
    7fc4:	bl	0 <_ZSt20__throw_length_errorPKc>
    7fc8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    7fcc:	add	x0, x0, #0x0
    7fd0:	bl	0 <_ZSt19__throw_logic_errorPKc>

0000000000007fd4 <_ZN4llvm10FoldOpInit3getEPNS_4InitES2_S2_S2_S2_PNS_5RecTyE>:
    7fd4:	sub	sp, sp, #0xf0
    7fd8:	stp	x29, x30, [sp, #160]
    7fdc:	stp	x26, x25, [sp, #176]
    7fe0:	stp	x24, x23, [sp, #192]
    7fe4:	stp	x22, x21, [sp, #208]
    7fe8:	stp	x20, x19, [sp, #224]
    7fec:	add	x29, sp, #0xa0
    7ff0:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    7ff4:	add	x8, x8, #0x0
    7ff8:	ldarb	w8, [x8]
    7ffc:	mov	x24, x5
    8000:	mov	x19, x4
    8004:	mov	x20, x3
    8008:	mov	x21, x2
    800c:	mov	x22, x1
    8010:	mov	x23, x0
    8014:	tbz	w8, #0, 8124 <_ZN4llvm10FoldOpInit3getEPNS_4InitES2_S2_S2_S2_PNS_5RecTyE+0x150>
    8018:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    801c:	ldr	d0, [x8]
    8020:	add	x8, sp, #0x10
    8024:	add	x26, x8, #0x10
    8028:	add	x0, sp, #0x10
    802c:	mov	x1, x21
    8030:	str	x26, [sp, #16]
    8034:	str	d0, [sp, #24]
    8038:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    803c:	add	x0, sp, #0x10
    8040:	mov	x1, x20
    8044:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    8048:	add	x0, sp, #0x10
    804c:	mov	x1, x23
    8050:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    8054:	add	x0, sp, #0x10
    8058:	mov	x1, x22
    805c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    8060:	add	x0, sp, #0x10
    8064:	mov	x1, x19
    8068:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    806c:	add	x0, sp, #0x10
    8070:	mov	x1, x24
    8074:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    8078:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    807c:	add	x0, x0, #0x0
    8080:	add	x1, sp, #0x10
    8084:	add	x2, sp, #0x8
    8088:	str	xzr, [sp, #8]
    808c:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    8090:	cbz	x0, 809c <_ZN4llvm10FoldOpInit3getEPNS_4InitES2_S2_S2_S2_PNS_5RecTyE+0xc8>
    8094:	sub	x25, x0, #0x18
    8098:	b	80f4 <_ZN4llvm10FoldOpInit3getEPNS_4InitES2_S2_S2_S2_PNS_5RecTyE+0x120>
    809c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    80a0:	add	x0, x0, #0x0
    80a4:	mov	w1, #0x48                  	// #72
    80a8:	mov	w2, #0x4                   	// #4
    80ac:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    80b0:	str	x24, [x0, #16]
    80b4:	adrp	x9, 9d8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x1f0>
    80b8:	ldr	x9, [x9]
    80bc:	mov	w8, #0x10                  	// #16
    80c0:	ldr	x2, [sp, #8]
    80c4:	mov	x1, x0
    80c8:	strh	w8, [x0, #8]
    80cc:	add	x8, x9, #0x10
    80d0:	mov	x25, x0
    80d4:	str	xzr, [x1, #24]!
    80d8:	stp	x23, x22, [x0, #32]
    80dc:	str	x8, [x0]
    80e0:	stp	x21, x20, [x0, #48]
    80e4:	str	x19, [x0, #64]
    80e8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    80ec:	add	x0, x0, #0x0
    80f0:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    80f4:	ldr	x0, [sp, #16]
    80f8:	cmp	x0, x26
    80fc:	b.eq	8104 <_ZN4llvm10FoldOpInit3getEPNS_4InitES2_S2_S2_S2_PNS_5RecTyE+0x130>  // b.none
    8100:	bl	0 <free>
    8104:	mov	x0, x25
    8108:	ldp	x20, x19, [sp, #224]
    810c:	ldp	x22, x21, [sp, #208]
    8110:	ldp	x24, x23, [sp, #192]
    8114:	ldp	x26, x25, [sp, #176]
    8118:	ldp	x29, x30, [sp, #160]
    811c:	add	sp, sp, #0xf0
    8120:	ret
    8124:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    8128:	add	x0, x0, #0x0
    812c:	bl	0 <__cxa_guard_acquire>
    8130:	cbz	w0, 8018 <_ZN4llvm10FoldOpInit3getEPNS_4InitES2_S2_S2_S2_PNS_5RecTyE+0x44>
    8134:	adrp	x25, 0 <_ZNK4llvm5RecTy4dumpEv>
    8138:	add	x25, x25, #0x0
    813c:	mov	w1, #0x6                   	// #6
    8140:	mov	x0, x25
    8144:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    8148:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    814c:	ldr	x8, [x8]
    8150:	adrp	x0, 0 <_ZN4llvm14FoldingSetBaseD2Ev>
    8154:	adrp	x2, 0 <__dso_handle>
    8158:	add	x2, x2, #0x0
    815c:	add	x8, x8, #0x10
    8160:	str	x8, [x25]
    8164:	ldr	x0, [x0]
    8168:	mov	x1, x25
    816c:	bl	0 <__cxa_atexit>
    8170:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    8174:	add	x0, x0, #0x0
    8178:	bl	0 <__cxa_guard_release>
    817c:	b	8018 <_ZN4llvm10FoldOpInit3getEPNS_4InitES2_S2_S2_S2_PNS_5RecTyE+0x44>

0000000000008180 <_ZNK4llvm10FoldOpInit7ProfileERNS_16FoldingSetNodeIDE>:
    8180:	stp	x29, x30, [sp, #-64]!
    8184:	stp	x24, x23, [sp, #16]
    8188:	stp	x22, x21, [sp, #32]
    818c:	stp	x20, x19, [sp, #48]
    8190:	mov	x29, sp
    8194:	ldp	x8, x21, [x0, #48]
    8198:	ldp	x19, x20, [x0, #32]
    819c:	ldr	x22, [x0, #64]
    81a0:	ldr	x23, [x0, #16]
    81a4:	mov	x24, x1
    81a8:	mov	x0, x1
    81ac:	mov	x1, x8
    81b0:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    81b4:	mov	x0, x24
    81b8:	mov	x1, x21
    81bc:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    81c0:	mov	x0, x24
    81c4:	mov	x1, x19
    81c8:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    81cc:	mov	x0, x24
    81d0:	mov	x1, x20
    81d4:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    81d8:	mov	x0, x24
    81dc:	mov	x1, x22
    81e0:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    81e4:	mov	x0, x24
    81e8:	mov	x1, x23
    81ec:	ldp	x20, x19, [sp, #48]
    81f0:	ldp	x22, x21, [sp, #32]
    81f4:	ldp	x24, x23, [sp, #16]
    81f8:	ldp	x29, x30, [sp], #64
    81fc:	b	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>

0000000000008200 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE>:
    8200:	sub	sp, sp, #0x90
    8204:	stp	x29, x30, [sp, #64]
    8208:	stp	x26, x25, [sp, #80]
    820c:	stp	x24, x23, [sp, #96]
    8210:	stp	x22, x21, [sp, #112]
    8214:	stp	x20, x19, [sp, #128]
    8218:	add	x29, sp, #0x40
    821c:	ldr	x8, [x0, #40]
    8220:	cbz	x8, 8304 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x104>
    8224:	ldrb	w9, [x8, #8]
    8228:	mov	x19, x0
    822c:	cmp	w9, #0x9
    8230:	b.ne	82e0 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0xe0>  // b.any
    8234:	ldr	w9, [x8, #32]
    8238:	ldr	x22, [x19, #32]
    823c:	lsl	x23, x9, #3
    8240:	cbz	x23, 82e4 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0xe4>
    8244:	adrp	x9, dd8 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x120>
    8248:	ldr	x9, [x9]
    824c:	add	x24, x8, #0x28
    8250:	mov	x8, sp
    8254:	mov	x20, x1
    8258:	add	x21, x8, #0x18
    825c:	add	x25, x9, #0x10
    8260:	ldr	x26, [x24], #8
    8264:	strb	wzr, [sp, #16]
    8268:	stp	x25, x20, [sp]
    826c:	stp	xzr, xzr, [x21]
    8270:	str	wzr, [x21, #24]
    8274:	str	xzr, [x21, #16]
    8278:	ldr	x8, [x19, #48]
    827c:	sub	x1, x29, #0x8
    8280:	mov	x0, x21
    8284:	stur	x8, [x29, #-8]
    8288:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    828c:	str	x22, [x0]
    8290:	strb	wzr, [x0, #8]
    8294:	ldr	x8, [x19, #56]
    8298:	sub	x1, x29, #0x8
    829c:	mov	x0, x21
    82a0:	stur	x8, [x29, #-8]
    82a4:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    82a8:	str	x26, [x0]
    82ac:	strb	wzr, [x0, #8]
    82b0:	ldr	x0, [x19, #64]
    82b4:	mov	x1, sp
    82b8:	ldr	x8, [x0]
    82bc:	ldr	x8, [x8, #96]
    82c0:	blr	x8
    82c4:	mov	x22, x0
    82c8:	ldr	x0, [sp, #32]
    82cc:	str	x25, [sp]
    82d0:	bl	0 <_ZdlPv>
    82d4:	subs	x23, x23, #0x8
    82d8:	b.ne	8260 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x60>  // b.any
    82dc:	b	82e4 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0xe4>
    82e0:	mov	x22, x19
    82e4:	mov	x0, x22
    82e8:	ldp	x20, x19, [sp, #128]
    82ec:	ldp	x22, x21, [sp, #112]
    82f0:	ldp	x24, x23, [sp, #96]
    82f4:	ldp	x26, x25, [sp, #80]
    82f8:	ldp	x29, x30, [sp, #64]
    82fc:	add	sp, sp, #0x90
    8300:	ret
    8304:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    8308:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    830c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    8310:	add	x0, x0, #0x0
    8314:	add	x1, x1, #0x0
    8318:	add	x3, x3, #0x0
    831c:	mov	w2, #0x69                  	// #105
    8320:	bl	0 <__assert_fail>

0000000000008324 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE>:
    8324:	sub	sp, sp, #0xc0
    8328:	stp	x29, x30, [sp, #128]
    832c:	stp	x24, x23, [sp, #144]
    8330:	stp	x22, x21, [sp, #160]
    8334:	stp	x20, x19, [sp, #176]
    8338:	add	x29, sp, #0x80
    833c:	mov	x19, x0
    8340:	ldr	x0, [x0, #32]
    8344:	mov	x20, x1
    8348:	ldr	x8, [x0]
    834c:	ldr	x8, [x8, #96]
    8350:	blr	x8
    8354:	ldr	x8, [x19, #40]
    8358:	mov	x21, x0
    835c:	mov	x1, x20
    8360:	ldr	x9, [x8]
    8364:	mov	x0, x8
    8368:	ldr	x9, [x9, #96]
    836c:	blr	x9
    8370:	adrp	x24, 0 <_ZNK4llvm5RecTy4dumpEv>
    8374:	ldr	x8, [x20, #8]
    8378:	ldr	x24, [x24]
    837c:	stp	x20, xzr, [sp, #32]
    8380:	stp	xzr, xzr, [sp, #48]
    8384:	str	wzr, [sp, #64]
    8388:	add	x9, x24, #0x10
    838c:	stp	x9, x8, [sp, #8]
    8390:	ldrb	w8, [x20, #16]
    8394:	add	x9, sp, #0x8
    8398:	add	x23, x9, #0x20
    839c:	mov	x22, x0
    83a0:	strb	w8, [sp, #24]
    83a4:	ldr	x8, [x19, #48]
    83a8:	sub	x1, x29, #0x38
    83ac:	sub	x2, x29, #0x8
    83b0:	mov	x0, x23
    83b4:	stur	x8, [x29, #-56]
    83b8:	sub	x8, x29, #0x30
    83bc:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    83c0:	ldr	x8, [x19, #56]
    83c4:	sub	x1, x29, #0x38
    83c8:	sub	x2, x29, #0x8
    83cc:	mov	x0, x23
    83d0:	stur	x8, [x29, #-56]
    83d4:	sub	x8, x29, #0x30
    83d8:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    83dc:	ldr	x0, [x19, #64]
    83e0:	add	x1, sp, #0x8
    83e4:	ldr	x8, [x0]
    83e8:	ldr	x8, [x8, #96]
    83ec:	blr	x8
    83f0:	ldr	x8, [x19, #32]
    83f4:	mov	x4, x0
    83f8:	cmp	x8, x21
    83fc:	b.ne	8418 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0xf4>  // b.any
    8400:	ldr	x8, [x19, #40]
    8404:	cmp	x8, x22
    8408:	b.ne	8418 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0xf4>  // b.any
    840c:	ldr	x8, [x19, #64]
    8410:	cmp	x8, x4
    8414:	b.eq	8438 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x114>  // b.none
    8418:	ldp	x2, x3, [x19, #48]
    841c:	ldr	x5, [x19, #16]
    8420:	mov	x0, x21
    8424:	mov	x1, x22
    8428:	bl	7fd4 <_ZN4llvm10FoldOpInit3getEPNS_4InitES2_S2_S2_S2_PNS_5RecTyE>
    842c:	ldr	x1, [x20, #8]
    8430:	bl	8200 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE>
    8434:	mov	x19, x0
    8438:	ldr	x0, [sp, #48]
    843c:	add	x8, x24, #0x10
    8440:	str	x8, [sp, #8]
    8444:	bl	0 <_ZdlPv>
    8448:	mov	x0, x19
    844c:	ldp	x20, x19, [sp, #176]
    8450:	ldp	x22, x21, [sp, #160]
    8454:	ldp	x24, x23, [sp, #144]
    8458:	ldp	x29, x30, [sp, #128]
    845c:	add	sp, sp, #0xc0
    8460:	ret

0000000000008464 <_ZNK4llvm10FoldOpInit6getBitEj>:
    8464:	b	3664 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj>

0000000000008468 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev>:
    8468:	stp	x29, x30, [sp, #-80]!
    846c:	str	x28, [sp, #16]
    8470:	stp	x24, x23, [sp, #32]
    8474:	stp	x22, x21, [sp, #48]
    8478:	stp	x20, x19, [sp, #64]
    847c:	mov	x29, sp
    8480:	sub	sp, sp, #0x290
    8484:	mov	x20, x0
    8488:	ldr	x0, [x0, #32]
    848c:	mov	x19, x8
    8490:	add	x8, sp, #0x140
    8494:	add	x22, sp, #0x140
    8498:	ldr	x9, [x0]
    849c:	ldr	x9, [x9, #40]
    84a0:	blr	x9
    84a4:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    84a8:	adrp	x21, 0 <_ZNK4llvm5RecTy4dumpEv>
    84ac:	add	x8, x8, #0x0
    84b0:	mov	w9, #0x403                 	// #1027
    84b4:	add	x10, sp, #0x160
    84b8:	add	x21, x21, #0x0
    84bc:	mov	w11, #0x302                 	// #770
    84c0:	stp	x8, x22, [sp, #352]
    84c4:	strh	w9, [sp, #368]
    84c8:	stp	x10, x21, [sp, #376]
    84cc:	strh	w11, [sp, #392]
    84d0:	cbnz	wzr, 8a28 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5c0>
    84d4:	ldrb	w8, [sp, #369]
    84d8:	cmp	w8, #0x1
    84dc:	b.eq	8a28 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5c0>  // b.none
    84e0:	ldr	x0, [x20, #40]
    84e4:	add	x22, sp, #0x88
    84e8:	add	x23, sp, #0x108
    84ec:	ldr	x8, [x0]
    84f0:	ldr	x9, [x8, #40]
    84f4:	add	x8, sp, #0x108
    84f8:	blr	x9
    84fc:	ldrb	w8, [sp, #392]
    8500:	mov	w9, #0x104                 	// #260
    8504:	strh	w9, [sp, #312]
    8508:	stp	x23, xzr, [sp, #296]
    850c:	cmp	w8, #0x1
    8510:	b.eq	8534 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0xcc>  // b.none
    8514:	cbnz	w8, 854c <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0xe4>
    8518:	mov	w8, #0x100                 	// #256
    851c:	mov	w9, #0x103                 	// #259
    8520:	stp	xzr, xzr, [x29, #-256]
    8524:	stp	x21, xzr, [sp, #240]
    8528:	sturh	w8, [x29, #-240]
    852c:	strh	w9, [sp, #256]
    8530:	b	85c4 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x15c>
    8534:	ldr	x8, [sp, #312]
    8538:	ldr	q0, [x22, #160]
    853c:	stur	x8, [x29, #-240]
    8540:	and	w8, w8, #0xff
    8544:	stur	q0, [x29, #-256]
    8548:	b	85ac <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x144>
    854c:	ldrb	w9, [sp, #393]
    8550:	ldr	x10, [sp, #376]
    8554:	mov	w11, #0x2                   	// #2
    8558:	add	x12, sp, #0x178
    855c:	cmp	w9, #0x1
    8560:	csel	w11, w8, w11, eq  // eq = none
    8564:	add	x13, sp, #0x108
    8568:	mov	w14, #0x4                   	// #4
    856c:	csel	x9, x10, x12, eq  // eq = none
    8570:	cmp	w11, #0x2
    8574:	stp	x9, x13, [x29, #-256]
    8578:	sturb	w11, [x29, #-240]
    857c:	sturb	w14, [x29, #-239]
    8580:	b.ne	85ac <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x144>  // b.any
    8584:	ldrb	w8, [x9, #16]
    8588:	cbz	w8, 8a28 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5c0>
    858c:	ldrb	w8, [x9, #17]
    8590:	cmp	w8, #0x1
    8594:	b.eq	8a28 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5c0>  // b.none
    8598:	mov	w8, #0x103                 	// #259
    859c:	strh	w8, [sp, #256]
    85a0:	mov	w8, #0x2                   	// #2
    85a4:	stp	x21, xzr, [sp, #240]
    85a8:	b	85d4 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x16c>
    85ac:	mov	w9, #0x103                 	// #259
    85b0:	cmp	w8, #0x1
    85b4:	stp	x21, xzr, [sp, #240]
    85b8:	strh	w9, [sp, #256]
    85bc:	b.eq	8620 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x1b8>  // b.none
    85c0:	cbnz	w8, 85d4 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x16c>
    85c4:	mov	w8, #0x100                 	// #256
    85c8:	stp	xzr, xzr, [x29, #-224]
    85cc:	sturh	w8, [x29, #-208]
    85d0:	b	8630 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x1c8>
    85d4:	ldurb	w9, [x29, #-239]
    85d8:	ldur	x10, [x29, #-256]
    85dc:	mov	w11, #0x2                   	// #2
    85e0:	sub	x12, x29, #0x100
    85e4:	cmp	w9, #0x1
    85e8:	csel	w9, w8, w11, eq  // eq = none
    85ec:	mov	w13, #0x3                   	// #3
    85f0:	csel	x8, x10, x12, eq  // eq = none
    85f4:	cmp	w9, #0x2
    85f8:	stp	x8, x21, [x29, #-224]
    85fc:	sturb	w9, [x29, #-208]
    8600:	sturb	w13, [x29, #-207]
    8604:	b.ne	8630 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x1c8>  // b.any
    8608:	ldrb	w9, [x8, #16]
    860c:	cbz	w9, 8a28 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5c0>
    8610:	ldrb	w8, [x8, #17]
    8614:	cmp	w8, #0x1
    8618:	b.ne	8630 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x1c8>  // b.any
    861c:	b	8a28 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5c0>
    8620:	ldr	q0, [sp, #240]
    8624:	ldr	x8, [sp, #256]
    8628:	stur	q0, [x29, #-224]
    862c:	stur	x8, [x29, #-208]
    8630:	ldr	x0, [x20, #48]
    8634:	add	x23, sp, #0xb8
    8638:	ldr	x8, [x0]
    863c:	ldr	x9, [x8, #48]
    8640:	add	x8, sp, #0xb8
    8644:	blr	x9
    8648:	ldurb	w8, [x29, #-208]
    864c:	mov	w9, #0x104                 	// #260
    8650:	strh	w9, [sp, #232]
    8654:	stp	x23, xzr, [sp, #216]
    8658:	cmp	w8, #0x1
    865c:	b.eq	8680 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x218>  // b.none
    8660:	cbnz	w8, 8698 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x230>
    8664:	mov	w8, #0x100                 	// #256
    8668:	mov	w9, #0x103                 	// #259
    866c:	stp	xzr, xzr, [x29, #-192]
    8670:	stp	x21, xzr, [sp, #160]
    8674:	sturh	w8, [x29, #-176]
    8678:	strh	w9, [sp, #176]
    867c:	b	8710 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x2a8>
    8680:	ldr	x8, [sp, #232]
    8684:	ldr	q0, [x22, #80]
    8688:	stur	x8, [x29, #-176]
    868c:	and	w8, w8, #0xff
    8690:	stur	q0, [x29, #-192]
    8694:	b	86f8 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x290>
    8698:	ldurb	w9, [x29, #-207]
    869c:	ldur	x10, [x29, #-224]
    86a0:	mov	w11, #0x2                   	// #2
    86a4:	sub	x12, x29, #0xe0
    86a8:	cmp	w9, #0x1
    86ac:	csel	w11, w8, w11, eq  // eq = none
    86b0:	add	x13, sp, #0xb8
    86b4:	mov	w14, #0x4                   	// #4
    86b8:	csel	x9, x10, x12, eq  // eq = none
    86bc:	cmp	w11, #0x2
    86c0:	stp	x9, x13, [x29, #-192]
    86c4:	sturb	w11, [x29, #-176]
    86c8:	sturb	w14, [x29, #-175]
    86cc:	b.ne	86f8 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x290>  // b.any
    86d0:	ldrb	w8, [x9, #16]
    86d4:	cbz	w8, 8a28 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5c0>
    86d8:	ldrb	w8, [x9, #17]
    86dc:	cmp	w8, #0x1
    86e0:	b.eq	8a28 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5c0>  // b.none
    86e4:	mov	w8, #0x103                 	// #259
    86e8:	strh	w8, [sp, #176]
    86ec:	mov	w8, #0x2                   	// #2
    86f0:	stp	x21, xzr, [sp, #160]
    86f4:	b	8720 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x2b8>
    86f8:	mov	w9, #0x103                 	// #259
    86fc:	cmp	w8, #0x1
    8700:	stp	x21, xzr, [sp, #160]
    8704:	strh	w9, [sp, #176]
    8708:	b.eq	876c <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x304>  // b.none
    870c:	cbnz	w8, 8720 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x2b8>
    8710:	mov	w8, #0x100                 	// #256
    8714:	stp	xzr, xzr, [x29, #-160]
    8718:	sturh	w8, [x29, #-144]
    871c:	b	877c <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x314>
    8720:	ldurb	w9, [x29, #-175]
    8724:	ldur	x10, [x29, #-192]
    8728:	mov	w11, #0x2                   	// #2
    872c:	sub	x12, x29, #0xc0
    8730:	cmp	w9, #0x1
    8734:	csel	w9, w8, w11, eq  // eq = none
    8738:	mov	w13, #0x3                   	// #3
    873c:	csel	x8, x10, x12, eq  // eq = none
    8740:	cmp	w9, #0x2
    8744:	stp	x8, x21, [x29, #-160]
    8748:	sturb	w9, [x29, #-144]
    874c:	sturb	w13, [x29, #-143]
    8750:	b.ne	877c <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x314>  // b.any
    8754:	ldrb	w9, [x8, #16]
    8758:	cbz	w9, 8a28 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5c0>
    875c:	ldrb	w8, [x8, #17]
    8760:	cmp	w8, #0x1
    8764:	b.ne	877c <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x314>  // b.any
    8768:	b	8a28 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5c0>
    876c:	ldr	q0, [sp, #160]
    8770:	ldr	x8, [sp, #176]
    8774:	stur	q0, [x29, #-160]
    8778:	stur	x8, [x29, #-144]
    877c:	ldr	x0, [x20, #56]
    8780:	add	x24, sp, #0x68
    8784:	ldr	x8, [x0]
    8788:	ldr	x9, [x8, #48]
    878c:	add	x8, sp, #0x68
    8790:	blr	x9
    8794:	ldurb	w23, [x29, #-144]
    8798:	mov	w8, #0x104                 	// #260
    879c:	strh	w8, [sp, #152]
    87a0:	stp	x24, xzr, [sp, #136]
    87a4:	cmp	w23, #0x1
    87a8:	b.eq	87cc <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x364>  // b.none
    87ac:	cbnz	w23, 87e4 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x37c>
    87b0:	mov	w8, #0x100                 	// #256
    87b4:	mov	w9, #0x103                 	// #259
    87b8:	stp	xzr, xzr, [x29, #-128]
    87bc:	stp	x21, xzr, [sp, #80]
    87c0:	sturh	w8, [x29, #-112]
    87c4:	strh	w9, [sp, #96]
    87c8:	b	885c <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x3f4>
    87cc:	ldr	x8, [sp, #152]
    87d0:	ldr	q0, [x22]
    87d4:	and	w23, w8, #0xff
    87d8:	stur	q0, [x29, #-128]
    87dc:	stur	x8, [x29, #-112]
    87e0:	b	8844 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x3dc>
    87e4:	ldurb	w8, [x29, #-143]
    87e8:	ldur	x9, [x29, #-160]
    87ec:	mov	w10, #0x2                   	// #2
    87f0:	sub	x11, x29, #0xa0
    87f4:	cmp	w8, #0x1
    87f8:	csel	w10, w23, w10, eq  // eq = none
    87fc:	add	x12, sp, #0x68
    8800:	mov	w13, #0x4                   	// #4
    8804:	csel	x8, x9, x11, eq  // eq = none
    8808:	cmp	w10, #0x2
    880c:	stp	x8, x12, [x29, #-128]
    8810:	sturb	w10, [x29, #-112]
    8814:	sturb	w13, [x29, #-111]
    8818:	b.ne	8844 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x3dc>  // b.any
    881c:	ldrb	w9, [x8, #16]
    8820:	cbz	w9, 8a28 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5c0>
    8824:	ldrb	w8, [x8, #17]
    8828:	cmp	w8, #0x1
    882c:	b.eq	8a28 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5c0>  // b.none
    8830:	mov	w8, #0x103                 	// #259
    8834:	mov	w23, #0x2                   	// #2
    8838:	stp	x21, xzr, [sp, #80]
    883c:	strh	w8, [sp, #96]
    8840:	b	8870 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x408>
    8844:	mov	w8, #0x103                 	// #259
    8848:	cmp	w23, #0x1
    884c:	stp	x21, xzr, [sp, #80]
    8850:	strh	w8, [sp, #96]
    8854:	b.eq	88c0 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x458>  // b.none
    8858:	cbnz	w23, 8870 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x408>
    885c:	mov	w8, #0x100                 	// #256
    8860:	mov	w23, wzr
    8864:	stp	xzr, xzr, [x29, #-96]
    8868:	sturh	w8, [x29, #-80]
    886c:	b	88d4 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x46c>
    8870:	ldurb	w8, [x29, #-111]
    8874:	ldur	x9, [x29, #-128]
    8878:	mov	w10, #0x2                   	// #2
    887c:	sub	x11, x29, #0x80
    8880:	cmp	w8, #0x1
    8884:	csel	w10, w23, w10, eq  // eq = none
    8888:	mov	w12, #0x3                   	// #3
    888c:	csel	x8, x9, x11, eq  // eq = none
    8890:	cmp	w10, #0x2
    8894:	stp	x8, x21, [x29, #-96]
    8898:	sturb	w10, [x29, #-80]
    889c:	sturb	w12, [x29, #-79]
    88a0:	b.ne	88d4 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x46c>  // b.any
    88a4:	ldrb	w9, [x8, #16]
    88a8:	cbz	w9, 8a28 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5c0>
    88ac:	ldrb	w8, [x8, #17]
    88b0:	cmp	w8, #0x1
    88b4:	b.eq	8a28 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5c0>  // b.none
    88b8:	mov	w23, #0x2                   	// #2
    88bc:	b	88d4 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x46c>
    88c0:	ldr	x8, [sp, #96]
    88c4:	ldr	q0, [sp, #80]
    88c8:	and	w23, w8, #0xff
    88cc:	stur	q0, [x29, #-96]
    88d0:	stur	x8, [x29, #-80]
    88d4:	ldr	x0, [x20, #64]
    88d8:	add	x20, sp, #0x18
    88dc:	ldr	x8, [x0]
    88e0:	ldr	x9, [x8, #40]
    88e4:	add	x8, sp, #0x18
    88e8:	blr	x9
    88ec:	mov	w8, #0x104                 	// #260
    88f0:	cmp	w23, #0x1
    88f4:	strh	w8, [sp, #72]
    88f8:	stp	x20, xzr, [sp, #56]
    88fc:	b.eq	8928 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x4c0>  // b.none
    8900:	cbnz	w23, 8940 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x4d8>
    8904:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    8908:	mov	w8, #0x100                 	// #256
    890c:	add	x9, x9, #0x0
    8910:	mov	w10, #0x103                 	// #259
    8914:	stp	xzr, xzr, [x29, #-64]
    8918:	sturh	w8, [x29, #-48]
    891c:	stp	x9, xzr, [sp]
    8920:	strh	w10, [sp, #16]
    8924:	b	89c8 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x560>
    8928:	ldr	x8, [sp, #72]
    892c:	ldur	q0, [sp, #56]
    8930:	and	w23, w8, #0xff
    8934:	stur	q0, [x29, #-64]
    8938:	stur	x8, [x29, #-48]
    893c:	b	89a8 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x540>
    8940:	ldurb	w8, [x29, #-79]
    8944:	ldur	x9, [x29, #-96]
    8948:	mov	w10, #0x2                   	// #2
    894c:	sub	x11, x29, #0x60
    8950:	cmp	w8, #0x1
    8954:	csel	w10, w23, w10, eq  // eq = none
    8958:	add	x12, sp, #0x18
    895c:	mov	w13, #0x4                   	// #4
    8960:	csel	x8, x9, x11, eq  // eq = none
    8964:	cmp	w10, #0x2
    8968:	stp	x8, x12, [x29, #-64]
    896c:	sturb	w10, [x29, #-48]
    8970:	sturb	w13, [x29, #-47]
    8974:	b.ne	89a8 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x540>  // b.any
    8978:	ldrb	w9, [x8, #16]
    897c:	cbz	w9, 8a28 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5c0>
    8980:	ldrb	w8, [x8, #17]
    8984:	cmp	w8, #0x1
    8988:	b.eq	8a28 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5c0>  // b.none
    898c:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    8990:	add	x8, x8, #0x0
    8994:	mov	w9, #0x103                 	// #259
    8998:	mov	w23, #0x2                   	// #2
    899c:	stp	x8, xzr, [sp]
    89a0:	strh	w9, [sp, #16]
    89a4:	b	89d8 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x570>
    89a8:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    89ac:	add	x8, x8, #0x0
    89b0:	mov	w9, #0x103                 	// #259
    89b4:	cmp	w23, #0x1
    89b8:	stp	x8, xzr, [sp]
    89bc:	strh	w9, [sp, #16]
    89c0:	b.eq	8a48 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5e0>  // b.none
    89c4:	cbnz	w23, 89d8 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x570>
    89c8:	mov	w8, #0x100                 	// #256
    89cc:	stp	xzr, xzr, [x29, #-32]
    89d0:	sturh	w8, [x29, #-16]
    89d4:	b	8a58 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5f0>
    89d8:	ldurb	w8, [x29, #-47]
    89dc:	ldur	x9, [x29, #-64]
    89e0:	mov	w10, #0x2                   	// #2
    89e4:	sub	x11, x29, #0x40
    89e8:	cmp	w8, #0x1
    89ec:	adrp	x12, 0 <_ZNK4llvm5RecTy4dumpEv>
    89f0:	csel	w10, w23, w10, eq  // eq = none
    89f4:	add	x12, x12, #0x0
    89f8:	mov	w13, #0x3                   	// #3
    89fc:	csel	x8, x9, x11, eq  // eq = none
    8a00:	cmp	w10, #0x2
    8a04:	stp	x8, x12, [x29, #-32]
    8a08:	sturb	w10, [x29, #-16]
    8a0c:	sturb	w13, [x29, #-15]
    8a10:	b.ne	8a58 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5f0>  // b.any
    8a14:	ldrb	w9, [x8, #16]
    8a18:	cbz	w9, 8a28 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5c0>
    8a1c:	ldrb	w8, [x8, #17]
    8a20:	cmp	w8, #0x1
    8a24:	b.ne	8a58 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5f0>  // b.any
    8a28:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    8a2c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    8a30:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    8a34:	add	x0, x0, #0x0
    8a38:	add	x1, x1, #0x0
    8a3c:	add	x3, x3, #0x0
    8a40:	mov	w2, #0xb8                  	// #184
    8a44:	bl	0 <__assert_fail>
    8a48:	ldr	q0, [sp]
    8a4c:	ldr	x8, [sp, #16]
    8a50:	stur	q0, [x29, #-32]
    8a54:	stur	x8, [x29, #-16]
    8a58:	sub	x0, x29, #0x20
    8a5c:	mov	x8, x19
    8a60:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    8a64:	ldr	x0, [sp, #24]
    8a68:	add	x8, sp, #0x18
    8a6c:	add	x8, x8, #0x10
    8a70:	cmp	x0, x8
    8a74:	b.eq	8a7c <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x614>  // b.none
    8a78:	bl	0 <_ZdlPv>
    8a7c:	ldr	x0, [sp, #104]
    8a80:	add	x8, sp, #0x68
    8a84:	add	x8, x8, #0x10
    8a88:	cmp	x0, x8
    8a8c:	b.eq	8a94 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x62c>  // b.none
    8a90:	bl	0 <_ZdlPv>
    8a94:	ldr	x0, [sp, #184]
    8a98:	add	x8, sp, #0xb8
    8a9c:	add	x8, x8, #0x10
    8aa0:	cmp	x0, x8
    8aa4:	b.eq	8aac <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x644>  // b.none
    8aa8:	bl	0 <_ZdlPv>
    8aac:	ldr	x0, [sp, #264]
    8ab0:	add	x8, sp, #0x108
    8ab4:	add	x8, x8, #0x10
    8ab8:	cmp	x0, x8
    8abc:	b.eq	8ac4 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x65c>  // b.none
    8ac0:	bl	0 <_ZdlPv>
    8ac4:	ldr	x0, [sp, #320]
    8ac8:	add	x8, sp, #0x140
    8acc:	add	x8, x8, #0x10
    8ad0:	cmp	x0, x8
    8ad4:	b.eq	8adc <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x674>  // b.none
    8ad8:	bl	0 <_ZdlPv>
    8adc:	add	sp, sp, #0x290
    8ae0:	ldp	x20, x19, [sp, #64]
    8ae4:	ldp	x22, x21, [sp, #48]
    8ae8:	ldp	x24, x23, [sp, #32]
    8aec:	ldr	x28, [sp, #16]
    8af0:	ldp	x29, x30, [sp], #80
    8af4:	ret

0000000000008af8 <_ZN4llvm9IsAOpInit3getEPNS_5RecTyEPNS_4InitE>:
    8af8:	sub	sp, sp, #0xd0
    8afc:	stp	x29, x30, [sp, #160]
    8b00:	stp	x22, x21, [sp, #176]
    8b04:	stp	x20, x19, [sp, #192]
    8b08:	add	x29, sp, #0xa0
    8b0c:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    8b10:	add	x8, x8, #0x0
    8b14:	ldarb	w8, [x8]
    8b18:	mov	x19, x1
    8b1c:	mov	x20, x0
    8b20:	tbz	w8, #0, 8bf8 <_ZN4llvm9IsAOpInit3getEPNS_5RecTyEPNS_4InitE+0x100>
    8b24:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    8b28:	ldr	d0, [x8]
    8b2c:	add	x8, sp, #0x10
    8b30:	add	x22, x8, #0x10
    8b34:	add	x0, sp, #0x10
    8b38:	mov	x1, x20
    8b3c:	str	x22, [sp, #16]
    8b40:	str	d0, [sp, #24]
    8b44:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    8b48:	add	x0, sp, #0x10
    8b4c:	mov	x1, x19
    8b50:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    8b54:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    8b58:	add	x0, x0, #0x0
    8b5c:	add	x1, sp, #0x10
    8b60:	add	x2, sp, #0x8
    8b64:	str	xzr, [sp, #8]
    8b68:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    8b6c:	cbz	x0, 8b78 <_ZN4llvm9IsAOpInit3getEPNS_5RecTyEPNS_4InitE+0x80>
    8b70:	sub	x21, x0, #0x18
    8b74:	b	8bd0 <_ZN4llvm9IsAOpInit3getEPNS_5RecTyEPNS_4InitE+0xd8>
    8b78:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    8b7c:	add	x0, x0, #0x0
    8b80:	mov	w1, #0x30                  	// #48
    8b84:	mov	w2, #0x4                   	// #4
    8b88:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    8b8c:	adrp	x9, b8 <_ZN4llvm5RecTy9getListTyEv+0x4c>
    8b90:	adrp	x10, a58 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x270>
    8b94:	ldr	x9, [x9]
    8b98:	ldr	x10, [x10]
    8b9c:	mov	w8, #0x11                  	// #17
    8ba0:	ldr	x2, [sp, #8]
    8ba4:	mov	x1, x0
    8ba8:	strh	w8, [x0, #8]
    8bac:	add	x8, x10, #0x10
    8bb0:	mov	x21, x0
    8bb4:	str	x9, [x0, #16]
    8bb8:	str	xzr, [x1, #24]!
    8bbc:	str	x8, [x0]
    8bc0:	stp	x20, x19, [x0, #32]
    8bc4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    8bc8:	add	x0, x0, #0x0
    8bcc:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    8bd0:	ldr	x0, [sp, #16]
    8bd4:	cmp	x0, x22
    8bd8:	b.eq	8be0 <_ZN4llvm9IsAOpInit3getEPNS_5RecTyEPNS_4InitE+0xe8>  // b.none
    8bdc:	bl	0 <free>
    8be0:	mov	x0, x21
    8be4:	ldp	x20, x19, [sp, #192]
    8be8:	ldp	x22, x21, [sp, #176]
    8bec:	ldp	x29, x30, [sp, #160]
    8bf0:	add	sp, sp, #0xd0
    8bf4:	ret
    8bf8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    8bfc:	add	x0, x0, #0x0
    8c00:	bl	0 <__cxa_guard_acquire>
    8c04:	cbz	w0, 8b24 <_ZN4llvm9IsAOpInit3getEPNS_5RecTyEPNS_4InitE+0x2c>
    8c08:	adrp	x21, 0 <_ZNK4llvm5RecTy4dumpEv>
    8c0c:	add	x21, x21, #0x0
    8c10:	mov	w1, #0x6                   	// #6
    8c14:	mov	x0, x21
    8c18:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    8c1c:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    8c20:	ldr	x8, [x8]
    8c24:	adrp	x0, 0 <_ZN4llvm14FoldingSetBaseD2Ev>
    8c28:	adrp	x2, 0 <__dso_handle>
    8c2c:	add	x2, x2, #0x0
    8c30:	add	x8, x8, #0x10
    8c34:	str	x8, [x21]
    8c38:	ldr	x0, [x0]
    8c3c:	mov	x1, x21
    8c40:	bl	0 <__cxa_atexit>
    8c44:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    8c48:	add	x0, x0, #0x0
    8c4c:	bl	0 <__cxa_guard_release>
    8c50:	b	8b24 <_ZN4llvm9IsAOpInit3getEPNS_5RecTyEPNS_4InitE+0x2c>

0000000000008c54 <_ZNK4llvm9IsAOpInit7ProfileERNS_16FoldingSetNodeIDE>:
    8c54:	stp	x29, x30, [sp, #-32]!
    8c58:	stp	x20, x19, [sp, #16]
    8c5c:	mov	x29, sp
    8c60:	ldp	x8, x19, [x0, #32]
    8c64:	mov	x20, x1
    8c68:	mov	x0, x1
    8c6c:	mov	x1, x8
    8c70:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    8c74:	mov	x0, x20
    8c78:	mov	x1, x19
    8c7c:	ldp	x20, x19, [sp, #16]
    8c80:	ldp	x29, x30, [sp], #32
    8c84:	b	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>

0000000000008c88 <_ZNK4llvm9IsAOpInit4FoldEv>:
    8c88:	stp	x29, x30, [sp, #-32]!
    8c8c:	stp	x20, x19, [sp, #16]
    8c90:	mov	x29, sp
    8c94:	ldr	x20, [x0, #40]
    8c98:	cbz	x20, 8d2c <_ZNK4llvm9IsAOpInit4FoldEv+0xa4>
    8c9c:	ldrb	w8, [x20, #8]
    8ca0:	mov	x19, x0
    8ca4:	sub	w8, w8, #0x1
    8ca8:	cmp	w8, #0x16
    8cac:	b.ls	8cc0 <_ZNK4llvm9IsAOpInit4FoldEv+0x38>  // b.plast
    8cb0:	mov	x0, x19
    8cb4:	ldp	x20, x19, [sp, #16]
    8cb8:	ldp	x29, x30, [sp], #32
    8cbc:	ret
    8cc0:	ldr	x0, [x20, #16]
    8cc4:	ldr	x1, [x19, #32]
    8cc8:	ldr	x8, [x0]
    8ccc:	ldr	x8, [x8, #24]
    8cd0:	blr	x8
    8cd4:	tbz	w0, #0, 8ce0 <_ZNK4llvm9IsAOpInit4FoldEv+0x58>
    8cd8:	mov	w0, #0x1                   	// #1
    8cdc:	b	8d20 <_ZNK4llvm9IsAOpInit4FoldEv+0x98>
    8ce0:	ldr	x0, [x19, #32]
    8ce4:	cbz	x0, 8d4c <_ZNK4llvm9IsAOpInit4FoldEv+0xc4>
    8ce8:	ldr	w8, [x0, #8]
    8cec:	cmp	w8, #0x7
    8cf0:	b.ne	8d1c <_ZNK4llvm9IsAOpInit4FoldEv+0x94>  // b.any
    8cf4:	ldr	x8, [x0]
    8cf8:	ldr	x1, [x20, #16]
    8cfc:	ldr	x8, [x8, #24]
    8d00:	blr	x8
    8d04:	tbz	w0, #0, 8d1c <_ZNK4llvm9IsAOpInit4FoldEv+0x94>
    8d08:	ldr	x8, [x19, #40]
    8d0c:	cbz	x8, 8d6c <_ZNK4llvm9IsAOpInit4FoldEv+0xe4>
    8d10:	ldrb	w8, [x8, #8]
    8d14:	cmp	w8, #0x6
    8d18:	b.ne	8cb0 <_ZNK4llvm9IsAOpInit4FoldEv+0x28>  // b.any
    8d1c:	mov	x0, xzr
    8d20:	ldp	x20, x19, [sp, #16]
    8d24:	ldp	x29, x30, [sp], #32
    8d28:	b	1698 <_ZN4llvm7IntInit3getEl>
    8d2c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    8d30:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    8d34:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    8d38:	add	x0, x0, #0x0
    8d3c:	add	x1, x1, #0x0
    8d40:	add	x3, x3, #0x0
    8d44:	mov	w2, #0x69                  	// #105
    8d48:	bl	0 <__assert_fail>
    8d4c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    8d50:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    8d54:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    8d58:	add	x0, x0, #0x0
    8d5c:	add	x1, x1, #0x0
    8d60:	add	x3, x3, #0x0
    8d64:	mov	w2, #0x69                  	// #105
    8d68:	bl	0 <__assert_fail>
    8d6c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    8d70:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    8d74:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    8d78:	add	x0, x0, #0x0
    8d7c:	add	x1, x1, #0x0
    8d80:	add	x3, x3, #0x0
    8d84:	mov	w2, #0x69                  	// #105
    8d88:	bl	0 <__assert_fail>

0000000000008d8c <_ZNK4llvm9IsAOpInit17resolveReferencesERNS_8ResolverE>:
    8d8c:	stp	x29, x30, [sp, #-32]!
    8d90:	str	x19, [sp, #16]
    8d94:	mov	x29, sp
    8d98:	mov	x19, x0
    8d9c:	ldr	x0, [x0, #40]
    8da0:	ldr	x8, [x0]
    8da4:	ldr	x8, [x8, #96]
    8da8:	blr	x8
    8dac:	ldr	x8, [x19, #40]
    8db0:	cmp	x8, x0
    8db4:	b.eq	8dd0 <_ZNK4llvm9IsAOpInit17resolveReferencesERNS_8ResolverE+0x44>  // b.none
    8db8:	mov	x1, x0
    8dbc:	ldr	x0, [x19, #32]
    8dc0:	bl	8af8 <_ZN4llvm9IsAOpInit3getEPNS_5RecTyEPNS_4InitE>
    8dc4:	ldr	x19, [sp, #16]
    8dc8:	ldp	x29, x30, [sp], #32
    8dcc:	b	8c88 <_ZNK4llvm9IsAOpInit4FoldEv>
    8dd0:	mov	x0, x19
    8dd4:	ldr	x19, [sp, #16]
    8dd8:	ldp	x29, x30, [sp], #32
    8ddc:	ret

0000000000008de0 <_ZNK4llvm9IsAOpInit6getBitEj>:
    8de0:	b	3664 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj>

0000000000008de4 <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev>:
    8de4:	sub	sp, sp, #0xd0
    8de8:	stp	x29, x30, [sp, #160]
    8dec:	str	x21, [sp, #176]
    8df0:	stp	x20, x19, [sp, #192]
    8df4:	add	x29, sp, #0xa0
    8df8:	mov	x20, x0
    8dfc:	ldr	x0, [x0, #32]
    8e00:	mov	x19, x8
    8e04:	add	x8, sp, #0x20
    8e08:	add	x21, sp, #0x20
    8e0c:	ldr	x9, [x0]
    8e10:	ldr	x9, [x9, #16]
    8e14:	blr	x9
    8e18:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    8e1c:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    8e20:	add	x8, x8, #0x0
    8e24:	mov	w9, #0x403                 	// #1027
    8e28:	add	x10, sp, #0x40
    8e2c:	add	x11, x11, #0x0
    8e30:	mov	w12, #0x302                 	// #770
    8e34:	stp	x8, x21, [sp, #64]
    8e38:	strh	w9, [sp, #80]
    8e3c:	stp	x10, x11, [x29, #-72]
    8e40:	sturh	w12, [x29, #-56]
    8e44:	cbnz	wzr, 8f2c <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x148>
    8e48:	ldrb	w8, [sp, #81]
    8e4c:	cmp	w8, #0x1
    8e50:	b.eq	8f2c <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x148>  // b.none
    8e54:	ldr	x0, [x20, #40]
    8e58:	mov	x20, sp
    8e5c:	ldr	x8, [x0]
    8e60:	ldr	x9, [x8, #40]
    8e64:	mov	x8, sp
    8e68:	blr	x9
    8e6c:	ldurb	w8, [x29, #-55]
    8e70:	ldur	x9, [x29, #-72]
    8e74:	sub	x10, x29, #0x48
    8e78:	mov	w11, #0x402                 	// #1026
    8e7c:	cmp	w8, #0x1
    8e80:	csel	x8, x9, x10, eq  // eq = none
    8e84:	stp	x8, x20, [x29, #-48]
    8e88:	sturh	w11, [x29, #-32]
    8e8c:	ldrb	w9, [x8, #16]
    8e90:	cbz	w9, 8f2c <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x148>
    8e94:	ldrb	w8, [x8, #17]
    8e98:	cmp	w8, #0x1
    8e9c:	b.eq	8f2c <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x148>  // b.none
    8ea0:	ldurb	w8, [x29, #-31]
    8ea4:	ldur	x9, [x29, #-48]
    8ea8:	sub	x10, x29, #0x30
    8eac:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    8eb0:	cmp	w8, #0x1
    8eb4:	add	x11, x11, #0x0
    8eb8:	mov	w12, #0x302                 	// #770
    8ebc:	csel	x8, x9, x10, eq  // eq = none
    8ec0:	stp	x8, x11, [x29, #-24]
    8ec4:	sturh	w12, [x29, #-8]
    8ec8:	ldrb	w9, [x8, #16]
    8ecc:	cbz	w9, 8f2c <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x148>
    8ed0:	ldrb	w8, [x8, #17]
    8ed4:	cmp	w8, #0x1
    8ed8:	b.eq	8f2c <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x148>  // b.none
    8edc:	sub	x0, x29, #0x18
    8ee0:	mov	x8, x19
    8ee4:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    8ee8:	ldr	x0, [sp]
    8eec:	mov	x8, sp
    8ef0:	add	x8, x8, #0x10
    8ef4:	cmp	x0, x8
    8ef8:	b.eq	8f00 <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x11c>  // b.none
    8efc:	bl	0 <_ZdlPv>
    8f00:	ldr	x0, [sp, #32]
    8f04:	add	x8, sp, #0x20
    8f08:	add	x8, x8, #0x10
    8f0c:	cmp	x0, x8
    8f10:	b.eq	8f18 <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x134>  // b.none
    8f14:	bl	0 <_ZdlPv>
    8f18:	ldp	x20, x19, [sp, #192]
    8f1c:	ldr	x21, [sp, #176]
    8f20:	ldp	x29, x30, [sp, #160]
    8f24:	add	sp, sp, #0xd0
    8f28:	ret
    8f2c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    8f30:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    8f34:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    8f38:	add	x0, x0, #0x0
    8f3c:	add	x1, x1, #0x0
    8f40:	add	x3, x3, #0x0
    8f44:	mov	w2, #0xb8                  	// #184
    8f48:	bl	0 <__assert_fail>

0000000000008f4c <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE>:
    8f4c:	stp	x29, x30, [sp, #-16]!
    8f50:	mov	x29, sp
    8f54:	ldr	x8, [x0, #16]
    8f58:	cbz	x8, 8fe0 <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE+0x94>
    8f5c:	ldr	w9, [x8, #8]
    8f60:	cmp	w9, #0x7
    8f64:	b.ne	8fc4 <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE+0x78>  // b.any
    8f68:	ldr	w9, [x8, #32]
    8f6c:	cbz	w9, 8fc4 <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE+0x78>
    8f70:	add	x8, x8, #0x28
    8f74:	add	x9, x8, x9, lsl #3
    8f78:	b	8f8c <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE+0x40>
    8f7c:	cbnz	x10, 8fd0 <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE+0x84>
    8f80:	add	x8, x8, #0x8
    8f84:	cmp	x8, x9
    8f88:	b.eq	8fc4 <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE+0x78>  // b.none
    8f8c:	ldr	x10, [x8]
    8f90:	ldr	w11, [x10, #80]
    8f94:	cbz	w11, 8f80 <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE+0x34>
    8f98:	ldr	x10, [x10, #72]
    8f9c:	add	x11, x11, x11, lsl #1
    8fa0:	lsl	x11, x11, #3
    8fa4:	mov	x12, x10
    8fa8:	ldr	x13, [x12], #24
    8fac:	cmp	x13, x1
    8fb0:	b.eq	8f7c <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE+0x30>  // b.none
    8fb4:	subs	x11, x11, #0x18
    8fb8:	mov	x10, x12
    8fbc:	b.ne	8fa8 <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE+0x5c>  // b.any
    8fc0:	b	8f80 <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE+0x34>
    8fc4:	mov	x0, xzr
    8fc8:	ldp	x29, x30, [sp], #16
    8fcc:	ret
    8fd0:	ldr	x8, [x10, #8]
    8fd4:	and	x0, x8, #0xfffffffffffffff8
    8fd8:	ldp	x29, x30, [sp], #16
    8fdc:	ret
    8fe0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    8fe4:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    8fe8:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    8fec:	add	x0, x0, #0x0
    8ff0:	add	x1, x1, #0x0
    8ff4:	add	x3, x3, #0x0
    8ff8:	mov	w2, #0x69                  	// #105
    8ffc:	bl	0 <__assert_fail>

0000000000009000 <_ZNK4llvm9TypedInit20convertInitializerToEPNS_5RecTyE>:
    9000:	sub	sp, sp, #0x30
    9004:	stp	x29, x30, [sp, #16]
    9008:	stp	x20, x19, [sp, #32]
    900c:	add	x29, sp, #0x10
    9010:	mov	x19, x0
    9014:	ldr	x0, [x0, #16]
    9018:	cmp	x0, x1
    901c:	b.eq	907c <_ZNK4llvm9TypedInit20convertInitializerToEPNS_5RecTyE+0x7c>  // b.none
    9020:	ldr	x8, [x0]
    9024:	mov	x20, x1
    9028:	ldr	x8, [x8, #32]
    902c:	blr	x8
    9030:	tbnz	w0, #0, 907c <_ZNK4llvm9TypedInit20convertInitializerToEPNS_5RecTyE+0x7c>
    9034:	ldr	x8, [x19, #16]
    9038:	cbz	x8, 9090 <_ZNK4llvm9TypedInit20convertInitializerToEPNS_5RecTyE+0x90>
    903c:	ldr	w8, [x8, #8]
    9040:	cbnz	w8, 9078 <_ZNK4llvm9TypedInit20convertInitializerToEPNS_5RecTyE+0x78>
    9044:	cbz	x20, 90b0 <_ZNK4llvm9TypedInit20convertInitializerToEPNS_5RecTyE+0xb0>
    9048:	ldr	w8, [x20, #8]
    904c:	cmp	w8, #0x1
    9050:	b.ne	9078 <_ZNK4llvm9TypedInit20convertInitializerToEPNS_5RecTyE+0x78>  // b.any
    9054:	ldr	w8, [x20, #24]
    9058:	cmp	w8, #0x1
    905c:	b.ne	9078 <_ZNK4llvm9TypedInit20convertInitializerToEPNS_5RecTyE+0x78>  // b.any
    9060:	add	x0, sp, #0x8
    9064:	mov	w1, #0x1                   	// #1
    9068:	str	x19, [sp, #8]
    906c:	bl	176c <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    9070:	mov	x19, x0
    9074:	b	907c <_ZNK4llvm9TypedInit20convertInitializerToEPNS_5RecTyE+0x7c>
    9078:	mov	x19, xzr
    907c:	mov	x0, x19
    9080:	ldp	x20, x19, [sp, #32]
    9084:	ldp	x29, x30, [sp, #16]
    9088:	add	sp, sp, #0x30
    908c:	ret
    9090:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    9094:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    9098:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    909c:	add	x0, x0, #0x0
    90a0:	add	x1, x1, #0x0
    90a4:	add	x3, x3, #0x0
    90a8:	mov	w2, #0x69                  	// #105
    90ac:	bl	0 <__assert_fail>
    90b0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    90b4:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    90b8:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    90bc:	add	x0, x0, #0x0
    90c0:	add	x1, x1, #0x0
    90c4:	add	x3, x3, #0x0
    90c8:	mov	w2, #0x69                  	// #105
    90cc:	bl	0 <__assert_fail>

00000000000090d0 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE>:
    90d0:	sub	sp, sp, #0xd0
    90d4:	stp	x29, x30, [sp, #144]
    90d8:	stp	x24, x23, [sp, #160]
    90dc:	stp	x22, x21, [sp, #176]
    90e0:	stp	x20, x19, [sp, #192]
    90e4:	add	x29, sp, #0x90
    90e8:	ldr	x8, [x0, #16]
    90ec:	cbz	x8, 9230 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x160>
    90f0:	ldr	w9, [x8, #8]
    90f4:	cmp	w9, #0x1
    90f8:	b.ne	9144 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x74>  // b.any
    90fc:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    9100:	ldr	w23, [x8, #24]
    9104:	ldr	d0, [x9]
    9108:	mov	x8, sp
    910c:	mov	x22, x2
    9110:	mov	x19, x0
    9114:	mov	x20, x1
    9118:	add	x21, x8, #0x10
    911c:	cmp	x2, #0x11
    9120:	str	x21, [sp]
    9124:	str	d0, [sp, #8]
    9128:	b.cc	914c <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x7c>  // b.lo, b.ul, b.last
    912c:	mov	x0, sp
    9130:	mov	w3, #0x8                   	// #8
    9134:	mov	x1, x21
    9138:	mov	x2, x22
    913c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    9140:	b	9150 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x80>
    9144:	mov	x19, xzr
    9148:	b	91f4 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x124>
    914c:	cbz	x22, 91c8 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xf8>
    9150:	lsl	x24, x22, #2
    9154:	ldr	w1, [x20]
    9158:	cmp	w1, w23
    915c:	b.cs	91c0 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xf0>  // b.hs, b.nlast
    9160:	mov	x0, x19
    9164:	bl	3664 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj>
    9168:	ldp	w8, w9, [sp, #8]
    916c:	mov	x22, x0
    9170:	cmp	w8, w9
    9174:	b.cs	91a4 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xd4>  // b.hs, b.nlast
    9178:	ldr	x9, [sp]
    917c:	str	x22, [x9, w8, uxtw #3]
    9180:	ldp	w8, w9, [sp, #8]
    9184:	cmp	w8, w9
    9188:	b.cs	9210 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x140>  // b.hs, b.nlast
    918c:	add	w8, w8, #0x1
    9190:	subs	x24, x24, #0x4
    9194:	add	x20, x20, #0x4
    9198:	str	w8, [sp, #8]
    919c:	b.ne	9154 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x84>  // b.any
    91a0:	b	91cc <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xfc>
    91a4:	mov	x0, sp
    91a8:	mov	w3, #0x8                   	// #8
    91ac:	mov	x1, x21
    91b0:	mov	x2, xzr
    91b4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    91b8:	ldr	w8, [sp, #8]
    91bc:	b	9178 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xa8>
    91c0:	mov	x19, xzr
    91c4:	b	91dc <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x10c>
    91c8:	ldr	w8, [sp, #8]
    91cc:	ldr	x0, [sp]
    91d0:	mov	w1, w8
    91d4:	bl	176c <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    91d8:	mov	x19, x0
    91dc:	ldr	x0, [sp]
    91e0:	mov	x8, sp
    91e4:	add	x8, x8, #0x10
    91e8:	cmp	x0, x8
    91ec:	b.eq	91f4 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x124>  // b.none
    91f0:	bl	0 <free>
    91f4:	mov	x0, x19
    91f8:	ldp	x20, x19, [sp, #192]
    91fc:	ldp	x22, x21, [sp, #176]
    9200:	ldp	x24, x23, [sp, #160]
    9204:	ldp	x29, x30, [sp, #144]
    9208:	add	sp, sp, #0xd0
    920c:	ret
    9210:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    9214:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    9218:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    921c:	add	x0, x0, #0x0
    9220:	add	x1, x1, #0x0
    9224:	add	x3, x3, #0x0
    9228:	mov	w2, #0x43                  	// #67
    922c:	bl	0 <__assert_fail>
    9230:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    9234:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    9238:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    923c:	add	x0, x0, #0x0
    9240:	add	x1, x1, #0x0
    9244:	add	x3, x3, #0x0
    9248:	mov	w2, #0x69                  	// #105
    924c:	bl	0 <__assert_fail>

0000000000009250 <_ZNK4llvm9TypedInit9getCastToEPNS_5RecTyE>:
    9250:	stp	x29, x30, [sp, #-48]!
    9254:	str	x21, [sp, #16]
    9258:	stp	x20, x19, [sp, #32]
    925c:	mov	x29, sp
    9260:	mov	x20, x0
    9264:	ldr	x0, [x0, #16]
    9268:	cmp	x0, x1
    926c:	b.eq	9284 <_ZNK4llvm9TypedInit9getCastToEPNS_5RecTyE+0x34>  // b.none
    9270:	ldr	x8, [x0]
    9274:	mov	x19, x1
    9278:	ldr	x8, [x8, #32]
    927c:	blr	x8
    9280:	tbz	w0, #0, 929c <_ZNK4llvm9TypedInit9getCastToEPNS_5RecTyE+0x4c>
    9284:	mov	x21, x20
    9288:	mov	x0, x21
    928c:	ldp	x20, x19, [sp, #32]
    9290:	ldr	x21, [sp, #16]
    9294:	ldp	x29, x30, [sp], #48
    9298:	ret
    929c:	ldr	x8, [x20]
    92a0:	mov	x0, x20
    92a4:	mov	x1, x19
    92a8:	ldr	x8, [x8, #64]
    92ac:	blr	x8
    92b0:	cbz	x0, 9300 <_ZNK4llvm9TypedInit9getCastToEPNS_5RecTyE+0xb0>
    92b4:	ldrb	w8, [x0, #8]
    92b8:	mov	x21, x0
    92bc:	sub	w8, w8, #0x1
    92c0:	cmp	w8, #0x16
    92c4:	b.hi	9288 <_ZNK4llvm9TypedInit9getCastToEPNS_5RecTyE+0x38>  // b.pmore
    92c8:	ldr	x0, [x21, #16]
    92cc:	mov	x1, x19
    92d0:	ldr	x8, [x0]
    92d4:	ldr	x8, [x8, #32]
    92d8:	blr	x8
    92dc:	tbnz	w0, #0, 9288 <_ZNK4llvm9TypedInit9getCastToEPNS_5RecTyE+0x38>
    92e0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    92e4:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    92e8:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    92ec:	add	x0, x0, #0x0
    92f0:	add	x1, x1, #0x0
    92f4:	add	x3, x3, #0x0
    92f8:	mov	w2, #0x5c3                 	// #1475
    92fc:	bl	0 <__assert_fail>
    9300:	ldr	x0, [x20, #16]
    9304:	mov	x1, x19
    9308:	ldr	x8, [x0]
    930c:	ldr	x8, [x8, #24]
    9310:	blr	x8
    9314:	tbz	w0, #0, 9340 <_ZNK4llvm9TypedInit9getCastToEPNS_5RecTyE+0xf0>
    9318:	mov	w0, wzr
    931c:	mov	x1, x20
    9320:	mov	x2, x19
    9324:	bl	37d4 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE>
    9328:	ldp	x20, x19, [sp, #32]
    932c:	ldr	x21, [sp, #16]
    9330:	mov	x1, xzr
    9334:	mov	w2, wzr
    9338:	ldp	x29, x30, [sp], #48
    933c:	b	3994 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb>
    9340:	mov	x21, xzr
    9344:	b	9288 <_ZNK4llvm9TypedInit9getCastToEPNS_5RecTyE+0x38>

0000000000009348 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE>:
    9348:	sub	sp, sp, #0x90
    934c:	stp	x29, x30, [sp, #80]
    9350:	stp	x24, x23, [sp, #96]
    9354:	stp	x22, x21, [sp, #112]
    9358:	stp	x20, x19, [sp, #128]
    935c:	add	x29, sp, #0x50
    9360:	ldr	x23, [x0, #16]
    9364:	cbz	x23, 94c4 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0x17c>
    9368:	ldr	w8, [x23, #8]
    936c:	cmp	w8, #0x5
    9370:	b.ne	93a8 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0x60>  // b.any
    9374:	mov	x22, x2
    9378:	mov	x19, x0
    937c:	mov	x20, x1
    9380:	cmp	x2, #0x1
    9384:	b.ne	93b0 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0x68>  // b.any
    9388:	ldr	w1, [x20]
    938c:	mov	x0, x19
    9390:	ldp	x20, x19, [sp, #128]
    9394:	ldp	x22, x21, [sp, #112]
    9398:	ldp	x24, x23, [sp, #96]
    939c:	ldp	x29, x30, [sp, #80]
    93a0:	add	sp, sp, #0x90
    93a4:	b	94e4 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj>
    93a8:	mov	x19, xzr
    93ac:	b	9488 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0x140>
    93b0:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    93b4:	ldr	d0, [x9]
    93b8:	mov	x8, sp
    93bc:	add	x21, x8, #0x10
    93c0:	cmp	x22, #0x9
    93c4:	str	x21, [sp]
    93c8:	str	d0, [sp, #8]
    93cc:	b.cc	93e8 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0xa0>  // b.lo, b.ul, b.last
    93d0:	mov	x0, sp
    93d4:	mov	w3, #0x8                   	// #8
    93d8:	mov	x1, x21
    93dc:	mov	x2, x22
    93e0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    93e4:	b	93ec <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0xa4>
    93e8:	cbz	x22, 9454 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0x10c>
    93ec:	lsl	x24, x22, #2
    93f0:	ldr	w1, [x20]
    93f4:	mov	x0, x19
    93f8:	bl	94e4 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj>
    93fc:	ldp	w8, w9, [sp, #8]
    9400:	mov	x22, x0
    9404:	cmp	w8, w9
    9408:	b.cs	9438 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0xf0>  // b.hs, b.nlast
    940c:	ldr	x9, [sp]
    9410:	str	x22, [x9, w8, uxtw #3]
    9414:	ldp	w8, w9, [sp, #8]
    9418:	cmp	w8, w9
    941c:	b.cs	94a4 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0x15c>  // b.hs, b.nlast
    9420:	add	w8, w8, #0x1
    9424:	subs	x24, x24, #0x4
    9428:	add	x20, x20, #0x4
    942c:	str	w8, [sp, #8]
    9430:	b.ne	93f0 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0xa8>  // b.any
    9434:	b	9458 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0x110>
    9438:	mov	x0, sp
    943c:	mov	w3, #0x8                   	// #8
    9440:	mov	x1, x21
    9444:	mov	x2, xzr
    9448:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    944c:	ldr	w8, [sp, #8]
    9450:	b	940c <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0xc4>
    9454:	ldr	w8, [sp, #8]
    9458:	ldr	x0, [sp]
    945c:	ldr	x2, [x23, #24]
    9460:	mov	w1, w8
    9464:	bl	2b9c <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    9468:	ldr	x8, [sp]
    946c:	mov	x9, sp
    9470:	add	x9, x9, #0x10
    9474:	mov	x19, x0
    9478:	cmp	x8, x9
    947c:	b.eq	9488 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0x140>  // b.none
    9480:	mov	x0, x8
    9484:	bl	0 <free>
    9488:	mov	x0, x19
    948c:	ldp	x20, x19, [sp, #128]
    9490:	ldp	x22, x21, [sp, #112]
    9494:	ldp	x24, x23, [sp, #96]
    9498:	ldp	x29, x30, [sp, #80]
    949c:	add	sp, sp, #0x90
    94a0:	ret
    94a4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    94a8:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    94ac:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    94b0:	add	x0, x0, #0x0
    94b4:	add	x1, x1, #0x0
    94b8:	add	x3, x3, #0x0
    94bc:	mov	w2, #0x43                  	// #67
    94c0:	bl	0 <__assert_fail>
    94c4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    94c8:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    94cc:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    94d0:	add	x0, x0, #0x0
    94d4:	add	x1, x1, #0x0
    94d8:	add	x3, x3, #0x0
    94dc:	mov	w2, #0x69                  	// #105
    94e0:	bl	0 <__assert_fail>

00000000000094e4 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj>:
    94e4:	sub	sp, sp, #0x40
    94e8:	stp	x29, x30, [sp, #16]
    94ec:	str	x21, [sp, #32]
    94f0:	stp	x20, x19, [sp, #48]
    94f4:	add	x29, sp, #0x10
    94f8:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    94fc:	add	x8, x8, #0x0
    9500:	ldarb	w8, [x8]
    9504:	mov	w19, w1
    9508:	mov	x20, x0
    950c:	tbz	w8, #0, 95d4 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0xf0>
    9510:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    9514:	mov	w8, w19
    9518:	add	x0, x0, #0x0
    951c:	mov	x1, sp
    9520:	add	x2, x29, #0x18
    9524:	stp	x20, x8, [sp]
    9528:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    952c:	ldr	x21, [x29, #24]
    9530:	tbz	w0, #0, 9540 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x5c>
    9534:	ldr	x0, [x21, #16]
    9538:	cbnz	x0, 95c0 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0xdc>
    953c:	b	9570 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x8c>
    9540:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    9544:	add	x0, x0, #0x0
    9548:	mov	x1, sp
    954c:	mov	x2, sp
    9550:	mov	x3, x21
    9554:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    9558:	ldr	x8, [sp]
    955c:	mov	x21, x0
    9560:	str	x8, [x0]
    9564:	ldr	w8, [sp, #8]
    9568:	str	xzr, [x0, #16]
    956c:	str	w8, [x0, #8]
    9570:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    9574:	add	x0, x0, #0x0
    9578:	mov	w1, #0x28                  	// #40
    957c:	mov	w2, #0x4                   	// #4
    9580:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    9584:	ldr	x8, [x20, #16]
    9588:	cbz	x8, 961c <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x138>
    958c:	ldr	w9, [x8, #8]
    9590:	cmp	w9, #0x5
    9594:	b.ne	963c <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x158>  // b.any
    9598:	adrp	x10, bd8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x3f0>
    959c:	ldr	x8, [x8, #24]
    95a0:	ldr	x10, [x10]
    95a4:	mov	w9, #0x14                  	// #20
    95a8:	strh	w9, [x0, #8]
    95ac:	str	w19, [x0, #32]
    95b0:	add	x9, x10, #0x10
    95b4:	str	x9, [x0]
    95b8:	stp	x8, x20, [x0, #16]
    95bc:	str	x0, [x21, #16]
    95c0:	ldp	x20, x19, [sp, #48]
    95c4:	ldr	x21, [sp, #32]
    95c8:	ldp	x29, x30, [sp, #16]
    95cc:	add	sp, sp, #0x40
    95d0:	ret
    95d4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    95d8:	add	x0, x0, #0x0
    95dc:	bl	0 <__cxa_guard_acquire>
    95e0:	cbz	w0, 9510 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x2c>
    95e4:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    95e8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    95ec:	adrp	x2, 0 <__dso_handle>
    95f0:	add	x1, x1, #0x0
    95f4:	add	x0, x0, #0x0
    95f8:	add	x2, x2, #0x0
    95fc:	stp	xzr, xzr, [x1]
    9600:	str	wzr, [x1, #24]
    9604:	str	xzr, [x1, #16]
    9608:	bl	0 <__cxa_atexit>
    960c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    9610:	add	x0, x0, #0x0
    9614:	bl	0 <__cxa_guard_release>
    9618:	b	9510 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x2c>
    961c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    9620:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    9624:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    9628:	add	x0, x0, #0x0
    962c:	add	x1, x1, #0x0
    9630:	add	x3, x3, #0x0
    9634:	mov	w2, #0x69                  	// #105
    9638:	bl	0 <__assert_fail>
    963c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    9640:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    9644:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    9648:	add	x0, x0, #0x0
    964c:	add	x1, x1, #0x0
    9650:	add	x3, x3, #0x0
    9654:	mov	w2, #0x108                 	// #264
    9658:	bl	0 <__assert_fail>

000000000000965c <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>:
    965c:	sub	sp, sp, #0x40
    9660:	stp	x29, x30, [sp, #16]
    9664:	str	x21, [sp, #32]
    9668:	stp	x20, x19, [sp, #48]
    966c:	add	x29, sp, #0x10
    9670:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    9674:	add	x8, x8, #0x0
    9678:	ldarb	w8, [x8]
    967c:	mov	x19, x1
    9680:	mov	x20, x0
    9684:	tbz	w8, #0, 9724 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0xc8>
    9688:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    968c:	add	x0, x0, #0x0
    9690:	mov	x1, sp
    9694:	add	x2, x29, #0x18
    9698:	stp	x19, x20, [sp]
    969c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    96a0:	ldr	x21, [x29, #24]
    96a4:	tbz	w0, #0, 96b4 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x58>
    96a8:	ldr	x0, [x21, #16]
    96ac:	cbnz	x0, 9710 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0xb4>
    96b0:	b	96dc <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x80>
    96b4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    96b8:	add	x0, x0, #0x0
    96bc:	mov	x1, sp
    96c0:	mov	x2, sp
    96c4:	mov	x3, x21
    96c8:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    96cc:	ldr	q0, [sp]
    96d0:	mov	x21, x0
    96d4:	str	xzr, [x0, #16]
    96d8:	str	q0, [x0]
    96dc:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    96e0:	add	x0, x0, #0x0
    96e4:	mov	w1, #0x20                  	// #32
    96e8:	mov	w2, #0x4                   	// #4
    96ec:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    96f0:	adrp	x9, ad8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x2f0>
    96f4:	ldr	x9, [x9]
    96f8:	mov	w8, #0x13                  	// #19
    96fc:	strh	w8, [x0, #8]
    9700:	stp	x19, x20, [x0, #16]
    9704:	add	x8, x9, #0x10
    9708:	str	x8, [x0]
    970c:	str	x0, [x21, #16]
    9710:	ldp	x20, x19, [sp, #48]
    9714:	ldr	x21, [sp, #32]
    9718:	ldp	x29, x30, [sp, #16]
    971c:	add	sp, sp, #0x40
    9720:	ret
    9724:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    9728:	add	x0, x0, #0x0
    972c:	bl	0 <__cxa_guard_acquire>
    9730:	cbz	w0, 9688 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x2c>
    9734:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    9738:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    973c:	adrp	x2, 0 <__dso_handle>
    9740:	add	x1, x1, #0x0
    9744:	add	x0, x0, #0x0
    9748:	add	x2, x2, #0x0
    974c:	stp	xzr, xzr, [x1]
    9750:	str	wzr, [x1, #24]
    9754:	str	xzr, [x1, #16]
    9758:	bl	0 <__cxa_atexit>
    975c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    9760:	add	x0, x0, #0x0
    9764:	bl	0 <__cxa_guard_release>
    9768:	b	9688 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x2c>

000000000000976c <_ZNK4llvm7VarInit6getBitEj>:
    976c:	adrp	x9, 88 <_ZN4llvm5RecTy9getListTyEv+0x1c>
    9770:	ldr	x8, [x0, #16]
    9774:	ldr	x9, [x9]
    9778:	cmp	x8, x9
    977c:	b.eq	9784 <_ZNK4llvm7VarInit6getBitEj+0x18>  // b.none
    9780:	b	3664 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj>
    9784:	ret

0000000000009788 <_ZNK4llvm7VarInit17resolveReferencesERNS_8ResolverE>:
    9788:	stp	x29, x30, [sp, #-32]!
    978c:	str	x19, [sp, #16]
    9790:	mov	x29, sp
    9794:	ldr	x9, [x1]
    9798:	mov	x8, x1
    979c:	ldr	x1, [x0, #24]
    97a0:	mov	x19, x0
    97a4:	ldr	x9, [x9, #16]
    97a8:	mov	x0, x8
    97ac:	blr	x9
    97b0:	cmp	x0, #0x0
    97b4:	csel	x0, x19, x0, eq  // eq = none
    97b8:	ldr	x19, [sp, #16]
    97bc:	ldp	x29, x30, [sp], #32
    97c0:	ret

00000000000097c4 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev>:
    97c4:	sub	sp, sp, #0xc0
    97c8:	stp	x29, x30, [sp, #128]
    97cc:	str	x23, [sp, #144]
    97d0:	stp	x22, x21, [sp, #160]
    97d4:	stp	x20, x19, [sp, #176]
    97d8:	add	x29, sp, #0x80
    97dc:	mov	x20, x0
    97e0:	ldr	x0, [x0, #24]
    97e4:	mov	x19, x8
    97e8:	add	x8, sp, #0x20
    97ec:	ldr	x9, [x0]
    97f0:	ldr	x9, [x9, #40]
    97f4:	blr	x9
    97f8:	ldr	x8, [sp, #40]
    97fc:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    9800:	cmp	x8, x9
    9804:	b.eq	9a80 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x2bc>  // b.none
    9808:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    980c:	add	x1, x1, #0x0
    9810:	add	x0, sp, #0x20
    9814:	mov	w2, #0x1                   	// #1
    9818:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    981c:	add	x8, sp, #0x40
    9820:	add	x22, x8, #0x10
    9824:	str	x22, [sp, #64]
    9828:	mov	x8, x0
    982c:	ldr	x9, [x8], #16
    9830:	cmp	x9, x8
    9834:	b.eq	9848 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x84>  // b.none
    9838:	str	x9, [sp, #64]
    983c:	ldr	x9, [x0, #16]
    9840:	str	x9, [sp, #80]
    9844:	b	9850 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x8c>
    9848:	ldr	q0, [x9]
    984c:	str	q0, [x22]
    9850:	ldr	x9, [x0, #8]
    9854:	sub	x10, x29, #0x20
    9858:	str	x9, [sp, #72]
    985c:	stp	x8, xzr, [x0]
    9860:	strb	wzr, [x0, #16]
    9864:	ldr	w9, [x20, #32]
    9868:	add	x8, x10, #0x15
    986c:	cbz	w9, 98a4 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0xe0>
    9870:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
    9874:	movk	x10, #0xcccd
    9878:	mov	w11, #0xa                   	// #10
    987c:	mov	x20, x8
    9880:	umulh	x12, x9, x10
    9884:	lsr	x12, x12, #3
    9888:	msub	w13, w12, w11, w9
    988c:	orr	w13, w13, #0x30
    9890:	cmp	x9, #0x9
    9894:	strb	w13, [x20, #-1]!
    9898:	mov	x9, x12
    989c:	b.hi	9880 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0xbc>  // b.pmore
    98a0:	b	98b0 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0xec>
    98a4:	mov	w9, #0x30                  	// #48
    98a8:	add	x20, x10, #0x14
    98ac:	sturb	w9, [x29, #-12]
    98b0:	mov	x9, sp
    98b4:	sub	x21, x8, x20
    98b8:	add	x23, x9, #0x10
    98bc:	cmp	x21, #0x10
    98c0:	mov	x0, x23
    98c4:	str	x23, [sp]
    98c8:	str	x21, [x29, #24]
    98cc:	b.cc	98ec <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x128>  // b.lo, b.ul, b.last
    98d0:	mov	x0, sp
    98d4:	add	x1, x29, #0x18
    98d8:	mov	x2, xzr
    98dc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    98e0:	ldr	x8, [x29, #24]
    98e4:	str	x0, [sp]
    98e8:	str	x8, [sp, #16]
    98ec:	cbz	x21, 9910 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x14c>
    98f0:	cmp	x21, #0x1
    98f4:	b.ne	9904 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x140>  // b.any
    98f8:	ldrb	w8, [x20]
    98fc:	strb	w8, [x0]
    9900:	b	9910 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x14c>
    9904:	mov	x1, x20
    9908:	mov	x2, x21
    990c:	bl	0 <memcpy>
    9910:	ldr	x8, [x29, #24]
    9914:	ldr	x9, [sp]
    9918:	mov	w10, #0xf                   	// #15
    991c:	str	x8, [sp, #8]
    9920:	strb	wzr, [x9, x8]
    9924:	ldp	x3, x4, [sp, #64]
    9928:	ldp	x1, x2, [sp]
    992c:	ldr	x9, [sp, #80]
    9930:	cmp	x3, x22
    9934:	add	x8, x2, x4
    9938:	csel	x9, x10, x9, eq  // eq = none
    993c:	cmp	x8, x9
    9940:	b.ls	995c <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x198>  // b.plast
    9944:	ldr	x9, [sp, #16]
    9948:	cmp	x1, x23
    994c:	mov	w10, #0xf                   	// #15
    9950:	csel	x9, x10, x9, eq  // eq = none
    9954:	cmp	x8, x9
    9958:	b.ls	9968 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x1a4>  // b.plast
    995c:	add	x0, sp, #0x40
    9960:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    9964:	b	9978 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x1b4>
    9968:	mov	x0, sp
    996c:	mov	x1, xzr
    9970:	mov	x2, xzr
    9974:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    9978:	sub	x8, x29, #0x20
    997c:	add	x20, x8, #0x10
    9980:	stur	x20, [x29, #-32]
    9984:	mov	x8, x0
    9988:	ldr	x9, [x8], #16
    998c:	cmp	x9, x8
    9990:	b.eq	99a4 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x1e0>  // b.none
    9994:	stur	x9, [x29, #-32]
    9998:	ldr	x9, [x0, #16]
    999c:	stur	x9, [x29, #-16]
    99a0:	b	99ac <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x1e8>
    99a4:	ldr	q0, [x9]
    99a8:	str	q0, [x20]
    99ac:	ldr	x9, [x0, #8]
    99b0:	stur	x9, [x29, #-24]
    99b4:	stp	x8, xzr, [x0]
    99b8:	strb	wzr, [x0, #16]
    99bc:	ldur	x8, [x29, #-24]
    99c0:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    99c4:	cmp	x8, x9
    99c8:	b.eq	9a80 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x2bc>  // b.none
    99cc:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    99d0:	add	x1, x1, #0x0
    99d4:	sub	x0, x29, #0x20
    99d8:	mov	w2, #0x1                   	// #1
    99dc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    99e0:	add	x9, x19, #0x10
    99e4:	str	x9, [x19]
    99e8:	mov	x8, x0
    99ec:	ldr	x10, [x8], #16
    99f0:	cmp	x10, x8
    99f4:	b.eq	9a08 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x244>  // b.none
    99f8:	str	x10, [x19]
    99fc:	ldr	x9, [x0, #16]
    9a00:	str	x9, [x19, #16]
    9a04:	b	9a10 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x24c>
    9a08:	ldr	q0, [x10]
    9a0c:	str	q0, [x9]
    9a10:	ldr	x9, [x0, #8]
    9a14:	str	x9, [x19, #8]
    9a18:	stp	x8, xzr, [x0]
    9a1c:	strb	wzr, [x0, #16]
    9a20:	ldur	x0, [x29, #-32]
    9a24:	cmp	x0, x20
    9a28:	b.eq	9a30 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x26c>  // b.none
    9a2c:	bl	0 <_ZdlPv>
    9a30:	ldr	x0, [sp]
    9a34:	cmp	x0, x23
    9a38:	b.eq	9a40 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x27c>  // b.none
    9a3c:	bl	0 <_ZdlPv>
    9a40:	ldr	x0, [sp, #64]
    9a44:	cmp	x0, x22
    9a48:	b.eq	9a50 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x28c>  // b.none
    9a4c:	bl	0 <_ZdlPv>
    9a50:	ldr	x0, [sp, #32]
    9a54:	add	x8, sp, #0x20
    9a58:	add	x8, x8, #0x10
    9a5c:	cmp	x0, x8
    9a60:	b.eq	9a68 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x2a4>  // b.none
    9a64:	bl	0 <_ZdlPv>
    9a68:	ldp	x20, x19, [sp, #176]
    9a6c:	ldp	x22, x21, [sp, #160]
    9a70:	ldr	x23, [sp, #144]
    9a74:	ldp	x29, x30, [sp, #128]
    9a78:	add	sp, sp, #0xc0
    9a7c:	ret
    9a80:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    9a84:	add	x0, x0, #0x0
    9a88:	bl	0 <_ZSt20__throw_length_errorPKc>

0000000000009a8c <_ZNK4llvm10VarBitInit17resolveReferencesERNS_8ResolverE>:
    9a8c:	stp	x29, x30, [sp, #-32]!
    9a90:	str	x19, [sp, #16]
    9a94:	mov	x29, sp
    9a98:	mov	x19, x0
    9a9c:	ldr	x0, [x0, #24]
    9aa0:	ldr	x8, [x0]
    9aa4:	ldr	x8, [x8, #96]
    9aa8:	blr	x8
    9aac:	ldr	x8, [x19, #24]
    9ab0:	cmp	x8, x0
    9ab4:	b.eq	9ad0 <_ZNK4llvm10VarBitInit17resolveReferencesERNS_8ResolverE+0x44>  // b.none
    9ab8:	ldr	x8, [x0]
    9abc:	ldr	w1, [x19, #32]
    9ac0:	ldr	x19, [sp, #16]
    9ac4:	ldr	x2, [x8, #104]
    9ac8:	ldp	x29, x30, [sp], #32
    9acc:	br	x2
    9ad0:	mov	x0, x19
    9ad4:	ldr	x19, [sp, #16]
    9ad8:	ldp	x29, x30, [sp], #32
    9adc:	ret

0000000000009ae0 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev>:
    9ae0:	sub	sp, sp, #0xc0
    9ae4:	stp	x29, x30, [sp, #128]
    9ae8:	str	x23, [sp, #144]
    9aec:	stp	x22, x21, [sp, #160]
    9af0:	stp	x20, x19, [sp, #176]
    9af4:	add	x29, sp, #0x80
    9af8:	mov	x20, x0
    9afc:	ldr	x0, [x0, #24]
    9b00:	mov	x19, x8
    9b04:	add	x8, sp, #0x20
    9b08:	ldr	x9, [x0]
    9b0c:	ldr	x9, [x9, #40]
    9b10:	blr	x9
    9b14:	ldr	x8, [sp, #40]
    9b18:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    9b1c:	cmp	x8, x9
    9b20:	b.eq	9d9c <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x2bc>  // b.none
    9b24:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    9b28:	add	x1, x1, #0x0
    9b2c:	add	x0, sp, #0x20
    9b30:	mov	w2, #0x1                   	// #1
    9b34:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    9b38:	add	x8, sp, #0x40
    9b3c:	add	x22, x8, #0x10
    9b40:	str	x22, [sp, #64]
    9b44:	mov	x8, x0
    9b48:	ldr	x9, [x8], #16
    9b4c:	cmp	x9, x8
    9b50:	b.eq	9b64 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x84>  // b.none
    9b54:	str	x9, [sp, #64]
    9b58:	ldr	x9, [x0, #16]
    9b5c:	str	x9, [sp, #80]
    9b60:	b	9b6c <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x8c>
    9b64:	ldr	q0, [x9]
    9b68:	str	q0, [x22]
    9b6c:	ldr	x9, [x0, #8]
    9b70:	sub	x10, x29, #0x20
    9b74:	str	x9, [sp, #72]
    9b78:	stp	x8, xzr, [x0]
    9b7c:	strb	wzr, [x0, #16]
    9b80:	ldr	w9, [x20, #32]
    9b84:	add	x8, x10, #0x15
    9b88:	cbz	w9, 9bc0 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0xe0>
    9b8c:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
    9b90:	movk	x10, #0xcccd
    9b94:	mov	w11, #0xa                   	// #10
    9b98:	mov	x20, x8
    9b9c:	umulh	x12, x9, x10
    9ba0:	lsr	x12, x12, #3
    9ba4:	msub	w13, w12, w11, w9
    9ba8:	orr	w13, w13, #0x30
    9bac:	cmp	x9, #0x9
    9bb0:	strb	w13, [x20, #-1]!
    9bb4:	mov	x9, x12
    9bb8:	b.hi	9b9c <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0xbc>  // b.pmore
    9bbc:	b	9bcc <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0xec>
    9bc0:	mov	w9, #0x30                  	// #48
    9bc4:	add	x20, x10, #0x14
    9bc8:	sturb	w9, [x29, #-12]
    9bcc:	mov	x9, sp
    9bd0:	sub	x21, x8, x20
    9bd4:	add	x23, x9, #0x10
    9bd8:	cmp	x21, #0x10
    9bdc:	mov	x0, x23
    9be0:	str	x23, [sp]
    9be4:	str	x21, [x29, #24]
    9be8:	b.cc	9c08 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x128>  // b.lo, b.ul, b.last
    9bec:	mov	x0, sp
    9bf0:	add	x1, x29, #0x18
    9bf4:	mov	x2, xzr
    9bf8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    9bfc:	ldr	x8, [x29, #24]
    9c00:	str	x0, [sp]
    9c04:	str	x8, [sp, #16]
    9c08:	cbz	x21, 9c2c <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x14c>
    9c0c:	cmp	x21, #0x1
    9c10:	b.ne	9c20 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x140>  // b.any
    9c14:	ldrb	w8, [x20]
    9c18:	strb	w8, [x0]
    9c1c:	b	9c2c <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x14c>
    9c20:	mov	x1, x20
    9c24:	mov	x2, x21
    9c28:	bl	0 <memcpy>
    9c2c:	ldr	x8, [x29, #24]
    9c30:	ldr	x9, [sp]
    9c34:	mov	w10, #0xf                   	// #15
    9c38:	str	x8, [sp, #8]
    9c3c:	strb	wzr, [x9, x8]
    9c40:	ldp	x3, x4, [sp, #64]
    9c44:	ldp	x1, x2, [sp]
    9c48:	ldr	x9, [sp, #80]
    9c4c:	cmp	x3, x22
    9c50:	add	x8, x2, x4
    9c54:	csel	x9, x10, x9, eq  // eq = none
    9c58:	cmp	x8, x9
    9c5c:	b.ls	9c78 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x198>  // b.plast
    9c60:	ldr	x9, [sp, #16]
    9c64:	cmp	x1, x23
    9c68:	mov	w10, #0xf                   	// #15
    9c6c:	csel	x9, x10, x9, eq  // eq = none
    9c70:	cmp	x8, x9
    9c74:	b.ls	9c84 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x1a4>  // b.plast
    9c78:	add	x0, sp, #0x40
    9c7c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    9c80:	b	9c94 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x1b4>
    9c84:	mov	x0, sp
    9c88:	mov	x1, xzr
    9c8c:	mov	x2, xzr
    9c90:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    9c94:	sub	x8, x29, #0x20
    9c98:	add	x20, x8, #0x10
    9c9c:	stur	x20, [x29, #-32]
    9ca0:	mov	x8, x0
    9ca4:	ldr	x9, [x8], #16
    9ca8:	cmp	x9, x8
    9cac:	b.eq	9cc0 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x1e0>  // b.none
    9cb0:	stur	x9, [x29, #-32]
    9cb4:	ldr	x9, [x0, #16]
    9cb8:	stur	x9, [x29, #-16]
    9cbc:	b	9cc8 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x1e8>
    9cc0:	ldr	q0, [x9]
    9cc4:	str	q0, [x20]
    9cc8:	ldr	x9, [x0, #8]
    9ccc:	stur	x9, [x29, #-24]
    9cd0:	stp	x8, xzr, [x0]
    9cd4:	strb	wzr, [x0, #16]
    9cd8:	ldur	x8, [x29, #-24]
    9cdc:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    9ce0:	cmp	x8, x9
    9ce4:	b.eq	9d9c <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x2bc>  // b.none
    9ce8:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    9cec:	add	x1, x1, #0x0
    9cf0:	sub	x0, x29, #0x20
    9cf4:	mov	w2, #0x1                   	// #1
    9cf8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    9cfc:	add	x9, x19, #0x10
    9d00:	str	x9, [x19]
    9d04:	mov	x8, x0
    9d08:	ldr	x10, [x8], #16
    9d0c:	cmp	x10, x8
    9d10:	b.eq	9d24 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x244>  // b.none
    9d14:	str	x10, [x19]
    9d18:	ldr	x9, [x0, #16]
    9d1c:	str	x9, [x19, #16]
    9d20:	b	9d2c <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x24c>
    9d24:	ldr	q0, [x10]
    9d28:	str	q0, [x9]
    9d2c:	ldr	x9, [x0, #8]
    9d30:	str	x9, [x19, #8]
    9d34:	stp	x8, xzr, [x0]
    9d38:	strb	wzr, [x0, #16]
    9d3c:	ldur	x0, [x29, #-32]
    9d40:	cmp	x0, x20
    9d44:	b.eq	9d4c <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x26c>  // b.none
    9d48:	bl	0 <_ZdlPv>
    9d4c:	ldr	x0, [sp]
    9d50:	cmp	x0, x23
    9d54:	b.eq	9d5c <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x27c>  // b.none
    9d58:	bl	0 <_ZdlPv>
    9d5c:	ldr	x0, [sp, #64]
    9d60:	cmp	x0, x22
    9d64:	b.eq	9d6c <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x28c>  // b.none
    9d68:	bl	0 <_ZdlPv>
    9d6c:	ldr	x0, [sp, #32]
    9d70:	add	x8, sp, #0x20
    9d74:	add	x8, x8, #0x10
    9d78:	cmp	x0, x8
    9d7c:	b.eq	9d84 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x2a4>  // b.none
    9d80:	bl	0 <_ZdlPv>
    9d84:	ldp	x20, x19, [sp, #176]
    9d88:	ldp	x22, x21, [sp, #160]
    9d8c:	ldr	x23, [sp, #144]
    9d90:	ldp	x29, x30, [sp, #128]
    9d94:	add	sp, sp, #0xc0
    9d98:	ret
    9d9c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    9da0:	add	x0, x0, #0x0
    9da4:	bl	0 <_ZSt20__throw_length_errorPKc>

0000000000009da8 <_ZNK4llvm18VarListElementInit17resolveReferencesERNS_8ResolverE>:
    9da8:	stp	x29, x30, [sp, #-32]!
    9dac:	str	x19, [sp, #16]
    9db0:	mov	x29, sp
    9db4:	mov	x19, x0
    9db8:	ldr	x0, [x0, #24]
    9dbc:	ldr	x8, [x0]
    9dc0:	ldr	x8, [x8, #96]
    9dc4:	blr	x8
    9dc8:	cbz	x0, 9e2c <_ZNK4llvm18VarListElementInit17resolveReferencesERNS_8ResolverE+0x84>
    9dcc:	ldrb	w8, [x0, #8]
    9dd0:	cmp	w8, #0x9
    9dd4:	b.ne	9df4 <_ZNK4llvm18VarListElementInit17resolveReferencesERNS_8ResolverE+0x4c>  // b.any
    9dd8:	ldr	w9, [x19, #32]
    9ddc:	ldr	w10, [x0, #32]
    9de0:	cmp	w10, w9
    9de4:	b.ls	9df4 <_ZNK4llvm18VarListElementInit17resolveReferencesERNS_8ResolverE+0x4c>  // b.plast
    9de8:	add	x8, x0, x9, lsl #3
    9dec:	ldr	x19, [x8, #40]
    9df0:	b	9e1c <_ZNK4llvm18VarListElementInit17resolveReferencesERNS_8ResolverE+0x74>
    9df4:	sub	w8, w8, #0x1
    9df8:	cmp	w8, #0x16
    9dfc:	b.hi	9e1c <_ZNK4llvm18VarListElementInit17resolveReferencesERNS_8ResolverE+0x74>  // b.pmore
    9e00:	ldr	x8, [x19, #24]
    9e04:	cmp	x0, x8
    9e08:	b.eq	9e1c <_ZNK4llvm18VarListElementInit17resolveReferencesERNS_8ResolverE+0x74>  // b.none
    9e0c:	ldr	w1, [x19, #32]
    9e10:	ldr	x19, [sp, #16]
    9e14:	ldp	x29, x30, [sp], #32
    9e18:	b	94e4 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj>
    9e1c:	mov	x0, x19
    9e20:	ldr	x19, [sp, #16]
    9e24:	ldp	x29, x30, [sp], #32
    9e28:	ret
    9e2c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    9e30:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    9e34:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    9e38:	add	x0, x0, #0x0
    9e3c:	add	x1, x1, #0x0
    9e40:	add	x3, x3, #0x0
    9e44:	mov	w2, #0x69                  	// #105
    9e48:	bl	0 <__assert_fail>

0000000000009e4c <_ZNK4llvm18VarListElementInit6getBitEj>:
    9e4c:	adrp	x9, 88 <_ZN4llvm5RecTy9getListTyEv+0x1c>
    9e50:	ldr	x8, [x0, #16]
    9e54:	ldr	x9, [x9]
    9e58:	cmp	x8, x9
    9e5c:	b.eq	9e64 <_ZNK4llvm18VarListElementInit6getBitEj+0x18>  // b.none
    9e60:	b	3664 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj>
    9e64:	ret

0000000000009e68 <_ZN4llvm7DefInitC1EPNS_6RecordE>:
    9e68:	sub	sp, sp, #0x60
    9e6c:	stp	x29, x30, [sp, #48]
    9e70:	str	x21, [sp, #64]
    9e74:	stp	x20, x19, [sp, #80]
    9e78:	add	x29, sp, #0x30
    9e7c:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    9e80:	ldr	d0, [x8]
    9e84:	mov	x19, x1
    9e88:	mov	x8, sp
    9e8c:	mov	x20, x0
    9e90:	add	x21, x8, #0x10
    9e94:	mov	x1, sp
    9e98:	mov	x0, x19
    9e9c:	str	x21, [sp]
    9ea0:	str	d0, [sp, #8]
    9ea4:	bl	c9e0 <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE>
    9ea8:	ldr	x0, [sp]
    9eac:	ldr	w1, [sp, #8]
    9eb0:	bl	7e8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE>
    9eb4:	ldr	x8, [sp]
    9eb8:	cmp	x8, x21
    9ebc:	mov	x21, x0
    9ec0:	b.eq	9ecc <_ZN4llvm7DefInitC1EPNS_6RecordE+0x64>  // b.none
    9ec4:	mov	x0, x8
    9ec8:	bl	0 <free>
    9ecc:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    9ed0:	ldr	x9, [x9]
    9ed4:	mov	w8, #0x6                   	// #6
    9ed8:	strh	w8, [x20, #8]
    9edc:	stp	x21, x19, [x20, #16]
    9ee0:	add	x8, x9, #0x10
    9ee4:	str	x8, [x20]
    9ee8:	ldp	x20, x19, [sp, #80]
    9eec:	ldr	x21, [sp, #64]
    9ef0:	ldp	x29, x30, [sp, #48]
    9ef4:	add	sp, sp, #0x60
    9ef8:	ret

0000000000009efc <_ZN4llvm6Record7getTypeEv>:
    9efc:	sub	sp, sp, #0x50
    9f00:	stp	x29, x30, [sp, #48]
    9f04:	str	x19, [sp, #64]
    9f08:	add	x29, sp, #0x30
    9f0c:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    9f10:	ldr	d0, [x8]
    9f14:	mov	x8, sp
    9f18:	add	x19, x8, #0x10
    9f1c:	mov	x1, sp
    9f20:	str	x19, [sp]
    9f24:	str	d0, [sp, #8]
    9f28:	bl	c9e0 <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE>
    9f2c:	ldr	x0, [sp]
    9f30:	ldr	w1, [sp, #8]
    9f34:	bl	7e8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE>
    9f38:	ldr	x8, [sp]
    9f3c:	cmp	x8, x19
    9f40:	mov	x19, x0
    9f44:	b.eq	9f50 <_ZN4llvm6Record7getTypeEv+0x54>  // b.none
    9f48:	mov	x0, x8
    9f4c:	bl	0 <free>
    9f50:	mov	x0, x19
    9f54:	ldr	x19, [sp, #64]
    9f58:	ldp	x29, x30, [sp, #48]
    9f5c:	add	sp, sp, #0x50
    9f60:	ret

0000000000009f64 <_ZN4llvm6Record10getDefInitEv>:
    9f64:	sub	sp, sp, #0x60
    9f68:	stp	x29, x30, [sp, #48]
    9f6c:	str	x21, [sp, #64]
    9f70:	stp	x20, x19, [sp, #80]
    9f74:	add	x29, sp, #0x30
    9f78:	ldr	x20, [x0, #112]
    9f7c:	cbnz	x20, a004 <_ZN4llvm6Record10getDefInitEv+0xa0>
    9f80:	mov	x19, x0
    9f84:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    9f88:	add	x0, x0, #0x0
    9f8c:	mov	w1, #0x20                  	// #32
    9f90:	mov	w2, #0x4                   	// #4
    9f94:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    9f98:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    9f9c:	ldr	d0, [x8]
    9fa0:	mov	x8, sp
    9fa4:	mov	x20, x0
    9fa8:	add	x21, x8, #0x10
    9fac:	mov	x1, sp
    9fb0:	mov	x0, x19
    9fb4:	str	x21, [sp]
    9fb8:	str	d0, [sp, #8]
    9fbc:	bl	c9e0 <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE>
    9fc0:	ldr	x0, [sp]
    9fc4:	ldr	w1, [sp, #8]
    9fc8:	bl	7e8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE>
    9fcc:	ldr	x8, [sp]
    9fd0:	cmp	x8, x21
    9fd4:	mov	x21, x0
    9fd8:	b.eq	9fe4 <_ZN4llvm6Record10getDefInitEv+0x80>  // b.none
    9fdc:	mov	x0, x8
    9fe0:	bl	0 <free>
    9fe4:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    9fe8:	ldr	x9, [x9]
    9fec:	mov	w8, #0x6                   	// #6
    9ff0:	strh	w8, [x20, #8]
    9ff4:	stp	x21, x19, [x20, #16]
    9ff8:	add	x8, x9, #0x10
    9ffc:	str	x8, [x20]
    a000:	str	x20, [x19, #112]
    a004:	mov	x0, x20
    a008:	ldp	x20, x19, [sp, #80]
    a00c:	ldr	x21, [sp, #64]
    a010:	ldp	x29, x30, [sp, #48]
    a014:	add	sp, sp, #0x60
    a018:	ret

000000000000a01c <_ZNK4llvm7DefInit20convertInitializerToEPNS_5RecTyE>:
    a01c:	stp	x29, x30, [sp, #-32]!
    a020:	str	x19, [sp, #16]
    a024:	mov	x29, sp
    a028:	cbz	x1, a064 <_ZNK4llvm7DefInit20convertInitializerToEPNS_5RecTyE+0x48>
    a02c:	ldr	w8, [x1, #8]
    a030:	cmp	w8, #0x7
    a034:	b.ne	a050 <_ZNK4llvm7DefInit20convertInitializerToEPNS_5RecTyE+0x34>  // b.any
    a038:	mov	x19, x0
    a03c:	ldr	x0, [x0, #16]
    a040:	ldr	x8, [x0]
    a044:	ldr	x8, [x8, #24]
    a048:	blr	x8
    a04c:	tbnz	w0, #0, a054 <_ZNK4llvm7DefInit20convertInitializerToEPNS_5RecTyE+0x38>
    a050:	mov	x19, xzr
    a054:	mov	x0, x19
    a058:	ldr	x19, [sp, #16]
    a05c:	ldp	x29, x30, [sp], #32
    a060:	ret
    a064:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    a068:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    a06c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    a070:	add	x0, x0, #0x0
    a074:	add	x1, x1, #0x0
    a078:	add	x3, x3, #0x0
    a07c:	mov	w2, #0x69                  	// #105
    a080:	bl	0 <__assert_fail>

000000000000a084 <_ZNK4llvm7DefInit12getFieldTypeEPNS_10StringInitE>:
    a084:	ldr	x8, [x0, #24]
    a088:	ldr	w9, [x8, #80]
    a08c:	cbz	w9, a0cc <_ZNK4llvm7DefInit12getFieldTypeEPNS_10StringInitE+0x48>
    a090:	ldr	x8, [x8, #72]
    a094:	add	x9, x9, x9, lsl #1
    a098:	lsl	x9, x9, #3
    a09c:	mov	x10, x8
    a0a0:	ldr	x11, [x10], #24
    a0a4:	cmp	x11, x1
    a0a8:	b.eq	a0bc <_ZNK4llvm7DefInit12getFieldTypeEPNS_10StringInitE+0x38>  // b.none
    a0ac:	subs	x9, x9, #0x18
    a0b0:	mov	x8, x10
    a0b4:	b.ne	a0a0 <_ZNK4llvm7DefInit12getFieldTypeEPNS_10StringInitE+0x1c>  // b.any
    a0b8:	b	a0cc <_ZNK4llvm7DefInit12getFieldTypeEPNS_10StringInitE+0x48>
    a0bc:	cbz	x8, a0cc <_ZNK4llvm7DefInit12getFieldTypeEPNS_10StringInitE+0x48>
    a0c0:	ldr	x8, [x8, #8]
    a0c4:	and	x0, x8, #0xfffffffffffffff8
    a0c8:	ret
    a0cc:	mov	x0, xzr
    a0d0:	ret

000000000000a0d4 <_ZNK4llvm7DefInit11getAsStringB5cxx11Ev>:
    a0d4:	stp	x29, x30, [sp, #-48]!
    a0d8:	str	x21, [sp, #16]
    a0dc:	stp	x20, x19, [sp, #32]
    a0e0:	mov	x29, sp
    a0e4:	ldr	x9, [x0, #24]
    a0e8:	ldr	x9, [x9]
    a0ec:	cbz	x9, a188 <_ZNK4llvm7DefInit11getAsStringB5cxx11Ev+0xb4>
    a0f0:	mov	x19, x8
    a0f4:	ldrb	w8, [x9, #8]
    a0f8:	cmp	w8, #0x12
    a0fc:	b.ne	a1a8 <_ZNK4llvm7DefInit11getAsStringB5cxx11Ev+0xd4>  // b.any
    a100:	ldp	x20, x21, [x9, #24]
    a104:	add	x0, x19, #0x10
    a108:	str	x0, [x19]
    a10c:	cbz	x20, a150 <_ZNK4llvm7DefInit11getAsStringB5cxx11Ev+0x7c>
    a110:	cmp	x21, #0x10
    a114:	str	x21, [x29, #24]
    a118:	b.cc	a138 <_ZNK4llvm7DefInit11getAsStringB5cxx11Ev+0x64>  // b.lo, b.ul, b.last
    a11c:	add	x1, x29, #0x18
    a120:	mov	x0, x19
    a124:	mov	x2, xzr
    a128:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    a12c:	ldr	x8, [x29, #24]
    a130:	str	x0, [x19]
    a134:	str	x8, [x19, #16]
    a138:	cbz	x21, a168 <_ZNK4llvm7DefInit11getAsStringB5cxx11Ev+0x94>
    a13c:	cmp	x21, #0x1
    a140:	b.ne	a15c <_ZNK4llvm7DefInit11getAsStringB5cxx11Ev+0x88>  // b.any
    a144:	ldrb	w8, [x20]
    a148:	strb	w8, [x0]
    a14c:	b	a168 <_ZNK4llvm7DefInit11getAsStringB5cxx11Ev+0x94>
    a150:	str	xzr, [x19, #8]
    a154:	strb	wzr, [x19, #16]
    a158:	b	a178 <_ZNK4llvm7DefInit11getAsStringB5cxx11Ev+0xa4>
    a15c:	mov	x1, x20
    a160:	mov	x2, x21
    a164:	bl	0 <memcpy>
    a168:	ldr	x8, [x29, #24]
    a16c:	ldr	x9, [x19]
    a170:	str	x8, [x19, #8]
    a174:	strb	wzr, [x9, x8]
    a178:	ldp	x20, x19, [sp, #32]
    a17c:	ldr	x21, [sp, #16]
    a180:	ldp	x29, x30, [sp], #48
    a184:	ret
    a188:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    a18c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    a190:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    a194:	add	x0, x0, #0x0
    a198:	add	x1, x1, #0x0
    a19c:	add	x3, x3, #0x0
    a1a0:	mov	w2, #0x69                  	// #105
    a1a4:	bl	0 <__assert_fail>
    a1a8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    a1ac:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    a1b0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    a1b4:	add	x0, x0, #0x0
    a1b8:	add	x1, x1, #0x0
    a1bc:	add	x3, x3, #0x0
    a1c0:	mov	w2, #0x108                 	// #264
    a1c4:	bl	0 <__assert_fail>

000000000000a1c8 <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE>:
    a1c8:	sub	sp, sp, #0xe0
    a1cc:	stp	x29, x30, [sp, #160]
    a1d0:	stp	x24, x23, [sp, #176]
    a1d4:	stp	x22, x21, [sp, #192]
    a1d8:	stp	x20, x19, [sp, #208]
    a1dc:	add	x29, sp, #0xa0
    a1e0:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    a1e4:	add	x8, x8, #0x0
    a1e8:	ldarb	w8, [x8]
    a1ec:	mov	x20, x2
    a1f0:	mov	x19, x1
    a1f4:	mov	x21, x0
    a1f8:	tbz	w8, #0, a32c <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE+0x164>
    a1fc:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    a200:	ldr	d0, [x8]
    a204:	add	x8, sp, #0x8
    a208:	add	x8, x8, #0x10
    a20c:	add	x0, sp, #0x8
    a210:	mov	x1, x20
    a214:	str	x8, [sp, #8]
    a218:	str	d0, [sp, #16]
    a21c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
    a220:	add	x0, sp, #0x8
    a224:	mov	x1, x21
    a228:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    a22c:	lsl	x22, x20, #3
    a230:	cbz	x20, a250 <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE+0x88>
    a234:	mov	x23, x22
    a238:	mov	x24, x19
    a23c:	ldr	x1, [x24], #8
    a240:	add	x0, sp, #0x8
    a244:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    a248:	subs	x23, x23, #0x8
    a24c:	b.ne	a23c <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE+0x74>  // b.any
    a250:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    a254:	add	x0, x0, #0x0
    a258:	add	x1, sp, #0x8
    a25c:	mov	x2, sp
    a260:	str	xzr, [sp]
    a264:	add	x23, sp, #0x8
    a268:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    a26c:	cbz	x0, a278 <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE+0xb0>
    a270:	sub	x22, x0, #0x18
    a274:	b	a2fc <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE+0x134>
    a278:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    a27c:	add	x1, x22, #0x38
    a280:	add	x0, x0, #0x0
    a284:	mov	w2, #0x3                   	// #3
    a288:	add	x24, x19, x20, lsl #3
    a28c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    a290:	mov	x22, x0
    a294:	sub	x0, x29, #0x8
    a298:	mov	w1, #0x1                   	// #1
    a29c:	stur	x21, [x29, #-8]
    a2a0:	bl	7e8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE>
    a2a4:	str	x0, [x22, #16]
    a2a8:	adrp	x9, c58 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x470>
    a2ac:	ldr	x9, [x9]
    a2b0:	ldur	x10, [x29, #-8]
    a2b4:	mov	w8, #0x16                  	// #22
    a2b8:	mov	x21, x22
    a2bc:	subs	x2, x24, x19
    a2c0:	strh	w8, [x22, #8]
    a2c4:	str	xzr, [x21, #24]!
    a2c8:	add	x8, x9, #0x10
    a2cc:	str	x8, [x22]
    a2d0:	stp	x10, xzr, [x22, #32]
    a2d4:	str	w20, [x22, #48]
    a2d8:	b.eq	a2e8 <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE+0x120>  // b.none
    a2dc:	add	x0, x22, #0x38
    a2e0:	mov	x1, x19
    a2e4:	bl	0 <memmove>
    a2e8:	ldr	x2, [sp]
    a2ec:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    a2f0:	add	x0, x0, #0x0
    a2f4:	mov	x1, x21
    a2f8:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    a2fc:	ldr	x0, [sp, #8]
    a300:	add	x8, x23, #0x10
    a304:	cmp	x0, x8
    a308:	b.eq	a310 <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE+0x148>  // b.none
    a30c:	bl	0 <free>
    a310:	mov	x0, x22
    a314:	ldp	x20, x19, [sp, #208]
    a318:	ldp	x22, x21, [sp, #192]
    a31c:	ldp	x24, x23, [sp, #176]
    a320:	ldp	x29, x30, [sp, #160]
    a324:	add	sp, sp, #0xe0
    a328:	ret
    a32c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    a330:	add	x0, x0, #0x0
    a334:	bl	0 <__cxa_guard_acquire>
    a338:	cbz	w0, a1fc <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE+0x34>
    a33c:	adrp	x22, 0 <_ZNK4llvm5RecTy4dumpEv>
    a340:	add	x22, x22, #0x0
    a344:	mov	w1, #0x6                   	// #6
    a348:	mov	x0, x22
    a34c:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    a350:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    a354:	ldr	x8, [x8]
    a358:	adrp	x0, 0 <_ZN4llvm14FoldingSetBaseD2Ev>
    a35c:	adrp	x2, 0 <__dso_handle>
    a360:	add	x2, x2, #0x0
    a364:	add	x8, x8, #0x10
    a368:	str	x8, [x22]
    a36c:	ldr	x0, [x0]
    a370:	mov	x1, x22
    a374:	bl	0 <__cxa_atexit>
    a378:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    a37c:	add	x0, x0, #0x0
    a380:	bl	0 <__cxa_guard_release>
    a384:	b	a1fc <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE+0x34>

000000000000a388 <_ZNK4llvm10VarDefInit7ProfileERNS_16FoldingSetNodeIDE>:
    a388:	stp	x29, x30, [sp, #-48]!
    a38c:	stp	x22, x21, [sp, #16]
    a390:	stp	x20, x19, [sp, #32]
    a394:	mov	x29, sp
    a398:	ldr	w20, [x0, #48]
    a39c:	ldr	x22, [x0, #32]
    a3a0:	mov	x21, x0
    a3a4:	mov	x19, x1
    a3a8:	mov	x0, x1
    a3ac:	mov	x1, x20
    a3b0:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
    a3b4:	mov	x0, x19
    a3b8:	mov	x1, x22
    a3bc:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    a3c0:	cbz	w20, a3e0 <_ZNK4llvm10VarDefInit7ProfileERNS_16FoldingSetNodeIDE+0x58>
    a3c4:	add	x21, x21, #0x38
    a3c8:	lsl	x20, x20, #3
    a3cc:	ldr	x1, [x21], #8
    a3d0:	mov	x0, x19
    a3d4:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    a3d8:	subs	x20, x20, #0x8
    a3dc:	b.ne	a3cc <_ZNK4llvm10VarDefInit7ProfileERNS_16FoldingSetNodeIDE+0x44>  // b.any
    a3e0:	ldp	x20, x19, [sp, #32]
    a3e4:	ldp	x22, x21, [sp, #16]
    a3e8:	ldp	x29, x30, [sp], #48
    a3ec:	ret

000000000000a3f0 <_ZN4llvm10VarDefInit11instantiateEv>:
    a3f0:	sub	sp, sp, #0x120
    a3f4:	str	d8, [sp, #176]
    a3f8:	stp	x29, x30, [sp, #192]
    a3fc:	stp	x28, x27, [sp, #208]
    a400:	stp	x26, x25, [sp, #224]
    a404:	stp	x24, x23, [sp, #240]
    a408:	stp	x22, x21, [sp, #256]
    a40c:	stp	x20, x19, [sp, #272]
    a410:	add	x29, sp, #0xb0
    a414:	mov	x19, x0
    a418:	ldr	x0, [x0, #40]
    a41c:	cbnz	x0, a818 <_ZN4llvm10VarDefInit11instantiateEv+0x428>
    a420:	ldr	x8, [x19, #32]
    a424:	ldr	x21, [x8, #104]
    a428:	mov	x0, x21
    a42c:	bl	a8d4 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv>
    a430:	ldr	x8, [x19, #32]
    a434:	mov	x24, x0
    a438:	mov	w0, #0x80                  	// #128
    a43c:	ldr	x22, [x8, #8]
    a440:	ldr	w23, [x8, #16]
    a444:	bl	0 <_Znwm>
    a448:	mov	w5, #0x1                   	// #1
    a44c:	mov	x1, x24
    a450:	mov	x2, x22
    a454:	mov	x3, x23
    a458:	mov	x4, x21
    a45c:	mov	w6, wzr
    a460:	mov	x20, x0
    a464:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    a468:	ldr	x8, [x19, #32]
    a46c:	ldr	w9, [x8, #80]
    a470:	cbz	w9, a538 <_ZN4llvm10VarDefInit11instantiateEv+0x148>
    a474:	ldr	x24, [x8, #72]
    a478:	ldr	w10, [x20, #80]
    a47c:	mov	w8, #0x18                  	// #24
    a480:	add	x22, x20, #0x48
    a484:	add	x23, x20, #0x58
    a488:	madd	x25, x9, x8, x24
    a48c:	mov	w26, #0x18                  	// #24
    a490:	ldr	x9, [x22]
    a494:	mov	w8, w10
    a498:	cbz	w10, a4d0 <_ZN4llvm10VarDefInit11instantiateEv+0xe0>
    a49c:	ldr	x10, [x24]
    a4a0:	add	x11, x8, x8, lsl #1
    a4a4:	lsl	x11, x11, #3
    a4a8:	mov	x13, x9
    a4ac:	mov	x12, x9
    a4b0:	ldr	x14, [x12], #24
    a4b4:	cmp	x14, x10
    a4b8:	b.eq	a4cc <_ZN4llvm10VarDefInit11instantiateEv+0xdc>  // b.none
    a4bc:	subs	x11, x11, #0x18
    a4c0:	mov	x13, x12
    a4c4:	b.ne	a4b0 <_ZN4llvm10VarDefInit11instantiateEv+0xc0>  // b.any
    a4c8:	b	a4d0 <_ZN4llvm10VarDefInit11instantiateEv+0xe0>
    a4cc:	cbnz	x13, a894 <_ZN4llvm10VarDefInit11instantiateEv+0x4a4>
    a4d0:	ldr	w10, [x20, #84]
    a4d4:	cmp	w8, w10
    a4d8:	b.cs	a514 <_ZN4llvm10VarDefInit11instantiateEv+0x124>  // b.hs, b.nlast
    a4dc:	ldr	x10, [x24, #16]
    a4e0:	ldr	q0, [x24]
    a4e4:	madd	x8, x8, x26, x9
    a4e8:	str	x10, [x8, #16]
    a4ec:	str	q0, [x8]
    a4f0:	ldp	w8, w9, [x20, #80]
    a4f4:	cmp	w8, w9
    a4f8:	b.cs	a854 <_ZN4llvm10VarDefInit11instantiateEv+0x464>  // b.hs, b.nlast
    a4fc:	add	x24, x24, #0x18
    a500:	add	w10, w8, #0x1
    a504:	cmp	x24, x25
    a508:	str	w10, [x20, #80]
    a50c:	b.ne	a490 <_ZN4llvm10VarDefInit11instantiateEv+0xa0>  // b.any
    a510:	b	a534 <_ZN4llvm10VarDefInit11instantiateEv+0x144>
    a514:	mov	w3, #0x18                  	// #24
    a518:	mov	x0, x22
    a51c:	mov	x1, x23
    a520:	mov	x2, xzr
    a524:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    a528:	ldr	w8, [x20, #80]
    a52c:	ldr	x9, [x20, #72]
    a530:	b	a4dc <_ZN4llvm10VarDefInit11instantiateEv+0xec>
    a534:	ldr	x8, [x19, #32]
    a538:	ldr	x24, [x8, #56]
    a53c:	ldr	w25, [x8, #64]
    a540:	strb	wzr, [sp, #24]
    a544:	adrp	x8, dd8 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x120>
    a548:	ldr	x8, [x8]
    a54c:	stp	xzr, xzr, [sp, #40]
    a550:	str	xzr, [sp, #32]
    a554:	str	wzr, [sp, #56]
    a558:	add	x8, x8, #0x10
    a55c:	stp	x8, x20, [sp, #8]
    a560:	cbz	w25, a634 <_ZN4llvm10VarDefInit11instantiateEv+0x244>
    a564:	add	x9, sp, #0x8
    a568:	mov	w8, wzr
    a56c:	add	x26, x19, #0x38
    a570:	add	x22, x9, #0x18
    a574:	mov	w27, #0x18                  	// #24
    a578:	ldr	w10, [x19, #48]
    a57c:	ldr	x9, [x24, w8, uxtw #3]
    a580:	mov	w28, w8
    a584:	cmp	w10, w8
    a588:	b.ls	a594 <_ZN4llvm10VarDefInit11instantiateEv+0x1a4>  // b.plast
    a58c:	ldr	x23, [x26, x28, lsl #3]
    a590:	b	a5a8 <_ZN4llvm10VarDefInit11instantiateEv+0x1b8>
    a594:	ldr	x8, [x20, #72]
    a598:	ldr	x10, [x8], #24
    a59c:	cmp	x10, x9
    a5a0:	b.ne	a598 <_ZN4llvm10VarDefInit11instantiateEv+0x1a8>  // b.any
    a5a4:	ldur	x23, [x8, #-8]
    a5a8:	add	x1, sp, #0x40
    a5ac:	mov	x0, x22
    a5b0:	str	x9, [sp, #64]
    a5b4:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    a5b8:	str	x23, [x0]
    a5bc:	strb	wzr, [x0, #8]
    a5c0:	ldr	w8, [x20, #80]
    a5c4:	cbz	w8, a83c <_ZN4llvm10VarDefInit11instantiateEv+0x44c>
    a5c8:	ldr	x10, [x24, x28, lsl #3]
    a5cc:	ldr	x9, [x20, #72]
    a5d0:	mov	w11, wzr
    a5d4:	umaddl	x0, w11, w27, x9
    a5d8:	ldr	x12, [x0]
    a5dc:	cmp	x12, x10
    a5e0:	b.eq	a5f4 <_ZN4llvm10VarDefInit11instantiateEv+0x204>  // b.none
    a5e4:	add	w11, w11, #0x1
    a5e8:	cmp	w8, w11
    a5ec:	b.ne	a5d4 <_ZN4llvm10VarDefInit11instantiateEv+0x1e4>  // b.any
    a5f0:	b	a83c <_ZN4llvm10VarDefInit11instantiateEv+0x44c>
    a5f4:	cmp	w8, w11
    a5f8:	b.ls	a874 <_ZN4llvm10VarDefInit11instantiateEv+0x484>  // b.plast
    a5fc:	madd	x9, x8, x27, x9
    a600:	add	x1, x0, #0x18
    a604:	subs	x2, x9, x1
    a608:	b.eq	a614 <_ZN4llvm10VarDefInit11instantiateEv+0x224>  // b.none
    a60c:	bl	0 <memmove>
    a610:	ldr	w8, [x20, #80]
    a614:	ldr	w10, [x20, #84]
    a618:	sub	x9, x8, #0x1
    a61c:	cmp	x9, x10
    a620:	b.hi	a854 <_ZN4llvm10VarDefInit11instantiateEv+0x464>  // b.pmore
    a624:	add	w8, w28, #0x1
    a628:	cmp	w8, w25
    a62c:	str	w9, [x20, #80]
    a630:	b.ne	a578 <_ZN4llvm10VarDefInit11instantiateEv+0x188>  // b.any
    a634:	add	x1, sp, #0x8
    a638:	mov	x0, x20
    a63c:	mov	x2, xzr
    a640:	bl	aa58 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE>
    a644:	ldr	x1, [x19, #32]
    a648:	ldr	w8, [x1, #96]
    a64c:	cbz	w8, a67c <_ZN4llvm10VarDefInit11instantiateEv+0x28c>
    a650:	ldr	x22, [x1, #88]
    a654:	mov	w9, #0x18                  	// #24
    a658:	madd	x24, x8, x9, x22
    a65c:	ldp	x1, x2, [x22]
    a660:	ldr	x3, [x22, #16]
    a664:	mov	x0, x20
    a668:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    a66c:	add	x22, x22, #0x18
    a670:	cmp	x22, x24
    a674:	b.ne	a65c <_ZN4llvm10VarDefInit11instantiateEv+0x26c>  // b.any
    a678:	ldr	x1, [x19, #32]
    a67c:	ldr	w8, [x1, #16]
    a680:	cbz	w8, a8b4 <_ZN4llvm10VarDefInit11instantiateEv+0x4c4>
    a684:	ldr	x9, [x1, #8]
    a688:	mov	x0, x20
    a68c:	add	x8, x9, x8, lsl #3
    a690:	ldur	x2, [x8, #-8]
    a694:	mov	x3, x2
    a698:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    a69c:	adrp	x8, e08 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x150>
    a6a0:	ldr	x8, [x8]
    a6a4:	adrp	x10, 0 <_ZNK4llvm5RecTy4dumpEv>
    a6a8:	ldr	d8, [x10]
    a6ac:	add	x9, sp, #0x40
    a6b0:	mov	w10, #0x1                   	// #1
    a6b4:	add	x22, x8, #0x10
    a6b8:	add	x23, x9, #0x48
    a6bc:	add	x1, sp, #0x40
    a6c0:	mov	x0, x20
    a6c4:	mov	x2, xzr
    a6c8:	stp	xzr, xzr, [sp, #96]
    a6cc:	str	xzr, [sp, #88]
    a6d0:	str	wzr, [sp, #112]
    a6d4:	stp	x22, x20, [sp, #64]
    a6d8:	str	x23, [sp, #120]
    a6dc:	str	d8, [sp, #128]
    a6e0:	strb	w10, [sp, #80]
    a6e4:	bl	aa58 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE>
    a6e8:	ldr	x0, [sp, #120]
    a6ec:	str	x22, [sp, #64]
    a6f0:	cmp	x0, x23
    a6f4:	b.eq	a6fc <_ZN4llvm10VarDefInit11instantiateEv+0x30c>  // b.none
    a6f8:	bl	0 <free>
    a6fc:	ldr	x0, [sp, #96]
    a700:	bl	0 <_ZdlPv>
    a704:	add	x1, x29, #0x8
    a708:	mov	x0, x21
    a70c:	str	x20, [x29, #8]
    a710:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    a714:	ldr	x21, [x29, #8]
    a718:	cbz	x21, a774 <_ZN4llvm10VarDefInit11instantiateEv+0x384>
    a71c:	ldr	x0, [x21, #88]
    a720:	add	x8, x21, #0x68
    a724:	cmp	x0, x8
    a728:	b.eq	a730 <_ZN4llvm10VarDefInit11instantiateEv+0x340>  // b.none
    a72c:	bl	0 <free>
    a730:	ldr	x0, [x21, #72]
    a734:	add	x8, x21, #0x58
    a738:	cmp	x0, x8
    a73c:	b.eq	a744 <_ZN4llvm10VarDefInit11instantiateEv+0x354>  // b.none
    a740:	bl	0 <free>
    a744:	ldr	x0, [x21, #56]
    a748:	add	x8, x21, #0x48
    a74c:	cmp	x0, x8
    a750:	b.eq	a758 <_ZN4llvm10VarDefInit11instantiateEv+0x368>  // b.none
    a754:	bl	0 <free>
    a758:	ldr	x0, [x21, #8]
    a75c:	add	x8, x21, #0x18
    a760:	cmp	x0, x8
    a764:	b.eq	a76c <_ZN4llvm10VarDefInit11instantiateEv+0x37c>  // b.none
    a768:	bl	0 <free>
    a76c:	mov	x0, x21
    a770:	bl	0 <_ZdlPv>
    a774:	ldr	x21, [x20, #112]
    a778:	str	xzr, [x29, #8]
    a77c:	cbnz	x21, a7f8 <_ZN4llvm10VarDefInit11instantiateEv+0x408>
    a780:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    a784:	add	x0, x0, #0x0
    a788:	mov	w1, #0x20                  	// #32
    a78c:	mov	w2, #0x4                   	// #4
    a790:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    a794:	add	x8, sp, #0x40
    a798:	mov	x21, x0
    a79c:	add	x22, x8, #0x10
    a7a0:	add	x1, sp, #0x40
    a7a4:	mov	x0, x20
    a7a8:	str	x22, [sp, #64]
    a7ac:	str	d8, [sp, #72]
    a7b0:	bl	c9e0 <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE>
    a7b4:	ldr	x0, [sp, #64]
    a7b8:	ldr	w1, [sp, #72]
    a7bc:	bl	7e8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE>
    a7c0:	ldr	x8, [sp, #64]
    a7c4:	cmp	x8, x22
    a7c8:	mov	x22, x0
    a7cc:	b.eq	a7d8 <_ZN4llvm10VarDefInit11instantiateEv+0x3e8>  // b.none
    a7d0:	mov	x0, x8
    a7d4:	bl	0 <free>
    a7d8:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    a7dc:	ldr	x9, [x9]
    a7e0:	mov	w8, #0x6                   	// #6
    a7e4:	strh	w8, [x21, #8]
    a7e8:	stp	x22, x20, [x21, #16]
    a7ec:	add	x8, x9, #0x10
    a7f0:	str	x8, [x21]
    a7f4:	str	x21, [x20, #112]
    a7f8:	str	x21, [x19, #40]
    a7fc:	adrp	x8, dd8 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x120>
    a800:	ldr	x0, [sp, #40]
    a804:	ldr	x8, [x8]
    a808:	add	x8, x8, #0x10
    a80c:	str	x8, [sp, #8]
    a810:	bl	0 <_ZdlPv>
    a814:	ldr	x0, [x19, #40]
    a818:	ldp	x20, x19, [sp, #272]
    a81c:	ldp	x22, x21, [sp, #256]
    a820:	ldp	x24, x23, [sp, #240]
    a824:	ldp	x26, x25, [sp, #224]
    a828:	ldp	x28, x27, [sp, #208]
    a82c:	ldp	x29, x30, [sp, #192]
    a830:	ldr	d8, [sp, #176]
    a834:	add	sp, sp, #0x120
    a838:	ret
    a83c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    a840:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    a844:	add	x0, x0, #0x0
    a848:	add	x1, x1, #0x0
    a84c:	mov	w2, #0x614                 	// #1556
    a850:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    a854:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    a858:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    a85c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    a860:	add	x0, x0, #0x0
    a864:	add	x1, x1, #0x0
    a868:	add	x3, x3, #0x0
    a86c:	mov	w2, #0x43                  	// #67
    a870:	bl	0 <__assert_fail>
    a874:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    a878:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    a87c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    a880:	add	x0, x0, #0x0
    a884:	add	x1, x1, #0x0
    a888:	add	x3, x3, #0x0
    a88c:	mov	w2, #0x1b7                 	// #439
    a890:	bl	0 <__assert_fail>
    a894:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    a898:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    a89c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    a8a0:	add	x0, x0, #0x0
    a8a4:	add	x1, x1, #0x0
    a8a8:	add	x3, x3, #0x0
    a8ac:	mov	w2, #0x60a                 	// #1546
    a8b0:	bl	0 <__assert_fail>
    a8b4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    a8b8:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    a8bc:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    a8c0:	add	x0, x0, #0x0
    a8c4:	add	x1, x1, #0x0
    a8c8:	add	x3, x3, #0x0
    a8cc:	mov	w2, #0xa8                  	// #168
    a8d0:	bl	0 <__assert_fail>

000000000000a8d4 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv>:
    a8d4:	sub	sp, sp, #0x70
    a8d8:	stp	x29, x30, [sp, #64]
    a8dc:	str	x21, [sp, #80]
    a8e0:	stp	x20, x19, [sp, #96]
    a8e4:	add	x29, sp, #0x40
    a8e8:	ldr	w9, [x0, #168]
    a8ec:	add	x10, sp, #0x20
    a8f0:	add	w8, w9, #0x1
    a8f4:	str	w8, [x0, #168]
    a8f8:	add	x8, x10, #0x15
    a8fc:	cbz	w9, a934 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0x60>
    a900:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
    a904:	movk	x10, #0xcccd
    a908:	mov	w11, #0xa                   	// #10
    a90c:	mov	x19, x8
    a910:	umulh	x12, x9, x10
    a914:	lsr	x12, x12, #3
    a918:	msub	w13, w12, w11, w9
    a91c:	orr	w13, w13, #0x30
    a920:	cmp	x9, #0x9
    a924:	strb	w13, [x19, #-1]!
    a928:	mov	x9, x12
    a92c:	b.hi	a910 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0x3c>  // b.pmore
    a930:	b	a940 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0x6c>
    a934:	mov	w9, #0x30                  	// #48
    a938:	add	x19, x10, #0x14
    a93c:	strb	w9, [sp, #52]
    a940:	mov	x9, sp
    a944:	sub	x20, x8, x19
    a948:	add	x21, x9, #0x10
    a94c:	cmp	x20, #0x10
    a950:	mov	x0, x21
    a954:	str	x21, [sp]
    a958:	str	x20, [x29, #24]
    a95c:	b.cc	a97c <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0xa8>  // b.lo, b.ul, b.last
    a960:	mov	x0, sp
    a964:	add	x1, x29, #0x18
    a968:	mov	x2, xzr
    a96c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    a970:	ldr	x8, [x29, #24]
    a974:	str	x0, [sp]
    a978:	str	x8, [sp, #16]
    a97c:	cbz	x20, a9a0 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0xcc>
    a980:	cmp	x20, #0x1
    a984:	b.ne	a994 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0xc0>  // b.any
    a988:	ldrb	w8, [x19]
    a98c:	strb	w8, [x0]
    a990:	b	a9a0 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0xcc>
    a994:	mov	x1, x19
    a998:	mov	x2, x20
    a99c:	bl	0 <memcpy>
    a9a0:	ldr	x8, [x29, #24]
    a9a4:	ldr	x9, [sp]
    a9a8:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    a9ac:	add	x3, x3, #0x0
    a9b0:	mov	x0, sp
    a9b4:	mov	w4, #0xa                   	// #10
    a9b8:	mov	x1, xzr
    a9bc:	mov	x2, xzr
    a9c0:	str	x8, [sp, #8]
    a9c4:	strb	wzr, [x9, x8]
    a9c8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    a9cc:	add	x8, sp, #0x20
    a9d0:	add	x19, x8, #0x10
    a9d4:	str	x19, [sp, #32]
    a9d8:	mov	x8, x0
    a9dc:	ldr	x9, [x8], #16
    a9e0:	cmp	x9, x8
    a9e4:	b.eq	a9f8 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0x124>  // b.none
    a9e8:	str	x9, [sp, #32]
    a9ec:	ldr	x9, [x0, #16]
    a9f0:	str	x9, [sp, #48]
    a9f4:	b	aa00 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0x12c>
    a9f8:	ldr	q0, [x9]
    a9fc:	str	q0, [x19]
    aa00:	ldr	x9, [x0, #8]
    aa04:	str	x9, [sp, #40]
    aa08:	stp	x8, xzr, [x0]
    aa0c:	strb	wzr, [x0, #16]
    aa10:	ldp	x0, x1, [sp, #32]
    aa14:	bl	29c4 <_ZN4llvm10StringInit3getENS_9StringRefE>
    aa18:	ldr	x8, [sp, #32]
    aa1c:	cmp	x8, x19
    aa20:	mov	x19, x0
    aa24:	b.eq	aa30 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0x15c>  // b.none
    aa28:	mov	x0, x8
    aa2c:	bl	0 <_ZdlPv>
    aa30:	ldr	x0, [sp]
    aa34:	cmp	x0, x21
    aa38:	b.eq	aa40 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0x16c>  // b.none
    aa3c:	bl	0 <_ZdlPv>
    aa40:	mov	x0, x19
    aa44:	ldp	x20, x19, [sp, #96]
    aa48:	ldr	x21, [sp, #80]
    aa4c:	ldp	x29, x30, [sp, #64]
    aa50:	add	sp, sp, #0x70
    aa54:	ret

000000000000aa58 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE>:
    aa58:	stp	x29, x30, [sp, #-80]!
    aa5c:	stp	x28, x25, [sp, #16]
    aa60:	stp	x24, x23, [sp, #32]
    aa64:	stp	x22, x21, [sp, #48]
    aa68:	stp	x20, x19, [sp, #64]
    aa6c:	mov	x29, sp
    aa70:	sub	sp, sp, #0x220
    aa74:	ldr	w8, [x0, #80]
    aa78:	mov	x21, x0
    aa7c:	mov	x22, x1
    aa80:	cbz	w8, ab10 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0xb8>
    aa84:	ldr	x20, [x21, #72]
    aa88:	add	x8, x8, x8, lsl #1
    aa8c:	mov	x23, x2
    aa90:	sub	x24, x29, #0x40
    aa94:	lsl	x25, x8, #3
    aa98:	b	aaa8 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x50>
    aa9c:	subs	x25, x25, #0x18
    aaa0:	add	x20, x20, #0x18
    aaa4:	b.eq	ab10 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0xb8>  // b.none
    aaa8:	cmp	x23, x20
    aaac:	b.eq	aa9c <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x44>  // b.none
    aab0:	ldr	x0, [x20, #16]
    aab4:	cbz	x0, aa9c <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x44>
    aab8:	ldr	x8, [x0]
    aabc:	mov	x1, x22
    aac0:	ldr	x8, [x8, #96]
    aac4:	blr	x8
    aac8:	mov	x19, x0
    aacc:	mov	x0, x20
    aad0:	mov	x1, x19
    aad4:	bl	c3a0 <_ZN4llvm9RecordVal8setValueEPNS_4InitE>
    aad8:	tbz	w0, #0, aa9c <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x44>
    aadc:	sub	x8, x29, #0x20
    aae0:	add	x23, x8, #0x10
    aae4:	stp	x23, xzr, [x29, #-32]
    aae8:	sturb	wzr, [x29, #-16]
    aaec:	cbnz	x19, ab70 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x118>
    aaf0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    aaf4:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    aaf8:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    aafc:	add	x0, x0, #0x0
    ab00:	add	x1, x1, #0x0
    ab04:	add	x3, x3, #0x0
    ab08:	mov	w2, #0x69                  	// #105
    ab0c:	bl	0 <__assert_fail>
    ab10:	ldr	x19, [x21]
    ab14:	mov	x1, x22
    ab18:	ldr	x8, [x19]
    ab1c:	mov	x0, x19
    ab20:	ldr	x8, [x8, #96]
    ab24:	blr	x8
    ab28:	cmp	x0, x19
    ab2c:	b.eq	ab54 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0xfc>  // b.none
    ab30:	str	x0, [x21]
    ab34:	mov	x0, x21
    ab38:	add	sp, sp, #0x220
    ab3c:	ldp	x20, x19, [sp, #64]
    ab40:	ldp	x22, x21, [sp, #48]
    ab44:	ldp	x24, x23, [sp, #32]
    ab48:	ldp	x28, x25, [sp, #16]
    ab4c:	ldp	x29, x30, [sp], #80
    ab50:	b	c8ac <_ZN4llvm6Record9checkNameEv>
    ab54:	add	sp, sp, #0x220
    ab58:	ldp	x20, x19, [sp, #64]
    ab5c:	ldp	x22, x21, [sp, #48]
    ab60:	ldp	x24, x23, [sp, #32]
    ab64:	ldp	x28, x25, [sp, #16]
    ab68:	ldp	x29, x30, [sp], #80
    ab6c:	ret
    ab70:	ldrb	w8, [x19, #8]
    ab74:	sub	w8, w8, #0x1
    ab78:	cmp	w8, #0x16
    ab7c:	b.ls	ace0 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x288>  // b.plast
    ab80:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    ab84:	ldr	x22, [x21, #8]
    ab88:	ldr	w21, [x21, #16]
    ab8c:	add	x8, x8, #0x0
    ab90:	stp	x8, xzr, [sp, #232]
    ab94:	sub	x8, x29, #0x20
    ab98:	mov	w23, #0x103                 	// #259
    ab9c:	mov	w24, #0x104                 	// #260
    aba0:	stp	x8, xzr, [sp, #208]
    aba4:	add	x8, sp, #0x100
    aba8:	add	x0, sp, #0xe8
    abac:	add	x1, sp, #0xd0
    abb0:	strh	w23, [sp, #248]
    abb4:	strh	w24, [sp, #224]
    abb8:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    abbc:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    abc0:	add	x8, x8, #0x0
    abc4:	stp	x8, xzr, [sp, #184]
    abc8:	add	x8, sp, #0x118
    abcc:	add	x0, sp, #0x100
    abd0:	add	x1, sp, #0xb8
    abd4:	strh	w23, [sp, #200]
    abd8:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    abdc:	ldr	x0, [x20]
    abe0:	sub	x25, x29, #0x40
    abe4:	ldr	x8, [x0]
    abe8:	ldr	x9, [x8, #48]
    abec:	sub	x8, x29, #0x40
    abf0:	blr	x9
    abf4:	sub	x8, x29, #0xf0
    abf8:	add	x0, sp, #0x118
    abfc:	add	x1, sp, #0xa0
    ac00:	strh	w24, [sp, #176]
    ac04:	stp	x25, xzr, [sp, #160]
    ac08:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    ac0c:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    ac10:	add	x8, x8, #0x0
    ac14:	stp	x8, xzr, [sp, #136]
    ac18:	sub	x8, x29, #0xd8
    ac1c:	sub	x0, x29, #0xf0
    ac20:	add	x1, sp, #0x88
    ac24:	strh	w23, [sp, #152]
    ac28:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    ac2c:	ldr	x8, [x20, #8]
    ac30:	sub	x20, x29, #0x78
    ac34:	and	x0, x8, #0xfffffffffffffff8
    ac38:	ldr	x8, [x0]
    ac3c:	ldr	x9, [x8, #16]
    ac40:	sub	x8, x29, #0x78
    ac44:	blr	x9
    ac48:	sub	x8, x29, #0xc0
    ac4c:	sub	x0, x29, #0xd8
    ac50:	add	x1, sp, #0x70
    ac54:	strh	w24, [sp, #128]
    ac58:	stp	x20, xzr, [sp, #112]
    ac5c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    ac60:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    ac64:	add	x8, x8, #0x0
    ac68:	stp	x8, xzr, [sp, #88]
    ac6c:	sub	x8, x29, #0xa8
    ac70:	sub	x0, x29, #0xc0
    ac74:	add	x1, sp, #0x58
    ac78:	strh	w23, [sp, #104]
    ac7c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    ac80:	ldr	x8, [x19]
    ac84:	mov	x0, x19
    ac88:	add	x20, sp, #0x20
    ac8c:	ldr	x9, [x8, #48]
    ac90:	add	x8, sp, #0x20
    ac94:	blr	x9
    ac98:	sub	x8, x29, #0x90
    ac9c:	sub	x0, x29, #0xa8
    aca0:	add	x1, sp, #0x40
    aca4:	strh	w24, [sp, #80]
    aca8:	stp	x20, xzr, [sp, #64]
    acac:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    acb0:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    acb4:	add	x8, x8, #0x0
    acb8:	stp	x8, xzr, [sp, #8]
    acbc:	sub	x8, x29, #0x58
    acc0:	sub	x0, x29, #0x90
    acc4:	add	x1, sp, #0x8
    acc8:	strh	w23, [sp, #24]
    accc:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    acd0:	sub	x2, x29, #0x58
    acd4:	mov	x0, x22
    acd8:	mov	x1, x21
    acdc:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    ace0:	ldr	x0, [x19, #16]
    ace4:	sub	x22, x29, #0x78
    ace8:	ldr	x8, [x0]
    acec:	ldr	x9, [x8, #16]
    acf0:	sub	x8, x29, #0x78
    acf4:	blr	x9
    acf8:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    acfc:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    ad00:	add	x8, x8, #0x0
    ad04:	mov	w9, #0x403                 	// #1027
    ad08:	sub	x10, x29, #0x58
    ad0c:	add	x11, x11, #0x0
    ad10:	mov	w12, #0x302                 	// #770
    ad14:	stp	x8, x22, [x29, #-88]
    ad18:	sturh	w9, [x29, #-72]
    ad1c:	stp	x10, x11, [sp, #32]
    ad20:	strh	w12, [sp, #48]
    ad24:	cbnz	wzr, ad34 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x2dc>
    ad28:	ldurb	w8, [x29, #-71]
    ad2c:	cmp	w8, #0x1
    ad30:	b.ne	ad54 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x2fc>  // b.any
    ad34:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    ad38:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    ad3c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    ad40:	add	x0, x0, #0x0
    ad44:	add	x1, x1, #0x0
    ad48:	add	x3, x3, #0x0
    ad4c:	mov	w2, #0xb8                  	// #184
    ad50:	bl	0 <__assert_fail>
    ad54:	sub	x8, x29, #0x40
    ad58:	add	x0, sp, #0x20
    ad5c:	sub	x22, x29, #0x40
    ad60:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    ad64:	ldur	x1, [x29, #-64]
    ad68:	add	x22, x22, #0x10
    ad6c:	cmp	x1, x22
    ad70:	b.ne	ad94 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x33c>  // b.any
    ad74:	ldur	x2, [x29, #-56]
    ad78:	cbz	x2, add0 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x378>
    ad7c:	ldur	x0, [x29, #-32]
    ad80:	cmp	x2, #0x1
    ad84:	b.ne	adcc <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x374>  // b.any
    ad88:	ldrb	w8, [x1]
    ad8c:	strb	w8, [x0]
    ad90:	b	add0 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x378>
    ad94:	ldur	x8, [x29, #-32]
    ad98:	ldur	x9, [x29, #-16]
    ad9c:	ldur	q0, [x24, #8]
    ada0:	stur	x1, [x29, #-32]
    ada4:	cmp	x8, x23
    ada8:	csel	x8, xzr, x8, eq  // eq = none
    adac:	stur	q0, [x24, #40]
    adb0:	cbnz	x8, adc0 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x368>
    adb4:	mov	x8, x22
    adb8:	stur	x22, [x29, #-64]
    adbc:	b	ade4 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x38c>
    adc0:	stur	x8, [x29, #-64]
    adc4:	stur	x9, [x29, #-48]
    adc8:	b	ade4 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x38c>
    adcc:	bl	0 <memcpy>
    add0:	ldur	x8, [x29, #-56]
    add4:	ldur	x9, [x29, #-32]
    add8:	stur	x8, [x29, #-24]
    addc:	strb	wzr, [x9, x8]
    ade0:	ldur	x8, [x29, #-64]
    ade4:	stur	xzr, [x29, #-56]
    ade8:	strb	wzr, [x8]
    adec:	ldur	x0, [x29, #-64]
    adf0:	cmp	x0, x22
    adf4:	b.eq	adfc <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x3a4>  // b.none
    adf8:	bl	0 <_ZdlPv>
    adfc:	ldur	x0, [x29, #-120]
    ae00:	sub	x8, x29, #0x78
    ae04:	add	x8, x8, #0x10
    ae08:	cmp	x0, x8
    ae0c:	b.eq	ab80 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x128>  // b.none
    ae10:	bl	0 <_ZdlPv>
    ae14:	b	ab80 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x128>

000000000000ae18 <_ZN4llvm6Record17resolveReferencesEv>:
    ae18:	sub	sp, sp, #0x90
    ae1c:	stp	x29, x30, [sp, #112]
    ae20:	stp	x20, x19, [sp, #128]
    ae24:	add	x29, sp, #0x70
    ae28:	adrp	x8, e08 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x150>
    ae2c:	ldr	x8, [x8]
    ae30:	adrp	x10, 0 <_ZNK4llvm5RecTy4dumpEv>
    ae34:	ldr	d0, [x10]
    ae38:	add	x9, sp, #0x8
    ae3c:	mov	w10, #0x1                   	// #1
    ae40:	add	x19, x8, #0x10
    ae44:	add	x20, x9, #0x48
    ae48:	add	x1, sp, #0x8
    ae4c:	mov	x2, xzr
    ae50:	stp	xzr, xzr, [sp, #40]
    ae54:	str	xzr, [sp, #32]
    ae58:	str	wzr, [sp, #56]
    ae5c:	stp	x19, x0, [sp, #8]
    ae60:	str	x20, [sp, #64]
    ae64:	str	d0, [sp, #72]
    ae68:	strb	w10, [sp, #24]
    ae6c:	bl	aa58 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE>
    ae70:	ldr	x0, [sp, #64]
    ae74:	str	x19, [sp, #8]
    ae78:	cmp	x0, x20
    ae7c:	b.eq	ae84 <_ZN4llvm6Record17resolveReferencesEv+0x6c>  // b.none
    ae80:	bl	0 <free>
    ae84:	ldr	x0, [sp, #40]
    ae88:	bl	0 <_ZdlPv>
    ae8c:	ldp	x20, x19, [sp, #128]
    ae90:	ldp	x29, x30, [sp, #112]
    ae94:	add	sp, sp, #0x90
    ae98:	ret

000000000000ae9c <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE>:
    ae9c:	sub	sp, sp, #0xd0
    aea0:	stp	x29, x30, [sp, #128]
    aea4:	str	x25, [sp, #144]
    aea8:	stp	x24, x23, [sp, #160]
    aeac:	stp	x22, x21, [sp, #176]
    aeb0:	stp	x20, x19, [sp, #192]
    aeb4:	add	x29, sp, #0x80
    aeb8:	ldr	x8, [x1, #8]
    aebc:	sturb	wzr, [x29, #-24]
    aec0:	adrp	x9, e38 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x180>
    aec4:	ldr	x9, [x9]
    aec8:	adrp	x10, 0 <_ZNK4llvm5RecTy4dumpEv>
    aecc:	ldr	d0, [x10]
    aed0:	add	x10, sp, #0x8
    aed4:	add	x9, x9, #0x10
    aed8:	add	x20, x10, #0x10
    aedc:	stur	x1, [x29, #-16]
    aee0:	sturb	wzr, [x29, #-8]
    aee4:	stp	x9, x8, [x29, #-40]
    aee8:	str	x20, [sp, #8]
    aeec:	str	d0, [sp, #16]
    aef0:	ldr	w2, [x0, #48]
    aef4:	mov	x19, x0
    aef8:	cmp	w2, #0x9
    aefc:	b.cc	af14 <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0x78>  // b.lo, b.ul, b.last
    af00:	add	x0, sp, #0x8
    af04:	mov	w3, #0x8                   	// #8
    af08:	mov	x1, x20
    af0c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    af10:	ldr	w2, [x19, #48]
    af14:	mov	w8, w2
    af18:	lsl	x23, x8, #3
    af1c:	cbz	x23, afcc <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0x130>
    af20:	mov	w24, wzr
    af24:	add	x25, x19, #0x38
    af28:	ldr	x21, [x25]
    af2c:	sub	x1, x29, #0x28
    af30:	ldr	x8, [x21]
    af34:	mov	x0, x21
    af38:	ldr	x8, [x8, #96]
    af3c:	blr	x8
    af40:	ldp	w8, w9, [sp, #16]
    af44:	mov	x22, x0
    af48:	cmp	w8, w9
    af4c:	b.cs	af88 <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0xec>  // b.hs, b.nlast
    af50:	ldr	x9, [sp, #8]
    af54:	str	x22, [x9, w8, uxtw #3]
    af58:	ldp	w8, w9, [sp, #16]
    af5c:	cmp	w8, w9
    af60:	b.cs	b004 <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0x168>  // b.hs, b.nlast
    af64:	cmp	x22, x21
    af68:	add	x2, x8, #0x1
    af6c:	cset	w8, ne  // ne = any
    af70:	subs	x23, x23, #0x8
    af74:	orr	w24, w24, w8
    af78:	add	x25, x25, #0x8
    af7c:	str	w2, [sp, #16]
    af80:	b.ne	af28 <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0x8c>  // b.any
    af84:	b	afa4 <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0x108>
    af88:	add	x0, sp, #0x8
    af8c:	mov	w3, #0x8                   	// #8
    af90:	mov	x1, x20
    af94:	mov	x2, xzr
    af98:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    af9c:	ldr	w8, [sp, #16]
    afa0:	b	af50 <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0xb4>
    afa4:	tbz	w24, #0, afcc <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0x130>
    afa8:	ldr	x0, [x19, #32]
    afac:	ldr	x1, [sp, #8]
    afb0:	bl	a1c8 <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE>
    afb4:	ldurb	w8, [x29, #-8]
    afb8:	mov	x19, x0
    afbc:	cbnz	w8, afcc <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0x130>
    afc0:	mov	x0, x19
    afc4:	bl	a3f0 <_ZN4llvm10VarDefInit11instantiateEv>
    afc8:	mov	x19, x0
    afcc:	ldr	x0, [sp, #8]
    afd0:	add	x8, sp, #0x8
    afd4:	add	x8, x8, #0x10
    afd8:	cmp	x0, x8
    afdc:	b.eq	afe4 <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0x148>  // b.none
    afe0:	bl	0 <free>
    afe4:	mov	x0, x19
    afe8:	ldp	x20, x19, [sp, #192]
    afec:	ldp	x22, x21, [sp, #176]
    aff0:	ldp	x24, x23, [sp, #160]
    aff4:	ldr	x25, [sp, #144]
    aff8:	ldp	x29, x30, [sp, #128]
    affc:	add	sp, sp, #0xd0
    b000:	ret
    b004:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    b008:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    b00c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    b010:	add	x0, x0, #0x0
    b014:	add	x1, x1, #0x0
    b018:	add	x3, x3, #0x0
    b01c:	mov	w2, #0x43                  	// #67
    b020:	bl	0 <__assert_fail>

000000000000b024 <_ZNK4llvm10VarDefInit4FoldEv>:
    b024:	sub	sp, sp, #0x60
    b028:	stp	x29, x30, [sp, #48]
    b02c:	str	x21, [sp, #64]
    b030:	stp	x20, x19, [sp, #80]
    b034:	add	x29, sp, #0x30
    b038:	mov	x19, x0
    b03c:	ldr	x0, [x0, #40]
    b040:	cbnz	x0, b0a4 <_ZNK4llvm10VarDefInit4FoldEv+0x80>
    b044:	strb	wzr, [sp, #24]
    b048:	adrp	x8, e38 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x180>
    b04c:	ldr	x8, [x8]
    b050:	str	xzr, [sp, #32]
    b054:	strb	wzr, [sp, #40]
    b058:	add	x8, x8, #0x10
    b05c:	stp	x8, xzr, [sp, #8]
    b060:	ldr	w8, [x19, #48]
    b064:	lsl	x20, x8, #3
    b068:	cbz	x20, b09c <_ZNK4llvm10VarDefInit4FoldEv+0x78>
    b06c:	add	x21, x19, #0x38
    b070:	ldr	x0, [x21], #8
    b074:	add	x1, sp, #0x8
    b078:	ldr	x8, [x0]
    b07c:	ldr	x8, [x8, #96]
    b080:	blr	x8
    b084:	subs	x20, x20, #0x8
    b088:	b.ne	b070 <_ZNK4llvm10VarDefInit4FoldEv+0x4c>  // b.any
    b08c:	ldrb	w8, [sp, #40]
    b090:	cbz	w8, b09c <_ZNK4llvm10VarDefInit4FoldEv+0x78>
    b094:	mov	x0, x19
    b098:	b	b0a4 <_ZNK4llvm10VarDefInit4FoldEv+0x80>
    b09c:	mov	x0, x19
    b0a0:	bl	a3f0 <_ZN4llvm10VarDefInit11instantiateEv>
    b0a4:	ldp	x20, x19, [sp, #80]
    b0a8:	ldr	x21, [sp, #64]
    b0ac:	ldp	x29, x30, [sp, #48]
    b0b0:	add	sp, sp, #0x60
    b0b4:	ret

000000000000b0b8 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev>:
    b0b8:	sub	sp, sp, #0xa0
    b0bc:	stp	x29, x30, [sp, #64]
    b0c0:	str	x27, [sp, #80]
    b0c4:	stp	x26, x25, [sp, #96]
    b0c8:	stp	x24, x23, [sp, #112]
    b0cc:	stp	x22, x21, [sp, #128]
    b0d0:	stp	x20, x19, [sp, #144]
    b0d4:	add	x29, sp, #0x40
    b0d8:	ldr	x9, [x0, #32]
    b0dc:	mov	x20, x0
    b0e0:	mov	x19, x8
    b0e4:	mov	x8, sp
    b0e8:	ldr	x0, [x9]
    b0ec:	ldr	x9, [x0]
    b0f0:	ldr	x9, [x9, #48]
    b0f4:	blr	x9
    b0f8:	ldp	x21, x22, [sp]
    b0fc:	add	x8, sp, #0x20
    b100:	add	x23, x8, #0x10
    b104:	str	x23, [sp, #32]
    b108:	cbnz	x21, b110 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x58>
    b10c:	cbnz	x22, b324 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x26c>
    b110:	cmp	x22, #0x10
    b114:	str	x22, [x29, #24]
    b118:	b.cc	b140 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x88>  // b.lo, b.ul, b.last
    b11c:	add	x0, sp, #0x20
    b120:	add	x1, x29, #0x18
    b124:	mov	x2, xzr
    b128:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    b12c:	ldr	x8, [x29, #24]
    b130:	str	x0, [sp, #32]
    b134:	str	x8, [sp, #48]
    b138:	cbnz	x22, b148 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x90>
    b13c:	b	b168 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0xb0>
    b140:	mov	x0, x23
    b144:	cbz	x22, b168 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0xb0>
    b148:	cmp	x22, #0x1
    b14c:	b.ne	b15c <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0xa4>  // b.any
    b150:	ldrb	w8, [x21]
    b154:	strb	w8, [x0]
    b158:	b	b168 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0xb0>
    b15c:	mov	x1, x21
    b160:	mov	x2, x22
    b164:	bl	0 <memcpy>
    b168:	ldr	x8, [x29, #24]
    b16c:	ldr	x9, [sp, #32]
    b170:	str	x8, [sp, #40]
    b174:	strb	wzr, [x9, x8]
    b178:	ldr	x8, [sp, #40]
    b17c:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    b180:	cmp	x8, x9
    b184:	b.eq	b318 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x260>  // b.none
    b188:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    b18c:	add	x1, x1, #0x0
    b190:	add	x0, sp, #0x20
    b194:	mov	w2, #0x1                   	// #1
    b198:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    b19c:	ldr	x0, [sp]
    b1a0:	mov	x8, sp
    b1a4:	add	x8, x8, #0x10
    b1a8:	cmp	x0, x8
    b1ac:	b.eq	b1b4 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0xfc>  // b.none
    b1b0:	bl	0 <_ZdlPv>
    b1b4:	ldr	w8, [x20, #48]
    b1b8:	lsl	x22, x8, #3
    b1bc:	cbz	x22, b254 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x19c>
    b1c0:	add	x24, x20, #0x38
    b1c4:	mov	x8, sp
    b1c8:	adrp	x20, 0 <_ZNK4llvm5RecTy4dumpEv>
    b1cc:	adrp	x27, 0 <_ZNK4llvm5RecTy4dumpEv>
    b1d0:	add	x20, x20, #0x0
    b1d4:	mov	x25, #0x3fffffffffffffff    	// #4611686018427387903
    b1d8:	add	x26, x8, #0x10
    b1dc:	add	x27, x27, #0x0
    b1e0:	b	b1f4 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x13c>
    b1e4:	subs	x22, x22, #0x8
    b1e8:	add	x24, x24, #0x8
    b1ec:	mov	x20, x27
    b1f0:	b.eq	b254 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x19c>  // b.none
    b1f4:	ldr	x21, [x24]
    b1f8:	mov	x0, x20
    b1fc:	bl	0 <strlen>
    b200:	ldr	x8, [sp, #40]
    b204:	sub	x8, x25, x8
    b208:	cmp	x8, x0
    b20c:	b.cc	b318 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x260>  // b.lo, b.ul, b.last
    b210:	mov	x2, x0
    b214:	add	x0, sp, #0x20
    b218:	mov	x1, x20
    b21c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    b220:	ldr	x8, [x21]
    b224:	mov	x0, x21
    b228:	ldr	x9, [x8, #40]
    b22c:	mov	x8, sp
    b230:	blr	x9
    b234:	ldp	x1, x2, [sp]
    b238:	add	x0, sp, #0x20
    b23c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    b240:	ldr	x0, [sp]
    b244:	cmp	x0, x26
    b248:	b.eq	b1e4 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x12c>  // b.none
    b24c:	bl	0 <_ZdlPv>
    b250:	b	b1e4 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x12c>
    b254:	ldp	x20, x21, [sp, #32]
    b258:	add	x0, x19, #0x10
    b25c:	str	x0, [x19]
    b260:	cbnz	x20, b268 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x1b0>
    b264:	cbnz	x21, b324 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x26c>
    b268:	cmp	x21, #0x10
    b26c:	str	x21, [sp]
    b270:	b.cc	b290 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x1d8>  // b.lo, b.ul, b.last
    b274:	mov	x1, sp
    b278:	mov	x0, x19
    b27c:	mov	x2, xzr
    b280:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    b284:	ldr	x8, [sp]
    b288:	str	x0, [x19]
    b28c:	str	x8, [x19, #16]
    b290:	cbz	x21, b2b4 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x1fc>
    b294:	cmp	x21, #0x1
    b298:	b.ne	b2a8 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x1f0>  // b.any
    b29c:	ldrb	w8, [x20]
    b2a0:	strb	w8, [x0]
    b2a4:	b	b2b4 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x1fc>
    b2a8:	mov	x1, x20
    b2ac:	mov	x2, x21
    b2b0:	bl	0 <memcpy>
    b2b4:	ldr	x8, [sp]
    b2b8:	ldr	x9, [x19]
    b2bc:	str	x8, [x19, #8]
    b2c0:	strb	wzr, [x9, x8]
    b2c4:	ldr	x8, [x19, #8]
    b2c8:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    b2cc:	cmp	x8, x9
    b2d0:	b.eq	b318 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x260>  // b.none
    b2d4:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    b2d8:	add	x1, x1, #0x0
    b2dc:	mov	w2, #0x1                   	// #1
    b2e0:	mov	x0, x19
    b2e4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    b2e8:	ldr	x0, [sp, #32]
    b2ec:	cmp	x0, x23
    b2f0:	b.eq	b2f8 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x240>  // b.none
    b2f4:	bl	0 <_ZdlPv>
    b2f8:	ldp	x20, x19, [sp, #144]
    b2fc:	ldp	x22, x21, [sp, #128]
    b300:	ldp	x24, x23, [sp, #112]
    b304:	ldp	x26, x25, [sp, #96]
    b308:	ldr	x27, [sp, #80]
    b30c:	ldp	x29, x30, [sp, #64]
    b310:	add	sp, sp, #0xa0
    b314:	ret
    b318:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    b31c:	add	x0, x0, #0x0
    b320:	bl	0 <_ZSt20__throw_length_errorPKc>
    b324:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    b328:	add	x0, x0, #0x0
    b32c:	bl	0 <_ZSt19__throw_logic_errorPKc>

000000000000b330 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE>:
    b330:	sub	sp, sp, #0x50
    b334:	stp	x29, x30, [sp, #32]
    b338:	stp	x22, x21, [sp, #48]
    b33c:	stp	x20, x19, [sp, #64]
    b340:	add	x29, sp, #0x20
    b344:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    b348:	add	x8, x8, #0x0
    b34c:	ldarb	w8, [x8]
    b350:	mov	x19, x1
    b354:	mov	x20, x0
    b358:	tbz	w8, #0, b3f0 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0xc0>
    b35c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    b360:	add	x0, x0, #0x0
    b364:	mov	x1, sp
    b368:	sub	x2, x29, #0x8
    b36c:	stp	x20, x19, [sp]
    b370:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    b374:	ldur	x21, [x29, #-8]
    b378:	tbz	w0, #0, b388 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x58>
    b37c:	ldr	x22, [x21, #16]
    b380:	cbnz	x22, b3d8 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0xa8>
    b384:	b	b3b0 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x80>
    b388:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    b38c:	add	x0, x0, #0x0
    b390:	mov	x1, sp
    b394:	mov	x2, sp
    b398:	mov	x3, x21
    b39c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    b3a0:	ldr	q0, [sp]
    b3a4:	mov	x21, x0
    b3a8:	str	xzr, [x0, #16]
    b3ac:	str	q0, [x0]
    b3b0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    b3b4:	add	x0, x0, #0x0
    b3b8:	mov	w1, #0x28                  	// #40
    b3bc:	mov	w2, #0x4                   	// #4
    b3c0:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    b3c4:	mov	x1, x20
    b3c8:	mov	x2, x19
    b3cc:	mov	x22, x0
    b3d0:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    b3d4:	str	x22, [x21, #16]
    b3d8:	mov	x0, x22
    b3dc:	ldp	x20, x19, [sp, #64]
    b3e0:	ldp	x22, x21, [sp, #48]
    b3e4:	ldp	x29, x30, [sp, #32]
    b3e8:	add	sp, sp, #0x50
    b3ec:	ret
    b3f0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    b3f4:	add	x0, x0, #0x0
    b3f8:	bl	0 <__cxa_guard_acquire>
    b3fc:	cbz	w0, b35c <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x2c>
    b400:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    b404:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    b408:	adrp	x2, 0 <__dso_handle>
    b40c:	add	x1, x1, #0x0
    b410:	add	x0, x0, #0x0
    b414:	add	x2, x2, #0x0
    b418:	stp	xzr, xzr, [x1]
    b41c:	str	wzr, [x1, #24]
    b420:	str	xzr, [x1, #16]
    b424:	bl	0 <__cxa_atexit>
    b428:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    b42c:	add	x0, x0, #0x0
    b430:	bl	0 <__cxa_guard_release>
    b434:	b	b35c <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x2c>

000000000000b438 <_ZNK4llvm9FieldInit6getBitEj>:
    b438:	adrp	x9, 88 <_ZN4llvm5RecTy9getListTyEv+0x1c>
    b43c:	ldr	x8, [x0, #16]
    b440:	ldr	x9, [x9]
    b444:	cmp	x8, x9
    b448:	b.eq	b450 <_ZNK4llvm9FieldInit6getBitEj+0x18>  // b.none
    b44c:	b	3664 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj>
    b450:	ret

000000000000b454 <_ZNK4llvm9FieldInit17resolveReferencesERNS_8ResolverE>:
    b454:	stp	x29, x30, [sp, #-32]!
    b458:	stp	x20, x19, [sp, #16]
    b45c:	mov	x29, sp
    b460:	mov	x20, x0
    b464:	ldr	x0, [x0, #24]
    b468:	mov	x19, x1
    b46c:	ldr	x8, [x0]
    b470:	ldr	x8, [x8, #96]
    b474:	blr	x8
    b478:	ldr	x8, [x20, #24]
    b47c:	cmp	x0, x8
    b480:	b.eq	b49c <_ZNK4llvm9FieldInit17resolveReferencesERNS_8ResolverE+0x48>  // b.none
    b484:	ldr	x1, [x20, #32]
    b488:	bl	b330 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE>
    b48c:	ldr	x1, [x19, #8]
    b490:	ldp	x20, x19, [sp, #16]
    b494:	ldp	x29, x30, [sp], #32
    b498:	b	b4ac <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE>
    b49c:	mov	x0, x20
    b4a0:	ldp	x20, x19, [sp, #16]
    b4a4:	ldp	x29, x30, [sp], #32
    b4a8:	ret

000000000000b4ac <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE>:
    b4ac:	sub	sp, sp, #0x170
    b4b0:	stp	x29, x30, [sp, #288]
    b4b4:	str	x28, [sp, #304]
    b4b8:	stp	x24, x23, [sp, #320]
    b4bc:	stp	x22, x21, [sp, #336]
    b4c0:	stp	x20, x19, [sp, #352]
    b4c4:	add	x29, sp, #0x120
    b4c8:	ldr	x8, [x0, #24]
    b4cc:	cbz	x8, b53c <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE+0x90>
    b4d0:	ldrb	w9, [x8, #8]
    b4d4:	mov	x19, x0
    b4d8:	cmp	w9, #0x6
    b4dc:	b.ne	b518 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE+0x6c>  // b.any
    b4e0:	ldr	x8, [x8, #24]
    b4e4:	cmp	x8, x1
    b4e8:	b.eq	b55c <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE+0xb0>  // b.none
    b4ec:	ldr	x9, [x19, #32]
    b4f0:	ldr	x8, [x8, #72]
    b4f4:	ldr	x10, [x8], #24
    b4f8:	cmp	x10, x9
    b4fc:	b.ne	b4f4 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE+0x48>  // b.any
    b500:	ldur	x20, [x8, #-8]
    b504:	ldr	x8, [x20]
    b508:	mov	x0, x20
    b50c:	ldr	x8, [x8, #24]
    b510:	blr	x8
    b514:	tbnz	w0, #0, b51c <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE+0x70>
    b518:	mov	x20, x19
    b51c:	mov	x0, x20
    b520:	ldp	x20, x19, [sp, #352]
    b524:	ldp	x22, x21, [sp, #336]
    b528:	ldp	x24, x23, [sp, #320]
    b52c:	ldr	x28, [sp, #304]
    b530:	ldp	x29, x30, [sp, #288]
    b534:	add	sp, sp, #0x170
    b538:	ret
    b53c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    b540:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    b544:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    b548:	add	x0, x0, #0x0
    b54c:	add	x1, x1, #0x0
    b550:	add	x3, x3, #0x0
    b554:	mov	w2, #0x69                  	// #105
    b558:	bl	0 <__assert_fail>
    b55c:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    b560:	add	x8, x8, #0x0
    b564:	mov	w22, #0x103                 	// #259
    b568:	ldr	x20, [x1, #8]
    b56c:	ldr	w21, [x1, #16]
    b570:	stp	x8, xzr, [x29, #-120]
    b574:	sturh	w22, [x29, #-104]
    b578:	ldr	x0, [x19, #32]
    b57c:	add	x23, sp, #0x70
    b580:	ldr	x8, [x0]
    b584:	ldr	x9, [x8, #48]
    b588:	add	x8, sp, #0x70
    b58c:	blr	x9
    b590:	mov	w24, #0x104                 	// #260
    b594:	sub	x8, x29, #0x60
    b598:	sub	x0, x29, #0x78
    b59c:	add	x1, sp, #0x90
    b5a0:	strh	w24, [sp, #160]
    b5a4:	stp	x23, xzr, [sp, #144]
    b5a8:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    b5ac:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    b5b0:	add	x8, x8, #0x0
    b5b4:	stp	x8, xzr, [sp, #88]
    b5b8:	sub	x8, x29, #0x48
    b5bc:	sub	x0, x29, #0x60
    b5c0:	add	x1, sp, #0x58
    b5c4:	strh	w22, [sp, #104]
    b5c8:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    b5cc:	ldr	x0, [x19, #24]
    b5d0:	add	x19, sp, #0x20
    b5d4:	ldr	x8, [x0]
    b5d8:	ldr	x9, [x8, #40]
    b5dc:	add	x8, sp, #0x20
    b5e0:	blr	x9
    b5e4:	sub	x8, x29, #0x30
    b5e8:	sub	x0, x29, #0x48
    b5ec:	add	x1, sp, #0x40
    b5f0:	strh	w24, [sp, #80]
    b5f4:	stp	x19, xzr, [sp, #64]
    b5f8:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    b5fc:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    b600:	add	x8, x8, #0x0
    b604:	stp	x8, xzr, [sp, #8]
    b608:	sub	x8, x29, #0x18
    b60c:	sub	x0, x29, #0x30
    b610:	add	x1, sp, #0x8
    b614:	strh	w22, [sp, #24]
    b618:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    b61c:	sub	x2, x29, #0x18
    b620:	mov	x0, x20
    b624:	mov	x1, x21
    b628:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>

000000000000b62c <_ZNK4llvm10CondOpInit7ProfileERNS_16FoldingSetNodeIDE>:
    b62c:	stp	x29, x30, [sp, #-64]!
    b630:	str	x23, [sp, #16]
    b634:	stp	x22, x21, [sp, #32]
    b638:	stp	x20, x19, [sp, #48]
    b63c:	mov	x29, sp
    b640:	ldr	x8, [x0, #40]
    b644:	ldr	w22, [x0, #32]
    b648:	mov	x20, x0
    b64c:	mov	x19, x1
    b650:	mov	x0, x1
    b654:	mov	x1, x8
    b658:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    b65c:	cbz	w22, b694 <_ZNK4llvm10CondOpInit7ProfileERNS_16FoldingSetNodeIDE+0x68>
    b660:	add	x20, x20, #0x30
    b664:	lsl	x22, x22, #3
    b668:	mov	x21, xzr
    b66c:	add	x23, x20, x22
    b670:	ldr	x1, [x20, x21]
    b674:	mov	x0, x19
    b678:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    b67c:	ldr	x1, [x23, x21]
    b680:	mov	x0, x19
    b684:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    b688:	add	x21, x21, #0x8
    b68c:	cmp	x22, x21
    b690:	b.ne	b670 <_ZNK4llvm10CondOpInit7ProfileERNS_16FoldingSetNodeIDE+0x44>  // b.any
    b694:	ldp	x20, x19, [sp, #48]
    b698:	ldp	x22, x21, [sp, #32]
    b69c:	ldr	x23, [sp, #16]
    b6a0:	ldp	x29, x30, [sp], #64
    b6a4:	ret

000000000000b6a8 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE>:
    b6a8:	sub	sp, sp, #0xf0
    b6ac:	stp	x29, x30, [sp, #144]
    b6b0:	str	x27, [sp, #160]
    b6b4:	stp	x26, x25, [sp, #176]
    b6b8:	stp	x24, x23, [sp, #192]
    b6bc:	stp	x22, x21, [sp, #208]
    b6c0:	stp	x20, x19, [sp, #224]
    b6c4:	add	x29, sp, #0x90
    b6c8:	cmp	x1, x3
    b6cc:	b.ne	b890 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0x1e8>  // b.any
    b6d0:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    b6d4:	add	x8, x8, #0x0
    b6d8:	ldarb	w8, [x8]
    b6dc:	mov	x22, x4
    b6e0:	mov	x19, x2
    b6e4:	mov	x20, x1
    b6e8:	mov	x21, x0
    b6ec:	tbz	w8, #0, b834 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0x18c>
    b6f0:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    b6f4:	ldr	d0, [x8]
    b6f8:	mov	x8, sp
    b6fc:	add	x8, x8, #0x10
    b700:	mov	x0, sp
    b704:	mov	x1, x22
    b708:	str	x8, [sp]
    b70c:	str	d0, [sp, #8]
    b710:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    b714:	lsl	x23, x20, #3
    b718:	cbz	x20, b748 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0xa0>
    b71c:	mov	x24, x23
    b720:	mov	x25, x19
    b724:	mov	x26, x21
    b728:	ldr	x1, [x26], #8
    b72c:	mov	x0, sp
    b730:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    b734:	ldr	x1, [x25], #8
    b738:	mov	x0, sp
    b73c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    b740:	subs	x24, x24, #0x8
    b744:	b.ne	b728 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0x80>  // b.any
    b748:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    b74c:	add	x0, x0, #0x0
    b750:	mov	x1, sp
    b754:	add	x2, x29, #0x18
    b758:	str	xzr, [x29, #24]
    b75c:	mov	x26, sp
    b760:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    b764:	cbz	x0, b770 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0xc8>
    b768:	sub	x24, x0, #0x18
    b76c:	b	b7fc <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0x154>
    b770:	lsl	x8, x20, #4
    b774:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    b778:	add	x1, x8, #0x30
    b77c:	add	x0, x0, #0x0
    b780:	mov	w2, #0x3                   	// #3
    b784:	add	x27, x21, x20, lsl #3
    b788:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    b78c:	str	x22, [x0, #16]
    b790:	adrp	x9, 958 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x170>
    b794:	ldr	x9, [x9]
    b798:	mov	w8, #0xf                   	// #15
    b79c:	mov	x25, x0
    b7a0:	mov	x24, x0
    b7a4:	subs	x2, x27, x21
    b7a8:	strh	w8, [x0, #8]
    b7ac:	str	xzr, [x25, #24]!
    b7b0:	add	x8, x9, #0x10
    b7b4:	str	x22, [x0, #40]
    b7b8:	add	x22, x0, #0x30
    b7bc:	str	w20, [x0, #32]
    b7c0:	str	x8, [x0]
    b7c4:	b.eq	b7d4 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0x12c>  // b.none
    b7c8:	mov	x0, x22
    b7cc:	mov	x1, x21
    b7d0:	bl	0 <memmove>
    b7d4:	cbz	x23, b7e8 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0x140>
    b7d8:	add	x0, x22, x20, lsl #3
    b7dc:	mov	x1, x19
    b7e0:	mov	x2, x23
    b7e4:	bl	0 <memmove>
    b7e8:	ldr	x2, [x29, #24]
    b7ec:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    b7f0:	add	x0, x0, #0x0
    b7f4:	mov	x1, x25
    b7f8:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    b7fc:	ldr	x0, [sp]
    b800:	add	x8, x26, #0x10
    b804:	cmp	x0, x8
    b808:	b.eq	b810 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0x168>  // b.none
    b80c:	bl	0 <free>
    b810:	mov	x0, x24
    b814:	ldp	x20, x19, [sp, #224]
    b818:	ldp	x22, x21, [sp, #208]
    b81c:	ldp	x24, x23, [sp, #192]
    b820:	ldp	x26, x25, [sp, #176]
    b824:	ldr	x27, [sp, #160]
    b828:	ldp	x29, x30, [sp, #144]
    b82c:	add	sp, sp, #0xf0
    b830:	ret
    b834:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    b838:	add	x0, x0, #0x0
    b83c:	bl	0 <__cxa_guard_acquire>
    b840:	cbz	w0, b6f0 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0x48>
    b844:	adrp	x23, 0 <_ZNK4llvm5RecTy4dumpEv>
    b848:	add	x23, x23, #0x0
    b84c:	mov	w1, #0x6                   	// #6
    b850:	mov	x0, x23
    b854:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    b858:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    b85c:	ldr	x8, [x8]
    b860:	adrp	x0, 0 <_ZN4llvm14FoldingSetBaseD2Ev>
    b864:	adrp	x2, 0 <__dso_handle>
    b868:	add	x2, x2, #0x0
    b86c:	add	x8, x8, #0x10
    b870:	str	x8, [x23]
    b874:	ldr	x0, [x0]
    b878:	mov	x1, x23
    b87c:	bl	0 <__cxa_atexit>
    b880:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    b884:	add	x0, x0, #0x0
    b888:	bl	0 <__cxa_guard_release>
    b88c:	b	b6f0 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0x48>
    b890:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    b894:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    b898:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    b89c:	add	x0, x0, #0x0
    b8a0:	add	x1, x1, #0x0
    b8a4:	add	x3, x3, #0x0
    b8a8:	mov	w2, #0x711                 	// #1809
    b8ac:	bl	0 <__assert_fail>

000000000000b8b0 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE>:
    b8b0:	sub	sp, sp, #0xc0
    b8b4:	str	d8, [sp, #96]
    b8b8:	stp	x29, x30, [sp, #104]
    b8bc:	str	x27, [sp, #120]
    b8c0:	stp	x26, x25, [sp, #128]
    b8c4:	stp	x24, x23, [sp, #144]
    b8c8:	stp	x22, x21, [sp, #160]
    b8cc:	stp	x20, x19, [sp, #176]
    b8d0:	add	x29, sp, #0x60
    b8d4:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    b8d8:	ldr	d8, [x8]
    b8dc:	add	x8, sp, #0x30
    b8e0:	add	x21, x8, #0x10
    b8e4:	str	x21, [sp, #48]
    b8e8:	str	d8, [sp, #56]
    b8ec:	ldr	w8, [x0, #32]
    b8f0:	mov	x20, x1
    b8f4:	mov	x19, x0
    b8f8:	add	x25, x0, #0x30
    b8fc:	lsl	x26, x8, #3
    b900:	mov	w24, wzr
    b904:	cbz	x26, b98c <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0xdc>
    b908:	mov	x27, x25
    b90c:	ldr	x22, [x27]
    b910:	mov	x1, x20
    b914:	ldr	x8, [x22]
    b918:	mov	x0, x22
    b91c:	ldr	x8, [x8, #96]
    b920:	blr	x8
    b924:	ldp	w8, w9, [sp, #56]
    b928:	mov	x23, x0
    b92c:	cmp	w8, w9
    b930:	b.cs	b96c <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0xbc>  // b.hs, b.nlast
    b934:	ldr	x9, [sp, #48]
    b938:	str	x23, [x9, w8, uxtw #3]
    b93c:	ldp	w8, w9, [sp, #56]
    b940:	cmp	w8, w9
    b944:	b.cs	baac <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x1fc>  // b.hs, b.nlast
    b948:	add	w8, w8, #0x1
    b94c:	cmp	x23, x22
    b950:	str	w8, [sp, #56]
    b954:	cset	w8, ne  // ne = any
    b958:	subs	x26, x26, #0x8
    b95c:	orr	w24, w24, w8
    b960:	add	x27, x27, #0x8
    b964:	b.ne	b90c <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x5c>  // b.any
    b968:	b	b988 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0xd8>
    b96c:	add	x0, sp, #0x30
    b970:	mov	w3, #0x8                   	// #8
    b974:	mov	x1, x21
    b978:	mov	x2, xzr
    b97c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b980:	ldr	w8, [sp, #56]
    b984:	b	b934 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x84>
    b988:	ldr	w8, [x19, #32]
    b98c:	mov	x9, sp
    b990:	lsl	x26, x8, #3
    b994:	add	x21, x9, #0x10
    b998:	str	x21, [sp]
    b99c:	str	d8, [sp, #8]
    b9a0:	cbz	x26, ba2c <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x17c>
    b9a4:	add	x25, x25, x26
    b9a8:	ldr	x22, [x25]
    b9ac:	mov	x1, x20
    b9b0:	ldr	x8, [x22]
    b9b4:	mov	x0, x22
    b9b8:	ldr	x8, [x8, #96]
    b9bc:	blr	x8
    b9c0:	ldp	w8, w9, [sp, #8]
    b9c4:	mov	x23, x0
    b9c8:	cmp	w8, w9
    b9cc:	b.cs	ba08 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x158>  // b.hs, b.nlast
    b9d0:	ldr	x9, [sp]
    b9d4:	str	x23, [x9, w8, uxtw #3]
    b9d8:	ldp	w8, w9, [sp, #8]
    b9dc:	cmp	w8, w9
    b9e0:	b.cs	baac <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x1fc>  // b.hs, b.nlast
    b9e4:	cmp	x23, x22
    b9e8:	add	x3, x8, #0x1
    b9ec:	cset	w8, ne  // ne = any
    b9f0:	subs	x26, x26, #0x8
    b9f4:	orr	w24, w24, w8
    b9f8:	add	x25, x25, #0x8
    b9fc:	str	w3, [sp, #8]
    ba00:	b.ne	b9a8 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0xf8>  // b.any
    ba04:	b	ba24 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x174>
    ba08:	mov	x0, sp
    ba0c:	mov	w3, #0x8                   	// #8
    ba10:	mov	x1, x21
    ba14:	mov	x2, xzr
    ba18:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    ba1c:	ldr	w8, [sp, #8]
    ba20:	b	b9d0 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x120>
    ba24:	tbnz	w24, #0, ba34 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x184>
    ba28:	b	ba54 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x1a4>
    ba2c:	tbz	w24, #0, ba54 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x1a4>
    ba30:	mov	x3, xzr
    ba34:	ldr	x0, [sp, #48]
    ba38:	ldr	w1, [sp, #56]
    ba3c:	ldr	x2, [sp]
    ba40:	ldr	x4, [x19, #40]
    ba44:	bl	b6a8 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE>
    ba48:	ldr	x1, [x20, #8]
    ba4c:	bl	bacc <_ZNK4llvm10CondOpInit4FoldEPNS_6RecordE>
    ba50:	mov	x19, x0
    ba54:	ldr	x0, [sp]
    ba58:	mov	x8, sp
    ba5c:	add	x8, x8, #0x10
    ba60:	cmp	x0, x8
    ba64:	b.eq	ba6c <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x1bc>  // b.none
    ba68:	bl	0 <free>
    ba6c:	ldr	x0, [sp, #48]
    ba70:	add	x8, sp, #0x30
    ba74:	add	x8, x8, #0x10
    ba78:	cmp	x0, x8
    ba7c:	b.eq	ba84 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x1d4>  // b.none
    ba80:	bl	0 <free>
    ba84:	mov	x0, x19
    ba88:	ldp	x20, x19, [sp, #176]
    ba8c:	ldp	x22, x21, [sp, #160]
    ba90:	ldp	x24, x23, [sp, #144]
    ba94:	ldp	x26, x25, [sp, #128]
    ba98:	ldr	x27, [sp, #120]
    ba9c:	ldp	x29, x30, [sp, #104]
    baa0:	ldr	d8, [sp, #96]
    baa4:	add	sp, sp, #0xc0
    baa8:	ret
    baac:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    bab0:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    bab4:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    bab8:	add	x0, x0, #0x0
    babc:	add	x1, x1, #0x0
    bac0:	add	x3, x3, #0x0
    bac4:	mov	w2, #0x43                  	// #67
    bac8:	bl	0 <__assert_fail>

000000000000bacc <_ZNK4llvm10CondOpInit4FoldEPNS_6RecordE>:
    bacc:	sub	sp, sp, #0xc0
    bad0:	stp	x29, x30, [sp, #128]
    bad4:	stp	x24, x23, [sp, #144]
    bad8:	stp	x22, x21, [sp, #160]
    badc:	stp	x20, x19, [sp, #176]
    bae0:	add	x29, sp, #0x80
    bae4:	ldr	w8, [x0, #32]
    bae8:	mov	x19, x0
    baec:	mov	x20, x1
    baf0:	cbz	w8, bb48 <_ZNK4llvm10CondOpInit4FoldEPNS_6RecordE+0x7c>
    baf4:	adrp	x21, b8 <_ZN4llvm5RecTy9getListTyEv+0x4c>
    baf8:	ldr	x21, [x21]
    bafc:	mov	x23, xzr
    bb00:	add	x24, x19, #0x30
    bb04:	ldr	x0, [x24, x23, lsl #3]
    bb08:	add	w8, w23, w8
    bb0c:	ldr	x22, [x24, w8, uxtw #3]
    bb10:	mov	x1, x21
    bb14:	ldr	x9, [x0]
    bb18:	ldr	x8, [x9, #64]
    bb1c:	blr	x8
    bb20:	cbz	x0, bbb0 <_ZNK4llvm10CondOpInit4FoldEPNS_6RecordE+0xe4>
    bb24:	ldrb	w8, [x0, #8]
    bb28:	cmp	w8, #0x8
    bb2c:	b.ne	bbb0 <_ZNK4llvm10CondOpInit4FoldEPNS_6RecordE+0xe4>  // b.any
    bb30:	ldr	x8, [x0, #24]
    bb34:	cbnz	x8, bbcc <_ZNK4llvm10CondOpInit4FoldEPNS_6RecordE+0x100>
    bb38:	ldr	w8, [x19, #32]
    bb3c:	add	x23, x23, #0x1
    bb40:	cmp	x23, x8
    bb44:	b.cc	bb04 <_ZNK4llvm10CondOpInit4FoldEPNS_6RecordE+0x38>  // b.lo, b.ul, b.last
    bb48:	ldr	x21, [x20, #8]
    bb4c:	ldr	w22, [x20, #16]
    bb50:	mov	x0, x20
    bb54:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    bb58:	mov	w8, #0x305                 	// #773
    bb5c:	adrp	x10, 0 <_ZNK4llvm5RecTy4dumpEv>
    bb60:	stp	x0, x1, [sp, #64]
    bb64:	add	x9, sp, #0x40
    bb68:	add	x10, x10, #0x0
    bb6c:	sturh	w8, [x29, #-32]
    bb70:	add	x8, sp, #0x8
    bb74:	mov	x0, x19
    bb78:	stp	x9, x10, [x29, #-48]
    bb7c:	add	x20, sp, #0x8
    bb80:	bl	bbf4 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev>
    bb84:	mov	w8, #0x104                 	// #260
    bb88:	strh	w8, [sp, #56]
    bb8c:	sub	x8, x29, #0x18
    bb90:	sub	x0, x29, #0x30
    bb94:	add	x1, sp, #0x28
    bb98:	stp	x20, xzr, [sp, #40]
    bb9c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    bba0:	sub	x2, x29, #0x18
    bba4:	mov	x0, x21
    bba8:	mov	x1, x22
    bbac:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    bbb0:	mov	x0, x19
    bbb4:	ldp	x20, x19, [sp, #176]
    bbb8:	ldp	x22, x21, [sp, #160]
    bbbc:	ldp	x24, x23, [sp, #144]
    bbc0:	ldp	x29, x30, [sp, #128]
    bbc4:	add	sp, sp, #0xc0
    bbc8:	ret
    bbcc:	ldr	x8, [x22]
    bbd0:	ldr	x1, [x19, #40]
    bbd4:	mov	x0, x22
    bbd8:	ldp	x20, x19, [sp, #176]
    bbdc:	ldr	x2, [x8, #64]
    bbe0:	ldp	x22, x21, [sp, #160]
    bbe4:	ldp	x24, x23, [sp, #144]
    bbe8:	ldp	x29, x30, [sp, #128]
    bbec:	add	sp, sp, #0xc0
    bbf0:	br	x2

000000000000bbf4 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev>:
    bbf4:	sub	sp, sp, #0xc0
    bbf8:	stp	x29, x30, [sp, #96]
    bbfc:	stp	x28, x27, [sp, #112]
    bc00:	stp	x26, x25, [sp, #128]
    bc04:	stp	x24, x23, [sp, #144]
    bc08:	stp	x22, x21, [sp, #160]
    bc0c:	stp	x20, x19, [sp, #176]
    bc10:	add	x29, sp, #0x60
    bc14:	sub	x9, x29, #0x20
    bc18:	mov	w11, #0x6321                	// #25377
    bc1c:	mov	w10, #0x2864                	// #10340
    bc20:	movk	w11, #0x6e6f, lsl #16
    bc24:	mov	w12, #0x6                   	// #6
    bc28:	add	x23, x9, #0x10
    bc2c:	sturh	w10, [x29, #-12]
    bc30:	stur	w11, [x29, #-16]
    bc34:	stp	x23, x12, [x29, #-32]
    bc38:	sturb	wzr, [x29, #-10]
    bc3c:	ldr	w9, [x0, #32]
    bc40:	mov	x19, x8
    bc44:	cbz	w9, bdf0 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x1fc>
    bc48:	add	x8, sp, #0x20
    bc4c:	mov	x9, sp
    bc50:	adrp	x21, 0 <_ZNK4llvm5RecTy4dumpEv>
    bc54:	adrp	x22, 0 <_ZNK4llvm5RecTy4dumpEv>
    bc58:	mov	x20, x0
    bc5c:	mov	x24, xzr
    bc60:	add	x25, x0, #0x30
    bc64:	mov	x26, #0x3fffffffffffffff    	// #4611686018427387903
    bc68:	add	x21, x21, #0x0
    bc6c:	add	x27, x8, #0x10
    bc70:	add	x28, x9, #0x10
    bc74:	add	x22, x22, #0x0
    bc78:	b	bc88 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x94>
    bc7c:	add	x24, x24, #0x1
    bc80:	cmp	x24, w8, uxtw
    bc84:	b.cs	bd9c <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x1a8>  // b.hs, b.nlast
    bc88:	ldr	x0, [x25, x24, lsl #3]
    bc8c:	ldr	x8, [x0]
    bc90:	ldr	x9, [x8, #40]
    bc94:	mov	x8, sp
    bc98:	blr	x9
    bc9c:	ldr	x8, [sp, #8]
    bca0:	orr	x8, x8, #0x1
    bca4:	cmp	x8, x26
    bca8:	b.eq	be74 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x280>  // b.none
    bcac:	mov	x0, sp
    bcb0:	mov	w2, #0x2                   	// #2
    bcb4:	mov	x1, x21
    bcb8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    bcbc:	str	x27, [sp, #32]
    bcc0:	mov	x8, x0
    bcc4:	ldr	x9, [x8], #16
    bcc8:	cmp	x9, x8
    bccc:	b.eq	bce0 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0xec>  // b.none
    bcd0:	str	x9, [sp, #32]
    bcd4:	ldr	x9, [x0, #16]
    bcd8:	str	x9, [sp, #48]
    bcdc:	b	bce8 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0xf4>
    bce0:	ldr	q0, [x9]
    bce4:	str	q0, [x27]
    bce8:	ldr	x9, [x0, #8]
    bcec:	str	x9, [sp, #40]
    bcf0:	stp	x8, xzr, [x0]
    bcf4:	strb	wzr, [x0, #16]
    bcf8:	ldp	x1, x2, [sp, #32]
    bcfc:	sub	x0, x29, #0x20
    bd00:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    bd04:	ldr	x0, [sp, #32]
    bd08:	cmp	x0, x27
    bd0c:	b.eq	bd14 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x120>  // b.none
    bd10:	bl	0 <_ZdlPv>
    bd14:	ldr	x0, [sp]
    bd18:	cmp	x0, x28
    bd1c:	b.eq	bd24 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x130>  // b.none
    bd20:	bl	0 <_ZdlPv>
    bd24:	ldr	w8, [x20, #32]
    bd28:	cmp	x24, x8
    bd2c:	b.cs	be80 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x28c>  // b.hs, b.nlast
    bd30:	add	w8, w24, w8
    bd34:	ldr	x0, [x25, w8, uxtw #3]
    bd38:	ldr	x8, [x0]
    bd3c:	ldr	x9, [x8, #40]
    bd40:	add	x8, sp, #0x20
    bd44:	blr	x9
    bd48:	ldp	x1, x2, [sp, #32]
    bd4c:	sub	x0, x29, #0x20
    bd50:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    bd54:	ldr	x0, [sp, #32]
    bd58:	cmp	x0, x27
    bd5c:	b.eq	bd64 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x170>  // b.none
    bd60:	bl	0 <_ZdlPv>
    bd64:	ldr	w8, [x20, #32]
    bd68:	sub	w9, w8, #0x1
    bd6c:	cmp	x24, x9
    bd70:	b.eq	bc7c <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x88>  // b.none
    bd74:	ldur	x8, [x29, #-24]
    bd78:	orr	x8, x8, #0x1
    bd7c:	cmp	x8, x26
    bd80:	b.eq	be74 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x280>  // b.none
    bd84:	sub	x0, x29, #0x20
    bd88:	mov	w2, #0x2                   	// #2
    bd8c:	mov	x1, x22
    bd90:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    bd94:	ldr	w8, [x20, #32]
    bd98:	b	bc7c <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x88>
    bd9c:	ldp	x21, x20, [x29, #-32]
    bda0:	add	x0, x19, #0x10
    bda4:	str	x0, [x19]
    bda8:	cbnz	x21, bdb0 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x1bc>
    bdac:	cbnz	x20, bea0 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x2ac>
    bdb0:	cmp	x20, #0x10
    bdb4:	str	x20, [sp, #32]
    bdb8:	b.cc	bdd8 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x1e4>  // b.lo, b.ul, b.last
    bdbc:	add	x1, sp, #0x20
    bdc0:	mov	x0, x19
    bdc4:	mov	x2, xzr
    bdc8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    bdcc:	ldr	x8, [sp, #32]
    bdd0:	str	x0, [x19]
    bdd4:	str	x8, [x19, #16]
    bdd8:	cbz	x20, be10 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x21c>
    bddc:	cmp	x20, #0x1
    bde0:	b.ne	be04 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x210>  // b.any
    bde4:	ldrb	w8, [x21]
    bde8:	strb	w8, [x0]
    bdec:	b	be10 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x21c>
    bdf0:	add	x0, x19, #0x10
    bdf4:	mov	w20, #0x6                   	// #6
    bdf8:	mov	x21, x23
    bdfc:	str	x0, [x19]
    be00:	str	x20, [sp, #32]
    be04:	mov	x1, x21
    be08:	mov	x2, x20
    be0c:	bl	0 <memcpy>
    be10:	ldr	x8, [sp, #32]
    be14:	ldr	x9, [x19]
    be18:	str	x8, [x19, #8]
    be1c:	strb	wzr, [x9, x8]
    be20:	ldr	x8, [x19, #8]
    be24:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    be28:	cmp	x8, x9
    be2c:	b.eq	be74 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x280>  // b.none
    be30:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    be34:	add	x1, x1, #0x0
    be38:	mov	w2, #0x1                   	// #1
    be3c:	mov	x0, x19
    be40:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    be44:	ldur	x0, [x29, #-32]
    be48:	cmp	x0, x23
    be4c:	b.eq	be54 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x260>  // b.none
    be50:	bl	0 <_ZdlPv>
    be54:	ldp	x20, x19, [sp, #176]
    be58:	ldp	x22, x21, [sp, #160]
    be5c:	ldp	x24, x23, [sp, #144]
    be60:	ldp	x26, x25, [sp, #128]
    be64:	ldp	x28, x27, [sp, #112]
    be68:	ldp	x29, x30, [sp, #96]
    be6c:	add	sp, sp, #0xc0
    be70:	ret
    be74:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    be78:	add	x0, x0, #0x0
    be7c:	bl	0 <_ZSt20__throw_length_errorPKc>
    be80:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    be84:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    be88:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    be8c:	add	x0, x0, #0x0
    be90:	add	x1, x1, #0x0
    be94:	add	x3, x3, #0x0
    be98:	mov	w2, #0x3bf                 	// #959
    be9c:	bl	0 <__assert_fail>
    bea0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    bea4:	add	x0, x0, #0x0
    bea8:	bl	0 <_ZSt19__throw_logic_errorPKc>

000000000000beac <_ZNK4llvm10CondOpInit10isConcreteEv>:
    beac:	stp	x29, x30, [sp, #-48]!
    beb0:	stp	x22, x21, [sp, #16]
    beb4:	stp	x20, x19, [sp, #32]
    beb8:	mov	x29, sp
    bebc:	ldr	w8, [x0, #32]
    bec0:	add	x20, x0, #0x30
    bec4:	lsl	x21, x8, #3
    bec8:	cbz	x21, bef4 <_ZNK4llvm10CondOpInit10isConcreteEv+0x48>
    becc:	mov	x19, x0
    bed0:	mov	x22, x20
    bed4:	ldr	x0, [x22], #8
    bed8:	ldr	x8, [x0]
    bedc:	ldr	x8, [x8, #32]
    bee0:	blr	x8
    bee4:	tbz	w0, #0, bf24 <_ZNK4llvm10CondOpInit10isConcreteEv+0x78>
    bee8:	subs	x21, x21, #0x8
    beec:	b.ne	bed4 <_ZNK4llvm10CondOpInit10isConcreteEv+0x28>  // b.any
    bef0:	ldr	w8, [x19, #32]
    bef4:	lsl	x19, x8, #3
    bef8:	cbz	x19, bf1c <_ZNK4llvm10CondOpInit10isConcreteEv+0x70>
    befc:	add	x20, x20, x19
    bf00:	ldr	x0, [x20], #8
    bf04:	ldr	x8, [x0]
    bf08:	ldr	x8, [x8, #32]
    bf0c:	blr	x8
    bf10:	tbz	w0, #0, bf24 <_ZNK4llvm10CondOpInit10isConcreteEv+0x78>
    bf14:	subs	x19, x19, #0x8
    bf18:	b.ne	bf00 <_ZNK4llvm10CondOpInit10isConcreteEv+0x54>  // b.any
    bf1c:	mov	w0, #0x1                   	// #1
    bf20:	b	bf28 <_ZNK4llvm10CondOpInit10isConcreteEv+0x7c>
    bf24:	mov	w0, wzr
    bf28:	ldp	x20, x19, [sp, #32]
    bf2c:	ldp	x22, x21, [sp, #16]
    bf30:	ldp	x29, x30, [sp], #48
    bf34:	ret

000000000000bf38 <_ZNK4llvm10CondOpInit10isCompleteEv>:
    bf38:	stp	x29, x30, [sp, #-48]!
    bf3c:	stp	x22, x21, [sp, #16]
    bf40:	stp	x20, x19, [sp, #32]
    bf44:	mov	x29, sp
    bf48:	ldr	w8, [x0, #32]
    bf4c:	add	x20, x0, #0x30
    bf50:	lsl	x21, x8, #3
    bf54:	cbz	x21, bf80 <_ZNK4llvm10CondOpInit10isCompleteEv+0x48>
    bf58:	mov	x19, x0
    bf5c:	mov	x22, x20
    bf60:	ldr	x0, [x22], #8
    bf64:	ldr	x8, [x0]
    bf68:	ldr	x8, [x8, #24]
    bf6c:	blr	x8
    bf70:	tbz	w0, #0, bfb0 <_ZNK4llvm10CondOpInit10isCompleteEv+0x78>
    bf74:	subs	x21, x21, #0x8
    bf78:	b.ne	bf60 <_ZNK4llvm10CondOpInit10isCompleteEv+0x28>  // b.any
    bf7c:	ldr	w8, [x19, #32]
    bf80:	lsl	x19, x8, #3
    bf84:	cbz	x19, bfa8 <_ZNK4llvm10CondOpInit10isCompleteEv+0x70>
    bf88:	add	x20, x20, x19
    bf8c:	ldr	x0, [x20], #8
    bf90:	ldr	x8, [x0]
    bf94:	ldr	x8, [x8, #32]
    bf98:	blr	x8
    bf9c:	tbz	w0, #0, bfb0 <_ZNK4llvm10CondOpInit10isCompleteEv+0x78>
    bfa0:	subs	x19, x19, #0x8
    bfa4:	b.ne	bf8c <_ZNK4llvm10CondOpInit10isCompleteEv+0x54>  // b.any
    bfa8:	mov	w0, #0x1                   	// #1
    bfac:	b	bfb4 <_ZNK4llvm10CondOpInit10isCompleteEv+0x7c>
    bfb0:	mov	w0, wzr
    bfb4:	ldp	x20, x19, [sp, #32]
    bfb8:	ldp	x22, x21, [sp, #16]
    bfbc:	ldp	x29, x30, [sp], #48
    bfc0:	ret

000000000000bfc4 <_ZNK4llvm10CondOpInit6getBitEj>:
    bfc4:	b	3664 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj>

000000000000bfc8 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE>:
    bfc8:	stp	x29, x30, [sp, #-64]!
    bfcc:	stp	x24, x23, [sp, #16]
    bfd0:	stp	x22, x21, [sp, #32]
    bfd4:	stp	x20, x19, [sp, #48]
    bfd8:	mov	x29, sp
    bfdc:	mov	x23, x6
    bfe0:	mov	x19, x5
    bfe4:	mov	x22, x4
    bfe8:	mov	x20, x3
    bfec:	mov	x24, x2
    bff0:	mov	x21, x0
    bff4:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    bff8:	mov	x0, x21
    bffc:	mov	x1, x24
    c000:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    c004:	cmp	x23, #0x0
    c008:	cset	w8, eq  // eq = none
    c00c:	cbz	x22, c04c <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE+0x84>
    c010:	lsl	x9, x23, #3
    c014:	sub	x23, x9, #0x8
    c018:	lsl	x22, x22, #3
    c01c:	tbnz	w8, #0, c064 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE+0x9c>
    c020:	ldr	x1, [x20], #8
    c024:	mov	x0, x21
    c028:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    c02c:	ldr	x1, [x19], #8
    c030:	mov	x0, x21
    c034:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    c038:	cmp	x23, #0x0
    c03c:	cset	w8, eq  // eq = none
    c040:	subs	x22, x22, #0x8
    c044:	sub	x23, x23, #0x8
    c048:	b.ne	c01c <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE+0x54>  // b.any
    c04c:	tbz	w8, #0, c084 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE+0xbc>
    c050:	ldp	x20, x19, [sp, #48]
    c054:	ldp	x22, x21, [sp, #32]
    c058:	ldp	x24, x23, [sp, #16]
    c05c:	ldp	x29, x30, [sp], #64
    c060:	ret
    c064:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    c068:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    c06c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    c070:	add	x0, x0, #0x0
    c074:	add	x1, x1, #0x0
    c078:	add	x3, x3, #0x0
    c07c:	mov	w2, #0x782                 	// #1922
    c080:	bl	0 <__assert_fail>
    c084:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    c088:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    c08c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    c090:	add	x0, x0, #0x0
    c094:	add	x1, x1, #0x0
    c098:	add	x3, x3, #0x0
    c09c:	mov	w2, #0x786                 	// #1926
    c0a0:	bl	0 <__assert_fail>

000000000000c0a4 <_ZNK4llvm7DagInit7ProfileERNS_16FoldingSetNodeIDE>:
    c0a4:	ldp	x8, x2, [x0, #32]
    c0a8:	ldp	w4, w6, [x0, #48]
    c0ac:	add	x3, x0, #0x38
    c0b0:	mov	x0, x1
    c0b4:	mov	x1, x8
    c0b8:	add	x5, x3, x4, lsl #3
    c0bc:	b	bfc8 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE>

000000000000c0c0 <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE>:
    c0c0:	sub	sp, sp, #0xb0
    c0c4:	stp	x29, x30, [sp, #80]
    c0c8:	str	x27, [sp, #96]
    c0cc:	stp	x26, x25, [sp, #112]
    c0d0:	stp	x24, x23, [sp, #128]
    c0d4:	stp	x22, x21, [sp, #144]
    c0d8:	stp	x20, x19, [sp, #160]
    c0dc:	add	x29, sp, #0x50
    c0e0:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    c0e4:	ldr	d0, [x8]
    c0e8:	mov	x8, sp
    c0ec:	add	x21, x8, #0x10
    c0f0:	str	x21, [sp]
    c0f4:	str	d0, [sp, #8]
    c0f8:	ldr	w2, [x0, #48]
    c0fc:	mov	x19, x0
    c100:	mov	x20, x1
    c104:	cmp	w2, #0x9
    c108:	b.cc	c120 <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0x60>  // b.lo, b.ul, b.last
    c10c:	mov	x0, sp
    c110:	mov	w3, #0x8                   	// #8
    c114:	mov	x1, x21
    c118:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    c11c:	ldr	w2, [x19, #48]
    c120:	mov	w8, w2
    c124:	lsl	x26, x8, #3
    c128:	add	x24, x19, #0x38
    c12c:	mov	w25, wzr
    c130:	cbz	x26, c1b4 <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0xf4>
    c134:	mov	x27, x24
    c138:	ldr	x22, [x27]
    c13c:	mov	x1, x20
    c140:	ldr	x8, [x22]
    c144:	mov	x0, x22
    c148:	ldr	x8, [x8, #96]
    c14c:	blr	x8
    c150:	ldp	w8, w9, [sp, #8]
    c154:	mov	x23, x0
    c158:	cmp	w8, w9
    c15c:	b.cs	c198 <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0xd8>  // b.hs, b.nlast
    c160:	ldr	x9, [sp]
    c164:	str	x23, [x9, w8, uxtw #3]
    c168:	ldp	w8, w9, [sp, #8]
    c16c:	cmp	w8, w9
    c170:	b.cs	c230 <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0x170>  // b.hs, b.nlast
    c174:	add	w8, w8, #0x1
    c178:	cmp	x23, x22
    c17c:	str	w8, [sp, #8]
    c180:	cset	w8, ne  // ne = any
    c184:	subs	x26, x26, #0x8
    c188:	orr	w25, w25, w8
    c18c:	add	x27, x27, #0x8
    c190:	b.ne	c138 <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0x78>  // b.any
    c194:	b	c1b4 <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0xf4>
    c198:	mov	x0, sp
    c19c:	mov	w3, #0x8                   	// #8
    c1a0:	mov	x1, x21
    c1a4:	mov	x2, xzr
    c1a8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    c1ac:	ldr	w8, [sp, #8]
    c1b0:	b	c160 <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0xa0>
    c1b4:	ldr	x0, [x19, #32]
    c1b8:	mov	x1, x20
    c1bc:	ldr	x8, [x0]
    c1c0:	ldr	x8, [x8, #96]
    c1c4:	blr	x8
    c1c8:	tbnz	w25, #0, c1d8 <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0x118>
    c1cc:	ldr	x8, [x19, #32]
    c1d0:	cmp	x0, x8
    c1d4:	b.eq	c1f4 <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0x134>  // b.none
    c1d8:	ldp	w8, w5, [x19, #48]
    c1dc:	ldr	x1, [x19, #40]
    c1e0:	ldr	x2, [sp]
    c1e4:	ldr	w3, [sp, #8]
    c1e8:	add	x4, x24, x8, lsl #3
    c1ec:	bl	5fec <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE>
    c1f0:	mov	x19, x0
    c1f4:	ldr	x0, [sp]
    c1f8:	mov	x8, sp
    c1fc:	add	x8, x8, #0x10
    c200:	cmp	x0, x8
    c204:	b.eq	c20c <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0x14c>  // b.none
    c208:	bl	0 <free>
    c20c:	mov	x0, x19
    c210:	ldp	x20, x19, [sp, #160]
    c214:	ldp	x22, x21, [sp, #144]
    c218:	ldp	x24, x23, [sp, #128]
    c21c:	ldp	x26, x25, [sp, #112]
    c220:	ldr	x27, [sp, #96]
    c224:	ldp	x29, x30, [sp, #80]
    c228:	add	sp, sp, #0xb0
    c22c:	ret
    c230:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    c234:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    c238:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    c23c:	add	x0, x0, #0x0
    c240:	add	x1, x1, #0x0
    c244:	add	x3, x3, #0x0
    c248:	mov	w2, #0x43                  	// #67
    c24c:	bl	0 <__assert_fail>

000000000000c250 <_ZNK4llvm7DagInit10isConcreteEv>:
    c250:	stp	x29, x30, [sp, #-32]!
    c254:	stp	x20, x19, [sp, #16]
    c258:	mov	x29, sp
    c25c:	mov	x19, x0
    c260:	ldr	x0, [x0, #32]
    c264:	ldr	x8, [x0]
    c268:	ldr	x8, [x8, #32]
    c26c:	blr	x8
    c270:	tbz	w0, #0, c2a8 <_ZNK4llvm7DagInit10isConcreteEv+0x58>
    c274:	ldr	w8, [x19, #48]
    c278:	lsl	x20, x8, #3
    c27c:	cbz	x20, c2a0 <_ZNK4llvm7DagInit10isConcreteEv+0x50>
    c280:	add	x19, x19, #0x38
    c284:	ldr	x0, [x19], #8
    c288:	ldr	x8, [x0]
    c28c:	ldr	x8, [x8, #32]
    c290:	blr	x8
    c294:	tbz	w0, #0, c2a8 <_ZNK4llvm7DagInit10isConcreteEv+0x58>
    c298:	subs	x20, x20, #0x8
    c29c:	b.ne	c284 <_ZNK4llvm7DagInit10isConcreteEv+0x34>  // b.any
    c2a0:	mov	w0, #0x1                   	// #1
    c2a4:	b	c2ac <_ZNK4llvm7DagInit10isConcreteEv+0x5c>
    c2a8:	mov	w0, wzr
    c2ac:	ldp	x20, x19, [sp, #16]
    c2b0:	ldp	x29, x30, [sp], #32
    c2b4:	ret

000000000000c2b8 <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb>:
    c2b8:	stp	x29, x30, [sp, #-32]!
    c2bc:	str	x19, [sp, #16]
    c2c0:	mov	x29, sp
    c2c4:	tst	x2, #0x7
    c2c8:	stp	x1, xzr, [x0]
    c2cc:	b.ne	c360 <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb+0xa8>  // b.any
    c2d0:	tst	w3, #0x1
    c2d4:	mov	w9, #0x4                   	// #4
    c2d8:	and	x8, x2, #0xfffffffffffffffb
    c2dc:	csel	x9, x9, xzr, ne  // ne = any
    c2e0:	orr	x8, x9, x8
    c2e4:	str	x8, [x0, #8]
    c2e8:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    c2ec:	add	x8, x8, #0x0
    c2f0:	ldarb	w8, [x8]
    c2f4:	mov	x19, x0
    c2f8:	tbz	w8, #0, c320 <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb+0x68>
    c2fc:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    c300:	add	x1, x1, #0x0
    c304:	mov	x0, x19
    c308:	bl	c3a0 <_ZN4llvm9RecordVal8setValueEPNS_4InitE>
    c30c:	ldr	x8, [x19, #16]
    c310:	cbz	x8, c380 <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb+0xc8>
    c314:	ldr	x19, [sp, #16]
    c318:	ldp	x29, x30, [sp], #32
    c31c:	ret
    c320:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    c324:	add	x0, x0, #0x0
    c328:	bl	0 <__cxa_guard_acquire>
    c32c:	cbz	w0, c2fc <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb+0x44>
    c330:	adrp	x10, 378 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0xe8>
    c334:	ldr	x10, [x10]
    c338:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    c33c:	add	x8, x8, #0x0
    c340:	mov	w9, #0x18                  	// #24
    c344:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    c348:	strh	w9, [x8, #8]
    c34c:	add	x9, x10, #0x10
    c350:	add	x0, x0, #0x0
    c354:	str	x9, [x8]
    c358:	bl	0 <__cxa_guard_release>
    c35c:	b	c2fc <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb+0x44>
    c360:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    c364:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    c368:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    c36c:	add	x0, x0, #0x0
    c370:	add	x1, x1, #0x0
    c374:	add	x3, x3, #0x0
    c378:	mov	w2, #0xb3                  	// #179
    c37c:	bl	0 <__assert_fail>
    c380:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    c384:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    c388:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    c38c:	add	x0, x0, #0x0
    c390:	add	x1, x1, #0x0
    c394:	add	x3, x3, #0x0
    c398:	mov	w2, #0x7e9                 	// #2025
    c39c:	bl	0 <__assert_fail>

000000000000c3a0 <_ZN4llvm9RecordVal8setValueEPNS_4InitE>:
    c3a0:	stp	x29, x30, [sp, #-64]!
    c3a4:	stp	x28, x23, [sp, #16]
    c3a8:	stp	x22, x21, [sp, #32]
    c3ac:	stp	x20, x19, [sp, #48]
    c3b0:	mov	x29, sp
    c3b4:	sub	sp, sp, #0x210
    c3b8:	mov	x19, x0
    c3bc:	cbz	x1, c4ec <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x14c>
    c3c0:	ldr	x8, [x1]
    c3c4:	ldr	x9, [x19, #8]
    c3c8:	mov	x0, x1
    c3cc:	ldr	x10, [x8, #56]
    c3d0:	and	x8, x9, #0xfffffffffffffff8
    c3d4:	mov	x1, x8
    c3d8:	blr	x10
    c3dc:	str	x0, [x19, #16]
    c3e0:	cbz	x0, c524 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x184>
    c3e4:	ldrb	w8, [x0, #8]
    c3e8:	sub	w8, w8, #0x1
    c3ec:	cmp	w8, #0x16
    c3f0:	b.hi	c410 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x70>  // b.pmore
    c3f4:	ldr	x0, [x0, #16]
    c3f8:	ldr	x9, [x19, #8]
    c3fc:	ldr	x8, [x0]
    c400:	and	x1, x9, #0xfffffffffffffff8
    c404:	ldr	x8, [x8, #32]
    c408:	blr	x8
    c40c:	tbz	w0, #0, c588 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x1e8>
    c410:	ldr	x8, [x19, #8]
    c414:	ands	x22, x8, #0xfffffffffffffff8
    c418:	b.eq	c568 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x1c8>  // b.none
    c41c:	ldr	w8, [x22, #8]
    c420:	cmp	w8, #0x1
    c424:	b.ne	c524 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x184>  // b.any
    c428:	ldr	x8, [x19, #16]
    c42c:	cbz	x8, c5a8 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x208>
    c430:	ldrb	w8, [x8, #8]
    c434:	cmp	w8, #0x3
    c438:	b.eq	c524 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x184>  // b.none
    c43c:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    c440:	ldr	d0, [x8]
    c444:	mov	x8, sp
    c448:	add	x20, x8, #0x10
    c44c:	str	x20, [sp]
    c450:	str	d0, [sp, #8]
    c454:	ldr	w21, [x22, #24]
    c458:	cmp	w21, #0x41
    c45c:	b.cc	c478 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0xd8>  // b.lo, b.ul, b.last
    c460:	mov	x0, sp
    c464:	mov	w3, #0x8                   	// #8
    c468:	mov	x1, x20
    c46c:	mov	x2, x21
    c470:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    c474:	ldr	w21, [x22, #24]
    c478:	cbz	w21, c4f8 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x158>
    c47c:	mov	w22, wzr
    c480:	ldr	x0, [x19, #16]
    c484:	mov	w1, w22
    c488:	ldr	x8, [x0]
    c48c:	ldr	x8, [x8, #104]
    c490:	blr	x8
    c494:	ldp	w8, w9, [sp, #8]
    c498:	mov	x23, x0
    c49c:	cmp	w8, w9
    c4a0:	b.cs	c4d0 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x130>  // b.hs, b.nlast
    c4a4:	ldr	x9, [sp]
    c4a8:	str	x23, [x9, w8, uxtw #3]
    c4ac:	ldp	w8, w9, [sp, #8]
    c4b0:	cmp	w8, w9
    c4b4:	b.cs	c548 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x1a8>  // b.hs, b.nlast
    c4b8:	add	w22, w22, #0x1
    c4bc:	add	w8, w8, #0x1
    c4c0:	cmp	w21, w22
    c4c4:	str	w8, [sp, #8]
    c4c8:	b.ne	c480 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0xe0>  // b.any
    c4cc:	b	c4fc <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x15c>
    c4d0:	mov	x0, sp
    c4d4:	mov	w3, #0x8                   	// #8
    c4d8:	mov	x1, x20
    c4dc:	mov	x2, xzr
    c4e0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    c4e4:	ldr	w8, [sp, #8]
    c4e8:	b	c4a4 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x104>
    c4ec:	mov	w0, wzr
    c4f0:	str	xzr, [x19, #16]
    c4f4:	b	c530 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x190>
    c4f8:	ldr	w8, [sp, #8]
    c4fc:	ldr	x0, [sp]
    c500:	mov	w1, w8
    c504:	bl	176c <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    c508:	str	x0, [x19, #16]
    c50c:	ldr	x0, [sp]
    c510:	mov	x8, sp
    c514:	add	x8, x8, #0x10
    c518:	cmp	x0, x8
    c51c:	b.eq	c524 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x184>  // b.none
    c520:	bl	0 <free>
    c524:	ldr	x8, [x19, #16]
    c528:	cmp	x8, #0x0
    c52c:	cset	w0, eq  // eq = none
    c530:	add	sp, sp, #0x210
    c534:	ldp	x20, x19, [sp, #48]
    c538:	ldp	x22, x21, [sp, #32]
    c53c:	ldp	x28, x23, [sp, #16]
    c540:	ldp	x29, x30, [sp], #64
    c544:	ret
    c548:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    c54c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    c550:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    c554:	add	x0, x0, #0x0
    c558:	add	x1, x1, #0x0
    c55c:	add	x3, x3, #0x0
    c560:	mov	w2, #0x43                  	// #67
    c564:	bl	0 <__assert_fail>
    c568:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    c56c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    c570:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    c574:	add	x0, x0, #0x0
    c578:	add	x1, x1, #0x0
    c57c:	add	x3, x3, #0x0
    c580:	mov	w2, #0x69                  	// #105
    c584:	bl	0 <__assert_fail>
    c588:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    c58c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    c590:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    c594:	add	x0, x0, #0x0
    c598:	add	x1, x1, #0x0
    c59c:	add	x3, x3, #0x0
    c5a0:	mov	w2, #0x7f5                 	// #2037
    c5a4:	bl	0 <__assert_fail>
    c5a8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    c5ac:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    c5b0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    c5b4:	add	x0, x0, #0x0
    c5b8:	add	x1, x1, #0x0
    c5bc:	add	x3, x3, #0x0
    c5c0:	mov	w2, #0x69                  	// #105
    c5c4:	bl	0 <__assert_fail>

000000000000c5c8 <_ZNK4llvm9RecordVal7getNameEv>:
    c5c8:	stp	x29, x30, [sp, #-16]!
    c5cc:	mov	x29, sp
    c5d0:	ldr	x8, [x0]
    c5d4:	cbz	x8, c5f0 <_ZNK4llvm9RecordVal7getNameEv+0x28>
    c5d8:	ldrb	w9, [x8, #8]
    c5dc:	cmp	w9, #0x12
    c5e0:	b.ne	c610 <_ZNK4llvm9RecordVal7getNameEv+0x48>  // b.any
    c5e4:	ldp	x0, x1, [x8, #24]
    c5e8:	ldp	x29, x30, [sp], #16
    c5ec:	ret
    c5f0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    c5f4:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    c5f8:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    c5fc:	add	x0, x0, #0x0
    c600:	add	x1, x1, #0x0
    c604:	add	x3, x3, #0x0
    c608:	mov	w2, #0x69                  	// #105
    c60c:	bl	0 <__assert_fail>
    c610:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    c614:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    c618:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    c61c:	add	x0, x0, #0x0
    c620:	add	x1, x1, #0x0
    c624:	add	x3, x3, #0x0
    c628:	mov	w2, #0x108                 	// #264
    c62c:	bl	0 <__assert_fail>

000000000000c630 <_ZNK4llvm9RecordVal4dumpEv>:
    c630:	stp	x29, x30, [sp, #-32]!
    c634:	str	x19, [sp, #16]
    c638:	mov	x29, sp
    c63c:	mov	x19, x0
    c640:	bl	0 <_ZN4llvm4errsEv>
    c644:	ldp	x10, x9, [x0, #16]
    c648:	mov	x8, x0
    c64c:	sub	x10, x10, x9
    c650:	cmp	x10, #0x1
    c654:	b.hi	c674 <_ZNK4llvm9RecordVal4dumpEv+0x44>  // b.pmore
    c658:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    c65c:	add	x1, x1, #0x0
    c660:	mov	w2, #0x2                   	// #2
    c664:	mov	x0, x8
    c668:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    c66c:	mov	x8, x0
    c670:	b	c688 <_ZNK4llvm9RecordVal4dumpEv+0x58>
    c674:	mov	w10, #0x2020                	// #8224
    c678:	strh	w10, [x9]
    c67c:	ldr	x9, [x8, #24]
    c680:	add	x9, x9, #0x2
    c684:	str	x9, [x8, #24]
    c688:	mov	x0, x19
    c68c:	ldr	x19, [sp, #16]
    c690:	mov	w2, #0x1                   	// #1
    c694:	mov	x1, x8
    c698:	ldp	x29, x30, [sp], #32
    c69c:	b	c6a0 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb>

000000000000c6a0 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb>:
    c6a0:	sub	sp, sp, #0x60
    c6a4:	stp	x29, x30, [sp, #32]
    c6a8:	str	x23, [sp, #48]
    c6ac:	stp	x22, x21, [sp, #64]
    c6b0:	stp	x20, x19, [sp, #80]
    c6b4:	add	x29, sp, #0x20
    c6b8:	ldrb	w8, [x0, #8]
    c6bc:	mov	w20, w2
    c6c0:	mov	x21, x0
    c6c4:	mov	x19, x1
    c6c8:	tbz	w8, #2, c714 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x74>
    c6cc:	ldp	x9, x8, [x19, #16]
    c6d0:	sub	x9, x9, x8
    c6d4:	cmp	x9, #0x5
    c6d8:	b.hi	c6f4 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x54>  // b.pmore
    c6dc:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    c6e0:	add	x1, x1, #0x0
    c6e4:	mov	w2, #0x6                   	// #6
    c6e8:	mov	x0, x19
    c6ec:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    c6f0:	b	c714 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x74>
    c6f4:	mov	w10, #0x6966                	// #26982
    c6f8:	mov	w9, #0x2064                	// #8292
    c6fc:	movk	w10, #0x6c65, lsl #16
    c700:	strh	w9, [x8, #4]
    c704:	str	w10, [x8]
    c708:	ldr	x8, [x19, #24]
    c70c:	add	x8, x8, #0x6
    c710:	str	x8, [x19, #24]
    c714:	ldr	x8, [x21, #8]
    c718:	mov	x22, sp
    c71c:	and	x0, x8, #0xfffffffffffffff8
    c720:	ldr	x8, [x0]
    c724:	ldr	x9, [x8, #16]
    c728:	mov	x8, sp
    c72c:	blr	x9
    c730:	ldp	x1, x2, [sp]
    c734:	mov	x0, x19
    c738:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    c73c:	ldr	x0, [sp]
    c740:	add	x8, x22, #0x10
    c744:	cmp	x0, x8
    c748:	b.eq	c750 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0xb0>  // b.none
    c74c:	bl	0 <_ZdlPv>
    c750:	ldp	x9, x8, [x19, #16]
    c754:	cmp	x9, x8
    c758:	b.ne	c778 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0xd8>  // b.any
    c75c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    c760:	add	x1, x1, #0x0
    c764:	mov	w2, #0x1                   	// #1
    c768:	mov	x0, x19
    c76c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    c770:	mov	x22, x0
    c774:	b	c790 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0xf0>
    c778:	mov	w9, #0x20                  	// #32
    c77c:	strb	w9, [x8]
    c780:	ldr	x8, [x19, #24]
    c784:	mov	x22, x19
    c788:	add	x8, x8, #0x1
    c78c:	str	x8, [x19, #24]
    c790:	ldr	x0, [x21]
    c794:	mov	x23, sp
    c798:	ldr	x8, [x0]
    c79c:	ldr	x9, [x8, #48]
    c7a0:	mov	x8, sp
    c7a4:	blr	x9
    c7a8:	ldp	x1, x2, [sp]
    c7ac:	mov	x0, x22
    c7b0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    c7b4:	ldr	x0, [sp]
    c7b8:	add	x8, x23, #0x10
    c7bc:	cmp	x0, x8
    c7c0:	b.eq	c7c8 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x128>  // b.none
    c7c4:	bl	0 <_ZdlPv>
    c7c8:	ldr	x8, [x21, #16]
    c7cc:	cbz	x8, c854 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x1b4>
    c7d0:	ldp	x9, x8, [x19, #16]
    c7d4:	sub	x9, x9, x8
    c7d8:	cmp	x9, #0x2
    c7dc:	b.hi	c7fc <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x15c>  // b.pmore
    c7e0:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    c7e4:	add	x1, x1, #0x0
    c7e8:	mov	w2, #0x3                   	// #3
    c7ec:	mov	x0, x19
    c7f0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    c7f4:	mov	x22, x0
    c7f8:	b	c81c <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x17c>
    c7fc:	mov	w9, #0x20                  	// #32
    c800:	mov	w10, #0x3d20                	// #15648
    c804:	strb	w9, [x8, #2]
    c808:	strh	w10, [x8]
    c80c:	ldr	x8, [x19, #24]
    c810:	mov	x22, x19
    c814:	add	x8, x8, #0x3
    c818:	str	x8, [x19, #24]
    c81c:	ldr	x0, [x21, #16]
    c820:	mov	x21, sp
    c824:	ldr	x8, [x0]
    c828:	ldr	x9, [x8, #40]
    c82c:	mov	x8, sp
    c830:	blr	x9
    c834:	ldp	x1, x2, [sp]
    c838:	mov	x0, x22
    c83c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    c840:	ldr	x0, [sp]
    c844:	add	x8, x21, #0x10
    c848:	cmp	x0, x8
    c84c:	b.eq	c854 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x1b4>  // b.none
    c850:	bl	0 <_ZdlPv>
    c854:	tbz	w20, #0, c894 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x1f4>
    c858:	ldp	x9, x8, [x19, #16]
    c85c:	sub	x9, x9, x8
    c860:	cmp	x9, #0x1
    c864:	b.hi	c880 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x1e0>  // b.pmore
    c868:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    c86c:	add	x1, x1, #0x0
    c870:	mov	w2, #0x2                   	// #2
    c874:	mov	x0, x19
    c878:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    c87c:	b	c894 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x1f4>
    c880:	mov	w9, #0xa3b                 	// #2619
    c884:	strh	w9, [x8]
    c888:	ldr	x8, [x19, #24]
    c88c:	add	x8, x8, #0x2
    c890:	str	x8, [x19, #24]
    c894:	ldp	x20, x19, [sp, #80]
    c898:	ldp	x22, x21, [sp, #64]
    c89c:	ldr	x23, [sp, #48]
    c8a0:	ldp	x29, x30, [sp, #32]
    c8a4:	add	sp, sp, #0x60
    c8a8:	ret

000000000000c8ac <_ZN4llvm6Record9checkNameEv>:
    c8ac:	sub	sp, sp, #0xd0
    c8b0:	stp	x29, x30, [sp, #160]
    c8b4:	stp	x22, x21, [sp, #176]
    c8b8:	stp	x20, x19, [sp, #192]
    c8bc:	add	x29, sp, #0xa0
    c8c0:	mov	x8, x0
    c8c4:	ldr	x0, [x0]
    c8c8:	cbz	x0, c904 <_ZN4llvm6Record9checkNameEv+0x58>
    c8cc:	ldrb	w9, [x0, #8]
    c8d0:	sub	w9, w9, #0x1
    c8d4:	cmp	w9, #0x17
    c8d8:	b.cs	c924 <_ZN4llvm6Record9checkNameEv+0x78>  // b.hs, b.nlast
    c8dc:	ldr	x9, [x0, #16]
    c8e0:	cbz	x9, c944 <_ZN4llvm6Record9checkNameEv+0x98>
    c8e4:	ldr	w9, [x9, #8]
    c8e8:	cmp	w9, #0x4
    c8ec:	b.ne	c964 <_ZN4llvm6Record9checkNameEv+0xb8>  // b.any
    c8f0:	ldp	x20, x19, [sp, #192]
    c8f4:	ldp	x22, x21, [sp, #176]
    c8f8:	ldp	x29, x30, [sp, #160]
    c8fc:	add	sp, sp, #0xd0
    c900:	ret
    c904:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    c908:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    c90c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    c910:	add	x0, x0, #0x0
    c914:	add	x1, x1, #0x0
    c918:	add	x3, x3, #0x0
    c91c:	mov	w2, #0x69                  	// #105
    c920:	bl	0 <__assert_fail>
    c924:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    c928:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    c92c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    c930:	add	x0, x0, #0x0
    c934:	add	x1, x1, #0x0
    c938:	add	x3, x3, #0x0
    c93c:	mov	w2, #0x108                 	// #264
    c940:	bl	0 <__assert_fail>
    c944:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    c948:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    c94c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    c950:	add	x0, x0, #0x0
    c954:	add	x1, x1, #0x0
    c958:	add	x3, x3, #0x0
    c95c:	mov	w2, #0x69                  	// #105
    c960:	bl	0 <__assert_fail>
    c964:	ldr	x19, [x8, #8]
    c968:	ldr	w20, [x8, #16]
    c96c:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    c970:	add	x8, x8, #0x0
    c974:	mov	w21, #0x103                 	// #259
    c978:	stp	x8, xzr, [x29, #-72]
    c97c:	sturh	w21, [x29, #-56]
    c980:	ldr	x8, [x0]
    c984:	add	x22, sp, #0x20
    c988:	ldr	x9, [x8, #40]
    c98c:	add	x8, sp, #0x20
    c990:	blr	x9
    c994:	mov	w8, #0x104                 	// #260
    c998:	strh	w8, [sp, #80]
    c99c:	sub	x8, x29, #0x30
    c9a0:	sub	x0, x29, #0x48
    c9a4:	add	x1, sp, #0x40
    c9a8:	stp	x22, xzr, [sp, #64]
    c9ac:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    c9b0:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    c9b4:	add	x8, x8, #0x0
    c9b8:	stp	x8, xzr, [sp, #8]
    c9bc:	sub	x8, x29, #0x18
    c9c0:	sub	x0, x29, #0x30
    c9c4:	add	x1, sp, #0x8
    c9c8:	strh	w21, [sp, #24]
    c9cc:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    c9d0:	sub	x2, x29, #0x18
    c9d4:	mov	x0, x19
    c9d8:	mov	x1, x20
    c9dc:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>

000000000000c9e0 <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE>:
    c9e0:	stp	x29, x30, [sp, #-80]!
    c9e4:	str	x25, [sp, #16]
    c9e8:	stp	x24, x23, [sp, #32]
    c9ec:	stp	x22, x21, [sp, #48]
    c9f0:	stp	x20, x19, [sp, #64]
    c9f4:	mov	x29, sp
    c9f8:	ldr	w21, [x0, #96]
    c9fc:	cbz	w21, ca78 <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE+0x98>
    ca00:	ldr	x22, [x0, #88]
    ca04:	mov	x19, x1
    ca08:	add	x20, x1, #0x10
    ca0c:	mov	w23, #0x18                  	// #24
    ca10:	madd	x8, x21, x23, x22
    ca14:	ldur	x25, [x8, #-24]
    ca18:	ldr	w24, [x25, #96]
    ca1c:	cmp	x21, x24
    ca20:	b.ls	ca90 <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE+0xb0>  // b.plast
    ca24:	ldp	w8, w9, [x19, #8]
    ca28:	cmp	w8, w9
    ca2c:	b.cs	ca5c <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE+0x7c>  // b.hs, b.nlast
    ca30:	ldr	x9, [x19]
    ca34:	str	x25, [x9, w8, uxtw #3]
    ca38:	ldp	w8, w9, [x19, #8]
    ca3c:	cmp	w8, w9
    ca40:	b.cs	cab0 <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE+0xd0>  // b.hs, b.nlast
    ca44:	mvn	x9, x24
    ca48:	add	x21, x21, x9
    ca4c:	add	w8, w8, #0x1
    ca50:	str	w8, [x19, #8]
    ca54:	cbnz	x21, ca10 <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE+0x30>
    ca58:	b	ca78 <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE+0x98>
    ca5c:	mov	w3, #0x8                   	// #8
    ca60:	mov	x0, x19
    ca64:	mov	x1, x20
    ca68:	mov	x2, xzr
    ca6c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    ca70:	ldr	w8, [x19, #8]
    ca74:	b	ca30 <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE+0x50>
    ca78:	ldp	x20, x19, [sp, #64]
    ca7c:	ldp	x22, x21, [sp, #48]
    ca80:	ldp	x24, x23, [sp, #32]
    ca84:	ldr	x25, [sp, #16]
    ca88:	ldp	x29, x30, [sp], #80
    ca8c:	ret
    ca90:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    ca94:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    ca98:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    ca9c:	add	x0, x0, #0x0
    caa0:	add	x1, x1, #0x0
    caa4:	add	x3, x3, #0x0
    caa8:	mov	w2, #0xcc                  	// #204
    caac:	bl	0 <__assert_fail>
    cab0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    cab4:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    cab8:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    cabc:	add	x0, x0, #0x0
    cac0:	add	x1, x1, #0x0
    cac4:	add	x3, x3, #0x0
    cac8:	mov	w2, #0x43                  	// #67
    cacc:	bl	0 <__assert_fail>

000000000000cad0 <_ZN4llvm6Record7setNameEPNS_4InitE>:
    cad0:	str	x1, [x0]
    cad4:	b	c8ac <_ZN4llvm6Record9checkNameEv>

000000000000cad8 <_ZN4llvm6Record19resolveReferencesToEPKNS_9RecordValE>:
    cad8:	sub	sp, sp, #0x30
    cadc:	stp	x29, x30, [sp, #32]
    cae0:	add	x29, sp, #0x20
    cae4:	strb	wzr, [sp, #16]
    cae8:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    caec:	ldr	x8, [x8]
    caf0:	mov	x2, x1
    caf4:	str	x1, [sp, #24]
    caf8:	mov	x1, sp
    cafc:	add	x8, x8, #0x10
    cb00:	stp	x8, x0, [sp]
    cb04:	bl	aa58 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE>
    cb08:	ldp	x29, x30, [sp, #32]
    cb0c:	add	sp, sp, #0x30
    cb10:	ret

000000000000cb14 <_ZNK4llvm6Record4dumpEv>:
    cb14:	stp	x29, x30, [sp, #-32]!
    cb18:	str	x19, [sp, #16]
    cb1c:	mov	x29, sp
    cb20:	mov	x19, x0
    cb24:	bl	0 <_ZN4llvm4errsEv>
    cb28:	mov	x1, x19
    cb2c:	ldr	x19, [sp, #16]
    cb30:	ldp	x29, x30, [sp], #32
    cb34:	b	cb38 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE>

000000000000cb38 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE>:
    cb38:	sub	sp, sp, #0x70
    cb3c:	stp	x29, x30, [sp, #32]
    cb40:	stp	x26, x25, [sp, #48]
    cb44:	stp	x24, x23, [sp, #64]
    cb48:	stp	x22, x21, [sp, #80]
    cb4c:	stp	x20, x19, [sp, #96]
    cb50:	add	x29, sp, #0x20
    cb54:	ldr	x9, [x1]
    cb58:	mov	x19, x0
    cb5c:	mov	x20, x1
    cb60:	mov	x21, sp
    cb64:	ldr	x8, [x9]
    cb68:	mov	x0, x9
    cb6c:	ldr	x10, [x8, #48]
    cb70:	mov	x8, sp
    cb74:	blr	x10
    cb78:	ldp	x1, x2, [sp]
    cb7c:	mov	x0, x19
    cb80:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    cb84:	ldr	x0, [sp]
    cb88:	add	x8, x21, #0x10
    cb8c:	cmp	x0, x8
    cb90:	b.eq	cb98 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x60>  // b.none
    cb94:	bl	0 <_ZdlPv>
    cb98:	ldr	w21, [x20, #64]
    cb9c:	cbz	w21, ccb8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x180>
    cba0:	ldp	x9, x8, [x19, #16]
    cba4:	ldr	x22, [x20, #56]
    cba8:	cmp	x9, x8
    cbac:	b.ne	cbc8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x90>  // b.any
    cbb0:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    cbb4:	add	x1, x1, #0x0
    cbb8:	mov	w2, #0x1                   	// #1
    cbbc:	mov	x0, x19
    cbc0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    cbc4:	b	cbdc <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0xa4>
    cbc8:	mov	w9, #0x3c                  	// #60
    cbcc:	strb	w9, [x8]
    cbd0:	ldr	x8, [x19, #24]
    cbd4:	add	x8, x8, #0x1
    cbd8:	str	x8, [x19, #24]
    cbdc:	add	x23, x22, x21, lsl #3
    cbe0:	adrp	x21, 0 <_ZNK4llvm5RecTy4dumpEv>
    cbe4:	mov	w8, wzr
    cbe8:	add	x21, x21, #0x0
    cbec:	mov	w24, #0x202c                	// #8236
    cbf0:	ldr	x25, [x22]
    cbf4:	tbz	w8, #0, cc2c <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0xf4>
    cbf8:	ldp	x9, x8, [x19, #16]
    cbfc:	sub	x9, x9, x8
    cc00:	cmp	x9, #0x1
    cc04:	b.hi	cc1c <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0xe4>  // b.pmore
    cc08:	mov	w2, #0x2                   	// #2
    cc0c:	mov	x0, x19
    cc10:	mov	x1, x21
    cc14:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    cc18:	b	cc2c <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0xf4>
    cc1c:	strh	w24, [x8]
    cc20:	ldr	x8, [x19, #24]
    cc24:	add	x8, x8, #0x2
    cc28:	str	x8, [x19, #24]
    cc2c:	ldr	w8, [x20, #80]
    cc30:	cbz	w8, cfd8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x4a0>
    cc34:	ldr	x0, [x20, #72]
    cc38:	add	x8, x8, x8, lsl #1
    cc3c:	lsl	x8, x8, #3
    cc40:	mov	x9, x0
    cc44:	ldr	x10, [x9], #24
    cc48:	cmp	x10, x25
    cc4c:	b.eq	cc60 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x128>  // b.none
    cc50:	subs	x8, x8, #0x18
    cc54:	mov	x0, x9
    cc58:	b.ne	cc44 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x10c>  // b.any
    cc5c:	b	cfd8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x4a0>
    cc60:	cbz	x0, cfd8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x4a0>
    cc64:	mov	x1, x19
    cc68:	mov	w2, wzr
    cc6c:	bl	c6a0 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb>
    cc70:	add	x22, x22, #0x8
    cc74:	cmp	x22, x23
    cc78:	mov	w8, #0x1                   	// #1
    cc7c:	b.ne	cbf0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0xb8>  // b.any
    cc80:	ldp	x9, x8, [x19, #16]
    cc84:	cmp	x9, x8
    cc88:	b.ne	cca4 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x16c>  // b.any
    cc8c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    cc90:	add	x1, x1, #0x0
    cc94:	mov	w2, #0x1                   	// #1
    cc98:	mov	x0, x19
    cc9c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    cca0:	b	ccb8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x180>
    cca4:	mov	w9, #0x3e                  	// #62
    cca8:	strb	w9, [x8]
    ccac:	ldr	x8, [x19, #24]
    ccb0:	add	x8, x8, #0x1
    ccb4:	str	x8, [x19, #24]
    ccb8:	ldp	x9, x8, [x19, #16]
    ccbc:	sub	x9, x9, x8
    ccc0:	cmp	x9, #0x1
    ccc4:	b.hi	cce8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x1b0>  // b.pmore
    ccc8:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    cccc:	add	x1, x1, #0x0
    ccd0:	mov	w2, #0x2                   	// #2
    ccd4:	mov	x0, x19
    ccd8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    ccdc:	ldr	w21, [x20, #96]
    cce0:	cbnz	w21, cd04 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x1cc>
    cce4:	b	cde8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x2b0>
    cce8:	mov	w9, #0x7b20                	// #31520
    ccec:	strh	w9, [x8]
    ccf0:	ldr	x8, [x19, #24]
    ccf4:	add	x8, x8, #0x2
    ccf8:	str	x8, [x19, #24]
    ccfc:	ldr	w21, [x20, #96]
    cd00:	cbz	w21, cde8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x2b0>
    cd04:	ldp	x9, x8, [x19, #16]
    cd08:	ldr	x23, [x20, #88]
    cd0c:	sub	x9, x9, x8
    cd10:	cmp	x9, #0x2
    cd14:	b.hi	cd30 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x1f8>  // b.pmore
    cd18:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    cd1c:	add	x1, x1, #0x0
    cd20:	mov	w2, #0x3                   	// #3
    cd24:	mov	x0, x19
    cd28:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    cd2c:	b	cd4c <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x214>
    cd30:	mov	w9, #0x2f                  	// #47
    cd34:	mov	w10, #0x2f09                	// #12041
    cd38:	strb	w9, [x8, #2]
    cd3c:	strh	w10, [x8]
    cd40:	ldr	x8, [x19, #24]
    cd44:	add	x8, x8, #0x3
    cd48:	str	x8, [x19, #24]
    cd4c:	mov	x8, sp
    cd50:	add	x9, x21, x21, lsl #1
    cd54:	adrp	x21, 0 <_ZNK4llvm5RecTy4dumpEv>
    cd58:	add	x21, x21, #0x0
    cd5c:	add	x24, x8, #0x10
    cd60:	lsl	x25, x9, #3
    cd64:	mov	w26, #0x20                  	// #32
    cd68:	b	cd78 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x240>
    cd6c:	subs	x25, x25, #0x18
    cd70:	add	x23, x23, #0x18
    cd74:	b.eq	cde8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x2b0>  // b.none
    cd78:	ldp	x9, x8, [x19, #16]
    cd7c:	cmp	x9, x8
    cd80:	b.ne	cd9c <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x264>  // b.any
    cd84:	mov	w2, #0x1                   	// #1
    cd88:	mov	x0, x19
    cd8c:	mov	x1, x21
    cd90:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    cd94:	mov	x22, x0
    cd98:	b	cdb0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x278>
    cd9c:	strb	w26, [x8]
    cda0:	ldr	x8, [x19, #24]
    cda4:	mov	x22, x19
    cda8:	add	x8, x8, #0x1
    cdac:	str	x8, [x19, #24]
    cdb0:	ldr	x8, [x23]
    cdb4:	ldr	x0, [x8]
    cdb8:	ldr	x8, [x0]
    cdbc:	ldr	x9, [x8, #48]
    cdc0:	mov	x8, sp
    cdc4:	blr	x9
    cdc8:	ldp	x1, x2, [sp]
    cdcc:	mov	x0, x22
    cdd0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    cdd4:	ldr	x0, [sp]
    cdd8:	cmp	x0, x24
    cddc:	b.eq	cd6c <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x234>  // b.none
    cde0:	bl	0 <_ZdlPv>
    cde4:	b	cd6c <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x234>
    cde8:	ldp	x9, x8, [x19, #16]
    cdec:	cmp	x9, x8
    cdf0:	b.ne	ce14 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x2dc>  // b.any
    cdf4:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    cdf8:	add	x1, x1, #0x0
    cdfc:	mov	w2, #0x1                   	// #1
    ce00:	mov	x0, x19
    ce04:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    ce08:	ldr	w8, [x20, #80]
    ce0c:	cbnz	w8, ce30 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x2f8>
    ce10:	b	cf78 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x440>
    ce14:	mov	w9, #0xa                   	// #10
    ce18:	strb	w9, [x8]
    ce1c:	ldr	x8, [x19, #24]
    ce20:	add	x8, x8, #0x1
    ce24:	str	x8, [x19, #24]
    ce28:	ldr	w8, [x20, #80]
    ce2c:	cbz	w8, cf78 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x440>
    ce30:	ldr	x21, [x20, #72]
    ce34:	mov	w9, #0x18                  	// #24
    ce38:	adrp	x22, 0 <_ZNK4llvm5RecTy4dumpEv>
    ce3c:	add	x22, x22, #0x0
    ce40:	madd	x23, x8, x9, x21
    ce44:	mov	w24, #0x2020                	// #8224
    ce48:	b	ce78 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x340>
    ce4c:	strh	w24, [x8]
    ce50:	ldr	x8, [x19, #24]
    ce54:	mov	x1, x19
    ce58:	add	x8, x8, #0x2
    ce5c:	str	x8, [x19, #24]
    ce60:	mov	w2, #0x1                   	// #1
    ce64:	mov	x0, x21
    ce68:	bl	c6a0 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb>
    ce6c:	add	x21, x21, #0x18
    ce70:	cmp	x21, x23
    ce74:	b.eq	ced0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x398>  // b.none
    ce78:	ldrb	w8, [x21, #8]
    ce7c:	tbz	w8, #2, ce6c <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x334>
    ce80:	ldr	w10, [x20, #64]
    ce84:	cbz	w10, cea8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x370>
    ce88:	ldr	x8, [x21]
    ce8c:	ldr	x9, [x20, #56]
    ce90:	lsl	x10, x10, #3
    ce94:	ldr	x11, [x9], #8
    ce98:	cmp	x11, x8
    ce9c:	b.eq	ce6c <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x334>  // b.none
    cea0:	subs	x10, x10, #0x8
    cea4:	b.ne	ce94 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x35c>  // b.any
    cea8:	ldp	x9, x8, [x19, #16]
    ceac:	sub	x9, x9, x8
    ceb0:	cmp	x9, #0x1
    ceb4:	b.hi	ce4c <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x314>  // b.pmore
    ceb8:	mov	w2, #0x2                   	// #2
    cebc:	mov	x0, x19
    cec0:	mov	x1, x22
    cec4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    cec8:	mov	x1, x0
    cecc:	b	ce60 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x328>
    ced0:	ldr	w8, [x20, #80]
    ced4:	cbz	w8, cf78 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x440>
    ced8:	ldr	x21, [x20, #72]
    cedc:	mov	w9, #0x18                  	// #24
    cee0:	adrp	x22, 0 <_ZNK4llvm5RecTy4dumpEv>
    cee4:	add	x22, x22, #0x0
    cee8:	madd	x23, x8, x9, x21
    ceec:	mov	w24, #0x2020                	// #8224
    cef0:	b	cf20 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x3e8>
    cef4:	strh	w24, [x8]
    cef8:	ldr	x8, [x19, #24]
    cefc:	mov	x1, x19
    cf00:	add	x8, x8, #0x2
    cf04:	str	x8, [x19, #24]
    cf08:	mov	w2, #0x1                   	// #1
    cf0c:	mov	x0, x21
    cf10:	bl	c6a0 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb>
    cf14:	add	x21, x21, #0x18
    cf18:	cmp	x21, x23
    cf1c:	b.eq	cf78 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x440>  // b.none
    cf20:	ldrb	w8, [x21, #8]
    cf24:	tbnz	w8, #2, cf14 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x3dc>
    cf28:	ldr	w10, [x20, #64]
    cf2c:	cbz	w10, cf50 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x418>
    cf30:	ldr	x8, [x21]
    cf34:	ldr	x9, [x20, #56]
    cf38:	lsl	x10, x10, #3
    cf3c:	ldr	x11, [x9], #8
    cf40:	cmp	x11, x8
    cf44:	b.eq	cf14 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x3dc>  // b.none
    cf48:	subs	x10, x10, #0x8
    cf4c:	b.ne	cf3c <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x404>  // b.any
    cf50:	ldp	x9, x8, [x19, #16]
    cf54:	sub	x9, x9, x8
    cf58:	cmp	x9, #0x1
    cf5c:	b.hi	cef4 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x3bc>  // b.pmore
    cf60:	mov	w2, #0x2                   	// #2
    cf64:	mov	x0, x19
    cf68:	mov	x1, x22
    cf6c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    cf70:	mov	x1, x0
    cf74:	b	cf08 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x3d0>
    cf78:	ldp	x9, x8, [x19, #16]
    cf7c:	sub	x9, x9, x8
    cf80:	cmp	x9, #0x1
    cf84:	b.hi	cfa4 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x46c>  // b.pmore
    cf88:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    cf8c:	add	x1, x1, #0x0
    cf90:	mov	w2, #0x2                   	// #2
    cf94:	mov	x0, x19
    cf98:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    cf9c:	mov	x19, x0
    cfa0:	b	cfb8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x480>
    cfa4:	mov	w9, #0xa7d                 	// #2685
    cfa8:	strh	w9, [x8]
    cfac:	ldr	x8, [x19, #24]
    cfb0:	add	x8, x8, #0x2
    cfb4:	str	x8, [x19, #24]
    cfb8:	mov	x0, x19
    cfbc:	ldp	x20, x19, [sp, #96]
    cfc0:	ldp	x22, x21, [sp, #80]
    cfc4:	ldp	x24, x23, [sp, #64]
    cfc8:	ldp	x26, x25, [sp, #48]
    cfcc:	ldp	x29, x30, [sp, #32]
    cfd0:	add	sp, sp, #0x70
    cfd4:	ret
    cfd8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    cfdc:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    cfe0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    cfe4:	add	x0, x0, #0x0
    cfe8:	add	x1, x1, #0x0
    cfec:	add	x3, x3, #0x0
    cff0:	mov	w2, #0x87c                 	// #2172
    cff4:	bl	0 <__assert_fail>

000000000000cff8 <_ZNK4llvm6Record12getValueInitENS_9StringRefE>:
    cff8:	sub	sp, sp, #0x100
    cffc:	stp	x29, x30, [sp, #208]
    d000:	str	x21, [sp, #224]
    d004:	stp	x20, x19, [sp, #240]
    d008:	add	x29, sp, #0xd0
    d00c:	mov	x19, x0
    d010:	stp	x1, x2, [x29, #-16]
    d014:	mov	x0, x1
    d018:	mov	x1, x2
    d01c:	bl	29c4 <_ZN4llvm10StringInit3getENS_9StringRefE>
    d020:	ldr	w9, [x19, #80]
    d024:	cbz	w9, d050 <_ZNK4llvm6Record12getValueInitENS_9StringRefE+0x58>
    d028:	ldr	x8, [x19, #72]
    d02c:	add	x9, x9, x9, lsl #1
    d030:	lsl	x9, x9, #3
    d034:	mov	x10, x8
    d038:	ldr	x11, [x10], #24
    d03c:	cmp	x11, x0
    d040:	b.eq	d0f0 <_ZNK4llvm6Record12getValueInitENS_9StringRefE+0xf8>  // b.none
    d044:	subs	x9, x9, #0x18
    d048:	mov	x8, x10
    d04c:	b.ne	d038 <_ZNK4llvm6Record12getValueInitENS_9StringRefE+0x40>  // b.any
    d050:	ldr	x20, [x19, #8]
    d054:	ldr	w21, [x19, #16]
    d058:	mov	x0, x19
    d05c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d060:	mov	w8, #0x503                 	// #1283
    d064:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    d068:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    d06c:	stp	x0, x1, [sp, #80]
    d070:	add	x9, x9, #0x0
    d074:	add	x10, sp, #0x50
    d078:	add	x11, x11, #0x0
    d07c:	mov	w19, #0x103                 	// #259
    d080:	strh	w8, [sp, #112]
    d084:	sub	x8, x29, #0x58
    d088:	add	x0, sp, #0x60
    d08c:	add	x1, sp, #0x38
    d090:	stp	x9, x10, [sp, #96]
    d094:	stp	x11, xzr, [sp, #56]
    d098:	strh	w19, [sp, #72]
    d09c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d0a0:	mov	w8, #0x105                 	// #261
    d0a4:	sub	x9, x29, #0x10
    d0a8:	strh	w8, [sp, #48]
    d0ac:	sub	x8, x29, #0x40
    d0b0:	sub	x0, x29, #0x58
    d0b4:	add	x1, sp, #0x20
    d0b8:	stp	x9, xzr, [sp, #32]
    d0bc:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d0c0:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    d0c4:	add	x8, x8, #0x0
    d0c8:	stp	x8, xzr, [sp, #8]
    d0cc:	sub	x8, x29, #0x28
    d0d0:	sub	x0, x29, #0x40
    d0d4:	add	x1, sp, #0x8
    d0d8:	strh	w19, [sp, #24]
    d0dc:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d0e0:	sub	x2, x29, #0x28
    d0e4:	mov	x0, x20
    d0e8:	mov	x1, x21
    d0ec:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    d0f0:	cbz	x8, d050 <_ZNK4llvm6Record12getValueInitENS_9StringRefE+0x58>
    d0f4:	ldr	x0, [x8, #16]
    d0f8:	cbz	x0, d050 <_ZNK4llvm6Record12getValueInitENS_9StringRefE+0x58>
    d0fc:	ldp	x20, x19, [sp, #240]
    d100:	ldr	x21, [sp, #224]
    d104:	ldp	x29, x30, [sp, #208]
    d108:	add	sp, sp, #0x100
    d10c:	ret

000000000000d110 <_ZNK4llvm6Record16getValueAsStringENS_9StringRefE>:
    d110:	sub	sp, sp, #0x100
    d114:	stp	x29, x30, [sp, #208]
    d118:	str	x21, [sp, #224]
    d11c:	stp	x20, x19, [sp, #240]
    d120:	add	x29, sp, #0xd0
    d124:	mov	x19, x0
    d128:	stp	x1, x2, [x29, #-16]
    d12c:	mov	x0, x1
    d130:	mov	x1, x2
    d134:	bl	29c4 <_ZN4llvm10StringInit3getENS_9StringRefE>
    d138:	ldr	w9, [x19, #80]
    d13c:	cbz	w9, d168 <_ZNK4llvm6Record16getValueAsStringENS_9StringRefE+0x58>
    d140:	ldr	x8, [x19, #72]
    d144:	add	x9, x9, x9, lsl #1
    d148:	lsl	x9, x9, #3
    d14c:	mov	x10, x8
    d150:	ldr	x11, [x10], #24
    d154:	cmp	x11, x0
    d158:	b.eq	d208 <_ZNK4llvm6Record16getValueAsStringENS_9StringRefE+0xf8>  // b.none
    d15c:	subs	x9, x9, #0x18
    d160:	mov	x8, x10
    d164:	b.ne	d150 <_ZNK4llvm6Record16getValueAsStringENS_9StringRefE+0x40>  // b.any
    d168:	ldr	x20, [x19, #8]
    d16c:	ldr	w21, [x19, #16]
    d170:	mov	x0, x19
    d174:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d178:	mov	w8, #0x503                 	// #1283
    d17c:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    d180:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    d184:	stp	x0, x1, [sp, #80]
    d188:	add	x9, x9, #0x0
    d18c:	add	x10, sp, #0x50
    d190:	add	x11, x11, #0x0
    d194:	mov	w19, #0x103                 	// #259
    d198:	strh	w8, [sp, #112]
    d19c:	sub	x8, x29, #0x58
    d1a0:	add	x0, sp, #0x60
    d1a4:	add	x1, sp, #0x38
    d1a8:	stp	x9, x10, [sp, #96]
    d1ac:	stp	x11, xzr, [sp, #56]
    d1b0:	strh	w19, [sp, #72]
    d1b4:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d1b8:	mov	w8, #0x105                 	// #261
    d1bc:	sub	x9, x29, #0x10
    d1c0:	strh	w8, [sp, #48]
    d1c4:	sub	x8, x29, #0x40
    d1c8:	sub	x0, x29, #0x58
    d1cc:	add	x1, sp, #0x20
    d1d0:	stp	x9, xzr, [sp, #32]
    d1d4:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d1d8:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    d1dc:	add	x8, x8, #0x0
    d1e0:	stp	x8, xzr, [sp, #8]
    d1e4:	sub	x8, x29, #0x28
    d1e8:	sub	x0, x29, #0x40
    d1ec:	add	x1, sp, #0x8
    d1f0:	strh	w19, [sp, #24]
    d1f4:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d1f8:	sub	x2, x29, #0x28
    d1fc:	mov	x0, x20
    d200:	mov	x1, x21
    d204:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    d208:	cbz	x8, d168 <_ZNK4llvm6Record16getValueAsStringENS_9StringRefE+0x58>
    d20c:	ldr	x8, [x8, #16]
    d210:	cbz	x8, d168 <_ZNK4llvm6Record16getValueAsStringENS_9StringRefE+0x58>
    d214:	ldrb	w9, [x8, #8]
    d218:	cmp	w9, #0x4
    d21c:	b.eq	d228 <_ZNK4llvm6Record16getValueAsStringENS_9StringRefE+0x118>  // b.none
    d220:	cmp	w9, #0x12
    d224:	b.ne	d240 <_ZNK4llvm6Record16getValueAsStringENS_9StringRefE+0x130>  // b.any
    d228:	ldp	x0, x1, [x8, #24]
    d22c:	ldp	x20, x19, [sp, #240]
    d230:	ldr	x21, [sp, #224]
    d234:	ldp	x29, x30, [sp, #208]
    d238:	add	sp, sp, #0x100
    d23c:	ret
    d240:	ldr	x20, [x19, #8]
    d244:	ldr	w21, [x19, #16]
    d248:	mov	x0, x19
    d24c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d250:	mov	w8, #0x503                 	// #1283
    d254:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    d258:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    d25c:	stp	x0, x1, [sp, #80]
    d260:	add	x9, x9, #0x0
    d264:	add	x10, sp, #0x50
    d268:	add	x11, x11, #0x0
    d26c:	mov	w19, #0x103                 	// #259
    d270:	strh	w8, [sp, #112]
    d274:	sub	x8, x29, #0x58
    d278:	add	x0, sp, #0x60
    d27c:	add	x1, sp, #0x38
    d280:	stp	x9, x10, [sp, #96]
    d284:	stp	x11, xzr, [sp, #56]
    d288:	strh	w19, [sp, #72]
    d28c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d290:	mov	w8, #0x105                 	// #261
    d294:	sub	x9, x29, #0x10
    d298:	strh	w8, [sp, #48]
    d29c:	sub	x8, x29, #0x40
    d2a0:	sub	x0, x29, #0x58
    d2a4:	add	x1, sp, #0x20
    d2a8:	stp	x9, xzr, [sp, #32]
    d2ac:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d2b0:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    d2b4:	add	x8, x8, #0x0
    d2b8:	b	d1e0 <_ZNK4llvm6Record16getValueAsStringENS_9StringRefE+0xd0>

000000000000d2bc <_ZNK4llvm6Record18getValueAsBitsInitENS_9StringRefE>:
    d2bc:	sub	sp, sp, #0x100
    d2c0:	stp	x29, x30, [sp, #208]
    d2c4:	str	x21, [sp, #224]
    d2c8:	stp	x20, x19, [sp, #240]
    d2cc:	add	x29, sp, #0xd0
    d2d0:	mov	x19, x0
    d2d4:	stp	x1, x2, [x29, #-16]
    d2d8:	mov	x0, x1
    d2dc:	mov	x1, x2
    d2e0:	bl	29c4 <_ZN4llvm10StringInit3getENS_9StringRefE>
    d2e4:	ldr	w9, [x19, #80]
    d2e8:	cbz	w9, d314 <_ZNK4llvm6Record18getValueAsBitsInitENS_9StringRefE+0x58>
    d2ec:	ldr	x8, [x19, #72]
    d2f0:	add	x9, x9, x9, lsl #1
    d2f4:	lsl	x9, x9, #3
    d2f8:	mov	x10, x8
    d2fc:	ldr	x11, [x10], #24
    d300:	cmp	x11, x0
    d304:	b.eq	d3b4 <_ZNK4llvm6Record18getValueAsBitsInitENS_9StringRefE+0xf8>  // b.none
    d308:	subs	x9, x9, #0x18
    d30c:	mov	x8, x10
    d310:	b.ne	d2fc <_ZNK4llvm6Record18getValueAsBitsInitENS_9StringRefE+0x40>  // b.any
    d314:	ldr	x20, [x19, #8]
    d318:	ldr	w21, [x19, #16]
    d31c:	mov	x0, x19
    d320:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d324:	mov	w8, #0x503                 	// #1283
    d328:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    d32c:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    d330:	stp	x0, x1, [sp, #80]
    d334:	add	x9, x9, #0x0
    d338:	add	x10, sp, #0x50
    d33c:	add	x11, x11, #0x0
    d340:	mov	w19, #0x103                 	// #259
    d344:	strh	w8, [sp, #112]
    d348:	sub	x8, x29, #0x58
    d34c:	add	x0, sp, #0x60
    d350:	add	x1, sp, #0x38
    d354:	stp	x9, x10, [sp, #96]
    d358:	stp	x11, xzr, [sp, #56]
    d35c:	strh	w19, [sp, #72]
    d360:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d364:	mov	w8, #0x105                 	// #261
    d368:	sub	x9, x29, #0x10
    d36c:	strh	w8, [sp, #48]
    d370:	sub	x8, x29, #0x40
    d374:	sub	x0, x29, #0x58
    d378:	add	x1, sp, #0x20
    d37c:	stp	x9, xzr, [sp, #32]
    d380:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d384:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    d388:	add	x8, x8, #0x0
    d38c:	stp	x8, xzr, [sp, #8]
    d390:	sub	x8, x29, #0x28
    d394:	sub	x0, x29, #0x40
    d398:	add	x1, sp, #0x8
    d39c:	strh	w19, [sp, #24]
    d3a0:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d3a4:	sub	x2, x29, #0x28
    d3a8:	mov	x0, x20
    d3ac:	mov	x1, x21
    d3b0:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    d3b4:	cbz	x8, d314 <_ZNK4llvm6Record18getValueAsBitsInitENS_9StringRefE+0x58>
    d3b8:	ldr	x0, [x8, #16]
    d3bc:	cbz	x0, d314 <_ZNK4llvm6Record18getValueAsBitsInitENS_9StringRefE+0x58>
    d3c0:	ldrb	w8, [x0, #8]
    d3c4:	cmp	w8, #0x3
    d3c8:	b.ne	d3e0 <_ZNK4llvm6Record18getValueAsBitsInitENS_9StringRefE+0x124>  // b.any
    d3cc:	ldp	x20, x19, [sp, #240]
    d3d0:	ldr	x21, [sp, #224]
    d3d4:	ldp	x29, x30, [sp, #208]
    d3d8:	add	sp, sp, #0x100
    d3dc:	ret
    d3e0:	ldr	x20, [x19, #8]
    d3e4:	ldr	w21, [x19, #16]
    d3e8:	mov	x0, x19
    d3ec:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d3f0:	mov	w8, #0x503                 	// #1283
    d3f4:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    d3f8:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    d3fc:	stp	x0, x1, [sp, #80]
    d400:	add	x9, x9, #0x0
    d404:	add	x10, sp, #0x50
    d408:	add	x11, x11, #0x0
    d40c:	mov	w19, #0x103                 	// #259
    d410:	strh	w8, [sp, #112]
    d414:	sub	x8, x29, #0x58
    d418:	add	x0, sp, #0x60
    d41c:	add	x1, sp, #0x38
    d420:	stp	x9, x10, [sp, #96]
    d424:	stp	x11, xzr, [sp, #56]
    d428:	strh	w19, [sp, #72]
    d42c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d430:	mov	w8, #0x105                 	// #261
    d434:	sub	x9, x29, #0x10
    d438:	strh	w8, [sp, #48]
    d43c:	sub	x8, x29, #0x40
    d440:	sub	x0, x29, #0x58
    d444:	add	x1, sp, #0x20
    d448:	stp	x9, xzr, [sp, #32]
    d44c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d450:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    d454:	add	x8, x8, #0x0
    d458:	b	d38c <_ZNK4llvm6Record18getValueAsBitsInitENS_9StringRefE+0xd0>

000000000000d45c <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE>:
    d45c:	sub	sp, sp, #0x100
    d460:	stp	x29, x30, [sp, #208]
    d464:	str	x21, [sp, #224]
    d468:	stp	x20, x19, [sp, #240]
    d46c:	add	x29, sp, #0xd0
    d470:	mov	x19, x0
    d474:	stp	x1, x2, [x29, #-16]
    d478:	mov	x0, x1
    d47c:	mov	x1, x2
    d480:	bl	29c4 <_ZN4llvm10StringInit3getENS_9StringRefE>
    d484:	ldr	w9, [x19, #80]
    d488:	cbz	w9, d4b4 <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE+0x58>
    d48c:	ldr	x8, [x19, #72]
    d490:	add	x9, x9, x9, lsl #1
    d494:	lsl	x9, x9, #3
    d498:	mov	x10, x8
    d49c:	ldr	x11, [x10], #24
    d4a0:	cmp	x11, x0
    d4a4:	b.eq	d554 <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE+0xf8>  // b.none
    d4a8:	subs	x9, x9, #0x18
    d4ac:	mov	x8, x10
    d4b0:	b.ne	d49c <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE+0x40>  // b.any
    d4b4:	ldr	x20, [x19, #8]
    d4b8:	ldr	w21, [x19, #16]
    d4bc:	mov	x0, x19
    d4c0:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d4c4:	mov	w8, #0x503                 	// #1283
    d4c8:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    d4cc:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    d4d0:	stp	x0, x1, [sp, #80]
    d4d4:	add	x9, x9, #0x0
    d4d8:	add	x10, sp, #0x50
    d4dc:	add	x11, x11, #0x0
    d4e0:	mov	w19, #0x103                 	// #259
    d4e4:	strh	w8, [sp, #112]
    d4e8:	sub	x8, x29, #0x58
    d4ec:	add	x0, sp, #0x60
    d4f0:	add	x1, sp, #0x38
    d4f4:	stp	x9, x10, [sp, #96]
    d4f8:	stp	x11, xzr, [sp, #56]
    d4fc:	strh	w19, [sp, #72]
    d500:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d504:	mov	w8, #0x105                 	// #261
    d508:	sub	x9, x29, #0x10
    d50c:	strh	w8, [sp, #48]
    d510:	sub	x8, x29, #0x40
    d514:	sub	x0, x29, #0x58
    d518:	add	x1, sp, #0x20
    d51c:	stp	x9, xzr, [sp, #32]
    d520:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d524:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    d528:	add	x8, x8, #0x0
    d52c:	stp	x8, xzr, [sp, #8]
    d530:	sub	x8, x29, #0x28
    d534:	sub	x0, x29, #0x40
    d538:	add	x1, sp, #0x8
    d53c:	strh	w19, [sp, #24]
    d540:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d544:	sub	x2, x29, #0x28
    d548:	mov	x0, x20
    d54c:	mov	x1, x21
    d550:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    d554:	cbz	x8, d4b4 <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE+0x58>
    d558:	ldr	x0, [x8, #16]
    d55c:	cbz	x0, d4b4 <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE+0x58>
    d560:	ldrb	w8, [x0, #8]
    d564:	cmp	w8, #0x9
    d568:	b.ne	d580 <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE+0x124>  // b.any
    d56c:	ldp	x20, x19, [sp, #240]
    d570:	ldr	x21, [sp, #224]
    d574:	ldp	x29, x30, [sp, #208]
    d578:	add	sp, sp, #0x100
    d57c:	ret
    d580:	ldr	x20, [x19, #8]
    d584:	ldr	w21, [x19, #16]
    d588:	mov	x0, x19
    d58c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d590:	mov	w8, #0x503                 	// #1283
    d594:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    d598:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    d59c:	stp	x0, x1, [sp, #80]
    d5a0:	add	x9, x9, #0x0
    d5a4:	add	x10, sp, #0x50
    d5a8:	add	x11, x11, #0x0
    d5ac:	mov	w19, #0x103                 	// #259
    d5b0:	strh	w8, [sp, #112]
    d5b4:	sub	x8, x29, #0x58
    d5b8:	add	x0, sp, #0x60
    d5bc:	add	x1, sp, #0x38
    d5c0:	stp	x9, x10, [sp, #96]
    d5c4:	stp	x11, xzr, [sp, #56]
    d5c8:	strh	w19, [sp, #72]
    d5cc:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d5d0:	mov	w8, #0x105                 	// #261
    d5d4:	sub	x9, x29, #0x10
    d5d8:	strh	w8, [sp, #48]
    d5dc:	sub	x8, x29, #0x40
    d5e0:	sub	x0, x29, #0x58
    d5e4:	add	x1, sp, #0x20
    d5e8:	stp	x9, xzr, [sp, #32]
    d5ec:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d5f0:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    d5f4:	add	x8, x8, #0x0
    d5f8:	b	d52c <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE+0xd0>

000000000000d5fc <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE>:
    d5fc:	sub	sp, sp, #0x140
    d600:	stp	x29, x30, [sp, #224]
    d604:	stp	x28, x27, [sp, #240]
    d608:	stp	x26, x25, [sp, #256]
    d60c:	stp	x24, x23, [sp, #272]
    d610:	stp	x22, x21, [sp, #288]
    d614:	stp	x20, x19, [sp, #304]
    d618:	add	x29, sp, #0xe0
    d61c:	mov	x20, x8
    d620:	stp	x1, x2, [x29, #-24]
    d624:	str	x0, [sp, #8]
    d628:	bl	d45c <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE>
    d62c:	stp	xzr, xzr, [x20, #8]
    d630:	str	xzr, [x20]
    d634:	ldr	w8, [x0, #32]
    d638:	lsl	x25, x8, #3
    d63c:	cbz	x25, d748 <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0x14c>
    d640:	mov	x21, xzr
    d644:	add	x26, x0, #0x28
    d648:	b	d660 <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0x64>
    d64c:	str	x27, [x21], #8
    d650:	str	x21, [x20, #8]
    d654:	subs	x25, x25, #0x8
    d658:	add	x26, x26, #0x8
    d65c:	b.eq	d748 <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0x14c>  // b.none
    d660:	ldr	x8, [x26]
    d664:	cbz	x8, d768 <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0x16c>
    d668:	ldrb	w9, [x8, #8]
    d66c:	cmp	w9, #0x6
    d670:	b.ne	d788 <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0x18c>  // b.any
    d674:	ldr	x9, [x20, #16]
    d678:	ldr	x27, [x8, #24]
    d67c:	cmp	x21, x9
    d680:	b.ne	d64c <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0x50>  // b.any
    d684:	ldr	x22, [x20]
    d688:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
    d68c:	sub	x8, x21, x22
    d690:	cmp	x8, x9
    d694:	b.eq	d828 <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0x22c>  // b.none
    d698:	asr	x9, x8, #3
    d69c:	cmp	x8, #0x0
    d6a0:	csinc	x8, x9, xzr, ne  // ne = any
    d6a4:	adds	x8, x8, x9
    d6a8:	lsr	x10, x8, #60
    d6ac:	cset	w9, cs  // cs = hs, nlast
    d6b0:	cmp	x10, #0x0
    d6b4:	cset	w10, ne  // ne = any
    d6b8:	orr	w9, w9, w10
    d6bc:	cmp	w9, #0x0
    d6c0:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
    d6c4:	sub	x24, x21, x22
    d6c8:	csel	x19, x9, x8, ne  // ne = any
    d6cc:	asr	x28, x24, #3
    d6d0:	cbz	x19, d6e4 <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0xe8>
    d6d4:	lsl	x0, x19, #3
    d6d8:	bl	0 <_Znwm>
    d6dc:	mov	x23, x0
    d6e0:	b	d6e8 <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0xec>
    d6e4:	mov	x23, xzr
    d6e8:	add	x28, x23, x28, lsl #3
    d6ec:	cmp	x24, #0x1
    d6f0:	str	x27, [x28]
    d6f4:	b.lt	d708 <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0x10c>  // b.tstop
    d6f8:	mov	x0, x23
    d6fc:	mov	x1, x22
    d700:	mov	x2, x24
    d704:	bl	0 <memmove>
    d708:	sub	x2, x21, x21
    d70c:	add	x24, x28, #0x8
    d710:	cmp	x2, #0x1
    d714:	asr	x27, x2, #3
    d718:	b.lt	d728 <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0x12c>  // b.tstop
    d71c:	mov	x0, x24
    d720:	mov	x1, x21
    d724:	bl	0 <memmove>
    d728:	add	x21, x24, x27, lsl #3
    d72c:	cbz	x22, d738 <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0x13c>
    d730:	mov	x0, x22
    d734:	bl	0 <_ZdlPv>
    d738:	add	x8, x23, x19, lsl #3
    d73c:	stp	x23, x21, [x20]
    d740:	str	x8, [x20, #16]
    d744:	b	d654 <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0x58>
    d748:	ldp	x20, x19, [sp, #304]
    d74c:	ldp	x22, x21, [sp, #288]
    d750:	ldp	x24, x23, [sp, #272]
    d754:	ldp	x26, x25, [sp, #256]
    d758:	ldp	x28, x27, [sp, #240]
    d75c:	ldp	x29, x30, [sp, #224]
    d760:	add	sp, sp, #0x140
    d764:	ret
    d768:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    d76c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    d770:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    d774:	add	x0, x0, #0x0
    d778:	add	x1, x1, #0x0
    d77c:	add	x3, x3, #0x0
    d780:	mov	w2, #0x69                  	// #105
    d784:	bl	0 <__assert_fail>
    d788:	ldr	x0, [sp, #8]
    d78c:	ldr	x20, [x0, #8]
    d790:	ldr	w21, [x0, #16]
    d794:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d798:	mov	w8, #0x503                 	// #1283
    d79c:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    d7a0:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    d7a4:	stp	x0, x1, [sp, #88]
    d7a8:	add	x9, x9, #0x0
    d7ac:	add	x10, sp, #0x58
    d7b0:	add	x11, x11, #0x0
    d7b4:	mov	w19, #0x103                 	// #259
    d7b8:	strh	w8, [sp, #120]
    d7bc:	sub	x8, x29, #0x60
    d7c0:	add	x0, sp, #0x68
    d7c4:	add	x1, sp, #0x40
    d7c8:	stp	x9, x10, [sp, #104]
    d7cc:	stp	x11, xzr, [sp, #64]
    d7d0:	strh	w19, [sp, #80]
    d7d4:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d7d8:	mov	w8, #0x105                 	// #261
    d7dc:	sub	x9, x29, #0x18
    d7e0:	strh	w8, [sp, #56]
    d7e4:	sub	x8, x29, #0x48
    d7e8:	sub	x0, x29, #0x60
    d7ec:	add	x1, sp, #0x28
    d7f0:	stp	x9, xzr, [sp, #40]
    d7f4:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d7f8:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    d7fc:	add	x8, x8, #0x0
    d800:	stp	x8, xzr, [sp, #16]
    d804:	sub	x8, x29, #0x30
    d808:	sub	x0, x29, #0x48
    d80c:	add	x1, sp, #0x10
    d810:	strh	w19, [sp, #32]
    d814:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d818:	sub	x2, x29, #0x30
    d81c:	mov	x0, x20
    d820:	mov	x1, x21
    d824:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    d828:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    d82c:	add	x0, x0, #0x0
    d830:	bl	0 <_ZSt20__throw_length_errorPKc>

000000000000d834 <_ZNK4llvm6Record13getValueAsIntENS_9StringRefE>:
    d834:	sub	sp, sp, #0x190
    d838:	stp	x29, x30, [sp, #336]
    d83c:	stp	x28, x23, [sp, #352]
    d840:	stp	x22, x21, [sp, #368]
    d844:	stp	x20, x19, [sp, #384]
    d848:	add	x29, sp, #0x150
    d84c:	mov	x19, x0
    d850:	stp	x1, x2, [x29, #-16]
    d854:	mov	x0, x1
    d858:	mov	x1, x2
    d85c:	bl	29c4 <_ZN4llvm10StringInit3getENS_9StringRefE>
    d860:	ldr	w8, [x19, #80]
    d864:	cbz	w8, d890 <_ZNK4llvm6Record13getValueAsIntENS_9StringRefE+0x5c>
    d868:	ldr	x9, [x19, #72]
    d86c:	add	x8, x8, x8, lsl #1
    d870:	lsl	x8, x8, #3
    d874:	add	x21, x9, #0x10
    d878:	ldur	x9, [x21, #-16]
    d87c:	cmp	x9, x0
    d880:	b.eq	d930 <_ZNK4llvm6Record13getValueAsIntENS_9StringRefE+0xfc>  // b.none
    d884:	subs	x8, x8, #0x18
    d888:	add	x21, x21, #0x18
    d88c:	b.ne	d878 <_ZNK4llvm6Record13getValueAsIntENS_9StringRefE+0x44>  // b.any
    d890:	ldr	x20, [x19, #8]
    d894:	ldr	w21, [x19, #16]
    d898:	mov	x0, x19
    d89c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d8a0:	mov	w8, #0x503                 	// #1283
    d8a4:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    d8a8:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    d8ac:	stp	x0, x1, [sp, #152]
    d8b0:	add	x9, x9, #0x0
    d8b4:	add	x10, sp, #0x98
    d8b8:	add	x11, x11, #0x0
    d8bc:	mov	w19, #0x103                 	// #259
    d8c0:	sturh	w8, [x29, #-72]
    d8c4:	sub	x8, x29, #0x40
    d8c8:	sub	x0, x29, #0x58
    d8cc:	sub	x1, x29, #0x70
    d8d0:	stp	x9, x10, [x29, #-88]
    d8d4:	stp	x11, xzr, [x29, #-112]
    d8d8:	sturh	w19, [x29, #-96]
    d8dc:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d8e0:	mov	w8, #0x105                 	// #261
    d8e4:	sub	x9, x29, #0x10
    d8e8:	sturh	w8, [x29, #-120]
    d8ec:	sub	x8, x29, #0x28
    d8f0:	sub	x0, x29, #0x40
    d8f4:	sub	x1, x29, #0x88
    d8f8:	stp	x9, xzr, [x29, #-136]
    d8fc:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d900:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    d904:	add	x8, x8, #0x0
    d908:	stp	x8, xzr, [x29, #-160]
    d90c:	add	x8, sp, #0x8
    d910:	sub	x0, x29, #0x28
    d914:	sub	x1, x29, #0xa0
    d918:	sturh	w19, [x29, #-144]
    d91c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d920:	add	x2, sp, #0x8
    d924:	mov	x0, x20
    d928:	mov	x1, x21
    d92c:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    d930:	cmp	x21, #0x10
    d934:	b.eq	d890 <_ZNK4llvm6Record13getValueAsIntENS_9StringRefE+0x5c>  // b.none
    d938:	ldr	x8, [x21]
    d93c:	cbz	x8, d890 <_ZNK4llvm6Record13getValueAsIntENS_9StringRefE+0x5c>
    d940:	ldrb	w9, [x8, #8]
    d944:	cmp	w9, #0x8
    d948:	b.ne	d968 <_ZNK4llvm6Record13getValueAsIntENS_9StringRefE+0x134>  // b.any
    d94c:	ldr	x0, [x8, #24]
    d950:	ldp	x20, x19, [sp, #384]
    d954:	ldp	x22, x21, [sp, #368]
    d958:	ldp	x28, x23, [sp, #352]
    d95c:	ldp	x29, x30, [sp, #336]
    d960:	add	sp, sp, #0x190
    d964:	ret
    d968:	mov	x0, x19
    d96c:	ldr	x19, [x19, #8]
    d970:	ldr	w20, [x0, #16]
    d974:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    d978:	add	x8, x8, #0x0
    d97c:	mov	w22, #0x103                 	// #259
    d980:	stp	x8, xzr, [x29, #-160]
    d984:	sturh	w22, [x29, #-144]
    d988:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d98c:	add	x8, sp, #0x88
    d990:	stp	x0, x1, [sp, #136]
    d994:	mov	w23, #0x105                 	// #261
    d998:	stp	x8, xzr, [sp, #152]
    d99c:	sub	x8, x29, #0x88
    d9a0:	sub	x0, x29, #0xa0
    d9a4:	add	x1, sp, #0x98
    d9a8:	strh	w23, [sp, #168]
    d9ac:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d9b0:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    d9b4:	add	x8, x8, #0x0
    d9b8:	stp	x8, xzr, [sp, #112]
    d9bc:	sub	x8, x29, #0x70
    d9c0:	sub	x0, x29, #0x88
    d9c4:	add	x1, sp, #0x70
    d9c8:	strh	w22, [sp, #128]
    d9cc:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d9d0:	sub	x8, x29, #0x10
    d9d4:	stp	x8, xzr, [sp, #88]
    d9d8:	sub	x8, x29, #0x58
    d9dc:	sub	x0, x29, #0x70
    d9e0:	add	x1, sp, #0x58
    d9e4:	strh	w23, [sp, #104]
    d9e8:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d9ec:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    d9f0:	add	x8, x8, #0x0
    d9f4:	stp	x8, xzr, [sp, #64]
    d9f8:	sub	x8, x29, #0x40
    d9fc:	sub	x0, x29, #0x58
    da00:	add	x1, sp, #0x40
    da04:	strh	w22, [sp, #80]
    da08:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    da0c:	ldr	x0, [x21]
    da10:	add	x21, sp, #0x8
    da14:	ldr	x8, [x0]
    da18:	ldr	x9, [x8, #40]
    da1c:	add	x8, sp, #0x8
    da20:	blr	x9
    da24:	mov	w8, #0x104                 	// #260
    da28:	strh	w8, [sp, #56]
    da2c:	sub	x8, x29, #0x28
    da30:	sub	x0, x29, #0x40
    da34:	add	x1, sp, #0x28
    da38:	stp	x21, xzr, [sp, #40]
    da3c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    da40:	sub	x2, x29, #0x28
    da44:	mov	x0, x19
    da48:	mov	x1, x20
    da4c:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>

000000000000da50 <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE>:
    da50:	sub	sp, sp, #0x1c0
    da54:	stp	x29, x30, [sp, #352]
    da58:	stp	x28, x27, [sp, #368]
    da5c:	stp	x26, x25, [sp, #384]
    da60:	stp	x24, x23, [sp, #400]
    da64:	stp	x22, x21, [sp, #416]
    da68:	stp	x20, x19, [sp, #432]
    da6c:	add	x29, sp, #0x160
    da70:	mov	x21, x8
    da74:	stp	x1, x2, [x29, #-24]
    da78:	str	x0, [sp]
    da7c:	bl	d45c <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE>
    da80:	stp	xzr, xzr, [x21, #8]
    da84:	str	xzr, [x21]
    da88:	ldr	w8, [x0, #32]
    da8c:	lsl	x25, x8, #3
    da90:	cbz	x25, dba0 <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x150>
    da94:	mov	x23, xzr
    da98:	mov	x19, xzr
    da9c:	mov	x22, xzr
    daa0:	add	x26, x0, #0x28
    daa4:	b	dabc <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x6c>
    daa8:	str	x28, [x19], #8
    daac:	str	x19, [x21, #8]
    dab0:	subs	x25, x25, #0x8
    dab4:	add	x26, x26, #0x8
    dab8:	b.eq	dba0 <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x150>  // b.none
    dabc:	ldr	x8, [x26]
    dac0:	cbz	x8, dbc0 <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x170>
    dac4:	ldrb	w9, [x8, #8]
    dac8:	cmp	w9, #0x8
    dacc:	b.ne	dbe0 <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x190>  // b.any
    dad0:	ldr	x28, [x8, #24]
    dad4:	cmp	x19, x22
    dad8:	b.ne	daa8 <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x58>  // b.any
    dadc:	sub	x8, x19, x23
    dae0:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
    dae4:	cmp	x8, x9
    dae8:	b.eq	dccc <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x27c>  // b.none
    daec:	asr	x9, x8, #3
    daf0:	cmp	x8, #0x0
    daf4:	csinc	x8, x9, xzr, ne  // ne = any
    daf8:	adds	x8, x8, x9
    dafc:	lsr	x10, x8, #60
    db00:	cset	w9, cs  // cs = hs, nlast
    db04:	cmp	x10, #0x0
    db08:	cset	w10, ne  // ne = any
    db0c:	orr	w9, w9, w10
    db10:	cmp	w9, #0x0
    db14:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
    db18:	sub	x24, x22, x23
    db1c:	csel	x27, x9, x8, ne  // ne = any
    db20:	asr	x20, x24, #3
    db24:	str	x23, [sp, #8]
    db28:	cbz	x27, db3c <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0xec>
    db2c:	lsl	x0, x27, #3
    db30:	bl	0 <_Znwm>
    db34:	mov	x23, x0
    db38:	b	db40 <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0xf0>
    db3c:	mov	x23, xzr
    db40:	add	x20, x23, x20, lsl #3
    db44:	cmp	x24, #0x1
    db48:	str	x28, [x20]
    db4c:	b.lt	db60 <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x110>  // b.tstop
    db50:	ldr	x1, [sp, #8]
    db54:	mov	x0, x23
    db58:	mov	x2, x24
    db5c:	bl	0 <memmove>
    db60:	sub	x2, x19, x22
    db64:	add	x24, x20, #0x8
    db68:	cmp	x2, #0x1
    db6c:	asr	x19, x2, #3
    db70:	b.lt	db80 <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x130>  // b.tstop
    db74:	mov	x0, x24
    db78:	mov	x1, x22
    db7c:	bl	0 <memmove>
    db80:	ldr	x0, [sp, #8]
    db84:	add	x19, x24, x19, lsl #3
    db88:	cbz	x0, db90 <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x140>
    db8c:	bl	0 <_ZdlPv>
    db90:	add	x22, x23, x27, lsl #3
    db94:	stp	x23, x19, [x21]
    db98:	str	x22, [x21, #16]
    db9c:	b	dab0 <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x60>
    dba0:	ldp	x20, x19, [sp, #432]
    dba4:	ldp	x22, x21, [sp, #416]
    dba8:	ldp	x24, x23, [sp, #400]
    dbac:	ldp	x26, x25, [sp, #384]
    dbb0:	ldp	x28, x27, [sp, #368]
    dbb4:	ldp	x29, x30, [sp, #352]
    dbb8:	add	sp, sp, #0x1c0
    dbbc:	ret
    dbc0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    dbc4:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    dbc8:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    dbcc:	add	x0, x0, #0x0
    dbd0:	add	x1, x1, #0x0
    dbd4:	add	x3, x3, #0x0
    dbd8:	mov	w2, #0x69                  	// #105
    dbdc:	bl	0 <__assert_fail>
    dbe0:	ldr	x0, [sp]
    dbe4:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    dbe8:	add	x9, x9, #0x0
    dbec:	mov	w19, #0x103                 	// #259
    dbf0:	ldr	x20, [x0, #8]
    dbf4:	ldr	w21, [x0, #16]
    dbf8:	stp	x9, xzr, [x29, #-168]
    dbfc:	sturh	w19, [x29, #-152]
    dc00:	mov	x22, x8
    dc04:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    dc08:	add	x8, sp, #0x90
    dc0c:	stp	x0, x1, [sp, #144]
    dc10:	mov	w23, #0x105                 	// #261
    dc14:	stp	x8, xzr, [sp, #160]
    dc18:	sub	x8, x29, #0x90
    dc1c:	sub	x0, x29, #0xa8
    dc20:	add	x1, sp, #0xa0
    dc24:	strh	w23, [sp, #176]
    dc28:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    dc2c:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    dc30:	add	x8, x8, #0x0
    dc34:	stp	x8, xzr, [sp, #120]
    dc38:	sub	x8, x29, #0x78
    dc3c:	sub	x0, x29, #0x90
    dc40:	add	x1, sp, #0x78
    dc44:	strh	w19, [sp, #136]
    dc48:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    dc4c:	sub	x8, x29, #0x18
    dc50:	stp	x8, xzr, [sp, #96]
    dc54:	sub	x8, x29, #0x60
    dc58:	sub	x0, x29, #0x78
    dc5c:	add	x1, sp, #0x60
    dc60:	strh	w23, [sp, #112]
    dc64:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    dc68:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    dc6c:	add	x8, x8, #0x0
    dc70:	stp	x8, xzr, [sp, #72]
    dc74:	sub	x8, x29, #0x48
    dc78:	sub	x0, x29, #0x60
    dc7c:	add	x1, sp, #0x48
    dc80:	strh	w19, [sp, #88]
    dc84:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    dc88:	ldr	x8, [x22]
    dc8c:	mov	x0, x22
    dc90:	add	x19, sp, #0x10
    dc94:	ldr	x9, [x8, #40]
    dc98:	add	x8, sp, #0x10
    dc9c:	blr	x9
    dca0:	mov	w8, #0x104                 	// #260
    dca4:	strh	w8, [sp, #64]
    dca8:	sub	x8, x29, #0x30
    dcac:	sub	x0, x29, #0x48
    dcb0:	add	x1, sp, #0x30
    dcb4:	stp	x19, xzr, [sp, #48]
    dcb8:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    dcbc:	sub	x2, x29, #0x30
    dcc0:	mov	x0, x20
    dcc4:	mov	x1, x21
    dcc8:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    dccc:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    dcd0:	add	x0, x0, #0x0
    dcd4:	bl	0 <_ZSt20__throw_length_errorPKc>

000000000000dcd8 <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE>:
    dcd8:	sub	sp, sp, #0x190
    dcdc:	stp	x29, x30, [sp, #336]
    dce0:	stp	x28, x23, [sp, #352]
    dce4:	stp	x22, x21, [sp, #368]
    dce8:	stp	x20, x19, [sp, #384]
    dcec:	add	x29, sp, #0x150
    dcf0:	mov	x19, x0
    dcf4:	mov	x20, x8
    dcf8:	stp	x1, x2, [x29, #-16]
    dcfc:	bl	d45c <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE>
    dd00:	stp	xzr, xzr, [x20, #8]
    dd04:	str	xzr, [x20]
    dd08:	ldr	w8, [x0, #32]
    dd0c:	lsl	x21, x8, #3
    dd10:	cbz	x21, dd74 <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE+0x9c>
    dd14:	add	x22, x0, #0x28
    dd18:	b	dd34 <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE+0x5c>
    dd1c:	mov	x2, sp
    dd20:	mov	x0, x20
    dd24:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    dd28:	subs	x21, x21, #0x8
    dd2c:	add	x22, x22, #0x8
    dd30:	b.eq	dd74 <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE+0x9c>  // b.none
    dd34:	ldr	x8, [x22]
    dd38:	cbz	x8, dd8c <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE+0xb4>
    dd3c:	ldrb	w9, [x8, #8]
    dd40:	cmp	w9, #0x12
    dd44:	b.ne	ddac <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE+0xd4>  // b.any
    dd48:	ldp	x1, x9, [x20, #8]
    dd4c:	ldur	q0, [x8, #24]
    dd50:	cmp	x1, x9
    dd54:	str	q0, [sp]
    dd58:	b.eq	dd1c <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE+0x44>  // b.none
    dd5c:	ldr	q0, [sp]
    dd60:	str	q0, [x1]
    dd64:	ldr	x8, [x20, #8]
    dd68:	add	x8, x8, #0x10
    dd6c:	str	x8, [x20, #8]
    dd70:	b	dd28 <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE+0x50>
    dd74:	ldp	x20, x19, [sp, #384]
    dd78:	ldp	x22, x21, [sp, #368]
    dd7c:	ldp	x28, x23, [sp, #352]
    dd80:	ldp	x29, x30, [sp, #336]
    dd84:	add	sp, sp, #0x190
    dd88:	ret
    dd8c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    dd90:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    dd94:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    dd98:	add	x0, x0, #0x0
    dd9c:	add	x1, x1, #0x0
    dda0:	add	x3, x3, #0x0
    dda4:	mov	w2, #0x69                  	// #105
    dda8:	bl	0 <__assert_fail>
    ddac:	mov	x0, x19
    ddb0:	ldr	x19, [x19, #8]
    ddb4:	ldr	w20, [x0, #16]
    ddb8:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    ddbc:	add	x9, x9, #0x0
    ddc0:	mov	w22, #0x103                 	// #259
    ddc4:	stp	x9, xzr, [x29, #-160]
    ddc8:	sturh	w22, [x29, #-144]
    ddcc:	mov	x21, x8
    ddd0:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    ddd4:	add	x8, sp, #0x88
    ddd8:	stp	x0, x1, [sp, #136]
    dddc:	mov	w23, #0x105                 	// #261
    dde0:	stp	x8, xzr, [sp, #152]
    dde4:	sub	x8, x29, #0x88
    dde8:	sub	x0, x29, #0xa0
    ddec:	add	x1, sp, #0x98
    ddf0:	strh	w23, [sp, #168]
    ddf4:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    ddf8:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    ddfc:	add	x8, x8, #0x0
    de00:	stp	x8, xzr, [sp, #112]
    de04:	sub	x8, x29, #0x70
    de08:	sub	x0, x29, #0x88
    de0c:	add	x1, sp, #0x70
    de10:	strh	w22, [sp, #128]
    de14:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    de18:	sub	x8, x29, #0x10
    de1c:	stp	x8, xzr, [sp, #88]
    de20:	sub	x8, x29, #0x58
    de24:	sub	x0, x29, #0x70
    de28:	add	x1, sp, #0x58
    de2c:	strh	w23, [sp, #104]
    de30:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    de34:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    de38:	add	x8, x8, #0x0
    de3c:	stp	x8, xzr, [sp, #64]
    de40:	sub	x8, x29, #0x40
    de44:	sub	x0, x29, #0x58
    de48:	add	x1, sp, #0x40
    de4c:	strh	w22, [sp, #80]
    de50:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    de54:	ldr	x8, [x21]
    de58:	mov	x0, x21
    de5c:	mov	x22, sp
    de60:	ldr	x9, [x8, #40]
    de64:	mov	x8, sp
    de68:	blr	x9
    de6c:	mov	w8, #0x104                 	// #260
    de70:	strh	w8, [sp, #56]
    de74:	sub	x8, x29, #0x28
    de78:	sub	x0, x29, #0x40
    de7c:	add	x1, sp, #0x28
    de80:	stp	x22, xzr, [sp, #40]
    de84:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    de88:	sub	x2, x29, #0x28
    de8c:	mov	x0, x19
    de90:	mov	x1, x20
    de94:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>

000000000000de98 <_ZNK4llvm6Record13getValueAsDefENS_9StringRefE>:
    de98:	sub	sp, sp, #0x100
    de9c:	stp	x29, x30, [sp, #208]
    dea0:	str	x21, [sp, #224]
    dea4:	stp	x20, x19, [sp, #240]
    dea8:	add	x29, sp, #0xd0
    deac:	mov	x19, x0
    deb0:	stp	x1, x2, [x29, #-16]
    deb4:	mov	x0, x1
    deb8:	mov	x1, x2
    debc:	bl	29c4 <_ZN4llvm10StringInit3getENS_9StringRefE>
    dec0:	ldr	w9, [x19, #80]
    dec4:	cbz	w9, def0 <_ZNK4llvm6Record13getValueAsDefENS_9StringRefE+0x58>
    dec8:	ldr	x8, [x19, #72]
    decc:	add	x9, x9, x9, lsl #1
    ded0:	lsl	x9, x9, #3
    ded4:	mov	x10, x8
    ded8:	ldr	x11, [x10], #24
    dedc:	cmp	x11, x0
    dee0:	b.eq	df90 <_ZNK4llvm6Record13getValueAsDefENS_9StringRefE+0xf8>  // b.none
    dee4:	subs	x9, x9, #0x18
    dee8:	mov	x8, x10
    deec:	b.ne	ded8 <_ZNK4llvm6Record13getValueAsDefENS_9StringRefE+0x40>  // b.any
    def0:	ldr	x20, [x19, #8]
    def4:	ldr	w21, [x19, #16]
    def8:	mov	x0, x19
    defc:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    df00:	mov	w8, #0x503                 	// #1283
    df04:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    df08:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    df0c:	stp	x0, x1, [sp, #80]
    df10:	add	x9, x9, #0x0
    df14:	add	x10, sp, #0x50
    df18:	add	x11, x11, #0x0
    df1c:	mov	w19, #0x103                 	// #259
    df20:	strh	w8, [sp, #112]
    df24:	sub	x8, x29, #0x58
    df28:	add	x0, sp, #0x60
    df2c:	add	x1, sp, #0x38
    df30:	stp	x9, x10, [sp, #96]
    df34:	stp	x11, xzr, [sp, #56]
    df38:	strh	w19, [sp, #72]
    df3c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    df40:	mov	w8, #0x105                 	// #261
    df44:	sub	x9, x29, #0x10
    df48:	strh	w8, [sp, #48]
    df4c:	sub	x8, x29, #0x40
    df50:	sub	x0, x29, #0x58
    df54:	add	x1, sp, #0x20
    df58:	stp	x9, xzr, [sp, #32]
    df5c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    df60:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    df64:	add	x8, x8, #0x0
    df68:	stp	x8, xzr, [sp, #8]
    df6c:	sub	x8, x29, #0x28
    df70:	sub	x0, x29, #0x40
    df74:	add	x1, sp, #0x8
    df78:	strh	w19, [sp, #24]
    df7c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    df80:	sub	x2, x29, #0x28
    df84:	mov	x0, x20
    df88:	mov	x1, x21
    df8c:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    df90:	cbz	x8, def0 <_ZNK4llvm6Record13getValueAsDefENS_9StringRefE+0x58>
    df94:	ldr	x8, [x8, #16]
    df98:	cbz	x8, def0 <_ZNK4llvm6Record13getValueAsDefENS_9StringRefE+0x58>
    df9c:	ldrb	w9, [x8, #8]
    dfa0:	cmp	w9, #0x6
    dfa4:	b.ne	dfc0 <_ZNK4llvm6Record13getValueAsDefENS_9StringRefE+0x128>  // b.any
    dfa8:	ldr	x0, [x8, #24]
    dfac:	ldp	x20, x19, [sp, #240]
    dfb0:	ldr	x21, [sp, #224]
    dfb4:	ldp	x29, x30, [sp, #208]
    dfb8:	add	sp, sp, #0x100
    dfbc:	ret
    dfc0:	ldr	x20, [x19, #8]
    dfc4:	ldr	w21, [x19, #16]
    dfc8:	mov	x0, x19
    dfcc:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    dfd0:	mov	w8, #0x503                 	// #1283
    dfd4:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    dfd8:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    dfdc:	stp	x0, x1, [sp, #80]
    dfe0:	add	x9, x9, #0x0
    dfe4:	add	x10, sp, #0x50
    dfe8:	add	x11, x11, #0x0
    dfec:	mov	w19, #0x103                 	// #259
    dff0:	strh	w8, [sp, #112]
    dff4:	sub	x8, x29, #0x58
    dff8:	add	x0, sp, #0x60
    dffc:	add	x1, sp, #0x38
    e000:	stp	x9, x10, [sp, #96]
    e004:	stp	x11, xzr, [sp, #56]
    e008:	strh	w19, [sp, #72]
    e00c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e010:	mov	w8, #0x105                 	// #261
    e014:	sub	x9, x29, #0x10
    e018:	strh	w8, [sp, #48]
    e01c:	sub	x8, x29, #0x40
    e020:	sub	x0, x29, #0x58
    e024:	add	x1, sp, #0x20
    e028:	stp	x9, xzr, [sp, #32]
    e02c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e030:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    e034:	add	x8, x8, #0x0
    e038:	b	df68 <_ZNK4llvm6Record13getValueAsDefENS_9StringRefE+0xd0>

000000000000e03c <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE>:
    e03c:	sub	sp, sp, #0x100
    e040:	stp	x29, x30, [sp, #208]
    e044:	str	x21, [sp, #224]
    e048:	stp	x20, x19, [sp, #240]
    e04c:	add	x29, sp, #0xd0
    e050:	mov	x19, x0
    e054:	stp	x1, x2, [x29, #-16]
    e058:	mov	x0, x1
    e05c:	mov	x1, x2
    e060:	bl	29c4 <_ZN4llvm10StringInit3getENS_9StringRefE>
    e064:	ldr	w9, [x19, #80]
    e068:	cbz	w9, e094 <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE+0x58>
    e06c:	ldr	x8, [x19, #72]
    e070:	add	x9, x9, x9, lsl #1
    e074:	lsl	x9, x9, #3
    e078:	mov	x10, x8
    e07c:	ldr	x11, [x10], #24
    e080:	cmp	x11, x0
    e084:	b.eq	e134 <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE+0xf8>  // b.none
    e088:	subs	x9, x9, #0x18
    e08c:	mov	x8, x10
    e090:	b.ne	e07c <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE+0x40>  // b.any
    e094:	ldr	x20, [x19, #8]
    e098:	ldr	w21, [x19, #16]
    e09c:	mov	x0, x19
    e0a0:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e0a4:	mov	w8, #0x503                 	// #1283
    e0a8:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    e0ac:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    e0b0:	stp	x0, x1, [sp, #80]
    e0b4:	add	x9, x9, #0x0
    e0b8:	add	x10, sp, #0x50
    e0bc:	add	x11, x11, #0x0
    e0c0:	mov	w19, #0x103                 	// #259
    e0c4:	strh	w8, [sp, #112]
    e0c8:	sub	x8, x29, #0x58
    e0cc:	add	x0, sp, #0x60
    e0d0:	add	x1, sp, #0x38
    e0d4:	stp	x9, x10, [sp, #96]
    e0d8:	stp	x11, xzr, [sp, #56]
    e0dc:	strh	w19, [sp, #72]
    e0e0:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e0e4:	mov	w8, #0x105                 	// #261
    e0e8:	sub	x9, x29, #0x10
    e0ec:	strh	w8, [sp, #48]
    e0f0:	sub	x8, x29, #0x40
    e0f4:	sub	x0, x29, #0x58
    e0f8:	add	x1, sp, #0x20
    e0fc:	stp	x9, xzr, [sp, #32]
    e100:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e104:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    e108:	add	x8, x8, #0x0
    e10c:	stp	x8, xzr, [sp, #8]
    e110:	sub	x8, x29, #0x28
    e114:	sub	x0, x29, #0x40
    e118:	add	x1, sp, #0x8
    e11c:	strh	w19, [sp, #24]
    e120:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e124:	sub	x2, x29, #0x28
    e128:	mov	x0, x20
    e12c:	mov	x1, x21
    e130:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    e134:	cbz	x8, e094 <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE+0x58>
    e138:	ldr	x8, [x8, #16]
    e13c:	cbz	x8, e094 <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE+0x58>
    e140:	ldrb	w9, [x8, #8]
    e144:	cmp	w9, #0x18
    e148:	b.eq	e15c <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE+0x120>  // b.none
    e14c:	cmp	w9, #0x6
    e150:	b.ne	e174 <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE+0x138>  // b.any
    e154:	ldr	x0, [x8, #24]
    e158:	b	e160 <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE+0x124>
    e15c:	mov	x0, xzr
    e160:	ldp	x20, x19, [sp, #240]
    e164:	ldr	x21, [sp, #224]
    e168:	ldp	x29, x30, [sp, #208]
    e16c:	add	sp, sp, #0x100
    e170:	ret
    e174:	ldr	x20, [x19, #8]
    e178:	ldr	w21, [x19, #16]
    e17c:	mov	x0, x19
    e180:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e184:	mov	w8, #0x503                 	// #1283
    e188:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    e18c:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    e190:	stp	x0, x1, [sp, #80]
    e194:	add	x9, x9, #0x0
    e198:	add	x10, sp, #0x50
    e19c:	add	x11, x11, #0x0
    e1a0:	mov	w19, #0x103                 	// #259
    e1a4:	strh	w8, [sp, #112]
    e1a8:	sub	x8, x29, #0x58
    e1ac:	add	x0, sp, #0x60
    e1b0:	add	x1, sp, #0x38
    e1b4:	stp	x9, x10, [sp, #96]
    e1b8:	stp	x11, xzr, [sp, #56]
    e1bc:	strh	w19, [sp, #72]
    e1c0:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e1c4:	mov	w8, #0x105                 	// #261
    e1c8:	sub	x9, x29, #0x10
    e1cc:	strh	w8, [sp, #48]
    e1d0:	sub	x8, x29, #0x40
    e1d4:	sub	x0, x29, #0x58
    e1d8:	add	x1, sp, #0x20
    e1dc:	stp	x9, xzr, [sp, #32]
    e1e0:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e1e4:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    e1e8:	add	x8, x8, #0x0
    e1ec:	b	e10c <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE+0xd0>

000000000000e1f0 <_ZNK4llvm6Record13getValueAsBitENS_9StringRefE>:
    e1f0:	sub	sp, sp, #0x100
    e1f4:	stp	x29, x30, [sp, #208]
    e1f8:	str	x21, [sp, #224]
    e1fc:	stp	x20, x19, [sp, #240]
    e200:	add	x29, sp, #0xd0
    e204:	mov	x19, x0
    e208:	stp	x1, x2, [x29, #-16]
    e20c:	mov	x0, x1
    e210:	mov	x1, x2
    e214:	bl	29c4 <_ZN4llvm10StringInit3getENS_9StringRefE>
    e218:	ldr	w9, [x19, #80]
    e21c:	cbz	w9, e248 <_ZNK4llvm6Record13getValueAsBitENS_9StringRefE+0x58>
    e220:	ldr	x8, [x19, #72]
    e224:	add	x9, x9, x9, lsl #1
    e228:	lsl	x9, x9, #3
    e22c:	mov	x10, x8
    e230:	ldr	x11, [x10], #24
    e234:	cmp	x11, x0
    e238:	b.eq	e2e8 <_ZNK4llvm6Record13getValueAsBitENS_9StringRefE+0xf8>  // b.none
    e23c:	subs	x9, x9, #0x18
    e240:	mov	x8, x10
    e244:	b.ne	e230 <_ZNK4llvm6Record13getValueAsBitENS_9StringRefE+0x40>  // b.any
    e248:	ldr	x20, [x19, #8]
    e24c:	ldr	w21, [x19, #16]
    e250:	mov	x0, x19
    e254:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e258:	mov	w8, #0x503                 	// #1283
    e25c:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    e260:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    e264:	stp	x0, x1, [sp, #80]
    e268:	add	x9, x9, #0x0
    e26c:	add	x10, sp, #0x50
    e270:	add	x11, x11, #0x0
    e274:	mov	w19, #0x103                 	// #259
    e278:	strh	w8, [sp, #112]
    e27c:	sub	x8, x29, #0x58
    e280:	add	x0, sp, #0x60
    e284:	add	x1, sp, #0x38
    e288:	stp	x9, x10, [sp, #96]
    e28c:	stp	x11, xzr, [sp, #56]
    e290:	strh	w19, [sp, #72]
    e294:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e298:	mov	w8, #0x105                 	// #261
    e29c:	sub	x9, x29, #0x10
    e2a0:	strh	w8, [sp, #48]
    e2a4:	sub	x8, x29, #0x40
    e2a8:	sub	x0, x29, #0x58
    e2ac:	add	x1, sp, #0x20
    e2b0:	stp	x9, xzr, [sp, #32]
    e2b4:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e2b8:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    e2bc:	add	x8, x8, #0x0
    e2c0:	stp	x8, xzr, [sp, #8]
    e2c4:	sub	x8, x29, #0x28
    e2c8:	sub	x0, x29, #0x40
    e2cc:	add	x1, sp, #0x8
    e2d0:	strh	w19, [sp, #24]
    e2d4:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e2d8:	sub	x2, x29, #0x28
    e2dc:	mov	x0, x20
    e2e0:	mov	x1, x21
    e2e4:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    e2e8:	cbz	x8, e248 <_ZNK4llvm6Record13getValueAsBitENS_9StringRefE+0x58>
    e2ec:	ldr	x8, [x8, #16]
    e2f0:	cbz	x8, e248 <_ZNK4llvm6Record13getValueAsBitENS_9StringRefE+0x58>
    e2f4:	ldrb	w9, [x8, #8]
    e2f8:	cmp	w9, #0x2
    e2fc:	b.ne	e318 <_ZNK4llvm6Record13getValueAsBitENS_9StringRefE+0x128>  // b.any
    e300:	ldrb	w0, [x8, #24]
    e304:	ldp	x20, x19, [sp, #240]
    e308:	ldr	x21, [sp, #224]
    e30c:	ldp	x29, x30, [sp, #208]
    e310:	add	sp, sp, #0x100
    e314:	ret
    e318:	ldr	x20, [x19, #8]
    e31c:	ldr	w21, [x19, #16]
    e320:	mov	x0, x19
    e324:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e328:	mov	w8, #0x503                 	// #1283
    e32c:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    e330:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    e334:	stp	x0, x1, [sp, #80]
    e338:	add	x9, x9, #0x0
    e33c:	add	x10, sp, #0x50
    e340:	add	x11, x11, #0x0
    e344:	mov	w19, #0x103                 	// #259
    e348:	strh	w8, [sp, #112]
    e34c:	sub	x8, x29, #0x58
    e350:	add	x0, sp, #0x60
    e354:	add	x1, sp, #0x38
    e358:	stp	x9, x10, [sp, #96]
    e35c:	stp	x11, xzr, [sp, #56]
    e360:	strh	w19, [sp, #72]
    e364:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e368:	mov	w8, #0x105                 	// #261
    e36c:	sub	x9, x29, #0x10
    e370:	strh	w8, [sp, #48]
    e374:	sub	x8, x29, #0x40
    e378:	sub	x0, x29, #0x58
    e37c:	add	x1, sp, #0x20
    e380:	stp	x9, xzr, [sp, #32]
    e384:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e388:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    e38c:	add	x8, x8, #0x0
    e390:	b	e2c0 <_ZNK4llvm6Record13getValueAsBitENS_9StringRefE+0xd0>

000000000000e394 <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb>:
    e394:	sub	sp, sp, #0x130
    e398:	stp	x29, x30, [sp, #240]
    e39c:	str	x28, [sp, #256]
    e3a0:	stp	x22, x21, [sp, #272]
    e3a4:	stp	x20, x19, [sp, #288]
    e3a8:	add	x29, sp, #0xf0
    e3ac:	mov	x19, x0
    e3b0:	stp	x1, x2, [x29, #-16]
    e3b4:	mov	x0, x1
    e3b8:	mov	x1, x2
    e3bc:	mov	x20, x3
    e3c0:	bl	29c4 <_ZN4llvm10StringInit3getENS_9StringRefE>
    e3c4:	ldr	w9, [x19, #80]
    e3c8:	cbz	w9, e3f4 <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb+0x60>
    e3cc:	ldr	x8, [x19, #72]
    e3d0:	add	x9, x9, x9, lsl #1
    e3d4:	lsl	x9, x9, #3
    e3d8:	mov	x10, x8
    e3dc:	ldr	x11, [x10], #24
    e3e0:	cmp	x11, x0
    e3e4:	b.eq	e4a0 <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb+0x10c>  // b.none
    e3e8:	subs	x9, x9, #0x18
    e3ec:	mov	x8, x10
    e3f0:	b.ne	e3dc <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb+0x48>  // b.any
    e3f4:	ldr	x20, [x19, #8]
    e3f8:	ldr	w21, [x19, #16]
    e3fc:	mov	x0, x19
    e400:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e404:	mov	w8, #0x503                 	// #1283
    e408:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    e40c:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    e410:	stp	x0, x1, [sp, #112]
    e414:	add	x9, x9, #0x0
    e418:	add	x10, sp, #0x70
    e41c:	add	x11, x11, #0x0
    e420:	mov	w19, #0x103                 	// #259
    e424:	sturh	w8, [x29, #-96]
    e428:	sub	x8, x29, #0x58
    e42c:	sub	x0, x29, #0x70
    e430:	add	x1, sp, #0x58
    e434:	stp	x9, x10, [x29, #-112]
    e438:	stp	x11, xzr, [sp, #88]
    e43c:	strh	w19, [sp, #104]
    e440:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e444:	add	x8, sp, #0x20
    e448:	sub	x0, x29, #0x10
    e44c:	add	x22, sp, #0x20
    e450:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e454:	mov	w8, #0x104                 	// #260
    e458:	strh	w8, [sp, #80]
    e45c:	sub	x8, x29, #0x40
    e460:	sub	x0, x29, #0x58
    e464:	add	x1, sp, #0x40
    e468:	stp	x22, xzr, [sp, #64]
    e46c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e470:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    e474:	add	x8, x8, #0x0
    e478:	stp	x8, xzr, [sp, #8]
    e47c:	sub	x8, x29, #0x28
    e480:	sub	x0, x29, #0x40
    e484:	add	x1, sp, #0x8
    e488:	strh	w19, [sp, #24]
    e48c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e490:	sub	x2, x29, #0x28
    e494:	mov	x0, x20
    e498:	mov	x1, x21
    e49c:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    e4a0:	cbz	x8, e3f4 <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb+0x60>
    e4a4:	ldr	x8, [x8, #16]
    e4a8:	cbz	x8, e3f4 <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb+0x60>
    e4ac:	ldrb	w9, [x8, #8]
    e4b0:	cmp	w9, #0x18
    e4b4:	b.ne	e4c8 <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb+0x134>  // b.any
    e4b8:	mov	w8, #0x1                   	// #1
    e4bc:	mov	w0, wzr
    e4c0:	strb	w8, [x20]
    e4c4:	b	e4e0 <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb+0x14c>
    e4c8:	cmp	w9, #0x2
    e4cc:	strb	wzr, [x20]
    e4d0:	b.ne	e4f8 <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb+0x164>  // b.any
    e4d4:	ldrb	w8, [x8, #24]
    e4d8:	cmp	w8, #0x0
    e4dc:	cset	w0, ne  // ne = any
    e4e0:	ldp	x20, x19, [sp, #288]
    e4e4:	ldp	x22, x21, [sp, #272]
    e4e8:	ldr	x28, [sp, #256]
    e4ec:	ldp	x29, x30, [sp, #240]
    e4f0:	add	sp, sp, #0x130
    e4f4:	ret
    e4f8:	ldr	x20, [x19, #8]
    e4fc:	ldr	w21, [x19, #16]
    e500:	mov	x0, x19
    e504:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e508:	mov	w8, #0x503                 	// #1283
    e50c:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    e510:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    e514:	stp	x0, x1, [sp, #8]
    e518:	add	x9, x9, #0x0
    e51c:	add	x10, sp, #0x8
    e520:	add	x11, x11, #0x0
    e524:	mov	w19, #0x103                 	// #259
    e528:	sturh	w8, [x29, #-72]
    e52c:	sub	x8, x29, #0x40
    e530:	sub	x0, x29, #0x58
    e534:	sub	x1, x29, #0x70
    e538:	stp	x9, x10, [x29, #-88]
    e53c:	stp	x11, xzr, [x29, #-112]
    e540:	sturh	w19, [x29, #-96]
    e544:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e548:	mov	w8, #0x105                 	// #261
    e54c:	sub	x9, x29, #0x10
    e550:	strh	w8, [sp, #104]
    e554:	sub	x8, x29, #0x28
    e558:	sub	x0, x29, #0x40
    e55c:	add	x1, sp, #0x58
    e560:	stp	x9, xzr, [sp, #88]
    e564:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e568:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    e56c:	add	x8, x8, #0x0
    e570:	stp	x8, xzr, [sp, #64]
    e574:	add	x8, sp, #0x20
    e578:	sub	x0, x29, #0x28
    e57c:	add	x1, sp, #0x40
    e580:	strh	w19, [sp, #80]
    e584:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e588:	add	x2, sp, #0x20
    e58c:	b	e494 <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb+0x100>

000000000000e590 <_ZNK4llvm6Record13getValueAsDagENS_9StringRefE>:
    e590:	sub	sp, sp, #0x100
    e594:	stp	x29, x30, [sp, #208]
    e598:	str	x21, [sp, #224]
    e59c:	stp	x20, x19, [sp, #240]
    e5a0:	add	x29, sp, #0xd0
    e5a4:	mov	x19, x0
    e5a8:	stp	x1, x2, [x29, #-16]
    e5ac:	mov	x0, x1
    e5b0:	mov	x1, x2
    e5b4:	bl	29c4 <_ZN4llvm10StringInit3getENS_9StringRefE>
    e5b8:	ldr	w9, [x19, #80]
    e5bc:	cbz	w9, e5e8 <_ZNK4llvm6Record13getValueAsDagENS_9StringRefE+0x58>
    e5c0:	ldr	x8, [x19, #72]
    e5c4:	add	x9, x9, x9, lsl #1
    e5c8:	lsl	x9, x9, #3
    e5cc:	mov	x10, x8
    e5d0:	ldr	x11, [x10], #24
    e5d4:	cmp	x11, x0
    e5d8:	b.eq	e688 <_ZNK4llvm6Record13getValueAsDagENS_9StringRefE+0xf8>  // b.none
    e5dc:	subs	x9, x9, #0x18
    e5e0:	mov	x8, x10
    e5e4:	b.ne	e5d0 <_ZNK4llvm6Record13getValueAsDagENS_9StringRefE+0x40>  // b.any
    e5e8:	ldr	x20, [x19, #8]
    e5ec:	ldr	w21, [x19, #16]
    e5f0:	mov	x0, x19
    e5f4:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e5f8:	mov	w8, #0x503                 	// #1283
    e5fc:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    e600:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    e604:	stp	x0, x1, [sp, #80]
    e608:	add	x9, x9, #0x0
    e60c:	add	x10, sp, #0x50
    e610:	add	x11, x11, #0x0
    e614:	mov	w19, #0x103                 	// #259
    e618:	strh	w8, [sp, #112]
    e61c:	sub	x8, x29, #0x58
    e620:	add	x0, sp, #0x60
    e624:	add	x1, sp, #0x38
    e628:	stp	x9, x10, [sp, #96]
    e62c:	stp	x11, xzr, [sp, #56]
    e630:	strh	w19, [sp, #72]
    e634:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e638:	mov	w8, #0x105                 	// #261
    e63c:	sub	x9, x29, #0x10
    e640:	strh	w8, [sp, #48]
    e644:	sub	x8, x29, #0x40
    e648:	sub	x0, x29, #0x58
    e64c:	add	x1, sp, #0x20
    e650:	stp	x9, xzr, [sp, #32]
    e654:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e658:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    e65c:	add	x8, x8, #0x0
    e660:	stp	x8, xzr, [sp, #8]
    e664:	sub	x8, x29, #0x28
    e668:	sub	x0, x29, #0x40
    e66c:	add	x1, sp, #0x8
    e670:	strh	w19, [sp, #24]
    e674:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e678:	sub	x2, x29, #0x28
    e67c:	mov	x0, x20
    e680:	mov	x1, x21
    e684:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    e688:	cbz	x8, e5e8 <_ZNK4llvm6Record13getValueAsDagENS_9StringRefE+0x58>
    e68c:	ldr	x0, [x8, #16]
    e690:	cbz	x0, e5e8 <_ZNK4llvm6Record13getValueAsDagENS_9StringRefE+0x58>
    e694:	ldrb	w8, [x0, #8]
    e698:	cmp	w8, #0x5
    e69c:	b.ne	e6b4 <_ZNK4llvm6Record13getValueAsDagENS_9StringRefE+0x124>  // b.any
    e6a0:	ldp	x20, x19, [sp, #240]
    e6a4:	ldr	x21, [sp, #224]
    e6a8:	ldp	x29, x30, [sp, #208]
    e6ac:	add	sp, sp, #0x100
    e6b0:	ret
    e6b4:	ldr	x20, [x19, #8]
    e6b8:	ldr	w21, [x19, #16]
    e6bc:	mov	x0, x19
    e6c0:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e6c4:	mov	w8, #0x503                 	// #1283
    e6c8:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    e6cc:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    e6d0:	stp	x0, x1, [sp, #80]
    e6d4:	add	x9, x9, #0x0
    e6d8:	add	x10, sp, #0x50
    e6dc:	add	x11, x11, #0x0
    e6e0:	mov	w19, #0x103                 	// #259
    e6e4:	strh	w8, [sp, #112]
    e6e8:	sub	x8, x29, #0x58
    e6ec:	add	x0, sp, #0x60
    e6f0:	add	x1, sp, #0x38
    e6f4:	stp	x9, x10, [sp, #96]
    e6f8:	stp	x11, xzr, [sp, #56]
    e6fc:	strh	w19, [sp, #72]
    e700:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e704:	mov	w8, #0x105                 	// #261
    e708:	sub	x9, x29, #0x10
    e70c:	strh	w8, [sp, #48]
    e710:	sub	x8, x29, #0x40
    e714:	sub	x0, x29, #0x58
    e718:	add	x1, sp, #0x20
    e71c:	stp	x9, xzr, [sp, #32]
    e720:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e724:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    e728:	add	x8, x8, #0x0
    e72c:	b	e660 <_ZNK4llvm6Record13getValueAsDagENS_9StringRefE+0xd0>

000000000000e730 <_ZNK4llvm12RecordKeeper4dumpEv>:
    e730:	stp	x29, x30, [sp, #-32]!
    e734:	str	x19, [sp, #16]
    e738:	mov	x29, sp
    e73c:	mov	x19, x0
    e740:	bl	0 <_ZN4llvm4errsEv>
    e744:	mov	x1, x19
    e748:	ldr	x19, [sp, #16]
    e74c:	ldp	x29, x30, [sp], #32
    e750:	b	e754 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE>

000000000000e754 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE>:
    e754:	stp	x29, x30, [sp, #-80]!
    e758:	str	x25, [sp, #16]
    e75c:	stp	x24, x23, [sp, #32]
    e760:	stp	x22, x21, [sp, #48]
    e764:	stp	x20, x19, [sp, #64]
    e768:	mov	x29, sp
    e76c:	ldp	x9, x8, [x0, #16]
    e770:	mov	x19, x0
    e774:	mov	x20, x1
    e778:	sub	x9, x9, x8
    e77c:	cmp	x9, #0x27
    e780:	b.hi	e7a0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x4c>  // b.pmore
    e784:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    e788:	add	x1, x1, #0x0
    e78c:	mov	w2, #0x28                  	// #40
    e790:	mov	x0, x19
    e794:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    e798:	ldr	x8, [x19, #24]
    e79c:	b	e7c4 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x70>
    e7a0:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    e7a4:	add	x9, x9, #0x0
    e7a8:	ldr	x10, [x9, #32]
    e7ac:	ldp	q1, q0, [x9]
    e7b0:	str	x10, [x8, #32]
    e7b4:	stp	q1, q0, [x8]
    e7b8:	ldr	x8, [x19, #24]
    e7bc:	add	x8, x8, #0x28
    e7c0:	str	x8, [x19, #24]
    e7c4:	ldr	x21, [x20, #24]
    e7c8:	ldr	x9, [x19, #16]
    e7cc:	add	x23, x20, #0x8
    e7d0:	cmp	x21, x23
    e7d4:	sub	x9, x9, x8
    e7d8:	b.eq	e84c <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0xf8>  // b.none
    e7dc:	adrp	x22, 0 <_ZNK4llvm5RecTy4dumpEv>
    e7e0:	mov	w25, #0x6c63                	// #27747
    e7e4:	add	x22, x22, #0x0
    e7e8:	mov	w24, #0x2073                	// #8307
    e7ec:	movk	w25, #0x7361, lsl #16
    e7f0:	b	e830 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0xdc>
    e7f4:	strh	w24, [x8, #4]
    e7f8:	str	w25, [x8]
    e7fc:	ldr	x8, [x19, #24]
    e800:	mov	x0, x19
    e804:	add	x8, x8, #0x6
    e808:	str	x8, [x19, #24]
    e80c:	ldr	x1, [x21, #64]
    e810:	bl	cb38 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE>
    e814:	mov	x0, x21
    e818:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    e81c:	ldp	x9, x8, [x19, #16]
    e820:	mov	x21, x0
    e824:	cmp	x0, x23
    e828:	sub	x9, x9, x8
    e82c:	b.eq	e84c <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0xf8>  // b.none
    e830:	cmp	x9, #0x5
    e834:	b.hi	e7f4 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0xa0>  // b.pmore
    e838:	mov	w2, #0x6                   	// #6
    e83c:	mov	x0, x19
    e840:	mov	x1, x22
    e844:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    e848:	b	e80c <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0xb8>
    e84c:	cmp	x9, #0x24
    e850:	b.hi	e86c <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x118>  // b.pmore
    e854:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    e858:	add	x1, x1, #0x0
    e85c:	mov	w2, #0x25                  	// #37
    e860:	mov	x0, x19
    e864:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    e868:	b	e890 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x13c>
    e86c:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    e870:	add	x9, x9, #0x0
    e874:	ldur	x10, [x9, #29]
    e878:	ldp	q1, q0, [x9]
    e87c:	stur	x10, [x8, #29]
    e880:	stp	q1, q0, [x8]
    e884:	ldr	x8, [x19, #24]
    e888:	add	x8, x8, #0x25
    e88c:	str	x8, [x19, #24]
    e890:	ldr	x21, [x20, #72]
    e894:	add	x22, x20, #0x38
    e898:	cmp	x21, x22
    e89c:	b.eq	e908 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x1b4>  // b.none
    e8a0:	adrp	x20, 0 <_ZNK4llvm5RecTy4dumpEv>
    e8a4:	mov	w23, #0x6564                	// #25956
    e8a8:	add	x20, x20, #0x0
    e8ac:	movk	w23, #0x2066, lsl #16
    e8b0:	b	e8e4 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x190>
    e8b4:	str	w23, [x8]
    e8b8:	ldr	x8, [x19, #24]
    e8bc:	mov	x0, x19
    e8c0:	add	x8, x8, #0x4
    e8c4:	str	x8, [x19, #24]
    e8c8:	ldr	x1, [x21, #64]
    e8cc:	bl	cb38 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE>
    e8d0:	mov	x0, x21
    e8d4:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    e8d8:	mov	x21, x0
    e8dc:	cmp	x0, x22
    e8e0:	b.eq	e908 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x1b4>  // b.none
    e8e4:	ldp	x9, x8, [x19, #16]
    e8e8:	sub	x9, x9, x8
    e8ec:	cmp	x9, #0x3
    e8f0:	b.hi	e8b4 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x160>  // b.pmore
    e8f4:	mov	w2, #0x4                   	// #4
    e8f8:	mov	x0, x19
    e8fc:	mov	x1, x20
    e900:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    e904:	b	e8c8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x174>
    e908:	mov	x0, x19
    e90c:	ldp	x20, x19, [sp, #64]
    e910:	ldp	x22, x21, [sp, #48]
    e914:	ldp	x24, x23, [sp, #32]
    e918:	ldr	x25, [sp, #16]
    e91c:	ldp	x29, x30, [sp], #80
    e920:	ret

000000000000e924 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE>:
    e924:	sub	sp, sp, #0xc0
    e928:	stp	x29, x30, [sp, #96]
    e92c:	stp	x28, x27, [sp, #112]
    e930:	stp	x26, x25, [sp, #128]
    e934:	stp	x24, x23, [sp, #144]
    e938:	stp	x22, x21, [sp, #160]
    e93c:	stp	x20, x19, [sp, #176]
    e940:	add	x29, sp, #0x60
    e944:	stp	x1, x2, [x29, #-16]
    e948:	ldr	x25, [x0, #16]
    e94c:	mov	x21, x0
    e950:	add	x23, x0, #0x8
    e954:	str	x8, [sp]
    e958:	cbz	x25, e9f0 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0xcc>
    e95c:	mov	x20, x2
    e960:	mov	x22, x1
    e964:	mov	x24, x23
    e968:	b	e97c <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x58>
    e96c:	add	x8, x25, #0x10
    e970:	mov	x24, x25
    e974:	ldr	x25, [x8]
    e978:	cbz	x25, e9b8 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x94>
    e97c:	ldr	x19, [x25, #40]
    e980:	cmp	x20, x19
    e984:	csel	x2, x20, x19, cc  // cc = lo, ul, last
    e988:	cbz	x2, e9a4 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x80>
    e98c:	ldr	x0, [x25, #32]
    e990:	mov	x1, x22
    e994:	bl	0 <memcmp>
    e998:	cbz	w0, e9a4 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x80>
    e99c:	tbz	w0, #31, e96c <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x48>
    e9a0:	b	e9ac <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x88>
    e9a4:	cmp	x19, x20
    e9a8:	b.cs	e96c <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x48>  // b.hs, b.nlast
    e9ac:	add	x8, x25, #0x18
    e9b0:	ldr	x25, [x8]
    e9b4:	cbnz	x25, e97c <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x58>
    e9b8:	cmp	x24, x23
    e9bc:	b.eq	e9f4 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0xd0>  // b.none
    e9c0:	ldr	x25, [x24, #40]
    e9c4:	cmp	x25, x20
    e9c8:	csel	x2, x25, x20, cc  // cc = lo, ul, last
    e9cc:	cbz	x2, e9e8 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0xc4>
    e9d0:	ldr	x1, [x24, #32]
    e9d4:	mov	x0, x22
    e9d8:	bl	0 <memcmp>
    e9dc:	cbz	w0, e9e8 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0xc4>
    e9e0:	tbnz	w0, #31, e9f0 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0xcc>
    e9e4:	b	e9f4 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0xd0>
    e9e8:	cmp	x20, x25
    e9ec:	b.cs	e9f4 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0xd0>  // b.hs, b.nlast
    e9f0:	mov	x24, x23
    e9f4:	cmp	x24, x23
    e9f8:	b.eq	eb74 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x250>  // b.none
    e9fc:	ldr	x25, [x24, #64]
    ea00:	cbz	x25, eb74 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x250>
    ea04:	ldr	x19, [sp]
    ea08:	add	x26, x21, #0x38
    ea0c:	stp	xzr, xzr, [x19]
    ea10:	str	xzr, [x19, #16]
    ea14:	ldr	x20, [x21, #72]
    ea18:	cmp	x20, x26
    ea1c:	b.eq	eb48 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x224>  // b.none
    ea20:	mov	x21, xzr
    ea24:	b	ea50 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x12c>
    ea28:	ldr	x8, [x19, #16]
    ea2c:	cmp	x21, x8
    ea30:	b.eq	ea80 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x15c>  // b.none
    ea34:	str	x27, [x21], #8
    ea38:	str	x21, [x19, #8]
    ea3c:	mov	x0, x20
    ea40:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    ea44:	mov	x20, x0
    ea48:	cmp	x0, x26
    ea4c:	b.eq	eb48 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x224>  // b.none
    ea50:	ldr	x27, [x20, #64]
    ea54:	ldr	w9, [x27, #96]
    ea58:	cbz	w9, ea3c <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x118>
    ea5c:	ldr	x8, [x27, #88]
    ea60:	add	x9, x9, x9, lsl #1
    ea64:	lsl	x9, x9, #3
    ea68:	ldr	x10, [x8], #24
    ea6c:	cmp	x10, x25
    ea70:	b.eq	ea28 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x104>  // b.none
    ea74:	subs	x9, x9, #0x18
    ea78:	b.ne	ea68 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x144>  // b.any
    ea7c:	b	ea3c <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x118>
    ea80:	ldr	x22, [x19]
    ea84:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
    ea88:	sub	x8, x21, x22
    ea8c:	cmp	x8, x9
    ea90:	b.eq	eb68 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x244>  // b.none
    ea94:	asr	x9, x8, #3
    ea98:	cmp	x8, #0x0
    ea9c:	csinc	x8, x9, xzr, ne  // ne = any
    eaa0:	adds	x8, x8, x9
    eaa4:	lsr	x10, x8, #60
    eaa8:	cset	w9, cs  // cs = hs, nlast
    eaac:	cmp	x10, #0x0
    eab0:	cset	w10, ne  // ne = any
    eab4:	orr	w9, w9, w10
    eab8:	cmp	w9, #0x0
    eabc:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
    eac0:	sub	x24, x21, x22
    eac4:	csel	x28, x9, x8, ne  // ne = any
    eac8:	asr	x19, x24, #3
    eacc:	cbz	x28, eae0 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x1bc>
    ead0:	lsl	x0, x28, #3
    ead4:	bl	0 <_Znwm>
    ead8:	mov	x23, x0
    eadc:	b	eae4 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x1c0>
    eae0:	mov	x23, xzr
    eae4:	add	x19, x23, x19, lsl #3
    eae8:	cmp	x24, #0x1
    eaec:	str	x27, [x19]
    eaf0:	b.lt	eb04 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x1e0>  // b.tstop
    eaf4:	mov	x0, x23
    eaf8:	mov	x1, x22
    eafc:	mov	x2, x24
    eb00:	bl	0 <memmove>
    eb04:	sub	x2, x21, x21
    eb08:	add	x24, x19, #0x8
    eb0c:	cmp	x2, #0x1
    eb10:	asr	x19, x2, #3
    eb14:	b.lt	eb24 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x200>  // b.tstop
    eb18:	mov	x0, x24
    eb1c:	mov	x1, x21
    eb20:	bl	0 <memmove>
    eb24:	add	x21, x24, x19, lsl #3
    eb28:	cbz	x22, eb34 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x210>
    eb2c:	mov	x0, x22
    eb30:	bl	0 <_ZdlPv>
    eb34:	ldr	x19, [sp]
    eb38:	add	x8, x23, x28, lsl #3
    eb3c:	stp	x23, x21, [x19]
    eb40:	str	x8, [x19, #16]
    eb44:	b	ea3c <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x118>
    eb48:	ldp	x20, x19, [sp, #176]
    eb4c:	ldp	x22, x21, [sp, #160]
    eb50:	ldp	x24, x23, [sp, #144]
    eb54:	ldp	x26, x25, [sp, #128]
    eb58:	ldp	x28, x27, [sp, #112]
    eb5c:	ldp	x29, x30, [sp, #96]
    eb60:	add	sp, sp, #0xc0
    eb64:	ret
    eb68:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    eb6c:	add	x0, x0, #0x0
    eb70:	bl	0 <_ZSt20__throw_length_errorPKc>
    eb74:	mov	w8, #0x503                 	// #1283
    eb78:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    eb7c:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    eb80:	add	x9, x9, #0x0
    eb84:	sub	x10, x29, #0x10
    eb88:	add	x11, x11, #0x0
    eb8c:	mov	w12, #0x103                 	// #259
    eb90:	strh	w8, [sp, #48]
    eb94:	sub	x8, x29, #0x28
    eb98:	add	x0, sp, #0x20
    eb9c:	add	x1, sp, #0x8
    eba0:	stp	x9, x10, [sp, #32]
    eba4:	stp	x11, xzr, [sp, #8]
    eba8:	strh	w12, [sp, #24]
    ebac:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    ebb0:	sub	x0, x29, #0x28
    ebb4:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>

000000000000ebb8 <_ZN4llvm11MapResolver7resolveEPNS_4InitE>:
    ebb8:	sub	sp, sp, #0x30
    ebbc:	stp	x29, x30, [sp, #16]
    ebc0:	stp	x20, x19, [sp, #32]
    ebc4:	add	x29, sp, #0x10
    ebc8:	str	x1, [sp, #8]
    ebcc:	ldr	w9, [x0, #48]
    ebd0:	ldr	x10, [x0, #32]
    ebd4:	mov	x8, x0
    ebd8:	cbz	w9, ec38 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x80>
    ebdc:	orr	x11, x1, #0x8
    ebe0:	cmn	x11, #0x8
    ebe4:	b.eq	ecd4 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x11c>  // b.none
    ebe8:	ubfx	x11, x1, #4, #28
    ebec:	sub	w12, w9, #0x1
    ebf0:	eor	w11, w11, w1, lsr #9
    ebf4:	and	w14, w12, w11
    ebf8:	mov	w13, #0x18                  	// #24
    ebfc:	umaddl	x11, w14, w13, x10
    ec00:	ldr	x15, [x11]
    ec04:	cmp	x15, x1
    ec08:	b.eq	ec40 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x88>  // b.none
    ec0c:	mov	w16, #0x1                   	// #1
    ec10:	cmn	x15, #0x8
    ec14:	b.eq	ec38 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x80>  // b.none
    ec18:	add	w11, w14, w16
    ec1c:	and	w14, w11, w12
    ec20:	umaddl	x11, w14, w13, x10
    ec24:	ldr	x15, [x11]
    ec28:	add	w16, w16, #0x1
    ec2c:	cmp	x15, x1
    ec30:	b.eq	ec40 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x88>  // b.none
    ec34:	b	ec10 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x58>
    ec38:	mov	w11, #0x18                  	// #24
    ec3c:	madd	x11, x9, x11, x10
    ec40:	mov	w12, #0x18                  	// #24
    ec44:	madd	x9, x9, x12, x10
    ec48:	cmp	x11, x9
    ec4c:	b.eq	ecbc <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x104>  // b.none
    ec50:	ldrb	w9, [x11, #16]
    ec54:	ldr	x19, [x11, #8]
    ec58:	cbnz	w9, ecc0 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x108>
    ec5c:	add	x20, x8, #0x18
    ec60:	ldr	w9, [x20, #16]
    ec64:	cmp	w9, #0x2
    ec68:	b.cc	ecc0 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x108>  // b.lo, b.ul, b.last
    ec6c:	mov	x10, #0xfffffffffffffff0    	// #-16
    ec70:	str	x10, [x11]
    ec74:	ldr	w10, [x8, #44]
    ec78:	sub	w9, w9, #0x1
    ec7c:	str	w9, [x8, #40]
    ec80:	mov	x0, x19
    ec84:	add	w9, w10, #0x1
    ec88:	str	w9, [x8, #44]
    ec8c:	ldr	x9, [x19]
    ec90:	mov	x1, x8
    ec94:	ldr	x9, [x9, #96]
    ec98:	blr	x9
    ec9c:	mov	x19, x0
    eca0:	add	x1, sp, #0x8
    eca4:	mov	x0, x20
    eca8:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    ecac:	mov	w8, #0x1                   	// #1
    ecb0:	str	x19, [x0]
    ecb4:	strb	w8, [x0, #8]
    ecb8:	b	ecc0 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x108>
    ecbc:	mov	x19, xzr
    ecc0:	mov	x0, x19
    ecc4:	ldp	x20, x19, [sp, #32]
    ecc8:	ldp	x29, x30, [sp, #16]
    eccc:	add	sp, sp, #0x30
    ecd0:	ret
    ecd4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    ecd8:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    ecdc:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    ece0:	add	x0, x0, #0x0
    ece4:	add	x1, x1, #0x0
    ece8:	add	x3, x3, #0x0
    ecec:	mov	w2, #0x252                 	// #594
    ecf0:	bl	0 <__assert_fail>

000000000000ecf4 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE>:
    ecf4:	sub	sp, sp, #0x30
    ecf8:	stp	x29, x30, [sp, #16]
    ecfc:	stp	x20, x19, [sp, #32]
    ed00:	add	x29, sp, #0x10
    ed04:	str	x1, [sp, #8]
    ed08:	ldr	w9, [x0, #48]
    ed0c:	ldr	x8, [x0, #32]
    ed10:	mov	x19, x0
    ed14:	cbz	w9, ed50 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x5c>
    ed18:	orr	x10, x1, #0x8
    ed1c:	cmn	x10, #0x8
    ed20:	b.eq	ef40 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x24c>  // b.none
    ed24:	ubfx	x10, x1, #4, #28
    ed28:	eor	w10, w10, w1, lsr #9
    ed2c:	sub	w11, w9, #0x1
    ed30:	and	w10, w11, w10
    ed34:	lsl	x12, x10, #4
    ed38:	ldr	x12, [x8, x12]
    ed3c:	cmp	x12, x1
    ed40:	b.ne	eedc <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x1e8>  // b.any
    ed44:	add	x10, x8, x10, lsl #4
    ed48:	ldr	x20, [x10, #8]
    ed4c:	cbnz	x20, eec8 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x1d4>
    ed50:	mov	x0, x19
    ed54:	ldr	x10, [x0, #56]!
    ed58:	ldr	w11, [x0, #8]
    ed5c:	cbz	w11, ed7c <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x88>
    ed60:	lsl	x12, x11, #3
    ed64:	mov	x13, x10
    ed68:	ldr	x14, [x13], #8
    ed6c:	cmp	x14, x1
    ed70:	b.eq	edb4 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0xc0>  // b.none
    ed74:	subs	x12, x12, #0x8
    ed78:	b.ne	ed68 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x74>  // b.any
    ed7c:	ldr	x12, [x19, #8]
    ed80:	ldr	w13, [x12, #80]
    ed84:	cbz	w13, edd4 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0xe0>
    ed88:	ldr	x12, [x12, #72]
    ed8c:	add	x13, x13, x13, lsl #1
    ed90:	lsl	x13, x13, #3
    ed94:	mov	x14, x12
    ed98:	ldr	x15, [x14], #24
    ed9c:	cmp	x15, x1
    eda0:	b.eq	edbc <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0xc8>  // b.none
    eda4:	subs	x13, x13, #0x18
    eda8:	mov	x12, x14
    edac:	b.ne	ed98 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0xa4>  // b.any
    edb0:	b	edd4 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0xe0>
    edb4:	mov	x20, xzr
    edb8:	b	eec8 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x1d4>
    edbc:	cbz	x12, edd4 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0xe0>
    edc0:	ldr	x20, [x12, #16]
    edc4:	cbz	x20, ef80 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x28c>
    edc8:	ldrb	w12, [x20, #8]
    edcc:	cmp	w12, #0x18
    edd0:	b.ne	ee4c <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x158>  // b.any
    edd4:	mov	x20, xzr
    edd8:	cbz	w9, eea8 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x1b4>
    eddc:	ldr	x10, [sp, #8]
    ede0:	orr	x11, x10, #0x8
    ede4:	cmn	x11, #0x8
    ede8:	b.eq	ef60 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x26c>  // b.none
    edec:	ubfx	x11, x10, #4, #28
    edf0:	eor	w11, w11, w10, lsr #9
    edf4:	sub	w9, w9, #0x1
    edf8:	and	w11, w11, w9
    edfc:	add	x0, x8, w11, uxtw #4
    ee00:	ldr	x13, [x0]
    ee04:	cmp	x13, x10
    ee08:	b.eq	eec4 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x1d0>  // b.none
    ee0c:	mov	x12, xzr
    ee10:	mov	w15, #0x1                   	// #1
    ee14:	mov	x14, #0xfffffffffffffff0    	// #-16
    ee18:	cmn	x13, #0x8
    ee1c:	b.eq	ef0c <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x218>  // b.none
    ee20:	cmp	x12, #0x0
    ee24:	add	w11, w11, w15
    ee28:	ccmp	x13, x14, #0x0, eq  // eq = none
    ee2c:	and	w11, w11, w9
    ee30:	csel	x12, x12, x0, ne  // ne = any
    ee34:	add	x0, x8, w11, uxtw #4
    ee38:	ldr	x13, [x0]
    ee3c:	add	w15, w15, #0x1
    ee40:	cmp	x13, x10
    ee44:	b.eq	eec4 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x1d0>  // b.none
    ee48:	b	ee18 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x124>
    ee4c:	ldr	w8, [x19, #68]
    ee50:	cmp	w11, w8
    ee54:	b.cs	ef18 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x224>  // b.hs, b.nlast
    ee58:	str	x1, [x10, x11, lsl #3]
    ee5c:	ldp	w8, w9, [x19, #64]
    ee60:	cmp	w8, w9
    ee64:	b.cs	efa0 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x2ac>  // b.hs, b.nlast
    ee68:	add	w8, w8, #0x1
    ee6c:	str	w8, [x19, #64]
    ee70:	ldr	x8, [x20]
    ee74:	mov	x0, x20
    ee78:	mov	x1, x19
    ee7c:	ldr	x8, [x8, #96]
    ee80:	blr	x8
    ee84:	ldp	w8, w9, [x19, #64]
    ee88:	sub	x10, x8, #0x1
    ee8c:	cmp	x10, x9
    ee90:	b.hi	efa0 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x2ac>  // b.pmore
    ee94:	ldr	x8, [x19, #32]
    ee98:	ldr	w9, [x19, #48]
    ee9c:	mov	x20, x0
    eea0:	str	w10, [x19, #64]
    eea4:	cbnz	w9, eddc <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0xe8>
    eea8:	mov	x3, xzr
    eeac:	add	x0, x19, #0x18
    eeb0:	add	x1, sp, #0x8
    eeb4:	add	x2, sp, #0x8
    eeb8:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    eebc:	ldr	x8, [sp, #8]
    eec0:	stp	x8, xzr, [x0]
    eec4:	str	x20, [x0, #8]
    eec8:	mov	x0, x20
    eecc:	ldp	x20, x19, [sp, #32]
    eed0:	ldp	x29, x30, [sp, #16]
    eed4:	add	sp, sp, #0x30
    eed8:	ret
    eedc:	mov	w13, #0x1                   	// #1
    eee0:	cmn	x12, #0x8
    eee4:	b.eq	ed50 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x5c>  // b.none
    eee8:	add	w10, w10, w13
    eeec:	and	w10, w10, w11
    eef0:	lsl	x12, x10, #4
    eef4:	ldr	x12, [x8, x12]
    eef8:	add	w13, w13, #0x1
    eefc:	cmp	x12, x1
    ef00:	b.ne	eee0 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x1ec>  // b.any
    ef04:	mov	w10, w10
    ef08:	b	ed44 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x50>
    ef0c:	cmp	x12, #0x0
    ef10:	csel	x3, x0, x12, eq  // eq = none
    ef14:	b	eeac <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x1b8>
    ef18:	add	x8, x0, #0x10
    ef1c:	mov	w3, #0x8                   	// #8
    ef20:	str	x1, [sp]
    ef24:	mov	x1, x8
    ef28:	mov	x2, xzr
    ef2c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    ef30:	ldr	x1, [sp]
    ef34:	ldr	w11, [x19, #64]
    ef38:	ldr	x10, [x19, #56]
    ef3c:	b	ee58 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x164>
    ef40:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    ef44:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    ef48:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    ef4c:	add	x0, x0, #0x0
    ef50:	add	x1, x1, #0x0
    ef54:	add	x3, x3, #0x0
    ef58:	mov	w2, #0x252                 	// #594
    ef5c:	bl	0 <__assert_fail>
    ef60:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    ef64:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    ef68:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    ef6c:	add	x0, x0, #0x0
    ef70:	add	x1, x1, #0x0
    ef74:	add	x3, x3, #0x0
    ef78:	mov	w2, #0x252                 	// #594
    ef7c:	bl	0 <__assert_fail>
    ef80:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    ef84:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    ef88:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    ef8c:	add	x0, x0, #0x0
    ef90:	add	x1, x1, #0x0
    ef94:	add	x3, x3, #0x0
    ef98:	mov	w2, #0x69                  	// #105
    ef9c:	bl	0 <__assert_fail>
    efa0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    efa4:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    efa8:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    efac:	add	x0, x0, #0x0
    efb0:	add	x1, x1, #0x0
    efb4:	add	x3, x3, #0x0
    efb8:	mov	w2, #0x43                  	// #67
    efbc:	bl	0 <__assert_fail>

000000000000efc0 <_ZN4llvm23TrackUnresolvedResolver7resolveEPNS_4InitE>:
    efc0:	sub	sp, sp, #0x50
    efc4:	stp	x29, x30, [sp, #48]
    efc8:	stp	x20, x19, [sp, #64]
    efcc:	add	x29, sp, #0x30
    efd0:	mov	x19, x0
    efd4:	ldr	x0, [x0, #24]
    efd8:	cbz	x0, f038 <_ZN4llvm23TrackUnresolvedResolver7resolveEPNS_4InitE+0x78>
    efdc:	ldr	x8, [x0]
    efe0:	ldr	x8, [x8, #16]
    efe4:	blr	x8
    efe8:	cbz	x0, f038 <_ZN4llvm23TrackUnresolvedResolver7resolveEPNS_4InitE+0x78>
    efec:	ldrb	w8, [x19, #32]
    eff0:	mov	x20, x0
    eff4:	cbnz	w8, f044 <_ZN4llvm23TrackUnresolvedResolver7resolveEPNS_4InitE+0x84>
    eff8:	strb	wzr, [sp, #24]
    effc:	adrp	x8, e38 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x180>
    f000:	ldr	x8, [x8]
    f004:	str	xzr, [sp, #32]
    f008:	strb	wzr, [sp, #40]
    f00c:	add	x1, sp, #0x8
    f010:	add	x8, x8, #0x10
    f014:	stp	x8, xzr, [sp, #8]
    f018:	ldr	x8, [x20]
    f01c:	mov	x0, x20
    f020:	ldr	x8, [x8, #96]
    f024:	blr	x8
    f028:	ldrb	w8, [sp, #40]
    f02c:	ldrb	w9, [x19, #32]
    f030:	orr	w8, w9, w8
    f034:	b	f040 <_ZN4llvm23TrackUnresolvedResolver7resolveEPNS_4InitE+0x80>
    f038:	mov	x20, xzr
    f03c:	mov	w8, #0x1                   	// #1
    f040:	strb	w8, [x19, #32]
    f044:	mov	x0, x20
    f048:	ldp	x20, x19, [sp, #64]
    f04c:	ldp	x29, x30, [sp, #48]
    f050:	add	sp, sp, #0x50
    f054:	ret

000000000000f058 <_ZN4llvm20HasReferenceResolver7resolveEPNS_4InitE>:
    f058:	ldr	x8, [x0, #24]
    f05c:	cmp	x8, x1
    f060:	b.eq	f06c <_ZN4llvm20HasReferenceResolver7resolveEPNS_4InitE+0x14>  // b.none
    f064:	mov	x0, xzr
    f068:	ret
    f06c:	mov	w8, #0x1                   	// #1
    f070:	strb	w8, [x0, #32]
    f074:	mov	x0, xzr
    f078:	ret

000000000000f07c <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE>:
    f07c:	sub	sp, sp, #0x150
    f080:	stp	x29, x30, [sp, #240]
    f084:	stp	x28, x27, [sp, #256]
    f088:	stp	x26, x25, [sp, #272]
    f08c:	stp	x24, x23, [sp, #288]
    f090:	stp	x22, x21, [sp, #304]
    f094:	stp	x20, x19, [sp, #320]
    f098:	add	x29, sp, #0xf0
    f09c:	ldr	x23, [x1, #32]
    f0a0:	strb	wzr, [sp, #40]
    f0a4:	adrp	x8, dd8 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x120>
    f0a8:	ldr	x8, [x8]
    f0ac:	add	x24, sp, #0x18
    f0b0:	mov	x19, x1
    f0b4:	mov	x9, x0
    f0b8:	add	x27, x8, #0x10
    f0bc:	add	x0, x24, #0x18
    f0c0:	sub	x1, x29, #0x48
    f0c4:	mov	x21, x2
    f0c8:	stp	xzr, xzr, [sp, #56]
    f0cc:	str	xzr, [sp, #48]
    f0d0:	stp	x3, x27, [sp, #16]
    f0d4:	str	x3, [sp, #32]
    f0d8:	str	wzr, [sp, #72]
    f0dc:	mov	x22, x9
    f0e0:	stur	x9, [x29, #-72]
    f0e4:	sub	x20, x29, #0x48
    f0e8:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    f0ec:	str	x23, [x0]
    f0f0:	strb	wzr, [x0, #8]
    f0f4:	ldr	x8, [x21]
    f0f8:	add	x1, sp, #0x18
    f0fc:	mov	x0, x21
    f100:	ldr	x8, [x8, #96]
    f104:	blr	x8
    f108:	mov	x23, x0
    f10c:	ldr	x0, [sp, #56]
    f110:	str	x27, [sp, #24]
    f114:	bl	0 <_ZdlPv>
    f118:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    f11c:	ldr	d0, [x8]
    f120:	ldr	x9, [x19, #32]
    f124:	add	x8, x24, #0x10
    f128:	str	x8, [sp, #24]
    f12c:	str	d0, [sp, #32]
    f130:	ldr	w8, [x19, #48]
    f134:	cmp	x23, x9
    f138:	cset	w28, ne  // ne = any
    f13c:	cbz	w8, f258 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x1dc>
    f140:	str	x23, [sp, #8]
    f144:	add	x24, x20, #0x18
    f148:	mov	w23, #0x7                   	// #7
    f14c:	ldr	w9, [x19, #52]
    f150:	sub	x10, x23, #0x7
    f154:	cmp	x10, x9
    f158:	b.cs	f2b4 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x238>  // b.hs, b.nlast
    f15c:	ldr	x25, [x19, x23, lsl #3]
    f160:	cbz	x25, f2d4 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x258>
    f164:	ldrb	w9, [x25, #8]
    f168:	add	x8, x19, w8, uxtw #3
    f16c:	ldr	x20, [x8, x23, lsl #3]
    f170:	cmp	w9, #0x5
    f174:	b.ne	f194 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x118>  // b.any
    f178:	ldr	x3, [sp, #16]
    f17c:	mov	x0, x22
    f180:	mov	x1, x25
    f184:	mov	x2, x21
    f188:	bl	f07c <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE>
    f18c:	mov	x26, x0
    f190:	b	f1e8 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x16c>
    f194:	ldr	x8, [sp, #16]
    f198:	sub	x1, x29, #0x10
    f19c:	mov	x0, x24
    f1a0:	sturb	wzr, [x29, #-56]
    f1a4:	stp	x27, x8, [x29, #-72]
    f1a8:	stp	xzr, xzr, [x24]
    f1ac:	str	wzr, [x24, #24]
    f1b0:	str	xzr, [x24, #16]
    f1b4:	stur	x22, [x29, #-16]
    f1b8:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    f1bc:	str	x25, [x0]
    f1c0:	strb	wzr, [x0, #8]
    f1c4:	ldr	x8, [x21]
    f1c8:	sub	x1, x29, #0x48
    f1cc:	mov	x0, x21
    f1d0:	ldr	x8, [x8, #96]
    f1d4:	blr	x8
    f1d8:	mov	x26, x0
    f1dc:	ldur	x0, [x29, #-40]
    f1e0:	stur	x27, [x29, #-72]
    f1e4:	bl	0 <_ZdlPv>
    f1e8:	ldp	w8, w9, [sp, #32]
    f1ec:	cmp	w8, w9
    f1f0:	b.cs	f238 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x1bc>  // b.hs, b.nlast
    f1f4:	ldr	x9, [sp, #24]
    f1f8:	add	x8, x9, w8, uxtw #4
    f1fc:	stp	x26, x20, [x8]
    f200:	ldp	w8, w9, [sp, #32]
    f204:	cmp	w8, w9
    f208:	b.cs	f2f4 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x278>  // b.hs, b.nlast
    f20c:	add	x3, x8, #0x1
    f210:	str	w3, [sp, #32]
    f214:	ldr	w8, [x19, #48]
    f218:	cmp	x25, x26
    f21c:	cset	w9, ne  // ne = any
    f220:	sub	x10, x23, #0x6
    f224:	add	x23, x23, #0x1
    f228:	cmp	x10, x8
    f22c:	orr	w28, w28, w9
    f230:	b.cc	f14c <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0xd0>  // b.lo, b.ul, b.last
    f234:	b	f24c <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x1d0>
    f238:	add	x0, sp, #0x18
    f23c:	mov	x1, xzr
    f240:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    f244:	ldr	w8, [sp, #32]
    f248:	b	f1f4 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x178>
    f24c:	ldr	x23, [sp, #8]
    f250:	tbnz	w28, #0, f264 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x1e8>
    f254:	b	f278 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x1fc>
    f258:	cmp	x23, x9
    f25c:	b.eq	f278 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x1fc>  // b.none
    f260:	mov	x3, xzr
    f264:	ldr	x2, [sp, #24]
    f268:	mov	x0, x23
    f26c:	mov	x1, xzr
    f270:	bl	76b4 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE>
    f274:	mov	x19, x0
    f278:	ldr	x0, [sp, #24]
    f27c:	add	x8, sp, #0x18
    f280:	add	x8, x8, #0x10
    f284:	cmp	x0, x8
    f288:	b.eq	f290 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x214>  // b.none
    f28c:	bl	0 <free>
    f290:	mov	x0, x19
    f294:	ldp	x20, x19, [sp, #320]
    f298:	ldp	x22, x21, [sp, #304]
    f29c:	ldp	x24, x23, [sp, #288]
    f2a0:	ldp	x26, x25, [sp, #272]
    f2a4:	ldp	x28, x27, [sp, #256]
    f2a8:	ldp	x29, x30, [sp, #240]
    f2ac:	add	sp, sp, #0x150
    f2b0:	ret
    f2b4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    f2b8:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    f2bc:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    f2c0:	add	x0, x0, #0x0
    f2c4:	add	x1, x1, #0x0
    f2c8:	add	x3, x3, #0x0
    f2cc:	mov	w2, #0x545                 	// #1349
    f2d0:	bl	0 <__assert_fail>
    f2d4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    f2d8:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    f2dc:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    f2e0:	add	x0, x0, #0x0
    f2e4:	add	x1, x1, #0x0
    f2e8:	add	x3, x3, #0x0
    f2ec:	mov	w2, #0x69                  	// #105
    f2f0:	bl	0 <__assert_fail>
    f2f4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    f2f8:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    f2fc:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    f300:	add	x0, x0, #0x0
    f304:	add	x1, x1, #0x0
    f308:	add	x3, x3, #0x0
    f30c:	mov	w2, #0x43                  	// #67
    f310:	bl	0 <__assert_fail>

000000000000f314 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_>:
    f314:	sub	sp, sp, #0x70
    f318:	stp	x29, x30, [sp, #16]
    f31c:	str	x27, [sp, #32]
    f320:	stp	x26, x25, [sp, #48]
    f324:	stp	x24, x23, [sp, #64]
    f328:	stp	x22, x21, [sp, #80]
    f32c:	stp	x20, x19, [sp, #96]
    f330:	add	x29, sp, #0x10
    f334:	sub	x26, x1, x0
    f338:	cmp	x26, #0x81
    f33c:	b.lt	f528 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0x214>  // b.tstop
    f340:	mov	x22, x3
    f344:	mov	x21, x1
    f348:	mov	x19, x0
    f34c:	mov	x23, x2
    f350:	and	x20, x3, #0xff
    f354:	add	x24, x0, #0x8
    f358:	b	f380 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0x6c>
    f35c:	mov	x0, x25
    f360:	mov	x1, x21
    f364:	mov	x2, x23
    f368:	mov	x3, x20
    f36c:	bl	f314 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_>
    f370:	sub	x26, x25, x19
    f374:	cmp	x26, #0x80
    f378:	mov	x21, x25
    f37c:	b.le	f528 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0x214>
    f380:	cbz	x23, f4b4 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0x1a0>
    f384:	lsr	x8, x26, #1
    f388:	and	x8, x8, #0x7ffffffffffffff8
    f38c:	add	x26, x19, x8
    f390:	add	x0, sp, #0x8
    f394:	mov	x1, x24
    f398:	mov	x2, x26
    f39c:	sub	x23, x23, #0x1
    f3a0:	sub	x25, x21, #0x8
    f3a4:	strb	w22, [sp, #8]
    f3a8:	bl	f548 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_>
    f3ac:	tbz	w0, #0, f3d8 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0xc4>
    f3b0:	add	x0, sp, #0x8
    f3b4:	mov	x1, x26
    f3b8:	mov	x2, x25
    f3bc:	bl	f548 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_>
    f3c0:	tbz	w0, #0, f3fc <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0xe8>
    f3c4:	ldr	x8, [x26]
    f3c8:	ldr	x9, [x19]
    f3cc:	str	x8, [x19]
    f3d0:	str	x9, [x26]
    f3d4:	b	f454 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0x140>
    f3d8:	add	x0, sp, #0x8
    f3dc:	mov	x1, x24
    f3e0:	mov	x2, x25
    f3e4:	bl	f548 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_>
    f3e8:	tbz	w0, #0, f420 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0x10c>
    f3ec:	ldr	q0, [x19]
    f3f0:	ext	v0.16b, v0.16b, v0.16b, #8
    f3f4:	str	q0, [x19]
    f3f8:	b	f454 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0x140>
    f3fc:	add	x0, sp, #0x8
    f400:	mov	x1, x24
    f404:	mov	x2, x25
    f408:	bl	f548 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_>
    f40c:	ldr	x8, [x19]
    f410:	tbnz	w0, #0, f438 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0x124>
    f414:	ldr	x9, [x19, #8]
    f418:	stp	x9, x8, [x19]
    f41c:	b	f454 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0x140>
    f420:	add	x0, sp, #0x8
    f424:	mov	x1, x26
    f428:	mov	x2, x25
    f42c:	bl	f548 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_>
    f430:	ldr	x8, [x19]
    f434:	tbz	w0, #0, f448 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0x134>
    f438:	ldr	x9, [x25]
    f43c:	str	x9, [x19]
    f440:	str	x8, [x25]
    f444:	b	f454 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0x140>
    f448:	ldr	x9, [x26]
    f44c:	str	x9, [x19]
    f450:	str	x8, [x26]
    f454:	mov	x26, x21
    f458:	mov	x27, x24
    f45c:	strb	w22, [x29, #24]
    f460:	sub	x25, x27, #0x8
    f464:	add	x25, x25, #0x8
    f468:	add	x0, x29, #0x18
    f46c:	mov	x1, x25
    f470:	mov	x2, x19
    f474:	bl	f548 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_>
    f478:	tbnz	w0, #0, f464 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0x150>
    f47c:	add	x27, x25, #0x8
    f480:	sub	x26, x26, #0x8
    f484:	add	x0, x29, #0x18
    f488:	mov	x1, x19
    f48c:	mov	x2, x26
    f490:	bl	f548 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_>
    f494:	tbnz	w0, #0, f480 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0x16c>
    f498:	cmp	x25, x26
    f49c:	b.cs	f35c <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0x48>  // b.hs, b.nlast
    f4a0:	ldr	x8, [x26]
    f4a4:	ldr	x9, [x25]
    f4a8:	str	x8, [x25]
    f4ac:	str	x9, [x26]
    f4b0:	b	f460 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0x14c>
    f4b4:	lsr	x22, x26, #3
    f4b8:	sub	x8, x22, #0x2
    f4bc:	sub	x9, x22, #0x1
    f4c0:	cmp	x8, #0x0
    f4c4:	csel	x8, x9, x8, lt  // lt = tstop
    f4c8:	asr	x23, x8, #1
    f4cc:	ldr	x3, [x19, x23, lsl #3]
    f4d0:	mov	x0, x19
    f4d4:	mov	x1, x23
    f4d8:	mov	x2, x22
    f4dc:	mov	x4, x20
    f4e0:	bl	f610 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_SD_T1_T2_>
    f4e4:	sub	x23, x23, #0x1
    f4e8:	cmn	x23, #0x1
    f4ec:	b.ne	f4cc <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0x1b8>  // b.any
    f4f0:	cmp	x26, #0x9
    f4f4:	b.lt	f528 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0x214>  // b.tstop
    f4f8:	sub	x21, x21, #0x8
    f4fc:	ldr	x8, [x19]
    f500:	ldr	x3, [x21]
    f504:	sub	x22, x21, x19
    f508:	asr	x2, x22, #3
    f50c:	mov	x0, x19
    f510:	mov	x1, xzr
    f514:	mov	x4, x20
    f518:	str	x8, [x21], #-8
    f51c:	bl	f610 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_SD_T1_T2_>
    f520:	cmp	x22, #0x8
    f524:	b.gt	f4fc <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0x1e8>
    f528:	ldp	x20, x19, [sp, #96]
    f52c:	ldp	x22, x21, [sp, #80]
    f530:	ldp	x24, x23, [sp, #64]
    f534:	ldp	x26, x25, [sp, #48]
    f538:	ldr	x27, [sp, #32]
    f53c:	ldp	x29, x30, [sp, #16]
    f540:	add	sp, sp, #0x70
    f544:	ret

000000000000f548 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_>:
    f548:	sub	sp, sp, #0x60
    f54c:	stp	x29, x30, [sp, #64]
    f550:	stp	x20, x19, [sp, #80]
    f554:	add	x29, sp, #0x40
    f558:	ldr	x8, [x1]
    f55c:	ldr	x19, [x2]
    f560:	ldr	x0, [x8]
    f564:	ldr	x8, [x0]
    f568:	ldr	x9, [x8, #48]
    f56c:	add	x8, sp, #0x20
    f570:	blr	x9
    f574:	ldr	x0, [x19]
    f578:	ldr	x8, [x0]
    f57c:	ldr	x9, [x8, #48]
    f580:	mov	x8, sp
    f584:	blr	x9
    f588:	ldr	x8, [sp, #40]
    f58c:	ldr	x9, [sp, #8]
    f590:	subs	x20, x8, x9
    f594:	csel	x2, x9, x8, hi  // hi = pmore
    f598:	cbz	x2, f5b0 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_+0x68>
    f59c:	ldr	x1, [sp]
    f5a0:	ldr	x0, [sp, #32]
    f5a4:	bl	0 <memcmp>
    f5a8:	mov	w19, w0
    f5ac:	cbnz	w0, f5cc <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_+0x84>
    f5b0:	mov	w19, #0x7fffffff            	// #2147483647
    f5b4:	cmp	x20, x19
    f5b8:	b.gt	f5cc <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_+0x84>
    f5bc:	mov	x8, #0xffffffff80000000    	// #-2147483648
    f5c0:	cmp	x20, x8
    f5c4:	mov	w8, #0x80000000            	// #-2147483648
    f5c8:	csel	w19, w20, w8, gt
    f5cc:	ldr	x0, [sp]
    f5d0:	mov	x8, sp
    f5d4:	add	x8, x8, #0x10
    f5d8:	cmp	x0, x8
    f5dc:	b.eq	f5e4 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_+0x9c>  // b.none
    f5e0:	bl	0 <_ZdlPv>
    f5e4:	ldr	x0, [sp, #32]
    f5e8:	add	x8, sp, #0x20
    f5ec:	add	x8, x8, #0x10
    f5f0:	cmp	x0, x8
    f5f4:	b.eq	f5fc <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_+0xb4>  // b.none
    f5f8:	bl	0 <_ZdlPv>
    f5fc:	lsr	w0, w19, #31
    f600:	ldp	x20, x19, [sp, #80]
    f604:	ldp	x29, x30, [sp, #64]
    f608:	add	sp, sp, #0x60
    f60c:	ret

000000000000f610 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_SD_T1_T2_>:
    f610:	sub	sp, sp, #0xb0
    f614:	stp	x29, x30, [sp, #80]
    f618:	stp	x28, x27, [sp, #96]
    f61c:	stp	x26, x25, [sp, #112]
    f620:	stp	x24, x23, [sp, #128]
    f624:	stp	x22, x21, [sp, #144]
    f628:	stp	x20, x19, [sp, #160]
    f62c:	add	x29, sp, #0x50
    f630:	sub	x24, x2, #0x1
    f634:	cmp	x24, #0x0
    f638:	csel	x8, x2, x24, lt  // lt = tstop
    f63c:	asr	x25, x8, #1
    f640:	mov	x19, x3
    f644:	mov	x22, x2
    f648:	mov	x21, x1
    f64c:	mov	x20, x0
    f650:	cmp	x25, x1
    f654:	mov	x23, x1
    f658:	strb	w4, [sp, #8]
    f65c:	b.le	f6a0 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_SD_T1_T2_+0x90>
    f660:	mov	x26, x21
    f664:	lsl	x8, x26, #1
    f668:	mov	w23, #0x1                   	// #1
    f66c:	add	x27, x8, #0x2
    f670:	bfi	x23, x26, #1, #63
    f674:	add	x1, x20, x27, lsl #3
    f678:	add	x2, x20, x23, lsl #3
    f67c:	add	x0, sp, #0x8
    f680:	bl	f548 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_>
    f684:	tst	w0, #0x1
    f688:	csel	x23, x23, x27, ne  // ne = any
    f68c:	ldr	x8, [x20, x23, lsl #3]
    f690:	cmp	x23, x25
    f694:	str	x8, [x20, x26, lsl #3]
    f698:	mov	x26, x23
    f69c:	b.lt	f664 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_SD_T1_T2_+0x54>  // b.tstop
    f6a0:	tbnz	w22, #0, f6cc <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_SD_T1_T2_+0xbc>
    f6a4:	sub	x8, x22, #0x2
    f6a8:	cmp	x8, #0x0
    f6ac:	csel	x8, x24, x8, lt  // lt = tstop
    f6b0:	cmp	x23, x8, asr #1
    f6b4:	b.ne	f6cc <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_SD_T1_T2_+0xbc>  // b.any
    f6b8:	mov	w8, #0x1                   	// #1
    f6bc:	bfi	x8, x23, #1, #63
    f6c0:	ldr	x9, [x20, x8, lsl #3]
    f6c4:	str	x9, [x20, x23, lsl #3]
    f6c8:	mov	x23, x8
    f6cc:	cmp	x23, x21
    f6d0:	b.le	f7a0 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_SD_T1_T2_+0x190>
    f6d4:	add	x8, sp, #0x10
    f6d8:	sub	x9, x29, #0x20
    f6dc:	add	x25, x8, #0x10
    f6e0:	add	x26, x9, #0x10
    f6e4:	mov	w27, #0x80000000            	// #-2147483648
    f6e8:	sub	x8, x23, #0x1
    f6ec:	cmp	x8, #0x0
    f6f0:	csel	x8, x23, x8, lt  // lt = tstop
    f6f4:	asr	x28, x8, #1
    f6f8:	ldr	x8, [x20, x28, lsl #3]
    f6fc:	ldr	x0, [x8]
    f700:	ldr	x8, [x0]
    f704:	ldr	x9, [x8, #48]
    f708:	sub	x8, x29, #0x20
    f70c:	blr	x9
    f710:	ldr	x0, [x19]
    f714:	ldr	x8, [x0]
    f718:	ldr	x9, [x8, #48]
    f71c:	add	x8, sp, #0x10
    f720:	blr	x9
    f724:	ldur	x8, [x29, #-24]
    f728:	ldr	x9, [sp, #24]
    f72c:	subs	x24, x8, x9
    f730:	csel	x2, x9, x8, hi  // hi = pmore
    f734:	cbz	x2, f74c <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_SD_T1_T2_+0x13c>
    f738:	ldr	x1, [sp, #16]
    f73c:	ldur	x0, [x29, #-32]
    f740:	bl	0 <memcmp>
    f744:	mov	w22, w0
    f748:	cbnz	w0, f764 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_SD_T1_T2_+0x154>
    f74c:	mov	w22, #0x7fffffff            	// #2147483647
    f750:	cmp	x24, x22
    f754:	b.gt	f764 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_SD_T1_T2_+0x154>
    f758:	mov	x8, #0xffffffff80000000    	// #-2147483648
    f75c:	cmp	x24, x8
    f760:	csel	w22, w24, w27, gt
    f764:	ldr	x0, [sp, #16]
    f768:	cmp	x0, x25
    f76c:	b.eq	f774 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_SD_T1_T2_+0x164>  // b.none
    f770:	bl	0 <_ZdlPv>
    f774:	ldur	x0, [x29, #-32]
    f778:	cmp	x0, x26
    f77c:	b.eq	f784 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_SD_T1_T2_+0x174>  // b.none
    f780:	bl	0 <_ZdlPv>
    f784:	tbz	w22, #31, f7a0 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_SD_T1_T2_+0x190>
    f788:	ldr	x8, [x20, x28, lsl #3]
    f78c:	cmp	x28, x21
    f790:	str	x8, [x20, x23, lsl #3]
    f794:	mov	x23, x28
    f798:	b.gt	f6e8 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_SD_T1_T2_+0xd8>
    f79c:	b	f7a4 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_SD_T1_T2_+0x194>
    f7a0:	mov	x28, x23
    f7a4:	str	x19, [x20, x28, lsl #3]
    f7a8:	ldp	x20, x19, [sp, #160]
    f7ac:	ldp	x22, x21, [sp, #144]
    f7b0:	ldp	x24, x23, [sp, #128]
    f7b4:	ldp	x26, x25, [sp, #112]
    f7b8:	ldp	x28, x27, [sp, #96]
    f7bc:	ldp	x29, x30, [sp, #80]
    f7c0:	add	sp, sp, #0xb0
    f7c4:	ret

000000000000f7c8 <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_>:
    f7c8:	sub	sp, sp, #0xa0
    f7cc:	stp	x29, x30, [sp, #64]
    f7d0:	str	x27, [sp, #80]
    f7d4:	stp	x26, x25, [sp, #96]
    f7d8:	stp	x24, x23, [sp, #112]
    f7dc:	stp	x22, x21, [sp, #128]
    f7e0:	stp	x20, x19, [sp, #144]
    f7e4:	add	x29, sp, #0x40
    f7e8:	ldr	x21, [x0]
    f7ec:	mov	x8, sp
    f7f0:	add	x9, sp, #0x20
    f7f4:	mov	x19, x0
    f7f8:	add	x22, x8, #0x10
    f7fc:	add	x23, x9, #0x10
    f800:	mov	x24, #0xffffffff80000000    	// #-2147483648
    f804:	mov	w25, #0x80000000            	// #-2147483648
    f808:	mov	x26, x0
    f80c:	ldr	x20, [x26, #-8]!
    f810:	ldr	x0, [x21]
    f814:	ldr	x8, [x0]
    f818:	ldr	x9, [x8, #48]
    f81c:	add	x8, sp, #0x20
    f820:	blr	x9
    f824:	ldr	x0, [x20]
    f828:	ldr	x8, [x0]
    f82c:	ldr	x9, [x8, #48]
    f830:	mov	x8, sp
    f834:	blr	x9
    f838:	ldr	x8, [sp, #40]
    f83c:	ldr	x9, [sp, #8]
    f840:	subs	x27, x8, x9
    f844:	csel	x2, x9, x8, hi  // hi = pmore
    f848:	cbz	x2, f860 <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_+0x98>
    f84c:	ldr	x1, [sp]
    f850:	ldr	x0, [sp, #32]
    f854:	bl	0 <memcmp>
    f858:	mov	w20, w0
    f85c:	cbnz	w0, f874 <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_+0xac>
    f860:	mov	w20, #0x7fffffff            	// #2147483647
    f864:	cmp	x27, x20
    f868:	b.gt	f874 <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_+0xac>
    f86c:	cmp	x27, x24
    f870:	csel	w20, w27, w25, gt
    f874:	ldr	x0, [sp]
    f878:	cmp	x0, x22
    f87c:	b.eq	f884 <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_+0xbc>  // b.none
    f880:	bl	0 <_ZdlPv>
    f884:	ldr	x0, [sp, #32]
    f888:	cmp	x0, x23
    f88c:	b.eq	f894 <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_+0xcc>  // b.none
    f890:	bl	0 <_ZdlPv>
    f894:	tbz	w20, #31, f8a8 <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_+0xe0>
    f898:	ldur	x8, [x19, #-8]
    f89c:	str	x8, [x19]
    f8a0:	mov	x19, x26
    f8a4:	b	f80c <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_+0x44>
    f8a8:	str	x21, [x19]
    f8ac:	ldp	x20, x19, [sp, #144]
    f8b0:	ldp	x22, x21, [sp, #128]
    f8b4:	ldp	x24, x23, [sp, #112]
    f8b8:	ldp	x26, x25, [sp, #96]
    f8bc:	ldr	x27, [sp, #80]
    f8c0:	ldp	x29, x30, [sp, #64]
    f8c4:	add	sp, sp, #0xa0
    f8c8:	ret

Disassembly of section .text._ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED2Ev:

0000000000000000 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x21, x0
  14:	ldr	x20, [x21, #16]!
  18:	mov	x19, x0
  1c:	ldr	w8, [x21, #8]
  20:	cbz	w8, 38 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED2Ev+0x38>
  24:	lsl	x22, x8, #3
  28:	ldr	x0, [x20], #8
  2c:	bl	0 <free>
  30:	subs	x22, x22, #0x8
  34:	b.ne	28 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED2Ev+0x28>  // b.any
  38:	ldr	w8, [x19, #72]
  3c:	ldr	x20, [x19, #64]
  40:	cbz	w8, 5c <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED2Ev+0x5c>
  44:	lsl	x22, x8, #4
  48:	ldr	x0, [x20], #16
  4c:	bl	0 <free>
  50:	subs	x22, x22, #0x10
  54:	b.ne	48 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED2Ev+0x48>  // b.any
  58:	ldr	x20, [x19, #64]
  5c:	add	x8, x19, #0x50
  60:	cmp	x20, x8
  64:	b.eq	70 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED2Ev+0x70>  // b.none
  68:	mov	x0, x20
  6c:	bl	0 <free>
  70:	ldr	x0, [x21], #16
  74:	cmp	x0, x21
  78:	b.eq	8c <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED2Ev+0x8c>  // b.none
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldp	x22, x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	b	0 <free>
  8c:	ldp	x20, x19, [sp, #32]
  90:	ldp	x22, x21, [sp, #16]
  94:	ldp	x29, x30, [sp], #48
  98:	ret

Disassembly of section .text._ZN4llvm5RecTyD2Ev:

0000000000000000 <_ZN4llvm5RecTyD2Ev>:
   0:	ret

Disassembly of section .text._ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EED2Ev:

0000000000000000 <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EED2Ev>:
   0:	ldr	x0, [x0]
   4:	cbz	x0, c <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EED2Ev+0xc>
   8:	b	0 <_ZdlPv>
   c:	ret

Disassembly of section .text._ZNK4llvm8BitsInit6getBitEj:

0000000000000000 <_ZNK4llvm8BitsInit6getBitEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #32]
   c:	cmp	w8, w1
  10:	b.ls	24 <_ZNK4llvm8BitsInit6getBitEj+0x24>  // b.plast
  14:	add	x8, x0, w1, uxtw #3
  18:	ldr	x0, [x8, #40]
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	adrp	x0, 0 <_ZNK4llvm8BitsInit6getBitEj>
  28:	adrp	x1, 0 <_ZNK4llvm8BitsInit6getBitEj>
  2c:	adrp	x3, 0 <_ZNK4llvm8BitsInit6getBitEj>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0x22e                 	// #558
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEED2Ev:

0000000000000000 <_ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEED2Ev>:
   0:	ldr	x1, [x0, #16]
   4:	b	0 <_ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEED2Ev>

Disassembly of section .text._ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEEixERS6_:

0000000000000000 <_ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEEixERS6_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x8, [x0, #16]
  18:	mov	x22, x1
  1c:	mov	x19, x0
  20:	add	x20, x0, #0x8
  24:	cbz	x8, 6c <_ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEEixERS6_+0x6c>
  28:	ldr	x9, [x22]
  2c:	mov	x21, x20
  30:	ldr	x10, [x8, #32]
  34:	add	x11, x8, #0x18
  38:	add	x12, x8, #0x10
  3c:	cmp	x10, x9
  40:	csel	x21, x21, x8, lt  // lt = tstop
  44:	csel	x8, x11, x12, lt  // lt = tstop
  48:	ldr	x8, [x8]
  4c:	cbnz	x8, 30 <_ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEEixERS6_+0x30>
  50:	cmp	x21, x20
  54:	b.eq	70 <_ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEEixERS6_+0x70>  // b.none
  58:	ldr	x8, [x22]
  5c:	ldr	x9, [x21, #32]
  60:	cmp	x8, x9
  64:	b.lt	70 <_ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEEixERS6_+0x70>  // b.tstop
  68:	b	f0 <_ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEEixERS6_+0xf0>
  6c:	mov	x21, x20
  70:	mov	w0, #0x30                  	// #48
  74:	bl	0 <_Znwm>
  78:	ldr	x8, [x22]
  7c:	mov	x23, x0
  80:	mov	x22, x0
  84:	mov	x1, x21
  88:	str	x8, [x23, #32]!
  8c:	str	xzr, [x0, #40]
  90:	mov	x0, x19
  94:	mov	x2, x23
  98:	bl	0 <_ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEEixERS6_>
  9c:	mov	x21, x0
  a0:	cbz	x1, e8 <_ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEEixERS6_+0xe8>
  a4:	mov	x2, x1
  a8:	mov	w0, #0x1                   	// #1
  ac:	cbnz	x21, c8 <_ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEEixERS6_+0xc8>
  b0:	cmp	x20, x2
  b4:	b.eq	c8 <_ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEEixERS6_+0xc8>  // b.none
  b8:	ldr	x8, [x23]
  bc:	ldr	x9, [x2, #32]
  c0:	cmp	x8, x9
  c4:	cset	w0, lt  // lt = tstop
  c8:	mov	x1, x22
  cc:	mov	x3, x20
  d0:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  d4:	ldr	x8, [x19, #40]
  d8:	mov	x21, x22
  dc:	add	x8, x8, #0x1
  e0:	str	x8, [x19, #40]
  e4:	b	f0 <_ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEEixERS6_+0xf0>
  e8:	mov	x0, x22
  ec:	bl	0 <_ZdlPv>
  f0:	add	x0, x21, #0x28
  f4:	ldp	x20, x19, [sp, #48]
  f8:	ldp	x22, x21, [sp, #32]
  fc:	ldr	x23, [sp, #16]
 100:	ldp	x29, x30, [sp], #64
 104:	ret

Disassembly of section .text._ZN4llvm6itostrB5cxx11El:

0000000000000000 <_ZN4llvm6itostrB5cxx11El>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #32]
   8:	str	x21, [sp, #48]
   c:	stp	x20, x19, [sp, #64]
  10:	add	x29, sp, #0x20
  14:	mov	x19, x8
  18:	tbnz	x0, #63, 5c <_ZN4llvm6itostrB5cxx11El+0x5c>
  1c:	add	x9, sp, #0x8
  20:	add	x8, x9, #0x15
  24:	cbz	x0, b0 <_ZN4llvm6itostrB5cxx11El+0xb0>
  28:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
  2c:	movk	x9, #0xcccd
  30:	mov	w10, #0xa                   	// #10
  34:	mov	x20, x8
  38:	umulh	x11, x0, x9
  3c:	lsr	x11, x11, #3
  40:	msub	w12, w11, w10, w0
  44:	orr	w12, w12, #0x30
  48:	cmp	x0, #0x9
  4c:	strb	w12, [x20, #-1]!
  50:	mov	x0, x11
  54:	b.hi	38 <_ZN4llvm6itostrB5cxx11El+0x38>  // b.pmore
  58:	b	bc <_ZN4llvm6itostrB5cxx11El+0xbc>
  5c:	add	x11, sp, #0x8
  60:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
  64:	neg	x9, x0
  68:	movk	x10, #0xcccd
  6c:	add	x8, x11, #0x15
  70:	add	x20, x11, #0x14
  74:	mov	w11, #0xa                   	// #10
  78:	umulh	x12, x9, x10
  7c:	lsr	x12, x12, #3
  80:	msub	w13, w12, w11, w9
  84:	orr	w13, w13, #0x30
  88:	cmp	x9, #0x9
  8c:	strb	w13, [x20], #-1
  90:	mov	x9, x12
  94:	b.hi	78 <_ZN4llvm6itostrB5cxx11El+0x78>  // b.pmore
  98:	sub	x21, x8, x20
  9c:	mov	w9, #0x2d                  	// #45
  a0:	add	x0, x19, #0x10
  a4:	cmp	x21, #0x10
  a8:	strb	w9, [x20]
  ac:	b	c8 <_ZN4llvm6itostrB5cxx11El+0xc8>
  b0:	add	x20, x9, #0x14
  b4:	mov	w9, #0x30                  	// #48
  b8:	strb	w9, [sp, #28]
  bc:	sub	x21, x8, x20
  c0:	add	x0, x19, #0x10
  c4:	cmp	x21, #0x10
  c8:	str	x0, [x19]
  cc:	str	x21, [x29, #24]
  d0:	b.cc	f0 <_ZN4llvm6itostrB5cxx11El+0xf0>  // b.lo, b.ul, b.last
  d4:	add	x1, x29, #0x18
  d8:	mov	x0, x19
  dc:	mov	x2, xzr
  e0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  e4:	ldr	x8, [x29, #24]
  e8:	str	x0, [x19]
  ec:	str	x8, [x19, #16]
  f0:	cbz	x21, 114 <_ZN4llvm6itostrB5cxx11El+0x114>
  f4:	cmp	x21, #0x1
  f8:	b.ne	108 <_ZN4llvm6itostrB5cxx11El+0x108>  // b.any
  fc:	ldrb	w8, [x20]
 100:	strb	w8, [x0]
 104:	b	114 <_ZN4llvm6itostrB5cxx11El+0x114>
 108:	mov	x1, x20
 10c:	mov	x2, x21
 110:	bl	0 <memcpy>
 114:	ldr	x8, [x29, #24]
 118:	ldr	x9, [x19]
 11c:	str	x8, [x19, #8]
 120:	strb	wzr, [x9, x8]
 124:	ldp	x20, x19, [sp, #64]
 128:	ldr	x21, [sp, #48]
 12c:	ldp	x29, x30, [sp, #32]
 130:	add	sp, sp, #0x50
 134:	ret

Disassembly of section .text._ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEED2Ev:

0000000000000000 <_ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEED2Ev>:
   0:	ldr	x0, [x0]
   4:	b	0 <free>

Disassembly of section .text._ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEED2Ev:

0000000000000000 <_ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEED2Ev>:
   0:	ldr	x0, [x0]
   4:	b	0 <free>

Disassembly of section .text._ZN4llvmplERKNS_5TwineES2_:

0000000000000000 <_ZN4llvmplERKNS_5TwineES2_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w10, [x0, #16]
   c:	cbz	w10, 2c <_ZN4llvmplERKNS_5TwineES2_+0x2c>
  10:	ldrb	w9, [x1, #16]
  14:	cbz	w9, 2c <_ZN4llvmplERKNS_5TwineES2_+0x2c>
  18:	cmp	w10, #0x1
  1c:	b.ne	40 <_ZN4llvmplERKNS_5TwineES2_+0x40>  // b.any
  20:	ldr	x9, [x1, #16]
  24:	ldr	q0, [x1]
  28:	b	50 <_ZN4llvmplERKNS_5TwineES2_+0x50>
  2c:	mov	w9, #0x100                 	// #256
  30:	stp	xzr, xzr, [x8]
  34:	strh	w9, [x8, #16]
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	cmp	w9, #0x1
  44:	b.ne	60 <_ZN4llvmplERKNS_5TwineES2_+0x60>  // b.any
  48:	ldr	x9, [x0, #16]
  4c:	ldr	q0, [x0]
  50:	str	x9, [x8, #16]
  54:	str	q0, [x8]
  58:	ldp	x29, x30, [sp], #16
  5c:	ret
  60:	ldrb	w11, [x0, #17]
  64:	cmp	w11, #0x1
  68:	b.ne	74 <_ZN4llvmplERKNS_5TwineES2_+0x74>  // b.any
  6c:	ldr	x0, [x0]
  70:	b	78 <_ZN4llvmplERKNS_5TwineES2_+0x78>
  74:	mov	w10, #0x2                   	// #2
  78:	ldrb	w11, [x1, #17]
  7c:	cmp	w11, #0x1
  80:	b.ne	8c <_ZN4llvmplERKNS_5TwineES2_+0x8c>  // b.any
  84:	ldr	x1, [x1]
  88:	b	90 <_ZN4llvmplERKNS_5TwineES2_+0x90>
  8c:	mov	w9, #0x2                   	// #2
  90:	cmp	w10, #0x2
  94:	stp	x0, x1, [x8]
  98:	strb	w10, [x8, #16]
  9c:	strb	w9, [x8, #17]
  a0:	b.ne	b8 <_ZN4llvmplERKNS_5TwineES2_+0xb8>  // b.any
  a4:	ldrb	w8, [x0, #16]
  a8:	cbz	w8, dc <_ZN4llvmplERKNS_5TwineES2_+0xdc>
  ac:	ldrb	w8, [x0, #17]
  b0:	cmp	w8, #0x1
  b4:	b.eq	dc <_ZN4llvmplERKNS_5TwineES2_+0xdc>  // b.none
  b8:	cmp	w9, #0x2
  bc:	b.ne	d4 <_ZN4llvmplERKNS_5TwineES2_+0xd4>  // b.any
  c0:	ldrb	w8, [x1, #16]
  c4:	cbz	w8, dc <_ZN4llvmplERKNS_5TwineES2_+0xdc>
  c8:	ldrb	w8, [x1, #17]
  cc:	cmp	w8, #0x1
  d0:	b.eq	dc <_ZN4llvmplERKNS_5TwineES2_+0xdc>  // b.none
  d4:	ldp	x29, x30, [sp], #16
  d8:	ret
  dc:	adrp	x0, 0 <_ZN4llvmplERKNS_5TwineES2_>
  e0:	adrp	x1, 0 <_ZN4llvmplERKNS_5TwineES2_>
  e4:	adrp	x3, 0 <_ZN4llvmplERKNS_5TwineES2_>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0xb8                  	// #184
  f8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_:

0000000000000000 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	stp	x28, x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	ldr	x27, [x0]
  20:	ldr	w8, [x0, #8]
  24:	mov	x21, x3
  28:	mov	x20, x2
  2c:	sub	x10, x1, x27
  30:	add	x9, x27, x8, lsl #3
  34:	mov	x23, x0
  38:	cmp	x9, x1
  3c:	asr	x26, x10, #3
  40:	b.eq	12c <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x12c>  // b.none
  44:	cmp	x27, x1
  48:	b.hi	2b0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x2b0>  // b.pmore
  4c:	cmp	x9, x1
  50:	b.cc	2d0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x2d0>  // b.lo, b.ul, b.last
  54:	ldr	w9, [x23, #12]
  58:	sub	x24, x21, x20
  5c:	asr	x22, x24, #3
  60:	add	x2, x22, x8
  64:	cmp	x2, x9
  68:	b.ls	84 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x84>  // b.plast
  6c:	add	x1, x23, #0x10
  70:	mov	w3, #0x8                   	// #8
  74:	mov	x0, x23
  78:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  7c:	ldr	x27, [x23]
  80:	ldr	w8, [x23, #8]
  84:	add	x19, x27, x26, lsl #3
  88:	add	x0, x27, x8, lsl #3
  8c:	sub	x25, x0, x19
  90:	asr	x28, x25, #3
  94:	cmp	x28, x22
  98:	b.cs	198 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x198>  // b.hs, b.nlast
  9c:	ldr	w10, [x23, #12]
  a0:	add	x9, x22, x8
  a4:	cmp	x9, x10
  a8:	b.hi	290 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x290>  // b.pmore
  ac:	cmp	x26, x8
  b0:	str	w9, [x23, #8]
  b4:	b.eq	d4 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0xd4>  // b.none
  b8:	add	x8, x27, w9, uxtw #3
  bc:	mov	x22, x0
  c0:	sub	x0, x8, x28, lsl #3
  c4:	mov	x1, x19
  c8:	mov	x2, x25
  cc:	bl	0 <memcpy>
  d0:	mov	x0, x22
  d4:	cbz	x25, 114 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x114>
  d8:	cmp	x28, #0x3
  dc:	b.ls	fc <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0xfc>  // b.plast
  e0:	add	x8, x20, x28, lsl #3
  e4:	cmp	x19, x8
  e8:	b.cs	248 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x248>  // b.hs, b.nlast
  ec:	add	x8, x28, x26
  f0:	add	x8, x27, x8, lsl #3
  f4:	cmp	x8, x20
  f8:	b.ls	248 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x248>  // b.plast
  fc:	mov	x9, x19
 100:	mov	x8, x28
 104:	ldr	x10, [x20], #8
 108:	subs	x8, x8, #0x1
 10c:	str	x10, [x9], #8
 110:	b.ne	104 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x104>  // b.any
 114:	cmp	x20, x21
 118:	b.eq	228 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x228>  // b.none
 11c:	sub	x2, x21, x20
 120:	mov	x1, x20
 124:	bl	0 <memcpy>
 128:	b	228 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x228>
 12c:	ldr	w9, [x23, #12]
 130:	sub	x19, x21, x20
 134:	asr	x22, x19, #3
 138:	sub	x9, x9, x8
 13c:	cmp	x22, x9
 140:	b.ls	158 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x158>  // b.plast
 144:	add	x2, x22, x8
 148:	add	x1, x23, #0x10
 14c:	mov	w3, #0x8                   	// #8
 150:	mov	x0, x23
 154:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 158:	cmp	x20, x21
 15c:	b.eq	178 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x178>  // b.none
 160:	ldr	x8, [x23]
 164:	ldr	w9, [x23, #8]
 168:	mov	x1, x20
 16c:	mov	x2, x19
 170:	add	x0, x8, x9, lsl #3
 174:	bl	0 <memcpy>
 178:	ldp	w8, w9, [x23, #8]
 17c:	add	x8, x22, x8
 180:	cmp	x8, x9
 184:	b.hi	290 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x290>  // b.pmore
 188:	ldr	x9, [x23]
 18c:	str	w8, [x23, #8]
 190:	add	x19, x9, x26, lsl #3
 194:	b	228 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x228>
 198:	ldr	w9, [x23, #12]
 19c:	sub	x9, x9, x8
 1a0:	cmp	x22, x9
 1a4:	b.ls	1c4 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x1c4>  // b.plast
 1a8:	add	x2, x22, x8
 1ac:	add	x1, x23, #0x10
 1b0:	mov	w3, #0x8                   	// #8
 1b4:	mov	x21, x0
 1b8:	mov	x0, x23
 1bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 1c0:	mov	x0, x21
 1c4:	sub	x21, x0, x22, lsl #3
 1c8:	cbz	x24, 1ec <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x1ec>
 1cc:	ldr	x8, [x23]
 1d0:	ldr	w9, [x23, #8]
 1d4:	mov	x25, x0
 1d8:	mov	x1, x21
 1dc:	mov	x2, x24
 1e0:	add	x0, x8, x9, lsl #3
 1e4:	bl	0 <memmove>
 1e8:	mov	x0, x25
 1ec:	ldp	w8, w9, [x23, #8]
 1f0:	add	x8, x22, x8
 1f4:	cmp	x8, x9
 1f8:	b.hi	290 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x290>  // b.pmore
 1fc:	subs	x2, x21, x19
 200:	str	w8, [x23, #8]
 204:	b.eq	214 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x214>  // b.none
 208:	sub	x0, x0, x2
 20c:	mov	x1, x19
 210:	bl	0 <memmove>
 214:	cbz	x24, 228 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x228>
 218:	mov	x0, x19
 21c:	mov	x1, x20
 220:	mov	x2, x24
 224:	bl	0 <memmove>
 228:	mov	x0, x19
 22c:	ldp	x20, x19, [sp, #80]
 230:	ldp	x22, x21, [sp, #64]
 234:	ldp	x24, x23, [sp, #48]
 238:	ldp	x26, x25, [sp, #32]
 23c:	ldp	x28, x27, [sp, #16]
 240:	ldp	x29, x30, [sp], #96
 244:	ret
 248:	and	x10, x28, #0xfffffffffffffffc
 24c:	add	x12, x27, x26, lsl #3
 250:	lsl	x13, x10, #3
 254:	and	x8, x28, #0x3
 258:	add	x11, x20, #0x10
 25c:	add	x9, x19, x13
 260:	add	x20, x20, x13
 264:	add	x12, x12, #0x10
 268:	mov	x13, x10
 26c:	ldp	q0, q1, [x11, #-16]
 270:	add	x11, x11, #0x20
 274:	subs	x13, x13, #0x4
 278:	stp	q0, q1, [x12, #-16]
 27c:	add	x12, x12, #0x20
 280:	b.ne	26c <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x26c>  // b.any
 284:	cmp	x28, x10
 288:	b.ne	104 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x104>  // b.any
 28c:	b	114 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x114>
 290:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>
 294:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>
 298:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>
 29c:	add	x0, x0, #0x0
 2a0:	add	x1, x1, #0x0
 2a4:	add	x3, x3, #0x0
 2a8:	mov	w2, #0x43                  	// #67
 2ac:	bl	0 <__assert_fail>
 2b0:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>
 2b4:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>
 2b8:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>
 2bc:	add	x0, x0, #0x0
 2c0:	add	x1, x1, #0x0
 2c4:	add	x3, x3, #0x0
 2c8:	mov	w2, #0x24e                 	// #590
 2cc:	bl	0 <__assert_fail>
 2d0:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>
 2d4:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>
 2d8:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>
 2dc:	add	x0, x0, #0x0
 2e0:	add	x1, x1, #0x0
 2e4:	add	x3, x3, #0x0
 2e8:	mov	w2, #0x24f                 	// #591
 2ec:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm14ShadowResolverD2Ev:

0000000000000000 <_ZN4llvm14ShadowResolverD2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm14ShadowResolverD2Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #40]
  18:	ldr	x8, [x8]
  1c:	add	x8, x8, #0x10
  20:	str	x8, [x19]
  24:	bl	0 <_ZdlPv>
  28:	ldr	x8, [x19, #32]
  2c:	add	x8, x8, #0x1
  30:	str	x8, [x19, #32]
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret

Disassembly of section .text._ZN4llvm11MapResolverD2Ev:

0000000000000000 <_ZN4llvm11MapResolverD2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, dd8 <_ZTVN4llvm11MapResolverE>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #32]
  18:	ldr	x8, [x8]
  1c:	add	x8, x8, #0x10
  20:	str	x8, [x19]
  24:	bl	0 <_ZdlPv>
  28:	ldr	x8, [x19, #24]
  2c:	add	x8, x8, #0x1
  30:	str	x8, [x19, #24]
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret

Disassembly of section .text._ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEED2Ev:

0000000000000000 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEED2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	ldr	x0, [x0, #8]
  14:	bl	0 <_ZdlPv>
  18:	ldr	x8, [x19]
  1c:	add	x8, x8, #0x1
  20:	str	x8, [x19]
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ret

Disassembly of section .text._ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEED2Ev:

0000000000000000 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEED2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	ldr	x0, [x0, #8]
  14:	bl	0 <_ZdlPv>
  18:	ldr	x8, [x19]
  1c:	add	x8, x8, #0x1
  20:	str	x8, [x19]
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ret

Disassembly of section .text._ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEED2Ev:

0000000000000000 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEED2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	ldr	x0, [x0, #8]
  14:	bl	0 <_ZdlPv>
  18:	ldr	x8, [x19]
  1c:	add	x8, x8, #0x1
  20:	str	x8, [x19]
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ret

Disassembly of section .text._ZNK4llvm6Record7getNameEv:

0000000000000000 <_ZNK4llvm6Record7getNameEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	cbz	x8, 28 <_ZNK4llvm6Record7getNameEv+0x28>
  10:	ldrb	w9, [x8, #8]
  14:	cmp	w9, #0x12
  18:	b.ne	48 <_ZNK4llvm6Record7getNameEv+0x48>  // b.any
  1c:	ldp	x0, x1, [x8, #24]
  20:	ldp	x29, x30, [sp], #16
  24:	ret
  28:	adrp	x0, 0 <_ZNK4llvm6Record7getNameEv>
  2c:	adrp	x1, 0 <_ZNK4llvm6Record7getNameEv>
  30:	adrp	x3, 0 <_ZNK4llvm6Record7getNameEv>
  34:	add	x0, x0, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x3, x3, #0x0
  40:	mov	w2, #0x69                  	// #105
  44:	bl	0 <__assert_fail>
  48:	adrp	x0, 0 <_ZNK4llvm6Record7getNameEv>
  4c:	adrp	x1, 0 <_ZNK4llvm6Record7getNameEv>
  50:	adrp	x3, 0 <_ZNK4llvm6Record7getNameEv>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x108                 	// #264
  64:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE:

0000000000000000 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x8, [x0, #112]
  14:	cbnz	x8, cc <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE+0xcc>
  18:	ldr	w8, [x0, #96]
  1c:	ldr	x9, [x0, #88]
  20:	mov	x20, x3
  24:	mov	x21, x2
  28:	mov	x19, x0
  2c:	mov	x22, x1
  30:	cbz	w8, 54 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE+0x54>
  34:	add	x10, x8, x8, lsl #1
  38:	lsl	x10, x10, #3
  3c:	mov	x11, x9
  40:	ldr	x12, [x11], #24
  44:	cmp	x12, x22
  48:	b.eq	ac <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE+0xac>  // b.none
  4c:	subs	x10, x10, #0x18
  50:	b.ne	40 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE+0x40>  // b.any
  54:	ldr	w10, [x19, #100]
  58:	cmp	w8, w10
  5c:	b.cs	94 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE+0x94>  // b.hs, b.nlast
  60:	mov	w10, #0x18                  	// #24
  64:	madd	x8, x8, x10, x9
  68:	stp	x22, x21, [x8]
  6c:	str	x20, [x8, #16]
  70:	ldp	w8, w9, [x19, #96]
  74:	cmp	w8, w9
  78:	b.cs	ec <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE+0xec>  // b.hs, b.nlast
  7c:	add	w8, w8, #0x1
  80:	str	w8, [x19, #96]
  84:	ldp	x20, x19, [sp, #32]
  88:	ldp	x22, x21, [sp, #16]
  8c:	ldp	x29, x30, [sp], #48
  90:	ret
  94:	add	x0, x19, #0x58
  98:	mov	x1, xzr
  9c:	bl	0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  a0:	ldr	w8, [x19, #96]
  a4:	ldr	x9, [x19, #88]
  a8:	b	60 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE+0x60>
  ac:	adrp	x0, 0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  b0:	adrp	x1, 0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  b4:	adrp	x3, 0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  b8:	add	x0, x0, #0x0
  bc:	add	x1, x1, #0x0
  c0:	add	x3, x3, #0x0
  c4:	mov	w2, #0x630                 	// #1584
  c8:	bl	0 <__assert_fail>
  cc:	adrp	x0, 0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  d0:	adrp	x1, 0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  d4:	adrp	x3, 0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  d8:	add	x0, x0, #0x0
  dc:	add	x1, x1, #0x0
  e0:	add	x3, x3, #0x0
  e4:	mov	w2, #0x62f                 	// #1583
  e8:	bl	0 <__assert_fail>
  ec:	adrp	x0, 0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  f0:	adrp	x1, 0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  f4:	adrp	x3, 0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  f8:	add	x0, x0, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0x43                  	// #67
 108:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE:

0000000000000000 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x20, x19, [sp, #48]
   c:	add	x29, sp, #0x20
  10:	ldr	x8, [x1]
  14:	ldr	x9, [x8]
  18:	cbz	x9, bc <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xbc>
  1c:	ldrb	w10, [x9, #8]
  20:	cmp	w10, #0x12
  24:	b.ne	dc <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xdc>  // b.any
  28:	ldur	q0, [x9, #24]
  2c:	add	x0, x0, #0x30
  30:	str	q0, [sp]
  34:	str	xzr, [x1]
  38:	mov	x1, sp
  3c:	str	x8, [sp, #16]
  40:	bl	0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  44:	ldr	x20, [sp, #16]
  48:	mov	x19, x1
  4c:	cbz	x20, a8 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xa8>
  50:	ldr	x0, [x20, #88]
  54:	add	x8, x20, #0x68
  58:	cmp	x0, x8
  5c:	b.eq	64 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x64>  // b.none
  60:	bl	0 <free>
  64:	ldr	x0, [x20, #72]
  68:	add	x8, x20, #0x58
  6c:	cmp	x0, x8
  70:	b.eq	78 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x78>  // b.none
  74:	bl	0 <free>
  78:	ldr	x0, [x20, #56]
  7c:	add	x8, x20, #0x48
  80:	cmp	x0, x8
  84:	b.eq	8c <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x8c>  // b.none
  88:	bl	0 <free>
  8c:	ldr	x0, [x20, #8]
  90:	add	x8, x20, #0x18
  94:	cmp	x0, x8
  98:	b.eq	a0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xa0>  // b.none
  9c:	bl	0 <free>
  a0:	mov	x0, x20
  a4:	bl	0 <_ZdlPv>
  a8:	tbz	w19, #0, fc <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xfc>
  ac:	ldp	x20, x19, [sp, #48]
  b0:	ldp	x29, x30, [sp, #32]
  b4:	add	sp, sp, #0x40
  b8:	ret
  bc:	adrp	x0, 0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  c0:	adrp	x1, 0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  c4:	adrp	x3, 0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  c8:	add	x0, x0, #0x0
  cc:	add	x1, x1, #0x0
  d0:	add	x3, x3, #0x0
  d4:	mov	w2, #0x69                  	// #105
  d8:	bl	0 <__assert_fail>
  dc:	adrp	x0, 0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  e0:	adrp	x1, 0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  e4:	adrp	x3, 0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x108                 	// #264
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
 100:	adrp	x1, 0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
 104:	adrp	x3, 0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x6c7                 	// #1735
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEED2Ev:

0000000000000000 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEED2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	ldr	x0, [x0, #8]
  14:	bl	0 <_ZdlPv>
  18:	ldr	x8, [x19]
  1c:	add	x8, x8, #0x1
  20:	str	x8, [x19]
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ret

Disassembly of section .text._ZN4llvm9FieldInitC2EPNS_4InitEPNS_10StringInitE:

0000000000000000 <_ZN4llvm9FieldInitC2EPNS_4InitEPNS_10StringInitE>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #32]
   8:	str	x21, [sp, #48]
   c:	stp	x20, x19, [sp, #64]
  10:	add	x29, sp, #0x20
  14:	ldr	x8, [x1]
  18:	mov	x21, x1
  1c:	mov	x19, x0
  20:	mov	x0, x1
  24:	ldr	x8, [x8, #88]
  28:	mov	x1, x2
  2c:	mov	x20, x2
  30:	blr	x8
  34:	adrp	x9, cd8 <_ZTVN4llvm9FieldInitE>
  38:	ldr	x9, [x9]
  3c:	mov	w8, #0x7                   	// #7
  40:	strh	w8, [x19, #8]
  44:	stp	x0, x21, [x19, #16]
  48:	add	x8, x9, #0x10
  4c:	str	x8, [x19]
  50:	str	x20, [x19, #32]
  54:	cbz	x0, 6c <_ZN4llvm9FieldInitC2EPNS_4InitEPNS_10StringInitE+0x6c>
  58:	ldp	x20, x19, [sp, #64]
  5c:	ldr	x21, [sp, #48]
  60:	ldp	x29, x30, [sp, #32]
  64:	add	sp, sp, #0x50
  68:	ret
  6c:	bl	0 <_ZN4llvm4errsEv>
  70:	adrp	x1, 0 <_ZN4llvm9FieldInitC2EPNS_4InitEPNS_10StringInitE>
  74:	add	x1, x1, #0x0
  78:	bl	0 <_ZN4llvm9FieldInitC2EPNS_4InitEPNS_10StringInitE>
  7c:	ldr	x9, [x19, #24]
  80:	mov	x20, x0
  84:	ldr	x8, [x9]
  88:	mov	x0, x9
  8c:	ldr	x10, [x8, #40]
  90:	mov	x8, sp
  94:	blr	x10
  98:	mov	x1, sp
  9c:	mov	x0, x20
  a0:	bl	0 <_ZN4llvm9FieldInitC2EPNS_4InitEPNS_10StringInitE>
  a4:	adrp	x1, 0 <_ZN4llvm9FieldInitC2EPNS_4InitEPNS_10StringInitE>
  a8:	add	x1, x1, #0x0
  ac:	bl	0 <_ZN4llvm9FieldInitC2EPNS_4InitEPNS_10StringInitE>
  b0:	ldr	x1, [x19, #32]
  b4:	bl	0 <_ZN4llvm9FieldInitC2EPNS_4InitEPNS_10StringInitE>
  b8:	adrp	x1, 0 <_ZN4llvm9FieldInitC2EPNS_4InitEPNS_10StringInitE>
  bc:	add	x1, x1, #0x0
  c0:	bl	0 <_ZN4llvm9FieldInitC2EPNS_4InitEPNS_10StringInitE>
  c4:	mov	x0, sp
  c8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
  cc:	adrp	x0, 0 <_ZN4llvm9FieldInitC2EPNS_4InitEPNS_10StringInitE>
  d0:	adrp	x1, 0 <_ZN4llvm9FieldInitC2EPNS_4InitEPNS_10StringInitE>
  d4:	add	x0, x0, #0x0
  d8:	add	x1, x1, #0x0
  dc:	mov	w2, #0x4f7                 	// #1271
  e0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cbz	x1, 2c <_ZN4llvm11raw_ostreamlsEPKc+0x2c>
  1c:	mov	x0, x20
  20:	bl	0 <strlen>
  24:	mov	x21, x0
  28:	b	30 <_ZN4llvm11raw_ostreamlsEPKc+0x30>
  2c:	mov	x21, xzr
  30:	ldp	x8, x0, [x19, #16]
  34:	sub	x8, x8, x0
  38:	cmp	x21, x8
  3c:	b.ls	5c <_ZN4llvm11raw_ostreamlsEPKc+0x5c>  // b.plast
  40:	mov	x0, x19
  44:	mov	x1, x20
  48:	mov	x2, x21
  4c:	ldp	x20, x19, [sp, #32]
  50:	ldr	x21, [sp, #16]
  54:	ldp	x29, x30, [sp], #48
  58:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  5c:	cbz	x21, 78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  60:	mov	x1, x20
  64:	mov	x2, x21
  68:	bl	0 <memcpy>
  6c:	ldr	x8, [x19, #24]
  70:	add	x8, x8, x21
  74:	str	x8, [x19, #24]
  78:	mov	x0, x19
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldr	x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:

0000000000000000 <_ZN4llvm11raw_ostreamlsERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
   0:	ldp	x8, x2, [x1]
   4:	mov	x1, x8
   8:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>

Disassembly of section .text._ZN4llvmlsERNS_11raw_ostreamERKNS_4InitE:

0000000000000000 <_ZN4llvmlsERNS_11raw_ostreamERKNS_4InitE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x20, x19, [sp, #48]
   c:	add	x29, sp, #0x20
  10:	ldr	x8, [x1]
  14:	mov	x19, x0
  18:	mov	x0, x1
  1c:	mov	x20, sp
  20:	ldr	x9, [x8, #40]
  24:	mov	x8, sp
  28:	blr	x9
  2c:	ldp	x1, x2, [sp]
  30:	mov	x0, x19
  34:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  38:	ldr	x0, [sp]
  3c:	add	x8, x20, #0x10
  40:	cmp	x0, x8
  44:	b.eq	4c <_ZN4llvmlsERNS_11raw_ostreamERKNS_4InitE+0x4c>  // b.none
  48:	bl	0 <_ZdlPv>
  4c:	mov	x0, x19
  50:	ldp	x20, x19, [sp, #48]
  54:	ldp	x29, x30, [sp, #32]
  58:	add	sp, sp, #0x40
  5c:	ret

Disassembly of section .text._ZN4llvm14RecordResolverD2Ev:

0000000000000000 <_ZN4llvm14RecordResolverD2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, e08 <_ZTVN4llvm14RecordResolverE>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #56]
  18:	ldr	x8, [x8]
  1c:	add	x9, x19, #0x48
  20:	cmp	x0, x9
  24:	add	x8, x8, #0x10
  28:	str	x8, [x19]
  2c:	b.eq	34 <_ZN4llvm14RecordResolverD2Ev+0x34>  // b.none
  30:	bl	0 <free>
  34:	ldr	x0, [x19, #32]
  38:	bl	0 <_ZdlPv>
  3c:	ldr	x8, [x19, #24]
  40:	add	x8, x8, #0x1
  44:	str	x8, [x19, #24]
  48:	ldr	x19, [sp, #16]
  4c:	ldp	x29, x30, [sp], #32
  50:	ret

Disassembly of section .text._ZNK4llvm9StringRef3strB5cxx11Ev:

0000000000000000 <_ZNK4llvm9StringRef3strB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x20, [x0]
  14:	mov	x19, x8
  18:	cbz	x20, 68 <_ZNK4llvm9StringRef3strB5cxx11Ev+0x68>
  1c:	ldr	x21, [x0, #8]
  20:	add	x0, x19, #0x10
  24:	str	x0, [x19]
  28:	cmp	x21, #0x10
  2c:	str	x21, [x29, #24]
  30:	b.cc	50 <_ZNK4llvm9StringRef3strB5cxx11Ev+0x50>  // b.lo, b.ul, b.last
  34:	add	x1, x29, #0x18
  38:	mov	x0, x19
  3c:	mov	x2, xzr
  40:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  44:	ldr	x8, [x29, #24]
  48:	str	x0, [x19]
  4c:	str	x8, [x19, #16]
  50:	cbz	x21, 84 <_ZNK4llvm9StringRef3strB5cxx11Ev+0x84>
  54:	cmp	x21, #0x1
  58:	b.ne	78 <_ZNK4llvm9StringRef3strB5cxx11Ev+0x78>  // b.any
  5c:	ldrb	w8, [x20]
  60:	strb	w8, [x0]
  64:	b	84 <_ZNK4llvm9StringRef3strB5cxx11Ev+0x84>
  68:	mov	x8, x19
  6c:	strb	wzr, [x8, #16]!
  70:	stp	x8, xzr, [x19]
  74:	b	94 <_ZNK4llvm9StringRef3strB5cxx11Ev+0x94>
  78:	mov	x1, x20
  7c:	mov	x2, x21
  80:	bl	0 <memcpy>
  84:	ldr	x8, [x29, #24]
  88:	ldr	x9, [x19]
  8c:	str	x8, [x19, #8]
  90:	strb	wzr, [x9, x8]
  94:	ldp	x20, x19, [sp, #32]
  98:	ldr	x21, [sp, #16]
  9c:	ldp	x29, x30, [sp], #48
  a0:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_EixERKS3_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_EixERKS3_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #24]
  10:	mov	x19, x1
  14:	cbz	w8, 90 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_EixERKS3_+0x90>
  18:	ldr	x9, [x19]
  1c:	orr	x10, x9, #0x8
  20:	cmn	x10, #0x8
  24:	b.eq	cc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_EixERKS3_+0xcc>  // b.none
  28:	ldr	x10, [x0, #8]
  2c:	ubfx	x11, x9, #4, #28
  30:	eor	w12, w11, w9, lsr #9
  34:	sub	w11, w8, #0x1
  38:	and	w13, w12, w11
  3c:	mov	w12, #0x18                  	// #24
  40:	umaddl	x8, w13, w12, x10
  44:	ldr	x15, [x8]
  48:	cmp	x15, x9
  4c:	b.eq	b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_EixERKS3_+0xb0>  // b.none
  50:	mov	x14, xzr
  54:	mov	w17, #0x1                   	// #1
  58:	mov	x16, #0xfffffffffffffff0    	// #-16
  5c:	cmn	x15, #0x8
  60:	b.eq	c0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_EixERKS3_+0xc0>  // b.none
  64:	cmp	x14, #0x0
  68:	add	w13, w13, w17
  6c:	ccmp	x15, x16, #0x0, eq  // eq = none
  70:	and	w13, w13, w11
  74:	csel	x14, x14, x8, ne  // ne = any
  78:	umaddl	x8, w13, w12, x10
  7c:	ldr	x15, [x8]
  80:	add	w17, w17, #0x1
  84:	cmp	x15, x9
  88:	b.eq	b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_EixERKS3_+0xb0>  // b.none
  8c:	b	5c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_EixERKS3_+0x5c>
  90:	mov	x3, xzr
  94:	mov	x1, x19
  98:	mov	x2, x19
  9c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_EixERKS3_>
  a0:	ldr	x9, [x19]
  a4:	mov	x8, x0
  a8:	strb	wzr, [x0, #16]
  ac:	stp	x9, xzr, [x0]
  b0:	ldr	x19, [sp, #16]
  b4:	add	x0, x8, #0x8
  b8:	ldp	x29, x30, [sp], #32
  bc:	ret
  c0:	cmp	x14, #0x0
  c4:	csel	x3, x8, x14, eq  // eq = none
  c8:	b	94 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_EixERKS3_+0x94>
  cc:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_EixERKS3_>
  d0:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_EixERKS3_>
  d4:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_EixERKS3_>
  d8:	add	x0, x0, #0x0
  dc:	add	x1, x1, #0x0
  e0:	add	x3, x3, #0x0
  e4:	mov	w2, #0x252                 	// #594
  e8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm5RecTyD0Ev:

0000000000000000 <_ZN4llvm5RecTyD0Ev>:
   0:	brk	#0x1

Disassembly of section .text._ZN4llvm8BitRecTyD0Ev:

0000000000000000 <_ZN4llvm8BitRecTyD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm8BitRecTy11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm8BitRecTy11getAsStringB5cxx11Ev>:
   0:	mov	w9, #0x6962                	// #26978
   4:	movk	w9, #0x74, lsl #16
   8:	mov	x10, x8
   c:	mov	w11, #0x3                   	// #3
  10:	str	w9, [x10, #16]!
  14:	stp	x10, x11, [x8]
  18:	ret

Disassembly of section .text._ZN4llvm9BitsRecTyD0Ev:

0000000000000000 <_ZN4llvm9BitsRecTyD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm9CodeRecTyD0Ev:

0000000000000000 <_ZN4llvm9CodeRecTyD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm9CodeRecTy11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm9CodeRecTy11getAsStringB5cxx11Ev>:
   0:	mov	w9, #0x6f63                	// #28515
   4:	movk	w9, #0x6564, lsl #16
   8:	mov	x10, x8
   c:	mov	w11, #0x4                   	// #4
  10:	str	w9, [x10, #16]!
  14:	stp	x10, x11, [x8]
  18:	strb	wzr, [x8, #20]
  1c:	ret

Disassembly of section .text._ZN4llvm8IntRecTyD0Ev:

0000000000000000 <_ZN4llvm8IntRecTyD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm8IntRecTy11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm8IntRecTy11getAsStringB5cxx11Ev>:
   0:	mov	w9, #0x6e69                	// #28265
   4:	movk	w9, #0x74, lsl #16
   8:	mov	x10, x8
   c:	mov	w11, #0x3                   	// #3
  10:	str	w9, [x10, #16]!
  14:	stp	x10, x11, [x8]
  18:	ret

Disassembly of section .text._ZN4llvm11StringRecTyD0Ev:

0000000000000000 <_ZN4llvm11StringRecTyD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm9ListRecTyD0Ev:

0000000000000000 <_ZN4llvm9ListRecTyD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm8DagRecTyD0Ev:

0000000000000000 <_ZN4llvm8DagRecTyD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm11RecordRecTyD0Ev:

0000000000000000 <_ZN4llvm11RecordRecTyD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm4InitD0Ev:

0000000000000000 <_ZN4llvm4InitD0Ev>:
   0:	brk	#0x1

Disassembly of section .text._ZNK4llvm4Init10isCompleteEv:

0000000000000000 <_ZNK4llvm4Init10isCompleteEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm4Init10isConcreteEv:

0000000000000000 <_ZNK4llvm4Init10isConcreteEv>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZNK4llvm4Init19getAsUnquotedStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm4Init19getAsUnquotedStringB5cxx11Ev>:
   0:	ldr	x9, [x0]
   4:	ldr	x1, [x9, #40]
   8:	br	x1

Disassembly of section .text._ZNK4llvm4Init26convertInitializerBitRangeENS_8ArrayRefIjEE:

0000000000000000 <_ZNK4llvm4Init26convertInitializerBitRangeENS_8ArrayRefIjEE>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZNK4llvm4Init20convertInitListSliceENS_8ArrayRefIjEE:

0000000000000000 <_ZNK4llvm4Init20convertInitListSliceENS_8ArrayRefIjEE>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZNK4llvm4Init12getFieldTypeEPNS_10StringInitE:

0000000000000000 <_ZNK4llvm4Init12getFieldTypeEPNS_10StringInitE>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZNK4llvm4Init17resolveReferencesERNS_8ResolverE:

0000000000000000 <_ZNK4llvm4Init17resolveReferencesERNS_8ResolverE>:
   0:	ret

Disassembly of section .text._ZN4llvm9TypedInitD0Ev:

0000000000000000 <_ZN4llvm9TypedInitD0Ev>:
   0:	brk	#0x1

Disassembly of section .text._ZN4llvm9UnsetInitD0Ev:

0000000000000000 <_ZN4llvm9UnsetInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm9UnsetInit10isCompleteEv:

0000000000000000 <_ZNK4llvm9UnsetInit10isCompleteEv>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZNK4llvm9UnsetInit10isConcreteEv:

0000000000000000 <_ZNK4llvm9UnsetInit10isConcreteEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm9UnsetInit11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm9UnsetInit11getAsStringB5cxx11Ev>:
   0:	mov	w9, #0x3f                  	// #63
   4:	mov	x10, x8
   8:	mov	w11, #0x1                   	// #1
   c:	strh	w9, [x10, #16]!
  10:	stp	x10, x11, [x8]
  14:	ret

Disassembly of section .text._ZNK4llvm9UnsetInit6getBitEj:

0000000000000000 <_ZNK4llvm9UnsetInit6getBitEj>:
   0:	ret

Disassembly of section .text._ZN4llvm7BitInitD0Ev:

0000000000000000 <_ZN4llvm7BitInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm7BitInit10isConcreteEv:

0000000000000000 <_ZNK4llvm7BitInit10isConcreteEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm7BitInit11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm7BitInit11getAsStringB5cxx11Ev>:
   0:	ldrb	w9, [x0, #24]
   4:	adrp	x10, 0 <_ZNK4llvm7BitInit11getAsStringB5cxx11Ev>
   8:	adrp	x11, 0 <_ZNK4llvm7BitInit11getAsStringB5cxx11Ev>
   c:	add	x10, x10, #0x0
  10:	add	x11, x11, #0x0
  14:	cmp	w9, #0x0
  18:	csel	x9, x11, x10, eq  // eq = none
  1c:	ldrb	w9, [x9]
  20:	mov	x10, x8
  24:	mov	w11, #0x1                   	// #1
  28:	strb	w9, [x10, #16]!
  2c:	stp	x10, x11, [x8]
  30:	strb	wzr, [x8, #17]
  34:	ret

Disassembly of section .text._ZNK4llvm7BitInit6getBitEj:

0000000000000000 <_ZNK4llvm7BitInit6getBitEj>:
   0:	cbnz	w1, 8 <_ZNK4llvm7BitInit6getBitEj+0x8>
   4:	ret
   8:	stp	x29, x30, [sp, #-16]!
   c:	mov	x29, sp
  10:	adrp	x0, 0 <_ZNK4llvm7BitInit6getBitEj>
  14:	adrp	x1, 0 <_ZNK4llvm7BitInit6getBitEj>
  18:	adrp	x3, 0 <_ZNK4llvm7BitInit6getBitEj>
  1c:	add	x0, x0, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x3, x3, #0x0
  28:	mov	w2, #0x1f7                 	// #503
  2c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8BitsInitD0Ev:

0000000000000000 <_ZN4llvm8BitsInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm8BitsInit10isCompleteEv:

0000000000000000 <_ZNK4llvm8BitsInit10isCompleteEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #32]
  14:	cbz	w8, 50 <_ZNK4llvm8BitsInit10isCompleteEv+0x50>
  18:	mov	x19, x0
  1c:	mov	x20, xzr
  20:	add	x21, x0, #0x28
  24:	cmp	x20, w8, uxtw
  28:	b.cs	6c <_ZNK4llvm8BitsInit10isCompleteEv+0x6c>  // b.hs, b.nlast
  2c:	ldr	x0, [x21, x20, lsl #3]
  30:	ldr	x8, [x0]
  34:	ldr	x8, [x8, #24]
  38:	blr	x8
  3c:	tbz	w0, #0, 58 <_ZNK4llvm8BitsInit10isCompleteEv+0x58>
  40:	ldr	w8, [x19, #32]
  44:	add	x20, x20, #0x1
  48:	cmp	x20, x8
  4c:	b.ne	24 <_ZNK4llvm8BitsInit10isCompleteEv+0x24>  // b.any
  50:	mov	w0, #0x1                   	// #1
  54:	b	5c <_ZNK4llvm8BitsInit10isCompleteEv+0x5c>
  58:	mov	w0, wzr
  5c:	ldp	x20, x19, [sp, #32]
  60:	ldr	x21, [sp, #16]
  64:	ldp	x29, x30, [sp], #48
  68:	ret
  6c:	adrp	x0, 0 <_ZNK4llvm8BitsInit10isCompleteEv>
  70:	adrp	x1, 0 <_ZNK4llvm8BitsInit10isCompleteEv>
  74:	adrp	x3, 0 <_ZNK4llvm8BitsInit10isCompleteEv>
  78:	add	x0, x0, #0x0
  7c:	add	x1, x1, #0x0
  80:	add	x3, x3, #0x0
  84:	mov	w2, #0x22e                 	// #558
  88:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm7IntInitD0Ev:

0000000000000000 <_ZN4llvm7IntInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm7IntInit10isConcreteEv:

0000000000000000 <_ZNK4llvm7IntInit10isConcreteEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm7IntInit6getBitEj:

0000000000000000 <_ZNK4llvm7IntInit6getBitEj>:
   0:	sub	sp, sp, #0x20
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	adrp	x8, 0 <_ZNK4llvm7IntInit6getBitEj>
  10:	add	x8, x8, #0x0
  14:	ldr	x9, [x0, #24]
  18:	ldarb	w11, [x8]
  1c:	mov	w8, #0x1                   	// #1
  20:	lsl	x10, x8, x1
  24:	adrp	x8, 0 <_ZNK4llvm7IntInit6getBitEj>
  28:	add	x8, x8, #0x0
  2c:	tbz	w11, #0, 60 <_ZNK4llvm7IntInit6getBitEj+0x60>
  30:	adrp	x11, 0 <_ZNK4llvm7IntInit6getBitEj>
  34:	add	x11, x11, #0x0
  38:	ldarb	w11, [x11]
  3c:	and	x10, x9, x10
  40:	adrp	x9, 0 <_ZNK4llvm7IntInit6getBitEj>
  44:	add	x9, x9, #0x0
  48:	tbz	w11, #0, c8 <_ZNK4llvm7IntInit6getBitEj+0xc8>
  4c:	ldp	x29, x30, [sp, #16]
  50:	cmp	x10, #0x0
  54:	csel	x0, x9, x8, eq  // eq = none
  58:	add	sp, sp, #0x20
  5c:	ret
  60:	adrp	x0, 0 <_ZNK4llvm7IntInit6getBitEj>
  64:	add	x0, x0, #0x0
  68:	stp	x9, x10, [sp]
  6c:	bl	0 <__cxa_guard_acquire>
  70:	ldp	x9, x10, [sp]
  74:	adrp	x8, 0 <_ZNK4llvm7IntInit6getBitEj>
  78:	add	x8, x8, #0x0
  7c:	cbz	w0, 30 <_ZNK4llvm7IntInit6getBitEj+0x30>
  80:	adrp	x10, 88 <_ZNK4llvm7IntInit6getBitEj+0x88>
  84:	adrp	x11, 3f8 <_ZTVN4llvm7BitInitE>
  88:	ldr	x10, [x10]
  8c:	ldr	x11, [x11]
  90:	mov	w9, #0x2                   	// #2
  94:	adrp	x0, 0 <_ZNK4llvm7IntInit6getBitEj>
  98:	mov	w12, #0x1                   	// #1
  9c:	strh	w9, [x8, #8]
  a0:	add	x9, x11, #0x10
  a4:	add	x0, x0, #0x0
  a8:	str	x10, [x8, #16]
  ac:	str	x9, [x8]
  b0:	strb	w12, [x8, #24]
  b4:	bl	0 <__cxa_guard_release>
  b8:	ldp	x9, x10, [sp]
  bc:	adrp	x8, 0 <_ZNK4llvm7IntInit6getBitEj>
  c0:	add	x8, x8, #0x0
  c4:	b	30 <_ZNK4llvm7IntInit6getBitEj+0x30>
  c8:	adrp	x0, 0 <_ZNK4llvm7IntInit6getBitEj>
  cc:	add	x0, x0, #0x0
  d0:	str	x10, [sp, #8]
  d4:	bl	0 <__cxa_guard_acquire>
  d8:	ldr	x10, [sp, #8]
  dc:	adrp	x9, 0 <_ZNK4llvm7IntInit6getBitEj>
  e0:	adrp	x8, 0 <_ZNK4llvm7IntInit6getBitEj>
  e4:	add	x9, x9, #0x0
  e8:	add	x8, x8, #0x0
  ec:	cbz	w0, 4c <_ZNK4llvm7IntInit6getBitEj+0x4c>
  f0:	adrp	x10, 88 <_ZNK4llvm7IntInit6getBitEj+0x88>
  f4:	adrp	x11, 3f8 <_ZTVN4llvm7BitInitE>
  f8:	ldr	x10, [x10]
  fc:	ldr	x11, [x11]
 100:	mov	w8, #0x2                   	// #2
 104:	adrp	x0, 0 <_ZNK4llvm7IntInit6getBitEj>
 108:	strh	w8, [x9, #8]
 10c:	add	x8, x11, #0x10
 110:	add	x0, x0, #0x0
 114:	str	x10, [x9, #16]
 118:	str	x8, [x9]
 11c:	strb	wzr, [x9, #24]
 120:	bl	0 <__cxa_guard_release>
 124:	ldr	x10, [sp, #8]
 128:	adrp	x9, 0 <_ZNK4llvm7IntInit6getBitEj>
 12c:	adrp	x8, 0 <_ZNK4llvm7IntInit6getBitEj>
 130:	add	x9, x9, #0x0
 134:	add	x8, x8, #0x0
 138:	b	4c <_ZNK4llvm7IntInit6getBitEj+0x4c>

Disassembly of section .text._ZN4llvm10StringInitD0Ev:

0000000000000000 <_ZN4llvm10StringInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm10StringInit10isConcreteEv:

0000000000000000 <_ZNK4llvm10StringInit10isConcreteEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm10StringInit11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #64]
   8:	str	x21, [sp, #80]
   c:	stp	x20, x19, [sp, #96]
  10:	add	x29, sp, #0x40
  14:	ldr	x20, [x0, #24]
  18:	mov	x19, x8
  1c:	cbz	x20, 70 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0x70>
  20:	ldr	x21, [x0, #32]
  24:	mov	x8, sp
  28:	add	x0, x8, #0x10
  2c:	str	x0, [sp]
  30:	cmp	x21, #0x10
  34:	str	x21, [sp, #32]
  38:	b.cc	58 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0x58>  // b.lo, b.ul, b.last
  3c:	mov	x0, sp
  40:	add	x1, sp, #0x20
  44:	mov	x2, xzr
  48:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  4c:	ldr	x8, [sp, #32]
  50:	str	x0, [sp]
  54:	str	x8, [sp, #16]
  58:	cbz	x21, 90 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0x90>
  5c:	cmp	x21, #0x1
  60:	b.ne	84 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0x84>  // b.any
  64:	ldrb	w8, [x20]
  68:	strb	w8, [x0]
  6c:	b	90 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0x90>
  70:	mov	x8, sp
  74:	add	x8, x8, #0x10
  78:	stp	x8, xzr, [sp]
  7c:	strb	wzr, [sp, #16]
  80:	b	a0 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0xa0>
  84:	mov	x1, x20
  88:	mov	x2, x21
  8c:	bl	0 <memcpy>
  90:	ldr	x8, [sp, #32]
  94:	ldr	x9, [sp]
  98:	str	x8, [sp, #8]
  9c:	strb	wzr, [x9, x8]
  a0:	adrp	x3, 0 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev>
  a4:	add	x3, x3, #0x0
  a8:	mov	x0, sp
  ac:	mov	w4, #0x1                   	// #1
  b0:	mov	x1, xzr
  b4:	mov	x2, xzr
  b8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
  bc:	add	x8, sp, #0x20
  c0:	add	x20, x8, #0x10
  c4:	str	x20, [sp, #32]
  c8:	mov	x8, x0
  cc:	ldr	x9, [x8], #16
  d0:	cmp	x9, x8
  d4:	b.eq	e8 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0xe8>  // b.none
  d8:	str	x9, [sp, #32]
  dc:	ldr	x9, [x0, #16]
  e0:	str	x9, [sp, #48]
  e4:	b	f0 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0xf0>
  e8:	ldr	q0, [x9]
  ec:	str	q0, [x20]
  f0:	ldr	x9, [x0, #8]
  f4:	str	x9, [sp, #40]
  f8:	stp	x8, xzr, [x0]
  fc:	strb	wzr, [x0, #16]
 100:	ldr	x8, [sp, #40]
 104:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
 108:	cmp	x8, x9
 10c:	b.eq	1a0 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0x1a0>  // b.none
 110:	adrp	x1, 0 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev>
 114:	add	x1, x1, #0x0
 118:	add	x0, sp, #0x20
 11c:	mov	w2, #0x1                   	// #1
 120:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 124:	add	x9, x19, #0x10
 128:	str	x9, [x19]
 12c:	mov	x8, x0
 130:	ldr	x10, [x8], #16
 134:	cmp	x10, x8
 138:	b.eq	14c <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0x14c>  // b.none
 13c:	str	x10, [x19]
 140:	ldr	x9, [x0, #16]
 144:	str	x9, [x19, #16]
 148:	b	154 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0x154>
 14c:	ldr	q0, [x10]
 150:	str	q0, [x9]
 154:	ldr	x9, [x0, #8]
 158:	str	x9, [x19, #8]
 15c:	stp	x8, xzr, [x0]
 160:	strb	wzr, [x0, #16]
 164:	ldr	x0, [sp, #32]
 168:	cmp	x0, x20
 16c:	b.eq	174 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0x174>  // b.none
 170:	bl	0 <_ZdlPv>
 174:	ldr	x0, [sp]
 178:	mov	x8, sp
 17c:	add	x8, x8, #0x10
 180:	cmp	x0, x8
 184:	b.eq	18c <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0x18c>  // b.none
 188:	bl	0 <_ZdlPv>
 18c:	ldp	x20, x19, [sp, #96]
 190:	ldr	x21, [sp, #80]
 194:	ldp	x29, x30, [sp, #64]
 198:	add	sp, sp, #0x70
 19c:	ret
 1a0:	adrp	x0, 0 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev>
 1a4:	add	x0, x0, #0x0
 1a8:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNK4llvm10StringInit19getAsUnquotedStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm10StringInit19getAsUnquotedStringB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x20, [x0, #24]
  14:	mov	x19, x8
  18:	cbz	x20, 68 <_ZNK4llvm10StringInit19getAsUnquotedStringB5cxx11Ev+0x68>
  1c:	ldr	x21, [x0, #32]
  20:	add	x0, x19, #0x10
  24:	str	x0, [x19]
  28:	cmp	x21, #0x10
  2c:	str	x21, [x29, #24]
  30:	b.cc	50 <_ZNK4llvm10StringInit19getAsUnquotedStringB5cxx11Ev+0x50>  // b.lo, b.ul, b.last
  34:	add	x1, x29, #0x18
  38:	mov	x0, x19
  3c:	mov	x2, xzr
  40:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  44:	ldr	x8, [x29, #24]
  48:	str	x0, [x19]
  4c:	str	x8, [x19, #16]
  50:	cbz	x21, 84 <_ZNK4llvm10StringInit19getAsUnquotedStringB5cxx11Ev+0x84>
  54:	cmp	x21, #0x1
  58:	b.ne	78 <_ZNK4llvm10StringInit19getAsUnquotedStringB5cxx11Ev+0x78>  // b.any
  5c:	ldrb	w8, [x20]
  60:	strb	w8, [x0]
  64:	b	84 <_ZNK4llvm10StringInit19getAsUnquotedStringB5cxx11Ev+0x84>
  68:	mov	x8, x19
  6c:	strb	wzr, [x8, #16]!
  70:	stp	x8, xzr, [x19]
  74:	b	94 <_ZNK4llvm10StringInit19getAsUnquotedStringB5cxx11Ev+0x94>
  78:	mov	x1, x20
  7c:	mov	x2, x21
  80:	bl	0 <memcpy>
  84:	ldr	x8, [x29, #24]
  88:	ldr	x9, [x19]
  8c:	str	x8, [x19, #8]
  90:	strb	wzr, [x9, x8]
  94:	ldp	x20, x19, [sp, #32]
  98:	ldr	x21, [sp, #16]
  9c:	ldp	x29, x30, [sp], #48
  a0:	ret

Disassembly of section .text._ZNK4llvm10StringInit6getBitEj:

0000000000000000 <_ZNK4llvm10StringInit6getBitEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x0, 0 <_ZNK4llvm10StringInit6getBitEj>
   c:	adrp	x1, 0 <_ZNK4llvm10StringInit6getBitEj>
  10:	add	x0, x0, #0x0
  14:	add	x1, x1, #0x0
  18:	mov	w2, #0x26c                 	// #620
  1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm4InitD2Ev:

0000000000000000 <_ZN4llvm4InitD2Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm8CodeInitD0Ev:

0000000000000000 <_ZN4llvm8CodeInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm8CodeInit10isConcreteEv:

0000000000000000 <_ZNK4llvm8CodeInit10isConcreteEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm8CodeInit11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #64]
   8:	str	x21, [sp, #80]
   c:	stp	x20, x19, [sp, #96]
  10:	add	x29, sp, #0x40
  14:	ldr	x20, [x0, #24]
  18:	mov	x19, x8
  1c:	cbz	x20, 70 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0x70>
  20:	ldr	x21, [x0, #32]
  24:	mov	x8, sp
  28:	add	x0, x8, #0x10
  2c:	str	x0, [sp]
  30:	cmp	x21, #0x10
  34:	str	x21, [sp, #32]
  38:	b.cc	58 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0x58>  // b.lo, b.ul, b.last
  3c:	mov	x0, sp
  40:	add	x1, sp, #0x20
  44:	mov	x2, xzr
  48:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  4c:	ldr	x8, [sp, #32]
  50:	str	x0, [sp]
  54:	str	x8, [sp, #16]
  58:	cbz	x21, 90 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0x90>
  5c:	cmp	x21, #0x1
  60:	b.ne	84 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0x84>  // b.any
  64:	ldrb	w8, [x20]
  68:	strb	w8, [x0]
  6c:	b	90 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0x90>
  70:	mov	x8, sp
  74:	add	x8, x8, #0x10
  78:	stp	x8, xzr, [sp]
  7c:	strb	wzr, [sp, #16]
  80:	b	a0 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0xa0>
  84:	mov	x1, x20
  88:	mov	x2, x21
  8c:	bl	0 <memcpy>
  90:	ldr	x8, [sp, #32]
  94:	ldr	x9, [sp]
  98:	str	x8, [sp, #8]
  9c:	strb	wzr, [x9, x8]
  a0:	adrp	x3, 0 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev>
  a4:	add	x3, x3, #0x0
  a8:	mov	x0, sp
  ac:	mov	w4, #0x2                   	// #2
  b0:	mov	x1, xzr
  b4:	mov	x2, xzr
  b8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
  bc:	add	x8, sp, #0x20
  c0:	add	x20, x8, #0x10
  c4:	str	x20, [sp, #32]
  c8:	mov	x8, x0
  cc:	ldr	x9, [x8], #16
  d0:	cmp	x9, x8
  d4:	b.eq	e8 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0xe8>  // b.none
  d8:	str	x9, [sp, #32]
  dc:	ldr	x9, [x0, #16]
  e0:	str	x9, [sp, #48]
  e4:	b	f0 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0xf0>
  e8:	ldr	q0, [x9]
  ec:	str	q0, [x20]
  f0:	ldr	x9, [x0, #8]
  f4:	str	x9, [sp, #40]
  f8:	stp	x8, xzr, [x0]
  fc:	strb	wzr, [x0, #16]
 100:	ldr	x8, [sp, #40]
 104:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
 108:	orr	x8, x8, #0x1
 10c:	cmp	x8, x9
 110:	b.eq	1a4 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0x1a4>  // b.none
 114:	adrp	x1, 0 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev>
 118:	add	x1, x1, #0x0
 11c:	add	x0, sp, #0x20
 120:	mov	w2, #0x2                   	// #2
 124:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 128:	add	x9, x19, #0x10
 12c:	str	x9, [x19]
 130:	mov	x8, x0
 134:	ldr	x10, [x8], #16
 138:	cmp	x10, x8
 13c:	b.eq	150 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0x150>  // b.none
 140:	str	x10, [x19]
 144:	ldr	x9, [x0, #16]
 148:	str	x9, [x19, #16]
 14c:	b	158 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0x158>
 150:	ldr	q0, [x10]
 154:	str	q0, [x9]
 158:	ldr	x9, [x0, #8]
 15c:	str	x9, [x19, #8]
 160:	stp	x8, xzr, [x0]
 164:	strb	wzr, [x0, #16]
 168:	ldr	x0, [sp, #32]
 16c:	cmp	x0, x20
 170:	b.eq	178 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0x178>  // b.none
 174:	bl	0 <_ZdlPv>
 178:	ldr	x0, [sp]
 17c:	mov	x8, sp
 180:	add	x8, x8, #0x10
 184:	cmp	x0, x8
 188:	b.eq	190 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0x190>  // b.none
 18c:	bl	0 <_ZdlPv>
 190:	ldp	x20, x19, [sp, #96]
 194:	ldr	x21, [sp, #80]
 198:	ldp	x29, x30, [sp, #64]
 19c:	add	sp, sp, #0x70
 1a0:	ret
 1a4:	adrp	x0, 0 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev>
 1a8:	add	x0, x0, #0x0
 1ac:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNK4llvm8CodeInit19getAsUnquotedStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm8CodeInit19getAsUnquotedStringB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x20, [x0, #24]
  14:	mov	x19, x8
  18:	cbz	x20, 68 <_ZNK4llvm8CodeInit19getAsUnquotedStringB5cxx11Ev+0x68>
  1c:	ldr	x21, [x0, #32]
  20:	add	x0, x19, #0x10
  24:	str	x0, [x19]
  28:	cmp	x21, #0x10
  2c:	str	x21, [x29, #24]
  30:	b.cc	50 <_ZNK4llvm8CodeInit19getAsUnquotedStringB5cxx11Ev+0x50>  // b.lo, b.ul, b.last
  34:	add	x1, x29, #0x18
  38:	mov	x0, x19
  3c:	mov	x2, xzr
  40:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  44:	ldr	x8, [x29, #24]
  48:	str	x0, [x19]
  4c:	str	x8, [x19, #16]
  50:	cbz	x21, 84 <_ZNK4llvm8CodeInit19getAsUnquotedStringB5cxx11Ev+0x84>
  54:	cmp	x21, #0x1
  58:	b.ne	78 <_ZNK4llvm8CodeInit19getAsUnquotedStringB5cxx11Ev+0x78>  // b.any
  5c:	ldrb	w8, [x20]
  60:	strb	w8, [x0]
  64:	b	84 <_ZNK4llvm8CodeInit19getAsUnquotedStringB5cxx11Ev+0x84>
  68:	mov	x8, x19
  6c:	strb	wzr, [x8, #16]!
  70:	stp	x8, xzr, [x19]
  74:	b	94 <_ZNK4llvm8CodeInit19getAsUnquotedStringB5cxx11Ev+0x94>
  78:	mov	x1, x20
  7c:	mov	x2, x21
  80:	bl	0 <memcpy>
  84:	ldr	x8, [x29, #24]
  88:	ldr	x9, [x19]
  8c:	str	x8, [x19, #8]
  90:	strb	wzr, [x9, x8]
  94:	ldp	x20, x19, [sp, #32]
  98:	ldr	x21, [sp, #16]
  9c:	ldp	x29, x30, [sp], #48
  a0:	ret

Disassembly of section .text._ZNK4llvm8CodeInit6getBitEj:

0000000000000000 <_ZNK4llvm8CodeInit6getBitEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x0, 0 <_ZNK4llvm8CodeInit6getBitEj>
   c:	adrp	x1, 0 <_ZNK4llvm8CodeInit6getBitEj>
  10:	add	x0, x0, #0x0
  14:	add	x1, x1, #0x0
  18:	mov	w2, #0x28f                 	// #655
  1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm8ListInitD0Ev:

0000000000000000 <_ZN4llvm8ListInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm8ListInit6getBitEj:

0000000000000000 <_ZNK4llvm8ListInit6getBitEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x0, 0 <_ZNK4llvm8ListInit6getBitEj>
   c:	adrp	x1, 0 <_ZNK4llvm8ListInit6getBitEj>
  10:	add	x0, x0, #0x0
  14:	add	x1, x1, #0x0
  18:	mov	w2, #0x2d1                 	// #721
  1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm6OpInitD0Ev:

0000000000000000 <_ZN4llvm6OpInitD0Ev>:
   0:	brk	#0x1

Disassembly of section .text._ZN4llvm8UnOpInitD0Ev:

0000000000000000 <_ZN4llvm8UnOpInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm8UnOpInit5cloneENS_8ArrayRefIPNS_4InitEEE:

0000000000000000 <_ZNK4llvm8UnOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cmp	x2, #0x1
   c:	b.ne	24 <_ZNK4llvm8UnOpInit5cloneENS_8ArrayRefIPNS_4InitEEE+0x24>  // b.any
  10:	ldr	x1, [x1]
  14:	ldr	x2, [x0, #16]
  18:	ldrb	w0, [x0, #9]
  1c:	ldp	x29, x30, [sp], #16
  20:	b	37d4 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE>
  24:	adrp	x0, 0 <_ZNK4llvm8UnOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>
  28:	adrp	x1, 0 <_ZNK4llvm8UnOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>
  2c:	adrp	x3, 0 <_ZNK4llvm8UnOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0x309                 	// #777
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8UnOpInit14getNumOperandsEv:

0000000000000000 <_ZNK4llvm8UnOpInit14getNumOperandsEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm8UnOpInit10getOperandEj:

0000000000000000 <_ZNK4llvm8UnOpInit10getOperandEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbnz	w1, 18 <_ZNK4llvm8UnOpInit10getOperandEj+0x18>
   c:	ldr	x0, [x0, #32]
  10:	ldp	x29, x30, [sp], #16
  14:	ret
  18:	adrp	x0, 0 <_ZNK4llvm8UnOpInit10getOperandEj>
  1c:	adrp	x1, 0 <_ZNK4llvm8UnOpInit10getOperandEj>
  20:	adrp	x3, 0 <_ZNK4llvm8UnOpInit10getOperandEj>
  24:	add	x0, x0, #0x0
  28:	add	x1, x1, #0x0
  2c:	add	x3, x3, #0x0
  30:	mov	w2, #0x310                 	// #784
  34:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9BinOpInitD0Ev:

0000000000000000 <_ZN4llvm9BinOpInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm9BinOpInit5cloneENS_8ArrayRefIPNS_4InitEEE:

0000000000000000 <_ZNK4llvm9BinOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cmp	x2, #0x2
   c:	b.ne	28 <_ZNK4llvm9BinOpInit5cloneENS_8ArrayRefIPNS_4InitEEE+0x28>  // b.any
  10:	ldp	x8, x2, [x1]
  14:	ldr	x3, [x0, #16]
  18:	ldrb	w0, [x0, #9]
  1c:	mov	x1, x8
  20:	ldp	x29, x30, [sp], #16
  24:	b	4728 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE>
  28:	adrp	x0, 0 <_ZNK4llvm9BinOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>
  2c:	adrp	x1, 0 <_ZNK4llvm9BinOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>
  30:	adrp	x3, 0 <_ZNK4llvm9BinOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>
  34:	add	x0, x0, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x3, x3, #0x0
  40:	mov	w2, #0x340                 	// #832
  44:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9BinOpInit14getNumOperandsEv:

0000000000000000 <_ZNK4llvm9BinOpInit14getNumOperandsEv>:
   0:	mov	w0, #0x2                   	// #2
   4:	ret

Disassembly of section .text._ZNK4llvm9BinOpInit10getOperandEj:

0000000000000000 <_ZNK4llvm9BinOpInit10getOperandEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	w1, 1c <_ZNK4llvm9BinOpInit10getOperandEj+0x1c>
   c:	cmp	w1, #0x1
  10:	b.ne	2c <_ZNK4llvm9BinOpInit10getOperandEj+0x2c>  // b.any
  14:	add	x8, x0, #0x28
  18:	b	20 <_ZNK4llvm9BinOpInit10getOperandEj+0x20>
  1c:	add	x8, x0, #0x20
  20:	ldr	x0, [x8]
  24:	ldp	x29, x30, [sp], #16
  28:	ret
  2c:	adrp	x0, 0 <_ZNK4llvm9BinOpInit10getOperandEj>
  30:	adrp	x1, 0 <_ZNK4llvm9BinOpInit10getOperandEj>
  34:	add	x0, x0, #0x0
  38:	add	x1, x1, #0x0
  3c:	mov	w2, #0x347                 	// #839
  40:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm10TernOpInitD0Ev:

0000000000000000 <_ZN4llvm10TernOpInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm10TernOpInit10isCompleteEv:

0000000000000000 <_ZNK4llvm10TernOpInit10isCompleteEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	ldr	x0, [x0, #32]
  14:	ldr	x8, [x0]
  18:	ldr	x8, [x8, #24]
  1c:	blr	x8
  20:	tbz	w0, #0, 50 <_ZNK4llvm10TernOpInit10isCompleteEv+0x50>
  24:	ldr	x0, [x19, #40]
  28:	ldr	x8, [x0]
  2c:	ldr	x8, [x8, #24]
  30:	blr	x8
  34:	tbz	w0, #0, 50 <_ZNK4llvm10TernOpInit10isCompleteEv+0x50>
  38:	ldr	x0, [x19, #48]
  3c:	ldr	x19, [sp, #16]
  40:	ldr	x8, [x0]
  44:	ldr	x1, [x8, #24]
  48:	ldp	x29, x30, [sp], #32
  4c:	br	x1
  50:	ldr	x19, [sp, #16]
  54:	mov	w0, wzr
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZNK4llvm10TernOpInit5cloneENS_8ArrayRefIPNS_4InitEEE:

0000000000000000 <_ZNK4llvm10TernOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cmp	x2, #0x3
   c:	b.ne	2c <_ZNK4llvm10TernOpInit5cloneENS_8ArrayRefIPNS_4InitEEE+0x2c>  // b.any
  10:	ldp	x8, x2, [x1]
  14:	ldr	x3, [x1, #16]
  18:	ldr	x4, [x0, #16]
  1c:	ldrb	w0, [x0, #9]
  20:	mov	x1, x8
  24:	ldp	x29, x30, [sp], #16
  28:	b	6740 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE>
  2c:	adrp	x0, 0 <_ZNK4llvm10TernOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>
  30:	adrp	x1, 0 <_ZNK4llvm10TernOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>
  34:	adrp	x3, 0 <_ZNK4llvm10TernOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>
  38:	add	x0, x0, #0x0
  3c:	add	x1, x1, #0x0
  40:	add	x3, x3, #0x0
  44:	mov	w2, #0x377                 	// #887
  48:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10TernOpInit14getNumOperandsEv:

0000000000000000 <_ZNK4llvm10TernOpInit14getNumOperandsEv>:
   0:	mov	w0, #0x3                   	// #3
   4:	ret

Disassembly of section .text._ZNK4llvm10TernOpInit10getOperandEj:

0000000000000000 <_ZNK4llvm10TernOpInit10getOperandEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	w1, 2c <_ZNK4llvm10TernOpInit10getOperandEj+0x2c>
   c:	cmp	w1, #0x1
  10:	b.eq	24 <_ZNK4llvm10TernOpInit10getOperandEj+0x24>  // b.none
  14:	cmp	w1, #0x2
  18:	b.ne	3c <_ZNK4llvm10TernOpInit10getOperandEj+0x3c>  // b.any
  1c:	add	x8, x0, #0x30
  20:	b	30 <_ZNK4llvm10TernOpInit10getOperandEj+0x30>
  24:	add	x8, x0, #0x28
  28:	b	30 <_ZNK4llvm10TernOpInit10getOperandEj+0x30>
  2c:	add	x8, x0, #0x20
  30:	ldr	x0, [x8]
  34:	ldp	x29, x30, [sp], #16
  38:	ret
  3c:	adrp	x0, 0 <_ZNK4llvm10TernOpInit10getOperandEj>
  40:	adrp	x1, 0 <_ZNK4llvm10TernOpInit10getOperandEj>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	mov	w2, #0x37f                 	// #895
  50:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm10CondOpInitD0Ev:

0000000000000000 <_ZN4llvm10CondOpInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm10FoldOpInitD0Ev:

0000000000000000 <_ZN4llvm10FoldOpInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm10FoldOpInit10isCompleteEv:

0000000000000000 <_ZNK4llvm10FoldOpInit10isCompleteEv>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN4llvm9IsAOpInitD0Ev:

0000000000000000 <_ZN4llvm9IsAOpInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm9IsAOpInit10isCompleteEv:

0000000000000000 <_ZNK4llvm9IsAOpInit10isCompleteEv>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN4llvm7VarInitD0Ev:

0000000000000000 <_ZN4llvm7VarInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm7VarInit11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x9, [x0, #24]
  14:	cbz	x9, b0 <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev+0xb0>
  18:	mov	x19, x8
  1c:	ldrb	w8, [x9, #8]
  20:	cmp	w8, #0x12
  24:	b.ne	d0 <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev+0xd0>  // b.any
  28:	ldp	x20, x21, [x9, #24]
  2c:	add	x0, x19, #0x10
  30:	str	x0, [x19]
  34:	cbz	x20, 78 <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev+0x78>
  38:	cmp	x21, #0x10
  3c:	str	x21, [x29, #24]
  40:	b.cc	60 <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev+0x60>  // b.lo, b.ul, b.last
  44:	add	x1, x29, #0x18
  48:	mov	x0, x19
  4c:	mov	x2, xzr
  50:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  54:	ldr	x8, [x29, #24]
  58:	str	x0, [x19]
  5c:	str	x8, [x19, #16]
  60:	cbz	x21, 90 <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev+0x90>
  64:	cmp	x21, #0x1
  68:	b.ne	84 <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev+0x84>  // b.any
  6c:	ldrb	w8, [x20]
  70:	strb	w8, [x0]
  74:	b	90 <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev+0x90>
  78:	str	xzr, [x19, #8]
  7c:	strb	wzr, [x19, #16]
  80:	b	a0 <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev+0xa0>
  84:	mov	x1, x20
  88:	mov	x2, x21
  8c:	bl	0 <memcpy>
  90:	ldr	x8, [x29, #24]
  94:	ldr	x9, [x19]
  98:	str	x8, [x19, #8]
  9c:	strb	wzr, [x9, x8]
  a0:	ldp	x20, x19, [sp, #32]
  a4:	ldr	x21, [sp, #16]
  a8:	ldp	x29, x30, [sp], #48
  ac:	ret
  b0:	adrp	x0, 0 <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev>
  b4:	adrp	x1, 0 <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev>
  b8:	adrp	x3, 0 <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x69                  	// #105
  cc:	bl	0 <__assert_fail>
  d0:	adrp	x0, 0 <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev>
  d4:	adrp	x1, 0 <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev>
  d8:	adrp	x3, 0 <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev>
  dc:	add	x0, x0, #0x0
  e0:	add	x1, x1, #0x0
  e4:	add	x3, x3, #0x0
  e8:	mov	w2, #0x108                 	// #264
  ec:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm10VarBitInitD0Ev:

0000000000000000 <_ZN4llvm10VarBitInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm10VarBitInit6getBitEj:

0000000000000000 <_ZNK4llvm10VarBitInit6getBitEj>:
   0:	cbnz	w1, 8 <_ZNK4llvm10VarBitInit6getBitEj+0x8>
   4:	ret
   8:	stp	x29, x30, [sp, #-16]!
   c:	mov	x29, sp
  10:	adrp	x0, 0 <_ZNK4llvm10VarBitInit6getBitEj>
  14:	adrp	x1, 0 <_ZNK4llvm10VarBitInit6getBitEj>
  18:	adrp	x3, 0 <_ZNK4llvm10VarBitInit6getBitEj>
  1c:	add	x0, x0, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x3, x3, #0x0
  28:	mov	w2, #0x46f                 	// #1135
  2c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm18VarListElementInitD0Ev:

0000000000000000 <_ZN4llvm18VarListElementInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm10VarDefInitD0Ev:

0000000000000000 <_ZN4llvm10VarDefInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm10VarDefInit6getBitEj:

0000000000000000 <_ZNK4llvm10VarDefInit6getBitEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x0, 0 <_ZNK4llvm10VarDefInit6getBitEj>
   c:	adrp	x1, 0 <_ZNK4llvm10VarDefInit6getBitEj>
  10:	add	x0, x0, #0x0
  14:	add	x1, x1, #0x0
  18:	mov	w2, #0x4e7                 	// #1255
  1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm9FieldInitD0Ev:

0000000000000000 <_ZN4llvm9FieldInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm9FieldInit11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev>:
   0:	sub	sp, sp, #0xa0
   4:	stp	x29, x30, [sp, #96]
   8:	str	x23, [sp, #112]
   c:	stp	x22, x21, [sp, #128]
  10:	stp	x20, x19, [sp, #144]
  14:	add	x29, sp, #0x60
  18:	mov	x20, x0
  1c:	ldr	x0, [x0, #24]
  20:	mov	x19, x8
  24:	add	x8, sp, #0x20
  28:	ldr	x9, [x0]
  2c:	ldr	x9, [x9, #40]
  30:	blr	x9
  34:	ldr	x8, [sp, #40]
  38:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
  3c:	cmp	x8, x9
  40:	b.eq	210 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x210>  // b.none
  44:	adrp	x1, 0 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev>
  48:	add	x1, x1, #0x0
  4c:	add	x0, sp, #0x20
  50:	mov	w2, #0x1                   	// #1
  54:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
  58:	sub	x8, x29, #0x20
  5c:	add	x22, x8, #0x10
  60:	stur	x22, [x29, #-32]
  64:	mov	x8, x0
  68:	ldr	x9, [x8], #16
  6c:	cmp	x9, x8
  70:	b.eq	84 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x84>  // b.none
  74:	stur	x9, [x29, #-32]
  78:	ldr	x9, [x0, #16]
  7c:	stur	x9, [x29, #-16]
  80:	b	8c <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x8c>
  84:	ldr	q0, [x9]
  88:	str	q0, [x22]
  8c:	ldr	x9, [x0, #8]
  90:	stur	x9, [x29, #-24]
  94:	stp	x8, xzr, [x0]
  98:	strb	wzr, [x0, #16]
  9c:	ldr	x8, [x20, #32]
  a0:	ldp	x20, x21, [x8, #24]
  a4:	mov	x8, sp
  a8:	add	x23, x8, #0x10
  ac:	str	x23, [sp]
  b0:	cbz	x20, f8 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0xf8>
  b4:	cmp	x21, #0x10
  b8:	mov	x0, x23
  bc:	str	x21, [x29, #24]
  c0:	b.cc	e0 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0xe0>  // b.lo, b.ul, b.last
  c4:	mov	x0, sp
  c8:	add	x1, x29, #0x18
  cc:	mov	x2, xzr
  d0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  d4:	ldr	x8, [x29, #24]
  d8:	str	x0, [sp]
  dc:	str	x8, [sp, #16]
  e0:	cbz	x21, 118 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x118>
  e4:	cmp	x21, #0x1
  e8:	b.ne	10c <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x10c>  // b.any
  ec:	ldrb	w8, [x20]
  f0:	strb	w8, [x0]
  f4:	b	118 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x118>
  f8:	mov	x2, xzr
  fc:	str	xzr, [sp, #8]
 100:	strb	wzr, [sp, #16]
 104:	mov	x1, x23
 108:	b	12c <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x12c>
 10c:	mov	x1, x20
 110:	mov	x2, x21
 114:	bl	0 <memcpy>
 118:	ldr	x8, [x29, #24]
 11c:	ldr	x9, [sp]
 120:	str	x8, [sp, #8]
 124:	strb	wzr, [x9, x8]
 128:	ldp	x1, x2, [sp]
 12c:	ldp	x3, x4, [x29, #-32]
 130:	ldur	x9, [x29, #-16]
 134:	mov	w10, #0xf                   	// #15
 138:	cmp	x3, x22
 13c:	add	x8, x2, x4
 140:	csel	x9, x10, x9, eq  // eq = none
 144:	cmp	x8, x9
 148:	b.ls	164 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x164>  // b.plast
 14c:	ldr	x9, [sp, #16]
 150:	cmp	x1, x23
 154:	mov	w10, #0xf                   	// #15
 158:	csel	x9, x10, x9, eq  // eq = none
 15c:	cmp	x8, x9
 160:	b.ls	170 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x170>  // b.plast
 164:	sub	x0, x29, #0x20
 168:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 16c:	b	180 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x180>
 170:	mov	x0, sp
 174:	mov	x1, xzr
 178:	mov	x2, xzr
 17c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
 180:	add	x9, x19, #0x10
 184:	str	x9, [x19]
 188:	mov	x8, x0
 18c:	ldr	x10, [x8], #16
 190:	cmp	x10, x8
 194:	b.eq	1a8 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x1a8>  // b.none
 198:	str	x10, [x19]
 19c:	ldr	x9, [x0, #16]
 1a0:	str	x9, [x19, #16]
 1a4:	b	1b0 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x1b0>
 1a8:	ldr	q0, [x10]
 1ac:	str	q0, [x9]
 1b0:	ldr	x9, [x0, #8]
 1b4:	str	x9, [x19, #8]
 1b8:	stp	x8, xzr, [x0]
 1bc:	strb	wzr, [x0, #16]
 1c0:	ldr	x0, [sp]
 1c4:	cmp	x0, x23
 1c8:	b.eq	1d0 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x1d0>  // b.none
 1cc:	bl	0 <_ZdlPv>
 1d0:	ldur	x0, [x29, #-32]
 1d4:	cmp	x0, x22
 1d8:	b.eq	1e0 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x1e0>  // b.none
 1dc:	bl	0 <_ZdlPv>
 1e0:	ldr	x0, [sp, #32]
 1e4:	add	x8, sp, #0x20
 1e8:	add	x8, x8, #0x10
 1ec:	cmp	x0, x8
 1f0:	b.eq	1f8 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x1f8>  // b.none
 1f4:	bl	0 <_ZdlPv>
 1f8:	ldp	x20, x19, [sp, #144]
 1fc:	ldp	x22, x21, [sp, #128]
 200:	ldr	x23, [sp, #112]
 204:	ldp	x29, x30, [sp, #96]
 208:	add	sp, sp, #0xa0
 20c:	ret
 210:	adrp	x0, 0 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev>
 214:	add	x0, x0, #0x0
 218:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm7DagInitD0Ev:

0000000000000000 <_ZN4llvm7DagInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm7DagInit6getBitEj:

0000000000000000 <_ZNK4llvm7DagInit6getBitEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x0, 0 <_ZNK4llvm7DagInit6getBitEj>
   c:	adrp	x1, 0 <_ZNK4llvm7DagInit6getBitEj>
  10:	add	x0, x0, #0x0
  14:	add	x1, x1, #0x0
  18:	mov	w2, #0x56b                 	// #1387
  1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm11MapResolverD0Ev:

0000000000000000 <_ZN4llvm11MapResolverD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, dd8 <_ZTVN4llvm11MapResolverE>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #32]
  18:	ldr	x8, [x8]
  1c:	add	x8, x8, #0x10
  20:	str	x8, [x19]
  24:	bl	0 <_ZdlPv>
  28:	mov	x0, x19
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm8Resolver13keepUnsetBitsEv:

0000000000000000 <_ZNK4llvm8Resolver13keepUnsetBitsEv>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN4llvm14RecordResolverD0Ev:

0000000000000000 <_ZN4llvm14RecordResolverD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, e08 <_ZTVN4llvm14RecordResolverE>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #56]
  18:	ldr	x8, [x8]
  1c:	add	x9, x19, #0x48
  20:	cmp	x0, x9
  24:	add	x8, x8, #0x10
  28:	str	x8, [x19]
  2c:	b.eq	34 <_ZN4llvm14RecordResolverD0Ev+0x34>  // b.none
  30:	bl	0 <free>
  34:	ldr	x0, [x19, #32]
  38:	bl	0 <_ZdlPv>
  3c:	mov	x0, x19
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm14RecordResolver13keepUnsetBitsEv:

0000000000000000 <_ZNK4llvm14RecordResolver13keepUnsetBitsEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZN4llvm23TrackUnresolvedResolverD0Ev:

0000000000000000 <_ZN4llvm23TrackUnresolvedResolverD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm20HasReferenceResolverD0Ev:

0000000000000000 <_ZN4llvm20HasReferenceResolverD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm7DefInitD0Ev:

0000000000000000 <_ZN4llvm7DefInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm7DefInit10isConcreteEv:

0000000000000000 <_ZNK4llvm7DefInit10isConcreteEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm7DefInit6getBitEj:

0000000000000000 <_ZNK4llvm7DefInit6getBitEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x0, 0 <_ZNK4llvm7DefInit6getBitEj>
   c:	adrp	x1, 0 <_ZNK4llvm7DefInit6getBitEj>
  10:	add	x0, x0, #0x0
  14:	add	x1, x1, #0x0
  18:	mov	w2, #0x4b3                 	// #1203
  1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_:

0000000000000000 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	stp	x28, x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	ldr	x27, [x0]
  20:	ldr	w8, [x0, #8]
  24:	mov	x21, x3
  28:	mov	x20, x2
  2c:	sub	x10, x1, x27
  30:	add	x9, x27, x8, lsl #3
  34:	mov	x23, x0
  38:	cmp	x9, x1
  3c:	asr	x26, x10, #3
  40:	b.eq	12c <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x12c>  // b.none
  44:	cmp	x27, x1
  48:	b.hi	2b0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x2b0>  // b.pmore
  4c:	cmp	x9, x1
  50:	b.cc	2d0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x2d0>  // b.lo, b.ul, b.last
  54:	ldr	w9, [x23, #12]
  58:	sub	x24, x21, x20
  5c:	asr	x22, x24, #3
  60:	add	x2, x22, x8
  64:	cmp	x2, x9
  68:	b.ls	84 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x84>  // b.plast
  6c:	add	x1, x23, #0x10
  70:	mov	w3, #0x8                   	// #8
  74:	mov	x0, x23
  78:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  7c:	ldr	x27, [x23]
  80:	ldr	w8, [x23, #8]
  84:	add	x19, x27, x26, lsl #3
  88:	add	x0, x27, x8, lsl #3
  8c:	sub	x25, x0, x19
  90:	asr	x28, x25, #3
  94:	cmp	x28, x22
  98:	b.cs	198 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x198>  // b.hs, b.nlast
  9c:	ldr	w10, [x23, #12]
  a0:	add	x9, x22, x8
  a4:	cmp	x9, x10
  a8:	b.hi	290 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x290>  // b.pmore
  ac:	cmp	x26, x8
  b0:	str	w9, [x23, #8]
  b4:	b.eq	d4 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0xd4>  // b.none
  b8:	add	x8, x27, w9, uxtw #3
  bc:	mov	x22, x0
  c0:	sub	x0, x8, x28, lsl #3
  c4:	mov	x1, x19
  c8:	mov	x2, x25
  cc:	bl	0 <memcpy>
  d0:	mov	x0, x22
  d4:	cbz	x25, 114 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x114>
  d8:	cmp	x28, #0x3
  dc:	b.ls	fc <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0xfc>  // b.plast
  e0:	add	x8, x20, x28, lsl #3
  e4:	cmp	x19, x8
  e8:	b.cs	248 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x248>  // b.hs, b.nlast
  ec:	add	x8, x28, x26
  f0:	add	x8, x27, x8, lsl #3
  f4:	cmp	x8, x20
  f8:	b.ls	248 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x248>  // b.plast
  fc:	mov	x9, x19
 100:	mov	x8, x28
 104:	ldr	x10, [x20], #8
 108:	subs	x8, x8, #0x1
 10c:	str	x10, [x9], #8
 110:	b.ne	104 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x104>  // b.any
 114:	cmp	x20, x21
 118:	b.eq	228 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x228>  // b.none
 11c:	sub	x2, x21, x20
 120:	mov	x1, x20
 124:	bl	0 <memcpy>
 128:	b	228 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x228>
 12c:	ldr	w9, [x23, #12]
 130:	sub	x19, x21, x20
 134:	asr	x22, x19, #3
 138:	sub	x9, x9, x8
 13c:	cmp	x22, x9
 140:	b.ls	158 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x158>  // b.plast
 144:	add	x2, x22, x8
 148:	add	x1, x23, #0x10
 14c:	mov	w3, #0x8                   	// #8
 150:	mov	x0, x23
 154:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 158:	cmp	x20, x21
 15c:	b.eq	178 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x178>  // b.none
 160:	ldr	x8, [x23]
 164:	ldr	w9, [x23, #8]
 168:	mov	x1, x20
 16c:	mov	x2, x19
 170:	add	x0, x8, x9, lsl #3
 174:	bl	0 <memcpy>
 178:	ldp	w8, w9, [x23, #8]
 17c:	add	x8, x22, x8
 180:	cmp	x8, x9
 184:	b.hi	290 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x290>  // b.pmore
 188:	ldr	x9, [x23]
 18c:	str	w8, [x23, #8]
 190:	add	x19, x9, x26, lsl #3
 194:	b	228 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x228>
 198:	ldr	w9, [x23, #12]
 19c:	sub	x9, x9, x8
 1a0:	cmp	x22, x9
 1a4:	b.ls	1c4 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x1c4>  // b.plast
 1a8:	add	x2, x22, x8
 1ac:	add	x1, x23, #0x10
 1b0:	mov	w3, #0x8                   	// #8
 1b4:	mov	x21, x0
 1b8:	mov	x0, x23
 1bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 1c0:	mov	x0, x21
 1c4:	sub	x21, x0, x22, lsl #3
 1c8:	cbz	x24, 1ec <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x1ec>
 1cc:	ldr	x8, [x23]
 1d0:	ldr	w9, [x23, #8]
 1d4:	mov	x25, x0
 1d8:	mov	x1, x21
 1dc:	mov	x2, x24
 1e0:	add	x0, x8, x9, lsl #3
 1e4:	bl	0 <memmove>
 1e8:	mov	x0, x25
 1ec:	ldp	w8, w9, [x23, #8]
 1f0:	add	x8, x22, x8
 1f4:	cmp	x8, x9
 1f8:	b.hi	290 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x290>  // b.pmore
 1fc:	subs	x2, x21, x19
 200:	str	w8, [x23, #8]
 204:	b.eq	214 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x214>  // b.none
 208:	sub	x0, x0, x2
 20c:	mov	x1, x19
 210:	bl	0 <memmove>
 214:	cbz	x24, 228 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x228>
 218:	mov	x0, x19
 21c:	mov	x1, x20
 220:	mov	x2, x24
 224:	bl	0 <memmove>
 228:	mov	x0, x19
 22c:	ldp	x20, x19, [sp, #80]
 230:	ldp	x22, x21, [sp, #64]
 234:	ldp	x24, x23, [sp, #48]
 238:	ldp	x26, x25, [sp, #32]
 23c:	ldp	x28, x27, [sp, #16]
 240:	ldp	x29, x30, [sp], #96
 244:	ret
 248:	and	x10, x28, #0xfffffffffffffffc
 24c:	add	x12, x27, x26, lsl #3
 250:	lsl	x13, x10, #3
 254:	and	x8, x28, #0x3
 258:	add	x11, x20, #0x10
 25c:	add	x9, x19, x13
 260:	add	x20, x20, x13
 264:	add	x12, x12, #0x10
 268:	mov	x13, x10
 26c:	ldp	q0, q1, [x11, #-16]
 270:	add	x11, x11, #0x20
 274:	subs	x13, x13, #0x4
 278:	stp	q0, q1, [x12, #-16]
 27c:	add	x12, x12, #0x20
 280:	b.ne	26c <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x26c>  // b.any
 284:	cmp	x28, x10
 288:	b.ne	104 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x104>  // b.any
 28c:	b	114 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x114>
 290:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_>
 294:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_>
 298:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_>
 29c:	add	x0, x0, #0x0
 2a0:	add	x1, x1, #0x0
 2a4:	add	x3, x3, #0x0
 2a8:	mov	w2, #0x43                  	// #67
 2ac:	bl	0 <__assert_fail>
 2b0:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_>
 2b4:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_>
 2b8:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_>
 2bc:	add	x0, x0, #0x0
 2c0:	add	x1, x1, #0x0
 2c4:	add	x3, x3, #0x0
 2c8:	mov	w2, #0x24e                 	// #590
 2cc:	bl	0 <__assert_fail>
 2d0:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_>
 2d4:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_>
 2d8:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_>
 2dc:	add	x0, x0, #0x0
 2e0:	add	x1, x1, #0x0
 2e4:	add	x3, x3, #0x0
 2e8:	mov	w2, #0x24f                 	// #591
 2ec:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E:

0000000000000000 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 3c <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x3c>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	ldr	x1, [x20, #24]
  20:	mov	x0, x19
  24:	bl	0 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>
  28:	ldr	x21, [x20, #16]
  2c:	mov	x0, x20
  30:	bl	0 <_ZdlPv>
  34:	mov	x20, x21
  38:	cbnz	x21, 1c <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x1c>
  3c:	ldp	x20, x19, [sp, #32]
  40:	ldr	x21, [sp, #16]
  44:	ldp	x29, x30, [sp], #48
  48:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Disassembly of section .text._ZN4llvm14ShadowResolverD0Ev:

0000000000000000 <_ZN4llvm14ShadowResolverD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm14ShadowResolverD0Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #40]
  18:	ldr	x8, [x8]
  1c:	add	x8, x8, #0x10
  20:	str	x8, [x19]
  24:	bl	0 <_ZdlPv>
  28:	mov	x0, x19
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm14ShadowResolver7resolveEPNS_4InitE:

0000000000000000 <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #56]
   c:	cbz	w9, 70 <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE+0x70>
  10:	orr	x8, x1, #0x8
  14:	cmn	x8, #0x8
  18:	b.eq	84 <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE+0x84>  // b.none
  1c:	ldr	x8, [x0, #40]
  20:	ubfx	x10, x1, #4, #28
  24:	eor	w10, w10, w1, lsr #9
  28:	sub	w9, w9, #0x1
  2c:	and	w10, w9, w10
  30:	ldr	x11, [x8, w10, uxtw #3]
  34:	cmp	x11, x1
  38:	b.ne	48 <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE+0x48>  // b.any
  3c:	mov	x0, xzr
  40:	ldp	x29, x30, [sp], #16
  44:	ret
  48:	mov	w12, #0x1                   	// #1
  4c:	cmn	x11, #0x8
  50:	b.eq	70 <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE+0x70>  // b.none
  54:	add	w10, w10, w12
  58:	and	w10, w10, w9
  5c:	ldr	x11, [x8, w10, uxtw #3]
  60:	add	w12, w12, #0x1
  64:	cmp	x11, x1
  68:	b.eq	3c <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE+0x3c>  // b.none
  6c:	b	4c <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE+0x4c>
  70:	ldr	x0, [x0, #24]
  74:	ldr	x8, [x0]
  78:	ldr	x2, [x8, #16]
  7c:	ldp	x29, x30, [sp], #16
  80:	br	x2
  84:	adrp	x0, 0 <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE>
  88:	adrp	x1, 0 <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE>
  8c:	adrp	x3, 0 <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE>
  90:	add	x0, x0, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0x252                 	// #594
  a0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ResolverD2Ev:

0000000000000000 <_ZN4llvm8ResolverD2Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w9, [x0, #24]
  14:	mov	x21, x1
  18:	mov	x19, x0
  1c:	mov	x20, x8
  20:	cbz	w9, 60 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x60>
  24:	ldr	x10, [x21]
  28:	orr	x8, x10, #0x8
  2c:	cmn	x8, #0x8
  30:	b.eq	f8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0xf8>  // b.none
  34:	ldr	x8, [x19, #8]
  38:	ubfx	x11, x10, #4, #28
  3c:	eor	w12, w11, w10, lsr #9
  40:	sub	w11, w9, #0x1
  44:	and	w12, w12, w11
  48:	add	x0, x8, w12, uxtw #3
  4c:	ldr	x14, [x0]
  50:	cmp	x14, x10
  54:	b.ne	ac <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0xac>  // b.any
  58:	mov	w10, wzr
  5c:	b	88 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x88>
  60:	mov	x3, xzr
  64:	mov	x0, x19
  68:	mov	x1, x21
  6c:	mov	x2, x21
  70:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_>
  74:	ldr	x8, [x21]
  78:	mov	w10, #0x1                   	// #1
  7c:	str	x8, [x0]
  80:	ldr	x8, [x19, #8]
  84:	ldr	w9, [x19, #24]
  88:	add	x8, x8, w9, uxtw #3
  8c:	ldr	x9, [x19]
  90:	stp	x0, x8, [x20, #16]
  94:	strb	w10, [x20, #32]
  98:	ldr	x21, [sp, #16]
  9c:	stp	x19, x9, [x20]
  a0:	ldp	x20, x19, [sp, #32]
  a4:	ldp	x29, x30, [sp], #48
  a8:	ret
  ac:	mov	x13, xzr
  b0:	mov	w16, #0x1                   	// #1
  b4:	mov	x15, #0xfffffffffffffff0    	// #-16
  b8:	cmn	x14, #0x8
  bc:	b.eq	ec <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0xec>  // b.none
  c0:	cmp	x13, #0x0
  c4:	add	w12, w12, w16
  c8:	ccmp	x14, x15, #0x0, eq  // eq = none
  cc:	and	w12, w12, w11
  d0:	csel	x13, x13, x0, ne  // ne = any
  d4:	add	x0, x8, w12, uxtw #3
  d8:	ldr	x14, [x0]
  dc:	add	w16, w16, #0x1
  e0:	cmp	x14, x10
  e4:	b.eq	58 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x58>  // b.none
  e8:	b	b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0xb8>
  ec:	cmp	x13, #0x0
  f0:	csel	x3, x0, x13, eq  // eq = none
  f4:	b	64 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x64>
  f8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_>
  fc:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_>
 100:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0x252                 	// #594
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	114 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x114>  // b.plast
  54:	cbz	x3, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x1a4>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldr	x8, [x3]
  68:	cmn	x8, #0x8
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x1a4>
  a0:	ldr	x8, [x20]
  a4:	orr	x9, x8, #0x8
  a8:	cmn	x9, #0x8
  ac:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x1c4>  // b.none
  b0:	ldr	x9, [x19, #8]
  b4:	ubfx	x11, x8, #4, #28
  b8:	eor	w11, w11, w8, lsr #9
  bc:	sub	w10, w10, #0x1
  c0:	and	w11, w11, w10
  c4:	add	x3, x9, w11, uxtw #3
  c8:	ldr	x13, [x3]
  cc:	cmp	x13, x8
  d0:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x54>  // b.none
  d4:	mov	x12, xzr
  d8:	mov	w15, #0x1                   	// #1
  dc:	mov	x14, #0xfffffffffffffff0    	// #-16
  e0:	cmn	x13, #0x8
  e4:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x198>  // b.none
  e8:	cmp	x12, #0x0
  ec:	add	w11, w11, w15
  f0:	ccmp	x13, x14, #0x0, eq  // eq = none
  f4:	and	w11, w11, w10
  f8:	csel	x12, x12, x3, ne  // ne = any
  fc:	add	x3, x9, w11, uxtw #3
 100:	ldr	x13, [x3]
 104:	add	w15, w15, #0x1
 108:	cmp	x13, x8
 10c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x54>  // b.none
 110:	b	e0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0xe0>
 114:	mov	x0, x19
 118:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
 11c:	ldr	w10, [x19, #24]
 120:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x1a4>
 124:	ldr	x8, [x20]
 128:	orr	x9, x8, #0x8
 12c:	cmn	x9, #0x8
 130:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x1c4>  // b.none
 134:	ldr	x9, [x19, #8]
 138:	ubfx	x11, x8, #4, #28
 13c:	eor	w11, w11, w8, lsr #9
 140:	sub	w10, w10, #0x1
 144:	and	w11, w11, w10
 148:	add	x3, x9, w11, uxtw #3
 14c:	ldr	x13, [x3]
 150:	cmp	x13, x8
 154:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x54>  // b.none
 158:	mov	x12, xzr
 15c:	mov	w15, #0x1                   	// #1
 160:	mov	x14, #0xfffffffffffffff0    	// #-16
 164:	cmn	x13, #0x8
 168:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x198>  // b.none
 16c:	cmp	x12, #0x0
 170:	add	w11, w11, w15
 174:	ccmp	x13, x14, #0x0, eq  // eq = none
 178:	and	w11, w11, w10
 17c:	csel	x12, x12, x3, ne  // ne = any
 180:	add	x3, x9, w11, uxtw #3
 184:	ldr	x13, [x3]
 188:	add	w15, w15, #0x1
 18c:	cmp	x13, x8
 190:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x54>  // b.none
 194:	b	164 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x164>
 198:	cmp	x12, #0x0
 19c:	csel	x3, x3, x12, eq  // eq = none
 1a0:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x54>
 1a4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
 1a8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
 1ac:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
 1b0:	add	x0, x0, #0x0
 1b4:	add	x1, x1, #0x0
 1b8:	add	x3, x3, #0x0
 1bc:	mov	w2, #0x22f                 	// #559
 1c0:	bl	0 <__assert_fail>
 1c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
 1c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
 1cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
 1d0:	add	x0, x0, #0x0
 1d4:	add	x1, x1, #0x0
 1d8:	add	x3, x3, #0x0
 1dc:	mov	w2, #0x252                 	// #594
 1e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x19, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #3
  54:	bl	0 <_Znwm>
  58:	str	x0, [x19, #8]
  5c:	cbz	x20, 84 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x84>
  60:	add	x2, x20, x21, lsl #3
  64:	mov	x0, x19
  68:	mov	x1, x20
  6c:	bl	0 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
  70:	mov	x0, x20
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	ldr	w8, [x19, #24]
  88:	str	xzr, [x19, #16]
  8c:	sub	w9, w8, #0x1
  90:	tst	w8, w9
  94:	b.ne	110 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x110>  // b.any
  98:	cbz	w8, 100 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x100>
  9c:	lsl	x8, x8, #3
  a0:	sub	x9, x8, #0x8
  a4:	cmp	x9, #0x18
  a8:	b.cs	b4 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0xb4>  // b.hs, b.nlast
  ac:	mov	x9, x0
  b0:	b	ec <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0xec>
  b4:	lsr	x9, x9, #3
  b8:	add	x11, x9, #0x1
  bc:	mov	x13, #0xfffffffffffffff8    	// #-8
  c0:	and	x12, x11, #0x3ffffffffffffffc
  c4:	add	x10, x0, #0x10
  c8:	add	x9, x0, x12, lsl #3
  cc:	dup	v0.2d, x13
  d0:	mov	x13, x12
  d4:	stp	q0, q0, [x10, #-16]
  d8:	subs	x13, x13, #0x4
  dc:	add	x10, x10, #0x20
  e0:	b.ne	d4 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0xd4>  // b.any
  e4:	cmp	x11, x12
  e8:	b.eq	100 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x100>  // b.none
  ec:	add	x8, x0, x8
  f0:	mov	x10, #0xfffffffffffffff8    	// #-8
  f4:	str	x10, [x9], #8
  f8:	cmp	x8, x9
  fc:	b.ne	f4 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0xf4>  // b.any
 100:	ldp	x20, x19, [sp, #32]
 104:	ldr	x21, [sp, #16]
 108:	ldp	x29, x30, [sp], #48
 10c:	ret
 110:	adrp	x0, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 114:	adrp	x1, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 118:	adrp	x3, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 11c:	add	x0, x0, #0x0
 120:	add	x1, x1, #0x0
 124:	add	x3, x3, #0x0
 128:	mov	w2, #0x15c                 	// #348
 12c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w9, w8, #0x1
  14:	tst	w8, w9
  18:	b.ne	184 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x184>  // b.any
  1c:	cbz	w8, 84 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x84>
  20:	ldr	x9, [x0, #8]
  24:	lsl	x10, x8, #3
  28:	sub	x11, x10, #0x8
  2c:	cmp	x11, #0x18
  30:	mov	x10, x9
  34:	b.cc	70 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x70>  // b.lo, b.ul, b.last
  38:	lsr	x10, x11, #3
  3c:	add	x12, x10, #0x1
  40:	mov	x14, #0xfffffffffffffff8    	// #-8
  44:	and	x13, x12, #0x3ffffffffffffffc
  48:	add	x11, x9, #0x10
  4c:	add	x10, x9, x13, lsl #3
  50:	dup	v0.2d, x14
  54:	mov	x14, x13
  58:	stp	q0, q0, [x11, #-16]
  5c:	subs	x14, x14, #0x4
  60:	add	x11, x11, #0x20
  64:	b.ne	58 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x58>  // b.any
  68:	cmp	x12, x13
  6c:	b.eq	84 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x84>  // b.none
  70:	add	x9, x9, x8, lsl #3
  74:	mov	x11, #0xfffffffffffffff8    	// #-8
  78:	str	x11, [x10], #8
  7c:	cmp	x9, x10
  80:	b.ne	78 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x78>  // b.any
  84:	cmp	x1, x2
  88:	b.eq	13c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x13c>  // b.none
  8c:	mov	w9, wzr
  90:	sub	w10, w8, #0x1
  94:	mov	x11, #0xfffffffffffffff0    	// #-16
  98:	b	bc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0xbc>
  9c:	cmp	x16, #0x0
  a0:	csel	x13, x14, x16, eq  // eq = none
  a4:	add	w9, w9, #0x1
  a8:	str	x12, [x13]
  ac:	str	w9, [x0, #16]
  b0:	add	x1, x1, #0x8
  b4:	cmp	x1, x2
  b8:	b.eq	13c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x13c>  // b.none
  bc:	ldr	x12, [x1]
  c0:	orr	x13, x12, #0x8
  c4:	cmn	x13, #0x8
  c8:	b.eq	b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0xb0>  // b.none
  cc:	cbz	w8, 134 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x134>
  d0:	cmn	x12, #0x8
  d4:	b.eq	164 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x164>  // b.none
  d8:	ldr	x13, [x0, #8]
  dc:	ubfx	x14, x12, #4, #28
  e0:	eor	w14, w14, w12, lsr #9
  e4:	and	w15, w14, w10
  e8:	add	x14, x13, w15, uxtw #3
  ec:	ldr	x17, [x14]
  f0:	cmp	x17, x12
  f4:	b.eq	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x144>  // b.none
  f8:	mov	x16, xzr
  fc:	mov	w18, #0x1                   	// #1
 100:	cmn	x17, #0x8
 104:	b.eq	9c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x9c>  // b.none
 108:	cmp	x16, #0x0
 10c:	add	w15, w15, w18
 110:	ccmp	x17, x11, #0x0, eq  // eq = none
 114:	and	w15, w15, w10
 118:	csel	x16, x16, x14, ne  // ne = any
 11c:	add	x14, x13, w15, uxtw #3
 120:	ldr	x17, [x14]
 124:	add	w18, w18, #0x1
 128:	cmp	x17, x12
 12c:	b.ne	100 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x100>  // b.any
 130:	b	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x144>
 134:	mov	x13, xzr
 138:	b	a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0xa4>
 13c:	ldp	x29, x30, [sp], #16
 140:	ret
 144:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 148:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 14c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 150:	add	x0, x0, #0x0
 154:	add	x1, x1, #0x0
 158:	add	x3, x3, #0x0
 15c:	mov	w2, #0x17a                 	// #378
 160:	bl	0 <__assert_fail>
 164:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 168:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 16c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 170:	add	x0, x0, #0x0
 174:	add	x1, x1, #0x0
 178:	add	x3, x3, #0x0
 17c:	mov	w2, #0x252                 	// #594
 180:	bl	0 <__assert_fail>
 184:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 188:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 18c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 190:	add	x0, x0, #0x0
 194:	add	x1, x1, #0x0
 198:	add	x3, x3, #0x0
 19c:	mov	w2, #0x15c                 	// #348
 1a0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	add	x8, x21, x21, lsl #1
  6c:	lsl	x0, x8, #3
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0xb8>
  7c:	cbz	x21, 98 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0x98>
  80:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm>
  84:	add	x0, x0, #0x0
  88:	mov	w1, #0x1                   	// #1
  8c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  90:	mov	x20, xzr
  94:	b	b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0xb8>
  98:	mov	w0, #0x1                   	// #1
  9c:	bl	0 <malloc>
  a0:	mov	x20, x0
  a4:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0xb8>
  a8:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm>
  ac:	add	x0, x0, #0x0
  b0:	mov	w1, #0x1                   	// #1
  b4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b8:	ldr	w8, [x19, #8]
  bc:	ldr	x0, [x19]
  c0:	cbz	w8, ec <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0xec>
  c4:	add	x8, x8, x8, lsl #1
  c8:	lsl	x8, x8, #3
  cc:	mov	x9, x20
  d0:	ldr	x10, [x0, #16]
  d4:	ldr	q0, [x0], #24
  d8:	subs	x8, x8, #0x18
  dc:	str	x10, [x9, #16]
  e0:	str	q0, [x9], #24
  e4:	b.ne	d0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0xd0>  // b.any
  e8:	ldr	x0, [x19]
  ec:	add	x8, x19, #0x10
  f0:	cmp	x0, x8
  f4:	b.eq	fc <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0xfc>  // b.none
  f8:	bl	0 <free>
  fc:	str	x20, [x19]
 100:	str	w21, [x19, #12]
 104:	ldp	x20, x19, [sp, #32]
 108:	ldr	x21, [sp, #16]
 10c:	ldp	x29, x30, [sp], #48
 110:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x19, x0
  1c:	mov	w0, #0x48                  	// #72
  20:	mov	x22, x1
  24:	bl	0 <_Znwm>
  28:	ldr	x23, [x22]
  2c:	mov	x20, x0
  30:	add	x21, x0, #0x20
  34:	cbz	x23, 88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x88>
  38:	ldr	x24, [x22, #8]
  3c:	add	x25, x20, #0x30
  40:	str	x25, [x20, #32]
  44:	cmp	x24, #0x10
  48:	str	x24, [x29, #24]
  4c:	b.cc	70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x70>  // b.lo, b.ul, b.last
  50:	add	x1, x29, #0x18
  54:	mov	x0, x21
  58:	mov	x2, xzr
  5c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  60:	ldr	x8, [x29, #24]
  64:	str	x0, [x21]
  68:	str	x8, [x25]
  6c:	mov	x25, x0
  70:	cbz	x24, a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xa8>
  74:	cmp	x24, #0x1
  78:	b.ne	98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x98>  // b.any
  7c:	ldrb	w8, [x23]
  80:	strb	w8, [x25]
  84:	b	a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xa8>
  88:	mov	x8, x20
  8c:	strb	wzr, [x8, #48]!
  90:	stp	x8, xzr, [x8, #-16]
  94:	b	b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xb8>
  98:	mov	x0, x25
  9c:	mov	x1, x23
  a0:	mov	x2, x24
  a4:	bl	0 <memcpy>
  a8:	ldr	x8, [x29, #24]
  ac:	ldr	x9, [x20, #32]
  b0:	str	x8, [x20, #40]
  b4:	strb	wzr, [x9, x8]
  b8:	ldr	x8, [x22, #16]
  bc:	mov	x0, x19
  c0:	mov	x1, x21
  c4:	str	xzr, [x22, #16]
  c8:	str	x8, [x20, #64]
  cc:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_>
  d0:	mov	x23, x0
  d4:	cbz	x1, e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xe8>
  d8:	mov	x22, x1
  dc:	cbz	x23, 104 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x104>
  e0:	mov	w0, #0x1                   	// #1
  e4:	b	154 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x154>
  e8:	mov	x0, x19
  ec:	mov	x1, x21
  f0:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_>
  f4:	mov	x0, x20
  f8:	bl	0 <_ZdlPv>
  fc:	mov	x1, xzr
 100:	b	178 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x178>
 104:	add	x8, x19, #0x8
 108:	cmp	x8, x22
 10c:	b.eq	e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xe0>  // b.none
 110:	ldr	x8, [x20, #40]
 114:	ldr	x9, [x22, #40]
 118:	subs	x23, x8, x9
 11c:	csel	x2, x9, x8, hi  // hi = pmore
 120:	cbz	x2, 134 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x134>
 124:	ldr	x1, [x22, #32]
 128:	ldr	x0, [x21]
 12c:	bl	0 <memcmp>
 130:	cbnz	w0, 150 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x150>
 134:	mov	w0, #0x7fffffff            	// #2147483647
 138:	cmp	x23, x0
 13c:	b.gt	150 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x150>
 140:	mov	x8, #0xffffffff80000000    	// #-2147483648
 144:	cmp	x23, x8
 148:	mov	w8, #0x80000000            	// #-2147483648
 14c:	csel	w0, w23, w8, gt
 150:	lsr	w0, w0, #31
 154:	add	x3, x19, #0x8
 158:	mov	x1, x20
 15c:	mov	x2, x22
 160:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
 164:	ldr	x8, [x19, #40]
 168:	mov	w1, #0x1                   	// #1
 16c:	mov	x23, x20
 170:	add	x8, x8, #0x1
 174:	str	x8, [x19, #40]
 178:	mov	x0, x23
 17c:	ldp	x20, x19, [sp, #64]
 180:	ldp	x22, x21, [sp, #48]
 184:	ldp	x24, x23, [sp, #32]
 188:	ldr	x25, [sp, #16]
 18c:	ldp	x29, x30, [sp], #80
 190:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x9, [x0, #16]
  1c:	mov	x21, x0
  20:	mov	x20, x1
  24:	cbz	x9, a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0xa0>
  28:	ldp	x22, x23, [x20]
  2c:	mov	w24, #0x80000000            	// #-2147483648
  30:	mov	x25, #0xffffffff80000000    	// #-2147483648
  34:	b	4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x4c>
  38:	tbnz	w0, #31, 84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x84>
  3c:	mov	w8, wzr
  40:	add	x9, x19, #0x18
  44:	ldr	x9, [x9]
  48:	cbz	x9, 94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x94>
  4c:	ldr	x8, [x9, #40]
  50:	mov	x19, x9
  54:	subs	x26, x23, x8
  58:	csel	x2, x8, x23, hi  // hi = pmore
  5c:	cbz	x2, 70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x70>
  60:	ldr	x1, [x19, #32]
  64:	mov	x0, x22
  68:	bl	0 <memcmp>
  6c:	cbnz	w0, 38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x38>
  70:	cmp	x26, x24
  74:	b.ge	3c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x3c>  // b.tcont
  78:	cmp	x26, x25
  7c:	csel	w0, w26, w24, gt
  80:	b	38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x38>
  84:	add	x9, x19, #0x10
  88:	mov	w8, #0x1                   	// #1
  8c:	ldr	x9, [x9]
  90:	cbnz	x9, 4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x4c>
  94:	mov	x22, x19
  98:	cbnz	w8, a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0xa4>
  9c:	b	bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0xbc>
  a0:	add	x19, x21, #0x8
  a4:	ldr	x8, [x21, #24]
  a8:	cmp	x8, x19
  ac:	b.eq	110 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x110>  // b.none
  b0:	mov	x0, x19
  b4:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  b8:	mov	x22, x0
  bc:	ldr	x8, [x22, #40]
  c0:	ldr	x9, [x20, #8]
  c4:	subs	x21, x8, x9
  c8:	csel	x2, x9, x8, hi  // hi = pmore
  cc:	cbz	x2, e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0xe8>
  d0:	ldr	x1, [x20]
  d4:	ldr	x0, [x22, #32]
  d8:	bl	0 <memcmp>
  dc:	cbz	w0, e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0xe8>
  e0:	tbz	w0, #31, 108 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x108>
  e4:	b	110 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x110>
  e8:	mov	w8, #0x7fffffff            	// #2147483647
  ec:	cmp	x21, x8
  f0:	b.gt	108 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x108>
  f4:	mov	x8, #0xffffffff80000000    	// #-2147483648
  f8:	cmp	x21, x8
  fc:	mov	w8, #0x80000000            	// #-2147483648
 100:	csel	w0, w21, w8, gt
 104:	tbnz	w0, #31, 110 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x110>
 108:	mov	x19, xzr
 10c:	b	114 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x114>
 110:	mov	x22, xzr
 114:	mov	x0, x22
 118:	mov	x1, x19
 11c:	ldp	x20, x19, [sp, #64]
 120:	ldp	x22, x21, [sp, #48]
 124:	ldp	x24, x23, [sp, #32]
 128:	ldp	x26, x25, [sp, #16]
 12c:	ldp	x29, x30, [sp], #80
 130:	ret

Disassembly of section .text._ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_:

0000000000000000 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x20, [x1, #32]
  10:	mov	x19, x1
  14:	cbz	x20, 70 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_+0x70>
  18:	ldr	x0, [x20, #88]
  1c:	add	x8, x20, #0x68
  20:	cmp	x0, x8
  24:	b.eq	2c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_+0x2c>  // b.none
  28:	bl	0 <free>
  2c:	ldr	x0, [x20, #72]
  30:	add	x8, x20, #0x58
  34:	cmp	x0, x8
  38:	b.eq	40 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_+0x40>  // b.none
  3c:	bl	0 <free>
  40:	ldr	x0, [x20, #56]
  44:	add	x8, x20, #0x48
  48:	cmp	x0, x8
  4c:	b.eq	54 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_+0x54>  // b.none
  50:	bl	0 <free>
  54:	ldr	x0, [x20, #8]
  58:	add	x8, x20, #0x18
  5c:	cmp	x0, x8
  60:	b.eq	68 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_+0x68>  // b.none
  64:	bl	0 <free>
  68:	mov	x0, x20
  6c:	bl	0 <_ZdlPv>
  70:	ldr	x0, [x19]
  74:	add	x8, x19, #0x10
  78:	str	xzr, [x19, #32]
  7c:	cmp	x0, x8
  80:	b.eq	90 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_+0x90>  // b.none
  84:	ldp	x20, x19, [sp, #16]
  88:	ldp	x29, x30, [sp], #32
  8c:	b	0 <_ZdlPv>
  90:	ldp	x20, x19, [sp, #16]
  94:	ldp	x29, x30, [sp], #32
  98:	ret

Disassembly of section .text._ZN4llvm17RecordValResolverD0Ev:

0000000000000000 <_ZN4llvm17RecordValResolverD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm17RecordValResolver7resolveEPNS_4InitE:

0000000000000000 <_ZN4llvm17RecordValResolver7resolveEPNS_4InitE>:
   0:	ldr	x8, [x0, #24]
   4:	ldr	x9, [x8]
   8:	cmp	x9, x1
   c:	b.eq	18 <_ZN4llvm17RecordValResolver7resolveEPNS_4InitE+0x18>  // b.none
  10:	mov	x0, xzr
  14:	ret
  18:	ldr	x0, [x8, #16]
  1c:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldp	x20, x24, [x0]
  1c:	mov	x9, #0x7ffffffffffffff0    	// #9223372036854775792
  20:	sub	x8, x24, x20
  24:	cmp	x8, x9
  28:	b.eq	108 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x108>  // b.none
  2c:	asr	x9, x8, #4
  30:	cmp	x8, #0x0
  34:	csinc	x10, x9, xzr, ne  // ne = any
  38:	adds	x9, x10, x9
  3c:	lsr	x11, x9, #59
  40:	cset	w10, cs  // cs = hs, nlast
  44:	cmp	x11, #0x0
  48:	cset	w11, ne  // ne = any
  4c:	orr	w10, w10, w11
  50:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  54:	cmp	w10, #0x0
  58:	csel	x25, x8, x9, ne  // ne = any
  5c:	sub	x8, x1, x20
  60:	mov	x23, x2
  64:	mov	x19, x0
  68:	mov	x21, x1
  6c:	asr	x26, x8, #4
  70:	cbz	x25, 84 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x84>
  74:	lsl	x0, x25, #4
  78:	bl	0 <_Znwm>
  7c:	mov	x22, x0
  80:	b	88 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x88>
  84:	mov	x22, xzr
  88:	ldr	q0, [x23]
  8c:	cmp	x20, x21
  90:	mov	x8, x22
  94:	str	q0, [x22, x26, lsl #4]
  98:	b.eq	b8 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xb8>  // b.none
  9c:	mov	x8, x22
  a0:	mov	x9, x20
  a4:	ldr	q0, [x9], #16
  a8:	cmp	x21, x9
  ac:	str	q0, [x8]
  b0:	add	x8, x8, #0x10
  b4:	b.ne	a4 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xa4>  // b.any
  b8:	cmp	x24, x21
  bc:	add	x23, x8, #0x10
  c0:	b.eq	d8 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xd8>  // b.none
  c4:	ldr	q0, [x21], #16
  c8:	cmp	x24, x21
  cc:	str	q0, [x23]
  d0:	add	x23, x23, #0x10
  d4:	b.ne	c4 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xc4>  // b.any
  d8:	cbz	x20, e4 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xe4>
  dc:	mov	x0, x20
  e0:	bl	0 <_ZdlPv>
  e4:	add	x8, x22, x25, lsl #4
  e8:	stp	x22, x23, [x19]
  ec:	str	x8, [x19, #16]
  f0:	ldp	x20, x19, [sp, #64]
  f4:	ldp	x22, x21, [sp, #48]
  f8:	ldp	x24, x23, [sp, #32]
  fc:	ldp	x26, x25, [sp, #16]
 100:	ldp	x29, x30, [sp], #80
 104:	ret
 108:	adrp	x0, 0 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 10c:	add	x0, x0, #0x0
 110:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	118 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x118>  // b.plast
  54:	cbz	x3, 1ac <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x1ac>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldr	x8, [x3]
  68:	cmn	x8, #0x8
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 1ac <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x1ac>
  a0:	ldr	x8, [x20]
  a4:	orr	x9, x8, #0x8
  a8:	cmn	x9, #0x8
  ac:	b.eq	1cc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x1cc>  // b.none
  b0:	ldr	x9, [x19, #8]
  b4:	ubfx	x11, x8, #4, #28
  b8:	eor	w11, w11, w8, lsr #9
  bc:	sub	w10, w10, #0x1
  c0:	and	w12, w11, w10
  c4:	mov	w11, #0x18                  	// #24
  c8:	umaddl	x3, w12, w11, x9
  cc:	ldr	x14, [x3]
  d0:	cmp	x14, x8
  d4:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x54>  // b.none
  d8:	mov	x13, xzr
  dc:	mov	w16, #0x1                   	// #1
  e0:	mov	x15, #0xfffffffffffffff0    	// #-16
  e4:	cmn	x14, #0x8
  e8:	b.eq	1a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x1a0>  // b.none
  ec:	cmp	x13, #0x0
  f0:	add	w12, w12, w16
  f4:	ccmp	x14, x15, #0x0, eq  // eq = none
  f8:	and	w12, w12, w10
  fc:	csel	x13, x13, x3, ne  // ne = any
 100:	umaddl	x3, w12, w11, x9
 104:	ldr	x14, [x3]
 108:	add	w16, w16, #0x1
 10c:	cmp	x14, x8
 110:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x54>  // b.none
 114:	b	e4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0xe4>
 118:	mov	x0, x19
 11c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_>
 120:	ldr	w10, [x19, #24]
 124:	cbz	w10, 1ac <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x1ac>
 128:	ldr	x8, [x20]
 12c:	orr	x9, x8, #0x8
 130:	cmn	x9, #0x8
 134:	b.eq	1cc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x1cc>  // b.none
 138:	ldr	x9, [x19, #8]
 13c:	ubfx	x11, x8, #4, #28
 140:	eor	w11, w11, w8, lsr #9
 144:	sub	w10, w10, #0x1
 148:	and	w12, w11, w10
 14c:	mov	w11, #0x18                  	// #24
 150:	umaddl	x3, w12, w11, x9
 154:	ldr	x14, [x3]
 158:	cmp	x14, x8
 15c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x54>  // b.none
 160:	mov	x13, xzr
 164:	mov	w16, #0x1                   	// #1
 168:	mov	x15, #0xfffffffffffffff0    	// #-16
 16c:	cmn	x14, #0x8
 170:	b.eq	1a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x1a0>  // b.none
 174:	cmp	x13, #0x0
 178:	add	w12, w12, w16
 17c:	ccmp	x14, x15, #0x0, eq  // eq = none
 180:	and	w12, w12, w10
 184:	csel	x13, x13, x3, ne  // ne = any
 188:	umaddl	x3, w12, w11, x9
 18c:	ldr	x14, [x3]
 190:	add	w16, w16, #0x1
 194:	cmp	x14, x8
 198:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x54>  // b.none
 19c:	b	16c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x16c>
 1a0:	cmp	x13, #0x0
 1a4:	csel	x3, x3, x13, eq  // eq = none
 1a8:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x54>
 1ac:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_>
 1b0:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_>
 1b4:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_>
 1b8:	add	x0, x0, #0x0
 1bc:	add	x1, x1, #0x0
 1c0:	add	x3, x3, #0x0
 1c4:	mov	w2, #0x22f                 	// #559
 1c8:	bl	0 <__assert_fail>
 1cc:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_>
 1d0:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_>
 1d4:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_>
 1d8:	add	x0, x0, #0x0
 1dc:	add	x1, x1, #0x0
 1e0:	add	x3, x3, #0x0
 1e4:	mov	w2, #0x252                 	// #594
 1e8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	w9, #0x18                  	// #24
  4c:	mov	x19, x0
  50:	str	w8, [x0, #24]
  54:	umull	x0, w8, w9
  58:	bl	0 <_Znwm>
  5c:	str	x0, [x19, #8]
  60:	cbz	x20, 8c <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x8c>
  64:	mov	w8, #0x18                  	// #24
  68:	madd	x2, x21, x8, x20
  6c:	mov	x0, x19
  70:	mov	x1, x20
  74:	bl	0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
  78:	mov	x0, x20
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldr	x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	b	0 <_ZdlPv>
  8c:	ldr	w8, [x19, #24]
  90:	str	xzr, [x19, #16]
  94:	sub	w9, w8, #0x1
  98:	tst	w8, w9
  9c:	b.ne	128 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x128>  // b.any
  a0:	cbz	w8, 118 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x118>
  a4:	add	x8, x8, x8, lsl #1
  a8:	lsl	x8, x8, #3
  ac:	sub	x10, x8, #0x18
  b0:	cmp	x10, #0x18
  b4:	mov	x9, x0
  b8:	b.cc	104 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x104>  // b.lo, b.ul, b.last
  bc:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  c0:	movk	x9, #0xaaab
  c4:	umulh	x9, x10, x9
  c8:	lsr	x9, x9, #4
  cc:	add	x10, x9, #0x1
  d0:	mov	w12, #0x18                  	// #24
  d4:	and	x11, x10, #0x1ffffffffffffffe
  d8:	madd	x9, x11, x12, x0
  dc:	mov	x12, #0xfffffffffffffff8    	// #-8
  e0:	mov	x13, x11
  e4:	mov	x14, x0
  e8:	str	x12, [x14]
  ec:	str	x12, [x14, #24]
  f0:	subs	x13, x13, #0x2
  f4:	add	x14, x14, #0x30
  f8:	b.ne	e8 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0xe8>  // b.any
  fc:	cmp	x10, x11
 100:	b.eq	118 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x118>  // b.none
 104:	add	x8, x0, x8
 108:	mov	x10, #0xfffffffffffffff8    	// #-8
 10c:	str	x10, [x9], #24
 110:	cmp	x8, x9
 114:	b.ne	10c <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x10c>  // b.any
 118:	ldp	x20, x19, [sp, #32]
 11c:	ldr	x21, [sp, #16]
 120:	ldp	x29, x30, [sp], #48
 124:	ret
 128:	adrp	x0, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
 12c:	adrp	x1, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
 130:	adrp	x3, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
 134:	add	x0, x0, #0x0
 138:	add	x1, x1, #0x0
 13c:	add	x3, x3, #0x0
 140:	mov	w2, #0x15c                 	// #348
 144:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w9, w8, #0x1
  14:	tst	w8, w9
  18:	b.ne	1b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x1b0>  // b.any
  1c:	cbz	w8, a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0xa0>
  20:	ldr	x9, [x0, #8]
  24:	mov	w10, #0x18                  	// #24
  28:	mul	x10, x8, x10
  2c:	sub	x10, x10, #0x18
  30:	cmp	x10, #0x18
  34:	b.cs	40 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x40>  // b.hs, b.nlast
  38:	mov	x10, x9
  3c:	b	88 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x88>
  40:	mov	x11, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  44:	movk	x11, #0xaaab
  48:	umulh	x10, x10, x11
  4c:	lsr	x10, x10, #4
  50:	add	x11, x10, #0x1
  54:	mov	w13, #0x18                  	// #24
  58:	and	x12, x11, #0x1ffffffffffffffe
  5c:	madd	x10, x12, x13, x9
  60:	mov	x13, #0xfffffffffffffff8    	// #-8
  64:	mov	x14, x12
  68:	mov	x15, x9
  6c:	str	x13, [x15]
  70:	str	x13, [x15, #24]
  74:	subs	x14, x14, #0x2
  78:	add	x15, x15, #0x30
  7c:	b.ne	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x6c>  // b.any
  80:	cmp	x11, x12
  84:	b.eq	a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0xa0>  // b.none
  88:	mov	w11, #0x18                  	// #24
  8c:	madd	x8, x8, x11, x9
  90:	mov	x9, #0xfffffffffffffff8    	// #-8
  94:	str	x9, [x10], #24
  98:	cmp	x8, x10
  9c:	b.ne	94 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x94>  // b.any
  a0:	cmp	x1, x2
  a4:	b.eq	168 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x168>  // b.none
  a8:	mov	w8, #0x18                  	// #24
  ac:	mov	x9, #0xfffffffffffffff0    	// #-16
  b0:	b	e0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0xe0>
  b4:	cmp	x15, #0x0
  b8:	csel	x11, x13, x15, eq  // eq = none
  bc:	str	x10, [x11]
  c0:	ldur	q0, [x1, #8]
  c4:	stur	q0, [x11, #8]
  c8:	ldr	w10, [x0, #16]
  cc:	add	w10, w10, #0x1
  d0:	str	w10, [x0, #16]
  d4:	add	x1, x1, #0x18
  d8:	cmp	x1, x2
  dc:	b.eq	168 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x168>  // b.none
  e0:	ldr	x10, [x1]
  e4:	orr	x11, x10, #0x8
  e8:	cmn	x11, #0x8
  ec:	b.eq	d4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0xd4>  // b.none
  f0:	ldr	w12, [x0, #24]
  f4:	cbz	w12, 160 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x160>
  f8:	cmn	x10, #0x8
  fc:	b.eq	190 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x190>  // b.none
 100:	ldr	x11, [x0, #8]
 104:	ubfx	x13, x10, #4, #28
 108:	eor	w13, w13, w10, lsr #9
 10c:	sub	w12, w12, #0x1
 110:	and	w14, w13, w12
 114:	umaddl	x13, w14, w8, x11
 118:	ldr	x16, [x13]
 11c:	cmp	x16, x10
 120:	b.eq	170 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x170>  // b.none
 124:	mov	x15, xzr
 128:	mov	w17, #0x1                   	// #1
 12c:	cmn	x16, #0x8
 130:	b.eq	b4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0xb4>  // b.none
 134:	cmp	x15, #0x0
 138:	add	w14, w14, w17
 13c:	ccmp	x16, x9, #0x0, eq  // eq = none
 140:	and	w14, w14, w12
 144:	csel	x15, x15, x13, ne  // ne = any
 148:	umaddl	x13, w14, w8, x11
 14c:	ldr	x16, [x13]
 150:	add	w17, w17, #0x1
 154:	cmp	x16, x10
 158:	b.ne	12c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x12c>  // b.any
 15c:	b	170 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x170>
 160:	mov	x11, xzr
 164:	b	bc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0xbc>
 168:	ldp	x29, x30, [sp], #16
 16c:	ret
 170:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>
 174:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>
 178:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>
 17c:	add	x0, x0, #0x0
 180:	add	x1, x1, #0x0
 184:	add	x3, x3, #0x0
 188:	mov	w2, #0x17a                 	// #378
 18c:	bl	0 <__assert_fail>
 190:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>
 194:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>
 198:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>
 19c:	add	x0, x0, #0x0
 1a0:	add	x1, x1, #0x0
 1a4:	add	x3, x3, #0x0
 1a8:	mov	w2, #0x252                 	// #594
 1ac:	bl	0 <__assert_fail>
 1b0:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>
 1b4:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>
 1b8:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>
 1bc:	add	x0, x0, #0x0
 1c0:	add	x1, x1, #0x0
 1c4:	add	x3, x3, #0x0
 1c8:	mov	w2, #0x15c                 	// #348
 1cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm:

0000000000000000 <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	cbz	x1, 108 <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm+0x108>
  1c:	mov	x23, x0
  20:	mov	x25, x0
  24:	ldr	x22, [x23, #8]!
  28:	ldr	x21, [x0]
  2c:	ldr	x8, [x25, #16]!
  30:	mov	x19, x1
  34:	mov	x20, x0
  38:	sub	x8, x8, x22
  3c:	cmp	x1, x8, asr #3
  40:	b.ls	9c <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm+0x9c>  // b.plast
  44:	sub	x8, x22, x21
  48:	asr	x24, x8, #3
  4c:	eor	x8, x24, #0xfffffffffffffff
  50:	cmp	x8, x19
  54:	b.cc	120 <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm+0x120>  // b.lo, b.ul, b.last
  58:	cmp	x24, x19
  5c:	csel	x8, x19, x24, cc  // cc = lo, ul, last
  60:	adds	x8, x8, x24
  64:	lsr	x10, x8, #60
  68:	cset	w9, cs  // cs = hs, nlast
  6c:	cmp	x10, #0x0
  70:	cset	w10, ne  // ne = any
  74:	orr	w9, w9, w10
  78:	cmp	w9, #0x0
  7c:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
  80:	csel	x26, x9, x8, ne  // ne = any
  84:	cbz	x26, bc <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm+0xbc>
  88:	lsl	x0, x26, #3
  8c:	bl	0 <_Znwm>
  90:	ldp	x21, x22, [x20]
  94:	mov	x23, x0
  98:	b	c0 <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm+0xc0>
  9c:	lsl	x19, x19, #3
  a0:	mov	x0, x22
  a4:	mov	w1, wzr
  a8:	mov	x2, x19
  ac:	bl	0 <memset>
  b0:	add	x8, x22, x19
  b4:	mov	x25, x23
  b8:	b	104 <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm+0x104>
  bc:	mov	x23, xzr
  c0:	add	x24, x23, x24, lsl #3
  c4:	lsl	x2, x19, #3
  c8:	mov	x0, x24
  cc:	mov	w1, wzr
  d0:	bl	0 <memset>
  d4:	sub	x2, x22, x21
  d8:	cmp	x2, #0x1
  dc:	b.lt	ec <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm+0xec>  // b.tstop
  e0:	mov	x0, x23
  e4:	mov	x1, x21
  e8:	bl	0 <memmove>
  ec:	cbz	x21, f8 <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm+0xf8>
  f0:	mov	x0, x21
  f4:	bl	0 <_ZdlPv>
  f8:	add	x8, x24, x19, lsl #3
  fc:	stp	x23, x8, [x20]
 100:	add	x8, x23, x26, lsl #3
 104:	str	x8, [x25]
 108:	ldp	x20, x19, [sp, #64]
 10c:	ldp	x22, x21, [sp, #48]
 110:	ldp	x24, x23, [sp, #32]
 114:	ldp	x26, x25, [sp, #16]
 118:	ldp	x29, x30, [sp], #80
 11c:	ret
 120:	adrp	x0, 0 <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm>
 124:	add	x0, x0, #0x0
 128:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE:

0000000000000000 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x10, [x0, #80]
  18:	ldr	x8, [x0]
  1c:	mov	w9, #0x1                   	// #1
  20:	lsl	x9, x9, x2
  24:	sub	x24, x9, #0x1
  28:	add	x12, x10, x1
  2c:	add	x10, x24, x8
  30:	neg	x23, x9
  34:	and	x10, x10, x23
  38:	sub	x10, x10, x8
  3c:	adds	x11, x10, x1
  40:	str	x12, [x0, #80]
  44:	b.cs	158 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x158>  // b.hs, b.nlast
  48:	ldr	x12, [x0, #8]
  4c:	mov	x20, x1
  50:	mov	x19, x0
  54:	sub	x12, x12, x8
  58:	cmp	x11, x12
  5c:	b.ls	f8 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0xf8>  // b.plast
  60:	add	x8, x20, x9
  64:	sub	x21, x8, #0x1
  68:	cmp	x21, #0x1, lsl #12
  6c:	b.ls	104 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x104>  // b.plast
  70:	mov	x0, x21
  74:	bl	0 <malloc>
  78:	mov	x22, x0
  7c:	cbnz	x0, 90 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x90>
  80:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
  84:	add	x0, x0, #0x0
  88:	mov	w1, #0x1                   	// #1
  8c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  90:	ldp	w8, w9, [x19, #72]
  94:	cmp	w8, w9
  98:	b.cs	144 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x144>  // b.hs, b.nlast
  9c:	ldr	x9, [x19, #64]
  a0:	add	x8, x9, w8, uxtw #4
  a4:	stp	x22, x21, [x8]
  a8:	ldp	w8, w9, [x19, #72]
  ac:	cmp	w8, w9
  b0:	b.cs	198 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x198>  // b.hs, b.nlast
  b4:	add	w9, w8, #0x1
  b8:	adds	x8, x24, x22
  bc:	str	w9, [x19, #72]
  c0:	b.cs	178 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x178>  // b.hs, b.nlast
  c4:	and	x0, x8, x23
  c8:	add	x8, x0, x20
  cc:	add	x9, x21, x22
  d0:	cmp	x8, x9
  d4:	b.ls	130 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x130>  // b.plast
  d8:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
  dc:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
  e0:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0xfb                  	// #251
  f4:	bl	0 <__assert_fail>
  f8:	add	x0, x8, x10
  fc:	add	x8, x0, x20
 100:	b	12c <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x12c>
 104:	mov	x0, x19
 108:	bl	0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 10c:	ldr	x8, [x19]
 110:	adds	x8, x24, x8
 114:	b.cs	178 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x178>  // b.hs, b.nlast
 118:	ldr	x9, [x19, #8]
 11c:	and	x0, x8, x23
 120:	add	x8, x0, x20
 124:	cmp	x8, x9
 128:	b.hi	1b8 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x1b8>  // b.pmore
 12c:	str	x8, [x19]
 130:	ldp	x20, x19, [sp, #48]
 134:	ldp	x22, x21, [sp, #32]
 138:	ldp	x24, x23, [sp, #16]
 13c:	ldp	x29, x30, [sp], #64
 140:	ret
 144:	add	x0, x19, #0x40
 148:	mov	x1, xzr
 14c:	bl	0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 150:	ldr	w8, [x19, #72]
 154:	b	9c <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x9c>
 158:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 15c:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 160:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 164:	add	x0, x0, #0x0
 168:	add	x1, x1, #0x0
 16c:	add	x3, x3, #0x0
 170:	mov	w2, #0xdc                  	// #220
 174:	bl	0 <__assert_fail>
 178:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 17c:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 180:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 184:	add	x0, x0, #0x0
 188:	add	x1, x1, #0x0
 18c:	add	x3, x3, #0x0
 190:	mov	w2, #0xbb                  	// #187
 194:	bl	0 <__assert_fail>
 198:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 19c:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1a0:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1a4:	add	x0, x0, #0x0
 1a8:	add	x1, x1, #0x0
 1ac:	add	x3, x3, #0x0
 1b0:	mov	w2, #0x43                  	// #67
 1b4:	bl	0 <__assert_fail>
 1b8:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1bc:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1c0:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1c4:	add	x0, x0, #0x0
 1c8:	add	x1, x1, #0x0
 1cc:	add	x3, x3, #0x0
 1d0:	mov	w2, #0x106                 	// #262
 1d4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv:

0000000000000000 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w22, [x0, #24]
  14:	mov	w8, #0x1e                  	// #30
  18:	mov	x19, x0
  1c:	lsr	x9, x22, #7
  20:	cmp	x9, #0x1e
  24:	csel	x8, x9, x8, cc  // cc = lo, ul, last
  28:	mov	w9, #0x1000                	// #4096
  2c:	lsl	x20, x9, x8
  30:	mov	x0, x20
  34:	bl	0 <malloc>
  38:	mov	x21, x0
  3c:	cbnz	x0, 54 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv+0x54>
  40:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>
  44:	add	x0, x0, #0x0
  48:	mov	w1, #0x1                   	// #1
  4c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  50:	ldr	w22, [x19, #24]
  54:	ldr	w8, [x19, #28]
  58:	cmp	w22, w8
  5c:	b.cs	94 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv+0x94>  // b.hs, b.nlast
  60:	ldr	x8, [x19, #16]
  64:	str	x21, [x8, w22, uxtw #3]
  68:	ldp	w8, w9, [x19, #24]
  6c:	cmp	w8, w9
  70:	b.cs	b0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv+0xb0>  // b.hs, b.nlast
  74:	add	w8, w8, #0x1
  78:	add	x9, x21, x20
  7c:	str	w8, [x19, #24]
  80:	stp	x21, x9, [x19]
  84:	ldp	x20, x19, [sp, #32]
  88:	ldp	x22, x21, [sp, #16]
  8c:	ldp	x29, x30, [sp], #48
  90:	ret
  94:	add	x0, x19, #0x10
  98:	add	x1, x0, #0x10
  9c:	mov	w3, #0x8                   	// #8
  a0:	mov	x2, xzr
  a4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  a8:	ldr	w22, [x19, #24]
  ac:	b	60 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv+0x60>
  b0:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>
  b4:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>
  b8:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x43                  	// #67
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Disassembly of section .text._ZNK4llvm10FoldingSetINS_8BitsInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_8BitsInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	x8, x1, #0x18
  14:	cmp	x1, #0x0
  18:	csel	x21, xzr, x8, eq  // eq = none
  1c:	ldr	w20, [x21, #32]
  20:	mov	x0, x2
  24:	mov	x19, x2
  28:	mov	x1, x20
  2c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
  30:	cbz	w20, 50 <_ZNK4llvm10FoldingSetINS_8BitsInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE+0x50>
  34:	add	x21, x21, #0x28
  38:	lsl	x20, x20, #3
  3c:	ldr	x1, [x21], #8
  40:	mov	x0, x19
  44:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  48:	subs	x20, x20, #0x8
  4c:	b.ne	3c <_ZNK4llvm10FoldingSetINS_8BitsInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE+0x3c>  // b.any
  50:	ldp	x20, x19, [sp, #32]
  54:	ldr	x21, [sp, #16]
  58:	ldp	x29, x30, [sp], #48
  5c:	ret

Disassembly of section .text._ZNK4llvm10FoldingSetINS_8BitsInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_8BitsInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	x8, x1, #0x18
  14:	cmp	x1, #0x0
  18:	csel	x22, xzr, x8, eq  // eq = none
  1c:	ldr	w21, [x22, #32]
  20:	mov	x0, x4
  24:	mov	x19, x4
  28:	mov	x20, x2
  2c:	mov	x1, x21
  30:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
  34:	cbz	w21, 54 <_ZNK4llvm10FoldingSetINS_8BitsInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_+0x54>
  38:	add	x22, x22, #0x28
  3c:	lsl	x21, x21, #3
  40:	ldr	x1, [x22], #8
  44:	mov	x0, x19
  48:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  4c:	subs	x21, x21, #0x8
  50:	b.ne	40 <_ZNK4llvm10FoldingSetINS_8BitsInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_+0x40>  // b.any
  54:	mov	x0, x19
  58:	mov	x1, x20
  5c:	ldp	x20, x19, [sp, #32]
  60:	ldp	x22, x21, [sp, #16]
  64:	ldp	x29, x30, [sp], #48
  68:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_8BitsInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_8BitsInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	x8, x1, #0x18
  14:	cmp	x1, #0x0
  18:	csel	x21, xzr, x8, eq  // eq = none
  1c:	ldr	w20, [x21, #32]
  20:	mov	x0, x2
  24:	mov	x19, x2
  28:	mov	x1, x20
  2c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
  30:	cbz	w20, 50 <_ZNK4llvm10FoldingSetINS_8BitsInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE+0x50>
  34:	add	x21, x21, #0x28
  38:	lsl	x20, x20, #3
  3c:	ldr	x1, [x21], #8
  40:	mov	x0, x19
  44:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  48:	subs	x20, x20, #0x8
  4c:	b.ne	3c <_ZNK4llvm10FoldingSetINS_8BitsInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE+0x3c>  // b.any
  50:	mov	x0, x19
  54:	ldp	x20, x19, [sp, #32]
  58:	ldr	x21, [sp, #16]
  5c:	ldp	x29, x30, [sp], #48
  60:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_:

0000000000000000 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	add	x23, x0, #0x8
  18:	mov	x20, x1
  1c:	mov	x21, x0
  20:	cmp	x23, x1
  24:	mov	x22, x2
  28:	b.eq	74 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x74>  // b.none
  2c:	ldr	x22, [x22]
  30:	ldr	x8, [x20, #32]
  34:	cmp	x22, x8
  38:	b.ge	d0 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0xd0>  // b.tcont
  3c:	ldr	x24, [x21, #24]
  40:	cmp	x24, x20
  44:	b.eq	118 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x118>  // b.none
  48:	mov	x0, x20
  4c:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  50:	ldr	x8, [x0, #32]
  54:	cmp	x8, x22
  58:	b.ge	124 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x124>  // b.tcont
  5c:	ldr	x8, [x0, #24]
  60:	cmp	x8, #0x0
  64:	csel	x8, xzr, x20, eq  // eq = none
  68:	csel	x19, x0, x20, eq  // eq = none
  6c:	mov	x20, x8
  70:	b	200 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x200>
  74:	ldr	x8, [x21, #40]
  78:	cbz	x8, 90 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x90>
  7c:	ldr	x19, [x21, #32]
  80:	ldr	x9, [x22]
  84:	ldr	x8, [x19, #32]
  88:	cmp	x8, x9
  8c:	b.lt	1d0 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x1d0>  // b.tstop
  90:	ldr	x9, [x21, #16]
  94:	cbz	x9, 164 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x164>
  98:	ldr	x8, [x22]
  9c:	ldr	x10, [x9, #32]
  a0:	mov	x19, x9
  a4:	add	x9, x9, #0x10
  a8:	add	x11, x19, #0x18
  ac:	cmp	x8, x10
  b0:	csel	x9, x9, x11, lt  // lt = tstop
  b4:	ldr	x9, [x9]
  b8:	cbnz	x9, 9c <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x9c>
  bc:	cmp	x8, x10
  c0:	mov	x20, x19
  c4:	mov	x0, x19
  c8:	b.lt	168 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x168>  // b.tstop
  cc:	b	180 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x180>
  d0:	cmp	x8, x22
  d4:	b.ge	110 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x110>  // b.tcont
  d8:	ldr	x19, [x21, #32]
  dc:	cmp	x19, x20
  e0:	b.eq	1d0 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x1d0>  // b.none
  e4:	mov	x0, x20
  e8:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
  ec:	ldr	x8, [x0, #32]
  f0:	cmp	x22, x8
  f4:	b.ge	18c <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x18c>  // b.tcont
  f8:	ldr	x8, [x20, #24]
  fc:	cmp	x8, #0x0
 100:	csel	x8, xzr, x0, eq  // eq = none
 104:	csel	x19, x20, x0, eq  // eq = none
 108:	mov	x20, x8
 10c:	b	200 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x200>
 110:	mov	x19, xzr
 114:	b	200 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x200>
 118:	mov	x20, x24
 11c:	mov	x19, x24
 120:	b	200 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x200>
 124:	ldr	x9, [x21, #16]
 128:	cbz	x9, 1c4 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x1c4>
 12c:	ldr	x8, [x9, #32]
 130:	mov	x19, x9
 134:	add	x9, x9, #0x10
 138:	add	x10, x19, #0x18
 13c:	cmp	x22, x8
 140:	csel	x9, x9, x10, lt  // lt = tstop
 144:	ldr	x9, [x9]
 148:	cbnz	x9, 12c <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x12c>
 14c:	cmp	x22, x8
 150:	mov	x0, x19
 154:	b.ge	1f0 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x1f0>  // b.tcont
 158:	cmp	x24, x19
 15c:	b.ne	1e8 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x1e8>  // b.any
 160:	b	1d0 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x1d0>
 164:	mov	x19, x23
 168:	ldr	x8, [x21, #24]
 16c:	cmp	x8, x20
 170:	b.eq	1d0 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x1d0>  // b.none
 174:	mov	x0, x20
 178:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 17c:	ldr	x8, [x22]
 180:	ldr	x9, [x0, #32]
 184:	cmp	x9, x8
 188:	b	1f8 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x1f8>
 18c:	ldr	x9, [x21, #16]
 190:	cbz	x9, 1d8 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x1d8>
 194:	ldr	x8, [x9, #32]
 198:	mov	x19, x9
 19c:	add	x9, x9, #0x10
 1a0:	add	x10, x19, #0x18
 1a4:	cmp	x22, x8
 1a8:	csel	x9, x9, x10, lt  // lt = tstop
 1ac:	ldr	x9, [x9]
 1b0:	cbnz	x9, 194 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x194>
 1b4:	cmp	x22, x8
 1b8:	mov	x0, x19
 1bc:	b.lt	1dc <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x1dc>  // b.tstop
 1c0:	b	1f0 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x1f0>
 1c4:	mov	x19, x23
 1c8:	cmp	x24, x19
 1cc:	b.ne	1e8 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x1e8>  // b.any
 1d0:	mov	x20, xzr
 1d4:	b	200 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x200>
 1d8:	mov	x19, x23
 1dc:	ldr	x8, [x21, #24]
 1e0:	cmp	x8, x19
 1e4:	b.eq	1d0 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x1d0>  // b.none
 1e8:	mov	x0, x19
 1ec:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 1f0:	ldr	x8, [x0, #32]
 1f4:	cmp	x8, x22
 1f8:	csel	x20, xzr, x0, lt  // lt = tstop
 1fc:	csel	x19, x19, xzr, lt  // lt = tstop
 200:	mov	x0, x20
 204:	mov	x1, x19
 208:	ldp	x20, x19, [sp, #48]
 20c:	ldp	x22, x21, [sp, #32]
 210:	ldp	x24, x23, [sp, #16]
 214:	ldp	x29, x30, [sp], #64
 218:	ret

Disassembly of section .text._ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_:

0000000000000000 <_ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x22, x2
  1c:	mov	x23, x1
  20:	mov	x20, x0
  24:	bl	0 <_ZN4llvm13StringMapImpl15LookupBucketForENS_9StringRefE>
  28:	ldr	x8, [x20]
  2c:	mov	w21, w0
  30:	add	x19, x8, w0, uxtw #3
  34:	ldr	x8, [x19]
  38:	cmn	x8, #0x8
  3c:	b.eq	60 <_ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0x60>  // b.none
  40:	cbz	x8, 6c <_ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0x6c>
  44:	b	4c <_ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0x4c>
  48:	ldr	x8, [x19, #8]!
  4c:	cbz	x8, 48 <_ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0x48>
  50:	cmn	x8, #0x8
  54:	b.eq	48 <_ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0x48>  // b.none
  58:	mov	x1, xzr
  5c:	b	f0 <_ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0xf0>
  60:	ldr	w8, [x20, #16]
  64:	sub	w8, w8, #0x1
  68:	str	w8, [x20, #16]
  6c:	ldr	x0, [x20, #24]
  70:	add	x1, x22, #0x9
  74:	mov	w2, #0x3                   	// #3
  78:	bl	0 <_ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_>
  7c:	mov	x25, x0
  80:	mov	x24, x0
  84:	str	x22, [x25], #8
  88:	cbz	x22, 9c <_ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0x9c>
  8c:	mov	x0, x25
  90:	mov	x1, x23
  94:	mov	x2, x22
  98:	bl	0 <memcpy>
  9c:	strb	wzr, [x25, x22]
  a0:	str	x24, [x19]
  a4:	ldp	w8, w9, [x20, #12]
  a8:	ldr	w10, [x20, #8]
  ac:	add	w8, w8, #0x1
  b0:	add	w9, w9, w8
  b4:	cmp	w9, w10
  b8:	str	w8, [x20, #12]
  bc:	b.hi	10c <_ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0x10c>  // b.pmore
  c0:	mov	x0, x20
  c4:	mov	w1, w21
  c8:	bl	0 <_ZN4llvm13StringMapImpl11RehashTableEj>
  cc:	ldr	x8, [x20]
  d0:	add	x19, x8, w0, uxtw #3
  d4:	b	dc <_ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0xdc>
  d8:	add	x19, x19, #0x8
  dc:	ldr	x8, [x19]
  e0:	cbz	x8, d8 <_ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0xd8>
  e4:	cmn	x8, #0x8
  e8:	b.eq	d8 <_ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0xd8>  // b.none
  ec:	mov	w1, #0x1                   	// #1
  f0:	mov	x0, x19
  f4:	ldp	x20, x19, [sp, #64]
  f8:	ldp	x22, x21, [sp, #48]
  fc:	ldp	x24, x23, [sp, #32]
 100:	ldr	x25, [sp, #16]
 104:	ldp	x29, x30, [sp], #80
 108:	ret
 10c:	adrp	x0, 0 <_ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_>
 110:	adrp	x1, 0 <_ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_>
 114:	adrp	x3, 0 <_ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_>
 118:	add	x0, x0, #0x0
 11c:	add	x1, x1, #0x0
 120:	add	x3, x3, #0x0
 124:	mov	w2, #0x1bb                 	// #443
 128:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS2_EEESt4pairINS_17StringMapIteratorIS2_EEbENS_9StringRefEDpOT_:

0000000000000000 <_ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS2_EEESt4pairINS_17StringMapIteratorIS2_EEbENS_9StringRefEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x24, x3
  1c:	mov	x22, x2
  20:	mov	x23, x1
  24:	mov	x20, x0
  28:	bl	0 <_ZN4llvm13StringMapImpl15LookupBucketForENS_9StringRefE>
  2c:	ldr	x8, [x20]
  30:	mov	w21, w0
  34:	add	x19, x8, w0, uxtw #3
  38:	ldr	x8, [x19]
  3c:	cmn	x8, #0x8
  40:	b.eq	64 <_ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS2_EEESt4pairINS_17StringMapIteratorIS2_EEbENS_9StringRefEDpOT_+0x64>  // b.none
  44:	cbz	x8, 70 <_ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS2_EEESt4pairINS_17StringMapIteratorIS2_EEbENS_9StringRefEDpOT_+0x70>
  48:	b	50 <_ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS2_EEESt4pairINS_17StringMapIteratorIS2_EEbENS_9StringRefEDpOT_+0x50>
  4c:	ldr	x8, [x19, #8]!
  50:	cbz	x8, 4c <_ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS2_EEESt4pairINS_17StringMapIteratorIS2_EEbENS_9StringRefEDpOT_+0x4c>
  54:	cmn	x8, #0x8
  58:	b.eq	4c <_ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS2_EEESt4pairINS_17StringMapIteratorIS2_EEbENS_9StringRefEDpOT_+0x4c>  // b.none
  5c:	mov	x1, xzr
  60:	b	f8 <_ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS2_EEESt4pairINS_17StringMapIteratorIS2_EEbENS_9StringRefEDpOT_+0xf8>
  64:	ldr	w8, [x20, #16]
  68:	sub	w8, w8, #0x1
  6c:	str	w8, [x20, #16]
  70:	ldr	x0, [x20, #24]
  74:	add	x1, x22, #0x11
  78:	mov	w2, #0x3                   	// #3
  7c:	bl	0 <_ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS2_EEESt4pairINS_17StringMapIteratorIS2_EEbENS_9StringRefEDpOT_>
  80:	ldr	x8, [x24]
  84:	mov	x25, x0
  88:	add	x24, x0, #0x10
  8c:	stp	x22, x8, [x0]
  90:	cbz	x22, a4 <_ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS2_EEESt4pairINS_17StringMapIteratorIS2_EEbENS_9StringRefEDpOT_+0xa4>
  94:	mov	x0, x24
  98:	mov	x1, x23
  9c:	mov	x2, x22
  a0:	bl	0 <memcpy>
  a4:	strb	wzr, [x24, x22]
  a8:	str	x25, [x19]
  ac:	ldp	w8, w9, [x20, #12]
  b0:	ldr	w10, [x20, #8]
  b4:	add	w8, w8, #0x1
  b8:	add	w9, w9, w8
  bc:	cmp	w9, w10
  c0:	str	w8, [x20, #12]
  c4:	b.hi	114 <_ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS2_EEESt4pairINS_17StringMapIteratorIS2_EEbENS_9StringRefEDpOT_+0x114>  // b.pmore
  c8:	mov	x0, x20
  cc:	mov	w1, w21
  d0:	bl	0 <_ZN4llvm13StringMapImpl11RehashTableEj>
  d4:	ldr	x8, [x20]
  d8:	add	x19, x8, w0, uxtw #3
  dc:	b	e4 <_ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS2_EEESt4pairINS_17StringMapIteratorIS2_EEbENS_9StringRefEDpOT_+0xe4>
  e0:	add	x19, x19, #0x8
  e4:	ldr	x8, [x19]
  e8:	cbz	x8, e0 <_ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS2_EEESt4pairINS_17StringMapIteratorIS2_EEbENS_9StringRefEDpOT_+0xe0>
  ec:	cmn	x8, #0x8
  f0:	b.eq	e0 <_ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS2_EEESt4pairINS_17StringMapIteratorIS2_EEbENS_9StringRefEDpOT_+0xe0>  // b.none
  f4:	mov	w1, #0x1                   	// #1
  f8:	mov	x0, x19
  fc:	ldp	x20, x19, [sp, #64]
 100:	ldp	x22, x21, [sp, #48]
 104:	ldp	x24, x23, [sp, #32]
 108:	ldr	x25, [sp, #16]
 10c:	ldp	x29, x30, [sp], #80
 110:	ret
 114:	adrp	x0, 0 <_ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS2_EEESt4pairINS_17StringMapIteratorIS2_EEbENS_9StringRefEDpOT_>
 118:	adrp	x1, 0 <_ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS2_EEESt4pairINS_17StringMapIteratorIS2_EEbENS_9StringRefEDpOT_>
 11c:	adrp	x3, 0 <_ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS2_EEESt4pairINS_17StringMapIteratorIS2_EEbENS_9StringRefEDpOT_>
 120:	add	x0, x0, #0x0
 124:	add	x1, x1, #0x0
 128:	add	x3, x3, #0x0
 12c:	mov	w2, #0x1bb                 	// #443
 130:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_8ListInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_8ListInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	sub	x8, x1, #0x18
   4:	cmp	x1, #0x0
   8:	csel	x0, xzr, x8, eq  // eq = none
   c:	mov	x1, x2
  10:	b	2df8 <_ZNK4llvm8ListInit7ProfileERNS_16FoldingSetNodeIDE>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_8ListInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_8ListInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	sub	x8, x1, #0x18
  10:	cmp	x1, #0x0
  14:	csel	x0, xzr, x8, eq  // eq = none
  18:	mov	x1, x4
  1c:	mov	x19, x4
  20:	mov	x20, x2
  24:	bl	2df8 <_ZNK4llvm8ListInit7ProfileERNS_16FoldingSetNodeIDE>
  28:	mov	x0, x19
  2c:	mov	x1, x20
  30:	ldp	x20, x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_8ListInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_8ListInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	sub	x8, x1, #0x18
  10:	cmp	x1, #0x0
  14:	csel	x0, xzr, x8, eq  // eq = none
  18:	mov	x1, x2
  1c:	mov	x19, x2
  20:	bl	2df8 <_ZNK4llvm8ListInit7ProfileERNS_16FoldingSetNodeIDE>
  24:	mov	x0, x19
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_8UnOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_8UnOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	x8, x1, #0x18
  14:	cmp	x1, #0x0
  18:	csel	x8, xzr, x8, eq  // eq = none
  1c:	ldrb	w1, [x8, #9]
  20:	ldr	x19, [x8, #32]
  24:	ldr	x20, [x8, #16]
  28:	mov	x0, x2
  2c:	mov	x21, x2
  30:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
  34:	mov	x0, x21
  38:	mov	x1, x19
  3c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  40:	mov	x0, x21
  44:	mov	x1, x20
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldr	x21, [sp, #16]
  50:	ldp	x29, x30, [sp], #48
  54:	b	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_8UnOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_8UnOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	x8, x1, #0x18
  14:	cmp	x1, #0x0
  18:	csel	x8, xzr, x8, eq  // eq = none
  1c:	ldrb	w1, [x8, #9]
  20:	ldr	x20, [x8, #32]
  24:	ldr	x21, [x8, #16]
  28:	mov	x0, x4
  2c:	mov	x19, x4
  30:	mov	x22, x2
  34:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
  38:	mov	x0, x19
  3c:	mov	x1, x20
  40:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  44:	mov	x0, x19
  48:	mov	x1, x21
  4c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  50:	mov	x0, x19
  54:	mov	x1, x22
  58:	ldp	x20, x19, [sp, #32]
  5c:	ldp	x22, x21, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_8UnOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_8UnOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	x8, x1, #0x18
  14:	cmp	x1, #0x0
  18:	csel	x8, xzr, x8, eq  // eq = none
  1c:	ldrb	w1, [x8, #9]
  20:	ldr	x19, [x8, #32]
  24:	ldr	x20, [x8, #16]
  28:	mov	x0, x2
  2c:	mov	x21, x2
  30:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
  34:	mov	x0, x21
  38:	mov	x1, x19
  3c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  40:	mov	x0, x21
  44:	mov	x1, x20
  48:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  4c:	mov	x0, x21
  50:	ldp	x20, x19, [sp, #32]
  54:	ldr	x21, [sp, #16]
  58:	ldp	x29, x30, [sp], #48
  5c:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_9BinOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_9BinOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	x8, x1, #0x18
  14:	cmp	x1, #0x0
  18:	csel	x8, xzr, x8, eq  // eq = none
  1c:	ldrb	w1, [x8, #9]
  20:	ldp	x19, x20, [x8, #32]
  24:	ldr	x21, [x8, #16]
  28:	mov	x0, x2
  2c:	mov	x22, x2
  30:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
  34:	mov	x0, x22
  38:	mov	x1, x19
  3c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  40:	mov	x0, x22
  44:	mov	x1, x20
  48:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  4c:	mov	x0, x22
  50:	mov	x1, x21
  54:	ldp	x20, x19, [sp, #32]
  58:	ldp	x22, x21, [sp, #16]
  5c:	ldp	x29, x30, [sp], #48
  60:	b	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_9BinOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_9BinOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	sub	x8, x1, #0x18
  18:	cmp	x1, #0x0
  1c:	csel	x8, xzr, x8, eq  // eq = none
  20:	ldrb	w1, [x8, #9]
  24:	ldp	x20, x21, [x8, #32]
  28:	ldr	x22, [x8, #16]
  2c:	mov	x0, x4
  30:	mov	x19, x4
  34:	mov	x23, x2
  38:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
  3c:	mov	x0, x19
  40:	mov	x1, x20
  44:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  48:	mov	x0, x19
  4c:	mov	x1, x21
  50:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  54:	mov	x0, x19
  58:	mov	x1, x22
  5c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  60:	mov	x0, x19
  64:	mov	x1, x23
  68:	ldp	x20, x19, [sp, #48]
  6c:	ldp	x22, x21, [sp, #32]
  70:	ldr	x23, [sp, #16]
  74:	ldp	x29, x30, [sp], #64
  78:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_9BinOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_9BinOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	x8, x1, #0x18
  14:	cmp	x1, #0x0
  18:	csel	x8, xzr, x8, eq  // eq = none
  1c:	ldrb	w1, [x8, #9]
  20:	ldp	x19, x20, [x8, #32]
  24:	ldr	x21, [x8, #16]
  28:	mov	x0, x2
  2c:	mov	x22, x2
  30:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
  34:	mov	x0, x22
  38:	mov	x1, x19
  3c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  40:	mov	x0, x22
  44:	mov	x1, x20
  48:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  4c:	mov	x0, x22
  50:	mov	x1, x21
  54:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  58:	mov	x0, x22
  5c:	ldp	x20, x19, [sp, #32]
  60:	ldp	x22, x21, [sp, #16]
  64:	ldp	x29, x30, [sp], #48
  68:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10TernOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10TernOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	sub	x8, x1, #0x18
  18:	cmp	x1, #0x0
  1c:	csel	x8, xzr, x8, eq  // eq = none
  20:	ldrb	w1, [x8, #9]
  24:	ldp	x19, x20, [x8, #32]
  28:	ldr	x21, [x8, #48]
  2c:	ldr	x22, [x8, #16]
  30:	mov	x0, x2
  34:	mov	x23, x2
  38:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
  3c:	mov	x0, x23
  40:	mov	x1, x19
  44:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  48:	mov	x0, x23
  4c:	mov	x1, x20
  50:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  54:	mov	x0, x23
  58:	mov	x1, x21
  5c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  60:	mov	x0, x23
  64:	mov	x1, x22
  68:	ldp	x20, x19, [sp, #48]
  6c:	ldp	x22, x21, [sp, #32]
  70:	ldr	x23, [sp, #16]
  74:	ldp	x29, x30, [sp], #64
  78:	b	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10TernOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10TernOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	sub	x8, x1, #0x18
  18:	cmp	x1, #0x0
  1c:	csel	x8, xzr, x8, eq  // eq = none
  20:	ldrb	w1, [x8, #9]
  24:	ldp	x20, x21, [x8, #32]
  28:	ldr	x22, [x8, #48]
  2c:	ldr	x23, [x8, #16]
  30:	mov	x0, x4
  34:	mov	x19, x4
  38:	mov	x24, x2
  3c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
  40:	mov	x0, x19
  44:	mov	x1, x20
  48:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  4c:	mov	x0, x19
  50:	mov	x1, x21
  54:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  58:	mov	x0, x19
  5c:	mov	x1, x22
  60:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  64:	mov	x0, x19
  68:	mov	x1, x23
  6c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  70:	mov	x0, x19
  74:	mov	x1, x24
  78:	ldp	x20, x19, [sp, #48]
  7c:	ldp	x22, x21, [sp, #32]
  80:	ldp	x24, x23, [sp, #16]
  84:	ldp	x29, x30, [sp], #64
  88:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10TernOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10TernOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	sub	x8, x1, #0x18
  18:	cmp	x1, #0x0
  1c:	csel	x8, xzr, x8, eq  // eq = none
  20:	ldrb	w1, [x8, #9]
  24:	ldp	x19, x20, [x8, #32]
  28:	ldr	x21, [x8, #48]
  2c:	ldr	x22, [x8, #16]
  30:	mov	x0, x2
  34:	mov	x23, x2
  38:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
  3c:	mov	x0, x23
  40:	mov	x1, x19
  44:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  48:	mov	x0, x23
  4c:	mov	x1, x20
  50:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  54:	mov	x0, x23
  58:	mov	x1, x21
  5c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  60:	mov	x0, x23
  64:	mov	x1, x22
  68:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  6c:	mov	x0, x23
  70:	ldp	x20, x19, [sp, #48]
  74:	ldp	x22, x21, [sp, #32]
  78:	ldr	x23, [sp, #16]
  7c:	ldp	x29, x30, [sp], #64
  80:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10FoldOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10FoldOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	sub	x8, x1, #0x18
  18:	cmp	x1, #0x0
  1c:	csel	x8, xzr, x8, eq  // eq = none
  20:	ldp	x1, x21, [x8, #48]
  24:	ldp	x19, x20, [x8, #32]
  28:	ldr	x22, [x8, #64]
  2c:	ldr	x23, [x8, #16]
  30:	mov	x0, x2
  34:	mov	x24, x2
  38:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  3c:	mov	x0, x24
  40:	mov	x1, x21
  44:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  48:	mov	x0, x24
  4c:	mov	x1, x19
  50:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  54:	mov	x0, x24
  58:	mov	x1, x20
  5c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  60:	mov	x0, x24
  64:	mov	x1, x22
  68:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  6c:	mov	x0, x24
  70:	mov	x1, x23
  74:	ldp	x20, x19, [sp, #48]
  78:	ldp	x22, x21, [sp, #32]
  7c:	ldp	x24, x23, [sp, #16]
  80:	ldp	x29, x30, [sp], #64
  84:	b	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10FoldOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10FoldOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	sub	x8, x1, #0x18
  1c:	cmp	x1, #0x0
  20:	csel	x8, xzr, x8, eq  // eq = none
  24:	ldp	x1, x22, [x8, #48]
  28:	ldp	x20, x21, [x8, #32]
  2c:	ldr	x23, [x8, #64]
  30:	ldr	x24, [x8, #16]
  34:	mov	x0, x4
  38:	mov	x19, x4
  3c:	mov	x25, x2
  40:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  44:	mov	x0, x19
  48:	mov	x1, x22
  4c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  50:	mov	x0, x19
  54:	mov	x1, x20
  58:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  5c:	mov	x0, x19
  60:	mov	x1, x21
  64:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  68:	mov	x0, x19
  6c:	mov	x1, x23
  70:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  74:	mov	x0, x19
  78:	mov	x1, x24
  7c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  80:	mov	x0, x19
  84:	mov	x1, x25
  88:	ldp	x20, x19, [sp, #64]
  8c:	ldp	x22, x21, [sp, #48]
  90:	ldp	x24, x23, [sp, #32]
  94:	ldr	x25, [sp, #16]
  98:	ldp	x29, x30, [sp], #80
  9c:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10FoldOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10FoldOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	sub	x8, x1, #0x18
  18:	cmp	x1, #0x0
  1c:	csel	x8, xzr, x8, eq  // eq = none
  20:	ldp	x1, x21, [x8, #48]
  24:	ldp	x19, x20, [x8, #32]
  28:	ldr	x22, [x8, #64]
  2c:	ldr	x23, [x8, #16]
  30:	mov	x0, x2
  34:	mov	x24, x2
  38:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  3c:	mov	x0, x24
  40:	mov	x1, x21
  44:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  48:	mov	x0, x24
  4c:	mov	x1, x19
  50:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  54:	mov	x0, x24
  58:	mov	x1, x20
  5c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  60:	mov	x0, x24
  64:	mov	x1, x22
  68:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  6c:	mov	x0, x24
  70:	mov	x1, x23
  74:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  78:	mov	x0, x24
  7c:	ldp	x20, x19, [sp, #48]
  80:	ldp	x22, x21, [sp, #32]
  84:	ldp	x24, x23, [sp, #16]
  88:	ldp	x29, x30, [sp], #64
  8c:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_9IsAOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_9IsAOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	sub	x8, x1, #0x18
  10:	cmp	x1, #0x0
  14:	csel	x8, xzr, x8, eq  // eq = none
  18:	ldp	x1, x19, [x8, #32]
  1c:	mov	x0, x2
  20:	mov	x20, x2
  24:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  28:	mov	x0, x20
  2c:	mov	x1, x19
  30:	ldp	x20, x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_9IsAOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_9IsAOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	x8, x1, #0x18
  14:	cmp	x1, #0x0
  18:	csel	x8, xzr, x8, eq  // eq = none
  1c:	ldp	x1, x20, [x8, #32]
  20:	mov	x0, x4
  24:	mov	x19, x4
  28:	mov	x21, x2
  2c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  30:	mov	x0, x19
  34:	mov	x1, x20
  38:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  3c:	mov	x0, x19
  40:	mov	x1, x21
  44:	ldp	x20, x19, [sp, #32]
  48:	ldr	x21, [sp, #16]
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_9IsAOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_9IsAOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	sub	x8, x1, #0x18
  10:	cmp	x1, #0x0
  14:	csel	x8, xzr, x8, eq  // eq = none
  18:	ldp	x1, x19, [x8, #32]
  1c:	mov	x0, x2
  20:	mov	x20, x2
  24:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  28:	mov	x0, x20
  2c:	mov	x1, x19
  30:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  34:	mov	x0, x20
  38:	ldp	x20, x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w11, [x0, #24]
   c:	cbz	w11, ac <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xac>
  10:	ldp	x8, x10, [x1]
  14:	ldr	x9, [x0, #8]
  18:	cmn	x8, #0x8
  1c:	b.ne	28 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x28>  // b.any
  20:	cmn	x10, #0x8
  24:	b.eq	130 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x130>  // b.none
  28:	cmn	x8, #0x10
  2c:	b.ne	38 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x38>  // b.any
  30:	cmn	x10, #0x10
  34:	b.eq	130 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x130>  // b.none
  38:	ubfx	x13, x8, #4, #28
  3c:	ubfx	x14, x10, #4, #28
  40:	mov	x15, #0xffffffffffffffff    	// #-1
  44:	sub	w12, w11, #0x1
  48:	eor	w11, w13, w8, lsr #9
  4c:	eor	w13, w14, w10, lsr #9
  50:	eor	x14, x15, x13, lsl #32
  54:	bfi	x13, x11, #32, #28
  58:	add	x11, x13, x14
  5c:	eor	x11, x11, x11, lsr #22
  60:	eor	x13, x15, x11, lsl #13
  64:	add	x11, x11, x13
  68:	eor	x11, x11, x11, lsr #8
  6c:	add	x11, x11, x11, lsl #3
  70:	eor	x11, x11, x11, lsr #15
  74:	eor	x13, x15, x11, lsl #27
  78:	add	x11, x11, x13
  7c:	lsr	x13, x11, #31
  80:	eor	w11, w13, w11
  84:	and	w14, w12, w11
  88:	mov	w13, #0x18                  	// #24
  8c:	umaddl	x11, w14, w13, x9
  90:	ldp	x16, x18, [x11]
  94:	cmp	x8, x16
  98:	b.ne	c0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xc0>  // b.any
  9c:	cmp	x10, x18
  a0:	b.ne	c0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xc0>  // b.any
  a4:	mov	w0, #0x1                   	// #1
  a8:	b	b4 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xb4>
  ac:	mov	x11, xzr
  b0:	mov	w0, wzr
  b4:	str	x11, [x2]
  b8:	ldp	x29, x30, [sp], #16
  bc:	ret
  c0:	mov	x15, xzr
  c4:	mov	w1, #0x1                   	// #1
  c8:	mov	x17, #0xfffffffffffffff0    	// #-16
  cc:	mov	w0, #0x1                   	// #1
  d0:	cmn	x16, #0x8
  d4:	b.ne	e0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xe0>  // b.any
  d8:	cmn	x18, #0x8
  dc:	b.eq	120 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x120>  // b.none
  e0:	cmn	x18, #0x10
  e4:	add	w14, w14, w1
  e8:	ccmp	x16, x17, #0x0, eq  // eq = none
  ec:	and	w14, w14, w12
  f0:	ccmp	x15, #0x0, #0x0, eq  // eq = none
  f4:	csel	x15, x15, x11, ne  // ne = any
  f8:	umaddl	x11, w14, w13, x9
  fc:	ldp	x16, x18, [x11]
 100:	add	w3, w1, #0x1
 104:	mov	w1, w3
 108:	cmp	x8, x16
 10c:	b.ne	d0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xd0>  // b.any
 110:	cmp	x10, x18
 114:	mov	w1, w3
 118:	b.eq	b4 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xb4>  // b.none
 11c:	b	d0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xd0>
 120:	cmp	x15, #0x0
 124:	mov	w0, wzr
 128:	csel	x11, x11, x15, eq  // eq = none
 12c:	b	b4 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xb4>
 130:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_>
 134:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_>
 138:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_>
 13c:	add	x0, x0, #0x0
 140:	add	x1, x1, #0x0
 144:	add	x3, x3, #0x0
 148:	mov	w2, #0x252                 	// #594
 14c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	w8, [x0, #16]
  14:	ldr	w1, [x0, #24]
  18:	ldr	x9, [x0]
  1c:	mov	x20, x2
  20:	lsl	w10, w8, #2
  24:	add	w10, w10, #0x4
  28:	add	w11, w1, w1, lsl #1
  2c:	mov	x19, x0
  30:	add	x9, x9, #0x1
  34:	cmp	w10, w11
  38:	str	x9, [x0]
  3c:	b.cs	a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_+0xa0>  // b.hs, b.nlast
  40:	ldr	w9, [x19, #20]
  44:	mvn	w8, w8
  48:	add	w8, w1, w8
  4c:	sub	w8, w8, w9
  50:	cmp	w8, w1, lsr #3
  54:	b.ls	a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_+0xa4>  // b.plast
  58:	cbz	x3, c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_+0xc4>
  5c:	ldr	w8, [x19, #16]
  60:	add	w8, w8, #0x1
  64:	str	w8, [x19, #16]
  68:	ldr	x8, [x3]
  6c:	cmn	x8, #0x8
  70:	b.ne	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_+0x80>  // b.any
  74:	ldr	x8, [x3, #8]
  78:	cmn	x8, #0x8
  7c:	b.eq	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_+0x8c>  // b.none
  80:	ldr	w8, [x19, #20]
  84:	sub	w8, w8, #0x1
  88:	str	w8, [x19, #20]
  8c:	ldp	x20, x19, [sp, #32]
  90:	ldp	x29, x30, [sp, #16]
  94:	mov	x0, x3
  98:	add	sp, sp, #0x30
  9c:	ret
  a0:	lsl	w1, w1, #1
  a4:	mov	x0, x19
  a8:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_>
  ac:	add	x2, sp, #0x8
  b0:	mov	x0, x19
  b4:	mov	x1, x20
  b8:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_>
  bc:	ldr	x3, [sp, #8]
  c0:	cbnz	x3, 5c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_+0x5c>
  c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_>
  c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_>
  cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_>
  d0:	add	x0, x0, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x3, x3, #0x0
  dc:	mov	w2, #0x22f                 	// #559
  e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	w9, #0x18                  	// #24
  4c:	mov	x19, x0
  50:	str	w8, [x0, #24]
  54:	umull	x0, w8, w9
  58:	bl	0 <_Znwm>
  5c:	str	x0, [x19, #8]
  60:	cbz	x20, 8c <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x8c>
  64:	mov	w8, #0x18                  	// #24
  68:	madd	x2, x21, x8, x20
  6c:	mov	x0, x19
  70:	mov	x1, x20
  74:	bl	0 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
  78:	mov	x0, x20
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldr	x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	b	0 <_ZdlPv>
  8c:	ldr	w8, [x19, #24]
  90:	str	xzr, [x19, #16]
  94:	sub	w9, w8, #0x1
  98:	tst	w8, w9
  9c:	b.ne	130 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x130>  // b.any
  a0:	cbz	w8, 120 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x120>
  a4:	add	x8, x8, x8, lsl #1
  a8:	lsl	x8, x8, #3
  ac:	sub	x10, x8, #0x18
  b0:	cmp	x10, #0x18
  b4:	mov	x9, x0
  b8:	b.cc	108 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x108>  // b.lo, b.ul, b.last
  bc:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  c0:	movk	x9, #0xaaab
  c4:	umulh	x9, x10, x9
  c8:	lsr	x9, x9, #4
  cc:	add	x10, x9, #0x1
  d0:	mov	w12, #0x18                  	// #24
  d4:	mov	x13, #0xfffffffffffffff8    	// #-8
  d8:	and	x11, x10, #0x1ffffffffffffffe
  dc:	madd	x9, x11, x12, x0
  e0:	dup	v0.2d, x13
  e4:	mov	x12, x11
  e8:	mov	x13, x0
  ec:	str	q0, [x13]
  f0:	stur	q0, [x13, #24]
  f4:	subs	x12, x12, #0x2
  f8:	add	x13, x13, #0x30
  fc:	b.ne	ec <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0xec>  // b.any
 100:	cmp	x10, x11
 104:	b.eq	120 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x120>  // b.none
 108:	mov	x10, #0xfffffffffffffff8    	// #-8
 10c:	add	x8, x0, x8
 110:	dup	v0.2d, x10
 114:	str	q0, [x9], #24
 118:	cmp	x8, x9
 11c:	b.ne	114 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x114>  // b.any
 120:	ldp	x20, x19, [sp, #32]
 124:	ldr	x21, [sp, #16]
 128:	ldp	x29, x30, [sp], #48
 12c:	ret
 130:	adrp	x0, 0 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 134:	adrp	x1, 0 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 138:	adrp	x3, 0 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 13c:	add	x0, x0, #0x0
 140:	add	x1, x1, #0x0
 144:	add	x3, x3, #0x0
 148:	mov	w2, #0x15c                 	// #348
 14c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #24]
  14:	str	xzr, [x0, #16]
  18:	sub	w9, w8, #0x1
  1c:	tst	w8, w9
  20:	b.ne	160 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0x160>  // b.any
  24:	mov	x19, x2
  28:	mov	x20, x1
  2c:	mov	x21, x0
  30:	cbz	w8, 100 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0x100>
  34:	ldr	x9, [x21, #8]
  38:	mov	w10, #0x18                  	// #24
  3c:	mul	x10, x8, x10
  40:	sub	x10, x10, #0x18
  44:	cmp	x10, #0x18
  48:	b.cs	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0x54>  // b.hs, b.nlast
  4c:	mov	x10, x9
  50:	b	a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0xa0>
  54:	mov	x11, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  58:	movk	x11, #0xaaab
  5c:	umulh	x10, x10, x11
  60:	lsr	x10, x10, #4
  64:	add	x11, x10, #0x1
  68:	mov	w13, #0x18                  	// #24
  6c:	mov	x14, #0xfffffffffffffff8    	// #-8
  70:	and	x12, x11, #0x1ffffffffffffffe
  74:	madd	x10, x12, x13, x9
  78:	dup	v0.2d, x14
  7c:	mov	x13, x12
  80:	mov	x14, x9
  84:	str	q0, [x14]
  88:	stur	q0, [x14, #24]
  8c:	subs	x13, x13, #0x2
  90:	add	x14, x14, #0x30
  94:	b.ne	84 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0x84>  // b.any
  98:	cmp	x11, x12
  9c:	b.eq	100 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0x100>  // b.none
  a0:	mov	w11, #0x18                  	// #24
  a4:	mov	x12, #0xfffffffffffffff8    	// #-8
  a8:	madd	x8, x8, x11, x9
  ac:	dup	v0.2d, x12
  b0:	str	q0, [x10], #24
  b4:	cmp	x8, x10
  b8:	b.ne	b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0xb0>  // b.any
  bc:	b	100 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0x100>
  c0:	add	x2, x29, #0x18
  c4:	mov	x0, x21
  c8:	mov	x1, x20
  cc:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_>
  d0:	tbnz	w0, #0, 140 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0x140>
  d4:	ldr	x8, [x29, #24]
  d8:	ldr	x9, [x20]
  dc:	str	x9, [x8]
  e0:	ldr	x9, [x20, #8]
  e4:	str	x9, [x8, #8]
  e8:	ldr	x9, [x20, #16]
  ec:	str	x9, [x8, #16]
  f0:	ldr	w8, [x21, #16]
  f4:	add	w8, w8, #0x1
  f8:	str	w8, [x21, #16]
  fc:	add	x20, x20, #0x18
 100:	cmp	x20, x19
 104:	b.eq	130 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0x130>  // b.none
 108:	ldp	x9, x8, [x20]
 10c:	cmn	x9, #0x8
 110:	b.ne	11c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0x11c>  // b.any
 114:	cmn	x8, #0x8
 118:	b.eq	fc <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0xfc>  // b.none
 11c:	cmn	x9, #0x10
 120:	b.ne	c0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0xc0>  // b.any
 124:	cmn	x8, #0x10
 128:	b.eq	fc <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0xfc>  // b.none
 12c:	b	c0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0xc0>
 130:	ldp	x20, x19, [sp, #32]
 134:	ldr	x21, [sp, #16]
 138:	ldp	x29, x30, [sp], #48
 13c:	ret
 140:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_>
 144:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_>
 148:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_>
 14c:	add	x0, x0, #0x0
 150:	add	x1, x1, #0x0
 154:	add	x3, x3, #0x0
 158:	mov	w2, #0x17a                 	// #378
 15c:	bl	0 <__assert_fail>
 160:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_>
 164:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_>
 168:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_>
 16c:	add	x0, x0, #0x0
 170:	add	x1, x1, #0x0
 174:	add	x3, x3, #0x0
 178:	mov	w2, #0x15c                 	// #348
 17c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w12, [x0, #24]
   c:	cbz	w12, 38 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x38>
  10:	ldr	x8, [x1]
  14:	ldr	x9, [x0, #8]
  18:	cmn	x8, #0x10
  1c:	b.eq	44 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x44>  // b.none
  20:	cmn	x8, #0x8
  24:	b.ne	70 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x70>  // b.any
  28:	ldr	w10, [x1, #8]
  2c:	cmn	w10, #0x1
  30:	b.ne	74 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x74>  // b.any
  34:	b	50 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x50>
  38:	mov	x12, xzr
  3c:	mov	w0, wzr
  40:	b	15c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x15c>
  44:	ldr	w10, [x1, #8]
  48:	cmn	w10, #0x2
  4c:	b.ne	74 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x74>  // b.any
  50:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_>
  54:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_>
  58:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_>
  5c:	add	x0, x0, #0x0
  60:	add	x1, x1, #0x0
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x252                 	// #594
  6c:	bl	0 <__assert_fail>
  70:	ldr	w10, [x1, #8]
  74:	ubfx	x13, x8, #4, #28
  78:	mov	w14, #0x25                  	// #37
  7c:	mov	x15, #0xffffffffffffffff    	// #-1
  80:	eor	w13, w13, w8, lsr #9
  84:	mul	w14, w10, w14
  88:	eor	x16, x15, x14, lsl #32
  8c:	bfi	x14, x13, #32, #28
  90:	sub	w13, w12, #0x1
  94:	add	x12, x14, x16
  98:	eor	x12, x12, x12, lsr #22
  9c:	eor	x14, x15, x12, lsl #13
  a0:	add	x12, x12, x14
  a4:	eor	x12, x12, x12, lsr #8
  a8:	add	x12, x12, x12, lsl #3
  ac:	eor	x12, x12, x12, lsr #15
  b0:	eor	x15, x15, x12, lsl #27
  b4:	add	x12, x12, x15
  b8:	lsr	x15, x12, #31
  bc:	eor	w12, w15, w12
  c0:	mov	x11, xzr
  c4:	mov	w14, #0x1                   	// #1
  c8:	and	w16, w13, w12
  cc:	mov	w15, #0x18                  	// #24
  d0:	umaddl	x12, w16, w15, x9
  d4:	ldr	x17, [x12]
  d8:	mov	w16, w16
  dc:	cmp	x17, x8
  e0:	b.ne	f4 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0xf4>  // b.any
  e4:	madd	x18, x16, x15, x9
  e8:	ldr	w18, [x18, #8]
  ec:	cmp	w10, w18
  f0:	b.eq	158 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x158>  // b.none
  f4:	cmn	x17, #0x8
  f8:	b.ne	110 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x110>  // b.any
  fc:	madd	x17, x16, x15, x9
 100:	ldr	w17, [x17, #8]
 104:	cmn	w17, #0x1
 108:	b.eq	168 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x168>  // b.none
 10c:	b	12c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x12c>
 110:	cmn	x17, #0x10
 114:	b.ne	12c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x12c>  // b.any
 118:	madd	x17, x16, x15, x9
 11c:	ldr	w17, [x17, #8]
 120:	cmn	w17, #0x2
 124:	cset	w17, eq  // eq = none
 128:	b	130 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x130>
 12c:	mov	w17, wzr
 130:	cmp	x11, #0x0
 134:	eor	w17, w17, #0x1
 138:	cset	w18, ne  // ne = any
 13c:	orr	w17, w18, w17
 140:	add	w16, w16, w14
 144:	cmp	w17, #0x0
 148:	add	w14, w14, #0x1
 14c:	csel	x11, x11, x12, ne  // ne = any
 150:	and	w16, w16, w13
 154:	b	d0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0xd0>
 158:	mov	w0, #0x1                   	// #1
 15c:	str	x12, [x2]
 160:	ldp	x29, x30, [sp], #16
 164:	ret
 168:	cmp	x11, #0x0
 16c:	mov	w0, wzr
 170:	csel	x12, x12, x11, eq  // eq = none
 174:	b	15c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x15c>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	w8, [x0, #16]
  14:	ldr	w1, [x0, #24]
  18:	ldr	x9, [x0]
  1c:	mov	x20, x2
  20:	lsl	w10, w8, #2
  24:	add	w10, w10, #0x4
  28:	add	w11, w1, w1, lsl #1
  2c:	mov	x19, x0
  30:	add	x9, x9, #0x1
  34:	cmp	w10, w11
  38:	str	x9, [x0]
  3c:	b.cs	a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_+0xa0>  // b.hs, b.nlast
  40:	ldr	w9, [x19, #20]
  44:	mvn	w8, w8
  48:	add	w8, w1, w8
  4c:	sub	w8, w8, w9
  50:	cmp	w8, w1, lsr #3
  54:	b.ls	a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_+0xa4>  // b.plast
  58:	cbz	x3, c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_+0xc4>
  5c:	ldr	w8, [x19, #16]
  60:	add	w8, w8, #0x1
  64:	str	w8, [x19, #16]
  68:	ldr	x8, [x3]
  6c:	cmn	x8, #0x8
  70:	b.ne	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_+0x80>  // b.any
  74:	ldr	w8, [x3, #8]
  78:	cmn	w8, #0x1
  7c:	b.eq	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_+0x8c>  // b.none
  80:	ldr	w8, [x19, #20]
  84:	sub	w8, w8, #0x1
  88:	str	w8, [x19, #20]
  8c:	ldp	x20, x19, [sp, #32]
  90:	ldp	x29, x30, [sp, #16]
  94:	mov	x0, x3
  98:	add	sp, sp, #0x30
  9c:	ret
  a0:	lsl	w1, w1, #1
  a4:	mov	x0, x19
  a8:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_>
  ac:	add	x2, sp, #0x8
  b0:	mov	x0, x19
  b4:	mov	x1, x20
  b8:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_>
  bc:	ldr	x3, [sp, #8]
  c0:	cbnz	x3, 5c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_+0x5c>
  c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_>
  c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_>
  cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_>
  d0:	add	x0, x0, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x3, x3, #0x0
  dc:	mov	w2, #0x22f                 	// #559
  e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	w9, #0x18                  	// #24
  4c:	mov	x19, x0
  50:	str	w8, [x0, #24]
  54:	umull	x0, w8, w9
  58:	bl	0 <_Znwm>
  5c:	str	x0, [x19, #8]
  60:	cbz	x20, 8c <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x8c>
  64:	mov	w8, #0x18                  	// #24
  68:	madd	x2, x21, x8, x20
  6c:	mov	x0, x19
  70:	mov	x1, x20
  74:	bl	0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
  78:	mov	x0, x20
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldr	x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	b	0 <_ZdlPv>
  8c:	ldr	w8, [x19, #24]
  90:	str	xzr, [x19, #16]
  94:	sub	w9, w8, #0x1
  98:	tst	w8, w9
  9c:	b.ne	12c <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x12c>  // b.any
  a0:	cbz	w8, 11c <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x11c>
  a4:	add	x8, x8, x8, lsl #1
  a8:	lsl	x8, x8, #3
  ac:	sub	x11, x8, #0x18
  b0:	cmp	x11, #0x18
  b4:	adrp	x9, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
  b8:	mov	x10, x0
  bc:	b.cc	108 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x108>  // b.lo, b.ul, b.last
  c0:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  c4:	movk	x10, #0xaaab
  c8:	umulh	x10, x11, x10
  cc:	ldr	q0, [x9]
  d0:	lsr	x10, x10, #4
  d4:	add	x11, x10, #0x1
  d8:	and	x12, x11, #0x1ffffffffffffffe
  dc:	mov	w10, #0x18                  	// #24
  e0:	madd	x10, x12, x10, x0
  e4:	mov	x13, x12
  e8:	mov	x14, x0
  ec:	str	q0, [x14]
  f0:	stur	q0, [x14, #24]
  f4:	subs	x13, x13, #0x2
  f8:	add	x14, x14, #0x30
  fc:	b.ne	ec <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0xec>  // b.any
 100:	cmp	x11, x12
 104:	b.eq	11c <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x11c>  // b.none
 108:	ldr	q0, [x9]
 10c:	add	x8, x0, x8
 110:	str	q0, [x10], #24
 114:	cmp	x8, x10
 118:	b.ne	110 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x110>  // b.any
 11c:	ldp	x20, x19, [sp, #32]
 120:	ldr	x21, [sp, #16]
 124:	ldp	x29, x30, [sp], #48
 128:	ret
 12c:	adrp	x0, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
 130:	adrp	x1, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
 134:	adrp	x3, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
 138:	add	x0, x0, #0x0
 13c:	add	x1, x1, #0x0
 140:	add	x3, x3, #0x0
 144:	mov	w2, #0x15c                 	// #348
 148:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #24]
  14:	str	xzr, [x0, #16]
  18:	sub	w9, w8, #0x1
  1c:	tst	w8, w9
  20:	b.ne	16c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x16c>  // b.any
  24:	mov	x19, x2
  28:	mov	x20, x1
  2c:	mov	x21, x0
  30:	cbz	w8, b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xb8>
  34:	ldr	x9, [x21, #8]
  38:	mov	w10, #0x18                  	// #24
  3c:	mul	x10, x8, x10
  40:	sub	x11, x10, #0x18
  44:	cmp	x11, #0x18
  48:	adrp	x10, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
  4c:	b.cs	58 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x58>  // b.hs, b.nlast
  50:	mov	x11, x9
  54:	b	a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xa0>
  58:	mov	x12, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  5c:	movk	x12, #0xaaab
  60:	umulh	x11, x11, x12
  64:	ldr	q0, [x10]
  68:	lsr	x11, x11, #4
  6c:	add	x12, x11, #0x1
  70:	and	x13, x12, #0x1ffffffffffffffe
  74:	mov	w11, #0x18                  	// #24
  78:	madd	x11, x13, x11, x9
  7c:	mov	x14, x13
  80:	mov	x15, x9
  84:	str	q0, [x15]
  88:	stur	q0, [x15, #24]
  8c:	subs	x14, x14, #0x2
  90:	add	x15, x15, #0x30
  94:	b.ne	84 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x84>  // b.any
  98:	cmp	x12, x13
  9c:	b.eq	b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xb8>  // b.none
  a0:	ldr	q0, [x10]
  a4:	mov	w10, #0x18                  	// #24
  a8:	madd	x8, x8, x10, x9
  ac:	str	q0, [x11], #24
  b0:	cmp	x8, x11
  b4:	b.ne	ac <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xac>  // b.any
  b8:	cmp	x20, x19
  bc:	b.ne	dc <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xdc>  // b.any
  c0:	ldp	x20, x19, [sp, #32]
  c4:	ldr	x21, [sp, #16]
  c8:	ldp	x29, x30, [sp], #48
  cc:	ret
  d0:	add	x20, x20, #0x18
  d4:	cmp	x19, x20
  d8:	b.eq	c0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xc0>  // b.none
  dc:	ldr	x8, [x20]
  e0:	cmn	x8, #0x10
  e4:	b.eq	100 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x100>  // b.none
  e8:	cmn	x8, #0x8
  ec:	b.ne	10c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x10c>  // b.any
  f0:	ldr	w8, [x20, #8]
  f4:	cmn	w8, #0x1
  f8:	b.ne	10c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x10c>  // b.any
  fc:	b	d0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xd0>
 100:	ldr	w8, [x20, #8]
 104:	cmn	w8, #0x2
 108:	b.eq	d0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xd0>  // b.none
 10c:	add	x2, x29, #0x18
 110:	mov	x0, x21
 114:	mov	x1, x20
 118:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 11c:	tbnz	w0, #0, 14c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x14c>
 120:	ldr	x8, [x29, #24]
 124:	ldr	x9, [x20]
 128:	str	x9, [x8]
 12c:	ldr	w9, [x20, #8]
 130:	str	w9, [x8, #8]
 134:	ldr	x9, [x20, #16]
 138:	str	x9, [x8, #16]
 13c:	ldr	w8, [x21, #16]
 140:	add	w8, w8, #0x1
 144:	str	w8, [x21, #16]
 148:	b	d0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xd0>
 14c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 150:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 154:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 158:	add	x0, x0, #0x0
 15c:	add	x1, x1, #0x0
 160:	add	x3, x3, #0x0
 164:	mov	w2, #0x17a                 	// #378
 168:	bl	0 <__assert_fail>
 16c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 170:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 174:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 178:	add	x0, x0, #0x0
 17c:	add	x1, x1, #0x0
 180:	add	x3, x3, #0x0
 184:	mov	w2, #0x15c                 	// #348
 188:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w12, [x0, #24]
   c:	cbz	w12, 38 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x38>
  10:	ldr	x8, [x1]
  14:	ldr	x9, [x0, #8]
  18:	cmn	x8, #0x10
  1c:	b.eq	44 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x44>  // b.none
  20:	cmn	x8, #0x8
  24:	b.ne	70 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x70>  // b.any
  28:	ldr	w10, [x1, #8]
  2c:	cmn	w10, #0x1
  30:	b.ne	74 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x74>  // b.any
  34:	b	50 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x50>
  38:	mov	x12, xzr
  3c:	mov	w0, wzr
  40:	b	15c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x15c>
  44:	ldr	w10, [x1, #8]
  48:	cmn	w10, #0x2
  4c:	b.ne	74 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x74>  // b.any
  50:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_>
  54:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_>
  58:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_>
  5c:	add	x0, x0, #0x0
  60:	add	x1, x1, #0x0
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x252                 	// #594
  6c:	bl	0 <__assert_fail>
  70:	ldr	w10, [x1, #8]
  74:	ubfx	x13, x8, #4, #28
  78:	mov	w14, #0x25                  	// #37
  7c:	mov	x15, #0xffffffffffffffff    	// #-1
  80:	eor	w13, w13, w8, lsr #9
  84:	mul	w14, w10, w14
  88:	eor	x16, x15, x14, lsl #32
  8c:	bfi	x14, x13, #32, #28
  90:	sub	w13, w12, #0x1
  94:	add	x12, x14, x16
  98:	eor	x12, x12, x12, lsr #22
  9c:	eor	x14, x15, x12, lsl #13
  a0:	add	x12, x12, x14
  a4:	eor	x12, x12, x12, lsr #8
  a8:	add	x12, x12, x12, lsl #3
  ac:	eor	x12, x12, x12, lsr #15
  b0:	eor	x15, x15, x12, lsl #27
  b4:	add	x12, x12, x15
  b8:	lsr	x15, x12, #31
  bc:	eor	w12, w15, w12
  c0:	mov	x11, xzr
  c4:	mov	w14, #0x1                   	// #1
  c8:	and	w16, w13, w12
  cc:	mov	w15, #0x18                  	// #24
  d0:	umaddl	x12, w16, w15, x9
  d4:	ldr	x17, [x12]
  d8:	mov	w16, w16
  dc:	cmp	x17, x8
  e0:	b.ne	f4 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0xf4>  // b.any
  e4:	madd	x18, x16, x15, x9
  e8:	ldr	w18, [x18, #8]
  ec:	cmp	w10, w18
  f0:	b.eq	158 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x158>  // b.none
  f4:	cmn	x17, #0x8
  f8:	b.ne	110 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x110>  // b.any
  fc:	madd	x17, x16, x15, x9
 100:	ldr	w17, [x17, #8]
 104:	cmn	w17, #0x1
 108:	b.eq	168 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x168>  // b.none
 10c:	b	12c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x12c>
 110:	cmn	x17, #0x10
 114:	b.ne	12c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x12c>  // b.any
 118:	madd	x17, x16, x15, x9
 11c:	ldr	w17, [x17, #8]
 120:	cmn	w17, #0x2
 124:	cset	w17, eq  // eq = none
 128:	b	130 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x130>
 12c:	mov	w17, wzr
 130:	cmp	x11, #0x0
 134:	eor	w17, w17, #0x1
 138:	cset	w18, ne  // ne = any
 13c:	orr	w17, w18, w17
 140:	add	w16, w16, w14
 144:	cmp	w17, #0x0
 148:	add	w14, w14, #0x1
 14c:	csel	x11, x11, x12, ne  // ne = any
 150:	and	w16, w16, w13
 154:	b	d0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0xd0>
 158:	mov	w0, #0x1                   	// #1
 15c:	str	x12, [x2]
 160:	ldp	x29, x30, [sp], #16
 164:	ret
 168:	cmp	x11, #0x0
 16c:	mov	w0, wzr
 170:	csel	x12, x12, x11, eq  // eq = none
 174:	b	15c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x15c>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	w8, [x0, #16]
  14:	ldr	w1, [x0, #24]
  18:	ldr	x9, [x0]
  1c:	mov	x20, x2
  20:	lsl	w10, w8, #2
  24:	add	w10, w10, #0x4
  28:	add	w11, w1, w1, lsl #1
  2c:	mov	x19, x0
  30:	add	x9, x9, #0x1
  34:	cmp	w10, w11
  38:	str	x9, [x0]
  3c:	b.cs	a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_+0xa0>  // b.hs, b.nlast
  40:	ldr	w9, [x19, #20]
  44:	mvn	w8, w8
  48:	add	w8, w1, w8
  4c:	sub	w8, w8, w9
  50:	cmp	w8, w1, lsr #3
  54:	b.ls	a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_+0xa4>  // b.plast
  58:	cbz	x3, c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_+0xc4>
  5c:	ldr	w8, [x19, #16]
  60:	add	w8, w8, #0x1
  64:	str	w8, [x19, #16]
  68:	ldr	x8, [x3]
  6c:	cmn	x8, #0x8
  70:	b.ne	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_+0x80>  // b.any
  74:	ldr	w8, [x3, #8]
  78:	cmn	w8, #0x1
  7c:	b.eq	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_+0x8c>  // b.none
  80:	ldr	w8, [x19, #20]
  84:	sub	w8, w8, #0x1
  88:	str	w8, [x19, #20]
  8c:	ldp	x20, x19, [sp, #32]
  90:	ldp	x29, x30, [sp, #16]
  94:	mov	x0, x3
  98:	add	sp, sp, #0x30
  9c:	ret
  a0:	lsl	w1, w1, #1
  a4:	mov	x0, x19
  a8:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_>
  ac:	add	x2, sp, #0x8
  b0:	mov	x0, x19
  b4:	mov	x1, x20
  b8:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_>
  bc:	ldr	x3, [sp, #8]
  c0:	cbnz	x3, 5c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_+0x5c>
  c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_>
  c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_>
  cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_>
  d0:	add	x0, x0, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x3, x3, #0x0
  dc:	mov	w2, #0x22f                 	// #559
  e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	w9, #0x18                  	// #24
  4c:	mov	x19, x0
  50:	str	w8, [x0, #24]
  54:	umull	x0, w8, w9
  58:	bl	0 <_Znwm>
  5c:	str	x0, [x19, #8]
  60:	cbz	x20, 8c <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x8c>
  64:	mov	w8, #0x18                  	// #24
  68:	madd	x2, x21, x8, x20
  6c:	mov	x0, x19
  70:	mov	x1, x20
  74:	bl	0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
  78:	mov	x0, x20
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldr	x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	b	0 <_ZdlPv>
  8c:	ldr	w8, [x19, #24]
  90:	str	xzr, [x19, #16]
  94:	sub	w9, w8, #0x1
  98:	tst	w8, w9
  9c:	b.ne	12c <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x12c>  // b.any
  a0:	cbz	w8, 11c <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x11c>
  a4:	add	x8, x8, x8, lsl #1
  a8:	lsl	x8, x8, #3
  ac:	sub	x11, x8, #0x18
  b0:	cmp	x11, #0x18
  b4:	adrp	x9, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
  b8:	mov	x10, x0
  bc:	b.cc	108 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x108>  // b.lo, b.ul, b.last
  c0:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  c4:	movk	x10, #0xaaab
  c8:	umulh	x10, x11, x10
  cc:	ldr	q0, [x9]
  d0:	lsr	x10, x10, #4
  d4:	add	x11, x10, #0x1
  d8:	and	x12, x11, #0x1ffffffffffffffe
  dc:	mov	w10, #0x18                  	// #24
  e0:	madd	x10, x12, x10, x0
  e4:	mov	x13, x12
  e8:	mov	x14, x0
  ec:	str	q0, [x14]
  f0:	stur	q0, [x14, #24]
  f4:	subs	x13, x13, #0x2
  f8:	add	x14, x14, #0x30
  fc:	b.ne	ec <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0xec>  // b.any
 100:	cmp	x11, x12
 104:	b.eq	11c <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x11c>  // b.none
 108:	ldr	q0, [x9]
 10c:	add	x8, x0, x8
 110:	str	q0, [x10], #24
 114:	cmp	x8, x10
 118:	b.ne	110 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x110>  // b.any
 11c:	ldp	x20, x19, [sp, #32]
 120:	ldr	x21, [sp, #16]
 124:	ldp	x29, x30, [sp], #48
 128:	ret
 12c:	adrp	x0, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
 130:	adrp	x1, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
 134:	adrp	x3, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
 138:	add	x0, x0, #0x0
 13c:	add	x1, x1, #0x0
 140:	add	x3, x3, #0x0
 144:	mov	w2, #0x15c                 	// #348
 148:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #24]
  14:	str	xzr, [x0, #16]
  18:	sub	w9, w8, #0x1
  1c:	tst	w8, w9
  20:	b.ne	16c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x16c>  // b.any
  24:	mov	x19, x2
  28:	mov	x20, x1
  2c:	mov	x21, x0
  30:	cbz	w8, b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xb8>
  34:	ldr	x9, [x21, #8]
  38:	mov	w10, #0x18                  	// #24
  3c:	mul	x10, x8, x10
  40:	sub	x11, x10, #0x18
  44:	cmp	x11, #0x18
  48:	adrp	x10, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
  4c:	b.cs	58 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x58>  // b.hs, b.nlast
  50:	mov	x11, x9
  54:	b	a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xa0>
  58:	mov	x12, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  5c:	movk	x12, #0xaaab
  60:	umulh	x11, x11, x12
  64:	ldr	q0, [x10]
  68:	lsr	x11, x11, #4
  6c:	add	x12, x11, #0x1
  70:	and	x13, x12, #0x1ffffffffffffffe
  74:	mov	w11, #0x18                  	// #24
  78:	madd	x11, x13, x11, x9
  7c:	mov	x14, x13
  80:	mov	x15, x9
  84:	str	q0, [x15]
  88:	stur	q0, [x15, #24]
  8c:	subs	x14, x14, #0x2
  90:	add	x15, x15, #0x30
  94:	b.ne	84 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x84>  // b.any
  98:	cmp	x12, x13
  9c:	b.eq	b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xb8>  // b.none
  a0:	ldr	q0, [x10]
  a4:	mov	w10, #0x18                  	// #24
  a8:	madd	x8, x8, x10, x9
  ac:	str	q0, [x11], #24
  b0:	cmp	x8, x11
  b4:	b.ne	ac <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xac>  // b.any
  b8:	cmp	x20, x19
  bc:	b.ne	dc <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xdc>  // b.any
  c0:	ldp	x20, x19, [sp, #32]
  c4:	ldr	x21, [sp, #16]
  c8:	ldp	x29, x30, [sp], #48
  cc:	ret
  d0:	add	x20, x20, #0x18
  d4:	cmp	x19, x20
  d8:	b.eq	c0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xc0>  // b.none
  dc:	ldr	x8, [x20]
  e0:	cmn	x8, #0x10
  e4:	b.eq	100 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x100>  // b.none
  e8:	cmn	x8, #0x8
  ec:	b.ne	10c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x10c>  // b.any
  f0:	ldr	w8, [x20, #8]
  f4:	cmn	w8, #0x1
  f8:	b.ne	10c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x10c>  // b.any
  fc:	b	d0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xd0>
 100:	ldr	w8, [x20, #8]
 104:	cmn	w8, #0x2
 108:	b.eq	d0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xd0>  // b.none
 10c:	add	x2, x29, #0x18
 110:	mov	x0, x21
 114:	mov	x1, x20
 118:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 11c:	tbnz	w0, #0, 14c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x14c>
 120:	ldr	x8, [x29, #24]
 124:	ldr	x9, [x20]
 128:	str	x9, [x8]
 12c:	ldr	w9, [x20, #8]
 130:	str	w9, [x8, #8]
 134:	ldr	x9, [x20, #16]
 138:	str	x9, [x8, #16]
 13c:	ldr	w8, [x21, #16]
 140:	add	w8, w8, #0x1
 144:	str	w8, [x21, #16]
 148:	b	d0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xd0>
 14c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 150:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 154:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 158:	add	x0, x0, #0x0
 15c:	add	x1, x1, #0x0
 160:	add	x3, x3, #0x0
 164:	mov	w2, #0x17a                 	// #378
 168:	bl	0 <__assert_fail>
 16c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 170:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 174:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 178:	add	x0, x0, #0x0
 17c:	add	x1, x1, #0x0
 180:	add	x3, x3, #0x0
 184:	mov	w2, #0x15c                 	// #348
 188:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10VarDefInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10VarDefInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	x8, x1, #0x18
  14:	cmp	x1, #0x0
  18:	csel	x22, xzr, x8, eq  // eq = none
  1c:	ldr	w20, [x22, #48]
  20:	ldr	x21, [x22, #32]
  24:	mov	x0, x2
  28:	mov	x19, x2
  2c:	mov	x1, x20
  30:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
  34:	mov	x0, x19
  38:	mov	x1, x21
  3c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  40:	cbz	w20, 60 <_ZNK4llvm10FoldingSetINS_10VarDefInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE+0x60>
  44:	add	x21, x22, #0x38
  48:	lsl	x20, x20, #3
  4c:	ldr	x1, [x21], #8
  50:	mov	x0, x19
  54:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  58:	subs	x20, x20, #0x8
  5c:	b.ne	4c <_ZNK4llvm10FoldingSetINS_10VarDefInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE+0x4c>  // b.any
  60:	ldp	x20, x19, [sp, #32]
  64:	ldp	x22, x21, [sp, #16]
  68:	ldp	x29, x30, [sp], #48
  6c:	ret

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10VarDefInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10VarDefInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	sub	x8, x1, #0x18
  18:	cmp	x1, #0x0
  1c:	csel	x23, xzr, x8, eq  // eq = none
  20:	ldr	w21, [x23, #48]
  24:	ldr	x22, [x23, #32]
  28:	mov	x0, x4
  2c:	mov	x19, x4
  30:	mov	x1, x21
  34:	mov	x20, x2
  38:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
  3c:	mov	x0, x19
  40:	mov	x1, x22
  44:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  48:	cbz	w21, 68 <_ZNK4llvm10FoldingSetINS_10VarDefInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_+0x68>
  4c:	add	x22, x23, #0x38
  50:	lsl	x21, x21, #3
  54:	ldr	x1, [x22], #8
  58:	mov	x0, x19
  5c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  60:	subs	x21, x21, #0x8
  64:	b.ne	54 <_ZNK4llvm10FoldingSetINS_10VarDefInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_+0x54>  // b.any
  68:	mov	x0, x19
  6c:	mov	x1, x20
  70:	ldp	x20, x19, [sp, #48]
  74:	ldp	x22, x21, [sp, #32]
  78:	ldr	x23, [sp, #16]
  7c:	ldp	x29, x30, [sp], #64
  80:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10VarDefInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10VarDefInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	x8, x1, #0x18
  14:	cmp	x1, #0x0
  18:	csel	x22, xzr, x8, eq  // eq = none
  1c:	ldr	w20, [x22, #48]
  20:	ldr	x21, [x22, #32]
  24:	mov	x0, x2
  28:	mov	x19, x2
  2c:	mov	x1, x20
  30:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
  34:	mov	x0, x19
  38:	mov	x1, x21
  3c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  40:	cbz	w20, 60 <_ZNK4llvm10FoldingSetINS_10VarDefInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE+0x60>
  44:	add	x21, x22, #0x38
  48:	lsl	x20, x20, #3
  4c:	ldr	x1, [x21], #8
  50:	mov	x0, x19
  54:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  58:	subs	x20, x20, #0x8
  5c:	b.ne	4c <_ZNK4llvm10FoldingSetINS_10VarDefInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE+0x4c>  // b.any
  60:	mov	x0, x19
  64:	ldp	x20, x19, [sp, #32]
  68:	ldp	x22, x21, [sp, #16]
  6c:	ldp	x29, x30, [sp], #48
  70:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZN4llvm6RecordC2EPNS_4InitENS_8ArrayRefINS_5SMLocEEERNS_12RecordKeeperEbb:

0000000000000000 <_ZN4llvm6RecordC2EPNS_4InitENS_8ArrayRefINS_5SMLocEEERNS_12RecordKeeperEbb>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	adrp	x8, 0 <_ZN4llvm6RecordC2EPNS_4InitENS_8ArrayRefINS_5SMLocEEERNS_12RecordKeeperEbb>
  1c:	ldr	d0, [x8]
  20:	str	x1, [x0]
  24:	add	x1, x0, #0x18
  28:	sbfx	x24, x3, #0, #61
  2c:	mov	w19, w6
  30:	mov	w20, w5
  34:	mov	x22, x4
  38:	mov	x25, x3
  3c:	mov	x23, x2
  40:	mov	x21, x0
  44:	str	x1, [x0, #8]!
  48:	cmp	x24, #0x5
  4c:	str	d0, [x21, #16]
  50:	b.cc	60 <_ZN4llvm6RecordC2EPNS_4InitENS_8ArrayRefINS_5SMLocEEERNS_12RecordKeeperEbb+0x60>  // b.lo, b.ul, b.last
  54:	mov	w3, #0x8                   	// #8
  58:	mov	x2, x24
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	cbz	x25, 7c <_ZN4llvm6RecordC2EPNS_4InitENS_8ArrayRefINS_5SMLocEEERNS_12RecordKeeperEbb+0x7c>
  64:	ldr	x8, [x21, #8]
  68:	ldr	w9, [x21, #16]
  6c:	lsl	x2, x25, #3
  70:	mov	x1, x23
  74:	add	x0, x8, x9, lsl #3
  78:	bl	0 <memcpy>
  7c:	ldp	w8, w9, [x21, #16]
  80:	add	x8, x24, x8
  84:	cmp	x8, x9
  88:	b.hi	104 <_ZN4llvm6RecordC2EPNS_4InitENS_8ArrayRefINS_5SMLocEEERNS_12RecordKeeperEbb+0x104>  // b.pmore
  8c:	str	w8, [x21, #16]
  90:	mov	x8, x21
  94:	mov	x9, x21
  98:	str	x22, [x8, #104]!
  9c:	str	x8, [x9, #88]!
  a0:	adrp	x8, 420 <_ZN4llvm6Record6LastIDE>
  a4:	ldr	x8, [x8]
  a8:	mov	x10, x21
  ac:	movi	v0.2d, #0x0
  b0:	str	x9, [x10, #72]!
  b4:	str	d0, [x21, #64]
  b8:	str	d0, [x21, #80]
  bc:	str	d0, [x21, #96]
  c0:	str	xzr, [x21, #112]
  c4:	str	x10, [x21, #56]
  c8:	ldr	w9, [x8]
  cc:	and	w10, w20, #0x1
  d0:	and	w11, w19, #0x1
  d4:	mov	x0, x21
  d8:	add	w12, w9, #0x1
  dc:	str	w12, [x8]
  e0:	str	w9, [x21, #120]
  e4:	strb	w10, [x21, #124]
  e8:	strb	w11, [x21, #125]
  ec:	ldp	x20, x19, [sp, #64]
  f0:	ldp	x22, x21, [sp, #48]
  f4:	ldp	x24, x23, [sp, #32]
  f8:	ldr	x25, [sp, #16]
  fc:	ldp	x29, x30, [sp], #80
 100:	b	c8ac <_ZN4llvm6Record9checkNameEv>
 104:	adrp	x0, 0 <_ZN4llvm6RecordC2EPNS_4InitENS_8ArrayRefINS_5SMLocEEERNS_12RecordKeeperEbb>
 108:	adrp	x1, 0 <_ZN4llvm6RecordC2EPNS_4InitENS_8ArrayRefINS_5SMLocEEERNS_12RecordKeeperEbb>
 10c:	adrp	x3, 0 <_ZN4llvm6RecordC2EPNS_4InitENS_8ArrayRefINS_5SMLocEEERNS_12RecordKeeperEbb>
 110:	add	x0, x0, #0x0
 114:	add	x1, x1, #0x0
 118:	add	x3, x3, #0x0
 11c:	mov	w2, #0x43                  	// #67
 120:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w11, [x0, #24]
   c:	cbz	w11, ac <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xac>
  10:	ldp	x8, x10, [x1]
  14:	ldr	x9, [x0, #8]
  18:	cmn	x8, #0x8
  1c:	b.ne	28 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x28>  // b.any
  20:	cmn	x10, #0x8
  24:	b.eq	130 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x130>  // b.none
  28:	cmn	x8, #0x10
  2c:	b.ne	38 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x38>  // b.any
  30:	cmn	x10, #0x10
  34:	b.eq	130 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x130>  // b.none
  38:	ubfx	x13, x8, #4, #28
  3c:	ubfx	x14, x10, #4, #28
  40:	mov	x15, #0xffffffffffffffff    	// #-1
  44:	sub	w12, w11, #0x1
  48:	eor	w11, w13, w8, lsr #9
  4c:	eor	w13, w14, w10, lsr #9
  50:	eor	x14, x15, x13, lsl #32
  54:	bfi	x13, x11, #32, #28
  58:	add	x11, x13, x14
  5c:	eor	x11, x11, x11, lsr #22
  60:	eor	x13, x15, x11, lsl #13
  64:	add	x11, x11, x13
  68:	eor	x11, x11, x11, lsr #8
  6c:	add	x11, x11, x11, lsl #3
  70:	eor	x11, x11, x11, lsr #15
  74:	eor	x13, x15, x11, lsl #27
  78:	add	x11, x11, x13
  7c:	lsr	x13, x11, #31
  80:	eor	w11, w13, w11
  84:	and	w14, w12, w11
  88:	mov	w13, #0x18                  	// #24
  8c:	umaddl	x11, w14, w13, x9
  90:	ldp	x16, x18, [x11]
  94:	cmp	x8, x16
  98:	b.ne	c0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xc0>  // b.any
  9c:	cmp	x10, x18
  a0:	b.ne	c0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xc0>  // b.any
  a4:	mov	w0, #0x1                   	// #1
  a8:	b	b4 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xb4>
  ac:	mov	x11, xzr
  b0:	mov	w0, wzr
  b4:	str	x11, [x2]
  b8:	ldp	x29, x30, [sp], #16
  bc:	ret
  c0:	mov	x15, xzr
  c4:	mov	w1, #0x1                   	// #1
  c8:	mov	x17, #0xfffffffffffffff0    	// #-16
  cc:	mov	w0, #0x1                   	// #1
  d0:	cmn	x16, #0x8
  d4:	b.ne	e0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xe0>  // b.any
  d8:	cmn	x18, #0x8
  dc:	b.eq	120 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x120>  // b.none
  e0:	cmn	x18, #0x10
  e4:	add	w14, w14, w1
  e8:	ccmp	x16, x17, #0x0, eq  // eq = none
  ec:	and	w14, w14, w12
  f0:	ccmp	x15, #0x0, #0x0, eq  // eq = none
  f4:	csel	x15, x15, x11, ne  // ne = any
  f8:	umaddl	x11, w14, w13, x9
  fc:	ldp	x16, x18, [x11]
 100:	add	w3, w1, #0x1
 104:	mov	w1, w3
 108:	cmp	x8, x16
 10c:	b.ne	d0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xd0>  // b.any
 110:	cmp	x10, x18
 114:	mov	w1, w3
 118:	b.eq	b4 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xb4>  // b.none
 11c:	b	d0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xd0>
 120:	cmp	x15, #0x0
 124:	mov	w0, wzr
 128:	csel	x11, x11, x15, eq  // eq = none
 12c:	b	b4 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xb4>
 130:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_>
 134:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_>
 138:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_>
 13c:	add	x0, x0, #0x0
 140:	add	x1, x1, #0x0
 144:	add	x3, x3, #0x0
 148:	mov	w2, #0x252                 	// #594
 14c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	w8, [x0, #16]
  14:	ldr	w1, [x0, #24]
  18:	ldr	x9, [x0]
  1c:	mov	x20, x2
  20:	lsl	w10, w8, #2
  24:	add	w10, w10, #0x4
  28:	add	w11, w1, w1, lsl #1
  2c:	mov	x19, x0
  30:	add	x9, x9, #0x1
  34:	cmp	w10, w11
  38:	str	x9, [x0]
  3c:	b.cs	a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_+0xa0>  // b.hs, b.nlast
  40:	ldr	w9, [x19, #20]
  44:	mvn	w8, w8
  48:	add	w8, w1, w8
  4c:	sub	w8, w8, w9
  50:	cmp	w8, w1, lsr #3
  54:	b.ls	a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_+0xa4>  // b.plast
  58:	cbz	x3, c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_+0xc4>
  5c:	ldr	w8, [x19, #16]
  60:	add	w8, w8, #0x1
  64:	str	w8, [x19, #16]
  68:	ldr	x8, [x3]
  6c:	cmn	x8, #0x8
  70:	b.ne	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_+0x80>  // b.any
  74:	ldr	x8, [x3, #8]
  78:	cmn	x8, #0x8
  7c:	b.eq	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_+0x8c>  // b.none
  80:	ldr	w8, [x19, #20]
  84:	sub	w8, w8, #0x1
  88:	str	w8, [x19, #20]
  8c:	ldp	x20, x19, [sp, #32]
  90:	ldp	x29, x30, [sp, #16]
  94:	mov	x0, x3
  98:	add	sp, sp, #0x30
  9c:	ret
  a0:	lsl	w1, w1, #1
  a4:	mov	x0, x19
  a8:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_>
  ac:	add	x2, sp, #0x8
  b0:	mov	x0, x19
  b4:	mov	x1, x20
  b8:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_>
  bc:	ldr	x3, [sp, #8]
  c0:	cbnz	x3, 5c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_+0x5c>
  c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_>
  c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_>
  cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_>
  d0:	add	x0, x0, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x3, x3, #0x0
  dc:	mov	w2, #0x22f                 	// #559
  e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	w9, #0x18                  	// #24
  4c:	mov	x19, x0
  50:	str	w8, [x0, #24]
  54:	umull	x0, w8, w9
  58:	bl	0 <_Znwm>
  5c:	str	x0, [x19, #8]
  60:	cbz	x20, 8c <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x8c>
  64:	mov	w8, #0x18                  	// #24
  68:	madd	x2, x21, x8, x20
  6c:	mov	x0, x19
  70:	mov	x1, x20
  74:	bl	0 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
  78:	mov	x0, x20
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldr	x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	b	0 <_ZdlPv>
  8c:	ldr	w8, [x19, #24]
  90:	str	xzr, [x19, #16]
  94:	sub	w9, w8, #0x1
  98:	tst	w8, w9
  9c:	b.ne	130 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x130>  // b.any
  a0:	cbz	w8, 120 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x120>
  a4:	add	x8, x8, x8, lsl #1
  a8:	lsl	x8, x8, #3
  ac:	sub	x10, x8, #0x18
  b0:	cmp	x10, #0x18
  b4:	mov	x9, x0
  b8:	b.cc	108 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x108>  // b.lo, b.ul, b.last
  bc:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  c0:	movk	x9, #0xaaab
  c4:	umulh	x9, x10, x9
  c8:	lsr	x9, x9, #4
  cc:	add	x10, x9, #0x1
  d0:	mov	w12, #0x18                  	// #24
  d4:	mov	x13, #0xfffffffffffffff8    	// #-8
  d8:	and	x11, x10, #0x1ffffffffffffffe
  dc:	madd	x9, x11, x12, x0
  e0:	dup	v0.2d, x13
  e4:	mov	x12, x11
  e8:	mov	x13, x0
  ec:	str	q0, [x13]
  f0:	stur	q0, [x13, #24]
  f4:	subs	x12, x12, #0x2
  f8:	add	x13, x13, #0x30
  fc:	b.ne	ec <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0xec>  // b.any
 100:	cmp	x10, x11
 104:	b.eq	120 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x120>  // b.none
 108:	mov	x10, #0xfffffffffffffff8    	// #-8
 10c:	add	x8, x0, x8
 110:	dup	v0.2d, x10
 114:	str	q0, [x9], #24
 118:	cmp	x8, x9
 11c:	b.ne	114 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x114>  // b.any
 120:	ldp	x20, x19, [sp, #32]
 124:	ldr	x21, [sp, #16]
 128:	ldp	x29, x30, [sp], #48
 12c:	ret
 130:	adrp	x0, 0 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 134:	adrp	x1, 0 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 138:	adrp	x3, 0 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 13c:	add	x0, x0, #0x0
 140:	add	x1, x1, #0x0
 144:	add	x3, x3, #0x0
 148:	mov	w2, #0x15c                 	// #348
 14c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #24]
  14:	str	xzr, [x0, #16]
  18:	sub	w9, w8, #0x1
  1c:	tst	w8, w9
  20:	b.ne	160 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0x160>  // b.any
  24:	mov	x19, x2
  28:	mov	x20, x1
  2c:	mov	x21, x0
  30:	cbz	w8, 100 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0x100>
  34:	ldr	x9, [x21, #8]
  38:	mov	w10, #0x18                  	// #24
  3c:	mul	x10, x8, x10
  40:	sub	x10, x10, #0x18
  44:	cmp	x10, #0x18
  48:	b.cs	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0x54>  // b.hs, b.nlast
  4c:	mov	x10, x9
  50:	b	a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0xa0>
  54:	mov	x11, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  58:	movk	x11, #0xaaab
  5c:	umulh	x10, x10, x11
  60:	lsr	x10, x10, #4
  64:	add	x11, x10, #0x1
  68:	mov	w13, #0x18                  	// #24
  6c:	mov	x14, #0xfffffffffffffff8    	// #-8
  70:	and	x12, x11, #0x1ffffffffffffffe
  74:	madd	x10, x12, x13, x9
  78:	dup	v0.2d, x14
  7c:	mov	x13, x12
  80:	mov	x14, x9
  84:	str	q0, [x14]
  88:	stur	q0, [x14, #24]
  8c:	subs	x13, x13, #0x2
  90:	add	x14, x14, #0x30
  94:	b.ne	84 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0x84>  // b.any
  98:	cmp	x11, x12
  9c:	b.eq	100 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0x100>  // b.none
  a0:	mov	w11, #0x18                  	// #24
  a4:	mov	x12, #0xfffffffffffffff8    	// #-8
  a8:	madd	x8, x8, x11, x9
  ac:	dup	v0.2d, x12
  b0:	str	q0, [x10], #24
  b4:	cmp	x8, x10
  b8:	b.ne	b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0xb0>  // b.any
  bc:	b	100 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0x100>
  c0:	add	x2, x29, #0x18
  c4:	mov	x0, x21
  c8:	mov	x1, x20
  cc:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_>
  d0:	tbnz	w0, #0, 140 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0x140>
  d4:	ldr	x8, [x29, #24]
  d8:	ldr	x9, [x20]
  dc:	str	x9, [x8]
  e0:	ldr	x9, [x20, #8]
  e4:	str	x9, [x8, #8]
  e8:	ldr	x9, [x20, #16]
  ec:	str	x9, [x8, #16]
  f0:	ldr	w8, [x21, #16]
  f4:	add	w8, w8, #0x1
  f8:	str	w8, [x21, #16]
  fc:	add	x20, x20, #0x18
 100:	cmp	x20, x19
 104:	b.eq	130 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0x130>  // b.none
 108:	ldp	x9, x8, [x20]
 10c:	cmn	x9, #0x8
 110:	b.ne	11c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0x11c>  // b.any
 114:	cmn	x8, #0x8
 118:	b.eq	fc <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0xfc>  // b.none
 11c:	cmn	x9, #0x10
 120:	b.ne	c0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0xc0>  // b.any
 124:	cmn	x8, #0x10
 128:	b.eq	fc <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0xfc>  // b.none
 12c:	b	c0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0xc0>
 130:	ldp	x20, x19, [sp, #32]
 134:	ldr	x21, [sp, #16]
 138:	ldp	x29, x30, [sp], #48
 13c:	ret
 140:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_>
 144:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_>
 148:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_>
 14c:	add	x0, x0, #0x0
 150:	add	x1, x1, #0x0
 154:	add	x3, x3, #0x0
 158:	mov	w2, #0x17a                 	// #378
 15c:	bl	0 <__assert_fail>
 160:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_>
 164:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_>
 168:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_>
 16c:	add	x0, x0, #0x0
 170:	add	x1, x1, #0x0
 174:	add	x3, x3, #0x0
 178:	mov	w2, #0x15c                 	// #348
 17c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10CondOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10CondOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	sub	x8, x1, #0x18
  18:	cmp	x1, #0x0
  1c:	csel	x21, xzr, x8, eq  // eq = none
  20:	ldr	x1, [x21, #40]
  24:	ldr	w22, [x21, #32]
  28:	mov	x0, x2
  2c:	mov	x19, x2
  30:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  34:	cbz	w22, 6c <_ZNK4llvm10FoldingSetINS_10CondOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE+0x6c>
  38:	add	x21, x21, #0x30
  3c:	lsl	x22, x22, #3
  40:	mov	x20, xzr
  44:	add	x23, x21, x22
  48:	ldr	x1, [x21, x20]
  4c:	mov	x0, x19
  50:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  54:	ldr	x1, [x23, x20]
  58:	mov	x0, x19
  5c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  60:	add	x20, x20, #0x8
  64:	cmp	x22, x20
  68:	b.ne	48 <_ZNK4llvm10FoldingSetINS_10CondOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE+0x48>  // b.any
  6c:	ldp	x20, x19, [sp, #48]
  70:	ldp	x22, x21, [sp, #32]
  74:	ldr	x23, [sp, #16]
  78:	ldp	x29, x30, [sp], #64
  7c:	ret

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10CondOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10CondOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	sub	x8, x1, #0x18
  18:	cmp	x1, #0x0
  1c:	csel	x22, xzr, x8, eq  // eq = none
  20:	ldr	x1, [x22, #40]
  24:	ldr	w23, [x22, #32]
  28:	mov	x0, x4
  2c:	mov	x19, x4
  30:	mov	x20, x2
  34:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  38:	cbz	w23, 70 <_ZNK4llvm10FoldingSetINS_10CondOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_+0x70>
  3c:	add	x22, x22, #0x30
  40:	lsl	x23, x23, #3
  44:	mov	x21, xzr
  48:	add	x24, x22, x23
  4c:	ldr	x1, [x22, x21]
  50:	mov	x0, x19
  54:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  58:	ldr	x1, [x24, x21]
  5c:	mov	x0, x19
  60:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  64:	add	x21, x21, #0x8
  68:	cmp	x23, x21
  6c:	b.ne	4c <_ZNK4llvm10FoldingSetINS_10CondOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_+0x4c>  // b.any
  70:	mov	x0, x19
  74:	mov	x1, x20
  78:	ldp	x20, x19, [sp, #48]
  7c:	ldp	x22, x21, [sp, #32]
  80:	ldp	x24, x23, [sp, #16]
  84:	ldp	x29, x30, [sp], #64
  88:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10CondOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10CondOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	sub	x8, x1, #0x18
  18:	cmp	x1, #0x0
  1c:	csel	x21, xzr, x8, eq  // eq = none
  20:	ldr	x1, [x21, #40]
  24:	ldr	w22, [x21, #32]
  28:	mov	x0, x2
  2c:	mov	x19, x2
  30:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  34:	cbz	w22, 6c <_ZNK4llvm10FoldingSetINS_10CondOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE+0x6c>
  38:	add	x21, x21, #0x30
  3c:	lsl	x22, x22, #3
  40:	mov	x20, xzr
  44:	add	x23, x21, x22
  48:	ldr	x1, [x21, x20]
  4c:	mov	x0, x19
  50:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  54:	ldr	x1, [x23, x20]
  58:	mov	x0, x19
  5c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  60:	add	x20, x20, #0x8
  64:	cmp	x22, x20
  68:	b.ne	48 <_ZNK4llvm10FoldingSetINS_10CondOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE+0x48>  // b.any
  6c:	mov	x0, x19
  70:	ldp	x20, x19, [sp, #48]
  74:	ldp	x22, x21, [sp, #32]
  78:	ldr	x23, [sp, #16]
  7c:	ldp	x29, x30, [sp], #64
  80:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_7DagInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_7DagInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	sub	x8, x1, #0x18
   4:	cmp	x1, #0x0
   8:	csel	x9, xzr, x8, eq  // eq = none
   c:	ldp	x1, x8, [x9, #32]
  10:	ldp	w4, w6, [x9, #48]
  14:	add	x3, x9, #0x38
  18:	mov	x0, x2
  1c:	mov	x2, x8
  20:	add	x5, x3, x4, lsl #3
  24:	b	0 <_ZNK4llvm10FoldingSetINS_7DagInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_7DagInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_7DagInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	sub	x8, x1, #0x18
  10:	cmp	x1, #0x0
  14:	csel	x8, xzr, x8, eq  // eq = none
  18:	mov	x19, x4
  1c:	ldp	w4, w6, [x8, #48]
  20:	mov	x20, x2
  24:	ldp	x1, x2, [x8, #32]
  28:	add	x3, x8, #0x38
  2c:	add	x5, x3, x4, lsl #3
  30:	mov	x0, x19
  34:	bl	0 <_ZNK4llvm10FoldingSetINS_7DagInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>
  38:	mov	x0, x19
  3c:	mov	x1, x20
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_7DagInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_7DagInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	sub	x8, x1, #0x18
  10:	cmp	x1, #0x0
  14:	csel	x8, xzr, x8, eq  // eq = none
  18:	ldp	w4, w6, [x8, #48]
  1c:	mov	x19, x2
  20:	ldp	x1, x2, [x8, #32]
  24:	add	x3, x8, #0x38
  28:	add	x5, x3, x4, lsl #3
  2c:	mov	x0, x19
  30:	bl	0 <_ZNK4llvm10FoldingSetINS_7DagInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>
  34:	mov	x0, x19
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	114 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x114>  // b.plast
  54:	cbz	x3, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x1a4>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldr	x8, [x3]
  68:	cmn	x8, #0x8
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x1a4>
  a0:	ldr	x8, [x20]
  a4:	orr	x9, x8, #0x8
  a8:	cmn	x9, #0x8
  ac:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x1c4>  // b.none
  b0:	ldr	x9, [x19, #8]
  b4:	ubfx	x11, x8, #4, #28
  b8:	eor	w11, w11, w8, lsr #9
  bc:	sub	w10, w10, #0x1
  c0:	and	w11, w11, w10
  c4:	add	x3, x9, w11, uxtw #4
  c8:	ldr	x13, [x3]
  cc:	cmp	x13, x8
  d0:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x54>  // b.none
  d4:	mov	x12, xzr
  d8:	mov	w15, #0x1                   	// #1
  dc:	mov	x14, #0xfffffffffffffff0    	// #-16
  e0:	cmn	x13, #0x8
  e4:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x198>  // b.none
  e8:	cmp	x12, #0x0
  ec:	add	w11, w11, w15
  f0:	ccmp	x13, x14, #0x0, eq  // eq = none
  f4:	and	w11, w11, w10
  f8:	csel	x12, x12, x3, ne  // ne = any
  fc:	add	x3, x9, w11, uxtw #4
 100:	ldr	x13, [x3]
 104:	add	w15, w15, #0x1
 108:	cmp	x13, x8
 10c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x54>  // b.none
 110:	b	e0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0xe0>
 114:	mov	x0, x19
 118:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 11c:	ldr	w10, [x19, #24]
 120:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x1a4>
 124:	ldr	x8, [x20]
 128:	orr	x9, x8, #0x8
 12c:	cmn	x9, #0x8
 130:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x1c4>  // b.none
 134:	ldr	x9, [x19, #8]
 138:	ubfx	x11, x8, #4, #28
 13c:	eor	w11, w11, w8, lsr #9
 140:	sub	w10, w10, #0x1
 144:	and	w11, w11, w10
 148:	add	x3, x9, w11, uxtw #4
 14c:	ldr	x13, [x3]
 150:	cmp	x13, x8
 154:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x54>  // b.none
 158:	mov	x12, xzr
 15c:	mov	w15, #0x1                   	// #1
 160:	mov	x14, #0xfffffffffffffff0    	// #-16
 164:	cmn	x13, #0x8
 168:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x198>  // b.none
 16c:	cmp	x12, #0x0
 170:	add	w11, w11, w15
 174:	ccmp	x13, x14, #0x0, eq  // eq = none
 178:	and	w11, w11, w10
 17c:	csel	x12, x12, x3, ne  // ne = any
 180:	add	x3, x9, w11, uxtw #4
 184:	ldr	x13, [x3]
 188:	add	w15, w15, #0x1
 18c:	cmp	x13, x8
 190:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x54>  // b.none
 194:	b	164 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x164>
 198:	cmp	x12, #0x0
 19c:	csel	x3, x3, x12, eq  // eq = none
 1a0:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x54>
 1a4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 1a8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 1ac:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 1b0:	add	x0, x0, #0x0
 1b4:	add	x1, x1, #0x0
 1b8:	add	x3, x3, #0x0
 1bc:	mov	w2, #0x22f                 	// #559
 1c0:	bl	0 <__assert_fail>
 1c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 1c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 1cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 1d0:	add	x0, x0, #0x0
 1d4:	add	x1, x1, #0x0
 1d8:	add	x3, x3, #0x0
 1dc:	mov	w2, #0x252                 	// #594
 1e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x19, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x19, #8]
  5c:	cbz	x20, 84 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0x84>
  60:	add	x2, x20, x21, lsl #4
  64:	mov	x0, x19
  68:	mov	x1, x20
  6c:	bl	0 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj>
  70:	mov	x0, x20
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	ldr	w8, [x19, #24]
  88:	str	xzr, [x19, #16]
  8c:	sub	w9, w8, #0x1
  90:	tst	w8, w9
  94:	b.ne	108 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0x108>  // b.any
  98:	cbz	w8, f8 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0xf8>
  9c:	lsl	x8, x8, #4
  a0:	subs	x9, x8, #0x10
  a4:	b.eq	e0 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0xe0>  // b.none
  a8:	lsr	x9, x9, #4
  ac:	add	x10, x9, #0x1
  b0:	and	x11, x10, #0x1ffffffffffffffe
  b4:	add	x12, x0, #0x10
  b8:	add	x9, x0, x11, lsl #4
  bc:	mov	x13, #0xfffffffffffffff8    	// #-8
  c0:	mov	x14, x11
  c4:	stur	x13, [x12, #-16]
  c8:	str	x13, [x12], #32
  cc:	subs	x14, x14, #0x2
  d0:	b.ne	c4 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0xc4>  // b.any
  d4:	cmp	x10, x11
  d8:	b.ne	e4 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0xe4>  // b.any
  dc:	b	f8 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0xf8>
  e0:	mov	x9, x0
  e4:	add	x8, x0, x8
  e8:	mov	x10, #0xfffffffffffffff8    	// #-8
  ec:	str	x10, [x9], #16
  f0:	cmp	x8, x9
  f4:	b.ne	ec <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0xec>  // b.any
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret
 108:	adrp	x0, 0 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj>
 10c:	adrp	x1, 0 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj>
 110:	adrp	x3, 0 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x15c                 	// #348
 124:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w9, w8, #0x1
  14:	tst	w8, w9
  18:	b.ne	188 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x188>  // b.any
  1c:	cbz	w8, 80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x80>
  20:	ldr	x9, [x0, #8]
  24:	lsl	x10, x8, #4
  28:	subs	x10, x10, #0x10
  2c:	b.eq	68 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x68>  // b.none
  30:	lsr	x10, x10, #4
  34:	add	x11, x10, #0x1
  38:	and	x12, x11, #0x1ffffffffffffffe
  3c:	add	x13, x9, #0x10
  40:	add	x10, x9, x12, lsl #4
  44:	mov	x14, #0xfffffffffffffff8    	// #-8
  48:	mov	x15, x12
  4c:	stur	x14, [x13, #-16]
  50:	str	x14, [x13], #32
  54:	subs	x15, x15, #0x2
  58:	b.ne	4c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x4c>  // b.any
  5c:	cmp	x11, x12
  60:	b.ne	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x6c>  // b.any
  64:	b	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x80>
  68:	mov	x10, x9
  6c:	add	x9, x9, x8, lsl #4
  70:	mov	x11, #0xfffffffffffffff8    	// #-8
  74:	str	x11, [x10], #16
  78:	cmp	x9, x10
  7c:	b.ne	74 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x74>  // b.any
  80:	cmp	x1, x2
  84:	b.eq	140 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x140>  // b.none
  88:	mov	w9, wzr
  8c:	sub	w10, w8, #0x1
  90:	mov	x11, #0xfffffffffffffff0    	// #-16
  94:	b	c0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0xc0>
  98:	cmp	x16, #0x0
  9c:	csel	x13, x14, x16, eq  // eq = none
  a0:	str	x12, [x13]
  a4:	ldr	x12, [x1, #8]
  a8:	add	w9, w9, #0x1
  ac:	str	x12, [x13, #8]
  b0:	str	w9, [x0, #16]
  b4:	add	x1, x1, #0x10
  b8:	cmp	x1, x2
  bc:	b.eq	140 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x140>  // b.none
  c0:	ldr	x12, [x1]
  c4:	orr	x13, x12, #0x8
  c8:	cmn	x13, #0x8
  cc:	b.eq	b4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0xb4>  // b.none
  d0:	cbz	w8, 138 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x138>
  d4:	cmn	x12, #0x8
  d8:	b.eq	168 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x168>  // b.none
  dc:	ldr	x13, [x0, #8]
  e0:	ubfx	x14, x12, #4, #28
  e4:	eor	w14, w14, w12, lsr #9
  e8:	and	w15, w14, w10
  ec:	add	x14, x13, w15, uxtw #4
  f0:	ldr	x17, [x14]
  f4:	cmp	x17, x12
  f8:	b.eq	148 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x148>  // b.none
  fc:	mov	x16, xzr
 100:	mov	w18, #0x1                   	// #1
 104:	cmn	x17, #0x8
 108:	b.eq	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x98>  // b.none
 10c:	cmp	x16, #0x0
 110:	add	w15, w15, w18
 114:	ccmp	x17, x11, #0x0, eq  // eq = none
 118:	and	w15, w15, w10
 11c:	csel	x16, x16, x14, ne  // ne = any
 120:	add	x14, x13, w15, uxtw #4
 124:	ldr	x17, [x14]
 128:	add	w18, w18, #0x1
 12c:	cmp	x17, x12
 130:	b.ne	104 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x104>  // b.any
 134:	b	148 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x148>
 138:	mov	x13, xzr
 13c:	b	a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0xa0>
 140:	ldp	x29, x30, [sp], #16
 144:	ret
 148:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 14c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 150:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 154:	add	x0, x0, #0x0
 158:	add	x1, x1, #0x0
 15c:	add	x3, x3, #0x0
 160:	mov	w2, #0x17a                 	// #378
 164:	bl	0 <__assert_fail>
 168:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 16c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 170:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 174:	add	x0, x0, #0x0
 178:	add	x1, x1, #0x0
 17c:	add	x3, x3, #0x0
 180:	mov	w2, #0x252                 	// #594
 184:	bl	0 <__assert_fail>
 188:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 18c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 190:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 194:	add	x0, x0, #0x0
 198:	add	x1, x1, #0x0
 19c:	add	x3, x3, #0x0
 1a0:	mov	w2, #0x15c                 	// #348
 1a4:	bl	0 <__assert_fail>

Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_Record.cpp>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x8, 0 <_GLOBAL__sub_I_Record.cpp>
   c:	ldr	d0, [x8]
  10:	adrp	x1, 0 <_GLOBAL__sub_I_Record.cpp>
  14:	add	x1, x1, #0x0
  18:	add	x8, x1, #0x20
  1c:	mov	x10, x1
  20:	adrp	x0, 0 <_GLOBAL__sub_I_Record.cpp>
  24:	adrp	x2, 0 <__dso_handle>
  28:	mov	w9, #0x1                   	// #1
  2c:	stp	xzr, xzr, [x1]
  30:	str	x8, [x1, #16]
  34:	str	d0, [x1, #24]
  38:	str	xzr, [x10, #80]!
  3c:	add	x0, x0, #0x0
  40:	add	x2, x2, #0x0
  44:	stp	x10, xzr, [x1, #64]
  48:	str	x9, [x1, #88]
  4c:	bl	0 <__cxa_atexit>
  50:	adrp	x8, 0 <_GLOBAL__sub_I_Record.cpp>
  54:	adrp	x9, 0 <_GLOBAL__sub_I_Record.cpp>
  58:	adrp	x10, 0 <_GLOBAL__sub_I_Record.cpp>
  5c:	add	x8, x8, #0x0
  60:	add	x9, x9, #0x0
  64:	add	x10, x10, #0x0
  68:	stp	x9, x10, [x8]
  6c:	adrp	x9, 0 <_GLOBAL__sub_I_Record.cpp>
  70:	add	x9, x9, #0x0
  74:	str	x9, [x8, #16]
  78:	adrp	x9, 88 <_GLOBAL__sub_I_Record.cpp+0x88>
  7c:	ldr	x9, [x9]
  80:	str	wzr, [x8, #24]
  84:	strb	wzr, [x8, #28]
  88:	adrp	x8, b8 <_GLOBAL__sub_I_Record.cpp+0xb8>
  8c:	ldr	x8, [x8]
  90:	add	x8, x8, #0x10
  94:	str	x8, [x9]
  98:	adrp	x8, a0 <_GLOBAL__sub_I_Record.cpp+0xa0>
  9c:	ldr	x8, [x8]
  a0:	str	wzr, [x9, #8]
  a4:	str	xzr, [x9, #16]
  a8:	mov	w9, #0x2                   	// #2
  ac:	str	w9, [x8, #8]
  b0:	adrp	x9, 128 <_GLOBAL__sub_I_Record.cpp+0x128>
  b4:	ldr	x9, [x9]
  b8:	add	x9, x9, #0x10
  bc:	str	x9, [x8]
  c0:	adrp	x9, b8 <_GLOBAL__sub_I_Record.cpp+0xb8>
  c4:	ldr	x9, [x9]
  c8:	str	xzr, [x8, #16]
  cc:	mov	w8, #0x3                   	// #3
  d0:	str	w8, [x9, #8]
  d4:	adrp	x8, 160 <_ZTVN4llvm8IntRecTyE>
  d8:	ldr	x8, [x8]
  dc:	add	x8, x8, #0x10
  e0:	str	x8, [x9]
  e4:	adrp	x8, d0 <_GLOBAL__sub_I_Record.cpp+0xd0>
  e8:	ldr	x8, [x8]
  ec:	str	xzr, [x9, #16]
  f0:	mov	w9, #0x4                   	// #4
  f4:	str	w9, [x8, #8]
  f8:	adrp	x9, 198 <_ZTVN4llvm11StringRecTyE>
  fc:	ldr	x9, [x9]
 100:	add	x9, x9, #0x10
 104:	str	x9, [x8]
 108:	adrp	x9, e8 <_GLOBAL__sub_I_Record.cpp+0xe8>
 10c:	ldr	x9, [x9]
 110:	str	xzr, [x8, #16]
 114:	mov	w8, #0x6                   	// #6
 118:	str	w8, [x9, #8]
 11c:	adrp	x8, 208 <_ZTVN4llvm8DagRecTyE>
 120:	ldr	x8, [x8]
 124:	str	xzr, [x9, #16]
 128:	add	x8, x8, #0x10
 12c:	str	x8, [x9]
 130:	ldp	x29, x30, [sp], #16
 134:	ret

SetTheory.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm9SetTheory8Operator6anchorEv>:
       0:	ret

0000000000000004 <_ZN4llvm9SetTheory8Expander6anchorEv>:
       4:	ret

0000000000000008 <_ZN4llvm9SetTheoryC1Ev>:
       8:	stp	x29, x30, [sp, #-48]!
       c:	str	x21, [sp, #16]
      10:	stp	x20, x19, [sp, #32]
      14:	mov	x29, sp
      18:	str	wzr, [x0, #8]!
      1c:	mov	x8, #0x1000000000          	// #68719476736
      20:	mov	x19, x0
      24:	stp	xzr, x0, [x0, #8]
      28:	stp	x0, xzr, [x0, #24]
      2c:	str	xzr, [x19, #40]!
      30:	stp	xzr, x8, [x0, #48]
      34:	stp	xzr, xzr, [x0, #72]
      38:	str	x8, [x0, #88]
      3c:	mov	w0, #0x8                   	// #8
      40:	bl	0 <_Znwm>
      44:	adrp	x8, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
      48:	add	x8, x8, #0x0
      4c:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
      50:	mov	x20, x0
      54:	str	x8, [x0]
      58:	add	x1, x1, #0x0
      5c:	mov	w2, #0x3                   	// #3
      60:	mov	x0, x19
      64:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
      68:	ldr	x8, [x0]
      6c:	ldr	x0, [x8, #8]
      70:	str	x20, [x8, #8]
      74:	cbz	x0, 84 <_ZN4llvm9SetTheoryC1Ev+0x7c>
      78:	ldr	x8, [x0]
      7c:	ldr	x8, [x8, #16]
      80:	blr	x8
      84:	mov	w0, #0x8                   	// #8
      88:	bl	0 <_Znwm>
      8c:	adrp	x8, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
      90:	add	x8, x8, #0x0
      94:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
      98:	mov	x20, x0
      9c:	str	x8, [x0]
      a0:	add	x1, x1, #0x0
      a4:	mov	w2, #0x3                   	// #3
      a8:	mov	x0, x19
      ac:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
      b0:	ldr	x8, [x0]
      b4:	ldr	x0, [x8, #8]
      b8:	str	x20, [x8, #8]
      bc:	cbz	x0, cc <_ZN4llvm9SetTheoryC1Ev+0xc4>
      c0:	ldr	x8, [x0]
      c4:	ldr	x8, [x8, #16]
      c8:	blr	x8
      cc:	mov	w0, #0x8                   	// #8
      d0:	bl	0 <_Znwm>
      d4:	adrp	x8, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
      d8:	add	x8, x8, #0x0
      dc:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
      e0:	mov	x20, x0
      e4:	str	x8, [x0]
      e8:	add	x1, x1, #0x0
      ec:	mov	w2, #0x3                   	// #3
      f0:	mov	x0, x19
      f4:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
      f8:	ldr	x8, [x0]
      fc:	ldr	x0, [x8, #8]
     100:	str	x20, [x8, #8]
     104:	cbz	x0, 114 <_ZN4llvm9SetTheoryC1Ev+0x10c>
     108:	ldr	x8, [x0]
     10c:	ldr	x8, [x8, #16]
     110:	blr	x8
     114:	mov	w0, #0x8                   	// #8
     118:	bl	0 <_Znwm>
     11c:	adrp	x8, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     120:	add	x8, x8, #0x0
     124:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     128:	mov	x20, x0
     12c:	str	x8, [x0]
     130:	add	x1, x1, #0x0
     134:	mov	w2, #0x3                   	// #3
     138:	mov	x0, x19
     13c:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     140:	ldr	x8, [x0]
     144:	ldr	x0, [x8, #8]
     148:	str	x20, [x8, #8]
     14c:	cbz	x0, 15c <_ZN4llvm9SetTheoryC1Ev+0x154>
     150:	ldr	x8, [x0]
     154:	ldr	x8, [x8, #16]
     158:	blr	x8
     15c:	mov	w0, #0x8                   	// #8
     160:	bl	0 <_Znwm>
     164:	adrp	x8, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     168:	add	x8, x8, #0x0
     16c:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     170:	mov	x20, x0
     174:	str	x8, [x0]
     178:	add	x1, x1, #0x0
     17c:	mov	w2, #0x5                   	// #5
     180:	mov	x0, x19
     184:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     188:	ldr	x8, [x0]
     18c:	ldr	x0, [x8, #8]
     190:	str	x20, [x8, #8]
     194:	cbz	x0, 1a4 <_ZN4llvm9SetTheoryC1Ev+0x19c>
     198:	ldr	x8, [x0]
     19c:	ldr	x8, [x8, #16]
     1a0:	blr	x8
     1a4:	mov	w0, #0x10                  	// #16
     1a8:	bl	0 <_Znwm>
     1ac:	adrp	x21, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     1b0:	add	x21, x21, #0x0
     1b4:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     1b8:	mov	x20, x0
     1bc:	str	x21, [x0]
     1c0:	strb	wzr, [x0, #8]
     1c4:	add	x1, x1, #0x0
     1c8:	mov	w2, #0x4                   	// #4
     1cc:	mov	x0, x19
     1d0:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     1d4:	ldr	x8, [x0]
     1d8:	ldr	x0, [x8, #8]
     1dc:	str	x20, [x8, #8]
     1e0:	cbz	x0, 1f0 <_ZN4llvm9SetTheoryC1Ev+0x1e8>
     1e4:	ldr	x8, [x0]
     1e8:	ldr	x8, [x8, #16]
     1ec:	blr	x8
     1f0:	mov	w0, #0x10                  	// #16
     1f4:	bl	0 <_Znwm>
     1f8:	mov	w8, #0x1                   	// #1
     1fc:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     200:	mov	x20, x0
     204:	str	x21, [x0]
     208:	strb	w8, [x0, #8]
     20c:	add	x1, x1, #0x0
     210:	mov	w2, #0x4                   	// #4
     214:	mov	x0, x19
     218:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     21c:	ldr	x8, [x0]
     220:	ldr	x0, [x8, #8]
     224:	str	x20, [x8, #8]
     228:	cbz	x0, 238 <_ZN4llvm9SetTheoryC1Ev+0x230>
     22c:	ldr	x8, [x0]
     230:	ldr	x8, [x8, #16]
     234:	blr	x8
     238:	mov	w0, #0x8                   	// #8
     23c:	bl	0 <_Znwm>
     240:	adrp	x8, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     244:	add	x8, x8, #0x0
     248:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     24c:	mov	x20, x0
     250:	str	x8, [x0]
     254:	add	x1, x1, #0x0
     258:	mov	w2, #0x8                   	// #8
     25c:	mov	x0, x19
     260:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     264:	ldr	x8, [x0]
     268:	ldr	x0, [x8, #8]
     26c:	str	x20, [x8, #8]
     270:	cbz	x0, 280 <_ZN4llvm9SetTheoryC1Ev+0x278>
     274:	ldr	x8, [x0]
     278:	ldr	x8, [x8, #16]
     27c:	blr	x8
     280:	mov	w0, #0x8                   	// #8
     284:	bl	0 <_Znwm>
     288:	adrp	x8, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     28c:	add	x8, x8, #0x0
     290:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     294:	mov	x20, x0
     298:	str	x8, [x0]
     29c:	add	x1, x1, #0x0
     2a0:	mov	w2, #0xa                   	// #10
     2a4:	mov	x0, x19
     2a8:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     2ac:	ldr	x8, [x0]
     2b0:	ldr	x0, [x8, #8]
     2b4:	str	x20, [x8, #8]
     2b8:	cbz	x0, 2c8 <_ZN4llvm9SetTheoryC1Ev+0x2c0>
     2bc:	ldr	x8, [x0]
     2c0:	ldr	x8, [x8, #16]
     2c4:	blr	x8
     2c8:	mov	w0, #0x8                   	// #8
     2cc:	bl	0 <_Znwm>
     2d0:	adrp	x8, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     2d4:	add	x8, x8, #0x0
     2d8:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     2dc:	mov	x20, x0
     2e0:	str	x8, [x0]
     2e4:	add	x1, x1, #0x0
     2e8:	mov	w2, #0x8                   	// #8
     2ec:	mov	x0, x19
     2f0:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     2f4:	ldr	x8, [x0]
     2f8:	ldr	x0, [x8, #8]
     2fc:	str	x20, [x8, #8]
     300:	cbz	x0, 31c <_ZN4llvm9SetTheoryC1Ev+0x314>
     304:	ldr	x8, [x0]
     308:	ldp	x20, x19, [sp, #32]
     30c:	ldr	x21, [sp, #16]
     310:	ldr	x1, [x8, #16]
     314:	ldp	x29, x30, [sp], #48
     318:	br	x1
     31c:	ldp	x20, x19, [sp, #32]
     320:	ldr	x21, [sp, #16]
     324:	ldp	x29, x30, [sp], #48
     328:	ret

000000000000032c <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE>:
     32c:	stp	x29, x30, [sp, #-32]!
     330:	str	x19, [sp, #16]
     334:	mov	x29, sp
     338:	add	x0, x0, #0x30
     33c:	mov	x19, x3
     340:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     344:	ldr	x8, [x0]
     348:	ldr	x9, [x19]
     34c:	str	xzr, [x19]
     350:	ldr	x0, [x8, #8]
     354:	str	x9, [x8, #8]
     358:	cbz	x0, 370 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE+0x44>
     35c:	ldr	x8, [x0]
     360:	ldr	x19, [sp, #16]
     364:	ldr	x1, [x8, #16]
     368:	ldp	x29, x30, [sp], #32
     36c:	br	x1
     370:	ldr	x19, [sp, #16]
     374:	ldp	x29, x30, [sp], #32
     378:	ret

000000000000037c <_ZN4llvm9SetTheory11addExpanderENS_9StringRefESt10unique_ptrINS0_8ExpanderESt14default_deleteIS3_EE>:
     37c:	stp	x29, x30, [sp, #-32]!
     380:	str	x19, [sp, #16]
     384:	mov	x29, sp
     388:	add	x0, x0, #0x50
     38c:	mov	x19, x3
     390:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     394:	ldr	x8, [x0]
     398:	ldr	x9, [x19]
     39c:	str	xzr, [x19]
     3a0:	ldr	x0, [x8, #8]
     3a4:	str	x9, [x8, #8]
     3a8:	cbz	x0, 3c0 <_ZN4llvm9SetTheory11addExpanderENS_9StringRefESt10unique_ptrINS0_8ExpanderESt14default_deleteIS3_EE+0x44>
     3ac:	ldr	x8, [x0]
     3b0:	ldr	x19, [sp, #16]
     3b4:	ldr	x1, [x8, #16]
     3b8:	ldp	x29, x30, [sp], #32
     3bc:	br	x1
     3c0:	ldr	x19, [sp, #16]
     3c4:	ldp	x29, x30, [sp], #32
     3c8:	ret

00000000000003cc <_ZN4llvm9SetTheory16addFieldExpanderENS_9StringRefES1_>:
     3cc:	stp	x29, x30, [sp, #-64]!
     3d0:	stp	x24, x23, [sp, #16]
     3d4:	stp	x22, x21, [sp, #32]
     3d8:	stp	x20, x19, [sp, #48]
     3dc:	mov	x29, sp
     3e0:	mov	x23, x0
     3e4:	mov	w0, #0x18                  	// #24
     3e8:	mov	x19, x4
     3ec:	mov	x20, x3
     3f0:	mov	x21, x2
     3f4:	mov	x22, x1
     3f8:	bl	0 <_Znwm>
     3fc:	adrp	x8, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     400:	add	x8, x8, #0x0
     404:	mov	x24, x0
     408:	stp	x20, x19, [x0, #8]
     40c:	str	x8, [x0]
     410:	add	x0, x23, #0x50
     414:	mov	x1, x22
     418:	mov	x2, x21
     41c:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     420:	ldr	x8, [x0]
     424:	ldr	x0, [x8, #8]
     428:	str	x24, [x8, #8]
     42c:	cbz	x0, 44c <_ZN4llvm9SetTheory16addFieldExpanderENS_9StringRefES1_+0x80>
     430:	ldr	x8, [x0]
     434:	ldp	x20, x19, [sp, #48]
     438:	ldp	x22, x21, [sp, #32]
     43c:	ldp	x24, x23, [sp, #16]
     440:	ldr	x1, [x8, #16]
     444:	ldp	x29, x30, [sp], #64
     448:	br	x1
     44c:	ldp	x20, x19, [sp, #48]
     450:	ldp	x22, x21, [sp, #32]
     454:	ldp	x24, x23, [sp, #16]
     458:	ldp	x29, x30, [sp], #64
     45c:	ret

0000000000000460 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>:
     460:	sub	sp, sp, #0xa0
     464:	stp	x29, x30, [sp, #96]
     468:	stp	x24, x23, [sp, #112]
     46c:	stp	x22, x21, [sp, #128]
     470:	stp	x20, x19, [sp, #144]
     474:	add	x29, sp, #0x60
     478:	cbz	x1, 6b4 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x254>
     47c:	ldrb	w8, [x1, #8]
     480:	mov	x20, x4
     484:	mov	x21, x3
     488:	mov	x19, x2
     48c:	mov	x22, x1
     490:	mov	x23, x0
     494:	cmp	w8, #0x9
     498:	b.eq	540 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0xe0>  // b.none
     49c:	cmp	w8, #0x6
     4a0:	b.ne	574 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x114>  // b.any
     4a4:	ldr	x1, [x22, #24]
     4a8:	mov	x0, x23
     4ac:	bl	79c <_ZN4llvm9SetTheory6expandEPNS_6RecordE>
     4b0:	cbz	x0, 610 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x1b0>
     4b4:	ldp	x20, x23, [x0]
     4b8:	cmp	x20, x23
     4bc:	b.eq	660 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x200>  // b.none
     4c0:	add	x21, x19, #0x90
     4c4:	add	x22, x19, #0xa0
     4c8:	b	4d8 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x78>
     4cc:	add	x20, x20, #0x8
     4d0:	cmp	x23, x20
     4d4:	b.eq	660 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x200>  // b.none
     4d8:	sub	x8, x29, #0x28
     4dc:	mov	x2, sp
     4e0:	mov	x0, x19
     4e4:	mov	x1, x20
     4e8:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     4ec:	ldurb	w8, [x29, #-8]
     4f0:	cbz	w8, 4cc <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x6c>
     4f4:	ldp	w8, w9, [x19, #152]
     4f8:	cmp	w8, w9
     4fc:	b.cs	524 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0xc4>  // b.hs, b.nlast
     500:	ldr	x9, [x19, #144]
     504:	ldr	x10, [x20]
     508:	str	x10, [x9, w8, uxtw #3]
     50c:	ldp	w8, w9, [x19, #152]
     510:	cmp	w8, w9
     514:	b.cs	694 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x234>  // b.hs, b.nlast
     518:	add	w8, w8, #0x1
     51c:	str	w8, [x19, #152]
     520:	b	4cc <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x6c>
     524:	mov	w3, #0x8                   	// #8
     528:	mov	x0, x21
     52c:	mov	x1, x22
     530:	mov	x2, xzr
     534:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     538:	ldr	w8, [x19, #152]
     53c:	b	500 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0xa0>
     540:	ldr	w8, [x22, #32]
     544:	lsl	x24, x8, #3
     548:	cbz	x24, 660 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x200>
     54c:	add	x22, x22, #0x28
     550:	ldr	x1, [x22], #8
     554:	mov	x0, x23
     558:	mov	x2, x19
     55c:	mov	x3, x21
     560:	mov	x4, x20
     564:	bl	460 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>
     568:	subs	x24, x24, #0x8
     56c:	b.ne	550 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0xf0>  // b.any
     570:	b	660 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x200>
     574:	cmp	w8, #0x5
     578:	b.ne	6f4 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x294>  // b.any
     57c:	ldr	x8, [x22, #32]
     580:	cbz	x8, 6b4 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x254>
     584:	ldrb	w9, [x8, #8]
     588:	cmp	w9, #0x6
     58c:	b.ne	714 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x2b4>  // b.any
     590:	ldr	x8, [x8, #24]
     594:	ldr	x8, [x8]
     598:	cbz	x8, 75c <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x2fc>
     59c:	ldrb	w9, [x8, #8]
     5a0:	cmp	w9, #0x12
     5a4:	b.ne	77c <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x31c>  // b.any
     5a8:	ldp	x1, x2, [x8, #24]
     5ac:	add	x24, x23, #0x30
     5b0:	mov	x0, x24
     5b4:	bl	0 <_ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE>
     5b8:	cmn	w0, #0x1
     5bc:	b.eq	6d4 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x274>  // b.none
     5c0:	ldr	w9, [x23, #56]
     5c4:	sxtw	x8, w0
     5c8:	cmp	x8, x9
     5cc:	b.eq	6d4 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x274>  // b.none
     5d0:	ldr	x9, [x24]
     5d4:	mov	x1, x23
     5d8:	mov	x2, x22
     5dc:	mov	x3, x19
     5e0:	ldr	x8, [x9, x8, lsl #3]
     5e4:	mov	x4, x21
     5e8:	mov	x5, x20
     5ec:	ldp	x20, x19, [sp, #144]
     5f0:	ldr	x0, [x8, #8]
     5f4:	ldp	x22, x21, [sp, #128]
     5f8:	ldp	x24, x23, [sp, #112]
     5fc:	ldp	x29, x30, [sp, #96]
     600:	ldr	x8, [x0]
     604:	ldr	x6, [x8, #24]
     608:	add	sp, sp, #0xa0
     60c:	br	x6
     610:	ldr	x8, [x22, #24]
     614:	mov	x1, sp
     618:	add	x2, sp, #0x20
     61c:	mov	x0, x19
     620:	str	x8, [sp]
     624:	sub	x8, x29, #0x28
     628:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     62c:	ldurb	w8, [x29, #-8]
     630:	cbz	w8, 660 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x200>
     634:	ldp	w8, w9, [x19, #152]
     638:	cmp	w8, w9
     63c:	b.cs	678 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x218>  // b.hs, b.nlast
     640:	ldr	x9, [x19, #144]
     644:	ldr	x10, [sp]
     648:	str	x10, [x9, w8, uxtw #3]
     64c:	ldp	w8, w9, [x19, #152]
     650:	cmp	w8, w9
     654:	b.cs	694 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x234>  // b.hs, b.nlast
     658:	add	w8, w8, #0x1
     65c:	str	w8, [x19, #152]
     660:	ldp	x20, x19, [sp, #144]
     664:	ldp	x22, x21, [sp, #128]
     668:	ldp	x24, x23, [sp, #112]
     66c:	ldp	x29, x30, [sp, #96]
     670:	add	sp, sp, #0xa0
     674:	ret
     678:	add	x0, x19, #0x90
     67c:	add	x1, x0, #0x10
     680:	mov	w3, #0x8                   	// #8
     684:	mov	x2, xzr
     688:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     68c:	ldr	w8, [x19, #152]
     690:	b	640 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x1e0>
     694:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     698:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     69c:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     6a0:	add	x0, x0, #0x0
     6a4:	add	x1, x1, #0x0
     6a8:	add	x3, x3, #0x0
     6ac:	mov	w2, #0x43                  	// #67
     6b0:	bl	0 <__assert_fail>
     6b4:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     6b8:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     6bc:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     6c0:	add	x0, x0, #0x0
     6c4:	add	x1, x1, #0x0
     6c8:	add	x3, x3, #0x0
     6cc:	mov	w2, #0x69                  	// #105
     6d0:	bl	0 <__assert_fail>
     6d4:	ldr	x8, [x22]
     6d8:	mov	x0, x22
     6dc:	ldr	x9, [x8, #40]
     6e0:	mov	x8, sp
     6e4:	blr	x9
     6e8:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     6ec:	add	x0, x0, #0x0
     6f0:	b	730 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x2d0>
     6f4:	ldr	x8, [x22]
     6f8:	mov	x0, x22
     6fc:	ldr	x9, [x8, #40]
     700:	mov	x8, sp
     704:	blr	x9
     708:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     70c:	add	x0, x0, #0x0
     710:	b	730 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x2d0>
     714:	ldr	x8, [x22]
     718:	mov	x0, x22
     71c:	ldr	x9, [x8, #40]
     720:	mov	x8, sp
     724:	blr	x9
     728:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     72c:	add	x0, x0, #0x0
     730:	sub	x8, x29, #0x28
     734:	mov	x1, sp
     738:	sub	x19, x29, #0x28
     73c:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     740:	mov	w8, #0x104                 	// #260
     744:	add	x2, sp, #0x20
     748:	mov	x0, x21
     74c:	mov	x1, x20
     750:	strh	w8, [sp, #48]
     754:	stp	x19, xzr, [sp, #32]
     758:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
     75c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     760:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     764:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     768:	add	x0, x0, #0x0
     76c:	add	x1, x1, #0x0
     770:	add	x3, x3, #0x0
     774:	mov	w2, #0x69                  	// #105
     778:	bl	0 <__assert_fail>
     77c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     780:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     784:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     788:	add	x0, x0, #0x0
     78c:	add	x1, x1, #0x0
     790:	add	x3, x3, #0x0
     794:	mov	w2, #0x108                 	// #264
     798:	bl	0 <__assert_fail>

000000000000079c <_ZN4llvm9SetTheory6expandEPNS_6RecordE>:
     79c:	sub	sp, sp, #0x180
     7a0:	stp	x29, x30, [sp, #304]
     7a4:	stp	x28, x25, [sp, #320]
     7a8:	stp	x24, x23, [sp, #336]
     7ac:	stp	x22, x21, [sp, #352]
     7b0:	stp	x20, x19, [sp, #368]
     7b4:	add	x29, sp, #0x130
     7b8:	stur	x1, [x29, #-16]
     7bc:	ldr	x9, [x0, #16]
     7c0:	mov	x20, x1
     7c4:	mov	x19, x0
     7c8:	add	x22, x0, #0x8
     7cc:	cbz	x9, 818 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x7c>
     7d0:	mov	x8, x22
     7d4:	ldr	x10, [x9, #32]
     7d8:	add	x11, x9, #0x18
     7dc:	add	x12, x9, #0x10
     7e0:	cmp	x10, x20
     7e4:	csel	x8, x8, x9, cc  // cc = lo, ul, last
     7e8:	csel	x9, x11, x12, cc  // cc = lo, ul, last
     7ec:	ldr	x9, [x9]
     7f0:	cbnz	x9, 7d4 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x38>
     7f4:	cmp	x8, x22
     7f8:	b.eq	818 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x7c>  // b.none
     7fc:	ldr	x9, [x8, #32]
     800:	cmp	x9, x20
     804:	csel	x8, x22, x8, hi  // hi = pmore
     808:	cmp	x8, x22
     80c:	b.eq	818 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x7c>  // b.none
     810:	add	x21, x8, #0x28
     814:	b	8c8 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x12c>
     818:	ldr	w8, [x20, #96]
     81c:	cbz	w8, 8c4 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x128>
     820:	ldr	x24, [x20, #88]
     824:	add	x8, x8, x8, lsl #1
     828:	add	x21, x19, #0x50
     82c:	lsl	x25, x8, #3
     830:	b	840 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0xa4>
     834:	subs	x25, x25, #0x18
     838:	add	x24, x24, #0x18
     83c:	b.eq	8c4 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x128>  // b.none
     840:	ldr	x8, [x24]
     844:	ldr	x8, [x8]
     848:	cbz	x8, 9e0 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x244>
     84c:	ldrb	w9, [x8, #8]
     850:	cmp	w9, #0x12
     854:	b.ne	834 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x98>  // b.any
     858:	ldp	x1, x2, [x8, #24]
     85c:	mov	x0, x21
     860:	bl	0 <_ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE>
     864:	cmn	w0, #0x1
     868:	b.eq	834 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x98>  // b.none
     86c:	ldr	w8, [x19, #88]
     870:	sxtw	x23, w0
     874:	cmp	x23, x8
     878:	b.eq	834 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x98>  // b.none
     87c:	ldr	x8, [x19, #16]
     880:	ldr	x21, [x19, #80]
     884:	cbz	x8, 8e8 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x14c>
     888:	mov	x1, x22
     88c:	ldr	x9, [x8, #32]
     890:	add	x10, x8, #0x18
     894:	add	x11, x8, #0x10
     898:	cmp	x9, x20
     89c:	csel	x1, x1, x8, cc  // cc = lo, ul, last
     8a0:	csel	x8, x10, x11, cc  // cc = lo, ul, last
     8a4:	ldr	x8, [x8]
     8a8:	cbnz	x8, 88c <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0xf0>
     8ac:	cmp	x1, x22
     8b0:	b.eq	8ec <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x150>  // b.none
     8b4:	ldr	x8, [x1, #32]
     8b8:	cmp	x8, x20
     8bc:	b.hi	8ec <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x150>  // b.pmore
     8c0:	b	914 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x178>
     8c4:	mov	x21, xzr
     8c8:	mov	x0, x21
     8cc:	ldp	x20, x19, [sp, #368]
     8d0:	ldp	x22, x21, [sp, #352]
     8d4:	ldp	x24, x23, [sp, #336]
     8d8:	ldp	x28, x25, [sp, #320]
     8dc:	ldp	x29, x30, [sp, #304]
     8e0:	add	sp, sp, #0x180
     8e4:	ret
     8e8:	mov	x1, x22
     8ec:	adrp	x2, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     8f0:	sub	x8, x29, #0x10
     8f4:	add	x2, x2, #0x0
     8f8:	mov	x3, sp
     8fc:	sub	x4, x29, #0x8
     900:	mov	x0, x19
     904:	str	x8, [sp]
     908:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     90c:	ldur	x20, [x29, #-16]
     910:	mov	x1, x0
     914:	adrp	x8, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     918:	ldr	d0, [x8]
     91c:	adrp	x9, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     920:	mov	x8, #0xfffffffffffffff8    	// #-8
     924:	str	xzr, [sp]
     928:	str	d0, [sp, #8]
     92c:	ldr	d0, [x9]
     930:	mov	x9, sp
     934:	add	x22, x9, #0xa0
     938:	stp	x8, x8, [sp, #16]
     93c:	stp	x8, x8, [sp, #32]
     940:	stp	x8, x8, [sp, #48]
     944:	stp	x8, x8, [sp, #64]
     948:	stp	x8, x8, [sp, #80]
     94c:	stp	x8, x8, [sp, #96]
     950:	stp	x8, x8, [sp, #112]
     954:	stp	x8, x8, [sp, #128]
     958:	str	x22, [sp, #144]
     95c:	str	d0, [sp, #152]
     960:	ldr	x8, [x21, x23, lsl #3]
     964:	add	x21, x1, #0x28
     968:	mov	x3, sp
     96c:	mov	x1, x19
     970:	ldr	x0, [x8, #8]
     974:	mov	x2, x20
     978:	ldr	x8, [x0]
     97c:	ldr	x8, [x8, #24]
     980:	blr	x8
     984:	ldr	x1, [sp, #144]
     988:	ldr	w8, [sp, #152]
     98c:	mov	x0, x21
     990:	add	x2, x1, x8, lsl #3
     994:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     998:	ldr	x0, [sp, #144]
     99c:	cmp	x0, x22
     9a0:	b.eq	9a8 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x20c>  // b.none
     9a4:	bl	0 <free>
     9a8:	ldrb	w8, [sp, #8]
     9ac:	tbnz	w8, #0, 8c8 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x12c>
     9b0:	ldr	x0, [sp, #16]
     9b4:	bl	0 <_ZdlPv>
     9b8:	ldrb	w8, [sp, #8]
     9bc:	tbz	w8, #0, 8c8 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x12c>
     9c0:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     9c4:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     9c8:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     9cc:	add	x0, x0, #0x0
     9d0:	add	x1, x1, #0x0
     9d4:	add	x3, x3, #0x0
     9d8:	mov	w2, #0x45b                 	// #1115
     9dc:	bl	0 <__assert_fail>
     9e0:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     9e4:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     9e8:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     9ec:	add	x0, x0, #0x0
     9f0:	add	x1, x1, #0x0
     9f4:	add	x3, x3, #0x0
     9f8:	mov	w2, #0x69                  	// #105
     9fc:	bl	0 <__assert_fail>

0000000000000a00 <_ZN12_GLOBAL__N_15AddOpD0Ev>:
     a00:	b	0 <_ZdlPv>

0000000000000a04 <_ZN12_GLOBAL__N_15AddOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE>:
     a04:	stp	x29, x30, [sp, #-64]!
     a08:	stp	x24, x23, [sp, #16]
     a0c:	stp	x22, x21, [sp, #32]
     a10:	stp	x20, x19, [sp, #48]
     a14:	mov	x29, sp
     a18:	ldr	w8, [x2, #48]
     a1c:	lsl	x23, x8, #3
     a20:	cbz	x23, a58 <_ZN12_GLOBAL__N_15AddOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x54>
     a24:	mov	x19, x5
     a28:	mov	x20, x4
     a2c:	mov	x21, x3
     a30:	mov	x22, x1
     a34:	add	x24, x2, #0x38
     a38:	ldr	x1, [x24], #8
     a3c:	mov	x0, x22
     a40:	mov	x2, x21
     a44:	mov	x3, x20
     a48:	mov	x4, x19
     a4c:	bl	460 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>
     a50:	subs	x23, x23, #0x8
     a54:	b.ne	a38 <_ZN12_GLOBAL__N_15AddOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x34>  // b.any
     a58:	ldp	x20, x19, [sp, #48]
     a5c:	ldp	x22, x21, [sp, #32]
     a60:	ldp	x24, x23, [sp, #16]
     a64:	ldp	x29, x30, [sp], #64
     a68:	ret

0000000000000a6c <_ZN12_GLOBAL__N_15SubOpD0Ev>:
     a6c:	b	0 <_ZdlPv>

0000000000000a70 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE>:
     a70:	stp	x29, x30, [sp, #-96]!
     a74:	str	x28, [sp, #16]
     a78:	stp	x26, x25, [sp, #32]
     a7c:	stp	x24, x23, [sp, #48]
     a80:	stp	x22, x21, [sp, #64]
     a84:	stp	x20, x19, [sp, #80]
     a88:	mov	x29, sp
     a8c:	sub	sp, sp, #0x270
     a90:	ldr	w8, [x2, #48]
     a94:	mov	x20, x5
     a98:	mov	x21, x4
     a9c:	mov	x23, x2
     aa0:	cmp	w8, #0x1
     aa4:	b.ls	d48 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2d8>  // b.plast
     aa8:	adrp	x8, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     aac:	ldr	d0, [x8]
     ab0:	adrp	x8, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     ab4:	ldr	d1, [x8]
     ab8:	add	x24, sp, #0x128
     abc:	add	x25, sp, #0x8
     ac0:	add	x8, x24, #0xa0
     ac4:	mov	x9, #0xfffffffffffffff8    	// #-8
     ac8:	str	x8, [sp, #440]
     acc:	add	x8, x25, #0xa0
     ad0:	str	xzr, [sp, #296]
     ad4:	str	xzr, [sp, #8]
     ad8:	stp	x9, x9, [sp, #312]
     adc:	stp	x9, x9, [sp, #328]
     ae0:	stp	x9, x9, [sp, #344]
     ae4:	stp	x9, x9, [sp, #360]
     ae8:	stp	x9, x9, [sp, #376]
     aec:	stp	x9, x9, [sp, #392]
     af0:	stp	x9, x9, [sp, #408]
     af4:	stp	x9, x9, [sp, #424]
     af8:	stp	x9, x9, [sp, #24]
     afc:	stp	x9, x9, [sp, #40]
     b00:	stp	x9, x9, [sp, #56]
     b04:	stp	x9, x9, [sp, #72]
     b08:	stp	x9, x9, [sp, #88]
     b0c:	stp	x9, x9, [sp, #104]
     b10:	stp	x9, x9, [sp, #120]
     b14:	stp	x9, x9, [sp, #136]
     b18:	str	x8, [sp, #152]
     b1c:	str	d0, [sp, #304]
     b20:	str	d1, [sp, #448]
     b24:	str	d0, [sp, #16]
     b28:	str	d1, [sp, #160]
     b2c:	mov	x22, x1
     b30:	ldr	x1, [x23, #56]
     b34:	mov	x19, x3
     b38:	add	x2, sp, #0x128
     b3c:	mov	x0, x22
     b40:	mov	x3, x21
     b44:	mov	x4, x20
     b48:	bl	460 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>
     b4c:	ldr	w8, [x23, #48]
     b50:	lsl	x8, x8, #3
     b54:	subs	x26, x8, #0x8
     b58:	b.eq	b80 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x110>  // b.none
     b5c:	add	x23, x23, #0x40
     b60:	ldr	x1, [x23], #8
     b64:	add	x2, sp, #0x8
     b68:	mov	x0, x22
     b6c:	mov	x3, x21
     b70:	mov	x4, x20
     b74:	bl	460 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>
     b78:	subs	x26, x26, #0x8
     b7c:	b.ne	b60 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xf0>  // b.any
     b80:	ldr	w8, [sp, #448]
     b84:	cbz	w8, c88 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x218>
     b88:	ldr	x20, [sp, #440]
     b8c:	add	x23, x25, #0x10
     b90:	add	x21, x19, #0x90
     b94:	add	x22, x19, #0xa0
     b98:	add	x26, x20, x8, lsl #3
     b9c:	b	bcc <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x15c>
     ba0:	cmn	x12, #0x8
     ba4:	b.eq	c20 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1b0>  // b.none
     ba8:	add	w11, w11, w13
     bac:	and	w11, w11, w10
     bb0:	ldr	x12, [x9, w11, uxtw #3]
     bb4:	add	w13, w13, #0x1
     bb8:	cmp	x12, x8
     bbc:	b.ne	ba0 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x130>  // b.any
     bc0:	add	x20, x20, #0x8
     bc4:	cmp	x20, x26
     bc8:	b.eq	c88 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x218>  // b.none
     bcc:	ldrb	w9, [sp, #16]
     bd0:	ldr	x8, [x20]
     bd4:	tbnz	w9, #0, be8 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x178>
     bd8:	ldr	w10, [sp, #32]
     bdc:	cbz	w10, c20 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1b0>
     be0:	ldr	x9, [sp, #24]
     be4:	b	bf0 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x180>
     be8:	mov	w10, #0x10                  	// #16
     bec:	mov	x9, x23
     bf0:	orr	x11, x8, #0x8
     bf4:	cmn	x11, #0x8
     bf8:	b.eq	d08 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x298>  // b.none
     bfc:	ubfx	x11, x8, #4, #28
     c00:	eor	w11, w11, w8, lsr #9
     c04:	sub	w10, w10, #0x1
     c08:	and	w11, w10, w11
     c0c:	ldr	x12, [x9, w11, uxtw #3]
     c10:	cmp	x12, x8
     c14:	b.eq	bc0 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x150>  // b.none
     c18:	mov	w13, #0x1                   	// #1
     c1c:	b	ba0 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x130>
     c20:	sub	x8, x29, #0x28
     c24:	add	x2, x29, #0x18
     c28:	mov	x0, x19
     c2c:	mov	x1, x20
     c30:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     c34:	ldurb	w8, [x29, #-8]
     c38:	cbz	w8, bc0 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x150>
     c3c:	ldp	w8, w9, [x19, #152]
     c40:	cmp	w8, w9
     c44:	b.cs	c6c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1fc>  // b.hs, b.nlast
     c48:	ldr	x9, [x19, #144]
     c4c:	ldr	x10, [x20]
     c50:	str	x10, [x9, w8, uxtw #3]
     c54:	ldp	w8, w9, [x19, #152]
     c58:	cmp	w8, w9
     c5c:	b.cs	d28 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2b8>  // b.hs, b.nlast
     c60:	add	w8, w8, #0x1
     c64:	str	w8, [x19, #152]
     c68:	b	bc0 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x150>
     c6c:	mov	w3, #0x8                   	// #8
     c70:	mov	x0, x21
     c74:	mov	x1, x22
     c78:	mov	x2, xzr
     c7c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     c80:	ldr	w8, [x19, #152]
     c84:	b	c48 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1d8>
     c88:	ldr	x0, [sp, #152]
     c8c:	add	x8, x25, #0x90
     c90:	add	x8, x8, #0x10
     c94:	cmp	x0, x8
     c98:	b.eq	ca0 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x230>  // b.none
     c9c:	bl	0 <free>
     ca0:	ldrb	w8, [sp, #16]
     ca4:	tbnz	w8, #0, cb8 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x248>
     ca8:	ldr	x0, [sp, #24]
     cac:	bl	0 <_ZdlPv>
     cb0:	ldrb	w8, [sp, #16]
     cb4:	tbnz	w8, #0, d88 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x318>
     cb8:	ldr	x0, [sp, #440]
     cbc:	add	x8, x24, #0x90
     cc0:	add	x8, x8, #0x10
     cc4:	cmp	x0, x8
     cc8:	b.eq	cd0 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x260>  // b.none
     ccc:	bl	0 <free>
     cd0:	ldrb	w8, [sp, #304]
     cd4:	tbnz	w8, #0, ce8 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x278>
     cd8:	ldr	x0, [sp, #312]
     cdc:	bl	0 <_ZdlPv>
     ce0:	ldrb	w8, [sp, #304]
     ce4:	tbnz	w8, #0, d88 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x318>
     ce8:	add	sp, sp, #0x270
     cec:	ldp	x20, x19, [sp, #80]
     cf0:	ldp	x22, x21, [sp, #64]
     cf4:	ldp	x24, x23, [sp, #48]
     cf8:	ldp	x26, x25, [sp, #32]
     cfc:	ldr	x28, [sp, #16]
     d00:	ldp	x29, x30, [sp], #96
     d04:	ret
     d08:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     d0c:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     d10:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     d14:	add	x0, x0, #0x0
     d18:	add	x1, x1, #0x0
     d1c:	add	x3, x3, #0x0
     d20:	mov	w2, #0x252                 	// #594
     d24:	bl	0 <__assert_fail>
     d28:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     d2c:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     d30:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     d34:	add	x0, x0, #0x0
     d38:	add	x1, x1, #0x0
     d3c:	add	x3, x3, #0x0
     d40:	mov	w2, #0x43                  	// #67
     d44:	bl	0 <__assert_fail>
     d48:	add	x8, sp, #0x8
     d4c:	mov	x0, x23
     d50:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
     d54:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     d58:	add	x0, x0, #0x0
     d5c:	add	x8, sp, #0x128
     d60:	add	x1, sp, #0x8
     d64:	add	x19, sp, #0x128
     d68:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     d6c:	mov	w8, #0x104                 	// #260
     d70:	sub	x2, x29, #0x28
     d74:	mov	x0, x21
     d78:	mov	x1, x20
     d7c:	sturh	w8, [x29, #-24]
     d80:	stp	x19, xzr, [x29, #-40]
     d84:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
     d88:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     d8c:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     d90:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     d94:	add	x0, x0, #0x0
     d98:	add	x1, x1, #0x0
     d9c:	add	x3, x3, #0x0
     da0:	mov	w2, #0x45b                 	// #1115
     da4:	bl	0 <__assert_fail>

0000000000000da8 <_ZN12_GLOBAL__N_15AndOpD0Ev>:
     da8:	b	0 <_ZdlPv>

0000000000000dac <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE>:
     dac:	stp	x29, x30, [sp, #-96]!
     db0:	str	x28, [sp, #16]
     db4:	stp	x26, x25, [sp, #32]
     db8:	stp	x24, x23, [sp, #48]
     dbc:	stp	x22, x21, [sp, #64]
     dc0:	stp	x20, x19, [sp, #80]
     dc4:	mov	x29, sp
     dc8:	sub	sp, sp, #0x270
     dcc:	ldr	w8, [x2, #48]
     dd0:	mov	x20, x5
     dd4:	mov	x21, x4
     dd8:	mov	x22, x2
     ddc:	cmp	w8, #0x2
     de0:	b.ne	1068 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2bc>  // b.any
     de4:	adrp	x8, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     de8:	ldr	d0, [x8]
     dec:	adrp	x8, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     df0:	ldr	d1, [x8]
     df4:	add	x24, sp, #0x128
     df8:	add	x25, sp, #0x8
     dfc:	add	x8, x24, #0xa0
     e00:	mov	x9, #0xfffffffffffffff8    	// #-8
     e04:	str	x8, [sp, #440]
     e08:	add	x8, x25, #0xa0
     e0c:	str	xzr, [sp, #296]
     e10:	str	xzr, [sp, #8]
     e14:	stp	x9, x9, [sp, #312]
     e18:	stp	x9, x9, [sp, #328]
     e1c:	stp	x9, x9, [sp, #344]
     e20:	stp	x9, x9, [sp, #360]
     e24:	stp	x9, x9, [sp, #376]
     e28:	stp	x9, x9, [sp, #392]
     e2c:	stp	x9, x9, [sp, #408]
     e30:	stp	x9, x9, [sp, #424]
     e34:	stp	x9, x9, [sp, #24]
     e38:	stp	x9, x9, [sp, #40]
     e3c:	stp	x9, x9, [sp, #56]
     e40:	stp	x9, x9, [sp, #72]
     e44:	stp	x9, x9, [sp, #88]
     e48:	stp	x9, x9, [sp, #104]
     e4c:	stp	x9, x9, [sp, #120]
     e50:	stp	x9, x9, [sp, #136]
     e54:	str	x8, [sp, #152]
     e58:	str	d0, [sp, #304]
     e5c:	str	d1, [sp, #448]
     e60:	str	d0, [sp, #16]
     e64:	str	d1, [sp, #160]
     e68:	mov	x23, x1
     e6c:	ldr	x1, [x22, #56]
     e70:	mov	x19, x3
     e74:	add	x2, sp, #0x128
     e78:	mov	x0, x23
     e7c:	mov	x3, x21
     e80:	mov	x4, x20
     e84:	bl	460 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>
     e88:	ldr	x1, [x22, #64]
     e8c:	add	x2, sp, #0x8
     e90:	mov	x0, x23
     e94:	mov	x3, x21
     e98:	mov	x4, x20
     e9c:	bl	460 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>
     ea0:	ldr	w8, [sp, #448]
     ea4:	cbz	w8, fa8 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1fc>
     ea8:	ldr	x20, [sp, #440]
     eac:	add	x23, x25, #0x10
     eb0:	add	x21, x19, #0x90
     eb4:	add	x22, x19, #0xa0
     eb8:	add	x26, x20, x8, lsl #3
     ebc:	b	ecc <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x120>
     ec0:	add	x20, x20, #0x8
     ec4:	cmp	x20, x26
     ec8:	b.eq	fa8 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1fc>  // b.none
     ecc:	ldrb	w9, [sp, #16]
     ed0:	ldr	x8, [x20]
     ed4:	tbnz	w9, #0, ee8 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x13c>
     ed8:	ldr	w10, [sp, #32]
     edc:	cbz	w10, ec0 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x114>
     ee0:	ldr	x9, [sp, #24]
     ee4:	b	ef0 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x144>
     ee8:	mov	w10, #0x10                  	// #16
     eec:	mov	x9, x23
     ef0:	orr	x11, x8, #0x8
     ef4:	cmn	x11, #0x8
     ef8:	b.eq	1028 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x27c>  // b.none
     efc:	ubfx	x11, x8, #4, #28
     f00:	eor	w11, w11, w8, lsr #9
     f04:	sub	w10, w10, #0x1
     f08:	and	w11, w10, w11
     f0c:	ldr	x12, [x9, w11, uxtw #3]
     f10:	cmp	x12, x8
     f14:	b.ne	f64 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1b8>  // b.any
     f18:	sub	x8, x29, #0x28
     f1c:	add	x2, x29, #0x18
     f20:	mov	x0, x19
     f24:	mov	x1, x20
     f28:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     f2c:	ldurb	w8, [x29, #-8]
     f30:	cbz	w8, ec0 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x114>
     f34:	ldp	w8, w9, [x19, #152]
     f38:	cmp	w8, w9
     f3c:	b.cs	f8c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1e0>  // b.hs, b.nlast
     f40:	ldr	x9, [x19, #144]
     f44:	ldr	x10, [x20]
     f48:	str	x10, [x9, w8, uxtw #3]
     f4c:	ldp	w8, w9, [x19, #152]
     f50:	cmp	w8, w9
     f54:	b.cs	1048 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x29c>  // b.hs, b.nlast
     f58:	add	w8, w8, #0x1
     f5c:	str	w8, [x19, #152]
     f60:	b	ec0 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x114>
     f64:	mov	w13, #0x1                   	// #1
     f68:	cmn	x12, #0x8
     f6c:	b.eq	ec0 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x114>  // b.none
     f70:	add	w11, w11, w13
     f74:	and	w11, w11, w10
     f78:	ldr	x12, [x9, w11, uxtw #3]
     f7c:	add	w13, w13, #0x1
     f80:	cmp	x12, x8
     f84:	b.eq	f18 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x16c>  // b.none
     f88:	b	f68 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1bc>
     f8c:	mov	w3, #0x8                   	// #8
     f90:	mov	x0, x21
     f94:	mov	x1, x22
     f98:	mov	x2, xzr
     f9c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     fa0:	ldr	w8, [x19, #152]
     fa4:	b	f40 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x194>
     fa8:	ldr	x0, [sp, #152]
     fac:	add	x8, x25, #0x90
     fb0:	add	x8, x8, #0x10
     fb4:	cmp	x0, x8
     fb8:	b.eq	fc0 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x214>  // b.none
     fbc:	bl	0 <free>
     fc0:	ldrb	w8, [sp, #16]
     fc4:	tbnz	w8, #0, fd8 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x22c>
     fc8:	ldr	x0, [sp, #24]
     fcc:	bl	0 <_ZdlPv>
     fd0:	ldrb	w8, [sp, #16]
     fd4:	tbnz	w8, #0, 10a8 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2fc>
     fd8:	ldr	x0, [sp, #440]
     fdc:	add	x8, x24, #0x90
     fe0:	add	x8, x8, #0x10
     fe4:	cmp	x0, x8
     fe8:	b.eq	ff0 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x244>  // b.none
     fec:	bl	0 <free>
     ff0:	ldrb	w8, [sp, #304]
     ff4:	tbnz	w8, #0, 1008 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x25c>
     ff8:	ldr	x0, [sp, #312]
     ffc:	bl	0 <_ZdlPv>
    1000:	ldrb	w8, [sp, #304]
    1004:	tbnz	w8, #0, 10a8 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2fc>
    1008:	add	sp, sp, #0x270
    100c:	ldp	x20, x19, [sp, #80]
    1010:	ldp	x22, x21, [sp, #64]
    1014:	ldp	x24, x23, [sp, #48]
    1018:	ldp	x26, x25, [sp, #32]
    101c:	ldr	x28, [sp, #16]
    1020:	ldp	x29, x30, [sp], #96
    1024:	ret
    1028:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    102c:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1030:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1034:	add	x0, x0, #0x0
    1038:	add	x1, x1, #0x0
    103c:	add	x3, x3, #0x0
    1040:	mov	w2, #0x252                 	// #594
    1044:	bl	0 <__assert_fail>
    1048:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    104c:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1050:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1054:	add	x0, x0, #0x0
    1058:	add	x1, x1, #0x0
    105c:	add	x3, x3, #0x0
    1060:	mov	w2, #0x43                  	// #67
    1064:	bl	0 <__assert_fail>
    1068:	add	x8, sp, #0x8
    106c:	mov	x0, x22
    1070:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    1074:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1078:	add	x0, x0, #0x0
    107c:	add	x8, sp, #0x128
    1080:	add	x1, sp, #0x8
    1084:	add	x19, sp, #0x128
    1088:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    108c:	mov	w8, #0x104                 	// #260
    1090:	sub	x2, x29, #0x28
    1094:	mov	x0, x21
    1098:	mov	x1, x20
    109c:	sturh	w8, [x29, #-24]
    10a0:	stp	x19, xzr, [x29, #-40]
    10a4:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    10a8:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    10ac:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    10b0:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    10b4:	add	x0, x0, #0x0
    10b8:	add	x1, x1, #0x0
    10bc:	add	x3, x3, #0x0
    10c0:	mov	w2, #0x45b                 	// #1115
    10c4:	bl	0 <__assert_fail>

00000000000010c8 <_ZN12_GLOBAL__N_15ShlOpD0Ev>:
    10c8:	b	0 <_ZdlPv>

00000000000010cc <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE>:
    10cc:	sub	sp, sp, #0x1d0
    10d0:	stp	x29, x30, [sp, #384]
    10d4:	stp	x28, x25, [sp, #400]
    10d8:	stp	x24, x23, [sp, #416]
    10dc:	stp	x22, x21, [sp, #432]
    10e0:	stp	x20, x19, [sp, #448]
    10e4:	add	x29, sp, #0x180
    10e8:	ldr	w8, [x2, #48]
    10ec:	mov	x19, x5
    10f0:	mov	x20, x4
    10f4:	mov	x21, x2
    10f8:	cmp	w8, #0x2
    10fc:	b.ne	11fc <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x130>  // b.any
    1100:	adrp	x8, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1104:	ldr	d0, [x8]
    1108:	adrp	x9, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    110c:	mov	x8, #0xfffffffffffffff8    	// #-8
    1110:	add	x25, sp, #0x40
    1114:	str	d0, [sp, #72]
    1118:	ldr	d0, [x9]
    111c:	stp	x8, x8, [sp, #80]
    1120:	stp	x8, x8, [sp, #96]
    1124:	stp	x8, x8, [sp, #112]
    1128:	stp	x8, x8, [sp, #128]
    112c:	stp	x8, x8, [sp, #144]
    1130:	stp	x8, x8, [sp, #160]
    1134:	stp	x8, x8, [sp, #176]
    1138:	stp	x8, x8, [sp, #192]
    113c:	add	x8, x25, #0xa0
    1140:	str	xzr, [sp, #64]
    1144:	str	x8, [sp, #208]
    1148:	str	d0, [sp, #216]
    114c:	mov	x23, x1
    1150:	ldr	x1, [x21, #56]
    1154:	mov	x22, x3
    1158:	mov	x24, x0
    115c:	add	x2, sp, #0x40
    1160:	mov	x0, x23
    1164:	mov	x3, x20
    1168:	mov	x4, x19
    116c:	bl	460 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>
    1170:	ldr	x8, [x21, #64]
    1174:	cbz	x8, 1234 <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x168>
    1178:	ldrb	w9, [x8, #8]
    117c:	cmp	w9, #0x8
    1180:	b.ne	1254 <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x188>  // b.any
    1184:	ldr	x9, [x24]
    1188:	ldr	x4, [x8, #24]
    118c:	add	x3, sp, #0x40
    1190:	mov	x0, x24
    1194:	ldr	x8, [x9, #32]
    1198:	mov	x1, x23
    119c:	mov	x2, x21
    11a0:	mov	x5, x22
    11a4:	mov	x6, x20
    11a8:	mov	x7, x19
    11ac:	add	x25, x25, #0x90
    11b0:	blr	x8
    11b4:	ldr	x0, [sp, #208]
    11b8:	add	x8, x25, #0x10
    11bc:	cmp	x0, x8
    11c0:	b.eq	11c8 <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xfc>  // b.none
    11c4:	bl	0 <free>
    11c8:	ldrb	w8, [sp, #72]
    11cc:	tbnz	w8, #0, 11e0 <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x114>
    11d0:	ldr	x0, [sp, #80]
    11d4:	bl	0 <_ZdlPv>
    11d8:	ldrb	w8, [sp, #72]
    11dc:	tbnz	w8, #0, 1294 <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1c8>
    11e0:	ldp	x20, x19, [sp, #448]
    11e4:	ldp	x22, x21, [sp, #432]
    11e8:	ldp	x24, x23, [sp, #416]
    11ec:	ldp	x28, x25, [sp, #400]
    11f0:	ldp	x29, x30, [sp, #384]
    11f4:	add	sp, sp, #0x1d0
    11f8:	ret
    11fc:	sub	x8, x29, #0x20
    1200:	mov	x0, x21
    1204:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    1208:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    120c:	add	x0, x0, #0x0
    1210:	add	x8, sp, #0x40
    1214:	sub	x1, x29, #0x20
    1218:	add	x21, sp, #0x40
    121c:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1220:	mov	w8, #0x104                 	// #260
    1224:	add	x2, sp, #0x8
    1228:	strh	w8, [sp, #24]
    122c:	stp	x21, xzr, [sp, #8]
    1230:	b	1288 <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1bc>
    1234:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1238:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    123c:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1240:	add	x0, x0, #0x0
    1244:	add	x1, x1, #0x0
    1248:	add	x3, x3, #0x0
    124c:	mov	w2, #0x69                  	// #105
    1250:	bl	0 <__assert_fail>
    1254:	add	x8, sp, #0x8
    1258:	mov	x0, x21
    125c:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    1260:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1264:	add	x0, x0, #0x0
    1268:	sub	x8, x29, #0x20
    126c:	add	x1, sp, #0x8
    1270:	sub	x21, x29, #0x20
    1274:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1278:	mov	w8, #0x104                 	// #260
    127c:	strh	w8, [sp, #56]
    1280:	stp	x21, xzr, [sp, #40]
    1284:	add	x2, sp, #0x28
    1288:	mov	x0, x20
    128c:	mov	x1, x19
    1290:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    1294:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1298:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    129c:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    12a0:	add	x0, x0, #0x0
    12a4:	add	x1, x1, #0x0
    12a8:	add	x3, x3, #0x0
    12ac:	mov	w2, #0x45b                 	// #1115
    12b0:	bl	0 <__assert_fail>

00000000000012b4 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE>:
    12b4:	sub	sp, sp, #0xa0
    12b8:	stp	x29, x30, [sp, #96]
    12bc:	str	x23, [sp, #112]
    12c0:	stp	x22, x21, [sp, #128]
    12c4:	stp	x20, x19, [sp, #144]
    12c8:	add	x29, sp, #0x60
    12cc:	tbnz	x4, #63, 13b4 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x100>
    12d0:	ldr	w8, [x3, #152]
    12d4:	cmp	x8, w4, uxtw
    12d8:	b.ls	12e4 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x30>  // b.plast
    12dc:	cmp	x8, x4
    12e0:	b.ne	12fc <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x48>  // b.any
    12e4:	ldp	x20, x19, [sp, #144]
    12e8:	ldp	x22, x21, [sp, #128]
    12ec:	ldr	x23, [sp, #112]
    12f0:	ldp	x29, x30, [sp, #96]
    12f4:	add	sp, sp, #0xa0
    12f8:	ret
    12fc:	ldr	x9, [x3, #144]
    1300:	lsl	x10, x4, #3
    1304:	lsl	x8, x8, #3
    1308:	mov	x19, x5
    130c:	add	x20, x5, #0x90
    1310:	add	x21, x5, #0xa0
    1314:	add	x22, x9, x10
    1318:	sub	x23, x8, x10
    131c:	b	132c <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x78>
    1320:	subs	x23, x23, #0x8
    1324:	add	x22, x22, #0x8
    1328:	b.eq	12e4 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x30>  // b.none
    132c:	sub	x8, x29, #0x28
    1330:	mov	x2, sp
    1334:	mov	x0, x19
    1338:	mov	x1, x22
    133c:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1340:	ldurb	w8, [x29, #-8]
    1344:	cbz	w8, 1320 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x6c>
    1348:	ldp	w8, w9, [x19, #152]
    134c:	cmp	w8, w9
    1350:	b.cs	1378 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xc4>  // b.hs, b.nlast
    1354:	ldr	x9, [x19, #144]
    1358:	ldr	x10, [x22]
    135c:	str	x10, [x9, w8, uxtw #3]
    1360:	ldp	w8, w9, [x19, #152]
    1364:	cmp	w8, w9
    1368:	b.cs	1394 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xe0>  // b.hs, b.nlast
    136c:	add	w8, w8, #0x1
    1370:	str	w8, [x19, #152]
    1374:	b	1320 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x6c>
    1378:	mov	w3, #0x8                   	// #8
    137c:	mov	x0, x20
    1380:	mov	x1, x21
    1384:	mov	x2, xzr
    1388:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    138c:	ldr	w8, [x19, #152]
    1390:	b	1354 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xa0>
    1394:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1398:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    139c:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    13a0:	add	x0, x0, #0x0
    13a4:	add	x1, x1, #0x0
    13a8:	add	x3, x3, #0x0
    13ac:	mov	w2, #0x43                  	// #67
    13b0:	bl	0 <__assert_fail>
    13b4:	mov	x8, sp
    13b8:	mov	x0, x2
    13bc:	mov	x20, x7
    13c0:	mov	x21, x6
    13c4:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    13c8:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    13cc:	add	x0, x0, #0x0
    13d0:	sub	x8, x29, #0x28
    13d4:	mov	x1, sp
    13d8:	sub	x19, x29, #0x28
    13dc:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    13e0:	mov	w8, #0x104                 	// #260
    13e4:	add	x2, sp, #0x20
    13e8:	mov	x0, x21
    13ec:	mov	x1, x20
    13f0:	strh	w8, [sp, #48]
    13f4:	stp	x19, xzr, [sp, #32]
    13f8:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>

00000000000013fc <_ZN12_GLOBAL__N_17TruncOpD0Ev>:
    13fc:	b	0 <_ZdlPv>

0000000000001400 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE>:
    1400:	sub	sp, sp, #0xa0
    1404:	stp	x29, x30, [sp, #96]
    1408:	str	x23, [sp, #112]
    140c:	stp	x22, x21, [sp, #128]
    1410:	stp	x20, x19, [sp, #144]
    1414:	add	x29, sp, #0x60
    1418:	tbnz	x4, #63, 14f0 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xf0>
    141c:	ldr	w8, [x3, #152]
    1420:	cmp	x8, w4, uxtw
    1424:	csel	x8, x8, x4, cc  // cc = lo, ul, last
    1428:	cbz	x8, 14b8 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xb8>
    142c:	ldr	x20, [x3, #144]
    1430:	mov	x19, x5
    1434:	add	x21, x5, #0x90
    1438:	add	x22, x5, #0xa0
    143c:	lsl	x23, x8, #3
    1440:	b	1450 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x50>
    1444:	subs	x23, x23, #0x8
    1448:	add	x20, x20, #0x8
    144c:	b.eq	14b8 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xb8>  // b.none
    1450:	sub	x8, x29, #0x28
    1454:	mov	x2, sp
    1458:	mov	x0, x19
    145c:	mov	x1, x20
    1460:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1464:	ldurb	w8, [x29, #-8]
    1468:	cbz	w8, 1444 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x44>
    146c:	ldp	w8, w9, [x19, #152]
    1470:	cmp	w8, w9
    1474:	b.cs	149c <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x9c>  // b.hs, b.nlast
    1478:	ldr	x9, [x19, #144]
    147c:	ldr	x10, [x20]
    1480:	str	x10, [x9, w8, uxtw #3]
    1484:	ldp	w8, w9, [x19, #152]
    1488:	cmp	w8, w9
    148c:	b.cs	14d0 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xd0>  // b.hs, b.nlast
    1490:	add	w8, w8, #0x1
    1494:	str	w8, [x19, #152]
    1498:	b	1444 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x44>
    149c:	mov	w3, #0x8                   	// #8
    14a0:	mov	x0, x21
    14a4:	mov	x1, x22
    14a8:	mov	x2, xzr
    14ac:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    14b0:	ldr	w8, [x19, #152]
    14b4:	b	1478 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x78>
    14b8:	ldp	x20, x19, [sp, #144]
    14bc:	ldp	x22, x21, [sp, #128]
    14c0:	ldr	x23, [sp, #112]
    14c4:	ldp	x29, x30, [sp, #96]
    14c8:	add	sp, sp, #0xa0
    14cc:	ret
    14d0:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    14d4:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    14d8:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    14dc:	add	x0, x0, #0x0
    14e0:	add	x1, x1, #0x0
    14e4:	add	x3, x3, #0x0
    14e8:	mov	w2, #0x43                  	// #67
    14ec:	bl	0 <__assert_fail>
    14f0:	mov	x8, sp
    14f4:	mov	x0, x2
    14f8:	mov	x20, x7
    14fc:	mov	x21, x6
    1500:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    1504:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1508:	add	x0, x0, #0x0
    150c:	sub	x8, x29, #0x28
    1510:	mov	x1, sp
    1514:	sub	x19, x29, #0x28
    1518:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    151c:	mov	w8, #0x104                 	// #260
    1520:	add	x2, sp, #0x20
    1524:	mov	x0, x21
    1528:	mov	x1, x20
    152c:	strh	w8, [sp, #48]
    1530:	stp	x19, xzr, [sp, #32]
    1534:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>

0000000000001538 <_ZN12_GLOBAL__N_15RotOpD0Ev>:
    1538:	b	0 <_ZdlPv>

000000000000153c <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE>:
    153c:	sub	sp, sp, #0x80
    1540:	stp	x29, x30, [sp, #48]
    1544:	str	x25, [sp, #64]
    1548:	stp	x24, x23, [sp, #80]
    154c:	stp	x22, x21, [sp, #96]
    1550:	stp	x20, x19, [sp, #112]
    1554:	add	x29, sp, #0x30
    1558:	ldrb	w9, [x0, #8]
    155c:	ldr	w8, [x3, #152]
    1560:	cmp	w9, #0x0
    1564:	cneg	x9, x4, ne  // ne = any
    1568:	cbz	w8, 16b8 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x17c>
    156c:	mov	x19, x5
    1570:	mov	x20, x3
    1574:	tbnz	x9, #63, 1588 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x4c>
    1578:	ldr	x21, [x20, #144]!
    157c:	udiv	x10, x9, x8
    1580:	msub	x24, x10, x8, x9
    1584:	b	15a0 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x64>
    1588:	neg	x9, x9
    158c:	ldr	x21, [x20, #144]!
    1590:	udiv	x10, x9, x8
    1594:	msub	x9, x10, x8, x9
    1598:	sub	x24, x8, x9
    159c:	cbz	x9, 1630 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xf4>
    15a0:	lsl	x9, x24, #3
    15a4:	lsl	x8, x8, #3
    15a8:	add	x22, x19, #0x90
    15ac:	add	x23, x19, #0xa0
    15b0:	add	x21, x21, x9
    15b4:	sub	x25, x8, x9
    15b8:	b	15e8 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xac>
    15bc:	ldr	x9, [x19, #144]
    15c0:	ldr	x10, [x21]
    15c4:	str	x10, [x9, w8, uxtw #3]
    15c8:	ldp	w8, w9, [x19, #152]
    15cc:	cmp	w8, w9
    15d0:	b.cs	16d4 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x198>  // b.hs, b.nlast
    15d4:	add	w8, w8, #0x1
    15d8:	str	w8, [x19, #152]
    15dc:	subs	x25, x25, #0x8
    15e0:	add	x21, x21, #0x8
    15e4:	b.eq	162c <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xf0>  // b.none
    15e8:	add	x8, sp, #0x8
    15ec:	add	x2, x29, #0x18
    15f0:	mov	x0, x19
    15f4:	mov	x1, x21
    15f8:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    15fc:	ldrb	w8, [sp, #40]
    1600:	cbz	w8, 15dc <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xa0>
    1604:	ldp	w8, w9, [x19, #152]
    1608:	cmp	w8, w9
    160c:	b.cc	15bc <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x80>  // b.lo, b.ul, b.last
    1610:	mov	w3, #0x8                   	// #8
    1614:	mov	x0, x22
    1618:	mov	x1, x23
    161c:	mov	x2, xzr
    1620:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1624:	ldr	w8, [x19, #152]
    1628:	b	15bc <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x80>
    162c:	ldr	x21, [x20]
    1630:	cbz	x24, 16b8 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x17c>
    1634:	add	x20, x19, #0x90
    1638:	add	x22, x19, #0xa0
    163c:	lsl	x23, x24, #3
    1640:	b	1650 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x114>
    1644:	subs	x23, x23, #0x8
    1648:	add	x21, x21, #0x8
    164c:	b.eq	16b8 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x17c>  // b.none
    1650:	add	x8, sp, #0x8
    1654:	add	x2, x29, #0x18
    1658:	mov	x0, x19
    165c:	mov	x1, x21
    1660:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1664:	ldrb	w8, [sp, #40]
    1668:	cbz	w8, 1644 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x108>
    166c:	ldp	w8, w9, [x19, #152]
    1670:	cmp	w8, w9
    1674:	b.cs	169c <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x160>  // b.hs, b.nlast
    1678:	ldr	x9, [x19, #144]
    167c:	ldr	x10, [x21]
    1680:	str	x10, [x9, w8, uxtw #3]
    1684:	ldp	w8, w9, [x19, #152]
    1688:	cmp	w8, w9
    168c:	b.cs	16d4 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x198>  // b.hs, b.nlast
    1690:	add	w8, w8, #0x1
    1694:	str	w8, [x19, #152]
    1698:	b	1644 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x108>
    169c:	mov	w3, #0x8                   	// #8
    16a0:	mov	x0, x20
    16a4:	mov	x1, x22
    16a8:	mov	x2, xzr
    16ac:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    16b0:	ldr	w8, [x19, #152]
    16b4:	b	1678 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x13c>
    16b8:	ldp	x20, x19, [sp, #112]
    16bc:	ldp	x22, x21, [sp, #96]
    16c0:	ldp	x24, x23, [sp, #80]
    16c4:	ldr	x25, [sp, #64]
    16c8:	ldp	x29, x30, [sp, #48]
    16cc:	add	sp, sp, #0x80
    16d0:	ret
    16d4:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    16d8:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    16dc:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    16e0:	add	x0, x0, #0x0
    16e4:	add	x1, x1, #0x0
    16e8:	add	x3, x3, #0x0
    16ec:	mov	w2, #0x43                  	// #67
    16f0:	bl	0 <__assert_fail>

00000000000016f4 <_ZN12_GLOBAL__N_110DecimateOpD0Ev>:
    16f4:	b	0 <_ZdlPv>

00000000000016f8 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE>:
    16f8:	sub	sp, sp, #0xb0
    16fc:	stp	x29, x30, [sp, #96]
    1700:	str	x25, [sp, #112]
    1704:	stp	x24, x23, [sp, #128]
    1708:	stp	x22, x21, [sp, #144]
    170c:	stp	x20, x19, [sp, #160]
    1710:	add	x29, sp, #0x60
    1714:	cmp	x4, #0x1
    1718:	b.lt	17fc <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x104>  // b.tstop
    171c:	ldr	w8, [x3, #152]
    1720:	mov	x21, x3
    1724:	cbz	w8, 17c0 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xc8>
    1728:	mov	x19, x5
    172c:	mov	x20, x4
    1730:	mov	x25, xzr
    1734:	add	x22, x5, #0x90
    1738:	add	x23, x5, #0xa0
    173c:	b	1750 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x58>
    1740:	ldr	w8, [x21, #152]
    1744:	add	w25, w25, w20
    1748:	cmp	x25, x8
    174c:	b.cs	17c0 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xc8>  // b.hs, b.nlast
    1750:	ldr	x8, [x21, #144]
    1754:	mov	x2, sp
    1758:	mov	x0, x19
    175c:	add	x24, x8, x25, lsl #3
    1760:	sub	x8, x29, #0x28
    1764:	mov	x1, x24
    1768:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    176c:	ldurb	w8, [x29, #-8]
    1770:	cbz	w8, 1740 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x48>
    1774:	ldp	w8, w9, [x19, #152]
    1778:	cmp	w8, w9
    177c:	b.cs	17a4 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xac>  // b.hs, b.nlast
    1780:	ldr	x9, [x19, #144]
    1784:	ldr	x10, [x24]
    1788:	str	x10, [x9, w8, uxtw #3]
    178c:	ldp	w8, w9, [x19, #152]
    1790:	cmp	w8, w9
    1794:	b.cs	17dc <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xe4>  // b.hs, b.nlast
    1798:	add	w8, w8, #0x1
    179c:	str	w8, [x19, #152]
    17a0:	b	1740 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x48>
    17a4:	mov	w3, #0x8                   	// #8
    17a8:	mov	x0, x22
    17ac:	mov	x1, x23
    17b0:	mov	x2, xzr
    17b4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    17b8:	ldr	w8, [x19, #152]
    17bc:	b	1780 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x88>
    17c0:	ldp	x20, x19, [sp, #160]
    17c4:	ldp	x22, x21, [sp, #144]
    17c8:	ldp	x24, x23, [sp, #128]
    17cc:	ldr	x25, [sp, #112]
    17d0:	ldp	x29, x30, [sp, #96]
    17d4:	add	sp, sp, #0xb0
    17d8:	ret
    17dc:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    17e0:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    17e4:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    17e8:	add	x0, x0, #0x0
    17ec:	add	x1, x1, #0x0
    17f0:	add	x3, x3, #0x0
    17f4:	mov	w2, #0x43                  	// #67
    17f8:	bl	0 <__assert_fail>
    17fc:	mov	x8, sp
    1800:	mov	x0, x2
    1804:	mov	x22, x7
    1808:	mov	x23, x6
    180c:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    1810:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1814:	add	x0, x0, #0x0
    1818:	sub	x8, x29, #0x28
    181c:	mov	x1, sp
    1820:	sub	x19, x29, #0x28
    1824:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1828:	mov	w8, #0x104                 	// #260
    182c:	add	x2, sp, #0x20
    1830:	mov	x0, x23
    1834:	mov	x1, x22
    1838:	strh	w8, [sp, #48]
    183c:	stp	x19, xzr, [sp, #32]
    1840:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>

0000000000001844 <_ZN12_GLOBAL__N_112InterleaveOpD0Ev>:
    1844:	b	0 <_ZdlPv>

0000000000001848 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE>:
    1848:	stp	x29, x30, [sp, #-96]!
    184c:	stp	x28, x27, [sp, #16]
    1850:	stp	x26, x25, [sp, #32]
    1854:	stp	x24, x23, [sp, #48]
    1858:	stp	x22, x21, [sp, #64]
    185c:	stp	x20, x19, [sp, #80]
    1860:	mov	x29, sp
    1864:	sub	sp, sp, #0x5c0
    1868:	movi	v0.2d, #0x0
    186c:	adrp	x9, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1870:	mov	x23, x1
    1874:	ldr	w1, [x2, #48]
    1878:	stp	q0, q0, [sp, #256]
    187c:	stp	q0, q0, [sp, #224]
    1880:	stp	q0, q0, [sp, #192]
    1884:	stp	q0, q0, [sp, #160]
    1888:	stp	q0, q0, [sp, #128]
    188c:	stp	q0, q0, [sp, #96]
    1890:	stp	q0, q0, [sp, #64]
    1894:	stp	q0, q0, [sp, #32]
    1898:	stp	q0, q0, [sp]
    189c:	ldr	d0, [x9]
    18a0:	mov	x9, #0xfffffffffffffff8    	// #-8
    18a4:	adrp	x8, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    18a8:	stp	x9, x9, [sp, #16]
    18ac:	stp	x9, x9, [sp, #32]
    18b0:	stp	x9, x9, [sp, #48]
    18b4:	stp	x9, x9, [sp, #64]
    18b8:	stp	x9, x9, [sp, #80]
    18bc:	stp	x9, x9, [sp, #96]
    18c0:	stp	x9, x9, [sp, #112]
    18c4:	stp	x9, x9, [sp, #128]
    18c8:	adrp	x9, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    18cc:	ldr	d1, [x8]
    18d0:	str	d0, [sp, #152]
    18d4:	ldr	d0, [x9]
    18d8:	mov	x8, sp
    18dc:	add	x9, sp, #0x120
    18e0:	mov	x20, x2
    18e4:	add	x24, x8, #0xa0
    18e8:	add	x8, x9, #0x10
    18ec:	add	x0, sp, #0x120
    18f0:	mov	x2, sp
    18f4:	mov	x21, x5
    18f8:	mov	x22, x4
    18fc:	mov	x19, x3
    1900:	str	d1, [sp, #8]
    1904:	str	x24, [sp, #144]
    1908:	str	x8, [sp, #288]
    190c:	str	d0, [sp, #296]
    1910:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1914:	ldr	x0, [sp, #144]
    1918:	cmp	x0, x24
    191c:	b.eq	1924 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xdc>  // b.none
    1920:	bl	0 <free>
    1924:	ldrb	w8, [sp, #8]
    1928:	tbnz	w8, #0, 193c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xf4>
    192c:	ldr	x0, [sp, #16]
    1930:	bl	0 <_ZdlPv>
    1934:	ldrb	w8, [sp, #8]
    1938:	tbnz	w8, #0, 1b20 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2d8>
    193c:	ldr	w8, [x20, #48]
    1940:	cbz	w8, 1ab0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x268>
    1944:	mov	w25, wzr
    1948:	mov	x24, xzr
    194c:	add	x26, x20, #0x38
    1950:	sub	x27, x8, #0x1
    1954:	mov	w28, #0x98                  	// #152
    1958:	ldr	w8, [sp, #296]
    195c:	cmp	x24, x8
    1960:	b.cs	1b7c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x334>  // b.hs, b.nlast
    1964:	ldr	x8, [sp, #288]
    1968:	ldr	x1, [x26, x24, lsl #3]
    196c:	mov	x0, x23
    1970:	mov	x3, x22
    1974:	add	x8, x8, x28
    1978:	sub	x2, x8, #0x98
    197c:	mov	x4, x21
    1980:	bl	460 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>
    1984:	ldr	w8, [sp, #296]
    1988:	cmp	x24, x8
    198c:	b.cs	1b7c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x334>  // b.hs, b.nlast
    1990:	ldr	x8, [sp, #288]
    1994:	ldr	w8, [x8, x28]
    1998:	cmp	w25, w8
    199c:	csel	w25, w8, w25, cc  // cc = lo, ul, last
    19a0:	cmp	x27, x24
    19a4:	b.eq	19dc <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x194>  // b.none
    19a8:	ldr	w8, [x20, #48]
    19ac:	add	x24, x24, #0x1
    19b0:	add	x28, x28, #0x120
    19b4:	cmp	x24, x8
    19b8:	b.cc	1958 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x110>  // b.lo, b.ul, b.last
    19bc:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    19c0:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    19c4:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    19c8:	add	x0, x0, #0x0
    19cc:	add	x1, x1, #0x0
    19d0:	add	x3, x3, #0x0
    19d4:	mov	w2, #0x540                 	// #1344
    19d8:	bl	0 <__assert_fail>
    19dc:	cbz	w25, 1ab0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x268>
    19e0:	mov	x24, xzr
    19e4:	add	x21, x19, #0x90
    19e8:	add	x22, x19, #0xa0
    19ec:	mov	w25, w25
    19f0:	b	1a00 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1b8>
    19f4:	add	x24, x24, #0x1
    19f8:	cmp	x24, x25
    19fc:	b.eq	1ab0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x268>  // b.none
    1a00:	ldr	w26, [x20, #48]
    1a04:	cbz	w26, 19f4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1ac>
    1a08:	mov	x27, xzr
    1a0c:	mov	w28, #0x98                  	// #152
    1a10:	b	1a44 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1fc>
    1a14:	ldr	x9, [x19, #144]
    1a18:	ldr	x10, [x23]
    1a1c:	str	x10, [x9, w8, uxtw #3]
    1a20:	ldp	w8, w9, [x19, #152]
    1a24:	cmp	w8, w9
    1a28:	b.cs	1b9c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x354>  // b.hs, b.nlast
    1a2c:	add	w8, w8, #0x1
    1a30:	str	w8, [x19, #152]
    1a34:	add	x27, x27, #0x1
    1a38:	cmp	x26, x27
    1a3c:	add	x28, x28, #0x120
    1a40:	b.eq	19f4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1ac>  // b.none
    1a44:	ldr	w8, [sp, #296]
    1a48:	cmp	x27, x8
    1a4c:	b.cs	1b7c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x334>  // b.hs, b.nlast
    1a50:	ldr	x8, [sp, #288]
    1a54:	ldr	w9, [x8, x28]
    1a58:	cmp	x24, x9
    1a5c:	b.cs	1a34 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1ec>  // b.hs, b.nlast
    1a60:	add	x8, x8, x28
    1a64:	ldur	x8, [x8, #-8]
    1a68:	sub	x2, x29, #0x10
    1a6c:	mov	x0, x19
    1a70:	add	x23, x8, x24, lsl #3
    1a74:	mov	x8, sp
    1a78:	mov	x1, x23
    1a7c:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1a80:	ldrb	w8, [sp, #32]
    1a84:	cbz	w8, 1a34 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1ec>
    1a88:	ldp	w8, w9, [x19, #152]
    1a8c:	cmp	w8, w9
    1a90:	b.cc	1a14 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1cc>  // b.lo, b.ul, b.last
    1a94:	mov	w3, #0x8                   	// #8
    1a98:	mov	x0, x21
    1a9c:	mov	x1, x22
    1aa0:	mov	x2, xzr
    1aa4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1aa8:	ldr	w8, [x19, #152]
    1aac:	b	1a14 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1cc>
    1ab0:	ldr	w8, [sp, #296]
    1ab4:	ldr	x19, [sp, #288]
    1ab8:	cbz	w8, 1b44 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2fc>
    1abc:	add	x8, x8, x8, lsl #3
    1ac0:	lsl	x20, x8, #5
    1ac4:	b	1ae4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x29c>
    1ac8:	add	x8, x19, x20
    1acc:	sub	x8, x8, #0x120
    1ad0:	ldr	x9, [x8]
    1ad4:	subs	x20, x20, #0x120
    1ad8:	add	x9, x9, #0x1
    1adc:	str	x9, [x8]
    1ae0:	b.eq	1b40 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2f8>  // b.none
    1ae4:	add	x21, x19, x20
    1ae8:	ldur	x0, [x21, #-144]
    1aec:	sub	x8, x21, #0x80
    1af0:	cmp	x8, x0
    1af4:	b.eq	1afc <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2b4>  // b.none
    1af8:	bl	0 <free>
    1afc:	sub	x21, x21, #0x118
    1b00:	ldrb	w8, [x21]
    1b04:	tbnz	w8, #0, 1ac8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x280>
    1b08:	add	x8, x19, x20
    1b0c:	sub	x8, x8, #0x110
    1b10:	ldr	x0, [x8]
    1b14:	bl	0 <_ZdlPv>
    1b18:	ldrb	w8, [x21]
    1b1c:	tbz	w8, #0, 1ac8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x280>
    1b20:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1b24:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1b28:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1b2c:	add	x0, x0, #0x0
    1b30:	add	x1, x1, #0x0
    1b34:	add	x3, x3, #0x0
    1b38:	mov	w2, #0x45b                 	// #1115
    1b3c:	bl	0 <__assert_fail>
    1b40:	ldr	x19, [sp, #288]
    1b44:	add	x8, sp, #0x120
    1b48:	add	x8, x8, #0x10
    1b4c:	cmp	x19, x8
    1b50:	b.eq	1b5c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x314>  // b.none
    1b54:	mov	x0, x19
    1b58:	bl	0 <free>
    1b5c:	add	sp, sp, #0x5c0
    1b60:	ldp	x20, x19, [sp, #80]
    1b64:	ldp	x22, x21, [sp, #64]
    1b68:	ldp	x24, x23, [sp, #48]
    1b6c:	ldp	x26, x25, [sp, #32]
    1b70:	ldp	x28, x27, [sp, #16]
    1b74:	ldp	x29, x30, [sp], #96
    1b78:	ret
    1b7c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1b80:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1b84:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1b88:	add	x0, x0, #0x0
    1b8c:	add	x1, x1, #0x0
    1b90:	add	x3, x3, #0x0
    1b94:	mov	w2, #0x95                  	// #149
    1b98:	bl	0 <__assert_fail>
    1b9c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1ba0:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1ba4:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1ba8:	add	x0, x0, #0x0
    1bac:	add	x1, x1, #0x0
    1bb0:	add	x3, x3, #0x0
    1bb4:	mov	w2, #0x43                  	// #67
    1bb8:	bl	0 <__assert_fail>

0000000000001bbc <_ZN12_GLOBAL__N_110SequenceOpD0Ev>:
    1bbc:	b	0 <_ZdlPv>

0000000000001bc0 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE>:
    1bc0:	sub	sp, sp, #0x1f0
    1bc4:	stp	x29, x30, [sp, #400]
    1bc8:	stp	x28, x27, [sp, #416]
    1bcc:	stp	x26, x25, [sp, #432]
    1bd0:	stp	x24, x23, [sp, #448]
    1bd4:	stp	x22, x21, [sp, #464]
    1bd8:	stp	x20, x19, [sp, #480]
    1bdc:	add	x29, sp, #0x190
    1be0:	ldr	w8, [x2, #48]
    1be4:	mov	x21, x5
    1be8:	mov	x23, x4
    1bec:	mov	x27, x2
    1bf0:	cmp	w8, #0x5
    1bf4:	sub	x19, x29, #0xa0
    1bf8:	str	x1, [sp, #96]
    1bfc:	b.cs	2188 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5c8>  // b.hs, b.nlast
    1c00:	mov	x22, x3
    1c04:	cmp	w8, #0x4
    1c08:	b.ne	1c28 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x68>  // b.any
    1c0c:	ldr	x8, [x27, #80]
    1c10:	cbz	x8, 2168 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5a8>
    1c14:	ldrb	w9, [x8, #8]
    1c18:	cmp	w9, #0x8
    1c1c:	b.ne	2298 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6d8>  // b.any
    1c20:	ldr	w20, [x8, #24]
    1c24:	b	1c2c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6c>
    1c28:	mov	w20, #0x1                   	// #1
    1c2c:	sub	x8, x29, #0x50
    1c30:	add	x28, x8, #0x10
    1c34:	stp	x28, xzr, [x29, #-80]
    1c38:	sturb	wzr, [x29, #-64]
    1c3c:	ldr	x8, [x27, #56]
    1c40:	cbz	x8, 21a8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5e8>
    1c44:	ldrb	w9, [x8, #8]
    1c48:	cmp	w9, #0x12
    1c4c:	b.ne	21c8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x608>  // b.any
    1c50:	ldp	x25, x26, [x8, #24]
    1c54:	sub	x8, x29, #0xa0
    1c58:	add	x24, x8, #0x10
    1c5c:	stur	x24, [x29, #-160]
    1c60:	cbz	x25, 1ca8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xe8>
    1c64:	cmp	x26, #0x10
    1c68:	mov	x0, x24
    1c6c:	stur	x26, [x29, #-48]
    1c70:	b.cc	1c90 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xd0>  // b.lo, b.ul, b.last
    1c74:	sub	x0, x29, #0xa0
    1c78:	sub	x1, x29, #0x30
    1c7c:	mov	x2, xzr
    1c80:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    1c84:	ldur	x8, [x29, #-48]
    1c88:	stur	x0, [x29, #-160]
    1c8c:	stur	x8, [x29, #-144]
    1c90:	cbz	x26, 1cc0 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x100>
    1c94:	cmp	x26, #0x1
    1c98:	b.ne	1cb4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xf4>  // b.any
    1c9c:	ldrb	w8, [x25]
    1ca0:	strb	w8, [x0]
    1ca4:	b	1cc0 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x100>
    1ca8:	stur	xzr, [x29, #-152]
    1cac:	sturb	wzr, [x29, #-144]
    1cb0:	b	1d08 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x148>
    1cb4:	mov	x1, x25
    1cb8:	mov	x2, x26
    1cbc:	bl	0 <memcpy>
    1cc0:	ldur	x8, [x29, #-48]
    1cc4:	ldur	x9, [x29, #-160]
    1cc8:	stur	x8, [x29, #-152]
    1ccc:	strb	wzr, [x9, x8]
    1cd0:	ldur	x9, [x29, #-160]
    1cd4:	cmp	x9, x24
    1cd8:	b.eq	1d08 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x148>  // b.none
    1cdc:	ldur	x8, [x29, #-80]
    1ce0:	ldur	x10, [x29, #-64]
    1ce4:	ldur	q0, [x19, #8]
    1ce8:	stur	x9, [x29, #-80]
    1cec:	cmp	x8, x28
    1cf0:	csel	x8, xzr, x8, eq  // eq = none
    1cf4:	stur	q0, [x19, #88]
    1cf8:	cbz	x8, 20d8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x518>
    1cfc:	stur	x8, [x29, #-160]
    1d00:	stur	x10, [x29, #-144]
    1d04:	b	1d44 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x184>
    1d08:	ldur	x2, [x29, #-152]
    1d0c:	cbz	x2, 1d30 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x170>
    1d10:	ldur	x0, [x29, #-80]
    1d14:	cmp	x2, #0x1
    1d18:	b.ne	1d28 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x168>  // b.any
    1d1c:	ldurb	w8, [x29, #-144]
    1d20:	strb	w8, [x0]
    1d24:	b	1d30 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x170>
    1d28:	mov	x1, x24
    1d2c:	bl	0 <memcpy>
    1d30:	ldur	x8, [x29, #-152]
    1d34:	ldur	x9, [x29, #-80]
    1d38:	stur	x8, [x29, #-72]
    1d3c:	strb	wzr, [x9, x8]
    1d40:	ldur	x8, [x29, #-160]
    1d44:	stur	xzr, [x29, #-152]
    1d48:	strb	wzr, [x8]
    1d4c:	ldur	x0, [x29, #-160]
    1d50:	cmp	x0, x24
    1d54:	b.eq	1d5c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x19c>  // b.none
    1d58:	bl	0 <_ZdlPv>
    1d5c:	ldr	x8, [x27, #64]
    1d60:	cbz	x8, 2168 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5a8>
    1d64:	ldrb	w9, [x8, #8]
    1d68:	str	x28, [sp, #48]
    1d6c:	cmp	w9, #0x8
    1d70:	b.ne	21e0 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x620>  // b.any
    1d74:	ldr	x28, [x8, #24]
    1d78:	lsr	x8, x28, #30
    1d7c:	cbnz	x8, 21f8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x638>
    1d80:	ldr	x8, [x27, #72]
    1d84:	cbz	x8, 2168 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5a8>
    1d88:	ldrb	w9, [x8, #8]
    1d8c:	cmp	w9, #0x8
    1d90:	b.ne	2204 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x644>  // b.any
    1d94:	ldr	x8, [x8, #24]
    1d98:	str	x8, [sp, #104]
    1d9c:	lsr	x8, x8, #30
    1da0:	cbnz	x8, 223c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x67c>
    1da4:	ldr	x8, [x27, #32]
    1da8:	cbz	x8, 2258 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x698>
    1dac:	stp	x27, x23, [sp, #24]
    1db0:	ldrb	w9, [x8, #8]
    1db4:	str	x21, [sp, #40]
    1db8:	cmp	w9, #0x6
    1dbc:	b.ne	2278 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6b8>  // b.any
    1dc0:	ldr	x9, [sp, #104]
    1dc4:	cmp	x28, x9
    1dc8:	cneg	w27, w20, gt
    1dcc:	cmp	w27, #0x1
    1dd0:	b.lt	1e14 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x254>  // b.tstop
    1dd4:	ldr	x9, [sp, #104]
    1dd8:	cmp	x28, x9
    1ddc:	b.le	1e14 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x254>
    1de0:	ldur	x0, [x29, #-80]
    1de4:	ldr	x8, [sp, #48]
    1de8:	cmp	x0, x8
    1dec:	b.eq	1df4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x234>  // b.none
    1df0:	bl	0 <_ZdlPv>
    1df4:	ldp	x20, x19, [sp, #480]
    1df8:	ldp	x22, x21, [sp, #464]
    1dfc:	ldp	x24, x23, [sp, #448]
    1e00:	ldp	x26, x25, [sp, #432]
    1e04:	ldp	x28, x27, [sp, #416]
    1e08:	ldp	x29, x30, [sp, #400]
    1e0c:	add	sp, sp, #0x1f0
    1e10:	ret
    1e14:	add	x10, x22, #0x90
    1e18:	ldr	x8, [x8, #24]
    1e1c:	str	x10, [sp, #16]
    1e20:	add	x10, x22, #0xa0
    1e24:	str	x10, [sp, #8]
    1e28:	sxtw	x10, w27
    1e2c:	str	x10, [sp, #88]
    1e30:	adrp	x10, 0 <_ZTVN4llvm18raw_string_ostreamE>
    1e34:	ldr	x10, [x10]
    1e38:	adrp	x11, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1e3c:	ldr	x11, [x11]
    1e40:	ldr	x8, [x8, #104]
    1e44:	sub	x9, x29, #0xa0
    1e48:	add	x9, x9, #0x8
    1e4c:	sub	x12, x29, #0x70
    1e50:	str	x9, [sp, #56]
    1e54:	add	x9, x10, #0x10
    1e58:	add	x21, x12, #0x10
    1e5c:	str	x9, [sp, #80]
    1e60:	add	x9, x8, #0x30
    1e64:	add	x19, x8, #0x38
    1e68:	add	x8, x11, #0x10
    1e6c:	stp	x8, x9, [sp, #64]
    1e70:	tbz	w27, #31, 1e80 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2c0>
    1e74:	ldr	x8, [sp, #104]
    1e78:	cmp	x28, x8
    1e7c:	b.lt	1de0 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x220>  // b.tstop
    1e80:	mov	w8, #0x1                   	// #1
    1e84:	ldr	x9, [sp, #56]
    1e88:	stur	w8, [x29, #-128]
    1e8c:	ldur	x8, [x29, #-80]
    1e90:	sub	x0, x29, #0xa0
    1e94:	stp	xzr, xzr, [x9]
    1e98:	str	xzr, [x9, #16]
    1e9c:	ldr	x9, [sp, #80]
    1ea0:	stur	x8, [x29, #-40]
    1ea4:	ldr	x8, [sp, #64]
    1ea8:	sub	x1, x29, #0x30
    1eac:	stur	x9, [x29, #-160]
    1eb0:	sub	x9, x29, #0x70
    1eb4:	stp	x21, xzr, [x29, #-112]
    1eb8:	sturb	wzr, [x29, #-96]
    1ebc:	stur	x9, [x29, #-120]
    1ec0:	stur	x8, [x29, #-48]
    1ec4:	stur	w28, [x29, #-32]
    1ec8:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
    1ecc:	ldur	x8, [x29, #-136]
    1ed0:	ldur	x9, [x29, #-152]
    1ed4:	cmp	x8, x9
    1ed8:	b.eq	1ee4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x324>  // b.none
    1edc:	sub	x0, x29, #0xa0
    1ee0:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    1ee4:	ldr	x8, [sp, #72]
    1ee8:	ldr	x25, [x8, #16]
    1eec:	cbz	x25, 1f90 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3d0>
    1ef0:	ldur	x8, [x29, #-120]
    1ef4:	mov	x23, x19
    1ef8:	mov	x20, x21
    1efc:	ldp	x26, x24, [x8]
    1f00:	b	1f14 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x354>
    1f04:	add	x8, x25, #0x10
    1f08:	mov	x23, x25
    1f0c:	ldr	x25, [x8]
    1f10:	cbz	x25, 1f50 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x390>
    1f14:	ldr	x21, [x25, #40]
    1f18:	cmp	x24, x21
    1f1c:	csel	x2, x24, x21, cc  // cc = lo, ul, last
    1f20:	cbz	x2, 1f3c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x37c>
    1f24:	ldr	x0, [x25, #32]
    1f28:	mov	x1, x26
    1f2c:	bl	0 <memcmp>
    1f30:	cbz	w0, 1f3c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x37c>
    1f34:	tbz	w0, #31, 1f04 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x344>
    1f38:	b	1f44 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x384>
    1f3c:	cmp	x21, x24
    1f40:	b.cs	1f04 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x344>  // b.hs, b.nlast
    1f44:	add	x8, x25, #0x18
    1f48:	ldr	x25, [x8]
    1f4c:	cbnz	x25, 1f14 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x354>
    1f50:	cmp	x23, x19
    1f54:	b.eq	20b0 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x4f0>  // b.none
    1f58:	ldr	x25, [x23, #40]
    1f5c:	cmp	x25, x24
    1f60:	csel	x2, x25, x24, cc  // cc = lo, ul, last
    1f64:	cbz	x2, 1f84 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3c4>
    1f68:	ldr	x1, [x23, #32]
    1f6c:	mov	x0, x26
    1f70:	bl	0 <memcmp>
    1f74:	cbz	w0, 1f84 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3c4>
    1f78:	mov	x21, x20
    1f7c:	tbnz	w0, #31, 1f90 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3d0>
    1f80:	b	1f94 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3d4>
    1f84:	cmp	x24, x25
    1f88:	mov	x21, x20
    1f8c:	b.cs	1f94 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3d4>  // b.hs, b.nlast
    1f90:	mov	x23, x19
    1f94:	cmp	x23, x19
    1f98:	b.eq	2104 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x544>  // b.none
    1f9c:	ldr	x1, [x23, #64]
    1fa0:	stur	x1, [x29, #-168]
    1fa4:	cbz	x1, 2108 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x548>
    1fa8:	ldr	x0, [sp, #96]
    1fac:	bl	79c <_ZN4llvm9SetTheory6expandEPNS_6RecordE>
    1fb0:	cbz	x0, 2030 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x470>
    1fb4:	ldp	x26, x24, [x0]
    1fb8:	cmp	x26, x24
    1fbc:	b.ne	1ff0 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x430>  // b.any
    1fc0:	b	2078 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x4b8>
    1fc4:	ldr	x9, [x22, #144]
    1fc8:	ldr	x10, [x26]
    1fcc:	str	x10, [x9, w8, uxtw #3]
    1fd0:	ldp	w8, w9, [x22, #152]
    1fd4:	cmp	w8, w9
    1fd8:	b.cs	20e4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x524>  // b.hs, b.nlast
    1fdc:	add	w8, w8, #0x1
    1fe0:	str	w8, [x22, #152]
    1fe4:	add	x26, x26, #0x8
    1fe8:	cmp	x24, x26
    1fec:	b.eq	2078 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x4b8>  // b.none
    1ff0:	sub	x8, x29, #0x30
    1ff4:	add	x2, sp, #0xb0
    1ff8:	mov	x0, x22
    1ffc:	mov	x1, x26
    2000:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    2004:	ldurb	w8, [x29, #-16]
    2008:	cbz	w8, 1fe4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x424>
    200c:	ldp	w8, w9, [x22, #152]
    2010:	cmp	w8, w9
    2014:	b.cc	1fc4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x404>  // b.lo, b.ul, b.last
    2018:	ldp	x1, x0, [sp, #8]
    201c:	mov	w3, #0x8                   	// #8
    2020:	mov	x2, xzr
    2024:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2028:	ldr	w8, [x22, #152]
    202c:	b	1fc4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x404>
    2030:	sub	x8, x29, #0x30
    2034:	sub	x1, x29, #0xa8
    2038:	add	x2, sp, #0xb0
    203c:	mov	x0, x22
    2040:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    2044:	ldurb	w8, [x29, #-16]
    2048:	cbz	w8, 2078 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x4b8>
    204c:	ldp	w8, w9, [x22, #152]
    2050:	cmp	w8, w9
    2054:	b.cs	20c0 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x500>  // b.hs, b.nlast
    2058:	ldr	x9, [x22, #144]
    205c:	ldur	x10, [x29, #-168]
    2060:	str	x10, [x9, w8, uxtw #3]
    2064:	ldp	w8, w9, [x22, #152]
    2068:	cmp	w8, w9
    206c:	b.cs	20e4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x524>  // b.hs, b.nlast
    2070:	add	w8, w8, #0x1
    2074:	str	w8, [x22, #152]
    2078:	ldr	x8, [sp, #88]
    207c:	sub	x0, x29, #0xa0
    2080:	add	x28, x28, x8
    2084:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
    2088:	ldur	x0, [x29, #-112]
    208c:	cmp	x0, x21
    2090:	b.eq	2098 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x4d8>  // b.none
    2094:	bl	0 <_ZdlPv>
    2098:	cmp	w27, #0x1
    209c:	b.lt	1e70 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2b0>  // b.tstop
    20a0:	ldr	x8, [sp, #104]
    20a4:	cmp	x28, x8
    20a8:	b.le	1e70 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2b0>
    20ac:	b	1de0 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x220>
    20b0:	mov	x21, x20
    20b4:	cmp	x23, x19
    20b8:	b.ne	1f9c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3dc>  // b.any
    20bc:	b	2104 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x544>
    20c0:	ldp	x1, x0, [sp, #8]
    20c4:	mov	w3, #0x8                   	// #8
    20c8:	mov	x2, xzr
    20cc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    20d0:	ldr	w8, [x22, #152]
    20d4:	b	2058 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x498>
    20d8:	mov	x8, x24
    20dc:	stur	x24, [x29, #-160]
    20e0:	b	1d44 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x184>
    20e4:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    20e8:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    20ec:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    20f0:	add	x0, x0, #0x0
    20f4:	add	x1, x1, #0x0
    20f8:	add	x3, x3, #0x0
    20fc:	mov	w2, #0x43                  	// #67
    2100:	bl	0 <__assert_fail>
    2104:	stur	xzr, [x29, #-168]
    2108:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    210c:	add	x0, x0, #0x0
    2110:	add	x8, sp, #0x90
    2114:	sub	x1, x29, #0x70
    2118:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    211c:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    2120:	add	x1, x1, #0x0
    2124:	add	x8, sp, #0xb0
    2128:	add	x0, sp, #0x90
    212c:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    2130:	ldr	x0, [sp, #24]
    2134:	add	x8, sp, #0x70
    2138:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    213c:	sub	x8, x29, #0x30
    2140:	add	x0, sp, #0xb0
    2144:	add	x1, sp, #0x70
    2148:	sub	x19, x29, #0x30
    214c:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    2150:	ldp	x0, x1, [sp, #32]
    2154:	mov	w8, #0x104                 	// #260
    2158:	sub	x2, x29, #0xc0
    215c:	sturh	w8, [x29, #-176]
    2160:	stp	x19, xzr, [x29, #-192]
    2164:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    2168:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    216c:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    2170:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    2174:	add	x0, x0, #0x0
    2178:	add	x1, x1, #0x0
    217c:	add	x3, x3, #0x0
    2180:	mov	w2, #0x69                  	// #105
    2184:	bl	0 <__assert_fail>
    2188:	sub	x8, x29, #0x30
    218c:	mov	x0, x27
    2190:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    2194:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    2198:	add	x0, x0, #0x0
    219c:	sub	x8, x29, #0xa0
    21a0:	sub	x1, x29, #0x30
    21a4:	b	22b8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6f8>
    21a8:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    21ac:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    21b0:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    21b4:	add	x0, x0, #0x0
    21b8:	add	x1, x1, #0x0
    21bc:	add	x3, x3, #0x0
    21c0:	mov	w2, #0x69                  	// #105
    21c4:	bl	0 <__assert_fail>
    21c8:	sub	x8, x29, #0x30
    21cc:	mov	x0, x27
    21d0:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    21d4:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    21d8:	add	x0, x0, #0x0
    21dc:	b	2218 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x658>
    21e0:	sub	x8, x29, #0x30
    21e4:	mov	x0, x27
    21e8:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    21ec:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    21f0:	add	x0, x0, #0x0
    21f4:	b	2218 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x658>
    21f8:	adrp	x8, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    21fc:	add	x8, x8, #0x0
    2200:	b	2244 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x684>
    2204:	sub	x8, x29, #0x30
    2208:	mov	x0, x27
    220c:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    2210:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    2214:	add	x0, x0, #0x0
    2218:	sub	x8, x29, #0xa0
    221c:	sub	x1, x29, #0x30
    2220:	sub	x19, x29, #0xa0
    2224:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    2228:	mov	w8, #0x104                 	// #260
    222c:	sturh	w8, [x29, #-96]
    2230:	stp	x19, xzr, [x29, #-112]
    2234:	sub	x2, x29, #0x70
    2238:	b	22cc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x70c>
    223c:	adrp	x8, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    2240:	add	x8, x8, #0x0
    2244:	mov	w9, #0x103                 	// #259
    2248:	sub	x2, x29, #0xa0
    224c:	stp	x8, xzr, [x29, #-160]
    2250:	sturh	w9, [x29, #-144]
    2254:	b	22cc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x70c>
    2258:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    225c:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    2260:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    2264:	add	x0, x0, #0x0
    2268:	add	x1, x1, #0x0
    226c:	add	x3, x3, #0x0
    2270:	mov	w2, #0x69                  	// #105
    2274:	bl	0 <__assert_fail>
    2278:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    227c:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    2280:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    2284:	add	x0, x0, #0x0
    2288:	add	x1, x1, #0x0
    228c:	add	x3, x3, #0x0
    2290:	mov	w2, #0x108                 	// #264
    2294:	bl	0 <__assert_fail>
    2298:	sub	x8, x29, #0x30
    229c:	mov	x0, x27
    22a0:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    22a4:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    22a8:	add	x0, x0, #0x0
    22ac:	sub	x8, x29, #0xa0
    22b0:	sub	x1, x29, #0x30
    22b4:	sub	x19, x29, #0xa0
    22b8:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    22bc:	mov	w8, #0x104                 	// #260
    22c0:	sturh	w8, [x29, #-64]
    22c4:	stp	x19, xzr, [x29, #-80]
    22c8:	sub	x2, x29, #0x50
    22cc:	mov	x0, x23
    22d0:	mov	x1, x21
    22d4:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>

00000000000022d8 <_ZN12_GLOBAL__N_113FieldExpanderD0Ev>:
    22d8:	b	0 <_ZdlPv>

00000000000022dc <_ZN12_GLOBAL__N_113FieldExpander6expandERN4llvm9SetTheoryEPNS1_6RecordERNS1_14SmallSetVectorIS5_Lj16EEE>:
    22dc:	stp	x29, x30, [sp, #-48]!
    22e0:	str	x21, [sp, #16]
    22e4:	stp	x20, x19, [sp, #32]
    22e8:	mov	x29, sp
    22ec:	mov	x20, x2
    22f0:	ldp	x8, x2, [x0, #8]
    22f4:	mov	x21, x1
    22f8:	mov	x0, x20
    22fc:	mov	x19, x3
    2300:	mov	x1, x8
    2304:	bl	0 <_ZNK4llvm6Record12getValueInitENS_9StringRefE>
    2308:	ldr	x3, [x20, #8]
    230c:	ldr	w4, [x20, #16]
    2310:	mov	x1, x0
    2314:	mov	x0, x21
    2318:	mov	x2, x19
    231c:	ldp	x20, x19, [sp, #32]
    2320:	ldr	x21, [sp, #16]
    2324:	ldp	x29, x30, [sp], #48
    2328:	b	460 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>

Disassembly of section .text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_:

0000000000000000 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	mov	x21, x0
  18:	mov	x19, x8
  1c:	bl	0 <strlen>
  20:	mov	x4, x0
  24:	mov	x0, x20
  28:	mov	x1, xzr
  2c:	mov	x2, xzr
  30:	mov	x3, x21
  34:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
  38:	add	x9, x19, #0x10
  3c:	str	x9, [x19]
  40:	mov	x8, x0
  44:	ldr	x10, [x8], #16
  48:	cmp	x10, x8
  4c:	b.eq	60 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_+0x60>  // b.none
  50:	str	x10, [x19]
  54:	ldr	x9, [x0, #16]
  58:	str	x9, [x19, #16]
  5c:	b	68 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_+0x68>
  60:	ldr	q0, [x10]
  64:	str	q0, [x9]
  68:	ldr	x9, [x0, #8]
  6c:	str	x9, [x19, #8]
  70:	stp	x8, xzr, [x0]
  74:	strb	wzr, [x0, #16]
  78:	ldp	x20, x19, [sp, #32]
  7c:	ldr	x21, [sp, #16]
  80:	ldp	x29, x30, [sp], #48
  84:	ret

Disassembly of section .text._ZN4llvm9SetTheory8OperatorD0Ev:

0000000000000000 <_ZN4llvm9SetTheory8OperatorD0Ev>:
   0:	brk	#0x1

Disassembly of section .text._ZN4llvm9SetTheory8ExpanderD0Ev:

0000000000000000 <_ZN4llvm9SetTheory8ExpanderD0Ev>:
   0:	brk	#0x1

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x8
  14:	ldr	w8, [x0, #8]
  18:	mov	x21, x1
  1c:	mov	x19, x0
  20:	add	x22, x0, #0x10
  24:	tbnz	w8, #0, 38 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x38>
  28:	ldr	w11, [x19, #24]
  2c:	cbz	w11, ac <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0xac>
  30:	ldr	x9, [x19, #16]
  34:	b	40 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x40>
  38:	mov	w11, #0x10                  	// #16
  3c:	mov	x9, x22
  40:	ldr	x10, [x21]
  44:	orr	x12, x10, #0x8
  48:	cmn	x12, #0x8
  4c:	b.eq	138 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x138>  // b.none
  50:	ubfx	x12, x10, #4, #28
  54:	eor	w12, w12, w10, lsr #9
  58:	sub	w11, w11, #0x1
  5c:	and	w12, w12, w11
  60:	add	x0, x9, w12, uxtw #3
  64:	ldr	x14, [x0]
  68:	cmp	x14, x10
  6c:	b.ne	ec <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0xec>  // b.any
  70:	tbnz	w8, #0, 80 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x80>
  74:	ldr	x22, [x19, #16]
  78:	ldr	w9, [x19, #24]
  7c:	b	84 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x84>
  80:	mov	w9, #0x10                  	// #16
  84:	mov	w8, wzr
  88:	add	x9, x22, x9, lsl #3
  8c:	ldr	x10, [x19]
  90:	stp	x0, x9, [x20, #16]
  94:	strb	w8, [x20, #32]
  98:	ldp	x22, x21, [sp, #16]
  9c:	stp	x19, x10, [x20]
  a0:	ldp	x20, x19, [sp, #32]
  a4:	ldp	x29, x30, [sp], #48
  a8:	ret
  ac:	mov	x3, xzr
  b0:	mov	x0, x19
  b4:	mov	x1, x21
  b8:	mov	x2, x21
  bc:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_>
  c0:	ldr	x8, [x21]
  c4:	str	x8, [x0]
  c8:	ldrb	w8, [x19, #8]
  cc:	tbnz	w8, #0, dc <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0xdc>
  d0:	ldr	x22, [x19, #16]
  d4:	ldr	w8, [x19, #24]
  d8:	b	e0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0xe0>
  dc:	mov	w8, #0x10                  	// #16
  e0:	add	x9, x22, x8, lsl #3
  e4:	mov	w8, #0x1                   	// #1
  e8:	b	8c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x8c>
  ec:	mov	x13, xzr
  f0:	mov	w16, #0x1                   	// #1
  f4:	mov	x15, #0xfffffffffffffff0    	// #-16
  f8:	cmn	x14, #0x8
  fc:	b.eq	12c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x12c>  // b.none
 100:	cmp	x13, #0x0
 104:	add	w12, w12, w16
 108:	ccmp	x14, x15, #0x0, eq  // eq = none
 10c:	and	w12, w12, w11
 110:	csel	x13, x13, x0, ne  // ne = any
 114:	add	x0, x9, w12, uxtw #3
 118:	ldr	x14, [x0]
 11c:	add	w16, w16, #0x1
 120:	cmp	x14, x10
 124:	b.eq	70 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x70>  // b.none
 128:	b	f8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0xf8>
 12c:	cmp	x13, #0x0
 130:	csel	x3, x0, x13, eq  // eq = none
 134:	b	b0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0xb0>
 138:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_>
 13c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_>
 140:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_>
 144:	add	x0, x0, #0x0
 148:	add	x1, x1, #0x0
 14c:	add	x3, x3, #0x0
 150:	mov	w2, #0x252                 	// #594
 154:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x9, [x0]
  10:	ldr	w8, [x0, #8]
  14:	mov	x20, x2
  18:	mov	x19, x0
  1c:	add	x9, x9, #0x1
  20:	str	x9, [x0]
  24:	lsr	w9, w8, #1
  28:	tbnz	w8, #0, 34 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x34>
  2c:	ldr	w1, [x19, #24]
  30:	b	38 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x38>
  34:	mov	w1, #0x10                  	// #16
  38:	lsl	w10, w9, #2
  3c:	add	w10, w10, #0x4
  40:	add	w11, w1, w1, lsl #1
  44:	cmp	w10, w11
  48:	b.cs	a4 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0xa4>  // b.hs, b.nlast
  4c:	ldr	w10, [x19, #12]
  50:	mvn	w9, w9
  54:	add	w9, w1, w9
  58:	sub	w9, w9, w10
  5c:	cmp	w9, w1, lsr #3
  60:	b.ls	c8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0xc8>  // b.plast
  64:	cbz	x3, 1ec <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x1ec>
  68:	lsr	w9, w8, #1
  6c:	adds	w9, w9, #0x1
  70:	b.mi	20c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x20c>  // b.first
  74:	bfi	w8, w9, #1, #31
  78:	str	w8, [x19, #8]
  7c:	ldr	x8, [x3]
  80:	cmn	x8, #0x8
  84:	b.eq	94 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x94>  // b.none
  88:	ldr	w8, [x19, #12]
  8c:	sub	w8, w8, #0x1
  90:	str	w8, [x19, #12]
  94:	ldp	x20, x19, [sp, #16]
  98:	mov	x0, x3
  9c:	ldp	x29, x30, [sp], #32
  a0:	ret
  a4:	lsl	w1, w1, #1
  a8:	mov	x0, x19
  ac:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
  b0:	ldr	w8, [x19, #8]
  b4:	tbnz	w8, #0, e8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0xe8>
  b8:	ldr	w11, [x19, #24]
  bc:	cbz	w11, 1d8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x1d8>
  c0:	ldr	x9, [x19, #16]
  c4:	b	f0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0xf0>
  c8:	mov	x0, x19
  cc:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
  d0:	ldr	w8, [x19, #8]
  d4:	tbnz	w8, #0, 160 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x160>
  d8:	ldr	w11, [x19, #24]
  dc:	cbz	w11, 1ec <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x1ec>
  e0:	ldr	x9, [x19, #16]
  e4:	b	168 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x168>
  e8:	add	x9, x19, #0x10
  ec:	mov	w11, #0x10                  	// #16
  f0:	ldr	x10, [x20]
  f4:	orr	x12, x10, #0x8
  f8:	cmn	x12, #0x8
  fc:	b.eq	22c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x22c>  // b.none
 100:	ubfx	x12, x10, #4, #28
 104:	eor	w12, w12, w10, lsr #9
 108:	sub	w11, w11, #0x1
 10c:	and	w12, w12, w11
 110:	add	x3, x9, w12, uxtw #3
 114:	ldr	x14, [x3]
 118:	cmp	x14, x10
 11c:	b.eq	64 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x64>  // b.none
 120:	mov	x13, xzr
 124:	mov	w16, #0x1                   	// #1
 128:	mov	x15, #0xfffffffffffffff0    	// #-16
 12c:	cmn	x14, #0x8
 130:	b.eq	1e0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x1e0>  // b.none
 134:	cmp	x13, #0x0
 138:	add	w12, w12, w16
 13c:	ccmp	x14, x15, #0x0, eq  // eq = none
 140:	and	w12, w12, w11
 144:	csel	x13, x13, x3, ne  // ne = any
 148:	add	x3, x9, w12, uxtw #3
 14c:	ldr	x14, [x3]
 150:	add	w16, w16, #0x1
 154:	cmp	x14, x10
 158:	b.eq	64 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x64>  // b.none
 15c:	b	12c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x12c>
 160:	add	x9, x19, #0x10
 164:	mov	w11, #0x10                  	// #16
 168:	ldr	x10, [x20]
 16c:	orr	x12, x10, #0x8
 170:	cmn	x12, #0x8
 174:	b.eq	22c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x22c>  // b.none
 178:	ubfx	x12, x10, #4, #28
 17c:	eor	w12, w12, w10, lsr #9
 180:	sub	w11, w11, #0x1
 184:	and	w12, w12, w11
 188:	add	x3, x9, w12, uxtw #3
 18c:	ldr	x14, [x3]
 190:	cmp	x14, x10
 194:	b.eq	64 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x64>  // b.none
 198:	mov	x13, xzr
 19c:	mov	w16, #0x1                   	// #1
 1a0:	mov	x15, #0xfffffffffffffff0    	// #-16
 1a4:	cmn	x14, #0x8
 1a8:	b.eq	1e0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x1e0>  // b.none
 1ac:	cmp	x13, #0x0
 1b0:	add	w12, w12, w16
 1b4:	ccmp	x14, x15, #0x0, eq  // eq = none
 1b8:	and	w12, w12, w11
 1bc:	csel	x13, x13, x3, ne  // ne = any
 1c0:	add	x3, x9, w12, uxtw #3
 1c4:	ldr	x14, [x3]
 1c8:	add	w16, w16, #0x1
 1cc:	cmp	x14, x10
 1d0:	b.eq	64 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x64>  // b.none
 1d4:	b	1a4 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x1a4>
 1d8:	mov	x3, xzr
 1dc:	b	64 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x64>
 1e0:	cmp	x13, #0x0
 1e4:	csel	x3, x3, x13, eq  // eq = none
 1e8:	b	64 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x64>
 1ec:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
 1f0:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
 1f4:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
 1f8:	add	x0, x0, #0x0
 1fc:	add	x1, x1, #0x0
 200:	add	x3, x3, #0x0
 204:	mov	w2, #0x22f                 	// #559
 208:	bl	0 <__assert_fail>
 20c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
 210:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
 214:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
 218:	add	x0, x0, #0x0
 21c:	add	x1, x1, #0x0
 220:	add	x3, x3, #0x0
 224:	mov	w2, #0x441                 	// #1089
 228:	bl	0 <__assert_fail>
 22c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
 230:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
 234:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
 238:	add	x0, x0, #0x0
 23c:	add	x1, x1, #0x0
 240:	add	x3, x3, #0x0
 244:	mov	w2, #0x252                 	// #594
 248:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj:

0000000000000000 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>:
   0:	sub	sp, sp, #0xb0
   4:	stp	x29, x30, [sp, #128]
   8:	stp	x22, x21, [sp, #144]
   c:	stp	x20, x19, [sp, #160]
  10:	add	x29, sp, #0x80
  14:	cmp	w1, #0x11
  18:	mov	x19, x0
  1c:	b.cc	50 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x50>  // b.lo, b.ul, b.last
  20:	sub	w8, w1, #0x1
  24:	orr	x8, x8, x8, lsr #1
  28:	orr	x8, x8, x8, lsr #2
  2c:	orr	x8, x8, x8, lsr #4
  30:	orr	x8, x8, x8, lsr #8
  34:	orr	x8, x8, x8, lsr #16
  38:	lsr	x9, x8, #32
  3c:	orr	w8, w9, w8
  40:	add	w9, w8, #0x1
  44:	cmp	w9, #0x40
  48:	mov	w9, #0x40                  	// #64
  4c:	csinc	w1, w9, w8, ls  // ls = plast
  50:	ldr	w8, [x19, #8]
  54:	tbnz	w8, #0, 74 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x74>
  58:	ldr	x20, [x19, #16]
  5c:	ldr	w21, [x19, #24]
  60:	cmp	w1, #0x10
  64:	b.hi	318 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x318>  // b.pmore
  68:	orr	w8, w8, #0x1
  6c:	str	w8, [x19, #8]
  70:	b	328 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x328>
  74:	ldr	x8, [x19, #16]
  78:	mov	x20, sp
  7c:	orr	x9, x8, #0x8
  80:	cmn	x9, #0x8
  84:	b.eq	90 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x90>  // b.none
  88:	add	x20, x20, #0x8
  8c:	str	x8, [sp]
  90:	ldr	x8, [x19, #24]
  94:	orr	x9, x8, #0x8
  98:	cmn	x9, #0x8
  9c:	b.eq	b8 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0xb8>  // b.none
  a0:	mov	x9, sp
  a4:	sub	x9, x20, x9
  a8:	asr	x9, x9, #3
  ac:	cmp	x9, #0xf
  b0:	b.hi	374 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x374>  // b.pmore
  b4:	str	x8, [x20], #8
  b8:	ldr	x8, [x19, #32]
  bc:	orr	x9, x8, #0x8
  c0:	cmn	x9, #0x8
  c4:	b.eq	e0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0xe0>  // b.none
  c8:	mov	x9, sp
  cc:	sub	x9, x20, x9
  d0:	asr	x9, x9, #3
  d4:	cmp	x9, #0xf
  d8:	b.hi	374 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x374>  // b.pmore
  dc:	str	x8, [x20], #8
  e0:	ldr	x8, [x19, #40]
  e4:	orr	x9, x8, #0x8
  e8:	cmn	x9, #0x8
  ec:	b.eq	108 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x108>  // b.none
  f0:	mov	x9, sp
  f4:	sub	x9, x20, x9
  f8:	asr	x9, x9, #3
  fc:	cmp	x9, #0xf
 100:	b.hi	374 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x374>  // b.pmore
 104:	str	x8, [x20], #8
 108:	ldr	x8, [x19, #48]
 10c:	orr	x9, x8, #0x8
 110:	cmn	x9, #0x8
 114:	b.eq	130 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x130>  // b.none
 118:	mov	x9, sp
 11c:	sub	x9, x20, x9
 120:	asr	x9, x9, #3
 124:	cmp	x9, #0xf
 128:	b.hi	374 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x374>  // b.pmore
 12c:	str	x8, [x20], #8
 130:	ldr	x8, [x19, #56]
 134:	orr	x9, x8, #0x8
 138:	cmn	x9, #0x8
 13c:	b.eq	158 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x158>  // b.none
 140:	mov	x9, sp
 144:	sub	x9, x20, x9
 148:	asr	x9, x9, #3
 14c:	cmp	x9, #0xf
 150:	b.hi	374 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x374>  // b.pmore
 154:	str	x8, [x20], #8
 158:	ldr	x8, [x19, #64]
 15c:	orr	x9, x8, #0x8
 160:	cmn	x9, #0x8
 164:	b.eq	180 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x180>  // b.none
 168:	mov	x9, sp
 16c:	sub	x9, x20, x9
 170:	asr	x9, x9, #3
 174:	cmp	x9, #0xf
 178:	b.hi	374 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x374>  // b.pmore
 17c:	str	x8, [x20], #8
 180:	ldr	x8, [x19, #72]
 184:	orr	x9, x8, #0x8
 188:	cmn	x9, #0x8
 18c:	b.eq	1a8 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x1a8>  // b.none
 190:	mov	x9, sp
 194:	sub	x9, x20, x9
 198:	asr	x9, x9, #3
 19c:	cmp	x9, #0xf
 1a0:	b.hi	374 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x374>  // b.pmore
 1a4:	str	x8, [x20], #8
 1a8:	ldr	x8, [x19, #80]
 1ac:	orr	x9, x8, #0x8
 1b0:	cmn	x9, #0x8
 1b4:	b.eq	1d0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x1d0>  // b.none
 1b8:	mov	x9, sp
 1bc:	sub	x9, x20, x9
 1c0:	asr	x9, x9, #3
 1c4:	cmp	x9, #0xf
 1c8:	b.hi	374 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x374>  // b.pmore
 1cc:	str	x8, [x20], #8
 1d0:	ldr	x8, [x19, #88]
 1d4:	orr	x9, x8, #0x8
 1d8:	cmn	x9, #0x8
 1dc:	b.eq	1f8 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x1f8>  // b.none
 1e0:	mov	x9, sp
 1e4:	sub	x9, x20, x9
 1e8:	asr	x9, x9, #3
 1ec:	cmp	x9, #0xf
 1f0:	b.hi	374 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x374>  // b.pmore
 1f4:	str	x8, [x20], #8
 1f8:	ldr	x8, [x19, #96]
 1fc:	orr	x9, x8, #0x8
 200:	cmn	x9, #0x8
 204:	b.eq	220 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x220>  // b.none
 208:	mov	x9, sp
 20c:	sub	x9, x20, x9
 210:	asr	x9, x9, #3
 214:	cmp	x9, #0xf
 218:	b.hi	374 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x374>  // b.pmore
 21c:	str	x8, [x20], #8
 220:	ldr	x8, [x19, #104]
 224:	orr	x9, x8, #0x8
 228:	cmn	x9, #0x8
 22c:	b.eq	248 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x248>  // b.none
 230:	mov	x9, sp
 234:	sub	x9, x20, x9
 238:	asr	x9, x9, #3
 23c:	cmp	x9, #0xf
 240:	b.hi	374 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x374>  // b.pmore
 244:	str	x8, [x20], #8
 248:	ldr	x8, [x19, #112]
 24c:	orr	x9, x8, #0x8
 250:	cmn	x9, #0x8
 254:	b.eq	270 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x270>  // b.none
 258:	mov	x9, sp
 25c:	sub	x9, x20, x9
 260:	asr	x9, x9, #3
 264:	cmp	x9, #0xf
 268:	b.hi	374 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x374>  // b.pmore
 26c:	str	x8, [x20], #8
 270:	ldr	x8, [x19, #120]
 274:	orr	x9, x8, #0x8
 278:	cmn	x9, #0x8
 27c:	b.eq	298 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x298>  // b.none
 280:	mov	x9, sp
 284:	sub	x9, x20, x9
 288:	asr	x9, x9, #3
 28c:	cmp	x9, #0xf
 290:	b.hi	374 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x374>  // b.pmore
 294:	str	x8, [x20], #8
 298:	ldr	x8, [x19, #128]
 29c:	orr	x9, x8, #0x8
 2a0:	cmn	x9, #0x8
 2a4:	b.eq	2c0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x2c0>  // b.none
 2a8:	mov	x9, sp
 2ac:	sub	x9, x20, x9
 2b0:	asr	x9, x9, #3
 2b4:	cmp	x9, #0xf
 2b8:	b.hi	374 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x374>  // b.pmore
 2bc:	str	x8, [x20], #8
 2c0:	ldr	x8, [x19, #136]
 2c4:	orr	x9, x8, #0x8
 2c8:	cmn	x9, #0x8
 2cc:	b.ne	350 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x350>  // b.any
 2d0:	cmp	w1, #0x10
 2d4:	b.ls	2f4 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x2f4>  // b.plast
 2d8:	ldr	w8, [x19, #8]
 2dc:	mov	w21, w1
 2e0:	lsl	x0, x21, #3
 2e4:	and	w8, w8, #0xfffffffe
 2e8:	str	w8, [x19, #8]
 2ec:	bl	0 <_Znwm>
 2f0:	stp	x0, x21, [x19, #16]
 2f4:	mov	x1, sp
 2f8:	mov	x0, x19
 2fc:	mov	x2, x20
 300:	bl	0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 304:	ldp	x20, x19, [sp, #160]
 308:	ldp	x22, x21, [sp, #144]
 30c:	ldp	x29, x30, [sp, #128]
 310:	add	sp, sp, #0xb0
 314:	ret
 318:	mov	w22, w1
 31c:	lsl	x0, x22, #3
 320:	bl	0 <_Znwm>
 324:	stp	x0, x22, [x19, #16]
 328:	add	x2, x20, x21, lsl #3
 32c:	mov	x0, x19
 330:	mov	x1, x20
 334:	bl	0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 338:	mov	x0, x20
 33c:	ldp	x20, x19, [sp, #160]
 340:	ldp	x22, x21, [sp, #144]
 344:	ldp	x29, x30, [sp, #128]
 348:	add	sp, sp, #0xb0
 34c:	b	0 <_ZdlPv>
 350:	mov	x9, sp
 354:	sub	x9, x20, x9
 358:	asr	x9, x9, #3
 35c:	cmp	x9, #0xf
 360:	b.hi	374 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x374>  // b.pmore
 364:	str	x8, [x20], #8
 368:	cmp	w1, #0x10
 36c:	b.hi	2d8 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x2d8>  // b.pmore
 370:	b	2f4 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x2f4>
 374:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 378:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 37c:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 380:	add	x0, x0, #0x0
 384:	add	x1, x1, #0x0
 388:	add	x3, x3, #0x0
 38c:	mov	w2, #0x402                 	// #1026
 390:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	and	w9, w8, #0x1
  10:	stp	w9, wzr, [x0, #8]
  14:	tbnz	w8, #0, 24 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x24>
  18:	ldr	w8, [x0, #24]
  1c:	sub	w10, w8, #0x1
  20:	b	2c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x2c>
  24:	mov	w10, #0xf                   	// #15
  28:	mov	w8, #0x10                  	// #16
  2c:	tst	w10, w8
  30:	b.ne	1f8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x1f8>  // b.any
  34:	add	x8, x0, #0x10
  38:	cbnz	w9, 50 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x50>
  3c:	ldr	w9, [x0, #24]
  40:	cbz	w9, b0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0xb0>
  44:	ldr	x10, [x0, #16]
  48:	add	x9, x10, x9, lsl #3
  4c:	b	58 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x58>
  50:	add	x9, x0, #0x90
  54:	mov	x10, x8
  58:	sub	x11, x9, x10
  5c:	sub	x11, x11, #0x8
  60:	cmp	x11, #0x18
  64:	b.cc	a0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0xa0>  // b.lo, b.ul, b.last
  68:	lsr	x12, x11, #3
  6c:	add	x12, x12, #0x1
  70:	mov	x14, #0xfffffffffffffff8    	// #-8
  74:	and	x13, x12, #0x3ffffffffffffffc
  78:	add	x11, x10, #0x10
  7c:	add	x10, x10, x13, lsl #3
  80:	dup	v0.2d, x14
  84:	mov	x14, x13
  88:	stp	q0, q0, [x11, #-16]
  8c:	subs	x14, x14, #0x4
  90:	add	x11, x11, #0x20
  94:	b.ne	88 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x88>  // b.any
  98:	cmp	x12, x13
  9c:	b.eq	b0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0xb0>  // b.none
  a0:	mov	x11, #0xfffffffffffffff8    	// #-8
  a4:	str	x11, [x10], #8
  a8:	cmp	x9, x10
  ac:	b.ne	a4 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0xa4>  // b.any
  b0:	cmp	x1, x2
  b4:	b.eq	190 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x190>  // b.none
  b8:	mov	x9, #0xfffffffffffffff0    	// #-16
  bc:	b	cc <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0xcc>
  c0:	add	x1, x1, #0x8
  c4:	cmp	x1, x2
  c8:	b.eq	190 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x190>  // b.none
  cc:	ldr	x10, [x1]
  d0:	orr	x11, x10, #0x8
  d4:	cmn	x11, #0x8
  d8:	b.eq	c0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0xc0>  // b.none
  dc:	ldrb	w11, [x0, #8]
  e0:	tbnz	w11, #0, f4 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0xf4>
  e4:	ldr	w12, [x0, #24]
  e8:	cbz	w12, 188 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x188>
  ec:	ldr	x11, [x0, #16]
  f0:	b	fc <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0xfc>
  f4:	mov	w12, #0x10                  	// #16
  f8:	mov	x11, x8
  fc:	cmn	x10, #0x8
 100:	b.eq	1d8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x1d8>  // b.none
 104:	ubfx	x13, x10, #4, #28
 108:	eor	w13, w13, w10, lsr #9
 10c:	sub	w12, w12, #0x1
 110:	and	w14, w13, w12
 114:	add	x13, x11, w14, uxtw #3
 118:	ldr	x16, [x13]
 11c:	cmp	x16, x10
 120:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x198>  // b.none
 124:	mov	x15, xzr
 128:	mov	w17, #0x1                   	// #1
 12c:	cmn	x16, #0x8
 130:	b.eq	160 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x160>  // b.none
 134:	cmp	x15, #0x0
 138:	add	w14, w14, w17
 13c:	ccmp	x16, x9, #0x0, eq  // eq = none
 140:	and	w14, w14, w12
 144:	csel	x15, x15, x13, ne  // ne = any
 148:	add	x13, x11, w14, uxtw #3
 14c:	ldr	x16, [x13]
 150:	add	w17, w17, #0x1
 154:	cmp	x16, x10
 158:	b.ne	12c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x12c>  // b.any
 15c:	b	198 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x198>
 160:	cmp	x15, #0x0
 164:	csel	x11, x13, x15, eq  // eq = none
 168:	str	x10, [x11]
 16c:	ldr	w10, [x0, #8]
 170:	lsr	w11, w10, #1
 174:	adds	w11, w11, #0x1
 178:	b.mi	1b8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x1b8>  // b.first
 17c:	bfi	w10, w11, #1, #31
 180:	str	w10, [x0, #8]
 184:	b	c0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0xc0>
 188:	mov	x11, xzr
 18c:	b	168 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x168>
 190:	ldp	x29, x30, [sp], #16
 194:	ret
 198:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 19c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 1a0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 1a4:	add	x0, x0, #0x0
 1a8:	add	x1, x1, #0x0
 1ac:	add	x3, x3, #0x0
 1b0:	mov	w2, #0x17a                 	// #378
 1b4:	bl	0 <__assert_fail>
 1b8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 1bc:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 1c0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 1c4:	add	x0, x0, #0x0
 1c8:	add	x1, x1, #0x0
 1cc:	add	x3, x3, #0x0
 1d0:	mov	w2, #0x441                 	// #1089
 1d4:	bl	0 <__assert_fail>
 1d8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 1dc:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 1e0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 1e4:	add	x0, x0, #0x0
 1e8:	add	x1, x1, #0x0
 1ec:	add	x3, x3, #0x0
 1f0:	mov	w2, #0x252                 	// #594
 1f4:	bl	0 <__assert_fail>
 1f8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 1fc:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 200:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 204:	add	x0, x0, #0x0
 208:	add	x1, x1, #0x0
 20c:	add	x3, x3, #0x0
 210:	mov	w2, #0x15c                 	// #348
 214:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9SetTheory8OperatorD2Ev:

0000000000000000 <_ZN4llvm9SetTheory8OperatorD2Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_>:
   0:	stp	d9, d8, [sp, #-80]!
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	w8, [x0, #8]
  1c:	mov	x19, x2
  20:	mov	x20, x0
  24:	mov	x21, x1
  28:	cbz	w8, b4 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_+0xb4>
  2c:	ldr	x22, [x20]
  30:	add	x8, x8, x8, lsl #3
  34:	lsl	x23, x8, #5
  38:	b	58 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_+0x58>
  3c:	add	x8, x22, x23
  40:	sub	x8, x8, #0x120
  44:	ldr	x9, [x8]
  48:	subs	x23, x23, #0x120
  4c:	add	x9, x9, #0x1
  50:	str	x9, [x8]
  54:	b.eq	b4 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_+0xb4>  // b.none
  58:	add	x24, x22, x23
  5c:	ldur	x0, [x24, #-144]
  60:	sub	x8, x24, #0x80
  64:	cmp	x8, x0
  68:	b.eq	70 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_+0x70>  // b.none
  6c:	bl	0 <free>
  70:	sub	x24, x24, #0x118
  74:	ldrb	w8, [x24]
  78:	tbnz	w8, #0, 3c <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_+0x3c>
  7c:	add	x8, x22, x23
  80:	sub	x8, x8, #0x110
  84:	ldr	x0, [x8]
  88:	bl	0 <_ZdlPv>
  8c:	ldrb	w8, [x24]
  90:	tbz	w8, #0, 3c <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_+0x3c>
  94:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_>
  98:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_>
  9c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_>
  a0:	add	x0, x0, #0x0
  a4:	add	x1, x1, #0x0
  a8:	add	x3, x3, #0x0
  ac:	mov	w2, #0x45b                 	// #1115
  b0:	bl	0 <__assert_fail>
  b4:	ldr	w8, [x20, #12]
  b8:	str	wzr, [x20, #8]
  bc:	cmp	x8, x21
  c0:	b.cs	d4 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_+0xd4>  // b.hs, b.nlast
  c4:	mov	x0, x20
  c8:	mov	x1, x21
  cc:	bl	0 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_>
  d0:	ldr	w8, [x20, #12]
  d4:	cmp	x8, x21
  d8:	b.cc	194 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_+0x194>  // b.lo, b.ul, b.last
  dc:	ands	x8, x21, #0xffffffff
  e0:	str	w21, [x20, #8]
  e4:	b.eq	17c <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_+0x17c>  // b.none
  e8:	ldr	x9, [x20]
  ec:	adrp	x11, 0 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_>
  f0:	adrp	x12, 0 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_>
  f4:	ldr	d8, [x11]
  f8:	ldr	d9, [x12]
  fc:	mov	w10, #0x120                 	// #288
 100:	add	x20, x19, #0x90
 104:	madd	x22, x8, x10, x9
 108:	add	x21, x9, #0x90
 10c:	mov	x23, #0xfffffffffffffff8    	// #-8
 110:	b	124 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_+0x124>
 114:	add	x8, x24, #0x80
 118:	cmp	x8, x22
 11c:	add	x21, x21, #0x120
 120:	b.eq	17c <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_+0x17c>  // b.none
 124:	mov	x0, x21
 128:	str	xzr, [x0, #-144]!
 12c:	mov	x1, x19
 130:	stur	d8, [x21, #-136]
 134:	stp	x23, x23, [x21, #-128]
 138:	stp	x23, x23, [x21, #-112]
 13c:	stp	x23, x23, [x21, #-96]
 140:	stp	x23, x23, [x21, #-80]
 144:	stp	x23, x23, [x21, #-64]
 148:	stp	x23, x23, [x21, #-48]
 14c:	stp	x23, x23, [x21, #-32]
 150:	stp	x23, x23, [x21, #-16]
 154:	bl	0 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_>
 158:	add	x24, x21, #0x10
 15c:	str	x24, [x21]
 160:	str	d9, [x21, #8]
 164:	ldr	w8, [x19, #152]
 168:	cbz	w8, 114 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_+0x114>
 16c:	mov	x0, x21
 170:	mov	x1, x20
 174:	bl	0 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_>
 178:	b	114 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_+0x114>
 17c:	ldp	x20, x19, [sp, #64]
 180:	ldp	x22, x21, [sp, #48]
 184:	ldp	x24, x23, [sp, #32]
 188:	ldp	x29, x30, [sp, #16]
 18c:	ldp	d9, d8, [sp], #80
 190:	ret
 194:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_>
 198:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_>
 19c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_>
 1a0:	add	x0, x0, #0x0
 1a4:	add	x1, x1, #0x0
 1a8:	add	x3, x3, #0x0
 1ac:	mov	w2, #0x43                  	// #67
 1b0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>:
   0:	stp	d9, d8, [sp, #-96]!
   4:	stp	x29, x30, [sp, #16]
   8:	str	x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	mov	x20, x1
  20:	lsr	x8, x1, #32
  24:	mov	x19, x0
  28:	cbz	x8, 3c <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x3c>
  2c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
  30:	add	x0, x0, #0x0
  34:	mov	w1, #0x1                   	// #1
  38:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  3c:	ldr	w8, [x19, #12]
  40:	add	x8, x8, #0x2
  44:	orr	x8, x8, x8, lsr #1
  48:	orr	x8, x8, x8, lsr #2
  4c:	orr	x8, x8, x8, lsr #4
  50:	orr	x8, x8, x8, lsr #8
  54:	orr	x8, x8, x8, lsr #16
  58:	orr	x8, x8, x8, lsr #32
  5c:	add	x9, x8, #0x1
  60:	cmp	x9, x20
  64:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  68:	mov	w9, #0xffffffff            	// #-1
  6c:	cmp	x8, x9
  70:	csel	x23, x8, x9, cc  // cc = lo, ul, last
  74:	add	x8, x23, x23, lsl #3
  78:	lsl	x0, x8, #5
  7c:	bl	0 <malloc>
  80:	mov	x20, x0
  84:	cbnz	x0, c4 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0xc4>
  88:	cbz	x23, a4 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0xa4>
  8c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
  90:	add	x0, x0, #0x0
  94:	mov	w1, #0x1                   	// #1
  98:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  9c:	mov	x20, xzr
  a0:	b	c4 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0xc4>
  a4:	mov	w0, #0x1                   	// #1
  a8:	bl	0 <malloc>
  ac:	mov	x20, x0
  b0:	cbnz	x0, c4 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0xc4>
  b4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
  b8:	add	x0, x0, #0x0
  bc:	mov	w1, #0x1                   	// #1
  c0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  c4:	ldr	w8, [x19, #8]
  c8:	ldr	x21, [x19]
  cc:	cbz	w8, 1f0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x1f0>
  d0:	adrp	x10, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
  d4:	adrp	x11, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
  d8:	ldr	d8, [x10]
  dc:	ldr	d9, [x11]
  e0:	mov	w9, #0x120                 	// #288
  e4:	madd	x24, x8, x9, x21
  e8:	add	x22, x20, #0x90
  ec:	mov	x25, #0xfffffffffffffff8    	// #-8
  f0:	b	104 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x104>
  f4:	add	x21, x21, #0x120
  f8:	cmp	x21, x24
  fc:	add	x22, x22, #0x120
 100:	b.eq	15c <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x15c>  // b.none
 104:	mov	x0, x22
 108:	str	xzr, [x0, #-144]!
 10c:	mov	x1, x21
 110:	stur	d8, [x22, #-136]
 114:	stp	x25, x25, [x22, #-128]
 118:	stp	x25, x25, [x22, #-112]
 11c:	stp	x25, x25, [x22, #-96]
 120:	stp	x25, x25, [x22, #-80]
 124:	stp	x25, x25, [x22, #-64]
 128:	stp	x25, x25, [x22, #-48]
 12c:	stp	x25, x25, [x22, #-32]
 130:	stp	x25, x25, [x22, #-16]
 134:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 138:	add	x8, x22, #0x10
 13c:	str	x8, [x22]
 140:	str	d9, [x22, #8]
 144:	ldr	w8, [x21, #152]
 148:	cbz	w8, f4 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0xf4>
 14c:	add	x1, x21, #0x90
 150:	mov	x0, x22
 154:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 158:	b	f4 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0xf4>
 15c:	ldr	w8, [x19, #8]
 160:	ldr	x21, [x19]
 164:	cbz	w8, 1f0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x1f0>
 168:	add	x8, x8, x8, lsl #3
 16c:	lsl	x22, x8, #5
 170:	b	190 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x190>
 174:	add	x8, x21, x22
 178:	sub	x8, x8, #0x120
 17c:	ldr	x9, [x8]
 180:	subs	x22, x22, #0x120
 184:	add	x9, x9, #0x1
 188:	str	x9, [x8]
 18c:	b.eq	1ec <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x1ec>  // b.none
 190:	add	x24, x21, x22
 194:	ldur	x0, [x24, #-144]
 198:	sub	x8, x24, #0x80
 19c:	cmp	x8, x0
 1a0:	b.eq	1a8 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x1a8>  // b.none
 1a4:	bl	0 <free>
 1a8:	sub	x24, x24, #0x118
 1ac:	ldrb	w8, [x24]
 1b0:	tbnz	w8, #0, 174 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x174>
 1b4:	add	x8, x21, x22
 1b8:	sub	x8, x8, #0x110
 1bc:	ldr	x0, [x8]
 1c0:	bl	0 <_ZdlPv>
 1c4:	ldrb	w8, [x24]
 1c8:	tbz	w8, #0, 174 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x174>
 1cc:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 1d0:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 1d4:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 1d8:	add	x0, x0, #0x0
 1dc:	add	x1, x1, #0x0
 1e0:	add	x3, x3, #0x0
 1e4:	mov	w2, #0x45b                 	// #1115
 1e8:	bl	0 <__assert_fail>
 1ec:	ldr	x21, [x19]
 1f0:	add	x8, x19, #0x10
 1f4:	cmp	x21, x8
 1f8:	b.eq	204 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x204>  // b.none
 1fc:	mov	x0, x21
 200:	bl	0 <free>
 204:	str	x20, [x19]
 208:	str	w23, [x19, #12]
 20c:	ldp	x20, x19, [sp, #80]
 210:	ldp	x22, x21, [sp, #64]
 214:	ldp	x24, x23, [sp, #48]
 218:	ldr	x25, [sp, #32]
 21c:	ldp	x29, x30, [sp, #16]
 220:	ldp	d9, d8, [sp], #96
 224:	ret

Disassembly of section .text._ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_:

0000000000000000 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_>:
   0:	sub	sp, sp, #0x20
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	ldr	w8, [x1, #8]
  10:	ldr	w9, [x0, #8]
  14:	bfxil	w9, w8, #0, #1
  18:	str	w9, [x1, #8]
  1c:	ldp	w9, w10, [x0, #8]
  20:	bfxil	w8, w9, #0, #1
  24:	str	w8, [x0, #8]
  28:	ldr	w8, [x1, #12]
  2c:	str	w8, [x0, #12]
  30:	str	w10, [x1, #12]
  34:	ldr	w8, [x0, #8]
  38:	ldr	w9, [x1, #8]
  3c:	tbnz	w8, #0, 78 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x78>
  40:	tbnz	w9, #0, 7c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x7c>
  44:	ldr	x8, [x1, #16]
  48:	ldr	x9, [x0, #16]
  4c:	str	x8, [x0, #16]
  50:	str	x9, [x1, #16]
  54:	ldrb	w8, [x0, #8]
  58:	tbnz	w8, #0, 24c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x24c>
  5c:	ldrb	w8, [x1, #8]
  60:	tbnz	w8, #0, 24c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x24c>
  64:	ldr	w8, [x1, #24]
  68:	ldr	w9, [x0, #24]
  6c:	str	w8, [x0, #24]
  70:	str	w9, [x1, #24]
  74:	b	1b8 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x1b8>
  78:	tbnz	w9, #0, 1c4 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x1c4>
  7c:	tst	w8, #0x1
  80:	csel	x9, x1, x0, ne  // ne = any
  84:	ldr	w10, [x9, #8]
  88:	csel	x8, x0, x1, ne  // ne = any
  8c:	tbnz	w10, #0, 24c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x24c>
  90:	ldr	q0, [x9, #16]
  94:	orr	w10, w10, #0x1
  98:	str	q0, [sp]
  9c:	str	w10, [x9, #8]
  a0:	ldrb	w10, [x8, #8]
  a4:	tbz	w10, #0, 22c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x22c>
  a8:	ldr	x10, [x8, #16]
  ac:	add	x11, x9, #0x10
  b0:	str	x10, [x11]
  b4:	ldrb	w10, [x8, #8]
  b8:	tbz	w10, #0, 22c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x22c>
  bc:	ldr	x10, [x8, #24]
  c0:	str	x10, [x9, #24]
  c4:	ldrb	w10, [x8, #8]
  c8:	tbz	w10, #0, 22c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x22c>
  cc:	ldr	x10, [x8, #32]
  d0:	str	x10, [x9, #32]
  d4:	ldrb	w10, [x8, #8]
  d8:	tbz	w10, #0, 22c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x22c>
  dc:	ldr	x10, [x8, #40]
  e0:	str	x10, [x9, #40]
  e4:	ldrb	w10, [x8, #8]
  e8:	tbz	w10, #0, 22c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x22c>
  ec:	ldr	x10, [x8, #48]
  f0:	str	x10, [x9, #48]
  f4:	ldrb	w10, [x8, #8]
  f8:	tbz	w10, #0, 22c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x22c>
  fc:	ldr	x10, [x8, #56]
 100:	str	x10, [x9, #56]
 104:	ldrb	w10, [x8, #8]
 108:	tbz	w10, #0, 22c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x22c>
 10c:	ldr	x10, [x8, #64]
 110:	str	x10, [x9, #64]
 114:	ldrb	w10, [x8, #8]
 118:	tbz	w10, #0, 22c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x22c>
 11c:	ldr	x10, [x8, #72]
 120:	str	x10, [x9, #72]
 124:	ldrb	w10, [x8, #8]
 128:	tbz	w10, #0, 22c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x22c>
 12c:	ldr	x10, [x8, #80]
 130:	str	x10, [x9, #80]
 134:	ldrb	w10, [x8, #8]
 138:	tbz	w10, #0, 22c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x22c>
 13c:	ldr	x10, [x8, #88]
 140:	str	x10, [x9, #88]
 144:	ldrb	w10, [x8, #8]
 148:	tbz	w10, #0, 22c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x22c>
 14c:	ldr	x10, [x8, #96]
 150:	str	x10, [x9, #96]
 154:	ldrb	w10, [x8, #8]
 158:	tbz	w10, #0, 22c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x22c>
 15c:	ldr	x10, [x8, #104]
 160:	str	x10, [x9, #104]
 164:	ldrb	w10, [x8, #8]
 168:	tbz	w10, #0, 22c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x22c>
 16c:	ldr	x10, [x8, #112]
 170:	str	x10, [x9, #112]
 174:	ldrb	w10, [x8, #8]
 178:	tbz	w10, #0, 22c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x22c>
 17c:	ldr	x10, [x8, #120]
 180:	str	x10, [x9, #120]
 184:	ldrb	w10, [x8, #8]
 188:	tbz	w10, #0, 22c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x22c>
 18c:	ldr	x10, [x8, #128]
 190:	str	x10, [x9, #128]
 194:	ldrb	w10, [x8, #8]
 198:	tbz	w10, #0, 22c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x22c>
 19c:	ldr	x10, [x8, #136]
 1a0:	str	x10, [x9, #136]
 1a4:	ldr	w9, [x8, #8]
 1a8:	and	w9, w9, #0xfffffffe
 1ac:	str	w9, [x8, #8]
 1b0:	ldr	q0, [sp]
 1b4:	str	q0, [x8, #16]!
 1b8:	ldp	x29, x30, [sp, #16]
 1bc:	add	sp, sp, #0x20
 1c0:	ret
 1c4:	tbz	w8, #0, 22c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x22c>
 1c8:	mov	x8, xzr
 1cc:	mov	x9, xzr
 1d0:	add	x10, x0, #0x10
 1d4:	add	x11, x1, #0x10
 1d8:	ldrb	w12, [x1, #8]
 1dc:	tbz	w12, #0, 22c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x22c>
 1e0:	ldr	x12, [x11, x8]
 1e4:	orr	x13, x12, #0x8
 1e8:	cmn	x13, #0x8
 1ec:	b.eq	204 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x204>  // b.none
 1f0:	add	x14, x10, x8
 1f4:	ldr	x13, [x14]
 1f8:	orr	x15, x13, #0x8
 1fc:	cmn	x15, #0x8
 200:	b.ne	20c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x20c>  // b.any
 204:	ldr	x13, [x10, x8]
 208:	add	x14, x10, x9, lsl #3
 20c:	cmp	x8, #0x78
 210:	str	x12, [x14]
 214:	str	x13, [x11, x8]
 218:	b.eq	1b8 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x1b8>  // b.none
 21c:	ldrb	w12, [x0, #8]
 220:	add	x9, x9, #0x1
 224:	add	x8, x8, #0x8
 228:	tbnz	w12, #0, 1d8 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x1d8>
 22c:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_>
 230:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_>
 234:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_>
 238:	add	x0, x0, #0x0
 23c:	add	x1, x1, #0x0
 240:	add	x3, x3, #0x0
 244:	mov	w2, #0x44e                 	// #1102
 248:	bl	0 <__assert_fail>
 24c:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_>
 250:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_>
 254:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_>
 258:	add	x0, x0, #0x0
 25c:	add	x1, x1, #0x0
 260:	add	x3, x3, #0x0
 264:	mov	w2, #0x45b                 	// #1115
 268:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_:

0000000000000000 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x19, x0
  18:	cmp	x0, x1
  1c:	b.eq	10c <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_+0x10c>  // b.none
  20:	mov	x21, x1
  24:	mov	x20, x1
  28:	ldr	x1, [x21], #16
  2c:	cmp	x1, x21
  30:	b.eq	68 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_+0x68>  // b.none
  34:	mov	x8, x19
  38:	ldr	x0, [x8], #16
  3c:	cmp	x0, x8
  40:	b.eq	4c <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_+0x4c>  // b.none
  44:	bl	0 <free>
  48:	ldr	x1, [x20]
  4c:	str	x1, [x19]
  50:	mov	x22, x20
  54:	ldr	x8, [x22, #8]!
  58:	str	x8, [x19, #8]
  5c:	str	x21, [x20]
  60:	str	wzr, [x20, #12]
  64:	b	108 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_+0x108>
  68:	mov	x22, x20
  6c:	ldr	w21, [x22, #8]!
  70:	ldr	w23, [x19, #8]
  74:	cmp	w23, w21
  78:	b.cs	a4 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_+0xa4>  // b.hs, b.nlast
  7c:	ldr	w8, [x19, #12]
  80:	cmp	w8, w21
  84:	b.cs	b8 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_+0xb8>  // b.hs, b.nlast
  88:	add	x1, x19, #0x10
  8c:	mov	w3, #0x8                   	// #8
  90:	mov	x0, x19
  94:	mov	x2, x21
  98:	str	wzr, [x19, #8]
  9c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  a0:	b	cc <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_+0xcc>
  a4:	cbz	w21, f8 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_+0xf8>
  a8:	ldr	x0, [x19]
  ac:	lsl	x2, x21, #3
  b0:	bl	0 <memmove>
  b4:	b	f8 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_+0xf8>
  b8:	cbz	w23, cc <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_+0xcc>
  bc:	ldr	x0, [x19]
  c0:	lsl	x2, x23, #3
  c4:	bl	0 <memmove>
  c8:	b	d0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_+0xd0>
  cc:	mov	x23, xzr
  d0:	ldr	w8, [x20, #8]
  d4:	cmp	x23, x8
  d8:	b.eq	f8 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_+0xf8>  // b.none
  dc:	ldr	x9, [x20]
  e0:	ldr	x10, [x19]
  e4:	add	x1, x9, x23, lsl #3
  e8:	add	x8, x9, x8, lsl #3
  ec:	add	x0, x10, x23, lsl #3
  f0:	sub	x2, x8, x1
  f4:	bl	0 <memcpy>
  f8:	ldr	w8, [x19, #12]
  fc:	cmp	w8, w21
 100:	b.cc	124 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_+0x124>  // b.lo, b.ul, b.last
 104:	str	w21, [x19, #8]
 108:	str	wzr, [x22]
 10c:	mov	x0, x19
 110:	ldp	x20, x19, [sp, #48]
 114:	ldp	x22, x21, [sp, #32]
 118:	ldr	x23, [sp, #16]
 11c:	ldp	x29, x30, [sp], #64
 120:	ret
 124:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_>
 128:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_>
 12c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_>
 130:	add	x0, x0, #0x0
 134:	add	x1, x1, #0x0
 138:	add	x3, x3, #0x0
 13c:	mov	w2, #0x43                  	// #67
 140:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_:

0000000000000000 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #8]
  14:	mov	x20, x0
  18:	mov	x19, x1
  1c:	tbnz	w8, #0, 30 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_+0x30>
  20:	ldr	x0, [x20, #16]
  24:	bl	0 <_ZdlPv>
  28:	ldr	w8, [x20, #8]
  2c:	tbnz	w8, #0, 148 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_+0x148>
  30:	orr	w9, w8, #0x1
  34:	str	w9, [x20, #8]
  38:	ldrb	w9, [x19, #8]
  3c:	tbnz	w9, #0, 74 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_+0x74>
  40:	ldr	w9, [x19, #24]
  44:	cmp	w9, #0x11
  48:	b.cc	74 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_+0x74>  // b.lo, b.ul, b.last
  4c:	and	w8, w8, #0xfffffffe
  50:	str	w8, [x20, #8]
  54:	ldrb	w8, [x19, #8]
  58:	tbnz	w8, #0, 168 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_+0x168>
  5c:	ldr	w21, [x19, #24]
  60:	cmp	w21, #0x10
  64:	b.ls	168 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_+0x168>  // b.plast
  68:	lsl	x0, x21, #3
  6c:	bl	0 <_Znwm>
  70:	stp	x0, x21, [x20, #16]
  74:	cmp	x19, x20
  78:	b.eq	108 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_+0x108>  // b.none
  7c:	ldr	w8, [x20, #8]
  80:	mov	w9, #0x10                  	// #16
  84:	mov	w10, #0x10                  	// #16
  88:	tbnz	w8, #0, 90 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_+0x90>
  8c:	ldr	w10, [x20, #24]
  90:	ldr	w11, [x19, #8]
  94:	ldr	w12, [x19, #24]
  98:	tst	w11, #0x1
  9c:	csel	w9, w12, w9, eq  // eq = none
  a0:	cmp	w10, w9
  a4:	b.ne	128 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_+0x128>  // b.any
  a8:	and	w8, w8, #0x1
  ac:	and	w9, w11, #0xfffffffe
  b0:	orr	w9, w9, w8
  b4:	str	w9, [x20, #8]
  b8:	ldr	w9, [x19, #12]
  bc:	str	w9, [x20, #12]
  c0:	cbnz	w8, e0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_+0xe0>
  c4:	ldr	x0, [x20, #16]
  c8:	ldr	x8, [x19, #16]!
  cc:	ldr	w9, [x20, #24]
  d0:	ldurb	w10, [x19, #-8]
  d4:	lsl	x2, x9, #3
  d8:	tst	w10, #0x1
  dc:	b	f4 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_+0xf4>
  e0:	ldr	x8, [x19, #16]!
  e4:	add	x0, x20, #0x10
  e8:	mov	w2, #0x80                  	// #128
  ec:	ldurb	w9, [x19, #-8]
  f0:	tst	w9, #0x1
  f4:	csel	x1, x8, x19, eq  // eq = none
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	b	0 <memcpy>
 108:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_>
 10c:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_>
 110:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x189                 	// #393
 124:	bl	0 <__assert_fail>
 128:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_>
 12c:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_>
 130:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_>
 134:	add	x0, x0, #0x0
 138:	add	x1, x1, #0x0
 13c:	add	x3, x3, #0x0
 140:	mov	w2, #0x18a                 	// #394
 144:	bl	0 <__assert_fail>
 148:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_>
 14c:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_>
 150:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_>
 154:	add	x0, x0, #0x0
 158:	add	x1, x1, #0x0
 15c:	add	x3, x3, #0x0
 160:	mov	w2, #0x45b                 	// #1115
 164:	bl	0 <__assert_fail>
 168:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_>
 16c:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_>
 170:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_>
 174:	add	x0, x0, #0x0
 178:	add	x1, x1, #0x0
 17c:	add	x3, x3, #0x0
 180:	mov	w2, #0x47d                 	// #1149
 184:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_:

0000000000000000 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	cmp	x0, x1
  18:	b.eq	c4 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0xc4>  // b.none
  1c:	ldr	w20, [x1, #8]
  20:	ldr	w22, [x19, #8]
  24:	mov	x21, x1
  28:	cmp	w22, w20
  2c:	b.cs	58 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0x58>  // b.hs, b.nlast
  30:	ldr	w8, [x19, #12]
  34:	cmp	w8, w20
  38:	b.cs	70 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0x70>  // b.hs, b.nlast
  3c:	add	x1, x19, #0x10
  40:	mov	w3, #0x8                   	// #8
  44:	mov	x0, x19
  48:	mov	x2, x20
  4c:	str	wzr, [x19, #8]
  50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  54:	b	88 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0x88>
  58:	cbz	w20, b4 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0xb4>
  5c:	ldr	x1, [x21]
  60:	ldr	x0, [x19]
  64:	lsl	x2, x20, #3
  68:	bl	0 <memmove>
  6c:	b	b4 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0xb4>
  70:	cbz	w22, 88 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0x88>
  74:	ldr	x1, [x21]
  78:	ldr	x0, [x19]
  7c:	lsl	x2, x22, #3
  80:	bl	0 <memmove>
  84:	b	8c <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0x8c>
  88:	mov	x22, xzr
  8c:	ldr	w8, [x21, #8]
  90:	cmp	x22, x8
  94:	b.eq	b4 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0xb4>  // b.none
  98:	ldr	x9, [x21]
  9c:	ldr	x10, [x19]
  a0:	add	x1, x9, x22, lsl #3
  a4:	add	x8, x9, x8, lsl #3
  a8:	add	x0, x10, x22, lsl #3
  ac:	sub	x2, x8, x1
  b0:	bl	0 <memcpy>
  b4:	ldr	w8, [x19, #12]
  b8:	cmp	w8, w20
  bc:	b.cc	d8 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0xd8>  // b.lo, b.ul, b.last
  c0:	str	w20, [x19, #8]
  c4:	mov	x0, x19
  c8:	ldp	x20, x19, [sp, #32]
  cc:	ldp	x22, x21, [sp, #16]
  d0:	ldp	x29, x30, [sp], #48
  d4:	ret
  d8:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_>
  dc:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_>
  e0:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0x43                  	// #67
  f4:	bl	0 <__assert_fail>

Disassembly of section .text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_:

0000000000000000 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x9, x0
  10:	ldr	x2, [x1, #8]
  14:	ldp	x3, x4, [x0]
  18:	ldr	x11, [x9, #16]!
  1c:	mov	w12, #0xf                   	// #15
  20:	mov	x19, x8
  24:	add	x10, x2, x4
  28:	cmp	x3, x9
  2c:	ldr	x9, [x1]
  30:	csel	x11, x12, x11, eq  // eq = none
  34:	cmp	x10, x11
  38:	b.ls	58 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x58>  // b.plast
  3c:	mov	x8, x1
  40:	ldr	x11, [x8, #16]!
  44:	cmp	x9, x8
  48:	mov	w8, #0xf                   	// #15
  4c:	csel	x8, x8, x11, eq  // eq = none
  50:	cmp	x10, x8
  54:	b.ls	64 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x64>  // b.plast
  58:	mov	x1, x9
  5c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
  60:	b	74 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x74>
  64:	mov	x0, x1
  68:	mov	x1, xzr
  6c:	mov	x2, xzr
  70:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
  74:	add	x9, x19, #0x10
  78:	str	x9, [x19]
  7c:	mov	x8, x0
  80:	ldr	x10, [x8], #16
  84:	cmp	x10, x8
  88:	b.eq	9c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x9c>  // b.none
  8c:	str	x10, [x19]
  90:	ldr	x9, [x0, #16]
  94:	str	x9, [x19, #16]
  98:	b	a4 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0xa4>
  9c:	ldr	q0, [x10]
  a0:	str	q0, [x9]
  a4:	ldr	x9, [x0, #8]
  a8:	str	x9, [x19, #8]
  ac:	stp	x8, xzr, [x0]
  b0:	ldr	x19, [sp, #16]
  b4:	strb	wzr, [x0, #16]
  b8:	ldp	x29, x30, [sp], #32
  bc:	ret

Disassembly of section .text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_:

0000000000000000 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x21, x0
  14:	mov	x0, x1
  18:	mov	x20, x1
  1c:	mov	x19, x8
  20:	bl	0 <strlen>
  24:	ldr	x8, [x21, #8]
  28:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
  2c:	sub	x8, x9, x8
  30:	cmp	x8, x0
  34:	b.cc	98 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_+0x98>  // b.lo, b.ul, b.last
  38:	mov	x2, x0
  3c:	mov	x0, x21
  40:	mov	x1, x20
  44:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
  48:	add	x9, x19, #0x10
  4c:	str	x9, [x19]
  50:	mov	x8, x0
  54:	ldr	x10, [x8], #16
  58:	cmp	x10, x8
  5c:	b.eq	70 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_+0x70>  // b.none
  60:	str	x10, [x19]
  64:	ldr	x9, [x0, #16]
  68:	str	x9, [x19, #16]
  6c:	b	78 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_+0x78>
  70:	ldr	q0, [x10]
  74:	str	q0, [x9]
  78:	ldr	x9, [x0, #8]
  7c:	str	x9, [x19, #8]
  80:	stp	x8, xzr, [x0]
  84:	strb	wzr, [x0, #16]
  88:	ldp	x20, x19, [sp, #32]
  8c:	ldr	x21, [sp, #16]
  90:	ldp	x29, x30, [sp], #48
  94:	ret
  98:	adrp	x0, 0 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
  9c:	add	x0, x0, #0x0
  a0:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_:

0000000000000000 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x1
  14:	mov	x21, x0
  18:	mov	x20, x8
  1c:	bl	0 <strlen>
  20:	mov	x8, x20
  24:	strb	wzr, [x8, #16]!
  28:	stp	x8, xzr, [x20]
  2c:	ldr	x8, [x19, #8]
  30:	mov	x22, x0
  34:	add	x1, x8, x0
  38:	mov	x0, x20
  3c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
  40:	ldr	x8, [x20, #8]
  44:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
  48:	sub	x8, x9, x8
  4c:	cmp	x8, x22
  50:	b.cc	7c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_+0x7c>  // b.lo, b.ul, b.last
  54:	mov	x0, x20
  58:	mov	x1, x21
  5c:	mov	x2, x22
  60:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
  64:	ldp	x1, x2, [x19]
  68:	mov	x0, x20
  6c:	ldp	x20, x19, [sp, #32]
  70:	ldp	x22, x21, [sp, #16]
  74:	ldp	x29, x30, [sp], #48
  78:	b	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
  7c:	adrp	x0, 0 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
  80:	add	x0, x0, #0x0
  84:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNK4llvm13format_objectIJjEE7snprintEPcj:

0000000000000000 <_ZNK4llvm13format_objectIJjEE7snprintEPcj>:
   0:	ldr	x8, [x0, #8]
   4:	ldr	w3, [x0, #16]
   8:	mov	w9, w2
   c:	mov	x0, x1
  10:	mov	x1, x9
  14:	mov	x2, x8
  18:	b	0 <snprintf>

Disassembly of section .text._ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_:

0000000000000000 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x22, x2
  1c:	mov	x23, x1
  20:	mov	x20, x0
  24:	bl	0 <_ZN4llvm13StringMapImpl15LookupBucketForENS_9StringRefE>
  28:	ldr	x8, [x20]
  2c:	mov	w21, w0
  30:	add	x19, x8, w0, uxtw #3
  34:	ldr	x8, [x19]
  38:	cmn	x8, #0x8
  3c:	b.eq	60 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x60>  // b.none
  40:	cbz	x8, 6c <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x6c>
  44:	b	4c <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x4c>
  48:	ldr	x8, [x19, #8]!
  4c:	cbz	x8, 48 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x48>
  50:	cmn	x8, #0x8
  54:	b.eq	48 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x48>  // b.none
  58:	mov	x1, xzr
  5c:	b	130 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x130>
  60:	ldr	w8, [x20, #16]
  64:	sub	w8, w8, #0x1
  68:	str	w8, [x20, #16]
  6c:	add	x25, x22, #0x11
  70:	mov	x0, x25
  74:	bl	0 <malloc>
  78:	mov	x24, x0
  7c:	cbnz	x0, 94 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x94>
  80:	cbz	x25, a4 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0xa4>
  84:	adrp	x0, 0 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_>
  88:	add	x0, x0, #0x0
  8c:	mov	w1, #0x1                   	// #1
  90:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  94:	add	x25, x24, #0x10
  98:	stp	x22, xzr, [x24]
  9c:	cbnz	x22, cc <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0xcc>
  a0:	b	dc <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0xdc>
  a4:	mov	w0, #0x1                   	// #1
  a8:	bl	0 <malloc>
  ac:	mov	x24, x0
  b0:	cbnz	x0, c4 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0xc4>
  b4:	adrp	x0, 0 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_>
  b8:	add	x0, x0, #0x0
  bc:	mov	w1, #0x1                   	// #1
  c0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  c4:	stp	x22, xzr, [x24]
  c8:	add	x25, x24, #0x10
  cc:	mov	x0, x25
  d0:	mov	x1, x23
  d4:	mov	x2, x22
  d8:	bl	0 <memcpy>
  dc:	strb	wzr, [x25, x22]
  e0:	str	x24, [x19]
  e4:	ldp	w8, w9, [x20, #12]
  e8:	ldr	w10, [x20, #8]
  ec:	add	w8, w8, #0x1
  f0:	add	w9, w9, w8
  f4:	cmp	w9, w10
  f8:	str	w8, [x20, #12]
  fc:	b.hi	14c <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x14c>  // b.pmore
 100:	mov	x0, x20
 104:	mov	w1, w21
 108:	bl	0 <_ZN4llvm13StringMapImpl11RehashTableEj>
 10c:	ldr	x8, [x20]
 110:	add	x19, x8, w0, uxtw #3
 114:	b	11c <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x11c>
 118:	add	x19, x19, #0x8
 11c:	ldr	x8, [x19]
 120:	cbz	x8, 118 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x118>
 124:	cmn	x8, #0x8
 128:	b.eq	118 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x118>  // b.none
 12c:	mov	w1, #0x1                   	// #1
 130:	mov	x0, x19
 134:	ldp	x20, x19, [sp, #64]
 138:	ldp	x22, x21, [sp, #48]
 13c:	ldp	x24, x23, [sp, #32]
 140:	ldr	x25, [sp, #16]
 144:	ldp	x29, x30, [sp], #80
 148:	ret
 14c:	adrp	x0, 0 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_>
 150:	adrp	x1, 0 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_>
 154:	adrp	x3, 0 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_>
 158:	add	x0, x0, #0x0
 15c:	add	x1, x1, #0x0
 160:	add	x3, x3, #0x0
 164:	mov	w2, #0x1bb                 	// #443
 168:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_:

0000000000000000 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x22, x2
  1c:	mov	x23, x1
  20:	mov	x20, x0
  24:	bl	0 <_ZN4llvm13StringMapImpl15LookupBucketForENS_9StringRefE>
  28:	ldr	x8, [x20]
  2c:	mov	w21, w0
  30:	add	x19, x8, w0, uxtw #3
  34:	ldr	x8, [x19]
  38:	cmn	x8, #0x8
  3c:	b.eq	60 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x60>  // b.none
  40:	cbz	x8, 6c <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x6c>
  44:	b	4c <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x4c>
  48:	ldr	x8, [x19, #8]!
  4c:	cbz	x8, 48 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x48>
  50:	cmn	x8, #0x8
  54:	b.eq	48 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x48>  // b.none
  58:	mov	x1, xzr
  5c:	b	130 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x130>
  60:	ldr	w8, [x20, #16]
  64:	sub	w8, w8, #0x1
  68:	str	w8, [x20, #16]
  6c:	add	x25, x22, #0x11
  70:	mov	x0, x25
  74:	bl	0 <malloc>
  78:	mov	x24, x0
  7c:	cbnz	x0, 94 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x94>
  80:	cbz	x25, a4 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0xa4>
  84:	adrp	x0, 0 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_>
  88:	add	x0, x0, #0x0
  8c:	mov	w1, #0x1                   	// #1
  90:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  94:	add	x25, x24, #0x10
  98:	stp	x22, xzr, [x24]
  9c:	cbnz	x22, cc <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0xcc>
  a0:	b	dc <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0xdc>
  a4:	mov	w0, #0x1                   	// #1
  a8:	bl	0 <malloc>
  ac:	mov	x24, x0
  b0:	cbnz	x0, c4 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0xc4>
  b4:	adrp	x0, 0 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_>
  b8:	add	x0, x0, #0x0
  bc:	mov	w1, #0x1                   	// #1
  c0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  c4:	stp	x22, xzr, [x24]
  c8:	add	x25, x24, #0x10
  cc:	mov	x0, x25
  d0:	mov	x1, x23
  d4:	mov	x2, x22
  d8:	bl	0 <memcpy>
  dc:	strb	wzr, [x25, x22]
  e0:	str	x24, [x19]
  e4:	ldp	w8, w9, [x20, #12]
  e8:	ldr	w10, [x20, #8]
  ec:	add	w8, w8, #0x1
  f0:	add	w9, w9, w8
  f4:	cmp	w9, w10
  f8:	str	w8, [x20, #12]
  fc:	b.hi	14c <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x14c>  // b.pmore
 100:	mov	x0, x20
 104:	mov	w1, w21
 108:	bl	0 <_ZN4llvm13StringMapImpl11RehashTableEj>
 10c:	ldr	x8, [x20]
 110:	add	x19, x8, w0, uxtw #3
 114:	b	11c <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x11c>
 118:	add	x19, x19, #0x8
 11c:	ldr	x8, [x19]
 120:	cbz	x8, 118 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x118>
 124:	cmn	x8, #0x8
 128:	b.eq	118 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x118>  // b.none
 12c:	mov	w1, #0x1                   	// #1
 130:	mov	x0, x19
 134:	ldp	x20, x19, [sp, #64]
 138:	ldp	x22, x21, [sp, #48]
 13c:	ldp	x24, x23, [sp, #32]
 140:	ldr	x25, [sp, #16]
 144:	ldp	x29, x30, [sp], #80
 148:	ret
 14c:	adrp	x0, 0 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_>
 150:	adrp	x1, 0 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_>
 154:	adrp	x3, 0 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_>
 158:	add	x0, x0, #0x0
 15c:	add	x1, x1, #0x0
 160:	add	x3, x3, #0x0
 164:	mov	w2, #0x1bb                 	// #443
 168:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9SetTheory8ExpanderD2Ev:

0000000000000000 <_ZN4llvm9SetTheory8ExpanderD2Ev>:
   0:	ret

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x20, x0
  18:	mov	w0, #0x40                  	// #64
  1c:	mov	x21, x3
  20:	mov	x22, x1
  24:	bl	0 <_Znwm>
  28:	ldr	x8, [x21]
  2c:	mov	x21, x0
  30:	mov	x23, x0
  34:	mov	x19, x0
  38:	ldr	x8, [x8]
  3c:	mov	x1, x22
  40:	str	x8, [x21, #32]!
  44:	str	xzr, [x23, #40]!
  48:	stp	xzr, xzr, [x0, #48]
  4c:	mov	x0, x20
  50:	mov	x2, x21
  54:	bl	0 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
  58:	mov	x22, x0
  5c:	cbz	x1, 70 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x70>
  60:	mov	x2, x1
  64:	cbz	x22, 88 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x88>
  68:	mov	w0, #0x1                   	// #1
  6c:	b	a4 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xa4>
  70:	ldr	x0, [x23]
  74:	cbz	x0, 7c <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x7c>
  78:	bl	0 <_ZdlPv>
  7c:	mov	x0, x19
  80:	bl	0 <_ZdlPv>
  84:	b	c0 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xc0>
  88:	add	x8, x20, #0x8
  8c:	cmp	x8, x2
  90:	b.eq	68 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS4_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x68>  // b.none
  94:	ldr	x8, [x21]
  98:	ldr	x9, [x2, #32]
  9c:	cmp	x8, x9
  a0:	cset	w0, cc  // cc = lo, ul, last
  a4:	add	x3, x20, #0x8
  a8:	mov	x1, x19
  ac:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  b0:	ldr	x8, [x20, #40]
  b4:	mov	x22, x19
  b8:	add	x8, x8, #0x1
  bc:	str	x8, [x20, #40]
  c0:	mov	x0, x22
  c4:	ldp	x20, x19, [sp, #48]
  c8:	ldp	x22, x21, [sp, #32]
  cc:	ldr	x23, [sp, #16]
  d0:	ldp	x29, x30, [sp], #64
  d4:	ret

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	add	x23, x0, #0x8
  18:	mov	x20, x1
  1c:	mov	x21, x0
  20:	cmp	x23, x1
  24:	mov	x22, x2
  28:	b.eq	74 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x74>  // b.none
  2c:	ldr	x22, [x22]
  30:	ldr	x8, [x20, #32]
  34:	cmp	x22, x8
  38:	b.cs	d0 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0xd0>  // b.hs, b.nlast
  3c:	ldr	x24, [x21, #24]
  40:	cmp	x24, x20
  44:	b.eq	118 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x118>  // b.none
  48:	mov	x0, x20
  4c:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  50:	ldr	x8, [x0, #32]
  54:	cmp	x8, x22
  58:	b.cs	124 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x124>  // b.hs, b.nlast
  5c:	ldr	x8, [x0, #24]
  60:	cmp	x8, #0x0
  64:	csel	x8, xzr, x20, eq  // eq = none
  68:	csel	x19, x0, x20, eq  // eq = none
  6c:	mov	x20, x8
  70:	b	200 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x200>
  74:	ldr	x8, [x21, #40]
  78:	cbz	x8, 90 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x90>
  7c:	ldr	x19, [x21, #32]
  80:	ldr	x9, [x22]
  84:	ldr	x8, [x19, #32]
  88:	cmp	x8, x9
  8c:	b.cc	1d0 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x1d0>  // b.lo, b.ul, b.last
  90:	ldr	x9, [x21, #16]
  94:	cbz	x9, 164 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x164>
  98:	ldr	x8, [x22]
  9c:	ldr	x10, [x9, #32]
  a0:	mov	x19, x9
  a4:	add	x9, x9, #0x10
  a8:	add	x11, x19, #0x18
  ac:	cmp	x8, x10
  b0:	csel	x9, x9, x11, cc  // cc = lo, ul, last
  b4:	ldr	x9, [x9]
  b8:	cbnz	x9, 9c <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x9c>
  bc:	cmp	x8, x10
  c0:	mov	x20, x19
  c4:	mov	x0, x19
  c8:	b.cc	168 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x168>  // b.lo, b.ul, b.last
  cc:	b	180 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x180>
  d0:	cmp	x8, x22
  d4:	b.cs	110 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x110>  // b.hs, b.nlast
  d8:	ldr	x19, [x21, #32]
  dc:	cmp	x19, x20
  e0:	b.eq	1d0 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x1d0>  // b.none
  e4:	mov	x0, x20
  e8:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
  ec:	ldr	x8, [x0, #32]
  f0:	cmp	x22, x8
  f4:	b.cs	18c <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x18c>  // b.hs, b.nlast
  f8:	ldr	x8, [x20, #24]
  fc:	cmp	x8, #0x0
 100:	csel	x8, xzr, x0, eq  // eq = none
 104:	csel	x19, x20, x0, eq  // eq = none
 108:	mov	x20, x8
 10c:	b	200 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x200>
 110:	mov	x19, xzr
 114:	b	200 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x200>
 118:	mov	x20, x24
 11c:	mov	x19, x24
 120:	b	200 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x200>
 124:	ldr	x9, [x21, #16]
 128:	cbz	x9, 1c4 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x1c4>
 12c:	ldr	x8, [x9, #32]
 130:	mov	x19, x9
 134:	add	x9, x9, #0x10
 138:	add	x10, x19, #0x18
 13c:	cmp	x22, x8
 140:	csel	x9, x9, x10, cc  // cc = lo, ul, last
 144:	ldr	x9, [x9]
 148:	cbnz	x9, 12c <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x12c>
 14c:	cmp	x22, x8
 150:	mov	x0, x19
 154:	b.cs	1f0 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x1f0>  // b.hs, b.nlast
 158:	cmp	x24, x19
 15c:	b.ne	1e8 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x1e8>  // b.any
 160:	b	1d0 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x1d0>
 164:	mov	x19, x23
 168:	ldr	x8, [x21, #24]
 16c:	cmp	x8, x20
 170:	b.eq	1d0 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x1d0>  // b.none
 174:	mov	x0, x20
 178:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 17c:	ldr	x8, [x22]
 180:	ldr	x9, [x0, #32]
 184:	cmp	x9, x8
 188:	b	1f8 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x1f8>
 18c:	ldr	x9, [x21, #16]
 190:	cbz	x9, 1d8 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x1d8>
 194:	ldr	x8, [x9, #32]
 198:	mov	x19, x9
 19c:	add	x9, x9, #0x10
 1a0:	add	x10, x19, #0x18
 1a4:	cmp	x22, x8
 1a8:	csel	x9, x9, x10, cc  // cc = lo, ul, last
 1ac:	ldr	x9, [x9]
 1b0:	cbnz	x9, 194 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x194>
 1b4:	cmp	x22, x8
 1b8:	mov	x0, x19
 1bc:	b.cc	1dc <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x1dc>  // b.lo, b.ul, b.last
 1c0:	b	1f0 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x1f0>
 1c4:	mov	x19, x23
 1c8:	cmp	x24, x19
 1cc:	b.ne	1e8 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x1e8>  // b.any
 1d0:	mov	x20, xzr
 1d4:	b	200 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x200>
 1d8:	mov	x19, x23
 1dc:	ldr	x8, [x21, #24]
 1e0:	cmp	x8, x19
 1e4:	b.eq	1d0 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x1d0>  // b.none
 1e8:	mov	x0, x19
 1ec:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 1f0:	ldr	x8, [x0, #32]
 1f4:	cmp	x8, x22
 1f8:	csel	x20, xzr, x0, cc  // cc = lo, ul, last
 1fc:	csel	x19, x19, xzr, cc  // cc = lo, ul, last
 200:	mov	x0, x20
 204:	mov	x1, x19
 208:	ldp	x20, x19, [sp, #48]
 20c:	ldp	x22, x21, [sp, #32]
 210:	ldp	x24, x23, [sp, #16]
 214:	ldp	x29, x30, [sp], #64
 218:	ret

Disassembly of section .text._ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x8, [x0, #16]
  1c:	ldr	x23, [x0]
  20:	sub	x24, x2, x1
  24:	asr	x25, x24, #3
  28:	mov	x20, x1
  2c:	sub	x8, x8, x23
  30:	mov	x19, x0
  34:	cmp	x25, x8, asr #3
  38:	b.ls	7c <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x7c>  // b.plast
  3c:	lsr	x8, x25, #60
  40:	cbnz	x8, 11c <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x11c>
  44:	cbz	x24, 10c <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x10c>
  48:	mov	x0, x24
  4c:	bl	0 <_Znwm>
  50:	mov	x1, x20
  54:	mov	x2, x24
  58:	mov	x21, x0
  5c:	bl	0 <memcpy>
  60:	ldr	x0, [x19]
  64:	cbz	x0, 6c <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x6c>
  68:	bl	0 <_ZdlPv>
  6c:	add	x8, x21, x25, lsl #3
  70:	stp	x21, x8, [x19]
  74:	str	x8, [x19, #16]
  78:	b	f4 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xf4>
  7c:	ldr	x21, [x19, #8]
  80:	mov	x22, x2
  84:	sub	x2, x21, x23
  88:	asr	x8, x2, #3
  8c:	cmp	x8, x25
  90:	b.cs	cc <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xcc>  // b.hs, b.nlast
  94:	add	x24, x20, x8, lsl #3
  98:	cbz	x2, ac <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xac>
  9c:	mov	x0, x23
  a0:	mov	x1, x20
  a4:	bl	0 <memmove>
  a8:	ldr	x21, [x19, #8]
  ac:	subs	x2, x22, x24
  b0:	asr	x20, x2, #3
  b4:	b.eq	c4 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xc4>  // b.none
  b8:	mov	x0, x21
  bc:	mov	x1, x24
  c0:	bl	0 <memmove>
  c4:	add	x8, x21, x20, lsl #3
  c8:	b	f0 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xf0>
  cc:	cbz	x24, e4 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xe4>
  d0:	mov	x0, x23
  d4:	mov	x1, x20
  d8:	mov	x2, x24
  dc:	bl	0 <memmove>
  e0:	ldr	x21, [x19, #8]
  e4:	add	x8, x23, x25, lsl #3
  e8:	cmp	x21, x8
  ec:	b.eq	f4 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xf4>  // b.none
  f0:	str	x8, [x19, #8]
  f4:	ldp	x20, x19, [sp, #64]
  f8:	ldp	x22, x21, [sp, #48]
  fc:	ldp	x24, x23, [sp, #32]
 100:	ldr	x25, [sp, #16]
 104:	ldp	x29, x30, [sp], #80
 108:	ret
 10c:	mov	x21, xzr
 110:	ldr	x0, [x19]
 114:	cbnz	x0, 68 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x68>
 118:	b	6c <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x6c>
 11c:	adrp	x0, 0 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag>
 120:	add	x0, x0, #0x0
 124:	bl	0 <_ZSt20__throw_length_errorPKc>

StringMatcher.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>:
       0:	sub	sp, sp, #0xf0
       4:	stp	x29, x30, [sp, #144]
       8:	stp	x28, x27, [sp, #160]
       c:	stp	x26, x25, [sp, #176]
      10:	stp	x24, x23, [sp, #192]
      14:	stp	x22, x21, [sp, #208]
      18:	stp	x20, x19, [sp, #224]
      1c:	add	x29, sp, #0x90
      20:	str	w4, [sp, #12]
      24:	ldp	x8, x9, [x1]
      28:	cmp	x8, x9
      2c:	b.eq	ce8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xce8>  // b.none
      30:	lsl	w8, w3, #1
      34:	sub	x9, x29, #0x28
      38:	mov	w26, w2
      3c:	mov	x22, x1
      40:	mov	x19, x0
      44:	add	w1, w8, #0x4
      48:	add	x28, x9, #0x10
      4c:	sub	x0, x29, #0x28
      50:	mov	w2, #0x20                  	// #32
      54:	mov	w21, w3
      58:	stur	x28, [x29, #-40]
      5c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc>
      60:	ldr	x9, [x22]
      64:	mov	w23, w26
      68:	ldr	x8, [x9]
      6c:	ldr	x10, [x8, #8]
      70:	cmp	x10, x23
      74:	b.ne	dc <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xdc>  // b.any
      78:	ldr	x10, [x22, #8]
      7c:	sub	x9, x10, x9
      80:	asr	x9, x9, #3
      84:	cmp	x9, #0x2
      88:	b.cc	94 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x94>  // b.lo, b.ul, b.last
      8c:	ldr	w9, [sp, #12]
      90:	tbz	w9, #0, d08 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xd08>
      94:	ldr	q0, [x8, #32]
      98:	mov	w8, #0xa                   	// #10
      9c:	add	x0, sp, #0x30
      a0:	add	x1, sp, #0x10
      a4:	mov	w2, #0x1                   	// #1
      a8:	mov	x3, xzr
      ac:	str	q0, [sp, #48]
      b0:	strb	w8, [sp, #16]
      b4:	bl	0 <_ZNK4llvm9StringRef4findES0_m>
      b8:	cmn	x0, #0x1
      bc:	b.eq	28c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x28c>  // b.none
      c0:	ldp	x23, x8, [sp, #48]
      c4:	cmp	x8, x0
      c8:	csinc	x9, x8, x0, ls  // ls = plast
      cc:	csel	x21, x8, x0, cc  // cc = lo, ul, last
      d0:	add	x25, x23, x9
      d4:	sub	x24, x8, x9
      d8:	b	298 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x298>
      dc:	add	x8, sp, #0x30
      e0:	add	x25, x8, #0x8
      e4:	str	wzr, [sp, #56]
      e8:	stp	xzr, x25, [sp, #64]
      ec:	stp	x25, xzr, [sp, #80]
      f0:	ldr	x8, [x22, #8]
      f4:	sub	x8, x8, x9
      f8:	lsr	x10, x8, #3
      fc:	cbz	w10, 210 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x210>
     100:	adrp	x24, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     104:	mov	x10, xzr
     108:	mov	x20, xzr
     10c:	ubfx	x27, x8, #3, #32
     110:	add	x24, x24, #0x0
     114:	ldr	x8, [x9, x20, lsl #3]
     118:	ldr	x8, [x8]
     11c:	add	x11, x8, x23
     120:	cbz	x10, 164 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x164>
     124:	ldrb	w12, [x11]
     128:	mov	x8, x25
     12c:	ldrb	w13, [x10, #32]
     130:	add	x14, x10, #0x18
     134:	add	x15, x10, #0x10
     138:	cmp	w13, w12
     13c:	csel	x8, x8, x10, cc  // cc = lo, ul, last
     140:	csel	x10, x14, x15, cc  // cc = lo, ul, last
     144:	ldr	x10, [x10]
     148:	cbnz	x10, 12c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x12c>
     14c:	cmp	x8, x25
     150:	b.eq	168 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x168>  // b.none
     154:	ldrb	w10, [x8, #32]
     158:	cmp	w12, w10
     15c:	b.cc	168 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x168>  // b.lo, b.ul, b.last
     160:	b	18c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x18c>
     164:	mov	x8, x25
     168:	add	x0, sp, #0x30
     16c:	add	x3, sp, #0x10
     170:	sub	x4, x29, #0x8
     174:	mov	x1, x8
     178:	mov	x2, x24
     17c:	str	x11, [sp, #16]
     180:	bl	0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     184:	ldr	x9, [x22]
     188:	mov	x8, x0
     18c:	ldp	x1, x10, [x8, #48]
     190:	add	x2, x9, x20, lsl #3
     194:	cmp	x1, x10
     198:	b.eq	1b4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x1b4>  // b.none
     19c:	ldr	x9, [x2]
     1a0:	str	x9, [x1]
     1a4:	ldr	x9, [x8, #48]
     1a8:	add	x9, x9, #0x8
     1ac:	str	x9, [x8, #48]
     1b0:	b	1bc <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x1bc>
     1b4:	add	x0, x8, #0x28
     1b8:	bl	0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     1bc:	add	x20, x20, #0x1
     1c0:	cmp	x20, x27
     1c4:	b.eq	1d4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x1d4>  // b.none
     1c8:	ldr	x9, [x22]
     1cc:	ldr	x10, [sp, #64]
     1d0:	b	114 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x114>
     1d4:	ldr	x8, [sp, #88]
     1d8:	cmp	x8, #0x1
     1dc:	b.ne	210 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x210>  // b.any
     1e0:	ldp	x8, x12, [x22]
     1e4:	cmp	x8, x12
     1e8:	b.eq	d18 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xd18>  // b.none
     1ec:	ldr	x10, [x8]
     1f0:	ldr	x24, [x10, #8]
     1f4:	cbz	w24, 878 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x878>
     1f8:	ldr	x10, [x10]
     1fc:	sub	x12, x12, x8
     200:	mov	x9, xzr
     204:	and	x11, x24, #0xffffffff
     208:	lsr	x12, x12, #3
     20c:	b	25c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x25c>
     210:	ldr	x0, [x19, #24]
     214:	ldp	x1, x2, [x29, #-40]
     218:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     21c:	ldp	x9, x8, [x0, #16]
     220:	mov	x22, x0
     224:	sub	x9, x9, x8
     228:	cmp	x9, #0x7
     22c:	b.hi	48c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x48c>  // b.pmore
     230:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     234:	add	x1, x1, #0x0
     238:	mov	w2, #0x8                   	// #8
     23c:	mov	x0, x22
     240:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     244:	mov	x22, x0
     248:	ldr	x0, [x0, #24]
     24c:	b	4ac <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x4ac>
     250:	add	x9, x9, #0x1
     254:	cmp	x9, x11
     258:	b.eq	878 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x878>  // b.none
     25c:	cbz	w12, 250 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x250>
     260:	ldrb	w13, [x10, x9]
     264:	mov	w14, wzr
     268:	ldr	x15, [x8, w14, uxtw #3]
     26c:	ldr	x15, [x15]
     270:	ldrb	w15, [x15, x9]
     274:	cmp	w15, w13
     278:	b.ne	874 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x874>  // b.any
     27c:	add	w14, w14, #0x1
     280:	cmp	w12, w14
     284:	b.ne	268 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x268>  // b.any
     288:	b	250 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x250>
     28c:	ldp	x23, x21, [sp, #48]
     290:	mov	x24, xzr
     294:	mov	x25, xzr
     298:	ldr	x0, [x19, #24]
     29c:	ldp	x1, x2, [x29, #-40]
     2a0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     2a4:	mov	x20, x0
     2a8:	ldp	x8, x0, [x0, #16]
     2ac:	sub	x8, x8, x0
     2b0:	cmp	x21, x8
     2b4:	b.ls	2d4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x2d4>  // b.plast
     2b8:	mov	x0, x20
     2bc:	mov	x1, x23
     2c0:	mov	x2, x21
     2c4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     2c8:	mov	x20, x0
     2cc:	ldr	x0, [x0, #24]
     2d0:	b	2f0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x2f0>
     2d4:	cbz	x21, 2f0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x2f0>
     2d8:	mov	x1, x23
     2dc:	mov	x2, x21
     2e0:	bl	0 <memcpy>
     2e4:	ldr	x8, [x20, #24]
     2e8:	add	x0, x8, x21
     2ec:	str	x0, [x20, #24]
     2f0:	ldr	x8, [x20, #16]
     2f4:	sub	x8, x8, x0
     2f8:	cmp	x8, #0x5
     2fc:	b.hi	31c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x31c>  // b.pmore
     300:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     304:	add	x1, x1, #0x0
     308:	mov	w2, #0x6                   	// #6
     30c:	mov	x0, x20
     310:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     314:	mov	x20, x0
     318:	b	33c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x33c>
     31c:	mov	w9, #0x2009                	// #8201
     320:	mov	w8, #0x2220                	// #8736
     324:	movk	w9, #0x2f2f, lsl #16
     328:	strh	w8, [x0, #4]
     32c:	str	w9, [x0]
     330:	ldr	x8, [x20, #24]
     334:	add	x8, x8, #0x6
     338:	str	x8, [x20, #24]
     33c:	ldr	x8, [x22]
     340:	mov	x0, x20
     344:	ldr	x8, [x8]
     348:	ldp	x1, x2, [x8]
     34c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     350:	ldp	x9, x8, [x0, #16]
     354:	sub	x9, x9, x8
     358:	cmp	x9, #0x1
     35c:	b.hi	37c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x37c>  // b.pmore
     360:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     364:	add	x1, x1, #0x0
     368:	mov	w2, #0x2                   	// #2
     36c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     370:	stp	x25, x24, [sp, #48]
     374:	cbnz	x24, 398 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x398>
     378:	b	484 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x484>
     37c:	mov	w9, #0xa22                 	// #2594
     380:	strh	w9, [x8]
     384:	ldr	x8, [x0, #24]
     388:	add	x8, x8, #0x2
     38c:	str	x8, [x0, #24]
     390:	stp	x25, x24, [sp, #48]
     394:	cbz	x24, 484 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x484>
     398:	adrp	x20, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     39c:	mov	w24, #0xa                   	// #10
     3a0:	add	x20, x20, #0x0
     3a4:	b	3c0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x3c0>
     3a8:	strb	w24, [x0]
     3ac:	ldr	x8, [x22, #24]
     3b0:	add	x8, x8, #0x1
     3b4:	str	x8, [x22, #24]
     3b8:	stp	x25, x26, [sp, #48]
     3bc:	cbz	x26, 484 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x484>
     3c0:	add	x0, sp, #0x30
     3c4:	add	x1, sp, #0x10
     3c8:	mov	w2, #0x1                   	// #1
     3cc:	mov	x3, xzr
     3d0:	strb	w24, [sp, #16]
     3d4:	bl	0 <_ZNK4llvm9StringRef4findES0_m>
     3d8:	cmn	x0, #0x1
     3dc:	b.eq	3fc <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x3fc>  // b.none
     3e0:	ldp	x23, x8, [sp, #48]
     3e4:	cmp	x8, x0
     3e8:	csinc	x9, x8, x0, ls  // ls = plast
     3ec:	csel	x21, x8, x0, cc  // cc = lo, ul, last
     3f0:	add	x25, x23, x9
     3f4:	sub	x26, x8, x9
     3f8:	b	408 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x408>
     3fc:	ldp	x23, x21, [sp, #48]
     400:	mov	x25, xzr
     404:	mov	x26, xzr
     408:	ldr	x0, [x19, #24]
     40c:	ldp	x1, x2, [x29, #-40]
     410:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     414:	mov	x22, x0
     418:	ldp	x8, x0, [x0, #16]
     41c:	sub	x8, x8, x0
     420:	cmp	x21, x8
     424:	b.ls	444 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x444>  // b.plast
     428:	mov	x0, x22
     42c:	mov	x1, x23
     430:	mov	x2, x21
     434:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     438:	mov	x22, x0
     43c:	ldr	x0, [x0, #24]
     440:	b	460 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x460>
     444:	cbz	x21, 460 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x460>
     448:	mov	x1, x23
     44c:	mov	x2, x21
     450:	bl	0 <memcpy>
     454:	ldr	x8, [x22, #24]
     458:	add	x0, x8, x21
     45c:	str	x0, [x22, #24]
     460:	ldr	x8, [x22, #16]
     464:	cmp	x8, x0
     468:	b.ne	3a8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x3a8>  // b.any
     46c:	mov	w2, #0x1                   	// #1
     470:	mov	x0, x22
     474:	mov	x1, x20
     478:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     47c:	stp	x25, x26, [sp, #48]
     480:	cbnz	x26, 3c0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x3c0>
     484:	mov	w19, wzr
     488:	b	cb4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xcb4>
     48c:	mov	x9, #0x7773                	// #30579
     490:	movk	x9, #0x7469, lsl #16
     494:	movk	x9, #0x6863, lsl #32
     498:	movk	x9, #0x2820, lsl #48
     49c:	str	x9, [x8]
     4a0:	ldr	x8, [x22, #24]
     4a4:	add	x0, x8, #0x8
     4a8:	str	x0, [x22, #24]
     4ac:	ldr	x8, [x22, #16]
     4b0:	ldp	x1, x24, [x19]
     4b4:	sub	x8, x8, x0
     4b8:	cmp	x24, x8
     4bc:	b.ls	4d8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x4d8>  // b.plast
     4c0:	mov	x0, x22
     4c4:	mov	x2, x24
     4c8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     4cc:	mov	x22, x0
     4d0:	ldr	x0, [x0, #24]
     4d4:	b	4f0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x4f0>
     4d8:	cbz	x24, 4f0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x4f0>
     4dc:	mov	x2, x24
     4e0:	bl	0 <memcpy>
     4e4:	ldr	x8, [x22, #24]
     4e8:	add	x0, x8, x24
     4ec:	str	x0, [x22, #24]
     4f0:	ldr	x8, [x22, #16]
     4f4:	cmp	x8, x0
     4f8:	b.ne	518 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x518>  // b.any
     4fc:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     500:	add	x1, x1, #0x0
     504:	mov	w2, #0x1                   	// #1
     508:	mov	x0, x22
     50c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     510:	mov	x22, x0
     514:	b	52c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x52c>
     518:	mov	w8, #0x5b                  	// #91
     51c:	strb	w8, [x0]
     520:	ldr	x8, [x22, #24]
     524:	add	x8, x8, #0x1
     528:	str	x8, [x22, #24]
     52c:	mov	x0, x22
     530:	mov	x1, x23
     534:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     538:	ldp	x9, x8, [x0, #16]
     53c:	sub	x9, x9, x8
     540:	cmp	x9, #0x4
     544:	b.hi	55c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x55c>  // b.pmore
     548:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     54c:	add	x1, x1, #0x0
     550:	mov	w2, #0x5                   	// #5
     554:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     558:	b	57c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x57c>
     55c:	mov	w10, #0x295d                	// #10589
     560:	mov	w9, #0xa                   	// #10
     564:	movk	w10, #0x7b20, lsl #16
     568:	strb	w9, [x8, #4]
     56c:	str	w10, [x8]
     570:	ldr	x8, [x0, #24]
     574:	add	x8, x8, #0x5
     578:	str	x8, [x0, #24]
     57c:	ldr	x0, [x19, #24]
     580:	ldp	x1, x2, [x29, #-40]
     584:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     588:	ldp	x9, x8, [x0, #16]
     58c:	sub	x9, x9, x8
     590:	cmp	x9, #0xf
     594:	b.hi	5ac <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x5ac>  // b.pmore
     598:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     59c:	add	x1, x1, #0x0
     5a0:	mov	w2, #0x10                  	// #16
     5a4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     5a8:	b	5c8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x5c8>
     5ac:	adrp	x9, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     5b0:	add	x9, x9, #0x0
     5b4:	ldr	q0, [x9]
     5b8:	str	q0, [x8]
     5bc:	ldr	x8, [x0, #24]
     5c0:	add	x8, x8, #0x10
     5c4:	str	x8, [x0, #24]
     5c8:	ldr	x0, [x19, #24]
     5cc:	ldp	x1, x2, [x29, #-40]
     5d0:	ldr	x24, [sp, #72]
     5d4:	str	x28, [sp]
     5d8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     5dc:	mov	x8, x0
     5e0:	ldr	x10, [x0, #16]
     5e4:	ldr	x9, [x8, #24]!
     5e8:	cmp	x24, x25
     5ec:	sub	x10, x10, x9
     5f0:	b.eq	838 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x838>  // b.none
     5f4:	adrp	x27, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     5f8:	mov	w28, #0x3a27                	// #14887
     5fc:	mov	w20, #0x6163                	// #24931
     600:	add	w23, w26, #0x1
     604:	add	w21, w21, #0x1
     608:	add	x27, x27, #0x0
     60c:	movk	w28, #0x2009, lsl #16
     610:	mov	w26, #0x2720                	// #10016
     614:	movk	w20, #0x6573, lsl #16
     618:	b	674 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x674>
     61c:	adrp	x9, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     620:	add	x9, x9, #0x0
     624:	ldr	x9, [x9]
     628:	mov	w10, #0xa                   	// #10
     62c:	strb	w10, [x8, #8]
     630:	str	x9, [x8]
     634:	ldr	x8, [x0, #24]
     638:	add	x8, x8, #0x9
     63c:	str	x8, [x0, #24]
     640:	mov	x0, x24
     644:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
     648:	ldr	x8, [x19, #24]
     64c:	ldp	x1, x2, [x29, #-40]
     650:	mov	x24, x0
     654:	mov	x0, x8
     658:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     65c:	mov	x8, x0
     660:	ldr	x10, [x0, #16]
     664:	ldr	x9, [x8, #24]!
     668:	cmp	x24, x25
     66c:	sub	x10, x10, x9
     670:	b.eq	838 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x838>  // b.none
     674:	cmp	x10, #0x5
     678:	b.hi	690 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x690>  // b.pmore
     67c:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     680:	mov	w2, #0x6                   	// #6
     684:	add	x1, x1, #0x0
     688:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     68c:	b	6a4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x6a4>
     690:	strh	w26, [x9, #4]
     694:	str	w20, [x9]
     698:	ldr	x9, [x8]
     69c:	add	x9, x9, #0x6
     6a0:	str	x9, [x8]
     6a4:	ldp	x9, x8, [x0, #16]
     6a8:	ldrb	w1, [x24, #32]
     6ac:	cmp	x8, x9
     6b0:	b.cs	6c4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x6c4>  // b.hs, b.nlast
     6b4:	add	x9, x8, #0x1
     6b8:	str	x9, [x0, #24]
     6bc:	strb	w1, [x8]
     6c0:	b	6c8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x6c8>
     6c4:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     6c8:	ldp	x9, x8, [x0, #16]
     6cc:	sub	x9, x9, x8
     6d0:	cmp	x9, #0x6
     6d4:	b.hi	6ec <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x6ec>  // b.pmore
     6d8:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     6dc:	mov	w2, #0x7                   	// #7
     6e0:	add	x1, x1, #0x0
     6e4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     6e8:	b	708 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x708>
     6ec:	mov	w9, #0x2f20                	// #12064
     6f0:	movk	w9, #0x202f, lsl #16
     6f4:	stur	w9, [x8, #3]
     6f8:	str	w28, [x8]
     6fc:	ldr	x8, [x0, #24]
     700:	add	x8, x8, #0x7
     704:	str	x8, [x0, #24]
     708:	mov	x22, x24
     70c:	ldr	x8, [x22, #40]!
     710:	ldr	x9, [x22, #8]
     714:	sub	x8, x9, x8
     718:	asr	x1, x8, #3
     71c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     720:	ldp	x9, x8, [x0, #16]
     724:	sub	x9, x9, x8
     728:	cmp	x9, #0x6
     72c:	b.hi	744 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x744>  // b.pmore
     730:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     734:	mov	w2, #0x7                   	// #7
     738:	add	x1, x1, #0x0
     73c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     740:	b	768 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x768>
     744:	mov	w9, #0x6972                	// #26994
     748:	movk	w9, #0x676e, lsl #16
     74c:	stur	w9, [x8, #3]
     750:	mov	w9, #0x7320                	// #29472
     754:	movk	w9, #0x7274, lsl #16
     758:	str	w9, [x8]
     75c:	ldr	x8, [x0, #24]
     760:	add	x8, x8, #0x7
     764:	str	x8, [x0, #24]
     768:	ldp	x9, x8, [x22]
     76c:	sub	x8, x8, x9
     770:	cmp	x8, #0x8
     774:	b.eq	7a4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x7a4>  // b.none
     778:	ldr	x0, [x19, #24]
     77c:	ldp	x9, x8, [x0, #16]
     780:	cmp	x8, x9
     784:	b.cs	79c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x79c>  // b.hs, b.nlast
     788:	add	x9, x8, #0x1
     78c:	str	x9, [x0, #24]
     790:	mov	w9, #0x73                  	// #115
     794:	strb	w9, [x8]
     798:	b	7a4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x7a4>
     79c:	mov	w1, #0x73                  	// #115
     7a0:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     7a4:	ldr	x0, [x19, #24]
     7a8:	ldp	x9, x8, [x0, #16]
     7ac:	sub	x9, x9, x8
     7b0:	cmp	x9, #0xa
     7b4:	b.hi	7c8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x7c8>  // b.pmore
     7b8:	mov	w2, #0xb                   	// #11
     7bc:	mov	x1, x27
     7c0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     7c4:	b	7e8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x7e8>
     7c8:	ldr	x9, [x27]
     7cc:	mov	w10, #0x6863                	// #26723
     7d0:	movk	w10, #0xa2e, lsl #16
     7d4:	stur	w10, [x8, #7]
     7d8:	str	x9, [x8]
     7dc:	ldr	x8, [x0, #24]
     7e0:	add	x8, x8, #0xb
     7e4:	str	x8, [x0, #24]
     7e8:	ldr	w8, [sp, #12]
     7ec:	mov	x0, x19
     7f0:	mov	x1, x22
     7f4:	mov	w2, w23
     7f8:	and	w4, w8, #0x1
     7fc:	mov	w3, w21
     800:	bl	0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     804:	tbz	w0, #0, 640 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x640>
     808:	ldr	x0, [x19, #24]
     80c:	ldp	x1, x2, [x29, #-40]
     810:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     814:	ldp	x9, x8, [x0, #16]
     818:	sub	x9, x9, x8
     81c:	cmp	x9, #0x8
     820:	b.hi	61c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x61c>  // b.pmore
     824:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     828:	mov	w2, #0x9                   	// #9
     82c:	add	x1, x1, #0x0
     830:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     834:	b	640 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x640>
     838:	cmp	x10, #0x1
     83c:	b.hi	854 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x854>  // b.pmore
     840:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     844:	add	x1, x1, #0x0
     848:	mov	w2, #0x2                   	// #2
     84c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     850:	b	868 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x868>
     854:	mov	w10, #0xa7d                 	// #2685
     858:	strh	w10, [x9]
     85c:	ldr	x9, [x8]
     860:	add	x9, x9, #0x2
     864:	str	x9, [x8]
     868:	ldr	x28, [sp]
     86c:	mov	w19, #0x1                   	// #1
     870:	b	ca8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xca8>
     874:	mov	w24, w9
     878:	ldr	x0, [x19, #24]
     87c:	ldp	x1, x2, [x29, #-40]
     880:	sub	w20, w24, w26
     884:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     888:	ldp	x9, x8, [x0, #16]
     88c:	mov	x25, x0
     890:	cmp	w20, #0x1
     894:	sub	x9, x9, x8
     898:	b.ne	8c4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x8c4>  // b.any
     89c:	cmp	x9, #0x3
     8a0:	b.hi	8ec <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x8ec>  // b.pmore
     8a4:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     8a8:	add	x1, x1, #0x0
     8ac:	mov	w2, #0x4                   	// #4
     8b0:	mov	x0, x25
     8b4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     8b8:	mov	x25, x0
     8bc:	ldr	x0, [x0, #24]
     8c0:	b	904 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x904>
     8c4:	cmp	x9, #0xa
     8c8:	b.hi	930 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x930>  // b.pmore
     8cc:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     8d0:	add	x1, x1, #0x0
     8d4:	mov	w2, #0xb                   	// #11
     8d8:	mov	x0, x25
     8dc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     8e0:	mov	x25, x0
     8e4:	ldr	x0, [x0, #24]
     8e8:	b	958 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x958>
     8ec:	mov	w9, #0x6669                	// #26217
     8f0:	movk	w9, #0x2820, lsl #16
     8f4:	str	w9, [x8]
     8f8:	ldr	x8, [x25, #24]
     8fc:	add	x0, x8, #0x4
     900:	str	x0, [x25, #24]
     904:	ldr	x8, [x25, #16]
     908:	ldp	x1, x26, [x19]
     90c:	sub	x8, x8, x0
     910:	cmp	x26, x8
     914:	b.ls	984 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x984>  // b.plast
     918:	mov	x0, x25
     91c:	mov	x2, x26
     920:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     924:	mov	x25, x0
     928:	ldr	x0, [x0, #24]
     92c:	b	99c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x99c>
     930:	adrp	x9, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     934:	add	x9, x9, #0x0
     938:	ldr	x9, [x9]
     93c:	mov	w10, #0x6d63                	// #28003
     940:	movk	w10, #0x2870, lsl #16
     944:	stur	w10, [x8, #7]
     948:	str	x9, [x8]
     94c:	ldr	x8, [x25, #24]
     950:	add	x0, x8, #0xb
     954:	str	x0, [x25, #24]
     958:	ldr	x8, [x25, #16]
     95c:	ldp	x1, x26, [x19]
     960:	sub	x8, x8, x0
     964:	cmp	x26, x8
     968:	b.ls	9c4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x9c4>  // b.plast
     96c:	mov	x0, x25
     970:	mov	x2, x26
     974:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     978:	mov	x25, x0
     97c:	ldr	x0, [x0, #24]
     980:	b	9dc <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x9dc>
     984:	cbz	x26, 99c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x99c>
     988:	mov	x2, x26
     98c:	bl	0 <memcpy>
     990:	ldr	x8, [x25, #24]
     994:	add	x0, x8, x26
     998:	str	x0, [x25, #24]
     99c:	ldr	x8, [x25, #16]
     9a0:	cmp	x8, x0
     9a4:	b.ne	a08 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xa08>  // b.any
     9a8:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     9ac:	add	x1, x1, #0x0
     9b0:	mov	w2, #0x1                   	// #1
     9b4:	mov	x0, x25
     9b8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     9bc:	mov	x25, x0
     9c0:	b	a1c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xa1c>
     9c4:	cbz	x26, 9dc <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x9dc>
     9c8:	mov	x2, x26
     9cc:	bl	0 <memcpy>
     9d0:	ldr	x8, [x25, #24]
     9d4:	add	x0, x8, x26
     9d8:	str	x0, [x25, #24]
     9dc:	ldr	x8, [x25, #16]
     9e0:	sub	x8, x8, x0
     9e4:	cmp	x8, #0x7
     9e8:	b.hi	a50 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xa50>  // b.pmore
     9ec:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     9f0:	add	x1, x1, #0x0
     9f4:	mov	w2, #0x8                   	// #8
     9f8:	mov	x0, x25
     9fc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     a00:	mov	x25, x0
     a04:	b	a70 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xa70>
     a08:	mov	w8, #0x5b                  	// #91
     a0c:	strb	w8, [x0]
     a10:	ldr	x8, [x25, #24]
     a14:	add	x8, x8, #0x1
     a18:	str	x8, [x25, #24]
     a1c:	mov	x0, x25
     a20:	mov	x1, x23
     a24:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     a28:	ldp	x9, x8, [x0, #16]
     a2c:	sub	x9, x9, x8
     a30:	cmp	x9, #0x5
     a34:	b.hi	aac <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xaac>  // b.pmore
     a38:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     a3c:	add	x1, x1, #0x0
     a40:	mov	w2, #0x6                   	// #6
     a44:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     a48:	ldr	x8, [x0, #24]
     a4c:	b	acc <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xacc>
     a50:	mov	x8, #0x642e                	// #25646
     a54:	movk	x8, #0x7461, lsl #16
     a58:	movk	x8, #0x2861, lsl #32
     a5c:	movk	x8, #0x2b29, lsl #48
     a60:	str	x8, [x0]
     a64:	ldr	x8, [x25, #24]
     a68:	add	x8, x8, #0x8
     a6c:	str	x8, [x25, #24]
     a70:	mov	x0, x25
     a74:	mov	x1, x23
     a78:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     a7c:	ldp	x9, x8, [x0, #16]
     a80:	mov	x26, x0
     a84:	sub	x9, x9, x8
     a88:	cmp	x9, #0x2
     a8c:	b.hi	af8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xaf8>  // b.pmore
     a90:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     a94:	add	x1, x1, #0x0
     a98:	mov	w2, #0x3                   	// #3
     a9c:	mov	x0, x26
     aa0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     aa4:	mov	x26, x0
     aa8:	b	b14 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xb14>
     aac:	mov	w10, #0x205d                	// #8285
     ab0:	mov	w9, #0x2720                	// #10016
     ab4:	movk	w10, #0x3d21, lsl #16
     ab8:	strh	w9, [x8, #4]
     abc:	str	w10, [x8]
     ac0:	ldr	x8, [x0, #24]
     ac4:	add	x8, x8, #0x6
     ac8:	str	x8, [x0, #24]
     acc:	ldr	x9, [x22]
     ad0:	ldr	x10, [x0, #16]
     ad4:	ldr	x9, [x9]
     ad8:	cmp	x8, x10
     adc:	ldr	x9, [x9]
     ae0:	ldrb	w1, [x9, x23]
     ae4:	b.cs	b6c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xb6c>  // b.hs, b.nlast
     ae8:	add	x9, x8, #0x1
     aec:	str	x9, [x0, #24]
     af0:	strb	w1, [x8]
     af4:	b	b70 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xb70>
     af8:	mov	w9, #0x22                  	// #34
     afc:	mov	w10, #0x202c                	// #8236
     b00:	strb	w9, [x8, #2]
     b04:	strh	w10, [x8]
     b08:	ldr	x8, [x26, #24]
     b0c:	add	x8, x8, #0x3
     b10:	str	x8, [x26, #24]
     b14:	ldr	x8, [x22]
     b18:	ldr	x1, [x8]
     b1c:	ldr	x3, [x1, #8]
     b20:	cmp	x3, x23
     b24:	b.cc	d38 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xd38>  // b.lo, b.ul, b.last
     b28:	mov	w25, w20
     b2c:	add	x0, sp, #0x10
     b30:	mov	x2, x23
     b34:	mov	x3, x25
     b38:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_mm>
     b3c:	ldp	x1, x2, [sp, #16]
     b40:	mov	x0, x26
     b44:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     b48:	ldp	x9, x8, [x0, #16]
     b4c:	sub	x9, x9, x8
     b50:	cmp	x9, #0x2
     b54:	b.hi	bb4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xbb4>  // b.pmore
     b58:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     b5c:	add	x1, x1, #0x0
     b60:	mov	w2, #0x3                   	// #3
     b64:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     b68:	b	bd0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xbd0>
     b6c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     b70:	ldp	x9, x8, [x0, #16]
     b74:	sub	x9, x9, x8
     b78:	cmp	x9, #0x2
     b7c:	b.hi	b94 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xb94>  // b.pmore
     b80:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     b84:	add	x1, x1, #0x0
     b88:	mov	w2, #0x3                   	// #3
     b8c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     b90:	b	c34 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xc34>
     b94:	mov	w9, #0xa                   	// #10
     b98:	mov	w10, #0x2927                	// #10535
     b9c:	strb	w9, [x8, #2]
     ba0:	strh	w10, [x8]
     ba4:	ldr	x8, [x0, #24]
     ba8:	add	x8, x8, #0x3
     bac:	str	x8, [x0, #24]
     bb0:	b	c34 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xc34>
     bb4:	mov	w9, #0x20                  	// #32
     bb8:	mov	w10, #0x2c22                	// #11298
     bbc:	strb	w9, [x8, #2]
     bc0:	strh	w10, [x8]
     bc4:	ldr	x8, [x0, #24]
     bc8:	add	x8, x8, #0x3
     bcc:	str	x8, [x0, #24]
     bd0:	mov	x1, x25
     bd4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     bd8:	ldp	x9, x8, [x0, #16]
     bdc:	sub	x9, x9, x8
     be0:	cmp	x9, #0x7
     be4:	b.hi	bfc <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xbfc>  // b.pmore
     be8:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     bec:	add	x1, x1, #0x0
     bf0:	mov	w2, #0x8                   	// #8
     bf4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     bf8:	b	c1c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xc1c>
     bfc:	mov	x9, #0x2029                	// #8233
     c00:	movk	x9, #0x3d21, lsl #16
     c04:	movk	x9, #0x3020, lsl #32
     c08:	movk	x9, #0xa29, lsl #48
     c0c:	str	x9, [x8]
     c10:	ldr	x8, [x0, #24]
     c14:	add	x8, x8, #0x8
     c18:	str	x8, [x0, #24]
     c1c:	ldr	x0, [sp, #16]
     c20:	add	x8, sp, #0x10
     c24:	add	x8, x8, #0x10
     c28:	cmp	x0, x8
     c2c:	b.eq	c34 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xc34>  // b.none
     c30:	bl	0 <_ZdlPv>
     c34:	ldr	x0, [x19, #24]
     c38:	ldp	x1, x2, [x29, #-40]
     c3c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     c40:	ldp	x9, x8, [x0, #16]
     c44:	sub	x9, x9, x8
     c48:	cmp	x9, #0x8
     c4c:	b.hi	c64 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xc64>  // b.pmore
     c50:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     c54:	add	x1, x1, #0x0
     c58:	mov	w2, #0x9                   	// #9
     c5c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     c60:	b	c88 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xc88>
     c64:	adrp	x9, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     c68:	add	x9, x9, #0x0
     c6c:	ldr	x9, [x9]
     c70:	mov	w10, #0xa                   	// #10
     c74:	strb	w10, [x8, #8]
     c78:	str	x9, [x8]
     c7c:	ldr	x8, [x0, #24]
     c80:	add	x8, x8, #0x9
     c84:	str	x8, [x0, #24]
     c88:	ldr	w8, [sp, #12]
     c8c:	mov	x0, x19
     c90:	mov	x1, x22
     c94:	mov	w2, w24
     c98:	and	w4, w8, #0x1
     c9c:	mov	w3, w21
     ca0:	bl	0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     ca4:	mov	w19, w0
     ca8:	ldr	x1, [sp, #64]
     cac:	add	x0, sp, #0x30
     cb0:	bl	0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     cb4:	ldur	x0, [x29, #-40]
     cb8:	cmp	x0, x28
     cbc:	b.eq	cc4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xcc4>  // b.none
     cc0:	bl	0 <_ZdlPv>
     cc4:	and	w0, w19, #0x1
     cc8:	ldp	x20, x19, [sp, #224]
     ccc:	ldp	x22, x21, [sp, #208]
     cd0:	ldp	x24, x23, [sp, #192]
     cd4:	ldp	x26, x25, [sp, #176]
     cd8:	ldp	x28, x27, [sp, #160]
     cdc:	ldp	x29, x30, [sp, #144]
     ce0:	add	sp, sp, #0xf0
     ce4:	ret
     ce8:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     cec:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     cf0:	adrp	x3, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     cf4:	add	x0, x0, #0x0
     cf8:	add	x1, x1, #0x0
     cfc:	add	x3, x3, #0x0
     d00:	mov	w2, #0x33                  	// #51
     d04:	bl	0 <__assert_fail>
     d08:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     d0c:	add	x0, x0, #0x0
     d10:	mov	w1, #0x1                   	// #1
     d14:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
     d18:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     d1c:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     d20:	adrp	x3, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     d24:	add	x0, x0, #0x0
     d28:	add	x1, x1, #0x0
     d2c:	add	x3, x3, #0x0
     d30:	mov	w2, #0x1e                  	// #30
     d34:	bl	0 <__assert_fail>
     d38:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     d3c:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     d40:	add	x0, x0, #0x0
     d44:	add	x1, x1, #0x0
     d48:	mov	x2, x23
     d4c:	bl	0 <_ZSt24__throw_out_of_range_fmtPKcz>

0000000000000d50 <_ZNK4llvm13StringMatcher4EmitEjb>:
     d50:	sub	sp, sp, #0xc0
     d54:	stp	x29, x30, [sp, #96]
     d58:	stp	x28, x27, [sp, #112]
     d5c:	stp	x26, x25, [sp, #128]
     d60:	stp	x24, x23, [sp, #144]
     d64:	stp	x22, x21, [sp, #160]
     d68:	stp	x20, x19, [sp, #176]
     d6c:	add	x29, sp, #0x60
     d70:	ldr	x9, [x0, #16]
     d74:	ldp	x8, x9, [x9]
     d78:	str	w1, [sp, #24]
     d7c:	cmp	x8, x9
     d80:	b.eq	1348 <_ZNK4llvm13StringMatcher4EmitEjb+0x5f8>  // b.none
     d84:	add	x11, sp, #0x20
     d88:	sub	x10, x9, x8
     d8c:	mov	x19, x0
     d90:	add	x20, x11, #0x8
     d94:	lsr	x9, x10, #6
     d98:	str	w2, [sp, #4]
     d9c:	str	wzr, [sp, #40]
     da0:	stp	xzr, x20, [sp, #48]
     da4:	stp	x20, xzr, [sp, #64]
     da8:	cbz	w9, f38 <_ZNK4llvm13StringMatcher4EmitEjb+0x1e8>
     dac:	adrp	x25, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     db0:	mov	x9, xzr
     db4:	mov	x27, xzr
     db8:	ubfx	x21, x10, #6, #32
     dbc:	add	x24, sp, #0x1c
     dc0:	add	x25, x25, #0x0
     dc4:	stp	x21, x20, [sp, #8]
     dc8:	add	x10, x8, x27, lsl #6
     dcc:	ldr	w10, [x10, #8]
     dd0:	str	w10, [sp, #28]
     dd4:	cbz	x9, e14 <_ZNK4llvm13StringMatcher4EmitEjb+0xc4>
     dd8:	mov	x23, x20
     ddc:	ldr	w11, [x9, #32]
     de0:	add	x12, x9, #0x18
     de4:	add	x13, x9, #0x10
     de8:	cmp	w11, w10
     dec:	csel	x23, x23, x9, cc  // cc = lo, ul, last
     df0:	csel	x9, x12, x13, cc  // cc = lo, ul, last
     df4:	ldr	x9, [x9]
     df8:	cbnz	x9, ddc <_ZNK4llvm13StringMatcher4EmitEjb+0x8c>
     dfc:	cmp	x23, x20
     e00:	b.eq	e18 <_ZNK4llvm13StringMatcher4EmitEjb+0xc8>  // b.none
     e04:	ldr	w9, [x23, #32]
     e08:	cmp	w9, w10
     e0c:	b.hi	e18 <_ZNK4llvm13StringMatcher4EmitEjb+0xc8>  // b.pmore
     e10:	b	e40 <_ZNK4llvm13StringMatcher4EmitEjb+0xf0>
     e14:	mov	x23, x20
     e18:	add	x0, sp, #0x20
     e1c:	sub	x3, x29, #0x8
     e20:	sub	x4, x29, #0x10
     e24:	mov	x1, x23
     e28:	mov	x2, x25
     e2c:	stur	x24, [x29, #-8]
     e30:	bl	0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     e34:	ldr	x8, [x19, #16]
     e38:	mov	x23, x0
     e3c:	ldr	x8, [x8]
     e40:	mov	x22, x23
     e44:	ldr	x11, [x22, #56]!
     e48:	add	x20, x8, x27, lsl #6
     e4c:	mov	x9, x22
     e50:	ldr	x10, [x9, #-8]!
     e54:	cmp	x10, x11
     e58:	b.eq	e70 <_ZNK4llvm13StringMatcher4EmitEjb+0x120>  // b.none
     e5c:	str	x20, [x10]
     e60:	ldr	x8, [x9]
     e64:	mov	x22, x9
     e68:	add	x8, x8, #0x8
     e6c:	b	f14 <_ZNK4llvm13StringMatcher4EmitEjb+0x1c4>
     e70:	ldr	x24, [x23, #40]
     e74:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
     e78:	sub	x25, x10, x24
     e7c:	cmp	x25, x8
     e80:	b.eq	1368 <_ZNK4llvm13StringMatcher4EmitEjb+0x618>  // b.none
     e84:	asr	x28, x25, #3
     e88:	cmp	x25, #0x0
     e8c:	csinc	x8, x28, xzr, ne  // ne = any
     e90:	adds	x8, x8, x28
     e94:	lsr	x10, x8, #60
     e98:	cset	w9, cs  // cs = hs, nlast
     e9c:	cmp	x10, #0x0
     ea0:	cset	w10, ne  // ne = any
     ea4:	orr	w9, w9, w10
     ea8:	cmp	w9, #0x0
     eac:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
     eb0:	csel	x21, x9, x8, ne  // ne = any
     eb4:	cbz	x21, ec8 <_ZNK4llvm13StringMatcher4EmitEjb+0x178>
     eb8:	lsl	x0, x21, #3
     ebc:	bl	0 <_Znwm>
     ec0:	mov	x26, x0
     ec4:	b	ecc <_ZNK4llvm13StringMatcher4EmitEjb+0x17c>
     ec8:	mov	x26, xzr
     ecc:	add	x28, x26, x28, lsl #3
     ed0:	cmp	x25, #0x1
     ed4:	str	x20, [x28]
     ed8:	b.lt	eec <_ZNK4llvm13StringMatcher4EmitEjb+0x19c>  // b.tstop
     edc:	mov	x0, x26
     ee0:	mov	x1, x24
     ee4:	mov	x2, x25
     ee8:	bl	0 <memmove>
     eec:	add	x20, x28, #0x8
     ef0:	cbz	x24, efc <_ZNK4llvm13StringMatcher4EmitEjb+0x1ac>
     ef4:	mov	x0, x24
     ef8:	bl	0 <_ZdlPv>
     efc:	stp	x26, x20, [x23, #40]
     f00:	add	x8, x26, x21, lsl #3
     f04:	ldr	x21, [sp, #8]
     f08:	adrp	x25, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     f0c:	add	x24, sp, #0x1c
     f10:	add	x25, x25, #0x0
     f14:	ldr	x20, [sp, #16]
     f18:	add	x27, x27, #0x1
     f1c:	cmp	x27, x21
     f20:	str	x8, [x22]
     f24:	b.eq	f38 <_ZNK4llvm13StringMatcher4EmitEjb+0x1e8>  // b.none
     f28:	ldr	x8, [x19, #16]
     f2c:	ldr	x9, [sp, #48]
     f30:	ldr	x8, [x8]
     f34:	b	dc8 <_ZNK4llvm13StringMatcher4EmitEjb+0x78>
     f38:	ldr	w8, [sp, #24]
     f3c:	ldr	x0, [x19, #24]
     f40:	lsl	w22, w8, #1
     f44:	add	w21, w22, #0x2
     f48:	mov	w1, w21
     f4c:	bl	0 <_ZN4llvm11raw_ostream6indentEj>
     f50:	ldp	x9, x8, [x0, #16]
     f54:	mov	x23, x0
     f58:	sub	x9, x9, x8
     f5c:	cmp	x9, #0x7
     f60:	b.hi	f84 <_ZNK4llvm13StringMatcher4EmitEjb+0x234>  // b.pmore
     f64:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     f68:	add	x1, x1, #0x0
     f6c:	mov	w2, #0x8                   	// #8
     f70:	mov	x0, x23
     f74:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     f78:	mov	x23, x0
     f7c:	ldr	x0, [x0, #24]
     f80:	b	fa4 <_ZNK4llvm13StringMatcher4EmitEjb+0x254>
     f84:	mov	x9, #0x7773                	// #30579
     f88:	movk	x9, #0x7469, lsl #16
     f8c:	movk	x9, #0x6863, lsl #32
     f90:	movk	x9, #0x2820, lsl #48
     f94:	str	x9, [x8]
     f98:	ldr	x8, [x23, #24]
     f9c:	add	x0, x8, #0x8
     fa0:	str	x0, [x23, #24]
     fa4:	ldr	x8, [x23, #16]
     fa8:	ldp	x1, x24, [x19]
     fac:	sub	x8, x8, x0
     fb0:	cmp	x24, x8
     fb4:	b.ls	fd0 <_ZNK4llvm13StringMatcher4EmitEjb+0x280>  // b.plast
     fb8:	mov	x0, x23
     fbc:	mov	x2, x24
     fc0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     fc4:	mov	x23, x0
     fc8:	ldr	x0, [x0, #24]
     fcc:	b	fe8 <_ZNK4llvm13StringMatcher4EmitEjb+0x298>
     fd0:	cbz	x24, fe8 <_ZNK4llvm13StringMatcher4EmitEjb+0x298>
     fd4:	mov	x2, x24
     fd8:	bl	0 <memcpy>
     fdc:	ldr	x8, [x23, #24]
     fe0:	add	x0, x8, x24
     fe4:	str	x0, [x23, #24]
     fe8:	ldr	x8, [x23, #16]
     fec:	sub	x8, x8, x0
     ff0:	cmp	x8, #0xa
     ff4:	b.hi	1010 <_ZNK4llvm13StringMatcher4EmitEjb+0x2c0>  // b.pmore
     ff8:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     ffc:	add	x1, x1, #0x0
    1000:	mov	w2, #0xb                   	// #11
    1004:	mov	x0, x23
    1008:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    100c:	b	1038 <_ZNK4llvm13StringMatcher4EmitEjb+0x2e8>
    1010:	adrp	x8, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    1014:	add	x8, x8, #0x0
    1018:	ldr	x8, [x8]
    101c:	mov	w9, #0x2029                	// #8233
    1020:	movk	w9, #0xa7b, lsl #16
    1024:	stur	w9, [x0, #7]
    1028:	str	x8, [x0]
    102c:	ldr	x8, [x23, #24]
    1030:	add	x8, x8, #0xb
    1034:	str	x8, [x23, #24]
    1038:	ldr	x0, [x19, #24]
    103c:	mov	w1, w21
    1040:	bl	0 <_ZN4llvm11raw_ostream6indentEj>
    1044:	ldp	x9, x8, [x0, #16]
    1048:	sub	x9, x9, x8
    104c:	cmp	x9, #0xf
    1050:	b.hi	1068 <_ZNK4llvm13StringMatcher4EmitEjb+0x318>  // b.pmore
    1054:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    1058:	add	x1, x1, #0x0
    105c:	mov	w2, #0x10                  	// #16
    1060:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1064:	b	1084 <_ZNK4llvm13StringMatcher4EmitEjb+0x334>
    1068:	adrp	x9, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    106c:	add	x9, x9, #0x0
    1070:	ldr	q0, [x9]
    1074:	str	q0, [x8]
    1078:	ldr	x8, [x0, #24]
    107c:	add	x8, x8, #0x10
    1080:	str	x8, [x0, #24]
    1084:	ldr	x0, [x19, #24]
    1088:	ldr	x25, [sp, #56]
    108c:	mov	w1, w21
    1090:	bl	0 <_ZN4llvm11raw_ostream6indentEj>
    1094:	mov	x8, x0
    1098:	ldr	x10, [x0, #16]
    109c:	ldr	x9, [x8, #24]!
    10a0:	cmp	x25, x20
    10a4:	sub	x10, x10, x9
    10a8:	b.eq	130c <_ZNK4llvm13StringMatcher4EmitEjb+0x5bc>  // b.none
    10ac:	ldr	w11, [sp, #4]
    10b0:	adrp	x28, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    10b4:	add	w24, w22, #0x4
    10b8:	add	x28, x28, #0x0
    10bc:	and	w22, w11, #0x1
    10c0:	b	111c <_ZNK4llvm13StringMatcher4EmitEjb+0x3cc>
    10c4:	mov	w9, #0x6b61                	// #27489
    10c8:	movk	w9, #0xa3b, lsl #16
    10cc:	stur	w9, [x8, #3]
    10d0:	mov	w9, #0x7262                	// #29282
    10d4:	movk	w9, #0x6165, lsl #16
    10d8:	str	w9, [x8]
    10dc:	ldr	x8, [x0, #24]
    10e0:	add	x8, x8, #0x7
    10e4:	str	x8, [x0, #24]
    10e8:	mov	x0, x25
    10ec:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
    10f0:	ldr	x8, [x19, #24]
    10f4:	mov	x25, x0
    10f8:	mov	w1, w21
    10fc:	mov	x0, x8
    1100:	bl	0 <_ZN4llvm11raw_ostream6indentEj>
    1104:	mov	x8, x0
    1108:	ldr	x10, [x0, #16]
    110c:	ldr	x9, [x8, #24]!
    1110:	cmp	x25, x20
    1114:	sub	x10, x10, x9
    1118:	b.eq	130c <_ZNK4llvm13StringMatcher4EmitEjb+0x5bc>  // b.none
    111c:	cmp	x10, #0x4
    1120:	b.hi	1138 <_ZNK4llvm13StringMatcher4EmitEjb+0x3e8>  // b.pmore
    1124:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    1128:	mov	w2, #0x5                   	// #5
    112c:	add	x1, x1, #0x0
    1130:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1134:	b	1158 <_ZNK4llvm13StringMatcher4EmitEjb+0x408>
    1138:	mov	w10, #0x20                  	// #32
    113c:	strb	w10, [x9, #4]
    1140:	mov	w10, #0x6163                	// #24931
    1144:	movk	w10, #0x6573, lsl #16
    1148:	str	w10, [x9]
    114c:	ldr	x9, [x8]
    1150:	add	x9, x9, #0x5
    1154:	str	x9, [x8]
    1158:	ldr	w1, [x25, #32]
    115c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1160:	ldp	x9, x8, [x0, #16]
    1164:	sub	x9, x9, x8
    1168:	cmp	x9, #0x5
    116c:	b.hi	1184 <_ZNK4llvm13StringMatcher4EmitEjb+0x434>  // b.pmore
    1170:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    1174:	mov	w2, #0x6                   	// #6
    1178:	add	x1, x1, #0x0
    117c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1180:	b	11a4 <_ZNK4llvm13StringMatcher4EmitEjb+0x454>
    1184:	mov	w9, #0x202f                	// #8239
    1188:	strh	w9, [x8, #4]
    118c:	mov	w9, #0x93a                 	// #2362
    1190:	movk	w9, #0x2f20, lsl #16
    1194:	str	w9, [x8]
    1198:	ldr	x8, [x0, #24]
    119c:	add	x8, x8, #0x6
    11a0:	str	x8, [x0, #24]
    11a4:	mov	x23, x25
    11a8:	ldr	x8, [x23, #40]!
    11ac:	ldr	x9, [x23, #8]
    11b0:	sub	x8, x9, x8
    11b4:	asr	x1, x8, #3
    11b8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    11bc:	ldp	x9, x8, [x0, #16]
    11c0:	mov	x26, x0
    11c4:	sub	x9, x9, x8
    11c8:	cmp	x9, #0x6
    11cc:	b.hi	11f0 <_ZNK4llvm13StringMatcher4EmitEjb+0x4a0>  // b.pmore
    11d0:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    11d4:	mov	w2, #0x7                   	// #7
    11d8:	mov	x0, x26
    11dc:	add	x1, x1, #0x0
    11e0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    11e4:	mov	x26, x0
    11e8:	ldr	x0, [x0, #24]
    11ec:	b	1214 <_ZNK4llvm13StringMatcher4EmitEjb+0x4c4>
    11f0:	mov	w9, #0x6972                	// #26994
    11f4:	movk	w9, #0x676e, lsl #16
    11f8:	stur	w9, [x8, #3]
    11fc:	mov	w9, #0x7320                	// #29472
    1200:	movk	w9, #0x7274, lsl #16
    1204:	str	w9, [x8]
    1208:	ldr	x8, [x26, #24]
    120c:	add	x0, x8, #0x7
    1210:	str	x0, [x26, #24]
    1214:	ldp	x9, x8, [x23]
    1218:	ldr	x10, [x26, #16]
    121c:	adrp	x11, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    1220:	add	x11, x11, #0x0
    1224:	sub	x8, x8, x9
    1228:	adrp	x9, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    122c:	cmp	x8, #0x8
    1230:	add	x9, x9, #0x0
    1234:	cset	w27, ne  // ne = any
    1238:	csel	x1, x11, x9, eq  // eq = none
    123c:	sub	x9, x10, x0
    1240:	cmp	x9, x27
    1244:	b.cs	1260 <_ZNK4llvm13StringMatcher4EmitEjb+0x510>  // b.hs, b.nlast
    1248:	mov	x0, x26
    124c:	mov	x2, x27
    1250:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1254:	mov	x26, x0
    1258:	ldr	x0, [x0, #24]
    125c:	b	127c <_ZNK4llvm13StringMatcher4EmitEjb+0x52c>
    1260:	cmp	x8, #0x8
    1264:	b.eq	127c <_ZNK4llvm13StringMatcher4EmitEjb+0x52c>  // b.none
    1268:	mov	x2, x27
    126c:	bl	0 <memcpy>
    1270:	ldr	x8, [x26, #24]
    1274:	add	x0, x8, x27
    1278:	str	x0, [x26, #24]
    127c:	ldr	x8, [x26, #16]
    1280:	sub	x8, x8, x0
    1284:	cmp	x8, #0xa
    1288:	b.hi	12a0 <_ZNK4llvm13StringMatcher4EmitEjb+0x550>  // b.pmore
    128c:	mov	w2, #0xb                   	// #11
    1290:	mov	x0, x26
    1294:	mov	x1, x28
    1298:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    129c:	b	12c0 <_ZNK4llvm13StringMatcher4EmitEjb+0x570>
    12a0:	ldr	x8, [x28]
    12a4:	mov	w9, #0x6863                	// #26723
    12a8:	movk	w9, #0xa2e, lsl #16
    12ac:	stur	w9, [x0, #7]
    12b0:	str	x8, [x0]
    12b4:	ldr	x8, [x26, #24]
    12b8:	add	x8, x8, #0xb
    12bc:	str	x8, [x26, #24]
    12c0:	ldr	w3, [sp, #24]
    12c4:	mov	x0, x19
    12c8:	mov	x1, x23
    12cc:	mov	w2, wzr
    12d0:	mov	w4, w22
    12d4:	bl	0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    12d8:	tbz	w0, #0, 10e8 <_ZNK4llvm13StringMatcher4EmitEjb+0x398>
    12dc:	ldr	x0, [x19, #24]
    12e0:	mov	w1, w24
    12e4:	bl	0 <_ZN4llvm11raw_ostream6indentEj>
    12e8:	ldp	x9, x8, [x0, #16]
    12ec:	sub	x9, x9, x8
    12f0:	cmp	x9, #0x6
    12f4:	b.hi	10c4 <_ZNK4llvm13StringMatcher4EmitEjb+0x374>  // b.pmore
    12f8:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    12fc:	mov	w2, #0x7                   	// #7
    1300:	add	x1, x1, #0x0
    1304:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1308:	b	10e8 <_ZNK4llvm13StringMatcher4EmitEjb+0x398>
    130c:	cmp	x10, #0x1
    1310:	b.hi	1328 <_ZNK4llvm13StringMatcher4EmitEjb+0x5d8>  // b.pmore
    1314:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    1318:	add	x1, x1, #0x0
    131c:	mov	w2, #0x2                   	// #2
    1320:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1324:	b	133c <_ZNK4llvm13StringMatcher4EmitEjb+0x5ec>
    1328:	mov	w10, #0xa7d                 	// #2685
    132c:	strh	w10, [x9]
    1330:	ldr	x9, [x8]
    1334:	add	x9, x9, #0x2
    1338:	str	x9, [x8]
    133c:	ldr	x1, [sp, #48]
    1340:	add	x0, sp, #0x20
    1344:	bl	0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    1348:	ldp	x20, x19, [sp, #176]
    134c:	ldp	x22, x21, [sp, #160]
    1350:	ldp	x24, x23, [sp, #144]
    1354:	ldp	x26, x25, [sp, #128]
    1358:	ldp	x28, x27, [sp, #112]
    135c:	ldp	x29, x30, [sp, #96]
    1360:	add	sp, sp, #0xc0
    1364:	ret
    1368:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    136c:	add	x0, x0, #0x0
    1370:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E:

0000000000000000 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 50 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x50>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	b	30 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x30>
  20:	mov	x0, x20
  24:	bl	0 <_ZdlPv>
  28:	mov	x20, x21
  2c:	cbz	x21, 50 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x50>
  30:	ldr	x1, [x20, #24]
  34:	mov	x0, x19
  38:	bl	0 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>
  3c:	ldr	x0, [x20, #40]
  40:	ldr	x21, [x20, #16]
  44:	cbz	x0, 20 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x20>
  48:	bl	0 <_ZdlPv>
  4c:	b	20 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x20>
  50:	ldp	x20, x19, [sp, #32]
  54:	ldr	x21, [sp, #16]
  58:	ldp	x29, x30, [sp], #48
  5c:	ret

Disassembly of section .text._ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E:

0000000000000000 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 50 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x50>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	b	30 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x30>
  20:	mov	x0, x20
  24:	bl	0 <_ZdlPv>
  28:	mov	x20, x21
  2c:	cbz	x21, 50 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x50>
  30:	ldr	x1, [x20, #24]
  34:	mov	x0, x19
  38:	bl	0 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>
  3c:	ldr	x0, [x20, #40]
  40:	ldr	x21, [x20, #16]
  44:	cbz	x0, 20 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x20>
  48:	bl	0 <_ZdlPv>
  4c:	b	20 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x20>
  50:	ldp	x20, x19, [sp, #32]
  54:	ldr	x21, [sp, #16]
  58:	ldp	x29, x30, [sp], #48
  5c:	ret

Disassembly of section .text._ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_:

0000000000000000 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x20, x0
  18:	mov	w0, #0x40                  	// #64
  1c:	mov	x21, x3
  20:	mov	x22, x1
  24:	bl	0 <_Znwm>
  28:	ldr	x8, [x21]
  2c:	mov	x21, x0
  30:	mov	x23, x0
  34:	mov	x19, x0
  38:	ldrb	w8, [x8]
  3c:	mov	x1, x22
  40:	strb	w8, [x21, #32]!
  44:	str	xzr, [x23, #40]!
  48:	stp	xzr, xzr, [x0, #48]
  4c:	mov	x0, x20
  50:	mov	x2, x21
  54:	bl	0 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_>
  58:	mov	x22, x0
  5c:	cbz	x1, 70 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x70>
  60:	mov	x2, x1
  64:	cbz	x22, 88 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x88>
  68:	mov	w0, #0x1                   	// #1
  6c:	b	a4 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0xa4>
  70:	ldr	x0, [x23]
  74:	cbz	x0, 7c <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x7c>
  78:	bl	0 <_ZdlPv>
  7c:	mov	x0, x19
  80:	bl	0 <_ZdlPv>
  84:	b	c0 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0xc0>
  88:	add	x8, x20, #0x8
  8c:	cmp	x8, x2
  90:	b.eq	68 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x68>  // b.none
  94:	ldrb	w8, [x21]
  98:	ldrb	w9, [x2, #32]
  9c:	cmp	w8, w9
  a0:	cset	w0, cc  // cc = lo, ul, last
  a4:	add	x3, x20, #0x8
  a8:	mov	x1, x19
  ac:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  b0:	ldr	x8, [x20, #40]
  b4:	mov	x22, x19
  b8:	add	x8, x8, #0x1
  bc:	str	x8, [x20, #40]
  c0:	mov	x0, x22
  c4:	ldp	x20, x19, [sp, #48]
  c8:	ldp	x22, x21, [sp, #32]
  cc:	ldr	x23, [sp, #16]
  d0:	ldp	x29, x30, [sp], #64
  d4:	ret

Disassembly of section .text._ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_:

0000000000000000 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	add	x23, x0, #0x8
  18:	mov	x20, x1
  1c:	mov	x21, x0
  20:	cmp	x23, x1
  24:	mov	x22, x2
  28:	b.eq	74 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x74>  // b.none
  2c:	ldrb	w22, [x22]
  30:	ldrb	w8, [x20, #32]
  34:	cmp	w22, w8
  38:	b.cs	d0 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0xd0>  // b.hs, b.nlast
  3c:	ldr	x24, [x21, #24]
  40:	cmp	x24, x20
  44:	b.eq	118 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x118>  // b.none
  48:	mov	x0, x20
  4c:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  50:	ldrb	w8, [x0, #32]
  54:	cmp	w8, w22
  58:	b.cs	124 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x124>  // b.hs, b.nlast
  5c:	ldr	x8, [x0, #24]
  60:	cmp	x8, #0x0
  64:	csel	x8, xzr, x20, eq  // eq = none
  68:	csel	x19, x0, x20, eq  // eq = none
  6c:	mov	x20, x8
  70:	b	200 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x200>
  74:	ldr	x8, [x21, #40]
  78:	cbz	x8, 90 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x90>
  7c:	ldr	x19, [x21, #32]
  80:	ldrb	w9, [x22]
  84:	ldrb	w8, [x19, #32]
  88:	cmp	w8, w9
  8c:	b.cc	1d0 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1d0>  // b.lo, b.ul, b.last
  90:	ldr	x9, [x21, #16]
  94:	cbz	x9, 164 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x164>
  98:	ldrb	w8, [x22]
  9c:	ldrb	w10, [x9, #32]
  a0:	mov	x19, x9
  a4:	add	x9, x9, #0x10
  a8:	add	x11, x19, #0x18
  ac:	cmp	w8, w10
  b0:	csel	x9, x9, x11, cc  // cc = lo, ul, last
  b4:	ldr	x9, [x9]
  b8:	cbnz	x9, 9c <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x9c>
  bc:	cmp	w8, w10
  c0:	mov	x20, x19
  c4:	mov	x0, x19
  c8:	b.cc	168 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x168>  // b.lo, b.ul, b.last
  cc:	b	180 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x180>
  d0:	cmp	w8, w22
  d4:	b.cs	110 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x110>  // b.hs, b.nlast
  d8:	ldr	x19, [x21, #32]
  dc:	cmp	x19, x20
  e0:	b.eq	1d0 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1d0>  // b.none
  e4:	mov	x0, x20
  e8:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
  ec:	ldrb	w8, [x0, #32]
  f0:	cmp	w22, w8
  f4:	b.cs	18c <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x18c>  // b.hs, b.nlast
  f8:	ldr	x8, [x20, #24]
  fc:	cmp	x8, #0x0
 100:	csel	x8, xzr, x0, eq  // eq = none
 104:	csel	x19, x20, x0, eq  // eq = none
 108:	mov	x20, x8
 10c:	b	200 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x200>
 110:	mov	x19, xzr
 114:	b	200 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x200>
 118:	mov	x20, x24
 11c:	mov	x19, x24
 120:	b	200 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x200>
 124:	ldr	x9, [x21, #16]
 128:	cbz	x9, 1c4 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1c4>
 12c:	ldrb	w8, [x9, #32]
 130:	mov	x19, x9
 134:	add	x9, x9, #0x10
 138:	add	x10, x19, #0x18
 13c:	cmp	w22, w8
 140:	csel	x9, x9, x10, cc  // cc = lo, ul, last
 144:	ldr	x9, [x9]
 148:	cbnz	x9, 12c <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x12c>
 14c:	cmp	w22, w8
 150:	mov	x0, x19
 154:	b.cs	1f0 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1f0>  // b.hs, b.nlast
 158:	cmp	x24, x19
 15c:	b.ne	1e8 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1e8>  // b.any
 160:	b	1d0 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1d0>
 164:	mov	x19, x23
 168:	ldr	x8, [x21, #24]
 16c:	cmp	x8, x20
 170:	b.eq	1d0 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1d0>  // b.none
 174:	mov	x0, x20
 178:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 17c:	ldrb	w8, [x22]
 180:	ldrb	w9, [x0, #32]
 184:	cmp	w9, w8
 188:	b	1f8 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1f8>
 18c:	ldr	x9, [x21, #16]
 190:	cbz	x9, 1d8 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1d8>
 194:	ldrb	w8, [x9, #32]
 198:	mov	x19, x9
 19c:	add	x9, x9, #0x10
 1a0:	add	x10, x19, #0x18
 1a4:	cmp	w22, w8
 1a8:	csel	x9, x9, x10, cc  // cc = lo, ul, last
 1ac:	ldr	x9, [x9]
 1b0:	cbnz	x9, 194 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x194>
 1b4:	cmp	w22, w8
 1b8:	mov	x0, x19
 1bc:	b.cc	1dc <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1dc>  // b.lo, b.ul, b.last
 1c0:	b	1f0 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1f0>
 1c4:	mov	x19, x23
 1c8:	cmp	x24, x19
 1cc:	b.ne	1e8 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1e8>  // b.any
 1d0:	mov	x20, xzr
 1d4:	b	200 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x200>
 1d8:	mov	x19, x23
 1dc:	ldr	x8, [x21, #24]
 1e0:	cmp	x8, x19
 1e4:	b.eq	1d0 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1d0>  // b.none
 1e8:	mov	x0, x19
 1ec:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 1f0:	ldrb	w8, [x0, #32]
 1f4:	cmp	w8, w22
 1f8:	csel	x20, xzr, x0, cc  // cc = lo, ul, last
 1fc:	csel	x19, x19, xzr, cc  // cc = lo, ul, last
 200:	mov	x0, x20
 204:	mov	x1, x19
 208:	ldp	x20, x19, [sp, #48]
 20c:	ldp	x22, x21, [sp, #32]
 210:	ldp	x24, x23, [sp, #16]
 214:	ldp	x29, x30, [sp], #64
 218:	ret

Disassembly of section .text._ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_:

0000000000000000 <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	str	x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	ldp	x20, x26, [x0]
  20:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
  24:	sub	x8, x26, x20
  28:	cmp	x8, x9
  2c:	b.eq	108 <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_+0x108>  // b.none
  30:	asr	x9, x8, #3
  34:	cmp	x8, #0x0
  38:	csinc	x10, x9, xzr, ne  // ne = any
  3c:	adds	x9, x10, x9
  40:	lsr	x11, x9, #60
  44:	cset	w10, cs  // cs = hs, nlast
  48:	cmp	x11, #0x0
  4c:	cset	w11, ne  // ne = any
  50:	orr	w10, w10, w11
  54:	mov	x8, #0xfffffffffffffff     	// #1152921504606846975
  58:	cmp	w10, #0x0
  5c:	sub	x24, x1, x20
  60:	mov	x23, x2
  64:	mov	x19, x0
  68:	mov	x21, x1
  6c:	csel	x25, x8, x9, ne  // ne = any
  70:	asr	x27, x24, #3
  74:	cbz	x25, 88 <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_+0x88>
  78:	lsl	x0, x25, #3
  7c:	bl	0 <_Znwm>
  80:	mov	x22, x0
  84:	b	8c <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_+0x8c>
  88:	mov	x22, xzr
  8c:	ldr	x8, [x23]
  90:	add	x23, x22, x27, lsl #3
  94:	cmp	x24, #0x1
  98:	str	x8, [x23]
  9c:	b.lt	b0 <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_+0xb0>  // b.tstop
  a0:	mov	x0, x22
  a4:	mov	x1, x20
  a8:	mov	x2, x24
  ac:	bl	0 <memmove>
  b0:	sub	x2, x26, x21
  b4:	add	x23, x23, #0x8
  b8:	cmp	x2, #0x1
  bc:	asr	x24, x2, #3
  c0:	b.lt	d0 <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_+0xd0>  // b.tstop
  c4:	mov	x0, x23
  c8:	mov	x1, x21
  cc:	bl	0 <memmove>
  d0:	add	x21, x23, x24, lsl #3
  d4:	cbz	x20, e0 <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_+0xe0>
  d8:	mov	x0, x20
  dc:	bl	0 <_ZdlPv>
  e0:	add	x8, x22, x25, lsl #3
  e4:	stp	x22, x21, [x19]
  e8:	str	x8, [x19, #16]
  ec:	ldp	x20, x19, [sp, #80]
  f0:	ldp	x22, x21, [sp, #64]
  f4:	ldp	x24, x23, [sp, #48]
  f8:	ldp	x26, x25, [sp, #32]
  fc:	ldr	x27, [sp, #16]
 100:	ldp	x29, x30, [sp], #96
 104:	ret
 108:	adrp	x0, 0 <_ZNSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ESaIS9_EE17_M_realloc_insertIJRKS9_EEEvN9__gnu_cxx17__normal_iteratorIPS9_SB_EEDpOT_>
 10c:	add	x0, x0, #0x0
 110:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOjEESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_:

0000000000000000 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOjEESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x20, x0
  18:	mov	w0, #0x40                  	// #64
  1c:	mov	x21, x3
  20:	mov	x22, x1
  24:	bl	0 <_Znwm>
  28:	ldr	x8, [x21]
  2c:	mov	x21, x0
  30:	mov	x23, x0
  34:	mov	x19, x0
  38:	ldr	w8, [x8]
  3c:	mov	x1, x22
  40:	str	w8, [x21, #32]!
  44:	str	xzr, [x23, #40]!
  48:	stp	xzr, xzr, [x0, #48]
  4c:	mov	x0, x20
  50:	mov	x2, x21
  54:	bl	0 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOjEESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_>
  58:	mov	x22, x0
  5c:	cbz	x1, 70 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOjEESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x70>
  60:	mov	x2, x1
  64:	cbz	x22, 88 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOjEESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x88>
  68:	mov	w0, #0x1                   	// #1
  6c:	b	a4 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOjEESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0xa4>
  70:	ldr	x0, [x23]
  74:	cbz	x0, 7c <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOjEESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x7c>
  78:	bl	0 <_ZdlPv>
  7c:	mov	x0, x19
  80:	bl	0 <_ZdlPv>
  84:	b	c0 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOjEESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0xc0>
  88:	add	x8, x20, #0x8
  8c:	cmp	x8, x2
  90:	b.eq	68 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOjEESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x68>  // b.none
  94:	ldr	w8, [x21]
  98:	ldr	w9, [x2, #32]
  9c:	cmp	w8, w9
  a0:	cset	w0, cc  // cc = lo, ul, last
  a4:	add	x3, x20, #0x8
  a8:	mov	x1, x19
  ac:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  b0:	ldr	x8, [x20, #40]
  b4:	mov	x22, x19
  b8:	add	x8, x8, #0x1
  bc:	str	x8, [x20, #40]
  c0:	mov	x0, x22
  c4:	ldp	x20, x19, [sp, #48]
  c8:	ldp	x22, x21, [sp, #32]
  cc:	ldr	x23, [sp, #16]
  d0:	ldp	x29, x30, [sp], #64
  d4:	ret

Disassembly of section .text._ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_:

0000000000000000 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	add	x23, x0, #0x8
  18:	mov	x20, x1
  1c:	mov	x21, x0
  20:	cmp	x23, x1
  24:	mov	x22, x2
  28:	b.eq	74 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x74>  // b.none
  2c:	ldr	w22, [x22]
  30:	ldr	w8, [x20, #32]
  34:	cmp	w22, w8
  38:	b.cs	d0 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0xd0>  // b.hs, b.nlast
  3c:	ldr	x24, [x21, #24]
  40:	cmp	x24, x20
  44:	b.eq	118 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x118>  // b.none
  48:	mov	x0, x20
  4c:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  50:	ldr	w8, [x0, #32]
  54:	cmp	w8, w22
  58:	b.cs	124 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x124>  // b.hs, b.nlast
  5c:	ldr	x8, [x0, #24]
  60:	cmp	x8, #0x0
  64:	csel	x8, xzr, x20, eq  // eq = none
  68:	csel	x19, x0, x20, eq  // eq = none
  6c:	mov	x20, x8
  70:	b	200 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x200>
  74:	ldr	x8, [x21, #40]
  78:	cbz	x8, 90 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x90>
  7c:	ldr	x19, [x21, #32]
  80:	ldr	w9, [x22]
  84:	ldr	w8, [x19, #32]
  88:	cmp	w8, w9
  8c:	b.cc	1d0 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1d0>  // b.lo, b.ul, b.last
  90:	ldr	x9, [x21, #16]
  94:	cbz	x9, 164 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x164>
  98:	ldr	w8, [x22]
  9c:	ldr	w10, [x9, #32]
  a0:	mov	x19, x9
  a4:	add	x9, x9, #0x10
  a8:	add	x11, x19, #0x18
  ac:	cmp	w8, w10
  b0:	csel	x9, x9, x11, cc  // cc = lo, ul, last
  b4:	ldr	x9, [x9]
  b8:	cbnz	x9, 9c <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x9c>
  bc:	cmp	w8, w10
  c0:	mov	x20, x19
  c4:	mov	x0, x19
  c8:	b.cc	168 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x168>  // b.lo, b.ul, b.last
  cc:	b	180 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x180>
  d0:	cmp	w8, w22
  d4:	b.cs	110 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x110>  // b.hs, b.nlast
  d8:	ldr	x19, [x21, #32]
  dc:	cmp	x19, x20
  e0:	b.eq	1d0 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1d0>  // b.none
  e4:	mov	x0, x20
  e8:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
  ec:	ldr	w8, [x0, #32]
  f0:	cmp	w22, w8
  f4:	b.cs	18c <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x18c>  // b.hs, b.nlast
  f8:	ldr	x8, [x20, #24]
  fc:	cmp	x8, #0x0
 100:	csel	x8, xzr, x0, eq  // eq = none
 104:	csel	x19, x20, x0, eq  // eq = none
 108:	mov	x20, x8
 10c:	b	200 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x200>
 110:	mov	x19, xzr
 114:	b	200 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x200>
 118:	mov	x20, x24
 11c:	mov	x19, x24
 120:	b	200 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x200>
 124:	ldr	x9, [x21, #16]
 128:	cbz	x9, 1c4 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1c4>
 12c:	ldr	w8, [x9, #32]
 130:	mov	x19, x9
 134:	add	x9, x9, #0x10
 138:	add	x10, x19, #0x18
 13c:	cmp	w22, w8
 140:	csel	x9, x9, x10, cc  // cc = lo, ul, last
 144:	ldr	x9, [x9]
 148:	cbnz	x9, 12c <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x12c>
 14c:	cmp	w22, w8
 150:	mov	x0, x19
 154:	b.cs	1f0 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1f0>  // b.hs, b.nlast
 158:	cmp	x24, x19
 15c:	b.ne	1e8 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1e8>  // b.any
 160:	b	1d0 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1d0>
 164:	mov	x19, x23
 168:	ldr	x8, [x21, #24]
 16c:	cmp	x8, x20
 170:	b.eq	1d0 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1d0>  // b.none
 174:	mov	x0, x20
 178:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 17c:	ldr	w8, [x22]
 180:	ldr	w9, [x0, #32]
 184:	cmp	w9, w8
 188:	b	1f8 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1f8>
 18c:	ldr	x9, [x21, #16]
 190:	cbz	x9, 1d8 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1d8>
 194:	ldr	w8, [x9, #32]
 198:	mov	x19, x9
 19c:	add	x9, x9, #0x10
 1a0:	add	x10, x19, #0x18
 1a4:	cmp	w22, w8
 1a8:	csel	x9, x9, x10, cc  // cc = lo, ul, last
 1ac:	ldr	x9, [x9]
 1b0:	cbnz	x9, 194 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x194>
 1b4:	cmp	w22, w8
 1b8:	mov	x0, x19
 1bc:	b.cc	1dc <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1dc>  // b.lo, b.ul, b.last
 1c0:	b	1f0 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1f0>
 1c4:	mov	x19, x23
 1c8:	cmp	x24, x19
 1cc:	b.ne	1e8 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1e8>  // b.any
 1d0:	mov	x20, xzr
 1d4:	b	200 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x200>
 1d8:	mov	x19, x23
 1dc:	ldr	x8, [x21, #24]
 1e0:	cmp	x8, x19
 1e4:	b.eq	1d0 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1d0>  // b.none
 1e8:	mov	x0, x19
 1ec:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 1f0:	ldr	w8, [x0, #32]
 1f4:	cmp	w8, w22
 1f8:	csel	x20, xzr, x0, cc  // cc = lo, ul, last
 1fc:	csel	x19, x19, xzr, cc  // cc = lo, ul, last
 200:	mov	x0, x20
 204:	mov	x1, x19
 208:	ldp	x20, x19, [sp, #48]
 20c:	ldp	x22, x21, [sp, #32]
 210:	ldp	x24, x23, [sp, #16]
 214:	ldp	x29, x30, [sp], #64
 218:	ret

TableGenBackend.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE>:
   0:	sub	sp, sp, #0xa0
   4:	stp	x29, x30, [sp, #64]
   8:	stp	x28, x27, [sp, #80]
   c:	stp	x26, x25, [sp, #96]
  10:	stp	x24, x23, [sp, #112]
  14:	stp	x22, x21, [sp, #128]
  18:	stp	x20, x19, [sp, #144]
  1c:	add	x29, sp, #0x40
  20:	mov	x19, x2
  24:	adrp	x8, 0 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE>
  28:	adrp	x3, 0 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE>
  2c:	mov	x20, x1
  30:	mov	x21, x0
  34:	add	x8, x8, #0x0
  38:	mov	w9, #0x103                 	// #259
  3c:	add	x3, x3, #0x0
  40:	sub	x1, x29, #0x18
  44:	mov	w2, #0x2d                  	// #45
  48:	mov	w4, #0xf                   	// #15
  4c:	mov	x0, x19
  50:	stp	x8, xzr, [x29, #-24]
  54:	sturh	w9, [x29, #-8]
  58:	bl	22c <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
  5c:	adrp	x8, 0 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE>
  60:	adrp	x3, 0 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE>
  64:	add	x8, x8, #0x0
  68:	mov	w9, #0x3                   	// #3
  6c:	mov	w10, #0x105                 	// #261
  70:	add	x23, sp, #0x18
  74:	add	x3, x3, #0x0
  78:	sub	x1, x29, #0x18
  7c:	mov	w2, #0x20                  	// #32
  80:	mov	w4, #0x3                   	// #3
  84:	mov	x0, x19
  88:	stp	x8, x9, [sp, #24]
  8c:	sturh	w10, [x29, #-8]
  90:	stp	x23, xzr, [x29, #-24]
  94:	bl	22c <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
  98:	ldr	x8, [sp, #32]
  9c:	add	x9, x8, #0x3
  a0:	cmp	x9, #0x4f
  a4:	b.hi	20c <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE+0x20c>  // b.pmore
  a8:	mov	w9, #0x4d                  	// #77
  ac:	adrp	x22, 0 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE>
  b0:	mov	x24, xzr
  b4:	add	x25, sp, #0x8
  b8:	mov	w26, #0x505                 	// #1285
  bc:	sub	x27, x9, x8
  c0:	add	x22, x22, #0x0
  c4:	subs	x8, x20, x24
  c8:	csel	x9, x20, x24, cc  // cc = lo, ul, last
  cc:	cmp	x27, x8
  d0:	csel	x28, x27, x8, cc  // cc = lo, ul, last
  d4:	add	x8, x21, x9
  d8:	sub	x9, x20, x9
  dc:	cmp	x9, x28
  e0:	csel	x9, x9, x28, cc  // cc = lo, ul, last
  e4:	sub	x1, x29, #0x18
  e8:	mov	w2, #0x20                  	// #32
  ec:	mov	w4, #0x3                   	// #3
  f0:	mov	x0, x19
  f4:	mov	x3, x22
  f8:	stp	x23, x25, [x29, #-24]
  fc:	stp	x8, x9, [sp, #8]
 100:	sturh	w26, [x29, #-8]
 104:	bl	22c <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 108:	add	x24, x28, x24
 10c:	cmp	x24, x20
 110:	b.cc	c4 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE+0xc4>  // b.lo, b.ul, b.last
 114:	adrp	x20, 0 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE>
 118:	add	x20, x20, #0x0
 11c:	mov	w21, #0x105                 	// #261
 120:	add	x22, sp, #0x18
 124:	sub	x1, x29, #0x18
 128:	mov	w2, #0x20                  	// #32
 12c:	mov	w4, #0x3                   	// #3
 130:	mov	x0, x19
 134:	mov	x3, x20
 138:	sturh	w21, [x29, #-8]
 13c:	stp	x22, xzr, [x29, #-24]
 140:	bl	22c <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 144:	adrp	x9, 0 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE>
 148:	mov	w8, #0x305                 	// #773
 14c:	add	x9, x9, #0x0
 150:	sub	x1, x29, #0x18
 154:	mov	w2, #0x20                  	// #32
 158:	mov	w4, #0x3                   	// #3
 15c:	mov	x0, x19
 160:	mov	x3, x20
 164:	sturh	w8, [x29, #-8]
 168:	stp	x22, x9, [x29, #-24]
 16c:	bl	22c <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 170:	sub	x1, x29, #0x18
 174:	mov	w2, #0x20                  	// #32
 178:	mov	w4, #0x3                   	// #3
 17c:	mov	x0, x19
 180:	mov	x3, x20
 184:	sturh	w21, [x29, #-8]
 188:	stp	x22, xzr, [x29, #-24]
 18c:	bl	22c <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 190:	adrp	x8, 0 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE>
 194:	adrp	x3, 0 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE>
 198:	add	x8, x8, #0x0
 19c:	mov	w9, #0x103                 	// #259
 1a0:	add	x3, x3, #0x0
 1a4:	sub	x1, x29, #0x18
 1a8:	mov	w2, #0x2d                  	// #45
 1ac:	mov	w4, #0x5                   	// #5
 1b0:	mov	x0, x19
 1b4:	stp	x8, xzr, [x29, #-24]
 1b8:	sturh	w9, [x29, #-8]
 1bc:	bl	22c <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 1c0:	ldp	x9, x8, [x19, #16]
 1c4:	cmp	x8, x9
 1c8:	b.cs	1e0 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE+0x1e0>  // b.hs, b.nlast
 1cc:	add	x9, x8, #0x1
 1d0:	mov	w10, #0xa                   	// #10
 1d4:	str	x9, [x19, #24]
 1d8:	strb	w10, [x8]
 1dc:	b	1ec <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE+0x1ec>
 1e0:	mov	w1, #0xa                   	// #10
 1e4:	mov	x0, x19
 1e8:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 1ec:	ldp	x20, x19, [sp, #144]
 1f0:	ldp	x22, x21, [sp, #128]
 1f4:	ldp	x24, x23, [sp, #112]
 1f8:	ldp	x26, x25, [sp, #96]
 1fc:	ldp	x28, x27, [sp, #80]
 200:	ldp	x29, x30, [sp, #64]
 204:	add	sp, sp, #0xa0
 208:	ret
 20c:	adrp	x0, 0 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE>
 210:	adrp	x1, 0 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE>
 214:	adrp	x3, 0 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE>
 218:	add	x0, x0, #0x0
 21c:	add	x1, x1, #0x0
 220:	add	x3, x3, #0x0
 224:	mov	w2, #0x27                  	// #39
 228:	bl	0 <__assert_fail>

000000000000022c <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>:
 22c:	sub	sp, sp, #0x80
 230:	stp	x29, x30, [sp, #32]
 234:	str	x27, [sp, #48]
 238:	stp	x26, x25, [sp, #64]
 23c:	stp	x24, x23, [sp, #80]
 240:	stp	x22, x21, [sp, #96]
 244:	stp	x20, x19, [sp, #112]
 248:	add	x29, sp, #0x20
 24c:	ldr	x8, [x0]
 250:	mov	x20, x4
 254:	mov	x21, x3
 258:	mov	w22, w2
 25c:	ldr	x8, [x8, #72]
 260:	mov	x19, x0
 264:	mov	x24, x1
 268:	blr	x8
 26c:	ldr	x25, [x19, #24]
 270:	ldr	x26, [x19, #8]
 274:	mov	x23, x0
 278:	mov	x8, sp
 27c:	mov	x0, x24
 280:	mov	x27, sp
 284:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
 288:	ldr	x8, [sp, #8]
 28c:	add	x8, x8, x20
 290:	cmp	x8, #0x51
 294:	b.cs	3e0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x1b4>  // b.hs, b.nlast
 298:	ldr	x0, [sp]
 29c:	add	x8, x27, #0x10
 2a0:	cmp	x0, x8
 2a4:	b.eq	2ac <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x80>  // b.none
 2a8:	bl	0 <_ZdlPv>
 2ac:	mov	x0, x24
 2b0:	mov	x1, x19
 2b4:	bl	0 <_ZNK4llvm5Twine5printERNS_11raw_ostreamE>
 2b8:	ldr	x8, [x19]
 2bc:	mov	x0, x19
 2c0:	ldr	x8, [x8, #72]
 2c4:	blr	x8
 2c8:	mov	x8, x0
 2cc:	ldr	x0, [x19, #24]
 2d0:	ldr	x9, [x19, #8]
 2d4:	add	x10, x25, x23
 2d8:	sub	x10, x26, x10
 2dc:	add	x10, x10, x8
 2e0:	mov	w11, #0x50                  	// #80
 2e4:	add	x10, x10, x0
 2e8:	sub	x10, x10, x9
 2ec:	sub	x11, x11, x20
 2f0:	cmp	x10, x11
 2f4:	b.cs	34c <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x120>  // b.hs, b.nlast
 2f8:	add	x8, x20, x8
 2fc:	add	x8, x8, x26
 300:	add	x8, x8, x0
 304:	sub	x8, x8, x23
 308:	sub	x8, x8, x25
 30c:	sub	x8, x8, x9
 310:	sub	x23, x8, #0x50
 314:	b	330 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x104>
 318:	add	x8, x0, #0x1
 31c:	str	x8, [x19, #24]
 320:	strb	w22, [x0]
 324:	ldr	x0, [x19, #24]
 328:	adds	x23, x23, #0x1
 32c:	b.cs	34c <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x120>  // b.hs, b.nlast
 330:	ldr	x8, [x19, #16]
 334:	cmp	x0, x8
 338:	b.cc	318 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0xec>  // b.lo, b.ul, b.last
 33c:	mov	x0, x19
 340:	mov	w1, w22
 344:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 348:	b	324 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0xf8>
 34c:	ldr	x8, [x19, #16]
 350:	sub	x8, x8, x0
 354:	cmp	x20, x8
 358:	b.ls	378 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x14c>  // b.plast
 35c:	mov	x0, x19
 360:	mov	x1, x21
 364:	mov	x2, x20
 368:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 36c:	mov	x19, x0
 370:	ldr	x0, [x0, #24]
 374:	b	394 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x168>
 378:	cbz	x20, 394 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x168>
 37c:	mov	x1, x21
 380:	mov	x2, x20
 384:	bl	0 <memcpy>
 388:	ldr	x8, [x19, #24]
 38c:	add	x0, x8, x20
 390:	str	x0, [x19, #24]
 394:	ldr	x8, [x19, #16]
 398:	cmp	x0, x8
 39c:	b.cs	3b4 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x188>  // b.hs, b.nlast
 3a0:	add	x8, x0, #0x1
 3a4:	mov	w9, #0xa                   	// #10
 3a8:	str	x8, [x19, #24]
 3ac:	strb	w9, [x0]
 3b0:	b	3c0 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x194>
 3b4:	mov	w1, #0xa                   	// #10
 3b8:	mov	x0, x19
 3bc:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 3c0:	ldp	x20, x19, [sp, #112]
 3c4:	ldp	x22, x21, [sp, #96]
 3c8:	ldp	x24, x23, [sp, #80]
 3cc:	ldp	x26, x25, [sp, #64]
 3d0:	ldr	x27, [sp, #48]
 3d4:	ldp	x29, x30, [sp, #32]
 3d8:	add	sp, sp, #0x80
 3dc:	ret
 3e0:	adrp	x0, 0 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE>
 3e4:	adrp	x1, 0 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE>
 3e8:	adrp	x3, 0 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE>
 3ec:	add	x0, x0, #0x0
 3f0:	add	x1, x1, #0x0
 3f4:	add	x3, x3, #0x0
 3f8:	mov	w2, #0x19                  	// #25
 3fc:	bl	0 <__assert_fail>

TGLexer.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>:
       0:	sub	sp, sp, #0x60
       4:	stp	x29, x30, [sp, #32]
       8:	str	x23, [sp, #48]
       c:	stp	x22, x21, [sp, #64]
      10:	stp	x20, x19, [sp, #80]
      14:	add	x29, sp, #0x20
      18:	movi	v0.2d, #0x0
      1c:	mov	x8, x0
      20:	str	x1, [x0]
      24:	str	wzr, [x0, #40]
      28:	mov	x9, x0
      2c:	stur	q0, [x0, #8]
      30:	stur	q0, [x0, #24]
      34:	strb	wzr, [x8, #64]!
      38:	mov	x19, x0
      3c:	mov	x10, #0x800000000           	// #34359738368
      40:	mov	x22, x0
      44:	str	xzr, [x0, #80]
      48:	str	wzr, [x0, #88]
      4c:	stp	x8, xzr, [x0, #48]
      50:	str	wzr, [x9, #104]!
      54:	stp	xzr, x9, [x0, #112]
      58:	stp	x9, xzr, [x0, #128]
      5c:	str	xzr, [x19, #144]!
      60:	stp	xzr, x10, [x0, #152]
      64:	str	xzr, [x22, #176]!
      68:	stp	xzr, xzr, [x0, #184]
      6c:	ldp	x8, x9, [x1]
      70:	mov	w11, #0xaaab                	// #43691
      74:	movk	w11, #0xaaaa, lsl #16
      78:	sub	x9, x9, x8
      7c:	lsr	x10, x9, #3
      80:	mul	w10, w10, w11
      84:	cbz	w10, 164 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x164>
      88:	mov	w10, #0x1                   	// #1
      8c:	str	w10, [x0, #88]
      90:	cbz	x9, 184 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x184>
      94:	ldr	x8, [x8]
      98:	mov	x20, x3
      9c:	mov	x21, x2
      a0:	ldp	x9, x8, [x8, #8]
      a4:	sub	x8, x8, x9
      a8:	stp	x9, x9, [x0, #8]
      ac:	stp	x8, xzr, [x0, #24]
      b0:	mov	w0, #0x18                  	// #24
      b4:	bl	0 <_Znwm>
      b8:	stp	xzr, xzr, [x0, #8]
      bc:	str	xzr, [x0]
      c0:	str	x0, [sp, #8]
      c4:	add	x2, sp, #0x8
      c8:	mov	x0, x22
      cc:	mov	x1, xzr
      d0:	bl	0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
      d4:	ldr	x22, [sp, #8]
      d8:	cbz	x22, f0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0xf0>
      dc:	ldr	x0, [x22]
      e0:	cbz	x0, e8 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0xe8>
      e4:	bl	0 <_ZdlPv>
      e8:	mov	x0, x22
      ec:	bl	0 <_ZdlPv>
      f0:	cbz	x20, 12c <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x12c>
      f4:	add	x8, sp, #0x8
      f8:	add	x22, x21, x20, lsl #5
      fc:	add	x20, x8, #0x10
     100:	mov	w23, #0x1                   	// #1
     104:	ldr	x2, [x21, #8]
     108:	cbz	x2, 144 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x144>
     10c:	ldr	x1, [x21], #32
     110:	mov	x0, x19
     114:	mov	x3, x20
     118:	str	w23, [sp, #24]
     11c:	stp	x1, x2, [sp, #8]
     120:	bl	0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     124:	cmp	x21, x22
     128:	b.ne	104 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x104>  // b.any
     12c:	ldp	x20, x19, [sp, #80]
     130:	ldp	x22, x21, [sp, #64]
     134:	ldr	x23, [sp, #48]
     138:	ldp	x29, x30, [sp, #32]
     13c:	add	sp, sp, #0x60
     140:	ret
     144:	adrp	x0, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     148:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     14c:	adrp	x3, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     150:	add	x0, x0, #0x0
     154:	add	x1, x1, #0x0
     158:	add	x3, x3, #0x0
     15c:	mov	w2, #0x27                  	// #39
     160:	bl	0 <__assert_fail>
     164:	adrp	x0, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     168:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     16c:	adrp	x3, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     170:	add	x0, x0, #0x0
     174:	add	x1, x1, #0x0
     178:	add	x3, x3, #0x0
     17c:	mov	w2, #0x8e                  	// #142
     180:	bl	0 <__assert_fail>
     184:	adrp	x0, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     188:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     18c:	adrp	x3, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     190:	add	x0, x0, #0x0
     194:	add	x1, x1, #0x0
     198:	add	x3, x3, #0x0
     19c:	mov	w2, #0x85                  	// #133
     1a0:	bl	0 <__assert_fail>

00000000000001a4 <_ZNK4llvm7TGLexer6getLocEv>:
     1a4:	ldr	x0, [x0, #32]
     1a8:	ret

00000000000001ac <_ZN4llvm7TGLexer11ReturnErrorENS_5SMLocERKNS_5TwineE>:
     1ac:	sub	sp, sp, #0x20
     1b0:	stp	x29, x30, [sp, #16]
     1b4:	add	x29, sp, #0x10
     1b8:	str	x1, [sp, #8]
     1bc:	add	x0, sp, #0x8
     1c0:	mov	w1, #0x1                   	// #1
     1c4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
     1c8:	ldp	x29, x30, [sp, #16]
     1cc:	mov	w0, #0x1                   	// #1
     1d0:	add	sp, sp, #0x20
     1d4:	ret

00000000000001d8 <_ZN4llvm7TGLexer11ReturnErrorEPKcRKNS_5TwineE>:
     1d8:	sub	sp, sp, #0x20
     1dc:	stp	x29, x30, [sp, #16]
     1e0:	add	x29, sp, #0x10
     1e4:	str	x1, [sp, #8]
     1e8:	add	x0, sp, #0x8
     1ec:	mov	w1, #0x1                   	// #1
     1f0:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
     1f4:	ldp	x29, x30, [sp, #16]
     1f8:	mov	w0, #0x1                   	// #1
     1fc:	add	sp, sp, #0x20
     200:	ret

0000000000000204 <_ZN4llvm7TGLexer10processEOFEv>:
     204:	stp	x29, x30, [sp, #-32]!
     208:	stp	x20, x19, [sp, #16]
     20c:	mov	x29, sp
     210:	ldr	w8, [x0, #88]
     214:	cbz	w8, 2e8 <_ZN4llvm7TGLexer10processEOFEv+0xe4>
     218:	ldr	x9, [x0]
     21c:	mov	x11, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     220:	movk	x11, #0xaaab
     224:	mov	x19, x0
     228:	ldp	x9, x10, [x9]
     22c:	sub	x10, x10, x9
     230:	asr	x10, x10, #3
     234:	mul	x10, x10, x11
     238:	cmp	x10, x8
     23c:	b.cc	2e8 <_ZN4llvm7TGLexer10processEOFEv+0xe4>  // b.lo, b.ul, b.last
     240:	sub	w8, w8, #0x1
     244:	mov	w10, #0x18                  	// #24
     248:	umaddl	x8, w8, w10, x9
     24c:	ldr	x20, [x8, #16]
     250:	cbz	x20, 2cc <_ZN4llvm7TGLexer10processEOFEv+0xc8>
     254:	mov	x0, x19
     258:	mov	w1, wzr
     25c:	bl	328 <_ZN4llvm7TGLexer15prepExitIncludeEb>
     260:	mov	w8, w0
     264:	mov	w0, wzr
     268:	tbz	w8, #0, 2dc <_ZN4llvm7TGLexer10processEOFEv+0xd8>
     26c:	ldr	x0, [x19]
     270:	mov	x1, x20
     274:	bl	0 <_ZNK4llvm9SourceMgr23FindBufferContainingLocENS_5SMLocE>
     278:	str	w0, [x19, #88]
     27c:	cbz	w0, 308 <_ZN4llvm7TGLexer10processEOFEv+0x104>
     280:	ldr	x8, [x19]
     284:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     288:	movk	x10, #0xaaab
     28c:	ldp	x8, x9, [x8]
     290:	sub	x9, x9, x8
     294:	asr	x9, x9, #3
     298:	mul	x9, x9, x10
     29c:	cmp	x9, w0, uxtw
     2a0:	b.cc	308 <_ZN4llvm7TGLexer10processEOFEv+0x104>  // b.lo, b.ul, b.last
     2a4:	sub	w9, w0, #0x1
     2a8:	mov	w10, #0x18                  	// #24
     2ac:	umull	x9, w9, w10
     2b0:	ldr	x8, [x8, x9]
     2b4:	mov	w0, #0x1                   	// #1
     2b8:	ldp	x9, x8, [x8, #8]
     2bc:	sub	x8, x8, x9
     2c0:	stp	x20, x9, [x19, #8]
     2c4:	stp	x8, x20, [x19, #24]
     2c8:	b	2dc <_ZN4llvm7TGLexer10processEOFEv+0xd8>
     2cc:	mov	w1, #0x1                   	// #1
     2d0:	mov	x0, x19
     2d4:	bl	328 <_ZN4llvm7TGLexer15prepExitIncludeEb>
     2d8:	mov	w0, wzr
     2dc:	ldp	x20, x19, [sp, #16]
     2e0:	ldp	x29, x30, [sp], #32
     2e4:	ret
     2e8:	adrp	x0, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     2ec:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     2f0:	adrp	x3, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     2f4:	add	x0, x0, #0x0
     2f8:	add	x1, x1, #0x0
     2fc:	add	x3, x3, #0x0
     300:	mov	w2, #0x93                  	// #147
     304:	bl	0 <__assert_fail>
     308:	adrp	x0, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     30c:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     310:	adrp	x3, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     314:	add	x0, x0, #0x0
     318:	add	x1, x1, #0x0
     31c:	add	x3, x3, #0x0
     320:	mov	w2, #0x85                  	// #133
     324:	bl	0 <__assert_fail>

0000000000000328 <_ZN4llvm7TGLexer15prepExitIncludeEb>:
     328:	sub	sp, sp, #0x50
     32c:	stp	x29, x30, [sp, #32]
     330:	stp	x22, x21, [sp, #48]
     334:	stp	x20, x19, [sp, #64]
     338:	add	x29, sp, #0x20
     33c:	ldr	x8, [x0, #184]
     340:	mov	x19, x0
     344:	mov	x22, x8
     348:	ldr	x9, [x22, #-8]!
     34c:	ldp	x10, x21, [x9]
     350:	cmp	x10, x21
     354:	b.eq	3ac <_ZN4llvm7TGLexer15prepExitIncludeEb+0x84>  // b.none
     358:	ldp	x8, x9, [x19, #16]
     35c:	adrp	x10, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     360:	add	x10, x10, #0x0
     364:	mov	w20, #0x103                 	// #259
     368:	add	x0, x8, x9
     36c:	add	x1, sp, #0x8
     370:	stp	x10, xzr, [sp, #8]
     374:	strh	w20, [sp, #24]
     378:	bl	0 <_ZN4llvm10PrintErrorEPKcRKNS_5TwineE>
     37c:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     380:	sub	x0, x21, #0x8
     384:	add	x8, x8, #0x0
     388:	add	x2, sp, #0x8
     38c:	mov	w1, #0x1                   	// #1
     390:	stp	x8, xzr, [sp, #8]
     394:	strh	w20, [sp, #24]
     398:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
     39c:	ldr	x8, [x19, #8]
     3a0:	mov	w0, wzr
     3a4:	str	x8, [x19, #32]
     3a8:	b	404 <_ZN4llvm7TGLexer15prepExitIncludeEb+0xdc>
     3ac:	ldr	x9, [x19, #176]
     3b0:	cmp	x9, x8
     3b4:	b.eq	418 <_ZN4llvm7TGLexer15prepExitIncludeEb+0xf0>  // b.none
     3b8:	str	x22, [x19, #184]
     3bc:	ldr	x21, [x22]
     3c0:	mov	w20, w1
     3c4:	cbz	x21, 3dc <_ZN4llvm7TGLexer15prepExitIncludeEb+0xb4>
     3c8:	ldr	x0, [x21]
     3cc:	cbz	x0, 3d4 <_ZN4llvm7TGLexer15prepExitIncludeEb+0xac>
     3d0:	bl	0 <_ZdlPv>
     3d4:	mov	x0, x21
     3d8:	bl	0 <_ZdlPv>
     3dc:	str	xzr, [x22]
     3e0:	ldp	x8, x9, [x19, #176]
     3e4:	cmp	x8, x9
     3e8:	tbz	w20, #0, 3fc <_ZN4llvm7TGLexer15prepExitIncludeEb+0xd4>
     3ec:	b.eq	400 <_ZN4llvm7TGLexer15prepExitIncludeEb+0xd8>  // b.none
     3f0:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     3f4:	add	x8, x8, #0x0
     3f8:	b	420 <_ZN4llvm7TGLexer15prepExitIncludeEb+0xf8>
     3fc:	b.eq	418 <_ZN4llvm7TGLexer15prepExitIncludeEb+0xf0>  // b.none
     400:	mov	w0, #0x1                   	// #1
     404:	ldp	x20, x19, [sp, #64]
     408:	ldp	x22, x21, [sp, #48]
     40c:	ldp	x29, x30, [sp, #32]
     410:	add	sp, sp, #0x50
     414:	ret
     418:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     41c:	add	x8, x8, #0x0
     420:	mov	w9, #0x103                 	// #259
     424:	add	x0, sp, #0x8
     428:	stp	x8, xzr, [sp, #8]
     42c:	strh	w9, [sp, #24]
     430:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>

0000000000000434 <_ZN4llvm7TGLexer11getNextCharEv>:
     434:	ldr	x9, [x0, #8]
     438:	mov	x8, x0
     43c:	add	x10, x9, #0x1
     440:	str	x10, [x0, #8]
     444:	ldrb	w0, [x9]
     448:	cbz	w0, 488 <_ZN4llvm7TGLexer11getNextCharEv+0x54>
     44c:	cmp	w0, #0xa
     450:	b.eq	45c <_ZN4llvm7TGLexer11getNextCharEv+0x28>  // b.none
     454:	cmp	w0, #0xd
     458:	b.ne	4a8 <_ZN4llvm7TGLexer11getNextCharEv+0x74>  // b.any
     45c:	ldrb	w10, [x10]
     460:	cmp	w10, #0xd
     464:	b.eq	470 <_ZN4llvm7TGLexer11getNextCharEv+0x3c>  // b.none
     468:	cmp	w10, #0xa
     46c:	b.ne	480 <_ZN4llvm7TGLexer11getNextCharEv+0x4c>  // b.any
     470:	cmp	w10, w0
     474:	b.eq	480 <_ZN4llvm7TGLexer11getNextCharEv+0x4c>  // b.none
     478:	add	x9, x9, #0x2
     47c:	str	x9, [x8, #8]
     480:	mov	w0, #0xa                   	// #10
     484:	ret
     488:	ldp	x10, x11, [x8, #16]
     48c:	add	x10, x10, x11
     490:	cmp	x9, x10
     494:	b.eq	4a0 <_ZN4llvm7TGLexer11getNextCharEv+0x6c>  // b.none
     498:	mov	w0, wzr
     49c:	ret
     4a0:	mov	w0, #0xffffffff            	// #-1
     4a4:	str	x9, [x8, #8]
     4a8:	ret

00000000000004ac <_ZNK4llvm7TGLexer12peekNextCharEi>:
     4ac:	ldr	x8, [x0, #8]
     4b0:	ldrb	w0, [x8, w1, sxtw]
     4b4:	ret

00000000000004b8 <_ZN4llvm7TGLexer8LexTokenEb>:
     4b8:	sub	sp, sp, #0x60
     4bc:	stp	x29, x30, [sp, #32]
     4c0:	str	x23, [sp, #48]
     4c4:	stp	x22, x21, [sp, #64]
     4c8:	stp	x20, x19, [sp, #80]
     4cc:	add	x29, sp, #0x20
     4d0:	ldr	x23, [x0, #8]
     4d4:	mov	x19, x0
     4d8:	add	x8, x23, #0x1
     4dc:	str	x23, [x0, #32]
     4e0:	str	x8, [x0, #8]
     4e4:	ldrb	w22, [x23]
     4e8:	cmp	w22, #0xd
     4ec:	b.eq	518 <_ZN4llvm7TGLexer8LexTokenEb+0x60>  // b.none
     4f0:	cmp	w22, #0xa
     4f4:	b.eq	518 <_ZN4llvm7TGLexer8LexTokenEb+0x60>  // b.none
     4f8:	mov	w20, w1
     4fc:	cbnz	w22, 55c <_ZN4llvm7TGLexer8LexTokenEb+0xa4>
     500:	ldp	x8, x9, [x19, #16]
     504:	add	x8, x8, x9
     508:	cmp	x8, x23
     50c:	b.eq	5ec <_ZN4llvm7TGLexer8LexTokenEb+0x134>  // b.none
     510:	and	w1, w20, #0x1
     514:	b	540 <_ZN4llvm7TGLexer8LexTokenEb+0x88>
     518:	ldrb	w8, [x8]
     51c:	cmp	w8, #0xd
     520:	b.eq	52c <_ZN4llvm7TGLexer8LexTokenEb+0x74>  // b.none
     524:	cmp	w8, #0xa
     528:	b.ne	53c <_ZN4llvm7TGLexer8LexTokenEb+0x84>  // b.any
     52c:	cmp	w8, w22
     530:	b.eq	53c <_ZN4llvm7TGLexer8LexTokenEb+0x84>  // b.none
     534:	add	x8, x23, #0x2
     538:	str	x8, [x19, #8]
     53c:	mov	w1, #0x1                   	// #1
     540:	mov	x0, x19
     544:	ldp	x20, x19, [sp, #80]
     548:	ldp	x22, x21, [sp, #64]
     54c:	ldr	x23, [sp, #48]
     550:	ldp	x29, x30, [sp, #32]
     554:	add	sp, sp, #0x60
     558:	b	4b8 <_ZN4llvm7TGLexer8LexTokenEb>
     55c:	sub	w9, w22, #0x9
     560:	cmp	w9, #0x74
     564:	b.hi	6fc <_ZN4llvm7TGLexer8LexTokenEb+0x244>  // b.pmore
     568:	adrp	x10, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     56c:	add	x10, x10, #0x0
     570:	adr	x11, 510 <_ZN4llvm7TGLexer8LexTokenEb+0x58>
     574:	ldrb	w12, [x10, x9]
     578:	add	x11, x11, x12, lsl #2
     57c:	mov	w21, #0xc                   	// #12
     580:	br	x11
     584:	sub	w9, w22, #0x30
     588:	cmp	w9, #0x9
     58c:	b.hi	628 <_ZN4llvm7TGLexer8LexTokenEb+0x170>  // b.pmore
     590:	mov	x9, xzr
     594:	ldrb	w20, [x8, x9]
     598:	add	x9, x9, #0x1
     59c:	sub	w10, w20, #0x30
     5a0:	cmp	w10, #0xa
     5a4:	b.cc	594 <_ZN4llvm7TGLexer8LexTokenEb+0xdc>  // b.lo, b.ul, b.last
     5a8:	cmp	w20, #0x78
     5ac:	b.eq	5b8 <_ZN4llvm7TGLexer8LexTokenEb+0x100>  // b.none
     5b0:	cmp	w20, #0x62
     5b4:	b.ne	62c <_ZN4llvm7TGLexer8LexTokenEb+0x174>  // b.any
     5b8:	ldrb	w8, [x8, w9, uxtw]
     5bc:	sub	w8, w8, #0x30
     5c0:	cmp	w8, #0x36
     5c4:	b.hi	62c <_ZN4llvm7TGLexer8LexTokenEb+0x174>  // b.pmore
     5c8:	mov	w9, #0x1                   	// #1
     5cc:	mov	x10, #0x7e0000007e0000      	// #35465847073800192
     5d0:	lsl	x9, x9, x8
     5d4:	movk	x10, #0x3fc
     5d8:	tst	x9, x10
     5dc:	b.eq	7f8 <_ZN4llvm7TGLexer8LexTokenEb+0x340>  // b.none
     5e0:	cmp	w20, #0x78
     5e4:	b.ne	62c <_ZN4llvm7TGLexer8LexTokenEb+0x174>  // b.any
     5e8:	b	640 <_ZN4llvm7TGLexer8LexTokenEb+0x188>
     5ec:	mov	x0, x19
     5f0:	str	x23, [x19, #8]
     5f4:	bl	204 <_ZN4llvm7TGLexer10processEOFEv>
     5f8:	tbz	w0, #0, 608 <_ZN4llvm7TGLexer8LexTokenEb+0x150>
     5fc:	mov	x0, x19
     600:	mov	w1, wzr
     604:	b	544 <_ZN4llvm7TGLexer8LexTokenEb+0x8c>
     608:	mov	w21, wzr
     60c:	mov	w0, w21
     610:	ldp	x20, x19, [sp, #80]
     614:	ldp	x22, x21, [sp, #64]
     618:	ldr	x23, [sp, #48]
     61c:	ldp	x29, x30, [sp, #32]
     620:	add	sp, sp, #0x60
     624:	ret
     628:	mov	w20, wzr
     62c:	mov	w0, w20
     630:	bl	0 <isalpha>
     634:	cmp	w20, #0x5f
     638:	b.eq	710 <_ZN4llvm7TGLexer8LexTokenEb+0x258>  // b.none
     63c:	cbnz	w0, 710 <_ZN4llvm7TGLexer8LexTokenEb+0x258>
     640:	mov	x0, x19
     644:	ldp	x20, x19, [sp, #80]
     648:	ldp	x22, x21, [sp, #64]
     64c:	ldr	x23, [sp, #48]
     650:	ldp	x29, x30, [sp, #32]
     654:	add	sp, sp, #0x60
     658:	b	1490 <_ZN4llvm7TGLexer9LexNumberEv>
     65c:	mov	x0, x19
     660:	ldp	x20, x19, [sp, #80]
     664:	ldp	x22, x21, [sp, #64]
     668:	ldr	x23, [sp, #48]
     66c:	ldp	x29, x30, [sp, #32]
     670:	add	sp, sp, #0x60
     674:	b	1b94 <_ZN4llvm7TGLexer10LexExclaimEv>
     678:	mov	x0, x19
     67c:	ldp	x20, x19, [sp, #80]
     680:	ldp	x22, x21, [sp, #64]
     684:	ldr	x23, [sp, #48]
     688:	ldp	x29, x30, [sp, #32]
     68c:	add	sp, sp, #0x60
     690:	b	1670 <_ZN4llvm7TGLexer9LexStringEv>
     694:	tbz	w20, #0, 6a8 <_ZN4llvm7TGLexer8LexTokenEb+0x1f0>
     698:	mov	x0, x19
     69c:	bl	c00 <_ZNK4llvm7TGLexer15prepIsDirectiveEv>
     6a0:	cmp	w0, #0x1
     6a4:	b.ne	830 <_ZN4llvm7TGLexer8LexTokenEb+0x378>  // b.any
     6a8:	mov	w21, #0x12                  	// #18
     6ac:	b	60c <_ZN4llvm7TGLexer8LexTokenEb+0x154>
     6b0:	mov	x0, x19
     6b4:	ldp	x20, x19, [sp, #80]
     6b8:	ldp	x22, x21, [sp, #64]
     6bc:	ldr	x23, [sp, #48]
     6c0:	ldp	x29, x30, [sp, #32]
     6c4:	add	sp, sp, #0x60
     6c8:	b	1934 <_ZN4llvm7TGLexer10LexVarNameEv>
     6cc:	mov	w21, #0x8                   	// #8
     6d0:	b	60c <_ZN4llvm7TGLexer8LexTokenEb+0x154>
     6d4:	mov	w21, #0x9                   	// #9
     6d8:	b	60c <_ZN4llvm7TGLexer8LexTokenEb+0x154>
     6dc:	mov	w21, #0xe                   	// #14
     6e0:	b	60c <_ZN4llvm7TGLexer8LexTokenEb+0x154>
     6e4:	mov	w21, #0x10                  	// #16
     6e8:	b	60c <_ZN4llvm7TGLexer8LexTokenEb+0x154>
     6ec:	mov	w21, #0xb                   	// #11
     6f0:	b	60c <_ZN4llvm7TGLexer8LexTokenEb+0x154>
     6f4:	mov	w21, #0x7                   	// #7
     6f8:	b	60c <_ZN4llvm7TGLexer8LexTokenEb+0x154>
     6fc:	mov	w0, w22
     700:	bl	0 <isalpha>
     704:	cmp	w22, #0x5f
     708:	b.eq	710 <_ZN4llvm7TGLexer8LexTokenEb+0x258>  // b.none
     70c:	cbz	w0, 7c8 <_ZN4llvm7TGLexer8LexTokenEb+0x310>
     710:	mov	x0, x19
     714:	ldp	x20, x19, [sp, #80]
     718:	ldp	x22, x21, [sp, #64]
     71c:	ldr	x23, [sp, #48]
     720:	ldp	x29, x30, [sp, #32]
     724:	add	sp, sp, #0x60
     728:	b	854 <_ZN4llvm7TGLexer13LexIdentifierEv>
     72c:	mov	w21, #0xf                   	// #15
     730:	b	60c <_ZN4llvm7TGLexer8LexTokenEb+0x154>
     734:	ldrb	w8, [x8]
     738:	cmp	w8, #0x2a
     73c:	b.eq	81c <_ZN4llvm7TGLexer8LexTokenEb+0x364>  // b.none
     740:	cmp	w8, #0x2f
     744:	b.ne	7c8 <_ZN4llvm7TGLexer8LexTokenEb+0x310>  // b.any
     748:	add	x8, x23, #0x2
     74c:	b	764 <_ZN4llvm7TGLexer8LexTokenEb+0x2ac>
     750:	ldp	x9, x10, [x19, #16]
     754:	add	x9, x9, x10
     758:	cmp	x8, x9
     75c:	b.eq	510 <_ZN4llvm7TGLexer8LexTokenEb+0x58>  // b.none
     760:	add	x8, x8, #0x1
     764:	str	x8, [x19, #8]
     768:	ldrb	w9, [x8]
     76c:	cbz	w9, 750 <_ZN4llvm7TGLexer8LexTokenEb+0x298>
     770:	cmp	w9, #0xa
     774:	b.eq	510 <_ZN4llvm7TGLexer8LexTokenEb+0x58>  // b.none
     778:	cmp	w9, #0xd
     77c:	b.ne	760 <_ZN4llvm7TGLexer8LexTokenEb+0x2a8>  // b.any
     780:	b	510 <_ZN4llvm7TGLexer8LexTokenEb+0x58>
     784:	mov	w21, #0xd                   	// #13
     788:	b	60c <_ZN4llvm7TGLexer8LexTokenEb+0x154>
     78c:	mov	w21, #0xa                   	// #10
     790:	b	60c <_ZN4llvm7TGLexer8LexTokenEb+0x154>
     794:	mov	w21, #0x11                  	// #17
     798:	b	60c <_ZN4llvm7TGLexer8LexTokenEb+0x154>
     79c:	mov	x0, x19
     7a0:	ldp	x20, x19, [sp, #80]
     7a4:	ldp	x22, x21, [sp, #64]
     7a8:	ldr	x23, [sp, #48]
     7ac:	ldp	x29, x30, [sp, #32]
     7b0:	add	sp, sp, #0x60
     7b4:	b	1a00 <_ZN4llvm7TGLexer10LexBracketEv>
     7b8:	mov	w21, #0x5                   	// #5
     7bc:	b	60c <_ZN4llvm7TGLexer8LexTokenEb+0x154>
     7c0:	mov	w21, #0x6                   	// #6
     7c4:	b	60c <_ZN4llvm7TGLexer8LexTokenEb+0x154>
     7c8:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     7cc:	add	x8, x8, #0x0
     7d0:	mov	w9, #0x103                 	// #259
     7d4:	add	x0, x29, #0x18
     7d8:	add	x2, sp, #0x8
     7dc:	mov	w1, #0x1                   	// #1
     7e0:	stp	x8, xzr, [sp, #8]
     7e4:	strh	w9, [sp, #24]
     7e8:	str	x23, [x29, #24]
     7ec:	mov	w21, #0x1                   	// #1
     7f0:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
     7f4:	b	60c <_ZN4llvm7TGLexer8LexTokenEb+0x154>
     7f8:	mov	w9, #0x1                   	// #1
     7fc:	lsl	x8, x9, x8
     800:	tst	x8, #0x3
     804:	b.eq	62c <_ZN4llvm7TGLexer8LexTokenEb+0x174>  // b.none
     808:	cmp	w20, #0x78
     80c:	b.eq	640 <_ZN4llvm7TGLexer8LexTokenEb+0x188>  // b.none
     810:	cmp	w20, #0x62
     814:	b.eq	640 <_ZN4llvm7TGLexer8LexTokenEb+0x188>  // b.none
     818:	b	62c <_ZN4llvm7TGLexer8LexTokenEb+0x174>
     81c:	mov	x0, x19
     820:	bl	1394 <_ZN4llvm7TGLexer12SkipCCommentEv>
     824:	tbz	w0, #0, 510 <_ZN4llvm7TGLexer8LexTokenEb+0x58>
     828:	mov	w21, #0x1                   	// #1
     82c:	b	60c <_ZN4llvm7TGLexer8LexTokenEb+0x154>
     830:	mov	w1, w0
     834:	mov	x0, x19
     838:	ldp	x20, x19, [sp, #80]
     83c:	ldp	x22, x21, [sp, #64]
     840:	ldr	x23, [sp, #48]
     844:	ldp	x29, x30, [sp, #32]
     848:	mov	w2, #0x1                   	// #1
     84c:	add	sp, sp, #0x60
     850:	b	ed8 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb>

0000000000000854 <_ZN4llvm7TGLexer13LexIdentifierEv>:
     854:	stp	x29, x30, [sp, #-48]!
     858:	stp	x22, x21, [sp, #16]
     85c:	stp	x20, x19, [sp, #32]
     860:	mov	x29, sp
     864:	ldr	x22, [x0, #8]
     868:	ldr	x20, [x0, #32]
     86c:	mov	x19, x0
     870:	ldrb	w21, [x22]
     874:	mov	w0, w21
     878:	bl	0 <isalpha>
     87c:	cmp	w21, #0x5f
     880:	b.eq	894 <_ZN4llvm7TGLexer13LexIdentifierEv+0x40>  // b.none
     884:	cbnz	w0, 894 <_ZN4llvm7TGLexer13LexIdentifierEv+0x40>
     888:	sub	w8, w21, #0x30
     88c:	cmp	w8, #0x9
     890:	b.hi	8c4 <_ZN4llvm7TGLexer13LexIdentifierEv+0x70>  // b.pmore
     894:	add	x22, x22, #0x1
     898:	str	x22, [x19, #8]
     89c:	ldrb	w21, [x22], #1
     8a0:	mov	w0, w21
     8a4:	bl	0 <isalpha>
     8a8:	cmp	w21, #0x5f
     8ac:	b.eq	898 <_ZN4llvm7TGLexer13LexIdentifierEv+0x44>  // b.none
     8b0:	sub	w8, w21, #0x30
     8b4:	cbnz	w0, 898 <_ZN4llvm7TGLexer13LexIdentifierEv+0x44>
     8b8:	cmp	w8, #0xa
     8bc:	b.cc	898 <_ZN4llvm7TGLexer13LexIdentifierEv+0x44>  // b.lo, b.ul, b.last
     8c0:	sub	x22, x22, #0x1
     8c4:	sub	x21, x22, x20
     8c8:	sub	x8, x21, #0x2
     8cc:	cmp	x8, #0x8
     8d0:	b.hi	b34 <_ZN4llvm7TGLexer13LexIdentifierEv+0x2e0>  // b.pmore
     8d4:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     8d8:	add	x9, x9, #0x0
     8dc:	adr	x10, 8ec <_ZN4llvm7TGLexer13LexIdentifierEv+0x98>
     8e0:	ldrb	w11, [x9, x8]
     8e4:	add	x10, x10, x11, lsl #2
     8e8:	br	x10
     8ec:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     8f0:	add	x1, x1, #0x0
     8f4:	mov	x0, x20
     8f8:	mov	x2, x21
     8fc:	bl	0 <bcmp>
     900:	cbz	w0, b60 <_ZN4llvm7TGLexer13LexIdentifierEv+0x30c>
     904:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     908:	add	x1, x1, #0x0
     90c:	mov	x0, x20
     910:	mov	x2, x21
     914:	bl	0 <bcmp>
     918:	cbnz	w0, b34 <_ZN4llvm7TGLexer13LexIdentifierEv+0x2e0>
     91c:	mov	w0, #0x24                  	// #36
     920:	b	b50 <_ZN4llvm7TGLexer13LexIdentifierEv+0x2fc>
     924:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     928:	add	x1, x1, #0x0
     92c:	mov	x0, x20
     930:	mov	x2, x21
     934:	bl	0 <bcmp>
     938:	cbz	w0, b68 <_ZN4llvm7TGLexer13LexIdentifierEv+0x314>
     93c:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     940:	add	x1, x1, #0x0
     944:	mov	x0, x20
     948:	mov	x2, x21
     94c:	bl	0 <bcmp>
     950:	cbz	w0, ba4 <_ZN4llvm7TGLexer13LexIdentifierEv+0x350>
     954:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     958:	add	x1, x1, #0x0
     95c:	mov	x0, x20
     960:	mov	x2, x21
     964:	bl	0 <bcmp>
     968:	cbz	w0, bd8 <_ZN4llvm7TGLexer13LexIdentifierEv+0x384>
     96c:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     970:	add	x1, x1, #0x0
     974:	mov	x0, x20
     978:	mov	x2, x21
     97c:	bl	0 <bcmp>
     980:	cbz	w0, be8 <_ZN4llvm7TGLexer13LexIdentifierEv+0x394>
     984:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     988:	add	x1, x1, #0x0
     98c:	mov	x0, x20
     990:	mov	x2, x21
     994:	bl	0 <bcmp>
     998:	cbnz	w0, b34 <_ZN4llvm7TGLexer13LexIdentifierEv+0x2e0>
     99c:	mov	w0, #0x1e                  	// #30
     9a0:	b	b50 <_ZN4llvm7TGLexer13LexIdentifierEv+0x2fc>
     9a4:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     9a8:	add	x1, x1, #0x0
     9ac:	mov	x0, x20
     9b0:	mov	x2, x21
     9b4:	bl	0 <bcmp>
     9b8:	cbz	w0, b70 <_ZN4llvm7TGLexer13LexIdentifierEv+0x31c>
     9bc:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     9c0:	add	x1, x1, #0x0
     9c4:	mov	x0, x20
     9c8:	mov	x2, x21
     9cc:	bl	0 <bcmp>
     9d0:	cbz	w0, bac <_ZN4llvm7TGLexer13LexIdentifierEv+0x358>
     9d4:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     9d8:	add	x1, x1, #0x0
     9dc:	mov	x0, x20
     9e0:	mov	x2, x21
     9e4:	bl	0 <bcmp>
     9e8:	cbz	w0, be0 <_ZN4llvm7TGLexer13LexIdentifierEv+0x38c>
     9ec:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     9f0:	add	x1, x1, #0x0
     9f4:	mov	x0, x20
     9f8:	mov	x2, x21
     9fc:	bl	0 <bcmp>
     a00:	cbz	w0, bf0 <_ZN4llvm7TGLexer13LexIdentifierEv+0x39c>
     a04:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     a08:	add	x1, x1, #0x0
     a0c:	mov	x0, x20
     a10:	mov	x2, x21
     a14:	bl	0 <bcmp>
     a18:	cbz	w0, bf8 <_ZN4llvm7TGLexer13LexIdentifierEv+0x3a4>
     a1c:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     a20:	add	x1, x1, #0x0
     a24:	mov	x0, x20
     a28:	mov	x2, x21
     a2c:	bl	0 <bcmp>
     a30:	cbnz	w0, b34 <_ZN4llvm7TGLexer13LexIdentifierEv+0x2e0>
     a34:	mov	w0, #0x26                  	// #38
     a38:	b	b50 <_ZN4llvm7TGLexer13LexIdentifierEv+0x2fc>
     a3c:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     a40:	add	x1, x1, #0x0
     a44:	mov	x0, x20
     a48:	mov	x2, x21
     a4c:	bl	0 <bcmp>
     a50:	cbz	w0, b78 <_ZN4llvm7TGLexer13LexIdentifierEv+0x324>
     a54:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     a58:	add	x1, x1, #0x0
     a5c:	mov	x0, x20
     a60:	mov	x2, x21
     a64:	bl	0 <bcmp>
     a68:	cbnz	w0, b34 <_ZN4llvm7TGLexer13LexIdentifierEv+0x2e0>
     a6c:	mov	w0, #0x1b                  	// #27
     a70:	b	b50 <_ZN4llvm7TGLexer13LexIdentifierEv+0x2fc>
     a74:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     a78:	add	x1, x1, #0x0
     a7c:	mov	x0, x20
     a80:	mov	x2, x21
     a84:	bl	0 <bcmp>
     a88:	cbz	w0, b80 <_ZN4llvm7TGLexer13LexIdentifierEv+0x32c>
     a8c:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     a90:	add	x1, x1, #0x0
     a94:	mov	x0, x20
     a98:	mov	x2, x21
     a9c:	bl	0 <bcmp>
     aa0:	cbz	w0, bb4 <_ZN4llvm7TGLexer13LexIdentifierEv+0x360>
     aa4:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     aa8:	add	x1, x1, #0x0
     aac:	mov	x0, x20
     ab0:	mov	x2, x21
     ab4:	bl	0 <bcmp>
     ab8:	cbnz	w0, b34 <_ZN4llvm7TGLexer13LexIdentifierEv+0x2e0>
     abc:	mov	w0, #0x23                  	// #35
     ac0:	b	b50 <_ZN4llvm7TGLexer13LexIdentifierEv+0x2fc>
     ac4:	ldr	w8, [x20]
     ac8:	ldur	w9, [x20, #3]
     acc:	mov	w10, #0x6e69                	// #28265
     ad0:	mov	w11, #0x756c                	// #30060
     ad4:	movk	w10, #0x6c63, lsl #16
     ad8:	movk	w11, #0x6564, lsl #16
     adc:	eor	w8, w8, w10
     ae0:	eor	w9, w9, w11
     ae4:	orr	w8, w8, w9
     ae8:	cbz	w8, b88 <_ZN4llvm7TGLexer13LexIdentifierEv+0x334>
     aec:	ldr	w8, [x20]
     af0:	ldur	w9, [x20, #3]
     af4:	mov	w10, #0x6f66                	// #28518
     af8:	mov	w11, #0x6165                	// #24933
     afc:	movk	w10, #0x6572, lsl #16
     b00:	movk	w11, #0x6863, lsl #16
     b04:	eor	w8, w8, w10
     b08:	eor	w9, w9, w11
     b0c:	orr	w8, w8, w9
     b10:	cbnz	w8, b34 <_ZN4llvm7TGLexer13LexIdentifierEv+0x2e0>
     b14:	mov	w0, #0x19                  	// #25
     b18:	b	b50 <_ZN4llvm7TGLexer13LexIdentifierEv+0x2fc>
     b1c:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     b20:	add	x1, x1, #0x0
     b24:	mov	x0, x20
     b28:	mov	x2, x21
     b2c:	bl	0 <bcmp>
     b30:	cbz	w0, b9c <_ZN4llvm7TGLexer13LexIdentifierEv+0x348>
     b34:	ldr	x2, [x19, #56]
     b38:	add	x0, x19, #0x30
     b3c:	mov	x1, xzr
     b40:	mov	x3, x20
     b44:	mov	x4, x21
     b48:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
     b4c:	mov	w0, #0x48                  	// #72
     b50:	ldp	x20, x19, [sp, #32]
     b54:	ldp	x22, x21, [sp, #16]
     b58:	ldp	x29, x30, [sp], #48
     b5c:	ret
     b60:	mov	w0, #0x1c                  	// #28
     b64:	b	b50 <_ZN4llvm7TGLexer13LexIdentifierEv+0x2fc>
     b68:	mov	w0, #0x1d                  	// #29
     b6c:	b	b50 <_ZN4llvm7TGLexer13LexIdentifierEv+0x2fc>
     b70:	mov	w0, #0x14                  	// #20
     b74:	b	b50 <_ZN4llvm7TGLexer13LexIdentifierEv+0x2fc>
     b78:	mov	w0, #0x15                  	// #21
     b7c:	b	b50 <_ZN4llvm7TGLexer13LexIdentifierEv+0x2fc>
     b80:	mov	w0, #0x21                  	// #33
     b84:	b	b50 <_ZN4llvm7TGLexer13LexIdentifierEv+0x2fc>
     b88:	mov	x0, x19
     b8c:	bl	20c0 <_ZN4llvm7TGLexer10LexIncludeEv>
     b90:	tbz	w0, #0, bbc <_ZN4llvm7TGLexer13LexIdentifierEv+0x368>
     b94:	mov	w0, #0x1                   	// #1
     b98:	b	b50 <_ZN4llvm7TGLexer13LexIdentifierEv+0x2fc>
     b9c:	mov	w0, #0x20                  	// #32
     ba0:	b	b50 <_ZN4llvm7TGLexer13LexIdentifierEv+0x2fc>
     ba4:	mov	w0, #0x13                  	// #19
     ba8:	b	b50 <_ZN4llvm7TGLexer13LexIdentifierEv+0x2fc>
     bac:	mov	w0, #0x1f                  	// #31
     bb0:	b	b50 <_ZN4llvm7TGLexer13LexIdentifierEv+0x2fc>
     bb4:	mov	w0, #0x22                  	// #34
     bb8:	b	b50 <_ZN4llvm7TGLexer13LexIdentifierEv+0x2fc>
     bbc:	ldp	x8, x9, [x19, #8]
     bc0:	mov	x0, x19
     bc4:	cmp	x8, x9
     bc8:	cset	w1, eq  // eq = none
     bcc:	bl	4b8 <_ZN4llvm7TGLexer8LexTokenEb>
     bd0:	str	w0, [x19, #40]
     bd4:	b	b50 <_ZN4llvm7TGLexer13LexIdentifierEv+0x2fc>
     bd8:	mov	w0, #0x17                  	// #23
     bdc:	b	b50 <_ZN4llvm7TGLexer13LexIdentifierEv+0x2fc>
     be0:	mov	w0, #0x16                  	// #22
     be4:	b	b50 <_ZN4llvm7TGLexer13LexIdentifierEv+0x2fc>
     be8:	mov	w0, #0x18                  	// #24
     bec:	b	b50 <_ZN4llvm7TGLexer13LexIdentifierEv+0x2fc>
     bf0:	mov	w0, #0x1a                  	// #26
     bf4:	b	b50 <_ZN4llvm7TGLexer13LexIdentifierEv+0x2fc>
     bf8:	mov	w0, #0x25                  	// #37
     bfc:	b	b50 <_ZN4llvm7TGLexer13LexIdentifierEv+0x2fc>

0000000000000c00 <_ZNK4llvm7TGLexer15prepIsDirectiveEv>:
     c00:	ldr	x8, [x0, #8]
     c04:	ldrb	w9, [x8]
     c08:	cmp	w9, #0x64
     c0c:	b.eq	d10 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x110>  // b.none
     c10:	cmp	w9, #0x65
     c14:	b.eq	ca0 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0xa0>  // b.none
     c18:	cmp	w9, #0x69
     c1c:	b.ne	d3c <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x13c>  // b.any
     c20:	adrp	x12, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     c24:	mov	w10, #0x2                   	// #2
     c28:	add	x12, x12, #0x0
     c2c:	sub	x13, x10, #0x1
     c30:	ldrb	w11, [x8, w13, sxtw]
     c34:	cmp	w13, #0x4
     c38:	b.hi	d98 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x198>  // b.pmore
     c3c:	ldrb	w13, [x12, w13, uxtw]
     c40:	add	x10, x10, #0x1
     c44:	cmp	w11, w13
     c48:	b.eq	c2c <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x2c>  // b.none
     c4c:	cmp	w9, #0x64
     c50:	b.eq	d10 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x110>  // b.none
     c54:	cmp	w9, #0x65
     c58:	b.eq	ca0 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0xa0>  // b.none
     c5c:	cmp	w9, #0x69
     c60:	b.ne	d3c <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x13c>  // b.any
     c64:	adrp	x12, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     c68:	mov	w10, #0x2                   	// #2
     c6c:	add	x12, x12, #0x0
     c70:	sub	x13, x10, #0x1
     c74:	ldrb	w11, [x8, w13, sxtw]
     c78:	cmp	w13, #0x5
     c7c:	b.hi	e68 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x268>  // b.pmore
     c80:	ldrb	w13, [x12, w13, uxtw]
     c84:	add	x10, x10, #0x1
     c88:	cmp	w11, w13
     c8c:	b.eq	c70 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x70>  // b.none
     c90:	cmp	w9, #0x64
     c94:	b.eq	d10 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x110>  // b.none
     c98:	cmp	w9, #0x65
     c9c:	b.ne	d3c <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x13c>  // b.any
     ca0:	adrp	x12, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     ca4:	mov	w10, #0x2                   	// #2
     ca8:	add	x12, x12, #0x0
     cac:	sub	x13, x10, #0x1
     cb0:	ldrb	w11, [x8, w13, sxtw]
     cb4:	cmp	w13, #0x3
     cb8:	b.hi	d70 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x170>  // b.pmore
     cbc:	ldrb	w13, [x12, w13, uxtw]
     cc0:	add	x10, x10, #0x1
     cc4:	cmp	w11, w13
     cc8:	b.eq	cac <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0xac>  // b.none
     ccc:	cmp	w9, #0x64
     cd0:	b.eq	d10 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x110>  // b.none
     cd4:	cmp	w9, #0x65
     cd8:	b.ne	d3c <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x13c>  // b.any
     cdc:	adrp	x12, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     ce0:	mov	w10, #0x2                   	// #2
     ce4:	add	x12, x12, #0x0
     ce8:	sub	x13, x10, #0x1
     cec:	ldrb	w11, [x8, w13, sxtw]
     cf0:	cmp	w13, #0x4
     cf4:	b.hi	e40 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x240>  // b.pmore
     cf8:	ldrb	w13, [x12, w13, uxtw]
     cfc:	add	x10, x10, #0x1
     d00:	cmp	w11, w13
     d04:	b.eq	ce8 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0xe8>  // b.none
     d08:	cmp	w9, #0x64
     d0c:	b.ne	d3c <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x13c>  // b.any
     d10:	adrp	x11, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     d14:	mov	w9, #0x2                   	// #2
     d18:	add	x11, x11, #0x0
     d1c:	sub	x12, x9, #0x1
     d20:	ldrb	w10, [x8, w12, sxtw]
     d24:	cmp	w12, #0x5
     d28:	b.hi	d44 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x144>  // b.pmore
     d2c:	ldrb	w12, [x11, w12, uxtw]
     d30:	add	x9, x9, #0x1
     d34:	cmp	w10, w12
     d38:	b.eq	d1c <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x11c>  // b.none
     d3c:	mov	w0, #0x1                   	// #1
     d40:	ret
     d44:	cmp	w10, #0x2f
     d48:	mov	w0, #0x1                   	// #1
     d4c:	b.hi	d40 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x140>  // b.pmore
     d50:	mov	w11, #0x1                   	// #1
     d54:	mov	x12, #0x2600                	// #9728
     d58:	lsl	x11, x11, x10
     d5c:	movk	x12, #0x1, lsl #32
     d60:	tst	x11, x12
     d64:	b.eq	dd0 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x1d0>  // b.none
     d68:	mov	w8, #0x4                   	// #4
     d6c:	b	dbc <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x1bc>
     d70:	cmp	w11, #0x2f
     d74:	b.hi	ccc <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0xcc>  // b.pmore
     d78:	mov	w12, #0x1                   	// #1
     d7c:	mov	x13, #0x2600                	// #9728
     d80:	lsl	x12, x12, x11
     d84:	movk	x13, #0x1, lsl #32
     d88:	tst	x12, x13
     d8c:	b.eq	df4 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x1f4>  // b.none
     d90:	mov	w8, #0x2                   	// #2
     d94:	b	dbc <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x1bc>
     d98:	cmp	w11, #0x2f
     d9c:	b.hi	c4c <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x4c>  // b.pmore
     da0:	mov	w12, #0x1                   	// #1
     da4:	mov	x13, #0x2600                	// #9728
     da8:	lsl	x12, x12, x11
     dac:	movk	x13, #0x1, lsl #32
     db0:	tst	x12, x13
     db4:	b.eq	e18 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x218>  // b.none
     db8:	mov	x8, xzr
     dbc:	lsl	x8, x8, #4
     dc0:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     dc4:	add	x9, x9, #0x0
     dc8:	ldr	w0, [x9, x8]
     dcc:	ret
     dd0:	cmp	x10, #0x2f
     dd4:	b.ne	d40 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x140>  // b.any
     dd8:	ldrb	w8, [x8, x9]
     ddc:	mov	w10, #0x4                   	// #4
     de0:	cmp	w8, #0x2a
     de4:	b.eq	e38 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x238>  // b.none
     de8:	cmp	w8, #0x2f
     dec:	b.eq	e38 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x238>  // b.none
     df0:	b	d3c <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x13c>
     df4:	cmp	x11, #0x2f
     df8:	b.ne	ccc <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0xcc>  // b.any
     dfc:	ldrb	w11, [x8, x10]
     e00:	mov	w10, #0x2                   	// #2
     e04:	cmp	w11, #0x2a
     e08:	b.eq	e38 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x238>  // b.none
     e0c:	cmp	w11, #0x2f
     e10:	b.eq	e38 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x238>  // b.none
     e14:	b	ccc <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0xcc>
     e18:	cmp	x11, #0x2f
     e1c:	b.ne	c4c <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x4c>  // b.any
     e20:	ldrb	w11, [x8, x10]
     e24:	mov	x10, xzr
     e28:	cmp	w11, #0x2a
     e2c:	b.eq	e38 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x238>  // b.none
     e30:	cmp	w11, #0x2f
     e34:	b.ne	c4c <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x4c>  // b.any
     e38:	lsl	x8, x10, #4
     e3c:	b	dc0 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x1c0>
     e40:	cmp	w11, #0x2f
     e44:	b.hi	d08 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x108>  // b.pmore
     e48:	mov	w12, #0x1                   	// #1
     e4c:	mov	x13, #0x2600                	// #9728
     e50:	lsl	x12, x12, x11
     e54:	movk	x13, #0x1, lsl #32
     e58:	tst	x12, x13
     e5c:	b.eq	e90 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x290>  // b.none
     e60:	mov	w8, #0x3                   	// #3
     e64:	b	dbc <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x1bc>
     e68:	cmp	w11, #0x2f
     e6c:	b.hi	c90 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x90>  // b.pmore
     e70:	mov	w12, #0x1                   	// #1
     e74:	mov	x13, #0x2600                	// #9728
     e78:	lsl	x12, x12, x11
     e7c:	movk	x13, #0x1, lsl #32
     e80:	tst	x12, x13
     e84:	b.eq	eb4 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x2b4>  // b.none
     e88:	mov	w8, #0x1                   	// #1
     e8c:	b	dbc <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x1bc>
     e90:	cmp	x11, #0x2f
     e94:	b.ne	d08 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x108>  // b.any
     e98:	ldrb	w11, [x8, x10]
     e9c:	mov	w10, #0x3                   	// #3
     ea0:	cmp	w11, #0x2a
     ea4:	b.eq	e38 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x238>  // b.none
     ea8:	cmp	w11, #0x2f
     eac:	b.eq	e38 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x238>  // b.none
     eb0:	b	d08 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x108>
     eb4:	cmp	x11, #0x2f
     eb8:	b.ne	c90 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x90>  // b.any
     ebc:	ldrb	w11, [x8, x10]
     ec0:	mov	w10, #0x1                   	// #1
     ec4:	cmp	w11, #0x2a
     ec8:	b.eq	e38 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x238>  // b.none
     ecc:	cmp	w11, #0x2f
     ed0:	b.eq	e38 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x238>  // b.none
     ed4:	b	c90 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x90>

0000000000000ed8 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb>:
     ed8:	sub	sp, sp, #0x80
     edc:	stp	x29, x30, [sp, #80]
     ee0:	stp	x22, x21, [sp, #96]
     ee4:	stp	x20, x19, [sp, #112]
     ee8:	add	x29, sp, #0x50
     eec:	ldr	x21, [x0, #8]
     ef0:	sub	w8, w1, #0x4c
     ef4:	cmp	w8, #0x5
     ef8:	str	x21, [x0, #32]
     efc:	b.cs	1324 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x44c>  // b.hs, b.nlast
     f00:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     f04:	add	x9, x9, #0x0
     f08:	add	x8, x9, w8, uxtw #4
     f0c:	mov	x19, x0
     f10:	ldr	x0, [x8, #8]
     f14:	mov	w20, w2
     f18:	mov	w22, w1
     f1c:	bl	0 <strlen>
     f20:	orr	w9, w22, #0x1
     f24:	add	x8, x21, x0
     f28:	cmp	w9, #0x4d
     f2c:	str	x8, [x19, #8]
     f30:	b.ne	f90 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0xb8>  // b.any
     f34:	mov	x0, x19
     f38:	bl	2550 <_ZN4llvm7TGLexer16prepLexMacroNameEv>
     f3c:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     f40:	adrp	x10, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     f44:	add	x9, x9, #0x0
     f48:	add	x10, x10, #0x0
     f4c:	cmp	w22, #0x4c
     f50:	mov	w11, #0x6                   	// #6
     f54:	csel	x9, x10, x9, eq  // eq = none
     f58:	cinc	x10, x11, ne  // ne = any
     f5c:	stp	x9, x10, [sp, #32]
     f60:	cbz	x1, 1018 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x140>
     f64:	mov	x2, x0
     f68:	mov	x8, x1
     f6c:	add	x0, x19, #0x90
     f70:	mov	x1, x2
     f74:	mov	x2, x8
     f78:	bl	0 <_ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE>
     f7c:	cmn	w0, #0x1
     f80:	b.eq	1124 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x24c>  // b.none
     f84:	ldr	w8, [x19, #152]
     f88:	sxtw	x9, w0
     f8c:	b	112c <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x254>
     f90:	cmp	w22, #0x50
     f94:	b.eq	109c <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x1c4>  // b.none
     f98:	cmp	w22, #0x4f
     f9c:	b.eq	1038 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x160>  // b.none
     fa0:	cmp	w22, #0x4e
     fa4:	b.ne	1330 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x458>  // b.any
     fa8:	ldr	x8, [x19, #184]
     fac:	ldur	x8, [x8, #-8]
     fb0:	ldp	x10, x9, [x8]
     fb4:	cmp	x10, x9
     fb8:	b.eq	11e4 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x30c>  // b.none
     fbc:	mov	x10, x9
     fc0:	ldr	w11, [x10, #-16]!
     fc4:	cmp	w11, #0x4c
     fc8:	b.ne	121c <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x344>  // b.any
     fcc:	ldurb	w9, [x9, #-12]
     fd0:	str	x10, [x8, #8]
     fd4:	ldr	x8, [x19, #184]
     fd8:	mov	w10, #0x4e                  	// #78
     fdc:	mvn	w9, w9
     fe0:	ldur	x0, [x8, #-8]
     fe4:	and	w8, w9, #0x1
     fe8:	stur	w10, [x29, #-24]
     fec:	stur	x21, [x29, #-16]
     ff0:	sturb	w8, [x29, #-20]
     ff4:	ldp	x1, x8, [x0, #8]
     ff8:	cmp	x1, x8
     ffc:	b.eq	1294 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x3bc>  // b.none
    1000:	ldur	q0, [x29, #-24]
    1004:	str	q0, [x1]
    1008:	ldr	x8, [x0, #8]
    100c:	add	x8, x8, #0x10
    1010:	str	x8, [x0, #8]
    1014:	b	129c <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x3c4>
    1018:	ldr	x8, [x19, #32]
    101c:	mov	w9, #0x503                 	// #1283
    1020:	adrp	x10, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1024:	add	x10, x10, #0x0
    1028:	sturh	w9, [x29, #-8]
    102c:	add	x9, sp, #0x20
    1030:	stp	x10, x9, [x29, #-24]
    1034:	b	12ec <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x414>
    1038:	ldr	x8, [x19, #184]
    103c:	ldur	x8, [x8, #-8]
    1040:	ldp	x9, x8, [x8]
    1044:	cmp	x9, x8
    1048:	b.eq	11f0 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x318>  // b.none
    104c:	ldur	w8, [x8, #-16]
    1050:	orr	w8, w8, #0x2
    1054:	cmp	w8, #0x4e
    1058:	b.ne	134c <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x474>  // b.any
    105c:	mov	x0, x19
    1060:	bl	2634 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv>
    1064:	tbz	w0, #0, 1258 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x380>
    1068:	ldr	x8, [x19, #184]
    106c:	ldur	x8, [x8, #-8]
    1070:	ldr	x9, [x8, #8]
    1074:	sub	x9, x9, #0x10
    1078:	str	x9, [x8, #8]
    107c:	tbz	w20, #0, 128c <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x3b4>
    1080:	mov	x0, x19
    1084:	ldp	x20, x19, [sp, #112]
    1088:	ldp	x22, x21, [sp, #96]
    108c:	ldp	x29, x30, [sp, #80]
    1090:	mov	w1, wzr
    1094:	add	sp, sp, #0x80
    1098:	b	4b8 <_ZN4llvm7TGLexer8LexTokenEb>
    109c:	mov	x0, x19
    10a0:	bl	2550 <_ZN4llvm7TGLexer16prepLexMacroNameEv>
    10a4:	stp	x0, x1, [sp, #8]
    10a8:	cbz	x1, 120c <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x334>
    10ac:	mov	x8, x0
    10b0:	sub	x9, x29, #0x18
    10b4:	mov	x2, x1
    10b8:	add	x0, x19, #0x90
    10bc:	stp	x8, x1, [x29, #-24]
    10c0:	mov	w10, #0x1                   	// #1
    10c4:	add	x3, x9, #0x10
    10c8:	mov	x1, x8
    10cc:	stur	w10, [x29, #-8]
    10d0:	bl	0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    10d4:	tbnz	w1, #0, 1108 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x230>
    10d8:	ldr	x8, [x19, #32]
    10dc:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    10e0:	add	x9, x9, #0x0
    10e4:	add	x10, sp, #0x8
    10e8:	mov	w11, #0x503                 	// #1283
    10ec:	add	x0, sp, #0x20
    10f0:	sub	x2, x29, #0x18
    10f4:	mov	w1, #0x1                   	// #1
    10f8:	stp	x9, x10, [x29, #-24]
    10fc:	str	x8, [sp, #32]
    1100:	sturh	w11, [x29, #-8]
    1104:	bl	0 <_ZN4llvm12PrintWarningENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    1108:	mov	x0, x19
    110c:	bl	2634 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv>
    1110:	tbz	w0, #0, 1268 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x390>
    1114:	tbnz	w20, #0, 12c0 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x3e8>
    1118:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    111c:	add	x8, x8, #0x0
    1120:	b	1338 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x460>
    1124:	ldr	w8, [x19, #152]
    1128:	mov	x9, x8
    112c:	cmp	x9, x8
    1130:	ldr	x9, [x19, #184]
    1134:	cset	w10, ne  // ne = any
    1138:	cmp	w22, #0x4d
    113c:	mov	w8, #0x4c                  	// #76
    1140:	cset	w11, eq  // eq = none
    1144:	csel	w21, w8, w22, eq  // eq = none
    1148:	eor	w22, w11, w10
    114c:	ldur	x0, [x9, #-8]
    1150:	stur	w21, [x29, #-24]
    1154:	sturb	w22, [x29, #-20]
    1158:	ldr	x8, [x19, #32]
    115c:	stur	x8, [x29, #-16]
    1160:	ldp	x1, x8, [x0, #8]
    1164:	cmp	x1, x8
    1168:	b.eq	1184 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x2ac>  // b.none
    116c:	ldur	q0, [x29, #-24]
    1170:	str	q0, [x1]
    1174:	ldr	x8, [x0, #8]
    1178:	add	x8, x8, #0x10
    117c:	str	x8, [x0, #8]
    1180:	b	118c <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x2b4>
    1184:	sub	x2, x29, #0x18
    1188:	bl	0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    118c:	mov	x0, x19
    1190:	bl	2634 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv>
    1194:	tbz	w0, #0, 11a4 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x2cc>
    1198:	tbz	w20, #0, 1304 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x42c>
    119c:	cbz	w22, 12ac <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x3d4>
    11a0:	b	12c0 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x3e8>
    11a4:	ldr	x8, [x19, #8]
    11a8:	mov	w9, #0x503                 	// #1283
    11ac:	adrp	x10, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    11b0:	adrp	x13, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    11b4:	add	x10, x10, #0x0
    11b8:	add	x11, sp, #0x20
    11bc:	add	x12, sp, #0x8
    11c0:	add	x13, x13, #0x0
    11c4:	strh	w9, [sp, #24]
    11c8:	mov	w9, #0x302                 	// #770
    11cc:	stp	x10, x11, [sp, #8]
    11d0:	stp	x12, x13, [x29, #-24]
    11d4:	sturh	w9, [x29, #-8]
    11d8:	stur	x8, [x29, #-32]
    11dc:	sub	x0, x29, #0x20
    11e0:	b	12f4 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x41c>
    11e4:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    11e8:	add	x8, x8, #0x0
    11ec:	b	11f8 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x320>
    11f0:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    11f4:	add	x8, x8, #0x0
    11f8:	mov	w9, #0x103                 	// #259
    11fc:	stp	x8, xzr, [x29, #-24]
    1200:	sturh	w9, [x29, #-8]
    1204:	str	x21, [sp, #8]
    1208:	b	12f0 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x418>
    120c:	ldr	x8, [x19, #32]
    1210:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1214:	add	x9, x9, #0x0
    1218:	b	1274 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x39c>
    121c:	ldur	x19, [x9, #-8]
    1220:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1224:	add	x8, x8, #0x0
    1228:	mov	w20, #0x103                 	// #259
    122c:	sub	x1, x29, #0x18
    1230:	mov	x0, x21
    1234:	stp	x8, xzr, [x29, #-24]
    1238:	sturh	w20, [x29, #-8]
    123c:	bl	0 <_ZN4llvm10PrintErrorEPKcRKNS_5TwineE>
    1240:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1244:	add	x8, x8, #0x0
    1248:	sturh	w20, [x29, #-8]
    124c:	stp	x8, xzr, [x29, #-24]
    1250:	str	x19, [sp, #8]
    1254:	b	12f0 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x418>
    1258:	ldr	x8, [x19, #8]
    125c:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1260:	add	x9, x9, #0x0
    1264:	b	12e0 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x408>
    1268:	ldr	x8, [x19, #8]
    126c:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1270:	add	x9, x9, #0x0
    1274:	stp	x9, xzr, [x29, #-24]
    1278:	mov	w9, #0x103                 	// #259
    127c:	sturh	w9, [x29, #-8]
    1280:	str	x8, [sp, #32]
    1284:	add	x0, sp, #0x20
    1288:	b	12f4 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x41c>
    128c:	mov	w21, #0x4f                  	// #79
    1290:	b	1304 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x42c>
    1294:	sub	x2, x29, #0x18
    1298:	bl	0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    129c:	mov	x0, x19
    12a0:	bl	2634 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv>
    12a4:	tbz	w0, #0, 12d4 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x3fc>
    12a8:	tbz	w20, #0, 131c <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x444>
    12ac:	mov	w1, #0x1                   	// #1
    12b0:	mov	x0, x19
    12b4:	mov	w21, #0x1                   	// #1
    12b8:	bl	2760 <_ZN4llvm7TGLexer14prepSkipRegionEb>
    12bc:	tbz	w0, #0, 1304 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x42c>
    12c0:	mov	x0, x19
    12c4:	mov	w1, wzr
    12c8:	bl	4b8 <_ZN4llvm7TGLexer8LexTokenEb>
    12cc:	mov	w21, w0
    12d0:	b	1304 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x42c>
    12d4:	ldr	x8, [x19, #8]
    12d8:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    12dc:	add	x9, x9, #0x0
    12e0:	stp	x9, xzr, [x29, #-24]
    12e4:	mov	w9, #0x103                 	// #259
    12e8:	sturh	w9, [x29, #-8]
    12ec:	str	x8, [sp, #8]
    12f0:	add	x0, sp, #0x8
    12f4:	sub	x2, x29, #0x18
    12f8:	mov	w1, #0x1                   	// #1
    12fc:	mov	w21, #0x1                   	// #1
    1300:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    1304:	mov	w0, w21
    1308:	ldp	x20, x19, [sp, #112]
    130c:	ldp	x22, x21, [sp, #96]
    1310:	ldp	x29, x30, [sp, #80]
    1314:	add	sp, sp, #0x80
    1318:	ret
    131c:	mov	w21, #0x4e                  	// #78
    1320:	b	1304 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x42c>
    1324:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1328:	add	x8, x8, #0x0
    132c:	b	1338 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x460>
    1330:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1334:	add	x8, x8, #0x0
    1338:	mov	w9, #0x103                 	// #259
    133c:	sub	x0, x29, #0x18
    1340:	stp	x8, xzr, [x29, #-24]
    1344:	sturh	w9, [x29, #-8]
    1348:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>
    134c:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1350:	add	x8, x8, #0x0
    1354:	b	1338 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x460>

0000000000001358 <_ZN4llvm7TGLexer15SkipBCPLCommentEv>:
    1358:	ldr	x8, [x0, #8]
    135c:	b	1370 <_ZN4llvm7TGLexer15SkipBCPLCommentEv+0x18>
    1360:	ldp	x9, x10, [x0, #16]
    1364:	add	x9, x9, x10
    1368:	cmp	x8, x9
    136c:	b.eq	1390 <_ZN4llvm7TGLexer15SkipBCPLCommentEv+0x38>  // b.none
    1370:	add	x8, x8, #0x1
    1374:	str	x8, [x0, #8]
    1378:	ldrb	w9, [x8]
    137c:	cbz	w9, 1360 <_ZN4llvm7TGLexer15SkipBCPLCommentEv+0x8>
    1380:	cmp	w9, #0xa
    1384:	b.eq	1390 <_ZN4llvm7TGLexer15SkipBCPLCommentEv+0x38>  // b.none
    1388:	cmp	w9, #0xd
    138c:	b.ne	1370 <_ZN4llvm7TGLexer15SkipBCPLCommentEv+0x18>  // b.any
    1390:	ret

0000000000001394 <_ZN4llvm7TGLexer12SkipCCommentEv>:
    1394:	sub	sp, sp, #0x30
    1398:	stp	x29, x30, [sp, #32]
    139c:	add	x29, sp, #0x20
    13a0:	ldr	x9, [x0, #8]
    13a4:	mov	w8, #0x1                   	// #1
    13a8:	add	x10, x9, #0x1
    13ac:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    13b0:	add	x9, x9, #0x0
    13b4:	str	x10, [x0, #8]
    13b8:	b	13cc <_ZN4llvm7TGLexer12SkipCCommentEv+0x38>
    13bc:	ldp	x12, x13, [x0, #16]
    13c0:	add	x12, x12, x13
    13c4:	cmp	x11, x12
    13c8:	b.eq	145c <_ZN4llvm7TGLexer12SkipCCommentEv+0xc8>  // b.none
    13cc:	mov	x11, x10
    13d0:	add	x10, x10, #0x1
    13d4:	str	x10, [x0, #8]
    13d8:	ldrb	w12, [x11]
    13dc:	cmp	w12, #0x2f
    13e0:	b.hi	13cc <_ZN4llvm7TGLexer12SkipCCommentEv+0x38>  // b.pmore
    13e4:	adr	x13, 13bc <_ZN4llvm7TGLexer12SkipCCommentEv+0x28>
    13e8:	ldrb	w14, [x9, x12]
    13ec:	add	x13, x13, x14, lsl #2
    13f0:	br	x13
    13f4:	ldrb	w13, [x10]
    13f8:	cmp	w13, #0xd
    13fc:	b.eq	1408 <_ZN4llvm7TGLexer12SkipCCommentEv+0x74>  // b.none
    1400:	cmp	w13, #0xa
    1404:	b.ne	13cc <_ZN4llvm7TGLexer12SkipCCommentEv+0x38>  // b.any
    1408:	cmp	w13, w12
    140c:	b.eq	13cc <_ZN4llvm7TGLexer12SkipCCommentEv+0x38>  // b.none
    1410:	add	x10, x11, #0x2
    1414:	str	x10, [x0, #8]
    1418:	b	13cc <_ZN4llvm7TGLexer12SkipCCommentEv+0x38>
    141c:	ldrb	w12, [x10]
    1420:	cmp	w12, #0x2a
    1424:	b.ne	13cc <_ZN4llvm7TGLexer12SkipCCommentEv+0x38>  // b.any
    1428:	add	x10, x11, #0x2
    142c:	str	x10, [x0, #8]
    1430:	add	w8, w8, #0x1
    1434:	b	13cc <_ZN4llvm7TGLexer12SkipCCommentEv+0x38>
    1438:	ldrb	w12, [x10]
    143c:	cmp	w12, #0x2f
    1440:	b.ne	13cc <_ZN4llvm7TGLexer12SkipCCommentEv+0x38>  // b.any
    1444:	add	x10, x11, #0x2
    1448:	subs	w8, w8, #0x1
    144c:	str	x10, [x0, #8]
    1450:	b.ne	13cc <_ZN4llvm7TGLexer12SkipCCommentEv+0x38>  // b.any
    1454:	mov	w0, wzr
    1458:	b	1484 <_ZN4llvm7TGLexer12SkipCCommentEv+0xf0>
    145c:	str	x11, [x0, #8]
    1460:	ldr	x0, [x0, #32]
    1464:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1468:	add	x8, x8, #0x0
    146c:	stp	x8, xzr, [sp, #8]
    1470:	mov	w8, #0x103                 	// #259
    1474:	add	x1, sp, #0x8
    1478:	strh	w8, [sp, #24]
    147c:	bl	0 <_ZN4llvm10PrintErrorEPKcRKNS_5TwineE>
    1480:	mov	w0, #0x1                   	// #1
    1484:	ldp	x29, x30, [sp, #32]
    1488:	add	sp, sp, #0x30
    148c:	ret

0000000000001490 <_ZN4llvm7TGLexer9LexNumberEv>:
    1490:	sub	sp, sp, #0x50
    1494:	stp	x29, x30, [sp, #32]
    1498:	stp	x22, x21, [sp, #48]
    149c:	stp	x20, x19, [sp, #64]
    14a0:	add	x29, sp, #0x20
    14a4:	ldr	x20, [x0, #8]
    14a8:	mov	x19, x0
    14ac:	ldurb	w8, [x20, #-1]
    14b0:	ldrb	w9, [x20]
    14b4:	cmp	w8, #0x30
    14b8:	b.ne	1514 <_ZN4llvm7TGLexer9LexNumberEv+0x84>  // b.any
    14bc:	cmp	w9, #0x78
    14c0:	b.eq	1570 <_ZN4llvm7TGLexer9LexNumberEv+0xe0>  // b.none
    14c4:	cmp	w9, #0x62
    14c8:	b.ne	1514 <_ZN4llvm7TGLexer9LexNumberEv+0x84>  // b.any
    14cc:	mov	x8, xzr
    14d0:	add	x9, x20, #0x1
    14d4:	add	x10, x9, x8
    14d8:	str	x10, [x19, #8]
    14dc:	ldrb	w10, [x9, x8]
    14e0:	add	x8, x8, #0x1
    14e4:	orr	w10, w10, #0x1
    14e8:	cmp	w10, #0x31
    14ec:	b.eq	14d4 <_ZN4llvm7TGLexer9LexNumberEv+0x44>  // b.none
    14f0:	cmp	x8, #0x1
    14f4:	b.ne	1630 <_ZN4llvm7TGLexer9LexNumberEv+0x1a0>  // b.any
    14f8:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    14fc:	add	x9, x9, #0x0
    1500:	mov	w10, #0x103                 	// #259
    1504:	sub	x8, x20, #0x1
    1508:	stp	x9, xzr, [sp]
    150c:	strh	w10, [sp, #16]
    1510:	b	160c <_ZN4llvm7TGLexer9LexNumberEv+0x17c>
    1514:	sub	w9, w9, #0x30
    1518:	cmp	w9, #0x9
    151c:	b.hi	153c <_ZN4llvm7TGLexer9LexNumberEv+0xac>  // b.pmore
    1520:	add	x8, x20, #0x1
    1524:	str	x8, [x19, #8]
    1528:	ldrb	w9, [x8], #1
    152c:	sub	w9, w9, #0x30
    1530:	cmp	w9, #0xa
    1534:	b.cc	1524 <_ZN4llvm7TGLexer9LexNumberEv+0x94>  // b.lo, b.ul, b.last
    1538:	b	1554 <_ZN4llvm7TGLexer9LexNumberEv+0xc4>
    153c:	cmp	w8, #0x2d
    1540:	b.eq	1628 <_ZN4llvm7TGLexer9LexNumberEv+0x198>  // b.none
    1544:	cmp	w8, #0x2b
    1548:	b.ne	1554 <_ZN4llvm7TGLexer9LexNumberEv+0xc4>  // b.any
    154c:	mov	w19, #0x3                   	// #3
    1550:	b	1648 <_ZN4llvm7TGLexer9LexNumberEv+0x1b8>
    1554:	ldr	x0, [x19, #32]
    1558:	mov	w2, #0xa                   	// #10
    155c:	mov	x1, xzr
    1560:	bl	0 <strtoll>
    1564:	str	x0, [x19, #80]
    1568:	mov	w19, #0x46                  	// #70
    156c:	b	1648 <_ZN4llvm7TGLexer9LexNumberEv+0x1b8>
    1570:	mov	x21, xzr
    1574:	add	x22, x20, #0x1
    1578:	add	x8, x22, x21
    157c:	str	x8, [x19, #8]
    1580:	ldrb	w0, [x22, x21]
    1584:	bl	0 <isxdigit>
    1588:	add	x21, x21, #0x1
    158c:	cbnz	w0, 1578 <_ZN4llvm7TGLexer9LexNumberEv+0xe8>
    1590:	cmp	x21, #0x1
    1594:	b.eq	15f4 <_ZN4llvm7TGLexer9LexNumberEv+0x164>  // b.none
    1598:	add	x20, x20, #0x1
    159c:	bl	0 <__errno_location>
    15a0:	mov	x21, x0
    15a4:	str	wzr, [x0]
    15a8:	mov	w2, #0x10                  	// #16
    15ac:	mov	x0, x20
    15b0:	mov	x1, xzr
    15b4:	bl	0 <strtoll>
    15b8:	str	x0, [x19, #80]
    15bc:	ldr	w8, [x21]
    15c0:	cmp	w8, #0x22
    15c4:	b.ne	15ec <_ZN4llvm7TGLexer9LexNumberEv+0x15c>  // b.any
    15c8:	mov	w2, #0x10                  	// #16
    15cc:	mov	x0, x20
    15d0:	mov	x1, xzr
    15d4:	str	wzr, [x21]
    15d8:	bl	0 <strtoull>
    15dc:	str	x0, [x19, #80]
    15e0:	ldr	w8, [x21]
    15e4:	cmp	w8, #0x22
    15e8:	b.eq	1660 <_ZN4llvm7TGLexer9LexNumberEv+0x1d0>  // b.none
    15ec:	cmp	w8, #0x16
    15f0:	b.ne	1568 <_ZN4llvm7TGLexer9LexNumberEv+0xd8>  // b.any
    15f4:	ldr	x8, [x19, #32]
    15f8:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    15fc:	add	x9, x9, #0x0
    1600:	stp	x9, xzr, [sp]
    1604:	mov	w9, #0x103                 	// #259
    1608:	strh	w9, [sp, #16]
    160c:	sub	x0, x29, #0x8
    1610:	mov	x2, sp
    1614:	mov	w1, #0x1                   	// #1
    1618:	stur	x8, [x29, #-8]
    161c:	mov	w19, #0x1                   	// #1
    1620:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    1624:	b	1648 <_ZN4llvm7TGLexer9LexNumberEv+0x1b8>
    1628:	mov	w19, #0x2                   	// #2
    162c:	b	1648 <_ZN4llvm7TGLexer9LexNumberEv+0x1b8>
    1630:	add	x0, x20, #0x1
    1634:	mov	w2, #0x2                   	// #2
    1638:	mov	x1, xzr
    163c:	bl	0 <strtoll>
    1640:	str	x0, [x19, #80]
    1644:	mov	w19, #0x47                  	// #71
    1648:	mov	w0, w19
    164c:	ldp	x20, x19, [sp, #64]
    1650:	ldp	x22, x21, [sp, #48]
    1654:	ldp	x29, x30, [sp, #32]
    1658:	add	sp, sp, #0x50
    165c:	ret
    1660:	ldr	x8, [x19, #32]
    1664:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1668:	add	x9, x9, #0x0
    166c:	b	1600 <_ZN4llvm7TGLexer9LexNumberEv+0x170>

0000000000001670 <_ZN4llvm7TGLexer9LexStringEv>:
    1670:	sub	sp, sp, #0x80
    1674:	stp	x29, x30, [sp, #32]
    1678:	stp	x28, x27, [sp, #48]
    167c:	stp	x26, x25, [sp, #64]
    1680:	stp	x24, x23, [sp, #80]
    1684:	stp	x22, x21, [sp, #96]
    1688:	stp	x20, x19, [sp, #112]
    168c:	add	x29, sp, #0x20
    1690:	ldr	x2, [x0, #56]
    1694:	ldr	x22, [x0, #8]
    1698:	add	x20, x0, #0x30
    169c:	adrp	x3, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    16a0:	mov	x19, x0
    16a4:	add	x3, x3, #0x0
    16a8:	mov	x0, x20
    16ac:	mov	x1, xzr
    16b0:	mov	x4, xzr
    16b4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    16b8:	adrp	x24, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    16bc:	adrp	x27, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    16c0:	add	x23, x19, #0x40
    16c4:	add	x24, x24, #0x0
    16c8:	mov	w26, #0xa                   	// #10
    16cc:	add	x27, x27, #0x0
    16d0:	b	1700 <_ZN4llvm7TGLexer9LexStringEv+0x90>
    16d4:	mov	w4, #0x1                   	// #1
    16d8:	mov	x0, x20
    16dc:	mov	x1, x21
    16e0:	mov	x2, xzr
    16e4:	mov	x3, xzr
    16e8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>
    16ec:	ldr	x9, [x20]
    16f0:	strb	w25, [x9, x21]
    16f4:	ldr	x8, [x19, #48]
    16f8:	str	x28, [x19, #56]
    16fc:	strb	wzr, [x8, x28]
    1700:	ldr	x8, [x19, #8]
    1704:	ldrb	w10, [x8]
    1708:	cmp	w10, #0x22
    170c:	b.hi	173c <_ZN4llvm7TGLexer9LexStringEv+0xcc>  // b.pmore
    1710:	adr	x9, 1720 <_ZN4llvm7TGLexer9LexStringEv+0xb0>
    1714:	ldrb	w11, [x27, x10]
    1718:	add	x9, x9, x11, lsl #2
    171c:	br	x9
    1720:	ldp	x9, x10, [x19, #16]
    1724:	add	x9, x9, x10
    1728:	cmp	x8, x9
    172c:	b.eq	18e4 <_ZN4llvm7TGLexer9LexStringEv+0x274>  // b.none
    1730:	add	x9, x8, #0x1
    1734:	str	x9, [x19, #8]
    1738:	b	1774 <_ZN4llvm7TGLexer9LexStringEv+0x104>
    173c:	add	x9, x8, #0x1
    1740:	cmp	w10, #0x5c
    1744:	str	x9, [x19, #8]
    1748:	b.ne	1774 <_ZN4llvm7TGLexer9LexStringEv+0x104>  // b.any
    174c:	ldrb	w10, [x9]
    1750:	cmp	w10, #0x5b
    1754:	b.le	17a8 <_ZN4llvm7TGLexer9LexStringEv+0x138>
    1758:	cmp	w10, #0x74
    175c:	b.eq	17d4 <_ZN4llvm7TGLexer9LexStringEv+0x164>  // b.none
    1760:	cmp	w10, #0x6e
    1764:	b.eq	1818 <_ZN4llvm7TGLexer9LexStringEv+0x1a8>  // b.none
    1768:	cmp	w10, #0x5c
    176c:	b.eq	17c0 <_ZN4llvm7TGLexer9LexStringEv+0x150>  // b.none
    1770:	b	18c8 <_ZN4llvm7TGLexer9LexStringEv+0x258>
    1774:	ldp	x9, x21, [x19, #48]
    1778:	ldrb	w25, [x8]
    177c:	cmp	x9, x23
    1780:	add	x28, x21, #0x1
    1784:	b.eq	1798 <_ZN4llvm7TGLexer9LexStringEv+0x128>  // b.none
    1788:	ldr	x8, [x19, #64]
    178c:	cmp	x28, x8
    1790:	b.ls	16f0 <_ZN4llvm7TGLexer9LexStringEv+0x80>  // b.plast
    1794:	b	16d4 <_ZN4llvm7TGLexer9LexStringEv+0x64>
    1798:	mov	w8, #0xf                   	// #15
    179c:	cmp	x28, x8
    17a0:	b.ls	16f0 <_ZN4llvm7TGLexer9LexStringEv+0x80>  // b.plast
    17a4:	b	16d4 <_ZN4llvm7TGLexer9LexStringEv+0x64>
    17a8:	cmp	w10, #0x27
    17ac:	b.hi	18c8 <_ZN4llvm7TGLexer9LexStringEv+0x258>  // b.pmore
    17b0:	adr	x11, 17c0 <_ZN4llvm7TGLexer9LexStringEv+0x150>
    17b4:	ldrb	w12, [x24, x10]
    17b8:	add	x11, x11, x12, lsl #2
    17bc:	br	x11
    17c0:	add	x10, x8, #0x2
    17c4:	ldp	x9, x21, [x19, #48]
    17c8:	str	x10, [x19, #8]
    17cc:	ldrb	w25, [x8, #1]
    17d0:	b	177c <_ZN4llvm7TGLexer9LexStringEv+0x10c>
    17d4:	ldp	x8, x21, [x19, #48]
    17d8:	cmp	x8, x23
    17dc:	add	x28, x21, #0x1
    17e0:	b.eq	1870 <_ZN4llvm7TGLexer9LexStringEv+0x200>  // b.none
    17e4:	ldr	x9, [x19, #64]
    17e8:	cmp	x28, x9
    17ec:	b.ls	180c <_ZN4llvm7TGLexer9LexStringEv+0x19c>  // b.plast
    17f0:	mov	w4, #0x1                   	// #1
    17f4:	mov	x0, x20
    17f8:	mov	x1, x21
    17fc:	mov	x2, xzr
    1800:	mov	x3, xzr
    1804:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>
    1808:	ldr	x8, [x20]
    180c:	mov	w9, #0x9                   	// #9
    1810:	strb	w9, [x8, x21]
    1814:	b	1854 <_ZN4llvm7TGLexer9LexStringEv+0x1e4>
    1818:	ldp	x8, x21, [x19, #48]
    181c:	cmp	x8, x23
    1820:	add	x28, x21, #0x1
    1824:	b.eq	1880 <_ZN4llvm7TGLexer9LexStringEv+0x210>  // b.none
    1828:	ldr	x9, [x19, #64]
    182c:	cmp	x28, x9
    1830:	b.ls	1850 <_ZN4llvm7TGLexer9LexStringEv+0x1e0>  // b.plast
    1834:	mov	w4, #0x1                   	// #1
    1838:	mov	x0, x20
    183c:	mov	x1, x21
    1840:	mov	x2, xzr
    1844:	mov	x3, xzr
    1848:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>
    184c:	ldr	x8, [x20]
    1850:	strb	w26, [x8, x21]
    1854:	ldr	x8, [x19, #48]
    1858:	str	x28, [x19, #56]
    185c:	strb	wzr, [x8, x28]
    1860:	ldr	x8, [x19, #8]
    1864:	add	x8, x8, #0x1
    1868:	str	x8, [x19, #8]
    186c:	b	1700 <_ZN4llvm7TGLexer9LexStringEv+0x90>
    1870:	mov	w9, #0xf                   	// #15
    1874:	cmp	x28, x9
    1878:	b.hi	17f0 <_ZN4llvm7TGLexer9LexStringEv+0x180>  // b.pmore
    187c:	b	180c <_ZN4llvm7TGLexer9LexStringEv+0x19c>
    1880:	mov	w9, #0xf                   	// #15
    1884:	cmp	x28, x9
    1888:	b.hi	1834 <_ZN4llvm7TGLexer9LexStringEv+0x1c4>  // b.pmore
    188c:	b	1850 <_ZN4llvm7TGLexer9LexStringEv+0x1e0>
    1890:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1894:	add	x8, x8, #0x0
    1898:	b	18ec <_ZN4llvm7TGLexer9LexStringEv+0x27c>
    189c:	add	x8, x8, #0x1
    18a0:	str	x8, [x19, #8]
    18a4:	mov	w19, #0x49                  	// #73
    18a8:	b	1910 <_ZN4llvm7TGLexer9LexStringEv+0x2a0>
    18ac:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    18b0:	add	x8, x8, #0x0
    18b4:	b	18d0 <_ZN4llvm7TGLexer9LexStringEv+0x260>
    18b8:	ldp	x8, x10, [x19, #16]
    18bc:	add	x8, x8, x10
    18c0:	cmp	x9, x8
    18c4:	b.eq	18e4 <_ZN4llvm7TGLexer9LexStringEv+0x274>  // b.none
    18c8:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    18cc:	add	x8, x8, #0x0
    18d0:	mov	w10, #0x103                 	// #259
    18d4:	stp	x8, xzr, [sp]
    18d8:	strh	w10, [sp, #16]
    18dc:	stur	x9, [x29, #-8]
    18e0:	b	18fc <_ZN4llvm7TGLexer9LexStringEv+0x28c>
    18e4:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    18e8:	add	x8, x8, #0x0
    18ec:	mov	w9, #0x103                 	// #259
    18f0:	stp	x8, xzr, [sp]
    18f4:	strh	w9, [sp, #16]
    18f8:	stur	x22, [x29, #-8]
    18fc:	sub	x0, x29, #0x8
    1900:	mov	x2, sp
    1904:	mov	w1, #0x1                   	// #1
    1908:	mov	w19, #0x1                   	// #1
    190c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    1910:	mov	w0, w19
    1914:	ldp	x20, x19, [sp, #112]
    1918:	ldp	x22, x21, [sp, #96]
    191c:	ldp	x24, x23, [sp, #80]
    1920:	ldp	x26, x25, [sp, #64]
    1924:	ldp	x28, x27, [sp, #48]
    1928:	ldp	x29, x30, [sp, #32]
    192c:	add	sp, sp, #0x80
    1930:	ret

0000000000001934 <_ZN4llvm7TGLexer10LexVarNameEv>:
    1934:	sub	sp, sp, #0x50
    1938:	stp	x29, x30, [sp, #32]
    193c:	stp	x22, x21, [sp, #48]
    1940:	stp	x20, x19, [sp, #64]
    1944:	add	x29, sp, #0x20
    1948:	ldr	x19, [x0, #8]
    194c:	mov	x20, x0
    1950:	ldrb	w21, [x19]
    1954:	mov	w0, w21
    1958:	bl	0 <isalpha>
    195c:	cmp	w21, #0x5f
    1960:	b.eq	199c <_ZN4llvm7TGLexer10LexVarNameEv+0x68>  // b.none
    1964:	cbnz	w0, 199c <_ZN4llvm7TGLexer10LexVarNameEv+0x68>
    1968:	ldr	x8, [x20, #32]
    196c:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1970:	add	x9, x9, #0x0
    1974:	stp	x9, xzr, [sp]
    1978:	mov	w9, #0x103                 	// #259
    197c:	sub	x0, x29, #0x8
    1980:	mov	x2, sp
    1984:	mov	w1, #0x1                   	// #1
    1988:	strh	w9, [sp, #16]
    198c:	stur	x8, [x29, #-8]
    1990:	mov	w19, #0x1                   	// #1
    1994:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    1998:	b	19e8 <_ZN4llvm7TGLexer10LexVarNameEv+0xb4>
    199c:	add	x22, x19, #0x1
    19a0:	str	x22, [x20, #8]
    19a4:	ldrb	w21, [x22], #1
    19a8:	mov	w0, w21
    19ac:	bl	0 <isalpha>
    19b0:	cmp	w21, #0x5f
    19b4:	b.eq	19a0 <_ZN4llvm7TGLexer10LexVarNameEv+0x6c>  // b.none
    19b8:	sub	w8, w21, #0x30
    19bc:	cbnz	w0, 19a0 <_ZN4llvm7TGLexer10LexVarNameEv+0x6c>
    19c0:	cmp	w8, #0xa
    19c4:	b.cc	19a0 <_ZN4llvm7TGLexer10LexVarNameEv+0x6c>  // b.lo, b.ul, b.last
    19c8:	ldr	x2, [x20, #56]
    19cc:	mvn	x8, x19
    19d0:	add	x0, x20, #0x30
    19d4:	add	x4, x8, x22
    19d8:	mov	x1, xzr
    19dc:	mov	x3, x19
    19e0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    19e4:	mov	w19, #0x4a                  	// #74
    19e8:	mov	w0, w19
    19ec:	ldp	x20, x19, [sp, #64]
    19f0:	ldp	x22, x21, [sp, #48]
    19f4:	ldp	x29, x30, [sp, #32]
    19f8:	add	sp, sp, #0x50
    19fc:	ret

0000000000001a00 <_ZN4llvm7TGLexer10LexBracketEv>:
    1a00:	sub	sp, sp, #0x40
    1a04:	stp	x29, x30, [sp, #32]
    1a08:	str	x19, [sp, #48]
    1a0c:	add	x29, sp, #0x20
    1a10:	ldr	x8, [x0, #8]
    1a14:	ldrb	w9, [x8]
    1a18:	cmp	w9, #0x7b
    1a1c:	b.ne	1b60 <_ZN4llvm7TGLexer10LexBracketEv+0x160>  // b.any
    1a20:	add	x3, x8, #0x1
    1a24:	mov	x10, x3
    1a28:	str	x3, [x0, #8]
    1a2c:	b	1a44 <_ZN4llvm7TGLexer10LexBracketEv+0x44>
    1a30:	ldp	x10, x12, [x0, #16]
    1a34:	add	x10, x10, x12
    1a38:	cmp	x9, x10
    1a3c:	mov	x10, x11
    1a40:	b.eq	1b28 <_ZN4llvm7TGLexer10LexBracketEv+0x128>  // b.none
    1a44:	add	x11, x10, #0x1
    1a48:	str	x11, [x0, #8]
    1a4c:	ldrb	w12, [x10]
    1a50:	mov	x9, x10
    1a54:	cmp	w12, #0xc
    1a58:	b.gt	1a70 <_ZN4llvm7TGLexer10LexBracketEv+0x70>
    1a5c:	cbz	w12, 1a30 <_ZN4llvm7TGLexer10LexBracketEv+0x30>
    1a60:	cmp	w12, #0xa
    1a64:	mov	x10, x11
    1a68:	b.ne	1a44 <_ZN4llvm7TGLexer10LexBracketEv+0x44>  // b.any
    1a6c:	b	1aa8 <_ZN4llvm7TGLexer10LexBracketEv+0xa8>
    1a70:	cmp	w12, #0xd
    1a74:	b.eq	1aa8 <_ZN4llvm7TGLexer10LexBracketEv+0xa8>  // b.none
    1a78:	cmp	w12, #0x7d
    1a7c:	mov	x10, x11
    1a80:	b.ne	1a44 <_ZN4llvm7TGLexer10LexBracketEv+0x44>  // b.any
    1a84:	add	x10, x9, #0x2
    1a88:	str	x10, [x0, #8]
    1a8c:	ldrb	w12, [x9, #1]
    1a90:	cmp	w12, #0xc
    1a94:	b.gt	1ad8 <_ZN4llvm7TGLexer10LexBracketEv+0xd8>
    1a98:	cbz	w12, 1b14 <_ZN4llvm7TGLexer10LexBracketEv+0x114>
    1a9c:	cmp	w12, #0xa
    1aa0:	b.ne	1a44 <_ZN4llvm7TGLexer10LexBracketEv+0x44>  // b.any
    1aa4:	b	1aec <_ZN4llvm7TGLexer10LexBracketEv+0xec>
    1aa8:	ldrb	w13, [x11]
    1aac:	cmp	w13, #0xd
    1ab0:	b.eq	1ac0 <_ZN4llvm7TGLexer10LexBracketEv+0xc0>  // b.none
    1ab4:	cmp	w13, #0xa
    1ab8:	mov	x10, x11
    1abc:	b.ne	1a44 <_ZN4llvm7TGLexer10LexBracketEv+0x44>  // b.any
    1ac0:	cmp	w13, w12
    1ac4:	mov	x10, x11
    1ac8:	b.eq	1a44 <_ZN4llvm7TGLexer10LexBracketEv+0x44>  // b.none
    1acc:	add	x10, x9, #0x2
    1ad0:	str	x10, [x0, #8]
    1ad4:	b	1a44 <_ZN4llvm7TGLexer10LexBracketEv+0x44>
    1ad8:	cmp	w12, #0xd
    1adc:	b.eq	1aec <_ZN4llvm7TGLexer10LexBracketEv+0xec>  // b.none
    1ae0:	cmp	w12, #0x5d
    1ae4:	b.ne	1a44 <_ZN4llvm7TGLexer10LexBracketEv+0x44>  // b.any
    1ae8:	b	1b68 <_ZN4llvm7TGLexer10LexBracketEv+0x168>
    1aec:	ldrb	w11, [x10]
    1af0:	cmp	w11, #0xd
    1af4:	b.eq	1b00 <_ZN4llvm7TGLexer10LexBracketEv+0x100>  // b.none
    1af8:	cmp	w11, #0xa
    1afc:	b.ne	1a44 <_ZN4llvm7TGLexer10LexBracketEv+0x44>  // b.any
    1b00:	cmp	w11, w12
    1b04:	b.eq	1a44 <_ZN4llvm7TGLexer10LexBracketEv+0x44>  // b.none
    1b08:	add	x10, x9, #0x3
    1b0c:	str	x10, [x0, #8]
    1b10:	b	1a44 <_ZN4llvm7TGLexer10LexBracketEv+0x44>
    1b14:	ldp	x9, x12, [x0, #16]
    1b18:	add	x9, x9, x12
    1b1c:	cmp	x11, x9
    1b20:	mov	x9, x11
    1b24:	b.ne	1a44 <_ZN4llvm7TGLexer10LexBracketEv+0x44>  // b.any
    1b28:	str	x9, [x0, #8]
    1b2c:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1b30:	sub	x8, x8, #0x1
    1b34:	add	x9, x9, #0x0
    1b38:	mov	w10, #0x103                 	// #259
    1b3c:	add	x0, x29, #0x18
    1b40:	add	x2, sp, #0x8
    1b44:	mov	w1, #0x1                   	// #1
    1b48:	stp	x9, xzr, [sp, #8]
    1b4c:	strh	w10, [sp, #24]
    1b50:	str	x8, [x29, #24]
    1b54:	mov	w19, #0x1                   	// #1
    1b58:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    1b5c:	b	1b80 <_ZN4llvm7TGLexer10LexBracketEv+0x180>
    1b60:	mov	w19, #0x4                   	// #4
    1b64:	b	1b80 <_ZN4llvm7TGLexer10LexBracketEv+0x180>
    1b68:	ldr	x2, [x0, #56]
    1b6c:	add	x0, x0, #0x30
    1b70:	sub	x4, x9, x3
    1b74:	mov	x1, xzr
    1b78:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    1b7c:	mov	w19, #0x4b                  	// #75
    1b80:	mov	w0, w19
    1b84:	ldr	x19, [sp, #48]
    1b88:	ldp	x29, x30, [sp, #32]
    1b8c:	add	sp, sp, #0x40
    1b90:	ret

0000000000001b94 <_ZN4llvm7TGLexer10LexExclaimEv>:
    1b94:	sub	sp, sp, #0x50
    1b98:	stp	x29, x30, [sp, #32]
    1b9c:	str	x21, [sp, #48]
    1ba0:	stp	x20, x19, [sp, #64]
    1ba4:	add	x29, sp, #0x20
    1ba8:	ldr	x20, [x0, #8]
    1bac:	mov	x19, x0
    1bb0:	ldrb	w0, [x20]
    1bb4:	bl	0 <isalpha>
    1bb8:	cbz	w0, 1c80 <_ZN4llvm7TGLexer10LexExclaimEv+0xec>
    1bbc:	add	x21, x20, #0x1
    1bc0:	str	x21, [x19, #8]
    1bc4:	ldrb	w0, [x21], #1
    1bc8:	bl	0 <isalpha>
    1bcc:	cbnz	w0, 1bc0 <_ZN4llvm7TGLexer10LexExclaimEv+0x2c>
    1bd0:	sub	x8, x21, x20
    1bd4:	sub	x8, x8, #0x3
    1bd8:	cmp	x8, #0x8
    1bdc:	b.hi	1fb0 <_ZN4llvm7TGLexer10LexExclaimEv+0x41c>  // b.pmore
    1be0:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1be4:	add	x9, x9, #0x0
    1be8:	adr	x10, 1bf8 <_ZN4llvm7TGLexer10LexExclaimEv+0x64>
    1bec:	ldrb	w11, [x9, x8]
    1bf0:	add	x10, x10, x11, lsl #2
    1bf4:	br	x10
    1bf8:	ldrh	w8, [x20]
    1bfc:	mov	w9, #0x7165                	// #29029
    1c00:	cmp	w8, w9
    1c04:	b.eq	1ff8 <_ZN4llvm7TGLexer10LexExclaimEv+0x464>  // b.none
    1c08:	ldrh	w8, [x20]
    1c0c:	mov	w9, #0x656e                	// #25966
    1c10:	cmp	w8, w9
    1c14:	b.eq	2028 <_ZN4llvm7TGLexer10LexExclaimEv+0x494>  // b.none
    1c18:	ldrh	w8, [x20]
    1c1c:	mov	w9, #0x656c                	// #25964
    1c20:	cmp	w8, w9
    1c24:	b.eq	2048 <_ZN4llvm7TGLexer10LexExclaimEv+0x4b4>  // b.none
    1c28:	ldrh	w8, [x20]
    1c2c:	mov	w9, #0x746c                	// #29804
    1c30:	cmp	w8, w9
    1c34:	b.eq	2068 <_ZN4llvm7TGLexer10LexExclaimEv+0x4d4>  // b.none
    1c38:	ldrh	w8, [x20]
    1c3c:	mov	w9, #0x6567                	// #25959
    1c40:	cmp	w8, w9
    1c44:	b.eq	2088 <_ZN4llvm7TGLexer10LexExclaimEv+0x4f4>  // b.none
    1c48:	ldrh	w8, [x20]
    1c4c:	mov	w9, #0x7467                	// #29799
    1c50:	cmp	w8, w9
    1c54:	b.eq	2098 <_ZN4llvm7TGLexer10LexExclaimEv+0x504>  // b.none
    1c58:	ldrh	w8, [x20]
    1c5c:	mov	w9, #0x6669                	// #26217
    1c60:	cmp	w8, w9
    1c64:	b.eq	20a8 <_ZN4llvm7TGLexer10LexExclaimEv+0x514>  // b.none
    1c68:	ldrh	w8, [x20]
    1c6c:	mov	w9, #0x726f                	// #29295
    1c70:	cmp	w8, w9
    1c74:	b.ne	1fb0 <_ZN4llvm7TGLexer10LexExclaimEv+0x41c>  // b.any
    1c78:	mov	w19, #0x2b                  	// #43
    1c7c:	b	1fe0 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    1c80:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1c84:	sub	x8, x20, #0x1
    1c88:	add	x9, x9, #0x0
    1c8c:	b	1fbc <_ZN4llvm7TGLexer10LexExclaimEv+0x428>
    1c90:	ldrh	w8, [x20]
    1c94:	ldrb	w9, [x20, #2]
    1c98:	mov	w10, #0x7369                	// #29545
    1c9c:	mov	w11, #0x61                  	// #97
    1ca0:	eor	w8, w8, w10
    1ca4:	eor	w9, w9, w11
    1ca8:	orr	w8, w8, w9
    1cac:	tst	w8, #0xffff
    1cb0:	b.eq	2000 <_ZN4llvm7TGLexer10LexExclaimEv+0x46c>  // b.none
    1cb4:	ldrh	w8, [x20]
    1cb8:	ldrb	w9, [x20, #2]
    1cbc:	mov	w10, #0x6f63                	// #28515
    1cc0:	mov	w11, #0x6e                  	// #110
    1cc4:	eor	w8, w8, w10
    1cc8:	eor	w9, w9, w11
    1ccc:	orr	w8, w8, w9
    1cd0:	tst	w8, #0xffff
    1cd4:	b.eq	2030 <_ZN4llvm7TGLexer10LexExclaimEv+0x49c>  // b.none
    1cd8:	ldrh	w8, [x20]
    1cdc:	ldrb	w9, [x20, #2]
    1ce0:	mov	w10, #0x6164                	// #24932
    1ce4:	mov	w11, #0x67                  	// #103
    1ce8:	eor	w8, w8, w10
    1cec:	eor	w9, w9, w11
    1cf0:	orr	w8, w8, w9
    1cf4:	tst	w8, #0xffff
    1cf8:	b.eq	2050 <_ZN4llvm7TGLexer10LexExclaimEv+0x4bc>  // b.none
    1cfc:	ldrh	w8, [x20]
    1d00:	ldrb	w9, [x20, #2]
    1d04:	mov	w10, #0x6461                	// #25697
    1d08:	mov	w11, #0x64                  	// #100
    1d0c:	eor	w8, w8, w10
    1d10:	eor	w9, w9, w11
    1d14:	orr	w8, w8, w9
    1d18:	tst	w8, #0xffff
    1d1c:	b.eq	2070 <_ZN4llvm7TGLexer10LexExclaimEv+0x4dc>  // b.none
    1d20:	ldrh	w8, [x20]
    1d24:	ldrb	w9, [x20, #2]
    1d28:	mov	w10, #0x756d                	// #30061
    1d2c:	mov	w11, #0x6c                  	// #108
    1d30:	eor	w8, w8, w10
    1d34:	eor	w9, w9, w11
    1d38:	orr	w8, w8, w9
    1d3c:	tst	w8, #0xffff
    1d40:	b.eq	2090 <_ZN4llvm7TGLexer10LexExclaimEv+0x4fc>  // b.none
    1d44:	ldrh	w8, [x20]
    1d48:	ldrb	w9, [x20, #2]
    1d4c:	mov	w10, #0x6e61                	// #28257
    1d50:	mov	w11, #0x64                  	// #100
    1d54:	eor	w8, w8, w10
    1d58:	eor	w9, w9, w11
    1d5c:	orr	w8, w8, w9
    1d60:	tst	w8, #0xffff
    1d64:	b.eq	20a0 <_ZN4llvm7TGLexer10LexExclaimEv+0x50c>  // b.none
    1d68:	ldrh	w8, [x20]
    1d6c:	ldrb	w9, [x20, #2]
    1d70:	mov	w10, #0x6873                	// #26739
    1d74:	mov	w11, #0x6c                  	// #108
    1d78:	eor	w8, w8, w10
    1d7c:	eor	w9, w9, w11
    1d80:	orr	w8, w8, w9
    1d84:	tst	w8, #0xffff
    1d88:	b.eq	20b0 <_ZN4llvm7TGLexer10LexExclaimEv+0x51c>  // b.none
    1d8c:	ldrh	w9, [x20]
    1d90:	ldrb	w10, [x20, #2]
    1d94:	mov	w8, #0x7273                	// #29299
    1d98:	mov	w11, #0x61                  	// #97
    1d9c:	eor	w9, w9, w8
    1da0:	eor	w10, w10, w11
    1da4:	orr	w9, w9, w10
    1da8:	tst	w9, #0xffff
    1dac:	b.eq	20b8 <_ZN4llvm7TGLexer10LexExclaimEv+0x524>  // b.none
    1db0:	ldrh	w9, [x20]
    1db4:	ldrb	w10, [x20, #2]
    1db8:	mov	w11, #0x6c                  	// #108
    1dbc:	eor	w8, w9, w8
    1dc0:	eor	w9, w10, w11
    1dc4:	orr	w8, w8, w9
    1dc8:	tst	w8, #0xffff
    1dcc:	b.ne	1fb0 <_ZN4llvm7TGLexer10LexExclaimEv+0x41c>  // b.any
    1dd0:	mov	w19, #0x2d                  	// #45
    1dd4:	b	1fe0 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    1dd8:	ldr	w8, [x20]
    1ddc:	mov	w9, #0x6f63                	// #28515
    1de0:	movk	w9, #0x646e, lsl #16
    1de4:	cmp	w8, w9
    1de8:	b.eq	2008 <_ZN4llvm7TGLexer10LexExclaimEv+0x474>  // b.none
    1dec:	ldr	w8, [x20]
    1df0:	mov	w9, #0x6568                	// #25960
    1df4:	movk	w9, #0x6461, lsl #16
    1df8:	cmp	w8, w9
    1dfc:	b.eq	2038 <_ZN4llvm7TGLexer10LexExclaimEv+0x4a4>  // b.none
    1e00:	ldr	w8, [x20]
    1e04:	mov	w9, #0x6174                	// #24948
    1e08:	movk	w9, #0x6c69, lsl #16
    1e0c:	cmp	w8, w9
    1e10:	b.eq	2058 <_ZN4llvm7TGLexer10LexExclaimEv+0x4c4>  // b.none
    1e14:	ldr	w8, [x20]
    1e18:	mov	w9, #0x6973                	// #26995
    1e1c:	movk	w9, #0x657a, lsl #16
    1e20:	cmp	w8, w9
    1e24:	b.eq	2078 <_ZN4llvm7TGLexer10LexExclaimEv+0x4e4>  // b.none
    1e28:	ldr	w8, [x20]
    1e2c:	mov	w9, #0x6163                	// #24931
    1e30:	movk	w9, #0x7473, lsl #16
    1e34:	cmp	w8, w9
    1e38:	b.ne	1fb0 <_ZN4llvm7TGLexer10LexExclaimEv+0x41c>  // b.any
    1e3c:	mov	w19, #0x32                  	// #50
    1e40:	b	1fe0 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    1e44:	ldr	w8, [x20]
    1e48:	ldrb	w9, [x20, #4]
    1e4c:	mov	w10, #0x6d65                	// #28005
    1e50:	movk	w10, #0x7470, lsl #16
    1e54:	mov	w11, #0x79                  	// #121
    1e58:	eor	w8, w8, w10
    1e5c:	eor	w9, w9, w11
    1e60:	orr	w8, w8, w9
    1e64:	cbz	w8, 2010 <_ZN4llvm7TGLexer10LexExclaimEv+0x47c>
    1e68:	ldr	w8, [x20]
    1e6c:	ldrb	w9, [x20, #4]
    1e70:	mov	w10, #0x7573                	// #30067
    1e74:	movk	w10, #0x7362, lsl #16
    1e78:	mov	w11, #0x74                  	// #116
    1e7c:	eor	w8, w8, w10
    1e80:	eor	w9, w9, w11
    1e84:	orr	w8, w8, w9
    1e88:	cbz	w8, 2040 <_ZN4llvm7TGLexer10LexExclaimEv+0x4ac>
    1e8c:	ldr	w8, [x20]
    1e90:	ldrb	w9, [x20, #4]
    1e94:	mov	w10, #0x6f66                	// #28518
    1e98:	movk	w10, #0x646c, lsl #16
    1e9c:	mov	w11, #0x6c                  	// #108
    1ea0:	eor	w8, w8, w10
    1ea4:	eor	w9, w9, w11
    1ea8:	orr	w8, w8, w9
    1eac:	cbz	w8, 2060 <_ZN4llvm7TGLexer10LexExclaimEv+0x4cc>
    1eb0:	ldr	w9, [x20]
    1eb4:	ldrb	w10, [x20, #4]
    1eb8:	mov	w8, #0x6567                	// #25959
    1ebc:	movk	w8, #0x6f74, lsl #16
    1ec0:	add	w11, w8, #0xc
    1ec4:	eor	w9, w9, w11
    1ec8:	eor	w10, w10, #0x70
    1ecc:	orr	w9, w9, w10
    1ed0:	cbz	w9, 2080 <_ZN4llvm7TGLexer10LexExclaimEv+0x4ec>
    1ed4:	ldr	w9, [x20]
    1ed8:	ldrb	w10, [x20, #4]
    1edc:	eor	w8, w9, w8
    1ee0:	eor	w9, w10, #0x70
    1ee4:	orr	w8, w8, w9
    1ee8:	cbnz	w8, 1fb0 <_ZN4llvm7TGLexer10LexExclaimEv+0x41c>
    1eec:	mov	w19, #0x45                  	// #69
    1ef0:	b	1fe0 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    1ef4:	ldr	w8, [x20]
    1ef8:	ldur	w9, [x20, #3]
    1efc:	mov	w10, #0x6f66                	// #28518
    1f00:	mov	w11, #0x6165                	// #24933
    1f04:	movk	w10, #0x6572, lsl #16
    1f08:	movk	w11, #0x6863, lsl #16
    1f0c:	eor	w8, w8, w10
    1f10:	eor	w9, w9, w11
    1f14:	orr	w8, w8, w9
    1f18:	cbnz	w8, 1fb0 <_ZN4llvm7TGLexer10LexExclaimEv+0x41c>
    1f1c:	mov	w19, #0x34                  	// #52
    1f20:	b	1fe0 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    1f24:	ldr	x8, [x20]
    1f28:	ldrb	w9, [x20, #8]
    1f2c:	mov	x10, #0x696c                	// #26988
    1f30:	movk	x10, #0x7473, lsl #16
    1f34:	movk	x10, #0x7073, lsl #32
    1f38:	movk	x10, #0x616c, lsl #48
    1f3c:	mov	w11, #0x74                  	// #116
    1f40:	eor	x8, x8, x10
    1f44:	eor	x9, x9, x11
    1f48:	orr	x8, x8, x9
    1f4c:	cbz	x8, 2018 <_ZN4llvm7TGLexer10LexExclaimEv+0x484>
    1f50:	ldr	x8, [x20]
    1f54:	ldrb	w9, [x20, #8]
    1f58:	mov	x10, #0x7473                	// #29811
    1f5c:	movk	x10, #0x6372, lsl #16
    1f60:	movk	x10, #0x6e6f, lsl #32
    1f64:	movk	x10, #0x6163, lsl #48
    1f68:	mov	w11, #0x74                  	// #116
    1f6c:	eor	x8, x8, x10
    1f70:	eor	x9, x9, x11
    1f74:	orr	x8, x8, x9
    1f78:	cbnz	x8, 1fb0 <_ZN4llvm7TGLexer10LexExclaimEv+0x41c>
    1f7c:	mov	w19, #0x31                  	// #49
    1f80:	b	1fe0 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    1f84:	ldr	x8, [x20]
    1f88:	ldrh	w9, [x20, #8]
    1f8c:	mov	x10, #0x696c                	// #26988
    1f90:	movk	x10, #0x7473, lsl #16
    1f94:	movk	x10, #0x6f63, lsl #32
    1f98:	movk	x10, #0x636e, lsl #48
    1f9c:	mov	w11, #0x7461                	// #29793
    1fa0:	eor	x8, x8, x10
    1fa4:	eor	x9, x9, x11
    1fa8:	orr	x8, x8, x9
    1fac:	cbz	x8, 2020 <_ZN4llvm7TGLexer10LexExclaimEv+0x48c>
    1fb0:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1fb4:	sub	x8, x20, #0x1
    1fb8:	add	x9, x9, #0x0
    1fbc:	mov	w10, #0x103                 	// #259
    1fc0:	add	x0, x29, #0x18
    1fc4:	add	x2, sp, #0x8
    1fc8:	mov	w1, #0x1                   	// #1
    1fcc:	stp	x9, xzr, [sp, #8]
    1fd0:	strh	w10, [sp, #24]
    1fd4:	str	x8, [x29, #24]
    1fd8:	mov	w19, #0x1                   	// #1
    1fdc:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    1fe0:	mov	w0, w19
    1fe4:	ldp	x20, x19, [sp, #64]
    1fe8:	ldr	x21, [sp, #48]
    1fec:	ldp	x29, x30, [sp, #32]
    1ff0:	add	sp, sp, #0x50
    1ff4:	ret
    1ff8:	mov	w19, #0x3c                  	// #60
    1ffc:	b	1fe0 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    2000:	mov	w19, #0x3d                  	// #61
    2004:	b	1fe0 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    2008:	mov	w19, #0x3b                  	// #59
    200c:	b	1fe0 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    2010:	mov	w19, #0x39                  	// #57
    2014:	b	1fe0 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    2018:	mov	w19, #0x30                  	// #48
    201c:	b	1fe0 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    2020:	mov	w19, #0x2f                  	// #47
    2024:	b	1fe0 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    2028:	mov	w19, #0x3f                  	// #63
    202c:	b	1fe0 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    2030:	mov	w19, #0x27                  	// #39
    2034:	b	1fe0 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    2038:	mov	w19, #0x36                  	// #54
    203c:	b	1fe0 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    2040:	mov	w19, #0x33                  	// #51
    2044:	b	1fe0 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    2048:	mov	w19, #0x40                  	// #64
    204c:	b	1fe0 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    2050:	mov	w19, #0x3e                  	// #62
    2054:	b	1fe0 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    2058:	mov	w19, #0x37                  	// #55
    205c:	b	1fe0 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    2060:	mov	w19, #0x35                  	// #53
    2064:	b	1fe0 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    2068:	mov	w19, #0x41                  	// #65
    206c:	b	1fe0 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    2070:	mov	w19, #0x28                  	// #40
    2074:	b	1fe0 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    2078:	mov	w19, #0x38                  	// #56
    207c:	b	1fe0 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    2080:	mov	w19, #0x44                  	// #68
    2084:	b	1fe0 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    2088:	mov	w19, #0x42                  	// #66
    208c:	b	1fe0 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    2090:	mov	w19, #0x29                  	// #41
    2094:	b	1fe0 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    2098:	mov	w19, #0x43                  	// #67
    209c:	b	1fe0 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    20a0:	mov	w19, #0x2a                  	// #42
    20a4:	b	1fe0 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    20a8:	mov	w19, #0x3a                  	// #58
    20ac:	b	1fe0 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    20b0:	mov	w19, #0x2e                  	// #46
    20b4:	b	1fe0 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    20b8:	mov	w19, #0x2c                  	// #44
    20bc:	b	1fe0 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>

00000000000020c0 <_ZN4llvm7TGLexer10LexIncludeEv>:
    20c0:	sub	sp, sp, #0xd0
    20c4:	stp	x29, x30, [sp, #160]
    20c8:	stp	x22, x21, [sp, #176]
    20cc:	stp	x20, x19, [sp, #192]
    20d0:	add	x29, sp, #0xa0
    20d4:	mov	w1, wzr
    20d8:	mov	x19, x0
    20dc:	bl	4b8 <_ZN4llvm7TGLexer8LexTokenEb>
    20e0:	cmp	w0, #0x1
    20e4:	b.eq	2138 <_ZN4llvm7TGLexer10LexIncludeEv+0x78>  // b.none
    20e8:	cmp	w0, #0x49
    20ec:	b.ne	2140 <_ZN4llvm7TGLexer10LexIncludeEv+0x80>  // b.any
    20f0:	sub	x8, x29, #0x20
    20f4:	add	x22, x8, #0x10
    20f8:	stur	x22, [x29, #-32]
    20fc:	ldp	x20, x21, [x19, #48]
    2100:	cbnz	x20, 2108 <_ZN4llvm7TGLexer10LexIncludeEv+0x48>
    2104:	cbnz	x21, 241c <_ZN4llvm7TGLexer10LexIncludeEv+0x35c>
    2108:	cmp	x21, #0x10
    210c:	stur	x21, [x29, #-64]
    2110:	b.cc	2174 <_ZN4llvm7TGLexer10LexIncludeEv+0xb4>  // b.lo, b.ul, b.last
    2114:	sub	x0, x29, #0x20
    2118:	sub	x1, x29, #0x40
    211c:	mov	x2, xzr
    2120:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    2124:	ldur	x8, [x29, #-64]
    2128:	stur	x0, [x29, #-32]
    212c:	stur	x8, [x29, #-16]
    2130:	cbnz	x21, 217c <_ZN4llvm7TGLexer10LexIncludeEv+0xbc>
    2134:	b	219c <_ZN4llvm7TGLexer10LexIncludeEv+0xdc>
    2138:	mov	w19, #0x1                   	// #1
    213c:	b	23e4 <_ZN4llvm7TGLexer10LexIncludeEv+0x324>
    2140:	ldr	x8, [x19, #32]
    2144:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    2148:	add	x9, x9, #0x0
    214c:	mov	w10, #0x103                 	// #259
    2150:	sub	x0, x29, #0x40
    2154:	sub	x2, x29, #0x20
    2158:	mov	w1, #0x1                   	// #1
    215c:	stp	x9, xzr, [x29, #-32]
    2160:	stur	x8, [x29, #-64]
    2164:	sturh	w10, [x29, #-16]
    2168:	mov	w19, #0x1                   	// #1
    216c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    2170:	b	23e4 <_ZN4llvm7TGLexer10LexIncludeEv+0x324>
    2174:	mov	x0, x22
    2178:	cbz	x21, 219c <_ZN4llvm7TGLexer10LexIncludeEv+0xdc>
    217c:	cmp	x21, #0x1
    2180:	b.ne	2190 <_ZN4llvm7TGLexer10LexIncludeEv+0xd0>  // b.any
    2184:	ldrb	w8, [x20]
    2188:	strb	w8, [x0]
    218c:	b	219c <_ZN4llvm7TGLexer10LexIncludeEv+0xdc>
    2190:	mov	x1, x20
    2194:	mov	x2, x21
    2198:	bl	0 <memcpy>
    219c:	ldur	x8, [x29, #-64]
    21a0:	ldur	x9, [x29, #-32]
    21a4:	sub	x10, x29, #0x40
    21a8:	add	x21, x10, #0x10
    21ac:	stur	x8, [x29, #-24]
    21b0:	strb	wzr, [x9, x8]
    21b4:	stp	x21, xzr, [x29, #-64]
    21b8:	sturb	wzr, [x29, #-48]
    21bc:	ldp	x0, x2, [x19]
    21c0:	sub	x1, x29, #0x20
    21c4:	sub	x3, x29, #0x40
    21c8:	bl	0 <_ZN4llvm9SourceMgr14AddIncludeFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_5SMLocERS6_>
    21cc:	str	w0, [x19, #88]
    21d0:	cbz	w0, 2290 <_ZN4llvm7TGLexer10LexIncludeEv+0x1d0>
    21d4:	add	x20, x19, #0x60
    21d8:	sub	x1, x29, #0x40
    21dc:	mov	x0, x20
    21e0:	bl	0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    21e4:	cbz	x1, 220c <_ZN4llvm7TGLexer10LexIncludeEv+0x14c>
    21e8:	mov	x2, x0
    21ec:	mov	x8, x1
    21f0:	sub	x3, x29, #0x40
    21f4:	add	x4, sp, #0x20
    21f8:	mov	x0, x20
    21fc:	mov	x1, x2
    2200:	mov	x2, x8
    2204:	str	x20, [sp, #32]
    2208:	bl	0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    220c:	ldr	w8, [x19, #88]
    2210:	cbz	w8, 23fc <_ZN4llvm7TGLexer10LexIncludeEv+0x33c>
    2214:	ldr	x9, [x19]
    2218:	mov	x11, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    221c:	movk	x11, #0xaaab
    2220:	ldp	x9, x10, [x9]
    2224:	sub	x10, x10, x9
    2228:	asr	x10, x10, #3
    222c:	mul	x10, x10, x11
    2230:	cmp	x10, x8
    2234:	b.cc	23fc <_ZN4llvm7TGLexer10LexIncludeEv+0x33c>  // b.lo, b.ul, b.last
    2238:	sub	w8, w8, #0x1
    223c:	mov	w10, #0x18                  	// #24
    2240:	umull	x8, w8, w10
    2244:	ldr	x8, [x9, x8]
    2248:	mov	w0, #0x18                  	// #24
    224c:	ldp	x9, x8, [x8, #8]
    2250:	sub	x8, x8, x9
    2254:	stp	x9, x8, [x19, #16]
    2258:	str	x9, [x19, #8]
    225c:	bl	0 <_Znwm>
    2260:	stp	xzr, xzr, [x0, #8]
    2264:	str	xzr, [x0]
    2268:	str	x0, [sp, #32]
    226c:	ldp	x1, x8, [x19, #184]
    2270:	cmp	x1, x8
    2274:	b.eq	2338 <_ZN4llvm7TGLexer10LexIncludeEv+0x278>  // b.none
    2278:	str	xzr, [sp, #32]
    227c:	str	x0, [x1], #8
    2280:	str	x1, [x19, #184]
    2284:	ldr	x19, [sp, #32]
    2288:	cbnz	x19, 234c <_ZN4llvm7TGLexer10LexIncludeEv+0x28c>
    228c:	b	2360 <_ZN4llvm7TGLexer10LexIncludeEv+0x2a0>
    2290:	ldur	x10, [x29, #-24]
    2294:	ldr	x8, [x19, #32]
    2298:	mov	x9, sp
    229c:	add	x19, x9, #0x10
    22a0:	add	x1, x10, #0x1d
    22a4:	mov	x0, sp
    22a8:	strb	wzr, [sp, #16]
    22ac:	stp	x19, xzr, [sp]
    22b0:	stur	x8, [x29, #-72]
    22b4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
    22b8:	ldr	x8, [sp, #8]
    22bc:	mov	x20, #0x3fffffffffffffff    	// #4611686018427387903
    22c0:	sub	x8, x20, x8
    22c4:	cmp	x8, #0x1c
    22c8:	b.ls	2428 <_ZN4llvm7TGLexer10LexIncludeEv+0x368>  // b.plast
    22cc:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    22d0:	add	x1, x1, #0x0
    22d4:	mov	x0, sp
    22d8:	mov	w2, #0x1d                  	// #29
    22dc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    22e0:	ldp	x1, x2, [x29, #-32]
    22e4:	mov	x0, sp
    22e8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    22ec:	ldr	x8, [sp, #8]
    22f0:	cmp	x8, x20
    22f4:	b.eq	2428 <_ZN4llvm7TGLexer10LexIncludeEv+0x368>  // b.none
    22f8:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    22fc:	add	x1, x1, #0x0
    2300:	mov	x0, sp
    2304:	mov	w2, #0x1                   	// #1
    2308:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    230c:	add	x8, sp, #0x20
    2310:	add	x20, x8, #0x10
    2314:	str	x20, [sp, #32]
    2318:	mov	x8, x0
    231c:	ldr	x9, [x8], #16
    2320:	cmp	x9, x8
    2324:	b.eq	2368 <_ZN4llvm7TGLexer10LexIncludeEv+0x2a8>  // b.none
    2328:	str	x9, [sp, #32]
    232c:	ldr	x9, [x0, #16]
    2330:	str	x9, [sp, #48]
    2334:	b	2370 <_ZN4llvm7TGLexer10LexIncludeEv+0x2b0>
    2338:	add	x0, x19, #0xb0
    233c:	add	x2, sp, #0x20
    2340:	bl	0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    2344:	ldr	x19, [sp, #32]
    2348:	cbz	x19, 2360 <_ZN4llvm7TGLexer10LexIncludeEv+0x2a0>
    234c:	ldr	x0, [x19]
    2350:	cbz	x0, 2358 <_ZN4llvm7TGLexer10LexIncludeEv+0x298>
    2354:	bl	0 <_ZdlPv>
    2358:	mov	x0, x19
    235c:	bl	0 <_ZdlPv>
    2360:	mov	w19, wzr
    2364:	b	23c4 <_ZN4llvm7TGLexer10LexIncludeEv+0x304>
    2368:	ldr	q0, [x9]
    236c:	str	q0, [x20]
    2370:	ldr	x9, [x0, #8]
    2374:	mov	w10, #0x104                 	// #260
    2378:	add	x11, sp, #0x20
    237c:	add	x2, sp, #0x40
    2380:	str	x9, [sp, #40]
    2384:	stp	x8, xzr, [x0]
    2388:	strb	wzr, [x0, #16]
    238c:	sub	x0, x29, #0x48
    2390:	mov	w1, #0x1                   	// #1
    2394:	strh	w10, [sp, #80]
    2398:	stp	x11, xzr, [sp, #64]
    239c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    23a0:	ldr	x0, [sp, #32]
    23a4:	cmp	x0, x20
    23a8:	b.eq	23b0 <_ZN4llvm7TGLexer10LexIncludeEv+0x2f0>  // b.none
    23ac:	bl	0 <_ZdlPv>
    23b0:	ldr	x0, [sp]
    23b4:	cmp	x0, x19
    23b8:	b.eq	23c0 <_ZN4llvm7TGLexer10LexIncludeEv+0x300>  // b.none
    23bc:	bl	0 <_ZdlPv>
    23c0:	mov	w19, #0x1                   	// #1
    23c4:	ldur	x0, [x29, #-64]
    23c8:	cmp	x0, x21
    23cc:	b.eq	23d4 <_ZN4llvm7TGLexer10LexIncludeEv+0x314>  // b.none
    23d0:	bl	0 <_ZdlPv>
    23d4:	ldur	x0, [x29, #-32]
    23d8:	cmp	x0, x22
    23dc:	b.eq	23e4 <_ZN4llvm7TGLexer10LexIncludeEv+0x324>  // b.none
    23e0:	bl	0 <_ZdlPv>
    23e4:	mov	w0, w19
    23e8:	ldp	x20, x19, [sp, #192]
    23ec:	ldp	x22, x21, [sp, #176]
    23f0:	ldp	x29, x30, [sp, #160]
    23f4:	add	sp, sp, #0xd0
    23f8:	ret
    23fc:	adrp	x0, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    2400:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    2404:	adrp	x3, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    2408:	add	x0, x0, #0x0
    240c:	add	x1, x1, #0x0
    2410:	add	x3, x3, #0x0
    2414:	mov	w2, #0x85                  	// #133
    2418:	bl	0 <__assert_fail>
    241c:	adrp	x0, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    2420:	add	x0, x0, #0x0
    2424:	bl	0 <_ZSt19__throw_logic_errorPKc>
    2428:	adrp	x0, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    242c:	add	x0, x0, #0x0
    2430:	bl	0 <_ZSt20__throw_length_errorPKc>

0000000000002434 <_ZN4llvm7TGLexer32prepReportPreprocessorStackErrorEv>:
    2434:	sub	sp, sp, #0x50
    2438:	stp	x29, x30, [sp, #32]
    243c:	str	x21, [sp, #48]
    2440:	stp	x20, x19, [sp, #64]
    2444:	add	x29, sp, #0x20
    2448:	ldr	x8, [x0, #184]
    244c:	ldur	x8, [x8, #-8]
    2450:	ldp	x9, x20, [x8]
    2454:	cmp	x9, x20
    2458:	b.eq	24c0 <_ZN4llvm7TGLexer32prepReportPreprocessorStackErrorEv+0x8c>  // b.none
    245c:	ldp	x8, x9, [x0, #16]
    2460:	adrp	x10, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    2464:	mov	x19, x0
    2468:	add	x10, x10, #0x0
    246c:	mov	w21, #0x103                 	// #259
    2470:	add	x0, x8, x9
    2474:	add	x1, sp, #0x8
    2478:	stp	x10, xzr, [sp, #8]
    247c:	strh	w21, [sp, #24]
    2480:	bl	0 <_ZN4llvm10PrintErrorEPKcRKNS_5TwineE>
    2484:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    2488:	sub	x0, x20, #0x8
    248c:	add	x8, x8, #0x0
    2490:	add	x2, sp, #0x8
    2494:	mov	w1, #0x1                   	// #1
    2498:	stp	x8, xzr, [sp, #8]
    249c:	strh	w21, [sp, #24]
    24a0:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    24a4:	ldr	x8, [x19, #8]
    24a8:	ldr	x21, [sp, #48]
    24ac:	str	x8, [x19, #32]
    24b0:	ldp	x20, x19, [sp, #64]
    24b4:	ldp	x29, x30, [sp, #32]
    24b8:	add	sp, sp, #0x50
    24bc:	ret
    24c0:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    24c4:	add	x8, x8, #0x0
    24c8:	mov	w9, #0x103                 	// #259
    24cc:	add	x0, sp, #0x8
    24d0:	stp	x8, xzr, [sp, #8]
    24d4:	strh	w9, [sp, #24]
    24d8:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>

00000000000024dc <_ZN4llvm7TGLexer28prepEatPreprocessorDirectiveENS_5tgtok7TokKindE>:
    24dc:	sub	sp, sp, #0x40
    24e0:	stp	x29, x30, [sp, #32]
    24e4:	stp	x20, x19, [sp, #48]
    24e8:	add	x29, sp, #0x20
    24ec:	ldr	x20, [x0, #8]
    24f0:	sub	w8, w1, #0x4c
    24f4:	cmp	w8, #0x4
    24f8:	str	x20, [x0, #32]
    24fc:	b.hi	2534 <_ZN4llvm7TGLexer28prepEatPreprocessorDirectiveENS_5tgtok7TokKindE+0x58>  // b.pmore
    2500:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    2504:	add	x9, x9, #0x0
    2508:	add	x8, x9, w8, uxtw #4
    250c:	mov	x19, x0
    2510:	ldr	x0, [x8, #8]
    2514:	bl	0 <strlen>
    2518:	add	x8, x20, x0
    251c:	str	x8, [x19, #8]
    2520:	ldp	x20, x19, [sp, #48]
    2524:	ldp	x29, x30, [sp, #32]
    2528:	mov	w0, #0x1                   	// #1
    252c:	add	sp, sp, #0x40
    2530:	ret
    2534:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    2538:	add	x8, x8, #0x0
    253c:	mov	w9, #0x103                 	// #259
    2540:	add	x0, sp, #0x8
    2544:	stp	x8, xzr, [sp, #8]
    2548:	strh	w9, [sp, #24]
    254c:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>

0000000000002550 <_ZN4llvm7TGLexer16prepLexMacroNameEv>:
    2550:	stp	x29, x30, [sp, #-64]!
    2554:	str	x23, [sp, #16]
    2558:	stp	x22, x21, [sp, #32]
    255c:	stp	x20, x19, [sp, #48]
    2560:	mov	x29, sp
    2564:	ldr	x19, [x0, #8]
    2568:	mov	x20, x0
    256c:	b	2578 <_ZN4llvm7TGLexer16prepLexMacroNameEv+0x28>
    2570:	add	x19, x19, #0x1
    2574:	str	x19, [x20, #8]
    2578:	ldrb	w8, [x19]
    257c:	cmp	w8, #0x20
    2580:	b.eq	2570 <_ZN4llvm7TGLexer16prepLexMacroNameEv+0x20>  // b.none
    2584:	cmp	w8, #0x9
    2588:	b.eq	2570 <_ZN4llvm7TGLexer16prepLexMacroNameEv+0x20>  // b.none
    258c:	str	x19, [x20, #32]
    2590:	mov	x23, x19
    2594:	ldrb	w21, [x23], #1
    2598:	cmp	w21, #0x5f
    259c:	b.ne	25a8 <_ZN4llvm7TGLexer16prepLexMacroNameEv+0x58>  // b.any
    25a0:	mov	w22, #0x5f                  	// #95
    25a4:	b	25b8 <_ZN4llvm7TGLexer16prepLexMacroNameEv+0x68>
    25a8:	mov	w0, w21
    25ac:	bl	0 <isalpha>
    25b0:	mov	w22, w21
    25b4:	cbz	w0, 2610 <_ZN4llvm7TGLexer16prepLexMacroNameEv+0xc0>
    25b8:	mov	w0, w22
    25bc:	bl	0 <isalpha>
    25c0:	cmp	w21, #0x5f
    25c4:	b.eq	25dc <_ZN4llvm7TGLexer16prepLexMacroNameEv+0x8c>  // b.none
    25c8:	cbnz	w0, 25dc <_ZN4llvm7TGLexer16prepLexMacroNameEv+0x8c>
    25cc:	sub	w8, w22, #0x30
    25d0:	cmp	w8, #0x9
    25d4:	mov	x8, x19
    25d8:	b.hi	2608 <_ZN4llvm7TGLexer16prepLexMacroNameEv+0xb8>  // b.pmore
    25dc:	str	x23, [x20, #8]
    25e0:	ldrb	w21, [x23], #1
    25e4:	mov	w0, w21
    25e8:	bl	0 <isalpha>
    25ec:	cmp	w21, #0x5f
    25f0:	b.eq	25dc <_ZN4llvm7TGLexer16prepLexMacroNameEv+0x8c>  // b.none
    25f4:	sub	w8, w21, #0x30
    25f8:	cbnz	w0, 25dc <_ZN4llvm7TGLexer16prepLexMacroNameEv+0x8c>
    25fc:	cmp	w8, #0xa
    2600:	b.cc	25dc <_ZN4llvm7TGLexer16prepLexMacroNameEv+0x8c>  // b.lo, b.ul, b.last
    2604:	sub	x8, x23, #0x1
    2608:	sub	x1, x8, x19
    260c:	b	261c <_ZN4llvm7TGLexer16prepLexMacroNameEv+0xcc>
    2610:	adrp	x19, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    2614:	mov	x1, xzr
    2618:	add	x19, x19, #0x0
    261c:	mov	x0, x19
    2620:	ldp	x20, x19, [sp, #48]
    2624:	ldp	x22, x21, [sp, #32]
    2628:	ldr	x23, [sp, #16]
    262c:	ldp	x29, x30, [sp], #64
    2630:	ret

0000000000002634 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv>:
    2634:	sub	sp, sp, #0x40
    2638:	stp	x29, x30, [sp, #32]
    263c:	stp	x20, x19, [sp, #48]
    2640:	add	x29, sp, #0x20
    2644:	ldp	x9, x10, [x0, #16]
    2648:	mov	x19, x0
    264c:	ldr	x0, [x0, #8]
    2650:	add	x8, x9, x10
    2654:	cmp	x0, x8
    2658:	b.eq	2718 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0xe4>  // b.none
    265c:	adrp	x20, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    2660:	add	x20, x20, #0x0
    2664:	b	267c <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x48>
    2668:	add	x0, x0, #0x1
    266c:	str	x0, [x19, #8]
    2670:	add	x8, x9, x10
    2674:	cmp	x0, x8
    2678:	b.eq	2718 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0xe4>  // b.none
    267c:	ldrb	w8, [x0]
    2680:	sub	w8, w8, #0x9
    2684:	cmp	w8, #0x26
    2688:	b.hi	2730 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0xfc>  // b.pmore
    268c:	adr	x11, 2668 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x34>
    2690:	ldrb	w12, [x20, x8]
    2694:	add	x11, x11, x12, lsl #2
    2698:	mov	w8, #0x1                   	// #1
    269c:	br	x11
    26a0:	mov	x8, x0
    26a4:	ldrb	w11, [x8, #1]!
    26a8:	cmp	w11, #0x2f
    26ac:	b.ne	26ec <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0xb8>  // b.any
    26b0:	str	x8, [x19, #8]
    26b4:	add	x8, x9, x10
    26b8:	add	x0, x0, #0x2
    26bc:	b	26cc <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x98>
    26c0:	cmp	x8, x0
    26c4:	b.eq	2670 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x3c>  // b.none
    26c8:	add	x0, x0, #0x1
    26cc:	str	x0, [x19, #8]
    26d0:	ldrb	w11, [x0]
    26d4:	cbz	w11, 26c0 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x8c>
    26d8:	cmp	w11, #0xa
    26dc:	b.eq	2670 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x3c>  // b.none
    26e0:	cmp	w11, #0xd
    26e4:	b.ne	26c8 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x94>  // b.any
    26e8:	b	2670 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x3c>
    26ec:	cmp	w11, #0x2a
    26f0:	str	x0, [x19, #32]
    26f4:	b.ne	273c <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x108>  // b.any
    26f8:	add	x8, x0, #0x1
    26fc:	mov	x0, x19
    2700:	str	x8, [x19, #8]
    2704:	bl	1394 <_ZN4llvm7TGLexer12SkipCCommentEv>
    2708:	tbnz	w0, #0, 2758 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x124>
    270c:	ldp	x0, x9, [x19, #8]
    2710:	ldr	x10, [x19, #24]
    2714:	b	2670 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x3c>
    2718:	mov	w8, #0x1                   	// #1
    271c:	ldp	x20, x19, [sp, #48]
    2720:	ldp	x29, x30, [sp, #32]
    2724:	mov	w0, w8
    2728:	add	sp, sp, #0x40
    272c:	ret
    2730:	mov	w8, wzr
    2734:	str	x0, [x19, #32]
    2738:	b	271c <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0xe8>
    273c:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    2740:	add	x8, x8, #0x0
    2744:	mov	w9, #0x103                 	// #259
    2748:	add	x1, sp, #0x8
    274c:	stp	x8, xzr, [sp, #8]
    2750:	strh	w9, [sp, #24]
    2754:	bl	0 <_ZN4llvm10PrintErrorEPKcRKNS_5TwineE>
    2758:	mov	w8, wzr
    275c:	b	271c <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0xe8>

0000000000002760 <_ZN4llvm7TGLexer14prepSkipRegionEb>:
    2760:	sub	sp, sp, #0x70
    2764:	stp	x29, x30, [sp, #32]
    2768:	str	x25, [sp, #48]
    276c:	stp	x24, x23, [sp, #64]
    2770:	stp	x22, x21, [sp, #80]
    2774:	stp	x20, x19, [sp, #96]
    2778:	add	x29, sp, #0x20
    277c:	tbz	w1, #0, 2964 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x204>
    2780:	ldr	x20, [x0, #8]
    2784:	mov	x23, #0x2600                	// #9728
    2788:	mov	x19, x0
    278c:	mov	w22, #0x1                   	// #1
    2790:	movk	x23, #0x1, lsl #32
    2794:	b	27ac <_ZN4llvm7TGLexer14prepSkipRegionEb+0x4c>
    2798:	ldp	x20, x24, [x19, #8]
    279c:	ldr	x25, [x19, #24]
    27a0:	add	x8, x24, x25
    27a4:	cmp	x20, x8
    27a8:	b.eq	28e8 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x188>  // b.none
    27ac:	ldrb	w8, [x20]
    27b0:	cmp	w8, #0xa
    27b4:	b.eq	27dc <_ZN4llvm7TGLexer14prepSkipRegionEb+0x7c>  // b.none
    27b8:	cmp	w8, #0xd
    27bc:	b.eq	27dc <_ZN4llvm7TGLexer14prepSkipRegionEb+0x7c>  // b.none
    27c0:	ldp	x9, x10, [x19, #16]
    27c4:	add	x9, x9, x10
    27c8:	cmp	x20, x9
    27cc:	b.eq	27dc <_ZN4llvm7TGLexer14prepSkipRegionEb+0x7c>  // b.none
    27d0:	add	x20, x20, #0x1
    27d4:	str	x20, [x19, #8]
    27d8:	b	27ac <_ZN4llvm7TGLexer14prepSkipRegionEb+0x4c>
    27dc:	ldp	x24, x25, [x19, #16]
    27e0:	b	27f0 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x90>
    27e4:	add	x20, x20, #0x1
    27e8:	str	x20, [x19, #8]
    27ec:	ldrb	w8, [x20]
    27f0:	add	x9, x24, x25
    27f4:	cmp	x20, x9
    27f8:	b.eq	2854 <_ZN4llvm7TGLexer14prepSkipRegionEb+0xf4>  // b.none
    27fc:	and	w9, w8, #0xff
    2800:	cmp	w9, #0x2f
    2804:	b.hi	2854 <_ZN4llvm7TGLexer14prepSkipRegionEb+0xf4>  // b.pmore
    2808:	and	x9, x8, #0xff
    280c:	lsl	x10, x22, x9
    2810:	tst	x10, x23
    2814:	b.ne	27e4 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x84>  // b.any
    2818:	cmp	x9, #0x2f
    281c:	b.ne	2854 <_ZN4llvm7TGLexer14prepSkipRegionEb+0xf4>  // b.any
    2820:	mov	x8, x20
    2824:	ldrb	w9, [x8, #1]!
    2828:	cmp	w9, #0x2a
    282c:	b.ne	27a0 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x40>  // b.any
    2830:	mov	x0, x19
    2834:	str	x20, [x19, #32]
    2838:	str	x8, [x19, #8]
    283c:	bl	1394 <_ZN4llvm7TGLexer12SkipCCommentEv>
    2840:	tbnz	w0, #0, 28e0 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x180>
    2844:	ldp	x20, x24, [x19, #8]
    2848:	ldr	x25, [x19, #24]
    284c:	ldrb	w8, [x20]
    2850:	b	27f0 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x90>
    2854:	and	w8, w8, #0xff
    2858:	cmp	w8, #0x23
    285c:	b.ne	27a0 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x40>  // b.any
    2860:	add	x20, x20, #0x1
    2864:	mov	x0, x19
    2868:	str	x20, [x19, #8]
    286c:	bl	c00 <_ZNK4llvm7TGLexer15prepIsDirectiveEv>
    2870:	cmp	w0, #0x1
    2874:	b.eq	27a0 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x40>  // b.none
    2878:	mov	w21, w0
    287c:	cmp	w0, #0x50
    2880:	b.eq	27a0 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x40>  // b.none
    2884:	mov	x0, x19
    2888:	mov	w1, w21
    288c:	mov	w2, wzr
    2890:	bl	ed8 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb>
    2894:	cmp	w0, #0x1
    2898:	b.eq	28e0 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x180>  // b.none
    289c:	cmp	w21, w0
    28a0:	b.ne	2970 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x210>  // b.any
    28a4:	ldr	x8, [x19, #184]
    28a8:	ldur	x9, [x8, #-8]
    28ac:	ldp	x9, x8, [x9]
    28b0:	cmp	x8, x9
    28b4:	b.eq	28cc <_ZN4llvm7TGLexer14prepSkipRegionEb+0x16c>  // b.none
    28b8:	ldurb	w10, [x8, #-12]
    28bc:	cbz	w10, 2798 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x38>
    28c0:	sub	x8, x8, #0x10
    28c4:	cmp	x9, x8
    28c8:	b.ne	28b8 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x158>  // b.any
    28cc:	orr	w8, w21, #0x1
    28d0:	cmp	w8, #0x4f
    28d4:	b.ne	297c <_ZN4llvm7TGLexer14prepSkipRegionEb+0x21c>  // b.any
    28d8:	mov	w0, #0x1                   	// #1
    28dc:	b	2948 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x1e8>
    28e0:	mov	w0, wzr
    28e4:	b	2948 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x1e8>
    28e8:	ldr	x8, [x19, #184]
    28ec:	ldur	x8, [x8, #-8]
    28f0:	ldp	x9, x21, [x8]
    28f4:	cmp	x9, x21
    28f8:	b.eq	2988 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x228>  // b.none
    28fc:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    2900:	add	x8, x8, #0x0
    2904:	mov	w22, #0x103                 	// #259
    2908:	add	x1, sp, #0x8
    290c:	mov	x0, x20
    2910:	stp	x8, xzr, [sp, #8]
    2914:	strh	w22, [sp, #24]
    2918:	bl	0 <_ZN4llvm10PrintErrorEPKcRKNS_5TwineE>
    291c:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    2920:	sub	x0, x21, #0x8
    2924:	add	x8, x8, #0x0
    2928:	add	x2, sp, #0x8
    292c:	mov	w1, #0x1                   	// #1
    2930:	stp	x8, xzr, [sp, #8]
    2934:	strh	w22, [sp, #24]
    2938:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    293c:	ldr	x8, [x19, #8]
    2940:	mov	w0, wzr
    2944:	str	x8, [x19, #32]
    2948:	ldp	x20, x19, [sp, #96]
    294c:	ldp	x22, x21, [sp, #80]
    2950:	ldp	x24, x23, [sp, #64]
    2954:	ldr	x25, [sp, #48]
    2958:	ldp	x29, x30, [sp, #32]
    295c:	add	sp, sp, #0x70
    2960:	ret
    2964:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    2968:	add	x8, x8, #0x0
    296c:	b	2990 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x230>
    2970:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    2974:	add	x8, x8, #0x0
    2978:	b	2990 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x230>
    297c:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    2980:	add	x8, x8, #0x0
    2984:	b	2990 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x230>
    2988:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    298c:	add	x8, x8, #0x0
    2990:	mov	w9, #0x103                 	// #259
    2994:	add	x0, sp, #0x8
    2998:	stp	x8, xzr, [sp, #8]
    299c:	strh	w9, [sp, #24]
    29a0:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>

00000000000029a4 <_ZN4llvm7TGLexer17prepSkipToLineEndEv>:
    29a4:	ldr	x8, [x0, #8]
    29a8:	ldrb	w9, [x8]
    29ac:	cmp	w9, #0xa
    29b0:	b.eq	29d8 <_ZN4llvm7TGLexer17prepSkipToLineEndEv+0x34>  // b.none
    29b4:	cmp	w9, #0xd
    29b8:	b.eq	29d8 <_ZN4llvm7TGLexer17prepSkipToLineEndEv+0x34>  // b.none
    29bc:	ldp	x9, x10, [x0, #16]
    29c0:	add	x9, x9, x10
    29c4:	cmp	x8, x9
    29c8:	b.eq	29d8 <_ZN4llvm7TGLexer17prepSkipToLineEndEv+0x34>  // b.none
    29cc:	add	x8, x8, #0x1
    29d0:	str	x8, [x0, #8]
    29d4:	b	29a8 <_ZN4llvm7TGLexer17prepSkipToLineEndEv+0x4>
    29d8:	ret

00000000000029dc <_ZN4llvm7TGLexer17prepSkipLineBeginEv>:
    29dc:	stp	x29, x30, [sp, #-48]!
    29e0:	str	x21, [sp, #16]
    29e4:	stp	x20, x19, [sp, #32]
    29e8:	mov	x29, sp
    29ec:	ldp	x9, x10, [x0, #16]
    29f0:	ldr	x8, [x0, #8]
    29f4:	add	x11, x9, x10
    29f8:	cmp	x8, x11
    29fc:	b.eq	2a7c <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0xa0>  // b.none
    2a00:	mov	x21, #0x2600                	// #9728
    2a04:	mov	x19, x0
    2a08:	mov	w20, #0x1                   	// #1
    2a0c:	movk	x21, #0x1, lsl #32
    2a10:	b	2a28 <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0x4c>
    2a14:	add	x8, x8, #0x1
    2a18:	str	x8, [x19, #8]
    2a1c:	add	x11, x9, x10
    2a20:	cmp	x8, x11
    2a24:	b.eq	2a7c <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0xa0>  // b.none
    2a28:	ldrb	w11, [x8]
    2a2c:	mov	w0, #0x1                   	// #1
    2a30:	cmp	w11, #0x2f
    2a34:	b.hi	2a80 <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0xa4>  // b.pmore
    2a38:	lsl	x12, x20, x11
    2a3c:	tst	x12, x21
    2a40:	b.ne	2a14 <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0x38>  // b.any
    2a44:	cmp	x11, #0x2f
    2a48:	b.ne	2a80 <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0xa4>  // b.any
    2a4c:	ldrb	w9, [x8, #1]
    2a50:	cmp	w9, #0x2a
    2a54:	b.ne	2a7c <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0xa0>  // b.any
    2a58:	str	x8, [x19, #32]
    2a5c:	add	x8, x8, #0x1
    2a60:	mov	x0, x19
    2a64:	str	x8, [x19, #8]
    2a68:	bl	1394 <_ZN4llvm7TGLexer12SkipCCommentEv>
    2a6c:	tbnz	w0, #0, 2a90 <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0xb4>
    2a70:	ldp	x8, x9, [x19, #8]
    2a74:	ldr	x10, [x19, #24]
    2a78:	b	2a1c <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0x40>
    2a7c:	mov	w0, #0x1                   	// #1
    2a80:	ldp	x20, x19, [sp, #32]
    2a84:	ldr	x21, [sp, #16]
    2a88:	ldp	x29, x30, [sp], #48
    2a8c:	ret
    2a90:	mov	w0, wzr
    2a94:	b	2a80 <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0xa4>

0000000000002a98 <_ZN4llvm7TGLexer23prepIsProcessingEnabledEv>:
    2a98:	ldr	x8, [x0, #184]
    2a9c:	ldur	x9, [x8, #-8]
    2aa0:	ldp	x9, x8, [x9]
    2aa4:	cmp	x8, x9
    2aa8:	b.eq	2ac0 <_ZN4llvm7TGLexer23prepIsProcessingEnabledEv+0x28>  // b.none
    2aac:	ldurb	w10, [x8, #-12]
    2ab0:	cbz	w10, 2ac8 <_ZN4llvm7TGLexer23prepIsProcessingEnabledEv+0x30>
    2ab4:	sub	x8, x8, #0x10
    2ab8:	cmp	x9, x8
    2abc:	b.ne	2aac <_ZN4llvm7TGLexer23prepIsProcessingEnabledEv+0x14>  // b.any
    2ac0:	mov	w0, #0x1                   	// #1
    2ac4:	ret
    2ac8:	mov	w0, wzr
    2acc:	ret

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	str	x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	ldp	x20, x24, [x0]
  20:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
  24:	sub	x8, x24, x20
  28:	cmp	x8, x9
  2c:	b.eq	15c <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0x15c>  // b.none
  30:	asr	x9, x8, #3
  34:	cmp	x8, #0x0
  38:	csinc	x10, x9, xzr, ne  // ne = any
  3c:	adds	x9, x10, x9
  40:	lsr	x11, x9, #60
  44:	cset	w10, cs  // cs = hs, nlast
  48:	cmp	x11, #0x0
  4c:	cset	w11, ne  // ne = any
  50:	orr	w10, w10, w11
  54:	mov	x8, #0xfffffffffffffff     	// #1152921504606846975
  58:	cmp	w10, #0x0
  5c:	csel	x25, x8, x9, ne  // ne = any
  60:	sub	x8, x1, x20
  64:	mov	x23, x2
  68:	mov	x19, x0
  6c:	mov	x21, x1
  70:	asr	x26, x8, #3
  74:	cbz	x25, 88 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0x88>
  78:	lsl	x0, x25, #3
  7c:	bl	0 <_Znwm>
  80:	mov	x22, x0
  84:	b	8c <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0x8c>
  88:	mov	x22, xzr
  8c:	ldr	x8, [x23]
  90:	str	xzr, [x23]
  94:	cmp	x20, x21
  98:	str	x8, [x22, x26, lsl #3]
  9c:	mov	x26, x22
  a0:	b.eq	f8 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0xf8>  // b.none
  a4:	mov	x26, x22
  a8:	mov	x27, x20
  ac:	b	c8 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0xc8>
  b0:	mov	x0, x23
  b4:	bl	0 <_ZdlPv>
  b8:	str	xzr, [x27], #8
  bc:	cmp	x21, x27
  c0:	add	x26, x26, #0x8
  c4:	b.eq	f8 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0xf8>  // b.none
  c8:	ldr	x8, [x27]
  cc:	str	xzr, [x27]
  d0:	str	x8, [x26]
  d4:	ldr	x23, [x27]
  d8:	cbz	x23, b8 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0xb8>
  dc:	ldr	x0, [x23]
  e0:	cbz	x0, b0 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0xb0>
  e4:	bl	0 <_ZdlPv>
  e8:	b	b0 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0xb0>
  ec:	mov	x0, x23
  f0:	bl	0 <_ZdlPv>
  f4:	str	xzr, [x21], #8
  f8:	cmp	x24, x21
  fc:	add	x26, x26, #0x8
 100:	b.eq	128 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0x128>  // b.none
 104:	ldr	x8, [x21]
 108:	str	xzr, [x21]
 10c:	str	x8, [x26]
 110:	ldr	x23, [x21]
 114:	cbz	x23, f4 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0xf4>
 118:	ldr	x0, [x23]
 11c:	cbz	x0, ec <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0xec>
 120:	bl	0 <_ZdlPv>
 124:	b	ec <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0xec>
 128:	cbz	x20, 134 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0x134>
 12c:	mov	x0, x20
 130:	bl	0 <_ZdlPv>
 134:	add	x8, x22, x25, lsl #3
 138:	stp	x22, x26, [x19]
 13c:	str	x8, [x19, #16]
 140:	ldp	x20, x19, [sp, #80]
 144:	ldp	x22, x21, [sp, #64]
 148:	ldp	x24, x23, [sp, #48]
 14c:	ldp	x26, x25, [sp, #32]
 150:	ldr	x27, [sp, #16]
 154:	ldp	x29, x30, [sp], #96
 158:	ret
 15c:	adrp	x0, 0 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_>
 160:	add	x0, x0, #0x0
 164:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_:

0000000000000000 <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x22, x2
  1c:	mov	x23, x1
  20:	mov	x20, x0
  24:	bl	0 <_ZN4llvm13StringMapImpl15LookupBucketForENS_9StringRefE>
  28:	ldr	x8, [x20]
  2c:	mov	w21, w0
  30:	add	x19, x8, w0, uxtw #3
  34:	ldr	x8, [x19]
  38:	cmn	x8, #0x8
  3c:	b.eq	60 <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0x60>  // b.none
  40:	cbz	x8, 6c <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0x6c>
  44:	b	4c <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0x4c>
  48:	ldr	x8, [x19, #8]!
  4c:	cbz	x8, 48 <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0x48>
  50:	cmn	x8, #0x8
  54:	b.eq	48 <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0x48>  // b.none
  58:	mov	x1, xzr
  5c:	b	130 <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0x130>
  60:	ldr	w8, [x20, #16]
  64:	sub	w8, w8, #0x1
  68:	str	w8, [x20, #16]
  6c:	add	x25, x22, #0x9
  70:	mov	x0, x25
  74:	bl	0 <malloc>
  78:	mov	x24, x0
  7c:	cbnz	x0, 94 <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0x94>
  80:	cbz	x25, a4 <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0xa4>
  84:	adrp	x0, 0 <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_>
  88:	add	x0, x0, #0x0
  8c:	mov	w1, #0x1                   	// #1
  90:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  94:	mov	x25, x24
  98:	str	x22, [x25], #8
  9c:	cbnz	x22, cc <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0xcc>
  a0:	b	dc <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0xdc>
  a4:	mov	w0, #0x1                   	// #1
  a8:	bl	0 <malloc>
  ac:	mov	x24, x0
  b0:	cbnz	x0, c4 <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0xc4>
  b4:	adrp	x0, 0 <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_>
  b8:	add	x0, x0, #0x0
  bc:	mov	w1, #0x1                   	// #1
  c0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  c4:	mov	x25, x24
  c8:	str	x22, [x25], #8
  cc:	mov	x0, x25
  d0:	mov	x1, x23
  d4:	mov	x2, x22
  d8:	bl	0 <memcpy>
  dc:	strb	wzr, [x25, x22]
  e0:	str	x24, [x19]
  e4:	ldp	w8, w9, [x20, #12]
  e8:	ldr	w10, [x20, #8]
  ec:	add	w8, w8, #0x1
  f0:	add	w9, w9, w8
  f4:	cmp	w9, w10
  f8:	str	w8, [x20, #12]
  fc:	b.hi	14c <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0x14c>  // b.pmore
 100:	mov	x0, x20
 104:	mov	w1, w21
 108:	bl	0 <_ZN4llvm13StringMapImpl11RehashTableEj>
 10c:	ldr	x8, [x20]
 110:	add	x19, x8, w0, uxtw #3
 114:	b	11c <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0x11c>
 118:	add	x19, x19, #0x8
 11c:	ldr	x8, [x19]
 120:	cbz	x8, 118 <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0x118>
 124:	cmn	x8, #0x8
 128:	b.eq	118 <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0x118>  // b.none
 12c:	mov	w1, #0x1                   	// #1
 130:	mov	x0, x19
 134:	ldp	x20, x19, [sp, #64]
 138:	ldp	x22, x21, [sp, #48]
 13c:	ldp	x24, x23, [sp, #32]
 140:	ldr	x25, [sp, #16]
 144:	ldp	x29, x30, [sp], #80
 148:	ret
 14c:	adrp	x0, 0 <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_>
 150:	adrp	x1, 0 <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_>
 154:	adrp	x3, 0 <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_>
 158:	add	x0, x0, #0x0
 15c:	add	x1, x1, #0x0
 160:	add	x3, x3, #0x0
 164:	mov	w2, #0x1bb                 	// #443
 168:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x9, [x0, #16]
  1c:	mov	x21, x0
  20:	mov	x20, x1
  24:	cbz	x9, a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0xa0>
  28:	ldp	x22, x23, [x20]
  2c:	mov	w24, #0x80000000            	// #-2147483648
  30:	mov	x25, #0xffffffff80000000    	// #-2147483648
  34:	b	4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x4c>
  38:	tbnz	w0, #31, 84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x84>
  3c:	mov	w8, wzr
  40:	add	x9, x19, #0x18
  44:	ldr	x9, [x9]
  48:	cbz	x9, 94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x94>
  4c:	ldr	x8, [x9, #40]
  50:	mov	x19, x9
  54:	subs	x26, x23, x8
  58:	csel	x2, x8, x23, hi  // hi = pmore
  5c:	cbz	x2, 70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x70>
  60:	ldr	x1, [x19, #32]
  64:	mov	x0, x22
  68:	bl	0 <memcmp>
  6c:	cbnz	w0, 38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x38>
  70:	cmp	x26, x24
  74:	b.ge	3c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x3c>  // b.tcont
  78:	cmp	x26, x25
  7c:	csel	w0, w26, w24, gt
  80:	b	38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x38>
  84:	add	x9, x19, #0x10
  88:	mov	w8, #0x1                   	// #1
  8c:	ldr	x9, [x9]
  90:	cbnz	x9, 4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x4c>
  94:	mov	x22, x19
  98:	cbnz	w8, a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0xa4>
  9c:	b	bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0xbc>
  a0:	add	x19, x21, #0x8
  a4:	ldr	x8, [x21, #24]
  a8:	cmp	x8, x19
  ac:	b.eq	110 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x110>  // b.none
  b0:	mov	x0, x19
  b4:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  b8:	mov	x22, x0
  bc:	ldr	x8, [x22, #40]
  c0:	ldr	x9, [x20, #8]
  c4:	subs	x21, x8, x9
  c8:	csel	x2, x9, x8, hi  // hi = pmore
  cc:	cbz	x2, e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0xe8>
  d0:	ldr	x1, [x20]
  d4:	ldr	x0, [x22, #32]
  d8:	bl	0 <memcmp>
  dc:	cbz	w0, e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0xe8>
  e0:	tbz	w0, #31, 108 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x108>
  e4:	b	110 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x110>
  e8:	mov	w8, #0x7fffffff            	// #2147483647
  ec:	cmp	x21, x8
  f0:	b.gt	108 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x108>
  f4:	mov	x8, #0xffffffff80000000    	// #-2147483648
  f8:	cmp	x21, x8
  fc:	mov	w8, #0x80000000            	// #-2147483648
 100:	csel	w0, w21, w8, gt
 104:	tbnz	w0, #31, 110 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x110>
 108:	mov	x19, xzr
 10c:	b	114 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x114>
 110:	mov	x22, xzr
 114:	mov	x0, x22
 118:	mov	x1, x19
 11c:	ldp	x20, x19, [sp, #64]
 120:	ldp	x22, x21, [sp, #48]
 124:	ldp	x24, x23, [sp, #32]
 128:	ldp	x26, x25, [sp, #16]
 12c:	ldp	x29, x30, [sp], #80
 130:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_M_insert_IRKS5_NSB_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS5_EPSt18_Rb_tree_node_baseSJ_OT_RT0_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_M_insert_IRKS5_NSB_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS5_EPSt18_Rb_tree_node_baseSJ_OT_RT0_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	add	x29, sp, #0x10
  1c:	mov	x22, x3
  20:	mov	x20, x2
  24:	mov	x19, x0
  28:	cbz	x1, 34 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_M_insert_IRKS5_NSB_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS5_EPSt18_Rb_tree_node_baseSJ_OT_RT0_+0x34>
  2c:	mov	w21, #0x1                   	// #1
  30:	b	84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_M_insert_IRKS5_NSB_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS5_EPSt18_Rb_tree_node_baseSJ_OT_RT0_+0x84>
  34:	add	x8, x19, #0x8
  38:	cmp	x8, x20
  3c:	b.eq	2c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_M_insert_IRKS5_NSB_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS5_EPSt18_Rb_tree_node_baseSJ_OT_RT0_+0x2c>  // b.none
  40:	ldr	x8, [x22, #8]
  44:	ldr	x9, [x20, #40]
  48:	subs	x21, x8, x9
  4c:	csel	x2, x9, x8, hi  // hi = pmore
  50:	cbz	x2, 64 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_M_insert_IRKS5_NSB_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS5_EPSt18_Rb_tree_node_baseSJ_OT_RT0_+0x64>
  54:	ldr	x1, [x20, #32]
  58:	ldr	x0, [x22]
  5c:	bl	0 <memcmp>
  60:	cbnz	w0, 80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_M_insert_IRKS5_NSB_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS5_EPSt18_Rb_tree_node_baseSJ_OT_RT0_+0x80>
  64:	mov	w0, #0x7fffffff            	// #2147483647
  68:	cmp	x21, x0
  6c:	b.gt	80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_M_insert_IRKS5_NSB_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS5_EPSt18_Rb_tree_node_baseSJ_OT_RT0_+0x80>
  70:	mov	x8, #0xffffffff80000000    	// #-2147483648
  74:	cmp	x21, x8
  78:	mov	w8, #0x80000000            	// #-2147483648
  7c:	csel	w0, w21, w8, gt
  80:	lsr	w21, w0, #31
  84:	mov	w0, #0x40                  	// #64
  88:	bl	0 <_Znwm>
  8c:	add	x24, x0, #0x30
  90:	mov	x26, x0
  94:	str	x24, [x26, #32]!
  98:	ldp	x25, x22, [x22]
  9c:	mov	x23, x0
  a0:	cbnz	x25, a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_M_insert_IRKS5_NSB_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS5_EPSt18_Rb_tree_node_baseSJ_OT_RT0_+0xa8>
  a4:	cbnz	x22, 14c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_M_insert_IRKS5_NSB_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS5_EPSt18_Rb_tree_node_baseSJ_OT_RT0_+0x14c>
  a8:	cmp	x22, #0x10
  ac:	str	x22, [sp, #8]
  b0:	b.cc	d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_M_insert_IRKS5_NSB_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS5_EPSt18_Rb_tree_node_baseSJ_OT_RT0_+0xd4>  // b.lo, b.ul, b.last
  b4:	add	x1, sp, #0x8
  b8:	mov	x0, x26
  bc:	mov	x2, xzr
  c0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  c4:	ldr	x8, [sp, #8]
  c8:	str	x0, [x26]
  cc:	str	x8, [x24]
  d0:	mov	x24, x0
  d4:	cbz	x22, fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_M_insert_IRKS5_NSB_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS5_EPSt18_Rb_tree_node_baseSJ_OT_RT0_+0xfc>
  d8:	cmp	x22, #0x1
  dc:	b.ne	ec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_M_insert_IRKS5_NSB_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS5_EPSt18_Rb_tree_node_baseSJ_OT_RT0_+0xec>  // b.any
  e0:	ldrb	w8, [x25]
  e4:	strb	w8, [x24]
  e8:	b	fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_M_insert_IRKS5_NSB_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS5_EPSt18_Rb_tree_node_baseSJ_OT_RT0_+0xfc>
  ec:	mov	x0, x24
  f0:	mov	x1, x25
  f4:	mov	x2, x22
  f8:	bl	0 <memcpy>
  fc:	ldr	x8, [sp, #8]
 100:	ldr	x9, [x23, #32]
 104:	add	x3, x19, #0x8
 108:	mov	w0, w21
 10c:	mov	x1, x23
 110:	mov	x2, x20
 114:	str	x8, [x23, #40]
 118:	strb	wzr, [x9, x8]
 11c:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
 120:	ldr	x8, [x19, #40]
 124:	mov	x0, x23
 128:	add	x8, x8, #0x1
 12c:	str	x8, [x19, #40]
 130:	ldp	x20, x19, [sp, #80]
 134:	ldp	x22, x21, [sp, #64]
 138:	ldp	x24, x23, [sp, #48]
 13c:	ldp	x26, x25, [sp, #32]
 140:	ldp	x29, x30, [sp, #16]
 144:	add	sp, sp, #0x60
 148:	ret
 14c:	adrp	x0, 0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_M_insert_IRKS5_NSB_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS5_EPSt18_Rb_tree_node_baseSJ_OT_RT0_>
 150:	add	x0, x0, #0x0
 154:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldp	x20, x24, [x0]
  1c:	mov	x9, #0x7ffffffffffffff0    	// #9223372036854775792
  20:	sub	x8, x24, x20
  24:	cmp	x8, x9
  28:	b.eq	108 <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x108>  // b.none
  2c:	asr	x9, x8, #4
  30:	cmp	x8, #0x0
  34:	csinc	x10, x9, xzr, ne  // ne = any
  38:	adds	x9, x10, x9
  3c:	lsr	x11, x9, #59
  40:	cset	w10, cs  // cs = hs, nlast
  44:	cmp	x11, #0x0
  48:	cset	w11, ne  // ne = any
  4c:	orr	w10, w10, w11
  50:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  54:	cmp	w10, #0x0
  58:	csel	x25, x8, x9, ne  // ne = any
  5c:	sub	x8, x1, x20
  60:	mov	x23, x2
  64:	mov	x19, x0
  68:	mov	x21, x1
  6c:	asr	x26, x8, #4
  70:	cbz	x25, 84 <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x84>
  74:	lsl	x0, x25, #4
  78:	bl	0 <_Znwm>
  7c:	mov	x22, x0
  80:	b	88 <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x88>
  84:	mov	x22, xzr
  88:	ldr	q0, [x23]
  8c:	cmp	x20, x21
  90:	mov	x8, x22
  94:	str	q0, [x22, x26, lsl #4]
  98:	b.eq	b8 <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xb8>  // b.none
  9c:	mov	x8, x22
  a0:	mov	x9, x20
  a4:	ldr	q0, [x9], #16
  a8:	cmp	x21, x9
  ac:	str	q0, [x8]
  b0:	add	x8, x8, #0x10
  b4:	b.ne	a4 <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xa4>  // b.any
  b8:	cmp	x24, x21
  bc:	add	x23, x8, #0x10
  c0:	b.eq	d8 <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xd8>  // b.none
  c4:	ldr	q0, [x21], #16
  c8:	cmp	x24, x21
  cc:	str	q0, [x23]
  d0:	add	x23, x23, #0x10
  d4:	b.ne	c4 <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xc4>  // b.any
  d8:	cbz	x20, e4 <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xe4>
  dc:	mov	x0, x20
  e0:	bl	0 <_ZdlPv>
  e4:	add	x8, x22, x25, lsl #4
  e8:	stp	x22, x23, [x19]
  ec:	str	x8, [x19, #16]
  f0:	ldp	x20, x19, [sp, #64]
  f4:	ldp	x22, x21, [sp, #48]
  f8:	ldp	x24, x23, [sp, #32]
  fc:	ldp	x26, x25, [sp, #16]
 100:	ldp	x29, x30, [sp], #80
 104:	ret
 108:	adrp	x0, 0 <_ZNSt6vectorIN4llvm7TGLexer23PreprocessorControlDescESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 10c:	add	x0, x0, #0x0
 110:	bl	0 <_ZSt20__throw_length_errorPKc>

TGParser.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm22SubMultiClassReference4dumpEv>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	stp	x20, x19, [sp, #16]
       8:	mov	x29, sp
       c:	mov	x19, x0
      10:	bl	0 <_ZN4llvm4errsEv>
      14:	ldp	x9, x8, [x0, #16]
      18:	sub	x9, x9, x8
      1c:	cmp	x9, #0xb
      20:	b.hi	38 <_ZNK4llvm22SubMultiClassReference4dumpEv+0x38>  // b.pmore
      24:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
      28:	add	x1, x1, #0x0
      2c:	mov	w2, #0xc                   	// #12
      30:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
      34:	b	60 <_ZNK4llvm22SubMultiClassReference4dumpEv+0x60>
      38:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
      3c:	add	x9, x9, #0x0
      40:	ldr	x9, [x9]
      44:	mov	w10, #0x7373                	// #29555
      48:	movk	w10, #0xa3a, lsl #16
      4c:	str	w10, [x8, #8]
      50:	str	x9, [x8]
      54:	ldr	x8, [x0, #24]
      58:	add	x8, x8, #0xc
      5c:	str	x8, [x0, #24]
      60:	ldr	x0, [x19, #16]
      64:	bl	e8 <_ZNK4llvm10MultiClass4dumpEv>
      68:	bl	0 <_ZN4llvm4errsEv>
      6c:	ldp	x9, x8, [x0, #16]
      70:	sub	x9, x9, x8
      74:	cmp	x9, #0xe
      78:	b.hi	98 <_ZNK4llvm22SubMultiClassReference4dumpEv+0x98>  // b.pmore
      7c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
      80:	add	x1, x1, #0x0
      84:	mov	w2, #0xf                   	// #15
      88:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
      8c:	ldr	w8, [x19, #32]
      90:	cbnz	w8, c4 <_ZNK4llvm22SubMultiClassReference4dumpEv+0xc4>
      94:	b	dc <_ZNK4llvm22SubMultiClassReference4dumpEv+0xdc>
      98:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
      9c:	add	x9, x9, #0x0
      a0:	ldur	x10, [x9, #7]
      a4:	ldr	x9, [x9]
      a8:	stur	x10, [x8, #7]
      ac:	str	x9, [x8]
      b0:	ldr	x8, [x0, #24]
      b4:	add	x8, x8, #0xf
      b8:	str	x8, [x0, #24]
      bc:	ldr	w8, [x19, #32]
      c0:	cbz	w8, dc <_ZNK4llvm22SubMultiClassReference4dumpEv+0xdc>
      c4:	ldr	x19, [x19, #24]
      c8:	lsl	x20, x8, #3
      cc:	ldr	x0, [x19], #8
      d0:	bl	0 <_ZNK4llvm4Init4dumpEv>
      d4:	subs	x20, x20, #0x8
      d8:	b.ne	cc <_ZNK4llvm22SubMultiClassReference4dumpEv+0xcc>  // b.any
      dc:	ldp	x20, x19, [sp, #16]
      e0:	ldp	x29, x30, [sp], #32
      e4:	ret

00000000000000e8 <_ZNK4llvm10MultiClass4dumpEv>:
      e8:	stp	x29, x30, [sp, #-32]!
      ec:	stp	x20, x19, [sp, #16]
      f0:	mov	x29, sp
      f4:	mov	x19, x0
      f8:	bl	0 <_ZN4llvm4errsEv>
      fc:	ldp	x9, x8, [x0, #16]
     100:	sub	x9, x9, x8
     104:	cmp	x9, #0x7
     108:	b.hi	120 <_ZNK4llvm10MultiClass4dumpEv+0x38>  // b.pmore
     10c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     110:	add	x1, x1, #0x0
     114:	mov	w2, #0x8                   	// #8
     118:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     11c:	b	140 <_ZNK4llvm10MultiClass4dumpEv+0x58>
     120:	mov	x9, #0x6552                	// #25938
     124:	movk	x9, #0x6f63, lsl #16
     128:	movk	x9, #0x6472, lsl #32
     12c:	movk	x9, #0xa3a, lsl #48
     130:	str	x9, [x8]
     134:	ldr	x8, [x0, #24]
     138:	add	x8, x8, #0x8
     13c:	str	x8, [x0, #24]
     140:	mov	x0, x19
     144:	bl	0 <_ZNK4llvm6Record4dumpEv>
     148:	bl	0 <_ZN4llvm4errsEv>
     14c:	ldp	x9, x8, [x0, #16]
     150:	sub	x9, x9, x8
     154:	cmp	x9, #0x5
     158:	b.hi	170 <_ZNK4llvm10MultiClass4dumpEv+0x88>  // b.pmore
     15c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     160:	add	x1, x1, #0x0
     164:	mov	w2, #0x6                   	// #6
     168:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     16c:	b	190 <_ZNK4llvm10MultiClass4dumpEv+0xa8>
     170:	mov	w10, #0x6544                	// #25924
     174:	mov	w9, #0xa3a                 	// #2618
     178:	movk	w10, #0x7366, lsl #16
     17c:	strh	w9, [x8, #4]
     180:	str	w10, [x8]
     184:	ldr	x8, [x0, #24]
     188:	add	x8, x8, #0x6
     18c:	str	x8, [x0, #24]
     190:	ldr	x20, [x19, #128]
     194:	ldr	x19, [x19, #136]
     198:	cmp	x20, x19
     19c:	b.eq	1b4 <_ZNK4llvm10MultiClass4dumpEv+0xcc>  // b.none
     1a0:	mov	x0, x20
     1a4:	bl	df70 <_ZNK4llvm12RecordsEntry4dumpEv>
     1a8:	add	x20, x20, #0x10
     1ac:	cmp	x19, x20
     1b0:	b.ne	1a0 <_ZNK4llvm10MultiClass4dumpEv+0xb8>  // b.any
     1b4:	ldp	x20, x19, [sp, #16]
     1b8:	ldp	x29, x30, [sp], #32
     1bc:	ret

00000000000001c0 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE>:
     1c0:	sub	sp, sp, #0x1e0
     1c4:	stp	x29, x30, [sp, #416]
     1c8:	stp	x28, x23, [sp, #432]
     1cc:	stp	x22, x21, [sp, #448]
     1d0:	stp	x20, x19, [sp, #464]
     1d4:	add	x29, sp, #0x1a0
     1d8:	mov	x21, x3
     1dc:	mov	x19, x2
     1e0:	cbz	x1, 1f0 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x30>
     1e4:	ldr	w9, [x1, #80]
     1e8:	cbnz	w9, 1fc <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x3c>
     1ec:	b	2dc <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x11c>
     1f0:	ldr	x1, [x0, #328]
     1f4:	ldr	w9, [x1, #80]
     1f8:	cbz	w9, 2dc <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x11c>
     1fc:	ldr	x20, [x1, #72]
     200:	ldr	x8, [x21]
     204:	add	x9, x9, x9, lsl #1
     208:	sub	x22, x29, #0xa0
     20c:	lsl	x9, x9, #3
     210:	mov	x10, x20
     214:	ldr	x11, [x10], #24
     218:	cmp	x11, x8
     21c:	b.eq	230 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x70>  // b.none
     220:	subs	x9, x9, #0x18
     224:	mov	x20, x10
     228:	b.ne	214 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x54>  // b.any
     22c:	b	2dc <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x11c>
     230:	cbz	x20, 2dc <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x11c>
     234:	ldr	x1, [x21, #16]
     238:	mov	x0, x20
     23c:	bl	0 <_ZN4llvm9RecordVal8setValueEPNS_4InitE>
     240:	tbz	w0, #0, 2e8 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x128>
     244:	mov	x0, x21
     248:	bl	0 <_ZNK4llvm9RecordVal7getNameEv>
     24c:	mov	w8, #0x503                 	// #1283
     250:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     254:	add	x9, x9, #0x0
     258:	add	x10, sp, #0xc0
     25c:	strh	w8, [sp, #224]
     260:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     264:	add	x11, sp, #0xd0
     268:	add	x8, x8, #0x0
     26c:	stp	x9, x10, [sp, #208]
     270:	mov	w9, #0x302                 	// #770
     274:	stp	x0, x1, [sp, #192]
     278:	stp	x11, x8, [x29, #-184]
     27c:	sturh	w9, [x29, #-168]
     280:	ldr	x8, [x21, #8]
     284:	add	x23, sp, #0x88
     288:	and	x0, x8, #0xfffffffffffffff8
     28c:	ldr	x8, [x0]
     290:	ldr	x9, [x8, #16]
     294:	add	x8, sp, #0x88
     298:	blr	x9
     29c:	ldurb	w21, [x29, #-168]
     2a0:	mov	w8, #0x104                 	// #260
     2a4:	strh	w8, [sp, #184]
     2a8:	stp	x23, xzr, [sp, #168]
     2ac:	cmp	w21, #0x1
     2b0:	b.eq	304 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x144>  // b.none
     2b4:	cbnz	w21, 31c <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x15c>
     2b8:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     2bc:	mov	w8, #0x100                 	// #256
     2c0:	add	x9, x9, #0x0
     2c4:	mov	w10, #0x103                 	// #259
     2c8:	stp	xzr, xzr, [x29, #-160]
     2cc:	sturh	w8, [x29, #-144]
     2d0:	stp	x9, xzr, [sp, #112]
     2d4:	strh	w10, [sp, #128]
     2d8:	b	3a4 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x1e4>
     2dc:	mov	x0, x1
     2e0:	mov	x1, x21
     2e4:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     2e8:	mov	w0, wzr
     2ec:	ldp	x20, x19, [sp, #464]
     2f0:	ldp	x22, x21, [sp, #448]
     2f4:	ldp	x28, x23, [sp, #432]
     2f8:	ldp	x29, x30, [sp, #416]
     2fc:	add	sp, sp, #0x1e0
     300:	ret
     304:	ldr	x8, [sp, #184]
     308:	ldur	q0, [sp, #168]
     30c:	and	w21, w8, #0xff
     310:	str	q0, [x22]
     314:	stur	x8, [x29, #-144]
     318:	b	384 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x1c4>
     31c:	ldurb	w8, [x29, #-167]
     320:	ldur	x9, [x29, #-184]
     324:	mov	w10, #0x2                   	// #2
     328:	sub	x11, x29, #0xb8
     32c:	cmp	w8, #0x1
     330:	csel	w10, w21, w10, eq  // eq = none
     334:	add	x12, sp, #0x88
     338:	mov	w13, #0x4                   	// #4
     33c:	csel	x8, x9, x11, eq  // eq = none
     340:	cmp	w10, #0x2
     344:	stp	x8, x12, [x29, #-160]
     348:	sturb	w10, [x29, #-144]
     34c:	sturb	w13, [x29, #-143]
     350:	b.ne	384 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x1c4>  // b.any
     354:	ldrb	w9, [x8, #16]
     358:	cbz	w9, 69c <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x4dc>
     35c:	ldrb	w8, [x8, #17]
     360:	cmp	w8, #0x1
     364:	b.eq	69c <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x4dc>  // b.none
     368:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     36c:	add	x8, x8, #0x0
     370:	mov	w9, #0x103                 	// #259
     374:	mov	w21, #0x2                   	// #2
     378:	stp	x8, xzr, [sp, #112]
     37c:	strh	w9, [sp, #128]
     380:	b	444 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x284>
     384:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     388:	add	x8, x8, #0x0
     38c:	mov	w9, #0x103                 	// #259
     390:	cmp	w21, #0x1
     394:	stp	x8, xzr, [sp, #112]
     398:	strh	w9, [sp, #128]
     39c:	b.eq	59c <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x3dc>  // b.none
     3a0:	cbnz	w21, 444 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x284>
     3a4:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     3a8:	mov	w8, #0x100                 	// #256
     3ac:	add	x9, x9, #0x0
     3b0:	mov	w10, #0x103                 	// #259
     3b4:	stp	xzr, xzr, [x29, #-128]
     3b8:	sturh	w8, [x29, #-112]
     3bc:	stp	x9, xzr, [sp, #88]
     3c0:	strh	w10, [sp, #104]
     3c4:	mov	w8, #0x100                 	// #256
     3c8:	mov	w21, wzr
     3cc:	stp	xzr, xzr, [x29, #-96]
     3d0:	sturh	w8, [x29, #-80]
     3d4:	ldr	x8, [x20, #8]
     3d8:	add	x20, sp, #0x20
     3dc:	and	x0, x8, #0xfffffffffffffff8
     3e0:	ldr	x8, [x0]
     3e4:	ldr	x9, [x8, #16]
     3e8:	add	x8, sp, #0x20
     3ec:	blr	x9
     3f0:	mov	w8, #0x104                 	// #260
     3f4:	cmp	w21, #0x1
     3f8:	strh	w8, [sp, #80]
     3fc:	stp	x20, xzr, [sp, #64]
     400:	b.eq	42c <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x26c>  // b.none
     404:	cbnz	w21, 4b0 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x2f0>
     408:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     40c:	mov	w8, #0x100                 	// #256
     410:	add	x9, x9, #0x0
     414:	mov	w10, #0x103                 	// #259
     418:	stp	xzr, xzr, [x29, #-64]
     41c:	sturh	w8, [x29, #-48]
     420:	stp	x9, xzr, [sp, #8]
     424:	strh	w10, [sp, #24]
     428:	b	538 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x378>
     42c:	ldr	x8, [sp, #80]
     430:	ldr	q0, [sp, #64]
     434:	and	w21, w8, #0xff
     438:	str	q0, [x22, #96]
     43c:	stur	x8, [x29, #-48]
     440:	b	518 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x358>
     444:	ldurb	w8, [x29, #-143]
     448:	ldur	x9, [x29, #-160]
     44c:	mov	w10, #0x2                   	// #2
     450:	sub	x11, x29, #0xa0
     454:	cmp	w8, #0x1
     458:	adrp	x12, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     45c:	csel	w10, w21, w10, eq  // eq = none
     460:	add	x12, x12, #0x0
     464:	mov	w13, #0x3                   	// #3
     468:	csel	x8, x9, x11, eq  // eq = none
     46c:	cmp	w10, #0x2
     470:	stp	x8, x12, [x29, #-128]
     474:	sturb	w10, [x29, #-112]
     478:	sturb	w13, [x29, #-111]
     47c:	b.ne	5b0 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x3f0>  // b.any
     480:	ldrb	w9, [x8, #16]
     484:	cbz	w9, 69c <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x4dc>
     488:	ldrb	w8, [x8, #17]
     48c:	cmp	w8, #0x1
     490:	b.eq	69c <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x4dc>  // b.none
     494:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     498:	add	x8, x8, #0x0
     49c:	mov	w9, #0x103                 	// #259
     4a0:	mov	w21, #0x2                   	// #2
     4a4:	stp	x8, xzr, [sp, #88]
     4a8:	strh	w9, [sp, #104]
     4ac:	b	5d0 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x410>
     4b0:	ldurb	w8, [x29, #-79]
     4b4:	ldur	x9, [x29, #-96]
     4b8:	mov	w10, #0x2                   	// #2
     4bc:	sub	x11, x29, #0x60
     4c0:	cmp	w8, #0x1
     4c4:	csel	w10, w21, w10, eq  // eq = none
     4c8:	add	x12, sp, #0x20
     4cc:	mov	w13, #0x4                   	// #4
     4d0:	csel	x8, x9, x11, eq  // eq = none
     4d4:	cmp	w10, #0x2
     4d8:	stp	x8, x12, [x29, #-64]
     4dc:	sturb	w10, [x29, #-48]
     4e0:	sturb	w13, [x29, #-47]
     4e4:	b.ne	518 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x358>  // b.any
     4e8:	ldrb	w9, [x8, #16]
     4ec:	cbz	w9, 69c <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x4dc>
     4f0:	ldrb	w8, [x8, #17]
     4f4:	cmp	w8, #0x1
     4f8:	b.eq	69c <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x4dc>  // b.none
     4fc:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     500:	add	x8, x8, #0x0
     504:	mov	w9, #0x103                 	// #259
     508:	mov	w21, #0x2                   	// #2
     50c:	stp	x8, xzr, [sp, #8]
     510:	strh	w9, [sp, #24]
     514:	b	548 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x388>
     518:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     51c:	add	x8, x8, #0x0
     520:	mov	w9, #0x103                 	// #259
     524:	cmp	w21, #0x1
     528:	stp	x8, xzr, [sp, #8]
     52c:	strh	w9, [sp, #24]
     530:	b.eq	628 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x468>  // b.none
     534:	cbnz	w21, 548 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x388>
     538:	mov	w8, #0x100                 	// #256
     53c:	stp	xzr, xzr, [x29, #-32]
     540:	sturh	w8, [x29, #-16]
     544:	b	638 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x478>
     548:	ldurb	w8, [x29, #-47]
     54c:	ldur	x9, [x29, #-64]
     550:	mov	w10, #0x2                   	// #2
     554:	sub	x11, x29, #0x40
     558:	cmp	w8, #0x1
     55c:	adrp	x12, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     560:	csel	w10, w21, w10, eq  // eq = none
     564:	add	x12, x12, #0x0
     568:	mov	w13, #0x3                   	// #3
     56c:	csel	x8, x9, x11, eq  // eq = none
     570:	cmp	w10, #0x2
     574:	stp	x8, x12, [x29, #-32]
     578:	sturb	w10, [x29, #-16]
     57c:	sturb	w13, [x29, #-15]
     580:	b.ne	638 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x478>  // b.any
     584:	ldrb	w9, [x8, #16]
     588:	cbz	w9, 69c <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x4dc>
     58c:	ldrb	w8, [x8, #17]
     590:	cmp	w8, #0x1
     594:	b.ne	638 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x478>  // b.any
     598:	b	69c <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x4dc>
     59c:	ldr	x8, [sp, #128]
     5a0:	ldr	q0, [sp, #112]
     5a4:	and	w21, w8, #0xff
     5a8:	str	q0, [x22, #32]
     5ac:	stur	x8, [x29, #-112]
     5b0:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     5b4:	add	x8, x8, #0x0
     5b8:	mov	w9, #0x103                 	// #259
     5bc:	cmp	w21, #0x1
     5c0:	stp	x8, xzr, [sp, #88]
     5c4:	strh	w9, [sp, #104]
     5c8:	b.eq	684 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x4c4>  // b.none
     5cc:	cbz	w21, 3c4 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x204>
     5d0:	ldurb	w8, [x29, #-111]
     5d4:	ldur	x9, [x29, #-128]
     5d8:	mov	w10, #0x2                   	// #2
     5dc:	sub	x11, x29, #0x80
     5e0:	cmp	w8, #0x1
     5e4:	adrp	x12, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     5e8:	csel	w10, w21, w10, eq  // eq = none
     5ec:	add	x12, x12, #0x0
     5f0:	mov	w13, #0x3                   	// #3
     5f4:	csel	x8, x9, x11, eq  // eq = none
     5f8:	cmp	w10, #0x2
     5fc:	stp	x8, x12, [x29, #-96]
     600:	sturb	w10, [x29, #-80]
     604:	sturb	w13, [x29, #-79]
     608:	b.ne	3d4 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x214>  // b.any
     60c:	ldrb	w9, [x8, #16]
     610:	cbz	w9, 69c <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x4dc>
     614:	ldrb	w8, [x8, #17]
     618:	cmp	w8, #0x1
     61c:	b.eq	69c <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x4dc>  // b.none
     620:	mov	w21, #0x2                   	// #2
     624:	b	3d4 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x214>
     628:	ldur	q0, [sp, #8]
     62c:	ldr	x8, [sp, #24]
     630:	str	q0, [x22, #128]
     634:	stur	x8, [x29, #-16]
     638:	sub	x0, x29, #0x8
     63c:	sub	x2, x29, #0x20
     640:	mov	w1, #0x1                   	// #1
     644:	stur	x19, [x29, #-8]
     648:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
     64c:	ldr	x0, [sp, #32]
     650:	add	x8, sp, #0x20
     654:	add	x8, x8, #0x10
     658:	cmp	x0, x8
     65c:	b.eq	664 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x4a4>  // b.none
     660:	bl	0 <_ZdlPv>
     664:	ldr	x0, [sp, #136]
     668:	add	x8, sp, #0x88
     66c:	add	x8, x8, #0x10
     670:	cmp	x0, x8
     674:	b.eq	67c <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x4bc>  // b.none
     678:	bl	0 <_ZdlPv>
     67c:	mov	w0, #0x1                   	// #1
     680:	b	2ec <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x12c>
     684:	ldr	x8, [sp, #104]
     688:	ldur	q0, [sp, #88]
     68c:	and	w21, w8, #0xff
     690:	str	q0, [x22, #64]
     694:	stur	x8, [x29, #-80]
     698:	b	3d4 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x214>
     69c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     6a0:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     6a4:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     6a8:	add	x0, x0, #0x0
     6ac:	add	x1, x1, #0x0
     6b0:	add	x3, x3, #0x0
     6b4:	mov	w2, #0xb8                  	// #184
     6b8:	bl	0 <__assert_fail>

00000000000006bc <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b>:
     6bc:	stp	x29, x30, [sp, #-96]!
     6c0:	stp	x28, x27, [sp, #16]
     6c4:	stp	x26, x25, [sp, #32]
     6c8:	stp	x24, x23, [sp, #48]
     6cc:	stp	x22, x21, [sp, #64]
     6d0:	stp	x20, x19, [sp, #80]
     6d4:	mov	x29, sp
     6d8:	sub	sp, sp, #0x210
     6dc:	cbz	x6, d88 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x6cc>
     6e0:	mov	x20, x6
     6e4:	mov	x23, x5
     6e8:	mov	x24, x4
     6ec:	mov	x22, x3
     6f0:	mov	x19, x2
     6f4:	cbz	x1, 704 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x48>
     6f8:	ldr	w8, [x1, #80]
     6fc:	cbnz	w8, 710 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x54>
     700:	b	7bc <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x100>
     704:	ldr	x1, [x0, #328]
     708:	ldr	w8, [x1, #80]
     70c:	cbz	w8, 7bc <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x100>
     710:	ldr	x21, [x1, #72]
     714:	add	x8, x8, x8, lsl #1
     718:	sub	x25, x29, #0xf0
     71c:	lsl	x8, x8, #3
     720:	mov	x9, x21
     724:	ldr	x10, [x9], #24
     728:	cmp	x10, x22
     72c:	b.eq	740 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x84>  // b.none
     730:	subs	x8, x8, #0x18
     734:	mov	x21, x9
     738:	b.ne	724 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x68>  // b.any
     73c:	b	7bc <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x100>
     740:	cbz	x21, 7bc <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x100>
     744:	cbz	x23, 900 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x244>
     748:	ldr	x28, [x21, #16]
     74c:	cbz	x28, 1440 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xd84>
     750:	ldrb	w8, [x28, #8]
     754:	cmp	w8, #0x3
     758:	b.ne	928 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x26c>  // b.any
     75c:	mov	w0, w23
     760:	bl	0 <_ZN4llvm9BitsRecTy3getEj>
     764:	ldr	x8, [x20]
     768:	mov	x1, x0
     76c:	mov	x0, x20
     770:	ldr	x8, [x8, #56]
     774:	blr	x8
     778:	cbz	x0, 984 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x2c8>
     77c:	ldr	w26, [x28, #32]
     780:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     784:	ldr	d0, [x9]
     788:	sub	x8, x29, #0xf0
     78c:	mov	x25, x0
     790:	add	x1, x8, #0x10
     794:	cmp	w26, #0x11
     798:	stur	x1, [x29, #-240]
     79c:	stur	d0, [x29, #-232]
     7a0:	b.cc	9f4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x338>  // b.lo, b.ul, b.last
     7a4:	sub	x0, x29, #0xf0
     7a8:	mov	w3, #0x8                   	// #8
     7ac:	mov	x2, x26
     7b0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     7b4:	ldur	w8, [x29, #-228]
     7b8:	b	9f8 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x33c>
     7bc:	ldr	x8, [x22]
     7c0:	mov	x0, x22
     7c4:	ldr	x9, [x8, #48]
     7c8:	sub	x8, x29, #0x60
     7cc:	blr	x9
     7d0:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     7d4:	add	x3, x3, #0x0
     7d8:	sub	x0, x29, #0x60
     7dc:	mov	w4, #0x7                   	// #7
     7e0:	mov	x1, xzr
     7e4:	mov	x2, xzr
     7e8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
     7ec:	sub	x8, x29, #0x38
     7f0:	add	x20, x8, #0x10
     7f4:	stur	x20, [x29, #-56]
     7f8:	mov	x8, x0
     7fc:	ldr	x9, [x8], #16
     800:	cmp	x9, x8
     804:	b.eq	818 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x15c>  // b.none
     808:	stur	x9, [x29, #-56]
     80c:	ldr	x9, [x0, #16]
     810:	stur	x9, [x29, #-40]
     814:	b	820 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x164>
     818:	ldr	q0, [x9]
     81c:	str	q0, [x20]
     820:	ldr	x9, [x0, #8]
     824:	stur	x9, [x29, #-48]
     828:	stp	x8, xzr, [x0]
     82c:	strb	wzr, [x0, #16]
     830:	ldur	x8, [x29, #-48]
     834:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
     838:	sub	x8, x9, x8
     83c:	cmp	x8, #0x9
     840:	b.ls	1414 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xd58>  // b.plast
     844:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     848:	add	x1, x1, #0x0
     84c:	sub	x0, x29, #0x38
     850:	mov	w2, #0xa                   	// #10
     854:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
     858:	sub	x8, x29, #0xf0
     85c:	add	x21, x8, #0x10
     860:	stur	x21, [x29, #-240]
     864:	mov	x8, x0
     868:	ldr	x9, [x8], #16
     86c:	cmp	x9, x8
     870:	b.eq	884 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x1c8>  // b.none
     874:	stur	x9, [x29, #-240]
     878:	ldr	x9, [x0, #16]
     87c:	stur	x9, [x29, #-224]
     880:	b	88c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x1d0>
     884:	ldr	q0, [x9]
     888:	str	q0, [x21]
     88c:	ldr	x9, [x0, #8]
     890:	mov	w10, #0x104                 	// #260
     894:	sub	x11, x29, #0xf0
     898:	add	x2, sp, #0xe0
     89c:	stur	x9, [x29, #-232]
     8a0:	stp	x8, xzr, [x0]
     8a4:	strb	wzr, [x0, #16]
     8a8:	add	x0, sp, #0xc0
     8ac:	mov	w1, #0x1                   	// #1
     8b0:	strh	w10, [sp, #240]
     8b4:	stp	x11, xzr, [sp, #224]
     8b8:	str	x19, [sp, #192]
     8bc:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
     8c0:	ldur	x0, [x29, #-240]
     8c4:	cmp	x0, x21
     8c8:	b.eq	8d0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x214>  // b.none
     8cc:	bl	0 <_ZdlPv>
     8d0:	ldur	x0, [x29, #-56]
     8d4:	cmp	x0, x20
     8d8:	b.eq	8e0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x224>  // b.none
     8dc:	bl	0 <_ZdlPv>
     8e0:	ldur	x0, [x29, #-96]
     8e4:	sub	x8, x29, #0x60
     8e8:	add	x8, x8, #0x10
     8ec:	cmp	x0, x8
     8f0:	b.eq	8f8 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x23c>  // b.none
     8f4:	bl	0 <_ZdlPv>
     8f8:	mov	w19, #0x1                   	// #1
     8fc:	b	d8c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x6d0>
     900:	ldrb	w8, [x20, #8]
     904:	cmp	w8, #0x13
     908:	b.ne	ce0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x624>  // b.any
     90c:	ldr	x8, [x20, #24]
     910:	cmp	x8, x22
     914:	b.ne	ce0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x624>  // b.any
     918:	tbnz	w7, #0, ce0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x624>
     91c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     920:	add	x8, x8, #0x0
     924:	b	98c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x2d0>
     928:	ldr	x8, [x22]
     92c:	mov	x0, x22
     930:	ldr	x9, [x8, #48]
     934:	sub	x8, x29, #0x60
     938:	blr	x9
     93c:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     940:	add	x3, x3, #0x0
     944:	sub	x0, x29, #0x60
     948:	mov	w4, #0x7                   	// #7
     94c:	mov	x1, xzr
     950:	mov	x2, xzr
     954:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
     958:	sub	x8, x29, #0x38
     95c:	add	x20, x8, #0x10
     960:	stur	x20, [x29, #-56]
     964:	mov	x8, x0
     968:	ldr	x9, [x8], #16
     96c:	cmp	x9, x8
     970:	b.eq	9b4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x2f8>  // b.none
     974:	stur	x9, [x29, #-56]
     978:	ldr	x9, [x0, #16]
     97c:	stur	x9, [x29, #-40]
     980:	b	9bc <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x300>
     984:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     988:	add	x8, x8, #0x0
     98c:	mov	w9, #0x103                 	// #259
     990:	sub	x0, x29, #0x38
     994:	sub	x2, x29, #0xf0
     998:	mov	w1, #0x1                   	// #1
     99c:	stp	x8, xzr, [x29, #-240]
     9a0:	sturh	w9, [x29, #-224]
     9a4:	stur	x19, [x29, #-56]
     9a8:	mov	w19, #0x1                   	// #1
     9ac:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
     9b0:	b	d8c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x6d0>
     9b4:	ldr	q0, [x9]
     9b8:	str	q0, [x20]
     9bc:	ldr	x9, [x0, #8]
     9c0:	stur	x9, [x29, #-48]
     9c4:	stp	x8, xzr, [x0]
     9c8:	strb	wzr, [x0, #16]
     9cc:	ldur	x8, [x29, #-48]
     9d0:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
     9d4:	sub	x8, x9, x8
     9d8:	cmp	x8, #0x13
     9dc:	b.ls	1414 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xd58>  // b.plast
     9e0:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     9e4:	add	x1, x1, #0x0
     9e8:	sub	x0, x29, #0x38
     9ec:	mov	w2, #0x14                  	// #20
     9f0:	b	854 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x198>
     9f4:	mov	w8, #0x10                  	// #16
     9f8:	cmp	x8, x26
     9fc:	b.cc	1460 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xda4>  // b.lo, b.ul, b.last
     a00:	stur	w26, [x29, #-232]
     a04:	cbz	w26, a18 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x35c>
     a08:	ldur	x0, [x29, #-240]
     a0c:	lsl	x2, x26, #3
     a10:	mov	w1, wzr
     a14:	bl	0 <memset>
     a18:	cbz	w23, a7c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x3c0>
     a1c:	mov	w8, wzr
     a20:	mov	w26, w8
     a24:	cmp	x23, x26
     a28:	b.ls	1420 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xd64>  // b.plast
     a2c:	ldr	w27, [x24, x26, lsl #2]
     a30:	ldur	w8, [x29, #-232]
     a34:	cmp	w8, w27
     a38:	b.ls	13f4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xd38>  // b.plast
     a3c:	ldur	x8, [x29, #-240]
     a40:	ldr	x8, [x8, x27, lsl #3]
     a44:	cbnz	x8, ae0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x424>
     a48:	ldr	x8, [x25]
     a4c:	mov	x0, x25
     a50:	mov	w1, w26
     a54:	ldr	x8, [x8, #104]
     a58:	blr	x8
     a5c:	ldur	w8, [x29, #-232]
     a60:	cmp	w8, w27
     a64:	b.ls	13f4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xd38>  // b.plast
     a68:	ldur	x9, [x29, #-240]
     a6c:	add	w8, w26, #0x1
     a70:	cmp	w23, w8
     a74:	str	x0, [x9, x27, lsl #3]
     a78:	b.ne	a20 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x364>  // b.any
     a7c:	ldr	w11, [x28, #32]
     a80:	ldur	w1, [x29, #-232]
     a84:	sub	x25, x29, #0xf0
     a88:	cbz	w11, acc <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x410>
     a8c:	mov	x8, xzr
     a90:	lsl	x9, x1, #3
     a94:	add	x10, x28, #0x28
     a98:	lsl	x11, x11, #3
     a9c:	b	aac <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x3f0>
     aa0:	add	x8, x8, #0x8
     aa4:	cmp	x11, x8
     aa8:	b.eq	acc <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x410>  // b.none
     aac:	cmp	x9, x8
     ab0:	b.eq	13f4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xd38>  // b.none
     ab4:	ldur	x12, [x29, #-240]
     ab8:	ldr	x13, [x12, x8]
     abc:	cbnz	x13, aa0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x3e4>
     ac0:	ldr	x13, [x10, x8]
     ac4:	str	x13, [x12, x8]
     ac8:	b	aa0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x3e4>
     acc:	ldur	x0, [x29, #-240]
     ad0:	bl	0 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
     ad4:	mov	x20, x0
     ad8:	mov	w23, wzr
     adc:	b	cc4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x608>
     ae0:	stp	xzr, xzr, [sp, #128]
     ae4:	str	w27, [sp, #128]
     ae8:	mov	w10, #0x903                 	// #2307
     aec:	mov	w8, #0x109                 	// #265
     af0:	strh	w10, [sp, #176]
     af4:	ldr	x10, [sp, #128]
     af8:	strh	w8, [sp, #144]
     afc:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     b00:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     b04:	add	x11, sp, #0xa0
     b08:	add	x8, x8, #0x0
     b0c:	add	x9, x9, #0x0
     b10:	stp	x11, x8, [sp, #192]
     b14:	mov	w8, #0x302                 	// #770
     b18:	stp	x9, x10, [sp, #160]
     b1c:	strh	w8, [sp, #208]
     b20:	ldr	x8, [x22]
     b24:	mov	x0, x22
     b28:	sub	x23, x29, #0x38
     b2c:	ldr	x9, [x8, #48]
     b30:	sub	x8, x29, #0x38
     b34:	blr	x9
     b38:	ldrb	w8, [sp, #208]
     b3c:	mov	w9, #0x104                 	// #260
     b40:	strh	w9, [sp, #112]
     b44:	stp	x23, xzr, [sp, #96]
     b48:	cmp	w8, #0x1
     b4c:	b.eq	b7c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x4c0>  // b.none
     b50:	sub	x25, x29, #0xf0
     b54:	cbnz	w8, b98 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x4dc>
     b58:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     b5c:	mov	w8, #0x100                 	// #256
     b60:	add	x9, x9, #0x0
     b64:	mov	w10, #0x103                 	// #259
     b68:	stp	xzr, xzr, [sp, #224]
     b6c:	strh	w8, [sp, #240]
     b70:	stp	x9, xzr, [sp, #64]
     b74:	strh	w10, [sp, #80]
     b78:	b	c20 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x564>
     b7c:	ldr	x8, [sp, #112]
     b80:	ldr	q0, [sp, #96]
     b84:	sub	x25, x29, #0xf0
     b88:	str	x8, [sp, #240]
     b8c:	and	w8, w8, #0xff
     b90:	str	q0, [sp, #224]
     b94:	b	c00 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x544>
     b98:	ldrb	w9, [sp, #209]
     b9c:	ldr	x10, [sp, #192]
     ba0:	mov	w11, #0x2                   	// #2
     ba4:	add	x12, sp, #0xc0
     ba8:	cmp	w9, #0x1
     bac:	csel	w11, w8, w11, eq  // eq = none
     bb0:	sub	x13, x29, #0x38
     bb4:	mov	w14, #0x4                   	// #4
     bb8:	csel	x9, x10, x12, eq  // eq = none
     bbc:	cmp	w11, #0x2
     bc0:	stp	x9, x13, [sp, #224]
     bc4:	strb	w11, [sp, #240]
     bc8:	strb	w14, [sp, #241]
     bcc:	b.ne	c00 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x544>  // b.any
     bd0:	ldrb	w8, [x9, #16]
     bd4:	cbz	w8, 1480 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xdc4>
     bd8:	ldrb	w8, [x9, #17]
     bdc:	cmp	w8, #0x1
     be0:	b.eq	1480 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xdc4>  // b.none
     be4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     be8:	add	x8, x8, #0x0
     bec:	mov	w9, #0x103                 	// #259
     bf0:	stp	x8, xzr, [sp, #64]
     bf4:	mov	w8, #0x2                   	// #2
     bf8:	strh	w9, [sp, #80]
     bfc:	b	c30 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x574>
     c00:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     c04:	add	x9, x9, #0x0
     c08:	mov	w10, #0x103                 	// #259
     c0c:	cmp	w8, #0x1
     c10:	stp	x9, xzr, [sp, #64]
     c14:	strh	w10, [sp, #80]
     c18:	b.eq	c84 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x5c8>  // b.none
     c1c:	cbnz	w8, c30 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x574>
     c20:	mov	w8, #0x100                 	// #256
     c24:	stp	xzr, xzr, [x29, #-96]
     c28:	sturh	w8, [x29, #-80]
     c2c:	b	c94 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x5d8>
     c30:	ldrb	w9, [sp, #241]
     c34:	ldr	x10, [sp, #224]
     c38:	mov	w11, #0x2                   	// #2
     c3c:	add	x12, sp, #0xe0
     c40:	cmp	w9, #0x1
     c44:	adrp	x13, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     c48:	csel	w9, w8, w11, eq  // eq = none
     c4c:	add	x13, x13, #0x0
     c50:	mov	w14, #0x3                   	// #3
     c54:	csel	x8, x10, x12, eq  // eq = none
     c58:	cmp	w9, #0x2
     c5c:	stp	x8, x13, [x29, #-96]
     c60:	sturb	w9, [x29, #-80]
     c64:	sturb	w14, [x29, #-79]
     c68:	b.ne	c94 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x5d8>  // b.any
     c6c:	ldrb	w9, [x8, #16]
     c70:	cbz	w9, 1480 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xdc4>
     c74:	ldrb	w8, [x8, #17]
     c78:	cmp	w8, #0x1
     c7c:	b.ne	c94 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x5d8>  // b.any
     c80:	b	1480 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xdc4>
     c84:	ldr	q0, [sp, #64]
     c88:	ldr	x8, [sp, #80]
     c8c:	stur	q0, [x29, #-96]
     c90:	stur	x8, [x29, #-80]
     c94:	add	x0, sp, #0x20
     c98:	sub	x2, x29, #0x60
     c9c:	mov	w1, #0x1                   	// #1
     ca0:	str	x19, [sp, #32]
     ca4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
     ca8:	ldur	x0, [x29, #-56]
     cac:	sub	x8, x29, #0x38
     cb0:	add	x8, x8, #0x10
     cb4:	cmp	x0, x8
     cb8:	b.eq	cc0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x604>  // b.none
     cbc:	bl	0 <_ZdlPv>
     cc0:	mov	w23, #0x1                   	// #1
     cc4:	ldur	x0, [x29, #-240]
     cc8:	sub	x8, x29, #0xf0
     ccc:	add	x8, x8, #0x10
     cd0:	cmp	x0, x8
     cd4:	b.eq	cdc <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x620>  // b.none
     cd8:	bl	0 <free>
     cdc:	cbnz	w23, 8f8 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x23c>
     ce0:	mov	x0, x21
     ce4:	mov	x1, x20
     ce8:	bl	0 <_ZN4llvm9RecordVal8setValueEPNS_4InitE>
     cec:	tbz	w0, #0, d88 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x6cc>
     cf0:	sub	x8, x29, #0xf0
     cf4:	add	x23, x8, #0x10
     cf8:	stp	x23, xzr, [x29, #-240]
     cfc:	sturb	wzr, [x29, #-224]
     d00:	cbz	x20, 1440 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xd84>
     d04:	ldrb	w8, [x20, #8]
     d08:	cmp	w8, #0x3
     d0c:	b.ne	db0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x6f4>  // b.any
     d10:	ldr	w8, [x20, #32]
     d14:	stp	xzr, xzr, [sp, #224]
     d18:	adrp	x10, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     d1c:	add	x10, x10, #0x0
     d20:	str	w8, [sp, #224]
     d24:	ldr	x8, [sp, #224]
     d28:	mov	w9, #0x109                 	// #265
     d2c:	mov	w11, #0x903                 	// #2307
     d30:	sub	x0, x29, #0x60
     d34:	stp	x10, x8, [x29, #-96]
     d38:	sub	x8, x29, #0x38
     d3c:	strh	w9, [sp, #240]
     d40:	sturh	w11, [x29, #-80]
     d44:	sub	x24, x29, #0x38
     d48:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
     d4c:	ldur	x1, [x29, #-56]
     d50:	add	x24, x24, #0x10
     d54:	cmp	x1, x24
     d58:	b.eq	e14 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x758>  // b.none
     d5c:	ldur	x8, [x29, #-240]
     d60:	ldur	x9, [x29, #-224]
     d64:	ldur	q0, [x25, #192]
     d68:	stur	x1, [x29, #-240]
     d6c:	cmp	x8, x23
     d70:	csel	x8, xzr, x8, eq  // eq = none
     d74:	stur	q0, [x25, #8]
     d78:	cbz	x8, e34 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x778>
     d7c:	stur	x8, [x29, #-56]
     d80:	stur	x9, [x29, #-40]
     d84:	b	f24 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x868>
     d88:	mov	w19, wzr
     d8c:	mov	w0, w19
     d90:	add	sp, sp, #0x210
     d94:	ldp	x20, x19, [sp, #80]
     d98:	ldp	x22, x21, [sp, #64]
     d9c:	ldp	x24, x23, [sp, #48]
     da0:	ldp	x26, x25, [sp, #32]
     da4:	ldp	x28, x27, [sp, #16]
     da8:	ldp	x29, x30, [sp], #96
     dac:	ret
     db0:	sub	w8, w8, #0x1
     db4:	cmp	w8, #0x16
     db8:	b.hi	f3c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x880>  // b.pmore
     dbc:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     dc0:	add	x8, x8, #0x0
     dc4:	mov	w9, #0x103                 	// #259
     dc8:	stp	x8, xzr, [sp, #192]
     dcc:	strh	w9, [sp, #208]
     dd0:	ldr	x0, [x20, #16]
     dd4:	sub	x24, x29, #0x60
     dd8:	ldr	x8, [x0]
     ddc:	ldr	x9, [x8, #16]
     de0:	sub	x8, x29, #0x60
     de4:	blr	x9
     de8:	ldrb	w8, [sp, #208]
     dec:	mov	w9, #0x104                 	// #260
     df0:	strh	w9, [sp, #176]
     df4:	stp	x24, xzr, [sp, #160]
     df8:	cmp	w8, #0x1
     dfc:	b.eq	e40 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x784>  // b.none
     e00:	cbnz	w8, e54 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x798>
     e04:	mov	w8, #0x100                 	// #256
     e08:	stp	xzr, xzr, [sp, #224]
     e0c:	strh	w8, [sp, #240]
     e10:	b	ea0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x7e4>
     e14:	ldur	x2, [x29, #-48]
     e18:	cbz	x2, f10 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x854>
     e1c:	ldur	x0, [x29, #-240]
     e20:	cmp	x2, #0x1
     e24:	b.ne	f0c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x850>  // b.any
     e28:	ldrb	w8, [x1]
     e2c:	strb	w8, [x0]
     e30:	b	f10 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x854>
     e34:	mov	x8, x24
     e38:	stur	x24, [x29, #-56]
     e3c:	b	f24 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x868>
     e40:	ldr	q0, [sp, #160]
     e44:	ldr	x8, [sp, #176]
     e48:	str	q0, [sp, #224]
     e4c:	str	x8, [sp, #240]
     e50:	b	ea0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x7e4>
     e54:	ldrb	w9, [sp, #209]
     e58:	ldr	x10, [sp, #192]
     e5c:	mov	w11, #0x2                   	// #2
     e60:	add	x12, sp, #0xc0
     e64:	cmp	w9, #0x1
     e68:	csel	w9, w8, w11, eq  // eq = none
     e6c:	sub	x13, x29, #0x60
     e70:	mov	w14, #0x4                   	// #4
     e74:	csel	x8, x10, x12, eq  // eq = none
     e78:	cmp	w9, #0x2
     e7c:	stp	x8, x13, [sp, #224]
     e80:	strb	w9, [sp, #240]
     e84:	strb	w14, [sp, #241]
     e88:	b.ne	ea0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x7e4>  // b.any
     e8c:	ldrb	w9, [x8, #16]
     e90:	cbz	w9, 1480 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xdc4>
     e94:	ldrb	w8, [x8, #17]
     e98:	cmp	w8, #0x1
     e9c:	b.eq	1480 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xdc4>  // b.none
     ea0:	sub	x8, x29, #0x38
     ea4:	add	x0, sp, #0xe0
     ea8:	sub	x24, x29, #0x38
     eac:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
     eb0:	ldur	x1, [x29, #-56]
     eb4:	add	x24, x24, #0x10
     eb8:	cmp	x1, x24
     ebc:	b.eq	eec <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x830>  // b.none
     ec0:	ldur	x8, [x29, #-240]
     ec4:	ldur	x9, [x29, #-224]
     ec8:	ldur	q0, [x25, #192]
     ecc:	stur	x1, [x29, #-240]
     ed0:	cmp	x8, x23
     ed4:	csel	x8, xzr, x8, eq  // eq = none
     ed8:	stur	q0, [x25, #8]
     edc:	cbz	x8, 13a0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xce4>
     ee0:	stur	x8, [x29, #-56]
     ee4:	stur	x9, [x29, #-40]
     ee8:	b	13c4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xd08>
     eec:	ldur	x2, [x29, #-48]
     ef0:	cbz	x2, 13b0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xcf4>
     ef4:	ldur	x0, [x29, #-240]
     ef8:	cmp	x2, #0x1
     efc:	b.ne	13ac <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xcf0>  // b.any
     f00:	ldrb	w8, [x1]
     f04:	strb	w8, [x0]
     f08:	b	13b0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xcf4>
     f0c:	bl	0 <memcpy>
     f10:	ldur	x8, [x29, #-48]
     f14:	ldur	x9, [x29, #-240]
     f18:	stur	x8, [x29, #-232]
     f1c:	strb	wzr, [x9, x8]
     f20:	ldur	x8, [x29, #-56]
     f24:	stur	xzr, [x29, #-48]
     f28:	strb	wzr, [x8]
     f2c:	ldur	x0, [x29, #-56]
     f30:	cmp	x0, x24
     f34:	b.eq	f3c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x880>  // b.none
     f38:	bl	0 <_ZdlPv>
     f3c:	ldr	x8, [x22]
     f40:	mov	x0, x22
     f44:	ldr	x9, [x8, #48]
     f48:	add	x8, sp, #0x40
     f4c:	blr	x9
     f50:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     f54:	add	x3, x3, #0x0
     f58:	add	x0, sp, #0x40
     f5c:	mov	w4, #0x7                   	// #7
     f60:	mov	x1, xzr
     f64:	mov	x2, xzr
     f68:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
     f6c:	add	x8, sp, #0x60
     f70:	add	x22, x8, #0x10
     f74:	str	x22, [sp, #96]
     f78:	mov	x8, x0
     f7c:	ldr	x9, [x8], #16
     f80:	cmp	x9, x8
     f84:	b.eq	f98 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x8dc>  // b.none
     f88:	str	x9, [sp, #96]
     f8c:	ldr	x9, [x0, #16]
     f90:	str	x9, [sp, #112]
     f94:	b	fa0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x8e4>
     f98:	ldr	q0, [x9]
     f9c:	str	q0, [x22]
     fa0:	ldr	x9, [x0, #8]
     fa4:	str	x9, [sp, #104]
     fa8:	stp	x8, xzr, [x0]
     fac:	strb	wzr, [x0, #16]
     fb0:	ldr	x8, [sp, #104]
     fb4:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
     fb8:	sub	x8, x9, x8
     fbc:	cmp	x8, #0xa
     fc0:	b.ls	1414 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xd58>  // b.plast
     fc4:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     fc8:	add	x1, x1, #0x0
     fcc:	add	x0, sp, #0x60
     fd0:	mov	w2, #0xb                   	// #11
     fd4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
     fd8:	add	x8, sp, #0x80
     fdc:	add	x24, x8, #0x10
     fe0:	str	x24, [sp, #128]
     fe4:	mov	x8, x0
     fe8:	ldr	x9, [x8], #16
     fec:	cmp	x9, x8
     ff0:	b.eq	1004 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x948>  // b.none
     ff4:	str	x9, [sp, #128]
     ff8:	ldr	x9, [x0, #16]
     ffc:	str	x9, [sp, #144]
    1000:	b	100c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x950>
    1004:	ldr	q0, [x9]
    1008:	str	q0, [x24]
    100c:	ldr	x9, [x0, #8]
    1010:	str	x9, [sp, #136]
    1014:	stp	x8, xzr, [x0]
    1018:	strb	wzr, [x0, #16]
    101c:	ldr	x8, [x21, #8]
    1020:	add	x21, sp, #0x20
    1024:	and	x0, x8, #0xfffffffffffffff8
    1028:	ldr	x8, [x0]
    102c:	ldr	x9, [x8, #16]
    1030:	add	x8, sp, #0x20
    1034:	blr	x9
    1038:	ldp	x3, x4, [sp, #128]
    103c:	ldp	x1, x2, [sp, #32]
    1040:	ldr	x9, [sp, #144]
    1044:	mov	w10, #0xf                   	// #15
    1048:	cmp	x3, x24
    104c:	add	x8, x2, x4
    1050:	csel	x9, x10, x9, eq  // eq = none
    1054:	cmp	x8, x9
    1058:	b.ls	1078 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x9bc>  // b.plast
    105c:	ldr	x9, [sp, #48]
    1060:	add	x10, x21, #0x10
    1064:	cmp	x1, x10
    1068:	mov	w10, #0xf                   	// #15
    106c:	csel	x9, x10, x9, eq  // eq = none
    1070:	cmp	x8, x9
    1074:	b.ls	1084 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x9c8>  // b.plast
    1078:	add	x0, sp, #0x80
    107c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    1080:	b	1094 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x9d8>
    1084:	add	x0, sp, #0x20
    1088:	mov	x1, xzr
    108c:	mov	x2, xzr
    1090:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    1094:	add	x8, sp, #0xa0
    1098:	add	x21, x8, #0x10
    109c:	str	x21, [sp, #160]
    10a0:	mov	x8, x0
    10a4:	ldr	x9, [x8], #16
    10a8:	cmp	x9, x8
    10ac:	b.eq	10c0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xa04>  // b.none
    10b0:	str	x9, [sp, #160]
    10b4:	ldr	x9, [x0, #16]
    10b8:	str	x9, [sp, #176]
    10bc:	b	10c8 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xa0c>
    10c0:	ldr	q0, [x9]
    10c4:	str	q0, [x21]
    10c8:	ldr	x9, [x0, #8]
    10cc:	str	x9, [sp, #168]
    10d0:	stp	x8, xzr, [x0]
    10d4:	strb	wzr, [x0, #16]
    10d8:	ldr	x8, [sp, #168]
    10dc:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    10e0:	sub	x8, x9, x8
    10e4:	cmp	x8, #0x23
    10e8:	b.ls	1414 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xd58>  // b.plast
    10ec:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    10f0:	add	x1, x1, #0x0
    10f4:	add	x0, sp, #0xa0
    10f8:	mov	w2, #0x24                  	// #36
    10fc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    1100:	add	x8, sp, #0xc0
    1104:	add	x25, x8, #0x10
    1108:	str	x25, [sp, #192]
    110c:	mov	x8, x0
    1110:	ldr	x9, [x8], #16
    1114:	cmp	x9, x8
    1118:	b.eq	112c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xa70>  // b.none
    111c:	str	x9, [sp, #192]
    1120:	ldr	x9, [x0, #16]
    1124:	str	x9, [sp, #208]
    1128:	b	1134 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xa78>
    112c:	ldr	q0, [x9]
    1130:	str	q0, [x25]
    1134:	ldr	x9, [x0, #8]
    1138:	mov	x26, sp
    113c:	str	x9, [sp, #200]
    1140:	stp	x8, xzr, [x0]
    1144:	strb	wzr, [x0, #16]
    1148:	ldr	x8, [x20]
    114c:	mov	x0, x20
    1150:	ldr	x9, [x8, #40]
    1154:	mov	x8, sp
    1158:	blr	x9
    115c:	ldp	x3, x4, [sp, #192]
    1160:	ldp	x1, x2, [sp]
    1164:	ldr	x9, [sp, #208]
    1168:	mov	w10, #0xf                   	// #15
    116c:	cmp	x3, x25
    1170:	add	x8, x2, x4
    1174:	csel	x9, x10, x9, eq  // eq = none
    1178:	cmp	x8, x9
    117c:	b.ls	119c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xae0>  // b.plast
    1180:	ldr	x9, [sp, #16]
    1184:	add	x10, x26, #0x10
    1188:	cmp	x1, x10
    118c:	mov	w10, #0xf                   	// #15
    1190:	csel	x9, x10, x9, eq  // eq = none
    1194:	cmp	x8, x9
    1198:	b.ls	11a8 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xaec>  // b.plast
    119c:	add	x0, sp, #0xc0
    11a0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    11a4:	b	11b8 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xafc>
    11a8:	mov	x0, sp
    11ac:	mov	x1, xzr
    11b0:	mov	x2, xzr
    11b4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    11b8:	add	x8, sp, #0xe0
    11bc:	add	x20, x8, #0x10
    11c0:	str	x20, [sp, #224]
    11c4:	mov	x8, x0
    11c8:	ldr	x9, [x8], #16
    11cc:	cmp	x9, x8
    11d0:	b.eq	11e4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xb28>  // b.none
    11d4:	str	x9, [sp, #224]
    11d8:	ldr	x9, [x0, #16]
    11dc:	str	x9, [sp, #240]
    11e0:	b	11ec <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xb30>
    11e4:	ldr	q0, [x9]
    11e8:	str	q0, [x20]
    11ec:	ldr	x9, [x0, #8]
    11f0:	str	x9, [sp, #232]
    11f4:	stp	x8, xzr, [x0]
    11f8:	strb	wzr, [x0, #16]
    11fc:	ldp	x1, x2, [x29, #-240]
    1200:	add	x0, sp, #0xe0
    1204:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    1208:	sub	x8, x29, #0x60
    120c:	add	x26, x8, #0x10
    1210:	stur	x26, [x29, #-96]
    1214:	mov	x8, x0
    1218:	ldr	x9, [x8], #16
    121c:	cmp	x9, x8
    1220:	b.eq	1234 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xb78>  // b.none
    1224:	stur	x9, [x29, #-96]
    1228:	ldr	x9, [x0, #16]
    122c:	stur	x9, [x29, #-80]
    1230:	b	123c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xb80>
    1234:	ldr	q0, [x9]
    1238:	str	q0, [x26]
    123c:	ldr	x9, [x0, #8]
    1240:	stur	x9, [x29, #-88]
    1244:	stp	x8, xzr, [x0]
    1248:	strb	wzr, [x0, #16]
    124c:	ldur	x8, [x29, #-88]
    1250:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    1254:	cmp	x8, x9
    1258:	b.eq	1414 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xd58>  // b.none
    125c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1260:	add	x1, x1, #0x0
    1264:	sub	x0, x29, #0x60
    1268:	mov	w2, #0x1                   	// #1
    126c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    1270:	sub	x8, x29, #0x38
    1274:	add	x27, x8, #0x10
    1278:	stur	x27, [x29, #-56]
    127c:	mov	x8, x0
    1280:	ldr	x9, [x8], #16
    1284:	cmp	x9, x8
    1288:	b.eq	129c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xbe0>  // b.none
    128c:	stur	x9, [x29, #-56]
    1290:	ldr	x9, [x0, #16]
    1294:	stur	x9, [x29, #-40]
    1298:	b	12a4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xbe8>
    129c:	ldr	q0, [x9]
    12a0:	str	q0, [x27]
    12a4:	ldr	x9, [x0, #8]
    12a8:	mov	w10, #0x104                 	// #260
    12ac:	sub	x11, x29, #0x38
    12b0:	add	x2, sp, #0x108
    12b4:	stur	x9, [x29, #-48]
    12b8:	stp	x8, xzr, [x0]
    12bc:	strb	wzr, [x0, #16]
    12c0:	sub	x0, x29, #0x18
    12c4:	mov	w1, #0x1                   	// #1
    12c8:	strh	w10, [sp, #280]
    12cc:	stp	x11, xzr, [sp, #264]
    12d0:	stur	x19, [x29, #-24]
    12d4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    12d8:	ldur	x0, [x29, #-56]
    12dc:	cmp	x0, x27
    12e0:	b.eq	12e8 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xc2c>  // b.none
    12e4:	bl	0 <_ZdlPv>
    12e8:	ldur	x0, [x29, #-96]
    12ec:	cmp	x0, x26
    12f0:	b.eq	12f8 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xc3c>  // b.none
    12f4:	bl	0 <_ZdlPv>
    12f8:	ldr	x0, [sp, #224]
    12fc:	cmp	x0, x20
    1300:	b.eq	1308 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xc4c>  // b.none
    1304:	bl	0 <_ZdlPv>
    1308:	ldr	x0, [sp]
    130c:	mov	x8, sp
    1310:	add	x8, x8, #0x10
    1314:	cmp	x0, x8
    1318:	b.eq	1320 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xc64>  // b.none
    131c:	bl	0 <_ZdlPv>
    1320:	ldr	x0, [sp, #192]
    1324:	cmp	x0, x25
    1328:	b.eq	1330 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xc74>  // b.none
    132c:	bl	0 <_ZdlPv>
    1330:	ldr	x0, [sp, #160]
    1334:	cmp	x0, x21
    1338:	b.eq	1340 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xc84>  // b.none
    133c:	bl	0 <_ZdlPv>
    1340:	ldr	x0, [sp, #32]
    1344:	add	x8, sp, #0x20
    1348:	add	x8, x8, #0x10
    134c:	cmp	x0, x8
    1350:	b.eq	1358 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xc9c>  // b.none
    1354:	bl	0 <_ZdlPv>
    1358:	ldr	x0, [sp, #128]
    135c:	cmp	x0, x24
    1360:	b.eq	1368 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xcac>  // b.none
    1364:	bl	0 <_ZdlPv>
    1368:	ldr	x0, [sp, #96]
    136c:	cmp	x0, x22
    1370:	b.eq	1378 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xcbc>  // b.none
    1374:	bl	0 <_ZdlPv>
    1378:	ldr	x0, [sp, #64]
    137c:	add	x8, sp, #0x40
    1380:	add	x8, x8, #0x10
    1384:	cmp	x0, x8
    1388:	b.eq	1390 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xcd4>  // b.none
    138c:	bl	0 <_ZdlPv>
    1390:	ldur	x0, [x29, #-240]
    1394:	cmp	x0, x23
    1398:	b.ne	8f4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x238>  // b.any
    139c:	b	8f8 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x23c>
    13a0:	mov	x8, x24
    13a4:	stur	x24, [x29, #-56]
    13a8:	b	13c4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xd08>
    13ac:	bl	0 <memcpy>
    13b0:	ldur	x8, [x29, #-48]
    13b4:	ldur	x9, [x29, #-240]
    13b8:	stur	x8, [x29, #-232]
    13bc:	strb	wzr, [x9, x8]
    13c0:	ldur	x8, [x29, #-56]
    13c4:	stur	xzr, [x29, #-48]
    13c8:	strb	wzr, [x8]
    13cc:	ldur	x0, [x29, #-56]
    13d0:	cmp	x0, x24
    13d4:	b.eq	13dc <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xd20>  // b.none
    13d8:	bl	0 <_ZdlPv>
    13dc:	ldur	x0, [x29, #-96]
    13e0:	sub	x8, x29, #0x60
    13e4:	add	x8, x8, #0x10
    13e8:	cmp	x0, x8
    13ec:	b.ne	f38 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x87c>  // b.any
    13f0:	b	f3c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x880>
    13f4:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    13f8:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    13fc:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1400:	add	x0, x0, #0x0
    1404:	add	x1, x1, #0x0
    1408:	add	x3, x3, #0x0
    140c:	mov	w2, #0x95                  	// #149
    1410:	bl	0 <__assert_fail>
    1414:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1418:	add	x0, x0, #0x0
    141c:	bl	0 <_ZSt20__throw_length_errorPKc>
    1420:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1424:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1428:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    142c:	add	x0, x0, #0x0
    1430:	add	x1, x1, #0x0
    1434:	add	x3, x3, #0x0
    1438:	mov	w2, #0xfa                  	// #250
    143c:	bl	0 <__assert_fail>
    1440:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1444:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1448:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    144c:	add	x0, x0, #0x0
    1450:	add	x1, x1, #0x0
    1454:	add	x3, x3, #0x0
    1458:	mov	w2, #0x69                  	// #105
    145c:	bl	0 <__assert_fail>
    1460:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1464:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1468:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    146c:	add	x0, x0, #0x0
    1470:	add	x1, x1, #0x0
    1474:	add	x3, x3, #0x0
    1478:	mov	w2, #0x43                  	// #67
    147c:	bl	0 <__assert_fail>
    1480:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1484:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1488:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    148c:	add	x0, x0, #0x0
    1490:	add	x1, x1, #0x0
    1494:	add	x3, x3, #0x0
    1498:	mov	w2, #0xb8                  	// #184
    149c:	bl	0 <__assert_fail>

00000000000014a0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE>:
    14a0:	stp	x29, x30, [sp, #-96]!
    14a4:	stp	x28, x27, [sp, #16]
    14a8:	stp	x26, x25, [sp, #32]
    14ac:	stp	x24, x23, [sp, #48]
    14b0:	stp	x22, x21, [sp, #64]
    14b4:	stp	x20, x19, [sp, #80]
    14b8:	mov	x29, sp
    14bc:	sub	sp, sp, #0x1b0
    14c0:	ldr	x19, [x2, #16]
    14c4:	mov	x20, x2
    14c8:	mov	x21, x1
    14cc:	mov	x22, x0
    14d0:	ldr	w8, [x19, #80]
    14d4:	cbz	w8, 1508 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x68>
    14d8:	ldr	x23, [x19, #72]
    14dc:	add	x8, x8, x8, lsl #1
    14e0:	lsl	x24, x8, #3
    14e4:	ldr	x2, [x20]
    14e8:	mov	x0, x22
    14ec:	mov	x1, x21
    14f0:	mov	x3, x23
    14f4:	bl	1c0 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE>
    14f8:	tbnz	w0, #0, 1628 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x188>
    14fc:	subs	x24, x24, #0x18
    1500:	add	x23, x23, #0x18
    1504:	b.ne	14e4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x44>  // b.any
    1508:	ldr	w24, [x19, #64]
    150c:	ldr	w8, [x20, #32]
    1510:	cmp	w24, w8
    1514:	b.cs	154c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xac>  // b.hs, b.nlast
    1518:	ldr	x8, [x20]
    151c:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1520:	add	x9, x9, #0x0
    1524:	stp	x9, xzr, [x29, #-64]
    1528:	mov	w9, #0x103                 	// #259
    152c:	add	x0, sp, #0x70
    1530:	sub	x2, x29, #0x40
    1534:	mov	w1, #0x1                   	// #1
    1538:	sturh	w9, [x29, #-48]
    153c:	str	x8, [sp, #112]
    1540:	mov	w19, #0x1                   	// #1
    1544:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    1548:	b	1bec <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x74c>
    154c:	ldr	x23, [x19, #56]
    1550:	sturb	wzr, [x29, #-48]
    1554:	adrp	x25, 0 <_ZTVN4llvm11MapResolverE>
    1558:	ldr	x25, [x25]
    155c:	add	x26, sp, #0x90
    1560:	stp	xzr, xzr, [x29, #-32]
    1564:	stur	xzr, [x29, #-40]
    1568:	add	x9, x25, #0x10
    156c:	stp	x9, x21, [x29, #-64]
    1570:	stur	wzr, [x29, #-16]
    1574:	cbz	w24, 1630 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x190>
    1578:	mov	x27, xzr
    157c:	cmp	x27, w8, uxtw
    1580:	b.cc	15b0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x110>  // b.lo, b.ul, b.last
    1584:	ldr	x9, [x23, x27, lsl #3]
    1588:	ldr	x8, [x21, #72]
    158c:	ldr	x10, [x8], #24
    1590:	cmp	x10, x9
    1594:	b.ne	158c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xec>  // b.any
    1598:	ldur	x0, [x8, #-8]
    159c:	ldr	x8, [x0]
    15a0:	ldr	x8, [x8, #24]
    15a4:	blr	x8
    15a8:	tbnz	w0, #0, 15e0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x140>
    15ac:	b	182c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x38c>
    15b0:	ldr	x8, [x20, #24]
    15b4:	lsl	x9, x27, #3
    15b8:	ldr	x2, [x20]
    15bc:	ldr	x3, [x23, x9]
    15c0:	ldr	x6, [x8, x9]
    15c4:	mov	x0, x22
    15c8:	mov	x1, x21
    15cc:	mov	x4, xzr
    15d0:	mov	x5, xzr
    15d4:	mov	w7, wzr
    15d8:	bl	6bc <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b>
    15dc:	tbnz	w0, #0, 1bd8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x738>
    15e0:	ldr	x1, [x23, x27, lsl #3]
    15e4:	ldr	x8, [x21, #72]
    15e8:	ldr	x9, [x8], #24
    15ec:	cmp	x9, x1
    15f0:	b.ne	15e8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x148>  // b.any
    15f4:	ldur	x2, [x8, #-8]
    15f8:	sub	x0, x29, #0x40
    15fc:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1600:	ldr	x1, [x23, x27, lsl #3]
    1604:	mov	x0, x21
    1608:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    160c:	add	x27, x27, #0x1
    1610:	cmp	x27, x24
    1614:	b.eq	1630 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x190>  // b.none
    1618:	ldr	w8, [x20, #32]
    161c:	cmp	x27, w8, uxtw
    1620:	b.cs	1584 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xe4>  // b.hs, b.nlast
    1624:	b	15b0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x110>
    1628:	mov	w19, #0x1                   	// #1
    162c:	b	1bec <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x74c>
    1630:	ldrb	w8, [x21, #125]
    1634:	cbz	w8, 16a0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x200>
    1638:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    163c:	add	x0, x0, #0x0
    1640:	mov	w1, #0x4                   	// #4
    1644:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    1648:	ldr	x22, [x21]
    164c:	mov	x23, x0
    1650:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1654:	add	x0, x0, #0x0
    1658:	mov	w1, #0x1                   	// #1
    165c:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    1660:	mov	x1, x0
    1664:	mov	x0, x22
    1668:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
    166c:	mov	x1, x23
    1670:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
    1674:	cbz	x0, 1c10 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x770>
    1678:	ldrb	w8, [x0, #8]
    167c:	cmp	w8, #0xb
    1680:	b.ne	168c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x1ec>  // b.any
    1684:	mov	x1, x21
    1688:	bl	0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE>
    168c:	adrp	x1, 0 <_ZN4llvm11StringRecTy6SharedE>
    1690:	ldr	x1, [x1]
    1694:	bl	0 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>
    1698:	mov	x22, x0
    169c:	b	16a4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x204>
    16a0:	ldr	x22, [x21]
    16a4:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    16a8:	add	x0, x0, #0x0
    16ac:	mov	w1, #0x4                   	// #4
    16b0:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    16b4:	ldr	x23, [x19]
    16b8:	mov	x24, x0
    16bc:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    16c0:	add	x0, x0, #0x0
    16c4:	mov	w1, #0x1                   	// #1
    16c8:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    16cc:	mov	x1, x0
    16d0:	mov	x0, x23
    16d4:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
    16d8:	mov	x1, x24
    16dc:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
    16e0:	cbz	x0, 1c10 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x770>
    16e4:	ldrb	w8, [x0, #8]
    16e8:	mov	x1, x0
    16ec:	cmp	w8, #0xb
    16f0:	b.ne	1704 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x264>  // b.any
    16f4:	mov	x0, x1
    16f8:	mov	x1, x19
    16fc:	bl	0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE>
    1700:	mov	x1, x0
    1704:	sub	x0, x29, #0x40
    1708:	mov	x2, x22
    170c:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1710:	sub	x1, x29, #0x40
    1714:	mov	x0, x21
    1718:	mov	x2, xzr
    171c:	bl	0 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE>
    1720:	ldr	w8, [x19, #96]
    1724:	cbz	w8, 17ec <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x34c>
    1728:	ldr	x22, [x19, #88]
    172c:	mov	w9, #0x18                  	// #24
    1730:	madd	x23, x8, x9, x22
    1734:	b	1750 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x2b0>
    1738:	ldp	x2, x3, [x22, #8]
    173c:	mov	x0, x21
    1740:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1744:	add	x22, x22, #0x18
    1748:	cmp	x22, x23
    174c:	b.eq	17ec <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x34c>  // b.none
    1750:	ldr	w9, [x21, #96]
    1754:	ldr	x1, [x22]
    1758:	cbz	w9, 1738 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x298>
    175c:	ldr	x8, [x21, #88]
    1760:	add	x9, x9, x9, lsl #1
    1764:	lsl	x9, x9, #3
    1768:	ldr	x10, [x8], #24
    176c:	cmp	x10, x1
    1770:	b.eq	1780 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x2e0>  // b.none
    1774:	subs	x9, x9, #0x18
    1778:	b.ne	1768 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x2c8>  // b.any
    177c:	b	1738 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x298>
    1780:	ldr	x8, [x1]
    1784:	cbz	x8, 18d0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x430>
    1788:	ldrb	w9, [x8, #8]
    178c:	cmp	w9, #0x12
    1790:	b.ne	1c30 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x790>  // b.any
    1794:	adrp	x10, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1798:	ldr	x9, [x20]
    179c:	ldur	q0, [x8, #24]
    17a0:	add	x10, x10, #0x0
    17a4:	sub	x11, x29, #0x60
    17a8:	mov	w8, #0x503                 	// #1283
    17ac:	stp	x10, x11, [sp, #32]
    17b0:	adrp	x10, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    17b4:	strh	w8, [sp, #48]
    17b8:	add	x8, sp, #0x20
    17bc:	add	x10, x10, #0x0
    17c0:	stp	x8, x10, [sp, #112]
    17c4:	mov	w8, #0x302                 	// #770
    17c8:	sub	x0, x29, #0x80
    17cc:	add	x2, sp, #0x70
    17d0:	mov	w1, #0x1                   	// #1
    17d4:	strh	w8, [sp, #128]
    17d8:	str	q0, [x26, #192]
    17dc:	stur	x9, [x29, #-128]
    17e0:	mov	w19, #0x1                   	// #1
    17e4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    17e8:	b	1bdc <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x73c>
    17ec:	ldr	w9, [x21, #96]
    17f0:	cbz	w9, 1814 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x374>
    17f4:	ldr	x8, [x21, #88]
    17f8:	add	x9, x9, x9, lsl #1
    17fc:	lsl	x9, x9, #3
    1800:	ldr	x10, [x8], #24
    1804:	cmp	x10, x19
    1808:	b.eq	18c8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x428>  // b.none
    180c:	subs	x9, x9, #0x18
    1810:	b.ne	1800 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x360>  // b.any
    1814:	ldp	x2, x3, [x20]
    1818:	mov	x0, x21
    181c:	mov	x1, x19
    1820:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1824:	mov	w19, wzr
    1828:	b	1bdc <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x73c>
    182c:	ldr	x20, [x20]
    1830:	stp	xzr, xzr, [sp, #168]
    1834:	str	w27, [sp, #168]
    1838:	mov	w10, #0x903                 	// #2307
    183c:	mov	w8, #0x109                 	// #265
    1840:	strh	w10, [sp, #208]
    1844:	ldr	x10, [sp, #168]
    1848:	strh	w8, [sp, #184]
    184c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1850:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1854:	add	x11, sp, #0xc0
    1858:	add	x8, x8, #0x0
    185c:	add	x9, x9, #0x0
    1860:	stp	x11, x8, [sp, #216]
    1864:	mov	w8, #0x302                 	// #770
    1868:	stp	x9, x10, [sp, #192]
    186c:	strh	w8, [sp, #232]
    1870:	ldr	x0, [x23, w27, uxtw #3]
    1874:	add	x22, sp, #0x70
    1878:	ldr	x8, [x0]
    187c:	ldr	x9, [x8, #48]
    1880:	add	x8, sp, #0x70
    1884:	blr	x9
    1888:	ldrb	w21, [sp, #232]
    188c:	mov	w8, #0x104                 	// #260
    1890:	strh	w8, [sp, #160]
    1894:	stp	x22, xzr, [sp, #144]
    1898:	cmp	w21, #0x1
    189c:	b.eq	18f0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x450>  // b.none
    18a0:	cbnz	w21, 1908 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x468>
    18a4:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    18a8:	mov	w8, #0x100                 	// #256
    18ac:	add	x9, x9, #0x0
    18b0:	mov	w10, #0x103                 	// #259
    18b4:	stp	xzr, xzr, [x29, #-192]
    18b8:	sturh	w8, [x29, #-176]
    18bc:	stp	x9, xzr, [sp, #88]
    18c0:	strh	w10, [sp, #104]
    18c4:	b	1990 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x4f0>
    18c8:	ldr	x8, [x19]
    18cc:	cbnz	x8, 1788 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x2e8>
    18d0:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    18d4:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    18d8:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    18dc:	add	x0, x0, #0x0
    18e0:	add	x1, x1, #0x0
    18e4:	add	x3, x3, #0x0
    18e8:	mov	w2, #0x69                  	// #105
    18ec:	bl	0 <__assert_fail>
    18f0:	ldr	x8, [sp, #160]
    18f4:	ldr	q0, [x26]
    18f8:	and	w21, w8, #0xff
    18fc:	str	q0, [x26, #96]
    1900:	stur	x8, [x29, #-176]
    1904:	b	1970 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x4d0>
    1908:	ldrb	w8, [sp, #233]
    190c:	ldr	x9, [sp, #216]
    1910:	mov	w10, #0x2                   	// #2
    1914:	add	x11, sp, #0xd8
    1918:	cmp	w8, #0x1
    191c:	csel	w10, w21, w10, eq  // eq = none
    1920:	add	x12, sp, #0x70
    1924:	mov	w13, #0x4                   	// #4
    1928:	csel	x8, x9, x11, eq  // eq = none
    192c:	cmp	w10, #0x2
    1930:	stp	x8, x12, [x29, #-192]
    1934:	sturb	w10, [x29, #-176]
    1938:	sturb	w13, [x29, #-175]
    193c:	b.ne	1970 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x4d0>  // b.any
    1940:	ldrb	w9, [x8, #16]
    1944:	cbz	w9, 1b64 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x6c4>
    1948:	ldrb	w8, [x8, #17]
    194c:	cmp	w8, #0x1
    1950:	b.eq	1b64 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x6c4>  // b.none
    1954:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1958:	add	x8, x8, #0x0
    195c:	mov	w9, #0x103                 	// #259
    1960:	mov	w21, #0x2                   	// #2
    1964:	stp	x8, xzr, [sp, #88]
    1968:	strh	w9, [sp, #104]
    196c:	b	19a4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x504>
    1970:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1974:	add	x8, x8, #0x0
    1978:	mov	w9, #0x103                 	// #259
    197c:	cmp	w21, #0x1
    1980:	stp	x8, xzr, [sp, #88]
    1984:	strh	w9, [sp, #104]
    1988:	b.eq	19fc <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x55c>  // b.none
    198c:	cbnz	w21, 19a4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x504>
    1990:	mov	w8, #0x100                 	// #256
    1994:	mov	w21, wzr
    1998:	stp	xzr, xzr, [x29, #-160]
    199c:	sturh	w8, [x29, #-144]
    19a0:	b	1a10 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x570>
    19a4:	ldurb	w8, [x29, #-175]
    19a8:	ldur	x9, [x29, #-192]
    19ac:	mov	w10, #0x2                   	// #2
    19b0:	sub	x11, x29, #0xc0
    19b4:	cmp	w8, #0x1
    19b8:	adrp	x12, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    19bc:	csel	w10, w21, w10, eq  // eq = none
    19c0:	add	x12, x12, #0x0
    19c4:	mov	w13, #0x3                   	// #3
    19c8:	csel	x8, x9, x11, eq  // eq = none
    19cc:	cmp	w10, #0x2
    19d0:	stp	x8, x12, [x29, #-160]
    19d4:	sturb	w10, [x29, #-144]
    19d8:	sturb	w13, [x29, #-143]
    19dc:	b.ne	1a10 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x570>  // b.any
    19e0:	ldrb	w9, [x8, #16]
    19e4:	cbz	w9, 1b64 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x6c4>
    19e8:	ldrb	w8, [x8, #17]
    19ec:	cmp	w8, #0x1
    19f0:	b.eq	1b64 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x6c4>  // b.none
    19f4:	mov	w21, #0x2                   	// #2
    19f8:	b	1a10 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x570>
    19fc:	ldr	x8, [sp, #104]
    1a00:	ldur	q0, [sp, #88]
    1a04:	and	w21, w8, #0xff
    1a08:	str	q0, [x26, #128]
    1a0c:	stur	x8, [x29, #-144]
    1a10:	ldr	x0, [x19]
    1a14:	add	x19, sp, #0x20
    1a18:	ldr	x8, [x0]
    1a1c:	ldr	x9, [x8, #48]
    1a20:	add	x8, sp, #0x20
    1a24:	blr	x9
    1a28:	mov	w8, #0x104                 	// #260
    1a2c:	cmp	w21, #0x1
    1a30:	strh	w8, [sp, #80]
    1a34:	stp	x19, xzr, [sp, #64]
    1a38:	b.eq	1a64 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x5c4>  // b.none
    1a3c:	cbnz	w21, 1a7c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x5dc>
    1a40:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1a44:	mov	w8, #0x100                 	// #256
    1a48:	add	x9, x9, #0x0
    1a4c:	mov	w10, #0x103                 	// #259
    1a50:	stp	xzr, xzr, [x29, #-128]
    1a54:	sturh	w8, [x29, #-112]
    1a58:	stp	x9, xzr, [sp, #8]
    1a5c:	strh	w10, [sp, #24]
    1a60:	b	1b04 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x664>
    1a64:	ldr	x8, [sp, #80]
    1a68:	ldr	q0, [sp, #64]
    1a6c:	and	w21, w8, #0xff
    1a70:	str	q0, [x26, #160]
    1a74:	stur	x8, [x29, #-112]
    1a78:	b	1ae4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x644>
    1a7c:	ldurb	w8, [x29, #-143]
    1a80:	ldur	x9, [x29, #-160]
    1a84:	mov	w10, #0x2                   	// #2
    1a88:	sub	x11, x29, #0xa0
    1a8c:	cmp	w8, #0x1
    1a90:	csel	w10, w21, w10, eq  // eq = none
    1a94:	add	x12, sp, #0x20
    1a98:	mov	w13, #0x4                   	// #4
    1a9c:	csel	x8, x9, x11, eq  // eq = none
    1aa0:	cmp	w10, #0x2
    1aa4:	stp	x8, x12, [x29, #-128]
    1aa8:	sturb	w10, [x29, #-112]
    1aac:	sturb	w13, [x29, #-111]
    1ab0:	b.ne	1ae4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x644>  // b.any
    1ab4:	ldrb	w9, [x8, #16]
    1ab8:	cbz	w9, 1b64 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x6c4>
    1abc:	ldrb	w8, [x8, #17]
    1ac0:	cmp	w8, #0x1
    1ac4:	b.eq	1b64 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x6c4>  // b.none
    1ac8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1acc:	add	x8, x8, #0x0
    1ad0:	mov	w9, #0x103                 	// #259
    1ad4:	mov	w21, #0x2                   	// #2
    1ad8:	stp	x8, xzr, [sp, #8]
    1adc:	strh	w9, [sp, #24]
    1ae0:	b	1b14 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x674>
    1ae4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1ae8:	add	x8, x8, #0x0
    1aec:	mov	w9, #0x103                 	// #259
    1af0:	cmp	w21, #0x1
    1af4:	stp	x8, xzr, [sp, #8]
    1af8:	strh	w9, [sp, #24]
    1afc:	b.eq	1b84 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x6e4>  // b.none
    1b00:	cbnz	w21, 1b14 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x674>
    1b04:	mov	w8, #0x100                 	// #256
    1b08:	stp	xzr, xzr, [x29, #-96]
    1b0c:	sturh	w8, [x29, #-80]
    1b10:	b	1b94 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x6f4>
    1b14:	ldurb	w8, [x29, #-111]
    1b18:	ldur	x9, [x29, #-128]
    1b1c:	mov	w10, #0x2                   	// #2
    1b20:	sub	x11, x29, #0x80
    1b24:	cmp	w8, #0x1
    1b28:	adrp	x12, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1b2c:	csel	w10, w21, w10, eq  // eq = none
    1b30:	add	x12, x12, #0x0
    1b34:	mov	w13, #0x3                   	// #3
    1b38:	csel	x8, x9, x11, eq  // eq = none
    1b3c:	cmp	w10, #0x2
    1b40:	stp	x8, x12, [x29, #-96]
    1b44:	sturb	w10, [x29, #-80]
    1b48:	sturb	w13, [x29, #-79]
    1b4c:	b.ne	1b94 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x6f4>  // b.any
    1b50:	ldrb	w9, [x8, #16]
    1b54:	cbz	w9, 1b64 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x6c4>
    1b58:	ldrb	w8, [x8, #17]
    1b5c:	cmp	w8, #0x1
    1b60:	b.ne	1b94 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x6f4>  // b.any
    1b64:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1b68:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1b6c:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1b70:	add	x0, x0, #0x0
    1b74:	add	x1, x1, #0x0
    1b78:	add	x3, x3, #0x0
    1b7c:	mov	w2, #0xb8                  	// #184
    1b80:	bl	0 <__assert_fail>
    1b84:	ldur	q0, [sp, #8]
    1b88:	ldr	x8, [sp, #24]
    1b8c:	str	q0, [x26, #192]
    1b90:	stur	x8, [x29, #-80]
    1b94:	sub	x0, x29, #0x8
    1b98:	sub	x2, x29, #0x60
    1b9c:	mov	w1, #0x1                   	// #1
    1ba0:	stur	x20, [x29, #-8]
    1ba4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    1ba8:	ldr	x0, [sp, #32]
    1bac:	add	x8, sp, #0x20
    1bb0:	add	x8, x8, #0x10
    1bb4:	cmp	x0, x8
    1bb8:	b.eq	1bc0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x720>  // b.none
    1bbc:	bl	0 <_ZdlPv>
    1bc0:	ldr	x0, [sp, #112]
    1bc4:	add	x8, sp, #0x70
    1bc8:	add	x8, x8, #0x10
    1bcc:	cmp	x0, x8
    1bd0:	b.eq	1bd8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x738>  // b.none
    1bd4:	bl	0 <_ZdlPv>
    1bd8:	mov	w19, #0x1                   	// #1
    1bdc:	ldur	x0, [x29, #-32]
    1be0:	add	x8, x25, #0x10
    1be4:	stur	x8, [x29, #-64]
    1be8:	bl	0 <_ZdlPv>
    1bec:	mov	w0, w19
    1bf0:	add	sp, sp, #0x1b0
    1bf4:	ldp	x20, x19, [sp, #80]
    1bf8:	ldp	x22, x21, [sp, #64]
    1bfc:	ldp	x24, x23, [sp, #48]
    1c00:	ldp	x26, x25, [sp, #32]
    1c04:	ldp	x28, x27, [sp, #16]
    1c08:	ldp	x29, x30, [sp], #96
    1c0c:	ret
    1c10:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1c14:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1c18:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1c1c:	add	x0, x0, #0x0
    1c20:	add	x1, x1, #0x0
    1c24:	add	x3, x3, #0x0
    1c28:	mov	w2, #0x69                  	// #105
    1c2c:	bl	0 <__assert_fail>
    1c30:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1c34:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1c38:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1c3c:	add	x0, x0, #0x0
    1c40:	add	x1, x1, #0x0
    1c44:	add	x3, x3, #0x0
    1c48:	mov	w2, #0x108                 	// #264
    1c4c:	bl	0 <__assert_fail>

0000000000001c50 <_ZN4llvm8TGParser11AddSubClassERNS_12RecordsEntryERNS_17SubClassReferenceE>:
    1c50:	stp	x29, x30, [sp, #-48]!
    1c54:	stp	x22, x21, [sp, #16]
    1c58:	stp	x20, x19, [sp, #32]
    1c5c:	mov	x29, sp
    1c60:	mov	x8, x1
    1c64:	ldr	x1, [x1]
    1c68:	mov	x19, x2
    1c6c:	mov	x20, x0
    1c70:	cbz	x1, 1c8c <_ZN4llvm8TGParser11AddSubClassERNS_12RecordsEntryERNS_17SubClassReferenceE+0x3c>
    1c74:	mov	x0, x20
    1c78:	mov	x2, x19
    1c7c:	ldp	x20, x19, [sp, #32]
    1c80:	ldp	x22, x21, [sp, #16]
    1c84:	ldp	x29, x30, [sp], #48
    1c88:	b	14a0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE>
    1c8c:	ldr	x8, [x8, #8]
    1c90:	ldp	x21, x22, [x8, #24]
    1c94:	cmp	x21, x22
    1c98:	b.eq	1cbc <_ZN4llvm8TGParser11AddSubClassERNS_12RecordsEntryERNS_17SubClassReferenceE+0x6c>  // b.none
    1c9c:	mov	x0, x20
    1ca0:	mov	x1, x21
    1ca4:	mov	x2, x19
    1ca8:	bl	1c50 <_ZN4llvm8TGParser11AddSubClassERNS_12RecordsEntryERNS_17SubClassReferenceE>
    1cac:	tbnz	w0, #0, 1cc4 <_ZN4llvm8TGParser11AddSubClassERNS_12RecordsEntryERNS_17SubClassReferenceE+0x74>
    1cb0:	add	x21, x21, #0x10
    1cb4:	cmp	x22, x21
    1cb8:	b.ne	1c9c <_ZN4llvm8TGParser11AddSubClassERNS_12RecordsEntryERNS_17SubClassReferenceE+0x4c>  // b.any
    1cbc:	mov	w0, wzr
    1cc0:	b	1cc8 <_ZN4llvm8TGParser11AddSubClassERNS_12RecordsEntryERNS_17SubClassReferenceE+0x78>
    1cc4:	mov	w0, #0x1                   	// #1
    1cc8:	ldp	x20, x19, [sp, #32]
    1ccc:	ldp	x22, x21, [sp, #16]
    1cd0:	ldp	x29, x30, [sp], #48
    1cd4:	ret

0000000000001cd8 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE>:
    1cd8:	stp	x29, x30, [sp, #-96]!
    1cdc:	stp	x28, x27, [sp, #16]
    1ce0:	stp	x26, x25, [sp, #32]
    1ce4:	stp	x24, x23, [sp, #48]
    1ce8:	stp	x22, x21, [sp, #64]
    1cec:	stp	x20, x19, [sp, #80]
    1cf0:	mov	x29, sp
    1cf4:	sub	sp, sp, #0x200
    1cf8:	ldr	x19, [x2, #16]
    1cfc:	ldr	w11, [x2, #32]
    1d00:	mov	x22, x2
    1d04:	ldr	w27, [x19, #64]
    1d08:	cmp	w27, w11
    1d0c:	b.cs	1d44 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x6c>  // b.hs, b.nlast
    1d10:	ldr	x8, [x22]
    1d14:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1d18:	add	x9, x9, #0x0
    1d1c:	stp	x9, xzr, [x29, #-152]
    1d20:	mov	w9, #0x103                 	// #259
    1d24:	add	x0, sp, #0x70
    1d28:	sub	x2, x29, #0x98
    1d2c:	mov	w1, #0x1                   	// #1
    1d30:	sturh	w9, [x29, #-136]
    1d34:	str	x8, [sp, #112]
    1d38:	mov	w19, #0x1                   	// #1
    1d3c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    1d40:	b	22c0 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x5e8>
    1d44:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1d48:	ldr	x25, [x19, #56]
    1d4c:	ldr	d0, [x8]
    1d50:	sub	x8, x29, #0x98
    1d54:	mov	x20, x1
    1d58:	mov	x21, x0
    1d5c:	add	x10, x8, #0x10
    1d60:	stur	x10, [x29, #-152]
    1d64:	stur	d0, [x29, #-144]
    1d68:	cbz	w27, 1e54 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x17c>
    1d6c:	mov	w8, wzr
    1d70:	mov	x26, xzr
    1d74:	add	x24, sp, #0x90
    1d78:	mov	w9, #0x8                   	// #8
    1d7c:	cmp	x26, w11, uxtw
    1d80:	b.cs	1db4 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0xdc>  // b.hs, b.nlast
    1d84:	ldr	x23, [x22, #24]
    1d88:	cmp	w8, w9
    1d8c:	b.cs	1e28 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x150>  // b.hs, b.nlast
    1d90:	lsl	x11, x26, #3
    1d94:	ldr	x12, [x25, x11]
    1d98:	add	x13, x10, w8, uxtw #4
    1d9c:	cmp	w8, w9
    1da0:	str	x12, [x13]
    1da4:	ldr	x11, [x23, x11]
    1da8:	str	x11, [x13, #8]
    1dac:	b.cc	1e04 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x12c>  // b.lo, b.ul, b.last
    1db0:	b	22f8 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x620>
    1db4:	ldr	x9, [x25, x26, lsl #3]
    1db8:	ldr	x8, [x19, #72]
    1dbc:	ldr	x10, [x8], #24
    1dc0:	cmp	x10, x9
    1dc4:	b.ne	1dbc <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0xe4>  // b.any
    1dc8:	ldur	x23, [x8, #-8]
    1dcc:	ldr	x8, [x23]
    1dd0:	mov	x0, x23
    1dd4:	ldr	x8, [x8, #24]
    1dd8:	blr	x8
    1ddc:	tbz	w0, #0, 1f20 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x248>
    1de0:	ldp	w8, w9, [x29, #-144]
    1de4:	cmp	w8, w9
    1de8:	b.cs	1e40 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x168>  // b.hs, b.nlast
    1dec:	ldur	x10, [x29, #-152]
    1df0:	ldr	x11, [x25, x26, lsl #3]
    1df4:	cmp	w8, w9
    1df8:	add	x12, x10, w8, uxtw #4
    1dfc:	stp	x11, x23, [x12]
    1e00:	b.cs	22f8 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x620>  // b.hs, b.nlast
    1e04:	add	x26, x26, #0x1
    1e08:	add	w8, w8, #0x1
    1e0c:	cmp	x26, x27
    1e10:	stur	w8, [x29, #-144]
    1e14:	b.eq	1e54 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x17c>  // b.none
    1e18:	ldr	w11, [x22, #32]
    1e1c:	cmp	x26, w11, uxtw
    1e20:	b.cs	1db4 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0xdc>  // b.hs, b.nlast
    1e24:	b	1d84 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0xac>
    1e28:	sub	x0, x29, #0x98
    1e2c:	mov	x1, xzr
    1e30:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1e34:	ldp	w8, w9, [x29, #-144]
    1e38:	ldur	x10, [x29, #-152]
    1e3c:	b	1d90 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0xb8>
    1e40:	sub	x0, x29, #0x98
    1e44:	mov	x1, xzr
    1e48:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1e4c:	ldp	w8, w9, [x29, #-144]
    1e50:	b	1dec <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x114>
    1e54:	adrp	x23, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1e58:	add	x23, x23, #0x0
    1e5c:	mov	w1, #0x4                   	// #4
    1e60:	mov	x0, x23
    1e64:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    1e68:	adrp	x24, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1e6c:	adrp	x25, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1e70:	add	x24, x24, #0x0
    1e74:	add	x25, x25, #0x0
    1e78:	cmp	x19, #0x0
    1e7c:	mov	w26, #0x1                   	// #1
    1e80:	mov	x2, x0
    1e84:	csel	x3, x25, x24, eq  // eq = none
    1e88:	cinc	x4, x26, ne  // ne = any
    1e8c:	mov	x0, x19
    1e90:	mov	x1, x19
    1e94:	bl	547c <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE>
    1e98:	mov	x22, x0
    1e9c:	mov	w1, #0x4                   	// #4
    1ea0:	mov	x0, x23
    1ea4:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    1ea8:	cmp	x20, #0x0
    1eac:	mov	x2, x0
    1eb0:	csel	x3, x25, x24, eq  // eq = none
    1eb4:	cinc	x4, x26, ne  // ne = any
    1eb8:	mov	x0, x20
    1ebc:	mov	x1, x20
    1ec0:	bl	547c <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE>
    1ec4:	adrp	x1, 0 <_ZN4llvm11StringRecTy6SharedE>
    1ec8:	ldr	x1, [x1]
    1ecc:	bl	0 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>
    1ed0:	ldp	w8, w9, [x29, #-144]
    1ed4:	mov	x23, x0
    1ed8:	cmp	w8, w9
    1edc:	b.cs	22e4 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x60c>  // b.hs, b.nlast
    1ee0:	ldur	x10, [x29, #-152]
    1ee4:	cmp	w8, w9
    1ee8:	add	x9, x10, w8, uxtw #4
    1eec:	stp	x22, x23, [x9]
    1ef0:	b.cs	22f8 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x620>  // b.hs, b.nlast
    1ef4:	add	w8, w8, #0x1
    1ef8:	add	x1, x19, #0x80
    1efc:	add	x4, x20, #0x80
    1f00:	sub	x2, x29, #0x98
    1f04:	mov	x0, x21
    1f08:	mov	w3, wzr
    1f0c:	mov	x5, xzr
    1f10:	stur	w8, [x29, #-144]
    1f14:	bl	2318 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE>
    1f18:	mov	w19, w0
    1f1c:	b	22a8 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x5d0>
    1f20:	ldr	x20, [x22]
    1f24:	stp	xzr, xzr, [sp, #168]
    1f28:	str	w26, [sp, #168]
    1f2c:	mov	w10, #0x903                 	// #2307
    1f30:	mov	w8, #0x109                 	// #265
    1f34:	strh	w10, [sp, #208]
    1f38:	ldr	x10, [sp, #168]
    1f3c:	strh	w8, [sp, #184]
    1f40:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1f44:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1f48:	add	x11, sp, #0xc0
    1f4c:	add	x8, x8, #0x0
    1f50:	add	x9, x9, #0x0
    1f54:	stp	x11, x8, [sp, #216]
    1f58:	mov	w8, #0x302                 	// #770
    1f5c:	stp	x9, x10, [sp, #192]
    1f60:	strh	w8, [sp, #232]
    1f64:	ldr	x0, [x25, x26, lsl #3]
    1f68:	add	x22, sp, #0x70
    1f6c:	ldr	x8, [x0]
    1f70:	ldr	x9, [x8, #48]
    1f74:	add	x8, sp, #0x70
    1f78:	blr	x9
    1f7c:	ldrb	w21, [sp, #232]
    1f80:	mov	w8, #0x104                 	// #260
    1f84:	strh	w8, [sp, #160]
    1f88:	stp	x22, xzr, [sp, #144]
    1f8c:	cmp	w21, #0x1
    1f90:	b.eq	1fbc <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x2e4>  // b.none
    1f94:	cbnz	w21, 1fd4 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x2fc>
    1f98:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1f9c:	mov	w8, #0x100                 	// #256
    1fa0:	add	x9, x9, #0x0
    1fa4:	mov	w10, #0x103                 	// #259
    1fa8:	stp	xzr, xzr, [sp, #240]
    1fac:	strh	w8, [sp, #256]
    1fb0:	stp	x9, xzr, [sp, #88]
    1fb4:	strh	w10, [sp, #104]
    1fb8:	b	205c <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x384>
    1fbc:	ldr	x8, [sp, #160]
    1fc0:	ldr	q0, [x24]
    1fc4:	and	w21, w8, #0xff
    1fc8:	str	q0, [x24, #96]
    1fcc:	str	x8, [sp, #256]
    1fd0:	b	203c <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x364>
    1fd4:	ldrb	w8, [sp, #233]
    1fd8:	ldr	x9, [sp, #216]
    1fdc:	mov	w10, #0x2                   	// #2
    1fe0:	add	x11, sp, #0xd8
    1fe4:	cmp	w8, #0x1
    1fe8:	csel	w10, w21, w10, eq  // eq = none
    1fec:	add	x12, sp, #0x70
    1ff0:	mov	w13, #0x4                   	// #4
    1ff4:	csel	x8, x9, x11, eq  // eq = none
    1ff8:	cmp	w10, #0x2
    1ffc:	stp	x8, x12, [sp, #240]
    2000:	strb	w10, [sp, #256]
    2004:	strb	w13, [sp, #257]
    2008:	b.ne	203c <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x364>  // b.any
    200c:	ldrb	w9, [x8, #16]
    2010:	cbz	w9, 2230 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x558>
    2014:	ldrb	w8, [x8, #17]
    2018:	cmp	w8, #0x1
    201c:	b.eq	2230 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x558>  // b.none
    2020:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2024:	add	x8, x8, #0x0
    2028:	mov	w9, #0x103                 	// #259
    202c:	mov	w21, #0x2                   	// #2
    2030:	stp	x8, xzr, [sp, #88]
    2034:	strh	w9, [sp, #104]
    2038:	b	2070 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x398>
    203c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2040:	add	x8, x8, #0x0
    2044:	mov	w9, #0x103                 	// #259
    2048:	cmp	w21, #0x1
    204c:	stp	x8, xzr, [sp, #88]
    2050:	strh	w9, [sp, #104]
    2054:	b.eq	20c8 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x3f0>  // b.none
    2058:	cbnz	w21, 2070 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x398>
    205c:	mov	w8, #0x100                 	// #256
    2060:	mov	w21, wzr
    2064:	stp	xzr, xzr, [x29, #-240]
    2068:	sturh	w8, [x29, #-224]
    206c:	b	20dc <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x404>
    2070:	ldrb	w8, [sp, #257]
    2074:	ldr	x9, [sp, #240]
    2078:	mov	w10, #0x2                   	// #2
    207c:	add	x11, sp, #0xf0
    2080:	cmp	w8, #0x1
    2084:	adrp	x12, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2088:	csel	w10, w21, w10, eq  // eq = none
    208c:	add	x12, x12, #0x0
    2090:	mov	w13, #0x3                   	// #3
    2094:	csel	x8, x9, x11, eq  // eq = none
    2098:	cmp	w10, #0x2
    209c:	stp	x8, x12, [x29, #-240]
    20a0:	sturb	w10, [x29, #-224]
    20a4:	sturb	w13, [x29, #-223]
    20a8:	b.ne	20dc <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x404>  // b.any
    20ac:	ldrb	w9, [x8, #16]
    20b0:	cbz	w9, 2230 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x558>
    20b4:	ldrb	w8, [x8, #17]
    20b8:	cmp	w8, #0x1
    20bc:	b.eq	2230 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x558>  // b.none
    20c0:	mov	w21, #0x2                   	// #2
    20c4:	b	20dc <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x404>
    20c8:	ldr	x8, [sp, #104]
    20cc:	ldur	q0, [sp, #88]
    20d0:	and	w21, w8, #0xff
    20d4:	str	q0, [x24, #128]
    20d8:	stur	x8, [x29, #-224]
    20dc:	ldr	x0, [x19]
    20e0:	add	x19, sp, #0x20
    20e4:	ldr	x8, [x0]
    20e8:	ldr	x9, [x8, #48]
    20ec:	add	x8, sp, #0x20
    20f0:	blr	x9
    20f4:	mov	w8, #0x104                 	// #260
    20f8:	cmp	w21, #0x1
    20fc:	strh	w8, [sp, #80]
    2100:	stp	x19, xzr, [sp, #64]
    2104:	b.eq	2130 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x458>  // b.none
    2108:	cbnz	w21, 2148 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x470>
    210c:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2110:	mov	w8, #0x100                 	// #256
    2114:	add	x9, x9, #0x0
    2118:	mov	w10, #0x103                 	// #259
    211c:	stp	xzr, xzr, [x29, #-208]
    2120:	sturh	w8, [x29, #-192]
    2124:	stp	x9, xzr, [sp, #8]
    2128:	strh	w10, [sp, #24]
    212c:	b	21d0 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x4f8>
    2130:	ldr	x8, [sp, #80]
    2134:	ldr	q0, [sp, #64]
    2138:	and	w21, w8, #0xff
    213c:	str	q0, [x24, #160]
    2140:	stur	x8, [x29, #-192]
    2144:	b	21b0 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x4d8>
    2148:	ldurb	w8, [x29, #-223]
    214c:	ldur	x9, [x29, #-240]
    2150:	mov	w10, #0x2                   	// #2
    2154:	sub	x11, x29, #0xf0
    2158:	cmp	w8, #0x1
    215c:	csel	w10, w21, w10, eq  // eq = none
    2160:	add	x12, sp, #0x20
    2164:	mov	w13, #0x4                   	// #4
    2168:	csel	x8, x9, x11, eq  // eq = none
    216c:	cmp	w10, #0x2
    2170:	stp	x8, x12, [x29, #-208]
    2174:	sturb	w10, [x29, #-192]
    2178:	sturb	w13, [x29, #-191]
    217c:	b.ne	21b0 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x4d8>  // b.any
    2180:	ldrb	w9, [x8, #16]
    2184:	cbz	w9, 2230 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x558>
    2188:	ldrb	w8, [x8, #17]
    218c:	cmp	w8, #0x1
    2190:	b.eq	2230 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x558>  // b.none
    2194:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2198:	add	x8, x8, #0x0
    219c:	mov	w9, #0x103                 	// #259
    21a0:	mov	w21, #0x2                   	// #2
    21a4:	stp	x8, xzr, [sp, #8]
    21a8:	strh	w9, [sp, #24]
    21ac:	b	21e0 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x508>
    21b0:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    21b4:	add	x8, x8, #0x0
    21b8:	mov	w9, #0x103                 	// #259
    21bc:	cmp	w21, #0x1
    21c0:	stp	x8, xzr, [sp, #8]
    21c4:	strh	w9, [sp, #24]
    21c8:	b.eq	2250 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x578>  // b.none
    21cc:	cbnz	w21, 21e0 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x508>
    21d0:	mov	w8, #0x100                 	// #256
    21d4:	stp	xzr, xzr, [x29, #-176]
    21d8:	sturh	w8, [x29, #-160]
    21dc:	b	2260 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x588>
    21e0:	ldurb	w8, [x29, #-191]
    21e4:	ldur	x9, [x29, #-208]
    21e8:	mov	w10, #0x2                   	// #2
    21ec:	sub	x11, x29, #0xd0
    21f0:	cmp	w8, #0x1
    21f4:	adrp	x12, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    21f8:	csel	w10, w21, w10, eq  // eq = none
    21fc:	add	x12, x12, #0x0
    2200:	mov	w13, #0x3                   	// #3
    2204:	csel	x8, x9, x11, eq  // eq = none
    2208:	cmp	w10, #0x2
    220c:	stp	x8, x12, [x29, #-176]
    2210:	sturb	w10, [x29, #-160]
    2214:	sturb	w13, [x29, #-159]
    2218:	b.ne	2260 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x588>  // b.any
    221c:	ldrb	w9, [x8, #16]
    2220:	cbz	w9, 2230 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x558>
    2224:	ldrb	w8, [x8, #17]
    2228:	cmp	w8, #0x1
    222c:	b.ne	2260 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x588>  // b.any
    2230:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2234:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2238:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    223c:	add	x0, x0, #0x0
    2240:	add	x1, x1, #0x0
    2244:	add	x3, x3, #0x0
    2248:	mov	w2, #0xb8                  	// #184
    224c:	bl	0 <__assert_fail>
    2250:	ldur	q0, [sp, #8]
    2254:	ldr	x8, [sp, #24]
    2258:	str	q0, [x24, #192]
    225c:	stur	x8, [x29, #-160]
    2260:	sub	x0, x29, #0x8
    2264:	sub	x2, x29, #0xb0
    2268:	mov	w1, #0x1                   	// #1
    226c:	stur	x20, [x29, #-8]
    2270:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    2274:	ldr	x0, [sp, #32]
    2278:	add	x8, sp, #0x20
    227c:	add	x8, x8, #0x10
    2280:	cmp	x0, x8
    2284:	b.eq	228c <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x5b4>  // b.none
    2288:	bl	0 <_ZdlPv>
    228c:	ldr	x0, [sp, #112]
    2290:	add	x8, sp, #0x70
    2294:	add	x8, x8, #0x10
    2298:	cmp	x0, x8
    229c:	b.eq	22a4 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x5cc>  // b.none
    22a0:	bl	0 <_ZdlPv>
    22a4:	mov	w19, #0x1                   	// #1
    22a8:	ldur	x0, [x29, #-152]
    22ac:	sub	x8, x29, #0x98
    22b0:	add	x8, x8, #0x10
    22b4:	cmp	x0, x8
    22b8:	b.eq	22c0 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x5e8>  // b.none
    22bc:	bl	0 <free>
    22c0:	and	w0, w19, #0x1
    22c4:	add	sp, sp, #0x200
    22c8:	ldp	x20, x19, [sp, #80]
    22cc:	ldp	x22, x21, [sp, #64]
    22d0:	ldp	x24, x23, [sp, #48]
    22d4:	ldp	x26, x25, [sp, #32]
    22d8:	ldp	x28, x27, [sp, #16]
    22dc:	ldp	x29, x30, [sp], #96
    22e0:	ret
    22e4:	sub	x0, x29, #0x98
    22e8:	mov	x1, xzr
    22ec:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    22f0:	ldp	w8, w9, [x29, #-144]
    22f4:	b	1ee0 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x208>
    22f8:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    22fc:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2300:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2304:	add	x0, x0, #0x0
    2308:	add	x1, x1, #0x0
    230c:	add	x3, x3, #0x0
    2310:	mov	w2, #0x43                  	// #67
    2314:	bl	0 <__assert_fail>

0000000000002318 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE>:
    2318:	sub	sp, sp, #0xc0
    231c:	stp	x29, x30, [sp, #96]
    2320:	stp	x28, x27, [sp, #112]
    2324:	stp	x26, x25, [sp, #128]
    2328:	stp	x24, x23, [sp, #144]
    232c:	stp	x22, x21, [sp, #160]
    2330:	stp	x20, x19, [sp, #176]
    2334:	add	x29, sp, #0x60
    2338:	str	x5, [sp, #8]
    233c:	ldp	x26, x27, [x1]
    2340:	cmp	x26, x27
    2344:	b.eq	2558 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x240>  // b.none
    2348:	adrp	x9, 0 <_ZTVN4llvm11MapResolverE>
    234c:	ldr	x9, [x9]
    2350:	add	x8, sp, #0x28
    2354:	mov	x20, x4
    2358:	mov	x21, x2
    235c:	mov	x22, x0
    2360:	add	x28, x8, #0x18
    2364:	add	x8, x9, #0x10
    2368:	and	w23, w3, #0x1
    236c:	str	x8, [sp]
    2370:	b	239c <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x84>
    2374:	mov	x0, x22
    2378:	mov	x2, x21
    237c:	mov	w3, w23
    2380:	mov	x4, x20
    2384:	mov	x5, xzr
    2388:	bl	2768 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE>
    238c:	tbnz	w0, #0, 2560 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x248>
    2390:	add	x26, x26, #0x10
    2394:	cmp	x26, x27
    2398:	b.eq	2558 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x240>  // b.none
    239c:	ldr	x1, [x26, #8]
    23a0:	cbnz	x1, 2374 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x5c>
    23a4:	ldr	x25, [x26]
    23a8:	mov	w0, #0x80                  	// #128
    23ac:	bl	0 <_Znwm>
    23b0:	mov	x1, x25
    23b4:	mov	x24, x0
    23b8:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    23bc:	ldr	x8, [sp, #8]
    23c0:	cbz	x8, 23f4 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0xdc>
    23c4:	ldr	x10, [sp, #8]
    23c8:	ldp	w8, w9, [x24, #16]
    23cc:	ldr	x25, [x10]
    23d0:	cmp	w8, w9
    23d4:	b.cs	253c <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x224>  // b.hs, b.nlast
    23d8:	ldr	x9, [x24, #8]
    23dc:	str	x25, [x9, w8, uxtw #3]
    23e0:	ldp	w8, w9, [x24, #16]
    23e4:	cmp	w8, w9
    23e8:	b.cs	2584 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x26c>  // b.hs, b.nlast
    23ec:	add	w8, w8, #0x1
    23f0:	str	w8, [x24, #16]
    23f4:	ldr	x8, [sp]
    23f8:	strb	wzr, [sp, #56]
    23fc:	stp	x8, x24, [sp, #40]
    2400:	stp	xzr, xzr, [x28]
    2404:	str	wzr, [x28, #24]
    2408:	str	xzr, [x28, #16]
    240c:	ldr	w8, [x21, #8]
    2410:	cbz	w8, 2430 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x118>
    2414:	ldr	x25, [x21]
    2418:	add	x19, x25, x8, lsl #4
    241c:	ldp	x1, x2, [x25], #16
    2420:	add	x0, sp, #0x28
    2424:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2428:	cmp	x25, x19
    242c:	b.ne	241c <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x104>  // b.any
    2430:	add	x1, sp, #0x28
    2434:	mov	x0, x24
    2438:	mov	x2, xzr
    243c:	bl	0 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE>
    2440:	cbz	x20, 2474 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x15c>
    2444:	stp	x24, xzr, [sp, #24]
    2448:	ldp	x1, x8, [x20, #8]
    244c:	cmp	x1, x8
    2450:	b.eq	250c <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x1f4>  // b.none
    2454:	str	xzr, [sp, #24]
    2458:	str	x24, [x1]
    245c:	ldr	x8, [sp, #32]
    2460:	add	x9, x1, #0x10
    2464:	str	xzr, [sp, #32]
    2468:	str	x8, [x1, #8]
    246c:	str	x9, [x20, #8]
    2470:	b	2518 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x200>
    2474:	add	x1, sp, #0x10
    2478:	mov	x0, x22
    247c:	str	x24, [sp, #16]
    2480:	bl	2a74 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
    2484:	ldr	x25, [sp, #16]
    2488:	mov	w24, w0
    248c:	cbz	x25, 24e8 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x1d0>
    2490:	ldr	x0, [x25, #88]
    2494:	add	x8, x25, #0x68
    2498:	cmp	x0, x8
    249c:	b.eq	24a4 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x18c>  // b.none
    24a0:	bl	0 <free>
    24a4:	ldr	x0, [x25, #72]
    24a8:	add	x8, x25, #0x58
    24ac:	cmp	x0, x8
    24b0:	b.eq	24b8 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x1a0>  // b.none
    24b4:	bl	0 <free>
    24b8:	ldr	x0, [x25, #56]
    24bc:	add	x8, x25, #0x48
    24c0:	cmp	x0, x8
    24c4:	b.eq	24cc <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x1b4>  // b.none
    24c8:	bl	0 <free>
    24cc:	ldr	x0, [x25, #8]
    24d0:	add	x8, x25, #0x18
    24d4:	cmp	x0, x8
    24d8:	b.eq	24e0 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x1c8>  // b.none
    24dc:	bl	0 <free>
    24e0:	mov	x0, x25
    24e4:	bl	0 <_ZdlPv>
    24e8:	str	xzr, [sp, #16]
    24ec:	adrp	x8, 0 <_ZTVN4llvm11MapResolverE>
    24f0:	ldr	x0, [sp, #72]
    24f4:	ldr	x8, [x8]
    24f8:	add	x8, x8, #0x10
    24fc:	str	x8, [sp, #40]
    2500:	bl	0 <_ZdlPv>
    2504:	tbz	w24, #0, 2390 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x78>
    2508:	b	2560 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x248>
    250c:	add	x2, sp, #0x18
    2510:	mov	x0, x20
    2514:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2518:	add	x0, sp, #0x18
    251c:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2520:	adrp	x8, 0 <_ZTVN4llvm11MapResolverE>
    2524:	ldr	x0, [sp, #72]
    2528:	ldr	x8, [x8]
    252c:	add	x8, x8, #0x10
    2530:	str	x8, [sp, #40]
    2534:	bl	0 <_ZdlPv>
    2538:	b	2390 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x78>
    253c:	add	x0, x24, #0x8
    2540:	add	x1, x24, #0x18
    2544:	mov	w3, #0x8                   	// #8
    2548:	mov	x2, xzr
    254c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2550:	ldr	w8, [x24, #16]
    2554:	b	23d8 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0xc0>
    2558:	mov	w0, wzr
    255c:	b	2564 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x24c>
    2560:	mov	w0, #0x1                   	// #1
    2564:	ldp	x20, x19, [sp, #176]
    2568:	ldp	x22, x21, [sp, #160]
    256c:	ldp	x24, x23, [sp, #144]
    2570:	ldp	x26, x25, [sp, #128]
    2574:	ldp	x28, x27, [sp, #112]
    2578:	ldp	x29, x30, [sp, #96]
    257c:	add	sp, sp, #0xc0
    2580:	ret
    2584:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2588:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    258c:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2590:	add	x0, x0, #0x0
    2594:	add	x1, x1, #0x0
    2598:	add	x3, x3, #0x0
    259c:	mov	w2, #0x43                  	// #67
    25a0:	bl	0 <__assert_fail>

00000000000025a4 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE>:
    25a4:	sub	sp, sp, #0xc0
    25a8:	stp	x29, x30, [sp, #160]
    25ac:	stp	x20, x19, [sp, #176]
    25b0:	add	x29, sp, #0xa0
    25b4:	ldr	x8, [x1]
    25b8:	mov	x2, x1
    25bc:	cbz	x8, 25c8 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x24>
    25c0:	ldr	x9, [x2, #8]
    25c4:	cbnz	x9, 2748 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x1a4>
    25c8:	ldp	x10, x9, [x0, #272]
    25cc:	cmp	x10, x9
    25d0:	b.eq	260c <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x68>  // b.none
    25d4:	ldur	x9, [x9, #-8]
    25d8:	ldp	x1, x10, [x9, #32]
    25dc:	cmp	x1, x10
    25e0:	b.eq	2668 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0xc4>  // b.none
    25e4:	str	xzr, [x2]
    25e8:	str	x8, [x1]
    25ec:	ldr	x8, [x2, #8]
    25f0:	str	xzr, [x2, #8]
    25f4:	mov	w19, wzr
    25f8:	str	x8, [x1, #8]
    25fc:	ldr	x8, [x9, #32]
    2600:	add	x8, x8, #0x10
    2604:	str	x8, [x9, #32]
    2608:	b	2674 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0xd0>
    260c:	ldr	x1, [x2, #8]
    2610:	cbz	x1, 2688 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0xe4>
    2614:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2618:	ldr	d0, [x8]
    261c:	add	x8, sp, #0x10
    2620:	add	x19, x8, #0x10
    2624:	str	x19, [sp, #16]
    2628:	str	d0, [sp, #24]
    262c:	ldr	x8, [x0, #328]
    2630:	add	x2, sp, #0x10
    2634:	mov	x5, xzr
    2638:	cmp	x8, #0x0
    263c:	add	x8, x8, #0x80
    2640:	cset	w3, eq  // eq = none
    2644:	csel	x4, xzr, x8, eq  // eq = none
    2648:	bl	2768 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE>
    264c:	ldr	x8, [sp, #16]
    2650:	cmp	x8, x19
    2654:	mov	w19, w0
    2658:	b.eq	2674 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0xd0>  // b.none
    265c:	mov	x0, x8
    2660:	bl	0 <free>
    2664:	b	2674 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0xd0>
    2668:	add	x0, x9, #0x18
    266c:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2670:	mov	w19, wzr
    2674:	and	w0, w19, #0x1
    2678:	ldp	x20, x19, [sp, #176]
    267c:	ldp	x29, x30, [sp, #160]
    2680:	add	sp, sp, #0xc0
    2684:	ret
    2688:	ldr	x9, [x0, #328]
    268c:	cbz	x9, 26c4 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x120>
    2690:	ldp	x1, x10, [x9, #136]
    2694:	cmp	x1, x10
    2698:	b.eq	2740 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x19c>  // b.none
    269c:	str	xzr, [x2]
    26a0:	str	x8, [x1]
    26a4:	ldr	x8, [x2, #8]
    26a8:	str	xzr, [x2, #8]
    26ac:	mov	w19, wzr
    26b0:	str	x8, [x1, #8]
    26b4:	ldr	x8, [x9, #136]
    26b8:	add	x8, x8, #0x10
    26bc:	str	x8, [x9, #136]
    26c0:	b	2674 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0xd0>
    26c4:	add	x1, sp, #0x8
    26c8:	str	xzr, [x2]
    26cc:	str	x8, [sp, #8]
    26d0:	bl	2a74 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
    26d4:	ldr	x20, [sp, #8]
    26d8:	mov	w19, w0
    26dc:	cbz	x20, 2738 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x194>
    26e0:	ldr	x0, [x20, #88]
    26e4:	add	x8, x20, #0x68
    26e8:	cmp	x0, x8
    26ec:	b.eq	26f4 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x150>  // b.none
    26f0:	bl	0 <free>
    26f4:	ldr	x0, [x20, #72]
    26f8:	add	x8, x20, #0x58
    26fc:	cmp	x0, x8
    2700:	b.eq	2708 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x164>  // b.none
    2704:	bl	0 <free>
    2708:	ldr	x0, [x20, #56]
    270c:	add	x8, x20, #0x48
    2710:	cmp	x0, x8
    2714:	b.eq	271c <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x178>  // b.none
    2718:	bl	0 <free>
    271c:	ldr	x0, [x20, #8]
    2720:	add	x8, x20, #0x18
    2724:	cmp	x0, x8
    2728:	b.eq	2730 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x18c>  // b.none
    272c:	bl	0 <free>
    2730:	mov	x0, x20
    2734:	bl	0 <_ZdlPv>
    2738:	str	xzr, [sp, #8]
    273c:	b	2674 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0xd0>
    2740:	add	x0, x9, #0x80
    2744:	b	266c <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0xc8>
    2748:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    274c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2750:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2754:	add	x0, x0, #0x0
    2758:	add	x1, x1, #0x0
    275c:	add	x3, x3, #0x0
    2760:	mov	w2, #0x159                 	// #345
    2764:	bl	0 <__assert_fail>

0000000000002768 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE>:
    2768:	sub	sp, sp, #0xf0
    276c:	stp	x29, x30, [sp, #144]
    2770:	stp	x28, x27, [sp, #160]
    2774:	stp	x26, x25, [sp, #176]
    2778:	stp	x24, x23, [sp, #192]
    277c:	stp	x22, x21, [sp, #208]
    2780:	stp	x20, x19, [sp, #224]
    2784:	add	x29, sp, #0x90
    2788:	sturb	wzr, [x29, #-40]
    278c:	adrp	x27, 0 <_ZTVN4llvm11MapResolverE>
    2790:	ldr	x27, [x27]
    2794:	stp	xzr, xzr, [x29, #-24]
    2798:	stur	xzr, [x29, #-32]
    279c:	stur	wzr, [x29, #-8]
    27a0:	add	x8, x27, #0x10
    27a4:	stp	x8, xzr, [x29, #-56]
    27a8:	ldr	w8, [x2, #8]
    27ac:	mov	x24, x5
    27b0:	mov	x21, x4
    27b4:	mov	w23, w3
    27b8:	mov	x20, x2
    27bc:	mov	x19, x1
    27c0:	mov	x22, x0
    27c4:	cbz	w8, 27e4 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x7c>
    27c8:	ldr	x25, [x20]
    27cc:	add	x26, x25, x8, lsl #4
    27d0:	ldp	x1, x2, [x25], #16
    27d4:	sub	x0, x29, #0x38
    27d8:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    27dc:	cmp	x25, x26
    27e0:	b.ne	27d0 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x68>  // b.any
    27e4:	ldr	x0, [x19, #16]
    27e8:	sub	x1, x29, #0x38
    27ec:	ldr	x8, [x0]
    27f0:	ldr	x8, [x8, #96]
    27f4:	blr	x8
    27f8:	cbz	x0, 2a34 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x2cc>
    27fc:	ldrb	w8, [x0, #8]
    2800:	mov	x25, x0
    2804:	cmp	w8, #0x9
    2808:	b.ne	28b8 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x150>  // b.any
    280c:	ldr	w8, [x25, #32]
    2810:	lsl	x27, x8, #3
    2814:	cbz	x27, 2940 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x1d8>
    2818:	ldr	x8, [x19, #8]
    281c:	add	x25, x25, #0x28
    2820:	add	x24, x19, #0x18
    2824:	cbz	x8, 2858 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0xf0>
    2828:	ldp	w9, w10, [x20, #8]
    282c:	ldr	x28, [x25]
    2830:	ldr	x26, [x8, #24]
    2834:	cmp	w9, w10
    2838:	b.cs	28a4 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x13c>  // b.hs, b.nlast
    283c:	ldr	x8, [x20]
    2840:	cmp	w9, w10
    2844:	add	x8, x8, w9, uxtw #4
    2848:	stp	x26, x28, [x8]
    284c:	b.cs	2a14 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x2ac>  // b.hs, b.nlast
    2850:	add	w8, w9, #0x1
    2854:	str	w8, [x20, #8]
    2858:	and	w3, w23, #0x1
    285c:	mov	x0, x22
    2860:	mov	x1, x24
    2864:	mov	x2, x20
    2868:	mov	x4, x21
    286c:	mov	x5, xzr
    2870:	bl	2318 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE>
    2874:	ldr	x8, [x19, #8]
    2878:	cbz	x8, 2890 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x128>
    287c:	ldp	w9, w10, [x20, #8]
    2880:	sub	x9, x9, #0x1
    2884:	cmp	x9, x10
    2888:	b.hi	2a14 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x2ac>  // b.pmore
    288c:	str	w9, [x20, #8]
    2890:	tbnz	w0, #0, 2994 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x22c>
    2894:	subs	x27, x27, #0x8
    2898:	add	x25, x25, #0x8
    289c:	b.ne	2824 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0xbc>  // b.any
    28a0:	b	2940 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x1d8>
    28a4:	mov	x0, x20
    28a8:	mov	x1, xzr
    28ac:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    28b0:	ldp	w9, w10, [x20, #8]
    28b4:	b	283c <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0xd4>
    28b8:	tbz	w23, #0, 2948 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x1e0>
    28bc:	ldr	x8, [x25]
    28c0:	mov	x0, x25
    28c4:	add	x20, sp, #0x8
    28c8:	ldr	x9, [x8, #40]
    28cc:	add	x8, sp, #0x8
    28d0:	blr	x9
    28d4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    28d8:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    28dc:	add	x8, x8, #0x0
    28e0:	mov	w9, #0x403                 	// #1027
    28e4:	add	x10, sp, #0x28
    28e8:	add	x11, x11, #0x0
    28ec:	mov	w12, #0x302                 	// #770
    28f0:	stp	x8, x20, [sp, #40]
    28f4:	strh	w9, [sp, #56]
    28f8:	stp	x10, x11, [sp, #64]
    28fc:	strh	w12, [sp, #80]
    2900:	cbnz	wzr, 2a54 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x2ec>
    2904:	ldrb	w8, [sp, #57]
    2908:	cmp	w8, #0x1
    290c:	b.eq	2a54 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x2ec>  // b.none
    2910:	add	x2, sp, #0x40
    2914:	mov	w1, #0x1                   	// #1
    2918:	mov	x0, x19
    291c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    2920:	ldr	x0, [sp, #8]
    2924:	add	x8, sp, #0x8
    2928:	add	x8, x8, #0x10
    292c:	cmp	x0, x8
    2930:	b.eq	2938 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x1d0>  // b.none
    2934:	bl	0 <_ZdlPv>
    2938:	mov	w19, #0x1                   	// #1
    293c:	b	29e0 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x278>
    2940:	mov	w19, wzr
    2944:	b	2998 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x230>
    2948:	mov	w0, #0x30                  	// #48
    294c:	bl	0 <_Znwm>
    2950:	ldr	q0, [x19]
    2954:	stp	xzr, xzr, [x0, #32]
    2958:	stp	x25, xzr, [x0, #16]
    295c:	str	x0, [sp, #64]
    2960:	str	q0, [x0]
    2964:	ldp	x1, x8, [x21, #8]
    2968:	cmp	x1, x8
    296c:	b.eq	29a4 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x23c>  // b.none
    2970:	str	xzr, [sp, #64]
    2974:	stp	xzr, x0, [x1]
    2978:	add	x0, sp, #0x8
    297c:	str	xzr, [sp, #8]
    2980:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2984:	ldr	x8, [x21, #8]
    2988:	add	x8, x8, #0x10
    298c:	str	x8, [x21, #8]
    2990:	b	29b0 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x248>
    2994:	mov	w19, #0x1                   	// #1
    2998:	adrp	x27, 0 <_ZTVN4llvm11MapResolverE>
    299c:	ldr	x27, [x27]
    29a0:	b	29e0 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x278>
    29a4:	add	x2, sp, #0x40
    29a8:	mov	x0, x21
    29ac:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    29b0:	add	x0, sp, #0x40
    29b4:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    29b8:	ldr	x8, [x21, #8]
    29bc:	add	x1, x19, #0x18
    29c0:	mov	x0, x22
    29c4:	mov	x2, x20
    29c8:	ldur	x8, [x8, #-8]
    29cc:	mov	w3, wzr
    29d0:	mov	x5, x24
    29d4:	add	x4, x8, #0x18
    29d8:	bl	2318 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE>
    29dc:	mov	w19, w0
    29e0:	ldur	x0, [x29, #-24]
    29e4:	add	x8, x27, #0x10
    29e8:	stur	x8, [x29, #-56]
    29ec:	bl	0 <_ZdlPv>
    29f0:	and	w0, w19, #0x1
    29f4:	ldp	x20, x19, [sp, #224]
    29f8:	ldp	x22, x21, [sp, #208]
    29fc:	ldp	x24, x23, [sp, #192]
    2a00:	ldp	x26, x25, [sp, #176]
    2a04:	ldp	x28, x27, [sp, #160]
    2a08:	ldp	x29, x30, [sp, #144]
    2a0c:	add	sp, sp, #0xf0
    2a10:	ret
    2a14:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2a18:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2a1c:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2a20:	add	x0, x0, #0x0
    2a24:	add	x1, x1, #0x0
    2a28:	add	x3, x3, #0x0
    2a2c:	mov	w2, #0x43                  	// #67
    2a30:	bl	0 <__assert_fail>
    2a34:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2a38:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2a3c:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2a40:	add	x0, x0, #0x0
    2a44:	add	x1, x1, #0x0
    2a48:	add	x3, x3, #0x0
    2a4c:	mov	w2, #0x69                  	// #105
    2a50:	bl	0 <__assert_fail>
    2a54:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2a58:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2a5c:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2a60:	add	x0, x0, #0x0
    2a64:	add	x1, x1, #0x0
    2a68:	add	x3, x3, #0x0
    2a6c:	mov	w2, #0xb8                  	// #184
    2a70:	bl	0 <__assert_fail>

0000000000002a74 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>:
    2a74:	sub	sp, sp, #0x1b0
    2a78:	stp	x29, x30, [sp, #336]
    2a7c:	stp	x28, x27, [sp, #352]
    2a80:	stp	x26, x25, [sp, #368]
    2a84:	stp	x24, x23, [sp, #384]
    2a88:	stp	x22, x21, [sp, #400]
    2a8c:	stp	x20, x19, [sp, #416]
    2a90:	add	x29, sp, #0x150
    2a94:	ldr	x8, [x1]
    2a98:	mov	x24, x0
    2a9c:	ldr	x21, [x24, #344]
    2aa0:	mov	x19, x1
    2aa4:	ldr	x0, [x8]
    2aa8:	add	x20, sp, #0x90
    2aac:	ldr	x8, [x0]
    2ab0:	ldr	x9, [x8, #48]
    2ab4:	add	x8, sp, #0x90
    2ab8:	blr	x9
    2abc:	ldp	x1, x2, [sp, #144]
    2ac0:	mov	x0, x21
    2ac4:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2ac8:	ldr	x8, [sp, #144]
    2acc:	add	x9, x20, #0x10
    2ad0:	mov	x21, x0
    2ad4:	cmp	x8, x9
    2ad8:	b.eq	2ae4 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x70>  // b.none
    2adc:	mov	x0, x8
    2ae0:	bl	0 <_ZdlPv>
    2ae4:	cbz	x21, 2b08 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x94>
    2ae8:	ldr	x22, [x19]
    2aec:	ldrb	w8, [x22, #124]
    2af0:	cbz	w8, 30d8 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x664>
    2af4:	ldr	x0, [x24, #344]
    2af8:	bl	0 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv>
    2afc:	mov	x1, x0
    2b00:	mov	x0, x22
    2b04:	bl	0 <_ZN4llvm6Record7setNameEPNS_4InitE>
    2b08:	ldr	x0, [x19]
    2b0c:	bl	0 <_ZN4llvm6Record17resolveReferencesEv>
    2b10:	ldr	x21, [x19]
    2b14:	ldr	w8, [x21, #80]
    2b18:	cbz	w8, 2f7c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x508>
    2b1c:	str	x24, [sp, #8]
    2b20:	ldr	x24, [x21, #72]
    2b24:	add	x11, sp, #0x40
    2b28:	add	x12, sp, #0x68
    2b2c:	add	x11, x11, #0x10
    2b30:	sub	x14, x29, #0x80
    2b34:	str	x11, [sp, #48]
    2b38:	add	x11, x12, #0x10
    2b3c:	mov	w9, #0x18                  	// #24
    2b40:	add	x13, sp, #0x90
    2b44:	sub	x15, x29, #0x50
    2b48:	sub	x10, x29, #0x20
    2b4c:	str	x11, [sp, #40]
    2b50:	add	x11, x14, #0x12
    2b54:	add	x27, x13, #0x10
    2b58:	str	x11, [sp, #32]
    2b5c:	add	x11, x15, #0x12
    2b60:	add	x10, x10, #0x12
    2b64:	madd	x25, x8, x9, x24
    2b68:	stp	x10, x11, [sp, #16]
    2b6c:	b	2b7c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x108>
    2b70:	add	x24, x24, #0x18
    2b74:	cmp	x24, x25
    2b78:	b.eq	2f74 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x500>  // b.none
    2b7c:	ldrb	w8, [x24, #8]
    2b80:	tbnz	w8, #2, 2b70 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xfc>
    2b84:	ldr	x22, [x24, #16]
    2b88:	cbz	x22, 2b70 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xfc>
    2b8c:	ldrb	w8, [x22, #8]
    2b90:	cmp	w8, #0x3
    2b94:	b.ne	2c48 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x1d4>  // b.any
    2b98:	ldr	w20, [x22, #32]
    2b9c:	cbz	w20, 2b70 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xfc>
    2ba0:	mov	w28, wzr
    2ba4:	add	x26, x22, #0x28
    2ba8:	ldr	x23, [x26, w28, uxtw #3]
    2bac:	cbz	x23, 330c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x898>
    2bb0:	ldrb	w8, [x23, #8]
    2bb4:	cmp	w8, #0x13
    2bb8:	b.eq	2c2c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x1b8>  // b.none
    2bbc:	cmp	w8, #0x15
    2bc0:	b.ne	2c18 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x1a4>  // b.any
    2bc4:	ldr	x0, [x23, #24]
    2bc8:	cbz	x0, 334c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x8d8>
    2bcc:	ldrb	w8, [x0, #8]
    2bd0:	cmp	w8, #0x13
    2bd4:	b.ne	2c18 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x1a4>  // b.any
    2bd8:	bl	0 <_ZNK4llvm7VarInit7getNameEv>
    2bdc:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    2be0:	ldr	w8, [x21, #80]
    2be4:	cbz	w8, 2c18 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x1a4>
    2be8:	ldr	x10, [x21, #72]
    2bec:	add	x8, x8, x8, lsl #1
    2bf0:	lsl	x8, x8, #3
    2bf4:	mov	x9, x10
    2bf8:	ldr	x11, [x9], #24
    2bfc:	cmp	x11, x0
    2c00:	b.eq	2c14 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x1a0>  // b.none
    2c04:	subs	x8, x8, #0x18
    2c08:	mov	x10, x9
    2c0c:	b.ne	2bf8 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x184>  // b.any
    2c10:	b	2c18 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x1a4>
    2c14:	cbnz	x10, 2c2c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x1b8>
    2c18:	ldr	x8, [x23]
    2c1c:	mov	x0, x23
    2c20:	ldr	x8, [x8, #32]
    2c24:	blr	x8
    2c28:	tbz	w0, #0, 2c5c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x1e8>
    2c2c:	add	w28, w28, #0x1
    2c30:	cmp	w28, w20
    2c34:	b.eq	2b70 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xfc>  // b.none
    2c38:	ldr	w8, [x22, #32]
    2c3c:	cmp	w8, w28
    2c40:	b.hi	2ba8 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x134>  // b.pmore
    2c44:	b	332c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x8b8>
    2c48:	ldr	x8, [x22]
    2c4c:	mov	x0, x22
    2c50:	ldr	x8, [x8, #32]
    2c54:	blr	x8
    2c58:	tbnz	w0, #0, 2b70 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xfc>
    2c5c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2c60:	add	x8, x8, #0x0
    2c64:	ldr	x22, [x21, #8]
    2c68:	ldr	w23, [x21, #16]
    2c6c:	stp	x8, xzr, [x29, #-152]
    2c70:	mov	w8, #0x103                 	// #259
    2c74:	sturh	w8, [x29, #-136]
    2c78:	ldr	x0, [x24]
    2c7c:	ldr	x8, [x0]
    2c80:	ldr	x9, [x8, #48]
    2c84:	add	x8, sp, #0x90
    2c88:	blr	x9
    2c8c:	ldurb	w8, [x29, #-136]
    2c90:	cmp	w8, #0x1
    2c94:	b.eq	2cb8 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x244>  // b.none
    2c98:	cbnz	w8, 2d00 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x28c>
    2c9c:	mov	w8, #0x100                 	// #256
    2ca0:	stp	xzr, xzr, [x29, #-128]
    2ca4:	sturh	w8, [x29, #-112]
    2ca8:	stp	xzr, xzr, [x29, #-104]
    2cac:	sturb	wzr, [x29, #-88]
    2cb0:	mov	w8, #0x1                   	// #1
    2cb4:	b	2cf8 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x284>
    2cb8:	add	x10, sp, #0x90
    2cbc:	stp	x10, xzr, [x29, #-128]
    2cc0:	stur	x10, [x29, #-104]
    2cc4:	adrp	x10, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2cc8:	add	x10, x10, #0x0
    2ccc:	mov	w8, #0x104                 	// #260
    2cd0:	stur	x10, [x29, #-96]
    2cd4:	mov	w10, #0x4                   	// #4
    2cd8:	sturh	w8, [x29, #-112]
    2cdc:	ldur	w8, [x29, #-160]
    2ce0:	sturb	w10, [x29, #-88]
    2ce4:	ldr	x10, [sp, #32]
    2ce8:	ldurh	w9, [x29, #-156]
    2cec:	str	w8, [x10]
    2cf0:	mov	w8, #0x3                   	// #3
    2cf4:	strh	w9, [x10, #4]
    2cf8:	sturb	w8, [x29, #-87]
    2cfc:	b	2d7c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x308>
    2d00:	ldurb	w9, [x29, #-135]
    2d04:	ldur	x10, [x29, #-152]
    2d08:	cmp	w9, #0x1
    2d0c:	mov	w9, #0x2                   	// #2
    2d10:	csel	w9, w8, w9, eq  // eq = none
    2d14:	sub	x8, x29, #0x98
    2d18:	csel	x8, x10, x8, eq  // eq = none
    2d1c:	add	x10, sp, #0x90
    2d20:	sturb	w9, [x29, #-112]
    2d24:	cmp	w9, #0x2
    2d28:	mov	w9, #0x4                   	// #4
    2d2c:	stp	x8, x10, [x29, #-128]
    2d30:	sturb	w9, [x29, #-111]
    2d34:	b.ne	2d4c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x2d8>  // b.any
    2d38:	ldrb	w9, [x8, #16]
    2d3c:	cbz	w9, 336c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x8f8>
    2d40:	ldrb	w8, [x8, #17]
    2d44:	cmp	w8, #0x1
    2d48:	b.eq	336c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x8f8>  // b.none
    2d4c:	ldurb	w8, [x29, #-112]
    2d50:	sub	x9, x29, #0x80
    2d54:	stur	x9, [x29, #-104]
    2d58:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2d5c:	add	x9, x9, #0x0
    2d60:	stur	x9, [x29, #-96]
    2d64:	mov	w9, #0x302                 	// #770
    2d68:	sturh	w9, [x29, #-88]
    2d6c:	cbz	w8, 336c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x8f8>
    2d70:	ldurb	w8, [x29, #-111]
    2d74:	cmp	w8, #0x1
    2d78:	b.eq	336c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x8f8>  // b.none
    2d7c:	ldr	x0, [x21]
    2d80:	ldr	x8, [x0]
    2d84:	ldr	x9, [x8, #48]
    2d88:	add	x8, sp, #0x68
    2d8c:	blr	x9
    2d90:	ldurb	w8, [x29, #-88]
    2d94:	cmp	w8, #0x1
    2d98:	b.eq	2dbc <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x348>  // b.none
    2d9c:	cbnz	w8, 2e04 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x390>
    2da0:	mov	w8, #0x100                 	// #256
    2da4:	stp	xzr, xzr, [x29, #-80]
    2da8:	sturh	w8, [x29, #-64]
    2dac:	stp	xzr, xzr, [x29, #-56]
    2db0:	sturb	wzr, [x29, #-40]
    2db4:	mov	w8, #0x1                   	// #1
    2db8:	b	2dfc <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x388>
    2dbc:	add	x10, sp, #0x68
    2dc0:	stp	x10, xzr, [x29, #-80]
    2dc4:	stur	x10, [x29, #-56]
    2dc8:	adrp	x10, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2dcc:	add	x10, x10, #0x0
    2dd0:	mov	w8, #0x104                 	// #260
    2dd4:	stur	x10, [x29, #-48]
    2dd8:	mov	w10, #0x4                   	// #4
    2ddc:	sturh	w8, [x29, #-64]
    2de0:	ldr	w8, [sp, #136]
    2de4:	sturb	w10, [x29, #-40]
    2de8:	ldr	x10, [sp, #24]
    2dec:	ldrh	w9, [sp, #140]
    2df0:	str	w8, [x10]
    2df4:	mov	w8, #0x3                   	// #3
    2df8:	strh	w9, [x10, #4]
    2dfc:	sturb	w8, [x29, #-39]
    2e00:	b	2e80 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x40c>
    2e04:	ldurb	w9, [x29, #-87]
    2e08:	ldur	x10, [x29, #-104]
    2e0c:	cmp	w9, #0x1
    2e10:	mov	w9, #0x2                   	// #2
    2e14:	csel	w9, w8, w9, eq  // eq = none
    2e18:	sub	x8, x29, #0x68
    2e1c:	csel	x8, x10, x8, eq  // eq = none
    2e20:	add	x10, sp, #0x68
    2e24:	sturb	w9, [x29, #-64]
    2e28:	cmp	w9, #0x2
    2e2c:	mov	w9, #0x4                   	// #4
    2e30:	stp	x8, x10, [x29, #-80]
    2e34:	sturb	w9, [x29, #-63]
    2e38:	b.ne	2e50 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x3dc>  // b.any
    2e3c:	ldrb	w9, [x8, #16]
    2e40:	cbz	w9, 336c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x8f8>
    2e44:	ldrb	w8, [x8, #17]
    2e48:	cmp	w8, #0x1
    2e4c:	b.eq	336c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x8f8>  // b.none
    2e50:	ldurb	w8, [x29, #-64]
    2e54:	sub	x9, x29, #0x50
    2e58:	stur	x9, [x29, #-56]
    2e5c:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2e60:	add	x9, x9, #0x0
    2e64:	stur	x9, [x29, #-48]
    2e68:	mov	w9, #0x302                 	// #770
    2e6c:	sturh	w9, [x29, #-40]
    2e70:	cbz	w8, 336c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x8f8>
    2e74:	ldurb	w8, [x29, #-63]
    2e78:	cmp	w8, #0x1
    2e7c:	b.eq	336c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x8f8>  // b.none
    2e80:	ldr	x0, [x24, #16]
    2e84:	ldr	x8, [x0]
    2e88:	ldr	x9, [x8, #40]
    2e8c:	add	x8, sp, #0x40
    2e90:	blr	x9
    2e94:	ldurb	w8, [x29, #-40]
    2e98:	cmp	w8, #0x1
    2e9c:	b.eq	2eb4 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x440>  // b.none
    2ea0:	cbnz	w8, 2edc <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x468>
    2ea4:	mov	w8, #0x100                 	// #256
    2ea8:	stp	xzr, xzr, [x29, #-32]
    2eac:	sturh	w8, [x29, #-16]
    2eb0:	b	2f28 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x4b4>
    2eb4:	add	x10, sp, #0x40
    2eb8:	stp	x10, xzr, [x29, #-32]
    2ebc:	mov	w10, #0x104                 	// #260
    2ec0:	ldr	w8, [sp, #96]
    2ec4:	ldrh	w9, [sp, #100]
    2ec8:	sturh	w10, [x29, #-16]
    2ecc:	ldr	x10, [sp, #16]
    2ed0:	strh	w9, [x10, #4]
    2ed4:	str	w8, [x10]
    2ed8:	b	2f28 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x4b4>
    2edc:	ldurb	w9, [x29, #-39]
    2ee0:	ldur	x10, [x29, #-56]
    2ee4:	cmp	w9, #0x1
    2ee8:	mov	w9, #0x2                   	// #2
    2eec:	csel	w9, w8, w9, eq  // eq = none
    2ef0:	sub	x8, x29, #0x38
    2ef4:	csel	x8, x10, x8, eq  // eq = none
    2ef8:	add	x10, sp, #0x40
    2efc:	sturb	w9, [x29, #-16]
    2f00:	cmp	w9, #0x2
    2f04:	mov	w9, #0x4                   	// #4
    2f08:	stp	x8, x10, [x29, #-32]
    2f0c:	sturb	w9, [x29, #-15]
    2f10:	b.ne	2f28 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x4b4>  // b.any
    2f14:	ldrb	w9, [x8, #16]
    2f18:	cbz	w9, 336c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x8f8>
    2f1c:	ldrb	w8, [x8, #17]
    2f20:	cmp	w8, #0x1
    2f24:	b.eq	336c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x8f8>  // b.none
    2f28:	sub	x2, x29, #0x20
    2f2c:	mov	x0, x22
    2f30:	mov	x1, x23
    2f34:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    2f38:	ldr	x0, [sp, #64]
    2f3c:	ldr	x8, [sp, #48]
    2f40:	cmp	x0, x8
    2f44:	b.eq	2f4c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x4d8>  // b.none
    2f48:	bl	0 <_ZdlPv>
    2f4c:	ldr	x0, [sp, #104]
    2f50:	ldr	x8, [sp, #40]
    2f54:	cmp	x0, x8
    2f58:	b.eq	2f60 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x4ec>  // b.none
    2f5c:	bl	0 <_ZdlPv>
    2f60:	ldr	x0, [sp, #144]
    2f64:	cmp	x0, x27
    2f68:	b.eq	2b70 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xfc>  // b.none
    2f6c:	bl	0 <_ZdlPv>
    2f70:	b	2b70 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xfc>
    2f74:	ldr	x21, [x19]
    2f78:	ldr	x24, [sp, #8]
    2f7c:	ldr	x8, [x21]
    2f80:	cbz	x8, 33ac <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x938>
    2f84:	ldrb	w8, [x8, #8]
    2f88:	cmp	w8, #0x12
    2f8c:	b.ne	3050 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x5dc>  // b.any
    2f90:	ldr	w8, [x21, #64]
    2f94:	cbnz	w8, 33cc <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x958>
    2f98:	ldr	w23, [x24, #304]
    2f9c:	cbz	w23, 326c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x7f8>
    2fa0:	ldr	x20, [x24, #296]
    2fa4:	mov	x0, x21
    2fa8:	ldr	x22, [x20]
    2fac:	bl	0 <_ZN4llvm6Record10getDefInitEv>
    2fb0:	mov	x21, x0
    2fb4:	ldr	x0, [x0, #16]
    2fb8:	ldr	x1, [x22, #8]
    2fbc:	ldr	x8, [x0]
    2fc0:	ldr	x8, [x8, #32]
    2fc4:	blr	x8
    2fc8:	tbz	w0, #0, 31b4 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x740>
    2fcc:	lsl	x8, x23, #3
    2fd0:	add	x20, x20, #0x8
    2fd4:	sub	x23, x8, #0x8
    2fd8:	ldp	w8, w9, [x22, #24]
    2fdc:	cmp	w8, w9
    2fe0:	b.cs	3034 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x5c0>  // b.hs, b.nlast
    2fe4:	ldr	x9, [x22, #16]
    2fe8:	str	x21, [x9, w8, uxtw #3]
    2fec:	ldp	w8, w9, [x22, #24]
    2ff0:	cmp	w8, w9
    2ff4:	b.cs	338c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x918>  // b.hs, b.nlast
    2ff8:	add	w8, w8, #0x1
    2ffc:	str	w8, [x22, #24]
    3000:	cbz	x23, 3268 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x7f4>
    3004:	ldr	x0, [x19]
    3008:	ldr	x22, [x20], #8
    300c:	bl	0 <_ZN4llvm6Record10getDefInitEv>
    3010:	mov	x21, x0
    3014:	ldr	x0, [x0, #16]
    3018:	ldr	x1, [x22, #8]
    301c:	ldr	x8, [x0]
    3020:	ldr	x8, [x8, #32]
    3024:	blr	x8
    3028:	sub	x23, x23, #0x8
    302c:	tbnz	w0, #0, 2fd8 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x564>
    3030:	b	31b4 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x740>
    3034:	add	x0, x22, #0x10
    3038:	add	x1, x0, #0x10
    303c:	mov	w3, #0x8                   	// #8
    3040:	mov	x2, xzr
    3044:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3048:	ldr	w8, [x22, #24]
    304c:	b	2fe4 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x570>
    3050:	ldp	x0, x20, [x21]
    3054:	ldr	w19, [x21, #16]
    3058:	add	x21, sp, #0x90
    305c:	ldr	x8, [x0]
    3060:	ldr	x9, [x8, #40]
    3064:	add	x8, sp, #0x90
    3068:	blr	x9
    306c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3070:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3074:	add	x8, x8, #0x0
    3078:	mov	w9, #0x403                 	// #1027
    307c:	add	x10, sp, #0x40
    3080:	add	x11, x11, #0x0
    3084:	mov	w12, #0x302                 	// #770
    3088:	stp	x8, x21, [sp, #64]
    308c:	strh	w9, [sp, #80]
    3090:	stp	x10, x11, [sp, #104]
    3094:	strh	w12, [sp, #120]
    3098:	cbnz	wzr, 336c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x8f8>
    309c:	ldrb	w8, [sp, #81]
    30a0:	cmp	w8, #0x1
    30a4:	b.eq	336c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x8f8>  // b.none
    30a8:	add	x2, sp, #0x68
    30ac:	mov	x0, x20
    30b0:	mov	x1, x19
    30b4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    30b8:	ldr	x0, [sp, #144]
    30bc:	add	x8, sp, #0x90
    30c0:	add	x8, x8, #0x10
    30c4:	cmp	x0, x8
    30c8:	b.eq	30d0 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x65c>  // b.none
    30cc:	bl	0 <_ZdlPv>
    30d0:	mov	w19, #0x1                   	// #1
    30d4:	b	32e8 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x874>
    30d8:	ldp	x0, x20, [x22]
    30dc:	ldr	w19, [x22, #16]
    30e0:	ldr	x8, [x0]
    30e4:	ldr	x9, [x8, #48]
    30e8:	add	x8, sp, #0x68
    30ec:	blr	x9
    30f0:	ldr	x8, [sp, #112]
    30f4:	add	x23, sp, #0x90
    30f8:	add	x22, x23, #0x10
    30fc:	add	x0, sp, #0x90
    3100:	add	x1, x8, #0x14
    3104:	stp	x22, xzr, [sp, #144]
    3108:	strb	wzr, [sp, #160]
    310c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
    3110:	ldr	x8, [sp, #152]
    3114:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    3118:	sub	x8, x9, x8
    311c:	cmp	x8, #0x13
    3120:	b.ls	33ec <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x978>  // b.plast
    3124:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3128:	add	x1, x1, #0x0
    312c:	add	x0, sp, #0x90
    3130:	mov	w2, #0x14                  	// #20
    3134:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    3138:	ldp	x1, x2, [sp, #104]
    313c:	add	x0, sp, #0x90
    3140:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    3144:	mov	w8, #0x104                 	// #260
    3148:	add	x2, sp, #0x40
    314c:	mov	x0, x20
    3150:	mov	x1, x19
    3154:	strh	w8, [sp, #80]
    3158:	stp	x23, xzr, [sp, #64]
    315c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    3160:	ldr	x0, [sp, #144]
    3164:	cmp	x0, x22
    3168:	b.eq	3170 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x6fc>  // b.none
    316c:	bl	0 <_ZdlPv>
    3170:	ldr	x0, [sp, #104]
    3174:	add	x8, sp, #0x68
    3178:	add	x8, x8, #0x10
    317c:	cmp	x0, x8
    3180:	b.eq	3188 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x714>  // b.none
    3184:	bl	0 <_ZdlPv>
    3188:	ldr	x0, [x21, #8]
    318c:	ldr	w1, [x21, #16]
    3190:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3194:	add	x8, x8, #0x0
    3198:	stp	x8, xzr, [sp, #144]
    319c:	mov	w8, #0x103                 	// #259
    31a0:	add	x2, sp, #0x90
    31a4:	strh	w8, [sp, #160]
    31a8:	bl	0 <_ZN4llvm9PrintNoteENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    31ac:	mov	w19, #0x1                   	// #1
    31b0:	b	32e8 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x874>
    31b4:	ldr	x0, [x21, #16]
    31b8:	ldr	x8, [x19]
    31bc:	add	x21, sp, #0x90
    31c0:	ldr	x9, [x0]
    31c4:	ldr	x20, [x8, #8]
    31c8:	ldr	w19, [x8, #16]
    31cc:	add	x8, sp, #0x90
    31d0:	ldr	x9, [x9, #16]
    31d4:	blr	x9
    31d8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    31dc:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    31e0:	add	x8, x8, #0x0
    31e4:	mov	w9, #0x403                 	// #1027
    31e8:	add	x10, sp, #0x40
    31ec:	add	x11, x11, #0x0
    31f0:	mov	w12, #0x302                 	// #770
    31f4:	stp	x8, x21, [sp, #64]
    31f8:	strh	w9, [sp, #80]
    31fc:	stp	x10, x11, [sp, #104]
    3200:	strh	w12, [sp, #120]
    3204:	cbnz	wzr, 336c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x8f8>
    3208:	ldrb	w8, [sp, #81]
    320c:	cmp	w8, #0x1
    3210:	b.eq	336c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x8f8>  // b.none
    3214:	add	x2, sp, #0x68
    3218:	mov	x0, x20
    321c:	mov	x1, x19
    3220:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    3224:	ldr	x0, [sp, #144]
    3228:	add	x8, sp, #0x90
    322c:	add	x8, x8, #0x10
    3230:	cmp	x0, x8
    3234:	b.eq	323c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x7c8>  // b.none
    3238:	bl	0 <_ZdlPv>
    323c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3240:	add	x8, x8, #0x0
    3244:	mov	w9, #0x103                 	// #259
    3248:	add	x2, sp, #0x90
    324c:	mov	w1, #0x1                   	// #1
    3250:	mov	x0, x22
    3254:	stp	x8, xzr, [sp, #144]
    3258:	strh	w9, [sp, #160]
    325c:	mov	w19, #0x1                   	// #1
    3260:	bl	0 <_ZN4llvm9PrintNoteENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    3264:	b	32e8 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x874>
    3268:	ldr	x21, [x19]
    326c:	ldr	x0, [x24, #344]
    3270:	add	x1, sp, #0x38
    3274:	str	xzr, [x19]
    3278:	str	x21, [sp, #56]
    327c:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3280:	ldr	x19, [sp, #56]
    3284:	cbz	x19, 32e0 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x86c>
    3288:	ldr	x0, [x19, #88]
    328c:	add	x8, x19, #0x68
    3290:	cmp	x0, x8
    3294:	b.eq	329c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x828>  // b.none
    3298:	bl	0 <free>
    329c:	ldr	x0, [x19, #72]
    32a0:	add	x8, x19, #0x58
    32a4:	cmp	x0, x8
    32a8:	b.eq	32b0 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x83c>  // b.none
    32ac:	bl	0 <free>
    32b0:	ldr	x0, [x19, #56]
    32b4:	add	x8, x19, #0x48
    32b8:	cmp	x0, x8
    32bc:	b.eq	32c4 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x850>  // b.none
    32c0:	bl	0 <free>
    32c4:	ldr	x0, [x19, #8]
    32c8:	add	x8, x19, #0x18
    32cc:	cmp	x0, x8
    32d0:	b.eq	32d8 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x864>  // b.none
    32d4:	bl	0 <free>
    32d8:	mov	x0, x19
    32dc:	bl	0 <_ZdlPv>
    32e0:	mov	w19, wzr
    32e4:	str	xzr, [sp, #56]
    32e8:	mov	w0, w19
    32ec:	ldp	x20, x19, [sp, #416]
    32f0:	ldp	x22, x21, [sp, #400]
    32f4:	ldp	x24, x23, [sp, #384]
    32f8:	ldp	x26, x25, [sp, #368]
    32fc:	ldp	x28, x27, [sp, #352]
    3300:	ldp	x29, x30, [sp, #336]
    3304:	add	sp, sp, #0x1b0
    3308:	ret
    330c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3310:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3314:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3318:	add	x0, x0, #0x0
    331c:	add	x1, x1, #0x0
    3320:	add	x3, x3, #0x0
    3324:	mov	w2, #0x69                  	// #105
    3328:	bl	0 <__assert_fail>
    332c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3330:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3334:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3338:	add	x0, x0, #0x0
    333c:	add	x1, x1, #0x0
    3340:	add	x3, x3, #0x0
    3344:	mov	w2, #0x22e                 	// #558
    3348:	bl	0 <__assert_fail>
    334c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3350:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3354:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3358:	add	x0, x0, #0x0
    335c:	add	x1, x1, #0x0
    3360:	add	x3, x3, #0x0
    3364:	mov	w2, #0x69                  	// #105
    3368:	bl	0 <__assert_fail>
    336c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3370:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3374:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3378:	add	x0, x0, #0x0
    337c:	add	x1, x1, #0x0
    3380:	add	x3, x3, #0x0
    3384:	mov	w2, #0xb8                  	// #184
    3388:	bl	0 <__assert_fail>
    338c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3390:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3394:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3398:	add	x0, x0, #0x0
    339c:	add	x1, x1, #0x0
    33a0:	add	x3, x3, #0x0
    33a4:	mov	w2, #0x43                  	// #67
    33a8:	bl	0 <__assert_fail>
    33ac:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    33b0:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    33b4:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    33b8:	add	x0, x0, #0x0
    33bc:	add	x1, x1, #0x0
    33c0:	add	x3, x3, #0x0
    33c4:	mov	w2, #0x69                  	// #105
    33c8:	bl	0 <__assert_fail>
    33cc:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    33d0:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    33d4:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    33d8:	add	x0, x0, #0x0
    33dc:	add	x1, x1, #0x0
    33e0:	add	x3, x3, #0x0
    33e4:	mov	w2, #0x1cd                 	// #461
    33e8:	bl	0 <__assert_fail>
    33ec:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    33f0:	add	x0, x0, #0x0
    33f4:	bl	0 <_ZSt20__throw_length_errorPKc>

00000000000033f8 <_ZN4llvm8TGParser15ParseObjectNameEPNS_10MultiClassE>:
    33f8:	sub	sp, sp, #0x50
    33fc:	stp	x29, x30, [sp, #48]
    3400:	stp	x20, x19, [sp, #64]
    3404:	add	x29, sp, #0x30
    3408:	ldr	w8, [x0, #40]
    340c:	mov	x20, x1
    3410:	cmp	w8, #0xd
    3414:	b.hi	343c <_ZN4llvm8TGParser15ParseObjectNameEPNS_10MultiClassE+0x44>  // b.pmore
    3418:	mov	w9, #0x1                   	// #1
    341c:	lsl	w8, w9, w8
    3420:	mov	w9, #0x3040                	// #12352
    3424:	tst	w8, w9
    3428:	b.eq	343c <_ZN4llvm8TGParser15ParseObjectNameEPNS_10MultiClassE+0x44>  // b.none
    342c:	ldp	x20, x19, [sp, #64]
    3430:	ldp	x29, x30, [sp, #48]
    3434:	add	sp, sp, #0x50
    3438:	b	0 <_ZN4llvm9UnsetInit3getEv>
    343c:	adrp	x2, 0 <_ZN4llvm11StringRecTy6SharedE>
    3440:	ldr	x2, [x2]
    3444:	mov	w3, #0x1                   	// #1
    3448:	mov	x1, x20
    344c:	bl	34f4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    3450:	mov	x19, x0
    3454:	cbz	x20, 34e0 <_ZN4llvm8TGParser15ParseObjectNameEPNS_10MultiClassE+0xe8>
    3458:	cbz	x19, 34e0 <_ZN4llvm8TGParser15ParseObjectNameEPNS_10MultiClassE+0xe8>
    345c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3460:	add	x0, x0, #0x0
    3464:	mov	w1, #0x4                   	// #4
    3468:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    346c:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3470:	mov	x2, x0
    3474:	add	x3, x3, #0x0
    3478:	mov	w4, #0x2                   	// #2
    347c:	mov	x0, x20
    3480:	mov	x1, x20
    3484:	bl	547c <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE>
    3488:	strb	wzr, [sp, #24]
    348c:	adrp	x8, 0 <_ZTVN4llvm20HasReferenceResolverE>
    3490:	ldr	x8, [x8]
    3494:	str	x0, [sp, #32]
    3498:	strb	wzr, [sp, #40]
    349c:	mov	x20, x0
    34a0:	add	x8, x8, #0x10
    34a4:	stp	x8, xzr, [sp, #8]
    34a8:	ldr	x8, [x19]
    34ac:	add	x1, sp, #0x8
    34b0:	mov	x0, x19
    34b4:	ldr	x8, [x8, #96]
    34b8:	blr	x8
    34bc:	ldrb	w8, [sp, #40]
    34c0:	cbnz	w8, 34e0 <_ZN4llvm8TGParser15ParseObjectNameEPNS_10MultiClassE+0xe8>
    34c4:	adrp	x1, 0 <_ZN4llvm11StringRecTy6SharedE>
    34c8:	ldr	x1, [x1]
    34cc:	mov	x0, x20
    34d0:	bl	0 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>
    34d4:	mov	x1, x19
    34d8:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
    34dc:	mov	x19, x0
    34e0:	mov	x0, x19
    34e4:	ldp	x20, x19, [sp, #64]
    34e8:	ldp	x29, x30, [sp, #48]
    34ec:	add	sp, sp, #0x50
    34f0:	ret

00000000000034f4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>:
    34f4:	sub	sp, sp, #0x160
    34f8:	str	d8, [sp, #240]
    34fc:	stp	x29, x30, [sp, #256]
    3500:	stp	x28, x27, [sp, #272]
    3504:	stp	x26, x25, [sp, #288]
    3508:	stp	x24, x23, [sp, #304]
    350c:	stp	x22, x21, [sp, #320]
    3510:	stp	x20, x19, [sp, #336]
    3514:	add	x29, sp, #0xf0
    3518:	mov	w20, w3
    351c:	mov	x21, x2
    3520:	mov	x22, x1
    3524:	mov	x19, x0
    3528:	bl	8380 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    352c:	mov	x23, x0
    3530:	cbz	x0, 3d7c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x888>
    3534:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3538:	adrp	x24, 0 <_ZN4llvm11StringRecTy6SharedE>
    353c:	ldr	d8, [x9]
    3540:	ldr	x24, [x24]
    3544:	sub	x8, x29, #0x58
    3548:	adrp	x25, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    354c:	add	x25, x25, #0x0
    3550:	add	x28, x8, #0x10
    3554:	ldr	w8, [x19, #40]
    3558:	sub	w8, w8, #0x4
    355c:	cmp	w8, #0xe
    3560:	b.hi	3d7c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x888>  // b.pmore
    3564:	adr	x9, 3574 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x80>
    3568:	ldrh	w10, [x25, x8, lsl #1]
    356c:	add	x9, x9, x10, lsl #2
    3570:	br	x9
    3574:	mov	x0, x19
    3578:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    357c:	ldp	x8, x9, [x19, #8]
    3580:	mov	x26, x0
    3584:	mov	x0, x19
    3588:	cmp	x8, x9
    358c:	cset	w1, eq  // eq = none
    3590:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    3594:	str	w0, [x19, #40]
    3598:	stur	x28, [x29, #-88]
    359c:	stur	d8, [x29, #-80]
    35a0:	sub	x1, x29, #0x58
    35a4:	mov	x0, x19
    35a8:	mov	x2, xzr
    35ac:	bl	49bc <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE>
    35b0:	tbnz	w0, #0, 3754 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x260>
    35b4:	ldr	w8, [x19, #40]
    35b8:	cmp	w8, #0xe
    35bc:	b.ne	37d4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x2e0>  // b.any
    35c0:	ldp	x8, x9, [x19, #8]
    35c4:	mov	x0, x19
    35c8:	cmp	x8, x9
    35cc:	cset	w1, eq  // eq = none
    35d0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    35d4:	str	w0, [x19, #40]
    35d8:	b	35a0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xac>
    35dc:	ldp	x8, x9, [x19, #8]
    35e0:	mov	x0, x19
    35e4:	cmp	x8, x9
    35e8:	cset	w1, eq  // eq = none
    35ec:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    35f0:	cmp	w0, #0x48
    35f4:	str	w0, [x19, #40]
    35f8:	b.ne	3a54 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x560>  // b.any
    35fc:	ldp	x0, x1, [x19, #48]
    3600:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    3604:	ldr	x8, [x23]
    3608:	mov	x26, x0
    360c:	mov	x0, x23
    3610:	mov	x1, x26
    3614:	ldr	x8, [x8, #88]
    3618:	blr	x8
    361c:	cbz	x0, 3a88 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x594>
    3620:	mov	x0, x23
    3624:	mov	x1, x26
    3628:	bl	0 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE>
    362c:	mov	x1, x22
    3630:	bl	0 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE>
    3634:	ldp	x8, x9, [x19, #8]
    3638:	mov	x23, x0
    363c:	mov	x0, x19
    3640:	cmp	x8, x9
    3644:	cset	w1, eq  // eq = none
    3648:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    364c:	str	w0, [x19, #40]
    3650:	b	3554 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x60>
    3654:	cmp	w20, #0x1
    3658:	b.eq	3d7c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x888>  // b.none
    365c:	mov	x0, x19
    3660:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    3664:	ldp	x8, x9, [x19, #8]
    3668:	mov	x26, x0
    366c:	mov	x0, x19
    3670:	cmp	x8, x9
    3674:	cset	w1, eq  // eq = none
    3678:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    367c:	str	w0, [x19, #40]
    3680:	stur	x28, [x29, #-88]
    3684:	stur	d8, [x29, #-80]
    3688:	sub	x1, x29, #0x58
    368c:	mov	x0, x19
    3690:	mov	x2, xzr
    3694:	bl	49bc <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE>
    3698:	tbnz	w0, #0, 3774 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x280>
    369c:	ldr	w8, [x19, #40]
    36a0:	cmp	w8, #0xe
    36a4:	b.ne	3824 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x330>  // b.any
    36a8:	ldp	x8, x9, [x19, #8]
    36ac:	mov	x0, x19
    36b0:	cmp	x8, x9
    36b4:	cset	w1, eq  // eq = none
    36b8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    36bc:	str	w0, [x19, #40]
    36c0:	b	3688 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x194>
    36c4:	mov	x0, x19
    36c8:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    36cc:	cbz	x23, 3db0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x8bc>
    36d0:	ldrb	w8, [x23, #8]
    36d4:	mov	x26, x0
    36d8:	sub	w8, w8, #0x1
    36dc:	cmp	w8, #0x17
    36e0:	b.cs	3a38 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x544>  // b.hs, b.nlast
    36e4:	ldr	x8, [x23, #16]
    36e8:	cbz	x8, 3dd0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x8dc>
    36ec:	ldr	w9, [x8, #8]
    36f0:	cmp	w9, #0x5
    36f4:	b.ne	3794 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x2a0>  // b.any
    36f8:	ldp	x8, x9, [x19, #8]
    36fc:	mov	x0, x19
    3700:	cmp	x8, x9
    3704:	cset	w1, eq  // eq = none
    3708:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    370c:	cmp	w0, #0xd
    3710:	str	w0, [x19, #40]
    3714:	b.hi	372c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x238>  // b.pmore
    3718:	mov	w8, #0x1                   	// #1
    371c:	lsl	w8, w8, w0
    3720:	mov	w9, #0x3040                	// #12352
    3724:	tst	w8, w9
    3728:	b.ne	3554 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x60>  // b.any
    372c:	mov	w3, #0x1                   	// #1
    3730:	mov	x0, x19
    3734:	mov	x1, x22
    3738:	mov	x2, x21
    373c:	bl	34f4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    3740:	mov	x1, x0
    3744:	mov	x0, x23
    3748:	bl	0 <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE>
    374c:	mov	x23, x0
    3750:	b	3554 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x60>
    3754:	mov	w26, wzr
    3758:	stur	wzr, [x29, #-80]
    375c:	ldur	x0, [x29, #-88]
    3760:	cmp	x0, x28
    3764:	b.eq	376c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x278>  // b.none
    3768:	bl	0 <free>
    376c:	tbnz	w26, #0, 3554 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x60>
    3770:	b	3d78 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x884>
    3774:	mov	w26, wzr
    3778:	stur	wzr, [x29, #-80]
    377c:	ldur	x0, [x29, #-88]
    3780:	cmp	x0, x28
    3784:	b.eq	378c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x298>  // b.none
    3788:	bl	0 <free>
    378c:	tbnz	w26, #0, 3554 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x60>
    3790:	b	3d78 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x884>
    3794:	cmp	x8, x24
    3798:	b.eq	38ac <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x3b8>  // b.none
    379c:	mov	w0, wzr
    37a0:	mov	x1, x23
    37a4:	mov	x2, x24
    37a8:	bl	0 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE>
    37ac:	mov	x1, x22
    37b0:	mov	w2, wzr
    37b4:	bl	0 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb>
    37b8:	cbz	x0, 3db0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x8bc>
    37bc:	ldrb	w8, [x0, #8]
    37c0:	mov	x27, x0
    37c4:	sub	w8, w8, #0x1
    37c8:	cmp	w8, #0x17
    37cc:	b.cc	38b0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x3bc>  // b.lo, b.ul, b.last
    37d0:	b	3b3c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x648>
    37d4:	ldur	w2, [x29, #-80]
    37d8:	cbz	w2, 3978 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x484>
    37dc:	ldr	x8, [x23]
    37e0:	ldur	x1, [x29, #-88]
    37e4:	mov	x0, x23
    37e8:	ldr	x8, [x8, #80]
    37ec:	blr	x8
    37f0:	mov	x23, x0
    37f4:	cbz	x0, 3988 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x494>
    37f8:	ldr	w8, [x19, #40]
    37fc:	cmp	w8, #0x5
    3800:	b.ne	39c0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x4cc>  // b.any
    3804:	ldp	x8, x9, [x19, #8]
    3808:	mov	x0, x19
    380c:	cmp	x8, x9
    3810:	cset	w1, eq  // eq = none
    3814:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    3818:	mov	w26, #0x1                   	// #1
    381c:	str	w0, [x19, #40]
    3820:	b	375c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x268>
    3824:	ldur	w9, [x29, #-80]
    3828:	cbz	w9, 3980 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x48c>
    382c:	ldur	x1, [x29, #-88]
    3830:	add	x8, x1, x9, lsl #2
    3834:	sub	x8, x8, #0x4
    3838:	cmp	x8, x1
    383c:	b.ls	3864 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x370>  // b.plast
    3840:	add	x9, x1, #0x4
    3844:	ldr	w10, [x8]
    3848:	ldur	w11, [x9, #-4]
    384c:	stur	w10, [x9, #-4]
    3850:	str	w11, [x8], #-4
    3854:	cmp	x9, x8
    3858:	add	x9, x9, #0x4
    385c:	b.cc	3844 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x350>  // b.lo, b.ul, b.last
    3860:	ldur	w9, [x29, #-80]
    3864:	ldr	x8, [x23]
    3868:	mov	w2, w9
    386c:	mov	x0, x23
    3870:	ldr	x8, [x8, #72]
    3874:	blr	x8
    3878:	mov	x23, x0
    387c:	cbz	x0, 39a4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x4b0>
    3880:	ldr	w8, [x19, #40]
    3884:	cmp	w8, #0x7
    3888:	b.ne	39f8 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x504>  // b.any
    388c:	ldp	x8, x9, [x19, #8]
    3890:	mov	x0, x19
    3894:	cmp	x8, x9
    3898:	cset	w1, eq  // eq = none
    389c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    38a0:	mov	w26, #0x1                   	// #1
    38a4:	str	w0, [x19, #40]
    38a8:	b	377c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x288>
    38ac:	mov	x27, x23
    38b0:	ldp	x8, x9, [x19, #8]
    38b4:	mov	x0, x19
    38b8:	cmp	x8, x9
    38bc:	cset	w1, eq  // eq = none
    38c0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    38c4:	cmp	w0, #0xd
    38c8:	str	w0, [x19, #40]
    38cc:	b.hi	3908 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x414>  // b.pmore
    38d0:	mov	w8, #0x1                   	// #1
    38d4:	lsl	w8, w8, w0
    38d8:	mov	w9, #0x3040                	// #12352
    38dc:	tst	w8, w9
    38e0:	b.eq	3908 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x414>  // b.none
    38e4:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    38e8:	add	x0, x0, #0x0
    38ec:	mov	x1, xzr
    38f0:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    38f4:	mov	x1, x0
    38f8:	mov	x0, x27
    38fc:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
    3900:	mov	x23, x0
    3904:	b	3554 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x60>
    3908:	mov	w3, #0x1                   	// #1
    390c:	mov	x0, x19
    3910:	mov	x1, x22
    3914:	mov	x2, xzr
    3918:	bl	34f4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    391c:	cbz	x0, 3db0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x8bc>
    3920:	ldrb	w8, [x0, #8]
    3924:	mov	x23, x0
    3928:	sub	w8, w8, #0x1
    392c:	cmp	w8, #0x17
    3930:	b.cs	3da4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x8b0>  // b.hs, b.nlast
    3934:	ldr	x8, [x23, #16]
    3938:	cmp	x8, x24
    393c:	b.eq	3a30 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x53c>  // b.none
    3940:	mov	w0, wzr
    3944:	mov	x1, x23
    3948:	mov	x2, x24
    394c:	bl	0 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE>
    3950:	mov	x1, x22
    3954:	mov	w2, wzr
    3958:	bl	0 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb>
    395c:	cbz	x0, 3db0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x8bc>
    3960:	ldrb	w8, [x0, #8]
    3964:	mov	x1, x0
    3968:	sub	w8, w8, #0x1
    396c:	cmp	w8, #0x17
    3970:	b.cc	38f8 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x404>  // b.lo, b.ul, b.last
    3974:	b	3b3c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x648>
    3978:	mov	w26, wzr
    397c:	b	375c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x268>
    3980:	mov	w26, wzr
    3984:	b	377c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x288>
    3988:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    398c:	add	x8, x8, #0x0
    3990:	stp	x8, xzr, [sp, #96]
    3994:	mov	w8, #0x103                 	// #259
    3998:	strh	w8, [sp, #112]
    399c:	str	x26, [sp, #64]
    39a0:	b	39e0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x4ec>
    39a4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    39a8:	add	x8, x8, #0x0
    39ac:	stp	x8, xzr, [sp, #96]
    39b0:	mov	w8, #0x103                 	// #259
    39b4:	strh	w8, [sp, #112]
    39b8:	str	x26, [sp, #64]
    39bc:	b	3a18 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x524>
    39c0:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    39c4:	add	x8, x8, #0x0
    39c8:	stp	x8, xzr, [sp, #96]
    39cc:	mov	w8, #0x103                 	// #259
    39d0:	mov	x0, x19
    39d4:	strh	w8, [sp, #112]
    39d8:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    39dc:	str	x0, [sp, #64]
    39e0:	add	x0, sp, #0x40
    39e4:	add	x2, sp, #0x60
    39e8:	mov	w1, #0x1                   	// #1
    39ec:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    39f0:	mov	w26, wzr
    39f4:	b	375c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x268>
    39f8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    39fc:	add	x8, x8, #0x0
    3a00:	stp	x8, xzr, [sp, #96]
    3a04:	mov	w8, #0x103                 	// #259
    3a08:	mov	x0, x19
    3a0c:	strh	w8, [sp, #112]
    3a10:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    3a14:	str	x0, [sp, #64]
    3a18:	add	x0, sp, #0x40
    3a1c:	add	x2, sp, #0x60
    3a20:	mov	w1, #0x1                   	// #1
    3a24:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    3a28:	mov	w26, wzr
    3a2c:	b	377c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x288>
    3a30:	mov	x1, x23
    3a34:	b	38f8 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x404>
    3a38:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3a3c:	add	x8, x8, #0x0
    3a40:	mov	w9, #0x103                 	// #259
    3a44:	stp	x8, xzr, [x29, #-88]
    3a48:	sturh	w9, [x29, #-72]
    3a4c:	str	x26, [sp, #96]
    3a50:	b	3a74 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x580>
    3a54:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3a58:	add	x8, x8, #0x0
    3a5c:	mov	w9, #0x103                 	// #259
    3a60:	mov	x0, x19
    3a64:	stp	x8, xzr, [x29, #-88]
    3a68:	sturh	w9, [x29, #-72]
    3a6c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    3a70:	str	x0, [sp, #96]
    3a74:	add	x0, sp, #0x60
    3a78:	sub	x2, x29, #0x58
    3a7c:	mov	w1, #0x1                   	// #1
    3a80:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    3a84:	b	3d78 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x884>
    3a88:	ldr	w8, [x19, #40]
    3a8c:	and	w8, w8, #0xfffffffc
    3a90:	cmp	w8, #0x48
    3a94:	b.ne	3dfc <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x908>  // b.any
    3a98:	add	x8, sp, #0x20
    3a9c:	add	x20, x8, #0x10
    3aa0:	stp	x20, xzr, [sp, #32]
    3aa4:	strb	wzr, [sp, #48]
    3aa8:	ldr	x8, [x19, #56]
    3aac:	add	x0, sp, #0x20
    3ab0:	add	x1, x8, #0x15
    3ab4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
    3ab8:	ldr	x8, [sp, #40]
    3abc:	mov	x21, #0x3fffffffffffffff    	// #4611686018427387903
    3ac0:	sub	x8, x21, x8
    3ac4:	cmp	x8, #0x14
    3ac8:	b.ls	3df0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x8fc>  // b.plast
    3acc:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3ad0:	add	x1, x1, #0x0
    3ad4:	add	x0, sp, #0x20
    3ad8:	mov	w2, #0x15                  	// #21
    3adc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    3ae0:	ldp	x1, x2, [x19, #48]
    3ae4:	add	x0, sp, #0x20
    3ae8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    3aec:	ldr	x8, [sp, #40]
    3af0:	sub	x8, x21, x8
    3af4:	cmp	x8, #0xb
    3af8:	b.ls	3df0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x8fc>  // b.plast
    3afc:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3b00:	add	x1, x1, #0x0
    3b04:	add	x0, sp, #0x20
    3b08:	mov	w2, #0xc                   	// #12
    3b0c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    3b10:	add	x8, sp, #0x40
    3b14:	add	x21, x8, #0x10
    3b18:	str	x21, [sp, #64]
    3b1c:	mov	x8, x0
    3b20:	ldr	x9, [x8], #16
    3b24:	cmp	x9, x8
    3b28:	b.eq	3bbc <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x6c8>  // b.none
    3b2c:	str	x9, [sp, #64]
    3b30:	ldr	x9, [x0, #16]
    3b34:	str	x9, [sp, #80]
    3b38:	b	3bc4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x6d0>
    3b3c:	ldr	x8, [x23]
    3b40:	mov	x0, x23
    3b44:	sub	x19, x29, #0x58
    3b48:	ldr	x9, [x8, #40]
    3b4c:	sub	x8, x29, #0x58
    3b50:	blr	x9
    3b54:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3b58:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3b5c:	add	x8, x8, #0x0
    3b60:	mov	w9, #0x403                 	// #1027
    3b64:	add	x10, sp, #0x40
    3b68:	add	x11, x11, #0x0
    3b6c:	mov	w12, #0x302                 	// #770
    3b70:	stp	x8, x19, [sp, #64]
    3b74:	strh	w9, [sp, #80]
    3b78:	stp	x10, x11, [sp, #96]
    3b7c:	strh	w12, [sp, #112]
    3b80:	cbnz	wzr, 3e1c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x928>
    3b84:	ldrb	w8, [sp, #81]
    3b88:	cmp	w8, #0x1
    3b8c:	b.eq	3e1c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x928>  // b.none
    3b90:	add	x0, sp, #0x20
    3b94:	add	x2, sp, #0x60
    3b98:	mov	w1, #0x1                   	// #1
    3b9c:	str	x26, [sp, #32]
    3ba0:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    3ba4:	ldur	x0, [x29, #-88]
    3ba8:	sub	x8, x29, #0x58
    3bac:	add	x8, x8, #0x10
    3bb0:	cmp	x0, x8
    3bb4:	b.ne	3d74 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x880>  // b.any
    3bb8:	b	3d78 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x884>
    3bbc:	ldr	q0, [x9]
    3bc0:	str	q0, [x21]
    3bc4:	ldr	x9, [x0, #8]
    3bc8:	mov	x22, sp
    3bcc:	str	x9, [sp, #72]
    3bd0:	stp	x8, xzr, [x0]
    3bd4:	strb	wzr, [x0, #16]
    3bd8:	ldr	x8, [x23]
    3bdc:	mov	x0, x23
    3be0:	ldr	x9, [x8, #40]
    3be4:	mov	x8, sp
    3be8:	blr	x9
    3bec:	ldp	x3, x4, [sp, #64]
    3bf0:	ldp	x1, x2, [sp]
    3bf4:	ldr	x9, [sp, #80]
    3bf8:	mov	w10, #0xf                   	// #15
    3bfc:	cmp	x3, x21
    3c00:	add	x8, x2, x4
    3c04:	csel	x9, x10, x9, eq  // eq = none
    3c08:	cmp	x8, x9
    3c0c:	b.ls	3c2c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x738>  // b.plast
    3c10:	ldr	x9, [sp, #16]
    3c14:	add	x10, x22, #0x10
    3c18:	cmp	x1, x10
    3c1c:	mov	w10, #0xf                   	// #15
    3c20:	csel	x9, x10, x9, eq  // eq = none
    3c24:	cmp	x8, x9
    3c28:	b.ls	3c38 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x744>  // b.plast
    3c2c:	add	x0, sp, #0x40
    3c30:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    3c34:	b	3c48 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x754>
    3c38:	mov	x0, sp
    3c3c:	mov	x1, xzr
    3c40:	mov	x2, xzr
    3c44:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    3c48:	add	x8, sp, #0x60
    3c4c:	add	x22, x8, #0x10
    3c50:	str	x22, [sp, #96]
    3c54:	mov	x8, x0
    3c58:	ldr	x9, [x8], #16
    3c5c:	cmp	x9, x8
    3c60:	b.eq	3c74 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x780>  // b.none
    3c64:	str	x9, [sp, #96]
    3c68:	ldr	x9, [x0, #16]
    3c6c:	str	x9, [sp, #112]
    3c70:	b	3c7c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x788>
    3c74:	ldr	q0, [x9]
    3c78:	str	q0, [x22]
    3c7c:	ldr	x9, [x0, #8]
    3c80:	str	x9, [sp, #104]
    3c84:	stp	x8, xzr, [x0]
    3c88:	strb	wzr, [x0, #16]
    3c8c:	ldr	x8, [sp, #104]
    3c90:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    3c94:	cmp	x8, x9
    3c98:	b.eq	3df0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x8fc>  // b.none
    3c9c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3ca0:	add	x1, x1, #0x0
    3ca4:	add	x0, sp, #0x60
    3ca8:	mov	w2, #0x1                   	// #1
    3cac:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    3cb0:	sub	x8, x29, #0x58
    3cb4:	add	x23, x8, #0x10
    3cb8:	stur	x23, [x29, #-88]
    3cbc:	mov	x8, x0
    3cc0:	ldr	x9, [x8], #16
    3cc4:	cmp	x9, x8
    3cc8:	b.eq	3cdc <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x7e8>  // b.none
    3ccc:	stur	x9, [x29, #-88]
    3cd0:	ldr	x9, [x0, #16]
    3cd4:	stur	x9, [x29, #-72]
    3cd8:	b	3ce4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x7f0>
    3cdc:	ldr	q0, [x9]
    3ce0:	str	q0, [x23]
    3ce4:	ldr	x9, [x0, #8]
    3ce8:	mov	w10, #0x104                 	// #260
    3cec:	sub	x11, x29, #0x58
    3cf0:	stur	x9, [x29, #-80]
    3cf4:	stp	x8, xzr, [x0]
    3cf8:	strb	wzr, [x0, #16]
    3cfc:	mov	x0, x19
    3d00:	sturh	w10, [x29, #-96]
    3d04:	stp	x11, xzr, [x29, #-112]
    3d08:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    3d0c:	str	x0, [x29, #8]
    3d10:	add	x0, x29, #0x8
    3d14:	sub	x2, x29, #0x70
    3d18:	mov	w1, #0x1                   	// #1
    3d1c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    3d20:	ldur	x0, [x29, #-88]
    3d24:	cmp	x0, x23
    3d28:	b.eq	3d30 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x83c>  // b.none
    3d2c:	bl	0 <_ZdlPv>
    3d30:	ldr	x0, [sp, #96]
    3d34:	cmp	x0, x22
    3d38:	b.eq	3d40 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x84c>  // b.none
    3d3c:	bl	0 <_ZdlPv>
    3d40:	ldr	x0, [sp]
    3d44:	mov	x8, sp
    3d48:	add	x8, x8, #0x10
    3d4c:	cmp	x0, x8
    3d50:	b.eq	3d58 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x864>  // b.none
    3d54:	bl	0 <_ZdlPv>
    3d58:	ldr	x0, [sp, #64]
    3d5c:	cmp	x0, x21
    3d60:	b.eq	3d68 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x874>  // b.none
    3d64:	bl	0 <_ZdlPv>
    3d68:	ldr	x0, [sp, #32]
    3d6c:	cmp	x0, x20
    3d70:	b.eq	3d78 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x884>  // b.none
    3d74:	bl	0 <_ZdlPv>
    3d78:	mov	x23, xzr
    3d7c:	mov	x0, x23
    3d80:	ldp	x20, x19, [sp, #336]
    3d84:	ldp	x22, x21, [sp, #320]
    3d88:	ldp	x24, x23, [sp, #304]
    3d8c:	ldp	x26, x25, [sp, #288]
    3d90:	ldp	x28, x27, [sp, #272]
    3d94:	ldp	x29, x30, [sp, #256]
    3d98:	ldr	d8, [sp, #240]
    3d9c:	add	sp, sp, #0x160
    3da0:	ret
    3da4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3da8:	add	x8, x8, #0x0
    3dac:	b	3a40 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x54c>
    3db0:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3db4:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3db8:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3dbc:	add	x0, x0, #0x0
    3dc0:	add	x1, x1, #0x0
    3dc4:	add	x3, x3, #0x0
    3dc8:	mov	w2, #0x69                  	// #105
    3dcc:	bl	0 <__assert_fail>
    3dd0:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3dd4:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3dd8:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3ddc:	add	x0, x0, #0x0
    3de0:	add	x1, x1, #0x0
    3de4:	add	x3, x3, #0x0
    3de8:	mov	w2, #0x69                  	// #105
    3dec:	bl	0 <__assert_fail>
    3df0:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3df4:	add	x0, x0, #0x0
    3df8:	bl	0 <_ZSt20__throw_length_errorPKc>
    3dfc:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3e00:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3e04:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3e08:	add	x0, x0, #0x0
    3e0c:	add	x1, x1, #0x0
    3e10:	add	x3, x3, #0x0
    3e14:	mov	w2, #0x71                  	// #113
    3e18:	bl	0 <__assert_fail>
    3e1c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3e20:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3e24:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3e28:	add	x0, x0, #0x0
    3e2c:	add	x1, x1, #0x0
    3e30:	add	x3, x3, #0x0
    3e34:	mov	w2, #0xb8                  	// #184
    3e38:	bl	0 <__assert_fail>

0000000000003e3c <_ZN4llvm8TGParser12ParseClassIDEv>:
    3e3c:	sub	sp, sp, #0xe0
    3e40:	stp	x29, x30, [sp, #160]
    3e44:	stp	x24, x23, [sp, #176]
    3e48:	stp	x22, x21, [sp, #192]
    3e4c:	stp	x20, x19, [sp, #208]
    3e50:	add	x29, sp, #0xa0
    3e54:	ldr	w8, [x0, #40]
    3e58:	mov	x19, x0
    3e5c:	cmp	w8, #0x48
    3e60:	b.ne	3f30 <_ZN4llvm8TGParser12ParseClassIDEv+0xf4>  // b.any
    3e64:	mov	x21, x19
    3e68:	ldr	x1, [x21, #48]!
    3e6c:	ldr	x0, [x21, #296]
    3e70:	ldr	x2, [x21, #8]
    3e74:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3e78:	mov	x20, x0
    3e7c:	cbnz	x0, 41bc <_ZN4llvm8TGParser12ParseClassIDEv+0x380>
    3e80:	ldr	w8, [x19, #40]
    3e84:	and	w8, w8, #0xfffffffc
    3e88:	cmp	w8, #0x48
    3e8c:	b.ne	41fc <_ZN4llvm8TGParser12ParseClassIDEv+0x3c0>  // b.any
    3e90:	sub	x8, x29, #0x48
    3e94:	add	x22, x8, #0x10
    3e98:	stp	x22, xzr, [x29, #-72]
    3e9c:	sturb	wzr, [x29, #-56]
    3ea0:	ldr	x8, [x19, #56]
    3ea4:	sub	x0, x29, #0x48
    3ea8:	add	x1, x8, #0x15
    3eac:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
    3eb0:	ldur	x8, [x29, #-64]
    3eb4:	mov	x23, #0x3fffffffffffffff    	// #4611686018427387903
    3eb8:	sub	x8, x23, x8
    3ebc:	cmp	x8, #0x14
    3ec0:	b.ls	41f0 <_ZN4llvm8TGParser12ParseClassIDEv+0x3b4>  // b.plast
    3ec4:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3ec8:	add	x1, x1, #0x0
    3ecc:	sub	x0, x29, #0x48
    3ed0:	mov	w2, #0x15                  	// #21
    3ed4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    3ed8:	ldp	x1, x2, [x19, #48]
    3edc:	sub	x0, x29, #0x48
    3ee0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    3ee4:	ldur	x8, [x29, #-64]
    3ee8:	cmp	x8, x23
    3eec:	b.eq	41f0 <_ZN4llvm8TGParser12ParseClassIDEv+0x3b4>  // b.none
    3ef0:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3ef4:	add	x1, x1, #0x0
    3ef8:	sub	x0, x29, #0x48
    3efc:	mov	w2, #0x1                   	// #1
    3f00:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    3f04:	sub	x8, x29, #0x28
    3f08:	add	x23, x8, #0x10
    3f0c:	stur	x23, [x29, #-40]
    3f10:	mov	x8, x0
    3f14:	ldr	x9, [x8], #16
    3f18:	cmp	x9, x8
    3f1c:	b.eq	3f68 <_ZN4llvm8TGParser12ParseClassIDEv+0x12c>  // b.none
    3f20:	stur	x9, [x29, #-40]
    3f24:	ldr	x9, [x0, #16]
    3f28:	stur	x9, [x29, #-24]
    3f2c:	b	3f70 <_ZN4llvm8TGParser12ParseClassIDEv+0x134>
    3f30:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3f34:	add	x8, x8, #0x0
    3f38:	mov	w9, #0x103                 	// #259
    3f3c:	mov	x0, x19
    3f40:	stp	x8, xzr, [x29, #-40]
    3f44:	sturh	w9, [x29, #-24]
    3f48:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    3f4c:	stur	x0, [x29, #-72]
    3f50:	sub	x0, x29, #0x48
    3f54:	sub	x2, x29, #0x28
    3f58:	mov	w1, #0x1                   	// #1
    3f5c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    3f60:	mov	x20, xzr
    3f64:	b	41d4 <_ZN4llvm8TGParser12ParseClassIDEv+0x398>
    3f68:	ldr	q0, [x9]
    3f6c:	str	q0, [x23]
    3f70:	ldr	x9, [x0, #8]
    3f74:	stur	x9, [x29, #-32]
    3f78:	stp	x8, xzr, [x0]
    3f7c:	strb	wzr, [x0, #16]
    3f80:	ldur	x0, [x29, #-72]
    3f84:	cmp	x0, x22
    3f88:	b.eq	3f90 <_ZN4llvm8TGParser12ParseClassIDEv+0x154>  // b.none
    3f8c:	bl	0 <_ZdlPv>
    3f90:	ldr	w8, [x19, #40]
    3f94:	and	w8, w8, #0xfffffffc
    3f98:	cmp	w8, #0x48
    3f9c:	b.ne	41fc <_ZN4llvm8TGParser12ParseClassIDEv+0x3c0>  // b.any
    3fa0:	add	x0, x19, #0xe0
    3fa4:	mov	x1, x21
    3fa8:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3fac:	ldr	x8, [x0]
    3fb0:	cbz	x8, 3ff8 <_ZN4llvm8TGParser12ParseClassIDEv+0x1bc>
    3fb4:	ldp	x21, x22, [x29, #-40]
    3fb8:	mov	x8, sp
    3fbc:	add	x24, x8, #0x10
    3fc0:	str	x24, [sp]
    3fc4:	cbnz	x21, 3fcc <_ZN4llvm8TGParser12ParseClassIDEv+0x190>
    3fc8:	cbnz	x22, 421c <_ZN4llvm8TGParser12ParseClassIDEv+0x3e0>
    3fcc:	cmp	x22, #0x10
    3fd0:	stur	x22, [x29, #-72]
    3fd4:	b.cc	4028 <_ZN4llvm8TGParser12ParseClassIDEv+0x1ec>  // b.lo, b.ul, b.last
    3fd8:	mov	x0, sp
    3fdc:	sub	x1, x29, #0x48
    3fe0:	mov	x2, xzr
    3fe4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    3fe8:	ldur	x8, [x29, #-72]
    3fec:	str	x0, [sp]
    3ff0:	str	x8, [sp, #16]
    3ff4:	b	402c <_ZN4llvm8TGParser12ParseClassIDEv+0x1f0>
    3ff8:	mov	w8, #0x104                 	// #260
    3ffc:	sub	x9, x29, #0x28
    4000:	mov	x0, x19
    4004:	sturh	w8, [x29, #-56]
    4008:	stp	x9, xzr, [x29, #-72]
    400c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    4010:	str	x0, [sp, #32]
    4014:	add	x0, sp, #0x20
    4018:	sub	x2, x29, #0x48
    401c:	mov	w1, #0x1                   	// #1
    4020:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    4024:	b	41ac <_ZN4llvm8TGParser12ParseClassIDEv+0x370>
    4028:	mov	x0, x24
    402c:	cbz	x22, 4050 <_ZN4llvm8TGParser12ParseClassIDEv+0x214>
    4030:	cmp	x22, #0x1
    4034:	b.ne	4044 <_ZN4llvm8TGParser12ParseClassIDEv+0x208>  // b.any
    4038:	ldrb	w8, [x21]
    403c:	strb	w8, [x0]
    4040:	b	4050 <_ZN4llvm8TGParser12ParseClassIDEv+0x214>
    4044:	mov	x1, x21
    4048:	mov	x2, x22
    404c:	bl	0 <memcpy>
    4050:	ldur	x8, [x29, #-72]
    4054:	ldr	x9, [sp]
    4058:	str	x8, [sp, #8]
    405c:	strb	wzr, [x9, x8]
    4060:	ldr	x8, [sp, #8]
    4064:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    4068:	sub	x8, x9, x8
    406c:	cmp	x8, #0x2c
    4070:	b.ls	41f0 <_ZN4llvm8TGParser12ParseClassIDEv+0x3b4>  // b.plast
    4074:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4078:	add	x1, x1, #0x0
    407c:	mov	x0, sp
    4080:	mov	w2, #0x2d                  	// #45
    4084:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    4088:	ldr	w8, [x19, #40]
    408c:	and	w8, w8, #0xfffffffc
    4090:	cmp	w8, #0x48
    4094:	b.ne	41fc <_ZN4llvm8TGParser12ParseClassIDEv+0x3c0>  // b.any
    4098:	ldp	x1, x2, [x19, #48]
    409c:	mov	x0, sp
    40a0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    40a4:	add	x8, sp, #0x20
    40a8:	add	x21, x8, #0x10
    40ac:	str	x21, [sp, #32]
    40b0:	mov	x8, x0
    40b4:	ldr	x9, [x8], #16
    40b8:	cmp	x9, x8
    40bc:	b.eq	40d0 <_ZN4llvm8TGParser12ParseClassIDEv+0x294>  // b.none
    40c0:	str	x9, [sp, #32]
    40c4:	ldr	x9, [x0, #16]
    40c8:	str	x9, [sp, #48]
    40cc:	b	40d8 <_ZN4llvm8TGParser12ParseClassIDEv+0x29c>
    40d0:	ldr	q0, [x9]
    40d4:	str	q0, [x21]
    40d8:	ldr	x9, [x0, #8]
    40dc:	str	x9, [sp, #40]
    40e0:	stp	x8, xzr, [x0]
    40e4:	strb	wzr, [x0, #16]
    40e8:	ldr	x8, [sp, #40]
    40ec:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    40f0:	cmp	x8, x9
    40f4:	b.eq	41f0 <_ZN4llvm8TGParser12ParseClassIDEv+0x3b4>  // b.none
    40f8:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    40fc:	add	x1, x1, #0x0
    4100:	add	x0, sp, #0x20
    4104:	mov	w2, #0x1                   	// #1
    4108:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    410c:	sub	x8, x29, #0x48
    4110:	add	x22, x8, #0x10
    4114:	stur	x22, [x29, #-72]
    4118:	mov	x8, x0
    411c:	ldr	x9, [x8], #16
    4120:	cmp	x9, x8
    4124:	b.eq	4138 <_ZN4llvm8TGParser12ParseClassIDEv+0x2fc>  // b.none
    4128:	stur	x9, [x29, #-72]
    412c:	ldr	x9, [x0, #16]
    4130:	stur	x9, [x29, #-56]
    4134:	b	4140 <_ZN4llvm8TGParser12ParseClassIDEv+0x304>
    4138:	ldr	q0, [x9]
    413c:	str	q0, [x22]
    4140:	ldr	x9, [x0, #8]
    4144:	mov	w10, #0x104                 	// #260
    4148:	sub	x11, x29, #0x48
    414c:	stur	x9, [x29, #-64]
    4150:	stp	x8, xzr, [x0]
    4154:	strb	wzr, [x0, #16]
    4158:	mov	x0, x19
    415c:	strh	w10, [sp, #80]
    4160:	stp	x11, xzr, [sp, #64]
    4164:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    4168:	stur	x0, [x29, #-8]
    416c:	sub	x0, x29, #0x8
    4170:	add	x2, sp, #0x40
    4174:	mov	w1, #0x1                   	// #1
    4178:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    417c:	ldur	x0, [x29, #-72]
    4180:	cmp	x0, x22
    4184:	b.eq	418c <_ZN4llvm8TGParser12ParseClassIDEv+0x350>  // b.none
    4188:	bl	0 <_ZdlPv>
    418c:	ldr	x0, [sp, #32]
    4190:	cmp	x0, x21
    4194:	b.eq	419c <_ZN4llvm8TGParser12ParseClassIDEv+0x360>  // b.none
    4198:	bl	0 <_ZdlPv>
    419c:	ldr	x0, [sp]
    41a0:	cmp	x0, x24
    41a4:	b.eq	41ac <_ZN4llvm8TGParser12ParseClassIDEv+0x370>  // b.none
    41a8:	bl	0 <_ZdlPv>
    41ac:	ldur	x0, [x29, #-40]
    41b0:	cmp	x0, x23
    41b4:	b.eq	41bc <_ZN4llvm8TGParser12ParseClassIDEv+0x380>  // b.none
    41b8:	bl	0 <_ZdlPv>
    41bc:	ldp	x8, x9, [x19, #8]
    41c0:	mov	x0, x19
    41c4:	cmp	x8, x9
    41c8:	cset	w1, eq  // eq = none
    41cc:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    41d0:	str	w0, [x19, #40]
    41d4:	mov	x0, x20
    41d8:	ldp	x20, x19, [sp, #208]
    41dc:	ldp	x22, x21, [sp, #192]
    41e0:	ldp	x24, x23, [sp, #176]
    41e4:	ldp	x29, x30, [sp, #160]
    41e8:	add	sp, sp, #0xe0
    41ec:	ret
    41f0:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    41f4:	add	x0, x0, #0x0
    41f8:	bl	0 <_ZSt20__throw_length_errorPKc>
    41fc:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4200:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4204:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4208:	add	x0, x0, #0x0
    420c:	add	x1, x1, #0x0
    4210:	add	x3, x3, #0x0
    4214:	mov	w2, #0x71                  	// #113
    4218:	bl	0 <__assert_fail>
    421c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4220:	add	x0, x0, #0x0
    4224:	bl	0 <_ZSt19__throw_logic_errorPKc>

0000000000004228 <_ZN4llvm8TGParser17ParseMultiClassIDEv>:
    4228:	sub	sp, sp, #0x90
    422c:	stp	x29, x30, [sp, #96]
    4230:	stp	x22, x21, [sp, #112]
    4234:	stp	x20, x19, [sp, #128]
    4238:	add	x29, sp, #0x60
    423c:	ldr	w8, [x0, #40]
    4240:	mov	x19, x0
    4244:	cmp	w8, #0x48
    4248:	b.ne	4310 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0xe8>  // b.any
    424c:	add	x0, x19, #0xe0
    4250:	add	x1, x19, #0x30
    4254:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4258:	ldr	x20, [x0]
    425c:	cbnz	x20, 43ac <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x184>
    4260:	ldr	w8, [x19, #40]
    4264:	and	w8, w8, #0xfffffffc
    4268:	cmp	w8, #0x48
    426c:	b.ne	43e8 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x1c0>  // b.any
    4270:	mov	x8, sp
    4274:	add	x21, x8, #0x10
    4278:	stp	x21, xzr, [sp]
    427c:	strb	wzr, [sp, #16]
    4280:	ldr	x8, [x19, #56]
    4284:	mov	x0, sp
    4288:	add	x1, x8, #0x1a
    428c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
    4290:	ldr	x8, [sp, #8]
    4294:	mov	x22, #0x3fffffffffffffff    	// #4611686018427387903
    4298:	sub	x8, x22, x8
    429c:	cmp	x8, #0x19
    42a0:	b.ls	43dc <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x1b4>  // b.plast
    42a4:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    42a8:	add	x1, x1, #0x0
    42ac:	mov	x0, sp
    42b0:	mov	w2, #0x1a                  	// #26
    42b4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    42b8:	ldp	x1, x2, [x19, #48]
    42bc:	mov	x0, sp
    42c0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    42c4:	ldr	x8, [sp, #8]
    42c8:	cmp	x8, x22
    42cc:	b.eq	43dc <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x1b4>  // b.none
    42d0:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    42d4:	add	x1, x1, #0x0
    42d8:	mov	x0, sp
    42dc:	mov	w2, #0x1                   	// #1
    42e0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    42e4:	add	x8, sp, #0x20
    42e8:	add	x22, x8, #0x10
    42ec:	str	x22, [sp, #32]
    42f0:	mov	x8, x0
    42f4:	ldr	x9, [x8], #16
    42f8:	cmp	x9, x8
    42fc:	b.eq	4348 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x120>  // b.none
    4300:	str	x9, [sp, #32]
    4304:	ldr	x9, [x0, #16]
    4308:	str	x9, [sp, #48]
    430c:	b	4350 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x128>
    4310:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4314:	add	x8, x8, #0x0
    4318:	mov	w9, #0x103                 	// #259
    431c:	mov	x0, x19
    4320:	stp	x8, xzr, [sp, #32]
    4324:	strh	w9, [sp, #48]
    4328:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    432c:	str	x0, [sp]
    4330:	mov	x0, sp
    4334:	add	x2, sp, #0x20
    4338:	mov	w1, #0x1                   	// #1
    433c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    4340:	mov	x20, xzr
    4344:	b	43c4 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x19c>
    4348:	ldr	q0, [x9]
    434c:	str	q0, [x22]
    4350:	ldr	x9, [x0, #8]
    4354:	mov	w10, #0x104                 	// #260
    4358:	add	x11, sp, #0x20
    435c:	str	x9, [sp, #40]
    4360:	stp	x8, xzr, [x0]
    4364:	strb	wzr, [x0, #16]
    4368:	mov	x0, x19
    436c:	sturh	w10, [x29, #-16]
    4370:	stp	x11, xzr, [x29, #-32]
    4374:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    4378:	stur	x0, [x29, #-8]
    437c:	sub	x0, x29, #0x8
    4380:	sub	x2, x29, #0x20
    4384:	mov	w1, #0x1                   	// #1
    4388:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    438c:	ldr	x0, [sp, #32]
    4390:	cmp	x0, x22
    4394:	b.eq	439c <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x174>  // b.none
    4398:	bl	0 <_ZdlPv>
    439c:	ldr	x0, [sp]
    43a0:	cmp	x0, x21
    43a4:	b.eq	43ac <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x184>  // b.none
    43a8:	bl	0 <_ZdlPv>
    43ac:	ldp	x8, x9, [x19, #8]
    43b0:	mov	x0, x19
    43b4:	cmp	x8, x9
    43b8:	cset	w1, eq  // eq = none
    43bc:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    43c0:	str	w0, [x19, #40]
    43c4:	mov	x0, x20
    43c8:	ldp	x20, x19, [sp, #128]
    43cc:	ldp	x22, x21, [sp, #112]
    43d0:	ldp	x29, x30, [sp, #96]
    43d4:	add	sp, sp, #0x90
    43d8:	ret
    43dc:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    43e0:	add	x0, x0, #0x0
    43e4:	bl	0 <_ZSt20__throw_length_errorPKc>
    43e8:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    43ec:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    43f0:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    43f4:	add	x0, x0, #0x0
    43f8:	add	x1, x1, #0x0
    43fc:	add	x3, x3, #0x0
    4400:	mov	w2, #0x71                  	// #113
    4404:	bl	0 <__assert_fail>

0000000000004408 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb>:
    4408:	sub	sp, sp, #0x60
    440c:	stp	x29, x30, [sp, #32]
    4410:	str	x23, [sp, #48]
    4414:	stp	x22, x21, [sp, #64]
    4418:	stp	x20, x19, [sp, #80]
    441c:	add	x29, sp, #0x20
    4420:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4424:	ldr	d0, [x9]
    4428:	mov	x19, x8
    442c:	add	x8, x8, #0x28
    4430:	mov	x22, x19
    4434:	mov	w23, w2
    4438:	mov	x21, x1
    443c:	mov	x20, x0
    4440:	str	x8, [x22, #24]!
    4444:	stp	xzr, xzr, [x19]
    4448:	str	xzr, [x19, #16]
    444c:	str	d0, [x19, #32]
    4450:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    4454:	str	x0, [x19]
    4458:	mov	x0, x20
    445c:	tbz	w23, #0, 4474 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x6c>
    4460:	bl	4228 <_ZN4llvm8TGParser17ParseMultiClassIDEv>
    4464:	cbnz	x0, 4478 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x70>
    4468:	ldr	x0, [x19, #16]
    446c:	cbnz	x0, 4480 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x78>
    4470:	b	4540 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x138>
    4474:	bl	3e3c <_ZN4llvm8TGParser12ParseClassIDEv>
    4478:	str	x0, [x19, #16]
    447c:	cbz	x0, 4540 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x138>
    4480:	ldr	w8, [x20, #40]
    4484:	cmp	w8, #0xa
    4488:	b.ne	44fc <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0xf4>  // b.any
    448c:	ldp	x8, x9, [x20, #8]
    4490:	mov	x0, x20
    4494:	cmp	x8, x9
    4498:	cset	w1, eq  // eq = none
    449c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    44a0:	cmp	w0, #0xb
    44a4:	str	w0, [x20, #40]
    44a8:	b.ne	44b8 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0xb0>  // b.any
    44ac:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    44b0:	add	x8, x8, #0x0
    44b4:	b	4514 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x10c>
    44b8:	ldr	x3, [x19, #16]
    44bc:	mov	x0, x20
    44c0:	mov	x1, x22
    44c4:	mov	x2, x21
    44c8:	mov	x4, xzr
    44cc:	bl	4558 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE>
    44d0:	ldr	w8, [x19, #32]
    44d4:	cbz	w8, 453c <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x134>
    44d8:	ldr	w8, [x20, #40]
    44dc:	cmp	w8, #0xb
    44e0:	b.ne	450c <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x104>  // b.any
    44e4:	ldp	x8, x9, [x20, #8]
    44e8:	mov	x0, x20
    44ec:	cmp	x8, x9
    44f0:	cset	w1, eq  // eq = none
    44f4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    44f8:	str	w0, [x20, #40]
    44fc:	mov	x0, x20
    4500:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    4504:	str	x0, [x19, #8]
    4508:	b	4540 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x138>
    450c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4510:	add	x8, x8, #0x0
    4514:	mov	w9, #0x103                 	// #259
    4518:	mov	x0, x20
    451c:	stp	x8, xzr, [sp, #8]
    4520:	strh	w9, [sp, #24]
    4524:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    4528:	str	x0, [x29, #24]
    452c:	add	x0, x29, #0x18
    4530:	add	x2, sp, #0x8
    4534:	mov	w1, #0x1                   	// #1
    4538:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    453c:	str	xzr, [x19, #16]
    4540:	ldp	x20, x19, [sp, #80]
    4544:	ldp	x22, x21, [sp, #64]
    4548:	ldr	x23, [sp, #48]
    454c:	ldp	x29, x30, [sp, #32]
    4550:	add	sp, sp, #0x60
    4554:	ret

0000000000004558 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE>:
    4558:	sub	sp, sp, #0x90
    455c:	stp	x29, x30, [sp, #48]
    4560:	str	x27, [sp, #64]
    4564:	stp	x26, x25, [sp, #80]
    4568:	stp	x24, x23, [sp, #96]
    456c:	stp	x22, x21, [sp, #112]
    4570:	stp	x20, x19, [sp, #128]
    4574:	add	x29, sp, #0x30
    4578:	cmp	x3, #0x0
    457c:	cset	w8, eq  // eq = none
    4580:	cmp	x4, #0x0
    4584:	cset	w9, ne  // ne = any
    4588:	mov	x21, x3
    458c:	mov	x22, x2
    4590:	mov	x19, x1
    4594:	orr	w26, w8, w9
    4598:	mov	x20, x0
    459c:	tbz	w26, #0, 45ac <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x54>
    45a0:	mov	x23, x4
    45a4:	mov	w27, wzr
    45a8:	b	466c <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x114>
    45ac:	ldr	x8, [x21, #56]
    45b0:	ldr	w9, [x21, #64]
    45b4:	stp	x8, x9, [x29, #-16]
    45b8:	cbz	w9, 47b8 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x260>
    45bc:	ldr	w10, [x21, #80]
    45c0:	cbz	w10, 45f0 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x98>
    45c4:	ldr	x9, [x21, #72]
    45c8:	ldr	x8, [x8]
    45cc:	add	x10, x10, x10, lsl #1
    45d0:	lsl	x10, x10, #3
    45d4:	mov	x11, x9
    45d8:	ldr	x12, [x11], #24
    45dc:	cmp	x12, x8
    45e0:	b.eq	465c <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x104>  // b.none
    45e4:	subs	x10, x10, #0x18
    45e8:	mov	x9, x11
    45ec:	b.ne	45d8 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x80>  // b.any
    45f0:	bl	0 <_ZN4llvm4errsEv>
    45f4:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    45f8:	add	x1, x1, #0x0
    45fc:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4600:	mov	w1, wzr
    4604:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4608:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    460c:	add	x1, x1, #0x0
    4610:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4614:	mov	x19, x0
    4618:	sub	x0, x29, #0x10
    461c:	mov	x1, xzr
    4620:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4624:	ldr	x1, [x0]
    4628:	mov	x0, x19
    462c:	bl	0 <_ZN4llvm11raw_ostreamlsEPKv>
    4630:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4634:	add	x1, x1, #0x0
    4638:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    463c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4640:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4644:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4648:	add	x0, x0, #0x0
    464c:	add	x1, x1, #0x0
    4650:	add	x3, x3, #0x0
    4654:	mov	w2, #0x945                 	// #2373
    4658:	bl	0 <__assert_fail>
    465c:	cbz	x9, 45f0 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x98>
    4660:	ldr	x8, [x9, #8]
    4664:	mov	w27, #0x1                   	// #1
    4668:	and	x23, x8, #0xfffffffffffffff8
    466c:	mov	x0, x20
    4670:	mov	x1, x22
    4674:	mov	x2, x23
    4678:	mov	w3, wzr
    467c:	bl	34f4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    4680:	ldp	w8, w9, [x19, #8]
    4684:	mov	x24, x0
    4688:	cmp	w8, w9
    468c:	b.cs	4834 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x2dc>  // b.hs, b.nlast
    4690:	ldr	x9, [x19]
    4694:	str	x24, [x9, w8, uxtw #3]
    4698:	ldp	w8, w9, [x19, #8]
    469c:	cmp	w8, w9
    46a0:	b.cs	4870 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x318>  // b.hs, b.nlast
    46a4:	ldr	x9, [x19]
    46a8:	add	x8, x8, #0x1
    46ac:	str	w8, [x19, #8]
    46b0:	add	x8, x9, x8, lsl #3
    46b4:	ldur	x8, [x8, #-8]
    46b8:	cbz	x8, 4810 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x2b8>
    46bc:	add	x24, x19, #0x10
    46c0:	ldr	w8, [x20, #40]
    46c4:	cmp	w8, #0xe
    46c8:	b.ne	4814 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x2bc>  // b.any
    46cc:	ldp	x8, x9, [x20, #8]
    46d0:	mov	x0, x20
    46d4:	cmp	x8, x9
    46d8:	cset	w1, eq  // eq = none
    46dc:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    46e0:	cmp	w0, #0x5
    46e4:	str	w0, [x20, #40]
    46e8:	b.eq	4814 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x2bc>  // b.none
    46ec:	tbnz	w26, #0, 4748 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x1f0>
    46f0:	ldr	w8, [x21, #64]
    46f4:	cmp	w8, w27
    46f8:	b.ls	47e0 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x288>  // b.plast
    46fc:	ldr	w10, [x21, #80]
    4700:	cbz	w10, 4850 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x2f8>
    4704:	ldr	x8, [x21, #56]
    4708:	ldr	x9, [x21, #72]
    470c:	add	x10, x10, x10, lsl #1
    4710:	lsl	x10, x10, #3
    4714:	ldr	x8, [x8, w27, uxtw #3]
    4718:	mov	x11, x9
    471c:	ldr	x12, [x11], #24
    4720:	cmp	x12, x8
    4724:	b.eq	4738 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x1e0>  // b.none
    4728:	subs	x10, x10, #0x18
    472c:	mov	x9, x11
    4730:	b.ne	471c <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x1c4>  // b.any
    4734:	b	4850 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x2f8>
    4738:	cbz	x9, 4850 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x2f8>
    473c:	ldr	x8, [x9, #8]
    4740:	add	w27, w27, #0x1
    4744:	and	x23, x8, #0xfffffffffffffff8
    4748:	mov	x0, x20
    474c:	mov	x1, x22
    4750:	mov	x2, x23
    4754:	mov	w3, wzr
    4758:	bl	34f4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    475c:	ldp	w8, w9, [x19, #8]
    4760:	mov	x25, x0
    4764:	cmp	w8, w9
    4768:	b.cs	479c <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x244>  // b.hs, b.nlast
    476c:	ldr	x9, [x19]
    4770:	str	x25, [x9, w8, uxtw #3]
    4774:	ldp	w8, w9, [x19, #8]
    4778:	cmp	w8, w9
    477c:	b.cs	4870 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x318>  // b.hs, b.nlast
    4780:	ldr	x9, [x19]
    4784:	add	x8, x8, #0x1
    4788:	str	w8, [x19, #8]
    478c:	add	x8, x9, x8, lsl #3
    4790:	ldur	x8, [x8, #-8]
    4794:	cbnz	x8, 46c0 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x168>
    4798:	b	4810 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x2b8>
    479c:	mov	w3, #0x8                   	// #8
    47a0:	mov	x0, x19
    47a4:	mov	x1, x24
    47a8:	mov	x2, xzr
    47ac:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    47b0:	ldr	w8, [x19, #8]
    47b4:	b	476c <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x214>
    47b8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    47bc:	add	x8, x8, #0x0
    47c0:	mov	w9, #0x103                 	// #259
    47c4:	mov	x0, x20
    47c8:	stp	x8, xzr, [sp, #8]
    47cc:	strh	w9, [sp, #24]
    47d0:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    47d4:	str	x0, [x29, #24]
    47d8:	add	x0, x29, #0x18
    47dc:	b	4804 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x2ac>
    47e0:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    47e4:	add	x8, x8, #0x0
    47e8:	mov	w9, #0x103                 	// #259
    47ec:	mov	x0, x20
    47f0:	stp	x8, xzr, [sp, #8]
    47f4:	strh	w9, [sp, #24]
    47f8:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    47fc:	stur	x0, [x29, #-16]
    4800:	sub	x0, x29, #0x10
    4804:	add	x2, sp, #0x8
    4808:	mov	w1, #0x1                   	// #1
    480c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    4810:	str	wzr, [x19, #8]
    4814:	ldp	x20, x19, [sp, #128]
    4818:	ldp	x22, x21, [sp, #112]
    481c:	ldp	x24, x23, [sp, #96]
    4820:	ldp	x26, x25, [sp, #80]
    4824:	ldr	x27, [sp, #64]
    4828:	ldp	x29, x30, [sp, #48]
    482c:	add	sp, sp, #0x90
    4830:	ret
    4834:	add	x1, x19, #0x10
    4838:	mov	w3, #0x8                   	// #8
    483c:	mov	x0, x19
    4840:	mov	x2, xzr
    4844:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4848:	ldr	w8, [x19, #8]
    484c:	b	4690 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x138>
    4850:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4854:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4858:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    485c:	add	x0, x0, #0x0
    4860:	add	x1, x1, #0x0
    4864:	add	x3, x3, #0x0
    4868:	mov	w2, #0x95e                 	// #2398
    486c:	bl	0 <__assert_fail>
    4870:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4874:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4878:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    487c:	add	x0, x0, #0x0
    4880:	add	x1, x1, #0x0
    4884:	add	x3, x3, #0x0
    4888:	mov	w2, #0x43                  	// #67
    488c:	bl	0 <__assert_fail>

0000000000004890 <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE>:
    4890:	sub	sp, sp, #0x50
    4894:	stp	x29, x30, [sp, #32]
    4898:	stp	x22, x21, [sp, #48]
    489c:	stp	x20, x19, [sp, #64]
    48a0:	add	x29, sp, #0x20
    48a4:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    48a8:	ldr	d0, [x9]
    48ac:	mov	x19, x8
    48b0:	add	x8, x8, #0x28
    48b4:	mov	x22, x19
    48b8:	mov	x21, x1
    48bc:	mov	x20, x0
    48c0:	str	x8, [x22, #24]!
    48c4:	stp	xzr, xzr, [x19]
    48c8:	str	xzr, [x19, #16]
    48cc:	str	d0, [x19, #32]
    48d0:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    48d4:	str	x0, [x19]
    48d8:	mov	x0, x20
    48dc:	bl	4228 <_ZN4llvm8TGParser17ParseMultiClassIDEv>
    48e0:	str	x0, [x19, #16]
    48e4:	cbz	x0, 49a8 <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE+0x118>
    48e8:	ldr	w8, [x20, #40]
    48ec:	cmp	w8, #0xa
    48f0:	b.ne	4964 <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE+0xd4>  // b.any
    48f4:	ldp	x8, x9, [x20, #8]
    48f8:	mov	x0, x20
    48fc:	cmp	x8, x9
    4900:	cset	w1, eq  // eq = none
    4904:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4908:	cmp	w0, #0xb
    490c:	str	w0, [x20, #40]
    4910:	b.ne	4920 <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE+0x90>  // b.any
    4914:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4918:	add	x8, x8, #0x0
    491c:	b	497c <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE+0xec>
    4920:	ldr	x3, [x19, #16]
    4924:	mov	x0, x20
    4928:	mov	x1, x22
    492c:	mov	x2, x21
    4930:	mov	x4, xzr
    4934:	bl	4558 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE>
    4938:	ldr	w8, [x19, #32]
    493c:	cbz	w8, 49a4 <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE+0x114>
    4940:	ldr	w8, [x20, #40]
    4944:	cmp	w8, #0xb
    4948:	b.ne	4974 <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE+0xe4>  // b.any
    494c:	ldp	x8, x9, [x20, #8]
    4950:	mov	x0, x20
    4954:	cmp	x8, x9
    4958:	cset	w1, eq  // eq = none
    495c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4960:	str	w0, [x20, #40]
    4964:	mov	x0, x20
    4968:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    496c:	str	x0, [x19, #8]
    4970:	b	49a8 <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE+0x118>
    4974:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4978:	add	x8, x8, #0x0
    497c:	mov	w9, #0x103                 	// #259
    4980:	mov	x0, x20
    4984:	stp	x8, xzr, [sp]
    4988:	strh	w9, [sp, #16]
    498c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    4990:	stur	x0, [x29, #-8]
    4994:	sub	x0, x29, #0x8
    4998:	mov	x2, sp
    499c:	mov	w1, #0x1                   	// #1
    49a0:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    49a4:	str	xzr, [x19, #16]
    49a8:	ldp	x20, x19, [sp, #64]
    49ac:	ldp	x22, x21, [sp, #48]
    49b0:	ldp	x29, x30, [sp, #32]
    49b4:	add	sp, sp, #0x50
    49b8:	ret

00000000000049bc <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE>:
    49bc:	sub	sp, sp, #0x60
    49c0:	stp	x29, x30, [sp, #32]
    49c4:	str	x23, [sp, #48]
    49c8:	stp	x22, x21, [sp, #64]
    49cc:	stp	x20, x19, [sp, #80]
    49d0:	add	x29, sp, #0x20
    49d4:	mov	x19, x1
    49d8:	mov	x20, x0
    49dc:	cbz	x2, 49e8 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x2c>
    49e0:	cbnz	x2, 4a00 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x44>
    49e4:	b	4b04 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x148>
    49e8:	mov	x0, x20
    49ec:	mov	x1, xzr
    49f0:	mov	w3, wzr
    49f4:	bl	34f4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    49f8:	mov	x2, x0
    49fc:	cbz	x2, 4b04 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x148>
    4a00:	ldrb	w8, [x2, #8]
    4a04:	cmp	w8, #0x8
    4a08:	b.ne	4b04 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x148>  // b.any
    4a0c:	ldr	x22, [x2, #24]
    4a10:	tbnz	x22, #63, 4b98 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x1dc>
    4a14:	ldr	w8, [x20, #40]
    4a18:	cmp	w8, #0x2
    4a1c:	b.eq	4b54 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x198>  // b.none
    4a20:	cmp	w8, #0x46
    4a24:	b.ne	4ba4 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x1e8>  // b.any
    4a28:	ldp	x9, x10, [x20, #8]
    4a2c:	ldr	x8, [x20, #80]
    4a30:	mov	x0, x20
    4a34:	cmp	x9, x10
    4a38:	cset	w1, eq  // eq = none
    4a3c:	neg	x23, x8
    4a40:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4a44:	str	w0, [x20, #40]
    4a48:	tbnz	x23, #63, 4b98 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x1dc>
    4a4c:	ldp	w8, w9, [x19, #8]
    4a50:	cmp	x22, x23
    4a54:	add	x20, x19, #0x10
    4a58:	b.ge	4ab0 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0xf4>  // b.tcont
    4a5c:	cmp	w8, w9
    4a60:	b.cs	4a94 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0xd8>  // b.hs, b.nlast
    4a64:	ldr	x9, [x19]
    4a68:	str	w22, [x9, w8, uxtw #2]
    4a6c:	ldp	w8, w9, [x19, #8]
    4a70:	cmp	w8, w9
    4a74:	b.cs	4bfc <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x240>  // b.hs, b.nlast
    4a78:	mov	w21, wzr
    4a7c:	add	w8, w8, #0x1
    4a80:	cmp	x22, x23
    4a84:	add	x22, x22, #0x1
    4a88:	str	w8, [x19, #8]
    4a8c:	b.lt	4a5c <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0xa0>  // b.tstop
    4a90:	b	4b38 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x17c>
    4a94:	mov	w3, #0x4                   	// #4
    4a98:	mov	x0, x19
    4a9c:	mov	x1, x20
    4aa0:	mov	x2, xzr
    4aa4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4aa8:	ldr	w8, [x19, #8]
    4aac:	b	4a64 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0xa8>
    4ab0:	cmp	w8, w9
    4ab4:	b.cs	4ae8 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x12c>  // b.hs, b.nlast
    4ab8:	ldr	x9, [x19]
    4abc:	str	w22, [x9, w8, uxtw #2]
    4ac0:	ldp	w8, w9, [x19, #8]
    4ac4:	cmp	w8, w9
    4ac8:	b.cs	4bfc <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x240>  // b.hs, b.nlast
    4acc:	mov	w21, wzr
    4ad0:	add	w8, w8, #0x1
    4ad4:	cmp	x22, x23
    4ad8:	sub	x22, x22, #0x1
    4adc:	str	w8, [x19, #8]
    4ae0:	b.gt	4ab0 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0xf4>
    4ae4:	b	4b38 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x17c>
    4ae8:	mov	w3, #0x4                   	// #4
    4aec:	mov	x0, x19
    4af0:	mov	x1, x20
    4af4:	mov	x2, xzr
    4af8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4afc:	ldr	w8, [x19, #8]
    4b00:	b	4ab8 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0xfc>
    4b04:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4b08:	add	x8, x8, #0x0
    4b0c:	mov	w9, #0x103                 	// #259
    4b10:	mov	x0, x20
    4b14:	stp	x8, xzr, [sp, #8]
    4b18:	strh	w9, [sp, #24]
    4b1c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    4b20:	str	x0, [x29, #24]
    4b24:	add	x0, x29, #0x18
    4b28:	add	x2, sp, #0x8
    4b2c:	mov	w1, #0x1                   	// #1
    4b30:	mov	w21, #0x1                   	// #1
    4b34:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    4b38:	mov	w0, w21
    4b3c:	ldp	x20, x19, [sp, #80]
    4b40:	ldp	x22, x21, [sp, #64]
    4b44:	ldr	x23, [sp, #48]
    4b48:	ldp	x29, x30, [sp, #32]
    4b4c:	add	sp, sp, #0x60
    4b50:	ret
    4b54:	ldp	x8, x9, [x20, #8]
    4b58:	mov	x0, x20
    4b5c:	cmp	x8, x9
    4b60:	cset	w1, eq  // eq = none
    4b64:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4b68:	str	w0, [x20, #40]
    4b6c:	mov	x0, x20
    4b70:	mov	x1, xzr
    4b74:	mov	x2, xzr
    4b78:	mov	w3, wzr
    4b7c:	bl	34f4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    4b80:	cbz	x0, 4bd4 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x218>
    4b84:	ldrb	w8, [x0, #8]
    4b88:	cmp	w8, #0x8
    4b8c:	b.ne	4bd4 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x218>  // b.any
    4b90:	ldr	x23, [x0, #24]
    4b94:	tbz	x23, #63, 4a4c <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x90>
    4b98:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4b9c:	add	x8, x8, #0x0
    4ba0:	b	4b0c <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x150>
    4ba4:	ldp	w8, w9, [x19, #8]
    4ba8:	cmp	w8, w9
    4bac:	b.cs	4be0 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x224>  // b.hs, b.nlast
    4bb0:	ldr	x9, [x19]
    4bb4:	str	w22, [x9, w8, uxtw #2]
    4bb8:	ldp	w8, w9, [x19, #8]
    4bbc:	cmp	w8, w9
    4bc0:	b.cs	4bfc <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x240>  // b.hs, b.nlast
    4bc4:	add	w8, w8, #0x1
    4bc8:	mov	w21, wzr
    4bcc:	str	w8, [x19, #8]
    4bd0:	b	4b38 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x17c>
    4bd4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4bd8:	add	x8, x8, #0x0
    4bdc:	b	4b0c <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x150>
    4be0:	add	x1, x19, #0x10
    4be4:	mov	w3, #0x4                   	// #4
    4be8:	mov	x0, x19
    4bec:	mov	x2, xzr
    4bf0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4bf4:	ldr	w8, [x19, #8]
    4bf8:	b	4bb0 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x1f4>
    4bfc:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4c00:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4c04:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4c08:	add	x0, x0, #0x0
    4c0c:	add	x1, x1, #0x0
    4c10:	add	x3, x3, #0x0
    4c14:	mov	w2, #0x43                  	// #67
    4c18:	bl	0 <__assert_fail>

0000000000004c1c <_ZN4llvm8TGParser14ParseRangeListERNS_15SmallVectorImplIjEE>:
    4c1c:	stp	x29, x30, [sp, #-32]!
    4c20:	stp	x20, x19, [sp, #16]
    4c24:	mov	x29, sp
    4c28:	mov	x19, x1
    4c2c:	mov	x20, x0
    4c30:	mov	x2, xzr
    4c34:	bl	49bc <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE>
    4c38:	tbnz	w0, #0, 4c6c <_ZN4llvm8TGParser14ParseRangeListERNS_15SmallVectorImplIjEE+0x50>
    4c3c:	ldr	w8, [x20, #40]
    4c40:	cmp	w8, #0xe
    4c44:	b.ne	4c70 <_ZN4llvm8TGParser14ParseRangeListERNS_15SmallVectorImplIjEE+0x54>  // b.any
    4c48:	ldp	x8, x9, [x20, #8]
    4c4c:	mov	x0, x20
    4c50:	cmp	x8, x9
    4c54:	cset	w1, eq  // eq = none
    4c58:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4c5c:	str	w0, [x20, #40]
    4c60:	mov	x0, x20
    4c64:	mov	x1, x19
    4c68:	b	4c30 <_ZN4llvm8TGParser14ParseRangeListERNS_15SmallVectorImplIjEE+0x14>
    4c6c:	str	wzr, [x19, #8]
    4c70:	ldp	x20, x19, [sp, #16]
    4c74:	ldp	x29, x30, [sp], #32
    4c78:	ret

0000000000004c7c <_ZN4llvm8TGParser22ParseOptionalRangeListERNS_15SmallVectorImplIjEE>:
    4c7c:	sub	sp, sp, #0x50
    4c80:	stp	x29, x30, [sp, #32]
    4c84:	stp	x22, x21, [sp, #48]
    4c88:	stp	x20, x19, [sp, #64]
    4c8c:	add	x29, sp, #0x20
    4c90:	ldr	w8, [x0, #40]
    4c94:	cmp	w8, #0xa
    4c98:	b.ne	4d18 <_ZN4llvm8TGParser22ParseOptionalRangeListERNS_15SmallVectorImplIjEE+0x9c>  // b.any
    4c9c:	mov	x19, x0
    4ca0:	mov	x21, x1
    4ca4:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    4ca8:	mov	x20, x0
    4cac:	ldp	x8, x9, [x19, #8]
    4cb0:	mov	x0, x19
    4cb4:	cmp	x8, x9
    4cb8:	cset	w1, eq  // eq = none
    4cbc:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4cc0:	str	w0, [x19, #40]
    4cc4:	mov	x0, x19
    4cc8:	mov	x1, x21
    4ccc:	mov	x2, xzr
    4cd0:	bl	49bc <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE>
    4cd4:	tbnz	w0, #0, 4d20 <_ZN4llvm8TGParser22ParseOptionalRangeListERNS_15SmallVectorImplIjEE+0xa4>
    4cd8:	ldr	w8, [x19, #40]
    4cdc:	cmp	w8, #0xe
    4ce0:	b.eq	4cac <_ZN4llvm8TGParser22ParseOptionalRangeListERNS_15SmallVectorImplIjEE+0x30>  // b.none
    4ce4:	ldr	w8, [x21, #8]
    4ce8:	cbz	w8, 4d24 <_ZN4llvm8TGParser22ParseOptionalRangeListERNS_15SmallVectorImplIjEE+0xa8>
    4cec:	ldr	w8, [x19, #40]
    4cf0:	cmp	w8, #0xb
    4cf4:	b.ne	4d40 <_ZN4llvm8TGParser22ParseOptionalRangeListERNS_15SmallVectorImplIjEE+0xc4>  // b.any
    4cf8:	ldp	x8, x9, [x19, #8]
    4cfc:	mov	x0, x19
    4d00:	cmp	x8, x9
    4d04:	cset	w1, eq  // eq = none
    4d08:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4d0c:	mov	w21, wzr
    4d10:	str	w0, [x19, #40]
    4d14:	b	4d28 <_ZN4llvm8TGParser22ParseOptionalRangeListERNS_15SmallVectorImplIjEE+0xac>
    4d18:	mov	w21, wzr
    4d1c:	b	4d28 <_ZN4llvm8TGParser22ParseOptionalRangeListERNS_15SmallVectorImplIjEE+0xac>
    4d20:	str	wzr, [x21, #8]
    4d24:	mov	w21, #0x1                   	// #1
    4d28:	mov	w0, w21
    4d2c:	ldp	x20, x19, [sp, #64]
    4d30:	ldp	x22, x21, [sp, #48]
    4d34:	ldp	x29, x30, [sp, #32]
    4d38:	add	sp, sp, #0x50
    4d3c:	ret
    4d40:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4d44:	add	x8, x8, #0x0
    4d48:	mov	w22, #0x103                 	// #259
    4d4c:	mov	x0, x19
    4d50:	stp	x8, xzr, [sp]
    4d54:	strh	w22, [sp, #16]
    4d58:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    4d5c:	stur	x0, [x29, #-8]
    4d60:	sub	x0, x29, #0x8
    4d64:	mov	x2, sp
    4d68:	mov	w1, #0x1                   	// #1
    4d6c:	mov	w21, #0x1                   	// #1
    4d70:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    4d74:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4d78:	add	x8, x8, #0x0
    4d7c:	sub	x0, x29, #0x8
    4d80:	mov	x2, sp
    4d84:	mov	w1, #0x1                   	// #1
    4d88:	strh	w22, [sp, #16]
    4d8c:	stp	x8, xzr, [sp]
    4d90:	stur	x20, [x29, #-8]
    4d94:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    4d98:	b	4d28 <_ZN4llvm8TGParser22ParseOptionalRangeListERNS_15SmallVectorImplIjEE+0xac>

0000000000004d9c <_ZN4llvm8TGParser20ParseOptionalBitListERNS_15SmallVectorImplIjEE>:
    4d9c:	sub	sp, sp, #0x50
    4da0:	stp	x29, x30, [sp, #32]
    4da4:	stp	x22, x21, [sp, #48]
    4da8:	stp	x20, x19, [sp, #64]
    4dac:	add	x29, sp, #0x20
    4db0:	ldr	w8, [x0, #40]
    4db4:	cmp	w8, #0x6
    4db8:	b.ne	4e38 <_ZN4llvm8TGParser20ParseOptionalBitListERNS_15SmallVectorImplIjEE+0x9c>  // b.any
    4dbc:	mov	x19, x0
    4dc0:	mov	x21, x1
    4dc4:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    4dc8:	mov	x20, x0
    4dcc:	ldp	x8, x9, [x19, #8]
    4dd0:	mov	x0, x19
    4dd4:	cmp	x8, x9
    4dd8:	cset	w1, eq  // eq = none
    4ddc:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4de0:	str	w0, [x19, #40]
    4de4:	mov	x0, x19
    4de8:	mov	x1, x21
    4dec:	mov	x2, xzr
    4df0:	bl	49bc <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE>
    4df4:	tbnz	w0, #0, 4e40 <_ZN4llvm8TGParser20ParseOptionalBitListERNS_15SmallVectorImplIjEE+0xa4>
    4df8:	ldr	w8, [x19, #40]
    4dfc:	cmp	w8, #0xe
    4e00:	b.eq	4dcc <_ZN4llvm8TGParser20ParseOptionalBitListERNS_15SmallVectorImplIjEE+0x30>  // b.none
    4e04:	ldr	w8, [x21, #8]
    4e08:	cbz	w8, 4e44 <_ZN4llvm8TGParser20ParseOptionalBitListERNS_15SmallVectorImplIjEE+0xa8>
    4e0c:	ldr	w8, [x19, #40]
    4e10:	cmp	w8, #0x7
    4e14:	b.ne	4e60 <_ZN4llvm8TGParser20ParseOptionalBitListERNS_15SmallVectorImplIjEE+0xc4>  // b.any
    4e18:	ldp	x8, x9, [x19, #8]
    4e1c:	mov	x0, x19
    4e20:	cmp	x8, x9
    4e24:	cset	w1, eq  // eq = none
    4e28:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4e2c:	mov	w21, wzr
    4e30:	str	w0, [x19, #40]
    4e34:	b	4e48 <_ZN4llvm8TGParser20ParseOptionalBitListERNS_15SmallVectorImplIjEE+0xac>
    4e38:	mov	w21, wzr
    4e3c:	b	4e48 <_ZN4llvm8TGParser20ParseOptionalBitListERNS_15SmallVectorImplIjEE+0xac>
    4e40:	str	wzr, [x21, #8]
    4e44:	mov	w21, #0x1                   	// #1
    4e48:	mov	w0, w21
    4e4c:	ldp	x20, x19, [sp, #64]
    4e50:	ldp	x22, x21, [sp, #48]
    4e54:	ldp	x29, x30, [sp, #32]
    4e58:	add	sp, sp, #0x50
    4e5c:	ret
    4e60:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4e64:	add	x8, x8, #0x0
    4e68:	mov	w22, #0x103                 	// #259
    4e6c:	mov	x0, x19
    4e70:	stp	x8, xzr, [sp]
    4e74:	strh	w22, [sp, #16]
    4e78:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    4e7c:	stur	x0, [x29, #-8]
    4e80:	sub	x0, x29, #0x8
    4e84:	mov	x2, sp
    4e88:	mov	w1, #0x1                   	// #1
    4e8c:	mov	w21, #0x1                   	// #1
    4e90:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    4e94:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4e98:	add	x8, x8, #0x0
    4e9c:	sub	x0, x29, #0x8
    4ea0:	mov	x2, sp
    4ea4:	mov	w1, #0x1                   	// #1
    4ea8:	strh	w22, [sp, #16]
    4eac:	stp	x8, xzr, [sp]
    4eb0:	stur	x20, [x29, #-8]
    4eb4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    4eb8:	b	4e48 <_ZN4llvm8TGParser20ParseOptionalBitListERNS_15SmallVectorImplIjEE+0xac>

0000000000004ebc <_ZN4llvm8TGParser9ParseTypeEv>:
    4ebc:	sub	sp, sp, #0x40
    4ec0:	stp	x29, x30, [sp, #32]
    4ec4:	stp	x20, x19, [sp, #48]
    4ec8:	add	x29, sp, #0x20
    4ecc:	ldr	w8, [x0, #40]
    4ed0:	mov	x19, x0
    4ed4:	sub	w8, w8, #0x13
    4ed8:	cmp	w8, #0x35
    4edc:	b.hi	4f1c <_ZN4llvm8TGParser9ParseTypeEv+0x60>  // b.pmore
    4ee0:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4ee4:	add	x9, x9, #0x0
    4ee8:	adr	x10, 4ef8 <_ZN4llvm8TGParser9ParseTypeEv+0x3c>
    4eec:	ldrb	w11, [x9, x8]
    4ef0:	add	x10, x10, x11, lsl #2
    4ef4:	br	x10
    4ef8:	ldp	x8, x9, [x19, #8]
    4efc:	mov	x0, x19
    4f00:	cmp	x8, x9
    4f04:	cset	w1, eq  // eq = none
    4f08:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4f0c:	str	w0, [x19, #40]
    4f10:	adrp	x0, 0 <_ZN4llvm8BitRecTy6SharedE>
    4f14:	ldr	x0, [x0]
    4f18:	b	5158 <_ZN4llvm8TGParser9ParseTypeEv+0x29c>
    4f1c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4f20:	add	x8, x8, #0x0
    4f24:	b	512c <_ZN4llvm8TGParser9ParseTypeEv+0x270>
    4f28:	ldp	x8, x9, [x19, #8]
    4f2c:	mov	x0, x19
    4f30:	cmp	x8, x9
    4f34:	cset	w1, eq  // eq = none
    4f38:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4f3c:	cmp	w0, #0xa
    4f40:	str	w0, [x19, #40]
    4f44:	b.ne	50e8 <_ZN4llvm8TGParser9ParseTypeEv+0x22c>  // b.any
    4f48:	ldp	x8, x9, [x19, #8]
    4f4c:	mov	x0, x19
    4f50:	cmp	x8, x9
    4f54:	cset	w1, eq  // eq = none
    4f58:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4f5c:	str	w0, [x19, #40]
    4f60:	mov	x0, x19
    4f64:	bl	4ebc <_ZN4llvm8TGParser9ParseTypeEv>
    4f68:	cbz	x0, 5158 <_ZN4llvm8TGParser9ParseTypeEv+0x29c>
    4f6c:	ldr	w8, [x19, #40]
    4f70:	cmp	w8, #0xb
    4f74:	b.ne	5118 <_ZN4llvm8TGParser9ParseTypeEv+0x25c>  // b.any
    4f78:	ldp	x8, x9, [x19, #8]
    4f7c:	mov	x20, x0
    4f80:	mov	x0, x19
    4f84:	cmp	x8, x9
    4f88:	cset	w1, eq  // eq = none
    4f8c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4f90:	str	w0, [x19, #40]
    4f94:	mov	x0, x20
    4f98:	ldp	x20, x19, [sp, #48]
    4f9c:	ldp	x29, x30, [sp, #32]
    4fa0:	add	sp, sp, #0x40
    4fa4:	b	0 <_ZN4llvm5RecTy9getListTyEv>
    4fa8:	ldp	x8, x9, [x19, #8]
    4fac:	mov	x0, x19
    4fb0:	cmp	x8, x9
    4fb4:	cset	w1, eq  // eq = none
    4fb8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4fbc:	cmp	w0, #0xa
    4fc0:	str	w0, [x19, #40]
    4fc4:	b.ne	50f4 <_ZN4llvm8TGParser9ParseTypeEv+0x238>  // b.any
    4fc8:	ldp	x8, x9, [x19, #8]
    4fcc:	mov	x0, x19
    4fd0:	cmp	x8, x9
    4fd4:	cset	w1, eq  // eq = none
    4fd8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4fdc:	cmp	w0, #0x46
    4fe0:	str	w0, [x19, #40]
    4fe4:	b.ne	510c <_ZN4llvm8TGParser9ParseTypeEv+0x250>  // b.any
    4fe8:	ldp	x8, x9, [x19, #8]
    4fec:	ldr	x20, [x19, #80]
    4ff0:	mov	x0, x19
    4ff4:	cmp	x8, x9
    4ff8:	cset	w1, eq  // eq = none
    4ffc:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5000:	cmp	w0, #0xb
    5004:	str	w0, [x19, #40]
    5008:	b.ne	5124 <_ZN4llvm8TGParser9ParseTypeEv+0x268>  // b.any
    500c:	ldp	x8, x9, [x19, #8]
    5010:	mov	x0, x19
    5014:	cmp	x8, x9
    5018:	cset	w1, eq  // eq = none
    501c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5020:	str	w0, [x19, #40]
    5024:	mov	w0, w20
    5028:	ldp	x20, x19, [sp, #48]
    502c:	ldp	x29, x30, [sp, #32]
    5030:	add	sp, sp, #0x40
    5034:	b	0 <_ZN4llvm9BitsRecTy3getEj>
    5038:	ldp	x8, x9, [x19, #8]
    503c:	mov	x0, x19
    5040:	cmp	x8, x9
    5044:	cset	w1, eq  // eq = none
    5048:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    504c:	str	w0, [x19, #40]
    5050:	adrp	x0, 0 <_ZN4llvm9CodeRecTy6SharedE>
    5054:	ldr	x0, [x0]
    5058:	b	5158 <_ZN4llvm8TGParser9ParseTypeEv+0x29c>
    505c:	ldp	x8, x9, [x19, #8]
    5060:	mov	x0, x19
    5064:	cmp	x8, x9
    5068:	cset	w1, eq  // eq = none
    506c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5070:	str	w0, [x19, #40]
    5074:	adrp	x0, 0 <_ZN4llvm8DagRecTy6SharedE>
    5078:	ldr	x0, [x0]
    507c:	b	5158 <_ZN4llvm8TGParser9ParseTypeEv+0x29c>
    5080:	ldp	x8, x9, [x19, #8]
    5084:	mov	x0, x19
    5088:	cmp	x8, x9
    508c:	cset	w1, eq  // eq = none
    5090:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5094:	str	w0, [x19, #40]
    5098:	adrp	x0, 0 <_ZN4llvm8IntRecTy6SharedE>
    509c:	ldr	x0, [x0]
    50a0:	b	5158 <_ZN4llvm8TGParser9ParseTypeEv+0x29c>
    50a4:	ldp	x8, x9, [x19, #8]
    50a8:	mov	x0, x19
    50ac:	cmp	x8, x9
    50b0:	cset	w1, eq  // eq = none
    50b4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    50b8:	str	w0, [x19, #40]
    50bc:	adrp	x0, 0 <_ZN4llvm11StringRecTy6SharedE>
    50c0:	ldr	x0, [x0]
    50c4:	b	5158 <_ZN4llvm8TGParser9ParseTypeEv+0x29c>
    50c8:	mov	x0, x19
    50cc:	bl	3e3c <_ZN4llvm8TGParser12ParseClassIDEv>
    50d0:	str	x0, [sp]
    50d4:	cbz	x0, 5100 <_ZN4llvm8TGParser9ParseTypeEv+0x244>
    50d8:	mov	x0, sp
    50dc:	mov	w1, #0x1                   	// #1
    50e0:	bl	0 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE>
    50e4:	b	5158 <_ZN4llvm8TGParser9ParseTypeEv+0x29c>
    50e8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    50ec:	add	x8, x8, #0x0
    50f0:	b	512c <_ZN4llvm8TGParser9ParseTypeEv+0x270>
    50f4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    50f8:	add	x8, x8, #0x0
    50fc:	b	512c <_ZN4llvm8TGParser9ParseTypeEv+0x270>
    5100:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5104:	add	x8, x8, #0x0
    5108:	b	512c <_ZN4llvm8TGParser9ParseTypeEv+0x270>
    510c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5110:	add	x8, x8, #0x0
    5114:	b	512c <_ZN4llvm8TGParser9ParseTypeEv+0x270>
    5118:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    511c:	add	x8, x8, #0x0
    5120:	b	512c <_ZN4llvm8TGParser9ParseTypeEv+0x270>
    5124:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5128:	add	x8, x8, #0x0
    512c:	mov	w9, #0x103                 	// #259
    5130:	mov	x0, x19
    5134:	stp	x8, xzr, [sp]
    5138:	strh	w9, [sp, #16]
    513c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    5140:	stur	x0, [x29, #-8]
    5144:	sub	x0, x29, #0x8
    5148:	mov	x2, sp
    514c:	mov	w1, #0x1                   	// #1
    5150:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    5154:	mov	x0, xzr
    5158:	ldp	x20, x19, [sp, #48]
    515c:	ldp	x29, x30, [sp, #32]
    5160:	add	sp, sp, #0x40
    5164:	ret

0000000000005168 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE>:
    5168:	sub	sp, sp, #0x90
    516c:	stp	x29, x30, [sp, #64]
    5170:	str	x25, [sp, #80]
    5174:	stp	x24, x23, [sp, #96]
    5178:	stp	x22, x21, [sp, #112]
    517c:	stp	x20, x19, [sp, #128]
    5180:	add	x29, sp, #0x40
    5184:	mov	w23, w4
    5188:	mov	x19, x3
    518c:	mov	x20, x2
    5190:	mov	x21, x1
    5194:	mov	x22, x0
    5198:	cbz	x1, 523c <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0xd4>
    519c:	ldr	w9, [x21, #80]
    51a0:	cbz	w9, 51e4 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x7c>
    51a4:	ldr	x8, [x21, #72]
    51a8:	add	x9, x9, x9, lsl #1
    51ac:	lsl	x9, x9, #3
    51b0:	mov	x10, x8
    51b4:	ldr	x11, [x10], #24
    51b8:	cmp	x11, x20
    51bc:	b.eq	51d0 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x68>  // b.none
    51c0:	subs	x9, x9, #0x18
    51c4:	mov	x8, x10
    51c8:	b.ne	51b4 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x4c>  // b.any
    51cc:	b	51e4 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x7c>
    51d0:	cbz	x8, 51e4 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x7c>
    51d4:	ldr	x8, [x8, #8]
    51d8:	mov	x0, x20
    51dc:	and	x1, x8, #0xfffffffffffffff8
    51e0:	b	5410 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x2a8>
    51e4:	ldrb	w8, [x21, #125]
    51e8:	cbz	w8, 523c <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0xd4>
    51ec:	ldr	x0, [x22, #328]
    51f0:	add	x25, x22, #0x148
    51f4:	cbnz	x0, 5248 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0xe0>
    51f8:	ldr	x24, [x21]
    51fc:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5200:	add	x0, x0, #0x0
    5204:	mov	w1, #0x1                   	// #1
    5208:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    520c:	mov	x1, x0
    5210:	mov	x0, x24
    5214:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
    5218:	mov	x1, x20
    521c:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
    5220:	cbz	x0, 545c <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x2f4>
    5224:	ldrb	w8, [x0, #8]
    5228:	cmp	w8, #0xb
    522c:	b.ne	5260 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0xf8>  // b.any
    5230:	mov	x1, x21
    5234:	bl	0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE>
    5238:	b	5260 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0xf8>
    523c:	ldr	x0, [x22, #328]
    5240:	cbz	x0, 52b4 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x14c>
    5244:	add	x25, x22, #0x148
    5248:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    524c:	add	x3, x3, #0x0
    5250:	mov	w4, #0x2                   	// #2
    5254:	mov	x1, x0
    5258:	mov	x2, x20
    525c:	bl	547c <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE>
    5260:	ldr	x8, [x25]
    5264:	cmp	x8, #0x0
    5268:	csel	x8, x21, x8, eq  // eq = none
    526c:	ldr	w10, [x8, #64]
    5270:	cbz	w10, 5290 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x128>
    5274:	ldr	x9, [x8, #56]
    5278:	lsl	x10, x10, #3
    527c:	ldr	x11, [x9], #8
    5280:	cmp	x11, x0
    5284:	b.eq	530c <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x1a4>  // b.none
    5288:	subs	x10, x10, #0x8
    528c:	b.ne	527c <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x114>  // b.any
    5290:	ldr	x8, [x20, #32]
    5294:	cmp	x8, #0x4
    5298:	b.ne	52b4 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x14c>  // b.any
    529c:	ldr	x8, [x20, #24]
    52a0:	mov	w9, #0x414e                	// #16718
    52a4:	movk	w9, #0x454d, lsl #16
    52a8:	ldr	w8, [x8]
    52ac:	cmp	w8, w9
    52b0:	b.eq	5408 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x2a0>  // b.none
    52b4:	ldr	x0, [x22, #336]
    52b8:	cbz	x0, 52c8 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x160>
    52bc:	ldp	x1, x2, [x20, #24]
    52c0:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    52c4:	cbnz	x0, 53ec <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x284>
    52c8:	ldp	x8, x9, [x22, #272]
    52cc:	cmp	x8, x9
    52d0:	b.ne	52f0 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x188>  // b.any
    52d4:	cmp	w23, #0x1
    52d8:	b.ne	536c <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x204>  // b.any
    52dc:	mov	x0, x20
    52e0:	b	53ec <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x284>
    52e4:	add	x8, x8, #0x8
    52e8:	cmp	x9, x8
    52ec:	b.eq	52d4 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x16c>  // b.none
    52f0:	ldr	x10, [x8]
    52f4:	ldr	x0, [x10, #8]
    52f8:	cbz	x0, 52e4 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x17c>
    52fc:	ldr	x10, [x0, #24]
    5300:	cmp	x10, x20
    5304:	b.ne	52e4 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x17c>  // b.any
    5308:	b	53ec <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x284>
    530c:	ldr	w9, [x8, #80]
    5310:	cbz	w9, 533c <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x1d4>
    5314:	ldr	x8, [x8, #72]
    5318:	add	x9, x9, x9, lsl #1
    531c:	lsl	x9, x9, #3
    5320:	mov	x10, x8
    5324:	ldr	x11, [x10], #24
    5328:	cmp	x11, x0
    532c:	b.eq	535c <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x1f4>  // b.none
    5330:	subs	x9, x9, #0x18
    5334:	mov	x8, x10
    5338:	b.ne	5324 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x1bc>  // b.any
    533c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5340:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5344:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5348:	add	x0, x0, #0x0
    534c:	add	x1, x1, #0x0
    5350:	add	x3, x3, #0x0
    5354:	mov	w2, #0x363                 	// #867
    5358:	bl	0 <__assert_fail>
    535c:	cbz	x8, 533c <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x1d4>
    5360:	ldr	x8, [x8, #8]
    5364:	and	x1, x8, #0xfffffffffffffff8
    5368:	b	5410 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x2a8>
    536c:	ldr	x0, [x22, #344]
    5370:	ldp	x1, x2, [x20, #24]
    5374:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5378:	cbnz	x0, 53ec <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x284>
    537c:	cbz	x21, 539c <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x234>
    5380:	ldrb	w8, [x21, #125]
    5384:	cbnz	w8, 539c <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x234>
    5388:	ldr	x8, [x22, #328]
    538c:	cbnz	x8, 539c <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x234>
    5390:	ldr	x8, [x21]
    5394:	cmp	x8, x20
    5398:	b.eq	542c <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x2c4>  // b.none
    539c:	ldur	q0, [x20, #24]
    53a0:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    53a4:	adrp	x12, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    53a8:	mov	w8, #0x503                 	// #1283
    53ac:	add	x9, x9, #0x0
    53b0:	mov	x10, sp
    53b4:	add	x11, sp, #0x10
    53b8:	add	x12, x12, #0x0
    53bc:	mov	w13, #0x302                 	// #770
    53c0:	add	x0, x29, #0x18
    53c4:	sub	x2, x29, #0x18
    53c8:	mov	w1, #0x1                   	// #1
    53cc:	strh	w8, [sp, #32]
    53d0:	stp	x9, x10, [sp, #16]
    53d4:	stp	x11, x12, [x29, #-24]
    53d8:	sturh	w13, [x29, #-8]
    53dc:	str	q0, [sp]
    53e0:	str	x19, [x29, #24]
    53e4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    53e8:	mov	x0, xzr
    53ec:	ldp	x20, x19, [sp, #128]
    53f0:	ldp	x22, x21, [sp, #112]
    53f4:	ldp	x24, x23, [sp, #96]
    53f8:	ldr	x25, [sp, #80]
    53fc:	ldp	x29, x30, [sp, #64]
    5400:	add	sp, sp, #0x90
    5404:	ret
    5408:	adrp	x1, 0 <_ZN4llvm11StringRecTy6SharedE>
    540c:	ldr	x1, [x1]
    5410:	ldp	x20, x19, [sp, #128]
    5414:	ldp	x22, x21, [sp, #112]
    5418:	ldp	x24, x23, [sp, #96]
    541c:	ldr	x25, [sp, #80]
    5420:	ldp	x29, x30, [sp, #64]
    5424:	add	sp, sp, #0x90
    5428:	b	0 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>
    542c:	mov	x0, x21
    5430:	bl	0 <_ZN4llvm6Record7getTypeEv>
    5434:	mov	x1, x20
    5438:	ldp	x20, x19, [sp, #128]
    543c:	ldp	x22, x21, [sp, #112]
    5440:	ldp	x24, x23, [sp, #96]
    5444:	ldr	x25, [sp, #80]
    5448:	ldp	x29, x30, [sp, #64]
    544c:	mov	x2, x0
    5450:	mov	w0, wzr
    5454:	add	sp, sp, #0x90
    5458:	b	0 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE>
    545c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5460:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5464:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5468:	add	x0, x0, #0x0
    546c:	add	x1, x1, #0x0
    5470:	add	x3, x3, #0x0
    5474:	mov	w2, #0x69                  	// #105
    5478:	bl	0 <__assert_fail>

000000000000547c <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE>:
    547c:	stp	x29, x30, [sp, #-64]!
    5480:	stp	x24, x23, [sp, #16]
    5484:	stp	x22, x21, [sp, #32]
    5488:	stp	x20, x19, [sp, #48]
    548c:	mov	x29, sp
    5490:	ldr	x24, [x0]
    5494:	mov	x19, x0
    5498:	mov	x21, x1
    549c:	mov	x0, x3
    54a0:	mov	x1, x4
    54a4:	mov	x23, x4
    54a8:	mov	x22, x3
    54ac:	mov	x20, x2
    54b0:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    54b4:	mov	x1, x0
    54b8:	mov	x0, x24
    54bc:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
    54c0:	mov	x1, x20
    54c4:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
    54c8:	mov	x20, x0
    54cc:	cbz	x21, 5514 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE+0x98>
    54d0:	cmp	x23, #0x2
    54d4:	b.ne	54e8 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE+0x6c>  // b.any
    54d8:	ldrh	w8, [x22]
    54dc:	mov	w9, #0x3a3a                	// #14906
    54e0:	cmp	w8, w9
    54e4:	b.eq	5514 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE+0x98>  // b.none
    54e8:	ldr	x21, [x21]
    54ec:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    54f0:	add	x0, x0, #0x0
    54f4:	mov	w1, #0x2                   	// #2
    54f8:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    54fc:	mov	x1, x0
    5500:	mov	x0, x21
    5504:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
    5508:	mov	x1, x20
    550c:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
    5510:	mov	x20, x0
    5514:	cbz	x20, 5554 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE+0xd8>
    5518:	ldrb	w8, [x20, #8]
    551c:	mov	x0, x20
    5520:	cmp	w8, #0xb
    5524:	b.ne	5540 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE+0xc4>  // b.any
    5528:	mov	x1, x19
    552c:	ldp	x20, x19, [sp, #48]
    5530:	ldp	x22, x21, [sp, #32]
    5534:	ldp	x24, x23, [sp, #16]
    5538:	ldp	x29, x30, [sp], #64
    553c:	b	0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE>
    5540:	ldp	x20, x19, [sp, #48]
    5544:	ldp	x22, x21, [sp, #32]
    5548:	ldp	x24, x23, [sp, #16]
    554c:	ldp	x29, x30, [sp], #64
    5550:	ret
    5554:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5558:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    555c:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5560:	add	x0, x0, #0x0
    5564:	add	x1, x1, #0x0
    5568:	add	x3, x3, #0x0
    556c:	mov	w2, #0x69                  	// #105
    5570:	bl	0 <__assert_fail>

0000000000005574 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE>:
    5574:	sub	sp, sp, #0x1d0
    5578:	stp	x29, x30, [sp, #368]
    557c:	stp	x28, x27, [sp, #384]
    5580:	stp	x26, x25, [sp, #400]
    5584:	stp	x24, x23, [sp, #416]
    5588:	stp	x22, x21, [sp, #432]
    558c:	stp	x20, x19, [sp, #448]
    5590:	add	x29, sp, #0x170
    5594:	ldr	w28, [x0, #40]
    5598:	mov	x19, x0
    559c:	sub	w21, w28, #0x27
    55a0:	cmp	w21, #0x1e
    55a4:	b.hi	5c58 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x6e4>  // b.pmore
    55a8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    55ac:	add	x8, x8, #0x0
    55b0:	adr	x9, 55c8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x54>
    55b4:	ldrh	w10, [x8, x21, lsl #1]
    55b8:	add	x9, x9, x10, lsl #2
    55bc:	mov	x22, x2
    55c0:	mov	x20, x1
    55c4:	br	x9
    55c8:	mov	x0, x19
    55cc:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    55d0:	ldp	x8, x9, [x19, #8]
    55d4:	mov	x27, x0
    55d8:	mov	x0, x19
    55dc:	cmp	x8, x9
    55e0:	cset	w1, eq  // eq = none
    55e4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    55e8:	cmp	w21, #0x1d
    55ec:	str	w0, [x19, #40]
    55f0:	b.hi	7a18 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24a4>  // b.pmore
    55f4:	adrp	x23, 0 <_ZN4llvm8DagRecTy6SharedE>
    55f8:	ldr	x23, [x23]
    55fc:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5600:	add	x8, x8, #0x0
    5604:	adr	x9, 5628 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xb4>
    5608:	ldrh	w10, [x8, x21, lsl #1]
    560c:	add	x9, x9, x10, lsl #2
    5610:	mov	x28, xzr
    5614:	mov	x25, xzr
    5618:	mov	w24, #0x8                   	// #8
    561c:	mov	w26, #0xa                   	// #10
    5620:	mov	x21, x23
    5624:	br	x9
    5628:	adrp	x23, 0 <_ZN4llvm8IntRecTy6SharedE>
    562c:	ldr	x23, [x23]
    5630:	mov	w26, wzr
    5634:	b	5ce8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x774>
    5638:	ldp	x8, x9, [x19, #8]
    563c:	mov	x0, x19
    5640:	cmp	x8, x9
    5644:	cset	w1, eq  // eq = none
    5648:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    564c:	cmp	w28, #0x33
    5650:	str	w0, [x19, #40]
    5654:	b.eq	5f58 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x9e4>  // b.none
    5658:	cmp	w28, #0x3a
    565c:	b.eq	5ecc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x958>  // b.none
    5660:	cmp	w28, #0x3e
    5664:	b.ne	7ac8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2554>  // b.any
    5668:	adrp	x25, 0 <_ZN4llvm8DagRecTy6SharedE>
    566c:	ldr	x25, [x25]
    5670:	mov	x22, xzr
    5674:	mov	w21, #0x3                   	// #3
    5678:	cmp	w0, #0x8
    567c:	b.ne	5edc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x968>  // b.any
    5680:	ldp	x8, x9, [x19, #8]
    5684:	mov	x0, x19
    5688:	cmp	x8, x9
    568c:	cset	w1, eq  // eq = none
    5690:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5694:	str	w0, [x19, #40]
    5698:	mov	x0, x19
    569c:	mov	x1, x20
    56a0:	mov	x2, xzr
    56a4:	mov	w3, wzr
    56a8:	bl	34f4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    56ac:	cbz	x0, 5d50 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7dc>
    56b0:	ldr	w8, [x19, #40]
    56b4:	cmp	w8, #0xe
    56b8:	b.ne	6a68 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x14f4>  // b.any
    56bc:	ldp	x8, x9, [x19, #8]
    56c0:	mov	x23, x0
    56c4:	mov	x0, x19
    56c8:	cmp	x8, x9
    56cc:	cset	w1, eq  // eq = none
    56d0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    56d4:	str	w0, [x19, #40]
    56d8:	mov	x0, x19
    56dc:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    56e0:	mov	x26, x0
    56e4:	mov	x0, x19
    56e8:	mov	x1, x20
    56ec:	mov	x2, x22
    56f0:	mov	w3, wzr
    56f4:	bl	34f4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    56f8:	cbz	x0, 5d50 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7dc>
    56fc:	ldr	w8, [x19, #40]
    5700:	cmp	w8, #0xe
    5704:	b.ne	6a68 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x14f4>  // b.any
    5708:	ldp	x8, x9, [x19, #8]
    570c:	mov	x24, x0
    5710:	mov	x0, x19
    5714:	cmp	x8, x9
    5718:	cset	w1, eq  // eq = none
    571c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5720:	str	w0, [x19, #40]
    5724:	mov	x0, x19
    5728:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    572c:	mov	x27, x0
    5730:	mov	x0, x19
    5734:	mov	x1, x20
    5738:	mov	x2, x22
    573c:	mov	w3, wzr
    5740:	bl	34f4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    5744:	cbz	x0, 5d50 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7dc>
    5748:	ldr	w8, [x19, #40]
    574c:	cmp	w8, #0x9
    5750:	b.ne	6a74 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1500>  // b.any
    5754:	ldp	x8, x9, [x19, #8]
    5758:	mov	x22, x0
    575c:	mov	x0, x19
    5760:	cmp	x8, x9
    5764:	cset	w1, eq  // eq = none
    5768:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    576c:	cmp	w28, #0x33
    5770:	str	w0, [x19, #40]
    5774:	b.eq	6e88 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1914>  // b.none
    5778:	cmp	w28, #0x3a
    577c:	b.eq	6e70 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x18fc>  // b.none
    5780:	cmp	w28, #0x3e
    5784:	b.ne	7b60 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x25ec>  // b.any
    5788:	ldrb	w9, [x24, #8]
    578c:	sub	w8, w9, #0x1
    5790:	cmp	w8, #0x17
    5794:	b.cs	6f00 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x198c>  // b.hs, b.nlast
    5798:	ldr	x0, [x24, #16]
    579c:	cbz	x0, 7a88 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2514>
    57a0:	ldr	w9, [x0, #8]
    57a4:	cmp	w9, #0x5
    57a8:	b.eq	6f08 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1994>  // b.none
    57ac:	ldr	x8, [x0]
    57b0:	sub	x19, x29, #0x90
    57b4:	ldr	x9, [x8, #16]
    57b8:	sub	x8, x29, #0x90
    57bc:	blr	x9
    57c0:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    57c4:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    57c8:	add	x8, x8, #0x0
    57cc:	mov	w9, #0x403                 	// #1027
    57d0:	add	x10, sp, #0x20
    57d4:	add	x11, x11, #0x0
    57d8:	mov	w12, #0x302                 	// #770
    57dc:	stp	x8, x19, [sp, #32]
    57e0:	strh	w9, [sp, #48]
    57e4:	stp	x10, x11, [x29, #-176]
    57e8:	sturh	w12, [x29, #-160]
    57ec:	cbnz	wzr, 7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>
    57f0:	ldrb	w8, [sp, #49]
    57f4:	cmp	w8, #0x1
    57f8:	b.eq	7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>  // b.none
    57fc:	sub	x0, x29, #0x30
    5800:	sub	x2, x29, #0xb0
    5804:	mov	w1, #0x1                   	// #1
    5808:	stur	x26, [x29, #-48]
    580c:	b	60e4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xb70>
    5810:	ldp	x8, x9, [x19, #8]
    5814:	mov	x0, x19
    5818:	cmp	x8, x9
    581c:	cset	w1, eq  // eq = none
    5820:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5824:	str	w0, [x19, #40]
    5828:	adrp	x21, 0 <_ZN4llvm8IntRecTy6SharedE>
    582c:	ldr	x21, [x21]
    5830:	mov	w22, #0x4                   	// #4
    5834:	cmp	w0, #0x8
    5838:	b.eq	6244 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xcd0>  // b.none
    583c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5840:	add	x8, x8, #0x0
    5844:	b	5d28 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7b4>
    5848:	adrp	x21, 0 <_ZN4llvm8BitRecTy6SharedE>
    584c:	ldr	x21, [x21]
    5850:	mov	x23, xzr
    5854:	mov	w26, #0xb                   	// #11
    5858:	b	5cec <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x778>
    585c:	adrp	x21, 0 <_ZN4llvm8BitRecTy6SharedE>
    5860:	ldr	x21, [x21]
    5864:	mov	x23, xzr
    5868:	mov	w26, #0xc                   	// #12
    586c:	b	5cec <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x778>
    5870:	mov	x28, xzr
    5874:	mov	w24, #0x7                   	// #7
    5878:	mov	x25, x22
    587c:	cmp	w0, #0x8
    5880:	b.ne	5d20 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7ac>  // b.any
    5884:	str	x27, [sp]
    5888:	ldp	x8, x9, [x19, #8]
    588c:	mov	x0, x19
    5890:	cmp	x8, x9
    5894:	cset	w1, eq  // eq = none
    5898:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    589c:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    58a0:	ldr	d0, [x9]
    58a4:	sub	x8, x29, #0x90
    58a8:	sub	w26, w24, #0xb
    58ac:	add	x27, x8, #0x10
    58b0:	str	w0, [x19, #40]
    58b4:	stur	x27, [x29, #-144]
    58b8:	stur	d0, [x29, #-136]
    58bc:	mov	x0, x19
    58c0:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    58c4:	mov	x23, x0
    58c8:	mov	x0, x19
    58cc:	mov	x1, x20
    58d0:	mov	x2, x25
    58d4:	mov	w3, wzr
    58d8:	bl	34f4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    58dc:	ldp	w8, w9, [x29, #-136]
    58e0:	mov	x21, x0
    58e4:	cmp	w8, w9
    58e8:	b.cs	5a74 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x500>  // b.hs, b.nlast
    58ec:	ldur	x9, [x29, #-144]
    58f0:	str	x21, [x9, w8, uxtw #3]
    58f4:	ldp	w8, w9, [x29, #-136]
    58f8:	cmp	w8, w9
    58fc:	b.cs	79d8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2464>  // b.hs, b.nlast
    5900:	ldur	x10, [x29, #-144]
    5904:	add	x9, x8, #0x1
    5908:	stur	w9, [x29, #-136]
    590c:	add	x10, x10, x9, lsl #3
    5910:	ldur	x10, [x10, #-8]
    5914:	cbz	x10, 6904 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1390>
    5918:	ldrb	w11, [x10, #8]
    591c:	sub	w11, w11, #0x1
    5920:	cmp	w11, #0x17
    5924:	b.cs	79f8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2484>  // b.hs, b.nlast
    5928:	ldr	x21, [x10, #16]
    592c:	cbz	x25, 5958 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3e4>
    5930:	mov	x0, x25
    5934:	mov	x1, x21
    5938:	bl	0 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_>
    593c:	cbz	x0, 5b44 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x5d0>
    5940:	cmp	w24, #0x7
    5944:	b.cc	59e0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x46c>  // b.lo, b.ul, b.last
    5948:	mov	x25, x0
    594c:	cmp	w24, #0x11
    5950:	b.eq	59d0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x45c>  // b.none
    5954:	b	59e0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x46c>
    5958:	cmp	w26, #0x2
    595c:	b.cc	5988 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x414>  // b.lo, b.ul, b.last
    5960:	cmp	w24, #0x8
    5964:	b.eq	5a08 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x494>  // b.none
    5968:	cmp	w24, #0x7
    596c:	b.ne	7a70 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24fc>  // b.any
    5970:	cbz	x21, 7a88 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2514>
    5974:	ldr	w8, [x21, #8]
    5978:	mov	x25, x21
    597c:	cmp	w8, #0x5
    5980:	b.eq	59c8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x454>  // b.none
    5984:	b	6604 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1090>
    5988:	ldr	x8, [x21]
    598c:	adrp	x1, 0 <_ZN4llvm8IntRecTy6SharedE>
    5990:	mov	x0, x21
    5994:	ldr	x8, [x8, #24]
    5998:	ldr	x1, [x1]
    599c:	blr	x8
    59a0:	mov	x25, x21
    59a4:	tbnz	w0, #0, 59c8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x454>
    59a8:	ldr	x8, [x21]
    59ac:	adrp	x1, 0 <_ZN4llvm11StringRecTy6SharedE>
    59b0:	mov	x0, x21
    59b4:	ldr	x8, [x8, #24]
    59b8:	ldr	x1, [x1]
    59bc:	blr	x8
    59c0:	mov	x25, x21
    59c4:	tbz	w0, #0, 662c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x10b8>
    59c8:	cmp	w24, #0x11
    59cc:	b.ne	59e0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x46c>  // b.any
    59d0:	mov	x0, xzr
    59d4:	mov	x1, xzr
    59d8:	bl	0 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE>
    59dc:	mov	x25, x0
    59e0:	ldr	w8, [x19, #40]
    59e4:	cmp	w8, #0xe
    59e8:	b.ne	5a90 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x51c>  // b.any
    59ec:	ldp	x8, x9, [x19, #8]
    59f0:	mov	x0, x19
    59f4:	cmp	x8, x9
    59f8:	cset	w1, eq  // eq = none
    59fc:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5a00:	str	w0, [x19, #40]
    5a04:	b	58bc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x348>
    5a08:	cbz	x22, 5a3c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x4c8>
    5a0c:	cbnz	w8, 5a3c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x4c8>
    5a10:	ldr	w8, [x22, #8]
    5a14:	cmp	w8, #0x5
    5a18:	b.ne	6708 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1194>  // b.any
    5a1c:	mov	x0, x21
    5a20:	bl	0 <_ZN4llvm5RecTy9getListTyEv>
    5a24:	ldr	x8, [x0]
    5a28:	mov	x1, x22
    5a2c:	ldr	x8, [x8, #24]
    5a30:	blr	x8
    5a34:	tbz	w0, #0, 67f8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1284>
    5a38:	ldur	w9, [x29, #-136]
    5a3c:	cmp	w9, #0x2
    5a40:	b.ne	5a64 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x4f0>  // b.any
    5a44:	cbz	x21, 7aa8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2534>
    5a48:	ldr	w8, [x21, #8]
    5a4c:	cmp	w8, #0x3
    5a50:	b.ne	6774 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1200>  // b.any
    5a54:	mov	x25, xzr
    5a58:	cmp	w24, #0x11
    5a5c:	b.ne	59e0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x46c>  // b.any
    5a60:	b	59d0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x45c>
    5a64:	mov	x25, xzr
    5a68:	cmp	w24, #0x11
    5a6c:	b.eq	59d0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x45c>  // b.none
    5a70:	b	59e0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x46c>
    5a74:	sub	x0, x29, #0x90
    5a78:	mov	w3, #0x8                   	// #8
    5a7c:	mov	x1, x27
    5a80:	mov	x2, xzr
    5a84:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    5a88:	ldur	w8, [x29, #-136]
    5a8c:	b	58ec <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x378>
    5a90:	cmp	w8, #0x9
    5a94:	b.ne	5bb4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x640>  // b.any
    5a98:	ldp	x8, x9, [x19, #8]
    5a9c:	mov	x0, x19
    5aa0:	cmp	x8, x9
    5aa4:	cset	w1, eq  // eq = none
    5aa8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5aac:	cmp	w24, #0x7
    5ab0:	csel	x21, x25, x28, eq  // eq = none
    5ab4:	cmp	w24, #0xa
    5ab8:	str	w0, [x19, #40]
    5abc:	b.hi	68a8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1334>  // b.pmore
    5ac0:	ldr	x19, [sp]
    5ac4:	mov	w8, #0x1                   	// #1
    5ac8:	lsl	w8, w8, w24
    5acc:	mov	w9, #0x68f                 	// #1679
    5ad0:	tst	w8, w9
    5ad4:	b.eq	6654 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x10e0>  // b.none
    5ad8:	ldur	w8, [x29, #-136]
    5adc:	cmp	w8, #0x3
    5ae0:	b.cc	68b0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x133c>  // b.lo, b.ul, b.last
    5ae4:	ldur	w9, [x29, #-132]
    5ae8:	mov	w10, w8
    5aec:	sub	x8, x10, #0x1
    5af0:	cmp	x8, x9
    5af4:	b.hi	79d8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2464>  // b.pmore
    5af8:	ldur	x9, [x29, #-144]
    5afc:	sub	x9, x9, #0x8
    5b00:	ldr	x2, [x9, x10, lsl #3]
    5b04:	stur	w8, [x29, #-136]
    5b08:	cbz	w8, 7a50 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24dc>
    5b0c:	ldr	x1, [x9, x8, lsl #3]
    5b10:	mov	w0, w24
    5b14:	mov	x3, x21
    5b18:	bl	0 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE>
    5b1c:	mov	x1, x20
    5b20:	bl	0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE>
    5b24:	ldur	w8, [x29, #-136]
    5b28:	cbz	w8, 7a50 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24dc>
    5b2c:	ldur	x9, [x29, #-144]
    5b30:	cmp	w8, #0x2
    5b34:	add	x9, x9, x8, lsl #3
    5b38:	stur	x0, [x9, #-8]
    5b3c:	b.hi	5ae4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x570>  // b.pmore
    5b40:	b	68ac <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1338>
    5b44:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5b48:	add	x8, x8, #0x0
    5b4c:	mov	w9, #0x103                 	// #259
    5b50:	stp	x8, xzr, [sp, #136]
    5b54:	strh	w9, [sp, #152]
    5b58:	ldr	x8, [x25]
    5b5c:	mov	x0, x25
    5b60:	sub	x20, x29, #0xb0
    5b64:	ldr	x9, [x8, #16]
    5b68:	sub	x8, x29, #0xb0
    5b6c:	blr	x9
    5b70:	ldrb	w19, [sp, #152]
    5b74:	mov	w8, #0x104                 	// #260
    5b78:	strh	w8, [sp, #128]
    5b7c:	stp	x20, xzr, [sp, #112]
    5b80:	cmp	w19, #0x1
    5b84:	b.eq	6330 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xdbc>  // b.none
    5b88:	add	x22, sp, #0xa0
    5b8c:	cbnz	w19, 634c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xdd8>
    5b90:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5b94:	mov	w8, #0x100                 	// #256
    5b98:	add	x9, x9, #0x0
    5b9c:	mov	w10, #0x103                 	// #259
    5ba0:	stp	xzr, xzr, [sp, #160]
    5ba4:	strh	w8, [sp, #176]
    5ba8:	stp	x9, xzr, [sp, #88]
    5bac:	strh	w10, [sp, #104]
    5bb0:	b	63d4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xe60>
    5bb4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5bb8:	add	x8, x8, #0x0
    5bbc:	mov	w9, #0x103                 	// #259
    5bc0:	mov	x0, x19
    5bc4:	stp	x8, xzr, [x29, #-176]
    5bc8:	sturh	w9, [x29, #-160]
    5bcc:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    5bd0:	str	x0, [sp, #32]
    5bd4:	b	68f4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1380>
    5bd8:	ldp	x8, x9, [x19, #8]
    5bdc:	mov	x0, x19
    5be0:	cmp	x8, x9
    5be4:	cset	w1, eq  // eq = none
    5be8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5bec:	mov	x21, xzr
    5bf0:	str	w0, [x19, #40]
    5bf4:	mov	w22, #0x2                   	// #2
    5bf8:	cmp	w0, #0x8
    5bfc:	b.ne	583c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2c8>  // b.any
    5c00:	b	6244 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xcd0>
    5c04:	ldp	x8, x9, [x19, #8]
    5c08:	mov	x0, x19
    5c0c:	cmp	x8, x9
    5c10:	cset	w1, eq  // eq = none
    5c14:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5c18:	mov	x21, xzr
    5c1c:	str	w0, [x19, #40]
    5c20:	mov	w22, #0x1                   	// #1
    5c24:	cmp	w0, #0x8
    5c28:	b.ne	583c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2c8>  // b.any
    5c2c:	b	6244 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xcd0>
    5c30:	adrp	x23, 0 <_ZN4llvm8IntRecTy6SharedE>
    5c34:	ldr	x23, [x23]
    5c38:	mov	w26, #0x6                   	// #6
    5c3c:	b	5ce8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x774>
    5c40:	adrp	x21, 0 <_ZN4llvm8BitRecTy6SharedE>
    5c44:	adrp	x23, 0 <_ZN4llvm8IntRecTy6SharedE>
    5c48:	ldr	x21, [x21]
    5c4c:	ldr	x23, [x23]
    5c50:	mov	w26, #0xf                   	// #15
    5c54:	b	5cec <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x778>
    5c58:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5c5c:	add	x8, x8, #0x0
    5c60:	b	5d28 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7b4>
    5c64:	adrp	x23, 0 <_ZN4llvm8IntRecTy6SharedE>
    5c68:	ldr	x23, [x23]
    5c6c:	mov	w26, #0x3                   	// #3
    5c70:	b	5ce8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x774>
    5c74:	adrp	x21, 0 <_ZN4llvm8BitRecTy6SharedE>
    5c78:	adrp	x23, 0 <_ZN4llvm8IntRecTy6SharedE>
    5c7c:	ldr	x21, [x21]
    5c80:	ldr	x23, [x23]
    5c84:	mov	w26, #0xd                   	// #13
    5c88:	b	5cec <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x778>
    5c8c:	adrp	x23, 0 <_ZN4llvm8IntRecTy6SharedE>
    5c90:	ldr	x23, [x23]
    5c94:	mov	w26, #0x5                   	// #5
    5c98:	b	5ce8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x774>
    5c9c:	adrp	x23, 0 <_ZN4llvm11StringRecTy6SharedE>
    5ca0:	ldr	x23, [x23]
    5ca4:	mov	w26, #0x9                   	// #9
    5ca8:	b	5ce8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x774>
    5cac:	adrp	x23, 0 <_ZN4llvm8IntRecTy6SharedE>
    5cb0:	ldr	x23, [x23]
    5cb4:	mov	w26, #0x4                   	// #4
    5cb8:	b	5ce8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x774>
    5cbc:	adrp	x23, 0 <_ZN4llvm8IntRecTy6SharedE>
    5cc0:	ldr	x23, [x23]
    5cc4:	mov	w26, #0x2                   	// #2
    5cc8:	b	5ce8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x774>
    5ccc:	adrp	x23, 0 <_ZN4llvm8IntRecTy6SharedE>
    5cd0:	ldr	x23, [x23]
    5cd4:	mov	w26, #0x1                   	// #1
    5cd8:	b	5ce8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x774>
    5cdc:	adrp	x23, 0 <_ZN4llvm8DagRecTy6SharedE>
    5ce0:	ldr	x23, [x23]
    5ce4:	mov	w26, #0x11                  	// #17
    5ce8:	mov	x21, x23
    5cec:	cbz	x22, 5d0c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x798>
    5cf0:	ldr	x8, [x21]
    5cf4:	mov	x0, x21
    5cf8:	mov	x1, x22
    5cfc:	ldr	x8, [x8, #24]
    5d00:	blr	x8
    5d04:	tbz	w0, #0, 5d78 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x804>
    5d08:	ldr	w0, [x19, #40]
    5d0c:	mov	x28, x21
    5d10:	mov	x25, x23
    5d14:	mov	w24, w26
    5d18:	cmp	w0, #0x8
    5d1c:	b.eq	5884 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x310>  // b.none
    5d20:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5d24:	add	x8, x8, #0x0
    5d28:	mov	w9, #0x103                 	// #259
    5d2c:	mov	x0, x19
    5d30:	stp	x8, xzr, [x29, #-144]
    5d34:	sturh	w9, [x29, #-128]
    5d38:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    5d3c:	stur	x0, [x29, #-176]
    5d40:	sub	x0, x29, #0xb0
    5d44:	sub	x2, x29, #0x90
    5d48:	mov	w1, #0x1                   	// #1
    5d4c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    5d50:	mov	x19, xzr
    5d54:	mov	x0, x19
    5d58:	ldp	x20, x19, [sp, #448]
    5d5c:	ldp	x22, x21, [sp, #432]
    5d60:	ldp	x24, x23, [sp, #416]
    5d64:	ldp	x26, x25, [sp, #400]
    5d68:	ldp	x28, x27, [sp, #384]
    5d6c:	ldp	x29, x30, [sp, #368]
    5d70:	add	sp, sp, #0x1d0
    5d74:	ret
    5d78:	ldr	x8, [x22]
    5d7c:	mov	x0, x22
    5d80:	sub	x19, x29, #0x90
    5d84:	ldr	x9, [x8, #16]
    5d88:	sub	x8, x29, #0x90
    5d8c:	blr	x9
    5d90:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5d94:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5d98:	add	x8, x8, #0x0
    5d9c:	mov	w9, #0x403                 	// #1027
    5da0:	sub	x10, x29, #0x70
    5da4:	add	x11, x11, #0x0
    5da8:	mov	w12, #0x302                 	// #770
    5dac:	stp	x8, x19, [x29, #-112]
    5db0:	sturh	w9, [x29, #-96]
    5db4:	stp	x10, x11, [x29, #-80]
    5db8:	sturh	w12, [x29, #-64]
    5dbc:	cbnz	wzr, 7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>
    5dc0:	ldurb	w8, [x29, #-95]
    5dc4:	cmp	w8, #0x1
    5dc8:	b.eq	7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>  // b.none
    5dcc:	ldr	x8, [x21]
    5dd0:	mov	x0, x21
    5dd4:	sub	x19, x29, #0xb0
    5dd8:	ldr	x9, [x8, #16]
    5ddc:	sub	x8, x29, #0xb0
    5de0:	blr	x9
    5de4:	ldurb	w8, [x29, #-63]
    5de8:	ldur	x9, [x29, #-80]
    5dec:	sub	x10, x29, #0x50
    5df0:	mov	w11, #0x402                 	// #1026
    5df4:	cmp	w8, #0x1
    5df8:	csel	x8, x9, x10, eq  // eq = none
    5dfc:	stp	x8, x19, [x29, #-48]
    5e00:	sturh	w11, [x29, #-32]
    5e04:	ldrb	w9, [x8, #16]
    5e08:	cbz	w9, 7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>
    5e0c:	ldrb	w8, [x8, #17]
    5e10:	cmp	w8, #0x1
    5e14:	b.eq	7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>  // b.none
    5e18:	ldurb	w8, [x29, #-31]
    5e1c:	ldur	x9, [x29, #-48]
    5e20:	sub	x10, x29, #0x30
    5e24:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5e28:	cmp	w8, #0x1
    5e2c:	add	x11, x11, #0x0
    5e30:	mov	w12, #0x302                 	// #770
    5e34:	csel	x8, x9, x10, eq  // eq = none
    5e38:	stp	x8, x11, [sp, #32]
    5e3c:	strh	w12, [sp, #48]
    5e40:	ldrb	w9, [x8, #16]
    5e44:	cbz	w9, 7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>
    5e48:	ldrb	w8, [x8, #17]
    5e4c:	cmp	w8, #0x1
    5e50:	b.eq	7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>  // b.none
    5e54:	add	x0, sp, #0xa0
    5e58:	add	x2, sp, #0x20
    5e5c:	mov	w1, #0x1                   	// #1
    5e60:	str	x27, [sp, #160]
    5e64:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    5e68:	ldur	x0, [x29, #-176]
    5e6c:	sub	x8, x29, #0xb0
    5e70:	add	x8, x8, #0x10
    5e74:	cmp	x0, x8
    5e78:	b.eq	5e80 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x90c>  // b.none
    5e7c:	bl	0 <_ZdlPv>
    5e80:	ldur	x0, [x29, #-144]
    5e84:	sub	x8, x29, #0x90
    5e88:	add	x8, x8, #0x10
    5e8c:	cmp	x0, x8
    5e90:	b.eq	5d50 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7dc>  // b.none
    5e94:	bl	0 <_ZdlPv>
    5e98:	b	5d50 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7dc>
    5e9c:	ldp	x8, x9, [x19, #8]
    5ea0:	mov	x0, x19
    5ea4:	cmp	x8, x9
    5ea8:	cset	w1, eq  // eq = none
    5eac:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5eb0:	str	w0, [x19, #40]
    5eb4:	mov	x0, x19
    5eb8:	bl	7b78 <_ZN4llvm8TGParser17ParseOperatorTypeEv>
    5ebc:	cbz	x0, 6218 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xca4>
    5ec0:	mov	x21, x0
    5ec4:	mov	w22, wzr
    5ec8:	b	6238 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xcc4>
    5ecc:	mov	x25, xzr
    5ed0:	mov	w21, #0x2                   	// #2
    5ed4:	cmp	w0, #0x8
    5ed8:	b.eq	5680 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x10c>  // b.none
    5edc:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5ee0:	add	x8, x8, #0x0
    5ee4:	b	5d28 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7b4>
    5ee8:	ldp	x8, x9, [x19, #8]
    5eec:	mov	x0, x19
    5ef0:	cmp	x8, x9
    5ef4:	cset	w1, eq  // eq = none
    5ef8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5efc:	cmp	w0, #0xa
    5f00:	str	w0, [x19, #40]
    5f04:	b.ne	6224 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xcb0>  // b.any
    5f08:	mov	x0, x19
    5f0c:	bl	7b78 <_ZN4llvm8TGParser17ParseOperatorTypeEv>
    5f10:	cbz	x0, 6218 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xca4>
    5f14:	ldr	w8, [x0, #8]
    5f18:	mov	x21, x0
    5f1c:	cmp	w8, #0x7
    5f20:	b.eq	6234 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xcc0>  // b.none
    5f24:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5f28:	add	x8, x8, #0x0
    5f2c:	mov	w9, #0x103                 	// #259
    5f30:	mov	x0, x19
    5f34:	stp	x8, xzr, [x29, #-144]
    5f38:	sturh	w9, [x29, #-128]
    5f3c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    5f40:	stur	x0, [x29, #-176]
    5f44:	sub	x0, x29, #0xb0
    5f48:	sub	x2, x29, #0x90
    5f4c:	mov	w1, #0x1                   	// #1
    5f50:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    5f54:	b	6234 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xcc0>
    5f58:	mov	x25, xzr
    5f5c:	mov	w21, wzr
    5f60:	cmp	w0, #0x8
    5f64:	b.eq	5680 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x10c>  // b.none
    5f68:	b	5edc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x968>
    5f6c:	mov	x0, x19
    5f70:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    5f74:	ldp	x8, x9, [x19, #8]
    5f78:	mov	x23, x0
    5f7c:	mov	x0, x19
    5f80:	cmp	x8, x9
    5f84:	cset	w1, eq  // eq = none
    5f88:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5f8c:	cmp	w0, #0x8
    5f90:	str	w0, [x19, #40]
    5f94:	b.ne	6318 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xda4>  // b.any
    5f98:	ldp	x8, x9, [x19, #8]
    5f9c:	mov	x0, x19
    5fa0:	cmp	x8, x9
    5fa4:	cset	w1, eq  // eq = none
    5fa8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5fac:	cmp	w0, #0x48
    5fb0:	str	w0, [x19, #40]
    5fb4:	b.ne	644c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xed8>  // b.any
    5fb8:	ldp	x0, x1, [x19, #48]
    5fbc:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    5fc0:	mov	x21, x0
    5fc4:	cbz	x20, 69d4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1460>
    5fc8:	ldr	w8, [x20, #80]
    5fcc:	cbz	w8, 69d4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1460>
    5fd0:	ldr	x10, [x20, #72]
    5fd4:	add	x8, x8, x8, lsl #1
    5fd8:	lsl	x8, x8, #3
    5fdc:	mov	x9, x10
    5fe0:	ldr	x11, [x9], #24
    5fe4:	cmp	x11, x21
    5fe8:	b.eq	6924 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x13b0>  // b.none
    5fec:	subs	x8, x8, #0x18
    5ff0:	mov	x10, x9
    5ff4:	b.ne	5fe0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xa6c>  // b.any
    5ff8:	b	69d4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1460>
    5ffc:	adrp	x21, 0 <_ZN4llvm8BitRecTy6SharedE>
    6000:	adrp	x23, 0 <_ZN4llvm8IntRecTy6SharedE>
    6004:	ldr	x21, [x21]
    6008:	ldr	x23, [x23]
    600c:	mov	w26, #0xe                   	// #14
    6010:	b	5cec <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x778>
    6014:	ldp	x8, x9, [x19, #8]
    6018:	mov	x0, x19
    601c:	cmp	x8, x9
    6020:	cset	w1, eq  // eq = none
    6024:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6028:	cmp	w0, #0x8
    602c:	str	w0, [x19, #40]
    6030:	b.ne	6324 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xdb0>  // b.any
    6034:	ldp	x8, x9, [x19, #8]
    6038:	mov	x0, x19
    603c:	cmp	x8, x9
    6040:	cset	w1, eq  // eq = none
    6044:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6048:	str	w0, [x19, #40]
    604c:	mov	x0, x19
    6050:	mov	x1, x20
    6054:	mov	x2, xzr
    6058:	mov	w3, wzr
    605c:	bl	34f4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    6060:	cbz	x0, 5d50 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7dc>
    6064:	ldrb	w8, [x0, #8]
    6068:	mov	x22, x0
    606c:	sub	w8, w8, #0x1
    6070:	cmp	w8, #0x17
    6074:	b.cc	6690 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x111c>  // b.lo, b.ul, b.last
    6078:	ldr	x8, [x22]
    607c:	mov	x0, x22
    6080:	sub	x20, x29, #0x90
    6084:	ldr	x9, [x8, #40]
    6088:	sub	x8, x29, #0x90
    608c:	blr	x9
    6090:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6094:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6098:	add	x8, x8, #0x0
    609c:	mov	w9, #0x403                 	// #1027
    60a0:	add	x10, sp, #0x20
    60a4:	add	x11, x11, #0x0
    60a8:	mov	w12, #0x302                 	// #770
    60ac:	stp	x8, x20, [sp, #32]
    60b0:	strh	w9, [sp, #48]
    60b4:	stp	x10, x11, [x29, #-176]
    60b8:	sturh	w12, [x29, #-160]
    60bc:	cbnz	wzr, 7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>
    60c0:	ldrb	w8, [sp, #49]
    60c4:	cmp	w8, #0x1
    60c8:	b.eq	7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>  // b.none
    60cc:	mov	x0, x19
    60d0:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    60d4:	stur	x0, [x29, #-48]
    60d8:	sub	x0, x29, #0x30
    60dc:	sub	x2, x29, #0xb0
    60e0:	mov	w1, #0x1                   	// #1
    60e4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    60e8:	b	5e80 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x90c>
    60ec:	mov	x0, x19
    60f0:	mov	x1, x20
    60f4:	mov	x2, x22
    60f8:	ldp	x20, x19, [sp, #448]
    60fc:	ldp	x22, x21, [sp, #432]
    6100:	ldp	x24, x23, [sp, #416]
    6104:	ldp	x26, x25, [sp, #400]
    6108:	ldp	x28, x27, [sp, #384]
    610c:	ldp	x29, x30, [sp, #368]
    6110:	add	sp, sp, #0x1d0
    6114:	b	7c64 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE>
    6118:	ldp	x8, x9, [x19, #8]
    611c:	mov	x0, x19
    6120:	cmp	x8, x9
    6124:	cset	w1, eq  // eq = none
    6128:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    612c:	str	w0, [x19, #40]
    6130:	mov	x0, x19
    6134:	bl	7b78 <_ZN4llvm8TGParser17ParseOperatorTypeEv>
    6138:	cbz	x0, 5d50 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7dc>
    613c:	ldr	w8, [x19, #40]
    6140:	cmp	w8, #0x8
    6144:	b.ne	6440 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xecc>  // b.any
    6148:	ldp	x8, x9, [x19, #8]
    614c:	mov	x21, x0
    6150:	mov	x0, x19
    6154:	cmp	x8, x9
    6158:	cset	w1, eq  // eq = none
    615c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6160:	str	w0, [x19, #40]
    6164:	mov	x0, x19
    6168:	mov	x1, x20
    616c:	mov	x2, xzr
    6170:	mov	w3, wzr
    6174:	bl	34f4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    6178:	cbz	x0, 5d50 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7dc>
    617c:	ldr	w8, [x19, #40]
    6180:	cmp	w8, #0x9
    6184:	b.ne	686c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x12f8>  // b.any
    6188:	ldp	x8, x9, [x19, #8]
    618c:	mov	x20, x0
    6190:	mov	x0, x19
    6194:	cmp	x8, x9
    6198:	cset	w1, eq  // eq = none
    619c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    61a0:	str	w0, [x19, #40]
    61a4:	mov	x0, x21
    61a8:	mov	x1, x20
    61ac:	bl	0 <_ZN4llvm9IsAOpInit3getEPNS_5RecTyEPNS_4InitE>
    61b0:	ldp	x20, x19, [sp, #448]
    61b4:	ldp	x22, x21, [sp, #432]
    61b8:	ldp	x24, x23, [sp, #416]
    61bc:	ldp	x26, x25, [sp, #400]
    61c0:	ldp	x28, x27, [sp, #384]
    61c4:	ldp	x29, x30, [sp, #368]
    61c8:	add	sp, sp, #0x1d0
    61cc:	b	0 <_ZNK4llvm9IsAOpInit4FoldEv>
    61d0:	adrp	x21, 0 <_ZN4llvm8BitRecTy6SharedE>
    61d4:	adrp	x23, 0 <_ZN4llvm8IntRecTy6SharedE>
    61d8:	ldr	x21, [x21]
    61dc:	ldr	x23, [x23]
    61e0:	mov	w26, #0x10                  	// #16
    61e4:	b	5cec <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x778>
    61e8:	ldp	x8, x9, [x19, #8]
    61ec:	mov	x0, x19
    61f0:	cmp	x8, x9
    61f4:	cset	w1, eq  // eq = none
    61f8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    61fc:	str	w0, [x19, #40]
    6200:	adrp	x21, 0 <_ZN4llvm8IntRecTy6SharedE>
    6204:	ldr	x21, [x21]
    6208:	mov	w22, #0x3                   	// #3
    620c:	cmp	w0, #0x8
    6210:	b.eq	6244 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xcd0>  // b.none
    6214:	b	583c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2c8>
    6218:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    621c:	add	x8, x8, #0x0
    6220:	b	5d28 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7b4>
    6224:	mov	x0, xzr
    6228:	mov	x1, xzr
    622c:	bl	0 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE>
    6230:	mov	x21, x0
    6234:	mov	w22, #0x5                   	// #5
    6238:	ldr	w0, [x19, #40]
    623c:	cmp	w0, #0x8
    6240:	b.ne	583c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2c8>  // b.any
    6244:	ldp	x8, x9, [x19, #8]
    6248:	mov	x0, x19
    624c:	cmp	x8, x9
    6250:	cset	w1, eq  // eq = none
    6254:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6258:	str	w0, [x19, #40]
    625c:	mov	x0, x19
    6260:	mov	x1, x20
    6264:	mov	x2, xzr
    6268:	mov	w3, wzr
    626c:	bl	34f4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    6270:	cbz	x0, 5d50 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7dc>
    6274:	mov	x23, x0
    6278:	cmp	w22, #0x4
    627c:	b.hi	6bbc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1648>  // b.pmore
    6280:	mov	w8, #0x1                   	// #1
    6284:	lsl	w8, w8, w22
    6288:	mov	w9, #0x16                  	// #22
    628c:	tst	w8, w9
    6290:	b.eq	6bbc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1648>  // b.none
    6294:	ldrb	w10, [x23, #8]
    6298:	cmp	w10, #0x9
    629c:	sub	w11, w10, #0x1
    62a0:	csel	x8, x23, xzr, eq  // eq = none
    62a4:	cmp	w11, #0x17
    62a8:	csel	x9, x23, xzr, cc  // cc = lo, ul, last
    62ac:	b.cs	630c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xd98>  // b.hs, b.nlast
    62b0:	ldr	x12, [x9, #16]
    62b4:	cbz	x12, 7a88 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2514>
    62b8:	ldr	w12, [x12, #8]
    62bc:	and	w12, w12, #0xfffffffe
    62c0:	cmp	w12, #0x4
    62c4:	b.ne	630c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xd98>  // b.any
    62c8:	sub	w12, w22, #0x1
    62cc:	and	w12, w12, #0xff
    62d0:	cmp	w12, #0x2
    62d4:	b.cs	6bbc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1648>  // b.hs, b.nlast
    62d8:	cmp	w10, #0x9
    62dc:	b.ne	6878 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1304>  // b.any
    62e0:	ldr	w9, [x8, #32]
    62e4:	cbz	w9, 6b98 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1624>
    62e8:	ldr	x8, [x8, #40]
    62ec:	cbz	x8, 7ae0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x256c>
    62f0:	ldrb	w9, [x8, #8]
    62f4:	sub	w9, w9, #0x1
    62f8:	cmp	w9, #0x16
    62fc:	b.ls	6ba4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1630>  // b.plast
    6300:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6304:	add	x8, x8, #0x0
    6308:	b	5d28 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7b4>
    630c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6310:	add	x8, x8, #0x0
    6314:	b	5d28 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7b4>
    6318:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    631c:	add	x8, x8, #0x0
    6320:	b	5d28 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7b4>
    6324:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6328:	add	x8, x8, #0x0
    632c:	b	5d28 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7b4>
    6330:	ldr	x8, [sp, #128]
    6334:	ldr	q0, [sp, #112]
    6338:	add	x22, sp, #0xa0
    633c:	and	w19, w8, #0xff
    6340:	str	q0, [x22]
    6344:	str	x8, [sp, #176]
    6348:	b	63b4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xe40>
    634c:	ldrb	w8, [sp, #153]
    6350:	ldr	x9, [sp, #136]
    6354:	mov	w10, #0x2                   	// #2
    6358:	add	x11, sp, #0x88
    635c:	cmp	w8, #0x1
    6360:	csel	w10, w19, w10, eq  // eq = none
    6364:	sub	x12, x29, #0xb0
    6368:	mov	w13, #0x4                   	// #4
    636c:	csel	x8, x9, x11, eq  // eq = none
    6370:	cmp	w10, #0x2
    6374:	stp	x8, x12, [sp, #160]
    6378:	strb	w10, [sp, #176]
    637c:	strb	w13, [sp, #177]
    6380:	b.ne	63b4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xe40>  // b.any
    6384:	ldrb	w9, [x8, #16]
    6388:	cbz	w9, 7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>
    638c:	ldrb	w8, [x8, #17]
    6390:	cmp	w8, #0x1
    6394:	b.eq	7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>  // b.none
    6398:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    639c:	add	x8, x8, #0x0
    63a0:	mov	w9, #0x103                 	// #259
    63a4:	mov	w19, #0x2                   	// #2
    63a8:	stp	x8, xzr, [sp, #88]
    63ac:	strh	w9, [sp, #104]
    63b0:	b	63e8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xe74>
    63b4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    63b8:	add	x8, x8, #0x0
    63bc:	mov	w9, #0x103                 	// #259
    63c0:	cmp	w19, #0x1
    63c4:	stp	x8, xzr, [sp, #88]
    63c8:	strh	w9, [sp, #104]
    63cc:	b.eq	6458 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xee4>  // b.none
    63d0:	cbnz	w19, 63e8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xe74>
    63d4:	mov	w8, #0x100                 	// #256
    63d8:	mov	w19, wzr
    63dc:	stp	xzr, xzr, [x29, #-112]
    63e0:	sturh	w8, [x29, #-96]
    63e4:	b	646c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xef8>
    63e8:	ldrb	w8, [sp, #177]
    63ec:	ldr	x9, [sp, #160]
    63f0:	mov	w10, #0x2                   	// #2
    63f4:	add	x11, sp, #0xa0
    63f8:	cmp	w8, #0x1
    63fc:	adrp	x12, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6400:	csel	w10, w19, w10, eq  // eq = none
    6404:	add	x12, x12, #0x0
    6408:	mov	w13, #0x3                   	// #3
    640c:	csel	x8, x9, x11, eq  // eq = none
    6410:	cmp	w10, #0x2
    6414:	stp	x8, x12, [x29, #-112]
    6418:	sturb	w10, [x29, #-96]
    641c:	sturb	w13, [x29, #-95]
    6420:	b.ne	646c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xef8>  // b.any
    6424:	ldrb	w9, [x8, #16]
    6428:	cbz	w9, 7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>
    642c:	ldrb	w8, [x8, #17]
    6430:	cmp	w8, #0x1
    6434:	b.eq	7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>  // b.none
    6438:	mov	w19, #0x2                   	// #2
    643c:	b	646c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xef8>
    6440:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6444:	add	x8, x8, #0x0
    6448:	b	5d28 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7b4>
    644c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6450:	add	x8, x8, #0x0
    6454:	b	5d28 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7b4>
    6458:	ldr	x8, [sp, #104]
    645c:	ldur	q0, [sp, #88]
    6460:	and	w19, w8, #0xff
    6464:	str	q0, [x22, #96]
    6468:	stur	x8, [x29, #-96]
    646c:	ldr	x8, [x21]
    6470:	mov	x0, x21
    6474:	add	x20, sp, #0x20
    6478:	ldr	x9, [x8, #16]
    647c:	add	x8, sp, #0x20
    6480:	blr	x9
    6484:	mov	w8, #0x104                 	// #260
    6488:	cmp	w19, #0x1
    648c:	strh	w8, [sp, #80]
    6490:	stp	x20, xzr, [sp, #64]
    6494:	b.eq	64c0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xf4c>  // b.none
    6498:	cbnz	w19, 64d8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xf64>
    649c:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    64a0:	mov	w8, #0x100                 	// #256
    64a4:	add	x9, x9, #0x0
    64a8:	mov	w10, #0x103                 	// #259
    64ac:	stp	xzr, xzr, [x29, #-80]
    64b0:	sturh	w8, [x29, #-64]
    64b4:	stp	x9, xzr, [sp, #8]
    64b8:	strh	w10, [sp, #24]
    64bc:	b	6560 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xfec>
    64c0:	ldr	x8, [sp, #80]
    64c4:	ldr	q0, [sp, #64]
    64c8:	and	w19, w8, #0xff
    64cc:	str	q0, [x22, #128]
    64d0:	stur	x8, [x29, #-64]
    64d4:	b	6540 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xfcc>
    64d8:	ldurb	w8, [x29, #-95]
    64dc:	ldur	x9, [x29, #-112]
    64e0:	mov	w10, #0x2                   	// #2
    64e4:	sub	x11, x29, #0x70
    64e8:	cmp	w8, #0x1
    64ec:	csel	w10, w19, w10, eq  // eq = none
    64f0:	add	x12, sp, #0x20
    64f4:	mov	w13, #0x4                   	// #4
    64f8:	csel	x8, x9, x11, eq  // eq = none
    64fc:	cmp	w10, #0x2
    6500:	stp	x8, x12, [x29, #-80]
    6504:	sturb	w10, [x29, #-64]
    6508:	sturb	w13, [x29, #-63]
    650c:	b.ne	6540 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xfcc>  // b.any
    6510:	ldrb	w9, [x8, #16]
    6514:	cbz	w9, 7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>
    6518:	ldrb	w8, [x8, #17]
    651c:	cmp	w8, #0x1
    6520:	b.eq	7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>  // b.none
    6524:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6528:	add	x8, x8, #0x0
    652c:	mov	w9, #0x103                 	// #259
    6530:	mov	w19, #0x2                   	// #2
    6534:	stp	x8, xzr, [sp, #8]
    6538:	strh	w9, [sp, #24]
    653c:	b	6570 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xffc>
    6540:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6544:	add	x8, x8, #0x0
    6548:	mov	w9, #0x103                 	// #259
    654c:	cmp	w19, #0x1
    6550:	stp	x8, xzr, [sp, #8]
    6554:	strh	w9, [sp, #24]
    6558:	b.eq	65c4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1050>  // b.none
    655c:	cbnz	w19, 6570 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xffc>
    6560:	mov	w8, #0x100                 	// #256
    6564:	stp	xzr, xzr, [x29, #-48]
    6568:	sturh	w8, [x29, #-32]
    656c:	b	65d4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1060>
    6570:	ldurb	w8, [x29, #-63]
    6574:	ldur	x9, [x29, #-80]
    6578:	mov	w10, #0x2                   	// #2
    657c:	sub	x11, x29, #0x50
    6580:	cmp	w8, #0x1
    6584:	adrp	x12, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6588:	csel	w10, w19, w10, eq  // eq = none
    658c:	add	x12, x12, #0x0
    6590:	mov	w13, #0x3                   	// #3
    6594:	csel	x8, x9, x11, eq  // eq = none
    6598:	cmp	w10, #0x2
    659c:	stp	x8, x12, [x29, #-48]
    65a0:	sturb	w10, [x29, #-32]
    65a4:	sturb	w13, [x29, #-31]
    65a8:	b.ne	65d4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1060>  // b.any
    65ac:	ldrb	w9, [x8, #16]
    65b0:	cbz	w9, 7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>
    65b4:	ldrb	w8, [x8, #17]
    65b8:	cmp	w8, #0x1
    65bc:	b.ne	65d4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1060>  // b.any
    65c0:	b	7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>
    65c4:	ldur	q0, [sp, #8]
    65c8:	ldr	x8, [sp, #24]
    65cc:	str	q0, [x22, #160]
    65d0:	stur	x8, [x29, #-32]
    65d4:	sub	x0, x29, #0x18
    65d8:	sub	x2, x29, #0x30
    65dc:	mov	w1, #0x1                   	// #1
    65e0:	stur	x23, [x29, #-24]
    65e4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    65e8:	ldr	x0, [sp, #32]
    65ec:	add	x8, sp, #0x20
    65f0:	add	x8, x8, #0x10
    65f4:	cmp	x0, x8
    65f8:	b.eq	67dc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1268>  // b.none
    65fc:	bl	0 <_ZdlPv>
    6600:	b	67dc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1268>
    6604:	ldr	x8, [x21]
    6608:	mov	x0, x21
    660c:	sub	x19, x29, #0xb0
    6610:	ldr	x9, [x8, #16]
    6614:	sub	x8, x29, #0xb0
    6618:	blr	x9
    661c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6620:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6624:	add	x8, x8, #0x0
    6628:	b	6798 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1224>
    662c:	ldr	x8, [x21]
    6630:	mov	x0, x21
    6634:	sub	x19, x29, #0xb0
    6638:	ldr	x9, [x8, #16]
    663c:	sub	x8, x29, #0xb0
    6640:	blr	x9
    6644:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6648:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    664c:	add	x8, x8, #0x0
    6650:	b	6798 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1224>
    6654:	cmp	w24, #0x8
    6658:	b.ne	68ac <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1338>  // b.any
    665c:	ldur	w8, [x29, #-136]
    6660:	cbz	w8, 7b00 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x258c>
    6664:	ldur	x8, [x29, #-144]
    6668:	ldr	x8, [x8]
    666c:	cbz	x8, 7ae0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x256c>
    6670:	ldrb	w9, [x8, #8]
    6674:	sub	w9, w9, #0x1
    6678:	cmp	w9, #0x17
    667c:	b.cs	79f8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2484>  // b.hs, b.nlast
    6680:	ldr	x0, [x8, #16]
    6684:	bl	0 <_ZN4llvm5RecTy9getListTyEv>
    6688:	mov	x21, x0
    668c:	b	68ac <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1338>
    6690:	ldr	w8, [x19, #40]
    6694:	cmp	w8, #0xe
    6698:	b.ne	7588 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2014>  // b.any
    669c:	ldp	x8, x9, [x19, #8]
    66a0:	mov	x0, x19
    66a4:	cmp	x8, x9
    66a8:	cset	w1, eq  // eq = none
    66ac:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    66b0:	str	w0, [x19, #40]
    66b4:	mov	x0, x19
    66b8:	mov	x1, x20
    66bc:	mov	x2, xzr
    66c0:	mov	w3, wzr
    66c4:	bl	34f4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    66c8:	cbz	x0, 5d50 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7dc>
    66cc:	ldrb	w8, [x0, #8]
    66d0:	mov	x23, x0
    66d4:	sub	w8, w8, #0x1
    66d8:	cmp	w8, #0x17
    66dc:	b.cc	6c10 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x169c>  // b.lo, b.ul, b.last
    66e0:	ldr	x8, [x23]
    66e4:	mov	x0, x23
    66e8:	sub	x20, x29, #0x90
    66ec:	ldr	x9, [x8, #40]
    66f0:	sub	x8, x29, #0x90
    66f4:	blr	x9
    66f8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    66fc:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6700:	add	x8, x8, #0x0
    6704:	b	609c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xb28>
    6708:	ldr	x8, [x22]
    670c:	mov	x0, x22
    6710:	sub	x19, x29, #0xb0
    6714:	ldr	x9, [x8, #16]
    6718:	sub	x8, x29, #0xb0
    671c:	blr	x9
    6720:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6724:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6728:	add	x8, x8, #0x0
    672c:	mov	w9, #0x403                 	// #1027
    6730:	sub	x10, x29, #0x30
    6734:	add	x11, x11, #0x0
    6738:	mov	w12, #0x302                 	// #770
    673c:	stp	x8, x19, [x29, #-48]
    6740:	sturh	w9, [x29, #-32]
    6744:	stp	x10, x11, [sp, #32]
    6748:	strh	w12, [sp, #48]
    674c:	cbnz	wzr, 7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>
    6750:	ldurb	w8, [x29, #-31]
    6754:	cmp	w8, #0x1
    6758:	b.eq	7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>  // b.none
    675c:	ldr	x8, [sp]
    6760:	sub	x0, x29, #0x50
    6764:	add	x2, sp, #0x20
    6768:	mov	w1, #0x1                   	// #1
    676c:	stur	x8, [x29, #-80]
    6770:	b	67d8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1264>
    6774:	ldr	x8, [x21]
    6778:	mov	x0, x21
    677c:	sub	x19, x29, #0xb0
    6780:	ldr	x9, [x8, #16]
    6784:	sub	x8, x29, #0xb0
    6788:	blr	x9
    678c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6790:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6794:	add	x8, x8, #0x0
    6798:	mov	w9, #0x403                 	// #1027
    679c:	sub	x10, x29, #0x30
    67a0:	add	x11, x11, #0x0
    67a4:	mov	w12, #0x302                 	// #770
    67a8:	stp	x8, x19, [x29, #-48]
    67ac:	sturh	w9, [x29, #-32]
    67b0:	stp	x10, x11, [sp, #32]
    67b4:	strh	w12, [sp, #48]
    67b8:	cbnz	wzr, 7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>
    67bc:	ldurb	w8, [x29, #-31]
    67c0:	cmp	w8, #0x1
    67c4:	b.eq	7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>  // b.none
    67c8:	sub	x0, x29, #0x50
    67cc:	add	x2, sp, #0x20
    67d0:	mov	w1, #0x1                   	// #1
    67d4:	stur	x23, [x29, #-80]
    67d8:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    67dc:	ldur	x0, [x29, #-176]
    67e0:	sub	x8, x29, #0xb0
    67e4:	add	x8, x8, #0x10
    67e8:	cmp	x0, x8
    67ec:	b.eq	6904 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1390>  // b.none
    67f0:	bl	0 <_ZdlPv>
    67f4:	b	6904 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1390>
    67f8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    67fc:	add	x8, x8, #0x0
    6800:	mov	w9, #0x103                 	// #259
    6804:	stp	x8, xzr, [sp, #136]
    6808:	strh	w9, [sp, #152]
    680c:	ldr	x8, [x21]
    6810:	mov	x0, x21
    6814:	sub	x19, x29, #0xb0
    6818:	ldr	x9, [x8, #16]
    681c:	sub	x8, x29, #0xb0
    6820:	blr	x9
    6824:	ldrb	w8, [sp, #152]
    6828:	mov	w9, #0x104                 	// #260
    682c:	strh	w9, [sp, #128]
    6830:	stp	x19, xzr, [sp, #112]
    6834:	cmp	w8, #0x1
    6838:	b.eq	6a8c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1518>  // b.none
    683c:	ldr	x21, [sp]
    6840:	add	x20, sp, #0xa0
    6844:	cbnz	w8, 6aac <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1538>
    6848:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    684c:	mov	w8, #0x100                 	// #256
    6850:	add	x9, x9, #0x0
    6854:	mov	w10, #0x103                 	// #259
    6858:	stp	xzr, xzr, [sp, #160]
    685c:	strh	w8, [sp, #176]
    6860:	stp	x9, xzr, [sp, #88]
    6864:	strh	w10, [sp, #104]
    6868:	b	6b34 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x15c0>
    686c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6870:	add	x8, x8, #0x0
    6874:	b	5d28 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7b4>
    6878:	and	w8, w11, #0xff
    687c:	cmp	w8, #0x17
    6880:	b.cs	7b40 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x25cc>  // b.hs, b.nlast
    6884:	ldr	x21, [x9, #16]
    6888:	cbz	x21, 7a88 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2514>
    688c:	ldr	w8, [x21, #8]
    6890:	cmp	w8, #0x5
    6894:	b.ne	6a80 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x150c>  // b.any
    6898:	cmp	w22, #0x1
    689c:	b.ne	6bbc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1648>  // b.any
    68a0:	ldr	x21, [x21, #24]
    68a4:	b	6bbc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1648>
    68a8:	ldr	x19, [sp]
    68ac:	ldur	w8, [x29, #-136]
    68b0:	cmp	w8, #0x2
    68b4:	b.ne	68dc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1368>  // b.any
    68b8:	ldur	x8, [x29, #-144]
    68bc:	mov	w0, w24
    68c0:	mov	x3, x21
    68c4:	ldp	x1, x2, [x8]
    68c8:	bl	0 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE>
    68cc:	mov	x1, x20
    68d0:	bl	0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE>
    68d4:	mov	x19, x0
    68d8:	b	6908 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1394>
    68dc:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    68e0:	add	x8, x8, #0x0
    68e4:	mov	w9, #0x103                 	// #259
    68e8:	stp	x8, xzr, [x29, #-176]
    68ec:	sturh	w9, [x29, #-160]
    68f0:	str	x19, [sp, #32]
    68f4:	add	x0, sp, #0x20
    68f8:	sub	x2, x29, #0xb0
    68fc:	mov	w1, #0x1                   	// #1
    6900:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    6904:	mov	x19, xzr
    6908:	ldur	x0, [x29, #-144]
    690c:	sub	x8, x29, #0x90
    6910:	add	x8, x8, #0x10
    6914:	cmp	x0, x8
    6918:	b.eq	5d54 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7e0>  // b.none
    691c:	bl	0 <free>
    6920:	b	5d54 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7e0>
    6924:	cbz	x10, 69d4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1460>
    6928:	ldr	x8, [x21]
    692c:	mov	x0, x21
    6930:	sub	x20, x29, #0xb0
    6934:	ldr	x9, [x8, #40]
    6938:	sub	x8, x29, #0xb0
    693c:	blr	x9
    6940:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6944:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6948:	add	x8, x8, #0x0
    694c:	mov	w9, #0x403                 	// #1027
    6950:	sub	x10, x29, #0x50
    6954:	add	x11, x11, #0x0
    6958:	mov	w12, #0x302                 	// #770
    695c:	stp	x8, x20, [x29, #-80]
    6960:	sturh	w9, [x29, #-64]
    6964:	stp	x10, x11, [x29, #-48]
    6968:	sturh	w12, [x29, #-32]
    696c:	cbnz	wzr, 7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>
    6970:	ldurb	w8, [x29, #-63]
    6974:	cmp	w8, #0x1
    6978:	b.eq	7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>  // b.none
    697c:	sub	x8, x29, #0x90
    6980:	sub	x0, x29, #0x30
    6984:	sub	x20, x29, #0x90
    6988:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    698c:	mov	w8, #0x104                 	// #260
    6990:	mov	x0, x19
    6994:	strh	w8, [sp, #48]
    6998:	stp	x20, xzr, [sp, #32]
    699c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    69a0:	stur	x0, [x29, #-112]
    69a4:	sub	x0, x29, #0x70
    69a8:	add	x2, sp, #0x20
    69ac:	mov	w1, #0x1                   	// #1
    69b0:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    69b4:	ldur	x0, [x29, #-144]
    69b8:	add	x8, x20, #0x10
    69bc:	cmp	x0, x8
    69c0:	b.eq	69c8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1454>  // b.none
    69c4:	bl	0 <_ZdlPv>
    69c8:	ldur	x0, [x29, #-176]
    69cc:	sub	x8, x29, #0xb0
    69d0:	b	5e88 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x914>
    69d4:	ldp	x8, x9, [x19, #8]
    69d8:	mov	x0, x19
    69dc:	cmp	x8, x9
    69e0:	cset	w1, eq  // eq = none
    69e4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    69e8:	cmp	w0, #0xe
    69ec:	str	w0, [x19, #40]
    69f0:	b.ne	6a68 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x14f4>  // b.any
    69f4:	ldp	x8, x9, [x19, #8]
    69f8:	mov	x0, x19
    69fc:	cmp	x8, x9
    6a00:	cset	w1, eq  // eq = none
    6a04:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6a08:	str	w0, [x19, #40]
    6a0c:	mov	x0, x19
    6a10:	mov	x1, x20
    6a14:	mov	x2, xzr
    6a18:	mov	w3, wzr
    6a1c:	bl	34f4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    6a20:	cbz	x0, 5d50 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7dc>
    6a24:	ldr	w8, [x19, #40]
    6a28:	cmp	w8, #0xe
    6a2c:	b.ne	6a68 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x14f4>  // b.any
    6a30:	ldp	x8, x9, [x19, #8]
    6a34:	mov	x24, x0
    6a38:	mov	x0, x19
    6a3c:	cmp	x8, x9
    6a40:	cset	w1, eq  // eq = none
    6a44:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6a48:	str	w0, [x19, #40]
    6a4c:	ldrb	w8, [x24, #8]
    6a50:	sub	w8, w8, #0x1
    6a54:	cmp	w8, #0x17
    6a58:	b.cc	6c98 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1724>  // b.lo, b.ul, b.last
    6a5c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6a60:	add	x8, x8, #0x0
    6a64:	b	5d28 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7b4>
    6a68:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6a6c:	add	x8, x8, #0x0
    6a70:	b	5d28 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7b4>
    6a74:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6a78:	add	x8, x8, #0x0
    6a7c:	b	5d28 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7b4>
    6a80:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6a84:	add	x8, x8, #0x0
    6a88:	b	5d28 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7b4>
    6a8c:	ldr	x8, [sp, #128]
    6a90:	ldr	q0, [sp, #112]
    6a94:	ldr	x21, [sp]
    6a98:	add	x20, sp, #0xa0
    6a9c:	str	x8, [sp, #176]
    6aa0:	and	w8, w8, #0xff
    6aa4:	str	q0, [x20]
    6aa8:	b	6b14 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x15a0>
    6aac:	ldrb	w9, [sp, #153]
    6ab0:	ldr	x10, [sp, #136]
    6ab4:	mov	w11, #0x2                   	// #2
    6ab8:	add	x12, sp, #0x88
    6abc:	cmp	w9, #0x1
    6ac0:	csel	w11, w8, w11, eq  // eq = none
    6ac4:	sub	x13, x29, #0xb0
    6ac8:	mov	w14, #0x4                   	// #4
    6acc:	csel	x9, x10, x12, eq  // eq = none
    6ad0:	cmp	w11, #0x2
    6ad4:	stp	x9, x13, [sp, #160]
    6ad8:	strb	w11, [sp, #176]
    6adc:	strb	w14, [sp, #177]
    6ae0:	b.ne	6b14 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x15a0>  // b.any
    6ae4:	ldrb	w8, [x9, #16]
    6ae8:	cbz	w8, 7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>
    6aec:	ldrb	w8, [x9, #17]
    6af0:	cmp	w8, #0x1
    6af4:	b.eq	7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>  // b.none
    6af8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6afc:	add	x8, x8, #0x0
    6b00:	mov	w9, #0x103                 	// #259
    6b04:	stp	x8, xzr, [sp, #88]
    6b08:	mov	w8, #0x2                   	// #2
    6b0c:	strh	w9, [sp, #104]
    6b10:	b	6b44 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x15d0>
    6b14:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6b18:	add	x9, x9, #0x0
    6b1c:	mov	w10, #0x103                 	// #259
    6b20:	cmp	w8, #0x1
    6b24:	stp	x9, xzr, [sp, #88]
    6b28:	strh	w10, [sp, #104]
    6b2c:	b.eq	6cd4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1760>  // b.none
    6b30:	cbnz	w8, 6b44 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x15d0>
    6b34:	mov	w8, #0x100                 	// #256
    6b38:	stp	xzr, xzr, [x29, #-112]
    6b3c:	sturh	w8, [x29, #-96]
    6b40:	b	6ce4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1770>
    6b44:	ldrb	w9, [sp, #177]
    6b48:	ldr	x10, [sp, #160]
    6b4c:	mov	w11, #0x2                   	// #2
    6b50:	add	x12, sp, #0xa0
    6b54:	cmp	w9, #0x1
    6b58:	adrp	x13, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6b5c:	csel	w9, w8, w11, eq  // eq = none
    6b60:	add	x13, x13, #0x0
    6b64:	mov	w14, #0x3                   	// #3
    6b68:	csel	x8, x10, x12, eq  // eq = none
    6b6c:	cmp	w9, #0x2
    6b70:	stp	x8, x13, [x29, #-112]
    6b74:	sturb	w9, [x29, #-96]
    6b78:	sturb	w14, [x29, #-95]
    6b7c:	b.ne	6ce4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1770>  // b.any
    6b80:	ldrb	w9, [x8, #16]
    6b84:	cbz	w9, 7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>
    6b88:	ldrb	w8, [x8, #17]
    6b8c:	cmp	w8, #0x1
    6b90:	b.ne	6ce4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1770>  // b.any
    6b94:	b	7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>
    6b98:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6b9c:	add	x8, x8, #0x0
    6ba0:	b	5d28 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7b4>
    6ba4:	ldr	x21, [x8, #16]
    6ba8:	cmp	w22, #0x1
    6bac:	b.eq	6bbc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1648>  // b.none
    6bb0:	mov	x0, x21
    6bb4:	bl	0 <_ZN4llvm5RecTy9getListTyEv>
    6bb8:	mov	x21, x0
    6bbc:	ldr	w8, [x19, #40]
    6bc0:	cmp	w8, #0x9
    6bc4:	b.ne	6c04 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1690>  // b.any
    6bc8:	ldp	x8, x9, [x19, #8]
    6bcc:	mov	x0, x19
    6bd0:	cmp	x8, x9
    6bd4:	cset	w1, eq  // eq = none
    6bd8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6bdc:	str	w0, [x19, #40]
    6be0:	mov	w0, w22
    6be4:	mov	x1, x23
    6be8:	mov	x2, x21
    6bec:	bl	0 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE>
    6bf0:	mov	x1, x20
    6bf4:	mov	w2, wzr
    6bf8:	bl	0 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb>
    6bfc:	mov	x19, x0
    6c00:	b	5d54 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7e0>
    6c04:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6c08:	add	x8, x8, #0x0
    6c0c:	b	5d28 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7b4>
    6c10:	ldr	x25, [x23, #16]
    6c14:	cbz	x25, 7a88 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2514>
    6c18:	ldr	w8, [x25, #8]
    6c1c:	cmp	w8, #0x5
    6c20:	b.ne	6ea4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1930>  // b.any
    6c24:	ldr	w8, [x19, #40]
    6c28:	cmp	w8, #0xe
    6c2c:	b.ne	7588 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2014>  // b.any
    6c30:	ldp	x8, x9, [x19, #8]
    6c34:	mov	x0, x19
    6c38:	cmp	x8, x9
    6c3c:	cset	w1, eq  // eq = none
    6c40:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6c44:	cmp	w0, #0x48
    6c48:	str	w0, [x19, #40]
    6c4c:	b.ne	70e4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1b70>  // b.any
    6c50:	ldp	x0, x1, [x19, #48]
    6c54:	add	x28, sp, #0xa0
    6c58:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    6c5c:	mov	x24, x0
    6c60:	cbz	x20, 7484 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f10>
    6c64:	ldr	w8, [x20, #80]
    6c68:	cbz	w8, 7484 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f10>
    6c6c:	ldr	x10, [x20, #72]
    6c70:	add	x8, x8, x8, lsl #1
    6c74:	lsl	x8, x8, #3
    6c78:	mov	x9, x10
    6c7c:	ldr	x11, [x9], #24
    6c80:	cmp	x11, x24
    6c84:	b.eq	7458 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1ee4>  // b.none
    6c88:	subs	x8, x8, #0x18
    6c8c:	mov	x10, x9
    6c90:	b.ne	6c7c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1708>  // b.any
    6c94:	b	7484 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f10>
    6c98:	ldr	x25, [x24, #16]
    6c9c:	cbz	x25, 7a88 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2514>
    6ca0:	ldr	w8, [x25, #8]
    6ca4:	cmp	w8, #0x6
    6ca8:	b.eq	6fb8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>  // b.none
    6cac:	cmp	w8, #0x5
    6cb0:	b.ne	6fd4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a60>  // b.any
    6cb4:	ldr	x25, [x25, #24]
    6cb8:	cbz	x22, 71e8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1c74>
    6cbc:	ldr	w8, [x22, #8]
    6cc0:	cmp	w8, #0x5
    6cc4:	b.ne	732c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1db8>  // b.any
    6cc8:	ldr	x23, [x22, #24]
    6ccc:	mov	w27, wzr
    6cd0:	b	71f0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1c7c>
    6cd4:	ldur	q0, [sp, #88]
    6cd8:	ldr	x8, [sp, #104]
    6cdc:	str	q0, [x20, #96]
    6ce0:	stur	x8, [x29, #-96]
    6ce4:	ldr	w8, [x22, #8]
    6ce8:	cmp	w8, #0x5
    6cec:	b.ne	7b20 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x25ac>  // b.any
    6cf0:	ldr	x0, [x22, #24]
    6cf4:	add	x19, sp, #0x20
    6cf8:	ldr	x8, [x0]
    6cfc:	ldr	x9, [x8, #16]
    6d00:	add	x8, sp, #0x20
    6d04:	blr	x9
    6d08:	ldurb	w8, [x29, #-96]
    6d0c:	mov	w9, #0x104                 	// #260
    6d10:	strh	w9, [sp, #80]
    6d14:	stp	x19, xzr, [sp, #64]
    6d18:	cmp	w8, #0x1
    6d1c:	b.eq	6d48 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x17d4>  // b.none
    6d20:	cbnz	w8, 6d60 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x17ec>
    6d24:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6d28:	mov	w8, #0x100                 	// #256
    6d2c:	add	x9, x9, #0x0
    6d30:	mov	w10, #0x103                 	// #259
    6d34:	stp	xzr, xzr, [x29, #-80]
    6d38:	sturh	w8, [x29, #-64]
    6d3c:	stp	x9, xzr, [sp, #8]
    6d40:	strh	w10, [sp, #24]
    6d44:	b	6de8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1874>
    6d48:	ldr	x8, [sp, #80]
    6d4c:	ldr	q0, [sp, #64]
    6d50:	stur	x8, [x29, #-64]
    6d54:	and	w8, w8, #0xff
    6d58:	str	q0, [x20, #128]
    6d5c:	b	6dc8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1854>
    6d60:	ldurb	w9, [x29, #-95]
    6d64:	ldur	x10, [x29, #-112]
    6d68:	mov	w11, #0x2                   	// #2
    6d6c:	sub	x12, x29, #0x70
    6d70:	cmp	w9, #0x1
    6d74:	csel	w11, w8, w11, eq  // eq = none
    6d78:	add	x13, sp, #0x20
    6d7c:	mov	w14, #0x4                   	// #4
    6d80:	csel	x9, x10, x12, eq  // eq = none
    6d84:	cmp	w11, #0x2
    6d88:	stp	x9, x13, [x29, #-80]
    6d8c:	sturb	w11, [x29, #-64]
    6d90:	sturb	w14, [x29, #-63]
    6d94:	b.ne	6dc8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1854>  // b.any
    6d98:	ldrb	w8, [x9, #16]
    6d9c:	cbz	w8, 7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>
    6da0:	ldrb	w8, [x9, #17]
    6da4:	cmp	w8, #0x1
    6da8:	b.eq	7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>  // b.none
    6dac:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6db0:	add	x8, x8, #0x0
    6db4:	mov	w9, #0x103                 	// #259
    6db8:	stp	x8, xzr, [sp, #8]
    6dbc:	mov	w8, #0x2                   	// #2
    6dc0:	strh	w9, [sp, #24]
    6dc4:	b	6df8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1884>
    6dc8:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6dcc:	add	x9, x9, #0x0
    6dd0:	mov	w10, #0x103                 	// #259
    6dd4:	cmp	w8, #0x1
    6dd8:	stp	x9, xzr, [sp, #8]
    6ddc:	strh	w10, [sp, #24]
    6de0:	b.eq	6e4c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x18d8>  // b.none
    6de4:	cbnz	w8, 6df8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1884>
    6de8:	mov	w8, #0x100                 	// #256
    6dec:	stp	xzr, xzr, [x29, #-48]
    6df0:	sturh	w8, [x29, #-32]
    6df4:	b	6e5c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x18e8>
    6df8:	ldurb	w9, [x29, #-63]
    6dfc:	ldur	x10, [x29, #-80]
    6e00:	mov	w11, #0x2                   	// #2
    6e04:	sub	x12, x29, #0x50
    6e08:	cmp	w9, #0x1
    6e0c:	adrp	x13, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6e10:	csel	w9, w8, w11, eq  // eq = none
    6e14:	add	x13, x13, #0x0
    6e18:	mov	w14, #0x3                   	// #3
    6e1c:	csel	x8, x10, x12, eq  // eq = none
    6e20:	cmp	w9, #0x2
    6e24:	stp	x8, x13, [x29, #-48]
    6e28:	sturb	w9, [x29, #-32]
    6e2c:	sturb	w14, [x29, #-31]
    6e30:	b.ne	6e5c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x18e8>  // b.any
    6e34:	ldrb	w9, [x8, #16]
    6e38:	cbz	w9, 7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>
    6e3c:	ldrb	w8, [x8, #17]
    6e40:	cmp	w8, #0x1
    6e44:	b.ne	6e5c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x18e8>  // b.any
    6e48:	b	7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>
    6e4c:	ldur	q0, [sp, #8]
    6e50:	ldr	x8, [sp, #24]
    6e54:	str	q0, [x20, #160]
    6e58:	stur	x8, [x29, #-32]
    6e5c:	sub	x0, x29, #0x18
    6e60:	sub	x2, x29, #0x30
    6e64:	mov	w1, #0x1                   	// #1
    6e68:	stur	x21, [x29, #-24]
    6e6c:	b	65e4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1070>
    6e70:	ldrb	w8, [x24, #8]
    6e74:	sub	w9, w8, #0x1
    6e78:	cmp	w9, #0x16
    6e7c:	b.ls	6f98 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a24>  // b.plast
    6e80:	mov	x0, xzr
    6e84:	b	7020 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1aac>
    6e88:	ldrb	w8, [x22, #8]
    6e8c:	sub	w8, w8, #0x1
    6e90:	cmp	w8, #0x16
    6e94:	b.ls	6fb0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a3c>  // b.plast
    6e98:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6e9c:	add	x8, x8, #0x0
    6ea0:	b	5d28 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7b4>
    6ea4:	ldr	x8, [x25]
    6ea8:	mov	x0, x25
    6eac:	sub	x20, x29, #0x90
    6eb0:	ldr	x9, [x8, #16]
    6eb4:	sub	x8, x29, #0x90
    6eb8:	blr	x9
    6ebc:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6ec0:	add	x8, x8, #0x0
    6ec4:	mov	w9, #0x403                 	// #1027
    6ec8:	mov	x0, x19
    6ecc:	stp	x8, x20, [x29, #-176]
    6ed0:	sturh	w9, [x29, #-160]
    6ed4:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    6ed8:	str	x0, [sp, #32]
    6edc:	add	x0, sp, #0x20
    6ee0:	sub	x2, x29, #0xb0
    6ee4:	mov	w1, #0x1                   	// #1
    6ee8:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    6eec:	ldur	x0, [x29, #-144]
    6ef0:	add	x8, x20, #0x10
    6ef4:	cmp	x0, x8
    6ef8:	b.ne	5e94 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x920>  // b.any
    6efc:	b	5d50 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7dc>
    6f00:	cmp	w9, #0x18
    6f04:	b.ne	6fe0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a6c>  // b.any
    6f08:	ldrb	w9, [x22, #8]
    6f0c:	sub	w10, w9, #0x1
    6f10:	cmp	w10, #0x17
    6f14:	b.cs	6ffc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a88>  // b.hs, b.nlast
    6f18:	adrp	x0, 0 <_ZN4llvm11StringRecTy6SharedE>
    6f1c:	ldr	x0, [x0]
    6f20:	bl	0 <_ZN4llvm5RecTy9getListTyEv>
    6f24:	ldr	x9, [x22, #16]
    6f28:	cmp	x0, x9
    6f2c:	b.eq	709c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1b28>  // b.none
    6f30:	ldr	x8, [x9]
    6f34:	mov	x0, x9
    6f38:	sub	x19, x29, #0x90
    6f3c:	ldr	x10, [x8, #16]
    6f40:	sub	x8, x29, #0x90
    6f44:	blr	x10
    6f48:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6f4c:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6f50:	add	x8, x8, #0x0
    6f54:	mov	w9, #0x403                 	// #1027
    6f58:	add	x10, sp, #0x20
    6f5c:	add	x11, x11, #0x0
    6f60:	mov	w12, #0x302                 	// #770
    6f64:	stp	x8, x19, [sp, #32]
    6f68:	strh	w9, [sp, #48]
    6f6c:	stp	x10, x11, [x29, #-176]
    6f70:	sturh	w12, [x29, #-160]
    6f74:	cbnz	wzr, 7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>
    6f78:	ldrb	w8, [sp, #49]
    6f7c:	cmp	w8, #0x1
    6f80:	b.eq	7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>  // b.none
    6f84:	sub	x0, x29, #0x30
    6f88:	sub	x2, x29, #0xb0
    6f8c:	mov	w1, #0x1                   	// #1
    6f90:	stur	x27, [x29, #-48]
    6f94:	b	60e4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xb70>
    6f98:	cmp	w8, #0x3
    6f9c:	b.ne	701c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1aa8>  // b.any
    6fa0:	ldr	w0, [x24, #32]
    6fa4:	bl	0 <_ZN4llvm9BitsRecTy3getEj>
    6fa8:	ldrb	w8, [x24, #8]
    6fac:	b	7020 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1aac>
    6fb0:	ldr	x25, [x22, #16]
    6fb4:	b	709c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1b28>
    6fb8:	cbz	x22, 6fc8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a54>
    6fbc:	ldr	w8, [x22, #8]
    6fc0:	cmp	w8, #0x6
    6fc4:	b.ne	7360 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1dec>  // b.any
    6fc8:	mov	x23, xzr
    6fcc:	mov	w27, #0x1                   	// #1
    6fd0:	b	71f0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1c7c>
    6fd4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6fd8:	add	x8, x8, #0x0
    6fdc:	b	5d28 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7b4>
    6fe0:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6fe4:	add	x8, x8, #0x0
    6fe8:	mov	w9, #0x103                 	// #259
    6fec:	stp	x8, xzr, [x29, #-144]
    6ff0:	sturh	w9, [x29, #-128]
    6ff4:	stur	x26, [x29, #-176]
    6ff8:	b	5d40 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7cc>
    6ffc:	cmp	w9, #0x18
    7000:	b.ne	7310 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1d9c>  // b.any
    7004:	and	w8, w8, #0xff
    7008:	cmp	w8, #0x17
    700c:	b.cc	709c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1b28>  // b.lo, b.ul, b.last
    7010:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7014:	add	x8, x8, #0x0
    7018:	b	6fe8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a74>
    701c:	ldr	x0, [x24, #16]
    7020:	ldrb	w9, [x22, #8]
    7024:	adrp	x26, 0 <_ZN4llvm8BitRecTy6SharedE>
    7028:	ldr	x26, [x26]
    702c:	cmp	w8, #0x2
    7030:	sub	w10, w9, #0x1
    7034:	csel	x25, x26, x0, eq  // eq = none
    7038:	cmp	w10, #0x16
    703c:	b.ls	7048 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1ad4>  // b.plast
    7040:	mov	x0, xzr
    7044:	b	7068 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1af4>
    7048:	cmp	w9, #0x3
    704c:	b.ne	7064 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1af0>  // b.any
    7050:	ldr	w0, [x22, #32]
    7054:	bl	0 <_ZN4llvm9BitsRecTy3getEj>
    7058:	ldrb	w9, [x22, #8]
    705c:	ldrb	w8, [x24, #8]
    7060:	b	7068 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1af4>
    7064:	ldr	x0, [x22, #16]
    7068:	cmp	w9, #0x2
    706c:	csel	x10, x26, x0, eq  // eq = none
    7070:	cmp	w8, #0x18
    7074:	csel	x27, x10, x25, eq  // eq = none
    7078:	cmp	w9, #0x18
    707c:	csel	x26, x27, x10, eq  // eq = none
    7080:	cbz	x27, 70d8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1b64>
    7084:	cbz	x26, 70d8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1b64>
    7088:	mov	x0, x27
    708c:	mov	x1, x26
    7090:	bl	0 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_>
    7094:	mov	x25, x0
    7098:	cbz	x0, 70f0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1b7c>
    709c:	mov	w0, w21
    70a0:	mov	x1, x23
    70a4:	mov	x2, x24
    70a8:	mov	x3, x22
    70ac:	mov	x4, x25
    70b0:	bl	0 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE>
    70b4:	mov	x1, x20
    70b8:	ldp	x20, x19, [sp, #448]
    70bc:	ldp	x22, x21, [sp, #432]
    70c0:	ldp	x24, x23, [sp, #416]
    70c4:	ldp	x26, x25, [sp, #400]
    70c8:	ldp	x28, x27, [sp, #384]
    70cc:	ldp	x29, x30, [sp, #368]
    70d0:	add	sp, sp, #0x1d0
    70d4:	b	0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE>
    70d8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    70dc:	add	x8, x8, #0x0
    70e0:	b	5d28 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7b4>
    70e4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    70e8:	add	x8, x8, #0x0
    70ec:	b	5d28 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7b4>
    70f0:	ldr	x8, [x27]
    70f4:	mov	x0, x27
    70f8:	sub	x20, x29, #0x90
    70fc:	ldr	x9, [x8, #16]
    7100:	sub	x8, x29, #0x90
    7104:	blr	x9
    7108:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    710c:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7110:	add	x8, x8, #0x0
    7114:	mov	w9, #0x403                 	// #1027
    7118:	sub	x10, x29, #0x70
    711c:	add	x11, x11, #0x0
    7120:	mov	w12, #0x302                 	// #770
    7124:	stp	x8, x20, [x29, #-112]
    7128:	sturh	w9, [x29, #-96]
    712c:	stp	x10, x11, [x29, #-80]
    7130:	sturh	w12, [x29, #-64]
    7134:	cbnz	wzr, 7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>
    7138:	ldurb	w8, [x29, #-95]
    713c:	cmp	w8, #0x1
    7140:	b.eq	7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>  // b.none
    7144:	ldr	x8, [x26]
    7148:	mov	x0, x26
    714c:	sub	x20, x29, #0xb0
    7150:	ldr	x9, [x8, #16]
    7154:	sub	x8, x29, #0xb0
    7158:	blr	x9
    715c:	ldurb	w8, [x29, #-63]
    7160:	ldur	x9, [x29, #-80]
    7164:	sub	x10, x29, #0x50
    7168:	mov	w11, #0x402                 	// #1026
    716c:	cmp	w8, #0x1
    7170:	csel	x8, x9, x10, eq  // eq = none
    7174:	stp	x8, x20, [x29, #-48]
    7178:	sturh	w11, [x29, #-32]
    717c:	ldrb	w9, [x8, #16]
    7180:	cbz	w9, 7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>
    7184:	ldrb	w8, [x8, #17]
    7188:	cmp	w8, #0x1
    718c:	b.eq	7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>  // b.none
    7190:	ldurb	w8, [x29, #-31]
    7194:	ldur	x9, [x29, #-48]
    7198:	sub	x10, x29, #0x30
    719c:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    71a0:	cmp	w8, #0x1
    71a4:	add	x11, x11, #0x0
    71a8:	mov	w12, #0x302                 	// #770
    71ac:	csel	x8, x9, x10, eq  // eq = none
    71b0:	stp	x8, x11, [sp, #32]
    71b4:	strh	w12, [sp, #48]
    71b8:	ldrb	w9, [x8, #16]
    71bc:	cbz	w9, 7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>
    71c0:	ldrb	w8, [x8, #17]
    71c4:	cmp	w8, #0x1
    71c8:	b.eq	7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>  // b.none
    71cc:	mov	x0, x19
    71d0:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    71d4:	str	x0, [sp, #160]
    71d8:	add	x0, sp, #0xa0
    71dc:	add	x2, sp, #0x20
    71e0:	mov	w1, #0x1                   	// #1
    71e4:	b	5e64 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x8f0>
    71e8:	mov	w27, wzr
    71ec:	mov	x23, xzr
    71f0:	cbz	x20, 7200 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1c8c>
    71f4:	mov	x22, xzr
    71f8:	mov	x26, x20
    71fc:	b	7244 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1cd0>
    7200:	ldr	x26, [x19, #344]
    7204:	mov	w0, #0x80                  	// #128
    7208:	bl	0 <_Znwm>
    720c:	mov	x22, x0
    7210:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7214:	add	x0, x0, #0x0
    7218:	mov	w1, #0x6                   	// #6
    721c:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    7220:	mov	x1, x0
    7224:	mov	x0, x22
    7228:	mov	x2, xzr
    722c:	mov	x3, xzr
    7230:	mov	x4, x26
    7234:	mov	w5, wzr
    7238:	mov	w6, wzr
    723c:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7240:	mov	x26, x22
    7244:	sub	x0, x29, #0x90
    7248:	mov	x1, x21
    724c:	mov	x2, x25
    7250:	mov	w3, wzr
    7254:	bl	0 <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb>
    7258:	sub	x1, x29, #0x90
    725c:	mov	x0, x26
    7260:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7264:	mov	x0, x19
    7268:	mov	x1, x26
    726c:	mov	x2, x23
    7270:	mov	w3, wzr
    7274:	bl	34f4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    7278:	mov	x23, x0
    727c:	mov	x0, x26
    7280:	mov	x1, x21
    7284:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7288:	cbz	x23, 72d0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1d5c>
    728c:	ldr	w8, [x19, #40]
    7290:	cmp	w8, #0x9
    7294:	b.ne	72d8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1d64>  // b.any
    7298:	ldp	x8, x9, [x19, #8]
    729c:	mov	x0, x19
    72a0:	cmp	x8, x9
    72a4:	cset	w1, eq  // eq = none
    72a8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    72ac:	str	w0, [x19, #40]
    72b0:	tbnz	w27, #0, 73d4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e60>
    72b4:	ldrb	w8, [x23, #8]
    72b8:	sub	w8, w8, #0x1
    72bc:	cmp	w8, #0x16
    72c0:	b.ls	73c8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e54>  // b.plast
    72c4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    72c8:	add	x8, x8, #0x0
    72cc:	b	72e0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1d6c>
    72d0:	mov	x19, xzr
    72d4:	b	73f8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e84>
    72d8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    72dc:	add	x8, x8, #0x0
    72e0:	mov	w9, #0x103                 	// #259
    72e4:	mov	x0, x19
    72e8:	stp	x8, xzr, [x29, #-144]
    72ec:	sturh	w9, [x29, #-128]
    72f0:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    72f4:	stur	x0, [x29, #-176]
    72f8:	sub	x0, x29, #0xb0
    72fc:	sub	x2, x29, #0x90
    7300:	mov	w1, #0x1                   	// #1
    7304:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    7308:	mov	x19, xzr
    730c:	b	73f8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e84>
    7310:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7314:	add	x8, x8, #0x0
    7318:	mov	w9, #0x103                 	// #259
    731c:	stp	x8, xzr, [x29, #-144]
    7320:	sturh	w9, [x29, #-128]
    7324:	stur	x27, [x29, #-176]
    7328:	b	5d40 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7cc>
    732c:	ldr	x8, [x22]
    7330:	mov	x0, x22
    7334:	sub	x19, x29, #0x90
    7338:	ldr	x9, [x8, #16]
    733c:	sub	x8, x29, #0x90
    7340:	blr	x9
    7344:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7348:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    734c:	add	x8, x8, #0x0
    7350:	mov	w9, #0x403                 	// #1027
    7354:	add	x10, sp, #0x20
    7358:	add	x11, x11, #0x0
    735c:	b	7390 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e1c>
    7360:	ldr	x8, [x22]
    7364:	mov	x0, x22
    7368:	sub	x19, x29, #0x90
    736c:	ldr	x9, [x8, #16]
    7370:	sub	x8, x29, #0x90
    7374:	blr	x9
    7378:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    737c:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7380:	add	x8, x8, #0x0
    7384:	mov	w9, #0x403                 	// #1027
    7388:	add	x10, sp, #0x20
    738c:	add	x11, x11, #0x0
    7390:	mov	w12, #0x302                 	// #770
    7394:	stp	x8, x19, [sp, #32]
    7398:	strh	w9, [sp, #48]
    739c:	stp	x10, x11, [x29, #-176]
    73a0:	sturh	w12, [x29, #-160]
    73a4:	cbnz	wzr, 7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>
    73a8:	ldrb	w8, [sp, #49]
    73ac:	cmp	w8, #0x1
    73b0:	b.eq	7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>  // b.none
    73b4:	sub	x0, x29, #0x30
    73b8:	sub	x2, x29, #0xb0
    73bc:	mov	w1, #0x1                   	// #1
    73c0:	stur	x23, [x29, #-48]
    73c4:	b	60e4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xb70>
    73c8:	ldr	x0, [x23, #16]
    73cc:	bl	0 <_ZN4llvm5RecTy9getListTyEv>
    73d0:	mov	x25, x0
    73d4:	mov	w0, #0x1                   	// #1
    73d8:	mov	x1, x21
    73dc:	mov	x2, x24
    73e0:	mov	x3, x23
    73e4:	mov	x4, x25
    73e8:	bl	0 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE>
    73ec:	mov	x1, x20
    73f0:	bl	0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE>
    73f4:	mov	x19, x0
    73f8:	cbz	x22, 5d54 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7e0>
    73fc:	ldr	x0, [x22, #88]
    7400:	add	x8, x22, #0x68
    7404:	cmp	x0, x8
    7408:	b.eq	7410 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e9c>  // b.none
    740c:	bl	0 <free>
    7410:	ldr	x0, [x22, #72]
    7414:	add	x8, x22, #0x58
    7418:	cmp	x0, x8
    741c:	b.eq	7424 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1eb0>  // b.none
    7420:	bl	0 <free>
    7424:	ldr	x0, [x22, #56]
    7428:	add	x8, x22, #0x48
    742c:	cmp	x0, x8
    7430:	b.eq	7438 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1ec4>  // b.none
    7434:	bl	0 <free>
    7438:	ldr	x0, [x22, #8]
    743c:	add	x8, x22, #0x18
    7440:	cmp	x0, x8
    7444:	b.eq	744c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1ed8>  // b.none
    7448:	bl	0 <free>
    744c:	mov	x0, x22
    7450:	bl	0 <_ZdlPv>
    7454:	b	5d54 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7e0>
    7458:	cbz	x10, 7484 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f10>
    745c:	ldr	x8, [x24]
    7460:	mov	x0, x24
    7464:	sub	x20, x29, #0xb0
    7468:	ldr	x9, [x8, #40]
    746c:	sub	x8, x29, #0xb0
    7470:	blr	x9
    7474:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7478:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    747c:	add	x8, x8, #0x0
    7480:	b	694c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x13d8>
    7484:	ldp	x8, x9, [x19, #8]
    7488:	mov	x0, x19
    748c:	cmp	x8, x9
    7490:	cset	w1, eq  // eq = none
    7494:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7498:	cmp	w0, #0xe
    749c:	str	w0, [x19, #40]
    74a0:	b.ne	7588 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2014>  // b.any
    74a4:	ldp	x8, x9, [x19, #8]
    74a8:	mov	x0, x19
    74ac:	cmp	x8, x9
    74b0:	cset	w1, eq  // eq = none
    74b4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    74b8:	cmp	w0, #0x48
    74bc:	str	w0, [x19, #40]
    74c0:	b.ne	7508 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f94>  // b.any
    74c4:	ldp	x0, x1, [x19, #48]
    74c8:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    74cc:	mov	x26, x0
    74d0:	cbz	x20, 7540 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1fcc>
    74d4:	ldr	w8, [x20, #80]
    74d8:	cbz	w8, 7540 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1fcc>
    74dc:	ldr	x10, [x20, #72]
    74e0:	add	x8, x8, x8, lsl #1
    74e4:	lsl	x8, x8, #3
    74e8:	mov	x9, x10
    74ec:	ldr	x11, [x9], #24
    74f0:	cmp	x11, x26
    74f4:	b.eq	7514 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1fa0>  // b.none
    74f8:	subs	x8, x8, #0x18
    74fc:	mov	x10, x9
    7500:	b.ne	74ec <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f78>  // b.any
    7504:	b	7540 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1fcc>
    7508:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    750c:	add	x8, x8, #0x0
    7510:	b	5d28 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7b4>
    7514:	cbz	x10, 7540 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1fcc>
    7518:	ldr	x8, [x26]
    751c:	mov	x0, x26
    7520:	sub	x20, x29, #0xb0
    7524:	ldr	x9, [x8, #40]
    7528:	sub	x8, x29, #0xb0
    752c:	blr	x9
    7530:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7534:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7538:	add	x8, x8, #0x0
    753c:	b	694c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x13d8>
    7540:	ldp	x8, x9, [x19, #8]
    7544:	mov	x0, x19
    7548:	cmp	x8, x9
    754c:	cset	w1, eq  // eq = none
    7550:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7554:	cmp	w0, #0xe
    7558:	str	w0, [x19, #40]
    755c:	b.ne	7588 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2014>  // b.any
    7560:	ldp	x8, x9, [x19, #8]
    7564:	mov	x0, x19
    7568:	cmp	x8, x9
    756c:	cset	w1, eq  // eq = none
    7570:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7574:	str	w0, [x19, #40]
    7578:	cbz	x20, 7594 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2020>
    757c:	mov	x21, xzr
    7580:	mov	x27, x20
    7584:	b	75d8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2064>
    7588:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    758c:	add	x8, x8, #0x0
    7590:	b	5d28 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7b4>
    7594:	ldr	x27, [x19, #344]
    7598:	mov	w0, #0x80                  	// #128
    759c:	bl	0 <_Znwm>
    75a0:	mov	x21, x0
    75a4:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    75a8:	add	x0, x0, #0x0
    75ac:	mov	w1, #0x6                   	// #6
    75b0:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    75b4:	mov	x1, x0
    75b8:	mov	x0, x21
    75bc:	mov	x2, xzr
    75c0:	mov	x3, xzr
    75c4:	mov	x4, x27
    75c8:	mov	w5, wzr
    75cc:	mov	w6, wzr
    75d0:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    75d4:	mov	x27, x21
    75d8:	ldr	x2, [x22, #16]
    75dc:	sub	x0, x29, #0x90
    75e0:	mov	x1, x24
    75e4:	mov	w3, wzr
    75e8:	bl	0 <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb>
    75ec:	sub	x1, x29, #0x90
    75f0:	mov	x0, x27
    75f4:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    75f8:	ldr	x2, [x25, #24]
    75fc:	sub	x0, x29, #0x90
    7600:	mov	x1, x26
    7604:	mov	w3, wzr
    7608:	bl	0 <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb>
    760c:	sub	x1, x29, #0x90
    7610:	mov	x0, x27
    7614:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7618:	mov	x0, x19
    761c:	mov	x1, x27
    7620:	mov	x2, xzr
    7624:	mov	w3, wzr
    7628:	bl	34f4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    762c:	mov	x25, x0
    7630:	mov	x0, x27
    7634:	mov	x1, x24
    7638:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    763c:	mov	x0, x27
    7640:	mov	x1, x26
    7644:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7648:	cbz	x25, 7978 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2404>
    764c:	ldrb	w8, [x25, #8]
    7650:	sub	w8, w8, #0x1
    7654:	cmp	w8, #0x17
    7658:	b.cc	7690 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x211c>  // b.lo, b.ul, b.last
    765c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7660:	add	x8, x8, #0x0
    7664:	mov	w9, #0x103                 	// #259
    7668:	mov	x0, x19
    766c:	stp	x8, xzr, [x29, #-144]
    7670:	sturh	w9, [x29, #-128]
    7674:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    7678:	stur	x0, [x29, #-176]
    767c:	sub	x0, x29, #0xb0
    7680:	sub	x2, x29, #0x90
    7684:	mov	w1, #0x1                   	// #1
    7688:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    768c:	b	7978 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2404>
    7690:	ldr	x8, [x25, #16]
    7694:	ldr	x0, [x22, #16]
    7698:	cmp	x8, x0
    769c:	b.eq	7708 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2194>  // b.none
    76a0:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    76a4:	add	x8, x8, #0x0
    76a8:	mov	w9, #0x103                 	// #259
    76ac:	stp	x8, xzr, [x29, #-112]
    76b0:	sturh	w9, [x29, #-96]
    76b4:	ldr	x8, [x0]
    76b8:	sub	x22, x29, #0x90
    76bc:	ldr	x9, [x8, #16]
    76c0:	sub	x8, x29, #0x90
    76c4:	blr	x9
    76c8:	ldurb	w20, [x29, #-96]
    76cc:	mov	w8, #0x104                 	// #260
    76d0:	strh	w8, [sp, #176]
    76d4:	stp	x22, xzr, [sp, #160]
    76d8:	cmp	w20, #0x1
    76dc:	b.eq	7758 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x21e4>  // b.none
    76e0:	cbnz	w20, 7778 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2204>
    76e4:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    76e8:	mov	w8, #0x100                 	// #256
    76ec:	add	x9, x9, #0x0
    76f0:	mov	w10, #0x103                 	// #259
    76f4:	stp	xzr, xzr, [x29, #-80]
    76f8:	sturh	w8, [x29, #-64]
    76fc:	stp	x9, xzr, [sp, #136]
    7700:	strh	w10, [sp, #152]
    7704:	b	7800 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x228c>
    7708:	ldr	w8, [x19, #40]
    770c:	cmp	w8, #0x9
    7710:	b.ne	786c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x22f8>  // b.any
    7714:	ldp	x8, x9, [x19, #8]
    7718:	mov	x0, x19
    771c:	cmp	x8, x9
    7720:	cset	w1, eq  // eq = none
    7724:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7728:	str	w0, [x19, #40]
    772c:	ldr	x5, [x22, #16]
    7730:	mov	x0, x22
    7734:	mov	x1, x23
    7738:	mov	x2, x24
    773c:	mov	x3, x26
    7740:	mov	x4, x25
    7744:	bl	0 <_ZN4llvm10FoldOpInit3getEPNS_4InitES2_S2_S2_S2_PNS_5RecTyE>
    7748:	mov	x1, x20
    774c:	bl	0 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE>
    7750:	mov	x19, x0
    7754:	b	797c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2408>
    7758:	add	x9, sp, #0xa0
    775c:	ldr	x8, [sp, #176]
    7760:	ldr	q0, [x9]
    7764:	add	x28, sp, #0xa0
    7768:	and	w20, w8, #0xff
    776c:	str	q0, [x9, #128]
    7770:	stur	x8, [x29, #-64]
    7774:	b	77e0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x226c>
    7778:	ldurb	w8, [x29, #-95]
    777c:	ldur	x9, [x29, #-112]
    7780:	mov	w10, #0x2                   	// #2
    7784:	sub	x11, x29, #0x70
    7788:	cmp	w8, #0x1
    778c:	csel	w10, w20, w10, eq  // eq = none
    7790:	sub	x12, x29, #0x90
    7794:	mov	w13, #0x4                   	// #4
    7798:	csel	x8, x9, x11, eq  // eq = none
    779c:	cmp	w10, #0x2
    77a0:	stp	x8, x12, [x29, #-80]
    77a4:	sturb	w10, [x29, #-64]
    77a8:	sturb	w13, [x29, #-63]
    77ac:	b.ne	77e0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x226c>  // b.any
    77b0:	ldrb	w9, [x8, #16]
    77b4:	cbz	w9, 7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>
    77b8:	ldrb	w8, [x8, #17]
    77bc:	cmp	w8, #0x1
    77c0:	b.eq	7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>  // b.none
    77c4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    77c8:	add	x8, x8, #0x0
    77cc:	mov	w9, #0x103                 	// #259
    77d0:	mov	w20, #0x2                   	// #2
    77d4:	stp	x8, xzr, [sp, #136]
    77d8:	strh	w9, [sp, #152]
    77dc:	b	7814 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x22a0>
    77e0:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    77e4:	add	x8, x8, #0x0
    77e8:	mov	w9, #0x103                 	// #259
    77ec:	cmp	w20, #0x1
    77f0:	stp	x8, xzr, [sp, #136]
    77f4:	strh	w9, [sp, #152]
    77f8:	b.eq	7878 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2304>  // b.none
    77fc:	cbnz	w20, 7814 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x22a0>
    7800:	mov	w8, #0x100                 	// #256
    7804:	mov	w20, wzr
    7808:	stp	xzr, xzr, [x29, #-48]
    780c:	sturh	w8, [x29, #-32]
    7810:	b	788c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2318>
    7814:	ldurb	w8, [x29, #-63]
    7818:	ldur	x9, [x29, #-80]
    781c:	mov	w10, #0x2                   	// #2
    7820:	sub	x11, x29, #0x50
    7824:	cmp	w8, #0x1
    7828:	adrp	x12, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    782c:	csel	w10, w20, w10, eq  // eq = none
    7830:	add	x12, x12, #0x0
    7834:	mov	w13, #0x3                   	// #3
    7838:	csel	x8, x9, x11, eq  // eq = none
    783c:	cmp	w10, #0x2
    7840:	stp	x8, x12, [x29, #-48]
    7844:	sturb	w10, [x29, #-32]
    7848:	sturb	w13, [x29, #-31]
    784c:	b.ne	788c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2318>  // b.any
    7850:	ldrb	w9, [x8, #16]
    7854:	cbz	w9, 7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>
    7858:	ldrb	w8, [x8, #17]
    785c:	cmp	w8, #0x1
    7860:	b.eq	7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>  // b.none
    7864:	mov	w20, #0x2                   	// #2
    7868:	b	788c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2318>
    786c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7870:	add	x8, x8, #0x0
    7874:	b	7664 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x20f0>
    7878:	ldr	x8, [sp, #152]
    787c:	ldur	q0, [sp, #136]
    7880:	and	w20, w8, #0xff
    7884:	str	q0, [x28, #160]
    7888:	stur	x8, [x29, #-32]
    788c:	ldr	x0, [x25, #16]
    7890:	sub	x22, x29, #0xb0
    7894:	ldr	x8, [x0]
    7898:	ldr	x9, [x8, #16]
    789c:	sub	x8, x29, #0xb0
    78a0:	blr	x9
    78a4:	mov	w8, #0x104                 	// #260
    78a8:	cmp	w20, #0x1
    78ac:	strh	w8, [sp, #128]
    78b0:	stp	x22, xzr, [sp, #112]
    78b4:	b.eq	78cc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2358>  // b.none
    78b8:	cbnz	w20, 78e0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x236c>
    78bc:	mov	w8, #0x100                 	// #256
    78c0:	stp	xzr, xzr, [sp, #32]
    78c4:	strh	w8, [sp, #48]
    78c8:	b	792c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x23b8>
    78cc:	ldr	q0, [sp, #112]
    78d0:	ldr	x8, [sp, #128]
    78d4:	str	q0, [sp, #32]
    78d8:	str	x8, [sp, #48]
    78dc:	b	792c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x23b8>
    78e0:	ldurb	w8, [x29, #-31]
    78e4:	ldur	x9, [x29, #-48]
    78e8:	mov	w10, #0x2                   	// #2
    78ec:	sub	x11, x29, #0x30
    78f0:	cmp	w8, #0x1
    78f4:	csel	w10, w20, w10, eq  // eq = none
    78f8:	sub	x12, x29, #0xb0
    78fc:	mov	w13, #0x4                   	// #4
    7900:	csel	x8, x9, x11, eq  // eq = none
    7904:	cmp	w10, #0x2
    7908:	stp	x8, x12, [sp, #32]
    790c:	strb	w10, [sp, #48]
    7910:	strb	w13, [sp, #49]
    7914:	b.ne	792c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x23b8>  // b.any
    7918:	ldrb	w9, [x8, #16]
    791c:	cbz	w9, 7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>
    7920:	ldrb	w8, [x8, #17]
    7924:	cmp	w8, #0x1
    7928:	b.eq	7a30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>  // b.none
    792c:	mov	x0, x19
    7930:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    7934:	str	x0, [sp, #88]
    7938:	add	x0, sp, #0x58
    793c:	add	x2, sp, #0x20
    7940:	mov	w1, #0x1                   	// #1
    7944:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    7948:	ldur	x0, [x29, #-176]
    794c:	sub	x8, x29, #0xb0
    7950:	add	x8, x8, #0x10
    7954:	cmp	x0, x8
    7958:	b.eq	7960 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x23ec>  // b.none
    795c:	bl	0 <_ZdlPv>
    7960:	ldur	x0, [x29, #-144]
    7964:	sub	x8, x29, #0x90
    7968:	add	x8, x8, #0x10
    796c:	cmp	x0, x8
    7970:	b.eq	7978 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2404>  // b.none
    7974:	bl	0 <_ZdlPv>
    7978:	mov	x19, xzr
    797c:	cbz	x21, 5d54 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7e0>
    7980:	ldr	x0, [x21, #88]
    7984:	add	x8, x21, #0x68
    7988:	cmp	x0, x8
    798c:	b.eq	7994 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2420>  // b.none
    7990:	bl	0 <free>
    7994:	ldr	x0, [x21, #72]
    7998:	add	x8, x21, #0x58
    799c:	cmp	x0, x8
    79a0:	b.eq	79a8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2434>  // b.none
    79a4:	bl	0 <free>
    79a8:	ldr	x0, [x21, #56]
    79ac:	add	x8, x21, #0x48
    79b0:	cmp	x0, x8
    79b4:	b.eq	79bc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2448>  // b.none
    79b8:	bl	0 <free>
    79bc:	ldr	x0, [x21, #8]
    79c0:	add	x8, x21, #0x18
    79c4:	cmp	x0, x8
    79c8:	b.eq	79d0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x245c>  // b.none
    79cc:	bl	0 <free>
    79d0:	mov	x0, x21
    79d4:	b	7450 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1edc>
    79d8:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    79dc:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    79e0:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    79e4:	add	x0, x0, #0x0
    79e8:	add	x1, x1, #0x0
    79ec:	add	x3, x3, #0x0
    79f0:	mov	w2, #0x43                  	// #67
    79f4:	bl	0 <__assert_fail>
    79f8:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    79fc:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7a00:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7a04:	add	x0, x0, #0x0
    7a08:	add	x1, x1, #0x0
    7a0c:	add	x3, x3, #0x0
    7a10:	mov	w2, #0x108                 	// #264
    7a14:	bl	0 <__assert_fail>
    7a18:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7a1c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7a20:	add	x0, x0, #0x0
    7a24:	add	x1, x1, #0x0
    7a28:	mov	w2, #0x449                 	// #1097
    7a2c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    7a30:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7a34:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7a38:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7a3c:	add	x0, x0, #0x0
    7a40:	add	x1, x1, #0x0
    7a44:	add	x3, x3, #0x0
    7a48:	mov	w2, #0xb8                  	// #184
    7a4c:	bl	0 <__assert_fail>
    7a50:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7a54:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7a58:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7a5c:	add	x0, x0, #0x0
    7a60:	add	x1, x1, #0x0
    7a64:	add	x3, x3, #0x0
    7a68:	mov	w2, #0xa7                  	// #167
    7a6c:	bl	0 <__assert_fail>
    7a70:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7a74:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7a78:	add	x0, x0, #0x0
    7a7c:	add	x1, x1, #0x0
    7a80:	mov	w2, #0x4cf                 	// #1231
    7a84:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    7a88:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7a8c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7a90:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7a94:	add	x0, x0, #0x0
    7a98:	add	x1, x1, #0x0
    7a9c:	add	x3, x3, #0x0
    7aa0:	mov	w2, #0x69                  	// #105
    7aa4:	bl	0 <__assert_fail>
    7aa8:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7aac:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7ab0:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7ab4:	add	x0, x0, #0x0
    7ab8:	add	x1, x1, #0x0
    7abc:	add	x3, x3, #0x0
    7ac0:	mov	w2, #0x69                  	// #105
    7ac4:	bl	0 <__assert_fail>
    7ac8:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7acc:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7ad0:	add	x0, x0, #0x0
    7ad4:	add	x1, x1, #0x0
    7ad8:	mov	w2, #0x58b                 	// #1419
    7adc:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    7ae0:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7ae4:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7ae8:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7aec:	add	x0, x0, #0x0
    7af0:	add	x1, x1, #0x0
    7af4:	add	x3, x3, #0x0
    7af8:	mov	w2, #0x69                  	// #105
    7afc:	bl	0 <__assert_fail>
    7b00:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7b04:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7b08:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7b0c:	add	x0, x0, #0x0
    7b10:	add	x1, x1, #0x0
    7b14:	add	x3, x3, #0x0
    7b18:	mov	w2, #0x9e                  	// #158
    7b1c:	bl	0 <__assert_fail>
    7b20:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7b24:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7b28:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7b2c:	add	x0, x0, #0x0
    7b30:	add	x1, x1, #0x0
    7b34:	add	x3, x3, #0x0
    7b38:	mov	w2, #0x108                 	// #264
    7b3c:	bl	0 <__assert_fail>
    7b40:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7b44:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7b48:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7b4c:	add	x0, x0, #0x0
    7b50:	add	x1, x1, #0x0
    7b54:	add	x3, x3, #0x0
    7b58:	mov	w2, #0x403                 	// #1027
    7b5c:	bl	0 <__assert_fail>
    7b60:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7b64:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7b68:	add	x0, x0, #0x0
    7b6c:	add	x1, x1, #0x0
    7b70:	mov	w2, #0x5be                 	// #1470
    7b74:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000007b78 <_ZN4llvm8TGParser17ParseOperatorTypeEv>:
    7b78:	sub	sp, sp, #0x40
    7b7c:	stp	x29, x30, [sp, #32]
    7b80:	stp	x20, x19, [sp, #48]
    7b84:	add	x29, sp, #0x20
    7b88:	ldr	w8, [x0, #40]
    7b8c:	mov	x19, x0
    7b90:	cmp	w8, #0xa
    7b94:	b.ne	7be8 <_ZN4llvm8TGParser17ParseOperatorTypeEv+0x70>  // b.any
    7b98:	ldp	x8, x9, [x19, #8]
    7b9c:	mov	x0, x19
    7ba0:	cmp	x8, x9
    7ba4:	cset	w1, eq  // eq = none
    7ba8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7bac:	str	w0, [x19, #40]
    7bb0:	mov	x0, x19
    7bb4:	bl	4ebc <_ZN4llvm8TGParser9ParseTypeEv>
    7bb8:	mov	x20, x0
    7bbc:	cbz	x0, 7c20 <_ZN4llvm8TGParser17ParseOperatorTypeEv+0xa8>
    7bc0:	ldr	w8, [x19, #40]
    7bc4:	cmp	w8, #0xb
    7bc8:	b.ne	7be8 <_ZN4llvm8TGParser17ParseOperatorTypeEv+0x70>  // b.any
    7bcc:	ldp	x8, x9, [x19, #8]
    7bd0:	mov	x0, x19
    7bd4:	cmp	x8, x9
    7bd8:	cset	w1, eq  // eq = none
    7bdc:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7be0:	str	w0, [x19, #40]
    7be4:	b	7c50 <_ZN4llvm8TGParser17ParseOperatorTypeEv+0xd8>
    7be8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7bec:	add	x8, x8, #0x0
    7bf0:	mov	w9, #0x103                 	// #259
    7bf4:	mov	x0, x19
    7bf8:	stp	x8, xzr, [sp]
    7bfc:	strh	w9, [sp, #16]
    7c00:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    7c04:	stur	x0, [x29, #-8]
    7c08:	sub	x0, x29, #0x8
    7c0c:	mov	x2, sp
    7c10:	mov	w1, #0x1                   	// #1
    7c14:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    7c18:	mov	x20, xzr
    7c1c:	b	7c50 <_ZN4llvm8TGParser17ParseOperatorTypeEv+0xd8>
    7c20:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7c24:	add	x8, x8, #0x0
    7c28:	mov	w9, #0x103                 	// #259
    7c2c:	mov	x0, x19
    7c30:	stp	x8, xzr, [sp]
    7c34:	strh	w9, [sp, #16]
    7c38:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    7c3c:	stur	x0, [x29, #-8]
    7c40:	sub	x0, x29, #0x8
    7c44:	mov	x2, sp
    7c48:	mov	w1, #0x1                   	// #1
    7c4c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    7c50:	mov	x0, x20
    7c54:	ldp	x20, x19, [sp, #48]
    7c58:	ldp	x29, x30, [sp, #32]
    7c5c:	add	sp, sp, #0x40
    7c60:	ret

0000000000007c64 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE>:
    7c64:	stp	x29, x30, [sp, #-96]!
    7c68:	str	x28, [sp, #16]
    7c6c:	stp	x26, x25, [sp, #32]
    7c70:	stp	x24, x23, [sp, #48]
    7c74:	stp	x22, x21, [sp, #64]
    7c78:	stp	x20, x19, [sp, #80]
    7c7c:	mov	x29, sp
    7c80:	sub	sp, sp, #0x1a0
    7c84:	ldp	x8, x9, [x0, #8]
    7c88:	mov	x20, x1
    7c8c:	mov	x21, x2
    7c90:	mov	x19, x0
    7c94:	cmp	x8, x9
    7c98:	cset	w1, eq  // eq = none
    7c9c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7ca0:	cmp	w0, #0x8
    7ca4:	str	w0, [x19, #40]
    7ca8:	b.ne	7f38 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x2d4>  // b.any
    7cac:	ldp	x8, x9, [x19, #8]
    7cb0:	mov	x0, x19
    7cb4:	cmp	x8, x9
    7cb8:	cset	w1, eq  // eq = none
    7cbc:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7cc0:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7cc4:	ldr	d0, [x9]
    7cc8:	sub	x8, x29, #0x38
    7ccc:	sub	x10, x29, #0x68
    7cd0:	cmp	w0, #0x9
    7cd4:	add	x22, x8, #0x10
    7cd8:	add	x23, x10, #0x10
    7cdc:	str	w0, [x19, #40]
    7ce0:	stur	x22, [x29, #-56]
    7ce4:	stur	x23, [x29, #-104]
    7ce8:	stur	d0, [x29, #-48]
    7cec:	stur	d0, [x29, #-96]
    7cf0:	b.ne	7d38 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0xd4>  // b.any
    7cf4:	ldp	x8, x9, [x19, #8]
    7cf8:	mov	x0, x19
    7cfc:	cmp	x8, x9
    7d00:	cset	w1, eq  // eq = none
    7d04:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7d08:	str	w0, [x19, #40]
    7d0c:	ldur	w8, [x29, #-48]
    7d10:	cbz	w8, 7f70 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x30c>
    7d14:	ldur	w8, [x29, #-96]
    7d18:	cbz	w8, 7fa4 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x340>
    7d1c:	adrp	x26, 0 <_ZN4llvm8BitRecTy6SharedE>
    7d20:	ldur	x24, [x29, #-104]
    7d24:	ldr	x26, [x26]
    7d28:	mov	x4, xzr
    7d2c:	add	x23, sp, #0x90
    7d30:	lsl	x25, x8, #3
    7d34:	b	7e5c <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x1f8>
    7d38:	mov	x0, x19
    7d3c:	mov	x1, x20
    7d40:	mov	x2, xzr
    7d44:	mov	w3, wzr
    7d48:	bl	34f4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    7d4c:	cbz	x0, 7ff4 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x390>
    7d50:	ldp	w8, w9, [x29, #-48]
    7d54:	mov	x24, x0
    7d58:	cmp	w8, w9
    7d5c:	b.cs	7e14 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x1b0>  // b.hs, b.nlast
    7d60:	ldur	x9, [x29, #-56]
    7d64:	str	x24, [x9, w8, uxtw #3]
    7d68:	ldp	w8, w9, [x29, #-48]
    7d6c:	cmp	w8, w9
    7d70:	b.cs	8340 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x6dc>  // b.hs, b.nlast
    7d74:	add	w8, w8, #0x1
    7d78:	stur	w8, [x29, #-48]
    7d7c:	ldr	w8, [x19, #40]
    7d80:	cmp	w8, #0xc
    7d84:	b.ne	7fb0 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x34c>  // b.any
    7d88:	ldp	x8, x9, [x19, #8]
    7d8c:	mov	x0, x19
    7d90:	cmp	x8, x9
    7d94:	cset	w1, eq  // eq = none
    7d98:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7d9c:	str	w0, [x19, #40]
    7da0:	mov	x0, x19
    7da4:	mov	x1, x20
    7da8:	mov	x2, x21
    7dac:	mov	w3, wzr
    7db0:	bl	34f4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    7db4:	cbz	x0, 7ff4 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x390>
    7db8:	ldp	w8, w9, [x29, #-96]
    7dbc:	mov	x24, x0
    7dc0:	cmp	w8, w9
    7dc4:	b.cs	7e30 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x1cc>  // b.hs, b.nlast
    7dc8:	ldur	x9, [x29, #-104]
    7dcc:	str	x24, [x9, w8, uxtw #3]
    7dd0:	ldp	w8, w9, [x29, #-96]
    7dd4:	cmp	w8, w9
    7dd8:	b.cs	8340 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x6dc>  // b.hs, b.nlast
    7ddc:	add	w8, w8, #0x1
    7de0:	stur	w8, [x29, #-96]
    7de4:	ldr	w8, [x19, #40]
    7de8:	cmp	w8, #0xe
    7dec:	b.ne	7fbc <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x358>  // b.any
    7df0:	ldp	x8, x9, [x19, #8]
    7df4:	mov	x0, x19
    7df8:	cmp	x8, x9
    7dfc:	cset	w1, eq  // eq = none
    7e00:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7e04:	cmp	w0, #0x9
    7e08:	str	w0, [x19, #40]
    7e0c:	b.ne	7d38 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0xd4>  // b.any
    7e10:	b	7cf4 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x90>
    7e14:	sub	x0, x29, #0x38
    7e18:	mov	w3, #0x8                   	// #8
    7e1c:	mov	x1, x22
    7e20:	mov	x2, xzr
    7e24:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    7e28:	ldur	w8, [x29, #-48]
    7e2c:	b	7d60 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0xfc>
    7e30:	sub	x0, x29, #0x68
    7e34:	mov	w3, #0x8                   	// #8
    7e38:	mov	x1, x23
    7e3c:	mov	x2, xzr
    7e40:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    7e44:	ldur	w8, [x29, #-96]
    7e48:	b	7dc8 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x164>
    7e4c:	csel	x4, xzr, x21, eq  // eq = none
    7e50:	subs	x25, x25, #0x8
    7e54:	add	x24, x24, #0x8
    7e58:	b.eq	7f7c <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x318>  // b.none
    7e5c:	ldr	x21, [x24]
    7e60:	cbz	x21, 8360 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x6fc>
    7e64:	ldrb	w8, [x21, #8]
    7e68:	mov	x22, x4
    7e6c:	sub	w9, w8, #0x1
    7e70:	cmp	w9, #0x16
    7e74:	b.ls	7e80 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x21c>  // b.plast
    7e78:	mov	x0, xzr
    7e7c:	b	7e9c <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x238>
    7e80:	cmp	w8, #0x3
    7e84:	b.ne	7e98 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x234>  // b.any
    7e88:	ldr	w0, [x21, #32]
    7e8c:	bl	0 <_ZN4llvm9BitsRecTy3getEj>
    7e90:	ldrb	w8, [x21, #8]
    7e94:	b	7e9c <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x238>
    7e98:	ldr	x0, [x21, #16]
    7e9c:	cmp	w8, #0x2
    7ea0:	csel	x21, x26, x0, eq  // eq = none
    7ea4:	cmp	w8, #0x18
    7ea8:	cbz	x22, 7e4c <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x1e8>
    7eac:	b.ne	7eb8 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x254>  // b.any
    7eb0:	mov	x4, x22
    7eb4:	b	7e50 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x1ec>
    7eb8:	mov	x0, x22
    7ebc:	mov	x1, x21
    7ec0:	bl	0 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_>
    7ec4:	mov	x4, x0
    7ec8:	cbnz	x0, 7e50 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x1ec>
    7ecc:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7ed0:	add	x8, x8, #0x0
    7ed4:	mov	w9, #0x103                 	// #259
    7ed8:	stp	x8, xzr, [sp, #168]
    7edc:	strh	w9, [sp, #184]
    7ee0:	ldr	x8, [x22]
    7ee4:	mov	x0, x22
    7ee8:	add	x24, sp, #0x70
    7eec:	ldr	x9, [x8, #16]
    7ef0:	add	x8, sp, #0x70
    7ef4:	blr	x9
    7ef8:	ldrb	w20, [sp, #184]
    7efc:	mov	w8, #0x104                 	// #260
    7f00:	strh	w8, [sp, #160]
    7f04:	stp	x24, xzr, [sp, #144]
    7f08:	cmp	w20, #0x1
    7f0c:	b.eq	804c <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x3e8>  // b.none
    7f10:	cbnz	w20, 8064 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x400>
    7f14:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7f18:	mov	w8, #0x100                 	// #256
    7f1c:	add	x9, x9, #0x0
    7f20:	mov	w10, #0x103                 	// #259
    7f24:	stp	xzr, xzr, [sp, #192]
    7f28:	strh	w8, [sp, #208]
    7f2c:	stp	x9, xzr, [sp, #88]
    7f30:	strh	w10, [sp, #104]
    7f34:	b	80ec <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x488>
    7f38:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7f3c:	add	x8, x8, #0x0
    7f40:	mov	w9, #0x103                 	// #259
    7f44:	mov	x0, x19
    7f48:	stp	x8, xzr, [x29, #-56]
    7f4c:	sturh	w9, [x29, #-40]
    7f50:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    7f54:	stur	x0, [x29, #-104]
    7f58:	sub	x0, x29, #0x68
    7f5c:	sub	x2, x29, #0x38
    7f60:	mov	w1, #0x1                   	// #1
    7f64:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    7f68:	mov	x19, xzr
    7f6c:	b	8028 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x3c4>
    7f70:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7f74:	add	x8, x8, #0x0
    7f78:	b	7fcc <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x368>
    7f7c:	cbz	x4, 7fa4 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x340>
    7f80:	ldur	x0, [x29, #-56]
    7f84:	ldur	w1, [x29, #-48]
    7f88:	ldur	x2, [x29, #-104]
    7f8c:	ldur	w3, [x29, #-96]
    7f90:	bl	0 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE>
    7f94:	mov	x1, x20
    7f98:	bl	0 <_ZNK4llvm10CondOpInit4FoldEPNS_6RecordE>
    7f9c:	mov	x19, x0
    7fa0:	b	7ff8 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x394>
    7fa4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7fa8:	add	x8, x8, #0x0
    7fac:	b	7fcc <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x368>
    7fb0:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7fb4:	add	x8, x8, #0x0
    7fb8:	b	7fcc <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x368>
    7fbc:	cmp	w8, #0x9
    7fc0:	b.eq	7cf4 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x90>  // b.none
    7fc4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7fc8:	add	x8, x8, #0x0
    7fcc:	mov	w9, #0x103                 	// #259
    7fd0:	mov	x0, x19
    7fd4:	stp	x8, xzr, [sp, #112]
    7fd8:	strh	w9, [sp, #128]
    7fdc:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    7fe0:	str	x0, [sp, #32]
    7fe4:	add	x0, sp, #0x20
    7fe8:	add	x2, sp, #0x70
    7fec:	mov	w1, #0x1                   	// #1
    7ff0:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    7ff4:	mov	x19, xzr
    7ff8:	ldur	x0, [x29, #-104]
    7ffc:	sub	x8, x29, #0x68
    8000:	add	x8, x8, #0x10
    8004:	cmp	x0, x8
    8008:	b.eq	8010 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x3ac>  // b.none
    800c:	bl	0 <free>
    8010:	ldur	x0, [x29, #-56]
    8014:	sub	x8, x29, #0x38
    8018:	add	x8, x8, #0x10
    801c:	cmp	x0, x8
    8020:	b.eq	8028 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x3c4>  // b.none
    8024:	bl	0 <free>
    8028:	mov	x0, x19
    802c:	add	sp, sp, #0x1a0
    8030:	ldp	x20, x19, [sp, #80]
    8034:	ldp	x22, x21, [sp, #64]
    8038:	ldp	x24, x23, [sp, #48]
    803c:	ldp	x26, x25, [sp, #32]
    8040:	ldr	x28, [sp, #16]
    8044:	ldp	x29, x30, [sp], #96
    8048:	ret
    804c:	ldr	x8, [sp, #160]
    8050:	ldr	q0, [x23]
    8054:	and	w20, w8, #0xff
    8058:	str	q0, [x23, #48]
    805c:	str	x8, [sp, #208]
    8060:	b	80cc <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x468>
    8064:	ldrb	w8, [sp, #185]
    8068:	ldr	x9, [sp, #168]
    806c:	mov	w10, #0x2                   	// #2
    8070:	add	x11, sp, #0xa8
    8074:	cmp	w8, #0x1
    8078:	csel	w10, w20, w10, eq  // eq = none
    807c:	add	x12, sp, #0x70
    8080:	mov	w13, #0x4                   	// #4
    8084:	csel	x8, x9, x11, eq  // eq = none
    8088:	cmp	w10, #0x2
    808c:	stp	x8, x12, [sp, #192]
    8090:	strb	w10, [sp, #208]
    8094:	strb	w13, [sp, #209]
    8098:	b.ne	80cc <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x468>  // b.any
    809c:	ldrb	w9, [x8, #16]
    80a0:	cbz	w9, 82c0 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x65c>
    80a4:	ldrb	w8, [x8, #17]
    80a8:	cmp	w8, #0x1
    80ac:	b.eq	82c0 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x65c>  // b.none
    80b0:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    80b4:	add	x8, x8, #0x0
    80b8:	mov	w9, #0x103                 	// #259
    80bc:	mov	w20, #0x2                   	// #2
    80c0:	stp	x8, xzr, [sp, #88]
    80c4:	strh	w9, [sp, #104]
    80c8:	b	8100 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x49c>
    80cc:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    80d0:	add	x8, x8, #0x0
    80d4:	mov	w9, #0x103                 	// #259
    80d8:	cmp	w20, #0x1
    80dc:	stp	x8, xzr, [sp, #88]
    80e0:	strh	w9, [sp, #104]
    80e4:	b.eq	8158 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x4f4>  // b.none
    80e8:	cbnz	w20, 8100 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x49c>
    80ec:	mov	w8, #0x100                 	// #256
    80f0:	mov	w20, wzr
    80f4:	stp	xzr, xzr, [x29, #-192]
    80f8:	sturh	w8, [x29, #-176]
    80fc:	b	816c <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x508>
    8100:	ldrb	w8, [sp, #209]
    8104:	ldr	x9, [sp, #192]
    8108:	mov	w10, #0x2                   	// #2
    810c:	add	x11, sp, #0xc0
    8110:	cmp	w8, #0x1
    8114:	adrp	x12, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8118:	csel	w10, w20, w10, eq  // eq = none
    811c:	add	x12, x12, #0x0
    8120:	mov	w13, #0x3                   	// #3
    8124:	csel	x8, x9, x11, eq  // eq = none
    8128:	cmp	w10, #0x2
    812c:	stp	x8, x12, [x29, #-192]
    8130:	sturb	w10, [x29, #-176]
    8134:	sturb	w13, [x29, #-175]
    8138:	b.ne	816c <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x508>  // b.any
    813c:	ldrb	w9, [x8, #16]
    8140:	cbz	w9, 82c0 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x65c>
    8144:	ldrb	w8, [x8, #17]
    8148:	cmp	w8, #0x1
    814c:	b.eq	82c0 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x65c>  // b.none
    8150:	mov	w20, #0x2                   	// #2
    8154:	b	816c <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x508>
    8158:	ldr	x8, [sp, #104]
    815c:	ldur	q0, [sp, #88]
    8160:	and	w20, w8, #0xff
    8164:	str	q0, [x23, #80]
    8168:	stur	x8, [x29, #-176]
    816c:	ldr	x8, [x21]
    8170:	mov	x0, x21
    8174:	add	x22, sp, #0x20
    8178:	ldr	x9, [x8, #16]
    817c:	add	x8, sp, #0x20
    8180:	blr	x9
    8184:	mov	w8, #0x104                 	// #260
    8188:	cmp	w20, #0x1
    818c:	strh	w8, [sp, #80]
    8190:	stp	x22, xzr, [sp, #64]
    8194:	b.eq	81c0 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x55c>  // b.none
    8198:	cbnz	w20, 81d8 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x574>
    819c:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    81a0:	mov	w8, #0x100                 	// #256
    81a4:	add	x9, x9, #0x0
    81a8:	mov	w10, #0x103                 	// #259
    81ac:	stp	xzr, xzr, [x29, #-160]
    81b0:	sturh	w8, [x29, #-144]
    81b4:	stp	x9, xzr, [sp, #8]
    81b8:	strh	w10, [sp, #24]
    81bc:	b	8260 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x5fc>
    81c0:	ldr	x8, [sp, #80]
    81c4:	ldr	q0, [sp, #64]
    81c8:	and	w20, w8, #0xff
    81cc:	str	q0, [x23, #112]
    81d0:	stur	x8, [x29, #-144]
    81d4:	b	8240 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x5dc>
    81d8:	ldurb	w8, [x29, #-175]
    81dc:	ldur	x9, [x29, #-192]
    81e0:	mov	w10, #0x2                   	// #2
    81e4:	sub	x11, x29, #0xc0
    81e8:	cmp	w8, #0x1
    81ec:	csel	w10, w20, w10, eq  // eq = none
    81f0:	add	x12, sp, #0x20
    81f4:	mov	w13, #0x4                   	// #4
    81f8:	csel	x8, x9, x11, eq  // eq = none
    81fc:	cmp	w10, #0x2
    8200:	stp	x8, x12, [x29, #-160]
    8204:	sturb	w10, [x29, #-144]
    8208:	sturb	w13, [x29, #-143]
    820c:	b.ne	8240 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x5dc>  // b.any
    8210:	ldrb	w9, [x8, #16]
    8214:	cbz	w9, 82c0 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x65c>
    8218:	ldrb	w8, [x8, #17]
    821c:	cmp	w8, #0x1
    8220:	b.eq	82c0 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x65c>  // b.none
    8224:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8228:	add	x8, x8, #0x0
    822c:	mov	w9, #0x103                 	// #259
    8230:	mov	w20, #0x2                   	// #2
    8234:	stp	x8, xzr, [sp, #8]
    8238:	strh	w9, [sp, #24]
    823c:	b	8270 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x60c>
    8240:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8244:	add	x8, x8, #0x0
    8248:	mov	w9, #0x103                 	// #259
    824c:	cmp	w20, #0x1
    8250:	stp	x8, xzr, [sp, #8]
    8254:	strh	w9, [sp, #24]
    8258:	b.eq	82e0 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x67c>  // b.none
    825c:	cbnz	w20, 8270 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x60c>
    8260:	mov	w8, #0x100                 	// #256
    8264:	stp	xzr, xzr, [x29, #-128]
    8268:	sturh	w8, [x29, #-112]
    826c:	b	82f0 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x68c>
    8270:	ldurb	w8, [x29, #-143]
    8274:	ldur	x9, [x29, #-160]
    8278:	mov	w10, #0x2                   	// #2
    827c:	sub	x11, x29, #0xa0
    8280:	cmp	w8, #0x1
    8284:	adrp	x12, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8288:	csel	w10, w20, w10, eq  // eq = none
    828c:	add	x12, x12, #0x0
    8290:	mov	w13, #0x3                   	// #3
    8294:	csel	x8, x9, x11, eq  // eq = none
    8298:	cmp	w10, #0x2
    829c:	stp	x8, x12, [x29, #-128]
    82a0:	sturb	w10, [x29, #-112]
    82a4:	sturb	w13, [x29, #-111]
    82a8:	b.ne	82f0 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x68c>  // b.any
    82ac:	ldrb	w9, [x8, #16]
    82b0:	cbz	w9, 82c0 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x65c>
    82b4:	ldrb	w8, [x8, #17]
    82b8:	cmp	w8, #0x1
    82bc:	b.ne	82f0 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x68c>  // b.any
    82c0:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    82c4:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    82c8:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    82cc:	add	x0, x0, #0x0
    82d0:	add	x1, x1, #0x0
    82d4:	add	x3, x3, #0x0
    82d8:	mov	w2, #0xb8                  	// #184
    82dc:	bl	0 <__assert_fail>
    82e0:	ldur	q0, [sp, #8]
    82e4:	ldr	x8, [sp, #24]
    82e8:	str	q0, [x23, #144]
    82ec:	stur	x8, [x29, #-112]
    82f0:	mov	x0, x19
    82f4:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    82f8:	stur	x0, [x29, #-8]
    82fc:	sub	x0, x29, #0x8
    8300:	sub	x2, x29, #0x80
    8304:	mov	w1, #0x1                   	// #1
    8308:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    830c:	ldr	x0, [sp, #32]
    8310:	add	x8, sp, #0x20
    8314:	add	x8, x8, #0x10
    8318:	cmp	x0, x8
    831c:	b.eq	8324 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x6c0>  // b.none
    8320:	bl	0 <_ZdlPv>
    8324:	ldr	x0, [sp, #112]
    8328:	add	x8, sp, #0x70
    832c:	add	x8, x8, #0x10
    8330:	cmp	x0, x8
    8334:	b.eq	7ff4 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x390>  // b.none
    8338:	bl	0 <_ZdlPv>
    833c:	b	7ff4 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x390>
    8340:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8344:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8348:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    834c:	add	x0, x0, #0x0
    8350:	add	x1, x1, #0x0
    8354:	add	x3, x3, #0x0
    8358:	mov	w2, #0x43                  	// #67
    835c:	bl	0 <__assert_fail>
    8360:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8364:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8368:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    836c:	add	x0, x0, #0x0
    8370:	add	x1, x1, #0x0
    8374:	add	x3, x3, #0x0
    8378:	mov	w2, #0x69                  	// #105
    837c:	bl	0 <__assert_fail>

0000000000008380 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>:
    8380:	str	d8, [sp, #-112]!
    8384:	stp	x29, x30, [sp, #16]
    8388:	stp	x28, x27, [sp, #32]
    838c:	stp	x26, x25, [sp, #48]
    8390:	stp	x24, x23, [sp, #64]
    8394:	stp	x22, x21, [sp, #80]
    8398:	stp	x20, x19, [sp, #96]
    839c:	mov	x29, sp
    83a0:	sub	sp, sp, #0x360
    83a4:	ldr	w8, [x0, #40]
    83a8:	mov	x20, x2
    83ac:	mov	x19, x0
    83b0:	mov	x21, x1
    83b4:	sub	w9, w8, #0x27
    83b8:	cmp	w9, #0x1f
    83bc:	b.cs	83f0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x70>  // b.hs, b.nlast
    83c0:	mov	x0, x19
    83c4:	mov	x1, x21
    83c8:	mov	x2, x20
    83cc:	add	sp, sp, #0x360
    83d0:	ldp	x20, x19, [sp, #96]
    83d4:	ldp	x22, x21, [sp, #80]
    83d8:	ldp	x24, x23, [sp, #64]
    83dc:	ldp	x26, x25, [sp, #48]
    83e0:	ldp	x28, x27, [sp, #32]
    83e4:	ldp	x29, x30, [sp, #16]
    83e8:	ldr	d8, [sp], #112
    83ec:	b	5574 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE>
    83f0:	sub	w8, w8, #0x4
    83f4:	cmp	w8, #0x47
    83f8:	b.hi	8964 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x5e4>  // b.pmore
    83fc:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8400:	add	x9, x9, #0x0
    8404:	adr	x10, 8418 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x98>
    8408:	ldrh	w11, [x9, x8, lsl #1]
    840c:	add	x10, x10, x11, lsl #2
    8410:	mov	w22, w3
    8414:	br	x10
    8418:	ldp	x8, x9, [x19, #8]
    841c:	mov	x0, x19
    8420:	cmp	x8, x9
    8424:	cset	w1, eq  // eq = none
    8428:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    842c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8430:	ldr	d0, [x8]
    8434:	sub	x8, x29, #0xa8
    8438:	add	x8, x8, #0x10
    843c:	str	w0, [x19, #40]
    8440:	stur	x8, [x29, #-168]
    8444:	stur	d0, [x29, #-160]
    8448:	cbz	x20, 8a50 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x6d0>
    844c:	ldr	w8, [x20, #8]
    8450:	mov	x22, x20
    8454:	cmp	w8, #0x5
    8458:	b.eq	8a54 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x6d4>  // b.none
    845c:	ldr	x8, [x20]
    8460:	mov	x0, x20
    8464:	mov	x21, sp
    8468:	ldr	x9, [x8, #16]
    846c:	mov	x8, sp
    8470:	blr	x9
    8474:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8478:	add	x8, x8, #0x0
    847c:	mov	w9, #0x403                 	// #1027
    8480:	mov	x0, x19
    8484:	stp	x8, x21, [sp, #304]
    8488:	strh	w9, [sp, #320]
    848c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    8490:	str	x0, [sp, #224]
    8494:	add	x0, sp, #0xe0
    8498:	add	x2, sp, #0x130
    849c:	mov	w1, #0x1                   	// #1
    84a0:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    84a4:	ldr	x0, [sp]
    84a8:	add	x8, x21, #0x10
    84ac:	cmp	x0, x8
    84b0:	b.eq	8f98 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc18>  // b.none
    84b4:	bl	0 <_ZdlPv>
    84b8:	b	8f98 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc18>
    84bc:	mov	x0, x19
    84c0:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    84c4:	ldr	w8, [x19, #40]
    84c8:	and	w8, w8, #0xfffffffc
    84cc:	cmp	w8, #0x48
    84d0:	b.ne	9a88 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1708>  // b.any
    84d4:	mov	x20, x0
    84d8:	ldp	x0, x1, [x19, #48]
    84dc:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    84e0:	ldp	x8, x9, [x19, #8]
    84e4:	mov	x23, x0
    84e8:	mov	x0, x19
    84ec:	cmp	x8, x9
    84f0:	cset	w1, eq  // eq = none
    84f4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    84f8:	cmp	w0, #0xa
    84fc:	str	w0, [x19, #40]
    8500:	b.ne	899c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x61c>  // b.any
    8504:	ldp	x8, x9, [x19, #8]
    8508:	mov	x0, x19
    850c:	cmp	x8, x9
    8510:	cset	w1, eq  // eq = none
    8514:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8518:	cmp	w0, #0xb
    851c:	str	w0, [x19, #40]
    8520:	b.ne	8b78 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x7f8>  // b.any
    8524:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8528:	add	x8, x8, #0x0
    852c:	b	896c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x5ec>
    8530:	ldp	x8, x9, [x19, #8]
    8534:	mov	x0, x19
    8538:	cmp	x8, x9
    853c:	cset	w1, eq  // eq = none
    8540:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8544:	str	w0, [x19, #40]
    8548:	mov	x0, x19
    854c:	mov	x1, x21
    8550:	mov	x2, x20
    8554:	mov	w3, w22
    8558:	add	sp, sp, #0x360
    855c:	ldp	x20, x19, [sp, #96]
    8560:	ldp	x22, x21, [sp, #80]
    8564:	ldp	x24, x23, [sp, #64]
    8568:	ldp	x26, x25, [sp, #48]
    856c:	ldp	x28, x27, [sp, #32]
    8570:	ldp	x29, x30, [sp, #16]
    8574:	ldr	d8, [sp], #112
    8578:	b	8380 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    857c:	bl	0 <_ZN4llvm9UnsetInit3getEv>
    8580:	b	8944 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x5c4>
    8584:	ldr	x8, [x19, #8]
    8588:	ldr	x9, [x19, #32]
    858c:	adrp	x12, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8590:	ldr	x21, [x19, #80]
    8594:	mov	w10, #0xfffffffe            	// #-2
    8598:	ldr	d0, [x12]
    859c:	sub	x8, x8, x9
    85a0:	add	x22, x8, x10
    85a4:	sub	x11, x29, #0xa8
    85a8:	and	x20, x22, #0xffffffff
    85ac:	add	x1, x11, #0x10
    85b0:	cmp	x20, #0x11
    85b4:	stur	x1, [x29, #-168]
    85b8:	stur	d0, [x29, #-160]
    85bc:	b.cc	89d4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x654>  // b.lo, b.ul, b.last
    85c0:	sub	x0, x29, #0xa8
    85c4:	mov	w3, #0x8                   	// #8
    85c8:	mov	x2, x20
    85cc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    85d0:	ldur	w8, [x29, #-156]
    85d4:	b	89d8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x658>
    85d8:	ldp	x8, x9, [x19, #8]
    85dc:	mov	x0, x19
    85e0:	cmp	x8, x9
    85e4:	cset	w1, eq  // eq = none
    85e8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    85ec:	sub	w8, w0, #0x11
    85f0:	cmp	w8, #0x37
    85f4:	str	w0, [x19, #40]
    85f8:	b.hi	8c8c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x90c>  // b.pmore
    85fc:	mov	w9, #0x1                   	// #1
    8600:	lsl	x8, x9, x8
    8604:	mov	x9, #0x1                   	// #1
    8608:	movk	x9, #0x2, lsl #32
    860c:	movk	x9, #0x90, lsl #48
    8610:	tst	x8, x9
    8614:	b.eq	8c8c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x90c>  // b.none
    8618:	mov	x0, x19
    861c:	mov	x1, x21
    8620:	mov	x2, xzr
    8624:	mov	w3, wzr
    8628:	bl	34f4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    862c:	mov	x20, x0
    8630:	cbz	x0, 91ac <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe2c>
    8634:	ldr	w0, [x19, #40]
    8638:	cmp	w0, #0xc
    863c:	b.ne	8c14 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x894>  // b.any
    8640:	ldp	x8, x9, [x19, #8]
    8644:	mov	x0, x19
    8648:	cmp	x8, x9
    864c:	cset	w1, eq  // eq = none
    8650:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8654:	cmp	w0, #0x4a
    8658:	str	w0, [x19, #40]
    865c:	b.ne	8d98 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xa18>  // b.any
    8660:	ldp	x0, x1, [x19, #48]
    8664:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    8668:	ldp	x8, x9, [x19, #8]
    866c:	mov	x22, x0
    8670:	mov	x0, x19
    8674:	cmp	x8, x9
    8678:	cset	w1, eq  // eq = none
    867c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8680:	str	w0, [x19, #40]
    8684:	b	8c18 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x898>
    8688:	ldp	x20, x21, [x19, #48]
    868c:	mov	x0, x19
    8690:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    8694:	stur	x0, [x29, #-168]
    8698:	sub	x2, x29, #0xa8
    869c:	mov	x0, x20
    86a0:	mov	x1, x21
    86a4:	bl	0 <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE>
    86a8:	b	8944 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x5c4>
    86ac:	sub	x8, x29, #0xa8
    86b0:	add	x22, x8, #0x10
    86b4:	stur	x22, [x29, #-168]
    86b8:	ldp	x20, x21, [x19, #48]
    86bc:	cbnz	x20, 86c4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x344>
    86c0:	cbnz	x21, 9aa8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1728>
    86c4:	cmp	x21, #0x10
    86c8:	str	x21, [sp]
    86cc:	b.cc	8a34 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x6b4>  // b.lo, b.ul, b.last
    86d0:	sub	x0, x29, #0xa8
    86d4:	mov	x1, sp
    86d8:	mov	x2, xzr
    86dc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    86e0:	ldr	x8, [sp]
    86e4:	stur	x0, [x29, #-168]
    86e8:	stur	x8, [x29, #-152]
    86ec:	b	8a38 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x6b8>
    86f0:	mov	x0, x19
    86f4:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    86f8:	ldp	x8, x9, [x19, #8]
    86fc:	mov	x20, x0
    8700:	mov	x0, x19
    8704:	cmp	x8, x9
    8708:	cset	w1, eq  // eq = none
    870c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8710:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8714:	ldr	d8, [x9]
    8718:	sub	x8, x29, #0xa8
    871c:	add	x8, x8, #0x10
    8720:	cmp	w0, #0x7
    8724:	str	w0, [x19, #40]
    8728:	stur	x8, [x29, #-168]
    872c:	stur	d8, [x29, #-160]
    8730:	b.eq	8760 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x3e0>  // b.none
    8734:	sub	x1, x29, #0xa8
    8738:	mov	x0, x19
    873c:	mov	x2, x21
    8740:	mov	x3, xzr
    8744:	mov	x4, xzr
    8748:	bl	4558 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE>
    874c:	ldur	w8, [x29, #-160]
    8750:	cbz	w8, 8f98 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc18>
    8754:	ldr	w8, [x19, #40]
    8758:	cmp	w8, #0x7
    875c:	b.ne	8c98 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x918>  // b.any
    8760:	ldp	x8, x9, [x19, #8]
    8764:	mov	x0, x19
    8768:	cmp	x8, x9
    876c:	cset	w1, eq  // eq = none
    8770:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8774:	str	w0, [x19, #40]
    8778:	ldur	w26, [x29, #-160]
    877c:	mov	x8, sp
    8780:	add	x19, x8, #0x10
    8784:	str	x19, [sp]
    8788:	str	d8, [sp, #8]
    878c:	cbz	w26, 8b4c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x7cc>
    8790:	adrp	x21, 0 <_ZN4llvm8BitRecTy6SharedE>
    8794:	ldr	x21, [x21]
    8798:	mov	w25, wzr
    879c:	mov	w9, wzr
    87a0:	mov	w8, #0x10                  	// #16
    87a4:	ldur	x10, [x29, #-168]
    87a8:	ldr	x22, [x10, w25, uxtw #3]
    87ac:	cbz	x22, 9a28 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x16a8>
    87b0:	ldrb	w10, [x22, #8]
    87b4:	cmp	w10, #0x3
    87b8:	b.ne	882c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x4ac>  // b.any
    87bc:	ldr	w23, [x22, #32]
    87c0:	cbz	w23, 8904 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x584>
    87c4:	add	x24, x22, #0x28
    87c8:	sub	w10, w23, #0x1
    87cc:	ldr	x27, [x24, w10, uxtw #3]
    87d0:	cmp	w9, w8
    87d4:	b.cs	8810 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x490>  // b.hs, b.nlast
    87d8:	ldr	x8, [sp]
    87dc:	str	x27, [x8, w9, uxtw #3]
    87e0:	ldp	w9, w8, [sp, #8]
    87e4:	cmp	w9, w8
    87e8:	b.cs	99c8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1648>  // b.hs, b.nlast
    87ec:	add	w9, w9, #0x1
    87f0:	subs	x23, x23, #0x1
    87f4:	str	w9, [sp, #8]
    87f8:	b.eq	8904 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x584>  // b.none
    87fc:	ldr	w10, [x22, #32]
    8800:	sub	w11, w23, #0x1
    8804:	cmp	w10, w11
    8808:	b.hi	87c8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x448>  // b.pmore
    880c:	b	99e8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1668>
    8810:	mov	x0, sp
    8814:	mov	w3, #0x8                   	// #8
    8818:	mov	x1, x19
    881c:	mov	x2, xzr
    8820:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    8824:	ldr	w9, [sp, #8]
    8828:	b	87d8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x458>
    882c:	cmp	w10, #0x13
    8830:	b.ne	88c0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x540>  // b.any
    8834:	ldr	x10, [x22, #16]
    8838:	cbz	x10, 9a68 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x16e8>
    883c:	ldr	w11, [x10, #8]
    8840:	cmp	w11, #0x1
    8844:	b.ne	88c0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x540>  // b.any
    8848:	ldr	w10, [x10, #24]
    884c:	cbz	w10, 8904 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x584>
    8850:	sub	w23, w10, #0x1
    8854:	ldr	x8, [x22]
    8858:	mov	x0, x22
    885c:	mov	w1, w23
    8860:	ldr	x8, [x8, #104]
    8864:	blr	x8
    8868:	ldp	w8, w9, [sp, #8]
    886c:	mov	x24, x0
    8870:	cmp	w8, w9
    8874:	b.cs	88a4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x524>  // b.hs, b.nlast
    8878:	ldr	x9, [sp]
    887c:	str	x24, [x9, w8, uxtw #3]
    8880:	ldp	w9, w8, [sp, #8]
    8884:	cmp	w9, w8
    8888:	b.cs	99c8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1648>  // b.hs, b.nlast
    888c:	sub	w23, w23, #0x1
    8890:	add	w9, w9, #0x1
    8894:	cmn	w23, #0x1
    8898:	str	w9, [sp, #8]
    889c:	b.ne	8854 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x4d4>  // b.any
    88a0:	b	8904 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x584>
    88a4:	mov	x0, sp
    88a8:	mov	w3, #0x8                   	// #8
    88ac:	mov	x1, x19
    88b0:	mov	x2, xzr
    88b4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    88b8:	ldr	w8, [sp, #8]
    88bc:	b	8878 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x4f8>
    88c0:	ldr	x8, [x22]
    88c4:	mov	x0, x22
    88c8:	mov	x1, x21
    88cc:	ldr	x8, [x8, #56]
    88d0:	blr	x8
    88d4:	cbz	x0, 8da4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xa24>
    88d8:	ldp	w8, w9, [sp, #8]
    88dc:	mov	x22, x0
    88e0:	cmp	w8, w9
    88e4:	b.cs	8920 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x5a0>  // b.hs, b.nlast
    88e8:	ldr	x9, [sp]
    88ec:	str	x22, [x9, w8, uxtw #3]
    88f0:	ldp	w9, w8, [sp, #8]
    88f4:	cmp	w9, w8
    88f8:	b.cs	99c8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1648>  // b.hs, b.nlast
    88fc:	add	w9, w9, #0x1
    8900:	str	w9, [sp, #8]
    8904:	add	w25, w25, #0x1
    8908:	cmp	w25, w26
    890c:	b.eq	8b08 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x788>  // b.none
    8910:	ldur	w10, [x29, #-160]
    8914:	cmp	w10, w25
    8918:	b.hi	87a4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x424>  // b.pmore
    891c:	b	9a08 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1688>
    8920:	mov	x0, sp
    8924:	mov	w3, #0x8                   	// #8
    8928:	mov	x1, x19
    892c:	mov	x2, xzr
    8930:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    8934:	ldr	w8, [sp, #8]
    8938:	b	88e8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x568>
    893c:	ldr	x0, [x19, #80]
    8940:	bl	0 <_ZN4llvm7IntInit3getEl>
    8944:	ldp	x8, x9, [x19, #8]
    8948:	mov	x20, x0
    894c:	mov	x0, x19
    8950:	cmp	x8, x9
    8954:	cset	w1, eq  // eq = none
    8958:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    895c:	str	w0, [x19, #40]
    8960:	b	91ac <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe2c>
    8964:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8968:	add	x8, x8, #0x0
    896c:	mov	w9, #0x103                 	// #259
    8970:	mov	x0, x19
    8974:	stp	x8, xzr, [x29, #-168]
    8978:	sturh	w9, [x29, #-152]
    897c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    8980:	str	x0, [sp]
    8984:	mov	x0, sp
    8988:	sub	x2, x29, #0xa8
    898c:	mov	w1, #0x1                   	// #1
    8990:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    8994:	mov	x20, xzr
    8998:	b	91ac <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe2c>
    899c:	mov	x0, x19
    89a0:	mov	x1, x21
    89a4:	mov	x2, x23
    89a8:	mov	x3, x20
    89ac:	mov	w4, w22
    89b0:	add	sp, sp, #0x360
    89b4:	ldp	x20, x19, [sp, #96]
    89b8:	ldp	x22, x21, [sp, #80]
    89bc:	ldp	x24, x23, [sp, #64]
    89c0:	ldp	x26, x25, [sp, #48]
    89c4:	ldp	x28, x27, [sp, #32]
    89c8:	ldp	x29, x30, [sp, #16]
    89cc:	ldr	d8, [sp], #112
    89d0:	b	5168 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE>
    89d4:	mov	w8, #0x10                  	// #16
    89d8:	cmp	x8, x20
    89dc:	b.cc	99c8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1648>  // b.lo, b.ul, b.last
    89e0:	stur	w22, [x29, #-160]
    89e4:	cbz	x20, 89f8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x678>
    89e8:	ldur	x0, [x29, #-168]
    89ec:	lsl	x2, x20, #3
    89f0:	mov	w1, wzr
    89f4:	bl	0 <memset>
    89f8:	cbz	w22, 8a68 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x6e8>
    89fc:	mov	x20, xzr
    8a00:	and	x22, x22, #0xffffffff
    8a04:	lsr	x8, x21, x20
    8a08:	and	w0, w8, #0x1
    8a0c:	bl	0 <_ZN4llvm7BitInit3getEb>
    8a10:	ldur	w8, [x29, #-160]
    8a14:	cmp	x20, x8
    8a18:	b.cs	9a08 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1688>  // b.hs, b.nlast
    8a1c:	ldur	x9, [x29, #-168]
    8a20:	str	x0, [x9, x20, lsl #3]
    8a24:	add	x20, x20, #0x1
    8a28:	cmp	x22, x20
    8a2c:	b.ne	8a04 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x684>  // b.any
    8a30:	b	8a6c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x6ec>
    8a34:	mov	x0, x22
    8a38:	cbz	x21, 8aa4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x724>
    8a3c:	cmp	x21, #0x1
    8a40:	b.ne	8a98 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x718>  // b.any
    8a44:	ldrb	w8, [x20]
    8a48:	strb	w8, [x0]
    8a4c:	b	8aa4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x724>
    8a50:	mov	x22, xzr
    8a54:	cmp	w0, #0x5
    8a58:	b.eq	8cd0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x950>  // b.none
    8a5c:	cbz	x22, 8ca4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x924>
    8a60:	ldr	x4, [x22, #24]
    8a64:	b	8ca8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x928>
    8a68:	ldur	w8, [x29, #-160]
    8a6c:	ldur	x0, [x29, #-168]
    8a70:	mov	w1, w8
    8a74:	bl	0 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    8a78:	ldp	x8, x9, [x19, #8]
    8a7c:	mov	x20, x0
    8a80:	mov	x0, x19
    8a84:	cmp	x8, x9
    8a88:	cset	w1, eq  // eq = none
    8a8c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8a90:	str	w0, [x19, #40]
    8a94:	b	9194 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe14>
    8a98:	mov	x1, x20
    8a9c:	mov	x2, x21
    8aa0:	bl	0 <memcpy>
    8aa4:	ldr	x8, [sp]
    8aa8:	ldur	x9, [x29, #-168]
    8aac:	stur	x8, [x29, #-160]
    8ab0:	strb	wzr, [x9, x8]
    8ab4:	ldp	x8, x9, [x19, #8]
    8ab8:	mov	x0, x19
    8abc:	cmp	x8, x9
    8ac0:	cset	w1, eq  // eq = none
    8ac4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8ac8:	cmp	w0, #0x49
    8acc:	str	w0, [x19, #40]
    8ad0:	b.ne	8ae4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x764>  // b.any
    8ad4:	ldp	x1, x2, [x19, #48]
    8ad8:	sub	x0, x29, #0xa8
    8adc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    8ae0:	b	8ab4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x734>
    8ae4:	ldp	x0, x1, [x29, #-168]
    8ae8:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    8aec:	ldur	x8, [x29, #-168]
    8af0:	mov	x20, x0
    8af4:	cmp	x8, x22
    8af8:	b.eq	91ac <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe2c>  // b.none
    8afc:	mov	x0, x8
    8b00:	bl	0 <_ZdlPv>
    8b04:	b	91ac <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe2c>
    8b08:	ldr	x19, [sp]
    8b0c:	cbz	w9, 8b4c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x7cc>
    8b10:	mov	w1, w9
    8b14:	add	x8, x19, x1, lsl #3
    8b18:	sub	x8, x8, #0x8
    8b1c:	cmp	x8, x19
    8b20:	b.ls	8b50 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x7d0>  // b.plast
    8b24:	add	x9, x19, #0x8
    8b28:	ldr	x10, [x8]
    8b2c:	ldur	x11, [x9, #-8]
    8b30:	stur	x10, [x9, #-8]
    8b34:	str	x11, [x8], #-8
    8b38:	cmp	x9, x8
    8b3c:	add	x9, x9, #0x8
    8b40:	b.cc	8b28 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x7a8>  // b.lo, b.ul, b.last
    8b44:	ldr	x19, [sp]
    8b48:	b	8b50 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x7d0>
    8b4c:	mov	x1, xzr
    8b50:	mov	x0, x19
    8b54:	bl	0 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    8b58:	mov	x20, x0
    8b5c:	ldr	x0, [sp]
    8b60:	mov	x8, sp
    8b64:	add	x8, x8, #0x10
    8b68:	cmp	x0, x8
    8b6c:	b.eq	9194 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe14>  // b.none
    8b70:	bl	0 <free>
    8b74:	b	9194 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe14>
    8b78:	ldr	x0, [x19, #344]
    8b7c:	ldp	x1, x2, [x23, #24]
    8b80:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8b84:	cbz	x0, 8fa0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc20>
    8b88:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8b8c:	ldr	d0, [x8]
    8b90:	mov	x22, x0
    8b94:	sub	x8, x29, #0xa8
    8b98:	add	x23, x8, #0x10
    8b9c:	sub	x1, x29, #0xa8
    8ba0:	mov	x0, x19
    8ba4:	mov	x2, x21
    8ba8:	mov	x3, x22
    8bac:	mov	x4, xzr
    8bb0:	stur	x23, [x29, #-168]
    8bb4:	stur	d0, [x29, #-160]
    8bb8:	bl	4558 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE>
    8bbc:	ldur	w8, [x29, #-160]
    8bc0:	cbz	w8, 9058 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xcd8>
    8bc4:	ldr	w8, [x19, #40]
    8bc8:	cmp	w8, #0xb
    8bcc:	b.ne	9028 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xca8>  // b.any
    8bd0:	ldp	x8, x9, [x19, #8]
    8bd4:	mov	x0, x19
    8bd8:	cmp	x8, x9
    8bdc:	cset	w1, eq  // eq = none
    8be0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8be4:	str	w0, [x19, #40]
    8be8:	ldr	w27, [x22, #64]
    8bec:	ldur	w8, [x29, #-160]
    8bf0:	cmp	w27, w8
    8bf4:	b.cs	91d4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe54>  // b.hs, b.nlast
    8bf8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8bfc:	add	x8, x8, #0x0
    8c00:	mov	w9, #0x103                 	// #259
    8c04:	stp	x8, xzr, [sp]
    8c08:	strh	w9, [sp, #16]
    8c0c:	str	x20, [sp, #304]
    8c10:	b	9048 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xcc8>
    8c14:	mov	x22, xzr
    8c18:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8c1c:	ldr	d0, [x9]
    8c20:	sub	x8, x29, #0xa8
    8c24:	add	x8, x8, #0x10
    8c28:	cmp	w0, #0x9
    8c2c:	stur	x8, [x29, #-168]
    8c30:	stur	d0, [x29, #-160]
    8c34:	b.eq	8c5c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x8dc>  // b.none
    8c38:	sub	x1, x29, #0xa8
    8c3c:	mov	x0, x19
    8c40:	mov	x2, x21
    8c44:	bl	9ad4 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE>
    8c48:	ldur	w8, [x29, #-160]
    8c4c:	cbz	w8, 8f98 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc18>
    8c50:	ldr	w8, [x19, #40]
    8c54:	cmp	w8, #0x9
    8c58:	b.ne	8ff0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc70>  // b.any
    8c5c:	ldp	x8, x9, [x19, #8]
    8c60:	mov	x0, x19
    8c64:	cmp	x8, x9
    8c68:	cset	w1, eq  // eq = none
    8c6c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8c70:	str	w0, [x19, #40]
    8c74:	ldur	x2, [x29, #-168]
    8c78:	ldur	w3, [x29, #-160]
    8c7c:	mov	x0, x20
    8c80:	mov	x1, x22
    8c84:	bl	0 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE>
    8c88:	b	9190 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe10>
    8c8c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8c90:	add	x8, x8, #0x0
    8c94:	b	896c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x5ec>
    8c98:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8c9c:	add	x8, x8, #0x0
    8ca0:	b	8ff8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc78>
    8ca4:	mov	x4, xzr
    8ca8:	sub	x1, x29, #0xa8
    8cac:	mov	x0, x19
    8cb0:	mov	x2, x21
    8cb4:	mov	x3, xzr
    8cb8:	bl	4558 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE>
    8cbc:	ldur	w8, [x29, #-160]
    8cc0:	cbz	w8, 8f98 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc18>
    8cc4:	ldr	w8, [x19, #40]
    8cc8:	cmp	w8, #0x5
    8ccc:	b.ne	8e80 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xb00>  // b.any
    8cd0:	ldp	x8, x9, [x19, #8]
    8cd4:	mov	x0, x19
    8cd8:	cmp	x8, x9
    8cdc:	cset	w1, eq  // eq = none
    8ce0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8ce4:	cmp	w0, #0xa
    8ce8:	str	w0, [x19, #40]
    8cec:	b.ne	8d40 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x9c0>  // b.any
    8cf0:	ldp	x8, x9, [x19, #8]
    8cf4:	mov	x0, x19
    8cf8:	cmp	x8, x9
    8cfc:	cset	w1, eq  // eq = none
    8d00:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8d04:	str	w0, [x19, #40]
    8d08:	mov	x0, x19
    8d0c:	bl	4ebc <_ZN4llvm8TGParser9ParseTypeEv>
    8d10:	cbz	x0, 8f98 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc18>
    8d14:	ldr	w8, [x19, #40]
    8d18:	cmp	w8, #0xb
    8d1c:	b.ne	8fe4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc64>  // b.any
    8d20:	ldp	x8, x9, [x19, #8]
    8d24:	mov	x21, x0
    8d28:	mov	x0, x19
    8d2c:	cmp	x8, x9
    8d30:	cset	w1, eq  // eq = none
    8d34:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8d38:	str	w0, [x19, #40]
    8d3c:	b	8d44 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x9c4>
    8d40:	mov	x21, xzr
    8d44:	ldur	w8, [x29, #-160]
    8d48:	cbz	w8, 8e54 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xad4>
    8d4c:	ldur	x23, [x29, #-168]
    8d50:	mov	x0, xzr
    8d54:	lsl	x24, x8, #3
    8d58:	b	8d6c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x9ec>
    8d5c:	mov	x0, x1
    8d60:	subs	x24, x24, #0x8
    8d64:	add	x23, x23, #0x8
    8d68:	b.eq	8e58 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xad8>  // b.none
    8d6c:	ldr	x8, [x23]
    8d70:	cbz	x8, 9a48 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x16c8>
    8d74:	ldrb	w9, [x8, #8]
    8d78:	sub	w9, w9, #0x1
    8d7c:	cmp	w9, #0x16
    8d80:	b.hi	8d60 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x9e0>  // b.pmore
    8d84:	ldr	x1, [x8, #16]
    8d88:	cbz	x0, 8d5c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x9dc>
    8d8c:	bl	0 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_>
    8d90:	cbnz	x0, 8d60 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x9e0>
    8d94:	b	8e74 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xaf4>
    8d98:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8d9c:	add	x8, x8, #0x0
    8da0:	b	896c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x5ec>
    8da4:	mov	w8, #0x109                 	// #265
    8da8:	mov	w10, #0x903                 	// #2307
    8dac:	sturh	w8, [x29, #-240]
    8db0:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8db4:	stp	xzr, xzr, [x29, #-256]
    8db8:	stur	w25, [x29, #-256]
    8dbc:	sub	x11, x29, #0xe0
    8dc0:	add	x8, x8, #0x0
    8dc4:	sturh	w10, [x29, #-208]
    8dc8:	ldur	w10, [x29, #-160]
    8dcc:	stp	x11, x8, [x29, #-192]
    8dd0:	ldur	x8, [x29, #-256]
    8dd4:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8dd8:	add	x9, x9, #0x0
    8ddc:	cmp	w10, w25
    8de0:	mov	w10, #0x302                 	// #770
    8de4:	stp	x9, x8, [x29, #-224]
    8de8:	sturh	w10, [x29, #-176]
    8dec:	b.ls	9a08 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1688>  // b.plast
    8df0:	ldur	x8, [x29, #-168]
    8df4:	add	x19, sp, #0x130
    8df8:	ldr	x0, [x8, w25, uxtw #3]
    8dfc:	ldr	x8, [x0]
    8e00:	ldr	x9, [x8, #40]
    8e04:	add	x8, sp, #0x130
    8e08:	blr	x9
    8e0c:	ldurb	w8, [x29, #-176]
    8e10:	mov	w9, #0x104                 	// #260
    8e14:	strh	w9, [sp, #592]
    8e18:	str	xzr, [sp, #584]
    8e1c:	cmp	w8, #0x1
    8e20:	str	x19, [sp, #576]
    8e24:	b.eq	906c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xcec>  // b.none
    8e28:	cbnz	w8, 9084 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xd04>
    8e2c:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8e30:	mov	w8, #0x100                 	// #256
    8e34:	add	x9, x9, #0x0
    8e38:	mov	w10, #0x103                 	// #259
    8e3c:	stp	xzr, xzr, [sp, #144]
    8e40:	strh	w8, [sp, #160]
    8e44:	str	xzr, [sp, #552]
    8e48:	str	x9, [sp, #544]
    8e4c:	strh	w10, [sp, #560]
    8e50:	b	9114 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xd94>
    8e54:	mov	x0, xzr
    8e58:	cbz	x21, 8e8c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xb0c>
    8e5c:	cbz	x0, 8e94 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xb14>
    8e60:	ldr	x8, [x0]
    8e64:	mov	x1, x21
    8e68:	ldr	x8, [x8, #24]
    8e6c:	blr	x8
    8e70:	tbnz	w0, #0, 8e94 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xb14>
    8e74:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8e78:	add	x8, x8, #0x0
    8e7c:	b	8ff8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc78>
    8e80:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8e84:	add	x8, x8, #0x0
    8e88:	b	8ff8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc78>
    8e8c:	mov	x21, x0
    8e90:	cbz	x0, 9178 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xdf8>
    8e94:	cbz	x22, 9180 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe00>
    8e98:	ldr	x8, [x21]
    8e9c:	ldr	x1, [x22, #24]
    8ea0:	mov	x0, x21
    8ea4:	ldr	x8, [x8, #24]
    8ea8:	blr	x8
    8eac:	tbnz	w0, #0, 9180 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe00>
    8eb0:	ldr	x8, [x21]
    8eb4:	mov	x0, x21
    8eb8:	mov	x20, sp
    8ebc:	ldr	x9, [x8, #16]
    8ec0:	mov	x8, sp
    8ec4:	blr	x9
    8ec8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8ecc:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8ed0:	add	x8, x8, #0x0
    8ed4:	mov	w9, #0x403                 	// #1027
    8ed8:	sub	x10, x29, #0xc0
    8edc:	add	x11, x11, #0x0
    8ee0:	mov	w12, #0x302                 	// #770
    8ee4:	stp	x8, x20, [x29, #-192]
    8ee8:	sturh	w9, [x29, #-176]
    8eec:	stp	x10, x11, [sp, #144]
    8ef0:	strh	w12, [sp, #160]
    8ef4:	cbnz	wzr, 9ab4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1734>
    8ef8:	ldurb	w8, [x29, #-175]
    8efc:	cmp	w8, #0x1
    8f00:	b.eq	9ab4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1734>  // b.none
    8f04:	ldr	x0, [x22, #24]
    8f08:	add	x20, sp, #0x130
    8f0c:	ldr	x8, [x0]
    8f10:	ldr	x9, [x8, #16]
    8f14:	add	x8, sp, #0x130
    8f18:	blr	x9
    8f1c:	ldrb	w8, [sp, #161]
    8f20:	ldr	x9, [sp, #144]
    8f24:	add	x10, sp, #0x90
    8f28:	mov	w11, #0x402                 	// #1026
    8f2c:	cmp	w8, #0x1
    8f30:	csel	x8, x9, x10, eq  // eq = none
    8f34:	stp	x8, x20, [sp, #224]
    8f38:	strh	w11, [sp, #240]
    8f3c:	ldrb	w9, [x8, #16]
    8f40:	cbz	w9, 9ab4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1734>
    8f44:	ldrb	w8, [x8, #17]
    8f48:	cmp	w8, #0x1
    8f4c:	b.eq	9ab4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1734>  // b.none
    8f50:	mov	x0, x19
    8f54:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    8f58:	stur	x0, [x29, #-224]
    8f5c:	sub	x0, x29, #0xe0
    8f60:	add	x2, sp, #0xe0
    8f64:	mov	w1, #0x1                   	// #1
    8f68:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    8f6c:	ldr	x0, [sp, #304]
    8f70:	add	x8, sp, #0x130
    8f74:	add	x8, x8, #0x10
    8f78:	cmp	x0, x8
    8f7c:	b.eq	8f84 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc04>  // b.none
    8f80:	bl	0 <_ZdlPv>
    8f84:	ldr	x0, [sp]
    8f88:	mov	x8, sp
    8f8c:	add	x8, x8, #0x10
    8f90:	cmp	x0, x8
    8f94:	b.ne	84b4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x134>  // b.any
    8f98:	mov	x20, xzr
    8f9c:	b	9194 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe14>
    8fa0:	ldur	q0, [x23, #24]
    8fa4:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8fa8:	adrp	x12, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8fac:	mov	w8, #0x503                 	// #1283
    8fb0:	add	x9, x9, #0x0
    8fb4:	add	x10, sp, #0x130
    8fb8:	mov	x11, sp
    8fbc:	add	x12, x12, #0x0
    8fc0:	mov	w13, #0x302                 	// #770
    8fc4:	strh	w8, [sp, #16]
    8fc8:	stp	x9, x10, [sp]
    8fcc:	stp	x11, x12, [x29, #-168]
    8fd0:	sturh	w13, [x29, #-152]
    8fd4:	str	q0, [sp, #304]
    8fd8:	str	x20, [sp, #224]
    8fdc:	add	x0, sp, #0xe0
    8fe0:	b	8988 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x608>
    8fe4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8fe8:	add	x8, x8, #0x0
    8fec:	b	8ff8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc78>
    8ff0:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8ff4:	add	x8, x8, #0x0
    8ff8:	mov	w9, #0x103                 	// #259
    8ffc:	mov	x0, x19
    9000:	stp	x8, xzr, [sp]
    9004:	strh	w9, [sp, #16]
    9008:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    900c:	str	x0, [sp, #304]
    9010:	add	x0, sp, #0x130
    9014:	mov	x2, sp
    9018:	mov	w1, #0x1                   	// #1
    901c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    9020:	mov	x20, xzr
    9024:	b	9194 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe14>
    9028:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    902c:	add	x8, x8, #0x0
    9030:	mov	w9, #0x103                 	// #259
    9034:	mov	x0, x19
    9038:	stp	x8, xzr, [sp]
    903c:	strh	w9, [sp, #16]
    9040:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    9044:	str	x0, [sp, #304]
    9048:	add	x0, sp, #0x130
    904c:	mov	x2, sp
    9050:	mov	w1, #0x1                   	// #1
    9054:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    9058:	mov	x20, xzr
    905c:	ldur	x0, [x29, #-168]
    9060:	cmp	x0, x23
    9064:	b.ne	91a8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe28>  // b.any
    9068:	b	91ac <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe2c>
    906c:	ldr	x8, [sp, #592]
    9070:	ldr	q0, [sp, #576]
    9074:	str	x8, [sp, #160]
    9078:	and	w8, w8, #0xff
    907c:	str	q0, [sp, #144]
    9080:	b	90f0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xd70>
    9084:	ldurb	w9, [x29, #-175]
    9088:	ldur	x10, [x29, #-192]
    908c:	mov	w11, #0x2                   	// #2
    9090:	sub	x12, x29, #0xc0
    9094:	cmp	w9, #0x1
    9098:	csel	w11, w8, w11, eq  // eq = none
    909c:	add	x13, sp, #0x130
    90a0:	mov	w14, #0x4                   	// #4
    90a4:	csel	x9, x10, x12, eq  // eq = none
    90a8:	cmp	w11, #0x2
    90ac:	stp	x9, x13, [sp, #144]
    90b0:	strb	w11, [sp, #160]
    90b4:	strb	w14, [sp, #161]
    90b8:	b.ne	90f0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xd70>  // b.any
    90bc:	ldrb	w8, [x9, #16]
    90c0:	cbz	w8, 9ab4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1734>
    90c4:	ldrb	w8, [x9, #17]
    90c8:	cmp	w8, #0x1
    90cc:	b.eq	9ab4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1734>  // b.none
    90d0:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    90d4:	add	x8, x8, #0x0
    90d8:	mov	w9, #0x103                 	// #259
    90dc:	str	x8, [sp, #544]
    90e0:	mov	w8, #0x2                   	// #2
    90e4:	str	xzr, [sp, #552]
    90e8:	strh	w9, [sp, #560]
    90ec:	b	9124 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xda4>
    90f0:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    90f4:	add	x9, x9, #0x0
    90f8:	mov	w10, #0x103                 	// #259
    90fc:	cmp	w8, #0x1
    9100:	str	xzr, [sp, #552]
    9104:	str	x9, [sp, #544]
    9108:	strh	w10, [sp, #560]
    910c:	b.eq	9320 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xfa0>  // b.none
    9110:	cbnz	w8, 9124 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xda4>
    9114:	mov	w8, #0x100                 	// #256
    9118:	stp	xzr, xzr, [sp, #224]
    911c:	strh	w8, [sp, #240]
    9120:	b	9330 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xfb0>
    9124:	ldrb	w9, [sp, #161]
    9128:	ldr	x10, [sp, #144]
    912c:	mov	w11, #0x2                   	// #2
    9130:	add	x12, sp, #0x90
    9134:	cmp	w9, #0x1
    9138:	adrp	x13, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    913c:	csel	w9, w8, w11, eq  // eq = none
    9140:	add	x13, x13, #0x0
    9144:	mov	w14, #0x3                   	// #3
    9148:	csel	x8, x10, x12, eq  // eq = none
    914c:	cmp	w9, #0x2
    9150:	stp	x8, x13, [sp, #224]
    9154:	strb	w9, [sp, #240]
    9158:	strb	w14, [sp, #241]
    915c:	b.ne	9330 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xfb0>  // b.any
    9160:	ldrb	w9, [x8, #16]
    9164:	cbz	w9, 9ab4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1734>
    9168:	ldrb	w8, [x8, #17]
    916c:	cmp	w8, #0x1
    9170:	b.ne	9330 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xfb0>  // b.any
    9174:	b	9ab4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1734>
    9178:	cbz	x20, 9364 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xfe4>
    917c:	ldr	x21, [x22, #24]
    9180:	ldur	x0, [x29, #-168]
    9184:	ldur	w1, [x29, #-160]
    9188:	mov	x2, x21
    918c:	bl	0 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    9190:	mov	x20, x0
    9194:	ldur	x0, [x29, #-168]
    9198:	sub	x8, x29, #0xa8
    919c:	add	x8, x8, #0x10
    91a0:	cmp	x0, x8
    91a4:	b.eq	91ac <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe2c>  // b.none
    91a8:	bl	0 <free>
    91ac:	mov	x0, x20
    91b0:	add	sp, sp, #0x360
    91b4:	ldp	x20, x19, [sp, #96]
    91b8:	ldp	x22, x21, [sp, #80]
    91bc:	ldp	x24, x23, [sp, #64]
    91c0:	ldp	x26, x25, [sp, #48]
    91c4:	ldp	x28, x27, [sp, #32]
    91c8:	ldp	x29, x30, [sp, #16]
    91cc:	ldr	d8, [sp], #112
    91d0:	ret
    91d4:	cbz	w27, 947c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x10fc>
    91d8:	ldr	x26, [x22, #56]
    91dc:	mov	x25, xzr
    91e0:	add	x24, sp, #0xc8
    91e4:	b	9208 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe88>
    91e8:	ldr	x0, [x28, #16]
    91ec:	ldr	x8, [x0]
    91f0:	ldr	x8, [x8, #24]
    91f4:	blr	x8
    91f8:	tbz	w0, #0, 9398 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1018>
    91fc:	add	x25, x25, #0x1
    9200:	cmp	x25, x27
    9204:	b.eq	9478 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x10f8>  // b.none
    9208:	ldr	w9, [x22, #80]
    920c:	cbz	w9, 923c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xebc>
    9210:	ldr	x28, [x22, #72]
    9214:	ldr	x8, [x26, x25, lsl #3]
    9218:	add	x9, x9, x9, lsl #1
    921c:	lsl	x9, x9, #3
    9220:	mov	x10, x28
    9224:	ldr	x11, [x10], #24
    9228:	cmp	x11, x8
    922c:	b.eq	9240 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xec0>  // b.none
    9230:	subs	x9, x9, #0x18
    9234:	mov	x28, x10
    9238:	b.ne	9224 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xea4>  // b.any
    923c:	mov	x28, xzr
    9240:	ldur	w8, [x29, #-160]
    9244:	cmp	x25, x8
    9248:	b.cs	91e8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe68>  // b.hs, b.nlast
    924c:	ldur	x8, [x29, #-168]
    9250:	ldr	x19, [x8, x25, lsl #3]
    9254:	cbz	x19, 9a48 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x16c8>
    9258:	ldrb	w8, [x19, #8]
    925c:	sub	w8, w8, #0x1
    9260:	cmp	w8, #0x16
    9264:	b.hi	9398 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1018>  // b.pmore
    9268:	ldr	x0, [x19, #16]
    926c:	ldr	x9, [x28, #8]
    9270:	ldr	x8, [x0]
    9274:	and	x21, x9, #0xfffffffffffffff8
    9278:	mov	x1, x21
    927c:	ldr	x8, [x8, #24]
    9280:	blr	x8
    9284:	tbnz	w0, #0, 91fc <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe7c>
    9288:	stp	xzr, xzr, [sp, #408]
    928c:	str	w25, [sp, #408]
    9290:	mov	w10, #0x903                 	// #2307
    9294:	mov	w8, #0x109                 	// #265
    9298:	strh	w10, [sp, #448]
    929c:	ldr	x10, [sp, #408]
    92a0:	strh	w8, [sp, #424]
    92a4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    92a8:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    92ac:	add	x11, sp, #0x1b0
    92b0:	add	x8, x8, #0x0
    92b4:	add	x9, x9, #0x0
    92b8:	stp	x11, x8, [sp, #456]
    92bc:	mov	w8, #0x302                 	// #770
    92c0:	stp	x9, x10, [sp, #432]
    92c4:	strh	w8, [sp, #472]
    92c8:	ldr	x0, [x28]
    92cc:	mov	x22, sp
    92d0:	ldr	x8, [x0]
    92d4:	ldr	x9, [x8, #48]
    92d8:	mov	x8, sp
    92dc:	blr	x9
    92e0:	ldrb	w8, [sp, #472]
    92e4:	mov	w9, #0x104                 	// #260
    92e8:	strh	w9, [sp, #400]
    92ec:	stp	x22, xzr, [sp, #384]
    92f0:	cmp	w8, #0x1
    92f4:	b.eq	9498 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1118>  // b.none
    92f8:	cbnz	w8, 94b0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1130>
    92fc:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9300:	mov	w8, #0x100                 	// #256
    9304:	add	x9, x9, #0x0
    9308:	mov	w10, #0x103                 	// #259
    930c:	stp	xzr, xzr, [sp, #480]
    9310:	strh	w8, [sp, #496]
    9314:	stp	x9, xzr, [sp, #360]
    9318:	strh	w10, [sp, #376]
    931c:	b	9538 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x11b8>
    9320:	ldr	q0, [sp, #544]
    9324:	ldr	x8, [sp, #560]
    9328:	str	q0, [sp, #224]
    932c:	str	x8, [sp, #240]
    9330:	add	x0, sp, #0x200
    9334:	add	x2, sp, #0xe0
    9338:	mov	w1, #0x1                   	// #1
    933c:	str	x20, [sp, #512]
    9340:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    9344:	ldr	x0, [sp, #304]
    9348:	add	x8, sp, #0x130
    934c:	add	x8, x8, #0x10
    9350:	cmp	x0, x8
    9354:	b.eq	935c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xfdc>  // b.none
    9358:	bl	0 <_ZdlPv>
    935c:	mov	x20, xzr
    9360:	b	8b5c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x7dc>
    9364:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9368:	add	x8, x8, #0x0
    936c:	mov	w9, #0x103                 	// #259
    9370:	mov	x0, x19
    9374:	stp	x8, xzr, [sp]
    9378:	strh	w9, [sp, #16]
    937c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    9380:	str	x0, [sp, #304]
    9384:	add	x0, sp, #0x130
    9388:	mov	x2, sp
    938c:	mov	w1, #0x1                   	// #1
    9390:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    9394:	b	9194 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe14>
    9398:	stp	xzr, xzr, [x29, #-224]
    939c:	stur	w25, [x29, #-224]
    93a0:	mov	w10, #0x903                 	// #2307
    93a4:	mov	w8, #0x109                 	// #265
    93a8:	sturh	w10, [x29, #-176]
    93ac:	ldur	x10, [x29, #-224]
    93b0:	sturh	w8, [x29, #-208]
    93b4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    93b8:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    93bc:	sub	x11, x29, #0xc0
    93c0:	add	x8, x8, #0x0
    93c4:	add	x9, x9, #0x0
    93c8:	stp	x11, x8, [sp, #144]
    93cc:	mov	w8, #0x302                 	// #770
    93d0:	stp	x9, x10, [x29, #-192]
    93d4:	strh	w8, [sp, #160]
    93d8:	ldr	x0, [x26, w25, uxtw #3]
    93dc:	mov	x19, sp
    93e0:	ldr	x8, [x0]
    93e4:	ldr	x9, [x8, #48]
    93e8:	mov	x8, sp
    93ec:	blr	x9
    93f0:	ldrb	w8, [sp, #161]
    93f4:	ldr	x9, [sp, #144]
    93f8:	add	x10, sp, #0x90
    93fc:	mov	w11, #0x402                 	// #1026
    9400:	cmp	w8, #0x1
    9404:	csel	x8, x9, x10, eq  // eq = none
    9408:	stp	x8, x19, [sp, #224]
    940c:	strh	w11, [sp, #240]
    9410:	ldrb	w9, [x8, #16]
    9414:	cbz	w9, 9ab4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1734>
    9418:	ldrb	w8, [x8, #17]
    941c:	cmp	w8, #0x1
    9420:	b.eq	9ab4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1734>  // b.none
    9424:	ldrb	w8, [sp, #241]
    9428:	ldr	x9, [sp, #224]
    942c:	add	x10, sp, #0xe0
    9430:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9434:	cmp	w8, #0x1
    9438:	add	x11, x11, #0x0
    943c:	mov	w12, #0x302                 	// #770
    9440:	csel	x8, x9, x10, eq  // eq = none
    9444:	stp	x8, x11, [sp, #304]
    9448:	strh	w12, [sp, #320]
    944c:	ldrb	w9, [x8, #16]
    9450:	cbz	w9, 9ab4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1734>
    9454:	ldrb	w8, [x8, #17]
    9458:	cmp	w8, #0x1
    945c:	b.eq	9ab4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1734>  // b.none
    9460:	sub	x0, x29, #0x100
    9464:	add	x2, sp, #0x130
    9468:	mov	w1, #0x1                   	// #1
    946c:	stur	x20, [x29, #-256]
    9470:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    9474:	b	99ac <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x162c>
    9478:	ldur	w8, [x29, #-160]
    947c:	ldur	x1, [x29, #-168]
    9480:	mov	w2, w8
    9484:	mov	x0, x22
    9488:	bl	0 <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE>
    948c:	bl	0 <_ZNK4llvm10VarDefInit4FoldEv>
    9490:	mov	x20, x0
    9494:	b	905c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xcdc>
    9498:	ldr	x8, [sp, #400]
    949c:	ldr	q0, [sp, #384]
    94a0:	str	x8, [sp, #496]
    94a4:	and	w8, w8, #0xff
    94a8:	str	q0, [sp, #480]
    94ac:	b	9518 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1198>
    94b0:	ldrb	w9, [sp, #473]
    94b4:	ldr	x10, [sp, #456]
    94b8:	mov	w11, #0x2                   	// #2
    94bc:	add	x12, sp, #0x1c8
    94c0:	cmp	w9, #0x1
    94c4:	csel	w11, w8, w11, eq  // eq = none
    94c8:	mov	x13, sp
    94cc:	mov	w14, #0x4                   	// #4
    94d0:	csel	x9, x10, x12, eq  // eq = none
    94d4:	cmp	w11, #0x2
    94d8:	stp	x9, x13, [sp, #480]
    94dc:	strb	w11, [sp, #496]
    94e0:	strb	w14, [sp, #497]
    94e4:	b.ne	9518 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1198>  // b.any
    94e8:	ldrb	w8, [x9, #16]
    94ec:	cbz	w8, 9ab4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1734>
    94f0:	ldrb	w8, [x9, #17]
    94f4:	cmp	w8, #0x1
    94f8:	b.eq	9ab4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1734>  // b.none
    94fc:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9500:	add	x8, x8, #0x0
    9504:	mov	w9, #0x103                 	// #259
    9508:	stp	x8, xzr, [sp, #360]
    950c:	mov	w8, #0x2                   	// #2
    9510:	strh	w9, [sp, #376]
    9514:	b	954c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x11cc>
    9518:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    951c:	add	x9, x9, #0x0
    9520:	mov	w10, #0x103                 	// #259
    9524:	cmp	w8, #0x1
    9528:	stp	x9, xzr, [sp, #360]
    952c:	strh	w10, [sp, #376]
    9530:	b.eq	95a4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1224>  // b.none
    9534:	cbnz	w8, 954c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x11cc>
    9538:	mov	w8, #0x100                 	// #256
    953c:	str	xzr, [sp, #520]
    9540:	str	xzr, [sp, #512]
    9544:	strh	w8, [sp, #528]
    9548:	b	95b4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1234>
    954c:	ldrb	w9, [sp, #497]
    9550:	ldr	x10, [sp, #480]
    9554:	mov	w11, #0x2                   	// #2
    9558:	add	x12, sp, #0x1e0
    955c:	cmp	w9, #0x1
    9560:	adrp	x13, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9564:	csel	w9, w8, w11, eq  // eq = none
    9568:	add	x13, x13, #0x0
    956c:	mov	w14, #0x3                   	// #3
    9570:	csel	x8, x10, x12, eq  // eq = none
    9574:	cmp	w9, #0x2
    9578:	str	x8, [sp, #512]
    957c:	str	x13, [sp, #520]
    9580:	strb	w9, [sp, #528]
    9584:	strb	w14, [sp, #529]
    9588:	b.ne	95b4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1234>  // b.any
    958c:	ldrb	w9, [x8, #16]
    9590:	cbz	w9, 9ab4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1734>
    9594:	ldrb	w8, [x8, #17]
    9598:	cmp	w8, #0x1
    959c:	b.ne	95b4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1234>  // b.any
    95a0:	b	9ab4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1734>
    95a4:	ldr	q0, [x24, #160]
    95a8:	ldr	x8, [sp, #376]
    95ac:	str	q0, [sp, #512]
    95b0:	str	x8, [sp, #528]
    95b4:	ldr	x0, [x19, #16]
    95b8:	add	x25, sp, #0x130
    95bc:	ldr	x8, [x0]
    95c0:	ldr	x9, [x8, #16]
    95c4:	add	x8, sp, #0x130
    95c8:	blr	x9
    95cc:	ldrb	w22, [sp, #528]
    95d0:	mov	w8, #0x104                 	// #260
    95d4:	strh	w8, [sp, #352]
    95d8:	stp	x25, xzr, [sp, #336]
    95dc:	cmp	w22, #0x1
    95e0:	b.eq	9610 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1290>  // b.none
    95e4:	cbnz	w22, 9628 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x12a8>
    95e8:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    95ec:	mov	w8, #0x100                 	// #256
    95f0:	add	x9, x9, #0x0
    95f4:	mov	w10, #0x103                 	// #259
    95f8:	str	xzr, [sp, #552]
    95fc:	str	xzr, [sp, #544]
    9600:	strh	w8, [sp, #560]
    9604:	stp	x9, xzr, [sp, #280]
    9608:	strh	w10, [sp, #296]
    960c:	b	96b4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1334>
    9610:	ldr	x8, [sp, #352]
    9614:	ldr	q0, [sp, #336]
    9618:	and	w22, w8, #0xff
    961c:	str	q0, [sp, #544]
    9620:	str	x8, [sp, #560]
    9624:	b	9694 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1314>
    9628:	ldrb	w8, [sp, #529]
    962c:	ldr	x9, [sp, #512]
    9630:	mov	w10, #0x2                   	// #2
    9634:	add	x11, sp, #0x200
    9638:	cmp	w8, #0x1
    963c:	csel	w10, w22, w10, eq  // eq = none
    9640:	add	x12, sp, #0x130
    9644:	mov	w13, #0x4                   	// #4
    9648:	csel	x8, x9, x11, eq  // eq = none
    964c:	cmp	w10, #0x2
    9650:	str	x8, [sp, #544]
    9654:	str	x12, [sp, #552]
    9658:	strb	w10, [sp, #560]
    965c:	strb	w13, [sp, #561]
    9660:	b.ne	9694 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1314>  // b.any
    9664:	ldrb	w9, [x8, #16]
    9668:	cbz	w9, 9ab4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1734>
    966c:	ldrb	w8, [x8, #17]
    9670:	cmp	w8, #0x1
    9674:	b.eq	9ab4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1734>  // b.none
    9678:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    967c:	add	x8, x8, #0x0
    9680:	mov	w9, #0x103                 	// #259
    9684:	mov	w22, #0x2                   	// #2
    9688:	stp	x8, xzr, [sp, #280]
    968c:	strh	w9, [sp, #296]
    9690:	b	96cc <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x134c>
    9694:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9698:	add	x8, x8, #0x0
    969c:	mov	w9, #0x103                 	// #259
    96a0:	cmp	w22, #0x1
    96a4:	stp	x8, xzr, [sp, #280]
    96a8:	strh	w9, [sp, #296]
    96ac:	b.eq	9728 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x13a8>  // b.none
    96b0:	cbnz	w22, 96cc <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x134c>
    96b4:	mov	w8, #0x100                 	// #256
    96b8:	mov	w22, wzr
    96bc:	str	xzr, [sp, #584]
    96c0:	str	xzr, [sp, #576]
    96c4:	strh	w8, [sp, #592]
    96c8:	b	973c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x13bc>
    96cc:	ldrb	w8, [sp, #561]
    96d0:	ldr	x9, [sp, #544]
    96d4:	mov	w10, #0x2                   	// #2
    96d8:	add	x11, sp, #0x220
    96dc:	cmp	w8, #0x1
    96e0:	adrp	x12, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    96e4:	csel	w10, w22, w10, eq  // eq = none
    96e8:	add	x12, x12, #0x0
    96ec:	mov	w13, #0x3                   	// #3
    96f0:	csel	x8, x9, x11, eq  // eq = none
    96f4:	cmp	w10, #0x2
    96f8:	str	x8, [sp, #576]
    96fc:	str	x12, [sp, #584]
    9700:	strb	w10, [sp, #592]
    9704:	strb	w13, [sp, #593]
    9708:	b.ne	973c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x13bc>  // b.any
    970c:	ldrb	w9, [x8, #16]
    9710:	cbz	w9, 9ab4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1734>
    9714:	ldrb	w8, [x8, #17]
    9718:	cmp	w8, #0x1
    971c:	b.eq	9ab4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1734>  // b.none
    9720:	mov	w22, #0x2                   	// #2
    9724:	b	973c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x13bc>
    9728:	ldr	x8, [sp, #296]
    972c:	ldr	q0, [x24, #80]
    9730:	and	w22, w8, #0xff
    9734:	str	q0, [sp, #576]
    9738:	str	x8, [sp, #592]
    973c:	ldr	x8, [x21]
    9740:	mov	x0, x21
    9744:	add	x25, sp, #0xe0
    9748:	ldr	x9, [x8, #16]
    974c:	add	x8, sp, #0xe0
    9750:	blr	x9
    9754:	mov	w8, #0x104                 	// #260
    9758:	cmp	w22, #0x1
    975c:	strh	w8, [sp, #272]
    9760:	stp	x25, xzr, [sp, #256]
    9764:	b.eq	9790 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1410>  // b.none
    9768:	cbnz	w22, 97a8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1428>
    976c:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9770:	mov	w8, #0x100                 	// #256
    9774:	add	x9, x9, #0x0
    9778:	mov	w10, #0x103                 	// #259
    977c:	stp	xzr, xzr, [x29, #-256]
    9780:	sturh	w8, [x29, #-240]
    9784:	stp	x9, xzr, [sp, #200]
    9788:	strh	w10, [sp, #216]
    978c:	b	9830 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x14b0>
    9790:	ldr	x8, [sp, #272]
    9794:	ldr	q0, [sp, #256]
    9798:	and	w22, w8, #0xff
    979c:	stur	q0, [x29, #-256]
    97a0:	stur	x8, [x29, #-240]
    97a4:	b	9810 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1490>
    97a8:	ldrb	w8, [sp, #593]
    97ac:	ldr	x9, [sp, #576]
    97b0:	mov	w10, #0x2                   	// #2
    97b4:	add	x11, sp, #0x240
    97b8:	cmp	w8, #0x1
    97bc:	csel	w10, w22, w10, eq  // eq = none
    97c0:	add	x12, sp, #0xe0
    97c4:	mov	w13, #0x4                   	// #4
    97c8:	csel	x8, x9, x11, eq  // eq = none
    97cc:	cmp	w10, #0x2
    97d0:	stp	x8, x12, [x29, #-256]
    97d4:	sturb	w10, [x29, #-240]
    97d8:	sturb	w13, [x29, #-239]
    97dc:	b.ne	9810 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1490>  // b.any
    97e0:	ldrb	w9, [x8, #16]
    97e4:	cbz	w9, 9ab4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1734>
    97e8:	ldrb	w8, [x8, #17]
    97ec:	cmp	w8, #0x1
    97f0:	b.eq	9ab4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1734>  // b.none
    97f4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    97f8:	add	x8, x8, #0x0
    97fc:	mov	w9, #0x103                 	// #259
    9800:	mov	w22, #0x2                   	// #2
    9804:	stp	x8, xzr, [sp, #200]
    9808:	strh	w9, [sp, #216]
    980c:	b	9844 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x14c4>
    9810:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9814:	add	x8, x8, #0x0
    9818:	mov	w9, #0x103                 	// #259
    981c:	cmp	w22, #0x1
    9820:	stp	x8, xzr, [sp, #200]
    9824:	strh	w9, [sp, #216]
    9828:	b.eq	989c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x151c>  // b.none
    982c:	cbnz	w22, 9844 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x14c4>
    9830:	mov	w8, #0x100                 	// #256
    9834:	mov	w22, wzr
    9838:	stp	xzr, xzr, [x29, #-224]
    983c:	sturh	w8, [x29, #-208]
    9840:	b	98b0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1530>
    9844:	ldurb	w8, [x29, #-239]
    9848:	ldur	x9, [x29, #-256]
    984c:	mov	w10, #0x2                   	// #2
    9850:	sub	x11, x29, #0x100
    9854:	cmp	w8, #0x1
    9858:	adrp	x12, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    985c:	csel	w10, w22, w10, eq  // eq = none
    9860:	add	x12, x12, #0x0
    9864:	mov	w13, #0x3                   	// #3
    9868:	csel	x8, x9, x11, eq  // eq = none
    986c:	cmp	w10, #0x2
    9870:	stp	x8, x12, [x29, #-224]
    9874:	sturb	w10, [x29, #-208]
    9878:	sturb	w13, [x29, #-207]
    987c:	b.ne	98b0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1530>  // b.any
    9880:	ldrb	w9, [x8, #16]
    9884:	cbz	w9, 9ab4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1734>
    9888:	ldrb	w8, [x8, #17]
    988c:	cmp	w8, #0x1
    9890:	b.eq	9ab4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1734>  // b.none
    9894:	mov	w22, #0x2                   	// #2
    9898:	b	98b0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1530>
    989c:	ldr	x8, [sp, #216]
    98a0:	ldr	q0, [x24]
    98a4:	and	w22, w8, #0xff
    98a8:	stur	q0, [x29, #-224]
    98ac:	stur	x8, [x29, #-208]
    98b0:	ldr	x8, [x19]
    98b4:	mov	x0, x19
    98b8:	add	x21, sp, #0x90
    98bc:	ldr	x9, [x8, #40]
    98c0:	add	x8, sp, #0x90
    98c4:	blr	x9
    98c8:	mov	w8, #0x104                 	// #260
    98cc:	cmp	w22, #0x1
    98d0:	strh	w8, [sp, #192]
    98d4:	stp	x21, xzr, [sp, #176]
    98d8:	b.eq	98f0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1570>  // b.none
    98dc:	cbnz	w22, 9904 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1584>
    98e0:	mov	w8, #0x100                 	// #256
    98e4:	stp	xzr, xzr, [x29, #-192]
    98e8:	sturh	w8, [x29, #-176]
    98ec:	b	9950 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x15d0>
    98f0:	ldr	q0, [sp, #176]
    98f4:	ldr	x8, [sp, #192]
    98f8:	stur	q0, [x29, #-192]
    98fc:	stur	x8, [x29, #-176]
    9900:	b	9950 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x15d0>
    9904:	ldurb	w8, [x29, #-207]
    9908:	ldur	x9, [x29, #-224]
    990c:	mov	w10, #0x2                   	// #2
    9910:	sub	x11, x29, #0xe0
    9914:	cmp	w8, #0x1
    9918:	csel	w10, w22, w10, eq  // eq = none
    991c:	add	x12, sp, #0x90
    9920:	mov	w13, #0x4                   	// #4
    9924:	csel	x8, x9, x11, eq  // eq = none
    9928:	cmp	w10, #0x2
    992c:	stp	x8, x12, [x29, #-192]
    9930:	sturb	w10, [x29, #-176]
    9934:	sturb	w13, [x29, #-175]
    9938:	b.ne	9950 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x15d0>  // b.any
    993c:	ldrb	w9, [x8, #16]
    9940:	cbz	w9, 9ab4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1734>
    9944:	ldrb	w8, [x8, #17]
    9948:	cmp	w8, #0x1
    994c:	b.eq	9ab4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1734>  // b.none
    9950:	sub	x0, x29, #0x18
    9954:	sub	x2, x29, #0xc0
    9958:	mov	w1, #0x1                   	// #1
    995c:	stur	x20, [x29, #-24]
    9960:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    9964:	ldr	x0, [sp, #144]
    9968:	add	x8, sp, #0x90
    996c:	add	x8, x8, #0x10
    9970:	cmp	x0, x8
    9974:	b.eq	997c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x15fc>  // b.none
    9978:	bl	0 <_ZdlPv>
    997c:	ldr	x0, [sp, #224]
    9980:	add	x8, sp, #0xe0
    9984:	add	x8, x8, #0x10
    9988:	cmp	x0, x8
    998c:	b.eq	9994 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1614>  // b.none
    9990:	bl	0 <_ZdlPv>
    9994:	ldr	x0, [sp, #304]
    9998:	add	x8, sp, #0x130
    999c:	add	x8, x8, #0x10
    99a0:	cmp	x0, x8
    99a4:	b.eq	99ac <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x162c>  // b.none
    99a8:	bl	0 <_ZdlPv>
    99ac:	ldr	x0, [sp]
    99b0:	mov	x8, sp
    99b4:	add	x8, x8, #0x10
    99b8:	cmp	x0, x8
    99bc:	b.eq	9058 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xcd8>  // b.none
    99c0:	bl	0 <_ZdlPv>
    99c4:	b	9058 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xcd8>
    99c8:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    99cc:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    99d0:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    99d4:	add	x0, x0, #0x0
    99d8:	add	x1, x1, #0x0
    99dc:	add	x3, x3, #0x0
    99e0:	mov	w2, #0x43                  	// #67
    99e4:	bl	0 <__assert_fail>
    99e8:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    99ec:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    99f0:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    99f4:	add	x0, x0, #0x0
    99f8:	add	x1, x1, #0x0
    99fc:	add	x3, x3, #0x0
    9a00:	mov	w2, #0x22e                 	// #558
    9a04:	bl	0 <__assert_fail>
    9a08:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9a0c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9a10:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9a14:	add	x0, x0, #0x0
    9a18:	add	x1, x1, #0x0
    9a1c:	add	x3, x3, #0x0
    9a20:	mov	w2, #0x95                  	// #149
    9a24:	bl	0 <__assert_fail>
    9a28:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9a2c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9a30:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9a34:	add	x0, x0, #0x0
    9a38:	add	x1, x1, #0x0
    9a3c:	add	x3, x3, #0x0
    9a40:	mov	w2, #0x69                  	// #105
    9a44:	bl	0 <__assert_fail>
    9a48:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9a4c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9a50:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9a54:	add	x0, x0, #0x0
    9a58:	add	x1, x1, #0x0
    9a5c:	add	x3, x3, #0x0
    9a60:	mov	w2, #0x69                  	// #105
    9a64:	bl	0 <__assert_fail>
    9a68:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9a6c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9a70:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9a74:	add	x0, x0, #0x0
    9a78:	add	x1, x1, #0x0
    9a7c:	add	x3, x3, #0x0
    9a80:	mov	w2, #0x69                  	// #105
    9a84:	bl	0 <__assert_fail>
    9a88:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9a8c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9a90:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9a94:	add	x0, x0, #0x0
    9a98:	add	x1, x1, #0x0
    9a9c:	add	x3, x3, #0x0
    9aa0:	mov	w2, #0x71                  	// #113
    9aa4:	bl	0 <__assert_fail>
    9aa8:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9aac:	add	x0, x0, #0x0
    9ab0:	bl	0 <_ZSt19__throw_logic_errorPKc>
    9ab4:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9ab8:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9abc:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9ac0:	add	x0, x0, #0x0
    9ac4:	add	x1, x1, #0x0
    9ac8:	add	x3, x3, #0x0
    9acc:	mov	w2, #0xb8                  	// #184
    9ad0:	bl	0 <__assert_fail>

0000000000009ad4 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE>:
    9ad4:	sub	sp, sp, #0x60
    9ad8:	stp	x29, x30, [sp, #32]
    9adc:	str	x23, [sp, #48]
    9ae0:	stp	x22, x21, [sp, #64]
    9ae4:	stp	x20, x19, [sp, #80]
    9ae8:	add	x29, sp, #0x20
    9aec:	mov	x20, x0
    9af0:	ldr	w0, [x0, #40]
    9af4:	mov	x21, x2
    9af8:	mov	x19, x1
    9afc:	cmp	w0, #0x4a
    9b00:	b.ne	9b64 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x90>  // b.any
    9b04:	ldp	x0, x1, [x20, #48]
    9b08:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    9b0c:	mov	x22, x0
    9b10:	bl	0 <_ZN4llvm9UnsetInit3getEv>
    9b14:	ldp	w8, w9, [x19, #8]
    9b18:	mov	x23, x0
    9b1c:	cmp	w8, w9
    9b20:	b.cs	9c34 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x160>  // b.hs, b.nlast
    9b24:	ldr	x10, [x19]
    9b28:	cmp	w8, w9
    9b2c:	add	x9, x10, w8, uxtw #4
    9b30:	stp	x23, x22, [x9]
    9b34:	b.cs	9ca8 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x1d4>  // b.hs, b.nlast
    9b38:	add	w8, w8, #0x1
    9b3c:	str	w8, [x19, #8]
    9b40:	ldp	x8, x9, [x20, #8]
    9b44:	mov	x0, x20
    9b48:	cmp	x8, x9
    9b4c:	cset	w1, eq  // eq = none
    9b50:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    9b54:	str	w0, [x20, #40]
    9b58:	cmp	w0, #0xe
    9b5c:	b.eq	9c10 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x13c>  // b.none
    9b60:	b	9c90 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x1bc>
    9b64:	mov	x0, x20
    9b68:	mov	x1, x21
    9b6c:	mov	x2, xzr
    9b70:	mov	w3, wzr
    9b74:	bl	34f4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    9b78:	cbz	x0, 9c8c <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x1b8>
    9b7c:	ldr	w8, [x20, #40]
    9b80:	mov	x22, x0
    9b84:	cmp	w8, #0xc
    9b88:	b.ne	9bd4 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x100>  // b.any
    9b8c:	ldp	x8, x9, [x20, #8]
    9b90:	mov	x0, x20
    9b94:	cmp	x8, x9
    9b98:	cset	w1, eq  // eq = none
    9b9c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    9ba0:	cmp	w0, #0x4a
    9ba4:	str	w0, [x20, #40]
    9ba8:	b.ne	9c5c <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x188>  // b.any
    9bac:	ldp	x0, x1, [x20, #48]
    9bb0:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    9bb4:	ldp	x8, x9, [x20, #8]
    9bb8:	mov	x23, x0
    9bbc:	mov	x0, x20
    9bc0:	cmp	x8, x9
    9bc4:	cset	w1, eq  // eq = none
    9bc8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    9bcc:	str	w0, [x20, #40]
    9bd0:	b	9bd8 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x104>
    9bd4:	mov	x23, xzr
    9bd8:	ldp	w8, w9, [x19, #8]
    9bdc:	cmp	w8, w9
    9be0:	b.cs	9c48 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x174>  // b.hs, b.nlast
    9be4:	ldr	x9, [x19]
    9be8:	add	x8, x9, w8, uxtw #4
    9bec:	stp	x22, x23, [x8]
    9bf0:	ldp	w8, w9, [x19, #8]
    9bf4:	cmp	w8, w9
    9bf8:	b.cs	9ca8 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x1d4>  // b.hs, b.nlast
    9bfc:	add	w8, w8, #0x1
    9c00:	str	w8, [x19, #8]
    9c04:	ldr	w0, [x20, #40]
    9c08:	cmp	w0, #0xe
    9c0c:	b.ne	9c90 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x1bc>  // b.any
    9c10:	ldp	x8, x9, [x20, #8]
    9c14:	mov	x0, x20
    9c18:	cmp	x8, x9
    9c1c:	cset	w1, eq  // eq = none
    9c20:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    9c24:	str	w0, [x20, #40]
    9c28:	cmp	w0, #0x4a
    9c2c:	b.ne	9b64 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x90>  // b.any
    9c30:	b	9b04 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x30>
    9c34:	mov	x0, x19
    9c38:	mov	x1, xzr
    9c3c:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9c40:	ldp	w8, w9, [x19, #8]
    9c44:	b	9b24 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x50>
    9c48:	mov	x0, x19
    9c4c:	mov	x1, xzr
    9c50:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9c54:	ldr	w8, [x19, #8]
    9c58:	b	9be4 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x110>
    9c5c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9c60:	add	x8, x8, #0x0
    9c64:	mov	w9, #0x103                 	// #259
    9c68:	mov	x0, x20
    9c6c:	stp	x8, xzr, [sp, #8]
    9c70:	strh	w9, [sp, #24]
    9c74:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    9c78:	str	x0, [x29, #24]
    9c7c:	add	x0, x29, #0x18
    9c80:	add	x2, sp, #0x8
    9c84:	mov	w1, #0x1                   	// #1
    9c88:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    9c8c:	str	wzr, [x19, #8]
    9c90:	ldp	x20, x19, [sp, #80]
    9c94:	ldp	x22, x21, [sp, #64]
    9c98:	ldr	x23, [sp, #48]
    9c9c:	ldp	x29, x30, [sp, #32]
    9ca0:	add	sp, sp, #0x60
    9ca4:	ret
    9ca8:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9cac:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9cb0:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9cb4:	add	x0, x0, #0x0
    9cb8:	add	x1, x1, #0x0
    9cbc:	add	x3, x3, #0x0
    9cc0:	mov	w2, #0x43                  	// #67
    9cc4:	bl	0 <__assert_fail>

0000000000009cc8 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb>:
    9cc8:	sub	sp, sp, #0xd0
    9ccc:	stp	x29, x30, [sp, #128]
    9cd0:	stp	x26, x25, [sp, #144]
    9cd4:	stp	x24, x23, [sp, #160]
    9cd8:	stp	x22, x21, [sp, #176]
    9cdc:	stp	x20, x19, [sp, #192]
    9ce0:	add	x29, sp, #0x80
    9ce4:	ldr	w26, [x0, #40]
    9ce8:	mov	w23, w2
    9cec:	mov	x19, x0
    9cf0:	mov	x20, x1
    9cf4:	cmp	w26, #0x1b
    9cf8:	b.ne	9d14 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x4c>  // b.any
    9cfc:	ldp	x8, x9, [x19, #8]
    9d00:	mov	x0, x19
    9d04:	cmp	x8, x9
    9d08:	cset	w1, eq  // eq = none
    9d0c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    9d10:	str	w0, [x19, #40]
    9d14:	mov	x0, x19
    9d18:	bl	4ebc <_ZN4llvm8TGParser9ParseTypeEv>
    9d1c:	cbz	x0, 9d78 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0xb0>
    9d20:	ldr	w8, [x19, #40]
    9d24:	cmp	w8, #0x48
    9d28:	b.ne	9d80 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0xb8>  // b.any
    9d2c:	sub	x8, x29, #0x28
    9d30:	add	x25, x8, #0x10
    9d34:	stur	x25, [x29, #-40]
    9d38:	ldp	x22, x24, [x19, #48]
    9d3c:	mov	x21, x0
    9d40:	cbnz	x22, 9d48 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x80>
    9d44:	cbnz	x24, a068 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x3a0>
    9d48:	cmp	x24, #0x10
    9d4c:	str	x24, [sp, #32]
    9d50:	b.cc	9db8 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0xf0>  // b.lo, b.ul, b.last
    9d54:	sub	x0, x29, #0x28
    9d58:	add	x1, sp, #0x20
    9d5c:	mov	x2, xzr
    9d60:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    9d64:	ldr	x8, [sp, #32]
    9d68:	stur	x0, [x29, #-40]
    9d6c:	stur	x8, [x29, #-24]
    9d70:	cbnz	x24, 9dc0 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0xf8>
    9d74:	b	9de0 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x118>
    9d78:	mov	x22, xzr
    9d7c:	b	9fd8 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x310>
    9d80:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9d84:	add	x8, x8, #0x0
    9d88:	mov	w9, #0x103                 	// #259
    9d8c:	mov	x0, x19
    9d90:	stp	x8, xzr, [x29, #-40]
    9d94:	sturh	w9, [x29, #-24]
    9d98:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    9d9c:	str	x0, [sp, #32]
    9da0:	add	x0, sp, #0x20
    9da4:	sub	x2, x29, #0x28
    9da8:	mov	w1, #0x1                   	// #1
    9dac:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    9db0:	mov	x22, xzr
    9db4:	b	9fd8 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x310>
    9db8:	mov	x0, x25
    9dbc:	cbz	x24, 9de0 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x118>
    9dc0:	cmp	x24, #0x1
    9dc4:	b.ne	9dd4 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x10c>  // b.any
    9dc8:	ldrb	w8, [x22]
    9dcc:	strb	w8, [x0]
    9dd0:	b	9de0 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x118>
    9dd4:	mov	x1, x22
    9dd8:	mov	x2, x24
    9ddc:	bl	0 <memcpy>
    9de0:	ldr	x8, [sp, #32]
    9de4:	ldur	x9, [x29, #-40]
    9de8:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9dec:	add	x1, x1, #0x0
    9df0:	sub	x0, x29, #0x28
    9df4:	stur	x8, [x29, #-32]
    9df8:	strb	wzr, [x9, x8]
    9dfc:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>
    9e00:	cbz	w0, 9e6c <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x1a4>
    9e04:	mov	x0, x19
    9e08:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    9e0c:	ldp	x8, x1, [x29, #-40]
    9e10:	mov	x24, x0
    9e14:	mov	x0, x8
    9e18:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    9e1c:	ldp	x8, x9, [x19, #8]
    9e20:	mov	x22, x0
    9e24:	mov	x0, x19
    9e28:	cmp	x8, x9
    9e2c:	cset	w1, eq  // eq = none
    9e30:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    9e34:	str	w0, [x19, #40]
    9e38:	tbz	w23, #0, 9f94 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x2cc>
    9e3c:	ldr	x1, [x19, #328]
    9e40:	cbz	x20, 9f74 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x2ac>
    9e44:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9e48:	add	x3, x3, #0x0
    9e4c:	mov	w4, #0x1                   	// #1
    9e50:	mov	x0, x20
    9e54:	mov	x2, x22
    9e58:	bl	547c <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE>
    9e5c:	ldr	x1, [x19, #328]
    9e60:	mov	x22, x0
    9e64:	cbnz	x1, 9f78 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x2b0>
    9e68:	b	9f94 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x2cc>
    9e6c:	ldur	x9, [x29, #-32]
    9e70:	mov	x8, sp
    9e74:	add	x20, x8, #0x10
    9e78:	mov	x0, sp
    9e7c:	add	x1, x9, #0x1
    9e80:	stp	x20, xzr, [sp]
    9e84:	strb	wzr, [sp, #16]
    9e88:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
    9e8c:	ldr	x8, [sp, #8]
    9e90:	mov	x21, #0x3fffffffffffffff    	// #4611686018427387903
    9e94:	cmp	x8, x21
    9e98:	b.eq	a074 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x3ac>  // b.none
    9e9c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9ea0:	add	x1, x1, #0x0
    9ea4:	mov	x0, sp
    9ea8:	mov	w2, #0x1                   	// #1
    9eac:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    9eb0:	ldp	x1, x2, [x29, #-40]
    9eb4:	mov	x0, sp
    9eb8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    9ebc:	ldr	x8, [sp, #8]
    9ec0:	sub	x8, x21, x8
    9ec4:	cmp	x8, #0x1c
    9ec8:	b.ls	a074 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x3ac>  // b.plast
    9ecc:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9ed0:	add	x1, x1, #0x0
    9ed4:	mov	x0, sp
    9ed8:	mov	w2, #0x1d                  	// #29
    9edc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    9ee0:	add	x8, sp, #0x20
    9ee4:	add	x21, x8, #0x10
    9ee8:	str	x21, [sp, #32]
    9eec:	mov	x8, x0
    9ef0:	ldr	x9, [x8], #16
    9ef4:	cmp	x9, x8
    9ef8:	b.eq	9f0c <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x244>  // b.none
    9efc:	str	x9, [sp, #32]
    9f00:	ldr	x9, [x0, #16]
    9f04:	str	x9, [sp, #48]
    9f08:	b	9f14 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x24c>
    9f0c:	ldr	q0, [x9]
    9f10:	str	q0, [x21]
    9f14:	ldr	x9, [x0, #8]
    9f18:	mov	w10, #0x104                 	// #260
    9f1c:	add	x11, sp, #0x20
    9f20:	str	x9, [sp, #40]
    9f24:	stp	x8, xzr, [x0]
    9f28:	strb	wzr, [x0, #16]
    9f2c:	mov	x0, x19
    9f30:	strh	w10, [sp, #80]
    9f34:	stp	x11, xzr, [sp, #64]
    9f38:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    9f3c:	stur	x0, [x29, #-8]
    9f40:	sub	x0, x29, #0x8
    9f44:	add	x2, sp, #0x40
    9f48:	mov	w1, #0x1                   	// #1
    9f4c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    9f50:	ldr	x0, [sp, #32]
    9f54:	cmp	x0, x21
    9f58:	b.eq	9f60 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x298>  // b.none
    9f5c:	bl	0 <_ZdlPv>
    9f60:	ldr	x0, [sp]
    9f64:	cmp	x0, x20
    9f68:	b.eq	9fc4 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x2fc>  // b.none
    9f6c:	bl	0 <_ZdlPv>
    9f70:	b	9fc4 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x2fc>
    9f74:	cbz	x1, a080 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x3b8>
    9f78:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9f7c:	add	x3, x3, #0x0
    9f80:	mov	w4, #0x2                   	// #2
    9f84:	mov	x0, x1
    9f88:	mov	x2, x22
    9f8c:	bl	547c <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE>
    9f90:	mov	x22, x0
    9f94:	cmp	w26, #0x1b
    9f98:	cset	w3, eq  // eq = none
    9f9c:	add	x0, sp, #0x20
    9fa0:	mov	x1, x22
    9fa4:	mov	x2, x21
    9fa8:	bl	0 <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb>
    9fac:	add	x3, sp, #0x20
    9fb0:	mov	x0, x19
    9fb4:	mov	x1, x20
    9fb8:	mov	x2, x24
    9fbc:	bl	1c0 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE>
    9fc0:	tbz	w0, #0, 9ff8 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x330>
    9fc4:	mov	x22, xzr
    9fc8:	ldur	x0, [x29, #-40]
    9fcc:	cmp	x0, x25
    9fd0:	b.eq	9fd8 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x310>  // b.none
    9fd4:	bl	0 <_ZdlPv>
    9fd8:	mov	x0, x22
    9fdc:	ldp	x20, x19, [sp, #192]
    9fe0:	ldp	x22, x21, [sp, #176]
    9fe4:	ldp	x24, x23, [sp, #160]
    9fe8:	ldp	x26, x25, [sp, #144]
    9fec:	ldp	x29, x30, [sp, #128]
    9ff0:	add	sp, sp, #0xd0
    9ff4:	ret
    9ff8:	ldr	w8, [x19, #40]
    9ffc:	cmp	w8, #0x10
    a000:	b.ne	9fc8 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x300>  // b.any
    a004:	ldp	x8, x9, [x19, #8]
    a008:	mov	x0, x19
    a00c:	cmp	x8, x9
    a010:	cset	w1, eq  // eq = none
    a014:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a018:	str	w0, [x19, #40]
    a01c:	mov	x0, x19
    a020:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    a024:	mov	x23, x0
    a028:	mov	x0, x19
    a02c:	mov	x1, x20
    a030:	mov	x2, x21
    a034:	mov	w3, wzr
    a038:	bl	34f4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    a03c:	cbz	x0, 9fc8 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x300>
    a040:	mov	x6, x0
    a044:	mov	x0, x19
    a048:	mov	x1, x20
    a04c:	mov	x2, x23
    a050:	mov	x3, x22
    a054:	mov	x4, xzr
    a058:	mov	x5, xzr
    a05c:	mov	w7, wzr
    a060:	bl	6bc <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b>
    a064:	b	9fc8 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x300>
    a068:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a06c:	add	x0, x0, #0x0
    a070:	bl	0 <_ZSt19__throw_logic_errorPKc>
    a074:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a078:	add	x0, x0, #0x0
    a07c:	bl	0 <_ZSt20__throw_length_errorPKc>
    a080:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a084:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a088:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a08c:	add	x0, x0, #0x0
    a090:	add	x1, x1, #0x0
    a094:	add	x3, x3, #0x0
    a098:	mov	w2, #0x990                 	// #2448
    a09c:	bl	0 <__assert_fail>

000000000000a0a0 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE>:
    a0a0:	sub	sp, sp, #0x180
    a0a4:	stp	x29, x30, [sp, #288]
    a0a8:	stp	x28, x27, [sp, #304]
    a0ac:	stp	x26, x25, [sp, #320]
    a0b0:	stp	x24, x23, [sp, #336]
    a0b4:	stp	x22, x21, [sp, #352]
    a0b8:	stp	x20, x19, [sp, #368]
    a0bc:	add	x29, sp, #0x120
    a0c0:	ldr	w8, [x0, #40]
    a0c4:	mov	x19, x0
    a0c8:	cmp	w8, #0x48
    a0cc:	b.ne	a198 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0xf8>  // b.any
    a0d0:	mov	x21, x1
    a0d4:	ldp	x0, x1, [x19, #48]
    a0d8:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    a0dc:	ldp	x8, x9, [x19, #8]
    a0e0:	mov	x20, x0
    a0e4:	mov	x0, x19
    a0e8:	cmp	x8, x9
    a0ec:	cset	w1, eq  // eq = none
    a0f0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a0f4:	cmp	w0, #0x10
    a0f8:	str	w0, [x19, #40]
    a0fc:	b.ne	a1a4 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x104>  // b.any
    a100:	ldp	x8, x9, [x19, #8]
    a104:	mov	x0, x19
    a108:	cmp	x8, x9
    a10c:	cset	w1, eq  // eq = none
    a110:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a114:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a118:	ldr	d0, [x9]
    a11c:	sub	x8, x29, #0x60
    a120:	add	x8, x8, #0x10
    a124:	cmp	w0, #0x6
    a128:	str	w0, [x19, #40]
    a12c:	stur	x8, [x29, #-96]
    a130:	stur	d0, [x29, #-88]
    a134:	b.ne	a1fc <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x15c>  // b.any
    a138:	ldp	x8, x9, [x19, #8]
    a13c:	mov	x0, x19
    a140:	cmp	x8, x9
    a144:	cset	w1, eq  // eq = none
    a148:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a14c:	str	w0, [x19, #40]
    a150:	sub	x1, x29, #0x60
    a154:	mov	x0, x19
    a158:	mov	x2, xzr
    a15c:	bl	49bc <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE>
    a160:	tbnz	w0, #0, a26c <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x1cc>
    a164:	ldr	w8, [x19, #40]
    a168:	cmp	w8, #0xe
    a16c:	b.eq	a138 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x98>  // b.none
    a170:	cmp	w8, #0x7
    a174:	b.ne	a27c <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x1dc>  // b.any
    a178:	ldp	x8, x9, [x19, #8]
    a17c:	mov	x0, x19
    a180:	cmp	x8, x9
    a184:	cset	w1, eq  // eq = none
    a188:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a18c:	mov	x22, xzr
    a190:	str	w0, [x19, #40]
    a194:	b	a330 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x290>
    a198:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a19c:	add	x8, x8, #0x0
    a1a0:	b	a1ac <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x10c>
    a1a4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a1a8:	add	x8, x8, #0x0
    a1ac:	mov	w9, #0x103                 	// #259
    a1b0:	mov	x0, x19
    a1b4:	stp	x8, xzr, [x29, #-96]
    a1b8:	sturh	w9, [x29, #-80]
    a1bc:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    a1c0:	stur	x0, [x29, #-128]
    a1c4:	sub	x0, x29, #0x80
    a1c8:	sub	x2, x29, #0x60
    a1cc:	mov	w1, #0x1                   	// #1
    a1d0:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    a1d4:	mov	x19, xzr
    a1d8:	mov	x0, x19
    a1dc:	ldp	x20, x19, [sp, #368]
    a1e0:	ldp	x22, x21, [sp, #352]
    a1e4:	ldp	x24, x23, [sp, #336]
    a1e8:	ldp	x26, x25, [sp, #320]
    a1ec:	ldp	x28, x27, [sp, #304]
    a1f0:	ldp	x29, x30, [sp, #288]
    a1f4:	add	sp, sp, #0x180
    a1f8:	ret
    a1fc:	mov	x0, x19
    a200:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    a204:	mov	x22, x0
    a208:	mov	x0, x19
    a20c:	mov	x1, xzr
    a210:	mov	x2, xzr
    a214:	mov	w3, wzr
    a218:	bl	34f4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    a21c:	cbz	x0, a5d8 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x538>
    a220:	ldrb	w8, [x0, #8]
    a224:	sub	w8, w8, #0x1
    a228:	cmp	w8, #0x17
    a22c:	csel	x2, x0, xzr, cc  // cc = lo, ul, last
    a230:	cmp	w8, #0x16
    a234:	b.hi	a2b0 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x210>  // b.pmore
    a238:	ldr	x8, [x2, #16]
    a23c:	cbz	x8, a604 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x564>
    a240:	ldr	w8, [x8, #8]
    a244:	cmp	w8, #0x5
    a248:	b.ne	a318 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x278>  // b.any
    a24c:	str	x0, [x21]
    a250:	ldr	x8, [x2, #16]
    a254:	cbz	x8, a604 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x564>
    a258:	ldr	w9, [x8, #8]
    a25c:	cmp	w9, #0x5
    a260:	b.ne	a650 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x5b0>  // b.any
    a264:	ldr	x22, [x8, #24]
    a268:	b	a330 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x290>
    a26c:	stur	wzr, [x29, #-88]
    a270:	ldr	w8, [x19, #40]
    a274:	cmp	w8, #0x7
    a278:	b.eq	a178 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0xd8>  // b.none
    a27c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a280:	add	x8, x8, #0x0
    a284:	mov	w9, #0x103                 	// #259
    a288:	mov	x0, x19
    a28c:	stp	x8, xzr, [x29, #-128]
    a290:	sturh	w9, [x29, #-112]
    a294:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    a298:	str	x0, [sp, #104]
    a29c:	add	x0, sp, #0x68
    a2a0:	sub	x2, x29, #0x80
    a2a4:	mov	w1, #0x1                   	// #1
    a2a8:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    a2ac:	b	a5d8 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x538>
    a2b0:	sub	x8, x29, #0x80
    a2b4:	add	x20, x8, #0x10
    a2b8:	stp	x20, xzr, [x29, #-128]
    a2bc:	sturb	wzr, [x29, #-112]
    a2c0:	ldr	x8, [x0]
    a2c4:	ldr	x9, [x8, #40]
    a2c8:	add	x8, sp, #0x8
    a2cc:	blr	x9
    a2d0:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a2d4:	add	x3, x3, #0x0
    a2d8:	add	x0, sp, #0x8
    a2dc:	mov	w4, #0x16                  	// #22
    a2e0:	mov	x1, xzr
    a2e4:	mov	x2, xzr
    a2e8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    a2ec:	add	x8, sp, #0x28
    a2f0:	add	x21, x8, #0x10
    a2f4:	str	x21, [sp, #40]
    a2f8:	mov	x8, x0
    a2fc:	ldr	x9, [x8], #16
    a300:	cmp	x9, x8
    a304:	b.eq	a460 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x3c0>  // b.none
    a308:	str	x9, [sp, #40]
    a30c:	ldr	x9, [x0, #16]
    a310:	str	x9, [sp, #56]
    a314:	b	a468 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x3c8>
    a318:	sub	x1, x29, #0x60
    a31c:	mov	x0, x19
    a320:	bl	49bc <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE>
    a324:	mov	x22, xzr
    a328:	mov	x19, xzr
    a32c:	tbnz	w0, #0, a5dc <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x53c>
    a330:	ldur	w8, [x29, #-88]
    a334:	cbz	w8, a448 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x3a8>
    a338:	str	x20, [sp]
    a33c:	cbnz	x22, a624 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x584>
    a340:	ldur	x25, [x29, #-96]
    a344:	mov	x19, xzr
    a348:	mov	x20, xzr
    a34c:	lsl	x26, x8, #2
    a350:	mov	x28, #0xfffffffffffffff     	// #1152921504606846975
    a354:	b	a36c <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x2cc>
    a358:	str	x23, [x20]
    a35c:	add	x20, x20, #0x8
    a360:	subs	x26, x26, #0x4
    a364:	add	x25, x25, #0x4
    a368:	b.eq	a40c <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x36c>  // b.none
    a36c:	ldr	w0, [x25]
    a370:	bl	0 <_ZN4llvm7IntInit3getEl>
    a374:	cmp	x22, x20
    a378:	mov	x23, x0
    a37c:	b.ne	a358 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x2b8>  // b.any
    a380:	sub	x22, x20, x19
    a384:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
    a388:	cmp	x22, x8
    a38c:	b.eq	a5f8 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x558>  // b.none
    a390:	asr	x20, x22, #3
    a394:	cmp	x22, #0x0
    a398:	csinc	x8, x20, xzr, ne  // ne = any
    a39c:	adds	x8, x8, x20
    a3a0:	lsr	x10, x8, #60
    a3a4:	cset	w9, cs  // cs = hs, nlast
    a3a8:	cmp	x10, #0x0
    a3ac:	cset	w10, ne  // ne = any
    a3b0:	orr	w9, w9, w10
    a3b4:	cmp	w9, #0x0
    a3b8:	csel	x27, x28, x8, ne  // ne = any
    a3bc:	cbz	x27, a3d0 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x330>
    a3c0:	lsl	x0, x27, #3
    a3c4:	bl	0 <_Znwm>
    a3c8:	mov	x24, x0
    a3cc:	b	a3d4 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x334>
    a3d0:	mov	x24, xzr
    a3d4:	add	x20, x24, x20, lsl #3
    a3d8:	cmp	x22, #0x1
    a3dc:	str	x23, [x20]
    a3e0:	b.lt	a3f4 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x354>  // b.tstop
    a3e4:	mov	x0, x24
    a3e8:	mov	x1, x19
    a3ec:	mov	x2, x22
    a3f0:	bl	0 <memmove>
    a3f4:	cbz	x19, a400 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x360>
    a3f8:	mov	x0, x19
    a3fc:	bl	0 <_ZdlPv>
    a400:	add	x22, x24, x27, lsl #3
    a404:	mov	x19, x24
    a408:	b	a35c <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x2bc>
    a40c:	adrp	x22, 0 <_ZN4llvm8IntRecTy6SharedE>
    a410:	ldr	x22, [x22]
    a414:	sub	x8, x20, x19
    a418:	asr	x1, x8, #3
    a41c:	mov	x0, x19
    a420:	mov	x2, x22
    a424:	bl	0 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    a428:	str	x0, [x21]
    a42c:	cbz	x19, a440 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x3a0>
    a430:	mov	x0, x19
    a434:	bl	0 <_ZdlPv>
    a438:	adrp	x22, 0 <_ZN4llvm8IntRecTy6SharedE>
    a43c:	ldr	x22, [x22]
    a440:	ldr	x20, [sp]
    a444:	b	a44c <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x3ac>
    a448:	cbz	x22, a5d8 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x538>
    a44c:	mov	x0, x20
    a450:	mov	x1, x22
    a454:	bl	0 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>
    a458:	mov	x19, x0
    a45c:	b	a5dc <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x53c>
    a460:	ldr	q0, [x9]
    a464:	str	q0, [x21]
    a468:	ldr	x9, [x0, #8]
    a46c:	str	x9, [sp, #48]
    a470:	stp	x8, xzr, [x0]
    a474:	strb	wzr, [x0, #16]
    a478:	ldp	x1, x2, [x29, #-128]
    a47c:	add	x0, sp, #0x28
    a480:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    a484:	add	x8, sp, #0x48
    a488:	add	x23, x8, #0x10
    a48c:	str	x23, [sp, #72]
    a490:	mov	x8, x0
    a494:	ldr	x9, [x8], #16
    a498:	cmp	x9, x8
    a49c:	b.eq	a4b0 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x410>  // b.none
    a4a0:	str	x9, [sp, #72]
    a4a4:	ldr	x9, [x0, #16]
    a4a8:	str	x9, [sp, #88]
    a4ac:	b	a4b8 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x418>
    a4b0:	ldr	q0, [x9]
    a4b4:	str	q0, [x23]
    a4b8:	ldr	x9, [x0, #8]
    a4bc:	str	x9, [sp, #80]
    a4c0:	stp	x8, xzr, [x0]
    a4c4:	strb	wzr, [x0, #16]
    a4c8:	ldr	x8, [sp, #80]
    a4cc:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    a4d0:	cmp	x8, x9
    a4d4:	b.eq	a644 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x5a4>  // b.none
    a4d8:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a4dc:	add	x1, x1, #0x0
    a4e0:	add	x0, sp, #0x48
    a4e4:	mov	w2, #0x1                   	// #1
    a4e8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    a4ec:	add	x8, sp, #0x68
    a4f0:	add	x24, x8, #0x10
    a4f4:	str	x24, [sp, #104]
    a4f8:	mov	x8, x0
    a4fc:	ldr	x9, [x8], #16
    a500:	cmp	x9, x8
    a504:	b.eq	a518 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x478>  // b.none
    a508:	str	x9, [sp, #104]
    a50c:	ldr	x9, [x0, #16]
    a510:	str	x9, [sp, #120]
    a514:	b	a520 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x480>
    a518:	ldr	q0, [x9]
    a51c:	str	q0, [x24]
    a520:	ldr	x9, [x0, #8]
    a524:	mov	w10, #0x104                 	// #260
    a528:	add	x11, sp, #0x68
    a52c:	add	x2, sp, #0x88
    a530:	str	x9, [sp, #112]
    a534:	stp	x8, xzr, [x0]
    a538:	strb	wzr, [x0, #16]
    a53c:	sub	x0, x29, #0x10
    a540:	mov	w1, #0x1                   	// #1
    a544:	strh	w10, [sp, #152]
    a548:	stp	x11, xzr, [sp, #136]
    a54c:	stur	x22, [x29, #-16]
    a550:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    a554:	ldr	x0, [sp, #104]
    a558:	cmp	x0, x24
    a55c:	b.eq	a564 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x4c4>  // b.none
    a560:	bl	0 <_ZdlPv>
    a564:	ldr	x0, [sp, #72]
    a568:	cmp	x0, x23
    a56c:	b.eq	a574 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x4d4>  // b.none
    a570:	bl	0 <_ZdlPv>
    a574:	ldr	x0, [sp, #40]
    a578:	cmp	x0, x21
    a57c:	b.eq	a584 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x4e4>  // b.none
    a580:	bl	0 <_ZdlPv>
    a584:	ldr	x0, [sp, #8]
    a588:	add	x8, sp, #0x8
    a58c:	add	x8, x8, #0x10
    a590:	cmp	x0, x8
    a594:	b.eq	a59c <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x4fc>  // b.none
    a598:	bl	0 <_ZdlPv>
    a59c:	ldr	x8, [x19, #328]
    a5a0:	cbz	x8, a5c8 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x528>
    a5a4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a5a8:	add	x8, x8, #0x0
    a5ac:	mov	w9, #0x103                 	// #259
    a5b0:	add	x2, sp, #0x68
    a5b4:	mov	x0, xzr
    a5b8:	mov	x1, xzr
    a5bc:	stp	x8, xzr, [sp, #104]
    a5c0:	strh	w9, [sp, #120]
    a5c4:	bl	0 <_ZN4llvm9PrintNoteENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    a5c8:	ldur	x0, [x29, #-128]
    a5cc:	cmp	x0, x20
    a5d0:	b.eq	a5d8 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x538>  // b.none
    a5d4:	bl	0 <_ZdlPv>
    a5d8:	mov	x19, xzr
    a5dc:	ldur	x0, [x29, #-96]
    a5e0:	sub	x8, x29, #0x60
    a5e4:	add	x8, x8, #0x10
    a5e8:	cmp	x0, x8
    a5ec:	b.eq	a1d8 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x138>  // b.none
    a5f0:	bl	0 <free>
    a5f4:	b	a1d8 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x138>
    a5f8:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a5fc:	add	x0, x0, #0x0
    a600:	bl	0 <_ZSt20__throw_length_errorPKc>
    a604:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a608:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a60c:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a610:	add	x0, x0, #0x0
    a614:	add	x1, x1, #0x0
    a618:	add	x3, x3, #0x0
    a61c:	mov	w2, #0x69                  	// #105
    a620:	bl	0 <__assert_fail>
    a624:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a628:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a62c:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a630:	add	x0, x0, #0x0
    a634:	add	x1, x1, #0x0
    a638:	add	x3, x3, #0x0
    a63c:	mov	w2, #0x9f2                 	// #2546
    a640:	bl	0 <__assert_fail>
    a644:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a648:	add	x0, x0, #0x0
    a64c:	bl	0 <_ZSt20__throw_length_errorPKc>
    a650:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a654:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a658:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a65c:	add	x0, x0, #0x0
    a660:	add	x1, x1, #0x0
    a664:	add	x3, x3, #0x0
    a668:	mov	w2, #0x108                 	// #264
    a66c:	bl	0 <__assert_fail>

000000000000a670 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE>:
    a670:	sub	sp, sp, #0x70
    a674:	stp	x29, x30, [sp, #32]
    a678:	stp	x26, x25, [sp, #48]
    a67c:	stp	x24, x23, [sp, #64]
    a680:	stp	x22, x21, [sp, #80]
    a684:	stp	x20, x19, [sp, #96]
    a688:	add	x29, sp, #0x20
    a68c:	ldr	w8, [x0, #40]
    a690:	cmp	w8, #0xa
    a694:	b.ne	a8f8 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x288>  // b.any
    a698:	ldp	x8, x9, [x0, #8]
    a69c:	mov	x20, x1
    a6a0:	mov	x19, x0
    a6a4:	cmp	x8, x9
    a6a8:	cset	w1, eq  // eq = none
    a6ac:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a6b0:	mov	x26, x20
    a6b4:	str	w0, [x19, #40]
    a6b8:	cbnz	x20, a6c0 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x50>
    a6bc:	ldr	x26, [x19, #328]
    a6c0:	mov	w2, #0x1                   	// #1
    a6c4:	mov	x0, x19
    a6c8:	mov	x1, x20
    a6cc:	mov	w25, #0x1                   	// #1
    a6d0:	bl	9cc8 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb>
    a6d4:	cbz	x0, a82c <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x1bc>
    a6d8:	ldr	w8, [x26, #64]
    a6dc:	ldr	x9, [x26, #56]
    a6e0:	mov	x22, x0
    a6e4:	cbz	w8, a704 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x94>
    a6e8:	lsl	x10, x8, #3
    a6ec:	mov	x11, x9
    a6f0:	ldr	x12, [x11], #8
    a6f4:	cmp	x12, x22
    a6f8:	b.eq	a8b8 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x248>  // b.none
    a6fc:	subs	x10, x10, #0x8
    a700:	b.ne	a6f0 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x80>  // b.any
    a704:	ldr	w10, [x26, #68]
    a708:	add	x21, x26, #0x38
    a70c:	cmp	w8, w10
    a710:	b.cs	a898 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x228>  // b.hs, b.nlast
    a714:	str	x22, [x9, x8, lsl #3]
    a718:	ldp	w8, w9, [x26, #64]
    a71c:	cmp	w8, w9
    a720:	b.cs	a8d8 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x268>  // b.hs, b.nlast
    a724:	add	x22, x21, #0x10
    a728:	add	w8, w8, #0x1
    a72c:	str	w8, [x26, #64]
    a730:	ldr	w8, [x19, #40]
    a734:	cmp	w8, #0xe
    a738:	b.ne	a84c <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x1dc>  // b.any
    a73c:	ldp	x8, x9, [x19, #8]
    a740:	mov	x0, x19
    a744:	cmp	x8, x9
    a748:	cset	w1, eq  // eq = none
    a74c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a750:	str	w0, [x19, #40]
    a754:	mov	x0, x19
    a758:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    a75c:	mov	x24, x0
    a760:	mov	w2, #0x1                   	// #1
    a764:	mov	x0, x19
    a768:	mov	x1, x20
    a76c:	mov	w25, #0x1                   	// #1
    a770:	bl	9cc8 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb>
    a774:	cbz	x0, a82c <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x1bc>
    a778:	ldr	w8, [x26, #64]
    a77c:	ldr	x9, [x26, #56]
    a780:	mov	x23, x0
    a784:	cbz	w8, a7c0 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x150>
    a788:	lsl	x10, x8, #3
    a78c:	mov	x11, x10
    a790:	mov	x12, x9
    a794:	ldr	x13, [x12], #8
    a798:	cmp	x13, x23
    a79c:	b.eq	a800 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x190>  // b.none
    a7a0:	subs	x11, x11, #0x8
    a7a4:	b.ne	a794 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x124>  // b.any
    a7a8:	mov	x11, x9
    a7ac:	ldr	x12, [x11], #8
    a7b0:	cmp	x12, x23
    a7b4:	b.eq	a8b8 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x248>  // b.none
    a7b8:	subs	x10, x10, #0x8
    a7bc:	b.ne	a7ac <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x13c>  // b.any
    a7c0:	ldr	w10, [x26, #68]
    a7c4:	cmp	w8, w10
    a7c8:	b.cs	a7e0 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x170>  // b.hs, b.nlast
    a7cc:	str	x23, [x9, x8, lsl #3]
    a7d0:	ldp	w8, w9, [x26, #64]
    a7d4:	cmp	w8, w9
    a7d8:	b.cc	a728 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0xb8>  // b.lo, b.ul, b.last
    a7dc:	b	a8d8 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x268>
    a7e0:	mov	w3, #0x8                   	// #8
    a7e4:	mov	x0, x21
    a7e8:	mov	x1, x22
    a7ec:	mov	x2, xzr
    a7f0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    a7f4:	ldr	w8, [x26, #64]
    a7f8:	ldr	x9, [x26, #56]
    a7fc:	b	a7cc <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x15c>
    a800:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a804:	add	x8, x8, #0x0
    a808:	mov	w9, #0x103                 	// #259
    a80c:	stp	x8, xzr, [sp]
    a810:	strh	w9, [sp, #16]
    a814:	stur	x24, [x29, #-8]
    a818:	sub	x0, x29, #0x8
    a81c:	mov	x2, sp
    a820:	mov	w1, #0x1                   	// #1
    a824:	mov	w25, #0x1                   	// #1
    a828:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    a82c:	mov	w0, w25
    a830:	ldp	x20, x19, [sp, #96]
    a834:	ldp	x22, x21, [sp, #80]
    a838:	ldp	x24, x23, [sp, #64]
    a83c:	ldp	x26, x25, [sp, #48]
    a840:	ldp	x29, x30, [sp, #32]
    a844:	add	sp, sp, #0x70
    a848:	ret
    a84c:	cmp	w8, #0xb
    a850:	b.ne	a874 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x204>  // b.any
    a854:	ldp	x8, x9, [x19, #8]
    a858:	mov	x0, x19
    a85c:	cmp	x8, x9
    a860:	cset	w1, eq  // eq = none
    a864:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a868:	mov	w25, wzr
    a86c:	str	w0, [x19, #40]
    a870:	b	a82c <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x1bc>
    a874:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a878:	add	x8, x8, #0x0
    a87c:	mov	w9, #0x103                 	// #259
    a880:	mov	x0, x19
    a884:	stp	x8, xzr, [sp]
    a888:	strh	w9, [sp, #16]
    a88c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    a890:	stur	x0, [x29, #-8]
    a894:	b	a818 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x1a8>
    a898:	add	x1, x21, #0x10
    a89c:	mov	w3, #0x8                   	// #8
    a8a0:	mov	x0, x21
    a8a4:	mov	x2, xzr
    a8a8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    a8ac:	ldr	w8, [x26, #64]
    a8b0:	ldr	x9, [x26, #56]
    a8b4:	b	a714 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0xa4>
    a8b8:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a8bc:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a8c0:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a8c4:	add	x0, x0, #0x0
    a8c8:	add	x1, x1, #0x0
    a8cc:	add	x3, x3, #0x0
    a8d0:	mov	w2, #0x605                 	// #1541
    a8d4:	bl	0 <__assert_fail>
    a8d8:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a8dc:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a8e0:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a8e4:	add	x0, x0, #0x0
    a8e8:	add	x1, x1, #0x0
    a8ec:	add	x3, x3, #0x0
    a8f0:	mov	w2, #0x43                  	// #67
    a8f4:	bl	0 <__assert_fail>
    a8f8:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a8fc:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a900:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a904:	add	x0, x0, #0x0
    a908:	add	x1, x1, #0x0
    a90c:	add	x3, x3, #0x0
    a910:	mov	w2, #0xa08                 	// #2568
    a914:	bl	0 <__assert_fail>

000000000000a918 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE>:
    a918:	sub	sp, sp, #0xe0
    a91c:	stp	x29, x30, [sp, #160]
    a920:	stp	x24, x23, [sp, #176]
    a924:	stp	x22, x21, [sp, #192]
    a928:	stp	x20, x19, [sp, #208]
    a92c:	add	x29, sp, #0xa0
    a930:	ldr	w8, [x0, #40]
    a934:	mov	x19, x0
    a938:	mov	x20, x1
    a93c:	cmp	w8, #0x1e
    a940:	b.eq	a968 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x50>  // b.none
    a944:	cmp	w8, #0x23
    a948:	b.ne	a9f8 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0xe0>  // b.any
    a94c:	mov	x0, x19
    a950:	ldp	x20, x19, [sp, #208]
    a954:	ldp	x22, x21, [sp, #192]
    a958:	ldp	x24, x23, [sp, #176]
    a95c:	ldp	x29, x30, [sp, #160]
    a960:	add	sp, sp, #0xe0
    a964:	b	ac64 <_ZN4llvm8TGParser11ParseDefvarEv>
    a968:	ldp	x8, x9, [x19, #8]
    a96c:	mov	x0, x19
    a970:	cmp	x8, x9
    a974:	cset	w1, eq  // eq = none
    a978:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a97c:	cmp	w0, #0x48
    a980:	str	w0, [x19, #40]
    a984:	b.ne	aa38 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x120>  // b.any
    a988:	mov	x0, x19
    a98c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    a990:	ldr	w8, [x19, #40]
    a994:	and	w8, w8, #0xfffffffc
    a998:	cmp	w8, #0x48
    a99c:	b.ne	ac44 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x32c>  // b.any
    a9a0:	mov	x21, x0
    a9a4:	ldp	x0, x1, [x19, #48]
    a9a8:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    a9ac:	ldp	x8, x9, [x19, #8]
    a9b0:	mov	x22, x0
    a9b4:	mov	x0, x19
    a9b8:	cmp	x8, x9
    a9bc:	cset	w1, eq  // eq = none
    a9c0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a9c4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a9c8:	ldr	d0, [x8]
    a9cc:	add	x8, sp, #0x48
    a9d0:	str	w0, [x19, #40]
    a9d4:	add	x24, x8, #0x10
    a9d8:	add	x1, sp, #0x48
    a9dc:	mov	x0, x19
    a9e0:	str	x24, [sp, #72]
    a9e4:	str	d0, [sp, #80]
    a9e8:	bl	4d9c <_ZN4llvm8TGParser20ParseOptionalBitListERNS_15SmallVectorImplIjEE>
    a9ec:	tbz	w0, #0, aa84 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x16c>
    a9f0:	mov	w20, #0x1                   	// #1
    a9f4:	b	ac0c <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x2f4>
    a9f8:	mov	x0, x19
    a9fc:	mov	x1, x20
    aa00:	mov	w2, wzr
    aa04:	bl	9cc8 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb>
    aa08:	cbz	x0, aa44 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x12c>
    aa0c:	ldr	w8, [x19, #40]
    aa10:	cmp	w8, #0xd
    aa14:	b.ne	aa4c <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x134>  // b.any
    aa18:	ldp	x8, x9, [x19, #8]
    aa1c:	mov	x0, x19
    aa20:	cmp	x8, x9
    aa24:	cset	w1, eq  // eq = none
    aa28:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    aa2c:	mov	w20, wzr
    aa30:	str	w0, [x19, #40]
    aa34:	b	ac1c <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x304>
    aa38:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    aa3c:	add	x8, x8, #0x0
    aa40:	b	aa54 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x13c>
    aa44:	mov	w20, #0x1                   	// #1
    aa48:	b	ac1c <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x304>
    aa4c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    aa50:	add	x8, x8, #0x0
    aa54:	mov	w9, #0x103                 	// #259
    aa58:	mov	x0, x19
    aa5c:	stp	x8, xzr, [sp, #72]
    aa60:	strh	w9, [sp, #88]
    aa64:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    aa68:	str	x0, [sp, #48]
    aa6c:	add	x0, sp, #0x30
    aa70:	add	x2, sp, #0x48
    aa74:	mov	w1, #0x1                   	// #1
    aa78:	mov	w20, #0x1                   	// #1
    aa7c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    aa80:	b	ac1c <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x304>
    aa84:	ldr	w8, [sp, #80]
    aa88:	cbz	w8, aac0 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x1a8>
    aa8c:	ldr	x9, [sp, #72]
    aa90:	add	x8, x9, x8, lsl #2
    aa94:	sub	x8, x8, #0x4
    aa98:	cmp	x8, x9
    aa9c:	b.ls	aac0 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x1a8>  // b.plast
    aaa0:	add	x9, x9, #0x4
    aaa4:	ldr	w10, [x8]
    aaa8:	ldur	w11, [x9, #-4]
    aaac:	stur	w10, [x9, #-4]
    aab0:	str	w11, [x8], #-4
    aab4:	cmp	x9, x8
    aab8:	add	x9, x9, #0x4
    aabc:	b.cc	aaa4 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x18c>  // b.lo, b.ul, b.last
    aac0:	ldr	w8, [x19, #40]
    aac4:	cmp	w8, #0x10
    aac8:	b.ne	ab18 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x200>  // b.any
    aacc:	ldp	x8, x9, [x19, #8]
    aad0:	mov	x0, x19
    aad4:	cmp	x8, x9
    aad8:	cset	w1, eq  // eq = none
    aadc:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    aae0:	str	w0, [x19, #40]
    aae4:	ldr	w9, [x20, #80]
    aae8:	cbz	w9, abb4 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x29c>
    aaec:	ldr	x8, [x20, #72]
    aaf0:	add	x9, x9, x9, lsl #1
    aaf4:	lsl	x9, x9, #3
    aaf8:	mov	x10, x8
    aafc:	ldr	x11, [x10], #24
    ab00:	cmp	x11, x22
    ab04:	b.eq	ab40 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x228>  // b.none
    ab08:	subs	x9, x9, #0x18
    ab0c:	mov	x8, x10
    ab10:	b.ne	aafc <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x1e4>  // b.any
    ab14:	b	abb4 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x29c>
    ab18:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ab1c:	add	x8, x8, #0x0
    ab20:	mov	w9, #0x103                 	// #259
    ab24:	mov	x0, x19
    ab28:	stp	x8, xzr, [sp, #48]
    ab2c:	strh	w9, [sp, #64]
    ab30:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    ab34:	str	x0, [sp, #24]
    ab38:	add	x0, sp, #0x18
    ab3c:	b	abfc <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x2e4>
    ab40:	cbz	x8, abb4 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x29c>
    ab44:	ldr	x8, [x8, #8]
    ab48:	mov	x0, x19
    ab4c:	mov	x1, x20
    ab50:	mov	w3, wzr
    ab54:	and	x2, x8, #0xfffffffffffffff8
    ab58:	bl	34f4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    ab5c:	cbz	x0, a9f0 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0xd8>
    ab60:	ldr	w8, [x19, #40]
    ab64:	cmp	w8, #0xd
    ab68:	b.ne	ac38 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x320>  // b.any
    ab6c:	ldp	x8, x9, [x19, #8]
    ab70:	mov	x23, x0
    ab74:	mov	x0, x19
    ab78:	cmp	x8, x9
    ab7c:	cset	w1, eq  // eq = none
    ab80:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    ab84:	str	w0, [x19, #40]
    ab88:	ldr	x4, [sp, #72]
    ab8c:	ldr	w5, [sp, #80]
    ab90:	mov	x0, x19
    ab94:	mov	x1, x20
    ab98:	mov	x2, x21
    ab9c:	mov	x3, x22
    aba0:	mov	x6, x23
    aba4:	mov	w7, wzr
    aba8:	bl	6bc <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b>
    abac:	mov	w20, w0
    abb0:	b	ac0c <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x2f4>
    abb4:	ldur	q0, [x22, #24]
    abb8:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    abbc:	adrp	x12, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    abc0:	mov	w8, #0x503                 	// #1283
    abc4:	add	x9, x9, #0x0
    abc8:	mov	x10, sp
    abcc:	add	x11, sp, #0x18
    abd0:	add	x12, x12, #0x0
    abd4:	mov	w13, #0x302                 	// #770
    abd8:	mov	x0, x19
    abdc:	strh	w8, [sp, #40]
    abe0:	stp	x9, x10, [sp, #24]
    abe4:	stp	x11, x12, [sp, #48]
    abe8:	str	q0, [sp]
    abec:	strh	w13, [sp, #64]
    abf0:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    abf4:	stur	x0, [x29, #-8]
    abf8:	sub	x0, x29, #0x8
    abfc:	add	x2, sp, #0x30
    ac00:	mov	w1, #0x1                   	// #1
    ac04:	mov	w20, #0x1                   	// #1
    ac08:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    ac0c:	ldr	x0, [sp, #72]
    ac10:	cmp	x0, x24
    ac14:	b.eq	ac1c <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x304>  // b.none
    ac18:	bl	0 <free>
    ac1c:	and	w0, w20, #0x1
    ac20:	ldp	x20, x19, [sp, #208]
    ac24:	ldp	x22, x21, [sp, #192]
    ac28:	ldp	x24, x23, [sp, #176]
    ac2c:	ldp	x29, x30, [sp, #160]
    ac30:	add	sp, sp, #0xe0
    ac34:	ret
    ac38:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ac3c:	add	x8, x8, #0x0
    ac40:	b	ab20 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x208>
    ac44:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ac48:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ac4c:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ac50:	add	x0, x0, #0x0
    ac54:	add	x1, x1, #0x0
    ac58:	add	x3, x3, #0x0
    ac5c:	mov	w2, #0x71                  	// #113
    ac60:	bl	0 <__assert_fail>

000000000000ac64 <_ZN4llvm8TGParser11ParseDefvarEv>:
    ac64:	sub	sp, sp, #0x60
    ac68:	stp	x29, x30, [sp, #32]
    ac6c:	str	x23, [sp, #48]
    ac70:	stp	x22, x21, [sp, #64]
    ac74:	stp	x20, x19, [sp, #80]
    ac78:	add	x29, sp, #0x20
    ac7c:	ldr	w8, [x0, #40]
    ac80:	cmp	w8, #0x23
    ac84:	b.ne	ae60 <_ZN4llvm8TGParser11ParseDefvarEv+0x1fc>  // b.any
    ac88:	ldp	x8, x9, [x0, #8]
    ac8c:	mov	x19, x0
    ac90:	cmp	x8, x9
    ac94:	cset	w1, eq  // eq = none
    ac98:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    ac9c:	cmp	w0, #0x48
    aca0:	str	w0, [x19, #40]
    aca4:	b.ne	acd8 <_ZN4llvm8TGParser11ParseDefvarEv+0x74>  // b.any
    aca8:	ldp	x0, x1, [x19, #48]
    acac:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    acb0:	ldr	x8, [x19, #336]
    acb4:	mov	x20, x0
    acb8:	cbz	x8, ad28 <_ZN4llvm8TGParser11ParseDefvarEv+0xc4>
    acbc:	ldp	x1, x2, [x20, #24]
    acc0:	mov	x0, x8
    acc4:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    acc8:	tbz	w0, #0, ad44 <_ZN4llvm8TGParser11ParseDefvarEv+0xe0>
    accc:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    acd0:	add	x8, x8, #0x0
    acd4:	b	ace0 <_ZN4llvm8TGParser11ParseDefvarEv+0x7c>
    acd8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    acdc:	add	x8, x8, #0x0
    ace0:	mov	w9, #0x103                 	// #259
    ace4:	mov	x0, x19
    ace8:	stp	x8, xzr, [sp, #8]
    acec:	strh	w9, [sp, #24]
    acf0:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    acf4:	str	x0, [x29, #24]
    acf8:	add	x0, x29, #0x18
    acfc:	add	x2, sp, #0x8
    ad00:	mov	w1, #0x1                   	// #1
    ad04:	mov	w19, #0x1                   	// #1
    ad08:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    ad0c:	mov	w0, w19
    ad10:	ldp	x20, x19, [sp, #80]
    ad14:	ldp	x22, x21, [sp, #64]
    ad18:	ldr	x23, [sp, #48]
    ad1c:	ldp	x29, x30, [sp, #32]
    ad20:	add	sp, sp, #0x60
    ad24:	ret
    ad28:	ldr	x0, [x19, #344]
    ad2c:	ldp	x1, x2, [x20, #24]
    ad30:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ad34:	cbz	x0, ad44 <_ZN4llvm8TGParser11ParseDefvarEv+0xe0>
    ad38:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ad3c:	add	x8, x8, #0x0
    ad40:	b	ace0 <_ZN4llvm8TGParser11ParseDefvarEv+0x7c>
    ad44:	ldp	x8, x9, [x19, #8]
    ad48:	mov	x0, x19
    ad4c:	cmp	x8, x9
    ad50:	cset	w1, eq  // eq = none
    ad54:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    ad58:	cmp	w0, #0x10
    ad5c:	str	w0, [x19, #40]
    ad60:	b.ne	ae00 <_ZN4llvm8TGParser11ParseDefvarEv+0x19c>  // b.any
    ad64:	ldp	x8, x9, [x19, #8]
    ad68:	mov	x0, x19
    ad6c:	cmp	x8, x9
    ad70:	cset	w1, eq  // eq = none
    ad74:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    ad78:	str	w0, [x19, #40]
    ad7c:	mov	x0, x19
    ad80:	mov	x1, xzr
    ad84:	mov	x2, xzr
    ad88:	mov	w3, wzr
    ad8c:	bl	34f4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    ad90:	cbz	x0, ae0c <_ZN4llvm8TGParser11ParseDefvarEv+0x1a8>
    ad94:	ldr	w8, [x19, #40]
    ad98:	cmp	w8, #0xd
    ad9c:	b.ne	ae14 <_ZN4llvm8TGParser11ParseDefvarEv+0x1b0>  // b.any
    ada0:	ldp	x8, x9, [x19, #8]
    ada4:	mov	x21, x0
    ada8:	mov	x0, x19
    adac:	cmp	x8, x9
    adb0:	cset	w1, eq  // eq = none
    adb4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    adb8:	ldr	x8, [x19, #336]
    adbc:	str	w0, [x19, #40]
    adc0:	cbz	x8, ae20 <_ZN4llvm8TGParser11ParseDefvarEv+0x1bc>
    adc4:	ldp	x9, x10, [x20, #24]
    adc8:	add	x1, sp, #0x8
    adcc:	mov	x0, x8
    add0:	str	x21, [sp, #24]
    add4:	stp	x9, x10, [sp, #8]
    add8:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    addc:	tbnz	w1, #0, ae58 <_ZN4llvm8TGParser11ParseDefvarEv+0x1f4>
    ade0:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ade4:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ade8:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    adec:	add	x0, x0, #0x0
    adf0:	add	x1, x1, #0x0
    adf4:	add	x3, x3, #0x0
    adf8:	mov	w2, #0x75                  	// #117
    adfc:	bl	0 <__assert_fail>
    ae00:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ae04:	add	x8, x8, #0x0
    ae08:	b	ace0 <_ZN4llvm8TGParser11ParseDefvarEv+0x7c>
    ae0c:	mov	w19, #0x1                   	// #1
    ae10:	b	ad0c <_ZN4llvm8TGParser11ParseDefvarEv+0xa8>
    ae14:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ae18:	add	x8, x8, #0x0
    ae1c:	b	ace0 <_ZN4llvm8TGParser11ParseDefvarEv+0x7c>
    ae20:	ldr	x23, [x19, #344]
    ae24:	ldp	x22, x20, [x20, #24]
    ae28:	add	x1, sp, #0x8
    ae2c:	add	x0, x23, #0x78
    ae30:	stp	x20, x21, [sp, #16]
    ae34:	str	x22, [sp, #8]
    ae38:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ae3c:	mov	x19, x1
    ae40:	mov	x0, x23
    ae44:	mov	x1, x22
    ae48:	mov	x2, x20
    ae4c:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ae50:	cbnz	x0, ae80 <_ZN4llvm8TGParser11ParseDefvarEv+0x21c>
    ae54:	tbz	w19, #0, aea0 <_ZN4llvm8TGParser11ParseDefvarEv+0x23c>
    ae58:	mov	w19, wzr
    ae5c:	b	ad0c <_ZN4llvm8TGParser11ParseDefvarEv+0xa8>
    ae60:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ae64:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ae68:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ae6c:	add	x0, x0, #0x0
    ae70:	add	x1, x1, #0x0
    ae74:	add	x3, x3, #0x0
    ae78:	mov	w2, #0xb09                 	// #2825
    ae7c:	bl	0 <__assert_fail>
    ae80:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ae84:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ae88:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ae8c:	add	x0, x0, #0x0
    ae90:	add	x1, x1, #0x0
    ae94:	add	x3, x3, #0x0
    ae98:	mov	w2, #0x6cd                 	// #1741
    ae9c:	bl	0 <__assert_fail>
    aea0:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    aea4:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    aea8:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    aeac:	add	x0, x0, #0x0
    aeb0:	add	x1, x1, #0x0
    aeb4:	add	x3, x3, #0x0
    aeb8:	mov	w2, #0x6ce                 	// #1742
    aebc:	bl	0 <__assert_fail>

000000000000aec0 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE>:
    aec0:	sub	sp, sp, #0x50
    aec4:	stp	x29, x30, [sp, #32]
    aec8:	str	x21, [sp, #48]
    aecc:	stp	x20, x19, [sp, #64]
    aed0:	add	x29, sp, #0x20
    aed4:	ldr	w8, [x0, #40]
    aed8:	mov	x19, x0
    aedc:	cmp	w8, #0x6
    aee0:	b.eq	af24 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x64>  // b.none
    aee4:	cmp	w8, #0xd
    aee8:	b.eq	afb8 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0xf8>  // b.none
    aeec:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    aef0:	add	x8, x8, #0x0
    aef4:	mov	w9, #0x103                 	// #259
    aef8:	mov	x0, x19
    aefc:	stp	x8, xzr, [sp, #8]
    af00:	strh	w9, [sp, #24]
    af04:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    af08:	str	x0, [x29, #24]
    af0c:	add	x0, x29, #0x18
    af10:	add	x2, sp, #0x8
    af14:	mov	w1, #0x1                   	// #1
    af18:	mov	w20, #0x1                   	// #1
    af1c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    af20:	b	afd4 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x114>
    af24:	ldp	x8, x9, [x19, #8]
    af28:	mov	x20, x1
    af2c:	mov	x0, x19
    af30:	cmp	x8, x9
    af34:	cset	w1, eq  // eq = none
    af38:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    af3c:	str	w0, [x19, #40]
    af40:	mov	x0, x19
    af44:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    af48:	mov	x21, x0
    af4c:	ldr	w8, [x19, #40]
    af50:	cmp	w8, #0x7
    af54:	b.eq	af70 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0xb0>  // b.none
    af58:	mov	x0, x19
    af5c:	mov	x1, x20
    af60:	bl	a918 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE>
    af64:	tbz	w0, #0, af4c <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x8c>
    af68:	mov	w20, #0x1                   	// #1
    af6c:	b	afd4 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x114>
    af70:	ldr	x8, [x19, #336]
    af74:	cmp	x8, x21
    af78:	b.ne	afec <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x12c>  // b.any
    af7c:	ldr	x8, [x21, #48]
    af80:	str	xzr, [x21, #48]
    af84:	str	xzr, [sp, #8]
    af88:	ldr	x20, [x19, #336]
    af8c:	str	x8, [x19, #336]
    af90:	cbz	x20, afb0 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0xf0>
    af94:	add	x0, x20, #0x30
    af98:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    af9c:	ldr	x1, [x20, #16]
    afa0:	mov	x0, x20
    afa4:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    afa8:	mov	x0, x20
    afac:	bl	0 <_ZdlPv>
    afb0:	add	x0, sp, #0x8
    afb4:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    afb8:	ldp	x8, x9, [x19, #8]
    afbc:	mov	x0, x19
    afc0:	cmp	x8, x9
    afc4:	cset	w1, eq  // eq = none
    afc8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    afcc:	mov	w20, wzr
    afd0:	str	w0, [x19, #40]
    afd4:	mov	w0, w20
    afd8:	ldp	x20, x19, [sp, #64]
    afdc:	ldr	x21, [sp, #48]
    afe0:	ldp	x29, x30, [sp, #32]
    afe4:	add	sp, sp, #0x50
    afe8:	ret
    afec:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    aff0:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    aff4:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    aff8:	add	x0, x0, #0x0
    affc:	add	x1, x1, #0x0
    b000:	add	x3, x3, #0x0
    b004:	mov	w2, #0xc1                  	// #193
    b008:	bl	0 <__assert_fail>

000000000000b00c <_ZN4llvm8TGParser13ApplyLetStackEPNS_6RecordE>:
    b00c:	stp	x29, x30, [sp, #-64]!
    b010:	stp	x24, x23, [sp, #16]
    b014:	stp	x22, x21, [sp, #32]
    b018:	stp	x20, x19, [sp, #48]
    b01c:	mov	x29, sp
    b020:	ldp	x21, x22, [x0, #200]
    b024:	cmp	x21, x22
    b028:	b.eq	b09c <_ZN4llvm8TGParser13ApplyLetStackEPNS_6RecordE+0x90>  // b.none
    b02c:	mov	x19, x0
    b030:	mov	x20, x1
    b034:	b	b044 <_ZN4llvm8TGParser13ApplyLetStackEPNS_6RecordE+0x38>
    b038:	add	x21, x21, #0xd0
    b03c:	cmp	x21, x22
    b040:	b.eq	b09c <_ZN4llvm8TGParser13ApplyLetStackEPNS_6RecordE+0x90>  // b.none
    b044:	ldr	w8, [x21, #8]
    b048:	cbz	w8, b038 <_ZN4llvm8TGParser13ApplyLetStackEPNS_6RecordE+0x2c>
    b04c:	ldr	x9, [x21]
    b050:	add	x8, x8, x8, lsl #1
    b054:	lsl	x23, x8, #4
    b058:	add	x24, x9, #0x20
    b05c:	ldp	x3, x4, [x24, #-32]
    b060:	ldur	x8, [x24, #-16]
    b064:	ldp	x6, x2, [x24]
    b068:	mov	x0, x19
    b06c:	mov	x1, x20
    b070:	sub	x8, x8, x4
    b074:	asr	x5, x8, #2
    b078:	mov	w7, wzr
    b07c:	bl	6bc <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b>
    b080:	tbnz	w0, #0, b094 <_ZN4llvm8TGParser13ApplyLetStackEPNS_6RecordE+0x88>
    b084:	subs	x23, x23, #0x30
    b088:	add	x24, x24, #0x30
    b08c:	b.ne	b05c <_ZN4llvm8TGParser13ApplyLetStackEPNS_6RecordE+0x50>  // b.any
    b090:	b	b038 <_ZN4llvm8TGParser13ApplyLetStackEPNS_6RecordE+0x2c>
    b094:	mov	w0, #0x1                   	// #1
    b098:	b	b0a0 <_ZN4llvm8TGParser13ApplyLetStackEPNS_6RecordE+0x94>
    b09c:	mov	w0, wzr
    b0a0:	ldp	x20, x19, [sp, #48]
    b0a4:	ldp	x22, x21, [sp, #32]
    b0a8:	ldp	x24, x23, [sp, #16]
    b0ac:	ldp	x29, x30, [sp], #64
    b0b0:	ret

000000000000b0b4 <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE>:
    b0b4:	stp	x29, x30, [sp, #-64]!
    b0b8:	stp	x24, x23, [sp, #16]
    b0bc:	stp	x22, x21, [sp, #32]
    b0c0:	stp	x20, x19, [sp, #48]
    b0c4:	mov	x29, sp
    b0c8:	ldr	x20, [x1]
    b0cc:	mov	x19, x0
    b0d0:	cbz	x20, b138 <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE+0x84>
    b0d4:	ldp	x21, x22, [x19, #200]
    b0d8:	b	b0e0 <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE+0x2c>
    b0dc:	add	x21, x21, #0xd0
    b0e0:	cmp	x21, x22
    b0e4:	b.eq	b164 <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE+0xb0>  // b.none
    b0e8:	ldr	w8, [x21, #8]
    b0ec:	cbz	w8, b0dc <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE+0x28>
    b0f0:	ldr	x9, [x21]
    b0f4:	add	x8, x8, x8, lsl #1
    b0f8:	lsl	x23, x8, #4
    b0fc:	add	x24, x9, #0x20
    b100:	ldp	x3, x4, [x24, #-32]
    b104:	ldur	x8, [x24, #-16]
    b108:	ldp	x6, x2, [x24]
    b10c:	mov	x0, x19
    b110:	mov	x1, x20
    b114:	sub	x8, x8, x4
    b118:	asr	x5, x8, #2
    b11c:	mov	w7, wzr
    b120:	bl	6bc <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b>
    b124:	tbnz	w0, #0, b16c <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE+0xb8>
    b128:	subs	x23, x23, #0x30
    b12c:	add	x24, x24, #0x30
    b130:	b.ne	b100 <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE+0x4c>  // b.any
    b134:	b	b0dc <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE+0x28>
    b138:	ldr	x8, [x1, #8]
    b13c:	ldp	x20, x21, [x8, #24]
    b140:	cmp	x20, x21
    b144:	b.eq	b164 <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE+0xb0>  // b.none
    b148:	mov	x0, x19
    b14c:	mov	x1, x20
    b150:	bl	b0b4 <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE>
    b154:	tbnz	w0, #0, b16c <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE+0xb8>
    b158:	add	x20, x20, #0x10
    b15c:	cmp	x21, x20
    b160:	b.ne	b148 <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE+0x94>  // b.any
    b164:	mov	w0, wzr
    b168:	b	b170 <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE+0xbc>
    b16c:	mov	w0, #0x1                   	// #1
    b170:	ldp	x20, x19, [sp, #48]
    b174:	ldp	x22, x21, [sp, #32]
    b178:	ldp	x24, x23, [sp, #16]
    b17c:	ldp	x29, x30, [sp], #64
    b180:	ret

000000000000b184 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE>:
    b184:	sub	sp, sp, #0xe0
    b188:	stp	x29, x30, [sp, #160]
    b18c:	stp	x24, x23, [sp, #176]
    b190:	stp	x22, x21, [sp, #192]
    b194:	stp	x20, x19, [sp, #208]
    b198:	add	x29, sp, #0xa0
    b19c:	ldr	w8, [x0, #40]
    b1a0:	mov	x19, x0
    b1a4:	mov	x20, x1
    b1a8:	cmp	w8, #0xc
    b1ac:	b.ne	b2cc <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x148>  // b.any
    b1b0:	ldp	x8, x9, [x19, #8]
    b1b4:	mov	x0, x19
    b1b8:	cmp	x8, x9
    b1bc:	cset	w1, eq  // eq = none
    b1c0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b1c4:	str	w0, [x19, #40]
    b1c8:	add	x8, sp, #0x50
    b1cc:	mov	x0, x19
    b1d0:	mov	x1, x20
    b1d4:	mov	w2, wzr
    b1d8:	add	x23, sp, #0x50
    b1dc:	bl	4408 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb>
    b1e0:	ldr	x8, [sp, #96]
    b1e4:	cbz	x8, b280 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0xfc>
    b1e8:	add	x8, sp, #0x8
    b1ec:	add	x21, x23, #0x18
    b1f0:	add	x22, x8, #0x18
    b1f4:	add	x24, x8, #0x28
    b1f8:	b	b204 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x80>
    b1fc:	ldr	x8, [sp, #96]
    b200:	cbz	x8, b280 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0xfc>
    b204:	add	x2, sp, #0x50
    b208:	mov	x0, x19
    b20c:	mov	x1, x20
    b210:	bl	14a0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE>
    b214:	tbnz	w0, #0, b294 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x110>
    b218:	ldr	w8, [x19, #40]
    b21c:	cmp	w8, #0xe
    b220:	b.ne	b2b4 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x130>  // b.any
    b224:	ldp	x8, x9, [x19, #8]
    b228:	mov	x0, x19
    b22c:	cmp	x8, x9
    b230:	cset	w1, eq  // eq = none
    b234:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b238:	str	w0, [x19, #40]
    b23c:	add	x8, sp, #0x8
    b240:	mov	x0, x19
    b244:	mov	x1, x20
    b248:	mov	w2, wzr
    b24c:	bl	4408 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb>
    b250:	ldur	q0, [sp, #8]
    b254:	ldr	x8, [sp, #24]
    b258:	mov	x0, x21
    b25c:	mov	x1, x22
    b260:	str	q0, [sp, #80]
    b264:	str	x8, [sp, #96]
    b268:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b26c:	ldr	x0, [sp, #32]
    b270:	cmp	x0, x24
    b274:	b.eq	b1fc <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x78>  // b.none
    b278:	bl	0 <free>
    b27c:	b	b1fc <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x78>
    b280:	ldr	x0, [sp, #104]
    b284:	add	x8, x23, #0x28
    b288:	cmp	x0, x8
    b28c:	b.ne	b2a8 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x124>  // b.any
    b290:	b	b2ac <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x128>
    b294:	ldr	x0, [sp, #104]
    b298:	add	x8, sp, #0x50
    b29c:	add	x8, x8, #0x28
    b2a0:	cmp	x0, x8
    b2a4:	b.eq	b2ac <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x128>  // b.none
    b2a8:	bl	0 <free>
    b2ac:	mov	w0, #0x1                   	// #1
    b2b0:	b	b33c <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x1b8>
    b2b4:	ldr	x0, [sp, #104]
    b2b8:	add	x8, sp, #0x50
    b2bc:	add	x8, x8, #0x28
    b2c0:	cmp	x0, x8
    b2c4:	b.eq	b2cc <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x148>  // b.none
    b2c8:	bl	0 <free>
    b2cc:	ldp	x21, x22, [x19, #200]
    b2d0:	b	b2d8 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x154>
    b2d4:	add	x21, x21, #0xd0
    b2d8:	cmp	x21, x22
    b2dc:	b.eq	b330 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x1ac>  // b.none
    b2e0:	ldr	w8, [x21, #8]
    b2e4:	cbz	w8, b2d4 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x150>
    b2e8:	ldr	x9, [x21]
    b2ec:	add	x8, x8, x8, lsl #1
    b2f0:	lsl	x23, x8, #4
    b2f4:	add	x24, x9, #0x20
    b2f8:	ldp	x3, x4, [x24, #-32]
    b2fc:	ldur	x8, [x24, #-16]
    b300:	ldp	x6, x2, [x24]
    b304:	mov	x0, x19
    b308:	mov	x1, x20
    b30c:	sub	x8, x8, x4
    b310:	asr	x5, x8, #2
    b314:	mov	w7, wzr
    b318:	bl	6bc <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b>
    b31c:	tbnz	w0, #0, b2ac <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x128>
    b320:	subs	x23, x23, #0x30
    b324:	add	x24, x24, #0x30
    b328:	b.ne	b2f8 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x174>  // b.any
    b32c:	b	b2d4 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x150>
    b330:	mov	x0, x19
    b334:	mov	x1, x20
    b338:	bl	aec0 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE>
    b33c:	ldp	x20, x19, [sp, #208]
    b340:	ldp	x22, x21, [sp, #192]
    b344:	ldp	x24, x23, [sp, #176]
    b348:	ldp	x29, x30, [sp, #160]
    b34c:	and	w0, w0, #0x1
    b350:	add	sp, sp, #0xe0
    b354:	ret

000000000000b358 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE>:
    b358:	sub	sp, sp, #0x50
    b35c:	stp	x29, x30, [sp, #32]
    b360:	stp	x22, x21, [sp, #48]
    b364:	stp	x20, x19, [sp, #64]
    b368:	add	x29, sp, #0x20
    b36c:	mov	x20, x1
    b370:	mov	x19, x0
    b374:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    b378:	stur	x0, [x29, #-8]
    b37c:	ldr	w8, [x19, #40]
    b380:	cmp	w8, #0x18
    b384:	b.ne	b4c4 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x16c>  // b.any
    b388:	ldp	x8, x9, [x19, #8]
    b38c:	mov	x0, x19
    b390:	cmp	x8, x9
    b394:	cset	w1, eq  // eq = none
    b398:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b39c:	str	w0, [x19, #40]
    b3a0:	mov	x0, x19
    b3a4:	mov	x1, x20
    b3a8:	bl	33f8 <_ZN4llvm8TGParser15ParseObjectNameEPNS_10MultiClassE>
    b3ac:	cbz	x0, b488 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x130>
    b3b0:	ldrb	w8, [x0, #8]
    b3b4:	ldr	x22, [x19, #344]
    b3b8:	mov	x21, x0
    b3bc:	cmp	w8, #0x18
    b3c0:	b.ne	b3f8 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0xa0>  // b.any
    b3c4:	mov	x0, x22
    b3c8:	bl	0 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv>
    b3cc:	ldr	x21, [x19, #344]
    b3d0:	mov	x22, x0
    b3d4:	mov	w0, #0x80                  	// #128
    b3d8:	bl	0 <_Znwm>
    b3dc:	mov	x20, x0
    b3e0:	sub	x2, x29, #0x8
    b3e4:	mov	w3, #0x1                   	// #1
    b3e8:	mov	w5, #0x1                   	// #1
    b3ec:	mov	x1, x22
    b3f0:	mov	x4, x21
    b3f4:	b	b418 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0xc0>
    b3f8:	mov	w0, #0x80                  	// #128
    b3fc:	bl	0 <_Znwm>
    b400:	mov	x20, x0
    b404:	sub	x2, x29, #0x8
    b408:	mov	w3, #0x1                   	// #1
    b40c:	mov	x1, x21
    b410:	mov	x4, x22
    b414:	mov	w5, wzr
    b418:	mov	w6, wzr
    b41c:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b420:	mov	x0, x19
    b424:	mov	x1, x20
    b428:	bl	b184 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE>
    b42c:	tbz	w0, #0, b490 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x138>
    b430:	mov	x19, x20
    b434:	ldr	x0, [x19, #88]!
    b438:	add	x8, x19, #0x10
    b43c:	cmp	x0, x8
    b440:	b.eq	b448 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0xf0>  // b.none
    b444:	bl	0 <free>
    b448:	mov	x21, x20
    b44c:	ldr	x0, [x21, #72]!
    b450:	cmp	x0, x19
    b454:	b.eq	b45c <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x104>  // b.none
    b458:	bl	0 <free>
    b45c:	ldr	x0, [x20, #56]
    b460:	cmp	x0, x21
    b464:	b.eq	b46c <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x114>  // b.none
    b468:	bl	0 <free>
    b46c:	ldr	x0, [x20, #8]
    b470:	add	x8, x20, #0x18
    b474:	cmp	x0, x8
    b478:	b.eq	b480 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x128>  // b.none
    b47c:	bl	0 <free>
    b480:	mov	x0, x20
    b484:	bl	0 <_ZdlPv>
    b488:	mov	w19, #0x1                   	// #1
    b48c:	b	b4ac <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x154>
    b490:	add	x1, sp, #0x8
    b494:	mov	x0, x19
    b498:	stp	x20, xzr, [sp, #8]
    b49c:	bl	25a4 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE>
    b4a0:	mov	w19, w0
    b4a4:	add	x0, sp, #0x8
    b4a8:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b4ac:	and	w0, w19, #0x1
    b4b0:	ldp	x20, x19, [sp, #64]
    b4b4:	ldp	x22, x21, [sp, #48]
    b4b8:	ldp	x29, x30, [sp, #32]
    b4bc:	add	sp, sp, #0x50
    b4c0:	ret
    b4c4:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b4c8:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b4cc:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b4d0:	add	x0, x0, #0x0
    b4d4:	add	x1, x1, #0x0
    b4d8:	add	x3, x3, #0x0
    b4dc:	mov	w2, #0xac0                 	// #2752
    b4e0:	bl	0 <__assert_fail>

000000000000b4e4 <_ZN4llvm8TGParser11ParseDefsetEv>:
    b4e4:	sub	sp, sp, #0x100
    b4e8:	stp	x29, x30, [sp, #192]
    b4ec:	stp	x24, x23, [sp, #208]
    b4f0:	stp	x22, x21, [sp, #224]
    b4f4:	stp	x20, x19, [sp, #240]
    b4f8:	add	x29, sp, #0xc0
    b4fc:	ldr	w8, [x0, #40]
    b500:	cmp	w8, #0x22
    b504:	b.ne	b818 <_ZN4llvm8TGParser11ParseDefsetEv+0x334>  // b.any
    b508:	ldp	x8, x9, [x0, #8]
    b50c:	mov	x19, x0
    b510:	cmp	x8, x9
    b514:	cset	w1, eq  // eq = none
    b518:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b51c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b520:	ldr	d0, [x8]
    b524:	mov	x23, sp
    b528:	str	w0, [x19, #40]
    b52c:	add	x9, x23, #0x20
    b530:	mov	x0, x19
    b534:	stp	xzr, xzr, [sp]
    b538:	str	x9, [sp, #16]
    b53c:	str	d0, [sp, #24]
    b540:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    b544:	str	x0, [sp]
    b548:	mov	x0, x19
    b54c:	bl	4ebc <_ZN4llvm8TGParser9ParseTypeEv>
    b550:	cbz	x0, b6e4 <_ZN4llvm8TGParser11ParseDefsetEv+0x200>
    b554:	ldr	w8, [x0, #8]
    b558:	cmp	w8, #0x5
    b55c:	b.ne	b59c <_ZN4llvm8TGParser11ParseDefsetEv+0xb8>  // b.any
    b560:	ldr	x8, [x0, #24]
    b564:	str	x8, [sp, #8]
    b568:	ldr	w8, [x19, #40]
    b56c:	cmp	w8, #0x48
    b570:	b.ne	b5bc <_ZN4llvm8TGParser11ParseDefsetEv+0xd8>  // b.any
    b574:	ldp	x0, x1, [x19, #48]
    b578:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    b57c:	mov	x20, x0
    b580:	ldr	x0, [x19, #344]
    b584:	ldp	x1, x2, [x20, #24]
    b588:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b58c:	cbz	x0, b5f4 <_ZN4llvm8TGParser11ParseDefsetEv+0x110>
    b590:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b594:	add	x8, x8, #0x0
    b598:	b	b5c4 <_ZN4llvm8TGParser11ParseDefsetEv+0xe0>
    b59c:	ldr	x8, [sp]
    b5a0:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b5a4:	add	x9, x9, #0x0
    b5a8:	stp	x9, xzr, [x29, #-32]
    b5ac:	mov	w9, #0x103                 	// #259
    b5b0:	sturh	w9, [x29, #-16]
    b5b4:	stur	x8, [x29, #-8]
    b5b8:	b	b5dc <_ZN4llvm8TGParser11ParseDefsetEv+0xf8>
    b5bc:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b5c0:	add	x8, x8, #0x0
    b5c4:	mov	w9, #0x103                 	// #259
    b5c8:	mov	x0, x19
    b5cc:	stp	x8, xzr, [x29, #-32]
    b5d0:	sturh	w9, [x29, #-16]
    b5d4:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    b5d8:	stur	x0, [x29, #-8]
    b5dc:	sub	x0, x29, #0x8
    b5e0:	sub	x2, x29, #0x20
    b5e4:	mov	w1, #0x1                   	// #1
    b5e8:	mov	w19, #0x1                   	// #1
    b5ec:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    b5f0:	b	b6e8 <_ZN4llvm8TGParser11ParseDefsetEv+0x204>
    b5f4:	ldp	x8, x9, [x19, #8]
    b5f8:	mov	x0, x19
    b5fc:	cmp	x8, x9
    b600:	cset	w1, eq  // eq = none
    b604:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b608:	cmp	w0, #0x10
    b60c:	str	w0, [x19, #40]
    b610:	b.ne	b71c <_ZN4llvm8TGParser11ParseDefsetEv+0x238>  // b.any
    b614:	ldp	x8, x9, [x19, #8]
    b618:	mov	x0, x19
    b61c:	cmp	x8, x9
    b620:	cset	w1, eq  // eq = none
    b624:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b628:	cmp	w0, #0x6
    b62c:	str	w0, [x19, #40]
    b630:	b.ne	b728 <_ZN4llvm8TGParser11ParseDefsetEv+0x244>  // b.any
    b634:	mov	x0, x19
    b638:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    b63c:	ldp	x8, x9, [x19, #8]
    b640:	mov	x21, x0
    b644:	mov	x0, x19
    b648:	cmp	x8, x9
    b64c:	cset	w1, eq  // eq = none
    b650:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b654:	ldr	w8, [x19, #304]
    b658:	ldr	w9, [x19, #308]
    b65c:	str	w0, [x19, #40]
    b660:	cmp	w8, w9
    b664:	b.cs	b7fc <_ZN4llvm8TGParser11ParseDefsetEv+0x318>  // b.hs, b.nlast
    b668:	ldr	x9, [x19, #296]
    b66c:	mov	x10, sp
    b670:	str	x10, [x9, w8, uxtw #3]
    b674:	ldr	w8, [x19, #304]
    b678:	ldr	w9, [x19, #308]
    b67c:	cmp	w8, w9
    b680:	b.cs	b838 <_ZN4llvm8TGParser11ParseDefsetEv+0x354>  // b.hs, b.nlast
    b684:	mov	x24, #0x47200000            	// #1193279488
    b688:	add	w8, w8, #0x1
    b68c:	mov	w22, #0x1                   	// #1
    b690:	movk	x24, #0x1d, lsl #32
    b694:	str	w8, [x19, #304]
    b698:	ldr	w9, [x19, #40]
    b69c:	mov	w8, wzr
    b6a0:	cmp	w9, #0x24
    b6a4:	b.hi	b6c8 <_ZN4llvm8TGParser11ParseDefsetEv+0x1e4>  // b.pmore
    b6a8:	lsl	x9, x22, x9
    b6ac:	tst	x9, x24
    b6b0:	b.eq	b6c8 <_ZN4llvm8TGParser11ParseDefsetEv+0x1e4>  // b.none
    b6b4:	mov	x0, x19
    b6b8:	mov	x1, xzr
    b6bc:	bl	bc10 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE>
    b6c0:	tbz	w0, #0, b698 <_ZN4llvm8TGParser11ParseDefsetEv+0x1b4>
    b6c4:	mov	w8, #0x1                   	// #1
    b6c8:	ldr	w9, [x19, #304]
    b6cc:	ldr	w10, [x19, #308]
    b6d0:	sub	x9, x9, #0x1
    b6d4:	cmp	x9, x10
    b6d8:	b.hi	b838 <_ZN4llvm8TGParser11ParseDefsetEv+0x354>  // b.pmore
    b6dc:	str	w9, [x19, #304]
    b6e0:	tbz	w8, #0, b734 <_ZN4llvm8TGParser11ParseDefsetEv+0x250>
    b6e4:	mov	w19, #0x1                   	// #1
    b6e8:	ldr	x0, [sp, #16]
    b6ec:	add	x8, x23, #0x10
    b6f0:	add	x8, x8, #0x10
    b6f4:	cmp	x0, x8
    b6f8:	b.eq	b700 <_ZN4llvm8TGParser11ParseDefsetEv+0x21c>  // b.none
    b6fc:	bl	0 <free>
    b700:	mov	w0, w19
    b704:	ldp	x20, x19, [sp, #240]
    b708:	ldp	x22, x21, [sp, #224]
    b70c:	ldp	x24, x23, [sp, #208]
    b710:	ldp	x29, x30, [sp, #192]
    b714:	add	sp, sp, #0x100
    b718:	ret
    b71c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b720:	add	x8, x8, #0x0
    b724:	b	b5c4 <_ZN4llvm8TGParser11ParseDefsetEv+0xe0>
    b728:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b72c:	add	x8, x8, #0x0
    b730:	b	b5c4 <_ZN4llvm8TGParser11ParseDefsetEv+0xe0>
    b734:	ldr	w8, [x19, #40]
    b738:	cmp	w8, #0x7
    b73c:	b.ne	b7a4 <_ZN4llvm8TGParser11ParseDefsetEv+0x2c0>  // b.any
    b740:	ldp	x8, x9, [x19, #8]
    b744:	mov	x0, x19
    b748:	cmp	x8, x9
    b74c:	cset	w1, eq  // eq = none
    b750:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b754:	str	w0, [x19, #40]
    b758:	ldr	w1, [sp, #24]
    b75c:	ldp	x2, x0, [sp, #8]
    b760:	ldr	x21, [x19, #344]
    b764:	ldp	x22, x20, [x20, #24]
    b768:	bl	0 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    b76c:	stur	x0, [x29, #-16]
    b770:	add	x0, x21, #0x78
    b774:	sub	x1, x29, #0x20
    b778:	stp	x22, x20, [x29, #-32]
    b77c:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b780:	mov	x19, x1
    b784:	mov	x0, x21
    b788:	mov	x1, x22
    b78c:	mov	x2, x20
    b790:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b794:	cbnz	x0, b858 <_ZN4llvm8TGParser11ParseDefsetEv+0x374>
    b798:	tbz	w19, #0, b878 <_ZN4llvm8TGParser11ParseDefsetEv+0x394>
    b79c:	mov	w19, wzr
    b7a0:	b	b6e8 <_ZN4llvm8TGParser11ParseDefsetEv+0x204>
    b7a4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b7a8:	add	x8, x8, #0x0
    b7ac:	mov	w20, #0x103                 	// #259
    b7b0:	mov	x0, x19
    b7b4:	stp	x8, xzr, [x29, #-32]
    b7b8:	sturh	w20, [x29, #-16]
    b7bc:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    b7c0:	stur	x0, [x29, #-8]
    b7c4:	sub	x0, x29, #0x8
    b7c8:	sub	x2, x29, #0x20
    b7cc:	mov	w1, #0x1                   	// #1
    b7d0:	mov	w19, #0x1                   	// #1
    b7d4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    b7d8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b7dc:	add	x8, x8, #0x0
    b7e0:	sub	x0, x29, #0x8
    b7e4:	sub	x2, x29, #0x20
    b7e8:	mov	w1, #0x1                   	// #1
    b7ec:	sturh	w20, [x29, #-16]
    b7f0:	stp	x8, xzr, [x29, #-32]
    b7f4:	stur	x21, [x29, #-8]
    b7f8:	b	b5ec <_ZN4llvm8TGParser11ParseDefsetEv+0x108>
    b7fc:	add	x0, x19, #0x128
    b800:	add	x1, x0, #0x10
    b804:	mov	w3, #0x8                   	// #8
    b808:	mov	x2, xzr
    b80c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b810:	ldr	w8, [x19, #304]
    b814:	b	b668 <_ZN4llvm8TGParser11ParseDefsetEv+0x184>
    b818:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b81c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b820:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b824:	add	x0, x0, #0x0
    b828:	add	x1, x1, #0x0
    b82c:	add	x3, x3, #0x0
    b830:	mov	w2, #0xada                 	// #2778
    b834:	bl	0 <__assert_fail>
    b838:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b83c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b840:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b844:	add	x0, x0, #0x0
    b848:	add	x1, x1, #0x0
    b84c:	add	x3, x3, #0x0
    b850:	mov	w2, #0x43                  	// #67
    b854:	bl	0 <__assert_fail>
    b858:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b85c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b860:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b864:	add	x0, x0, #0x0
    b868:	add	x1, x1, #0x0
    b86c:	add	x3, x3, #0x0
    b870:	mov	w2, #0x6cd                 	// #1741
    b874:	bl	0 <__assert_fail>
    b878:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b87c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b880:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b884:	add	x0, x0, #0x0
    b888:	add	x1, x1, #0x0
    b88c:	add	x3, x3, #0x0
    b890:	mov	w2, #0x6ce                 	// #1742
    b894:	bl	0 <__assert_fail>

000000000000b898 <_ZN4llvm8TGParser15ParseObjectListEPNS_10MultiClassE>:
    b898:	stp	x29, x30, [sp, #-48]!
    b89c:	stp	x22, x21, [sp, #16]
    b8a0:	stp	x20, x19, [sp, #32]
    b8a4:	mov	x29, sp
    b8a8:	mov	x22, #0x47200000            	// #1193279488
    b8ac:	mov	x19, x1
    b8b0:	mov	x20, x0
    b8b4:	mov	w21, #0x1                   	// #1
    b8b8:	movk	x22, #0x1d, lsl #32
    b8bc:	ldr	w8, [x20, #40]
    b8c0:	mov	w0, wzr
    b8c4:	cmp	w8, #0x24
    b8c8:	b.hi	b8ec <_ZN4llvm8TGParser15ParseObjectListEPNS_10MultiClassE+0x54>  // b.pmore
    b8cc:	lsl	x8, x21, x8
    b8d0:	tst	x8, x22
    b8d4:	b.eq	b8ec <_ZN4llvm8TGParser15ParseObjectListEPNS_10MultiClassE+0x54>  // b.none
    b8d8:	mov	x0, x20
    b8dc:	mov	x1, x19
    b8e0:	bl	bc10 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE>
    b8e4:	tbz	w0, #0, b8bc <_ZN4llvm8TGParser15ParseObjectListEPNS_10MultiClassE+0x24>
    b8e8:	mov	w0, #0x1                   	// #1
    b8ec:	ldp	x20, x19, [sp, #32]
    b8f0:	ldp	x22, x21, [sp, #16]
    b8f4:	ldp	x29, x30, [sp], #48
    b8f8:	ret

000000000000b8fc <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE>:
    b8fc:	sub	sp, sp, #0x80
    b900:	stp	x29, x30, [sp, #64]
    b904:	stp	x24, x23, [sp, #80]
    b908:	stp	x22, x21, [sp, #96]
    b90c:	stp	x20, x19, [sp, #112]
    b910:	add	x29, sp, #0x40
    b914:	mov	x20, x1
    b918:	mov	x19, x0
    b91c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    b920:	ldr	w8, [x19, #40]
    b924:	cmp	w8, #0x19
    b928:	b.ne	bbd0 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x2d4>  // b.any
    b92c:	ldp	x8, x9, [x19, #8]
    b930:	mov	x21, x0
    b934:	mov	x0, x19
    b938:	cmp	x8, x9
    b93c:	cset	w1, eq  // eq = none
    b940:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b944:	str	w0, [x19, #40]
    b948:	sub	x1, x29, #0x10
    b94c:	mov	x0, x19
    b950:	stur	xzr, [x29, #-16]
    b954:	bl	a0a0 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE>
    b958:	cbz	x0, b9bc <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0xc0>
    b95c:	ldr	w8, [x19, #40]
    b960:	cmp	w8, #0x1c
    b964:	b.ne	b9c8 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0xcc>  // b.any
    b968:	ldp	x8, x9, [x19, #8]
    b96c:	mov	x22, x0
    b970:	mov	x0, x19
    b974:	cmp	x8, x9
    b978:	cset	w1, eq  // eq = none
    b97c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b980:	str	w0, [x19, #40]
    b984:	mov	w0, #0x30                  	// #48
    b988:	bl	0 <_Znwm>
    b98c:	ldur	x8, [x29, #-16]
    b990:	stp	x21, x22, [x0]
    b994:	stp	xzr, xzr, [x0, #32]
    b998:	str	x0, [sp, #24]
    b99c:	stp	x8, xzr, [x0, #16]
    b9a0:	ldp	x1, x8, [x19, #280]
    b9a4:	cmp	x1, x8
    b9a8:	b.eq	ba18 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x11c>  // b.none
    b9ac:	str	xzr, [sp, #24]
    b9b0:	str	x0, [x1], #8
    b9b4:	str	x1, [x19, #280]
    b9b8:	b	ba24 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x128>
    b9bc:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b9c0:	add	x8, x8, #0x0
    b9c4:	b	b9d0 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0xd4>
    b9c8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b9cc:	add	x8, x8, #0x0
    b9d0:	mov	w9, #0x103                 	// #259
    b9d4:	mov	x0, x19
    b9d8:	stp	x8, xzr, [sp, #24]
    b9dc:	strh	w9, [sp, #40]
    b9e0:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    b9e4:	stur	x0, [x29, #-8]
    b9e8:	sub	x0, x29, #0x8
    b9ec:	add	x2, sp, #0x18
    b9f0:	mov	w1, #0x1                   	// #1
    b9f4:	mov	w19, #0x1                   	// #1
    b9f8:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    b9fc:	and	w0, w19, #0x1
    ba00:	ldp	x20, x19, [sp, #112]
    ba04:	ldp	x22, x21, [sp, #96]
    ba08:	ldp	x24, x23, [sp, #80]
    ba0c:	ldp	x29, x30, [sp, #64]
    ba10:	add	sp, sp, #0x80
    ba14:	ret
    ba18:	add	x0, x19, #0x110
    ba1c:	add	x2, sp, #0x18
    ba20:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ba24:	add	x0, sp, #0x18
    ba28:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ba2c:	mov	x0, x19
    ba30:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ba34:	ldr	w8, [x19, #40]
    ba38:	mov	x21, x0
    ba3c:	mov	x0, x19
    ba40:	cmp	w8, #0x6
    ba44:	b.ne	baac <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x1b0>  // b.any
    ba48:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    ba4c:	ldp	x8, x9, [x19, #8]
    ba50:	mov	x22, x0
    ba54:	mov	x0, x19
    ba58:	cmp	x8, x9
    ba5c:	cset	w1, eq  // eq = none
    ba60:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    ba64:	mov	x24, #0x47200000            	// #1193279488
    ba68:	str	w0, [x19, #40]
    ba6c:	mov	w23, #0x1                   	// #1
    ba70:	movk	x24, #0x1d, lsl #32
    ba74:	cmp	w0, #0x24
    ba78:	b.hi	bb78 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x27c>  // b.pmore
    ba7c:	mov	w8, w0
    ba80:	lsl	x9, x23, x8
    ba84:	tst	x9, x24
    ba88:	b.eq	bac0 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x1c4>  // b.none
    ba8c:	mov	x0, x19
    ba90:	mov	x1, x20
    ba94:	bl	bc10 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE>
    ba98:	tbnz	w0, #0, bab8 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x1bc>
    ba9c:	ldr	w0, [x19, #40]
    baa0:	cmp	w0, #0x24
    baa4:	b.ls	ba7c <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x180>  // b.plast
    baa8:	b	bb78 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x27c>
    baac:	mov	x1, x20
    bab0:	bl	bc10 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE>
    bab4:	tbz	w0, #0, bae0 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x1e4>
    bab8:	mov	w19, #0x1                   	// #1
    babc:	b	b9fc <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x100>
    bac0:	cmp	x8, #0x7
    bac4:	b.ne	bb78 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x27c>  // b.any
    bac8:	ldp	x8, x9, [x19, #8]
    bacc:	mov	x0, x19
    bad0:	cmp	x8, x9
    bad4:	cset	w1, eq  // eq = none
    bad8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    badc:	str	w0, [x19, #40]
    bae0:	ldr	x8, [x19, #336]
    bae4:	cmp	x8, x21
    bae8:	b.ne	bbf0 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x2f4>  // b.any
    baec:	ldr	x8, [x21, #48]
    baf0:	str	xzr, [x21, #48]
    baf4:	str	xzr, [sp, #24]
    baf8:	ldr	x20, [x19, #336]
    bafc:	str	x8, [x19, #336]
    bb00:	cbz	x20, bb20 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x224>
    bb04:	add	x0, x20, #0x30
    bb08:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bb0c:	ldr	x1, [x20, #16]
    bb10:	mov	x0, x20
    bb14:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bb18:	mov	x0, x20
    bb1c:	bl	0 <_ZdlPv>
    bb20:	add	x0, sp, #0x18
    bb24:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bb28:	ldr	x8, [x19, #280]
    bb2c:	ldur	x20, [x8, #-8]
    bb30:	stur	xzr, [x8, #-8]
    bb34:	ldr	x8, [x19, #280]
    bb38:	sub	x0, x8, #0x8
    bb3c:	str	x0, [x19, #280]
    bb40:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bb44:	add	x1, sp, #0x8
    bb48:	mov	x0, x19
    bb4c:	stp	x20, xzr, [sp, #16]
    bb50:	stp	xzr, xzr, [sp]
    bb54:	bl	25a4 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE>
    bb58:	mov	w19, w0
    bb5c:	add	x0, sp, #0x8
    bb60:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bb64:	mov	x0, sp
    bb68:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bb6c:	add	x0, sp, #0x18
    bb70:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bb74:	b	b9fc <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x100>
    bb78:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bb7c:	add	x8, x8, #0x0
    bb80:	mov	w20, #0x103                 	// #259
    bb84:	mov	x0, x19
    bb88:	stp	x8, xzr, [sp, #24]
    bb8c:	strh	w20, [sp, #40]
    bb90:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    bb94:	stur	x0, [x29, #-8]
    bb98:	sub	x0, x29, #0x8
    bb9c:	add	x2, sp, #0x18
    bba0:	mov	w1, #0x1                   	// #1
    bba4:	mov	w19, #0x1                   	// #1
    bba8:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    bbac:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bbb0:	add	x8, x8, #0x0
    bbb4:	sub	x0, x29, #0x8
    bbb8:	add	x2, sp, #0x18
    bbbc:	mov	w1, #0x1                   	// #1
    bbc0:	strh	w20, [sp, #40]
    bbc4:	stp	x8, xzr, [sp, #24]
    bbc8:	stur	x22, [x29, #-8]
    bbcc:	b	b9f8 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0xfc>
    bbd0:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bbd4:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bbd8:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bbdc:	add	x0, x0, #0x0
    bbe0:	add	x1, x1, #0x0
    bbe4:	add	x3, x3, #0x0
    bbe8:	mov	w2, #0xb33                 	// #2867
    bbec:	bl	0 <__assert_fail>
    bbf0:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bbf4:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bbf8:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bbfc:	add	x0, x0, #0x0
    bc00:	add	x1, x1, #0x0
    bc04:	add	x3, x3, #0x0
    bc08:	mov	w2, #0xc1                  	// #193
    bc0c:	bl	0 <__assert_fail>

000000000000bc10 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE>:
    bc10:	sub	sp, sp, #0x30
    bc14:	stp	x29, x30, [sp, #32]
    bc18:	add	x29, sp, #0x20
    bc1c:	ldr	w8, [x0, #40]
    bc20:	sub	w8, w8, #0x15
    bc24:	cmp	w8, #0xf
    bc28:	b.hi	bc54 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x44>  // b.pmore
    bc2c:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bc30:	add	x9, x9, #0x0
    bc34:	adr	x10, bc44 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x34>
    bc38:	ldrb	w11, [x9, x8]
    bc3c:	add	x10, x10, x11, lsl #2
    bc40:	br	x10
    bc44:	cbz	x1, bcd0 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0xc0>
    bc48:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bc4c:	add	x8, x8, #0x0
    bc50:	b	bce4 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0xd4>
    bc54:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bc58:	add	x8, x8, #0x0
    bc5c:	b	bce4 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0xd4>
    bc60:	ldp	x29, x30, [sp, #32]
    bc64:	add	sp, sp, #0x30
    bc68:	b	b358 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE>
    bc6c:	ldp	x29, x30, [sp, #32]
    bc70:	add	sp, sp, #0x30
    bc74:	b	b8fc <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE>
    bc78:	ldp	x29, x30, [sp, #32]
    bc7c:	add	sp, sp, #0x30
    bc80:	b	d330 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE>
    bc84:	ldp	x29, x30, [sp, #32]
    bc88:	add	sp, sp, #0x30
    bc8c:	b	c8b4 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE>
    bc90:	ldp	x8, x9, [x0, #272]
    bc94:	cmp	x8, x9
    bc98:	b.eq	bd18 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x108>  // b.none
    bc9c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bca0:	add	x8, x8, #0x0
    bca4:	b	bce4 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0xd4>
    bca8:	cbz	x1, bd24 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x114>
    bcac:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bcb0:	add	x8, x8, #0x0
    bcb4:	b	bce4 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0xd4>
    bcb8:	ldp	x29, x30, [sp, #32]
    bcbc:	add	sp, sp, #0x30
    bcc0:	b	ac64 <_ZN4llvm8TGParser11ParseDefvarEv>
    bcc4:	ldp	x29, x30, [sp, #32]
    bcc8:	add	sp, sp, #0x30
    bccc:	b	bd3c <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE>
    bcd0:	ldp	x8, x9, [x0, #272]
    bcd4:	cmp	x8, x9
    bcd8:	b.eq	bd30 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x120>  // b.none
    bcdc:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bce0:	add	x8, x8, #0x0
    bce4:	mov	w9, #0x103                 	// #259
    bce8:	stp	x8, xzr, [sp]
    bcec:	strh	w9, [sp, #16]
    bcf0:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    bcf4:	stur	x0, [x29, #-8]
    bcf8:	sub	x0, x29, #0x8
    bcfc:	mov	x2, sp
    bd00:	mov	w1, #0x1                   	// #1
    bd04:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    bd08:	ldp	x29, x30, [sp, #32]
    bd0c:	mov	w0, #0x1                   	// #1
    bd10:	add	sp, sp, #0x30
    bd14:	ret
    bd18:	ldp	x29, x30, [sp, #32]
    bd1c:	add	sp, sp, #0x30
    bd20:	b	cca8 <_ZN4llvm8TGParser15ParseMultiClassEv>
    bd24:	ldp	x29, x30, [sp, #32]
    bd28:	add	sp, sp, #0x30
    bd2c:	b	b4e4 <_ZN4llvm8TGParser11ParseDefsetEv>
    bd30:	ldp	x29, x30, [sp, #32]
    bd34:	add	sp, sp, #0x30
    bd38:	b	c2a0 <_ZN4llvm8TGParser10ParseClassEv>

000000000000bd3c <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE>:
    bd3c:	sub	sp, sp, #0xb0
    bd40:	stp	x29, x30, [sp, #80]
    bd44:	str	x27, [sp, #96]
    bd48:	stp	x26, x25, [sp, #112]
    bd4c:	stp	x24, x23, [sp, #128]
    bd50:	stp	x22, x21, [sp, #144]
    bd54:	stp	x20, x19, [sp, #160]
    bd58:	add	x29, sp, #0x50
    bd5c:	mov	x20, x1
    bd60:	mov	x19, x0
    bd64:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    bd68:	ldr	w8, [x19, #40]
    bd6c:	cmp	w8, #0x24
    bd70:	b.ne	c0a8 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x36c>  // b.any
    bd74:	ldp	x8, x9, [x19, #8]
    bd78:	mov	x21, x0
    bd7c:	mov	x0, x19
    bd80:	cmp	x8, x9
    bd84:	cset	w1, eq  // eq = none
    bd88:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    bd8c:	str	w0, [x19, #40]
    bd90:	mov	x0, x19
    bd94:	mov	x1, xzr
    bd98:	mov	x2, xzr
    bd9c:	mov	w3, wzr
    bda0:	bl	34f4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    bda4:	cbz	x0, bedc <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x1a0>
    bda8:	ldr	w8, [x19, #40]
    bdac:	cmp	w8, #0x25
    bdb0:	b.ne	be74 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x138>  // b.any
    bdb4:	ldp	x8, x9, [x19, #8]
    bdb8:	mov	x22, x0
    bdbc:	mov	x0, x19
    bdc0:	cmp	x8, x9
    bdc4:	cset	w1, eq  // eq = none
    bdc8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    bdcc:	str	w0, [x19, #40]
    bdd0:	adrp	x23, 0 <_ZN4llvm8BitRecTy6SharedE>
    bdd4:	ldr	x23, [x23]
    bdd8:	mov	x0, xzr
    bddc:	mov	x1, xzr
    bde0:	mov	x2, x23
    bde4:	bl	0 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    bde8:	mov	x24, x0
    bdec:	mov	w0, #0x1                   	// #1
    bdf0:	bl	0 <_ZN4llvm7BitInit3getEb>
    bdf4:	stur	x0, [x29, #-24]
    bdf8:	sub	x0, x29, #0x18
    bdfc:	mov	w1, #0x1                   	// #1
    be00:	mov	x2, x23
    be04:	bl	0 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    be08:	mov	x25, x0
    be0c:	mov	x0, x23
    be10:	bl	0 <_ZN4llvm5RecTy9getListTyEv>
    be14:	mov	x26, x0
    be18:	mov	w0, #0x2                   	// #2
    be1c:	mov	x1, x22
    be20:	mov	x2, x25
    be24:	mov	x3, x24
    be28:	mov	x4, x26
    be2c:	bl	0 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE>
    be30:	mov	x1, xzr
    be34:	bl	0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE>
    be38:	mov	x27, x0
    be3c:	mov	w0, #0x30                  	// #48
    be40:	add	x23, x19, #0x110
    be44:	bl	0 <_Znwm>
    be48:	stp	x21, xzr, [x0]
    be4c:	stp	x27, xzr, [x0, #16]
    be50:	stp	xzr, xzr, [x0, #32]
    be54:	stur	x0, [x29, #-24]
    be58:	ldp	x1, x8, [x19, #280]
    be5c:	cmp	x1, x8
    be60:	b.eq	beac <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x170>  // b.none
    be64:	stur	xzr, [x29, #-24]
    be68:	str	x0, [x1], #8
    be6c:	str	x1, [x19, #280]
    be70:	b	beb8 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x17c>
    be74:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    be78:	add	x8, x8, #0x0
    be7c:	mov	w9, #0x103                 	// #259
    be80:	mov	x0, x19
    be84:	stp	x8, xzr, [x29, #-24]
    be88:	sturh	w9, [x29, #-8]
    be8c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    be90:	str	x0, [x29, #24]
    be94:	add	x0, x29, #0x18
    be98:	sub	x2, x29, #0x18
    be9c:	mov	w1, #0x1                   	// #1
    bea0:	mov	w19, #0x1                   	// #1
    bea4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    bea8:	b	c084 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x348>
    beac:	sub	x2, x29, #0x18
    beb0:	mov	x0, x23
    beb4:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    beb8:	sub	x0, x29, #0x18
    bebc:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bec0:	adrp	x2, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bec4:	add	x2, x2, #0x0
    bec8:	mov	w3, #0x4                   	// #4
    becc:	mov	x0, x19
    bed0:	mov	x1, x20
    bed4:	bl	c0c8 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE>
    bed8:	tbz	w0, #0, bee4 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x1a8>
    bedc:	mov	w19, #0x1                   	// #1
    bee0:	b	c084 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x348>
    bee4:	ldr	x8, [x19, #280]
    bee8:	ldur	x27, [x8, #-8]
    beec:	stur	xzr, [x8, #-8]
    bef0:	ldr	x8, [x19, #280]
    bef4:	sub	x0, x8, #0x8
    bef8:	str	x0, [x19, #280]
    befc:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bf00:	add	x1, sp, #0x28
    bf04:	mov	x0, x19
    bf08:	stur	xzr, [x29, #-24]
    bf0c:	stp	xzr, xzr, [sp, #32]
    bf10:	str	x27, [sp, #48]
    bf14:	bl	25a4 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE>
    bf18:	mov	w27, w0
    bf1c:	add	x0, sp, #0x28
    bf20:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bf24:	add	x0, sp, #0x20
    bf28:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bf2c:	tbz	w27, #0, bf38 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x1fc>
    bf30:	mov	w19, #0x1                   	// #1
    bf34:	b	c07c <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x340>
    bf38:	ldr	w8, [x19, #40]
    bf3c:	cmp	w8, #0x26
    bf40:	b.ne	c078 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x33c>  // b.any
    bf44:	ldp	x8, x9, [x19, #8]
    bf48:	mov	x0, x19
    bf4c:	cmp	x8, x9
    bf50:	cset	w1, eq  // eq = none
    bf54:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    bf58:	str	w0, [x19, #40]
    bf5c:	mov	w0, #0x2                   	// #2
    bf60:	mov	x1, x22
    bf64:	mov	x2, x24
    bf68:	mov	x3, x25
    bf6c:	mov	x4, x26
    bf70:	bl	0 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE>
    bf74:	mov	x1, xzr
    bf78:	bl	0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE>
    bf7c:	mov	x22, x0
    bf80:	mov	w0, #0x30                  	// #48
    bf84:	bl	0 <_Znwm>
    bf88:	stp	x21, xzr, [x0]
    bf8c:	stp	x22, xzr, [x0, #16]
    bf90:	stp	xzr, xzr, [x0, #32]
    bf94:	str	x0, [x29, #24]
    bf98:	ldp	x1, x8, [x19, #280]
    bf9c:	cmp	x1, x8
    bfa0:	b.eq	bfb4 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x278>  // b.none
    bfa4:	str	xzr, [x29, #24]
    bfa8:	str	x0, [x1], #8
    bfac:	str	x1, [x19, #280]
    bfb0:	b	bfc0 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x284>
    bfb4:	add	x2, x29, #0x18
    bfb8:	mov	x0, x23
    bfbc:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bfc0:	add	x0, x29, #0x18
    bfc4:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bfc8:	adrp	x2, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bfcc:	add	x2, x2, #0x0
    bfd0:	mov	w3, #0x4                   	// #4
    bfd4:	mov	x0, x19
    bfd8:	mov	x1, x20
    bfdc:	bl	c0c8 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE>
    bfe0:	tbnz	w0, #0, bf30 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x1f4>
    bfe4:	ldr	x8, [x19, #280]
    bfe8:	ldur	x9, [x8, #-8]
    bfec:	stur	xzr, [x8, #-8]
    bff0:	ldur	x20, [x29, #-24]
    bff4:	stur	x9, [x29, #-24]
    bff8:	cbz	x20, c034 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x2f8>
    bffc:	ldp	x21, x22, [x20, #24]
    c000:	cmp	x21, x22
    c004:	b.eq	c020 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x2e4>  // b.none
    c008:	mov	x0, x21
    c00c:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c010:	add	x21, x21, #0x10
    c014:	cmp	x22, x21
    c018:	b.ne	c008 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x2cc>  // b.any
    c01c:	ldr	x21, [x20, #24]
    c020:	cbz	x21, c02c <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x2f0>
    c024:	mov	x0, x21
    c028:	bl	0 <_ZdlPv>
    c02c:	mov	x0, x20
    c030:	bl	0 <_ZdlPv>
    c034:	ldr	x8, [x19, #280]
    c038:	sub	x0, x8, #0x8
    c03c:	str	x0, [x19, #280]
    c040:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c044:	ldur	x8, [x29, #-24]
    c048:	add	x1, sp, #0x10
    c04c:	mov	x0, x19
    c050:	stur	xzr, [x29, #-24]
    c054:	stp	xzr, xzr, [sp, #8]
    c058:	str	x8, [sp, #24]
    c05c:	bl	25a4 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE>
    c060:	mov	w19, w0
    c064:	add	x0, sp, #0x10
    c068:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c06c:	add	x0, sp, #0x8
    c070:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c074:	tbnz	w19, #0, bf30 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x1f4>
    c078:	mov	w19, wzr
    c07c:	sub	x0, x29, #0x18
    c080:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c084:	mov	w0, w19
    c088:	ldp	x20, x19, [sp, #160]
    c08c:	ldp	x22, x21, [sp, #144]
    c090:	ldp	x24, x23, [sp, #128]
    c094:	ldp	x26, x25, [sp, #112]
    c098:	ldr	x27, [sp, #96]
    c09c:	ldp	x29, x30, [sp, #80]
    c0a0:	add	sp, sp, #0xb0
    c0a4:	ret
    c0a8:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c0ac:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c0b0:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c0b4:	add	x0, x0, #0x0
    c0b8:	add	x1, x1, #0x0
    c0bc:	add	x3, x3, #0x0
    c0c0:	mov	w2, #0xb6b                 	// #2923
    c0c4:	bl	0 <__assert_fail>

000000000000c0c8 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE>:
    c0c8:	sub	sp, sp, #0x90
    c0cc:	stp	x29, x30, [sp, #80]
    c0d0:	stp	x24, x23, [sp, #96]
    c0d4:	stp	x22, x21, [sp, #112]
    c0d8:	stp	x20, x19, [sp, #128]
    c0dc:	add	x29, sp, #0x50
    c0e0:	mov	x22, x1
    c0e4:	mov	x19, x0
    c0e8:	stp	x2, x3, [x29, #-24]
    c0ec:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c0f0:	ldr	w8, [x19, #40]
    c0f4:	mov	x20, x0
    c0f8:	mov	x0, x19
    c0fc:	cmp	w8, #0x6
    c100:	b.ne	c168 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0xa0>  // b.any
    c104:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    c108:	ldp	x8, x9, [x19, #8]
    c10c:	mov	x21, x0
    c110:	mov	x0, x19
    c114:	cmp	x8, x9
    c118:	cset	w1, eq  // eq = none
    c11c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    c120:	mov	x24, #0x47200000            	// #1193279488
    c124:	str	w0, [x19, #40]
    c128:	mov	w23, #0x1                   	// #1
    c12c:	movk	x24, #0x1d, lsl #32
    c130:	cmp	w0, #0x24
    c134:	b.hi	c1ec <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x124>  // b.pmore
    c138:	mov	w8, w0
    c13c:	lsl	x9, x23, x8
    c140:	tst	x9, x24
    c144:	b.eq	c17c <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0xb4>  // b.none
    c148:	mov	x0, x19
    c14c:	mov	x1, x22
    c150:	bl	bc10 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE>
    c154:	tbnz	w0, #0, c174 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0xac>
    c158:	ldr	w0, [x19, #40]
    c15c:	cmp	w0, #0x24
    c160:	b.ls	c138 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x70>  // b.plast
    c164:	b	c1ec <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x124>
    c168:	mov	x1, x22
    c16c:	bl	bc10 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE>
    c170:	tbz	w0, #0, c19c <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0xd4>
    c174:	mov	w19, #0x1                   	// #1
    c178:	b	c264 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x19c>
    c17c:	cmp	x8, #0x7
    c180:	b.ne	c1ec <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x124>  // b.any
    c184:	ldp	x8, x9, [x19, #8]
    c188:	mov	x0, x19
    c18c:	cmp	x8, x9
    c190:	cset	w1, eq  // eq = none
    c194:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    c198:	str	w0, [x19, #40]
    c19c:	ldr	x8, [x19, #336]
    c1a0:	cmp	x8, x20
    c1a4:	b.ne	c280 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x1b8>  // b.any
    c1a8:	ldr	x8, [x20, #48]
    c1ac:	str	xzr, [x20, #48]
    c1b0:	str	xzr, [sp, #32]
    c1b4:	ldr	x20, [x19, #336]
    c1b8:	str	x8, [x19, #336]
    c1bc:	cbz	x20, c1dc <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x114>
    c1c0:	add	x0, x20, #0x30
    c1c4:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c1c8:	ldr	x1, [x20, #16]
    c1cc:	mov	x0, x20
    c1d0:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c1d4:	mov	x0, x20
    c1d8:	bl	0 <_ZdlPv>
    c1dc:	add	x0, sp, #0x20
    c1e0:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c1e4:	mov	w19, wzr
    c1e8:	b	c264 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x19c>
    c1ec:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c1f0:	adrp	x12, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c1f4:	mov	w8, #0x503                 	// #1283
    c1f8:	add	x9, x9, #0x0
    c1fc:	sub	x10, x29, #0x18
    c200:	add	x11, sp, #0x8
    c204:	add	x12, x12, #0x0
    c208:	mov	w13, #0x302                 	// #770
    c20c:	mov	x0, x19
    c210:	strh	w8, [sp, #24]
    c214:	stp	x9, x10, [sp, #8]
    c218:	stp	x11, x12, [sp, #32]
    c21c:	strh	w13, [sp, #48]
    c220:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    c224:	stur	x0, [x29, #-8]
    c228:	sub	x0, x29, #0x8
    c22c:	add	x2, sp, #0x20
    c230:	mov	w1, #0x1                   	// #1
    c234:	mov	w19, #0x1                   	// #1
    c238:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    c23c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c240:	add	x8, x8, #0x0
    c244:	mov	w9, #0x103                 	// #259
    c248:	add	x0, sp, #0x8
    c24c:	add	x2, sp, #0x20
    c250:	mov	w1, #0x1                   	// #1
    c254:	stp	x8, xzr, [sp, #32]
    c258:	strh	w9, [sp, #48]
    c25c:	str	x21, [sp, #8]
    c260:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    c264:	mov	w0, w19
    c268:	ldp	x20, x19, [sp, #128]
    c26c:	ldp	x22, x21, [sp, #112]
    c270:	ldp	x24, x23, [sp, #96]
    c274:	ldp	x29, x30, [sp, #80]
    c278:	add	sp, sp, #0x90
    c27c:	ret
    c280:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c284:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c288:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c28c:	add	x0, x0, #0x0
    c290:	add	x1, x1, #0x0
    c294:	add	x3, x3, #0x0
    c298:	mov	w2, #0xc1                  	// #193
    c29c:	bl	0 <__assert_fail>

000000000000c2a0 <_ZN4llvm8TGParser10ParseClassEv>:
    c2a0:	sub	sp, sp, #0xb0
    c2a4:	stp	x29, x30, [sp, #128]
    c2a8:	str	x21, [sp, #144]
    c2ac:	stp	x20, x19, [sp, #160]
    c2b0:	add	x29, sp, #0x80
    c2b4:	ldr	w8, [x0, #40]
    c2b8:	cmp	w8, #0x15
    c2bc:	b.ne	c5a4 <_ZN4llvm8TGParser10ParseClassEv+0x304>  // b.any
    c2c0:	ldp	x8, x9, [x0, #8]
    c2c4:	mov	x19, x0
    c2c8:	cmp	x8, x9
    c2cc:	cset	w1, eq  // eq = none
    c2d0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    c2d4:	cmp	w0, #0x48
    c2d8:	str	w0, [x19, #40]
    c2dc:	b.ne	c3c4 <_ZN4llvm8TGParser10ParseClassEv+0x124>  // b.any
    c2e0:	ldr	x0, [x19, #344]
    c2e4:	ldp	x1, x2, [x19, #48]
    c2e8:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c2ec:	cbz	x0, c3fc <_ZN4llvm8TGParser10ParseClassEv+0x15c>
    c2f0:	ldr	w8, [x0, #80]
    c2f4:	mov	x20, x0
    c2f8:	cbnz	w8, c30c <_ZN4llvm8TGParser10ParseClassEv+0x6c>
    c2fc:	ldr	w8, [x20, #96]
    c300:	cbnz	w8, c30c <_ZN4llvm8TGParser10ParseClassEv+0x6c>
    c304:	ldr	w8, [x20, #64]
    c308:	cbz	w8, c4c8 <_ZN4llvm8TGParser10ParseClassEv+0x228>
    c30c:	ldr	x0, [x20]
    c310:	ldr	x8, [x0]
    c314:	ldr	x9, [x8, #48]
    c318:	add	x8, sp, #0x8
    c31c:	blr	x9
    c320:	ldr	x9, [sp, #16]
    c324:	add	x8, sp, #0x28
    c328:	add	x20, x8, #0x10
    c32c:	add	x0, sp, #0x28
    c330:	add	x1, x9, #0x7
    c334:	stp	x20, xzr, [sp, #40]
    c338:	strb	wzr, [sp, #56]
    c33c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
    c340:	ldr	x8, [sp, #48]
    c344:	mov	x21, #0x3fffffffffffffff    	// #4611686018427387903
    c348:	sub	x8, x21, x8
    c34c:	cmp	x8, #0x6
    c350:	b.ls	c5c4 <_ZN4llvm8TGParser10ParseClassEv+0x324>  // b.plast
    c354:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c358:	add	x1, x1, #0x0
    c35c:	add	x0, sp, #0x28
    c360:	mov	w2, #0x7                   	// #7
    c364:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    c368:	ldp	x1, x2, [sp, #8]
    c36c:	add	x0, sp, #0x28
    c370:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    c374:	ldr	x8, [sp, #48]
    c378:	sub	x8, x21, x8
    c37c:	cmp	x8, #0x10
    c380:	b.ls	c5c4 <_ZN4llvm8TGParser10ParseClassEv+0x324>  // b.plast
    c384:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c388:	add	x1, x1, #0x0
    c38c:	add	x0, sp, #0x28
    c390:	mov	w2, #0x11                  	// #17
    c394:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    c398:	sub	x8, x29, #0x38
    c39c:	add	x21, x8, #0x10
    c3a0:	stur	x21, [x29, #-56]
    c3a4:	mov	x8, x0
    c3a8:	ldr	x9, [x8], #16
    c3ac:	cmp	x9, x8
    c3b0:	b.eq	c50c <_ZN4llvm8TGParser10ParseClassEv+0x26c>  // b.none
    c3b4:	stur	x9, [x29, #-56]
    c3b8:	ldr	x9, [x0, #16]
    c3bc:	stur	x9, [x29, #-40]
    c3c0:	b	c514 <_ZN4llvm8TGParser10ParseClassEv+0x274>
    c3c4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c3c8:	add	x8, x8, #0x0
    c3cc:	mov	w9, #0x103                 	// #259
    c3d0:	mov	x0, x19
    c3d4:	stp	x8, xzr, [x29, #-56]
    c3d8:	sturh	w9, [x29, #-40]
    c3dc:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    c3e0:	str	x0, [sp, #40]
    c3e4:	add	x0, sp, #0x28
    c3e8:	sub	x2, x29, #0x38
    c3ec:	mov	w1, #0x1                   	// #1
    c3f0:	mov	w19, #0x1                   	// #1
    c3f4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    c3f8:	b	c58c <_ZN4llvm8TGParser10ParseClassEv+0x2ec>
    c3fc:	ldr	w8, [x19, #40]
    c400:	and	w8, w8, #0xfffffffc
    c404:	cmp	w8, #0x48
    c408:	b.ne	c5d0 <_ZN4llvm8TGParser10ParseClassEv+0x330>  // b.any
    c40c:	mov	x0, x19
    c410:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    c414:	stur	x0, [x29, #-56]
    c418:	ldr	x21, [x19, #344]
    c41c:	mov	w0, #0x80                  	// #128
    c420:	bl	0 <_Znwm>
    c424:	ldp	x8, x1, [x19, #48]
    c428:	mov	x20, x0
    c42c:	mov	x0, x8
    c430:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    c434:	mov	x1, x0
    c438:	sub	x2, x29, #0x38
    c43c:	mov	w3, #0x1                   	// #1
    c440:	mov	w6, #0x1                   	// #1
    c444:	mov	x0, x20
    c448:	mov	x4, x21
    c44c:	mov	w5, wzr
    c450:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c454:	ldr	x0, [x19, #344]
    c458:	mov	x1, sp
    c45c:	str	x20, [sp]
    c460:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c464:	ldr	x21, [sp]
    c468:	cbz	x21, c4c4 <_ZN4llvm8TGParser10ParseClassEv+0x224>
    c46c:	ldr	x0, [x21, #88]
    c470:	add	x8, x21, #0x68
    c474:	cmp	x0, x8
    c478:	b.eq	c480 <_ZN4llvm8TGParser10ParseClassEv+0x1e0>  // b.none
    c47c:	bl	0 <free>
    c480:	ldr	x0, [x21, #72]
    c484:	add	x8, x21, #0x58
    c488:	cmp	x0, x8
    c48c:	b.eq	c494 <_ZN4llvm8TGParser10ParseClassEv+0x1f4>  // b.none
    c490:	bl	0 <free>
    c494:	ldr	x0, [x21, #56]
    c498:	add	x8, x21, #0x48
    c49c:	cmp	x0, x8
    c4a0:	b.eq	c4a8 <_ZN4llvm8TGParser10ParseClassEv+0x208>  // b.none
    c4a4:	bl	0 <free>
    c4a8:	ldr	x0, [x21, #8]
    c4ac:	add	x8, x21, #0x18
    c4b0:	cmp	x0, x8
    c4b4:	b.eq	c4bc <_ZN4llvm8TGParser10ParseClassEv+0x21c>  // b.none
    c4b8:	bl	0 <free>
    c4bc:	mov	x0, x21
    c4c0:	bl	0 <_ZdlPv>
    c4c4:	str	xzr, [sp]
    c4c8:	ldp	x8, x9, [x19, #8]
    c4cc:	mov	x0, x19
    c4d0:	cmp	x8, x9
    c4d4:	cset	w1, eq  // eq = none
    c4d8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    c4dc:	cmp	w0, #0xa
    c4e0:	str	w0, [x19, #40]
    c4e4:	b.ne	c4f8 <_ZN4llvm8TGParser10ParseClassEv+0x258>  // b.any
    c4e8:	mov	x0, x19
    c4ec:	mov	x1, x20
    c4f0:	bl	a670 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE>
    c4f4:	tbnz	w0, #0, c588 <_ZN4llvm8TGParser10ParseClassEv+0x2e8>
    c4f8:	mov	x0, x19
    c4fc:	mov	x1, x20
    c500:	bl	b184 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE>
    c504:	mov	w19, w0
    c508:	b	c58c <_ZN4llvm8TGParser10ParseClassEv+0x2ec>
    c50c:	ldr	q0, [x9]
    c510:	str	q0, [x21]
    c514:	ldr	x9, [x0, #8]
    c518:	mov	w10, #0x104                 	// #260
    c51c:	sub	x11, x29, #0x38
    c520:	stur	x9, [x29, #-48]
    c524:	stp	x8, xzr, [x0]
    c528:	strb	wzr, [x0, #16]
    c52c:	mov	x0, x19
    c530:	sturh	w10, [x29, #-8]
    c534:	stp	x11, xzr, [x29, #-24]
    c538:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    c53c:	str	x0, [x29, #24]
    c540:	add	x0, x29, #0x18
    c544:	sub	x2, x29, #0x18
    c548:	mov	w1, #0x1                   	// #1
    c54c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    c550:	ldur	x0, [x29, #-56]
    c554:	cmp	x0, x21
    c558:	b.eq	c560 <_ZN4llvm8TGParser10ParseClassEv+0x2c0>  // b.none
    c55c:	bl	0 <_ZdlPv>
    c560:	ldr	x0, [sp, #40]
    c564:	cmp	x0, x20
    c568:	b.eq	c570 <_ZN4llvm8TGParser10ParseClassEv+0x2d0>  // b.none
    c56c:	bl	0 <_ZdlPv>
    c570:	ldr	x0, [sp, #8]
    c574:	add	x8, sp, #0x8
    c578:	add	x8, x8, #0x10
    c57c:	cmp	x0, x8
    c580:	b.eq	c588 <_ZN4llvm8TGParser10ParseClassEv+0x2e8>  // b.none
    c584:	bl	0 <_ZdlPv>
    c588:	mov	w19, #0x1                   	// #1
    c58c:	and	w0, w19, #0x1
    c590:	ldp	x20, x19, [sp, #160]
    c594:	ldr	x21, [sp, #144]
    c598:	ldp	x29, x30, [sp, #128]
    c59c:	add	sp, sp, #0xb0
    c5a0:	ret
    c5a4:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c5a8:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c5ac:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c5b0:	add	x0, x0, #0x0
    c5b4:	add	x1, x1, #0x0
    c5b8:	add	x3, x3, #0x0
    c5bc:	mov	w2, #0xbd6                 	// #3030
    c5c0:	bl	0 <__assert_fail>
    c5c4:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c5c8:	add	x0, x0, #0x0
    c5cc:	bl	0 <_ZSt20__throw_length_errorPKc>
    c5d0:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c5d4:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c5d8:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c5dc:	add	x0, x0, #0x0
    c5e0:	add	x1, x1, #0x0
    c5e4:	add	x3, x3, #0x0
    c5e8:	mov	w2, #0x71                  	// #113
    c5ec:	bl	0 <__assert_fail>

000000000000c5f0 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE>:
    c5f0:	sub	sp, sp, #0xd0
    c5f4:	str	d8, [sp, #128]
    c5f8:	stp	x29, x30, [sp, #136]
    c5fc:	str	x25, [sp, #152]
    c600:	stp	x24, x23, [sp, #160]
    c604:	stp	x22, x21, [sp, #176]
    c608:	stp	x20, x19, [sp, #192]
    c60c:	add	x29, sp, #0x80
    c610:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c614:	ldr	d8, [x9]
    c618:	add	x8, sp, #0x18
    c61c:	adrp	x22, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c620:	mov	x19, x1
    c624:	mov	x20, x0
    c628:	add	x21, x8, #0x10
    c62c:	add	x22, x22, #0x0
    c630:	mov	w23, #0x103                 	// #259
    c634:	b	c63c <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x4c>
    c638:	cbnz	w24, c894 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x2a4>
    c63c:	ldr	w8, [x20, #40]
    c640:	cmp	w8, #0x48
    c644:	b.ne	c82c <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x23c>  // b.any
    c648:	ldp	x0, x1, [x20, #48]
    c64c:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    c650:	stur	x0, [x29, #-16]
    c654:	mov	x0, x20
    c658:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    c65c:	stur	x0, [x29, #-24]
    c660:	ldp	x8, x9, [x20, #8]
    c664:	mov	x0, x20
    c668:	cmp	x8, x9
    c66c:	cset	w1, eq  // eq = none
    c670:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    c674:	str	w0, [x20, #40]
    c678:	add	x1, sp, #0x18
    c67c:	mov	x0, x20
    c680:	str	x21, [sp, #24]
    c684:	str	d8, [sp, #32]
    c688:	bl	4c7c <_ZN4llvm8TGParser22ParseOptionalRangeListERNS_15SmallVectorImplIjEE>
    c68c:	tbz	w0, #0, c6c4 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0xd4>
    c690:	ldr	w8, [x19, #8]
    c694:	cbz	w8, c810 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x220>
    c698:	ldr	x9, [x19]
    c69c:	add	x8, x8, x8, lsl #1
    c6a0:	lsl	x25, x8, #4
    c6a4:	sub	x24, x9, #0x28
    c6a8:	b	c6b4 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0xc4>
    c6ac:	subs	x25, x25, #0x30
    c6b0:	b.eq	c810 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x220>  // b.none
    c6b4:	ldr	x0, [x24, x25]
    c6b8:	cbz	x0, c6ac <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0xbc>
    c6bc:	bl	0 <_ZdlPv>
    c6c0:	b	c6ac <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0xbc>
    c6c4:	ldr	w8, [sp, #32]
    c6c8:	cbz	w8, c700 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x110>
    c6cc:	ldr	x9, [sp, #24]
    c6d0:	add	x8, x9, x8, lsl #2
    c6d4:	sub	x8, x8, #0x4
    c6d8:	cmp	x8, x9
    c6dc:	b.ls	c700 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x110>  // b.plast
    c6e0:	add	x9, x9, #0x4
    c6e4:	ldr	w10, [x8]
    c6e8:	ldur	w11, [x9, #-4]
    c6ec:	stur	w10, [x9, #-4]
    c6f0:	str	w11, [x8], #-4
    c6f4:	cmp	x9, x8
    c6f8:	add	x9, x9, #0x4
    c6fc:	b.cc	c6e4 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0xf4>  // b.lo, b.ul, b.last
    c700:	ldr	w8, [x20, #40]
    c704:	cmp	w8, #0x10
    c708:	b.ne	c784 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x194>  // b.any
    c70c:	ldp	x8, x9, [x20, #8]
    c710:	mov	x0, x20
    c714:	cmp	x8, x9
    c718:	cset	w1, eq  // eq = none
    c71c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    c720:	str	w0, [x20, #40]
    c724:	mov	x0, x20
    c728:	mov	x1, xzr
    c72c:	mov	x2, xzr
    c730:	mov	w3, wzr
    c734:	bl	34f4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    c738:	str	x0, [sp]
    c73c:	cbz	x0, c7dc <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x1ec>
    c740:	sub	x1, x29, #0x10
    c744:	add	x2, sp, #0x18
    c748:	mov	x3, sp
    c74c:	sub	x4, x29, #0x18
    c750:	mov	x0, x19
    c754:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c758:	ldr	w8, [x20, #40]
    c75c:	cmp	w8, #0xe
    c760:	b.ne	c814 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x224>  // b.any
    c764:	ldp	x8, x9, [x20, #8]
    c768:	mov	x0, x20
    c76c:	cmp	x8, x9
    c770:	cset	w1, eq  // eq = none
    c774:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    c778:	mov	w24, wzr
    c77c:	str	w0, [x20, #40]
    c780:	b	c818 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x228>
    c784:	mov	x0, x20
    c788:	stp	x22, xzr, [sp]
    c78c:	strh	w23, [sp, #16]
    c790:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    c794:	stur	x0, [x29, #-8]
    c798:	sub	x0, x29, #0x8
    c79c:	mov	x2, sp
    c7a0:	mov	w1, #0x1                   	// #1
    c7a4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    c7a8:	ldr	w8, [x19, #8]
    c7ac:	cbz	w8, c810 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x220>
    c7b0:	ldr	x9, [x19]
    c7b4:	add	x8, x8, x8, lsl #1
    c7b8:	lsl	x25, x8, #4
    c7bc:	sub	x24, x9, #0x28
    c7c0:	b	c7cc <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x1dc>
    c7c4:	subs	x25, x25, #0x30
    c7c8:	b.eq	c810 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x220>  // b.none
    c7cc:	ldr	x0, [x24, x25]
    c7d0:	cbz	x0, c7c4 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x1d4>
    c7d4:	bl	0 <_ZdlPv>
    c7d8:	b	c7c4 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x1d4>
    c7dc:	ldr	w8, [x19, #8]
    c7e0:	cbz	w8, c810 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x220>
    c7e4:	ldr	x9, [x19]
    c7e8:	add	x8, x8, x8, lsl #1
    c7ec:	lsl	x25, x8, #4
    c7f0:	sub	x24, x9, #0x28
    c7f4:	b	c800 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x210>
    c7f8:	subs	x25, x25, #0x30
    c7fc:	b.eq	c810 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x220>  // b.none
    c800:	ldr	x0, [x24, x25]
    c804:	cbz	x0, c7f8 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x208>
    c808:	bl	0 <_ZdlPv>
    c80c:	b	c7f8 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x208>
    c810:	str	wzr, [x19, #8]
    c814:	mov	w24, #0x1                   	// #1
    c818:	ldr	x0, [sp, #24]
    c81c:	cmp	x0, x21
    c820:	b.eq	c638 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x48>  // b.none
    c824:	bl	0 <free>
    c828:	b	c638 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x48>
    c82c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c830:	add	x8, x8, #0x0
    c834:	mov	w9, #0x103                 	// #259
    c838:	mov	x0, x20
    c83c:	stp	x8, xzr, [sp, #24]
    c840:	strh	w9, [sp, #40]
    c844:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    c848:	str	x0, [sp]
    c84c:	mov	x0, sp
    c850:	add	x2, sp, #0x18
    c854:	mov	w1, #0x1                   	// #1
    c858:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    c85c:	ldr	w8, [x19, #8]
    c860:	cbz	w8, c890 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x2a0>
    c864:	ldr	x9, [x19]
    c868:	add	x8, x8, x8, lsl #1
    c86c:	lsl	x21, x8, #4
    c870:	sub	x20, x9, #0x28
    c874:	b	c880 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x290>
    c878:	subs	x21, x21, #0x30
    c87c:	b.eq	c890 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x2a0>  // b.none
    c880:	ldr	x0, [x20, x21]
    c884:	cbz	x0, c878 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x288>
    c888:	bl	0 <_ZdlPv>
    c88c:	b	c878 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x288>
    c890:	str	wzr, [x19, #8]
    c894:	ldp	x20, x19, [sp, #192]
    c898:	ldp	x22, x21, [sp, #176]
    c89c:	ldp	x24, x23, [sp, #160]
    c8a0:	ldr	x25, [sp, #152]
    c8a4:	ldp	x29, x30, [sp, #136]
    c8a8:	ldr	d8, [sp, #128]
    c8ac:	add	sp, sp, #0xd0
    c8b0:	ret

000000000000c8b4 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE>:
    c8b4:	str	d8, [sp, #-80]!
    c8b8:	stp	x29, x30, [sp, #8]
    c8bc:	str	x28, [sp, #24]
    c8c0:	stp	x24, x23, [sp, #32]
    c8c4:	stp	x22, x21, [sp, #48]
    c8c8:	stp	x20, x19, [sp, #64]
    c8cc:	mov	x29, sp
    c8d0:	sub	sp, sp, #0x270
    c8d4:	ldr	w8, [x0, #40]
    c8d8:	cmp	w8, #0x1e
    c8dc:	b.ne	cc68 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x3b4>  // b.any
    c8e0:	ldp	x8, x9, [x0, #8]
    c8e4:	mov	x20, x1
    c8e8:	mov	x19, x0
    c8ec:	cmp	x8, x9
    c8f0:	cset	w1, eq  // eq = none
    c8f4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    c8f8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c8fc:	ldr	d0, [x8]
    c900:	add	x8, sp, #0xd8
    c904:	str	w0, [x19, #40]
    c908:	add	x8, x8, #0x10
    c90c:	add	x1, sp, #0xd8
    c910:	mov	x0, x19
    c914:	str	x8, [sp, #216]
    c918:	str	d0, [sp, #224]
    c91c:	bl	c5f0 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE>
    c920:	ldr	w8, [sp, #224]
    c924:	cbz	w8, c988 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0xd4>
    c928:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c92c:	ldr	d8, [x8]
    c930:	add	x8, sp, #0x8
    c934:	add	x8, x8, #0x10
    c938:	add	x0, sp, #0x8
    c93c:	add	x1, sp, #0xd8
    c940:	str	x8, [sp, #8]
    c944:	str	d8, [sp, #16]
    c948:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c94c:	ldp	x8, x9, [x19, #208]
    c950:	cmp	x8, x9
    c954:	b.eq	c994 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0xe0>  // b.none
    c958:	add	x9, x8, #0x10
    c95c:	str	x9, [x8]
    c960:	str	d8, [x8, #8]
    c964:	ldr	w9, [sp, #16]
    c968:	cbz	w9, c97c <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0xc8>
    c96c:	add	x1, sp, #0x8
    c970:	mov	x0, x8
    c974:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c978:	ldr	x8, [x19, #208]
    c97c:	add	x8, x8, #0xd0
    c980:	str	x8, [x19, #208]
    c984:	b	c9a4 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0xf0>
    c988:	ldr	x0, [sp, #216]
    c98c:	mov	w19, #0x1                   	// #1
    c990:	b	cbd8 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x324>
    c994:	add	x0, x19, #0xc8
    c998:	add	x2, sp, #0x8
    c99c:	mov	x1, x8
    c9a0:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c9a4:	ldr	w8, [sp, #16]
    c9a8:	ldr	x0, [sp, #8]
    c9ac:	cbz	w8, c9dc <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x128>
    c9b0:	add	x8, x8, x8, lsl #1
    c9b4:	sub	x21, x0, #0x28
    c9b8:	lsl	x22, x8, #4
    c9bc:	b	c9c8 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x114>
    c9c0:	subs	x22, x22, #0x30
    c9c4:	b.eq	c9d8 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x124>  // b.none
    c9c8:	ldr	x0, [x21, x22]
    c9cc:	cbz	x0, c9c0 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x10c>
    c9d0:	bl	0 <_ZdlPv>
    c9d4:	b	c9c0 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x10c>
    c9d8:	ldr	x0, [sp, #8]
    c9dc:	add	x8, sp, #0x8
    c9e0:	add	x8, x8, #0x10
    c9e4:	cmp	x0, x8
    c9e8:	b.eq	c9f0 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x13c>  // b.none
    c9ec:	bl	0 <free>
    c9f0:	ldr	w8, [x19, #40]
    c9f4:	cmp	w8, #0x1c
    c9f8:	b.ne	ca94 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x1e0>  // b.any
    c9fc:	ldp	x8, x9, [x19, #8]
    ca00:	mov	x0, x19
    ca04:	cmp	x8, x9
    ca08:	cset	w1, eq  // eq = none
    ca0c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    ca10:	str	w0, [x19, #40]
    ca14:	mov	x0, x19
    ca18:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ca1c:	ldr	w8, [x19, #40]
    ca20:	mov	x21, x0
    ca24:	mov	x0, x19
    ca28:	cmp	w8, #0x6
    ca2c:	b.ne	cacc <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x218>  // b.any
    ca30:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    ca34:	ldp	x8, x9, [x19, #8]
    ca38:	mov	x22, x0
    ca3c:	mov	x0, x19
    ca40:	cmp	x8, x9
    ca44:	cset	w1, eq  // eq = none
    ca48:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    ca4c:	mov	x24, #0x47200000            	// #1193279488
    ca50:	str	w0, [x19, #40]
    ca54:	mov	w23, #0x1                   	// #1
    ca58:	movk	x24, #0x1d, lsl #32
    ca5c:	cmp	w0, #0x24
    ca60:	b.hi	cc10 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x35c>  // b.pmore
    ca64:	mov	w8, w0
    ca68:	lsl	x9, x23, x8
    ca6c:	tst	x9, x24
    ca70:	b.eq	cae0 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x22c>  // b.none
    ca74:	mov	x0, x19
    ca78:	mov	x1, x20
    ca7c:	bl	bc10 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE>
    ca80:	tbnz	w0, #0, cad8 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x224>
    ca84:	ldr	w0, [x19, #40]
    ca88:	cmp	w0, #0x24
    ca8c:	b.ls	ca64 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x1b0>  // b.plast
    ca90:	b	cc10 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x35c>
    ca94:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ca98:	add	x8, x8, #0x0
    ca9c:	mov	w9, #0x103                 	// #259
    caa0:	mov	x0, x19
    caa4:	stp	x8, xzr, [sp, #8]
    caa8:	strh	w9, [sp, #24]
    caac:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    cab0:	stur	x0, [x29, #-8]
    cab4:	sub	x0, x29, #0x8
    cab8:	add	x2, sp, #0x8
    cabc:	mov	w1, #0x1                   	// #1
    cac0:	mov	w19, #0x1                   	// #1
    cac4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    cac8:	b	cba0 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x2ec>
    cacc:	mov	x1, x20
    cad0:	bl	bc10 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE>
    cad4:	tbz	w0, #0, cb00 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x24c>
    cad8:	mov	w19, #0x1                   	// #1
    cadc:	b	cba0 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x2ec>
    cae0:	cmp	x8, #0x7
    cae4:	b.ne	cc10 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x35c>  // b.any
    cae8:	ldp	x8, x9, [x19, #8]
    caec:	mov	x0, x19
    caf0:	cmp	x8, x9
    caf4:	cset	w1, eq  // eq = none
    caf8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    cafc:	str	w0, [x19, #40]
    cb00:	ldr	x8, [x19, #336]
    cb04:	cmp	x8, x21
    cb08:	b.ne	cc88 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x3d4>  // b.any
    cb0c:	ldr	x8, [x21, #48]
    cb10:	str	xzr, [x21, #48]
    cb14:	str	xzr, [sp, #8]
    cb18:	ldr	x20, [x19, #336]
    cb1c:	str	x8, [x19, #336]
    cb20:	cbz	x20, cb40 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x28c>
    cb24:	add	x0, x20, #0x30
    cb28:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    cb2c:	ldr	x1, [x20, #16]
    cb30:	mov	x0, x20
    cb34:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    cb38:	mov	x0, x20
    cb3c:	bl	0 <_ZdlPv>
    cb40:	add	x0, sp, #0x8
    cb44:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    cb48:	ldr	x9, [x19, #208]
    cb4c:	sub	x20, x9, #0xd0
    cb50:	str	x20, [x19, #208]
    cb54:	ldur	w8, [x9, #-200]
    cb58:	ldur	x0, [x9, #-208]
    cb5c:	cbz	w8, cb8c <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x2d8>
    cb60:	add	x8, x8, x8, lsl #1
    cb64:	sub	x19, x0, #0x28
    cb68:	lsl	x21, x8, #4
    cb6c:	b	cb78 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x2c4>
    cb70:	subs	x21, x21, #0x30
    cb74:	b.eq	cb88 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x2d4>  // b.none
    cb78:	ldr	x0, [x19, x21]
    cb7c:	cbz	x0, cb70 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x2bc>
    cb80:	bl	0 <_ZdlPv>
    cb84:	b	cb70 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x2bc>
    cb88:	ldr	x0, [x20]
    cb8c:	add	x8, x20, #0x10
    cb90:	cmp	x0, x8
    cb94:	b.eq	cb9c <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x2e8>  // b.none
    cb98:	bl	0 <free>
    cb9c:	mov	w19, wzr
    cba0:	ldr	w8, [sp, #224]
    cba4:	ldr	x0, [sp, #216]
    cba8:	cbz	w8, cbd8 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x324>
    cbac:	add	x8, x8, x8, lsl #1
    cbb0:	sub	x20, x0, #0x28
    cbb4:	lsl	x21, x8, #4
    cbb8:	b	cbc4 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x310>
    cbbc:	subs	x21, x21, #0x30
    cbc0:	b.eq	cbd4 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x320>  // b.none
    cbc4:	ldr	x0, [x20, x21]
    cbc8:	cbz	x0, cbbc <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x308>
    cbcc:	bl	0 <_ZdlPv>
    cbd0:	b	cbbc <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x308>
    cbd4:	ldr	x0, [sp, #216]
    cbd8:	add	x8, sp, #0xd8
    cbdc:	add	x8, x8, #0x10
    cbe0:	cmp	x0, x8
    cbe4:	b.eq	cbec <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x338>  // b.none
    cbe8:	bl	0 <free>
    cbec:	mov	w0, w19
    cbf0:	add	sp, sp, #0x270
    cbf4:	ldp	x20, x19, [sp, #64]
    cbf8:	ldp	x22, x21, [sp, #48]
    cbfc:	ldp	x24, x23, [sp, #32]
    cc00:	ldr	x28, [sp, #24]
    cc04:	ldp	x29, x30, [sp, #8]
    cc08:	ldr	d8, [sp], #80
    cc0c:	ret
    cc10:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    cc14:	add	x8, x8, #0x0
    cc18:	mov	w20, #0x103                 	// #259
    cc1c:	mov	x0, x19
    cc20:	stp	x8, xzr, [sp, #8]
    cc24:	strh	w20, [sp, #24]
    cc28:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    cc2c:	stur	x0, [x29, #-8]
    cc30:	sub	x0, x29, #0x8
    cc34:	add	x2, sp, #0x8
    cc38:	mov	w1, #0x1                   	// #1
    cc3c:	mov	w19, #0x1                   	// #1
    cc40:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    cc44:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    cc48:	add	x8, x8, #0x0
    cc4c:	sub	x0, x29, #0x8
    cc50:	add	x2, sp, #0x8
    cc54:	mov	w1, #0x1                   	// #1
    cc58:	strh	w20, [sp, #24]
    cc5c:	stp	x8, xzr, [sp, #8]
    cc60:	stur	x22, [x29, #-8]
    cc64:	b	cac4 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x210>
    cc68:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    cc6c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    cc70:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    cc74:	add	x0, x0, #0x0
    cc78:	add	x1, x1, #0x0
    cc7c:	add	x3, x3, #0x0
    cc80:	mov	w2, #0xc2d                 	// #3117
    cc84:	bl	0 <__assert_fail>
    cc88:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    cc8c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    cc90:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    cc94:	add	x0, x0, #0x0
    cc98:	add	x1, x1, #0x0
    cc9c:	add	x3, x3, #0x0
    cca0:	mov	w2, #0xc1                  	// #193
    cca4:	bl	0 <__assert_fail>

000000000000cca8 <_ZN4llvm8TGParser15ParseMultiClassEv>:
    cca8:	sub	sp, sp, #0x120
    ccac:	stp	x29, x30, [sp, #208]
    ccb0:	str	x28, [sp, #224]
    ccb4:	stp	x24, x23, [sp, #240]
    ccb8:	stp	x22, x21, [sp, #256]
    ccbc:	stp	x20, x19, [sp, #272]
    ccc0:	add	x29, sp, #0xd0
    ccc4:	ldr	w8, [x0, #40]
    ccc8:	cmp	w8, #0x20
    cccc:	b.ne	d2d8 <_ZN4llvm8TGParser15ParseMultiClassEv+0x630>  // b.any
    ccd0:	ldp	x8, x9, [x0, #8]
    ccd4:	mov	x19, x0
    ccd8:	cmp	x8, x9
    ccdc:	cset	w1, eq  // eq = none
    cce0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    cce4:	cmp	w0, #0x48
    cce8:	str	w0, [x19, #40]
    ccec:	b.ne	cd38 <_ZN4llvm8TGParser15ParseMultiClassEv+0x90>  // b.any
    ccf0:	sub	x8, x29, #0x20
    ccf4:	add	x23, x8, #0x10
    ccf8:	stur	x23, [x29, #-32]
    ccfc:	ldp	x20, x21, [x19, #48]
    cd00:	cbnz	x20, cd08 <_ZN4llvm8TGParser15ParseMultiClassEv+0x60>
    cd04:	cbnz	x21, d2f8 <_ZN4llvm8TGParser15ParseMultiClassEv+0x650>
    cd08:	cmp	x21, #0x10
    cd0c:	str	x21, [sp, #80]
    cd10:	b.cc	cd70 <_ZN4llvm8TGParser15ParseMultiClassEv+0xc8>  // b.lo, b.ul, b.last
    cd14:	sub	x0, x29, #0x20
    cd18:	add	x1, sp, #0x50
    cd1c:	mov	x2, xzr
    cd20:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    cd24:	ldr	x8, [sp, #80]
    cd28:	stur	x0, [x29, #-32]
    cd2c:	stur	x8, [x29, #-16]
    cd30:	cbnz	x21, cd78 <_ZN4llvm8TGParser15ParseMultiClassEv+0xd0>
    cd34:	b	cd98 <_ZN4llvm8TGParser15ParseMultiClassEv+0xf0>
    cd38:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    cd3c:	add	x8, x8, #0x0
    cd40:	mov	w9, #0x103                 	// #259
    cd44:	mov	x0, x19
    cd48:	stp	x8, xzr, [sp, #80]
    cd4c:	strh	w9, [sp, #96]
    cd50:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    cd54:	str	x0, [sp, #8]
    cd58:	add	x0, sp, #0x8
    cd5c:	add	x2, sp, #0x50
    cd60:	mov	w1, #0x1                   	// #1
    cd64:	mov	w20, #0x1                   	// #1
    cd68:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    cd6c:	b	d2b8 <_ZN4llvm8TGParser15ParseMultiClassEv+0x610>
    cd70:	mov	x0, x23
    cd74:	cbz	x21, cd98 <_ZN4llvm8TGParser15ParseMultiClassEv+0xf0>
    cd78:	cmp	x21, #0x1
    cd7c:	b.ne	cd8c <_ZN4llvm8TGParser15ParseMultiClassEv+0xe4>  // b.any
    cd80:	ldrb	w8, [x20]
    cd84:	strb	w8, [x0]
    cd88:	b	cd98 <_ZN4llvm8TGParser15ParseMultiClassEv+0xf0>
    cd8c:	mov	x1, x20
    cd90:	mov	x2, x21
    cd94:	bl	0 <memcpy>
    cd98:	ldr	x8, [sp, #80]
    cd9c:	ldur	x9, [x29, #-32]
    cda0:	mov	x0, x19
    cda4:	stur	x8, [x29, #-24]
    cda8:	strb	wzr, [x9, x8]
    cdac:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    cdb0:	ldr	x20, [x19, #344]
    cdb4:	mov	x21, x0
    cdb8:	mov	w0, #0x98                  	// #152
    cdbc:	bl	0 <_Znwm>
    cdc0:	mov	x22, x0
    cdc4:	ldp	x0, x1, [x29, #-32]
    cdc8:	str	x21, [sp, #80]
    cdcc:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    cdd0:	mov	x1, x0
    cdd4:	add	x2, sp, #0x50
    cdd8:	mov	w3, #0x1                   	// #1
    cddc:	mov	x0, x22
    cde0:	mov	x4, x20
    cde4:	mov	w5, wzr
    cde8:	mov	w6, wzr
    cdec:	add	x24, sp, #0x50
    cdf0:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    cdf4:	ldp	x20, x21, [x29, #-32]
    cdf8:	add	x24, x24, #0x10
    cdfc:	stp	xzr, xzr, [x22, #128]
    ce00:	str	xzr, [x22, #144]
    ce04:	stur	x22, [x29, #-56]
    ce08:	str	x24, [sp, #80]
    ce0c:	cbnz	x20, ce14 <_ZN4llvm8TGParser15ParseMultiClassEv+0x16c>
    ce10:	cbnz	x21, d2f8 <_ZN4llvm8TGParser15ParseMultiClassEv+0x650>
    ce14:	cmp	x21, #0x10
    ce18:	str	x21, [sp, #8]
    ce1c:	b.cc	ce44 <_ZN4llvm8TGParser15ParseMultiClassEv+0x19c>  // b.lo, b.ul, b.last
    ce20:	add	x0, sp, #0x50
    ce24:	add	x1, sp, #0x8
    ce28:	mov	x2, xzr
    ce2c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    ce30:	ldr	x8, [sp, #8]
    ce34:	str	x0, [sp, #80]
    ce38:	str	x8, [sp, #96]
    ce3c:	cbnz	x21, ce4c <_ZN4llvm8TGParser15ParseMultiClassEv+0x1a4>
    ce40:	b	ce6c <_ZN4llvm8TGParser15ParseMultiClassEv+0x1c4>
    ce44:	mov	x0, x24
    ce48:	cbz	x21, ce6c <_ZN4llvm8TGParser15ParseMultiClassEv+0x1c4>
    ce4c:	cmp	x21, #0x1
    ce50:	b.ne	ce60 <_ZN4llvm8TGParser15ParseMultiClassEv+0x1b8>  // b.any
    ce54:	ldrb	w8, [x20]
    ce58:	strb	w8, [x0]
    ce5c:	b	ce6c <_ZN4llvm8TGParser15ParseMultiClassEv+0x1c4>
    ce60:	mov	x1, x20
    ce64:	mov	x2, x21
    ce68:	bl	0 <memcpy>
    ce6c:	ldr	x8, [sp, #8]
    ce70:	ldr	x9, [sp, #80]
    ce74:	add	x0, x19, #0xe0
    ce78:	add	x1, sp, #0x50
    ce7c:	str	x8, [sp, #88]
    ce80:	strb	wzr, [x9, x8]
    ce84:	ldur	x8, [x29, #-56]
    ce88:	add	x9, sp, #0x50
    ce8c:	add	x22, x9, #0x20
    ce90:	stur	xzr, [x29, #-56]
    ce94:	str	x8, [sp, #112]
    ce98:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ce9c:	mov	x20, x0
    cea0:	mov	x0, x22
    cea4:	mov	x21, x1
    cea8:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ceac:	ldr	x0, [sp, #80]
    ceb0:	cmp	x0, x24
    ceb4:	b.eq	cebc <_ZN4llvm8TGParser15ParseMultiClassEv+0x214>  // b.none
    ceb8:	bl	0 <_ZdlPv>
    cebc:	sub	x0, x29, #0x38
    cec0:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    cec4:	tst	w21, #0xff
    cec8:	b.eq	cfd8 <_ZN4llvm8TGParser15ParseMultiClassEv+0x330>  // b.none
    cecc:	ldp	x9, x10, [x19, #8]
    ced0:	ldr	x8, [x20, #64]
    ced4:	mov	x0, x19
    ced8:	cmp	x9, x10
    cedc:	cset	w1, eq  // eq = none
    cee0:	str	x8, [x19, #328]
    cee4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    cee8:	cmp	w0, #0xa
    ceec:	str	w0, [x19, #40]
    cef0:	b.ne	cf08 <_ZN4llvm8TGParser15ParseMultiClassEv+0x260>  // b.any
    cef4:	mov	x0, x19
    cef8:	mov	x1, xzr
    cefc:	bl	a670 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE>
    cf00:	tbnz	w0, #0, d18c <_ZN4llvm8TGParser15ParseMultiClassEv+0x4e4>
    cf04:	ldr	w0, [x19, #40]
    cf08:	cmp	w0, #0xc
    cf0c:	b.ne	d07c <_ZN4llvm8TGParser15ParseMultiClassEv+0x3d4>  // b.any
    cf10:	ldp	x8, x9, [x19, #8]
    cf14:	mov	x0, x19
    cf18:	cmp	x8, x9
    cf1c:	cset	w1, eq  // eq = none
    cf20:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    cf24:	ldr	x1, [x19, #328]
    cf28:	str	w0, [x19, #40]
    cf2c:	add	x8, sp, #0x50
    cf30:	mov	x0, x19
    cf34:	add	x22, sp, #0x50
    cf38:	bl	4890 <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE>
    cf3c:	ldr	x8, [sp, #96]
    cf40:	cbz	x8, d11c <_ZN4llvm8TGParser15ParseMultiClassEv+0x474>
    cf44:	add	x8, sp, #0x8
    cf48:	add	x20, x22, #0x18
    cf4c:	add	x21, x8, #0x18
    cf50:	add	x24, x8, #0x28
    cf54:	b	cf60 <_ZN4llvm8TGParser15ParseMultiClassEv+0x2b8>
    cf58:	ldr	x8, [sp, #96]
    cf5c:	cbz	x8, d11c <_ZN4llvm8TGParser15ParseMultiClassEv+0x474>
    cf60:	ldr	x1, [x19, #328]
    cf64:	add	x2, sp, #0x50
    cf68:	mov	x0, x19
    cf6c:	bl	1cd8 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE>
    cf70:	tbnz	w0, #0, d174 <_ZN4llvm8TGParser15ParseMultiClassEv+0x4cc>
    cf74:	ldr	w0, [x19, #40]
    cf78:	cmp	w0, #0xe
    cf7c:	b.ne	d194 <_ZN4llvm8TGParser15ParseMultiClassEv+0x4ec>  // b.any
    cf80:	ldp	x8, x9, [x19, #8]
    cf84:	mov	x0, x19
    cf88:	cmp	x8, x9
    cf8c:	cset	w1, eq  // eq = none
    cf90:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    cf94:	ldr	x1, [x19, #328]
    cf98:	str	w0, [x19, #40]
    cf9c:	add	x8, sp, #0x8
    cfa0:	mov	x0, x19
    cfa4:	bl	4890 <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE>
    cfa8:	ldur	q0, [sp, #8]
    cfac:	ldr	x8, [sp, #24]
    cfb0:	mov	x0, x20
    cfb4:	mov	x1, x21
    cfb8:	str	q0, [sp, #80]
    cfbc:	str	x8, [sp, #96]
    cfc0:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    cfc4:	ldr	x0, [sp, #32]
    cfc8:	cmp	x0, x24
    cfcc:	b.eq	cf58 <_ZN4llvm8TGParser15ParseMultiClassEv+0x2b0>  // b.none
    cfd0:	bl	0 <free>
    cfd4:	b	cf58 <_ZN4llvm8TGParser15ParseMultiClassEv+0x2b0>
    cfd8:	ldur	x9, [x29, #-24]
    cfdc:	add	x8, sp, #0x8
    cfe0:	add	x20, x8, #0x10
    cfe4:	add	x0, sp, #0x8
    cfe8:	add	x1, x9, #0xc
    cfec:	stp	x20, xzr, [sp, #8]
    cff0:	strb	wzr, [sp, #24]
    cff4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
    cff8:	ldr	x8, [sp, #16]
    cffc:	mov	x21, #0x3fffffffffffffff    	// #4611686018427387903
    d000:	sub	x8, x21, x8
    d004:	cmp	x8, #0xb
    d008:	b.ls	d304 <_ZN4llvm8TGParser15ParseMultiClassEv+0x65c>  // b.plast
    d00c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d010:	add	x1, x1, #0x0
    d014:	add	x0, sp, #0x8
    d018:	mov	w2, #0xc                   	// #12
    d01c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    d020:	ldp	x1, x2, [x29, #-32]
    d024:	add	x0, sp, #0x8
    d028:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    d02c:	ldr	x8, [sp, #16]
    d030:	sub	x8, x21, x8
    d034:	cmp	x8, #0x10
    d038:	b.ls	d304 <_ZN4llvm8TGParser15ParseMultiClassEv+0x65c>  // b.plast
    d03c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d040:	add	x1, x1, #0x0
    d044:	add	x0, sp, #0x8
    d048:	mov	w2, #0x11                  	// #17
    d04c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    d050:	add	x8, sp, #0x50
    d054:	add	x21, x8, #0x10
    d058:	str	x21, [sp, #80]
    d05c:	mov	x8, x0
    d060:	ldr	x9, [x8], #16
    d064:	cmp	x9, x8
    d068:	b.eq	d0b4 <_ZN4llvm8TGParser15ParseMultiClassEv+0x40c>  // b.none
    d06c:	str	x9, [sp, #80]
    d070:	ldr	x9, [x0, #16]
    d074:	str	x9, [sp, #96]
    d078:	b	d0bc <_ZN4llvm8TGParser15ParseMultiClassEv+0x414>
    d07c:	mov	w8, wzr
    d080:	cmp	w0, #0x6
    d084:	b.ne	d1c0 <_ZN4llvm8TGParser15ParseMultiClassEv+0x518>  // b.any
    d088:	ldp	x8, x9, [x19, #8]
    d08c:	mov	x0, x19
    d090:	cmp	x8, x9
    d094:	cset	w1, eq  // eq = none
    d098:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    d09c:	cmp	w0, #0x7
    d0a0:	str	w0, [x19, #40]
    d0a4:	b.ne	d130 <_ZN4llvm8TGParser15ParseMultiClassEv+0x488>  // b.any
    d0a8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d0ac:	add	x8, x8, #0x0
    d0b0:	b	d27c <_ZN4llvm8TGParser15ParseMultiClassEv+0x5d4>
    d0b4:	ldr	q0, [x9]
    d0b8:	str	q0, [x21]
    d0bc:	ldr	x9, [x0, #8]
    d0c0:	mov	w10, #0x104                 	// #260
    d0c4:	add	x11, sp, #0x50
    d0c8:	str	x9, [sp, #88]
    d0cc:	stp	x8, xzr, [x0]
    d0d0:	strb	wzr, [x0, #16]
    d0d4:	mov	x0, x19
    d0d8:	sturh	w10, [x29, #-40]
    d0dc:	stp	x11, xzr, [x29, #-56]
    d0e0:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    d0e4:	str	x0, [x29, #24]
    d0e8:	add	x0, x29, #0x18
    d0ec:	sub	x2, x29, #0x38
    d0f0:	mov	w1, #0x1                   	// #1
    d0f4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    d0f8:	ldr	x0, [sp, #80]
    d0fc:	cmp	x0, x21
    d100:	b.eq	d108 <_ZN4llvm8TGParser15ParseMultiClassEv+0x460>  // b.none
    d104:	bl	0 <_ZdlPv>
    d108:	ldr	x0, [sp, #8]
    d10c:	cmp	x0, x20
    d110:	b.eq	d18c <_ZN4llvm8TGParser15ParseMultiClassEv+0x4e4>  // b.none
    d114:	bl	0 <_ZdlPv>
    d118:	b	d18c <_ZN4llvm8TGParser15ParseMultiClassEv+0x4e4>
    d11c:	ldr	x0, [sp, #104]
    d120:	add	x8, x22, #0x28
    d124:	cmp	x0, x8
    d128:	b.ne	d188 <_ZN4llvm8TGParser15ParseMultiClassEv+0x4e0>  // b.any
    d12c:	b	d18c <_ZN4llvm8TGParser15ParseMultiClassEv+0x4e4>
    d130:	mov	x0, x19
    d134:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d138:	mov	x22, #0x47000000            	// #1191182336
    d13c:	mov	x20, x0
    d140:	mov	w21, #0x1                   	// #1
    d144:	movk	x22, #0x18, lsl #32
    d148:	ldr	w8, [x19, #40]
    d14c:	cmp	w8, #0x24
    d150:	b.hi	d274 <_ZN4llvm8TGParser15ParseMultiClassEv+0x5cc>  // b.pmore
    d154:	lsl	x9, x21, x8
    d158:	tst	x9, x22
    d15c:	b.eq	d200 <_ZN4llvm8TGParser15ParseMultiClassEv+0x558>  // b.none
    d160:	ldr	x1, [x19, #328]
    d164:	mov	x0, x19
    d168:	bl	bc10 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE>
    d16c:	tbz	w0, #0, d148 <_ZN4llvm8TGParser15ParseMultiClassEv+0x4a0>
    d170:	b	d18c <_ZN4llvm8TGParser15ParseMultiClassEv+0x4e4>
    d174:	ldr	x0, [sp, #104]
    d178:	add	x8, sp, #0x50
    d17c:	add	x8, x8, #0x28
    d180:	cmp	x0, x8
    d184:	b.eq	d18c <_ZN4llvm8TGParser15ParseMultiClassEv+0x4e4>  // b.none
    d188:	bl	0 <free>
    d18c:	mov	w20, #0x1                   	// #1
    d190:	b	d2a8 <_ZN4llvm8TGParser15ParseMultiClassEv+0x600>
    d194:	ldr	x8, [sp, #104]
    d198:	add	x9, sp, #0x50
    d19c:	add	x9, x9, #0x28
    d1a0:	cmp	x8, x9
    d1a4:	b.eq	d1b4 <_ZN4llvm8TGParser15ParseMultiClassEv+0x50c>  // b.none
    d1a8:	mov	x0, x8
    d1ac:	bl	0 <free>
    d1b0:	ldr	w0, [x19, #40]
    d1b4:	mov	w8, #0x1                   	// #1
    d1b8:	cmp	w0, #0x6
    d1bc:	b.eq	d088 <_ZN4llvm8TGParser15ParseMultiClassEv+0x3e0>  // b.none
    d1c0:	tbz	w8, #0, d1e8 <_ZN4llvm8TGParser15ParseMultiClassEv+0x540>
    d1c4:	cmp	w0, #0xd
    d1c8:	b.ne	d1f4 <_ZN4llvm8TGParser15ParseMultiClassEv+0x54c>  // b.any
    d1cc:	ldp	x8, x9, [x19, #8]
    d1d0:	mov	x0, x19
    d1d4:	cmp	x8, x9
    d1d8:	cset	w1, eq  // eq = none
    d1dc:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    d1e0:	str	w0, [x19, #40]
    d1e4:	b	d268 <_ZN4llvm8TGParser15ParseMultiClassEv+0x5c0>
    d1e8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d1ec:	add	x8, x8, #0x0
    d1f0:	b	d27c <_ZN4llvm8TGParser15ParseMultiClassEv+0x5d4>
    d1f4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d1f8:	add	x8, x8, #0x0
    d1fc:	b	d27c <_ZN4llvm8TGParser15ParseMultiClassEv+0x5d4>
    d200:	cmp	x8, #0x7
    d204:	b.ne	d274 <_ZN4llvm8TGParser15ParseMultiClassEv+0x5cc>  // b.any
    d208:	ldp	x8, x9, [x19, #8]
    d20c:	mov	x0, x19
    d210:	cmp	x8, x9
    d214:	cset	w1, eq  // eq = none
    d218:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    d21c:	ldr	x8, [x19, #336]
    d220:	str	w0, [x19, #40]
    d224:	cmp	x8, x20
    d228:	b.ne	d310 <_ZN4llvm8TGParser15ParseMultiClassEv+0x668>  // b.any
    d22c:	ldr	x8, [x20, #48]
    d230:	str	xzr, [x20, #48]
    d234:	str	xzr, [sp, #80]
    d238:	ldr	x20, [x19, #336]
    d23c:	str	x8, [x19, #336]
    d240:	cbz	x20, d260 <_ZN4llvm8TGParser15ParseMultiClassEv+0x5b8>
    d244:	add	x0, x20, #0x30
    d248:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d24c:	ldr	x1, [x20, #16]
    d250:	mov	x0, x20
    d254:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d258:	mov	x0, x20
    d25c:	bl	0 <_ZdlPv>
    d260:	add	x0, sp, #0x50
    d264:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d268:	mov	w20, wzr
    d26c:	str	xzr, [x19, #328]
    d270:	b	d2a8 <_ZN4llvm8TGParser15ParseMultiClassEv+0x600>
    d274:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d278:	add	x8, x8, #0x0
    d27c:	mov	w9, #0x103                 	// #259
    d280:	mov	x0, x19
    d284:	stp	x8, xzr, [sp, #80]
    d288:	strh	w9, [sp, #96]
    d28c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    d290:	str	x0, [sp, #8]
    d294:	add	x0, sp, #0x8
    d298:	add	x2, sp, #0x50
    d29c:	mov	w1, #0x1                   	// #1
    d2a0:	mov	w20, #0x1                   	// #1
    d2a4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    d2a8:	ldur	x0, [x29, #-32]
    d2ac:	cmp	x0, x23
    d2b0:	b.eq	d2b8 <_ZN4llvm8TGParser15ParseMultiClassEv+0x610>  // b.none
    d2b4:	bl	0 <_ZdlPv>
    d2b8:	mov	w0, w20
    d2bc:	ldp	x20, x19, [sp, #272]
    d2c0:	ldp	x22, x21, [sp, #256]
    d2c4:	ldp	x24, x23, [sp, #240]
    d2c8:	ldr	x28, [sp, #224]
    d2cc:	ldp	x29, x30, [sp, #208]
    d2d0:	add	sp, sp, #0x120
    d2d4:	ret
    d2d8:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d2dc:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d2e0:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d2e4:	add	x0, x0, #0x0
    d2e8:	add	x1, x1, #0x0
    d2ec:	add	x3, x3, #0x0
    d2f0:	mov	w2, #0xc63                 	// #3171
    d2f4:	bl	0 <__assert_fail>
    d2f8:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d2fc:	add	x0, x0, #0x0
    d300:	bl	0 <_ZSt19__throw_logic_errorPKc>
    d304:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d308:	add	x0, x0, #0x0
    d30c:	bl	0 <_ZSt20__throw_length_errorPKc>
    d310:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d314:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d318:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d31c:	add	x0, x0, #0x0
    d320:	add	x1, x1, #0x0
    d324:	add	x3, x3, #0x0
    d328:	mov	w2, #0xc1                  	// #193
    d32c:	bl	0 <__assert_fail>

000000000000d330 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE>:
    d330:	str	d8, [sp, #-112]!
    d334:	stp	x29, x30, [sp, #16]
    d338:	stp	x28, x27, [sp, #32]
    d33c:	stp	x26, x25, [sp, #48]
    d340:	stp	x24, x23, [sp, #64]
    d344:	stp	x22, x21, [sp, #80]
    d348:	stp	x20, x19, [sp, #96]
    d34c:	mov	x29, sp
    d350:	sub	sp, sp, #0x2e0
    d354:	ldr	w8, [x0, #40]
    d358:	cmp	w8, #0x1a
    d35c:	b.ne	de40 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xb10>  // b.any
    d360:	ldp	x8, x9, [x0, #8]
    d364:	mov	x20, x1
    d368:	mov	x19, x0
    d36c:	cmp	x8, x9
    d370:	cset	w1, eq  // eq = none
    d374:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    d378:	str	w0, [x19, #40]
    d37c:	mov	x0, x19
    d380:	mov	x1, x20
    d384:	bl	33f8 <_ZN4llvm8TGParser15ParseObjectNameEPNS_10MultiClassE>
    d388:	cbz	x0, db44 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x814>
    d38c:	ldrb	w8, [x0, #8]
    d390:	mov	x21, x0
    d394:	cmp	w8, #0x18
    d398:	b.ne	d3f0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xc0>  // b.any
    d39c:	ldr	x0, [x19, #344]
    d3a0:	bl	0 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv>
    d3a4:	mov	x21, x0
    d3a8:	cbz	x20, d3f0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xc0>
    d3ac:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d3b0:	add	x0, x0, #0x0
    d3b4:	mov	w1, #0x4                   	// #4
    d3b8:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    d3bc:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d3c0:	mov	x2, x0
    d3c4:	add	x3, x3, #0x0
    d3c8:	mov	w4, #0x2                   	// #2
    d3cc:	mov	x0, x20
    d3d0:	mov	x1, x20
    d3d4:	bl	547c <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE>
    d3d8:	adrp	x1, 0 <_ZN4llvm11StringRecTy6SharedE>
    d3dc:	ldr	x1, [x1]
    d3e0:	bl	0 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>
    d3e4:	mov	x1, x21
    d3e8:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
    d3ec:	mov	x21, x0
    d3f0:	ldr	w8, [x19, #40]
    d3f4:	cmp	w8, #0xc
    d3f8:	b.ne	db4c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x81c>  // b.any
    d3fc:	str	x20, [sp, #48]
    d400:	stp	xzr, xzr, [x29, #-32]
    d404:	stur	xzr, [x29, #-16]
    d408:	ldp	x8, x9, [x19, #8]
    d40c:	mov	x0, x19
    d410:	cmp	x8, x9
    d414:	cset	w1, eq  // eq = none
    d418:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    d41c:	str	w0, [x19, #40]
    d420:	mov	x0, x19
    d424:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    d428:	stur	x0, [x29, #-40]
    d42c:	sub	x8, x29, #0x70
    d430:	mov	w2, #0x1                   	// #1
    d434:	mov	x0, x19
    d438:	mov	x1, xzr
    d43c:	sub	x20, x29, #0x70
    d440:	bl	4408 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb>
    d444:	add	x8, x19, #0xe0
    d448:	add	x9, x20, #0x18
    d44c:	str	x8, [sp, #56]
    d450:	sub	x8, x29, #0x100
    d454:	add	x10, sp, #0xb0
    d458:	str	x9, [sp, #16]
    d45c:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d460:	add	x11, sp, #0x50
    d464:	add	x23, x8, #0x10
    d468:	add	x8, x10, #0x10
    d46c:	ldr	d8, [x9]
    d470:	str	x8, [sp, #40]
    d474:	add	x8, x11, #0x10
    d478:	str	x8, [sp, #32]
    d47c:	add	x8, x11, #0x18
    d480:	str	x8, [sp, #8]
    d484:	add	x8, x11, #0x28
    d488:	str	wzr, [sp, #28]
    d48c:	str	x8, [sp]
    d490:	b	d498 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x168>
    d494:	cbnz	w20, dbb8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x888>
    d498:	ldur	x8, [x29, #-96]
    d49c:	cbz	x8, dcac <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x97c>
    d4a0:	ldr	x8, [x8]
    d4a4:	cbz	x8, dde0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xab0>
    d4a8:	ldrb	w9, [x8, #8]
    d4ac:	cmp	w9, #0x12
    d4b0:	b.ne	de00 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xad0>  // b.any
    d4b4:	ldp	x27, x28, [x8, #24]
    d4b8:	stur	x23, [x29, #-256]
    d4bc:	cbz	x27, d504 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x1d4>
    d4c0:	cmp	x28, #0x10
    d4c4:	mov	x0, x23
    d4c8:	str	x28, [sp, #80]
    d4cc:	b.cc	d4ec <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x1bc>  // b.lo, b.ul, b.last
    d4d0:	sub	x0, x29, #0x100
    d4d4:	add	x1, sp, #0x50
    d4d8:	mov	x2, xzr
    d4dc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    d4e0:	ldr	x8, [sp, #80]
    d4e4:	stur	x0, [x29, #-256]
    d4e8:	stur	x8, [x29, #-240]
    d4ec:	cbz	x28, d51c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x1ec>
    d4f0:	cmp	x28, #0x1
    d4f4:	b.ne	d510 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x1e0>  // b.any
    d4f8:	ldrb	w8, [x27]
    d4fc:	strb	w8, [x0]
    d500:	b	d51c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x1ec>
    d504:	stur	xzr, [x29, #-248]
    d508:	sturb	wzr, [x29, #-240]
    d50c:	b	d52c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x1fc>
    d510:	mov	x1, x27
    d514:	mov	x2, x28
    d518:	bl	0 <memcpy>
    d51c:	ldr	x8, [sp, #80]
    d520:	ldur	x9, [x29, #-256]
    d524:	stur	x8, [x29, #-248]
    d528:	strb	wzr, [x9, x8]
    d52c:	ldr	x0, [sp, #56]
    d530:	sub	x1, x29, #0x100
    d534:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d538:	ldur	x8, [x29, #-256]
    d53c:	ldr	x27, [x0]
    d540:	cmp	x8, x23
    d544:	b.eq	d550 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x220>  // b.none
    d548:	mov	x0, x8
    d54c:	bl	0 <_ZdlPv>
    d550:	cbz	x27, de20 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xaf0>
    d554:	ldur	w24, [x29, #-80]
    d558:	ldr	w22, [x27, #64]
    d55c:	cmp	w22, w24
    d560:	b.cc	db84 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x854>  // b.lo, b.ul, b.last
    d564:	ldur	x20, [x29, #-88]
    d568:	ldr	x26, [x27, #56]
    d56c:	stur	x23, [x29, #-256]
    d570:	stur	d8, [x29, #-248]
    d574:	cbz	w22, d650 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x320>
    d578:	mov	w8, wzr
    d57c:	mov	x25, xzr
    d580:	mov	w9, #0x8                   	// #8
    d584:	mov	x10, x23
    d588:	b	d5c8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x298>
    d58c:	cmp	w8, w9
    d590:	b.cs	d624 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x2f4>  // b.hs, b.nlast
    d594:	lsl	x11, x25, #3
    d598:	ldr	x12, [x26, x11]
    d59c:	add	x13, x10, w8, uxtw #4
    d5a0:	cmp	w8, w9
    d5a4:	str	x12, [x13]
    d5a8:	ldr	x11, [x20, x11]
    d5ac:	str	x11, [x13, #8]
    d5b0:	b.cs	ddc0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa90>  // b.hs, b.nlast
    d5b4:	add	x25, x25, #0x1
    d5b8:	add	w8, w8, #0x1
    d5bc:	cmp	x25, x22
    d5c0:	stur	w8, [x29, #-248]
    d5c4:	b.eq	d650 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x320>  // b.none
    d5c8:	cmp	x25, x24
    d5cc:	b.cc	d58c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x25c>  // b.lo, b.ul, b.last
    d5d0:	ldr	x9, [x26, x25, lsl #3]
    d5d4:	ldr	x8, [x27, #72]
    d5d8:	ldr	x10, [x8], #24
    d5dc:	cmp	x10, x9
    d5e0:	b.ne	d5d8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x2a8>  // b.any
    d5e4:	ldur	x28, [x8, #-8]
    d5e8:	ldr	x8, [x28]
    d5ec:	mov	x0, x28
    d5f0:	ldr	x8, [x8, #24]
    d5f4:	blr	x8
    d5f8:	tbz	w0, #0, d738 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x408>
    d5fc:	ldp	w8, w9, [x29, #-248]
    d600:	cmp	w8, w9
    d604:	b.cs	d63c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x30c>  // b.hs, b.nlast
    d608:	ldur	x10, [x29, #-256]
    d60c:	ldr	x11, [x26, x25, lsl #3]
    d610:	cmp	w8, w9
    d614:	add	x12, x10, w8, uxtw #4
    d618:	stp	x11, x28, [x12]
    d61c:	b.cc	d5b4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x284>  // b.lo, b.ul, b.last
    d620:	b	ddc0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa90>
    d624:	sub	x0, x29, #0x100
    d628:	mov	x1, xzr
    d62c:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d630:	ldp	w8, w9, [x29, #-248]
    d634:	ldur	x10, [x29, #-256]
    d638:	b	d594 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x264>
    d63c:	sub	x0, x29, #0x100
    d640:	mov	x1, xzr
    d644:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d648:	ldp	w8, w9, [x29, #-248]
    d64c:	b	d608 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x2d8>
    d650:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d654:	mov	w1, #0x4                   	// #4
    d658:	add	x0, x0, #0x0
    d65c:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    d660:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d664:	mov	x2, x0
    d668:	mov	w4, #0x2                   	// #2
    d66c:	mov	x0, x27
    d670:	mov	x1, x27
    d674:	add	x3, x3, #0x0
    d678:	bl	547c <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE>
    d67c:	ldp	w8, w9, [x29, #-248]
    d680:	mov	x28, x0
    d684:	cmp	w8, w9
    d688:	b.cs	db30 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x800>  // b.hs, b.nlast
    d68c:	ldur	x10, [x29, #-256]
    d690:	cmp	w8, w9
    d694:	add	x9, x10, w8, uxtw #4
    d698:	stp	x28, x21, [x9]
    d69c:	b.cs	ddc0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa90>  // b.hs, b.nlast
    d6a0:	ldr	x9, [sp, #48]
    d6a4:	add	w8, w8, #0x1
    d6a8:	add	x1, x27, #0x80
    d6ac:	sub	x2, x29, #0x100
    d6b0:	cmp	x9, #0x0
    d6b4:	cset	w3, eq  // eq = none
    d6b8:	sub	x4, x29, #0x20
    d6bc:	sub	x5, x29, #0x28
    d6c0:	mov	x0, x19
    d6c4:	stur	w8, [x29, #-248]
    d6c8:	bl	2318 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE>
    d6cc:	tbnz	w0, #0, db18 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x7e8>
    d6d0:	ldr	w8, [x19, #40]
    d6d4:	cmp	w8, #0xe
    d6d8:	b.ne	d7d8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x4a8>  // b.any
    d6dc:	ldp	x8, x9, [x19, #8]
    d6e0:	mov	x0, x19
    d6e4:	cmp	x8, x9
    d6e8:	cset	w1, eq  // eq = none
    d6ec:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    d6f0:	cmp	w0, #0x48
    d6f4:	str	w0, [x19, #40]
    d6f8:	b.ne	d7e0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x4b0>  // b.any
    d6fc:	mov	x0, x19
    d700:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    d704:	stur	x0, [x29, #-40]
    d708:	ldr	w8, [x19, #40]
    d70c:	and	w8, w8, #0xfffffffc
    d710:	cmp	w8, #0x48
    d714:	b.ne	de80 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xb50>  // b.any
    d718:	ldr	x0, [x19, #344]
    d71c:	ldp	x1, x2, [x19, #48]
    d720:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d724:	cbz	x0, d918 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x5e8>
    d728:	mov	w8, #0x1                   	// #1
    d72c:	mov	w20, #0x3                   	// #3
    d730:	str	w8, [sp, #28]
    d734:	b	db1c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x7ec>
    d738:	mov	w8, #0x109                 	// #265
    d73c:	stp	xzr, xzr, [sp, #280]
    d740:	strh	w8, [sp, #296]
    d744:	str	w25, [sp, #280]
    d748:	mov	w8, #0x903                 	// #2307
    d74c:	add	x9, sp, #0x130
    d750:	strh	w8, [sp, #320]
    d754:	ldr	x8, [sp, #280]
    d758:	str	x9, [sp, #328]
    d75c:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d760:	add	x9, x9, #0x0
    d764:	str	x9, [sp, #336]
    d768:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d76c:	add	x9, x9, #0x0
    d770:	stp	x9, x8, [sp, #304]
    d774:	mov	w8, #0x302                 	// #770
    d778:	strh	w8, [sp, #344]
    d77c:	ldr	x0, [x26, x25, lsl #3]
    d780:	ldur	x28, [x29, #-40]
    d784:	ldr	x8, [x0]
    d788:	ldr	x9, [x8, #48]
    d78c:	add	x8, sp, #0x50
    d790:	blr	x9
    d794:	ldrb	w8, [sp, #344]
    d798:	mov	w20, #0x104                 	// #260
    d79c:	add	x9, sp, #0x50
    d7a0:	strh	w20, [sp, #272]
    d7a4:	cmp	w8, #0x1
    d7a8:	stp	x9, xzr, [sp, #256]
    d7ac:	b.eq	d814 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x4e4>  // b.none
    d7b0:	cbnz	w8, d82c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x4fc>
    d7b4:	mov	w8, #0x100                 	// #256
    d7b8:	strh	w8, [sp, #368]
    d7bc:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d7c0:	add	x8, x8, #0x0
    d7c4:	stp	x8, xzr, [sp, #232]
    d7c8:	mov	w8, #0x103                 	// #259
    d7cc:	stp	xzr, xzr, [sp, #352]
    d7d0:	strh	w8, [sp, #248]
    d7d4:	b	d8b4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x584>
    d7d8:	mov	w20, #0x3                   	// #3
    d7dc:	b	db1c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x7ec>
    d7e0:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d7e4:	add	x8, x8, #0x0
    d7e8:	stp	x8, xzr, [sp, #80]
    d7ec:	mov	w8, #0x103                 	// #259
    d7f0:	mov	x0, x19
    d7f4:	strh	w8, [sp, #96]
    d7f8:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    d7fc:	str	x0, [sp, #176]
    d800:	add	x0, sp, #0xb0
    d804:	add	x2, sp, #0x50
    d808:	mov	w1, #0x1                   	// #1
    d80c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    d810:	b	db18 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x7e8>
    d814:	ldr	x8, [sp, #272]
    d818:	ldr	q0, [sp, #256]
    d81c:	str	x8, [sp, #368]
    d820:	and	w8, w8, #0xff
    d824:	str	q0, [sp, #352]
    d828:	b	d894 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x564>
    d82c:	ldrb	w9, [sp, #345]
    d830:	ldr	x10, [sp, #328]
    d834:	cmp	w9, #0x1
    d838:	mov	w9, #0x2                   	// #2
    d83c:	csel	w11, w8, w9, eq  // eq = none
    d840:	add	x9, sp, #0x148
    d844:	csel	x9, x10, x9, eq  // eq = none
    d848:	add	x10, sp, #0x50
    d84c:	stp	x9, x10, [sp, #352]
    d850:	cmp	w11, #0x2
    d854:	mov	w10, #0x4                   	// #4
    d858:	strb	w11, [sp, #368]
    d85c:	strb	w10, [sp, #369]
    d860:	b.ne	d894 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x564>  // b.any
    d864:	ldrb	w8, [x9, #16]
    d868:	cbz	w8, de60 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xb30>
    d86c:	ldrb	w8, [x9, #17]
    d870:	cmp	w8, #0x1
    d874:	b.eq	de60 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xb30>  // b.none
    d878:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d87c:	add	x8, x8, #0x0
    d880:	stp	x8, xzr, [sp, #232]
    d884:	mov	w8, #0x103                 	// #259
    d888:	strh	w8, [sp, #248]
    d88c:	mov	w8, #0x2                   	// #2
    d890:	b	d8c4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x594>
    d894:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d898:	add	x9, x9, #0x0
    d89c:	stp	x9, xzr, [sp, #232]
    d8a0:	cmp	w8, #0x1
    d8a4:	mov	w9, #0x103                 	// #259
    d8a8:	strh	w9, [sp, #248]
    d8ac:	b.eq	d964 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x634>  // b.none
    d8b0:	cbnz	w8, d8c4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x594>
    d8b4:	mov	w8, #0x100                 	// #256
    d8b8:	stp	xzr, xzr, [sp, #384]
    d8bc:	strh	w8, [sp, #400]
    d8c0:	b	d974 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x644>
    d8c4:	ldrb	w9, [sp, #369]
    d8c8:	ldr	x10, [sp, #352]
    d8cc:	cmp	w9, #0x1
    d8d0:	mov	w9, #0x2                   	// #2
    d8d4:	csel	w9, w8, w9, eq  // eq = none
    d8d8:	add	x8, sp, #0x160
    d8dc:	csel	x8, x10, x8, eq  // eq = none
    d8e0:	adrp	x10, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d8e4:	add	x10, x10, #0x0
    d8e8:	strb	w9, [sp, #400]
    d8ec:	cmp	w9, #0x2
    d8f0:	mov	w9, #0x3                   	// #3
    d8f4:	stp	x8, x10, [sp, #384]
    d8f8:	strb	w9, [sp, #401]
    d8fc:	b.ne	d974 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x644>  // b.any
    d900:	ldrb	w9, [x8, #16]
    d904:	cbz	w9, de60 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xb30>
    d908:	ldrb	w8, [x8, #17]
    d90c:	cmp	w8, #0x1
    d910:	b.ne	d974 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x644>  // b.any
    d914:	b	de60 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xb30>
    d918:	add	x8, sp, #0x50
    d91c:	mov	w2, #0x1                   	// #1
    d920:	mov	x0, x19
    d924:	mov	x1, xzr
    d928:	bl	4408 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb>
    d92c:	ldr	q0, [sp, #80]
    d930:	ldr	x8, [sp, #96]
    d934:	ldp	x1, x0, [sp, #8]
    d938:	stur	q0, [x29, #-112]
    d93c:	stur	x8, [x29, #-96]
    d940:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d944:	ldr	x0, [sp, #104]
    d948:	ldr	x8, [sp]
    d94c:	cmp	x0, x8
    d950:	b.eq	d958 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x628>  // b.none
    d954:	bl	0 <free>
    d958:	mov	w20, wzr
    d95c:	str	wzr, [sp, #28]
    d960:	b	db1c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x7ec>
    d964:	ldur	q0, [sp, #232]
    d968:	ldr	x8, [sp, #248]
    d96c:	str	q0, [sp, #384]
    d970:	str	x8, [sp, #400]
    d974:	ldr	x0, [x27]
    d978:	ldr	x8, [x0]
    d97c:	ldr	x9, [x8, #48]
    d980:	add	x8, sp, #0xb0
    d984:	blr	x9
    d988:	ldrb	w8, [sp, #400]
    d98c:	add	x9, sp, #0xb0
    d990:	strh	w20, [sp, #224]
    d994:	stp	x9, xzr, [sp, #208]
    d998:	cmp	w8, #0x1
    d99c:	b.eq	d9c8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x698>  // b.none
    d9a0:	cbnz	w8, d9e0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x6b0>
    d9a4:	mov	w8, #0x100                 	// #256
    d9a8:	strh	w8, [sp, #432]
    d9ac:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d9b0:	add	x8, x8, #0x0
    d9b4:	stp	x8, xzr, [sp, #152]
    d9b8:	mov	w8, #0x103                 	// #259
    d9bc:	stp	xzr, xzr, [sp, #416]
    d9c0:	strh	w8, [sp, #168]
    d9c4:	b	da68 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x738>
    d9c8:	ldr	x8, [sp, #224]
    d9cc:	ldr	q0, [sp, #208]
    d9d0:	str	x8, [sp, #432]
    d9d4:	and	w8, w8, #0xff
    d9d8:	str	q0, [sp, #416]
    d9dc:	b	da48 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x718>
    d9e0:	ldrb	w9, [sp, #401]
    d9e4:	ldr	x10, [sp, #384]
    d9e8:	cmp	w9, #0x1
    d9ec:	mov	w9, #0x2                   	// #2
    d9f0:	csel	w11, w8, w9, eq  // eq = none
    d9f4:	add	x9, sp, #0x180
    d9f8:	csel	x9, x10, x9, eq  // eq = none
    d9fc:	add	x10, sp, #0xb0
    da00:	stp	x9, x10, [sp, #416]
    da04:	cmp	w11, #0x2
    da08:	mov	w10, #0x4                   	// #4
    da0c:	strb	w11, [sp, #432]
    da10:	strb	w10, [sp, #433]
    da14:	b.ne	da48 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x718>  // b.any
    da18:	ldrb	w8, [x9, #16]
    da1c:	cbz	w8, de60 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xb30>
    da20:	ldrb	w8, [x9, #17]
    da24:	cmp	w8, #0x1
    da28:	b.eq	de60 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xb30>  // b.none
    da2c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    da30:	add	x8, x8, #0x0
    da34:	stp	x8, xzr, [sp, #152]
    da38:	mov	w8, #0x103                 	// #259
    da3c:	strh	w8, [sp, #168]
    da40:	mov	w8, #0x2                   	// #2
    da44:	b	da78 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x748>
    da48:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    da4c:	add	x9, x9, #0x0
    da50:	stp	x9, xzr, [sp, #152]
    da54:	cmp	w8, #0x1
    da58:	mov	w9, #0x103                 	// #259
    da5c:	strh	w9, [sp, #168]
    da60:	b.eq	dacc <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x79c>  // b.none
    da64:	cbnz	w8, da78 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x748>
    da68:	mov	w8, #0x100                 	// #256
    da6c:	stp	xzr, xzr, [sp, #448]
    da70:	strh	w8, [sp, #464]
    da74:	b	dadc <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x7ac>
    da78:	ldrb	w9, [sp, #433]
    da7c:	ldr	x10, [sp, #416]
    da80:	cmp	w9, #0x1
    da84:	mov	w9, #0x2                   	// #2
    da88:	csel	w9, w8, w9, eq  // eq = none
    da8c:	add	x8, sp, #0x1a0
    da90:	csel	x8, x10, x8, eq  // eq = none
    da94:	adrp	x10, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    da98:	add	x10, x10, #0x0
    da9c:	strb	w9, [sp, #464]
    daa0:	cmp	w9, #0x2
    daa4:	mov	w9, #0x3                   	// #3
    daa8:	stp	x8, x10, [sp, #448]
    daac:	strb	w9, [sp, #465]
    dab0:	b.ne	dadc <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x7ac>  // b.any
    dab4:	ldrb	w9, [x8, #16]
    dab8:	cbz	w9, de60 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xb30>
    dabc:	ldrb	w8, [x8, #17]
    dac0:	cmp	w8, #0x1
    dac4:	b.ne	dadc <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x7ac>  // b.any
    dac8:	b	de60 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xb30>
    dacc:	ldur	q0, [sp, #152]
    dad0:	ldr	x8, [sp, #168]
    dad4:	str	q0, [sp, #448]
    dad8:	str	x8, [sp, #464]
    dadc:	add	x0, x29, #0x8
    dae0:	add	x2, sp, #0x1c0
    dae4:	mov	w1, #0x1                   	// #1
    dae8:	str	x28, [x29, #8]
    daec:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    daf0:	ldr	x0, [sp, #176]
    daf4:	ldr	x8, [sp, #40]
    daf8:	cmp	x0, x8
    dafc:	b.eq	db04 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x7d4>  // b.none
    db00:	bl	0 <_ZdlPv>
    db04:	ldr	x0, [sp, #80]
    db08:	ldr	x8, [sp, #32]
    db0c:	cmp	x0, x8
    db10:	b.eq	db18 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x7e8>  // b.none
    db14:	bl	0 <_ZdlPv>
    db18:	mov	w20, #0x1                   	// #1
    db1c:	ldur	x0, [x29, #-256]
    db20:	cmp	x0, x23
    db24:	b.eq	d494 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x164>  // b.none
    db28:	bl	0 <free>
    db2c:	b	d494 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x164>
    db30:	sub	x0, x29, #0x100
    db34:	mov	x1, xzr
    db38:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    db3c:	ldp	w8, w9, [x29, #-248]
    db40:	b	d68c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x35c>
    db44:	mov	w20, #0x1                   	// #1
    db48:	b	dcf8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x9c8>
    db4c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    db50:	add	x8, x8, #0x0
    db54:	mov	w9, #0x103                 	// #259
    db58:	mov	x0, x19
    db5c:	stp	x8, xzr, [x29, #-256]
    db60:	sturh	w9, [x29, #-240]
    db64:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    db68:	stur	x0, [x29, #-112]
    db6c:	sub	x0, x29, #0x70
    db70:	sub	x2, x29, #0x100
    db74:	mov	w1, #0x1                   	// #1
    db78:	mov	w20, #0x1                   	// #1
    db7c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    db80:	b	dcf8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x9c8>
    db84:	ldur	x8, [x29, #-40]
    db88:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    db8c:	add	x9, x9, #0x0
    db90:	stp	x9, xzr, [x29, #-256]
    db94:	mov	w9, #0x103                 	// #259
    db98:	sturh	w9, [x29, #-240]
    db9c:	str	x8, [sp, #80]
    dba0:	add	x0, sp, #0x50
    dba4:	sub	x2, x29, #0x100
    dba8:	mov	w1, #0x1                   	// #1
    dbac:	mov	w20, #0x1                   	// #1
    dbb0:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    dbb4:	b	dcb0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x980>
    dbb8:	cmp	w20, #0x3
    dbbc:	b.ne	dcac <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x97c>  // b.any
    dbc0:	ldr	w8, [sp, #28]
    dbc4:	tbz	w8, #0, dd20 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x9f0>
    dbc8:	sub	x8, x29, #0x100
    dbcc:	mov	x0, x19
    dbd0:	mov	x1, xzr
    dbd4:	mov	w2, wzr
    dbd8:	sub	x23, x29, #0x100
    dbdc:	bl	4408 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb>
    dbe0:	ldur	x8, [x29, #-240]
    dbe4:	cbz	x8, dc90 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x960>
    dbe8:	add	x8, sp, #0x50
    dbec:	add	x20, x23, #0x18
    dbf0:	add	x21, x8, #0x18
    dbf4:	add	x24, x8, #0x28
    dbf8:	ldp	x22, x25, [x29, #-32]
    dbfc:	cmp	x22, x25
    dc00:	b.eq	dc24 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x8f4>  // b.none
    dc04:	sub	x2, x29, #0x100
    dc08:	mov	x0, x19
    dc0c:	mov	x1, x22
    dc10:	bl	1c50 <_ZN4llvm8TGParser11AddSubClassERNS_12RecordsEntryERNS_17SubClassReferenceE>
    dc14:	tbnz	w0, #0, dc90 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x960>
    dc18:	add	x22, x22, #0x10
    dc1c:	cmp	x25, x22
    dc20:	b.ne	dc04 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x8d4>  // b.any
    dc24:	ldr	w8, [x19, #40]
    dc28:	cmp	w8, #0xe
    dc2c:	b.ne	ddb8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa88>  // b.any
    dc30:	ldp	x8, x9, [x19, #8]
    dc34:	mov	x0, x19
    dc38:	cmp	x8, x9
    dc3c:	cset	w1, eq  // eq = none
    dc40:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    dc44:	str	w0, [x19, #40]
    dc48:	add	x8, sp, #0x50
    dc4c:	mov	x0, x19
    dc50:	mov	x1, xzr
    dc54:	mov	w2, wzr
    dc58:	bl	4408 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb>
    dc5c:	ldr	q0, [sp, #80]
    dc60:	ldr	x8, [sp, #96]
    dc64:	mov	x0, x20
    dc68:	mov	x1, x21
    dc6c:	stur	q0, [x29, #-256]
    dc70:	stur	x8, [x29, #-240]
    dc74:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    dc78:	ldr	x0, [sp, #104]
    dc7c:	cmp	x0, x24
    dc80:	b.eq	dc88 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x958>  // b.none
    dc84:	bl	0 <free>
    dc88:	ldur	x8, [x29, #-240]
    dc8c:	cbnz	x8, dbf8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x8c8>
    dc90:	mov	w20, #0x1                   	// #1
    dc94:	ldur	x0, [x29, #-232]
    dc98:	add	x8, x23, #0x28
    dc9c:	cmp	x0, x8
    dca0:	b.eq	dca8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x978>  // b.none
    dca4:	bl	0 <free>
    dca8:	cbz	w20, dd20 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x9f0>
    dcac:	mov	w20, #0x1                   	// #1
    dcb0:	ldur	x0, [x29, #-88]
    dcb4:	sub	x8, x29, #0x70
    dcb8:	add	x8, x8, #0x28
    dcbc:	cmp	x0, x8
    dcc0:	b.eq	dcc8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x998>  // b.none
    dcc4:	bl	0 <free>
    dcc8:	ldp	x19, x21, [x29, #-32]
    dccc:	cmp	x19, x21
    dcd0:	b.eq	dcec <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x9bc>  // b.none
    dcd4:	mov	x0, x19
    dcd8:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    dcdc:	add	x19, x19, #0x10
    dce0:	cmp	x21, x19
    dce4:	b.ne	dcd4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x9a4>  // b.any
    dce8:	ldur	x19, [x29, #-32]
    dcec:	cbz	x19, dcf8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x9c8>
    dcf0:	mov	x0, x19
    dcf4:	bl	0 <_ZdlPv>
    dcf8:	mov	w0, w20
    dcfc:	add	sp, sp, #0x2e0
    dd00:	ldp	x20, x19, [sp, #96]
    dd04:	ldp	x22, x21, [sp, #80]
    dd08:	ldp	x24, x23, [sp, #64]
    dd0c:	ldp	x26, x25, [sp, #48]
    dd10:	ldp	x28, x27, [sp, #32]
    dd14:	ldp	x29, x30, [sp, #16]
    dd18:	ldr	d8, [sp], #112
    dd1c:	ret
    dd20:	ldp	x20, x21, [x29, #-32]
    dd24:	cmp	x20, x21
    dd28:	b.eq	dd68 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa38>  // b.none
    dd2c:	mov	x0, x19
    dd30:	mov	x1, x20
    dd34:	bl	b0b4 <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE>
    dd38:	tbnz	w0, #0, dcac <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x97c>
    dd3c:	ldr	q0, [x20]
    dd40:	add	x1, sp, #0x40
    dd44:	mov	x0, x19
    dd48:	stp	xzr, xzr, [x20]
    dd4c:	str	q0, [sp, #64]
    dd50:	bl	25a4 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE>
    dd54:	add	x0, sp, #0x40
    dd58:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    dd5c:	add	x20, x20, #0x10
    dd60:	cmp	x20, x21
    dd64:	b.ne	dd2c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x9fc>  // b.any
    dd68:	ldr	w8, [x19, #40]
    dd6c:	cmp	w8, #0xd
    dd70:	b.ne	dd94 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa64>  // b.any
    dd74:	ldp	x8, x9, [x19, #8]
    dd78:	mov	x0, x19
    dd7c:	cmp	x8, x9
    dd80:	cset	w1, eq  // eq = none
    dd84:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    dd88:	mov	w20, wzr
    dd8c:	str	w0, [x19, #40]
    dd90:	b	dcb0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x980>
    dd94:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    dd98:	add	x8, x8, #0x0
    dd9c:	mov	w9, #0x103                 	// #259
    dda0:	mov	x0, x19
    dda4:	stp	x8, xzr, [x29, #-256]
    dda8:	sturh	w9, [x29, #-240]
    ddac:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    ddb0:	str	x0, [sp, #80]
    ddb4:	b	dba0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x870>
    ddb8:	mov	w20, wzr
    ddbc:	b	dc94 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x964>
    ddc0:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ddc4:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ddc8:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ddcc:	add	x0, x0, #0x0
    ddd0:	add	x1, x1, #0x0
    ddd4:	add	x3, x3, #0x0
    ddd8:	mov	w2, #0x43                  	// #67
    dddc:	bl	0 <__assert_fail>
    dde0:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    dde4:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    dde8:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ddec:	add	x0, x0, #0x0
    ddf0:	add	x1, x1, #0x0
    ddf4:	add	x3, x3, #0x0
    ddf8:	mov	w2, #0x69                  	// #105
    ddfc:	bl	0 <__assert_fail>
    de00:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    de04:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    de08:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    de0c:	add	x0, x0, #0x0
    de10:	add	x1, x1, #0x0
    de14:	add	x3, x3, #0x0
    de18:	mov	w2, #0x108                 	// #264
    de1c:	bl	0 <__assert_fail>
    de20:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    de24:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    de28:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    de2c:	add	x0, x0, #0x0
    de30:	add	x1, x1, #0x0
    de34:	add	x3, x3, #0x0
    de38:	mov	w2, #0xce2                 	// #3298
    de3c:	bl	0 <__assert_fail>
    de40:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    de44:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    de48:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    de4c:	add	x0, x0, #0x0
    de50:	add	x1, x1, #0x0
    de54:	add	x3, x3, #0x0
    de58:	mov	w2, #0xcbd                 	// #3261
    de5c:	bl	0 <__assert_fail>
    de60:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    de64:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    de68:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    de6c:	add	x0, x0, #0x0
    de70:	add	x1, x1, #0x0
    de74:	add	x3, x3, #0x0
    de78:	mov	w2, #0xb8                  	// #184
    de7c:	bl	0 <__assert_fail>
    de80:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    de84:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    de88:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    de8c:	add	x0, x0, #0x0
    de90:	add	x1, x1, #0x0
    de94:	add	x3, x3, #0x0
    de98:	mov	w2, #0x71                  	// #113
    de9c:	bl	0 <__assert_fail>

000000000000dea0 <_ZN4llvm8TGParser9ParseFileEv>:
    dea0:	sub	sp, sp, #0x50
    dea4:	stp	x29, x30, [sp, #32]
    dea8:	str	x21, [sp, #48]
    deac:	stp	x20, x19, [sp, #64]
    deb0:	add	x29, sp, #0x20
    deb4:	ldp	x8, x9, [x0, #8]
    deb8:	mov	x19, x0
    debc:	cmp	x8, x9
    dec0:	cset	w1, eq  // eq = none
    dec4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    dec8:	mov	x21, #0x47200000            	// #1193279488
    decc:	mov	w20, #0x1                   	// #1
    ded0:	movk	x21, #0x1d, lsl #32
    ded4:	str	w0, [x19, #40]
    ded8:	cmp	w0, #0x24
    dedc:	b.hi	df24 <_ZN4llvm8TGParser9ParseFileEv+0x84>  // b.pmore
    dee0:	mov	w8, w0
    dee4:	lsl	x9, x20, x8
    dee8:	tst	x9, x21
    deec:	b.eq	df18 <_ZN4llvm8TGParser9ParseFileEv+0x78>  // b.none
    def0:	mov	x0, x19
    def4:	mov	x1, xzr
    def8:	bl	bc10 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE>
    defc:	tbnz	w0, #0, df10 <_ZN4llvm8TGParser9ParseFileEv+0x70>
    df00:	ldr	w0, [x19, #40]
    df04:	cmp	w0, #0x24
    df08:	b.ls	dee0 <_ZN4llvm8TGParser9ParseFileEv+0x40>  // b.plast
    df0c:	b	df24 <_ZN4llvm8TGParser9ParseFileEv+0x84>
    df10:	mov	w19, #0x1                   	// #1
    df14:	b	df58 <_ZN4llvm8TGParser9ParseFileEv+0xb8>
    df18:	cbnz	x8, df24 <_ZN4llvm8TGParser9ParseFileEv+0x84>
    df1c:	mov	w19, wzr
    df20:	b	df58 <_ZN4llvm8TGParser9ParseFileEv+0xb8>
    df24:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    df28:	add	x8, x8, #0x0
    df2c:	mov	w9, #0x103                 	// #259
    df30:	mov	x0, x19
    df34:	stp	x8, xzr, [sp, #8]
    df38:	strh	w9, [sp, #24]
    df3c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    df40:	str	x0, [x29, #24]
    df44:	add	x0, x29, #0x18
    df48:	add	x2, sp, #0x8
    df4c:	mov	w1, #0x1                   	// #1
    df50:	mov	w19, #0x1                   	// #1
    df54:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    df58:	mov	w0, w19
    df5c:	ldp	x20, x19, [sp, #64]
    df60:	ldr	x21, [sp, #48]
    df64:	ldp	x29, x30, [sp, #32]
    df68:	add	sp, sp, #0x50
    df6c:	ret

000000000000df70 <_ZNK4llvm12RecordsEntry4dumpEv>:
    df70:	stp	x29, x30, [sp, #-32]!
    df74:	str	x19, [sp, #16]
    df78:	mov	x29, sp
    df7c:	mov	x19, x0
    df80:	ldr	x0, [x0, #8]
    df84:	cbz	x0, df8c <_ZNK4llvm12RecordsEntry4dumpEv+0x1c>
    df88:	bl	dfac <_ZNK4llvm11ForeachLoop4dumpEv>
    df8c:	ldr	x0, [x19]
    df90:	cbz	x0, dfa0 <_ZNK4llvm12RecordsEntry4dumpEv+0x30>
    df94:	ldr	x19, [sp, #16]
    df98:	ldp	x29, x30, [sp], #32
    df9c:	b	0 <_ZNK4llvm6Record4dumpEv>
    dfa0:	ldr	x19, [sp, #16]
    dfa4:	ldp	x29, x30, [sp], #32
    dfa8:	ret

000000000000dfac <_ZNK4llvm11ForeachLoop4dumpEv>:
    dfac:	sub	sp, sp, #0x60
    dfb0:	stp	x29, x30, [sp, #64]
    dfb4:	stp	x20, x19, [sp, #80]
    dfb8:	add	x29, sp, #0x40
    dfbc:	mov	x19, x0
    dfc0:	bl	0 <_ZN4llvm4errsEv>
    dfc4:	ldp	x9, x8, [x0, #16]
    dfc8:	mov	x20, x0
    dfcc:	sub	x9, x9, x8
    dfd0:	cmp	x9, #0x7
    dfd4:	b.hi	dff4 <_ZNK4llvm11ForeachLoop4dumpEv+0x48>  // b.pmore
    dfd8:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    dfdc:	add	x1, x1, #0x0
    dfe0:	mov	w2, #0x8                   	// #8
    dfe4:	mov	x0, x20
    dfe8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    dfec:	mov	x20, x0
    dff0:	b	e014 <_ZNK4llvm11ForeachLoop4dumpEv+0x68>
    dff4:	mov	x9, #0x6f66                	// #28518
    dff8:	movk	x9, #0x6572, lsl #16
    dffc:	movk	x9, #0x6361, lsl #32
    e000:	movk	x9, #0x2068, lsl #48
    e004:	str	x9, [x8]
    e008:	ldr	x8, [x20, #24]
    e00c:	add	x8, x8, #0x8
    e010:	str	x8, [x20, #24]
    e014:	ldr	x0, [x19, #8]
    e018:	ldr	x8, [x0]
    e01c:	ldr	x9, [x8, #40]
    e020:	add	x8, sp, #0x20
    e024:	blr	x9
    e028:	ldp	x1, x2, [sp, #32]
    e02c:	mov	x0, x20
    e030:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    e034:	ldp	x9, x8, [x0, #16]
    e038:	mov	x20, x0
    e03c:	sub	x9, x9, x8
    e040:	cmp	x9, #0x2
    e044:	b.hi	e064 <_ZNK4llvm11ForeachLoop4dumpEv+0xb8>  // b.pmore
    e048:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e04c:	add	x1, x1, #0x0
    e050:	mov	w2, #0x3                   	// #3
    e054:	mov	x0, x20
    e058:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    e05c:	mov	x20, x0
    e060:	b	e080 <_ZNK4llvm11ForeachLoop4dumpEv+0xd4>
    e064:	mov	w9, #0x20                  	// #32
    e068:	mov	w10, #0x3d20                	// #15648
    e06c:	strb	w9, [x8, #2]
    e070:	strh	w10, [x8]
    e074:	ldr	x8, [x20, #24]
    e078:	add	x8, x8, #0x3
    e07c:	str	x8, [x20, #24]
    e080:	ldr	x0, [x19, #16]
    e084:	ldr	x8, [x0]
    e088:	ldr	x9, [x8, #40]
    e08c:	mov	x8, sp
    e090:	blr	x9
    e094:	ldp	x1, x2, [sp]
    e098:	mov	x0, x20
    e09c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    e0a0:	ldp	x9, x8, [x0, #16]
    e0a4:	sub	x9, x9, x8
    e0a8:	cmp	x9, #0x5
    e0ac:	b.hi	e0c4 <_ZNK4llvm11ForeachLoop4dumpEv+0x118>  // b.pmore
    e0b0:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e0b4:	add	x1, x1, #0x0
    e0b8:	mov	w2, #0x6                   	// #6
    e0bc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    e0c0:	b	e0e4 <_ZNK4llvm11ForeachLoop4dumpEv+0x138>
    e0c4:	mov	w10, #0x6920                	// #26912
    e0c8:	mov	w9, #0xa7b                 	// #2683
    e0cc:	movk	w10, #0x206e, lsl #16
    e0d0:	strh	w9, [x8, #4]
    e0d4:	str	w10, [x8]
    e0d8:	ldr	x8, [x0, #24]
    e0dc:	add	x8, x8, #0x6
    e0e0:	str	x8, [x0, #24]
    e0e4:	ldr	x0, [sp]
    e0e8:	mov	x8, sp
    e0ec:	add	x8, x8, #0x10
    e0f0:	cmp	x0, x8
    e0f4:	b.eq	e0fc <_ZNK4llvm11ForeachLoop4dumpEv+0x150>  // b.none
    e0f8:	bl	0 <_ZdlPv>
    e0fc:	ldr	x0, [sp, #32]
    e100:	add	x8, sp, #0x20
    e104:	add	x8, x8, #0x10
    e108:	cmp	x0, x8
    e10c:	b.eq	e114 <_ZNK4llvm11ForeachLoop4dumpEv+0x168>  // b.none
    e110:	bl	0 <_ZdlPv>
    e114:	ldr	x20, [x19, #24]
    e118:	ldr	x19, [x19, #32]
    e11c:	cmp	x20, x19
    e120:	b.eq	e138 <_ZNK4llvm11ForeachLoop4dumpEv+0x18c>  // b.none
    e124:	mov	x0, x20
    e128:	bl	df70 <_ZNK4llvm12RecordsEntry4dumpEv>
    e12c:	add	x20, x20, #0x10
    e130:	cmp	x19, x20
    e134:	b.ne	e124 <_ZNK4llvm11ForeachLoop4dumpEv+0x178>  // b.any
    e138:	bl	0 <_ZN4llvm4errsEv>
    e13c:	ldp	x9, x8, [x0, #16]
    e140:	sub	x9, x9, x8
    e144:	cmp	x9, #0x1
    e148:	b.hi	e160 <_ZNK4llvm11ForeachLoop4dumpEv+0x1b4>  // b.pmore
    e14c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e150:	add	x1, x1, #0x0
    e154:	mov	w2, #0x2                   	// #2
    e158:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    e15c:	b	e174 <_ZNK4llvm11ForeachLoop4dumpEv+0x1c8>
    e160:	mov	w9, #0xa7d                 	// #2685
    e164:	strh	w9, [x8]
    e168:	ldr	x8, [x0, #24]
    e16c:	add	x8, x8, #0x2
    e170:	str	x8, [x0, #24]
    e174:	ldp	x20, x19, [sp, #80]
    e178:	ldp	x29, x30, [sp, #64]
    e17c:	add	sp, sp, #0x60
    e180:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cbz	x1, 2c <_ZN4llvm11raw_ostreamlsEPKc+0x2c>
  1c:	mov	x0, x20
  20:	bl	0 <strlen>
  24:	mov	x21, x0
  28:	b	30 <_ZN4llvm11raw_ostreamlsEPKc+0x30>
  2c:	mov	x21, xzr
  30:	ldp	x8, x0, [x19, #16]
  34:	sub	x8, x8, x0
  38:	cmp	x21, x8
  3c:	b.ls	5c <_ZN4llvm11raw_ostreamlsEPKc+0x5c>  // b.plast
  40:	mov	x0, x19
  44:	mov	x1, x20
  48:	mov	x2, x21
  4c:	ldp	x20, x19, [sp, #32]
  50:	ldr	x21, [sp, #16]
  54:	ldp	x29, x30, [sp], #48
  58:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  5c:	cbz	x21, 78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  60:	mov	x1, x20
  64:	mov	x2, x21
  68:	bl	0 <memcpy>
  6c:	ldr	x8, [x19, #24]
  70:	add	x8, x8, x21
  74:	str	x8, [x19, #24]
  78:	mov	x0, x19
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldr	x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	ret

Disassembly of section .text._ZN4llvm6Record8addValueERKNS_9RecordValE:

0000000000000000 <_ZN4llvm6Record8addValueERKNS_9RecordValE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #80]
  10:	ldr	x9, [x0, #72]
  14:	mov	x19, x0
  18:	mov	x20, x1
  1c:	cbz	w8, 54 <_ZN4llvm6Record8addValueERKNS_9RecordValE+0x54>
  20:	ldr	x10, [x20]
  24:	add	x11, x8, x8, lsl #1
  28:	lsl	x11, x11, #3
  2c:	mov	x13, x9
  30:	mov	x12, x9
  34:	ldr	x14, [x12], #24
  38:	cmp	x14, x10
  3c:	b.eq	50 <_ZN4llvm6Record8addValueERKNS_9RecordValE+0x50>  // b.none
  40:	subs	x11, x11, #0x18
  44:	mov	x13, x12
  48:	b.ne	34 <_ZN4llvm6Record8addValueERKNS_9RecordValE+0x34>  // b.any
  4c:	b	54 <_ZN4llvm6Record8addValueERKNS_9RecordValE+0x54>
  50:	cbnz	x13, d8 <_ZN4llvm6Record8addValueERKNS_9RecordValE+0xd8>
  54:	ldr	w10, [x19, #84]
  58:	cmp	w8, w10
  5c:	b.cs	98 <_ZN4llvm6Record8addValueERKNS_9RecordValE+0x98>  // b.hs, b.nlast
  60:	ldr	x10, [x20, #16]
  64:	ldr	q0, [x20]
  68:	mov	w11, #0x18                  	// #24
  6c:	madd	x8, x8, x11, x9
  70:	str	x10, [x8, #16]
  74:	str	q0, [x8]
  78:	ldp	w8, w9, [x19, #80]
  7c:	cmp	w8, w9
  80:	b.cs	b8 <_ZN4llvm6Record8addValueERKNS_9RecordValE+0xb8>  // b.hs, b.nlast
  84:	add	w8, w8, #0x1
  88:	str	w8, [x19, #80]
  8c:	ldp	x20, x19, [sp, #16]
  90:	ldp	x29, x30, [sp], #32
  94:	ret
  98:	add	x0, x19, #0x48
  9c:	add	x1, x0, #0x10
  a0:	mov	w3, #0x18                  	// #24
  a4:	mov	x2, xzr
  a8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  ac:	ldr	w8, [x19, #80]
  b0:	ldr	x9, [x19, #72]
  b4:	b	60 <_ZN4llvm6Record8addValueERKNS_9RecordValE+0x60>
  b8:	adrp	x0, 0 <_ZN4llvm6Record8addValueERKNS_9RecordValE>
  bc:	adrp	x1, 0 <_ZN4llvm6Record8addValueERKNS_9RecordValE>
  c0:	adrp	x3, 0 <_ZN4llvm6Record8addValueERKNS_9RecordValE>
  c4:	add	x0, x0, #0x0
  c8:	add	x1, x1, #0x0
  cc:	add	x3, x3, #0x0
  d0:	mov	w2, #0x43                  	// #67
  d4:	bl	0 <__assert_fail>
  d8:	adrp	x0, 0 <_ZN4llvm6Record8addValueERKNS_9RecordValE>
  dc:	adrp	x1, 0 <_ZN4llvm6Record8addValueERKNS_9RecordValE>
  e0:	adrp	x3, 0 <_ZN4llvm6Record8addValueERKNS_9RecordValE>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0x60a                 	// #1546
  f4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8ArrayRefIPNS_4InitEEixEm:

0000000000000000 <_ZNK4llvm8ArrayRefIPNS_4InitEEixEm>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #8]
   c:	cmp	x8, x1
  10:	b.ls	24 <_ZNK4llvm8ArrayRefIPNS_4InitEEixEm+0x24>  // b.plast
  14:	ldr	x8, [x0]
  18:	add	x0, x8, x1, lsl #3
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	adrp	x0, 0 <_ZNK4llvm8ArrayRefIPNS_4InitEEixEm>
  28:	adrp	x1, 0 <_ZNK4llvm8ArrayRefIPNS_4InitEEixEm>
  2c:	adrp	x3, 0 <_ZNK4llvm8ArrayRefIPNS_4InitEEixEm>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0xfa                  	// #250
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm11MapResolver3setEPNS_4InitES2_:

0000000000000000 <_ZN4llvm11MapResolver3setEPNS_4InitES2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	str	x1, [x29, #24]
  10:	ldr	w8, [x0, #48]
  14:	mov	x19, x2
  18:	cbz	w8, 90 <_ZN4llvm11MapResolver3setEPNS_4InitES2_+0x90>
  1c:	orr	x9, x1, #0x8
  20:	cmn	x9, #0x8
  24:	b.eq	d4 <_ZN4llvm11MapResolver3setEPNS_4InitES2_+0xd4>  // b.none
  28:	ldr	x9, [x0, #32]
  2c:	ubfx	x10, x1, #4, #28
  30:	eor	w11, w10, w1, lsr #9
  34:	sub	w10, w8, #0x1
  38:	and	w12, w11, w10
  3c:	mov	w11, #0x18                  	// #24
  40:	umaddl	x8, w12, w11, x9
  44:	ldr	x14, [x8]
  48:	cmp	x14, x1
  4c:	b.eq	b4 <_ZN4llvm11MapResolver3setEPNS_4InitES2_+0xb4>  // b.none
  50:	mov	x13, xzr
  54:	mov	w16, #0x1                   	// #1
  58:	mov	x15, #0xfffffffffffffff0    	// #-16
  5c:	cmn	x14, #0x8
  60:	b.eq	c8 <_ZN4llvm11MapResolver3setEPNS_4InitES2_+0xc8>  // b.none
  64:	cmp	x13, #0x0
  68:	add	w12, w12, w16
  6c:	ccmp	x14, x15, #0x0, eq  // eq = none
  70:	and	w12, w12, w10
  74:	csel	x13, x13, x8, ne  // ne = any
  78:	umaddl	x8, w12, w11, x9
  7c:	ldr	x14, [x8]
  80:	add	w16, w16, #0x1
  84:	cmp	x14, x1
  88:	b.eq	b4 <_ZN4llvm11MapResolver3setEPNS_4InitES2_+0xb4>  // b.none
  8c:	b	5c <_ZN4llvm11MapResolver3setEPNS_4InitES2_+0x5c>
  90:	mov	x3, xzr
  94:	add	x0, x0, #0x18
  98:	add	x1, x29, #0x18
  9c:	add	x2, x29, #0x18
  a0:	bl	0 <_ZN4llvm11MapResolver3setEPNS_4InitES2_>
  a4:	ldr	x9, [x29, #24]
  a8:	mov	x8, x0
  ac:	strb	wzr, [x0, #16]
  b0:	stp	x9, xzr, [x0]
  b4:	str	x19, [x8, #8]
  b8:	ldr	x19, [sp, #16]
  bc:	strb	wzr, [x8, #16]
  c0:	ldp	x29, x30, [sp], #32
  c4:	ret
  c8:	cmp	x13, #0x0
  cc:	csel	x3, x8, x13, eq  // eq = none
  d0:	b	94 <_ZN4llvm11MapResolver3setEPNS_4InitES2_+0x94>
  d4:	adrp	x0, 0 <_ZN4llvm11MapResolver3setEPNS_4InitES2_>
  d8:	adrp	x1, 0 <_ZN4llvm11MapResolver3setEPNS_4InitES2_>
  dc:	adrp	x3, 0 <_ZN4llvm11MapResolver3setEPNS_4InitES2_>
  e0:	add	x0, x0, #0x0
  e4:	add	x1, x1, #0x0
  e8:	add	x3, x3, #0x0
  ec:	mov	w2, #0x252                 	// #594
  f0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm6Record11removeValueEPNS_4InitE:

0000000000000000 <_ZN4llvm6Record11removeValueEPNS_4InitE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #80]
  10:	cbz	w8, 48 <_ZN4llvm6Record11removeValueEPNS_4InitE+0x48>
  14:	ldr	x9, [x0, #72]
  18:	mov	x19, x0
  1c:	mov	w10, wzr
  20:	mov	w11, #0x18                  	// #24
  24:	cmp	w8, w10
  28:	b.eq	a4 <_ZN4llvm6Record11removeValueEPNS_4InitE+0xa4>  // b.none
  2c:	umaddl	x0, w10, w11, x9
  30:	ldr	x12, [x0]
  34:	cmp	x12, x1
  38:	b.eq	60 <_ZN4llvm6Record11removeValueEPNS_4InitE+0x60>  // b.none
  3c:	add	w10, w10, #0x1
  40:	cmp	w8, w10
  44:	b.ne	24 <_ZN4llvm6Record11removeValueEPNS_4InitE+0x24>  // b.any
  48:	adrp	x0, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  4c:	adrp	x1, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  50:	add	x0, x0, #0x0
  54:	add	x1, x1, #0x0
  58:	mov	w2, #0x614                 	// #1556
  5c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  60:	cmp	w8, w10
  64:	b.ls	c4 <_ZN4llvm6Record11removeValueEPNS_4InitE+0xc4>  // b.plast
  68:	mov	w10, #0x18                  	// #24
  6c:	madd	x9, x8, x10, x9
  70:	add	x1, x0, #0x18
  74:	subs	x2, x9, x1
  78:	b.eq	84 <_ZN4llvm6Record11removeValueEPNS_4InitE+0x84>  // b.none
  7c:	bl	0 <memmove>
  80:	ldr	w8, [x19, #80]
  84:	ldr	w9, [x19, #84]
  88:	sub	x8, x8, #0x1
  8c:	cmp	x8, x9
  90:	b.hi	e4 <_ZN4llvm6Record11removeValueEPNS_4InitE+0xe4>  // b.pmore
  94:	str	w8, [x19, #80]
  98:	ldr	x19, [sp, #16]
  9c:	ldp	x29, x30, [sp], #32
  a0:	ret
  a4:	adrp	x0, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  a8:	adrp	x1, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  ac:	adrp	x3, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  b0:	add	x0, x0, #0x0
  b4:	add	x1, x1, #0x0
  b8:	add	x3, x3, #0x0
  bc:	mov	w2, #0x95                  	// #149
  c0:	bl	0 <__assert_fail>
  c4:	adrp	x0, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  c8:	adrp	x1, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  cc:	adrp	x3, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  d0:	add	x0, x0, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x3, x3, #0x0
  dc:	mov	w2, #0x1b7                 	// #439
  e0:	bl	0 <__assert_fail>
  e4:	adrp	x0, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  e8:	adrp	x1, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  ec:	adrp	x3, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  f0:	add	x0, x0, #0x0
  f4:	add	x1, x1, #0x0
  f8:	add	x3, x3, #0x0
  fc:	mov	w2, #0x43                  	// #67
 100:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE:

0000000000000000 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x8, [x0, #112]
  14:	cbnz	x8, cc <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE+0xcc>
  18:	ldr	w8, [x0, #96]
  1c:	ldr	x9, [x0, #88]
  20:	mov	x20, x3
  24:	mov	x21, x2
  28:	mov	x19, x0
  2c:	mov	x22, x1
  30:	cbz	w8, 54 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE+0x54>
  34:	add	x10, x8, x8, lsl #1
  38:	lsl	x10, x10, #3
  3c:	mov	x11, x9
  40:	ldr	x12, [x11], #24
  44:	cmp	x12, x22
  48:	b.eq	ac <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE+0xac>  // b.none
  4c:	subs	x10, x10, #0x18
  50:	b.ne	40 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE+0x40>  // b.any
  54:	ldr	w10, [x19, #100]
  58:	cmp	w8, w10
  5c:	b.cs	94 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE+0x94>  // b.hs, b.nlast
  60:	mov	w10, #0x18                  	// #24
  64:	madd	x8, x8, x10, x9
  68:	stp	x22, x21, [x8]
  6c:	str	x20, [x8, #16]
  70:	ldp	w8, w9, [x19, #96]
  74:	cmp	w8, w9
  78:	b.cs	ec <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE+0xec>  // b.hs, b.nlast
  7c:	add	w8, w8, #0x1
  80:	str	w8, [x19, #96]
  84:	ldp	x20, x19, [sp, #32]
  88:	ldp	x22, x21, [sp, #16]
  8c:	ldp	x29, x30, [sp], #48
  90:	ret
  94:	add	x0, x19, #0x58
  98:	mov	x1, xzr
  9c:	bl	0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  a0:	ldr	w8, [x19, #96]
  a4:	ldr	x9, [x19, #88]
  a8:	b	60 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE+0x60>
  ac:	adrp	x0, 0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  b0:	adrp	x1, 0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  b4:	adrp	x3, 0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  b8:	add	x0, x0, #0x0
  bc:	add	x1, x1, #0x0
  c0:	add	x3, x3, #0x0
  c4:	mov	w2, #0x630                 	// #1584
  c8:	bl	0 <__assert_fail>
  cc:	adrp	x0, 0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  d0:	adrp	x1, 0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  d4:	adrp	x3, 0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  d8:	add	x0, x0, #0x0
  dc:	add	x1, x1, #0x0
  e0:	add	x3, x3, #0x0
  e4:	mov	w2, #0x62f                 	// #1583
  e8:	bl	0 <__assert_fail>
  ec:	adrp	x0, 0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  f0:	adrp	x1, 0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  f4:	adrp	x3, 0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  f8:	add	x0, x0, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0x43                  	// #67
 108:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev:

0000000000000000 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x20, [x0]
  18:	mov	x19, x0
  1c:	cbz	x20, 40 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0x40>
  20:	ldp	x21, x23, [x20, #24]
  24:	cmp	x21, x23
  28:	b.ne	6c <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0x6c>  // b.any
  2c:	cbz	x21, 38 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0x38>
  30:	mov	x0, x21
  34:	bl	0 <_ZdlPv>
  38:	mov	x0, x20
  3c:	bl	0 <_ZdlPv>
  40:	str	xzr, [x19]
  44:	ldp	x20, x19, [sp, #48]
  48:	ldp	x22, x21, [sp, #32]
  4c:	ldr	x23, [sp, #16]
  50:	ldp	x29, x30, [sp], #64
  54:	ret
  58:	mov	x0, x22
  5c:	bl	0 <_ZdlPv>
  60:	str	xzr, [x21], #16
  64:	cmp	x23, x21
  68:	b.eq	d0 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0xd0>  // b.none
  6c:	add	x0, x21, #0x8
  70:	bl	0 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev>
  74:	ldr	x22, [x21]
  78:	cbz	x22, 60 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0x60>
  7c:	ldr	x0, [x22, #88]
  80:	add	x8, x22, #0x68
  84:	cmp	x0, x8
  88:	b.eq	90 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0x90>  // b.none
  8c:	bl	0 <free>
  90:	ldr	x0, [x22, #72]
  94:	add	x8, x22, #0x58
  98:	cmp	x0, x8
  9c:	b.eq	a4 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0xa4>  // b.none
  a0:	bl	0 <free>
  a4:	ldr	x0, [x22, #56]
  a8:	add	x8, x22, #0x48
  ac:	cmp	x0, x8
  b0:	b.eq	b8 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0xb8>  // b.none
  b4:	bl	0 <free>
  b8:	ldr	x0, [x22, #8]
  bc:	add	x8, x22, #0x18
  c0:	cmp	x0, x8
  c4:	b.eq	58 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0x58>  // b.none
  c8:	bl	0 <free>
  cc:	b	58 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0x58>
  d0:	ldr	x21, [x20, #24]
  d4:	cbnz	x21, 30 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0x30>
  d8:	b	38 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0x38>

Disassembly of section .text._ZN4llvm12RecordsEntryD2Ev:

0000000000000000 <_ZN4llvm12RecordsEntryD2Ev>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x20, [x0, #8]
  18:	mov	x19, x0
  1c:	cbz	x20, 40 <_ZN4llvm12RecordsEntryD2Ev+0x40>
  20:	ldp	x21, x23, [x20, #24]
  24:	cmp	x21, x23
  28:	b.ne	d0 <_ZN4llvm12RecordsEntryD2Ev+0xd0>  // b.any
  2c:	cbz	x21, 38 <_ZN4llvm12RecordsEntryD2Ev+0x38>
  30:	mov	x0, x21
  34:	bl	0 <_ZdlPv>
  38:	mov	x0, x20
  3c:	bl	0 <_ZdlPv>
  40:	ldr	x20, [x19]
  44:	str	xzr, [x19, #8]
  48:	cbz	x20, a4 <_ZN4llvm12RecordsEntryD2Ev+0xa4>
  4c:	ldr	x0, [x20, #88]
  50:	add	x8, x20, #0x68
  54:	cmp	x0, x8
  58:	b.eq	60 <_ZN4llvm12RecordsEntryD2Ev+0x60>  // b.none
  5c:	bl	0 <free>
  60:	ldr	x0, [x20, #72]
  64:	add	x8, x20, #0x58
  68:	cmp	x0, x8
  6c:	b.eq	74 <_ZN4llvm12RecordsEntryD2Ev+0x74>  // b.none
  70:	bl	0 <free>
  74:	ldr	x0, [x20, #56]
  78:	add	x8, x20, #0x48
  7c:	cmp	x0, x8
  80:	b.eq	88 <_ZN4llvm12RecordsEntryD2Ev+0x88>  // b.none
  84:	bl	0 <free>
  88:	ldr	x0, [x20, #8]
  8c:	add	x8, x20, #0x18
  90:	cmp	x0, x8
  94:	b.eq	9c <_ZN4llvm12RecordsEntryD2Ev+0x9c>  // b.none
  98:	bl	0 <free>
  9c:	mov	x0, x20
  a0:	bl	0 <_ZdlPv>
  a4:	str	xzr, [x19]
  a8:	ldp	x20, x19, [sp, #48]
  ac:	ldp	x22, x21, [sp, #32]
  b0:	ldr	x23, [sp, #16]
  b4:	ldp	x29, x30, [sp], #64
  b8:	ret
  bc:	mov	x0, x22
  c0:	bl	0 <_ZdlPv>
  c4:	str	xzr, [x21], #16
  c8:	cmp	x23, x21
  cc:	b.eq	134 <_ZN4llvm12RecordsEntryD2Ev+0x134>  // b.none
  d0:	add	x0, x21, #0x8
  d4:	bl	0 <_ZN4llvm12RecordsEntryD2Ev>
  d8:	ldr	x22, [x21]
  dc:	cbz	x22, c4 <_ZN4llvm12RecordsEntryD2Ev+0xc4>
  e0:	ldr	x0, [x22, #88]
  e4:	add	x8, x22, #0x68
  e8:	cmp	x0, x8
  ec:	b.eq	f4 <_ZN4llvm12RecordsEntryD2Ev+0xf4>  // b.none
  f0:	bl	0 <free>
  f4:	ldr	x0, [x22, #72]
  f8:	add	x8, x22, #0x58
  fc:	cmp	x0, x8
 100:	b.eq	108 <_ZN4llvm12RecordsEntryD2Ev+0x108>  // b.none
 104:	bl	0 <free>
 108:	ldr	x0, [x22, #56]
 10c:	add	x8, x22, #0x48
 110:	cmp	x0, x8
 114:	b.eq	11c <_ZN4llvm12RecordsEntryD2Ev+0x11c>  // b.none
 118:	bl	0 <free>
 11c:	ldr	x0, [x22, #8]
 120:	add	x8, x22, #0x18
 124:	cmp	x0, x8
 128:	b.eq	bc <_ZN4llvm12RecordsEntryD2Ev+0xbc>  // b.none
 12c:	bl	0 <free>
 130:	b	bc <_ZN4llvm12RecordsEntryD2Ev+0xbc>
 134:	ldr	x21, [x20, #24]
 138:	cbnz	x21, 30 <_ZN4llvm12RecordsEntryD2Ev+0x30>
 13c:	b	38 <_ZN4llvm12RecordsEntryD2Ev+0x38>

Disassembly of section .text._ZNK4llvm12RecordKeeper6getDefENS_9StringRefE:

0000000000000000 <_ZNK4llvm12RecordKeeper6getDefENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x23, [x0, #64]
  18:	add	x21, x0, #0x38
  1c:	cbz	x23, b4 <_ZNK4llvm12RecordKeeper6getDefENS_9StringRefE+0xb4>
  20:	mov	x19, x2
  24:	mov	x20, x1
  28:	mov	x22, x21
  2c:	b	40 <_ZNK4llvm12RecordKeeper6getDefENS_9StringRefE+0x40>
  30:	add	x8, x23, #0x10
  34:	mov	x22, x23
  38:	ldr	x23, [x8]
  3c:	cbz	x23, 7c <_ZNK4llvm12RecordKeeper6getDefENS_9StringRefE+0x7c>
  40:	ldr	x24, [x23, #40]
  44:	cmp	x19, x24
  48:	csel	x2, x19, x24, cc  // cc = lo, ul, last
  4c:	cbz	x2, 68 <_ZNK4llvm12RecordKeeper6getDefENS_9StringRefE+0x68>
  50:	ldr	x0, [x23, #32]
  54:	mov	x1, x20
  58:	bl	0 <memcmp>
  5c:	cbz	w0, 68 <_ZNK4llvm12RecordKeeper6getDefENS_9StringRefE+0x68>
  60:	tbz	w0, #31, 30 <_ZNK4llvm12RecordKeeper6getDefENS_9StringRefE+0x30>
  64:	b	70 <_ZNK4llvm12RecordKeeper6getDefENS_9StringRefE+0x70>
  68:	cmp	x24, x19
  6c:	b.cs	30 <_ZNK4llvm12RecordKeeper6getDefENS_9StringRefE+0x30>  // b.hs, b.nlast
  70:	add	x8, x23, #0x18
  74:	ldr	x23, [x8]
  78:	cbnz	x23, 40 <_ZNK4llvm12RecordKeeper6getDefENS_9StringRefE+0x40>
  7c:	cmp	x22, x21
  80:	b.eq	b8 <_ZNK4llvm12RecordKeeper6getDefENS_9StringRefE+0xb8>  // b.none
  84:	ldr	x23, [x22, #40]
  88:	cmp	x23, x19
  8c:	csel	x2, x23, x19, cc  // cc = lo, ul, last
  90:	cbz	x2, ac <_ZNK4llvm12RecordKeeper6getDefENS_9StringRefE+0xac>
  94:	ldr	x1, [x22, #32]
  98:	mov	x0, x20
  9c:	bl	0 <memcmp>
  a0:	cbz	w0, ac <_ZNK4llvm12RecordKeeper6getDefENS_9StringRefE+0xac>
  a4:	tbnz	w0, #31, b4 <_ZNK4llvm12RecordKeeper6getDefENS_9StringRefE+0xb4>
  a8:	b	b8 <_ZNK4llvm12RecordKeeper6getDefENS_9StringRefE+0xb8>
  ac:	cmp	x19, x23
  b0:	b.cs	b8 <_ZNK4llvm12RecordKeeper6getDefENS_9StringRefE+0xb8>  // b.hs, b.nlast
  b4:	mov	x22, x21
  b8:	cmp	x22, x21
  bc:	b.eq	c8 <_ZNK4llvm12RecordKeeper6getDefENS_9StringRefE+0xc8>  // b.none
  c0:	ldr	x0, [x22, #64]
  c4:	b	cc <_ZNK4llvm12RecordKeeper6getDefENS_9StringRefE+0xcc>
  c8:	mov	x0, xzr
  cc:	ldp	x20, x19, [sp, #48]
  d0:	ldp	x22, x21, [sp, #32]
  d4:	ldp	x24, x23, [sp, #16]
  d8:	ldp	x29, x30, [sp], #64
  dc:	ret

Disassembly of section .text._ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE:

0000000000000000 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x20, x19, [sp, #48]
   c:	add	x29, sp, #0x20
  10:	ldr	x8, [x1]
  14:	ldr	x9, [x8]
  18:	cbz	x9, bc <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xbc>
  1c:	ldrb	w10, [x9, #8]
  20:	cmp	w10, #0x12
  24:	b.ne	dc <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xdc>  // b.any
  28:	ldur	q0, [x9, #24]
  2c:	add	x0, x0, #0x30
  30:	str	q0, [sp]
  34:	str	xzr, [x1]
  38:	mov	x1, sp
  3c:	str	x8, [sp, #16]
  40:	bl	0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  44:	ldr	x20, [sp, #16]
  48:	mov	x19, x1
  4c:	cbz	x20, a8 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xa8>
  50:	ldr	x0, [x20, #88]
  54:	add	x8, x20, #0x68
  58:	cmp	x0, x8
  5c:	b.eq	64 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x64>  // b.none
  60:	bl	0 <free>
  64:	ldr	x0, [x20, #72]
  68:	add	x8, x20, #0x58
  6c:	cmp	x0, x8
  70:	b.eq	78 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x78>  // b.none
  74:	bl	0 <free>
  78:	ldr	x0, [x20, #56]
  7c:	add	x8, x20, #0x48
  80:	cmp	x0, x8
  84:	b.eq	8c <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x8c>  // b.none
  88:	bl	0 <free>
  8c:	ldr	x0, [x20, #8]
  90:	add	x8, x20, #0x18
  94:	cmp	x0, x8
  98:	b.eq	a0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xa0>  // b.none
  9c:	bl	0 <free>
  a0:	mov	x0, x20
  a4:	bl	0 <_ZdlPv>
  a8:	tbz	w19, #0, fc <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xfc>
  ac:	ldp	x20, x19, [sp, #48]
  b0:	ldp	x29, x30, [sp, #32]
  b4:	add	sp, sp, #0x40
  b8:	ret
  bc:	adrp	x0, 0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  c0:	adrp	x1, 0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  c4:	adrp	x3, 0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  c8:	add	x0, x0, #0x0
  cc:	add	x1, x1, #0x0
  d0:	add	x3, x3, #0x0
  d4:	mov	w2, #0x69                  	// #105
  d8:	bl	0 <__assert_fail>
  dc:	adrp	x0, 0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  e0:	adrp	x1, 0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  e4:	adrp	x3, 0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x108                 	// #264
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
 100:	adrp	x1, 0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
 104:	adrp	x3, 0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x6c7                 	// #1735
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12RecordKeeper8getClassENS_9StringRefE:

0000000000000000 <_ZNK4llvm12RecordKeeper8getClassENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x23, [x0, #16]
  18:	add	x21, x0, #0x8
  1c:	cbz	x23, b4 <_ZNK4llvm12RecordKeeper8getClassENS_9StringRefE+0xb4>
  20:	mov	x19, x2
  24:	mov	x20, x1
  28:	mov	x22, x21
  2c:	b	40 <_ZNK4llvm12RecordKeeper8getClassENS_9StringRefE+0x40>
  30:	add	x8, x23, #0x10
  34:	mov	x22, x23
  38:	ldr	x23, [x8]
  3c:	cbz	x23, 7c <_ZNK4llvm12RecordKeeper8getClassENS_9StringRefE+0x7c>
  40:	ldr	x24, [x23, #40]
  44:	cmp	x19, x24
  48:	csel	x2, x19, x24, cc  // cc = lo, ul, last
  4c:	cbz	x2, 68 <_ZNK4llvm12RecordKeeper8getClassENS_9StringRefE+0x68>
  50:	ldr	x0, [x23, #32]
  54:	mov	x1, x20
  58:	bl	0 <memcmp>
  5c:	cbz	w0, 68 <_ZNK4llvm12RecordKeeper8getClassENS_9StringRefE+0x68>
  60:	tbz	w0, #31, 30 <_ZNK4llvm12RecordKeeper8getClassENS_9StringRefE+0x30>
  64:	b	70 <_ZNK4llvm12RecordKeeper8getClassENS_9StringRefE+0x70>
  68:	cmp	x24, x19
  6c:	b.cs	30 <_ZNK4llvm12RecordKeeper8getClassENS_9StringRefE+0x30>  // b.hs, b.nlast
  70:	add	x8, x23, #0x18
  74:	ldr	x23, [x8]
  78:	cbnz	x23, 40 <_ZNK4llvm12RecordKeeper8getClassENS_9StringRefE+0x40>
  7c:	cmp	x22, x21
  80:	b.eq	b8 <_ZNK4llvm12RecordKeeper8getClassENS_9StringRefE+0xb8>  // b.none
  84:	ldr	x23, [x22, #40]
  88:	cmp	x23, x19
  8c:	csel	x2, x23, x19, cc  // cc = lo, ul, last
  90:	cbz	x2, ac <_ZNK4llvm12RecordKeeper8getClassENS_9StringRefE+0xac>
  94:	ldr	x1, [x22, #32]
  98:	mov	x0, x20
  9c:	bl	0 <memcmp>
  a0:	cbz	w0, ac <_ZNK4llvm12RecordKeeper8getClassENS_9StringRefE+0xac>
  a4:	tbnz	w0, #31, b4 <_ZNK4llvm12RecordKeeper8getClassENS_9StringRefE+0xb4>
  a8:	b	b8 <_ZNK4llvm12RecordKeeper8getClassENS_9StringRefE+0xb8>
  ac:	cmp	x19, x23
  b0:	b.cs	b8 <_ZNK4llvm12RecordKeeper8getClassENS_9StringRefE+0xb8>  // b.hs, b.nlast
  b4:	mov	x22, x21
  b8:	cmp	x22, x21
  bc:	b.eq	c8 <_ZNK4llvm12RecordKeeper8getClassENS_9StringRefE+0xc8>  // b.none
  c0:	ldr	x0, [x22, #64]
  c4:	b	cc <_ZNK4llvm12RecordKeeper8getClassENS_9StringRefE+0xcc>
  c8:	mov	x0, xzr
  cc:	ldp	x20, x19, [sp, #48]
  d0:	ldp	x22, x21, [sp, #32]
  d4:	ldp	x24, x23, [sp, #16]
  d8:	ldp	x29, x30, [sp], #64
  dc:	ret

Disassembly of section .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_:

0000000000000000 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x28, x27, [sp, #48]
   c:	stp	x26, x25, [sp, #64]
  10:	stp	x24, x23, [sp, #80]
  14:	stp	x22, x21, [sp, #96]
  18:	stp	x20, x19, [sp, #112]
  1c:	add	x29, sp, #0x20
  20:	ldr	x25, [x0, #16]
  24:	mov	x20, x1
  28:	mov	x19, x0
  2c:	add	x23, x0, #0x8
  30:	cbz	x25, e0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0xe0>
  34:	str	x19, [sp, #8]
  38:	ldp	x22, x24, [x20]
  3c:	mov	w26, #0x7fffffff            	// #2147483647
  40:	mov	x27, #0xffffffff80000000    	// #-2147483648
  44:	mov	w28, #0x80000000            	// #-2147483648
  48:	mov	x21, x23
  4c:	b	74 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0x74>
  50:	tbnz	w0, #31, 68 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0x68>
  54:	add	x8, x25, #0x10
  58:	mov	x21, x25
  5c:	ldr	x25, [x8]
  60:	cbnz	x25, 74 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0x74>
  64:	b	a8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0xa8>
  68:	add	x8, x25, #0x18
  6c:	ldr	x25, [x8]
  70:	cbz	x25, a8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0xa8>
  74:	ldr	x8, [x25, #40]
  78:	subs	x19, x8, x24
  7c:	csel	x2, x24, x8, hi  // hi = pmore
  80:	cbz	x2, 94 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0x94>
  84:	ldr	x0, [x25, #32]
  88:	mov	x1, x22
  8c:	bl	0 <memcmp>
  90:	cbnz	w0, 50 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0x50>
  94:	cmp	x19, x26
  98:	b.gt	54 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0x54>
  9c:	cmp	x19, x27
  a0:	csel	w0, w19, w28, gt
  a4:	b	50 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0x50>
  a8:	cmp	x21, x23
  ac:	b.eq	e8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0xe8>  // b.none
  b0:	ldr	x8, [x20, #8]
  b4:	ldr	x9, [x21, #40]
  b8:	ldr	x19, [sp, #8]
  bc:	subs	x22, x8, x9
  c0:	csel	x2, x9, x8, hi  // hi = pmore
  c4:	cbz	x2, 134 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0x134>
  c8:	ldr	x1, [x21, #32]
  cc:	ldr	x0, [x20]
  d0:	bl	0 <memcmp>
  d4:	cbz	w0, 134 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0x134>
  d8:	tbz	w0, #31, 110 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0x110>
  dc:	b	ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0xec>
  e0:	mov	x21, x23
  e4:	b	ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0xec>
  e8:	ldr	x19, [sp, #8]
  ec:	adrp	x2, 0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_>
  f0:	add	x2, x2, #0x0
  f4:	sub	x3, x29, #0x8
  f8:	add	x4, sp, #0x10
  fc:	mov	x0, x19
 100:	mov	x1, x21
 104:	stur	x20, [x29, #-8]
 108:	bl	0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_>
 10c:	mov	x21, x0
 110:	add	x0, x21, #0x40
 114:	ldp	x20, x19, [sp, #112]
 118:	ldp	x22, x21, [sp, #96]
 11c:	ldp	x24, x23, [sp, #80]
 120:	ldp	x26, x25, [sp, #64]
 124:	ldp	x28, x27, [sp, #48]
 128:	ldp	x29, x30, [sp, #32]
 12c:	add	sp, sp, #0x80
 130:	ret
 134:	mov	w8, #0x7fffffff            	// #2147483647
 138:	cmp	x22, x8
 13c:	b.gt	110 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0x110>
 140:	mov	x8, #0xffffffff80000000    	// #-2147483648
 144:	cmp	x22, x8
 148:	mov	w8, #0x80000000            	// #-2147483648
 14c:	csel	w0, w22, w8, gt
 150:	tbz	w0, #31, 110 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0x110>
 154:	b	ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0xec>

Disassembly of section .text._ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE:

0000000000000000 <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x19, x2
  1c:	mov	x20, x1
  20:	mov	x21, x0
  24:	ldr	x24, [x21, #16]
  28:	add	x22, x21, #0x8
  2c:	cbz	x24, bc <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE+0xbc>
  30:	mov	x23, x22
  34:	b	48 <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE+0x48>
  38:	add	x8, x24, #0x10
  3c:	mov	x23, x24
  40:	ldr	x24, [x8]
  44:	cbz	x24, 84 <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE+0x84>
  48:	ldr	x25, [x24, #40]
  4c:	cmp	x19, x25
  50:	csel	x2, x19, x25, cc  // cc = lo, ul, last
  54:	cbz	x2, 70 <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE+0x70>
  58:	ldr	x0, [x24, #32]
  5c:	mov	x1, x20
  60:	bl	0 <memcmp>
  64:	cbz	w0, 70 <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE+0x70>
  68:	tbz	w0, #31, 38 <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE+0x38>
  6c:	b	78 <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE+0x78>
  70:	cmp	x25, x19
  74:	b.cs	38 <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE+0x38>  // b.hs, b.nlast
  78:	add	x8, x24, #0x18
  7c:	ldr	x24, [x8]
  80:	cbnz	x24, 48 <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE+0x48>
  84:	cmp	x23, x22
  88:	b.eq	c0 <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE+0xc0>  // b.none
  8c:	ldr	x24, [x23, #40]
  90:	cmp	x24, x19
  94:	csel	x2, x24, x19, cc  // cc = lo, ul, last
  98:	cbz	x2, b4 <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE+0xb4>
  9c:	ldr	x1, [x23, #32]
  a0:	mov	x0, x20
  a4:	bl	0 <memcmp>
  a8:	cbz	w0, b4 <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE+0xb4>
  ac:	tbnz	w0, #31, bc <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE+0xbc>
  b0:	b	c0 <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE+0xc0>
  b4:	cmp	x19, x24
  b8:	b.cs	c0 <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE+0xc0>  // b.hs, b.nlast
  bc:	mov	x23, x22
  c0:	cmp	x23, x22
  c4:	b.ne	d8 <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE+0xd8>  // b.any
  c8:	ldr	x21, [x21, #48]
  cc:	cbnz	x21, 24 <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE+0x24>
  d0:	mov	x0, xzr
  d4:	b	dc <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE+0xdc>
  d8:	ldr	x0, [x23, #64]
  dc:	ldp	x20, x19, [sp, #64]
  e0:	ldp	x22, x21, [sp, #48]
  e4:	ldp	x24, x23, [sp, #32]
  e8:	ldr	x25, [sp, #16]
  ec:	ldp	x29, x30, [sp], #80
  f0:	ret

Disassembly of section .text._ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE:

0000000000000000 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x19, x2
  18:	mov	x20, x1
  1c:	mov	x21, x0
  20:	bl	0 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE>
  24:	cbz	x0, 3c <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x3c>
  28:	ldp	x20, x19, [sp, #48]
  2c:	ldp	x22, x21, [sp, #32]
  30:	ldp	x24, x23, [sp, #16]
  34:	ldp	x29, x30, [sp], #64
  38:	b	0 <_ZN4llvm6Record10getDefInitEv>
  3c:	ldr	x23, [x21, #136]
  40:	add	x21, x21, #0x80
  44:	cbz	x23, d4 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xd4>
  48:	mov	x22, x21
  4c:	b	60 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x60>
  50:	add	x8, x23, #0x10
  54:	mov	x22, x23
  58:	ldr	x23, [x8]
  5c:	cbz	x23, 9c <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x9c>
  60:	ldr	x24, [x23, #40]
  64:	cmp	x19, x24
  68:	csel	x2, x19, x24, cc  // cc = lo, ul, last
  6c:	cbz	x2, 88 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x88>
  70:	ldr	x0, [x23, #32]
  74:	mov	x1, x20
  78:	bl	0 <memcmp>
  7c:	cbz	w0, 88 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x88>
  80:	tbz	w0, #31, 50 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x50>
  84:	b	90 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x90>
  88:	cmp	x24, x19
  8c:	b.cs	50 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x50>  // b.hs, b.nlast
  90:	add	x8, x23, #0x18
  94:	ldr	x23, [x8]
  98:	cbnz	x23, 60 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x60>
  9c:	cmp	x22, x21
  a0:	b.eq	d8 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xd8>  // b.none
  a4:	ldr	x23, [x22, #40]
  a8:	cmp	x23, x19
  ac:	csel	x2, x23, x19, cc  // cc = lo, ul, last
  b0:	cbz	x2, cc <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xcc>
  b4:	ldr	x1, [x22, #32]
  b8:	mov	x0, x20
  bc:	bl	0 <memcmp>
  c0:	cbz	w0, cc <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xcc>
  c4:	tbnz	w0, #31, d4 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xd4>
  c8:	b	d8 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xd8>
  cc:	cmp	x19, x23
  d0:	b.cs	d8 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xd8>  // b.hs, b.nlast
  d4:	mov	x22, x21
  d8:	cmp	x22, x21
  dc:	b.eq	e8 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xe8>  // b.none
  e0:	ldr	x0, [x22, #64]
  e4:	b	ec <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xec>
  e8:	mov	x0, xzr
  ec:	ldp	x20, x19, [sp, #48]
  f0:	ldp	x22, x21, [sp, #32]
  f4:	ldp	x24, x23, [sp, #16]
  f8:	ldp	x29, x30, [sp], #64
  fc:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsEj:

0000000000000000 <_ZN4llvm11raw_ostreamlsEj>:
   0:	mov	w1, w1
   4:	b	0 <_ZN4llvm11raw_ostreamlsEm>

Disassembly of section .text._ZN4llvm8TGParser14PushLocalScopeEv:

0000000000000000 <_ZN4llvm8TGParser14PushLocalScopeEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	mov	w0, #0x38                  	// #56
  18:	bl	0 <_Znwm>
  1c:	ldr	x8, [x19, #336]
  20:	mov	x9, x0
  24:	str	xzr, [x19, #336]
  28:	str	wzr, [x9, #8]!
  2c:	mov	x21, x0
  30:	stp	xzr, x9, [x0, #16]
  34:	stp	x9, xzr, [x0, #32]
  38:	str	x8, [x0, #48]
  3c:	add	x0, x29, #0x18
  40:	str	xzr, [x29, #24]
  44:	bl	0 <_ZN4llvm8TGParser14PushLocalScopeEv>
  48:	str	xzr, [x29, #24]
  4c:	ldr	x20, [x19, #336]
  50:	str	x21, [x19, #336]
  54:	cbz	x20, 74 <_ZN4llvm8TGParser14PushLocalScopeEv+0x74>
  58:	add	x0, x20, #0x30
  5c:	bl	0 <_ZN4llvm8TGParser14PushLocalScopeEv>
  60:	ldr	x1, [x20, #16]
  64:	mov	x0, x20
  68:	bl	0 <_ZN4llvm8TGParser14PushLocalScopeEv>
  6c:	mov	x0, x20
  70:	bl	0 <_ZdlPv>
  74:	add	x0, x29, #0x18
  78:	bl	0 <_ZN4llvm8TGParser14PushLocalScopeEv>
  7c:	ldr	x0, [x19, #336]
  80:	ldp	x20, x19, [sp, #32]
  84:	ldr	x21, [sp, #16]
  88:	ldp	x29, x30, [sp], #48
  8c:	ret

Disassembly of section .text._ZNK4llvm15TGLocalVarScope17varAlreadyDefinedENS_9StringRefE:

0000000000000000 <_ZNK4llvm15TGLocalVarScope17varAlreadyDefinedENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x23, [x0, #16]
  18:	add	x21, x0, #0x8
  1c:	cbz	x23, b4 <_ZNK4llvm15TGLocalVarScope17varAlreadyDefinedENS_9StringRefE+0xb4>
  20:	mov	x19, x2
  24:	mov	x20, x1
  28:	mov	x22, x21
  2c:	b	40 <_ZNK4llvm15TGLocalVarScope17varAlreadyDefinedENS_9StringRefE+0x40>
  30:	add	x8, x23, #0x10
  34:	mov	x22, x23
  38:	ldr	x23, [x8]
  3c:	cbz	x23, 7c <_ZNK4llvm15TGLocalVarScope17varAlreadyDefinedENS_9StringRefE+0x7c>
  40:	ldr	x24, [x23, #40]
  44:	cmp	x19, x24
  48:	csel	x2, x19, x24, cc  // cc = lo, ul, last
  4c:	cbz	x2, 68 <_ZNK4llvm15TGLocalVarScope17varAlreadyDefinedENS_9StringRefE+0x68>
  50:	ldr	x0, [x23, #32]
  54:	mov	x1, x20
  58:	bl	0 <memcmp>
  5c:	cbz	w0, 68 <_ZNK4llvm15TGLocalVarScope17varAlreadyDefinedENS_9StringRefE+0x68>
  60:	tbz	w0, #31, 30 <_ZNK4llvm15TGLocalVarScope17varAlreadyDefinedENS_9StringRefE+0x30>
  64:	b	70 <_ZNK4llvm15TGLocalVarScope17varAlreadyDefinedENS_9StringRefE+0x70>
  68:	cmp	x24, x19
  6c:	b.cs	30 <_ZNK4llvm15TGLocalVarScope17varAlreadyDefinedENS_9StringRefE+0x30>  // b.hs, b.nlast
  70:	add	x8, x23, #0x18
  74:	ldr	x23, [x8]
  78:	cbnz	x23, 40 <_ZNK4llvm15TGLocalVarScope17varAlreadyDefinedENS_9StringRefE+0x40>
  7c:	cmp	x22, x21
  80:	b.eq	b8 <_ZNK4llvm15TGLocalVarScope17varAlreadyDefinedENS_9StringRefE+0xb8>  // b.none
  84:	ldr	x23, [x22, #40]
  88:	cmp	x23, x19
  8c:	csel	x2, x23, x19, cc  // cc = lo, ul, last
  90:	cbz	x2, ac <_ZNK4llvm15TGLocalVarScope17varAlreadyDefinedENS_9StringRefE+0xac>
  94:	ldr	x1, [x22, #32]
  98:	mov	x0, x20
  9c:	bl	0 <memcmp>
  a0:	cbz	w0, ac <_ZNK4llvm15TGLocalVarScope17varAlreadyDefinedENS_9StringRefE+0xac>
  a4:	tbnz	w0, #31, b4 <_ZNK4llvm15TGLocalVarScope17varAlreadyDefinedENS_9StringRefE+0xb4>
  a8:	b	b8 <_ZNK4llvm15TGLocalVarScope17varAlreadyDefinedENS_9StringRefE+0xb8>
  ac:	cmp	x19, x23
  b0:	b.cs	b8 <_ZNK4llvm15TGLocalVarScope17varAlreadyDefinedENS_9StringRefE+0xb8>  // b.hs, b.nlast
  b4:	mov	x22, x21
  b8:	cmp	x22, x21
  bc:	ldp	x20, x19, [sp, #48]
  c0:	ldp	x22, x21, [sp, #32]
  c4:	ldp	x24, x23, [sp, #16]
  c8:	cset	w0, ne  // ne = any
  cc:	ldp	x29, x30, [sp], #64
  d0:	ret

Disassembly of section .text._ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE:

0000000000000000 <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x20, x19, [sp, #48]
   c:	add	x29, sp, #0x20
  10:	ldr	x8, [x1]
  14:	ldr	x9, [x8]
  18:	cbz	x9, b8 <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xb8>
  1c:	ldrb	w10, [x9, #8]
  20:	cmp	w10, #0x12
  24:	b.ne	d8 <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xd8>  // b.any
  28:	ldur	q0, [x9, #24]
  2c:	str	q0, [sp]
  30:	str	xzr, [x1]
  34:	mov	x1, sp
  38:	str	x8, [sp, #16]
  3c:	bl	0 <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  40:	ldr	x20, [sp, #16]
  44:	mov	x19, x1
  48:	cbz	x20, a4 <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xa4>
  4c:	ldr	x0, [x20, #88]
  50:	add	x8, x20, #0x68
  54:	cmp	x0, x8
  58:	b.eq	60 <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x60>  // b.none
  5c:	bl	0 <free>
  60:	ldr	x0, [x20, #72]
  64:	add	x8, x20, #0x58
  68:	cmp	x0, x8
  6c:	b.eq	74 <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x74>  // b.none
  70:	bl	0 <free>
  74:	ldr	x0, [x20, #56]
  78:	add	x8, x20, #0x48
  7c:	cmp	x0, x8
  80:	b.eq	88 <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x88>  // b.none
  84:	bl	0 <free>
  88:	ldr	x0, [x20, #8]
  8c:	add	x8, x20, #0x18
  90:	cmp	x0, x8
  94:	b.eq	9c <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x9c>  // b.none
  98:	bl	0 <free>
  9c:	mov	x0, x20
  a0:	bl	0 <_ZdlPv>
  a4:	tbz	w19, #0, f8 <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xf8>
  a8:	ldp	x20, x19, [sp, #48]
  ac:	ldp	x29, x30, [sp, #32]
  b0:	add	sp, sp, #0x40
  b4:	ret
  b8:	adrp	x0, 0 <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  bc:	adrp	x1, 0 <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  c0:	adrp	x3, 0 <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  c4:	add	x0, x0, #0x0
  c8:	add	x1, x1, #0x0
  cc:	add	x3, x3, #0x0
  d0:	mov	w2, #0x69                  	// #105
  d4:	bl	0 <__assert_fail>
  d8:	adrp	x0, 0 <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  dc:	adrp	x1, 0 <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  e0:	adrp	x3, 0 <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0x108                 	// #264
  f4:	bl	0 <__assert_fail>
  f8:	adrp	x0, 0 <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  fc:	adrp	x1, 0 <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
 100:	adrp	x3, 0 <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0x6c0                 	// #1728
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_9LetRecordEE12emplace_backIJRPNS_10StringInitERNS_11SmallVectorIjLj16EEERPNS_4InitERNS_5SMLocEEEERS1_DpOT_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_9LetRecordEE12emplace_backIJRPNS_10StringInitERNS_11SmallVectorIjLj16EEERPNS_4InitERNS_5SMLocEEEERS1_DpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	str	x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	ldp	w8, w9, [x0, #8]
  20:	mov	x20, x4
  24:	mov	x21, x3
  28:	mov	x22, x2
  2c:	mov	x19, x0
  30:	cmp	w8, w9
  34:	mov	x23, x1
  38:	b.cs	ec <_ZN4llvm15SmallVectorImplINS_9LetRecordEE12emplace_backIJRPNS_10StringInitERNS_11SmallVectorIjLj16EEERPNS_4InitERNS_5SMLocEEEERS1_DpOT_+0xec>  // b.hs, b.nlast
  3c:	ldr	x24, [x19]
  40:	ldr	x10, [x23]
  44:	ldr	x23, [x22]
  48:	ldr	w26, [x22, #8]
  4c:	ldr	x21, [x21]
  50:	ldr	x22, [x20]
  54:	mov	w9, #0x30                  	// #48
  58:	umaddl	x27, w8, w9, x24
  5c:	mov	w25, w8
  60:	str	x10, [x27]
  64:	stp	xzr, xzr, [x27, #16]
  68:	str	xzr, [x27, #8]!
  6c:	cbz	w26, 94 <_ZN4llvm15SmallVectorImplINS_9LetRecordEE12emplace_backIJRPNS_10StringInitERNS_11SmallVectorIjLj16EEERPNS_4InitERNS_5SMLocEEEERS1_DpOT_+0x94>
  70:	lsl	x20, x26, #2
  74:	mov	x0, x20
  78:	bl	0 <_Znwm>
  7c:	mov	x1, x23
  80:	mov	x2, x20
  84:	str	x0, [x27]
  88:	add	x26, x0, x26, lsl #2
  8c:	bl	0 <memcpy>
  90:	b	9c <_ZN4llvm15SmallVectorImplINS_9LetRecordEE12emplace_backIJRPNS_10StringInitERNS_11SmallVectorIjLj16EEERPNS_4InitERNS_5SMLocEEEERS1_DpOT_+0x9c>
  94:	mov	x26, xzr
  98:	str	xzr, [x27]
  9c:	mov	w8, #0x30                  	// #48
  a0:	madd	x8, x25, x8, x24
  a4:	stp	x26, x26, [x8, #16]
  a8:	stp	x21, x22, [x8, #32]
  ac:	ldp	w8, w9, [x19, #8]
  b0:	cmp	w8, w9
  b4:	b.cs	100 <_ZN4llvm15SmallVectorImplINS_9LetRecordEE12emplace_backIJRPNS_10StringInitERNS_11SmallVectorIjLj16EEERPNS_4InitERNS_5SMLocEEEERS1_DpOT_+0x100>  // b.hs, b.nlast
  b8:	ldr	x9, [x19]
  bc:	add	x8, x8, #0x1
  c0:	str	w8, [x19, #8]
  c4:	ldp	x20, x19, [sp, #80]
  c8:	ldp	x22, x21, [sp, #64]
  cc:	ldp	x24, x23, [sp, #48]
  d0:	ldp	x26, x25, [sp, #32]
  d4:	ldr	x27, [sp, #16]
  d8:	mov	w10, #0x30                  	// #48
  dc:	madd	x9, x8, x10, x9
  e0:	sub	x0, x9, #0x30
  e4:	ldp	x29, x30, [sp], #96
  e8:	ret
  ec:	mov	x0, x19
  f0:	mov	x1, xzr
  f4:	bl	0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEE12emplace_backIJRPNS_10StringInitERNS_11SmallVectorIjLj16EEERPNS_4InitERNS_5SMLocEEEERS1_DpOT_>
  f8:	ldr	w8, [x19, #8]
  fc:	b	3c <_ZN4llvm15SmallVectorImplINS_9LetRecordEE12emplace_backIJRPNS_10StringInitERNS_11SmallVectorIjLj16EEERPNS_4InitERNS_5SMLocEEEERS1_DpOT_+0x3c>
 100:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEE12emplace_backIJRPNS_10StringInitERNS_11SmallVectorIjLj16EEERPNS_4InitERNS_5SMLocEEEERS1_DpOT_>
 104:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEE12emplace_backIJRPNS_10StringInitERNS_11SmallVectorIjLj16EEERPNS_4InitERNS_5SMLocEEEERS1_DpOT_>
 108:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEE12emplace_backIJRPNS_10StringInitERNS_11SmallVectorIjLj16EEERPNS_4InitERNS_5SMLocEEEERS1_DpOT_>
 10c:	add	x0, x0, #0x0
 110:	add	x1, x1, #0x0
 114:	add	x3, x3, #0x0
 118:	mov	w2, #0x43                  	// #67
 11c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS1_EED2Ev:

0000000000000000 <_ZNSt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS1_EED2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x20, [x0]
  14:	mov	x19, x0
  18:	cbz	x20, a4 <_ZNSt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS1_EED2Ev+0xa4>
  1c:	ldp	x21, x22, [x20, #128]
  20:	cmp	x21, x22
  24:	b.eq	40 <_ZNSt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS1_EED2Ev+0x40>  // b.none
  28:	mov	x0, x21
  2c:	bl	0 <_ZNSt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS1_EED2Ev>
  30:	add	x21, x21, #0x10
  34:	cmp	x22, x21
  38:	b.ne	28 <_ZNSt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS1_EED2Ev+0x28>  // b.any
  3c:	ldr	x21, [x20, #128]
  40:	cbz	x21, 4c <_ZNSt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS1_EED2Ev+0x4c>
  44:	mov	x0, x21
  48:	bl	0 <_ZdlPv>
  4c:	ldr	x0, [x20, #88]
  50:	add	x8, x20, #0x68
  54:	cmp	x0, x8
  58:	b.eq	60 <_ZNSt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS1_EED2Ev+0x60>  // b.none
  5c:	bl	0 <free>
  60:	ldr	x0, [x20, #72]
  64:	add	x8, x20, #0x58
  68:	cmp	x0, x8
  6c:	b.eq	74 <_ZNSt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS1_EED2Ev+0x74>  // b.none
  70:	bl	0 <free>
  74:	ldr	x0, [x20, #56]
  78:	add	x8, x20, #0x48
  7c:	cmp	x0, x8
  80:	b.eq	88 <_ZNSt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS1_EED2Ev+0x88>  // b.none
  84:	bl	0 <free>
  88:	ldr	x0, [x20, #8]
  8c:	add	x8, x20, #0x18
  90:	cmp	x0, x8
  94:	b.eq	9c <_ZNSt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS1_EED2Ev+0x9c>  // b.none
  98:	bl	0 <free>
  9c:	mov	x0, x20
  a0:	bl	0 <_ZdlPv>
  a4:	str	xzr, [x19]
  a8:	ldp	x20, x19, [sp, #32]
  ac:	ldp	x22, x21, [sp, #16]
  b0:	ldp	x29, x30, [sp], #48
  b4:	ret

Disassembly of section .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_:

0000000000000000 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x28, x27, [sp, #48]
   c:	stp	x26, x25, [sp, #64]
  10:	stp	x24, x23, [sp, #80]
  14:	stp	x22, x21, [sp, #96]
  18:	stp	x20, x19, [sp, #112]
  1c:	add	x29, sp, #0x20
  20:	ldr	x25, [x0, #16]
  24:	mov	x20, x1
  28:	mov	x19, x0
  2c:	add	x23, x0, #0x8
  30:	cbz	x25, e0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0xe0>
  34:	str	x19, [sp, #8]
  38:	ldp	x22, x24, [x20]
  3c:	mov	w26, #0x7fffffff            	// #2147483647
  40:	mov	x27, #0xffffffff80000000    	// #-2147483648
  44:	mov	w28, #0x80000000            	// #-2147483648
  48:	mov	x21, x23
  4c:	b	74 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0x74>
  50:	tbnz	w0, #31, 68 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0x68>
  54:	add	x8, x25, #0x10
  58:	mov	x21, x25
  5c:	ldr	x25, [x8]
  60:	cbnz	x25, 74 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0x74>
  64:	b	a8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0xa8>
  68:	add	x8, x25, #0x18
  6c:	ldr	x25, [x8]
  70:	cbz	x25, a8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0xa8>
  74:	ldr	x8, [x25, #40]
  78:	subs	x19, x8, x24
  7c:	csel	x2, x24, x8, hi  // hi = pmore
  80:	cbz	x2, 94 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0x94>
  84:	ldr	x0, [x25, #32]
  88:	mov	x1, x22
  8c:	bl	0 <memcmp>
  90:	cbnz	w0, 50 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0x50>
  94:	cmp	x19, x26
  98:	b.gt	54 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0x54>
  9c:	cmp	x19, x27
  a0:	csel	w0, w19, w28, gt
  a4:	b	50 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0x50>
  a8:	cmp	x21, x23
  ac:	b.eq	e8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0xe8>  // b.none
  b0:	ldr	x8, [x20, #8]
  b4:	ldr	x9, [x21, #40]
  b8:	ldr	x19, [sp, #8]
  bc:	subs	x22, x8, x9
  c0:	csel	x2, x9, x8, hi  // hi = pmore
  c4:	cbz	x2, 134 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0x134>
  c8:	ldr	x1, [x21, #32]
  cc:	ldr	x0, [x20]
  d0:	bl	0 <memcmp>
  d4:	cbz	w0, 134 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0x134>
  d8:	tbz	w0, #31, 110 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0x110>
  dc:	b	ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0xec>
  e0:	mov	x21, x23
  e4:	b	ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0xec>
  e8:	ldr	x19, [sp, #8]
  ec:	adrp	x2, 0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_>
  f0:	add	x2, x2, #0x0
  f4:	sub	x3, x29, #0x8
  f8:	add	x4, sp, #0x10
  fc:	mov	x0, x19
 100:	mov	x1, x21
 104:	stur	x20, [x29, #-8]
 108:	bl	0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_>
 10c:	mov	x21, x0
 110:	add	x0, x21, #0x40
 114:	ldp	x20, x19, [sp, #112]
 118:	ldp	x22, x21, [sp, #96]
 11c:	ldp	x24, x23, [sp, #80]
 120:	ldp	x26, x25, [sp, #64]
 124:	ldp	x28, x27, [sp, #48]
 128:	ldp	x29, x30, [sp, #32]
 12c:	add	sp, sp, #0x80
 130:	ret
 134:	mov	w8, #0x7fffffff            	// #2147483647
 138:	cmp	x22, x8
 13c:	b.gt	110 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0x110>
 140:	mov	x8, #0xffffffff80000000    	// #-2147483648
 144:	cmp	x22, x8
 148:	mov	w8, #0x80000000            	// #-2147483648
 14c:	csel	w0, w22, w8, gt
 150:	tbz	w0, #31, 110 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0x110>
 154:	b	ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0xec>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	118 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x118>  // b.plast
  54:	cbz	x3, 1ac <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x1ac>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldr	x8, [x3]
  68:	cmn	x8, #0x8
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 1ac <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x1ac>
  a0:	ldr	x8, [x20]
  a4:	orr	x9, x8, #0x8
  a8:	cmn	x9, #0x8
  ac:	b.eq	1cc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x1cc>  // b.none
  b0:	ldr	x9, [x19, #8]
  b4:	ubfx	x11, x8, #4, #28
  b8:	eor	w11, w11, w8, lsr #9
  bc:	sub	w10, w10, #0x1
  c0:	and	w12, w11, w10
  c4:	mov	w11, #0x18                  	// #24
  c8:	umaddl	x3, w12, w11, x9
  cc:	ldr	x14, [x3]
  d0:	cmp	x14, x8
  d4:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x54>  // b.none
  d8:	mov	x13, xzr
  dc:	mov	w16, #0x1                   	// #1
  e0:	mov	x15, #0xfffffffffffffff0    	// #-16
  e4:	cmn	x14, #0x8
  e8:	b.eq	1a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x1a0>  // b.none
  ec:	cmp	x13, #0x0
  f0:	add	w12, w12, w16
  f4:	ccmp	x14, x15, #0x0, eq  // eq = none
  f8:	and	w12, w12, w10
  fc:	csel	x13, x13, x3, ne  // ne = any
 100:	umaddl	x3, w12, w11, x9
 104:	ldr	x14, [x3]
 108:	add	w16, w16, #0x1
 10c:	cmp	x14, x8
 110:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x54>  // b.none
 114:	b	e4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0xe4>
 118:	mov	x0, x19
 11c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_>
 120:	ldr	w10, [x19, #24]
 124:	cbz	w10, 1ac <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x1ac>
 128:	ldr	x8, [x20]
 12c:	orr	x9, x8, #0x8
 130:	cmn	x9, #0x8
 134:	b.eq	1cc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x1cc>  // b.none
 138:	ldr	x9, [x19, #8]
 13c:	ubfx	x11, x8, #4, #28
 140:	eor	w11, w11, w8, lsr #9
 144:	sub	w10, w10, #0x1
 148:	and	w12, w11, w10
 14c:	mov	w11, #0x18                  	// #24
 150:	umaddl	x3, w12, w11, x9
 154:	ldr	x14, [x3]
 158:	cmp	x14, x8
 15c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x54>  // b.none
 160:	mov	x13, xzr
 164:	mov	w16, #0x1                   	// #1
 168:	mov	x15, #0xfffffffffffffff0    	// #-16
 16c:	cmn	x14, #0x8
 170:	b.eq	1a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x1a0>  // b.none
 174:	cmp	x13, #0x0
 178:	add	w12, w12, w16
 17c:	ccmp	x14, x15, #0x0, eq  // eq = none
 180:	and	w12, w12, w10
 184:	csel	x13, x13, x3, ne  // ne = any
 188:	umaddl	x3, w12, w11, x9
 18c:	ldr	x14, [x3]
 190:	add	w16, w16, #0x1
 194:	cmp	x14, x8
 198:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x54>  // b.none
 19c:	b	16c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x16c>
 1a0:	cmp	x13, #0x0
 1a4:	csel	x3, x3, x13, eq  // eq = none
 1a8:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x54>
 1ac:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_>
 1b0:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_>
 1b4:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_>
 1b8:	add	x0, x0, #0x0
 1bc:	add	x1, x1, #0x0
 1c0:	add	x3, x3, #0x0
 1c4:	mov	w2, #0x22f                 	// #559
 1c8:	bl	0 <__assert_fail>
 1cc:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_>
 1d0:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_>
 1d4:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_>
 1d8:	add	x0, x0, #0x0
 1dc:	add	x1, x1, #0x0
 1e0:	add	x3, x3, #0x0
 1e4:	mov	w2, #0x252                 	// #594
 1e8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	w9, #0x18                  	// #24
  4c:	mov	x19, x0
  50:	str	w8, [x0, #24]
  54:	umull	x0, w8, w9
  58:	bl	0 <_Znwm>
  5c:	str	x0, [x19, #8]
  60:	cbz	x20, 8c <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x8c>
  64:	mov	w8, #0x18                  	// #24
  68:	madd	x2, x21, x8, x20
  6c:	mov	x0, x19
  70:	mov	x1, x20
  74:	bl	0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
  78:	mov	x0, x20
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldr	x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	b	0 <_ZdlPv>
  8c:	ldr	w8, [x19, #24]
  90:	str	xzr, [x19, #16]
  94:	sub	w9, w8, #0x1
  98:	tst	w8, w9
  9c:	b.ne	128 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x128>  // b.any
  a0:	cbz	w8, 118 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x118>
  a4:	add	x8, x8, x8, lsl #1
  a8:	lsl	x8, x8, #3
  ac:	sub	x10, x8, #0x18
  b0:	cmp	x10, #0x18
  b4:	mov	x9, x0
  b8:	b.cc	104 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x104>  // b.lo, b.ul, b.last
  bc:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  c0:	movk	x9, #0xaaab
  c4:	umulh	x9, x10, x9
  c8:	lsr	x9, x9, #4
  cc:	add	x10, x9, #0x1
  d0:	mov	w12, #0x18                  	// #24
  d4:	and	x11, x10, #0x1ffffffffffffffe
  d8:	madd	x9, x11, x12, x0
  dc:	mov	x12, #0xfffffffffffffff8    	// #-8
  e0:	mov	x13, x11
  e4:	mov	x14, x0
  e8:	str	x12, [x14]
  ec:	str	x12, [x14, #24]
  f0:	subs	x13, x13, #0x2
  f4:	add	x14, x14, #0x30
  f8:	b.ne	e8 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0xe8>  // b.any
  fc:	cmp	x10, x11
 100:	b.eq	118 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x118>  // b.none
 104:	add	x8, x0, x8
 108:	mov	x10, #0xfffffffffffffff8    	// #-8
 10c:	str	x10, [x9], #24
 110:	cmp	x8, x9
 114:	b.ne	10c <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x10c>  // b.any
 118:	ldp	x20, x19, [sp, #32]
 11c:	ldr	x21, [sp, #16]
 120:	ldp	x29, x30, [sp], #48
 124:	ret
 128:	adrp	x0, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
 12c:	adrp	x1, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
 130:	adrp	x3, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
 134:	add	x0, x0, #0x0
 138:	add	x1, x1, #0x0
 13c:	add	x3, x3, #0x0
 140:	mov	w2, #0x15c                 	// #348
 144:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w9, w8, #0x1
  14:	tst	w8, w9
  18:	b.ne	1b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x1b0>  // b.any
  1c:	cbz	w8, a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0xa0>
  20:	ldr	x9, [x0, #8]
  24:	mov	w10, #0x18                  	// #24
  28:	mul	x10, x8, x10
  2c:	sub	x10, x10, #0x18
  30:	cmp	x10, #0x18
  34:	b.cs	40 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x40>  // b.hs, b.nlast
  38:	mov	x10, x9
  3c:	b	88 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x88>
  40:	mov	x11, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  44:	movk	x11, #0xaaab
  48:	umulh	x10, x10, x11
  4c:	lsr	x10, x10, #4
  50:	add	x11, x10, #0x1
  54:	mov	w13, #0x18                  	// #24
  58:	and	x12, x11, #0x1ffffffffffffffe
  5c:	madd	x10, x12, x13, x9
  60:	mov	x13, #0xfffffffffffffff8    	// #-8
  64:	mov	x14, x12
  68:	mov	x15, x9
  6c:	str	x13, [x15]
  70:	str	x13, [x15, #24]
  74:	subs	x14, x14, #0x2
  78:	add	x15, x15, #0x30
  7c:	b.ne	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x6c>  // b.any
  80:	cmp	x11, x12
  84:	b.eq	a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0xa0>  // b.none
  88:	mov	w11, #0x18                  	// #24
  8c:	madd	x8, x8, x11, x9
  90:	mov	x9, #0xfffffffffffffff8    	// #-8
  94:	str	x9, [x10], #24
  98:	cmp	x8, x10
  9c:	b.ne	94 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x94>  // b.any
  a0:	cmp	x1, x2
  a4:	b.eq	168 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x168>  // b.none
  a8:	mov	w8, #0x18                  	// #24
  ac:	mov	x9, #0xfffffffffffffff0    	// #-16
  b0:	b	e0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0xe0>
  b4:	cmp	x15, #0x0
  b8:	csel	x11, x13, x15, eq  // eq = none
  bc:	str	x10, [x11]
  c0:	ldur	q0, [x1, #8]
  c4:	stur	q0, [x11, #8]
  c8:	ldr	w10, [x0, #16]
  cc:	add	w10, w10, #0x1
  d0:	str	w10, [x0, #16]
  d4:	add	x1, x1, #0x18
  d8:	cmp	x1, x2
  dc:	b.eq	168 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x168>  // b.none
  e0:	ldr	x10, [x1]
  e4:	orr	x11, x10, #0x8
  e8:	cmn	x11, #0x8
  ec:	b.eq	d4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0xd4>  // b.none
  f0:	ldr	w12, [x0, #24]
  f4:	cbz	w12, 160 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x160>
  f8:	cmn	x10, #0x8
  fc:	b.eq	190 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x190>  // b.none
 100:	ldr	x11, [x0, #8]
 104:	ubfx	x13, x10, #4, #28
 108:	eor	w13, w13, w10, lsr #9
 10c:	sub	w12, w12, #0x1
 110:	and	w14, w13, w12
 114:	umaddl	x13, w14, w8, x11
 118:	ldr	x16, [x13]
 11c:	cmp	x16, x10
 120:	b.eq	170 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x170>  // b.none
 124:	mov	x15, xzr
 128:	mov	w17, #0x1                   	// #1
 12c:	cmn	x16, #0x8
 130:	b.eq	b4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0xb4>  // b.none
 134:	cmp	x15, #0x0
 138:	add	w14, w14, w17
 13c:	ccmp	x16, x9, #0x0, eq  // eq = none
 140:	and	w14, w14, w12
 144:	csel	x15, x15, x13, ne  // ne = any
 148:	umaddl	x13, w14, w8, x11
 14c:	ldr	x16, [x13]
 150:	add	w17, w17, #0x1
 154:	cmp	x16, x10
 158:	b.ne	12c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x12c>  // b.any
 15c:	b	170 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x170>
 160:	mov	x11, xzr
 164:	b	bc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0xbc>
 168:	ldp	x29, x30, [sp], #16
 16c:	ret
 170:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>
 174:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>
 178:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>
 17c:	add	x0, x0, #0x0
 180:	add	x1, x1, #0x0
 184:	add	x3, x3, #0x0
 188:	mov	w2, #0x17a                 	// #378
 18c:	bl	0 <__assert_fail>
 190:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>
 194:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>
 198:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>
 19c:	add	x0, x0, #0x0
 1a0:	add	x1, x1, #0x0
 1a4:	add	x3, x3, #0x0
 1a8:	mov	w2, #0x252                 	// #594
 1ac:	bl	0 <__assert_fail>
 1b0:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>
 1b4:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>
 1b8:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>
 1bc:	add	x0, x0, #0x0
 1c0:	add	x1, x1, #0x0
 1c4:	add	x3, x3, #0x0
 1c8:	mov	w2, #0x15c                 	// #348
 1cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	add	x8, x21, x21, lsl #1
  6c:	lsl	x0, x8, #3
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0xb8>
  7c:	cbz	x21, 98 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0x98>
  80:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm>
  84:	add	x0, x0, #0x0
  88:	mov	w1, #0x1                   	// #1
  8c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  90:	mov	x20, xzr
  94:	b	b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0xb8>
  98:	mov	w0, #0x1                   	// #1
  9c:	bl	0 <malloc>
  a0:	mov	x20, x0
  a4:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0xb8>
  a8:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm>
  ac:	add	x0, x0, #0x0
  b0:	mov	w1, #0x1                   	// #1
  b4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b8:	ldr	w8, [x19, #8]
  bc:	ldr	x0, [x19]
  c0:	cbz	w8, ec <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0xec>
  c4:	add	x8, x8, x8, lsl #1
  c8:	lsl	x8, x8, #3
  cc:	mov	x9, x20
  d0:	ldr	x10, [x0, #16]
  d4:	ldr	q0, [x0], #24
  d8:	subs	x8, x8, #0x18
  dc:	str	x10, [x9, #16]
  e0:	str	q0, [x9], #24
  e4:	b.ne	d0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0xd0>  // b.any
  e8:	ldr	x0, [x19]
  ec:	add	x8, x19, #0x10
  f0:	cmp	x0, x8
  f4:	b.eq	fc <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0xfc>  // b.none
  f8:	bl	0 <free>
  fc:	str	x20, [x19]
 100:	str	w21, [x19, #12]
 104:	ldp	x20, x19, [sp, #32]
 108:	ldr	x21, [sp, #16]
 10c:	ldp	x29, x30, [sp], #48
 110:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x19, x0
  1c:	mov	w0, #0x48                  	// #72
  20:	mov	x22, x1
  24:	bl	0 <_Znwm>
  28:	ldr	x23, [x22]
  2c:	mov	x20, x0
  30:	add	x21, x0, #0x20
  34:	cbz	x23, 88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x88>
  38:	ldr	x24, [x22, #8]
  3c:	add	x25, x20, #0x30
  40:	str	x25, [x20, #32]
  44:	cmp	x24, #0x10
  48:	str	x24, [x29, #24]
  4c:	b.cc	70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x70>  // b.lo, b.ul, b.last
  50:	add	x1, x29, #0x18
  54:	mov	x0, x21
  58:	mov	x2, xzr
  5c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  60:	ldr	x8, [x29, #24]
  64:	str	x0, [x21]
  68:	str	x8, [x25]
  6c:	mov	x25, x0
  70:	cbz	x24, a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xa8>
  74:	cmp	x24, #0x1
  78:	b.ne	98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x98>  // b.any
  7c:	ldrb	w8, [x23]
  80:	strb	w8, [x25]
  84:	b	a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xa8>
  88:	mov	x8, x20
  8c:	strb	wzr, [x8, #48]!
  90:	stp	x8, xzr, [x8, #-16]
  94:	b	b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xb8>
  98:	mov	x0, x25
  9c:	mov	x1, x23
  a0:	mov	x2, x24
  a4:	bl	0 <memcpy>
  a8:	ldr	x8, [x29, #24]
  ac:	ldr	x9, [x20, #32]
  b0:	str	x8, [x20, #40]
  b4:	strb	wzr, [x9, x8]
  b8:	ldr	x8, [x22, #16]
  bc:	mov	x0, x19
  c0:	mov	x1, x21
  c4:	str	xzr, [x22, #16]
  c8:	str	x8, [x20, #64]
  cc:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_>
  d0:	mov	x23, x0
  d4:	cbz	x1, e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xe8>
  d8:	mov	x22, x1
  dc:	cbz	x23, 104 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x104>
  e0:	mov	w0, #0x1                   	// #1
  e4:	b	154 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x154>
  e8:	mov	x0, x19
  ec:	mov	x1, x21
  f0:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_>
  f4:	mov	x0, x20
  f8:	bl	0 <_ZdlPv>
  fc:	mov	x1, xzr
 100:	b	178 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x178>
 104:	add	x8, x19, #0x8
 108:	cmp	x8, x22
 10c:	b.eq	e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xe0>  // b.none
 110:	ldr	x8, [x20, #40]
 114:	ldr	x9, [x22, #40]
 118:	subs	x23, x8, x9
 11c:	csel	x2, x9, x8, hi  // hi = pmore
 120:	cbz	x2, 134 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x134>
 124:	ldr	x1, [x22, #32]
 128:	ldr	x0, [x21]
 12c:	bl	0 <memcmp>
 130:	cbnz	w0, 150 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x150>
 134:	mov	w0, #0x7fffffff            	// #2147483647
 138:	cmp	x23, x0
 13c:	b.gt	150 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x150>
 140:	mov	x8, #0xffffffff80000000    	// #-2147483648
 144:	cmp	x23, x8
 148:	mov	w8, #0x80000000            	// #-2147483648
 14c:	csel	w0, w23, w8, gt
 150:	lsr	w0, w0, #31
 154:	add	x3, x19, #0x8
 158:	mov	x1, x20
 15c:	mov	x2, x22
 160:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
 164:	ldr	x8, [x19, #40]
 168:	mov	w1, #0x1                   	// #1
 16c:	mov	x23, x20
 170:	add	x8, x8, #0x1
 174:	str	x8, [x19, #40]
 178:	mov	x0, x23
 17c:	ldp	x20, x19, [sp, #64]
 180:	ldp	x22, x21, [sp, #48]
 184:	ldp	x24, x23, [sp, #32]
 188:	ldr	x25, [sp, #16]
 18c:	ldp	x29, x30, [sp], #80
 190:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x9, [x0, #16]
  1c:	mov	x21, x0
  20:	mov	x20, x1
  24:	cbz	x9, a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0xa0>
  28:	ldp	x22, x23, [x20]
  2c:	mov	w24, #0x80000000            	// #-2147483648
  30:	mov	x25, #0xffffffff80000000    	// #-2147483648
  34:	b	4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x4c>
  38:	tbnz	w0, #31, 84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x84>
  3c:	mov	w8, wzr
  40:	add	x9, x19, #0x18
  44:	ldr	x9, [x9]
  48:	cbz	x9, 94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x94>
  4c:	ldr	x8, [x9, #40]
  50:	mov	x19, x9
  54:	subs	x26, x23, x8
  58:	csel	x2, x8, x23, hi  // hi = pmore
  5c:	cbz	x2, 70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x70>
  60:	ldr	x1, [x19, #32]
  64:	mov	x0, x22
  68:	bl	0 <memcmp>
  6c:	cbnz	w0, 38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x38>
  70:	cmp	x26, x24
  74:	b.ge	3c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x3c>  // b.tcont
  78:	cmp	x26, x25
  7c:	csel	w0, w26, w24, gt
  80:	b	38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x38>
  84:	add	x9, x19, #0x10
  88:	mov	w8, #0x1                   	// #1
  8c:	ldr	x9, [x9]
  90:	cbnz	x9, 4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x4c>
  94:	mov	x22, x19
  98:	cbnz	w8, a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0xa4>
  9c:	b	bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0xbc>
  a0:	add	x19, x21, #0x8
  a4:	ldr	x8, [x21, #24]
  a8:	cmp	x8, x19
  ac:	b.eq	110 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x110>  // b.none
  b0:	mov	x0, x19
  b4:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  b8:	mov	x22, x0
  bc:	ldr	x8, [x22, #40]
  c0:	ldr	x9, [x20, #8]
  c4:	subs	x21, x8, x9
  c8:	csel	x2, x9, x8, hi  // hi = pmore
  cc:	cbz	x2, e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0xe8>
  d0:	ldr	x1, [x20]
  d4:	ldr	x0, [x22, #32]
  d8:	bl	0 <memcmp>
  dc:	cbz	w0, e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0xe8>
  e0:	tbz	w0, #31, 108 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x108>
  e4:	b	110 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x110>
  e8:	mov	w8, #0x7fffffff            	// #2147483647
  ec:	cmp	x21, x8
  f0:	b.gt	108 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x108>
  f4:	mov	x8, #0xffffffff80000000    	// #-2147483648
  f8:	cmp	x21, x8
  fc:	mov	w8, #0x80000000            	// #-2147483648
 100:	csel	w0, w21, w8, gt
 104:	tbnz	w0, #31, 110 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x110>
 108:	mov	x19, xzr
 10c:	b	114 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x114>
 110:	mov	x22, xzr
 114:	mov	x0, x22
 118:	mov	x1, x19
 11c:	ldp	x20, x19, [sp, #64]
 120:	ldp	x22, x21, [sp, #48]
 124:	ldp	x24, x23, [sp, #32]
 128:	ldp	x26, x25, [sp, #16]
 12c:	ldp	x29, x30, [sp], #80
 130:	ret

Disassembly of section .text._ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_:

0000000000000000 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x20, [x1, #32]
  10:	mov	x19, x1
  14:	cbz	x20, 70 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_+0x70>
  18:	ldr	x0, [x20, #88]
  1c:	add	x8, x20, #0x68
  20:	cmp	x0, x8
  24:	b.eq	2c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_+0x2c>  // b.none
  28:	bl	0 <free>
  2c:	ldr	x0, [x20, #72]
  30:	add	x8, x20, #0x58
  34:	cmp	x0, x8
  38:	b.eq	40 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_+0x40>  // b.none
  3c:	bl	0 <free>
  40:	ldr	x0, [x20, #56]
  44:	add	x8, x20, #0x48
  48:	cmp	x0, x8
  4c:	b.eq	54 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_+0x54>  // b.none
  50:	bl	0 <free>
  54:	ldr	x0, [x20, #8]
  58:	add	x8, x20, #0x18
  5c:	cmp	x0, x8
  60:	b.eq	68 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_+0x68>  // b.none
  64:	bl	0 <free>
  68:	mov	x0, x20
  6c:	bl	0 <_ZdlPv>
  70:	ldr	x0, [x19]
  74:	add	x8, x19, #0x10
  78:	str	xzr, [x19, #32]
  7c:	cmp	x0, x8
  80:	b.eq	90 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_+0x90>  // b.none
  84:	ldp	x20, x19, [sp, #16]
  88:	ldp	x29, x30, [sp], #32
  8c:	b	0 <_ZdlPv>
  90:	ldp	x20, x19, [sp, #16]
  94:	ldp	x29, x30, [sp], #32
  98:	ret

Disassembly of section .text._ZNSt10unique_ptrIN4llvm15TGLocalVarScopeESt14default_deleteIS1_EED2Ev:

0000000000000000 <_ZNSt10unique_ptrIN4llvm15TGLocalVarScopeESt14default_deleteIS1_EED2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x20, [x0]
  10:	mov	x19, x0
  14:	cbz	x20, 34 <_ZNSt10unique_ptrIN4llvm15TGLocalVarScopeESt14default_deleteIS1_EED2Ev+0x34>
  18:	add	x0, x20, #0x30
  1c:	bl	0 <_ZNSt10unique_ptrIN4llvm15TGLocalVarScopeESt14default_deleteIS1_EED2Ev>
  20:	ldr	x1, [x20, #16]
  24:	mov	x0, x20
  28:	bl	0 <_ZNSt10unique_ptrIN4llvm15TGLocalVarScopeESt14default_deleteIS1_EED2Ev>
  2c:	mov	x0, x20
  30:	bl	0 <_ZdlPv>
  34:	str	xzr, [x19]
  38:	ldp	x20, x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x58>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	b	30 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x30>
  20:	mov	x0, x20
  24:	bl	0 <_ZdlPv>
  28:	mov	x20, x21
  2c:	cbz	x21, 58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x58>
  30:	ldr	x1, [x20, #24]
  34:	mov	x0, x19
  38:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E>
  3c:	ldr	x0, [x20, #32]
  40:	ldr	x21, [x20, #16]
  44:	add	x8, x20, #0x30
  48:	cmp	x0, x8
  4c:	b.eq	20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x20>  // b.none
  50:	bl	0 <_ZdlPv>
  54:	b	20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x20>
  58:	ldp	x20, x19, [sp, #32]
  5c:	ldr	x21, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_:

0000000000000000 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x19, x0
  18:	cmp	x0, x1
  1c:	b.eq	10c <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0x10c>  // b.none
  20:	mov	x21, x1
  24:	mov	x20, x1
  28:	ldr	x1, [x21], #16
  2c:	cmp	x1, x21
  30:	b.eq	68 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0x68>  // b.none
  34:	mov	x8, x19
  38:	ldr	x0, [x8], #16
  3c:	cmp	x0, x8
  40:	b.eq	4c <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0x4c>  // b.none
  44:	bl	0 <free>
  48:	ldr	x1, [x20]
  4c:	str	x1, [x19]
  50:	mov	x22, x20
  54:	ldr	x8, [x22, #8]!
  58:	str	x8, [x19, #8]
  5c:	str	x21, [x20]
  60:	str	wzr, [x20, #12]
  64:	b	108 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0x108>
  68:	mov	x22, x20
  6c:	ldr	w21, [x22, #8]!
  70:	ldr	w23, [x19, #8]
  74:	cmp	w23, w21
  78:	b.cs	a4 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0xa4>  // b.hs, b.nlast
  7c:	ldr	w8, [x19, #12]
  80:	cmp	w8, w21
  84:	b.cs	b8 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0xb8>  // b.hs, b.nlast
  88:	add	x1, x19, #0x10
  8c:	mov	w3, #0x8                   	// #8
  90:	mov	x0, x19
  94:	mov	x2, x21
  98:	str	wzr, [x19, #8]
  9c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  a0:	b	cc <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0xcc>
  a4:	cbz	w21, f8 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0xf8>
  a8:	ldr	x0, [x19]
  ac:	lsl	x2, x21, #3
  b0:	bl	0 <memmove>
  b4:	b	f8 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0xf8>
  b8:	cbz	w23, cc <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0xcc>
  bc:	ldr	x0, [x19]
  c0:	lsl	x2, x23, #3
  c4:	bl	0 <memmove>
  c8:	b	d0 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0xd0>
  cc:	mov	x23, xzr
  d0:	ldr	w8, [x20, #8]
  d4:	cmp	x23, x8
  d8:	b.eq	f8 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0xf8>  // b.none
  dc:	ldr	x9, [x20]
  e0:	ldr	x10, [x19]
  e4:	add	x1, x9, x23, lsl #3
  e8:	add	x8, x9, x8, lsl #3
  ec:	add	x0, x10, x23, lsl #3
  f0:	sub	x2, x8, x1
  f4:	bl	0 <memcpy>
  f8:	ldr	w8, [x19, #12]
  fc:	cmp	w8, w21
 100:	b.cc	124 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0x124>  // b.lo, b.ul, b.last
 104:	str	w21, [x19, #8]
 108:	str	wzr, [x22]
 10c:	mov	x0, x19
 110:	ldp	x20, x19, [sp, #48]
 114:	ldp	x22, x21, [sp, #32]
 118:	ldr	x23, [sp, #16]
 11c:	ldp	x29, x30, [sp], #64
 120:	ret
 124:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_>
 128:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_>
 12c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_>
 130:	add	x0, x0, #0x0
 134:	add	x1, x1, #0x0
 138:	add	x3, x3, #0x0
 13c:	mov	w2, #0x43                  	// #67
 140:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x20, x0
  1c:	mov	w0, #0x48                  	// #72
  20:	mov	x22, x1
  24:	bl	0 <_Znwm>
  28:	ldr	x23, [x22]
  2c:	mov	x19, x0
  30:	add	x21, x0, #0x20
  34:	cbz	x23, 88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x88>
  38:	ldr	x24, [x22, #8]
  3c:	add	x25, x19, #0x30
  40:	str	x25, [x19, #32]
  44:	cmp	x24, #0x10
  48:	str	x24, [x29, #24]
  4c:	b.cc	70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x70>  // b.lo, b.ul, b.last
  50:	add	x1, x29, #0x18
  54:	mov	x0, x21
  58:	mov	x2, xzr
  5c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  60:	ldr	x8, [x29, #24]
  64:	str	x0, [x21]
  68:	str	x8, [x25]
  6c:	mov	x25, x0
  70:	cbz	x24, a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0xa8>
  74:	cmp	x24, #0x1
  78:	b.ne	98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x98>  // b.any
  7c:	ldrb	w8, [x23]
  80:	strb	w8, [x25]
  84:	b	a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0xa8>
  88:	mov	x8, x19
  8c:	strb	wzr, [x8, #48]!
  90:	stp	x8, xzr, [x8, #-16]
  94:	b	b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0xb8>
  98:	mov	x0, x25
  9c:	mov	x1, x23
  a0:	mov	x2, x24
  a4:	bl	0 <memcpy>
  a8:	ldr	x8, [x29, #24]
  ac:	ldr	x9, [x19, #32]
  b0:	str	x8, [x19, #40]
  b4:	strb	wzr, [x9, x8]
  b8:	ldr	x8, [x22, #16]
  bc:	mov	x0, x20
  c0:	mov	x1, x21
  c4:	str	x8, [x19, #64]
  c8:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_>
  cc:	mov	x23, x0
  d0:	cbz	x1, e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0xe4>
  d4:	mov	x22, x1
  d8:	cbz	x23, 108 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x108>
  dc:	mov	w0, #0x1                   	// #1
  e0:	b	158 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x158>
  e4:	ldr	x0, [x19, #32]
  e8:	add	x8, x19, #0x30
  ec:	cmp	x0, x8
  f0:	b.eq	f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0xf8>  // b.none
  f4:	bl	0 <_ZdlPv>
  f8:	mov	x0, x19
  fc:	bl	0 <_ZdlPv>
 100:	mov	x1, xzr
 104:	b	17c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x17c>
 108:	add	x8, x20, #0x8
 10c:	cmp	x8, x22
 110:	b.eq	dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0xdc>  // b.none
 114:	ldr	x8, [x19, #40]
 118:	ldr	x9, [x22, #40]
 11c:	subs	x23, x8, x9
 120:	csel	x2, x9, x8, hi  // hi = pmore
 124:	cbz	x2, 138 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x138>
 128:	ldr	x1, [x22, #32]
 12c:	ldr	x0, [x21]
 130:	bl	0 <memcmp>
 134:	cbnz	w0, 154 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x154>
 138:	mov	w0, #0x7fffffff            	// #2147483647
 13c:	cmp	x23, x0
 140:	b.gt	154 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x154>
 144:	mov	x8, #0xffffffff80000000    	// #-2147483648
 148:	cmp	x23, x8
 14c:	mov	w8, #0x80000000            	// #-2147483648
 150:	csel	w0, w23, w8, gt
 154:	lsr	w0, w0, #31
 158:	add	x3, x20, #0x8
 15c:	mov	x1, x19
 160:	mov	x2, x22
 164:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
 168:	ldr	x8, [x20, #40]
 16c:	mov	w1, #0x1                   	// #1
 170:	mov	x23, x19
 174:	add	x8, x8, #0x1
 178:	str	x8, [x20, #40]
 17c:	mov	x0, x23
 180:	ldp	x20, x19, [sp, #64]
 184:	ldp	x22, x21, [sp, #48]
 188:	ldp	x24, x23, [sp, #32]
 18c:	ldr	x25, [sp, #16]
 190:	ldp	x29, x30, [sp], #80
 194:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x9, [x0, #16]
  1c:	mov	x21, x0
  20:	mov	x20, x1
  24:	cbz	x9, a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0xa0>
  28:	ldp	x22, x23, [x20]
  2c:	mov	w24, #0x80000000            	// #-2147483648
  30:	mov	x25, #0xffffffff80000000    	// #-2147483648
  34:	b	4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0x4c>
  38:	tbnz	w0, #31, 84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0x84>
  3c:	mov	w8, wzr
  40:	add	x9, x19, #0x18
  44:	ldr	x9, [x9]
  48:	cbz	x9, 94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0x94>
  4c:	ldr	x8, [x9, #40]
  50:	mov	x19, x9
  54:	subs	x26, x23, x8
  58:	csel	x2, x8, x23, hi  // hi = pmore
  5c:	cbz	x2, 70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0x70>
  60:	ldr	x1, [x19, #32]
  64:	mov	x0, x22
  68:	bl	0 <memcmp>
  6c:	cbnz	w0, 38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0x38>
  70:	cmp	x26, x24
  74:	b.ge	3c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0x3c>  // b.tcont
  78:	cmp	x26, x25
  7c:	csel	w0, w26, w24, gt
  80:	b	38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0x38>
  84:	add	x9, x19, #0x10
  88:	mov	w8, #0x1                   	// #1
  8c:	ldr	x9, [x9]
  90:	cbnz	x9, 4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0x4c>
  94:	mov	x22, x19
  98:	cbnz	w8, a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0xa4>
  9c:	b	bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0xbc>
  a0:	add	x19, x21, #0x8
  a4:	ldr	x8, [x21, #24]
  a8:	cmp	x8, x19
  ac:	b.eq	110 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0x110>  // b.none
  b0:	mov	x0, x19
  b4:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  b8:	mov	x22, x0
  bc:	ldr	x8, [x22, #40]
  c0:	ldr	x9, [x20, #8]
  c4:	subs	x21, x8, x9
  c8:	csel	x2, x9, x8, hi  // hi = pmore
  cc:	cbz	x2, e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0xe8>
  d0:	ldr	x1, [x20]
  d4:	ldr	x0, [x22, #32]
  d8:	bl	0 <memcmp>
  dc:	cbz	w0, e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0xe8>
  e0:	tbz	w0, #31, 108 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0x108>
  e4:	b	110 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0x110>
  e8:	mov	w8, #0x7fffffff            	// #2147483647
  ec:	cmp	x21, x8
  f0:	b.gt	108 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0x108>
  f4:	mov	x8, #0xffffffff80000000    	// #-2147483648
  f8:	cmp	x21, x8
  fc:	mov	w8, #0x80000000            	// #-2147483648
 100:	csel	w0, w21, w8, gt
 104:	tbnz	w0, #31, 110 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0x110>
 108:	mov	x19, xzr
 10c:	b	114 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0x114>
 110:	mov	x22, xzr
 114:	mov	x0, x22
 118:	mov	x1, x19
 11c:	ldp	x20, x19, [sp, #64]
 120:	ldp	x22, x21, [sp, #48]
 124:	ldp	x24, x23, [sp, #32]
 128:	ldp	x26, x25, [sp, #16]
 12c:	ldp	x29, x30, [sp], #80
 130:	ret

Disassembly of section .text._ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_:

0000000000000000 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x20, [x0, #8]
  18:	mov	x19, x0
  1c:	cbz	x20, 40 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x40>
  20:	ldp	x21, x23, [x20, #24]
  24:	cmp	x21, x23
  28:	b.ne	d0 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0xd0>  // b.any
  2c:	cbz	x21, 38 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x38>
  30:	mov	x0, x21
  34:	bl	0 <_ZdlPv>
  38:	mov	x0, x20
  3c:	bl	0 <_ZdlPv>
  40:	ldr	x20, [x19]
  44:	str	xzr, [x19, #8]
  48:	cbz	x20, a4 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0xa4>
  4c:	ldr	x0, [x20, #88]
  50:	add	x8, x20, #0x68
  54:	cmp	x0, x8
  58:	b.eq	60 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x60>  // b.none
  5c:	bl	0 <free>
  60:	ldr	x0, [x20, #72]
  64:	add	x8, x20, #0x58
  68:	cmp	x0, x8
  6c:	b.eq	74 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x74>  // b.none
  70:	bl	0 <free>
  74:	ldr	x0, [x20, #56]
  78:	add	x8, x20, #0x48
  7c:	cmp	x0, x8
  80:	b.eq	88 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x88>  // b.none
  84:	bl	0 <free>
  88:	ldr	x0, [x20, #8]
  8c:	add	x8, x20, #0x18
  90:	cmp	x0, x8
  94:	b.eq	9c <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x9c>  // b.none
  98:	bl	0 <free>
  9c:	mov	x0, x20
  a0:	bl	0 <_ZdlPv>
  a4:	str	xzr, [x19]
  a8:	ldp	x20, x19, [sp, #48]
  ac:	ldp	x22, x21, [sp, #32]
  b0:	ldr	x23, [sp, #16]
  b4:	ldp	x29, x30, [sp], #64
  b8:	ret
  bc:	mov	x0, x22
  c0:	bl	0 <_ZdlPv>
  c4:	str	xzr, [x21], #16
  c8:	cmp	x23, x21
  cc:	b.eq	134 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x134>  // b.none
  d0:	add	x0, x21, #0x8
  d4:	bl	0 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_>
  d8:	ldr	x22, [x21]
  dc:	cbz	x22, c4 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0xc4>
  e0:	ldr	x0, [x22, #88]
  e4:	add	x8, x22, #0x68
  e8:	cmp	x0, x8
  ec:	b.eq	f4 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0xf4>  // b.none
  f0:	bl	0 <free>
  f4:	ldr	x0, [x22, #72]
  f8:	add	x8, x22, #0x58
  fc:	cmp	x0, x8
 100:	b.eq	108 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x108>  // b.none
 104:	bl	0 <free>
 108:	ldr	x0, [x22, #56]
 10c:	add	x8, x22, #0x48
 110:	cmp	x0, x8
 114:	b.eq	11c <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x11c>  // b.none
 118:	bl	0 <free>
 11c:	ldr	x0, [x22, #8]
 120:	add	x8, x22, #0x18
 124:	cmp	x0, x8
 128:	b.eq	bc <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0xbc>  // b.none
 12c:	bl	0 <free>
 130:	b	bc <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0xbc>
 134:	ldr	x21, [x20, #24]
 138:	cbnz	x21, 30 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x30>
 13c:	b	38 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x38>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldp	x20, x24, [x0]
  1c:	mov	x9, #0x7ffffffffffffff0    	// #9223372036854775792
  20:	sub	x8, x24, x20
  24:	cmp	x8, x9
  28:	b.eq	144 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x144>  // b.none
  2c:	asr	x9, x8, #4
  30:	cmp	x8, #0x0
  34:	csinc	x10, x9, xzr, ne  // ne = any
  38:	adds	x9, x10, x9
  3c:	lsr	x11, x9, #59
  40:	cset	w10, cs  // cs = hs, nlast
  44:	cmp	x11, #0x0
  48:	cset	w11, ne  // ne = any
  4c:	orr	w10, w10, w11
  50:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  54:	cmp	w10, #0x0
  58:	csel	x25, x8, x9, ne  // ne = any
  5c:	sub	x8, x1, x20
  60:	mov	x23, x2
  64:	mov	x19, x0
  68:	mov	x21, x1
  6c:	asr	x26, x8, #4
  70:	cbz	x25, 84 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x84>
  74:	lsl	x0, x25, #4
  78:	bl	0 <_Znwm>
  7c:	mov	x22, x0
  80:	b	88 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x88>
  84:	mov	x22, xzr
  88:	ldr	q0, [x23]
  8c:	stp	xzr, xzr, [x23]
  90:	cmp	x20, x21
  94:	str	q0, [x22, x26, lsl #4]
  98:	mov	x26, x22
  9c:	b.eq	d8 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xd8>  // b.none
  a0:	mov	x26, x22
  a4:	mov	x23, x20
  a8:	ldr	x8, [x23]
  ac:	str	xzr, [x23]
  b0:	mov	x0, x23
  b4:	str	x8, [x26]
  b8:	ldr	x8, [x23, #8]
  bc:	str	xzr, [x23, #8]
  c0:	str	x8, [x26, #8]
  c4:	bl	0 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
  c8:	add	x23, x23, #0x10
  cc:	cmp	x23, x21
  d0:	add	x26, x26, #0x10
  d4:	b.ne	a8 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xa8>  // b.any
  d8:	cmp	x24, x21
  dc:	add	x23, x26, #0x10
  e0:	b.eq	114 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x114>  // b.none
  e4:	ldr	x8, [x21]
  e8:	str	xzr, [x21]
  ec:	mov	x0, x21
  f0:	str	x8, [x23]
  f4:	ldr	x8, [x21, #8]
  f8:	str	xzr, [x21, #8]
  fc:	str	x8, [x23, #8]
 100:	bl	0 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 104:	add	x21, x21, #0x10
 108:	cmp	x21, x24
 10c:	add	x23, x23, #0x10
 110:	b.ne	e4 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xe4>  // b.any
 114:	cbz	x20, 120 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x120>
 118:	mov	x0, x20
 11c:	bl	0 <_ZdlPv>
 120:	add	x8, x22, x25, lsl #4
 124:	stp	x22, x23, [x19]
 128:	str	x8, [x19, #16]
 12c:	ldp	x20, x19, [sp, #64]
 130:	ldp	x22, x21, [sp, #48]
 134:	ldp	x24, x23, [sp, #32]
 138:	ldp	x26, x25, [sp, #16]
 13c:	ldp	x29, x30, [sp], #80
 140:	ret
 144:	adrp	x0, 0 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 148:	add	x0, x0, #0x0
 14c:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	add	x29, sp, #0x10
  1c:	ldp	x20, x24, [x0]
  20:	mov	x9, #0x7ffffffffffffff0    	// #9223372036854775792
  24:	sub	x8, x24, x20
  28:	cmp	x8, x9
  2c:	b.eq	15c <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x15c>  // b.none
  30:	asr	x9, x8, #4
  34:	cmp	x8, #0x0
  38:	csinc	x10, x9, xzr, ne  // ne = any
  3c:	adds	x9, x10, x9
  40:	lsr	x11, x9, #59
  44:	cset	w10, cs  // cs = hs, nlast
  48:	cmp	x11, #0x0
  4c:	cset	w11, ne  // ne = any
  50:	orr	w10, w10, w11
  54:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  58:	cmp	w10, #0x0
  5c:	csel	x25, x8, x9, ne  // ne = any
  60:	sub	x8, x1, x20
  64:	mov	x23, x2
  68:	mov	x19, x0
  6c:	mov	x21, x1
  70:	asr	x26, x8, #4
  74:	cbz	x25, 88 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x88>
  78:	lsl	x0, x25, #4
  7c:	bl	0 <_Znwm>
  80:	mov	x22, x0
  84:	b	8c <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x8c>
  88:	mov	x22, xzr
  8c:	ldr	x8, [x23]
  90:	add	x9, x22, x26, lsl #4
  94:	add	x0, sp, #0x8
  98:	str	xzr, [x23]
  9c:	stp	xzr, x8, [x9]
  a0:	str	xzr, [sp, #8]
  a4:	bl	0 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
  a8:	cmp	x20, x21
  ac:	mov	x26, x22
  b0:	b.eq	ec <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xec>  // b.none
  b4:	mov	x26, x22
  b8:	mov	x23, x20
  bc:	ldr	x8, [x23]
  c0:	str	xzr, [x23]
  c4:	mov	x0, x23
  c8:	str	x8, [x26]
  cc:	ldr	x8, [x23, #8]
  d0:	str	xzr, [x23, #8]
  d4:	str	x8, [x26, #8]
  d8:	bl	0 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
  dc:	add	x23, x23, #0x10
  e0:	cmp	x23, x21
  e4:	add	x26, x26, #0x10
  e8:	b.ne	bc <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xbc>  // b.any
  ec:	cmp	x24, x21
  f0:	add	x23, x26, #0x10
  f4:	b.eq	128 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x128>  // b.none
  f8:	ldr	x8, [x21]
  fc:	str	xzr, [x21]
 100:	mov	x0, x21
 104:	str	x8, [x23]
 108:	ldr	x8, [x21, #8]
 10c:	str	xzr, [x21, #8]
 110:	str	x8, [x23, #8]
 114:	bl	0 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 118:	add	x21, x21, #0x10
 11c:	cmp	x21, x24
 120:	add	x23, x23, #0x10
 124:	b.ne	f8 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf8>  // b.any
 128:	cbz	x20, 134 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x134>
 12c:	mov	x0, x20
 130:	bl	0 <_ZdlPv>
 134:	add	x8, x22, x25, lsl #4
 138:	stp	x22, x23, [x19]
 13c:	str	x8, [x19, #16]
 140:	ldp	x20, x19, [sp, #80]
 144:	ldp	x22, x21, [sp, #64]
 148:	ldp	x24, x23, [sp, #48]
 14c:	ldp	x26, x25, [sp, #32]
 150:	ldp	x29, x30, [sp, #16]
 154:	add	sp, sp, #0x60
 158:	ret
 15c:	adrp	x0, 0 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 160:	add	x0, x0, #0x0
 164:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm6RecordC2ERKS0_:

0000000000000000 <_ZN4llvm6RecordC2ERKS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x9, 0 <_ZN4llvm6RecordC2ERKS0_>
  10:	ldr	x8, [x1]
  14:	ldr	d0, [x9]
  18:	mov	x19, x0
  1c:	add	x9, x0, #0x18
  20:	str	x8, [x0]
  24:	str	x9, [x0, #8]!
  28:	str	d0, [x19, #16]
  2c:	ldr	w8, [x1, #16]
  30:	mov	x20, x1
  34:	cbz	w8, 40 <_ZN4llvm6RecordC2ERKS0_+0x40>
  38:	add	x1, x20, #0x8
  3c:	bl	0 <_ZN4llvm6RecordC2ERKS0_>
  40:	add	x8, x19, #0x48
  44:	mov	x0, x19
  48:	str	x8, [x0, #56]!
  4c:	str	xzr, [x0, #8]
  50:	ldr	w8, [x20, #64]
  54:	cbz	w8, 60 <_ZN4llvm6RecordC2ERKS0_+0x60>
  58:	add	x1, x20, #0x38
  5c:	bl	0 <_ZN4llvm6RecordC2ERKS0_>
  60:	add	x8, x19, #0x58
  64:	mov	x0, x19
  68:	str	x8, [x0, #72]!
  6c:	str	xzr, [x0, #8]
  70:	ldr	w8, [x20, #80]
  74:	cbz	w8, 80 <_ZN4llvm6RecordC2ERKS0_+0x80>
  78:	add	x1, x20, #0x48
  7c:	bl	0 <_ZN4llvm6RecordC2ERKS0_>
  80:	add	x8, x19, #0x68
  84:	mov	x0, x19
  88:	str	x8, [x0, #88]!
  8c:	str	xzr, [x0, #8]
  90:	ldr	w8, [x20, #96]
  94:	cbz	w8, a0 <_ZN4llvm6RecordC2ERKS0_+0xa0>
  98:	add	x1, x20, #0x58
  9c:	bl	0 <_ZN4llvm6RecordC2ERKS0_>
  a0:	ldr	x8, [x20, #104]
  a4:	adrp	x9, 0 <_ZN4llvm6Record6LastIDE>
  a8:	ldr	x9, [x9]
  ac:	stp	x8, xzr, [x19, #104]
  b0:	ldr	w8, [x9]
  b4:	add	w10, w8, #0x1
  b8:	str	w10, [x9]
  bc:	str	w8, [x19, #120]
  c0:	ldrb	w8, [x20, #124]
  c4:	strb	w8, [x19, #124]
  c8:	ldrb	w8, [x20, #125]
  cc:	strb	w8, [x19, #125]
  d0:	ldp	x20, x19, [sp, #16]
  d4:	ldp	x29, x30, [sp], #32
  d8:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	cmp	x0, x1
  18:	b.eq	c4 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0xc4>  // b.none
  1c:	ldr	w20, [x1, #8]
  20:	ldr	w22, [x19, #8]
  24:	mov	x21, x1
  28:	cmp	w22, w20
  2c:	b.cs	58 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0x58>  // b.hs, b.nlast
  30:	ldr	w8, [x19, #12]
  34:	cmp	w8, w20
  38:	b.cs	70 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0x70>  // b.hs, b.nlast
  3c:	add	x1, x19, #0x10
  40:	mov	w3, #0x8                   	// #8
  44:	mov	x0, x19
  48:	mov	x2, x20
  4c:	str	wzr, [x19, #8]
  50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  54:	b	88 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0x88>
  58:	cbz	w20, b4 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0xb4>
  5c:	ldr	x1, [x21]
  60:	ldr	x0, [x19]
  64:	lsl	x2, x20, #3
  68:	bl	0 <memmove>
  6c:	b	b4 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0xb4>
  70:	cbz	w22, 88 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0x88>
  74:	ldr	x1, [x21]
  78:	ldr	x0, [x19]
  7c:	lsl	x2, x22, #3
  80:	bl	0 <memmove>
  84:	b	8c <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0x8c>
  88:	mov	x22, xzr
  8c:	ldr	w8, [x21, #8]
  90:	cmp	x22, x8
  94:	b.eq	b4 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0xb4>  // b.none
  98:	ldr	x9, [x21]
  9c:	ldr	x10, [x19]
  a0:	add	x1, x9, x22, lsl #3
  a4:	add	x8, x9, x8, lsl #3
  a8:	add	x0, x10, x22, lsl #3
  ac:	sub	x2, x8, x1
  b0:	bl	0 <memcpy>
  b4:	ldr	w8, [x19, #12]
  b8:	cmp	w8, w20
  bc:	b.cc	d8 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0xd8>  // b.lo, b.ul, b.last
  c0:	str	w20, [x19, #8]
  c4:	mov	x0, x19
  c8:	ldp	x20, x19, [sp, #32]
  cc:	ldp	x22, x21, [sp, #16]
  d0:	ldp	x29, x30, [sp], #48
  d4:	ret
  d8:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_>
  dc:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_>
  e0:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0x43                  	// #67
  f4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_:

0000000000000000 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	cmp	x0, x1
  18:	b.eq	c4 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0xc4>  // b.none
  1c:	ldr	w20, [x1, #8]
  20:	ldr	w22, [x19, #8]
  24:	mov	x21, x1
  28:	cmp	w22, w20
  2c:	b.cs	58 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0x58>  // b.hs, b.nlast
  30:	ldr	w8, [x19, #12]
  34:	cmp	w8, w20
  38:	b.cs	70 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0x70>  // b.hs, b.nlast
  3c:	add	x1, x19, #0x10
  40:	mov	w3, #0x8                   	// #8
  44:	mov	x0, x19
  48:	mov	x2, x20
  4c:	str	wzr, [x19, #8]
  50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  54:	b	88 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0x88>
  58:	cbz	w20, b4 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0xb4>
  5c:	ldr	x1, [x21]
  60:	ldr	x0, [x19]
  64:	lsl	x2, x20, #3
  68:	bl	0 <memmove>
  6c:	b	b4 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0xb4>
  70:	cbz	w22, 88 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0x88>
  74:	ldr	x1, [x21]
  78:	ldr	x0, [x19]
  7c:	lsl	x2, x22, #3
  80:	bl	0 <memmove>
  84:	b	8c <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0x8c>
  88:	mov	x22, xzr
  8c:	ldr	w8, [x21, #8]
  90:	cmp	x22, x8
  94:	b.eq	b4 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0xb4>  // b.none
  98:	ldr	x9, [x21]
  9c:	ldr	x10, [x19]
  a0:	add	x1, x9, x22, lsl #3
  a4:	add	x8, x9, x8, lsl #3
  a8:	add	x0, x10, x22, lsl #3
  ac:	sub	x2, x8, x1
  b0:	bl	0 <memcpy>
  b4:	ldr	w8, [x19, #12]
  b8:	cmp	w8, w20
  bc:	b.cc	d8 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0xd8>  // b.lo, b.ul, b.last
  c0:	str	w20, [x19, #8]
  c4:	mov	x0, x19
  c8:	ldp	x20, x19, [sp, #32]
  cc:	ldp	x22, x21, [sp, #16]
  d0:	ldp	x29, x30, [sp], #48
  d4:	ret
  d8:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_>
  dc:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_>
  e0:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0x43                  	// #67
  f4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	cmp	x0, x1
  18:	b.eq	d4 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0xd4>  // b.none
  1c:	ldr	w20, [x1, #8]
  20:	ldr	w22, [x19, #8]
  24:	mov	x21, x1
  28:	cmp	w22, w20
  2c:	b.cs	58 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0x58>  // b.hs, b.nlast
  30:	ldr	w8, [x19, #12]
  34:	cmp	w8, w20
  38:	b.cs	74 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0x74>  // b.hs, b.nlast
  3c:	add	x1, x19, #0x10
  40:	mov	w3, #0x18                  	// #24
  44:	mov	x0, x19
  48:	mov	x2, x20
  4c:	str	wzr, [x19, #8]
  50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  54:	b	90 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0x90>
  58:	cbz	w20, c4 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0xc4>
  5c:	ldr	x1, [x21]
  60:	ldr	x0, [x19]
  64:	add	x8, x20, x20, lsl #1
  68:	lsl	x2, x8, #3
  6c:	bl	0 <memmove>
  70:	b	c4 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0xc4>
  74:	cbz	w22, 90 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0x90>
  78:	ldr	x1, [x21]
  7c:	ldr	x0, [x19]
  80:	add	x8, x22, x22, lsl #1
  84:	lsl	x2, x8, #3
  88:	bl	0 <memmove>
  8c:	b	94 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0x94>
  90:	mov	x22, xzr
  94:	ldr	w8, [x21, #8]
  98:	cmp	x22, x8
  9c:	b.eq	c4 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0xc4>  // b.none
  a0:	ldr	x9, [x21]
  a4:	ldr	x11, [x19]
  a8:	mov	w10, #0x18                  	// #24
  ac:	mov	w12, #0x18                  	// #24
  b0:	madd	x1, x22, x10, x9
  b4:	madd	x8, x8, x12, x9
  b8:	madd	x0, x22, x12, x11
  bc:	sub	x2, x8, x1
  c0:	bl	0 <memcpy>
  c4:	ldr	w8, [x19, #12]
  c8:	cmp	w8, w20
  cc:	b.cc	e8 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0xe8>  // b.lo, b.ul, b.last
  d0:	str	w20, [x19, #8]
  d4:	mov	x0, x19
  d8:	ldp	x20, x19, [sp, #32]
  dc:	ldp	x22, x21, [sp, #16]
  e0:	ldp	x29, x30, [sp], #48
  e4:	ret
  e8:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_>
  ec:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_>
  f0:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_>
  f4:	add	x0, x0, #0x0
  f8:	add	x1, x1, #0x0
  fc:	add	x3, x3, #0x0
 100:	mov	w2, #0x43                  	// #67
 104:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_:

0000000000000000 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	cmp	x0, x1
  18:	b.eq	11c <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x11c>  // b.none
  1c:	ldr	w20, [x1, #8]
  20:	ldr	w8, [x19, #8]
  24:	mov	x21, x1
  28:	cmp	w8, w20
  2c:	b.cs	50 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x50>  // b.hs, b.nlast
  30:	ldr	w9, [x19, #12]
  34:	cmp	w9, w20
  38:	b.cs	88 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x88>  // b.hs, b.nlast
  3c:	mov	x0, x19
  40:	mov	x1, x20
  44:	str	wzr, [x19, #8]
  48:	bl	0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_>
  4c:	b	c0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0xc0>
  50:	cbz	w20, 10c <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x10c>
  54:	ldr	x8, [x21]
  58:	ldr	x9, [x19]
  5c:	add	x10, x20, #0x1
  60:	ldr	x11, [x8]
  64:	sub	x10, x10, #0x1
  68:	cmp	x10, #0x1
  6c:	str	x11, [x9]
  70:	ldur	q0, [x8, #8]
  74:	add	x8, x8, #0x18
  78:	stur	q0, [x9, #8]
  7c:	add	x9, x9, #0x18
  80:	b.gt	60 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x60>
  84:	b	10c <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x10c>
  88:	cbz	w8, c0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0xc0>
  8c:	ldr	x9, [x21]
  90:	ldr	x10, [x19]
  94:	add	x11, x8, #0x1
  98:	ldr	x12, [x9]
  9c:	sub	x11, x11, #0x1
  a0:	cmp	x11, #0x1
  a4:	str	x12, [x10]
  a8:	ldur	q0, [x9, #8]
  ac:	add	x9, x9, #0x18
  b0:	stur	q0, [x10, #8]
  b4:	add	x10, x10, #0x18
  b8:	b.gt	98 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x98>
  bc:	b	c4 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0xc4>
  c0:	mov	x8, xzr
  c4:	ldr	w10, [x21, #8]
  c8:	cmp	x8, x10
  cc:	b.eq	10c <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x10c>  // b.none
  d0:	ldr	x9, [x21]
  d4:	ldr	x11, [x19]
  d8:	add	x8, x8, x8, lsl #1
  dc:	lsl	x13, x8, #3
  e0:	mov	w12, #0x18                  	// #24
  e4:	neg	x14, x13
  e8:	add	x8, x11, x13
  ec:	add	x9, x9, x13
  f0:	madd	x10, x10, x12, x14
  f4:	ldr	x11, [x9, #16]
  f8:	ldr	q0, [x9], #24
  fc:	subs	x10, x10, #0x18
 100:	str	x11, [x8, #16]
 104:	str	q0, [x8], #24
 108:	b.ne	f4 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0xf4>  // b.any
 10c:	ldr	w8, [x19, #12]
 110:	cmp	w8, w20
 114:	b.cc	130 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x130>  // b.lo, b.ul, b.last
 118:	str	w20, [x19, #8]
 11c:	mov	x0, x19
 120:	ldp	x20, x19, [sp, #32]
 124:	ldr	x21, [sp, #16]
 128:	ldp	x29, x30, [sp], #48
 12c:	ret
 130:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_>
 134:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_>
 138:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_>
 13c:	add	x0, x0, #0x0
 140:	add	x1, x1, #0x0
 144:	add	x3, x3, #0x0
 148:	mov	w2, #0x43                  	// #67
 14c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x20, x0
  1c:	mov	w0, #0x48                  	// #72
  20:	mov	x21, x3
  24:	mov	x22, x1
  28:	bl	0 <_Znwm>
  2c:	ldr	x8, [x21]
  30:	add	x25, x0, #0x30
  34:	mov	x21, x0
  38:	str	x25, [x21, #32]!
  3c:	ldp	x23, x24, [x8]
  40:	mov	x19, x0
  44:	cbnz	x23, 4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x4c>
  48:	cbnz	x24, 194 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x194>
  4c:	cmp	x24, #0x10
  50:	str	x24, [x29, #24]
  54:	b.cc	7c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x7c>  // b.lo, b.ul, b.last
  58:	add	x1, x29, #0x18
  5c:	mov	x0, x21
  60:	mov	x2, xzr
  64:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  68:	ldr	x8, [x29, #24]
  6c:	str	x0, [x21]
  70:	str	x8, [x25]
  74:	cbnz	x24, 84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x84>
  78:	b	a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0xa4>
  7c:	mov	x0, x25
  80:	cbz	x24, a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0xa4>
  84:	cmp	x24, #0x1
  88:	b.ne	98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x98>  // b.any
  8c:	ldrb	w8, [x23]
  90:	strb	w8, [x0]
  94:	b	a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0xa4>
  98:	mov	x1, x23
  9c:	mov	x2, x24
  a0:	bl	0 <memcpy>
  a4:	ldr	x8, [x29, #24]
  a8:	ldr	x9, [x19, #32]
  ac:	mov	x24, x19
  b0:	mov	x0, x20
  b4:	mov	x1, x22
  b8:	mov	x2, x21
  bc:	str	x8, [x19, #40]
  c0:	strb	wzr, [x9, x8]
  c4:	str	xzr, [x24, #64]!
  c8:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_>
  cc:	mov	x23, x0
  d0:	cbz	x1, e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0xe4>
  d4:	mov	x22, x1
  d8:	cbz	x23, 108 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x108>
  dc:	mov	w0, #0x1                   	// #1
  e0:	b	158 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x158>
  e4:	mov	x0, x24
  e8:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_>
  ec:	ldr	x0, [x21]
  f0:	cmp	x0, x25
  f4:	b.eq	fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0xfc>  // b.none
  f8:	bl	0 <_ZdlPv>
  fc:	mov	x0, x19
 100:	bl	0 <_ZdlPv>
 104:	b	178 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x178>
 108:	add	x8, x20, #0x8
 10c:	cmp	x8, x22
 110:	b.eq	dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0xdc>  // b.none
 114:	ldr	x8, [x19, #40]
 118:	ldr	x9, [x22, #40]
 11c:	subs	x23, x8, x9
 120:	csel	x2, x9, x8, hi  // hi = pmore
 124:	cbz	x2, 138 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x138>
 128:	ldr	x1, [x22, #32]
 12c:	ldr	x0, [x21]
 130:	bl	0 <memcmp>
 134:	cbnz	w0, 154 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x154>
 138:	mov	w0, #0x7fffffff            	// #2147483647
 13c:	cmp	x23, x0
 140:	b.gt	154 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x154>
 144:	mov	x8, #0xffffffff80000000    	// #-2147483648
 148:	cmp	x23, x8
 14c:	mov	w8, #0x80000000            	// #-2147483648
 150:	csel	w0, w23, w8, gt
 154:	lsr	w0, w0, #31
 158:	add	x3, x20, #0x8
 15c:	mov	x1, x19
 160:	mov	x2, x22
 164:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
 168:	ldr	x8, [x20, #40]
 16c:	mov	x23, x19
 170:	add	x8, x8, #0x1
 174:	str	x8, [x20, #40]
 178:	mov	x0, x23
 17c:	ldp	x20, x19, [sp, #64]
 180:	ldp	x22, x21, [sp, #48]
 184:	ldp	x24, x23, [sp, #32]
 188:	ldr	x25, [sp, #16]
 18c:	ldp	x29, x30, [sp], #80
 190:	ret
 194:	adrp	x0, 0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_>
 198:	add	x0, x0, #0x0
 19c:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	add	x8, x0, #0x8
  1c:	mov	x21, x0
  20:	cmp	x8, x1
  24:	mov	x20, x2
  28:	b.eq	a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0xa0>  // b.none
  2c:	ldr	x23, [x20, #8]
  30:	ldr	x24, [x1, #40]
  34:	mov	x19, x1
  38:	subs	x25, x23, x24
  3c:	csel	x22, x24, x23, hi  // hi = pmore
  40:	cbz	x22, 60 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x60>
  44:	ldr	x1, [x19, #32]
  48:	ldr	x0, [x20]
  4c:	mov	x2, x22
  50:	bl	0 <memcmp>
  54:	cbz	w0, 60 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x60>
  58:	tbz	w0, #31, 80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x80>
  5c:	b	120 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x120>
  60:	mov	w8, #0x7fffffff            	// #2147483647
  64:	cmp	x25, x8
  68:	b.gt	80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x80>
  6c:	mov	x8, #0xffffffff80000000    	// #-2147483648
  70:	cmp	x25, x8
  74:	mov	w8, #0x80000000            	// #-2147483648
  78:	csel	w0, w25, w8, gt
  7c:	tbnz	w0, #31, 120 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x120>
  80:	cbz	x22, f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0xf4>
  84:	ldr	x1, [x20]
  88:	ldr	x0, [x19, #32]
  8c:	mov	x2, x22
  90:	bl	0 <memcmp>
  94:	cbz	w0, f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0xf4>
  98:	tbz	w0, #31, 118 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x118>
  9c:	b	190 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x190>
  a0:	ldr	x8, [x21, #40]
  a4:	cbz	x8, 1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x1e8>
  a8:	ldr	x22, [x21, #32]
  ac:	ldr	x9, [x20, #8]
  b0:	ldr	x8, [x22, #40]
  b4:	subs	x19, x8, x9
  b8:	csel	x2, x9, x8, hi  // hi = pmore
  bc:	cbz	x2, d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0xd0>
  c0:	ldr	x1, [x20]
  c4:	ldr	x0, [x22, #32]
  c8:	bl	0 <memcmp>
  cc:	cbnz	w0, ec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0xec>
  d0:	mov	w8, #0x7fffffff            	// #2147483647
  d4:	cmp	x19, x8
  d8:	b.gt	1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x1e8>
  dc:	mov	x8, #0xffffffff80000000    	// #-2147483648
  e0:	cmp	x19, x8
  e4:	mov	w8, #0x80000000            	// #-2147483648
  e8:	csel	w0, w19, w8, gt
  ec:	tbz	w0, #31, 1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x1e8>
  f0:	b	21c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x21c>
  f4:	sub	x8, x24, x23
  f8:	mov	w9, #0x7fffffff            	// #2147483647
  fc:	cmp	x8, x9
 100:	b.gt	118 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x118>
 104:	mov	x9, #0xffffffff80000000    	// #-2147483648
 108:	cmp	x8, x9
 10c:	mov	w9, #0x80000000            	// #-2147483648
 110:	csel	w0, w8, w9, gt
 114:	tbnz	w0, #31, 190 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x190>
 118:	mov	x22, xzr
 11c:	b	1fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x1fc>
 120:	ldr	x22, [x21, #24]
 124:	cmp	x22, x19
 128:	b.eq	224 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x224>  // b.none
 12c:	mov	x0, x19
 130:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 134:	ldr	x8, [x0, #40]
 138:	mov	x22, x0
 13c:	subs	x24, x8, x23
 140:	csel	x2, x23, x8, hi  // hi = pmore
 144:	cbz	x2, 158 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x158>
 148:	ldr	x1, [x20]
 14c:	ldr	x0, [x22, #32]
 150:	bl	0 <memcmp>
 154:	cbnz	w0, 174 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x174>
 158:	mov	w8, #0x7fffffff            	// #2147483647
 15c:	cmp	x24, x8
 160:	b.gt	1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x1e8>
 164:	mov	x8, #0xffffffff80000000    	// #-2147483648
 168:	cmp	x24, x8
 16c:	mov	w8, #0x80000000            	// #-2147483648
 170:	csel	w0, w24, w8, gt
 174:	tbz	w0, #31, 1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x1e8>
 178:	ldr	x8, [x22, #24]
 17c:	cmp	x8, #0x0
 180:	csel	x8, xzr, x19, eq  // eq = none
 184:	csel	x22, x22, x19, eq  // eq = none
 188:	mov	x19, x8
 18c:	b	1fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x1fc>
 190:	ldr	x22, [x21, #32]
 194:	cmp	x22, x19
 198:	b.eq	21c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x21c>  // b.none
 19c:	mov	x0, x19
 1a0:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 1a4:	ldr	x8, [x0, #40]
 1a8:	mov	x22, x0
 1ac:	subs	x24, x23, x8
 1b0:	csel	x2, x8, x23, hi  // hi = pmore
 1b4:	cbz	x2, 1c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x1c8>
 1b8:	ldr	x1, [x22, #32]
 1bc:	ldr	x0, [x20]
 1c0:	bl	0 <memcmp>
 1c4:	cbnz	w0, 1e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x1e4>
 1c8:	mov	w8, #0x7fffffff            	// #2147483647
 1cc:	cmp	x24, x8
 1d0:	b.gt	1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x1e8>
 1d4:	mov	x8, #0xffffffff80000000    	// #-2147483648
 1d8:	cmp	x24, x8
 1dc:	mov	w8, #0x80000000            	// #-2147483648
 1e0:	csel	w0, w24, w8, gt
 1e4:	tbnz	w0, #31, 22c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x22c>
 1e8:	mov	x0, x21
 1ec:	mov	x1, x20
 1f0:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_>
 1f4:	mov	x19, x0
 1f8:	mov	x22, x1
 1fc:	mov	x0, x19
 200:	mov	x1, x22
 204:	ldp	x20, x19, [sp, #64]
 208:	ldp	x22, x21, [sp, #48]
 20c:	ldp	x24, x23, [sp, #32]
 210:	ldr	x25, [sp, #16]
 214:	ldp	x29, x30, [sp], #80
 218:	ret
 21c:	mov	x19, xzr
 220:	b	1fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x1fc>
 224:	mov	x19, x22
 228:	b	1fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x1fc>
 22c:	ldr	x8, [x19, #24]
 230:	cmp	x8, #0x0
 234:	csel	x8, xzr, x22, eq  // eq = none
 238:	csel	x22, x19, x22, eq  // eq = none
 23c:	mov	x19, x8
 240:	b	1fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x1fc>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x9, [x0, #16]
  1c:	mov	x21, x0
  20:	mov	x20, x1
  24:	cbz	x9, a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0xa0>
  28:	ldp	x22, x23, [x20]
  2c:	mov	w24, #0x80000000            	// #-2147483648
  30:	mov	x25, #0xffffffff80000000    	// #-2147483648
  34:	b	4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x4c>
  38:	tbnz	w0, #31, 84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x84>
  3c:	mov	w8, wzr
  40:	add	x9, x19, #0x18
  44:	ldr	x9, [x9]
  48:	cbz	x9, 94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x94>
  4c:	ldr	x8, [x9, #40]
  50:	mov	x19, x9
  54:	subs	x26, x23, x8
  58:	csel	x2, x8, x23, hi  // hi = pmore
  5c:	cbz	x2, 70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x70>
  60:	ldr	x1, [x19, #32]
  64:	mov	x0, x22
  68:	bl	0 <memcmp>
  6c:	cbnz	w0, 38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x38>
  70:	cmp	x26, x24
  74:	b.ge	3c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x3c>  // b.tcont
  78:	cmp	x26, x25
  7c:	csel	w0, w26, w24, gt
  80:	b	38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x38>
  84:	add	x9, x19, #0x10
  88:	mov	w8, #0x1                   	// #1
  8c:	ldr	x9, [x9]
  90:	cbnz	x9, 4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x4c>
  94:	mov	x22, x19
  98:	cbnz	w8, a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0xa4>
  9c:	b	bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0xbc>
  a0:	add	x19, x21, #0x8
  a4:	ldr	x8, [x21, #24]
  a8:	cmp	x8, x19
  ac:	b.eq	110 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x110>  // b.none
  b0:	mov	x0, x19
  b4:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  b8:	mov	x22, x0
  bc:	ldr	x8, [x22, #40]
  c0:	ldr	x9, [x20, #8]
  c4:	subs	x21, x8, x9
  c8:	csel	x2, x9, x8, hi  // hi = pmore
  cc:	cbz	x2, e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0xe8>
  d0:	ldr	x1, [x20]
  d4:	ldr	x0, [x22, #32]
  d8:	bl	0 <memcmp>
  dc:	cbz	w0, e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0xe8>
  e0:	tbz	w0, #31, 108 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x108>
  e4:	b	110 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x110>
  e8:	mov	w8, #0x7fffffff            	// #2147483647
  ec:	cmp	x21, x8
  f0:	b.gt	108 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x108>
  f4:	mov	x8, #0xffffffff80000000    	// #-2147483648
  f8:	cmp	x21, x8
  fc:	mov	w8, #0x80000000            	// #-2147483648
 100:	csel	w0, w21, w8, gt
 104:	tbnz	w0, #31, 110 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x110>
 108:	mov	x19, xzr
 10c:	b	114 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x114>
 110:	mov	x22, xzr
 114:	mov	x0, x22
 118:	mov	x1, x19
 11c:	ldp	x20, x19, [sp, #64]
 120:	ldp	x22, x21, [sp, #48]
 124:	ldp	x24, x23, [sp, #32]
 128:	ldp	x26, x25, [sp, #16]
 12c:	ldp	x29, x30, [sp], #80
 130:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Disassembly of section .text._ZN4llvm6RecordC2EPNS_4InitENS_8ArrayRefINS_5SMLocEEERNS_12RecordKeeperEbb:

0000000000000000 <_ZN4llvm6RecordC2EPNS_4InitENS_8ArrayRefINS_5SMLocEEERNS_12RecordKeeperEbb>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	adrp	x8, 0 <_ZN4llvm6RecordC2EPNS_4InitENS_8ArrayRefINS_5SMLocEEERNS_12RecordKeeperEbb>
  1c:	ldr	d0, [x8]
  20:	str	x1, [x0]
  24:	add	x1, x0, #0x18
  28:	sbfx	x24, x3, #0, #61
  2c:	mov	w19, w6
  30:	mov	w20, w5
  34:	mov	x22, x4
  38:	mov	x25, x3
  3c:	mov	x23, x2
  40:	mov	x21, x0
  44:	str	x1, [x0, #8]!
  48:	cmp	x24, #0x5
  4c:	str	d0, [x21, #16]
  50:	b.cc	60 <_ZN4llvm6RecordC2EPNS_4InitENS_8ArrayRefINS_5SMLocEEERNS_12RecordKeeperEbb+0x60>  // b.lo, b.ul, b.last
  54:	mov	w3, #0x8                   	// #8
  58:	mov	x2, x24
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	cbz	x25, 7c <_ZN4llvm6RecordC2EPNS_4InitENS_8ArrayRefINS_5SMLocEEERNS_12RecordKeeperEbb+0x7c>
  64:	ldr	x8, [x21, #8]
  68:	ldr	w9, [x21, #16]
  6c:	lsl	x2, x25, #3
  70:	mov	x1, x23
  74:	add	x0, x8, x9, lsl #3
  78:	bl	0 <memcpy>
  7c:	ldp	w8, w9, [x21, #16]
  80:	add	x8, x24, x8
  84:	cmp	x8, x9
  88:	b.hi	104 <_ZN4llvm6RecordC2EPNS_4InitENS_8ArrayRefINS_5SMLocEEERNS_12RecordKeeperEbb+0x104>  // b.pmore
  8c:	str	w8, [x21, #16]
  90:	mov	x8, x21
  94:	mov	x9, x21
  98:	str	x22, [x8, #104]!
  9c:	str	x8, [x9, #88]!
  a0:	adrp	x8, 0 <_ZN4llvm6Record6LastIDE>
  a4:	ldr	x8, [x8]
  a8:	mov	x10, x21
  ac:	movi	v0.2d, #0x0
  b0:	str	x9, [x10, #72]!
  b4:	str	d0, [x21, #64]
  b8:	str	d0, [x21, #80]
  bc:	str	d0, [x21, #96]
  c0:	str	xzr, [x21, #112]
  c4:	str	x10, [x21, #56]
  c8:	ldr	w9, [x8]
  cc:	and	w10, w20, #0x1
  d0:	and	w11, w19, #0x1
  d4:	mov	x0, x21
  d8:	add	w12, w9, #0x1
  dc:	str	w12, [x8]
  e0:	str	w9, [x21, #120]
  e4:	strb	w10, [x21, #124]
  e8:	strb	w11, [x21, #125]
  ec:	ldp	x20, x19, [sp, #64]
  f0:	ldp	x22, x21, [sp, #48]
  f4:	ldp	x24, x23, [sp, #32]
  f8:	ldr	x25, [sp, #16]
  fc:	ldp	x29, x30, [sp], #80
 100:	b	0 <_ZN4llvm6Record9checkNameEv>
 104:	adrp	x0, 0 <_ZN4llvm6RecordC2EPNS_4InitENS_8ArrayRefINS_5SMLocEEERNS_12RecordKeeperEbb>
 108:	adrp	x1, 0 <_ZN4llvm6RecordC2EPNS_4InitENS_8ArrayRefINS_5SMLocEEERNS_12RecordKeeperEbb>
 10c:	adrp	x3, 0 <_ZN4llvm6RecordC2EPNS_4InitENS_8ArrayRefINS_5SMLocEEERNS_12RecordKeeperEbb>
 110:	add	x0, x0, #0x0
 114:	add	x1, x1, #0x0
 118:	add	x3, x3, #0x0
 11c:	mov	w2, #0x43                  	// #67
 120:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldp	x20, x24, [x0]
  1c:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
  20:	sub	x8, x24, x20
  24:	cmp	x8, x9
  28:	b.eq	128 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x128>  // b.none
  2c:	asr	x9, x8, #3
  30:	cmp	x8, #0x0
  34:	csinc	x10, x9, xzr, ne  // ne = any
  38:	adds	x9, x10, x9
  3c:	lsr	x11, x9, #60
  40:	cset	w10, cs  // cs = hs, nlast
  44:	cmp	x11, #0x0
  48:	cset	w11, ne  // ne = any
  4c:	orr	w10, w10, w11
  50:	mov	x8, #0xfffffffffffffff     	// #1152921504606846975
  54:	cmp	w10, #0x0
  58:	csel	x25, x8, x9, ne  // ne = any
  5c:	sub	x8, x1, x20
  60:	mov	x23, x2
  64:	mov	x19, x0
  68:	mov	x21, x1
  6c:	asr	x26, x8, #3
  70:	cbz	x25, 84 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x84>
  74:	lsl	x0, x25, #3
  78:	bl	0 <_Znwm>
  7c:	mov	x22, x0
  80:	b	88 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x88>
  84:	mov	x22, xzr
  88:	ldr	x8, [x23]
  8c:	str	xzr, [x23]
  90:	cmp	x20, x21
  94:	mov	x23, x22
  98:	str	x8, [x22, x26, lsl #3]
  9c:	b.eq	c8 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xc8>  // b.none
  a0:	mov	x23, x22
  a4:	mov	x0, x20
  a8:	mov	x26, x20
  ac:	ldr	x8, [x0]
  b0:	str	xzr, [x26], #8
  b4:	str	x8, [x23], #8
  b8:	bl	0 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  bc:	cmp	x21, x26
  c0:	mov	x0, x26
  c4:	b.ne	ac <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xac>  // b.any
  c8:	cmp	x24, x21
  cc:	add	x23, x23, #0x8
  d0:	b.eq	f8 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xf8>  // b.none
  d4:	mov	x26, x21
  d8:	ldr	x8, [x21]
  dc:	mov	x0, x21
  e0:	str	xzr, [x26], #8
  e4:	str	x8, [x23], #8
  e8:	bl	0 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  ec:	cmp	x24, x26
  f0:	mov	x21, x26
  f4:	b.ne	d8 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xd8>  // b.any
  f8:	cbz	x20, 104 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x104>
  fc:	mov	x0, x20
 100:	bl	0 <_ZdlPv>
 104:	add	x8, x22, x25, lsl #3
 108:	stp	x22, x23, [x19]
 10c:	str	x8, [x19, #16]
 110:	ldp	x20, x19, [sp, #64]
 114:	ldp	x22, x21, [sp, #48]
 118:	ldp	x24, x23, [sp, #32]
 11c:	ldp	x26, x25, [sp, #16]
 120:	ldp	x29, x30, [sp], #80
 124:	ret
 128:	adrp	x0, 0 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
 12c:	add	x0, x0, #0x0
 130:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x20, x1
  18:	lsr	x8, x1, #32
  1c:	mov	x19, x0
  20:	cbz	x8, 34 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x34>
  24:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm>
  28:	add	x0, x0, #0x0
  2c:	mov	w1, #0x1                   	// #1
  30:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  34:	ldr	w8, [x19, #12]
  38:	add	x8, x8, #0x2
  3c:	orr	x8, x8, x8, lsr #1
  40:	orr	x8, x8, x8, lsr #2
  44:	orr	x8, x8, x8, lsr #4
  48:	orr	x8, x8, x8, lsr #8
  4c:	orr	x8, x8, x8, lsr #16
  50:	orr	x8, x8, x8, lsr #32
  54:	add	x9, x8, #0x1
  58:	cmp	x9, x20
  5c:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  60:	mov	w9, #0xffffffff            	// #-1
  64:	cmp	x8, x9
  68:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  6c:	add	x8, x21, x21, lsl #1
  70:	lsl	x0, x8, #4
  74:	bl	0 <malloc>
  78:	mov	x20, x0
  7c:	cbnz	x0, bc <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0xbc>
  80:	cbz	x21, 9c <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x9c>
  84:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm>
  88:	add	x0, x0, #0x0
  8c:	mov	w1, #0x1                   	// #1
  90:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  94:	mov	x20, xzr
  98:	b	bc <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0xbc>
  9c:	mov	w0, #0x1                   	// #1
  a0:	bl	0 <malloc>
  a4:	mov	x20, x0
  a8:	cbnz	x0, bc <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0xbc>
  ac:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm>
  b0:	add	x0, x0, #0x0
  b4:	mov	w1, #0x1                   	// #1
  b8:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  bc:	ldr	w8, [x19, #8]
  c0:	ldr	x0, [x19]
  c4:	cbz	w8, 13c <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x13c>
  c8:	mov	w9, #0x30                  	// #48
  cc:	madd	x8, x8, x9, x0
  d0:	mov	x9, x20
  d4:	ldr	q0, [x0]
  d8:	str	q0, [x9]
  dc:	ldr	q0, [x0, #16]
  e0:	str	q0, [x9, #16]
  e4:	ldr	q0, [x0, #32]
  e8:	stp	xzr, xzr, [x0, #8]
  ec:	str	xzr, [x0, #24]
  f0:	add	x0, x0, #0x30
  f4:	cmp	x0, x8
  f8:	str	q0, [x9, #32]
  fc:	add	x9, x9, #0x30
 100:	b.ne	d4 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0xd4>  // b.any
 104:	ldr	w8, [x19, #8]
 108:	ldr	x0, [x19]
 10c:	cbz	w8, 13c <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x13c>
 110:	add	x8, x8, x8, lsl #1
 114:	sub	x22, x0, #0x28
 118:	lsl	x23, x8, #4
 11c:	b	128 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x128>
 120:	subs	x23, x23, #0x30
 124:	b.eq	138 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x138>  // b.none
 128:	ldr	x0, [x22, x23]
 12c:	cbz	x0, 120 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x120>
 130:	bl	0 <_ZdlPv>
 134:	b	120 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x120>
 138:	ldr	x0, [x19]
 13c:	add	x8, x19, #0x10
 140:	cmp	x0, x8
 144:	b.eq	14c <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x14c>  // b.none
 148:	bl	0 <free>
 14c:	str	x20, [x19]
 150:	str	w21, [x19, #12]
 154:	ldp	x20, x19, [sp, #48]
 158:	ldp	x22, x21, [sp, #32]
 15c:	ldr	x23, [sp, #16]
 160:	ldp	x29, x30, [sp], #64
 164:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>:
   0:	str	d8, [sp, #-96]!
   4:	stp	x29, x30, [sp, #8]
   8:	str	x27, [sp, #24]
   c:	stp	x26, x25, [sp, #32]
  10:	stp	x24, x23, [sp, #48]
  14:	stp	x22, x21, [sp, #64]
  18:	stp	x20, x19, [sp, #80]
  1c:	mov	x29, sp
  20:	ldp	x20, x25, [x0]
  24:	mov	x9, #0xffffffffffffff90    	// #-112
  28:	movk	x9, #0x7fff, lsl #48
  2c:	sub	x8, x25, x20
  30:	cmp	x8, x9
  34:	b.eq	230 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x230>  // b.none
  38:	mov	x10, #0x4ec5                	// #20165
  3c:	movk	x10, #0xc4ec, lsl #16
  40:	movk	x10, #0xec4e, lsl #32
  44:	asr	x9, x8, #4
  48:	movk	x10, #0x4ec4, lsl #48
  4c:	cmp	x8, #0x0
  50:	mov	x8, #0xd89d                	// #55453
  54:	movk	x8, #0x9d89, lsl #16
  58:	mul	x9, x9, x10
  5c:	movk	x8, #0x89d8, lsl #32
  60:	csinc	x11, x9, xzr, ne  // ne = any
  64:	movk	x8, #0x9d, lsl #48
  68:	adds	x9, x11, x9
  6c:	cset	w11, cs  // cs = hs, nlast
  70:	cmp	x9, x8
  74:	cset	w12, hi  // hi = pmore
  78:	orr	w11, w11, w12
  7c:	sub	x12, x1, x20
  80:	cmp	w11, #0x0
  84:	csel	x26, x8, x9, ne  // ne = any
  88:	asr	x8, x12, #4
  8c:	mov	x23, x2
  90:	mov	x19, x0
  94:	mov	x22, x1
  98:	mul	x24, x8, x10
  9c:	cbz	x26, b4 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xb4>
  a0:	mov	w8, #0xd0                  	// #208
  a4:	mul	x0, x26, x8
  a8:	bl	0 <_Znwm>
  ac:	mov	x21, x0
  b0:	b	b8 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xb8>
  b4:	mov	x21, xzr
  b8:	adrp	x9, 0 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
  bc:	ldr	d8, [x9]
  c0:	mov	w8, #0xd0                  	// #208
  c4:	madd	x0, x24, x8, x21
  c8:	add	x8, x0, #0x10
  cc:	str	x8, [x0]
  d0:	str	d8, [x0, #8]
  d4:	ldr	w8, [x23, #8]
  d8:	cbz	w8, e4 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xe4>
  dc:	mov	x1, x23
  e0:	bl	0 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
  e4:	cmp	x20, x22
  e8:	mov	x23, x21
  ec:	b.eq	130 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x130>  // b.none
  f0:	mov	x23, x21
  f4:	mov	x24, x20
  f8:	b	10c <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x10c>
  fc:	add	x24, x24, #0xd0
 100:	cmp	x22, x24
 104:	add	x23, x23, #0xd0
 108:	b.eq	130 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x130>  // b.none
 10c:	add	x8, x23, #0x10
 110:	str	x8, [x23]
 114:	str	d8, [x23, #8]
 118:	ldr	w8, [x24, #8]
 11c:	cbz	w8, fc <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xfc>
 120:	mov	x0, x23
 124:	mov	x1, x24
 128:	bl	0 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
 12c:	b	fc <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xfc>
 130:	subs	x24, x25, x22
 134:	b.eq	188 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x188>  // b.none
 138:	mov	x27, xzr
 13c:	b	14c <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x14c>
 140:	add	x27, x27, #0xd0
 144:	cmp	x24, x27
 148:	b.eq	174 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x174>  // b.none
 14c:	add	x8, x23, x27
 150:	add	x9, x8, #0xe0
 154:	str	d8, [x8, #216]
 158:	str	x9, [x8, #208]
 15c:	add	x1, x22, x27
 160:	ldr	w9, [x1, #8]
 164:	cbz	w9, 140 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x140>
 168:	add	x0, x8, #0xd0
 16c:	bl	0 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
 170:	b	140 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x140>
 174:	add	x8, x23, x27
 178:	add	x22, x8, #0xd0
 17c:	cmp	x20, x25
 180:	b.ne	194 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x194>  // b.any
 184:	b	1f4 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1f4>
 188:	add	x22, x23, #0xd0
 18c:	cmp	x20, x25
 190:	b.eq	1f4 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1f4>  // b.none
 194:	mov	x23, x20
 198:	b	1a8 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1a8>
 19c:	add	x23, x23, #0xd0
 1a0:	cmp	x23, x25
 1a4:	b.eq	1f4 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1f4>  // b.none
 1a8:	ldr	w8, [x23, #8]
 1ac:	ldr	x0, [x23]
 1b0:	cbz	w8, 1e0 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1e0>
 1b4:	add	x8, x8, x8, lsl #1
 1b8:	sub	x24, x0, #0x28
 1bc:	lsl	x27, x8, #4
 1c0:	b	1cc <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1cc>
 1c4:	subs	x27, x27, #0x30
 1c8:	b.eq	1dc <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1dc>  // b.none
 1cc:	ldr	x0, [x24, x27]
 1d0:	cbz	x0, 1c4 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1c4>
 1d4:	bl	0 <_ZdlPv>
 1d8:	b	1c4 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1c4>
 1dc:	ldr	x0, [x23]
 1e0:	add	x8, x23, #0x10
 1e4:	cmp	x0, x8
 1e8:	b.eq	19c <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x19c>  // b.none
 1ec:	bl	0 <free>
 1f0:	b	19c <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x19c>
 1f4:	cbz	x20, 200 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x200>
 1f8:	mov	x0, x20
 1fc:	bl	0 <_ZdlPv>
 200:	mov	w8, #0xd0                  	// #208
 204:	madd	x8, x26, x8, x21
 208:	stp	x21, x22, [x19]
 20c:	str	x8, [x19, #16]
 210:	ldp	x20, x19, [sp, #80]
 214:	ldp	x22, x21, [sp, #64]
 218:	ldp	x24, x23, [sp, #48]
 21c:	ldp	x26, x25, [sp, #32]
 220:	ldr	x27, [sp, #24]
 224:	ldp	x29, x30, [sp, #8]
 228:	ldr	d8, [sp], #96
 22c:	ret
 230:	adrp	x0, 0 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
 234:	add	x0, x0, #0x0
 238:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x19, x0
  1c:	cmp	x0, x1
  20:	b.eq	a0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0xa0>  // b.none
  24:	mov	x21, x1
  28:	ldr	x23, [x21], #16
  2c:	mov	x20, x1
  30:	cmp	x23, x21
  34:	b.eq	bc <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0xbc>  // b.none
  38:	ldr	w8, [x19, #8]
  3c:	ldr	x0, [x19]
  40:	cbz	w8, 70 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x70>
  44:	add	x8, x8, x8, lsl #1
  48:	sub	x22, x0, #0x28
  4c:	lsl	x23, x8, #4
  50:	b	5c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x5c>
  54:	subs	x23, x23, #0x30
  58:	b.eq	6c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x6c>  // b.none
  5c:	ldr	x0, [x22, x23]
  60:	cbz	x0, 54 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x54>
  64:	bl	0 <_ZdlPv>
  68:	b	54 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x54>
  6c:	ldr	x0, [x19]
  70:	add	x8, x19, #0x10
  74:	cmp	x0, x8
  78:	b.eq	80 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x80>  // b.none
  7c:	bl	0 <free>
  80:	ldr	x8, [x20]
  84:	mov	x22, x20
  88:	str	x8, [x19]
  8c:	ldr	x8, [x22, #8]!
  90:	str	x8, [x19, #8]
  94:	str	x21, [x20]
  98:	str	wzr, [x20, #12]
  9c:	str	wzr, [x22]
  a0:	mov	x0, x19
  a4:	ldp	x20, x19, [sp, #64]
  a8:	ldp	x22, x21, [sp, #48]
  ac:	ldp	x24, x23, [sp, #32]
  b0:	ldp	x26, x25, [sp, #16]
  b4:	ldp	x29, x30, [sp], #80
  b8:	ret
  bc:	mov	x22, x20
  c0:	ldr	w21, [x22, #8]!
  c4:	ldr	w24, [x19, #8]
  c8:	cmp	w24, w21
  cc:	b.cs	10c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x10c>  // b.hs, b.nlast
  d0:	ldr	w8, [x19, #12]
  d4:	cmp	w8, w21
  d8:	b.cs	16c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x16c>  // b.hs, b.nlast
  dc:	cbz	w24, 1c4 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x1c4>
  e0:	ldr	x8, [x19]
  e4:	add	x9, x24, x24, lsl #1
  e8:	lsl	x24, x9, #4
  ec:	sub	x23, x8, #0x28
  f0:	b	fc <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0xfc>
  f4:	subs	x24, x24, #0x30
  f8:	b.eq	1c4 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x1c4>  // b.none
  fc:	ldr	x0, [x23, x24]
 100:	cbz	x0, f4 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0xf4>
 104:	bl	0 <_ZdlPv>
 108:	b	f4 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0xf4>
 10c:	ldr	x25, [x19]
 110:	cbz	w21, 278 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x278>
 114:	add	x24, x21, #0x1
 118:	b	138 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x138>
 11c:	ldr	q0, [x23, #32]
 120:	sub	x24, x24, #0x1
 124:	cmp	x24, #0x1
 128:	add	x23, x23, #0x30
 12c:	str	q0, [x25, #32]
 130:	add	x25, x25, #0x30
 134:	b.le	160 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x160>
 138:	ldr	q0, [x23]
 13c:	ldr	x0, [x25, #8]
 140:	str	q0, [x25]
 144:	ldr	q0, [x23, #16]
 148:	str	q0, [x25, #16]
 14c:	stp	xzr, xzr, [x23, #8]
 150:	str	xzr, [x23, #24]
 154:	cbz	x0, 11c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x11c>
 158:	bl	0 <_ZdlPv>
 15c:	b	11c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x11c>
 160:	ldr	x8, [x19]
 164:	ldr	w24, [x19, #8]
 168:	b	27c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x27c>
 16c:	cbz	w24, 1d4 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x1d4>
 170:	ldr	x8, [x19]
 174:	add	x25, x24, #0x1
 178:	add	x26, x8, #0x10
 17c:	b	19c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x19c>
 180:	ldr	q0, [x23, #32]
 184:	sub	x25, x25, #0x1
 188:	cmp	x25, #0x1
 18c:	add	x23, x23, #0x30
 190:	str	q0, [x26, #16]
 194:	add	x26, x26, #0x30
 198:	b.le	1d8 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x1d8>
 19c:	ldr	q0, [x23]
 1a0:	ldur	x0, [x26, #-8]
 1a4:	stur	q0, [x26, #-16]
 1a8:	ldr	q0, [x23, #16]
 1ac:	str	q0, [x26]
 1b0:	stp	xzr, xzr, [x23, #8]
 1b4:	str	xzr, [x23, #24]
 1b8:	cbz	x0, 180 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x180>
 1bc:	bl	0 <_ZdlPv>
 1c0:	b	180 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x180>
 1c4:	mov	x0, x19
 1c8:	mov	x1, x21
 1cc:	str	wzr, [x19, #8]
 1d0:	bl	0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_>
 1d4:	mov	x24, xzr
 1d8:	ldr	w8, [x20, #8]
 1dc:	cmp	x24, x8
 1e0:	b.eq	234 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x234>  // b.none
 1e4:	ldr	x10, [x20]
 1e8:	ldr	x11, [x19]
 1ec:	add	x12, x24, x24, lsl #1
 1f0:	mov	w9, #0x30                  	// #48
 1f4:	lsl	x12, x12, #4
 1f8:	madd	x8, x8, x9, x10
 1fc:	add	x9, x11, x12
 200:	add	x10, x10, x12
 204:	ldr	q0, [x10]
 208:	str	q0, [x9]
 20c:	ldr	q0, [x10, #16]
 210:	str	q0, [x9, #16]
 214:	ldr	q0, [x10, #32]
 218:	stp	xzr, xzr, [x10, #8]
 21c:	str	xzr, [x10, #24]
 220:	add	x10, x10, #0x30
 224:	cmp	x10, x8
 228:	str	q0, [x9, #32]
 22c:	add	x9, x9, #0x30
 230:	b.ne	204 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x204>  // b.any
 234:	ldr	w8, [x19, #12]
 238:	cmp	w8, w21
 23c:	b.cc	2f0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x2f0>  // b.lo, b.ul, b.last
 240:	str	w21, [x19, #8]
 244:	ldr	w8, [x20, #8]
 248:	cbz	w8, 9c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x9c>
 24c:	ldr	x9, [x20]
 250:	add	x8, x8, x8, lsl #1
 254:	lsl	x21, x8, #4
 258:	sub	x20, x9, #0x28
 25c:	b	268 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x268>
 260:	subs	x21, x21, #0x30
 264:	b.eq	9c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x9c>  // b.none
 268:	ldr	x0, [x20, x21]
 26c:	cbz	x0, 260 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x260>
 270:	bl	0 <_ZdlPv>
 274:	b	260 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x260>
 278:	mov	x8, x25
 27c:	mov	w9, #0x30                  	// #48
 280:	madd	x8, x24, x9, x8
 284:	cmp	x8, x25
 288:	b.ne	2c4 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x2c4>  // b.any
 28c:	ldr	w8, [x19, #12]
 290:	cmp	w8, w21
 294:	b.cc	2f0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x2f0>  // b.lo, b.ul, b.last
 298:	str	w21, [x19, #8]
 29c:	ldr	w8, [x20, #8]
 2a0:	cbz	w8, 9c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x9c>
 2a4:	ldr	x9, [x20]
 2a8:	add	x8, x8, x8, lsl #1
 2ac:	lsl	x21, x8, #4
 2b0:	sub	x20, x9, #0x28
 2b4:	b	2e0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x2e0>
 2b8:	cmp	x25, x23
 2bc:	mov	x8, x23
 2c0:	b.eq	28c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x28c>  // b.none
 2c4:	ldur	x0, [x8, #-40]
 2c8:	sub	x23, x8, #0x30
 2cc:	cbz	x0, 2b8 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x2b8>
 2d0:	bl	0 <_ZdlPv>
 2d4:	b	2b8 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x2b8>
 2d8:	subs	x21, x21, #0x30
 2dc:	b.eq	9c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x9c>  // b.none
 2e0:	ldr	x0, [x20, x21]
 2e4:	cbz	x0, 2d8 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x2d8>
 2e8:	bl	0 <_ZdlPv>
 2ec:	b	2d8 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x2d8>
 2f0:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_>
 2f4:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_>
 2f8:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_>
 2fc:	add	x0, x0, #0x0
 300:	add	x1, x1, #0x0
 304:	add	x3, x3, #0x0
 308:	mov	w2, #0x43                  	// #67
 30c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x19, x0
  1c:	cmp	x0, x1
  20:	b.eq	1f0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x1f0>  // b.none
  24:	ldr	w20, [x1, #8]
  28:	ldr	w22, [x19, #8]
  2c:	mov	x21, x1
  30:	cmp	w22, w20
  34:	b.cs	74 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x74>  // b.hs, b.nlast
  38:	ldr	w8, [x19, #12]
  3c:	cmp	w8, w20
  40:	b.cs	c4 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0xc4>  // b.hs, b.nlast
  44:	cbz	w22, 108 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x108>
  48:	ldr	x8, [x19]
  4c:	add	x9, x22, x22, lsl #1
  50:	lsl	x23, x9, #4
  54:	sub	x22, x8, #0x28
  58:	b	64 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x64>
  5c:	subs	x23, x23, #0x30
  60:	b.eq	108 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x108>  // b.none
  64:	ldr	x0, [x22, x23]
  68:	cbz	x0, 5c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x5c>
  6c:	bl	0 <_ZdlPv>
  70:	b	5c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x5c>
  74:	ldr	x23, [x19]
  78:	cbz	w20, 1cc <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x1cc>
  7c:	ldr	x21, [x21]
  80:	add	x22, x20, #0x1
  84:	ldr	x8, [x21]
  88:	add	x1, x21, #0x8
  8c:	add	x0, x23, #0x8
  90:	str	x8, [x23]
  94:	bl	0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_>
  98:	ldr	q0, [x21, #32]
  9c:	sub	x22, x22, #0x1
  a0:	cmp	x22, #0x1
  a4:	add	x21, x21, #0x30
  a8:	str	q0, [x23, #32]
  ac:	add	x23, x23, #0x30
  b0:	b.gt	84 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x84>
  b4:	mov	x21, x23
  b8:	ldr	x23, [x19]
  bc:	ldr	w22, [x19, #8]
  c0:	b	1d0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x1d0>
  c4:	cbz	w22, 118 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x118>
  c8:	ldr	x23, [x21]
  cc:	ldr	x24, [x19]
  d0:	add	x25, x22, #0x1
  d4:	ldr	x8, [x23]
  d8:	add	x1, x23, #0x8
  dc:	add	x0, x24, #0x8
  e0:	str	x8, [x24]
  e4:	bl	0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_>
  e8:	ldr	q0, [x23, #32]
  ec:	sub	x25, x25, #0x1
  f0:	add	x23, x23, #0x30
  f4:	cmp	x25, #0x1
  f8:	str	q0, [x24, #32]
  fc:	add	x24, x24, #0x30
 100:	b.gt	d4 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0xd4>
 104:	b	11c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x11c>
 108:	mov	x0, x19
 10c:	mov	x1, x20
 110:	str	wzr, [x19, #8]
 114:	bl	0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_>
 118:	mov	x22, xzr
 11c:	ldr	w8, [x21, #8]
 120:	cmp	x22, x8
 124:	b.eq	1e0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x1e0>  // b.none
 128:	ldr	x9, [x21]
 12c:	ldr	x11, [x19]
 130:	add	x12, x22, x22, lsl #1
 134:	mov	w10, #0x30                  	// #48
 138:	lsl	x12, x12, #4
 13c:	madd	x22, x8, x10, x9
 140:	add	x23, x11, x12
 144:	add	x24, x9, x12
 148:	b	16c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x16c>
 14c:	add	x8, x21, x25, lsl #2
 150:	str	x8, [x23, #16]
 154:	ldr	q0, [x24, #32]
 158:	add	x24, x24, #0x30
 15c:	cmp	x24, x22
 160:	str	q0, [x23, #32]
 164:	add	x23, x23, #0x30
 168:	b.eq	1e0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x1e0>  // b.none
 16c:	ldr	x8, [x24]
 170:	str	x8, [x23]
 174:	ldp	x9, x8, [x24, #8]
 178:	stp	xzr, xzr, [x23, #8]
 17c:	str	xzr, [x23, #24]
 180:	subs	x0, x8, x9
 184:	asr	x25, x0, #2
 188:	b.eq	1a0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x1a0>  // b.none
 18c:	lsr	x8, x25, #61
 190:	cbnz	x8, 22c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x22c>
 194:	bl	0 <_Znwm>
 198:	mov	x21, x0
 19c:	b	1a4 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x1a4>
 1a0:	mov	x21, xzr
 1a4:	add	x8, x21, x25, lsl #2
 1a8:	stp	x21, x21, [x23, #8]
 1ac:	str	x8, [x23, #24]
 1b0:	ldp	x1, x8, [x24, #8]
 1b4:	subs	x2, x8, x1
 1b8:	asr	x25, x2, #2
 1bc:	b.eq	14c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x14c>  // b.none
 1c0:	mov	x0, x21
 1c4:	bl	0 <memmove>
 1c8:	b	14c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x14c>
 1cc:	mov	x21, x23
 1d0:	mov	w8, #0x30                  	// #48
 1d4:	madd	x8, x22, x8, x23
 1d8:	cmp	x8, x21
 1dc:	b.ne	218 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x218>  // b.any
 1e0:	ldr	w8, [x19, #12]
 1e4:	cmp	w8, w20
 1e8:	b.cc	230 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x230>  // b.lo, b.ul, b.last
 1ec:	str	w20, [x19, #8]
 1f0:	mov	x0, x19
 1f4:	ldp	x20, x19, [sp, #64]
 1f8:	ldp	x22, x21, [sp, #48]
 1fc:	ldp	x24, x23, [sp, #32]
 200:	ldr	x25, [sp, #16]
 204:	ldp	x29, x30, [sp], #80
 208:	ret
 20c:	cmp	x21, x22
 210:	mov	x8, x22
 214:	b.eq	1e0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x1e0>  // b.none
 218:	ldur	x0, [x8, #-40]
 21c:	sub	x22, x8, #0x30
 220:	cbz	x0, 20c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x20c>
 224:	bl	0 <_ZdlPv>
 228:	b	20c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x20c>
 22c:	bl	0 <_ZSt17__throw_bad_allocv>
 230:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_>
 234:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_>
 238:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_>
 23c:	add	x0, x0, #0x0
 240:	add	x1, x1, #0x0
 244:	add	x3, x3, #0x0
 248:	mov	w2, #0x43                  	// #67
 24c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIjSaIjEEaSERKS1_:

0000000000000000 <_ZNSt6vectorIjSaIjEEaSERKS1_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x19, x0
  18:	cmp	x1, x0
  1c:	b.eq	fc <_ZNSt6vectorIjSaIjEEaSERKS1_+0xfc>  // b.none
  20:	ldp	x20, x9, [x1]
  24:	ldr	x10, [x19, #16]
  28:	ldr	x8, [x19]
  2c:	mov	x21, x1
  30:	sub	x22, x9, x20
  34:	asr	x23, x22, #2
  38:	sub	x10, x10, x8
  3c:	cmp	x23, x10, asr #2
  40:	b.ls	84 <_ZNSt6vectorIjSaIjEEaSERKS1_+0x84>  // b.plast
  44:	cbz	x22, cc <_ZNSt6vectorIjSaIjEEaSERKS1_+0xcc>
  48:	lsr	x8, x23, #61
  4c:	cbnz	x8, 114 <_ZNSt6vectorIjSaIjEEaSERKS1_+0x114>
  50:	mov	x0, x22
  54:	bl	0 <_Znwm>
  58:	mov	x1, x20
  5c:	mov	x2, x22
  60:	mov	x21, x0
  64:	bl	0 <memmove>
  68:	ldr	x0, [x19]
  6c:	cbz	x0, 74 <_ZNSt6vectorIjSaIjEEaSERKS1_+0x74>
  70:	bl	0 <_ZdlPv>
  74:	add	x8, x21, x23, lsl #2
  78:	str	x21, [x19]
  7c:	str	x8, [x19, #16]
  80:	b	f0 <_ZNSt6vectorIjSaIjEEaSERKS1_+0xf0>
  84:	ldr	x0, [x19, #8]
  88:	sub	x2, x0, x8
  8c:	cmp	x23, x2, asr #2
  90:	b.ls	b8 <_ZNSt6vectorIjSaIjEEaSERKS1_+0xb8>  // b.plast
  94:	cbz	x2, dc <_ZNSt6vectorIjSaIjEEaSERKS1_+0xdc>
  98:	mov	x0, x8
  9c:	mov	x1, x20
  a0:	bl	0 <memmove>
  a4:	ldp	x8, x0, [x19]
  a8:	ldp	x20, x9, [x21]
  ac:	sub	x8, x0, x8
  b0:	asr	x8, x8, #2
  b4:	b	e0 <_ZNSt6vectorIjSaIjEEaSERKS1_+0xe0>
  b8:	cbz	x22, f0 <_ZNSt6vectorIjSaIjEEaSERKS1_+0xf0>
  bc:	mov	x0, x8
  c0:	mov	x1, x20
  c4:	mov	x2, x22
  c8:	b	ec <_ZNSt6vectorIjSaIjEEaSERKS1_+0xec>
  cc:	mov	x21, xzr
  d0:	ldr	x0, [x19]
  d4:	cbnz	x0, 70 <_ZNSt6vectorIjSaIjEEaSERKS1_+0x70>
  d8:	b	74 <_ZNSt6vectorIjSaIjEEaSERKS1_+0x74>
  dc:	mov	x8, xzr
  e0:	add	x1, x20, x8, lsl #2
  e4:	subs	x2, x9, x1
  e8:	b.eq	f0 <_ZNSt6vectorIjSaIjEEaSERKS1_+0xf0>  // b.none
  ec:	bl	0 <memmove>
  f0:	ldr	x8, [x19]
  f4:	add	x8, x8, x23, lsl #2
  f8:	str	x8, [x19, #8]
  fc:	mov	x0, x19
 100:	ldp	x20, x19, [sp, #48]
 104:	ldp	x22, x21, [sp, #32]
 108:	ldr	x23, [sp, #16]
 10c:	ldp	x29, x30, [sp], #64
 110:	ret
 114:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x20, x0
  1c:	mov	w0, #0x48                  	// #72
  20:	mov	x21, x1
  24:	bl	0 <_Znwm>
  28:	add	x25, x0, #0x30
  2c:	mov	x22, x0
  30:	str	x25, [x22, #32]!
  34:	mov	x8, x21
  38:	ldr	x9, [x8], #16
  3c:	mov	x19, x0
  40:	cmp	x9, x8
  44:	b.eq	58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x58>  // b.none
  48:	str	x9, [x22]
  4c:	ldr	x9, [x21, #16]
  50:	str	x9, [x25]
  54:	b	60 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x60>
  58:	ldr	q0, [x9]
  5c:	str	q0, [x25]
  60:	ldr	x9, [x21, #8]
  64:	mov	x24, x19
  68:	mov	x0, x20
  6c:	mov	x1, x22
  70:	str	x9, [x19, #40]
  74:	ldr	x9, [x21, #32]
  78:	stp	x8, xzr, [x21]
  7c:	strb	wzr, [x21, #16]
  80:	str	xzr, [x21, #32]
  84:	str	x9, [x24, #64]!
  88:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_>
  8c:	mov	x23, x0
  90:	cbz	x1, a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xa4>
  94:	mov	x21, x1
  98:	cbz	x23, cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xcc>
  9c:	mov	w0, #0x1                   	// #1
  a0:	b	11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x11c>
  a4:	mov	x0, x24
  a8:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_>
  ac:	ldr	x0, [x22]
  b0:	cmp	x0, x25
  b4:	b.eq	bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xbc>  // b.none
  b8:	bl	0 <_ZdlPv>
  bc:	mov	x0, x19
  c0:	bl	0 <_ZdlPv>
  c4:	mov	x1, xzr
  c8:	b	140 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x140>
  cc:	add	x8, x20, #0x8
  d0:	cmp	x8, x21
  d4:	b.eq	9c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x9c>  // b.none
  d8:	ldr	x8, [x19, #40]
  dc:	ldr	x9, [x21, #40]
  e0:	subs	x23, x8, x9
  e4:	csel	x2, x9, x8, hi  // hi = pmore
  e8:	cbz	x2, fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xfc>
  ec:	ldr	x1, [x21, #32]
  f0:	ldr	x0, [x22]
  f4:	bl	0 <memcmp>
  f8:	cbnz	w0, 118 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x118>
  fc:	mov	w0, #0x7fffffff            	// #2147483647
 100:	cmp	x23, x0
 104:	b.gt	118 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x118>
 108:	mov	x8, #0xffffffff80000000    	// #-2147483648
 10c:	cmp	x23, x8
 110:	mov	w8, #0x80000000            	// #-2147483648
 114:	csel	w0, w23, w8, gt
 118:	lsr	w0, w0, #31
 11c:	add	x3, x20, #0x8
 120:	mov	x1, x19
 124:	mov	x2, x21
 128:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
 12c:	ldr	x8, [x20, #40]
 130:	mov	w1, #0x1                   	// #1
 134:	mov	x23, x19
 138:	add	x8, x8, #0x1
 13c:	str	x8, [x20, #40]
 140:	mov	x0, x23
 144:	ldp	x20, x19, [sp, #64]
 148:	ldp	x22, x21, [sp, #48]
 14c:	ldp	x24, x23, [sp, #32]
 150:	ldr	x25, [sp, #16]
 154:	ldp	x29, x30, [sp], #80
 158:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x20, x0
  1c:	mov	w0, #0x48                  	// #72
  20:	mov	x22, x3
  24:	mov	x21, x1
  28:	bl	0 <_Znwm>
  2c:	ldr	x8, [x22]
  30:	add	x25, x0, #0x30
  34:	mov	x22, x0
  38:	str	x25, [x22, #32]!
  3c:	mov	x9, x8
  40:	ldr	x10, [x9], #16
  44:	mov	x19, x0
  48:	cmp	x10, x9
  4c:	b.eq	60 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x60>  // b.none
  50:	str	x10, [x22]
  54:	ldr	x10, [x8, #16]
  58:	str	x10, [x25]
  5c:	b	68 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x68>
  60:	ldr	q0, [x10]
  64:	str	q0, [x25]
  68:	ldr	x10, [x8, #8]
  6c:	mov	x24, x19
  70:	mov	x0, x20
  74:	mov	x1, x21
  78:	mov	x2, x22
  7c:	str	x10, [x19, #40]
  80:	stp	x9, xzr, [x8]
  84:	strb	wzr, [x8, #16]
  88:	str	xzr, [x24, #64]!
  8c:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_>
  90:	mov	x23, x0
  94:	cbz	x1, a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0xa8>
  98:	mov	x21, x1
  9c:	cbz	x23, cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0xcc>
  a0:	mov	w0, #0x1                   	// #1
  a4:	b	11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x11c>
  a8:	mov	x0, x24
  ac:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_>
  b0:	ldr	x0, [x22]
  b4:	cmp	x0, x25
  b8:	b.eq	c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0xc0>  // b.none
  bc:	bl	0 <_ZdlPv>
  c0:	mov	x0, x19
  c4:	bl	0 <_ZdlPv>
  c8:	b	13c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x13c>
  cc:	add	x8, x20, #0x8
  d0:	cmp	x8, x21
  d4:	b.eq	a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0xa0>  // b.none
  d8:	ldr	x8, [x19, #40]
  dc:	ldr	x9, [x21, #40]
  e0:	subs	x23, x8, x9
  e4:	csel	x2, x9, x8, hi  // hi = pmore
  e8:	cbz	x2, fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0xfc>
  ec:	ldr	x1, [x21, #32]
  f0:	ldr	x0, [x22]
  f4:	bl	0 <memcmp>
  f8:	cbnz	w0, 118 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x118>
  fc:	mov	w0, #0x7fffffff            	// #2147483647
 100:	cmp	x23, x0
 104:	b.gt	118 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x118>
 108:	mov	x8, #0xffffffff80000000    	// #-2147483648
 10c:	cmp	x23, x8
 110:	mov	w8, #0x80000000            	// #-2147483648
 114:	csel	w0, w23, w8, gt
 118:	lsr	w0, w0, #31
 11c:	add	x3, x20, #0x8
 120:	mov	x1, x19
 124:	mov	x2, x21
 128:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
 12c:	ldr	x8, [x20, #40]
 130:	mov	x23, x19
 134:	add	x8, x8, #0x1
 138:	str	x8, [x20, #40]
 13c:	mov	x0, x23
 140:	ldp	x20, x19, [sp, #64]
 144:	ldp	x22, x21, [sp, #48]
 148:	ldp	x24, x23, [sp, #32]
 14c:	ldr	x25, [sp, #16]
 150:	ldp	x29, x30, [sp], #80
 154:	ret
