
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//readfile.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000838 <.init>:
 838:	stp	x29, x30, [sp, #-16]!
 83c:	mov	x29, sp
 840:	bl	940 <fprintf@plt+0x10>
 844:	ldp	x29, x30, [sp], #16
 848:	ret

Disassembly of section .plt:

0000000000000850 <memcpy@plt-0x20>:
 850:	stp	x16, x30, [sp, #-16]!
 854:	adrp	x16, 11000 <dl_load@@Base+0xfdfc>
 858:	ldr	x17, [x16, #4088]
 85c:	add	x16, x16, #0xff8
 860:	br	x17
 864:	nop
 868:	nop
 86c:	nop

0000000000000870 <memcpy@plt>:
 870:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 874:	ldr	x17, [x16]
 878:	add	x16, x16, #0x0
 87c:	br	x17

0000000000000880 <exit@plt>:
 880:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 884:	ldr	x17, [x16, #8]
 888:	add	x16, x16, #0x8
 88c:	br	x17

0000000000000890 <__cxa_finalize@plt>:
 890:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 894:	ldr	x17, [x16, #16]
 898:	add	x16, x16, #0x10
 89c:	br	x17

00000000000008a0 <open@plt>:
 8a0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8a4:	ldr	x17, [x16, #24]
 8a8:	add	x16, x16, #0x18
 8ac:	br	x17

00000000000008b0 <memset@plt>:
 8b0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8b4:	ldr	x17, [x16, #32]
 8b8:	add	x16, x16, #0x20
 8bc:	br	x17

00000000000008c0 <close@plt>:
 8c0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8c4:	ldr	x17, [x16, #40]
 8c8:	add	x16, x16, #0x28
 8cc:	br	x17

00000000000008d0 <__gmon_start__@plt>:
 8d0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8d4:	ldr	x17, [x16, #48]
 8d8:	add	x16, x16, #0x30
 8dc:	br	x17

00000000000008e0 <fwrite@plt>:
 8e0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8e4:	ldr	x17, [x16, #56]
 8e8:	add	x16, x16, #0x38
 8ec:	br	x17

00000000000008f0 <read@plt>:
 8f0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8f4:	ldr	x17, [x16, #64]
 8f8:	add	x16, x16, #0x40
 8fc:	br	x17

0000000000000900 <__errno_location@plt>:
 900:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 904:	ldr	x17, [x16, #72]
 908:	add	x16, x16, #0x48
 90c:	br	x17

0000000000000910 <__xstat@plt>:
 910:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 914:	ldr	x17, [x16, #80]
 918:	add	x16, x16, #0x50
 91c:	br	x17

0000000000000920 <gettext@plt>:
 920:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 924:	ldr	x17, [x16, #88]
 928:	add	x16, x16, #0x58
 92c:	br	x17

0000000000000930 <fprintf@plt>:
 930:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 934:	ldr	x17, [x16, #96]
 938:	add	x16, x16, #0x60
 93c:	br	x17

Disassembly of section .text:

0000000000000940 <dl_load@@Base-0x8c4>:
     940:	adrp	x0, 11000 <dl_load@@Base+0xfdfc>
     944:	ldr	x0, [x0, #4056]
     948:	cbz	x0, 950 <fprintf@plt+0x20>
     94c:	b	8d0 <__gmon_start__@plt>
     950:	ret
     954:	stp	x29, x30, [sp, #-32]!
     958:	mov	x29, sp
     95c:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
     960:	add	x0, x0, #0xd0
     964:	str	x0, [sp, #24]
     968:	ldr	x0, [sp, #24]
     96c:	str	x0, [sp, #24]
     970:	ldr	x1, [sp, #24]
     974:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
     978:	add	x0, x0, #0xd0
     97c:	cmp	x1, x0
     980:	b.eq	9b8 <fprintf@plt+0x88>  // b.none
     984:	adrp	x0, 11000 <dl_load@@Base+0xfdfc>
     988:	ldr	x0, [x0, #4032]
     98c:	str	x0, [sp, #16]
     990:	ldr	x0, [sp, #16]
     994:	str	x0, [sp, #16]
     998:	ldr	x0, [sp, #16]
     99c:	cmp	x0, #0x0
     9a0:	b.eq	9bc <fprintf@plt+0x8c>  // b.none
     9a4:	ldr	x1, [sp, #16]
     9a8:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
     9ac:	add	x0, x0, #0xd0
     9b0:	blr	x1
     9b4:	b	9bc <fprintf@plt+0x8c>
     9b8:	nop
     9bc:	ldp	x29, x30, [sp], #32
     9c0:	ret
     9c4:	stp	x29, x30, [sp, #-48]!
     9c8:	mov	x29, sp
     9cc:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
     9d0:	add	x0, x0, #0xd0
     9d4:	str	x0, [sp, #40]
     9d8:	ldr	x0, [sp, #40]
     9dc:	str	x0, [sp, #40]
     9e0:	ldr	x1, [sp, #40]
     9e4:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
     9e8:	add	x0, x0, #0xd0
     9ec:	sub	x0, x1, x0
     9f0:	asr	x0, x0, #3
     9f4:	lsr	x1, x0, #63
     9f8:	add	x0, x1, x0
     9fc:	asr	x0, x0, #1
     a00:	str	x0, [sp, #32]
     a04:	ldr	x0, [sp, #32]
     a08:	cmp	x0, #0x0
     a0c:	b.eq	a48 <fprintf@plt+0x118>  // b.none
     a10:	adrp	x0, 11000 <dl_load@@Base+0xfdfc>
     a14:	ldr	x0, [x0, #4064]
     a18:	str	x0, [sp, #24]
     a1c:	ldr	x0, [sp, #24]
     a20:	str	x0, [sp, #24]
     a24:	ldr	x0, [sp, #24]
     a28:	cmp	x0, #0x0
     a2c:	b.eq	a4c <fprintf@plt+0x11c>  // b.none
     a30:	ldr	x2, [sp, #24]
     a34:	ldr	x1, [sp, #32]
     a38:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
     a3c:	add	x0, x0, #0xd0
     a40:	blr	x2
     a44:	b	a4c <fprintf@plt+0x11c>
     a48:	nop
     a4c:	ldp	x29, x30, [sp], #48
     a50:	ret
     a54:	stp	x29, x30, [sp, #-16]!
     a58:	mov	x29, sp
     a5c:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
     a60:	add	x0, x0, #0xd0
     a64:	ldrb	w0, [x0]
     a68:	and	x0, x0, #0xff
     a6c:	cmp	x0, #0x0
     a70:	b.ne	aac <fprintf@plt+0x17c>  // b.any
     a74:	adrp	x0, 11000 <dl_load@@Base+0xfdfc>
     a78:	ldr	x0, [x0, #4040]
     a7c:	cmp	x0, #0x0
     a80:	b.eq	a94 <fprintf@plt+0x164>  // b.none
     a84:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
     a88:	add	x0, x0, #0x68
     a8c:	ldr	x0, [x0]
     a90:	bl	890 <__cxa_finalize@plt>
     a94:	bl	954 <fprintf@plt+0x24>
     a98:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
     a9c:	add	x0, x0, #0xd0
     aa0:	mov	w1, #0x1                   	// #1
     aa4:	strb	w1, [x0]
     aa8:	b	ab0 <fprintf@plt+0x180>
     aac:	nop
     ab0:	ldp	x29, x30, [sp], #16
     ab4:	ret
     ab8:	stp	x29, x30, [sp, #-16]!
     abc:	mov	x29, sp
     ac0:	bl	9c4 <fprintf@plt+0x94>
     ac4:	nop
     ac8:	ldp	x29, x30, [sp], #16
     acc:	ret
     ad0:	stp	x29, x30, [sp, #-80]!
     ad4:	mov	x29, sp
     ad8:	str	x0, [sp, #56]
     adc:	str	x1, [sp, #48]
     ae0:	str	x2, [sp, #40]
     ae4:	str	x3, [sp, #32]
     ae8:	str	w4, [sp, #28]
     aec:	str	x5, [sp, #16]
     af0:	str	w6, [sp, #24]
     af4:	str	xzr, [sp, #72]
     af8:	mov	x2, #0x20                  	// #32
     afc:	mov	w1, #0x0                   	// #0
     b00:	ldr	x0, [sp, #16]
     b04:	bl	8b0 <memset@plt>
     b08:	ldr	x0, [sp, #16]
     b0c:	ldr	w1, [sp, #24]
     b10:	str	w1, [x0]
     b14:	ldr	x0, [sp, #16]
     b18:	ldr	x1, [sp, #32]
     b1c:	str	x1, [x0, #16]
     b20:	ldr	w0, [sp, #28]
     b24:	cmp	w0, #0x0
     b28:	b.eq	bac <fprintf@plt+0x27c>  // b.none
     b2c:	ldr	x0, [sp, #56]
     b30:	ldr	x1, [x0, #280]
     b34:	ldr	x0, [sp, #32]
     b38:	add	x0, x0, #0x1
     b3c:	blr	x1
     b40:	str	x0, [sp, #72]
     b44:	ldr	x0, [sp, #72]
     b48:	cmp	x0, #0x0
     b4c:	b.ne	b7c <fprintf@plt+0x24c>  // b.any
     b50:	ldr	x0, [sp, #56]
     b54:	ldr	x4, [x0, #96]
     b58:	ldr	x0, [sp, #32]
     b5c:	add	x0, x0, #0x1
     b60:	mov	x3, x0
     b64:	adrp	x0, 1000 <fprintf@plt+0x6d0>
     b68:	add	x2, x0, #0x4e0
     b6c:	adrp	x0, 1000 <fprintf@plt+0x6d0>
     b70:	add	x1, x0, #0x4f0
     b74:	ldr	x0, [sp, #48]
     b78:	blr	x4
     b7c:	ldr	x2, [sp, #32]
     b80:	ldr	x1, [sp, #40]
     b84:	ldr	x0, [sp, #72]
     b88:	bl	870 <memcpy@plt>
     b8c:	ldr	x1, [sp, #72]
     b90:	ldr	x0, [sp, #32]
     b94:	add	x0, x1, x0
     b98:	strb	wzr, [x0]
     b9c:	ldr	x0, [sp, #16]
     ba0:	ldr	x1, [sp, #72]
     ba4:	str	x1, [x0, #8]
     ba8:	b	bb8 <fprintf@plt+0x288>
     bac:	ldr	x0, [sp, #16]
     bb0:	ldr	x1, [sp, #40]
     bb4:	str	x1, [x0, #8]
     bb8:	ldr	x0, [sp, #16]
     bbc:	ldp	x29, x30, [sp], #80
     bc0:	ret
     bc4:	stp	x29, x30, [sp, #-64]!
     bc8:	mov	x29, sp
     bcc:	str	x0, [sp, #56]
     bd0:	str	x1, [sp, #48]
     bd4:	str	x2, [sp, #40]
     bd8:	str	x3, [sp, #32]
     bdc:	str	w4, [sp, #28]
     be0:	str	x5, [sp, #16]
     be4:	mov	w6, #0x2                   	// #2
     be8:	ldr	x5, [sp, #16]
     bec:	ldr	w4, [sp, #28]
     bf0:	ldr	x3, [sp, #32]
     bf4:	ldr	x2, [sp, #40]
     bf8:	ldr	x1, [sp, #48]
     bfc:	ldr	x0, [sp, #56]
     c00:	bl	ad0 <fprintf@plt+0x1a0>
     c04:	ldp	x29, x30, [sp], #64
     c08:	ret
     c0c:	stp	x29, x30, [sp, #-32]!
     c10:	mov	x29, sp
     c14:	str	x0, [sp, #24]
     c18:	mov	x2, #0x20                  	// #32
     c1c:	mov	w1, #0x0                   	// #0
     c20:	ldr	x0, [sp, #24]
     c24:	bl	8b0 <memset@plt>
     c28:	ldr	x0, [sp, #24]
     c2c:	str	wzr, [x0]
     c30:	ldr	x0, [sp, #24]
     c34:	ldp	x29, x30, [sp], #32
     c38:	ret
     c3c:	stp	x29, x30, [sp, #-64]!
     c40:	mov	x29, sp
     c44:	stp	x19, x20, [sp, #16]
     c48:	str	w0, [sp, #44]
     c4c:	str	x1, [sp, #32]
     c50:	ldr	x0, [sp, #32]
     c54:	ldr	w0, [x0, #16]
     c58:	and	w0, w0, #0xf000
     c5c:	cmp	w0, #0x8, lsl #12
     c60:	b.eq	cac <fprintf@plt+0x37c>  // b.none
     c64:	bl	900 <__errno_location@plt>
     c68:	mov	x1, x0
     c6c:	mov	w0, #0x16                  	// #22
     c70:	str	w0, [x1]
     c74:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
     c78:	add	x0, x0, #0xd8
     c7c:	ldr	x0, [x0]
     c80:	ldr	x19, [x0, #128]
     c84:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
     c88:	add	x0, x0, #0xe0
     c8c:	ldr	x20, [x0]
     c90:	bl	900 <__errno_location@plt>
     c94:	ldr	w0, [x0]
     c98:	mov	w1, w0
     c9c:	mov	x0, x20
     ca0:	blr	x19
     ca4:	mov	x0, #0x0                   	// #0
     ca8:	b	db8 <fprintf@plt+0x488>
     cac:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
     cb0:	add	x0, x0, #0xd8
     cb4:	ldr	x0, [x0]
     cb8:	ldr	x1, [x0, #280]
     cbc:	ldr	x0, [sp, #32]
     cc0:	ldr	x0, [x0, #48]
     cc4:	add	x0, x0, #0x1
     cc8:	blr	x1
     ccc:	str	x0, [sp, #56]
     cd0:	ldr	x0, [sp, #56]
     cd4:	cmp	x0, #0x0
     cd8:	b.ne	d20 <fprintf@plt+0x3f0>  // b.any
     cdc:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
     ce0:	add	x0, x0, #0xd8
     ce4:	ldr	x0, [x0]
     ce8:	ldr	x4, [x0, #96]
     cec:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
     cf0:	add	x0, x0, #0xe0
     cf4:	ldr	x5, [x0]
     cf8:	ldr	x0, [sp, #32]
     cfc:	ldr	x0, [x0, #48]
     d00:	add	x0, x0, #0x1
     d04:	mov	x3, x0
     d08:	adrp	x0, 1000 <fprintf@plt+0x6d0>
     d0c:	add	x2, x0, #0x530
     d10:	adrp	x0, 1000 <fprintf@plt+0x6d0>
     d14:	add	x1, x0, #0x4f0
     d18:	mov	x0, x5
     d1c:	blr	x4
     d20:	ldr	x0, [sp, #32]
     d24:	ldr	x0, [x0, #48]
     d28:	mov	x2, x0
     d2c:	ldr	x1, [sp, #56]
     d30:	ldr	w0, [sp, #44]
     d34:	bl	8f0 <read@plt>
     d38:	mov	x1, x0
     d3c:	ldr	x0, [sp, #32]
     d40:	ldr	x0, [x0, #48]
     d44:	cmp	x1, x0
     d48:	b.eq	d9c <fprintf@plt+0x46c>  // b.none
     d4c:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
     d50:	add	x0, x0, #0xd8
     d54:	ldr	x0, [x0]
     d58:	ldr	x19, [x0, #128]
     d5c:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
     d60:	add	x0, x0, #0xe0
     d64:	ldr	x20, [x0]
     d68:	bl	900 <__errno_location@plt>
     d6c:	ldr	w0, [x0]
     d70:	mov	w1, w0
     d74:	mov	x0, x20
     d78:	blr	x19
     d7c:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
     d80:	add	x0, x0, #0xd8
     d84:	ldr	x0, [x0]
     d88:	ldr	x1, [x0, #304]
     d8c:	ldr	x0, [sp, #56]
     d90:	blr	x1
     d94:	mov	x0, #0x0                   	// #0
     d98:	b	db8 <fprintf@plt+0x488>
     d9c:	ldr	x0, [sp, #32]
     da0:	ldr	x0, [x0, #48]
     da4:	mov	x1, x0
     da8:	ldr	x0, [sp, #56]
     dac:	add	x0, x0, x1
     db0:	strb	wzr, [x0]
     db4:	ldr	x0, [sp, #56]
     db8:	ldp	x19, x20, [sp, #16]
     dbc:	ldp	x29, x30, [sp], #64
     dc0:	ret
     dc4:	stp	x29, x30, [sp, #-240]!
     dc8:	mov	x29, sp
     dcc:	stp	x19, x20, [sp, #16]
     dd0:	str	w0, [sp, #60]
     dd4:	str	x1, [sp, #48]
     dd8:	str	x2, [sp, #40]
     ddc:	ldr	x0, [sp, #48]
     de0:	bl	c0c <fprintf@plt+0x2dc>
     de4:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
     de8:	add	x0, x0, #0xd8
     dec:	ldr	x0, [x0]
     df0:	ldr	x1, [x0, #144]
     df4:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
     df8:	add	x0, x0, #0xe0
     dfc:	ldr	x0, [x0]
     e00:	blr	x1
     e04:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
     e08:	add	x0, x0, #0xd8
     e0c:	ldr	x0, [x0]
     e10:	ldr	x4, [x0, #152]
     e14:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
     e18:	add	x0, x0, #0xe0
     e1c:	ldr	x0, [x0]
     e20:	add	x1, sp, #0xc0
     e24:	mov	x3, x1
     e28:	mov	w2, #0x2                   	// #2
     e2c:	mov	x1, #0x0                   	// #0
     e30:	blr	x4
     e34:	cmp	w0, #0x0
     e38:	b.eq	f40 <fprintf@plt+0x610>  // b.none
     e3c:	ldr	x0, [sp, #200]
     e40:	add	x1, sp, #0x40
     e44:	bl	14c0 <dl_load@@Base+0x2bc>
     e48:	str	w0, [sp, #236]
     e4c:	ldr	w0, [sp, #236]
     e50:	cmp	w0, #0x0
     e54:	b.ge	e8c <fprintf@plt+0x55c>  // b.tcont
     e58:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
     e5c:	add	x0, x0, #0xd8
     e60:	ldr	x0, [x0]
     e64:	ldr	x19, [x0, #128]
     e68:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
     e6c:	add	x0, x0, #0xe0
     e70:	ldr	x20, [x0]
     e74:	bl	900 <__errno_location@plt>
     e78:	ldr	w0, [x0]
     e7c:	mov	w1, w0
     e80:	mov	x0, x20
     e84:	blr	x19
     e88:	b	f9c <fprintf@plt+0x66c>
     e8c:	ldr	x0, [sp, #200]
     e90:	mov	w1, #0x0                   	// #0
     e94:	bl	8a0 <open@plt>
     e98:	str	w0, [sp, #232]
     e9c:	ldr	w0, [sp, #232]
     ea0:	cmp	w0, #0x0
     ea4:	b.ge	edc <fprintf@plt+0x5ac>  // b.tcont
     ea8:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
     eac:	add	x0, x0, #0xd8
     eb0:	ldr	x0, [x0]
     eb4:	ldr	x19, [x0, #128]
     eb8:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
     ebc:	add	x0, x0, #0xe0
     ec0:	ldr	x20, [x0]
     ec4:	bl	900 <__errno_location@plt>
     ec8:	ldr	w0, [x0]
     ecc:	mov	w1, w0
     ed0:	mov	x0, x20
     ed4:	blr	x19
     ed8:	b	f9c <fprintf@plt+0x66c>
     edc:	add	x0, sp, #0x40
     ee0:	mov	x1, x0
     ee4:	ldr	w0, [sp, #232]
     ee8:	bl	c3c <fprintf@plt+0x30c>
     eec:	str	x0, [sp, #224]
     ef0:	ldr	x0, [sp, #224]
     ef4:	cmp	x0, #0x0
     ef8:	b.eq	f90 <fprintf@plt+0x660>  // b.none
     efc:	ldr	w0, [sp, #232]
     f00:	bl	8c0 <close@plt>
     f04:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
     f08:	add	x0, x0, #0xd8
     f0c:	ldr	x6, [x0]
     f10:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
     f14:	add	x0, x0, #0xe0
     f18:	ldr	x0, [x0]
     f1c:	ldr	x1, [sp, #112]
     f20:	ldr	x5, [sp, #48]
     f24:	mov	w4, #0x0                   	// #0
     f28:	mov	x3, x1
     f2c:	ldr	x2, [sp, #224]
     f30:	mov	x1, x0
     f34:	mov	x0, x6
     f38:	bl	bc4 <fprintf@plt+0x294>
     f3c:	b	f9c <fprintf@plt+0x66c>
     f40:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
     f44:	add	x0, x0, #0xd8
     f48:	ldr	x0, [x0]
     f4c:	ldr	w0, [x0, #24]
     f50:	cmp	w0, #0x0
     f54:	b.eq	f98 <fprintf@plt+0x668>  // b.none
     f58:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
     f5c:	add	x0, x0, #0xd8
     f60:	ldr	x0, [x0]
     f64:	ldr	x19, [x0, #112]
     f68:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
     f6c:	add	x0, x0, #0xe0
     f70:	ldr	x20, [x0]
     f74:	adrp	x0, 1000 <fprintf@plt+0x6d0>
     f78:	add	x0, x0, #0x540
     f7c:	bl	920 <gettext@plt>
     f80:	mov	x1, x0
     f84:	mov	x0, x20
     f88:	blr	x19
     f8c:	b	f9c <fprintf@plt+0x66c>
     f90:	nop
     f94:	b	f9c <fprintf@plt+0x66c>
     f98:	nop
     f9c:	ldr	x0, [sp, #48]
     fa0:	ldp	x19, x20, [sp, #16]
     fa4:	ldp	x29, x30, [sp], #240
     fa8:	ret
     fac:	stp	x29, x30, [sp, #-80]!
     fb0:	mov	x29, sp
     fb4:	str	x0, [sp, #56]
     fb8:	str	x1, [sp, #48]
     fbc:	str	x2, [sp, #40]
     fc0:	str	x3, [sp, #32]
     fc4:	str	x4, [sp, #24]
     fc8:	str	x5, [sp, #16]
     fcc:	ldr	x0, [sp, #56]
     fd0:	cmp	x0, #0x0
     fd4:	b.eq	fe4 <fprintf@plt+0x6b4>  // b.none
     fd8:	ldr	x0, [sp, #48]
     fdc:	cmp	x0, #0x0
     fe0:	b.ne	fec <fprintf@plt+0x6bc>  // b.any
     fe4:	mov	w0, #0xffffffff            	// #-1
     fe8:	b	108c <fprintf@plt+0x75c>
     fec:	ldr	x0, [sp, #48]
     ff0:	ldr	x0, [x0, #16]
     ff4:	cmp	x0, #0x0
     ff8:	b.eq	1028 <fprintf@plt+0x6f8>  // b.none
     ffc:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
    1000:	add	x0, x0, #0xd8
    1004:	ldr	x0, [x0]
    1008:	ldr	x1, [x0, #304]
    100c:	ldr	x0, [sp, #48]
    1010:	ldr	x0, [x0, #16]
    1014:	blr	x1
    1018:	ldr	x0, [sp, #48]
    101c:	str	xzr, [x0, #16]
    1020:	mov	w0, #0xffffffff            	// #-1
    1024:	b	108c <fprintf@plt+0x75c>
    1028:	ldr	x0, [sp, #48]
    102c:	ldr	w2, [x0, #8]
    1030:	ldr	x0, [sp, #48]
    1034:	add	x0, x0, #0x30
    1038:	mov	x1, x0
    103c:	mov	w0, w2
    1040:	bl	c3c <fprintf@plt+0x30c>
    1044:	str	x0, [sp, #72]
    1048:	ldr	x0, [sp, #72]
    104c:	cmp	x0, #0x0
    1050:	b.ne	105c <fprintf@plt+0x72c>  // b.any
    1054:	mov	w0, #0xffffffff            	// #-1
    1058:	b	108c <fprintf@plt+0x75c>
    105c:	ldr	x0, [sp, #48]
    1060:	ldr	x1, [sp, #72]
    1064:	str	x1, [x0, #16]
    1068:	ldr	x0, [sp, #32]
    106c:	str	xzr, [x0]
    1070:	ldr	x0, [sp, #24]
    1074:	str	xzr, [x0]
    1078:	ldr	x0, [sp, #56]
    107c:	ldr	x1, [sp, #72]
    1080:	str	x1, [x0]
    1084:	ldr	x0, [sp, #48]
    1088:	ldr	x0, [x0, #96]
    108c:	ldp	x29, x30, [sp], #80
    1090:	ret
    1094:	stp	x29, x30, [sp, #-128]!
    1098:	mov	x29, sp
    109c:	str	x0, [sp, #24]
    10a0:	ldr	x0, [sp, #24]
    10a4:	cmp	x0, #0x0
    10a8:	b.ne	10b4 <fprintf@plt+0x784>  // b.any
    10ac:	mov	w0, #0x0                   	// #0
    10b0:	b	1184 <fprintf@plt+0x854>
    10b4:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
    10b8:	add	x0, x0, #0xd8
    10bc:	ldr	x0, [x0]
    10c0:	ldr	x5, [x0, #168]
    10c4:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
    10c8:	add	x0, x0, #0xe0
    10cc:	ldr	x6, [x0]
    10d0:	add	x0, sp, #0x60
    10d4:	mov	x4, x0
    10d8:	mov	w3, #0x5                   	// #5
    10dc:	adrp	x0, 1000 <fprintf@plt+0x6d0>
    10e0:	add	x2, x0, #0x570
    10e4:	adrp	x0, 1000 <fprintf@plt+0x6d0>
    10e8:	add	x1, x0, #0x580
    10ec:	mov	x0, x6
    10f0:	blr	x5
    10f4:	cmp	w0, #0x0
    10f8:	b.ne	1104 <fprintf@plt+0x7d4>  // b.any
    10fc:	mov	w0, #0x0                   	// #0
    1100:	b	1184 <fprintf@plt+0x854>
    1104:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
    1108:	add	x0, x0, #0xd8
    110c:	ldr	x6, [x0]
    1110:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
    1114:	add	x0, x0, #0xe0
    1118:	ldr	x1, [x0]
    111c:	add	x0, sp, #0x40
    1120:	mov	x5, x0
    1124:	mov	w4, #0x1                   	// #1
    1128:	mov	x3, #0x8                   	// #8
    112c:	adrp	x0, 1000 <fprintf@plt+0x6d0>
    1130:	add	x2, x0, #0x588
    1134:	mov	x0, x6
    1138:	bl	bc4 <fprintf@plt+0x294>
    113c:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
    1140:	add	x0, x0, #0xd8
    1144:	ldr	x0, [x0]
    1148:	ldr	x5, [x0, #224]
    114c:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
    1150:	add	x0, x0, #0xe0
    1154:	ldr	x0, [x0]
    1158:	ldr	x1, [sp, #104]
    115c:	add	x3, sp, #0x20
    1160:	add	x2, sp, #0x40
    1164:	mov	x4, x3
    1168:	mov	w3, #0x0                   	// #0
    116c:	blr	x5
    1170:	cmp	w0, #0x0
    1174:	b.ne	1180 <fprintf@plt+0x850>  // b.any
    1178:	mov	w0, #0x0                   	// #0
    117c:	b	1184 <fprintf@plt+0x854>
    1180:	mov	w0, #0x1                   	// #1
    1184:	ldp	x29, x30, [sp], #128
    1188:	ret
    118c:	sub	sp, sp, #0x10
    1190:	str	x0, [sp, #8]
    1194:	ldr	x0, [sp, #8]
    1198:	cmp	x0, #0x0
    119c:	b.ne	11a8 <fprintf@plt+0x878>  // b.any
    11a0:	mov	w0, #0x0                   	// #0
    11a4:	b	11bc <fprintf@plt+0x88c>
    11a8:	ldr	x0, [sp, #8]
    11ac:	adrp	x1, 0 <memcpy@plt-0x870>
    11b0:	add	x1, x1, #0xfac
    11b4:	str	x1, [x0, #24]
    11b8:	mov	w0, #0x1                   	// #1
    11bc:	add	sp, sp, #0x10
    11c0:	ret
    11c4:	stp	x29, x30, [sp, #-16]!
    11c8:	mov	x29, sp
    11cc:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
    11d0:	add	x0, x0, #0xd8
    11d4:	ldr	x0, [x0]
    11d8:	ldr	x2, [x0, #56]
    11dc:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
    11e0:	add	x0, x0, #0xe0
    11e4:	ldr	x3, [x0]
    11e8:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
    11ec:	add	x1, x0, #0x80
    11f0:	mov	x0, x3
    11f4:	blr	x2
    11f8:	mov	w0, #0x1                   	// #1
    11fc:	ldp	x29, x30, [sp], #16
    1200:	ret

0000000000001204 <dl_load@@Base>:
    1204:	stp	x29, x30, [sp, #-64]!
    1208:	mov	x29, sp
    120c:	str	x0, [sp, #24]
    1210:	str	x1, [sp, #16]
    1214:	str	wzr, [sp, #52]
    1218:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
    121c:	add	x0, x0, #0xd8
    1220:	ldr	x1, [sp, #24]
    1224:	str	x1, [x0]
    1228:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
    122c:	add	x0, x0, #0xe0
    1230:	ldr	x1, [sp, #16]
    1234:	str	x1, [x0]
    1238:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
    123c:	add	x0, x0, #0xd8
    1240:	ldr	x0, [x0]
    1244:	ldr	w0, [x0]
    1248:	cmp	w0, #0x2
    124c:	b.ne	1268 <dl_load@@Base+0x64>  // b.any
    1250:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
    1254:	add	x0, x0, #0xd8
    1258:	ldr	x0, [x0]
    125c:	ldr	w0, [x0, #4]
    1260:	cmp	w0, #0x0
    1264:	b.ge	12e0 <dl_load@@Base+0xdc>  // b.tcont
    1268:	adrp	x0, 11000 <dl_load@@Base+0xfdfc>
    126c:	ldr	x0, [x0, #4048]
    1270:	ldr	x0, [x0]
    1274:	mov	x3, x0
    1278:	mov	x2, #0x26                  	// #38
    127c:	mov	x1, #0x1                   	// #1
    1280:	adrp	x0, 1000 <fprintf@plt+0x6d0>
    1284:	add	x0, x0, #0x598
    1288:	bl	8e0 <fwrite@plt>
    128c:	adrp	x0, 11000 <dl_load@@Base+0xfdfc>
    1290:	ldr	x0, [x0, #4048]
    1294:	ldr	x6, [x0]
    1298:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
    129c:	add	x0, x0, #0xd8
    12a0:	ldr	x0, [x0]
    12a4:	ldr	w1, [x0]
    12a8:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
    12ac:	add	x0, x0, #0xd8
    12b0:	ldr	x0, [x0]
    12b4:	ldr	w0, [x0, #4]
    12b8:	mov	w5, w0
    12bc:	mov	w4, w1
    12c0:	mov	w3, #0x0                   	// #0
    12c4:	mov	w2, #0x2                   	// #2
    12c8:	adrp	x0, 1000 <fprintf@plt+0x6d0>
    12cc:	add	x1, x0, #0x5c0
    12d0:	mov	x0, x6
    12d4:	bl	930 <fprintf@plt>
    12d8:	mov	w0, #0x1                   	// #1
    12dc:	bl	880 <exit@plt>
    12e0:	str	xzr, [sp, #56]
    12e4:	mov	x0, #0x1                   	// #1
    12e8:	str	x0, [sp, #40]
    12ec:	b	13e0 <dl_load@@Base+0x1dc>
    12f0:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
    12f4:	add	x2, x0, #0xa0
    12f8:	ldr	x1, [sp, #56]
    12fc:	mov	x0, x1
    1300:	lsl	x0, x0, #1
    1304:	add	x0, x0, x1
    1308:	lsl	x0, x0, #4
    130c:	add	x0, x2, x0
    1310:	ldr	x0, [x0]
    1314:	cmp	x0, #0x0
    1318:	b.eq	13f4 <dl_load@@Base+0x1f0>  // b.none
    131c:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
    1320:	add	x0, x0, #0xd8
    1324:	ldr	x0, [x0]
    1328:	ldr	x3, [x0, #48]
    132c:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
    1330:	add	x0, x0, #0xe0
    1334:	ldr	x4, [x0]
    1338:	ldr	x1, [sp, #56]
    133c:	mov	x0, x1
    1340:	lsl	x0, x0, #1
    1344:	add	x0, x0, x1
    1348:	lsl	x0, x0, #4
    134c:	adrp	x1, 12000 <dl_load@@Base+0x10dfc>
    1350:	add	x1, x1, #0xa0
    1354:	add	x0, x0, x1
    1358:	mov	x2, x0
    135c:	adrp	x0, 1000 <fprintf@plt+0x6d0>
    1360:	add	x1, x0, #0x580
    1364:	mov	x0, x4
    1368:	blr	x3
    136c:	cmp	w0, #0x0
    1370:	b.ne	13d4 <dl_load@@Base+0x1d0>  // b.any
    1374:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
    1378:	add	x0, x0, #0xd8
    137c:	ldr	x0, [x0]
    1380:	ldr	x3, [x0, #104]
    1384:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
    1388:	add	x0, x0, #0xe0
    138c:	ldr	x4, [x0]
    1390:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
    1394:	add	x2, x0, #0xa0
    1398:	ldr	x1, [sp, #56]
    139c:	mov	x0, x1
    13a0:	lsl	x0, x0, #1
    13a4:	add	x0, x0, x1
    13a8:	lsl	x0, x0, #4
    13ac:	add	x0, x2, x0
    13b0:	ldr	x0, [x0]
    13b4:	mov	x2, x0
    13b8:	adrp	x0, 1000 <fprintf@plt+0x6d0>
    13bc:	add	x1, x0, #0x5f8
    13c0:	mov	x0, x4
    13c4:	blr	x3
    13c8:	ldr	w0, [sp, #52]
    13cc:	add	w0, w0, #0x1
    13d0:	str	w0, [sp, #52]
    13d4:	ldr	x0, [sp, #56]
    13d8:	add	x0, x0, #0x1
    13dc:	str	x0, [sp, #56]
    13e0:	ldr	x1, [sp, #56]
    13e4:	ldr	x0, [sp, #40]
    13e8:	cmp	x1, x0
    13ec:	b.cc	12f0 <dl_load@@Base+0xec>  // b.lo, b.ul, b.last
    13f0:	b	13f8 <dl_load@@Base+0x1f4>
    13f4:	nop
    13f8:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
    13fc:	add	x0, x0, #0x78
    1400:	ldr	x0, [x0]
    1404:	cmp	x0, #0x0
    1408:	b.eq	145c <dl_load@@Base+0x258>  // b.none
    140c:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
    1410:	add	x0, x0, #0x78
    1414:	ldr	x0, [x0]
    1418:	blr	x0
    141c:	cmp	w0, #0x0
    1420:	b.ne	145c <dl_load@@Base+0x258>  // b.any
    1424:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
    1428:	add	x0, x0, #0xd8
    142c:	ldr	x0, [x0]
    1430:	ldr	x2, [x0, #104]
    1434:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
    1438:	add	x0, x0, #0xe0
    143c:	ldr	x3, [x0]
    1440:	adrp	x0, 1000 <fprintf@plt+0x6d0>
    1444:	add	x1, x0, #0x618
    1448:	mov	x0, x3
    144c:	blr	x2
    1450:	ldr	w0, [sp, #52]
    1454:	add	w0, w0, #0x1
    1458:	str	w0, [sp, #52]
    145c:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
    1460:	add	x0, x0, #0x70
    1464:	ldr	x0, [x0]
    1468:	cmp	x0, #0x0
    146c:	b.eq	14a4 <dl_load@@Base+0x2a0>  // b.none
    1470:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
    1474:	add	x0, x0, #0xd8
    1478:	ldr	x0, [x0]
    147c:	ldr	x2, [x0, #88]
    1480:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
    1484:	add	x0, x0, #0xe0
    1488:	ldr	x3, [x0]
    148c:	adrp	x0, 12000 <dl_load@@Base+0x10dfc>
    1490:	add	x0, x0, #0x70
    1494:	ldr	x0, [x0]
    1498:	mov	x1, x0
    149c:	mov	x0, x3
    14a0:	blr	x2
    14a4:	ldr	w0, [sp, #52]
    14a8:	cmp	w0, #0x0
    14ac:	cset	w0, eq  // eq = none
    14b0:	and	w0, w0, #0xff
    14b4:	ldp	x29, x30, [sp], #64
    14b8:	ret
    14bc:	nop
    14c0:	mov	x2, x1
    14c4:	mov	x1, x0
    14c8:	mov	w0, #0x0                   	// #0
    14cc:	b	910 <__xstat@plt>

Disassembly of section .fini:

00000000000014d0 <.fini>:
    14d0:	stp	x29, x30, [sp, #-16]!
    14d4:	mov	x29, sp
    14d8:	ldp	x29, x30, [sp], #16
    14dc:	ret
