
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-fsck_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401798 <_init>:
  401798:	stp	x29, x30, [sp, #-16]!
  40179c:	mov	x29, sp
  4017a0:	bl	401c00 <call_weak_fn>
  4017a4:	ldp	x29, x30, [sp], #16
  4017a8:	ret

Disassembly of section .plt:

00000000004017b0 <__libc_start_main@plt-0x20>:
  4017b0:	stp	x16, x30, [sp, #-16]!
  4017b4:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  4017b8:	ldr	x17, [x16, #3592]
  4017bc:	add	x16, x16, #0xe08
  4017c0:	br	x17
  4017c4:	nop
  4017c8:	nop
  4017cc:	nop

00000000004017d0 <__libc_start_main@plt>:
  4017d0:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  4017d4:	ldr	x17, [x16, #3600]
  4017d8:	add	x16, x16, #0xe10
  4017dc:	br	x17

00000000004017e0 <abort@plt>:
  4017e0:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  4017e4:	ldr	x17, [x16, #3608]
  4017e8:	add	x16, x16, #0xe18
  4017ec:	br	x17

00000000004017f0 <__gmon_start__@plt>:
  4017f0:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  4017f4:	ldr	x17, [x16, #3616]
  4017f8:	add	x16, x16, #0xe20
  4017fc:	br	x17

0000000000401800 <ask_password_agent_close@plt>:
  401800:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401804:	ldr	x17, [x16, #3624]
  401808:	add	x16, x16, #0xe28
  40180c:	br	x17

0000000000401810 <polkit_agent_close@plt>:
  401810:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401814:	ldr	x17, [x16, #3632]
  401818:	add	x16, x16, #0xe30
  40181c:	br	x17

0000000000401820 <pager_close@plt>:
  401820:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401824:	ldr	x17, [x16, #3640]
  401828:	add	x16, x16, #0xe38
  40182c:	br	x17

0000000000401830 <mac_selinux_finish@plt>:
  401830:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401834:	ldr	x17, [x16, #3648]
  401838:	add	x16, x16, #0xe40
  40183c:	br	x17

0000000000401840 <log_setup_service@plt>:
  401840:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401844:	ldr	x17, [x16, #3656]
  401848:	add	x16, x16, #0xe48
  40184c:	br	x17

0000000000401850 <log_get_max_level_realm@plt>:
  401850:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401854:	ldr	x17, [x16, #3664]
  401858:	add	x16, x16, #0xe50
  40185c:	br	x17

0000000000401860 <log_internal_realm@plt>:
  401860:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401864:	ldr	x17, [x16, #3672]
  401868:	add	x16, x16, #0xe58
  40186c:	br	x17

0000000000401870 <abs@plt>:
  401870:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401874:	ldr	x17, [x16, #3680]
  401878:	add	x16, x16, #0xe60
  40187c:	br	x17

0000000000401880 <umask@plt>:
  401880:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401884:	ldr	x17, [x16, #3688]
  401888:	add	x16, x16, #0xe68
  40188c:	br	x17

0000000000401890 <proc_cmdline_parse@plt>:
  401890:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401894:	ldr	x17, [x16, #3696]
  401898:	add	x16, x16, #0xe70
  40189c:	br	x17

00000000004018a0 <strdup@plt>:
  4018a0:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  4018a4:	ldr	x17, [x16, #3704]
  4018a8:	add	x16, x16, #0xe78
  4018ac:	br	x17

00000000004018b0 <log_oom_internal@plt>:
  4018b0:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  4018b4:	ldr	x17, [x16, #3712]
  4018b8:	add	x16, x16, #0xe80
  4018bc:	br	x17

00000000004018c0 <__errno_location@plt>:
  4018c0:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  4018c4:	ldr	x17, [x16, #3720]
  4018c8:	add	x16, x16, #0xe88
  4018cc:	br	x17

00000000004018d0 <sd_device_new_from_devnum@plt>:
  4018d0:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  4018d4:	ldr	x17, [x16, #3728]
  4018d8:	add	x16, x16, #0xe90
  4018dc:	br	x17

00000000004018e0 <gnu_dev_major@plt>:
  4018e0:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  4018e4:	ldr	x17, [x16, #3736]
  4018e8:	add	x16, x16, #0xe98
  4018ec:	br	x17

00000000004018f0 <utimensat@plt>:
  4018f0:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  4018f4:	ldr	x17, [x16, #3744]
  4018f8:	add	x16, x16, #0xea0
  4018fc:	br	x17

0000000000401900 <sd_device_get_devname@plt>:
  401900:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401904:	ldr	x17, [x16, #3752]
  401908:	add	x16, x16, #0xea8
  40190c:	br	x17

0000000000401910 <sd_device_get_sysname@plt>:
  401910:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401914:	ldr	x17, [x16, #3760]
  401918:	add	x16, x16, #0xeb0
  40191c:	br	x17

0000000000401920 <log_object_internal@plt>:
  401920:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401924:	ldr	x17, [x16, #3768]
  401928:	add	x16, x16, #0xeb8
  40192c:	br	x17

0000000000401930 <sd_device_get_property_value@plt>:
  401930:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401934:	ldr	x17, [x16, #3776]
  401938:	add	x16, x16, #0xec0
  40193c:	br	x17

0000000000401940 <fsck_exists@plt>:
  401940:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401944:	ldr	x17, [x16, #3784]
  401948:	add	x16, x16, #0xec8
  40194c:	br	x17

0000000000401950 <fopen64@plt>:
  401950:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401954:	ldr	x17, [x16, #3792]
  401958:	add	x16, x16, #0xed0
  40195c:	br	x17

0000000000401960 <pipe@plt>:
  401960:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401964:	ldr	x17, [x16, #3800]
  401968:	add	x16, x16, #0xed8
  40196c:	br	x17

0000000000401970 <safe_close@plt>:
  401970:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401974:	ldr	x17, [x16, #3808]
  401978:	add	x16, x16, #0xee0
  40197c:	br	x17

0000000000401980 <snprintf@plt>:
  401980:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401984:	ldr	x17, [x16, #3816]
  401988:	add	x16, x16, #0xee8
  40198c:	br	x17

0000000000401990 <log_assert_failed_realm@plt>:
  401990:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401994:	ldr	x17, [x16, #3824]
  401998:	add	x16, x16, #0xef0
  40199c:	br	x17

00000000004019a0 <rlimit_nofile_safe@plt>:
  4019a0:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  4019a4:	ldr	x17, [x16, #3832]
  4019a8:	add	x16, x16, #0xef8
  4019ac:	br	x17

00000000004019b0 <execv@plt>:
  4019b0:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  4019b4:	ldr	x17, [x16, #3840]
  4019b8:	add	x16, x16, #0xf00
  4019bc:	br	x17

00000000004019c0 <_exit@plt>:
  4019c0:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  4019c4:	ldr	x17, [x16, #3848]
  4019c8:	add	x16, x16, #0xf08
  4019cc:	br	x17

00000000004019d0 <wait_for_terminate_and_check@plt>:
  4019d0:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  4019d4:	ldr	x17, [x16, #3856]
  4019d8:	add	x16, x16, #0xf10
  4019dc:	br	x17

00000000004019e0 <touch@plt>:
  4019e0:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  4019e4:	ldr	x17, [x16, #3864]
  4019e8:	add	x16, x16, #0xf18
  4019ec:	br	x17

00000000004019f0 <safe_close_pair@plt>:
  4019f0:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  4019f4:	ldr	x17, [x16, #3872]
  4019f8:	add	x16, x16, #0xf20
  4019fc:	br	x17

0000000000401a00 <sd_device_unref@plt>:
  401a00:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401a04:	ldr	x17, [x16, #3880]
  401a08:	add	x16, x16, #0xf28
  401a0c:	br	x17

0000000000401a10 <free@plt>:
  401a10:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401a14:	ldr	x17, [x16, #3888]
  401a18:	add	x16, x16, #0xf30
  401a1c:	br	x17

0000000000401a20 <safe_fclose@plt>:
  401a20:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401a24:	ldr	x17, [x16, #3896]
  401a28:	add	x16, x16, #0xf38
  401a2c:	br	x17

0000000000401a30 <strcmp@plt>:
  401a30:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401a34:	ldr	x17, [x16, #3904]
  401a38:	add	x16, x16, #0xf40
  401a3c:	br	x17

0000000000401a40 <parse_boolean@plt>:
  401a40:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401a44:	ldr	x17, [x16, #3912]
  401a48:	add	x16, x16, #0xf48
  401a4c:	br	x17

0000000000401a50 <access@plt>:
  401a50:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401a54:	ldr	x17, [x16, #3920]
  401a58:	add	x16, x16, #0xf50
  401a5c:	br	x17

0000000000401a60 <safe_fork_full@plt>:
  401a60:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401a64:	ldr	x17, [x16, #3928]
  401a68:	add	x16, x16, #0xf58
  401a6c:	br	x17

0000000000401a70 <socket@plt>:
  401a70:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401a74:	ldr	x17, [x16, #3936]
  401a78:	add	x16, x16, #0xf60
  401a7c:	br	x17

0000000000401a80 <strnlen@plt>:
  401a80:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401a84:	ldr	x17, [x16, #3944]
  401a88:	add	x16, x16, #0xf68
  401a8c:	br	x17

0000000000401a90 <connect@plt>:
  401a90:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401a94:	ldr	x17, [x16, #3952]
  401a98:	add	x16, x16, #0xf70
  401a9c:	br	x17

0000000000401aa0 <fdopen@plt>:
  401aa0:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401aa4:	ldr	x17, [x16, #3960]
  401aa8:	add	x16, x16, #0xf78
  401aac:	br	x17

0000000000401ab0 <__isoc99_fscanf@plt>:
  401ab0:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401ab4:	ldr	x17, [x16, #3968]
  401ab8:	add	x16, x16, #0xf80
  401abc:	br	x17

0000000000401ac0 <ferror@plt>:
  401ac0:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401ac4:	ldr	x17, [x16, #3976]
  401ac8:	add	x16, x16, #0xf88
  401acc:	br	x17

0000000000401ad0 <feof@plt>:
  401ad0:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401ad4:	ldr	x17, [x16, #3984]
  401ad8:	add	x16, x16, #0xf90
  401adc:	br	x17

0000000000401ae0 <fileno@plt>:
  401ae0:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401ae4:	ldr	x17, [x16, #3992]
  401ae8:	add	x16, x16, #0xf98
  401aec:	br	x17

0000000000401af0 <flock@plt>:
  401af0:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401af4:	ldr	x17, [x16, #4000]
  401af8:	add	x16, x16, #0xfa0
  401afc:	br	x17

0000000000401b00 <now@plt>:
  401b00:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401b04:	ldr	x17, [x16, #4008]
  401b08:	add	x16, x16, #0xfa8
  401b0c:	br	x17

0000000000401b10 <fprintf@plt>:
  401b10:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401b14:	ldr	x17, [x16, #4016]
  401b18:	add	x16, x16, #0xfb0
  401b1c:	br	x17

0000000000401b20 <fflush@plt>:
  401b20:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401b24:	ldr	x17, [x16, #4024]
  401b28:	add	x16, x16, #0xfb8
  401b2c:	br	x17

0000000000401b30 <fputc@plt>:
  401b30:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401b34:	ldr	x17, [x16, #4032]
  401b38:	add	x16, x16, #0xfc0
  401b3c:	br	x17

0000000000401b40 <bus_connect_system_systemd@plt>:
  401b40:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401b44:	ldr	x17, [x16, #4040]
  401b48:	add	x16, x16, #0xfc8
  401b4c:	br	x17

0000000000401b50 <sd_bus_call_method@plt>:
  401b50:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401b54:	ldr	x17, [x16, #4048]
  401b58:	add	x16, x16, #0xfd0
  401b5c:	br	x17

0000000000401b60 <sd_bus_error_has_name@plt>:
  401b60:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401b64:	ldr	x17, [x16, #4056]
  401b68:	add	x16, x16, #0xfd8
  401b6c:	br	x17

0000000000401b70 <bus_error_message@plt>:
  401b70:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401b74:	ldr	x17, [x16, #4064]
  401b78:	add	x16, x16, #0xfe0
  401b7c:	br	x17

0000000000401b80 <sd_bus_error_free@plt>:
  401b80:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401b84:	ldr	x17, [x16, #4072]
  401b88:	add	x16, x16, #0xfe8
  401b8c:	br	x17

0000000000401b90 <sd_bus_flush_close_unref@plt>:
  401b90:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401b94:	ldr	x17, [x16, #4080]
  401b98:	add	x16, x16, #0xff0
  401b9c:	br	x17

0000000000401ba0 <__xstat64@plt>:
  401ba0:	adrp	x16, 41f000 <__FRAME_END__+0x1a238>
  401ba4:	ldr	x17, [x16, #4088]
  401ba8:	add	x16, x16, #0xff8
  401bac:	br	x17

Disassembly of section .text:

0000000000401bb0 <_start>:
  401bb0:	mov	x29, #0x0                   	// #0
  401bb4:	mov	x30, #0x0                   	// #0
  401bb8:	mov	x5, x0
  401bbc:	ldr	x1, [sp]
  401bc0:	add	x2, sp, #0x8
  401bc4:	mov	x6, sp
  401bc8:	movz	x0, #0x0, lsl #48
  401bcc:	movk	x0, #0x0, lsl #32
  401bd0:	movk	x0, #0x40, lsl #16
  401bd4:	movk	x0, #0x1d78
  401bd8:	movz	x3, #0x0, lsl #48
  401bdc:	movk	x3, #0x0, lsl #32
  401be0:	movk	x3, #0x40, lsl #16
  401be4:	movk	x3, #0x4278
  401be8:	movz	x4, #0x0, lsl #48
  401bec:	movk	x4, #0x0, lsl #32
  401bf0:	movk	x4, #0x40, lsl #16
  401bf4:	movk	x4, #0x42f8
  401bf8:	bl	4017d0 <__libc_start_main@plt>
  401bfc:	bl	4017e0 <abort@plt>

0000000000401c00 <call_weak_fn>:
  401c00:	adrp	x0, 41f000 <__FRAME_END__+0x1a238>
  401c04:	ldr	x0, [x0, #3552]
  401c08:	cbz	x0, 401c10 <call_weak_fn+0x10>
  401c0c:	b	4017f0 <__gmon_start__@plt>
  401c10:	ret

0000000000401c14 <deregister_tm_clones>:
  401c14:	stp	x29, x30, [sp, #-32]!
  401c18:	mov	x29, sp
  401c1c:	adrp	x0, 420000 <arg_repair>
  401c20:	add	x0, x0, #0x0
  401c24:	str	x0, [sp, #24]
  401c28:	ldr	x0, [sp, #24]
  401c2c:	str	x0, [sp, #24]
  401c30:	ldr	x1, [sp, #24]
  401c34:	adrp	x0, 420000 <arg_repair>
  401c38:	add	x0, x0, #0x0
  401c3c:	cmp	x1, x0
  401c40:	b.eq	401c7c <deregister_tm_clones+0x68>  // b.none
  401c44:	adrp	x0, 404000 <start_target+0x2ac>
  401c48:	add	x0, x0, #0x320
  401c4c:	ldr	x0, [x0]
  401c50:	str	x0, [sp, #16]
  401c54:	ldr	x0, [sp, #16]
  401c58:	str	x0, [sp, #16]
  401c5c:	ldr	x0, [sp, #16]
  401c60:	cmp	x0, #0x0
  401c64:	b.eq	401c80 <deregister_tm_clones+0x6c>  // b.none
  401c68:	ldr	x1, [sp, #16]
  401c6c:	adrp	x0, 420000 <arg_repair>
  401c70:	add	x0, x0, #0x0
  401c74:	blr	x1
  401c78:	b	401c80 <deregister_tm_clones+0x6c>
  401c7c:	nop
  401c80:	ldp	x29, x30, [sp], #32
  401c84:	ret

0000000000401c88 <register_tm_clones>:
  401c88:	stp	x29, x30, [sp, #-48]!
  401c8c:	mov	x29, sp
  401c90:	adrp	x0, 420000 <arg_repair>
  401c94:	add	x0, x0, #0x0
  401c98:	str	x0, [sp, #40]
  401c9c:	ldr	x0, [sp, #40]
  401ca0:	str	x0, [sp, #40]
  401ca4:	ldr	x1, [sp, #40]
  401ca8:	adrp	x0, 420000 <arg_repair>
  401cac:	add	x0, x0, #0x0
  401cb0:	sub	x0, x1, x0
  401cb4:	asr	x0, x0, #3
  401cb8:	lsr	x1, x0, #63
  401cbc:	add	x0, x1, x0
  401cc0:	asr	x0, x0, #1
  401cc4:	str	x0, [sp, #32]
  401cc8:	ldr	x0, [sp, #32]
  401ccc:	cmp	x0, #0x0
  401cd0:	b.eq	401d10 <register_tm_clones+0x88>  // b.none
  401cd4:	adrp	x0, 404000 <start_target+0x2ac>
  401cd8:	add	x0, x0, #0x328
  401cdc:	ldr	x0, [x0]
  401ce0:	str	x0, [sp, #24]
  401ce4:	ldr	x0, [sp, #24]
  401ce8:	str	x0, [sp, #24]
  401cec:	ldr	x0, [sp, #24]
  401cf0:	cmp	x0, #0x0
  401cf4:	b.eq	401d14 <register_tm_clones+0x8c>  // b.none
  401cf8:	ldr	x2, [sp, #24]
  401cfc:	ldr	x1, [sp, #32]
  401d00:	adrp	x0, 420000 <arg_repair>
  401d04:	add	x0, x0, #0x0
  401d08:	blr	x2
  401d0c:	b	401d14 <register_tm_clones+0x8c>
  401d10:	nop
  401d14:	ldp	x29, x30, [sp], #48
  401d18:	ret

0000000000401d1c <__do_global_dtors_aux>:
  401d1c:	stp	x29, x30, [sp, #-16]!
  401d20:	mov	x29, sp
  401d24:	adrp	x0, 420000 <arg_repair>
  401d28:	add	x0, x0, #0x8
  401d2c:	ldrb	w0, [x0]
  401d30:	and	x0, x0, #0xff
  401d34:	cmp	x0, #0x0
  401d38:	b.ne	401d54 <__do_global_dtors_aux+0x38>  // b.any
  401d3c:	bl	401c14 <deregister_tm_clones>
  401d40:	adrp	x0, 420000 <arg_repair>
  401d44:	add	x0, x0, #0x8
  401d48:	mov	w1, #0x1                   	// #1
  401d4c:	strb	w1, [x0]
  401d50:	b	401d58 <__do_global_dtors_aux+0x3c>
  401d54:	nop
  401d58:	ldp	x29, x30, [sp], #16
  401d5c:	ret

0000000000401d60 <frame_dummy>:
  401d60:	stp	x29, x30, [sp, #-16]!
  401d64:	mov	x29, sp
  401d68:	bl	401c88 <register_tm_clones>
  401d6c:	nop
  401d70:	ldp	x29, x30, [sp], #16
  401d74:	ret

0000000000401d78 <main>:
  401d78:	sub	sp, sp, #0x30
  401d7c:	stp	x29, x30, [sp, #32]
  401d80:	add	x29, sp, #0x20
  401d84:	stur	wzr, [x29, #-4]
  401d88:	stur	w0, [x29, #-8]
  401d8c:	str	x1, [sp, #16]
  401d90:	ldur	w0, [x29, #-8]
  401d94:	ldr	x1, [sp, #16]
  401d98:	bl	401df8 <save_argc_argv>
  401d9c:	ldur	w0, [x29, #-8]
  401da0:	ldr	x1, [sp, #16]
  401da4:	bl	401e2c <run>
  401da8:	str	w0, [sp, #12]
  401dac:	bl	401800 <ask_password_agent_close@plt>
  401db0:	bl	401810 <polkit_agent_close@plt>
  401db4:	bl	401820 <pager_close@plt>
  401db8:	bl	401830 <mac_selinux_finish@plt>
  401dbc:	bl	402e90 <static_destruct>
  401dc0:	ldr	w8, [sp, #12]
  401dc4:	cmp	w8, #0x0
  401dc8:	cset	w8, ge  // ge = tcont
  401dcc:	tbnz	w8, #0, 401ddc <main+0x64>
  401dd0:	mov	w8, #0x1                   	// #1
  401dd4:	str	w8, [sp, #8]
  401dd8:	b	401de4 <main+0x6c>
  401ddc:	ldr	w8, [sp, #12]
  401de0:	str	w8, [sp, #8]
  401de4:	ldr	w8, [sp, #8]
  401de8:	mov	w0, w8
  401dec:	ldp	x29, x30, [sp, #32]
  401df0:	add	sp, sp, #0x30
  401df4:	ret

0000000000401df8 <save_argc_argv>:
  401df8:	sub	sp, sp, #0x10
  401dfc:	adrp	x8, 420000 <arg_repair>
  401e00:	add	x8, x8, #0x10
  401e04:	adrp	x9, 420000 <arg_repair>
  401e08:	add	x9, x9, #0x18
  401e0c:	str	w0, [sp, #12]
  401e10:	str	x1, [sp]
  401e14:	ldr	w10, [sp, #12]
  401e18:	str	w10, [x8]
  401e1c:	ldr	x8, [sp]
  401e20:	str	x8, [x9]
  401e24:	add	sp, sp, #0x10
  401e28:	ret

0000000000401e2c <run>:
  401e2c:	stp	x29, x30, [sp, #-32]!
  401e30:	str	x28, [sp, #16]
  401e34:	mov	x29, sp
  401e38:	sub	sp, sp, #0x300
  401e3c:	add	x8, sp, #0x120
  401e40:	adrp	x9, 404000 <start_target+0x2ac>
  401e44:	add	x9, x9, #0x3f8
  401e48:	mov	x10, xzr
  401e4c:	adrp	x11, 404000 <start_target+0x2ac>
  401e50:	add	x11, x11, #0x400
  401e54:	add	x11, x11, #0x3
  401e58:	adrp	x12, 404000 <start_target+0x2ac>
  401e5c:	add	x12, x12, #0x413
  401e60:	adrp	x13, 404000 <start_target+0x2ac>
  401e64:	add	x13, x13, #0x56d
  401e68:	stur	w0, [x29, #-8]
  401e6c:	str	x1, [x8, #464]
  401e70:	ldr	x9, [x9]
  401e74:	str	x9, [x8, #456]
  401e78:	str	x10, [x8, #448]
  401e7c:	str	x10, [x8, #440]
  401e80:	str	x10, [x8, #432]
  401e84:	str	x8, [sp, #112]
  401e88:	str	x11, [sp, #104]
  401e8c:	str	x12, [sp, #96]
  401e90:	str	x13, [sp, #88]
  401e94:	bl	401840 <log_setup_service@plt>
  401e98:	ldur	w14, [x29, #-8]
  401e9c:	cmp	w14, #0x2
  401ea0:	b.le	401f2c <run+0x100>
  401ea4:	mov	w8, #0x3                   	// #3
  401ea8:	stur	w8, [x29, #-216]
  401eac:	stur	wzr, [x29, #-220]
  401eb0:	stur	wzr, [x29, #-224]
  401eb4:	ldur	w0, [x29, #-224]
  401eb8:	bl	401850 <log_get_max_level_realm@plt>
  401ebc:	ldur	w8, [x29, #-216]
  401ec0:	and	w8, w8, #0x7
  401ec4:	cmp	w0, w8
  401ec8:	b.lt	401efc <run+0xd0>  // b.tstop
  401ecc:	ldur	w8, [x29, #-224]
  401ed0:	ldur	w9, [x29, #-216]
  401ed4:	orr	w0, w9, w8, lsl #10
  401ed8:	ldur	w1, [x29, #-220]
  401edc:	ldr	x2, [sp, #104]
  401ee0:	mov	w3, #0x106                 	// #262
  401ee4:	ldr	x4, [sp, #96]
  401ee8:	adrp	x5, 404000 <start_target+0x2ac>
  401eec:	add	x5, x5, #0x417
  401ef0:	bl	401860 <log_internal_realm@plt>
  401ef4:	str	w0, [sp, #84]
  401ef8:	b	401f10 <run+0xe4>
  401efc:	ldur	w0, [x29, #-220]
  401f00:	bl	401870 <abs@plt>
  401f04:	mov	w8, wzr
  401f08:	subs	w8, w8, w0, uxtb
  401f0c:	str	w8, [sp, #84]
  401f10:	ldr	w8, [sp, #84]
  401f14:	stur	w8, [x29, #-228]
  401f18:	mov	w8, #0xffffffea            	// #-22
  401f1c:	stur	w8, [x29, #-4]
  401f20:	mov	w8, #0x1                   	// #1
  401f24:	stur	w8, [x29, #-232]
  401f28:	b	402e5c <run+0x1030>
  401f2c:	mov	w0, #0x12                  	// #18
  401f30:	bl	401880 <umask@plt>
  401f34:	adrp	x8, 402000 <run+0x1d4>
  401f38:	add	x8, x8, #0xfb8
  401f3c:	mov	x0, x8
  401f40:	mov	x8, xzr
  401f44:	mov	x1, x8
  401f48:	mov	w2, #0x1                   	// #1
  401f4c:	bl	401890 <proc_cmdline_parse@plt>
  401f50:	stur	w0, [x29, #-204]
  401f54:	ldur	w9, [x29, #-204]
  401f58:	cmp	w9, #0x0
  401f5c:	cset	w9, ge  // ge = tcont
  401f60:	tbnz	w9, #0, 401fdc <run+0x1b0>
  401f64:	mov	w8, #0x4                   	// #4
  401f68:	stur	w8, [x29, #-236]
  401f6c:	ldur	w8, [x29, #-204]
  401f70:	stur	w8, [x29, #-240]
  401f74:	stur	wzr, [x29, #-244]
  401f78:	ldur	w0, [x29, #-244]
  401f7c:	bl	401850 <log_get_max_level_realm@plt>
  401f80:	ldur	w8, [x29, #-236]
  401f84:	and	w8, w8, #0x7
  401f88:	cmp	w0, w8
  401f8c:	b.lt	401fc0 <run+0x194>  // b.tstop
  401f90:	ldur	w8, [x29, #-244]
  401f94:	ldur	w9, [x29, #-236]
  401f98:	orr	w0, w9, w8, lsl #10
  401f9c:	ldur	w1, [x29, #-240]
  401fa0:	ldr	x2, [sp, #104]
  401fa4:	mov	w3, #0x10e                 	// #270
  401fa8:	ldr	x4, [sp, #96]
  401fac:	adrp	x5, 404000 <start_target+0x2ac>
  401fb0:	add	x5, x5, #0x441
  401fb4:	bl	401860 <log_internal_realm@plt>
  401fb8:	str	w0, [sp, #80]
  401fbc:	b	401fd4 <run+0x1a8>
  401fc0:	ldur	w0, [x29, #-240]
  401fc4:	bl	401870 <abs@plt>
  401fc8:	mov	w8, wzr
  401fcc:	subs	w8, w8, w0, uxtb
  401fd0:	str	w8, [sp, #80]
  401fd4:	ldr	w8, [sp, #80]
  401fd8:	stur	w8, [x29, #-248]
  401fdc:	bl	4033f0 <test_files>
  401fe0:	adrp	x8, 420000 <arg_repair>
  401fe4:	add	x8, x8, #0x9
  401fe8:	ldrb	w9, [x8]
  401fec:	tbnz	w9, #0, 402014 <run+0x1e8>
  401ff0:	adrp	x8, 420000 <arg_repair>
  401ff4:	add	x8, x8, #0xa
  401ff8:	ldrb	w9, [x8]
  401ffc:	tbnz	w9, #0, 402004 <run+0x1d8>
  402000:	b	402014 <run+0x1e8>
  402004:	stur	wzr, [x29, #-4]
  402008:	mov	w8, #0x1                   	// #1
  40200c:	stur	w8, [x29, #-232]
  402010:	b	402e5c <run+0x1030>
  402014:	ldur	w8, [x29, #-8]
  402018:	cmp	w8, #0x1
  40201c:	b.le	40228c <run+0x460>
  402020:	ldr	x8, [sp, #112]
  402024:	ldr	x9, [x8, #464]
  402028:	ldr	x0, [x9, #8]
  40202c:	bl	4018a0 <strdup@plt>
  402030:	ldr	x8, [sp, #112]
  402034:	str	x0, [x8, #440]
  402038:	ldr	x9, [x8, #440]
  40203c:	cbnz	x9, 402068 <run+0x23c>
  402040:	mov	w8, wzr
  402044:	mov	w0, w8
  402048:	ldr	x1, [sp, #104]
  40204c:	mov	w2, #0x118                 	// #280
  402050:	ldr	x3, [sp, #96]
  402054:	bl	4018b0 <log_oom_internal@plt>
  402058:	stur	w0, [x29, #-4]
  40205c:	mov	w8, #0x1                   	// #1
  402060:	stur	w8, [x29, #-232]
  402064:	b	402e5c <run+0x1030>
  402068:	ldr	x8, [sp, #112]
  40206c:	ldr	x9, [x8, #440]
  402070:	str	x9, [x8, #424]
  402074:	ldr	x0, [x8, #424]
  402078:	sub	x1, x29, #0xc8
  40207c:	bl	404300 <stat64>
  402080:	cmp	w0, #0x0
  402084:	cset	w10, ge  // ge = tcont
  402088:	tbnz	w10, #0, 402124 <run+0x2f8>
  40208c:	mov	w8, #0x3                   	// #3
  402090:	stur	w8, [x29, #-252]
  402094:	bl	4018c0 <__errno_location@plt>
  402098:	ldr	w8, [x0]
  40209c:	stur	w8, [x29, #-256]
  4020a0:	str	wzr, [sp, #508]
  4020a4:	ldr	w0, [sp, #508]
  4020a8:	bl	401850 <log_get_max_level_realm@plt>
  4020ac:	ldur	w8, [x29, #-252]
  4020b0:	and	w8, w8, #0x7
  4020b4:	cmp	w0, w8
  4020b8:	b.lt	4020f4 <run+0x2c8>  // b.tstop
  4020bc:	ldr	w8, [sp, #508]
  4020c0:	ldur	w9, [x29, #-252]
  4020c4:	orr	w0, w9, w8, lsl #10
  4020c8:	ldur	w1, [x29, #-256]
  4020cc:	ldr	x10, [sp, #112]
  4020d0:	ldr	x6, [x10, #424]
  4020d4:	ldr	x2, [sp, #104]
  4020d8:	mov	w3, #0x11d                 	// #285
  4020dc:	ldr	x4, [sp, #96]
  4020e0:	adrp	x5, 404000 <start_target+0x2ac>
  4020e4:	add	x5, x5, #0x473
  4020e8:	bl	401860 <log_internal_realm@plt>
  4020ec:	str	w0, [sp, #76]
  4020f0:	b	402108 <run+0x2dc>
  4020f4:	ldur	w0, [x29, #-256]
  4020f8:	bl	401870 <abs@plt>
  4020fc:	mov	w8, wzr
  402100:	subs	w8, w8, w0, uxtb
  402104:	str	w8, [sp, #76]
  402108:	ldr	w8, [sp, #76]
  40210c:	str	w8, [sp, #504]
  402110:	ldr	w8, [sp, #504]
  402114:	stur	w8, [x29, #-4]
  402118:	mov	w8, #0x1                   	// #1
  40211c:	stur	w8, [x29, #-232]
  402120:	b	402e5c <run+0x1030>
  402124:	ldur	w8, [x29, #-184]
  402128:	and	w8, w8, #0xf000
  40212c:	cmp	w8, #0x6, lsl #12
  402130:	b.eq	4021c4 <run+0x398>  // b.none
  402134:	mov	w8, #0x3                   	// #3
  402138:	str	w8, [sp, #500]
  40213c:	str	wzr, [sp, #496]
  402140:	str	wzr, [sp, #492]
  402144:	ldr	w0, [sp, #492]
  402148:	bl	401850 <log_get_max_level_realm@plt>
  40214c:	ldr	w8, [sp, #500]
  402150:	and	w8, w8, #0x7
  402154:	cmp	w0, w8
  402158:	b.lt	402194 <run+0x368>  // b.tstop
  40215c:	ldr	w8, [sp, #492]
  402160:	ldr	w9, [sp, #500]
  402164:	orr	w0, w9, w8, lsl #10
  402168:	ldr	w1, [sp, #496]
  40216c:	ldr	x10, [sp, #112]
  402170:	ldr	x6, [x10, #424]
  402174:	ldr	x2, [sp, #104]
  402178:	mov	w3, #0x120                 	// #288
  40217c:	ldr	x4, [sp, #96]
  402180:	adrp	x5, 404000 <start_target+0x2ac>
  402184:	add	x5, x5, #0x489
  402188:	bl	401860 <log_internal_realm@plt>
  40218c:	str	w0, [sp, #72]
  402190:	b	4021a8 <run+0x37c>
  402194:	ldr	w0, [sp, #496]
  402198:	bl	401870 <abs@plt>
  40219c:	mov	w8, wzr
  4021a0:	subs	w8, w8, w0, uxtb
  4021a4:	str	w8, [sp, #72]
  4021a8:	ldr	w8, [sp, #72]
  4021ac:	str	w8, [sp, #488]
  4021b0:	mov	w8, #0xffffffea            	// #-22
  4021b4:	stur	w8, [x29, #-4]
  4021b8:	mov	w8, #0x1                   	// #1
  4021bc:	stur	w8, [x29, #-232]
  4021c0:	b	402e5c <run+0x1030>
  4021c4:	ldr	x8, [sp, #112]
  4021c8:	ldr	x2, [x8, #312]
  4021cc:	sub	x0, x29, #0x20
  4021d0:	mov	w1, #0x62                  	// #98
  4021d4:	bl	4018d0 <sd_device_new_from_devnum@plt>
  4021d8:	stur	w0, [x29, #-204]
  4021dc:	ldur	w9, [x29, #-204]
  4021e0:	cmp	w9, #0x0
  4021e4:	cset	w9, ge  // ge = tcont
  4021e8:	tbnz	w9, #0, 402280 <run+0x454>
  4021ec:	mov	w8, #0x3                   	// #3
  4021f0:	str	w8, [sp, #484]
  4021f4:	ldur	w8, [x29, #-204]
  4021f8:	str	w8, [sp, #480]
  4021fc:	str	wzr, [sp, #476]
  402200:	ldr	w0, [sp, #476]
  402204:	bl	401850 <log_get_max_level_realm@plt>
  402208:	ldr	w8, [sp, #484]
  40220c:	and	w8, w8, #0x7
  402210:	cmp	w0, w8
  402214:	b.lt	402250 <run+0x424>  // b.tstop
  402218:	ldr	w8, [sp, #476]
  40221c:	ldr	w9, [sp, #484]
  402220:	orr	w0, w9, w8, lsl #10
  402224:	ldr	w1, [sp, #480]
  402228:	ldr	x10, [sp, #112]
  40222c:	ldr	x6, [x10, #424]
  402230:	ldr	x2, [sp, #104]
  402234:	mov	w3, #0x126                 	// #294
  402238:	ldr	x4, [sp, #96]
  40223c:	adrp	x5, 404000 <start_target+0x2ac>
  402240:	add	x5, x5, #0x4a3
  402244:	bl	401860 <log_internal_realm@plt>
  402248:	str	w0, [sp, #68]
  40224c:	b	402264 <run+0x438>
  402250:	ldr	w0, [sp, #480]
  402254:	bl	401870 <abs@plt>
  402258:	mov	w8, wzr
  40225c:	subs	w8, w8, w0, uxtb
  402260:	str	w8, [sp, #68]
  402264:	ldr	w8, [sp, #68]
  402268:	str	w8, [sp, #472]
  40226c:	ldr	w8, [sp, #472]
  402270:	stur	w8, [x29, #-4]
  402274:	mov	w8, #0x1                   	// #1
  402278:	stur	w8, [x29, #-232]
  40227c:	b	402e5c <run+0x1030>
  402280:	mov	w8, #0x0                   	// #0
  402284:	sturb	w8, [x29, #-65]
  402288:	b	402640 <run+0x814>
  40228c:	adrp	x0, 404000 <start_target+0x2ac>
  402290:	add	x0, x0, #0x4c2
  402294:	sub	x1, x29, #0xc8
  402298:	bl	404300 <stat64>
  40229c:	cmp	w0, #0x0
  4022a0:	cset	w8, ge  // ge = tcont
  4022a4:	tbnz	w8, #0, 402338 <run+0x50c>
  4022a8:	mov	w8, #0x3                   	// #3
  4022ac:	str	w8, [sp, #428]
  4022b0:	bl	4018c0 <__errno_location@plt>
  4022b4:	ldr	w8, [x0]
  4022b8:	str	w8, [sp, #424]
  4022bc:	str	wzr, [sp, #420]
  4022c0:	ldr	w0, [sp, #420]
  4022c4:	bl	401850 <log_get_max_level_realm@plt>
  4022c8:	ldr	w8, [sp, #428]
  4022cc:	and	w8, w8, #0x7
  4022d0:	cmp	w0, w8
  4022d4:	b.lt	402308 <run+0x4dc>  // b.tstop
  4022d8:	ldr	w8, [sp, #420]
  4022dc:	ldr	w9, [sp, #428]
  4022e0:	orr	w0, w9, w8, lsl #10
  4022e4:	ldr	w1, [sp, #424]
  4022e8:	ldr	x2, [sp, #104]
  4022ec:	mov	w3, #0x12f                 	// #303
  4022f0:	ldr	x4, [sp, #96]
  4022f4:	adrp	x5, 404000 <start_target+0x2ac>
  4022f8:	add	x5, x5, #0x4c4
  4022fc:	bl	401860 <log_internal_realm@plt>
  402300:	str	w0, [sp, #64]
  402304:	b	40231c <run+0x4f0>
  402308:	ldr	w0, [sp, #424]
  40230c:	bl	401870 <abs@plt>
  402310:	mov	w8, wzr
  402314:	subs	w8, w8, w0, uxtb
  402318:	str	w8, [sp, #64]
  40231c:	ldr	w8, [sp, #64]
  402320:	str	w8, [sp, #416]
  402324:	ldr	w8, [sp, #416]
  402328:	stur	w8, [x29, #-4]
  40232c:	mov	w8, #0x1                   	// #1
  402330:	stur	w8, [x29, #-232]
  402334:	b	402e5c <run+0x1030>
  402338:	ldr	x8, [sp, #112]
  40233c:	ldr	x0, [x8, #280]
  402340:	bl	4018e0 <gnu_dev_major@plt>
  402344:	cbnz	w0, 4023cc <run+0x5a0>
  402348:	mov	w8, #0x7                   	// #7
  40234c:	str	w8, [sp, #412]
  402350:	str	wzr, [sp, #408]
  402354:	str	wzr, [sp, #404]
  402358:	ldr	w0, [sp, #404]
  40235c:	bl	401850 <log_get_max_level_realm@plt>
  402360:	ldr	w8, [sp, #412]
  402364:	and	w8, w8, #0x7
  402368:	cmp	w0, w8
  40236c:	b.lt	4023a0 <run+0x574>  // b.tstop
  402370:	ldr	w8, [sp, #404]
  402374:	ldr	w9, [sp, #412]
  402378:	orr	w0, w9, w8, lsl #10
  40237c:	ldr	w1, [sp, #408]
  402380:	ldr	x2, [sp, #104]
  402384:	mov	w3, #0x133                 	// #307
  402388:	ldr	x4, [sp, #96]
  40238c:	adrp	x5, 404000 <start_target+0x2ac>
  402390:	add	x5, x5, #0x4ec
  402394:	bl	401860 <log_internal_realm@plt>
  402398:	str	w0, [sp, #60]
  40239c:	b	4023b4 <run+0x588>
  4023a0:	ldr	w0, [sp, #408]
  4023a4:	bl	401870 <abs@plt>
  4023a8:	mov	w8, wzr
  4023ac:	subs	w8, w8, w0, uxtb
  4023b0:	str	w8, [sp, #60]
  4023b4:	ldr	w8, [sp, #60]
  4023b8:	str	w8, [sp, #400]
  4023bc:	stur	wzr, [x29, #-4]
  4023c0:	mov	w8, #0x1                   	// #1
  4023c4:	stur	w8, [x29, #-232]
  4023c8:	b	402e5c <run+0x1030>
  4023cc:	sub	x8, x29, #0xc8
  4023d0:	ldur	q0, [x8, #72]
  4023d4:	add	x2, sp, #0x1b0
  4023d8:	ldr	x9, [sp, #112]
  4023dc:	str	q0, [x9, #144]
  4023e0:	ldur	q0, [x8, #88]
  4023e4:	str	q0, [x9, #160]
  4023e8:	mov	w0, #0xffffff9c            	// #-100
  4023ec:	adrp	x1, 404000 <start_target+0x2ac>
  4023f0:	add	x1, x1, #0x4c2
  4023f4:	mov	w10, wzr
  4023f8:	mov	w3, w10
  4023fc:	bl	4018f0 <utimensat@plt>
  402400:	cbnz	w0, 402488 <run+0x65c>
  402404:	mov	w8, #0x6                   	// #6
  402408:	str	w8, [sp, #396]
  40240c:	str	wzr, [sp, #392]
  402410:	str	wzr, [sp, #388]
  402414:	ldr	w0, [sp, #388]
  402418:	bl	401850 <log_get_max_level_realm@plt>
  40241c:	ldr	w8, [sp, #396]
  402420:	and	w8, w8, #0x7
  402424:	cmp	w0, w8
  402428:	b.lt	40245c <run+0x630>  // b.tstop
  40242c:	ldr	w8, [sp, #388]
  402430:	ldr	w9, [sp, #396]
  402434:	orr	w0, w9, w8, lsl #10
  402438:	ldr	w1, [sp, #392]
  40243c:	ldr	x2, [sp, #104]
  402440:	mov	w3, #0x13c                 	// #316
  402444:	ldr	x4, [sp, #96]
  402448:	adrp	x5, 404000 <start_target+0x2ac>
  40244c:	add	x5, x5, #0x520
  402450:	bl	401860 <log_internal_realm@plt>
  402454:	str	w0, [sp, #56]
  402458:	b	402470 <run+0x644>
  40245c:	ldr	w0, [sp, #392]
  402460:	bl	401870 <abs@plt>
  402464:	mov	w8, wzr
  402468:	subs	w8, w8, w0, uxtb
  40246c:	str	w8, [sp, #56]
  402470:	ldr	w8, [sp, #56]
  402474:	str	w8, [sp, #384]
  402478:	stur	wzr, [x29, #-4]
  40247c:	mov	w8, #0x1                   	// #1
  402480:	stur	w8, [x29, #-232]
  402484:	b	402e5c <run+0x1030>
  402488:	ldr	x8, [sp, #112]
  40248c:	ldr	x2, [x8, #280]
  402490:	sub	x0, x29, #0x20
  402494:	mov	w1, #0x62                  	// #98
  402498:	bl	4018d0 <sd_device_new_from_devnum@plt>
  40249c:	stur	w0, [x29, #-204]
  4024a0:	ldur	w9, [x29, #-204]
  4024a4:	cmp	w9, #0x0
  4024a8:	cset	w9, ge  // ge = tcont
  4024ac:	tbnz	w9, #0, 40253c <run+0x710>
  4024b0:	mov	w8, #0x3                   	// #3
  4024b4:	str	w8, [sp, #380]
  4024b8:	ldur	w8, [x29, #-204]
  4024bc:	str	w8, [sp, #376]
  4024c0:	str	wzr, [sp, #372]
  4024c4:	ldr	w0, [sp, #372]
  4024c8:	bl	401850 <log_get_max_level_realm@plt>
  4024cc:	ldr	w8, [sp, #380]
  4024d0:	and	w8, w8, #0x7
  4024d4:	cmp	w0, w8
  4024d8:	b.lt	40250c <run+0x6e0>  // b.tstop
  4024dc:	ldr	w8, [sp, #372]
  4024e0:	ldr	w9, [sp, #380]
  4024e4:	orr	w0, w9, w8, lsl #10
  4024e8:	ldr	w1, [sp, #376]
  4024ec:	ldr	x2, [sp, #104]
  4024f0:	mov	w3, #0x142                 	// #322
  4024f4:	ldr	x4, [sp, #96]
  4024f8:	adrp	x5, 404000 <start_target+0x2ac>
  4024fc:	add	x5, x5, #0x54c
  402500:	bl	401860 <log_internal_realm@plt>
  402504:	str	w0, [sp, #52]
  402508:	b	402520 <run+0x6f4>
  40250c:	ldr	w0, [sp, #376]
  402510:	bl	401870 <abs@plt>
  402514:	mov	w8, wzr
  402518:	subs	w8, w8, w0, uxtb
  40251c:	str	w8, [sp, #52]
  402520:	ldr	w8, [sp, #52]
  402524:	str	w8, [sp, #368]
  402528:	ldr	w8, [sp, #368]
  40252c:	stur	w8, [x29, #-4]
  402530:	mov	w8, #0x1                   	// #1
  402534:	stur	w8, [x29, #-232]
  402538:	b	402e5c <run+0x1030>
  40253c:	ldr	x8, [sp, #112]
  402540:	ldr	x0, [x8, #448]
  402544:	sub	x1, x29, #0x38
  402548:	bl	401900 <sd_device_get_devname@plt>
  40254c:	stur	w0, [x29, #-204]
  402550:	ldur	w9, [x29, #-204]
  402554:	cmp	w9, #0x0
  402558:	cset	w9, ge  // ge = tcont
  40255c:	tbnz	w9, #0, 402638 <run+0x80c>
  402560:	mov	x8, xzr
  402564:	ldr	x9, [sp, #112]
  402568:	str	x8, [x9, #72]
  40256c:	ldr	x8, [x9, #448]
  402570:	str	x8, [x9, #64]
  402574:	mov	w10, #0x3                   	// #3
  402578:	str	w10, [sp, #348]
  40257c:	ldur	w10, [x29, #-204]
  402580:	str	w10, [sp, #344]
  402584:	ldr	x8, [x9, #64]
  402588:	cbz	x8, 4025d0 <run+0x7a4>
  40258c:	mov	w8, wzr
  402590:	mov	w0, w8
  402594:	bl	401850 <log_get_max_level_realm@plt>
  402598:	ldr	w8, [sp, #348]
  40259c:	cmp	w0, w8
  4025a0:	cset	w8, ge  // ge = tcont
  4025a4:	mov	w9, #0x1                   	// #1
  4025a8:	eor	w8, w8, #0x1
  4025ac:	eor	w8, w8, w9
  4025b0:	and	w8, w8, #0x1
  4025b4:	mov	w1, w8
  4025b8:	sxtw	x10, w1
  4025bc:	cbz	x10, 4025d0 <run+0x7a4>
  4025c0:	ldr	x8, [sp, #112]
  4025c4:	ldr	x0, [x8, #64]
  4025c8:	add	x1, sp, #0x168
  4025cc:	bl	401910 <sd_device_get_sysname@plt>
  4025d0:	ldr	w0, [sp, #348]
  4025d4:	ldr	w1, [sp, #344]
  4025d8:	ldr	x8, [sp, #112]
  4025dc:	ldr	x9, [x8, #72]
  4025e0:	mov	x10, xzr
  4025e4:	cmp	x9, #0x0
  4025e8:	ldr	x9, [sp, #88]
  4025ec:	csel	x5, x9, x10, ne  // ne = any
  4025f0:	ldr	x6, [x8, #72]
  4025f4:	ldr	x2, [sp, #104]
  4025f8:	mov	w3, #0x146                 	// #326
  4025fc:	ldr	x4, [sp, #96]
  402600:	mov	x7, x10
  402604:	mov	x11, sp
  402608:	str	x10, [x11]
  40260c:	mov	x10, sp
  402610:	adrp	x11, 404000 <start_target+0x2ac>
  402614:	add	x11, x11, #0x575
  402618:	str	x11, [x10, #8]
  40261c:	bl	401920 <log_object_internal@plt>
  402620:	str	w0, [sp, #340]
  402624:	ldr	w12, [sp, #340]
  402628:	stur	w12, [x29, #-4]
  40262c:	mov	w12, #0x1                   	// #1
  402630:	stur	w12, [x29, #-232]
  402634:	b	402e5c <run+0x1030>
  402638:	mov	w8, #0x1                   	// #1
  40263c:	sturb	w8, [x29, #-65]
  402640:	ldr	x8, [sp, #112]
  402644:	ldr	x0, [x8, #448]
  402648:	adrp	x1, 404000 <start_target+0x2ac>
  40264c:	add	x1, x1, #0x5a8
  402650:	sub	x2, x29, #0x40
  402654:	bl	401930 <sd_device_get_property_value@plt>
  402658:	cmp	w0, #0x0
  40265c:	cset	w9, lt  // lt = tstop
  402660:	tbnz	w9, #0, 40283c <run+0xa10>
  402664:	ldr	x8, [sp, #112]
  402668:	ldr	x0, [x8, #416]
  40266c:	bl	401940 <fsck_exists@plt>
  402670:	stur	w0, [x29, #-204]
  402674:	ldur	w9, [x29, #-204]
  402678:	cmp	w9, #0x0
  40267c:	cset	w9, ge  // ge = tcont
  402680:	tbnz	w9, #0, 402758 <run+0x92c>
  402684:	mov	x8, xzr
  402688:	ldr	x9, [sp, #112]
  40268c:	str	x8, [x9, #40]
  402690:	ldr	x8, [x9, #448]
  402694:	str	x8, [x9, #32]
  402698:	mov	w10, #0x4                   	// #4
  40269c:	str	w10, [sp, #316]
  4026a0:	ldur	w10, [x29, #-204]
  4026a4:	str	w10, [sp, #312]
  4026a8:	ldr	x8, [x9, #32]
  4026ac:	cbz	x8, 4026f4 <run+0x8c8>
  4026b0:	mov	w8, wzr
  4026b4:	mov	w0, w8
  4026b8:	bl	401850 <log_get_max_level_realm@plt>
  4026bc:	ldr	w8, [sp, #316]
  4026c0:	cmp	w0, w8
  4026c4:	cset	w8, ge  // ge = tcont
  4026c8:	mov	w9, #0x1                   	// #1
  4026cc:	eor	w8, w8, #0x1
  4026d0:	eor	w8, w8, w9
  4026d4:	and	w8, w8, #0x1
  4026d8:	mov	w1, w8
  4026dc:	sxtw	x10, w1
  4026e0:	cbz	x10, 4026f4 <run+0x8c8>
  4026e4:	ldr	x8, [sp, #112]
  4026e8:	ldr	x0, [x8, #32]
  4026ec:	add	x1, sp, #0x148
  4026f0:	bl	401910 <sd_device_get_sysname@plt>
  4026f4:	ldr	w0, [sp, #316]
  4026f8:	ldr	w1, [sp, #312]
  4026fc:	ldr	x8, [sp, #112]
  402700:	ldr	x9, [x8, #40]
  402704:	mov	x10, xzr
  402708:	cmp	x9, #0x0
  40270c:	ldr	x9, [sp, #88]
  402710:	csel	x5, x9, x10, ne  // ne = any
  402714:	ldr	x6, [x8, #40]
  402718:	ldr	x11, [x8, #416]
  40271c:	ldr	x2, [sp, #104]
  402720:	mov	w3, #0x14e                 	// #334
  402724:	ldr	x4, [sp, #96]
  402728:	mov	x7, x10
  40272c:	mov	x12, sp
  402730:	str	x10, [x12]
  402734:	mov	x10, sp
  402738:	adrp	x12, 404000 <start_target+0x2ac>
  40273c:	add	x12, x12, #0x5b3
  402740:	str	x12, [x10, #8]
  402744:	mov	x10, sp
  402748:	str	x11, [x10, #16]
  40274c:	bl	401920 <log_object_internal@plt>
  402750:	str	w0, [sp, #308]
  402754:	b	40283c <run+0xa10>
  402758:	ldur	w8, [x29, #-204]
  40275c:	cbnz	w8, 40283c <run+0xa10>
  402760:	mov	x8, xzr
  402764:	ldr	x9, [sp, #112]
  402768:	str	x8, [x9, #8]
  40276c:	ldr	x8, [x9, #448]
  402770:	str	x8, [x9]
  402774:	mov	w10, #0x6                   	// #6
  402778:	str	w10, [sp, #284]
  40277c:	str	wzr, [sp, #280]
  402780:	ldr	x8, [x9]
  402784:	cbz	x8, 4027cc <run+0x9a0>
  402788:	mov	w8, wzr
  40278c:	mov	w0, w8
  402790:	bl	401850 <log_get_max_level_realm@plt>
  402794:	ldr	w8, [sp, #284]
  402798:	cmp	w0, w8
  40279c:	cset	w8, ge  // ge = tcont
  4027a0:	mov	w9, #0x1                   	// #1
  4027a4:	eor	w8, w8, #0x1
  4027a8:	eor	w8, w8, w9
  4027ac:	and	w8, w8, #0x1
  4027b0:	mov	w1, w8
  4027b4:	sxtw	x10, w1
  4027b8:	cbz	x10, 4027cc <run+0x9a0>
  4027bc:	ldr	x8, [sp, #112]
  4027c0:	ldr	x0, [x8]
  4027c4:	add	x1, sp, #0x128
  4027c8:	bl	401910 <sd_device_get_sysname@plt>
  4027cc:	ldr	w0, [sp, #284]
  4027d0:	ldr	w1, [sp, #280]
  4027d4:	ldr	x8, [sp, #112]
  4027d8:	ldr	x9, [x8, #8]
  4027dc:	mov	x10, xzr
  4027e0:	cmp	x9, #0x0
  4027e4:	ldr	x9, [sp, #88]
  4027e8:	csel	x5, x9, x10, ne  // ne = any
  4027ec:	ldr	x6, [x8, #8]
  4027f0:	ldr	x11, [x8, #416]
  4027f4:	ldr	x2, [sp, #104]
  4027f8:	mov	w3, #0x150                 	// #336
  4027fc:	ldr	x4, [sp, #96]
  402800:	mov	x7, x10
  402804:	mov	x12, sp
  402808:	str	x10, [x12]
  40280c:	mov	x10, sp
  402810:	adrp	x12, 404000 <start_target+0x2ac>
  402814:	add	x12, x12, #0x5ea
  402818:	str	x12, [x10, #8]
  40281c:	mov	x10, sp
  402820:	str	x11, [x10, #16]
  402824:	bl	401920 <log_object_internal@plt>
  402828:	str	w0, [sp, #276]
  40282c:	stur	wzr, [x29, #-4]
  402830:	mov	w13, #0x1                   	// #1
  402834:	stur	w13, [x29, #-232]
  402838:	b	402e5c <run+0x1030>
  40283c:	adrp	x0, 404000 <start_target+0x2ac>
  402840:	add	x0, x0, #0x61b
  402844:	adrp	x1, 404000 <start_target+0x2ac>
  402848:	add	x1, x1, #0x628
  40284c:	bl	401950 <fopen64@plt>
  402850:	ldr	x8, [sp, #112]
  402854:	str	x0, [x8, #432]
  402858:	ldr	x9, [x8, #432]
  40285c:	cbz	x9, 402918 <run+0xaec>
  402860:	adrp	x8, 420000 <arg_repair>
  402864:	add	x8, x8, #0xb
  402868:	ldrb	w9, [x8]
  40286c:	tbnz	w9, #0, 402874 <run+0xa48>
  402870:	b	402918 <run+0xaec>
  402874:	sub	x0, x29, #0x18
  402878:	bl	401960 <pipe@plt>
  40287c:	cmp	w0, #0x0
  402880:	cset	w8, ge  // ge = tcont
  402884:	tbnz	w8, #0, 402918 <run+0xaec>
  402888:	mov	w8, #0x3                   	// #3
  40288c:	str	w8, [sp, #272]
  402890:	bl	4018c0 <__errno_location@plt>
  402894:	ldr	w8, [x0]
  402898:	str	w8, [sp, #268]
  40289c:	str	wzr, [sp, #264]
  4028a0:	ldr	w0, [sp, #264]
  4028a4:	bl	401850 <log_get_max_level_realm@plt>
  4028a8:	ldr	w8, [sp, #272]
  4028ac:	and	w8, w8, #0x7
  4028b0:	cmp	w0, w8
  4028b4:	b.lt	4028e8 <run+0xabc>  // b.tstop
  4028b8:	ldr	w8, [sp, #264]
  4028bc:	ldr	w9, [sp, #272]
  4028c0:	orr	w0, w9, w8, lsl #10
  4028c4:	ldr	w1, [sp, #268]
  4028c8:	ldr	x2, [sp, #104]
  4028cc:	mov	w3, #0x159                 	// #345
  4028d0:	ldr	x4, [sp, #96]
  4028d4:	adrp	x5, 404000 <start_target+0x2ac>
  4028d8:	add	x5, x5, #0x62b
  4028dc:	bl	401860 <log_internal_realm@plt>
  4028e0:	str	w0, [sp, #48]
  4028e4:	b	4028fc <run+0xad0>
  4028e8:	ldr	w0, [sp, #268]
  4028ec:	bl	401870 <abs@plt>
  4028f0:	mov	w8, wzr
  4028f4:	subs	w8, w8, w0, uxtb
  4028f8:	str	w8, [sp, #48]
  4028fc:	ldr	w8, [sp, #48]
  402900:	str	w8, [sp, #260]
  402904:	ldr	w8, [sp, #260]
  402908:	stur	w8, [x29, #-4]
  40290c:	mov	w8, #0x1                   	// #1
  402910:	stur	w8, [x29, #-232]
  402914:	b	402e5c <run+0x1030>
  402918:	adrp	x0, 404000 <start_target+0x2ac>
  40291c:	add	x0, x0, #0x636
  402920:	mov	w1, #0x25                  	// #37
  402924:	sub	x2, x29, #0xd4
  402928:	bl	403594 <safe_fork>
  40292c:	stur	w0, [x29, #-204]
  402930:	ldur	w8, [x29, #-204]
  402934:	cmp	w8, #0x0
  402938:	cset	w8, ge  // ge = tcont
  40293c:	tbnz	w8, #0, 402954 <run+0xb28>
  402940:	ldur	w8, [x29, #-204]
  402944:	stur	w8, [x29, #-4]
  402948:	mov	w8, #0x1                   	// #1
  40294c:	stur	w8, [x29, #-232]
  402950:	b	402e5c <run+0x1030>
  402954:	ldur	w8, [x29, #-204]
  402958:	cbnz	w8, 402c44 <run+0xe18>
  40295c:	mov	w8, #0xffffffff            	// #-1
  402960:	str	w8, [sp, #240]
  402964:	str	wzr, [sp, #164]
  402968:	ldur	w0, [x29, #-24]
  40296c:	bl	401970 <safe_close@plt>
  402970:	stur	w0, [x29, #-24]
  402974:	bl	4035dc <fsck_progress_socket>
  402978:	str	w0, [sp, #240]
  40297c:	ldr	w8, [sp, #240]
  402980:	cmp	w8, #0x0
  402984:	cset	w8, lt  // lt = tstop
  402988:	tbnz	w8, #0, 402a08 <run+0xbdc>
  40298c:	ldur	w0, [x29, #-20]
  402990:	bl	401970 <safe_close@plt>
  402994:	stur	w0, [x29, #-20]
  402998:	ldr	w3, [sp, #240]
  40299c:	add	x0, sp, #0xf5
  4029a0:	mov	x1, #0xf                   	// #15
  4029a4:	adrp	x2, 404000 <start_target+0x2ac>
  4029a8:	add	x2, x2, #0x63d
  4029ac:	bl	401980 <snprintf@plt>
  4029b0:	mov	w1, w0
  4029b4:	sxtw	x8, w1
  4029b8:	cmp	x8, #0xf
  4029bc:	cset	w9, cc  // cc = lo, ul, last
  4029c0:	mov	w10, #0x1                   	// #1
  4029c4:	eor	w9, w9, #0x1
  4029c8:	eor	w9, w9, w10
  4029cc:	eor	w9, w9, w10
  4029d0:	and	w9, w9, #0x1
  4029d4:	mov	w1, w9
  4029d8:	sxtw	x8, w1
  4029dc:	cbz	x8, 402a04 <run+0xbd8>
  4029e0:	mov	w8, wzr
  4029e4:	mov	w0, w8
  4029e8:	adrp	x1, 404000 <start_target+0x2ac>
  4029ec:	add	x1, x1, #0x642
  4029f0:	ldr	x2, [sp, #104]
  4029f4:	mov	w3, #0x16e                 	// #366
  4029f8:	adrp	x4, 404000 <start_target+0x2ac>
  4029fc:	add	x4, x4, #0x668
  402a00:	bl	401990 <log_assert_failed_realm@plt>
  402a04:	b	402a90 <run+0xc64>
  402a08:	ldur	w8, [x29, #-20]
  402a0c:	cmp	w8, #0x0
  402a10:	cset	w8, lt  // lt = tstop
  402a14:	tbnz	w8, #0, 402a88 <run+0xc5c>
  402a18:	ldur	w3, [x29, #-20]
  402a1c:	add	x0, sp, #0xf5
  402a20:	mov	x1, #0xf                   	// #15
  402a24:	adrp	x2, 404000 <start_target+0x2ac>
  402a28:	add	x2, x2, #0x63d
  402a2c:	bl	401980 <snprintf@plt>
  402a30:	mov	w1, w0
  402a34:	sxtw	x8, w1
  402a38:	cmp	x8, #0xf
  402a3c:	cset	w9, cc  // cc = lo, ul, last
  402a40:	mov	w10, #0x1                   	// #1
  402a44:	eor	w9, w9, #0x1
  402a48:	eor	w9, w9, w10
  402a4c:	eor	w9, w9, w10
  402a50:	and	w9, w9, #0x1
  402a54:	mov	w1, w9
  402a58:	sxtw	x8, w1
  402a5c:	cbz	x8, 402a84 <run+0xc58>
  402a60:	mov	w8, wzr
  402a64:	mov	w0, w8
  402a68:	adrp	x1, 404000 <start_target+0x2ac>
  402a6c:	add	x1, x1, #0x642
  402a70:	ldr	x2, [sp, #104]
  402a74:	mov	w3, #0x171                 	// #369
  402a78:	adrp	x4, 404000 <start_target+0x2ac>
  402a7c:	add	x4, x4, #0x668
  402a80:	bl	401990 <log_assert_failed_realm@plt>
  402a84:	b	402a90 <run+0xc64>
  402a88:	mov	w8, #0x0                   	// #0
  402a8c:	strb	w8, [sp, #245]
  402a90:	ldrsw	x8, [sp, #164]
  402a94:	mov	w9, w8
  402a98:	add	w9, w9, #0x1
  402a9c:	str	w9, [sp, #164]
  402aa0:	mov	x10, #0x8                   	// #8
  402aa4:	mul	x8, x10, x8
  402aa8:	add	x11, sp, #0xa8
  402aac:	add	x8, x11, x8
  402ab0:	adrp	x12, 404000 <start_target+0x2ac>
  402ab4:	add	x12, x12, #0x67e
  402ab8:	str	x12, [x8]
  402abc:	adrp	x8, 420000 <arg_repair>
  402ac0:	add	x8, x8, #0x0
  402ac4:	ldr	x8, [x8]
  402ac8:	ldrsw	x12, [sp, #164]
  402acc:	mov	w9, w12
  402ad0:	add	w9, w9, #0x1
  402ad4:	str	w9, [sp, #164]
  402ad8:	mul	x12, x10, x12
  402adc:	add	x12, x11, x12
  402ae0:	str	x8, [x12]
  402ae4:	ldrsw	x8, [sp, #164]
  402ae8:	mov	w9, w8
  402aec:	add	w9, w9, #0x1
  402af0:	str	w9, [sp, #164]
  402af4:	mul	x8, x10, x8
  402af8:	add	x8, x11, x8
  402afc:	adrp	x12, 404000 <start_target+0x2ac>
  402b00:	add	x12, x12, #0x689
  402b04:	str	x12, [x8]
  402b08:	ldrsw	x8, [sp, #164]
  402b0c:	mov	w9, w8
  402b10:	add	w9, w9, #0x1
  402b14:	str	w9, [sp, #164]
  402b18:	mul	x8, x10, x8
  402b1c:	add	x8, x11, x8
  402b20:	adrp	x10, 404000 <start_target+0x2ac>
  402b24:	add	x10, x10, #0x68c
  402b28:	str	x10, [x8]
  402b2c:	ldurb	w9, [x29, #-65]
  402b30:	tbnz	w9, #0, 402b60 <run+0xd34>
  402b34:	ldrsw	x8, [sp, #164]
  402b38:	mov	w9, w8
  402b3c:	add	w9, w9, #0x1
  402b40:	str	w9, [sp, #164]
  402b44:	mov	x10, #0x8                   	// #8
  402b48:	mul	x8, x10, x8
  402b4c:	add	x10, sp, #0xa8
  402b50:	add	x8, x10, x8
  402b54:	adrp	x10, 404000 <start_target+0x2ac>
  402b58:	add	x10, x10, #0x68f
  402b5c:	str	x10, [x8]
  402b60:	adrp	x8, 420000 <arg_repair>
  402b64:	add	x8, x8, #0x9
  402b68:	ldrb	w9, [x8]
  402b6c:	tbnz	w9, #0, 402b74 <run+0xd48>
  402b70:	b	402ba0 <run+0xd74>
  402b74:	ldrsw	x8, [sp, #164]
  402b78:	mov	w9, w8
  402b7c:	add	w9, w9, #0x1
  402b80:	str	w9, [sp, #164]
  402b84:	mov	x10, #0x8                   	// #8
  402b88:	mul	x8, x10, x8
  402b8c:	add	x10, sp, #0xa8
  402b90:	add	x8, x10, x8
  402b94:	adrp	x10, 404000 <start_target+0x2ac>
  402b98:	add	x10, x10, #0x692
  402b9c:	str	x10, [x8]
  402ba0:	add	x0, sp, #0xf5
  402ba4:	bl	4038e0 <isempty>
  402ba8:	tbnz	w0, #0, 402bd4 <run+0xda8>
  402bac:	ldrsw	x8, [sp, #164]
  402bb0:	mov	w9, w8
  402bb4:	add	w9, w9, #0x1
  402bb8:	str	w9, [sp, #164]
  402bbc:	mov	x10, #0x8                   	// #8
  402bc0:	mul	x8, x10, x8
  402bc4:	add	x10, sp, #0xa8
  402bc8:	add	x8, x10, x8
  402bcc:	add	x10, sp, #0xf5
  402bd0:	str	x10, [x8]
  402bd4:	ldr	x8, [sp, #112]
  402bd8:	ldr	x9, [x8, #424]
  402bdc:	ldrsw	x10, [sp, #164]
  402be0:	mov	w11, w10
  402be4:	add	w11, w11, #0x1
  402be8:	str	w11, [sp, #164]
  402bec:	mov	x12, #0x8                   	// #8
  402bf0:	mul	x10, x12, x10
  402bf4:	add	x13, sp, #0xa8
  402bf8:	add	x10, x13, x10
  402bfc:	str	x9, [x10]
  402c00:	ldrsw	x9, [sp, #164]
  402c04:	mov	w11, w9
  402c08:	add	w11, w11, #0x1
  402c0c:	str	w11, [sp, #164]
  402c10:	mul	x9, x12, x9
  402c14:	add	x9, x13, x9
  402c18:	mov	x10, xzr
  402c1c:	str	x10, [x9]
  402c20:	str	x13, [sp, #40]
  402c24:	bl	4019a0 <rlimit_nofile_safe@plt>
  402c28:	ldr	x8, [sp, #168]
  402c2c:	mov	x0, x8
  402c30:	ldr	x1, [sp, #40]
  402c34:	bl	4019b0 <execv@plt>
  402c38:	mov	w11, #0x8                   	// #8
  402c3c:	mov	w0, w11
  402c40:	bl	4019c0 <_exit@plt>
  402c44:	ldr	x8, [sp, #112]
  402c48:	ldr	x9, [x8, #432]
  402c4c:	cbz	x9, 402c84 <run+0xe58>
  402c50:	ldur	w0, [x29, #-20]
  402c54:	bl	401970 <safe_close@plt>
  402c58:	stur	w0, [x29, #-20]
  402c5c:	ldur	w8, [x29, #-24]
  402c60:	str	w8, [sp, #160]
  402c64:	mov	w8, #0xffffffff            	// #-1
  402c68:	stur	w8, [x29, #-24]
  402c6c:	ldr	w8, [sp, #160]
  402c70:	str	w8, [sp, #156]
  402c74:	ldr	w0, [sp, #156]
  402c78:	ldr	x9, [sp, #112]
  402c7c:	ldr	x1, [x9, #432]
  402c80:	bl	403920 <process_progress>
  402c84:	ldur	w1, [x29, #-212]
  402c88:	adrp	x0, 404000 <start_target+0x2ac>
  402c8c:	add	x0, x0, #0x695
  402c90:	mov	w2, #0x1                   	// #1
  402c94:	bl	4019d0 <wait_for_terminate_and_check@plt>
  402c98:	stur	w0, [x29, #-208]
  402c9c:	ldur	w8, [x29, #-208]
  402ca0:	cmp	w8, #0x0
  402ca4:	cset	w8, ge  // ge = tcont
  402ca8:	tbnz	w8, #0, 402cc0 <run+0xe94>
  402cac:	ldur	w8, [x29, #-208]
  402cb0:	stur	w8, [x29, #-4]
  402cb4:	mov	w8, #0x1                   	// #1
  402cb8:	stur	w8, [x29, #-232]
  402cbc:	b	402e5c <run+0x1030>
  402cc0:	ldur	w8, [x29, #-208]
  402cc4:	and	w8, w8, #0xfffffffe
  402cc8:	cbz	w8, 402e1c <run+0xff0>
  402ccc:	mov	w8, #0x3                   	// #3
  402cd0:	str	w8, [sp, #152]
  402cd4:	str	wzr, [sp, #148]
  402cd8:	str	wzr, [sp, #144]
  402cdc:	ldr	w0, [sp, #144]
  402ce0:	bl	401850 <log_get_max_level_realm@plt>
  402ce4:	ldr	w8, [sp, #152]
  402ce8:	and	w8, w8, #0x7
  402cec:	cmp	w0, w8
  402cf0:	b.lt	402d28 <run+0xefc>  // b.tstop
  402cf4:	ldr	w8, [sp, #144]
  402cf8:	ldr	w9, [sp, #152]
  402cfc:	orr	w0, w9, w8, lsl #10
  402d00:	ldr	w1, [sp, #148]
  402d04:	ldur	w6, [x29, #-208]
  402d08:	ldr	x2, [sp, #104]
  402d0c:	mov	w3, #0x19b                 	// #411
  402d10:	ldr	x4, [sp, #96]
  402d14:	adrp	x5, 404000 <start_target+0x2ac>
  402d18:	add	x5, x5, #0x69a
  402d1c:	bl	401860 <log_internal_realm@plt>
  402d20:	str	w0, [sp, #36]
  402d24:	b	402d3c <run+0xf10>
  402d28:	ldr	w0, [sp, #148]
  402d2c:	bl	401870 <abs@plt>
  402d30:	mov	w8, wzr
  402d34:	subs	w8, w8, w0, uxtb
  402d38:	str	w8, [sp, #36]
  402d3c:	ldr	w8, [sp, #36]
  402d40:	str	w8, [sp, #140]
  402d44:	ldur	w8, [x29, #-208]
  402d48:	and	w8, w8, #0x2
  402d4c:	cbz	w8, 402d84 <run+0xf58>
  402d50:	ldurb	w8, [x29, #-65]
  402d54:	tbnz	w8, #0, 402d5c <run+0xf30>
  402d58:	b	402d84 <run+0xf58>
  402d5c:	adrp	x0, 404000 <start_target+0x2ac>
  402d60:	add	x0, x0, #0x6bb
  402d64:	adrp	x1, 404000 <start_target+0x2ac>
  402d68:	add	x1, x1, #0x6c9
  402d6c:	bl	403d54 <start_target>
  402d70:	mov	w8, #0xffffffea            	// #-22
  402d74:	stur	w8, [x29, #-4]
  402d78:	mov	w8, #0x1                   	// #1
  402d7c:	stur	w8, [x29, #-232]
  402d80:	b	402e5c <run+0x1030>
  402d84:	ldur	w8, [x29, #-208]
  402d88:	and	w8, w8, #0x6
  402d8c:	cbz	w8, 402da8 <run+0xf7c>
  402d90:	adrp	x0, 404000 <start_target+0x2ac>
  402d94:	add	x0, x0, #0x6de
  402d98:	adrp	x1, 404000 <start_target+0x2ac>
  402d9c:	add	x1, x1, #0x6ef
  402da0:	bl	403d54 <start_target>
  402da4:	b	402e1c <run+0xff0>
  402da8:	mov	w8, #0x4                   	// #4
  402dac:	str	w8, [sp, #136]
  402db0:	str	wzr, [sp, #132]
  402db4:	str	wzr, [sp, #128]
  402db8:	ldr	w0, [sp, #128]
  402dbc:	bl	401850 <log_get_max_level_realm@plt>
  402dc0:	ldr	w8, [sp, #136]
  402dc4:	and	w8, w8, #0x7
  402dc8:	cmp	w0, w8
  402dcc:	b.lt	402e00 <run+0xfd4>  // b.tstop
  402dd0:	ldr	w8, [sp, #128]
  402dd4:	ldr	w9, [sp, #136]
  402dd8:	orr	w0, w9, w8, lsl #10
  402ddc:	ldr	w1, [sp, #132]
  402de0:	ldr	x2, [sp, #104]
  402de4:	mov	w3, #0x1a5                 	// #421
  402de8:	ldr	x4, [sp, #96]
  402dec:	adrp	x5, 404000 <start_target+0x2ac>
  402df0:	add	x5, x5, #0x6f7
  402df4:	bl	401860 <log_internal_realm@plt>
  402df8:	str	w0, [sp, #32]
  402dfc:	b	402e14 <run+0xfe8>
  402e00:	ldr	w0, [sp, #132]
  402e04:	bl	401870 <abs@plt>
  402e08:	mov	w8, wzr
  402e0c:	subs	w8, w8, w0, uxtb
  402e10:	str	w8, [sp, #32]
  402e14:	ldr	w8, [sp, #32]
  402e18:	str	w8, [sp, #124]
  402e1c:	ldur	w8, [x29, #-208]
  402e20:	and	w8, w8, #0x1
  402e24:	cbz	w8, 402e34 <run+0x1008>
  402e28:	adrp	x0, 404000 <start_target+0x2ac>
  402e2c:	add	x0, x0, #0x707
  402e30:	bl	4019e0 <touch@plt>
  402e34:	ldur	w8, [x29, #-208]
  402e38:	tst	w8, #0x6
  402e3c:	cset	w8, ne  // ne = any
  402e40:	mov	w9, #0x1                   	// #1
  402e44:	eor	w8, w8, #0x1
  402e48:	eor	w8, w8, w9
  402e4c:	and	w8, w8, #0x1
  402e50:	stur	w8, [x29, #-4]
  402e54:	mov	w8, #0x1                   	// #1
  402e58:	stur	w8, [x29, #-232]
  402e5c:	sub	x0, x29, #0x30
  402e60:	bl	402f90 <fclosep>
  402e64:	sub	x0, x29, #0x28
  402e68:	bl	402f68 <freep>
  402e6c:	sub	x0, x29, #0x20
  402e70:	bl	402f34 <sd_device_unrefp>
  402e74:	sub	x0, x29, #0x18
  402e78:	bl	402f10 <close_pairp>
  402e7c:	ldur	w0, [x29, #-4]
  402e80:	add	sp, sp, #0x300
  402e84:	ldr	x28, [sp, #16]
  402e88:	ldp	x29, x30, [sp], #32
  402e8c:	ret

0000000000402e90 <static_destruct>:
  402e90:	sub	sp, sp, #0x20
  402e94:	stp	x29, x30, [sp, #16]
  402e98:	add	x29, sp, #0x10
  402e9c:	adrp	x8, 41f000 <__FRAME_END__+0x1a238>
  402ea0:	ldr	x8, [x8, #3560]
  402ea4:	str	x8, [sp]
  402ea8:	cbnz	x8, 402eb0 <static_destruct+0x20>
  402eac:	b	402f04 <static_destruct+0x74>
  402eb0:	ldr	x0, [sp]
  402eb4:	mov	x1, #0x8                   	// #8
  402eb8:	bl	404244 <ALIGN_TO>
  402ebc:	str	x0, [sp, #8]
  402ec0:	ldr	x8, [sp, #8]
  402ec4:	adrp	x9, 41f000 <__FRAME_END__+0x1a238>
  402ec8:	ldr	x9, [x9, #3568]
  402ecc:	cmp	x8, x9
  402ed0:	b.cs	402f04 <static_destruct+0x74>  // b.hs, b.nlast
  402ed4:	ldr	x8, [sp, #8]
  402ed8:	ldr	x8, [x8, #8]
  402edc:	ldr	x9, [sp, #8]
  402ee0:	ldr	x0, [x9]
  402ee4:	blr	x8
  402ee8:	ldr	x8, [sp, #8]
  402eec:	add	x8, x8, #0x10
  402ef0:	mov	x0, x8
  402ef4:	mov	x1, #0x8                   	// #8
  402ef8:	bl	404244 <ALIGN_TO>
  402efc:	str	x0, [sp, #8]
  402f00:	b	402ec0 <static_destruct+0x30>
  402f04:	ldp	x29, x30, [sp, #16]
  402f08:	add	sp, sp, #0x20
  402f0c:	ret

0000000000402f10 <close_pairp>:
  402f10:	sub	sp, sp, #0x20
  402f14:	stp	x29, x30, [sp, #16]
  402f18:	add	x29, sp, #0x10
  402f1c:	str	x0, [sp, #8]
  402f20:	ldr	x0, [sp, #8]
  402f24:	bl	4019f0 <safe_close_pair@plt>
  402f28:	ldp	x29, x30, [sp, #16]
  402f2c:	add	sp, sp, #0x20
  402f30:	ret

0000000000402f34 <sd_device_unrefp>:
  402f34:	sub	sp, sp, #0x20
  402f38:	stp	x29, x30, [sp, #16]
  402f3c:	add	x29, sp, #0x10
  402f40:	str	x0, [sp, #8]
  402f44:	ldr	x8, [sp, #8]
  402f48:	ldr	x8, [x8]
  402f4c:	cbz	x8, 402f5c <sd_device_unrefp+0x28>
  402f50:	ldr	x8, [sp, #8]
  402f54:	ldr	x0, [x8]
  402f58:	bl	401a00 <sd_device_unref@plt>
  402f5c:	ldp	x29, x30, [sp, #16]
  402f60:	add	sp, sp, #0x20
  402f64:	ret

0000000000402f68 <freep>:
  402f68:	sub	sp, sp, #0x20
  402f6c:	stp	x29, x30, [sp, #16]
  402f70:	add	x29, sp, #0x10
  402f74:	str	x0, [sp, #8]
  402f78:	ldr	x8, [sp, #8]
  402f7c:	ldr	x0, [x8]
  402f80:	bl	401a10 <free@plt>
  402f84:	ldp	x29, x30, [sp, #16]
  402f88:	add	sp, sp, #0x20
  402f8c:	ret

0000000000402f90 <fclosep>:
  402f90:	sub	sp, sp, #0x20
  402f94:	stp	x29, x30, [sp, #16]
  402f98:	add	x29, sp, #0x10
  402f9c:	str	x0, [sp, #8]
  402fa0:	ldr	x8, [sp, #8]
  402fa4:	ldr	x0, [x8]
  402fa8:	bl	401a20 <safe_fclose@plt>
  402fac:	ldp	x29, x30, [sp, #16]
  402fb0:	add	sp, sp, #0x20
  402fb4:	ret

0000000000402fb8 <parse_proc_cmdline_item>:
  402fb8:	sub	sp, sp, #0xb0
  402fbc:	stp	x29, x30, [sp, #160]
  402fc0:	add	x29, sp, #0xa0
  402fc4:	adrp	x8, 404000 <start_target+0x2ac>
  402fc8:	add	x8, x8, #0x400
  402fcc:	add	x8, x8, #0x3
  402fd0:	adrp	x9, 404000 <start_target+0x2ac>
  402fd4:	add	x9, x9, #0x77d
  402fd8:	adrp	x10, 420000 <arg_repair>
  402fdc:	add	x10, x10, #0xa
  402fe0:	adrp	x11, 420000 <arg_repair>
  402fe4:	add	x11, x11, #0x9
  402fe8:	adrp	x12, 420000 <arg_repair>
  402fec:	add	x12, x12, #0x0
  402ff0:	stur	x0, [x29, #-16]
  402ff4:	stur	x1, [x29, #-24]
  402ff8:	stur	x2, [x29, #-32]
  402ffc:	str	x8, [sp, #48]
  403000:	str	x9, [sp, #40]
  403004:	str	x10, [sp, #32]
  403008:	str	x11, [sp, #24]
  40300c:	str	x12, [sp, #16]
  403010:	ldur	x8, [x29, #-16]
  403014:	cmp	x8, #0x0
  403018:	cset	w9, ne  // ne = any
  40301c:	mov	w10, #0x1                   	// #1
  403020:	eor	w9, w9, #0x1
  403024:	eor	w9, w9, w10
  403028:	eor	w9, w9, w10
  40302c:	and	w9, w9, #0x1
  403030:	mov	w0, w9
  403034:	sxtw	x8, w0
  403038:	cbz	x8, 403060 <parse_proc_cmdline_item+0xa8>
  40303c:	mov	w8, wzr
  403040:	mov	w0, w8
  403044:	adrp	x1, 404000 <start_target+0x2ac>
  403048:	add	x1, x1, #0x71f
  40304c:	ldr	x2, [sp, #48]
  403050:	mov	w3, #0x4b                  	// #75
  403054:	adrp	x4, 404000 <start_target+0x2ac>
  403058:	add	x4, x4, #0x723
  40305c:	bl	401990 <log_assert_failed_realm@plt>
  403060:	ldur	x0, [x29, #-16]
  403064:	adrp	x1, 404000 <start_target+0x2ac>
  403068:	add	x1, x1, #0x763
  40306c:	bl	401a30 <strcmp@plt>
  403070:	cbnz	w0, 403180 <parse_proc_cmdline_item+0x1c8>
  403074:	ldur	x0, [x29, #-16]
  403078:	ldur	x1, [x29, #-24]
  40307c:	bl	404050 <proc_cmdline_value_missing>
  403080:	tbnz	w0, #0, 403088 <parse_proc_cmdline_item+0xd0>
  403084:	b	403090 <parse_proc_cmdline_item+0xd8>
  403088:	stur	wzr, [x29, #-4]
  40308c:	b	4033e0 <parse_proc_cmdline_item+0x428>
  403090:	ldur	x0, [x29, #-24]
  403094:	adrp	x1, 404000 <start_target+0x2ac>
  403098:	add	x1, x1, #0x76d
  40309c:	bl	401a30 <strcmp@plt>
  4030a0:	cbnz	w0, 4030bc <parse_proc_cmdline_item+0x104>
  4030a4:	mov	w8, #0x0                   	// #0
  4030a8:	ldr	x9, [sp, #32]
  4030ac:	strb	w8, [x9]
  4030b0:	ldr	x10, [sp, #24]
  4030b4:	strb	w8, [x10]
  4030b8:	b	40317c <parse_proc_cmdline_item+0x1c4>
  4030bc:	ldur	x0, [x29, #-24]
  4030c0:	adrp	x1, 404000 <start_target+0x2ac>
  4030c4:	add	x1, x1, #0x772
  4030c8:	bl	401a30 <strcmp@plt>
  4030cc:	cbnz	w0, 4030e0 <parse_proc_cmdline_item+0x128>
  4030d0:	mov	w8, #0x1                   	// #1
  4030d4:	ldr	x9, [sp, #24]
  4030d8:	strb	w8, [x9]
  4030dc:	b	40317c <parse_proc_cmdline_item+0x1c4>
  4030e0:	ldur	x0, [x29, #-24]
  4030e4:	adrp	x1, 404000 <start_target+0x2ac>
  4030e8:	add	x1, x1, #0x778
  4030ec:	bl	401a30 <strcmp@plt>
  4030f0:	cbnz	w0, 403104 <parse_proc_cmdline_item+0x14c>
  4030f4:	mov	w8, #0x1                   	// #1
  4030f8:	ldr	x9, [sp, #32]
  4030fc:	strb	w8, [x9]
  403100:	b	40317c <parse_proc_cmdline_item+0x1c4>
  403104:	mov	w8, #0x4                   	// #4
  403108:	stur	w8, [x29, #-40]
  40310c:	stur	wzr, [x29, #-44]
  403110:	stur	wzr, [x29, #-48]
  403114:	ldur	w0, [x29, #-48]
  403118:	bl	401850 <log_get_max_level_realm@plt>
  40311c:	ldur	w8, [x29, #-40]
  403120:	and	w8, w8, #0x7
  403124:	cmp	w0, w8
  403128:	b.lt	403160 <parse_proc_cmdline_item+0x1a8>  // b.tstop
  40312c:	ldur	w8, [x29, #-48]
  403130:	ldur	w9, [x29, #-40]
  403134:	orr	w0, w9, w8, lsl #10
  403138:	ldur	w1, [x29, #-44]
  40313c:	ldur	x6, [x29, #-24]
  403140:	ldr	x2, [sp, #48]
  403144:	mov	w3, #0x59                  	// #89
  403148:	ldr	x4, [sp, #40]
  40314c:	adrp	x5, 404000 <start_target+0x2ac>
  403150:	add	x5, x5, #0x795
  403154:	bl	401860 <log_internal_realm@plt>
  403158:	str	w0, [sp, #12]
  40315c:	b	403174 <parse_proc_cmdline_item+0x1bc>
  403160:	ldur	w0, [x29, #-44]
  403164:	bl	401870 <abs@plt>
  403168:	mov	w8, wzr
  40316c:	subs	w8, w8, w0, uxtb
  403170:	str	w8, [sp, #12]
  403174:	ldr	w8, [sp, #12]
  403178:	stur	w8, [x29, #-52]
  40317c:	b	4033dc <parse_proc_cmdline_item+0x424>
  403180:	ldur	x0, [x29, #-16]
  403184:	adrp	x1, 404000 <start_target+0x2ac>
  403188:	add	x1, x1, #0x7c2
  40318c:	bl	401a30 <strcmp@plt>
  403190:	cbnz	w0, 4032a0 <parse_proc_cmdline_item+0x2e8>
  403194:	ldur	x0, [x29, #-16]
  403198:	ldur	x1, [x29, #-24]
  40319c:	bl	404050 <proc_cmdline_value_missing>
  4031a0:	tbnz	w0, #0, 4031a8 <parse_proc_cmdline_item+0x1f0>
  4031a4:	b	4031b0 <parse_proc_cmdline_item+0x1f8>
  4031a8:	stur	wzr, [x29, #-4]
  4031ac:	b	4033e0 <parse_proc_cmdline_item+0x428>
  4031b0:	ldur	x0, [x29, #-24]
  4031b4:	adrp	x1, 404000 <start_target+0x2ac>
  4031b8:	add	x1, x1, #0x7ce
  4031bc:	bl	401a30 <strcmp@plt>
  4031c0:	cbnz	w0, 4031d8 <parse_proc_cmdline_item+0x220>
  4031c4:	adrp	x8, 404000 <start_target+0x2ac>
  4031c8:	add	x8, x8, #0x7d4
  4031cc:	ldr	x9, [sp, #16]
  4031d0:	str	x8, [x9]
  4031d4:	b	40329c <parse_proc_cmdline_item+0x2e4>
  4031d8:	ldur	x0, [x29, #-24]
  4031dc:	bl	401a40 <parse_boolean@plt>
  4031e0:	stur	w0, [x29, #-36]
  4031e4:	ldur	w8, [x29, #-36]
  4031e8:	cmp	w8, #0x0
  4031ec:	cset	w8, le
  4031f0:	tbnz	w8, #0, 403208 <parse_proc_cmdline_item+0x250>
  4031f4:	adrp	x8, 404000 <start_target+0x2ac>
  4031f8:	add	x8, x8, #0x7d7
  4031fc:	ldr	x9, [sp, #16]
  403200:	str	x8, [x9]
  403204:	b	40329c <parse_proc_cmdline_item+0x2e4>
  403208:	ldur	w8, [x29, #-36]
  40320c:	cbnz	w8, 403224 <parse_proc_cmdline_item+0x26c>
  403210:	adrp	x8, 404000 <start_target+0x2ac>
  403214:	add	x8, x8, #0x7da
  403218:	ldr	x9, [sp, #16]
  40321c:	str	x8, [x9]
  403220:	b	40329c <parse_proc_cmdline_item+0x2e4>
  403224:	mov	w8, #0x4                   	// #4
  403228:	stur	w8, [x29, #-56]
  40322c:	stur	wzr, [x29, #-60]
  403230:	stur	wzr, [x29, #-64]
  403234:	ldur	w0, [x29, #-64]
  403238:	bl	401850 <log_get_max_level_realm@plt>
  40323c:	ldur	w8, [x29, #-56]
  403240:	and	w8, w8, #0x7
  403244:	cmp	w0, w8
  403248:	b.lt	403280 <parse_proc_cmdline_item+0x2c8>  // b.tstop
  40324c:	ldur	w8, [x29, #-64]
  403250:	ldur	w9, [x29, #-56]
  403254:	orr	w0, w9, w8, lsl #10
  403258:	ldur	w1, [x29, #-60]
  40325c:	ldur	x6, [x29, #-24]
  403260:	ldr	x2, [sp, #48]
  403264:	mov	w3, #0x69                  	// #105
  403268:	ldr	x4, [sp, #40]
  40326c:	adrp	x5, 404000 <start_target+0x2ac>
  403270:	add	x5, x5, #0x7dd
  403274:	bl	401860 <log_internal_realm@plt>
  403278:	str	w0, [sp, #8]
  40327c:	b	403294 <parse_proc_cmdline_item+0x2dc>
  403280:	ldur	w0, [x29, #-60]
  403284:	bl	401870 <abs@plt>
  403288:	mov	w8, wzr
  40328c:	subs	w8, w8, w0, uxtb
  403290:	str	w8, [sp, #8]
  403294:	ldr	w8, [sp, #8]
  403298:	stur	w8, [x29, #-68]
  40329c:	b	4033dc <parse_proc_cmdline_item+0x424>
  4032a0:	ldur	x0, [x29, #-16]
  4032a4:	adrp	x1, 404000 <start_target+0x2ac>
  4032a8:	add	x1, x1, #0x80c
  4032ac:	bl	401a30 <strcmp@plt>
  4032b0:	cbnz	w0, 403340 <parse_proc_cmdline_item+0x388>
  4032b4:	ldur	x8, [x29, #-24]
  4032b8:	cbnz	x8, 403340 <parse_proc_cmdline_item+0x388>
  4032bc:	mov	w8, #0x4                   	// #4
  4032c0:	stur	w8, [x29, #-72]
  4032c4:	stur	wzr, [x29, #-76]
  4032c8:	str	wzr, [sp, #80]
  4032cc:	ldr	w0, [sp, #80]
  4032d0:	bl	401850 <log_get_max_level_realm@plt>
  4032d4:	ldur	w8, [x29, #-72]
  4032d8:	and	w8, w8, #0x7
  4032dc:	cmp	w0, w8
  4032e0:	b.lt	403314 <parse_proc_cmdline_item+0x35c>  // b.tstop
  4032e4:	ldr	w8, [sp, #80]
  4032e8:	ldur	w9, [x29, #-72]
  4032ec:	orr	w0, w9, w8, lsl #10
  4032f0:	ldur	w1, [x29, #-76]
  4032f4:	ldr	x2, [sp, #48]
  4032f8:	mov	w3, #0x6f                  	// #111
  4032fc:	ldr	x4, [sp, #40]
  403300:	adrp	x5, 404000 <start_target+0x2ac>
  403304:	add	x5, x5, #0x815
  403308:	bl	401860 <log_internal_realm@plt>
  40330c:	str	w0, [sp, #4]
  403310:	b	403328 <parse_proc_cmdline_item+0x370>
  403314:	ldur	w0, [x29, #-76]
  403318:	bl	401870 <abs@plt>
  40331c:	mov	w8, wzr
  403320:	subs	w8, w8, w0, uxtb
  403324:	str	w8, [sp, #4]
  403328:	ldr	w8, [sp, #4]
  40332c:	str	w8, [sp, #76]
  403330:	mov	w8, #0x1                   	// #1
  403334:	ldr	x9, [sp, #32]
  403338:	strb	w8, [x9]
  40333c:	b	4033dc <parse_proc_cmdline_item+0x424>
  403340:	ldur	x0, [x29, #-16]
  403344:	adrp	x1, 404000 <start_target+0x2ac>
  403348:	add	x1, x1, #0x865
  40334c:	bl	401a30 <strcmp@plt>
  403350:	cbnz	w0, 4033dc <parse_proc_cmdline_item+0x424>
  403354:	ldur	x8, [x29, #-24]
  403358:	cbnz	x8, 4033dc <parse_proc_cmdline_item+0x424>
  40335c:	mov	w8, #0x4                   	// #4
  403360:	str	w8, [sp, #72]
  403364:	str	wzr, [sp, #68]
  403368:	str	wzr, [sp, #64]
  40336c:	ldr	w0, [sp, #64]
  403370:	bl	401850 <log_get_max_level_realm@plt>
  403374:	ldr	w8, [sp, #72]
  403378:	and	w8, w8, #0x7
  40337c:	cmp	w0, w8
  403380:	b.lt	4033b4 <parse_proc_cmdline_item+0x3fc>  // b.tstop
  403384:	ldr	w8, [sp, #64]
  403388:	ldr	w9, [sp, #72]
  40338c:	orr	w0, w9, w8, lsl #10
  403390:	ldr	w1, [sp, #68]
  403394:	ldr	x2, [sp, #48]
  403398:	mov	w3, #0x73                  	// #115
  40339c:	ldr	x4, [sp, #40]
  4033a0:	adrp	x5, 404000 <start_target+0x2ac>
  4033a4:	add	x5, x5, #0x86f
  4033a8:	bl	401860 <log_internal_realm@plt>
  4033ac:	str	w0, [sp]
  4033b0:	b	4033c8 <parse_proc_cmdline_item+0x410>
  4033b4:	ldr	w0, [sp, #68]
  4033b8:	bl	401870 <abs@plt>
  4033bc:	mov	w8, wzr
  4033c0:	subs	w8, w8, w0, uxtb
  4033c4:	str	w8, [sp]
  4033c8:	ldr	w8, [sp]
  4033cc:	str	w8, [sp, #60]
  4033d0:	mov	w8, #0x1                   	// #1
  4033d4:	ldr	x9, [sp, #24]
  4033d8:	strb	w8, [x9]
  4033dc:	stur	wzr, [x29, #-4]
  4033e0:	ldur	w0, [x29, #-4]
  4033e4:	ldp	x29, x30, [sp, #160]
  4033e8:	add	sp, sp, #0xb0
  4033ec:	ret

00000000004033f0 <test_files>:
  4033f0:	sub	sp, sp, #0x40
  4033f4:	stp	x29, x30, [sp, #48]
  4033f8:	add	x29, sp, #0x30
  4033fc:	adrp	x0, 404000 <start_target+0x2ac>
  403400:	add	x0, x0, #0x937
  403404:	mov	w8, wzr
  403408:	adrp	x9, 404000 <start_target+0x2ac>
  40340c:	add	x9, x9, #0x400
  403410:	add	x9, x9, #0x3
  403414:	mov	w1, w8
  403418:	str	x9, [sp, #8]
  40341c:	bl	401a50 <access@plt>
  403420:	cmp	w0, #0x0
  403424:	cset	w8, lt  // lt = tstop
  403428:	tbnz	w8, #0, 4034b4 <test_files+0xc4>
  40342c:	mov	w8, #0x3                   	// #3
  403430:	stur	w8, [x29, #-4]
  403434:	stur	wzr, [x29, #-8]
  403438:	stur	wzr, [x29, #-12]
  40343c:	ldur	w0, [x29, #-12]
  403440:	bl	401850 <log_get_max_level_realm@plt>
  403444:	ldur	w8, [x29, #-4]
  403448:	and	w8, w8, #0x7
  40344c:	cmp	w0, w8
  403450:	b.lt	403488 <test_files+0x98>  // b.tstop
  403454:	ldur	w8, [x29, #-12]
  403458:	ldur	w9, [x29, #-4]
  40345c:	orr	w0, w9, w8, lsl #10
  403460:	ldur	w1, [x29, #-8]
  403464:	ldr	x2, [sp, #8]
  403468:	mov	w3, #0x7f                  	// #127
  40346c:	adrp	x4, 404000 <start_target+0x2ac>
  403470:	add	x4, x4, #0x941
  403474:	adrp	x5, 404000 <start_target+0x2ac>
  403478:	add	x5, x5, #0x94c
  40347c:	bl	401860 <log_internal_realm@plt>
  403480:	str	w0, [sp, #4]
  403484:	b	40349c <test_files+0xac>
  403488:	ldur	w0, [x29, #-8]
  40348c:	bl	401870 <abs@plt>
  403490:	mov	w8, wzr
  403494:	subs	w8, w8, w0, uxtb
  403498:	str	w8, [sp, #4]
  40349c:	ldr	w8, [sp, #4]
  4034a0:	stur	w8, [x29, #-16]
  4034a4:	adrp	x9, 420000 <arg_repair>
  4034a8:	add	x9, x9, #0xa
  4034ac:	mov	w8, #0x1                   	// #1
  4034b0:	strb	w8, [x9]
  4034b4:	adrp	x0, 404000 <start_target+0x2ac>
  4034b8:	add	x0, x0, #0x9bc
  4034bc:	mov	w8, wzr
  4034c0:	mov	w1, w8
  4034c4:	bl	401a50 <access@plt>
  4034c8:	cmp	w0, #0x0
  4034cc:	cset	w8, lt  // lt = tstop
  4034d0:	tbnz	w8, #0, 40355c <test_files+0x16c>
  4034d4:	mov	w8, #0x3                   	// #3
  4034d8:	stur	w8, [x29, #-20]
  4034dc:	str	wzr, [sp, #24]
  4034e0:	str	wzr, [sp, #20]
  4034e4:	ldr	w0, [sp, #20]
  4034e8:	bl	401850 <log_get_max_level_realm@plt>
  4034ec:	ldur	w8, [x29, #-20]
  4034f0:	and	w8, w8, #0x7
  4034f4:	cmp	w0, w8
  4034f8:	b.lt	403530 <test_files+0x140>  // b.tstop
  4034fc:	ldr	w8, [sp, #20]
  403500:	ldur	w9, [x29, #-20]
  403504:	orr	w0, w9, w8, lsl #10
  403508:	ldr	w1, [sp, #24]
  40350c:	ldr	x2, [sp, #8]
  403510:	mov	w3, #0x84                  	// #132
  403514:	adrp	x4, 404000 <start_target+0x2ac>
  403518:	add	x4, x4, #0x941
  40351c:	adrp	x5, 404000 <start_target+0x2ac>
  403520:	add	x5, x5, #0x9c7
  403524:	bl	401860 <log_internal_realm@plt>
  403528:	str	w0, [sp]
  40352c:	b	403544 <test_files+0x154>
  403530:	ldr	w0, [sp, #24]
  403534:	bl	401870 <abs@plt>
  403538:	mov	w8, wzr
  40353c:	subs	w8, w8, w0, uxtb
  403540:	str	w8, [sp]
  403544:	ldr	w8, [sp]
  403548:	str	w8, [sp, #16]
  40354c:	adrp	x9, 420000 <arg_repair>
  403550:	add	x9, x9, #0x9
  403554:	mov	w8, #0x1                   	// #1
  403558:	strb	w8, [x9]
  40355c:	adrp	x0, 404000 <start_target+0x2ac>
  403560:	add	x0, x0, #0xa39
  403564:	mov	w8, wzr
  403568:	mov	w1, w8
  40356c:	bl	401a50 <access@plt>
  403570:	cmp	w0, #0x0
  403574:	cset	w8, ge  // ge = tcont
  403578:	and	w8, w8, #0x1
  40357c:	adrp	x9, 420000 <arg_repair>
  403580:	add	x9, x9, #0xb
  403584:	strb	w8, [x9]
  403588:	ldp	x29, x30, [sp, #48]
  40358c:	add	sp, sp, #0x40
  403590:	ret

0000000000403594 <safe_fork>:
  403594:	sub	sp, sp, #0x30
  403598:	stp	x29, x30, [sp, #32]
  40359c:	add	x29, sp, #0x20
  4035a0:	mov	x8, xzr
  4035a4:	mov	x3, x8
  4035a8:	stur	x0, [x29, #-8]
  4035ac:	stur	w1, [x29, #-12]
  4035b0:	str	x2, [sp, #8]
  4035b4:	ldur	x0, [x29, #-8]
  4035b8:	ldur	w9, [x29, #-12]
  4035bc:	ldr	x4, [sp, #8]
  4035c0:	mov	x1, x3
  4035c4:	mov	x2, x8
  4035c8:	mov	w3, w9
  4035cc:	bl	401a60 <safe_fork_full@plt>
  4035d0:	ldp	x29, x30, [sp, #32]
  4035d4:	add	sp, sp, #0x30
  4035d8:	ret

00000000004035dc <fsck_progress_socket>:
  4035dc:	sub	sp, sp, #0xa0
  4035e0:	stp	x29, x30, [sp, #144]
  4035e4:	add	x29, sp, #0x90
  4035e8:	mov	w8, #0xffffffff            	// #-1
  4035ec:	mov	w9, #0x1                   	// #1
  4035f0:	mov	w10, wzr
  4035f4:	adrp	x11, 404000 <start_target+0x2ac>
  4035f8:	add	x11, x11, #0x340
  4035fc:	adrp	x12, 404000 <start_target+0x2ac>
  403600:	add	x12, x12, #0x400
  403604:	add	x12, x12, #0x3
  403608:	add	x6, x11, #0x2
  40360c:	stur	w8, [x29, #-8]
  403610:	mov	w0, w9
  403614:	mov	w1, w9
  403618:	mov	w2, w10
  40361c:	str	x11, [sp, #48]
  403620:	str	x12, [sp, #40]
  403624:	str	x6, [sp, #32]
  403628:	bl	401a70 <socket@plt>
  40362c:	stur	w0, [x29, #-8]
  403630:	ldur	w8, [x29, #-8]
  403634:	cmp	w8, #0x0
  403638:	cset	w8, ge  // ge = tcont
  40363c:	tbnz	w8, #0, 4036d4 <fsck_progress_socket+0xf8>
  403640:	mov	w8, #0x4                   	// #4
  403644:	stur	w8, [x29, #-12]
  403648:	bl	4018c0 <__errno_location@plt>
  40364c:	ldr	w8, [x0]
  403650:	stur	w8, [x29, #-16]
  403654:	stur	wzr, [x29, #-20]
  403658:	ldur	w0, [x29, #-20]
  40365c:	bl	401850 <log_get_max_level_realm@plt>
  403660:	ldur	w8, [x29, #-12]
  403664:	and	w8, w8, #0x7
  403668:	cmp	w0, w8
  40366c:	b.lt	4036a4 <fsck_progress_socket+0xc8>  // b.tstop
  403670:	ldur	w8, [x29, #-20]
  403674:	ldur	w9, [x29, #-12]
  403678:	orr	w0, w9, w8, lsl #10
  40367c:	ldur	w1, [x29, #-16]
  403680:	ldr	x2, [sp, #40]
  403684:	mov	w3, #0xef                  	// #239
  403688:	adrp	x4, 404000 <start_target+0x2ac>
  40368c:	add	x4, x4, #0xa52
  403690:	adrp	x5, 404000 <start_target+0x2ac>
  403694:	add	x5, x5, #0xa67
  403698:	bl	401860 <log_internal_realm@plt>
  40369c:	str	w0, [sp, #28]
  4036a0:	b	4036b8 <fsck_progress_socket+0xdc>
  4036a4:	ldur	w0, [x29, #-16]
  4036a8:	bl	401870 <abs@plt>
  4036ac:	mov	w8, wzr
  4036b0:	subs	w8, w8, w0, uxtb
  4036b4:	str	w8, [sp, #28]
  4036b8:	ldr	w8, [sp, #28]
  4036bc:	stur	w8, [x29, #-24]
  4036c0:	ldur	w8, [x29, #-24]
  4036c4:	stur	w8, [x29, #-4]
  4036c8:	mov	w8, #0x1                   	// #1
  4036cc:	stur	w8, [x29, #-28]
  4036d0:	b	4038c8 <fsck_progress_socket+0x2ec>
  4036d4:	ldur	w0, [x29, #-8]
  4036d8:	ldr	x8, [sp, #48]
  4036dc:	stur	x8, [x29, #-40]
  4036e0:	stur	x8, [x29, #-48]
  4036e4:	str	w0, [sp, #24]
  4036e8:	ldur	x8, [x29, #-48]
  4036ec:	ldrh	w9, [x8]
  4036f0:	cmp	w9, #0x1
  4036f4:	cset	w9, eq  // eq = none
  4036f8:	mov	w10, #0x1                   	// #1
  4036fc:	eor	w9, w9, #0x1
  403700:	eor	w9, w9, w10
  403704:	eor	w9, w9, w10
  403708:	and	w9, w9, #0x1
  40370c:	mov	w0, w9
  403710:	sxtw	x8, w0
  403714:	cbz	x8, 40373c <fsck_progress_socket+0x160>
  403718:	mov	w8, wzr
  40371c:	mov	w0, w8
  403720:	adrp	x1, 404000 <start_target+0x2ac>
  403724:	add	x1, x1, #0xa74
  403728:	ldr	x2, [sp, #40]
  40372c:	mov	w3, #0xf1                  	// #241
  403730:	adrp	x4, 404000 <start_target+0x2ac>
  403734:	add	x4, x4, #0xa8f
  403738:	bl	401990 <log_assert_failed_realm@plt>
  40373c:	ldur	x8, [x29, #-48]
  403740:	ldrb	w9, [x8, #2]
  403744:	cbnz	w9, 403764 <fsck_progress_socket+0x188>
  403748:	ldur	x8, [x29, #-48]
  40374c:	add	x0, x8, #0x3
  403750:	mov	x1, #0x6b                  	// #107
  403754:	bl	401a80 <strnlen@plt>
  403758:	add	x8, x0, #0x1
  40375c:	str	x8, [sp, #16]
  403760:	b	40377c <fsck_progress_socket+0x1a0>
  403764:	ldur	x8, [x29, #-48]
  403768:	add	x0, x8, #0x2
  40376c:	mov	x1, #0x6c                  	// #108
  403770:	bl	401a80 <strnlen@plt>
  403774:	add	x8, x0, #0x1
  403778:	str	x8, [sp, #16]
  40377c:	ldr	x8, [sp, #16]
  403780:	add	x8, x8, #0x2
  403784:	stur	x8, [x29, #-56]
  403788:	ldur	x8, [x29, #-56]
  40378c:	ldur	x1, [x29, #-40]
  403790:	ldr	w0, [sp, #24]
  403794:	mov	w2, w8
  403798:	bl	401a90 <connect@plt>
  40379c:	cmp	w0, #0x0
  4037a0:	cset	w8, ge  // ge = tcont
  4037a4:	tbnz	w8, #0, 4038a0 <fsck_progress_socket+0x2c4>
  4037a8:	mov	w8, #0x0                   	// #0
  4037ac:	sturb	w8, [x29, #-61]
  4037b0:	bl	4018c0 <__errno_location@plt>
  4037b4:	ldr	w8, [x0]
  4037b8:	cmp	w8, #0x2
  4037bc:	str	w8, [sp, #12]
  4037c0:	b.eq	4037e0 <fsck_progress_socket+0x204>  // b.none
  4037c4:	b	4037c8 <fsck_progress_socket+0x1ec>
  4037c8:	ldr	w8, [sp, #12]
  4037cc:	cmp	w8, #0x6f
  4037d0:	cset	w9, eq  // eq = none
  4037d4:	eor	w9, w9, #0x1
  4037d8:	tbnz	w9, #0, 4037ec <fsck_progress_socket+0x210>
  4037dc:	b	4037e0 <fsck_progress_socket+0x204>
  4037e0:	mov	w8, #0x1                   	// #1
  4037e4:	sturb	w8, [x29, #-61]
  4037e8:	b	4037ec <fsck_progress_socket+0x210>
  4037ec:	ldurb	w8, [x29, #-61]
  4037f0:	and	w8, w8, #0x1
  4037f4:	sturb	w8, [x29, #-62]
  4037f8:	ldurb	w8, [x29, #-62]
  4037fc:	mov	w9, #0x4                   	// #4
  403800:	mov	w10, #0x7                   	// #7
  403804:	tst	w8, #0x1
  403808:	csel	w8, w10, w9, ne  // ne = any
  40380c:	stur	w8, [x29, #-60]
  403810:	bl	4018c0 <__errno_location@plt>
  403814:	ldr	w8, [x0]
  403818:	stur	w8, [x29, #-68]
  40381c:	str	wzr, [sp, #72]
  403820:	ldr	w0, [sp, #72]
  403824:	bl	401850 <log_get_max_level_realm@plt>
  403828:	ldur	w8, [x29, #-60]
  40382c:	and	w8, w8, #0x7
  403830:	cmp	w0, w8
  403834:	b.lt	403870 <fsck_progress_socket+0x294>  // b.tstop
  403838:	ldr	w8, [sp, #72]
  40383c:	ldur	w9, [x29, #-60]
  403840:	orr	w0, w9, w8, lsl #10
  403844:	ldur	w1, [x29, #-68]
  403848:	ldr	x2, [sp, #40]
  40384c:	mov	w3, #0xf3                  	// #243
  403850:	adrp	x4, 404000 <start_target+0x2ac>
  403854:	add	x4, x4, #0xa52
  403858:	adrp	x5, 404000 <start_target+0x2ac>
  40385c:	add	x5, x5, #0xaae
  403860:	ldr	x6, [sp, #32]
  403864:	bl	401860 <log_internal_realm@plt>
  403868:	str	w0, [sp, #8]
  40386c:	b	403884 <fsck_progress_socket+0x2a8>
  403870:	ldur	w0, [x29, #-68]
  403874:	bl	401870 <abs@plt>
  403878:	mov	w8, wzr
  40387c:	subs	w8, w8, w0, uxtb
  403880:	str	w8, [sp, #8]
  403884:	ldr	w8, [sp, #8]
  403888:	str	w8, [sp, #68]
  40388c:	ldr	w8, [sp, #68]
  403890:	stur	w8, [x29, #-4]
  403894:	mov	w8, #0x1                   	// #1
  403898:	stur	w8, [x29, #-28]
  40389c:	b	4038c8 <fsck_progress_socket+0x2ec>
  4038a0:	ldur	w8, [x29, #-8]
  4038a4:	str	w8, [sp, #64]
  4038a8:	mov	w8, #0xffffffff            	// #-1
  4038ac:	stur	w8, [x29, #-8]
  4038b0:	ldr	w8, [sp, #64]
  4038b4:	str	w8, [sp, #60]
  4038b8:	ldr	w8, [sp, #60]
  4038bc:	stur	w8, [x29, #-4]
  4038c0:	mov	w8, #0x1                   	// #1
  4038c4:	stur	w8, [x29, #-28]
  4038c8:	sub	x0, x29, #0x8
  4038cc:	bl	404128 <closep>
  4038d0:	ldur	w0, [x29, #-4]
  4038d4:	ldp	x29, x30, [sp, #144]
  4038d8:	add	sp, sp, #0xa0
  4038dc:	ret

00000000004038e0 <isempty>:
  4038e0:	sub	sp, sp, #0x10
  4038e4:	str	x0, [sp, #8]
  4038e8:	ldr	x8, [sp, #8]
  4038ec:	mov	w9, #0x1                   	// #1
  4038f0:	str	w9, [sp, #4]
  4038f4:	cbz	x8, 403910 <isempty+0x30>
  4038f8:	ldr	x8, [sp, #8]
  4038fc:	ldrb	w9, [x8]
  403900:	cmp	w9, #0x0
  403904:	cset	w9, ne  // ne = any
  403908:	eor	w9, w9, #0x1
  40390c:	str	w9, [sp, #4]
  403910:	ldr	w8, [sp, #4]
  403914:	and	w0, w8, #0x1
  403918:	add	sp, sp, #0x10
  40391c:	ret

0000000000403920 <process_progress>:
  403920:	sub	sp, sp, #0xd0
  403924:	stp	x29, x30, [sp, #192]
  403928:	add	x29, sp, #0xc0
  40392c:	sub	x8, x29, #0x10
  403930:	mov	x9, xzr
  403934:	mov	w10, #0x0                   	// #0
  403938:	adrp	x11, 404000 <start_target+0x2ac>
  40393c:	add	x11, x11, #0x400
  403940:	add	x11, x11, #0x3
  403944:	adrp	x12, 404000 <start_target+0x2ac>
  403948:	add	x12, x12, #0xae6
  40394c:	stur	w0, [x29, #-8]
  403950:	str	x1, [x8]
  403954:	stur	x9, [x29, #-24]
  403958:	stur	xzr, [x29, #-32]
  40395c:	sturb	w10, [x29, #-33]
  403960:	stur	wzr, [x29, #-40]
  403964:	ldur	w10, [x29, #-8]
  403968:	cmp	w10, #0x0
  40396c:	cset	w10, ge  // ge = tcont
  403970:	str	x8, [sp, #32]
  403974:	str	x11, [sp, #24]
  403978:	str	x12, [sp, #16]
  40397c:	tbnz	w10, #0, 403990 <process_progress+0x70>
  403980:	stur	wzr, [x29, #-4]
  403984:	mov	w8, #0x1                   	// #1
  403988:	stur	w8, [x29, #-48]
  40398c:	b	403d3c <process_progress+0x41c>
  403990:	ldur	w0, [x29, #-8]
  403994:	adrp	x1, 404000 <start_target+0x2ac>
  403998:	add	x1, x1, #0xae4
  40399c:	bl	401aa0 <fdopen@plt>
  4039a0:	stur	x0, [x29, #-24]
  4039a4:	ldur	x8, [x29, #-24]
  4039a8:	cbnz	x8, 403a44 <process_progress+0x124>
  4039ac:	ldur	w0, [x29, #-8]
  4039b0:	bl	401970 <safe_close@plt>
  4039b4:	mov	w8, #0x7                   	// #7
  4039b8:	stur	w8, [x29, #-52]
  4039bc:	bl	4018c0 <__errno_location@plt>
  4039c0:	ldr	w8, [x0]
  4039c4:	stur	w8, [x29, #-56]
  4039c8:	stur	wzr, [x29, #-60]
  4039cc:	ldur	w0, [x29, #-60]
  4039d0:	bl	401850 <log_get_max_level_realm@plt>
  4039d4:	ldur	w8, [x29, #-52]
  4039d8:	and	w8, w8, #0x7
  4039dc:	cmp	w0, w8
  4039e0:	b.lt	403a14 <process_progress+0xf4>  // b.tstop
  4039e4:	ldur	w8, [x29, #-60]
  4039e8:	ldur	w9, [x29, #-52]
  4039ec:	orr	w0, w9, w8, lsl #10
  4039f0:	ldur	w1, [x29, #-56]
  4039f4:	ldr	x2, [sp, #24]
  4039f8:	mov	w3, #0xab                  	// #171
  4039fc:	ldr	x4, [sp, #16]
  403a00:	adrp	x5, 404000 <start_target+0x2ac>
  403a04:	add	x5, x5, #0xaf7
  403a08:	bl	401860 <log_internal_realm@plt>
  403a0c:	str	w0, [sp, #12]
  403a10:	b	403a28 <process_progress+0x108>
  403a14:	ldur	w0, [x29, #-56]
  403a18:	bl	401870 <abs@plt>
  403a1c:	mov	w8, wzr
  403a20:	subs	w8, w8, w0, uxtb
  403a24:	str	w8, [sp, #12]
  403a28:	ldr	w8, [sp, #12]
  403a2c:	stur	w8, [x29, #-64]
  403a30:	ldur	w8, [x29, #-64]
  403a34:	stur	w8, [x29, #-4]
  403a38:	mov	w8, #0x1                   	// #1
  403a3c:	stur	w8, [x29, #-48]
  403a40:	b	403d3c <process_progress+0x41c>
  403a44:	add	x5, sp, #0x60
  403a48:	mov	x8, xzr
  403a4c:	str	x8, [sp, #96]
  403a50:	ldur	x0, [x29, #-24]
  403a54:	adrp	x1, 404000 <start_target+0x2ac>
  403a58:	add	x1, x1, #0xb0e
  403a5c:	sub	x2, x29, #0x44
  403a60:	sub	x3, x29, #0x50
  403a64:	sub	x4, x29, #0x58
  403a68:	bl	401ab0 <__isoc99_fscanf@plt>
  403a6c:	cmp	w0, #0x4
  403a70:	b.eq	403bb4 <process_progress+0x294>  // b.none
  403a74:	ldur	x0, [x29, #-24]
  403a78:	bl	401ac0 <ferror@plt>
  403a7c:	cbz	w0, 403b08 <process_progress+0x1e8>
  403a80:	mov	w8, #0x4                   	// #4
  403a84:	str	w8, [sp, #76]
  403a88:	bl	4018c0 <__errno_location@plt>
  403a8c:	ldr	w8, [x0]
  403a90:	str	w8, [sp, #72]
  403a94:	str	wzr, [sp, #68]
  403a98:	ldr	w0, [sp, #68]
  403a9c:	bl	401850 <log_get_max_level_realm@plt>
  403aa0:	ldr	w8, [sp, #76]
  403aa4:	and	w8, w8, #0x7
  403aa8:	cmp	w0, w8
  403aac:	b.lt	403ae0 <process_progress+0x1c0>  // b.tstop
  403ab0:	ldr	w8, [sp, #68]
  403ab4:	ldr	w9, [sp, #76]
  403ab8:	orr	w0, w9, w8, lsl #10
  403abc:	ldr	w1, [sp, #72]
  403ac0:	ldr	x2, [sp, #24]
  403ac4:	mov	w3, #0xb8                  	// #184
  403ac8:	ldr	x4, [sp, #16]
  403acc:	adrp	x5, 404000 <start_target+0x2ac>
  403ad0:	add	x5, x5, #0xb1d
  403ad4:	bl	401860 <log_internal_realm@plt>
  403ad8:	str	w0, [sp, #8]
  403adc:	b	403af4 <process_progress+0x1d4>
  403ae0:	ldr	w0, [sp, #72]
  403ae4:	bl	401870 <abs@plt>
  403ae8:	mov	w8, wzr
  403aec:	subs	w8, w8, w0, uxtb
  403af0:	str	w8, [sp, #8]
  403af4:	ldr	w8, [sp, #8]
  403af8:	str	w8, [sp, #64]
  403afc:	ldr	w8, [sp, #64]
  403b00:	stur	w8, [x29, #-44]
  403b04:	b	403ba8 <process_progress+0x288>
  403b08:	ldur	x0, [x29, #-24]
  403b0c:	bl	401ad0 <feof@plt>
  403b10:	cbz	w0, 403b1c <process_progress+0x1fc>
  403b14:	stur	wzr, [x29, #-44]
  403b18:	b	403ba8 <process_progress+0x288>
  403b1c:	mov	w8, #0x4                   	// #4
  403b20:	str	w8, [sp, #60]
  403b24:	bl	4018c0 <__errno_location@plt>
  403b28:	ldr	w8, [x0]
  403b2c:	mov	w9, #0x40000000            	// #1073741824
  403b30:	orr	w8, w9, w8
  403b34:	str	w8, [sp, #56]
  403b38:	str	wzr, [sp, #52]
  403b3c:	ldr	w0, [sp, #52]
  403b40:	bl	401850 <log_get_max_level_realm@plt>
  403b44:	ldr	w8, [sp, #60]
  403b48:	and	w8, w8, #0x7
  403b4c:	cmp	w0, w8
  403b50:	b.lt	403b84 <process_progress+0x264>  // b.tstop
  403b54:	ldr	w8, [sp, #52]
  403b58:	ldr	w9, [sp, #60]
  403b5c:	orr	w0, w9, w8, lsl #10
  403b60:	ldr	w1, [sp, #56]
  403b64:	ldr	x2, [sp, #24]
  403b68:	mov	w3, #0xbc                  	// #188
  403b6c:	ldr	x4, [sp, #16]
  403b70:	adrp	x5, 404000 <start_target+0x2ac>
  403b74:	add	x5, x5, #0xb43
  403b78:	bl	401860 <log_internal_realm@plt>
  403b7c:	str	w0, [sp, #4]
  403b80:	b	403b98 <process_progress+0x278>
  403b84:	ldr	w0, [sp, #56]
  403b88:	bl	401870 <abs@plt>
  403b8c:	mov	w8, wzr
  403b90:	subs	w8, w8, w0, uxtb
  403b94:	str	w8, [sp, #4]
  403b98:	ldr	w8, [sp, #4]
  403b9c:	str	w8, [sp, #48]
  403ba0:	ldr	w8, [sp, #48]
  403ba4:	stur	w8, [x29, #-44]
  403ba8:	mov	w8, #0x2                   	// #2
  403bac:	stur	w8, [x29, #-48]
  403bb0:	b	403c88 <process_progress+0x368>
  403bb4:	ldurb	w8, [x29, #-33]
  403bb8:	tbnz	w8, #0, 403bf0 <process_progress+0x2d0>
  403bbc:	ldr	x8, [sp, #32]
  403bc0:	ldr	x0, [x8]
  403bc4:	bl	401ae0 <fileno@plt>
  403bc8:	mov	w1, #0x6                   	// #6
  403bcc:	bl	401af0 <flock@plt>
  403bd0:	cmp	w0, #0x0
  403bd4:	cset	w9, ge  // ge = tcont
  403bd8:	tbnz	w9, #0, 403be8 <process_progress+0x2c8>
  403bdc:	mov	w8, #0x3                   	// #3
  403be0:	stur	w8, [x29, #-48]
  403be4:	b	403c88 <process_progress+0x368>
  403be8:	mov	w8, #0x1                   	// #1
  403bec:	sturb	w8, [x29, #-33]
  403bf0:	mov	w0, #0x1                   	// #1
  403bf4:	bl	401b00 <now@plt>
  403bf8:	str	x0, [sp, #80]
  403bfc:	ldur	x8, [x29, #-32]
  403c00:	mov	x9, #0xc350                	// #50000
  403c04:	add	x8, x8, x9
  403c08:	ldr	x9, [sp, #80]
  403c0c:	cmp	x8, x9
  403c10:	b.ls	403c20 <process_progress+0x300>  // b.plast
  403c14:	mov	w8, #0x3                   	// #3
  403c18:	stur	w8, [x29, #-48]
  403c1c:	b	403c88 <process_progress+0x368>
  403c20:	ldr	x8, [sp, #80]
  403c24:	stur	x8, [x29, #-32]
  403c28:	ldur	w0, [x29, #-68]
  403c2c:	ldur	x1, [x29, #-80]
  403c30:	ldur	x2, [x29, #-88]
  403c34:	bl	404150 <percent>
  403c38:	str	d0, [sp, #88]
  403c3c:	ldr	x8, [sp, #32]
  403c40:	ldr	x0, [x8]
  403c44:	ldr	x2, [sp, #96]
  403c48:	ldr	d0, [sp, #88]
  403c4c:	adrp	x1, 404000 <start_target+0x2ac>
  403c50:	add	x1, x1, #0xb66
  403c54:	sub	x3, x29, #0x48
  403c58:	bl	401b10 <fprintf@plt>
  403c5c:	ldr	x8, [sp, #32]
  403c60:	ldr	x9, [x8]
  403c64:	mov	x0, x9
  403c68:	bl	401b20 <fflush@plt>
  403c6c:	ldur	w10, [x29, #-72]
  403c70:	ldur	w11, [x29, #-40]
  403c74:	cmp	w10, w11
  403c78:	b.le	403c84 <process_progress+0x364>
  403c7c:	ldur	w8, [x29, #-72]
  403c80:	stur	w8, [x29, #-40]
  403c84:	stur	wzr, [x29, #-48]
  403c88:	add	x0, sp, #0x60
  403c8c:	bl	402f68 <freep>
  403c90:	ldur	w8, [x29, #-48]
  403c94:	str	w8, [sp]
  403c98:	cbz	w8, 403cb4 <process_progress+0x394>
  403c9c:	b	403ca0 <process_progress+0x380>
  403ca0:	ldr	w8, [sp]
  403ca4:	cmp	w8, #0x2
  403ca8:	b.eq	403cb8 <process_progress+0x398>  // b.none
  403cac:	b	403cb0 <process_progress+0x390>
  403cb0:	b	403a44 <process_progress+0x124>
  403cb4:	b	403a44 <process_progress+0x124>
  403cb8:	ldur	w8, [x29, #-40]
  403cbc:	cmp	w8, #0x0
  403cc0:	cset	w8, le
  403cc4:	tbnz	w8, #0, 403d2c <process_progress+0x40c>
  403cc8:	ldr	x8, [sp, #32]
  403ccc:	ldr	x1, [x8]
  403cd0:	mov	w0, #0xd                   	// #13
  403cd4:	bl	401b30 <fputc@plt>
  403cd8:	str	wzr, [sp, #44]
  403cdc:	ldr	w8, [sp, #44]
  403ce0:	ldur	w9, [x29, #-40]
  403ce4:	cmp	w8, w9
  403ce8:	b.cs	403d0c <process_progress+0x3ec>  // b.hs, b.nlast
  403cec:	ldr	x8, [sp, #32]
  403cf0:	ldr	x1, [x8]
  403cf4:	mov	w0, #0x20                  	// #32
  403cf8:	bl	401b30 <fputc@plt>
  403cfc:	ldr	w8, [sp, #44]
  403d00:	add	w8, w8, #0x1
  403d04:	str	w8, [sp, #44]
  403d08:	b	403cdc <process_progress+0x3bc>
  403d0c:	ldr	x8, [sp, #32]
  403d10:	ldr	x1, [x8]
  403d14:	mov	w0, #0xd                   	// #13
  403d18:	bl	401b30 <fputc@plt>
  403d1c:	ldr	x8, [sp, #32]
  403d20:	ldr	x9, [x8]
  403d24:	mov	x0, x9
  403d28:	bl	401b20 <fflush@plt>
  403d2c:	ldur	w8, [x29, #-44]
  403d30:	stur	w8, [x29, #-4]
  403d34:	mov	w8, #0x1                   	// #1
  403d38:	stur	w8, [x29, #-48]
  403d3c:	sub	x0, x29, #0x18
  403d40:	bl	402f90 <fclosep>
  403d44:	ldur	w0, [x29, #-4]
  403d48:	ldp	x29, x30, [sp, #192]
  403d4c:	add	sp, sp, #0xd0
  403d50:	ret

0000000000403d54 <start_target>:
  403d54:	sub	sp, sp, #0xc0
  403d58:	stp	x29, x30, [sp, #176]
  403d5c:	add	x29, sp, #0xb0
  403d60:	mov	x8, xzr
  403d64:	adrp	x9, 404000 <start_target+0x2ac>
  403d68:	add	x9, x9, #0x400
  403d6c:	add	x9, x9, #0x3
  403d70:	adrp	x10, 404000 <start_target+0x2ac>
  403d74:	add	x10, x10, #0xbbc
  403d78:	stur	x0, [x29, #-8]
  403d7c:	stur	x1, [x29, #-16]
  403d80:	stur	xzr, [x29, #-40]
  403d84:	stur	xzr, [x29, #-32]
  403d88:	stur	xzr, [x29, #-24]
  403d8c:	stur	x8, [x29, #-48]
  403d90:	str	x9, [sp, #64]
  403d94:	str	x10, [sp, #56]
  403d98:	ldur	x8, [x29, #-8]
  403d9c:	cmp	x8, #0x0
  403da0:	cset	w9, ne  // ne = any
  403da4:	mov	w10, #0x1                   	// #1
  403da8:	eor	w9, w9, #0x1
  403dac:	eor	w9, w9, w10
  403db0:	eor	w9, w9, w10
  403db4:	and	w9, w9, #0x1
  403db8:	mov	w0, w9
  403dbc:	sxtw	x8, w0
  403dc0:	cbz	x8, 403de8 <start_target+0x94>
  403dc4:	mov	w8, wzr
  403dc8:	mov	w0, w8
  403dcc:	adrp	x1, 404000 <start_target+0x2ac>
  403dd0:	add	x1, x1, #0xb87
  403dd4:	ldr	x2, [sp, #64]
  403dd8:	mov	w3, #0x2f                  	// #47
  403ddc:	adrp	x4, 404000 <start_target+0x2ac>
  403de0:	add	x4, x4, #0xb8e
  403de4:	bl	401990 <log_assert_failed_realm@plt>
  403de8:	sub	x0, x29, #0x30
  403dec:	bl	401b40 <bus_connect_system_systemd@plt>
  403df0:	stur	w0, [x29, #-52]
  403df4:	ldur	w8, [x29, #-52]
  403df8:	cmp	w8, #0x0
  403dfc:	cset	w8, ge  // ge = tcont
  403e00:	tbnz	w8, #0, 403e88 <start_target+0x134>
  403e04:	mov	w8, #0x3                   	// #3
  403e08:	stur	w8, [x29, #-56]
  403e0c:	ldur	w8, [x29, #-52]
  403e10:	stur	w8, [x29, #-60]
  403e14:	stur	wzr, [x29, #-64]
  403e18:	ldur	w0, [x29, #-64]
  403e1c:	bl	401850 <log_get_max_level_realm@plt>
  403e20:	ldur	w8, [x29, #-56]
  403e24:	and	w8, w8, #0x7
  403e28:	cmp	w0, w8
  403e2c:	b.lt	403e60 <start_target+0x10c>  // b.tstop
  403e30:	ldur	w8, [x29, #-64]
  403e34:	ldur	w9, [x29, #-56]
  403e38:	orr	w0, w9, w8, lsl #10
  403e3c:	ldur	w1, [x29, #-60]
  403e40:	ldr	x2, [sp, #64]
  403e44:	mov	w3, #0x33                  	// #51
  403e48:	ldr	x4, [sp, #56]
  403e4c:	adrp	x5, 404000 <start_target+0x2ac>
  403e50:	add	x5, x5, #0xbc9
  403e54:	bl	401860 <log_internal_realm@plt>
  403e58:	str	w0, [sp, #52]
  403e5c:	b	403e74 <start_target+0x120>
  403e60:	ldur	w0, [x29, #-60]
  403e64:	bl	401870 <abs@plt>
  403e68:	mov	w8, wzr
  403e6c:	subs	w8, w8, w0, uxtb
  403e70:	str	w8, [sp, #52]
  403e74:	ldr	w8, [sp, #52]
  403e78:	stur	w8, [x29, #-68]
  403e7c:	mov	w8, #0x1                   	// #1
  403e80:	stur	w8, [x29, #-72]
  403e84:	b	404034 <start_target+0x2e0>
  403e88:	mov	w8, #0x6                   	// #6
  403e8c:	stur	w8, [x29, #-76]
  403e90:	stur	wzr, [x29, #-80]
  403e94:	stur	wzr, [x29, #-84]
  403e98:	ldur	w0, [x29, #-84]
  403e9c:	bl	401850 <log_get_max_level_realm@plt>
  403ea0:	ldur	w8, [x29, #-76]
  403ea4:	and	w8, w8, #0x7
  403ea8:	cmp	w0, w8
  403eac:	b.lt	403ee4 <start_target+0x190>  // b.tstop
  403eb0:	ldur	w8, [x29, #-84]
  403eb4:	ldur	w9, [x29, #-76]
  403eb8:	orr	w0, w9, w8, lsl #10
  403ebc:	ldur	w1, [x29, #-80]
  403ec0:	ldur	x6, [x29, #-8]
  403ec4:	ldr	x2, [sp, #64]
  403ec8:	mov	w3, #0x37                  	// #55
  403ecc:	ldr	x4, [sp, #56]
  403ed0:	adrp	x5, 404000 <start_target+0x2ac>
  403ed4:	add	x5, x5, #0xbec
  403ed8:	bl	401860 <log_internal_realm@plt>
  403edc:	str	w0, [sp, #48]
  403ee0:	b	403ef8 <start_target+0x1a4>
  403ee4:	ldur	w0, [x29, #-80]
  403ee8:	bl	401870 <abs@plt>
  403eec:	mov	w8, wzr
  403ef0:	subs	w8, w8, w0, uxtb
  403ef4:	str	w8, [sp, #48]
  403ef8:	ldr	w8, [sp, #48]
  403efc:	str	w8, [sp, #88]
  403f00:	ldur	x0, [x29, #-48]
  403f04:	ldur	x9, [x29, #-8]
  403f08:	ldur	x10, [x29, #-16]
  403f0c:	adrp	x1, 404000 <start_target+0x2ac>
  403f10:	add	x1, x1, #0xc0d
  403f14:	adrp	x2, 404000 <start_target+0x2ac>
  403f18:	add	x2, x2, #0xc26
  403f1c:	adrp	x3, 404000 <start_target+0x2ac>
  403f20:	add	x3, x3, #0xc40
  403f24:	adrp	x4, 404000 <start_target+0x2ac>
  403f28:	add	x4, x4, #0xc61
  403f2c:	sub	x5, x29, #0x28
  403f30:	mov	x11, xzr
  403f34:	mov	x6, x11
  403f38:	adrp	x7, 404000 <start_target+0x2ac>
  403f3c:	add	x7, x7, #0xc72
  403f40:	mov	x11, sp
  403f44:	adrp	x12, 404000 <start_target+0x2ac>
  403f48:	add	x12, x12, #0xc76
  403f4c:	str	x12, [x11]
  403f50:	mov	x11, sp
  403f54:	str	x9, [x11, #8]
  403f58:	mov	x9, sp
  403f5c:	str	x10, [x9, #16]
  403f60:	bl	401b50 <sd_bus_call_method@plt>
  403f64:	stur	w0, [x29, #-52]
  403f68:	ldur	w8, [x29, #-52]
  403f6c:	cmp	w8, #0x0
  403f70:	cset	w8, ge  // ge = tcont
  403f74:	tbnz	w8, #0, 404030 <start_target+0x2dc>
  403f78:	sub	x0, x29, #0x28
  403f7c:	adrp	x1, 404000 <start_target+0x2ac>
  403f80:	add	x1, x1, #0xc83
  403f84:	bl	401b60 <sd_bus_error_has_name@plt>
  403f88:	cbnz	w0, 404030 <start_target+0x2dc>
  403f8c:	mov	w8, #0x3                   	// #3
  403f90:	str	w8, [sp, #84]
  403f94:	str	wzr, [sp, #80]
  403f98:	str	wzr, [sp, #76]
  403f9c:	ldr	w0, [sp, #76]
  403fa0:	bl	401850 <log_get_max_level_realm@plt>
  403fa4:	ldr	w8, [sp, #84]
  403fa8:	and	w8, w8, #0x7
  403fac:	cmp	w0, w8
  403fb0:	b.lt	404014 <start_target+0x2c0>  // b.tstop
  403fb4:	ldr	w8, [sp, #76]
  403fb8:	ldr	w9, [sp, #84]
  403fbc:	orr	w0, w9, w8, lsl #10
  403fc0:	ldr	w1, [sp, #80]
  403fc4:	ldur	w8, [x29, #-52]
  403fc8:	sub	x10, x29, #0x28
  403fcc:	str	w0, [sp, #44]
  403fd0:	mov	x0, x10
  403fd4:	str	w1, [sp, #40]
  403fd8:	mov	w1, w8
  403fdc:	bl	401b70 <bus_error_message@plt>
  403fe0:	ldr	w8, [sp, #44]
  403fe4:	str	x0, [sp, #32]
  403fe8:	mov	w0, w8
  403fec:	ldr	w1, [sp, #40]
  403ff0:	ldr	x2, [sp, #64]
  403ff4:	mov	w3, #0x45                  	// #69
  403ff8:	ldr	x4, [sp, #56]
  403ffc:	adrp	x5, 404000 <start_target+0x2ac>
  404000:	add	x5, x5, #0xca6
  404004:	ldr	x6, [sp, #32]
  404008:	bl	401860 <log_internal_realm@plt>
  40400c:	str	w0, [sp, #28]
  404010:	b	404028 <start_target+0x2d4>
  404014:	ldr	w0, [sp, #80]
  404018:	bl	401870 <abs@plt>
  40401c:	mov	w8, wzr
  404020:	subs	w8, w8, w0, uxtb
  404024:	str	w8, [sp, #28]
  404028:	ldr	w8, [sp, #28]
  40402c:	str	w8, [sp, #72]
  404030:	stur	wzr, [x29, #-72]
  404034:	sub	x0, x29, #0x30
  404038:	bl	404210 <sd_bus_flush_close_unrefp>
  40403c:	sub	x0, x29, #0x28
  404040:	bl	401b80 <sd_bus_error_free@plt>
  404044:	ldp	x29, x30, [sp, #176]
  404048:	add	sp, sp, #0xc0
  40404c:	ret

0000000000404050 <proc_cmdline_value_missing>:
  404050:	sub	sp, sp, #0x50
  404054:	stp	x29, x30, [sp, #64]
  404058:	add	x29, sp, #0x40
  40405c:	adrp	x8, 404000 <start_target+0x2ac>
  404060:	add	x8, x8, #0x8c1
  404064:	add	x2, x8, #0x3
  404068:	stur	x0, [x29, #-16]
  40406c:	stur	x1, [x29, #-24]
  404070:	ldur	x8, [x29, #-24]
  404074:	str	x2, [sp, #16]
  404078:	cbnz	x8, 404108 <proc_cmdline_value_missing+0xb8>
  40407c:	mov	w8, #0x4                   	// #4
  404080:	stur	w8, [x29, #-28]
  404084:	str	wzr, [sp, #32]
  404088:	str	wzr, [sp, #28]
  40408c:	ldr	w0, [sp, #28]
  404090:	bl	401850 <log_get_max_level_realm@plt>
  404094:	ldur	w8, [x29, #-28]
  404098:	and	w8, w8, #0x7
  40409c:	cmp	w0, w8
  4040a0:	b.lt	4040dc <proc_cmdline_value_missing+0x8c>  // b.tstop
  4040a4:	ldr	w8, [sp, #28]
  4040a8:	ldur	w9, [x29, #-28]
  4040ac:	orr	w0, w9, w8, lsl #10
  4040b0:	ldr	w1, [sp, #32]
  4040b4:	ldur	x6, [x29, #-16]
  4040b8:	ldr	x2, [sp, #16]
  4040bc:	mov	w3, #0x21                  	// #33
  4040c0:	adrp	x4, 404000 <start_target+0x2ac>
  4040c4:	add	x4, x4, #0x8dd
  4040c8:	adrp	x5, 404000 <start_target+0x2ac>
  4040cc:	add	x5, x5, #0x8f8
  4040d0:	bl	401860 <log_internal_realm@plt>
  4040d4:	str	w0, [sp, #12]
  4040d8:	b	4040f0 <proc_cmdline_value_missing+0xa0>
  4040dc:	ldr	w0, [sp, #32]
  4040e0:	bl	401870 <abs@plt>
  4040e4:	mov	w8, wzr
  4040e8:	subs	w8, w8, w0, uxtb
  4040ec:	str	w8, [sp, #12]
  4040f0:	ldr	w8, [sp, #12]
  4040f4:	str	w8, [sp, #24]
  4040f8:	mov	w8, #0x1                   	// #1
  4040fc:	and	w8, w8, #0x1
  404100:	sturb	w8, [x29, #-1]
  404104:	b	404114 <proc_cmdline_value_missing+0xc4>
  404108:	mov	w8, wzr
  40410c:	and	w8, w8, #0x1
  404110:	sturb	w8, [x29, #-1]
  404114:	ldurb	w8, [x29, #-1]
  404118:	and	w0, w8, #0x1
  40411c:	ldp	x29, x30, [sp, #64]
  404120:	add	sp, sp, #0x50
  404124:	ret

0000000000404128 <closep>:
  404128:	sub	sp, sp, #0x20
  40412c:	stp	x29, x30, [sp, #16]
  404130:	add	x29, sp, #0x10
  404134:	str	x0, [sp, #8]
  404138:	ldr	x8, [sp, #8]
  40413c:	ldr	w0, [x8]
  404140:	bl	401970 <safe_close@plt>
  404144:	ldp	x29, x30, [sp, #16]
  404148:	add	sp, sp, #0x20
  40414c:	ret

0000000000404150 <percent>:
  404150:	sub	sp, sp, #0x30
  404154:	adrp	x8, 404000 <start_target+0x2ac>
  404158:	add	x8, x8, #0x3e0
  40415c:	str	w0, [sp, #36]
  404160:	str	x1, [sp, #24]
  404164:	str	x2, [sp, #16]
  404168:	ldr	w9, [sp, #36]
  40416c:	cmp	w9, #0x0
  404170:	cset	w9, gt
  404174:	str	x8, [sp, #8]
  404178:	tbnz	w9, #0, 404188 <percent+0x38>
  40417c:	fmov	d0, xzr
  404180:	str	d0, [sp, #40]
  404184:	b	404204 <percent+0xb4>
  404188:	ldr	w8, [sp, #36]
  40418c:	mov	w9, w8
  404190:	cmp	x9, #0x6
  404194:	b.cs	4041a0 <percent+0x50>  // b.hs, b.nlast
  404198:	ldr	x8, [sp, #16]
  40419c:	cbnz	x8, 4041b0 <percent+0x60>
  4041a0:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  4041a4:	fmov	d0, x8
  4041a8:	str	d0, [sp, #40]
  4041ac:	b	404204 <percent+0xb4>
  4041b0:	ldr	w8, [sp, #36]
  4041b4:	subs	w8, w8, #0x1
  4041b8:	ldr	x9, [sp, #8]
  4041bc:	ldr	w8, [x9, w8, sxtw #2]
  4041c0:	scvtf	d0, w8
  4041c4:	ldrsw	x10, [sp, #36]
  4041c8:	ldr	w8, [x9, x10, lsl #2]
  4041cc:	scvtf	d1, w8
  4041d0:	ldr	w8, [sp, #36]
  4041d4:	subs	w8, w8, #0x1
  4041d8:	ldr	w8, [x9, w8, sxtw #2]
  4041dc:	scvtf	d2, w8
  4041e0:	fsub	d1, d1, d2
  4041e4:	ldr	x10, [sp, #24]
  4041e8:	ucvtf	d2, x10
  4041ec:	fmul	d1, d1, d2
  4041f0:	ldr	x10, [sp, #16]
  4041f4:	ucvtf	d2, x10
  4041f8:	fdiv	d1, d1, d2
  4041fc:	fadd	d0, d0, d1
  404200:	str	d0, [sp, #40]
  404204:	ldr	d0, [sp, #40]
  404208:	add	sp, sp, #0x30
  40420c:	ret

0000000000404210 <sd_bus_flush_close_unrefp>:
  404210:	sub	sp, sp, #0x20
  404214:	stp	x29, x30, [sp, #16]
  404218:	add	x29, sp, #0x10
  40421c:	str	x0, [sp, #8]
  404220:	ldr	x8, [sp, #8]
  404224:	ldr	x8, [x8]
  404228:	cbz	x8, 404238 <sd_bus_flush_close_unrefp+0x28>
  40422c:	ldr	x8, [sp, #8]
  404230:	ldr	x0, [x8]
  404234:	bl	401b90 <sd_bus_flush_close_unref@plt>
  404238:	ldp	x29, x30, [sp, #16]
  40423c:	add	sp, sp, #0x20
  404240:	ret

0000000000404244 <ALIGN_TO>:
  404244:	sub	sp, sp, #0x10
  404248:	str	x0, [sp, #8]
  40424c:	str	x1, [sp]
  404250:	ldr	x8, [sp, #8]
  404254:	ldr	x9, [sp]
  404258:	add	x8, x8, x9
  40425c:	subs	x8, x8, #0x1
  404260:	ldr	x9, [sp]
  404264:	subs	x9, x9, #0x1
  404268:	bic	x0, x8, x9
  40426c:	add	sp, sp, #0x10
  404270:	ret
  404274:	udf	#0

0000000000404278 <__libc_csu_init>:
  404278:	stp	x29, x30, [sp, #-64]!
  40427c:	mov	x29, sp
  404280:	stp	x19, x20, [sp, #16]
  404284:	adrp	x20, 41f000 <__FRAME_END__+0x1a238>
  404288:	add	x20, x20, #0xbb8
  40428c:	stp	x21, x22, [sp, #32]
  404290:	adrp	x21, 41f000 <__FRAME_END__+0x1a238>
  404294:	add	x21, x21, #0xbb0
  404298:	sub	x20, x20, x21
  40429c:	mov	w22, w0
  4042a0:	stp	x23, x24, [sp, #48]
  4042a4:	mov	x23, x1
  4042a8:	mov	x24, x2
  4042ac:	bl	401798 <_init>
  4042b0:	cmp	xzr, x20, asr #3
  4042b4:	b.eq	4042e0 <__libc_csu_init+0x68>  // b.none
  4042b8:	asr	x20, x20, #3
  4042bc:	mov	x19, #0x0                   	// #0
  4042c0:	ldr	x3, [x21, x19, lsl #3]
  4042c4:	mov	x2, x24
  4042c8:	add	x19, x19, #0x1
  4042cc:	mov	x1, x23
  4042d0:	mov	w0, w22
  4042d4:	blr	x3
  4042d8:	cmp	x20, x19
  4042dc:	b.ne	4042c0 <__libc_csu_init+0x48>  // b.any
  4042e0:	ldp	x19, x20, [sp, #16]
  4042e4:	ldp	x21, x22, [sp, #32]
  4042e8:	ldp	x23, x24, [sp, #48]
  4042ec:	ldp	x29, x30, [sp], #64
  4042f0:	ret
  4042f4:	nop

00000000004042f8 <__libc_csu_fini>:
  4042f8:	ret
  4042fc:	udf	#0

0000000000404300 <stat64>:
  404300:	mov	x2, x1
  404304:	mov	x1, x0
  404308:	mov	w0, #0x0                   	// #0
  40430c:	b	401ba0 <__xstat64@plt>

Disassembly of section .fini:

0000000000404310 <_fini>:
  404310:	stp	x29, x30, [sp, #-16]!
  404314:	mov	x29, sp
  404318:	ldp	x29, x30, [sp], #16
  40431c:	ret
