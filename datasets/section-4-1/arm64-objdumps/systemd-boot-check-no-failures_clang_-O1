
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-boot-check-no-failures_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

00000000002111c0 <_start>:
  2111c0:	mov	x29, #0x0                   	// #0
  2111c4:	mov	x30, #0x0                   	// #0
  2111c8:	mov	x5, x0
  2111cc:	ldr	x1, [sp]
  2111d0:	add	x2, sp, #0x8
  2111d4:	mov	x6, sp
  2111d8:	movz	x0, #0x0, lsl #48
  2111dc:	movk	x0, #0x0, lsl #32
  2111e0:	movk	x0, #0x21, lsl #16
  2111e4:	movk	x0, #0x1310
  2111e8:	movz	x3, #0x0, lsl #48
  2111ec:	movk	x3, #0x0, lsl #32
  2111f0:	movk	x3, #0x21, lsl #16
  2111f4:	movk	x3, #0x17c8
  2111f8:	movz	x4, #0x0, lsl #48
  2111fc:	movk	x4, #0x0, lsl #32
  211200:	movk	x4, #0x21, lsl #16
  211204:	movk	x4, #0x1848
  211208:	bl	211890 <__libc_start_main@plt>
  21120c:	bl	2118a0 <abort@plt>

0000000000211210 <call_weak_fn>:
  211210:	adrp	x0, 221000 <colors_enabled@plt+0xf5f0>
  211214:	ldr	x0, [x0, #3072]
  211218:	cbz	x0, 211220 <call_weak_fn+0x10>
  21121c:	b	2118b0 <__gmon_start__@plt>
  211220:	ret

0000000000211224 <deregister_tm_clones>:
  211224:	adrp	x0, 231000 <_DYNAMIC+0xf5d0>
  211228:	add	x0, x0, #0xcf8
  21122c:	adrp	x1, 231000 <_DYNAMIC+0xf5d0>
  211230:	add	x1, x1, #0xcf8
  211234:	cmp	x0, x1
  211238:	b.eq	21126c <deregister_tm_clones+0x48>  // b.none
  21123c:	stp	x29, x30, [sp, #-32]!
  211240:	mov	x29, sp
  211244:	adrp	x0, 200000 <bus_standard_errors_copy_0-0xdf0>
  211248:	ldr	x0, [x0, #3552]
  21124c:	str	x0, [sp, #24]
  211250:	mov	x1, x0
  211254:	cbz	x1, 211264 <deregister_tm_clones+0x40>
  211258:	adrp	x0, 231000 <_DYNAMIC+0xf5d0>
  21125c:	add	x0, x0, #0xcf8
  211260:	blr	x1
  211264:	ldp	x29, x30, [sp], #32
  211268:	ret
  21126c:	ret

0000000000211270 <register_tm_clones>:
  211270:	adrp	x0, 231000 <_DYNAMIC+0xf5d0>
  211274:	add	x0, x0, #0xcf8
  211278:	adrp	x1, 231000 <_DYNAMIC+0xf5d0>
  21127c:	add	x1, x1, #0xcf8
  211280:	sub	x0, x0, x1
  211284:	lsr	x1, x0, #63
  211288:	add	x0, x1, x0, asr #3
  21128c:	cmp	xzr, x0, asr #1
  211290:	b.eq	2112c8 <register_tm_clones+0x58>  // b.none
  211294:	stp	x29, x30, [sp, #-32]!
  211298:	mov	x29, sp
  21129c:	asr	x1, x0, #1
  2112a0:	adrp	x0, 200000 <bus_standard_errors_copy_0-0xdf0>
  2112a4:	ldr	x0, [x0, #3560]
  2112a8:	str	x0, [sp, #24]
  2112ac:	mov	x2, x0
  2112b0:	cbz	x2, 2112c0 <register_tm_clones+0x50>
  2112b4:	adrp	x0, 231000 <_DYNAMIC+0xf5d0>
  2112b8:	add	x0, x0, #0xcf8
  2112bc:	blr	x2
  2112c0:	ldp	x29, x30, [sp], #32
  2112c4:	ret
  2112c8:	ret

00000000002112cc <__do_global_dtors_aux>:
  2112cc:	adrp	x0, 231000 <_DYNAMIC+0xf5d0>
  2112d0:	ldrb	w0, [x0, #3320]
  2112d4:	cbnz	w0, 2112f8 <__do_global_dtors_aux+0x2c>
  2112d8:	stp	x29, x30, [sp, #-16]!
  2112dc:	mov	x29, sp
  2112e0:	bl	211224 <deregister_tm_clones>
  2112e4:	adrp	x0, 231000 <_DYNAMIC+0xf5d0>
  2112e8:	mov	w1, #0x1                   	// #1
  2112ec:	strb	w1, [x0, #3320]
  2112f0:	ldp	x29, x30, [sp], #16
  2112f4:	ret
  2112f8:	ret

00000000002112fc <frame_dummy>:
  2112fc:	stp	x29, x30, [sp, #-16]!
  211300:	mov	x29, sp
  211304:	bl	211270 <register_tm_clones>
  211308:	ldp	x29, x30, [sp], #16
  21130c:	ret

0000000000211310 <main>:
  211310:	stp	x29, x30, [sp, #-32]!
  211314:	stp	x20, x19, [sp, #16]
  211318:	mov	x29, sp
  21131c:	mov	x19, x1
  211320:	mov	w20, w0
  211324:	bl	211360 <save_argc_argv>
  211328:	mov	w0, w20
  21132c:	mov	x1, x19
  211330:	bl	211374 <run>
  211334:	mov	w19, w0
  211338:	bl	2118c0 <ask_password_agent_close@plt>
  21133c:	bl	2118d0 <polkit_agent_close@plt>
  211340:	bl	2118e0 <pager_close@plt>
  211344:	bl	2118f0 <mac_selinux_finish@plt>
  211348:	bl	211554 <static_destruct>
  21134c:	cmp	w19, #0x0
  211350:	csinc	w0, w19, wzr, ge  // ge = tcont
  211354:	ldp	x20, x19, [sp, #16]
  211358:	ldp	x29, x30, [sp], #32
  21135c:	ret

0000000000211360 <save_argc_argv>:
  211360:	adrp	x8, 231000 <_DYNAMIC+0xf5d0>
  211364:	adrp	x9, 231000 <_DYNAMIC+0xf5d0>
  211368:	str	w0, [x8, #3328]
  21136c:	str	x1, [x9, #3336]
  211370:	ret

0000000000211374 <run>:
  211374:	sub	sp, sp, #0x50
  211378:	stp	x20, x19, [sp, #64]
  21137c:	mov	w20, w0
  211380:	mov	w0, wzr
  211384:	stp	x29, x30, [sp, #48]
  211388:	add	x29, sp, #0x30
  21138c:	mov	x19, x1
  211390:	stp	xzr, xzr, [sp, #24]
  211394:	str	xzr, [sp, #40]
  211398:	str	xzr, [sp, #16]
  21139c:	bl	211900 <log_parse_environment_realm@plt>
  2113a0:	bl	211910 <log_open@plt>
  2113a4:	mov	w0, w20
  2113a8:	mov	x1, x19
  2113ac:	bl	2115d0 <parse_argv>
  2113b0:	cmp	w0, #0x1
  2113b4:	b.lt	211444 <run+0xd0>  // b.tstop
  2113b8:	add	x0, sp, #0x10
  2113bc:	bl	211920 <sd_bus_open_system@plt>
  2113c0:	tbnz	w0, #31, 21144c <run+0xd8>
  2113c4:	ldr	x0, [sp, #16]
  2113c8:	adrp	x1, 200000 <bus_standard_errors_copy_0-0xdf0>
  2113cc:	adrp	x2, 200000 <bus_standard_errors_copy_0-0xdf0>
  2113d0:	adrp	x3, 200000 <bus_standard_errors_copy_0-0xdf0>
  2113d4:	adrp	x4, 200000 <bus_standard_errors_copy_0-0xdf0>
  2113d8:	add	x1, x1, #0xea2
  2113dc:	add	x2, x2, #0xef6
  2113e0:	add	x3, x3, #0xe5d
  2113e4:	add	x4, x4, #0xfc9
  2113e8:	add	x5, sp, #0x18
  2113ec:	add	x7, sp, #0xc
  2113f0:	mov	w6, #0x75                  	// #117
  2113f4:	bl	211930 <sd_bus_get_property_trivial@plt>
  2113f8:	tbnz	w0, #31, 211490 <run+0x11c>
  2113fc:	ldr	w19, [sp, #12]
  211400:	mov	w0, wzr
  211404:	bl	211940 <log_get_max_level_realm@plt>
  211408:	cbz	w19, 2114f4 <run+0x180>
  21140c:	cmp	w0, #0x5
  211410:	b.lt	211524 <run+0x1b0>  // b.tstop
  211414:	adrp	x2, 200000 <bus_standard_errors_copy_0-0xdf0>
  211418:	adrp	x4, 200000 <bus_standard_errors_copy_0-0xdf0>
  21141c:	adrp	x5, 200000 <bus_standard_errors_copy_0-0xdf0>
  211420:	add	x2, x2, #0xf6d
  211424:	add	x4, x4, #0xf9e
  211428:	add	x5, x5, #0xec5
  21142c:	mov	w0, #0x5                   	// #5
  211430:	mov	w3, #0x6b                  	// #107
  211434:	mov	w1, wzr
  211438:	mov	w6, w19
  21143c:	bl	211950 <log_internal_realm@plt>
  211440:	b	211524 <run+0x1b0>
  211444:	mov	w19, w0
  211448:	b	211530 <run+0x1bc>
  21144c:	mov	w19, w0
  211450:	mov	w0, wzr
  211454:	bl	211940 <log_get_max_level_realm@plt>
  211458:	cmp	w0, #0x3
  21145c:	b.lt	2114e4 <run+0x170>  // b.tstop
  211460:	adrp	x2, 200000 <bus_standard_errors_copy_0-0xdf0>
  211464:	adrp	x4, 200000 <bus_standard_errors_copy_0-0xdf0>
  211468:	adrp	x5, 200000 <bus_standard_errors_copy_0-0xdf0>
  21146c:	add	x2, x2, #0xf6d
  211470:	add	x4, x4, #0xf9e
  211474:	add	x5, x5, #0xe7e
  211478:	mov	w0, #0x3                   	// #3
  21147c:	mov	w3, #0x5c                  	// #92
  211480:	mov	w1, w19
  211484:	bl	211950 <log_internal_realm@plt>
  211488:	mov	w19, w0
  21148c:	b	211530 <run+0x1bc>
  211490:	mov	w19, w0
  211494:	mov	w0, wzr
  211498:	bl	211940 <log_get_max_level_realm@plt>
  21149c:	cmp	w0, #0x3
  2114a0:	b.lt	2114e4 <run+0x170>  // b.tstop
  2114a4:	add	x0, sp, #0x18
  2114a8:	mov	w1, w19
  2114ac:	bl	211960 <bus_error_message@plt>
  2114b0:	adrp	x2, 200000 <bus_standard_errors_copy_0-0xdf0>
  2114b4:	adrp	x4, 200000 <bus_standard_errors_copy_0-0xdf0>
  2114b8:	adrp	x5, 200000 <bus_standard_errors_copy_0-0xdf0>
  2114bc:	mov	x6, x0
  2114c0:	add	x2, x2, #0xf6d
  2114c4:	add	x4, x4, #0xf9e
  2114c8:	add	x5, x5, #0xf10
  2114cc:	mov	w0, #0x3                   	// #3
  2114d0:	mov	w3, #0x68                  	// #104
  2114d4:	mov	w1, w19
  2114d8:	bl	211950 <log_internal_realm@plt>
  2114dc:	mov	w19, w0
  2114e0:	b	211530 <run+0x1bc>
  2114e4:	mov	w8, wzr
  2114e8:	neg	w9, w19
  2114ec:	sub	w19, w8, w9, uxtb
  2114f0:	b	211530 <run+0x1bc>
  2114f4:	cmp	w0, #0x6
  2114f8:	b.lt	211524 <run+0x1b0>  // b.tstop
  2114fc:	adrp	x2, 200000 <bus_standard_errors_copy_0-0xdf0>
  211500:	adrp	x4, 200000 <bus_standard_errors_copy_0-0xdf0>
  211504:	adrp	x5, 200000 <bus_standard_errors_copy_0-0xdf0>
  211508:	add	x2, x2, #0xf6d
  21150c:	add	x4, x4, #0xf9e
  211510:	add	x5, x5, #0xfa9
  211514:	mov	w0, #0x6                   	// #6
  211518:	mov	w3, #0x6d                  	// #109
  21151c:	mov	w1, wzr
  211520:	bl	211950 <log_internal_realm@plt>
  211524:	ldr	w8, [sp, #12]
  211528:	cmp	w8, #0x0
  21152c:	cset	w19, ne  // ne = any
  211530:	add	x0, sp, #0x10
  211534:	bl	2115b4 <sd_bus_flush_close_unrefp>
  211538:	add	x0, sp, #0x18
  21153c:	bl	211970 <sd_bus_error_free@plt>
  211540:	mov	w0, w19
  211544:	ldp	x20, x19, [sp, #64]
  211548:	ldp	x29, x30, [sp, #48]
  21154c:	add	sp, sp, #0x50
  211550:	ret

0000000000211554 <static_destruct>:
  211554:	stp	x29, x30, [sp, #-32]!
  211558:	stp	x20, x19, [sp, #16]
  21155c:	adrp	x8, 221000 <colors_enabled@plt+0xf5f0>
  211560:	ldr	x8, [x8, #3080]
  211564:	mov	x29, sp
  211568:	cbz	x8, 2115a8 <static_destruct+0x54>
  21156c:	adrp	x0, 221000 <colors_enabled@plt+0xf5f0>
  211570:	ldr	x0, [x0, #3080]
  211574:	bl	2117bc <ALIGN_TO>
  211578:	adrp	x20, 221000 <colors_enabled@plt+0xf5f0>
  21157c:	ldr	x20, [x20, #3088]
  211580:	cmp	x0, x20
  211584:	b.cs	2115a8 <static_destruct+0x54>  // b.hs, b.nlast
  211588:	mov	x19, x0
  21158c:	ldp	x0, x8, [x19]
  211590:	blr	x8
  211594:	add	x0, x19, #0x10
  211598:	bl	2117bc <ALIGN_TO>
  21159c:	mov	x19, x0
  2115a0:	cmp	x0, x20
  2115a4:	b.cc	21158c <static_destruct+0x38>  // b.lo, b.ul, b.last
  2115a8:	ldp	x20, x19, [sp, #16]
  2115ac:	ldp	x29, x30, [sp], #32
  2115b0:	ret

00000000002115b4 <sd_bus_flush_close_unrefp>:
  2115b4:	stp	x29, x30, [sp, #-16]!
  2115b8:	ldr	x0, [x0]
  2115bc:	mov	x29, sp
  2115c0:	cbz	x0, 2115c8 <sd_bus_flush_close_unrefp+0x14>
  2115c4:	bl	211980 <sd_bus_flush_close_unref@plt>
  2115c8:	ldp	x29, x30, [sp], #16
  2115cc:	ret

00000000002115d0 <parse_argv>:
  2115d0:	stp	x29, x30, [sp, #-16]!
  2115d4:	mov	x29, sp
  2115d8:	tbnz	w0, #31, 211648 <parse_argv+0x78>
  2115dc:	cbz	x1, 21166c <parse_argv+0x9c>
  2115e0:	adrp	x2, 200000 <bus_standard_errors_copy_0-0xdf0>
  2115e4:	adrp	x3, 200000 <bus_standard_errors_copy_0-0xdf0>
  2115e8:	add	x2, x2, #0xfa2
  2115ec:	add	x3, x3, #0xdf8
  2115f0:	mov	x4, xzr
  2115f4:	bl	211990 <getopt_long@plt>
  2115f8:	tbnz	w0, #31, 211624 <parse_argv+0x54>
  2115fc:	cmp	w0, #0x3f
  211600:	b.eq	21163c <parse_argv+0x6c>  // b.none
  211604:	cmp	w0, #0x101
  211608:	b.eq	211630 <parse_argv+0x60>  // b.none
  21160c:	cmp	w0, #0x68
  211610:	b.ne	211690 <parse_argv+0xc0>  // b.any
  211614:	bl	2116b4 <help>
  211618:	mov	w0, wzr
  21161c:	ldp	x29, x30, [sp], #16
  211620:	ret
  211624:	mov	w0, #0x1                   	// #1
  211628:	ldp	x29, x30, [sp], #16
  21162c:	ret
  211630:	bl	2119a0 <version@plt>
  211634:	ldp	x29, x30, [sp], #16
  211638:	ret
  21163c:	mov	w0, #0xffffffea            	// #-22
  211640:	ldp	x29, x30, [sp], #16
  211644:	ret
  211648:	adrp	x1, 200000 <bus_standard_errors_copy_0-0xdf0>
  21164c:	adrp	x2, 200000 <bus_standard_errors_copy_0-0xdf0>
  211650:	adrp	x4, 200000 <bus_standard_errors_copy_0-0xdf0>
  211654:	add	x1, x1, #0xebb
  211658:	add	x2, x2, #0xf6d
  21165c:	add	x4, x4, #0xfd6
  211660:	mov	w3, #0x36                  	// #54
  211664:	mov	w0, wzr
  211668:	bl	2119b0 <log_assert_failed_realm@plt>
  21166c:	adrp	x1, 200000 <bus_standard_errors_copy_0-0xdf0>
  211670:	adrp	x2, 200000 <bus_standard_errors_copy_0-0xdf0>
  211674:	adrp	x4, 200000 <bus_standard_errors_copy_0-0xdf0>
  211678:	add	x1, x1, #0xee9
  21167c:	add	x2, x2, #0xf6d
  211680:	add	x4, x4, #0xfd6
  211684:	mov	w3, #0x37                  	// #55
  211688:	mov	w0, wzr
  21168c:	bl	2119b0 <log_assert_failed_realm@plt>
  211690:	adrp	x1, 200000 <bus_standard_errors_copy_0-0xdf0>
  211694:	adrp	x2, 200000 <bus_standard_errors_copy_0-0xdf0>
  211698:	adrp	x4, 200000 <bus_standard_errors_copy_0-0xdf0>
  21169c:	add	x1, x1, #0xf8f
  2116a0:	add	x2, x2, #0xf6d
  2116a4:	add	x4, x4, #0xfd6
  2116a8:	mov	w3, #0x47                  	// #71
  2116ac:	mov	w0, wzr
  2116b0:	bl	2119c0 <log_assert_failed_unreachable_realm@plt>

00000000002116b4 <help>:
  2116b4:	sub	sp, sp, #0x30
  2116b8:	adrp	x0, 200000 <bus_standard_errors_copy_0-0xdf0>
  2116bc:	adrp	x1, 200000 <bus_standard_errors_copy_0-0xdf0>
  2116c0:	add	x0, x0, #0xf39
  2116c4:	add	x1, x1, #0xf37
  2116c8:	add	x2, sp, #0x8
  2116cc:	stp	x29, x30, [sp, #16]
  2116d0:	stp	x20, x19, [sp, #32]
  2116d4:	add	x29, sp, #0x10
  2116d8:	str	xzr, [sp, #8]
  2116dc:	bl	2119d0 <terminal_urlify_man@plt>
  2116e0:	tbnz	w0, #31, 211718 <help+0x64>
  2116e4:	adrp	x8, 231000 <_DYNAMIC+0xf5d0>
  2116e8:	ldr	x19, [x8, #3344]
  2116ec:	bl	211764 <ansi_highlight>
  2116f0:	mov	x20, x0
  2116f4:	bl	211790 <ansi_normal>
  2116f8:	ldr	x4, [sp, #8]
  2116fc:	mov	x3, x0
  211700:	adrp	x0, 200000 <bus_standard_errors_copy_0-0xdf0>
  211704:	add	x0, x0, #0xff3
  211708:	mov	x1, x19
  21170c:	mov	x2, x20
  211710:	bl	2119e0 <printf@plt>
  211714:	b	211734 <help+0x80>
  211718:	adrp	x1, 200000 <bus_standard_errors_copy_0-0xdf0>
  21171c:	adrp	x3, 200000 <bus_standard_errors_copy_0-0xdf0>
  211720:	add	x1, x1, #0xf6d
  211724:	add	x3, x3, #0xfa4
  211728:	mov	w2, #0x18                  	// #24
  21172c:	mov	w0, wzr
  211730:	bl	2119f0 <log_oom_internal@plt>
  211734:	add	x0, sp, #0x8
  211738:	bl	21174c <freep>
  21173c:	ldp	x20, x19, [sp, #32]
  211740:	ldp	x29, x30, [sp, #16]
  211744:	add	sp, sp, #0x30
  211748:	ret

000000000021174c <freep>:
  21174c:	stp	x29, x30, [sp, #-16]!
  211750:	ldr	x0, [x0]
  211754:	mov	x29, sp
  211758:	bl	211a00 <free@plt>
  21175c:	ldp	x29, x30, [sp], #16
  211760:	ret

0000000000211764 <ansi_highlight>:
  211764:	stp	x29, x30, [sp, #-16]!
  211768:	mov	x29, sp
  21176c:	bl	211a10 <colors_enabled@plt>
  211770:	adrp	x8, 200000 <bus_standard_errors_copy_0-0xdf0>
  211774:	adrp	x9, 200000 <bus_standard_errors_copy_0-0xdf0>
  211778:	add	x8, x8, #0xfc8
  21177c:	add	x9, x9, #0xf60
  211780:	tst	w0, #0x1
  211784:	csel	x0, x9, x8, ne  // ne = any
  211788:	ldp	x29, x30, [sp], #16
  21178c:	ret

0000000000211790 <ansi_normal>:
  211790:	stp	x29, x30, [sp, #-16]!
  211794:	mov	x29, sp
  211798:	bl	211a10 <colors_enabled@plt>
  21179c:	adrp	x8, 200000 <bus_standard_errors_copy_0-0xdf0>
  2117a0:	adrp	x9, 200000 <bus_standard_errors_copy_0-0xdf0>
  2117a4:	add	x8, x8, #0xfc8
  2117a8:	add	x9, x9, #0xe58
  2117ac:	tst	w0, #0x1
  2117b0:	csel	x0, x9, x8, ne  // ne = any
  2117b4:	ldp	x29, x30, [sp], #16
  2117b8:	ret

00000000002117bc <ALIGN_TO>:
  2117bc:	add	x8, x0, #0x7
  2117c0:	and	x0, x8, #0xfffffffffffffff8
  2117c4:	ret

00000000002117c8 <__libc_csu_init>:
  2117c8:	stp	x29, x30, [sp, #-64]!
  2117cc:	mov	x29, sp
  2117d0:	stp	x19, x20, [sp, #16]
  2117d4:	adrp	x20, 221000 <colors_enabled@plt+0xf5f0>
  2117d8:	add	x20, x20, #0xa30
  2117dc:	stp	x21, x22, [sp, #32]
  2117e0:	adrp	x21, 221000 <colors_enabled@plt+0xf5f0>
  2117e4:	add	x21, x21, #0xa28
  2117e8:	sub	x20, x20, x21
  2117ec:	mov	w22, w0
  2117f0:	stp	x23, x24, [sp, #48]
  2117f4:	mov	x23, x1
  2117f8:	mov	x24, x2
  2117fc:	bl	21184c <_init>
  211800:	cmp	xzr, x20, asr #3
  211804:	b.eq	211830 <__libc_csu_init+0x68>  // b.none
  211808:	asr	x20, x20, #3
  21180c:	mov	x19, #0x0                   	// #0
  211810:	ldr	x3, [x21, x19, lsl #3]
  211814:	mov	x2, x24
  211818:	add	x19, x19, #0x1
  21181c:	mov	x1, x23
  211820:	mov	w0, w22
  211824:	blr	x3
  211828:	cmp	x20, x19
  21182c:	b.ne	211810 <__libc_csu_init+0x48>  // b.any
  211830:	ldp	x19, x20, [sp, #16]
  211834:	ldp	x21, x22, [sp, #32]
  211838:	ldp	x23, x24, [sp, #48]
  21183c:	ldp	x29, x30, [sp], #64
  211840:	ret
  211844:	nop

0000000000211848 <__libc_csu_fini>:
  211848:	ret

Disassembly of section .init:

000000000021184c <_init>:
  21184c:	stp	x29, x30, [sp, #-16]!
  211850:	mov	x29, sp
  211854:	bl	211210 <call_weak_fn>
  211858:	ldp	x29, x30, [sp], #16
  21185c:	ret

Disassembly of section .fini:

0000000000211860 <_fini>:
  211860:	stp	x29, x30, [sp, #-16]!
  211864:	mov	x29, sp
  211868:	ldp	x29, x30, [sp], #16
  21186c:	ret

Disassembly of section .plt:

0000000000211870 <__libc_start_main@plt-0x20>:
  211870:	stp	x16, x30, [sp, #-16]!
  211874:	adrp	x16, 221000 <colors_enabled@plt+0xf5f0>
  211878:	ldr	x17, [x16, #3112]
  21187c:	add	x16, x16, #0xc28
  211880:	br	x17
  211884:	nop
  211888:	nop
  21188c:	nop

0000000000211890 <__libc_start_main@plt>:
  211890:	adrp	x16, 221000 <colors_enabled@plt+0xf5f0>
  211894:	ldr	x17, [x16, #3120]
  211898:	add	x16, x16, #0xc30
  21189c:	br	x17

00000000002118a0 <abort@plt>:
  2118a0:	adrp	x16, 221000 <colors_enabled@plt+0xf5f0>
  2118a4:	ldr	x17, [x16, #3128]
  2118a8:	add	x16, x16, #0xc38
  2118ac:	br	x17

00000000002118b0 <__gmon_start__@plt>:
  2118b0:	adrp	x16, 221000 <colors_enabled@plt+0xf5f0>
  2118b4:	ldr	x17, [x16, #3136]
  2118b8:	add	x16, x16, #0xc40
  2118bc:	br	x17

00000000002118c0 <ask_password_agent_close@plt>:
  2118c0:	adrp	x16, 221000 <colors_enabled@plt+0xf5f0>
  2118c4:	ldr	x17, [x16, #3144]
  2118c8:	add	x16, x16, #0xc48
  2118cc:	br	x17

00000000002118d0 <polkit_agent_close@plt>:
  2118d0:	adrp	x16, 221000 <colors_enabled@plt+0xf5f0>
  2118d4:	ldr	x17, [x16, #3152]
  2118d8:	add	x16, x16, #0xc50
  2118dc:	br	x17

00000000002118e0 <pager_close@plt>:
  2118e0:	adrp	x16, 221000 <colors_enabled@plt+0xf5f0>
  2118e4:	ldr	x17, [x16, #3160]
  2118e8:	add	x16, x16, #0xc58
  2118ec:	br	x17

00000000002118f0 <mac_selinux_finish@plt>:
  2118f0:	adrp	x16, 221000 <colors_enabled@plt+0xf5f0>
  2118f4:	ldr	x17, [x16, #3168]
  2118f8:	add	x16, x16, #0xc60
  2118fc:	br	x17

0000000000211900 <log_parse_environment_realm@plt>:
  211900:	adrp	x16, 221000 <colors_enabled@plt+0xf5f0>
  211904:	ldr	x17, [x16, #3176]
  211908:	add	x16, x16, #0xc68
  21190c:	br	x17

0000000000211910 <log_open@plt>:
  211910:	adrp	x16, 221000 <colors_enabled@plt+0xf5f0>
  211914:	ldr	x17, [x16, #3184]
  211918:	add	x16, x16, #0xc70
  21191c:	br	x17

0000000000211920 <sd_bus_open_system@plt>:
  211920:	adrp	x16, 221000 <colors_enabled@plt+0xf5f0>
  211924:	ldr	x17, [x16, #3192]
  211928:	add	x16, x16, #0xc78
  21192c:	br	x17

0000000000211930 <sd_bus_get_property_trivial@plt>:
  211930:	adrp	x16, 221000 <colors_enabled@plt+0xf5f0>
  211934:	ldr	x17, [x16, #3200]
  211938:	add	x16, x16, #0xc80
  21193c:	br	x17

0000000000211940 <log_get_max_level_realm@plt>:
  211940:	adrp	x16, 221000 <colors_enabled@plt+0xf5f0>
  211944:	ldr	x17, [x16, #3208]
  211948:	add	x16, x16, #0xc88
  21194c:	br	x17

0000000000211950 <log_internal_realm@plt>:
  211950:	adrp	x16, 221000 <colors_enabled@plt+0xf5f0>
  211954:	ldr	x17, [x16, #3216]
  211958:	add	x16, x16, #0xc90
  21195c:	br	x17

0000000000211960 <bus_error_message@plt>:
  211960:	adrp	x16, 221000 <colors_enabled@plt+0xf5f0>
  211964:	ldr	x17, [x16, #3224]
  211968:	add	x16, x16, #0xc98
  21196c:	br	x17

0000000000211970 <sd_bus_error_free@plt>:
  211970:	adrp	x16, 221000 <colors_enabled@plt+0xf5f0>
  211974:	ldr	x17, [x16, #3232]
  211978:	add	x16, x16, #0xca0
  21197c:	br	x17

0000000000211980 <sd_bus_flush_close_unref@plt>:
  211980:	adrp	x16, 221000 <colors_enabled@plt+0xf5f0>
  211984:	ldr	x17, [x16, #3240]
  211988:	add	x16, x16, #0xca8
  21198c:	br	x17

0000000000211990 <getopt_long@plt>:
  211990:	adrp	x16, 221000 <colors_enabled@plt+0xf5f0>
  211994:	ldr	x17, [x16, #3248]
  211998:	add	x16, x16, #0xcb0
  21199c:	br	x17

00000000002119a0 <version@plt>:
  2119a0:	adrp	x16, 221000 <colors_enabled@plt+0xf5f0>
  2119a4:	ldr	x17, [x16, #3256]
  2119a8:	add	x16, x16, #0xcb8
  2119ac:	br	x17

00000000002119b0 <log_assert_failed_realm@plt>:
  2119b0:	adrp	x16, 221000 <colors_enabled@plt+0xf5f0>
  2119b4:	ldr	x17, [x16, #3264]
  2119b8:	add	x16, x16, #0xcc0
  2119bc:	br	x17

00000000002119c0 <log_assert_failed_unreachable_realm@plt>:
  2119c0:	adrp	x16, 221000 <colors_enabled@plt+0xf5f0>
  2119c4:	ldr	x17, [x16, #3272]
  2119c8:	add	x16, x16, #0xcc8
  2119cc:	br	x17

00000000002119d0 <terminal_urlify_man@plt>:
  2119d0:	adrp	x16, 221000 <colors_enabled@plt+0xf5f0>
  2119d4:	ldr	x17, [x16, #3280]
  2119d8:	add	x16, x16, #0xcd0
  2119dc:	br	x17

00000000002119e0 <printf@plt>:
  2119e0:	adrp	x16, 221000 <colors_enabled@plt+0xf5f0>
  2119e4:	ldr	x17, [x16, #3288]
  2119e8:	add	x16, x16, #0xcd8
  2119ec:	br	x17

00000000002119f0 <log_oom_internal@plt>:
  2119f0:	adrp	x16, 221000 <colors_enabled@plt+0xf5f0>
  2119f4:	ldr	x17, [x16, #3296]
  2119f8:	add	x16, x16, #0xce0
  2119fc:	br	x17

0000000000211a00 <free@plt>:
  211a00:	adrp	x16, 221000 <colors_enabled@plt+0xf5f0>
  211a04:	ldr	x17, [x16, #3304]
  211a08:	add	x16, x16, #0xce8
  211a0c:	br	x17

0000000000211a10 <colors_enabled@plt>:
  211a10:	adrp	x16, 221000 <colors_enabled@plt+0xf5f0>
  211a14:	ldr	x17, [x16, #3312]
  211a18:	add	x16, x16, #0xcf0
  211a1c:	br	x17
