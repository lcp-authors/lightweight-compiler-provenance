
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//resolvectl_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000403928 <.init>:
  403928:	stp	x29, x30, [sp, #-16]!
  40392c:	mov	x29, sp
  403930:	bl	404470 <ascii_strlower_n@plt+0x60>
  403934:	ldp	x29, x30, [sp], #16
  403938:	ret

Disassembly of section .plt:

0000000000403940 <__libc_start_main@plt-0x20>:
  403940:	stp	x16, x30, [sp, #-16]!
  403944:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403948:	ldr	x17, [x16, #2712]
  40394c:	add	x16, x16, #0xa98
  403950:	br	x17
  403954:	nop
  403958:	nop
  40395c:	nop

0000000000403960 <__libc_start_main@plt>:
  403960:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403964:	ldr	x17, [x16, #2720]
  403968:	add	x16, x16, #0xaa0
  40396c:	br	x17

0000000000403970 <abort@plt>:
  403970:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403974:	ldr	x17, [x16, #2728]
  403978:	add	x16, x16, #0xaa8
  40397c:	br	x17

0000000000403980 <__gmon_start__@plt>:
  403980:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403984:	ldr	x17, [x16, #2736]
  403988:	add	x16, x16, #0xab0
  40398c:	br	x17

0000000000403990 <getenv@plt>:
  403990:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403994:	ldr	x17, [x16, #2744]
  403998:	add	x16, x16, #0xab8
  40399c:	br	x17

00000000004039a0 <getopt_long@plt>:
  4039a0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  4039a4:	ldr	x17, [x16, #2752]
  4039a8:	add	x16, x16, #0xac0
  4039ac:	br	x17

00000000004039b0 <log_get_max_level_realm@plt>:
  4039b0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  4039b4:	ldr	x17, [x16, #2760]
  4039b8:	add	x16, x16, #0xac8
  4039bc:	br	x17

00000000004039c0 <log_internal_realm@plt>:
  4039c0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  4039c4:	ldr	x17, [x16, #2768]
  4039c8:	add	x16, x16, #0xad0
  4039cc:	br	x17

00000000004039d0 <read_line_full@plt>:
  4039d0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  4039d4:	ldr	x17, [x16, #2776]
  4039d8:	add	x16, x16, #0xad8
  4039dc:	br	x17

00000000004039e0 <strstrip@plt>:
  4039e0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  4039e4:	ldr	x17, [x16, #2784]
  4039e8:	add	x16, x16, #0xae0
  4039ec:	br	x17

00000000004039f0 <first_word@plt>:
  4039f0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  4039f4:	ldr	x17, [x16, #2792]
  4039f8:	add	x16, x16, #0xae8
  4039fc:	br	x17

0000000000403a00 <extract_first_word@plt>:
  403a00:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403a04:	ldr	x17, [x16, #2800]
  403a08:	add	x16, x16, #0xaf0
  403a0c:	br	x17

0000000000403a10 <strv_push@plt>:
  403a10:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403a14:	ldr	x17, [x16, #2808]
  403a18:	add	x16, x16, #0xaf8
  403a1c:	br	x17

0000000000403a20 <log_oom_internal@plt>:
  403a20:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403a24:	ldr	x17, [x16, #2816]
  403a28:	add	x16, x16, #0xb00
  403a2c:	br	x17

0000000000403a30 <free@plt>:
  403a30:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403a34:	ldr	x17, [x16, #2824]
  403a38:	add	x16, x16, #0xb08
  403a3c:	br	x17

0000000000403a40 <log_syntax_internal@plt>:
  403a40:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403a44:	ldr	x17, [x16, #2832]
  403a48:	add	x16, x16, #0xb10
  403a4c:	br	x17

0000000000403a50 <version@plt>:
  403a50:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403a54:	ldr	x17, [x16, #2840]
  403a58:	add	x16, x16, #0xb18
  403a5c:	br	x17

0000000000403a60 <strv_extend@plt>:
  403a60:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403a64:	ldr	x17, [x16, #2848]
  403a68:	add	x16, x16, #0xb20
  403a6c:	br	x17

0000000000403a70 <terminal_urlify_man@plt>:
  403a70:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403a74:	ldr	x17, [x16, #2856]
  403a78:	add	x16, x16, #0xb28
  403a7c:	br	x17

0000000000403a80 <printf@plt>:
  403a80:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403a84:	ldr	x17, [x16, #2864]
  403a88:	add	x16, x16, #0xb30
  403a8c:	br	x17

0000000000403a90 <log_assert_failed_unreachable_realm@plt>:
  403a90:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403a94:	ldr	x17, [x16, #2872]
  403a98:	add	x16, x16, #0xb38
  403a9c:	br	x17

0000000000403aa0 <log_assert_failed_realm@plt>:
  403aa0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403aa4:	ldr	x17, [x16, #2880]
  403aa8:	add	x16, x16, #0xb40
  403aac:	br	x17

0000000000403ab0 <strv_free@plt>:
  403ab0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403ab4:	ldr	x17, [x16, #2888]
  403ab8:	add	x16, x16, #0xb48
  403abc:	br	x17

0000000000403ac0 <strchr@plt>:
  403ac0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403ac4:	ldr	x17, [x16, #2896]
  403ac8:	add	x16, x16, #0xb50
  403acc:	br	x17

0000000000403ad0 <strndup@plt>:
  403ad0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403ad4:	ldr	x17, [x16, #2904]
  403ad8:	add	x16, x16, #0xb58
  403adc:	br	x17

0000000000403ae0 <strdup@plt>:
  403ae0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403ae4:	ldr	x17, [x16, #2912]
  403ae8:	add	x16, x16, #0xb60
  403aec:	br	x17

0000000000403af0 <parse_ifindex_or_ifname@plt>:
  403af0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403af4:	ldr	x17, [x16, #2920]
  403af8:	add	x16, x16, #0xb68
  403afc:	br	x17

0000000000403b00 <setlocale@plt>:
  403b00:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403b04:	ldr	x17, [x16, #2928]
  403b08:	add	x16, x16, #0xb70
  403b0c:	br	x17

0000000000403b10 <log_show_color@plt>:
  403b10:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403b14:	ldr	x17, [x16, #2936]
  403b18:	add	x16, x16, #0xb78
  403b1c:	br	x17

0000000000403b20 <log_parse_environment_realm@plt>:
  403b20:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403b24:	ldr	x17, [x16, #2944]
  403b28:	add	x16, x16, #0xb80
  403b2c:	br	x17

0000000000403b30 <log_open@plt>:
  403b30:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403b34:	ldr	x17, [x16, #2952]
  403b38:	add	x16, x16, #0xb88
  403b3c:	br	x17

0000000000403b40 <strcmp@plt>:
  403b40:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403b44:	ldr	x17, [x16, #2960]
  403b48:	add	x16, x16, #0xb90
  403b4c:	br	x17

0000000000403b50 <parse_boolean@plt>:
  403b50:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403b54:	ldr	x17, [x16, #2968]
  403b58:	add	x16, x16, #0xb98
  403b5c:	br	x17

0000000000403b60 <on_tty@plt>:
  403b60:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403b64:	ldr	x17, [x16, #2976]
  403b68:	add	x16, x16, #0xba0
  403b6c:	br	x17

0000000000403b70 <strv_find@plt>:
  403b70:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403b74:	ldr	x17, [x16, #2984]
  403b78:	add	x16, x16, #0xba8
  403b7c:	br	x17

0000000000403b80 <colors_enabled@plt>:
  403b80:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403b84:	ldr	x17, [x16, #2992]
  403b88:	add	x16, x16, #0xbb0
  403b8c:	br	x17

0000000000403b90 <sd_bus_open_system@plt>:
  403b90:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403b94:	ldr	x17, [x16, #3000]
  403b98:	add	x16, x16, #0xbb8
  403b9c:	br	x17

0000000000403ba0 <dispatch_verb@plt>:
  403ba0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403ba4:	ldr	x17, [x16, #3008]
  403ba8:	add	x16, x16, #0xbc0
  403bac:	br	x17

0000000000403bb0 <sd_bus_flush_close_unref@plt>:
  403bb0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403bb4:	ldr	x17, [x16, #3016]
  403bb8:	add	x16, x16, #0xbc8
  403bbc:	br	x17

0000000000403bc0 <ask_password_agent_close@plt>:
  403bc0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403bc4:	ldr	x17, [x16, #3024]
  403bc8:	add	x16, x16, #0xbd0
  403bcc:	br	x17

0000000000403bd0 <polkit_agent_close@plt>:
  403bd0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403bd4:	ldr	x17, [x16, #3032]
  403bd8:	add	x16, x16, #0xbd8
  403bdc:	br	x17

0000000000403be0 <pager_close@plt>:
  403be0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403be4:	ldr	x17, [x16, #3040]
  403be8:	add	x16, x16, #0xbe0
  403bec:	br	x17

0000000000403bf0 <mac_selinux_finish@plt>:
  403bf0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403bf4:	ldr	x17, [x16, #3048]
  403bf8:	add	x16, x16, #0xbe8
  403bfc:	br	x17

0000000000403c00 <strv_length@plt>:
  403c00:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403c04:	ldr	x17, [x16, #3056]
  403c08:	add	x16, x16, #0xbf0
  403c0c:	br	x17

0000000000403c10 <puts@plt>:
  403c10:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403c14:	ldr	x17, [x16, #3064]
  403c18:	add	x16, x16, #0xbf8
  403c1c:	br	x17

0000000000403c20 <flockfile@plt>:
  403c20:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403c24:	ldr	x17, [x16, #3072]
  403c28:	add	x16, x16, #0xc00
  403c2c:	br	x17

0000000000403c30 <fputs_unlocked@plt>:
  403c30:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403c34:	ldr	x17, [x16, #3080]
  403c38:	add	x16, x16, #0xc08
  403c3c:	br	x17

0000000000403c40 <fputc_unlocked@plt>:
  403c40:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403c44:	ldr	x17, [x16, #3088]
  403c48:	add	x16, x16, #0xc10
  403c4c:	br	x17

0000000000403c50 <funlockfile@plt>:
  403c50:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403c54:	ldr	x17, [x16, #3096]
  403c58:	add	x16, x16, #0xc18
  403c5c:	br	x17

0000000000403c60 <memset@plt>:
  403c60:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403c64:	ldr	x17, [x16, #3104]
  403c68:	add	x16, x16, #0xc20
  403c6c:	br	x17

0000000000403c70 <memcpy@plt>:
  403c70:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403c74:	ldr	x17, [x16, #3112]
  403c78:	add	x16, x16, #0xc28
  403c7c:	br	x17

0000000000403c80 <strncmp@plt>:
  403c80:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403c84:	ldr	x17, [x16, #3120]
  403c88:	add	x16, x16, #0xc30
  403c8c:	br	x17

0000000000403c90 <in_addr_ifindex_from_string_auto@plt>:
  403c90:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403c94:	ldr	x17, [x16, #3128]
  403c98:	add	x16, x16, #0xc38
  403c9c:	br	x17

0000000000403ca0 <in_addr_ifindex_to_string@plt>:
  403ca0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403ca4:	ldr	x17, [x16, #3136]
  403ca8:	add	x16, x16, #0xc40
  403cac:	br	x17

0000000000403cb0 <sd_bus_message_new_method_call@plt>:
  403cb0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403cb4:	ldr	x17, [x16, #3144]
  403cb8:	add	x16, x16, #0xc48
  403cbc:	br	x17

0000000000403cc0 <sd_bus_message_append@plt>:
  403cc0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403cc4:	ldr	x17, [x16, #3152]
  403cc8:	add	x16, x16, #0xc50
  403ccc:	br	x17

0000000000403cd0 <sd_bus_message_append_array@plt>:
  403cd0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403cd4:	ldr	x17, [x16, #3160]
  403cd8:	add	x16, x16, #0xc58
  403cdc:	br	x17

0000000000403ce0 <now@plt>:
  403ce0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403ce4:	ldr	x17, [x16, #3168]
  403ce8:	add	x16, x16, #0xc60
  403cec:	br	x17

0000000000403cf0 <sd_bus_call@plt>:
  403cf0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403cf4:	ldr	x17, [x16, #3176]
  403cf8:	add	x16, x16, #0xc68
  403cfc:	br	x17

0000000000403d00 <sd_bus_message_enter_container@plt>:
  403d00:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403d04:	ldr	x17, [x16, #3184]
  403d08:	add	x16, x16, #0xc70
  403d0c:	br	x17

0000000000403d10 <sd_bus_message_read@plt>:
  403d10:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403d14:	ldr	x17, [x16, #3192]
  403d18:	add	x16, x16, #0xc78
  403d1c:	br	x17

0000000000403d20 <sd_bus_message_exit_container@plt>:
  403d20:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403d24:	ldr	x17, [x16, #3200]
  403d28:	add	x16, x16, #0xc80
  403d2c:	br	x17

0000000000403d30 <strlen@plt>:
  403d30:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403d34:	ldr	x17, [x16, #3208]
  403d38:	add	x16, x16, #0xc88
  403d3c:	br	x17

0000000000403d40 <fputc@plt>:
  403d40:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403d44:	ldr	x17, [x16, #3216]
  403d48:	add	x16, x16, #0xc90
  403d4c:	br	x17

0000000000403d50 <af_to_name@plt>:
  403d50:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403d54:	ldr	x17, [x16, #3224]
  403d58:	add	x16, x16, #0xc98
  403d5c:	br	x17

0000000000403d60 <sd_bus_message_read_array@plt>:
  403d60:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403d64:	ldr	x17, [x16, #3232]
  403d68:	add	x16, x16, #0xca0
  403d6c:	br	x17

0000000000403d70 <bus_error_message@plt>:
  403d70:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403d74:	ldr	x17, [x16, #3240]
  403d78:	add	x16, x16, #0xca8
  403d7c:	br	x17

0000000000403d80 <sd_bus_error_free@plt>:
  403d80:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403d84:	ldr	x17, [x16, #3248]
  403d88:	add	x16, x16, #0xcb0
  403d8c:	br	x17

0000000000403d90 <sd_bus_message_unref@plt>:
  403d90:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403d94:	ldr	x17, [x16, #3256]
  403d98:	add	x16, x16, #0xcb8
  403d9c:	br	x17

0000000000403da0 <strrchr@plt>:
  403da0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403da4:	ldr	x17, [x16, #3264]
  403da8:	add	x16, x16, #0xcc0
  403dac:	br	x17

0000000000403db0 <sd_bus_get_property_trivial@plt>:
  403db0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403db4:	ldr	x17, [x16, #3272]
  403db8:	add	x16, x16, #0xcc8
  403dbc:	br	x17

0000000000403dc0 <sd_bus_get_property@plt>:
  403dc0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403dc4:	ldr	x17, [x16, #3280]
  403dc8:	add	x16, x16, #0xcd0
  403dcc:	br	x17

0000000000403dd0 <sd_bus_call_method@plt>:
  403dd0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403dd4:	ldr	x17, [x16, #3288]
  403dd8:	add	x16, x16, #0xcd8
  403ddc:	br	x17

0000000000403de0 <sd_bus_error_has_name@plt>:
  403de0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403de4:	ldr	x17, [x16, #3296]
  403de8:	add	x16, x16, #0xce0
  403dec:	br	x17

0000000000403df0 <strv_equal@plt>:
  403df0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403df4:	ldr	x17, [x16, #3304]
  403df8:	add	x16, x16, #0xce8
  403dfc:	br	x17

0000000000403e00 <dns_name_concat@plt>:
  403e00:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403e04:	ldr	x17, [x16, #3312]
  403e08:	add	x16, x16, #0xcf0
  403e0c:	br	x17

0000000000403e10 <format_ifname_full@plt>:
  403e10:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403e14:	ldr	x17, [x16, #3320]
  403e18:	add	x16, x16, #0xcf8
  403e1c:	br	x17

0000000000403e20 <asprintf@plt>:
  403e20:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403e24:	ldr	x17, [x16, #3328]
  403e28:	add	x16, x16, #0xd00
  403e2c:	br	x17

0000000000403e30 <sd_bus_path_encode@plt>:
  403e30:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403e34:	ldr	x17, [x16, #3336]
  403e38:	add	x16, x16, #0xd08
  403e3c:	br	x17

0000000000403e40 <bus_map_all_properties@plt>:
  403e40:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403e44:	ldr	x17, [x16, #3344]
  403e48:	add	x16, x16, #0xd10
  403e4c:	br	x17

0000000000403e50 <pager_open@plt>:
  403e50:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403e54:	ldr	x17, [x16, #3352]
  403e58:	add	x16, x16, #0xd18
  403e5c:	br	x17

0000000000403e60 <__errno_location@plt>:
  403e60:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403e64:	ldr	x17, [x16, #3360]
  403e68:	add	x16, x16, #0xd20
  403e6c:	br	x17

0000000000403e70 <sd_netlink_open@plt>:
  403e70:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403e74:	ldr	x17, [x16, #3368]
  403e78:	add	x16, x16, #0xd28
  403e7c:	br	x17

0000000000403e80 <sd_rtnl_message_new_link@plt>:
  403e80:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403e84:	ldr	x17, [x16, #3376]
  403e88:	add	x16, x16, #0xd30
  403e8c:	br	x17

0000000000403e90 <sd_netlink_message_request_dump@plt>:
  403e90:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403e94:	ldr	x17, [x16, #3384]
  403e98:	add	x16, x16, #0xd38
  403e9c:	br	x17

0000000000403ea0 <sd_netlink_call@plt>:
  403ea0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403ea4:	ldr	x17, [x16, #3392]
  403ea8:	add	x16, x16, #0xd40
  403eac:	br	x17

0000000000403eb0 <sd_netlink_message_get_type@plt>:
  403eb0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403eb4:	ldr	x17, [x16, #3400]
  403eb8:	add	x16, x16, #0xd48
  403ebc:	br	x17

0000000000403ec0 <sd_rtnl_message_link_get_ifindex@plt>:
  403ec0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403ec4:	ldr	x17, [x16, #3408]
  403ec8:	add	x16, x16, #0xd50
  403ecc:	br	x17

0000000000403ed0 <sd_netlink_message_read_string@plt>:
  403ed0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403ed4:	ldr	x17, [x16, #3416]
  403ed8:	add	x16, x16, #0xd58
  403edc:	br	x17

0000000000403ee0 <sd_netlink_message_next@plt>:
  403ee0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403ee4:	ldr	x17, [x16, #3424]
  403ee8:	add	x16, x16, #0xd60
  403eec:	br	x17

0000000000403ef0 <rtnl_log_create_error@plt>:
  403ef0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403ef4:	ldr	x17, [x16, #3432]
  403ef8:	add	x16, x16, #0xd68
  403efc:	br	x17

0000000000403f00 <strv_sort@plt>:
  403f00:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403f04:	ldr	x17, [x16, #3440]
  403f08:	add	x16, x16, #0xd70
  403f0c:	br	x17

0000000000403f10 <rtnl_log_parse_error@plt>:
  403f10:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403f14:	ldr	x17, [x16, #3448]
  403f18:	add	x16, x16, #0xd78
  403f1c:	br	x17

0000000000403f20 <sd_netlink_unref@plt>:
  403f20:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403f24:	ldr	x17, [x16, #3456]
  403f28:	add	x16, x16, #0xd80
  403f2c:	br	x17

0000000000403f30 <sd_netlink_message_unref@plt>:
  403f30:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403f34:	ldr	x17, [x16, #3464]
  403f38:	add	x16, x16, #0xd88
  403f3c:	br	x17

0000000000403f40 <strv_consume@plt>:
  403f40:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403f44:	ldr	x17, [x16, #3472]
  403f48:	add	x16, x16, #0xd90
  403f4c:	br	x17

0000000000403f50 <putchar@plt>:
  403f50:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403f54:	ldr	x17, [x16, #3480]
  403f58:	add	x16, x16, #0xd98
  403f5c:	br	x17

0000000000403f60 <in_addr_to_string@plt>:
  403f60:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403f64:	ldr	x17, [x16, #3488]
  403f68:	add	x16, x16, #0xda0
  403f6c:	br	x17

0000000000403f70 <strjoin_real@plt>:
  403f70:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403f74:	ldr	x17, [x16, #3496]
  403f78:	add	x16, x16, #0xda8
  403f7c:	br	x17

0000000000403f80 <fwrite@plt>:
  403f80:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403f84:	ldr	x17, [x16, #3504]
  403f88:	add	x16, x16, #0xdb0
  403f8c:	br	x17

0000000000403f90 <fflush@plt>:
  403f90:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403f94:	ldr	x17, [x16, #3512]
  403f98:	add	x16, x16, #0xdb8
  403f9c:	br	x17

0000000000403fa0 <fprintf@plt>:
  403fa0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403fa4:	ldr	x17, [x16, #3520]
  403fa8:	add	x16, x16, #0xdc0
  403fac:	br	x17

0000000000403fb0 <strnlen@plt>:
  403fb0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403fb4:	ldr	x17, [x16, #3528]
  403fb8:	add	x16, x16, #0xdc8
  403fbc:	br	x17

0000000000403fc0 <strncasecmp@plt>:
  403fc0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403fc4:	ldr	x17, [x16, #3536]
  403fc8:	add	x16, x16, #0xdd0
  403fcc:	br	x17

0000000000403fd0 <strchrnul@plt>:
  403fd0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403fd4:	ldr	x17, [x16, #3544]
  403fd8:	add	x16, x16, #0xdd8
  403fdc:	br	x17

0000000000403fe0 <format_timespan@plt>:
  403fe0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403fe4:	ldr	x17, [x16, #3552]
  403fe8:	add	x16, x16, #0xde0
  403fec:	br	x17

0000000000403ff0 <cescape_length@plt>:
  403ff0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  403ff4:	ldr	x17, [x16, #3560]
  403ff8:	add	x16, x16, #0xde8
  403ffc:	br	x17

0000000000404000 <strcmp_ptr@plt>:
  404000:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404004:	ldr	x17, [x16, #3568]
  404008:	add	x16, x16, #0xdf0
  40400c:	br	x17

0000000000404010 <parse_ip_port@plt>:
  404010:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404014:	ldr	x17, [x16, #3576]
  404018:	add	x16, x16, #0xdf8
  40401c:	br	x17

0000000000404020 <sd_bus_message_open_container@plt>:
  404020:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404024:	ldr	x17, [x16, #3584]
  404028:	add	x16, x16, #0xe00
  40402c:	br	x17

0000000000404030 <in_addr_from_string_auto@plt>:
  404030:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404034:	ldr	x17, [x16, #3592]
  404038:	add	x16, x16, #0xe08
  40403c:	br	x17

0000000000404040 <sd_bus_message_close_container@plt>:
  404040:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404044:	ldr	x17, [x16, #3600]
  404048:	add	x16, x16, #0xe10
  40404c:	br	x17

0000000000404050 <sd_bus_message_append_strv@plt>:
  404050:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404054:	ldr	x17, [x16, #3608]
  404058:	add	x16, x16, #0xe18
  40405c:	br	x17

0000000000404060 <page_size@plt>:
  404060:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404064:	ldr	x17, [x16, #3616]
  404068:	add	x16, x16, #0xe20
  40406c:	br	x17

0000000000404070 <calloc@plt>:
  404070:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404074:	ldr	x17, [x16, #3624]
  404078:	add	x16, x16, #0xe28
  40407c:	br	x17

0000000000404080 <internal_hashmap_first_key_and_value@plt>:
  404080:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404084:	ldr	x17, [x16, #3632]
  404088:	add	x16, x16, #0xe30
  40408c:	br	x17

0000000000404090 <internal_hashmap_free@plt>:
  404090:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404094:	ldr	x17, [x16, #3640]
  404098:	add	x16, x16, #0xe38
  40409c:	br	x17

00000000004040a0 <internal_hashmap_iterate@plt>:
  4040a0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  4040a4:	ldr	x17, [x16, #3648]
  4040a8:	add	x16, x16, #0xe40
  4040ac:	br	x17

00000000004040b0 <internal_hashmap_remove@plt>:
  4040b0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  4040b4:	ldr	x17, [x16, #3656]
  4040b8:	add	x16, x16, #0xe48
  4040bc:	br	x17

00000000004040c0 <realloc@plt>:
  4040c0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  4040c4:	ldr	x17, [x16, #3664]
  4040c8:	add	x16, x16, #0xe50
  4040cc:	br	x17

00000000004040d0 <malloc@plt>:
  4040d0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  4040d4:	ldr	x17, [x16, #3672]
  4040d8:	add	x16, x16, #0xe58
  4040dc:	br	x17

00000000004040e0 <ascii_tolower@plt>:
  4040e0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  4040e4:	ldr	x17, [x16, #3680]
  4040e8:	add	x16, x16, #0xe60
  4040ec:	br	x17

00000000004040f0 <dns_name_is_root@plt>:
  4040f0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  4040f4:	ldr	x17, [x16, #3688]
  4040f8:	add	x16, x16, #0xe68
  4040fc:	br	x17

0000000000404100 <internal_hashmap_get@plt>:
  404100:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404104:	ldr	x17, [x16, #3696]
  404108:	add	x16, x16, #0xe70
  40410c:	br	x17

0000000000404110 <dns_label_unescape@plt>:
  404110:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404114:	ldr	x17, [x16, #3704]
  404118:	add	x16, x16, #0xe78
  40411c:	br	x17

0000000000404120 <internal_hashmap_ensure_allocated@plt>:
  404120:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404124:	ldr	x17, [x16, #3712]
  404128:	add	x16, x16, #0xe80
  40412c:	br	x17

0000000000404130 <hashmap_put@plt>:
  404130:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404134:	ldr	x17, [x16, #3720]
  404138:	add	x16, x16, #0xe88
  40413c:	br	x17

0000000000404140 <bitmap_iterate@plt>:
  404140:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404144:	ldr	x17, [x16, #3728]
  404148:	add	x16, x16, #0xe90
  40414c:	br	x17

0000000000404150 <memchr@plt>:
  404150:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404154:	ldr	x17, [x16, #3736]
  404158:	add	x16, x16, #0xe98
  40415c:	br	x17

0000000000404160 <utf8_is_valid@plt>:
  404160:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404164:	ldr	x17, [x16, #3744]
  404168:	add	x16, x16, #0xea0
  40416c:	br	x17

0000000000404170 <greedy_realloc@plt>:
  404170:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404174:	ldr	x17, [x16, #3752]
  404178:	add	x16, x16, #0xea8
  40417c:	br	x17

0000000000404180 <dns_label_escape@plt>:
  404180:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404184:	ldr	x17, [x16, #3760]
  404188:	add	x16, x16, #0xeb0
  40418c:	br	x17

0000000000404190 <memdup@plt>:
  404190:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404194:	ldr	x17, [x16, #3768]
  404198:	add	x16, x16, #0xeb8
  40419c:	br	x17

00000000004041a0 <bitmap_ensure_allocated@plt>:
  4041a0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  4041a4:	ldr	x17, [x16, #3776]
  4041a8:	add	x16, x16, #0xec0
  4041ac:	br	x17

00000000004041b0 <bitmap_set@plt>:
  4041b0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  4041b4:	ldr	x17, [x16, #3784]
  4041b8:	add	x16, x16, #0xec8
  4041bc:	br	x17

00000000004041c0 <internal_set_new@plt>:
  4041c0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  4041c4:	ldr	x17, [x16, #3792]
  4041c8:	add	x16, x16, #0xed0
  4041cc:	br	x17

00000000004041d0 <internal_hashmap_reserve@plt>:
  4041d0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  4041d4:	ldr	x17, [x16, #3800]
  4041d8:	add	x16, x16, #0xed8
  4041dc:	br	x17

00000000004041e0 <set_put@plt>:
  4041e0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  4041e4:	ldr	x17, [x16, #3808]
  4041e8:	add	x16, x16, #0xee0
  4041ec:	br	x17

00000000004041f0 <siphash24_compress@plt>:
  4041f0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  4041f4:	ldr	x17, [x16, #3816]
  4041f8:	add	x16, x16, #0xee8
  4041fc:	br	x17

0000000000404200 <memcmp@plt>:
  404200:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404204:	ldr	x17, [x16, #3824]
  404208:	add	x16, x16, #0xef0
  40420c:	br	x17

0000000000404210 <string_table_lookup@plt>:
  404210:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404214:	ldr	x17, [x16, #3832]
  404218:	add	x16, x16, #0xef8
  40421c:	br	x17

0000000000404220 <strcpy@plt>:
  404220:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404224:	ldr	x17, [x16, #3840]
  404228:	add	x16, x16, #0xf00
  40422c:	br	x17

0000000000404230 <dns_name_change_suffix@plt>:
  404230:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404234:	ldr	x17, [x16, #3848]
  404238:	add	x16, x16, #0xf08
  40423c:	br	x17

0000000000404240 <dns_name_endswith@plt>:
  404240:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404244:	ldr	x17, [x16, #3856]
  404248:	add	x16, x16, #0xf10
  40424c:	br	x17

0000000000404250 <dns_name_equal@plt>:
  404250:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404254:	ldr	x17, [x16, #3864]
  404258:	add	x16, x16, #0xf18
  40425c:	br	x17

0000000000404260 <dns_name_hash_func@plt>:
  404260:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404264:	ldr	x17, [x16, #3872]
  404268:	add	x16, x16, #0xf20
  40426c:	br	x17

0000000000404270 <dns_name_compare_func@plt>:
  404270:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404274:	ldr	x17, [x16, #3880]
  404278:	add	x16, x16, #0xf28
  40427c:	br	x17

0000000000404280 <snprintf@plt>:
  404280:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404284:	ldr	x17, [x16, #3888]
  404288:	add	x16, x16, #0xf30
  40428c:	br	x17

0000000000404290 <bitmap_free@plt>:
  404290:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404294:	ldr	x17, [x16, #3896]
  404298:	add	x16, x16, #0xf38
  40429c:	br	x17

00000000004042a0 <dns_name_reverse@plt>:
  4042a0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  4042a4:	ldr	x17, [x16, #3904]
  4042a8:	add	x16, x16, #0xf40
  4042ac:	br	x17

00000000004042b0 <bcmp@plt>:
  4042b0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  4042b4:	ldr	x17, [x16, #3912]
  4042b8:	add	x16, x16, #0xf48
  4042bc:	br	x17

00000000004042c0 <strcasecmp@plt>:
  4042c0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  4042c4:	ldr	x17, [x16, #3920]
  4042c8:	add	x16, x16, #0xf50
  4042cc:	br	x17

00000000004042d0 <bitmap_equal@plt>:
  4042d0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  4042d4:	ldr	x17, [x16, #3928]
  4042d8:	add	x16, x16, #0xf58
  4042dc:	br	x17

00000000004042e0 <octescape@plt>:
  4042e0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  4042e4:	ldr	x17, [x16, #3936]
  4042e8:	add	x16, x16, #0xf60
  4042ec:	br	x17

00000000004042f0 <columns@plt>:
  4042f0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  4042f4:	ldr	x17, [x16, #3944]
  4042f8:	add	x16, x16, #0xf68
  4042fc:	br	x17

0000000000404300 <base64_append@plt>:
  404300:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404304:	ldr	x17, [x16, #3952]
  404308:	add	x16, x16, #0xf70
  40430c:	br	x17

0000000000404310 <hexmem@plt>:
  404310:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404314:	ldr	x17, [x16, #3960]
  404318:	add	x16, x16, #0xf78
  40431c:	br	x17

0000000000404320 <exp10@plt>:
  404320:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404324:	ldr	x17, [x16, #3968]
  404328:	add	x16, x16, #0xf80
  40432c:	br	x17

0000000000404330 <base32hexmem@plt>:
  404330:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404334:	ldr	x17, [x16, #3976]
  404338:	add	x16, x16, #0xf88
  40433c:	br	x17

0000000000404340 <gmtime_r@plt>:
  404340:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404344:	ldr	x17, [x16, #3984]
  404348:	add	x16, x16, #0xf90
  40434c:	br	x17

0000000000404350 <strftime@plt>:
  404350:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404354:	ldr	x17, [x16, #3992]
  404358:	add	x16, x16, #0xf98
  40435c:	br	x17

0000000000404360 <strv_join_prefix@plt>:
  404360:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404364:	ldr	x17, [x16, #4000]
  404368:	add	x16, x16, #0xfa0
  40436c:	br	x17

0000000000404370 <dns_name_skip@plt>:
  404370:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404374:	ldr	x17, [x16, #4008]
  404378:	add	x16, x16, #0xfa8
  40437c:	br	x17

0000000000404380 <dns_name_startswith@plt>:
  404380:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404384:	ldr	x17, [x16, #4016]
  404388:	add	x16, x16, #0xfb0
  40438c:	br	x17

0000000000404390 <string_hash_func@plt>:
  404390:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404394:	ldr	x17, [x16, #4024]
  404398:	add	x16, x16, #0xfb8
  40439c:	br	x17

00000000004043a0 <bitmap_copy@plt>:
  4043a0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  4043a4:	ldr	x17, [x16, #4032]
  4043a8:	add	x16, x16, #0xfc0
  4043ac:	br	x17

00000000004043b0 <safe_atou_full@plt>:
  4043b0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  4043b4:	ldr	x17, [x16, #4040]
  4043b8:	add	x16, x16, #0xfc8
  4043bc:	br	x17

00000000004043c0 <memmove@plt>:
  4043c0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  4043c4:	ldr	x17, [x16, #4048]
  4043c8:	add	x16, x16, #0xfd0
  4043cc:	br	x17

00000000004043d0 <in_addr_is_link_local@plt>:
  4043d0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  4043d4:	ldr	x17, [x16, #4056]
  4043d8:	add	x16, x16, #0xfd8
  4043dc:	br	x17

00000000004043e0 <fputs@plt>:
  4043e0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  4043e4:	ldr	x17, [x16, #4064]
  4043e8:	add	x16, x16, #0xfe0
  4043ec:	br	x17

00000000004043f0 <dns_name_apply_idna@plt>:
  4043f0:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  4043f4:	ldr	x17, [x16, #4072]
  4043f8:	add	x16, x16, #0xfe8
  4043fc:	br	x17

0000000000404400 <dns_service_join@plt>:
  404400:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404404:	ldr	x17, [x16, #4080]
  404408:	add	x16, x16, #0xff0
  40440c:	br	x17

0000000000404410 <ascii_strlower_n@plt>:
  404410:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404414:	ldr	x17, [x16, #4088]
  404418:	add	x16, x16, #0xff8
  40441c:	br	x17

Disassembly of section .text:

0000000000404420 <.text>:
  404420:	mov	x29, #0x0                   	// #0
  404424:	mov	x30, #0x0                   	// #0
  404428:	mov	x5, x0
  40442c:	ldr	x1, [sp]
  404430:	add	x2, sp, #0x8
  404434:	mov	x6, sp
  404438:	movz	x0, #0x0, lsl #48
  40443c:	movk	x0, #0x0, lsl #32
  404440:	movk	x0, #0x40, lsl #16
  404444:	movk	x0, #0x5010
  404448:	movz	x3, #0x0, lsl #48
  40444c:	movk	x3, #0x0, lsl #32
  404450:	movk	x3, #0x41, lsl #16
  404454:	movk	x3, #0x76d0
  404458:	movz	x4, #0x0, lsl #48
  40445c:	movk	x4, #0x0, lsl #32
  404460:	movk	x4, #0x41, lsl #16
  404464:	movk	x4, #0x7750
  404468:	bl	403960 <__libc_start_main@plt>
  40446c:	bl	403970 <abort@plt>
  404470:	adrp	x0, 43f000 <ascii_strlower_n@plt+0x3abf0>
  404474:	ldr	x0, [x0, #2648]
  404478:	cbz	x0, 404480 <ascii_strlower_n@plt+0x70>
  40447c:	b	403980 <__gmon_start__@plt>
  404480:	ret
  404484:	adrp	x0, 440000 <ascii_strlower_n@plt+0x3bbf0>
  404488:	add	x1, x0, #0x0
  40448c:	adrp	x0, 440000 <ascii_strlower_n@plt+0x3bbf0>
  404490:	add	x0, x0, #0x0
  404494:	cmp	x1, x0
  404498:	b.eq	4044c4 <ascii_strlower_n@plt+0xb4>  // b.none
  40449c:	sub	sp, sp, #0x10
  4044a0:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  4044a4:	ldr	x1, [x1, #1896]
  4044a8:	str	x1, [sp, #8]
  4044ac:	cbz	x1, 4044bc <ascii_strlower_n@plt+0xac>
  4044b0:	mov	x16, x1
  4044b4:	add	sp, sp, #0x10
  4044b8:	br	x16
  4044bc:	add	sp, sp, #0x10
  4044c0:	ret
  4044c4:	ret
  4044c8:	adrp	x0, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4044cc:	add	x1, x0, #0x0
  4044d0:	adrp	x0, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4044d4:	add	x0, x0, #0x0
  4044d8:	sub	x1, x1, x0
  4044dc:	mov	x2, #0x2                   	// #2
  4044e0:	asr	x1, x1, #3
  4044e4:	sdiv	x1, x1, x2
  4044e8:	cbz	x1, 404514 <ascii_strlower_n@plt+0x104>
  4044ec:	sub	sp, sp, #0x10
  4044f0:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  4044f4:	ldr	x2, [x2, #1904]
  4044f8:	str	x2, [sp, #8]
  4044fc:	cbz	x2, 40450c <ascii_strlower_n@plt+0xfc>
  404500:	mov	x16, x2
  404504:	add	sp, sp, #0x10
  404508:	br	x16
  40450c:	add	sp, sp, #0x10
  404510:	ret
  404514:	ret
  404518:	stp	x29, x30, [sp, #-32]!
  40451c:	mov	x29, sp
  404520:	str	x19, [sp, #16]
  404524:	adrp	x19, 440000 <ascii_strlower_n@plt+0x3bbf0>
  404528:	ldrb	w0, [x19, #8]
  40452c:	cbnz	w0, 40453c <ascii_strlower_n@plt+0x12c>
  404530:	bl	404484 <ascii_strlower_n@plt+0x74>
  404534:	mov	w0, #0x1                   	// #1
  404538:	strb	w0, [x19, #8]
  40453c:	ldr	x19, [sp, #16]
  404540:	ldp	x29, x30, [sp], #32
  404544:	ret
  404548:	b	4044c8 <ascii_strlower_n@plt+0xb8>
  40454c:	sub	sp, sp, #0x90
  404550:	stp	x29, x30, [sp, #48]
  404554:	stp	x28, x27, [sp, #64]
  404558:	stp	x26, x25, [sp, #80]
  40455c:	stp	x24, x23, [sp, #96]
  404560:	stp	x22, x21, [sp, #112]
  404564:	stp	x20, x19, [sp, #128]
  404568:	add	x29, sp, #0x30
  40456c:	tbnz	w0, #31, 404d7c <ascii_strlower_n@plt+0x96c>
  404570:	mov	x19, x1
  404574:	cbz	x1, 404d9c <ascii_strlower_n@plt+0x98c>
  404578:	mov	w20, w0
  40457c:	adrp	x0, 417000 <ascii_strlower_n@plt+0x12bf0>
  404580:	add	x0, x0, #0x90a
  404584:	bl	403990 <getenv@plt>
  404588:	cmp	x0, #0x0
  40458c:	adrp	x0, 417000 <ascii_strlower_n@plt+0x12bf0>
  404590:	cset	w8, ne  // ne = any
  404594:	add	x0, x0, #0x917
  404598:	lsl	w21, w8, #1
  40459c:	bl	403990 <getenv@plt>
  4045a0:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  4045a4:	adrp	x3, 417000 <ascii_strlower_n@plt+0x12bf0>
  4045a8:	cmp	x0, #0x0
  4045ac:	adrp	x28, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4045b0:	mov	w8, #0xffffffff            	// #-1
  4045b4:	add	x2, x2, #0x922
  4045b8:	add	x3, x3, #0x7b0
  4045bc:	mov	w0, w20
  4045c0:	mov	x1, x19
  4045c4:	mov	x4, xzr
  4045c8:	csinc	w24, w21, wzr, eq  // eq = none
  4045cc:	str	w8, [x28, #20]
  4045d0:	bl	4039a0 <getopt_long@plt>
  4045d4:	tbnz	w0, #31, 404788 <ascii_strlower_n@plt+0x378>
  4045d8:	adrp	x16, 417000 <ascii_strlower_n@plt+0x12bf0>
  4045dc:	adrp	x22, 417000 <ascii_strlower_n@plt+0x12bf0>
  4045e0:	adrp	x27, 417000 <ascii_strlower_n@plt+0x12bf0>
  4045e4:	adrp	x15, 417000 <ascii_strlower_n@plt+0x12bf0>
  4045e8:	adrp	x25, 417000 <ascii_strlower_n@plt+0x12bf0>
  4045ec:	adrp	x21, 417000 <ascii_strlower_n@plt+0x12bf0>
  4045f0:	mov	w23, w0
  4045f4:	add	x16, x16, #0x778
  4045f8:	mov	w11, #0xa                   	// #10
  4045fc:	add	x22, x22, #0x922
  404600:	add	x27, x27, #0x7b0
  404604:	mov	w12, #0xb                   	// #11
  404608:	adrp	x13, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40460c:	mov	w14, #0x1                   	// #1
  404610:	add	x15, x15, #0x8bd
  404614:	add	x25, x25, #0x936
  404618:	add	x21, x21, #0x94c
  40461c:	cmp	w23, #0x55
  404620:	b.le	404714 <ascii_strlower_n@plt+0x304>
  404624:	sub	w8, w23, #0x61
  404628:	cmp	w8, #0x17
  40462c:	b.hi	404a90 <ascii_strlower_n@plt+0x680>  // b.pmore
  404630:	adr	x9, 404644 <ascii_strlower_n@plt+0x234>
  404634:	ldrh	w10, [x16, x8, lsl #1]
  404638:	add	x9, x9, x10, lsl #2
  40463c:	mov	w8, #0x2                   	// #2
  404640:	br	x9
  404644:	str	w11, [x28, #20]
  404648:	b	404658 <ascii_strlower_n@plt+0x248>
  40464c:	str	w12, [x28, #20]
  404650:	b	404658 <ascii_strlower_n@plt+0x248>
  404654:	strb	w14, [x13, #16]
  404658:	mov	w8, w24
  40465c:	b	4046b8 <ascii_strlower_n@plt+0x2a8>
  404660:	mov	w8, #0x1                   	// #1
  404664:	b	4046b8 <ascii_strlower_n@plt+0x2a8>
  404668:	mov	w0, wzr
  40466c:	mov	x23, x15
  404670:	bl	4039b0 <log_get_max_level_realm@plt>
  404674:	cmp	w0, #0x7
  404678:	b.lt	4046ac <ascii_strlower_n@plt+0x29c>  // b.tstop
  40467c:	mov	w0, #0x7                   	// #7
  404680:	mov	w3, #0xac                  	// #172
  404684:	mov	w6, #0x6d                  	// #109
  404688:	mov	w1, wzr
  40468c:	mov	x2, x23
  404690:	mov	x4, x25
  404694:	mov	x5, x21
  404698:	bl	4039c0 <log_internal_realm@plt>
  40469c:	mov	x15, x23
  4046a0:	mov	w8, w24
  4046a4:	adrp	x13, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4046a8:	b	4046b8 <ascii_strlower_n@plt+0x2a8>
  4046ac:	mov	w8, w24
  4046b0:	adrp	x13, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4046b4:	mov	x15, x23
  4046b8:	mov	w0, w20
  4046bc:	mov	x1, x19
  4046c0:	mov	x2, x22
  4046c4:	mov	x3, x27
  4046c8:	mov	x4, xzr
  4046cc:	mov	x26, x25
  4046d0:	mov	x25, x15
  4046d4:	mov	w23, w8
  4046d8:	mov	x24, x13
  4046dc:	bl	4039a0 <getopt_long@plt>
  4046e0:	adrp	x16, 417000 <ascii_strlower_n@plt+0x12bf0>
  4046e4:	mov	w10, w23
  4046e8:	mov	x15, x25
  4046ec:	mov	x25, x26
  4046f0:	add	x16, x16, #0x778
  4046f4:	mov	w14, #0x1                   	// #1
  4046f8:	mov	x13, x24
  4046fc:	mov	w12, #0xb                   	// #11
  404700:	mov	w11, #0xa                   	// #10
  404704:	mov	w23, w0
  404708:	mov	w24, w10
  40470c:	tbz	w0, #31, 40461c <ascii_strlower_n@plt+0x20c>
  404710:	b	40478c <ascii_strlower_n@plt+0x37c>
  404714:	cmp	w23, #0x3f
  404718:	b.eq	404d28 <ascii_strlower_n@plt+0x918>  // b.none
  40471c:	cmp	w23, #0x49
  404720:	b.eq	40472c <ascii_strlower_n@plt+0x31c>  // b.none
  404724:	cmp	w23, #0x52
  404728:	b.ne	404bc0 <ascii_strlower_n@plt+0x7b0>  // b.any
  40472c:	mov	w0, wzr
  404730:	bl	4039b0 <log_get_max_level_realm@plt>
  404734:	cmp	w0, #0x3
  404738:	b.lt	404d28 <ascii_strlower_n@plt+0x918>  // b.tstop
  40473c:	mov	w6, w23
  404740:	ldp	x20, x19, [sp, #128]
  404744:	ldp	x22, x21, [sp, #112]
  404748:	ldp	x24, x23, [sp, #96]
  40474c:	ldp	x26, x25, [sp, #80]
  404750:	ldp	x28, x27, [sp, #64]
  404754:	ldp	x29, x30, [sp, #48]
  404758:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40475c:	adrp	x4, 417000 <ascii_strlower_n@plt+0x12bf0>
  404760:	adrp	x5, 417000 <ascii_strlower_n@plt+0x12bf0>
  404764:	mov	w1, #0x16                  	// #22
  404768:	add	x2, x2, #0x8bd
  40476c:	add	x4, x4, #0x936
  404770:	add	x5, x5, #0x960
  404774:	mov	w0, #0x3                   	// #3
  404778:	movk	w1, #0x4000, lsl #16
  40477c:	mov	w3, #0xbb                  	// #187
  404780:	add	sp, sp, #0x90
  404784:	b	4039c0 <log_internal_realm@plt>
  404788:	mov	w10, w24
  40478c:	ldr	w8, [x28, #20]
  404790:	cmn	w8, #0x1
  404794:	b.eq	4049fc <ascii_strlower_n@plt+0x5ec>  // b.none
  404798:	adrp	x21, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40479c:	ldrsw	x8, [x21, #128]
  4047a0:	add	w9, w8, #0x1
  4047a4:	cmp	w9, w20
  4047a8:	b.ne	404a38 <ascii_strlower_n@plt+0x628>  // b.any
  4047ac:	ldr	x0, [x19, x8, lsl #3]
  4047b0:	mov	w27, w10
  4047b4:	bl	404df8 <ascii_strlower_n@plt+0x9e8>
  4047b8:	cmp	w0, #0x1
  4047bc:	b.lt	404d20 <ascii_strlower_n@plt+0x910>  // b.tstop
  4047c0:	ldr	w8, [x21, #128]
  4047c4:	ldr	w9, [x28, #20]
  4047c8:	add	w8, w8, #0x1
  4047cc:	cmp	w9, #0xa
  4047d0:	str	w8, [x21, #128]
  4047d4:	b.ne	404cdc <ascii_strlower_n@plt+0x8cc>  // b.any
  4047d8:	adrp	x22, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4047dc:	ldr	x0, [x22, #136]
  4047e0:	add	x3, sp, #0x18
  4047e4:	mov	w1, #0x100000              	// #1048576
  4047e8:	mov	w2, wzr
  4047ec:	str	xzr, [sp, #24]
  4047f0:	bl	4039d0 <read_line_full@plt>
  4047f4:	mov	w25, w0
  4047f8:	tbnz	w0, #31, 404ad4 <ascii_strlower_n@plt+0x6c4>
  4047fc:	mov	x24, #0x1                   	// #1
  404800:	adrp	x20, 417000 <ascii_strlower_n@plt+0x12bf0>
  404804:	adrp	x21, 417000 <ascii_strlower_n@plt+0x12bf0>
  404808:	adrp	x26, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40480c:	adrp	x28, 440000 <ascii_strlower_n@plt+0x3bbf0>
  404810:	movk	x24, #0x8, lsl #32
  404814:	mov	w19, wzr
  404818:	add	x20, x20, #0xa77
  40481c:	add	x21, x21, #0xa82
  404820:	add	x26, x26, #0x20
  404824:	add	x28, x28, #0x18
  404828:	mov	w23, #0x1                   	// #1
  40482c:	movk	x24, #0x800, lsl #48
  404830:	cbz	w25, 404b28 <ascii_strlower_n@plt+0x718>
  404834:	ldr	x0, [sp, #24]
  404838:	add	w19, w19, #0x1
  40483c:	bl	4039e0 <strstrip@plt>
  404840:	ldrb	w8, [x0]
  404844:	mov	x25, x0
  404848:	cmp	w8, #0x3b
  40484c:	b.hi	40485c <ascii_strlower_n@plt+0x44c>  // b.pmore
  404850:	lsl	x8, x23, x8
  404854:	tst	x8, x24
  404858:	b.ne	404984 <ascii_strlower_n@plt+0x574>  // b.any
  40485c:	mov	x0, x25
  404860:	mov	x1, x20
  404864:	bl	4039f0 <first_word@plt>
  404868:	cbz	x0, 4048c4 <ascii_strlower_n@plt+0x4b4>
  40486c:	stp	xzr, x0, [x29, #-16]
  404870:	sub	x0, x29, #0x8
  404874:	sub	x1, x29, #0x10
  404878:	mov	x2, xzr
  40487c:	mov	w3, wzr
  404880:	bl	403a00 <extract_first_word@plt>
  404884:	ldur	x1, [x29, #-16]
  404888:	cmp	w0, #0x1
  40488c:	b.lt	40493c <ascii_strlower_n@plt+0x52c>  // b.tstop
  404890:	mov	x0, x28
  404894:	bl	403a10 <strv_push@plt>
  404898:	tbnz	w0, #31, 404944 <ascii_strlower_n@plt+0x534>
  40489c:	sub	x0, x29, #0x8
  4048a0:	sub	x1, x29, #0x10
  4048a4:	mov	x2, xzr
  4048a8:	mov	w3, wzr
  4048ac:	stur	xzr, [x29, #-16]
  4048b0:	bl	403a00 <extract_first_word@plt>
  4048b4:	ldur	x1, [x29, #-16]
  4048b8:	cmp	w0, #0x0
  4048bc:	b.gt	404890 <ascii_strlower_n@plt+0x480>
  4048c0:	b	40493c <ascii_strlower_n@plt+0x52c>
  4048c4:	mov	x0, x25
  4048c8:	mov	x1, x21
  4048cc:	bl	4039f0 <first_word@plt>
  4048d0:	cbnz	x0, 4048e8 <ascii_strlower_n@plt+0x4d8>
  4048d4:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  4048d8:	mov	x0, x25
  4048dc:	add	x1, x1, #0xa89
  4048e0:	bl	4039f0 <first_word@plt>
  4048e4:	cbz	x0, 4049b0 <ascii_strlower_n@plt+0x5a0>
  4048e8:	stp	xzr, x0, [x29, #-16]
  4048ec:	sub	x0, x29, #0x8
  4048f0:	sub	x1, x29, #0x10
  4048f4:	mov	w3, #0x8                   	// #8
  4048f8:	mov	x2, xzr
  4048fc:	bl	403a00 <extract_first_word@plt>
  404900:	ldur	x1, [x29, #-16]
  404904:	cmp	w0, #0x1
  404908:	b.lt	40493c <ascii_strlower_n@plt+0x52c>  // b.tstop
  40490c:	mov	x0, x26
  404910:	bl	403a10 <strv_push@plt>
  404914:	tbnz	w0, #31, 404960 <ascii_strlower_n@plt+0x550>
  404918:	sub	x0, x29, #0x8
  40491c:	sub	x1, x29, #0x10
  404920:	mov	w3, #0x8                   	// #8
  404924:	mov	x2, xzr
  404928:	stur	xzr, [x29, #-16]
  40492c:	bl	403a00 <extract_first_word@plt>
  404930:	ldur	x1, [x29, #-16]
  404934:	cmp	w0, #0x0
  404938:	b.gt	40490c <ascii_strlower_n@plt+0x4fc>
  40493c:	mov	x0, x1
  404940:	b	404980 <ascii_strlower_n@plt+0x570>
  404944:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  404948:	adrp	x3, 417000 <ascii_strlower_n@plt+0x12bf0>
  40494c:	mov	w2, #0x45                  	// #69
  404950:	mov	w0, wzr
  404954:	add	x1, x1, #0x8bd
  404958:	add	x3, x3, #0xedd
  40495c:	b	404978 <ascii_strlower_n@plt+0x568>
  404960:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  404964:	adrp	x3, 417000 <ascii_strlower_n@plt+0x12bf0>
  404968:	mov	w2, #0x5c                  	// #92
  40496c:	mov	w0, wzr
  404970:	add	x1, x1, #0x8bd
  404974:	add	x3, x3, #0xeee
  404978:	bl	403a20 <log_oom_internal@plt>
  40497c:	ldur	x0, [x29, #-16]
  404980:	bl	403a30 <free@plt>
  404984:	ldr	x0, [sp, #24]
  404988:	bl	403a30 <free@plt>
  40498c:	ldr	x0, [x22, #136]
  404990:	add	x3, sp, #0x18
  404994:	mov	w1, #0x100000              	// #1048576
  404998:	mov	w2, wzr
  40499c:	str	xzr, [sp, #24]
  4049a0:	bl	4039d0 <read_line_full@plt>
  4049a4:	mov	w25, w0
  4049a8:	tbz	w0, #31, 404830 <ascii_strlower_n@plt+0x420>
  4049ac:	b	404ad4 <ascii_strlower_n@plt+0x6c4>
  4049b0:	bl	4039b0 <log_get_max_level_realm@plt>
  4049b4:	cmp	w0, #0x7
  4049b8:	b.lt	404984 <ascii_strlower_n@plt+0x574>  // b.tstop
  4049bc:	adrp	x8, 417000 <ascii_strlower_n@plt+0x12bf0>
  4049c0:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  4049c4:	adrp	x5, 417000 <ascii_strlower_n@plt+0x12bf0>
  4049c8:	adrp	x7, 417000 <ascii_strlower_n@plt+0x12bf0>
  4049cc:	mov	w1, #0x7                   	// #7
  4049d0:	mov	w6, #0xfe                  	// #254
  4049d4:	add	x8, x8, #0xa96
  4049d8:	mov	x0, xzr
  4049dc:	add	x2, x2, #0xa90
  4049e0:	mov	w3, w19
  4049e4:	mov	w4, wzr
  4049e8:	add	x5, x5, #0x8bd
  4049ec:	add	x7, x7, #0x936
  4049f0:	stp	x8, x25, [sp]
  4049f4:	bl	403a40 <log_syntax_internal@plt>
  4049f8:	b	404984 <ascii_strlower_n@plt+0x574>
  4049fc:	mov	w0, wzr
  404a00:	bl	4039b0 <log_get_max_level_realm@plt>
  404a04:	cmp	w0, #0x3
  404a08:	b.lt	404d28 <ascii_strlower_n@plt+0x918>  // b.tstop
  404a0c:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  404a10:	adrp	x4, 417000 <ascii_strlower_n@plt+0x12bf0>
  404a14:	adrp	x5, 417000 <ascii_strlower_n@plt+0x12bf0>
  404a18:	mov	w1, #0x16                  	// #22
  404a1c:	add	x2, x2, #0x8bd
  404a20:	add	x4, x4, #0x936
  404a24:	add	x5, x5, #0xa06
  404a28:	mov	w0, #0x3                   	// #3
  404a2c:	movk	w1, #0x4000, lsl #16
  404a30:	mov	w3, #0xd1                  	// #209
  404a34:	b	404a70 <ascii_strlower_n@plt+0x660>
  404a38:	mov	w0, wzr
  404a3c:	bl	4039b0 <log_get_max_level_realm@plt>
  404a40:	cmp	w0, #0x3
  404a44:	b.lt	404d28 <ascii_strlower_n@plt+0x918>  // b.tstop
  404a48:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  404a4c:	adrp	x4, 417000 <ascii_strlower_n@plt+0x12bf0>
  404a50:	adrp	x5, 417000 <ascii_strlower_n@plt+0x12bf0>
  404a54:	mov	w1, #0x16                  	// #22
  404a58:	add	x2, x2, #0x8bd
  404a5c:	add	x4, x4, #0x936
  404a60:	add	x5, x5, #0xa34
  404a64:	mov	w0, #0x3                   	// #3
  404a68:	movk	w1, #0x4000, lsl #16
  404a6c:	mov	w3, #0xd5                  	// #213
  404a70:	ldp	x20, x19, [sp, #128]
  404a74:	ldp	x22, x21, [sp, #112]
  404a78:	ldp	x24, x23, [sp, #96]
  404a7c:	ldp	x26, x25, [sp, #80]
  404a80:	ldp	x28, x27, [sp, #64]
  404a84:	ldp	x29, x30, [sp, #48]
  404a88:	add	sp, sp, #0x90
  404a8c:	b	4039c0 <log_internal_realm@plt>
  404a90:	sub	w8, w23, #0x100
  404a94:	cmp	w8, #0x3
  404a98:	b.hi	404bb8 <ascii_strlower_n@plt+0x7a8>  // b.pmore
  404a9c:	adrp	x9, 417000 <ascii_strlower_n@plt+0x12bf0>
  404aa0:	add	x9, x9, #0x7a8
  404aa4:	adr	x10, 404ab4 <ascii_strlower_n@plt+0x6a4>
  404aa8:	ldrb	w11, [x9, x8]
  404aac:	add	x10, x10, x11, lsl #2
  404ab0:	br	x10
  404ab4:	ldp	x20, x19, [sp, #128]
  404ab8:	ldp	x22, x21, [sp, #112]
  404abc:	ldp	x24, x23, [sp, #96]
  404ac0:	ldp	x26, x25, [sp, #80]
  404ac4:	ldp	x28, x27, [sp, #64]
  404ac8:	ldp	x29, x30, [sp, #48]
  404acc:	add	sp, sp, #0x90
  404ad0:	b	403a50 <version@plt>
  404ad4:	mov	w0, wzr
  404ad8:	bl	4039b0 <log_get_max_level_realm@plt>
  404adc:	cmp	w0, #0x3
  404ae0:	b.lt	404b14 <ascii_strlower_n@plt+0x704>  // b.tstop
  404ae4:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  404ae8:	adrp	x4, 417000 <ascii_strlower_n@plt+0x12bf0>
  404aec:	adrp	x5, 417000 <ascii_strlower_n@plt+0x12bf0>
  404af0:	add	x2, x2, #0x8bd
  404af4:	add	x4, x4, #0x936
  404af8:	add	x5, x5, #0xa59
  404afc:	mov	w0, #0x3                   	// #3
  404b00:	mov	w3, #0xe6                  	// #230
  404b04:	mov	w1, w25
  404b08:	bl	4039c0 <log_internal_realm@plt>
  404b0c:	mov	w19, w0
  404b10:	b	404b20 <ascii_strlower_n@plt+0x710>
  404b14:	mov	w8, wzr
  404b18:	neg	w9, w25
  404b1c:	sub	w19, w8, w9, uxtb
  404b20:	ldr	x0, [sp, #24]
  404b24:	b	404d74 <ascii_strlower_n@plt+0x964>
  404b28:	ldr	x0, [sp, #24]
  404b2c:	bl	403a30 <free@plt>
  404b30:	cmp	w27, #0x1
  404b34:	b.eq	404c98 <ascii_strlower_n@plt+0x888>  // b.none
  404b38:	cmp	w27, #0x2
  404b3c:	b.ne	404cd0 <ascii_strlower_n@plt+0x8c0>  // b.any
  404b40:	adrp	x0, 440000 <ascii_strlower_n@plt+0x3bbf0>
  404b44:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  404b48:	add	x0, x0, #0x20
  404b4c:	add	x1, x1, #0xab4
  404b50:	bl	403a60 <strv_extend@plt>
  404b54:	tbz	w0, #31, 404cd0 <ascii_strlower_n@plt+0x8c0>
  404b58:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  404b5c:	adrp	x3, 417000 <ascii_strlower_n@plt+0x12bf0>
  404b60:	add	x1, x1, #0x8bd
  404b64:	add	x3, x3, #0x936
  404b68:	mov	w2, #0x108                 	// #264
  404b6c:	mov	w0, wzr
  404b70:	bl	403a20 <log_oom_internal@plt>
  404b74:	b	404d20 <ascii_strlower_n@plt+0x910>
  404b78:	adrp	x0, 417000 <ascii_strlower_n@plt+0x12bf0>
  404b7c:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  404b80:	add	x0, x0, #0xb16
  404b84:	add	x1, x1, #0xb21
  404b88:	sub	x2, x29, #0x8
  404b8c:	stur	xzr, [x29, #-8]
  404b90:	bl	403a70 <terminal_urlify_man@plt>
  404b94:	tbnz	w0, #31, 404d50 <ascii_strlower_n@plt+0x940>
  404b98:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  404b9c:	ldr	x1, [x8, #144]
  404ba0:	ldur	x2, [x29, #-8]
  404ba4:	adrp	x0, 417000 <ascii_strlower_n@plt+0x12bf0>
  404ba8:	add	x0, x0, #0xb33
  404bac:	bl	403a80 <printf@plt>
  404bb0:	mov	w19, wzr
  404bb4:	b	404d70 <ascii_strlower_n@plt+0x960>
  404bb8:	cmp	w23, #0x56
  404bbc:	b.eq	40472c <ascii_strlower_n@plt+0x31c>  // b.none
  404bc0:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  404bc4:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  404bc8:	adrp	x4, 417000 <ascii_strlower_n@plt+0x12bf0>
  404bcc:	add	x1, x1, #0x9f5
  404bd0:	add	x2, x2, #0x8bd
  404bd4:	add	x4, x4, #0x8dd
  404bd8:	mov	w3, #0xcc                  	// #204
  404bdc:	mov	w0, wzr
  404be0:	bl	403a90 <log_assert_failed_unreachable_realm@plt>
  404be4:	mov	w0, wzr
  404be8:	bl	4039b0 <log_get_max_level_realm@plt>
  404bec:	cmp	w0, #0x3
  404bf0:	b.lt	404d28 <ascii_strlower_n@plt+0x918>  // b.tstop
  404bf4:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  404bf8:	adrp	x4, 417000 <ascii_strlower_n@plt+0x12bf0>
  404bfc:	adrp	x5, 417000 <ascii_strlower_n@plt+0x12bf0>
  404c00:	mov	w1, #0x16                  	// #22
  404c04:	add	x2, x2, #0x8bd
  404c08:	add	x4, x4, #0x936
  404c0c:	add	x5, x5, #0x97a
  404c10:	mov	w0, #0x3                   	// #3
  404c14:	movk	w1, #0x4000, lsl #16
  404c18:	mov	w3, #0xc0                  	// #192
  404c1c:	b	404a70 <ascii_strlower_n@plt+0x660>
  404c20:	mov	w0, wzr
  404c24:	bl	4039b0 <log_get_max_level_realm@plt>
  404c28:	cmp	w0, #0x3
  404c2c:	b.lt	404d28 <ascii_strlower_n@plt+0x918>  // b.tstop
  404c30:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  404c34:	adrp	x4, 417000 <ascii_strlower_n@plt+0x12bf0>
  404c38:	adrp	x5, 417000 <ascii_strlower_n@plt+0x12bf0>
  404c3c:	mov	w1, #0x16                  	// #22
  404c40:	add	x2, x2, #0x8bd
  404c44:	add	x4, x4, #0x936
  404c48:	add	x5, x5, #0x9a1
  404c4c:	mov	w0, #0x3                   	// #3
  404c50:	movk	w1, #0x4000, lsl #16
  404c54:	mov	w3, #0xc3                  	// #195
  404c58:	b	404a70 <ascii_strlower_n@plt+0x660>
  404c5c:	mov	w0, wzr
  404c60:	bl	4039b0 <log_get_max_level_realm@plt>
  404c64:	cmp	w0, #0x3
  404c68:	b.lt	404d28 <ascii_strlower_n@plt+0x918>  // b.tstop
  404c6c:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  404c70:	adrp	x4, 417000 <ascii_strlower_n@plt+0x12bf0>
  404c74:	adrp	x5, 417000 <ascii_strlower_n@plt+0x12bf0>
  404c78:	mov	w1, #0x16                  	// #22
  404c7c:	add	x2, x2, #0x8bd
  404c80:	add	x4, x4, #0x936
  404c84:	add	x5, x5, #0x9c9
  404c88:	mov	w0, #0x3                   	// #3
  404c8c:	movk	w1, #0x4000, lsl #16
  404c90:	mov	w3, #0xc6                  	// #198
  404c94:	b	404a70 <ascii_strlower_n@plt+0x660>
  404c98:	mov	w0, wzr
  404c9c:	bl	4039b0 <log_get_max_level_realm@plt>
  404ca0:	cmp	w0, #0x7
  404ca4:	b.lt	404cd0 <ascii_strlower_n@plt+0x8c0>  // b.tstop
  404ca8:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  404cac:	adrp	x4, 417000 <ascii_strlower_n@plt+0x12bf0>
  404cb0:	adrp	x5, 417000 <ascii_strlower_n@plt+0x12bf0>
  404cb4:	add	x2, x2, #0x8bd
  404cb8:	add	x4, x4, #0x936
  404cbc:	add	x5, x5, #0xab7
  404cc0:	mov	w0, #0x7                   	// #7
  404cc4:	mov	w3, #0x10b                 	// #267
  404cc8:	mov	w1, wzr
  404ccc:	bl	4039c0 <log_internal_realm@plt>
  404cd0:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  404cd4:	ldr	x8, [x8, #24]
  404cd8:	cbz	x8, 404ce4 <ascii_strlower_n@plt+0x8d4>
  404cdc:	mov	w19, #0x1                   	// #1
  404ce0:	b	404d2c <ascii_strlower_n@plt+0x91c>
  404ce4:	mov	w0, wzr
  404ce8:	bl	4039b0 <log_get_max_level_realm@plt>
  404cec:	cmp	w0, #0x3
  404cf0:	b.lt	404d28 <ascii_strlower_n@plt+0x918>  // b.tstop
  404cf4:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  404cf8:	adrp	x4, 417000 <ascii_strlower_n@plt+0x12bf0>
  404cfc:	adrp	x5, 417000 <ascii_strlower_n@plt+0x12bf0>
  404d00:	mov	w1, #0x16                  	// #22
  404d04:	add	x2, x2, #0x8bd
  404d08:	add	x4, x4, #0x936
  404d0c:	add	x5, x5, #0xae8
  404d10:	mov	w0, #0x3                   	// #3
  404d14:	movk	w1, #0x4000, lsl #16
  404d18:	mov	w3, #0x10f                 	// #271
  404d1c:	bl	4039c0 <log_internal_realm@plt>
  404d20:	mov	w19, w0
  404d24:	b	404d2c <ascii_strlower_n@plt+0x91c>
  404d28:	mov	w19, #0xffffffea            	// #-22
  404d2c:	mov	w0, w19
  404d30:	ldp	x20, x19, [sp, #128]
  404d34:	ldp	x22, x21, [sp, #112]
  404d38:	ldp	x24, x23, [sp, #96]
  404d3c:	ldp	x26, x25, [sp, #80]
  404d40:	ldp	x28, x27, [sp, #64]
  404d44:	ldp	x29, x30, [sp, #48]
  404d48:	add	sp, sp, #0x90
  404d4c:	ret
  404d50:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  404d54:	adrp	x3, 417000 <ascii_strlower_n@plt+0x12bf0>
  404d58:	add	x1, x1, #0x8bd
  404d5c:	add	x3, x3, #0xb23
  404d60:	mov	w2, #0x1a                  	// #26
  404d64:	mov	w0, wzr
  404d68:	bl	403a20 <log_oom_internal@plt>
  404d6c:	mov	w19, w0
  404d70:	ldur	x0, [x29, #-8]
  404d74:	bl	403a30 <free@plt>
  404d78:	b	404d2c <ascii_strlower_n@plt+0x91c>
  404d7c:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  404d80:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  404d84:	adrp	x4, 417000 <ascii_strlower_n@plt+0x12bf0>
  404d88:	add	x1, x1, #0x8b0
  404d8c:	add	x2, x2, #0x8bd
  404d90:	add	x4, x4, #0x8dd
  404d94:	mov	w3, #0x80                  	// #128
  404d98:	b	404db8 <ascii_strlower_n@plt+0x9a8>
  404d9c:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  404da0:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  404da4:	adrp	x4, 417000 <ascii_strlower_n@plt+0x12bf0>
  404da8:	add	x1, x1, #0x905
  404dac:	add	x2, x2, #0x8bd
  404db0:	add	x4, x4, #0x8dd
  404db4:	mov	w3, #0x81                  	// #129
  404db8:	mov	w0, wzr
  404dbc:	bl	403aa0 <log_assert_failed_realm@plt>
  404dc0:	ldr	x0, [x0]
  404dc4:	b	403a30 <free@plt>
  404dc8:	ldr	x0, [x0]
  404dcc:	cbz	x0, 404dd4 <ascii_strlower_n@plt+0x9c4>
  404dd0:	b	403ab0 <strv_free@plt>
  404dd4:	ret
  404dd8:	ldr	x0, [x0]
  404ddc:	cbz	x0, 404de4 <ascii_strlower_n@plt+0x9d4>
  404de0:	b	403ab0 <strv_free@plt>
  404de4:	ret
  404de8:	ldr	x0, [x0]
  404dec:	cbz	x0, 404df4 <ascii_strlower_n@plt+0x9e4>
  404df0:	b	403ab0 <strv_free@plt>
  404df4:	ret
  404df8:	stp	x29, x30, [sp, #-48]!
  404dfc:	str	x21, [sp, #16]
  404e00:	stp	x20, x19, [sp, #32]
  404e04:	mov	x29, sp
  404e08:	cbz	x0, 404ff0 <ascii_strlower_n@plt+0xbe0>
  404e0c:	mov	w1, #0x2e                  	// #46
  404e10:	mov	x19, x0
  404e14:	bl	403ac0 <strchr@plt>
  404e18:	cbz	x0, 404e6c <ascii_strlower_n@plt+0xa5c>
  404e1c:	mov	x20, x0
  404e20:	mov	w0, wzr
  404e24:	bl	4039b0 <log_get_max_level_realm@plt>
  404e28:	cmp	w0, #0x7
  404e2c:	b.lt	404e5c <ascii_strlower_n@plt+0xa4c>  // b.tstop
  404e30:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  404e34:	adrp	x4, 417000 <ascii_strlower_n@plt+0x12bf0>
  404e38:	adrp	x5, 417000 <ascii_strlower_n@plt+0x12bf0>
  404e3c:	add	x6, x20, #0x1
  404e40:	add	x2, x2, #0xf07
  404e44:	add	x4, x4, #0xf40
  404e48:	add	x5, x5, #0xf4e
  404e4c:	mov	w0, #0x7                   	// #7
  404e50:	mov	w3, #0x59                  	// #89
  404e54:	mov	w1, wzr
  404e58:	bl	4039c0 <log_internal_realm@plt>
  404e5c:	sub	x1, x20, x19
  404e60:	mov	x0, x19
  404e64:	bl	403ad0 <strndup@plt>
  404e68:	b	404e74 <ascii_strlower_n@plt+0xa64>
  404e6c:	mov	x0, x19
  404e70:	bl	403ae0 <strdup@plt>
  404e74:	mov	x19, x0
  404e78:	cbz	x0, 404ee8 <ascii_strlower_n@plt+0xad8>
  404e7c:	add	x1, x29, #0x1c
  404e80:	mov	x0, x19
  404e84:	bl	403af0 <parse_ifindex_or_ifname@plt>
  404e88:	tbnz	w0, #31, 404f0c <ascii_strlower_n@plt+0xafc>
  404e8c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  404e90:	ldr	w10, [x8, #56]
  404e94:	ldr	w9, [x29, #28]
  404e98:	cmp	w10, #0x1
  404e9c:	b.lt	404f68 <ascii_strlower_n@plt+0xb58>  // b.tstop
  404ea0:	cmp	w10, w9
  404ea4:	b.eq	404f68 <ascii_strlower_n@plt+0xb58>  // b.none
  404ea8:	mov	w0, wzr
  404eac:	bl	4039b0 <log_get_max_level_realm@plt>
  404eb0:	cmp	w0, #0x3
  404eb4:	b.lt	404fc0 <ascii_strlower_n@plt+0xbb0>  // b.tstop
  404eb8:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  404ebc:	adrp	x4, 417000 <ascii_strlower_n@plt+0x12bf0>
  404ec0:	adrp	x5, 417000 <ascii_strlower_n@plt+0x12bf0>
  404ec4:	mov	w1, #0x16                  	// #22
  404ec8:	add	x2, x2, #0xf07
  404ecc:	add	x4, x4, #0xf40
  404ed0:	add	x5, x5, #0xfc1
  404ed4:	mov	w0, #0x3                   	// #3
  404ed8:	movk	w1, #0x4000, lsl #16
  404edc:	mov	w3, #0x6c                  	// #108
  404ee0:	bl	4039c0 <log_internal_realm@plt>
  404ee4:	b	404f04 <ascii_strlower_n@plt+0xaf4>
  404ee8:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  404eec:	adrp	x3, 417000 <ascii_strlower_n@plt+0x12bf0>
  404ef0:	add	x1, x1, #0xf07
  404ef4:	add	x3, x3, #0xf40
  404ef8:	mov	w2, #0x5f                  	// #95
  404efc:	mov	w0, wzr
  404f00:	bl	403a20 <log_oom_internal@plt>
  404f04:	mov	w20, w0
  404f08:	b	404fd4 <ascii_strlower_n@plt+0xbc4>
  404f0c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  404f10:	ldrb	w21, [x8, #16]
  404f14:	mov	w20, w0
  404f18:	mov	w0, wzr
  404f1c:	bl	4039b0 <log_get_max_level_realm@plt>
  404f20:	cmn	w20, #0x13
  404f24:	b.ne	404f88 <ascii_strlower_n@plt+0xb78>  // b.any
  404f28:	cbz	w21, 404f88 <ascii_strlower_n@plt+0xb78>
  404f2c:	cmp	w0, #0x7
  404f30:	b.lt	404f60 <ascii_strlower_n@plt+0xb50>  // b.tstop
  404f34:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  404f38:	adrp	x4, 417000 <ascii_strlower_n@plt+0x12bf0>
  404f3c:	adrp	x5, 417000 <ascii_strlower_n@plt+0x12bf0>
  404f40:	add	x2, x2, #0xf07
  404f44:	add	x4, x4, #0xf40
  404f48:	add	x5, x5, #0xf70
  404f4c:	mov	w0, #0x7                   	// #7
  404f50:	mov	w3, #0x64                  	// #100
  404f54:	mov	w1, wzr
  404f58:	mov	x6, x19
  404f5c:	bl	4039c0 <log_internal_realm@plt>
  404f60:	mov	w20, wzr
  404f64:	b	404fd4 <ascii_strlower_n@plt+0xbc4>
  404f68:	adrp	x20, 440000 <ascii_strlower_n@plt+0x3bbf0>
  404f6c:	ldr	x0, [x20, #40]
  404f70:	str	w9, [x8, #56]
  404f74:	bl	403a30 <free@plt>
  404f78:	str	x19, [x20, #40]
  404f7c:	mov	w20, #0x1                   	// #1
  404f80:	mov	x19, xzr
  404f84:	b	404fd4 <ascii_strlower_n@plt+0xbc4>
  404f88:	cmp	w0, #0x3
  404f8c:	b.lt	404fc8 <ascii_strlower_n@plt+0xbb8>  // b.tstop
  404f90:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  404f94:	adrp	x4, 417000 <ascii_strlower_n@plt+0x12bf0>
  404f98:	adrp	x5, 417000 <ascii_strlower_n@plt+0x12bf0>
  404f9c:	add	x2, x2, #0xf07
  404fa0:	add	x4, x4, #0xf40
  404fa4:	add	x5, x5, #0xfa6
  404fa8:	mov	w0, #0x3                   	// #3
  404fac:	mov	w3, #0x68                  	// #104
  404fb0:	mov	w1, w20
  404fb4:	mov	x6, x19
  404fb8:	bl	4039c0 <log_internal_realm@plt>
  404fbc:	b	404f04 <ascii_strlower_n@plt+0xaf4>
  404fc0:	mov	w20, #0xffffffea            	// #-22
  404fc4:	b	404fd4 <ascii_strlower_n@plt+0xbc4>
  404fc8:	mov	w8, wzr
  404fcc:	neg	w9, w20
  404fd0:	sub	w20, w8, w9, uxtb
  404fd4:	mov	x0, x19
  404fd8:	bl	403a30 <free@plt>
  404fdc:	mov	w0, w20
  404fe0:	ldp	x20, x19, [sp, #32]
  404fe4:	ldr	x21, [sp, #16]
  404fe8:	ldp	x29, x30, [sp], #48
  404fec:	ret
  404ff0:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  404ff4:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  404ff8:	adrp	x4, 417000 <ascii_strlower_n@plt+0x12bf0>
  404ffc:	add	x1, x1, #0xf02
  405000:	add	x2, x2, #0xf07
  405004:	add	x4, x4, #0xf20
  405008:	mov	w3, #0x55                  	// #85
  40500c:	bl	403aa0 <log_assert_failed_realm@plt>
  405010:	sub	sp, sp, #0x90
  405014:	stp	x22, x21, [sp, #112]
  405018:	adrp	x21, 417000 <ascii_strlower_n@plt+0x12bf0>
  40501c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  405020:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf0>
  405024:	add	x21, x21, #0xff4
  405028:	stp	x20, x19, [sp, #128]
  40502c:	mov	x19, x1
  405030:	mov	w20, w0
  405034:	str	w0, [x8, #152]
  405038:	str	x1, [x9, #160]
  40503c:	mov	w0, #0x6                   	// #6
  405040:	mov	x1, x21
  405044:	stp	x29, x30, [sp, #48]
  405048:	stp	x28, x27, [sp, #64]
  40504c:	stp	x26, x25, [sp, #80]
  405050:	stp	x24, x23, [sp, #96]
  405054:	add	x29, sp, #0x30
  405058:	str	xzr, [sp, #8]
  40505c:	bl	403b00 <setlocale@plt>
  405060:	mov	w0, #0x1                   	// #1
  405064:	bl	403b10 <log_show_color@plt>
  405068:	mov	w0, wzr
  40506c:	bl	403b20 <log_parse_environment_realm@plt>
  405070:	bl	403b30 <log_open@plt>
  405074:	adrp	x27, 440000 <ascii_strlower_n@plt+0x3bbf0>
  405078:	ldr	x22, [x27, #144]
  40507c:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  405080:	add	x1, x1, #0xff5
  405084:	mov	x0, x22
  405088:	bl	403b40 <strcmp@plt>
  40508c:	cbz	w0, 405424 <ascii_strlower_n@plt+0x1014>
  405090:	adrp	x1, 418000 <ascii_strlower_n@plt+0x13bf0>
  405094:	add	x1, x1, #0x0
  405098:	mov	x0, x22
  40509c:	bl	403b40 <strcmp@plt>
  4050a0:	cbz	w0, 405434 <ascii_strlower_n@plt+0x1024>
  4050a4:	tbnz	w20, #31, 406220 <ascii_strlower_n@plt+0x1e10>
  4050a8:	cbz	x19, 406240 <ascii_strlower_n@plt+0x1e30>
  4050ac:	adrp	x2, 418000 <ascii_strlower_n@plt+0x13bf0>
  4050b0:	adrp	x3, 41d000 <ascii_strlower_n@plt+0x18bf0>
  4050b4:	add	x2, x2, #0x14d
  4050b8:	add	x3, x3, #0xf90
  4050bc:	mov	w0, w20
  4050c0:	mov	x1, x19
  4050c4:	mov	x4, xzr
  4050c8:	bl	4039a0 <getopt_long@plt>
  4050cc:	tbnz	w0, #31, 4058f8 <ascii_strlower_n@plt+0x14e8>
  4050d0:	adrp	x21, 417000 <ascii_strlower_n@plt+0x12bf0>
  4050d4:	adrp	x22, 418000 <ascii_strlower_n@plt+0x13bf0>
  4050d8:	adrp	x23, 41d000 <ascii_strlower_n@plt+0x18bf0>
  4050dc:	adrp	x28, 41d000 <ascii_strlower_n@plt+0x18bf0>
  4050e0:	adrp	x26, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4050e4:	add	x21, x21, #0x870
  4050e8:	add	x22, x22, #0x14d
  4050ec:	add	x23, x23, #0xf90
  4050f0:	adrp	x24, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4050f4:	add	x28, x28, #0xb28
  4050f8:	cmp	w0, #0x6f
  4050fc:	b.gt	405124 <ascii_strlower_n@plt+0xd14>
  405100:	cmp	w0, #0x62
  405104:	b.gt	405164 <ascii_strlower_n@plt+0xd54>
  405108:	cmp	w0, #0x34
  40510c:	b.eq	405240 <ascii_strlower_n@plt+0xe30>  // b.none
  405110:	cmp	w0, #0x36
  405114:	b.ne	4059bc <ascii_strlower_n@plt+0x15ac>  // b.any
  405118:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40511c:	mov	w9, #0xa                   	// #10
  405120:	b	405248 <ascii_strlower_n@plt+0xe38>
  405124:	sub	w8, w0, #0x100
  405128:	cmp	w8, #0x7
  40512c:	b.hi	40518c <ascii_strlower_n@plt+0xd7c>  // b.pmore
  405130:	adr	x9, 405140 <ascii_strlower_n@plt+0xd30>
  405134:	ldrh	w10, [x28, x8, lsl #1]
  405138:	add	x9, x9, x10, lsl #2
  40513c:	br	x9
  405140:	ldr	x0, [x26, #168]
  405144:	bl	403b50 <parse_boolean@plt>
  405148:	mov	w25, w0
  40514c:	tbnz	w0, #31, 405ca0 <ascii_strlower_n@plt+0x1890>
  405150:	cmp	w25, #0x0
  405154:	cset	w8, ne  // ne = any
  405158:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40515c:	strb	w8, [x9]
  405160:	b	4053a4 <ascii_strlower_n@plt+0xf94>
  405164:	cmp	w0, #0x63
  405168:	b.eq	405250 <ascii_strlower_n@plt+0xe40>  // b.none
  40516c:	cmp	w0, #0x68
  405170:	b.eq	4059b4 <ascii_strlower_n@plt+0x15a4>  // b.none
  405174:	cmp	w0, #0x69
  405178:	b.ne	4059c4 <ascii_strlower_n@plt+0x15b4>  // b.any
  40517c:	ldr	x0, [x26, #168]
  405180:	bl	404df8 <ascii_strlower_n@plt+0x9e8>
  405184:	tbz	w0, #31, 4053a4 <ascii_strlower_n@plt+0xf94>
  405188:	b	405fd0 <ascii_strlower_n@plt+0x1bc0>
  40518c:	cmp	w0, #0x70
  405190:	b.ne	4052a8 <ascii_strlower_n@plt+0xe98>  // b.any
  405194:	ldr	x25, [x26, #168]
  405198:	mov	x1, x21
  40519c:	mov	x0, x25
  4051a0:	bl	403b40 <strcmp@plt>
  4051a4:	cbz	w0, 405bbc <ascii_strlower_n@plt+0x17ac>
  4051a8:	adrp	x1, 418000 <ascii_strlower_n@plt+0x13bf0>
  4051ac:	mov	x0, x25
  4051b0:	add	x1, x1, #0x1fc
  4051b4:	bl	403b40 <strcmp@plt>
  4051b8:	cbz	w0, 4053dc <ascii_strlower_n@plt+0xfcc>
  4051bc:	adrp	x1, 418000 <ascii_strlower_n@plt+0x13bf0>
  4051c0:	mov	x0, x25
  4051c4:	add	x1, x1, #0x200
  4051c8:	bl	403b40 <strcmp@plt>
  4051cc:	cbz	w0, 4053e8 <ascii_strlower_n@plt+0xfd8>
  4051d0:	adrp	x1, 418000 <ascii_strlower_n@plt+0x13bf0>
  4051d4:	mov	x0, x25
  4051d8:	add	x1, x1, #0x206
  4051dc:	bl	403b40 <strcmp@plt>
  4051e0:	cbz	w0, 4053f4 <ascii_strlower_n@plt+0xfe4>
  4051e4:	adrp	x1, 418000 <ascii_strlower_n@plt+0x13bf0>
  4051e8:	mov	x0, x25
  4051ec:	add	x1, x1, #0x211
  4051f0:	bl	403b40 <strcmp@plt>
  4051f4:	cbz	w0, 405400 <ascii_strlower_n@plt+0xff0>
  4051f8:	adrp	x1, 418000 <ascii_strlower_n@plt+0x13bf0>
  4051fc:	mov	x0, x25
  405200:	add	x1, x1, #0x21c
  405204:	bl	403b40 <strcmp@plt>
  405208:	cbz	w0, 40540c <ascii_strlower_n@plt+0xffc>
  40520c:	adrp	x1, 418000 <ascii_strlower_n@plt+0x13bf0>
  405210:	mov	x0, x25
  405214:	add	x1, x1, #0x221
  405218:	bl	403b40 <strcmp@plt>
  40521c:	cbz	w0, 405418 <ascii_strlower_n@plt+0x1008>
  405220:	adrp	x1, 418000 <ascii_strlower_n@plt+0x13bf0>
  405224:	mov	x0, x25
  405228:	add	x1, x1, #0x22b
  40522c:	bl	403b40 <strcmp@plt>
  405230:	cbnz	w0, 406160 <ascii_strlower_n@plt+0x1d50>
  405234:	ldr	x8, [x24, #72]
  405238:	orr	x8, x8, #0x10
  40523c:	b	4053a0 <ascii_strlower_n@plt+0xf90>
  405240:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  405244:	mov	w9, #0x2                   	// #2
  405248:	str	w9, [x8, #60]
  40524c:	b	4053a4 <ascii_strlower_n@plt+0xf94>
  405250:	ldr	x25, [x26, #168]
  405254:	mov	x1, x21
  405258:	mov	x0, x25
  40525c:	bl	403b40 <strcmp@plt>
  405260:	cbz	w0, 405b7c <ascii_strlower_n@plt+0x176c>
  405264:	mov	x0, x25
  405268:	bl	4172fc <ascii_strlower_n@plt+0x12eec>
  40526c:	mov	w25, w0
  405270:	tbnz	w0, #31, 405b84 <ascii_strlower_n@plt+0x1774>
  405274:	cmp	w25, #0x10, lsl #12
  405278:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40527c:	strh	w25, [x8, #68]
  405280:	b.cc	4053a4 <ascii_strlower_n@plt+0xf94>  // b.lo, b.ul, b.last
  405284:	b	4061e0 <ascii_strlower_n@plt+0x1dd0>
  405288:	ldr	x0, [x26, #168]
  40528c:	bl	403b50 <parse_boolean@plt>
  405290:	mov	w25, w0
  405294:	tbnz	w0, #31, 405bd0 <ascii_strlower_n@plt+0x17c0>
  405298:	ldr	x8, [x24, #72]
  40529c:	orr	x9, x8, #0x40
  4052a0:	and	x8, x8, #0xffffffffffffffbf
  4052a4:	b	405398 <ascii_strlower_n@plt+0xf88>
  4052a8:	cmp	w0, #0x74
  4052ac:	b.ne	4059c4 <ascii_strlower_n@plt+0x15b4>  // b.any
  4052b0:	ldr	x25, [x26, #168]
  4052b4:	mov	x1, x21
  4052b8:	mov	x0, x25
  4052bc:	bl	403b40 <strcmp@plt>
  4052c0:	cbz	w0, 405bc4 <ascii_strlower_n@plt+0x17b4>
  4052c4:	mov	x0, x25
  4052c8:	bl	416ed8 <ascii_strlower_n@plt+0x12ac8>
  4052cc:	mov	w25, w0
  4052d0:	tbnz	w0, #31, 405d14 <ascii_strlower_n@plt+0x1904>
  4052d4:	cmp	w25, #0x10, lsl #12
  4052d8:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4052dc:	strh	w25, [x8, #64]
  4052e0:	b.cc	4053a4 <ascii_strlower_n@plt+0xf94>  // b.lo, b.ul, b.last
  4052e4:	b	406200 <ascii_strlower_n@plt+0x1df0>
  4052e8:	ldr	x0, [x26, #168]
  4052ec:	bl	403b50 <parse_boolean@plt>
  4052f0:	mov	w25, w0
  4052f4:	tbnz	w0, #31, 405c6c <ascii_strlower_n@plt+0x185c>
  4052f8:	ldr	x8, [x24, #72]
  4052fc:	orr	x9, x8, #0x20
  405300:	and	x8, x8, #0xffffffffffffffdf
  405304:	b	405398 <ascii_strlower_n@plt+0xf88>
  405308:	ldr	x0, [x26, #168]
  40530c:	bl	403b50 <parse_boolean@plt>
  405310:	mov	w25, w0
  405314:	tbnz	w0, #31, 405c38 <ascii_strlower_n@plt+0x1828>
  405318:	ldr	x8, [x24, #72]
  40531c:	orr	x9, x8, #0x80
  405320:	and	x8, x8, #0xffffffffffffff7f
  405324:	b	405398 <ascii_strlower_n@plt+0xf88>
  405328:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40532c:	ldr	w8, [x9, #92]
  405330:	orr	w8, w8, #0x1
  405334:	str	w8, [x9, #92]
  405338:	b	4053a4 <ascii_strlower_n@plt+0xf94>
  40533c:	bl	403b60 <on_tty@plt>
  405340:	tbnz	w0, #0, 405cd4 <ascii_strlower_n@plt+0x18c4>
  405344:	ldr	x25, [x26, #168]
  405348:	cbz	x25, 4053c4 <ascii_strlower_n@plt+0xfb4>
  40534c:	adrp	x1, 418000 <ascii_strlower_n@plt+0x13bf0>
  405350:	mov	x0, x25
  405354:	add	x1, x1, #0x297
  405358:	bl	403b40 <strcmp@plt>
  40535c:	cbz	w0, 4053c4 <ascii_strlower_n@plt+0xfb4>
  405360:	adrp	x1, 418000 <ascii_strlower_n@plt+0x13bf0>
  405364:	mov	x0, x25
  405368:	add	x1, x1, #0x29f
  40536c:	bl	403b40 <strcmp@plt>
  405370:	cbnz	w0, 4060b0 <ascii_strlower_n@plt+0x1ca0>
  405374:	mov	w8, #0x2                   	// #2
  405378:	b	4053c8 <ascii_strlower_n@plt+0xfb8>
  40537c:	ldr	x0, [x26, #168]
  405380:	bl	403b50 <parse_boolean@plt>
  405384:	mov	w25, w0
  405388:	tbnz	w0, #31, 405c04 <ascii_strlower_n@plt+0x17f4>
  40538c:	ldr	x8, [x24, #72]
  405390:	orr	x9, x8, #0x100
  405394:	and	x8, x8, #0xfffffffffffffeff
  405398:	cmp	w25, #0x0
  40539c:	csel	x8, x9, x8, eq  // eq = none
  4053a0:	str	x8, [x24, #72]
  4053a4:	mov	w0, w20
  4053a8:	mov	x1, x19
  4053ac:	mov	x2, x22
  4053b0:	mov	x3, x23
  4053b4:	mov	x4, xzr
  4053b8:	bl	4039a0 <getopt_long@plt>
  4053bc:	tbz	w0, #31, 4050f8 <ascii_strlower_n@plt+0xce8>
  4053c0:	b	4058f8 <ascii_strlower_n@plt+0x14e8>
  4053c4:	mov	w8, #0x1                   	// #1
  4053c8:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4053cc:	str	w8, [x9, #88]
  4053d0:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4053d4:	strb	wzr, [x8]
  4053d8:	b	4053a4 <ascii_strlower_n@plt+0xf94>
  4053dc:	ldr	x8, [x24, #72]
  4053e0:	orr	x8, x8, #0x1
  4053e4:	b	4053a0 <ascii_strlower_n@plt+0xf90>
  4053e8:	ldr	x8, [x24, #72]
  4053ec:	orr	x8, x8, #0x6
  4053f0:	b	4053a0 <ascii_strlower_n@plt+0xf90>
  4053f4:	ldr	x8, [x24, #72]
  4053f8:	orr	x8, x8, #0x2
  4053fc:	b	4053a0 <ascii_strlower_n@plt+0xf90>
  405400:	ldr	x8, [x24, #72]
  405404:	orr	x8, x8, #0x4
  405408:	b	4053a0 <ascii_strlower_n@plt+0xf90>
  40540c:	ldr	x8, [x24, #72]
  405410:	orr	x8, x8, #0x18
  405414:	b	4053a0 <ascii_strlower_n@plt+0xf90>
  405418:	ldr	x8, [x24, #72]
  40541c:	orr	x8, x8, #0x8
  405420:	b	4053a0 <ascii_strlower_n@plt+0xf90>
  405424:	mov	w0, w20
  405428:	mov	x1, x19
  40542c:	bl	40454c <ascii_strlower_n@plt+0x13c>
  405430:	b	405f24 <ascii_strlower_n@plt+0x1b14>
  405434:	tbnz	w20, #31, 406284 <ascii_strlower_n@plt+0x1e74>
  405438:	cbz	x19, 4062a4 <ascii_strlower_n@plt+0x1e94>
  40543c:	adrp	x2, 418000 <ascii_strlower_n@plt+0x13bf0>
  405440:	adrp	x3, 41d000 <ascii_strlower_n@plt+0x18bf0>
  405444:	add	x2, x2, #0x14d
  405448:	add	x3, x3, #0xbb0
  40544c:	mov	w0, w20
  405450:	mov	x1, x19
  405454:	mov	x4, xzr
  405458:	bl	4039a0 <getopt_long@plt>
  40545c:	tbnz	w0, #31, 40594c <ascii_strlower_n@plt+0x153c>
  405460:	adrp	x23, 418000 <ascii_strlower_n@plt+0x13bf0>
  405464:	adrp	x24, 41d000 <ascii_strlower_n@plt+0x18bf0>
  405468:	adrp	x22, 41d000 <ascii_strlower_n@plt+0x18bf0>
  40546c:	adrp	x26, 440000 <ascii_strlower_n@plt+0x3bbf0>
  405470:	add	x23, x23, #0x14d
  405474:	add	x24, x24, #0xbb0
  405478:	adrp	x28, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40547c:	add	x22, x22, #0xb38
  405480:	cmp	w0, #0x6f
  405484:	b.le	4054c8 <ascii_strlower_n@plt+0x10b8>
  405488:	sub	w8, w0, #0x100
  40548c:	cmp	w8, #0x17
  405490:	b.hi	405514 <ascii_strlower_n@plt+0x1104>  // b.pmore
  405494:	adr	x9, 4054a4 <ascii_strlower_n@plt+0x1094>
  405498:	ldrh	w10, [x22, x8, lsl #1]
  40549c:	add	x9, x9, x10, lsl #2
  4054a0:	br	x9
  4054a4:	ldr	x0, [x26, #168]
  4054a8:	bl	403b50 <parse_boolean@plt>
  4054ac:	mov	w25, w0
  4054b0:	tbnz	w0, #31, 405d84 <ascii_strlower_n@plt+0x1974>
  4054b4:	cmp	w25, #0x0
  4054b8:	cset	w8, ne  // ne = any
  4054bc:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4054c0:	strb	w8, [x9]
  4054c4:	b	405854 <ascii_strlower_n@plt+0x1444>
  4054c8:	cmp	w0, #0x62
  4054cc:	b.gt	4054ec <ascii_strlower_n@plt+0x10dc>
  4054d0:	cmp	w0, #0x34
  4054d4:	b.eq	4055d0 <ascii_strlower_n@plt+0x11c0>  // b.none
  4054d8:	cmp	w0, #0x36
  4054dc:	b.ne	405a50 <ascii_strlower_n@plt+0x1640>  // b.any
  4054e0:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4054e4:	mov	w9, #0xa                   	// #10
  4054e8:	b	4055d8 <ascii_strlower_n@plt+0x11c8>
  4054ec:	cmp	w0, #0x63
  4054f0:	b.eq	4055e0 <ascii_strlower_n@plt+0x11d0>  // b.none
  4054f4:	cmp	w0, #0x68
  4054f8:	b.eq	405a60 <ascii_strlower_n@plt+0x1650>  // b.none
  4054fc:	cmp	w0, #0x69
  405500:	b.ne	406260 <ascii_strlower_n@plt+0x1e50>  // b.any
  405504:	ldr	x0, [x26, #168]
  405508:	bl	404df8 <ascii_strlower_n@plt+0x9e8>
  40550c:	tbz	w0, #31, 405854 <ascii_strlower_n@plt+0x1444>
  405510:	b	405fd0 <ascii_strlower_n@plt+0x1bc0>
  405514:	cmp	w0, #0x70
  405518:	b.ne	405694 <ascii_strlower_n@plt+0x1284>  // b.any
  40551c:	ldr	x25, [x26, #168]
  405520:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  405524:	add	x1, x1, #0x870
  405528:	mov	x0, x25
  40552c:	bl	403b40 <strcmp@plt>
  405530:	cbz	w0, 405bbc <ascii_strlower_n@plt+0x17ac>
  405534:	adrp	x1, 418000 <ascii_strlower_n@plt+0x13bf0>
  405538:	mov	x0, x25
  40553c:	add	x1, x1, #0x1fc
  405540:	bl	403b40 <strcmp@plt>
  405544:	cbz	w0, 405894 <ascii_strlower_n@plt+0x1484>
  405548:	adrp	x1, 418000 <ascii_strlower_n@plt+0x13bf0>
  40554c:	mov	x0, x25
  405550:	add	x1, x1, #0x200
  405554:	bl	403b40 <strcmp@plt>
  405558:	cbz	w0, 4058a4 <ascii_strlower_n@plt+0x1494>
  40555c:	adrp	x1, 418000 <ascii_strlower_n@plt+0x13bf0>
  405560:	mov	x0, x25
  405564:	add	x1, x1, #0x206
  405568:	bl	403b40 <strcmp@plt>
  40556c:	cbz	w0, 4058b4 <ascii_strlower_n@plt+0x14a4>
  405570:	adrp	x1, 418000 <ascii_strlower_n@plt+0x13bf0>
  405574:	mov	x0, x25
  405578:	add	x1, x1, #0x211
  40557c:	bl	403b40 <strcmp@plt>
  405580:	cbz	w0, 4058c4 <ascii_strlower_n@plt+0x14b4>
  405584:	adrp	x1, 418000 <ascii_strlower_n@plt+0x13bf0>
  405588:	mov	x0, x25
  40558c:	add	x1, x1, #0x21c
  405590:	bl	403b40 <strcmp@plt>
  405594:	cbz	w0, 4058d4 <ascii_strlower_n@plt+0x14c4>
  405598:	adrp	x1, 418000 <ascii_strlower_n@plt+0x13bf0>
  40559c:	mov	x0, x25
  4055a0:	add	x1, x1, #0x221
  4055a4:	bl	403b40 <strcmp@plt>
  4055a8:	cbz	w0, 4058e4 <ascii_strlower_n@plt+0x14d4>
  4055ac:	adrp	x1, 418000 <ascii_strlower_n@plt+0x13bf0>
  4055b0:	mov	x0, x25
  4055b4:	add	x1, x1, #0x22b
  4055b8:	bl	403b40 <strcmp@plt>
  4055bc:	cbnz	w0, 40619c <ascii_strlower_n@plt+0x1d8c>
  4055c0:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4055c4:	ldr	x8, [x9, #72]
  4055c8:	orr	x8, x8, #0x10
  4055cc:	b	4058f0 <ascii_strlower_n@plt+0x14e0>
  4055d0:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4055d4:	mov	w9, #0x2                   	// #2
  4055d8:	str	w9, [x8, #60]
  4055dc:	b	405854 <ascii_strlower_n@plt+0x1444>
  4055e0:	ldr	x25, [x26, #168]
  4055e4:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  4055e8:	add	x1, x1, #0x870
  4055ec:	mov	x0, x25
  4055f0:	bl	403b40 <strcmp@plt>
  4055f4:	cbz	w0, 405b7c <ascii_strlower_n@plt+0x176c>
  4055f8:	mov	x0, x25
  4055fc:	bl	4172fc <ascii_strlower_n@plt+0x12eec>
  405600:	mov	w25, w0
  405604:	tbnz	w0, #31, 405d4c <ascii_strlower_n@plt+0x193c>
  405608:	cmp	w25, #0x10, lsl #12
  40560c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  405610:	strh	w25, [x8, #68]
  405614:	b.cc	405854 <ascii_strlower_n@plt+0x1444>  // b.lo, b.ul, b.last
  405618:	b	4062c4 <ascii_strlower_n@plt+0x1eb4>
  40561c:	ldr	x1, [x26, #168]
  405620:	adrp	x0, 440000 <ascii_strlower_n@plt+0x3bbf0>
  405624:	add	x0, x0, #0x18
  405628:	bl	403a60 <strv_extend@plt>
  40562c:	tbz	w0, #31, 40584c <ascii_strlower_n@plt+0x143c>
  405630:	b	405e98 <ascii_strlower_n@plt+0x1a88>
  405634:	mov	w8, #0x8                   	// #8
  405638:	b	405850 <ascii_strlower_n@plt+0x1440>
  40563c:	mov	w8, #0x6                   	// #6
  405640:	b	405850 <ascii_strlower_n@plt+0x1440>
  405644:	ldr	x0, [x26, #168]
  405648:	bl	403b50 <parse_boolean@plt>
  40564c:	mov	w25, w0
  405650:	tbnz	w0, #31, 405eb8 <ascii_strlower_n@plt+0x1aa8>
  405654:	adrp	x10, 440000 <ascii_strlower_n@plt+0x3bbf0>
  405658:	ldr	x8, [x10, #72]
  40565c:	orr	x9, x8, #0x80
  405660:	and	x8, x8, #0xffffffffffffff7f
  405664:	b	405790 <ascii_strlower_n@plt+0x1380>
  405668:	ldr	x0, [x26, #168]
  40566c:	bl	403b50 <parse_boolean@plt>
  405670:	mov	w25, w0
  405674:	tbnz	w0, #31, 405e4c <ascii_strlower_n@plt+0x1a3c>
  405678:	adrp	x10, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40567c:	ldr	x8, [x10, #72]
  405680:	orr	x9, x8, #0x100
  405684:	and	x8, x8, #0xfffffffffffffeff
  405688:	b	405790 <ascii_strlower_n@plt+0x1380>
  40568c:	mov	w8, #0x9                   	// #9
  405690:	b	405850 <ascii_strlower_n@plt+0x1440>
  405694:	cmp	w0, #0x74
  405698:	b.ne	406260 <ascii_strlower_n@plt+0x1e50>  // b.any
  40569c:	ldr	x25, [x26, #168]
  4056a0:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  4056a4:	add	x1, x1, #0x870
  4056a8:	mov	x0, x25
  4056ac:	bl	403b40 <strcmp@plt>
  4056b0:	cbz	w0, 405bc4 <ascii_strlower_n@plt+0x17b4>
  4056b4:	mov	x0, x25
  4056b8:	bl	416ed8 <ascii_strlower_n@plt+0x12ac8>
  4056bc:	mov	w25, w0
  4056c0:	tbnz	w0, #31, 406070 <ascii_strlower_n@plt+0x1c60>
  4056c4:	cmp	w25, #0x10, lsl #12
  4056c8:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4056cc:	strh	w25, [x8, #64]
  4056d0:	b.cs	4062e4 <ascii_strlower_n@plt+0x1ed4>  // b.hs, b.nlast
  4056d4:	mov	w8, #0x1                   	// #1
  4056d8:	b	405850 <ascii_strlower_n@plt+0x1440>
  4056dc:	mov	w8, #0x2                   	// #2
  4056e0:	b	405850 <ascii_strlower_n@plt+0x1440>
  4056e4:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4056e8:	ldr	w8, [x9, #92]
  4056ec:	orr	w8, w8, #0x1
  4056f0:	str	w8, [x9, #92]
  4056f4:	b	405854 <ascii_strlower_n@plt+0x1444>
  4056f8:	ldr	x0, [x26, #168]
  4056fc:	bl	403b50 <parse_boolean@plt>
  405700:	mov	w25, w0
  405704:	tbnz	w0, #31, 405db8 <ascii_strlower_n@plt+0x19a8>
  405708:	adrp	x10, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40570c:	ldr	x8, [x10, #72]
  405710:	orr	x9, x8, #0x20
  405714:	and	x8, x8, #0xffffffffffffffdf
  405718:	b	405790 <ascii_strlower_n@plt+0x1380>
  40571c:	ldr	x25, [x26, #168]
  405720:	mov	w8, #0x4                   	// #4
  405724:	str	w8, [x28, #20]
  405728:	cbz	x25, 40574c <ascii_strlower_n@plt+0x133c>
  40572c:	adrp	x8, 41d000 <ascii_strlower_n@plt+0x18bf0>
  405730:	add	x8, x8, #0xf70
  405734:	ldp	q0, q1, [x8]
  405738:	add	x0, sp, #0x10
  40573c:	mov	x1, x25
  405740:	stp	q0, q1, [sp, #16]
  405744:	bl	403b70 <strv_find@plt>
  405748:	cbz	x0, 4060ec <ascii_strlower_n@plt+0x1cdc>
  40574c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  405750:	str	x25, [x8, #80]
  405754:	b	405854 <ascii_strlower_n@plt+0x1444>
  405758:	ldr	x1, [x26, #168]
  40575c:	adrp	x0, 440000 <ascii_strlower_n@plt+0x3bbf0>
  405760:	add	x0, x0, #0x20
  405764:	bl	403a60 <strv_extend@plt>
  405768:	tbz	w0, #31, 40584c <ascii_strlower_n@plt+0x143c>
  40576c:	b	405dec <ascii_strlower_n@plt+0x19dc>
  405770:	ldr	x0, [x26, #168]
  405774:	bl	403b50 <parse_boolean@plt>
  405778:	mov	w25, w0
  40577c:	tbnz	w0, #31, 405eec <ascii_strlower_n@plt+0x1adc>
  405780:	adrp	x10, 440000 <ascii_strlower_n@plt+0x3bbf0>
  405784:	ldr	x8, [x10, #72]
  405788:	orr	x9, x8, #0x40
  40578c:	and	x8, x8, #0xffffffffffffffbf
  405790:	cmp	w25, #0x0
  405794:	csel	x8, x9, x8, eq  // eq = none
  405798:	str	x8, [x10, #72]
  40579c:	b	405854 <ascii_strlower_n@plt+0x1444>
  4057a0:	mov	w8, #0x3                   	// #3
  4057a4:	b	405850 <ascii_strlower_n@plt+0x1440>
  4057a8:	mov	w8, #0x5                   	// #5
  4057ac:	b	405850 <ascii_strlower_n@plt+0x1440>
  4057b0:	mov	w8, #0x7                   	// #7
  4057b4:	b	405850 <ascii_strlower_n@plt+0x1440>
  4057b8:	ldr	x8, [x26, #168]
  4057bc:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4057c0:	str	x8, [x9, #96]
  4057c4:	b	40584c <ascii_strlower_n@plt+0x143c>
  4057c8:	ldr	x8, [x26, #168]
  4057cc:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4057d0:	str	x8, [x9, #112]
  4057d4:	b	40584c <ascii_strlower_n@plt+0x143c>
  4057d8:	ldr	x8, [x26, #168]
  4057dc:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4057e0:	str	x8, [x9, #120]
  4057e4:	b	40584c <ascii_strlower_n@plt+0x143c>
  4057e8:	bl	403b60 <on_tty@plt>
  4057ec:	tbnz	w0, #0, 405e04 <ascii_strlower_n@plt+0x19f4>
  4057f0:	ldr	x25, [x26, #168]
  4057f4:	cbz	x25, 40587c <ascii_strlower_n@plt+0x146c>
  4057f8:	adrp	x1, 418000 <ascii_strlower_n@plt+0x13bf0>
  4057fc:	mov	x0, x25
  405800:	add	x1, x1, #0x297
  405804:	bl	403b40 <strcmp@plt>
  405808:	cbz	w0, 40587c <ascii_strlower_n@plt+0x146c>
  40580c:	adrp	x1, 418000 <ascii_strlower_n@plt+0x13bf0>
  405810:	mov	x0, x25
  405814:	add	x1, x1, #0x29f
  405818:	bl	403b40 <strcmp@plt>
  40581c:	cbnz	w0, 406124 <ascii_strlower_n@plt+0x1d14>
  405820:	mov	w8, #0x2                   	// #2
  405824:	b	405880 <ascii_strlower_n@plt+0x1470>
  405828:	ldr	x1, [x26, #168]
  40582c:	adrp	x0, 440000 <ascii_strlower_n@plt+0x3bbf0>
  405830:	add	x0, x0, #0x30
  405834:	bl	403a60 <strv_extend@plt>
  405838:	tbz	w0, #31, 40584c <ascii_strlower_n@plt+0x143c>
  40583c:	b	405e80 <ascii_strlower_n@plt+0x1a70>
  405840:	ldr	x8, [x26, #168]
  405844:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf0>
  405848:	str	x8, [x9, #104]
  40584c:	mov	w8, #0xa                   	// #10
  405850:	str	w8, [x28, #20]
  405854:	mov	w0, w20
  405858:	mov	x1, x19
  40585c:	mov	x2, x23
  405860:	mov	x3, x24
  405864:	mov	x4, xzr
  405868:	bl	4039a0 <getopt_long@plt>
  40586c:	tbz	w0, #31, 405480 <ascii_strlower_n@plt+0x1070>
  405870:	b	40594c <ascii_strlower_n@plt+0x153c>
  405874:	mov	w8, #0xb                   	// #11
  405878:	b	405850 <ascii_strlower_n@plt+0x1440>
  40587c:	mov	w8, #0x1                   	// #1
  405880:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf0>
  405884:	str	w8, [x9, #88]
  405888:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40588c:	strb	wzr, [x8]
  405890:	b	405854 <ascii_strlower_n@plt+0x1444>
  405894:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf0>
  405898:	ldr	x8, [x9, #72]
  40589c:	orr	x8, x8, #0x1
  4058a0:	b	4058f0 <ascii_strlower_n@plt+0x14e0>
  4058a4:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4058a8:	ldr	x8, [x9, #72]
  4058ac:	orr	x8, x8, #0x6
  4058b0:	b	4058f0 <ascii_strlower_n@plt+0x14e0>
  4058b4:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4058b8:	ldr	x8, [x9, #72]
  4058bc:	orr	x8, x8, #0x2
  4058c0:	b	4058f0 <ascii_strlower_n@plt+0x14e0>
  4058c4:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4058c8:	ldr	x8, [x9, #72]
  4058cc:	orr	x8, x8, #0x4
  4058d0:	b	4058f0 <ascii_strlower_n@plt+0x14e0>
  4058d4:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4058d8:	ldr	x8, [x9, #72]
  4058dc:	orr	x8, x8, #0x18
  4058e0:	b	4058f0 <ascii_strlower_n@plt+0x14e0>
  4058e4:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4058e8:	ldr	x8, [x9, #72]
  4058ec:	orr	x8, x8, #0x8
  4058f0:	str	x8, [x9, #72]
  4058f4:	b	405854 <ascii_strlower_n@plt+0x1444>
  4058f8:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4058fc:	adrp	x11, 440000 <ascii_strlower_n@plt+0x3bbf0>
  405900:	ldrh	w10, [x8, #64]
  405904:	ldrh	w9, [x11, #68]
  405908:	cbnz	w10, 4059a0 <ascii_strlower_n@plt+0x1590>
  40590c:	cbz	w9, 4059a0 <ascii_strlower_n@plt+0x1590>
  405910:	mov	w0, wzr
  405914:	bl	4039b0 <log_get_max_level_realm@plt>
  405918:	cmp	w0, #0x3
  40591c:	b.lt	405a58 <ascii_strlower_n@plt+0x1648>  // b.tstop
  405920:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  405924:	adrp	x4, 418000 <ascii_strlower_n@plt+0x13bf0>
  405928:	adrp	x5, 418000 <ascii_strlower_n@plt+0x13bf0>
  40592c:	mov	w1, #0x16                  	// #22
  405930:	add	x2, x2, #0xf07
  405934:	add	x4, x4, #0xdb1
  405938:	add	x5, x5, #0x360
  40593c:	mov	w0, #0x3                   	// #3
  405940:	movk	w1, #0x4000, lsl #16
  405944:	mov	w3, #0xc0b                 	// #3083
  405948:	b	405f20 <ascii_strlower_n@plt+0x1b10>
  40594c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  405950:	ldrh	w10, [x8, #64]
  405954:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  405958:	ldrh	w9, [x8, #68]
  40595c:	cbnz	w10, 4059ec <ascii_strlower_n@plt+0x15dc>
  405960:	cbz	w9, 4059ec <ascii_strlower_n@plt+0x15dc>
  405964:	mov	w0, wzr
  405968:	bl	4039b0 <log_get_max_level_realm@plt>
  40596c:	cmp	w0, #0x3
  405970:	b.lt	405a58 <ascii_strlower_n@plt+0x1648>  // b.tstop
  405974:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  405978:	adrp	x4, 418000 <ascii_strlower_n@plt+0x13bf0>
  40597c:	adrp	x5, 418000 <ascii_strlower_n@plt+0x13bf0>
  405980:	mov	w1, #0x16                  	// #22
  405984:	add	x2, x2, #0xf07
  405988:	add	x4, x4, #0x159
  40598c:	add	x5, x5, #0x360
  405990:	mov	w0, #0x3                   	// #3
  405994:	movk	w1, #0x4000, lsl #16
  405998:	mov	w3, #0xb41                 	// #2881
  40599c:	b	405f20 <ascii_strlower_n@plt+0x1b10>
  4059a0:	cbz	w10, 405a3c <ascii_strlower_n@plt+0x162c>
  4059a4:	cbnz	w9, 405a3c <ascii_strlower_n@plt+0x162c>
  4059a8:	mov	w8, #0x1                   	// #1
  4059ac:	strh	w8, [x11, #68]
  4059b0:	b	405f30 <ascii_strlower_n@plt+0x1b20>
  4059b4:	bl	4067b0 <ascii_strlower_n@plt+0x23a0>
  4059b8:	b	405f24 <ascii_strlower_n@plt+0x1b14>
  4059bc:	cmp	w0, #0x3f
  4059c0:	b.eq	405a58 <ascii_strlower_n@plt+0x1648>  // b.none
  4059c4:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  4059c8:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  4059cc:	adrp	x4, 418000 <ascii_strlower_n@plt+0x13bf0>
  4059d0:	add	x1, x1, #0x9f5
  4059d4:	add	x2, x2, #0xf07
  4059d8:	add	x4, x4, #0xd8d
  4059dc:	mov	w3, #0xc06                 	// #3078
  4059e0:	b	40627c <ascii_strlower_n@plt+0x1e6c>
  4059e4:	bl	403a50 <version@plt>
  4059e8:	b	405f24 <ascii_strlower_n@plt+0x1b14>
  4059ec:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4059f0:	ldr	w8, [x8, #20]
  4059f4:	cbz	w10, 405acc <ascii_strlower_n@plt+0x16bc>
  4059f8:	cmp	w8, #0x2
  4059fc:	b.ne	405acc <ascii_strlower_n@plt+0x16bc>  // b.any
  405a00:	mov	w0, wzr
  405a04:	bl	4039b0 <log_get_max_level_realm@plt>
  405a08:	cmp	w0, #0x3
  405a0c:	b.lt	405a58 <ascii_strlower_n@plt+0x1648>  // b.tstop
  405a10:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  405a14:	adrp	x4, 418000 <ascii_strlower_n@plt+0x13bf0>
  405a18:	adrp	x5, 418000 <ascii_strlower_n@plt+0x13bf0>
  405a1c:	mov	w1, #0x16                  	// #22
  405a20:	add	x2, x2, #0xf07
  405a24:	add	x4, x4, #0x159
  405a28:	add	x5, x5, #0x397
  405a2c:	mov	w0, #0x3                   	// #3
  405a30:	movk	w1, #0x4000, lsl #16
  405a34:	mov	w3, #0xb45                 	// #2885
  405a38:	b	405f20 <ascii_strlower_n@plt+0x1b10>
  405a3c:	cbnz	w10, 405f30 <ascii_strlower_n@plt+0x1b20>
  405a40:	cbz	w9, 405f30 <ascii_strlower_n@plt+0x1b20>
  405a44:	mov	w9, #0x1                   	// #1
  405a48:	strh	w9, [x8, #64]
  405a4c:	b	405f30 <ascii_strlower_n@plt+0x1b20>
  405a50:	cmp	w0, #0x3f
  405a54:	b.ne	406260 <ascii_strlower_n@plt+0x1e50>  // b.any
  405a58:	mov	w25, #0xffffffea            	// #-22
  405a5c:	b	405fd4 <ascii_strlower_n@plt+0x1bc4>
  405a60:	adrp	x0, 417000 <ascii_strlower_n@plt+0x12bf0>
  405a64:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  405a68:	add	x0, x0, #0xb16
  405a6c:	add	x1, x1, #0xb21
  405a70:	add	x2, sp, #0x10
  405a74:	str	xzr, [sp, #16]
  405a78:	bl	403a70 <terminal_urlify_man@plt>
  405a7c:	tbnz	w0, #31, 405ae0 <ascii_strlower_n@plt+0x16d0>
  405a80:	ldr	x22, [x27, #144]
  405a84:	bl	403b80 <colors_enabled@plt>
  405a88:	adrp	x8, 418000 <ascii_strlower_n@plt+0x13bf0>
  405a8c:	add	x8, x8, #0xcf8
  405a90:	tst	w0, #0x1
  405a94:	csel	x23, x8, x21, ne  // ne = any
  405a98:	bl	403b80 <colors_enabled@plt>
  405a9c:	ldr	x4, [sp, #16]
  405aa0:	adrp	x8, 418000 <ascii_strlower_n@plt+0x13bf0>
  405aa4:	add	x8, x8, #0xd02
  405aa8:	tst	w0, #0x1
  405aac:	adrp	x0, 418000 <ascii_strlower_n@plt+0x13bf0>
  405ab0:	csel	x3, x8, x21, ne  // ne = any
  405ab4:	add	x0, x0, #0x454
  405ab8:	mov	x1, x22
  405abc:	mov	x2, x23
  405ac0:	bl	403a80 <printf@plt>
  405ac4:	mov	w25, wzr
  405ac8:	b	405b00 <ascii_strlower_n@plt+0x16f0>
  405acc:	cbz	w10, 405b0c <ascii_strlower_n@plt+0x16fc>
  405ad0:	cbnz	w9, 405b0c <ascii_strlower_n@plt+0x16fc>
  405ad4:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf0>
  405ad8:	add	x9, x9, #0x44
  405adc:	b	405b1c <ascii_strlower_n@plt+0x170c>
  405ae0:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  405ae4:	adrp	x3, 418000 <ascii_strlower_n@plt+0x13bf0>
  405ae8:	add	x1, x1, #0xf07
  405aec:	add	x3, x3, #0x448
  405af0:	mov	w2, #0x9a4                 	// #2468
  405af4:	mov	w0, wzr
  405af8:	bl	403a20 <log_oom_internal@plt>
  405afc:	mov	w25, w0
  405b00:	ldr	x0, [sp, #16]
  405b04:	bl	403a30 <free@plt>
  405b08:	b	405f28 <ascii_strlower_n@plt+0x1b18>
  405b0c:	cbnz	w10, 405b24 <ascii_strlower_n@plt+0x1714>
  405b10:	cbz	w9, 405b24 <ascii_strlower_n@plt+0x1714>
  405b14:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf0>
  405b18:	add	x9, x9, #0x40
  405b1c:	mov	w10, #0x1                   	// #1
  405b20:	strh	w10, [x9]
  405b24:	and	w8, w8, #0xfffffffe
  405b28:	cmp	w8, #0xa
  405b2c:	b.ne	405f30 <ascii_strlower_n@plt+0x1b20>  // b.any
  405b30:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  405b34:	ldr	w8, [x8, #56]
  405b38:	cmp	w8, #0x0
  405b3c:	b.gt	405f30 <ascii_strlower_n@plt+0x1b20>
  405b40:	mov	w0, wzr
  405b44:	bl	4039b0 <log_get_max_level_realm@plt>
  405b48:	cmp	w0, #0x3
  405b4c:	b.lt	405a58 <ascii_strlower_n@plt+0x1648>  // b.tstop
  405b50:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  405b54:	adrp	x4, 418000 <ascii_strlower_n@plt+0x13bf0>
  405b58:	adrp	x5, 418000 <ascii_strlower_n@plt+0x13bf0>
  405b5c:	mov	w1, #0x16                  	// #22
  405b60:	add	x2, x2, #0xf07
  405b64:	add	x4, x4, #0x159
  405b68:	add	x5, x5, #0x3c2
  405b6c:	mov	w0, #0x3                   	// #3
  405b70:	movk	w1, #0x4000, lsl #16
  405b74:	mov	w3, #0xb51                 	// #2897
  405b78:	b	405f20 <ascii_strlower_n@plt+0x1b10>
  405b7c:	bl	406710 <ascii_strlower_n@plt+0x2300>
  405b80:	b	405bc8 <ascii_strlower_n@plt+0x17b8>
  405b84:	mov	w0, wzr
  405b88:	bl	4039b0 <log_get_max_level_realm@plt>
  405b8c:	cmp	w0, #0x3
  405b90:	b.lt	405fd4 <ascii_strlower_n@plt+0x1bc4>  // b.tstop
  405b94:	ldr	x6, [x26, #168]
  405b98:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  405b9c:	adrp	x4, 418000 <ascii_strlower_n@plt+0x13bf0>
  405ba0:	adrp	x5, 418000 <ascii_strlower_n@plt+0x13bf0>
  405ba4:	add	x2, x2, #0xf07
  405ba8:	add	x4, x4, #0xdb1
  405bac:	add	x5, x5, #0x1a1
  405bb0:	mov	w0, #0x3                   	// #3
  405bb4:	mov	w3, #0xba8                 	// #2984
  405bb8:	b	4060a4 <ascii_strlower_n@plt+0x1c94>
  405bbc:	bl	406780 <ascii_strlower_n@plt+0x2370>
  405bc0:	b	405bc8 <ascii_strlower_n@plt+0x17b8>
  405bc4:	bl	406694 <ascii_strlower_n@plt+0x2284>
  405bc8:	mov	w25, wzr
  405bcc:	b	405fd4 <ascii_strlower_n@plt+0x1bc4>
  405bd0:	mov	w0, wzr
  405bd4:	bl	4039b0 <log_get_max_level_realm@plt>
  405bd8:	cmp	w0, #0x3
  405bdc:	b.lt	406064 <ascii_strlower_n@plt+0x1c54>  // b.tstop
  405be0:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  405be4:	adrp	x4, 418000 <ascii_strlower_n@plt+0x13bf0>
  405be8:	adrp	x5, 418000 <ascii_strlower_n@plt+0x13bf0>
  405bec:	add	x2, x2, #0xf07
  405bf0:	add	x4, x4, #0xdb1
  405bf4:	add	x5, x5, #0x314
  405bf8:	mov	w0, #0x3                   	// #3
  405bfc:	mov	w3, #0xbf3                 	// #3059
  405c00:	b	405f1c <ascii_strlower_n@plt+0x1b0c>
  405c04:	mov	w0, wzr
  405c08:	bl	4039b0 <log_get_max_level_realm@plt>
  405c0c:	cmp	w0, #0x3
  405c10:	b.lt	406064 <ascii_strlower_n@plt+0x1c54>  // b.tstop
  405c14:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  405c18:	adrp	x4, 418000 <ascii_strlower_n@plt+0x13bf0>
  405c1c:	adrp	x5, 418000 <ascii_strlower_n@plt+0x13bf0>
  405c20:	add	x2, x2, #0xf07
  405c24:	add	x4, x4, #0xdb1
  405c28:	add	x5, x5, #0x33d
  405c2c:	mov	w0, #0x3                   	// #3
  405c30:	mov	w3, #0xbfa                 	// #3066
  405c34:	b	405f1c <ascii_strlower_n@plt+0x1b0c>
  405c38:	mov	w0, wzr
  405c3c:	bl	4039b0 <log_get_max_level_realm@plt>
  405c40:	cmp	w0, #0x3
  405c44:	b.lt	406064 <ascii_strlower_n@plt+0x1c54>  // b.tstop
  405c48:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  405c4c:	adrp	x4, 418000 <ascii_strlower_n@plt+0x13bf0>
  405c50:	adrp	x5, 418000 <ascii_strlower_n@plt+0x13bf0>
  405c54:	add	x2, x2, #0xf07
  405c58:	add	x4, x4, #0xdb1
  405c5c:	add	x5, x5, #0x2e7
  405c60:	mov	w0, #0x3                   	// #3
  405c64:	mov	w3, #0xbec                 	// #3052
  405c68:	b	405f1c <ascii_strlower_n@plt+0x1b0c>
  405c6c:	mov	w0, wzr
  405c70:	bl	4039b0 <log_get_max_level_realm@plt>
  405c74:	cmp	w0, #0x3
  405c78:	b.lt	406064 <ascii_strlower_n@plt+0x1c54>  // b.tstop
  405c7c:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  405c80:	adrp	x4, 418000 <ascii_strlower_n@plt+0x13bf0>
  405c84:	adrp	x5, 418000 <ascii_strlower_n@plt+0x13bf0>
  405c88:	add	x2, x2, #0xf07
  405c8c:	add	x4, x4, #0xdb1
  405c90:	add	x5, x5, #0x2c4
  405c94:	mov	w0, #0x3                   	// #3
  405c98:	mov	w3, #0xbe5                 	// #3045
  405c9c:	b	405f1c <ascii_strlower_n@plt+0x1b0c>
  405ca0:	mov	w0, wzr
  405ca4:	bl	4039b0 <log_get_max_level_realm@plt>
  405ca8:	cmp	w0, #0x3
  405cac:	b.lt	406064 <ascii_strlower_n@plt+0x1c54>  // b.tstop
  405cb0:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  405cb4:	adrp	x4, 418000 <ascii_strlower_n@plt+0x13bf0>
  405cb8:	adrp	x5, 418000 <ascii_strlower_n@plt+0x13bf0>
  405cbc:	add	x2, x2, #0xf07
  405cc0:	add	x4, x4, #0xdb1
  405cc4:	add	x5, x5, #0x1d9
  405cc8:	mov	w0, #0x3                   	// #3
  405ccc:	mov	w3, #0xbb3                 	// #2995
  405cd0:	b	405f1c <ascii_strlower_n@plt+0x1b0c>
  405cd4:	mov	w0, wzr
  405cd8:	bl	4039b0 <log_get_max_level_realm@plt>
  405cdc:	cmp	w0, #0x3
  405ce0:	b.lt	405e44 <ascii_strlower_n@plt+0x1a34>  // b.tstop
  405ce4:	mov	w8, #0x16                  	// #22
  405ce8:	movk	w8, #0x4000, lsl #16
  405cec:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  405cf0:	adrp	x4, 418000 <ascii_strlower_n@plt+0x13bf0>
  405cf4:	adrp	x5, 418000 <ascii_strlower_n@plt+0x13bf0>
  405cf8:	add	w1, w8, #0x3
  405cfc:	add	x2, x2, #0xf07
  405d00:	add	x4, x4, #0xdb1
  405d04:	add	x5, x5, #0x271
  405d08:	mov	w0, #0x3                   	// #3
  405d0c:	mov	w3, #0xbd4                 	// #3028
  405d10:	b	405f20 <ascii_strlower_n@plt+0x1b10>
  405d14:	mov	w0, wzr
  405d18:	bl	4039b0 <log_get_max_level_realm@plt>
  405d1c:	cmp	w0, #0x3
  405d20:	b.lt	405fd4 <ascii_strlower_n@plt+0x1bc4>  // b.tstop
  405d24:	ldr	x6, [x26, #168]
  405d28:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  405d2c:	adrp	x4, 418000 <ascii_strlower_n@plt+0x13bf0>
  405d30:	adrp	x5, 418000 <ascii_strlower_n@plt+0x13bf0>
  405d34:	add	x2, x2, #0xf07
  405d38:	add	x4, x4, #0xdb1
  405d3c:	add	x5, x5, #0x16b
  405d40:	mov	w0, #0x3                   	// #3
  405d44:	mov	w3, #0xb98                 	// #2968
  405d48:	b	4060a4 <ascii_strlower_n@plt+0x1c94>
  405d4c:	mov	w0, wzr
  405d50:	bl	4039b0 <log_get_max_level_realm@plt>
  405d54:	cmp	w0, #0x3
  405d58:	b.lt	405fd4 <ascii_strlower_n@plt+0x1bc4>  // b.tstop
  405d5c:	ldr	x6, [x26, #168]
  405d60:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  405d64:	adrp	x4, 418000 <ascii_strlower_n@plt+0x13bf0>
  405d68:	adrp	x5, 418000 <ascii_strlower_n@plt+0x13bf0>
  405d6c:	add	x2, x2, #0xf07
  405d70:	add	x4, x4, #0x159
  405d74:	add	x5, x5, #0x1a1
  405d78:	mov	w0, #0x3                   	// #3
  405d7c:	mov	w3, #0xa8a                 	// #2698
  405d80:	b	4060a4 <ascii_strlower_n@plt+0x1c94>
  405d84:	mov	w0, wzr
  405d88:	bl	4039b0 <log_get_max_level_realm@plt>
  405d8c:	cmp	w0, #0x3
  405d90:	b.lt	406064 <ascii_strlower_n@plt+0x1c54>  // b.tstop
  405d94:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  405d98:	adrp	x4, 418000 <ascii_strlower_n@plt+0x13bf0>
  405d9c:	adrp	x5, 418000 <ascii_strlower_n@plt+0x13bf0>
  405da0:	add	x2, x2, #0xf07
  405da4:	add	x4, x4, #0x159
  405da8:	add	x5, x5, #0x1d9
  405dac:	mov	w0, #0x3                   	// #3
  405db0:	mov	w3, #0xa95                 	// #2709
  405db4:	b	405f1c <ascii_strlower_n@plt+0x1b0c>
  405db8:	mov	w0, wzr
  405dbc:	bl	4039b0 <log_get_max_level_realm@plt>
  405dc0:	cmp	w0, #0x3
  405dc4:	b.lt	406064 <ascii_strlower_n@plt+0x1c54>  // b.tstop
  405dc8:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  405dcc:	adrp	x4, 418000 <ascii_strlower_n@plt+0x13bf0>
  405dd0:	adrp	x5, 418000 <ascii_strlower_n@plt+0x13bf0>
  405dd4:	add	x2, x2, #0xf07
  405dd8:	add	x4, x4, #0x159
  405ddc:	add	x5, x5, #0x2c4
  405de0:	mov	w0, #0x3                   	// #3
  405de4:	mov	w3, #0xad7                 	// #2775
  405de8:	b	405f1c <ascii_strlower_n@plt+0x1b0c>
  405dec:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  405df0:	adrp	x3, 418000 <ascii_strlower_n@plt+0x13bf0>
  405df4:	add	x1, x1, #0xf07
  405df8:	add	x3, x3, #0x159
  405dfc:	mov	w2, #0xb13                 	// #2835
  405e00:	b	405eac <ascii_strlower_n@plt+0x1a9c>
  405e04:	mov	w0, wzr
  405e08:	bl	4039b0 <log_get_max_level_realm@plt>
  405e0c:	cmp	w0, #0x3
  405e10:	b.lt	405e44 <ascii_strlower_n@plt+0x1a34>  // b.tstop
  405e14:	mov	w8, #0x16                  	// #22
  405e18:	movk	w8, #0x4000, lsl #16
  405e1c:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  405e20:	adrp	x4, 418000 <ascii_strlower_n@plt+0x13bf0>
  405e24:	adrp	x5, 418000 <ascii_strlower_n@plt+0x13bf0>
  405e28:	add	w1, w8, #0x3
  405e2c:	add	x2, x2, #0xf07
  405e30:	add	x4, x4, #0x159
  405e34:	add	x5, x5, #0x271
  405e38:	mov	w0, #0x3                   	// #3
  405e3c:	mov	w3, #0xac6                 	// #2758
  405e40:	b	405f20 <ascii_strlower_n@plt+0x1b10>
  405e44:	mov	w25, #0xffffffe7            	// #-25
  405e48:	b	405fd4 <ascii_strlower_n@plt+0x1bc4>
  405e4c:	mov	w0, wzr
  405e50:	bl	4039b0 <log_get_max_level_realm@plt>
  405e54:	cmp	w0, #0x3
  405e58:	b.lt	406064 <ascii_strlower_n@plt+0x1c54>  // b.tstop
  405e5c:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  405e60:	adrp	x4, 418000 <ascii_strlower_n@plt+0x13bf0>
  405e64:	adrp	x5, 418000 <ascii_strlower_n@plt+0x13bf0>
  405e68:	add	x2, x2, #0xf07
  405e6c:	add	x4, x4, #0x159
  405e70:	add	x5, x5, #0x33d
  405e74:	mov	w0, #0x3                   	// #3
  405e78:	mov	w3, #0xaec                 	// #2796
  405e7c:	b	405f1c <ascii_strlower_n@plt+0x1b0c>
  405e80:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  405e84:	adrp	x3, 418000 <ascii_strlower_n@plt+0x13bf0>
  405e88:	add	x1, x1, #0xf07
  405e8c:	add	x3, x3, #0x159
  405e90:	mov	w2, #0xb2f                 	// #2863
  405e94:	b	405eac <ascii_strlower_n@plt+0x1a9c>
  405e98:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  405e9c:	adrp	x3, 418000 <ascii_strlower_n@plt+0x13bf0>
  405ea0:	add	x1, x1, #0xf07
  405ea4:	add	x3, x3, #0x159
  405ea8:	mov	w2, #0xb0b                 	// #2827
  405eac:	mov	w0, wzr
  405eb0:	bl	403a20 <log_oom_internal@plt>
  405eb4:	b	405f24 <ascii_strlower_n@plt+0x1b14>
  405eb8:	mov	w0, wzr
  405ebc:	bl	4039b0 <log_get_max_level_realm@plt>
  405ec0:	cmp	w0, #0x3
  405ec4:	b.lt	406064 <ascii_strlower_n@plt+0x1c54>  // b.tstop
  405ec8:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  405ecc:	adrp	x4, 418000 <ascii_strlower_n@plt+0x13bf0>
  405ed0:	adrp	x5, 418000 <ascii_strlower_n@plt+0x13bf0>
  405ed4:	add	x2, x2, #0xf07
  405ed8:	add	x4, x4, #0x159
  405edc:	add	x5, x5, #0x2e7
  405ee0:	mov	w0, #0x3                   	// #3
  405ee4:	mov	w3, #0xade                 	// #2782
  405ee8:	b	405f1c <ascii_strlower_n@plt+0x1b0c>
  405eec:	mov	w0, wzr
  405ef0:	bl	4039b0 <log_get_max_level_realm@plt>
  405ef4:	cmp	w0, #0x3
  405ef8:	b.lt	406064 <ascii_strlower_n@plt+0x1c54>  // b.tstop
  405efc:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  405f00:	adrp	x4, 418000 <ascii_strlower_n@plt+0x13bf0>
  405f04:	adrp	x5, 418000 <ascii_strlower_n@plt+0x13bf0>
  405f08:	add	x2, x2, #0xf07
  405f0c:	add	x4, x4, #0x159
  405f10:	add	x5, x5, #0x314
  405f14:	mov	w0, #0x3                   	// #3
  405f18:	mov	w3, #0xae5                 	// #2789
  405f1c:	mov	w1, w25
  405f20:	bl	4039c0 <log_internal_realm@plt>
  405f24:	mov	w25, w0
  405f28:	cmp	w25, #0x1
  405f2c:	b.lt	405fd4 <ascii_strlower_n@plt+0x1bc4>  // b.tstop
  405f30:	add	x0, sp, #0x8
  405f34:	bl	403b90 <sd_bus_open_system@plt>
  405f38:	tbnz	w0, #31, 405f7c <ascii_strlower_n@plt+0x1b6c>
  405f3c:	adrp	x8, 41d000 <ascii_strlower_n@plt+0x18bf0>
  405f40:	add	x8, x8, #0xb98
  405f44:	ldr	q0, [x8]
  405f48:	ldr	x8, [x8, #16]
  405f4c:	ldr	x1, [x27, #144]
  405f50:	add	x0, sp, #0x10
  405f54:	str	q0, [sp, #16]
  405f58:	str	x8, [sp, #32]
  405f5c:	bl	403b70 <strv_find@plt>
  405f60:	ldr	x3, [sp, #8]
  405f64:	cbz	x0, 405fbc <ascii_strlower_n@plt+0x1bac>
  405f68:	mov	w0, w20
  405f6c:	mov	x1, x19
  405f70:	mov	x2, x3
  405f74:	bl	406308 <ascii_strlower_n@plt+0x1ef8>
  405f78:	b	405fd0 <ascii_strlower_n@plt+0x1bc0>
  405f7c:	mov	w21, w0
  405f80:	mov	w0, wzr
  405f84:	bl	4039b0 <log_get_max_level_realm@plt>
  405f88:	cmp	w0, #0x3
  405f8c:	b.lt	406054 <ascii_strlower_n@plt+0x1c44>  // b.tstop
  405f90:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  405f94:	adrp	x4, 418000 <ascii_strlower_n@plt+0x13bf0>
  405f98:	adrp	x5, 418000 <ascii_strlower_n@plt+0x13bf0>
  405f9c:	add	x2, x2, #0xf07
  405fa0:	add	x4, x4, #0x10
  405fa4:	add	x5, x5, #0x14
  405fa8:	mov	w0, #0x3                   	// #3
  405fac:	mov	w3, #0xcb5                 	// #3253
  405fb0:	mov	w1, w21
  405fb4:	bl	4039c0 <log_internal_realm@plt>
  405fb8:	b	405fd0 <ascii_strlower_n@plt+0x1bc0>
  405fbc:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf0>
  405fc0:	add	x2, x2, #0x150
  405fc4:	mov	w0, w20
  405fc8:	mov	x1, x19
  405fcc:	bl	403ba0 <dispatch_verb@plt>
  405fd0:	mov	w25, w0
  405fd4:	ldr	x0, [sp, #8]
  405fd8:	cbz	x0, 405fe0 <ascii_strlower_n@plt+0x1bd0>
  405fdc:	bl	403bb0 <sd_bus_flush_close_unref@plt>
  405fe0:	bl	403bc0 <ask_password_agent_close@plt>
  405fe4:	bl	403bd0 <polkit_agent_close@plt>
  405fe8:	bl	403be0 <pager_close@plt>
  405fec:	bl	403bf0 <mac_selinux_finish@plt>
  405ff0:	adrp	x8, 43f000 <ascii_strlower_n@plt+0x3abf0>
  405ff4:	ldr	x8, [x8, #2656]
  405ff8:	adrp	x19, 43f000 <ascii_strlower_n@plt+0x3abf0>
  405ffc:	ldr	x19, [x19, #2664]
  406000:	add	x9, x8, #0x7
  406004:	and	x20, x9, #0xfffffffffffffff8
  406008:	cmp	x20, x19
  40600c:	cset	w9, cs  // cs = hs, nlast
  406010:	cmp	x8, #0x0
  406014:	cset	w8, eq  // eq = none
  406018:	orr	w8, w8, w9
  40601c:	tbnz	w8, #0, 406030 <ascii_strlower_n@plt+0x1c20>
  406020:	ldp	x0, x8, [x20], #16
  406024:	blr	x8
  406028:	cmp	x20, x19
  40602c:	b.cc	406020 <ascii_strlower_n@plt+0x1c10>  // b.lo, b.ul, b.last
  406030:	lsr	w0, w25, #31
  406034:	ldp	x20, x19, [sp, #128]
  406038:	ldp	x22, x21, [sp, #112]
  40603c:	ldp	x24, x23, [sp, #96]
  406040:	ldp	x26, x25, [sp, #80]
  406044:	ldp	x28, x27, [sp, #64]
  406048:	ldp	x29, x30, [sp, #48]
  40604c:	add	sp, sp, #0x90
  406050:	ret
  406054:	mov	w8, wzr
  406058:	neg	w9, w21
  40605c:	sub	w25, w8, w9, uxtb
  406060:	b	405fd4 <ascii_strlower_n@plt+0x1bc4>
  406064:	mov	w8, wzr
  406068:	neg	w9, w25
  40606c:	b	40605c <ascii_strlower_n@plt+0x1c4c>
  406070:	mov	w0, wzr
  406074:	bl	4039b0 <log_get_max_level_realm@plt>
  406078:	cmp	w0, #0x3
  40607c:	b.lt	405fd4 <ascii_strlower_n@plt+0x1bc4>  // b.tstop
  406080:	ldr	x6, [x26, #168]
  406084:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  406088:	adrp	x4, 418000 <ascii_strlower_n@plt+0x13bf0>
  40608c:	adrp	x5, 418000 <ascii_strlower_n@plt+0x13bf0>
  406090:	add	x2, x2, #0xf07
  406094:	add	x4, x4, #0x159
  406098:	add	x5, x5, #0x16b
  40609c:	mov	w0, #0x3                   	// #3
  4060a0:	mov	w3, #0xa79                 	// #2681
  4060a4:	mov	w1, wzr
  4060a8:	bl	4039c0 <log_internal_realm@plt>
  4060ac:	b	405fd4 <ascii_strlower_n@plt+0x1bc4>
  4060b0:	mov	w0, wzr
  4060b4:	bl	4039b0 <log_get_max_level_realm@plt>
  4060b8:	cmp	w0, #0x3
  4060bc:	b.lt	405a58 <ascii_strlower_n@plt+0x1648>  // b.tstop
  4060c0:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  4060c4:	adrp	x4, 418000 <ascii_strlower_n@plt+0x13bf0>
  4060c8:	adrp	x5, 418000 <ascii_strlower_n@plt+0x13bf0>
  4060cc:	mov	w1, #0x16                  	// #22
  4060d0:	add	x2, x2, #0xf07
  4060d4:	add	x4, x4, #0xdb1
  4060d8:	add	x5, x5, #0x2a6
  4060dc:	mov	w0, #0x3                   	// #3
  4060e0:	movk	w1, #0x4000, lsl #16
  4060e4:	mov	w3, #0xbdd                 	// #3037
  4060e8:	b	4061d4 <ascii_strlower_n@plt+0x1dc4>
  4060ec:	bl	4039b0 <log_get_max_level_realm@plt>
  4060f0:	cmp	w0, #0x3
  4060f4:	b.lt	405a58 <ascii_strlower_n@plt+0x1648>  // b.tstop
  4060f8:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  4060fc:	adrp	x4, 418000 <ascii_strlower_n@plt+0x13bf0>
  406100:	adrp	x5, 418000 <ascii_strlower_n@plt+0x13bf0>
  406104:	mov	w1, #0x16                  	// #22
  406108:	add	x2, x2, #0xf07
  40610c:	add	x4, x4, #0x159
  406110:	add	x5, x5, #0x254
  406114:	mov	w0, #0x3                   	// #3
  406118:	movk	w1, #0x4000, lsl #16
  40611c:	mov	w3, #0xac0                 	// #2752
  406120:	b	4061d4 <ascii_strlower_n@plt+0x1dc4>
  406124:	mov	w0, wzr
  406128:	bl	4039b0 <log_get_max_level_realm@plt>
  40612c:	cmp	w0, #0x3
  406130:	b.lt	405a58 <ascii_strlower_n@plt+0x1648>  // b.tstop
  406134:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  406138:	adrp	x4, 418000 <ascii_strlower_n@plt+0x13bf0>
  40613c:	adrp	x5, 418000 <ascii_strlower_n@plt+0x13bf0>
  406140:	mov	w1, #0x16                  	// #22
  406144:	add	x2, x2, #0xf07
  406148:	add	x4, x4, #0x159
  40614c:	add	x5, x5, #0x2a6
  406150:	mov	w0, #0x3                   	// #3
  406154:	movk	w1, #0x4000, lsl #16
  406158:	mov	w3, #0xacf                 	// #2767
  40615c:	b	4061d4 <ascii_strlower_n@plt+0x1dc4>
  406160:	mov	w0, wzr
  406164:	bl	4039b0 <log_get_max_level_realm@plt>
  406168:	cmp	w0, #0x3
  40616c:	b.lt	405a58 <ascii_strlower_n@plt+0x1648>  // b.tstop
  406170:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  406174:	adrp	x4, 418000 <ascii_strlower_n@plt+0x13bf0>
  406178:	adrp	x5, 418000 <ascii_strlower_n@plt+0x13bf0>
  40617c:	mov	w1, #0x16                  	// #22
  406180:	add	x2, x2, #0xf07
  406184:	add	x4, x4, #0xdb1
  406188:	add	x5, x5, #0x235
  40618c:	mov	w0, #0x3                   	// #3
  406190:	movk	w1, #0x4000, lsl #16
  406194:	mov	w3, #0xbcd                 	// #3021
  406198:	b	4061d4 <ascii_strlower_n@plt+0x1dc4>
  40619c:	mov	w0, wzr
  4061a0:	bl	4039b0 <log_get_max_level_realm@plt>
  4061a4:	cmp	w0, #0x3
  4061a8:	b.lt	405a58 <ascii_strlower_n@plt+0x1648>  // b.tstop
  4061ac:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  4061b0:	adrp	x4, 418000 <ascii_strlower_n@plt+0x13bf0>
  4061b4:	adrp	x5, 418000 <ascii_strlower_n@plt+0x13bf0>
  4061b8:	mov	w1, #0x16                  	// #22
  4061bc:	add	x2, x2, #0xf07
  4061c0:	add	x4, x4, #0x159
  4061c4:	add	x5, x5, #0x235
  4061c8:	mov	w0, #0x3                   	// #3
  4061cc:	movk	w1, #0x4000, lsl #16
  4061d0:	mov	w3, #0xaae                 	// #2734
  4061d4:	mov	x6, x25
  4061d8:	bl	4039c0 <log_internal_realm@plt>
  4061dc:	b	405f24 <ascii_strlower_n@plt+0x1b14>
  4061e0:	adrp	x1, 418000 <ascii_strlower_n@plt+0x13bf0>
  4061e4:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  4061e8:	adrp	x4, 418000 <ascii_strlower_n@plt+0x13bf0>
  4061ec:	add	x1, x1, #0x1c4
  4061f0:	add	x2, x2, #0xf07
  4061f4:	add	x4, x4, #0xd8d
  4061f8:	mov	w3, #0xbac                 	// #2988
  4061fc:	b	406300 <ascii_strlower_n@plt+0x1ef0>
  406200:	adrp	x1, 418000 <ascii_strlower_n@plt+0x13bf0>
  406204:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  406208:	adrp	x4, 418000 <ascii_strlower_n@plt+0x13bf0>
  40620c:	add	x1, x1, #0x18d
  406210:	add	x2, x2, #0xf07
  406214:	add	x4, x4, #0xd8d
  406218:	mov	w3, #0xb9c                 	// #2972
  40621c:	b	406300 <ascii_strlower_n@plt+0x1ef0>
  406220:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  406224:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  406228:	adrp	x4, 418000 <ascii_strlower_n@plt+0x13bf0>
  40622c:	add	x1, x1, #0x8b0
  406230:	add	x2, x2, #0xf07
  406234:	add	x4, x4, #0xd8d
  406238:	mov	w3, #0xb76                 	// #2934
  40623c:	b	406300 <ascii_strlower_n@plt+0x1ef0>
  406240:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  406244:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  406248:	adrp	x4, 418000 <ascii_strlower_n@plt+0x13bf0>
  40624c:	add	x1, x1, #0x905
  406250:	add	x2, x2, #0xf07
  406254:	add	x4, x4, #0xd8d
  406258:	mov	w3, #0xb77                 	// #2935
  40625c:	b	406300 <ascii_strlower_n@plt+0x1ef0>
  406260:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  406264:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  406268:	adrp	x4, 418000 <ascii_strlower_n@plt+0x13bf0>
  40626c:	add	x1, x1, #0x9f5
  406270:	add	x2, x2, #0xf07
  406274:	add	x4, x4, #0x129
  406278:	mov	w3, #0xb3c                 	// #2876
  40627c:	mov	w0, wzr
  406280:	bl	403a90 <log_assert_failed_unreachable_realm@plt>
  406284:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  406288:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40628c:	adrp	x4, 418000 <ascii_strlower_n@plt+0x13bf0>
  406290:	add	x1, x1, #0x8b0
  406294:	add	x2, x2, #0xf07
  406298:	add	x4, x4, #0x129
  40629c:	mov	w3, #0xa57                 	// #2647
  4062a0:	b	406300 <ascii_strlower_n@plt+0x1ef0>
  4062a4:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  4062a8:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  4062ac:	adrp	x4, 418000 <ascii_strlower_n@plt+0x13bf0>
  4062b0:	add	x1, x1, #0x905
  4062b4:	add	x2, x2, #0xf07
  4062b8:	add	x4, x4, #0x129
  4062bc:	mov	w3, #0xa58                 	// #2648
  4062c0:	b	406300 <ascii_strlower_n@plt+0x1ef0>
  4062c4:	adrp	x1, 418000 <ascii_strlower_n@plt+0x13bf0>
  4062c8:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  4062cc:	adrp	x4, 418000 <ascii_strlower_n@plt+0x13bf0>
  4062d0:	add	x1, x1, #0x1c4
  4062d4:	add	x2, x2, #0xf07
  4062d8:	add	x4, x4, #0x129
  4062dc:	mov	w3, #0xa8e                 	// #2702
  4062e0:	b	406300 <ascii_strlower_n@plt+0x1ef0>
  4062e4:	adrp	x1, 418000 <ascii_strlower_n@plt+0x13bf0>
  4062e8:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  4062ec:	adrp	x4, 418000 <ascii_strlower_n@plt+0x13bf0>
  4062f0:	add	x1, x1, #0x18d
  4062f4:	add	x2, x2, #0xf07
  4062f8:	add	x4, x4, #0x129
  4062fc:	mov	w3, #0xa7d                 	// #2685
  406300:	mov	w0, wzr
  406304:	bl	403aa0 <log_assert_failed_realm@plt>
  406308:	stp	x29, x30, [sp, #-48]!
  40630c:	stp	x22, x21, [sp, #16]
  406310:	stp	x20, x19, [sp, #32]
  406314:	mov	x29, sp
  406318:	sub	sp, sp, #0x10
  40631c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  406320:	ldr	w8, [x8, #20]
  406324:	add	w8, w8, #0x1
  406328:	cmp	w8, #0xc
  40632c:	b.hi	4063d4 <ascii_strlower_n@plt+0x1fc4>  // b.pmore
  406330:	adrp	x9, 41d000 <ascii_strlower_n@plt+0x18bf0>
  406334:	add	x9, x9, #0xb68
  406338:	adr	x10, 40634c <ascii_strlower_n@plt+0x1f3c>
  40633c:	ldrb	w11, [x9, x8]
  406340:	add	x10, x10, x11, lsl #2
  406344:	mov	x19, x2
  406348:	br	x10
  40634c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  406350:	ldrsw	x8, [x8, #128]
  406354:	sxtw	x9, w0
  406358:	adrp	x0, 419000 <ascii_strlower_n@plt+0x14bf0>
  40635c:	add	x0, x0, #0x70c
  406360:	b	406420 <ascii_strlower_n@plt+0x2010>
  406364:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  406368:	ldr	x8, [x8, #40]
  40636c:	cbz	x8, 406650 <ascii_strlower_n@plt+0x2240>
  406370:	mov	x9, sp
  406374:	mov	x20, sp
  406378:	sub	x1, x9, #0x20
  40637c:	mov	sp, x1
  406380:	adrp	x10, 418000 <ascii_strlower_n@plt+0x13bf0>
  406384:	add	x10, x10, #0x122
  406388:	adrp	x11, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40638c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf0>
  406390:	stp	x8, xzr, [x9, #-24]
  406394:	stur	x10, [x9, #-32]
  406398:	str	wzr, [x11, #128]
  40639c:	add	x2, x2, #0x150
  4063a0:	mov	w0, #0x2                   	// #2
  4063a4:	b	40649c <ascii_strlower_n@plt+0x208c>
  4063a8:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4063ac:	ldrsw	x9, [x8, #128]
  4063b0:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4063b4:	ldr	x8, [x8, #80]
  4063b8:	sxtw	x10, w0
  4063bc:	adrp	x0, 418000 <ascii_strlower_n@plt+0x13bf0>
  4063c0:	sub	x2, x10, x9
  4063c4:	add	x3, x1, x9, lsl #3
  4063c8:	add	x0, x0, #0x82
  4063cc:	mov	x1, x8
  4063d0:	b	40642c <ascii_strlower_n@plt+0x201c>
  4063d4:	mov	w0, wzr
  4063d8:	b	4064a8 <ascii_strlower_n@plt+0x2098>
  4063dc:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4063e0:	ldrsw	x8, [x8, #128]
  4063e4:	sxtw	x9, w0
  4063e8:	adrp	x0, 418000 <ascii_strlower_n@plt+0x13bf0>
  4063ec:	add	x0, x0, #0xa7
  4063f0:	b	406420 <ascii_strlower_n@plt+0x2010>
  4063f4:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4063f8:	ldrsw	x8, [x8, #128]
  4063fc:	sxtw	x9, w0
  406400:	adrp	x0, 418000 <ascii_strlower_n@plt+0x13bf0>
  406404:	add	x0, x0, #0x56
  406408:	b	406420 <ascii_strlower_n@plt+0x2010>
  40640c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  406410:	ldrsw	x8, [x8, #128]
  406414:	sxtw	x9, w0
  406418:	adrp	x0, 418000 <ascii_strlower_n@plt+0x13bf0>
  40641c:	add	x0, x0, #0x7a
  406420:	sub	x2, x9, x8
  406424:	add	x3, x1, x8, lsl #3
  406428:	mov	x1, xzr
  40642c:	mov	x4, x19
  406430:	mov	sp, x29
  406434:	ldp	x20, x19, [sp, #32]
  406438:	ldp	x22, x21, [sp, #16]
  40643c:	ldp	x29, x30, [sp], #48
  406440:	b	4068a4 <ascii_strlower_n@plt+0x2494>
  406444:	adrp	x8, 418000 <ascii_strlower_n@plt+0x13bf0>
  406448:	mov	x20, sp
  40644c:	add	x8, x8, #0xae
  406450:	b	406480 <ascii_strlower_n@plt+0x2070>
  406454:	adrp	x8, 418000 <ascii_strlower_n@plt+0x13bf0>
  406458:	mov	x20, sp
  40645c:	add	x8, x8, #0x8b
  406460:	b	406480 <ascii_strlower_n@plt+0x2070>
  406464:	adrp	x8, 418000 <ascii_strlower_n@plt+0x13bf0>
  406468:	mov	x20, sp
  40646c:	add	x8, x8, #0x96
  406470:	b	406480 <ascii_strlower_n@plt+0x2070>
  406474:	adrp	x8, 418000 <ascii_strlower_n@plt+0x13bf0>
  406478:	mov	x20, sp
  40647c:	add	x8, x8, #0xbb
  406480:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf0>
  406484:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf0>
  406488:	add	x2, x2, #0x150
  40648c:	sub	x1, x29, #0x10
  406490:	mov	w0, #0x1                   	// #1
  406494:	stp	x8, xzr, [x29, #-16]
  406498:	str	wzr, [x9, #128]
  40649c:	mov	x3, x19
  4064a0:	bl	403ba0 <dispatch_verb@plt>
  4064a4:	mov	sp, x20
  4064a8:	mov	sp, x29
  4064ac:	ldp	x20, x19, [sp, #32]
  4064b0:	ldp	x22, x21, [sp, #16]
  4064b4:	ldp	x29, x30, [sp], #48
  4064b8:	ret
  4064bc:	adrp	x22, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4064c0:	ldr	x20, [x22, #40]
  4064c4:	cbz	x20, 406670 <ascii_strlower_n@plt+0x2260>
  4064c8:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4064cc:	ldr	x21, [x8, #24]
  4064d0:	cbz	x21, 406500 <ascii_strlower_n@plt+0x20f0>
  4064d4:	mov	x0, x21
  4064d8:	bl	403c00 <strv_length@plt>
  4064dc:	mov	x2, x0
  4064e0:	adrp	x0, 418000 <ascii_strlower_n@plt+0x13bf0>
  4064e4:	add	x0, x0, #0x1fc
  4064e8:	mov	x1, x20
  4064ec:	mov	x3, x21
  4064f0:	mov	x4, x19
  4064f4:	bl	4068a4 <ascii_strlower_n@plt+0x2494>
  4064f8:	tbz	w0, #31, 406504 <ascii_strlower_n@plt+0x20f4>
  4064fc:	b	4064a8 <ascii_strlower_n@plt+0x2098>
  406500:	mov	w0, wzr
  406504:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  406508:	ldr	x20, [x8, #32]
  40650c:	cbz	x20, 40653c <ascii_strlower_n@plt+0x212c>
  406510:	ldr	x21, [x22, #40]
  406514:	mov	x0, x20
  406518:	bl	403c00 <strv_length@plt>
  40651c:	mov	x2, x0
  406520:	adrp	x0, 417000 <ascii_strlower_n@plt+0x12bf0>
  406524:	add	x0, x0, #0xa82
  406528:	mov	x1, x21
  40652c:	mov	x3, x20
  406530:	mov	x4, x19
  406534:	bl	4068a4 <ascii_strlower_n@plt+0x2494>
  406538:	tbnz	w0, #31, 4064a8 <ascii_strlower_n@plt+0x2098>
  40653c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  406540:	ldr	x20, [x8, #48]
  406544:	cbz	x20, 406574 <ascii_strlower_n@plt+0x2164>
  406548:	ldr	x21, [x22, #40]
  40654c:	mov	x0, x20
  406550:	bl	403c00 <strv_length@plt>
  406554:	mov	x2, x0
  406558:	adrp	x0, 419000 <ascii_strlower_n@plt+0x14bf0>
  40655c:	add	x0, x0, #0x745
  406560:	mov	x1, x21
  406564:	mov	x3, x20
  406568:	mov	x4, x19
  40656c:	bl	4068a4 <ascii_strlower_n@plt+0x2494>
  406570:	tbnz	w0, #31, 4064a8 <ascii_strlower_n@plt+0x2098>
  406574:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  406578:	ldr	x8, [x8, #96]
  40657c:	cbz	x8, 4065a4 <ascii_strlower_n@plt+0x2194>
  406580:	ldr	x1, [x22, #40]
  406584:	adrp	x0, 418000 <ascii_strlower_n@plt+0x13bf0>
  406588:	adrp	x3, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40658c:	add	x0, x0, #0x200
  406590:	add	x3, x3, #0x60
  406594:	mov	w2, #0x1                   	// #1
  406598:	mov	x4, x19
  40659c:	bl	4068a4 <ascii_strlower_n@plt+0x2494>
  4065a0:	tbnz	w0, #31, 4064a8 <ascii_strlower_n@plt+0x2098>
  4065a4:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4065a8:	ldr	x8, [x8, #104]
  4065ac:	cbz	x8, 4065d4 <ascii_strlower_n@plt+0x21c4>
  4065b0:	ldr	x1, [x22, #40]
  4065b4:	adrp	x0, 418000 <ascii_strlower_n@plt+0x13bf0>
  4065b8:	adrp	x3, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4065bc:	add	x0, x0, #0x21c
  4065c0:	add	x3, x3, #0x68
  4065c4:	mov	w2, #0x1                   	// #1
  4065c8:	mov	x4, x19
  4065cc:	bl	4068a4 <ascii_strlower_n@plt+0x2494>
  4065d0:	tbnz	w0, #31, 4064a8 <ascii_strlower_n@plt+0x2098>
  4065d4:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4065d8:	ldr	x8, [x8, #112]
  4065dc:	cbz	x8, 406604 <ascii_strlower_n@plt+0x21f4>
  4065e0:	ldr	x1, [x22, #40]
  4065e4:	adrp	x0, 419000 <ascii_strlower_n@plt+0x14bf0>
  4065e8:	adrp	x3, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4065ec:	add	x0, x0, #0x749
  4065f0:	add	x3, x3, #0x70
  4065f4:	mov	w2, #0x1                   	// #1
  4065f8:	mov	x4, x19
  4065fc:	bl	4068a4 <ascii_strlower_n@plt+0x2494>
  406600:	tbnz	w0, #31, 4064a8 <ascii_strlower_n@plt+0x2098>
  406604:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  406608:	ldr	x8, [x8, #120]
  40660c:	cbz	x8, 4064a8 <ascii_strlower_n@plt+0x2098>
  406610:	ldr	x1, [x22, #40]
  406614:	adrp	x0, 419000 <ascii_strlower_n@plt+0x14bf0>
  406618:	adrp	x3, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40661c:	add	x0, x0, #0x754
  406620:	add	x3, x3, #0x78
  406624:	mov	w2, #0x1                   	// #1
  406628:	b	40642c <ascii_strlower_n@plt+0x201c>
  40662c:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  406630:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  406634:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  406638:	add	x1, x1, #0x75b
  40663c:	add	x2, x2, #0xf07
  406640:	add	x4, x4, #0x71d
  406644:	mov	w3, #0xc9b                 	// #3227
  406648:	mov	w0, wzr
  40664c:	bl	403a90 <log_assert_failed_unreachable_realm@plt>
  406650:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  406654:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  406658:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  40665c:	add	x1, x1, #0x712
  406660:	add	x2, x2, #0xf07
  406664:	add	x4, x4, #0x71d
  406668:	mov	w3, #0xc96                 	// #3222
  40666c:	b	40668c <ascii_strlower_n@plt+0x227c>
  406670:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  406674:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  406678:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  40667c:	add	x1, x1, #0x712
  406680:	add	x2, x2, #0xf07
  406684:	add	x4, x4, #0x71d
  406688:	mov	w3, #0xc67                 	// #3175
  40668c:	mov	w0, wzr
  406690:	bl	403aa0 <log_assert_failed_realm@plt>
  406694:	stp	x29, x30, [sp, #-48]!
  406698:	stp	x20, x19, [sp, #32]
  40669c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4066a0:	ldrb	w8, [x8]
  4066a4:	str	x21, [sp, #16]
  4066a8:	mov	x29, sp
  4066ac:	cbz	w8, 4066bc <ascii_strlower_n@plt+0x22ac>
  4066b0:	adrp	x0, 418000 <ascii_strlower_n@plt+0x13bf0>
  4066b4:	add	x0, x0, #0xd07
  4066b8:	bl	403c10 <puts@plt>
  4066bc:	adrp	x20, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4066c0:	ldr	x0, [x20, #176]
  4066c4:	bl	403c20 <flockfile@plt>
  4066c8:	mov	w19, wzr
  4066cc:	mov	w21, #0x8002                	// #32770
  4066d0:	mov	w0, w19
  4066d4:	bl	416ad4 <ascii_strlower_n@plt+0x126c4>
  4066d8:	cbz	x0, 4066f0 <ascii_strlower_n@plt+0x22e0>
  4066dc:	ldr	x1, [x20, #176]
  4066e0:	bl	403c30 <fputs_unlocked@plt>
  4066e4:	ldr	x1, [x20, #176]
  4066e8:	mov	w0, #0xa                   	// #10
  4066ec:	bl	403c40 <fputc_unlocked@plt>
  4066f0:	add	w19, w19, #0x1
  4066f4:	cmp	w19, w21
  4066f8:	b.ne	4066d0 <ascii_strlower_n@plt+0x22c0>  // b.any
  4066fc:	ldr	x0, [x20, #176]
  406700:	ldp	x20, x19, [sp, #32]
  406704:	ldr	x21, [sp, #16]
  406708:	ldp	x29, x30, [sp], #48
  40670c:	b	403c50 <funlockfile@plt>
  406710:	stp	x29, x30, [sp, #-32]!
  406714:	stp	x20, x19, [sp, #16]
  406718:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40671c:	ldrb	w8, [x8]
  406720:	mov	x29, sp
  406724:	cbz	w8, 406734 <ascii_strlower_n@plt+0x2324>
  406728:	adrp	x0, 418000 <ascii_strlower_n@plt+0x13bf0>
  40672c:	add	x0, x0, #0xd1b
  406730:	bl	403c10 <puts@plt>
  406734:	adrp	x20, 440000 <ascii_strlower_n@plt+0x3bbf0>
  406738:	ldr	x0, [x20, #176]
  40673c:	bl	403c20 <flockfile@plt>
  406740:	mov	w19, wzr
  406744:	mov	w0, w19
  406748:	bl	4172d4 <ascii_strlower_n@plt+0x12ec4>
  40674c:	cbz	x0, 406764 <ascii_strlower_n@plt+0x2354>
  406750:	ldr	x1, [x20, #176]
  406754:	bl	403c30 <fputs_unlocked@plt>
  406758:	ldr	x1, [x20, #176]
  40675c:	mov	w0, #0xa                   	// #10
  406760:	bl	403c40 <fputc_unlocked@plt>
  406764:	add	w19, w19, #0x1
  406768:	cmp	w19, #0x100
  40676c:	b.ne	406744 <ascii_strlower_n@plt+0x2334>  // b.any
  406770:	ldr	x0, [x20, #176]
  406774:	ldp	x20, x19, [sp, #16]
  406778:	ldp	x29, x30, [sp], #32
  40677c:	b	403c50 <funlockfile@plt>
  406780:	stp	x29, x30, [sp, #-16]!
  406784:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  406788:	ldrb	w8, [x8]
  40678c:	mov	x29, sp
  406790:	cbz	w8, 4067a0 <ascii_strlower_n@plt+0x2390>
  406794:	adrp	x0, 418000 <ascii_strlower_n@plt+0x13bf0>
  406798:	add	x0, x0, #0xd31
  40679c:	bl	403c10 <puts@plt>
  4067a0:	adrp	x0, 418000 <ascii_strlower_n@plt+0x13bf0>
  4067a4:	add	x0, x0, #0xd47
  4067a8:	ldp	x29, x30, [sp], #16
  4067ac:	b	403c10 <puts@plt>
  4067b0:	sub	sp, sp, #0x50
  4067b4:	adrp	x0, 417000 <ascii_strlower_n@plt+0x12bf0>
  4067b8:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  4067bc:	add	x0, x0, #0xb16
  4067c0:	add	x1, x1, #0xb21
  4067c4:	add	x2, sp, #0x8
  4067c8:	stp	x29, x30, [sp, #16]
  4067cc:	stp	x24, x23, [sp, #32]
  4067d0:	stp	x22, x21, [sp, #48]
  4067d4:	stp	x20, x19, [sp, #64]
  4067d8:	add	x29, sp, #0x10
  4067dc:	str	xzr, [sp, #8]
  4067e0:	bl	403a70 <terminal_urlify_man@plt>
  4067e4:	tbnz	w0, #31, 406860 <ascii_strlower_n@plt+0x2450>
  4067e8:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4067ec:	ldr	x19, [x8, #144]
  4067f0:	bl	403b80 <colors_enabled@plt>
  4067f4:	adrp	x23, 417000 <ascii_strlower_n@plt+0x12bf0>
  4067f8:	adrp	x22, 418000 <ascii_strlower_n@plt+0x13bf0>
  4067fc:	add	x23, x23, #0xff4
  406800:	add	x22, x22, #0xcf8
  406804:	tst	w0, #0x1
  406808:	csel	x20, x22, x23, ne  // ne = any
  40680c:	bl	403b80 <colors_enabled@plt>
  406810:	adrp	x24, 418000 <ascii_strlower_n@plt+0x13bf0>
  406814:	add	x24, x24, #0xd02
  406818:	tst	w0, #0x1
  40681c:	csel	x21, x24, x23, ne  // ne = any
  406820:	bl	403b80 <colors_enabled@plt>
  406824:	tst	w0, #0x1
  406828:	csel	x22, x22, x23, ne  // ne = any
  40682c:	bl	403b80 <colors_enabled@plt>
  406830:	ldr	x6, [sp, #8]
  406834:	tst	w0, #0x1
  406838:	adrp	x0, 418000 <ascii_strlower_n@plt+0x13bf0>
  40683c:	csel	x5, x24, x23, ne  // ne = any
  406840:	add	x0, x0, #0xdcf
  406844:	mov	x1, x19
  406848:	mov	x2, x20
  40684c:	mov	x3, x21
  406850:	mov	x4, x22
  406854:	bl	403a80 <printf@plt>
  406858:	mov	w19, wzr
  40685c:	b	406880 <ascii_strlower_n@plt+0x2470>
  406860:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  406864:	adrp	x3, 418000 <ascii_strlower_n@plt+0x13bf0>
  406868:	add	x1, x1, #0xf07
  40686c:	add	x3, x3, #0xdc3
  406870:	mov	w2, #0x9de                 	// #2526
  406874:	mov	w0, wzr
  406878:	bl	403a20 <log_oom_internal@plt>
  40687c:	mov	w19, w0
  406880:	ldr	x0, [sp, #8]
  406884:	bl	403a30 <free@plt>
  406888:	mov	w0, w19
  40688c:	ldp	x20, x19, [sp, #64]
  406890:	ldp	x22, x21, [sp, #48]
  406894:	ldp	x24, x23, [sp, #32]
  406898:	ldp	x29, x30, [sp, #16]
  40689c:	add	sp, sp, #0x50
  4068a0:	ret
  4068a4:	stp	x29, x30, [sp, #-80]!
  4068a8:	str	x25, [sp, #16]
  4068ac:	stp	x24, x23, [sp, #32]
  4068b0:	stp	x22, x21, [sp, #48]
  4068b4:	stp	x20, x19, [sp, #64]
  4068b8:	mov	x29, sp
  4068bc:	cbz	x0, 40697c <ascii_strlower_n@plt+0x256c>
  4068c0:	mov	x19, x4
  4068c4:	mov	x20, x3
  4068c8:	mov	x21, x2
  4068cc:	mov	x23, x1
  4068d0:	mov	x24, x0
  4068d4:	cbz	x2, 4068dc <ascii_strlower_n@plt+0x24cc>
  4068d8:	cbz	x20, 40699c <ascii_strlower_n@plt+0x258c>
  4068dc:	cmp	x23, #0x0
  4068e0:	cinc	x25, x21, ne  // ne = any
  4068e4:	add	x8, x25, #0x2
  4068e8:	lsr	x9, x8, #61
  4068ec:	cbnz	x9, 4069bc <ascii_strlower_n@plt+0x25ac>
  4068f0:	cmp	x8, #0x80, lsl #12
  4068f4:	b.hi	4069c8 <ascii_strlower_n@plt+0x25b8>  // b.pmore
  4068f8:	lsl	x2, x8, #3
  4068fc:	add	x9, x2, #0xf
  406900:	mov	x8, sp
  406904:	and	x9, x9, #0xfffffffffffffff0
  406908:	sub	x22, x8, x9
  40690c:	mov	sp, x22
  406910:	mov	x0, x22
  406914:	mov	w1, wzr
  406918:	bl	403c60 <memset@plt>
  40691c:	mov	x0, x22
  406920:	str	x24, [x0], #8
  406924:	cbz	x23, 406930 <ascii_strlower_n@plt+0x2520>
  406928:	add	x0, x22, #0x10
  40692c:	str	x23, [x22, #8]
  406930:	cbz	x21, 406940 <ascii_strlower_n@plt+0x2530>
  406934:	lsl	x2, x21, #3
  406938:	mov	x1, x20
  40693c:	bl	403c70 <memcpy@plt>
  406940:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf0>
  406944:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  406948:	add	w0, w25, #0x1
  40694c:	add	x2, x2, #0x150
  406950:	mov	x1, x22
  406954:	mov	x3, x19
  406958:	str	wzr, [x8, #128]
  40695c:	bl	403ba0 <dispatch_verb@plt>
  406960:	mov	sp, x29
  406964:	ldp	x20, x19, [sp, #64]
  406968:	ldp	x22, x21, [sp, #48]
  40696c:	ldp	x24, x23, [sp, #32]
  406970:	ldr	x25, [sp, #16]
  406974:	ldp	x29, x30, [sp], #80
  406978:	ret
  40697c:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  406980:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  406984:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  406988:	add	x1, x1, #0x768
  40698c:	add	x2, x2, #0xf07
  406990:	add	x4, x4, #0x76d
  406994:	mov	w3, #0xc36                 	// #3126
  406998:	bl	403aa0 <log_assert_failed_realm@plt>
  40699c:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  4069a0:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  4069a4:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  4069a8:	add	x1, x1, #0x7b2
  4069ac:	add	x2, x2, #0xf07
  4069b0:	add	x4, x4, #0x76d
  4069b4:	mov	w3, #0xc37                 	// #3127
  4069b8:	b	4069e4 <ascii_strlower_n@plt+0x25d4>
  4069bc:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  4069c0:	add	x1, x1, #0x7c8
  4069c4:	b	4069d0 <ascii_strlower_n@plt+0x25c0>
  4069c8:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  4069cc:	add	x1, x1, #0x7f5
  4069d0:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  4069d4:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  4069d8:	add	x2, x2, #0xf07
  4069dc:	add	x4, x4, #0x76d
  4069e0:	mov	w3, #0xc3b                 	// #3131
  4069e4:	mov	w0, wzr
  4069e8:	bl	403aa0 <log_assert_failed_realm@plt>
  4069ec:	b	4067b0 <ascii_strlower_n@plt+0x23a0>
  4069f0:	stp	x29, x30, [sp, #-80]!
  4069f4:	stp	x20, x19, [sp, #64]
  4069f8:	mov	x19, x2
  4069fc:	cmp	w0, #0x2
  406a00:	str	x25, [sp, #16]
  406a04:	stp	x24, x23, [sp, #32]
  406a08:	stp	x22, x21, [sp, #48]
  406a0c:	mov	x29, sp
  406a10:	b.lt	406ab0 <ascii_strlower_n@plt+0x26a0>  // b.tstop
  406a14:	strb	wzr, [x29, #28]
  406a18:	ldr	x0, [x1, #8]
  406a1c:	cbz	x0, 406ad0 <ascii_strlower_n@plt+0x26c0>
  406a20:	adrp	x21, 417000 <ascii_strlower_n@plt+0x12bf0>
  406a24:	adrp	x22, 419000 <ascii_strlower_n@plt+0x14bf0>
  406a28:	adrp	x23, 419000 <ascii_strlower_n@plt+0x14bf0>
  406a2c:	mov	w20, wzr
  406a30:	add	x25, x1, #0x10
  406a34:	add	x21, x21, #0xf07
  406a38:	add	x22, x22, #0x824
  406a3c:	add	x23, x23, #0x830
  406a40:	add	x1, x29, #0x18
  406a44:	bl	403af0 <parse_ifindex_or_ifname@plt>
  406a48:	tbnz	w0, #31, 406a70 <ascii_strlower_n@plt+0x2660>
  406a4c:	ldr	w1, [x29, #24]
  406a50:	add	x4, x29, #0x1c
  406a54:	mov	x0, x19
  406a58:	mov	x2, xzr
  406a5c:	mov	w3, wzr
  406a60:	bl	4095c0 <ascii_strlower_n@plt+0x51b0>
  406a64:	cmp	w0, #0x0
  406a68:	csel	w20, w0, w20, lt  // lt = tstop
  406a6c:	b	406aa4 <ascii_strlower_n@plt+0x2694>
  406a70:	mov	w24, w0
  406a74:	mov	w0, wzr
  406a78:	bl	4039b0 <log_get_max_level_realm@plt>
  406a7c:	cmp	w0, #0x3
  406a80:	b.lt	406aa4 <ascii_strlower_n@plt+0x2694>  // b.tstop
  406a84:	ldur	x6, [x25, #-8]
  406a88:	mov	w0, #0x3                   	// #3
  406a8c:	mov	w3, #0x729                 	// #1833
  406a90:	mov	w1, w24
  406a94:	mov	x2, x21
  406a98:	mov	x4, x22
  406a9c:	mov	x5, x23
  406aa0:	bl	4039c0 <log_internal_realm@plt>
  406aa4:	ldr	x0, [x25], #8
  406aa8:	cbnz	x0, 406a40 <ascii_strlower_n@plt+0x2630>
  406aac:	b	406ad4 <ascii_strlower_n@plt+0x26c4>
  406ab0:	mov	x0, x19
  406ab4:	ldp	x20, x19, [sp, #64]
  406ab8:	ldp	x22, x21, [sp, #48]
  406abc:	ldp	x24, x23, [sp, #32]
  406ac0:	ldr	x25, [sp, #16]
  406ac4:	mov	w1, wzr
  406ac8:	ldp	x29, x30, [sp], #80
  406acc:	b	409be4 <ascii_strlower_n@plt+0x57d4>
  406ad0:	mov	w20, wzr
  406ad4:	mov	w0, w20
  406ad8:	ldp	x20, x19, [sp, #64]
  406adc:	ldp	x22, x21, [sp, #48]
  406ae0:	ldp	x24, x23, [sp, #32]
  406ae4:	ldr	x25, [sp, #16]
  406ae8:	ldp	x29, x30, [sp], #80
  406aec:	ret
  406af0:	sub	sp, sp, #0x100
  406af4:	stp	x29, x30, [sp, #160]
  406af8:	stp	x28, x27, [sp, #176]
  406afc:	stp	x26, x25, [sp, #192]
  406b00:	stp	x24, x23, [sp, #208]
  406b04:	stp	x22, x21, [sp, #224]
  406b08:	stp	x20, x19, [sp, #240]
  406b0c:	adrp	x24, 440000 <ascii_strlower_n@plt+0x3bbf0>
  406b10:	mov	x22, x1
  406b14:	ldrh	w3, [x24, #64]
  406b18:	ldr	x23, [x22, #8]!
  406b1c:	mov	x19, x2
  406b20:	add	x29, sp, #0xa0
  406b24:	cbz	w3, 406b78 <ascii_strlower_n@plt+0x2768>
  406b28:	cbz	x23, 40787c <ascii_strlower_n@plt+0x346c>
  406b2c:	adrp	x22, 440000 <ascii_strlower_n@plt+0x3bbf0>
  406b30:	ldrh	w2, [x22, #68]
  406b34:	mov	x21, x1
  406b38:	mov	x0, x19
  406b3c:	mov	x1, x23
  406b40:	bl	40ac7c <ascii_strlower_n@plt+0x686c>
  406b44:	ldr	x1, [x21, #16]
  406b48:	and	w20, w0, w0, asr #31
  406b4c:	cbz	x1, 407880 <ascii_strlower_n@plt+0x3470>
  406b50:	add	x21, x21, #0x18
  406b54:	ldrh	w2, [x22, #68]
  406b58:	ldrh	w3, [x24, #64]
  406b5c:	mov	x0, x19
  406b60:	bl	40ac7c <ascii_strlower_n@plt+0x686c>
  406b64:	ldr	x1, [x21], #8
  406b68:	cmp	w0, #0x0
  406b6c:	csel	w20, w0, w20, lt  // lt = tstop
  406b70:	cbnz	x1, 406b54 <ascii_strlower_n@plt+0x2744>
  406b74:	b	407880 <ascii_strlower_n@plt+0x3470>
  406b78:	cbz	x23, 40787c <ascii_strlower_n@plt+0x346c>
  406b7c:	adrp	x24, 41a000 <ascii_strlower_n@plt+0x15bf0>
  406b80:	adrp	x28, 417000 <ascii_strlower_n@plt+0x12bf0>
  406b84:	adrp	x26, 41a000 <ascii_strlower_n@plt+0x15bf0>
  406b88:	adrp	x27, 419000 <ascii_strlower_n@plt+0x14bf0>
  406b8c:	mov	w20, wzr
  406b90:	add	x24, x24, #0xc0
  406b94:	adrp	x21, 440000 <ascii_strlower_n@plt+0x3bbf0>
  406b98:	add	x28, x28, #0xf07
  406b9c:	add	x26, x26, #0x616
  406ba0:	add	x27, x27, #0x9a6
  406ba4:	mov	w2, #0x4                   	// #4
  406ba8:	mov	x0, x23
  406bac:	mov	x1, x24
  406bb0:	bl	403c80 <strncmp@plt>
  406bb4:	cbz	w0, 406e70 <ascii_strlower_n@plt+0x2a60>
  406bb8:	add	x1, sp, #0x4c
  406bbc:	add	x2, sp, #0x38
  406bc0:	add	x3, sp, #0x48
  406bc4:	mov	x0, x23
  406bc8:	bl	403c90 <in_addr_ifindex_from_string_auto@plt>
  406bcc:	tbnz	w0, #31, 406e84 <ascii_strlower_n@plt+0x2a74>
  406bd0:	ldp	w2, w23, [sp, #72]
  406bd4:	stp	xzr, xzr, [x29, #-16]
  406bd8:	stp	xzr, xzr, [x29, #-40]
  406bdc:	stur	xzr, [x29, #-24]
  406be0:	stur	w2, [x29, #-72]
  406be4:	stur	xzr, [x29, #-48]
  406be8:	cbz	x19, 4078c4 <ascii_strlower_n@plt+0x34b4>
  406bec:	orr	w8, w23, #0x8
  406bf0:	cmp	w8, #0xa
  406bf4:	b.ne	4078a4 <ascii_strlower_n@plt+0x3494>  // b.any
  406bf8:	cmp	w2, #0x1
  406bfc:	b.ge	406c08 <ascii_strlower_n@plt+0x27f8>  // b.tcont
  406c00:	ldr	w2, [x21, #56]
  406c04:	stur	w2, [x29, #-72]
  406c08:	add	x1, sp, #0x38
  406c0c:	sub	x3, x29, #0x30
  406c10:	mov	w0, w23
  406c14:	bl	403ca0 <in_addr_ifindex_to_string@plt>
  406c18:	tbnz	w0, #31, 407300 <ascii_strlower_n@plt+0x2ef0>
  406c1c:	mov	w0, wzr
  406c20:	bl	4039b0 <log_get_max_level_realm@plt>
  406c24:	cmp	w0, #0x7
  406c28:	b.lt	406c50 <ascii_strlower_n@plt+0x2840>  // b.tstop
  406c2c:	ldur	x6, [x29, #-48]
  406c30:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  406c34:	mov	w0, #0x7                   	// #7
  406c38:	mov	w3, #0x11d                 	// #285
  406c3c:	mov	w1, wzr
  406c40:	mov	x2, x28
  406c44:	mov	x4, x26
  406c48:	add	x5, x5, #0x626
  406c4c:	bl	4039c0 <log_internal_realm@plt>
  406c50:	adrp	x3, 419000 <ascii_strlower_n@plt+0x14bf0>
  406c54:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  406c58:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  406c5c:	sub	x1, x29, #0x8
  406c60:	mov	x0, x19
  406c64:	mov	x2, x27
  406c68:	add	x3, x3, #0xe87
  406c6c:	add	x4, x4, #0x144
  406c70:	add	x5, x5, #0x634
  406c74:	bl	403cb0 <sd_bus_message_new_method_call@plt>
  406c78:	tbnz	w0, #31, 407318 <ascii_strlower_n@plt+0x2f08>
  406c7c:	ldur	x0, [x29, #-8]
  406c80:	ldur	w2, [x29, #-72]
  406c84:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  406c88:	add	x1, x1, #0x643
  406c8c:	mov	w3, w23
  406c90:	bl	403cc0 <sd_bus_message_append@plt>
  406c94:	tbnz	w0, #31, 407358 <ascii_strlower_n@plt+0x2f48>
  406c98:	orr	w8, w23, #0x8
  406c9c:	cmp	w8, #0xa
  406ca0:	b.ne	407904 <ascii_strlower_n@plt+0x34f4>  // b.any
  406ca4:	ldur	x0, [x29, #-8]
  406ca8:	cmp	w23, #0xa
  406cac:	mov	w8, #0x4                   	// #4
  406cb0:	mov	w9, #0x10                  	// #16
  406cb4:	csel	x3, x9, x8, eq  // eq = none
  406cb8:	add	x2, sp, #0x38
  406cbc:	mov	w1, #0x79                  	// #121
  406cc0:	bl	403cd0 <sd_bus_message_append_array@plt>
  406cc4:	tbnz	w0, #31, 4073bc <ascii_strlower_n@plt+0x2fac>
  406cc8:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  406ccc:	ldur	x0, [x29, #-8]
  406cd0:	ldr	x2, [x8, #72]
  406cd4:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  406cd8:	add	x1, x1, #0x860
  406cdc:	bl	403cc0 <sd_bus_message_append@plt>
  406ce0:	tbnz	w0, #31, 40742c <ascii_strlower_n@plt+0x301c>
  406ce4:	mov	w0, #0x1                   	// #1
  406ce8:	bl	403ce0 <now@plt>
  406cec:	ldur	x1, [x29, #-8]
  406cf0:	mov	w2, #0xe00                 	// #3584
  406cf4:	mov	x23, x0
  406cf8:	sub	x3, x29, #0x28
  406cfc:	sub	x4, x29, #0x10
  406d00:	movk	w2, #0x727, lsl #16
  406d04:	mov	x0, x19
  406d08:	bl	403cf0 <sd_bus_call@plt>
  406d0c:	tbnz	w0, #31, 4074bc <ascii_strlower_n@plt+0x30ac>
  406d10:	mov	w0, #0x1                   	// #1
  406d14:	bl	403ce0 <now@plt>
  406d18:	ldur	x8, [x29, #-16]
  406d1c:	adrp	x2, 41a000 <ascii_strlower_n@plt+0x15bf0>
  406d20:	str	x0, [sp, #48]
  406d24:	mov	w1, #0x61                  	// #97
  406d28:	mov	x0, x8
  406d2c:	add	x2, x2, #0x646
  406d30:	bl	403d00 <sd_bus_message_enter_container@plt>
  406d34:	tbnz	w0, #31, 407614 <ascii_strlower_n@plt+0x3204>
  406d38:	ldur	x0, [x29, #-16]
  406d3c:	adrp	x2, 41a000 <ascii_strlower_n@plt+0x15bf0>
  406d40:	mov	w1, #0x72                  	// #114
  406d44:	add	x2, x2, #0x64b
  406d48:	bl	403d00 <sd_bus_message_enter_container@plt>
  406d4c:	cmp	w0, #0x1
  406d50:	b.lt	40765c <ascii_strlower_n@plt+0x324c>  // b.tstop
  406d54:	str	x23, [sp, #40]
  406d58:	adrp	x23, 41a000 <ascii_strlower_n@plt+0x15bf0>
  406d5c:	mov	w21, wzr
  406d60:	add	x23, x23, #0x64b
  406d64:	ldur	x0, [x29, #-16]
  406d68:	sub	x2, x29, #0x48
  406d6c:	sub	x3, x29, #0x38
  406d70:	mov	x1, x23
  406d74:	bl	403d10 <sd_bus_message_read@plt>
  406d78:	tbnz	w0, #31, 4077a4 <ascii_strlower_n@plt+0x3394>
  406d7c:	ldur	x0, [x29, #-16]
  406d80:	bl	403d20 <sd_bus_message_exit_container@plt>
  406d84:	tbnz	w0, #31, 4077a4 <ascii_strlower_n@plt+0x3394>
  406d88:	ldur	x25, [x29, #-48]
  406d8c:	mov	x0, x25
  406d90:	bl	403d30 <strlen@plt>
  406d94:	adrp	x23, 417000 <ascii_strlower_n@plt+0x12bf0>
  406d98:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf0>
  406d9c:	adrp	x9, 41a000 <ascii_strlower_n@plt+0x15bf0>
  406da0:	cmp	w21, #0x0
  406da4:	add	x23, x23, #0xff4
  406da8:	add	x8, x8, #0x3d9
  406dac:	add	x9, x9, #0x65b
  406db0:	mov	x26, x0
  406db4:	csel	x25, x25, x23, eq  // eq = none
  406db8:	csel	x27, x9, x8, eq  // eq = none
  406dbc:	bl	403b80 <colors_enabled@plt>
  406dc0:	ldur	x28, [x29, #-56]
  406dc4:	adrp	x8, 418000 <ascii_strlower_n@plt+0x13bf0>
  406dc8:	tst	w0, #0x1
  406dcc:	add	x8, x8, #0xcf8
  406dd0:	csel	x24, x8, x23, ne  // ne = any
  406dd4:	bl	403b80 <colors_enabled@plt>
  406dd8:	adrp	x8, 418000 <ascii_strlower_n@plt+0x13bf0>
  406ddc:	tst	w0, #0x1
  406de0:	add	x8, x8, #0xd02
  406de4:	adrp	x0, 41a000 <ascii_strlower_n@plt+0x15bf0>
  406de8:	csel	x6, x8, x23, ne  // ne = any
  406dec:	add	x0, x0, #0x64e
  406df0:	mov	w1, w26
  406df4:	adrp	x26, 41a000 <ascii_strlower_n@plt+0x15bf0>
  406df8:	mov	x2, x25
  406dfc:	mov	x3, x27
  406e00:	adrp	x27, 419000 <ascii_strlower_n@plt+0x14bf0>
  406e04:	mov	x4, x24
  406e08:	adrp	x24, 41a000 <ascii_strlower_n@plt+0x15bf0>
  406e0c:	mov	x5, x28
  406e10:	adrp	x28, 417000 <ascii_strlower_n@plt+0x12bf0>
  406e14:	add	x26, x26, #0x616
  406e18:	add	x27, x27, #0x9a6
  406e1c:	add	x24, x24, #0xc0
  406e20:	add	x28, x28, #0xf07
  406e24:	bl	403a80 <printf@plt>
  406e28:	ldur	w1, [x29, #-72]
  406e2c:	bl	40bad4 <ascii_strlower_n@plt+0x76c4>
  406e30:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  406e34:	ldr	x1, [x8, #176]
  406e38:	mov	w0, #0xa                   	// #10
  406e3c:	bl	403d40 <fputc@plt>
  406e40:	ldur	x0, [x29, #-16]
  406e44:	adrp	x23, 41a000 <ascii_strlower_n@plt+0x15bf0>
  406e48:	add	x23, x23, #0x64b
  406e4c:	mov	w1, #0x72                  	// #114
  406e50:	mov	x2, x23
  406e54:	add	w21, w21, #0x1
  406e58:	bl	403d00 <sd_bus_message_enter_container@plt>
  406e5c:	cmp	w0, #0x0
  406e60:	b.gt	406d64 <ascii_strlower_n@plt+0x2954>
  406e64:	ldr	x23, [sp, #40]
  406e68:	mov	w25, w0
  406e6c:	b	407664 <ascii_strlower_n@plt+0x3254>
  406e70:	mov	x0, x19
  406e74:	mov	x1, x23
  406e78:	bl	40b4a0 <ascii_strlower_n@plt+0x7090>
  406e7c:	mov	w25, w0
  406e80:	b	407828 <ascii_strlower_n@plt+0x3418>
  406e84:	ldr	x23, [x22]
  406e88:	stp	xzr, xzr, [x29, #-16]
  406e8c:	stp	xzr, xzr, [x29, #-40]
  406e90:	stur	xzr, [x29, #-24]
  406e94:	stur	xzr, [x29, #-48]
  406e98:	cbz	x23, 4078e4 <ascii_strlower_n@plt+0x34d4>
  406e9c:	mov	w0, wzr
  406ea0:	bl	4039b0 <log_get_max_level_realm@plt>
  406ea4:	cmp	w0, #0x7
  406ea8:	b.lt	406f10 <ascii_strlower_n@plt+0x2b00>  // b.tstop
  406eac:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  406eb0:	ldr	w0, [x8, #60]
  406eb4:	bl	403d50 <af_to_name@plt>
  406eb8:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  406ebc:	ldr	x8, [x8, #40]
  406ec0:	adrp	x9, 41a000 <ascii_strlower_n@plt+0x15bf0>
  406ec4:	cmp	x0, #0x0
  406ec8:	add	x9, x9, #0x142
  406ecc:	csel	x7, x9, x0, eq  // eq = none
  406ed0:	cbz	x8, 406edc <ascii_strlower_n@plt+0x2acc>
  406ed4:	ldrb	w9, [x8]
  406ed8:	cbnz	w9, 406ee4 <ascii_strlower_n@plt+0x2ad4>
  406edc:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf0>
  406ee0:	add	x8, x8, #0x142
  406ee4:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  406ee8:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  406eec:	mov	w0, #0x7                   	// #7
  406ef0:	mov	w3, #0xa8                  	// #168
  406ef4:	mov	w1, wzr
  406ef8:	mov	x2, x28
  406efc:	add	x4, x4, #0x699
  406f00:	add	x5, x5, #0x6a6
  406f04:	mov	x6, x23
  406f08:	str	x8, [sp]
  406f0c:	bl	4039c0 <log_internal_realm@plt>
  406f10:	adrp	x3, 419000 <ascii_strlower_n@plt+0x14bf0>
  406f14:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  406f18:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  406f1c:	sub	x1, x29, #0x8
  406f20:	mov	x0, x19
  406f24:	mov	x2, x27
  406f28:	add	x3, x3, #0xe87
  406f2c:	add	x4, x4, #0x144
  406f30:	add	x5, x5, #0x6ce
  406f34:	bl	403cb0 <sd_bus_message_new_method_call@plt>
  406f38:	tbnz	w0, #31, 407338 <ascii_strlower_n@plt+0x2f28>
  406f3c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  406f40:	ldr	w4, [x8, #60]
  406f44:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  406f48:	ldur	x0, [x29, #-8]
  406f4c:	ldr	w2, [x21, #56]
  406f50:	ldr	x5, [x8, #72]
  406f54:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  406f58:	add	x1, x1, #0x6de
  406f5c:	mov	x3, x23
  406f60:	bl	403cc0 <sd_bus_message_append@plt>
  406f64:	tbnz	w0, #31, 40737c <ascii_strlower_n@plt+0x2f6c>
  406f68:	mov	w0, #0x1                   	// #1
  406f6c:	bl	403ce0 <now@plt>
  406f70:	ldur	x1, [x29, #-8]
  406f74:	mov	w2, #0xe00                 	// #3584
  406f78:	str	x0, [sp, #48]
  406f7c:	sub	x3, x29, #0x28
  406f80:	sub	x4, x29, #0x10
  406f84:	movk	w2, #0x727, lsl #16
  406f88:	mov	x0, x19
  406f8c:	bl	403cf0 <sd_bus_call@plt>
  406f90:	tbnz	w0, #31, 4073dc <ascii_strlower_n@plt+0x2fcc>
  406f94:	mov	w0, #0x1                   	// #1
  406f98:	bl	403ce0 <now@plt>
  406f9c:	ldur	x8, [x29, #-16]
  406fa0:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf0>
  406fa4:	str	x0, [sp, #32]
  406fa8:	mov	w1, #0x61                  	// #97
  406fac:	mov	x0, x8
  406fb0:	add	x2, x2, #0xe79
  406fb4:	bl	403d00 <sd_bus_message_enter_container@plt>
  406fb8:	tbnz	w0, #31, 407474 <ascii_strlower_n@plt+0x3064>
  406fbc:	ldur	x0, [x29, #-16]
  406fc0:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf0>
  406fc4:	mov	w1, #0x72                  	// #114
  406fc8:	add	x2, x2, #0xc12
  406fcc:	bl	403d00 <sd_bus_message_enter_container@plt>
  406fd0:	cmp	w0, #0x1
  406fd4:	b.lt	40750c <ascii_strlower_n@plt+0x30fc>  // b.tstop
  406fd8:	str	wzr, [sp, #40]
  406fdc:	ldur	x0, [x29, #-16]
  406fe0:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  406fe4:	sub	x2, x29, #0x3c
  406fe8:	sub	x3, x29, #0x40
  406fec:	add	x1, x1, #0x643
  406ff0:	stur	xzr, [x29, #-56]
  406ff4:	bl	403d10 <sd_bus_message_read@plt>
  406ff8:	tbnz	w0, #31, 40711c <ascii_strlower_n@plt+0x2d0c>
  406ffc:	ldur	x0, [x29, #-16]
  407000:	sub	x2, x29, #0x48
  407004:	add	x3, sp, #0x50
  407008:	mov	w1, #0x79                  	// #121
  40700c:	bl	403d60 <sd_bus_message_read_array@plt>
  407010:	tbnz	w0, #31, 40713c <ascii_strlower_n@plt+0x2d2c>
  407014:	ldur	x0, [x29, #-16]
  407018:	bl	403d20 <sd_bus_message_exit_container@plt>
  40701c:	tbnz	w0, #31, 40715c <ascii_strlower_n@plt+0x2d4c>
  407020:	ldur	w26, [x29, #-64]
  407024:	orr	w8, w26, #0x8
  407028:	cmp	w8, #0xa
  40702c:	b.ne	4071e0 <ascii_strlower_n@plt+0x2dd0>  // b.any
  407030:	b.ne	407904 <ascii_strlower_n@plt+0x34f4>  // b.any
  407034:	ldr	x27, [sp, #80]
  407038:	cmp	w26, #0xa
  40703c:	mov	w8, #0x4                   	// #4
  407040:	mov	w9, #0x10                  	// #16
  407044:	csel	x8, x9, x8, eq  // eq = none
  407048:	cmp	x27, x8
  40704c:	b.ne	407240 <ascii_strlower_n@plt+0x2e30>  // b.any
  407050:	ldur	x1, [x29, #-72]
  407054:	ldur	w2, [x29, #-60]
  407058:	sub	x3, x29, #0x38
  40705c:	mov	w0, w26
  407060:	bl	403ca0 <in_addr_ifindex_to_string@plt>
  407064:	tbnz	w0, #31, 4072ac <ascii_strlower_n@plt+0x2e9c>
  407068:	mov	x0, x23
  40706c:	bl	403d30 <strlen@plt>
  407070:	ldr	w26, [sp, #40]
  407074:	adrp	x24, 417000 <ascii_strlower_n@plt+0x12bf0>
  407078:	add	x24, x24, #0xff4
  40707c:	adrp	x9, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407080:	cmp	w26, #0x0
  407084:	csel	x8, x23, x24, eq  // eq = none
  407088:	stp	x8, x0, [sp, #16]
  40708c:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407090:	add	x8, x8, #0x3d9
  407094:	add	x9, x9, #0x65b
  407098:	csel	x27, x9, x8, eq  // eq = none
  40709c:	bl	403b80 <colors_enabled@plt>
  4070a0:	ldur	x28, [x29, #-56]
  4070a4:	adrp	x8, 418000 <ascii_strlower_n@plt+0x13bf0>
  4070a8:	tst	w0, #0x1
  4070ac:	add	x8, x8, #0xcf8
  4070b0:	csel	x21, x8, x24, ne  // ne = any
  4070b4:	bl	403b80 <colors_enabled@plt>
  4070b8:	ldp	x2, x1, [sp, #16]
  4070bc:	adrp	x8, 418000 <ascii_strlower_n@plt+0x13bf0>
  4070c0:	tst	w0, #0x1
  4070c4:	add	x8, x8, #0xd02
  4070c8:	adrp	x0, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4070cc:	csel	x6, x8, x24, ne  // ne = any
  4070d0:	add	x0, x0, #0x64e
  4070d4:	adrp	x24, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4070d8:	mov	x3, x27
  4070dc:	mov	x4, x21
  4070e0:	mov	x5, x28
  4070e4:	adrp	x28, 417000 <ascii_strlower_n@plt+0x12bf0>
  4070e8:	add	x24, x24, #0xc0
  4070ec:	add	x28, x28, #0xf07
  4070f0:	bl	403a80 <printf@plt>
  4070f4:	ldur	w1, [x29, #-60]
  4070f8:	bl	40bad4 <ascii_strlower_n@plt+0x76c4>
  4070fc:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  407100:	ldr	x1, [x8, #176]
  407104:	mov	w0, #0xa                   	// #10
  407108:	bl	403d40 <fputc@plt>
  40710c:	mov	w21, wzr
  407110:	add	w26, w26, #0x1
  407114:	str	w26, [sp, #40]
  407118:	b	4072a0 <ascii_strlower_n@plt+0x2e90>
  40711c:	mov	w26, w0
  407120:	mov	w0, wzr
  407124:	bl	4039b0 <log_get_max_level_realm@plt>
  407128:	cmp	w0, #0x3
  40712c:	b.lt	40719c <ascii_strlower_n@plt+0x2d8c>  // b.tstop
  407130:	mov	w0, #0x3                   	// #3
  407134:	mov	w3, #0xce                  	// #206
  407138:	b	407178 <ascii_strlower_n@plt+0x2d68>
  40713c:	mov	w26, w0
  407140:	mov	w0, wzr
  407144:	bl	4039b0 <log_get_max_level_realm@plt>
  407148:	cmp	w0, #0x3
  40714c:	b.lt	40719c <ascii_strlower_n@plt+0x2d8c>  // b.tstop
  407150:	mov	w0, #0x3                   	// #3
  407154:	mov	w3, #0xd2                  	// #210
  407158:	b	407178 <ascii_strlower_n@plt+0x2d68>
  40715c:	mov	w26, w0
  407160:	mov	w0, wzr
  407164:	bl	4039b0 <log_get_max_level_realm@plt>
  407168:	cmp	w0, #0x3
  40716c:	b.lt	40719c <ascii_strlower_n@plt+0x2d8c>  // b.tstop
  407170:	mov	w0, #0x3                   	// #3
  407174:	mov	w3, #0xd6                  	// #214
  407178:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40717c:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407180:	mov	w1, w26
  407184:	mov	x2, x28
  407188:	add	x4, x4, #0x699
  40718c:	add	x5, x5, #0x1be
  407190:	bl	4039c0 <log_internal_realm@plt>
  407194:	mov	w25, w0
  407198:	b	4071a8 <ascii_strlower_n@plt+0x2d98>
  40719c:	mov	w8, wzr
  4071a0:	neg	w9, w26
  4071a4:	sub	w25, w8, w9, uxtb
  4071a8:	mov	w21, #0x1                   	// #1
  4071ac:	ldur	x0, [x29, #-56]
  4071b0:	bl	403a30 <free@plt>
  4071b4:	orr	w8, w21, #0x4
  4071b8:	cmp	w8, #0x4
  4071bc:	b.ne	4075bc <ascii_strlower_n@plt+0x31ac>  // b.any
  4071c0:	ldur	x0, [x29, #-16]
  4071c4:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf0>
  4071c8:	mov	w1, #0x72                  	// #114
  4071cc:	add	x2, x2, #0xc12
  4071d0:	bl	403d00 <sd_bus_message_enter_container@plt>
  4071d4:	cmp	w0, #0x0
  4071d8:	b.gt	406fdc <ascii_strlower_n@plt+0x2bcc>
  4071dc:	b	4075cc <ascii_strlower_n@plt+0x31bc>
  4071e0:	mov	w0, wzr
  4071e4:	bl	4039b0 <log_get_max_level_realm@plt>
  4071e8:	cmp	w0, #0x7
  4071ec:	b.lt	407238 <ascii_strlower_n@plt+0x2e28>  // b.tstop
  4071f0:	mov	w0, w26
  4071f4:	bl	403d50 <af_to_name@plt>
  4071f8:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4071fc:	cmp	x0, #0x0
  407200:	add	x8, x8, #0x70a
  407204:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407208:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40720c:	csel	x8, x8, x0, eq  // eq = none
  407210:	mov	w0, #0x7                   	// #7
  407214:	mov	w3, #0xd9                  	// #217
  407218:	mov	w1, wzr
  40721c:	mov	x2, x28
  407220:	add	x4, x4, #0x699
  407224:	add	x5, x5, #0x6e3
  407228:	mov	x6, x23
  40722c:	mov	w7, w26
  407230:	str	x8, [sp]
  407234:	bl	4039c0 <log_internal_realm@plt>
  407238:	mov	w21, #0x4                   	// #4
  40723c:	b	4071ac <ascii_strlower_n@plt+0x2d9c>
  407240:	mov	w0, wzr
  407244:	bl	4039b0 <log_get_max_level_realm@plt>
  407248:	cmp	w0, #0x3
  40724c:	b.lt	407298 <ascii_strlower_n@plt+0x2e88>  // b.tstop
  407250:	mov	w0, w26
  407254:	bl	403d50 <af_to_name@plt>
  407258:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40725c:	cmp	x0, #0x0
  407260:	add	x8, x8, #0x70a
  407264:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407268:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40726c:	csel	x8, x8, x0, eq  // eq = none
  407270:	mov	w0, #0x3                   	// #3
  407274:	mov	w3, #0xde                  	// #222
  407278:	mov	w1, wzr
  40727c:	mov	x2, x28
  407280:	add	x4, x4, #0x699
  407284:	add	x5, x5, #0x712
  407288:	mov	x6, x23
  40728c:	mov	x7, x27
  407290:	str	x8, [sp]
  407294:	bl	4039c0 <log_internal_realm@plt>
  407298:	mov	w25, #0xffffffea            	// #-22
  40729c:	mov	w21, #0x1                   	// #1
  4072a0:	adrp	x27, 419000 <ascii_strlower_n@plt+0x14bf0>
  4072a4:	add	x27, x27, #0x9a6
  4072a8:	b	4071ac <ascii_strlower_n@plt+0x2d9c>
  4072ac:	mov	w26, w0
  4072b0:	mov	w0, wzr
  4072b4:	bl	4039b0 <log_get_max_level_realm@plt>
  4072b8:	cmp	w0, #0x3
  4072bc:	b.lt	4072f0 <ascii_strlower_n@plt+0x2ee0>  // b.tstop
  4072c0:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4072c4:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4072c8:	mov	w0, #0x3                   	// #3
  4072cc:	mov	w3, #0xe4                  	// #228
  4072d0:	mov	w1, w26
  4072d4:	mov	x2, x28
  4072d8:	add	x4, x4, #0x699
  4072dc:	add	x5, x5, #0x75a
  4072e0:	mov	x6, x23
  4072e4:	bl	4039c0 <log_internal_realm@plt>
  4072e8:	mov	w25, w0
  4072ec:	b	40729c <ascii_strlower_n@plt+0x2e8c>
  4072f0:	mov	w8, wzr
  4072f4:	neg	w9, w26
  4072f8:	sub	w25, w8, w9, uxtb
  4072fc:	b	40729c <ascii_strlower_n@plt+0x2e8c>
  407300:	mov	w2, #0x11b                 	// #283
  407304:	mov	w0, wzr
  407308:	mov	x1, x28
  40730c:	mov	x3, x26
  407310:	bl	403a20 <log_oom_internal@plt>
  407314:	b	407460 <ascii_strlower_n@plt+0x3050>
  407318:	mov	w25, w0
  40731c:	mov	w0, wzr
  407320:	bl	4039b0 <log_get_max_level_realm@plt>
  407324:	cmp	w0, #0x3
  407328:	b.lt	4077f4 <ascii_strlower_n@plt+0x33e4>  // b.tstop
  40732c:	mov	w0, #0x3                   	// #3
  407330:	mov	w3, #0x127                 	// #295
  407334:	b	407374 <ascii_strlower_n@plt+0x2f64>
  407338:	mov	w25, w0
  40733c:	mov	w0, wzr
  407340:	bl	4039b0 <log_get_max_level_realm@plt>
  407344:	cmp	w0, #0x3
  407348:	b.lt	4074ac <ascii_strlower_n@plt+0x309c>  // b.tstop
  40734c:	mov	w0, #0x3                   	// #3
  407350:	mov	w3, #0xb2                  	// #178
  407354:	b	407398 <ascii_strlower_n@plt+0x2f88>
  407358:	mov	w25, w0
  40735c:	mov	w0, wzr
  407360:	bl	4039b0 <log_get_max_level_realm@plt>
  407364:	cmp	w0, #0x3
  407368:	b.lt	4077f4 <ascii_strlower_n@plt+0x33e4>  // b.tstop
  40736c:	mov	w0, #0x3                   	// #3
  407370:	mov	w3, #0x12b                 	// #299
  407374:	mov	w1, w25
  407378:	b	40744c <ascii_strlower_n@plt+0x303c>
  40737c:	mov	w25, w0
  407380:	mov	w0, wzr
  407384:	bl	4039b0 <log_get_max_level_realm@plt>
  407388:	cmp	w0, #0x3
  40738c:	b.lt	4074ac <ascii_strlower_n@plt+0x309c>  // b.tstop
  407390:	mov	w0, #0x3                   	// #3
  407394:	mov	w3, #0xb6                  	// #182
  407398:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40739c:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4073a0:	mov	w1, w25
  4073a4:	mov	x2, x28
  4073a8:	add	x4, x4, #0x699
  4073ac:	add	x5, x5, #0x173
  4073b0:	bl	4039c0 <log_internal_realm@plt>
  4073b4:	mov	w25, w0
  4073b8:	b	407808 <ascii_strlower_n@plt+0x33f8>
  4073bc:	mov	w23, w0
  4073c0:	mov	w0, wzr
  4073c4:	bl	4039b0 <log_get_max_level_realm@plt>
  4073c8:	cmp	w0, #0x3
  4073cc:	b.lt	407468 <ascii_strlower_n@plt+0x3058>  // b.tstop
  4073d0:	mov	w0, #0x3                   	// #3
  4073d4:	mov	w3, #0x12f                 	// #303
  4073d8:	b	407448 <ascii_strlower_n@plt+0x3038>
  4073dc:	mov	w25, w0
  4073e0:	mov	w0, wzr
  4073e4:	bl	4039b0 <log_get_max_level_realm@plt>
  4073e8:	cmp	w0, #0x3
  4073ec:	b.lt	4074ac <ascii_strlower_n@plt+0x309c>  // b.tstop
  4073f0:	sub	x0, x29, #0x28
  4073f4:	mov	w1, w25
  4073f8:	bl	403d70 <bus_error_message@plt>
  4073fc:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407400:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407404:	mov	x7, x0
  407408:	mov	w0, #0x3                   	// #3
  40740c:	mov	w3, #0xbc                  	// #188
  407410:	mov	w1, w25
  407414:	mov	x2, x28
  407418:	add	x4, x4, #0x699
  40741c:	add	x5, x5, #0x19a
  407420:	mov	x6, x23
  407424:	bl	4039c0 <log_internal_realm@plt>
  407428:	b	4073b4 <ascii_strlower_n@plt+0x2fa4>
  40742c:	mov	w23, w0
  407430:	mov	w0, wzr
  407434:	bl	4039b0 <log_get_max_level_realm@plt>
  407438:	cmp	w0, #0x3
  40743c:	b.lt	407468 <ascii_strlower_n@plt+0x3058>  // b.tstop
  407440:	mov	w0, #0x3                   	// #3
  407444:	mov	w3, #0x133                 	// #307
  407448:	mov	w1, w23
  40744c:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407450:	mov	x2, x28
  407454:	mov	x4, x26
  407458:	add	x5, x5, #0x173
  40745c:	bl	4039c0 <log_internal_realm@plt>
  407460:	mov	w25, w0
  407464:	b	407800 <ascii_strlower_n@plt+0x33f0>
  407468:	mov	w8, wzr
  40746c:	neg	w9, w23
  407470:	b	4077fc <ascii_strlower_n@plt+0x33ec>
  407474:	mov	w25, w0
  407478:	mov	w0, wzr
  40747c:	bl	4039b0 <log_get_max_level_realm@plt>
  407480:	cmp	w0, #0x3
  407484:	b.lt	4074ac <ascii_strlower_n@plt+0x309c>  // b.tstop
  407488:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40748c:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407490:	mov	w0, #0x3                   	// #3
  407494:	mov	w3, #0xc2                  	// #194
  407498:	mov	w1, w25
  40749c:	mov	x2, x28
  4074a0:	add	x4, x4, #0x699
  4074a4:	add	x5, x5, #0x1be
  4074a8:	b	4073b0 <ascii_strlower_n@plt+0x2fa0>
  4074ac:	mov	w8, wzr
  4074b0:	neg	w9, w25
  4074b4:	sub	w25, w8, w9, uxtb
  4074b8:	b	407808 <ascii_strlower_n@plt+0x33f8>
  4074bc:	mov	w25, w0
  4074c0:	mov	w0, wzr
  4074c4:	bl	4039b0 <log_get_max_level_realm@plt>
  4074c8:	cmp	w0, #0x3
  4074cc:	b.lt	4077f4 <ascii_strlower_n@plt+0x33e4>  // b.tstop
  4074d0:	ldur	x23, [x29, #-48]
  4074d4:	sub	x0, x29, #0x28
  4074d8:	mov	w1, w25
  4074dc:	bl	403d70 <bus_error_message@plt>
  4074e0:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4074e4:	mov	x7, x0
  4074e8:	mov	w0, #0x3                   	// #3
  4074ec:	mov	w3, #0x139                 	// #313
  4074f0:	mov	w1, w25
  4074f4:	mov	x2, x28
  4074f8:	mov	x4, x26
  4074fc:	add	x5, x5, #0x19a
  407500:	mov	x6, x23
  407504:	bl	4039c0 <log_internal_realm@plt>
  407508:	b	407460 <ascii_strlower_n@plt+0x3050>
  40750c:	mov	w26, w0
  407510:	mov	w21, wzr
  407514:	tbnz	w26, #31, 4075d8 <ascii_strlower_n@plt+0x31c8>
  407518:	ldur	x0, [x29, #-16]
  40751c:	bl	403d20 <sd_bus_message_exit_container@plt>
  407520:	tbnz	w0, #31, 407634 <ascii_strlower_n@plt+0x3224>
  407524:	ldur	x0, [x29, #-16]
  407528:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40752c:	sub	x2, x29, #0x30
  407530:	sub	x3, x29, #0x38
  407534:	add	x1, x1, #0x77d
  407538:	bl	403d10 <sd_bus_message_read@plt>
  40753c:	adrp	x26, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407540:	add	x26, x26, #0x616
  407544:	tbnz	w0, #31, 4076c0 <ascii_strlower_n@plt+0x32b0>
  407548:	ldur	x25, [x29, #-48]
  40754c:	mov	x0, x23
  407550:	mov	x1, x25
  407554:	bl	403b40 <strcmp@plt>
  407558:	cbz	w0, 40759c <ascii_strlower_n@plt+0x318c>
  40755c:	mov	x0, x23
  407560:	bl	403d30 <strlen@plt>
  407564:	adrp	x8, 417000 <ascii_strlower_n@plt+0x12bf0>
  407568:	cmp	w21, #0x0
  40756c:	add	x8, x8, #0xff4
  407570:	csel	x2, x23, x8, eq  // eq = none
  407574:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407578:	adrp	x9, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40757c:	mov	x1, x0
  407580:	add	x8, x8, #0x3d9
  407584:	add	x9, x9, #0x65b
  407588:	adrp	x0, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40758c:	csel	x3, x9, x8, eq  // eq = none
  407590:	add	x0, x0, #0x780
  407594:	mov	x4, x25
  407598:	bl	403a80 <printf@plt>
  40759c:	cbz	w21, 40772c <ascii_strlower_n@plt+0x331c>
  4075a0:	ldr	x8, [sp, #48]
  4075a4:	ldr	x9, [sp, #32]
  4075a8:	ldur	x0, [x29, #-56]
  4075ac:	sub	x1, x9, x8
  4075b0:	bl	40b970 <ascii_strlower_n@plt+0x7560>
  4075b4:	mov	w25, wzr
  4075b8:	b	407768 <ascii_strlower_n@plt+0x3358>
  4075bc:	adrp	x26, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4075c0:	adrp	x21, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4075c4:	add	x26, x26, #0x616
  4075c8:	b	407808 <ascii_strlower_n@plt+0x33f8>
  4075cc:	ldr	w21, [sp, #40]
  4075d0:	mov	w26, w0
  4075d4:	tbz	w26, #31, 407518 <ascii_strlower_n@plt+0x3108>
  4075d8:	mov	w0, wzr
  4075dc:	bl	4039b0 <log_get_max_level_realm@plt>
  4075e0:	cmp	w0, #0x3
  4075e4:	b.lt	4076a8 <ascii_strlower_n@plt+0x3298>  // b.tstop
  4075e8:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4075ec:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4075f0:	mov	w0, #0x3                   	// #3
  4075f4:	mov	w3, #0xf0                  	// #240
  4075f8:	mov	w1, w26
  4075fc:	mov	x2, x28
  407600:	add	x4, x4, #0x699
  407604:	add	x5, x5, #0x1be
  407608:	bl	4039c0 <log_internal_realm@plt>
  40760c:	mov	w25, w0
  407610:	b	4076b4 <ascii_strlower_n@plt+0x32a4>
  407614:	mov	w25, w0
  407618:	mov	w0, wzr
  40761c:	bl	4039b0 <log_get_max_level_realm@plt>
  407620:	cmp	w0, #0x3
  407624:	b.lt	4077f4 <ascii_strlower_n@plt+0x33e4>  // b.tstop
  407628:	mov	w0, #0x3                   	// #3
  40762c:	mov	w3, #0x13f                 	// #319
  407630:	b	407374 <ascii_strlower_n@plt+0x2f64>
  407634:	mov	w25, w0
  407638:	mov	w0, wzr
  40763c:	bl	4039b0 <log_get_max_level_realm@plt>
  407640:	adrp	x26, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407644:	cmp	w0, #0x3
  407648:	add	x26, x26, #0x616
  40764c:	b.lt	407700 <ascii_strlower_n@plt+0x32f0>  // b.tstop
  407650:	mov	w0, #0x3                   	// #3
  407654:	mov	w3, #0xf4                  	// #244
  407658:	b	4076dc <ascii_strlower_n@plt+0x32cc>
  40765c:	mov	w25, w0
  407660:	mov	w21, wzr
  407664:	tbnz	w25, #31, 407710 <ascii_strlower_n@plt+0x3300>
  407668:	ldur	x0, [x29, #-16]
  40766c:	bl	403d20 <sd_bus_message_exit_container@plt>
  407670:	tbnz	w0, #31, 407770 <ascii_strlower_n@plt+0x3360>
  407674:	ldur	x0, [x29, #-16]
  407678:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40767c:	sub	x2, x29, #0x38
  407680:	add	x1, x1, #0x860
  407684:	bl	403d10 <sd_bus_message_read@plt>
  407688:	tbnz	w0, #31, 4077bc <ascii_strlower_n@plt+0x33ac>
  40768c:	cbz	w21, 40783c <ascii_strlower_n@plt+0x342c>
  407690:	ldr	x8, [sp, #48]
  407694:	ldur	x0, [x29, #-56]
  407698:	sub	x1, x8, x23
  40769c:	bl	40b970 <ascii_strlower_n@plt+0x7560>
  4076a0:	mov	w25, wzr
  4076a4:	b	407874 <ascii_strlower_n@plt+0x3464>
  4076a8:	mov	w8, wzr
  4076ac:	neg	w9, w26
  4076b0:	sub	w25, w8, w9, uxtb
  4076b4:	adrp	x26, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4076b8:	add	x26, x26, #0x616
  4076bc:	b	407768 <ascii_strlower_n@plt+0x3358>
  4076c0:	mov	w25, w0
  4076c4:	mov	w0, wzr
  4076c8:	bl	4039b0 <log_get_max_level_realm@plt>
  4076cc:	cmp	w0, #0x3
  4076d0:	b.lt	407700 <ascii_strlower_n@plt+0x32f0>  // b.tstop
  4076d4:	mov	w0, #0x3                   	// #3
  4076d8:	mov	w3, #0xf8                  	// #248
  4076dc:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4076e0:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4076e4:	mov	w1, w25
  4076e8:	mov	x2, x28
  4076ec:	add	x4, x4, #0x699
  4076f0:	add	x5, x5, #0x1be
  4076f4:	bl	4039c0 <log_internal_realm@plt>
  4076f8:	mov	w25, w0
  4076fc:	b	407768 <ascii_strlower_n@plt+0x3358>
  407700:	mov	w8, wzr
  407704:	neg	w9, w25
  407708:	sub	w25, w8, w9, uxtb
  40770c:	b	407768 <ascii_strlower_n@plt+0x3358>
  407710:	mov	w0, wzr
  407714:	bl	4039b0 <log_get_max_level_realm@plt>
  407718:	cmp	w0, #0x3
  40771c:	b.lt	4077ac <ascii_strlower_n@plt+0x339c>  // b.tstop
  407720:	mov	w0, #0x3                   	// #3
  407724:	mov	w3, #0x15a                 	// #346
  407728:	b	40778c <ascii_strlower_n@plt+0x337c>
  40772c:	mov	w0, wzr
  407730:	bl	4039b0 <log_get_max_level_realm@plt>
  407734:	cmp	w0, #0x3
  407738:	b.lt	407764 <ascii_strlower_n@plt+0x3354>  // b.tstop
  40773c:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407740:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407744:	mov	w0, #0x3                   	// #3
  407748:	mov	w3, #0x100                 	// #256
  40774c:	mov	w1, wzr
  407750:	mov	x2, x28
  407754:	add	x4, x4, #0x699
  407758:	add	x5, x5, #0x78c
  40775c:	mov	x6, x23
  407760:	bl	4039c0 <log_internal_realm@plt>
  407764:	mov	w25, #0xfffffffd            	// #-3
  407768:	adrp	x21, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40776c:	b	407808 <ascii_strlower_n@plt+0x33f8>
  407770:	mov	w25, w0
  407774:	mov	w0, wzr
  407778:	bl	4039b0 <log_get_max_level_realm@plt>
  40777c:	cmp	w0, #0x3
  407780:	b.lt	4077ac <ascii_strlower_n@plt+0x339c>  // b.tstop
  407784:	mov	w0, #0x3                   	// #3
  407788:	mov	w3, #0x15e                 	// #350
  40778c:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407790:	mov	w1, w25
  407794:	mov	x2, x28
  407798:	mov	x4, x26
  40779c:	add	x5, x5, #0x1be
  4077a0:	bl	4039c0 <log_internal_realm@plt>
  4077a4:	mov	w25, w0
  4077a8:	b	407874 <ascii_strlower_n@plt+0x3464>
  4077ac:	mov	w8, wzr
  4077b0:	neg	w9, w25
  4077b4:	sub	w25, w8, w9, uxtb
  4077b8:	b	407874 <ascii_strlower_n@plt+0x3464>
  4077bc:	mov	w25, w0
  4077c0:	mov	w0, wzr
  4077c4:	bl	4039b0 <log_get_max_level_realm@plt>
  4077c8:	cmp	w0, #0x3
  4077cc:	adrp	x21, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4077d0:	b.lt	4077f4 <ascii_strlower_n@plt+0x33e4>  // b.tstop
  4077d4:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4077d8:	mov	w0, #0x3                   	// #3
  4077dc:	mov	w3, #0x162                 	// #354
  4077e0:	mov	w1, w25
  4077e4:	mov	x2, x28
  4077e8:	mov	x4, x26
  4077ec:	add	x5, x5, #0x1be
  4077f0:	b	40745c <ascii_strlower_n@plt+0x304c>
  4077f4:	mov	w8, wzr
  4077f8:	neg	w9, w25
  4077fc:	sub	w25, w8, w9, uxtb
  407800:	ldur	x0, [x29, #-48]
  407804:	bl	403a30 <free@plt>
  407808:	sub	x0, x29, #0x28
  40780c:	bl	403d80 <sd_bus_error_free@plt>
  407810:	ldur	x0, [x29, #-16]
  407814:	cbz	x0, 40781c <ascii_strlower_n@plt+0x340c>
  407818:	bl	403d90 <sd_bus_message_unref@plt>
  40781c:	ldur	x0, [x29, #-8]
  407820:	cbz	x0, 407828 <ascii_strlower_n@plt+0x3418>
  407824:	bl	403d90 <sd_bus_message_unref@plt>
  407828:	ldr	x23, [x22, #8]!
  40782c:	cmp	w25, #0x0
  407830:	csel	w20, w25, w20, lt  // lt = tstop
  407834:	cbnz	x23, 406ba4 <ascii_strlower_n@plt+0x2794>
  407838:	b	407880 <ascii_strlower_n@plt+0x3470>
  40783c:	mov	w0, wzr
  407840:	bl	4039b0 <log_get_max_level_realm@plt>
  407844:	cmp	w0, #0x3
  407848:	b.lt	407870 <ascii_strlower_n@plt+0x3460>  // b.tstop
  40784c:	ldur	x6, [x29, #-48]
  407850:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407854:	mov	w0, #0x3                   	// #3
  407858:	mov	w3, #0x165                 	// #357
  40785c:	mov	w1, wzr
  407860:	mov	x2, x28
  407864:	mov	x4, x26
  407868:	add	x5, x5, #0x65d
  40786c:	bl	4039c0 <log_internal_realm@plt>
  407870:	mov	w25, #0xfffffffd            	// #-3
  407874:	adrp	x21, 440000 <ascii_strlower_n@plt+0x3bbf0>
  407878:	b	407800 <ascii_strlower_n@plt+0x33f0>
  40787c:	mov	w20, wzr
  407880:	mov	w0, w20
  407884:	ldp	x20, x19, [sp, #240]
  407888:	ldp	x22, x21, [sp, #224]
  40788c:	ldp	x24, x23, [sp, #208]
  407890:	ldp	x26, x25, [sp, #192]
  407894:	ldp	x28, x27, [sp, #176]
  407898:	ldp	x29, x30, [sp, #160]
  40789c:	add	sp, sp, #0x100
  4078a0:	ret
  4078a4:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  4078a8:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  4078ac:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4078b0:	add	x1, x1, #0xc72
  4078b4:	add	x2, x2, #0xf07
  4078b8:	add	x4, x4, #0x5c9
  4078bc:	mov	w3, #0x113                 	// #275
  4078c0:	b	407920 <ascii_strlower_n@plt+0x3510>
  4078c4:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  4078c8:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  4078cc:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4078d0:	add	x1, x1, #0x8f4
  4078d4:	add	x2, x2, #0xf07
  4078d8:	add	x4, x4, #0x5c9
  4078dc:	mov	w3, #0x112                 	// #274
  4078e0:	b	407920 <ascii_strlower_n@plt+0x3510>
  4078e4:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4078e8:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  4078ec:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4078f0:	add	x1, x1, #0xc5
  4078f4:	add	x2, x2, #0xf07
  4078f8:	add	x4, x4, #0x670
  4078fc:	mov	w3, #0xa6                  	// #166
  407900:	b	407920 <ascii_strlower_n@plt+0x3510>
  407904:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  407908:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf0>
  40790c:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  407910:	add	x1, x1, #0xc72
  407914:	add	x2, x2, #0xc97
  407918:	add	x4, x4, #0xcb0
  40791c:	mov	w3, #0x43                  	// #67
  407920:	mov	w0, wzr
  407924:	bl	403aa0 <log_assert_failed_realm@plt>
  407928:	cmp	w0, #0x2
  40792c:	b.ne	407944 <ascii_strlower_n@plt+0x3534>  // b.any
  407930:	ldr	x3, [x1, #8]
  407934:	mov	x0, x2
  407938:	mov	x1, xzr
  40793c:	mov	x2, xzr
  407940:	b	40bbc0 <ascii_strlower_n@plt+0x77b0>
  407944:	ldp	x8, x9, [x1, #8]
  407948:	cmp	w0, #0x3
  40794c:	b.ne	407964 <ascii_strlower_n@plt+0x3554>  // b.any
  407950:	mov	x0, x2
  407954:	mov	x1, xzr
  407958:	mov	x2, x8
  40795c:	mov	x3, x9
  407960:	b	40bbc0 <ascii_strlower_n@plt+0x77b0>
  407964:	ldr	x3, [x1, #24]
  407968:	mov	x0, x2
  40796c:	mov	x1, x8
  407970:	mov	x2, x9
  407974:	b	40bbc0 <ascii_strlower_n@plt+0x77b0>
  407978:	stp	x29, x30, [sp, #-80]!
  40797c:	stp	x26, x25, [sp, #16]
  407980:	stp	x24, x23, [sp, #32]
  407984:	stp	x22, x21, [sp, #48]
  407988:	stp	x20, x19, [sp, #64]
  40798c:	ldr	x25, [x1, #8]
  407990:	mov	x29, sp
  407994:	cbz	x25, 407aa4 <ascii_strlower_n@plt+0x3694>
  407998:	cbz	x2, 407ac4 <ascii_strlower_n@plt+0x36b4>
  40799c:	adrp	x19, 417000 <ascii_strlower_n@plt+0x12bf0>
  4079a0:	adrp	x20, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4079a4:	adrp	x21, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4079a8:	adrp	x23, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4079ac:	adrp	x24, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4079b0:	mov	w22, wzr
  4079b4:	add	x26, x1, #0x10
  4079b8:	add	x19, x19, #0xf07
  4079bc:	add	x20, x20, #0x97d
  4079c0:	add	x21, x21, #0x98d
  4079c4:	add	x23, x23, #0x9b0
  4079c8:	add	x24, x24, #0x9d6
  4079cc:	mov	w1, #0x40                  	// #64
  4079d0:	mov	x0, x25
  4079d4:	bl	403da0 <strrchr@plt>
  4079d8:	cbz	x0, 407a50 <ascii_strlower_n@plt+0x3640>
  4079dc:	cmp	x0, x25
  4079e0:	b.eq	407a20 <ascii_strlower_n@plt+0x3610>  // b.none
  4079e4:	ldrb	w8, [x0, #1]
  4079e8:	cbz	w8, 407a20 <ascii_strlower_n@plt+0x3610>
  4079ec:	mov	w0, wzr
  4079f0:	bl	4039b0 <log_get_max_level_realm@plt>
  4079f4:	cmp	w0, #0x3
  4079f8:	b.lt	407a90 <ascii_strlower_n@plt+0x3680>  // b.tstop
  4079fc:	mov	w0, #0x3                   	// #3
  407a00:	mov	w1, #0xffffffa1            	// #-95
  407a04:	mov	w3, #0x375                 	// #885
  407a08:	mov	x2, x19
  407a0c:	mov	x4, x20
  407a10:	mov	x5, x24
  407a14:	bl	4039c0 <log_internal_realm@plt>
  407a18:	tbz	w0, #31, 407a98 <ascii_strlower_n@plt+0x3688>
  407a1c:	b	407a94 <ascii_strlower_n@plt+0x3684>
  407a20:	mov	w0, wzr
  407a24:	bl	4039b0 <log_get_max_level_realm@plt>
  407a28:	cmp	w0, #0x3
  407a2c:	b.lt	407a88 <ascii_strlower_n@plt+0x3678>  // b.tstop
  407a30:	mov	w1, #0x16                  	// #22
  407a34:	mov	w0, #0x3                   	// #3
  407a38:	movk	w1, #0x4000, lsl #16
  407a3c:	mov	w3, #0x370                 	// #880
  407a40:	mov	x2, x19
  407a44:	mov	x4, x20
  407a48:	mov	x5, x23
  407a4c:	b	407a78 <ascii_strlower_n@plt+0x3668>
  407a50:	bl	4039b0 <log_get_max_level_realm@plt>
  407a54:	cmp	w0, #0x3
  407a58:	b.lt	407a88 <ascii_strlower_n@plt+0x3678>  // b.tstop
  407a5c:	mov	w1, #0x16                  	// #22
  407a60:	mov	w0, #0x3                   	// #3
  407a64:	movk	w1, #0x4000, lsl #16
  407a68:	mov	w3, #0x36d                 	// #877
  407a6c:	mov	x2, x19
  407a70:	mov	x4, x20
  407a74:	mov	x5, x21
  407a78:	mov	x6, x25
  407a7c:	bl	4039c0 <log_internal_realm@plt>
  407a80:	tbz	w0, #31, 407a98 <ascii_strlower_n@plt+0x3688>
  407a84:	b	407a94 <ascii_strlower_n@plt+0x3684>
  407a88:	mov	w0, #0xffffffea            	// #-22
  407a8c:	b	407a94 <ascii_strlower_n@plt+0x3684>
  407a90:	mov	w0, #0xffffffa1            	// #-95
  407a94:	mov	w22, w0
  407a98:	ldr	x25, [x26], #8
  407a9c:	cbnz	x25, 4079cc <ascii_strlower_n@plt+0x35bc>
  407aa0:	b	407aa8 <ascii_strlower_n@plt+0x3698>
  407aa4:	mov	w22, wzr
  407aa8:	mov	w0, w22
  407aac:	ldp	x20, x19, [sp, #64]
  407ab0:	ldp	x22, x21, [sp, #48]
  407ab4:	ldp	x24, x23, [sp, #32]
  407ab8:	ldp	x26, x25, [sp, #16]
  407abc:	ldp	x29, x30, [sp], #80
  407ac0:	ret
  407ac4:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  407ac8:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  407acc:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407ad0:	add	x1, x1, #0x8f4
  407ad4:	add	x2, x2, #0xf07
  407ad8:	add	x4, x4, #0x951
  407adc:	mov	w3, #0x367                 	// #871
  407ae0:	mov	w0, wzr
  407ae4:	bl	403aa0 <log_assert_failed_realm@plt>
  407ae8:	sub	sp, sp, #0x50
  407aec:	stp	x29, x30, [sp, #32]
  407af0:	stp	x22, x21, [sp, #48]
  407af4:	stp	x20, x19, [sp, #64]
  407af8:	mov	x22, x1
  407afc:	adrp	x8, 41d000 <ascii_strlower_n@plt+0x18bf0>
  407b00:	add	x8, x8, #0xf70
  407b04:	ldr	x21, [x22, #8]!
  407b08:	ldp	q0, q1, [x8]
  407b0c:	mov	x20, x1
  407b10:	mov	x0, sp
  407b14:	mov	x1, x21
  407b18:	add	x29, sp, #0x20
  407b1c:	mov	x19, x2
  407b20:	stp	q0, q1, [sp]
  407b24:	bl	403b70 <strv_find@plt>
  407b28:	cmp	x0, #0x0
  407b2c:	mov	w8, #0x8                   	// #8
  407b30:	mov	w9, #0x10                  	// #16
  407b34:	csel	x8, x9, x8, ne  // ne = any
  407b38:	ldr	x2, [x20, x8]
  407b3c:	adrp	x9, 418000 <ascii_strlower_n@plt+0x13bf0>
  407b40:	add	x8, x20, #0x10
  407b44:	add	x9, x9, #0xd80
  407b48:	csel	x8, x8, x22, ne  // ne = any
  407b4c:	csel	x21, x21, x9, ne  // ne = any
  407b50:	mov	w20, wzr
  407b54:	cbz	x2, 407b78 <ascii_strlower_n@plt+0x3768>
  407b58:	add	x22, x8, #0x8
  407b5c:	mov	x0, x19
  407b60:	mov	x1, x21
  407b64:	bl	40c918 <ascii_strlower_n@plt+0x8508>
  407b68:	ldr	x2, [x22], #8
  407b6c:	cmp	w0, #0x0
  407b70:	csel	w20, w0, w20, lt  // lt = tstop
  407b74:	cbnz	x2, 407b5c <ascii_strlower_n@plt+0x374c>
  407b78:	mov	w0, w20
  407b7c:	ldp	x20, x19, [sp, #64]
  407b80:	ldp	x22, x21, [sp, #48]
  407b84:	ldp	x29, x30, [sp, #32]
  407b88:	add	sp, sp, #0x50
  407b8c:	ret
  407b90:	sub	sp, sp, #0xb0
  407b94:	stp	x29, x30, [sp, #112]
  407b98:	add	x29, sp, #0x70
  407b9c:	stp	x24, x23, [sp, #128]
  407ba0:	stp	x22, x21, [sp, #144]
  407ba4:	stp	x20, x19, [sp, #160]
  407ba8:	stp	xzr, xzr, [x29, #-24]
  407bac:	stur	xzr, [x29, #-8]
  407bb0:	stur	xzr, [x29, #-32]
  407bb4:	cbz	x2, 408040 <ascii_strlower_n@plt+0x3c30>
  407bb8:	mov	x19, x2
  407bbc:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  407bc0:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf0>
  407bc4:	adrp	x3, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407bc8:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  407bcc:	add	x1, x1, #0x9a6
  407bd0:	add	x2, x2, #0xe87
  407bd4:	add	x3, x3, #0x144
  407bd8:	add	x4, x4, #0x8e4
  407bdc:	sub	x5, x29, #0x18
  407be0:	add	x7, sp, #0x4
  407be4:	mov	w6, #0x62                  	// #98
  407be8:	mov	x0, x19
  407bec:	bl	403db0 <sd_bus_get_property_trivial@plt>
  407bf0:	tbnz	w0, #31, 407e14 <ascii_strlower_n@plt+0x3a04>
  407bf4:	bl	403b80 <colors_enabled@plt>
  407bf8:	ldr	w8, [sp, #4]
  407bfc:	adrp	x22, 417000 <ascii_strlower_n@plt+0x12bf0>
  407c00:	adrp	x23, 418000 <ascii_strlower_n@plt+0x13bf0>
  407c04:	add	x22, x22, #0xff4
  407c08:	add	x23, x23, #0xcf8
  407c0c:	tst	w0, #0x1
  407c10:	adrp	x9, 419000 <ascii_strlower_n@plt+0x14bf0>
  407c14:	adrp	x10, 419000 <ascii_strlower_n@plt+0x14bf0>
  407c18:	csel	x20, x23, x22, ne  // ne = any
  407c1c:	add	x9, x9, #0xdeb
  407c20:	add	x10, x10, #0xdef
  407c24:	cmp	w8, #0x0
  407c28:	csel	x21, x10, x9, eq  // eq = none
  407c2c:	bl	403b80 <colors_enabled@plt>
  407c30:	adrp	x24, 418000 <ascii_strlower_n@plt+0x13bf0>
  407c34:	add	x24, x24, #0xd02
  407c38:	tst	w0, #0x1
  407c3c:	adrp	x0, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407c40:	csel	x3, x24, x22, ne  // ne = any
  407c44:	add	x0, x0, #0xabf
  407c48:	mov	x1, x20
  407c4c:	mov	x2, x21
  407c50:	bl	403a80 <printf@plt>
  407c54:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  407c58:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf0>
  407c5c:	adrp	x3, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407c60:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407c64:	adrp	x7, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407c68:	add	x1, x1, #0x9a6
  407c6c:	add	x2, x2, #0xe87
  407c70:	add	x3, x3, #0x144
  407c74:	add	x4, x4, #0xaed
  407c78:	add	x7, x7, #0xb03
  407c7c:	sub	x5, x29, #0x18
  407c80:	sub	x6, x29, #0x20
  407c84:	mov	x0, x19
  407c88:	bl	403dc0 <sd_bus_get_property@plt>
  407c8c:	tbnz	w0, #31, 407e5c <ascii_strlower_n@plt+0x3a4c>
  407c90:	ldur	x0, [x29, #-32]
  407c94:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407c98:	add	x1, x1, #0xb03
  407c9c:	sub	x2, x29, #0x28
  407ca0:	sub	x3, x29, #0x30
  407ca4:	bl	403d10 <sd_bus_message_read@plt>
  407ca8:	tbnz	w0, #31, 407ea4 <ascii_strlower_n@plt+0x3a94>
  407cac:	bl	403b80 <colors_enabled@plt>
  407cb0:	tst	w0, #0x1
  407cb4:	csel	x20, x23, x22, ne  // ne = any
  407cb8:	bl	403b80 <colors_enabled@plt>
  407cbc:	ldp	x4, x3, [x29, #-48]
  407cc0:	tst	w0, #0x1
  407cc4:	adrp	x0, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407cc8:	csel	x2, x24, x22, ne  // ne = any
  407ccc:	add	x0, x0, #0xb31
  407cd0:	mov	x1, x20
  407cd4:	bl	403a80 <printf@plt>
  407cd8:	ldur	x0, [x29, #-32]
  407cdc:	bl	403d90 <sd_bus_message_unref@plt>
  407ce0:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  407ce4:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf0>
  407ce8:	adrp	x3, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407cec:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407cf0:	adrp	x7, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407cf4:	stur	x0, [x29, #-32]
  407cf8:	add	x1, x1, #0x9a6
  407cfc:	add	x2, x2, #0xe87
  407d00:	add	x3, x3, #0x144
  407d04:	add	x4, x4, #0xb77
  407d08:	add	x7, x7, #0xb87
  407d0c:	sub	x5, x29, #0x18
  407d10:	sub	x6, x29, #0x20
  407d14:	mov	x0, x19
  407d18:	bl	403dc0 <sd_bus_get_property@plt>
  407d1c:	tbnz	w0, #31, 407edc <ascii_strlower_n@plt+0x3acc>
  407d20:	ldur	x0, [x29, #-32]
  407d24:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407d28:	add	x1, x1, #0xb87
  407d2c:	add	x2, sp, #0x38
  407d30:	add	x3, sp, #0x30
  407d34:	add	x4, sp, #0x28
  407d38:	bl	403d10 <sd_bus_message_read@plt>
  407d3c:	tbnz	w0, #31, 407f2c <ascii_strlower_n@plt+0x3b1c>
  407d40:	bl	403b80 <colors_enabled@plt>
  407d44:	tst	w0, #0x1
  407d48:	csel	x20, x23, x22, ne  // ne = any
  407d4c:	bl	403b80 <colors_enabled@plt>
  407d50:	ldp	x4, x3, [sp, #48]
  407d54:	ldr	x5, [sp, #40]
  407d58:	tst	w0, #0x1
  407d5c:	adrp	x0, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407d60:	csel	x2, x24, x22, ne  // ne = any
  407d64:	add	x0, x0, #0xbb0
  407d68:	mov	x1, x20
  407d6c:	bl	403a80 <printf@plt>
  407d70:	ldur	x0, [x29, #-32]
  407d74:	bl	403d90 <sd_bus_message_unref@plt>
  407d78:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  407d7c:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf0>
  407d80:	adrp	x3, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407d84:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407d88:	adrp	x7, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407d8c:	stur	x0, [x29, #-32]
  407d90:	add	x1, x1, #0x9a6
  407d94:	add	x2, x2, #0xe87
  407d98:	add	x3, x3, #0x144
  407d9c:	add	x4, x4, #0xc0a
  407da0:	add	x7, x7, #0xc1b
  407da4:	sub	x5, x29, #0x18
  407da8:	sub	x6, x29, #0x20
  407dac:	mov	x0, x19
  407db0:	bl	403dc0 <sd_bus_get_property@plt>
  407db4:	tbnz	w0, #31, 407fac <ascii_strlower_n@plt+0x3b9c>
  407db8:	ldur	x0, [x29, #-32]
  407dbc:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407dc0:	add	x1, x1, #0xc1b
  407dc4:	add	x2, sp, #0x20
  407dc8:	add	x3, sp, #0x18
  407dcc:	add	x4, sp, #0x10
  407dd0:	add	x5, sp, #0x8
  407dd4:	bl	403d10 <sd_bus_message_read@plt>
  407dd8:	tbnz	w0, #31, 407ff8 <ascii_strlower_n@plt+0x3be8>
  407ddc:	bl	403b80 <colors_enabled@plt>
  407de0:	tst	w0, #0x1
  407de4:	csel	x19, x23, x22, ne  // ne = any
  407de8:	bl	403b80 <colors_enabled@plt>
  407dec:	ldp	x4, x3, [sp, #24]
  407df0:	ldp	x6, x5, [sp, #8]
  407df4:	tst	w0, #0x1
  407df8:	adrp	x0, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407dfc:	csel	x2, x24, x22, ne  // ne = any
  407e00:	add	x0, x0, #0xc46
  407e04:	mov	x1, x19
  407e08:	bl	403a80 <printf@plt>
  407e0c:	mov	w19, wzr
  407e10:	b	407f7c <ascii_strlower_n@plt+0x3b6c>
  407e14:	mov	w20, w0
  407e18:	mov	w0, wzr
  407e1c:	bl	4039b0 <log_get_max_level_realm@plt>
  407e20:	cmp	w0, #0x3
  407e24:	b.lt	407f70 <ascii_strlower_n@plt+0x3b60>  // b.tstop
  407e28:	sub	x0, x29, #0x18
  407e2c:	mov	w1, w20
  407e30:	bl	403d70 <bus_error_message@plt>
  407e34:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  407e38:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407e3c:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407e40:	mov	x6, x0
  407e44:	add	x2, x2, #0xf07
  407e48:	add	x4, x4, #0xa86
  407e4c:	add	x5, x5, #0xa96
  407e50:	mov	w0, #0x3                   	// #3
  407e54:	mov	w3, #0x3eb                 	// #1003
  407e58:	b	407f20 <ascii_strlower_n@plt+0x3b10>
  407e5c:	mov	w20, w0
  407e60:	mov	w0, wzr
  407e64:	bl	4039b0 <log_get_max_level_realm@plt>
  407e68:	cmp	w0, #0x3
  407e6c:	b.lt	407f70 <ascii_strlower_n@plt+0x3b60>  // b.tstop
  407e70:	sub	x0, x29, #0x18
  407e74:	mov	w1, w20
  407e78:	bl	403d70 <bus_error_message@plt>
  407e7c:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  407e80:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407e84:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407e88:	mov	x6, x0
  407e8c:	add	x2, x2, #0xf07
  407e90:	add	x4, x4, #0xa86
  407e94:	add	x5, x5, #0xb08
  407e98:	mov	w0, #0x3                   	// #3
  407e9c:	mov	w3, #0x3fb                 	// #1019
  407ea0:	b	407f20 <ascii_strlower_n@plt+0x3b10>
  407ea4:	mov	w20, w0
  407ea8:	mov	w0, wzr
  407eac:	bl	4039b0 <log_get_max_level_realm@plt>
  407eb0:	cmp	w0, #0x3
  407eb4:	b.lt	407f70 <ascii_strlower_n@plt+0x3b60>  // b.tstop
  407eb8:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  407ebc:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407ec0:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407ec4:	add	x2, x2, #0xf07
  407ec8:	add	x4, x4, #0xa86
  407ecc:	add	x5, x5, #0x1be
  407ed0:	mov	w0, #0x3                   	// #3
  407ed4:	mov	w3, #0x401                 	// #1025
  407ed8:	b	407f60 <ascii_strlower_n@plt+0x3b50>
  407edc:	mov	w20, w0
  407ee0:	mov	w0, wzr
  407ee4:	bl	4039b0 <log_get_max_level_realm@plt>
  407ee8:	cmp	w0, #0x3
  407eec:	b.lt	407f70 <ascii_strlower_n@plt+0x3b60>  // b.tstop
  407ef0:	sub	x0, x29, #0x18
  407ef4:	mov	w1, w20
  407ef8:	bl	403d70 <bus_error_message@plt>
  407efc:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  407f00:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407f04:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407f08:	mov	x6, x0
  407f0c:	add	x2, x2, #0xf07
  407f10:	add	x4, x4, #0xa86
  407f14:	add	x5, x5, #0xb8d
  407f18:	mov	w0, #0x3                   	// #3
  407f1c:	mov	w3, #0x416                 	// #1046
  407f20:	mov	w1, w20
  407f24:	bl	4039c0 <log_internal_realm@plt>
  407f28:	b	407f68 <ascii_strlower_n@plt+0x3b58>
  407f2c:	mov	w20, w0
  407f30:	mov	w0, wzr
  407f34:	bl	4039b0 <log_get_max_level_realm@plt>
  407f38:	cmp	w0, #0x3
  407f3c:	b.lt	407f70 <ascii_strlower_n@plt+0x3b60>  // b.tstop
  407f40:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  407f44:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407f48:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407f4c:	add	x2, x2, #0xf07
  407f50:	add	x4, x4, #0xa86
  407f54:	add	x5, x5, #0x1be
  407f58:	mov	w0, #0x3                   	// #3
  407f5c:	mov	w3, #0x41d                 	// #1053
  407f60:	mov	w1, w20
  407f64:	bl	4039c0 <log_internal_realm@plt>
  407f68:	mov	w19, w0
  407f6c:	b	407f7c <ascii_strlower_n@plt+0x3b6c>
  407f70:	mov	w8, wzr
  407f74:	neg	w9, w20
  407f78:	sub	w19, w8, w9, uxtb
  407f7c:	ldur	x0, [x29, #-32]
  407f80:	cbz	x0, 407f88 <ascii_strlower_n@plt+0x3b78>
  407f84:	bl	403d90 <sd_bus_message_unref@plt>
  407f88:	sub	x0, x29, #0x18
  407f8c:	bl	403d80 <sd_bus_error_free@plt>
  407f90:	mov	w0, w19
  407f94:	ldp	x20, x19, [sp, #160]
  407f98:	ldp	x22, x21, [sp, #144]
  407f9c:	ldp	x24, x23, [sp, #128]
  407fa0:	ldp	x29, x30, [sp, #112]
  407fa4:	add	sp, sp, #0xb0
  407fa8:	ret
  407fac:	mov	w19, w0
  407fb0:	mov	w0, wzr
  407fb4:	bl	4039b0 <log_get_max_level_realm@plt>
  407fb8:	cmp	w0, #0x3
  407fbc:	b.lt	408034 <ascii_strlower_n@plt+0x3c24>  // b.tstop
  407fc0:	sub	x0, x29, #0x18
  407fc4:	mov	w1, w19
  407fc8:	bl	403d70 <bus_error_message@plt>
  407fcc:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  407fd0:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407fd4:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  407fd8:	mov	x6, x0
  407fdc:	add	x2, x2, #0xf07
  407fe0:	add	x4, x4, #0xa86
  407fe4:	add	x5, x5, #0xc22
  407fe8:	mov	w0, #0x3                   	// #3
  407fec:	mov	w3, #0x434                 	// #1076
  407ff0:	mov	w1, w19
  407ff4:	b	407f24 <ascii_strlower_n@plt+0x3b14>
  407ff8:	mov	w19, w0
  407ffc:	mov	w0, wzr
  408000:	bl	4039b0 <log_get_max_level_realm@plt>
  408004:	cmp	w0, #0x3
  408008:	b.lt	408034 <ascii_strlower_n@plt+0x3c24>  // b.tstop
  40800c:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  408010:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408014:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408018:	add	x2, x2, #0xf07
  40801c:	add	x4, x4, #0xa86
  408020:	add	x5, x5, #0x1be
  408024:	mov	w0, #0x3                   	// #3
  408028:	mov	w3, #0x43c                 	// #1084
  40802c:	mov	w1, w19
  408030:	b	407f64 <ascii_strlower_n@plt+0x3b54>
  408034:	mov	w8, wzr
  408038:	neg	w9, w19
  40803c:	b	407f78 <ascii_strlower_n@plt+0x3b68>
  408040:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  408044:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  408048:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40804c:	add	x1, x1, #0x8f4
  408050:	add	x2, x2, #0xf07
  408054:	add	x4, x4, #0xa5c
  408058:	mov	w3, #0x3e0                 	// #992
  40805c:	mov	w0, wzr
  408060:	bl	403aa0 <log_assert_failed_realm@plt>
  408064:	sub	sp, sp, #0x40
  408068:	mov	x0, x2
  40806c:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  408070:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf0>
  408074:	adrp	x3, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408078:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40807c:	add	x1, x1, #0x9a6
  408080:	add	x2, x2, #0xe87
  408084:	add	x3, x3, #0x144
  408088:	add	x4, x4, #0xcc4
  40808c:	add	x5, sp, #0x8
  408090:	mov	x6, xzr
  408094:	mov	x7, xzr
  408098:	stp	x29, x30, [sp, #32]
  40809c:	str	x19, [sp, #48]
  4080a0:	add	x29, sp, #0x20
  4080a4:	stp	xzr, xzr, [sp, #8]
  4080a8:	str	xzr, [sp, #24]
  4080ac:	bl	403dd0 <sd_bus_call_method@plt>
  4080b0:	tbnz	w0, #31, 4080bc <ascii_strlower_n@plt+0x3cac>
  4080b4:	mov	w19, wzr
  4080b8:	b	40811c <ascii_strlower_n@plt+0x3d0c>
  4080bc:	mov	w19, w0
  4080c0:	mov	w0, wzr
  4080c4:	bl	4039b0 <log_get_max_level_realm@plt>
  4080c8:	cmp	w0, #0x3
  4080cc:	b.lt	408110 <ascii_strlower_n@plt+0x3d00>  // b.tstop
  4080d0:	add	x0, sp, #0x8
  4080d4:	mov	w1, w19
  4080d8:	bl	403d70 <bus_error_message@plt>
  4080dc:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  4080e0:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4080e4:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4080e8:	mov	x6, x0
  4080ec:	add	x2, x2, #0xf07
  4080f0:	add	x4, x4, #0xcd4
  4080f4:	add	x5, x5, #0xce5
  4080f8:	mov	w0, #0x3                   	// #3
  4080fc:	mov	w3, #0x45b                 	// #1115
  408100:	mov	w1, w19
  408104:	bl	4039c0 <log_internal_realm@plt>
  408108:	mov	w19, w0
  40810c:	b	40811c <ascii_strlower_n@plt+0x3d0c>
  408110:	mov	w8, wzr
  408114:	neg	w9, w19
  408118:	sub	w19, w8, w9, uxtb
  40811c:	add	x0, sp, #0x8
  408120:	bl	403d80 <sd_bus_error_free@plt>
  408124:	mov	w0, w19
  408128:	ldr	x19, [sp, #48]
  40812c:	ldp	x29, x30, [sp, #32]
  408130:	add	sp, sp, #0x40
  408134:	ret
  408138:	sub	sp, sp, #0x40
  40813c:	mov	x0, x2
  408140:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  408144:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf0>
  408148:	adrp	x3, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40814c:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408150:	add	x1, x1, #0x9a6
  408154:	add	x2, x2, #0xe87
  408158:	add	x3, x3, #0x144
  40815c:	add	x4, x4, #0xd04
  408160:	add	x5, sp, #0x8
  408164:	mov	x6, xzr
  408168:	mov	x7, xzr
  40816c:	stp	x29, x30, [sp, #32]
  408170:	str	x19, [sp, #48]
  408174:	add	x29, sp, #0x20
  408178:	stp	xzr, xzr, [sp, #8]
  40817c:	str	xzr, [sp, #24]
  408180:	bl	403dd0 <sd_bus_call_method@plt>
  408184:	tbnz	w0, #31, 408190 <ascii_strlower_n@plt+0x3d80>
  408188:	mov	w19, wzr
  40818c:	b	4081f0 <ascii_strlower_n@plt+0x3de0>
  408190:	mov	w19, w0
  408194:	mov	w0, wzr
  408198:	bl	4039b0 <log_get_max_level_realm@plt>
  40819c:	cmp	w0, #0x3
  4081a0:	b.lt	4081e4 <ascii_strlower_n@plt+0x3dd4>  // b.tstop
  4081a4:	add	x0, sp, #0x8
  4081a8:	mov	w1, w19
  4081ac:	bl	403d70 <bus_error_message@plt>
  4081b0:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  4081b4:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4081b8:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4081bc:	mov	x6, x0
  4081c0:	add	x2, x2, #0xf07
  4081c4:	add	x4, x4, #0xd10
  4081c8:	add	x5, x5, #0xd1d
  4081cc:	mov	w0, #0x3                   	// #3
  4081d0:	mov	w3, #0x46e                 	// #1134
  4081d4:	mov	w1, w19
  4081d8:	bl	4039c0 <log_internal_realm@plt>
  4081dc:	mov	w19, w0
  4081e0:	b	4081f0 <ascii_strlower_n@plt+0x3de0>
  4081e4:	mov	w8, wzr
  4081e8:	neg	w9, w19
  4081ec:	sub	w19, w8, w9, uxtb
  4081f0:	add	x0, sp, #0x8
  4081f4:	bl	403d80 <sd_bus_error_free@plt>
  4081f8:	mov	w0, w19
  4081fc:	ldr	x19, [sp, #48]
  408200:	ldp	x29, x30, [sp, #32]
  408204:	add	sp, sp, #0x40
  408208:	ret
  40820c:	sub	sp, sp, #0x40
  408210:	mov	x0, x2
  408214:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  408218:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf0>
  40821c:	adrp	x3, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408220:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408224:	add	x1, x1, #0x9a6
  408228:	add	x2, x2, #0xe87
  40822c:	add	x3, x3, #0x144
  408230:	add	x4, x4, #0xd38
  408234:	add	x5, sp, #0x8
  408238:	mov	x6, xzr
  40823c:	mov	x7, xzr
  408240:	stp	x29, x30, [sp, #32]
  408244:	str	x19, [sp, #48]
  408248:	add	x29, sp, #0x20
  40824c:	stp	xzr, xzr, [sp, #8]
  408250:	str	xzr, [sp, #24]
  408254:	bl	403dd0 <sd_bus_call_method@plt>
  408258:	tbnz	w0, #31, 408264 <ascii_strlower_n@plt+0x3e54>
  40825c:	mov	w19, wzr
  408260:	b	4082c4 <ascii_strlower_n@plt+0x3eb4>
  408264:	mov	w19, w0
  408268:	mov	w0, wzr
  40826c:	bl	4039b0 <log_get_max_level_realm@plt>
  408270:	cmp	w0, #0x3
  408274:	b.lt	4082b8 <ascii_strlower_n@plt+0x3ea8>  // b.tstop
  408278:	add	x0, sp, #0x8
  40827c:	mov	w1, w19
  408280:	bl	403d70 <bus_error_message@plt>
  408284:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  408288:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40828c:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408290:	mov	x6, x0
  408294:	add	x2, x2, #0xf07
  408298:	add	x4, x4, #0xd4c
  40829c:	add	x5, x5, #0xd62
  4082a0:	mov	w0, #0x3                   	// #3
  4082a4:	mov	w3, #0x481                 	// #1153
  4082a8:	mov	w1, w19
  4082ac:	bl	4039c0 <log_internal_realm@plt>
  4082b0:	mov	w19, w0
  4082b4:	b	4082c4 <ascii_strlower_n@plt+0x3eb4>
  4082b8:	mov	w8, wzr
  4082bc:	neg	w9, w19
  4082c0:	sub	w19, w8, w9, uxtb
  4082c4:	add	x0, sp, #0x8
  4082c8:	bl	403d80 <sd_bus_error_free@plt>
  4082cc:	mov	w0, w19
  4082d0:	ldr	x19, [sp, #48]
  4082d4:	ldp	x29, x30, [sp, #32]
  4082d8:	add	sp, sp, #0x40
  4082dc:	ret
  4082e0:	sub	sp, sp, #0x50
  4082e4:	stp	x29, x30, [sp, #32]
  4082e8:	stp	x22, x21, [sp, #48]
  4082ec:	stp	x20, x19, [sp, #64]
  4082f0:	add	x29, sp, #0x20
  4082f4:	stp	xzr, xzr, [sp, #8]
  4082f8:	str	xzr, [sp, #24]
  4082fc:	cbz	x2, 408484 <ascii_strlower_n@plt+0x4074>
  408300:	mov	x19, x2
  408304:	mov	x21, x1
  408308:	mov	w22, w0
  40830c:	cmp	w0, #0x1
  408310:	b.le	408320 <ascii_strlower_n@plt+0x3f10>
  408314:	ldr	x0, [x21, #8]
  408318:	bl	404df8 <ascii_strlower_n@plt+0x9e8>
  40831c:	tbnz	w0, #31, 40835c <ascii_strlower_n@plt+0x3f4c>
  408320:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  408324:	ldr	w1, [x8, #56]
  408328:	cmp	w1, #0x1
  40832c:	b.lt	408350 <ascii_strlower_n@plt+0x3f40>  // b.tstop
  408330:	cmp	w22, #0x2
  408334:	b.gt	408364 <ascii_strlower_n@plt+0x3f54>
  408338:	mov	w3, #0x1                   	// #1
  40833c:	mov	x0, x19
  408340:	mov	x2, xzr
  408344:	mov	x4, xzr
  408348:	bl	4095c0 <ascii_strlower_n@plt+0x51b0>
  40834c:	b	40835c <ascii_strlower_n@plt+0x3f4c>
  408350:	mov	w1, #0x1                   	// #1
  408354:	mov	x0, x19
  408358:	bl	409be4 <ascii_strlower_n@plt+0x57d4>
  40835c:	mov	w20, w0
  408360:	b	408398 <ascii_strlower_n@plt+0x3f88>
  408364:	add	x21, x21, #0x10
  408368:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf0>
  40836c:	adrp	x3, 419000 <ascii_strlower_n@plt+0x14bf0>
  408370:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408374:	add	x2, x2, #0x9a6
  408378:	add	x3, x3, #0xe87
  40837c:	add	x4, x4, #0x144
  408380:	add	x5, sp, #0x8
  408384:	mov	x0, x19
  408388:	mov	x1, x21
  40838c:	bl	40cb24 <ascii_strlower_n@plt+0x8714>
  408390:	tbnz	w0, #31, 4083b8 <ascii_strlower_n@plt+0x3fa8>
  408394:	mov	w20, wzr
  408398:	add	x0, sp, #0x8
  40839c:	bl	403d80 <sd_bus_error_free@plt>
  4083a0:	mov	w0, w20
  4083a4:	ldp	x20, x19, [sp, #64]
  4083a8:	ldp	x22, x21, [sp, #48]
  4083ac:	ldp	x29, x30, [sp, #32]
  4083b0:	add	sp, sp, #0x50
  4083b4:	ret
  4083b8:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4083bc:	mov	w20, w0
  4083c0:	add	x1, x1, #0xda9
  4083c4:	add	x0, sp, #0x8
  4083c8:	bl	403de0 <sd_bus_error_has_name@plt>
  4083cc:	cbz	w0, 408408 <ascii_strlower_n@plt+0x3ff8>
  4083d0:	add	x0, sp, #0x8
  4083d4:	bl	403d80 <sd_bus_error_free@plt>
  4083d8:	adrp	x2, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4083dc:	adrp	x3, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4083e0:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4083e4:	add	x2, x2, #0xdcb
  4083e8:	add	x3, x3, #0xde4
  4083ec:	add	x4, x4, #0xdfe
  4083f0:	add	x5, sp, #0x8
  4083f4:	mov	x0, x19
  4083f8:	mov	x1, x21
  4083fc:	bl	40cb24 <ascii_strlower_n@plt+0x8714>
  408400:	tbz	w0, #31, 408394 <ascii_strlower_n@plt+0x3f84>
  408404:	mov	w20, w0
  408408:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40840c:	ldrb	w8, [x8, #16]
  408410:	cbz	w8, 408428 <ascii_strlower_n@plt+0x4018>
  408414:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408418:	add	x1, x1, #0xe1f
  40841c:	add	x0, sp, #0x8
  408420:	bl	403de0 <sd_bus_error_has_name@plt>
  408424:	cbnz	w0, 408394 <ascii_strlower_n@plt+0x3f84>
  408428:	mov	w0, wzr
  40842c:	bl	4039b0 <log_get_max_level_realm@plt>
  408430:	cmp	w0, #0x3
  408434:	b.lt	408474 <ascii_strlower_n@plt+0x4064>  // b.tstop
  408438:	add	x0, sp, #0x8
  40843c:	mov	w1, w20
  408440:	bl	403d70 <bus_error_message@plt>
  408444:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  408448:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40844c:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408450:	mov	x6, x0
  408454:	add	x2, x2, #0xf07
  408458:	add	x4, x4, #0xe43
  40845c:	add	x5, x5, #0xe4c
  408460:	mov	w0, #0x3                   	// #3
  408464:	mov	w3, #0x796                 	// #1942
  408468:	mov	w1, w20
  40846c:	bl	4039c0 <log_internal_realm@plt>
  408470:	b	40835c <ascii_strlower_n@plt+0x3f4c>
  408474:	mov	w8, wzr
  408478:	neg	w9, w20
  40847c:	sub	w20, w8, w9, uxtb
  408480:	b	408398 <ascii_strlower_n@plt+0x3f88>
  408484:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  408488:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40848c:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408490:	add	x1, x1, #0x8f4
  408494:	add	x2, x2, #0xf07
  408498:	add	x4, x4, #0xd86
  40849c:	mov	w3, #0x775                 	// #1909
  4084a0:	mov	w0, wzr
  4084a4:	bl	403aa0 <log_assert_failed_realm@plt>
  4084a8:	sub	sp, sp, #0x50
  4084ac:	stp	x29, x30, [sp, #32]
  4084b0:	stp	x22, x21, [sp, #48]
  4084b4:	stp	x20, x19, [sp, #64]
  4084b8:	add	x29, sp, #0x20
  4084bc:	stp	xzr, xzr, [sp, #8]
  4084c0:	str	xzr, [sp, #24]
  4084c4:	cbz	x2, 40864c <ascii_strlower_n@plt+0x423c>
  4084c8:	mov	x19, x2
  4084cc:	mov	x21, x1
  4084d0:	mov	w22, w0
  4084d4:	cmp	w0, #0x1
  4084d8:	b.le	4084e8 <ascii_strlower_n@plt+0x40d8>
  4084dc:	ldr	x0, [x21, #8]
  4084e0:	bl	404df8 <ascii_strlower_n@plt+0x9e8>
  4084e4:	tbnz	w0, #31, 408524 <ascii_strlower_n@plt+0x4114>
  4084e8:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4084ec:	ldr	w1, [x8, #56]
  4084f0:	cmp	w1, #0x1
  4084f4:	b.lt	408518 <ascii_strlower_n@plt+0x4108>  // b.tstop
  4084f8:	cmp	w22, #0x2
  4084fc:	b.gt	40852c <ascii_strlower_n@plt+0x411c>
  408500:	mov	w3, #0x2                   	// #2
  408504:	mov	x0, x19
  408508:	mov	x2, xzr
  40850c:	mov	x4, xzr
  408510:	bl	4095c0 <ascii_strlower_n@plt+0x51b0>
  408514:	b	408524 <ascii_strlower_n@plt+0x4114>
  408518:	mov	w1, #0x2                   	// #2
  40851c:	mov	x0, x19
  408520:	bl	409be4 <ascii_strlower_n@plt+0x57d4>
  408524:	mov	w20, w0
  408528:	b	408560 <ascii_strlower_n@plt+0x4150>
  40852c:	add	x21, x21, #0x10
  408530:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf0>
  408534:	adrp	x3, 419000 <ascii_strlower_n@plt+0x14bf0>
  408538:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40853c:	add	x2, x2, #0x9a6
  408540:	add	x3, x3, #0xe87
  408544:	add	x4, x4, #0x144
  408548:	add	x5, sp, #0x8
  40854c:	mov	x0, x19
  408550:	mov	x1, x21
  408554:	bl	40cf18 <ascii_strlower_n@plt+0x8b08>
  408558:	tbnz	w0, #31, 408580 <ascii_strlower_n@plt+0x4170>
  40855c:	mov	w20, wzr
  408560:	add	x0, sp, #0x8
  408564:	bl	403d80 <sd_bus_error_free@plt>
  408568:	mov	w0, w20
  40856c:	ldp	x20, x19, [sp, #64]
  408570:	ldp	x22, x21, [sp, #48]
  408574:	ldp	x29, x30, [sp, #32]
  408578:	add	sp, sp, #0x50
  40857c:	ret
  408580:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408584:	mov	w20, w0
  408588:	add	x1, x1, #0xda9
  40858c:	add	x0, sp, #0x8
  408590:	bl	403de0 <sd_bus_error_has_name@plt>
  408594:	cbz	w0, 4085d0 <ascii_strlower_n@plt+0x41c0>
  408598:	add	x0, sp, #0x8
  40859c:	bl	403d80 <sd_bus_error_free@plt>
  4085a0:	adrp	x2, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4085a4:	adrp	x3, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4085a8:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4085ac:	add	x2, x2, #0xdcb
  4085b0:	add	x3, x3, #0xde4
  4085b4:	add	x4, x4, #0xdfe
  4085b8:	add	x5, sp, #0x8
  4085bc:	mov	x0, x19
  4085c0:	mov	x1, x21
  4085c4:	bl	40cf18 <ascii_strlower_n@plt+0x8b08>
  4085c8:	tbz	w0, #31, 40855c <ascii_strlower_n@plt+0x414c>
  4085cc:	mov	w20, w0
  4085d0:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4085d4:	ldrb	w8, [x8, #16]
  4085d8:	cbz	w8, 4085f0 <ascii_strlower_n@plt+0x41e0>
  4085dc:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4085e0:	add	x1, x1, #0xe1f
  4085e4:	add	x0, sp, #0x8
  4085e8:	bl	403de0 <sd_bus_error_has_name@plt>
  4085ec:	cbnz	w0, 40855c <ascii_strlower_n@plt+0x414c>
  4085f0:	mov	w0, wzr
  4085f4:	bl	4039b0 <log_get_max_level_realm@plt>
  4085f8:	cmp	w0, #0x3
  4085fc:	b.lt	40863c <ascii_strlower_n@plt+0x422c>  // b.tstop
  408600:	add	x0, sp, #0x8
  408604:	mov	w1, w20
  408608:	bl	403d70 <bus_error_message@plt>
  40860c:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  408610:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408614:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408618:	mov	x6, x0
  40861c:	add	x2, x2, #0xf07
  408620:	add	x4, x4, #0xed1
  408624:	add	x5, x5, #0xedd
  408628:	mov	w0, #0x3                   	// #3
  40862c:	mov	w3, #0x7f5                 	// #2037
  408630:	mov	w1, w20
  408634:	bl	4039c0 <log_internal_realm@plt>
  408638:	b	408524 <ascii_strlower_n@plt+0x4114>
  40863c:	mov	w8, wzr
  408640:	neg	w9, w20
  408644:	sub	w20, w8, w9, uxtb
  408648:	b	408560 <ascii_strlower_n@plt+0x4150>
  40864c:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  408650:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  408654:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408658:	add	x1, x1, #0x8f4
  40865c:	add	x2, x2, #0xf07
  408660:	add	x4, x4, #0xeab
  408664:	mov	w3, #0x7d4                 	// #2004
  408668:	mov	w0, wzr
  40866c:	bl	403aa0 <log_assert_failed_realm@plt>
  408670:	sub	sp, sp, #0x70
  408674:	stp	x29, x30, [sp, #48]
  408678:	stp	x24, x23, [sp, #64]
  40867c:	stp	x22, x21, [sp, #80]
  408680:	stp	x20, x19, [sp, #96]
  408684:	add	x29, sp, #0x30
  408688:	stp	xzr, xzr, [sp, #24]
  40868c:	str	xzr, [sp, #40]
  408690:	cbz	x2, 4088ac <ascii_strlower_n@plt+0x449c>
  408694:	mov	x19, x2
  408698:	mov	x22, x1
  40869c:	mov	w23, w0
  4086a0:	cmp	w0, #0x1
  4086a4:	b.le	4086b4 <ascii_strlower_n@plt+0x42a4>
  4086a8:	ldr	x0, [x22, #8]
  4086ac:	bl	404df8 <ascii_strlower_n@plt+0x9e8>
  4086b0:	tbnz	w0, #31, 4086f4 <ascii_strlower_n@plt+0x42e4>
  4086b4:	adrp	x24, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4086b8:	ldr	w21, [x24, #56]
  4086bc:	cmp	w21, #0x1
  4086c0:	b.lt	4086e8 <ascii_strlower_n@plt+0x42d8>  // b.tstop
  4086c4:	cmp	w23, #0x2
  4086c8:	b.gt	40871c <ascii_strlower_n@plt+0x430c>
  4086cc:	mov	w3, #0x3                   	// #3
  4086d0:	mov	x0, x19
  4086d4:	mov	w1, w21
  4086d8:	mov	x2, xzr
  4086dc:	mov	x4, xzr
  4086e0:	bl	4095c0 <ascii_strlower_n@plt+0x51b0>
  4086e4:	b	4086f4 <ascii_strlower_n@plt+0x42e4>
  4086e8:	mov	w1, #0x3                   	// #3
  4086ec:	mov	x0, x19
  4086f0:	bl	409be4 <ascii_strlower_n@plt+0x57d4>
  4086f4:	mov	w20, w0
  4086f8:	add	x0, sp, #0x18
  4086fc:	bl	403d80 <sd_bus_error_free@plt>
  408700:	mov	w0, w20
  408704:	ldp	x20, x19, [sp, #96]
  408708:	ldp	x22, x21, [sp, #80]
  40870c:	ldp	x24, x23, [sp, #64]
  408710:	ldp	x29, x30, [sp, #48]
  408714:	add	sp, sp, #0x70
  408718:	ret
  40871c:	ldr	x22, [x22, #16]
  408720:	mov	x0, x22
  408724:	bl	403b50 <parse_boolean@plt>
  408728:	mov	w20, w0
  40872c:	tbnz	w0, #31, 40877c <ascii_strlower_n@plt+0x436c>
  408730:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  408734:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf0>
  408738:	adrp	x3, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40873c:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408740:	adrp	x7, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408744:	add	x1, x1, #0x9a6
  408748:	add	x2, x2, #0xe87
  40874c:	add	x3, x3, #0x144
  408750:	add	x4, x4, #0xfc4
  408754:	add	x7, x7, #0xfd8
  408758:	add	x5, sp, #0x18
  40875c:	mov	x0, x19
  408760:	mov	x6, xzr
  408764:	str	w20, [sp, #8]
  408768:	str	w21, [sp]
  40876c:	bl	403dd0 <sd_bus_call_method@plt>
  408770:	tbnz	w0, #31, 4087bc <ascii_strlower_n@plt+0x43ac>
  408774:	mov	w20, wzr
  408778:	b	4086f8 <ascii_strlower_n@plt+0x42e8>
  40877c:	mov	w0, wzr
  408780:	bl	4039b0 <log_get_max_level_realm@plt>
  408784:	cmp	w0, #0x3
  408788:	b.lt	408890 <ascii_strlower_n@plt+0x4480>  // b.tstop
  40878c:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  408790:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408794:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408798:	add	x2, x2, #0xf07
  40879c:	add	x4, x4, #0xf8c
  4087a0:	add	x5, x5, #0xf9f
  4087a4:	mov	w0, #0x3                   	// #3
  4087a8:	mov	w3, #0x810                 	// #2064
  4087ac:	mov	w1, w20
  4087b0:	mov	x6, x22
  4087b4:	bl	4039c0 <log_internal_realm@plt>
  4087b8:	b	4086f4 <ascii_strlower_n@plt+0x42e4>
  4087bc:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4087c0:	mov	w21, w0
  4087c4:	add	x1, x1, #0xda9
  4087c8:	add	x0, sp, #0x18
  4087cc:	bl	403de0 <sd_bus_error_has_name@plt>
  4087d0:	cbz	w0, 408828 <ascii_strlower_n@plt+0x4418>
  4087d4:	add	x0, sp, #0x18
  4087d8:	bl	403d80 <sd_bus_error_free@plt>
  4087dc:	ldr	w8, [x24, #56]
  4087e0:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4087e4:	adrp	x2, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4087e8:	adrp	x3, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4087ec:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4087f0:	adrp	x7, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4087f4:	add	x1, x1, #0xdcb
  4087f8:	add	x2, x2, #0xde4
  4087fc:	add	x3, x3, #0xdfe
  408800:	add	x4, x4, #0xfc4
  408804:	add	x7, x7, #0xfd8
  408808:	add	x5, sp, #0x18
  40880c:	mov	x0, x19
  408810:	mov	x6, xzr
  408814:	str	w20, [sp, #8]
  408818:	str	w8, [sp]
  40881c:	bl	403dd0 <sd_bus_call_method@plt>
  408820:	tbz	w0, #31, 408774 <ascii_strlower_n@plt+0x4364>
  408824:	mov	w21, w0
  408828:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40882c:	ldrb	w8, [x8, #16]
  408830:	cbz	w8, 408848 <ascii_strlower_n@plt+0x4438>
  408834:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408838:	add	x1, x1, #0xe1f
  40883c:	add	x0, sp, #0x18
  408840:	bl	403de0 <sd_bus_error_has_name@plt>
  408844:	cbnz	w0, 408774 <ascii_strlower_n@plt+0x4364>
  408848:	mov	w0, wzr
  40884c:	bl	4039b0 <log_get_max_level_realm@plt>
  408850:	cmp	w0, #0x3
  408854:	b.lt	4088a0 <ascii_strlower_n@plt+0x4490>  // b.tstop
  408858:	add	x0, sp, #0x18
  40885c:	mov	w1, w21
  408860:	bl	403d70 <bus_error_message@plt>
  408864:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  408868:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40886c:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408870:	mov	x6, x0
  408874:	add	x2, x2, #0xf07
  408878:	add	x4, x4, #0xf8c
  40887c:	add	x5, x5, #0xfdb
  408880:	mov	w0, #0x3                   	// #3
  408884:	mov	w3, #0x82d                 	// #2093
  408888:	mov	w1, w21
  40888c:	b	4087b4 <ascii_strlower_n@plt+0x43a4>
  408890:	mov	w8, wzr
  408894:	neg	w9, w20
  408898:	sub	w20, w8, w9, uxtb
  40889c:	b	4086f8 <ascii_strlower_n@plt+0x42e8>
  4088a0:	mov	w8, wzr
  4088a4:	neg	w9, w21
  4088a8:	b	408898 <ascii_strlower_n@plt+0x4488>
  4088ac:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  4088b0:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  4088b4:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4088b8:	add	x1, x1, #0x8f4
  4088bc:	add	x2, x2, #0xf07
  4088c0:	add	x4, x4, #0xf5f
  4088c4:	mov	w3, #0x800                 	// #2048
  4088c8:	mov	w0, wzr
  4088cc:	bl	403aa0 <log_assert_failed_realm@plt>
  4088d0:	sub	sp, sp, #0x70
  4088d4:	stp	x29, x30, [sp, #48]
  4088d8:	str	x23, [sp, #64]
  4088dc:	stp	x22, x21, [sp, #80]
  4088e0:	stp	x20, x19, [sp, #96]
  4088e4:	add	x29, sp, #0x30
  4088e8:	stp	xzr, xzr, [sp, #24]
  4088ec:	str	xzr, [sp, #40]
  4088f0:	cbz	x2, 408ab8 <ascii_strlower_n@plt+0x46a8>
  4088f4:	mov	x19, x2
  4088f8:	mov	x20, x1
  4088fc:	mov	w22, w0
  408900:	cmp	w0, #0x1
  408904:	b.le	408914 <ascii_strlower_n@plt+0x4504>
  408908:	ldr	x0, [x20, #8]
  40890c:	bl	404df8 <ascii_strlower_n@plt+0x9e8>
  408910:	tbnz	w0, #31, 408950 <ascii_strlower_n@plt+0x4540>
  408914:	adrp	x23, 440000 <ascii_strlower_n@plt+0x3bbf0>
  408918:	ldr	w1, [x23, #56]
  40891c:	cmp	w1, #0x1
  408920:	b.lt	408944 <ascii_strlower_n@plt+0x4534>  // b.tstop
  408924:	cmp	w22, #0x2
  408928:	b.gt	408958 <ascii_strlower_n@plt+0x4548>
  40892c:	mov	w3, #0x4                   	// #4
  408930:	mov	x0, x19
  408934:	mov	x2, xzr
  408938:	mov	x4, xzr
  40893c:	bl	4095c0 <ascii_strlower_n@plt+0x51b0>
  408940:	b	408950 <ascii_strlower_n@plt+0x4540>
  408944:	mov	w1, #0x4                   	// #4
  408948:	mov	x0, x19
  40894c:	bl	409be4 <ascii_strlower_n@plt+0x57d4>
  408950:	mov	w21, w0
  408954:	b	4089a8 <ascii_strlower_n@plt+0x4598>
  408958:	ldr	x8, [x20, #16]
  40895c:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf0>
  408960:	adrp	x3, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408964:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  408968:	str	x8, [sp, #8]
  40896c:	adrp	x8, 419000 <ascii_strlower_n@plt+0x14bf0>
  408970:	add	x8, x8, #0x9a6
  408974:	adrp	x7, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408978:	add	x2, x2, #0xe87
  40897c:	add	x3, x3, #0x144
  408980:	add	x4, x4, #0x2e
  408984:	add	x7, x7, #0x64b
  408988:	add	x5, sp, #0x18
  40898c:	str	w1, [sp]
  408990:	mov	x0, x19
  408994:	mov	x1, x8
  408998:	mov	x6, xzr
  40899c:	bl	403dd0 <sd_bus_call_method@plt>
  4089a0:	tbnz	w0, #31, 4089cc <ascii_strlower_n@plt+0x45bc>
  4089a4:	mov	w21, wzr
  4089a8:	add	x0, sp, #0x18
  4089ac:	bl	403d80 <sd_bus_error_free@plt>
  4089b0:	mov	w0, w21
  4089b4:	ldp	x20, x19, [sp, #96]
  4089b8:	ldp	x22, x21, [sp, #80]
  4089bc:	ldr	x23, [sp, #64]
  4089c0:	ldp	x29, x30, [sp, #48]
  4089c4:	add	sp, sp, #0x70
  4089c8:	ret
  4089cc:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4089d0:	mov	w21, w0
  4089d4:	add	x1, x1, #0xda9
  4089d8:	add	x0, sp, #0x18
  4089dc:	bl	403de0 <sd_bus_error_has_name@plt>
  4089e0:	cbz	w0, 408a3c <ascii_strlower_n@plt+0x462c>
  4089e4:	add	x0, sp, #0x18
  4089e8:	bl	403d80 <sd_bus_error_free@plt>
  4089ec:	ldr	w8, [x23, #56]
  4089f0:	ldr	x9, [x20, #16]
  4089f4:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4089f8:	adrp	x2, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4089fc:	adrp	x3, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408a00:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  408a04:	adrp	x7, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408a08:	add	x1, x1, #0xdcb
  408a0c:	add	x2, x2, #0xde4
  408a10:	add	x3, x3, #0xdfe
  408a14:	add	x4, x4, #0x2e
  408a18:	add	x7, x7, #0x64b
  408a1c:	add	x5, sp, #0x18
  408a20:	mov	x0, x19
  408a24:	mov	x6, xzr
  408a28:	str	x9, [sp, #8]
  408a2c:	str	w8, [sp]
  408a30:	bl	403dd0 <sd_bus_call_method@plt>
  408a34:	tbz	w0, #31, 4089a4 <ascii_strlower_n@plt+0x4594>
  408a38:	mov	w21, w0
  408a3c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  408a40:	ldrb	w8, [x8, #16]
  408a44:	cbz	w8, 408a5c <ascii_strlower_n@plt+0x464c>
  408a48:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408a4c:	add	x1, x1, #0xe1f
  408a50:	add	x0, sp, #0x18
  408a54:	bl	403de0 <sd_bus_error_has_name@plt>
  408a58:	cbnz	w0, 4089a4 <ascii_strlower_n@plt+0x4594>
  408a5c:	mov	w0, wzr
  408a60:	bl	4039b0 <log_get_max_level_realm@plt>
  408a64:	cmp	w0, #0x3
  408a68:	b.lt	408aa8 <ascii_strlower_n@plt+0x4698>  // b.tstop
  408a6c:	add	x0, sp, #0x18
  408a70:	mov	w1, w21
  408a74:	bl	403d70 <bus_error_message@plt>
  408a78:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  408a7c:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  408a80:	adrp	x5, 41b000 <ascii_strlower_n@plt+0x16bf0>
  408a84:	mov	x6, x0
  408a88:	add	x2, x2, #0xf07
  408a8c:	add	x4, x4, #0x3b
  408a90:	add	x5, x5, #0x46
  408a94:	mov	w0, #0x3                   	// #3
  408a98:	mov	w3, #0x861                 	// #2145
  408a9c:	mov	w1, w21
  408aa0:	bl	4039c0 <log_internal_realm@plt>
  408aa4:	b	408950 <ascii_strlower_n@plt+0x4540>
  408aa8:	mov	w8, wzr
  408aac:	neg	w9, w21
  408ab0:	sub	w21, w8, w9, uxtb
  408ab4:	b	4089a8 <ascii_strlower_n@plt+0x4598>
  408ab8:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  408abc:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  408ac0:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  408ac4:	add	x1, x1, #0x8f4
  408ac8:	add	x2, x2, #0xf07
  408acc:	add	x4, x4, #0x9
  408ad0:	mov	w3, #0x838                 	// #2104
  408ad4:	mov	w0, wzr
  408ad8:	bl	403aa0 <log_assert_failed_realm@plt>
  408adc:	sub	sp, sp, #0x70
  408ae0:	stp	x29, x30, [sp, #48]
  408ae4:	str	x23, [sp, #64]
  408ae8:	stp	x22, x21, [sp, #80]
  408aec:	stp	x20, x19, [sp, #96]
  408af0:	add	x29, sp, #0x30
  408af4:	stp	xzr, xzr, [sp, #24]
  408af8:	str	xzr, [sp, #40]
  408afc:	cbz	x2, 408cc4 <ascii_strlower_n@plt+0x48b4>
  408b00:	mov	x19, x2
  408b04:	mov	x20, x1
  408b08:	mov	w22, w0
  408b0c:	cmp	w0, #0x1
  408b10:	b.le	408b20 <ascii_strlower_n@plt+0x4710>
  408b14:	ldr	x0, [x20, #8]
  408b18:	bl	404df8 <ascii_strlower_n@plt+0x9e8>
  408b1c:	tbnz	w0, #31, 408b5c <ascii_strlower_n@plt+0x474c>
  408b20:	adrp	x23, 440000 <ascii_strlower_n@plt+0x3bbf0>
  408b24:	ldr	w1, [x23, #56]
  408b28:	cmp	w1, #0x1
  408b2c:	b.lt	408b50 <ascii_strlower_n@plt+0x4740>  // b.tstop
  408b30:	cmp	w22, #0x2
  408b34:	b.gt	408b64 <ascii_strlower_n@plt+0x4754>
  408b38:	mov	w3, #0x5                   	// #5
  408b3c:	mov	x0, x19
  408b40:	mov	x2, xzr
  408b44:	mov	x4, xzr
  408b48:	bl	4095c0 <ascii_strlower_n@plt+0x51b0>
  408b4c:	b	408b5c <ascii_strlower_n@plt+0x474c>
  408b50:	mov	w1, #0x5                   	// #5
  408b54:	mov	x0, x19
  408b58:	bl	409be4 <ascii_strlower_n@plt+0x57d4>
  408b5c:	mov	w21, w0
  408b60:	b	408bb4 <ascii_strlower_n@plt+0x47a4>
  408b64:	ldr	x8, [x20, #16]
  408b68:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf0>
  408b6c:	adrp	x3, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408b70:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  408b74:	str	x8, [sp, #8]
  408b78:	adrp	x8, 419000 <ascii_strlower_n@plt+0x14bf0>
  408b7c:	add	x8, x8, #0x9a6
  408b80:	adrp	x7, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408b84:	add	x2, x2, #0xe87
  408b88:	add	x3, x3, #0x144
  408b8c:	add	x4, x4, #0x90
  408b90:	add	x7, x7, #0x64b
  408b94:	add	x5, sp, #0x18
  408b98:	str	w1, [sp]
  408b9c:	mov	x0, x19
  408ba0:	mov	x1, x8
  408ba4:	mov	x6, xzr
  408ba8:	bl	403dd0 <sd_bus_call_method@plt>
  408bac:	tbnz	w0, #31, 408bd8 <ascii_strlower_n@plt+0x47c8>
  408bb0:	mov	w21, wzr
  408bb4:	add	x0, sp, #0x18
  408bb8:	bl	403d80 <sd_bus_error_free@plt>
  408bbc:	mov	w0, w21
  408bc0:	ldp	x20, x19, [sp, #96]
  408bc4:	ldp	x22, x21, [sp, #80]
  408bc8:	ldr	x23, [sp, #64]
  408bcc:	ldp	x29, x30, [sp, #48]
  408bd0:	add	sp, sp, #0x70
  408bd4:	ret
  408bd8:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408bdc:	mov	w21, w0
  408be0:	add	x1, x1, #0xda9
  408be4:	add	x0, sp, #0x18
  408be8:	bl	403de0 <sd_bus_error_has_name@plt>
  408bec:	cbz	w0, 408c48 <ascii_strlower_n@plt+0x4838>
  408bf0:	add	x0, sp, #0x18
  408bf4:	bl	403d80 <sd_bus_error_free@plt>
  408bf8:	ldr	w8, [x23, #56]
  408bfc:	ldr	x9, [x20, #16]
  408c00:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408c04:	adrp	x2, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408c08:	adrp	x3, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408c0c:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  408c10:	adrp	x7, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408c14:	add	x1, x1, #0xdcb
  408c18:	add	x2, x2, #0xde4
  408c1c:	add	x3, x3, #0xdfe
  408c20:	add	x4, x4, #0x90
  408c24:	add	x7, x7, #0x64b
  408c28:	add	x5, sp, #0x18
  408c2c:	mov	x0, x19
  408c30:	mov	x6, xzr
  408c34:	str	x9, [sp, #8]
  408c38:	str	w8, [sp]
  408c3c:	bl	403dd0 <sd_bus_call_method@plt>
  408c40:	tbz	w0, #31, 408bb0 <ascii_strlower_n@plt+0x47a0>
  408c44:	mov	w21, w0
  408c48:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  408c4c:	ldrb	w8, [x8, #16]
  408c50:	cbz	w8, 408c68 <ascii_strlower_n@plt+0x4858>
  408c54:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408c58:	add	x1, x1, #0xe1f
  408c5c:	add	x0, sp, #0x18
  408c60:	bl	403de0 <sd_bus_error_has_name@plt>
  408c64:	cbnz	w0, 408bb0 <ascii_strlower_n@plt+0x47a0>
  408c68:	mov	w0, wzr
  408c6c:	bl	4039b0 <log_get_max_level_realm@plt>
  408c70:	cmp	w0, #0x3
  408c74:	b.lt	408cb4 <ascii_strlower_n@plt+0x48a4>  // b.tstop
  408c78:	add	x0, sp, #0x18
  408c7c:	mov	w1, w21
  408c80:	bl	403d70 <bus_error_message@plt>
  408c84:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  408c88:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  408c8c:	adrp	x5, 41b000 <ascii_strlower_n@plt+0x16bf0>
  408c90:	mov	x6, x0
  408c94:	add	x2, x2, #0xf07
  408c98:	add	x4, x4, #0xa4
  408c9c:	add	x5, x5, #0xae
  408ca0:	mov	w0, #0x3                   	// #3
  408ca4:	mov	w3, #0x895                 	// #2197
  408ca8:	mov	w1, w21
  408cac:	bl	4039c0 <log_internal_realm@plt>
  408cb0:	b	408b5c <ascii_strlower_n@plt+0x474c>
  408cb4:	mov	w8, wzr
  408cb8:	neg	w9, w21
  408cbc:	sub	w21, w8, w9, uxtb
  408cc0:	b	408bb4 <ascii_strlower_n@plt+0x47a4>
  408cc4:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  408cc8:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  408ccc:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  408cd0:	add	x1, x1, #0x8f4
  408cd4:	add	x2, x2, #0xf07
  408cd8:	add	x4, x4, #0x6c
  408cdc:	mov	w3, #0x86c                 	// #2156
  408ce0:	mov	w0, wzr
  408ce4:	bl	403aa0 <log_assert_failed_realm@plt>
  408ce8:	sub	sp, sp, #0x70
  408cec:	stp	x29, x30, [sp, #48]
  408cf0:	str	x23, [sp, #64]
  408cf4:	stp	x22, x21, [sp, #80]
  408cf8:	stp	x20, x19, [sp, #96]
  408cfc:	add	x29, sp, #0x30
  408d00:	stp	xzr, xzr, [sp, #24]
  408d04:	str	xzr, [sp, #40]
  408d08:	cbz	x2, 408ed0 <ascii_strlower_n@plt+0x4ac0>
  408d0c:	mov	x19, x2
  408d10:	mov	x20, x1
  408d14:	mov	w22, w0
  408d18:	cmp	w0, #0x1
  408d1c:	b.le	408d2c <ascii_strlower_n@plt+0x491c>
  408d20:	ldr	x0, [x20, #8]
  408d24:	bl	404df8 <ascii_strlower_n@plt+0x9e8>
  408d28:	tbnz	w0, #31, 408d68 <ascii_strlower_n@plt+0x4958>
  408d2c:	adrp	x23, 440000 <ascii_strlower_n@plt+0x3bbf0>
  408d30:	ldr	w1, [x23, #56]
  408d34:	cmp	w1, #0x1
  408d38:	b.lt	408d5c <ascii_strlower_n@plt+0x494c>  // b.tstop
  408d3c:	cmp	w22, #0x2
  408d40:	b.gt	408d70 <ascii_strlower_n@plt+0x4960>
  408d44:	mov	w3, #0x6                   	// #6
  408d48:	mov	x0, x19
  408d4c:	mov	x2, xzr
  408d50:	mov	x4, xzr
  408d54:	bl	4095c0 <ascii_strlower_n@plt+0x51b0>
  408d58:	b	408d68 <ascii_strlower_n@plt+0x4958>
  408d5c:	mov	w1, #0x6                   	// #6
  408d60:	mov	x0, x19
  408d64:	bl	409be4 <ascii_strlower_n@plt+0x57d4>
  408d68:	mov	w21, w0
  408d6c:	b	408dc0 <ascii_strlower_n@plt+0x49b0>
  408d70:	ldr	x8, [x20, #16]
  408d74:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf0>
  408d78:	adrp	x3, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408d7c:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  408d80:	str	x8, [sp, #8]
  408d84:	adrp	x8, 419000 <ascii_strlower_n@plt+0x14bf0>
  408d88:	add	x8, x8, #0x9a6
  408d8c:	adrp	x7, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408d90:	add	x2, x2, #0xe87
  408d94:	add	x3, x3, #0x144
  408d98:	add	x4, x4, #0x107
  408d9c:	add	x7, x7, #0x64b
  408da0:	add	x5, sp, #0x18
  408da4:	str	w1, [sp]
  408da8:	mov	x0, x19
  408dac:	mov	x1, x8
  408db0:	mov	x6, xzr
  408db4:	bl	403dd0 <sd_bus_call_method@plt>
  408db8:	tbnz	w0, #31, 408de4 <ascii_strlower_n@plt+0x49d4>
  408dbc:	mov	w21, wzr
  408dc0:	add	x0, sp, #0x18
  408dc4:	bl	403d80 <sd_bus_error_free@plt>
  408dc8:	mov	w0, w21
  408dcc:	ldp	x20, x19, [sp, #96]
  408dd0:	ldp	x22, x21, [sp, #80]
  408dd4:	ldr	x23, [sp, #64]
  408dd8:	ldp	x29, x30, [sp, #48]
  408ddc:	add	sp, sp, #0x70
  408de0:	ret
  408de4:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408de8:	mov	w21, w0
  408dec:	add	x1, x1, #0xda9
  408df0:	add	x0, sp, #0x18
  408df4:	bl	403de0 <sd_bus_error_has_name@plt>
  408df8:	cbz	w0, 408e54 <ascii_strlower_n@plt+0x4a44>
  408dfc:	add	x0, sp, #0x18
  408e00:	bl	403d80 <sd_bus_error_free@plt>
  408e04:	ldr	w8, [x23, #56]
  408e08:	ldr	x9, [x20, #16]
  408e0c:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408e10:	adrp	x2, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408e14:	adrp	x3, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408e18:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  408e1c:	adrp	x7, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408e20:	add	x1, x1, #0xdcb
  408e24:	add	x2, x2, #0xde4
  408e28:	add	x3, x3, #0xdfe
  408e2c:	add	x4, x4, #0x107
  408e30:	add	x7, x7, #0x64b
  408e34:	add	x5, sp, #0x18
  408e38:	mov	x0, x19
  408e3c:	mov	x6, xzr
  408e40:	str	x9, [sp, #8]
  408e44:	str	w8, [sp]
  408e48:	bl	403dd0 <sd_bus_call_method@plt>
  408e4c:	tbz	w0, #31, 408dbc <ascii_strlower_n@plt+0x49ac>
  408e50:	mov	w21, w0
  408e54:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  408e58:	ldrb	w8, [x8, #16]
  408e5c:	cbz	w8, 408e74 <ascii_strlower_n@plt+0x4a64>
  408e60:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408e64:	add	x1, x1, #0xe1f
  408e68:	add	x0, sp, #0x18
  408e6c:	bl	403de0 <sd_bus_error_has_name@plt>
  408e70:	cbnz	w0, 408dbc <ascii_strlower_n@plt+0x49ac>
  408e74:	mov	w0, wzr
  408e78:	bl	4039b0 <log_get_max_level_realm@plt>
  408e7c:	cmp	w0, #0x3
  408e80:	b.lt	408ec0 <ascii_strlower_n@plt+0x4ab0>  // b.tstop
  408e84:	add	x0, sp, #0x18
  408e88:	mov	w1, w21
  408e8c:	bl	403d70 <bus_error_message@plt>
  408e90:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  408e94:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  408e98:	adrp	x5, 41b000 <ascii_strlower_n@plt+0x16bf0>
  408e9c:	mov	x6, x0
  408ea0:	add	x2, x2, #0xf07
  408ea4:	add	x4, x4, #0x119
  408ea8:	add	x5, x5, #0x12b
  408eac:	mov	w0, #0x3                   	// #3
  408eb0:	mov	w3, #0x8c9                 	// #2249
  408eb4:	mov	w1, w21
  408eb8:	bl	4039c0 <log_internal_realm@plt>
  408ebc:	b	408d68 <ascii_strlower_n@plt+0x4958>
  408ec0:	mov	w8, wzr
  408ec4:	neg	w9, w21
  408ec8:	sub	w21, w8, w9, uxtb
  408ecc:	b	408dc0 <ascii_strlower_n@plt+0x49b0>
  408ed0:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  408ed4:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  408ed8:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  408edc:	add	x1, x1, #0x8f4
  408ee0:	add	x2, x2, #0xf07
  408ee4:	add	x4, x4, #0xdb
  408ee8:	mov	w3, #0x8a0                 	// #2208
  408eec:	mov	w0, wzr
  408ef0:	bl	403aa0 <log_assert_failed_realm@plt>
  408ef4:	sub	sp, sp, #0x70
  408ef8:	stp	x29, x30, [sp, #48]
  408efc:	str	x23, [sp, #64]
  408f00:	stp	x22, x21, [sp, #80]
  408f04:	stp	x20, x19, [sp, #96]
  408f08:	add	x29, sp, #0x30
  408f0c:	stp	xzr, xzr, [sp, #24]
  408f10:	str	xzr, [sp, #40]
  408f14:	cbz	x2, 4090dc <ascii_strlower_n@plt+0x4ccc>
  408f18:	mov	x19, x2
  408f1c:	mov	x20, x1
  408f20:	mov	w22, w0
  408f24:	cmp	w0, #0x1
  408f28:	b.le	408f38 <ascii_strlower_n@plt+0x4b28>
  408f2c:	ldr	x0, [x20, #8]
  408f30:	bl	404df8 <ascii_strlower_n@plt+0x9e8>
  408f34:	tbnz	w0, #31, 408f74 <ascii_strlower_n@plt+0x4b64>
  408f38:	adrp	x23, 440000 <ascii_strlower_n@plt+0x3bbf0>
  408f3c:	ldr	w1, [x23, #56]
  408f40:	cmp	w1, #0x1
  408f44:	b.lt	408f68 <ascii_strlower_n@plt+0x4b58>  // b.tstop
  408f48:	cmp	w22, #0x2
  408f4c:	b.gt	408f7c <ascii_strlower_n@plt+0x4b6c>
  408f50:	mov	w3, #0x7                   	// #7
  408f54:	mov	x0, x19
  408f58:	mov	x2, xzr
  408f5c:	mov	x4, xzr
  408f60:	bl	4095c0 <ascii_strlower_n@plt+0x51b0>
  408f64:	b	408f74 <ascii_strlower_n@plt+0x4b64>
  408f68:	mov	w1, #0x7                   	// #7
  408f6c:	mov	x0, x19
  408f70:	bl	409be4 <ascii_strlower_n@plt+0x57d4>
  408f74:	mov	w21, w0
  408f78:	b	408fcc <ascii_strlower_n@plt+0x4bbc>
  408f7c:	ldr	x8, [x20, #16]
  408f80:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf0>
  408f84:	adrp	x3, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408f88:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  408f8c:	str	x8, [sp, #8]
  408f90:	adrp	x8, 419000 <ascii_strlower_n@plt+0x14bf0>
  408f94:	add	x8, x8, #0x9a6
  408f98:	adrp	x7, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408f9c:	add	x2, x2, #0xe87
  408fa0:	add	x3, x3, #0x144
  408fa4:	add	x4, x4, #0x17c
  408fa8:	add	x7, x7, #0x64b
  408fac:	add	x5, sp, #0x18
  408fb0:	str	w1, [sp]
  408fb4:	mov	x0, x19
  408fb8:	mov	x1, x8
  408fbc:	mov	x6, xzr
  408fc0:	bl	403dd0 <sd_bus_call_method@plt>
  408fc4:	tbnz	w0, #31, 408ff0 <ascii_strlower_n@plt+0x4be0>
  408fc8:	mov	w21, wzr
  408fcc:	add	x0, sp, #0x18
  408fd0:	bl	403d80 <sd_bus_error_free@plt>
  408fd4:	mov	w0, w21
  408fd8:	ldp	x20, x19, [sp, #96]
  408fdc:	ldp	x22, x21, [sp, #80]
  408fe0:	ldr	x23, [sp, #64]
  408fe4:	ldp	x29, x30, [sp, #48]
  408fe8:	add	sp, sp, #0x70
  408fec:	ret
  408ff0:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  408ff4:	mov	w21, w0
  408ff8:	add	x1, x1, #0xda9
  408ffc:	add	x0, sp, #0x18
  409000:	bl	403de0 <sd_bus_error_has_name@plt>
  409004:	cbz	w0, 409060 <ascii_strlower_n@plt+0x4c50>
  409008:	add	x0, sp, #0x18
  40900c:	bl	403d80 <sd_bus_error_free@plt>
  409010:	ldr	w8, [x23, #56]
  409014:	ldr	x9, [x20, #16]
  409018:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40901c:	adrp	x2, 41a000 <ascii_strlower_n@plt+0x15bf0>
  409020:	adrp	x3, 41a000 <ascii_strlower_n@plt+0x15bf0>
  409024:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  409028:	adrp	x7, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40902c:	add	x1, x1, #0xdcb
  409030:	add	x2, x2, #0xde4
  409034:	add	x3, x3, #0xdfe
  409038:	add	x4, x4, #0x17c
  40903c:	add	x7, x7, #0x64b
  409040:	add	x5, sp, #0x18
  409044:	mov	x0, x19
  409048:	mov	x6, xzr
  40904c:	str	x9, [sp, #8]
  409050:	str	w8, [sp]
  409054:	bl	403dd0 <sd_bus_call_method@plt>
  409058:	tbz	w0, #31, 408fc8 <ascii_strlower_n@plt+0x4bb8>
  40905c:	mov	w21, w0
  409060:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  409064:	ldrb	w8, [x8, #16]
  409068:	cbz	w8, 409080 <ascii_strlower_n@plt+0x4c70>
  40906c:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  409070:	add	x1, x1, #0xe1f
  409074:	add	x0, sp, #0x18
  409078:	bl	403de0 <sd_bus_error_has_name@plt>
  40907c:	cbnz	w0, 408fc8 <ascii_strlower_n@plt+0x4bb8>
  409080:	mov	w0, wzr
  409084:	bl	4039b0 <log_get_max_level_realm@plt>
  409088:	cmp	w0, #0x3
  40908c:	b.lt	4090cc <ascii_strlower_n@plt+0x4cbc>  // b.tstop
  409090:	add	x0, sp, #0x18
  409094:	mov	w1, w21
  409098:	bl	403d70 <bus_error_message@plt>
  40909c:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  4090a0:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4090a4:	adrp	x5, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4090a8:	mov	x6, x0
  4090ac:	add	x2, x2, #0xf07
  4090b0:	add	x4, x4, #0x18a
  4090b4:	add	x5, x5, #0x196
  4090b8:	mov	w0, #0x3                   	// #3
  4090bc:	mov	w3, #0x8fd                 	// #2301
  4090c0:	mov	w1, w21
  4090c4:	bl	4039c0 <log_internal_realm@plt>
  4090c8:	b	408f74 <ascii_strlower_n@plt+0x4b64>
  4090cc:	mov	w8, wzr
  4090d0:	neg	w9, w21
  4090d4:	sub	w21, w8, w9, uxtb
  4090d8:	b	408fcc <ascii_strlower_n@plt+0x4bbc>
  4090dc:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  4090e0:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  4090e4:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4090e8:	add	x1, x1, #0x8f4
  4090ec:	add	x2, x2, #0xf07
  4090f0:	add	x4, x4, #0x156
  4090f4:	mov	w3, #0x8d4                 	// #2260
  4090f8:	mov	w0, wzr
  4090fc:	bl	403aa0 <log_assert_failed_realm@plt>
  409100:	sub	sp, sp, #0x70
  409104:	stp	x29, x30, [sp, #48]
  409108:	str	x23, [sp, #64]
  40910c:	stp	x22, x21, [sp, #80]
  409110:	stp	x20, x19, [sp, #96]
  409114:	add	x29, sp, #0x30
  409118:	stp	xzr, xzr, [sp, #24]
  40911c:	str	xzr, [sp, #40]
  409120:	cbz	x2, 40939c <ascii_strlower_n@plt+0x4f8c>
  409124:	mov	x19, x2
  409128:	mov	x21, x1
  40912c:	mov	w22, w0
  409130:	cmp	w0, #0x1
  409134:	b.le	409144 <ascii_strlower_n@plt+0x4d34>
  409138:	ldr	x0, [x21, #8]
  40913c:	bl	404df8 <ascii_strlower_n@plt+0x9e8>
  409140:	tbnz	w0, #31, 409180 <ascii_strlower_n@plt+0x4d70>
  409144:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  409148:	ldr	w1, [x8, #56]
  40914c:	cmp	w1, #0x1
  409150:	b.lt	409174 <ascii_strlower_n@plt+0x4d64>  // b.tstop
  409154:	cmp	w22, #0x2
  409158:	b.gt	4091a8 <ascii_strlower_n@plt+0x4d98>
  40915c:	mov	w3, #0x8                   	// #8
  409160:	mov	x0, x19
  409164:	mov	x2, xzr
  409168:	mov	x4, xzr
  40916c:	bl	4095c0 <ascii_strlower_n@plt+0x51b0>
  409170:	b	409180 <ascii_strlower_n@plt+0x4d70>
  409174:	mov	w1, #0x8                   	// #8
  409178:	mov	x0, x19
  40917c:	bl	409be4 <ascii_strlower_n@plt+0x57d4>
  409180:	mov	w20, w0
  409184:	add	x0, sp, #0x18
  409188:	bl	403d80 <sd_bus_error_free@plt>
  40918c:	mov	w0, w20
  409190:	ldp	x20, x19, [sp, #96]
  409194:	ldp	x22, x21, [sp, #80]
  409198:	ldr	x23, [sp, #64]
  40919c:	ldp	x29, x30, [sp, #48]
  4091a0:	add	sp, sp, #0x70
  4091a4:	ret
  4091a8:	add	x20, x21, #0x10
  4091ac:	adrp	x8, 417000 <ascii_strlower_n@plt+0x12bf0>
  4091b0:	add	x8, x8, #0xff4
  4091b4:	add	x1, sp, #0x8
  4091b8:	mov	x0, x20
  4091bc:	stp	x8, xzr, [sp, #8]
  4091c0:	bl	403df0 <strv_equal@plt>
  4091c4:	mov	w21, w0
  4091c8:	tbnz	w0, #0, 409208 <ascii_strlower_n@plt+0x4df8>
  4091cc:	ldr	x0, [x20]
  4091d0:	cbz	x0, 409208 <ascii_strlower_n@plt+0x4df8>
  4091d4:	mov	x23, x20
  4091d8:	mov	x1, xzr
  4091dc:	mov	w2, wzr
  4091e0:	mov	x3, xzr
  4091e4:	bl	403e00 <dns_name_concat@plt>
  4091e8:	cmp	w0, #0x0
  4091ec:	csinc	w8, w0, wzr, lt  // lt = tstop
  4091f0:	cmn	w0, #0x16
  4091f4:	csel	w22, wzr, w8, eq  // eq = none
  4091f8:	tbnz	w22, #31, 4092fc <ascii_strlower_n@plt+0x4eec>
  4091fc:	cbz	w22, 40933c <ascii_strlower_n@plt+0x4f2c>
  409200:	ldr	x0, [x23, #8]!
  409204:	cbnz	x0, 4091d8 <ascii_strlower_n@plt+0x4dc8>
  409208:	tst	w21, #0x1
  40920c:	csel	x21, xzr, x20, ne  // ne = any
  409210:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf0>
  409214:	adrp	x3, 419000 <ascii_strlower_n@plt+0x14bf0>
  409218:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40921c:	add	x2, x2, #0x9a6
  409220:	add	x3, x3, #0xe87
  409224:	add	x4, x4, #0x144
  409228:	add	x5, sp, #0x18
  40922c:	mov	x0, x19
  409230:	mov	x1, x21
  409234:	bl	40d244 <ascii_strlower_n@plt+0x8e34>
  409238:	tbnz	w0, #31, 409244 <ascii_strlower_n@plt+0x4e34>
  40923c:	mov	w20, wzr
  409240:	b	409184 <ascii_strlower_n@plt+0x4d74>
  409244:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  409248:	mov	w20, w0
  40924c:	add	x1, x1, #0xda9
  409250:	add	x0, sp, #0x18
  409254:	bl	403de0 <sd_bus_error_has_name@plt>
  409258:	cbz	w0, 409294 <ascii_strlower_n@plt+0x4e84>
  40925c:	add	x0, sp, #0x18
  409260:	bl	403d80 <sd_bus_error_free@plt>
  409264:	adrp	x2, 41a000 <ascii_strlower_n@plt+0x15bf0>
  409268:	adrp	x3, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40926c:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  409270:	add	x2, x2, #0xdcb
  409274:	add	x3, x3, #0xde4
  409278:	add	x4, x4, #0xdfe
  40927c:	add	x5, sp, #0x18
  409280:	mov	x0, x19
  409284:	mov	x1, x21
  409288:	bl	40d244 <ascii_strlower_n@plt+0x8e34>
  40928c:	tbz	w0, #31, 40923c <ascii_strlower_n@plt+0x4e2c>
  409290:	mov	w20, w0
  409294:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  409298:	ldrb	w8, [x8, #16]
  40929c:	cbz	w8, 4092b4 <ascii_strlower_n@plt+0x4ea4>
  4092a0:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4092a4:	add	x1, x1, #0xe1f
  4092a8:	add	x0, sp, #0x18
  4092ac:	bl	403de0 <sd_bus_error_has_name@plt>
  4092b0:	cbnz	w0, 40923c <ascii_strlower_n@plt+0x4e2c>
  4092b4:	mov	w0, wzr
  4092b8:	bl	4039b0 <log_get_max_level_realm@plt>
  4092bc:	cmp	w0, #0x3
  4092c0:	b.lt	409380 <ascii_strlower_n@plt+0x4f70>  // b.tstop
  4092c4:	add	x0, sp, #0x18
  4092c8:	mov	w1, w20
  4092cc:	bl	403d70 <bus_error_message@plt>
  4092d0:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  4092d4:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4092d8:	adrp	x5, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4092dc:	mov	x6, x0
  4092e0:	add	x2, x2, #0xf07
  4092e4:	add	x4, x4, #0x1e0
  4092e8:	add	x5, x5, #0x1e9
  4092ec:	mov	w0, #0x3                   	// #3
  4092f0:	mov	w3, #0x953                 	// #2387
  4092f4:	mov	w1, w20
  4092f8:	b	409334 <ascii_strlower_n@plt+0x4f24>
  4092fc:	mov	w0, wzr
  409300:	bl	4039b0 <log_get_max_level_realm@plt>
  409304:	cmp	w0, #0x3
  409308:	b.lt	40938c <ascii_strlower_n@plt+0x4f7c>  // b.tstop
  40930c:	ldr	x6, [x23]
  409310:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  409314:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  409318:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40931c:	add	x2, x2, #0xf07
  409320:	add	x4, x4, #0x1e0
  409324:	add	x5, x5, #0xf1f
  409328:	mov	w0, #0x3                   	// #3
  40932c:	mov	w3, #0x939                 	// #2361
  409330:	mov	w1, w22
  409334:	bl	4039c0 <log_internal_realm@plt>
  409338:	b	409180 <ascii_strlower_n@plt+0x4d70>
  40933c:	mov	w0, wzr
  409340:	bl	4039b0 <log_get_max_level_realm@plt>
  409344:	cmp	w0, #0x3
  409348:	b.lt	409378 <ascii_strlower_n@plt+0x4f68>  // b.tstop
  40934c:	ldr	x6, [x23]
  409350:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  409354:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  409358:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40935c:	add	x2, x2, #0xf07
  409360:	add	x4, x4, #0x1e0
  409364:	add	x5, x5, #0xf4a
  409368:	mov	w0, #0x3                   	// #3
  40936c:	mov	w3, #0x93b                 	// #2363
  409370:	mov	w1, wzr
  409374:	bl	4039c0 <log_internal_realm@plt>
  409378:	mov	w20, #0xffffffea            	// #-22
  40937c:	b	409184 <ascii_strlower_n@plt+0x4d74>
  409380:	mov	w8, wzr
  409384:	neg	w9, w20
  409388:	b	409394 <ascii_strlower_n@plt+0x4f84>
  40938c:	mov	w8, wzr
  409390:	neg	w9, w22
  409394:	sub	w20, w8, w9, uxtb
  409398:	b	409184 <ascii_strlower_n@plt+0x4d74>
  40939c:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  4093a0:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  4093a4:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4093a8:	add	x1, x1, #0x8f4
  4093ac:	add	x2, x2, #0xf07
  4093b0:	add	x4, x4, #0x1bd
  4093b4:	mov	w3, #0x923                 	// #2339
  4093b8:	mov	w0, wzr
  4093bc:	bl	403aa0 <log_assert_failed_realm@plt>
  4093c0:	sub	sp, sp, #0x50
  4093c4:	stp	x29, x30, [sp, #32]
  4093c8:	str	x21, [sp, #48]
  4093cc:	stp	x20, x19, [sp, #64]
  4093d0:	add	x29, sp, #0x20
  4093d4:	stp	xzr, xzr, [sp, #8]
  4093d8:	str	xzr, [sp, #24]
  4093dc:	cbz	x2, 40959c <ascii_strlower_n@plt+0x518c>
  4093e0:	mov	x19, x2
  4093e4:	cmp	w0, #0x1
  4093e8:	b.le	4093f8 <ascii_strlower_n@plt+0x4fe8>
  4093ec:	ldr	x0, [x1, #8]
  4093f0:	bl	404df8 <ascii_strlower_n@plt+0x9e8>
  4093f4:	tbnz	w0, #31, 40948c <ascii_strlower_n@plt+0x507c>
  4093f8:	adrp	x21, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4093fc:	ldr	w8, [x21, #56]
  409400:	cmp	w8, #0x1
  409404:	b.lt	409450 <ascii_strlower_n@plt+0x5040>  // b.tstop
  409408:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40940c:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf0>
  409410:	adrp	x3, 41a000 <ascii_strlower_n@plt+0x15bf0>
  409414:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  409418:	adrp	x7, 419000 <ascii_strlower_n@plt+0x14bf0>
  40941c:	add	x1, x1, #0x9a6
  409420:	add	x2, x2, #0xe87
  409424:	add	x3, x3, #0x144
  409428:	add	x4, x4, #0x298
  40942c:	add	x7, x7, #0xc1b
  409430:	add	x5, sp, #0x8
  409434:	mov	x0, x19
  409438:	mov	x6, xzr
  40943c:	str	w8, [sp]
  409440:	bl	403dd0 <sd_bus_call_method@plt>
  409444:	tbnz	w0, #31, 409494 <ascii_strlower_n@plt+0x5084>
  409448:	mov	w20, wzr
  40944c:	b	40956c <ascii_strlower_n@plt+0x515c>
  409450:	mov	w0, wzr
  409454:	bl	4039b0 <log_get_max_level_realm@plt>
  409458:	cmp	w0, #0x3
  40945c:	b.lt	409568 <ascii_strlower_n@plt+0x5158>  // b.tstop
  409460:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  409464:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  409468:	adrp	x5, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40946c:	mov	w1, #0x16                  	// #22
  409470:	add	x2, x2, #0xf07
  409474:	add	x4, x4, #0x26a
  409478:	add	x5, x5, #0x27b
  40947c:	mov	w0, #0x3                   	// #3
  409480:	movk	w1, #0x4000, lsl #16
  409484:	mov	w3, #0x967                 	// #2407
  409488:	bl	4039c0 <log_internal_realm@plt>
  40948c:	mov	w20, w0
  409490:	b	40956c <ascii_strlower_n@plt+0x515c>
  409494:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  409498:	mov	w20, w0
  40949c:	add	x1, x1, #0xda9
  4094a0:	add	x0, sp, #0x8
  4094a4:	bl	403de0 <sd_bus_error_has_name@plt>
  4094a8:	cbz	w0, 4094fc <ascii_strlower_n@plt+0x50ec>
  4094ac:	add	x0, sp, #0x8
  4094b0:	bl	403d80 <sd_bus_error_free@plt>
  4094b4:	ldr	w8, [x21, #56]
  4094b8:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4094bc:	adrp	x2, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4094c0:	adrp	x3, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4094c4:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4094c8:	adrp	x7, 419000 <ascii_strlower_n@plt+0x14bf0>
  4094cc:	add	x1, x1, #0xdcb
  4094d0:	add	x2, x2, #0xde4
  4094d4:	add	x3, x3, #0xdfe
  4094d8:	add	x4, x4, #0x2a3
  4094dc:	add	x7, x7, #0xc1b
  4094e0:	add	x5, sp, #0x8
  4094e4:	mov	x0, x19
  4094e8:	mov	x6, xzr
  4094ec:	str	w8, [sp]
  4094f0:	bl	403dd0 <sd_bus_call_method@plt>
  4094f4:	tbz	w0, #31, 409448 <ascii_strlower_n@plt+0x5038>
  4094f8:	mov	w20, w0
  4094fc:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  409500:	ldrb	w8, [x8, #16]
  409504:	cbz	w8, 40951c <ascii_strlower_n@plt+0x510c>
  409508:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40950c:	add	x1, x1, #0xe1f
  409510:	add	x0, sp, #0x8
  409514:	bl	403de0 <sd_bus_error_has_name@plt>
  409518:	cbnz	w0, 409448 <ascii_strlower_n@plt+0x5038>
  40951c:	mov	w0, wzr
  409520:	bl	4039b0 <log_get_max_level_realm@plt>
  409524:	cmp	w0, #0x3
  409528:	b.lt	40958c <ascii_strlower_n@plt+0x517c>  // b.tstop
  40952c:	add	x0, sp, #0x8
  409530:	mov	w1, w20
  409534:	bl	403d70 <bus_error_message@plt>
  409538:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40953c:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  409540:	adrp	x5, 41b000 <ascii_strlower_n@plt+0x16bf0>
  409544:	mov	x6, x0
  409548:	add	x2, x2, #0xf07
  40954c:	add	x4, x4, #0x26a
  409550:	add	x5, x5, #0x2b1
  409554:	mov	w0, #0x3                   	// #3
  409558:	mov	w3, #0x984                 	// #2436
  40955c:	mov	w1, w20
  409560:	bl	4039c0 <log_internal_realm@plt>
  409564:	b	40948c <ascii_strlower_n@plt+0x507c>
  409568:	mov	w20, #0xffffffea            	// #-22
  40956c:	add	x0, sp, #0x8
  409570:	bl	403d80 <sd_bus_error_free@plt>
  409574:	mov	w0, w20
  409578:	ldp	x20, x19, [sp, #64]
  40957c:	ldr	x21, [sp, #48]
  409580:	ldp	x29, x30, [sp, #32]
  409584:	add	sp, sp, #0x50
  409588:	ret
  40958c:	mov	w8, wzr
  409590:	neg	w9, w20
  409594:	sub	w20, w8, w9, uxtb
  409598:	b	40956c <ascii_strlower_n@plt+0x515c>
  40959c:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  4095a0:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  4095a4:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4095a8:	add	x1, x1, #0x8f4
  4095ac:	add	x2, x2, #0xf07
  4095b0:	add	x4, x4, #0x23f
  4095b4:	mov	w3, #0x95e                 	// #2398
  4095b8:	mov	w0, wzr
  4095bc:	bl	403aa0 <log_assert_failed_realm@plt>
  4095c0:	sub	sp, sp, #0xe0
  4095c4:	stp	x29, x30, [sp, #160]
  4095c8:	add	x29, sp, #0xa0
  4095cc:	movi	v0.2d, #0x0
  4095d0:	str	x23, [sp, #176]
  4095d4:	stp	x22, x21, [sp, #192]
  4095d8:	stp	x20, x19, [sp, #208]
  4095dc:	stp	xzr, xzr, [x29, #-24]
  4095e0:	stur	xzr, [x29, #-8]
  4095e4:	str	xzr, [x29, #24]
  4095e8:	stp	xzr, xzr, [sp, #32]
  4095ec:	stp	xzr, xzr, [sp, #8]
  4095f0:	stp	q0, q0, [sp, #96]
  4095f4:	stp	q0, q0, [sp, #64]
  4095f8:	str	q0, [sp, #48]
  4095fc:	strb	wzr, [sp, #24]
  409600:	cbz	x0, 409ba0 <ascii_strlower_n@plt+0x5790>
  409604:	mov	w20, w1
  409608:	cmp	w1, #0x0
  40960c:	b.le	409bc0 <ascii_strlower_n@plt+0x57b0>
  409610:	mov	x19, x4
  409614:	mov	w22, w3
  409618:	mov	x21, x2
  40961c:	mov	x23, x0
  409620:	cbnz	x2, 40963c <ascii_strlower_n@plt+0x522c>
  409624:	add	x1, sp, #0x8
  409628:	mov	w0, w20
  40962c:	mov	w2, wzr
  409630:	add	x21, sp, #0x8
  409634:	bl	403e10 <format_ifname_full@plt>
  409638:	cbz	x0, 409710 <ascii_strlower_n@plt+0x5300>
  40963c:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  409640:	add	x1, x1, #0x984
  409644:	add	x0, sp, #0x28
  409648:	mov	w2, w20
  40964c:	bl	403e20 <asprintf@plt>
  409650:	tbnz	w0, #31, 4096d4 <ascii_strlower_n@plt+0x52c4>
  409654:	ldr	x1, [sp, #40]
  409658:	adrp	x0, 419000 <ascii_strlower_n@plt+0x14bf0>
  40965c:	add	x0, x0, #0x987
  409660:	add	x2, sp, #0x20
  409664:	bl	403e30 <sd_bus_path_encode@plt>
  409668:	tbnz	w0, #31, 4096ec <ascii_strlower_n@plt+0x52dc>
  40966c:	ldr	x2, [sp, #32]
  409670:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  409674:	adrp	x3, 41e000 <ascii_strlower_n@plt+0x19bf0>
  409678:	add	x1, x1, #0x9a6
  40967c:	add	x3, x3, #0x3d0
  409680:	sub	x5, x29, #0x18
  409684:	add	x6, x29, #0x18
  409688:	add	x7, sp, #0x30
  40968c:	mov	w4, #0x2                   	// #2
  409690:	mov	x0, x23
  409694:	bl	403e40 <bus_map_all_properties@plt>
  409698:	tbnz	w0, #31, 409758 <ascii_strlower_n@plt+0x5348>
  40969c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  4096a0:	ldr	w0, [x8, #92]
  4096a4:	bl	403e50 <pager_open@plt>
  4096a8:	sub	w8, w22, #0x1
  4096ac:	cmp	w8, #0x7
  4096b0:	b.hi	4097f4 <ascii_strlower_n@plt+0x53e4>  // b.pmore
  4096b4:	adrp	x9, 41d000 <ascii_strlower_n@plt+0x18bf0>
  4096b8:	add	x9, x9, #0xb75
  4096bc:	adr	x10, 4096cc <ascii_strlower_n@plt+0x52bc>
  4096c0:	ldrb	w11, [x9, x8]
  4096c4:	add	x10, x10, x11, lsl #2
  4096c8:	br	x10
  4096cc:	ldr	x2, [sp, #96]
  4096d0:	b	4099cc <ascii_strlower_n@plt+0x55bc>
  4096d4:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  4096d8:	adrp	x3, 419000 <ascii_strlower_n@plt+0x14bf0>
  4096dc:	add	x1, x1, #0xf07
  4096e0:	add	x3, x3, #0x949
  4096e4:	mov	w2, #0x579                 	// #1401
  4096e8:	b	409700 <ascii_strlower_n@plt+0x52f0>
  4096ec:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  4096f0:	adrp	x3, 419000 <ascii_strlower_n@plt+0x14bf0>
  4096f4:	add	x1, x1, #0xf07
  4096f8:	add	x3, x3, #0x949
  4096fc:	mov	w2, #0x57d                 	// #1405
  409700:	mov	w0, wzr
  409704:	bl	403a20 <log_oom_internal@plt>
  409708:	mov	w20, w0
  40970c:	b	4099dc <ascii_strlower_n@plt+0x55cc>
  409710:	bl	403e60 <__errno_location@plt>
  409714:	ldr	w19, [x0]
  409718:	mov	w0, wzr
  40971c:	bl	4039b0 <log_get_max_level_realm@plt>
  409720:	cmp	w0, #0x3
  409724:	b.lt	4097ac <ascii_strlower_n@plt+0x539c>  // b.tstop
  409728:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40972c:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  409730:	adrp	x5, 419000 <ascii_strlower_n@plt+0x14bf0>
  409734:	add	x2, x2, #0xf07
  409738:	add	x4, x4, #0x949
  40973c:	add	x5, x5, #0x958
  409740:	mov	w0, #0x3                   	// #3
  409744:	mov	w3, #0x573                 	// #1395
  409748:	mov	w1, w19
  40974c:	mov	w6, w20
  409750:	bl	4039c0 <log_internal_realm@plt>
  409754:	b	409708 <ascii_strlower_n@plt+0x52f8>
  409758:	mov	w23, w0
  40975c:	mov	w0, wzr
  409760:	bl	4039b0 <log_get_max_level_realm@plt>
  409764:	cmp	w0, #0x3
  409768:	b.lt	4097bc <ascii_strlower_n@plt+0x53ac>  // b.tstop
  40976c:	sub	x0, x29, #0x18
  409770:	mov	w1, w23
  409774:	bl	403d70 <bus_error_message@plt>
  409778:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40977c:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  409780:	adrp	x5, 419000 <ascii_strlower_n@plt+0x14bf0>
  409784:	mov	x7, x0
  409788:	add	x2, x2, #0xf07
  40978c:	add	x4, x4, #0x949
  409790:	add	x5, x5, #0x9bf
  409794:	mov	w0, #0x3                   	// #3
  409798:	mov	w3, #0x588                 	// #1416
  40979c:	mov	w1, w23
  4097a0:	mov	w6, w20
  4097a4:	bl	4039c0 <log_internal_realm@plt>
  4097a8:	b	409708 <ascii_strlower_n@plt+0x52f8>
  4097ac:	cmp	w19, #0x0
  4097b0:	mov	w8, wzr
  4097b4:	cneg	w9, w19, mi  // mi = first
  4097b8:	b	4097c4 <ascii_strlower_n@plt+0x53b4>
  4097bc:	mov	w8, wzr
  4097c0:	neg	w9, w23
  4097c4:	sub	w20, w8, w9, uxtb
  4097c8:	b	4099dc <ascii_strlower_n@plt+0x55cc>
  4097cc:	bl	403b80 <colors_enabled@plt>
  4097d0:	adrp	x22, 417000 <ascii_strlower_n@plt+0x12bf0>
  4097d4:	adrp	x8, 418000 <ascii_strlower_n@plt+0x13bf0>
  4097d8:	add	x22, x22, #0xff4
  4097dc:	add	x8, x8, #0xcf8
  4097e0:	tst	w0, #0x1
  4097e4:	csel	x19, x8, x22, ne  // ne = any
  4097e8:	bl	403b80 <colors_enabled@plt>
  4097ec:	ldr	x9, [sp, #64]
  4097f0:	b	40998c <ascii_strlower_n@plt+0x557c>
  4097f4:	cbz	x19, 409810 <ascii_strlower_n@plt+0x5400>
  4097f8:	ldrb	w8, [x19]
  4097fc:	cbz	w8, 409810 <ascii_strlower_n@plt+0x5400>
  409800:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  409804:	ldr	x1, [x8, #176]
  409808:	mov	w0, #0xa                   	// #10
  40980c:	bl	403d40 <fputc@plt>
  409810:	bl	403b80 <colors_enabled@plt>
  409814:	adrp	x23, 417000 <ascii_strlower_n@plt+0x12bf0>
  409818:	adrp	x8, 418000 <ascii_strlower_n@plt+0x13bf0>
  40981c:	add	x23, x23, #0xff4
  409820:	add	x8, x8, #0xcf8
  409824:	tst	w0, #0x1
  409828:	csel	x22, x8, x23, ne  // ne = any
  40982c:	bl	403b80 <colors_enabled@plt>
  409830:	adrp	x8, 418000 <ascii_strlower_n@plt+0x13bf0>
  409834:	add	x8, x8, #0xd02
  409838:	tst	w0, #0x1
  40983c:	adrp	x0, 419000 <ascii_strlower_n@plt+0x14bf0>
  409840:	csel	x4, x8, x23, ne  // ne = any
  409844:	add	x0, x0, #0x9f8
  409848:	mov	x1, x22
  40984c:	mov	w2, w20
  409850:	mov	x3, x21
  409854:	bl	403a80 <printf@plt>
  409858:	ldr	x8, [sp, #48]
  40985c:	cbz	x8, 409a3c <ascii_strlower_n@plt+0x562c>
  409860:	adrp	x9, 419000 <ascii_strlower_n@plt+0x14bf0>
  409864:	add	x9, x9, #0xa2b
  409868:	tst	x8, #0x1
  40986c:	adrp	x10, 419000 <ascii_strlower_n@plt+0x14bf0>
  409870:	add	x10, x10, #0xa30
  409874:	adrp	x11, 419000 <ascii_strlower_n@plt+0x14bf0>
  409878:	csel	x1, x23, x9, eq  // eq = none
  40987c:	tst	x8, #0x2
  409880:	add	x11, x11, #0xa3c
  409884:	adrp	x12, 419000 <ascii_strlower_n@plt+0x14bf0>
  409888:	csel	x2, x23, x10, eq  // eq = none
  40988c:	tst	x8, #0x4
  409890:	add	x12, x12, #0xa48
  409894:	adrp	x13, 419000 <ascii_strlower_n@plt+0x14bf0>
  409898:	csel	x3, x23, x11, eq  // eq = none
  40989c:	tst	x8, #0x8
  4098a0:	add	x13, x13, #0xa53
  4098a4:	csel	x4, x23, x12, eq  // eq = none
  4098a8:	tst	x8, #0x10
  4098ac:	adrp	x0, 419000 <ascii_strlower_n@plt+0x14bf0>
  4098b0:	csel	x5, x23, x13, eq  // eq = none
  4098b4:	add	x0, x0, #0xa0a
  4098b8:	bl	403a80 <printf@plt>
  4098bc:	b	409a48 <ascii_strlower_n@plt+0x5638>
  4098c0:	ldr	x2, [sp, #104]
  4098c4:	b	4099cc <ascii_strlower_n@plt+0x55bc>
  4098c8:	bl	403b80 <colors_enabled@plt>
  4098cc:	adrp	x22, 417000 <ascii_strlower_n@plt+0x12bf0>
  4098d0:	adrp	x8, 418000 <ascii_strlower_n@plt+0x13bf0>
  4098d4:	add	x22, x22, #0xff4
  4098d8:	add	x8, x8, #0xcf8
  4098dc:	tst	w0, #0x1
  4098e0:	csel	x19, x8, x22, ne  // ne = any
  4098e4:	bl	403b80 <colors_enabled@plt>
  4098e8:	ldrb	w9, [sp, #121]
  4098ec:	adrp	x8, 418000 <ascii_strlower_n@plt+0x13bf0>
  4098f0:	add	x8, x8, #0xd02
  4098f4:	tst	w0, #0x1
  4098f8:	csel	x4, x8, x22, ne  // ne = any
  4098fc:	adrp	x8, 419000 <ascii_strlower_n@plt+0x14bf0>
  409900:	adrp	x10, 419000 <ascii_strlower_n@plt+0x14bf0>
  409904:	add	x8, x8, #0xdeb
  409908:	add	x10, x10, #0xdef
  40990c:	cmp	w9, #0x0
  409910:	csel	x5, x10, x8, eq  // eq = none
  409914:	b	4099ac <ascii_strlower_n@plt+0x559c>
  409918:	bl	403b80 <colors_enabled@plt>
  40991c:	adrp	x22, 417000 <ascii_strlower_n@plt+0x12bf0>
  409920:	adrp	x8, 418000 <ascii_strlower_n@plt+0x13bf0>
  409924:	add	x22, x22, #0xff4
  409928:	add	x8, x8, #0xcf8
  40992c:	tst	w0, #0x1
  409930:	csel	x19, x8, x22, ne  // ne = any
  409934:	bl	403b80 <colors_enabled@plt>
  409938:	ldr	x9, [sp, #56]
  40993c:	b	40998c <ascii_strlower_n@plt+0x557c>
  409940:	bl	403b80 <colors_enabled@plt>
  409944:	adrp	x22, 417000 <ascii_strlower_n@plt+0x12bf0>
  409948:	adrp	x8, 418000 <ascii_strlower_n@plt+0x13bf0>
  40994c:	add	x22, x22, #0xff4
  409950:	add	x8, x8, #0xcf8
  409954:	tst	w0, #0x1
  409958:	csel	x19, x8, x22, ne  // ne = any
  40995c:	bl	403b80 <colors_enabled@plt>
  409960:	ldr	x9, [sp, #72]
  409964:	b	40998c <ascii_strlower_n@plt+0x557c>
  409968:	bl	403b80 <colors_enabled@plt>
  40996c:	adrp	x22, 417000 <ascii_strlower_n@plt+0x12bf0>
  409970:	adrp	x8, 418000 <ascii_strlower_n@plt+0x13bf0>
  409974:	add	x22, x22, #0xff4
  409978:	add	x8, x8, #0xcf8
  40997c:	tst	w0, #0x1
  409980:	csel	x19, x8, x22, ne  // ne = any
  409984:	bl	403b80 <colors_enabled@plt>
  409988:	ldr	x9, [sp, #80]
  40998c:	adrp	x8, 418000 <ascii_strlower_n@plt+0x13bf0>
  409990:	add	x8, x8, #0xd02
  409994:	tst	w0, #0x1
  409998:	csel	x4, x8, x22, ne  // ne = any
  40999c:	adrp	x8, 419000 <ascii_strlower_n@plt+0x14bf0>
  4099a0:	add	x8, x8, #0xdf2
  4099a4:	cmp	x9, #0x0
  4099a8:	csel	x5, x8, x9, eq  // eq = none
  4099ac:	adrp	x0, 419000 <ascii_strlower_n@plt+0x14bf0>
  4099b0:	add	x0, x0, #0x9e2
  4099b4:	mov	x1, x19
  4099b8:	mov	w2, w20
  4099bc:	mov	x3, x21
  4099c0:	bl	403a80 <printf@plt>
  4099c4:	b	4099d8 <ascii_strlower_n@plt+0x55c8>
  4099c8:	ldr	x2, [sp, #112]
  4099cc:	mov	w0, w20
  4099d0:	mov	x1, x21
  4099d4:	bl	40a53c <ascii_strlower_n@plt+0x612c>
  4099d8:	mov	w20, wzr
  4099dc:	ldr	x0, [sp, #32]
  4099e0:	bl	403a30 <free@plt>
  4099e4:	ldr	x0, [sp, #40]
  4099e8:	bl	403a30 <free@plt>
  4099ec:	ldr	x0, [sp, #88]
  4099f0:	bl	403a30 <free@plt>
  4099f4:	ldr	x0, [sp, #96]
  4099f8:	bl	403ab0 <strv_free@plt>
  4099fc:	ldr	x0, [sp, #104]
  409a00:	bl	403ab0 <strv_free@plt>
  409a04:	ldr	x0, [sp, #112]
  409a08:	bl	403ab0 <strv_free@plt>
  409a0c:	ldr	x0, [x29, #24]
  409a10:	cbz	x0, 409a18 <ascii_strlower_n@plt+0x5608>
  409a14:	bl	403d90 <sd_bus_message_unref@plt>
  409a18:	sub	x0, x29, #0x18
  409a1c:	bl	403d80 <sd_bus_error_free@plt>
  409a20:	mov	w0, w20
  409a24:	ldp	x20, x19, [sp, #208]
  409a28:	ldp	x22, x21, [sp, #192]
  409a2c:	ldr	x23, [sp, #176]
  409a30:	ldp	x29, x30, [sp, #160]
  409a34:	add	sp, sp, #0xe0
  409a38:	ret
  409a3c:	adrp	x0, 41b000 <ascii_strlower_n@plt+0x16bf0>
  409a40:	add	x0, x0, #0x2de
  409a44:	bl	403c10 <puts@plt>
  409a48:	ldrb	w8, [sp, #121]
  409a4c:	ldp	x12, x13, [sp, #56]
  409a50:	adrp	x9, 419000 <ascii_strlower_n@plt+0x14bf0>
  409a54:	adrp	x10, 419000 <ascii_strlower_n@plt+0x14bf0>
  409a58:	ldp	x14, x15, [sp, #72]
  409a5c:	add	x9, x9, #0xdeb
  409a60:	add	x10, x10, #0xdef
  409a64:	adrp	x11, 419000 <ascii_strlower_n@plt+0x14bf0>
  409a68:	cmp	w8, #0x0
  409a6c:	add	x11, x11, #0xdf2
  409a70:	ldrb	w16, [sp, #120]
  409a74:	csel	x1, x10, x9, eq  // eq = none
  409a78:	cmp	x12, #0x0
  409a7c:	csel	x2, x11, x12, eq  // eq = none
  409a80:	cmp	x13, #0x0
  409a84:	csel	x3, x11, x13, eq  // eq = none
  409a88:	cmp	x14, #0x0
  409a8c:	csel	x4, x11, x14, eq  // eq = none
  409a90:	cmp	x15, #0x0
  409a94:	csel	x5, x11, x15, eq  // eq = none
  409a98:	cmp	w16, #0x0
  409a9c:	adrp	x0, 419000 <ascii_strlower_n@plt+0x14bf0>
  409aa0:	csel	x6, x10, x9, eq  // eq = none
  409aa4:	add	x0, x0, #0xa5e
  409aa8:	bl	403a80 <printf@plt>
  409aac:	ldr	x1, [sp, #88]
  409ab0:	cbz	x1, 409ac0 <ascii_strlower_n@plt+0x56b0>
  409ab4:	adrp	x0, 419000 <ascii_strlower_n@plt+0x14bf0>
  409ab8:	add	x0, x0, #0xaf5
  409abc:	bl	403a80 <printf@plt>
  409ac0:	ldr	x21, [sp, #96]
  409ac4:	cbz	x21, 409b04 <ascii_strlower_n@plt+0x56f4>
  409ac8:	ldr	x2, [x21]
  409acc:	cbz	x2, 409b04 <ascii_strlower_n@plt+0x56f4>
  409ad0:	adrp	x22, 419000 <ascii_strlower_n@plt+0x14bf0>
  409ad4:	adrp	x23, 419000 <ascii_strlower_n@plt+0x14bf0>
  409ad8:	adrp	x20, 419000 <ascii_strlower_n@plt+0x14bf0>
  409adc:	add	x22, x22, #0xb2c
  409ae0:	add	x23, x23, #0xb1f
  409ae4:	add	x20, x20, #0xb0f
  409ae8:	ldr	x8, [sp, #96]
  409aec:	mov	x0, x20
  409af0:	cmp	x21, x8
  409af4:	csel	x1, x23, x22, eq  // eq = none
  409af8:	bl	403a80 <printf@plt>
  409afc:	ldr	x2, [x21, #8]!
  409b00:	cbnz	x2, 409ae8 <ascii_strlower_n@plt+0x56d8>
  409b04:	ldr	x21, [sp, #104]
  409b08:	cbz	x21, 409b48 <ascii_strlower_n@plt+0x5738>
  409b0c:	ldr	x2, [x21]
  409b10:	cbz	x2, 409b48 <ascii_strlower_n@plt+0x5738>
  409b14:	adrp	x22, 419000 <ascii_strlower_n@plt+0x14bf0>
  409b18:	adrp	x23, 419000 <ascii_strlower_n@plt+0x14bf0>
  409b1c:	adrp	x20, 419000 <ascii_strlower_n@plt+0x14bf0>
  409b20:	add	x22, x22, #0xb56
  409b24:	add	x23, x23, #0xb4a
  409b28:	add	x20, x20, #0xb39
  409b2c:	ldr	x8, [sp, #104]
  409b30:	mov	x0, x20
  409b34:	cmp	x21, x8
  409b38:	csel	x1, x23, x22, eq  // eq = none
  409b3c:	bl	403a80 <printf@plt>
  409b40:	ldr	x2, [x21, #8]!
  409b44:	cbnz	x2, 409b2c <ascii_strlower_n@plt+0x571c>
  409b48:	ldr	x21, [sp, #112]
  409b4c:	cbz	x21, 409b8c <ascii_strlower_n@plt+0x577c>
  409b50:	ldr	x2, [x21]
  409b54:	cbz	x2, 409b8c <ascii_strlower_n@plt+0x577c>
  409b58:	adrp	x22, 419000 <ascii_strlower_n@plt+0x14bf0>
  409b5c:	adrp	x23, 419000 <ascii_strlower_n@plt+0x14bf0>
  409b60:	adrp	x20, 419000 <ascii_strlower_n@plt+0x14bf0>
  409b64:	add	x22, x22, #0xb56
  409b68:	add	x23, x23, #0xb62
  409b6c:	add	x20, x20, #0xb39
  409b70:	ldr	x8, [sp, #112]
  409b74:	mov	x0, x20
  409b78:	cmp	x21, x8
  409b7c:	csel	x1, x23, x22, eq  // eq = none
  409b80:	bl	403a80 <printf@plt>
  409b84:	ldr	x2, [x21, #8]!
  409b88:	cbnz	x2, 409b70 <ascii_strlower_n@plt+0x5760>
  409b8c:	cbz	x19, 4099d8 <ascii_strlower_n@plt+0x55c8>
  409b90:	mov	w20, wzr
  409b94:	mov	w8, #0x1                   	// #1
  409b98:	strb	w8, [x19]
  409b9c:	b	4099dc <ascii_strlower_n@plt+0x55cc>
  409ba0:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  409ba4:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  409ba8:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  409bac:	add	x1, x1, #0x8f4
  409bb0:	add	x2, x2, #0xf07
  409bb4:	add	x4, x4, #0x8f8
  409bb8:	mov	w3, #0x56e                 	// #1390
  409bbc:	bl	403aa0 <log_assert_failed_realm@plt>
  409bc0:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  409bc4:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  409bc8:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  409bcc:	add	x1, x1, #0x93d
  409bd0:	add	x2, x2, #0xf07
  409bd4:	add	x4, x4, #0x8f8
  409bd8:	mov	w3, #0x56f                 	// #1391
  409bdc:	mov	w0, wzr
  409be0:	bl	403aa0 <log_assert_failed_realm@plt>
  409be4:	sub	sp, sp, #0xd0
  409be8:	stp	x29, x30, [sp, #144]
  409bec:	stp	x24, x23, [sp, #160]
  409bf0:	stp	x22, x21, [sp, #176]
  409bf4:	stp	x20, x19, [sp, #192]
  409bf8:	add	x29, sp, #0x90
  409bfc:	stp	xzr, xzr, [sp, #16]
  409c00:	str	xzr, [sp, #8]
  409c04:	strb	wzr, [sp, #4]
  409c08:	cbz	x0, 40a20c <ascii_strlower_n@plt+0x5dfc>
  409c0c:	mov	w19, w1
  409c10:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  409c14:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf0>
  409c18:	adrp	x3, 41e000 <ascii_strlower_n@plt+0x19bf0>
  409c1c:	movi	v0.2d, #0x0
  409c20:	add	x1, x1, #0x9a6
  409c24:	add	x2, x2, #0xe87
  409c28:	add	x3, x3, #0x550
  409c2c:	sub	x5, x29, #0x18
  409c30:	sub	x6, x29, #0x20
  409c34:	add	x7, sp, #0x20
  409c38:	mov	w4, #0x2                   	// #2
  409c3c:	mov	x20, x0
  409c40:	stp	xzr, xzr, [x29, #-24]
  409c44:	stur	xzr, [x29, #-8]
  409c48:	stur	xzr, [x29, #-32]
  409c4c:	stp	q0, q0, [sp, #80]
  409c50:	stp	q0, q0, [sp, #48]
  409c54:	str	q0, [sp, #32]
  409c58:	bl	403e40 <bus_map_all_properties@plt>
  409c5c:	tbnz	w0, #31, 409c98 <ascii_strlower_n@plt+0x5888>
  409c60:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  409c64:	ldr	w0, [x8, #92]
  409c68:	bl	403e50 <pager_open@plt>
  409c6c:	sub	w8, w19, #0x1
  409c70:	cmp	w8, #0x7
  409c74:	b.hi	409d38 <ascii_strlower_n@plt+0x5928>  // b.pmore
  409c78:	adrp	x9, 41d000 <ascii_strlower_n@plt+0x18bf0>
  409c7c:	add	x9, x9, #0xb7d
  409c80:	adr	x10, 409c90 <ascii_strlower_n@plt+0x5880>
  409c84:	ldrb	w11, [x9, x8]
  409c88:	add	x10, x10, x11, lsl #2
  409c8c:	br	x10
  409c90:	ldr	x0, [sp, #40]
  409c94:	b	409d30 <ascii_strlower_n@plt+0x5920>
  409c98:	mov	w21, w0
  409c9c:	mov	w0, wzr
  409ca0:	bl	4039b0 <log_get_max_level_realm@plt>
  409ca4:	cmp	w0, #0x3
  409ca8:	b.lt	409cec <ascii_strlower_n@plt+0x58dc>  // b.tstop
  409cac:	sub	x0, x29, #0x18
  409cb0:	mov	w1, w21
  409cb4:	bl	403d70 <bus_error_message@plt>
  409cb8:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  409cbc:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  409cc0:	adrp	x5, 419000 <ascii_strlower_n@plt+0x14bf0>
  409cc4:	mov	x6, x0
  409cc8:	add	x2, x2, #0xf07
  409ccc:	add	x4, x4, #0xea1
  409cd0:	add	x5, x5, #0xeaf
  409cd4:	mov	w0, #0x3                   	// #3
  409cd8:	mov	w3, #0x688                 	// #1672
  409cdc:	mov	w1, w21
  409ce0:	bl	4039c0 <log_internal_realm@plt>
  409ce4:	mov	w21, w0
  409ce8:	b	409e08 <ascii_strlower_n@plt+0x59f8>
  409cec:	mov	w8, wzr
  409cf0:	neg	w9, w21
  409cf4:	sub	w21, w8, w9, uxtb
  409cf8:	b	409e08 <ascii_strlower_n@plt+0x59f8>
  409cfc:	bl	403b80 <colors_enabled@plt>
  409d00:	adrp	x22, 417000 <ascii_strlower_n@plt+0x12bf0>
  409d04:	adrp	x8, 418000 <ascii_strlower_n@plt+0x13bf0>
  409d08:	add	x22, x22, #0xff4
  409d0c:	add	x8, x8, #0xcf8
  409d10:	tst	w0, #0x1
  409d14:	csel	x21, x8, x22, ne  // ne = any
  409d18:	bl	403b80 <colors_enabled@plt>
  409d1c:	ldr	x9, [sp, #72]
  409d20:	b	409dd4 <ascii_strlower_n@plt+0x59c4>
  409d24:	ldr	x0, [sp, #64]
  409d28:	b	409d30 <ascii_strlower_n@plt+0x5920>
  409d2c:	ldr	x0, [sp, #56]
  409d30:	bl	40abec <ascii_strlower_n@plt+0x67dc>
  409d34:	b	409e04 <ascii_strlower_n@plt+0x59f4>
  409d38:	bl	403b80 <colors_enabled@plt>
  409d3c:	adrp	x22, 417000 <ascii_strlower_n@plt+0x12bf0>
  409d40:	adrp	x8, 418000 <ascii_strlower_n@plt+0x13bf0>
  409d44:	add	x22, x22, #0xff4
  409d48:	add	x8, x8, #0xcf8
  409d4c:	tst	w0, #0x1
  409d50:	csel	x21, x8, x22, ne  // ne = any
  409d54:	bl	403b80 <colors_enabled@plt>
  409d58:	adrp	x8, 418000 <ascii_strlower_n@plt+0x13bf0>
  409d5c:	add	x8, x8, #0xd02
  409d60:	tst	w0, #0x1
  409d64:	csel	x2, x8, x22, ne  // ne = any
  409d68:	cmp	w19, #0x7
  409d6c:	b.ne	409fb8 <ascii_strlower_n@plt+0x5ba8>  // b.any
  409d70:	ldr	x8, [sp, #96]
  409d74:	adrp	x9, 419000 <ascii_strlower_n@plt+0x14bf0>
  409d78:	add	x9, x9, #0xdf2
  409d7c:	cmp	x8, #0x0
  409d80:	csel	x3, x9, x8, eq  // eq = none
  409d84:	b	409df4 <ascii_strlower_n@plt+0x59e4>
  409d88:	bl	403b80 <colors_enabled@plt>
  409d8c:	adrp	x22, 417000 <ascii_strlower_n@plt+0x12bf0>
  409d90:	adrp	x8, 418000 <ascii_strlower_n@plt+0x13bf0>
  409d94:	add	x22, x22, #0xff4
  409d98:	add	x8, x8, #0xcf8
  409d9c:	tst	w0, #0x1
  409da0:	csel	x21, x8, x22, ne  // ne = any
  409da4:	bl	403b80 <colors_enabled@plt>
  409da8:	ldr	x9, [sp, #80]
  409dac:	b	409dd4 <ascii_strlower_n@plt+0x59c4>
  409db0:	bl	403b80 <colors_enabled@plt>
  409db4:	adrp	x22, 417000 <ascii_strlower_n@plt+0x12bf0>
  409db8:	adrp	x8, 418000 <ascii_strlower_n@plt+0x13bf0>
  409dbc:	add	x22, x22, #0xff4
  409dc0:	add	x8, x8, #0xcf8
  409dc4:	tst	w0, #0x1
  409dc8:	csel	x21, x8, x22, ne  // ne = any
  409dcc:	bl	403b80 <colors_enabled@plt>
  409dd0:	ldr	x9, [sp, #88]
  409dd4:	adrp	x8, 418000 <ascii_strlower_n@plt+0x13bf0>
  409dd8:	add	x8, x8, #0xd02
  409ddc:	tst	w0, #0x1
  409de0:	csel	x2, x8, x22, ne  // ne = any
  409de4:	adrp	x8, 419000 <ascii_strlower_n@plt+0x14bf0>
  409de8:	add	x8, x8, #0xdf2
  409dec:	cmp	x9, #0x0
  409df0:	csel	x3, x8, x9, eq  // eq = none
  409df4:	adrp	x0, 419000 <ascii_strlower_n@plt+0x14bf0>
  409df8:	add	x0, x0, #0xecd
  409dfc:	mov	x1, x21
  409e00:	bl	403a80 <printf@plt>
  409e04:	mov	w21, wzr
  409e08:	ldr	x0, [sp, #32]
  409e0c:	bl	403a30 <free@plt>
  409e10:	ldr	x0, [sp, #40]
  409e14:	bl	403ab0 <strv_free@plt>
  409e18:	ldr	x0, [sp, #48]
  409e1c:	bl	403ab0 <strv_free@plt>
  409e20:	ldr	x0, [sp, #56]
  409e24:	bl	403ab0 <strv_free@plt>
  409e28:	ldr	x0, [sp, #64]
  409e2c:	bl	403ab0 <strv_free@plt>
  409e30:	ldur	x0, [x29, #-32]
  409e34:	cbz	x0, 409e3c <ascii_strlower_n@plt+0x5a2c>
  409e38:	bl	403d90 <sd_bus_message_unref@plt>
  409e3c:	sub	x0, x29, #0x18
  409e40:	bl	403d80 <sd_bus_error_free@plt>
  409e44:	tbnz	w21, #31, 40a1c4 <ascii_strlower_n@plt+0x5db4>
  409e48:	add	x0, sp, #0x8
  409e4c:	bl	403e70 <sd_netlink_open@plt>
  409e50:	tbnz	w0, #31, 409f30 <ascii_strlower_n@plt+0x5b20>
  409e54:	ldr	x0, [sp, #8]
  409e58:	add	x1, sp, #0x18
  409e5c:	mov	w2, #0x12                  	// #18
  409e60:	mov	w3, wzr
  409e64:	bl	403e80 <sd_rtnl_message_new_link@plt>
  409e68:	tbnz	w0, #31, 409f28 <ascii_strlower_n@plt+0x5b18>
  409e6c:	ldr	x0, [sp, #24]
  409e70:	mov	w1, #0x1                   	// #1
  409e74:	bl	403e90 <sd_netlink_message_request_dump@plt>
  409e78:	tbnz	w0, #31, 409f28 <ascii_strlower_n@plt+0x5b18>
  409e7c:	ldr	x0, [sp, #8]
  409e80:	ldr	x1, [sp, #24]
  409e84:	add	x3, sp, #0x10
  409e88:	mov	x2, xzr
  409e8c:	bl	403ea0 <sd_netlink_call@plt>
  409e90:	tbnz	w0, #31, 409f70 <ascii_strlower_n@plt+0x5b60>
  409e94:	ldr	x22, [sp, #16]
  409e98:	cbz	x22, 40a204 <ascii_strlower_n@plt+0x5df4>
  409e9c:	mov	w21, wzr
  409ea0:	mov	w23, #0xffffffff            	// #-1
  409ea4:	sub	x1, x29, #0x20
  409ea8:	mov	x0, x22
  409eac:	bl	403eb0 <sd_netlink_message_get_type@plt>
  409eb0:	tbnz	w0, #31, 40a1bc <ascii_strlower_n@plt+0x5dac>
  409eb4:	ldurh	w8, [x29, #-32]
  409eb8:	cmp	w8, #0x10
  409ebc:	b.ne	409f14 <ascii_strlower_n@plt+0x5b04>  // b.any
  409ec0:	sub	x1, x29, #0x18
  409ec4:	mov	x0, x22
  409ec8:	bl	403ec0 <sd_rtnl_message_link_get_ifindex@plt>
  409ecc:	tbnz	w0, #31, 40a1bc <ascii_strlower_n@plt+0x5dac>
  409ed0:	ldur	w8, [x29, #-24]
  409ed4:	cmp	w8, #0x1
  409ed8:	b.eq	409f14 <ascii_strlower_n@plt+0x5b04>  // b.none
  409edc:	add	x2, sp, #0x20
  409ee0:	mov	w1, #0x3                   	// #3
  409ee4:	mov	x0, x22
  409ee8:	bl	403ed0 <sd_netlink_message_read_string@plt>
  409eec:	tbnz	w0, #31, 40a1bc <ascii_strlower_n@plt+0x5dac>
  409ef0:	ldur	w1, [x29, #-24]
  409ef4:	ldr	x2, [sp, #32]
  409ef8:	add	x4, sp, #0x4
  409efc:	mov	x0, x20
  409f00:	mov	w3, w19
  409f04:	bl	4095c0 <ascii_strlower_n@plt+0x51b0>
  409f08:	cmp	w0, #0x0
  409f0c:	ccmp	w21, w23, #0x4, lt  // lt = tstop
  409f10:	csel	w21, w0, w21, gt
  409f14:	mov	x0, x22
  409f18:	bl	403ee0 <sd_netlink_message_next@plt>
  409f1c:	mov	x22, x0
  409f20:	cbnz	x0, 409ea4 <ascii_strlower_n@plt+0x5a94>
  409f24:	b	40a1c4 <ascii_strlower_n@plt+0x5db4>
  409f28:	bl	403ef0 <rtnl_log_create_error@plt>
  409f2c:	b	40a1c0 <ascii_strlower_n@plt+0x5db0>
  409f30:	mov	w21, w0
  409f34:	mov	w0, wzr
  409f38:	bl	4039b0 <log_get_max_level_realm@plt>
  409f3c:	cmp	w0, #0x3
  409f40:	b.lt	409fa8 <ascii_strlower_n@plt+0x5b98>  // b.tstop
  409f44:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  409f48:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  409f4c:	adrp	x5, 419000 <ascii_strlower_n@plt+0x14bf0>
  409f50:	add	x2, x2, #0xf07
  409f54:	add	x4, x4, #0xe1b
  409f58:	add	x5, x5, #0xe26
  409f5c:	mov	w0, #0x3                   	// #3
  409f60:	mov	w3, #0x6ee                 	// #1774
  409f64:	mov	w1, w21
  409f68:	bl	4039c0 <log_internal_realm@plt>
  409f6c:	b	40a1c0 <ascii_strlower_n@plt+0x5db0>
  409f70:	mov	w21, w0
  409f74:	mov	w0, wzr
  409f78:	bl	4039b0 <log_get_max_level_realm@plt>
  409f7c:	cmp	w0, #0x3
  409f80:	b.lt	409fa8 <ascii_strlower_n@plt+0x5b98>  // b.tstop
  409f84:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  409f88:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  409f8c:	adrp	x5, 419000 <ascii_strlower_n@plt+0x14bf0>
  409f90:	add	x2, x2, #0xf07
  409f94:	add	x4, x4, #0xe1b
  409f98:	add	x5, x5, #0xe47
  409f9c:	mov	w0, #0x3                   	// #3
  409fa0:	mov	w3, #0x6fa                 	// #1786
  409fa4:	b	409f64 <ascii_strlower_n@plt+0x5b54>
  409fa8:	mov	w8, wzr
  409fac:	neg	w9, w21
  409fb0:	sub	w21, w8, w9, uxtb
  409fb4:	b	40a1c4 <ascii_strlower_n@plt+0x5db4>
  409fb8:	adrp	x0, 419000 <ascii_strlower_n@plt+0x14bf0>
  409fbc:	add	x0, x0, #0xedd
  409fc0:	mov	x1, x21
  409fc4:	bl	403a80 <printf@plt>
  409fc8:	ldp	x9, x10, [sp, #72]
  409fcc:	ldp	x11, x12, [sp, #88]
  409fd0:	adrp	x8, 419000 <ascii_strlower_n@plt+0x14bf0>
  409fd4:	add	x8, x8, #0xdf2
  409fd8:	cmp	x9, #0x0
  409fdc:	ldrb	w13, [sp, #104]
  409fe0:	csel	x1, x8, x9, eq  // eq = none
  409fe4:	cmp	x10, #0x0
  409fe8:	csel	x2, x8, x10, eq  // eq = none
  409fec:	cmp	x11, #0x0
  409ff0:	csel	x3, x8, x11, eq  // eq = none
  409ff4:	cmp	x12, #0x0
  409ff8:	adrp	x14, 419000 <ascii_strlower_n@plt+0x14bf0>
  409ffc:	csel	x4, x8, x12, eq  // eq = none
  40a000:	adrp	x8, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a004:	add	x14, x14, #0xdeb
  40a008:	add	x8, x8, #0xdef
  40a00c:	cmp	w13, #0x0
  40a010:	adrp	x0, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a014:	csel	x5, x8, x14, eq  // eq = none
  40a018:	add	x0, x0, #0xee9
  40a01c:	bl	403a80 <printf@plt>
  40a020:	ldr	x1, [sp, #32]
  40a024:	cbz	x1, 40a034 <ascii_strlower_n@plt+0x5c24>
  40a028:	adrp	x0, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a02c:	add	x0, x0, #0xaf5
  40a030:	bl	403a80 <printf@plt>
  40a034:	ldr	x23, [sp, #40]
  40a038:	cbz	x23, 40a090 <ascii_strlower_n@plt+0x5c80>
  40a03c:	ldr	x2, [x23]
  40a040:	cbz	x2, 40a090 <ascii_strlower_n@plt+0x5c80>
  40a044:	adrp	x21, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a048:	adrp	x0, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a04c:	add	x21, x21, #0xb1f
  40a050:	add	x0, x0, #0xb0f
  40a054:	mov	x1, x21
  40a058:	bl	403a80 <printf@plt>
  40a05c:	ldr	x2, [x23, #8]!
  40a060:	cbz	x2, 40a090 <ascii_strlower_n@plt+0x5c80>
  40a064:	adrp	x24, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a068:	adrp	x22, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a06c:	add	x24, x24, #0xb2c
  40a070:	add	x22, x22, #0xb0f
  40a074:	ldr	x8, [sp, #40]
  40a078:	mov	x0, x22
  40a07c:	cmp	x23, x8
  40a080:	csel	x1, x21, x24, eq  // eq = none
  40a084:	bl	403a80 <printf@plt>
  40a088:	ldr	x2, [x23, #8]!
  40a08c:	cbnz	x2, 40a074 <ascii_strlower_n@plt+0x5c64>
  40a090:	ldr	x23, [sp, #48]
  40a094:	cbz	x23, 40a0ec <ascii_strlower_n@plt+0x5cdc>
  40a098:	ldr	x2, [x23]
  40a09c:	cbz	x2, 40a0ec <ascii_strlower_n@plt+0x5cdc>
  40a0a0:	adrp	x21, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a0a4:	adrp	x0, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a0a8:	add	x21, x21, #0xf6e
  40a0ac:	add	x0, x0, #0xf67
  40a0b0:	mov	x1, x21
  40a0b4:	bl	403a80 <printf@plt>
  40a0b8:	ldr	x2, [x23, #8]!
  40a0bc:	cbz	x2, 40a0ec <ascii_strlower_n@plt+0x5cdc>
  40a0c0:	adrp	x24, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a0c4:	adrp	x22, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a0c8:	add	x24, x24, #0xf84
  40a0cc:	add	x22, x22, #0xf67
  40a0d0:	ldr	x8, [sp, #48]
  40a0d4:	mov	x0, x22
  40a0d8:	cmp	x23, x8
  40a0dc:	csel	x1, x21, x24, eq  // eq = none
  40a0e0:	bl	403a80 <printf@plt>
  40a0e4:	ldr	x2, [x23, #8]!
  40a0e8:	cbnz	x2, 40a0d0 <ascii_strlower_n@plt+0x5cc0>
  40a0ec:	ldr	x23, [sp, #56]
  40a0f0:	cbz	x23, 40a148 <ascii_strlower_n@plt+0x5d38>
  40a0f4:	ldr	x2, [x23]
  40a0f8:	cbz	x2, 40a148 <ascii_strlower_n@plt+0x5d38>
  40a0fc:	adrp	x21, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a100:	adrp	x0, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a104:	add	x21, x21, #0xb4a
  40a108:	add	x0, x0, #0xb39
  40a10c:	mov	x1, x21
  40a110:	bl	403a80 <printf@plt>
  40a114:	ldr	x2, [x23, #8]!
  40a118:	cbz	x2, 40a148 <ascii_strlower_n@plt+0x5d38>
  40a11c:	adrp	x24, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a120:	adrp	x22, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a124:	add	x24, x24, #0xb56
  40a128:	add	x22, x22, #0xb39
  40a12c:	ldr	x8, [sp, #56]
  40a130:	mov	x0, x22
  40a134:	cmp	x23, x8
  40a138:	csel	x1, x21, x24, eq  // eq = none
  40a13c:	bl	403a80 <printf@plt>
  40a140:	ldr	x2, [x23, #8]!
  40a144:	cbnz	x2, 40a12c <ascii_strlower_n@plt+0x5d1c>
  40a148:	ldr	x0, [sp, #64]
  40a14c:	bl	403f00 <strv_sort@plt>
  40a150:	ldr	x23, [sp, #64]
  40a154:	cbz	x23, 40a1ac <ascii_strlower_n@plt+0x5d9c>
  40a158:	ldr	x2, [x23]
  40a15c:	cbz	x2, 40a1ac <ascii_strlower_n@plt+0x5d9c>
  40a160:	adrp	x21, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a164:	adrp	x0, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a168:	add	x21, x21, #0xb62
  40a16c:	add	x0, x0, #0xb39
  40a170:	mov	x1, x21
  40a174:	bl	403a80 <printf@plt>
  40a178:	ldr	x2, [x23, #8]!
  40a17c:	cbz	x2, 40a1ac <ascii_strlower_n@plt+0x5d9c>
  40a180:	adrp	x24, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a184:	adrp	x22, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a188:	add	x24, x24, #0xb56
  40a18c:	add	x22, x22, #0xb39
  40a190:	ldr	x8, [sp, #64]
  40a194:	mov	x0, x22
  40a198:	cmp	x23, x8
  40a19c:	csel	x1, x21, x24, eq  // eq = none
  40a1a0:	bl	403a80 <printf@plt>
  40a1a4:	ldr	x2, [x23, #8]!
  40a1a8:	cbnz	x2, 40a190 <ascii_strlower_n@plt+0x5d80>
  40a1ac:	mov	w21, wzr
  40a1b0:	mov	w8, #0x1                   	// #1
  40a1b4:	strb	w8, [sp, #4]
  40a1b8:	b	409e08 <ascii_strlower_n@plt+0x59f8>
  40a1bc:	bl	403f10 <rtnl_log_parse_error@plt>
  40a1c0:	mov	w21, w0
  40a1c4:	ldr	x0, [sp, #8]
  40a1c8:	cbz	x0, 40a1d0 <ascii_strlower_n@plt+0x5dc0>
  40a1cc:	bl	403f20 <sd_netlink_unref@plt>
  40a1d0:	ldr	x0, [sp, #16]
  40a1d4:	cbz	x0, 40a1dc <ascii_strlower_n@plt+0x5dcc>
  40a1d8:	bl	403f30 <sd_netlink_message_unref@plt>
  40a1dc:	ldr	x0, [sp, #24]
  40a1e0:	cbz	x0, 40a1e8 <ascii_strlower_n@plt+0x5dd8>
  40a1e4:	bl	403f30 <sd_netlink_message_unref@plt>
  40a1e8:	mov	w0, w21
  40a1ec:	ldp	x20, x19, [sp, #192]
  40a1f0:	ldp	x22, x21, [sp, #176]
  40a1f4:	ldp	x24, x23, [sp, #160]
  40a1f8:	ldp	x29, x30, [sp, #144]
  40a1fc:	add	sp, sp, #0xd0
  40a200:	ret
  40a204:	mov	w21, wzr
  40a208:	b	40a1c4 <ascii_strlower_n@plt+0x5db4>
  40a20c:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a210:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40a214:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a218:	add	x1, x1, #0x8f4
  40a21c:	add	x2, x2, #0xf07
  40a220:	add	x4, x4, #0xdf6
  40a224:	mov	w3, #0x6e6                 	// #1766
  40a228:	bl	403aa0 <log_assert_failed_realm@plt>
  40a22c:	stp	x29, x30, [sp, #-48]!
  40a230:	str	x21, [sp, #16]
  40a234:	stp	x20, x19, [sp, #32]
  40a238:	mov	x29, sp
  40a23c:	cbz	x0, 40a2fc <ascii_strlower_n@plt+0x5eec>
  40a240:	cbz	x1, 40a31c <ascii_strlower_n@plt+0x5f0c>
  40a244:	mov	x19, x2
  40a248:	cbz	x2, 40a33c <ascii_strlower_n@plt+0x5f2c>
  40a24c:	mov	x20, x4
  40a250:	cbz	x4, 40a35c <ascii_strlower_n@plt+0x5f4c>
  40a254:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a258:	add	x2, x2, #0x87e
  40a25c:	mov	w1, #0x61                  	// #97
  40a260:	mov	x0, x19
  40a264:	bl	403d00 <sd_bus_message_enter_container@plt>
  40a268:	tbnz	w0, #31, 40a2bc <ascii_strlower_n@plt+0x5eac>
  40a26c:	add	x2, x29, #0x18
  40a270:	mov	x0, x19
  40a274:	mov	w1, wzr
  40a278:	str	xzr, [x29, #24]
  40a27c:	bl	40a5e4 <ascii_strlower_n@plt+0x61d4>
  40a280:	mov	w21, w0
  40a284:	tbnz	w0, #31, 40a2e0 <ascii_strlower_n@plt+0x5ed0>
  40a288:	ldr	x1, [x29, #24]
  40a28c:	cbz	w21, 40a2c4 <ascii_strlower_n@plt+0x5eb4>
  40a290:	cbz	x1, 40a2b0 <ascii_strlower_n@plt+0x5ea0>
  40a294:	ldrb	w8, [x1]
  40a298:	cbz	w8, 40a2b0 <ascii_strlower_n@plt+0x5ea0>
  40a29c:	mov	x0, x20
  40a2a0:	str	xzr, [x29, #24]
  40a2a4:	bl	403f40 <strv_consume@plt>
  40a2a8:	tbnz	w0, #31, 40a2dc <ascii_strlower_n@plt+0x5ecc>
  40a2ac:	ldr	x1, [x29, #24]
  40a2b0:	mov	x0, x1
  40a2b4:	bl	403a30 <free@plt>
  40a2b8:	b	40a26c <ascii_strlower_n@plt+0x5e5c>
  40a2bc:	mov	w21, w0
  40a2c0:	b	40a2e8 <ascii_strlower_n@plt+0x5ed8>
  40a2c4:	mov	x0, x1
  40a2c8:	bl	403a30 <free@plt>
  40a2cc:	mov	x0, x19
  40a2d0:	bl	403d20 <sd_bus_message_exit_container@plt>
  40a2d4:	and	w21, w0, w0, asr #31
  40a2d8:	b	40a2e8 <ascii_strlower_n@plt+0x5ed8>
  40a2dc:	mov	w21, w0
  40a2e0:	ldr	x0, [x29, #24]
  40a2e4:	bl	403a30 <free@plt>
  40a2e8:	mov	w0, w21
  40a2ec:	ldp	x20, x19, [sp, #32]
  40a2f0:	ldr	x21, [sp, #16]
  40a2f4:	ldp	x29, x30, [sp], #48
  40a2f8:	ret
  40a2fc:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a300:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40a304:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a308:	add	x1, x1, #0x8f4
  40a30c:	add	x2, x2, #0xf07
  40a310:	add	x4, x4, #0xb6e
  40a314:	mov	w3, #0x4c6                 	// #1222
  40a318:	bl	403aa0 <log_assert_failed_realm@plt>
  40a31c:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a320:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40a324:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a328:	add	x1, x1, #0xbc9
  40a32c:	add	x2, x2, #0xf07
  40a330:	add	x4, x4, #0xb6e
  40a334:	mov	w3, #0x4c7                 	// #1223
  40a338:	b	40a378 <ascii_strlower_n@plt+0x5f68>
  40a33c:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a340:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40a344:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a348:	add	x1, x1, #0xbd0
  40a34c:	add	x2, x2, #0xf07
  40a350:	add	x4, x4, #0xb6e
  40a354:	mov	w3, #0x4c8                 	// #1224
  40a358:	b	40a378 <ascii_strlower_n@plt+0x5f68>
  40a35c:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a360:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40a364:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a368:	add	x1, x1, #0xbd2
  40a36c:	add	x2, x2, #0xf07
  40a370:	add	x4, x4, #0xb6e
  40a374:	mov	w3, #0x4c9                 	// #1225
  40a378:	mov	w0, wzr
  40a37c:	bl	403aa0 <log_assert_failed_realm@plt>
  40a380:	stp	x29, x30, [sp, #-16]!
  40a384:	mov	x0, x2
  40a388:	mov	x29, sp
  40a38c:	cbz	x2, 40a3a4 <ascii_strlower_n@plt+0x5f94>
  40a390:	cbz	x4, 40a3c4 <ascii_strlower_n@plt+0x5fb4>
  40a394:	mov	w1, wzr
  40a398:	mov	x2, x4
  40a39c:	ldp	x29, x30, [sp], #16
  40a3a0:	b	40a5e4 <ascii_strlower_n@plt+0x61d4>
  40a3a4:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a3a8:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40a3ac:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a3b0:	add	x1, x1, #0xbd0
  40a3b4:	add	x2, x2, #0xf07
  40a3b8:	add	x4, x4, #0xcd0
  40a3bc:	mov	w3, #0x4e8                 	// #1256
  40a3c0:	bl	403aa0 <log_assert_failed_realm@plt>
  40a3c4:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a3c8:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40a3cc:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a3d0:	add	x1, x1, #0xd32
  40a3d4:	add	x2, x2, #0xf07
  40a3d8:	add	x4, x4, #0xcd0
  40a3dc:	mov	w3, #0x4e9                 	// #1257
  40a3e0:	mov	w0, wzr
  40a3e4:	bl	403aa0 <log_assert_failed_realm@plt>
  40a3e8:	stp	x29, x30, [sp, #-48]!
  40a3ec:	str	x21, [sp, #16]
  40a3f0:	stp	x20, x19, [sp, #32]
  40a3f4:	mov	x29, sp
  40a3f8:	cbz	x0, 40a4b8 <ascii_strlower_n@plt+0x60a8>
  40a3fc:	cbz	x1, 40a4d8 <ascii_strlower_n@plt+0x60c8>
  40a400:	mov	x19, x2
  40a404:	cbz	x2, 40a4f8 <ascii_strlower_n@plt+0x60e8>
  40a408:	mov	x20, x4
  40a40c:	cbz	x4, 40a518 <ascii_strlower_n@plt+0x6108>
  40a410:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a414:	add	x2, x2, #0xd92
  40a418:	mov	w1, #0x61                  	// #97
  40a41c:	mov	x0, x19
  40a420:	bl	403d00 <sd_bus_message_enter_container@plt>
  40a424:	tbnz	w0, #31, 40a478 <ascii_strlower_n@plt+0x6068>
  40a428:	add	x2, x29, #0x18
  40a42c:	mov	x0, x19
  40a430:	mov	w1, wzr
  40a434:	str	xzr, [x29, #24]
  40a438:	bl	40a7dc <ascii_strlower_n@plt+0x63cc>
  40a43c:	mov	w21, w0
  40a440:	tbnz	w0, #31, 40a49c <ascii_strlower_n@plt+0x608c>
  40a444:	ldr	x1, [x29, #24]
  40a448:	cbz	w21, 40a480 <ascii_strlower_n@plt+0x6070>
  40a44c:	cbz	x1, 40a46c <ascii_strlower_n@plt+0x605c>
  40a450:	ldrb	w8, [x1]
  40a454:	cbz	w8, 40a46c <ascii_strlower_n@plt+0x605c>
  40a458:	mov	x0, x20
  40a45c:	str	xzr, [x29, #24]
  40a460:	bl	403f40 <strv_consume@plt>
  40a464:	tbnz	w0, #31, 40a498 <ascii_strlower_n@plt+0x6088>
  40a468:	ldr	x1, [x29, #24]
  40a46c:	mov	x0, x1
  40a470:	bl	403a30 <free@plt>
  40a474:	b	40a428 <ascii_strlower_n@plt+0x6018>
  40a478:	mov	w21, w0
  40a47c:	b	40a4a4 <ascii_strlower_n@plt+0x6094>
  40a480:	mov	x0, x1
  40a484:	bl	403a30 <free@plt>
  40a488:	mov	x0, x19
  40a48c:	bl	403d20 <sd_bus_message_exit_container@plt>
  40a490:	and	w21, w0, w0, asr #31
  40a494:	b	40a4a4 <ascii_strlower_n@plt+0x6094>
  40a498:	mov	w21, w0
  40a49c:	ldr	x0, [x29, #24]
  40a4a0:	bl	403a30 <free@plt>
  40a4a4:	mov	w0, w21
  40a4a8:	ldp	x20, x19, [sp, #32]
  40a4ac:	ldr	x21, [sp, #16]
  40a4b0:	ldp	x29, x30, [sp], #48
  40a4b4:	ret
  40a4b8:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a4bc:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40a4c0:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a4c4:	add	x1, x1, #0x8f4
  40a4c8:	add	x2, x2, #0xf07
  40a4cc:	add	x4, x4, #0xd3b
  40a4d0:	mov	w3, #0x513                 	// #1299
  40a4d4:	bl	403aa0 <log_assert_failed_realm@plt>
  40a4d8:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a4dc:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40a4e0:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a4e4:	add	x1, x1, #0xbc9
  40a4e8:	add	x2, x2, #0xf07
  40a4ec:	add	x4, x4, #0xd3b
  40a4f0:	mov	w3, #0x514                 	// #1300
  40a4f4:	b	40a534 <ascii_strlower_n@plt+0x6124>
  40a4f8:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a4fc:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40a500:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a504:	add	x1, x1, #0xbd0
  40a508:	add	x2, x2, #0xf07
  40a50c:	add	x4, x4, #0xd3b
  40a510:	mov	w3, #0x515                 	// #1301
  40a514:	b	40a534 <ascii_strlower_n@plt+0x6124>
  40a518:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a51c:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40a520:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a524:	add	x1, x1, #0xbd2
  40a528:	add	x2, x2, #0xf07
  40a52c:	add	x4, x4, #0xd3b
  40a530:	mov	w3, #0x516                 	// #1302
  40a534:	mov	w0, wzr
  40a538:	bl	403aa0 <log_assert_failed_realm@plt>
  40a53c:	stp	x29, x30, [sp, #-64]!
  40a540:	str	x23, [sp, #16]
  40a544:	stp	x22, x21, [sp, #32]
  40a548:	stp	x20, x19, [sp, #48]
  40a54c:	mov	x29, sp
  40a550:	mov	x19, x2
  40a554:	mov	x20, x1
  40a558:	mov	w21, w0
  40a55c:	bl	403b80 <colors_enabled@plt>
  40a560:	adrp	x23, 417000 <ascii_strlower_n@plt+0x12bf0>
  40a564:	adrp	x8, 418000 <ascii_strlower_n@plt+0x13bf0>
  40a568:	add	x23, x23, #0xff4
  40a56c:	add	x8, x8, #0xcf8
  40a570:	tst	w0, #0x1
  40a574:	csel	x22, x8, x23, ne  // ne = any
  40a578:	bl	403b80 <colors_enabled@plt>
  40a57c:	adrp	x8, 418000 <ascii_strlower_n@plt+0x13bf0>
  40a580:	add	x8, x8, #0xd02
  40a584:	tst	w0, #0x1
  40a588:	adrp	x0, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a58c:	csel	x4, x8, x23, ne  // ne = any
  40a590:	add	x0, x0, #0xdd5
  40a594:	mov	x1, x22
  40a598:	mov	w2, w21
  40a59c:	mov	x3, x20
  40a5a0:	bl	403a80 <printf@plt>
  40a5a4:	cbz	x19, 40a5cc <ascii_strlower_n@plt+0x61bc>
  40a5a8:	ldr	x1, [x19]
  40a5ac:	cbz	x1, 40a5cc <ascii_strlower_n@plt+0x61bc>
  40a5b0:	add	x20, x19, #0x8
  40a5b4:	adrp	x19, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a5b8:	add	x19, x19, #0xde7
  40a5bc:	mov	x0, x19
  40a5c0:	bl	403a80 <printf@plt>
  40a5c4:	ldr	x1, [x20], #8
  40a5c8:	cbnz	x1, 40a5bc <ascii_strlower_n@plt+0x61ac>
  40a5cc:	ldp	x20, x19, [sp, #48]
  40a5d0:	ldp	x22, x21, [sp, #32]
  40a5d4:	ldr	x23, [sp, #16]
  40a5d8:	mov	w0, #0xa                   	// #10
  40a5dc:	ldp	x29, x30, [sp], #64
  40a5e0:	b	403f50 <putchar@plt>
  40a5e4:	sub	sp, sp, #0x50
  40a5e8:	stp	x29, x30, [sp, #32]
  40a5ec:	add	x29, sp, #0x20
  40a5f0:	stp	x22, x21, [sp, #48]
  40a5f4:	stp	x20, x19, [sp, #64]
  40a5f8:	stur	xzr, [x29, #-8]
  40a5fc:	cbz	x0, 40a798 <ascii_strlower_n@plt+0x6388>
  40a600:	mov	x19, x2
  40a604:	cbz	x2, 40a7b8 <ascii_strlower_n@plt+0x63a8>
  40a608:	adrp	x8, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a60c:	adrp	x9, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a610:	add	x8, x8, #0xc17
  40a614:	add	x9, x9, #0xc12
  40a618:	tst	w1, #0x1
  40a61c:	mov	w20, w1
  40a620:	csel	x2, x9, x8, ne  // ne = any
  40a624:	mov	w1, #0x72                  	// #114
  40a628:	mov	x21, x0
  40a62c:	bl	403d00 <sd_bus_message_enter_container@plt>
  40a630:	cmp	w0, #0x1
  40a634:	b.lt	40a6f8 <ascii_strlower_n@plt+0x62e8>  // b.tstop
  40a638:	tbz	w20, #0, 40a654 <ascii_strlower_n@plt+0x6244>
  40a63c:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a640:	add	x1, x1, #0xc1b
  40a644:	sub	x2, x29, #0xc
  40a648:	mov	x0, x21
  40a64c:	bl	403d10 <sd_bus_message_read@plt>
  40a650:	tbnz	w0, #31, 40a6f8 <ascii_strlower_n@plt+0x62e8>
  40a654:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a658:	add	x1, x1, #0xc1b
  40a65c:	add	x2, sp, #0x10
  40a660:	mov	x0, x21
  40a664:	bl	403d10 <sd_bus_message_read@plt>
  40a668:	tbnz	w0, #31, 40a6f8 <ascii_strlower_n@plt+0x62e8>
  40a66c:	add	x2, sp, #0x8
  40a670:	mov	x3, sp
  40a674:	mov	w1, #0x79                  	// #121
  40a678:	mov	x0, x21
  40a67c:	bl	403d60 <sd_bus_message_read_array@plt>
  40a680:	tbnz	w0, #31, 40a6f8 <ascii_strlower_n@plt+0x62e8>
  40a684:	mov	x0, x21
  40a688:	bl	403d20 <sd_bus_message_exit_container@plt>
  40a68c:	tbnz	w0, #31, 40a6f8 <ascii_strlower_n@plt+0x62e8>
  40a690:	ldur	w8, [x29, #-12]
  40a694:	cbz	w8, 40a6a8 <ascii_strlower_n@plt+0x6298>
  40a698:	tbz	w20, #0, 40a6a8 <ascii_strlower_n@plt+0x6298>
  40a69c:	str	xzr, [x19]
  40a6a0:	mov	w22, #0x1                   	// #1
  40a6a4:	b	40a6fc <ascii_strlower_n@plt+0x62ec>
  40a6a8:	ldr	w20, [sp, #16]
  40a6ac:	orr	w8, w20, #0x8
  40a6b0:	cmp	w8, #0xa
  40a6b4:	b.ne	40a71c <ascii_strlower_n@plt+0x630c>  // b.any
  40a6b8:	ldr	x8, [sp]
  40a6bc:	cmp	w20, #0xa
  40a6c0:	mov	w9, #0x4                   	// #4
  40a6c4:	mov	w10, #0x10                  	// #16
  40a6c8:	csel	x9, x10, x9, eq  // eq = none
  40a6cc:	cmp	x8, x9
  40a6d0:	b.ne	40a75c <ascii_strlower_n@plt+0x634c>  // b.any
  40a6d4:	ldr	x1, [sp, #8]
  40a6d8:	sub	x2, x29, #0x8
  40a6dc:	mov	w0, w20
  40a6e0:	bl	403f60 <in_addr_to_string@plt>
  40a6e4:	tbnz	w0, #31, 40a6f8 <ascii_strlower_n@plt+0x62e8>
  40a6e8:	ldur	x8, [x29, #-8]
  40a6ec:	stur	xzr, [x29, #-8]
  40a6f0:	str	x8, [x19]
  40a6f4:	b	40a6a0 <ascii_strlower_n@plt+0x6290>
  40a6f8:	mov	w22, w0
  40a6fc:	ldur	x0, [x29, #-8]
  40a700:	bl	403a30 <free@plt>
  40a704:	mov	w0, w22
  40a708:	ldp	x20, x19, [sp, #64]
  40a70c:	ldp	x22, x21, [sp, #48]
  40a710:	ldp	x29, x30, [sp, #32]
  40a714:	add	sp, sp, #0x50
  40a718:	ret
  40a71c:	mov	w0, wzr
  40a720:	bl	4039b0 <log_get_max_level_realm@plt>
  40a724:	cmp	w0, #0x7
  40a728:	b.lt	40a69c <ascii_strlower_n@plt+0x628c>  // b.tstop
  40a72c:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40a730:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a734:	adrp	x5, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a738:	add	x2, x2, #0xf07
  40a73c:	add	x4, x4, #0xc1d
  40a740:	add	x5, x5, #0xc31
  40a744:	mov	w0, #0x7                   	// #7
  40a748:	mov	w3, #0x4ac                 	// #1196
  40a74c:	mov	w1, wzr
  40a750:	mov	w6, w20
  40a754:	bl	4039c0 <log_internal_realm@plt>
  40a758:	b	40a69c <ascii_strlower_n@plt+0x628c>
  40a75c:	mov	w0, wzr
  40a760:	bl	4039b0 <log_get_max_level_realm@plt>
  40a764:	cmp	w0, #0x7
  40a768:	b.lt	40a69c <ascii_strlower_n@plt+0x628c>  // b.tstop
  40a76c:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40a770:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a774:	adrp	x5, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a778:	add	x2, x2, #0xf07
  40a77c:	add	x4, x4, #0xc1d
  40a780:	add	x5, x5, #0xc51
  40a784:	mov	w0, #0x7                   	// #7
  40a788:	mov	w3, #0x4b3                 	// #1203
  40a78c:	mov	w1, wzr
  40a790:	bl	4039c0 <log_internal_realm@plt>
  40a794:	b	40a69c <ascii_strlower_n@plt+0x628c>
  40a798:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a79c:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40a7a0:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a7a4:	add	x1, x1, #0xbd0
  40a7a8:	add	x2, x2, #0xf07
  40a7ac:	add	x4, x4, #0xbd4
  40a7b0:	mov	w3, #0x48c                 	// #1164
  40a7b4:	bl	403aa0 <log_assert_failed_realm@plt>
  40a7b8:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a7bc:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40a7c0:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a7c4:	add	x1, x1, #0xc0e
  40a7c8:	add	x2, x2, #0xf07
  40a7cc:	add	x4, x4, #0xbd4
  40a7d0:	mov	w3, #0x48d                 	// #1165
  40a7d4:	mov	w0, wzr
  40a7d8:	bl	403aa0 <log_assert_failed_realm@plt>
  40a7dc:	sub	sp, sp, #0x30
  40a7e0:	stp	x29, x30, [sp, #16]
  40a7e4:	stp	x20, x19, [sp, #32]
  40a7e8:	add	x29, sp, #0x10
  40a7ec:	cbz	x0, 40a898 <ascii_strlower_n@plt+0x6488>
  40a7f0:	mov	x19, x2
  40a7f4:	cbz	x2, 40a8b8 <ascii_strlower_n@plt+0x64a8>
  40a7f8:	mov	w20, w1
  40a7fc:	tbz	w1, #0, 40a81c <ascii_strlower_n@plt+0x640c>
  40a800:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a804:	add	x1, x1, #0xdcd
  40a808:	sub	x2, x29, #0x4
  40a80c:	mov	x3, sp
  40a810:	add	x4, sp, #0x8
  40a814:	bl	403d10 <sd_bus_message_read@plt>
  40a818:	b	40a830 <ascii_strlower_n@plt+0x6420>
  40a81c:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a820:	add	x1, x1, #0xd92
  40a824:	mov	x2, sp
  40a828:	add	x3, sp, #0x8
  40a82c:	bl	403d10 <sd_bus_message_read@plt>
  40a830:	cmp	w0, #0x1
  40a834:	b.lt	40a874 <ascii_strlower_n@plt+0x6464>  // b.tstop
  40a838:	ldur	w8, [x29, #-4]
  40a83c:	cbz	w8, 40a84c <ascii_strlower_n@plt+0x643c>
  40a840:	tbz	w20, #0, 40a84c <ascii_strlower_n@plt+0x643c>
  40a844:	str	xzr, [x19]
  40a848:	b	40a870 <ascii_strlower_n@plt+0x6460>
  40a84c:	ldr	w8, [sp, #8]
  40a850:	ldr	x1, [sp]
  40a854:	cbz	w8, 40a884 <ascii_strlower_n@plt+0x6474>
  40a858:	adrp	x0, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a85c:	add	x0, x0, #0xdd3
  40a860:	mov	x2, xzr
  40a864:	bl	403f70 <strjoin_real@plt>
  40a868:	cbz	x0, 40a890 <ascii_strlower_n@plt+0x6480>
  40a86c:	str	x0, [x19]
  40a870:	mov	w0, #0x1                   	// #1
  40a874:	ldp	x20, x19, [sp, #32]
  40a878:	ldp	x29, x30, [sp, #16]
  40a87c:	add	sp, sp, #0x30
  40a880:	ret
  40a884:	mov	x0, x1
  40a888:	bl	403ae0 <strdup@plt>
  40a88c:	cbnz	x0, 40a86c <ascii_strlower_n@plt+0x645c>
  40a890:	mov	w0, #0xfffffff4            	// #-12
  40a894:	b	40a874 <ascii_strlower_n@plt+0x6464>
  40a898:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a89c:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40a8a0:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a8a4:	add	x1, x1, #0xbd0
  40a8a8:	add	x2, x2, #0xf07
  40a8ac:	add	x4, x4, #0xd97
  40a8b0:	mov	w3, #0x4f3                 	// #1267
  40a8b4:	bl	403aa0 <log_assert_failed_realm@plt>
  40a8b8:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a8bc:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40a8c0:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a8c4:	add	x1, x1, #0xc0e
  40a8c8:	add	x2, x2, #0xf07
  40a8cc:	add	x4, x4, #0xd97
  40a8d0:	mov	w3, #0x4f4                 	// #1268
  40a8d4:	mov	w0, wzr
  40a8d8:	bl	403aa0 <log_assert_failed_realm@plt>
  40a8dc:	stp	x29, x30, [sp, #-48]!
  40a8e0:	str	x21, [sp, #16]
  40a8e4:	stp	x20, x19, [sp, #32]
  40a8e8:	mov	x29, sp
  40a8ec:	cbz	x0, 40a9ac <ascii_strlower_n@plt+0x659c>
  40a8f0:	cbz	x1, 40a9cc <ascii_strlower_n@plt+0x65bc>
  40a8f4:	mov	x19, x2
  40a8f8:	cbz	x2, 40a9ec <ascii_strlower_n@plt+0x65dc>
  40a8fc:	mov	x20, x4
  40a900:	cbz	x4, 40aa0c <ascii_strlower_n@plt+0x65fc>
  40a904:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a908:	add	x2, x2, #0xe79
  40a90c:	mov	w1, #0x61                  	// #97
  40a910:	mov	x0, x19
  40a914:	bl	403d00 <sd_bus_message_enter_container@plt>
  40a918:	tbnz	w0, #31, 40a96c <ascii_strlower_n@plt+0x655c>
  40a91c:	add	x2, x29, #0x18
  40a920:	mov	w1, #0x1                   	// #1
  40a924:	mov	x0, x19
  40a928:	str	xzr, [x29, #24]
  40a92c:	bl	40a5e4 <ascii_strlower_n@plt+0x61d4>
  40a930:	mov	w21, w0
  40a934:	tbnz	w0, #31, 40a990 <ascii_strlower_n@plt+0x6580>
  40a938:	ldr	x1, [x29, #24]
  40a93c:	cbz	w21, 40a974 <ascii_strlower_n@plt+0x6564>
  40a940:	cbz	x1, 40a960 <ascii_strlower_n@plt+0x6550>
  40a944:	ldrb	w8, [x1]
  40a948:	cbz	w8, 40a960 <ascii_strlower_n@plt+0x6550>
  40a94c:	mov	x0, x20
  40a950:	str	xzr, [x29, #24]
  40a954:	bl	403f40 <strv_consume@plt>
  40a958:	tbnz	w0, #31, 40a98c <ascii_strlower_n@plt+0x657c>
  40a95c:	ldr	x1, [x29, #24]
  40a960:	mov	x0, x1
  40a964:	bl	403a30 <free@plt>
  40a968:	b	40a91c <ascii_strlower_n@plt+0x650c>
  40a96c:	mov	w21, w0
  40a970:	b	40a998 <ascii_strlower_n@plt+0x6588>
  40a974:	mov	x0, x1
  40a978:	bl	403a30 <free@plt>
  40a97c:	mov	x0, x19
  40a980:	bl	403d20 <sd_bus_message_exit_container@plt>
  40a984:	and	w21, w0, w0, asr #31
  40a988:	b	40a998 <ascii_strlower_n@plt+0x6588>
  40a98c:	mov	w21, w0
  40a990:	ldr	x0, [x29, #24]
  40a994:	bl	403a30 <free@plt>
  40a998:	mov	w0, w21
  40a99c:	ldp	x20, x19, [sp, #32]
  40a9a0:	ldr	x21, [sp, #16]
  40a9a4:	ldp	x29, x30, [sp], #48
  40a9a8:	ret
  40a9ac:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a9b0:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40a9b4:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a9b8:	add	x1, x1, #0x8f4
  40a9bc:	add	x2, x2, #0xf07
  40a9c0:	add	x4, x4, #0xf9a
  40a9c4:	mov	w3, #0x5f9                 	// #1529
  40a9c8:	bl	403aa0 <log_assert_failed_realm@plt>
  40a9cc:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a9d0:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40a9d4:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a9d8:	add	x1, x1, #0xbc9
  40a9dc:	add	x2, x2, #0xf07
  40a9e0:	add	x4, x4, #0xf9a
  40a9e4:	mov	w3, #0x5fa                 	// #1530
  40a9e8:	b	40aa28 <ascii_strlower_n@plt+0x6618>
  40a9ec:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a9f0:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40a9f4:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  40a9f8:	add	x1, x1, #0xbd0
  40a9fc:	add	x2, x2, #0xf07
  40aa00:	add	x4, x4, #0xf9a
  40aa04:	mov	w3, #0x5fb                 	// #1531
  40aa08:	b	40aa28 <ascii_strlower_n@plt+0x6618>
  40aa0c:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40aa10:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40aa14:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  40aa18:	add	x1, x1, #0xbd2
  40aa1c:	add	x2, x2, #0xf07
  40aa20:	add	x4, x4, #0xf9a
  40aa24:	mov	w3, #0x5fc                 	// #1532
  40aa28:	mov	w0, wzr
  40aa2c:	bl	403aa0 <log_assert_failed_realm@plt>
  40aa30:	stp	x29, x30, [sp, #-16]!
  40aa34:	mov	x0, x2
  40aa38:	mov	x29, sp
  40aa3c:	cbz	x2, 40aa54 <ascii_strlower_n@plt+0x6644>
  40aa40:	cbz	x4, 40aa74 <ascii_strlower_n@plt+0x6664>
  40aa44:	mov	w1, #0x1                   	// #1
  40aa48:	mov	x2, x4
  40aa4c:	ldp	x29, x30, [sp], #16
  40aa50:	b	40a5e4 <ascii_strlower_n@plt+0x61d4>
  40aa54:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40aa58:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40aa5c:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  40aa60:	add	x1, x1, #0xbd0
  40aa64:	add	x2, x2, #0xf07
  40aa68:	add	x4, x4, #0xff7
  40aa6c:	mov	w3, #0x61b                 	// #1563
  40aa70:	bl	403aa0 <log_assert_failed_realm@plt>
  40aa74:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40aa78:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40aa7c:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  40aa80:	add	x1, x1, #0xd32
  40aa84:	add	x2, x2, #0xf07
  40aa88:	add	x4, x4, #0xff7
  40aa8c:	mov	w3, #0x61c                 	// #1564
  40aa90:	mov	w0, wzr
  40aa94:	bl	403aa0 <log_assert_failed_realm@plt>
  40aa98:	stp	x29, x30, [sp, #-48]!
  40aa9c:	str	x21, [sp, #16]
  40aaa0:	stp	x20, x19, [sp, #32]
  40aaa4:	mov	x29, sp
  40aaa8:	cbz	x0, 40ab68 <ascii_strlower_n@plt+0x6758>
  40aaac:	cbz	x1, 40ab88 <ascii_strlower_n@plt+0x6778>
  40aab0:	mov	x19, x2
  40aab4:	cbz	x2, 40aba8 <ascii_strlower_n@plt+0x6798>
  40aab8:	mov	x20, x4
  40aabc:	cbz	x4, 40abc8 <ascii_strlower_n@plt+0x67b8>
  40aac0:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf0>
  40aac4:	add	x2, x2, #0xdcd
  40aac8:	mov	w1, #0x61                  	// #97
  40aacc:	mov	x0, x19
  40aad0:	bl	403d00 <sd_bus_message_enter_container@plt>
  40aad4:	tbnz	w0, #31, 40ab28 <ascii_strlower_n@plt+0x6718>
  40aad8:	add	x2, x29, #0x18
  40aadc:	mov	w1, #0x1                   	// #1
  40aae0:	mov	x0, x19
  40aae4:	str	xzr, [x29, #24]
  40aae8:	bl	40a7dc <ascii_strlower_n@plt+0x63cc>
  40aaec:	mov	w21, w0
  40aaf0:	tbnz	w0, #31, 40ab4c <ascii_strlower_n@plt+0x673c>
  40aaf4:	ldr	x1, [x29, #24]
  40aaf8:	cbz	w21, 40ab30 <ascii_strlower_n@plt+0x6720>
  40aafc:	cbz	x1, 40ab1c <ascii_strlower_n@plt+0x670c>
  40ab00:	ldrb	w8, [x1]
  40ab04:	cbz	w8, 40ab1c <ascii_strlower_n@plt+0x670c>
  40ab08:	mov	x0, x20
  40ab0c:	str	xzr, [x29, #24]
  40ab10:	bl	403f40 <strv_consume@plt>
  40ab14:	tbnz	w0, #31, 40ab48 <ascii_strlower_n@plt+0x6738>
  40ab18:	ldr	x1, [x29, #24]
  40ab1c:	mov	x0, x1
  40ab20:	bl	403a30 <free@plt>
  40ab24:	b	40aad8 <ascii_strlower_n@plt+0x66c8>
  40ab28:	mov	w21, w0
  40ab2c:	b	40ab54 <ascii_strlower_n@plt+0x6744>
  40ab30:	mov	x0, x1
  40ab34:	bl	403a30 <free@plt>
  40ab38:	mov	x0, x19
  40ab3c:	bl	403d20 <sd_bus_message_exit_container@plt>
  40ab40:	and	w21, w0, w0, asr #31
  40ab44:	b	40ab54 <ascii_strlower_n@plt+0x6744>
  40ab48:	mov	w21, w0
  40ab4c:	ldr	x0, [x29, #24]
  40ab50:	bl	403a30 <free@plt>
  40ab54:	mov	w0, w21
  40ab58:	ldp	x20, x19, [sp, #32]
  40ab5c:	ldr	x21, [sp, #16]
  40ab60:	ldp	x29, x30, [sp], #48
  40ab64:	ret
  40ab68:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40ab6c:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40ab70:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40ab74:	add	x1, x1, #0x8f4
  40ab78:	add	x2, x2, #0xf07
  40ab7c:	add	x4, x4, #0x5b
  40ab80:	mov	w3, #0x625                 	// #1573
  40ab84:	bl	403aa0 <log_assert_failed_realm@plt>
  40ab88:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40ab8c:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40ab90:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40ab94:	add	x1, x1, #0xbc9
  40ab98:	add	x2, x2, #0xf07
  40ab9c:	add	x4, x4, #0x5b
  40aba0:	mov	w3, #0x626                 	// #1574
  40aba4:	b	40abe4 <ascii_strlower_n@plt+0x67d4>
  40aba8:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40abac:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40abb0:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40abb4:	add	x1, x1, #0xbd0
  40abb8:	add	x2, x2, #0xf07
  40abbc:	add	x4, x4, #0x5b
  40abc0:	mov	w3, #0x627                 	// #1575
  40abc4:	b	40abe4 <ascii_strlower_n@plt+0x67d4>
  40abc8:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40abcc:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40abd0:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40abd4:	add	x1, x1, #0xbd2
  40abd8:	add	x2, x2, #0xf07
  40abdc:	add	x4, x4, #0x5b
  40abe0:	mov	w3, #0x628                 	// #1576
  40abe4:	mov	w0, wzr
  40abe8:	bl	403aa0 <log_assert_failed_realm@plt>
  40abec:	stp	x29, x30, [sp, #-48]!
  40abf0:	str	x21, [sp, #16]
  40abf4:	stp	x20, x19, [sp, #32]
  40abf8:	mov	x29, sp
  40abfc:	mov	x19, x0
  40ac00:	bl	403b80 <colors_enabled@plt>
  40ac04:	adrp	x21, 417000 <ascii_strlower_n@plt+0x12bf0>
  40ac08:	adrp	x8, 418000 <ascii_strlower_n@plt+0x13bf0>
  40ac0c:	add	x21, x21, #0xff4
  40ac10:	add	x8, x8, #0xcf8
  40ac14:	tst	w0, #0x1
  40ac18:	csel	x20, x8, x21, ne  // ne = any
  40ac1c:	bl	403b80 <colors_enabled@plt>
  40ac20:	adrp	x8, 418000 <ascii_strlower_n@plt+0x13bf0>
  40ac24:	add	x8, x8, #0xd02
  40ac28:	tst	w0, #0x1
  40ac2c:	adrp	x0, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40ac30:	csel	x2, x8, x21, ne  // ne = any
  40ac34:	add	x0, x0, #0xb4
  40ac38:	mov	x1, x20
  40ac3c:	bl	403a80 <printf@plt>
  40ac40:	cbz	x19, 40ac68 <ascii_strlower_n@plt+0x6858>
  40ac44:	ldr	x1, [x19]
  40ac48:	cbz	x1, 40ac68 <ascii_strlower_n@plt+0x6858>
  40ac4c:	add	x20, x19, #0x8
  40ac50:	adrp	x19, 419000 <ascii_strlower_n@plt+0x14bf0>
  40ac54:	add	x19, x19, #0xde7
  40ac58:	mov	x0, x19
  40ac5c:	bl	403a80 <printf@plt>
  40ac60:	ldr	x1, [x20], #8
  40ac64:	cbnz	x1, 40ac58 <ascii_strlower_n@plt+0x6848>
  40ac68:	ldp	x20, x19, [sp, #32]
  40ac6c:	ldr	x21, [sp, #16]
  40ac70:	mov	w0, #0xa                   	// #10
  40ac74:	ldp	x29, x30, [sp], #48
  40ac78:	b	403f50 <putchar@plt>
  40ac7c:	sub	sp, sp, #0xe0
  40ac80:	stp	x29, x30, [sp, #128]
  40ac84:	add	x29, sp, #0x80
  40ac88:	stp	x28, x27, [sp, #144]
  40ac8c:	stp	x26, x25, [sp, #160]
  40ac90:	stp	x24, x23, [sp, #176]
  40ac94:	stp	x22, x21, [sp, #192]
  40ac98:	stp	x20, x19, [sp, #208]
  40ac9c:	stp	xzr, xzr, [x29, #-40]
  40aca0:	stp	xzr, xzr, [sp, #64]
  40aca4:	str	xzr, [sp, #80]
  40aca8:	cbz	x1, 40b47c <ascii_strlower_n@plt+0x706c>
  40acac:	mov	x20, x0
  40acb0:	mov	w0, wzr
  40acb4:	mov	w21, w3
  40acb8:	mov	w22, w2
  40acbc:	mov	x19, x1
  40acc0:	bl	4039b0 <log_get_max_level_realm@plt>
  40acc4:	cmp	w0, #0x7
  40acc8:	b.lt	40ad34 <ascii_strlower_n@plt+0x6924>  // b.tstop
  40accc:	mov	w0, w22
  40acd0:	bl	4172d4 <ascii_strlower_n@plt+0x12ec4>
  40acd4:	mov	x23, x0
  40acd8:	and	w0, w21, #0xffff
  40acdc:	bl	416ad4 <ascii_strlower_n@plt+0x126c4>
  40ace0:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40ace4:	ldr	x9, [x8, #40]
  40ace8:	mov	x8, x0
  40acec:	cbz	x9, 40acf8 <ascii_strlower_n@plt+0x68e8>
  40acf0:	ldrb	w10, [x9]
  40acf4:	cbnz	w10, 40ad00 <ascii_strlower_n@plt+0x68f0>
  40acf8:	adrp	x9, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40acfc:	add	x9, x9, #0x142
  40ad00:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40ad04:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40ad08:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40ad0c:	add	x2, x2, #0xf07
  40ad10:	add	x4, x4, #0x110
  40ad14:	add	x5, x5, #0x11f
  40ad18:	mov	w0, #0x7                   	// #7
  40ad1c:	mov	w3, #0x1a4                 	// #420
  40ad20:	mov	w1, wzr
  40ad24:	mov	x6, x19
  40ad28:	mov	x7, x23
  40ad2c:	stp	x8, x9, [sp]
  40ad30:	bl	4039c0 <log_internal_realm@plt>
  40ad34:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf0>
  40ad38:	adrp	x3, 419000 <ascii_strlower_n@plt+0x14bf0>
  40ad3c:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40ad40:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40ad44:	add	x2, x2, #0x9a6
  40ad48:	add	x3, x3, #0xe87
  40ad4c:	add	x4, x4, #0x144
  40ad50:	add	x5, x5, #0x165
  40ad54:	sub	x1, x29, #0x20
  40ad58:	mov	x0, x20
  40ad5c:	bl	403cb0 <sd_bus_message_new_method_call@plt>
  40ad60:	tbnz	w0, #31, 40b15c <ascii_strlower_n@plt+0x6d4c>
  40ad64:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40ad68:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40ad6c:	ldur	x0, [x29, #-32]
  40ad70:	ldr	w2, [x8, #56]
  40ad74:	ldr	x6, [x9, #72]
  40ad78:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40ad7c:	and	w4, w22, #0xffff
  40ad80:	and	w5, w21, #0xffff
  40ad84:	add	x1, x1, #0x194
  40ad88:	mov	x3, x19
  40ad8c:	bl	403cc0 <sd_bus_message_append@plt>
  40ad90:	tbnz	w0, #31, 40b198 <ascii_strlower_n@plt+0x6d88>
  40ad94:	mov	w0, #0x1                   	// #1
  40ad98:	bl	403ce0 <now@plt>
  40ad9c:	ldur	x1, [x29, #-32]
  40ada0:	mov	w2, #0xe00                 	// #3584
  40ada4:	mov	x22, x0
  40ada8:	add	x3, sp, #0x40
  40adac:	sub	x4, x29, #0x28
  40adb0:	movk	w2, #0x727, lsl #16
  40adb4:	mov	x0, x20
  40adb8:	bl	403cf0 <sd_bus_call@plt>
  40adbc:	tbnz	w0, #31, 40b1e0 <ascii_strlower_n@plt+0x6dd0>
  40adc0:	mov	w0, #0x1                   	// #1
  40adc4:	bl	403ce0 <now@plt>
  40adc8:	ldur	x8, [x29, #-40]
  40adcc:	adrp	x2, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40add0:	mov	x21, x0
  40add4:	add	x2, x2, #0x1b6
  40add8:	mov	w1, #0x61                  	// #97
  40addc:	mov	x0, x8
  40ade0:	bl	403d00 <sd_bus_message_enter_container@plt>
  40ade4:	tbnz	w0, #31, 40b240 <ascii_strlower_n@plt+0x6e30>
  40ade8:	sub	x8, x21, x22
  40adec:	adrp	x22, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40adf0:	adrp	x23, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40adf4:	adrp	x24, 417000 <ascii_strlower_n@plt+0x12bf0>
  40adf8:	adrp	x27, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40adfc:	mov	w25, wzr
  40ae00:	mov	w26, wzr
  40ae04:	add	x22, x22, #0x1de
  40ae08:	add	x23, x23, #0x1e4
  40ae0c:	add	x24, x24, #0xf07
  40ae10:	add	x27, x27, #0x110
  40ae14:	str	x8, [sp, #16]
  40ae18:	ldur	x0, [x29, #-40]
  40ae1c:	mov	w1, #0x72                  	// #114
  40ae20:	mov	x2, x22
  40ae24:	bl	403d00 <sd_bus_message_enter_container@plt>
  40ae28:	cmp	w0, #0x1
  40ae2c:	b.lt	40b284 <ascii_strlower_n@plt+0x6e74>  // b.tstop
  40ae30:	ldur	x0, [x29, #-40]
  40ae34:	add	x2, sp, #0x34
  40ae38:	add	x3, sp, #0x3c
  40ae3c:	add	x4, sp, #0x38
  40ae40:	mov	x1, x23
  40ae44:	bl	403d10 <sd_bus_message_read@plt>
  40ae48:	tbnz	w0, #31, 40aeb4 <ascii_strlower_n@plt+0x6aa4>
  40ae4c:	ldur	x0, [x29, #-40]
  40ae50:	add	x2, sp, #0x28
  40ae54:	add	x3, sp, #0x20
  40ae58:	mov	w1, #0x79                  	// #121
  40ae5c:	bl	403d60 <sd_bus_message_read_array@plt>
  40ae60:	tbnz	w0, #31, 40aed4 <ascii_strlower_n@plt+0x6ac4>
  40ae64:	ldur	x0, [x29, #-40]
  40ae68:	bl	403d20 <sd_bus_message_exit_container@plt>
  40ae6c:	tbnz	w0, #31, 40aef4 <ascii_strlower_n@plt+0x6ae4>
  40ae70:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40ae74:	ldr	w8, [x8, #88]
  40ae78:	cmp	w8, #0x2
  40ae7c:	b.ne	40af44 <ascii_strlower_n@plt+0x6b34>  // b.any
  40ae80:	adrp	x20, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40ae84:	ldr	x8, [sp, #32]
  40ae88:	ldr	x3, [x20, #176]
  40ae8c:	sub	x0, x29, #0x8
  40ae90:	mov	w1, #0x8                   	// #8
  40ae94:	mov	w2, #0x1                   	// #1
  40ae98:	stur	x8, [x29, #-8]
  40ae9c:	bl	403f80 <fwrite@plt>
  40aea0:	ldp	x2, x0, [sp, #32]
  40aea4:	ldr	x3, [x20, #176]
  40aea8:	mov	w1, #0x1                   	// #1
  40aeac:	bl	403f80 <fwrite@plt>
  40aeb0:	b	40b134 <ascii_strlower_n@plt+0x6d24>
  40aeb4:	mov	w20, w0
  40aeb8:	mov	w0, wzr
  40aebc:	bl	4039b0 <log_get_max_level_realm@plt>
  40aec0:	cmp	w0, #0x3
  40aec4:	b.lt	40af34 <ascii_strlower_n@plt+0x6b24>  // b.tstop
  40aec8:	mov	w0, #0x3                   	// #3
  40aecc:	mov	w3, #0x1cd                 	// #461
  40aed0:	b	40af10 <ascii_strlower_n@plt+0x6b00>
  40aed4:	mov	w20, w0
  40aed8:	mov	w0, wzr
  40aedc:	bl	4039b0 <log_get_max_level_realm@plt>
  40aee0:	cmp	w0, #0x3
  40aee4:	b.lt	40af34 <ascii_strlower_n@plt+0x6b24>  // b.tstop
  40aee8:	mov	w0, #0x3                   	// #3
  40aeec:	mov	w3, #0x1d1                 	// #465
  40aef0:	b	40af10 <ascii_strlower_n@plt+0x6b00>
  40aef4:	mov	w20, w0
  40aef8:	mov	w0, wzr
  40aefc:	bl	4039b0 <log_get_max_level_realm@plt>
  40af00:	cmp	w0, #0x3
  40af04:	b.lt	40af34 <ascii_strlower_n@plt+0x6b24>  // b.tstop
  40af08:	mov	w0, #0x3                   	// #3
  40af0c:	mov	w3, #0x1d5                 	// #469
  40af10:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40af14:	mov	w1, w20
  40af18:	mov	x2, x24
  40af1c:	mov	x4, x27
  40af20:	add	x5, x5, #0x1be
  40af24:	bl	4039c0 <log_internal_realm@plt>
  40af28:	mov	w21, w0
  40af2c:	mov	w8, wzr
  40af30:	b	40b148 <ascii_strlower_n@plt+0x6d38>
  40af34:	mov	w8, wzr
  40af38:	neg	w9, w20
  40af3c:	sub	w21, w8, w9, uxtb
  40af40:	b	40b148 <ascii_strlower_n@plt+0x6d38>
  40af44:	str	w26, [sp, #28]
  40af48:	mov	w26, w25
  40af4c:	mov	x25, x24
  40af50:	mov	x24, x27
  40af54:	ldp	x27, x20, [sp, #32]
  40af58:	ldr	w28, [sp, #52]
  40af5c:	sub	x0, x29, #0x10
  40af60:	mov	w3, #0xffff                	// #65535
  40af64:	mov	w1, wzr
  40af68:	mov	x2, xzr
  40af6c:	stp	xzr, xzr, [x29, #-16]
  40af70:	bl	40d3b8 <ascii_strlower_n@plt+0x8fa8>
  40af74:	tbnz	w0, #31, 40affc <ascii_strlower_n@plt+0x6bec>
  40af78:	ldur	x0, [x29, #-16]
  40af7c:	mov	x1, x20
  40af80:	mov	x2, x27
  40af84:	mov	x3, xzr
  40af88:	ldrb	w8, [x0, #160]
  40af8c:	orr	w8, w8, #0x4
  40af90:	strb	w8, [x0, #160]
  40af94:	bl	40da24 <ascii_strlower_n@plt+0x9614>
  40af98:	tbnz	w0, #31, 40b004 <ascii_strlower_n@plt+0x6bf4>
  40af9c:	ldur	x0, [x29, #-16]
  40afa0:	sub	x1, x29, #0x8
  40afa4:	mov	x2, xzr
  40afa8:	mov	x3, xzr
  40afac:	bl	40f984 <ascii_strlower_n@plt+0xb574>
  40afb0:	mov	x27, x24
  40afb4:	tbnz	w0, #31, 40b028 <ascii_strlower_n@plt+0x6c18>
  40afb8:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40afbc:	ldr	w8, [x8, #88]
  40afc0:	mov	x20, x25
  40afc4:	cmp	w8, #0x1
  40afc8:	b.ne	40b060 <ascii_strlower_n@plt+0x6c50>  // b.any
  40afcc:	ldur	x0, [x29, #-8]
  40afd0:	sub	x1, x29, #0x18
  40afd4:	bl	413500 <ascii_strlower_n@plt+0xf0f0>
  40afd8:	mov	x28, x0
  40afdc:	tbnz	x0, #63, 40b0a8 <ascii_strlower_n@plt+0x6c98>
  40afe0:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40afe4:	ldur	x0, [x29, #-24]
  40afe8:	ldr	x3, [x8, #176]
  40afec:	mov	w1, #0x1                   	// #1
  40aff0:	mov	x2, x28
  40aff4:	bl	403f80 <fwrite@plt>
  40aff8:	b	40b094 <ascii_strlower_n@plt+0x6c84>
  40affc:	mov	w2, #0x175                 	// #373
  40b000:	b	40b008 <ascii_strlower_n@plt+0x6bf8>
  40b004:	mov	w2, #0x17b                 	// #379
  40b008:	adrp	x3, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b00c:	mov	w0, wzr
  40b010:	mov	x1, x25
  40b014:	add	x3, x3, #0x336
  40b018:	bl	403a20 <log_oom_internal@plt>
  40b01c:	mov	w28, w0
  40b020:	mov	x27, x24
  40b024:	b	40b10c <ascii_strlower_n@plt+0x6cfc>
  40b028:	mov	w20, w0
  40b02c:	mov	w0, wzr
  40b030:	bl	4039b0 <log_get_max_level_realm@plt>
  40b034:	cmp	w0, #0x3
  40b038:	b.lt	40b09c <ascii_strlower_n@plt+0x6c8c>  // b.tstop
  40b03c:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b040:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b044:	mov	w0, #0x3                   	// #3
  40b048:	mov	w3, #0x17f                 	// #383
  40b04c:	mov	w1, w20
  40b050:	mov	x2, x25
  40b054:	add	x4, x4, #0x336
  40b058:	add	x5, x5, #0x347
  40b05c:	b	40b0d8 <ascii_strlower_n@plt+0x6cc8>
  40b060:	ldur	x0, [x29, #-8]
  40b064:	bl	4128bc <ascii_strlower_n@plt+0xe4ac>
  40b068:	cbz	x0, 40b0e0 <ascii_strlower_n@plt+0x6cd0>
  40b06c:	mov	x1, x0
  40b070:	adrp	x0, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b074:	add	x0, x0, #0x371
  40b078:	bl	403a80 <printf@plt>
  40b07c:	mov	w1, w28
  40b080:	bl	40bad4 <ascii_strlower_n@plt+0x76c4>
  40b084:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40b088:	ldr	x1, [x8, #176]
  40b08c:	mov	w0, #0xa                   	// #10
  40b090:	bl	403d40 <fputc@plt>
  40b094:	mov	w28, wzr
  40b098:	b	40b10c <ascii_strlower_n@plt+0x6cfc>
  40b09c:	mov	w8, wzr
  40b0a0:	neg	w9, w20
  40b0a4:	b	40b108 <ascii_strlower_n@plt+0x6cf8>
  40b0a8:	mov	w0, wzr
  40b0ac:	bl	4039b0 <log_get_max_level_realm@plt>
  40b0b0:	cmp	w0, #0x3
  40b0b4:	b.lt	40b0fc <ascii_strlower_n@plt+0x6cec>  // b.tstop
  40b0b8:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b0bc:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b0c0:	mov	w0, #0x3                   	// #3
  40b0c4:	mov	w3, #0x187                 	// #391
  40b0c8:	mov	w1, w28
  40b0cc:	mov	x2, x20
  40b0d0:	add	x4, x4, #0x336
  40b0d4:	add	x5, x5, #0x35e
  40b0d8:	bl	4039c0 <log_internal_realm@plt>
  40b0dc:	b	40b0f4 <ascii_strlower_n@plt+0x6ce4>
  40b0e0:	adrp	x3, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b0e4:	mov	w2, #0x18f                 	// #399
  40b0e8:	mov	x1, x20
  40b0ec:	add	x3, x3, #0x336
  40b0f0:	bl	403a20 <log_oom_internal@plt>
  40b0f4:	mov	w28, w0
  40b0f8:	b	40b10c <ascii_strlower_n@plt+0x6cfc>
  40b0fc:	cmp	w28, #0x0
  40b100:	mov	w8, wzr
  40b104:	cneg	w9, w28, mi  // mi = first
  40b108:	sub	w28, w8, w9, uxtb
  40b10c:	ldur	x0, [x29, #-16]
  40b110:	cbz	x0, 40b118 <ascii_strlower_n@plt+0x6d08>
  40b114:	bl	40d6d0 <ascii_strlower_n@plt+0x92c0>
  40b118:	ldur	x0, [x29, #-8]
  40b11c:	mov	x24, x25
  40b120:	cbz	x0, 40b128 <ascii_strlower_n@plt+0x6d18>
  40b124:	bl	411e90 <ascii_strlower_n@plt+0xda80>
  40b128:	mov	w25, w26
  40b12c:	ldr	w26, [sp, #28]
  40b130:	tbnz	w28, #31, 40b150 <ascii_strlower_n@plt+0x6d40>
  40b134:	ldrh	w0, [sp, #56]
  40b138:	bl	417258 <ascii_strlower_n@plt+0x12e48>
  40b13c:	orr	w25, w25, w0
  40b140:	add	w26, w26, #0x1
  40b144:	mov	w8, #0x1                   	// #1
  40b148:	tbnz	w8, #0, 40ae18 <ascii_strlower_n@plt+0x6a08>
  40b14c:	b	40b3f4 <ascii_strlower_n@plt+0x6fe4>
  40b150:	mov	w8, wzr
  40b154:	mov	w21, w28
  40b158:	b	40b148 <ascii_strlower_n@plt+0x6d38>
  40b15c:	mov	w23, w0
  40b160:	mov	w0, wzr
  40b164:	bl	4039b0 <log_get_max_level_realm@plt>
  40b168:	cmp	w0, #0x3
  40b16c:	b.lt	40b1d4 <ascii_strlower_n@plt+0x6dc4>  // b.tstop
  40b170:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40b174:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b178:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b17c:	add	x2, x2, #0xf07
  40b180:	add	x4, x4, #0x110
  40b184:	add	x5, x5, #0x173
  40b188:	mov	w0, #0x3                   	// #3
  40b18c:	mov	w3, #0x1ae                 	// #430
  40b190:	mov	w1, w23
  40b194:	b	40b278 <ascii_strlower_n@plt+0x6e68>
  40b198:	mov	w21, w0
  40b19c:	mov	w0, wzr
  40b1a0:	bl	4039b0 <log_get_max_level_realm@plt>
  40b1a4:	cmp	w0, #0x3
  40b1a8:	b.lt	40b234 <ascii_strlower_n@plt+0x6e24>  // b.tstop
  40b1ac:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40b1b0:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b1b4:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b1b8:	add	x2, x2, #0xf07
  40b1bc:	add	x4, x4, #0x110
  40b1c0:	add	x5, x5, #0x173
  40b1c4:	mov	w0, #0x3                   	// #3
  40b1c8:	mov	w3, #0x1b2                 	// #434
  40b1cc:	mov	w1, w21
  40b1d0:	b	40b278 <ascii_strlower_n@plt+0x6e68>
  40b1d4:	mov	w8, wzr
  40b1d8:	neg	w9, w23
  40b1dc:	b	40b3f0 <ascii_strlower_n@plt+0x6fe0>
  40b1e0:	mov	w21, w0
  40b1e4:	mov	w0, wzr
  40b1e8:	bl	4039b0 <log_get_max_level_realm@plt>
  40b1ec:	cmp	w0, #0x3
  40b1f0:	b.lt	40b3f4 <ascii_strlower_n@plt+0x6fe4>  // b.tstop
  40b1f4:	add	x0, sp, #0x40
  40b1f8:	mov	w1, w21
  40b1fc:	bl	403d70 <bus_error_message@plt>
  40b200:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40b204:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b208:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b20c:	mov	x7, x0
  40b210:	add	x2, x2, #0xf07
  40b214:	add	x4, x4, #0x110
  40b218:	add	x5, x5, #0x19a
  40b21c:	mov	w0, #0x3                   	// #3
  40b220:	mov	w3, #0x1b9                 	// #441
  40b224:	mov	w1, wzr
  40b228:	mov	x6, x19
  40b22c:	bl	4039c0 <log_internal_realm@plt>
  40b230:	b	40b3f4 <ascii_strlower_n@plt+0x6fe4>
  40b234:	mov	w8, wzr
  40b238:	neg	w9, w21
  40b23c:	b	40b3f0 <ascii_strlower_n@plt+0x6fe0>
  40b240:	mov	w20, w0
  40b244:	mov	w0, wzr
  40b248:	bl	4039b0 <log_get_max_level_realm@plt>
  40b24c:	cmp	w0, #0x3
  40b250:	b.lt	40b3e8 <ascii_strlower_n@plt+0x6fd8>  // b.tstop
  40b254:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40b258:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b25c:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b260:	add	x2, x2, #0xf07
  40b264:	add	x4, x4, #0x110
  40b268:	add	x5, x5, #0x1be
  40b26c:	mov	w0, #0x3                   	// #3
  40b270:	mov	w3, #0x1c1                 	// #449
  40b274:	mov	w1, w20
  40b278:	bl	4039c0 <log_internal_realm@plt>
  40b27c:	mov	w21, w0
  40b280:	b	40b3f4 <ascii_strlower_n@plt+0x6fe4>
  40b284:	mov	w28, w0
  40b288:	tbnz	w0, #31, 40b334 <ascii_strlower_n@plt+0x6f24>
  40b28c:	ldur	x0, [x29, #-40]
  40b290:	bl	403d20 <sd_bus_message_exit_container@plt>
  40b294:	tbnz	w0, #31, 40b36c <ascii_strlower_n@plt+0x6f5c>
  40b298:	ldur	x0, [x29, #-40]
  40b29c:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40b2a0:	add	x1, x1, #0x860
  40b2a4:	sub	x2, x29, #0x8
  40b2a8:	bl	403d10 <sd_bus_message_read@plt>
  40b2ac:	tbnz	w0, #31, 40b3b0 <ascii_strlower_n@plt+0x6fa0>
  40b2b0:	cbz	w26, 40b438 <ascii_strlower_n@plt+0x7028>
  40b2b4:	ldur	x0, [x29, #-8]
  40b2b8:	ldr	x1, [sp, #16]
  40b2bc:	bl	40b970 <ascii_strlower_n@plt+0x7560>
  40b2c0:	ldurb	w8, [x29, #-7]
  40b2c4:	mov	w21, wzr
  40b2c8:	tbnz	w8, #1, 40b3f4 <ascii_strlower_n@plt+0x6fe4>
  40b2cc:	eor	w8, w25, #0x1
  40b2d0:	tbnz	w8, #0, 40b3f4 <ascii_strlower_n@plt+0x6fe4>
  40b2d4:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40b2d8:	ldr	x0, [x8, #176]
  40b2dc:	bl	403f90 <fflush@plt>
  40b2e0:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40b2e4:	ldr	x19, [x8, #184]
  40b2e8:	bl	403b80 <colors_enabled@plt>
  40b2ec:	adrp	x21, 417000 <ascii_strlower_n@plt+0x12bf0>
  40b2f0:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b2f4:	add	x21, x21, #0xff4
  40b2f8:	add	x8, x8, #0x4a0
  40b2fc:	tst	w0, #0x1
  40b300:	csel	x20, x8, x21, ne  // ne = any
  40b304:	bl	403b80 <colors_enabled@plt>
  40b308:	adrp	x8, 418000 <ascii_strlower_n@plt+0x13bf0>
  40b30c:	add	x8, x8, #0xd02
  40b310:	tst	w0, #0x1
  40b314:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b318:	csel	x3, x8, x21, ne  // ne = any
  40b31c:	add	x1, x1, #0x1fd
  40b320:	mov	x0, x19
  40b324:	mov	x2, x20
  40b328:	bl	403fa0 <fprintf@plt>
  40b32c:	mov	w21, wzr
  40b330:	b	40b3f4 <ascii_strlower_n@plt+0x6fe4>
  40b334:	mov	w0, wzr
  40b338:	bl	4039b0 <log_get_max_level_realm@plt>
  40b33c:	cmp	w0, #0x3
  40b340:	b.lt	40b3a4 <ascii_strlower_n@plt+0x6f94>  // b.tstop
  40b344:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40b348:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b34c:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b350:	add	x2, x2, #0xf07
  40b354:	add	x4, x4, #0x110
  40b358:	add	x5, x5, #0x1be
  40b35c:	mov	w0, #0x3                   	// #3
  40b360:	mov	w3, #0x1e8                 	// #488
  40b364:	mov	w1, w28
  40b368:	b	40b278 <ascii_strlower_n@plt+0x6e68>
  40b36c:	mov	w20, w0
  40b370:	mov	w0, wzr
  40b374:	bl	4039b0 <log_get_max_level_realm@plt>
  40b378:	cmp	w0, #0x3
  40b37c:	b.lt	40b3e8 <ascii_strlower_n@plt+0x6fd8>  // b.tstop
  40b380:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40b384:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b388:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b38c:	add	x2, x2, #0xf07
  40b390:	add	x4, x4, #0x110
  40b394:	add	x5, x5, #0x1be
  40b398:	mov	w0, #0x3                   	// #3
  40b39c:	mov	w3, #0x1ec                 	// #492
  40b3a0:	b	40b274 <ascii_strlower_n@plt+0x6e64>
  40b3a4:	mov	w8, wzr
  40b3a8:	neg	w9, w28
  40b3ac:	b	40b3f0 <ascii_strlower_n@plt+0x6fe0>
  40b3b0:	mov	w20, w0
  40b3b4:	mov	w0, wzr
  40b3b8:	bl	4039b0 <log_get_max_level_realm@plt>
  40b3bc:	cmp	w0, #0x3
  40b3c0:	b.lt	40b3e8 <ascii_strlower_n@plt+0x6fd8>  // b.tstop
  40b3c4:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40b3c8:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b3cc:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b3d0:	add	x2, x2, #0xf07
  40b3d4:	add	x4, x4, #0x110
  40b3d8:	add	x5, x5, #0x1be
  40b3dc:	mov	w0, #0x3                   	// #3
  40b3e0:	mov	w3, #0x1f0                 	// #496
  40b3e4:	b	40b274 <ascii_strlower_n@plt+0x6e64>
  40b3e8:	mov	w8, wzr
  40b3ec:	neg	w9, w20
  40b3f0:	sub	w21, w8, w9, uxtb
  40b3f4:	add	x0, sp, #0x40
  40b3f8:	bl	403d80 <sd_bus_error_free@plt>
  40b3fc:	ldur	x0, [x29, #-40]
  40b400:	cbz	x0, 40b408 <ascii_strlower_n@plt+0x6ff8>
  40b404:	bl	403d90 <sd_bus_message_unref@plt>
  40b408:	ldur	x0, [x29, #-32]
  40b40c:	cbz	x0, 40b414 <ascii_strlower_n@plt+0x7004>
  40b410:	bl	403d90 <sd_bus_message_unref@plt>
  40b414:	mov	w0, w21
  40b418:	ldp	x20, x19, [sp, #208]
  40b41c:	ldp	x22, x21, [sp, #192]
  40b420:	ldp	x24, x23, [sp, #176]
  40b424:	ldp	x26, x25, [sp, #160]
  40b428:	ldp	x28, x27, [sp, #144]
  40b42c:	ldp	x29, x30, [sp, #128]
  40b430:	add	sp, sp, #0xe0
  40b434:	ret
  40b438:	mov	w0, wzr
  40b43c:	bl	4039b0 <log_get_max_level_realm@plt>
  40b440:	cmp	w0, #0x3
  40b444:	b.lt	40b474 <ascii_strlower_n@plt+0x7064>  // b.tstop
  40b448:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40b44c:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b450:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b454:	add	x2, x2, #0xf07
  40b458:	add	x4, x4, #0x110
  40b45c:	add	x5, x5, #0x1e8
  40b460:	mov	w0, #0x3                   	// #3
  40b464:	mov	w3, #0x1f4                 	// #500
  40b468:	mov	w1, wzr
  40b46c:	mov	x6, x19
  40b470:	bl	4039c0 <log_internal_realm@plt>
  40b474:	mov	w21, #0xfffffffd            	// #-3
  40b478:	b	40b3f4 <ascii_strlower_n@plt+0x6fe4>
  40b47c:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b480:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40b484:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b488:	add	x1, x1, #0xc5
  40b48c:	add	x2, x2, #0xf07
  40b490:	add	x4, x4, #0xca
  40b494:	mov	w3, #0x1a2                 	// #418
  40b498:	mov	w0, wzr
  40b49c:	bl	403aa0 <log_assert_failed_realm@plt>
  40b4a0:	stp	x29, x30, [sp, #-96]!
  40b4a4:	stp	x28, x27, [sp, #16]
  40b4a8:	stp	x26, x25, [sp, #32]
  40b4ac:	stp	x24, x23, [sp, #48]
  40b4b0:	stp	x22, x21, [sp, #64]
  40b4b4:	stp	x20, x19, [sp, #80]
  40b4b8:	mov	x29, sp
  40b4bc:	sub	sp, sp, #0x10
  40b4c0:	cbz	x0, 40b90c <ascii_strlower_n@plt+0x74fc>
  40b4c4:	mov	x20, x1
  40b4c8:	cbz	x1, 40b92c <ascii_strlower_n@plt+0x751c>
  40b4cc:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b4d0:	mov	x22, x0
  40b4d4:	add	x1, x1, #0xc0
  40b4d8:	mov	w2, #0x4                   	// #4
  40b4dc:	mov	x0, x20
  40b4e0:	bl	403c80 <strncmp@plt>
  40b4e4:	cbnz	w0, 40b94c <ascii_strlower_n@plt+0x753c>
  40b4e8:	add	x19, x20, #0x4
  40b4ec:	ldrb	w8, [x19]
  40b4f0:	cmp	w8, #0x2f
  40b4f4:	b.ne	40b560 <ascii_strlower_n@plt+0x7150>  // b.any
  40b4f8:	ldrb	w8, [x20, #5]
  40b4fc:	cmp	w8, #0x2f
  40b500:	b.ne	40b844 <ascii_strlower_n@plt+0x7434>  // b.any
  40b504:	add	x21, x20, #0x6
  40b508:	mov	w1, #0x2f                  	// #47
  40b50c:	mov	x0, x21
  40b510:	bl	403ac0 <strchr@plt>
  40b514:	cbz	x0, 40b844 <ascii_strlower_n@plt+0x7434>
  40b518:	mov	x19, x0
  40b51c:	cmp	x0, x21
  40b520:	b.eq	40b55c <ascii_strlower_n@plt+0x714c>  // b.none
  40b524:	mov	w0, wzr
  40b528:	bl	4039b0 <log_get_max_level_realm@plt>
  40b52c:	cmp	w0, #0x4
  40b530:	b.lt	40b55c <ascii_strlower_n@plt+0x714c>  // b.tstop
  40b534:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40b538:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b53c:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b540:	add	x2, x2, #0xf07
  40b544:	add	x4, x4, #0x4ef
  40b548:	add	x5, x5, #0x4ff
  40b54c:	mov	w0, #0x4                   	// #4
  40b550:	mov	w3, #0x221                 	// #545
  40b554:	mov	w1, wzr
  40b558:	bl	4039c0 <log_internal_realm@plt>
  40b55c:	add	x19, x19, #0x1
  40b560:	mov	w1, #0x3f                  	// #63
  40b564:	mov	x0, x19
  40b568:	bl	403ac0 <strchr@plt>
  40b56c:	cbz	x0, 40b8a8 <ascii_strlower_n@plt+0x7498>
  40b570:	mov	x21, x0
  40b574:	sub	x1, x0, x19
  40b578:	mov	x0, x19
  40b57c:	stur	x22, [x29, #-8]
  40b580:	bl	403fb0 <strnlen@plt>
  40b584:	add	x8, x0, #0x10
  40b588:	and	x8, x8, #0xfffffffffffffff0
  40b58c:	mov	x9, sp
  40b590:	mov	x2, x0
  40b594:	sub	x0, x9, x8
  40b598:	mov	sp, x0
  40b59c:	mov	x1, x19
  40b5a0:	strb	wzr, [x0, x2]
  40b5a4:	stur	x0, [x29, #-16]
  40b5a8:	bl	403c70 <memcpy@plt>
  40b5ac:	adrp	x24, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b5b0:	adrp	x28, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b5b4:	mov	w25, wzr
  40b5b8:	mov	w23, wzr
  40b5bc:	add	x22, x21, #0x1
  40b5c0:	add	x24, x24, #0x548
  40b5c4:	add	x28, x28, #0x580
  40b5c8:	mov	w2, #0x6                   	// #6
  40b5cc:	mov	x0, x22
  40b5d0:	mov	x1, x24
  40b5d4:	bl	403fc0 <strncasecmp@plt>
  40b5d8:	cbz	w0, 40b634 <ascii_strlower_n@plt+0x7224>
  40b5dc:	mov	w2, #0x5                   	// #5
  40b5e0:	mov	x0, x22
  40b5e4:	mov	x1, x28
  40b5e8:	bl	403fc0 <strncasecmp@plt>
  40b5ec:	cbnz	w0, 40b844 <ascii_strlower_n@plt+0x7434>
  40b5f0:	tst	w23, #0xffff
  40b5f4:	b.eq	40b690 <ascii_strlower_n@plt+0x7280>  // b.none
  40b5f8:	mov	w0, wzr
  40b5fc:	bl	4039b0 <log_get_max_level_realm@plt>
  40b600:	cmp	w0, #0x3
  40b604:	b.lt	40b684 <ascii_strlower_n@plt+0x7274>  // b.tstop
  40b608:	mov	w1, #0x16                  	// #22
  40b60c:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40b610:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b614:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b618:	mov	w0, #0x3                   	// #3
  40b61c:	movk	w1, #0x4000, lsl #16
  40b620:	mov	w3, #0x252                 	// #594
  40b624:	add	x2, x2, #0xf07
  40b628:	add	x4, x4, #0x4ef
  40b62c:	add	x5, x5, #0x586
  40b630:	b	40b674 <ascii_strlower_n@plt+0x7264>
  40b634:	tst	w25, #0xffff
  40b638:	b.eq	40b6cc <ascii_strlower_n@plt+0x72bc>  // b.none
  40b63c:	mov	w0, wzr
  40b640:	bl	4039b0 <log_get_max_level_realm@plt>
  40b644:	cmp	w0, #0x3
  40b648:	b.lt	40b684 <ascii_strlower_n@plt+0x7274>  // b.tstop
  40b64c:	mov	w1, #0x16                  	// #22
  40b650:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40b654:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b658:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b65c:	mov	w0, #0x3                   	// #3
  40b660:	movk	w1, #0x4000, lsl #16
  40b664:	mov	w3, #0x235                 	// #565
  40b668:	add	x2, x2, #0xf07
  40b66c:	add	x4, x4, #0x4ef
  40b670:	add	x5, x5, #0x54f
  40b674:	bl	4039c0 <log_internal_realm@plt>
  40b678:	mov	w19, w0
  40b67c:	mov	x21, xzr
  40b680:	b	40b7e8 <ascii_strlower_n@plt+0x73d8>
  40b684:	mov	x21, xzr
  40b688:	mov	w19, #0xffffffea            	// #-22
  40b68c:	b	40b7e8 <ascii_strlower_n@plt+0x73d8>
  40b690:	add	x21, x22, #0x5
  40b694:	mov	w1, #0x3b                  	// #59
  40b698:	mov	x0, x21
  40b69c:	bl	403fd0 <strchrnul@plt>
  40b6a0:	mov	x26, x0
  40b6a4:	sub	x1, x0, x21
  40b6a8:	mov	x0, x21
  40b6ac:	bl	403ad0 <strndup@plt>
  40b6b0:	mov	x21, x0
  40b6b4:	cbz	x0, 40b71c <ascii_strlower_n@plt+0x730c>
  40b6b8:	mov	x0, x21
  40b6bc:	bl	416ed8 <ascii_strlower_n@plt+0x12ac8>
  40b6c0:	tbnz	w0, #31, 40b738 <ascii_strlower_n@plt+0x7328>
  40b6c4:	mov	w23, w0
  40b6c8:	b	40b704 <ascii_strlower_n@plt+0x72f4>
  40b6cc:	add	x21, x22, #0x6
  40b6d0:	mov	w1, #0x3b                  	// #59
  40b6d4:	mov	x0, x21
  40b6d8:	bl	403fd0 <strchrnul@plt>
  40b6dc:	mov	x26, x0
  40b6e0:	sub	x1, x0, x21
  40b6e4:	mov	x0, x21
  40b6e8:	bl	403ad0 <strndup@plt>
  40b6ec:	mov	x21, x0
  40b6f0:	cbz	x0, 40b784 <ascii_strlower_n@plt+0x7374>
  40b6f4:	mov	x0, x21
  40b6f8:	bl	4172fc <ascii_strlower_n@plt+0x12eec>
  40b6fc:	tbnz	w0, #31, 40b7a0 <ascii_strlower_n@plt+0x7390>
  40b700:	mov	w25, w0
  40b704:	ldrb	w8, [x26], #1
  40b708:	cmp	w8, #0x3b
  40b70c:	mov	w8, #0x9                   	// #9
  40b710:	cinc	w27, w8, eq  // eq = none
  40b714:	csel	x22, x26, x22, eq  // eq = none
  40b718:	b	40b7ec <ascii_strlower_n@plt+0x73dc>
  40b71c:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  40b720:	adrp	x3, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b724:	mov	w2, #0x257                 	// #599
  40b728:	add	x1, x1, #0xf07
  40b72c:	add	x3, x3, #0x4ef
  40b730:	bl	403a20 <log_oom_internal@plt>
  40b734:	b	40b778 <ascii_strlower_n@plt+0x7368>
  40b738:	mov	w0, wzr
  40b73c:	bl	4039b0 <log_get_max_level_realm@plt>
  40b740:	cmp	w0, #0x3
  40b744:	b.lt	40b800 <ascii_strlower_n@plt+0x73f0>  // b.tstop
  40b748:	mov	w1, #0x16                  	// #22
  40b74c:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40b750:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b754:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b758:	mov	w0, #0x3                   	// #3
  40b75c:	movk	w1, #0x4000, lsl #16
  40b760:	mov	w3, #0x25c                 	// #604
  40b764:	add	x2, x2, #0xf07
  40b768:	add	x4, x4, #0x4ef
  40b76c:	add	x5, x5, #0x5a0
  40b770:	mov	x6, x21
  40b774:	bl	4039c0 <log_internal_realm@plt>
  40b778:	mov	w19, w0
  40b77c:	mov	w23, wzr
  40b780:	b	40b7e8 <ascii_strlower_n@plt+0x73d8>
  40b784:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  40b788:	adrp	x3, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b78c:	mov	w2, #0x23a                 	// #570
  40b790:	add	x1, x1, #0xf07
  40b794:	add	x3, x3, #0x4ef
  40b798:	bl	403a20 <log_oom_internal@plt>
  40b79c:	b	40b7e0 <ascii_strlower_n@plt+0x73d0>
  40b7a0:	mov	w0, wzr
  40b7a4:	bl	4039b0 <log_get_max_level_realm@plt>
  40b7a8:	cmp	w0, #0x3
  40b7ac:	b.lt	40b808 <ascii_strlower_n@plt+0x73f8>  // b.tstop
  40b7b0:	mov	w1, #0x16                  	// #22
  40b7b4:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40b7b8:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b7bc:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b7c0:	mov	w0, #0x3                   	// #3
  40b7c4:	movk	w1, #0x4000, lsl #16
  40b7c8:	mov	w3, #0x23f                 	// #575
  40b7cc:	add	x2, x2, #0xf07
  40b7d0:	add	x4, x4, #0x4ef
  40b7d4:	add	x5, x5, #0x56a
  40b7d8:	mov	x6, x21
  40b7dc:	bl	4039c0 <log_internal_realm@plt>
  40b7e0:	mov	w19, w0
  40b7e4:	mov	w25, wzr
  40b7e8:	mov	w27, #0x1                   	// #1
  40b7ec:	mov	x0, x21
  40b7f0:	bl	403a30 <free@plt>
  40b7f4:	cmp	w27, #0xa
  40b7f8:	b.eq	40b5c8 <ascii_strlower_n@plt+0x71b8>  // b.none
  40b7fc:	b	40b810 <ascii_strlower_n@plt+0x7400>
  40b800:	mov	w23, wzr
  40b804:	b	40b688 <ascii_strlower_n@plt+0x7278>
  40b808:	mov	w25, wzr
  40b80c:	b	40b688 <ascii_strlower_n@plt+0x7278>
  40b810:	cmp	w27, #0x8
  40b814:	b.eq	40b844 <ascii_strlower_n@plt+0x7434>  // b.none
  40b818:	cmp	w27, #0x9
  40b81c:	b.ne	40b8e8 <ascii_strlower_n@plt+0x74d8>  // b.any
  40b820:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40b824:	ldrh	w8, [x8, #68]
  40b828:	and	w9, w25, #0xffff
  40b82c:	cmp	w8, #0x0
  40b830:	csinc	w8, w8, wzr, ne  // ne = any
  40b834:	cbnz	w9, 40b83c <ascii_strlower_n@plt+0x742c>
  40b838:	mov	w25, w8
  40b83c:	ldp	x1, x22, [x29, #-16]
  40b840:	b	40b8c0 <ascii_strlower_n@plt+0x74b0>
  40b844:	mov	w0, wzr
  40b848:	bl	4039b0 <log_get_max_level_realm@plt>
  40b84c:	cmp	w0, #0x3
  40b850:	b.lt	40b8a0 <ascii_strlower_n@plt+0x7490>  // b.tstop
  40b854:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40b858:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b85c:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b860:	mov	w1, #0x16                  	// #22
  40b864:	add	x2, x2, #0xf07
  40b868:	add	x4, x4, #0x4ef
  40b86c:	add	x5, x5, #0x5b5
  40b870:	mov	w0, #0x3                   	// #3
  40b874:	movk	w1, #0x4000, lsl #16
  40b878:	mov	w3, #0x276                 	// #630
  40b87c:	mov	x6, x20
  40b880:	mov	sp, x29
  40b884:	ldp	x20, x19, [sp, #80]
  40b888:	ldp	x22, x21, [sp, #64]
  40b88c:	ldp	x24, x23, [sp, #48]
  40b890:	ldp	x26, x25, [sp, #32]
  40b894:	ldp	x28, x27, [sp, #16]
  40b898:	ldp	x29, x30, [sp], #96
  40b89c:	b	4039c0 <log_internal_realm@plt>
  40b8a0:	mov	w19, #0xffffffea            	// #-22
  40b8a4:	b	40b8e8 <ascii_strlower_n@plt+0x74d8>
  40b8a8:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40b8ac:	ldrh	w8, [x8, #68]
  40b8b0:	mov	w23, wzr
  40b8b4:	mov	x1, x19
  40b8b8:	cmp	w8, #0x0
  40b8bc:	csinc	w25, w8, wzr, ne  // ne = any
  40b8c0:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40b8c4:	ldrh	w8, [x8, #64]
  40b8c8:	mov	x0, x22
  40b8cc:	mov	w2, w25
  40b8d0:	cmp	w8, #0x0
  40b8d4:	csinc	w8, w8, wzr, ne  // ne = any
  40b8d8:	tst	w23, #0xffff
  40b8dc:	csel	w3, w8, w23, eq  // eq = none
  40b8e0:	bl	40ac7c <ascii_strlower_n@plt+0x686c>
  40b8e4:	mov	w19, w0
  40b8e8:	mov	w0, w19
  40b8ec:	mov	sp, x29
  40b8f0:	ldp	x20, x19, [sp, #80]
  40b8f4:	ldp	x22, x21, [sp, #64]
  40b8f8:	ldp	x24, x23, [sp, #48]
  40b8fc:	ldp	x26, x25, [sp, #32]
  40b900:	ldp	x28, x27, [sp, #16]
  40b904:	ldp	x29, x30, [sp], #96
  40b908:	ret
  40b90c:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40b910:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40b914:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b918:	add	x1, x1, #0x8f4
  40b91c:	add	x2, x2, #0xf07
  40b920:	add	x4, x4, #0x4aa
  40b924:	mov	w3, #0x20e                 	// #526
  40b928:	bl	403aa0 <log_assert_failed_realm@plt>
  40b92c:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b930:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40b934:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b938:	add	x1, x1, #0xc5
  40b93c:	add	x2, x2, #0xf07
  40b940:	add	x4, x4, #0x4aa
  40b944:	mov	w3, #0x20f                 	// #527
  40b948:	b	40b968 <ascii_strlower_n@plt+0x7558>
  40b94c:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b950:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40b954:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b958:	add	x1, x1, #0x4d6
  40b95c:	add	x2, x2, #0xf07
  40b960:	add	x4, x4, #0x4aa
  40b964:	mov	w3, #0x210                 	// #528
  40b968:	mov	w0, wzr
  40b96c:	bl	403aa0 <log_assert_failed_realm@plt>
  40b970:	sub	sp, sp, #0x70
  40b974:	stp	x29, x30, [sp, #48]
  40b978:	str	x23, [sp, #64]
  40b97c:	stp	x22, x21, [sp, #80]
  40b980:	stp	x20, x19, [sp, #96]
  40b984:	add	x29, sp, #0x30
  40b988:	cbz	x0, 40ba9c <ascii_strlower_n@plt+0x768c>
  40b98c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40b990:	ldrb	w8, [x8]
  40b994:	cbz	w8, 40ba9c <ascii_strlower_n@plt+0x768c>
  40b998:	mov	x20, x1
  40b99c:	mov	x19, x0
  40b9a0:	bl	403b80 <colors_enabled@plt>
  40b9a4:	adrp	x22, 417000 <ascii_strlower_n@plt+0x12bf0>
  40b9a8:	adrp	x21, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b9ac:	add	x22, x22, #0xff4
  40b9b0:	add	x21, x21, #0x3db
  40b9b4:	tst	w0, #0x1
  40b9b8:	adrp	x0, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40b9bc:	csel	x1, x21, x22, ne  // ne = any
  40b9c0:	add	x0, x0, #0x3e9
  40b9c4:	bl	403a80 <printf@plt>
  40b9c8:	adrp	x8, 419000 <ascii_strlower_n@plt+0x14bf0>
  40b9cc:	add	x8, x8, #0xa2b
  40b9d0:	tst	x19, #0x1
  40b9d4:	adrp	x9, 419000 <ascii_strlower_n@plt+0x14bf0>
  40b9d8:	add	x9, x9, #0xa30
  40b9dc:	adrp	x10, 419000 <ascii_strlower_n@plt+0x14bf0>
  40b9e0:	csel	x1, x22, x8, eq  // eq = none
  40b9e4:	tst	x19, #0x2
  40b9e8:	add	x10, x10, #0xa3c
  40b9ec:	adrp	x11, 419000 <ascii_strlower_n@plt+0x14bf0>
  40b9f0:	csel	x2, x22, x9, eq  // eq = none
  40b9f4:	tst	x19, #0x4
  40b9f8:	add	x11, x11, #0xa48
  40b9fc:	adrp	x12, 419000 <ascii_strlower_n@plt+0x14bf0>
  40ba00:	csel	x3, x22, x10, eq  // eq = none
  40ba04:	tst	x19, #0x8
  40ba08:	add	x12, x12, #0xa53
  40ba0c:	csel	x4, x22, x11, eq  // eq = none
  40ba10:	tst	x19, #0x10
  40ba14:	adrp	x0, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40ba18:	csel	x5, x22, x12, eq  // eq = none
  40ba1c:	add	x0, x0, #0x408
  40ba20:	bl	403a80 <printf@plt>
  40ba24:	add	x0, sp, #0x8
  40ba28:	mov	w1, #0x26                  	// #38
  40ba2c:	mov	w3, #0x64                  	// #100
  40ba30:	mov	x2, x20
  40ba34:	bl	403fe0 <format_timespan@plt>
  40ba38:	cbz	x0, 40bab4 <ascii_strlower_n@plt+0x76a4>
  40ba3c:	bl	403b80 <colors_enabled@plt>
  40ba40:	adrp	x23, 418000 <ascii_strlower_n@plt+0x13bf0>
  40ba44:	add	x23, x23, #0xd02
  40ba48:	tst	w0, #0x1
  40ba4c:	csel	x20, x23, x22, ne  // ne = any
  40ba50:	bl	403b80 <colors_enabled@plt>
  40ba54:	tst	w0, #0x1
  40ba58:	adrp	x8, 419000 <ascii_strlower_n@plt+0x14bf0>
  40ba5c:	adrp	x9, 419000 <ascii_strlower_n@plt+0x14bf0>
  40ba60:	add	x8, x8, #0xdeb
  40ba64:	add	x9, x9, #0xdef
  40ba68:	csel	x21, x21, x22, ne  // ne = any
  40ba6c:	tst	x19, #0x200
  40ba70:	csel	x19, x9, x8, eq  // eq = none
  40ba74:	bl	403b80 <colors_enabled@plt>
  40ba78:	tst	w0, #0x1
  40ba7c:	adrp	x0, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40ba80:	csel	x5, x23, x22, ne  // ne = any
  40ba84:	add	x0, x0, #0x474
  40ba88:	add	x1, sp, #0x8
  40ba8c:	mov	x2, x20
  40ba90:	mov	x3, x21
  40ba94:	mov	x4, x19
  40ba98:	bl	403a80 <printf@plt>
  40ba9c:	ldp	x20, x19, [sp, #96]
  40baa0:	ldp	x22, x21, [sp, #80]
  40baa4:	ldr	x23, [sp, #64]
  40baa8:	ldp	x29, x30, [sp, #48]
  40baac:	add	sp, sp, #0x70
  40bab0:	ret
  40bab4:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40bab8:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40babc:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40bac0:	add	x1, x1, #0x41c
  40bac4:	add	x2, x2, #0xf07
  40bac8:	add	x4, x4, #0x450
  40bacc:	mov	w3, #0x87                  	// #135
  40bad0:	bl	403aa0 <log_assert_failed_realm@plt>
  40bad4:	sub	sp, sp, #0x50
  40bad8:	cmp	w1, #0x1
  40badc:	stp	x29, x30, [sp, #32]
  40bae0:	str	x21, [sp, #48]
  40bae4:	stp	x20, x19, [sp, #64]
  40bae8:	add	x29, sp, #0x20
  40baec:	b.lt	40bbac <ascii_strlower_n@plt+0x779c>  // b.tstop
  40baf0:	mov	w19, w1
  40baf4:	mov	w20, w0
  40baf8:	add	x1, sp, #0xc
  40bafc:	mov	w0, w19
  40bb00:	mov	w2, wzr
  40bb04:	bl	403e10 <format_ifname_full@plt>
  40bb08:	cbz	x0, 40bb70 <ascii_strlower_n@plt+0x7760>
  40bb0c:	mov	w8, #0x3c                  	// #60
  40bb10:	sub	w8, w8, w20
  40bb14:	cmp	w20, #0x3c
  40bb18:	csel	w19, w8, wzr, lt  // lt = tstop
  40bb1c:	bl	403b80 <colors_enabled@plt>
  40bb20:	adrp	x21, 417000 <ascii_strlower_n@plt+0x12bf0>
  40bb24:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40bb28:	add	x21, x21, #0xff4
  40bb2c:	add	x8, x8, #0x3db
  40bb30:	tst	w0, #0x1
  40bb34:	csel	x20, x8, x21, ne  // ne = any
  40bb38:	bl	403b80 <colors_enabled@plt>
  40bb3c:	adrp	x8, 418000 <ascii_strlower_n@plt+0x13bf0>
  40bb40:	add	x8, x8, #0xd02
  40bb44:	tst	w0, #0x1
  40bb48:	adrp	x0, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40bb4c:	adrp	x2, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40bb50:	csel	x5, x8, x21, ne  // ne = any
  40bb54:	add	x0, x0, #0x3c6
  40bb58:	add	x2, x2, #0x3d9
  40bb5c:	add	x4, sp, #0xc
  40bb60:	mov	w1, w19
  40bb64:	mov	x3, x20
  40bb68:	bl	403a80 <printf@plt>
  40bb6c:	b	40bbac <ascii_strlower_n@plt+0x779c>
  40bb70:	bl	4039b0 <log_get_max_level_realm@plt>
  40bb74:	cmp	w0, #0x4
  40bb78:	b.lt	40bbac <ascii_strlower_n@plt+0x779c>  // b.tstop
  40bb7c:	bl	403e60 <__errno_location@plt>
  40bb80:	ldr	w1, [x0]
  40bb84:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40bb88:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40bb8c:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40bb90:	add	x2, x2, #0xf07
  40bb94:	add	x4, x4, #0x374
  40bb98:	add	x5, x5, #0x38a
  40bb9c:	mov	w0, #0x4                   	// #4
  40bba0:	mov	w3, #0x96                  	// #150
  40bba4:	mov	w6, w19
  40bba8:	bl	4039c0 <log_internal_realm@plt>
  40bbac:	ldp	x20, x19, [sp, #64]
  40bbb0:	ldr	x21, [sp, #48]
  40bbb4:	ldp	x29, x30, [sp, #32]
  40bbb8:	add	sp, sp, #0x50
  40bbbc:	ret
  40bbc0:	sub	sp, sp, #0xf0
  40bbc4:	stp	x29, x30, [sp, #144]
  40bbc8:	add	x29, sp, #0x90
  40bbcc:	stp	x28, x27, [sp, #160]
  40bbd0:	stp	x26, x25, [sp, #176]
  40bbd4:	stp	x24, x23, [sp, #192]
  40bbd8:	stp	x22, x21, [sp, #208]
  40bbdc:	stp	x20, x19, [sp, #224]
  40bbe0:	stp	xzr, xzr, [x29, #-40]
  40bbe4:	stp	xzr, xzr, [x29, #-64]
  40bbe8:	stur	xzr, [x29, #-48]
  40bbec:	cbz	x0, 40c8d4 <ascii_strlower_n@plt+0x84c4>
  40bbf0:	mov	x26, x3
  40bbf4:	cbz	x3, 40c8f4 <ascii_strlower_n@plt+0x84e4>
  40bbf8:	mov	x20, x2
  40bbfc:	mov	x21, x1
  40bc00:	mov	x22, x0
  40bc04:	cbz	x1, 40bc18 <ascii_strlower_n@plt+0x7808>
  40bc08:	ldrb	w8, [x21]
  40bc0c:	cbz	w8, 40bc18 <ascii_strlower_n@plt+0x7808>
  40bc10:	cbnz	x20, 40bc20 <ascii_strlower_n@plt+0x7810>
  40bc14:	b	40bc28 <ascii_strlower_n@plt+0x7818>
  40bc18:	mov	x21, xzr
  40bc1c:	cbz	x20, 40bc28 <ascii_strlower_n@plt+0x7818>
  40bc20:	ldrb	w8, [x20]
  40bc24:	cbnz	w8, 40bc2c <ascii_strlower_n@plt+0x781c>
  40bc28:	mov	x20, xzr
  40bc2c:	mov	w0, wzr
  40bc30:	cbz	x21, 40bcb0 <ascii_strlower_n@plt+0x78a0>
  40bc34:	bl	4039b0 <log_get_max_level_realm@plt>
  40bc38:	cmp	w0, #0x7
  40bc3c:	b.lt	40bd98 <ascii_strlower_n@plt+0x7988>  // b.tstop
  40bc40:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40bc44:	ldr	w0, [x8, #60]
  40bc48:	bl	403d50 <af_to_name@plt>
  40bc4c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40bc50:	ldr	x9, [x8, #40]
  40bc54:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40bc58:	add	x8, x8, #0x142
  40bc5c:	cmp	x0, #0x0
  40bc60:	csel	x8, x8, x0, eq  // eq = none
  40bc64:	cbz	x9, 40bc70 <ascii_strlower_n@plt+0x7860>
  40bc68:	ldrb	w10, [x9]
  40bc6c:	cbnz	w10, 40bc78 <ascii_strlower_n@plt+0x7868>
  40bc70:	adrp	x9, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40bc74:	add	x9, x9, #0x142
  40bc78:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40bc7c:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40bc80:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40bc84:	stp	x8, x9, [sp, #8]
  40bc88:	add	x2, x2, #0xf07
  40bc8c:	add	x4, x4, #0x7eb
  40bc90:	add	x5, x5, #0x7fb
  40bc94:	mov	w0, #0x7                   	// #7
  40bc98:	mov	w3, #0x2ac                 	// #684
  40bc9c:	str	x26, [sp]
  40bca0:	mov	w1, wzr
  40bca4:	mov	x6, x21
  40bca8:	mov	x7, x20
  40bcac:	b	40bd94 <ascii_strlower_n@plt+0x7984>
  40bcb0:	bl	4039b0 <log_get_max_level_realm@plt>
  40bcb4:	cmp	w0, #0x7
  40bcb8:	cbz	x20, 40bd2c <ascii_strlower_n@plt+0x791c>
  40bcbc:	b.lt	40bd98 <ascii_strlower_n@plt+0x7988>  // b.tstop
  40bcc0:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40bcc4:	ldr	w0, [x8, #60]
  40bcc8:	bl	403d50 <af_to_name@plt>
  40bccc:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40bcd0:	ldr	x9, [x8, #40]
  40bcd4:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40bcd8:	add	x8, x8, #0x142
  40bcdc:	cmp	x0, #0x0
  40bce0:	csel	x8, x8, x0, eq  // eq = none
  40bce4:	cbz	x9, 40bcf0 <ascii_strlower_n@plt+0x78e0>
  40bce8:	ldrb	w10, [x9]
  40bcec:	cbnz	w10, 40bcf8 <ascii_strlower_n@plt+0x78e8>
  40bcf0:	adrp	x9, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40bcf4:	add	x9, x9, #0x142
  40bcf8:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40bcfc:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40bd00:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40bd04:	add	x2, x2, #0xf07
  40bd08:	add	x4, x4, #0x7eb
  40bd0c:	add	x5, x5, #0x83e
  40bd10:	stp	x8, x9, [sp]
  40bd14:	mov	w0, #0x7                   	// #7
  40bd18:	mov	w3, #0x2ae                 	// #686
  40bd1c:	mov	w1, wzr
  40bd20:	mov	x6, x20
  40bd24:	mov	x7, x26
  40bd28:	b	40bd94 <ascii_strlower_n@plt+0x7984>
  40bd2c:	b.lt	40bd98 <ascii_strlower_n@plt+0x7988>  // b.tstop
  40bd30:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40bd34:	ldr	w0, [x8, #60]
  40bd38:	bl	403d50 <af_to_name@plt>
  40bd3c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40bd40:	ldr	x8, [x8, #40]
  40bd44:	adrp	x9, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40bd48:	add	x9, x9, #0x142
  40bd4c:	cmp	x0, #0x0
  40bd50:	csel	x7, x9, x0, eq  // eq = none
  40bd54:	cbz	x8, 40bd60 <ascii_strlower_n@plt+0x7950>
  40bd58:	ldrb	w9, [x8]
  40bd5c:	cbnz	w9, 40bd68 <ascii_strlower_n@plt+0x7958>
  40bd60:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40bd64:	add	x8, x8, #0x142
  40bd68:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40bd6c:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40bd70:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40bd74:	add	x2, x2, #0xf07
  40bd78:	add	x4, x4, #0x7eb
  40bd7c:	add	x5, x5, #0x879
  40bd80:	mov	w0, #0x7                   	// #7
  40bd84:	mov	w3, #0x2b0                 	// #688
  40bd88:	mov	w1, wzr
  40bd8c:	mov	x6, x26
  40bd90:	str	x8, [sp]
  40bd94:	bl	4039c0 <log_internal_realm@plt>
  40bd98:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf0>
  40bd9c:	adrp	x3, 419000 <ascii_strlower_n@plt+0x14bf0>
  40bda0:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40bda4:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40bda8:	add	x2, x2, #0x9a6
  40bdac:	add	x3, x3, #0xe87
  40bdb0:	add	x4, x4, #0x144
  40bdb4:	add	x5, x5, #0x8ae
  40bdb8:	sub	x1, x29, #0x20
  40bdbc:	mov	x0, x22
  40bdc0:	bl	403cb0 <sd_bus_message_new_method_call@plt>
  40bdc4:	tbnz	w0, #31, 40be68 <ascii_strlower_n@plt+0x7a58>
  40bdc8:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40bdcc:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40bdd0:	adrp	x10, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40bdd4:	ldur	x0, [x29, #-32]
  40bdd8:	ldr	w2, [x8, #56]
  40bddc:	ldr	w6, [x9, #60]
  40bde0:	ldr	x7, [x10, #72]
  40bde4:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40bde8:	add	x1, x1, #0x8bd
  40bdec:	mov	x3, x21
  40bdf0:	mov	x4, x20
  40bdf4:	mov	x5, x26
  40bdf8:	bl	403cc0 <sd_bus_message_append@plt>
  40bdfc:	tbnz	w0, #31, 40bea0 <ascii_strlower_n@plt+0x7a90>
  40be00:	mov	w0, #0x1                   	// #1
  40be04:	bl	403ce0 <now@plt>
  40be08:	ldur	x1, [x29, #-32]
  40be0c:	mov	w2, #0xe00                 	// #3584
  40be10:	mov	x23, x0
  40be14:	sub	x3, x29, #0x40
  40be18:	sub	x4, x29, #0x28
  40be1c:	movk	w2, #0x727, lsl #16
  40be20:	mov	x0, x22
  40be24:	bl	403cf0 <sd_bus_call@plt>
  40be28:	tbnz	w0, #31, 40bef0 <ascii_strlower_n@plt+0x7ae0>
  40be2c:	mov	w0, #0x1                   	// #1
  40be30:	bl	403ce0 <now@plt>
  40be34:	ldur	x8, [x29, #-40]
  40be38:	adrp	x2, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40be3c:	mov	x22, x0
  40be40:	add	x2, x2, #0x8dc
  40be44:	mov	w1, #0x61                  	// #97
  40be48:	mov	x0, x8
  40be4c:	bl	403d00 <sd_bus_message_enter_container@plt>
  40be50:	tbnz	w0, #31, 40bf40 <ascii_strlower_n@plt+0x7b30>
  40be54:	cbz	x21, 40bf7c <ascii_strlower_n@plt+0x7b6c>
  40be58:	mov	x0, x21
  40be5c:	bl	403d30 <strlen@plt>
  40be60:	add	x24, x0, #0x1
  40be64:	b	40bf80 <ascii_strlower_n@plt+0x7b70>
  40be68:	mov	w23, w0
  40be6c:	mov	w0, wzr
  40be70:	bl	4039b0 <log_get_max_level_realm@plt>
  40be74:	cmp	w0, #0x3
  40be78:	b.lt	40bee4 <ascii_strlower_n@plt+0x7ad4>  // b.tstop
  40be7c:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40be80:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40be84:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40be88:	add	x2, x2, #0xf07
  40be8c:	add	x4, x4, #0x7eb
  40be90:	add	x5, x5, #0x173
  40be94:	mov	w0, #0x3                   	// #3
  40be98:	mov	w3, #0x2ba                 	// #698
  40be9c:	b	40bed4 <ascii_strlower_n@plt+0x7ac4>
  40bea0:	mov	w23, w0
  40bea4:	mov	w0, wzr
  40bea8:	bl	4039b0 <log_get_max_level_realm@plt>
  40beac:	cmp	w0, #0x3
  40beb0:	b.lt	40bee4 <ascii_strlower_n@plt+0x7ad4>  // b.tstop
  40beb4:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40beb8:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40bebc:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40bec0:	add	x2, x2, #0xf07
  40bec4:	add	x4, x4, #0x7eb
  40bec8:	add	x5, x5, #0x173
  40becc:	mov	w0, #0x3                   	// #3
  40bed0:	mov	w3, #0x2be                 	// #702
  40bed4:	mov	w1, w23
  40bed8:	bl	4039c0 <log_internal_realm@plt>
  40bedc:	str	w0, [sp, #40]
  40bee0:	b	40c86c <ascii_strlower_n@plt+0x845c>
  40bee4:	mov	w8, wzr
  40bee8:	neg	w9, w23
  40beec:	b	40c864 <ascii_strlower_n@plt+0x8454>
  40bef0:	mov	w22, w0
  40bef4:	mov	w0, wzr
  40bef8:	bl	4039b0 <log_get_max_level_realm@plt>
  40befc:	cmp	w0, #0x3
  40bf00:	b.lt	40c85c <ascii_strlower_n@plt+0x844c>  // b.tstop
  40bf04:	sub	x0, x29, #0x40
  40bf08:	mov	w1, w22
  40bf0c:	bl	403d70 <bus_error_message@plt>
  40bf10:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40bf14:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40bf18:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40bf1c:	mov	x6, x0
  40bf20:	add	x2, x2, #0xf07
  40bf24:	add	x4, x4, #0x7eb
  40bf28:	add	x5, x5, #0x8c4
  40bf2c:	mov	w0, #0x3                   	// #3
  40bf30:	mov	w3, #0x2c4                 	// #708
  40bf34:	mov	w1, w22
  40bf38:	bl	4039c0 <log_internal_realm@plt>
  40bf3c:	b	40bedc <ascii_strlower_n@plt+0x7acc>
  40bf40:	mov	w24, w0
  40bf44:	mov	w0, wzr
  40bf48:	bl	4039b0 <log_get_max_level_realm@plt>
  40bf4c:	cmp	w0, #0x3
  40bf50:	b.lt	40c7dc <ascii_strlower_n@plt+0x83cc>  // b.tstop
  40bf54:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40bf58:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40bf5c:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40bf60:	add	x2, x2, #0xf07
  40bf64:	add	x4, x4, #0x7eb
  40bf68:	add	x5, x5, #0x1be
  40bf6c:	mov	w0, #0x3                   	// #3
  40bf70:	mov	w3, #0x2ca                 	// #714
  40bf74:	mov	w1, w24
  40bf78:	b	40bed8 <ascii_strlower_n@plt+0x7ac8>
  40bf7c:	mov	x24, xzr
  40bf80:	sub	x8, x22, x23
  40bf84:	str	x8, [sp, #24]
  40bf88:	cbz	x20, 40bf9c <ascii_strlower_n@plt+0x7b8c>
  40bf8c:	mov	x0, x20
  40bf90:	bl	403d30 <strlen@plt>
  40bf94:	add	x22, x0, #0x1
  40bf98:	b	40bfa0 <ascii_strlower_n@plt+0x7b90>
  40bf9c:	mov	x22, xzr
  40bfa0:	mov	x0, x26
  40bfa4:	bl	403d30 <strlen@plt>
  40bfa8:	add	w8, w24, w22
  40bfac:	adrp	x28, 417000 <ascii_strlower_n@plt+0x12bf0>
  40bfb0:	adrp	x27, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40bfb4:	adrp	x25, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40bfb8:	adrp	x23, 417000 <ascii_strlower_n@plt+0x12bf0>
  40bfbc:	adrp	x24, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40bfc0:	add	w8, w8, w0
  40bfc4:	mov	w19, wzr
  40bfc8:	add	x28, x28, #0xf07
  40bfcc:	add	x27, x27, #0x7eb
  40bfd0:	add	x25, x25, #0x1be
  40bfd4:	add	x23, x23, #0xff4
  40bfd8:	add	x24, x24, #0x3d9
  40bfdc:	add	w8, w8, #0x2
  40bfe0:	str	w8, [sp, #36]
  40bfe4:	ldur	x0, [x29, #-40]
  40bfe8:	adrp	x2, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40bfec:	mov	w1, #0x72                  	// #114
  40bff0:	add	x2, x2, #0x8eb
  40bff4:	bl	403d00 <sd_bus_message_enter_container@plt>
  40bff8:	cmp	w0, #0x1
  40bffc:	b.lt	40c54c <ascii_strlower_n@plt+0x813c>  // b.tstop
  40c000:	ldur	x0, [x29, #-40]
  40c004:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c008:	add	x2, sp, #0x34
  40c00c:	add	x3, sp, #0x30
  40c010:	add	x4, sp, #0x2c
  40c014:	sub	x5, x29, #0x8
  40c018:	add	x1, x1, #0x8f8
  40c01c:	bl	403d10 <sd_bus_message_read@plt>
  40c020:	tbnz	w0, #31, 40c3f0 <ascii_strlower_n@plt+0x7fe0>
  40c024:	cbz	x21, 40c054 <ascii_strlower_n@plt+0x7c44>
  40c028:	mov	x0, x21
  40c02c:	bl	403d30 <strlen@plt>
  40c030:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c034:	mov	x1, x0
  40c038:	cmp	w19, #0x0
  40c03c:	add	x8, x8, #0x903
  40c040:	adrp	x0, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c044:	csel	x2, x21, x23, eq  // eq = none
  40c048:	csel	x3, x8, x24, eq  // eq = none
  40c04c:	add	x0, x0, #0x8fd
  40c050:	bl	403a80 <printf@plt>
  40c054:	cbz	x20, 40c084 <ascii_strlower_n@plt+0x7c74>
  40c058:	mov	x0, x20
  40c05c:	bl	403d30 <strlen@plt>
  40c060:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c064:	mov	x1, x0
  40c068:	cmp	w19, #0x0
  40c06c:	add	x8, x8, #0x903
  40c070:	adrp	x0, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c074:	csel	x2, x20, x23, eq  // eq = none
  40c078:	csel	x3, x8, x24, eq  // eq = none
  40c07c:	add	x0, x0, #0x8fd
  40c080:	bl	403a80 <printf@plt>
  40c084:	mov	x0, x26
  40c088:	bl	403d30 <strlen@plt>
  40c08c:	ldur	x4, [x29, #-8]
  40c090:	ldrh	w5, [sp, #44]
  40c094:	ldrh	w6, [sp, #52]
  40c098:	ldrh	w7, [sp, #48]
  40c09c:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c0a0:	mov	x1, x0
  40c0a4:	cmp	w19, #0x0
  40c0a8:	add	x8, x8, #0x65b
  40c0ac:	adrp	x0, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c0b0:	csel	x2, x26, x23, eq  // eq = none
  40c0b4:	csel	x3, x8, x24, eq  // eq = none
  40c0b8:	add	x0, x0, #0x905
  40c0bc:	bl	403a80 <printf@plt>
  40c0c0:	ldur	x0, [x29, #-40]
  40c0c4:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf0>
  40c0c8:	mov	w1, #0x61                  	// #97
  40c0cc:	add	x2, x2, #0xe79
  40c0d0:	bl	403d00 <sd_bus_message_enter_container@plt>
  40c0d4:	tbnz	w0, #31, 40c47c <ascii_strlower_n@plt+0x806c>
  40c0d8:	ldur	x0, [x29, #-40]
  40c0dc:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf0>
  40c0e0:	mov	w1, #0x72                  	// #114
  40c0e4:	add	x2, x2, #0xc12
  40c0e8:	bl	403d00 <sd_bus_message_enter_container@plt>
  40c0ec:	cmp	w0, #0x1
  40c0f0:	b.lt	40c410 <ascii_strlower_n@plt+0x8000>  // b.tstop
  40c0f4:	ldur	x0, [x29, #-40]
  40c0f8:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c0fc:	add	x2, sp, #0x40
  40c100:	add	x3, sp, #0x38
  40c104:	add	x1, x1, #0x643
  40c108:	stur	xzr, [x29, #-16]
  40c10c:	bl	403d10 <sd_bus_message_read@plt>
  40c110:	tbnz	w0, #31, 40c1d4 <ascii_strlower_n@plt+0x7dc4>
  40c114:	ldur	x0, [x29, #-40]
  40c118:	sub	x2, x29, #0x18
  40c11c:	add	x3, sp, #0x48
  40c120:	mov	w1, #0x79                  	// #121
  40c124:	bl	403d60 <sd_bus_message_read_array@plt>
  40c128:	tbnz	w0, #31, 40c1f4 <ascii_strlower_n@plt+0x7de4>
  40c12c:	ldur	x0, [x29, #-40]
  40c130:	bl	403d20 <sd_bus_message_exit_container@plt>
  40c134:	tbnz	w0, #31, 40c214 <ascii_strlower_n@plt+0x7e04>
  40c138:	ldr	w22, [sp, #56]
  40c13c:	orr	w8, w22, #0x8
  40c140:	cmp	w8, #0xa
  40c144:	b.ne	40c294 <ascii_strlower_n@plt+0x7e84>  // b.any
  40c148:	b.ne	40c8b4 <ascii_strlower_n@plt+0x84a4>  // b.any
  40c14c:	mov	x24, x21
  40c150:	mov	x21, x23
  40c154:	mov	x23, x20
  40c158:	mov	x20, x25
  40c15c:	mov	x25, x26
  40c160:	mov	x26, x27
  40c164:	mov	x27, x28
  40c168:	ldr	x28, [sp, #72]
  40c16c:	cmp	w22, #0xa
  40c170:	mov	w8, #0x4                   	// #4
  40c174:	mov	w9, #0x10                  	// #16
  40c178:	csel	x8, x9, x8, eq  // eq = none
  40c17c:	cmp	x28, x8
  40c180:	b.ne	40c2f0 <ascii_strlower_n@plt+0x7ee0>  // b.any
  40c184:	ldur	x1, [x29, #-24]
  40c188:	ldr	w2, [sp, #64]
  40c18c:	sub	x3, x29, #0x10
  40c190:	mov	w0, w22
  40c194:	bl	403ca0 <in_addr_ifindex_to_string@plt>
  40c198:	tbnz	w0, #31, 40c370 <ascii_strlower_n@plt+0x7f60>
  40c19c:	ldur	x3, [x29, #-16]
  40c1a0:	ldr	w1, [sp, #36]
  40c1a4:	adrp	x0, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c1a8:	add	x0, x0, #0x8fd
  40c1ac:	mov	x2, x21
  40c1b0:	bl	403a80 <printf@plt>
  40c1b4:	ldr	w1, [sp, #64]
  40c1b8:	bl	40bad4 <ascii_strlower_n@plt+0x76c4>
  40c1bc:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40c1c0:	ldr	x1, [x8, #176]
  40c1c4:	mov	w0, #0xa                   	// #10
  40c1c8:	bl	403d40 <fputc@plt>
  40c1cc:	mov	w22, wzr
  40c1d0:	b	40c364 <ascii_strlower_n@plt+0x7f54>
  40c1d4:	mov	w22, w0
  40c1d8:	mov	w0, wzr
  40c1dc:	bl	4039b0 <log_get_max_level_realm@plt>
  40c1e0:	cmp	w0, #0x3
  40c1e4:	b.lt	40c24c <ascii_strlower_n@plt+0x7e3c>  // b.tstop
  40c1e8:	mov	w0, #0x3                   	// #3
  40c1ec:	mov	w3, #0x2f2                 	// #754
  40c1f0:	b	40c230 <ascii_strlower_n@plt+0x7e20>
  40c1f4:	mov	w22, w0
  40c1f8:	mov	w0, wzr
  40c1fc:	bl	4039b0 <log_get_max_level_realm@plt>
  40c200:	cmp	w0, #0x3
  40c204:	b.lt	40c24c <ascii_strlower_n@plt+0x7e3c>  // b.tstop
  40c208:	mov	w0, #0x3                   	// #3
  40c20c:	mov	w3, #0x2f6                 	// #758
  40c210:	b	40c230 <ascii_strlower_n@plt+0x7e20>
  40c214:	mov	w22, w0
  40c218:	mov	w0, wzr
  40c21c:	bl	4039b0 <log_get_max_level_realm@plt>
  40c220:	cmp	w0, #0x3
  40c224:	b.lt	40c24c <ascii_strlower_n@plt+0x7e3c>  // b.tstop
  40c228:	mov	w0, #0x3                   	// #3
  40c22c:	mov	w3, #0x2fa                 	// #762
  40c230:	mov	w1, w22
  40c234:	mov	x2, x28
  40c238:	mov	x4, x27
  40c23c:	mov	x5, x25
  40c240:	bl	4039c0 <log_internal_realm@plt>
  40c244:	str	w0, [sp, #40]
  40c248:	b	40c25c <ascii_strlower_n@plt+0x7e4c>
  40c24c:	mov	w8, wzr
  40c250:	neg	w9, w22
  40c254:	sub	w8, w8, w9, uxtb
  40c258:	str	w8, [sp, #40]
  40c25c:	mov	w22, #0x1                   	// #1
  40c260:	ldur	x0, [x29, #-16]
  40c264:	bl	403a30 <free@plt>
  40c268:	orr	w8, w22, #0x8
  40c26c:	cmp	w8, #0x8
  40c270:	b.ne	40c544 <ascii_strlower_n@plt+0x8134>  // b.any
  40c274:	ldur	x0, [x29, #-40]
  40c278:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf0>
  40c27c:	mov	w1, #0x72                  	// #114
  40c280:	add	x2, x2, #0xc12
  40c284:	bl	403d00 <sd_bus_message_enter_container@plt>
  40c288:	cmp	w0, #0x0
  40c28c:	b.gt	40c0f4 <ascii_strlower_n@plt+0x7ce4>
  40c290:	b	40c410 <ascii_strlower_n@plt+0x8000>
  40c294:	mov	w0, wzr
  40c298:	bl	4039b0 <log_get_max_level_realm@plt>
  40c29c:	cmp	w0, #0x7
  40c2a0:	b.lt	40c2e8 <ascii_strlower_n@plt+0x7ed8>  // b.tstop
  40c2a4:	mov	w0, w22
  40c2a8:	bl	403d50 <af_to_name@plt>
  40c2ac:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c2b0:	cmp	x0, #0x0
  40c2b4:	add	x8, x8, #0x70a
  40c2b8:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c2bc:	csel	x8, x8, x0, eq  // eq = none
  40c2c0:	mov	w0, #0x7                   	// #7
  40c2c4:	mov	w3, #0x2fd                 	// #765
  40c2c8:	mov	w1, wzr
  40c2cc:	mov	x2, x28
  40c2d0:	mov	x4, x27
  40c2d4:	add	x5, x5, #0x6e3
  40c2d8:	mov	x6, x21
  40c2dc:	mov	w7, w22
  40c2e0:	str	x8, [sp]
  40c2e4:	bl	4039c0 <log_internal_realm@plt>
  40c2e8:	mov	w22, #0x8                   	// #8
  40c2ec:	b	40c260 <ascii_strlower_n@plt+0x7e50>
  40c2f0:	mov	w0, wzr
  40c2f4:	bl	4039b0 <log_get_max_level_realm@plt>
  40c2f8:	cmp	w0, #0x3
  40c2fc:	b.lt	40c358 <ascii_strlower_n@plt+0x7f48>  // b.tstop
  40c300:	mov	w0, w22
  40c304:	bl	403d50 <af_to_name@plt>
  40c308:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c30c:	cmp	x0, #0x0
  40c310:	add	x8, x8, #0x70a
  40c314:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c318:	csel	x8, x8, x0, eq  // eq = none
  40c31c:	mov	w0, #0x3                   	// #3
  40c320:	mov	w3, #0x302                 	// #770
  40c324:	mov	w1, wzr
  40c328:	mov	x2, x27
  40c32c:	mov	x4, x26
  40c330:	add	x5, x5, #0x712
  40c334:	mov	x6, x24
  40c338:	mov	x7, x28
  40c33c:	str	x8, [sp]
  40c340:	mov	x27, x26
  40c344:	mov	x28, x2
  40c348:	bl	4039c0 <log_internal_realm@plt>
  40c34c:	mov	w8, #0xffffffea            	// #-22
  40c350:	str	w8, [sp, #40]
  40c354:	b	40c3b4 <ascii_strlower_n@plt+0x7fa4>
  40c358:	mov	w8, #0xffffffea            	// #-22
  40c35c:	str	w8, [sp, #40]
  40c360:	mov	w22, #0x1                   	// #1
  40c364:	mov	x28, x27
  40c368:	mov	x27, x26
  40c36c:	b	40c3b8 <ascii_strlower_n@plt+0x7fa8>
  40c370:	mov	w22, w0
  40c374:	mov	w0, wzr
  40c378:	bl	4039b0 <log_get_max_level_realm@plt>
  40c37c:	cmp	w0, #0x3
  40c380:	mov	x28, x27
  40c384:	b.lt	40c3d8 <ascii_strlower_n@plt+0x7fc8>  // b.tstop
  40c388:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c38c:	mov	w0, #0x3                   	// #3
  40c390:	mov	w3, #0x308                 	// #776
  40c394:	mov	w1, w22
  40c398:	mov	x2, x28
  40c39c:	mov	x4, x26
  40c3a0:	add	x5, x5, #0x75a
  40c3a4:	mov	x6, x24
  40c3a8:	mov	x27, x26
  40c3ac:	bl	4039c0 <log_internal_realm@plt>
  40c3b0:	str	w0, [sp, #40]
  40c3b4:	mov	w22, #0x1                   	// #1
  40c3b8:	mov	x26, x25
  40c3bc:	mov	x25, x20
  40c3c0:	mov	x20, x23
  40c3c4:	mov	x23, x21
  40c3c8:	mov	x21, x24
  40c3cc:	adrp	x24, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c3d0:	add	x24, x24, #0x3d9
  40c3d4:	b	40c260 <ascii_strlower_n@plt+0x7e50>
  40c3d8:	mov	w8, wzr
  40c3dc:	neg	w9, w22
  40c3e0:	sub	w8, w8, w9, uxtb
  40c3e4:	str	w8, [sp, #40]
  40c3e8:	mov	w22, #0x1                   	// #1
  40c3ec:	b	40c368 <ascii_strlower_n@plt+0x7f58>
  40c3f0:	mov	w22, w0
  40c3f4:	mov	w0, wzr
  40c3f8:	bl	4039b0 <log_get_max_level_realm@plt>
  40c3fc:	cmp	w0, #0x3
  40c400:	b.lt	40c530 <ascii_strlower_n@plt+0x8120>  // b.tstop
  40c404:	mov	w0, #0x3                   	// #3
  40c408:	mov	w3, #0x2d8                 	// #728
  40c40c:	b	40c514 <ascii_strlower_n@plt+0x8104>
  40c410:	mov	w22, w0
  40c414:	tbnz	w0, #31, 40c49c <ascii_strlower_n@plt+0x808c>
  40c418:	ldur	x0, [x29, #-40]
  40c41c:	bl	403d20 <sd_bus_message_exit_container@plt>
  40c420:	tbnz	w0, #31, 40c4b8 <ascii_strlower_n@plt+0x80a8>
  40c424:	ldur	x0, [x29, #-40]
  40c428:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  40c42c:	sub	x2, x29, #0x10
  40c430:	add	x1, x1, #0xf02
  40c434:	bl	403d10 <sd_bus_message_read@plt>
  40c438:	tbnz	w0, #31, 40c4d8 <ascii_strlower_n@plt+0x80c8>
  40c43c:	ldp	x22, x0, [x29, #-16]
  40c440:	mov	x1, x22
  40c444:	bl	403b40 <strcmp@plt>
  40c448:	cbz	w0, 40c464 <ascii_strlower_n@plt+0x8054>
  40c44c:	ldr	w1, [sp, #36]
  40c450:	adrp	x0, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c454:	add	x0, x0, #0x92b
  40c458:	mov	x2, x23
  40c45c:	mov	x3, x22
  40c460:	bl	403a80 <printf@plt>
  40c464:	ldur	x0, [x29, #-40]
  40c468:	bl	403d20 <sd_bus_message_exit_container@plt>
  40c46c:	tbnz	w0, #31, 40c4f8 <ascii_strlower_n@plt+0x80e8>
  40c470:	mov	w22, wzr
  40c474:	add	w19, w19, #0x1
  40c478:	b	40c544 <ascii_strlower_n@plt+0x8134>
  40c47c:	mov	w22, w0
  40c480:	mov	w0, wzr
  40c484:	bl	4039b0 <log_get_max_level_realm@plt>
  40c488:	cmp	w0, #0x3
  40c48c:	b.lt	40c530 <ascii_strlower_n@plt+0x8120>  // b.tstop
  40c490:	mov	w0, #0x3                   	// #3
  40c494:	mov	w3, #0x2e7                 	// #743
  40c498:	b	40c514 <ascii_strlower_n@plt+0x8104>
  40c49c:	mov	w0, wzr
  40c4a0:	bl	4039b0 <log_get_max_level_realm@plt>
  40c4a4:	cmp	w0, #0x3
  40c4a8:	b.lt	40c530 <ascii_strlower_n@plt+0x8120>  // b.tstop
  40c4ac:	mov	w0, #0x3                   	// #3
  40c4b0:	mov	w3, #0x30f                 	// #783
  40c4b4:	b	40c514 <ascii_strlower_n@plt+0x8104>
  40c4b8:	mov	w22, w0
  40c4bc:	mov	w0, wzr
  40c4c0:	bl	4039b0 <log_get_max_level_realm@plt>
  40c4c4:	cmp	w0, #0x3
  40c4c8:	b.lt	40c530 <ascii_strlower_n@plt+0x8120>  // b.tstop
  40c4cc:	mov	w0, #0x3                   	// #3
  40c4d0:	mov	w3, #0x313                 	// #787
  40c4d4:	b	40c514 <ascii_strlower_n@plt+0x8104>
  40c4d8:	mov	w22, w0
  40c4dc:	mov	w0, wzr
  40c4e0:	bl	4039b0 <log_get_max_level_realm@plt>
  40c4e4:	cmp	w0, #0x3
  40c4e8:	b.lt	40c530 <ascii_strlower_n@plt+0x8120>  // b.tstop
  40c4ec:	mov	w0, #0x3                   	// #3
  40c4f0:	mov	w3, #0x317                 	// #791
  40c4f4:	b	40c514 <ascii_strlower_n@plt+0x8104>
  40c4f8:	mov	w22, w0
  40c4fc:	mov	w0, wzr
  40c500:	bl	4039b0 <log_get_max_level_realm@plt>
  40c504:	cmp	w0, #0x3
  40c508:	b.lt	40c530 <ascii_strlower_n@plt+0x8120>  // b.tstop
  40c50c:	mov	w0, #0x3                   	// #3
  40c510:	mov	w3, #0x31e                 	// #798
  40c514:	mov	w1, w22
  40c518:	mov	x2, x28
  40c51c:	mov	x4, x27
  40c520:	mov	x5, x25
  40c524:	bl	4039c0 <log_internal_realm@plt>
  40c528:	str	w0, [sp, #40]
  40c52c:	b	40c540 <ascii_strlower_n@plt+0x8130>
  40c530:	mov	w8, wzr
  40c534:	neg	w9, w22
  40c538:	sub	w8, w8, w9, uxtb
  40c53c:	str	w8, [sp, #40]
  40c540:	mov	w22, #0x1                   	// #1
  40c544:	cbz	w22, 40bfe4 <ascii_strlower_n@plt+0x7bd4>
  40c548:	b	40c86c <ascii_strlower_n@plt+0x845c>
  40c54c:	mov	w22, w0
  40c550:	tbnz	w0, #31, 40c6e8 <ascii_strlower_n@plt+0x82d8>
  40c554:	ldur	x0, [x29, #-40]
  40c558:	bl	403d20 <sd_bus_message_exit_container@plt>
  40c55c:	tbnz	w0, #31, 40c71c <ascii_strlower_n@plt+0x830c>
  40c560:	ldur	x0, [x29, #-40]
  40c564:	adrp	x2, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c568:	add	x2, x2, #0x934
  40c56c:	mov	w1, #0x61                  	// #97
  40c570:	bl	403d00 <sd_bus_message_enter_container@plt>
  40c574:	tbnz	w0, #31, 40c754 <ascii_strlower_n@plt+0x8344>
  40c578:	ldur	x0, [x29, #-40]
  40c57c:	add	x2, sp, #0x38
  40c580:	add	x3, sp, #0x48
  40c584:	mov	w1, #0x79                  	// #121
  40c588:	bl	403d60 <sd_bus_message_read_array@plt>
  40c58c:	cmp	w0, #0x1
  40c590:	b.lt	40c5f0 <ascii_strlower_n@plt+0x81e0>  // b.tstop
  40c594:	adrp	x22, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c598:	adrp	x23, 417000 <ascii_strlower_n@plt+0x12bf0>
  40c59c:	add	x22, x22, #0x937
  40c5a0:	add	x23, x23, #0xff4
  40c5a4:	ldr	x0, [sp, #56]
  40c5a8:	ldr	x1, [sp, #72]
  40c5ac:	bl	403ff0 <cescape_length@plt>
  40c5b0:	cbz	x0, 40c78c <ascii_strlower_n@plt+0x837c>
  40c5b4:	ldr	w1, [sp, #36]
  40c5b8:	mov	x24, x0
  40c5bc:	mov	x0, x22
  40c5c0:	mov	x2, x23
  40c5c4:	mov	x3, x24
  40c5c8:	bl	403a80 <printf@plt>
  40c5cc:	mov	x0, x24
  40c5d0:	bl	403a30 <free@plt>
  40c5d4:	ldur	x0, [x29, #-40]
  40c5d8:	add	x2, sp, #0x38
  40c5dc:	add	x3, sp, #0x48
  40c5e0:	mov	w1, #0x79                  	// #121
  40c5e4:	bl	403d60 <sd_bus_message_read_array@plt>
  40c5e8:	cmp	w0, #0x0
  40c5ec:	b.gt	40c5a4 <ascii_strlower_n@plt+0x8194>
  40c5f0:	mov	w24, w0
  40c5f4:	tbnz	w0, #31, 40c7a8 <ascii_strlower_n@plt+0x8398>
  40c5f8:	ldur	x0, [x29, #-40]
  40c5fc:	bl	403d20 <sd_bus_message_exit_container@plt>
  40c600:	tbnz	w0, #31, 40c7e8 <ascii_strlower_n@plt+0x83d8>
  40c604:	ldur	x0, [x29, #-40]
  40c608:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c60c:	add	x1, x1, #0x93e
  40c610:	sub	x2, x29, #0x8
  40c614:	sub	x3, x29, #0x10
  40c618:	sub	x4, x29, #0x18
  40c61c:	add	x5, sp, #0x40
  40c620:	bl	403d10 <sd_bus_message_read@plt>
  40c624:	tbnz	w0, #31, 40c820 <ascii_strlower_n@plt+0x8410>
  40c628:	ldur	x1, [x29, #-8]
  40c62c:	cbz	x1, 40c638 <ascii_strlower_n@plt+0x8228>
  40c630:	ldrb	w8, [x1]
  40c634:	cbnz	w8, 40c63c <ascii_strlower_n@plt+0x822c>
  40c638:	mov	x1, xzr
  40c63c:	ldur	x22, [x29, #-16]
  40c640:	stur	x1, [x29, #-8]
  40c644:	cbz	x22, 40c650 <ascii_strlower_n@plt+0x8240>
  40c648:	ldrb	w8, [x22]
  40c64c:	cbnz	w8, 40c654 <ascii_strlower_n@plt+0x8244>
  40c650:	mov	x22, xzr
  40c654:	mov	x0, x21
  40c658:	stur	x22, [x29, #-16]
  40c65c:	bl	404000 <strcmp_ptr@plt>
  40c660:	cbnz	w0, 40c684 <ascii_strlower_n@plt+0x8274>
  40c664:	mov	x0, x20
  40c668:	mov	x1, x22
  40c66c:	bl	404000 <strcmp_ptr@plt>
  40c670:	cbnz	w0, 40c684 <ascii_strlower_n@plt+0x8274>
  40c674:	ldur	x1, [x29, #-24]
  40c678:	mov	x0, x26
  40c67c:	bl	404000 <strcmp_ptr@plt>
  40c680:	cbz	w0, 40c6d4 <ascii_strlower_n@plt+0x82c4>
  40c684:	ldr	w1, [sp, #36]
  40c688:	adrp	x0, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c68c:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40c690:	add	x0, x0, #0x943
  40c694:	add	x2, x2, #0xff4
  40c698:	bl	403a80 <printf@plt>
  40c69c:	ldur	x1, [x29, #-8]
  40c6a0:	cbz	x1, 40c6b0 <ascii_strlower_n@plt+0x82a0>
  40c6a4:	adrp	x0, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c6a8:	add	x0, x0, #0x948
  40c6ac:	bl	403a80 <printf@plt>
  40c6b0:	ldur	x1, [x29, #-16]
  40c6b4:	cbz	x1, 40c6c4 <ascii_strlower_n@plt+0x82b4>
  40c6b8:	adrp	x0, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c6bc:	add	x0, x0, #0x948
  40c6c0:	bl	403a80 <printf@plt>
  40c6c4:	ldur	x1, [x29, #-24]
  40c6c8:	adrp	x0, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c6cc:	add	x0, x0, #0x94c
  40c6d0:	bl	403a80 <printf@plt>
  40c6d4:	ldr	x0, [sp, #64]
  40c6d8:	ldr	x1, [sp, #24]
  40c6dc:	bl	40b970 <ascii_strlower_n@plt+0x7560>
  40c6e0:	str	wzr, [sp, #40]
  40c6e4:	b	40c86c <ascii_strlower_n@plt+0x845c>
  40c6e8:	mov	w0, wzr
  40c6ec:	bl	4039b0 <log_get_max_level_realm@plt>
  40c6f0:	cmp	w0, #0x3
  40c6f4:	b.lt	40c85c <ascii_strlower_n@plt+0x844c>  // b.tstop
  40c6f8:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40c6fc:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c700:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c704:	add	x2, x2, #0xf07
  40c708:	add	x4, x4, #0x7eb
  40c70c:	add	x5, x5, #0x1be
  40c710:	mov	w0, #0x3                   	// #3
  40c714:	mov	w3, #0x323                 	// #803
  40c718:	b	40c854 <ascii_strlower_n@plt+0x8444>
  40c71c:	mov	w22, w0
  40c720:	mov	w0, wzr
  40c724:	bl	4039b0 <log_get_max_level_realm@plt>
  40c728:	cmp	w0, #0x3
  40c72c:	b.lt	40c85c <ascii_strlower_n@plt+0x844c>  // b.tstop
  40c730:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40c734:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c738:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c73c:	add	x2, x2, #0xf07
  40c740:	add	x4, x4, #0x7eb
  40c744:	add	x5, x5, #0x1be
  40c748:	mov	w0, #0x3                   	// #3
  40c74c:	mov	w3, #0x327                 	// #807
  40c750:	b	40c854 <ascii_strlower_n@plt+0x8444>
  40c754:	mov	w22, w0
  40c758:	mov	w0, wzr
  40c75c:	bl	4039b0 <log_get_max_level_realm@plt>
  40c760:	cmp	w0, #0x3
  40c764:	b.lt	40c85c <ascii_strlower_n@plt+0x844c>  // b.tstop
  40c768:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40c76c:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c770:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c774:	add	x2, x2, #0xf07
  40c778:	add	x4, x4, #0x7eb
  40c77c:	add	x5, x5, #0x1be
  40c780:	mov	w0, #0x3                   	// #3
  40c784:	mov	w3, #0x32b                 	// #811
  40c788:	b	40c854 <ascii_strlower_n@plt+0x8444>
  40c78c:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  40c790:	adrp	x3, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c794:	add	x1, x1, #0xf07
  40c798:	add	x3, x3, #0x7eb
  40c79c:	mov	w2, #0x332                 	// #818
  40c7a0:	bl	403a20 <log_oom_internal@plt>
  40c7a4:	b	40bedc <ascii_strlower_n@plt+0x7acc>
  40c7a8:	mov	w0, wzr
  40c7ac:	bl	4039b0 <log_get_max_level_realm@plt>
  40c7b0:	cmp	w0, #0x3
  40c7b4:	b.lt	40c7dc <ascii_strlower_n@plt+0x83cc>  // b.tstop
  40c7b8:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40c7bc:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c7c0:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c7c4:	add	x2, x2, #0xf07
  40c7c8:	add	x4, x4, #0x7eb
  40c7cc:	add	x5, x5, #0x1be
  40c7d0:	mov	w0, #0x3                   	// #3
  40c7d4:	mov	w3, #0x337                 	// #823
  40c7d8:	b	40bf74 <ascii_strlower_n@plt+0x7b64>
  40c7dc:	mov	w8, wzr
  40c7e0:	neg	w9, w24
  40c7e4:	b	40c864 <ascii_strlower_n@plt+0x8454>
  40c7e8:	mov	w22, w0
  40c7ec:	mov	w0, wzr
  40c7f0:	bl	4039b0 <log_get_max_level_realm@plt>
  40c7f4:	cmp	w0, #0x3
  40c7f8:	b.lt	40c85c <ascii_strlower_n@plt+0x844c>  // b.tstop
  40c7fc:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40c800:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c804:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c808:	add	x2, x2, #0xf07
  40c80c:	add	x4, x4, #0x7eb
  40c810:	add	x5, x5, #0x1be
  40c814:	mov	w0, #0x3                   	// #3
  40c818:	mov	w3, #0x33b                 	// #827
  40c81c:	b	40c854 <ascii_strlower_n@plt+0x8444>
  40c820:	mov	w22, w0
  40c824:	mov	w0, wzr
  40c828:	bl	4039b0 <log_get_max_level_realm@plt>
  40c82c:	cmp	w0, #0x3
  40c830:	b.lt	40c85c <ascii_strlower_n@plt+0x844c>  // b.tstop
  40c834:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40c838:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c83c:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c840:	add	x2, x2, #0xf07
  40c844:	add	x4, x4, #0x7eb
  40c848:	add	x5, x5, #0x1be
  40c84c:	mov	w0, #0x3                   	// #3
  40c850:	mov	w3, #0x33f                 	// #831
  40c854:	mov	w1, w22
  40c858:	b	40bed8 <ascii_strlower_n@plt+0x7ac8>
  40c85c:	mov	w8, wzr
  40c860:	neg	w9, w22
  40c864:	sub	w8, w8, w9, uxtb
  40c868:	str	w8, [sp, #40]
  40c86c:	sub	x0, x29, #0x40
  40c870:	bl	403d80 <sd_bus_error_free@plt>
  40c874:	ldur	x0, [x29, #-40]
  40c878:	cbz	x0, 40c880 <ascii_strlower_n@plt+0x8470>
  40c87c:	bl	403d90 <sd_bus_message_unref@plt>
  40c880:	ldur	x0, [x29, #-32]
  40c884:	ldr	w19, [sp, #40]
  40c888:	cbz	x0, 40c890 <ascii_strlower_n@plt+0x8480>
  40c88c:	bl	403d90 <sd_bus_message_unref@plt>
  40c890:	mov	w0, w19
  40c894:	ldp	x20, x19, [sp, #224]
  40c898:	ldp	x22, x21, [sp, #208]
  40c89c:	ldp	x24, x23, [sp, #192]
  40c8a0:	ldp	x26, x25, [sp, #176]
  40c8a4:	ldp	x28, x27, [sp, #160]
  40c8a8:	ldp	x29, x30, [sp, #144]
  40c8ac:	add	sp, sp, #0xf0
  40c8b0:	ret
  40c8b4:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40c8b8:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf0>
  40c8bc:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  40c8c0:	add	x1, x1, #0xc72
  40c8c4:	add	x2, x2, #0xc97
  40c8c8:	add	x4, x4, #0xcb0
  40c8cc:	mov	w3, #0x43                  	// #67
  40c8d0:	b	40c910 <ascii_strlower_n@plt+0x8500>
  40c8d4:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40c8d8:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40c8dc:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c8e0:	add	x1, x1, #0x8f4
  40c8e4:	add	x2, x2, #0xf07
  40c8e8:	add	x4, x4, #0x7a3
  40c8ec:	mov	w3, #0x2a5                 	// #677
  40c8f0:	bl	403aa0 <log_assert_failed_realm@plt>
  40c8f4:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  40c8f8:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40c8fc:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c900:	add	x1, x1, #0xa82
  40c904:	add	x2, x2, #0xf07
  40c908:	add	x4, x4, #0x7a3
  40c90c:	mov	w3, #0x2a6                 	// #678
  40c910:	mov	w0, wzr
  40c914:	bl	403aa0 <log_assert_failed_realm@plt>
  40c918:	stp	x29, x30, [sp, #-64]!
  40c91c:	stp	x24, x23, [sp, #16]
  40c920:	stp	x22, x21, [sp, #32]
  40c924:	stp	x20, x19, [sp, #48]
  40c928:	mov	x29, sp
  40c92c:	sub	sp, sp, #0x10
  40c930:	mov	w8, #0x1bb                 	// #443
  40c934:	sturh	w8, [x29, #-4]
  40c938:	stur	xzr, [x29, #-16]
  40c93c:	cbz	x0, 40cae0 <ascii_strlower_n@plt+0x86d0>
  40c940:	mov	x21, x2
  40c944:	cbz	x2, 40cb00 <ascii_strlower_n@plt+0x86f0>
  40c948:	mov	x20, x1
  40c94c:	mov	x19, x0
  40c950:	mov	w1, #0x3a                  	// #58
  40c954:	mov	x0, x21
  40c958:	bl	403da0 <strrchr@plt>
  40c95c:	cbz	x0, 40c9b8 <ascii_strlower_n@plt+0x85a8>
  40c960:	add	x22, x0, #0x1
  40c964:	mov	x24, x0
  40c968:	sub	x1, x29, #0x4
  40c96c:	mov	x0, x22
  40c970:	bl	404010 <parse_ip_port@plt>
  40c974:	tbnz	w0, #31, 40ca68 <ascii_strlower_n@plt+0x8658>
  40c978:	sub	x1, x24, x21
  40c97c:	mov	x0, x21
  40c980:	bl	403fb0 <strnlen@plt>
  40c984:	add	x8, x0, #0x10
  40c988:	and	x8, x8, #0xfffffffffffffff0
  40c98c:	mov	x9, sp
  40c990:	mov	x2, x0
  40c994:	sub	x22, x9, x8
  40c998:	mov	sp, x22
  40c99c:	strb	wzr, [x22, x0]
  40c9a0:	mov	x0, x22
  40c9a4:	mov	x1, x21
  40c9a8:	bl	403c70 <memcpy@plt>
  40c9ac:	ldurh	w2, [x29, #-4]
  40c9b0:	mov	x21, x22
  40c9b4:	b	40c9bc <ascii_strlower_n@plt+0x85ac>
  40c9b8:	mov	w2, #0x1bb                 	// #443
  40c9bc:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c9c0:	add	x1, x1, #0xa51
  40c9c4:	sub	x0, x29, #0x10
  40c9c8:	mov	x3, x20
  40c9cc:	mov	x4, x21
  40c9d0:	bl	403e20 <asprintf@plt>
  40c9d4:	tbnz	w0, #31, 40ca48 <ascii_strlower_n@plt+0x8638>
  40c9d8:	mov	w0, wzr
  40c9dc:	bl	4039b0 <log_get_max_level_realm@plt>
  40c9e0:	cmp	w0, #0x7
  40c9e4:	b.lt	40ca14 <ascii_strlower_n@plt+0x8604>  // b.tstop
  40c9e8:	ldur	x6, [x29, #-16]
  40c9ec:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40c9f0:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c9f4:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40c9f8:	add	x2, x2, #0xf07
  40c9fc:	add	x4, x4, #0xa31
  40ca00:	add	x5, x5, #0x9e9
  40ca04:	mov	w0, #0x7                   	// #7
  40ca08:	mov	w3, #0x3b8                 	// #952
  40ca0c:	mov	w1, wzr
  40ca10:	bl	4039c0 <log_internal_realm@plt>
  40ca14:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40ca18:	ldrh	w8, [x8, #68]
  40ca1c:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40ca20:	ldrh	w9, [x9, #64]
  40ca24:	ldur	x1, [x29, #-16]
  40ca28:	cmp	w8, #0x0
  40ca2c:	csinc	w2, w8, wzr, ne  // ne = any
  40ca30:	cmp	w9, #0x0
  40ca34:	mov	w8, #0x34                  	// #52
  40ca38:	csel	w3, w8, w9, eq  // eq = none
  40ca3c:	mov	x0, x19
  40ca40:	bl	40ac7c <ascii_strlower_n@plt+0x686c>
  40ca44:	b	40caa8 <ascii_strlower_n@plt+0x8698>
  40ca48:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  40ca4c:	adrp	x3, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40ca50:	add	x1, x1, #0xf07
  40ca54:	add	x3, x3, #0xa31
  40ca58:	mov	w2, #0x3b6                 	// #950
  40ca5c:	mov	w0, wzr
  40ca60:	bl	403a20 <log_oom_internal@plt>
  40ca64:	b	40caa8 <ascii_strlower_n@plt+0x8698>
  40ca68:	mov	w23, w0
  40ca6c:	mov	w0, wzr
  40ca70:	bl	4039b0 <log_get_max_level_realm@plt>
  40ca74:	cmp	w0, #0x3
  40ca78:	b.lt	40cad0 <ascii_strlower_n@plt+0x86c0>  // b.tstop
  40ca7c:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40ca80:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40ca84:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40ca88:	add	x2, x2, #0xf07
  40ca8c:	add	x4, x4, #0xa31
  40ca90:	add	x5, x5, #0xa3e
  40ca94:	mov	w0, #0x3                   	// #3
  40ca98:	mov	w3, #0x3ac                 	// #940
  40ca9c:	mov	w1, w23
  40caa0:	mov	x6, x22
  40caa4:	bl	4039c0 <log_internal_realm@plt>
  40caa8:	mov	w19, w0
  40caac:	ldur	x0, [x29, #-16]
  40cab0:	bl	403a30 <free@plt>
  40cab4:	mov	w0, w19
  40cab8:	mov	sp, x29
  40cabc:	ldp	x20, x19, [sp, #48]
  40cac0:	ldp	x22, x21, [sp, #32]
  40cac4:	ldp	x24, x23, [sp, #16]
  40cac8:	ldp	x29, x30, [sp], #64
  40cacc:	ret
  40cad0:	mov	w8, wzr
  40cad4:	neg	w9, w23
  40cad8:	sub	w19, w8, w9, uxtb
  40cadc:	b	40caac <ascii_strlower_n@plt+0x869c>
  40cae0:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40cae4:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40cae8:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40caec:	add	x1, x1, #0x8f4
  40caf0:	add	x2, x2, #0xf07
  40caf4:	add	x4, x4, #0x9fa
  40caf8:	mov	w3, #0x3a5                 	// #933
  40cafc:	bl	403aa0 <log_assert_failed_realm@plt>
  40cb00:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40cb04:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40cb08:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40cb0c:	add	x1, x1, #0x60e
  40cb10:	add	x2, x2, #0xf07
  40cb14:	add	x4, x4, #0x9fa
  40cb18:	mov	w3, #0x3a6                 	// #934
  40cb1c:	mov	w0, wzr
  40cb20:	bl	403aa0 <log_assert_failed_realm@plt>
  40cb24:	sub	sp, sp, #0x90
  40cb28:	stp	x29, x30, [sp, #48]
  40cb2c:	stp	x20, x19, [sp, #128]
  40cb30:	add	x29, sp, #0x30
  40cb34:	mov	x19, x5
  40cb38:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40cb3c:	stp	x22, x21, [sp, #112]
  40cb40:	mov	x21, x1
  40cb44:	add	x5, x5, #0xe70
  40cb48:	add	x1, x29, #0x18
  40cb4c:	str	x27, [sp, #64]
  40cb50:	stp	x26, x25, [sp, #80]
  40cb54:	stp	x24, x23, [sp, #96]
  40cb58:	mov	x20, x0
  40cb5c:	str	xzr, [x29, #24]
  40cb60:	bl	403cb0 <sd_bus_message_new_method_call@plt>
  40cb64:	tbnz	w0, #31, 40cc88 <ascii_strlower_n@plt+0x8878>
  40cb68:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40cb6c:	ldr	x0, [x29, #24]
  40cb70:	ldr	w2, [x8, #56]
  40cb74:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40cb78:	add	x1, x1, #0xc1b
  40cb7c:	bl	403cc0 <sd_bus_message_append@plt>
  40cb80:	tbnz	w0, #31, 40ccc0 <ascii_strlower_n@plt+0x88b0>
  40cb84:	ldr	x0, [x29, #24]
  40cb88:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf0>
  40cb8c:	add	x2, x2, #0x87e
  40cb90:	mov	w1, #0x61                  	// #97
  40cb94:	bl	404020 <sd_bus_message_open_container@plt>
  40cb98:	tbnz	w0, #31, 40ccf8 <ascii_strlower_n@plt+0x88e8>
  40cb9c:	adrp	x8, 417000 <ascii_strlower_n@plt+0x12bf0>
  40cba0:	add	x8, x8, #0xff4
  40cba4:	sub	x1, x29, #0x10
  40cba8:	mov	x0, x21
  40cbac:	stp	x8, xzr, [x29, #-16]
  40cbb0:	bl	403df0 <strv_equal@plt>
  40cbb4:	tbnz	w0, #0, 40cc60 <ascii_strlower_n@plt+0x8850>
  40cbb8:	cbz	x21, 40cc60 <ascii_strlower_n@plt+0x8850>
  40cbbc:	ldr	x0, [x21]
  40cbc0:	cbz	x0, 40cc60 <ascii_strlower_n@plt+0x8850>
  40cbc4:	add	x8, sp, #0x8
  40cbc8:	add	x25, x21, #0x8
  40cbcc:	adrp	x21, 419000 <ascii_strlower_n@plt+0x14bf0>
  40cbd0:	adrp	x22, 419000 <ascii_strlower_n@plt+0x14bf0>
  40cbd4:	add	x21, x21, #0xc17
  40cbd8:	add	x22, x22, #0xc1b
  40cbdc:	mov	w26, #0x4                   	// #4
  40cbe0:	orr	x23, x8, #0x4
  40cbe4:	mov	w27, #0x10                  	// #16
  40cbe8:	add	x1, sp, #0x8
  40cbec:	mov	x2, x23
  40cbf0:	bl	404030 <in_addr_from_string_auto@plt>
  40cbf4:	tbnz	w0, #31, 40cdc0 <ascii_strlower_n@plt+0x89b0>
  40cbf8:	ldr	x0, [x29, #24]
  40cbfc:	mov	w1, #0x72                  	// #114
  40cc00:	mov	x2, x21
  40cc04:	bl	404020 <sd_bus_message_open_container@plt>
  40cc08:	tbnz	w0, #31, 40ce04 <ascii_strlower_n@plt+0x89f4>
  40cc0c:	ldr	x0, [x29, #24]
  40cc10:	ldr	w2, [sp, #8]
  40cc14:	mov	x1, x22
  40cc18:	bl	403cc0 <sd_bus_message_append@plt>
  40cc1c:	tbnz	w0, #31, 40ce3c <ascii_strlower_n@plt+0x8a2c>
  40cc20:	ldr	w8, [sp, #8]
  40cc24:	orr	w9, w8, #0x8
  40cc28:	cmp	w9, #0xa
  40cc2c:	b.ne	40cef4 <ascii_strlower_n@plt+0x8ae4>  // b.any
  40cc30:	ldr	x0, [x29, #24]
  40cc34:	cmp	w8, #0xa
  40cc38:	csel	x3, x27, x26, eq  // eq = none
  40cc3c:	mov	w1, #0x79                  	// #121
  40cc40:	mov	x2, x23
  40cc44:	bl	403cd0 <sd_bus_message_append_array@plt>
  40cc48:	tbnz	w0, #31, 40ce74 <ascii_strlower_n@plt+0x8a64>
  40cc4c:	ldr	x0, [x29, #24]
  40cc50:	bl	404040 <sd_bus_message_close_container@plt>
  40cc54:	tbnz	w0, #31, 40ceac <ascii_strlower_n@plt+0x8a9c>
  40cc58:	ldr	x0, [x25], #8
  40cc5c:	cbnz	x0, 40cbe8 <ascii_strlower_n@plt+0x87d8>
  40cc60:	ldr	x0, [x29, #24]
  40cc64:	bl	404040 <sd_bus_message_close_container@plt>
  40cc68:	tbnz	w0, #31, 40cd78 <ascii_strlower_n@plt+0x8968>
  40cc6c:	ldr	x1, [x29, #24]
  40cc70:	mov	x0, x20
  40cc74:	mov	x2, xzr
  40cc78:	mov	x3, x19
  40cc7c:	mov	x4, xzr
  40cc80:	bl	403cf0 <sd_bus_call@plt>
  40cc84:	b	40cd34 <ascii_strlower_n@plt+0x8924>
  40cc88:	mov	w22, w0
  40cc8c:	mov	w0, wzr
  40cc90:	bl	4039b0 <log_get_max_level_realm@plt>
  40cc94:	cmp	w0, #0x3
  40cc98:	b.lt	40cd3c <ascii_strlower_n@plt+0x892c>  // b.tstop
  40cc9c:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40cca0:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40cca4:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40cca8:	add	x2, x2, #0xf07
  40ccac:	add	x4, x4, #0xe7b
  40ccb0:	add	x5, x5, #0x173
  40ccb4:	mov	w0, #0x3                   	// #3
  40ccb8:	mov	w3, #0x744                 	// #1860
  40ccbc:	b	40cd2c <ascii_strlower_n@plt+0x891c>
  40ccc0:	mov	w22, w0
  40ccc4:	mov	w0, wzr
  40ccc8:	bl	4039b0 <log_get_max_level_realm@plt>
  40cccc:	cmp	w0, #0x3
  40ccd0:	b.lt	40cd3c <ascii_strlower_n@plt+0x892c>  // b.tstop
  40ccd4:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40ccd8:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40ccdc:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40cce0:	add	x2, x2, #0xf07
  40cce4:	add	x4, x4, #0xe7b
  40cce8:	add	x5, x5, #0x173
  40ccec:	mov	w0, #0x3                   	// #3
  40ccf0:	mov	w3, #0x748                 	// #1864
  40ccf4:	b	40cd2c <ascii_strlower_n@plt+0x891c>
  40ccf8:	mov	w22, w0
  40ccfc:	mov	w0, wzr
  40cd00:	bl	4039b0 <log_get_max_level_realm@plt>
  40cd04:	cmp	w0, #0x3
  40cd08:	b.lt	40cd3c <ascii_strlower_n@plt+0x892c>  // b.tstop
  40cd0c:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40cd10:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40cd14:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40cd18:	add	x2, x2, #0xf07
  40cd1c:	add	x4, x4, #0xe7b
  40cd20:	add	x5, x5, #0x173
  40cd24:	mov	w0, #0x3                   	// #3
  40cd28:	mov	w3, #0x74c                 	// #1868
  40cd2c:	mov	w1, w22
  40cd30:	bl	4039c0 <log_internal_realm@plt>
  40cd34:	mov	w19, w0
  40cd38:	b	40cd48 <ascii_strlower_n@plt+0x8938>
  40cd3c:	mov	w8, wzr
  40cd40:	neg	w9, w22
  40cd44:	sub	w19, w8, w9, uxtb
  40cd48:	ldr	x0, [x29, #24]
  40cd4c:	cbz	x0, 40cd54 <ascii_strlower_n@plt+0x8944>
  40cd50:	bl	403d90 <sd_bus_message_unref@plt>
  40cd54:	mov	w0, w19
  40cd58:	ldp	x20, x19, [sp, #128]
  40cd5c:	ldp	x22, x21, [sp, #112]
  40cd60:	ldp	x24, x23, [sp, #96]
  40cd64:	ldp	x26, x25, [sp, #80]
  40cd68:	ldr	x27, [sp, #64]
  40cd6c:	ldp	x29, x30, [sp, #48]
  40cd70:	add	sp, sp, #0x90
  40cd74:	ret
  40cd78:	mov	w21, w0
  40cd7c:	mov	w0, wzr
  40cd80:	bl	4039b0 <log_get_max_level_realm@plt>
  40cd84:	cmp	w0, #0x3
  40cd88:	b.lt	40cdb4 <ascii_strlower_n@plt+0x89a4>  // b.tstop
  40cd8c:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40cd90:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40cd94:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40cd98:	add	x2, x2, #0xf07
  40cd9c:	add	x4, x4, #0xe7b
  40cda0:	add	x5, x5, #0x173
  40cda4:	mov	w0, #0x3                   	// #3
  40cda8:	mov	w3, #0x76b                 	// #1899
  40cdac:	mov	w1, w21
  40cdb0:	b	40cd30 <ascii_strlower_n@plt+0x8920>
  40cdb4:	mov	w8, wzr
  40cdb8:	neg	w9, w21
  40cdbc:	b	40cd44 <ascii_strlower_n@plt+0x8934>
  40cdc0:	mov	w24, w0
  40cdc4:	mov	w0, wzr
  40cdc8:	bl	4039b0 <log_get_max_level_realm@plt>
  40cdcc:	cmp	w0, #0x3
  40cdd0:	b.lt	40cee8 <ascii_strlower_n@plt+0x8ad8>  // b.tstop
  40cdd4:	ldur	x6, [x25, #-8]
  40cdd8:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40cddc:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40cde0:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40cde4:	add	x2, x2, #0xf07
  40cde8:	add	x4, x4, #0xe7b
  40cdec:	add	x5, x5, #0xe84
  40cdf0:	mov	w0, #0x3                   	// #3
  40cdf4:	mov	w3, #0x756                 	// #1878
  40cdf8:	mov	w1, w24
  40cdfc:	bl	4039c0 <log_internal_realm@plt>
  40ce00:	b	40cd34 <ascii_strlower_n@plt+0x8924>
  40ce04:	mov	w24, w0
  40ce08:	mov	w0, wzr
  40ce0c:	bl	4039b0 <log_get_max_level_realm@plt>
  40ce10:	cmp	w0, #0x3
  40ce14:	b.lt	40cee8 <ascii_strlower_n@plt+0x8ad8>  // b.tstop
  40ce18:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40ce1c:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40ce20:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40ce24:	add	x2, x2, #0xf07
  40ce28:	add	x4, x4, #0xe7b
  40ce2c:	add	x5, x5, #0x173
  40ce30:	mov	w0, #0x3                   	// #3
  40ce34:	mov	w3, #0x75a                 	// #1882
  40ce38:	b	40cee0 <ascii_strlower_n@plt+0x8ad0>
  40ce3c:	mov	w24, w0
  40ce40:	mov	w0, wzr
  40ce44:	bl	4039b0 <log_get_max_level_realm@plt>
  40ce48:	cmp	w0, #0x3
  40ce4c:	b.lt	40cee8 <ascii_strlower_n@plt+0x8ad8>  // b.tstop
  40ce50:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40ce54:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40ce58:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40ce5c:	add	x2, x2, #0xf07
  40ce60:	add	x4, x4, #0xe7b
  40ce64:	add	x5, x5, #0x173
  40ce68:	mov	w0, #0x3                   	// #3
  40ce6c:	mov	w3, #0x75e                 	// #1886
  40ce70:	b	40cee0 <ascii_strlower_n@plt+0x8ad0>
  40ce74:	mov	w24, w0
  40ce78:	mov	w0, wzr
  40ce7c:	bl	4039b0 <log_get_max_level_realm@plt>
  40ce80:	cmp	w0, #0x3
  40ce84:	b.lt	40cee8 <ascii_strlower_n@plt+0x8ad8>  // b.tstop
  40ce88:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40ce8c:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40ce90:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40ce94:	add	x2, x2, #0xf07
  40ce98:	add	x4, x4, #0xe7b
  40ce9c:	add	x5, x5, #0x173
  40cea0:	mov	w0, #0x3                   	// #3
  40cea4:	mov	w3, #0x762                 	// #1890
  40cea8:	b	40cee0 <ascii_strlower_n@plt+0x8ad0>
  40ceac:	mov	w24, w0
  40ceb0:	mov	w0, wzr
  40ceb4:	bl	4039b0 <log_get_max_level_realm@plt>
  40ceb8:	cmp	w0, #0x3
  40cebc:	b.lt	40cee8 <ascii_strlower_n@plt+0x8ad8>  // b.tstop
  40cec0:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40cec4:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40cec8:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40cecc:	add	x2, x2, #0xf07
  40ced0:	add	x4, x4, #0xe7b
  40ced4:	add	x5, x5, #0x173
  40ced8:	mov	w0, #0x3                   	// #3
  40cedc:	mov	w3, #0x766                 	// #1894
  40cee0:	mov	w1, w24
  40cee4:	b	40cd30 <ascii_strlower_n@plt+0x8920>
  40cee8:	mov	w8, wzr
  40ceec:	neg	w9, w24
  40cef0:	b	40cd44 <ascii_strlower_n@plt+0x8934>
  40cef4:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40cef8:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf0>
  40cefc:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf0>
  40cf00:	add	x1, x1, #0xc72
  40cf04:	add	x2, x2, #0xc97
  40cf08:	add	x4, x4, #0xcb0
  40cf0c:	mov	w3, #0x43                  	// #67
  40cf10:	mov	w0, wzr
  40cf14:	bl	403aa0 <log_assert_failed_realm@plt>
  40cf18:	sub	sp, sp, #0x60
  40cf1c:	stp	x29, x30, [sp, #32]
  40cf20:	stp	x20, x19, [sp, #80]
  40cf24:	add	x29, sp, #0x20
  40cf28:	mov	x19, x5
  40cf2c:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40cf30:	stp	x22, x21, [sp, #64]
  40cf34:	mov	x21, x1
  40cf38:	add	x5, x5, #0xf04
  40cf3c:	sub	x1, x29, #0x8
  40cf40:	stp	x24, x23, [sp, #48]
  40cf44:	mov	x20, x0
  40cf48:	stur	xzr, [x29, #-8]
  40cf4c:	bl	403cb0 <sd_bus_message_new_method_call@plt>
  40cf50:	tbnz	w0, #31, 40d04c <ascii_strlower_n@plt+0x8c3c>
  40cf54:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40cf58:	ldur	x0, [x29, #-8]
  40cf5c:	ldr	w2, [x8, #56]
  40cf60:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40cf64:	add	x1, x1, #0xc1b
  40cf68:	bl	403cc0 <sd_bus_message_append@plt>
  40cf6c:	tbnz	w0, #31, 40d084 <ascii_strlower_n@plt+0x8c74>
  40cf70:	ldur	x0, [x29, #-8]
  40cf74:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf0>
  40cf78:	add	x2, x2, #0xd92
  40cf7c:	mov	w1, #0x61                  	// #97
  40cf80:	bl	404020 <sd_bus_message_open_container@plt>
  40cf84:	tbnz	w0, #31, 40d0bc <ascii_strlower_n@plt+0x8cac>
  40cf88:	adrp	x8, 417000 <ascii_strlower_n@plt+0x12bf0>
  40cf8c:	add	x8, x8, #0xff4
  40cf90:	add	x1, sp, #0x8
  40cf94:	mov	x0, x21
  40cf98:	stp	x8, xzr, [sp, #8]
  40cf9c:	bl	403df0 <strv_equal@plt>
  40cfa0:	tbnz	w0, #0, 40d024 <ascii_strlower_n@plt+0x8c14>
  40cfa4:	cbz	x21, 40d024 <ascii_strlower_n@plt+0x8c14>
  40cfa8:	ldr	x8, [x21]
  40cfac:	cbz	x8, 40d024 <ascii_strlower_n@plt+0x8c14>
  40cfb0:	adrp	x22, 419000 <ascii_strlower_n@plt+0x14bf0>
  40cfb4:	add	x24, x21, #0x8
  40cfb8:	add	x22, x22, #0xd92
  40cfbc:	mov	x9, x8
  40cfc0:	ldrb	w10, [x9], #1
  40cfc4:	mov	x1, xzr
  40cfc8:	mov	w2, wzr
  40cfcc:	mov	x3, xzr
  40cfd0:	cmp	w10, #0x7e
  40cfd4:	csel	x21, x9, x8, eq  // eq = none
  40cfd8:	mov	x0, x21
  40cfdc:	bl	403e00 <dns_name_concat@plt>
  40cfe0:	cmp	w0, #0x0
  40cfe4:	csinc	w8, w0, wzr, lt  // lt = tstop
  40cfe8:	cmn	w0, #0x16
  40cfec:	csel	w23, wzr, w8, eq  // eq = none
  40cff0:	tbnz	w23, #31, 40d16c <ascii_strlower_n@plt+0x8d5c>
  40cff4:	cbz	w23, 40d1ac <ascii_strlower_n@plt+0x8d9c>
  40cff8:	ldur	x8, [x24, #-8]
  40cffc:	ldur	x0, [x29, #-8]
  40d000:	mov	x1, x22
  40d004:	mov	x2, x21
  40d008:	ldrb	w8, [x8]
  40d00c:	cmp	w8, #0x7e
  40d010:	cset	w3, eq  // eq = none
  40d014:	bl	403cc0 <sd_bus_message_append@plt>
  40d018:	tbnz	w0, #31, 40d1f0 <ascii_strlower_n@plt+0x8de0>
  40d01c:	ldr	x8, [x24], #8
  40d020:	cbnz	x8, 40cfbc <ascii_strlower_n@plt+0x8bac>
  40d024:	ldur	x0, [x29, #-8]
  40d028:	bl	404040 <sd_bus_message_close_container@plt>
  40d02c:	tbnz	w0, #31, 40d134 <ascii_strlower_n@plt+0x8d24>
  40d030:	ldur	x1, [x29, #-8]
  40d034:	mov	x0, x20
  40d038:	mov	x2, xzr
  40d03c:	mov	x3, x19
  40d040:	mov	x4, xzr
  40d044:	bl	403cf0 <sd_bus_call@plt>
  40d048:	b	40d0f8 <ascii_strlower_n@plt+0x8ce8>
  40d04c:	mov	w22, w0
  40d050:	mov	w0, wzr
  40d054:	bl	4039b0 <log_get_max_level_realm@plt>
  40d058:	cmp	w0, #0x3
  40d05c:	b.lt	40d100 <ascii_strlower_n@plt+0x8cf0>  // b.tstop
  40d060:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40d064:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40d068:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40d06c:	add	x2, x2, #0xf07
  40d070:	add	x4, x4, #0xf13
  40d074:	add	x5, x5, #0x173
  40d078:	mov	w0, #0x3                   	// #3
  40d07c:	mov	w3, #0x7a9                 	// #1961
  40d080:	b	40d0f0 <ascii_strlower_n@plt+0x8ce0>
  40d084:	mov	w22, w0
  40d088:	mov	w0, wzr
  40d08c:	bl	4039b0 <log_get_max_level_realm@plt>
  40d090:	cmp	w0, #0x3
  40d094:	b.lt	40d100 <ascii_strlower_n@plt+0x8cf0>  // b.tstop
  40d098:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40d09c:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40d0a0:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40d0a4:	add	x2, x2, #0xf07
  40d0a8:	add	x4, x4, #0xf13
  40d0ac:	add	x5, x5, #0x173
  40d0b0:	mov	w0, #0x3                   	// #3
  40d0b4:	mov	w3, #0x7ad                 	// #1965
  40d0b8:	b	40d0f0 <ascii_strlower_n@plt+0x8ce0>
  40d0bc:	mov	w22, w0
  40d0c0:	mov	w0, wzr
  40d0c4:	bl	4039b0 <log_get_max_level_realm@plt>
  40d0c8:	cmp	w0, #0x3
  40d0cc:	b.lt	40d100 <ascii_strlower_n@plt+0x8cf0>  // b.tstop
  40d0d0:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40d0d4:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40d0d8:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40d0dc:	add	x2, x2, #0xf07
  40d0e0:	add	x4, x4, #0xf13
  40d0e4:	add	x5, x5, #0x173
  40d0e8:	mov	w0, #0x3                   	// #3
  40d0ec:	mov	w3, #0x7b1                 	// #1969
  40d0f0:	mov	w1, w22
  40d0f4:	bl	4039c0 <log_internal_realm@plt>
  40d0f8:	mov	w19, w0
  40d0fc:	b	40d10c <ascii_strlower_n@plt+0x8cfc>
  40d100:	mov	w8, wzr
  40d104:	neg	w9, w22
  40d108:	sub	w19, w8, w9, uxtb
  40d10c:	ldur	x0, [x29, #-8]
  40d110:	cbz	x0, 40d118 <ascii_strlower_n@plt+0x8d08>
  40d114:	bl	403d90 <sd_bus_message_unref@plt>
  40d118:	mov	w0, w19
  40d11c:	ldp	x20, x19, [sp, #80]
  40d120:	ldp	x22, x21, [sp, #64]
  40d124:	ldp	x24, x23, [sp, #48]
  40d128:	ldp	x29, x30, [sp, #32]
  40d12c:	add	sp, sp, #0x60
  40d130:	ret
  40d134:	mov	w21, w0
  40d138:	mov	w0, wzr
  40d13c:	bl	4039b0 <log_get_max_level_realm@plt>
  40d140:	cmp	w0, #0x3
  40d144:	b.lt	40d22c <ascii_strlower_n@plt+0x8e1c>  // b.tstop
  40d148:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40d14c:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40d150:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40d154:	add	x2, x2, #0xf07
  40d158:	add	x4, x4, #0xf13
  40d15c:	add	x5, x5, #0x173
  40d160:	mov	w0, #0x3                   	// #3
  40d164:	mov	w3, #0x7ca                 	// #1994
  40d168:	b	40d224 <ascii_strlower_n@plt+0x8e14>
  40d16c:	mov	w0, wzr
  40d170:	bl	4039b0 <log_get_max_level_realm@plt>
  40d174:	cmp	w0, #0x3
  40d178:	b.lt	40d238 <ascii_strlower_n@plt+0x8e28>  // b.tstop
  40d17c:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40d180:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40d184:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40d188:	add	x2, x2, #0xf07
  40d18c:	add	x4, x4, #0xf13
  40d190:	add	x5, x5, #0xf1f
  40d194:	mov	w0, #0x3                   	// #3
  40d198:	mov	w3, #0x7bd                 	// #1981
  40d19c:	mov	w1, w23
  40d1a0:	mov	x6, x21
  40d1a4:	bl	4039c0 <log_internal_realm@plt>
  40d1a8:	b	40d0f8 <ascii_strlower_n@plt+0x8ce8>
  40d1ac:	mov	w0, wzr
  40d1b0:	bl	4039b0 <log_get_max_level_realm@plt>
  40d1b4:	cmp	w0, #0x3
  40d1b8:	b.lt	40d1e8 <ascii_strlower_n@plt+0x8dd8>  // b.tstop
  40d1bc:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40d1c0:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40d1c4:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40d1c8:	add	x2, x2, #0xf07
  40d1cc:	add	x4, x4, #0xf13
  40d1d0:	add	x5, x5, #0xf4a
  40d1d4:	mov	w0, #0x3                   	// #3
  40d1d8:	mov	w3, #0x7bf                 	// #1983
  40d1dc:	mov	w1, wzr
  40d1e0:	mov	x6, x21
  40d1e4:	bl	4039c0 <log_internal_realm@plt>
  40d1e8:	mov	w19, #0xffffffea            	// #-22
  40d1ec:	b	40d10c <ascii_strlower_n@plt+0x8cfc>
  40d1f0:	mov	w21, w0
  40d1f4:	mov	w0, wzr
  40d1f8:	bl	4039b0 <log_get_max_level_realm@plt>
  40d1fc:	cmp	w0, #0x3
  40d200:	b.lt	40d22c <ascii_strlower_n@plt+0x8e1c>  // b.tstop
  40d204:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40d208:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40d20c:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40d210:	add	x2, x2, #0xf07
  40d214:	add	x4, x4, #0xf13
  40d218:	add	x5, x5, #0x173
  40d21c:	mov	w0, #0x3                   	// #3
  40d220:	mov	w3, #0x7c5                 	// #1989
  40d224:	mov	w1, w21
  40d228:	b	40d0f4 <ascii_strlower_n@plt+0x8ce4>
  40d22c:	mov	w8, wzr
  40d230:	neg	w9, w21
  40d234:	b	40d108 <ascii_strlower_n@plt+0x8cf8>
  40d238:	mov	w8, wzr
  40d23c:	neg	w9, w23
  40d240:	b	40d108 <ascii_strlower_n@plt+0x8cf8>
  40d244:	sub	sp, sp, #0x40
  40d248:	stp	x20, x19, [sp, #48]
  40d24c:	mov	x19, x5
  40d250:	adrp	x5, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d254:	stp	x22, x21, [sp, #32]
  40d258:	mov	x21, x1
  40d25c:	add	x5, x5, #0x214
  40d260:	add	x1, sp, #0x8
  40d264:	stp	x29, x30, [sp, #16]
  40d268:	add	x29, sp, #0x10
  40d26c:	mov	x20, x0
  40d270:	str	xzr, [sp, #8]
  40d274:	bl	403cb0 <sd_bus_message_new_method_call@plt>
  40d278:	tbnz	w0, #31, 40d2c4 <ascii_strlower_n@plt+0x8eb4>
  40d27c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf0>
  40d280:	ldr	x0, [sp, #8]
  40d284:	ldr	w2, [x8, #56]
  40d288:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40d28c:	add	x1, x1, #0xc1b
  40d290:	bl	403cc0 <sd_bus_message_append@plt>
  40d294:	tbnz	w0, #31, 40d2fc <ascii_strlower_n@plt+0x8eec>
  40d298:	ldr	x0, [sp, #8]
  40d29c:	mov	x1, x21
  40d2a0:	bl	404050 <sd_bus_message_append_strv@plt>
  40d2a4:	tbnz	w0, #31, 40d344 <ascii_strlower_n@plt+0x8f34>
  40d2a8:	ldr	x1, [sp, #8]
  40d2ac:	mov	x0, x20
  40d2b0:	mov	x2, xzr
  40d2b4:	mov	x3, x19
  40d2b8:	mov	x4, xzr
  40d2bc:	bl	403cf0 <sd_bus_call@plt>
  40d2c0:	b	40d380 <ascii_strlower_n@plt+0x8f70>
  40d2c4:	mov	w22, w0
  40d2c8:	mov	w0, wzr
  40d2cc:	bl	4039b0 <log_get_max_level_realm@plt>
  40d2d0:	cmp	w0, #0x3
  40d2d4:	b.lt	40d338 <ascii_strlower_n@plt+0x8f28>  // b.tstop
  40d2d8:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40d2dc:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d2e0:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40d2e4:	add	x2, x2, #0xf07
  40d2e8:	add	x4, x4, #0x236
  40d2ec:	add	x5, x5, #0x173
  40d2f0:	mov	w0, #0x3                   	// #3
  40d2f4:	mov	w3, #0x90f                 	// #2319
  40d2f8:	b	40d330 <ascii_strlower_n@plt+0x8f20>
  40d2fc:	mov	w22, w0
  40d300:	mov	w0, wzr
  40d304:	bl	4039b0 <log_get_max_level_realm@plt>
  40d308:	cmp	w0, #0x3
  40d30c:	b.lt	40d338 <ascii_strlower_n@plt+0x8f28>  // b.tstop
  40d310:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40d314:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d318:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40d31c:	add	x2, x2, #0xf07
  40d320:	add	x4, x4, #0x236
  40d324:	add	x5, x5, #0x173
  40d328:	mov	w0, #0x3                   	// #3
  40d32c:	mov	w3, #0x913                 	// #2323
  40d330:	mov	w1, w22
  40d334:	b	40d37c <ascii_strlower_n@plt+0x8f6c>
  40d338:	mov	w8, wzr
  40d33c:	neg	w9, w22
  40d340:	b	40d390 <ascii_strlower_n@plt+0x8f80>
  40d344:	mov	w21, w0
  40d348:	mov	w0, wzr
  40d34c:	bl	4039b0 <log_get_max_level_realm@plt>
  40d350:	cmp	w0, #0x3
  40d354:	b.lt	40d388 <ascii_strlower_n@plt+0x8f78>  // b.tstop
  40d358:	adrp	x2, 417000 <ascii_strlower_n@plt+0x12bf0>
  40d35c:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d360:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40d364:	add	x2, x2, #0xf07
  40d368:	add	x4, x4, #0x236
  40d36c:	add	x5, x5, #0x173
  40d370:	mov	w0, #0x3                   	// #3
  40d374:	mov	w3, #0x917                 	// #2327
  40d378:	mov	w1, w21
  40d37c:	bl	4039c0 <log_internal_realm@plt>
  40d380:	mov	w19, w0
  40d384:	b	40d394 <ascii_strlower_n@plt+0x8f84>
  40d388:	mov	w8, wzr
  40d38c:	neg	w9, w21
  40d390:	sub	w19, w8, w9, uxtb
  40d394:	ldr	x0, [sp, #8]
  40d398:	cbz	x0, 40d3a0 <ascii_strlower_n@plt+0x8f90>
  40d39c:	bl	403d90 <sd_bus_message_unref@plt>
  40d3a0:	mov	w0, w19
  40d3a4:	ldp	x20, x19, [sp, #48]
  40d3a8:	ldp	x22, x21, [sp, #32]
  40d3ac:	ldp	x29, x30, [sp, #16]
  40d3b0:	add	sp, sp, #0x40
  40d3b4:	ret
  40d3b8:	stp	x29, x30, [sp, #-64]!
  40d3bc:	str	x23, [sp, #16]
  40d3c0:	stp	x22, x21, [sp, #32]
  40d3c4:	stp	x20, x19, [sp, #48]
  40d3c8:	mov	x29, sp
  40d3cc:	cbz	x0, 40d4d0 <ascii_strlower_n@plt+0x90c0>
  40d3d0:	cmp	x3, #0xb
  40d3d4:	b.ls	40d4f0 <ascii_strlower_n@plt+0x90e0>  // b.plast
  40d3d8:	mov	w8, #0xffff                	// #65535
  40d3dc:	cmp	x3, x8
  40d3e0:	mov	x21, x2
  40d3e4:	csel	x22, x3, x8, cc  // cc = lo, ul, last
  40d3e8:	cmp	x2, #0x10, lsl #12
  40d3ec:	b.cc	40d440 <ascii_strlower_n@plt+0x9030>  // b.lo, b.ul, b.last
  40d3f0:	mov	w0, wzr
  40d3f4:	bl	4039b0 <log_get_max_level_realm@plt>
  40d3f8:	cmp	w0, #0x3
  40d3fc:	b.lt	40d4b0 <ascii_strlower_n@plt+0x90a0>  // b.tstop
  40d400:	mov	x6, x21
  40d404:	ldp	x20, x19, [sp, #48]
  40d408:	ldp	x22, x21, [sp, #32]
  40d40c:	ldr	x23, [sp, #16]
  40d410:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d414:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d418:	adrp	x5, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d41c:	mov	w1, #0x1b                  	// #27
  40d420:	add	x2, x2, #0x2fc
  40d424:	add	x4, x4, #0x37f
  40d428:	add	x5, x5, #0x38e
  40d42c:	mov	w0, #0x3                   	// #3
  40d430:	movk	w1, #0x4000, lsl #16
  40d434:	mov	w3, #0x38                  	// #56
  40d438:	ldp	x29, x30, [sp], #64
  40d43c:	b	4039c0 <log_internal_realm@plt>
  40d440:	mov	w20, w1
  40d444:	mov	x19, x0
  40d448:	bl	404060 <page_size@plt>
  40d44c:	add	x8, x21, #0xa7
  40d450:	cmp	x21, #0xc
  40d454:	mov	w9, #0x2a7                 	// #679
  40d458:	csel	x8, x9, x8, cc  // cc = lo, ul, last
  40d45c:	add	x8, x0, x8
  40d460:	neg	x9, x0
  40d464:	and	x8, x8, x9
  40d468:	sub	x8, x8, #0xa8
  40d46c:	cmp	x8, x22
  40d470:	csel	x21, x22, x8, hi  // hi = pmore
  40d474:	add	x1, x21, #0xa8
  40d478:	mov	w0, #0x1                   	// #1
  40d47c:	mov	w23, #0x1                   	// #1
  40d480:	bl	404070 <calloc@plt>
  40d484:	cbz	x0, 40d4b8 <ascii_strlower_n@plt+0x90a8>
  40d488:	mov	x8, x0
  40d48c:	mov	w0, wzr
  40d490:	mov	w9, #0xc                   	// #12
  40d494:	mov	x10, #0xffffffffffffffff    	// #-1
  40d498:	stp	w23, w20, [x8]
  40d49c:	stp	x9, x21, [x8, #8]
  40d4a0:	stp	x9, x22, [x8, #24]
  40d4a4:	stp	x10, x10, [x8, #56]
  40d4a8:	str	x8, [x19]
  40d4ac:	b	40d4bc <ascii_strlower_n@plt+0x90ac>
  40d4b0:	mov	w0, #0xffffffe5            	// #-27
  40d4b4:	b	40d4bc <ascii_strlower_n@plt+0x90ac>
  40d4b8:	mov	w0, #0xfffffff4            	// #-12
  40d4bc:	ldp	x20, x19, [sp, #48]
  40d4c0:	ldp	x22, x21, [sp, #32]
  40d4c4:	ldr	x23, [sp, #16]
  40d4c8:	ldp	x29, x30, [sp], #64
  40d4cc:	ret
  40d4d0:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40d4d4:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d4d8:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d4dc:	add	x1, x1, #0xc0e
  40d4e0:	add	x2, x2, #0x2fc
  40d4e4:	add	x4, x4, #0x31e
  40d4e8:	mov	w3, #0x2c                  	// #44
  40d4ec:	bl	403aa0 <log_assert_failed_realm@plt>
  40d4f0:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d4f4:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d4f8:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d4fc:	add	x1, x1, #0x35c
  40d500:	add	x2, x2, #0x2fc
  40d504:	add	x4, x4, #0x31e
  40d508:	mov	w3, #0x2d                  	// #45
  40d50c:	mov	w0, wzr
  40d510:	bl	403aa0 <log_assert_failed_realm@plt>
  40d514:	stp	x29, x30, [sp, #-16]!
  40d518:	mov	x29, sp
  40d51c:	cbz	x0, 40d584 <ascii_strlower_n@plt+0x9174>
  40d520:	ldr	x8, [x0, #40]
  40d524:	ldr	w9, [x0, #4]
  40d528:	add	x10, x0, #0xa8
  40d52c:	cmp	x8, #0x0
  40d530:	csel	x8, x10, x8, eq  // eq = none
  40d534:	cmp	w9, #0x1
  40d538:	b.eq	40d550 <ascii_strlower_n@plt+0x9140>  // b.none
  40d53c:	cmp	w9, #0x2
  40d540:	b.ne	40d560 <ascii_strlower_n@plt+0x9150>  // b.any
  40d544:	tbnz	w2, #0, 40d5a4 <ascii_strlower_n@plt+0x9194>
  40d548:	mov	w9, wzr
  40d54c:	b	40d578 <ascii_strlower_n@plt+0x9168>
  40d550:	tst	w2, #0x1
  40d554:	mov	w9, #0x200                 	// #512
  40d558:	csel	w9, w9, wzr, ne  // ne = any
  40d55c:	b	40d574 <ascii_strlower_n@plt+0x9164>
  40d560:	tbnz	w2, #0, 40d5c4 <ascii_strlower_n@plt+0x91b4>
  40d564:	tst	w1, #0x1
  40d568:	mov	w9, #0x100                 	// #256
  40d56c:	mov	w10, #0x110                 	// #272
  40d570:	csel	w9, w10, w9, ne  // ne = any
  40d574:	rev16	w9, w9
  40d578:	strh	w9, [x8, #2]
  40d57c:	ldp	x29, x30, [sp], #16
  40d580:	ret
  40d584:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d588:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d58c:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d590:	add	x1, x1, #0x3b6
  40d594:	add	x2, x2, #0x2fc
  40d598:	add	x4, x4, #0x3b8
  40d59c:	mov	w3, #0x5e                  	// #94
  40d5a0:	bl	403aa0 <log_assert_failed_realm@plt>
  40d5a4:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d5a8:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d5ac:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d5b0:	add	x1, x1, #0x3ed
  40d5b4:	add	x2, x2, #0x2fc
  40d5b8:	add	x4, x4, #0x3b8
  40d5bc:	mov	w3, #0x64                  	// #100
  40d5c0:	b	40d5e0 <ascii_strlower_n@plt+0x91d0>
  40d5c4:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d5c8:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d5cc:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d5d0:	add	x1, x1, #0x3ed
  40d5d4:	add	x2, x2, #0x2fc
  40d5d8:	add	x4, x4, #0x3b8
  40d5dc:	mov	w3, #0x7e                  	// #126
  40d5e0:	mov	w0, wzr
  40d5e4:	bl	403aa0 <log_assert_failed_realm@plt>
  40d5e8:	sub	sp, sp, #0x30
  40d5ec:	stp	x29, x30, [sp, #16]
  40d5f0:	stp	x20, x19, [sp, #32]
  40d5f4:	add	x29, sp, #0x10
  40d5f8:	cbz	x0, 40d640 <ascii_strlower_n@plt+0x9230>
  40d5fc:	mov	w20, w3
  40d600:	mov	x19, x0
  40d604:	add	x0, sp, #0x8
  40d608:	mov	w3, #0xffff                	// #65535
  40d60c:	bl	40d3b8 <ascii_strlower_n@plt+0x8fa8>
  40d610:	tbnz	w0, #31, 40d630 <ascii_strlower_n@plt+0x9220>
  40d614:	ldr	x0, [sp, #8]
  40d618:	and	w1, w20, #0x1
  40d61c:	mov	w2, wzr
  40d620:	bl	40d514 <ascii_strlower_n@plt+0x9104>
  40d624:	ldr	x8, [sp, #8]
  40d628:	mov	w0, wzr
  40d62c:	str	x8, [x19]
  40d630:	ldp	x20, x19, [sp, #32]
  40d634:	ldp	x29, x30, [sp, #16]
  40d638:	add	sp, sp, #0x30
  40d63c:	ret
  40d640:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40d644:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d648:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d64c:	add	x1, x1, #0xc0e
  40d650:	add	x2, x2, #0x2fc
  40d654:	add	x4, x4, #0x3f8
  40d658:	mov	w3, #0x90                  	// #144
  40d65c:	bl	403aa0 <log_assert_failed_realm@plt>
  40d660:	stp	x29, x30, [sp, #-16]!
  40d664:	mov	x29, sp
  40d668:	cbz	x0, 40d684 <ascii_strlower_n@plt+0x9274>
  40d66c:	ldrb	w8, [x0, #160]
  40d670:	tbnz	w8, #0, 40d68c <ascii_strlower_n@plt+0x927c>
  40d674:	ldr	w8, [x0]
  40d678:	cbz	w8, 40d6ac <ascii_strlower_n@plt+0x929c>
  40d67c:	add	w8, w8, #0x1
  40d680:	str	w8, [x0]
  40d684:	ldp	x29, x30, [sp], #16
  40d688:	ret
  40d68c:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d690:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d694:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d698:	add	x1, x1, #0x43b
  40d69c:	add	x2, x2, #0x2fc
  40d6a0:	add	x4, x4, #0x448
  40d6a4:	mov	w3, #0xa4                  	// #164
  40d6a8:	b	40d6c8 <ascii_strlower_n@plt+0x92b8>
  40d6ac:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d6b0:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d6b4:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d6b8:	add	x1, x1, #0x46f
  40d6bc:	add	x2, x2, #0x2fc
  40d6c0:	add	x4, x4, #0x448
  40d6c4:	mov	w3, #0xa6                  	// #166
  40d6c8:	mov	w0, wzr
  40d6cc:	bl	403aa0 <log_assert_failed_realm@plt>
  40d6d0:	stp	x29, x30, [sp, #-32]!
  40d6d4:	str	x19, [sp, #16]
  40d6d8:	mov	x29, sp
  40d6dc:	cbz	x0, 40d76c <ascii_strlower_n@plt+0x935c>
  40d6e0:	ldr	w8, [x0]
  40d6e4:	mov	x19, x0
  40d6e8:	cbz	w8, 40d77c <ascii_strlower_n@plt+0x936c>
  40d6ec:	ldr	x0, [x19, #152]
  40d6f0:	bl	40d6d0 <ascii_strlower_n@plt+0x92c0>
  40d6f4:	ldr	w8, [x19]
  40d6f8:	subs	w8, w8, #0x1
  40d6fc:	b.ne	40d73c <ascii_strlower_n@plt+0x932c>  // b.any
  40d700:	ldr	x0, [x19, #72]
  40d704:	bl	415e74 <ascii_strlower_n@plt+0x11a64>
  40d708:	ldr	x0, [x19, #80]
  40d70c:	bl	41450c <ascii_strlower_n@plt+0x100fc>
  40d710:	ldr	x0, [x19, #88]
  40d714:	bl	411e90 <ascii_strlower_n@plt+0xda80>
  40d718:	ldr	x0, [x19, #48]
  40d71c:	add	x2, x29, #0x18
  40d720:	mov	w1, #0x1                   	// #1
  40d724:	str	xzr, [x29, #24]
  40d728:	bl	404080 <internal_hashmap_first_key_and_value@plt>
  40d72c:	ldr	x0, [x29, #24]
  40d730:	cbz	x0, 40d744 <ascii_strlower_n@plt+0x9334>
  40d734:	bl	403a30 <free@plt>
  40d738:	b	40d718 <ascii_strlower_n@plt+0x9308>
  40d73c:	str	w8, [x19]
  40d740:	b	40d76c <ascii_strlower_n@plt+0x935c>
  40d744:	ldr	x0, [x19, #48]
  40d748:	mov	x1, xzr
  40d74c:	mov	x2, xzr
  40d750:	bl	404090 <internal_hashmap_free@plt>
  40d754:	ldr	x0, [x19, #40]
  40d758:	bl	403a30 <free@plt>
  40d75c:	ldrb	w8, [x19, #160]
  40d760:	tbnz	w8, #0, 40d76c <ascii_strlower_n@plt+0x935c>
  40d764:	mov	x0, x19
  40d768:	bl	403a30 <free@plt>
  40d76c:	ldr	x19, [sp, #16]
  40d770:	mov	x0, xzr
  40d774:	ldp	x29, x30, [sp], #32
  40d778:	ret
  40d77c:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d780:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d784:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d788:	add	x1, x1, #0x46f
  40d78c:	add	x2, x2, #0x2fc
  40d790:	add	x4, x4, #0x47c
  40d794:	mov	w3, #0xc2                  	// #194
  40d798:	mov	w0, wzr
  40d79c:	bl	403aa0 <log_assert_failed_realm@plt>
  40d7a0:	stp	x29, x30, [sp, #-16]!
  40d7a4:	mov	x29, sp
  40d7a8:	cbz	x0, 40d7cc <ascii_strlower_n@plt+0x93bc>
  40d7ac:	ldr	x8, [x0, #8]
  40d7b0:	mov	w9, #0xfff4                	// #65524
  40d7b4:	sub	x8, x8, #0xc
  40d7b8:	cmp	x8, x9
  40d7bc:	mov	w8, #0xffffffb6            	// #-74
  40d7c0:	csinc	w0, w8, wzr, cs  // cs = hs, nlast
  40d7c4:	ldp	x29, x30, [sp], #16
  40d7c8:	ret
  40d7cc:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d7d0:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d7d4:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d7d8:	add	x1, x1, #0x3b6
  40d7dc:	add	x2, x2, #0x2fc
  40d7e0:	add	x4, x4, #0x4a5
  40d7e4:	mov	w3, #0xcf                  	// #207
  40d7e8:	bl	403aa0 <log_assert_failed_realm@plt>
  40d7ec:	stp	x29, x30, [sp, #-16]!
  40d7f0:	mov	x29, sp
  40d7f4:	cbz	x0, 40d884 <ascii_strlower_n@plt+0x9474>
  40d7f8:	ldr	x8, [x0, #8]
  40d7fc:	mov	w9, #0xfff3                	// #65523
  40d800:	sub	x8, x8, #0xc
  40d804:	cmp	x8, x9
  40d808:	b.hi	40d834 <ascii_strlower_n@plt+0x9424>  // b.pmore
  40d80c:	ldr	x8, [x0, #40]
  40d810:	add	x9, x0, #0xa8
  40d814:	cmp	x8, #0x0
  40d818:	csel	x9, x9, x8, eq  // eq = none
  40d81c:	ldrh	w8, [x9, #2]
  40d820:	tbnz	w8, #7, 40d82c <ascii_strlower_n@plt+0x941c>
  40d824:	mov	w0, wzr
  40d828:	b	40d838 <ascii_strlower_n@plt+0x9428>
  40d82c:	tst	w8, #0x78
  40d830:	b.eq	40d840 <ascii_strlower_n@plt+0x9430>  // b.none
  40d834:	mov	w0, #0xffffffb6            	// #-74
  40d838:	ldp	x29, x30, [sp], #16
  40d83c:	ret
  40d840:	ldr	w10, [x0, #4]
  40d844:	cmp	w10, #0x1
  40d848:	b.eq	40d864 <ascii_strlower_n@plt+0x9454>  // b.none
  40d84c:	cmp	w10, #0x2
  40d850:	b.ne	40d87c <ascii_strlower_n@plt+0x946c>  // b.any
  40d854:	ldrh	w8, [x9, #4]
  40d858:	cmp	w8, #0x100
  40d85c:	b.ne	40d834 <ascii_strlower_n@plt+0x9424>  // b.any
  40d860:	b	40d87c <ascii_strlower_n@plt+0x946c>
  40d864:	ldr	x9, [x0, #88]
  40d868:	cbz	x9, 40d870 <ascii_strlower_n@plt+0x9460>
  40d86c:	ldrb	w9, [x9, #27]
  40d870:	ubfx	w8, w8, #8, #4
  40d874:	orr	w8, w8, w9
  40d878:	cbnz	w8, 40d834 <ascii_strlower_n@plt+0x9424>
  40d87c:	mov	w0, #0x1                   	// #1
  40d880:	b	40d838 <ascii_strlower_n@plt+0x9428>
  40d884:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d888:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d88c:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d890:	add	x1, x1, #0x3b6
  40d894:	add	x2, x2, #0x2fc
  40d898:	add	x4, x4, #0x4ca
  40d89c:	mov	w3, #0xdd                  	// #221
  40d8a0:	bl	403aa0 <log_assert_failed_realm@plt>
  40d8a4:	stp	x29, x30, [sp, #-16]!
  40d8a8:	mov	x29, sp
  40d8ac:	cbz	x0, 40d960 <ascii_strlower_n@plt+0x9550>
  40d8b0:	ldr	x8, [x0, #8]
  40d8b4:	mov	w9, #0xfff3                	// #65523
  40d8b8:	sub	x8, x8, #0xc
  40d8bc:	cmp	x8, x9
  40d8c0:	b.hi	40d8e8 <ascii_strlower_n@plt+0x94d8>  // b.pmore
  40d8c4:	ldr	x8, [x0, #40]
  40d8c8:	add	x9, x0, #0xa8
  40d8cc:	cmp	x8, #0x0
  40d8d0:	csel	x9, x9, x8, eq  // eq = none
  40d8d4:	ldrh	w8, [x9, #2]
  40d8d8:	tbnz	w8, #7, 40d8f0 <ascii_strlower_n@plt+0x94e0>
  40d8dc:	mov	w10, #0x7a                  	// #122
  40d8e0:	tst	w8, w10
  40d8e4:	b.eq	40d8fc <ascii_strlower_n@plt+0x94ec>  // b.none
  40d8e8:	mov	w0, #0xffffffb6            	// #-74
  40d8ec:	b	40d8f4 <ascii_strlower_n@plt+0x94e4>
  40d8f0:	mov	w0, wzr
  40d8f4:	ldp	x29, x30, [sp], #16
  40d8f8:	ret
  40d8fc:	ldr	w10, [x0, #4]
  40d900:	cmp	w10, #0x2
  40d904:	b.eq	40d914 <ascii_strlower_n@plt+0x9504>  // b.none
  40d908:	cmp	w10, #0x1
  40d90c:	b.eq	40d934 <ascii_strlower_n@plt+0x9524>  // b.none
  40d910:	cbnz	w10, 40d958 <ascii_strlower_n@plt+0x9548>
  40d914:	ldrh	w8, [x9, #4]
  40d918:	cmp	w8, #0x100
  40d91c:	b.ne	40d8e8 <ascii_strlower_n@plt+0x94d8>  // b.any
  40d920:	ldrh	w8, [x9, #6]
  40d924:	cbnz	w8, 40d8e8 <ascii_strlower_n@plt+0x94d8>
  40d928:	ldrh	w8, [x9, #8]
  40d92c:	cbnz	w8, 40d8e8 <ascii_strlower_n@plt+0x94d8>
  40d930:	b	40d958 <ascii_strlower_n@plt+0x9548>
  40d934:	mov	w9, #0xb005                	// #45061
  40d938:	tst	w8, w9
  40d93c:	b.ne	40d8e8 <ascii_strlower_n@plt+0x94d8>  // b.any
  40d940:	ldr	x9, [x0, #88]
  40d944:	cbz	x9, 40d94c <ascii_strlower_n@plt+0x953c>
  40d948:	ldrb	w9, [x9, #27]
  40d94c:	ubfx	w8, w8, #8, #4
  40d950:	orr	w8, w8, w9
  40d954:	cbnz	w8, 40d8e8 <ascii_strlower_n@plt+0x94d8>
  40d958:	mov	w0, #0x1                   	// #1
  40d95c:	b	40d8f4 <ascii_strlower_n@plt+0x94e4>
  40d960:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d964:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d968:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40d96c:	add	x1, x1, #0x3b6
  40d970:	add	x2, x2, #0x2fc
  40d974:	add	x4, x4, #0x4f5
  40d978:	mov	w3, #0x103                 	// #259
  40d97c:	bl	403aa0 <log_assert_failed_realm@plt>
  40d980:	sub	sp, sp, #0x40
  40d984:	stp	x29, x30, [sp, #32]
  40d988:	stp	x20, x19, [sp, #48]
  40d98c:	add	x29, sp, #0x20
  40d990:	cbz	x0, 40da04 <ascii_strlower_n@plt+0x95f4>
  40d994:	ldr	x8, [x0, #8]
  40d998:	mov	x19, x1
  40d99c:	mov	x20, x0
  40d9a0:	cmp	x8, x1
  40d9a4:	b.ls	40d9f4 <ascii_strlower_n@plt+0x95e4>  // b.plast
  40d9a8:	mov	w8, #0xfffffffe            	// #-2
  40d9ac:	str	w8, [sp, #16]
  40d9b0:	str	xzr, [sp, #24]
  40d9b4:	ldr	x0, [x20, #48]
  40d9b8:	add	x1, sp, #0x10
  40d9bc:	mov	x2, sp
  40d9c0:	add	x3, sp, #0x8
  40d9c4:	bl	4040a0 <internal_hashmap_iterate@plt>
  40d9c8:	tbz	w0, #0, 40d9f0 <ascii_strlower_n@plt+0x95e0>
  40d9cc:	ldr	x8, [sp]
  40d9d0:	cmp	x8, x19
  40d9d4:	b.cc	40d9b4 <ascii_strlower_n@plt+0x95a4>  // b.lo, b.ul, b.last
  40d9d8:	ldr	x0, [x20, #48]
  40d9dc:	ldr	x1, [sp, #8]
  40d9e0:	bl	4040b0 <internal_hashmap_remove@plt>
  40d9e4:	ldr	x0, [sp, #8]
  40d9e8:	bl	403a30 <free@plt>
  40d9ec:	b	40d9b4 <ascii_strlower_n@plt+0x95a4>
  40d9f0:	str	x19, [x20, #8]
  40d9f4:	ldp	x20, x19, [sp, #48]
  40d9f8:	ldp	x29, x30, [sp, #32]
  40d9fc:	add	sp, sp, #0x40
  40da00:	ret
  40da04:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40da08:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40da0c:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40da10:	add	x1, x1, #0x3b6
  40da14:	add	x2, x2, #0x2fc
  40da18:	add	x4, x4, #0x520
  40da1c:	mov	w3, #0x169                 	// #361
  40da20:	bl	403aa0 <log_assert_failed_realm@plt>
  40da24:	sub	sp, sp, #0x30
  40da28:	stp	x29, x30, [sp, #16]
  40da2c:	stp	x20, x19, [sp, #32]
  40da30:	add	x29, sp, #0x10
  40da34:	cbz	x0, 40da7c <ascii_strlower_n@plt+0x966c>
  40da38:	mov	x19, x2
  40da3c:	mov	x20, x1
  40da40:	add	x2, sp, #0x8
  40da44:	mov	x1, x19
  40da48:	bl	40dac0 <ascii_strlower_n@plt+0x96b0>
  40da4c:	tbnz	w0, #31, 40da6c <ascii_strlower_n@plt+0x965c>
  40da50:	cbz	x19, 40da68 <ascii_strlower_n@plt+0x9658>
  40da54:	cbz	x20, 40da9c <ascii_strlower_n@plt+0x968c>
  40da58:	ldr	x0, [sp, #8]
  40da5c:	mov	x1, x20
  40da60:	mov	x2, x19
  40da64:	bl	403c70 <memcpy@plt>
  40da68:	mov	w0, wzr
  40da6c:	ldp	x20, x19, [sp, #32]
  40da70:	ldp	x29, x30, [sp, #16]
  40da74:	add	sp, sp, #0x30
  40da78:	ret
  40da7c:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40da80:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40da84:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40da88:	add	x1, x1, #0x3b6
  40da8c:	add	x2, x2, #0x2fc
  40da90:	add	x4, x4, #0x54e
  40da94:	mov	w3, #0x17e                 	// #382
  40da98:	bl	403aa0 <log_assert_failed_realm@plt>
  40da9c:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40daa0:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40daa4:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40daa8:	add	x1, x1, #0xd66
  40daac:	add	x2, x2, #0xd6d
  40dab0:	add	x4, x4, #0xd85
  40dab4:	mov	w3, #0x14                  	// #20
  40dab8:	mov	w0, wzr
  40dabc:	bl	403aa0 <log_assert_failed_realm@plt>
  40dac0:	stp	x29, x30, [sp, #-80]!
  40dac4:	str	x25, [sp, #16]
  40dac8:	stp	x24, x23, [sp, #32]
  40dacc:	stp	x22, x21, [sp, #48]
  40dad0:	stp	x20, x19, [sp, #64]
  40dad4:	mov	x29, sp
  40dad8:	cbz	x0, 40dbec <ascii_strlower_n@plt+0x97dc>
  40dadc:	ldp	x23, x8, [x0, #8]
  40dae0:	mov	x22, x3
  40dae4:	mov	x21, x2
  40dae8:	mov	x20, x1
  40daec:	add	x25, x23, x1
  40daf0:	mov	x19, x0
  40daf4:	cmp	x25, x8
  40daf8:	b.ls	40db8c <ascii_strlower_n@plt+0x977c>  // b.plast
  40dafc:	bl	404060 <page_size@plt>
  40db00:	ldr	x9, [x19, #32]
  40db04:	add	x8, x0, x25, lsl #1
  40db08:	neg	x10, x0
  40db0c:	sub	x8, x8, #0x1
  40db10:	and	x8, x8, x10
  40db14:	cmp	x9, #0x0
  40db18:	mov	w10, #0xffff                	// #65535
  40db1c:	csel	x9, x10, x9, eq  // eq = none
  40db20:	cmp	x8, x9
  40db24:	csel	x24, x9, x8, hi  // hi = pmore
  40db28:	cmp	x25, x24
  40db2c:	b.ls	40db38 <ascii_strlower_n@plt+0x9728>  // b.plast
  40db30:	mov	w0, #0xffffffa6            	// #-90
  40db34:	b	40dbcc <ascii_strlower_n@plt+0x97bc>
  40db38:	ldr	x0, [x19, #40]
  40db3c:	cbz	x0, 40db54 <ascii_strlower_n@plt+0x9744>
  40db40:	mov	x1, x24
  40db44:	bl	4040c0 <realloc@plt>
  40db48:	cbz	x0, 40dbe4 <ascii_strlower_n@plt+0x97d4>
  40db4c:	str	x0, [x19, #40]
  40db50:	b	40db88 <ascii_strlower_n@plt+0x9778>
  40db54:	mov	x0, x24
  40db58:	bl	4040d0 <malloc@plt>
  40db5c:	str	x0, [x19, #40]
  40db60:	cbz	x0, 40dbe4 <ascii_strlower_n@plt+0x97d4>
  40db64:	add	x1, x19, #0xa8
  40db68:	mov	x2, x23
  40db6c:	mov	x25, x0
  40db70:	bl	403c70 <memcpy@plt>
  40db74:	subs	x2, x24, x23
  40db78:	b.eq	40db88 <ascii_strlower_n@plt+0x9778>  // b.none
  40db7c:	add	x0, x25, x23
  40db80:	mov	w1, wzr
  40db84:	bl	403c60 <memset@plt>
  40db88:	str	x24, [x19, #16]
  40db8c:	cbz	x22, 40db98 <ascii_strlower_n@plt+0x9788>
  40db90:	ldr	x8, [x19, #8]
  40db94:	str	x8, [x22]
  40db98:	cbz	x21, 40dbbc <ascii_strlower_n@plt+0x97ac>
  40db9c:	ldr	x9, [x19, #40]
  40dba0:	ldr	x8, [x19, #8]
  40dba4:	add	x10, x19, #0xa8
  40dba8:	cmp	x9, #0x0
  40dbac:	csel	x9, x10, x9, eq  // eq = none
  40dbb0:	add	x9, x9, x8
  40dbb4:	str	x9, [x21]
  40dbb8:	b	40dbc0 <ascii_strlower_n@plt+0x97b0>
  40dbbc:	ldr	x8, [x19, #8]
  40dbc0:	mov	w0, wzr
  40dbc4:	add	x8, x8, x20
  40dbc8:	str	x8, [x19, #8]
  40dbcc:	ldp	x20, x19, [sp, #64]
  40dbd0:	ldp	x22, x21, [sp, #48]
  40dbd4:	ldp	x24, x23, [sp, #32]
  40dbd8:	ldr	x25, [sp, #16]
  40dbdc:	ldp	x29, x30, [sp], #80
  40dbe0:	ret
  40dbe4:	mov	w0, #0xfffffff4            	// #-12
  40dbe8:	b	40dbcc <ascii_strlower_n@plt+0x97bc>
  40dbec:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40dbf0:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40dbf4:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40dbf8:	add	x1, x1, #0x3b6
  40dbfc:	add	x2, x2, #0x2fc
  40dc00:	add	x4, x4, #0xd28
  40dc04:	mov	w3, #0x138                 	// #312
  40dc08:	bl	403aa0 <log_assert_failed_realm@plt>
  40dc0c:	stp	x29, x30, [sp, #-32]!
  40dc10:	str	x19, [sp, #16]
  40dc14:	mov	x29, sp
  40dc18:	cbz	x0, 40dc4c <ascii_strlower_n@plt+0x983c>
  40dc1c:	mov	x3, x2
  40dc20:	mov	w19, w1
  40dc24:	add	x2, x29, #0x18
  40dc28:	mov	w1, #0x1                   	// #1
  40dc2c:	bl	40dac0 <ascii_strlower_n@plt+0x96b0>
  40dc30:	tbnz	w0, #31, 40dc40 <ascii_strlower_n@plt+0x9830>
  40dc34:	ldr	x8, [x29, #24]
  40dc38:	mov	w0, wzr
  40dc3c:	strb	w19, [x8]
  40dc40:	ldr	x19, [sp, #16]
  40dc44:	ldp	x29, x30, [sp], #32
  40dc48:	ret
  40dc4c:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40dc50:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40dc54:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40dc58:	add	x1, x1, #0x3b6
  40dc5c:	add	x2, x2, #0x2fc
  40dc60:	add	x4, x4, #0x596
  40dc64:	mov	w3, #0x18c                 	// #396
  40dc68:	bl	403aa0 <log_assert_failed_realm@plt>
  40dc6c:	stp	x29, x30, [sp, #-32]!
  40dc70:	str	x19, [sp, #16]
  40dc74:	mov	x29, sp
  40dc78:	cbz	x0, 40dcb4 <ascii_strlower_n@plt+0x98a4>
  40dc7c:	mov	x3, x2
  40dc80:	mov	w19, w1
  40dc84:	add	x2, x29, #0x18
  40dc88:	mov	w1, #0x2                   	// #2
  40dc8c:	bl	40dac0 <ascii_strlower_n@plt+0x96b0>
  40dc90:	tbnz	w0, #31, 40dca8 <ascii_strlower_n@plt+0x9898>
  40dc94:	ldr	x8, [x29, #24]
  40dc98:	rev	w9, w19
  40dc9c:	mov	w0, wzr
  40dca0:	lsr	w9, w9, #16
  40dca4:	strh	w9, [x8]
  40dca8:	ldr	x19, [sp, #16]
  40dcac:	ldp	x29, x30, [sp], #32
  40dcb0:	ret
  40dcb4:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40dcb8:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40dcbc:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40dcc0:	add	x1, x1, #0x3b6
  40dcc4:	add	x2, x2, #0x2fc
  40dcc8:	add	x4, x4, #0x5d2
  40dccc:	mov	w3, #0x19b                 	// #411
  40dcd0:	bl	403aa0 <log_assert_failed_realm@plt>
  40dcd4:	stp	x29, x30, [sp, #-32]!
  40dcd8:	str	x19, [sp, #16]
  40dcdc:	mov	x29, sp
  40dce0:	cbz	x0, 40dd18 <ascii_strlower_n@plt+0x9908>
  40dce4:	mov	x3, x2
  40dce8:	mov	w19, w1
  40dcec:	add	x2, x29, #0x18
  40dcf0:	mov	w1, #0x4                   	// #4
  40dcf4:	bl	40dac0 <ascii_strlower_n@plt+0x96b0>
  40dcf8:	tbnz	w0, #31, 40dd0c <ascii_strlower_n@plt+0x98fc>
  40dcfc:	ldr	x8, [x29, #24]
  40dd00:	mov	w0, wzr
  40dd04:	rev	w9, w19
  40dd08:	str	w9, [x8]
  40dd0c:	ldr	x19, [sp, #16]
  40dd10:	ldp	x29, x30, [sp], #32
  40dd14:	ret
  40dd18:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40dd1c:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40dd20:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40dd24:	add	x1, x1, #0x3b6
  40dd28:	add	x2, x2, #0x2fc
  40dd2c:	add	x4, x4, #0x610
  40dd30:	mov	w3, #0x1aa                 	// #426
  40dd34:	bl	403aa0 <log_assert_failed_realm@plt>
  40dd38:	stp	x29, x30, [sp, #-48]!
  40dd3c:	str	x21, [sp, #16]
  40dd40:	stp	x20, x19, [sp, #32]
  40dd44:	mov	x29, sp
  40dd48:	cbz	x0, 40dd84 <ascii_strlower_n@plt+0x9974>
  40dd4c:	mov	x20, x1
  40dd50:	cbz	x1, 40dda4 <ascii_strlower_n@plt+0x9994>
  40dd54:	mov	x21, x0
  40dd58:	mov	x0, x20
  40dd5c:	mov	x19, x2
  40dd60:	bl	403d30 <strlen@plt>
  40dd64:	mov	x2, x0
  40dd68:	mov	x0, x21
  40dd6c:	mov	x1, x20
  40dd70:	mov	x3, x19
  40dd74:	ldp	x20, x19, [sp, #32]
  40dd78:	ldr	x21, [sp, #16]
  40dd7c:	ldp	x29, x30, [sp], #48
  40dd80:	b	40ddc8 <ascii_strlower_n@plt+0x99b8>
  40dd84:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40dd88:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40dd8c:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40dd90:	add	x1, x1, #0x3b6
  40dd94:	add	x2, x2, #0x2fc
  40dd98:	add	x4, x4, #0x64e
  40dd9c:	mov	w3, #0x1b6                 	// #438
  40dda0:	bl	403aa0 <log_assert_failed_realm@plt>
  40dda4:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  40dda8:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40ddac:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40ddb0:	add	x1, x1, #0xf02
  40ddb4:	add	x2, x2, #0x2fc
  40ddb8:	add	x4, x4, #0x64e
  40ddbc:	mov	w3, #0x1b7                 	// #439
  40ddc0:	mov	w0, wzr
  40ddc4:	bl	403aa0 <log_assert_failed_realm@plt>
  40ddc8:	sub	sp, sp, #0x30
  40ddcc:	stp	x29, x30, [sp, #16]
  40ddd0:	stp	x20, x19, [sp, #32]
  40ddd4:	add	x29, sp, #0x10
  40ddd8:	cbz	x0, 40de44 <ascii_strlower_n@plt+0x9a34>
  40dddc:	mov	x19, x2
  40dde0:	mov	x20, x1
  40dde4:	cbnz	x1, 40ddec <ascii_strlower_n@plt+0x99dc>
  40dde8:	cbnz	x19, 40de64 <ascii_strlower_n@plt+0x9a54>
  40ddec:	cmp	x19, #0xff
  40ddf0:	b.ls	40ddfc <ascii_strlower_n@plt+0x99ec>  // b.plast
  40ddf4:	mov	w0, #0xfffffff9            	// #-7
  40ddf8:	b	40de34 <ascii_strlower_n@plt+0x9a24>
  40ddfc:	add	x1, x19, #0x1
  40de00:	add	x2, sp, #0x8
  40de04:	bl	40dac0 <ascii_strlower_n@plt+0x96b0>
  40de08:	tbnz	w0, #31, 40de34 <ascii_strlower_n@plt+0x9a24>
  40de0c:	ldr	x8, [sp, #8]
  40de10:	strb	w19, [x8]
  40de14:	cbz	x19, 40de30 <ascii_strlower_n@plt+0x9a20>
  40de18:	cbz	x20, 40de88 <ascii_strlower_n@plt+0x9a78>
  40de1c:	ldr	x8, [sp, #8]
  40de20:	mov	x1, x20
  40de24:	mov	x2, x19
  40de28:	add	x0, x8, #0x1
  40de2c:	bl	403c70 <memcpy@plt>
  40de30:	mov	w0, wzr
  40de34:	ldp	x20, x19, [sp, #32]
  40de38:	ldp	x29, x30, [sp, #16]
  40de3c:	add	sp, sp, #0x30
  40de40:	ret
  40de44:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40de48:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40de4c:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40de50:	add	x1, x1, #0x3b6
  40de54:	add	x2, x2, #0x2fc
  40de58:	add	x4, x4, #0x690
  40de5c:	mov	w3, #0x1c0                 	// #448
  40de60:	bl	403aa0 <log_assert_failed_realm@plt>
  40de64:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40de68:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40de6c:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40de70:	add	x1, x1, #0x6de
  40de74:	add	x2, x2, #0x2fc
  40de78:	add	x4, x4, #0x690
  40de7c:	mov	w3, #0x1c1                 	// #449
  40de80:	mov	w0, wzr
  40de84:	bl	403aa0 <log_assert_failed_realm@plt>
  40de88:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40de8c:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40de90:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40de94:	add	x1, x1, #0xd66
  40de98:	add	x2, x2, #0xd6d
  40de9c:	add	x4, x4, #0xd85
  40dea0:	mov	w3, #0x14                  	// #20
  40dea4:	b	40de80 <ascii_strlower_n@plt+0x9a70>
  40dea8:	sub	sp, sp, #0x40
  40deac:	stp	x29, x30, [sp, #16]
  40deb0:	stp	x22, x21, [sp, #32]
  40deb4:	stp	x20, x19, [sp, #48]
  40deb8:	add	x29, sp, #0x10
  40debc:	cbz	x0, 40df64 <ascii_strlower_n@plt+0x9b54>
  40dec0:	mov	x20, x1
  40dec4:	cbz	x1, 40df84 <ascii_strlower_n@plt+0x9b74>
  40dec8:	mov	x19, x2
  40decc:	cmp	x2, #0x3f
  40ded0:	b.ls	40dedc <ascii_strlower_n@plt+0x9acc>  // b.plast
  40ded4:	mov	w0, #0xfffffff9            	// #-7
  40ded8:	b	40df50 <ascii_strlower_n@plt+0x9b40>
  40dedc:	mov	w21, w3
  40dee0:	add	x1, x19, #0x1
  40dee4:	add	x2, sp, #0x8
  40dee8:	mov	x3, x4
  40deec:	mov	x22, x0
  40def0:	bl	40dac0 <ascii_strlower_n@plt+0x96b0>
  40def4:	tbnz	w0, #31, 40df50 <ascii_strlower_n@plt+0x9b40>
  40def8:	ldr	x8, [sp, #8]
  40defc:	add	x9, x8, #0x1
  40df00:	str	x9, [sp, #8]
  40df04:	strb	w19, [x8]
  40df08:	ldrb	w8, [x22, #160]
  40df0c:	tbz	w8, #3, 40df3c <ascii_strlower_n@plt+0x9b2c>
  40df10:	tbz	w21, #0, 40df3c <ascii_strlower_n@plt+0x9b2c>
  40df14:	cbz	x19, 40df4c <ascii_strlower_n@plt+0x9b3c>
  40df18:	mov	x21, xzr
  40df1c:	ldrb	w0, [x20, x21]
  40df20:	bl	4040e0 <ascii_tolower@plt>
  40df24:	ldr	x8, [sp, #8]
  40df28:	strb	w0, [x8, x21]
  40df2c:	add	x21, x21, #0x1
  40df30:	cmp	x19, x21
  40df34:	b.ne	40df1c <ascii_strlower_n@plt+0x9b0c>  // b.any
  40df38:	b	40df4c <ascii_strlower_n@plt+0x9b3c>
  40df3c:	ldr	x0, [sp, #8]
  40df40:	mov	x1, x20
  40df44:	mov	x2, x19
  40df48:	bl	403c70 <memcpy@plt>
  40df4c:	mov	w0, wzr
  40df50:	ldp	x20, x19, [sp, #48]
  40df54:	ldp	x22, x21, [sp, #32]
  40df58:	ldp	x29, x30, [sp, #16]
  40df5c:	add	sp, sp, #0x40
  40df60:	ret
  40df64:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40df68:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40df6c:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40df70:	add	x1, x1, #0x3b6
  40df74:	add	x2, x2, #0x2fc
  40df78:	add	x4, x4, #0x6ed
  40df7c:	mov	w3, #0x1da                 	// #474
  40df80:	bl	403aa0 <log_assert_failed_realm@plt>
  40df84:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40df88:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40df8c:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40df90:	add	x1, x1, #0x73d
  40df94:	add	x2, x2, #0x2fc
  40df98:	add	x4, x4, #0x6ed
  40df9c:	mov	w3, #0x1db                 	// #475
  40dfa0:	mov	w0, wzr
  40dfa4:	bl	403aa0 <log_assert_failed_realm@plt>
  40dfa8:	sub	sp, sp, #0xc0
  40dfac:	stp	x29, x30, [sp, #96]
  40dfb0:	add	x29, sp, #0x60
  40dfb4:	stp	x28, x27, [sp, #112]
  40dfb8:	stp	x26, x25, [sp, #128]
  40dfbc:	stp	x24, x23, [sp, #144]
  40dfc0:	stp	x22, x21, [sp, #160]
  40dfc4:	stp	x20, x19, [sp, #176]
  40dfc8:	stur	x1, [x29, #-16]
  40dfcc:	cbz	x0, 40e184 <ascii_strlower_n@plt+0x9d74>
  40dfd0:	mov	x25, x1
  40dfd4:	cbz	x1, 40e1a4 <ascii_strlower_n@plt+0x9d94>
  40dfd8:	ldrb	w8, [x0, #160]
  40dfdc:	ldr	x19, [x0, #8]
  40dfe0:	mov	x20, x0
  40dfe4:	mov	x0, x25
  40dfe8:	tst	w8, #0x4
  40dfec:	mov	x21, x4
  40dff0:	mov	w23, w3
  40dff4:	mov	w22, w2
  40dff8:	cset	w24, eq  // eq = none
  40dffc:	bl	4040f0 <dns_name_is_root@plt>
  40e000:	tbz	w0, #0, 40e034 <ascii_strlower_n@plt+0x9c24>
  40e004:	add	x2, sp, #0x10
  40e008:	mov	w1, #0x1                   	// #1
  40e00c:	mov	x0, x20
  40e010:	mov	x3, xzr
  40e014:	bl	40dac0 <ascii_strlower_n@plt+0x96b0>
  40e018:	tbnz	w0, #31, 40e100 <ascii_strlower_n@plt+0x9cf0>
  40e01c:	ldr	x8, [sp, #16]
  40e020:	strb	wzr, [x8]
  40e024:	mov	w26, wzr
  40e028:	cbz	x21, 40e160 <ascii_strlower_n@plt+0x9d50>
  40e02c:	str	x19, [x21]
  40e030:	b	40e160 <ascii_strlower_n@plt+0x9d50>
  40e034:	and	w28, w24, w22
  40e038:	adrp	x24, 43f000 <ascii_strlower_n@plt+0x3abf0>
  40e03c:	ldr	x24, [x24, #2672]
  40e040:	add	x22, x20, #0x30
  40e044:	and	w23, w23, #0x1
  40e048:	str	xzr, [sp, #8]
  40e04c:	cbz	w28, 40e07c <ascii_strlower_n@plt+0x9c6c>
  40e050:	ldr	x0, [x22]
  40e054:	mov	x1, x25
  40e058:	bl	404100 <internal_hashmap_get@plt>
  40e05c:	str	x0, [sp, #8]
  40e060:	cbz	x0, 40e07c <ascii_strlower_n@plt+0x9c6c>
  40e064:	ldr	x8, [x20, #8]
  40e068:	mov	x27, x0
  40e06c:	cmp	x8, x0
  40e070:	b.ls	40e1c4 <ascii_strlower_n@plt+0x9db4>  // b.plast
  40e074:	lsr	x8, x27, #14
  40e078:	cbz	x8, 40e120 <ascii_strlower_n@plt+0x9d10>
  40e07c:	sub	x0, x29, #0x10
  40e080:	add	x1, sp, #0x10
  40e084:	mov	w2, #0x3f                  	// #63
  40e088:	mov	w3, wzr
  40e08c:	bl	404110 <dns_label_unescape@plt>
  40e090:	mov	w26, w0
  40e094:	tbnz	w0, #31, 40e154 <ascii_strlower_n@plt+0x9d44>
  40e098:	mov	w2, w26
  40e09c:	add	x1, sp, #0x10
  40e0a0:	add	x4, sp, #0x8
  40e0a4:	mov	x0, x20
  40e0a8:	mov	w3, w23
  40e0ac:	bl	40dea8 <ascii_strlower_n@plt+0x9a98>
  40e0b0:	tbnz	w0, #31, 40e150 <ascii_strlower_n@plt+0x9d40>
  40e0b4:	cbz	w28, 40e0ec <ascii_strlower_n@plt+0x9cdc>
  40e0b8:	mov	x0, x25
  40e0bc:	bl	403ae0 <strdup@plt>
  40e0c0:	mov	x25, x0
  40e0c4:	cbz	x0, 40e110 <ascii_strlower_n@plt+0x9d00>
  40e0c8:	mov	x0, x22
  40e0cc:	mov	x1, x24
  40e0d0:	bl	404120 <internal_hashmap_ensure_allocated@plt>
  40e0d4:	tbnz	w0, #31, 40e108 <ascii_strlower_n@plt+0x9cf8>
  40e0d8:	ldr	x0, [x22]
  40e0dc:	ldr	x2, [sp, #8]
  40e0e0:	mov	x1, x25
  40e0e4:	bl	404130 <hashmap_put@plt>
  40e0e8:	tbnz	w0, #31, 40e108 <ascii_strlower_n@plt+0x9cf8>
  40e0ec:	ldur	x0, [x29, #-16]
  40e0f0:	bl	4040f0 <dns_name_is_root@plt>
  40e0f4:	tbnz	w0, #0, 40e004 <ascii_strlower_n@plt+0x9bf4>
  40e0f8:	ldur	x25, [x29, #-16]
  40e0fc:	b	40e048 <ascii_strlower_n@plt+0x9c38>
  40e100:	mov	w26, w0
  40e104:	b	40e160 <ascii_strlower_n@plt+0x9d50>
  40e108:	mov	w26, w0
  40e10c:	b	40e114 <ascii_strlower_n@plt+0x9d04>
  40e110:	mov	w26, #0xfffffff4            	// #-12
  40e114:	mov	x0, x25
  40e118:	bl	403a30 <free@plt>
  40e11c:	b	40e154 <ascii_strlower_n@plt+0x9d44>
  40e120:	sub	x2, x29, #0x8
  40e124:	mov	w1, #0x2                   	// #2
  40e128:	mov	x0, x20
  40e12c:	mov	x3, xzr
  40e130:	bl	40dac0 <ascii_strlower_n@plt+0x96b0>
  40e134:	tbnz	w0, #31, 40e150 <ascii_strlower_n@plt+0x9d40>
  40e138:	ldur	x8, [x29, #-8]
  40e13c:	orr	w9, w27, #0xc000
  40e140:	rev	w9, w9
  40e144:	lsr	w9, w9, #16
  40e148:	strh	w9, [x8]
  40e14c:	b	40e024 <ascii_strlower_n@plt+0x9c14>
  40e150:	mov	w26, w0
  40e154:	mov	x0, x20
  40e158:	mov	x1, x19
  40e15c:	bl	40d980 <ascii_strlower_n@plt+0x9570>
  40e160:	mov	w0, w26
  40e164:	ldp	x20, x19, [sp, #176]
  40e168:	ldp	x22, x21, [sp, #160]
  40e16c:	ldp	x24, x23, [sp, #144]
  40e170:	ldp	x26, x25, [sp, #128]
  40e174:	ldp	x28, x27, [sp, #112]
  40e178:	ldp	x29, x30, [sp, #96]
  40e17c:	add	sp, sp, #0xc0
  40e180:	ret
  40e184:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e188:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e18c:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e190:	add	x1, x1, #0x3b6
  40e194:	add	x2, x2, #0x2fc
  40e198:	add	x4, x4, #0x73f
  40e19c:	mov	w3, #0x201                 	// #513
  40e1a0:	bl	403aa0 <log_assert_failed_realm@plt>
  40e1a4:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  40e1a8:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e1ac:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e1b0:	add	x1, x1, #0xc5
  40e1b4:	add	x2, x2, #0x2fc
  40e1b8:	add	x4, x4, #0x73f
  40e1bc:	mov	w3, #0x202                 	// #514
  40e1c0:	b	40e1e0 <ascii_strlower_n@plt+0x9dd0>
  40e1c4:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e1c8:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e1cc:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e1d0:	add	x1, x1, #0x78d
  40e1d4:	add	x2, x2, #0x2fc
  40e1d8:	add	x4, x4, #0x73f
  40e1dc:	mov	w3, #0x211                 	// #529
  40e1e0:	mov	w0, wzr
  40e1e4:	bl	403aa0 <log_assert_failed_realm@plt>
  40e1e8:	stp	x29, x30, [sp, #-80]!
  40e1ec:	str	x25, [sp, #16]
  40e1f0:	stp	x24, x23, [sp, #32]
  40e1f4:	stp	x22, x21, [sp, #48]
  40e1f8:	stp	x20, x19, [sp, #64]
  40e1fc:	mov	x29, sp
  40e200:	cbz	x0, 40e2d8 <ascii_strlower_n@plt+0x9ec8>
  40e204:	mov	x23, x1
  40e208:	cbz	x1, 40e2f8 <ascii_strlower_n@plt+0x9ee8>
  40e20c:	ldr	x19, [x0, #8]
  40e210:	mov	x20, x0
  40e214:	mov	x0, x23
  40e218:	mov	x21, x3
  40e21c:	mov	w22, w2
  40e220:	bl	4110a8 <ascii_strlower_n@plt+0xcc98>
  40e224:	mov	x1, x0
  40e228:	mov	w2, #0x1                   	// #1
  40e22c:	mov	w3, #0x1                   	// #1
  40e230:	mov	x0, x20
  40e234:	mov	x4, xzr
  40e238:	bl	40dfa8 <ascii_strlower_n@plt+0x9b98>
  40e23c:	tbnz	w0, #31, 40e2ac <ascii_strlower_n@plt+0x9e9c>
  40e240:	ldrh	w25, [x23, #6]
  40e244:	add	x2, x29, #0x18
  40e248:	mov	w1, #0x2                   	// #2
  40e24c:	mov	x0, x20
  40e250:	mov	x3, xzr
  40e254:	bl	40dac0 <ascii_strlower_n@plt+0x96b0>
  40e258:	tbnz	w0, #31, 40e2ac <ascii_strlower_n@plt+0x9e9c>
  40e25c:	ldr	x8, [x29, #24]
  40e260:	rev16	w9, w25
  40e264:	add	x2, x29, #0x18
  40e268:	mov	w1, #0x2                   	// #2
  40e26c:	strh	w9, [x8]
  40e270:	ldrh	w23, [x23, #4]
  40e274:	mov	x0, x20
  40e278:	mov	x3, xzr
  40e27c:	bl	40dac0 <ascii_strlower_n@plt+0x96b0>
  40e280:	tbnz	w0, #31, 40e2ac <ascii_strlower_n@plt+0x9e9c>
  40e284:	lsl	w8, w22, #12
  40e288:	ldr	x9, [x29, #24]
  40e28c:	and	w8, w8, #0x8000
  40e290:	orr	w8, w23, w8
  40e294:	rev16	w8, w8
  40e298:	mov	w24, wzr
  40e29c:	strh	w8, [x9]
  40e2a0:	cbz	x21, 40e2bc <ascii_strlower_n@plt+0x9eac>
  40e2a4:	str	x19, [x21]
  40e2a8:	b	40e2bc <ascii_strlower_n@plt+0x9eac>
  40e2ac:	mov	w24, w0
  40e2b0:	mov	x0, x20
  40e2b4:	mov	x1, x19
  40e2b8:	bl	40d980 <ascii_strlower_n@plt+0x9570>
  40e2bc:	mov	w0, w24
  40e2c0:	ldp	x20, x19, [sp, #64]
  40e2c4:	ldp	x22, x21, [sp, #48]
  40e2c8:	ldp	x24, x23, [sp, #32]
  40e2cc:	ldr	x25, [sp, #16]
  40e2d0:	ldp	x29, x30, [sp], #80
  40e2d4:	ret
  40e2d8:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e2dc:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e2e0:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e2e4:	add	x1, x1, #0x3b6
  40e2e8:	add	x2, x2, #0x2fc
  40e2ec:	add	x4, x4, #0x799
  40e2f0:	mov	w3, #0x24d                 	// #589
  40e2f4:	bl	403aa0 <log_assert_failed_realm@plt>
  40e2f8:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e2fc:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e300:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e304:	add	x1, x1, #0x7f8
  40e308:	add	x2, x2, #0x2fc
  40e30c:	add	x4, x4, #0x799
  40e310:	mov	w3, #0x24e                 	// #590
  40e314:	mov	w0, wzr
  40e318:	bl	403aa0 <log_assert_failed_realm@plt>
  40e31c:	stp	x29, x30, [sp, #-80]!
  40e320:	str	x25, [sp, #16]
  40e324:	stp	x24, x23, [sp, #32]
  40e328:	stp	x22, x21, [sp, #48]
  40e32c:	stp	x20, x19, [sp, #64]
  40e330:	mov	x29, sp
  40e334:	cbz	x0, 40e57c <ascii_strlower_n@plt+0xa16c>
  40e338:	and	w8, w1, #0xffff
  40e33c:	mov	w25, w1
  40e340:	cmp	w8, #0x1ff
  40e344:	b.ls	40e59c <ascii_strlower_n@plt+0xa18c>  // b.plast
  40e348:	mov	w23, w3
  40e34c:	tbnz	w3, #31, 40e5bc <ascii_strlower_n@plt+0xa1ac>
  40e350:	cmp	w23, #0x1, lsl #12
  40e354:	b.ge	40e5dc <ascii_strlower_n@plt+0xa1cc>  // b.tcont
  40e358:	ldr	x8, [x0, #56]
  40e35c:	mov	x19, x0
  40e360:	cmn	x8, #0x1
  40e364:	b.eq	40e370 <ascii_strlower_n@plt+0x9f60>  // b.none
  40e368:	mov	w24, #0xfffffff0            	// #-16
  40e36c:	b	40e4e8 <ascii_strlower_n@plt+0xa0d8>
  40e370:	ldr	x8, [x19, #64]
  40e374:	cmn	x8, #0x1
  40e378:	b.ne	40e5fc <ascii_strlower_n@plt+0xa1ec>  // b.any
  40e37c:	ldr	x21, [x19, #8]
  40e380:	mov	w22, w2
  40e384:	add	x2, x29, #0x18
  40e388:	mov	w1, #0x1                   	// #1
  40e38c:	mov	x0, x19
  40e390:	mov	x3, xzr
  40e394:	mov	x20, x4
  40e398:	bl	40dac0 <ascii_strlower_n@plt+0x96b0>
  40e39c:	tbnz	w0, #31, 40e4e4 <ascii_strlower_n@plt+0xa0d4>
  40e3a0:	ldr	x8, [x29, #24]
  40e3a4:	add	x2, x29, #0x18
  40e3a8:	mov	w1, #0x2                   	// #2
  40e3ac:	mov	x0, x19
  40e3b0:	mov	x3, xzr
  40e3b4:	strb	wzr, [x8]
  40e3b8:	bl	40dac0 <ascii_strlower_n@plt+0x96b0>
  40e3bc:	tbnz	w0, #31, 40e4d0 <ascii_strlower_n@plt+0xa0c0>
  40e3c0:	ldr	x8, [x29, #24]
  40e3c4:	mov	w9, #0x2900                	// #10496
  40e3c8:	add	x2, x29, #0x18
  40e3cc:	mov	w1, #0x2                   	// #2
  40e3d0:	mov	x0, x19
  40e3d4:	mov	x3, xzr
  40e3d8:	strh	w9, [x8]
  40e3dc:	bl	40dac0 <ascii_strlower_n@plt+0x96b0>
  40e3e0:	tbnz	w0, #31, 40e4d0 <ascii_strlower_n@plt+0xa0c0>
  40e3e4:	ldr	x8, [x29, #24]
  40e3e8:	rev	w9, w25
  40e3ec:	lsr	w9, w9, #16
  40e3f0:	add	x2, x29, #0x18
  40e3f4:	mov	w1, #0x2                   	// #2
  40e3f8:	mov	x0, x19
  40e3fc:	mov	x3, xzr
  40e400:	strh	w9, [x8]
  40e404:	bl	40dac0 <ascii_strlower_n@plt+0x96b0>
  40e408:	tbnz	w0, #31, 40e4d0 <ascii_strlower_n@plt+0xa0c0>
  40e40c:	ldr	x8, [x29, #24]
  40e410:	lsl	w9, w23, #4
  40e414:	and	w9, w9, #0xff00
  40e418:	rev16	w9, w9
  40e41c:	add	x2, x29, #0x18
  40e420:	mov	w1, #0x2                   	// #2
  40e424:	mov	x0, x19
  40e428:	mov	x3, xzr
  40e42c:	strh	w9, [x8]
  40e430:	bl	40dac0 <ascii_strlower_n@plt+0x96b0>
  40e434:	tbnz	w0, #31, 40e4d0 <ascii_strlower_n@plt+0xa0c0>
  40e438:	tst	w22, #0x1
  40e43c:	mov	w8, #0xffff8000            	// #-32768
  40e440:	ldr	x9, [x29, #24]
  40e444:	csel	w8, w8, wzr, ne  // ne = any
  40e448:	rev	w8, w8
  40e44c:	lsr	w8, w8, #16
  40e450:	strh	w8, [x9]
  40e454:	tbz	w22, #0, 40e504 <ascii_strlower_n@plt+0xa0f4>
  40e458:	ldr	x8, [x19, #40]
  40e45c:	add	x9, x19, #0xa8
  40e460:	cmp	x8, #0x0
  40e464:	csel	x8, x9, x8, eq  // eq = none
  40e468:	ldrb	w8, [x8, #2]
  40e46c:	tbnz	w8, #7, 40e504 <ascii_strlower_n@plt+0xa0f4>
  40e470:	add	x2, x29, #0x18
  40e474:	mov	w1, #0x2                   	// #2
  40e478:	mov	x0, x19
  40e47c:	mov	x3, xzr
  40e480:	bl	40dac0 <ascii_strlower_n@plt+0x96b0>
  40e484:	tbnz	w0, #31, 40e4d0 <ascii_strlower_n@plt+0xa0c0>
  40e488:	ldr	x8, [x29, #24]
  40e48c:	mov	w9, #0x1600                	// #5632
  40e490:	add	x2, x29, #0x18
  40e494:	mov	w1, #0x16                  	// #22
  40e498:	mov	x0, x19
  40e49c:	mov	x3, xzr
  40e4a0:	strh	w9, [x8]
  40e4a4:	bl	40dac0 <ascii_strlower_n@plt+0x96b0>
  40e4a8:	tbnz	w0, #31, 40e52c <ascii_strlower_n@plt+0xa11c>
  40e4ac:	adrp	x9, 41e000 <ascii_strlower_n@plt+0x19bf0>
  40e4b0:	add	x9, x9, #0x734
  40e4b4:	ldr	x8, [x29, #24]
  40e4b8:	ldur	x10, [x9, #14]
  40e4bc:	ldr	q0, [x9]
  40e4c0:	mov	w24, wzr
  40e4c4:	stur	x10, [x8, #14]
  40e4c8:	str	q0, [x8]
  40e4cc:	b	40e530 <ascii_strlower_n@plt+0xa120>
  40e4d0:	mov	w24, w0
  40e4d4:	mov	x0, x19
  40e4d8:	mov	x1, x21
  40e4dc:	bl	40d980 <ascii_strlower_n@plt+0x9570>
  40e4e0:	b	40e4e8 <ascii_strlower_n@plt+0xa0d8>
  40e4e4:	mov	w24, w0
  40e4e8:	mov	w0, w24
  40e4ec:	ldp	x20, x19, [sp, #64]
  40e4f0:	ldp	x22, x21, [sp, #48]
  40e4f4:	ldp	x24, x23, [sp, #32]
  40e4f8:	ldr	x25, [sp, #16]
  40e4fc:	ldp	x29, x30, [sp], #80
  40e500:	ret
  40e504:	add	x2, x29, #0x18
  40e508:	mov	w1, #0x2                   	// #2
  40e50c:	mov	x0, x19
  40e510:	mov	x3, xzr
  40e514:	bl	40dac0 <ascii_strlower_n@plt+0x96b0>
  40e518:	tbnz	w0, #31, 40e52c <ascii_strlower_n@plt+0xa11c>
  40e51c:	ldr	x8, [x29, #24]
  40e520:	mov	w24, wzr
  40e524:	strh	wzr, [x8]
  40e528:	b	40e530 <ascii_strlower_n@plt+0xa120>
  40e52c:	mov	w24, w0
  40e530:	tbnz	w24, #31, 40e4d4 <ascii_strlower_n@plt+0xa0c4>
  40e534:	ldr	x8, [x19, #40]
  40e538:	add	x9, x19, #0xa8
  40e53c:	mov	w24, wzr
  40e540:	cmp	x8, #0x0
  40e544:	csel	x8, x9, x8, eq  // eq = none
  40e548:	ldrh	w9, [x8, #10]
  40e54c:	rev	w9, w9
  40e550:	lsr	w9, w9, #16
  40e554:	add	w9, w9, #0x1
  40e558:	rev	w9, w9
  40e55c:	lsr	w9, w9, #16
  40e560:	strh	w9, [x8, #10]
  40e564:	ldr	x8, [x19, #8]
  40e568:	sub	x8, x8, x21
  40e56c:	stp	x21, x8, [x19, #56]
  40e570:	cbz	x20, 40e4e8 <ascii_strlower_n@plt+0xa0d8>
  40e574:	str	x21, [x20]
  40e578:	b	40e4e8 <ascii_strlower_n@plt+0xa0d8>
  40e57c:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e580:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e584:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e588:	add	x1, x1, #0x3b6
  40e58c:	add	x2, x2, #0x2fc
  40e590:	add	x4, x4, #0x7fa
  40e594:	mov	w3, #0x2ba                 	// #698
  40e598:	bl	403aa0 <log_assert_failed_realm@plt>
  40e59c:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e5a0:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e5a4:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e5a8:	add	x1, x1, #0x841
  40e5ac:	add	x2, x2, #0x2fc
  40e5b0:	add	x4, x4, #0x7fa
  40e5b4:	mov	w3, #0x2bc                 	// #700
  40e5b8:	b	40e618 <ascii_strlower_n@plt+0xa208>
  40e5bc:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e5c0:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e5c4:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e5c8:	add	x1, x1, #0x86d
  40e5cc:	add	x2, x2, #0x2fc
  40e5d0:	add	x4, x4, #0x7fa
  40e5d4:	mov	w3, #0x2bd                 	// #701
  40e5d8:	b	40e618 <ascii_strlower_n@plt+0xa208>
  40e5dc:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e5e0:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e5e4:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e5e8:	add	x1, x1, #0x878
  40e5ec:	add	x2, x2, #0x2fc
  40e5f0:	add	x4, x4, #0x7fa
  40e5f4:	mov	w3, #0x2be                 	// #702
  40e5f8:	b	40e618 <ascii_strlower_n@plt+0xa208>
  40e5fc:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e600:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e604:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e608:	add	x1, x1, #0x890
  40e60c:	add	x2, x2, #0x2fc
  40e610:	add	x4, x4, #0x7fa
  40e614:	mov	w3, #0x2c3                 	// #707
  40e618:	mov	w0, wzr
  40e61c:	bl	403aa0 <log_assert_failed_realm@plt>
  40e620:	stp	x29, x30, [sp, #-48]!
  40e624:	str	x21, [sp, #16]
  40e628:	stp	x20, x19, [sp, #32]
  40e62c:	mov	x29, sp
  40e630:	cbz	x0, 40e6e0 <ascii_strlower_n@plt+0xa2d0>
  40e634:	mov	x20, x0
  40e638:	ldr	x1, [x20, #56]!
  40e63c:	mov	x19, x0
  40e640:	ldr	x8, [x20, #8]
  40e644:	cmn	x1, #0x1
  40e648:	b.eq	40e6bc <ascii_strlower_n@plt+0xa2ac>  // b.none
  40e64c:	cmn	x8, #0x1
  40e650:	b.eq	40e700 <ascii_strlower_n@plt+0xa2f0>  // b.none
  40e654:	ldr	x9, [x19, #40]
  40e658:	add	x21, x19, #0xa8
  40e65c:	cmp	x9, #0x0
  40e660:	csel	x9, x21, x9, eq  // eq = none
  40e664:	ldrh	w9, [x9, #10]
  40e668:	cbz	w9, 40e720 <ascii_strlower_n@plt+0xa310>
  40e66c:	ldr	x9, [x19, #8]
  40e670:	add	x8, x8, x1
  40e674:	cmp	x8, x9
  40e678:	b.ne	40e6cc <ascii_strlower_n@plt+0xa2bc>  // b.any
  40e67c:	mov	x0, x19
  40e680:	bl	40d980 <ascii_strlower_n@plt+0x9570>
  40e684:	ldr	x8, [x19, #40]
  40e688:	mov	x10, #0xffffffffffffffff    	// #-1
  40e68c:	mov	w0, #0x1                   	// #1
  40e690:	cmp	x8, #0x0
  40e694:	csel	x8, x21, x8, eq  // eq = none
  40e698:	ldrh	w9, [x8, #10]
  40e69c:	rev	w9, w9
  40e6a0:	lsr	w9, w9, #16
  40e6a4:	sub	w9, w9, #0x1
  40e6a8:	rev	w9, w9
  40e6ac:	lsr	w9, w9, #16
  40e6b0:	strh	w9, [x8, #10]
  40e6b4:	stp	x10, x10, [x20]
  40e6b8:	b	40e6d0 <ascii_strlower_n@plt+0xa2c0>
  40e6bc:	cmn	x8, #0x1
  40e6c0:	b.ne	40e740 <ascii_strlower_n@plt+0xa330>  // b.any
  40e6c4:	mov	w0, wzr
  40e6c8:	b	40e6d0 <ascii_strlower_n@plt+0xa2c0>
  40e6cc:	mov	w0, #0xfffffff0            	// #-16
  40e6d0:	ldp	x20, x19, [sp, #32]
  40e6d4:	ldr	x21, [sp, #16]
  40e6d8:	ldp	x29, x30, [sp], #48
  40e6dc:	ret
  40e6e0:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e6e4:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e6e8:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e6ec:	add	x1, x1, #0x3b6
  40e6f0:	add	x2, x2, #0x2fc
  40e6f4:	add	x4, x4, #0x8ab
  40e6f8:	mov	w3, #0x31b                 	// #795
  40e6fc:	bl	403aa0 <log_assert_failed_realm@plt>
  40e700:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e704:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e708:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e70c:	add	x1, x1, #0x8d4
  40e710:	add	x2, x2, #0x2fc
  40e714:	add	x4, x4, #0x8ab
  40e718:	mov	w3, #0x322                 	// #802
  40e71c:	b	40e75c <ascii_strlower_n@plt+0xa34c>
  40e720:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e724:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e728:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e72c:	add	x1, x1, #0x8ef
  40e730:	add	x2, x2, #0x2fc
  40e734:	add	x4, x4, #0x8ab
  40e738:	mov	w3, #0x323                 	// #803
  40e73c:	b	40e75c <ascii_strlower_n@plt+0xa34c>
  40e740:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e744:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e748:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40e74c:	add	x1, x1, #0x890
  40e750:	add	x2, x2, #0x2fc
  40e754:	add	x4, x4, #0x8ab
  40e758:	mov	w3, #0x31e                 	// #798
  40e75c:	mov	w0, wzr
  40e760:	bl	403aa0 <log_assert_failed_realm@plt>
  40e764:	stp	x29, x30, [sp, #-80]!
  40e768:	str	x25, [sp, #16]
  40e76c:	stp	x24, x23, [sp, #32]
  40e770:	stp	x22, x21, [sp, #48]
  40e774:	stp	x20, x19, [sp, #64]
  40e778:	mov	x29, sp
  40e77c:	cbz	x0, 40ed44 <ascii_strlower_n@plt+0xa934>
  40e780:	mov	x23, x1
  40e784:	cbz	x1, 40ed64 <ascii_strlower_n@plt+0xa954>
  40e788:	ldr	x1, [x23, #8]
  40e78c:	ldr	x19, [x0, #8]
  40e790:	mov	x22, x3
  40e794:	mov	x3, xzr
  40e798:	mov	x21, x4
  40e79c:	mov	w25, w2
  40e7a0:	mov	x20, x0
  40e7a4:	bl	40e1e8 <ascii_strlower_n@plt+0x9dd8>
  40e7a8:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40e7ac:	tbnz	w25, #4, 40e7b8 <ascii_strlower_n@plt+0xa3a8>
  40e7b0:	ldr	w1, [x23, #24]
  40e7b4:	b	40e7bc <ascii_strlower_n@plt+0xa3ac>
  40e7b8:	mov	w1, wzr
  40e7bc:	mov	x0, x20
  40e7c0:	mov	x2, xzr
  40e7c4:	bl	40dcd4 <ascii_strlower_n@plt+0x98c4>
  40e7c8:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40e7cc:	add	x2, x29, #0x18
  40e7d0:	mov	x0, x20
  40e7d4:	mov	w1, wzr
  40e7d8:	bl	40dc6c <ascii_strlower_n@plt+0x985c>
  40e7dc:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40e7e0:	ldrb	w8, [x23, #48]
  40e7e4:	ldr	x25, [x20, #8]
  40e7e8:	tbnz	w8, #0, 40e8d0 <ascii_strlower_n@plt+0xa4c0>
  40e7ec:	ldr	x8, [x23, #8]
  40e7f0:	ldrh	w8, [x8, #6]
  40e7f4:	cmp	w8, #0x1b
  40e7f8:	b.le	40e850 <ascii_strlower_n@plt+0xa440>
  40e7fc:	sub	w9, w8, #0x1c
  40e800:	cmp	w9, #0x18
  40e804:	b.hi	40e890 <ascii_strlower_n@plt+0xa480>  // b.pmore
  40e808:	adrp	x8, 41e000 <ascii_strlower_n@plt+0x19bf0>
  40e80c:	add	x8, x8, #0x6c0
  40e810:	adr	x10, 40e820 <ascii_strlower_n@plt+0xa410>
  40e814:	ldrh	w11, [x8, x9, lsl #1]
  40e818:	add	x10, x10, x11, lsl #2
  40e81c:	br	x10
  40e820:	ldrh	w1, [x23, #80]
  40e824:	mov	x0, x20
  40e828:	mov	x2, xzr
  40e82c:	bl	40dc6c <ascii_strlower_n@plt+0x985c>
  40e830:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40e834:	ldrb	w1, [x23, #82]
  40e838:	mov	x0, x20
  40e83c:	mov	x2, xzr
  40e840:	bl	40dc0c <ascii_strlower_n@plt+0x97fc>
  40e844:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40e848:	ldrb	w1, [x23, #83]
  40e84c:	b	40ece8 <ascii_strlower_n@plt+0xa8d8>
  40e850:	sub	w8, w8, #0x1
  40e854:	cmp	w8, #0xf
  40e858:	b.hi	40e8d0 <ascii_strlower_n@plt+0xa4c0>  // b.pmore
  40e85c:	adrp	x9, 41e000 <ascii_strlower_n@plt+0x19bf0>
  40e860:	add	x9, x9, #0x6b0
  40e864:	adr	x10, 40e874 <ascii_strlower_n@plt+0xa464>
  40e868:	ldrb	w11, [x9, x8]
  40e86c:	add	x10, x10, x11, lsl #2
  40e870:	br	x10
  40e874:	ldr	x1, [x23, #80]
  40e878:	mov	w2, #0x1                   	// #1
  40e87c:	mov	x0, x20
  40e880:	mov	w3, wzr
  40e884:	mov	x4, xzr
  40e888:	bl	40dfa8 <ascii_strlower_n@plt+0x9b98>
  40e88c:	b	40e8e0 <ascii_strlower_n@plt+0xa4d0>
  40e890:	cmp	w8, #0x63
  40e894:	b.eq	40e93c <ascii_strlower_n@plt+0xa52c>  // b.none
  40e898:	cmp	w8, #0x101
  40e89c:	b.ne	40e8d0 <ascii_strlower_n@plt+0xa4c0>  // b.any
  40e8a0:	ldrb	w1, [x23, #80]
  40e8a4:	mov	x0, x20
  40e8a8:	mov	x2, xzr
  40e8ac:	bl	40dc0c <ascii_strlower_n@plt+0x97fc>
  40e8b0:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40e8b4:	ldr	x1, [x23, #88]
  40e8b8:	mov	x0, x20
  40e8bc:	mov	x2, xzr
  40e8c0:	bl	40dd38 <ascii_strlower_n@plt+0x9928>
  40e8c4:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40e8c8:	ldp	x1, x2, [x23, #96]
  40e8cc:	b	40e8d4 <ascii_strlower_n@plt+0xa4c4>
  40e8d0:	ldp	x1, x2, [x23, #80]
  40e8d4:	mov	x0, x20
  40e8d8:	mov	x3, xzr
  40e8dc:	bl	40da24 <ascii_strlower_n@plt+0x9614>
  40e8e0:	mov	w24, w0
  40e8e4:	tbnz	w0, #31, 40ed1c <ascii_strlower_n@plt+0xa90c>
  40e8e8:	ldr	x23, [x20, #8]
  40e8ec:	ldr	x8, [x29, #24]
  40e8f0:	sub	x9, x23, x8
  40e8f4:	sub	x1, x9, #0x2
  40e8f8:	lsr	x9, x1, #16
  40e8fc:	cbz	x9, 40e908 <ascii_strlower_n@plt+0xa4f8>
  40e900:	mov	w24, #0xffffffe4            	// #-28
  40e904:	b	40ed1c <ascii_strlower_n@plt+0xa90c>
  40e908:	mov	x0, x20
  40e90c:	mov	x2, xzr
  40e910:	str	x8, [x20, #8]
  40e914:	bl	40dc6c <ascii_strlower_n@plt+0x985c>
  40e918:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40e91c:	str	x23, [x20, #8]
  40e920:	cbz	x22, 40e928 <ascii_strlower_n@plt+0xa518>
  40e924:	str	x19, [x22]
  40e928:	mov	w24, wzr
  40e92c:	cbz	x21, 40ed28 <ascii_strlower_n@plt+0xa918>
  40e930:	sub	x8, x25, x19
  40e934:	str	x8, [x21]
  40e938:	b	40ed28 <ascii_strlower_n@plt+0xa918>
  40e93c:	ldr	x23, [x23, #80]
  40e940:	cbz	x23, 40ed00 <ascii_strlower_n@plt+0xa8f0>
  40e944:	mov	x1, x23
  40e948:	ldr	x2, [x1], #24
  40e94c:	mov	x0, x20
  40e950:	mov	x3, xzr
  40e954:	bl	40ddc8 <ascii_strlower_n@plt+0x99b8>
  40e958:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40e95c:	ldr	x23, [x23, #8]
  40e960:	cbnz	x23, 40e944 <ascii_strlower_n@plt+0xa534>
  40e964:	b	40e8e8 <ascii_strlower_n@plt+0xa4d8>
  40e968:	add	x1, x23, #0x50
  40e96c:	mov	w2, #0x4                   	// #4
  40e970:	b	40e8d4 <ascii_strlower_n@plt+0xa4c4>
  40e974:	ldr	x1, [x23, #80]
  40e978:	mov	w2, #0x1                   	// #1
  40e97c:	mov	x0, x20
  40e980:	mov	w3, wzr
  40e984:	mov	x4, xzr
  40e988:	bl	40dfa8 <ascii_strlower_n@plt+0x9b98>
  40e98c:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40e990:	ldr	x1, [x23, #88]
  40e994:	mov	w2, #0x1                   	// #1
  40e998:	mov	x0, x20
  40e99c:	mov	w3, wzr
  40e9a0:	mov	x4, xzr
  40e9a4:	bl	40dfa8 <ascii_strlower_n@plt+0x9b98>
  40e9a8:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40e9ac:	ldr	w1, [x23, #96]
  40e9b0:	mov	x0, x20
  40e9b4:	mov	x2, xzr
  40e9b8:	bl	40dcd4 <ascii_strlower_n@plt+0x98c4>
  40e9bc:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40e9c0:	ldr	w1, [x23, #100]
  40e9c4:	mov	x0, x20
  40e9c8:	mov	x2, xzr
  40e9cc:	bl	40dcd4 <ascii_strlower_n@plt+0x98c4>
  40e9d0:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40e9d4:	ldr	w1, [x23, #104]
  40e9d8:	mov	x0, x20
  40e9dc:	mov	x2, xzr
  40e9e0:	bl	40dcd4 <ascii_strlower_n@plt+0x98c4>
  40e9e4:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40e9e8:	ldr	w1, [x23, #108]
  40e9ec:	mov	x0, x20
  40e9f0:	mov	x2, xzr
  40e9f4:	bl	40dcd4 <ascii_strlower_n@plt+0x98c4>
  40e9f8:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40e9fc:	ldr	w1, [x23, #112]
  40ea00:	b	40eb9c <ascii_strlower_n@plt+0xa78c>
  40ea04:	ldr	x1, [x23, #80]
  40ea08:	mov	x0, x20
  40ea0c:	mov	x2, xzr
  40ea10:	bl	40dd38 <ascii_strlower_n@plt+0x9928>
  40ea14:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40ea18:	ldr	x1, [x23, #88]
  40ea1c:	mov	x0, x20
  40ea20:	mov	x2, xzr
  40ea24:	bl	40dd38 <ascii_strlower_n@plt+0x9928>
  40ea28:	b	40e8e0 <ascii_strlower_n@plt+0xa4d0>
  40ea2c:	ldrh	w1, [x23, #80]
  40ea30:	mov	x0, x20
  40ea34:	mov	x2, xzr
  40ea38:	bl	40dc6c <ascii_strlower_n@plt+0x985c>
  40ea3c:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40ea40:	ldr	x1, [x23, #88]
  40ea44:	b	40e878 <ascii_strlower_n@plt+0xa468>
  40ea48:	ldrb	w1, [x23, #80]
  40ea4c:	mov	x0, x20
  40ea50:	mov	x2, xzr
  40ea54:	bl	40dc0c <ascii_strlower_n@plt+0x97fc>
  40ea58:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40ea5c:	ldrb	w1, [x23, #81]
  40ea60:	b	40ece8 <ascii_strlower_n@plt+0xa8d8>
  40ea64:	ldrh	w1, [x23, #80]
  40ea68:	mov	x0, x20
  40ea6c:	mov	x2, xzr
  40ea70:	bl	40dc6c <ascii_strlower_n@plt+0x985c>
  40ea74:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40ea78:	ldrb	w1, [x23, #82]
  40ea7c:	mov	x0, x20
  40ea80:	mov	x2, xzr
  40ea84:	bl	40dc0c <ascii_strlower_n@plt+0x97fc>
  40ea88:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40ea8c:	ldrb	w1, [x23, #83]
  40ea90:	mov	x0, x20
  40ea94:	mov	x2, xzr
  40ea98:	bl	40dc0c <ascii_strlower_n@plt+0x97fc>
  40ea9c:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40eaa0:	ldr	w1, [x23, #84]
  40eaa4:	mov	x0, x20
  40eaa8:	mov	x2, xzr
  40eaac:	bl	40dcd4 <ascii_strlower_n@plt+0x98c4>
  40eab0:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40eab4:	ldr	w1, [x23, #88]
  40eab8:	mov	x0, x20
  40eabc:	mov	x2, xzr
  40eac0:	bl	40dcd4 <ascii_strlower_n@plt+0x98c4>
  40eac4:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40eac8:	ldr	w1, [x23, #92]
  40eacc:	mov	x0, x20
  40ead0:	mov	x2, xzr
  40ead4:	bl	40dcd4 <ascii_strlower_n@plt+0x98c4>
  40ead8:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40eadc:	ldrh	w1, [x23, #96]
  40eae0:	mov	x0, x20
  40eae4:	mov	x2, xzr
  40eae8:	bl	40dc6c <ascii_strlower_n@plt+0x985c>
  40eaec:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40eaf0:	ldr	x1, [x23, #104]
  40eaf4:	mov	w3, #0x1                   	// #1
  40eaf8:	mov	x0, x20
  40eafc:	mov	w2, wzr
  40eb00:	mov	x4, xzr
  40eb04:	bl	40dfa8 <ascii_strlower_n@plt+0x9b98>
  40eb08:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40eb0c:	ldp	x1, x2, [x23, #112]
  40eb10:	b	40e8d4 <ascii_strlower_n@plt+0xa4c4>
  40eb14:	add	x1, x23, #0x50
  40eb18:	mov	w2, #0x10                  	// #16
  40eb1c:	b	40e8d4 <ascii_strlower_n@plt+0xa4c4>
  40eb20:	ldrb	w1, [x23, #80]
  40eb24:	mov	x0, x20
  40eb28:	mov	x2, xzr
  40eb2c:	bl	40dc0c <ascii_strlower_n@plt+0x97fc>
  40eb30:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40eb34:	ldrb	w1, [x23, #81]
  40eb38:	mov	x0, x20
  40eb3c:	mov	x2, xzr
  40eb40:	bl	40dc0c <ascii_strlower_n@plt+0x97fc>
  40eb44:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40eb48:	ldrb	w1, [x23, #82]
  40eb4c:	mov	x0, x20
  40eb50:	mov	x2, xzr
  40eb54:	bl	40dc0c <ascii_strlower_n@plt+0x97fc>
  40eb58:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40eb5c:	ldrb	w1, [x23, #83]
  40eb60:	mov	x0, x20
  40eb64:	mov	x2, xzr
  40eb68:	bl	40dc0c <ascii_strlower_n@plt+0x97fc>
  40eb6c:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40eb70:	ldr	w1, [x23, #84]
  40eb74:	mov	x0, x20
  40eb78:	mov	x2, xzr
  40eb7c:	bl	40dcd4 <ascii_strlower_n@plt+0x98c4>
  40eb80:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40eb84:	ldr	w1, [x23, #88]
  40eb88:	mov	x0, x20
  40eb8c:	mov	x2, xzr
  40eb90:	bl	40dcd4 <ascii_strlower_n@plt+0x98c4>
  40eb94:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40eb98:	ldr	w1, [x23, #92]
  40eb9c:	mov	x0, x20
  40eba0:	mov	x2, xzr
  40eba4:	bl	40dcd4 <ascii_strlower_n@plt+0x98c4>
  40eba8:	b	40e8e0 <ascii_strlower_n@plt+0xa4d0>
  40ebac:	ldrh	w1, [x23, #80]
  40ebb0:	mov	x0, x20
  40ebb4:	mov	x2, xzr
  40ebb8:	bl	40dc6c <ascii_strlower_n@plt+0x985c>
  40ebbc:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40ebc0:	ldrh	w1, [x23, #82]
  40ebc4:	mov	x0, x20
  40ebc8:	mov	x2, xzr
  40ebcc:	bl	40dc6c <ascii_strlower_n@plt+0x985c>
  40ebd0:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40ebd4:	ldrh	w1, [x23, #84]
  40ebd8:	mov	x0, x20
  40ebdc:	mov	x2, xzr
  40ebe0:	bl	40dc6c <ascii_strlower_n@plt+0x985c>
  40ebe4:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40ebe8:	ldr	x1, [x23, #88]
  40ebec:	mov	x0, x20
  40ebf0:	mov	w2, wzr
  40ebf4:	b	40e880 <ascii_strlower_n@plt+0xa470>
  40ebf8:	ldr	x1, [x23, #80]
  40ebfc:	mov	x0, x20
  40ec00:	mov	w2, wzr
  40ec04:	mov	w3, wzr
  40ec08:	mov	x4, xzr
  40ec0c:	bl	40dfa8 <ascii_strlower_n@plt+0x9b98>
  40ec10:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40ec14:	ldr	x1, [x23, #88]
  40ec18:	mov	x0, x20
  40ec1c:	bl	40ed88 <ascii_strlower_n@plt+0xa978>
  40ec20:	tbz	w0, #31, 40e8e8 <ascii_strlower_n@plt+0xa4d8>
  40ec24:	b	40ed18 <ascii_strlower_n@plt+0xa908>
  40ec28:	ldrb	w1, [x23, #80]
  40ec2c:	mov	x0, x20
  40ec30:	mov	x2, xzr
  40ec34:	bl	40dc0c <ascii_strlower_n@plt+0x97fc>
  40ec38:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40ec3c:	ldrb	w1, [x23, #81]
  40ec40:	mov	x0, x20
  40ec44:	mov	x2, xzr
  40ec48:	bl	40dc0c <ascii_strlower_n@plt+0x97fc>
  40ec4c:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40ec50:	ldrh	w1, [x23, #82]
  40ec54:	mov	x0, x20
  40ec58:	mov	x2, xzr
  40ec5c:	bl	40dc6c <ascii_strlower_n@plt+0x985c>
  40ec60:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40ec64:	ldrb	w1, [x23, #96]
  40ec68:	mov	x0, x20
  40ec6c:	mov	x2, xzr
  40ec70:	bl	40dc0c <ascii_strlower_n@plt+0x97fc>
  40ec74:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40ec78:	ldp	x1, x2, [x23, #88]
  40ec7c:	mov	x0, x20
  40ec80:	mov	x3, xzr
  40ec84:	bl	40da24 <ascii_strlower_n@plt+0x9614>
  40ec88:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40ec8c:	ldrb	w1, [x23, #112]
  40ec90:	mov	x0, x20
  40ec94:	mov	x2, xzr
  40ec98:	bl	40dc0c <ascii_strlower_n@plt+0x97fc>
  40ec9c:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40eca0:	ldp	x1, x2, [x23, #104]
  40eca4:	mov	x0, x20
  40eca8:	mov	x3, xzr
  40ecac:	bl	40da24 <ascii_strlower_n@plt+0x9614>
  40ecb0:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40ecb4:	ldr	x1, [x23, #120]
  40ecb8:	b	40ec18 <ascii_strlower_n@plt+0xa808>
  40ecbc:	ldrb	w1, [x23, #80]
  40ecc0:	mov	x0, x20
  40ecc4:	mov	x2, xzr
  40ecc8:	bl	40dc0c <ascii_strlower_n@plt+0x97fc>
  40eccc:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40ecd0:	ldrb	w1, [x23, #81]
  40ecd4:	mov	x0, x20
  40ecd8:	mov	x2, xzr
  40ecdc:	bl	40dc0c <ascii_strlower_n@plt+0x97fc>
  40ece0:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40ece4:	ldrb	w1, [x23, #82]
  40ece8:	mov	x0, x20
  40ecec:	mov	x2, xzr
  40ecf0:	bl	40dc0c <ascii_strlower_n@plt+0x97fc>
  40ecf4:	tbnz	w0, #31, 40ed18 <ascii_strlower_n@plt+0xa908>
  40ecf8:	ldp	x1, x2, [x23, #88]
  40ecfc:	b	40e8d4 <ascii_strlower_n@plt+0xa4c4>
  40ed00:	mov	x0, x20
  40ed04:	mov	x1, xzr
  40ed08:	mov	x2, xzr
  40ed0c:	mov	x3, xzr
  40ed10:	bl	40ddc8 <ascii_strlower_n@plt+0x99b8>
  40ed14:	tbz	w0, #31, 40e8e8 <ascii_strlower_n@plt+0xa4d8>
  40ed18:	mov	w24, w0
  40ed1c:	mov	x0, x20
  40ed20:	mov	x1, x19
  40ed24:	bl	40d980 <ascii_strlower_n@plt+0x9570>
  40ed28:	mov	w0, w24
  40ed2c:	ldp	x20, x19, [sp, #64]
  40ed30:	ldp	x22, x21, [sp, #48]
  40ed34:	ldp	x24, x23, [sp, #32]
  40ed38:	ldr	x25, [sp, #16]
  40ed3c:	ldp	x29, x30, [sp], #80
  40ed40:	ret
  40ed44:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40ed48:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40ed4c:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40ed50:	add	x1, x1, #0x3b6
  40ed54:	add	x2, x2, #0x2fc
  40ed58:	add	x4, x4, #0x909
  40ed5c:	mov	w3, #0x335                 	// #821
  40ed60:	bl	403aa0 <log_assert_failed_realm@plt>
  40ed64:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40ed68:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40ed6c:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40ed70:	add	x1, x1, #0x974
  40ed74:	add	x2, x2, #0x2fc
  40ed78:	add	x4, x4, #0x909
  40ed7c:	mov	w3, #0x336                 	// #822
  40ed80:	mov	w0, wzr
  40ed84:	bl	403aa0 <log_assert_failed_realm@plt>
  40ed88:	sub	sp, sp, #0x80
  40ed8c:	movi	v0.2d, #0x0
  40ed90:	stp	x29, x30, [sp, #48]
  40ed94:	str	x25, [sp, #64]
  40ed98:	stp	x24, x23, [sp, #80]
  40ed9c:	stp	x22, x21, [sp, #96]
  40eda0:	stp	x20, x19, [sp, #112]
  40eda4:	add	x29, sp, #0x30
  40eda8:	stp	q0, q0, [sp]
  40edac:	cbz	x0, 40eee0 <ascii_strlower_n@plt+0xaad0>
  40edb0:	ldr	x20, [x0, #8]
  40edb4:	mov	x21, x1
  40edb8:	mov	x19, x0
  40edbc:	sub	x1, x29, #0x10
  40edc0:	add	x2, x29, #0x1c
  40edc4:	mov	x0, x21
  40edc8:	stur	wzr, [x29, #-16]
  40edcc:	bl	404140 <bitmap_iterate@plt>
  40edd0:	mov	w22, wzr
  40edd4:	tbz	w0, #0, 40ee9c <ascii_strlower_n@plt+0xaa8c>
  40edd8:	mov	w1, wzr
  40eddc:	mov	w25, wzr
  40ede0:	mov	w23, #0x1                   	// #1
  40ede4:	mov	x24, sp
  40ede8:	ldr	w8, [x29, #28]
  40edec:	cmp	w8, #0x10, lsl #12
  40edf0:	b.cs	40eebc <ascii_strlower_n@plt+0xaaac>  // b.hs, b.nlast
  40edf4:	lsr	w22, w8, #8
  40edf8:	cmp	w22, w1, uxtb
  40edfc:	b.eq	40ee2c <ascii_strlower_n@plt+0xaa1c>  // b.none
  40ee00:	ldrb	w9, [x24, w25, uxtw]
  40ee04:	cbz	w9, 40ee2c <ascii_strlower_n@plt+0xaa1c>
  40ee08:	add	w2, w25, #0x1
  40ee0c:	mov	x3, sp
  40ee10:	mov	x0, x19
  40ee14:	bl	410d60 <ascii_strlower_n@plt+0xc950>
  40ee18:	tbnz	w0, #31, 40ee8c <ascii_strlower_n@plt+0xaa7c>
  40ee1c:	ldr	w8, [x29, #28]
  40ee20:	movi	v0.2d, #0x0
  40ee24:	stp	q0, q0, [sp]
  40ee28:	lsr	w22, w8, #8
  40ee2c:	ubfx	x25, x8, #3, #5
  40ee30:	ldrb	w9, [x24, x25]
  40ee34:	mvn	w8, w8
  40ee38:	and	w8, w8, #0x7
  40ee3c:	lsl	w8, w23, w8
  40ee40:	orr	w8, w9, w8
  40ee44:	sub	x1, x29, #0x10
  40ee48:	add	x2, x29, #0x1c
  40ee4c:	mov	x0, x21
  40ee50:	strb	w8, [x24, x25]
  40ee54:	bl	404140 <bitmap_iterate@plt>
  40ee58:	mov	w1, w22
  40ee5c:	tbnz	w0, #0, 40ede8 <ascii_strlower_n@plt+0xa9d8>
  40ee60:	mov	x8, sp
  40ee64:	ldrb	w8, [x8, x25]
  40ee68:	cbz	w8, 40ee84 <ascii_strlower_n@plt+0xaa74>
  40ee6c:	add	w2, w25, #0x1
  40ee70:	mov	x3, sp
  40ee74:	mov	x0, x19
  40ee78:	mov	w1, w22
  40ee7c:	bl	410d60 <ascii_strlower_n@plt+0xc950>
  40ee80:	tbnz	w0, #31, 40ee8c <ascii_strlower_n@plt+0xaa7c>
  40ee84:	mov	w22, wzr
  40ee88:	b	40ee9c <ascii_strlower_n@plt+0xaa8c>
  40ee8c:	mov	w22, w0
  40ee90:	mov	x0, x19
  40ee94:	mov	x1, x20
  40ee98:	bl	40d980 <ascii_strlower_n@plt+0x9570>
  40ee9c:	mov	w0, w22
  40eea0:	ldp	x20, x19, [sp, #112]
  40eea4:	ldp	x22, x21, [sp, #96]
  40eea8:	ldp	x24, x23, [sp, #80]
  40eeac:	ldr	x25, [sp, #64]
  40eeb0:	ldp	x29, x30, [sp, #48]
  40eeb4:	add	sp, sp, #0x80
  40eeb8:	ret
  40eebc:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40eec0:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40eec4:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40eec8:	add	x1, x1, #0xdf1
  40eecc:	add	x2, x2, #0x2fc
  40eed0:	add	x4, x4, #0xdb4
  40eed4:	mov	w3, #0x296                 	// #662
  40eed8:	mov	w0, wzr
  40eedc:	bl	403aa0 <log_assert_failed_realm@plt>
  40eee0:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40eee4:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40eee8:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40eeec:	add	x1, x1, #0x3b6
  40eef0:	add	x2, x2, #0x2fc
  40eef4:	add	x4, x4, #0xdb4
  40eef8:	mov	w3, #0x291                 	// #657
  40eefc:	bl	403aa0 <log_assert_failed_realm@plt>
  40ef00:	stp	x29, x30, [sp, #-48]!
  40ef04:	stp	x22, x21, [sp, #16]
  40ef08:	stp	x20, x19, [sp, #32]
  40ef0c:	mov	x29, sp
  40ef10:	cbz	x0, 40ef94 <ascii_strlower_n@plt+0xab84>
  40ef14:	mov	x19, x1
  40ef18:	cbz	x1, 40ef80 <ascii_strlower_n@plt+0xab70>
  40ef1c:	ldr	x8, [x19, #8]
  40ef20:	mov	x20, x0
  40ef24:	cbz	x8, 40ef30 <ascii_strlower_n@plt+0xab20>
  40ef28:	ldr	x1, [x19, #24]
  40ef2c:	b	40ef34 <ascii_strlower_n@plt+0xab24>
  40ef30:	mov	x1, xzr
  40ef34:	ldr	x8, [x19, #8]
  40ef38:	cbz	x8, 40ef80 <ascii_strlower_n@plt+0xab70>
  40ef3c:	mov	x22, xzr
  40ef40:	add	x21, x19, #0x20
  40ef44:	mov	x0, x20
  40ef48:	mov	w2, wzr
  40ef4c:	mov	x3, xzr
  40ef50:	bl	40e1e8 <ascii_strlower_n@plt+0x9dd8>
  40ef54:	tbnz	w0, #31, 40ef84 <ascii_strlower_n@plt+0xab74>
  40ef58:	ldr	x9, [x19, #8]
  40ef5c:	add	x8, x22, #0x1
  40ef60:	cmp	x8, x9
  40ef64:	b.cs	40ef70 <ascii_strlower_n@plt+0xab60>  // b.hs, b.nlast
  40ef68:	ldr	x1, [x21, x22, lsl #3]
  40ef6c:	b	40ef74 <ascii_strlower_n@plt+0xab64>
  40ef70:	mov	x1, xzr
  40ef74:	cmp	x8, x9
  40ef78:	mov	x22, x8
  40ef7c:	b.cc	40ef44 <ascii_strlower_n@plt+0xab34>  // b.lo, b.ul, b.last
  40ef80:	mov	w0, wzr
  40ef84:	ldp	x20, x19, [sp, #32]
  40ef88:	ldp	x22, x21, [sp, #16]
  40ef8c:	ldp	x29, x30, [sp], #48
  40ef90:	ret
  40ef94:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40ef98:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40ef9c:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40efa0:	add	x1, x1, #0x3b6
  40efa4:	add	x2, x2, #0x2fc
  40efa8:	add	x4, x4, #0x977
  40efac:	mov	w3, #0x490                 	// #1168
  40efb0:	bl	403aa0 <log_assert_failed_realm@plt>
  40efb4:	stp	x29, x30, [sp, #-48]!
  40efb8:	stp	x22, x21, [sp, #16]
  40efbc:	stp	x20, x19, [sp, #32]
  40efc0:	mov	x29, sp
  40efc4:	cbz	x0, 40f058 <ascii_strlower_n@plt+0xac48>
  40efc8:	mov	x19, x1
  40efcc:	cbz	x1, 40f044 <ascii_strlower_n@plt+0xac34>
  40efd0:	ldr	x8, [x19, #8]
  40efd4:	mov	x20, x0
  40efd8:	cbz	x8, 40efe8 <ascii_strlower_n@plt+0xabd8>
  40efdc:	ldr	x1, [x19, #24]
  40efe0:	ldr	w2, [x19, #36]
  40efe4:	b	40eff0 <ascii_strlower_n@plt+0xabe0>
  40efe8:	mov	x1, xzr
  40efec:	mov	w2, wzr
  40eff0:	ldr	x8, [x19, #8]
  40eff4:	cbz	x8, 40f044 <ascii_strlower_n@plt+0xac34>
  40eff8:	mov	x21, xzr
  40effc:	add	x22, x19, #0x28
  40f000:	mov	x0, x20
  40f004:	mov	x3, xzr
  40f008:	mov	x4, xzr
  40f00c:	bl	40e764 <ascii_strlower_n@plt+0xa354>
  40f010:	tbnz	w0, #31, 40f048 <ascii_strlower_n@plt+0xac38>
  40f014:	ldr	x8, [x19, #8]
  40f018:	add	x21, x21, #0x1
  40f01c:	cmp	x21, x8
  40f020:	b.cs	40f030 <ascii_strlower_n@plt+0xac20>  // b.hs, b.nlast
  40f024:	ldr	x1, [x22]
  40f028:	ldr	w2, [x22, #12]
  40f02c:	b	40f038 <ascii_strlower_n@plt+0xac28>
  40f030:	mov	x1, xzr
  40f034:	mov	w2, wzr
  40f038:	cmp	x21, x8
  40f03c:	add	x22, x22, #0x10
  40f040:	b.cc	40f000 <ascii_strlower_n@plt+0xabf0>  // b.lo, b.ul, b.last
  40f044:	mov	w0, wzr
  40f048:	ldp	x20, x19, [sp, #32]
  40f04c:	ldp	x22, x21, [sp, #16]
  40f050:	ldp	x29, x30, [sp], #48
  40f054:	ret
  40f058:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f05c:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f060:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f064:	add	x1, x1, #0x3b6
  40f068:	add	x2, x2, #0x2fc
  40f06c:	add	x4, x4, #0x9b2
  40f070:	mov	w3, #0x4a0                 	// #1184
  40f074:	bl	403aa0 <log_assert_failed_realm@plt>
  40f078:	stp	x29, x30, [sp, #-16]!
  40f07c:	mov	x29, sp
  40f080:	cbz	x0, 40f0e0 <ascii_strlower_n@plt+0xacd0>
  40f084:	ldr	x8, [x0, #24]
  40f088:	ldr	x10, [x0, #8]
  40f08c:	add	x9, x8, x1
  40f090:	cmp	x9, x10
  40f094:	b.ls	40f0a0 <ascii_strlower_n@plt+0xac90>  // b.plast
  40f098:	mov	w8, #0xffffffa6            	// #-90
  40f09c:	b	40f0d4 <ascii_strlower_n@plt+0xacc4>
  40f0a0:	cbz	x2, 40f0bc <ascii_strlower_n@plt+0xacac>
  40f0a4:	ldr	x10, [x0, #40]
  40f0a8:	add	x11, x0, #0xa8
  40f0ac:	cmp	x10, #0x0
  40f0b0:	csel	x10, x11, x10, eq  // eq = none
  40f0b4:	add	x10, x10, x8
  40f0b8:	str	x10, [x2]
  40f0bc:	cbz	x3, 40f0cc <ascii_strlower_n@plt+0xacbc>
  40f0c0:	str	x8, [x3]
  40f0c4:	ldr	x8, [x0, #24]
  40f0c8:	add	x9, x8, x1
  40f0cc:	mov	w8, wzr
  40f0d0:	str	x9, [x0, #24]
  40f0d4:	mov	w0, w8
  40f0d8:	ldp	x29, x30, [sp], #16
  40f0dc:	ret
  40f0e0:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f0e4:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f0e8:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f0ec:	add	x1, x1, #0x3b6
  40f0f0:	add	x2, x2, #0x2fc
  40f0f4:	add	x4, x4, #0x9e9
  40f0f8:	mov	w3, #0x4ac                 	// #1196
  40f0fc:	bl	403aa0 <log_assert_failed_realm@plt>
  40f100:	stp	x29, x30, [sp, #-16]!
  40f104:	mov	x29, sp
  40f108:	cbz	x0, 40f12c <ascii_strlower_n@plt+0xad1c>
  40f10c:	ldr	x8, [x0, #8]
  40f110:	cmp	x8, x1
  40f114:	b.cc	40f14c <ascii_strlower_n@plt+0xad3c>  // b.lo, b.ul, b.last
  40f118:	cmp	x1, #0xb
  40f11c:	b.ls	40f16c <ascii_strlower_n@plt+0xad5c>  // b.plast
  40f120:	str	x1, [x0, #24]
  40f124:	ldp	x29, x30, [sp], #16
  40f128:	ret
  40f12c:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f130:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f134:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f138:	add	x1, x1, #0x3b6
  40f13c:	add	x2, x2, #0x2fc
  40f140:	add	x4, x4, #0xa2b
  40f144:	mov	w3, #0x4bc                 	// #1212
  40f148:	bl	403aa0 <log_assert_failed_realm@plt>
  40f14c:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f150:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f154:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f158:	add	x1, x1, #0xa57
  40f15c:	add	x2, x2, #0x2fc
  40f160:	add	x4, x4, #0xa2b
  40f164:	mov	w3, #0x4bd                 	// #1213
  40f168:	b	40f188 <ascii_strlower_n@plt+0xad78>
  40f16c:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f170:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f174:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f178:	add	x1, x1, #0xa66
  40f17c:	add	x2, x2, #0x2fc
  40f180:	add	x4, x4, #0xa2b
  40f184:	mov	w3, #0x4be                 	// #1214
  40f188:	mov	w0, wzr
  40f18c:	bl	403aa0 <log_assert_failed_realm@plt>
  40f190:	stp	x29, x30, [sp, #-16]!
  40f194:	mov	x29, sp
  40f198:	cbz	x0, 40f1fc <ascii_strlower_n@plt+0xadec>
  40f19c:	cbz	x1, 40f21c <ascii_strlower_n@plt+0xae0c>
  40f1a0:	ldr	x10, [x0, #24]
  40f1a4:	ldr	x8, [x0, #8]
  40f1a8:	add	x9, x10, x2
  40f1ac:	cmp	x9, x8
  40f1b0:	b.ls	40f1bc <ascii_strlower_n@plt+0xadac>  // b.plast
  40f1b4:	mov	w0, #0xffffffa6            	// #-90
  40f1b8:	b	40f1f4 <ascii_strlower_n@plt+0xade4>
  40f1bc:	ldr	x8, [x0, #40]
  40f1c0:	add	x11, x0, #0xa8
  40f1c4:	cmp	x8, #0x0
  40f1c8:	csel	x8, x11, x8, eq  // eq = none
  40f1cc:	add	x8, x8, x10
  40f1d0:	cbz	x3, 40f1e0 <ascii_strlower_n@plt+0xadd0>
  40f1d4:	str	x10, [x3]
  40f1d8:	ldr	x9, [x0, #24]
  40f1dc:	add	x9, x9, x2
  40f1e0:	str	x9, [x0, #24]
  40f1e4:	mov	x0, x1
  40f1e8:	mov	x1, x8
  40f1ec:	bl	403c70 <memcpy@plt>
  40f1f0:	mov	w0, wzr
  40f1f4:	ldp	x29, x30, [sp], #16
  40f1f8:	ret
  40f1fc:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f200:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f204:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f208:	add	x1, x1, #0x3b6
  40f20c:	add	x2, x2, #0x2fc
  40f210:	add	x4, x4, #0xa84
  40f214:	mov	w3, #0x4c7                 	// #1223
  40f218:	bl	403aa0 <log_assert_failed_realm@plt>
  40f21c:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f220:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f224:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f228:	add	x1, x1, #0x73d
  40f22c:	add	x2, x2, #0x2fc
  40f230:	add	x4, x4, #0xa84
  40f234:	mov	w3, #0x4c8                 	// #1224
  40f238:	mov	w0, wzr
  40f23c:	bl	403aa0 <log_assert_failed_realm@plt>
  40f240:	stp	x29, x30, [sp, #-16]!
  40f244:	mov	x29, sp
  40f248:	cbz	x0, 40f2a4 <ascii_strlower_n@plt+0xae94>
  40f24c:	ldr	x9, [x0, #24]
  40f250:	ldr	x8, [x0, #8]
  40f254:	add	x10, x9, #0x1
  40f258:	cmp	x10, x8
  40f25c:	b.ls	40f268 <ascii_strlower_n@plt+0xae58>  // b.plast
  40f260:	mov	w8, #0xffffffa6            	// #-90
  40f264:	b	40f298 <ascii_strlower_n@plt+0xae88>
  40f268:	ldr	x8, [x0, #40]
  40f26c:	add	x11, x0, #0xa8
  40f270:	cmp	x8, #0x0
  40f274:	csel	x11, x11, x8, eq  // eq = none
  40f278:	cbz	x2, 40f288 <ascii_strlower_n@plt+0xae78>
  40f27c:	str	x9, [x2]
  40f280:	ldr	x8, [x0, #24]
  40f284:	add	x10, x8, #0x1
  40f288:	str	x10, [x0, #24]
  40f28c:	ldrb	w9, [x11, x9]
  40f290:	mov	w8, wzr
  40f294:	strb	w9, [x1]
  40f298:	mov	w0, w8
  40f29c:	ldp	x29, x30, [sp], #16
  40f2a0:	ret
  40f2a4:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f2a8:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f2ac:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f2b0:	add	x1, x1, #0x3b6
  40f2b4:	add	x2, x2, #0x2fc
  40f2b8:	add	x4, x4, #0xac4
  40f2bc:	mov	w3, #0x4fa                 	// #1274
  40f2c0:	bl	403aa0 <log_assert_failed_realm@plt>
  40f2c4:	stp	x29, x30, [sp, #-16]!
  40f2c8:	mov	x29, sp
  40f2cc:	cbz	x0, 40f330 <ascii_strlower_n@plt+0xaf20>
  40f2d0:	ldr	x9, [x0, #24]
  40f2d4:	ldr	x8, [x0, #8]
  40f2d8:	add	x10, x9, #0x2
  40f2dc:	cmp	x10, x8
  40f2e0:	b.ls	40f2ec <ascii_strlower_n@plt+0xaedc>  // b.plast
  40f2e4:	mov	w8, #0xffffffa6            	// #-90
  40f2e8:	b	40f324 <ascii_strlower_n@plt+0xaf14>
  40f2ec:	ldr	x8, [x0, #40]
  40f2f0:	add	x11, x0, #0xa8
  40f2f4:	cmp	x8, #0x0
  40f2f8:	csel	x11, x11, x8, eq  // eq = none
  40f2fc:	cbz	x2, 40f30c <ascii_strlower_n@plt+0xaefc>
  40f300:	str	x9, [x2]
  40f304:	ldr	x8, [x0, #24]
  40f308:	add	x10, x8, #0x2
  40f30c:	str	x10, [x0, #24]
  40f310:	ldrh	w9, [x11, x9]
  40f314:	mov	w8, wzr
  40f318:	rev	w9, w9
  40f31c:	lsr	w9, w9, #16
  40f320:	strh	w9, [x1]
  40f324:	mov	w0, w8
  40f328:	ldp	x29, x30, [sp], #16
  40f32c:	ret
  40f330:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f334:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f338:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f33c:	add	x1, x1, #0x3b6
  40f340:	add	x2, x2, #0x2fc
  40f344:	add	x4, x4, #0xb00
  40f348:	mov	w3, #0x508                 	// #1288
  40f34c:	bl	403aa0 <log_assert_failed_realm@plt>
  40f350:	stp	x29, x30, [sp, #-16]!
  40f354:	mov	x29, sp
  40f358:	cbz	x0, 40f3b8 <ascii_strlower_n@plt+0xafa8>
  40f35c:	ldr	x9, [x0, #24]
  40f360:	ldr	x8, [x0, #8]
  40f364:	add	x10, x9, #0x4
  40f368:	cmp	x10, x8
  40f36c:	b.ls	40f378 <ascii_strlower_n@plt+0xaf68>  // b.plast
  40f370:	mov	w8, #0xffffffa6            	// #-90
  40f374:	b	40f3ac <ascii_strlower_n@plt+0xaf9c>
  40f378:	ldr	x8, [x0, #40]
  40f37c:	add	x11, x0, #0xa8
  40f380:	cmp	x8, #0x0
  40f384:	csel	x11, x11, x8, eq  // eq = none
  40f388:	cbz	x2, 40f398 <ascii_strlower_n@plt+0xaf88>
  40f38c:	str	x9, [x2]
  40f390:	ldr	x8, [x0, #24]
  40f394:	add	x10, x8, #0x4
  40f398:	str	x10, [x0, #24]
  40f39c:	ldr	w9, [x11, x9]
  40f3a0:	mov	w8, wzr
  40f3a4:	rev	w9, w9
  40f3a8:	str	w9, [x1]
  40f3ac:	mov	w0, w8
  40f3b0:	ldp	x29, x30, [sp], #16
  40f3b4:	ret
  40f3b8:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f3bc:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f3c0:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f3c4:	add	x1, x1, #0x3b6
  40f3c8:	add	x2, x2, #0x2fc
  40f3cc:	add	x4, x4, #0xb3e
  40f3d0:	mov	w3, #0x517                 	// #1303
  40f3d4:	bl	403aa0 <log_assert_failed_realm@plt>
  40f3d8:	stp	x29, x30, [sp, #-64]!
  40f3dc:	stp	x24, x23, [sp, #16]
  40f3e0:	stp	x22, x21, [sp, #32]
  40f3e4:	stp	x20, x19, [sp, #48]
  40f3e8:	mov	x29, sp
  40f3ec:	cbz	x0, 40f4c4 <ascii_strlower_n@plt+0xb0b4>
  40f3f0:	ldr	x19, [x0, #24]
  40f3f4:	ldr	x9, [x0, #8]
  40f3f8:	mov	x20, x0
  40f3fc:	add	x8, x19, #0x1
  40f400:	cmp	x8, x9
  40f404:	b.hi	40f42c <ascii_strlower_n@plt+0xb01c>  // b.pmore
  40f408:	ldr	x10, [x20, #40]
  40f40c:	add	x11, x20, #0xa8
  40f410:	str	x8, [x20, #24]
  40f414:	cmp	x10, #0x0
  40f418:	csel	x10, x11, x10, eq  // eq = none
  40f41c:	ldrb	w23, [x10, x19]
  40f420:	add	x11, x8, x23
  40f424:	cmp	x11, x9
  40f428:	b.ls	40f454 <ascii_strlower_n@plt+0xb044>  // b.plast
  40f42c:	mov	w22, #0xffffffa6            	// #-90
  40f430:	mov	x0, x20
  40f434:	mov	x1, x19
  40f438:	bl	40f100 <ascii_strlower_n@plt+0xacf0>
  40f43c:	mov	w0, w22
  40f440:	ldp	x20, x19, [sp, #48]
  40f444:	ldp	x22, x21, [sp, #32]
  40f448:	ldp	x24, x23, [sp, #16]
  40f44c:	ldp	x29, x30, [sp], #64
  40f450:	ret
  40f454:	add	x24, x10, x8
  40f458:	mov	x21, x2
  40f45c:	mov	x22, x1
  40f460:	mov	x0, x24
  40f464:	mov	w1, wzr
  40f468:	mov	x2, x23
  40f46c:	str	x11, [x20, #24]
  40f470:	bl	404150 <memchr@plt>
  40f474:	cbz	x0, 40f480 <ascii_strlower_n@plt+0xb070>
  40f478:	mov	w22, #0xffffffb6            	// #-74
  40f47c:	b	40f430 <ascii_strlower_n@plt+0xb020>
  40f480:	mov	x0, x24
  40f484:	mov	x1, x23
  40f488:	bl	403ad0 <strndup@plt>
  40f48c:	cbz	x0, 40f4b0 <ascii_strlower_n@plt+0xb0a0>
  40f490:	mov	x23, x0
  40f494:	bl	404160 <utf8_is_valid@plt>
  40f498:	cbz	x0, 40f4b8 <ascii_strlower_n@plt+0xb0a8>
  40f49c:	str	x23, [x22]
  40f4a0:	mov	w22, wzr
  40f4a4:	cbz	x21, 40f43c <ascii_strlower_n@plt+0xb02c>
  40f4a8:	str	x19, [x21]
  40f4ac:	b	40f43c <ascii_strlower_n@plt+0xb02c>
  40f4b0:	mov	w22, #0xfffffff4            	// #-12
  40f4b4:	b	40f430 <ascii_strlower_n@plt+0xb020>
  40f4b8:	mov	x0, x23
  40f4bc:	bl	403a30 <free@plt>
  40f4c0:	b	40f478 <ascii_strlower_n@plt+0xb068>
  40f4c4:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f4c8:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f4cc:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f4d0:	add	x1, x1, #0x3b6
  40f4d4:	add	x2, x2, #0x2fc
  40f4d8:	add	x4, x4, #0xb7c
  40f4dc:	mov	w3, #0x529                 	// #1321
  40f4e0:	bl	403aa0 <log_assert_failed_realm@plt>
  40f4e4:	stp	x29, x30, [sp, #-16]!
  40f4e8:	mov	x29, sp
  40f4ec:	cbz	x0, 40f564 <ascii_strlower_n@plt+0xb154>
  40f4f0:	mov	x8, x1
  40f4f4:	ldr	x1, [x0, #24]
  40f4f8:	ldr	x11, [x0, #8]
  40f4fc:	add	x9, x1, #0x1
  40f500:	cmp	x9, x11
  40f504:	b.hi	40f52c <ascii_strlower_n@plt+0xb11c>  // b.pmore
  40f508:	ldr	x10, [x0, #40]
  40f50c:	add	x12, x0, #0xa8
  40f510:	str	x9, [x0, #24]
  40f514:	cmp	x10, #0x0
  40f518:	csel	x12, x12, x10, eq  // eq = none
  40f51c:	ldrb	w10, [x12, x1]
  40f520:	add	x13, x9, x10
  40f524:	cmp	x13, x11
  40f528:	b.ls	40f53c <ascii_strlower_n@plt+0xb12c>  // b.plast
  40f52c:	bl	40f100 <ascii_strlower_n@plt+0xacf0>
  40f530:	mov	w0, #0xffffffa6            	// #-90
  40f534:	ldp	x29, x30, [sp], #16
  40f538:	ret
  40f53c:	cbz	x8, 40f548 <ascii_strlower_n@plt+0xb138>
  40f540:	add	x9, x12, x9
  40f544:	str	x9, [x8]
  40f548:	str	x13, [x0, #24]
  40f54c:	cbz	x2, 40f554 <ascii_strlower_n@plt+0xb144>
  40f550:	str	x10, [x2]
  40f554:	mov	w0, wzr
  40f558:	cbz	x3, 40f534 <ascii_strlower_n@plt+0xb124>
  40f55c:	str	x1, [x3]
  40f560:	b	40f534 <ascii_strlower_n@plt+0xb124>
  40f564:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f568:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f56c:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f570:	add	x1, x1, #0x3b6
  40f574:	add	x2, x2, #0x2fc
  40f578:	add	x4, x4, #0xbb7
  40f57c:	mov	w3, #0x54e                 	// #1358
  40f580:	bl	403aa0 <log_assert_failed_realm@plt>
  40f584:	sub	sp, sp, #0x90
  40f588:	stp	x29, x30, [sp, #48]
  40f58c:	add	x29, sp, #0x30
  40f590:	stp	x28, x27, [sp, #64]
  40f594:	stp	x26, x25, [sp, #80]
  40f598:	stp	x24, x23, [sp, #96]
  40f59c:	stp	x22, x21, [sp, #112]
  40f5a0:	stp	x20, x19, [sp, #128]
  40f5a4:	stp	xzr, xzr, [x29, #-16]
  40f5a8:	cbz	x0, 40f7b0 <ascii_strlower_n@plt+0xb3a0>
  40f5ac:	cbz	x1, 40f7d0 <ascii_strlower_n@plt+0xb3c0>
  40f5b0:	ldrb	w9, [x0, #160]
  40f5b4:	ldr	x19, [x0, #24]
  40f5b8:	ldr	x8, [x0, #8]
  40f5bc:	mov	x20, x0
  40f5c0:	tst	w9, #0x4
  40f5c4:	add	x22, x19, #0x1
  40f5c8:	cset	w9, eq  // eq = none
  40f5cc:	cmp	x22, x8
  40f5d0:	b.ls	40f5dc <ascii_strlower_n@plt+0xb1cc>  // b.plast
  40f5d4:	mov	w23, #0xffffffa6            	// #-90
  40f5d8:	b	40f768 <ascii_strlower_n@plt+0xb358>
  40f5dc:	and	w9, w9, w2
  40f5e0:	mov	x24, xzr
  40f5e4:	mov	x25, xzr
  40f5e8:	add	x26, x20, #0xa8
  40f5ec:	mov	w27, #0x1                   	// #1
  40f5f0:	eor	w28, w9, #0x1
  40f5f4:	mov	x9, x19
  40f5f8:	stp	x1, x3, [sp, #8]
  40f5fc:	str	x19, [sp, #24]
  40f600:	ldr	x10, [x20, #40]
  40f604:	str	x22, [x20, #24]
  40f608:	cmp	x10, #0x0
  40f60c:	csel	x21, x26, x10, eq  // eq = none
  40f610:	ldrb	w23, [x21, x9]
  40f614:	cbz	x23, 40f704 <ascii_strlower_n@plt+0xb2f4>
  40f618:	cmp	w23, #0x3f
  40f61c:	b.hi	40f698 <ascii_strlower_n@plt+0xb288>  // b.pmore
  40f620:	add	x9, x22, x23
  40f624:	cmp	x9, x8
  40f628:	b.hi	40f6fc <ascii_strlower_n@plt+0xb2ec>  // b.pmore
  40f62c:	mvn	w8, w27
  40f630:	and	x8, x8, #0x1
  40f634:	add	x8, x25, x8
  40f638:	add	x2, x8, #0xfd
  40f63c:	sub	x0, x29, #0x8
  40f640:	sub	x1, x29, #0x10
  40f644:	mov	w3, #0x1                   	// #1
  40f648:	str	x9, [x20, #24]
  40f64c:	bl	404170 <greedy_realloc@plt>
  40f650:	cbz	x0, 40f758 <ascii_strlower_n@plt+0xb348>
  40f654:	add	x0, x21, x22
  40f658:	tbnz	w27, #0, 40f670 <ascii_strlower_n@plt+0xb260>
  40f65c:	ldur	x8, [x29, #-8]
  40f660:	add	x9, x25, #0x1
  40f664:	mov	w10, #0x2e                  	// #46
  40f668:	strb	w10, [x8, x25]
  40f66c:	mov	x25, x9
  40f670:	ldur	x8, [x29, #-8]
  40f674:	mov	w3, #0xfd                  	// #253
  40f678:	mov	x1, x23
  40f67c:	add	x2, x8, x25
  40f680:	bl	404180 <dns_label_escape@plt>
  40f684:	mov	w23, w0
  40f688:	tbnz	w0, #31, 40f764 <ascii_strlower_n@plt+0xb354>
  40f68c:	mov	w27, wzr
  40f690:	add	x25, x25, w23, uxtw
  40f694:	b	40f6e8 <ascii_strlower_n@plt+0xb2d8>
  40f698:	cmp	w23, #0xc0
  40f69c:	cset	w9, cc  // cc = lo, ul, last
  40f6a0:	orr	w9, w28, w9
  40f6a4:	tbnz	w9, #0, 40f760 <ascii_strlower_n@plt+0xb350>
  40f6a8:	add	x9, x22, #0x1
  40f6ac:	cmp	x9, x8
  40f6b0:	b.hi	40f6fc <ascii_strlower_n@plt+0xb2ec>  // b.pmore
  40f6b4:	str	x9, [x20, #24]
  40f6b8:	ldrb	w8, [x21, x22]
  40f6bc:	and	x10, x23, #0x3f
  40f6c0:	mov	w23, #0xffffffb6            	// #-74
  40f6c4:	bfi	x8, x10, #8, #6
  40f6c8:	cmp	x8, #0xc
  40f6cc:	b.cc	40f764 <ascii_strlower_n@plt+0xb354>  // b.lo, b.ul, b.last
  40f6d0:	cmp	x8, x19
  40f6d4:	b.cs	40f764 <ascii_strlower_n@plt+0xb354>  // b.hs, b.nlast
  40f6d8:	cmp	x24, #0x0
  40f6dc:	csel	x24, x9, x24, eq  // eq = none
  40f6e0:	mov	x19, x8
  40f6e4:	str	x8, [x20, #24]
  40f6e8:	ldr	x9, [x20, #24]
  40f6ec:	ldr	x8, [x20, #8]
  40f6f0:	add	x22, x9, #0x1
  40f6f4:	cmp	x22, x8
  40f6f8:	b.ls	40f600 <ascii_strlower_n@plt+0xb1f0>  // b.plast
  40f6fc:	mov	w23, #0xffffffa6            	// #-90
  40f700:	b	40f764 <ascii_strlower_n@plt+0xb354>
  40f704:	add	x2, x25, #0x1
  40f708:	sub	x0, x29, #0x8
  40f70c:	sub	x1, x29, #0x10
  40f710:	mov	w3, #0x1                   	// #1
  40f714:	bl	404170 <greedy_realloc@plt>
  40f718:	cbz	x0, 40f758 <ascii_strlower_n@plt+0xb348>
  40f71c:	ldur	x8, [x29, #-8]
  40f720:	ldr	x19, [sp, #24]
  40f724:	strb	wzr, [x8, x25]
  40f728:	cbz	x24, 40f730 <ascii_strlower_n@plt+0xb320>
  40f72c:	str	x24, [x20, #24]
  40f730:	ldur	x8, [x29, #-8]
  40f734:	ldr	x9, [sp, #8]
  40f738:	stur	xzr, [x29, #-8]
  40f73c:	str	x8, [x9]
  40f740:	ldr	x8, [sp, #16]
  40f744:	cbz	x8, 40f7a4 <ascii_strlower_n@plt+0xb394>
  40f748:	mov	x20, xzr
  40f74c:	mov	w23, wzr
  40f750:	str	x19, [x8]
  40f754:	b	40f768 <ascii_strlower_n@plt+0xb358>
  40f758:	mov	w23, #0xfffffff4            	// #-12
  40f75c:	b	40f764 <ascii_strlower_n@plt+0xb354>
  40f760:	mov	w23, #0xffffffb6            	// #-74
  40f764:	ldr	x19, [sp, #24]
  40f768:	ldur	x0, [x29, #-8]
  40f76c:	bl	403a30 <free@plt>
  40f770:	cbz	x20, 40f780 <ascii_strlower_n@plt+0xb370>
  40f774:	mov	x0, x20
  40f778:	mov	x1, x19
  40f77c:	bl	40f100 <ascii_strlower_n@plt+0xacf0>
  40f780:	mov	w0, w23
  40f784:	ldp	x20, x19, [sp, #128]
  40f788:	ldp	x22, x21, [sp, #112]
  40f78c:	ldp	x24, x23, [sp, #96]
  40f790:	ldp	x26, x25, [sp, #80]
  40f794:	ldp	x28, x27, [sp, #64]
  40f798:	ldp	x29, x30, [sp, #48]
  40f79c:	add	sp, sp, #0x90
  40f7a0:	ret
  40f7a4:	mov	x20, xzr
  40f7a8:	mov	w23, wzr
  40f7ac:	b	40f768 <ascii_strlower_n@plt+0xb358>
  40f7b0:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f7b4:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f7b8:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f7bc:	add	x1, x1, #0x3b6
  40f7c0:	add	x2, x2, #0x2fc
  40f7c4:	add	x4, x4, #0xc06
  40f7c8:	mov	w3, #0x56f                 	// #1391
  40f7cc:	bl	403aa0 <log_assert_failed_realm@plt>
  40f7d0:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f7d4:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f7d8:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f7dc:	add	x1, x1, #0xc46
  40f7e0:	add	x2, x2, #0x2fc
  40f7e4:	add	x4, x4, #0xc06
  40f7e8:	mov	w3, #0x570                 	// #1392
  40f7ec:	mov	w0, wzr
  40f7f0:	bl	403aa0 <log_assert_failed_realm@plt>
  40f7f4:	sub	sp, sp, #0x50
  40f7f8:	stp	x29, x30, [sp, #16]
  40f7fc:	stp	x24, x23, [sp, #32]
  40f800:	stp	x22, x21, [sp, #48]
  40f804:	stp	x20, x19, [sp, #64]
  40f808:	add	x29, sp, #0x10
  40f80c:	str	xzr, [sp, #8]
  40f810:	cbz	x0, 40f940 <ascii_strlower_n@plt+0xb530>
  40f814:	mov	x23, x1
  40f818:	cbz	x1, 40f960 <ascii_strlower_n@plt+0xb550>
  40f81c:	ldr	x19, [x0, #24]
  40f820:	mov	x21, x3
  40f824:	mov	x22, x2
  40f828:	add	x1, sp, #0x8
  40f82c:	mov	w2, #0x1                   	// #1
  40f830:	mov	x3, xzr
  40f834:	mov	x20, x0
  40f838:	bl	40f584 <ascii_strlower_n@plt+0xb174>
  40f83c:	tbnz	w0, #31, 40f87c <ascii_strlower_n@plt+0xb46c>
  40f840:	ldr	x9, [x20, #24]
  40f844:	ldr	x11, [x20, #8]
  40f848:	add	x8, x9, #0x2
  40f84c:	cmp	x8, x11
  40f850:	b.hi	40f874 <ascii_strlower_n@plt+0xb464>  // b.pmore
  40f854:	ldr	x10, [x20, #40]
  40f858:	add	x13, x20, #0xa8
  40f85c:	add	x12, x9, #0x4
  40f860:	str	x8, [x20, #24]
  40f864:	cmp	x10, #0x0
  40f868:	csel	x10, x13, x10, eq  // eq = none
  40f86c:	cmp	x12, x11
  40f870:	b.ls	40f8b4 <ascii_strlower_n@plt+0xb4a4>  // b.plast
  40f874:	mov	w24, #0xffffffa6            	// #-90
  40f878:	b	40f880 <ascii_strlower_n@plt+0xb470>
  40f87c:	mov	w24, w0
  40f880:	ldr	x0, [sp, #8]
  40f884:	bl	403a30 <free@plt>
  40f888:	cbz	x20, 40f898 <ascii_strlower_n@plt+0xb488>
  40f88c:	mov	x0, x20
  40f890:	mov	x1, x19
  40f894:	bl	40f100 <ascii_strlower_n@plt+0xacf0>
  40f898:	mov	w0, w24
  40f89c:	ldp	x20, x19, [sp, #64]
  40f8a0:	ldp	x22, x21, [sp, #48]
  40f8a4:	ldp	x24, x23, [sp, #32]
  40f8a8:	ldp	x29, x30, [sp, #16]
  40f8ac:	add	sp, sp, #0x50
  40f8b0:	ret
  40f8b4:	ldrh	w9, [x10, x9]
  40f8b8:	str	x12, [x20, #24]
  40f8bc:	ldr	w11, [x20, #4]
  40f8c0:	ldrh	w8, [x10, x8]
  40f8c4:	mov	w12, #0x2900                	// #10496
  40f8c8:	ldr	x2, [sp, #8]
  40f8cc:	cmp	w11, #0x1
  40f8d0:	rev	w8, w8
  40f8d4:	cset	w10, ne  // ne = any
  40f8d8:	cmp	w9, w12
  40f8dc:	asr	w11, w8, #16
  40f8e0:	cset	w12, eq  // eq = none
  40f8e4:	cmp	w11, #0x0
  40f8e8:	orr	w10, w12, w10
  40f8ec:	cset	w11, ge  // ge = tcont
  40f8f0:	orr	w24, w11, w10
  40f8f4:	rev16	w1, w9
  40f8f8:	lsr	w9, w8, #16
  40f8fc:	ubfx	w8, w8, #16, #15
  40f900:	cmp	w24, #0x0
  40f904:	csel	w0, w9, w8, ne  // ne = any
  40f908:	bl	41115c <ascii_strlower_n@plt+0xcd4c>
  40f90c:	cbz	x0, 40f938 <ascii_strlower_n@plt+0xb528>
  40f910:	str	xzr, [sp, #8]
  40f914:	str	x0, [x23]
  40f918:	cbz	x22, 40f924 <ascii_strlower_n@plt+0xb514>
  40f91c:	eor	w8, w24, #0x1
  40f920:	strb	w8, [x22]
  40f924:	mov	x20, xzr
  40f928:	mov	w24, wzr
  40f92c:	cbz	x21, 40f880 <ascii_strlower_n@plt+0xb470>
  40f930:	str	x19, [x21]
  40f934:	b	40f880 <ascii_strlower_n@plt+0xb470>
  40f938:	mov	w24, #0xfffffff4            	// #-12
  40f93c:	b	40f880 <ascii_strlower_n@plt+0xb470>
  40f940:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f944:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f948:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f94c:	add	x1, x1, #0x3b6
  40f950:	add	x2, x2, #0x2fc
  40f954:	add	x4, x4, #0xc4b
  40f958:	mov	w3, #0x626                 	// #1574
  40f95c:	bl	403aa0 <log_assert_failed_realm@plt>
  40f960:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  40f964:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f968:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  40f96c:	add	x1, x1, #0xc0e
  40f970:	add	x2, x2, #0x2fc
  40f974:	add	x4, x4, #0xc4b
  40f978:	mov	w3, #0x627                 	// #1575
  40f97c:	mov	w0, wzr
  40f980:	bl	403aa0 <log_assert_failed_realm@plt>
  40f984:	sub	sp, sp, #0x90
  40f988:	stp	x29, x30, [sp, #48]
  40f98c:	add	x29, sp, #0x30
  40f990:	stp	x28, x27, [sp, #64]
  40f994:	stp	x26, x25, [sp, #80]
  40f998:	stp	x24, x23, [sp, #96]
  40f99c:	stp	x22, x21, [sp, #112]
  40f9a0:	stp	x20, x19, [sp, #128]
  40f9a4:	stur	xzr, [x29, #-8]
  40f9a8:	cbz	x0, 4101f0 <ascii_strlower_n@plt+0xbde0>
  40f9ac:	mov	x24, x1
  40f9b0:	cbz	x1, 410210 <ascii_strlower_n@plt+0xbe00>
  40f9b4:	ldr	x19, [x0, #24]
  40f9b8:	mov	x22, x3
  40f9bc:	mov	x23, x2
  40f9c0:	sub	x1, x29, #0x8
  40f9c4:	sub	x2, x29, #0x10
  40f9c8:	mov	x3, xzr
  40f9cc:	mov	x20, x0
  40f9d0:	bl	40f7f4 <ascii_strlower_n@plt+0xb3e4>
  40f9d4:	tbnz	w0, #31, 40faa4 <ascii_strlower_n@plt+0xb694>
  40f9d8:	ldur	x8, [x29, #-8]
  40f9dc:	ldrh	w0, [x8, #4]
  40f9e0:	bl	4170fc <ascii_strlower_n@plt+0x12cec>
  40f9e4:	tbz	w0, #0, 40fa98 <ascii_strlower_n@plt+0xb688>
  40f9e8:	ldur	x8, [x29, #-8]
  40f9ec:	ldrh	w0, [x8, #6]
  40f9f0:	bl	4170d4 <ascii_strlower_n@plt+0x12cc4>
  40f9f4:	tbz	w0, #0, 40fa98 <ascii_strlower_n@plt+0xb688>
  40f9f8:	ldur	x0, [x29, #-8]
  40f9fc:	bl	411db8 <ascii_strlower_n@plt+0xd9a8>
  40fa00:	mov	x21, x0
  40fa04:	cbz	x0, 40fc34 <ascii_strlower_n@plt+0xb824>
  40fa08:	add	x26, x21, #0x18
  40fa0c:	mov	x0, x20
  40fa10:	mov	x1, x26
  40fa14:	mov	x2, xzr
  40fa18:	bl	40f350 <ascii_strlower_n@plt+0xaf40>
  40fa1c:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40fa20:	ldr	w8, [x26]
  40fa24:	tbz	w8, #31, 40fa2c <ascii_strlower_n@plt+0xb61c>
  40fa28:	str	wzr, [x26]
  40fa2c:	sub	x1, x29, #0xc
  40fa30:	mov	x0, x20
  40fa34:	mov	x2, xzr
  40fa38:	bl	40f2c4 <ascii_strlower_n@plt+0xaeb4>
  40fa3c:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40fa40:	ldr	x8, [x20, #24]
  40fa44:	ldurh	w26, [x29, #-12]
  40fa48:	ldr	x9, [x20, #8]
  40fa4c:	add	x28, x8, x26
  40fa50:	cmp	x28, x9
  40fa54:	b.hi	40fa9c <ascii_strlower_n@plt+0xb68c>  // b.pmore
  40fa58:	ldr	x9, [x21, #8]
  40fa5c:	ldrh	w9, [x9, #6]
  40fa60:	cmp	w9, #0x1b
  40fa64:	b.le	40faf4 <ascii_strlower_n@plt+0xb6e4>
  40fa68:	sub	w10, w9, #0x1c
  40fa6c:	cmp	w10, #0x18
  40fa70:	b.hi	40fb30 <ascii_strlower_n@plt+0xb720>  // b.pmore
  40fa74:	adrp	x8, 41e000 <ascii_strlower_n@plt+0x19bf0>
  40fa78:	add	x8, x8, #0x702
  40fa7c:	adr	x9, 40fa8c <ascii_strlower_n@plt+0xb67c>
  40fa80:	ldrh	w11, [x8, x10, lsl #1]
  40fa84:	add	x9, x9, x11, lsl #2
  40fa88:	br	x9
  40fa8c:	add	x1, x21, #0x50
  40fa90:	mov	w2, #0x10                  	// #16
  40fa94:	b	40fc44 <ascii_strlower_n@plt+0xb834>
  40fa98:	mov	x21, xzr
  40fa9c:	mov	w25, #0xffffffb6            	// #-74
  40faa0:	b	40faac <ascii_strlower_n@plt+0xb69c>
  40faa4:	mov	w25, w0
  40faa8:	mov	x21, xzr
  40faac:	mov	x0, x20
  40fab0:	mov	x1, x19
  40fab4:	bl	40f100 <ascii_strlower_n@plt+0xacf0>
  40fab8:	ldur	x0, [x29, #-8]
  40fabc:	cbz	x0, 40fac4 <ascii_strlower_n@plt+0xb6b4>
  40fac0:	bl	4112fc <ascii_strlower_n@plt+0xceec>
  40fac4:	cbz	x21, 40fad0 <ascii_strlower_n@plt+0xb6c0>
  40fac8:	mov	x0, x21
  40facc:	bl	411e90 <ascii_strlower_n@plt+0xda80>
  40fad0:	mov	w0, w25
  40fad4:	ldp	x20, x19, [sp, #128]
  40fad8:	ldp	x22, x21, [sp, #112]
  40fadc:	ldp	x24, x23, [sp, #96]
  40fae0:	ldp	x26, x25, [sp, #80]
  40fae4:	ldp	x28, x27, [sp, #64]
  40fae8:	ldp	x29, x30, [sp, #48]
  40faec:	add	sp, sp, #0x90
  40faf0:	ret
  40faf4:	sub	w9, w9, #0x1
  40faf8:	cmp	w9, #0xf
  40fafc:	b.hi	40fd50 <ascii_strlower_n@plt+0xb940>  // b.pmore
  40fb00:	adrp	x10, 41e000 <ascii_strlower_n@plt+0x19bf0>
  40fb04:	add	x10, x10, #0x6f2
  40fb08:	adr	x11, 40fb18 <ascii_strlower_n@plt+0xb708>
  40fb0c:	ldrb	w12, [x10, x9]
  40fb10:	add	x11, x11, x12, lsl #2
  40fb14:	br	x11
  40fb18:	add	x1, x21, #0x50
  40fb1c:	mov	w2, #0x1                   	// #1
  40fb20:	mov	x0, x20
  40fb24:	mov	x3, xzr
  40fb28:	bl	40f584 <ascii_strlower_n@plt+0xb174>
  40fb2c:	b	4100ac <ascii_strlower_n@plt+0xbc9c>
  40fb30:	cmp	w9, #0x63
  40fb34:	b.eq	40fb84 <ascii_strlower_n@plt+0xb774>  // b.none
  40fb38:	cmp	w9, #0x101
  40fb3c:	b.ne	40fd50 <ascii_strlower_n@plt+0xb940>  // b.any
  40fb40:	add	x1, x21, #0x50
  40fb44:	mov	x0, x20
  40fb48:	mov	x2, xzr
  40fb4c:	bl	40f240 <ascii_strlower_n@plt+0xae30>
  40fb50:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40fb54:	add	x1, x21, #0x58
  40fb58:	mov	x0, x20
  40fb5c:	mov	x2, xzr
  40fb60:	bl	40f3d8 <ascii_strlower_n@plt+0xafc8>
  40fb64:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40fb68:	ldr	x8, [x20, #24]
  40fb6c:	subs	x1, x28, x8
  40fb70:	b.cc	40fa9c <ascii_strlower_n@plt+0xb68c>  // b.lo, b.ul, b.last
  40fb74:	add	x2, x21, #0x60
  40fb78:	add	x3, x21, #0x68
  40fb7c:	mov	x0, x20
  40fb80:	b	40fd60 <ascii_strlower_n@plt+0xb950>
  40fb84:	cbz	w26, 4100e4 <ascii_strlower_n@plt+0xbcd4>
  40fb88:	cmp	x8, x28
  40fb8c:	b.cs	4100b4 <ascii_strlower_n@plt+0xbca4>  // b.hs, b.nlast
  40fb90:	mov	x27, xzr
  40fb94:	add	x8, x21, #0x50
  40fb98:	str	x8, [sp, #8]
  40fb9c:	add	x1, sp, #0x18
  40fba0:	add	x2, sp, #0x10
  40fba4:	mov	x0, x20
  40fba8:	mov	x3, xzr
  40fbac:	bl	40f4e4 <ascii_strlower_n@plt+0xb0d4>
  40fbb0:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40fbb4:	ldr	x26, [sp, #16]
  40fbb8:	mov	w0, #0x1                   	// #1
  40fbbc:	add	x1, x26, #0x19
  40fbc0:	bl	404070 <calloc@plt>
  40fbc4:	cbz	x0, 40fc34 <ascii_strlower_n@plt+0xb824>
  40fbc8:	ldr	x1, [sp, #24]
  40fbcc:	mov	x25, x0
  40fbd0:	add	x0, x0, #0x18
  40fbd4:	mov	x2, x26
  40fbd8:	bl	403c70 <memcpy@plt>
  40fbdc:	str	x26, [x25]
  40fbe0:	cbz	x27, 40fc00 <ascii_strlower_n@plt+0xb7f0>
  40fbe4:	mov	x8, x27
  40fbe8:	ldr	x9, [x8, #8]!
  40fbec:	str	x9, [x25, #8]
  40fbf0:	cbz	x9, 40fbf8 <ascii_strlower_n@plt+0xb7e8>
  40fbf4:	str	x25, [x9, #16]
  40fbf8:	str	x27, [x25, #16]
  40fbfc:	b	40fc1c <ascii_strlower_n@plt+0xb80c>
  40fc00:	ldr	x8, [sp, #8]
  40fc04:	ldr	x8, [x8]
  40fc08:	str	x8, [x25, #8]
  40fc0c:	cbz	x8, 40fc14 <ascii_strlower_n@plt+0xb804>
  40fc10:	str	x25, [x8, #16]
  40fc14:	ldr	x8, [sp, #8]
  40fc18:	str	xzr, [x25, #16]
  40fc1c:	str	x25, [x8]
  40fc20:	ldr	x8, [x20, #24]
  40fc24:	mov	x27, x25
  40fc28:	cmp	x8, x28
  40fc2c:	b.cc	40fb9c <ascii_strlower_n@plt+0xb78c>  // b.lo, b.ul, b.last
  40fc30:	b	4100b4 <ascii_strlower_n@plt+0xbca4>
  40fc34:	mov	w25, #0xfffffff4            	// #-12
  40fc38:	b	40faac <ascii_strlower_n@plt+0xb69c>
  40fc3c:	add	x1, x21, #0x50
  40fc40:	mov	w2, #0x4                   	// #4
  40fc44:	mov	x0, x20
  40fc48:	mov	x3, xzr
  40fc4c:	bl	40f190 <ascii_strlower_n@plt+0xad80>
  40fc50:	b	4100ac <ascii_strlower_n@plt+0xbc9c>
  40fc54:	add	x26, x21, #0x50
  40fc58:	mov	w2, #0x1                   	// #1
  40fc5c:	mov	x0, x20
  40fc60:	mov	x1, x26
  40fc64:	mov	x3, xzr
  40fc68:	bl	40f584 <ascii_strlower_n@plt+0xb174>
  40fc6c:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40fc70:	add	x1, x21, #0x58
  40fc74:	mov	w2, #0x1                   	// #1
  40fc78:	mov	x0, x20
  40fc7c:	mov	x3, xzr
  40fc80:	bl	40f584 <ascii_strlower_n@plt+0xb174>
  40fc84:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40fc88:	add	x1, x21, #0x60
  40fc8c:	mov	x0, x20
  40fc90:	mov	x2, xzr
  40fc94:	bl	40f350 <ascii_strlower_n@plt+0xaf40>
  40fc98:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40fc9c:	add	x1, x26, #0x14
  40fca0:	mov	x0, x20
  40fca4:	mov	x2, xzr
  40fca8:	bl	40f350 <ascii_strlower_n@plt+0xaf40>
  40fcac:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40fcb0:	add	x1, x21, #0x68
  40fcb4:	mov	x0, x20
  40fcb8:	mov	x2, xzr
  40fcbc:	bl	40f350 <ascii_strlower_n@plt+0xaf40>
  40fcc0:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40fcc4:	add	x1, x26, #0x1c
  40fcc8:	mov	x0, x20
  40fccc:	mov	x2, xzr
  40fcd0:	bl	40f350 <ascii_strlower_n@plt+0xaf40>
  40fcd4:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40fcd8:	add	x1, x21, #0x70
  40fcdc:	mov	x0, x20
  40fce0:	mov	x2, xzr
  40fce4:	bl	40f350 <ascii_strlower_n@plt+0xaf40>
  40fce8:	b	4100ac <ascii_strlower_n@plt+0xbc9c>
  40fcec:	add	x1, x21, #0x50
  40fcf0:	mov	x0, x20
  40fcf4:	mov	x2, xzr
  40fcf8:	bl	40f3d8 <ascii_strlower_n@plt+0xafc8>
  40fcfc:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40fd00:	add	x1, x21, #0x58
  40fd04:	mov	x0, x20
  40fd08:	mov	x2, xzr
  40fd0c:	bl	40f3d8 <ascii_strlower_n@plt+0xafc8>
  40fd10:	b	4100ac <ascii_strlower_n@plt+0xbc9c>
  40fd14:	add	x1, x21, #0x50
  40fd18:	b	40fd94 <ascii_strlower_n@plt+0xb984>
  40fd1c:	add	x1, sp, #0x10
  40fd20:	add	x2, sp, #0x18
  40fd24:	mov	x0, x20
  40fd28:	bl	40f240 <ascii_strlower_n@plt+0xae30>
  40fd2c:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40fd30:	ldrb	w8, [sp, #16]
  40fd34:	cbz	w8, 4100f4 <ascii_strlower_n@plt+0xbce4>
  40fd38:	ldr	x1, [sp, #24]
  40fd3c:	mov	x0, x20
  40fd40:	bl	40f100 <ascii_strlower_n@plt+0xacf0>
  40fd44:	ldrb	w8, [x21, #48]
  40fd48:	orr	w8, w8, #0x1
  40fd4c:	strb	w8, [x21, #48]
  40fd50:	add	x2, x21, #0x50
  40fd54:	add	x3, x21, #0x58
  40fd58:	mov	x0, x20
  40fd5c:	mov	x1, x26
  40fd60:	bl	410234 <ascii_strlower_n@plt+0xbe24>
  40fd64:	b	4100ac <ascii_strlower_n@plt+0xbc9c>
  40fd68:	add	x1, x21, #0x50
  40fd6c:	mov	x0, x20
  40fd70:	mov	x2, xzr
  40fd74:	bl	40f2c4 <ascii_strlower_n@plt+0xaeb4>
  40fd78:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40fd7c:	add	x1, x21, #0x52
  40fd80:	mov	x0, x20
  40fd84:	mov	x2, xzr
  40fd88:	bl	40f2c4 <ascii_strlower_n@plt+0xaeb4>
  40fd8c:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40fd90:	add	x1, x21, #0x54
  40fd94:	mov	x0, x20
  40fd98:	mov	x2, xzr
  40fd9c:	bl	40f2c4 <ascii_strlower_n@plt+0xaeb4>
  40fda0:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40fda4:	add	x1, x21, #0x58
  40fda8:	b	40fb1c <ascii_strlower_n@plt+0xb70c>
  40fdac:	add	x1, x21, #0x50
  40fdb0:	mov	x0, x20
  40fdb4:	mov	x2, xzr
  40fdb8:	bl	40f2c4 <ascii_strlower_n@plt+0xaeb4>
  40fdbc:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40fdc0:	add	x1, x21, #0x52
  40fdc4:	mov	x0, x20
  40fdc8:	mov	x2, xzr
  40fdcc:	bl	40f240 <ascii_strlower_n@plt+0xae30>
  40fdd0:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40fdd4:	add	x1, x21, #0x53
  40fdd8:	mov	x0, x20
  40fddc:	mov	x2, xzr
  40fde0:	bl	40f240 <ascii_strlower_n@plt+0xae30>
  40fde4:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40fde8:	cmp	w26, #0x4
  40fdec:	b.cc	40fa9c <ascii_strlower_n@plt+0xb68c>  // b.lo, b.ul, b.last
  40fdf0:	sub	x1, x26, #0x4
  40fdf4:	add	x2, x21, #0x58
  40fdf8:	add	x3, x21, #0x60
  40fdfc:	mov	x0, x20
  40fe00:	bl	410234 <ascii_strlower_n@plt+0xbe24>
  40fe04:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40fe08:	ldr	x8, [x21, #96]
  40fe0c:	cbnz	x8, 4100b4 <ascii_strlower_n@plt+0xbca4>
  40fe10:	b	40fa9c <ascii_strlower_n@plt+0xb68c>
  40fe14:	add	x27, x21, #0x50
  40fe18:	mov	x0, x20
  40fe1c:	mov	x1, x27
  40fe20:	mov	x2, xzr
  40fe24:	bl	40f240 <ascii_strlower_n@plt+0xae30>
  40fe28:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40fe2c:	add	x1, x27, #0x1
  40fe30:	mov	x0, x20
  40fe34:	mov	x2, xzr
  40fe38:	bl	40f240 <ascii_strlower_n@plt+0xae30>
  40fe3c:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40fe40:	cmp	w26, #0x2
  40fe44:	b.cc	40fa9c <ascii_strlower_n@plt+0xb68c>  // b.lo, b.ul, b.last
  40fe48:	sub	x1, x26, #0x2
  40fe4c:	b	410094 <ascii_strlower_n@plt+0xbc84>
  40fe50:	add	x1, x21, #0x50
  40fe54:	mov	x0, x20
  40fe58:	mov	x2, xzr
  40fe5c:	bl	40f2c4 <ascii_strlower_n@plt+0xaeb4>
  40fe60:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40fe64:	add	x1, x21, #0x52
  40fe68:	mov	x0, x20
  40fe6c:	mov	x2, xzr
  40fe70:	bl	40f240 <ascii_strlower_n@plt+0xae30>
  40fe74:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40fe78:	add	x1, x21, #0x53
  40fe7c:	mov	x0, x20
  40fe80:	mov	x2, xzr
  40fe84:	bl	40f240 <ascii_strlower_n@plt+0xae30>
  40fe88:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40fe8c:	add	x1, x21, #0x54
  40fe90:	mov	x0, x20
  40fe94:	mov	x2, xzr
  40fe98:	bl	40f350 <ascii_strlower_n@plt+0xaf40>
  40fe9c:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40fea0:	add	x1, x21, #0x58
  40fea4:	mov	x0, x20
  40fea8:	mov	x2, xzr
  40feac:	bl	40f350 <ascii_strlower_n@plt+0xaf40>
  40feb0:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40feb4:	add	x1, x21, #0x5c
  40feb8:	mov	x0, x20
  40febc:	mov	x2, xzr
  40fec0:	bl	40f350 <ascii_strlower_n@plt+0xaf40>
  40fec4:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40fec8:	add	x1, x21, #0x60
  40fecc:	mov	x0, x20
  40fed0:	mov	x2, xzr
  40fed4:	bl	40f2c4 <ascii_strlower_n@plt+0xaeb4>
  40fed8:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40fedc:	add	x1, x21, #0x68
  40fee0:	mov	x0, x20
  40fee4:	mov	w2, wzr
  40fee8:	mov	x3, xzr
  40feec:	bl	40f584 <ascii_strlower_n@plt+0xb174>
  40fef0:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40fef4:	ldr	x8, [x20, #24]
  40fef8:	subs	x1, x28, x8
  40fefc:	b.cc	40fa9c <ascii_strlower_n@plt+0xb68c>  // b.lo, b.ul, b.last
  40ff00:	add	x2, x21, #0x70
  40ff04:	add	x3, x21, #0x78
  40ff08:	mov	x0, x20
  40ff0c:	bl	410234 <ascii_strlower_n@plt+0xbe24>
  40ff10:	ldr	x8, [x21, #120]
  40ff14:	cbnz	x8, 4100ac <ascii_strlower_n@plt+0xbc9c>
  40ff18:	b	40fa9c <ascii_strlower_n@plt+0xb68c>
  40ff1c:	ldr	w8, [x20, #4]
  40ff20:	add	x1, x21, #0x50
  40ff24:	mov	x0, x20
  40ff28:	mov	x3, xzr
  40ff2c:	cmp	w8, #0x1
  40ff30:	cset	w2, eq  // eq = none
  40ff34:	bl	40f584 <ascii_strlower_n@plt+0xb174>
  40ff38:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40ff3c:	ldr	x8, [x20, #24]
  40ff40:	add	x1, x21, #0x58
  40ff44:	sub	x2, x28, x8
  40ff48:	mov	x0, x20
  40ff4c:	bl	41030c <ascii_strlower_n@plt+0xbefc>
  40ff50:	b	4100ac <ascii_strlower_n@plt+0xbc9c>
  40ff54:	add	x1, x21, #0x50
  40ff58:	mov	x0, x20
  40ff5c:	mov	x2, xzr
  40ff60:	bl	40f2c4 <ascii_strlower_n@plt+0xaeb4>
  40ff64:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40ff68:	add	x1, x21, #0x52
  40ff6c:	mov	x0, x20
  40ff70:	mov	x2, xzr
  40ff74:	bl	40f240 <ascii_strlower_n@plt+0xae30>
  40ff78:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40ff7c:	add	x1, x21, #0x53
  40ff80:	mov	x0, x20
  40ff84:	mov	x2, xzr
  40ff88:	bl	40f240 <ascii_strlower_n@plt+0xae30>
  40ff8c:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40ff90:	cmp	w26, #0x4
  40ff94:	b.cc	40fa9c <ascii_strlower_n@plt+0xb68c>  // b.lo, b.ul, b.last
  40ff98:	sub	x1, x26, #0x4
  40ff9c:	b	410094 <ascii_strlower_n@plt+0xbc84>
  40ffa0:	add	x26, x21, #0x50
  40ffa4:	mov	x0, x20
  40ffa8:	mov	x1, x26
  40ffac:	mov	x2, xzr
  40ffb0:	bl	40f240 <ascii_strlower_n@plt+0xae30>
  40ffb4:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40ffb8:	add	x1, x26, #0x1
  40ffbc:	mov	x0, x20
  40ffc0:	mov	x2, xzr
  40ffc4:	bl	40f240 <ascii_strlower_n@plt+0xae30>
  40ffc8:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40ffcc:	add	x1, x21, #0x52
  40ffd0:	mov	x0, x20
  40ffd4:	mov	x2, xzr
  40ffd8:	bl	40f2c4 <ascii_strlower_n@plt+0xaeb4>
  40ffdc:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40ffe0:	add	x1, sp, #0x18
  40ffe4:	mov	x0, x20
  40ffe8:	mov	x2, xzr
  40ffec:	bl	40f240 <ascii_strlower_n@plt+0xae30>
  40fff0:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  40fff4:	ldrb	w1, [sp, #24]
  40fff8:	add	x2, x21, #0x58
  40fffc:	add	x3, x21, #0x60
  410000:	mov	x0, x20
  410004:	bl	410234 <ascii_strlower_n@plt+0xbe24>
  410008:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  41000c:	add	x1, sp, #0x18
  410010:	mov	x0, x20
  410014:	mov	x2, xzr
  410018:	bl	40f240 <ascii_strlower_n@plt+0xae30>
  41001c:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  410020:	ldrb	w1, [sp, #24]
  410024:	cbz	x1, 40fa9c <ascii_strlower_n@plt+0xb68c>
  410028:	add	x2, x21, #0x68
  41002c:	add	x3, x21, #0x70
  410030:	mov	x0, x20
  410034:	bl	410234 <ascii_strlower_n@plt+0xbe24>
  410038:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  41003c:	ldr	x8, [x20, #24]
  410040:	add	x1, x21, #0x78
  410044:	b	40ff44 <ascii_strlower_n@plt+0xbb34>
  410048:	add	x27, x21, #0x50
  41004c:	mov	x0, x20
  410050:	mov	x1, x27
  410054:	mov	x2, xzr
  410058:	bl	40f240 <ascii_strlower_n@plt+0xae30>
  41005c:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  410060:	add	x1, x27, #0x1
  410064:	mov	x0, x20
  410068:	mov	x2, xzr
  41006c:	bl	40f240 <ascii_strlower_n@plt+0xae30>
  410070:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  410074:	add	x1, x21, #0x52
  410078:	mov	x0, x20
  41007c:	mov	x2, xzr
  410080:	bl	40f240 <ascii_strlower_n@plt+0xae30>
  410084:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  410088:	cmp	w26, #0x3
  41008c:	b.cc	40fa9c <ascii_strlower_n@plt+0xb68c>  // b.lo, b.ul, b.last
  410090:	sub	x1, x26, #0x3
  410094:	add	x2, x21, #0x58
  410098:	add	x3, x21, #0x60
  41009c:	mov	x0, x20
  4100a0:	bl	410234 <ascii_strlower_n@plt+0xbe24>
  4100a4:	ldr	x8, [x21, #96]
  4100a8:	cbz	x8, 40fa9c <ascii_strlower_n@plt+0xb68c>
  4100ac:	mov	w25, w0
  4100b0:	tbnz	w0, #31, 40faac <ascii_strlower_n@plt+0xb69c>
  4100b4:	ldr	x8, [x20, #24]
  4100b8:	cmp	x8, x28
  4100bc:	b.ne	40fa9c <ascii_strlower_n@plt+0xb68c>  // b.any
  4100c0:	str	x21, [x24]
  4100c4:	cbz	x23, 4100d0 <ascii_strlower_n@plt+0xbcc0>
  4100c8:	ldurb	w8, [x29, #-16]
  4100cc:	strb	w8, [x23]
  4100d0:	cbz	x22, 4100d8 <ascii_strlower_n@plt+0xbcc8>
  4100d4:	str	x19, [x22]
  4100d8:	mov	w25, wzr
  4100dc:	mov	x21, xzr
  4100e0:	b	40fab8 <ascii_strlower_n@plt+0xb6a8>
  4100e4:	add	x0, x21, #0x50
  4100e8:	bl	4142f8 <ascii_strlower_n@plt+0xfee8>
  4100ec:	tbz	w0, #31, 4100b4 <ascii_strlower_n@plt+0xbca4>
  4100f0:	b	4101e8 <ascii_strlower_n@plt+0xbdd8>
  4100f4:	add	x26, x21, #0x51
  4100f8:	mov	x0, x20
  4100fc:	mov	x1, x26
  410100:	mov	x2, xzr
  410104:	strb	wzr, [x21, #80]
  410108:	bl	40f240 <ascii_strlower_n@plt+0xae30>
  41010c:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  410110:	ldrb	w9, [x26]
  410114:	cmp	w9, #0x9f
  410118:	b.hi	40fa9c <ascii_strlower_n@plt+0xb68c>  // b.pmore
  41011c:	and	w8, w9, #0xf
  410120:	cmp	w8, #0x9
  410124:	b.hi	40fa9c <ascii_strlower_n@plt+0xb68c>  // b.pmore
  410128:	cmp	w9, #0xf
  41012c:	b.hi	410134 <ascii_strlower_n@plt+0xbd24>  // b.pmore
  410130:	cbnz	w8, 40fa9c <ascii_strlower_n@plt+0xb68c>
  410134:	add	x26, x21, #0x52
  410138:	mov	x0, x20
  41013c:	mov	x1, x26
  410140:	mov	x2, xzr
  410144:	bl	40f240 <ascii_strlower_n@plt+0xae30>
  410148:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  41014c:	ldrb	w9, [x26]
  410150:	cmp	w9, #0x9f
  410154:	b.hi	40fa9c <ascii_strlower_n@plt+0xb68c>  // b.pmore
  410158:	and	w8, w9, #0xf
  41015c:	cmp	w8, #0x9
  410160:	b.hi	40fa9c <ascii_strlower_n@plt+0xb68c>  // b.pmore
  410164:	cmp	w9, #0xf
  410168:	b.hi	410170 <ascii_strlower_n@plt+0xbd60>  // b.pmore
  41016c:	cbnz	w8, 40fa9c <ascii_strlower_n@plt+0xb68c>
  410170:	add	x26, x21, #0x53
  410174:	mov	x0, x20
  410178:	mov	x1, x26
  41017c:	mov	x2, xzr
  410180:	bl	40f240 <ascii_strlower_n@plt+0xae30>
  410184:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  410188:	ldrb	w9, [x26]
  41018c:	cmp	w9, #0x9f
  410190:	b.hi	40fa9c <ascii_strlower_n@plt+0xb68c>  // b.pmore
  410194:	and	w8, w9, #0xf
  410198:	cmp	w8, #0x9
  41019c:	b.hi	40fa9c <ascii_strlower_n@plt+0xb68c>  // b.pmore
  4101a0:	cmp	w9, #0xf
  4101a4:	b.hi	4101ac <ascii_strlower_n@plt+0xbd9c>  // b.pmore
  4101a8:	cbnz	w8, 40fa9c <ascii_strlower_n@plt+0xb68c>
  4101ac:	add	x1, x21, #0x54
  4101b0:	mov	x0, x20
  4101b4:	mov	x2, xzr
  4101b8:	bl	40f350 <ascii_strlower_n@plt+0xaf40>
  4101bc:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  4101c0:	add	x1, x21, #0x58
  4101c4:	mov	x0, x20
  4101c8:	mov	x2, xzr
  4101cc:	bl	40f350 <ascii_strlower_n@plt+0xaf40>
  4101d0:	tbnz	w0, #31, 4101e8 <ascii_strlower_n@plt+0xbdd8>
  4101d4:	add	x1, x21, #0x5c
  4101d8:	mov	x0, x20
  4101dc:	mov	x2, xzr
  4101e0:	bl	40f350 <ascii_strlower_n@plt+0xaf40>
  4101e4:	tbz	w0, #31, 4100b4 <ascii_strlower_n@plt+0xbca4>
  4101e8:	mov	w25, w0
  4101ec:	b	40faac <ascii_strlower_n@plt+0xb69c>
  4101f0:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4101f4:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4101f8:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4101fc:	add	x1, x1, #0x3b6
  410200:	add	x2, x2, #0x2fc
  410204:	add	x4, x4, #0xc96
  410208:	mov	w3, #0x65e                 	// #1630
  41020c:	bl	403aa0 <log_assert_failed_realm@plt>
  410210:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  410214:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  410218:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  41021c:	add	x1, x1, #0xc0e
  410220:	add	x2, x2, #0x2fc
  410224:	add	x4, x4, #0xc96
  410228:	mov	w3, #0x65f                 	// #1631
  41022c:	mov	w0, wzr
  410230:	bl	403aa0 <log_assert_failed_realm@plt>
  410234:	stp	x29, x30, [sp, #-48]!
  410238:	str	x21, [sp, #16]
  41023c:	stp	x20, x19, [sp, #32]
  410240:	mov	x29, sp
  410244:	cbz	x0, 4102c8 <ascii_strlower_n@plt+0xbeb8>
  410248:	mov	x21, x2
  41024c:	cbz	x2, 4102e8 <ascii_strlower_n@plt+0xbed8>
  410250:	ldr	x8, [x0, #24]
  410254:	ldr	x9, [x0, #8]
  410258:	mov	x20, x1
  41025c:	add	x10, x8, x1
  410260:	cmp	x10, x9
  410264:	b.ls	410270 <ascii_strlower_n@plt+0xbe60>  // b.plast
  410268:	mov	w0, #0xffffffa6            	// #-90
  41026c:	b	4102b8 <ascii_strlower_n@plt+0xbea8>
  410270:	ldr	x9, [x0, #40]
  410274:	mov	x19, x3
  410278:	str	x10, [x0, #24]
  41027c:	cbz	x20, 4102a4 <ascii_strlower_n@plt+0xbe94>
  410280:	add	x10, x0, #0xa8
  410284:	cmp	x9, #0x0
  410288:	csel	x9, x10, x9, eq  // eq = none
  41028c:	add	x0, x9, x8
  410290:	mov	x1, x20
  410294:	bl	404190 <memdup@plt>
  410298:	cbnz	x0, 4102a8 <ascii_strlower_n@plt+0xbe98>
  41029c:	mov	w0, #0xfffffff4            	// #-12
  4102a0:	b	4102b8 <ascii_strlower_n@plt+0xbea8>
  4102a4:	mov	x0, xzr
  4102a8:	str	x0, [x21]
  4102ac:	mov	w0, wzr
  4102b0:	cbz	x19, 4102b8 <ascii_strlower_n@plt+0xbea8>
  4102b4:	str	x20, [x19]
  4102b8:	ldp	x20, x19, [sp, #32]
  4102bc:	ldr	x21, [sp, #16]
  4102c0:	ldp	x29, x30, [sp], #48
  4102c4:	ret
  4102c8:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4102cc:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4102d0:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4102d4:	add	x1, x1, #0x3b6
  4102d8:	add	x2, x2, #0x2fc
  4102dc:	add	x4, x4, #0xe6a
  4102e0:	mov	w3, #0x4db                 	// #1243
  4102e4:	bl	403aa0 <log_assert_failed_realm@plt>
  4102e8:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  4102ec:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4102f0:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4102f4:	add	x1, x1, #0xc0e
  4102f8:	add	x2, x2, #0x2fc
  4102fc:	add	x4, x4, #0xe6a
  410300:	mov	w3, #0x4dc                 	// #1244
  410304:	mov	w0, wzr
  410308:	bl	403aa0 <log_assert_failed_realm@plt>
  41030c:	sub	sp, sp, #0x80
  410310:	stp	x29, x30, [sp, #32]
  410314:	stp	x28, x27, [sp, #48]
  410318:	stp	x26, x25, [sp, #64]
  41031c:	stp	x24, x23, [sp, #80]
  410320:	stp	x22, x21, [sp, #96]
  410324:	stp	x20, x19, [sp, #112]
  410328:	ldr	x21, [x0, #24]
  41032c:	add	x29, sp, #0x20
  410330:	mov	x22, x1
  410334:	mov	x20, x0
  410338:	add	x19, x21, x2
  41033c:	add	x24, x0, #0xa8
  410340:	stur	x21, [x29, #-8]
  410344:	cmp	x21, x19
  410348:	b.cs	41046c <ascii_strlower_n@plt+0xc05c>  // b.hs, b.nlast
  41034c:	cbz	x22, 4104d4 <ascii_strlower_n@plt+0xc0c4>
  410350:	mov	x0, x22
  410354:	bl	4041a0 <bitmap_ensure_allocated@plt>
  410358:	tbnz	w0, #31, 41047c <ascii_strlower_n@plt+0xc06c>
  41035c:	ldr	x11, [x20, #24]
  410360:	ldr	x8, [x20, #8]
  410364:	add	x12, x11, #0x1
  410368:	cmp	x12, x8
  41036c:	b.hi	410464 <ascii_strlower_n@plt+0xc054>  // b.pmore
  410370:	ldr	x10, [x20, #40]
  410374:	add	x9, x11, #0x2
  410378:	str	x12, [x20, #24]
  41037c:	cmp	x10, #0x0
  410380:	csel	x10, x24, x10, eq  // eq = none
  410384:	cmp	x9, x8
  410388:	b.hi	410464 <ascii_strlower_n@plt+0xc054>  // b.pmore
  41038c:	ldrb	w11, [x10, x11]
  410390:	str	x9, [x20, #24]
  410394:	ldrb	w26, [x10, x12]
  410398:	sub	w12, w26, #0x1
  41039c:	and	w12, w12, #0xff
  4103a0:	cmp	w12, #0x1f
  4103a4:	b.hi	410484 <ascii_strlower_n@plt+0xc074>  // b.pmore
  4103a8:	add	x12, x9, x26
  4103ac:	cmp	x12, x8
  4103b0:	b.hi	410464 <ascii_strlower_n@plt+0xc054>  // b.pmore
  4103b4:	stp	x24, x19, [sp, #8]
  4103b8:	mov	x27, xzr
  4103bc:	mov	w28, wzr
  4103c0:	add	x25, x10, x9
  4103c4:	lsl	w24, w11, #8
  4103c8:	str	x12, [x20, #24]
  4103cc:	ldrb	w8, [x25, x27]
  4103d0:	cbz	w8, 410424 <ascii_strlower_n@plt+0xc014>
  4103d4:	mov	w19, #0x80                  	// #128
  4103d8:	and	w8, w19, w8
  4103dc:	tst	w8, #0xff
  4103e0:	b.eq	410408 <ascii_strlower_n@plt+0xbff8>  // b.none
  4103e4:	and	w8, w28, #0xff
  4103e8:	orr	w23, w24, w8
  4103ec:	mov	w0, w23
  4103f0:	bl	41702c <ascii_strlower_n@plt+0x12c1c>
  4103f4:	tbnz	w0, #0, 410408 <ascii_strlower_n@plt+0xbff8>
  4103f8:	ldr	x0, [x22]
  4103fc:	mov	w1, w23
  410400:	bl	4041b0 <bitmap_set@plt>
  410404:	tbnz	w0, #31, 41044c <ascii_strlower_n@plt+0xc03c>
  410408:	ubfx	w19, w19, #1, #7
  41040c:	add	w28, w28, #0x1
  410410:	cbz	w19, 41041c <ascii_strlower_n@plt+0xc00c>
  410414:	ldrb	w8, [x25, x27]
  410418:	b	4103d8 <ascii_strlower_n@plt+0xbfc8>
  41041c:	mov	w8, #0x1                   	// #1
  410420:	b	410428 <ascii_strlower_n@plt+0xc018>
  410424:	add	w28, w28, #0x8
  410428:	add	x27, x27, #0x1
  41042c:	cmp	x27, x26
  410430:	b.ne	4103cc <ascii_strlower_n@plt+0xbfbc>  // b.any
  410434:	cbz	w8, 4104cc <ascii_strlower_n@plt+0xc0bc>
  410438:	ldr	x21, [x20, #24]
  41043c:	ldp	x24, x19, [sp, #8]
  410440:	cmp	x21, x19
  410444:	b.ls	410344 <ascii_strlower_n@plt+0xbf34>  // b.plast
  410448:	b	4104c4 <ascii_strlower_n@plt+0xc0b4>
  41044c:	mov	w23, w0
  410450:	mov	x0, x20
  410454:	mov	x1, x21
  410458:	bl	40f100 <ascii_strlower_n@plt+0xacf0>
  41045c:	cbnz	x20, 410494 <ascii_strlower_n@plt+0xc084>
  410460:	b	4104a0 <ascii_strlower_n@plt+0xc090>
  410464:	mov	w23, #0xffffffa6            	// #-90
  410468:	b	410488 <ascii_strlower_n@plt+0xc078>
  41046c:	cmp	x21, x19
  410470:	b.ne	4104c4 <ascii_strlower_n@plt+0xc0b4>  // b.any
  410474:	mov	w23, wzr
  410478:	b	4104a0 <ascii_strlower_n@plt+0xc090>
  41047c:	mov	w23, w0
  410480:	b	410488 <ascii_strlower_n@plt+0xc078>
  410484:	mov	w23, #0xffffffb6            	// #-74
  410488:	mov	x0, x20
  41048c:	mov	x1, x21
  410490:	bl	40f100 <ascii_strlower_n@plt+0xacf0>
  410494:	ldur	x1, [x29, #-8]
  410498:	mov	x0, x20
  41049c:	bl	40f100 <ascii_strlower_n@plt+0xacf0>
  4104a0:	mov	w0, w23
  4104a4:	ldp	x20, x19, [sp, #112]
  4104a8:	ldp	x22, x21, [sp, #96]
  4104ac:	ldp	x24, x23, [sp, #80]
  4104b0:	ldp	x26, x25, [sp, #64]
  4104b4:	ldp	x28, x27, [sp, #48]
  4104b8:	ldp	x29, x30, [sp, #32]
  4104bc:	add	sp, sp, #0x80
  4104c0:	ret
  4104c4:	mov	w23, #0xffffffb6            	// #-74
  4104c8:	b	410494 <ascii_strlower_n@plt+0xc084>
  4104cc:	mov	w23, #0xffffffb6            	// #-74
  4104d0:	b	410450 <ascii_strlower_n@plt+0xc040>
  4104d4:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4104d8:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4104dc:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4104e0:	add	x1, x1, #0xe59
  4104e4:	add	x2, x2, #0x2fc
  4104e8:	add	x4, x4, #0xeb7
  4104ec:	mov	w3, #0x5c9                 	// #1481
  4104f0:	mov	w0, wzr
  4104f4:	bl	403aa0 <log_assert_failed_realm@plt>
  4104f8:	sub	sp, sp, #0x80
  4104fc:	stp	x29, x30, [sp, #32]
  410500:	stp	x28, x27, [sp, #48]
  410504:	stp	x26, x25, [sp, #64]
  410508:	stp	x24, x23, [sp, #80]
  41050c:	stp	x22, x21, [sp, #96]
  410510:	stp	x20, x19, [sp, #112]
  410514:	ldrb	w8, [x0, #160]
  410518:	add	x29, sp, #0x20
  41051c:	tbnz	w8, #1, 410628 <ascii_strlower_n@plt+0xc218>
  410520:	ldr	x26, [x0, #24]
  410524:	mov	w1, #0xc                   	// #12
  410528:	mov	x19, x0
  41052c:	bl	40f100 <ascii_strlower_n@plt+0xacf0>
  410530:	ldr	x8, [x19, #40]
  410534:	add	x28, x19, #0xa8
  410538:	cmp	x8, #0x0
  41053c:	csel	x8, x28, x8, eq  // eq = none
  410540:	ldrh	w8, [x8, #4]
  410544:	cbz	w8, 410630 <ascii_strlower_n@plt+0xc220>
  410548:	rev16	w24, w8
  41054c:	and	x0, x24, #0xffff
  410550:	bl	415dcc <ascii_strlower_n@plt+0x119bc>
  410554:	mov	x21, x0
  410558:	cbz	x0, 410638 <ascii_strlower_n@plt+0xc228>
  41055c:	adrp	x0, 43f000 <ascii_strlower_n@plt+0x3abf0>
  410560:	ldr	x0, [x0, #2680]
  410564:	bl	4041c0 <internal_set_new@plt>
  410568:	cbz	x0, 410644 <ascii_strlower_n@plt+0xc234>
  41056c:	lsl	w1, w24, #1
  410570:	mov	x23, x0
  410574:	bl	4041d0 <internal_hashmap_reserve@plt>
  410578:	tbnz	w0, #31, 410664 <ascii_strlower_n@plt+0xc254>
  41057c:	mov	w25, wzr
  410580:	sub	x1, x29, #0x8
  410584:	sub	x2, x29, #0xc
  410588:	mov	x0, x19
  41058c:	mov	x3, xzr
  410590:	stur	xzr, [x29, #-8]
  410594:	bl	40f7f4 <ascii_strlower_n@plt+0xb3e4>
  410598:	tbnz	w0, #31, 4105f0 <ascii_strlower_n@plt+0xc1e0>
  41059c:	ldurb	w8, [x29, #-12]
  4105a0:	cbnz	w8, 4105e4 <ascii_strlower_n@plt+0xc1d4>
  4105a4:	ldur	x8, [x29, #-8]
  4105a8:	ldrh	w0, [x8, #6]
  4105ac:	bl	41707c <ascii_strlower_n@plt+0x12c6c>
  4105b0:	tbz	w0, #0, 4105e4 <ascii_strlower_n@plt+0xc1d4>
  4105b4:	ldur	x1, [x29, #-8]
  4105b8:	mov	x0, x23
  4105bc:	bl	4041e0 <set_put@plt>
  4105c0:	tbnz	w0, #31, 4105f0 <ascii_strlower_n@plt+0xc1e0>
  4105c4:	cbz	w0, 410620 <ascii_strlower_n@plt+0xc210>
  4105c8:	ldur	x1, [x29, #-8]
  4105cc:	mov	x0, x21
  4105d0:	bl	415f08 <ascii_strlower_n@plt+0x11af8>
  4105d4:	cmp	w0, #0x0
  4105d8:	lsr	w20, w0, #31
  4105dc:	csel	w22, w0, w22, lt  // lt = tstop
  4105e0:	b	4105f8 <ascii_strlower_n@plt+0xc1e8>
  4105e4:	mov	w22, #0xffffffb6            	// #-74
  4105e8:	mov	w20, #0x1                   	// #1
  4105ec:	b	4105f8 <ascii_strlower_n@plt+0xc1e8>
  4105f0:	mov	w20, #0x1                   	// #1
  4105f4:	mov	w22, w0
  4105f8:	ldur	x0, [x29, #-8]
  4105fc:	cbz	x0, 410604 <ascii_strlower_n@plt+0xc1f4>
  410600:	bl	4112fc <ascii_strlower_n@plt+0xceec>
  410604:	orr	w8, w20, #0x4
  410608:	cmp	w8, #0x4
  41060c:	b.ne	410684 <ascii_strlower_n@plt+0xc274>  // b.any
  410610:	add	w25, w25, #0x1
  410614:	cmp	w25, w24
  410618:	b.cc	410580 <ascii_strlower_n@plt+0xc170>  // b.lo, b.ul, b.last
  41061c:	b	4106ac <ascii_strlower_n@plt+0xc29c>
  410620:	mov	w20, #0x4                   	// #4
  410624:	b	4105f8 <ascii_strlower_n@plt+0xc1e8>
  410628:	mov	w22, wzr
  41062c:	b	410b00 <ascii_strlower_n@plt+0xc6f0>
  410630:	mov	x21, xzr
  410634:	b	4106bc <ascii_strlower_n@plt+0xc2ac>
  410638:	mov	x25, xzr
  41063c:	mov	w22, #0xfffffff4            	// #-12
  410640:	b	410adc <ascii_strlower_n@plt+0xc6cc>
  410644:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  410648:	adrp	x3, 41b000 <ascii_strlower_n@plt+0x16bf0>
  41064c:	add	x1, x1, #0x2fc
  410650:	add	x3, x3, #0xef9
  410654:	mov	w2, #0x85e                 	// #2142
  410658:	bl	403a20 <log_oom_internal@plt>
  41065c:	mov	w22, w0
  410660:	b	410694 <ascii_strlower_n@plt+0xc284>
  410664:	mov	w22, w0
  410668:	mov	x0, x23
  41066c:	mov	x1, xzr
  410670:	mov	x2, xzr
  410674:	bl	404090 <internal_hashmap_free@plt>
  410678:	mov	x0, x21
  41067c:	bl	415e74 <ascii_strlower_n@plt+0x11a64>
  410680:	b	410acc <ascii_strlower_n@plt+0xc6bc>
  410684:	mov	x0, x23
  410688:	mov	x1, xzr
  41068c:	mov	x2, xzr
  410690:	bl	404090 <internal_hashmap_free@plt>
  410694:	mov	x0, x21
  410698:	bl	415e74 <ascii_strlower_n@plt+0x11a64>
  41069c:	mov	x21, xzr
  4106a0:	mov	x25, xzr
  4106a4:	tbz	w22, #31, 4106bc <ascii_strlower_n@plt+0xc2ac>
  4106a8:	b	410ad8 <ascii_strlower_n@plt+0xc6c8>
  4106ac:	mov	x0, x23
  4106b0:	mov	x1, xzr
  4106b4:	mov	x2, xzr
  4106b8:	bl	404090 <internal_hashmap_free@plt>
  4106bc:	ldr	x8, [x19, #40]
  4106c0:	cmp	x8, #0x0
  4106c4:	csel	x8, x28, x8, eq  // eq = none
  4106c8:	ldrh	w10, [x8, #8]
  4106cc:	ldrh	w9, [x8, #6]
  4106d0:	ldrh	w8, [x8, #10]
  4106d4:	rev	w10, w10
  4106d8:	rev	w9, w9
  4106dc:	lsr	w10, w10, #16
  4106e0:	add	w9, w10, w9, lsr #16
  4106e4:	rev	w8, w8
  4106e8:	adds	w25, w9, w8, lsr #16
  4106ec:	b.eq	410a58 <ascii_strlower_n@plt+0xc648>  // b.none
  4106f0:	mov	x0, x25
  4106f4:	bl	414488 <ascii_strlower_n@plt+0x10078>
  4106f8:	mov	x23, x0
  4106fc:	cbz	x0, 410a60 <ascii_strlower_n@plt+0xc650>
  410700:	str	x26, [sp, #8]
  410704:	mov	w26, wzr
  410708:	mov	w27, wzr
  41070c:	mov	x24, xzr
  410710:	sub	x1, x29, #0x8
  410714:	sub	x2, x29, #0xc
  410718:	mov	x0, x19
  41071c:	mov	x3, xzr
  410720:	stur	xzr, [x29, #-8]
  410724:	sturb	wzr, [x29, #-12]
  410728:	bl	40f984 <ascii_strlower_n@plt+0xb574>
  41072c:	tbnz	w0, #31, 4107a4 <ascii_strlower_n@plt+0xc394>
  410730:	cbz	x24, 410744 <ascii_strlower_n@plt+0xc334>
  410734:	ldur	x8, [x29, #-8]
  410738:	add	x1, x24, #0x8
  41073c:	add	x0, x8, #0x8
  410740:	bl	411cc4 <ascii_strlower_n@plt+0xd8b4>
  410744:	ldur	x1, [x29, #-8]
  410748:	ldr	x0, [x1, #8]
  41074c:	ldrh	w8, [x0, #6]
  410750:	cmp	w8, #0x29
  410754:	b.ne	4107b0 <ascii_strlower_n@plt+0xc3a0>  // b.any
  410758:	ldr	x8, [x19, #88]
  41075c:	cmp	x8, #0x0
  410760:	cset	w8, eq  // eq = none
  410764:	bic	w8, w8, w27
  410768:	tbnz	w8, #0, 41081c <ascii_strlower_n@plt+0xc40c>
  41076c:	mov	w0, wzr
  410770:	bl	4039b0 <log_get_max_level_realm@plt>
  410774:	cmp	w0, #0x7
  410778:	b.lt	4108c4 <ascii_strlower_n@plt+0xc4b4>  // b.tstop
  41077c:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  410780:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  410784:	adrp	x5, 41b000 <ascii_strlower_n@plt+0x16bf0>
  410788:	mov	w0, #0x7                   	// #7
  41078c:	mov	w3, #0x8a7                 	// #2215
  410790:	mov	w1, wzr
  410794:	add	x2, x2, #0x2fc
  410798:	add	x4, x4, #0xf15
  41079c:	add	x5, x5, #0xf2f
  4107a0:	b	4108c0 <ascii_strlower_n@plt+0xc4b0>
  4107a4:	mov	w20, #0x1                   	// #1
  4107a8:	mov	w22, w0
  4107ac:	b	41095c <ascii_strlower_n@plt+0xc54c>
  4107b0:	ldr	x8, [x19, #40]
  4107b4:	ldurb	w10, [x29, #-12]
  4107b8:	ldr	w9, [x19, #4]
  4107bc:	ldr	w2, [x19, #96]
  4107c0:	cmp	x8, #0x0
  4107c4:	csel	x8, x28, x8, eq  // eq = none
  4107c8:	ldrh	w8, [x8, #6]
  4107cc:	mov	x0, x23
  4107d0:	rev	w8, w8
  4107d4:	cmp	w26, w8, lsr #16
  4107d8:	cset	w8, cc  // cc = lo, ul, last
  4107dc:	tst	w10, #0x1
  4107e0:	ccmp	w9, #0x1, #0x0, eq  // eq = none
  4107e4:	mov	w9, #0x4                   	// #4
  4107e8:	csel	w3, w9, wzr, eq  // eq = none
  4107ec:	bfi	w3, w8, #1, #1
  4107f0:	bl	4145b4 <ascii_strlower_n@plt+0x101a4>
  4107f4:	cmp	w0, #0x0
  4107f8:	csel	w22, w0, w22, lt  // lt = tstop
  4107fc:	tbnz	w0, #31, 410958 <ascii_strlower_n@plt+0xc548>
  410800:	mov	x0, x24
  410804:	bl	411e90 <ascii_strlower_n@plt+0xda80>
  410808:	ldur	x0, [x29, #-8]
  41080c:	bl	411e48 <ascii_strlower_n@plt+0xda38>
  410810:	mov	x24, x0
  410814:	mov	w20, wzr
  410818:	b	41095c <ascii_strlower_n@plt+0xc54c>
  41081c:	bl	4110a8 <ascii_strlower_n@plt+0xcc98>
  410820:	bl	4040f0 <dns_name_is_root@plt>
  410824:	tbz	w0, #0, 41088c <ascii_strlower_n@plt+0xc47c>
  410828:	ldr	x8, [x19, #40]
  41082c:	cmp	x8, #0x0
  410830:	csel	x9, x28, x8, eq  // eq = none
  410834:	ldrh	w10, [x9, #6]
  410838:	ldrh	w9, [x9, #8]
  41083c:	rev	w10, w10
  410840:	rev	w9, w9
  410844:	lsr	w9, w9, #16
  410848:	add	w9, w9, w10, lsr #16
  41084c:	cmp	w26, w9
  410850:	b.cs	4108d0 <ascii_strlower_n@plt+0xc4c0>  // b.hs, b.nlast
  410854:	mov	w0, wzr
  410858:	bl	4039b0 <log_get_max_level_realm@plt>
  41085c:	cmp	w0, #0x7
  410860:	b.lt	4108c4 <ascii_strlower_n@plt+0xc4b4>  // b.tstop
  410864:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  410868:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  41086c:	adrp	x5, 41b000 <ascii_strlower_n@plt+0x16bf0>
  410870:	mov	w0, #0x7                   	// #7
  410874:	mov	w3, #0x8b8                 	// #2232
  410878:	mov	w1, wzr
  41087c:	add	x2, x2, #0x2fc
  410880:	add	x4, x4, #0xf15
  410884:	add	x5, x5, #0xf86
  410888:	b	4108c0 <ascii_strlower_n@plt+0xc4b0>
  41088c:	mov	w0, wzr
  410890:	bl	4039b0 <log_get_max_level_realm@plt>
  410894:	cmp	w0, #0x7
  410898:	b.lt	4108c4 <ascii_strlower_n@plt+0xc4b4>  // b.tstop
  41089c:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4108a0:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4108a4:	adrp	x5, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4108a8:	mov	w0, #0x7                   	// #7
  4108ac:	mov	w3, #0x8af                 	// #2223
  4108b0:	mov	w1, wzr
  4108b4:	add	x2, x2, #0x2fc
  4108b8:	add	x4, x4, #0xf15
  4108bc:	add	x5, x5, #0xf58
  4108c0:	bl	4039c0 <log_internal_realm@plt>
  4108c4:	mov	w27, #0x1                   	// #1
  4108c8:	mov	w20, #0x4                   	// #4
  4108cc:	b	41095c <ascii_strlower_n@plt+0xc54c>
  4108d0:	ldur	x0, [x29, #-8]
  4108d4:	cbz	x0, 410b48 <ascii_strlower_n@plt+0xc738>
  4108d8:	ldr	x9, [x0, #8]
  4108dc:	ldrh	w9, [x9, #6]
  4108e0:	cmp	w9, #0x29
  4108e4:	b.ne	410b24 <ascii_strlower_n@plt+0xc714>  // b.any
  4108e8:	ldrb	w9, [x0, #26]
  4108ec:	lsl	w9, w9, #16
  4108f0:	cbz	w9, 410984 <ascii_strlower_n@plt+0xc574>
  4108f4:	mov	w10, wzr
  4108f8:	cmp	x8, #0x0
  4108fc:	csel	x8, x28, x8, eq  // eq = none
  410900:	ldrb	w8, [x8, #2]
  410904:	tbnz	w8, #7, 410914 <ascii_strlower_n@plt+0xc504>
  410908:	bl	411e48 <ascii_strlower_n@plt+0xda38>
  41090c:	str	x0, [x19, #88]
  410910:	b	410800 <ascii_strlower_n@plt+0xc3f0>
  410914:	cbz	w9, 410a1c <ascii_strlower_n@plt+0xc60c>
  410918:	mov	w0, wzr
  41091c:	bl	4039b0 <log_get_max_level_realm@plt>
  410920:	cmp	w0, #0x7
  410924:	b.lt	410950 <ascii_strlower_n@plt+0xc540>  // b.tstop
  410928:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  41092c:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  410930:	adrp	x5, 41b000 <ascii_strlower_n@plt+0x16bf0>
  410934:	mov	w0, #0x7                   	// #7
  410938:	mov	w3, #0x8c9                 	// #2249
  41093c:	mov	w1, wzr
  410940:	add	x2, x2, #0x2fc
  410944:	add	x4, x4, #0xf15
  410948:	add	x5, x5, #0xfc5
  41094c:	bl	4039c0 <log_internal_realm@plt>
  410950:	mov	w27, wzr
  410954:	mov	w22, #0xffffffb6            	// #-74
  410958:	mov	w20, #0x1                   	// #1
  41095c:	ldur	x0, [x29, #-8]
  410960:	cbz	x0, 410968 <ascii_strlower_n@plt+0xc558>
  410964:	bl	411e90 <ascii_strlower_n@plt+0xda80>
  410968:	orr	w8, w20, #0x4
  41096c:	cmp	w8, #0x4
  410970:	b.ne	410a6c <ascii_strlower_n@plt+0xc65c>  // b.any
  410974:	add	w26, w26, #0x1
  410978:	cmp	w26, w25
  41097c:	b.ne	410710 <ascii_strlower_n@plt+0xc300>  // b.any
  410980:	b	410a74 <ascii_strlower_n@plt+0xc664>
  410984:	ldr	x10, [x0, #88]
  410988:	cbz	x10, 4108f8 <ascii_strlower_n@plt+0xc4e8>
  41098c:	ldr	x11, [x0, #80]
  410990:	mov	w12, wzr
  410994:	cmp	x10, #0x4
  410998:	b.cc	4109e4 <ascii_strlower_n@plt+0xc5d4>  // b.lo, b.ul, b.last
  41099c:	ldrh	w13, [x11, #2]
  4109a0:	rev	w13, w13
  4109a4:	lsr	w13, w13, #16
  4109a8:	add	x13, x13, #0x4
  4109ac:	cmp	x10, x13
  4109b0:	b.cc	4109e4 <ascii_strlower_n@plt+0xc5d4>  // b.lo, b.ul, b.last
  4109b4:	ldrh	w14, [x11]
  4109b8:	add	x11, x11, x13
  4109bc:	rev	w14, w14
  4109c0:	lsr	w14, w14, #16
  4109c4:	sub	w14, w14, #0x5
  4109c8:	cmp	w14, #0x3
  4109cc:	cset	w14, cc  // cc = lo, ul, last
  4109d0:	subs	x10, x10, x13
  4109d4:	orr	w12, w12, w14
  4109d8:	b.ne	410994 <ascii_strlower_n@plt+0xc584>  // b.any
  4109dc:	and	w10, w12, #0x1
  4109e0:	b	4108f8 <ascii_strlower_n@plt+0xc4e8>
  4109e4:	mov	w0, wzr
  4109e8:	bl	4039b0 <log_get_max_level_realm@plt>
  4109ec:	cmp	w0, #0x7
  4109f0:	b.lt	4108c4 <ascii_strlower_n@plt+0xc4b4>  // b.tstop
  4109f4:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4109f8:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4109fc:	adrp	x5, 41b000 <ascii_strlower_n@plt+0x16bf0>
  410a00:	mov	w0, #0x7                   	// #7
  410a04:	mov	w3, #0x8be                 	// #2238
  410a08:	mov	w1, wzr
  410a0c:	add	x2, x2, #0x2fc
  410a10:	add	x4, x4, #0xf15
  410a14:	add	x5, x5, #0xfa9
  410a18:	b	4108c0 <ascii_strlower_n@plt+0xc4b0>
  410a1c:	cbz	w10, 410908 <ascii_strlower_n@plt+0xc4f8>
  410a20:	mov	w0, wzr
  410a24:	bl	4039b0 <log_get_max_level_realm@plt>
  410a28:	cmp	w0, #0x7
  410a2c:	b.lt	4108c4 <ascii_strlower_n@plt+0xc4b4>  // b.tstop
  410a30:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  410a34:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  410a38:	adrp	x5, 41b000 <ascii_strlower_n@plt+0x16bf0>
  410a3c:	mov	w0, #0x7                   	// #7
  410a40:	mov	w3, #0x8d6                 	// #2262
  410a44:	mov	w1, wzr
  410a48:	add	x2, x2, #0x2fc
  410a4c:	add	x4, x4, #0xf15
  410a50:	add	x5, x5, #0xff6
  410a54:	b	4108c0 <ascii_strlower_n@plt+0xc4b0>
  410a58:	mov	x25, xzr
  410a5c:	b	410ab8 <ascii_strlower_n@plt+0xc6a8>
  410a60:	mov	x25, xzr
  410a64:	mov	w22, #0xfffffff4            	// #-12
  410a68:	b	410aa8 <ascii_strlower_n@plt+0xc698>
  410a6c:	mov	x25, xzr
  410a70:	b	410a98 <ascii_strlower_n@plt+0xc688>
  410a74:	tbz	w27, #0, 410a8c <ascii_strlower_n@plt+0xc67c>
  410a78:	ldr	x0, [x19, #88]
  410a7c:	bl	411e90 <ascii_strlower_n@plt+0xda80>
  410a80:	mov	w22, wzr
  410a84:	str	x0, [x19, #88]
  410a88:	b	410a90 <ascii_strlower_n@plt+0xc680>
  410a8c:	mov	w22, wzr
  410a90:	mov	x25, x23
  410a94:	mov	x23, xzr
  410a98:	ldr	x26, [sp, #8]
  410a9c:	cbz	x24, 410aa8 <ascii_strlower_n@plt+0xc698>
  410aa0:	mov	x0, x24
  410aa4:	bl	411e90 <ascii_strlower_n@plt+0xda80>
  410aa8:	cbz	x23, 410ab4 <ascii_strlower_n@plt+0xc6a4>
  410aac:	mov	x0, x23
  410ab0:	bl	41450c <ascii_strlower_n@plt+0x100fc>
  410ab4:	tbnz	w22, #31, 410ad8 <ascii_strlower_n@plt+0xc6c8>
  410ab8:	ldrb	w8, [x19, #160]
  410abc:	mov	w22, wzr
  410ac0:	stp	x21, x25, [x19, #72]
  410ac4:	orr	w8, w8, #0x2
  410ac8:	strb	w8, [x19, #160]
  410acc:	mov	x25, xzr
  410ad0:	mov	x21, xzr
  410ad4:	b	410adc <ascii_strlower_n@plt+0xc6cc>
  410ad8:	cbz	x19, 410ae8 <ascii_strlower_n@plt+0xc6d8>
  410adc:	mov	x0, x19
  410ae0:	mov	x1, x26
  410ae4:	bl	40f100 <ascii_strlower_n@plt+0xacf0>
  410ae8:	cbz	x25, 410af4 <ascii_strlower_n@plt+0xc6e4>
  410aec:	mov	x0, x25
  410af0:	bl	41450c <ascii_strlower_n@plt+0x100fc>
  410af4:	cbz	x21, 410b00 <ascii_strlower_n@plt+0xc6f0>
  410af8:	mov	x0, x21
  410afc:	bl	415e74 <ascii_strlower_n@plt+0x11a64>
  410b00:	mov	w0, w22
  410b04:	ldp	x20, x19, [sp, #112]
  410b08:	ldp	x22, x21, [sp, #96]
  410b0c:	ldp	x24, x23, [sp, #80]
  410b10:	ldp	x26, x25, [sp, #64]
  410b14:	ldp	x28, x27, [sp, #48]
  410b18:	ldp	x29, x30, [sp, #32]
  410b1c:	add	sp, sp, #0x80
  410b20:	ret
  410b24:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  410b28:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  410b2c:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  410b30:	add	x1, x1, #0x4e
  410b34:	add	x2, x2, #0x2fc
  410b38:	add	x4, x4, #0x1e
  410b3c:	mov	w3, #0x82c                 	// #2092
  410b40:	mov	w0, wzr
  410b44:	bl	403aa0 <log_assert_failed_realm@plt>
  410b48:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  410b4c:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  410b50:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  410b54:	add	x1, x1, #0x974
  410b58:	add	x2, x2, #0x2fc
  410b5c:	add	x4, x4, #0x1e
  410b60:	mov	w3, #0x82b                 	// #2091
  410b64:	bl	403aa0 <log_assert_failed_realm@plt>
  410b68:	stp	x29, x30, [sp, #-32]!
  410b6c:	stp	x20, x19, [sp, #16]
  410b70:	mov	x29, sp
  410b74:	cbz	x0, 410be4 <ascii_strlower_n@plt+0xc7d4>
  410b78:	mov	x19, x1
  410b7c:	cbz	x1, 410c04 <ascii_strlower_n@plt+0xc7f4>
  410b80:	ldr	x8, [x0, #40]
  410b84:	add	x9, x0, #0xa8
  410b88:	mov	x20, x0
  410b8c:	cmp	x8, #0x0
  410b90:	csel	x8, x9, x8, eq  // eq = none
  410b94:	ldrb	w8, [x8, #2]
  410b98:	tbnz	w8, #7, 410ba4 <ascii_strlower_n@plt+0xc794>
  410b9c:	mov	w0, wzr
  410ba0:	b	410bd8 <ascii_strlower_n@plt+0xc7c8>
  410ba4:	mov	x0, x20
  410ba8:	bl	4104f8 <ascii_strlower_n@plt+0xc0e8>
  410bac:	tbnz	w0, #31, 410bd8 <ascii_strlower_n@plt+0xc7c8>
  410bb0:	ldr	x8, [x20, #72]
  410bb4:	cbz	x8, 410b9c <ascii_strlower_n@plt+0xc78c>
  410bb8:	ldr	x9, [x8, #8]
  410bbc:	cmp	x9, #0x1
  410bc0:	b.ne	410b9c <ascii_strlower_n@plt+0xc78c>  // b.any
  410bc4:	ldr	x0, [x8, #24]
  410bc8:	mov	x1, x19
  410bcc:	ldp	x20, x19, [sp, #16]
  410bd0:	ldp	x29, x30, [sp], #32
  410bd4:	b	4114c0 <ascii_strlower_n@plt+0xd0b0>
  410bd8:	ldp	x20, x19, [sp, #16]
  410bdc:	ldp	x29, x30, [sp], #32
  410be0:	ret
  410be4:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  410be8:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  410bec:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  410bf0:	add	x1, x1, #0x3b6
  410bf4:	add	x2, x2, #0x2fc
  410bf8:	add	x4, x4, #0xce3
  410bfc:	mov	w3, #0x919                 	// #2329
  410c00:	bl	403aa0 <log_assert_failed_realm@plt>
  410c04:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  410c08:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  410c0c:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  410c10:	add	x1, x1, #0xd24
  410c14:	add	x2, x2, #0x2fc
  410c18:	add	x4, x4, #0xce3
  410c1c:	mov	w3, #0x91a                 	// #2330
  410c20:	mov	w0, wzr
  410c24:	bl	403aa0 <log_assert_failed_realm@plt>
  410c28:	stp	x29, x30, [sp, #-32]!
  410c2c:	stp	x20, x19, [sp, #16]
  410c30:	mov	x29, sp
  410c34:	cbz	x0, 410c74 <ascii_strlower_n@plt+0xc864>
  410c38:	mov	x19, x1
  410c3c:	mov	x20, x0
  410c40:	add	x0, x0, #0x8
  410c44:	mov	w1, #0x8                   	// #8
  410c48:	mov	x2, x19
  410c4c:	bl	4041f0 <siphash24_compress@plt>
  410c50:	ldr	x8, [x20, #40]
  410c54:	ldr	x1, [x20, #8]
  410c58:	add	x9, x20, #0xa8
  410c5c:	mov	x2, x19
  410c60:	ldp	x20, x19, [sp, #16]
  410c64:	cmp	x8, #0x0
  410c68:	csel	x0, x9, x8, eq  // eq = none
  410c6c:	ldp	x29, x30, [sp], #32
  410c70:	b	4041f0 <siphash24_compress@plt>
  410c74:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  410c78:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  410c7c:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  410c80:	add	x1, x1, #0xf02
  410c84:	add	x2, x2, #0x2fc
  410c88:	add	x4, x4, #0x6c
  410c8c:	mov	w3, #0x932                 	// #2354
  410c90:	bl	403aa0 <log_assert_failed_realm@plt>
  410c94:	ldr	x2, [x0, #8]
  410c98:	ldr	x8, [x1, #8]
  410c9c:	cmp	x2, x8
  410ca0:	cset	w8, hi  // hi = pmore
  410ca4:	csinv	w8, w8, wzr, cs  // cs = hs, nlast
  410ca8:	cbz	w8, 410cb4 <ascii_strlower_n@plt+0xc8a4>
  410cac:	mov	w0, w8
  410cb0:	ret
  410cb4:	ldr	x8, [x0, #40]
  410cb8:	ldr	x10, [x1, #40]
  410cbc:	add	x9, x0, #0xa8
  410cc0:	add	x11, x1, #0xa8
  410cc4:	cmp	x8, #0x0
  410cc8:	csel	x0, x9, x8, eq  // eq = none
  410ccc:	cmp	x10, #0x0
  410cd0:	csel	x1, x11, x10, eq  // eq = none
  410cd4:	b	404200 <memcmp@plt>
  410cd8:	cmp	w0, #0x17
  410cdc:	b.ls	410ce8 <ascii_strlower_n@plt+0xc8d8>  // b.plast
  410ce0:	mov	x0, xzr
  410ce4:	ret
  410ce8:	adrp	x8, 43e000 <ascii_strlower_n@plt+0x39bf0>
  410cec:	add	x8, x8, #0x2e0
  410cf0:	ldr	x0, [x8, w0, uxtw #3]
  410cf4:	ret
  410cf8:	stp	x29, x30, [sp, #-16]!
  410cfc:	mov	x2, x0
  410d00:	adrp	x0, 43e000 <ascii_strlower_n@plt+0x39bf0>
  410d04:	add	x0, x0, #0x2e0
  410d08:	mov	w1, #0x18                  	// #24
  410d0c:	mov	x29, sp
  410d10:	bl	404210 <string_table_lookup@plt>
  410d14:	ldp	x29, x30, [sp], #16
  410d18:	ret
  410d1c:	cmp	w0, #0x2
  410d20:	b.ls	410d2c <ascii_strlower_n@plt+0xc91c>  // b.plast
  410d24:	mov	x0, xzr
  410d28:	ret
  410d2c:	adrp	x8, 43e000 <ascii_strlower_n@plt+0x39bf0>
  410d30:	add	x8, x8, #0x3a0
  410d34:	ldr	x0, [x8, w0, uxtw #3]
  410d38:	ret
  410d3c:	stp	x29, x30, [sp, #-16]!
  410d40:	mov	x2, x0
  410d44:	adrp	x0, 43e000 <ascii_strlower_n@plt+0x39bf0>
  410d48:	add	x0, x0, #0x3a0
  410d4c:	mov	w1, #0x3                   	// #3
  410d50:	mov	x29, sp
  410d54:	bl	404210 <string_table_lookup@plt>
  410d58:	ldp	x29, x30, [sp], #16
  410d5c:	ret
  410d60:	sub	sp, sp, #0x50
  410d64:	stp	x29, x30, [sp, #16]
  410d68:	stp	x24, x23, [sp, #32]
  410d6c:	stp	x22, x21, [sp, #48]
  410d70:	stp	x20, x19, [sp, #64]
  410d74:	add	x29, sp, #0x10
  410d78:	cbz	x0, 410e38 <ascii_strlower_n@plt+0xca28>
  410d7c:	mov	x20, x3
  410d80:	cbz	x3, 410e58 <ascii_strlower_n@plt+0xca48>
  410d84:	mov	w22, w2
  410d88:	tst	w2, #0xff
  410d8c:	b.eq	410e78 <ascii_strlower_n@plt+0xca68>  // b.none
  410d90:	ldr	x21, [x0, #8]
  410d94:	mov	w24, w1
  410d98:	add	x2, sp, #0x8
  410d9c:	mov	w1, #0x1                   	// #1
  410da0:	mov	x3, xzr
  410da4:	mov	x19, x0
  410da8:	bl	40dac0 <ascii_strlower_n@plt+0x96b0>
  410dac:	tbnz	w0, #31, 410e0c <ascii_strlower_n@plt+0xc9fc>
  410db0:	ldr	x8, [sp, #8]
  410db4:	add	x2, sp, #0x8
  410db8:	mov	w1, #0x1                   	// #1
  410dbc:	mov	x0, x19
  410dc0:	mov	x3, xzr
  410dc4:	strb	w24, [x8]
  410dc8:	bl	40dac0 <ascii_strlower_n@plt+0x96b0>
  410dcc:	tbnz	w0, #31, 410e0c <ascii_strlower_n@plt+0xc9fc>
  410dd0:	ldr	x8, [sp, #8]
  410dd4:	add	x2, sp, #0x8
  410dd8:	mov	x0, x19
  410ddc:	mov	x3, xzr
  410de0:	strb	w22, [x8]
  410de4:	and	x22, x22, #0xff
  410de8:	mov	x1, x22
  410dec:	bl	40dac0 <ascii_strlower_n@plt+0x96b0>
  410df0:	tbnz	w0, #31, 410e0c <ascii_strlower_n@plt+0xc9fc>
  410df4:	ldr	x0, [sp, #8]
  410df8:	mov	x1, x20
  410dfc:	mov	x2, x22
  410e00:	bl	403c70 <memcpy@plt>
  410e04:	mov	w23, wzr
  410e08:	b	410e1c <ascii_strlower_n@plt+0xca0c>
  410e0c:	mov	w23, w0
  410e10:	mov	x0, x19
  410e14:	mov	x1, x21
  410e18:	bl	40d980 <ascii_strlower_n@plt+0x9570>
  410e1c:	mov	w0, w23
  410e20:	ldp	x20, x19, [sp, #64]
  410e24:	ldp	x22, x21, [sp, #48]
  410e28:	ldp	x24, x23, [sp, #32]
  410e2c:	ldp	x29, x30, [sp, #16]
  410e30:	add	sp, sp, #0x50
  410e34:	ret
  410e38:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  410e3c:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  410e40:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  410e44:	add	x1, x1, #0x3b6
  410e48:	add	x2, x2, #0x2fc
  410e4c:	add	x4, x4, #0xdfd
  410e50:	mov	w3, #0x26d                 	// #621
  410e54:	bl	403aa0 <log_assert_failed_realm@plt>
  410e58:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  410e5c:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  410e60:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  410e64:	add	x1, x1, #0xe59
  410e68:	add	x2, x2, #0x2fc
  410e6c:	add	x4, x4, #0xdfd
  410e70:	mov	w3, #0x26e                 	// #622
  410e74:	b	410e94 <ascii_strlower_n@plt+0xca84>
  410e78:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  410e7c:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  410e80:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf0>
  410e84:	add	x1, x1, #0xe5f
  410e88:	add	x2, x2, #0x2fc
  410e8c:	add	x4, x4, #0xdfd
  410e90:	mov	w3, #0x26f                 	// #623
  410e94:	mov	w0, wzr
  410e98:	bl	403aa0 <log_assert_failed_realm@plt>
  410e9c:	stp	x29, x30, [sp, #-64]!
  410ea0:	str	x23, [sp, #16]
  410ea4:	stp	x22, x21, [sp, #32]
  410ea8:	stp	x20, x19, [sp, #48]
  410eac:	mov	x29, sp
  410eb0:	cbz	x2, 410f10 <ascii_strlower_n@plt+0xcb00>
  410eb4:	mov	w21, w0
  410eb8:	mov	x0, x2
  410ebc:	mov	x19, x2
  410ec0:	mov	w20, w1
  410ec4:	bl	403d30 <strlen@plt>
  410ec8:	add	x1, x0, #0x11
  410ecc:	mov	w0, #0x1                   	// #1
  410ed0:	mov	w23, #0x1                   	// #1
  410ed4:	bl	404070 <calloc@plt>
  410ed8:	mov	x22, x0
  410edc:	cbz	x0, 410ef8 <ascii_strlower_n@plt+0xcae8>
  410ee0:	add	x0, x22, #0x10
  410ee4:	mov	x1, x19
  410ee8:	str	w23, [x22]
  410eec:	strh	w21, [x22, #4]
  410ef0:	strh	w20, [x22, #6]
  410ef4:	bl	404220 <strcpy@plt>
  410ef8:	mov	x0, x22
  410efc:	ldp	x20, x19, [sp, #48]
  410f00:	ldp	x22, x21, [sp, #32]
  410f04:	ldr	x23, [sp, #16]
  410f08:	ldp	x29, x30, [sp], #64
  410f0c:	ret
  410f10:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  410f14:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  410f18:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  410f1c:	add	x1, x1, #0xc5
  410f20:	add	x2, x2, #0x148
  410f24:	add	x4, x4, #0x166
  410f28:	mov	w3, #0x17                  	// #23
  410f2c:	mov	w0, wzr
  410f30:	bl	403aa0 <log_assert_failed_realm@plt>
  410f34:	stp	x29, x30, [sp, #-64]!
  410f38:	str	x23, [sp, #16]
  410f3c:	stp	x22, x21, [sp, #32]
  410f40:	stp	x20, x19, [sp, #48]
  410f44:	mov	x29, sp
  410f48:	cbz	x0, 411044 <ascii_strlower_n@plt+0xcc34>
  410f4c:	mov	x20, x1
  410f50:	cbz	x1, 411064 <ascii_strlower_n@plt+0xcc54>
  410f54:	ldr	x8, [x20, #8]
  410f58:	mov	x19, x0
  410f5c:	ldrh	w8, [x8, #6]
  410f60:	cmp	w8, #0x5
  410f64:	b.eq	410fc8 <ascii_strlower_n@plt+0xcbb8>  // b.none
  410f68:	cmp	w8, #0x27
  410f6c:	b.ne	411084 <ascii_strlower_n@plt+0xcc74>  // b.any
  410f70:	str	xzr, [x29, #24]
  410f74:	ldr	x8, [x19, #8]
  410f78:	add	x9, x19, #0x10
  410f7c:	cmp	x8, #0x0
  410f80:	csel	x21, x9, x8, eq  // eq = none
  410f84:	mov	x0, x21
  410f88:	bl	4040f0 <dns_name_is_root@plt>
  410f8c:	ldr	x8, [x20, #8]
  410f90:	adrp	x23, 41c000 <ascii_strlower_n@plt+0x17bf0>
  410f94:	add	x23, x23, #0x37b
  410f98:	tst	w0, #0x1
  410f9c:	csel	x21, x23, x21, ne  // ne = any
  410fa0:	cbz	x8, 410fe8 <ascii_strlower_n@plt+0xcbd8>
  410fa4:	ldr	x9, [x8, #8]
  410fa8:	add	x8, x8, #0x10
  410fac:	cmp	x9, #0x0
  410fb0:	csel	x22, x8, x9, eq  // eq = none
  410fb4:	mov	x0, x22
  410fb8:	bl	4040f0 <dns_name_is_root@plt>
  410fbc:	tst	w0, #0x1
  410fc0:	csel	x1, x23, x22, ne  // ne = any
  410fc4:	b	410fec <ascii_strlower_n@plt+0xcbdc>
  410fc8:	ldr	x2, [x20, #80]
  410fcc:	ldrh	w1, [x19, #6]
  410fd0:	ldrh	w0, [x19, #4]
  410fd4:	ldp	x20, x19, [sp, #48]
  410fd8:	ldp	x22, x21, [sp, #32]
  410fdc:	ldr	x23, [sp, #16]
  410fe0:	ldp	x29, x30, [sp], #64
  410fe4:	b	410e9c <ascii_strlower_n@plt+0xca8c>
  410fe8:	mov	x1, xzr
  410fec:	ldr	x2, [x20, #80]
  410ff0:	add	x3, x29, #0x18
  410ff4:	mov	x0, x21
  410ff8:	bl	404230 <dns_name_change_suffix@plt>
  410ffc:	tbnz	w0, #31, 411020 <ascii_strlower_n@plt+0xcc10>
  411000:	cbz	w0, 411028 <ascii_strlower_n@plt+0xcc18>
  411004:	ldr	x2, [x29, #24]
  411008:	ldrh	w1, [x19, #6]
  41100c:	ldrh	w0, [x19, #4]
  411010:	bl	41115c <ascii_strlower_n@plt+0xcd4c>
  411014:	cbnz	x0, 411030 <ascii_strlower_n@plt+0xcc20>
  411018:	ldr	x0, [x29, #24]
  41101c:	bl	403a30 <free@plt>
  411020:	mov	x0, xzr
  411024:	b	411030 <ascii_strlower_n@plt+0xcc20>
  411028:	mov	x0, x19
  41102c:	bl	4110ec <ascii_strlower_n@plt+0xccdc>
  411030:	ldp	x20, x19, [sp, #48]
  411034:	ldp	x22, x21, [sp, #32]
  411038:	ldr	x23, [sp, #16]
  41103c:	ldp	x29, x30, [sp], #64
  411040:	ret
  411044:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  411048:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  41104c:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411050:	add	x1, x1, #0xd24
  411054:	add	x2, x2, #0x148
  411058:	add	x4, x4, #0x1ad
  41105c:	mov	w3, #0x2a                  	// #42
  411060:	bl	403aa0 <log_assert_failed_realm@plt>
  411064:	adrp	x1, 418000 <ascii_strlower_n@plt+0x13bf0>
  411068:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  41106c:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411070:	add	x1, x1, #0x50
  411074:	add	x2, x2, #0x148
  411078:	add	x4, x4, #0x1ad
  41107c:	mov	w3, #0x2b                  	// #43
  411080:	b	4110a0 <ascii_strlower_n@plt+0xcc90>
  411084:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411088:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  41108c:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411090:	add	x1, x1, #0x20e
  411094:	add	x2, x2, #0x148
  411098:	add	x4, x4, #0x1ad
  41109c:	mov	w3, #0x2d                  	// #45
  4110a0:	mov	w0, wzr
  4110a4:	bl	403aa0 <log_assert_failed_realm@plt>
  4110a8:	cbz	x0, 4110e8 <ascii_strlower_n@plt+0xccd8>
  4110ac:	stp	x29, x30, [sp, #-32]!
  4110b0:	ldr	x8, [x0, #8]
  4110b4:	add	x9, x0, #0x10
  4110b8:	str	x19, [sp, #16]
  4110bc:	mov	x29, sp
  4110c0:	cmp	x8, #0x0
  4110c4:	csel	x19, x9, x8, eq  // eq = none
  4110c8:	mov	x0, x19
  4110cc:	bl	4040f0 <dns_name_is_root@plt>
  4110d0:	adrp	x8, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4110d4:	add	x8, x8, #0x37b
  4110d8:	tst	w0, #0x1
  4110dc:	csel	x0, x8, x19, ne  // ne = any
  4110e0:	ldr	x19, [sp, #16]
  4110e4:	ldp	x29, x30, [sp], #32
  4110e8:	ret
  4110ec:	stp	x29, x30, [sp, #-16]!
  4110f0:	mov	x29, sp
  4110f4:	cbz	x0, 411110 <ascii_strlower_n@plt+0xcd00>
  4110f8:	ldr	w8, [x0]
  4110fc:	cbz	w8, 411118 <ascii_strlower_n@plt+0xcd08>
  411100:	cmn	w8, #0x1
  411104:	b.eq	411138 <ascii_strlower_n@plt+0xcd28>  // b.none
  411108:	add	w8, w8, #0x1
  41110c:	str	w8, [x0]
  411110:	ldp	x29, x30, [sp], #16
  411114:	ret
  411118:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  41111c:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411120:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411124:	add	x1, x1, #0x335
  411128:	add	x2, x2, #0x148
  41112c:	add	x4, x4, #0x2fe
  411130:	mov	w3, #0x79                  	// #121
  411134:	b	411154 <ascii_strlower_n@plt+0xcd44>
  411138:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  41113c:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411140:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411144:	add	x1, x1, #0x2e4
  411148:	add	x2, x2, #0x148
  41114c:	add	x4, x4, #0x2fe
  411150:	mov	w3, #0x77                  	// #119
  411154:	mov	w0, wzr
  411158:	bl	403aa0 <log_assert_failed_realm@plt>
  41115c:	stp	x29, x30, [sp, #-48]!
  411160:	stp	x22, x21, [sp, #16]
  411164:	stp	x20, x19, [sp, #32]
  411168:	mov	x29, sp
  41116c:	cbz	x2, 4111b0 <ascii_strlower_n@plt+0xcda0>
  411170:	mov	w20, w1
  411174:	mov	w21, w0
  411178:	mov	w0, #0x1                   	// #1
  41117c:	mov	w1, #0x10                  	// #16
  411180:	mov	x19, x2
  411184:	mov	w22, #0x1                   	// #1
  411188:	bl	404070 <calloc@plt>
  41118c:	cbz	x0, 4111a0 <ascii_strlower_n@plt+0xcd90>
  411190:	str	w22, [x0]
  411194:	strh	w21, [x0, #4]
  411198:	strh	w20, [x0, #6]
  41119c:	str	x19, [x0, #8]
  4111a0:	ldp	x20, x19, [sp, #32]
  4111a4:	ldp	x22, x21, [sp, #16]
  4111a8:	ldp	x29, x30, [sp], #48
  4111ac:	ret
  4111b0:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4111b4:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4111b8:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4111bc:	add	x1, x1, #0xc5
  4111c0:	add	x2, x2, #0x148
  4111c4:	add	x4, x4, #0x29b
  4111c8:	mov	w3, #0x62                  	// #98
  4111cc:	mov	w0, wzr
  4111d0:	bl	403aa0 <log_assert_failed_realm@plt>
  4111d4:	sub	sp, sp, #0x40
  4111d8:	stp	x29, x30, [sp, #16]
  4111dc:	stp	x22, x21, [sp, #32]
  4111e0:	stp	x20, x19, [sp, #48]
  4111e4:	add	x29, sp, #0x10
  4111e8:	cbz	x0, 411298 <ascii_strlower_n@plt+0xce88>
  4111ec:	mov	x20, x1
  4111f0:	cbz	x1, 4112b8 <ascii_strlower_n@plt+0xcea8>
  4111f4:	mov	x21, x2
  4111f8:	cbz	x2, 4112d8 <ascii_strlower_n@plt+0xcec8>
  4111fc:	mov	x19, x0
  411200:	mov	x0, x21
  411204:	bl	4040f0 <dns_name_is_root@plt>
  411208:	tbz	w0, #0, 411218 <ascii_strlower_n@plt+0xce08>
  41120c:	mov	x0, x20
  411210:	bl	4110ec <ascii_strlower_n@plt+0xccdc>
  411214:	b	411268 <ascii_strlower_n@plt+0xce58>
  411218:	ldr	x8, [x20, #8]
  41121c:	add	x9, x20, #0x10
  411220:	cmp	x8, #0x0
  411224:	csel	x22, x9, x8, eq  // eq = none
  411228:	mov	x0, x22
  41122c:	bl	4040f0 <dns_name_is_root@plt>
  411230:	adrp	x8, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411234:	add	x8, x8, #0x37b
  411238:	tst	w0, #0x1
  41123c:	csel	x0, x8, x22, ne  // ne = any
  411240:	add	x3, sp, #0x8
  411244:	mov	x1, x21
  411248:	mov	w2, wzr
  41124c:	bl	403e00 <dns_name_concat@plt>
  411250:	tbnz	w0, #31, 411274 <ascii_strlower_n@plt+0xce64>
  411254:	ldr	x2, [sp, #8]
  411258:	ldrh	w1, [x20, #6]
  41125c:	ldrh	w0, [x20, #4]
  411260:	bl	41115c <ascii_strlower_n@plt+0xcd4c>
  411264:	cbz	x0, 411288 <ascii_strlower_n@plt+0xce78>
  411268:	mov	x8, x0
  41126c:	mov	w0, wzr
  411270:	str	x8, [x19]
  411274:	ldp	x20, x19, [sp, #48]
  411278:	ldp	x22, x21, [sp, #32]
  41127c:	ldp	x29, x30, [sp, #16]
  411280:	add	sp, sp, #0x40
  411284:	ret
  411288:	ldr	x0, [sp, #8]
  41128c:	bl	403a30 <free@plt>
  411290:	mov	w0, #0xfffffff4            	// #-12
  411294:	b	411274 <ascii_strlower_n@plt+0xce64>
  411298:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  41129c:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4112a0:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4112a4:	add	x1, x1, #0xc0e
  4112a8:	add	x2, x2, #0x148
  4112ac:	add	x4, x4, #0x247
  4112b0:	mov	w3, #0x48                  	// #72
  4112b4:	bl	403aa0 <log_assert_failed_realm@plt>
  4112b8:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4112bc:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4112c0:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4112c4:	add	x1, x1, #0xd24
  4112c8:	add	x2, x2, #0x148
  4112cc:	add	x4, x4, #0x247
  4112d0:	mov	w3, #0x49                  	// #73
  4112d4:	b	4112f4 <ascii_strlower_n@plt+0xcee4>
  4112d8:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4112dc:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4112e0:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4112e4:	add	x1, x1, #0xc5
  4112e8:	add	x2, x2, #0x148
  4112ec:	add	x4, x4, #0x247
  4112f0:	mov	w3, #0x4a                  	// #74
  4112f4:	mov	w0, wzr
  4112f8:	bl	403aa0 <log_assert_failed_realm@plt>
  4112fc:	stp	x29, x30, [sp, #-32]!
  411300:	str	x19, [sp, #16]
  411304:	mov	x29, sp
  411308:	cbz	x0, 411340 <ascii_strlower_n@plt+0xcf30>
  41130c:	ldr	w9, [x0]
  411310:	mov	x19, x0
  411314:	subs	w8, w9, #0x1
  411318:	b.eq	411330 <ascii_strlower_n@plt+0xcf20>  // b.none
  41131c:	cbz	w9, 411350 <ascii_strlower_n@plt+0xcf40>
  411320:	cmn	w9, #0x1
  411324:	b.eq	411370 <ascii_strlower_n@plt+0xcf60>  // b.none
  411328:	str	w8, [x19]
  41132c:	b	411340 <ascii_strlower_n@plt+0xcf30>
  411330:	ldr	x0, [x19, #8]
  411334:	bl	403a30 <free@plt>
  411338:	mov	x0, x19
  41133c:	bl	403a30 <free@plt>
  411340:	ldr	x19, [sp, #16]
  411344:	mov	x0, xzr
  411348:	ldp	x29, x30, [sp], #32
  41134c:	ret
  411350:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411354:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411358:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  41135c:	add	x1, x1, #0x335
  411360:	add	x2, x2, #0x148
  411364:	add	x4, x4, #0x342
  411368:	mov	w3, #0x84                  	// #132
  41136c:	b	41138c <ascii_strlower_n@plt+0xcf7c>
  411370:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411374:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411378:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  41137c:	add	x1, x1, #0x2e4
  411380:	add	x2, x2, #0x148
  411384:	add	x4, x4, #0x342
  411388:	mov	w3, #0x83                  	// #131
  41138c:	mov	w0, wzr
  411390:	bl	403aa0 <log_assert_failed_realm@plt>
  411394:	stp	x29, x30, [sp, #-16]!
  411398:	mov	x29, sp
  41139c:	cbz	x0, 4113d4 <ascii_strlower_n@plt+0xcfc4>
  4113a0:	ldrh	w8, [x0, #4]
  4113a4:	cmp	w8, #0x1
  4113a8:	b.ne	4113c8 <ascii_strlower_n@plt+0xcfb8>  // b.any
  4113ac:	ldrh	w8, [x0, #6]
  4113b0:	cmp	w8, #0x1c
  4113b4:	b.eq	4113c0 <ascii_strlower_n@plt+0xcfb0>  // b.none
  4113b8:	cmp	w8, #0x1
  4113bc:	b.ne	4113c8 <ascii_strlower_n@plt+0xcfb8>  // b.any
  4113c0:	mov	w0, #0x1                   	// #1
  4113c4:	b	4113cc <ascii_strlower_n@plt+0xcfbc>
  4113c8:	mov	w0, wzr
  4113cc:	ldp	x29, x30, [sp], #16
  4113d0:	ret
  4113d4:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4113d8:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4113dc:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4113e0:	add	x1, x1, #0xd24
  4113e4:	add	x2, x2, #0x148
  4113e8:	add	x4, x4, #0x37d
  4113ec:	mov	w3, #0xa1                  	// #161
  4113f0:	bl	403aa0 <log_assert_failed_realm@plt>
  4113f4:	stp	x29, x30, [sp, #-48]!
  4113f8:	stp	x22, x21, [sp, #16]
  4113fc:	stp	x20, x19, [sp, #32]
  411400:	mov	x29, sp
  411404:	cbz	x0, 4114a0 <ascii_strlower_n@plt+0xd090>
  411408:	ldrh	w8, [x0, #6]
  41140c:	mov	x19, x0
  411410:	cmp	w8, #0xc
  411414:	b.ne	411458 <ascii_strlower_n@plt+0xd048>  // b.any
  411418:	ldr	x8, [x19, #8]
  41141c:	add	x21, x19, #0x10
  411420:	cmp	x8, #0x0
  411424:	csel	x20, x21, x8, eq  // eq = none
  411428:	mov	x0, x20
  41142c:	bl	4040f0 <dns_name_is_root@plt>
  411430:	adrp	x22, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411434:	add	x22, x22, #0x37b
  411438:	tst	w0, #0x1
  41143c:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411440:	csel	x0, x22, x20, ne  // ne = any
  411444:	add	x1, x1, #0x3f3
  411448:	bl	404240 <dns_name_endswith@plt>
  41144c:	cbz	w0, 411460 <ascii_strlower_n@plt+0xd050>
  411450:	mov	w0, #0x1                   	// #1
  411454:	b	411490 <ascii_strlower_n@plt+0xd080>
  411458:	mov	w0, wzr
  41145c:	b	411490 <ascii_strlower_n@plt+0xd080>
  411460:	ldr	x8, [x19, #8]
  411464:	cmp	x8, #0x0
  411468:	csel	x19, x21, x8, eq  // eq = none
  41146c:	mov	x0, x19
  411470:	bl	4040f0 <dns_name_is_root@plt>
  411474:	tst	w0, #0x1
  411478:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  41147c:	csel	x0, x22, x19, ne  // ne = any
  411480:	add	x1, x1, #0x3fe
  411484:	bl	404240 <dns_name_endswith@plt>
  411488:	cmp	w0, #0x0
  41148c:	cset	w0, ne  // ne = any
  411490:	ldp	x20, x19, [sp, #32]
  411494:	ldp	x22, x21, [sp, #16]
  411498:	ldp	x29, x30, [sp], #48
  41149c:	ret
  4114a0:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4114a4:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4114a8:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4114ac:	add	x1, x1, #0xd24
  4114b0:	add	x2, x2, #0x148
  4114b4:	add	x4, x4, #0x3b7
  4114b8:	mov	w3, #0xa9                  	// #169
  4114bc:	bl	403aa0 <log_assert_failed_realm@plt>
  4114c0:	stp	x29, x30, [sp, #-64]!
  4114c4:	cmp	x0, x1
  4114c8:	str	x23, [sp, #16]
  4114cc:	stp	x22, x21, [sp, #32]
  4114d0:	stp	x20, x19, [sp, #48]
  4114d4:	mov	x29, sp
  4114d8:	b.eq	411538 <ascii_strlower_n@plt+0xd128>  // b.none
  4114dc:	adrp	x23, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4114e0:	mov	x19, x1
  4114e4:	mov	x20, x0
  4114e8:	add	x23, x23, #0x37b
  4114ec:	cbz	x0, 411540 <ascii_strlower_n@plt+0xd130>
  4114f0:	ldr	x8, [x20, #8]
  4114f4:	add	x9, x20, #0x10
  4114f8:	cmp	x8, #0x0
  4114fc:	csel	x21, x9, x8, eq  // eq = none
  411500:	mov	x0, x21
  411504:	bl	4040f0 <dns_name_is_root@plt>
  411508:	tst	w0, #0x1
  41150c:	csel	x21, x23, x21, ne  // ne = any
  411510:	cbz	x19, 411548 <ascii_strlower_n@plt+0xd138>
  411514:	ldr	x8, [x19, #8]
  411518:	add	x9, x19, #0x10
  41151c:	cmp	x8, #0x0
  411520:	csel	x22, x9, x8, eq  // eq = none
  411524:	mov	x0, x22
  411528:	bl	4040f0 <dns_name_is_root@plt>
  41152c:	tst	w0, #0x1
  411530:	csel	x1, x23, x22, ne  // ne = any
  411534:	b	41154c <ascii_strlower_n@plt+0xd13c>
  411538:	mov	w0, #0x1                   	// #1
  41153c:	b	411584 <ascii_strlower_n@plt+0xd174>
  411540:	mov	x21, xzr
  411544:	cbnz	x19, 411514 <ascii_strlower_n@plt+0xd104>
  411548:	mov	x1, xzr
  41154c:	mov	x0, x21
  411550:	bl	404250 <dns_name_equal@plt>
  411554:	cmp	w0, #0x1
  411558:	b.lt	411584 <ascii_strlower_n@plt+0xd174>  // b.tstop
  41155c:	ldrh	w8, [x20, #4]
  411560:	ldrh	w9, [x19, #4]
  411564:	cmp	w8, w9
  411568:	b.ne	411580 <ascii_strlower_n@plt+0xd170>  // b.any
  41156c:	ldrh	w8, [x20, #6]
  411570:	ldrh	w9, [x19, #6]
  411574:	cmp	w8, w9
  411578:	cset	w0, eq  // eq = none
  41157c:	b	411584 <ascii_strlower_n@plt+0xd174>
  411580:	mov	w0, wzr
  411584:	ldp	x20, x19, [sp, #48]
  411588:	ldp	x22, x21, [sp, #32]
  41158c:	ldr	x23, [sp, #16]
  411590:	ldp	x29, x30, [sp], #64
  411594:	ret
  411598:	stp	x29, x30, [sp, #-80]!
  41159c:	str	x25, [sp, #16]
  4115a0:	stp	x24, x23, [sp, #32]
  4115a4:	stp	x22, x21, [sp, #48]
  4115a8:	stp	x20, x19, [sp, #64]
  4115ac:	mov	x29, sp
  4115b0:	cbz	x0, 411700 <ascii_strlower_n@plt+0xd2f0>
  4115b4:	mov	x19, x1
  4115b8:	cbz	x1, 411720 <ascii_strlower_n@plt+0xd310>
  4115bc:	ldr	x8, [x19, #8]
  4115c0:	mov	x21, x0
  4115c4:	cmp	x8, x0
  4115c8:	b.eq	411608 <ascii_strlower_n@plt+0xd1f8>  // b.none
  4115cc:	ldrh	w10, [x8, #4]
  4115d0:	ldrh	w9, [x21, #4]
  4115d4:	mov	x20, x2
  4115d8:	cmp	w10, w9
  4115dc:	b.eq	4115e8 <ascii_strlower_n@plt+0xd1d8>  // b.none
  4115e0:	cmp	w9, #0xff
  4115e4:	b.ne	411600 <ascii_strlower_n@plt+0xd1f0>  // b.any
  4115e8:	ldrh	w10, [x8, #6]
  4115ec:	ldrh	w9, [x21, #6]
  4115f0:	cmp	w10, w9
  4115f4:	b.eq	411610 <ascii_strlower_n@plt+0xd200>  // b.none
  4115f8:	cmp	w9, #0xff
  4115fc:	b.eq	411610 <ascii_strlower_n@plt+0xd200>  // b.none
  411600:	mov	w22, wzr
  411604:	b	4116e4 <ascii_strlower_n@plt+0xd2d4>
  411608:	mov	w22, #0x1                   	// #1
  41160c:	b	4116e4 <ascii_strlower_n@plt+0xd2d4>
  411610:	ldr	x9, [x8, #8]
  411614:	add	x8, x8, #0x10
  411618:	cmp	x9, #0x0
  41161c:	csel	x22, x8, x9, eq  // eq = none
  411620:	mov	x0, x22
  411624:	bl	4040f0 <dns_name_is_root@plt>
  411628:	ldr	x8, [x21, #8]
  41162c:	adrp	x24, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411630:	add	x24, x24, #0x37b
  411634:	tst	w0, #0x1
  411638:	csel	x22, x24, x22, ne  // ne = any
  41163c:	add	x25, x21, #0x10
  411640:	cmp	x8, #0x0
  411644:	csel	x23, x25, x8, eq  // eq = none
  411648:	mov	x0, x23
  41164c:	bl	4040f0 <dns_name_is_root@plt>
  411650:	tst	w0, #0x1
  411654:	csel	x1, x24, x23, ne  // ne = any
  411658:	mov	x0, x22
  41165c:	bl	404250 <dns_name_equal@plt>
  411660:	mov	w22, w0
  411664:	cbnz	w0, 4116e4 <ascii_strlower_n@plt+0xd2d4>
  411668:	cbz	x20, 411600 <ascii_strlower_n@plt+0xd1f0>
  41166c:	str	xzr, [x29, #24]
  411670:	ldr	x8, [x21, #8]
  411674:	cmp	x8, #0x0
  411678:	csel	x21, x25, x8, eq  // eq = none
  41167c:	mov	x0, x21
  411680:	bl	4040f0 <dns_name_is_root@plt>
  411684:	tst	w0, #0x1
  411688:	csel	x0, x24, x21, ne  // ne = any
  41168c:	add	x3, x29, #0x18
  411690:	mov	x1, x20
  411694:	mov	w2, wzr
  411698:	bl	403e00 <dns_name_concat@plt>
  41169c:	tbnz	w0, #31, 4116d8 <ascii_strlower_n@plt+0xd2c8>
  4116a0:	ldr	x8, [x19, #8]
  4116a4:	cbz	x8, 4116cc <ascii_strlower_n@plt+0xd2bc>
  4116a8:	ldr	x9, [x8, #8]
  4116ac:	add	x8, x8, #0x10
  4116b0:	cmp	x9, #0x0
  4116b4:	csel	x19, x8, x9, eq  // eq = none
  4116b8:	mov	x0, x19
  4116bc:	bl	4040f0 <dns_name_is_root@plt>
  4116c0:	tst	w0, #0x1
  4116c4:	csel	x0, x24, x19, ne  // ne = any
  4116c8:	b	4116d0 <ascii_strlower_n@plt+0xd2c0>
  4116cc:	mov	x0, xzr
  4116d0:	ldr	x1, [x29, #24]
  4116d4:	bl	404250 <dns_name_equal@plt>
  4116d8:	mov	w22, w0
  4116dc:	ldr	x0, [x29, #24]
  4116e0:	bl	403a30 <free@plt>
  4116e4:	mov	w0, w22
  4116e8:	ldp	x20, x19, [sp, #64]
  4116ec:	ldp	x22, x21, [sp, #48]
  4116f0:	ldp	x24, x23, [sp, #32]
  4116f4:	ldr	x25, [sp, #16]
  4116f8:	ldp	x29, x30, [sp], #80
  4116fc:	ret
  411700:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  411704:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411708:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  41170c:	add	x1, x1, #0xd24
  411710:	add	x2, x2, #0x148
  411714:	add	x4, x4, #0x409
  411718:	mov	w3, #0xcb                  	// #203
  41171c:	bl	403aa0 <log_assert_failed_realm@plt>
  411720:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  411724:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411728:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  41172c:	add	x1, x1, #0x974
  411730:	add	x2, x2, #0x148
  411734:	add	x4, x4, #0x409
  411738:	mov	w3, #0xcc                  	// #204
  41173c:	mov	w0, wzr
  411740:	bl	403aa0 <log_assert_failed_realm@plt>
  411744:	sub	sp, sp, #0x50
  411748:	stp	x29, x30, [sp, #16]
  41174c:	stp	x24, x23, [sp, #32]
  411750:	stp	x22, x21, [sp, #48]
  411754:	stp	x20, x19, [sp, #64]
  411758:	add	x29, sp, #0x10
  41175c:	cbz	x0, 411938 <ascii_strlower_n@plt+0xd528>
  411760:	mov	x19, x1
  411764:	cbz	x1, 411958 <ascii_strlower_n@plt+0xd548>
  411768:	ldrh	w9, [x19, #4]
  41176c:	ldrh	w8, [x0, #4]
  411770:	mov	x20, x2
  411774:	mov	x21, x0
  411778:	cmp	w9, w8
  41177c:	b.eq	411788 <ascii_strlower_n@plt+0xd378>  // b.none
  411780:	cmp	w8, #0xff
  411784:	b.ne	411918 <ascii_strlower_n@plt+0xd508>  // b.any
  411788:	ldrh	w8, [x19, #6]
  41178c:	cmp	w8, #0x27
  411790:	b.eq	4117f0 <ascii_strlower_n@plt+0xd3e0>  // b.none
  411794:	cmp	w8, #0x5
  411798:	b.ne	411918 <ascii_strlower_n@plt+0xd508>  // b.any
  41179c:	ldr	x8, [x21, #8]
  4117a0:	add	x9, x21, #0x10
  4117a4:	cmp	x8, #0x0
  4117a8:	csel	x22, x9, x8, eq  // eq = none
  4117ac:	mov	x0, x22
  4117b0:	bl	4040f0 <dns_name_is_root@plt>
  4117b4:	ldr	x8, [x19, #8]
  4117b8:	adrp	x24, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4117bc:	add	x24, x24, #0x37b
  4117c0:	tst	w0, #0x1
  4117c4:	csel	x22, x24, x22, ne  // ne = any
  4117c8:	add	x9, x19, #0x10
  4117cc:	cmp	x8, #0x0
  4117d0:	csel	x23, x9, x8, eq  // eq = none
  4117d4:	mov	x0, x23
  4117d8:	bl	4040f0 <dns_name_is_root@plt>
  4117dc:	tst	w0, #0x1
  4117e0:	csel	x1, x24, x23, ne  // ne = any
  4117e4:	mov	x0, x22
  4117e8:	bl	404250 <dns_name_equal@plt>
  4117ec:	b	411840 <ascii_strlower_n@plt+0xd430>
  4117f0:	ldr	x8, [x21, #8]
  4117f4:	add	x9, x21, #0x10
  4117f8:	cmp	x8, #0x0
  4117fc:	csel	x22, x9, x8, eq  // eq = none
  411800:	mov	x0, x22
  411804:	bl	4040f0 <dns_name_is_root@plt>
  411808:	ldr	x8, [x19, #8]
  41180c:	adrp	x24, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411810:	add	x24, x24, #0x37b
  411814:	tst	w0, #0x1
  411818:	csel	x22, x24, x22, ne  // ne = any
  41181c:	add	x9, x19, #0x10
  411820:	cmp	x8, #0x0
  411824:	csel	x23, x9, x8, eq  // eq = none
  411828:	mov	x0, x23
  41182c:	bl	4040f0 <dns_name_is_root@plt>
  411830:	tst	w0, #0x1
  411834:	csel	x1, x24, x23, ne  // ne = any
  411838:	mov	x0, x22
  41183c:	bl	404240 <dns_name_endswith@plt>
  411840:	mov	w22, w0
  411844:	cbnz	w0, 41191c <ascii_strlower_n@plt+0xd50c>
  411848:	cbz	x20, 411918 <ascii_strlower_n@plt+0xd508>
  41184c:	str	xzr, [sp, #8]
  411850:	ldr	x8, [x21, #8]
  411854:	add	x9, x21, #0x10
  411858:	cmp	x8, #0x0
  41185c:	csel	x21, x9, x8, eq  // eq = none
  411860:	mov	x0, x21
  411864:	bl	4040f0 <dns_name_is_root@plt>
  411868:	adrp	x23, 41c000 <ascii_strlower_n@plt+0x17bf0>
  41186c:	add	x23, x23, #0x37b
  411870:	tst	w0, #0x1
  411874:	csel	x0, x23, x21, ne  // ne = any
  411878:	add	x3, sp, #0x8
  41187c:	mov	x1, x20
  411880:	mov	w2, wzr
  411884:	bl	403e00 <dns_name_concat@plt>
  411888:	tbnz	w0, #31, 4118fc <ascii_strlower_n@plt+0xd4ec>
  41188c:	ldrh	w8, [x19, #6]
  411890:	cmp	w8, #0x27
  411894:	b.eq	4118d0 <ascii_strlower_n@plt+0xd4c0>  // b.none
  411898:	cmp	w8, #0x5
  41189c:	b.ne	411908 <ascii_strlower_n@plt+0xd4f8>  // b.any
  4118a0:	ldr	x8, [x19, #8]
  4118a4:	ldr	x20, [sp, #8]
  4118a8:	add	x9, x19, #0x10
  4118ac:	cmp	x8, #0x0
  4118b0:	csel	x19, x9, x8, eq  // eq = none
  4118b4:	mov	x0, x19
  4118b8:	bl	4040f0 <dns_name_is_root@plt>
  4118bc:	tst	w0, #0x1
  4118c0:	csel	x1, x23, x19, ne  // ne = any
  4118c4:	mov	x0, x20
  4118c8:	bl	404250 <dns_name_equal@plt>
  4118cc:	b	4118fc <ascii_strlower_n@plt+0xd4ec>
  4118d0:	ldr	x8, [x19, #8]
  4118d4:	ldr	x20, [sp, #8]
  4118d8:	add	x9, x19, #0x10
  4118dc:	cmp	x8, #0x0
  4118e0:	csel	x19, x9, x8, eq  // eq = none
  4118e4:	mov	x0, x19
  4118e8:	bl	4040f0 <dns_name_is_root@plt>
  4118ec:	tst	w0, #0x1
  4118f0:	csel	x1, x23, x19, ne  // ne = any
  4118f4:	mov	x0, x20
  4118f8:	bl	404240 <dns_name_endswith@plt>
  4118fc:	mov	w22, w0
  411900:	mov	w19, wzr
  411904:	b	41190c <ascii_strlower_n@plt+0xd4fc>
  411908:	mov	w19, #0x1                   	// #1
  41190c:	ldr	x0, [sp, #8]
  411910:	bl	403a30 <free@plt>
  411914:	cbz	w19, 41191c <ascii_strlower_n@plt+0xd50c>
  411918:	mov	w22, wzr
  41191c:	mov	w0, w22
  411920:	ldp	x20, x19, [sp, #64]
  411924:	ldp	x22, x21, [sp, #48]
  411928:	ldp	x24, x23, [sp, #32]
  41192c:	ldp	x29, x30, [sp, #16]
  411930:	add	sp, sp, #0x50
  411934:	ret
  411938:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  41193c:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411940:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411944:	add	x1, x1, #0xd24
  411948:	add	x2, x2, #0x148
  41194c:	add	x4, x4, #0x462
  411950:	mov	w3, #0xef                  	// #239
  411954:	bl	403aa0 <log_assert_failed_realm@plt>
  411958:	adrp	x1, 418000 <ascii_strlower_n@plt+0x13bf0>
  41195c:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411960:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411964:	add	x1, x1, #0x50
  411968:	add	x2, x2, #0x148
  41196c:	add	x4, x4, #0x462
  411970:	mov	w3, #0xf0                  	// #240
  411974:	mov	w0, wzr
  411978:	bl	403aa0 <log_assert_failed_realm@plt>
  41197c:	stp	x29, x30, [sp, #-48]!
  411980:	str	x21, [sp, #16]
  411984:	stp	x20, x19, [sp, #32]
  411988:	mov	x29, sp
  41198c:	cbz	x1, 411a24 <ascii_strlower_n@plt+0xd614>
  411990:	cbz	x0, 411a48 <ascii_strlower_n@plt+0xd638>
  411994:	ldrh	w8, [x1, #4]
  411998:	ldrh	w9, [x0, #4]
  41199c:	mov	x19, x1
  4119a0:	cmp	w8, w9
  4119a4:	b.ne	411a10 <ascii_strlower_n@plt+0xd600>  // b.any
  4119a8:	ldrh	w8, [x19, #6]
  4119ac:	cmp	w8, #0x6
  4119b0:	b.ne	411a10 <ascii_strlower_n@plt+0xd600>  // b.any
  4119b4:	ldr	x8, [x0, #8]
  4119b8:	add	x9, x0, #0x10
  4119bc:	cmp	x8, #0x0
  4119c0:	csel	x20, x9, x8, eq  // eq = none
  4119c4:	mov	x0, x20
  4119c8:	bl	4040f0 <dns_name_is_root@plt>
  4119cc:	ldr	x8, [x19, #8]
  4119d0:	adrp	x21, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4119d4:	add	x21, x21, #0x37b
  4119d8:	tst	w0, #0x1
  4119dc:	csel	x20, x21, x20, ne  // ne = any
  4119e0:	add	x9, x19, #0x10
  4119e4:	cmp	x8, #0x0
  4119e8:	csel	x19, x9, x8, eq  // eq = none
  4119ec:	mov	x0, x19
  4119f0:	bl	4040f0 <dns_name_is_root@plt>
  4119f4:	tst	w0, #0x1
  4119f8:	csel	x1, x21, x19, ne  // ne = any
  4119fc:	mov	x0, x20
  411a00:	ldp	x20, x19, [sp, #32]
  411a04:	ldr	x21, [sp, #16]
  411a08:	ldp	x29, x30, [sp], #48
  411a0c:	b	404240 <dns_name_endswith@plt>
  411a10:	ldp	x20, x19, [sp, #32]
  411a14:	ldr	x21, [sp, #16]
  411a18:	mov	w0, wzr
  411a1c:	ldp	x29, x30, [sp], #48
  411a20:	ret
  411a24:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411a28:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411a2c:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411a30:	add	x1, x1, #0x4ca
  411a34:	add	x2, x2, #0x148
  411a38:	add	x4, x4, #0x4ce
  411a3c:	mov	w3, #0x110                 	// #272
  411a40:	mov	w0, wzr
  411a44:	bl	403aa0 <log_assert_failed_realm@plt>
  411a48:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  411a4c:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411a50:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411a54:	add	x1, x1, #0xd24
  411a58:	add	x2, x2, #0x148
  411a5c:	add	x4, x4, #0x4ce
  411a60:	mov	w3, #0x111                 	// #273
  411a64:	bl	403aa0 <log_assert_failed_realm@plt>
  411a68:	stp	x29, x30, [sp, #-48]!
  411a6c:	str	x21, [sp, #16]
  411a70:	stp	x20, x19, [sp, #32]
  411a74:	mov	x29, sp
  411a78:	cbz	x0, 411ae0 <ascii_strlower_n@plt+0xd6d0>
  411a7c:	ldr	x8, [x0, #8]
  411a80:	add	x9, x0, #0x10
  411a84:	mov	x20, x0
  411a88:	mov	x19, x1
  411a8c:	cmp	x8, #0x0
  411a90:	csel	x21, x9, x8, eq  // eq = none
  411a94:	mov	x0, x21
  411a98:	bl	4040f0 <dns_name_is_root@plt>
  411a9c:	adrp	x8, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411aa0:	add	x8, x8, #0x37b
  411aa4:	tst	w0, #0x1
  411aa8:	csel	x0, x8, x21, ne  // ne = any
  411aac:	mov	x1, x19
  411ab0:	bl	404260 <dns_name_hash_func@plt>
  411ab4:	add	x0, x20, #0x4
  411ab8:	mov	w1, #0x2                   	// #2
  411abc:	mov	x2, x19
  411ac0:	bl	4041f0 <siphash24_compress@plt>
  411ac4:	add	x0, x20, #0x6
  411ac8:	mov	x2, x19
  411acc:	ldp	x20, x19, [sp, #32]
  411ad0:	ldr	x21, [sp, #16]
  411ad4:	mov	w1, #0x2                   	// #2
  411ad8:	ldp	x29, x30, [sp], #48
  411adc:	b	4041f0 <siphash24_compress@plt>
  411ae0:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  411ae4:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411ae8:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411aec:	add	x1, x1, #0x7f8
  411af0:	add	x2, x2, #0x148
  411af4:	add	x4, x4, #0xbec
  411af8:	mov	w3, #0x11f                 	// #287
  411afc:	bl	403aa0 <log_assert_failed_realm@plt>
  411b00:	stp	x29, x30, [sp, #-64]!
  411b04:	str	x23, [sp, #16]
  411b08:	adrp	x23, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411b0c:	stp	x20, x19, [sp, #48]
  411b10:	mov	x19, x1
  411b14:	mov	x20, x0
  411b18:	add	x23, x23, #0x37b
  411b1c:	stp	x22, x21, [sp, #32]
  411b20:	mov	x29, sp
  411b24:	cbz	x0, 411b70 <ascii_strlower_n@plt+0xd760>
  411b28:	ldr	x8, [x20, #8]
  411b2c:	add	x9, x20, #0x10
  411b30:	cmp	x8, #0x0
  411b34:	csel	x21, x9, x8, eq  // eq = none
  411b38:	mov	x0, x21
  411b3c:	bl	4040f0 <dns_name_is_root@plt>
  411b40:	tst	w0, #0x1
  411b44:	csel	x21, x23, x21, ne  // ne = any
  411b48:	cbz	x19, 411b78 <ascii_strlower_n@plt+0xd768>
  411b4c:	ldr	x8, [x19, #8]
  411b50:	add	x9, x19, #0x10
  411b54:	cmp	x8, #0x0
  411b58:	csel	x22, x9, x8, eq  // eq = none
  411b5c:	mov	x0, x22
  411b60:	bl	4040f0 <dns_name_is_root@plt>
  411b64:	tst	w0, #0x1
  411b68:	csel	x1, x23, x22, ne  // ne = any
  411b6c:	b	411b7c <ascii_strlower_n@plt+0xd76c>
  411b70:	mov	x21, xzr
  411b74:	cbnz	x19, 411b4c <ascii_strlower_n@plt+0xd73c>
  411b78:	mov	x1, xzr
  411b7c:	mov	x0, x21
  411b80:	bl	404270 <dns_name_compare_func@plt>
  411b84:	cbnz	w0, 411bb4 <ascii_strlower_n@plt+0xd7a4>
  411b88:	ldrh	w8, [x20, #6]
  411b8c:	ldrh	w9, [x19, #6]
  411b90:	cmp	w8, w9
  411b94:	cset	w8, hi  // hi = pmore
  411b98:	csinv	w0, w8, wzr, cs  // cs = hs, nlast
  411b9c:	cbnz	w0, 411bb4 <ascii_strlower_n@plt+0xd7a4>
  411ba0:	ldrh	w8, [x20, #4]
  411ba4:	ldrh	w9, [x19, #4]
  411ba8:	cmp	w8, w9
  411bac:	cset	w8, hi  // hi = pmore
  411bb0:	csinv	w0, w8, wzr, cs  // cs = hs, nlast
  411bb4:	ldp	x20, x19, [sp, #48]
  411bb8:	ldp	x22, x21, [sp, #32]
  411bbc:	ldr	x23, [sp, #16]
  411bc0:	ldp	x29, x30, [sp], #64
  411bc4:	ret
  411bc8:	sub	sp, sp, #0x50
  411bcc:	stp	x29, x30, [sp, #16]
  411bd0:	stp	x24, x23, [sp, #32]
  411bd4:	stp	x22, x21, [sp, #48]
  411bd8:	stp	x20, x19, [sp, #64]
  411bdc:	mov	x21, x0
  411be0:	ldrh	w0, [x0, #4]
  411be4:	add	x29, sp, #0x10
  411be8:	mov	x20, x2
  411bec:	mov	x19, x1
  411bf0:	bl	4172d4 <ascii_strlower_n@plt+0x12ec4>
  411bf4:	ldrh	w8, [x21, #6]
  411bf8:	mov	x23, x0
  411bfc:	mov	w0, w8
  411c00:	bl	416ad4 <ascii_strlower_n@plt+0x126c4>
  411c04:	mov	x22, x0
  411c08:	cbz	x21, 411c38 <ascii_strlower_n@plt+0xd828>
  411c0c:	ldr	x8, [x21, #8]
  411c10:	add	x9, x21, #0x10
  411c14:	cmp	x8, #0x0
  411c18:	csel	x24, x9, x8, eq  // eq = none
  411c1c:	mov	x0, x24
  411c20:	bl	4040f0 <dns_name_is_root@plt>
  411c24:	adrp	x8, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411c28:	add	x8, x8, #0x37b
  411c2c:	tst	w0, #0x1
  411c30:	csel	x3, x8, x24, ne  // ne = any
  411c34:	b	411c3c <ascii_strlower_n@plt+0xd82c>
  411c38:	mov	x3, xzr
  411c3c:	adrp	x8, 417000 <ascii_strlower_n@plt+0x12bf0>
  411c40:	adrp	x9, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411c44:	add	x8, x8, #0xff4
  411c48:	cmp	x23, #0x0
  411c4c:	add	x9, x9, #0x532
  411c50:	csel	x4, x8, x23, eq  // eq = none
  411c54:	csel	x5, x8, x9, ne  // ne = any
  411c58:	cbz	x23, 411c64 <ascii_strlower_n@plt+0xd854>
  411c5c:	mov	w6, wzr
  411c60:	b	411c68 <ascii_strlower_n@plt+0xd858>
  411c64:	ldrh	w6, [x21, #4]
  411c68:	adrp	x9, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411c6c:	cmp	x22, #0x0
  411c70:	add	x9, x9, #0x538
  411c74:	csel	x7, x8, x22, eq  // eq = none
  411c78:	csel	x8, x8, x9, ne  // ne = any
  411c7c:	cbz	x22, 411c88 <ascii_strlower_n@plt+0xd878>
  411c80:	mov	w9, wzr
  411c84:	b	411c8c <ascii_strlower_n@plt+0xd87c>
  411c88:	ldrh	w9, [x21, #6]
  411c8c:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411c90:	add	x2, x2, #0x51d
  411c94:	mov	x0, x19
  411c98:	mov	x1, x20
  411c9c:	str	w9, [sp, #8]
  411ca0:	str	x8, [sp]
  411ca4:	bl	404280 <snprintf@plt>
  411ca8:	mov	x0, x19
  411cac:	ldp	x20, x19, [sp, #64]
  411cb0:	ldp	x22, x21, [sp, #48]
  411cb4:	ldp	x24, x23, [sp, #32]
  411cb8:	ldp	x29, x30, [sp, #16]
  411cbc:	add	sp, sp, #0x50
  411cc0:	ret
  411cc4:	stp	x29, x30, [sp, #-32]!
  411cc8:	stp	x20, x19, [sp, #16]
  411ccc:	mov	x29, sp
  411cd0:	cbz	x0, 411d74 <ascii_strlower_n@plt+0xd964>
  411cd4:	mov	x19, x1
  411cd8:	cbz	x1, 411d94 <ascii_strlower_n@plt+0xd984>
  411cdc:	mov	x20, x0
  411ce0:	ldr	x0, [x0]
  411ce4:	cbz	x0, 411d50 <ascii_strlower_n@plt+0xd940>
  411ce8:	ldr	x1, [x19]
  411cec:	cbz	x1, 411d4c <ascii_strlower_n@plt+0xd93c>
  411cf0:	ldr	w8, [x0]
  411cf4:	cmn	w8, #0x1
  411cf8:	b.eq	411d4c <ascii_strlower_n@plt+0xd93c>  // b.none
  411cfc:	ldr	w8, [x1]
  411d00:	cmn	w8, #0x1
  411d04:	b.eq	411d4c <ascii_strlower_n@plt+0xd93c>  // b.none
  411d08:	cmp	x0, x1
  411d0c:	b.eq	411d6c <ascii_strlower_n@plt+0xd95c>  // b.none
  411d10:	bl	4114c0 <ascii_strlower_n@plt+0xd0b0>
  411d14:	cmp	w0, #0x1
  411d18:	b.lt	411d4c <ascii_strlower_n@plt+0xd93c>  // b.tstop
  411d1c:	ldr	x0, [x20]
  411d20:	ldr	x8, [x19]
  411d24:	ldr	w9, [x0]
  411d28:	ldr	w10, [x8]
  411d2c:	cmp	w9, w10
  411d30:	b.ls	411d5c <ascii_strlower_n@plt+0xd94c>  // b.plast
  411d34:	mov	x0, x8
  411d38:	bl	4112fc <ascii_strlower_n@plt+0xceec>
  411d3c:	ldr	x0, [x20]
  411d40:	bl	4110ec <ascii_strlower_n@plt+0xccdc>
  411d44:	str	x0, [x19]
  411d48:	b	411d6c <ascii_strlower_n@plt+0xd95c>
  411d4c:	mov	w0, wzr
  411d50:	ldp	x20, x19, [sp, #16]
  411d54:	ldp	x29, x30, [sp], #32
  411d58:	ret
  411d5c:	bl	4112fc <ascii_strlower_n@plt+0xceec>
  411d60:	ldr	x0, [x19]
  411d64:	bl	4110ec <ascii_strlower_n@plt+0xccdc>
  411d68:	str	x0, [x20]
  411d6c:	mov	w0, #0x1                   	// #1
  411d70:	b	411d50 <ascii_strlower_n@plt+0xd940>
  411d74:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411d78:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411d7c:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411d80:	add	x1, x1, #0x53d
  411d84:	add	x2, x2, #0x148
  411d88:	add	x4, x4, #0x53f
  411d8c:	mov	w3, #0x14d                 	// #333
  411d90:	bl	403aa0 <log_assert_failed_realm@plt>
  411d94:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  411d98:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411d9c:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411da0:	add	x1, x1, #0x89f
  411da4:	add	x2, x2, #0x148
  411da8:	add	x4, x4, #0x53f
  411dac:	mov	w3, #0x14e                 	// #334
  411db0:	mov	w0, wzr
  411db4:	bl	403aa0 <log_assert_failed_realm@plt>
  411db8:	stp	x29, x30, [sp, #-48]!
  411dbc:	stp	x20, x19, [sp, #32]
  411dc0:	mov	x20, x0
  411dc4:	mov	w0, #0x1                   	// #1
  411dc8:	mov	w1, #0x80                  	// #128
  411dcc:	str	x21, [sp, #16]
  411dd0:	mov	x29, sp
  411dd4:	mov	w21, #0x1                   	// #1
  411dd8:	bl	404070 <calloc@plt>
  411ddc:	mov	x19, x0
  411de0:	cbz	x0, 411dfc <ascii_strlower_n@plt+0xd9ec>
  411de4:	mov	x0, x20
  411de8:	str	w21, [x19]
  411dec:	bl	4110ec <ascii_strlower_n@plt+0xccdc>
  411df0:	mov	x8, #0xffffffffffffffff    	// #-1
  411df4:	str	x0, [x19, #8]
  411df8:	stp	x8, x8, [x19, #32]
  411dfc:	mov	x0, x19
  411e00:	ldp	x20, x19, [sp, #32]
  411e04:	ldr	x21, [sp, #16]
  411e08:	ldp	x29, x30, [sp], #48
  411e0c:	ret
  411e10:	stp	x29, x30, [sp, #-32]!
  411e14:	stp	x20, x19, [sp, #16]
  411e18:	mov	x29, sp
  411e1c:	bl	410e9c <ascii_strlower_n@plt+0xca8c>
  411e20:	cbz	x0, 411e3c <ascii_strlower_n@plt+0xda2c>
  411e24:	mov	x19, x0
  411e28:	bl	411db8 <ascii_strlower_n@plt+0xd9a8>
  411e2c:	mov	x20, x0
  411e30:	mov	x0, x19
  411e34:	bl	4112fc <ascii_strlower_n@plt+0xceec>
  411e38:	mov	x0, x20
  411e3c:	ldp	x20, x19, [sp, #16]
  411e40:	ldp	x29, x30, [sp], #32
  411e44:	ret
  411e48:	stp	x29, x30, [sp, #-16]!
  411e4c:	mov	x29, sp
  411e50:	cbz	x0, 411e64 <ascii_strlower_n@plt+0xda54>
  411e54:	ldr	w8, [x0]
  411e58:	cbz	w8, 411e6c <ascii_strlower_n@plt+0xda5c>
  411e5c:	add	w8, w8, #0x1
  411e60:	str	w8, [x0]
  411e64:	ldp	x29, x30, [sp], #16
  411e68:	ret
  411e6c:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  411e70:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411e74:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411e78:	add	x1, x1, #0x46f
  411e7c:	add	x2, x2, #0x148
  411e80:	add	x4, x4, #0x583
  411e84:	mov	w3, #0x1ec                 	// #492
  411e88:	mov	w0, wzr
  411e8c:	bl	403aa0 <log_assert_failed_realm@plt>
  411e90:	stp	x29, x30, [sp, #-32]!
  411e94:	stp	x20, x19, [sp, #16]
  411e98:	mov	x29, sp
  411e9c:	cbz	x0, 411f8c <ascii_strlower_n@plt+0xdb7c>
  411ea0:	ldr	w8, [x0]
  411ea4:	mov	x19, x0
  411ea8:	cbz	w8, 411ff0 <ascii_strlower_n@plt+0xdbe0>
  411eac:	subs	w8, w8, #0x1
  411eb0:	str	w8, [x19]
  411eb4:	b.ne	411f8c <ascii_strlower_n@plt+0xdb7c>  // b.any
  411eb8:	ldr	x8, [x19, #8]
  411ebc:	cbz	x8, 411f7c <ascii_strlower_n@plt+0xdb6c>
  411ec0:	ldrh	w8, [x8, #6]
  411ec4:	cmp	w8, #0x1b
  411ec8:	b.le	411f00 <ascii_strlower_n@plt+0xdaf0>
  411ecc:	sub	w9, w8, #0x1c
  411ed0:	cmp	w9, #0x18
  411ed4:	b.hi	411f2c <ascii_strlower_n@plt+0xdb1c>  // b.pmore
  411ed8:	adrp	x8, 41e000 <ascii_strlower_n@plt+0x19bf0>
  411edc:	add	x8, x8, #0x75a
  411ee0:	adr	x10, 411ef0 <ascii_strlower_n@plt+0xdae0>
  411ee4:	ldrb	w11, [x8, x9]
  411ee8:	add	x10, x10, x11, lsl #2
  411eec:	br	x10
  411ef0:	ldr	x0, [x19, #104]
  411ef4:	bl	403a30 <free@plt>
  411ef8:	ldr	x0, [x19, #112]
  411efc:	b	411f58 <ascii_strlower_n@plt+0xdb48>
  411f00:	sub	w8, w8, #0x1
  411f04:	cmp	w8, #0xf
  411f08:	b.hi	411fe4 <ascii_strlower_n@plt+0xdbd4>  // b.pmore
  411f0c:	adrp	x9, 41e000 <ascii_strlower_n@plt+0x19bf0>
  411f10:	add	x9, x9, #0x74a
  411f14:	adr	x10, 411f24 <ascii_strlower_n@plt+0xdb14>
  411f18:	ldrb	w11, [x9, x8]
  411f1c:	add	x10, x10, x11, lsl #2
  411f20:	br	x10
  411f24:	ldr	x0, [x19, #80]
  411f28:	b	411f58 <ascii_strlower_n@plt+0xdb48>
  411f2c:	cmp	w8, #0x63
  411f30:	b.eq	411f9c <ascii_strlower_n@plt+0xdb8c>  // b.none
  411f34:	cmp	w8, #0x101
  411f38:	b.ne	411fe4 <ascii_strlower_n@plt+0xdbd4>  // b.any
  411f3c:	ldr	x0, [x19, #88]
  411f40:	bl	403a30 <free@plt>
  411f44:	ldr	x0, [x19, #96]
  411f48:	b	411f58 <ascii_strlower_n@plt+0xdb48>
  411f4c:	ldr	x0, [x19, #80]
  411f50:	bl	403a30 <free@plt>
  411f54:	ldr	x0, [x19, #88]
  411f58:	bl	403a30 <free@plt>
  411f5c:	ldrb	w8, [x19, #48]
  411f60:	tbz	w8, #0, 411f6c <ascii_strlower_n@plt+0xdb5c>
  411f64:	ldr	x0, [x19, #80]
  411f68:	bl	403a30 <free@plt>
  411f6c:	ldr	x0, [x19, #56]
  411f70:	bl	403a30 <free@plt>
  411f74:	ldr	x0, [x19, #8]
  411f78:	bl	4112fc <ascii_strlower_n@plt+0xceec>
  411f7c:	ldr	x0, [x19, #16]
  411f80:	bl	403a30 <free@plt>
  411f84:	mov	x0, x19
  411f88:	bl	403a30 <free@plt>
  411f8c:	ldp	x20, x19, [sp, #16]
  411f90:	mov	x0, xzr
  411f94:	ldp	x29, x30, [sp], #32
  411f98:	ret
  411f9c:	ldr	x0, [x19, #80]
  411fa0:	cbz	x0, 411f5c <ascii_strlower_n@plt+0xdb4c>
  411fa4:	ldr	x20, [x0, #8]
  411fa8:	bl	403a30 <free@plt>
  411fac:	mov	x0, x20
  411fb0:	cbnz	x20, 411fa4 <ascii_strlower_n@plt+0xdb94>
  411fb4:	b	411f5c <ascii_strlower_n@plt+0xdb4c>
  411fb8:	ldr	x0, [x19, #80]
  411fbc:	bl	403a30 <free@plt>
  411fc0:	ldr	x0, [x19, #88]
  411fc4:	b	411fdc <ascii_strlower_n@plt+0xdbcc>
  411fc8:	ldr	x0, [x19, #104]
  411fcc:	bl	403a30 <free@plt>
  411fd0:	ldr	x0, [x19, #88]
  411fd4:	bl	403a30 <free@plt>
  411fd8:	ldr	x0, [x19, #120]
  411fdc:	bl	404290 <bitmap_free@plt>
  411fe0:	b	411f5c <ascii_strlower_n@plt+0xdb4c>
  411fe4:	ldrb	w8, [x19, #48]
  411fe8:	tbnz	w8, #0, 411f5c <ascii_strlower_n@plt+0xdb4c>
  411fec:	b	411f24 <ascii_strlower_n@plt+0xdb14>
  411ff0:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  411ff4:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411ff8:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  411ffc:	add	x1, x1, #0x46f
  412000:	add	x2, x2, #0x148
  412004:	add	x4, x4, #0x5c3
  412008:	mov	w3, #0x1ec                 	// #492
  41200c:	mov	w0, wzr
  412010:	bl	403aa0 <log_assert_failed_realm@plt>
  412014:	stp	x29, x30, [sp, #-64]!
  412018:	mov	x29, sp
  41201c:	str	x23, [sp, #16]
  412020:	stp	x22, x21, [sp, #32]
  412024:	stp	x20, x19, [sp, #48]
  412028:	str	xzr, [x29, #24]
  41202c:	cbz	x0, 4120f0 <ascii_strlower_n@plt+0xdce0>
  412030:	mov	x8, x2
  412034:	cbz	x2, 412110 <ascii_strlower_n@plt+0xdd00>
  412038:	mov	x23, x3
  41203c:	cbz	x3, 412130 <ascii_strlower_n@plt+0xdd20>
  412040:	mov	x21, x0
  412044:	add	x2, x29, #0x18
  412048:	mov	w0, w1
  41204c:	mov	x1, x8
  412050:	bl	4042a0 <dns_name_reverse@plt>
  412054:	tbnz	w0, #31, 4120a0 <ascii_strlower_n@plt+0xdc90>
  412058:	ldr	x2, [x29, #24]
  41205c:	mov	w0, #0x1                   	// #1
  412060:	mov	w1, #0xc                   	// #12
  412064:	bl	41115c <ascii_strlower_n@plt+0xcd4c>
  412068:	mov	x19, x0
  41206c:	cbz	x0, 4120b0 <ascii_strlower_n@plt+0xdca0>
  412070:	mov	x0, x19
  412074:	str	xzr, [x29, #24]
  412078:	bl	411db8 <ascii_strlower_n@plt+0xd9a8>
  41207c:	mov	x22, x0
  412080:	cbz	x0, 4120b4 <ascii_strlower_n@plt+0xdca4>
  412084:	mov	x0, x23
  412088:	bl	403ae0 <strdup@plt>
  41208c:	str	x0, [x22, #80]
  412090:	cbz	x0, 4120b4 <ascii_strlower_n@plt+0xdca4>
  412094:	mov	w20, wzr
  412098:	str	x22, [x21]
  41209c:	b	4120a8 <ascii_strlower_n@plt+0xdc98>
  4120a0:	mov	w20, w0
  4120a4:	mov	x19, xzr
  4120a8:	mov	x22, xzr
  4120ac:	b	4120b8 <ascii_strlower_n@plt+0xdca8>
  4120b0:	mov	x22, xzr
  4120b4:	mov	w20, #0xfffffff4            	// #-12
  4120b8:	ldr	x0, [x29, #24]
  4120bc:	bl	403a30 <free@plt>
  4120c0:	cbz	x22, 4120cc <ascii_strlower_n@plt+0xdcbc>
  4120c4:	mov	x0, x22
  4120c8:	bl	411e90 <ascii_strlower_n@plt+0xda80>
  4120cc:	cbz	x19, 4120d8 <ascii_strlower_n@plt+0xdcc8>
  4120d0:	mov	x0, x19
  4120d4:	bl	4112fc <ascii_strlower_n@plt+0xceec>
  4120d8:	mov	w0, w20
  4120dc:	ldp	x20, x19, [sp, #48]
  4120e0:	ldp	x22, x21, [sp, #32]
  4120e4:	ldr	x23, [sp, #16]
  4120e8:	ldp	x29, x30, [sp], #64
  4120ec:	ret
  4120f0:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  4120f4:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4120f8:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4120fc:	add	x1, x1, #0xc0e
  412100:	add	x2, x2, #0x148
  412104:	add	x4, x4, #0x605
  412108:	mov	w3, #0x1f4                 	// #500
  41210c:	bl	403aa0 <log_assert_failed_realm@plt>
  412110:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  412114:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  412118:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  41211c:	add	x1, x1, #0x60e
  412120:	add	x2, x2, #0x148
  412124:	add	x4, x4, #0x605
  412128:	mov	w3, #0x1f5                 	// #501
  41212c:	b	41214c <ascii_strlower_n@plt+0xdd3c>
  412130:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  412134:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  412138:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  41213c:	add	x1, x1, #0x66f
  412140:	add	x2, x2, #0x148
  412144:	add	x4, x4, #0x605
  412148:	mov	w3, #0x1f6                 	// #502
  41214c:	mov	w0, wzr
  412150:	bl	403aa0 <log_assert_failed_realm@plt>
  412154:	stp	x29, x30, [sp, #-32]!
  412158:	stp	x20, x19, [sp, #16]
  41215c:	mov	x29, sp
  412160:	cbz	x0, 4121ec <ascii_strlower_n@plt+0xdddc>
  412164:	mov	x20, x2
  412168:	cbz	x2, 41220c <ascii_strlower_n@plt+0xddfc>
  41216c:	mov	x19, x0
  412170:	cmp	w1, #0x2
  412174:	b.eq	41218c <ascii_strlower_n@plt+0xdd7c>  // b.none
  412178:	cmp	w1, #0xa
  41217c:	b.eq	4121b0 <ascii_strlower_n@plt+0xdda0>  // b.none
  412180:	cbz	w1, 41222c <ascii_strlower_n@plt+0xde1c>
  412184:	mov	w0, #0xffffff9f            	// #-97
  412188:	b	4121e0 <ascii_strlower_n@plt+0xddd0>
  41218c:	mov	w0, #0x1                   	// #1
  412190:	mov	w1, #0x1                   	// #1
  412194:	mov	x2, x3
  412198:	bl	411e10 <ascii_strlower_n@plt+0xda00>
  41219c:	cbz	x0, 4121dc <ascii_strlower_n@plt+0xddcc>
  4121a0:	ldr	w9, [x20]
  4121a4:	mov	x8, x0
  4121a8:	str	w9, [x0, #80]
  4121ac:	b	4121d0 <ascii_strlower_n@plt+0xddc0>
  4121b0:	mov	w0, #0x1                   	// #1
  4121b4:	mov	w1, #0x1c                  	// #28
  4121b8:	mov	x2, x3
  4121bc:	bl	411e10 <ascii_strlower_n@plt+0xda00>
  4121c0:	cbz	x0, 4121dc <ascii_strlower_n@plt+0xddcc>
  4121c4:	ldr	q0, [x20]
  4121c8:	mov	x8, x0
  4121cc:	str	q0, [x0, #80]
  4121d0:	mov	w0, wzr
  4121d4:	str	x8, [x19]
  4121d8:	b	4121e0 <ascii_strlower_n@plt+0xddd0>
  4121dc:	mov	w0, #0xfffffff4            	// #-12
  4121e0:	ldp	x20, x19, [sp, #16]
  4121e4:	ldp	x29, x30, [sp], #32
  4121e8:	ret
  4121ec:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  4121f0:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4121f4:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4121f8:	add	x1, x1, #0xc0e
  4121fc:	add	x2, x2, #0x148
  412200:	add	x4, x4, #0x678
  412204:	mov	w3, #0x212                 	// #530
  412208:	bl	403aa0 <log_assert_failed_realm@plt>
  41220c:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  412210:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  412214:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  412218:	add	x1, x1, #0x60e
  41221c:	add	x2, x2, #0x148
  412220:	add	x4, x4, #0x678
  412224:	mov	w3, #0x213                 	// #531
  412228:	b	412248 <ascii_strlower_n@plt+0xde38>
  41222c:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  412230:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  412234:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  412238:	add	x1, x1, #0x6e2
  41223c:	add	x2, x2, #0x148
  412240:	add	x4, x4, #0x678
  412244:	mov	w3, #0x214                 	// #532
  412248:	mov	w0, wzr
  41224c:	bl	403aa0 <log_assert_failed_realm@plt>
  412250:	stp	x29, x30, [sp, #-32]!
  412254:	stp	x20, x19, [sp, #16]
  412258:	ldrb	w8, [x0, #48]
  41225c:	ldrb	w9, [x1, #48]
  412260:	mov	x29, sp
  412264:	and	w8, w8, #0x1
  412268:	and	w9, w9, #0x1
  41226c:	cmp	w8, w9
  412270:	b.ne	41273c <ascii_strlower_n@plt+0xe32c>  // b.any
  412274:	mov	x19, x1
  412278:	mov	x20, x0
  41227c:	cbnz	w8, 412370 <ascii_strlower_n@plt+0xdf60>
  412280:	ldr	x8, [x20, #8]
  412284:	ldrh	w8, [x8, #6]
  412288:	cmp	w8, #0x1b
  41228c:	b.le	4122e0 <ascii_strlower_n@plt+0xded0>
  412290:	sub	w9, w8, #0x1c
  412294:	cmp	w9, #0x18
  412298:	b.hi	412318 <ascii_strlower_n@plt+0xdf08>  // b.pmore
  41229c:	adrp	x8, 41e000 <ascii_strlower_n@plt+0x19bf0>
  4122a0:	add	x8, x8, #0x784
  4122a4:	adr	x10, 4122b4 <ascii_strlower_n@plt+0xdea4>
  4122a8:	ldrh	w11, [x8, x9, lsl #1]
  4122ac:	add	x10, x10, x11, lsl #2
  4122b0:	br	x10
  4122b4:	ldrh	w8, [x20, #80]
  4122b8:	ldrh	w9, [x19, #80]
  4122bc:	cmp	w8, w9
  4122c0:	b.ne	41273c <ascii_strlower_n@plt+0xe32c>  // b.any
  4122c4:	ldrb	w8, [x20, #82]
  4122c8:	ldrb	w9, [x19, #82]
  4122cc:	cmp	w8, w9
  4122d0:	b.ne	41273c <ascii_strlower_n@plt+0xe32c>  // b.any
  4122d4:	ldrb	w8, [x20, #83]
  4122d8:	ldrb	w9, [x19, #83]
  4122dc:	b	4126ec <ascii_strlower_n@plt+0xe2dc>
  4122e0:	sub	w8, w8, #0x1
  4122e4:	cmp	w8, #0xf
  4122e8:	b.hi	412370 <ascii_strlower_n@plt+0xdf60>  // b.pmore
  4122ec:	adrp	x9, 41e000 <ascii_strlower_n@plt+0x19bf0>
  4122f0:	add	x9, x9, #0x773
  4122f4:	adr	x10, 412304 <ascii_strlower_n@plt+0xdef4>
  4122f8:	ldrb	w11, [x9, x8]
  4122fc:	add	x10, x10, x11, lsl #2
  412300:	br	x10
  412304:	ldr	x0, [x20, #80]
  412308:	ldr	x1, [x19, #80]
  41230c:	ldp	x20, x19, [sp, #16]
  412310:	ldp	x29, x30, [sp], #32
  412314:	b	404250 <dns_name_equal@plt>
  412318:	cmp	w8, #0x63
  41231c:	b.eq	4123a4 <ascii_strlower_n@plt+0xdf94>  // b.none
  412320:	cmp	w8, #0x101
  412324:	b.ne	412370 <ascii_strlower_n@plt+0xdf60>  // b.any
  412328:	ldrb	w8, [x20, #80]
  41232c:	ldrb	w9, [x19, #80]
  412330:	cmp	w8, w9
  412334:	b.ne	41273c <ascii_strlower_n@plt+0xe32c>  // b.any
  412338:	ldr	x0, [x20, #88]
  41233c:	ldr	x1, [x19, #88]
  412340:	bl	403b40 <strcmp@plt>
  412344:	cbnz	w0, 41273c <ascii_strlower_n@plt+0xe32c>
  412348:	ldr	x2, [x20, #104]
  41234c:	ldr	x8, [x19, #104]
  412350:	cmp	x2, x8
  412354:	b.ne	41273c <ascii_strlower_n@plt+0xe32c>  // b.any
  412358:	cbz	x2, 41274c <ascii_strlower_n@plt+0xe33c>
  41235c:	ldr	x0, [x20, #96]
  412360:	cbz	x0, 412754 <ascii_strlower_n@plt+0xe344>
  412364:	ldr	x1, [x19, #96]
  412368:	cbnz	x1, 412394 <ascii_strlower_n@plt+0xdf84>
  41236c:	b	412718 <ascii_strlower_n@plt+0xe308>
  412370:	ldr	x2, [x20, #88]
  412374:	ldr	x8, [x19, #88]
  412378:	cmp	x2, x8
  41237c:	b.ne	41273c <ascii_strlower_n@plt+0xe32c>  // b.any
  412380:	cbz	x2, 41274c <ascii_strlower_n@plt+0xe33c>
  412384:	ldr	x0, [x20, #80]
  412388:	cbz	x0, 412754 <ascii_strlower_n@plt+0xe344>
  41238c:	ldr	x1, [x19, #80]
  412390:	cbz	x1, 412718 <ascii_strlower_n@plt+0xe308>
  412394:	bl	4042b0 <bcmp@plt>
  412398:	cmp	w0, #0x0
  41239c:	cset	w0, eq  // eq = none
  4123a0:	b	412740 <ascii_strlower_n@plt+0xe330>
  4123a4:	ldr	x0, [x20, #80]
  4123a8:	ldr	x1, [x19, #80]
  4123ac:	bl	412794 <ascii_strlower_n@plt+0xe384>
  4123b0:	b	4126bc <ascii_strlower_n@plt+0xe2ac>
  4123b4:	ldrh	w8, [x20, #80]
  4123b8:	ldrh	w9, [x19, #80]
  4123bc:	cmp	w8, w9
  4123c0:	b.ne	41273c <ascii_strlower_n@plt+0xe32c>  // b.any
  4123c4:	ldr	x0, [x20, #88]
  4123c8:	ldr	x1, [x19, #88]
  4123cc:	b	41230c <ascii_strlower_n@plt+0xdefc>
  4123d0:	ldr	x0, [x20, #80]
  4123d4:	ldr	x1, [x19, #80]
  4123d8:	bl	4042c0 <strcasecmp@plt>
  4123dc:	cbnz	w0, 41273c <ascii_strlower_n@plt+0xe32c>
  4123e0:	ldr	x0, [x20, #88]
  4123e4:	ldr	x1, [x19, #88]
  4123e8:	bl	4042c0 <strcasecmp@plt>
  4123ec:	b	412398 <ascii_strlower_n@plt+0xdf88>
  4123f0:	ldr	x0, [x20, #80]
  4123f4:	ldr	x1, [x19, #80]
  4123f8:	bl	404250 <dns_name_equal@plt>
  4123fc:	cmp	w0, #0x1
  412400:	b.lt	412740 <ascii_strlower_n@plt+0xe330>  // b.tstop
  412404:	ldr	x0, [x20, #88]
  412408:	ldr	x1, [x19, #88]
  41240c:	bl	404250 <dns_name_equal@plt>
  412410:	cmp	w0, #0x1
  412414:	b.lt	412740 <ascii_strlower_n@plt+0xe330>  // b.tstop
  412418:	ldr	w8, [x20, #96]
  41241c:	ldr	w9, [x19, #96]
  412420:	cmp	w8, w9
  412424:	b.ne	41273c <ascii_strlower_n@plt+0xe32c>  // b.any
  412428:	ldr	w8, [x20, #100]
  41242c:	ldr	w9, [x19, #100]
  412430:	cmp	w8, w9
  412434:	b.ne	41273c <ascii_strlower_n@plt+0xe32c>  // b.any
  412438:	ldr	w8, [x20, #104]
  41243c:	ldr	w9, [x19, #104]
  412440:	cmp	w8, w9
  412444:	b.ne	41273c <ascii_strlower_n@plt+0xe32c>  // b.any
  412448:	ldr	w8, [x20, #108]
  41244c:	ldr	w9, [x19, #108]
  412450:	cmp	w8, w9
  412454:	b.ne	41273c <ascii_strlower_n@plt+0xe32c>  // b.any
  412458:	ldr	w8, [x20, #112]
  41245c:	ldr	w9, [x19, #112]
  412460:	b	41246c <ascii_strlower_n@plt+0xe05c>
  412464:	ldr	w8, [x20, #80]
  412468:	ldr	w9, [x19, #80]
  41246c:	cmp	w8, w9
  412470:	b	41239c <ascii_strlower_n@plt+0xdf8c>
  412474:	ldrb	w8, [x20, #80]
  412478:	ldrb	w9, [x19, #80]
  41247c:	cmp	w8, w9
  412480:	b.ne	41273c <ascii_strlower_n@plt+0xe32c>  // b.any
  412484:	ldrb	w8, [x20, #81]
  412488:	ldrb	w9, [x19, #81]
  41248c:	b	4126ec <ascii_strlower_n@plt+0xe2dc>
  412490:	ldrh	w8, [x20, #80]
  412494:	ldrh	w9, [x19, #80]
  412498:	cmp	w8, w9
  41249c:	b.ne	41273c <ascii_strlower_n@plt+0xe32c>  // b.any
  4124a0:	ldrb	w8, [x20, #82]
  4124a4:	ldrb	w9, [x19, #82]
  4124a8:	cmp	w8, w9
  4124ac:	b.ne	41273c <ascii_strlower_n@plt+0xe32c>  // b.any
  4124b0:	ldrb	w8, [x20, #83]
  4124b4:	ldrb	w9, [x19, #83]
  4124b8:	cmp	w8, w9
  4124bc:	b.ne	41273c <ascii_strlower_n@plt+0xe32c>  // b.any
  4124c0:	ldr	w8, [x20, #84]
  4124c4:	ldr	w9, [x19, #84]
  4124c8:	cmp	w8, w9
  4124cc:	b.ne	41273c <ascii_strlower_n@plt+0xe32c>  // b.any
  4124d0:	ldr	w8, [x20, #88]
  4124d4:	ldr	w9, [x19, #88]
  4124d8:	cmp	w8, w9
  4124dc:	b.ne	41273c <ascii_strlower_n@plt+0xe32c>  // b.any
  4124e0:	ldr	w8, [x20, #92]
  4124e4:	ldr	w9, [x19, #92]
  4124e8:	cmp	w8, w9
  4124ec:	b.ne	41273c <ascii_strlower_n@plt+0xe32c>  // b.any
  4124f0:	ldrh	w8, [x20, #96]
  4124f4:	ldrh	w9, [x19, #96]
  4124f8:	cmp	w8, w9
  4124fc:	b.ne	41273c <ascii_strlower_n@plt+0xe32c>  // b.any
  412500:	ldr	x2, [x20, #120]
  412504:	ldr	x8, [x19, #120]
  412508:	cmp	x2, x8
  41250c:	b.ne	41273c <ascii_strlower_n@plt+0xe32c>  // b.any
  412510:	cbz	x2, 41252c <ascii_strlower_n@plt+0xe11c>
  412514:	ldr	x0, [x20, #112]
  412518:	cbz	x0, 412754 <ascii_strlower_n@plt+0xe344>
  41251c:	ldr	x1, [x19, #112]
  412520:	cbz	x1, 412718 <ascii_strlower_n@plt+0xe308>
  412524:	bl	4042b0 <bcmp@plt>
  412528:	cbnz	w0, 41273c <ascii_strlower_n@plt+0xe32c>
  41252c:	ldr	x0, [x20, #104]
  412530:	ldr	x1, [x19, #104]
  412534:	bl	404250 <dns_name_equal@plt>
  412538:	cmp	w0, #0x0
  41253c:	cset	w0, ne  // ne = any
  412540:	b	412740 <ascii_strlower_n@plt+0xe330>
  412544:	ldp	x8, x9, [x20, #80]
  412548:	ldp	x10, x11, [x19, #80]
  41254c:	eor	x8, x8, x10
  412550:	eor	x9, x9, x11
  412554:	orr	x8, x8, x9
  412558:	cmp	x8, #0x0
  41255c:	b	41239c <ascii_strlower_n@plt+0xdf8c>
  412560:	ldr	x0, [x20, #88]
  412564:	ldr	x1, [x19, #88]
  412568:	bl	404250 <dns_name_equal@plt>
  41256c:	cmp	w0, #0x1
  412570:	b.lt	412740 <ascii_strlower_n@plt+0xe330>  // b.tstop
  412574:	ldrh	w8, [x20, #80]
  412578:	ldrh	w9, [x19, #80]
  41257c:	cmp	w8, w9
  412580:	b.ne	41273c <ascii_strlower_n@plt+0xe32c>  // b.any
  412584:	ldrh	w8, [x20, #82]
  412588:	ldrh	w9, [x19, #82]
  41258c:	cmp	w8, w9
  412590:	b.ne	41273c <ascii_strlower_n@plt+0xe32c>  // b.any
  412594:	ldrh	w8, [x20, #84]
  412598:	ldrh	w9, [x19, #84]
  41259c:	b	41246c <ascii_strlower_n@plt+0xe05c>
  4125a0:	ldrb	w8, [x20, #80]
  4125a4:	ldrb	w9, [x19, #80]
  4125a8:	cmp	w8, w9
  4125ac:	b.ne	412774 <ascii_strlower_n@plt+0xe364>  // b.any
  4125b0:	ldrb	w8, [x20, #81]
  4125b4:	ldrb	w9, [x19, #81]
  4125b8:	cmp	w8, w9
  4125bc:	b.ne	41273c <ascii_strlower_n@plt+0xe32c>  // b.any
  4125c0:	ldrb	w8, [x20, #82]
  4125c4:	ldrb	w9, [x19, #82]
  4125c8:	cmp	w8, w9
  4125cc:	b.ne	41273c <ascii_strlower_n@plt+0xe32c>  // b.any
  4125d0:	ldrb	w8, [x20, #83]
  4125d4:	ldrb	w9, [x19, #83]
  4125d8:	cmp	w8, w9
  4125dc:	b.ne	41273c <ascii_strlower_n@plt+0xe32c>  // b.any
  4125e0:	ldr	w8, [x20, #84]
  4125e4:	ldr	w9, [x19, #84]
  4125e8:	cmp	w8, w9
  4125ec:	b.ne	41273c <ascii_strlower_n@plt+0xe32c>  // b.any
  4125f0:	ldr	w8, [x20, #88]
  4125f4:	ldr	w9, [x19, #88]
  4125f8:	cmp	w8, w9
  4125fc:	b.ne	41273c <ascii_strlower_n@plt+0xe32c>  // b.any
  412600:	ldr	w8, [x20, #92]
  412604:	ldr	w9, [x19, #92]
  412608:	b	41246c <ascii_strlower_n@plt+0xe05c>
  41260c:	ldrb	w8, [x20, #80]
  412610:	ldrb	w9, [x19, #80]
  412614:	cmp	w8, w9
  412618:	b.ne	41273c <ascii_strlower_n@plt+0xe32c>  // b.any
  41261c:	ldrb	w8, [x20, #81]
  412620:	ldrb	w9, [x19, #81]
  412624:	cmp	w8, w9
  412628:	b.ne	41273c <ascii_strlower_n@plt+0xe32c>  // b.any
  41262c:	ldrh	w8, [x20, #82]
  412630:	ldrh	w9, [x19, #82]
  412634:	cmp	w8, w9
  412638:	b.ne	41273c <ascii_strlower_n@plt+0xe32c>  // b.any
  41263c:	ldr	x2, [x20, #96]
  412640:	ldr	x8, [x19, #96]
  412644:	cmp	x2, x8
  412648:	b.ne	41273c <ascii_strlower_n@plt+0xe32c>  // b.any
  41264c:	cbz	x2, 412668 <ascii_strlower_n@plt+0xe258>
  412650:	ldr	x0, [x20, #88]
  412654:	cbz	x0, 412754 <ascii_strlower_n@plt+0xe344>
  412658:	ldr	x1, [x19, #88]
  41265c:	cbz	x1, 412718 <ascii_strlower_n@plt+0xe308>
  412660:	bl	4042b0 <bcmp@plt>
  412664:	cbnz	w0, 41273c <ascii_strlower_n@plt+0xe32c>
  412668:	ldr	x2, [x20, #112]
  41266c:	ldr	x8, [x19, #112]
  412670:	cmp	x2, x8
  412674:	b.ne	41273c <ascii_strlower_n@plt+0xe32c>  // b.any
  412678:	cbz	x2, 412694 <ascii_strlower_n@plt+0xe284>
  41267c:	ldr	x0, [x20, #104]
  412680:	cbz	x0, 412754 <ascii_strlower_n@plt+0xe344>
  412684:	ldr	x1, [x19, #104]
  412688:	cbz	x1, 412718 <ascii_strlower_n@plt+0xe308>
  41268c:	bl	4042b0 <bcmp@plt>
  412690:	cbnz	w0, 41273c <ascii_strlower_n@plt+0xe32c>
  412694:	ldr	x0, [x20, #120]
  412698:	ldr	x1, [x19, #120]
  41269c:	b	4126b8 <ascii_strlower_n@plt+0xe2a8>
  4126a0:	ldr	x0, [x20, #80]
  4126a4:	ldr	x1, [x19, #80]
  4126a8:	bl	404250 <dns_name_equal@plt>
  4126ac:	cbz	w0, 412740 <ascii_strlower_n@plt+0xe330>
  4126b0:	ldr	x0, [x20, #88]
  4126b4:	ldr	x1, [x19, #88]
  4126b8:	bl	4042d0 <bitmap_equal@plt>
  4126bc:	and	w0, w0, #0x1
  4126c0:	b	412740 <ascii_strlower_n@plt+0xe330>
  4126c4:	ldrb	w8, [x20, #80]
  4126c8:	ldrb	w9, [x19, #80]
  4126cc:	cmp	w8, w9
  4126d0:	b.ne	41273c <ascii_strlower_n@plt+0xe32c>  // b.any
  4126d4:	ldrb	w8, [x20, #81]
  4126d8:	ldrb	w9, [x19, #81]
  4126dc:	cmp	w8, w9
  4126e0:	b.ne	41273c <ascii_strlower_n@plt+0xe32c>  // b.any
  4126e4:	ldrb	w8, [x20, #82]
  4126e8:	ldrb	w9, [x19, #82]
  4126ec:	cmp	w8, w9
  4126f0:	b.ne	41273c <ascii_strlower_n@plt+0xe32c>  // b.any
  4126f4:	ldr	x2, [x20, #96]
  4126f8:	ldr	x8, [x19, #96]
  4126fc:	cmp	x2, x8
  412700:	b.ne	41273c <ascii_strlower_n@plt+0xe32c>  // b.any
  412704:	cbz	x2, 41274c <ascii_strlower_n@plt+0xe33c>
  412708:	ldr	x0, [x20, #88]
  41270c:	cbz	x0, 412754 <ascii_strlower_n@plt+0xe344>
  412710:	ldr	x1, [x19, #88]
  412714:	cbnz	x1, 412394 <ascii_strlower_n@plt+0xdf84>
  412718:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  41271c:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  412720:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  412724:	add	x1, x1, #0xc6d
  412728:	add	x2, x2, #0xd6d
  41272c:	add	x4, x4, #0xc39
  412730:	mov	w3, #0x1d                  	// #29
  412734:	mov	w0, wzr
  412738:	bl	403aa0 <log_assert_failed_realm@plt>
  41273c:	mov	w0, wzr
  412740:	ldp	x20, x19, [sp, #16]
  412744:	ldp	x29, x30, [sp], #32
  412748:	ret
  41274c:	mov	w0, #0x1                   	// #1
  412750:	b	412740 <ascii_strlower_n@plt+0xe330>
  412754:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  412758:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf0>
  41275c:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  412760:	add	x1, x1, #0xc36
  412764:	add	x2, x2, #0xd6d
  412768:	add	x4, x4, #0xc39
  41276c:	mov	w3, #0x1c                  	// #28
  412770:	bl	403aa0 <log_assert_failed_realm@plt>
  412774:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  412778:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  41277c:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  412780:	add	x1, x1, #0x6e9
  412784:	add	x2, x2, #0x148
  412788:	add	x4, x4, #0x70a
  41278c:	mov	w3, #0x26d                 	// #621
  412790:	b	412734 <ascii_strlower_n@plt+0xe324>
  412794:	stp	x29, x30, [sp, #-32]!
  412798:	cmp	x0, x1
  41279c:	stp	x20, x19, [sp, #16]
  4127a0:	mov	x29, sp
  4127a4:	b.eq	4127e8 <ascii_strlower_n@plt+0xe3d8>  // b.none
  4127a8:	mov	x20, x1
  4127ac:	mov	x19, x0
  4127b0:	cbz	x19, 4127f8 <ascii_strlower_n@plt+0xe3e8>
  4127b4:	cbz	x20, 4127f8 <ascii_strlower_n@plt+0xe3e8>
  4127b8:	ldr	x2, [x19]
  4127bc:	ldr	x8, [x20]
  4127c0:	cmp	x2, x8
  4127c4:	b.ne	4127f0 <ascii_strlower_n@plt+0xe3e0>  // b.any
  4127c8:	add	x0, x19, #0x18
  4127cc:	add	x1, x20, #0x18
  4127d0:	bl	4042b0 <bcmp@plt>
  4127d4:	cbnz	w0, 4127f0 <ascii_strlower_n@plt+0xe3e0>
  4127d8:	ldr	x19, [x19, #8]
  4127dc:	ldr	x20, [x20, #8]
  4127e0:	cmp	x19, x20
  4127e4:	b.ne	4127b0 <ascii_strlower_n@plt+0xe3a0>  // b.any
  4127e8:	mov	w0, #0x1                   	// #1
  4127ec:	b	412810 <ascii_strlower_n@plt+0xe400>
  4127f0:	mov	w0, wzr
  4127f4:	b	412810 <ascii_strlower_n@plt+0xe400>
  4127f8:	cmp	x20, #0x0
  4127fc:	cset	w8, eq  // eq = none
  412800:	cmp	x19, #0x0
  412804:	cset	w9, eq  // eq = none
  412808:	eor	w8, w9, w8
  41280c:	eor	w0, w8, #0x1
  412810:	ldp	x20, x19, [sp, #16]
  412814:	ldp	x29, x30, [sp], #32
  412818:	ret
  41281c:	stp	x29, x30, [sp, #-32]!
  412820:	stp	x20, x19, [sp, #16]
  412824:	mov	x29, sp
  412828:	cbz	x0, 412878 <ascii_strlower_n@plt+0xe468>
  41282c:	mov	x19, x1
  412830:	cbz	x1, 412898 <ascii_strlower_n@plt+0xe488>
  412834:	mov	x20, x0
  412838:	cmp	x0, x19
  41283c:	b.eq	412868 <ascii_strlower_n@plt+0xe458>  // b.none
  412840:	ldr	x0, [x20, #8]
  412844:	ldr	x1, [x19, #8]
  412848:	bl	4114c0 <ascii_strlower_n@plt+0xd0b0>
  41284c:	cmp	w0, #0x1
  412850:	b.lt	41286c <ascii_strlower_n@plt+0xe45c>  // b.tstop
  412854:	mov	x0, x20
  412858:	mov	x1, x19
  41285c:	ldp	x20, x19, [sp, #16]
  412860:	ldp	x29, x30, [sp], #32
  412864:	b	412250 <ascii_strlower_n@plt+0xde40>
  412868:	mov	w0, #0x1                   	// #1
  41286c:	ldp	x20, x19, [sp, #16]
  412870:	ldp	x29, x30, [sp], #32
  412874:	ret
  412878:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  41287c:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  412880:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  412884:	add	x1, x1, #0x53d
  412888:	add	x2, x2, #0x148
  41288c:	add	x4, x4, #0x766
  412890:	mov	w3, #0x2b3                 	// #691
  412894:	bl	403aa0 <log_assert_failed_realm@plt>
  412898:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  41289c:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4128a0:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4128a4:	add	x1, x1, #0x89f
  4128a8:	add	x2, x2, #0x148
  4128ac:	add	x4, x4, #0x766
  4128b0:	mov	w3, #0x2b4                 	// #692
  4128b4:	mov	w0, wzr
  4128b8:	bl	403aa0 <log_assert_failed_realm@plt>
  4128bc:	sub	sp, sp, #0x1f0
  4128c0:	stp	x29, x30, [sp, #416]
  4128c4:	add	x29, sp, #0x180
  4128c8:	stp	d11, d10, [sp, #384]
  4128cc:	stp	d9, d8, [sp, #400]
  4128d0:	stp	x28, x25, [sp, #432]
  4128d4:	stp	x24, x23, [sp, #448]
  4128d8:	stp	x22, x21, [sp, #464]
  4128dc:	stp	x20, x19, [sp, #480]
  4128e0:	stur	xzr, [x29, #-8]
  4128e4:	cbz	x0, 4132b0 <ascii_strlower_n@plt+0xeea0>
  4128e8:	ldr	x20, [x0, #16]
  4128ec:	mov	x19, x0
  4128f0:	cbnz	x20, 413280 <ascii_strlower_n@plt+0xee70>
  4128f4:	ldr	x0, [x19, #8]
  4128f8:	add	x1, sp, #0x58
  4128fc:	mov	w2, #0x118                 	// #280
  412900:	bl	411bc8 <ascii_strlower_n@plt+0xd7b8>
  412904:	ldrb	w8, [x19, #48]
  412908:	tbnz	w8, #0, 412a70 <ascii_strlower_n@plt+0xe660>
  41290c:	ldr	x8, [x19, #8]
  412910:	ldrh	w8, [x8, #6]
  412914:	cmp	w8, #0x3c
  412918:	b.le	4129bc <ascii_strlower_n@plt+0xe5ac>
  41291c:	cmp	w8, #0x3d
  412920:	b.eq	4129fc <ascii_strlower_n@plt+0xe5ec>  // b.none
  412924:	cmp	w8, #0x63
  412928:	b.eq	412aa4 <ascii_strlower_n@plt+0xe694>  // b.none
  41292c:	cmp	w8, #0x101
  412930:	b.ne	412a70 <ascii_strlower_n@plt+0xe660>  // b.any
  412934:	ldp	x0, x1, [x19, #96]
  412938:	bl	4042e0 <octescape@plt>
  41293c:	mov	x20, x0
  412940:	cbz	x0, 413280 <ascii_strlower_n@plt+0xee70>
  412944:	ldrb	w3, [x19, #80]
  412948:	adrp	x8, 41c000 <ascii_strlower_n@plt+0x17bf0>
  41294c:	adrp	x9, 417000 <ascii_strlower_n@plt+0x12bf0>
  412950:	ldr	x4, [x19, #88]
  412954:	add	x8, x8, #0x949
  412958:	add	x9, x9, #0xff4
  41295c:	adrp	x10, 41c000 <ascii_strlower_n@plt+0x17bf0>
  412960:	cmp	w3, #0x0
  412964:	add	x10, x10, #0x95c
  412968:	adrp	x11, 41a000 <ascii_strlower_n@plt+0x15bf0>
  41296c:	csel	x6, x9, x8, eq  // eq = none
  412970:	tst	w3, #0x80
  412974:	add	x11, x11, #0x3d9
  412978:	csel	x7, x9, x10, eq  // eq = none
  41297c:	tst	w3, #0x7f
  412980:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  412984:	and	w12, w3, #0x7f
  412988:	csel	x8, x9, x11, eq  // eq = none
  41298c:	add	x1, x1, #0x931
  412990:	sub	x0, x29, #0x10
  412994:	add	x2, sp, #0x58
  412998:	mov	x5, x20
  41299c:	str	w12, [sp, #8]
  4129a0:	str	x8, [sp]
  4129a4:	bl	403e20 <asprintf@plt>
  4129a8:	mov	w21, w0
  4129ac:	mov	x0, x20
  4129b0:	bl	403a30 <free@plt>
  4129b4:	tbz	w21, #31, 412bf4 <ascii_strlower_n@plt+0xe7e4>
  4129b8:	b	41327c <ascii_strlower_n@plt+0xee6c>
  4129bc:	sub	w9, w8, #0x1c
  4129c0:	cmp	w9, #0x18
  4129c4:	b.hi	412a44 <ascii_strlower_n@plt+0xe634>  // b.pmore
  4129c8:	adrp	x8, 41e000 <ascii_strlower_n@plt+0x19bf0>
  4129cc:	add	x8, x8, #0x7d6
  4129d0:	adr	x10, 4129e0 <ascii_strlower_n@plt+0xe5d0>
  4129d4:	ldrh	w11, [x8, x9, lsl #1]
  4129d8:	add	x10, x10, x11, lsl #2
  4129dc:	br	x10
  4129e0:	add	x1, x19, #0x50
  4129e4:	sub	x2, x29, #0x8
  4129e8:	mov	w0, #0xa                   	// #10
  4129ec:	bl	403f60 <in_addr_to_string@plt>
  4129f0:	tbnz	w0, #31, 41327c <ascii_strlower_n@plt+0xee6c>
  4129f4:	ldur	x2, [x29, #-8]
  4129f8:	b	412bd8 <ascii_strlower_n@plt+0xe7c8>
  4129fc:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  412a00:	add	x1, x1, #0x371
  412a04:	sub	x0, x29, #0x10
  412a08:	add	x2, sp, #0x58
  412a0c:	bl	403e20 <asprintf@plt>
  412a10:	tbnz	w0, #31, 41327c <ascii_strlower_n@plt+0xee6c>
  412a14:	ldp	x21, x22, [x19, #80]
  412a18:	mov	w20, w0
  412a1c:	bl	4042f0 <columns@plt>
  412a20:	mov	w5, w0
  412a24:	sub	x0, x29, #0x10
  412a28:	mov	w4, #0x8                   	// #8
  412a2c:	mov	w1, w20
  412a30:	mov	x2, x21
  412a34:	mov	x3, x22
  412a38:	bl	404300 <base64_append@plt>
  412a3c:	tbz	w0, #31, 412bf4 <ascii_strlower_n@plt+0xe7e4>
  412a40:	b	41327c <ascii_strlower_n@plt+0xee6c>
  412a44:	sub	w8, w8, #0x1
  412a48:	cmp	w8, #0xf
  412a4c:	b.hi	412a70 <ascii_strlower_n@plt+0xe660>  // b.pmore
  412a50:	adrp	x9, 41e000 <ascii_strlower_n@plt+0x19bf0>
  412a54:	add	x9, x9, #0x7b6
  412a58:	adr	x10, 412a68 <ascii_strlower_n@plt+0xe658>
  412a5c:	ldrh	w11, [x9, x8, lsl #1]
  412a60:	add	x10, x10, x11, lsl #2
  412a64:	br	x10
  412a68:	ldr	x2, [x19, #80]
  412a6c:	b	412bd8 <ascii_strlower_n@plt+0xe7c8>
  412a70:	ldp	x0, x1, [x19, #80]
  412a74:	bl	404310 <hexmem@plt>
  412a78:	stur	x0, [x29, #-8]
  412a7c:	cbz	x0, 41327c <ascii_strlower_n@plt+0xee6c>
  412a80:	ldr	x3, [x19, #88]
  412a84:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  412a88:	mov	x4, x0
  412a8c:	add	x1, x1, #0x966
  412a90:	sub	x0, x29, #0x10
  412a94:	add	x2, sp, #0x58
  412a98:	bl	403e20 <asprintf@plt>
  412a9c:	tbz	w0, #31, 412bf4 <ascii_strlower_n@plt+0xe7e4>
  412aa0:	b	41327c <ascii_strlower_n@plt+0xee6c>
  412aa4:	ldr	x20, [x19, #80]
  412aa8:	cbz	x20, 412ad4 <ascii_strlower_n@plt+0xe6c4>
  412aac:	mov	w8, #0x1                   	// #1
  412ab0:	mov	x9, x20
  412ab4:	ldp	x10, x9, [x9]
  412ab8:	mov	w11, #0x3                   	// #3
  412abc:	bfi	x11, x10, #2, #62
  412ac0:	add	x8, x11, x8
  412ac4:	cbnz	x9, 412ab4 <ascii_strlower_n@plt+0xe6a4>
  412ac8:	cmp	x8, #0x0
  412acc:	csinc	x0, x8, xzr, ne  // ne = any
  412ad0:	b	412ad8 <ascii_strlower_n@plt+0xe6c8>
  412ad4:	mov	w0, #0x1                   	// #1
  412ad8:	bl	4040d0 <malloc@plt>
  412adc:	cbz	x0, 412c00 <ascii_strlower_n@plt+0xe7f0>
  412ae0:	mov	x2, x0
  412ae4:	mov	x11, x0
  412ae8:	cbz	x20, 412bd0 <ascii_strlower_n@plt+0xe7c0>
  412aec:	mov	w10, #0x851f                	// #34079
  412af0:	mov	w12, #0xcccd                	// #52429
  412af4:	mov	w8, #0x22                  	// #34
  412af8:	mov	w9, #0x5c                  	// #92
  412afc:	movk	w10, #0x51eb, lsl #16
  412b00:	movk	w12, #0xcccc, lsl #16
  412b04:	mov	w13, #0xa                   	// #10
  412b08:	mov	w14, #0x20                  	// #32
  412b0c:	mov	x11, x2
  412b10:	mov	x15, x20
  412b14:	cmp	x15, x20
  412b18:	b.eq	412b20 <ascii_strlower_n@plt+0xe710>  // b.none
  412b1c:	strb	w14, [x11], #1
  412b20:	strb	w8, [x11], #1
  412b24:	ldr	x16, [x15]
  412b28:	cbz	x16, 412bc4 <ascii_strlower_n@plt+0xe7b4>
  412b2c:	mov	x16, xzr
  412b30:	add	x17, x15, #0x18
  412b34:	ldrb	w18, [x17, x16]
  412b38:	cmp	w18, #0x22
  412b3c:	b.eq	412b5c <ascii_strlower_n@plt+0xe74c>  // b.none
  412b40:	sub	w0, w18, #0x20
  412b44:	and	w0, w0, #0xff
  412b48:	cmp	w0, #0x5f
  412b4c:	b.cs	412b5c <ascii_strlower_n@plt+0xe74c>  // b.hs, b.nlast
  412b50:	add	x0, x11, #0x1
  412b54:	strb	w18, [x11]
  412b58:	b	412bb0 <ascii_strlower_n@plt+0xe7a0>
  412b5c:	strb	w9, [x11]
  412b60:	ldrb	w18, [x17, x16]
  412b64:	mul	x18, x18, x10
  412b68:	lsr	x18, x18, #37
  412b6c:	orr	w18, w18, #0x30
  412b70:	strb	w18, [x11, #1]
  412b74:	ldrb	w18, [x17, x16]
  412b78:	mul	x18, x18, x12
  412b7c:	lsr	x18, x18, #35
  412b80:	mul	x0, x18, x12
  412b84:	lsr	x0, x0, #35
  412b88:	msub	w18, w0, w13, w18
  412b8c:	orr	w18, w18, #0x30
  412b90:	strb	w18, [x11, #2]
  412b94:	ldrb	w18, [x17, x16]
  412b98:	umull	x0, w18, w12
  412b9c:	lsr	x0, x0, #35
  412ba0:	msub	w18, w0, w13, w18
  412ba4:	orr	w18, w18, #0x30
  412ba8:	add	x0, x11, #0x4
  412bac:	strb	w18, [x11, #3]
  412bb0:	ldr	x18, [x15]
  412bb4:	add	x16, x16, #0x1
  412bb8:	mov	x11, x0
  412bbc:	cmp	x16, x18
  412bc0:	b.cc	412b34 <ascii_strlower_n@plt+0xe724>  // b.lo, b.ul, b.last
  412bc4:	strb	w8, [x11], #1
  412bc8:	ldr	x15, [x15, #8]
  412bcc:	cbnz	x15, 412b14 <ascii_strlower_n@plt+0xe704>
  412bd0:	strb	wzr, [x11]
  412bd4:	stur	x2, [x29, #-8]
  412bd8:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  412bdc:	add	x1, x1, #0x3d9
  412be0:	add	x0, sp, #0x58
  412be4:	mov	x3, xzr
  412be8:	bl	403f70 <strjoin_real@plt>
  412bec:	stur	x0, [x29, #-16]
  412bf0:	cbz	x0, 41327c <ascii_strlower_n@plt+0xee6c>
  412bf4:	ldur	x20, [x29, #-16]
  412bf8:	str	x20, [x19, #16]
  412bfc:	b	413280 <ascii_strlower_n@plt+0xee70>
  412c00:	mov	x20, xzr
  412c04:	stur	xzr, [x29, #-8]
  412c08:	b	413280 <ascii_strlower_n@plt+0xee70>
  412c0c:	ldr	x1, [x19, #96]
  412c10:	cbz	x1, 41315c <ascii_strlower_n@plt+0xed4c>
  412c14:	ldr	x0, [x19, #88]
  412c18:	bl	404310 <hexmem@plt>
  412c1c:	mov	x20, x0
  412c20:	cbnz	x0, 413160 <ascii_strlower_n@plt+0xed50>
  412c24:	b	413280 <ascii_strlower_n@plt+0xee70>
  412c28:	ldp	x0, x1, [x19, #88]
  412c2c:	bl	404310 <hexmem@plt>
  412c30:	stur	x0, [x29, #-8]
  412c34:	cbz	x0, 41327c <ascii_strlower_n@plt+0xee6c>
  412c38:	ldrh	w3, [x19, #80]
  412c3c:	ldrb	w4, [x19, #82]
  412c40:	ldrb	w5, [x19, #83]
  412c44:	mov	x6, x0
  412c48:	b	412d68 <ascii_strlower_n@plt+0xe958>
  412c4c:	ldrb	w8, [x19, #80]
  412c50:	cbnz	w8, 4132d0 <ascii_strlower_n@plt+0xeec0>
  412c54:	ldp	w23, w20, [x19, #84]
  412c58:	ldr	w10, [x19, #92]
  412c5c:	ldrb	w8, [x19, #81]
  412c60:	ldrb	w25, [x19, #82]
  412c64:	ldrb	w24, [x19, #83]
  412c68:	mov	w11, #0x80000000            	// #-2147483648
  412c6c:	mov	w9, #0x967f                	// #38527
  412c70:	eor	w12, w23, #0x80000000
  412c74:	sub	w13, w11, w23
  412c78:	cmp	w23, #0x0
  412c7c:	movk	w9, #0x98, lsl #16
  412c80:	csel	w21, w12, w13, lt  // lt = tstop
  412c84:	eor	w12, w20, #0x80000000
  412c88:	sub	w11, w11, w20
  412c8c:	cmp	w20, #0x0
  412c90:	csel	w22, w12, w11, lt  // lt = tstop
  412c94:	cmp	w10, w9
  412c98:	b.ls	412ff4 <ascii_strlower_n@plt+0xebe4>  // b.plast
  412c9c:	mov	w9, #0x6980                	// #27008
  412ca0:	movk	w9, #0xff67, lsl #16
  412ca4:	add	w9, w10, w9
  412ca8:	ucvtf	d8, w9
  412cac:	b	413004 <ascii_strlower_n@plt+0xebf4>
  412cb0:	ldr	x0, [x19, #88]
  412cb4:	bl	4133f4 <ascii_strlower_n@plt+0xefe4>
  412cb8:	stur	x0, [x29, #-8]
  412cbc:	cbz	x0, 41327c <ascii_strlower_n@plt+0xee6c>
  412cc0:	ldr	x3, [x19, #80]
  412cc4:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  412cc8:	mov	x4, x0
  412ccc:	add	x1, x1, #0x8b2
  412cd0:	b	412a90 <ascii_strlower_n@plt+0xe680>
  412cd4:	ldrb	w0, [x19, #80]
  412cd8:	bl	417358 <ascii_strlower_n@plt+0x12f48>
  412cdc:	ldrb	w8, [x19, #81]
  412ce0:	mov	x20, x0
  412ce4:	mov	w0, w8
  412ce8:	bl	417398 <ascii_strlower_n@plt+0x12f88>
  412cec:	ldrb	w8, [x19, #82]
  412cf0:	mov	x21, x0
  412cf4:	mov	w0, w8
  412cf8:	bl	4173d8 <ascii_strlower_n@plt+0x12fc8>
  412cfc:	ldp	x8, x1, [x19, #88]
  412d00:	mov	x22, x0
  412d04:	mov	x0, x8
  412d08:	bl	404310 <hexmem@plt>
  412d0c:	stur	x0, [x29, #-8]
  412d10:	cbz	x0, 41327c <ascii_strlower_n@plt+0xee6c>
  412d14:	ldrb	w3, [x19, #80]
  412d18:	ldrb	w4, [x19, #81]
  412d1c:	ldrb	w5, [x19, #82]
  412d20:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  412d24:	mov	x6, x0
  412d28:	add	x1, x1, #0x8d2
  412d2c:	sub	x0, x29, #0x10
  412d30:	add	x2, sp, #0x58
  412d34:	mov	x7, x20
  412d38:	stp	x21, x22, [sp]
  412d3c:	bl	403e20 <asprintf@plt>
  412d40:	tbz	w0, #31, 412bf4 <ascii_strlower_n@plt+0xe7e4>
  412d44:	b	41327c <ascii_strlower_n@plt+0xee6c>
  412d48:	ldr	x8, [x19, #88]
  412d4c:	ldrh	w3, [x19, #80]
  412d50:	ldrh	w4, [x19, #82]
  412d54:	ldrh	w5, [x19, #84]
  412d58:	adrp	x9, 419000 <ascii_strlower_n@plt+0x14bf0>
  412d5c:	add	x9, x9, #0xdf2
  412d60:	cmp	x8, #0x0
  412d64:	csel	x6, x9, x8, eq  // eq = none
  412d68:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  412d6c:	add	x1, x1, #0x7f9
  412d70:	sub	x0, x29, #0x10
  412d74:	add	x2, sp, #0x58
  412d78:	bl	403e20 <asprintf@plt>
  412d7c:	tbz	w0, #31, 412bf4 <ascii_strlower_n@plt+0xe7e4>
  412d80:	b	41327c <ascii_strlower_n@plt+0xee6c>
  412d84:	mov	w1, #0x1                   	// #1
  412d88:	mov	x0, x19
  412d8c:	str	xzr, [sp, #64]
  412d90:	bl	417418 <ascii_strlower_n@plt+0x13008>
  412d94:	ldrb	w8, [x19, #83]
  412d98:	mov	w21, w0
  412d9c:	add	x1, sp, #0x40
  412da0:	mov	w0, w8
  412da4:	bl	4132f4 <ascii_strlower_n@plt+0xeee4>
  412da8:	tbnz	w0, #31, 4131e0 <ascii_strlower_n@plt+0xedd0>
  412dac:	ldr	x20, [sp, #64]
  412db0:	ldrh	w3, [x19, #80]
  412db4:	ldrb	w4, [x19, #82]
  412db8:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  412dbc:	add	x1, x1, #0x83e
  412dc0:	sub	x0, x29, #0x10
  412dc4:	add	x2, sp, #0x58
  412dc8:	mov	x5, x20
  412dcc:	bl	403e20 <asprintf@plt>
  412dd0:	tbnz	w0, #31, 413274 <ascii_strlower_n@plt+0xee64>
  412dd4:	ldp	x23, x24, [x19, #88]
  412dd8:	mov	w22, w0
  412ddc:	bl	4042f0 <columns@plt>
  412de0:	mov	w5, w0
  412de4:	sub	x0, x29, #0x10
  412de8:	mov	w4, #0x8                   	// #8
  412dec:	mov	w1, w22
  412df0:	mov	x2, x23
  412df4:	mov	x3, x24
  412df8:	bl	404300 <base64_append@plt>
  412dfc:	tbnz	w0, #31, 413274 <ascii_strlower_n@plt+0xee64>
  412e00:	ldrh	w8, [x19, #80]
  412e04:	adrp	x9, 41c000 <ascii_strlower_n@plt+0x17bf0>
  412e08:	adrp	x10, 417000 <ascii_strlower_n@plt+0x12bf0>
  412e0c:	ldur	x2, [x29, #-16]
  412e10:	add	x9, x9, #0x87c
  412e14:	add	x10, x10, #0xff4
  412e18:	adrp	x11, 41c000 <ascii_strlower_n@plt+0x17bf0>
  412e1c:	tst	w8, #0x1
  412e20:	add	x11, x11, #0x881
  412e24:	adrp	x12, 41c000 <ascii_strlower_n@plt+0x17bf0>
  412e28:	csel	x3, x10, x9, eq  // eq = none
  412e2c:	tst	w8, #0x80
  412e30:	add	x12, x12, #0x889
  412e34:	csel	x4, x10, x11, eq  // eq = none
  412e38:	tst	w8, #0x100
  412e3c:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  412e40:	csel	x5, x10, x12, eq  // eq = none
  412e44:	and	w6, w21, #0xffff
  412e48:	add	x1, x1, #0x84a
  412e4c:	add	x0, sp, #0x30
  412e50:	bl	403e20 <asprintf@plt>
  412e54:	tbnz	w0, #31, 413274 <ascii_strlower_n@plt+0xee64>
  412e58:	ldur	x0, [x29, #-16]
  412e5c:	bl	403a30 <free@plt>
  412e60:	ldr	x8, [sp, #48]
  412e64:	mov	x0, x20
  412e68:	stur	x8, [x29, #-16]
  412e6c:	bl	403a30 <free@plt>
  412e70:	b	412bf4 <ascii_strlower_n@plt+0xe7e4>
  412e74:	ldp	x0, x1, [x19, #88]
  412e78:	bl	404310 <hexmem@plt>
  412e7c:	stur	x0, [x29, #-8]
  412e80:	cbz	x0, 41327c <ascii_strlower_n@plt+0xee6c>
  412e84:	ldrb	w3, [x19, #80]
  412e88:	ldrb	w4, [x19, #81]
  412e8c:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  412e90:	mov	x5, x0
  412e94:	add	x1, x1, #0x83e
  412e98:	sub	x0, x29, #0x10
  412e9c:	add	x2, sp, #0x58
  412ea0:	bl	403e20 <asprintf@plt>
  412ea4:	tbz	w0, #31, 412bf4 <ascii_strlower_n@plt+0xe7e4>
  412ea8:	b	41327c <ascii_strlower_n@plt+0xee6c>
  412eac:	str	xzr, [sp, #80]
  412eb0:	ldrh	w0, [x19, #80]
  412eb4:	bl	416ad4 <ascii_strlower_n@plt+0x126c4>
  412eb8:	ldrb	w8, [x19, #82]
  412ebc:	mov	x20, x0
  412ec0:	add	x1, sp, #0x50
  412ec4:	mov	w0, w8
  412ec8:	bl	4132f4 <ascii_strlower_n@plt+0xeee4>
  412ecc:	tbnz	w0, #31, 412fec <ascii_strlower_n@plt+0xebdc>
  412ed0:	ldr	w1, [x19, #88]
  412ed4:	add	x0, sp, #0x40
  412ed8:	bl	413370 <ascii_strlower_n@plt+0xef60>
  412edc:	tbnz	w0, #31, 412fec <ascii_strlower_n@plt+0xebdc>
  412ee0:	ldr	w1, [x19, #92]
  412ee4:	add	x0, sp, #0x30
  412ee8:	bl	413370 <ascii_strlower_n@plt+0xef60>
  412eec:	tbnz	w0, #31, 412fec <ascii_strlower_n@plt+0xebdc>
  412ef0:	adrp	x8, 41c000 <ascii_strlower_n@plt+0x17bf0>
  412ef4:	cmp	x20, #0x0
  412ef8:	add	x8, x8, #0x538
  412efc:	cset	w4, eq  // eq = none
  412f00:	csel	x3, x20, x8, ne  // ne = any
  412f04:	cbz	x20, 4131fc <ascii_strlower_n@plt+0xedec>
  412f08:	mov	w5, wzr
  412f0c:	b	413200 <ascii_strlower_n@plt+0xedf0>
  412f10:	ldrh	w3, [x19, #80]
  412f14:	ldr	x4, [x19, #88]
  412f18:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  412f1c:	add	x1, x1, #0x820
  412f20:	sub	x0, x29, #0x10
  412f24:	add	x2, sp, #0x58
  412f28:	bl	403e20 <asprintf@plt>
  412f2c:	tbz	w0, #31, 412bf4 <ascii_strlower_n@plt+0xe7e4>
  412f30:	b	41327c <ascii_strlower_n@plt+0xee6c>
  412f34:	ldp	x2, x4, [x19, #80]
  412f38:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  412f3c:	add	x1, x1, #0x3d9
  412f40:	add	x0, sp, #0x58
  412f44:	mov	x3, x1
  412f48:	mov	x5, xzr
  412f4c:	bl	403f70 <strjoin_real@plt>
  412f50:	b	412bec <ascii_strlower_n@plt+0xe7dc>
  412f54:	add	x1, x19, #0x50
  412f58:	add	x2, sp, #0x40
  412f5c:	mov	w0, #0x2                   	// #2
  412f60:	str	xzr, [sp, #64]
  412f64:	bl	403f60 <in_addr_to_string@plt>
  412f68:	ldr	x2, [sp, #64]
  412f6c:	tbnz	w0, #31, 4131e8 <ascii_strlower_n@plt+0xedd8>
  412f70:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  412f74:	add	x1, x1, #0x3d9
  412f78:	add	x0, sp, #0x58
  412f7c:	mov	x3, xzr
  412f80:	bl	403f70 <strjoin_real@plt>
  412f84:	ldr	x8, [sp, #64]
  412f88:	mov	x20, x0
  412f8c:	stur	x0, [x29, #-16]
  412f90:	mov	x0, x8
  412f94:	bl	403a30 <free@plt>
  412f98:	cbnz	x20, 412bf4 <ascii_strlower_n@plt+0xe7e4>
  412f9c:	b	413280 <ascii_strlower_n@plt+0xee70>
  412fa0:	ldp	x9, x10, [x19, #80]
  412fa4:	adrp	x8, 419000 <ascii_strlower_n@plt+0x14bf0>
  412fa8:	ldp	w5, w6, [x19, #96]
  412fac:	ldp	w7, w11, [x19, #104]
  412fb0:	ldr	w12, [x19, #112]
  412fb4:	add	x8, x8, #0xdf2
  412fb8:	cmp	x9, #0x0
  412fbc:	csel	x3, x8, x9, eq  // eq = none
  412fc0:	cmp	x10, #0x0
  412fc4:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  412fc8:	csel	x4, x8, x10, eq  // eq = none
  412fcc:	add	x1, x1, #0x808
  412fd0:	sub	x0, x29, #0x10
  412fd4:	add	x2, sp, #0x58
  412fd8:	str	w12, [sp, #8]
  412fdc:	str	w11, [sp]
  412fe0:	bl	403e20 <asprintf@plt>
  412fe4:	tbz	w0, #31, 412bf4 <ascii_strlower_n@plt+0xe7e4>
  412fe8:	b	41327c <ascii_strlower_n@plt+0xee6c>
  412fec:	ldr	x0, [sp, #80]
  412ff0:	b	413278 <ascii_strlower_n@plt+0xee68>
  412ff4:	sub	w9, w9, w10
  412ff8:	add	w9, w9, #0x1
  412ffc:	ucvtf	d0, w9
  413000:	fneg	d8, d0
  413004:	lsr	w9, w8, #4
  413008:	and	w8, w8, #0xf
  41300c:	scvtf	d0, w8
  413010:	scvtf	d9, w9
  413014:	bl	404320 <exp10@plt>
  413018:	and	w9, w25, #0xf
  41301c:	fmul	d9, d0, d9
  413020:	lsr	w8, w25, #4
  413024:	scvtf	d0, w9
  413028:	scvtf	d10, w8
  41302c:	bl	404320 <exp10@plt>
  413030:	and	w9, w24, #0xf
  413034:	fmul	d10, d0, d10
  413038:	lsr	w8, w24, #4
  41303c:	scvtf	d0, w9
  413040:	scvtf	d11, w8
  413044:	bl	404320 <exp10@plt>
  413048:	mov	w8, #0xb273                	// #45683
  41304c:	movk	w8, #0x45e7, lsl #16
  413050:	cmp	w23, #0x0
  413054:	mov	w14, #0x53                  	// #83
  413058:	mov	w15, #0x4e                  	// #78
  41305c:	csel	w4, w15, w14, lt  // lt = tstop
  413060:	smull	x14, w21, w8
  413064:	mov	w9, #0xbe59                	// #48729
  413068:	smull	x8, w22, w8
  41306c:	lsr	x15, x14, #32
  413070:	lsr	x14, x14, #63
  413074:	movk	w9, #0x4a90, lsl #16
  413078:	mov	w12, #0xea60                	// #60000
  41307c:	add	w14, w14, w15, asr #14
  413080:	lsr	x15, x8, #32
  413084:	lsr	x8, x8, #63
  413088:	mov	w10, #0x8889                	// #34953
  41308c:	add	w8, w8, w15, asr #14
  413090:	smull	x15, w21, w9
  413094:	smull	x9, w22, w9
  413098:	msub	w17, w14, w12, w21
  41309c:	fmul	d5, d0, d11
  4130a0:	movk	w10, #0x8888, lsl #16
  4130a4:	scvtf	d0, w17
  4130a8:	lsr	x17, x9, #32
  4130ac:	lsr	x9, x9, #63
  4130b0:	adrp	x13, 41e000 <ascii_strlower_n@plt+0x19bf0>
  4130b4:	add	w5, w9, w17, asr #20
  4130b8:	smull	x9, w14, w10
  4130bc:	smull	x10, w8, w10
  4130c0:	ldr	d1, [x13, #2144]
  4130c4:	msub	w12, w8, w12, w22
  4130c8:	lsr	x9, x9, #32
  4130cc:	lsr	x10, x10, #32
  4130d0:	mov	w16, #0x57                  	// #87
  4130d4:	mov	w13, #0x45                  	// #69
  4130d8:	cmp	w20, #0x0
  4130dc:	scvtf	d2, w12
  4130e0:	lsr	x12, x15, #32
  4130e4:	lsr	x15, x15, #63
  4130e8:	add	w9, w9, w14
  4130ec:	add	w10, w10, w8
  4130f0:	mov	x18, #0x4059000000000000    	// #4636737291354636288
  4130f4:	csel	w7, w13, w16, lt  // lt = tstop
  4130f8:	add	w2, w15, w12, asr #20
  4130fc:	asr	w12, w9, #5
  413100:	asr	w13, w10, #5
  413104:	mov	w11, #0x3c                  	// #60
  413108:	fmov	d6, x18
  41310c:	add	w9, w12, w9, lsr #31
  413110:	add	w10, w13, w10, lsr #31
  413114:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  413118:	fdiv	d0, d0, d1
  41311c:	fdiv	d1, d2, d1
  413120:	fdiv	d2, d8, d6
  413124:	fdiv	d3, d9, d6
  413128:	fdiv	d4, d10, d6
  41312c:	msub	w3, w9, w11, w14
  413130:	msub	w6, w10, w11, w8
  413134:	fdiv	d5, d5, d6
  413138:	add	x1, x1, #0xc70
  41313c:	add	x0, sp, #0x40
  413140:	bl	403e20 <asprintf@plt>
  413144:	ldr	x8, [sp, #64]
  413148:	cmp	w0, #0x0
  41314c:	csel	x2, xzr, x8, lt  // lt = tstop
  413150:	stur	x2, [x29, #-8]
  413154:	cbnz	x2, 412bd8 <ascii_strlower_n@plt+0xe7c8>
  413158:	b	41327c <ascii_strlower_n@plt+0xee6c>
  41315c:	mov	x20, xzr
  413160:	ldp	x0, x1, [x19, #104]
  413164:	mov	w2, wzr
  413168:	bl	404330 <base32hexmem@plt>
  41316c:	cbz	x0, 413274 <ascii_strlower_n@plt+0xee64>
  413170:	mov	x21, x0
  413174:	ldr	x0, [x19, #120]
  413178:	bl	4133f4 <ascii_strlower_n@plt+0xefe4>
  41317c:	stur	x0, [x29, #-8]
  413180:	cbz	x0, 4131f0 <ascii_strlower_n@plt+0xede0>
  413184:	ldr	x9, [x19, #96]
  413188:	ldrb	w3, [x19, #80]
  41318c:	ldrb	w4, [x19, #81]
  413190:	ldrh	w5, [x19, #82]
  413194:	adrp	x10, 41c000 <ascii_strlower_n@plt+0x17bf0>
  413198:	add	x10, x10, #0x8d0
  41319c:	cmp	x9, #0x0
  4131a0:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4131a4:	mov	x8, x0
  4131a8:	csel	x6, x10, x20, eq  // eq = none
  4131ac:	add	x1, x1, #0x8bb
  4131b0:	sub	x0, x29, #0x10
  4131b4:	add	x2, sp, #0x58
  4131b8:	mov	x7, x21
  4131bc:	str	x8, [sp]
  4131c0:	bl	403e20 <asprintf@plt>
  4131c4:	mov	w22, w0
  4131c8:	mov	x0, x21
  4131cc:	bl	403a30 <free@plt>
  4131d0:	mov	x0, x20
  4131d4:	bl	403a30 <free@plt>
  4131d8:	tbz	w22, #31, 412bf4 <ascii_strlower_n@plt+0xe7e4>
  4131dc:	b	41327c <ascii_strlower_n@plt+0xee6c>
  4131e0:	ldr	x20, [sp, #64]
  4131e4:	b	413274 <ascii_strlower_n@plt+0xee64>
  4131e8:	mov	x0, x2
  4131ec:	b	413278 <ascii_strlower_n@plt+0xee68>
  4131f0:	mov	x0, x21
  4131f4:	bl	403a30 <free@plt>
  4131f8:	b	413274 <ascii_strlower_n@plt+0xee64>
  4131fc:	ldrh	w5, [x19, #80]
  413200:	ldr	x20, [sp, #80]
  413204:	ldrh	w9, [x19, #96]
  413208:	ldr	x10, [x19, #104]
  41320c:	ldrb	w7, [x19, #83]
  413210:	ldr	w8, [x19, #84]
  413214:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  413218:	str	x10, [sp, #32]
  41321c:	str	w9, [sp, #24]
  413220:	add	x9, sp, #0x30
  413224:	add	x10, sp, #0x40
  413228:	add	x1, x1, #0x893
  41322c:	sub	x0, x29, #0x10
  413230:	add	x2, sp, #0x58
  413234:	mov	x6, x20
  413238:	stp	x10, x9, [sp, #8]
  41323c:	str	w8, [sp]
  413240:	bl	403e20 <asprintf@plt>
  413244:	tbnz	w0, #31, 413274 <ascii_strlower_n@plt+0xee64>
  413248:	ldp	x22, x23, [x19, #112]
  41324c:	mov	w21, w0
  413250:	bl	4042f0 <columns@plt>
  413254:	mov	w5, w0
  413258:	sub	x0, x29, #0x10
  41325c:	mov	w4, #0x8                   	// #8
  413260:	mov	w1, w21
  413264:	mov	x2, x22
  413268:	mov	x3, x23
  41326c:	bl	404300 <base64_append@plt>
  413270:	b	4129a8 <ascii_strlower_n@plt+0xe598>
  413274:	mov	x0, x20
  413278:	bl	403a30 <free@plt>
  41327c:	mov	x20, xzr
  413280:	ldur	x0, [x29, #-8]
  413284:	bl	403a30 <free@plt>
  413288:	mov	x0, x20
  41328c:	ldp	x20, x19, [sp, #480]
  413290:	ldp	x22, x21, [sp, #464]
  413294:	ldp	x24, x23, [sp, #448]
  413298:	ldp	x28, x25, [sp, #432]
  41329c:	ldp	x29, x30, [sp, #416]
  4132a0:	ldp	d9, d8, [sp, #400]
  4132a4:	ldp	d11, d10, [sp, #384]
  4132a8:	add	sp, sp, #0x1f0
  4132ac:	ret
  4132b0:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4132b4:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4132b8:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4132bc:	add	x1, x1, #0x974
  4132c0:	add	x2, x2, #0x148
  4132c4:	add	x4, x4, #0x7ba
  4132c8:	mov	w3, #0x338                 	// #824
  4132cc:	bl	403aa0 <log_assert_failed_realm@plt>
  4132d0:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4132d4:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4132d8:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4132dc:	add	x1, x1, #0x829
  4132e0:	add	x2, x2, #0x148
  4132e4:	add	x4, x4, #0x7ba
  4132e8:	mov	w3, #0x396                 	// #918
  4132ec:	mov	w0, wzr
  4132f0:	bl	403aa0 <log_assert_failed_realm@plt>
  4132f4:	stp	x29, x30, [sp, #-32]!
  4132f8:	cmp	w0, #0xff
  4132fc:	str	x19, [sp, #16]
  413300:	mov	x29, sp
  413304:	b.ls	413310 <ascii_strlower_n@plt+0xef00>  // b.plast
  413308:	mov	w0, #0xffffffde            	// #-34
  41330c:	b	413364 <ascii_strlower_n@plt+0xef54>
  413310:	mov	x19, x1
  413314:	b.ne	413338 <ascii_strlower_n@plt+0xef28>  // b.any
  413318:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  41331c:	add	x1, x1, #0x984
  413320:	add	x0, x29, #0x18
  413324:	mov	w2, #0xff                  	// #255
  413328:	bl	403e20 <asprintf@plt>
  41332c:	tbnz	w0, #31, 413360 <ascii_strlower_n@plt+0xef50>
  413330:	ldr	x8, [x29, #24]
  413334:	b	413354 <ascii_strlower_n@plt+0xef44>
  413338:	adrp	x8, 43e000 <ascii_strlower_n@plt+0x39bf0>
  41333c:	add	x8, x8, #0x3f8
  413340:	ldr	x0, [x8, w0, uxtw #3]
  413344:	bl	403ae0 <strdup@plt>
  413348:	str	x0, [x29, #24]
  41334c:	cbz	x0, 413360 <ascii_strlower_n@plt+0xef50>
  413350:	mov	x8, x0
  413354:	mov	w0, wzr
  413358:	str	x8, [x19]
  41335c:	b	413364 <ascii_strlower_n@plt+0xef54>
  413360:	mov	w0, #0xfffffff4            	// #-12
  413364:	ldr	x19, [sp, #16]
  413368:	ldp	x29, x30, [sp], #32
  41336c:	ret
  413370:	sub	sp, sp, #0x60
  413374:	stp	x29, x30, [sp, #64]
  413378:	add	x29, sp, #0x40
  41337c:	stp	x20, x19, [sp, #80]
  413380:	stur	x1, [x29, #-8]
  413384:	cbz	x0, 4133d4 <ascii_strlower_n@plt+0xefc4>
  413388:	mov	x20, x0
  41338c:	sub	x0, x29, #0x8
  413390:	mov	x1, sp
  413394:	bl	404340 <gmtime_r@plt>
  413398:	mov	w19, #0xffffffea            	// #-22
  41339c:	cbz	x0, 4133c0 <ascii_strlower_n@plt+0xefb0>
  4133a0:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4133a4:	add	x2, x2, #0xcd9
  4133a8:	mov	x3, sp
  4133ac:	mov	w1, #0xf                   	// #15
  4133b0:	mov	x0, x20
  4133b4:	bl	404350 <strftime@plt>
  4133b8:	cmp	x0, #0x0
  4133bc:	csel	w19, w19, wzr, eq  // eq = none
  4133c0:	mov	w0, w19
  4133c4:	ldp	x20, x19, [sp, #80]
  4133c8:	ldp	x29, x30, [sp, #64]
  4133cc:	add	sp, sp, #0x60
  4133d0:	ret
  4133d4:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4133d8:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4133dc:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4133e0:	add	x1, x1, #0xca4
  4133e4:	add	x2, x2, #0x148
  4133e8:	add	x4, x4, #0xca8
  4133ec:	mov	w3, #0x2e2                 	// #738
  4133f0:	bl	403aa0 <log_assert_failed_realm@plt>
  4133f4:	sub	sp, sp, #0x50
  4133f8:	stp	x29, x30, [sp, #48]
  4133fc:	add	x29, sp, #0x30
  413400:	add	x1, sp, #0x18
  413404:	add	x2, sp, #0x14
  413408:	stp	x20, x19, [sp, #64]
  41340c:	mov	x19, x0
  413410:	stur	xzr, [x29, #-8]
  413414:	str	wzr, [sp, #24]
  413418:	bl	404140 <bitmap_iterate@plt>
  41341c:	mov	w8, w0
  413420:	mov	x0, xzr
  413424:	tbz	w8, #0, 413494 <ascii_strlower_n@plt+0xf084>
  413428:	adrp	x20, 41c000 <ascii_strlower_n@plt+0x17bf0>
  41342c:	add	x20, x20, #0xce6
  413430:	ldr	w0, [sp, #20]
  413434:	bl	416ad4 <ascii_strlower_n@plt+0x126c4>
  413438:	cbz	x0, 413458 <ascii_strlower_n@plt+0xf048>
  41343c:	ldr	w0, [sp, #20]
  413440:	bl	416ad4 <ascii_strlower_n@plt+0x126c4>
  413444:	mov	x1, x0
  413448:	sub	x0, x29, #0x8
  41344c:	bl	403a60 <strv_extend@plt>
  413450:	tbz	w0, #31, 41347c <ascii_strlower_n@plt+0xf06c>
  413454:	b	4134d0 <ascii_strlower_n@plt+0xf0c0>
  413458:	ldr	w2, [sp, #20]
  41345c:	add	x0, sp, #0x8
  413460:	mov	x1, x20
  413464:	bl	403e20 <asprintf@plt>
  413468:	tbnz	w0, #31, 4134d0 <ascii_strlower_n@plt+0xf0c0>
  41346c:	ldr	x1, [sp, #8]
  413470:	sub	x0, x29, #0x8
  413474:	bl	403f40 <strv_consume@plt>
  413478:	tbnz	w0, #31, 4134d0 <ascii_strlower_n@plt+0xf0c0>
  41347c:	add	x1, sp, #0x18
  413480:	add	x2, sp, #0x14
  413484:	mov	x0, x19
  413488:	bl	404140 <bitmap_iterate@plt>
  41348c:	tbnz	w0, #0, 413430 <ascii_strlower_n@plt+0xf020>
  413490:	ldur	x0, [x29, #-8]
  413494:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  413498:	add	x1, x1, #0x3d9
  41349c:	mov	x2, xzr
  4134a0:	bl	404360 <strv_join_prefix@plt>
  4134a4:	mov	x19, x0
  4134a8:	cbz	x0, 4134d4 <ascii_strlower_n@plt+0xf0c4>
  4134ac:	adrp	x0, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4134b0:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4134b4:	add	x0, x0, #0xced
  4134b8:	add	x2, x2, #0xcf0
  4134bc:	mov	x1, x19
  4134c0:	mov	x3, xzr
  4134c4:	bl	403f70 <strjoin_real@plt>
  4134c8:	mov	x20, x0
  4134cc:	b	4134d8 <ascii_strlower_n@plt+0xf0c8>
  4134d0:	mov	x19, xzr
  4134d4:	mov	x20, xzr
  4134d8:	mov	x0, x19
  4134dc:	bl	403a30 <free@plt>
  4134e0:	ldur	x0, [x29, #-8]
  4134e4:	cbz	x0, 4134ec <ascii_strlower_n@plt+0xf0dc>
  4134e8:	bl	403ab0 <strv_free@plt>
  4134ec:	mov	x0, x20
  4134f0:	ldp	x20, x19, [sp, #64]
  4134f4:	ldp	x29, x30, [sp, #48]
  4134f8:	add	sp, sp, #0x50
  4134fc:	ret
  413500:	stp	x29, x30, [sp, #-16]!
  413504:	mov	x29, sp
  413508:	cbz	x0, 41358c <ascii_strlower_n@plt+0xf17c>
  41350c:	cbz	x1, 4135ac <ascii_strlower_n@plt+0xf19c>
  413510:	ldrb	w8, [x0, #48]
  413514:	tbnz	w8, #0, 413574 <ascii_strlower_n@plt+0xf164>
  413518:	ldr	x8, [x0, #8]
  41351c:	ldrh	w9, [x8, #6]
  413520:	mov	x8, #0xffffffffffffffea    	// #-22
  413524:	cmp	w9, #0x34
  413528:	b.hi	41356c <ascii_strlower_n@plt+0xf15c>  // b.pmore
  41352c:	mov	x11, #0xb066                	// #45158
  413530:	movk	x11, #0x3001, lsl #16
  413534:	mov	w10, #0x1                   	// #1
  413538:	movk	x11, #0xc882, lsl #32
  41353c:	lsl	x10, x10, x9
  413540:	movk	x11, #0x5, lsl #48
  413544:	tst	x10, x11
  413548:	b.ne	413580 <ascii_strlower_n@plt+0xf170>  // b.any
  41354c:	cmp	x9, #0x2c
  413550:	b.eq	41355c <ascii_strlower_n@plt+0xf14c>  // b.none
  413554:	cmp	x9, #0x34
  413558:	b.ne	41356c <ascii_strlower_n@plt+0xf15c>  // b.any
  41355c:	ldr	x8, [x0, #88]
  413560:	str	x8, [x1]
  413564:	ldr	x8, [x0, #96]
  413568:	b	413580 <ascii_strlower_n@plt+0xf170>
  41356c:	cmp	w9, #0x63
  413570:	b.eq	413580 <ascii_strlower_n@plt+0xf170>  // b.none
  413574:	ldr	x8, [x0, #80]
  413578:	str	x8, [x1]
  41357c:	ldr	x8, [x0, #88]
  413580:	mov	x0, x8
  413584:	ldp	x29, x30, [sp], #16
  413588:	ret
  41358c:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  413590:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  413594:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  413598:	add	x1, x1, #0x974
  41359c:	add	x2, x2, #0x148
  4135a0:	add	x4, x4, #0x973
  4135a4:	mov	w3, #0x497                 	// #1175
  4135a8:	bl	403aa0 <log_assert_failed_realm@plt>
  4135ac:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4135b0:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4135b4:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4135b8:	add	x1, x1, #0x9b5
  4135bc:	add	x2, x2, #0x148
  4135c0:	add	x4, x4, #0x973
  4135c4:	mov	w3, #0x498                 	// #1176
  4135c8:	mov	w0, wzr
  4135cc:	bl	403aa0 <log_assert_failed_realm@plt>
  4135d0:	sub	sp, sp, #0xe0
  4135d4:	add	x8, sp, #0x18
  4135d8:	stp	x20, x19, [sp, #208]
  4135dc:	mov	w20, w1
  4135e0:	mov	x19, x0
  4135e4:	add	x0, x8, #0x8
  4135e8:	mov	w2, #0xa0                  	// #160
  4135ec:	mov	w1, wzr
  4135f0:	stp	x29, x30, [sp, #192]
  4135f4:	add	x29, sp, #0xc0
  4135f8:	bl	403c60 <memset@plt>
  4135fc:	adrp	x8, 41e000 <ascii_strlower_n@plt+0x19bf0>
  413600:	ldr	d0, [x8, #2152]
  413604:	tst	w20, #0x1
  413608:	mov	w8, #0x5                   	// #5
  41360c:	mov	w9, #0xd                   	// #13
  413610:	csel	w8, w9, w8, ne  // ne = any
  413614:	str	d0, [sp, #24]
  413618:	strb	w8, [sp, #184]
  41361c:	cbz	x19, 4136bc <ascii_strlower_n@plt+0xf2ac>
  413620:	ldr	x8, [x19, #56]
  413624:	cbz	x8, 413634 <ascii_strlower_n@plt+0xf224>
  413628:	ldrb	w8, [x19, #48]
  41362c:	eor	w8, w20, w8, lsr #1
  413630:	tbz	w8, #0, 4136a8 <ascii_strlower_n@plt+0xf298>
  413634:	add	x0, sp, #0x18
  413638:	add	x3, sp, #0x10
  41363c:	add	x4, sp, #0x8
  413640:	mov	x1, x19
  413644:	mov	w2, wzr
  413648:	bl	40e764 <ascii_strlower_n@plt+0xa354>
  41364c:	tbnz	w0, #31, 4136ac <ascii_strlower_n@plt+0xf29c>
  413650:	ldr	x8, [sp, #16]
  413654:	cbnz	x8, 4136dc <ascii_strlower_n@plt+0xf2cc>
  413658:	ldr	x8, [sp, #64]
  41365c:	cbz	x8, 4136fc <ascii_strlower_n@plt+0xf2ec>
  413660:	ldr	x0, [x19, #56]
  413664:	bl	403a30 <free@plt>
  413668:	ldr	x8, [sp, #64]
  41366c:	ldrb	w9, [x19, #48]
  413670:	tst	w20, #0x1
  413674:	mov	w10, #0x2                   	// #2
  413678:	str	x8, [x19, #56]
  41367c:	ldr	x8, [sp, #32]
  413680:	csel	w10, w10, wzr, ne  // ne = any
  413684:	and	w9, w9, #0xfffffffd
  413688:	orr	w9, w9, w10
  41368c:	str	x8, [x19, #64]
  413690:	ldr	x8, [sp, #8]
  413694:	add	x0, sp, #0x18
  413698:	strb	w9, [x19, #48]
  41369c:	str	x8, [x19, #72]
  4136a0:	str	xzr, [sp, #64]
  4136a4:	bl	40d6d0 <ascii_strlower_n@plt+0x92c0>
  4136a8:	mov	w0, wzr
  4136ac:	ldp	x20, x19, [sp, #208]
  4136b0:	ldp	x29, x30, [sp, #192]
  4136b4:	add	sp, sp, #0xe0
  4136b8:	ret
  4136bc:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4136c0:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4136c4:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4136c8:	add	x1, x1, #0x974
  4136cc:	add	x2, x2, #0x148
  4136d0:	add	x4, x4, #0x9b9
  4136d4:	mov	w3, #0x4cb                 	// #1227
  4136d8:	b	413718 <ascii_strlower_n@plt+0xf308>
  4136dc:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4136e0:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4136e4:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4136e8:	add	x1, x1, #0x9fc
  4136ec:	add	x2, x2, #0x148
  4136f0:	add	x4, x4, #0x9b9
  4136f4:	mov	w3, #0x4dc                 	// #1244
  4136f8:	b	413718 <ascii_strlower_n@plt+0xf308>
  4136fc:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  413700:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  413704:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  413708:	add	x1, x1, #0xa07
  41370c:	add	x2, x2, #0x148
  413710:	add	x4, x4, #0x9b9
  413714:	mov	w3, #0x4dd                 	// #1245
  413718:	mov	w0, wzr
  41371c:	bl	403aa0 <log_assert_failed_realm@plt>
  413720:	stp	x29, x30, [sp, #-48]!
  413724:	str	x21, [sp, #16]
  413728:	stp	x20, x19, [sp, #32]
  41372c:	mov	x29, sp
  413730:	cbz	x0, 4137c8 <ascii_strlower_n@plt+0xf3b8>
  413734:	mov	x19, x1
  413738:	cbz	x1, 4137e8 <ascii_strlower_n@plt+0xf3d8>
  41373c:	ldr	w1, [x0, #40]
  413740:	mov	x20, x0
  413744:	cmn	w1, #0x1
  413748:	b.eq	413784 <ascii_strlower_n@plt+0xf374>  // b.none
  41374c:	ldr	x8, [x20, #8]
  413750:	cbz	x8, 41378c <ascii_strlower_n@plt+0xf37c>
  413754:	ldr	x9, [x8, #8]
  413758:	add	x8, x8, #0x10
  41375c:	cmp	x9, #0x0
  413760:	csel	x21, x8, x9, eq  // eq = none
  413764:	mov	x0, x21
  413768:	bl	4040f0 <dns_name_is_root@plt>
  41376c:	ldr	w1, [x20, #40]
  413770:	adrp	x8, 41c000 <ascii_strlower_n@plt+0x17bf0>
  413774:	add	x8, x8, #0x37b
  413778:	tst	w0, #0x1
  41377c:	csel	x0, x8, x21, ne  // ne = any
  413780:	b	413790 <ascii_strlower_n@plt+0xf380>
  413784:	mov	w0, #0xffffffc3            	// #-61
  413788:	b	4137b8 <ascii_strlower_n@plt+0xf3a8>
  41378c:	mov	x0, xzr
  413790:	add	x2, x29, #0x18
  413794:	str	x0, [x29, #24]
  413798:	bl	404370 <dns_name_skip@plt>
  41379c:	tbnz	w0, #31, 4137b8 <ascii_strlower_n@plt+0xf3a8>
  4137a0:	cbz	w0, 4137b4 <ascii_strlower_n@plt+0xf3a4>
  4137a4:	ldr	x8, [x29, #24]
  4137a8:	mov	w0, wzr
  4137ac:	str	x8, [x19]
  4137b0:	b	4137b8 <ascii_strlower_n@plt+0xf3a8>
  4137b4:	mov	w0, #0xffffffea            	// #-22
  4137b8:	ldp	x20, x19, [sp, #32]
  4137bc:	ldr	x21, [sp, #16]
  4137c0:	ldp	x29, x30, [sp], #48
  4137c4:	ret
  4137c8:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4137cc:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4137d0:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4137d4:	add	x1, x1, #0x974
  4137d8:	add	x2, x2, #0x148
  4137dc:	add	x4, x4, #0xa14
  4137e0:	mov	w3, #0x4ef                 	// #1263
  4137e4:	bl	403aa0 <log_assert_failed_realm@plt>
  4137e8:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  4137ec:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4137f0:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4137f4:	add	x1, x1, #0xc0e
  4137f8:	add	x2, x2, #0x148
  4137fc:	add	x4, x4, #0xa14
  413800:	mov	w3, #0x4f0                 	// #1264
  413804:	mov	w0, wzr
  413808:	bl	403aa0 <log_assert_failed_realm@plt>
  41380c:	stp	x29, x30, [sp, #-48]!
  413810:	str	x21, [sp, #16]
  413814:	stp	x20, x19, [sp, #32]
  413818:	mov	x29, sp
  41381c:	cbz	x0, 4138b4 <ascii_strlower_n@plt+0xf4a4>
  413820:	mov	x19, x1
  413824:	cbz	x1, 4138d4 <ascii_strlower_n@plt+0xf4c4>
  413828:	ldr	w1, [x0, #44]
  41382c:	mov	x20, x0
  413830:	cmn	w1, #0x1
  413834:	b.eq	413870 <ascii_strlower_n@plt+0xf460>  // b.none
  413838:	ldr	x8, [x20, #8]
  41383c:	cbz	x8, 413878 <ascii_strlower_n@plt+0xf468>
  413840:	ldr	x9, [x8, #8]
  413844:	add	x8, x8, #0x10
  413848:	cmp	x9, #0x0
  41384c:	csel	x21, x8, x9, eq  // eq = none
  413850:	mov	x0, x21
  413854:	bl	4040f0 <dns_name_is_root@plt>
  413858:	ldr	w1, [x20, #44]
  41385c:	adrp	x8, 41c000 <ascii_strlower_n@plt+0x17bf0>
  413860:	add	x8, x8, #0x37b
  413864:	tst	w0, #0x1
  413868:	csel	x0, x8, x21, ne  // ne = any
  41386c:	b	41387c <ascii_strlower_n@plt+0xf46c>
  413870:	mov	w0, #0xffffffc3            	// #-61
  413874:	b	4138a4 <ascii_strlower_n@plt+0xf494>
  413878:	mov	x0, xzr
  41387c:	add	x2, x29, #0x18
  413880:	str	x0, [x29, #24]
  413884:	bl	404370 <dns_name_skip@plt>
  413888:	tbnz	w0, #31, 4138a4 <ascii_strlower_n@plt+0xf494>
  41388c:	cbz	w0, 4138a0 <ascii_strlower_n@plt+0xf490>
  413890:	ldr	x8, [x29, #24]
  413894:	mov	w0, wzr
  413898:	str	x8, [x19]
  41389c:	b	4138a4 <ascii_strlower_n@plt+0xf494>
  4138a0:	mov	w0, #0xffffffea            	// #-22
  4138a4:	ldp	x20, x19, [sp, #32]
  4138a8:	ldr	x21, [sp, #16]
  4138ac:	ldp	x29, x30, [sp], #48
  4138b0:	ret
  4138b4:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4138b8:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4138bc:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4138c0:	add	x1, x1, #0x974
  4138c4:	add	x2, x2, #0x148
  4138c8:	add	x4, x4, #0xa57
  4138cc:	mov	w3, #0x506                 	// #1286
  4138d0:	bl	403aa0 <log_assert_failed_realm@plt>
  4138d4:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  4138d8:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4138dc:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4138e0:	add	x1, x1, #0xc0e
  4138e4:	add	x2, x2, #0x148
  4138e8:	add	x4, x4, #0xa57
  4138ec:	mov	w3, #0x507                 	// #1287
  4138f0:	mov	w0, wzr
  4138f4:	bl	403aa0 <log_assert_failed_realm@plt>
  4138f8:	stp	x29, x30, [sp, #-32]!
  4138fc:	str	x19, [sp, #16]
  413900:	mov	x29, sp
  413904:	cbz	x0, 413930 <ascii_strlower_n@plt+0xf520>
  413908:	mov	x19, x1
  41390c:	add	x1, x29, #0x18
  413910:	bl	413720 <ascii_strlower_n@plt+0xf310>
  413914:	tbnz	w0, #31, 413924 <ascii_strlower_n@plt+0xf514>
  413918:	ldr	x1, [x29, #24]
  41391c:	mov	x0, x19
  413920:	bl	404250 <dns_name_equal@plt>
  413924:	ldr	x19, [sp, #16]
  413928:	ldp	x29, x30, [sp], #32
  41392c:	ret
  413930:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  413934:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  413938:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  41393c:	add	x1, x1, #0x974
  413940:	add	x2, x2, #0x148
  413944:	add	x4, x4, #0xa9a
  413948:	mov	w3, #0x51d                 	// #1309
  41394c:	bl	403aa0 <log_assert_failed_realm@plt>
  413950:	stp	x29, x30, [sp, #-32]!
  413954:	str	x19, [sp, #16]
  413958:	mov	x29, sp
  41395c:	cbz	x0, 4139ec <ascii_strlower_n@plt+0xf5dc>
  413960:	ldr	w8, [x0, #44]
  413964:	cmn	w8, #0x1
  413968:	b.eq	4139b4 <ascii_strlower_n@plt+0xf5a4>  // b.none
  41396c:	cmp	w8, #0x1
  413970:	b.eq	413980 <ascii_strlower_n@plt+0xf570>  // b.none
  413974:	cbnz	w8, 4139bc <ascii_strlower_n@plt+0xf5ac>
  413978:	mov	w0, wzr
  41397c:	b	4139e0 <ascii_strlower_n@plt+0xf5d0>
  413980:	ldr	x8, [x0, #8]
  413984:	cbz	x8, 4139c4 <ascii_strlower_n@plt+0xf5b4>
  413988:	ldr	x9, [x8, #8]
  41398c:	add	x8, x8, #0x10
  413990:	cmp	x9, #0x0
  413994:	csel	x19, x8, x9, eq  // eq = none
  413998:	mov	x0, x19
  41399c:	bl	4040f0 <dns_name_is_root@plt>
  4139a0:	adrp	x8, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4139a4:	add	x8, x8, #0x37b
  4139a8:	tst	w0, #0x1
  4139ac:	csel	x0, x8, x19, ne  // ne = any
  4139b0:	b	4139c8 <ascii_strlower_n@plt+0xf5b8>
  4139b4:	mov	w0, #0xffffffc3            	// #-61
  4139b8:	b	4139e0 <ascii_strlower_n@plt+0xf5d0>
  4139bc:	mov	w0, #0x1                   	// #1
  4139c0:	b	4139e0 <ascii_strlower_n@plt+0xf5d0>
  4139c4:	mov	x0, xzr
  4139c8:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4139cc:	add	x1, x1, #0x142
  4139d0:	bl	404380 <dns_name_startswith@plt>
  4139d4:	tbnz	w0, #31, 4139e0 <ascii_strlower_n@plt+0xf5d0>
  4139d8:	cmp	w0, #0x0
  4139dc:	cset	w0, eq  // eq = none
  4139e0:	ldr	x19, [sp, #16]
  4139e4:	ldp	x29, x30, [sp], #32
  4139e8:	ret
  4139ec:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4139f0:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4139f4:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4139f8:	add	x1, x1, #0x974
  4139fc:	add	x2, x2, #0x148
  413a00:	add	x4, x4, #0xadf
  413a04:	mov	w3, #0x529                 	// #1321
  413a08:	bl	403aa0 <log_assert_failed_realm@plt>
  413a0c:	sub	sp, sp, #0x30
  413a10:	stp	x29, x30, [sp, #16]
  413a14:	stp	x20, x19, [sp, #32]
  413a18:	add	x29, sp, #0x10
  413a1c:	cbz	x0, 413dbc <ascii_strlower_n@plt+0xf9ac>
  413a20:	mov	x20, x0
  413a24:	ldr	x0, [x0, #8]
  413a28:	mov	x19, x1
  413a2c:	bl	411a68 <ascii_strlower_n@plt+0xd658>
  413a30:	ldrb	w8, [x20, #48]
  413a34:	tbnz	w8, #0, 413af4 <ascii_strlower_n@plt+0xf6e4>
  413a38:	ldr	x8, [x20, #8]
  413a3c:	ldrh	w8, [x8, #6]
  413a40:	cmp	w8, #0x1b
  413a44:	b.le	413a94 <ascii_strlower_n@plt+0xf684>
  413a48:	sub	w9, w8, #0x1c
  413a4c:	cmp	w9, #0x18
  413a50:	b.hi	413ac0 <ascii_strlower_n@plt+0xf6b0>  // b.pmore
  413a54:	adrp	x8, 41e000 <ascii_strlower_n@plt+0x19bf0>
  413a58:	add	x8, x8, #0x818
  413a5c:	adr	x10, 413a6c <ascii_strlower_n@plt+0xf65c>
  413a60:	ldrb	w11, [x8, x9]
  413a64:	add	x10, x10, x11, lsl #2
  413a68:	br	x10
  413a6c:	add	x0, x20, #0x50
  413a70:	mov	w1, #0x2                   	// #2
  413a74:	mov	x2, x19
  413a78:	bl	4041f0 <siphash24_compress@plt>
  413a7c:	add	x0, x20, #0x52
  413a80:	mov	w1, #0x1                   	// #1
  413a84:	mov	x2, x19
  413a88:	bl	4041f0 <siphash24_compress@plt>
  413a8c:	add	x0, x20, #0x53
  413a90:	b	413da8 <ascii_strlower_n@plt+0xf998>
  413a94:	sub	w8, w8, #0x1
  413a98:	cmp	w8, #0xf
  413a9c:	b.hi	413af4 <ascii_strlower_n@plt+0xf6e4>  // b.pmore
  413aa0:	adrp	x9, 41e000 <ascii_strlower_n@plt+0x19bf0>
  413aa4:	add	x9, x9, #0x808
  413aa8:	adr	x10, 413ab8 <ascii_strlower_n@plt+0xf6a8>
  413aac:	ldrb	w11, [x9, x8]
  413ab0:	add	x10, x10, x11, lsl #2
  413ab4:	br	x10
  413ab8:	ldr	x0, [x20, #80]
  413abc:	b	413c84 <ascii_strlower_n@plt+0xf874>
  413ac0:	cmp	w8, #0x63
  413ac4:	b.eq	413b0c <ascii_strlower_n@plt+0xf6fc>  // b.none
  413ac8:	cmp	w8, #0x101
  413acc:	b.ne	413af4 <ascii_strlower_n@plt+0xf6e4>  // b.any
  413ad0:	add	x0, x20, #0x50
  413ad4:	mov	w1, #0x1                   	// #1
  413ad8:	mov	x2, x19
  413adc:	bl	4041f0 <siphash24_compress@plt>
  413ae0:	ldr	x0, [x20, #88]
  413ae4:	mov	x1, x19
  413ae8:	bl	404390 <string_hash_func@plt>
  413aec:	ldp	x0, x1, [x20, #96]
  413af0:	b	413af8 <ascii_strlower_n@plt+0xf6e8>
  413af4:	ldp	x0, x1, [x20, #80]
  413af8:	mov	x2, x19
  413afc:	ldp	x20, x19, [sp, #32]
  413b00:	ldp	x29, x30, [sp, #16]
  413b04:	add	sp, sp, #0x30
  413b08:	b	4041f0 <siphash24_compress@plt>
  413b0c:	ldr	x20, [x20, #80]
  413b10:	cbz	x20, 413b40 <ascii_strlower_n@plt+0xf730>
  413b14:	ldr	x1, [x20]
  413b18:	add	x0, x20, #0x18
  413b1c:	mov	x2, x19
  413b20:	bl	4041f0 <siphash24_compress@plt>
  413b24:	sub	x0, x29, #0x4
  413b28:	mov	w1, #0x1                   	// #1
  413b2c:	mov	x2, x19
  413b30:	sturb	wzr, [x29, #-4]
  413b34:	bl	4041f0 <siphash24_compress@plt>
  413b38:	ldr	x20, [x20, #8]
  413b3c:	cbnz	x20, 413b14 <ascii_strlower_n@plt+0xf704>
  413b40:	ldp	x20, x19, [sp, #32]
  413b44:	ldp	x29, x30, [sp, #16]
  413b48:	add	sp, sp, #0x30
  413b4c:	ret
  413b50:	add	x0, x20, #0x50
  413b54:	b	413c48 <ascii_strlower_n@plt+0xf838>
  413b58:	ldr	x0, [x20, #80]
  413b5c:	mov	x1, x19
  413b60:	bl	404260 <dns_name_hash_func@plt>
  413b64:	ldr	x0, [x20, #88]
  413b68:	mov	x1, x19
  413b6c:	bl	404260 <dns_name_hash_func@plt>
  413b70:	add	x0, x20, #0x60
  413b74:	mov	w1, #0x4                   	// #4
  413b78:	mov	x2, x19
  413b7c:	bl	4041f0 <siphash24_compress@plt>
  413b80:	add	x0, x20, #0x64
  413b84:	mov	w1, #0x4                   	// #4
  413b88:	mov	x2, x19
  413b8c:	bl	4041f0 <siphash24_compress@plt>
  413b90:	add	x0, x20, #0x68
  413b94:	mov	w1, #0x4                   	// #4
  413b98:	mov	x2, x19
  413b9c:	bl	4041f0 <siphash24_compress@plt>
  413ba0:	add	x0, x20, #0x6c
  413ba4:	mov	w1, #0x4                   	// #4
  413ba8:	mov	x2, x19
  413bac:	bl	4041f0 <siphash24_compress@plt>
  413bb0:	add	x0, x20, #0x70
  413bb4:	b	413c48 <ascii_strlower_n@plt+0xf838>
  413bb8:	ldr	x0, [x20, #80]
  413bbc:	mov	x1, x19
  413bc0:	bl	404390 <string_hash_func@plt>
  413bc4:	ldr	x0, [x20, #88]
  413bc8:	mov	x1, x19
  413bcc:	ldp	x20, x19, [sp, #32]
  413bd0:	ldp	x29, x30, [sp, #16]
  413bd4:	add	sp, sp, #0x30
  413bd8:	b	404390 <string_hash_func@plt>
  413bdc:	add	x0, x20, #0x50
  413be0:	b	413c74 <ascii_strlower_n@plt+0xf864>
  413be4:	add	x0, x20, #0x50
  413be8:	mov	w1, #0x1                   	// #1
  413bec:	mov	x2, x19
  413bf0:	bl	4041f0 <siphash24_compress@plt>
  413bf4:	add	x0, x20, #0x51
  413bf8:	mov	w1, #0x1                   	// #1
  413bfc:	mov	x2, x19
  413c00:	bl	4041f0 <siphash24_compress@plt>
  413c04:	add	x0, x20, #0x52
  413c08:	mov	w1, #0x1                   	// #1
  413c0c:	mov	x2, x19
  413c10:	bl	4041f0 <siphash24_compress@plt>
  413c14:	add	x0, x20, #0x53
  413c18:	mov	w1, #0x1                   	// #1
  413c1c:	mov	x2, x19
  413c20:	bl	4041f0 <siphash24_compress@plt>
  413c24:	add	x0, x20, #0x54
  413c28:	mov	w1, #0x4                   	// #4
  413c2c:	mov	x2, x19
  413c30:	bl	4041f0 <siphash24_compress@plt>
  413c34:	add	x0, x20, #0x58
  413c38:	mov	w1, #0x4                   	// #4
  413c3c:	mov	x2, x19
  413c40:	bl	4041f0 <siphash24_compress@plt>
  413c44:	add	x0, x20, #0x5c
  413c48:	mov	w1, #0x4                   	// #4
  413c4c:	b	413af8 <ascii_strlower_n@plt+0xf6e8>
  413c50:	add	x0, x20, #0x50
  413c54:	mov	w1, #0x2                   	// #2
  413c58:	mov	x2, x19
  413c5c:	bl	4041f0 <siphash24_compress@plt>
  413c60:	add	x0, x20, #0x52
  413c64:	mov	w1, #0x2                   	// #2
  413c68:	mov	x2, x19
  413c6c:	bl	4041f0 <siphash24_compress@plt>
  413c70:	add	x0, x20, #0x54
  413c74:	mov	w1, #0x2                   	// #2
  413c78:	mov	x2, x19
  413c7c:	bl	4041f0 <siphash24_compress@plt>
  413c80:	ldr	x0, [x20, #88]
  413c84:	mov	x1, x19
  413c88:	ldp	x20, x19, [sp, #32]
  413c8c:	ldp	x29, x30, [sp, #16]
  413c90:	add	sp, sp, #0x30
  413c94:	b	404260 <dns_name_hash_func@plt>
  413c98:	add	x0, x20, #0x50
  413c9c:	mov	w1, #0x2                   	// #2
  413ca0:	mov	x2, x19
  413ca4:	bl	4041f0 <siphash24_compress@plt>
  413ca8:	add	x0, x20, #0x52
  413cac:	mov	w1, #0x1                   	// #1
  413cb0:	mov	x2, x19
  413cb4:	bl	4041f0 <siphash24_compress@plt>
  413cb8:	add	x0, x20, #0x53
  413cbc:	mov	w1, #0x1                   	// #1
  413cc0:	mov	x2, x19
  413cc4:	bl	4041f0 <siphash24_compress@plt>
  413cc8:	add	x0, x20, #0x54
  413ccc:	mov	w1, #0x4                   	// #4
  413cd0:	mov	x2, x19
  413cd4:	bl	4041f0 <siphash24_compress@plt>
  413cd8:	add	x0, x20, #0x58
  413cdc:	mov	w1, #0x4                   	// #4
  413ce0:	mov	x2, x19
  413ce4:	bl	4041f0 <siphash24_compress@plt>
  413ce8:	add	x0, x20, #0x5c
  413cec:	mov	w1, #0x4                   	// #4
  413cf0:	mov	x2, x19
  413cf4:	bl	4041f0 <siphash24_compress@plt>
  413cf8:	add	x0, x20, #0x60
  413cfc:	mov	w1, #0x2                   	// #2
  413d00:	mov	x2, x19
  413d04:	bl	4041f0 <siphash24_compress@plt>
  413d08:	ldr	x0, [x20, #104]
  413d0c:	mov	x1, x19
  413d10:	bl	404260 <dns_name_hash_func@plt>
  413d14:	ldp	x0, x1, [x20, #112]
  413d18:	b	413af8 <ascii_strlower_n@plt+0xf6e8>
  413d1c:	add	x0, x20, #0x50
  413d20:	mov	w1, #0x10                  	// #16
  413d24:	b	413af8 <ascii_strlower_n@plt+0xf6e8>
  413d28:	add	x0, x20, #0x50
  413d2c:	mov	w1, #0x1                   	// #1
  413d30:	mov	x2, x19
  413d34:	bl	4041f0 <siphash24_compress@plt>
  413d38:	add	x0, x20, #0x51
  413d3c:	b	413da8 <ascii_strlower_n@plt+0xf998>
  413d40:	add	x0, x20, #0x50
  413d44:	mov	w1, #0x1                   	// #1
  413d48:	mov	x2, x19
  413d4c:	bl	4041f0 <siphash24_compress@plt>
  413d50:	add	x0, x20, #0x51
  413d54:	mov	w1, #0x1                   	// #1
  413d58:	mov	x2, x19
  413d5c:	bl	4041f0 <siphash24_compress@plt>
  413d60:	add	x0, x20, #0x52
  413d64:	mov	w1, #0x2                   	// #2
  413d68:	mov	x2, x19
  413d6c:	bl	4041f0 <siphash24_compress@plt>
  413d70:	ldp	x0, x1, [x20, #88]
  413d74:	mov	x2, x19
  413d78:	bl	4041f0 <siphash24_compress@plt>
  413d7c:	ldp	x0, x1, [x20, #104]
  413d80:	b	413af8 <ascii_strlower_n@plt+0xf6e8>
  413d84:	add	x0, x20, #0x50
  413d88:	mov	w1, #0x1                   	// #1
  413d8c:	mov	x2, x19
  413d90:	bl	4041f0 <siphash24_compress@plt>
  413d94:	add	x0, x20, #0x51
  413d98:	mov	w1, #0x1                   	// #1
  413d9c:	mov	x2, x19
  413da0:	bl	4041f0 <siphash24_compress@plt>
  413da4:	add	x0, x20, #0x52
  413da8:	mov	w1, #0x1                   	// #1
  413dac:	mov	x2, x19
  413db0:	bl	4041f0 <siphash24_compress@plt>
  413db4:	ldp	x0, x1, [x20, #88]
  413db8:	b	413af8 <ascii_strlower_n@plt+0xf6e8>
  413dbc:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  413dc0:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  413dc4:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  413dc8:	add	x1, x1, #0x974
  413dcc:	add	x2, x2, #0x148
  413dd0:	add	x4, x4, #0xb19
  413dd4:	mov	w3, #0x53e                 	// #1342
  413dd8:	bl	403aa0 <log_assert_failed_realm@plt>
  413ddc:	stp	x29, x30, [sp, #-32]!
  413de0:	stp	x20, x19, [sp, #16]
  413de4:	mov	x19, x1
  413de8:	mov	x20, x0
  413dec:	ldr	x0, [x0, #8]
  413df0:	ldr	x1, [x1, #8]
  413df4:	mov	x29, sp
  413df8:	bl	411b00 <ascii_strlower_n@plt+0xd6f0>
  413dfc:	cbnz	w0, 413e24 <ascii_strlower_n@plt+0xfa14>
  413e00:	mov	x0, x20
  413e04:	mov	x1, x19
  413e08:	bl	41281c <ascii_strlower_n@plt+0xe40c>
  413e0c:	cbz	w0, 413e18 <ascii_strlower_n@plt+0xfa08>
  413e10:	mov	w0, wzr
  413e14:	b	413e24 <ascii_strlower_n@plt+0xfa14>
  413e18:	cmp	x20, x19
  413e1c:	cset	w8, hi  // hi = pmore
  413e20:	csinv	w0, w8, wzr, cs  // cs = hs, nlast
  413e24:	ldp	x20, x19, [sp, #16]
  413e28:	ldp	x29, x30, [sp], #32
  413e2c:	ret
  413e30:	stp	x29, x30, [sp, #-32]!
  413e34:	stp	x20, x19, [sp, #16]
  413e38:	mov	x29, sp
  413e3c:	cbz	x0, 414144 <ascii_strlower_n@plt+0xfd34>
  413e40:	mov	x20, x0
  413e44:	ldr	x0, [x0, #8]
  413e48:	bl	411db8 <ascii_strlower_n@plt+0xd9a8>
  413e4c:	mov	x19, x0
  413e50:	cbz	x0, 414134 <ascii_strlower_n@plt+0xfd24>
  413e54:	ldr	w8, [x20, #24]
  413e58:	ldrb	w9, [x19, #48]
  413e5c:	str	w8, [x19, #24]
  413e60:	ldr	x8, [x20, #32]
  413e64:	str	x8, [x19, #32]
  413e68:	ldr	x8, [x20, #40]
  413e6c:	str	x8, [x19, #40]
  413e70:	ldrb	w8, [x20, #48]
  413e74:	bfxil	w9, w8, #0, #1
  413e78:	strb	w9, [x19, #48]
  413e7c:	tbnz	w8, #0, 413f34 <ascii_strlower_n@plt+0xfb24>
  413e80:	ldr	x8, [x20, #8]
  413e84:	ldrh	w8, [x8, #6]
  413e88:	cmp	w8, #0x1b
  413e8c:	b.le	413ec0 <ascii_strlower_n@plt+0xfab0>
  413e90:	sub	w9, w8, #0x1c
  413e94:	cmp	w9, #0x18
  413e98:	b.hi	413ef0 <ascii_strlower_n@plt+0xfae0>  // b.pmore
  413e9c:	adrp	x8, 41e000 <ascii_strlower_n@plt+0x19bf0>
  413ea0:	add	x8, x8, #0x841
  413ea4:	adr	x10, 413eb4 <ascii_strlower_n@plt+0xfaa4>
  413ea8:	ldrb	w11, [x8, x9]
  413eac:	add	x10, x10, x11, lsl #2
  413eb0:	br	x10
  413eb4:	ldr	q0, [x20, #80]
  413eb8:	str	q0, [x19, #80]
  413ebc:	b	414134 <ascii_strlower_n@plt+0xfd24>
  413ec0:	sub	w8, w8, #0x1
  413ec4:	cmp	w8, #0xf
  413ec8:	b.hi	413f34 <ascii_strlower_n@plt+0xfb24>  // b.pmore
  413ecc:	adrp	x9, 41e000 <ascii_strlower_n@plt+0x19bf0>
  413ed0:	add	x9, x9, #0x831
  413ed4:	adr	x10, 413ee4 <ascii_strlower_n@plt+0xfad4>
  413ed8:	ldrb	w11, [x9, x8]
  413edc:	add	x10, x10, x11, lsl #2
  413ee0:	br	x10
  413ee4:	ldr	x0, [x20, #80]
  413ee8:	bl	403ae0 <strdup@plt>
  413eec:	b	413f74 <ascii_strlower_n@plt+0xfb64>
  413ef0:	cmp	w8, #0x63
  413ef4:	b.eq	413f6c <ascii_strlower_n@plt+0xfb5c>  // b.none
  413ef8:	cmp	w8, #0x101
  413efc:	b.ne	413f34 <ascii_strlower_n@plt+0xfb24>  // b.any
  413f00:	ldrb	w8, [x20, #80]
  413f04:	strb	w8, [x19, #80]
  413f08:	ldr	x0, [x20, #88]
  413f0c:	bl	403ae0 <strdup@plt>
  413f10:	str	x0, [x19, #88]
  413f14:	cbz	x0, 414128 <ascii_strlower_n@plt+0xfd18>
  413f18:	ldp	x0, x1, [x20, #96]
  413f1c:	bl	404190 <memdup@plt>
  413f20:	str	x0, [x19, #96]
  413f24:	cbz	x0, 414128 <ascii_strlower_n@plt+0xfd18>
  413f28:	ldr	x8, [x20, #104]
  413f2c:	str	x8, [x19, #104]
  413f30:	b	414134 <ascii_strlower_n@plt+0xfd24>
  413f34:	ldp	x0, x1, [x20, #80]
  413f38:	bl	404190 <memdup@plt>
  413f3c:	str	x0, [x19, #80]
  413f40:	cbz	x0, 414128 <ascii_strlower_n@plt+0xfd18>
  413f44:	ldr	x8, [x20, #88]
  413f48:	str	x8, [x19, #88]
  413f4c:	b	414134 <ascii_strlower_n@plt+0xfd24>
  413f50:	ldrh	w8, [x20, #80]
  413f54:	strh	w8, [x19, #80]
  413f58:	ldrb	w8, [x20, #82]
  413f5c:	strb	w8, [x19, #82]
  413f60:	ldrb	w8, [x20, #83]
  413f64:	strb	w8, [x19, #83]
  413f68:	b	41410c <ascii_strlower_n@plt+0xfcfc>
  413f6c:	ldr	x0, [x20, #80]
  413f70:	bl	414164 <ascii_strlower_n@plt+0xfd54>
  413f74:	str	x0, [x19, #80]
  413f78:	cbnz	x0, 414134 <ascii_strlower_n@plt+0xfd24>
  413f7c:	b	414128 <ascii_strlower_n@plt+0xfd18>
  413f80:	ldr	w8, [x20, #80]
  413f84:	str	w8, [x19, #80]
  413f88:	b	414134 <ascii_strlower_n@plt+0xfd24>
  413f8c:	ldr	x0, [x20, #80]
  413f90:	bl	403ae0 <strdup@plt>
  413f94:	str	x0, [x19, #80]
  413f98:	cbz	x0, 414128 <ascii_strlower_n@plt+0xfd18>
  413f9c:	ldr	x0, [x20, #88]
  413fa0:	bl	403ae0 <strdup@plt>
  413fa4:	str	x0, [x19, #88]
  413fa8:	cbz	x0, 414128 <ascii_strlower_n@plt+0xfd18>
  413fac:	ldr	q0, [x20, #96]
  413fb0:	str	q0, [x19, #96]
  413fb4:	ldr	w8, [x20, #112]
  413fb8:	str	w8, [x19, #112]
  413fbc:	b	414134 <ascii_strlower_n@plt+0xfd24>
  413fc0:	ldr	x0, [x20, #80]
  413fc4:	bl	403ae0 <strdup@plt>
  413fc8:	str	x0, [x19, #80]
  413fcc:	cbnz	x0, 413ff8 <ascii_strlower_n@plt+0xfbe8>
  413fd0:	b	414128 <ascii_strlower_n@plt+0xfd18>
  413fd4:	ldrh	w8, [x20, #80]
  413fd8:	strh	w8, [x19, #80]
  413fdc:	b	413ff8 <ascii_strlower_n@plt+0xfbe8>
  413fe0:	ldrh	w8, [x20, #80]
  413fe4:	strh	w8, [x19, #80]
  413fe8:	ldrh	w8, [x20, #82]
  413fec:	strh	w8, [x19, #82]
  413ff0:	ldrh	w8, [x20, #84]
  413ff4:	strh	w8, [x19, #84]
  413ff8:	ldr	x0, [x20, #88]
  413ffc:	bl	403ae0 <strdup@plt>
  414000:	str	x0, [x19, #88]
  414004:	cbnz	x0, 414134 <ascii_strlower_n@plt+0xfd24>
  414008:	b	414128 <ascii_strlower_n@plt+0xfd18>
  41400c:	ldrb	w8, [x20, #80]
  414010:	strb	w8, [x19, #80]
  414014:	ldrb	w8, [x20, #81]
  414018:	strb	w8, [x19, #81]
  41401c:	b	41410c <ascii_strlower_n@plt+0xfcfc>
  414020:	ldrh	w8, [x20, #80]
  414024:	strh	w8, [x19, #80]
  414028:	ldrb	w8, [x20, #82]
  41402c:	strb	w8, [x19, #82]
  414030:	ldrb	w8, [x20, #83]
  414034:	strb	w8, [x19, #83]
  414038:	ldur	x8, [x20, #84]
  41403c:	stur	x8, [x19, #84]
  414040:	ldr	w8, [x20, #92]
  414044:	str	w8, [x19, #92]
  414048:	ldrh	w8, [x20, #96]
  41404c:	strh	w8, [x19, #96]
  414050:	ldr	x0, [x20, #104]
  414054:	bl	403ae0 <strdup@plt>
  414058:	str	x0, [x19, #104]
  41405c:	cbz	x0, 414128 <ascii_strlower_n@plt+0xfd18>
  414060:	ldp	x0, x1, [x20, #112]
  414064:	bl	404190 <memdup@plt>
  414068:	str	x0, [x19, #112]
  41406c:	cbz	x0, 414128 <ascii_strlower_n@plt+0xfd18>
  414070:	ldr	x8, [x20, #120]
  414074:	str	x8, [x19, #120]
  414078:	b	414134 <ascii_strlower_n@plt+0xfd24>
  41407c:	ldr	x0, [x20, #80]
  414080:	bl	403ae0 <strdup@plt>
  414084:	str	x0, [x19, #80]
  414088:	cbz	x0, 414128 <ascii_strlower_n@plt+0xfd18>
  41408c:	ldr	x0, [x20, #88]
  414090:	bl	4043a0 <bitmap_copy@plt>
  414094:	b	414000 <ascii_strlower_n@plt+0xfbf0>
  414098:	ldrb	w8, [x20, #80]
  41409c:	strb	w8, [x19, #80]
  4140a0:	ldrb	w8, [x20, #81]
  4140a4:	strb	w8, [x19, #81]
  4140a8:	ldrh	w8, [x20, #82]
  4140ac:	strh	w8, [x19, #82]
  4140b0:	ldp	x0, x1, [x20, #88]
  4140b4:	bl	404190 <memdup@plt>
  4140b8:	str	x0, [x19, #88]
  4140bc:	cbz	x0, 414128 <ascii_strlower_n@plt+0xfd18>
  4140c0:	ldp	x8, x0, [x20, #96]
  4140c4:	str	x8, [x19, #96]
  4140c8:	ldr	x1, [x20, #112]
  4140cc:	bl	404190 <memdup@plt>
  4140d0:	ldr	x8, [x19, #112]
  4140d4:	str	x0, [x19, #104]
  4140d8:	cbz	x8, 414128 <ascii_strlower_n@plt+0xfd18>
  4140dc:	ldp	x8, x0, [x20, #112]
  4140e0:	str	x8, [x19, #112]
  4140e4:	bl	4043a0 <bitmap_copy@plt>
  4140e8:	str	x0, [x19, #120]
  4140ec:	cbnz	x0, 414134 <ascii_strlower_n@plt+0xfd24>
  4140f0:	b	414128 <ascii_strlower_n@plt+0xfd18>
  4140f4:	ldrb	w8, [x20, #80]
  4140f8:	strb	w8, [x19, #80]
  4140fc:	ldrb	w8, [x20, #81]
  414100:	strb	w8, [x19, #81]
  414104:	ldrb	w8, [x20, #82]
  414108:	strb	w8, [x19, #82]
  41410c:	ldp	x0, x1, [x20, #88]
  414110:	bl	404190 <memdup@plt>
  414114:	str	x0, [x19, #88]
  414118:	cbz	x0, 414128 <ascii_strlower_n@plt+0xfd18>
  41411c:	ldr	x8, [x20, #96]
  414120:	str	x8, [x19, #96]
  414124:	b	414134 <ascii_strlower_n@plt+0xfd24>
  414128:	mov	x0, x19
  41412c:	bl	411e90 <ascii_strlower_n@plt+0xda80>
  414130:	mov	x19, xzr
  414134:	mov	x0, x19
  414138:	ldp	x20, x19, [sp, #16]
  41413c:	ldp	x29, x30, [sp], #32
  414140:	ret
  414144:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  414148:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  41414c:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  414150:	add	x1, x1, #0x974
  414154:	add	x2, x2, #0x148
  414158:	add	x4, x4, #0xb69
  41415c:	mov	w3, #0x5df                 	// #1503
  414160:	bl	403aa0 <log_assert_failed_realm@plt>
  414164:	stp	x29, x30, [sp, #-48]!
  414168:	str	x21, [sp, #16]
  41416c:	stp	x20, x19, [sp, #32]
  414170:	mov	x29, sp
  414174:	cbz	x0, 4141dc <ascii_strlower_n@plt+0xfdcc>
  414178:	mov	x20, x0
  41417c:	mov	x21, xzr
  414180:	mov	x19, xzr
  414184:	ldr	x8, [x20]
  414188:	mov	x0, x20
  41418c:	add	x1, x8, #0x19
  414190:	bl	404190 <memdup@plt>
  414194:	cbz	x0, 4141e4 <ascii_strlower_n@plt+0xfdd4>
  414198:	cbz	x21, 4141b8 <ascii_strlower_n@plt+0xfda8>
  41419c:	ldr	x8, [x21, #8]
  4141a0:	str	x8, [x0, #8]
  4141a4:	cbz	x8, 4141ac <ascii_strlower_n@plt+0xfd9c>
  4141a8:	str	x0, [x8, #16]
  4141ac:	str	x21, [x0, #16]
  4141b0:	str	x0, [x21, #8]
  4141b4:	b	4141cc <ascii_strlower_n@plt+0xfdbc>
  4141b8:	str	x19, [x0, #8]
  4141bc:	cbz	x19, 4141c4 <ascii_strlower_n@plt+0xfdb4>
  4141c0:	str	x0, [x19, #16]
  4141c4:	str	xzr, [x0, #16]
  4141c8:	mov	x19, x0
  4141cc:	ldr	x20, [x20, #8]
  4141d0:	mov	x21, x0
  4141d4:	cbnz	x20, 414184 <ascii_strlower_n@plt+0xfd74>
  4141d8:	b	4141fc <ascii_strlower_n@plt+0xfdec>
  4141dc:	mov	x19, xzr
  4141e0:	b	4141fc <ascii_strlower_n@plt+0xfdec>
  4141e4:	cbz	x19, 4141fc <ascii_strlower_n@plt+0xfdec>
  4141e8:	ldr	x20, [x19, #8]
  4141ec:	mov	x0, x19
  4141f0:	bl	403a30 <free@plt>
  4141f4:	mov	x19, x20
  4141f8:	cbnz	x20, 4141e8 <ascii_strlower_n@plt+0xfdd8>
  4141fc:	mov	x0, x19
  414200:	ldp	x20, x19, [sp, #32]
  414204:	ldr	x21, [sp, #16]
  414208:	ldp	x29, x30, [sp], #48
  41420c:	ret
  414210:	stp	x29, x30, [sp, #-48]!
  414214:	str	x21, [sp, #16]
  414218:	stp	x20, x19, [sp, #32]
  41421c:	mov	x29, sp
  414220:	cbz	x0, 4142a8 <ascii_strlower_n@plt+0xfe98>
  414224:	mov	x19, x0
  414228:	ldr	x0, [x0]
  41422c:	ldr	x8, [x0, #8]
  414230:	ldrh	w8, [x8, #6]
  414234:	cmp	w8, #0x29
  414238:	b.ne	414244 <ascii_strlower_n@plt+0xfe34>  // b.any
  41423c:	mov	w0, #0xffffffea            	// #-22
  414240:	b	414290 <ascii_strlower_n@plt+0xfe80>
  414244:	ldr	w8, [x0, #24]
  414248:	cmp	w8, w1
  41424c:	csel	w21, w8, w1, cc  // cc = lo, ul, last
  414250:	b.ls	414268 <ascii_strlower_n@plt+0xfe58>  // b.plast
  414254:	ldr	w8, [x0]
  414258:	cmp	w8, #0x1
  41425c:	b.ne	414270 <ascii_strlower_n@plt+0xfe60>  // b.any
  414260:	str	w21, [x0, #24]
  414264:	b	41428c <ascii_strlower_n@plt+0xfe7c>
  414268:	mov	w0, wzr
  41426c:	b	414290 <ascii_strlower_n@plt+0xfe80>
  414270:	bl	413e30 <ascii_strlower_n@plt+0xfa20>
  414274:	cbz	x0, 4142a0 <ascii_strlower_n@plt+0xfe90>
  414278:	str	w21, [x0, #24]
  41427c:	mov	x20, x0
  414280:	ldr	x0, [x19]
  414284:	bl	411e90 <ascii_strlower_n@plt+0xda80>
  414288:	str	x20, [x19]
  41428c:	mov	w0, #0x1                   	// #1
  414290:	ldp	x20, x19, [sp, #32]
  414294:	ldr	x21, [sp, #16]
  414298:	ldp	x29, x30, [sp], #48
  41429c:	ret
  4142a0:	mov	w0, #0xfffffff4            	// #-12
  4142a4:	b	414290 <ascii_strlower_n@plt+0xfe80>
  4142a8:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4142ac:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4142b0:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4142b4:	add	x1, x1, #0x974
  4142b8:	add	x2, x2, #0x148
  4142bc:	add	x4, x4, #0xbaa
  4142c0:	mov	w3, #0x6a0                 	// #1696
  4142c4:	bl	403aa0 <log_assert_failed_realm@plt>
  4142c8:	stp	x29, x30, [sp, #-32]!
  4142cc:	str	x19, [sp, #16]
  4142d0:	mov	x29, sp
  4142d4:	cbz	x0, 4142e8 <ascii_strlower_n@plt+0xfed8>
  4142d8:	ldr	x19, [x0, #8]
  4142dc:	bl	403a30 <free@plt>
  4142e0:	mov	x0, x19
  4142e4:	cbnz	x19, 4142d8 <ascii_strlower_n@plt+0xfec8>
  4142e8:	ldr	x19, [sp, #16]
  4142ec:	mov	x0, xzr
  4142f0:	ldp	x29, x30, [sp], #32
  4142f4:	ret
  4142f8:	stp	x29, x30, [sp, #-32]!
  4142fc:	str	x19, [sp, #16]
  414300:	mov	x19, x0
  414304:	mov	w0, #0x1                   	// #1
  414308:	mov	w1, #0x19                  	// #25
  41430c:	mov	x29, sp
  414310:	bl	404070 <calloc@plt>
  414314:	cbz	x0, 414328 <ascii_strlower_n@plt+0xff18>
  414318:	mov	x8, x0
  41431c:	mov	w0, wzr
  414320:	str	x8, [x19]
  414324:	b	41432c <ascii_strlower_n@plt+0xff1c>
  414328:	mov	w0, #0xfffffff4            	// #-12
  41432c:	ldr	x19, [sp, #16]
  414330:	ldp	x29, x30, [sp], #32
  414334:	ret
  414338:	stp	x29, x30, [sp, #-32]!
  41433c:	mov	x29, sp
  414340:	str	x19, [sp, #16]
  414344:	str	wzr, [x29, #28]
  414348:	cbz	x0, 414390 <ascii_strlower_n@plt+0xff80>
  41434c:	mov	x19, x0
  414350:	adrp	x0, 43e000 <ascii_strlower_n@plt+0x39bf0>
  414354:	add	x0, x0, #0x3f8
  414358:	mov	w1, #0xff                  	// #255
  41435c:	mov	x2, x19
  414360:	bl	404210 <string_table_lookup@plt>
  414364:	tbz	w0, #31, 414394 <ascii_strlower_n@plt+0xff84>
  414368:	add	x2, x29, #0x1c
  41436c:	mov	x0, x19
  414370:	mov	w1, wzr
  414374:	bl	4043b0 <safe_atou_full@plt>
  414378:	ldr	w8, [x29, #28]
  41437c:	mov	w9, #0xffffffff            	// #-1
  414380:	cmp	w8, #0x100
  414384:	ccmp	w0, w9, #0x4, cc  // cc = lo, ul, last
  414388:	csinv	w0, w8, wzr, gt
  41438c:	b	414394 <ascii_strlower_n@plt+0xff84>
  414390:	mov	w0, #0xffffffff            	// #-1
  414394:	ldr	x19, [sp, #16]
  414398:	ldp	x29, x30, [sp], #32
  41439c:	ret
  4143a0:	stp	x29, x30, [sp, #-32]!
  4143a4:	cmp	w0, #0xff
  4143a8:	str	x19, [sp, #16]
  4143ac:	mov	x29, sp
  4143b0:	b.ls	4143bc <ascii_strlower_n@plt+0xffac>  // b.plast
  4143b4:	mov	w0, #0xffffffde            	// #-34
  4143b8:	b	414414 <ascii_strlower_n@plt+0x10004>
  4143bc:	mov	w2, w0
  4143c0:	mov	x19, x1
  4143c4:	cmp	w0, #0x4
  4143c8:	b.gt	4143ec <ascii_strlower_n@plt+0xffdc>
  4143cc:	adrp	x8, 43e000 <ascii_strlower_n@plt+0x39bf0>
  4143d0:	add	x8, x8, #0xbf0
  4143d4:	ldr	x0, [x8, w2, uxtw #3]
  4143d8:	bl	403ae0 <strdup@plt>
  4143dc:	str	x0, [x29, #24]
  4143e0:	cbz	x0, 414410 <ascii_strlower_n@plt+0x10000>
  4143e4:	mov	x8, x0
  4143e8:	b	414404 <ascii_strlower_n@plt+0xfff4>
  4143ec:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  4143f0:	add	x1, x1, #0x984
  4143f4:	add	x0, x29, #0x18
  4143f8:	bl	403e20 <asprintf@plt>
  4143fc:	tbnz	w0, #31, 414410 <ascii_strlower_n@plt+0x10000>
  414400:	ldr	x8, [x29, #24]
  414404:	mov	w0, wzr
  414408:	str	x8, [x19]
  41440c:	b	414414 <ascii_strlower_n@plt+0x10004>
  414410:	mov	w0, #0xfffffff4            	// #-12
  414414:	ldr	x19, [sp, #16]
  414418:	ldp	x29, x30, [sp], #32
  41441c:	ret
  414420:	stp	x29, x30, [sp, #-32]!
  414424:	mov	x29, sp
  414428:	str	x19, [sp, #16]
  41442c:	str	wzr, [x29, #28]
  414430:	cbz	x0, 414478 <ascii_strlower_n@plt+0x10068>
  414434:	mov	x19, x0
  414438:	adrp	x0, 43e000 <ascii_strlower_n@plt+0x39bf0>
  41443c:	add	x0, x0, #0xbf0
  414440:	mov	w1, #0x5                   	// #5
  414444:	mov	x2, x19
  414448:	bl	404210 <string_table_lookup@plt>
  41444c:	tbz	w0, #31, 41447c <ascii_strlower_n@plt+0x1006c>
  414450:	add	x2, x29, #0x1c
  414454:	mov	x0, x19
  414458:	mov	w1, wzr
  41445c:	bl	4043b0 <safe_atou_full@plt>
  414460:	ldr	w8, [x29, #28]
  414464:	mov	w9, #0xffffffff            	// #-1
  414468:	cmp	w8, #0x100
  41446c:	ccmp	w0, w9, #0x4, cc  // cc = lo, ul, last
  414470:	csinv	w0, w8, wzr, gt
  414474:	b	41447c <ascii_strlower_n@plt+0x1006c>
  414478:	mov	w0, #0xffffffff            	// #-1
  41447c:	ldr	x19, [sp, #16]
  414480:	ldp	x29, x30, [sp], #32
  414484:	ret
  414488:	stp	x29, x30, [sp, #-32]!
  41448c:	lsl	x8, x0, #4
  414490:	stp	x20, x19, [sp, #16]
  414494:	mov	x19, x0
  414498:	add	x1, x8, #0x18
  41449c:	mov	w0, #0x1                   	// #1
  4144a0:	mov	x29, sp
  4144a4:	mov	w20, #0x1                   	// #1
  4144a8:	bl	404070 <calloc@plt>
  4144ac:	cbz	x0, 4144b8 <ascii_strlower_n@plt+0x100a8>
  4144b0:	str	w20, [x0]
  4144b4:	str	x19, [x0, #16]
  4144b8:	ldp	x20, x19, [sp, #16]
  4144bc:	ldp	x29, x30, [sp], #32
  4144c0:	ret
  4144c4:	stp	x29, x30, [sp, #-16]!
  4144c8:	mov	x29, sp
  4144cc:	cbz	x0, 4144e0 <ascii_strlower_n@plt+0x100d0>
  4144d0:	ldr	w8, [x0]
  4144d4:	cbz	w8, 4144e8 <ascii_strlower_n@plt+0x100d8>
  4144d8:	add	w8, w8, #0x1
  4144dc:	str	w8, [x0]
  4144e0:	ldp	x29, x30, [sp], #16
  4144e4:	ret
  4144e8:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4144ec:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4144f0:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4144f4:	add	x1, x1, #0x46f
  4144f8:	add	x2, x2, #0xdc2
  4144fc:	add	x4, x4, #0xde4
  414500:	mov	w3, #0x2b                  	// #43
  414504:	mov	w0, wzr
  414508:	bl	403aa0 <log_assert_failed_realm@plt>
  41450c:	stp	x29, x30, [sp, #-48]!
  414510:	str	x21, [sp, #16]
  414514:	stp	x20, x19, [sp, #32]
  414518:	mov	x29, sp
  41451c:	cbz	x0, 41457c <ascii_strlower_n@plt+0x1016c>
  414520:	ldr	w8, [x0]
  414524:	mov	x19, x0
  414528:	cbz	w8, 414590 <ascii_strlower_n@plt+0x10180>
  41452c:	subs	w8, w8, #0x1
  414530:	str	w8, [x19]
  414534:	b.ne	41457c <ascii_strlower_n@plt+0x1016c>  // b.any
  414538:	ldr	x8, [x19, #8]
  41453c:	cbz	x8, 414574 <ascii_strlower_n@plt+0x10164>
  414540:	ldr	x0, [x19, #24]
  414544:	bl	411e90 <ascii_strlower_n@plt+0xda80>
  414548:	ldr	x8, [x19, #8]
  41454c:	cmp	x8, #0x2
  414550:	b.cc	414574 <ascii_strlower_n@plt+0x10164>  // b.lo, b.ul, b.last
  414554:	add	x20, x19, #0x28
  414558:	mov	w21, #0x1                   	// #1
  41455c:	ldr	x0, [x20], #16
  414560:	bl	411e90 <ascii_strlower_n@plt+0xda80>
  414564:	ldr	x8, [x19, #8]
  414568:	add	x21, x21, #0x1
  41456c:	cmp	x21, x8
  414570:	b.cc	41455c <ascii_strlower_n@plt+0x1014c>  // b.lo, b.ul, b.last
  414574:	mov	x0, x19
  414578:	bl	403a30 <free@plt>
  41457c:	ldp	x20, x19, [sp, #32]
  414580:	ldr	x21, [sp, #16]
  414584:	mov	x0, xzr
  414588:	ldp	x29, x30, [sp], #48
  41458c:	ret
  414590:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  414594:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  414598:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  41459c:	add	x1, x1, #0x46f
  4145a0:	add	x2, x2, #0xdc2
  4145a4:	add	x4, x4, #0xe0b
  4145a8:	mov	w3, #0x2b                  	// #43
  4145ac:	mov	w0, wzr
  4145b0:	bl	403aa0 <log_assert_failed_realm@plt>
  4145b4:	stp	x29, x30, [sp, #-80]!
  4145b8:	str	x25, [sp, #16]
  4145bc:	stp	x24, x23, [sp, #32]
  4145c0:	stp	x22, x21, [sp, #48]
  4145c4:	stp	x20, x19, [sp, #64]
  4145c8:	mov	x29, sp
  4145cc:	cbz	x1, 41470c <ascii_strlower_n@plt+0x102fc>
  4145d0:	mov	x22, x0
  4145d4:	cbz	x0, 4146ac <ascii_strlower_n@plt+0x1029c>
  4145d8:	ldr	w8, [x22]
  4145dc:	cmp	w8, #0x1
  4145e0:	b.ls	4145ec <ascii_strlower_n@plt+0x101dc>  // b.plast
  4145e4:	mov	w0, #0xfffffff0            	// #-16
  4145e8:	b	4146b0 <ascii_strlower_n@plt+0x102a0>
  4145ec:	ldr	x8, [x22, #8]
  4145f0:	mov	w19, w3
  4145f4:	mov	w21, w2
  4145f8:	mov	x20, x1
  4145fc:	cbz	x8, 414678 <ascii_strlower_n@plt+0x10268>
  414600:	mov	x24, xzr
  414604:	add	x23, x22, #0x18
  414608:	ldr	w8, [x23, #8]
  41460c:	cmp	w8, w21
  414610:	b.ne	414660 <ascii_strlower_n@plt+0x10250>  // b.any
  414614:	ldr	x8, [x23]
  414618:	ldr	x1, [x20, #8]
  41461c:	ldr	x0, [x8, #8]
  414620:	bl	4114c0 <ascii_strlower_n@plt+0xd0b0>
  414624:	tbnz	w0, #31, 4146b0 <ascii_strlower_n@plt+0x102a0>
  414628:	cbz	w0, 414660 <ascii_strlower_n@plt+0x10250>
  41462c:	ldr	x0, [x23]
  414630:	ldr	w8, [x20, #24]
  414634:	ldr	w9, [x0, #24]
  414638:	cmp	w8, #0x0
  41463c:	cset	w8, eq  // eq = none
  414640:	cmp	w9, #0x0
  414644:	cset	w9, eq  // eq = none
  414648:	eor	w8, w8, w9
  41464c:	tbnz	w8, #0, 4146c8 <ascii_strlower_n@plt+0x102b8>
  414650:	mov	x1, x20
  414654:	bl	412250 <ascii_strlower_n@plt+0xde40>
  414658:	tbnz	w0, #31, 4146b0 <ascii_strlower_n@plt+0x102a0>
  41465c:	cbnz	w0, 4146d0 <ascii_strlower_n@plt+0x102c0>
  414660:	ldr	x25, [x22, #8]
  414664:	add	x24, x24, #0x1
  414668:	add	x23, x23, #0x10
  41466c:	cmp	x24, x25
  414670:	b.cc	414608 <ascii_strlower_n@plt+0x101f8>  // b.lo, b.ul, b.last
  414674:	b	41467c <ascii_strlower_n@plt+0x1026c>
  414678:	mov	x25, xzr
  41467c:	ldr	x8, [x22, #16]
  414680:	cmp	x25, x8
  414684:	b.cs	4146ac <ascii_strlower_n@plt+0x1029c>  // b.hs, b.nlast
  414688:	add	x8, x25, #0x1
  41468c:	mov	x0, x20
  414690:	str	x8, [x22, #8]
  414694:	bl	411e48 <ascii_strlower_n@plt+0xda38>
  414698:	add	x8, x22, x25, lsl #4
  41469c:	str	x0, [x8, #24]
  4146a0:	mov	w0, #0x1                   	// #1
  4146a4:	stp	w21, w19, [x8, #32]
  4146a8:	b	4146b0 <ascii_strlower_n@plt+0x102a0>
  4146ac:	mov	w0, #0xffffffe4            	// #-28
  4146b0:	ldp	x20, x19, [sp, #64]
  4146b4:	ldp	x22, x21, [sp, #48]
  4146b8:	ldp	x24, x23, [sp, #32]
  4146bc:	ldr	x25, [sp, #16]
  4146c0:	ldp	x29, x30, [sp], #80
  4146c4:	ret
  4146c8:	mov	w0, #0xffffffea            	// #-22
  4146cc:	b	4146b0 <ascii_strlower_n@plt+0x102a0>
  4146d0:	ldr	x8, [x23]
  4146d4:	ldr	w9, [x20, #24]
  4146d8:	ldr	w8, [x8, #24]
  4146dc:	cmp	w9, w8
  4146e0:	b.ls	4146f8 <ascii_strlower_n@plt+0x102e8>  // b.plast
  4146e4:	mov	x0, x20
  4146e8:	bl	411e48 <ascii_strlower_n@plt+0xda38>
  4146ec:	ldr	x0, [x23]
  4146f0:	bl	411e90 <ascii_strlower_n@plt+0xda80>
  4146f4:	str	x20, [x23]
  4146f8:	ldr	w8, [x23, #12]
  4146fc:	mov	w0, wzr
  414700:	orr	w8, w8, w19
  414704:	str	w8, [x23, #12]
  414708:	b	4146b0 <ascii_strlower_n@plt+0x102a0>
  41470c:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  414710:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  414714:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  414718:	add	x1, x1, #0x974
  41471c:	add	x2, x2, #0xdc2
  414720:	add	x4, x4, #0xe34
  414724:	mov	w3, #0x51                  	// #81
  414728:	mov	w0, wzr
  41472c:	bl	403aa0 <log_assert_failed_realm@plt>
  414730:	stp	x29, x30, [sp, #-48]!
  414734:	stp	x22, x21, [sp, #16]
  414738:	stp	x20, x19, [sp, #32]
  41473c:	mov	x29, sp
  414740:	cbz	x1, 414798 <ascii_strlower_n@plt+0x10388>
  414744:	mov	x21, x0
  414748:	cbz	x0, 414784 <ascii_strlower_n@plt+0x10374>
  41474c:	ldp	x22, x8, [x21, #8]
  414750:	cmp	x22, x8
  414754:	b.cs	414784 <ascii_strlower_n@plt+0x10374>  // b.hs, b.nlast
  414758:	add	x8, x22, #0x1
  41475c:	mov	x0, x1
  414760:	mov	w19, w3
  414764:	mov	w20, w2
  414768:	str	x8, [x21, #8]
  41476c:	bl	411e48 <ascii_strlower_n@plt+0xda38>
  414770:	add	x8, x21, x22, lsl #4
  414774:	str	x0, [x8, #24]
  414778:	mov	w0, #0x1                   	// #1
  41477c:	stp	w20, w19, [x8, #32]
  414780:	b	414788 <ascii_strlower_n@plt+0x10378>
  414784:	mov	w0, #0xffffffe4            	// #-28
  414788:	ldp	x20, x19, [sp, #32]
  41478c:	ldp	x22, x21, [sp, #16]
  414790:	ldp	x29, x30, [sp], #48
  414794:	ret
  414798:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  41479c:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4147a0:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  4147a4:	add	x1, x1, #0x974
  4147a8:	add	x2, x2, #0xdc2
  4147ac:	add	x4, x4, #0x342
  4147b0:	mov	w3, #0x2e                  	// #46
  4147b4:	mov	w0, wzr
  4147b8:	bl	403aa0 <log_assert_failed_realm@plt>
  4147bc:	stp	x29, x30, [sp, #-48]!
  4147c0:	stp	x22, x21, [sp, #16]
  4147c4:	stp	x20, x19, [sp, #32]
  4147c8:	mov	x29, sp
  4147cc:	cbz	x0, 414820 <ascii_strlower_n@plt+0x10410>
  4147d0:	mov	x21, x1
  4147d4:	cbz	x1, 414840 <ascii_strlower_n@plt+0x10430>
  4147d8:	mov	w1, #0x1                   	// #1
  4147dc:	mov	w19, w3
  4147e0:	mov	w20, w2
  4147e4:	mov	x22, x0
  4147e8:	bl	414864 <ascii_strlower_n@plt+0x10454>
  4147ec:	tbnz	w0, #31, 414810 <ascii_strlower_n@plt+0x10400>
  4147f0:	ldr	x0, [x22]
  4147f4:	mov	x1, x21
  4147f8:	mov	w2, w20
  4147fc:	mov	w3, w19
  414800:	ldp	x20, x19, [sp, #32]
  414804:	ldp	x22, x21, [sp, #16]
  414808:	ldp	x29, x30, [sp], #48
  41480c:	b	4145b4 <ascii_strlower_n@plt+0x101a4>
  414810:	ldp	x20, x19, [sp, #32]
  414814:	ldp	x22, x21, [sp, #16]
  414818:	ldp	x29, x30, [sp], #48
  41481c:	ret
  414820:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  414824:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  414828:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  41482c:	add	x1, x1, #0x53d
  414830:	add	x2, x2, #0xdc2
  414834:	add	x4, x4, #0xe7e
  414838:	mov	w3, #0x8d                  	// #141
  41483c:	bl	403aa0 <log_assert_failed_realm@plt>
  414840:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  414844:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  414848:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  41484c:	add	x1, x1, #0x974
  414850:	add	x2, x2, #0xdc2
  414854:	add	x4, x4, #0xe7e
  414858:	mov	w3, #0x8e                  	// #142
  41485c:	mov	w0, wzr
  414860:	bl	403aa0 <log_assert_failed_realm@plt>
  414864:	stp	x29, x30, [sp, #-64]!
  414868:	str	x23, [sp, #16]
  41486c:	stp	x22, x21, [sp, #32]
  414870:	stp	x20, x19, [sp, #48]
  414874:	mov	x29, sp
  414878:	cbz	x0, 414918 <ascii_strlower_n@plt+0x10508>
  41487c:	mov	x21, x1
  414880:	mov	x19, x0
  414884:	bl	415a20 <ascii_strlower_n@plt+0x11610>
  414888:	mov	w20, w0
  41488c:	cmn	w0, #0x10
  414890:	b.ne	414900 <ascii_strlower_n@plt+0x104f0>  // b.any
  414894:	ldr	x20, [x19]
  414898:	cbz	x20, 414938 <ascii_strlower_n@plt+0x10528>
  41489c:	ldr	x8, [x20, #8]
  4148a0:	mov	w1, #0x18                  	// #24
  4148a4:	mov	w0, #0x1                   	// #1
  4148a8:	mov	w23, #0x1                   	// #1
  4148ac:	add	x22, x8, x21
  4148b0:	bfi	x1, x22, #5, #59
  4148b4:	bl	404070 <calloc@plt>
  4148b8:	cbz	x0, 4148ec <ascii_strlower_n@plt+0x104dc>
  4148bc:	lsl	x8, x22, #1
  4148c0:	mov	x1, x20
  4148c4:	mov	x21, x0
  4148c8:	str	w23, [x0]
  4148cc:	str	x8, [x0, #16]
  4148d0:	bl	415018 <ascii_strlower_n@plt+0x10c08>
  4148d4:	tbnz	w0, #31, 4148f4 <ascii_strlower_n@plt+0x104e4>
  4148d8:	ldr	x0, [x19]
  4148dc:	bl	41450c <ascii_strlower_n@plt+0x100fc>
  4148e0:	mov	w20, wzr
  4148e4:	str	x21, [x19]
  4148e8:	b	414900 <ascii_strlower_n@plt+0x104f0>
  4148ec:	mov	w20, #0xfffffff4            	// #-12
  4148f0:	b	414900 <ascii_strlower_n@plt+0x104f0>
  4148f4:	mov	w20, w0
  4148f8:	mov	x0, x21
  4148fc:	bl	41450c <ascii_strlower_n@plt+0x100fc>
  414900:	mov	w0, w20
  414904:	ldp	x20, x19, [sp, #48]
  414908:	ldp	x22, x21, [sp, #32]
  41490c:	ldr	x23, [sp, #16]
  414910:	ldp	x29, x30, [sp], #64
  414914:	ret
  414918:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  41491c:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  414920:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  414924:	add	x1, x1, #0x53d
  414928:	add	x2, x2, #0xdc2
  41492c:	add	x4, x4, #0x27e
  414930:	mov	w3, #0x28d                 	// #653
  414934:	bl	403aa0 <log_assert_failed_realm@plt>
  414938:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf0>
  41493c:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  414940:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  414944:	add	x1, x1, #0x2b4
  414948:	add	x2, x2, #0xdc2
  41494c:	add	x4, x4, #0x27e
  414950:	mov	w3, #0x299                 	// #665
  414954:	mov	w0, wzr
  414958:	bl	403aa0 <log_assert_failed_realm@plt>
  41495c:	stp	x29, x30, [sp, #-64]!
  414960:	str	x23, [sp, #16]
  414964:	mov	x23, x1
  414968:	stp	x22, x21, [sp, #32]
  41496c:	mov	w22, w2
  414970:	mov	x21, x0
  414974:	mov	w0, #0x1                   	// #1
  414978:	mov	w1, #0x6                   	// #6
  41497c:	mov	x2, x23
  414980:	stp	x20, x19, [sp, #48]
  414984:	mov	x29, sp
  414988:	mov	w20, w3
  41498c:	bl	411e10 <ascii_strlower_n@plt+0xda00>
  414990:	cbz	x0, 4149f0 <ascii_strlower_n@plt+0x105e0>
  414994:	mov	x19, x0
  414998:	str	w22, [x0, #24]
  41499c:	mov	x0, x23
  4149a0:	bl	403ae0 <strdup@plt>
  4149a4:	str	x0, [x19, #80]
  4149a8:	cbz	x0, 4149f8 <ascii_strlower_n@plt+0x105e8>
  4149ac:	adrp	x0, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4149b0:	add	x0, x0, #0xed0
  4149b4:	mov	x1, x23
  4149b8:	mov	x2, xzr
  4149bc:	bl	403f70 <strjoin_real@plt>
  4149c0:	str	x0, [x19, #88]
  4149c4:	cbz	x0, 4149f8 <ascii_strlower_n@plt+0x105e8>
  4149c8:	movi	v0.4s, #0x1
  4149cc:	mov	w3, #0x1                   	// #1
  4149d0:	mov	x0, x21
  4149d4:	mov	x1, x19
  4149d8:	mov	w2, w20
  4149dc:	str	q0, [x19, #96]
  4149e0:	str	w22, [x19, #112]
  4149e4:	bl	4145b4 <ascii_strlower_n@plt+0x101a4>
  4149e8:	mov	w20, w0
  4149ec:	b	4149fc <ascii_strlower_n@plt+0x105ec>
  4149f0:	mov	w20, #0xfffffff4            	// #-12
  4149f4:	b	414a04 <ascii_strlower_n@plt+0x105f4>
  4149f8:	mov	w20, #0xfffffff4            	// #-12
  4149fc:	mov	x0, x19
  414a00:	bl	411e90 <ascii_strlower_n@plt+0xda80>
  414a04:	mov	w0, w20
  414a08:	ldp	x20, x19, [sp, #48]
  414a0c:	ldp	x22, x21, [sp, #32]
  414a10:	ldr	x23, [sp, #16]
  414a14:	ldp	x29, x30, [sp], #64
  414a18:	ret
  414a1c:	stp	x29, x30, [sp, #-80]!
  414a20:	stp	x26, x25, [sp, #16]
  414a24:	stp	x24, x23, [sp, #32]
  414a28:	stp	x22, x21, [sp, #48]
  414a2c:	stp	x20, x19, [sp, #64]
  414a30:	mov	x29, sp
  414a34:	cbz	x1, 414b10 <ascii_strlower_n@plt+0x10700>
  414a38:	mov	x19, x2
  414a3c:	mov	x21, x0
  414a40:	cbz	x0, 414af8 <ascii_strlower_n@plt+0x106e8>
  414a44:	ldr	x8, [x21, #8]
  414a48:	mov	x20, x1
  414a4c:	cbz	x8, 414a5c <ascii_strlower_n@plt+0x1064c>
  414a50:	ldr	x1, [x21, #24]
  414a54:	ldr	w26, [x21, #36]
  414a58:	b	414a64 <ascii_strlower_n@plt+0x10654>
  414a5c:	mov	x1, xzr
  414a60:	mov	w26, wzr
  414a64:	ldr	x8, [x21, #8]
  414a68:	cbz	x8, 414af8 <ascii_strlower_n@plt+0x106e8>
  414a6c:	mov	w22, wzr
  414a70:	mov	w23, wzr
  414a74:	mov	x24, xzr
  414a78:	add	x25, x21, #0x28
  414a7c:	mov	x0, x20
  414a80:	mov	x2, xzr
  414a84:	bl	411598 <ascii_strlower_n@plt+0xd188>
  414a88:	tbnz	w0, #31, 414ae0 <ascii_strlower_n@plt+0x106d0>
  414a8c:	cbz	w0, 414aa4 <ascii_strlower_n@plt+0x10694>
  414a90:	cbz	x19, 414b08 <ascii_strlower_n@plt+0x106f8>
  414a94:	tst	w22, #0x1
  414a98:	csinv	w8, w23, wzr, ne  // ne = any
  414a9c:	and	w23, w8, w26
  414aa0:	mov	w22, #0x1                   	// #1
  414aa4:	ldr	x8, [x21, #8]
  414aa8:	add	x24, x24, #0x1
  414aac:	cmp	x24, x8
  414ab0:	b.cs	414ac0 <ascii_strlower_n@plt+0x106b0>  // b.hs, b.nlast
  414ab4:	ldr	x1, [x25]
  414ab8:	ldr	w26, [x25, #12]
  414abc:	b	414ac8 <ascii_strlower_n@plt+0x106b8>
  414ac0:	mov	x1, xzr
  414ac4:	mov	w26, wzr
  414ac8:	cmp	x24, x8
  414acc:	add	x25, x25, #0x10
  414ad0:	b.cc	414a7c <ascii_strlower_n@plt+0x1066c>  // b.lo, b.ul, b.last
  414ad4:	cbz	x19, 414adc <ascii_strlower_n@plt+0x106cc>
  414ad8:	str	w23, [x19]
  414adc:	and	w0, w22, #0x1
  414ae0:	ldp	x20, x19, [sp, #64]
  414ae4:	ldp	x22, x21, [sp, #48]
  414ae8:	ldp	x24, x23, [sp, #32]
  414aec:	ldp	x26, x25, [sp, #16]
  414af0:	ldp	x29, x30, [sp], #80
  414af4:	ret
  414af8:	mov	w22, wzr
  414afc:	mov	w23, wzr
  414b00:	cbnz	x19, 414ad8 <ascii_strlower_n@plt+0x106c8>
  414b04:	b	414adc <ascii_strlower_n@plt+0x106cc>
  414b08:	mov	w0, #0x1                   	// #1
  414b0c:	b	414ae0 <ascii_strlower_n@plt+0x106d0>
  414b10:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  414b14:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  414b18:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  414b1c:	add	x1, x1, #0xd24
  414b20:	add	x2, x2, #0xdc2
  414b24:	add	x4, x4, #0xed6
  414b28:	mov	w3, #0xb7                  	// #183
  414b2c:	mov	w0, wzr
  414b30:	bl	403aa0 <log_assert_failed_realm@plt>
  414b34:	cbz	x0, 414ba0 <ascii_strlower_n@plt+0x10790>
  414b38:	ldr	x8, [x0, #8]
  414b3c:	cbz	x8, 414b48 <ascii_strlower_n@plt+0x10738>
  414b40:	ldr	x11, [x0, #24]
  414b44:	b	414b4c <ascii_strlower_n@plt+0x1073c>
  414b48:	mov	x11, xzr
  414b4c:	ldr	x8, [x0, #8]
  414b50:	cbz	x8, 414b9c <ascii_strlower_n@plt+0x1078c>
  414b54:	mov	x9, xzr
  414b58:	add	x10, x0, #0x28
  414b5c:	mov	w0, #0x1                   	// #1
  414b60:	ldr	x11, [x11, #8]
  414b64:	ldrh	w11, [x11, #6]
  414b68:	cmp	w11, #0x2f
  414b6c:	b.eq	414ba0 <ascii_strlower_n@plt+0x10790>  // b.none
  414b70:	cmp	w11, #0x32
  414b74:	b.eq	414ba0 <ascii_strlower_n@plt+0x10790>  // b.none
  414b78:	add	x9, x9, #0x1
  414b7c:	cmp	x9, x8
  414b80:	b.cs	414b8c <ascii_strlower_n@plt+0x1077c>  // b.hs, b.nlast
  414b84:	ldr	x11, [x10]
  414b88:	b	414b90 <ascii_strlower_n@plt+0x10780>
  414b8c:	mov	x11, xzr
  414b90:	cmp	x8, x9
  414b94:	add	x10, x10, #0x10
  414b98:	b.ne	414b60 <ascii_strlower_n@plt+0x10750>  // b.any
  414b9c:	mov	w0, wzr
  414ba0:	ret
  414ba4:	sub	sp, sp, #0x40
  414ba8:	stp	x29, x30, [sp, #16]
  414bac:	stp	x22, x21, [sp, #32]
  414bb0:	stp	x20, x19, [sp, #48]
  414bb4:	add	x29, sp, #0x10
  414bb8:	cbz	x0, 414c50 <ascii_strlower_n@plt+0x10840>
  414bbc:	ldr	x8, [x0, #8]
  414bc0:	mov	x19, x1
  414bc4:	mov	x20, x0
  414bc8:	cbz	x8, 414bd0 <ascii_strlower_n@plt+0x107c0>
  414bcc:	ldr	x8, [x20, #24]
  414bd0:	ldr	x9, [x20, #8]
  414bd4:	cbz	x9, 414c4c <ascii_strlower_n@plt+0x1083c>
  414bd8:	mov	x21, xzr
  414bdc:	add	x22, x20, #0x28
  414be0:	ldr	x0, [x8, #8]
  414be4:	ldrh	w8, [x0, #6]
  414be8:	cmp	w8, #0x32
  414bec:	b.ne	414c24 <ascii_strlower_n@plt+0x10814>  // b.any
  414bf0:	bl	4110a8 <ascii_strlower_n@plt+0xcc98>
  414bf4:	str	x0, [sp, #8]
  414bf8:	add	x0, sp, #0x8
  414bfc:	mov	w2, #0x3f                  	// #63
  414c00:	mov	x1, xzr
  414c04:	mov	w3, wzr
  414c08:	bl	404110 <dns_label_unescape@plt>
  414c0c:	tbnz	w0, #31, 414c50 <ascii_strlower_n@plt+0x10840>
  414c10:	cbz	w0, 414c24 <ascii_strlower_n@plt+0x10814>
  414c14:	ldr	x0, [sp, #8]
  414c18:	mov	x1, x19
  414c1c:	bl	404250 <dns_name_equal@plt>
  414c20:	cbnz	w0, 414c50 <ascii_strlower_n@plt+0x10840>
  414c24:	ldr	x9, [x20, #8]
  414c28:	add	x21, x21, #0x1
  414c2c:	cmp	x21, x9
  414c30:	b.cs	414c3c <ascii_strlower_n@plt+0x1082c>  // b.hs, b.nlast
  414c34:	ldr	x8, [x22]
  414c38:	b	414c40 <ascii_strlower_n@plt+0x10830>
  414c3c:	mov	x8, xzr
  414c40:	cmp	x21, x9
  414c44:	add	x22, x22, #0x10
  414c48:	b.cc	414be0 <ascii_strlower_n@plt+0x107d0>  // b.lo, b.ul, b.last
  414c4c:	mov	w0, wzr
  414c50:	ldp	x20, x19, [sp, #48]
  414c54:	ldp	x22, x21, [sp, #32]
  414c58:	ldp	x29, x30, [sp, #16]
  414c5c:	add	sp, sp, #0x40
  414c60:	ret
  414c64:	sub	sp, sp, #0x70
  414c68:	stp	x29, x30, [sp, #16]
  414c6c:	stp	x28, x27, [sp, #32]
  414c70:	stp	x26, x25, [sp, #48]
  414c74:	stp	x24, x23, [sp, #64]
  414c78:	stp	x22, x21, [sp, #80]
  414c7c:	stp	x20, x19, [sp, #96]
  414c80:	add	x29, sp, #0x10
  414c84:	cbz	x1, 414dac <ascii_strlower_n@plt+0x1099c>
  414c88:	ldrh	w8, [x1, #6]
  414c8c:	mov	x21, x1
  414c90:	mov	x22, x0
  414c94:	mov	w0, wzr
  414c98:	cmp	w8, #0x6
  414c9c:	b.eq	414d8c <ascii_strlower_n@plt+0x1097c>  // b.none
  414ca0:	cbz	x22, 414d8c <ascii_strlower_n@plt+0x1097c>
  414ca4:	ldr	x8, [x22, #8]
  414ca8:	mov	x20, x2
  414cac:	str	x3, [sp, #8]
  414cb0:	cbz	x8, 414cc0 <ascii_strlower_n@plt+0x108b0>
  414cb4:	ldr	x28, [x22, #24]
  414cb8:	ldr	w24, [x22, #36]
  414cbc:	b	414cc8 <ascii_strlower_n@plt+0x108b8>
  414cc0:	mov	x28, xzr
  414cc4:	mov	w24, wzr
  414cc8:	ldr	x8, [x22, #8]
  414ccc:	cbz	x8, 414d7c <ascii_strlower_n@plt+0x1096c>
  414cd0:	mov	x25, xzr
  414cd4:	mov	w19, wzr
  414cd8:	mov	x26, xzr
  414cdc:	add	x27, x22, #0x28
  414ce0:	ldr	x1, [x28, #8]
  414ce4:	mov	x0, x21
  414ce8:	bl	41197c <ascii_strlower_n@plt+0xd56c>
  414cec:	tbnz	w0, #31, 414d8c <ascii_strlower_n@plt+0x1097c>
  414cf0:	cbz	w0, 414d2c <ascii_strlower_n@plt+0x1091c>
  414cf4:	cbz	x25, 414d24 <ascii_strlower_n@plt+0x10914>
  414cf8:	ldr	x0, [x28, #8]
  414cfc:	bl	4110a8 <ascii_strlower_n@plt+0xcc98>
  414d00:	ldr	x8, [x25, #8]
  414d04:	mov	x23, x0
  414d08:	mov	x0, x8
  414d0c:	bl	4110a8 <ascii_strlower_n@plt+0xcc98>
  414d10:	mov	x1, x0
  414d14:	mov	x0, x23
  414d18:	bl	404240 <dns_name_endswith@plt>
  414d1c:	tbnz	w0, #31, 414d8c <ascii_strlower_n@plt+0x1097c>
  414d20:	cbnz	w0, 414d2c <ascii_strlower_n@plt+0x1091c>
  414d24:	mov	x25, x28
  414d28:	mov	w19, w24
  414d2c:	ldr	x8, [x22, #8]
  414d30:	add	x26, x26, #0x1
  414d34:	cmp	x26, x8
  414d38:	b.cs	414d48 <ascii_strlower_n@plt+0x10938>  // b.hs, b.nlast
  414d3c:	ldr	x28, [x27]
  414d40:	ldr	w24, [x27, #12]
  414d44:	b	414d50 <ascii_strlower_n@plt+0x10940>
  414d48:	mov	x28, xzr
  414d4c:	mov	w24, wzr
  414d50:	cmp	x26, x8
  414d54:	add	x27, x27, #0x10
  414d58:	b.cc	414ce0 <ascii_strlower_n@plt+0x108d0>  // b.lo, b.ul, b.last
  414d5c:	cbz	x25, 414d88 <ascii_strlower_n@plt+0x10978>
  414d60:	cbz	x20, 414d68 <ascii_strlower_n@plt+0x10958>
  414d64:	str	x25, [x20]
  414d68:	ldr	x8, [sp, #8]
  414d6c:	cbz	x8, 414d74 <ascii_strlower_n@plt+0x10964>
  414d70:	str	w19, [x8]
  414d74:	mov	w0, #0x1                   	// #1
  414d78:	b	414d8c <ascii_strlower_n@plt+0x1097c>
  414d7c:	mov	w19, wzr
  414d80:	mov	x25, xzr
  414d84:	cbnz	x25, 414d60 <ascii_strlower_n@plt+0x10950>
  414d88:	mov	w0, wzr
  414d8c:	ldp	x20, x19, [sp, #96]
  414d90:	ldp	x22, x21, [sp, #80]
  414d94:	ldp	x24, x23, [sp, #64]
  414d98:	ldp	x26, x25, [sp, #48]
  414d9c:	ldp	x28, x27, [sp, #32]
  414da0:	ldp	x29, x30, [sp, #16]
  414da4:	add	sp, sp, #0x70
  414da8:	ret
  414dac:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  414db0:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  414db4:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  414db8:	add	x1, x1, #0xd24
  414dbc:	add	x2, x2, #0xdc2
  414dc0:	add	x4, x4, #0xf26
  414dc4:	mov	w3, #0xfc                  	// #252
  414dc8:	mov	w0, wzr
  414dcc:	bl	403aa0 <log_assert_failed_realm@plt>
  414dd0:	stp	x29, x30, [sp, #-80]!
  414dd4:	stp	x26, x25, [sp, #16]
  414dd8:	stp	x24, x23, [sp, #32]
  414ddc:	stp	x22, x21, [sp, #48]
  414de0:	stp	x20, x19, [sp, #64]
  414de4:	mov	x29, sp
  414de8:	cbz	x1, 414ebc <ascii_strlower_n@plt+0x10aac>
  414dec:	mov	x22, x0
  414df0:	ldrh	w0, [x1, #6]
  414df4:	mov	x19, x3
  414df8:	mov	x20, x2
  414dfc:	mov	x21, x1
  414e00:	bl	41710c <ascii_strlower_n@plt+0x12cfc>
  414e04:	mov	w8, w0
  414e08:	mov	w0, wzr
  414e0c:	tbz	w8, #0, 414ea4 <ascii_strlower_n@plt+0x10a94>
  414e10:	cbz	x22, 414ea4 <ascii_strlower_n@plt+0x10a94>
  414e14:	ldr	x8, [x22, #8]
  414e18:	cbz	x8, 414e28 <ascii_strlower_n@plt+0x10a18>
  414e1c:	ldr	x23, [x22, #24]
  414e20:	ldr	w24, [x22, #36]
  414e24:	b	414e30 <ascii_strlower_n@plt+0x10a20>
  414e28:	mov	x23, xzr
  414e2c:	mov	w24, wzr
  414e30:	ldr	x8, [x22, #8]
  414e34:	cbz	x8, 414e88 <ascii_strlower_n@plt+0x10a78>
  414e38:	mov	x25, xzr
  414e3c:	add	x26, x22, #0x28
  414e40:	ldr	x1, [x23, #8]
  414e44:	mov	x0, x21
  414e48:	mov	x2, xzr
  414e4c:	bl	411744 <ascii_strlower_n@plt+0xd334>
  414e50:	tbnz	w0, #31, 414ea4 <ascii_strlower_n@plt+0x10a94>
  414e54:	cbnz	w0, 414e90 <ascii_strlower_n@plt+0x10a80>
  414e58:	ldr	x8, [x22, #8]
  414e5c:	add	x25, x25, #0x1
  414e60:	cmp	x25, x8
  414e64:	b.cs	414e74 <ascii_strlower_n@plt+0x10a64>  // b.hs, b.nlast
  414e68:	ldr	x23, [x26]
  414e6c:	ldr	w24, [x26, #12]
  414e70:	b	414e7c <ascii_strlower_n@plt+0x10a6c>
  414e74:	mov	x23, xzr
  414e78:	mov	w24, wzr
  414e7c:	cmp	x25, x8
  414e80:	add	x26, x26, #0x10
  414e84:	b.cc	414e40 <ascii_strlower_n@plt+0x10a30>  // b.lo, b.ul, b.last
  414e88:	mov	w0, wzr
  414e8c:	b	414ea4 <ascii_strlower_n@plt+0x10a94>
  414e90:	cbz	x20, 414e98 <ascii_strlower_n@plt+0x10a88>
  414e94:	str	x23, [x20]
  414e98:	cbz	x19, 414ea0 <ascii_strlower_n@plt+0x10a90>
  414e9c:	str	w24, [x19]
  414ea0:	mov	w0, #0x1                   	// #1
  414ea4:	ldp	x20, x19, [sp, #64]
  414ea8:	ldp	x22, x21, [sp, #48]
  414eac:	ldp	x24, x23, [sp, #32]
  414eb0:	ldp	x26, x25, [sp, #16]
  414eb4:	ldp	x29, x30, [sp], #80
  414eb8:	ret
  414ebc:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  414ec0:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  414ec4:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  414ec8:	add	x1, x1, #0xd24
  414ecc:	add	x2, x2, #0xdc2
  414ed0:	add	x4, x4, #0xf8b
  414ed4:	mov	w3, #0x125                 	// #293
  414ed8:	mov	w0, wzr
  414edc:	bl	403aa0 <log_assert_failed_realm@plt>
  414ee0:	stp	x29, x30, [sp, #-64]!
  414ee4:	stp	x24, x23, [sp, #16]
  414ee8:	stp	x22, x21, [sp, #32]
  414eec:	stp	x20, x19, [sp, #48]
  414ef0:	mov	x29, sp
  414ef4:	cbz	x2, 414ff4 <ascii_strlower_n@plt+0x10be4>
  414ef8:	mov	x19, x2
  414efc:	mov	x20, x1
  414f00:	mov	x22, x0
  414f04:	cbz	x0, 414fb0 <ascii_strlower_n@plt+0x10ba0>
  414f08:	ldr	x8, [x22, #8]
  414f0c:	cbz	x8, 414fb0 <ascii_strlower_n@plt+0x10ba0>
  414f10:	cbz	x20, 414fb8 <ascii_strlower_n@plt+0x10ba8>
  414f14:	ldr	x9, [x20, #8]
  414f18:	cbz	x9, 414fb8 <ascii_strlower_n@plt+0x10ba8>
  414f1c:	add	x23, x9, x8
  414f20:	lsl	x8, x23, #4
  414f24:	add	x1, x8, #0x18
  414f28:	mov	w0, #0x1                   	// #1
  414f2c:	mov	w24, #0x1                   	// #1
  414f30:	bl	404070 <calloc@plt>
  414f34:	cbz	x0, 414fe0 <ascii_strlower_n@plt+0x10bd0>
  414f38:	mov	x1, x22
  414f3c:	mov	x21, x0
  414f40:	str	w24, [x0]
  414f44:	str	x23, [x0, #16]
  414f48:	bl	415018 <ascii_strlower_n@plt+0x10c08>
  414f4c:	tbnz	w0, #31, 414fa0 <ascii_strlower_n@plt+0x10b90>
  414f50:	ldr	x8, [x20, #8]
  414f54:	cbz	x8, 414fe8 <ascii_strlower_n@plt+0x10bd8>
  414f58:	ldr	x1, [x20, #24]
  414f5c:	ldp	w2, w3, [x20, #32]
  414f60:	mov	x0, x21
  414f64:	bl	4145b4 <ascii_strlower_n@plt+0x101a4>
  414f68:	tbnz	w0, #31, 414fa0 <ascii_strlower_n@plt+0x10b90>
  414f6c:	mov	x23, xzr
  414f70:	add	x8, x20, #0x34
  414f74:	ldr	x9, [x20, #8]
  414f78:	add	x23, x23, #0x1
  414f7c:	cmp	x23, x9
  414f80:	b.cs	414fe8 <ascii_strlower_n@plt+0x10bd8>  // b.hs, b.nlast
  414f84:	ldur	x1, [x8, #-12]
  414f88:	ldp	w2, w3, [x8, #-4]
  414f8c:	mov	x0, x21
  414f90:	add	x24, x8, #0x10
  414f94:	bl	4145b4 <ascii_strlower_n@plt+0x101a4>
  414f98:	mov	x8, x24
  414f9c:	tbz	w0, #31, 414f74 <ascii_strlower_n@plt+0x10b64>
  414fa0:	mov	w22, w0
  414fa4:	mov	x0, x21
  414fa8:	bl	41450c <ascii_strlower_n@plt+0x100fc>
  414fac:	b	414fc8 <ascii_strlower_n@plt+0x10bb8>
  414fb0:	mov	x0, x20
  414fb4:	b	414fbc <ascii_strlower_n@plt+0x10bac>
  414fb8:	mov	x0, x22
  414fbc:	bl	4144c4 <ascii_strlower_n@plt+0x100b4>
  414fc0:	mov	w22, wzr
  414fc4:	str	x0, [x19]
  414fc8:	mov	w0, w22
  414fcc:	ldp	x20, x19, [sp, #48]
  414fd0:	ldp	x22, x21, [sp, #32]
  414fd4:	ldp	x24, x23, [sp, #16]
  414fd8:	ldp	x29, x30, [sp], #64
  414fdc:	ret
  414fe0:	mov	w22, #0xfffffff4            	// #-12
  414fe4:	b	414fc8 <ascii_strlower_n@plt+0x10bb8>
  414fe8:	mov	w22, wzr
  414fec:	str	x21, [x19]
  414ff0:	b	414fc8 <ascii_strlower_n@plt+0x10bb8>
  414ff4:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  414ff8:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  414ffc:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf0>
  415000:	add	x1, x1, #0xc0e
  415004:	add	x2, x2, #0xdc2
  415008:	add	x4, x4, #0xffb
  41500c:	mov	w3, #0x13f                 	// #319
  415010:	mov	w0, wzr
  415014:	bl	403aa0 <log_assert_failed_realm@plt>
  415018:	stp	x29, x30, [sp, #-48]!
  41501c:	stp	x22, x21, [sp, #16]
  415020:	stp	x20, x19, [sp, #32]
  415024:	mov	x29, sp
  415028:	cbz	x1, 4150a4 <ascii_strlower_n@plt+0x10c94>
  41502c:	ldr	x8, [x1, #8]
  415030:	mov	x19, x1
  415034:	mov	x20, x0
  415038:	cbz	x8, 415048 <ascii_strlower_n@plt+0x10c38>
  41503c:	ldr	x1, [x19, #24]
  415040:	ldp	w2, w3, [x19, #32]
  415044:	b	415054 <ascii_strlower_n@plt+0x10c44>
  415048:	mov	w2, wzr
  41504c:	mov	x1, xzr
  415050:	mov	w3, wzr
  415054:	ldr	x8, [x19, #8]
  415058:	cbz	x8, 4150a4 <ascii_strlower_n@plt+0x10c94>
  41505c:	mov	x21, xzr
  415060:	add	x22, x19, #0x34
  415064:	mov	x0, x20
  415068:	bl	414730 <ascii_strlower_n@plt+0x10320>
  41506c:	tbnz	w0, #31, 4150a8 <ascii_strlower_n@plt+0x10c98>
  415070:	ldr	x8, [x19, #8]
  415074:	add	x21, x21, #0x1
  415078:	cmp	x21, x8
  41507c:	b.cs	41508c <ascii_strlower_n@plt+0x10c7c>  // b.hs, b.nlast
  415080:	ldur	x1, [x22, #-12]
  415084:	ldp	w2, w3, [x22, #-4]
  415088:	b	415098 <ascii_strlower_n@plt+0x10c88>
  41508c:	mov	w2, wzr
  415090:	mov	x1, xzr
  415094:	mov	w3, wzr
  415098:	cmp	x21, x8
  41509c:	add	x22, x22, #0x10
  4150a0:	b.cc	415064 <ascii_strlower_n@plt+0x10c54>  // b.lo, b.ul, b.last
  4150a4:	mov	w0, wzr
  4150a8:	ldp	x20, x19, [sp, #32]
  4150ac:	ldp	x22, x21, [sp, #16]
  4150b0:	ldp	x29, x30, [sp], #48
  4150b4:	ret
  4150b8:	stp	x29, x30, [sp, #-32]!
  4150bc:	str	x19, [sp, #16]
  4150c0:	mov	x29, sp
  4150c4:	cbz	x0, 4150fc <ascii_strlower_n@plt+0x10cec>
  4150c8:	mov	x19, x0
  4150cc:	ldr	x0, [x0]
  4150d0:	add	x2, x29, #0x18
  4150d4:	bl	414ee0 <ascii_strlower_n@plt+0x10ad0>
  4150d8:	tbnz	w0, #31, 4150f0 <ascii_strlower_n@plt+0x10ce0>
  4150dc:	ldr	x0, [x19]
  4150e0:	bl	41450c <ascii_strlower_n@plt+0x100fc>
  4150e4:	ldr	x8, [x29, #24]
  4150e8:	mov	w0, wzr
  4150ec:	str	x8, [x19]
  4150f0:	ldr	x19, [sp, #16]
  4150f4:	ldp	x29, x30, [sp], #32
  4150f8:	ret
  4150fc:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  415100:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  415104:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  415108:	add	x1, x1, #0x53d
  41510c:	add	x2, x2, #0xdc2
  415110:	add	x4, x4, #0x38
  415114:	mov	w3, #0x160                 	// #352
  415118:	bl	403aa0 <log_assert_failed_realm@plt>
  41511c:	stp	x29, x30, [sp, #-96]!
  415120:	stp	x28, x27, [sp, #16]
  415124:	stp	x26, x25, [sp, #32]
  415128:	stp	x24, x23, [sp, #48]
  41512c:	stp	x22, x21, [sp, #64]
  415130:	stp	x20, x19, [sp, #80]
  415134:	mov	x29, sp
  415138:	cbz	x0, 4153a8 <ascii_strlower_n@plt+0x10f98>
  41513c:	mov	x20, x1
  415140:	cbz	x1, 4153c8 <ascii_strlower_n@plt+0x10fb8>
  415144:	ldr	x9, [x0]
  415148:	mov	x19, x0
  41514c:	cbz	x9, 4151ec <ascii_strlower_n@plt+0x10ddc>
  415150:	ldr	x8, [x9, #8]
  415154:	cbz	x8, 41515c <ascii_strlower_n@plt+0x10d4c>
  415158:	ldr	x8, [x9, #24]
  41515c:	ldr	x9, [x9, #8]
  415160:	mov	w21, wzr
  415164:	mov	w22, wzr
  415168:	mov	x23, xzr
  41516c:	mov	w24, #0x28                  	// #40
  415170:	cmp	x23, x9
  415174:	b.cs	4151d0 <ascii_strlower_n@plt+0x10dc0>  // b.hs, b.nlast
  415178:	ldr	x0, [x8, #8]
  41517c:	mov	x1, x20
  415180:	bl	4114c0 <ascii_strlower_n@plt+0xd0b0>
  415184:	mov	w26, w0
  415188:	tbnz	w0, #31, 415378 <ascii_strlower_n@plt+0x10f68>
  41518c:	cmp	w26, #0x0
  415190:	cset	w8, ne  // ne = any
  415194:	cset	w9, eq  // eq = none
  415198:	orr	w21, w21, w8
  41519c:	orr	w22, w22, w9
  4151a0:	tbz	w21, #0, 4151a8 <ascii_strlower_n@plt+0x10d98>
  4151a4:	tbnz	w22, #0, 4151f4 <ascii_strlower_n@plt+0x10de4>
  4151a8:	ldr	x10, [x19]
  4151ac:	add	x23, x23, #0x1
  4151b0:	ldr	x9, [x10, #8]
  4151b4:	cmp	x23, x9
  4151b8:	b.cs	4151c4 <ascii_strlower_n@plt+0x10db4>  // b.hs, b.nlast
  4151bc:	ldr	x8, [x10, x24]
  4151c0:	b	4151c8 <ascii_strlower_n@plt+0x10db8>
  4151c4:	mov	x8, xzr
  4151c8:	add	x24, x24, #0x10
  4151cc:	cbnz	x10, 415170 <ascii_strlower_n@plt+0x10d60>
  4151d0:	tbz	w21, #0, 4151ec <ascii_strlower_n@plt+0x10ddc>
  4151d4:	ldr	x21, [x19]
  4151d8:	tbnz	w22, #0, 4151f8 <ascii_strlower_n@plt+0x10de8>
  4151dc:	mov	x0, x21
  4151e0:	bl	41450c <ascii_strlower_n@plt+0x100fc>
  4151e4:	str	xzr, [x19]
  4151e8:	b	415374 <ascii_strlower_n@plt+0x10f64>
  4151ec:	mov	w26, wzr
  4151f0:	b	415378 <ascii_strlower_n@plt+0x10f68>
  4151f4:	ldr	x21, [x19]
  4151f8:	ldr	w8, [x21]
  4151fc:	ldr	x23, [x21, #8]
  415200:	cmp	w8, #0x1
  415204:	b.ls	415244 <ascii_strlower_n@plt+0x10e34>  // b.plast
  415208:	lsl	x8, x23, #4
  41520c:	add	x1, x8, #0x18
  415210:	mov	w0, #0x1                   	// #1
  415214:	mov	w24, #0x1                   	// #1
  415218:	bl	404070 <calloc@plt>
  41521c:	cbz	x0, 4152d8 <ascii_strlower_n@plt+0x10ec8>
  415220:	str	w24, [x0]
  415224:	str	x23, [x0, #16]
  415228:	ldr	x8, [x21, #8]
  41522c:	mov	x22, x0
  415230:	cbz	x8, 4152e0 <ascii_strlower_n@plt+0x10ed0>
  415234:	ldr	x23, [x21, #24]
  415238:	ldp	w24, w25, [x21, #32]
  41523c:	cbnz	x8, 4152f0 <ascii_strlower_n@plt+0x10ee0>
  415240:	b	415368 <ascii_strlower_n@plt+0x10f58>
  415244:	cbz	x23, 415374 <ascii_strlower_n@plt+0x10f64>
  415248:	mov	x22, xzr
  41524c:	eor	x23, x22, #0xfffffffffffffff
  415250:	add	x8, x21, x22, lsl #4
  415254:	ldr	x8, [x8, #24]
  415258:	mov	x1, x20
  41525c:	ldr	x0, [x8, #8]
  415260:	bl	4114c0 <ascii_strlower_n@plt+0xd0b0>
  415264:	mov	w26, w0
  415268:	tbnz	w0, #31, 415378 <ascii_strlower_n@plt+0x10f68>
  41526c:	cbz	w26, 4152bc <ascii_strlower_n@plt+0x10eac>
  415270:	ldr	x8, [x19]
  415274:	add	x8, x8, x22, lsl #4
  415278:	ldr	x0, [x8, #24]
  41527c:	bl	411e90 <ascii_strlower_n@plt+0xda80>
  415280:	ldr	x8, [x19]
  415284:	ldr	x9, [x8, #8]
  415288:	add	x8, x8, x22, lsl #4
  41528c:	add	x0, x8, #0x18
  415290:	add	x1, x8, #0x28
  415294:	add	x8, x9, x23
  415298:	lsl	x2, x8, #4
  41529c:	bl	4043c0 <memmove@plt>
  4152a0:	ldr	x21, [x19]
  4152a4:	ldr	x8, [x21, #8]
  4152a8:	sub	x8, x8, #0x1
  4152ac:	cmp	x22, x8
  4152b0:	str	x8, [x21, #8]
  4152b4:	b.cc	415250 <ascii_strlower_n@plt+0x10e40>  // b.lo, b.ul, b.last
  4152b8:	b	415374 <ascii_strlower_n@plt+0x10f64>
  4152bc:	ldr	x21, [x19]
  4152c0:	add	x22, x22, #0x1
  4152c4:	mov	w26, #0x1                   	// #1
  4152c8:	ldr	x8, [x21, #8]
  4152cc:	cmp	x22, x8
  4152d0:	b.cc	41524c <ascii_strlower_n@plt+0x10e3c>  // b.lo, b.ul, b.last
  4152d4:	b	415378 <ascii_strlower_n@plt+0x10f68>
  4152d8:	mov	w26, #0xfffffff4            	// #-12
  4152dc:	b	415378 <ascii_strlower_n@plt+0x10f68>
  4152e0:	mov	w24, wzr
  4152e4:	mov	x23, xzr
  4152e8:	mov	w25, wzr
  4152ec:	cbz	x8, 415368 <ascii_strlower_n@plt+0x10f58>
  4152f0:	mov	x27, xzr
  4152f4:	mov	x28, xzr
  4152f8:	ldr	x0, [x23, #8]
  4152fc:	mov	x1, x20
  415300:	bl	4114c0 <ascii_strlower_n@plt+0xd0b0>
  415304:	mov	w26, w0
  415308:	tbnz	w0, #31, 41539c <ascii_strlower_n@plt+0x10f8c>
  41530c:	cbnz	w26, 415328 <ascii_strlower_n@plt+0x10f18>
  415310:	mov	x0, x22
  415314:	mov	x1, x23
  415318:	mov	w2, w24
  41531c:	mov	w3, w25
  415320:	bl	414730 <ascii_strlower_n@plt+0x10320>
  415324:	tbnz	w0, #31, 415398 <ascii_strlower_n@plt+0x10f88>
  415328:	ldr	x21, [x19]
  41532c:	add	x28, x28, #0x1
  415330:	ldr	x8, [x21, #8]
  415334:	cmp	x28, x8
  415338:	b.cs	41534c <ascii_strlower_n@plt+0x10f3c>  // b.hs, b.nlast
  41533c:	add	x9, x21, x27
  415340:	ldr	x23, [x9, #40]
  415344:	ldp	w24, w25, [x9, #48]
  415348:	b	41535c <ascii_strlower_n@plt+0x10f4c>
  41534c:	cbz	x21, 415368 <ascii_strlower_n@plt+0x10f58>
  415350:	mov	w25, wzr
  415354:	mov	x23, xzr
  415358:	mov	w24, wzr
  41535c:	cmp	x28, x8
  415360:	add	x27, x27, #0x10
  415364:	b.cc	4152f8 <ascii_strlower_n@plt+0x10ee8>  // b.lo, b.ul, b.last
  415368:	mov	x0, x21
  41536c:	bl	41450c <ascii_strlower_n@plt+0x100fc>
  415370:	str	x22, [x19]
  415374:	mov	w26, #0x1                   	// #1
  415378:	mov	w0, w26
  41537c:	ldp	x20, x19, [sp, #80]
  415380:	ldp	x22, x21, [sp, #64]
  415384:	ldp	x24, x23, [sp, #48]
  415388:	ldp	x26, x25, [sp, #32]
  41538c:	ldp	x28, x27, [sp, #16]
  415390:	ldp	x29, x30, [sp], #96
  415394:	ret
  415398:	mov	w26, w0
  41539c:	mov	x0, x22
  4153a0:	bl	41450c <ascii_strlower_n@plt+0x100fc>
  4153a4:	b	415378 <ascii_strlower_n@plt+0x10f68>
  4153a8:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4153ac:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4153b0:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  4153b4:	add	x1, x1, #0x53d
  4153b8:	add	x2, x2, #0xdc2
  4153bc:	add	x4, x4, #0x69
  4153c0:	mov	w3, #0x172                 	// #370
  4153c4:	bl	403aa0 <log_assert_failed_realm@plt>
  4153c8:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4153cc:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4153d0:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  4153d4:	add	x1, x1, #0xd24
  4153d8:	add	x2, x2, #0xdc2
  4153dc:	add	x4, x4, #0x69
  4153e0:	mov	w3, #0x173                 	// #371
  4153e4:	mov	w0, wzr
  4153e8:	bl	403aa0 <log_assert_failed_realm@plt>
  4153ec:	stp	x29, x30, [sp, #-96]!
  4153f0:	stp	x28, x27, [sp, #16]
  4153f4:	stp	x26, x25, [sp, #32]
  4153f8:	stp	x24, x23, [sp, #48]
  4153fc:	stp	x22, x21, [sp, #64]
  415400:	stp	x20, x19, [sp, #80]
  415404:	mov	x29, sp
  415408:	cbz	x0, 415678 <ascii_strlower_n@plt+0x11268>
  41540c:	mov	x20, x1
  415410:	cbz	x1, 415698 <ascii_strlower_n@plt+0x11288>
  415414:	ldr	x8, [x0]
  415418:	mov	x19, x0
  41541c:	cbz	x8, 4154c0 <ascii_strlower_n@plt+0x110b0>
  415420:	ldr	x9, [x8, #8]
  415424:	cbz	x9, 415430 <ascii_strlower_n@plt+0x11020>
  415428:	ldr	x0, [x8, #24]
  41542c:	b	415434 <ascii_strlower_n@plt+0x11024>
  415430:	mov	x0, xzr
  415434:	ldr	x8, [x8, #8]
  415438:	mov	w21, wzr
  41543c:	mov	w22, wzr
  415440:	mov	x23, xzr
  415444:	mov	w24, #0x28                  	// #40
  415448:	cmp	x23, x8
  41544c:	b.cs	4154a4 <ascii_strlower_n@plt+0x11094>  // b.hs, b.nlast
  415450:	mov	x1, x20
  415454:	bl	41281c <ascii_strlower_n@plt+0xe40c>
  415458:	mov	w26, w0
  41545c:	tbnz	w0, #31, 415648 <ascii_strlower_n@plt+0x11238>
  415460:	cmp	w26, #0x0
  415464:	cset	w8, ne  // ne = any
  415468:	cset	w9, eq  // eq = none
  41546c:	orr	w21, w21, w8
  415470:	orr	w22, w22, w9
  415474:	tbz	w21, #0, 41547c <ascii_strlower_n@plt+0x1106c>
  415478:	tbnz	w22, #0, 4154c8 <ascii_strlower_n@plt+0x110b8>
  41547c:	ldr	x9, [x19]
  415480:	add	x23, x23, #0x1
  415484:	ldr	x8, [x9, #8]
  415488:	cmp	x23, x8
  41548c:	b.cs	415498 <ascii_strlower_n@plt+0x11088>  // b.hs, b.nlast
  415490:	ldr	x0, [x9, x24]
  415494:	b	41549c <ascii_strlower_n@plt+0x1108c>
  415498:	mov	x0, xzr
  41549c:	add	x24, x24, #0x10
  4154a0:	cbnz	x9, 415448 <ascii_strlower_n@plt+0x11038>
  4154a4:	tbz	w21, #0, 4154c0 <ascii_strlower_n@plt+0x110b0>
  4154a8:	ldr	x21, [x19]
  4154ac:	tbnz	w22, #0, 4154cc <ascii_strlower_n@plt+0x110bc>
  4154b0:	mov	x0, x21
  4154b4:	bl	41450c <ascii_strlower_n@plt+0x100fc>
  4154b8:	str	xzr, [x19]
  4154bc:	b	415644 <ascii_strlower_n@plt+0x11234>
  4154c0:	mov	w26, wzr
  4154c4:	b	415648 <ascii_strlower_n@plt+0x11238>
  4154c8:	ldr	x21, [x19]
  4154cc:	ldr	w8, [x21]
  4154d0:	ldr	x23, [x21, #8]
  4154d4:	cmp	w8, #0x1
  4154d8:	b.ls	415518 <ascii_strlower_n@plt+0x11108>  // b.plast
  4154dc:	lsl	x8, x23, #4
  4154e0:	add	x1, x8, #0x18
  4154e4:	mov	w0, #0x1                   	// #1
  4154e8:	mov	w24, #0x1                   	// #1
  4154ec:	bl	404070 <calloc@plt>
  4154f0:	cbz	x0, 4155a8 <ascii_strlower_n@plt+0x11198>
  4154f4:	str	w24, [x0]
  4154f8:	str	x23, [x0, #16]
  4154fc:	ldr	x8, [x21, #8]
  415500:	mov	x22, x0
  415504:	cbz	x8, 4155b0 <ascii_strlower_n@plt+0x111a0>
  415508:	ldr	x23, [x21, #24]
  41550c:	ldp	w24, w25, [x21, #32]
  415510:	cbnz	x8, 4155c0 <ascii_strlower_n@plt+0x111b0>
  415514:	b	415638 <ascii_strlower_n@plt+0x11228>
  415518:	cbz	x23, 415644 <ascii_strlower_n@plt+0x11234>
  41551c:	mov	x22, xzr
  415520:	eor	x23, x22, #0xfffffffffffffff
  415524:	add	x8, x21, x22, lsl #4
  415528:	ldr	x0, [x8, #24]
  41552c:	mov	x1, x20
  415530:	bl	41281c <ascii_strlower_n@plt+0xe40c>
  415534:	mov	w26, w0
  415538:	tbnz	w0, #31, 415648 <ascii_strlower_n@plt+0x11238>
  41553c:	cbz	w26, 41558c <ascii_strlower_n@plt+0x1117c>
  415540:	ldr	x8, [x19]
  415544:	add	x8, x8, x22, lsl #4
  415548:	ldr	x0, [x8, #24]
  41554c:	bl	411e90 <ascii_strlower_n@plt+0xda80>
  415550:	ldr	x8, [x19]
  415554:	ldr	x9, [x8, #8]
  415558:	add	x8, x8, x22, lsl #4
  41555c:	add	x0, x8, #0x18
  415560:	add	x1, x8, #0x28
  415564:	add	x8, x9, x23
  415568:	lsl	x2, x8, #4
  41556c:	bl	4043c0 <memmove@plt>
  415570:	ldr	x21, [x19]
  415574:	ldr	x8, [x21, #8]
  415578:	sub	x8, x8, #0x1
  41557c:	cmp	x22, x8
  415580:	str	x8, [x21, #8]
  415584:	b.cc	415524 <ascii_strlower_n@plt+0x11114>  // b.lo, b.ul, b.last
  415588:	b	415644 <ascii_strlower_n@plt+0x11234>
  41558c:	ldr	x21, [x19]
  415590:	add	x22, x22, #0x1
  415594:	mov	w26, #0x1                   	// #1
  415598:	ldr	x8, [x21, #8]
  41559c:	cmp	x22, x8
  4155a0:	b.cc	415520 <ascii_strlower_n@plt+0x11110>  // b.lo, b.ul, b.last
  4155a4:	b	415648 <ascii_strlower_n@plt+0x11238>
  4155a8:	mov	w26, #0xfffffff4            	// #-12
  4155ac:	b	415648 <ascii_strlower_n@plt+0x11238>
  4155b0:	mov	w24, wzr
  4155b4:	mov	x23, xzr
  4155b8:	mov	w25, wzr
  4155bc:	cbz	x8, 415638 <ascii_strlower_n@plt+0x11228>
  4155c0:	mov	x27, xzr
  4155c4:	mov	x28, xzr
  4155c8:	mov	x0, x23
  4155cc:	mov	x1, x20
  4155d0:	bl	41281c <ascii_strlower_n@plt+0xe40c>
  4155d4:	mov	w26, w0
  4155d8:	tbnz	w0, #31, 41566c <ascii_strlower_n@plt+0x1125c>
  4155dc:	cbnz	w26, 4155f8 <ascii_strlower_n@plt+0x111e8>
  4155e0:	mov	x0, x22
  4155e4:	mov	x1, x23
  4155e8:	mov	w2, w24
  4155ec:	mov	w3, w25
  4155f0:	bl	414730 <ascii_strlower_n@plt+0x10320>
  4155f4:	tbnz	w0, #31, 415668 <ascii_strlower_n@plt+0x11258>
  4155f8:	ldr	x21, [x19]
  4155fc:	add	x28, x28, #0x1
  415600:	ldr	x8, [x21, #8]
  415604:	cmp	x28, x8
  415608:	b.cs	41561c <ascii_strlower_n@plt+0x1120c>  // b.hs, b.nlast
  41560c:	add	x9, x21, x27
  415610:	ldr	x23, [x9, #40]
  415614:	ldp	w24, w25, [x9, #48]
  415618:	b	41562c <ascii_strlower_n@plt+0x1121c>
  41561c:	cbz	x21, 415638 <ascii_strlower_n@plt+0x11228>
  415620:	mov	w25, wzr
  415624:	mov	x23, xzr
  415628:	mov	w24, wzr
  41562c:	cmp	x28, x8
  415630:	add	x27, x27, #0x10
  415634:	b.cc	4155c8 <ascii_strlower_n@plt+0x111b8>  // b.lo, b.ul, b.last
  415638:	mov	x0, x21
  41563c:	bl	41450c <ascii_strlower_n@plt+0x100fc>
  415640:	str	x22, [x19]
  415644:	mov	w26, #0x1                   	// #1
  415648:	mov	w0, w26
  41564c:	ldp	x20, x19, [sp, #80]
  415650:	ldp	x22, x21, [sp, #64]
  415654:	ldp	x24, x23, [sp, #48]
  415658:	ldp	x26, x25, [sp, #32]
  41565c:	ldp	x28, x27, [sp, #16]
  415660:	ldp	x29, x30, [sp], #96
  415664:	ret
  415668:	mov	w26, w0
  41566c:	mov	x0, x22
  415670:	bl	41450c <ascii_strlower_n@plt+0x100fc>
  415674:	b	415648 <ascii_strlower_n@plt+0x11238>
  415678:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  41567c:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  415680:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  415684:	add	x1, x1, #0x53d
  415688:	add	x2, x2, #0xdc2
  41568c:	add	x4, x4, #0xac
  415690:	mov	w3, #0x1c7                 	// #455
  415694:	bl	403aa0 <log_assert_failed_realm@plt>
  415698:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf0>
  41569c:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4156a0:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  4156a4:	add	x1, x1, #0xeb
  4156a8:	add	x2, x2, #0xdc2
  4156ac:	add	x4, x4, #0xac
  4156b0:	mov	w3, #0x1c8                 	// #456
  4156b4:	mov	w0, wzr
  4156b8:	bl	403aa0 <log_assert_failed_realm@plt>
  4156bc:	stp	x29, x30, [sp, #-96]!
  4156c0:	str	x27, [sp, #16]
  4156c4:	stp	x26, x25, [sp, #32]
  4156c8:	stp	x24, x23, [sp, #48]
  4156cc:	stp	x22, x21, [sp, #64]
  4156d0:	stp	x20, x19, [sp, #80]
  4156d4:	mov	x29, sp
  4156d8:	cbz	x0, 4157b4 <ascii_strlower_n@plt+0x113a4>
  4156dc:	mov	x20, x2
  4156e0:	cbz	x2, 4157d4 <ascii_strlower_n@plt+0x113c4>
  4156e4:	mov	x21, x1
  4156e8:	cbz	x1, 415794 <ascii_strlower_n@plt+0x11384>
  4156ec:	ldr	x8, [x21, #8]
  4156f0:	mov	w19, w3
  4156f4:	mov	x22, x0
  4156f8:	cbz	x8, 415708 <ascii_strlower_n@plt+0x112f8>
  4156fc:	ldr	x23, [x21, #24]
  415700:	ldp	w24, w27, [x21, #32]
  415704:	b	415714 <ascii_strlower_n@plt+0x11304>
  415708:	mov	w24, wzr
  41570c:	mov	x23, xzr
  415710:	mov	w27, wzr
  415714:	ldr	x8, [x21, #8]
  415718:	cbz	x8, 415794 <ascii_strlower_n@plt+0x11384>
  41571c:	mov	x25, xzr
  415720:	add	x26, x21, #0x34
  415724:	ldr	x0, [x23, #8]
  415728:	mov	x1, x20
  41572c:	bl	4114c0 <ascii_strlower_n@plt+0xd0b0>
  415730:	tbnz	w0, #31, 415798 <ascii_strlower_n@plt+0x11388>
  415734:	cbz	w0, 415760 <ascii_strlower_n@plt+0x11350>
  415738:	mov	w1, #0x1                   	// #1
  41573c:	mov	x0, x22
  415740:	bl	414864 <ascii_strlower_n@plt+0x10454>
  415744:	tbnz	w0, #31, 415798 <ascii_strlower_n@plt+0x11388>
  415748:	ldr	x0, [x22]
  41574c:	orr	w3, w27, w19
  415750:	mov	x1, x23
  415754:	mov	w2, w24
  415758:	bl	4145b4 <ascii_strlower_n@plt+0x101a4>
  41575c:	tbnz	w0, #31, 415798 <ascii_strlower_n@plt+0x11388>
  415760:	ldr	x8, [x21, #8]
  415764:	add	x25, x25, #0x1
  415768:	cmp	x25, x8
  41576c:	b.cs	41577c <ascii_strlower_n@plt+0x1136c>  // b.hs, b.nlast
  415770:	ldur	x23, [x26, #-12]
  415774:	ldp	w24, w27, [x26, #-4]
  415778:	b	415788 <ascii_strlower_n@plt+0x11378>
  41577c:	mov	w24, wzr
  415780:	mov	x23, xzr
  415784:	mov	w27, wzr
  415788:	cmp	x25, x8
  41578c:	add	x26, x26, #0x10
  415790:	b.cc	415724 <ascii_strlower_n@plt+0x11314>  // b.lo, b.ul, b.last
  415794:	mov	w0, wzr
  415798:	ldp	x20, x19, [sp, #80]
  41579c:	ldp	x22, x21, [sp, #64]
  4157a0:	ldp	x24, x23, [sp, #48]
  4157a4:	ldp	x26, x25, [sp, #32]
  4157a8:	ldr	x27, [sp, #16]
  4157ac:	ldp	x29, x30, [sp], #96
  4157b0:	ret
  4157b4:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4157b8:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4157bc:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  4157c0:	add	x1, x1, #0x53d
  4157c4:	add	x2, x2, #0xdc2
  4157c8:	add	x4, x4, #0xee
  4157cc:	mov	w3, #0x21b                 	// #539
  4157d0:	bl	403aa0 <log_assert_failed_realm@plt>
  4157d4:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4157d8:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4157dc:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  4157e0:	add	x1, x1, #0xd24
  4157e4:	add	x2, x2, #0xdc2
  4157e8:	add	x4, x4, #0xee
  4157ec:	mov	w3, #0x21c                 	// #540
  4157f0:	mov	w0, wzr
  4157f4:	bl	403aa0 <log_assert_failed_realm@plt>
  4157f8:	stp	x29, x30, [sp, #-32]!
  4157fc:	stp	x20, x19, [sp, #16]
  415800:	mov	x29, sp
  415804:	cbz	x0, 415848 <ascii_strlower_n@plt+0x11438>
  415808:	mov	x20, x1
  41580c:	cbz	x1, 415868 <ascii_strlower_n@plt+0x11458>
  415810:	mov	x19, x2
  415814:	cbz	x2, 415888 <ascii_strlower_n@plt+0x11478>
  415818:	ldr	x1, [x20]
  41581c:	mov	x2, x19
  415820:	bl	4156bc <ascii_strlower_n@plt+0x112ac>
  415824:	tbnz	w0, #31, 41583c <ascii_strlower_n@plt+0x1142c>
  415828:	mov	x0, x20
  41582c:	mov	x1, x19
  415830:	ldp	x20, x19, [sp, #16]
  415834:	ldp	x29, x30, [sp], #32
  415838:	b	41511c <ascii_strlower_n@plt+0x10d0c>
  41583c:	ldp	x20, x19, [sp, #16]
  415840:	ldp	x29, x30, [sp], #32
  415844:	ret
  415848:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf0>
  41584c:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  415850:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  415854:	add	x1, x1, #0x14c
  415858:	add	x2, x2, #0xdc2
  41585c:	add	x4, x4, #0x14f
  415860:	mov	w3, #0x238                 	// #568
  415864:	bl	403aa0 <log_assert_failed_realm@plt>
  415868:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf0>
  41586c:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  415870:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  415874:	add	x1, x1, #0x1ae
  415878:	add	x2, x2, #0xdc2
  41587c:	add	x4, x4, #0x14f
  415880:	mov	w3, #0x239                 	// #569
  415884:	b	4158a4 <ascii_strlower_n@plt+0x11494>
  415888:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  41588c:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  415890:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  415894:	add	x1, x1, #0xd24
  415898:	add	x2, x2, #0xdc2
  41589c:	add	x4, x4, #0x14f
  4158a0:	mov	w3, #0x23a                 	// #570
  4158a4:	mov	w0, wzr
  4158a8:	bl	403aa0 <log_assert_failed_realm@plt>
  4158ac:	stp	x29, x30, [sp, #-80]!
  4158b0:	str	x25, [sp, #16]
  4158b4:	stp	x24, x23, [sp, #32]
  4158b8:	stp	x22, x21, [sp, #48]
  4158bc:	stp	x20, x19, [sp, #64]
  4158c0:	mov	x29, sp
  4158c4:	cbz	x0, 4159b4 <ascii_strlower_n@plt+0x115a4>
  4158c8:	ldr	x8, [x0, #8]
  4158cc:	mov	x19, x0
  4158d0:	cmp	x8, #0x2
  4158d4:	b.cc	4159b4 <ascii_strlower_n@plt+0x115a4>  // b.lo, b.ul, b.last
  4158d8:	lsr	x9, x8, #60
  4158dc:	cbnz	x9, 4159d0 <ascii_strlower_n@plt+0x115c0>
  4158e0:	cmp	x8, #0x40, lsl #12
  4158e4:	b.hi	4159dc <ascii_strlower_n@plt+0x115cc>  // b.pmore
  4158e8:	mov	x9, sp
  4158ec:	sub	x21, x8, #0x1
  4158f0:	sub	x20, x9, x8, lsl #4
  4158f4:	mov	sp, x20
  4158f8:	mov	x22, xzr
  4158fc:	mov	x23, xzr
  415900:	and	w24, w1, #0x1
  415904:	add	x25, x19, #0x18
  415908:	ldr	x8, [x25]
  41590c:	ldr	x9, [x8, #8]
  415910:	ldrh	w10, [x9, #4]
  415914:	cmp	w10, #0x1
  415918:	b.ne	415964 <ascii_strlower_n@plt+0x11554>  // b.any
  41591c:	ldrh	w9, [x9, #6]
  415920:	cmp	w9, #0x1
  415924:	b.ne	415948 <ascii_strlower_n@plt+0x11538>  // b.any
  415928:	add	x1, x8, #0x50
  41592c:	mov	w0, #0x2                   	// #2
  415930:	bl	4043d0 <in_addr_is_link_local@plt>
  415934:	cmp	w0, w24
  415938:	b.ne	415974 <ascii_strlower_n@plt+0x11564>  // b.any
  41593c:	ldr	x8, [x25]
  415940:	ldr	x9, [x8, #8]
  415944:	ldrh	w9, [x9, #6]
  415948:	cmp	w9, #0x1c
  41594c:	b.ne	415964 <ascii_strlower_n@plt+0x11554>  // b.any
  415950:	add	x1, x8, #0x50
  415954:	mov	w0, #0xa                   	// #10
  415958:	bl	4043d0 <in_addr_is_link_local@plt>
  41595c:	cmp	w0, w24
  415960:	b.ne	415974 <ascii_strlower_n@plt+0x11564>  // b.any
  415964:	add	x9, x23, #0x1
  415968:	mov	x8, x23
  41596c:	mov	x23, x9
  415970:	b	415980 <ascii_strlower_n@plt+0x11570>
  415974:	sub	x9, x21, #0x1
  415978:	mov	x8, x21
  41597c:	mov	x21, x9
  415980:	ldr	q0, [x25], #16
  415984:	add	x22, x22, #0x1
  415988:	str	q0, [x20, x8, lsl #4]
  41598c:	ldr	x8, [x19, #8]
  415990:	cmp	x22, x8
  415994:	b.cc	415908 <ascii_strlower_n@plt+0x114f8>  // b.lo, b.ul, b.last
  415998:	add	x9, x21, #0x1
  41599c:	cmp	x23, x9
  4159a0:	b.ne	4159fc <ascii_strlower_n@plt+0x115ec>  // b.any
  4159a4:	lsl	x2, x8, #4
  4159a8:	add	x0, x19, #0x18
  4159ac:	mov	x1, x20
  4159b0:	bl	403c70 <memcpy@plt>
  4159b4:	mov	sp, x29
  4159b8:	ldp	x20, x19, [sp, #64]
  4159bc:	ldp	x22, x21, [sp, #48]
  4159c0:	ldp	x24, x23, [sp, #32]
  4159c4:	ldr	x25, [sp, #16]
  4159c8:	ldp	x29, x30, [sp], #80
  4159cc:	ret
  4159d0:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf0>
  4159d4:	add	x1, x1, #0x1b3
  4159d8:	b	4159e4 <ascii_strlower_n@plt+0x115d4>
  4159dc:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf0>
  4159e0:	add	x1, x1, #0x21a
  4159e4:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4159e8:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  4159ec:	add	x2, x2, #0xdc2
  4159f0:	add	x4, x4, #0x1e7
  4159f4:	mov	w3, #0x253                 	// #595
  4159f8:	b	415a18 <ascii_strlower_n@plt+0x11608>
  4159fc:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf0>
  415a00:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  415a04:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  415a08:	add	x1, x1, #0x242
  415a0c:	add	x2, x2, #0xdc2
  415a10:	add	x4, x4, #0x1e7
  415a14:	mov	w3, #0x260                 	// #608
  415a18:	mov	w0, wzr
  415a1c:	bl	403aa0 <log_assert_failed_realm@plt>
  415a20:	stp	x29, x30, [sp, #-48]!
  415a24:	str	x21, [sp, #16]
  415a28:	stp	x20, x19, [sp, #32]
  415a2c:	mov	x29, sp
  415a30:	cbz	x0, 415ad4 <ascii_strlower_n@plt+0x116c4>
  415a34:	mov	x20, x1
  415a38:	cbz	x1, 415ab8 <ascii_strlower_n@plt+0x116a8>
  415a3c:	mov	x19, x0
  415a40:	ldr	x0, [x0]
  415a44:	cbz	x0, 415a5c <ascii_strlower_n@plt+0x1164c>
  415a48:	ldr	w8, [x0]
  415a4c:	cmp	w8, #0x1
  415a50:	b.ls	415a80 <ascii_strlower_n@plt+0x11670>  // b.plast
  415a54:	mov	w0, #0xfffffff0            	// #-16
  415a58:	b	415ac4 <ascii_strlower_n@plt+0x116b4>
  415a5c:	lsl	x8, x20, #4
  415a60:	add	x1, x8, #0x18
  415a64:	mov	w0, #0x1                   	// #1
  415a68:	mov	w21, #0x1                   	// #1
  415a6c:	bl	404070 <calloc@plt>
  415a70:	cbz	x0, 415ac0 <ascii_strlower_n@plt+0x116b0>
  415a74:	mov	x8, x0
  415a78:	str	w21, [x0]
  415a7c:	b	415aa8 <ascii_strlower_n@plt+0x11698>
  415a80:	ldp	x8, x9, [x0, #8]
  415a84:	add	x20, x8, x20
  415a88:	cmp	x9, x20
  415a8c:	b.cs	415ab8 <ascii_strlower_n@plt+0x116a8>  // b.hs, b.nlast
  415a90:	mov	w1, #0x18                  	// #24
  415a94:	bfi	x1, x20, #5, #59
  415a98:	bl	4040c0 <realloc@plt>
  415a9c:	cbz	x0, 415ac0 <ascii_strlower_n@plt+0x116b0>
  415aa0:	mov	x8, x0
  415aa4:	lsl	x20, x20, #1
  415aa8:	mov	w0, wzr
  415aac:	str	x20, [x8, #16]
  415ab0:	str	x8, [x19]
  415ab4:	b	415ac4 <ascii_strlower_n@plt+0x116b4>
  415ab8:	mov	w0, wzr
  415abc:	b	415ac4 <ascii_strlower_n@plt+0x116b4>
  415ac0:	mov	w0, #0xfffffff4            	// #-12
  415ac4:	ldp	x20, x19, [sp, #32]
  415ac8:	ldr	x21, [sp, #16]
  415acc:	ldp	x29, x30, [sp], #48
  415ad0:	ret
  415ad4:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  415ad8:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  415adc:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  415ae0:	add	x1, x1, #0x53d
  415ae4:	add	x2, x2, #0xdc2
  415ae8:	add	x4, x4, #0x251
  415aec:	mov	w3, #0x267                 	// #615
  415af0:	bl	403aa0 <log_assert_failed_realm@plt>
  415af4:	stp	x29, x30, [sp, #-96]!
  415af8:	stp	x28, x27, [sp, #16]
  415afc:	stp	x26, x25, [sp, #32]
  415b00:	stp	x24, x23, [sp, #48]
  415b04:	stp	x22, x21, [sp, #64]
  415b08:	stp	x20, x19, [sp, #80]
  415b0c:	adrp	x8, 43f000 <ascii_strlower_n@plt+0x3abf0>
  415b10:	ldr	x8, [x8, #2688]
  415b14:	cmp	x1, #0x0
  415b18:	mov	x29, sp
  415b1c:	ldr	x8, [x8]
  415b20:	csel	x20, x8, x1, eq  // eq = none
  415b24:	cbz	x0, 415c60 <ascii_strlower_n@plt+0x11850>
  415b28:	ldr	x8, [x0, #8]
  415b2c:	mov	x19, x0
  415b30:	cbz	x8, 415b40 <ascii_strlower_n@plt+0x11730>
  415b34:	ldr	x24, [x19, #24]
  415b38:	ldp	w28, w27, [x19, #32]
  415b3c:	b	415b4c <ascii_strlower_n@plt+0x1173c>
  415b40:	mov	w28, wzr
  415b44:	mov	x24, xzr
  415b48:	mov	w27, wzr
  415b4c:	ldr	x8, [x19, #8]
  415b50:	cbz	x8, 415c60 <ascii_strlower_n@plt+0x11850>
  415b54:	adrp	x21, 41c000 <ascii_strlower_n@plt+0x17bf0>
  415b58:	adrp	x22, 41d000 <ascii_strlower_n@plt+0x18bf0>
  415b5c:	adrp	x23, 41d000 <ascii_strlower_n@plt+0x18bf0>
  415b60:	mov	x25, xzr
  415b64:	add	x26, x19, #0x34
  415b68:	add	x21, x21, #0xdc2
  415b6c:	add	x22, x22, #0x2b7
  415b70:	add	x23, x23, #0x2ca
  415b74:	mov	w0, #0x9                   	// #9
  415b78:	mov	x1, x20
  415b7c:	bl	403d40 <fputc@plt>
  415b80:	mov	x0, x24
  415b84:	bl	4128bc <ascii_strlower_n@plt+0xe4ac>
  415b88:	cbz	x0, 415bec <ascii_strlower_n@plt+0x117dc>
  415b8c:	mov	x1, x20
  415b90:	bl	4043e0 <fputs@plt>
  415b94:	and	w8, w27, #0x7
  415b98:	orr	w8, w8, w28
  415b9c:	cbz	w8, 415bb0 <ascii_strlower_n@plt+0x117a0>
  415ba0:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  415ba4:	add	x0, x0, #0x2c7
  415ba8:	mov	x1, x20
  415bac:	bl	4043e0 <fputs@plt>
  415bb0:	cbz	w28, 415bc0 <ascii_strlower_n@plt+0x117b0>
  415bb4:	mov	x0, x23
  415bb8:	mov	w1, w28
  415bbc:	bl	403a80 <printf@plt>
  415bc0:	tbnz	w27, #0, 415c34 <ascii_strlower_n@plt+0x11824>
  415bc4:	tbnz	w27, #1, 415c48 <ascii_strlower_n@plt+0x11838>
  415bc8:	tbz	w27, #2, 415bdc <ascii_strlower_n@plt+0x117cc>
  415bcc:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  415bd0:	add	x0, x0, #0x2ef
  415bd4:	mov	x1, x20
  415bd8:	bl	4043e0 <fputs@plt>
  415bdc:	mov	w0, #0xa                   	// #10
  415be0:	mov	x1, x20
  415be4:	bl	403d40 <fputc@plt>
  415be8:	b	415bfc <ascii_strlower_n@plt+0x117ec>
  415bec:	mov	w2, #0x2b8                 	// #696
  415bf0:	mov	x1, x21
  415bf4:	mov	x3, x22
  415bf8:	bl	403a20 <log_oom_internal@plt>
  415bfc:	ldr	x8, [x19, #8]
  415c00:	add	x25, x25, #0x1
  415c04:	cmp	x25, x8
  415c08:	b.cs	415c18 <ascii_strlower_n@plt+0x11808>  // b.hs, b.nlast
  415c0c:	ldur	x24, [x26, #-12]
  415c10:	ldp	w28, w27, [x26, #-4]
  415c14:	b	415c24 <ascii_strlower_n@plt+0x11814>
  415c18:	mov	w28, wzr
  415c1c:	mov	x24, xzr
  415c20:	mov	w27, wzr
  415c24:	cmp	x25, x8
  415c28:	add	x26, x26, #0x10
  415c2c:	b.cc	415b74 <ascii_strlower_n@plt+0x11764>  // b.lo, b.ul, b.last
  415c30:	b	415c60 <ascii_strlower_n@plt+0x11850>
  415c34:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  415c38:	add	x0, x0, #0x2d6
  415c3c:	mov	x1, x20
  415c40:	bl	4043e0 <fputs@plt>
  415c44:	tbz	w27, #1, 415bc8 <ascii_strlower_n@plt+0x117b8>
  415c48:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  415c4c:	add	x0, x0, #0x2e5
  415c50:	mov	x1, x20
  415c54:	bl	4043e0 <fputs@plt>
  415c58:	tbnz	w27, #2, 415bcc <ascii_strlower_n@plt+0x117bc>
  415c5c:	b	415bdc <ascii_strlower_n@plt+0x117cc>
  415c60:	ldp	x20, x19, [sp, #80]
  415c64:	ldp	x22, x21, [sp, #64]
  415c68:	ldp	x24, x23, [sp, #48]
  415c6c:	ldp	x26, x25, [sp, #32]
  415c70:	ldp	x28, x27, [sp, #16]
  415c74:	ldp	x29, x30, [sp], #96
  415c78:	ret
  415c7c:	sub	sp, sp, #0x50
  415c80:	stp	x29, x30, [sp, #16]
  415c84:	stp	x24, x23, [sp, #32]
  415c88:	stp	x22, x21, [sp, #48]
  415c8c:	stp	x20, x19, [sp, #64]
  415c90:	add	x29, sp, #0x10
  415c94:	cbz	x1, 415da8 <ascii_strlower_n@plt+0x11998>
  415c98:	ldr	x8, [x1, #8]
  415c9c:	mov	x19, x1
  415ca0:	mov	x20, x0
  415ca4:	ldrh	w8, [x8, #6]
  415ca8:	cmp	w8, #0x5
  415cac:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  415cb0:	b.eq	415d78 <ascii_strlower_n@plt+0x11968>  // b.none
  415cb4:	ldr	x8, [x20, #8]
  415cb8:	cbz	x8, 415cc0 <ascii_strlower_n@plt+0x118b0>
  415cbc:	ldr	x8, [x20, #24]
  415cc0:	ldr	x9, [x20, #8]
  415cc4:	cbz	x9, 415d78 <ascii_strlower_n@plt+0x11968>
  415cc8:	mov	x23, xzr
  415ccc:	add	x24, x20, #0x28
  415cd0:	str	xzr, [sp, #8]
  415cd4:	ldr	x0, [x8, #8]
  415cd8:	ldrh	w9, [x0, #6]
  415cdc:	cmp	w9, #0x27
  415ce0:	b.ne	415d48 <ascii_strlower_n@plt+0x11938>  // b.any
  415ce4:	ldr	x9, [x19, #8]
  415ce8:	ldrh	w10, [x0, #4]
  415cec:	ldrh	w9, [x9, #4]
  415cf0:	cmp	w10, w9
  415cf4:	b.ne	415d48 <ascii_strlower_n@plt+0x11938>  // b.any
  415cf8:	ldr	x21, [x19, #80]
  415cfc:	ldr	x22, [x8, #80]
  415d00:	bl	4110a8 <ascii_strlower_n@plt+0xcc98>
  415d04:	mov	x2, x0
  415d08:	add	x3, sp, #0x8
  415d0c:	mov	x0, x21
  415d10:	mov	x1, x22
  415d14:	bl	404230 <dns_name_change_suffix@plt>
  415d18:	mov	w21, w0
  415d1c:	tbnz	w0, #31, 415d9c <ascii_strlower_n@plt+0x1198c>
  415d20:	cbz	w21, 415d48 <ascii_strlower_n@plt+0x11938>
  415d24:	ldr	x0, [x19, #8]
  415d28:	ldr	x21, [sp, #8]
  415d2c:	bl	4110a8 <ascii_strlower_n@plt+0xcc98>
  415d30:	mov	x1, x0
  415d34:	mov	x0, x21
  415d38:	bl	404250 <dns_name_equal@plt>
  415d3c:	mov	w21, w0
  415d40:	tbnz	w0, #31, 415d9c <ascii_strlower_n@plt+0x1198c>
  415d44:	cbnz	w21, 415d98 <ascii_strlower_n@plt+0x11988>
  415d48:	ldr	x0, [sp, #8]
  415d4c:	bl	403a30 <free@plt>
  415d50:	ldr	x9, [x20, #8]
  415d54:	add	x23, x23, #0x1
  415d58:	cmp	x23, x9
  415d5c:	b.cs	415d68 <ascii_strlower_n@plt+0x11958>  // b.hs, b.nlast
  415d60:	ldr	x8, [x24]
  415d64:	b	415d6c <ascii_strlower_n@plt+0x1195c>
  415d68:	mov	x8, xzr
  415d6c:	cmp	x23, x9
  415d70:	add	x24, x24, #0x10
  415d74:	b.cc	415cd0 <ascii_strlower_n@plt+0x118c0>  // b.lo, b.ul, b.last
  415d78:	mov	w21, wzr
  415d7c:	mov	w0, w21
  415d80:	ldp	x20, x19, [sp, #64]
  415d84:	ldp	x22, x21, [sp, #48]
  415d88:	ldp	x24, x23, [sp, #32]
  415d8c:	ldp	x29, x30, [sp, #16]
  415d90:	add	sp, sp, #0x50
  415d94:	ret
  415d98:	mov	w21, #0x1                   	// #1
  415d9c:	ldr	x0, [sp, #8]
  415da0:	bl	403a30 <free@plt>
  415da4:	b	415d7c <ascii_strlower_n@plt+0x1196c>
  415da8:	adrp	x1, 418000 <ascii_strlower_n@plt+0x13bf0>
  415dac:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf0>
  415db0:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  415db4:	add	x1, x1, #0x50
  415db8:	add	x2, x2, #0xdc2
  415dbc:	add	x4, x4, #0x2fd
  415dc0:	mov	w3, #0x2d2                 	// #722
  415dc4:	mov	w0, wzr
  415dc8:	bl	403aa0 <log_assert_failed_realm@plt>
  415dcc:	stp	x29, x30, [sp, #-32]!
  415dd0:	stp	x20, x19, [sp, #16]
  415dd4:	mov	x29, sp
  415dd8:	cbz	x0, 415e0c <ascii_strlower_n@plt+0x119fc>
  415ddc:	lsl	x8, x0, #3
  415de0:	mov	x19, x0
  415de4:	add	x1, x8, #0x18
  415de8:	mov	w0, #0x1                   	// #1
  415dec:	mov	w20, #0x1                   	// #1
  415df0:	bl	404070 <calloc@plt>
  415df4:	cbz	x0, 415e00 <ascii_strlower_n@plt+0x119f0>
  415df8:	str	w20, [x0]
  415dfc:	str	x19, [x0, #16]
  415e00:	ldp	x20, x19, [sp, #16]
  415e04:	ldp	x29, x30, [sp], #32
  415e08:	ret
  415e0c:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf0>
  415e10:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf0>
  415e14:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  415e18:	add	x1, x1, #0x390
  415e1c:	add	x2, x2, #0x399
  415e20:	add	x4, x4, #0x3bd
  415e24:	mov	w3, #0xb                   	// #11
  415e28:	bl	403aa0 <log_assert_failed_realm@plt>
  415e2c:	stp	x29, x30, [sp, #-16]!
  415e30:	mov	x29, sp
  415e34:	cbz	x0, 415e48 <ascii_strlower_n@plt+0x11a38>
  415e38:	ldr	w8, [x0]
  415e3c:	cbz	w8, 415e50 <ascii_strlower_n@plt+0x11a40>
  415e40:	add	w8, w8, #0x1
  415e44:	str	w8, [x0]
  415e48:	ldp	x29, x30, [sp], #16
  415e4c:	ret
  415e50:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  415e54:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf0>
  415e58:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  415e5c:	add	x1, x1, #0x46f
  415e60:	add	x2, x2, #0x399
  415e64:	add	x4, x4, #0x3e3
  415e68:	mov	w3, #0x21                  	// #33
  415e6c:	mov	w0, wzr
  415e70:	bl	403aa0 <log_assert_failed_realm@plt>
  415e74:	stp	x29, x30, [sp, #-48]!
  415e78:	str	x21, [sp, #16]
  415e7c:	stp	x20, x19, [sp, #32]
  415e80:	mov	x29, sp
  415e84:	cbz	x0, 415ed0 <ascii_strlower_n@plt+0x11ac0>
  415e88:	ldr	w8, [x0]
  415e8c:	mov	x19, x0
  415e90:	cbz	w8, 415ee4 <ascii_strlower_n@plt+0x11ad4>
  415e94:	subs	w8, w8, #0x1
  415e98:	str	w8, [x19]
  415e9c:	b.ne	415ed0 <ascii_strlower_n@plt+0x11ac0>  // b.any
  415ea0:	ldr	x8, [x19, #8]
  415ea4:	cbz	x8, 415ec8 <ascii_strlower_n@plt+0x11ab8>
  415ea8:	mov	x20, xzr
  415eac:	add	x21, x19, #0x18
  415eb0:	ldr	x0, [x21, x20, lsl #3]
  415eb4:	bl	4112fc <ascii_strlower_n@plt+0xceec>
  415eb8:	ldr	x8, [x19, #8]
  415ebc:	add	x20, x20, #0x1
  415ec0:	cmp	x20, x8
  415ec4:	b.cc	415eb0 <ascii_strlower_n@plt+0x11aa0>  // b.lo, b.ul, b.last
  415ec8:	mov	x0, x19
  415ecc:	bl	403a30 <free@plt>
  415ed0:	ldp	x20, x19, [sp, #32]
  415ed4:	ldr	x21, [sp, #16]
  415ed8:	mov	x0, xzr
  415edc:	ldp	x29, x30, [sp], #48
  415ee0:	ret
  415ee4:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  415ee8:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf0>
  415eec:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  415ef0:	add	x1, x1, #0x46f
  415ef4:	add	x2, x2, #0x399
  415ef8:	add	x4, x4, #0x410
  415efc:	mov	w3, #0x21                  	// #33
  415f00:	mov	w0, wzr
  415f04:	bl	403aa0 <log_assert_failed_realm@plt>
  415f08:	stp	x29, x30, [sp, #-32]!
  415f0c:	str	x19, [sp, #16]
  415f10:	mov	x29, sp
  415f14:	cbz	x1, 415f64 <ascii_strlower_n@plt+0x11b54>
  415f18:	mov	x19, x0
  415f1c:	cbz	x0, 415f84 <ascii_strlower_n@plt+0x11b74>
  415f20:	ldp	x8, x9, [x19, #8]
  415f24:	cmp	x8, x9
  415f28:	b.cs	415f54 <ascii_strlower_n@plt+0x11b44>  // b.hs, b.nlast
  415f2c:	mov	x0, x1
  415f30:	bl	4110ec <ascii_strlower_n@plt+0xccdc>
  415f34:	ldr	x9, [x19, #8]
  415f38:	mov	x8, x0
  415f3c:	mov	w0, wzr
  415f40:	add	x10, x9, #0x1
  415f44:	add	x9, x19, x9, lsl #3
  415f48:	str	x10, [x19, #8]
  415f4c:	str	x8, [x9, #24]
  415f50:	b	415f58 <ascii_strlower_n@plt+0x11b48>
  415f54:	mov	w0, #0xffffffe4            	// #-28
  415f58:	ldr	x19, [sp, #16]
  415f5c:	ldp	x29, x30, [sp], #32
  415f60:	ret
  415f64:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  415f68:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf0>
  415f6c:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  415f70:	add	x1, x1, #0xd24
  415f74:	add	x2, x2, #0x399
  415f78:	add	x4, x4, #0x43f
  415f7c:	mov	w3, #0x26                  	// #38
  415f80:	b	415fa0 <ascii_strlower_n@plt+0x11b90>
  415f84:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf0>
  415f88:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf0>
  415f8c:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  415f90:	add	x1, x1, #0x479
  415f94:	add	x2, x2, #0x399
  415f98:	add	x4, x4, #0x43f
  415f9c:	mov	w3, #0x27                  	// #39
  415fa0:	mov	w0, wzr
  415fa4:	bl	403aa0 <log_assert_failed_realm@plt>
  415fa8:	stp	x29, x30, [sp, #-48]!
  415fac:	stp	x22, x21, [sp, #16]
  415fb0:	stp	x20, x19, [sp, #32]
  415fb4:	mov	x29, sp
  415fb8:	cbz	x1, 41604c <ascii_strlower_n@plt+0x11c3c>
  415fbc:	mov	x19, x0
  415fc0:	cbz	x0, 416030 <ascii_strlower_n@plt+0x11c20>
  415fc4:	ldr	x8, [x19, #8]
  415fc8:	mov	x20, x1
  415fcc:	cbz	x8, 415ffc <ascii_strlower_n@plt+0x11bec>
  415fd0:	mov	x21, xzr
  415fd4:	add	x22, x19, #0x18
  415fd8:	ldr	x0, [x22, x21, lsl #3]
  415fdc:	mov	x1, x20
  415fe0:	bl	4114c0 <ascii_strlower_n@plt+0xd0b0>
  415fe4:	tbnz	w0, #31, 416034 <ascii_strlower_n@plt+0x11c24>
  415fe8:	cbnz	w0, 416044 <ascii_strlower_n@plt+0x11c34>
  415fec:	ldr	x8, [x19, #8]
  415ff0:	add	x21, x21, #0x1
  415ff4:	cmp	x21, x8
  415ff8:	b.cc	415fd8 <ascii_strlower_n@plt+0x11bc8>  // b.lo, b.ul, b.last
  415ffc:	ldr	x9, [x19, #16]
  416000:	cmp	x8, x9
  416004:	b.cs	416030 <ascii_strlower_n@plt+0x11c20>  // b.hs, b.nlast
  416008:	mov	x0, x20
  41600c:	bl	4110ec <ascii_strlower_n@plt+0xccdc>
  416010:	ldr	x9, [x19, #8]
  416014:	mov	x8, x0
  416018:	mov	w0, wzr
  41601c:	add	x10, x9, #0x1
  416020:	add	x9, x19, x9, lsl #3
  416024:	str	x10, [x19, #8]
  416028:	str	x8, [x9, #24]
  41602c:	b	416034 <ascii_strlower_n@plt+0x11c24>
  416030:	mov	w0, #0xffffffe4            	// #-28
  416034:	ldp	x20, x19, [sp, #32]
  416038:	ldp	x22, x21, [sp, #16]
  41603c:	ldp	x29, x30, [sp], #48
  416040:	ret
  416044:	mov	w0, wzr
  416048:	b	416034 <ascii_strlower_n@plt+0x11c24>
  41604c:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  416050:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416054:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416058:	add	x1, x1, #0xd24
  41605c:	add	x2, x2, #0x399
  416060:	add	x4, x4, #0x47b
  416064:	mov	w3, #0x33                  	// #51
  416068:	mov	w0, wzr
  41606c:	bl	403aa0 <log_assert_failed_realm@plt>
  416070:	stp	x29, x30, [sp, #-64]!
  416074:	str	x23, [sp, #16]
  416078:	stp	x22, x21, [sp, #32]
  41607c:	stp	x20, x19, [sp, #48]
  416080:	mov	x29, sp
  416084:	cbz	x1, 4160e4 <ascii_strlower_n@plt+0x11cd4>
  416088:	mov	x21, x0
  41608c:	cbz	x0, 4160cc <ascii_strlower_n@plt+0x11cbc>
  416090:	ldr	x8, [x21, #8]
  416094:	cbz	x8, 4160cc <ascii_strlower_n@plt+0x11cbc>
  416098:	mov	x19, x2
  41609c:	mov	x20, x1
  4160a0:	mov	x22, xzr
  4160a4:	add	x23, x21, #0x18
  4160a8:	ldr	x0, [x23, x22, lsl #3]
  4160ac:	mov	x1, x20
  4160b0:	mov	x2, x19
  4160b4:	bl	411598 <ascii_strlower_n@plt+0xd188>
  4160b8:	cbnz	w0, 4160d0 <ascii_strlower_n@plt+0x11cc0>
  4160bc:	ldr	x8, [x21, #8]
  4160c0:	add	x22, x22, #0x1
  4160c4:	cmp	x22, x8
  4160c8:	b.cc	4160a8 <ascii_strlower_n@plt+0x11c98>  // b.lo, b.ul, b.last
  4160cc:	mov	w0, wzr
  4160d0:	ldp	x20, x19, [sp, #48]
  4160d4:	ldp	x22, x21, [sp, #32]
  4160d8:	ldr	x23, [sp, #16]
  4160dc:	ldp	x29, x30, [sp], #64
  4160e0:	ret
  4160e4:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4160e8:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf0>
  4160ec:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  4160f0:	add	x1, x1, #0x974
  4160f4:	add	x2, x2, #0x399
  4160f8:	add	x4, x4, #0x4b1
  4160fc:	mov	w3, #0x47                  	// #71
  416100:	mov	w0, wzr
  416104:	bl	403aa0 <log_assert_failed_realm@plt>
  416108:	stp	x29, x30, [sp, #-64]!
  41610c:	str	x23, [sp, #16]
  416110:	stp	x22, x21, [sp, #32]
  416114:	stp	x20, x19, [sp, #48]
  416118:	mov	x29, sp
  41611c:	cbz	x1, 4161a4 <ascii_strlower_n@plt+0x11d94>
  416120:	mov	x21, x0
  416124:	cbz	x0, 41618c <ascii_strlower_n@plt+0x11d7c>
  416128:	ldr	x8, [x1, #8]
  41612c:	mov	x19, x2
  416130:	mov	x20, x1
  416134:	ldrh	w8, [x8, #6]
  416138:	cmp	w8, #0x27
  41613c:	b.eq	416148 <ascii_strlower_n@plt+0x11d38>  // b.none
  416140:	cmp	w8, #0x5
  416144:	b.ne	41618c <ascii_strlower_n@plt+0x11d7c>  // b.any
  416148:	ldr	x8, [x21, #8]
  41614c:	cbz	x8, 41618c <ascii_strlower_n@plt+0x11d7c>
  416150:	mov	x22, xzr
  416154:	add	x23, x21, #0x18
  416158:	ldr	x8, [x23, x22, lsl #3]
  41615c:	ldrh	w0, [x8, #6]
  416160:	bl	41710c <ascii_strlower_n@plt+0x12cfc>
  416164:	tbz	w0, #0, 41618c <ascii_strlower_n@plt+0x11d7c>
  416168:	ldr	x0, [x23, x22, lsl #3]
  41616c:	ldr	x1, [x20, #8]
  416170:	mov	x2, x19
  416174:	bl	411744 <ascii_strlower_n@plt+0xd334>
  416178:	cbnz	w0, 416190 <ascii_strlower_n@plt+0x11d80>
  41617c:	ldr	x8, [x21, #8]
  416180:	add	x22, x22, #0x1
  416184:	cmp	x22, x8
  416188:	b.cc	416158 <ascii_strlower_n@plt+0x11d48>  // b.lo, b.ul, b.last
  41618c:	mov	w0, wzr
  416190:	ldp	x20, x19, [sp, #48]
  416194:	ldp	x22, x21, [sp, #32]
  416198:	ldr	x23, [sp, #16]
  41619c:	ldp	x29, x30, [sp], #64
  4161a0:	ret
  4161a4:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4161a8:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf0>
  4161ac:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  4161b0:	add	x1, x1, #0x974
  4161b4:	add	x2, x2, #0x399
  4161b8:	add	x4, x4, #0x4ff
  4161bc:	mov	w3, #0x59                  	// #89
  4161c0:	mov	w0, wzr
  4161c4:	bl	403aa0 <log_assert_failed_realm@plt>
  4161c8:	stp	x29, x30, [sp, #-48]!
  4161cc:	stp	x22, x21, [sp, #16]
  4161d0:	stp	x20, x19, [sp, #32]
  4161d4:	mov	x29, sp
  4161d8:	cbz	x0, 416260 <ascii_strlower_n@plt+0x11e50>
  4161dc:	ldr	x8, [x0, #8]
  4161e0:	mov	w9, #0xfffe                	// #65534
  4161e4:	mov	x19, x0
  4161e8:	sub	x8, x8, #0x1
  4161ec:	cmp	x8, x9
  4161f0:	b.ls	4161fc <ascii_strlower_n@plt+0x11dec>  // b.plast
  4161f4:	mov	w0, wzr
  4161f8:	b	416260 <ascii_strlower_n@plt+0x11e50>
  4161fc:	ldr	x0, [x19, #24]
  416200:	bl	4110a8 <ascii_strlower_n@plt+0xcc98>
  416204:	cbz	x0, 416260 <ascii_strlower_n@plt+0x11e50>
  416208:	ldr	x8, [x19, #8]
  41620c:	cbz	x8, 41625c <ascii_strlower_n@plt+0x11e4c>
  416210:	mov	x20, x0
  416214:	mov	x21, xzr
  416218:	add	x22, x19, #0x18
  41621c:	ldr	x0, [x22, x21, lsl #3]
  416220:	cbz	x0, 416270 <ascii_strlower_n@plt+0x11e60>
  416224:	cbz	x21, 416240 <ascii_strlower_n@plt+0x11e30>
  416228:	bl	4110a8 <ascii_strlower_n@plt+0xcc98>
  41622c:	mov	x1, x20
  416230:	bl	404250 <dns_name_equal@plt>
  416234:	cmp	w0, #0x1
  416238:	b.lt	416260 <ascii_strlower_n@plt+0x11e50>  // b.tstop
  41623c:	ldr	x0, [x22, x21, lsl #3]
  416240:	ldrh	w0, [x0, #6]
  416244:	bl	41707c <ascii_strlower_n@plt+0x12c6c>
  416248:	tbz	w0, #0, 4161f4 <ascii_strlower_n@plt+0x11de4>
  41624c:	ldr	x8, [x19, #8]
  416250:	add	x21, x21, #0x1
  416254:	cmp	x21, x8
  416258:	b.cc	41621c <ascii_strlower_n@plt+0x11e0c>  // b.lo, b.ul, b.last
  41625c:	mov	w0, #0x1                   	// #1
  416260:	ldp	x20, x19, [sp, #32]
  416264:	ldp	x22, x21, [sp, #16]
  416268:	ldp	x29, x30, [sp], #48
  41626c:	ret
  416270:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416274:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416278:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  41627c:	add	x1, x1, #0x559
  416280:	add	x2, x2, #0x399
  416284:	add	x4, x4, #0x564
  416288:	mov	w3, #0x82                  	// #130
  41628c:	bl	403aa0 <log_assert_failed_realm@plt>
  416290:	stp	x29, x30, [sp, #-48]!
  416294:	stp	x22, x21, [sp, #16]
  416298:	stp	x20, x19, [sp, #32]
  41629c:	mov	x29, sp
  4162a0:	cbz	x1, 4162f4 <ascii_strlower_n@plt+0x11ee4>
  4162a4:	mov	x20, x0
  4162a8:	cbz	x0, 4162e0 <ascii_strlower_n@plt+0x11ed0>
  4162ac:	ldr	x8, [x20, #8]
  4162b0:	cbz	x8, 4162e0 <ascii_strlower_n@plt+0x11ed0>
  4162b4:	mov	x19, x1
  4162b8:	mov	x21, xzr
  4162bc:	add	x22, x20, #0x18
  4162c0:	ldr	x0, [x22, x21, lsl #3]
  4162c4:	mov	x1, x19
  4162c8:	bl	4114c0 <ascii_strlower_n@plt+0xd0b0>
  4162cc:	cbnz	w0, 4162e4 <ascii_strlower_n@plt+0x11ed4>
  4162d0:	ldr	x8, [x20, #8]
  4162d4:	add	x21, x21, #0x1
  4162d8:	cmp	x21, x8
  4162dc:	b.cc	4162c0 <ascii_strlower_n@plt+0x11eb0>  // b.lo, b.ul, b.last
  4162e0:	mov	w0, wzr
  4162e4:	ldp	x20, x19, [sp, #32]
  4162e8:	ldp	x22, x21, [sp, #16]
  4162ec:	ldp	x29, x30, [sp], #48
  4162f0:	ret
  4162f4:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf0>
  4162f8:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf0>
  4162fc:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416300:	add	x1, x1, #0x7f8
  416304:	add	x2, x2, #0x399
  416308:	add	x4, x4, #0x597
  41630c:	mov	w3, #0x95                  	// #149
  416310:	mov	w0, wzr
  416314:	bl	403aa0 <log_assert_failed_realm@plt>
  416318:	stp	x29, x30, [sp, #-48]!
  41631c:	cmp	x0, x1
  416320:	stp	x22, x21, [sp, #16]
  416324:	stp	x20, x19, [sp, #32]
  416328:	mov	x29, sp
  41632c:	b.eq	4163c0 <ascii_strlower_n@plt+0x11fb0>  // b.none
  416330:	mov	x19, x1
  416334:	mov	x20, x0
  416338:	cbz	x0, 4163ac <ascii_strlower_n@plt+0x11f9c>
  41633c:	ldr	x8, [x20, #8]
  416340:	cbz	x19, 4163b4 <ascii_strlower_n@plt+0x11fa4>
  416344:	cbz	x8, 416374 <ascii_strlower_n@plt+0x11f64>
  416348:	mov	x21, xzr
  41634c:	add	x22, x20, #0x18
  416350:	ldr	x1, [x22, x21, lsl #3]
  416354:	mov	x0, x19
  416358:	bl	416290 <ascii_strlower_n@plt+0x11e80>
  41635c:	cmp	w0, #0x1
  416360:	b.lt	4163c4 <ascii_strlower_n@plt+0x11fb4>  // b.tstop
  416364:	ldr	x8, [x20, #8]
  416368:	add	x21, x21, #0x1
  41636c:	cmp	x21, x8
  416370:	b.cc	416350 <ascii_strlower_n@plt+0x11f40>  // b.lo, b.ul, b.last
  416374:	ldr	x8, [x19, #8]
  416378:	cbz	x8, 4163c0 <ascii_strlower_n@plt+0x11fb0>
  41637c:	mov	x21, xzr
  416380:	add	x22, x19, #0x18
  416384:	ldr	x1, [x22, x21, lsl #3]
  416388:	mov	x0, x20
  41638c:	bl	416290 <ascii_strlower_n@plt+0x11e80>
  416390:	cmp	w0, #0x0
  416394:	b.le	4163c4 <ascii_strlower_n@plt+0x11fb4>
  416398:	ldr	x8, [x19, #8]
  41639c:	add	x21, x21, #0x1
  4163a0:	cmp	x21, x8
  4163a4:	b.cc	416384 <ascii_strlower_n@plt+0x11f74>  // b.lo, b.ul, b.last
  4163a8:	b	4163c0 <ascii_strlower_n@plt+0x11fb0>
  4163ac:	cbz	x19, 4163c0 <ascii_strlower_n@plt+0x11fb0>
  4163b0:	ldr	x8, [x19, #8]
  4163b4:	cmp	x8, #0x0
  4163b8:	cset	w0, eq  // eq = none
  4163bc:	b	4163c4 <ascii_strlower_n@plt+0x11fb4>
  4163c0:	mov	w0, #0x1                   	// #1
  4163c4:	ldp	x20, x19, [sp, #32]
  4163c8:	ldp	x22, x21, [sp, #16]
  4163cc:	ldp	x29, x30, [sp], #48
  4163d0:	ret
  4163d4:	stp	x29, x30, [sp, #-80]!
  4163d8:	str	x25, [sp, #16]
  4163dc:	stp	x24, x23, [sp, #32]
  4163e0:	stp	x22, x21, [sp, #48]
  4163e4:	stp	x20, x19, [sp, #64]
  4163e8:	mov	x29, sp
  4163ec:	cbz	x1, 4165ac <ascii_strlower_n@plt+0x1219c>
  4163f0:	mov	x19, x2
  4163f4:	cbz	x2, 4165cc <ascii_strlower_n@plt+0x121bc>
  4163f8:	ldr	x8, [x1, #8]
  4163fc:	mov	x20, x1
  416400:	mov	x21, x0
  416404:	ldrh	w8, [x8, #6]
  416408:	cmp	w8, #0x27
  41640c:	b.eq	416418 <ascii_strlower_n@plt+0x12008>  // b.none
  416410:	cmp	w8, #0x5
  416414:	b.ne	4165ec <ascii_strlower_n@plt+0x121dc>  // b.any
  416418:	cbz	x21, 4164ec <ascii_strlower_n@plt+0x120dc>
  41641c:	ldr	x9, [x21, #8]
  416420:	cbz	x9, 4164ec <ascii_strlower_n@plt+0x120dc>
  416424:	add	x24, x20, #0x50
  416428:	mov	w25, #0x3                   	// #3
  41642c:	ldr	x23, [x21, x25, lsl #3]
  416430:	and	w8, w8, #0xffff
  416434:	cmp	w8, #0x5
  416438:	mov	x8, x24
  41643c:	str	xzr, [x29, #24]
  416440:	b.eq	416480 <ascii_strlower_n@plt+0x12070>  // b.none
  416444:	mov	x0, x23
  416448:	bl	4110a8 <ascii_strlower_n@plt+0xcc98>
  41644c:	ldr	x8, [x20, #8]
  416450:	mov	x22, x0
  416454:	mov	x0, x8
  416458:	bl	4110a8 <ascii_strlower_n@plt+0xcc98>
  41645c:	ldr	x2, [x20, #80]
  416460:	mov	x1, x0
  416464:	add	x3, x29, #0x18
  416468:	mov	x0, x22
  41646c:	bl	404230 <dns_name_change_suffix@plt>
  416470:	mov	w22, w0
  416474:	tbnz	w0, #31, 4164c8 <ascii_strlower_n@plt+0x120b8>
  416478:	cbz	w22, 4164a0 <ascii_strlower_n@plt+0x12090>
  41647c:	add	x8, x29, #0x18
  416480:	ldr	x22, [x8]
  416484:	mov	x0, x23
  416488:	bl	4110a8 <ascii_strlower_n@plt+0xcc98>
  41648c:	mov	x1, x22
  416490:	bl	404250 <dns_name_equal@plt>
  416494:	mov	w22, w0
  416498:	tbnz	w0, #31, 4164c8 <ascii_strlower_n@plt+0x120b8>
  41649c:	cbz	w22, 4164d4 <ascii_strlower_n@plt+0x120c4>
  4164a0:	ldr	x0, [x29, #24]
  4164a4:	bl	403a30 <free@plt>
  4164a8:	ldr	x8, [x21, #8]
  4164ac:	sub	x9, x25, #0x2
  4164b0:	cmp	x9, x8
  4164b4:	b.cs	4164ec <ascii_strlower_n@plt+0x120dc>  // b.hs, b.nlast
  4164b8:	ldr	x8, [x20, #8]
  4164bc:	add	x25, x25, #0x1
  4164c0:	ldrh	w8, [x8, #6]
  4164c4:	b	41642c <ascii_strlower_n@plt+0x1201c>
  4164c8:	mov	w24, wzr
  4164cc:	mov	w23, #0x1                   	// #1
  4164d0:	b	4164dc <ascii_strlower_n@plt+0x120cc>
  4164d4:	mov	w23, wzr
  4164d8:	mov	w24, #0x1                   	// #1
  4164dc:	ldr	x0, [x29, #24]
  4164e0:	bl	403a30 <free@plt>
  4164e4:	cbz	w24, 4164f4 <ascii_strlower_n@plt+0x120e4>
  4164e8:	cbz	w23, 416510 <ascii_strlower_n@plt+0x12100>
  4164ec:	mov	w22, wzr
  4164f0:	str	xzr, [x19]
  4164f4:	mov	w0, w22
  4164f8:	ldp	x20, x19, [sp, #64]
  4164fc:	ldp	x22, x21, [sp, #48]
  416500:	ldp	x24, x23, [sp, #32]
  416504:	ldr	x25, [sp, #16]
  416508:	ldp	x29, x30, [sp], #80
  41650c:	ret
  416510:	ldr	x0, [x21, #8]
  416514:	bl	415dcc <ascii_strlower_n@plt+0x119bc>
  416518:	cbz	x0, 416598 <ascii_strlower_n@plt+0x12188>
  41651c:	ldr	x8, [x21, #8]
  416520:	mov	x23, x0
  416524:	cbz	x8, 4165a0 <ascii_strlower_n@plt+0x12190>
  416528:	ldr	x0, [x21, #24]
  41652c:	mov	x1, x20
  416530:	bl	410f34 <ascii_strlower_n@plt+0xcb24>
  416534:	cbz	x0, 416584 <ascii_strlower_n@plt+0x12174>
  416538:	mov	x24, x0
  41653c:	mov	w25, #0x4                   	// #4
  416540:	mov	x0, x23
  416544:	mov	x1, x24
  416548:	bl	415fa8 <ascii_strlower_n@plt+0x11b98>
  41654c:	mov	w22, w0
  416550:	mov	x0, x24
  416554:	bl	4112fc <ascii_strlower_n@plt+0xceec>
  416558:	tbnz	w22, #31, 416588 <ascii_strlower_n@plt+0x12178>
  41655c:	ldr	x8, [x21, #8]
  416560:	sub	x9, x25, #0x3
  416564:	cmp	x9, x8
  416568:	b.cs	4165a0 <ascii_strlower_n@plt+0x12190>  // b.hs, b.nlast
  41656c:	ldr	x0, [x21, x25, lsl #3]
  416570:	mov	x1, x20
  416574:	bl	410f34 <ascii_strlower_n@plt+0xcb24>
  416578:	mov	x24, x0
  41657c:	add	x25, x25, #0x1
  416580:	cbnz	x0, 416540 <ascii_strlower_n@plt+0x12130>
  416584:	mov	w22, #0xfffffff4            	// #-12
  416588:	cbz	x23, 4164f4 <ascii_strlower_n@plt+0x120e4>
  41658c:	mov	x0, x23
  416590:	bl	415e74 <ascii_strlower_n@plt+0x11a64>
  416594:	b	4164f4 <ascii_strlower_n@plt+0x120e4>
  416598:	mov	w22, #0xfffffff4            	// #-12
  41659c:	b	4164f4 <ascii_strlower_n@plt+0x120e4>
  4165a0:	mov	w22, #0x1                   	// #1
  4165a4:	str	x23, [x19]
  4165a8:	b	4164f4 <ascii_strlower_n@plt+0x120e4>
  4165ac:	adrp	x1, 418000 <ascii_strlower_n@plt+0x13bf0>
  4165b0:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf0>
  4165b4:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  4165b8:	add	x1, x1, #0x50
  4165bc:	add	x2, x2, #0x399
  4165c0:	add	x4, x4, #0x5d8
  4165c4:	mov	w3, #0xc6                  	// #198
  4165c8:	b	416608 <ascii_strlower_n@plt+0x121f8>
  4165cc:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  4165d0:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf0>
  4165d4:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  4165d8:	add	x1, x1, #0xc0e
  4165dc:	add	x2, x2, #0x399
  4165e0:	add	x4, x4, #0x5d8
  4165e4:	mov	w3, #0xc7                  	// #199
  4165e8:	b	416608 <ascii_strlower_n@plt+0x121f8>
  4165ec:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  4165f0:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf0>
  4165f4:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  4165f8:	add	x1, x1, #0x20e
  4165fc:	add	x2, x2, #0x399
  416600:	add	x4, x4, #0x5d8
  416604:	mov	w3, #0xc8                  	// #200
  416608:	mov	w0, wzr
  41660c:	bl	403aa0 <log_assert_failed_realm@plt>
  416610:	cbz	x0, 416624 <ascii_strlower_n@plt+0x12214>
  416614:	ldr	x8, [x0, #8]
  416618:	cbz	x8, 416624 <ascii_strlower_n@plt+0x12214>
  41661c:	ldr	x0, [x0, #24]
  416620:	b	4110a8 <ascii_strlower_n@plt+0xcc98>
  416624:	mov	x0, xzr
  416628:	ret
  41662c:	sub	sp, sp, #0x50
  416630:	stp	x29, x30, [sp, #16]
  416634:	stp	x24, x23, [sp, #32]
  416638:	stp	x22, x21, [sp, #48]
  41663c:	stp	x20, x19, [sp, #64]
  416640:	add	x29, sp, #0x10
  416644:	str	xzr, [sp, #8]
  416648:	cbz	x0, 416798 <ascii_strlower_n@plt+0x12388>
  41664c:	mov	x21, x2
  416650:	cbz	x2, 4167b8 <ascii_strlower_n@plt+0x123a8>
  416654:	mov	w23, w1
  416658:	mov	x19, xzr
  41665c:	cmp	w1, #0xa
  416660:	mov	w22, #0xffffff9f            	// #-97
  416664:	b.hi	416768 <ascii_strlower_n@plt+0x12358>  // b.pmore
  416668:	mov	w8, #0x1                   	// #1
  41666c:	lsl	w8, w8, w23
  416670:	mov	w9, #0x405                 	// #1029
  416674:	tst	w8, w9
  416678:	b.eq	416768 <ascii_strlower_n@plt+0x12358>  // b.none
  41667c:	mov	x20, x0
  416680:	tbz	w3, #0, 4166b4 <ascii_strlower_n@plt+0x122a4>
  416684:	add	x1, sp, #0x8
  416688:	mov	x0, x21
  41668c:	bl	4043f0 <dns_name_apply_idna@plt>
  416690:	mov	w22, w0
  416694:	tbnz	w0, #31, 416750 <ascii_strlower_n@plt+0x12340>
  416698:	cbz	w22, 416760 <ascii_strlower_n@plt+0x12350>
  41669c:	ldr	x19, [sp, #8]
  4166a0:	mov	x0, x21
  4166a4:	mov	x1, x19
  4166a8:	bl	403b40 <strcmp@plt>
  4166ac:	mov	x21, x19
  4166b0:	cbz	w0, 416760 <ascii_strlower_n@plt+0x12350>
  4166b4:	cmp	w23, #0x0
  4166b8:	mov	w8, #0x1                   	// #1
  4166bc:	cinc	x0, x8, eq  // eq = none
  4166c0:	bl	415dcc <ascii_strlower_n@plt+0x119bc>
  4166c4:	mov	x19, x0
  4166c8:	cbz	x0, 416758 <ascii_strlower_n@plt+0x12348>
  4166cc:	cmp	w23, #0xa
  4166d0:	b.ne	41670c <ascii_strlower_n@plt+0x122fc>  // b.any
  4166d4:	mov	w0, #0x1                   	// #1
  4166d8:	mov	w1, #0x1c                  	// #28
  4166dc:	mov	x2, x21
  4166e0:	bl	410e9c <ascii_strlower_n@plt+0xca8c>
  4166e4:	cbz	x0, 416758 <ascii_strlower_n@plt+0x12348>
  4166e8:	mov	x21, x0
  4166ec:	mov	x0, x19
  4166f0:	mov	x1, x21
  4166f4:	bl	415fa8 <ascii_strlower_n@plt+0x11b98>
  4166f8:	mov	w22, w0
  4166fc:	mov	x0, x21
  416700:	bl	4112fc <ascii_strlower_n@plt+0xceec>
  416704:	tbz	w22, #31, 416748 <ascii_strlower_n@plt+0x12338>
  416708:	b	416768 <ascii_strlower_n@plt+0x12358>
  41670c:	mov	w0, #0x1                   	// #1
  416710:	mov	w1, #0x1                   	// #1
  416714:	mov	x2, x21
  416718:	bl	410e9c <ascii_strlower_n@plt+0xca8c>
  41671c:	cbz	x0, 416758 <ascii_strlower_n@plt+0x12348>
  416720:	mov	x24, x0
  416724:	mov	x0, x19
  416728:	mov	x1, x24
  41672c:	bl	415fa8 <ascii_strlower_n@plt+0x11b98>
  416730:	mov	w22, w0
  416734:	mov	x0, x24
  416738:	bl	4112fc <ascii_strlower_n@plt+0xceec>
  41673c:	tbnz	w22, #31, 416768 <ascii_strlower_n@plt+0x12358>
  416740:	cmp	w23, #0x2
  416744:	b.ne	4166d4 <ascii_strlower_n@plt+0x122c4>  // b.any
  416748:	mov	w22, wzr
  41674c:	str	x19, [x20]
  416750:	mov	x19, xzr
  416754:	b	416768 <ascii_strlower_n@plt+0x12358>
  416758:	mov	w22, #0xfffffff4            	// #-12
  41675c:	b	416768 <ascii_strlower_n@plt+0x12358>
  416760:	mov	x19, xzr
  416764:	mov	w22, #0xffffff8e            	// #-114
  416768:	ldr	x0, [sp, #8]
  41676c:	bl	403a30 <free@plt>
  416770:	cbz	x19, 41677c <ascii_strlower_n@plt+0x1236c>
  416774:	mov	x0, x19
  416778:	bl	415e74 <ascii_strlower_n@plt+0x11a64>
  41677c:	mov	w0, w22
  416780:	ldp	x20, x19, [sp, #64]
  416784:	ldp	x22, x21, [sp, #48]
  416788:	ldp	x24, x23, [sp, #32]
  41678c:	ldp	x29, x30, [sp, #16]
  416790:	add	sp, sp, #0x50
  416794:	ret
  416798:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  41679c:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf0>
  4167a0:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  4167a4:	add	x1, x1, #0xc0e
  4167a8:	add	x2, x2, #0x399
  4167ac:	add	x4, x4, #0x632
  4167b0:	mov	w3, #0x115                 	// #277
  4167b4:	bl	403aa0 <log_assert_failed_realm@plt>
  4167b8:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf0>
  4167bc:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf0>
  4167c0:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  4167c4:	add	x1, x1, #0xc5
  4167c8:	add	x2, x2, #0x399
  4167cc:	add	x4, x4, #0x632
  4167d0:	mov	w3, #0x116                 	// #278
  4167d4:	mov	w0, wzr
  4167d8:	bl	403aa0 <log_assert_failed_realm@plt>
  4167dc:	sub	sp, sp, #0x40
  4167e0:	stp	x29, x30, [sp, #16]
  4167e4:	stp	x22, x21, [sp, #32]
  4167e8:	stp	x20, x19, [sp, #48]
  4167ec:	add	x29, sp, #0x10
  4167f0:	str	xzr, [sp, #8]
  4167f4:	cbz	x0, 4168f8 <ascii_strlower_n@plt+0x124e8>
  4167f8:	mov	x8, x2
  4167fc:	cbz	x2, 416918 <ascii_strlower_n@plt+0x12508>
  416800:	mov	x19, xzr
  416804:	cmp	w1, #0xa
  416808:	mov	w20, #0xffffff9f            	// #-97
  41680c:	b.hi	4168b4 <ascii_strlower_n@plt+0x124a4>  // b.pmore
  416810:	mov	w9, #0x1                   	// #1
  416814:	lsl	w9, w9, w1
  416818:	mov	w10, #0x405                 	// #1029
  41681c:	tst	w9, w10
  416820:	mov	x21, x19
  416824:	b.eq	4168c0 <ascii_strlower_n@plt+0x124b0>  // b.none
  416828:	mov	x22, x0
  41682c:	add	x2, sp, #0x8
  416830:	mov	w0, w1
  416834:	mov	x1, x8
  416838:	bl	4042a0 <dns_name_reverse@plt>
  41683c:	tbnz	w0, #31, 416898 <ascii_strlower_n@plt+0x12488>
  416840:	mov	w0, #0x1                   	// #1
  416844:	mov	w1, #0x20                  	// #32
  416848:	mov	w19, #0x1                   	// #1
  41684c:	bl	404070 <calloc@plt>
  416850:	mov	x21, x0
  416854:	cbz	x0, 4168a8 <ascii_strlower_n@plt+0x12498>
  416858:	ldr	x2, [sp, #8]
  41685c:	mov	w0, #0x1                   	// #1
  416860:	mov	w1, #0xc                   	// #12
  416864:	str	w19, [x21]
  416868:	str	x19, [x21, #16]
  41686c:	bl	41115c <ascii_strlower_n@plt+0xcd4c>
  416870:	mov	x19, x0
  416874:	cbz	x0, 4168ac <ascii_strlower_n@plt+0x1249c>
  416878:	mov	x0, x21
  41687c:	mov	x1, x19
  416880:	str	xzr, [sp, #8]
  416884:	bl	415fa8 <ascii_strlower_n@plt+0x11b98>
  416888:	tbnz	w0, #31, 4168bc <ascii_strlower_n@plt+0x124ac>
  41688c:	mov	w20, wzr
  416890:	str	x21, [x22]
  416894:	b	4168a0 <ascii_strlower_n@plt+0x12490>
  416898:	mov	w20, w0
  41689c:	mov	x19, xzr
  4168a0:	mov	x21, xzr
  4168a4:	b	4168c0 <ascii_strlower_n@plt+0x124b0>
  4168a8:	mov	x19, xzr
  4168ac:	mov	w20, #0xfffffff4            	// #-12
  4168b0:	b	4168c0 <ascii_strlower_n@plt+0x124b0>
  4168b4:	mov	x21, x19
  4168b8:	b	4168c0 <ascii_strlower_n@plt+0x124b0>
  4168bc:	mov	w20, w0
  4168c0:	ldr	x0, [sp, #8]
  4168c4:	bl	403a30 <free@plt>
  4168c8:	cbz	x21, 4168d4 <ascii_strlower_n@plt+0x124c4>
  4168cc:	mov	x0, x21
  4168d0:	bl	415e74 <ascii_strlower_n@plt+0x11a64>
  4168d4:	cbz	x19, 4168e0 <ascii_strlower_n@plt+0x124d0>
  4168d8:	mov	x0, x19
  4168dc:	bl	4112fc <ascii_strlower_n@plt+0xceec>
  4168e0:	mov	w0, w20
  4168e4:	ldp	x20, x19, [sp, #48]
  4168e8:	ldp	x22, x21, [sp, #32]
  4168ec:	ldp	x29, x30, [sp, #16]
  4168f0:	add	sp, sp, #0x40
  4168f4:	ret
  4168f8:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  4168fc:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416900:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416904:	add	x1, x1, #0xc0e
  416908:	add	x2, x2, #0x399
  41690c:	add	x4, x4, #0x679
  416910:	mov	w3, #0x150                 	// #336
  416914:	bl	403aa0 <log_assert_failed_realm@plt>
  416918:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  41691c:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416920:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416924:	add	x1, x1, #0x53d
  416928:	add	x2, x2, #0x399
  41692c:	add	x4, x4, #0x679
  416930:	mov	w3, #0x151                 	// #337
  416934:	mov	w0, wzr
  416938:	bl	403aa0 <log_assert_failed_realm@plt>
  41693c:	sub	sp, sp, #0x50
  416940:	stp	x29, x30, [sp, #16]
  416944:	stp	x24, x23, [sp, #32]
  416948:	stp	x22, x21, [sp, #48]
  41694c:	stp	x20, x19, [sp, #64]
  416950:	add	x29, sp, #0x10
  416954:	stp	xzr, xzr, [sp]
  416958:	cbz	x0, 416ab4 <ascii_strlower_n@plt+0x126a4>
  41695c:	mov	x23, x3
  416960:	cbz	x3, 4169c0 <ascii_strlower_n@plt+0x125b0>
  416964:	mov	w24, w4
  416968:	mov	x20, x2
  41696c:	mov	x19, x1
  416970:	mov	x21, x0
  416974:	cbz	x2, 4169bc <ascii_strlower_n@plt+0x125ac>
  416978:	tbz	w5, #0, 41699c <ascii_strlower_n@plt+0x1258c>
  41697c:	add	x1, sp, #0x8
  416980:	mov	x0, x23
  416984:	bl	4043f0 <dns_name_apply_idna@plt>
  416988:	mov	w22, w0
  41698c:	tbnz	w0, #31, 416a54 <ascii_strlower_n@plt+0x12644>
  416990:	ldr	x8, [sp, #8]
  416994:	cmp	w22, #0x0
  416998:	csel	x23, x23, x8, eq  // eq = none
  41699c:	mov	x3, sp
  4169a0:	mov	x0, x19
  4169a4:	mov	x1, x20
  4169a8:	mov	x2, x23
  4169ac:	bl	404400 <dns_service_join@plt>
  4169b0:	tbnz	w0, #31, 416a50 <ascii_strlower_n@plt+0x12640>
  4169b4:	ldr	x23, [sp]
  4169b8:	b	4169d0 <ascii_strlower_n@plt+0x125c0>
  4169bc:	cbz	x19, 4169d0 <ascii_strlower_n@plt+0x125c0>
  4169c0:	mov	x20, xzr
  4169c4:	mov	x19, xzr
  4169c8:	mov	w22, #0xffffffea            	// #-22
  4169cc:	b	416a70 <ascii_strlower_n@plt+0x12660>
  4169d0:	tst	w24, #0x1
  4169d4:	mov	w8, #0x1                   	// #1
  4169d8:	cinc	x0, x8, ne  // ne = any
  4169dc:	bl	415dcc <ascii_strlower_n@plt+0x119bc>
  4169e0:	mov	x19, x0
  4169e4:	cbz	x0, 416a60 <ascii_strlower_n@plt+0x12650>
  4169e8:	mov	w0, #0x1                   	// #1
  4169ec:	mov	w1, #0x21                  	// #33
  4169f0:	mov	x2, x23
  4169f4:	bl	410e9c <ascii_strlower_n@plt+0xca8c>
  4169f8:	mov	x20, x0
  4169fc:	cbz	x0, 416a64 <ascii_strlower_n@plt+0x12654>
  416a00:	mov	x0, x19
  416a04:	mov	x1, x20
  416a08:	bl	415fa8 <ascii_strlower_n@plt+0x11b98>
  416a0c:	tbnz	w0, #31, 416a6c <ascii_strlower_n@plt+0x1265c>
  416a10:	tbz	w24, #0, 416a44 <ascii_strlower_n@plt+0x12634>
  416a14:	mov	x0, x20
  416a18:	bl	4112fc <ascii_strlower_n@plt+0xceec>
  416a1c:	mov	w0, #0x1                   	// #1
  416a20:	mov	w1, #0x10                  	// #16
  416a24:	mov	x2, x23
  416a28:	bl	410e9c <ascii_strlower_n@plt+0xca8c>
  416a2c:	mov	x20, x0
  416a30:	cbz	x0, 416a64 <ascii_strlower_n@plt+0x12654>
  416a34:	mov	x0, x19
  416a38:	mov	x1, x20
  416a3c:	bl	415fa8 <ascii_strlower_n@plt+0x11b98>
  416a40:	tbnz	w0, #31, 416a6c <ascii_strlower_n@plt+0x1265c>
  416a44:	mov	w22, wzr
  416a48:	str	x19, [x21]
  416a4c:	b	416a58 <ascii_strlower_n@plt+0x12648>
  416a50:	mov	w22, w0
  416a54:	mov	x20, xzr
  416a58:	mov	x19, xzr
  416a5c:	b	416a70 <ascii_strlower_n@plt+0x12660>
  416a60:	mov	x20, xzr
  416a64:	mov	w22, #0xfffffff4            	// #-12
  416a68:	b	416a70 <ascii_strlower_n@plt+0x12660>
  416a6c:	mov	w22, w0
  416a70:	ldr	x0, [sp]
  416a74:	bl	403a30 <free@plt>
  416a78:	ldr	x0, [sp, #8]
  416a7c:	bl	403a30 <free@plt>
  416a80:	cbz	x19, 416a8c <ascii_strlower_n@plt+0x1267c>
  416a84:	mov	x0, x19
  416a88:	bl	415e74 <ascii_strlower_n@plt+0x11a64>
  416a8c:	cbz	x20, 416a98 <ascii_strlower_n@plt+0x12688>
  416a90:	mov	x0, x20
  416a94:	bl	4112fc <ascii_strlower_n@plt+0xceec>
  416a98:	mov	w0, w22
  416a9c:	ldp	x20, x19, [sp, #64]
  416aa0:	ldp	x22, x21, [sp, #48]
  416aa4:	ldp	x24, x23, [sp, #32]
  416aa8:	ldp	x29, x30, [sp, #16]
  416aac:	add	sp, sp, #0x50
  416ab0:	ret
  416ab4:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf0>
  416ab8:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416abc:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416ac0:	add	x1, x1, #0xc0e
  416ac4:	add	x2, x2, #0x399
  416ac8:	add	x4, x4, #0x6c8
  416acc:	mov	w3, #0x17b                 	// #379
  416ad0:	bl	403aa0 <log_assert_failed_realm@plt>
  416ad4:	cmp	w0, #0xf8
  416ad8:	b.gt	416b14 <ascii_strlower_n@plt+0x12704>
  416adc:	sub	w8, w0, #0x1
  416ae0:	cmp	w8, #0x68
  416ae4:	b.hi	416ed0 <ascii_strlower_n@plt+0x12ac0>  // b.pmore
  416ae8:	adrp	x9, 41e000 <ascii_strlower_n@plt+0x19bf0>
  416aec:	add	x9, x9, #0x870
  416af0:	adr	x10, 416b08 <ascii_strlower_n@plt+0x126f8>
  416af4:	ldrb	w11, [x9, x8]
  416af8:	add	x10, x10, x11, lsl #2
  416afc:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416b00:	add	x0, x0, #0x72d
  416b04:	br	x10
  416b08:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416b0c:	add	x0, x0, #0x72f
  416b10:	ret
  416b14:	sub	w8, w0, #0xf9
  416b18:	cmp	w8, #0x8
  416b1c:	b.hi	416b44 <ascii_strlower_n@plt+0x12734>  // b.pmore
  416b20:	adrp	x9, 41e000 <ascii_strlower_n@plt+0x19bf0>
  416b24:	add	x9, x9, #0x8d9
  416b28:	adr	x10, 416b38 <ascii_strlower_n@plt+0x12728>
  416b2c:	ldrb	w11, [x9, x8]
  416b30:	add	x10, x10, x11, lsl #2
  416b34:	br	x10
  416b38:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416b3c:	add	x0, x0, #0x86f
  416b40:	ret
  416b44:	cmp	w0, #0x8, lsl #12
  416b48:	b.eq	416ec4 <ascii_strlower_n@plt+0x12ab4>  // b.none
  416b4c:	mov	w8, #0x8001                	// #32769
  416b50:	cmp	w0, w8
  416b54:	b.ne	416ed0 <ascii_strlower_n@plt+0x12ac0>  // b.any
  416b58:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416b5c:	add	x0, x0, #0x89e
  416b60:	ret
  416b64:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416b68:	add	x0, x0, #0x732
  416b6c:	ret
  416b70:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416b74:	add	x0, x0, #0x735
  416b78:	ret
  416b7c:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416b80:	add	x0, x0, #0x738
  416b84:	ret
  416b88:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416b8c:	add	x0, x0, #0x73e
  416b90:	ret
  416b94:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416b98:	add	x0, x0, #0x742
  416b9c:	ret
  416ba0:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416ba4:	add	x0, x0, #0x745
  416ba8:	ret
  416bac:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416bb0:	add	x0, x0, #0x748
  416bb4:	ret
  416bb8:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416bbc:	add	x0, x0, #0x74b
  416bc0:	ret
  416bc4:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416bc8:	add	x0, x0, #0x750
  416bcc:	ret
  416bd0:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416bd4:	add	x0, x0, #0x754
  416bd8:	ret
  416bdc:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416be0:	add	x0, x0, #0x758
  416be4:	ret
  416be8:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416bec:	add	x0, x0, #0x75e
  416bf0:	ret
  416bf4:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416bf8:	add	x0, x0, #0x764
  416bfc:	ret
  416c00:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416c04:	add	x0, x0, #0x767
  416c08:	ret
  416c0c:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416c10:	add	x0, x0, #0x76b
  416c14:	ret
  416c18:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416c1c:	add	x0, x0, #0x76e
  416c20:	ret
  416c24:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416c28:	add	x0, x0, #0x774
  416c2c:	ret
  416c30:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416c34:	add	x0, x0, #0x778
  416c38:	ret
  416c3c:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416c40:	add	x0, x0, #0x77d
  416c44:	ret
  416c48:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416c4c:	add	x0, x0, #0x780
  416c50:	ret
  416c54:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416c58:	add	x0, x0, #0x785
  416c5c:	ret
  416c60:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416c64:	add	x0, x0, #0x78e
  416c68:	ret
  416c6c:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416c70:	add	x0, x0, #0x792
  416c74:	ret
  416c78:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416c7c:	add	x0, x0, #0x796
  416c80:	ret
  416c84:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416c88:	add	x0, x0, #0x799
  416c8c:	ret
  416c90:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416c94:	add	x0, x0, #0x79e
  416c98:	ret
  416c9c:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416ca0:	add	x0, x0, #0x7a3
  416ca4:	ret
  416ca8:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416cac:	add	x0, x0, #0x7a7
  416cb0:	ret
  416cb4:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416cb8:	add	x0, x0, #0x7ab
  416cbc:	ret
  416cc0:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416cc4:	add	x0, x0, #0x7af
  416cc8:	ret
  416ccc:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416cd0:	add	x0, x0, #0x7b6
  416cd4:	ret
  416cd8:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416cdc:	add	x0, x0, #0x7ba
  416ce0:	ret
  416ce4:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416ce8:	add	x0, x0, #0x7bf
  416cec:	ret
  416cf0:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416cf4:	add	x0, x0, #0x7c5
  416cf8:	ret
  416cfc:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416d00:	add	x0, x0, #0x7c8
  416d04:	ret
  416d08:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416d0c:	add	x0, x0, #0x7cd
  416d10:	ret
  416d14:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416d18:	add	x0, x0, #0x7d0
  416d1c:	ret
  416d20:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416d24:	add	x0, x0, #0x7d6
  416d28:	ret
  416d2c:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416d30:	add	x0, x0, #0x7db
  416d34:	ret
  416d38:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416d3c:	add	x0, x0, #0x7df
  416d40:	ret
  416d44:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416d48:	add	x0, x0, #0x7e3
  416d4c:	ret
  416d50:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416d54:	add	x0, x0, #0x7e6
  416d58:	ret
  416d5c:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416d60:	add	x0, x0, #0x7ec
  416d64:	ret
  416d68:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416d6c:	add	x0, x0, #0x7f5
  416d70:	ret
  416d74:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416d78:	add	x0, x0, #0x7fb
  416d7c:	ret
  416d80:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416d84:	add	x0, x0, #0x800
  416d88:	ret
  416d8c:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416d90:	add	x0, x0, #0x807
  416d94:	ret
  416d98:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416d9c:	add	x0, x0, #0x80d
  416da0:	ret
  416da4:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416da8:	add	x0, x0, #0x813
  416dac:	ret
  416db0:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416db4:	add	x0, x0, #0x81e
  416db8:	ret
  416dbc:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416dc0:	add	x0, x0, #0x823
  416dc4:	ret
  416dc8:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416dcc:	add	x0, x0, #0x827
  416dd0:	ret
  416dd4:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416dd8:	add	x0, x0, #0x82d
  416ddc:	ret
  416de0:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416de4:	add	x0, x0, #0x832
  416de8:	ret
  416dec:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416df0:	add	x0, x0, #0x839
  416df4:	ret
  416df8:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416dfc:	add	x0, x0, #0x83d
  416e00:	ret
  416e04:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416e08:	add	x0, x0, #0x845
  416e0c:	ret
  416e10:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416e14:	add	x0, x0, #0x850
  416e18:	ret
  416e1c:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416e20:	add	x0, x0, #0x854
  416e24:	ret
  416e28:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416e2c:	add	x0, x0, #0x858
  416e30:	ret
  416e34:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416e38:	add	x0, x0, #0x85c
  416e3c:	ret
  416e40:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416e44:	add	x0, x0, #0x860
  416e48:	ret
  416e4c:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416e50:	add	x0, x0, #0x863
  416e54:	ret
  416e58:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416e5c:	add	x0, x0, #0x869
  416e60:	ret
  416e64:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416e68:	add	x0, x0, #0x874
  416e6c:	ret
  416e70:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416e74:	add	x0, x0, #0x879
  416e78:	ret
  416e7c:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416e80:	add	x0, x0, #0x87e
  416e84:	ret
  416e88:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416e8c:	add	x0, x0, #0x883
  416e90:	ret
  416e94:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416e98:	add	x0, x0, #0x889
  416e9c:	ret
  416ea0:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416ea4:	add	x0, x0, #0x88f
  416ea8:	ret
  416eac:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416eb0:	add	x0, x0, #0x893
  416eb4:	ret
  416eb8:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416ebc:	add	x0, x0, #0x897
  416ec0:	ret
  416ec4:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf0>
  416ec8:	add	x0, x0, #0x89b
  416ecc:	ret
  416ed0:	mov	x0, xzr
  416ed4:	ret
  416ed8:	stp	x29, x30, [sp, #-32]!
  416edc:	str	x19, [sp, #16]
  416ee0:	mov	x29, sp
  416ee4:	cbz	x0, 41700c <ascii_strlower_n@plt+0x12bfc>
  416ee8:	mov	x19, x0
  416eec:	bl	403d30 <strlen@plt>
  416ef0:	sub	x8, x0, #0x1
  416ef4:	cmp	x8, #0x9
  416ef8:	b.hi	416fc0 <ascii_strlower_n@plt+0x12bb0>  // b.pmore
  416efc:	adrp	x9, 41e000 <ascii_strlower_n@plt+0x19bf0>
  416f00:	cmp	w0, #0x1
  416f04:	add	x9, x9, #0x8e2
  416f08:	b.ne	416f14 <ascii_strlower_n@plt+0x12b04>  // b.any
  416f0c:	mov	w10, #0x1                   	// #1
  416f10:	b	416f20 <ascii_strlower_n@plt+0x12b10>
  416f14:	ldrb	w10, [x19, #1]
  416f18:	ldrb	w10, [x9, x10]
  416f1c:	add	w10, w10, w0
  416f20:	ldrb	w11, [x19]
  416f24:	ldrb	w8, [x19, x8]
  416f28:	ldrb	w12, [x9, x11]
  416f2c:	ldrb	w8, [x9, x8]
  416f30:	add	x9, x12, w10, uxtw
  416f34:	add	x8, x9, x8
  416f38:	cmp	w8, #0xb1
  416f3c:	b.hi	416fc0 <ascii_strlower_n@plt+0x12bb0>  // b.pmore
  416f40:	adrp	x9, 43e000 <ascii_strlower_n@plt+0x39bf0>
  416f44:	lsl	x10, x8, #4
  416f48:	add	x9, x9, #0xc18
  416f4c:	ldr	x12, [x9, x10]
  416f50:	cbz	x12, 416fc0 <ascii_strlower_n@plt+0x12bb0>
  416f54:	ldrb	w13, [x12]
  416f58:	eor	w10, w13, w11
  416f5c:	tst	w10, #0xffffffdf
  416f60:	b.ne	416fc0 <ascii_strlower_n@plt+0x12bb0>  // b.any
  416f64:	adrp	x10, 41e000 <ascii_strlower_n@plt+0x19bf0>
  416f68:	add	x10, x10, #0x9e2
  416f6c:	ldrb	w14, [x10, x11]
  416f70:	ldrb	w13, [x10, x13]
  416f74:	cmp	w14, w13
  416f78:	cset	w13, eq  // eq = none
  416f7c:	cbz	w11, 416fb0 <ascii_strlower_n@plt+0x12ba0>
  416f80:	b.ne	416fb0 <ascii_strlower_n@plt+0x12ba0>  // b.any
  416f84:	add	x11, x12, #0x1
  416f88:	add	x12, x19, #0x1
  416f8c:	ldrb	w16, [x12], #1
  416f90:	ldrb	w13, [x11], #1
  416f94:	ldrb	w14, [x10, x16]
  416f98:	ldrb	w15, [x10, x13]
  416f9c:	cmp	w14, w15
  416fa0:	cset	w13, eq  // eq = none
  416fa4:	cbz	x16, 416fb0 <ascii_strlower_n@plt+0x12ba0>
  416fa8:	cmp	w14, w15
  416fac:	b.eq	416f8c <ascii_strlower_n@plt+0x12b7c>  // b.none
  416fb0:	cbz	w13, 416fc0 <ascii_strlower_n@plt+0x12bb0>
  416fb4:	add	x8, x9, x8, lsl #4
  416fb8:	ldr	w0, [x8, #8]
  416fbc:	b	416fdc <ascii_strlower_n@plt+0x12bcc>
  416fc0:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf0>
  416fc4:	add	x1, x1, #0x538
  416fc8:	mov	w2, #0x4                   	// #4
  416fcc:	mov	x0, x19
  416fd0:	bl	403fc0 <strncasecmp@plt>
  416fd4:	cbz	w0, 416fe8 <ascii_strlower_n@plt+0x12bd8>
  416fd8:	mov	w0, #0xffffffff            	// #-1
  416fdc:	ldr	x19, [sp, #16]
  416fe0:	ldp	x29, x30, [sp], #32
  416fe4:	ret
  416fe8:	add	x0, x19, #0x4
  416fec:	add	x2, x29, #0x1c
  416ff0:	mov	w1, wzr
  416ff4:	bl	4043b0 <safe_atou_full@plt>
  416ff8:	tbnz	w0, #31, 416fd8 <ascii_strlower_n@plt+0x12bc8>
  416ffc:	ldr	w0, [x29, #28]
  417000:	cmp	w0, #0x10, lsl #12
  417004:	b.cc	416fdc <ascii_strlower_n@plt+0x12bcc>  // b.lo, b.ul, b.last
  417008:	b	416fd8 <ascii_strlower_n@plt+0x12bc8>
  41700c:	adrp	x1, 417000 <ascii_strlower_n@plt+0x12bf0>
  417010:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf0>
  417014:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  417018:	add	x1, x1, #0xf02
  41701c:	add	x2, x2, #0x8a5
  417020:	add	x4, x4, #0x8bc
  417024:	mov	w3, #0x18                  	// #24
  417028:	bl	403aa0 <log_assert_failed_realm@plt>
  41702c:	and	w8, w0, #0xffff
  417030:	sub	w9, w8, #0xf9
  417034:	cmp	w9, #0x6
  417038:	b.hi	417058 <ascii_strlower_n@plt+0x12c48>  // b.pmore
  41703c:	mov	w10, #0x1                   	// #1
  417040:	lsl	w9, w10, w9
  417044:	mov	w10, #0x4f                  	// #79
  417048:	tst	w9, w10
  41704c:	b.eq	417058 <ascii_strlower_n@plt+0x12c48>  // b.none
  417050:	mov	w0, #0x1                   	// #1
  417054:	ret
  417058:	cmp	w8, #0x29
  41705c:	b.eq	417050 <ascii_strlower_n@plt+0x12c40>  // b.none
  417060:	cbz	w8, 417050 <ascii_strlower_n@plt+0x12c40>
  417064:	mov	w0, wzr
  417068:	ret
  41706c:	and	w8, w0, #0xffff
  417070:	cmp	w8, #0xff
  417074:	cset	w0, eq  // eq = none
  417078:	ret
  41707c:	and	w8, w0, #0xffff
  417080:	cmp	w8, #0x2e
  417084:	b.hi	4170a4 <ascii_strlower_n@plt+0x12c94>  // b.pmore
  417088:	and	x9, x0, #0xffff
  41708c:	mov	w10, #0x1                   	// #1
  417090:	lsl	x9, x10, x9
  417094:	mov	x10, #0x1                   	// #1
  417098:	movk	x10, #0x4200, lsl #32
  41709c:	tst	x9, x10
  4170a0:	b.ne	4170b0 <ascii_strlower_n@plt+0x12ca0>  // b.any
  4170a4:	sub	w8, w8, #0xf9
  4170a8:	cmp	w8, #0x2
  4170ac:	b.cs	4170b8 <ascii_strlower_n@plt+0x12ca8>  // b.hs, b.nlast
  4170b0:	mov	w0, wzr
  4170b4:	ret
  4170b8:	mov	w0, #0x1                   	// #1
  4170bc:	ret
  4170c0:	and	w8, w0, #0xffff
  4170c4:	sub	w8, w8, #0xfb
  4170c8:	cmp	w8, #0x2
  4170cc:	cset	w0, cc  // cc = lo, ul, last
  4170d0:	ret
  4170d4:	sub	w8, w0, #0xfb
  4170d8:	and	w9, w8, #0xffff
  4170dc:	cmp	w9, #0x4
  4170e0:	b.hi	4170f4 <ascii_strlower_n@plt+0x12ce4>  // b.pmore
  4170e4:	mov	w9, #0xc                   	// #12
  4170e8:	lsr	w8, w9, w8
  4170ec:	and	w0, w8, #0x1
  4170f0:	ret
  4170f4:	mov	w0, #0x1                   	// #1
  4170f8:	ret
  4170fc:	and	w8, w0, #0xffff
  417100:	cmp	w8, #0xff
  417104:	cset	w0, ne  // ne = any
  417108:	ret
  41710c:	stp	x29, x30, [sp, #-32]!
  417110:	str	x19, [sp, #16]
  417114:	mov	x29, sp
  417118:	mov	w19, w0
  41711c:	bl	41702c <ascii_strlower_n@plt+0x12c1c>
  417120:	tbz	w0, #0, 41712c <ascii_strlower_n@plt+0x12d1c>
  417124:	mov	w0, wzr
  417128:	b	417158 <ascii_strlower_n@plt+0x12d48>
  41712c:	sub	w8, w19, #0x5
  417130:	and	w9, w8, #0xffff
  417134:	cmp	w9, #0x2d
  417138:	b.hi	417154 <ascii_strlower_n@plt+0x12d44>  // b.pmore
  41713c:	mov	x9, #0xfffe                	// #65534
  417140:	movk	x9, #0xfde7, lsl #16
  417144:	movk	x9, #0x19fb, lsl #32
  417148:	lsr	x8, x9, x8
  41714c:	and	w0, w8, #0x1
  417150:	b	417158 <ascii_strlower_n@plt+0x12d48>
  417154:	mov	w0, #0x1                   	// #1
  417158:	ldr	x19, [sp, #16]
  41715c:	ldp	x29, x30, [sp], #32
  417160:	ret
  417164:	stp	x29, x30, [sp, #-32]!
  417168:	str	x19, [sp, #16]
  41716c:	mov	x29, sp
  417170:	mov	w19, w0
  417174:	bl	41702c <ascii_strlower_n@plt+0x12c1c>
  417178:	tbz	w0, #0, 417184 <ascii_strlower_n@plt+0x12d74>
  41717c:	mov	w0, wzr
  417180:	b	4171ac <ascii_strlower_n@plt+0x12d9c>
  417184:	sub	w8, w19, #0x6
  417188:	and	w9, w8, #0xffff
  41718c:	cmp	w9, #0x2c
  417190:	b.hi	4171a8 <ascii_strlower_n@plt+0x12d98>  // b.pmore
  417194:	mov	x9, #0xfffffffe            	// #4294967294
  417198:	movk	x9, #0xffd, lsl #32
  41719c:	lsr	x8, x9, x8
  4171a0:	and	w0, w8, #0x1
  4171a4:	b	4171ac <ascii_strlower_n@plt+0x12d9c>
  4171a8:	mov	w0, #0x1                   	// #1
  4171ac:	ldr	x19, [sp, #16]
  4171b0:	ldp	x29, x30, [sp], #32
  4171b4:	ret
  4171b8:	sub	w8, w0, #0x2
  4171bc:	and	w9, w8, #0xffff
  4171c0:	cmp	w9, #0x31
  4171c4:	b.hi	4171e0 <ascii_strlower_n@plt+0x12dd0>  // b.pmore
  4171c8:	mov	x9, #0x11                  	// #17
  4171cc:	movk	x9, #0x4000, lsl #32
  4171d0:	movk	x9, #0x2, lsl #48
  4171d4:	lsr	x8, x9, x8
  4171d8:	and	w0, w8, #0x1
  4171dc:	ret
  4171e0:	mov	w0, wzr
  4171e4:	ret
  4171e8:	sub	w8, w0, #0x2b
  4171ec:	and	w9, w8, #0xffff
  4171f0:	cmp	w9, #0x8
  4171f4:	b.hi	417208 <ascii_strlower_n@plt+0x12df8>  // b.pmore
  4171f8:	mov	w9, #0x1b9                 	// #441
  4171fc:	lsr	w8, w9, w8
  417200:	and	w0, w8, #0x1
  417204:	ret
  417208:	mov	w0, wzr
  41720c:	ret
  417210:	and	w8, w0, #0xffff
  417214:	cmp	w8, #0x26
  417218:	b.hi	417244 <ascii_strlower_n@plt+0x12e34>  // b.pmore
  41721c:	and	x9, x0, #0xffff
  417220:	mov	w10, #0x1                   	// #1
  417224:	lsl	x9, x10, x9
  417228:	mov	x10, #0x4f98                	// #20376
  41722c:	movk	x10, #0x4000, lsl #16
  417230:	movk	x10, #0x40, lsl #32
  417234:	tst	x9, x10
  417238:	b.eq	417244 <ascii_strlower_n@plt+0x12e34>  // b.none
  41723c:	mov	w0, #0x1                   	// #1
  417240:	ret
  417244:	sub	w8, w8, #0xfd
  417248:	cmp	w8, #0x2
  41724c:	b.cc	41723c <ascii_strlower_n@plt+0x12e2c>  // b.lo, b.ul, b.last
  417250:	mov	w0, wzr
  417254:	ret
  417258:	and	w8, w0, #0xffff
  41725c:	cmp	w8, #0x3d
  417260:	b.hi	417288 <ascii_strlower_n@plt+0x12e78>  // b.pmore
  417264:	and	x9, x0, #0xffff
  417268:	mov	w10, #0x1                   	// #1
  41726c:	lsl	x9, x10, x9
  417270:	mov	x10, #0x382000000000        	// #61710090108928
  417274:	movk	x10, #0x3011, lsl #48
  417278:	tst	x9, x10
  41727c:	b.eq	417288 <ascii_strlower_n@plt+0x12e78>  // b.none
  417280:	mov	w0, #0x1                   	// #1
  417284:	ret
  417288:	cmp	w8, #0x101
  41728c:	b.eq	417280 <ascii_strlower_n@plt+0x12e70>  // b.none
  417290:	mov	w0, wzr
  417294:	ret
  417298:	and	w8, w0, #0xffff
  41729c:	cmp	w8, #0x1
  4172a0:	b.eq	4172bc <ascii_strlower_n@plt+0x12eac>  // b.none
  4172a4:	cmp	w8, #0xff
  4172a8:	b.eq	4172c4 <ascii_strlower_n@plt+0x12eb4>  // b.none
  4172ac:	cmp	w8, #0x1c
  4172b0:	b.ne	4172cc <ascii_strlower_n@plt+0x12ebc>  // b.any
  4172b4:	mov	w0, #0xa                   	// #10
  4172b8:	ret
  4172bc:	mov	w0, #0x2                   	// #2
  4172c0:	ret
  4172c4:	mov	w0, wzr
  4172c8:	ret
  4172cc:	mov	w0, #0xffffffea            	// #-22
  4172d0:	ret
  4172d4:	and	w8, w0, #0xffff
  4172d8:	adrp	x9, 41d000 <ascii_strlower_n@plt+0x18bf0>
  4172dc:	add	x9, x9, #0x88f
  4172e0:	adrp	x10, 41d000 <ascii_strlower_n@plt+0x18bf0>
  4172e4:	cmp	w8, #0xff
  4172e8:	add	x10, x10, #0x8e3
  4172ec:	csel	x9, x9, xzr, eq  // eq = none
  4172f0:	cmp	w8, #0x1
  4172f4:	csel	x0, x10, x9, eq  // eq = none
  4172f8:	ret
  4172fc:	stp	x29, x30, [sp, #-32]!
  417300:	str	x19, [sp, #16]
  417304:	mov	x29, sp
  417308:	cbz	x0, 417340 <ascii_strlower_n@plt+0x12f30>
  41730c:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf0>
  417310:	add	x1, x1, #0x8e3
  417314:	mov	x19, x0
  417318:	bl	4042c0 <strcasecmp@plt>
  41731c:	cbz	w0, 417348 <ascii_strlower_n@plt+0x12f38>
  417320:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf0>
  417324:	add	x1, x1, #0x88f
  417328:	mov	x0, x19
  41732c:	bl	4042c0 <strcasecmp@plt>
  417330:	cmp	w0, #0x0
  417334:	mov	w8, #0xff                  	// #255
  417338:	csinv	w0, w8, wzr, eq  // eq = none
  41733c:	b	41734c <ascii_strlower_n@plt+0x12f3c>
  417340:	mov	w0, #0xffffffff            	// #-1
  417344:	b	41734c <ascii_strlower_n@plt+0x12f3c>
  417348:	mov	w0, #0x1                   	// #1
  41734c:	ldr	x19, [sp, #16]
  417350:	ldp	x29, x30, [sp], #32
  417354:	ret
  417358:	add	w8, w0, #0x1
  41735c:	and	w9, w8, #0xff
  417360:	cmp	w9, #0x5
  417364:	b.cs	41737c <ascii_strlower_n@plt+0x12f6c>  // b.hs, b.nlast
  417368:	adrp	x9, 43f000 <ascii_strlower_n@plt+0x3abf0>
  41736c:	sxtb	x8, w8
  417370:	add	x9, x9, #0x738
  417374:	ldr	x0, [x9, x8, lsl #3]
  417378:	ret
  41737c:	and	w8, w0, #0xff
  417380:	sub	w8, w8, #0x4
  417384:	adrp	x9, 41d000 <ascii_strlower_n@plt+0x18bf0>
  417388:	add	x9, x9, #0x944
  41738c:	cmp	w8, #0xfb
  417390:	csel	x0, x9, xzr, cc  // cc = lo, ul, last
  417394:	ret
  417398:	add	w8, w0, #0x1
  41739c:	and	w9, w8, #0xff
  4173a0:	cmp	w9, #0x3
  4173a4:	b.cs	4173bc <ascii_strlower_n@plt+0x12fac>  // b.hs, b.nlast
  4173a8:	adrp	x9, 43f000 <ascii_strlower_n@plt+0x3abf0>
  4173ac:	sxtb	x8, w8
  4173b0:	add	x9, x9, #0x760
  4173b4:	ldr	x0, [x9, x8, lsl #3]
  4173b8:	ret
  4173bc:	and	w8, w0, #0xff
  4173c0:	sub	w8, w8, #0x2
  4173c4:	adrp	x9, 41d000 <ascii_strlower_n@plt+0x18bf0>
  4173c8:	add	x9, x9, #0x944
  4173cc:	cmp	w8, #0xfd
  4173d0:	csel	x0, x9, xzr, cc  // cc = lo, ul, last
  4173d4:	ret
  4173d8:	add	w8, w0, #0x1
  4173dc:	and	w9, w8, #0xff
  4173e0:	cmp	w9, #0x4
  4173e4:	b.cs	4173fc <ascii_strlower_n@plt+0x12fec>  // b.hs, b.nlast
  4173e8:	adrp	x9, 43f000 <ascii_strlower_n@plt+0x3abf0>
  4173ec:	sxtb	x8, w8
  4173f0:	add	x9, x9, #0x778
  4173f4:	ldr	x0, [x9, x8, lsl #3]
  4173f8:	ret
  4173fc:	and	w8, w0, #0xff
  417400:	sub	w8, w8, #0x3
  417404:	adrp	x9, 41d000 <ascii_strlower_n@plt+0x18bf0>
  417408:	add	x9, x9, #0x944
  41740c:	cmp	w8, #0xfc
  417410:	csel	x0, x9, xzr, cc  // cc = lo, ul, last
  417414:	ret
  417418:	stp	x29, x30, [sp, #-16]!
  41741c:	mov	x29, sp
  417420:	cbz	x0, 417490 <ascii_strlower_n@plt+0x13080>
  417424:	ldr	x8, [x0, #8]
  417428:	ldrh	w8, [x8, #6]
  41742c:	cmp	w8, #0x30
  417430:	b.ne	4174b0 <ascii_strlower_n@plt+0x130a0>  // b.any
  417434:	ldrh	w8, [x0, #80]
  417438:	ldrh	w10, [x0, #82]
  41743c:	ldr	x9, [x0, #96]
  417440:	tst	w1, #0x1
  417444:	and	w11, w8, #0xffffff7f
  417448:	lsl	w10, w10, #16
  41744c:	csel	w8, w11, w8, ne  // ne = any
  417450:	rev	w10, w10
  417454:	add	w8, w10, w8
  417458:	cbz	x9, 417484 <ascii_strlower_n@plt+0x13074>
  41745c:	ldr	x10, [x0, #88]
  417460:	mov	x11, xzr
  417464:	ldrb	w12, [x10, x11]
  417468:	tst	x11, #0x1
  41746c:	add	x11, x11, #0x1
  417470:	lsl	w13, w12, #8
  417474:	csel	w12, w13, w12, eq  // eq = none
  417478:	cmp	x11, x9
  41747c:	add	w8, w12, w8
  417480:	b.cc	417464 <ascii_strlower_n@plt+0x13054>  // b.lo, b.ul, b.last
  417484:	add	w0, w8, w8, lsr #16
  417488:	ldp	x29, x30, [sp], #16
  41748c:	ret
  417490:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf0>
  417494:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf0>
  417498:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  41749c:	add	x1, x1, #0x996
  4174a0:	add	x2, x2, #0x9a0
  4174a4:	add	x4, x4, #0x9c2
  4174a8:	mov	w3, #0x2a                  	// #42
  4174ac:	bl	403aa0 <log_assert_failed_realm@plt>
  4174b0:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf0>
  4174b4:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf0>
  4174b8:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  4174bc:	add	x1, x1, #0x9f5
  4174c0:	add	x2, x2, #0x9a0
  4174c4:	add	x4, x4, #0x9c2
  4174c8:	mov	w3, #0x2b                  	// #43
  4174cc:	mov	w0, wzr
  4174d0:	bl	403aa0 <log_assert_failed_realm@plt>
  4174d4:	sub	sp, sp, #0x50
  4174d8:	cmp	x2, #0x2
  4174dc:	stp	x29, x30, [sp, #16]
  4174e0:	stp	x24, x23, [sp, #32]
  4174e4:	stp	x22, x21, [sp, #48]
  4174e8:	stp	x20, x19, [sp, #64]
  4174ec:	add	x29, sp, #0x10
  4174f0:	str	x0, [sp, #8]
  4174f4:	b.cs	417500 <ascii_strlower_n@plt+0x130f0>  // b.hs, b.nlast
  4174f8:	mov	w21, #0xffffff97            	// #-105
  4174fc:	b	4175b4 <ascii_strlower_n@plt+0x131a4>
  417500:	add	x0, sp, #0x8
  417504:	mov	w3, wzr
  417508:	mov	x20, x2
  41750c:	mov	x19, x1
  417510:	bl	404110 <dns_label_unescape@plt>
  417514:	mov	w21, w0
  417518:	tbnz	w0, #31, 4175b4 <ascii_strlower_n@plt+0x131a4>
  41751c:	mov	x23, xzr
  417520:	mov	w24, #0x2e                  	// #46
  417524:	cbz	w21, 41758c <ascii_strlower_n@plt+0x1317c>
  417528:	mov	w22, w21
  41752c:	add	x8, x22, #0x2
  417530:	cmp	x20, x8
  417534:	b.cc	4174f8 <ascii_strlower_n@plt+0x130e8>  // b.lo, b.ul, b.last
  417538:	mov	w1, #0x2e                  	// #46
  41753c:	mov	x0, x19
  417540:	mov	x2, x22
  417544:	bl	404150 <memchr@plt>
  417548:	cbnz	x0, 417598 <ascii_strlower_n@plt+0x13188>
  41754c:	mov	x0, x19
  417550:	mov	x1, x22
  417554:	bl	404410 <ascii_strlower_n@plt>
  417558:	add	w8, w21, #0x1
  41755c:	strb	w24, [x19, x22]
  417560:	add	x19, x19, w8, sxtw
  417564:	sub	x20, x20, w8, sxtw
  417568:	add	x0, sp, #0x8
  41756c:	mov	x1, x19
  417570:	mov	x2, x20
  417574:	mov	w3, wzr
  417578:	add	x23, x23, w8, sxtw
  41757c:	bl	404110 <dns_label_unescape@plt>
  417580:	mov	w21, w0
  417584:	tbz	w0, #31, 417524 <ascii_strlower_n@plt+0x13114>
  417588:	b	4175b4 <ascii_strlower_n@plt+0x131a4>
  41758c:	cbz	x23, 4175a0 <ascii_strlower_n@plt+0x13190>
  417590:	mov	w21, w23
  417594:	b	4175b4 <ascii_strlower_n@plt+0x131a4>
  417598:	mov	w21, #0xffffffea            	// #-22
  41759c:	b	4175b4 <ascii_strlower_n@plt+0x131a4>
  4175a0:	cmp	x20, #0x2
  4175a4:	b.ls	4175d0 <ascii_strlower_n@plt+0x131c0>  // b.plast
  4175a8:	mov	w8, #0x2e                  	// #46
  4175ac:	strh	w8, [x19]
  4175b0:	mov	w21, #0x1                   	// #1
  4175b4:	mov	w0, w21
  4175b8:	ldp	x20, x19, [sp, #64]
  4175bc:	ldp	x22, x21, [sp, #48]
  4175c0:	ldp	x24, x23, [sp, #32]
  4175c4:	ldp	x29, x30, [sp, #16]
  4175c8:	add	sp, sp, #0x50
  4175cc:	ret
  4175d0:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf0>
  4175d4:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf0>
  4175d8:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf0>
  4175dc:	add	x1, x1, #0xa1a
  4175e0:	add	x2, x2, #0x9a0
  4175e4:	add	x4, x4, #0xa29
  4175e8:	mov	w3, #0x65                  	// #101
  4175ec:	mov	w0, wzr
  4175f0:	bl	403aa0 <log_assert_failed_realm@plt>
  4175f4:	mov	w0, #0xffffffa1            	// #-95
  4175f8:	ret
  4175fc:	mov	w0, #0xffffffa1            	// #-95
  417600:	ret
  417604:	mov	w0, #0xffffffa1            	// #-95
  417608:	ret
  41760c:	mov	w0, #0xffffffa1            	// #-95
  417610:	ret
  417614:	mov	w0, #0xffffffa1            	// #-95
  417618:	ret
  41761c:	mov	w0, #0xffffffa1            	// #-95
  417620:	ret
  417624:	mov	w0, #0xffffffa1            	// #-95
  417628:	ret
  41762c:	mov	w0, #0xffffffa1            	// #-95
  417630:	ret
  417634:	mov	w0, #0xffffffa1            	// #-95
  417638:	ret
  41763c:	mov	w0, #0xffffffa1            	// #-95
  417640:	ret
  417644:	cmp	w0, #0xa
  417648:	b.ls	417654 <ascii_strlower_n@plt+0x13244>  // b.plast
  41764c:	mov	x0, xzr
  417650:	ret
  417654:	adrp	x8, 43f000 <ascii_strlower_n@plt+0x3abf0>
  417658:	add	x8, x8, #0x798
  41765c:	ldr	x0, [x8, w0, uxtw #3]
  417660:	ret
  417664:	stp	x29, x30, [sp, #-16]!
  417668:	mov	x2, x0
  41766c:	adrp	x0, 43f000 <ascii_strlower_n@plt+0x3abf0>
  417670:	add	x0, x0, #0x798
  417674:	mov	w1, #0xb                   	// #11
  417678:	mov	x29, sp
  41767c:	bl	404210 <string_table_lookup@plt>
  417680:	ldp	x29, x30, [sp], #16
  417684:	ret
  417688:	cmp	w0, #0x3
  41768c:	b.ls	417698 <ascii_strlower_n@plt+0x13288>  // b.plast
  417690:	mov	x0, xzr
  417694:	ret
  417698:	adrp	x8, 43f000 <ascii_strlower_n@plt+0x3abf0>
  41769c:	add	x8, x8, #0x7f0
  4176a0:	ldr	x0, [x8, w0, uxtw #3]
  4176a4:	ret
  4176a8:	stp	x29, x30, [sp, #-16]!
  4176ac:	mov	x2, x0
  4176b0:	adrp	x0, 43f000 <ascii_strlower_n@plt+0x3abf0>
  4176b4:	add	x0, x0, #0x7f0
  4176b8:	mov	w1, #0x4                   	// #4
  4176bc:	mov	x29, sp
  4176c0:	bl	404210 <string_table_lookup@plt>
  4176c4:	ldp	x29, x30, [sp], #16
  4176c8:	ret
  4176cc:	udf	#0
  4176d0:	stp	x29, x30, [sp, #-64]!
  4176d4:	mov	x29, sp
  4176d8:	stp	x19, x20, [sp, #16]
  4176dc:	adrp	x20, 43e000 <ascii_strlower_n@plt+0x39bf0>
  4176e0:	add	x20, x20, #0x2c0
  4176e4:	stp	x21, x22, [sp, #32]
  4176e8:	adrp	x21, 43e000 <ascii_strlower_n@plt+0x39bf0>
  4176ec:	add	x21, x21, #0x2b8
  4176f0:	sub	x20, x20, x21
  4176f4:	mov	w22, w0
  4176f8:	stp	x23, x24, [sp, #48]
  4176fc:	mov	x23, x1
  417700:	mov	x24, x2
  417704:	bl	403928 <__libc_start_main@plt-0x38>
  417708:	cmp	xzr, x20, asr #3
  41770c:	b.eq	417738 <ascii_strlower_n@plt+0x13328>  // b.none
  417710:	asr	x20, x20, #3
  417714:	mov	x19, #0x0                   	// #0
  417718:	ldr	x3, [x21, x19, lsl #3]
  41771c:	mov	x2, x24
  417720:	add	x19, x19, #0x1
  417724:	mov	x1, x23
  417728:	mov	w0, w22
  41772c:	blr	x3
  417730:	cmp	x20, x19
  417734:	b.ne	417718 <ascii_strlower_n@plt+0x13308>  // b.any
  417738:	ldp	x19, x20, [sp, #16]
  41773c:	ldp	x21, x22, [sp, #32]
  417740:	ldp	x23, x24, [sp, #48]
  417744:	ldp	x29, x30, [sp], #64
  417748:	ret
  41774c:	nop
  417750:	ret

Disassembly of section .fini:

0000000000417754 <.fini>:
  417754:	stp	x29, x30, [sp, #-16]!
  417758:	mov	x29, sp
  41775c:	ldp	x29, x30, [sp], #16
  417760:	ret
